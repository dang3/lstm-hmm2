push
push
call
andl
push
push
call
pop
pop
movl
jmp
xor
inc
ret
mov
movl
xor
inc
call
ret
push
mov
push
push
push
push
xor
sub
mov
mov
mov
mov
and
jns
dec
or
inc
cmp
jne
cmpl
jle
mov
imul
lea
mov
xor
jmp
test
jne
cmp
jle
mov
xor
lea
mov
sub
mov
addl
and
rol
add
inc
cmpl
jb
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
leave
ret
push
mov
sub
push
push
push
call
push
call
mov
cmpl
jge
push
call
mov
mov
push
push
call
cmp
jne
movl
jmp
mov
xor
mov
pushl
mov
mov
call
pop
cmp
je
lea
jmp
call
test
je
push
push
push
call
mov
push
pop
sub
mov
mov
xor
push
pop
div
mov
mov
shr
mov
xor
push
pop
div
push
pop
sub
mov
shl
or
mov
push
mov
neg
sbb
and
push
pushl
call
mov
push
pushl
pushl
call
add
push
call
push
call
mov
mov
push
call
pop
leave
ret
int3
repz
jae
neg
jmp
push
push
push
push
push
add
push
nop
fwait
mov
lahf
int3
push
stos
jp
lret
into
sbb
cmp
adc
mov
pop
cmpsl
rcrb
daa
sbb
xchg
mov
pop
xor
loope
mov
and
cmpsl
mov
es
sub
in
push
pop
cmp
push
mov
pop
mov
jns
ss
jp
push
divl
jnp
addl
sbb
adc
xchg
daa
hlt
daa
push
push
cmp
inc
mov
movsb
pop
int
jb
and
sbb
and
adc
cmp
scas
fwait
es
mov
insb
fwait
sbb
dec
lret
pop
cs
dec
push
shll
jne
adc
add
dec
mov
orb
je
pop
mov
mov
push
inc
adc
lret
and
and
lea
ljmp
and
mov
out
fistpl
lahf
jg
rorl
and
pop
fsub
xchg
xchg
jg
ja
and
sbb
sar
repz
cli
or
pop
dec
cli
jecxz
mov
out
adc
cmc
dec
ret
jle
mov
cmp
or
stos
and
call
loop
mov
imul
push
gs
sub
loopne
mov
clc
subb
pop
popa
or
dec
cmp
dec
mov
and
inc
loopne
mov
mov
int
pop
push
stos
mov
in
movsb
pop
imul
testl
ja
cmp
pop
mov
jg
out
sti
popf
mov
fmuls
jbe
dec
push
loope
pop
mov
push
insl
adc
or
out
popf
pop
sahf
inc
pop
cld
jnp
mov
sub
ds
rcl
or
imul
inc
sub
mov
jnp
repz
jne
dec
arpl
arpl
inc
mov
sahf
inc
add
fucom
sbb
and
cli
lds
lret
clc
ret
out
sbbb
inc
push
ret
fs
dec
mov
sarl
in
ret
cmp
jmp
rcl
js
jle
jle
shll
shrl
in
pushf
jl
jg
cltd
sbb
xor
and
or
popa
dec
sbb
hlt
push
xor
fcomi
fadd
ja
sub
xchg
cld
enter
xlat
imul
inc
cwtl
jae
lahf
out
and
cld
adc
inc
bound
jae
mov
insl
sti
mov
mov
sbb
mov
pop
pop
imul
xlat
xchg
cmpsl
out
iret
or
movd
mov
dec
cmp
xchg
lcall
push
jnp
dec
leave
push
int3
mov
jge
cltd
cmc
lcall
daa
inc
mov
add
fwait
inc
jne
and
or
rorb
pop
and
dec
cltd
aaa
push
sbb
addr16
jne
jne
mov
loope
test
insb
daa
movsl
xchg
je
xlat
push
outsl
sub
jecxz
jmp
fbstp
fistl
cld
leave
mov
pop
scas
sahf
test
jb
ret
lret
dec
fucomi
jmp
sub
or
sbb
push
lods
dec
cmp
lcall
cmp
mov
xchg
sbbb
test
mov
out
push
movsb
fistpll
pop
cld
cltd
clc
leave
add
fistps
pop
pop
sub
fsubr
add
mov
es
sbb
or
push
sti
ret
adc
rorl
fwait
jne
sbb
aaa
in
rorb
push
in
cld
pop
adcb
in
movsb
push
pop
loop
inc
fs
hlt
das
cmp
xor
and
sbb
cld
inc
fs
xor
icebp
aas
or
repnz
lret
fsubrl
fwait
lret
pop
xchg
mov
repnz
adc
imul
dec
jbe
icebp
pop
sbb
or
xor
insl
imul
push
fwait
outsl
and
scas
sti
dec
rcll
gs
aam
shlb
add
into
pop
shr
jecxz
adc
jnp
xor
stos
ss
inc
push
push
jl
mov
out
test
and
xor
sbb
nop
cld
jns
movl
mov
into
mov
mov
aam
loope
ljmp
lret
movsb
les
rcr
jecxz
or
jp
xor
les
scas
lock
sbb
lds
std
cltd
mov
fs
pop
outsb
les
xchg
jno
mov
test
aas
mov
dec
notb
sbb
aam
adc
aam
faddl
sbb
ret
les
xchg
fidivl
jg
test
dec
sahf
push
cmp
jecxz
mov
jne
pop
adc
pop
test
test
add
imul
popa
push
mov
push
cmp
mov
popa
and
popl
lahf
push
jecxz
aam
cmp
sub
stc
add
jae
rep
imul
fisubs
das
pop
enter
and
xchg
or
or
mov
mov
push
sbb
pop
pop
es
adc
dec
xlat
repnz
pop
pop
dec
adc
xchg
dec
and
adc
xor
sub
jmp
test
dec
cmp
loopne
mov
pusha
sub
add
sti
adc
insb
rcrb
xorl
int
repz
mov
adc
dec
test
repz
std
and
pop
cmp
xor
cmp
es
aad
fistpll
dec
cld
jno
mov
jnp
sub
add
mov
push
xchg
jnp
adc
nop
stc
jg
lcall
jp
dec
add
outsb
les
popf
pop
das
mov
xor
cli
pop
jg
pop
sub
and
sbb
mov
push
mov
shl
repz
cld
xchg
mov
jg
andl
testb
insl
pop
popf
mov
mov
sar
or
xor
repz
movsl
stc
pop
mov
stos
pop
outsl
xchg
sbb
hlt
sub
mov
fucomp
iret
push
sbb
dec
test
inc
shll
repz
inc
or
lods
lret
sahf
push
pop
push
or
jbe
sub
cmp
xor
xor
cmpsl
lds
push
and
in
mov
rcll
xchg
je
xor
iret
sahf
xchg
mov
jno
push
xchg
lea
shll
mov
je
mov
jmp
ds
insb
loopne
xchg
lods
lods
lods
test
mov
movsl
jae
lock
adc
stc
nop
cmc
shll
push
mov
sahf
dec
lds
mov
or
or
aaa
enter
mov
subb
adc
xchg
and
xor
rcl
mov
cli
dec
call
fdivrl
adcb
es
test
mov
sub
push
pop
xchg
inc
mov
sbb
ja
cs
xor
jns
icebp
int
scas
jg
sarl
movsl
xchg
sti
push
xlat
insl
lods
adc
push
pop
push
and
lods
clc
outsb
jae
dec
rcrb
push
cmpsl
mov
incl
in
icebp
mov
push
or
mov
data16
and
cs
dec
xor
add
outsl
shl
mov
test
cmp
dec
xor
dec
aaa
and
xor
pop
jp
mov
mov
fsubrl
les
maskmovq
mull
adc
xor
jo
mov
and
push
push
inc
scas
ret
xlat
aad
test
pop
in
jbe
pop
scas
mov
std
sarb
mov
fs
jno
mov
mov
ja
cltd
stos
push
mov
and
sahf
xchg
xlat
mov
test
pop
ds
cli
lret
rclb
jbe
sub
je
mov
or
cltd
cmpsl
add
inc
mov
sti
xchg
jecxz
sahf
fbstp
push
or
mov
rcrb
jecxz
and
lret
loopne
imul
push
mov
mov
movsl
aad
adc
adc
std
cmp
aad
xor
sub
arpl
aaa
sbb
clc
adc
mov
and
sub
add
mov
frstor
or
lea
mov
add
cmp
rol
sub
push
push
cmp
fidivrs
popa
adc
mov
xor
and
pop
pusha
jl
shl
nop
les
ret
mov
xor
and
mov
dec
fbstp
idiv
lahf
stos
insb
pop
pushf
lcall
xchg
out
lods
in
lret
pop
lds
pusha
stc
add
cmp
cld
cmp
jl
sti
or
mov
xorl
mov
or
add
out
pop
or
dec
or
fs
mov
xor
jae
insl
ja
lret
mov
gs
mov
add
std
mov
sub
mov
and
int3
call
std
cwtl
mov
adc
subl
ljmp
cmp
sbb
sbb
out
jg
inc
data16
mov
insb
inc
inc
mov
push
lahf
mov
divb
and
fists
in
push
scas
inc
je
sub
cmpsb
gs
inc
dec
cltd
push
lahf
adc
pop
pop
lea
lahf
fs
inc
ds
push
and
pushf
and
xchg
dec
xor
in
leave
jae
outsl
test
add
xchg
and
mov
test
rcr
test
iret
adc
cmp
mov
jl
push
je
fisttpll
push
out
sbb
pop
xchg
push
sahf
sub
sbb
dec
icebp
fisubs
inc
push
popf
fs
xchg
sub
pop
dec
jg
clc
test
jnp
insb
cwtl
int
lret
sub
jns
xchg
popa
jge
or
testl
jecxz
dec
mov
jno
enter
xlat
scas
cmp
fisubl
popf
cmp
pop
push
fcmovb
mov
out
or
fdivrs
adc
dec
or
insl
lret
in
inc
popf
insl
test
jmp
xchg
stos
or
adc
cmpsb
test
rdmsr
cli
mov
adc
mov
mov
iret
adc
jb
xchg
cmp
jge
add
mov
or
pop
and
mov
movl
adc
push
cmp
lds
data16
sahf
mov
out
jno
ja
arpl
pop
out
push
and
and
cltd
mov
ret
stos
repnz
inc
pop
inc
sarl
jl
mov
add
in
pop
insb
cmpsb
adc
or
sbb
jl
xchg
xchg
test
jmp
shr
mov
adc
out
jle
xchg
adc
inc
pop
popa
mov
sub
in
xchg
sahf
loope
jno
mov
cmp
stos
aad
mov
mov
adc
xor
mov
imul
das
sbb
call
mov
xchg
sub
test
mov
pop
test
jb
lea
cli
scas
push
inc
loope
cld
test
push
adc
nop
lock
xchg
cmp
js
dec
or
pop
mov
mov
add
out
out
je
add
je
sahf
stos
cli
cmpsl
adc
int3
insl
jbe
ds
sub
sbb
mov
es
pop
insb
fwait
leave
cmp
fistl
mov
les
incl
ja
pop
inc
and
repz
inc
cmp
int
loop
fcmovne
popf
outsl
cmc
movl
mov
sarb
jge
cld
or
sub
add
jnp
test
and
jle
jb
ljmp
mov
test
sbb
push
test
loope
loopne
cs
adc
mov
inc
pop
int
add
and
addr16
push
hlt
mov
int3
loope
bound
and
and
push
mov
lds
mov
xchg
test
std
pop
loopne
xor
das
xchg
sarb
push
push
mov
rcr
and
fwait
in
mov
nop
sbb
cmc
add
mov
shll
add
lea
mov
aam
fcmovu
xor
in
mov
push
push
aaa
xor
cmp
mov
jp
lcall
mov
jno
lcall
and
test
sbb
add
jge
inc
imul
cmp
lahf
xor
dec
ret
sbb
xchg
cmp
sbb
cltd
mov
movsb
ljmp
push
sub
adc
xor
daa
popf
nop
es
inc
mov
cmpsb
xchg
ds
inc
mov
lods
xchg
mov
fdivrl
mov
jmp
add
jp
jecxz
sub
in
in
cmpsl
rclb
sti
add
popa
dec
js
pop
adcl
mov
and
int3
xlat
fs
and
fdivr
mov
lock
mov
ror
mov
iret
jmp
xchg
test
jp
xchg
push
add
push
ljmp
mov
test
scas
mov
cmc
test
gs
or
mov
jb
imul
fisttpl
xchg
mov
mov
hlt
cld
mov
loope
shll
pop
insb
flds
cmp
out
sbb
add
sbb
int
xor
repnz
adc
sbb
add
js
mov
sbb
aad
test
mov
cmp
enter
pop
mov
inc
add
bound
out
pop
loopne
into
pusha
cmp
popa
inc
jl
mov
pop
xchg
in
xchg
pop
call
mov
lds
inc
xchg
sbb
push
mov
cmpsb
das
lret
fcmovbe
mov
aam
ss
xorb
sub
jae
movsb
punpckhbw
jae
insb
subb
jne
fisttpll
mov
dec
popa
and
mov
mov
lds
sub
repz
lret
hlt
lea
and
jmp
add
cmp
or
and
hlt
sub
xchg
push
arpl
loop
cmp
ljmp
insb
push
fstps
add
sti
test
xchg
pop
push
jmp
xchg
cmpsb
subl
test
fstps
dec
and
movsl
into
xor
popa
lds
leave
pop
push
pop
cltd
cmpsb
inc
outsl
jae
pop
les
xchg
inc
dec
jns
mov
addr16
dec
mov
pop
dec
loop
mov
push
xor
jnp
mov
sub
int
insb
push
in
addr16
mov
or
std
cmp
jecxz
push
mov
sbb
in
icebp
jle
int
or
in
mov
popfw
rolb
inc
fcomi
ficompl
sub
sti
jno
xlat
insl
jns
xchg
push
lea
mov
add
imul
aad
rcrl
mov
mov
jb
sahf
lock
cs
mov
xchg
cmp
push
inc
mov
stc
or
dec
movsb
fwait
sub
mov
fs
dec
xchg
jo
gs
sub
push
mov
add
xor
mov
stc
sbb
inc
cmp
loope
test
jo
rcr
lret
sbb
movsl
nop
out
push
pop
inc
add
push
or
int3
inc
xor
gs
dec
jle
mov
repz
push
inc
xchg
fisubrl
aad
imulb
or
pop
dec
leave
imul
inc
jae
insb
mov
orb
imul
bnd
cmp
ljmp
sbb
ret
test
xorb
cmp
je
xchg
push
xchg
and
subl
in
xor
cltd
jmp
push
sub
adc
pop
mov
pusha
lret
sbb
add
movsl
and
sbb
sub
das
jb
mov
outsb
add
and
sbb
pop
adc
cmp
mov
mov
lods
xchg
jns
sub
xchg
dec
sub
push
push
insb
out
roll
mov
push
jge
fdivr
arpl
xor
pop
outsb
pop
inc
insl
sbb
int
sub
icebp
pop
std
out
insl
adc
je
or
clc
out
push
aam
xchg
js
test
jns
and
movsb
imul
gs
pop
push
fcmovne
lods
or
aad
inc
bound
inc
sarb
cmc
dec
into
inc
add
decl
rorb
jg
push
sbb
push
dec
cmp
mov
andb
roll
pop
inc
pop
xor
imul
int
jle
sub
aam
testl
dec
mov
stos
push
test
mov
ljmp
loop
lods
add
mov
aam
or
sbb
xor
cmpb
cld
inc
aam
xchg
adc
lret
push
loope
push
sbb
add
sbb
loop
mov
and
shrl
in
or
push
test
in
add
sub
fldcw
iret
xchg
cmp
arpl
push
aas
cmpsl
xor
popa
dec
jge
pop
cmp
in
xor
popf
mov
test
test
sub
lahf
retw
adc
push
outsl
inc
mov
insl
sub
dec
inc
xchg
enter
call
popl
scas
outsb
and
outsl
imul
add
in
imul
loopne
lods
or
sbb
mov
adc
sub
lds
mov
aas
fbstp
imul
adc
test
stc
add
arpl
aaa
mov
mov
dec
lcall
mov
ret
movsb
insl
stos
jne
out
add
pop
addr16
adc
or
add
jb
leave
mov
or
repnz
stos
cmp
or
leave
pop
adcb
push
or
sub
cltd
subl
testb
sbb
dec
xor
js
mov
aaa
jno
mov
mov
cmp
and
arpl
sbb
xchg
mov
stos
push
push
jmp
icebp
ja
sub
jp
xor
es
push
ss
shrb
sub
mov
cmp
cmp
ss
jns
shll
repnz
stc
xor
cmp
jg
and
icebp
int
stos
daa
in
lahf
es
lret
jns
cmpsb
stc
add
cmp
push
dec
dec
inc
push
idivl
mov
mov
add
test
out
lret
mov
sub
add
in
mov
sti
andps
sbb
pop
lods
add
pop
pushf
shrl
push
xchg
orl
sbbb
push
shlb
lret
sbb
mov
mov
sbb
jge
push
and
sub
push
fstpl
add
sbb
inc
adc
aas
clc
xor
dec
test
xchg
stos
dec
imul
cmp
js
fisttps
scas
add
mov
dec
jl
decb
sub
pop
lcall
stos
int3
inc
xchg
imul
pop
xor
adc
inc
rcrl
mov
fmul
push
sti
les
fadd
xchg
movsl
mov
sti
int3
xor
out
sbbb
adc
mov
add
pop
fcmovnu
jno
adcb
xchg
add
int3
test
sub
test
repnz
scas
jnp
adcb
xor
stos
adc
pop
cmpsl
in
scas
int
jmp
and
adc
sbb
insb
push
xor
ret
mov
sbb
xor
hlt
popa
adc
fs
mull
sub
dec
xorl
ja
sbb
lret
push
xor
push
pop
cltd
push
mov
xor
js
push
imul
inc
xchg
mov
scas
sbb
aas
inc
or
xlat
ds
and
fs
in
shrl
or
clc
pop
pop
aad
mov
pop
in
adc
out
lods
aaa
dec
jecxz
orl
ja
lods
add
xchg
jecxz
loopne
fimull
inc
out
mov
popa
pop
ss
test
insl
mov
imul
out
loopne
les
pop
ljmp
flds
pop
aas
mov
not
popf
mov
push
cwtl
jge
cmp
dec
frstor
test
repnz
dec
ficompl
dec
sbb
cld
or
cmpsb
insb
mov
pusha
enter
shr
push
sub
and
pushf
decl
add
cmpsb
xor
pop
fistps
sub
scas
fisubs
xchg
or
xor
fiadds
loopne
cmp
adc
in
inc
je
mov
mov
out
mov
inc
pop
lods
test
mov
mov
xlat
les
pop
ret
inc
pop
fs
aaa
imul
mov
push
push
test
test
popa
jb
push
add
or
lahf
jno
cmp
stos
xor
push
add
pop
xor
nop
loopne
loopne
orl
arpl
push
jecxz
push
push
push
fdivl
popa
mov
into
lods
sbb
dec
scas
mov
push
fbstp
and
out
insl
push
rcll
rcr
fs
cld
jg
xchg
xchg
loope
aam
cli
inc
movsb
jo
popa
sbb
add
jnp
fiadds
sbb
xchg
scas
outsb
jae
mov
add
test
jl
out
pop
or
lds
jmp
stos
sbb
jo
ljmp
iret
icebp
or
js
mov
ds
hlt
xor
jmp
sti
lods
sarb
jmp
and
or
xchg
add
jnp
cmp
out
add
jne
aad
cmc
syscall
jnp
adc
mov
icebp
pop
cmp
stos
push
push
aad
push
mul
gs
xor
and
jmp
xchg
mov
jmp
jb
mov
into
mov
out
mov
inc
inc
in
lds
call
mov
cltd
imul
jnp
push
xchg
cwtl
cmpl
testb
into
loope
mov
inc
cmp
test
mov
sbb
xor
shrb
aad
bound
sbb
repnz
insl
mov
sbb
sarb
test
sub
gs
mov
shl
icebp
mov
cwtl
or
psubq
push
movsl
mov
adc
mov
addb
sbb
in
adc
test
pop
jno
arpl
cwtl
fimull
pusha
aad
xchg
into
loopne
cltd
and
cld
fldcw
pop
jns
stos
sti
pop
cmpsl
sti
shl
cmp
cmp
add
pop
jge
xchg
push
arpl
add
jl
fwait
ss
cmp
jp
scas
add
xchg
pop
dec
jno
dec
sarl
mov
int3
fistpll
push
loop
inc
add
jge
cmp
lret
or
cwtl
popf
je
adc
insl
push
cmp
sbb
jno
adc
cmp
sub
mov
mov
cmp
mulb
enter
lds
dec
inc
pop
pop
clc
cmp
xor
into
mov
inc
xor
mov
movsl
xchg
fsubrs
xchg
pop
push
in
adc
insb
and
shrl
cltd
scas
inc
addb
testb
stos
aam
or
in
mov
rcrl
outsb
les
ljmp
push
pushf
sub
pop
jne
xchg
sub
add
or
imul
adc
mov
mov
loopne
xchg
push
xor
addr16
mov
xlat
lods
xor
in
mov
rcl
mov
push
dec
fucomip
inc
scas
mov
fs
xchg
into
rol
loopne
lret
scas
or
jge
jl
mov
push
sub
arpl
or
sti
xor
mov
std
cmp
inc
ja
inc
push
leave
add
inc
jbe
xchg
aad
sub
lds
xchg
sub
pop
ret
lret
jb
mov
inc
dec
ret
lcall
enter
cwtl
test
insb
fdivr
movsl
adc
test
sub
xor
pop
dec
sub
adc
and
hlt
pop
add
out
add
push
stos
out
mov
mov
gs
mov
fisubl
in
cmp
cld
loop
jp
daa
mov
cmp
dec
jae
cltd
adc
std
inc
mov
sub
aas
xor
scas
shl
cmpsl
addr16
filds
mov
call
cmp
or
add
stos
pop
sub
rolb
add
or
cmp
mov
jo
mov
push
mov
mov
pushf
cwtl
adc
mov
rcl
sti
push
ror
pop
pop
mov
inc
loop
jb
jg
mov
daa
aam
mov
sub
sbb
cwtl
push
ss
pop
fnstsw
cmp
das
sbb
push
iret
mov
jmp
mov
adc
les
fst
orb
test
jge
cmpsb
aam
dec
mov
rolb
popf
sub
xchg
inc
ret
idivb
aam
and
xchg
pop
cmp
mov
rorb
lods
out
imull
sub
mov
fstps
and
jns
fistl
jecxz
mov
dec
or
in
arpl
icebp
jmp
mov
jp
icebp
pop
xchg
repnz
xor
mov
cmp
test
or
add
pop
mov
ror
pop
jl
es
mov
movsl
inc
mov
lock
cwtl
int3
push
mov
leave
xor
fisttpll
inc
out
das
cmp
into
call
jae
movsl
pop
cmp
mov
ja
je
adc
cmp
imul
bound
into
out
pushl
push
pop
push
rolb
mov
mov
in
mov
push
in
scas
mov
mov
jbe
inc
push
mov
pop
rol
mov
std
int3
stos
dec
mov
mov
cmpsl
mov
lret
cltd
pop
movb
pop
in
sbb
mov
fstpt
cwtl
orl
pop
in
icebp
dec
xor
jl
push
repz
add
lds
and
popf
xchg
adc
push
or
cltd
pop
xchg
call
pop
lret
sbb
cltd
das
cld
sub
push
pop
or
adc
repnz
lds
jbe
adc
lods
imul
adc
call
cmc
sub
mov
adc
scas
lock
jbe
out
mov
jae
in
and
aas
inc
jecxz
pop
test
inc
in
movsl
add
sbb
jnp
fwait
push
push
inc
cmp
xchg
cwtl
or
sbb
cld
push
add
out
lods
lcall
in
mov
imul
fidivl
aaa
sub
popa
dec
xchg
sbb
je,pt
pop
sti
cmpsl
cmp
fists
shll
mov
les
push
mov
repnz
les
iret
mov
sahf
movsl
xorl
jbe
lods
sbb
enter
ret
es
mov
leave
push
out
jle
push
sbb
add
and
scas
arpl
aaa
shll
inc
shll
add
std
mov
jge
mov
xor
outsl
arpl
dec
push
jmp
xchg
jae
lahf
andb
in
xchg
xor
xchg
ret
not
mov
subb
mov
sbb
cmp
or
ficoms
jnp
bound
sub
arpl
lret
lods
inc
in
inc
out
outsl
filds
xchg
fnstsw
mov
faddl
or
jns
pop
iret
xchg
jl
and
jbe
gs
mov
push
xchg
mov
push
pop
out
lock
sub
add
inc
cli
test
das
xchg
orl
out
jo
jb
sbb
iret
in
fcmovu
xor
outsl
pop
jecxz
nop
ljmp
fwait
push
push
leave
repnz
clc
adcl
sahf
loop
aas
mov
and
xchg
mov
sub
cmp
mov
out
imul
mov
sbb
data16
inc
lods
push
and
out
in
scas
fistl
sbb
xor
popf
movsb
jge
jae
stos
or
or
inc
gs
xchg
and
ja
add
dec
aam
jp
das
or
icebp
xorb
cltd
stc
mov
rorb
push
inc
faddl
or
mov
xor
scas
xor
mov
test
jecxz
scas
or
or
sbb
add
insl
xchg
adc
xchg
adc
jecxz
js
xchg
mov
push
fnstsw
jb
fstpt
daa
dec
jge
lea
je
jl
cld
dec
inc
add
ljmp
data16
psubusw
push
xor
jae
mull
fdivl
sarl
sub
lcall
dec
icebp
xor
fcoms
jns
sub
sub
fistpll
fst
mov
fcomi
xchg
and
rcl
mov
pop
pop
cmpsl
jns
xor
cmp
or
xor
pop
aad
dec
lods
inc
sti
add
aam
cmpsb
inc
xchg
or
popf
dec
dec
ret
cmp
dec
jns
add
mov
test
push
ficompl
mov
hlt
out
in
sub
xchg
mov
arpl
adc
es
loopne
in
push
jecxz
dec
dec
rolb
cmc
jae
int
outsl
jmp
sbb
pop
gs
or
adc
sub
stos
or
cmpl
pop
adc
icebp
rorl
fmull
aas
mov
mov
mov
dec
notb
cmpsl
ret
add
or
sbb
xlat
mov
aam
jb
push
movsl
bound
push
insb
cmp
cwtl
jmp
sbb
outsl
sub
pop
insb
cmp
and
inc
xchg
fs
clc
sbb
sarl
lret
push
inc
sub
test
aas
adc
leave
imull
out
fcmovnb
xchg
cld
dec
xchg
outsb
and
adc
pop
mov
pop
aad
xor
jmp
or
cmp
imul
adc
loopne
jo
sub
test
aad
pop
mov
fbstp
fsubs
fmuls
aas
nop
adc
and
add
dec
push
int
stos
push
pop
pop
push
ret
loope
daa
xor
or
aad
xchg
and
nop
and
pop
aaa
icebp
mov
mull
in
xor
xchg
pop
jmp
jg
xchg
insl
jmp
ret
nop
subb
xchg
jl
call
fstps
fucom
loope
vmovaps
and
pop
mov
fdivl
inc
test
mov
imul
inc
jp
jns
xchg
sub
loop
jecxz
test
bound
and
aad
sti
push
and
in
xchg
lods
fistpl
mov
loope
sub
test
enter
je
subl
mov
mov
xchg
push
pop
inc
pop
push
cmc
les
pop
data16
out
xchg
test
pop
xchg
jbe
ja
arpl
andb
inc
je
std
or
outsb
pop
jne
push
andb
mov
in
bound
aaa
ja
sahf
or
stos
movsl
pop
lahf
lods
push
or
xchg
in
or
in
lea
adc
int
xorl
cmp
lret
scas
aam
fisttpll
clc
mov
mov
dec
pop
test
jne,pn
movsl
cmp
mov
loop
or
dec
mov
dec
out
xchg
sar
inc
mov
cmp
sub
aad
out
mov
ja
mov
sub
stc
xchg
mov
sub
fldenv
in
into
arpl
cltd
jb
xor
or
jmp
fnstsw
js
jae
mov
les
divl
adc
movsl
fwait
jle
or
push
aaa
sbb
shlb
das
test
and
loop
jge
ljmp
add
xorl
jp
jb
inc
xor
jne
cwtl
sbb
push
arpl
inc
sbb
and
sub
sbb
mov
push
rcrl
xchg
aaa
test
mov
pusha
es
or
push
sbbl
jmp
subl
sub
mov
mov
roll
cwtl
sbb
dec
data16
std
int
test
mov
dec
stc
scas
mov
cmp
mov
pop
fldl
outsl
fnstenv
mov
inc
or
push
out
mov
pop
add
mov
mov
adc
or
cltd
jb
and
push
leave
and
test
dec
ljmp
sub
push
sahf
mov
mov
or
pop
or
cli
cmp
xchg
xchg
clc
cli
movsl
dec
nop
icebp
cmp
xchg
js
jnp
inc
repz
push
pop
jecxz
shrl
hlt
lods
push
mov
and
ret
outsb
sub
stc
xchg
dec
sub
mov
fidivl
cmp
adc
mov
mulb
rorb
inc
mov
jmp
cmp
fimull
push
xchg
outsl
adc
test
int
inc
lock
clc
je
cld
sub
rcr
mov
cmpsb
adc
in
data16
outsl
lods
add
xlat
stc
insb
or
and
cmp
jnp
xchg
je
repz
imul
push
push
pop
lods
xchg
inc
int
pop
mov
out
fidivs
xchg
adc
loopne
add
insl
mov
lock
sti
pusha
out
pop
lcall
lds
pop
pop
push
ja
or
bound
xchg
jecxz
fsubr
mov
les
or
inc
cmpsb
mov
mov
jno
pushf
es
das
hlt
mov
lea
fsubr
push
xor
mov
sbb
aaa
jg
or
jmp
jne
pop
mov
iret
mul
loop
mov
xor
mov
sbb
jne
inc
in
push
fldl
push
cmpsl
aaa
pop
aad
ds
lea
cmp
fisubl
sub
or
and
pop
clc
popa
jnp
and
or
mov
fists
dec
adc
insl
aas
add
fisubrs
push
les
mov
arpl
sub
cld
dec
stos
decl
push
jmp
icebp
pop
add
stos
data16
fcmovnbe
pop
test
and
pop
lahf
aas
jbe
das
and
cmpsb
fisubl
sbb
fstl
add
jl
jge
pop
andl
lret
mov
lret
cli
or
data16
fidivs
adcl
cmp
xor
fs
jecxz
xlat
sbb
aam
pop
sarb
ret
xor
daa
shrb
mov
repz
insb
and
fimull
fsubs
popa
or
xor
insl
mov
rcll
push
adc
mov
sub
repz
mov
mov
mov
arpl
addr16
leave
jne
cwtl
cld
cmp
inc
dec
std
subb
clc
dec
sub
pop
in
push
mov
sub
pop
sbb
and
movsl
adc
mov
stos
jb
scas
mov
aam
mov
rcrl
push
test
jg
aaa
aam
add
inc
in
mov
sbb
mov
mov
pop
ds
inc
cmp
pop
cltd
ret
arpl
pop
bound
cmp
push
dec
mov
sahf
out
lcall
in
ja
iret
dec
rol
call
cmp
div
div
sbb
fdivr
scas
loopne
dec
mov
mull
xlat
mov
jle
jmp
popa
push
fsubrs
adc
sbb
sub
xor
js
jo
imul
leave
or
rclb
notb
fsubl
lock
mov
mov
sbb
arpl
push
add
inc
cli
stos
test
cld
dec
mov
inc
out
adc
jbe
jg
daa
mov
mov
mov
aad
add
mov
mov
dec
jb
xor
and
mov
mov
cwtl
lcall
xor
mov
imul
cs
into
rorl
pop
inc
xor
mull
pop
jbe
ljmp
test
mov
sbb
jmp
mov
or
stc
popa
jnp
mov
jae
lret
popa
adc
fs
in
mov
or
fnstcw
hlt
xchg
pop
mov
jmp
movsb
cs
jno
jle
ficoml
shr
cmp
pop
hlt
push
and
inc
mov
std
pop
sbb
leave
pop
enter
xchg
or
decb
mov
mov
cmp
leave
cmp
jl
imul
and
mov
scas
pushl
xchg
adcb
loop
or
xor
test
fisttps
sti
cmp
jg
xlat
shlb
add
loope
cli
loop
cmc
add
push
xchg
aaa
clc
bound
push
faddp
dec
rcl
xor
js
loope,pn
addb
jns
mov
testb
jno
jns
stos
mov
sub
sub
cmp
stos
int3
hlt
movsb
cmp
cmpb
dec
xor
mov
sub
cmp
add
mov
addb
fucomip
push
shl
push
pushf
gs
mov
cmc
hlt
jbe
imul
push
xchg
push
xor
insb
xchg
outsb
dec
mov
notb
nop
or
cld
imul
xchg
ja
int3
fldenv
fistpll
cmc
and
dec
sti
mov
push
jmp
rclb
mov
jecxz
bnd
pop
fwait
fs
fisubrl
inc
dec
addr16
sbb
mov
aas
mov
and
rorb
bound
mov
pop
popf
sti
pop
iret
loop
dec
scas
inc
xor
jb
and
jb
inc
in
ds
rol
push
daa
ret
sbb
dec
pop
std
push
into
test
sbb
js
cmpsb
scas
aas
imul
dec
inc
cmp
mov
ja
clc
xor
mov
in
mov
xchg
pop
jo
dec
cmp
in
fcmovbe
test
andl
fsubrs
cmp
arpl
lahf
mov
jo
pop
movb
js
jo
jge
pop
mov
fildll
mov
das
test
lret
sbb
into
les
dec
mov
ss
lret
sbb
xchg
lcall
push
incb
je
push
out
pusha
mov
data16
or
xchg
sub
mov
inc
dec
mov
xchg
das
dec
lock
inc
mov
sbb
cmp
jbe
mov
jle
mov
and
adc
push
enter
fidivrl
leave
cmp
cmpsl
fcompl
fwait
push
sbb
cld
shl
and
mov
or
ss
rol
and
fs
or
jle
outsb
xchg
in
mov
mov
push
push
fstpl
jge
mov
or
dec
ret
jg
adc
dec
into
aaa
stos
movsl
xchg
adc
fldcw
and
test
test
dec
ss
push
mov
ds
cwtl
ljmp
xor
jbe
jle
sbbb
icebp
pop
cwtl
in
lcall
mov
loop
loope
je
gs
in
push
xor
shlb
fbstp
mov
in
ds
xchg
std
test
cmpsb
loopne
inc
rcll
ss
ret
jno
add
lret
cmpsl
pop
ja
sub
fsubrs
jbe
mov
fwait
jmp
std
loope
mov
ss
cmpsl
addl
pop
lret
cmc
push
cmpsl
push
arpl
jno
fcoms
jnp
xor
les
ds
push
insl
in
jle
adc
lcall
add
add
fmull
test
jnp
enter
arpl
test
sbb
mov
enter
idiv
mov
in
jmp
dec
mov
gs
push
inc
movsl
inc
xchg
loopne
jne
xchg
stc
hlt
mov
sbb
leave
das
arpl
pop
cmp
mov
or
push
fs
pop
jns,pt
neg
inc
loopne
cmp
jg
or
fbld
xor
lret
and
out
daa
pushf
and
xchg
xor
fucomp
cmp
sub
rcrl
and
mov
lds
or
pop
xchg
pusha
sbb
inc
jle
or
sbb
sbb
sti
mov
add
sbb
jge
sub
inc
cmpsb
dec
mov
mov
lock
nop
mov
adc
mov
add
jnp
mov
adc
cmp
sub
cmp
loop
push
cmp
jo
ja
dec
push
push
cld
aas
xor
int
sti
ja
jae
fmul
cltd
pop
sti
jmp
and
aad
in
cwtl
pop
mov
insl
pop
add
adc
push
mov
mov
movsl
sub
loopnew
jp
mov
fcompl
and
mov
and
js
add
jo
cltd
adc
mov
push
xchg
add
addr16
mov
lret
stos
fcomip
imul
lahf
lock
xorb
jnp
clc
ret
addl
iret
push
out
xchg
adc
mov
in
mov
in
arpl
adc
lea
jle
lds
push
inc
and
cmpsl
xchg
ds
ljmp
loop
xchg
and
add
add
inc
sub
lock
std
push
scas
cmpsl
movsl
inc
push
and
jmp
cmp
cmp
sub
popf
pop
outsb
sbb
push
inc
xchg
inc
int3
cmp
add
inc
jl
mov
js
push
hlt
inc
aas
stos
xor
lcall
xlat
rol
adc
call
xchg
notl
pop
cmp
jae
xor
subl
sbb
push
fcomps
mov
les
popa
fdivrl
dec
gs
jb
push
jge
adc
sbb
jo
pusha
mov
adc
xorl
testl
loop
jo
clc
jno
xor
push
imul
frstor
test
cli
jnp
pop
and
rcll
iret
mov
xchg
dec
push
jnp
mov
jne
mov
xor
lret
insb
rorl
cmp
dec
sub
into
pop
stos
ja
mov
sub
je
fstl
mov
shrb
sbb
out
test
mov
jb
sahf
outsl
fcomp
jge
xor
test
ret
insl
jp
pushf
cmp
cmp
or
jae
inc
pop
fnsave
push
dec
jo
stc
mov
insb
aam
int
cmp
fstl
stc
xor
sub
cltd
lahf
fdivrs
pop
push
pop
add
into
sbb
lcall
testb
popf
inc
inc
mov
cli
mov
jle
outsl
sbb
jmp
mov
cmpsl
scas
cld
push
out
mov
mov
fnsave
jp
jo
mov
add
nop
push
push
cmp
jns
insl
pushf
sbb
sbb
sbb
int
ret
fisubs
xrelease
inc
sub
rolb
testb
mov
repnz
out
cli
gs
daa
pop
ret
dec
sub
mov
mov
pop
mov
aas
lods
mov
fwait
sbb
in
sub
xchg
cltd
icebp
out
xor
xchg
in
gs
ret
cmp
cs
idivb
sbb
sub
xchg
mov
pop
dec
mov
pushf
mov
dec
xor
jb
shll
jecxz
lods
inc
dec
int3
stc
fwait
out
push
es
jp
pop
cmp
add
fistps
cmp
in
mov
dec
jl
out
mov
rcrb
lds
mov
add
mov
mov
add
in
loopne
cltd
iret
je
push
sbb
call
cmc
xchg
cs
xlat
xor
shr
mov
out
stos
shrb
pop
stos
sbb
push
cmc
and
xchg
add
sub
ljmp
xchg
dec
enter
cmp
push
dec
push
xlat
repnz
xchg
cmp
lods
mov
adc
test
int3
inc
fadds
inc
stos
adc
or
push
push
enter
gs
add
cmc
bound
ret
popa
jg
lret
mov
ljmp
popa
out
into
outsl
jb
mov
xor
imul
mov
mov
dec
add
fisubrs
sahf
xchg
arpl
popf
bswap
push
pop
inc
pop
aam
mov
cltd
scas
scas
lods
mov
in
ret
jo
dec
addr16
in
jmp
inc
mov
into
pop
push
out
sbb
xor
sub
loop
sbb
adc
mov
mov
cmp
jge
and
xchg
pop
xor
pop
das
inc
cs
cs
xor
xchg
xchg
sbb
xchg
jmp
stos
jb
movsb
jno
lcall
arpl
and
subl
rorl
jae
or
popf
cmpsb
push
and
sub
inc
cltd
out
pop
sahf
enter
jle
stos
pop
and
sub
or
sbb
gs
mov
sub
js
push
repz
ret
cli
enter
add
push
sub
pop
sbb
push
xor
mov
in
call
mov
jecxz
int
movsb
pop
in
les
inc
int3
lods
pop
loop
out
push
fcmovnb
andl
and
and
sub
hlt
sarl
dec
popf
mov
mov
push
pop
push
or
scas
test
inc
sbb
adc
inc
mov
inc
jle
inc
sub
adc
inc
cld
into
cmp
push
xlat
push
mov
movsl
jns
adc
and
loope
mov
popa
xlat
pop
leave
xlat
mov
movsl
nop
lock
lods
test
mov
jg
add
popf
pop
sbb
mov
sbb
cli
cmp
das
jecxz
sbb
jne
pop
mov
cmp
adc
cmpsb
sub
xor
cmpsl
aad
ror
gs
mov
dec
leave
fisttpl
pop
sti
mov
sbb
dec
jle
lcall
adc
xchg
and
call
jmp
mov
pushf
mov
btc
adc
inc
or
add
or
xchg
test
add
aaa
js
sarb
and
out
pop
aaa
hlt
sbb
mov
mov
pushf
add
fwait
subl
push
leave
aad
jg
xlat
popa
jmp
jl
mov
xor
in
xchg
pop
sub
in
popl
jnp
rcrb
roll
mov
xor
fildll
shl
xor
aad
imul
mov
jmp
test
jl
lods
push
xor
mov
xchg
xor
sub
lea
adc
pop
bound
dec
fmull
xor
mov
push
bound
frstor
mov
push
pop
jno
insl
xor
sub
xchg
sub
or
js
cmpsl
or
fidivl
lahf
mov
mov
fildl
adc
inc
popa
xchg
inc
pushf
test
shll
int3
push
popa
lea
cmp
and
inc
mov
repz
rolb
dec
aaa
fnsave
and
sub
jecxz
jnp
jge
push
dec
repnz
shrb
ret
sarb
mov
adcl
mov
cmpsb
out
ja
pop
pushf
sbb
push
cmp
sbb
out
in
test
xor
pop
sub
xlat
push
lea
js
push
dec
cwtl
mov
add
dec
add
das
cmpl
scas
hlt
jmp
push
call
mov
jle
sahf
xchg
jns
xor
adc
scas
clc
sub
test
mov
cld
data16
subl
fldenv
adc
dec
scas
stos
testb
dec
pop
bound
sbb
sbb
mov
icebp
data16
jmp
ljmp
or
pop
ds
in
jl
xchg
out
cmp
mov
push
sub
push
sbb
mov
xchg
std
inc
xchg
popf
or
es
nop
and
fidivrs
mov
jmp
ja
mov
movsb
or
pop
repz
xchg
js
test
mov
push
out
sbb
pop
jnp
push
sbbb
add
inc
push
inc
and
sbb
lcall
jno
inc
in
mov
pop
pop
pop
aaa
aam
movsb
in
and
pusha
adc
mov
arpl
add
push
movsb
jns
call
sbb
in
mov
mov
sub
ss
cmp
sub
push
movsl
xor
mov
imul
mov
inc
call
fsubrl
adc
test
mov
imul
pop
mov
inc
mov
fiaddl
repnz
rol
dec
or
cs
inc
mov
xor
daa
stos
inc
ss
lods
mov
mov
jg
jl
jp
lret
out
xchg
cltd
inc
test
push
mov
sub
mov
sbb
shlb
xor
scas
in
cltd
jge
cmp
pushf
xor
jbe
sahf
fildll
ficompl
sub
pop
xchg
adc
xchg
pop
jno
stc
push
notl
pop
adc
jb
inc
cmp
popf
sub
inc
jae
popf
lds
scas
mov
dec
mov
push
ss
pop
and
sbb
or
cmp
shlb
out
mov
out
or
add
nop
cmp
loope
cs
mov
jl
fwait
ds
out
jecxz
jne
subl
arpl
xor
add
cmp
jmp
add
aaa
inc
movsb
add
jnp
dec
jge
lods
clc
jns
out
std
sti
aaa
pop
jne
out
push
or
arpl
aad
dec
cltd
or
mov
loope
enter
out
or
push
popw
add
mov
mov
push
or
fiaddl
insl
mov
push
xchg
dec
clc
jle
dec
mov
pop
lcall
jae
mov
enter
fisubl
leave
sub
mov
push
sahf
push
hlt
stos
decb
pusha
mov
or
cwtl
mov
test
in
inc
adc
sub
adc
enter
sbb
or
mov
jl
push
pop
mov
movsb
sub
pop
mov
adc
icebp
sbb
jge
dec
repnz
iret
nop
rcrl
jnp
loope
adc
pop
out
inc
andl
cmp
or
enter
jo
sbb
je
lret
fsubs
addb
mov
push
popf
dec
mov
mov
call
cli
lret
in
push
cs
jns
dec
in
mov
mov
add
fnstcw
mov
inc
cmp
aam
in
or
mov
insl
dec
pop
cmpsb
out
insb
pop
movsb
jbe
adcl
ja
in
pop
mov
divl
adc
xchg
dec
mov
push
push
pop
jecxz
or
in
jmp
sarb
and
mov
xchg
xor
pop
jns
sub
std
xor
push
sahf
add
push
insl
adc
out
push
aam
sbb
jns
addb
ljmp
dec
movsb
lea
jmp
out
pop
rol
popf
or
push
inc
jg
inc
mov
add
aam
call
xchg
xor
outsb
sub
mov
shrb
dec
xor
repz
aad
shl
push
dec
popa
jmp
adc
sub
dec
jo
add
scas
js
lds
push
xor
dec
mov
cmpsb
mov
cmp
and
sahf
adc
mov
sub
push
xchg
repz
push
fsubrl
push
mov
popa
jge
or
lret
adc
movsb
mov
outsl
cmp
decl
jge
sub
pop
lahf
push
pusha
sbb
adc
jle
movsl
daa
inc
lahf
les
cmpsl
fs
dec
test
hlt
cmp
lahf
pop
jno
pop
cs
loopne
insl
fistl
repnz
loope
push
lds
push
pop
bound
fldcw
mov
jae
inc
js
inc
sub
jnp
in
add
lahf
lret
push
fidivs
mov
out
mov
nop
test
sub
jge
jmp
push
iret
mov
and
cmc
mov
mov
adc
and
ss
mov
testb
push
cld
cmp
mov
fcoms
xchg
mov
pop
xor
add
mov
cli
mov
pop
dec
adc
sbb
cmp
in
sbb
push
enter
mov
cmp
andl
adc
sti
xlat
imul
scas
aad
jo
xor
fldl
xor
imul
enter
dec
inc
dec
arpl
ficompl
push
insl
jmp
mov
pop
shlb
xor
loope
xor
cmp
cwtl
xchg
jo
add
shlb
sub
push
cmp
fistpll
push
inc
out
dec
iret
cmpsw
lds
mov
lcall
dec
fwait
xchg
shrl
fnstsw
addl
pushl
shlb
scas
js
mov
dec
inc
cs
cltd
std
push
dec
fdivrp
outsl
mov
inc
and
cmpsl
cmp
mov
fs
das
adc
dec
jno
lock
mov
jge
jbe
movsb
push
data16
jl
outsb
nop
jae
out
inc
mov
push
xor
add
mov
std
fdivrs
jo
pop
sbb
pop
cld
cmc
mov
outsl
outsl
or
leave
jle
in
add
adc
xor
imull
arpl
std
les
pop
pop
testl
jp
mov
inc
aaa
lds
and
sarl
lret
mov
pop
jns
adc
psrld
lahf
rcl
stos
fwait
xchg
icebp
sub
rorl
dec
and
or
cmpsl
lret
idivl
xor
cmc
mov
sbb
aas
insb
loop
inc
push
or
mov
mov
cmpsb
lods
rolb
push
insb
fiadds
adc
clc
ss
and
dec
repz
xchg
rcr
std
adc
fcoms
or
popf
data16
ss
dec
mov
dec
xchg
in
rorb
inc
xor
sbbl
jno
es
repnz
sub
insl
inc
pop
mov
paddq
enter
ds
push
cmpsb
mov
shlb
inc
cmpsl
jecxz
xchg
inc
mov
adc
mov
cmp
inc
out
xor
orb
mov
mov
xchg
add
mov
hlt
dec
into
cmp
rcll
aas
push
repz
divb
jbe
pop
push
add
mov
repz
sub
jle
pop
ret
jbe
lret
lea
daa
pushf
pop
lahf
sbbl
or
fstl
fdivs
ret
sub
cld
cmpsl
in
cmp
lods
jmp
iret
mov
sub
insl
out
lea
add
inc
fwait
xor
lret
stos
lret
fdivl
add
psubusb
fwait
inc
int3
xchg
imul
and
pop
dec
cltd
ss
mov
add
cmp
adc
loope
dec
addr16
add
push
mov
add
int
mov
les
ss
mov
lahf
or
seta
push
inc
out
inc
xchg
mov
lret
lcall
jae
incb
mov
ffree
enter
mov
jl
test
pop
and
cli
lock
in
adc
xor
sar
dec
or
pop
cwtl
into
mov
xchg
push
leave
pop
mov
cmp
incl
in
xor
test
pop
push
cs
cmpsl
inc
fdivs
xor
icebp
fnsave
imul
lods
ret
into
shll
mov
in
inc
insl
ret
lret
cmp
jge
adc
loop
sbb
lcall
sub
ss
in
sub
mov
adc
and
test
cmc
adc
add
inc
push
movsl
aam
incb
ret
xchg
xor
lods
daa
loop
xchg
adc
aad
adc
add
in
mov
push
cli
or
xchg
inc
push
lahf
out
or
xor
lcall
mov
stos
cltd
sbbb
shr
dec
and
xchg
icebp
pop
xchg
sub
mov
mov
test
pop
sub
les
mov
add
imul
repnz
inc
pop
xchg
fs
lcall
xor
aas
js
lret
popf
ret
mov
push
pop
sbb
adcl
or
test
pop
xchg
mov
cmp
das
sbb
push
dec
ret
cmc
ret
xor
xor
jnp
cmc
and
xchg
push
aaa
dec
mov
adc
test
movsb
aam
test
int
test
mov
aam
mov
ljmp
mov
mov
or
dec
pop
adc
sbb
xor
out
inc
pop
and
loope
rcrb
mov
push
ficompl
sbb
call
ret
outsl
cltd
sbb
push
negl
xchg
mov
cli
lea
ja
jp
orb
fst
pop
loop
addr16
cli
cmp
xchg
mov
cmpsl
xchg
test
dec
mov
push
sysexit
subl
adcl
push
push
inc
icebp
lret
ljmp
dec
sbb
loop
sub
sbb
or
dec
dec
ljmp
mov
or
nop
mov
test
cmp
mov
cmp
cltd
mov
ljmp
ss
shrl
mov
cld
xchg
test
sbb
push
into
mov
sub
jmp
jge
es
pop
test
je
mov
or
add
fstpt
nop
and
test
mov
ja
mov
sub
xlat
mov
sub
cmp
dec
mov
pop
xchg
lock
stos
cmp
cmp
xchg
jae
cmovb
sahf
dec
lret
iret
mov
aam
xchg
cld
xchg
adc
add
xchg
cmp
cmp
rcrl
ljmp
pop
sbbb
loopne
cld
mov
fnstsw
loope
push
int
out
ficoms
cmp
pop
mov
clc
mov
push
adc
negl
scas
jns
out
adc
push
push
test
mov
dec
push
rcll
or
int3
xchg
mov
xchg
add
mov
mov
test
int
and
shlb
test
mov
aad
add
bound
xorb
jl
imull
pop
popf
lahf
pop
add
pushf
add
and
mov
mov
mov
and
hlt
sub
add
xchg
inc
inc
push
push
filds
jae
adc
jo
push
or
push
sbb
inc
jg
stos
xchg
movsl
cs
pop
jb
xchg
ret
cmp
xlat
pop
xchg
or
pop
ficoml
lods
sbb
movsb
push
cltd
scas
insl
push
popa
mov
push
mov
sbb
push
stos
push
lret
mov
dec
fidivl
call
sti
lret
mov
inc
std
add
loop
jne
push
xchg
inc
cs
loopne
dec
int3
stos
mov
cmpsb
xor
push
shll
repz
mov
fmuls
mov
and
sub
or
ljmp
xor
ret
dec
mov
dec
cwtl
inc
and
fimuls
xchg
pop
inc
inc
and
cmc
or
movsl
in
sbb
mov
xchg
jb
es
cmp
xchg
mov
adc
lods
or
and
jbe
lds
mov
cmp
and
sar
xor
jbe
jp
sbb
and
mov
loope
insb
inc
xchg
add
aaa
mov
pusha
test
in
cmpsb
lds
add
xchg
sub
ja
mov
cltd
in
cltd
xchg
add
mov
mov
lret
test
jmp
cmc
mov
mov
adc
mov
jecxz
mov
dec
lea
ret
jp
fnstcw
jmp
mov
scas
gs
rcrl
fs
xchg
dec
mov
pusha
les
cwtl
sahf
mov
scas
xor
dec
test
sub
xchg
adc
add
mov
xchg
xor
inc
add
cmp
lret
daa
mov
clc
jbe
cli
sub
popf
movsl
testl
sub
mov
sbb
into
lcall
scas
lahf
push
mov
out
pop
lods
cltd
mov
mov
ds
movsl
pop
push
les
mov
sbb
fistpll
iret
cmp
test
xlat
cmpsb
les
inc
adc
les
mov
test
xchg
xchg
adc
dec
xchg
ficoms
insl
inc
jl
jnp
cmp
loopne
stos
pop
adcb
mov
daa
pop
or
and
mov
imul
imul
fyl2x
xchg
mov
inc
pop
jb
iret
adc
dec
mov
jnp
rorl
xor
push
arpl
lods
xchg
pop
push
sarb
insb
leave
nop
rolb
fiadds
xchg
dec
loope
ljmp
inc
mov
dec
ds
mov
call
xchg
xor
test
dec
add
pusha
xchg
mov
lods
mov
add
icebp
movsl
addr16
daa
clc
loopne
mov
mov
inc
loop
ret
jg
mov
cmc
and
inc
cltd
fcoms
add
andl
push
inc
mov
cmpsl
data16
lcall
fsubr
sub
call
dec
pop
dec
adc
mov
jecxz
test
jmp
psubsw
pushf
and
cmp
sub
ljmp
or
pop
clc
dec
sbb
cmpsl
mov
lds
clc
mov
popa
sub
call
std
mov
hlt
push
xor
mov
or
ja
cmc
gs
inc
xor
sub
xchg
and
je
stos
mov
arpl
adc
lea
xchg
mov
sbb
test
pop
sub
push
jbe
mov
enter
aaa
js
jecxz
mov
repnz
sbb
pusha
mov
repnz
and
or
mov
test
inc
sbb
sub
jg
fisubrl
lahf
pop
pop
ret
mov
fadds
rcrb
iret
call
or
xchg
stc
jg
xor
scas
xor
jg
xor
xchg
insl
lret
sbb
cmp
cmpsb
arpl
push
movsb
cmp
push
orl
sbb
rclb
sahf
popf
jno
lahf
out
adc
and
cmp
jbe
jge
cmc
push
pop
lcall
cs
push
sti
push
insb
negb
mov
mov
adc
dec
push
dec
jnp
scas
mov
orb
sahf
ret
jp
ljmp
sub
hlt
aaa
push
aas
mov
enter
dec
sbb
nop
xchg
or
xchg
pushl
divb
mov
ds
lods
push
popa
inc
sbb
fists
mov
es
ret
shlb
sbb
out
adc
pop
icebp
arpl
dec
dec
sub
fsubs
and
movsb
xchg
iret
dec
testl
and
cld
sbb
bound
fsubrs
mov
mov
lret
add
cmpsl
lods
adc
xorb
pushf
scas
fisttpll
in
pushf
xor
jno
push
jo
lds
shrl
cld
rolb
push
movsl
adc
push
jecxz
xor
pusha
ljmp
inc
adc
ja
or
rcrb
mov
cmp
xchg
lods
lahf
sub
mov
in
pshufw
or
push
in
jo
shll
in
out
ja
push
aas
mov
cmpsl
dec
lods
stos
mov
xchg
jle
xor
sbb
cld
mov
sub
pushf
outsl
dec
ret
loope
clc
loopne
jg
scas
scas
jge
sub
into
inc
add
or
movl
stos
jns
mov
add
mov
sbbb
lcall
lock
notb
and
xor
sbb
mov
inc
cmpsb
jae
out
xorl
mov
outsl
push
jo
rcr
adc
ret
ja
in
mov
pop
stos
sub
icebp
jmp
sub
rcrb
sarb
inc
add
pusha
scas
hlt
pop
pop
shr
mov
mov
jl
scas
push
out
nop
cmpl
lods
sahf
cmpb
push
iret
idivb
int3
dec
xor
and
cmp
clc
cmc
fcmove
jg
sti
or
mov
mov
les
cmp
ficoms
cmovns
add
and
pop
sub
leave
lcall
cmc
xchg
adcl
nop
ret
sbb
push
sbb
and
sahf
ret
push
cmc
or
mov
pop
adc
sub
cmp
sahf
aas
dec
inc
fs
push
popf
dec
ret
inc
inc
pop
test
out
jmp
xor
adc
out
adc
mov
pop
into
sarl
inc
cmp
aas
int3
jmp
push
daa
sahf
in
push
mov
fadds
jbe
add
xchg
jecxz
xchg
jp
popa
bound
ljmp
xor
xchg
fisubs
std
mov
jecxz
repnz
in
ja
in
xchg
pop
push
and
adc
cmp
jge
add
xchg
pop
leave
xorl
bound
lods
or
negl
movsl
push
sti
mov
stos
push
mov
jp
inc
mov
ret
xchg
repnz
push
cmp
repz
pand
xor
add
out
jp
popa
jne
mov
mov
inc
sbb
adc
xor
mov
xor
dec
ret
fisttpl
cwtl
ss
jbe
inc
cmp
dec
roll
sub
aaa
xchg
jg
arpl
cmp
mov
add
movsl
shlb
xor
in
movsb
and
push
scas
leave
cld
lret
mov
and
cmp
movsb
xchg
rorb
sarb
fiaddl
xor
pop
sbb
mov
sub
dec
mov
inc
divl
dec
mov
lock
pop
sub
leave
mov
pusha
pop
inc
dec
and
cmp
arpl
nop
jb
in
stos
sub
jmp
pop
es
push
les
push
push
pop
je
cli
fldenv
filds
xor
pop
call
mov
test
cwtd
push
enter
repnz
filds
leave
xchg
jno
sub
lock
fwait
lret
roll
rcll
je
lret
imul
shr
or
inc
fstpl
dec
xor
sub
inc
inc
cmpsb
jle
shlb
cmp
jecxz
xor
push
cs
loopne
sarb
mov
mov
dec
mov
pop
shl
and
cmp
dec
shll
into
adc
sti
push
popa
push
mov
pop
mov
repnz
addr16
cmc
jecxz
stos
mov
pushf
xchg
push
cmp
out
ret
xor
adc
cmc
clc
ret
adc
cmp
jmp
addl
push
pop
clc
xchg
iret
adc
ret
stc
call
jp
mov
mov
lods
add
js
pop
xchg
pop
shr
xor
push
mov
mov
shll
mov
pushf
xor
xchg
fisubrl
bound
cmpsb
dec
push
lods
xor
ret
xchg
lcall
xor
jbe
cli
repnz
outsb
pop
shll
shrb
dec
dec
cmpsb
mov
mov
sub
test
mov
pop
mov
sbb
mov
sub
mov
pop
or
or
cmp
sbb
cmpsl
dec
rorb
ret
stos
sub
sbb
sub
in
je
mov
sbb
mov
pushf
pop
not
jle
stc
das
fs
adc
into
fs
mov
es
mov
es
pop
sub
push
stos
mov
sbb
dec
mov
pop
scas
popf
pop
clc
iret
push
cmp
mov
cmp
mov
aaa
lret
aaa
lret
pop
cmp
sbb
sub
cltd
jbe
pop
sbb
inc
outsb
ljmp
adc
or
hlt
loop
adc
out
daa
fmuls
cmpsl
subb
into
sbb
inc
js
scas
jp
xchg
mov
dec
xor
mov
mov
mov
mov
dec
push
stc
cmpsl
popa
push
sar
xchg
sti
adc
adc
inc
jmp
pop
movsl
jl
jbe
fisubrs
in
add
outsb
fnsetpm(287
arpl
setnp
add
incl
repz
pop
mulb
adc
in
cli
lods
shll
shrl
jno
sbb
push
mov
imul
or
sar
cmp
test
clc
movsb
jnp
imul
push
jbe
stos
lods
inc
lds
das
js
mov
push
xor
aaa
mov
into
sbb
icebp
jb
adc
imull
cmp
nop
inc
push
out
call
cli
jg
xchg
lcall
and
push
cwtl
mov
fcoml
and
loope
leave
dec
jecxz
test
out
les
std
or
mov
ds
and
ds
sbb
jno
gs
dec
shll
adc
cwtl
mov
or
icebp
mov
das
cmp
hlt
inc
lahf
mov
lea
jmp
aas
add
inc
mov
dec
mov
push
cwtl
push
jl
push
adc
test
ss
sub
inc
xchg
xor
testb
shr
lock
pop
add
push
shl
jnp,pn
aaa
push
cli
cmp
loope
js
hlt
test
sbb
cmp
mov
lret
sbb
pop
and
fldcw
popa
mov
rolb
stc
xchg
outsb
push
lahf
push
lcall
cltd
add
mov
xchg
jp
xor
add
cmp
sub
pusha
gs
imul
mul
mov
or
outsl
sbb
int3
or
sbb
cmp
add
insb
mov
lcall
add
fidivs
addr16
push
xor
insl
xor
or
loop
push
pop
push
sbb
inc
movsb
repnz
fisubl
mov
pop
ja
popa
idivb
mov
rcrb
adc
adc
push
adc
sarl
imul
adc
dec
xchg
pop
ss
mov
jle
push
imul
jbe
out
scas
bound
and
icebp
mov
rcl
stos
sbb
jge
mov
imul
and
es
and
arpl
pop
scas
sub
mov
mov
cwtl
fs
rorb
in
mov
test
enter
adc
movsb
outsb
in
inc
xor
outsl
xlat
or
mov
xor
add
les
out
inc
loop
sub
xor
mov
mov
jle
xor
cmpsl
lock
daa
cmp
imul
mov
std
sbb
sbb
push
add
xor
jp
jecxz
xor
fistl
jne
xor
fdivr
fldenv
jle
sbb
or
aad
jl
and
and
add
cs
and
rcr
pusha
aas
std
adc
fs
lret
inc
fcomi
mov
out
jl
aam
inc
fistpl
addl
push
mov
pop
and
cmpsb
testl
push
jp
add
outsl
sub
loop
jne
rolb
pop
js
ss
andl
ja
sub
fidivrs
sub
push
lahf
aam
in
or
mov
test
cmpsl
lahf
cmpsl
push
je
les
cli
js
pop
mov
dec
rclb
scas
lock
and
and
xor
dec
imul
pushf
jbe
hlt
andl
add
mov
mov
cs
rol
push
jecxz
ss
dec
mov
cli
jne
js
jge
or
daa
btr
in
push
cli
pop
out
sub
test
ficoms
lea
xchg
dec
add
rcll
push
mov
fdiv
and
xor
mov
push
arpl
mov
cmp
loope
add
cmp
or
movsl
pop
push
pop
cltd
adc
or
pop
sti
jl
pop
insl
rclb
daa
pop
movsl
scas
jnp
popf
int
fwait
xor
das
xchg
or
rcr
fsubl
mov
lock
mov
mov
mov
outsb
test
push
sbb
lcall
push
movsb
jg
jnp
mov
imul
xor
xchg
loope
out
inc
in
xchg
dec
xchg
mov
dec
fisubs
dec
shrl
or
mov
mov
xor
add
iret
dec
inc
fucomi
cmpsl
sub
insb
sub
icebp
push
adc
test
cltd
int
dec
mov
imul
push
mov
push
sbb
dec
mov
inc
cs
cmp
jmp
mov
mov
bound
dec
jge
pop
mov
inc
sub
fs
mov
mov
test
cmpsb
int3
jae
mov
jle
or
hlt
fnstcw
xor
add
adc
xlat
stc
out
enter
pop
jns
mov
fwait
addr16
sti
fs
std
pusha
cmp
cmpsl
mov
adc
fnstenv
mov
push
fwait
lret
lret
out
add
mov
lds
inc
sbb
test
jle
sahf
and
xchg
xchg
insb
gs
xchg
push
sti
cli
jg
push
add
movsl
rol
dec
ss
cmp
sahf
xor
hlt
adc
mov
outsb
push
lret
imulb
popw
int
xlat
adc
add
rolb
xchg
stc
scas
pop
mov
leave
sub
das
dec
aas
lret
or
pop
xchg
cltd
lahf
mov
sub
lods
xor
sahf
cmp
adc
jnp
jecxz
fcoml
ja
arpl
push
cmp
pop
hlt
xor
fsubs
ffreep
mov
out
sbb
and
int
ljmp
mov
imul
aad
call
popf
and
out
stos
adc
inc
sahf
xchg
and
or
sub
out
sbb
js
fwait
pop
xor
imul
add
adc
xor
dec
inc
mov
jbe
dec
pop
xchg
cmpsl
outsl
in
unpcklps
cmp
loopne
stc
mov
add
ror
xchg
dec
out
scas
dec
in
out
adc
xchg
cld
sti
std
sub
push
pop
pop
icebp
das
push
test
out
fldenv
lret
loope
and
jno
mov
mov
loop
pop
mov
clc
jmp
sbb
cmc
call
std
dec
dec
in
sub
add
cmp
lret
data16
pop
cmp
andl
or
jno
dec
and
in
dec
and
cli
pushf
jb
rcr
out
enter
ret
insl
out
scas
loopne
aaa
push
icebp
push
mov
dec
in
mov
clc
sarl
cli
je
mov
xchg
xchg
push
je
je
jb
inc
imul
rep
mov
fwait
jmp
mov
insl
stos
decl
mov
into
insl
push
int3
xchg
xchg
or
fwait
loop
dec
dec
pop
data16
mov
stc
fs
ret
je
nop
subl
sarb
call
das
mov
and
insb
cmc
mov
xor
aad
ja
addr16
call
aaa
hlt
pusha
pop
and
ret
in
inc
mov
xor
cltd
je
and
hlt
clc
pop
xor
push
stos
push
mov
repnz
scas
adc
sbb
sub
cmpsb
js
pop
loope
arpl
and
in
mov
lods
jmp
fxch
pop
fnstcw
xchg
cmp
mov
es
imul
and
mov
push
mov
fiadds
adc
pop
xchg
mov
sar
xor
jmp
inc
inc
lds
push
lcall
jno
push
cmpl
add
inc
flds
aaa
int3
xlat
popa
cli
pop
xor
shll
movsl
add
orl
nop
xor
xor
rcl
cmp
ror
mov
inc
mov
loop
fwait
mov
movsl
xchg
outsl
inc
and
and
dec
shlb
or
mov
xor
lahf
pop
inc
sbb
aad
out
addr16
pop
push
add
and
or
dec
loope
nop
sbb
inc
rcrl
sbb
push
mov
mov
negb
add
cwtl
outsl
arpl
icebp
ja
add
cmp
popf
adc
les
cmpsl
jg
inc
add
xchg
jle
xchg
in
mov
and
sbb
lods
pusha
shlb
jp
pusha
call
arpl
pushf
outsb
in
cltd
sbbb
pop
inc
or
push
rcll
add
push
cmpsb
push
fs
dec
xlat
aas
leave
lcall
inc
test
clc
imul
xchg
repnz
mov
clc
mov
pop
or
sbb
xor
movsl
sbb
mov
or
data16
or
rorl
sbb
in
mov
sbb
pop
fisttps
jmp
cs
jl
ficomps
imul
xor
cmp
cld
repnz
aaa
cmp
loopne
cmp
in
sub
xor
js
dec
addb
push
jns
or
pop
sub
pusha
xor
adc
ffreep
and
lock
jp
cmp
inc
push
popa
arpl
stos
jae
or
pop
into
pop
mov
ljmp
lds
and
xor
sbb
bound
loop
and
jne
shlb
xlat
xchg
sbb
adc
insb
shrl
jne
push
ret
fidivrl
xchg
pop
jne
adc
test
xlat
insb
loop
orb
rclb
pop
outsl
sub
adc
jmp
mov
dec
or
mov
or
popf
adc
fisttps
xchg
adc
cmpsb
loope
push
inc
add
fldenv
arpl
xor
fdivrp
cmp
jno
nop
sub
jmp
sub
or
add
or
xor
jo
or
clc
and
fsubrs
mov
mov
mov
and
push
loopne
xchg
push
or
pop
rcl
push
adc
leave
pop
sbb
sahf
pop
pop
inc
test
adc
xlat
and
push
cmp
rcr
stos
or
push
int
mov
and
inc
std
and
add
outsb
pusha
jmp
sahf
outsb
xchg
jecxz
mov
dec
jne
rcll
dec
lahf
or
push
lahf
test
mov
xlat
mov
sbb
xor
sbb
sbb
iret
std
cltd
jno
mov
mov
sub
mov
sub
in
or
xor
dec
sbb
pop
cli
xlat
sbb
fistpl
cmpsl
pop
dec
jae
jecxz
fidivl
sub
dec
jp
push
cwtl
test
xor
stc
das
cmp
jne
cmp
adc
mov
cmc
test
xchg
gs
sub
push
popa
cmp
xchg
hlt
shl
fidivrl
cmp
mov
cltd
pushf
repnz
int
pop
shr
push
test
cmp
inc
sbb
stc
pop
rorb
pop
mov
mov
or
loope
test
ljmp
cmpsl
insl
sti
xchg
cmpsl
cmp
add
pop
sub
in
sub
stos
inc
jmp
sahf
pop
lea
mov
outsl
sub
cmp
cltd
mov
out
push
push
jbe
daa
and
dec
mov
push
loopne
mov
xlat
dec
cmp
outsb
sub
xor
sub
mov
fs
pop
sbb
lahf
sub
mulb
cli
ljmp
jecxz
ret
inc
lds
xchg
xchg
add
outsl
aad
pop
push
jge
mov
aas
xchg
mov
mov
daa
cmpsb
cmpsb
cmp
cld
xor
pop
cwtl
inc
add
xchg
sub
fnsave
sub
shlb
out
cmp
add
cltd
xlat
cltd
push
jns
push
jle
xchg
into
push
xor
iret
xor
ljmp
dec
outsb
sbb
mov
rol
outsl
mov
mov
sub
data16
in
aam
sbb
sbb
mov
add
int3
jnp
aas
into
cmpsb
imul
sbb
mov
push
add
add
jns
rcrb
cmp
xor
jnp
and
mov
mov
jb
jns
in
js
hlt
push
mov
subb
lods
popa
jno
aas
or
dec
sbb
in
push
int
je
into
push
bound
test
mov
push
sbb
filds
push
or
int
rcrb
jp
mov
movsb
les
outsl
inc
jge
in
fadds
pop
pop
cmpsb
mov
sti
ficoml
fcmovu
in
xchg
mov
xlat
pop
test
mov
sarb
mov
cmp
and
jno
repz
mov
mov
and
and
jg
icebp
xchg
popf
test
mov
iret
movsl
sub
adc
sub
xorl
scas
sbb
cmp
adc
inc
loopne
std
jl
movsl
pop
cli
pop
sbbb
inc
push
pusha
andl
aaa
enter
sbb
mov
sub
inc
adc
sub
sub
add
repz
icebp
int
cmp
test
add
int
jg
out
xchg
loopne
sub
mov
add
stos
xor
arpl
push
test
mov
adc
push
and
out
and
stos
xor
dec
push
xchg
xor
ficoms
xor
test
cmp
or
lret
pop
aam
pop
pop
lods
in
adc
mulb
es
inc
sar
xor
and
test
pushf
arpl
dec
outsb
dec
in
xchg
data16
lret
les
mov
mov
mov
and
xor
push
adcl
lcall
or
mov
pop
bound
sub
fists
imul
cmp
and
into
mov
lock
jg
pusha
call
addr16
jbe
push
mov
and
aaa
cmp
stos
or
lea
add
in
push
adc
jecxz
sbb
cmp
insb
jge
ret
xchg
fimuls
push
jns
add
and
jns
nop
ss
or
bound
enter
das
lods
inc
js
and
scas
ss
cmp
fcoms
fisubl
xor
lods
fcmove
or
mov
hlt
sbb
cltd
xchg
jg
pop
lods
flds
jg
addr16
jl
bound
dec
inc
xlat
out
xor
pop
aad
push
sub
gs
or
popa
inc
scas
jmp
push
scas
and
cmpsl
cmp
mov
and
cmp
mov
lahf
dec
leave
xchg
mov
adc
sub
data16
or
fcoml
push
pop
xchg
mulps
sbb
mov
fwait
testl
outsb
and
inc
fnstenv
push
outsb
sub
test
stos
xchg
addr16
jo
add
int3
test
push
jbe
into
xchg
cmp
inc
aas
xorb
les
sbb
das
mov
imul
cmpsb
aad
subl
out
in
mov
pop
sbb
pop
cli
mov
test
push
pop
rcl
push
xor
test
add
xchg
inc
sbb
push
call
jbe
sub
xchg
mov
inc
mov
shl
mov
push
mov
push
sbb
pop
inc
jnp
fs
mov
and
ja
sub
sub
xchg
xchg
int
test
repnz
inc
mov
adc
subl
cmp
push
fsubs
cmp
outsl
icebp
xlat
lock
mov
or
pop
andl
or
push
push
testl
and
idivb
in
jp
fstps
ret
popf
or
fsubs
pop
cmp
mov
push
mov
lret
sahf
mov
pop
aam
inc
xchg
repnz
push
adcb
push
or
mov
ja
mov
jns
fsts
xchg
mov
push
fidivl
loop
arpl
in
pop
js
mov
pushf
sub
mov
cli
popf
inc
adc
repz
jns
es
loope
jp
movlps
cltd
scas
pop
adc
popa
les
popa
movsl
lret
aas
inc
jmp
test
ficoml
ljmp
cmp
cmp
pop
cmpb
jae
stos
mov
pop
sub
mov
addr16
adcb
sbb
mov
inc
movsb
and
push
inc
nop
mov
jb
push
dec
cmp
dec
cmp
or
adc
cmpps
mov
inc
loop
mov
fadds
push
clc
out
dec
dec
shrl
pushf
adc
fwait
test
fisttpll
loope
jnp
sub
jge
pop
add
pop
pusha
neg
in
icebp
add
popa
cmp
xor
out
adc
movsl
pop
jne
in
mov
dec
jp
adc
ljmp
outsl
ds
mov
add
dec
adc
test
outsl
push
xor
jns
pushf
jmp
inc
mov
arpl
or
int3
push
inc
mov
les
add
repnz
xchg
and
call
lahf
gs
xchg
pusha
fs
sbb
push
rclb
aam
out
xchg
pop
js
pop
les
xchg
mov
imul
xchg
mov
test
and
push
call
inc
adc
lahf
sub
jmp
pop
cmp
cmpsb
sub
sti
lcall
mov
pop
aad
pop
test
push
call
lea
xchg
xchg
mov
cmp
or
lock
inc
or
jno
je
insl
bound
xorl
es
mov
movsl
pop
inc
cmp
mov
inc
xchg
dec
inc
cmp
cld
cli
pushf
xchg
pop
jb
fstpl
bound
or
cmp
sbb
add
daa
and
jl
mov
pushf
xchg
mov
mov
sub
test
sub
add
mov
pop
dec
ds
add
pusha
mov
push
sub
adc
jmp
add
lahf
outsb
repnz
mov
pop
mov
dec
fidivl
fsubrs
stc
loop
xchg
jno
sbb
fst
mov
xchg
mov
mov
cmp
sbb
pop
ds
addr16
xchg
test
pop
pop
dec
jb
mov
icebp
cmpsl
sbb
mov
push
or
add
pop
shr
sub
sarl
scas
leave
lods
sbb
pop
mov
jne
or
adc
or
ljmp
mov
inc
push
ror
xchg
push
push
mov
lret
ss
aaa
cmc
jae
in
add
sub
leave
cld
sbb
xlat
daa
pop
and
sarl
stc
pop
mov
ret
test
xor
fwait
and
push
cmpl
sbb
out
lods
xchg
test
test
andb
pop
aas
mov
mov
adc
insb
mov
and
or
xchg
cmp
xchg
xchg
shrd
mov
pop
sahf
shr
jb
adc
sbb
push
mov
inc
enter
pop
pop
pop
test
xlat
inc
or
pop
sti
lods
dec
cwtl
jge
xor
fdivs
sbb
ficoml
sbb
jg
mov
mov
sbb
aas
iret
jnp
aaa
sub
ret
xor
mov
pop
stos
or
mov
dec
vmread
cmp
fdivrs
jl
push
fs
or
dec
icebp
pop
xorb
mov
xchg
popa
pop
dec
pop
push
or
cmp
push
xchg
in
xchg
mov
add
sbb
fmulp
mov
mov
xchg
pop
daa
std
and
cmpb
aam
inc
xor
rcrb
and
lods
sbb
lret
out
mov
aas
adc
aad
or
xchg
or
leave
push
jp
pop
inc
sbb
cld
mov
sbb
std
stos
and
outsb
mov
dec
sarb
or
fildll
and
lahf
add
cltd
inc
mov
jno
pop
in
mov
adc
dec
jecxz
lea
lock
push
sub
adc
fs
cmpsl
jbe
cmp
inc
adc
and
sahf
dec
push
lret
insb
jge
in
sbb
imul
and
add
loopne
out
lods
push
and
cmc
cmpsb
es
mov
sbb
sub
pop
decl
or
inc
js
mov
call
jo
adc
xor
add
dec
pop
push
adc
xorb
push
adc
mov
xor
lods
adc
data16
cmpsl
imul
nop
xchg
push
pop
sbb
sub
mov
mov
push
popf
hlt
and
mov
lods
lock
std
pop
jns
mov
repnz
cmp
mov
loope
cmp
lcall
adc
scas
push
nop
rol
jp
xchg
xor
pop
addl
hlt
dec
or
jle
fsts
ljmp
adc
adc
sbb
add
dec
mov
dec
adc
loopne
inc
dec
xchg
jo
test
mov
mov
xor
pop
cmp
inc
push
push
popf
in
push
nop
inc
sbb
ret
mov
jns
movsl
repnz
shlb
pusha
rcrl
pop
jg
mov
mov
stos
jl
insl
mov
lods
lret
cs
andl
rcrl
jl
iret
lods
jg
mov
push
push
and
xor
push
jo
xchg
les
sahf
xor
push
lods
stos
ja
push
leave
sbb
pushf
jl
subl
clc
sti
pop
jg
mov
mov
mov
jne
into
sub
sbb
jg
outsl
sbb
inc
rorb
lods
xchg
les
push
cmpl
aam
lods
int3
aaa
dec
pusha
ds
into
rclb
dec
dec
movsl
or
dec
divl
and
push
lock
ja
fadd
lods
xor
jno
lcall
stos
mov
cmp
xchg
lret
xchg
mov
xor
cmp
jmp
jne
pop
xchg
dec
fisttpll
xchg
or
pushf
mov
push
push
lds
ficoml
sar
jnp
or
pop
bound
and
rolb
mov
orb
nopl
xchg
dec
call
mov
sbb
cwtl
inc
ret
into
pop
jp
ret
push
imul
imul
xchg
ret
dec
or
mov
mov
mov
mov
or
scas
adcl
in
loopne
or
jmp
push
in
lret
push
out
sub
xchg
test
mulb
or
mov
push
cmp
mov
cltd
mov
cwtl
filds
dec
push
add
add
xor
add
and
jae
add
or
arpl
adc
mov
popa
mov
pushf
popf
cmpsl
sahf
insl
adc
xor
push
mov
int
mov
xchg
or
std
xor
jg
sbb
repz
sub
fstl
ret
inc
add
les
into
add
popa
xchg
xchg
mov
aaa
int3
std
insb
mov
stos
jl
in
push
subb
and
loope
mov
es
sub
fistps
push
sarb
cmp
ja
or
jp
mov
mov
or
push
mov
mov
imul
inc
sub
ljmpw
or
fisubrl
push
mul
cwtl
lea
mov
fcos
in
scas
lret
jl
sbb
inc
in
lods
mov
dec
lret
gs
xor
ljmp
xor
mov
imul
bnd
push
sbb
sarb
push
scas
gs
in
mov
leave
lods
cmpsb
into
adc
data16
inc
xor
in
popa
outsb
leave
push
add
in
ds
or
lret
stos
je
icebp
xchg
into
lods
aad
dec
or
xchg
call
mov
mov
leave
xor
pop
imul
xor
mov
push
push
dec
rclb
push
popf
xacquire
adc
pop
xchg
adc
pop
call
mov
push
dec
xchg
xor
or
mov
jno
mov
or
stos
or
jg
mov
outsb
pop
sbb
or
aad
loope
rcrl
inc
dec
out
jnp
mov
xor
xor
fistpll
xor
je
in
test
jae
cvtps2pd
fldcw
daa
dec
mov
add
cmpsb
andb
ja
idiv
repz
mov
call
pop
nop
mov
repz
test
incl
cmp
adc
sub
pusha
pop
out
and
in
and
lods
into
sub
cmp
cmp
out
sti
sbb
sub
jbe
cltd
mov
mov
sub
mov
inc
test
das
into
lea
jbe
pop
xchg
int3
pushf
lea
test
cmp
mov
int
dec
sbb
shrb
shlb
rcll
inc
lcall
ja
jns
sub
sub
add
xchg
paddsw
inc
aad
add
push
scas
inc
adc
shll
jo
icebp
dec
mov
pop
inc
cld
aam
stc
inc
shll
inc
aad
adc
aam
sub
out
xchg
mov
adc
mov
jmp
lea
inc
rorb
xchg
shrl
jb
add
lods
xor
mov
imul
cmpsl
sti
pop
stos
cs
sub
das
lds
and
test
stc
jp
lods
pop
pop
jbe
jb
leave
jnp
in
mov
js
je
add
test
pop
divl
mov
std
pop
mov
popf
imul
cs
outsb
icebp
ss
hlt
cli
jmp
push
loop
ror
xor
into
or
fs
in
sub
add
add
inc
cli
dec
out
in
sti
jo
js
ret
cmp
or
adc
pop
ja
sub
aam
xor
pop
mov
sbb
push
lret
push
fldenv
adc
add
repz
inc
adc
dec
repz
mov
lret
loop
sbb
push
push
sbb
dec
jae
div
test
icebp
cmp
ret
jno
mov
cmpsb
dec
cwtl
gs
add
inc
lods
in
pop
loop
outsl
stos
aas
daa
push
mov
movsb
jmp
mov
imul
call
cmpsl
xlat
adc
adc
adc
jo
fldcw
cmp
add
shll
das
loopne
push
add
jne
inc
cs
or
ja
mov
out
mov
xchg
hlt
stos
ss
andl
xchg
or
stos
push
lcall
aad
cmp
icebp
pop
mov
and
pop
mov
jnp
imul
daa
and
out
xchg
test
push
cltd
sbbb
mov
push
mov
ret
add
repz
add
mov
in
mov
inc
push
mov
arpl
mov
mov
inc
outsb
add
outsl
fisttpl
scas
in
lcall
cmp
jg
js
fcomps
enter
test
and
xchg
gs
cmpsl
or
and
in
push
insb
out
mov
push
sbb
push
arpl
inc
cmp
sarl
rcll
mov
jne
jb
xlat
xor
xchg
icebp
mov
movsl
push
lods
cltd
sbb
xor
xchg
adc
in
sbb
bound
jg
push
xor
cmp
andb
mov
jb
es
fnsave
fcoml
loopne
adc
push
lret
pop
push
or
push
stos
cli
addr16
mov
xor
or
in
xor
mov
stc
cwtl
outsl
dec
jge
lahf
out
xchg
and
jp
mov
stos
adc
aas
das
daa
ljmp
mov
or
out
mov
add
add
dec
ja
inc
mov
cld
adc
push
mov
push
sub
cld
cmpsl
adc
cmpsb
shl
mov
inc
andl
xorb
add
lods
out
rorb
push
inc
rcl
lret
idiv
outsb
xchg
push
bnd
notl
loop
pop
adc
popa
aad
dec
dec
dec
movsl
and
mov
mov
cmc
insl
xor
repnz
mov
fwait
stos
xchg
xor
jne
pushl
xor
or
sub
adc
jg
mov
inc
filds
mov
loopne
rorl
sub
cmp
test
pop
sti
push
pop
jecxz
mov
and
push
rcrb
push
loop
clc
rorl
cs
mov
cld
shrl
cmpb
mov
nop
rolb
and
jo
xchg
and
ds
sbb
or
aas
adc
inc
imulb
or
xchg
push
test
xor
pop
pop
push
sub
pop
lret
xchg
xchg
cmc
jecxz
iret
roll
je
aas
mov
add
test
mov
sbb
call
aaa
and
xchg
mov
inc
cmp
xor
cmova
mov
xlat
cld
subb
imul
inc
scas
aad
sub
loopne
jp
in
lods
popf
adc
inc
shlb
fucom
cli
pop
mov
xor
outsb
stos
call
insl
and
sbb
jp
jge
mov
dec
xor
ds
dec
push
cltd
ret
xchg
into
sbb
xlat
aas
mov
push
mov
pop
sbb
popf
jg
ror
mov
scas
stos
push
les
subl
insl
pop
xchg
sarl
xchg
sub
mov
add
rorl
adc
cmpsb
mov
rolb
mov
inc
aad
ret
xor
xlat
mov
xchg
jecxz
push
jl
clc
fstpl
push
mov
int
xchg
dec
xor
addb
lahf
stos
mov
jnp
outsl
dec
loopne
in
dec
sbb
jecxz
xchg
popa
mov
lcall
arpl
mov
push
cmpsl
fistpll
out
mov
xlat
data16
push
and
xchg
in
pop
jno
mov
lods
stos
insl
inc
fldcw
pop
aam
mov
push
sbb
aad
stc
daa
imulb
test
or
scas
adc
push
add
cmp
mov
xor
push
ja
jecxz
cmp
insb
aas
outsl
shlb
pextrw
jmp
mov
aas
push
ds
push
dec
scas
rcl
cmc
add
das
divps
lds
adc
test
in
jne
cwtl
mov
pop
adc
pop
dec
jne
cs
pop
pop
mov
mov
inc
xor
push
icebp
push
dec
adc
and
adc
lcall
push
or
loope
and
cmp
ficomps
sbb
cmpsb
jmp
adc
lds
xor
jne
xor
and
adc
ficoml
dec
js
movsb
push
cmp
sbb
aas
je
mov
mov
mov
lahf
inc
xchg
icebp
mov
js
std
mov
push
pop
mov
jo
adc
mov
pop
add
mov
jne
decl
xor
mov
int3
inc
in
xor
setg
sbb
inc
mov
cld
push
cli
and
inc
cmp
dec
es
icebp
adc
daa
cli
xor
cmpsl
push
xchg
lods
call
lods
push
push
jecxz
fldt
adc
or
or
pop
inc
daa
jno
sub
roll
push
mov
inc
pusha
cmp
fisttpl
in
adc
imul
adc
lahf
jge
fnsave
sbb
outsl
sub
addl
stc
jb
add
movsl
icebp
arpl
popf
call
push
sti
iret
push
orb
lods
imul
mov
hlt
out
out
loope
enter
addr16
sub
cmc
jns
xlat
and
stc
sub
out
mov
mov
jno
arpl
lods
jp
push
lret
inc
or
leave
rol
subb
jmp
fstpt
mov
ljmp
dec
xchg
aaa
test
rolb
push
push
imul
or
outsb
push
ja
pop
sub
in
cmc
pop
xor
aas
inc
cmp
lret
cs
add
inc
call
lahf
shll
in
in
out
jmp
pop
inc
pushf
push
inc
adc
lahf
mov
fadds
into
les
sbb
xchg
scas
std
iret
sub
jl
mov
add
sbb
scas
hlt
add
lds
mov
inc
sbb
mov
ret
mov
popl
rorb
in
pop
jecxz
fiadds
mov
lret
jmp
xlat
dec
sub
add
scas
dec
frstor
sbb
jb
popf
lods
adc
aam
pop
jns
xor
mov
mov
rcrl
lods
sbb
jb
add
inc
iret
mov
lcall
jp
and
dec
pop
outsb
mov
movsb
mov
pop
lea
push
test
xchg
insl
sub
xchg
pop
out
mov
sbb
int
dec
jns
dec
jno
xor
add
andl
js
call
pusha
xchg
pop
adcb
dec
fwait
hlt
xor
xchg
add
sub
pusha
and
xchg
lods
dec
push
aas
sahf
cmp
dec
lcall
jb
mov
xchg
pop
sub
pop
push
adc
jmp
xchg
push
mov
icebp
xor
push
or
loope
roll
aam
stos
movsl
loopne
adc
or
call
loop
mov
mov
stos
or
adc
enter
das
or
cmp
pop
int
jp
sub
jmp
aaa
lahf
mov
enter
mov
mov
mov
fidivrl
xor
ret
lods
and
out
ret
sti
fwait
cmpsb
out
pop
ret
jg
jmp
aam
cltd
roll
int
inc
and
shll
pop
in
push
mov
out
enter
ss
lods
mov
insb
shl
pop
fdivrl
sub
pushf
mov
movsb
xor
cmp
lea
std
lret
out
arpl
jl
cld
scas
out
jle
testb
add
popf
shrb
loopne
mov
repz
and
jo
cmp
jns
xlat
xchg
fstp
daa
arpl
fisttps
int3
and
iret
push
xchg
scas
hlt
cmpsb
or
leave
ss
sti
fwait
test
in
shrl
push
pop
les
cld
cmpsb
fwait
sub
divb
repz
push
jge
xor
dec
out
loopne
jl
aaa
inc
jge
out
out
mov
push
xchg
clc
popf
rclb
inc
inc
cmp
mov
filds
jae
mov
loopne
rol
sub
or
sub
leave
jecxz
and
aas
pop
inc
cwtl
popa
inc
les
addb
stos
add
sti
cmp
lret
cmpsb
inc
jnp
aaa
out
push
orl
ss
fists
es
nop
cli
xchg
sub
cmp
daa
mov
inc
or
sub
repz
test
sub
cmp
jns
pop
and
mov
rcll
sub
push
sub
outsl
lods
sub
aad
inc
jp
dec
push
in
inc
or
jae
inc
fisubrl
lcall
stos
jae
and
jmp
test
hlt
pop
pop
sbb
mov
test
ficoms
adcl
mov
cltd
pusha
in
push
mov
inc
cs
cmp
shlb
test
or
sub
lods
and
push
cwtl
xchg
aas
add
test
jge
inc
movsl
mov
sub
jne
add
aaa
ds
test
out
pushf
push
or
dec
int
sub
or
shl
mov
pop
jecxz
fidivrl
dec
aad
mov
pop
lds
and
lcall
lods
sub
movsl
mov
cli
inc
mov
pop
adc
push
jb
pusha
push
out
mov
push
cmp
mov
cmp
sti
stc
std
inc
push
jns
sbb
ret
addr16
lcall
mov
mov
mov
fstl
mov
mov
sub
jbe,pt
and
rol
out
pop
mov
mov
shl
mov
sub
lds
jbe
test
sbb
mov
inc
mov
testl
inc
shl
mov
rorb
shl
ds
push
es
or
hlt
je
jl
pop
sub
cmp
filds
adc
call
cmpsl
and
mov
pusha
mov
dec
and
mov
inc
jnp
mov
ja
popa
loope
fdivrl
movsb
aad
mov
and
enter
fmull
xchg
add
pop
push
sub
sbb
nop
mov
push
push
aad
xor
iret
rcrl
mov
loope
stos
sbb
shlb
jnp
shl
add
in
cld
jae
pushf
sub
call
inc
arpl
int
dec
rcrl
loopne
or
pop
mov
testb
sub
mov
mov
rcll
aas
cmp
cmp
js
aam
push
negl
out
mov
sbb
test
xchg
fnstcw
nop
push
loope
or
xor
xor
mov
pop
pop
out
negl
add
jle
jecxz
pop
stos
xor
in
aaa
inc
jo
fstps
dec
and
xchg
mov
loope
cbtw
jne
dec
jbe
iret
jp
add
jmp
pop
lea
fnstenv
mov
test
jmp
gs
mov
cmp
shrb
in
cli
dec
cmp
push
sti
arpl
std
cmp
rorl
cmp
movsl
push
sbb
repz
sahf
push
lcall
xchg
imul
orl
rcr
imull
loopne
add
iret
decl
fsubrl
test
in
jo
in
dec
int
test
or
clc
cmpb
push
jl
and
test
cltd
outsb
or
sbb
int3
mov
jbe
xlat
push
in
adc
xchg
or
xchg
addr16
and
mov
sbb
sbb
in
imul
mov
push
and
ret
push
gs
fs
jmp
neg
push
ja
xor
pop
in
enter
loope
jl
sub
add
push
aam
pusha
pop
mov
les
enter
push
pop
fstpl
orb
cmp
lods
hlt
fnstcw
push
push
push
xchg
rorb
inc
mov
pop
add
xchg
mov
xor
fld
in
fists
jno
out
mov
icebp
loop
inc
push
pop
fsubl
ret
movsb
xchg
dec
and
insb
movsl
adc
mov
hlt
loope
sub
sub
xor
mov
sbb
into
sbb
xchg
inc
and
dec
or
call
sahf
mov
test
insb
lret
pop
xchg
pop
notl
inc
ja
outsb
lahf
insb
push
mov
in
lahf
pushf
negl
fistpl
push
aas
stc
cmc
inc
and
insl
xor
rorb
add
jb
dec
mov
xchg
mov
sbbl
fstps
std
outsl
add
mov
fidivrl
or
push
jne
jae
mov
icebp
xor
andl
cmp
dec
mov
into
push
sbb
push
xchg
in
cmp
fiadds
jp
jp
repz
cli
lahf
add
xchg
loop
sarb
repnz
testb
or
dec
lahf
pop
gs
xor
xchg
aas
daa
out
xchg
in
jg
out
add
cs
push
movsb
or
push
mov
and
fs
insb
nop
xor
insl
jns
xchg
dec
in
ja
daa
jbe
insl
int3
arpl
leave
lods
dec
gs
out
mov
lods
lahf
dec
dec
rcrl
pop
adc
je
xchg
cwtl
mov
cmpsl
and
dec
cmpsl
adc
pop
cmp
jb
push
je
xchg
jmp
lods
ljmp
lock
es
xor
jne
inc
adc
scas
push
inc
icebp
add
out
adcb
stc
xchg
repz
mov
lods
lock
dec
out
inc
sub
lcall
pop
xor
iret
std
xor
repz
mov
rclb
test
icebp
adc
js
pop
movsb
mov
inc
lret
int3
pop
sub
scas
xor
ret
mov
insb
add
subl
cmp
and
loope
fcmove
mov
in
xor
pop
cmp
jo
and
sub
pusha
mov
jns
loopne
mov
inc
andb
jns
lock
movsl
xorl
jmp
rorb
lret
call
inc
insl
or
xchg
adc
fdiv
inc
aas
push
orb
add
or
or
xor
xchg
sbb
adc
lock
lea
sarb
or
fnsave
xor
pop
rcl
shl
mov
inc
push
out
imul
je
je
sahf
jnp
sbb
out
cmpsb
mov
and
scas
nop
pusha
mov
push
js
loope
push
pop
sbb
lods
adc
push
or
add
stos
cmp
push
inc
ds
in
mov
fdivrs
fucomp
cvtpi2ps
or
mov
cwtl
jnp
push
insl
xor
rcrb
sbb
and
mov
sahf
and
sub
in
insl
mov
jne
jecxz
cmpsl
cwtl
add
xor
dec
pusha
inc
fdivs
or
dec
jb
or
adc
ret
loop
add
cmp
pop
mov
push
stos
nop
inc
es
ds
fdivrs
xor
mov
stos
xchg
and
js
shlb
xchg
data16
pop
sti
out
repz
stos
repnz
negl
mov
incb
cmp
sbb
jbe
add
out
les
adc
dec
ror
imul
and
loop
xchg
push
jbe
scas
inc
mov
adcl
out
jge
rclb
inc
dec
or
mov
xchg
inc
push
add
scas
jne
fwait
mov
jo
sti
adc
daa
mov
icebp
dec
std
pop
addr16
pop
pop
pop
dec
jnp
rol
rcrb
bound
add
test
cmp
cwtl
sbb
negl
ret
repnz
sbb
cmp
pop
nop
lods
sub
ds
mov
in
daa
into
mov
inc
sbb
jecxz
test
ss
stos
cld
daa
movsl
test
push
push
mov
lods
pop
jmp
sub
repnz
xchg
fstps
mov
call
add
inc
inc
mov
push
or
or
outsb
std
ret
mov
fcomps
shl
fsubrl
ds
por
mov
rorb
je
mov
mov
cs
sub
sbb
loopne
jns
shll
in
mov
pop
sbb
test
int
xchg
mov
pop
cmpsl
rorl
or
xchg
add
test
mov
mov
and
jo
fildll
mov
call
incl
lds
dec
xchg
stc
loopne
mov
scas
out
xchg
addl
inc
sbb
push
mov
inc
sbb
lcall
mov
orl
dec
shlb
jb
mov
jnp
cmpps
or
xchg
and
adc
dec
sub
mov
cmpsl
cmpl
jecxz
test
adc
inc
mov
add
mov
mov
mov
mov
rolb
jnp
push
dec
shr
into
aam
push
mov
xchg
fwait
jge
gs
sub
scas
outsl
rol
pop
cli
mov
xchg
jmp
insb
mov
inc
or
loope
or
and
movsl
push
and
ret
cld
inc
stos
sbb
addl
xchg
ja
icebp
incb
mov
cmp
sub
cmp
xchg
inc
or
push
outsb
dec
out
mov
and
imull
cmp
xchg
mov
mov
das
cmp
inc
push
xor
inc
repz
jo
add
push
pop
fidivs
push
into
sbb
js
call
ret
sub
jb
rcll
xchg
mov
aad
mov
add
mov
std
xchg
cmp
xchg
imul
jo
xor
add
mov
ja
sub
adc
pop
dec
leave
inc
test
push
cmp
fldcw
idiv
insl
mov
push
mov
fdivrl
mov
popa
stc
addl
xchg
iret
adc
jg
ljmp
or
xchg
inc
add
and
pop
xchg
cmpsb
js
js
pop
in
je
out
aas
add
push
cmp
loope
inc
or
movsl
add
enter
subl
cli
outsl
out
inc
mov
fdivs
arpl
mov
mov
mov
pop
xor
mov
call
ds
pop
inc
aaa
sar
push
cwtl
sub
push
mov
xlat
mov
lds
xor
xlat
and
pop
cmp
push
push
int3
fnstsw
xor
sbb
push
rcl
push
inc
mov
inc
sbb
jae
out
out
insb
pop
or
lds
sub
arpl
pop
adc
xchg
jmp
repnz
push
loope
dec
add
mov
rcr
add
test
cmp
xchg
jns
fstl
fs
or
in
std
popa
pop
ds
sbb
sti
add
test
hlt
lret
mov
pop
sub
rclb
mov
in
test
mov
inc
orb
mov
xor
aam
pop
es
jno
cmp
mov
in
mov
jb
in
std
jp
in
sti
addl
jo
pop
xchg
or
addb
xlat
aad
mov
jp
pop
cs
add
sarb
xchg
add
sar
inc
inc
cltd
sbb
sub
push
jbe
rcl
jns
xchg
lods
xlat
int3
inc
les
cmp
push
push
sub
or
out
fcmovnb
jle
mov
adc
outsb
icebp
dec
dec
lods
sti
jmp
test
inc
and
arpl
cltd
addr16
and
lods
mov
out
add
inc
in
rol
rcr
ss
inc
testl
cld
pop
cs
cmc
mov
pop
cmc
lea
or
cmp
stos
das
push
aam
mov
push
jae
movsb
mov
jb
out
sbb
lcall
iret
mov
cmpl
loope
jle
pop
mov
push
insb
nop
xchg
dec
fs
or
lods
jg
and
fstl
ds
js
push
pop
data16
aas
inc
and
inc
cmp
inc
pop
push
and
addr16
leave
dec
ja
test
sub
in
or
or
adc
movntps
inc
fidivs
sbb
mov
push
sbb
jecxz
dec
add
mov
mov
maskmovq
testl
imul
jl
jae
mov
jb
sub
mov
or
add
and
mov
mov
dec
xchg
cmpsl
inc
pop
and
inc
cmp
cmp
jmp
dec
ret
jl
in
add
ret
xor
sub
pop
lds
xchg
divb
sbb
popa
ja
xorl
jl
popa
inc
out
fwait
testl
fdivl
mov
popf
negb
add
cmp
addb
aas
mov
stos
jge
std
inc
out
add
mov
mov
scas
lcall
pop
mov
movsl
out
loopne
fidivs
dec
cld
js
sbb
push
jp
push
push
mov
cmpsl
loopne
cltd
mov
xchg
xchg
mov
imul
fcoms
mov
cmpsl
je
cli
ja
xor
cs
daa
lea
mov
loope
dec
mov
cmp
stc
push
data16
stos
pop
fisubs
mov
sbb
sti
mov
sbb
int3
cmpsl
jecxz
int3
repnz
ret
mov
mov
sti
jnp
popl
in
jmp
jl
mov
in
stc
daa
scas
test
sub
and
ljmp
xor
sbb
les
xchg
or
xchg
cmp
insb
xor
in
dec
push
sbb
ret
xchg
jbe
test
out
clc
add
cmp
shr
dec
icebp
js
movsb
out
cwtl
jne
in
mov
icebp
repnz
fsubl
dec
sti
fcoms
xor
cmp
stos
decl
cmpsb
add
rcll
xchg
xchg
faddl
movb
sbb
fsubs
outsb
daa
fnsave
inc
hlt
test
dec
fmul
iret
jle
xchg
or
clc
bound
add
jmp
mov
in
mov
xor
add
cmp
out
cwtl
outsb
inc
pusha
imul
pusha
cmp
xor
dec
je
adc
add
xor
and
inc
or
push
mov
ja
stos
div
jecxz
inc
or
pop
scas
add
sbb
cs
sub
add
mov
or
jecxz
mov
adc
jle
stos
das
call
mov
sbb
sarl
fcomps
or
imul
push
mov
or
test
lcall
sub
push
cmpsb
push
shll
cs
nop
subl
test
inc
mov
rcrl
stc
add
je
and
add
mulb
gs
pop
movsb
inc
pop
adc
dec
fdivrs
arpl
add
mov
stos
femms
ret
cmp
inc
cmp
cmp
ret
repz
mov
and
inc
rcrl
clc
stos
sbb
or
sbb
or
mov
xchg
fnstenv
dec
dec
add
outsl
popa
adc
dec
iret
sbb
xchg
xor
add
cmp
cld
cmp
sub
shll
dec
daa
adc
xchg
mov
sub
add
adc
dec
inc
pop
xchg
sbbb
loop
dec
jge
pop
dec
or
or
mov
push
ljmp
xor
leave
push
shr
loopne
bound
clc
fisubrl
jle
inc
and
test
aad
icebp
rcrb
lods
xchg
adc
cmp
dec
mov
leave
cmp
test
mov
mov
ljmp
cmp
jge
mov
fisubrs
cmp
and
test
sbb
cltd
ss
pop
inc
jbe
xchg
dec
out
jns
push
mov
fmull
xchg
or
and
adc
dec
dec
mov
stos
dec
jnp
cmc
dec
gs
push
test
lds
out
flds
xor
jo
lahf
into
mov
ss
ret
xlat
leave
pop
dec
add
mov
mov
jbe
iret
add
imull
mov
movsb
push
inc
sti
mov
arpl
cs
es
jmp
sahf
mov
mov
clc
xchg
push
stc
jmp
mov
arpl
ret
pop
cmp
push
xchg
aas
fsubs
movd
sbb
iret
aas
sub
test
xchg
push
sbb
xchg
add
es
inc
pop
test
daa
in
adc
and
addr16
sbb
stos
cmpsl
cmp
cmp
mov
fs
jg
mov
jae
in
scas
pop
loope
jl
push
push
scas
mov
int3
icebp
stc
js
push
mov
ja
inc
add
jo
jmp
orl
jnp
bound
enter
cld
dec
dec
in
xor
push
lea
jge
inc
jmp
push
push
and
sub
cmp
push
jle
xor
sbb
nop
mov
xlat
loope
inc
push
cmp
out
cmp
mov
dec
loopne
nop
lahf
push
xor
sbb
in
stc
push
outsl
inc
cwtl
adc
pop
push
mov
rcr
in
adc
jmp
fidivrl
mov
push
pop
jno
inc
repz
pop
std
lahf
xchg
and
pop
xor
outsb
sbb
jo
rcrl
leave
daa
test
xchg
shl
or
sar
pop
inc
sub
cmp
xor
pop
jb
pop
xchg
je
aad
stos
cmp
lret
imul
xor
pop
scas
cmpl
push
jns
neg
adc
lahf
ljmp
push
repnz
gs
mov
mov
push
arpl
sbb
loopne
dec
xchg
cwtl
mov
ret
mov
xor
stc
pop
jecxz
mov
push
cwtl
xchg
icebp
cmp
jae
xchg
clc
mov
xchg
pop
jg
jne
or
imul
dec
cltd
mov
pop
jle
scas
mov
jnp
cmpsb
adc
gs
hlt
fwait
jg
mov
fcomps
stos
pop
cmp
ljmp
ds
out
jns
pushf
pusha
pop
xchg
shll
adc
pop
pushf
scas
lret
push
or
xchg
sub
clc
and
pop
sbb
cmpsb
ret
leave
xor
iret
ss
cmp
add
cmpsl
inc
xchg
and
cmp
mov
clc
mov
sbb
and
stos
ljmp
sti
mov
sub
cmp
out
fsubp
sbb
and
sbb
pop
mov
inc
in
and
aad
fists
xchg
add
enter
xchg
mov
arpl
jp
mov
xchg
or
mov
pop
mov
sub
jg
lock
sbb
mov
pop
int3
repz
inc
jns
mov
fimull
pop
or
sub
fwait
mov
xor
mov
out
mov
and
movsb
data16
mov
inc
fiaddl
sub
add
inc
xchg
enter
ret
add
jns
xlat
and
cmc
shlb
pop
std
fs
sbb
jns
jno
cmp
mov
mov
mov
das
or
cltd
or
sbb
aam
nop
dec
and
in
fsubr
mov
pusha
lahf
xchg
mov
lods
test
js
ret
push
dec
inc
mov
jbe
push
stos
push
jl
mov
fsubrl
jbe
test
xchg
pop
jae
cmp
adc
adc
cli
jb
pop
gs
jl
or
adc
out
xchg
enter
jmp
mov
fsts
out
popa
push
test
adc
lcall
and
dec
pop
mov
aaa
test
pop
imul
push
in
js
out
push
sbb
xor
jp
dec
add
push
stc
faddl
arpl
leave
std
testl
xchg
lahf
cwtl
pop
loopne
outsl
jns
adc
stos
lcall
std
sub
and
test
popa
mov
scas
and
inc
test
and
inc
push
and
mov
in
scas
es
test
lods
lret
or
insb
and
pop
stc
lds
std
sub
and
push
push
stos
dec
jb
dec
xchg
inc
fsts
call
dec
adc
fbld
arpl
pop
arpl
cmp
ret
js
ja
sub
and
int3
pop
dec
fsubrl
ror
xchg
loopne
mov
imul
loop
adc
inc
rcll
outsb
inc
add
test
ljmp
movsb
jne
shlb
pop
jbe
cld
outsb
mov
or
mov
gs
jge
orb
rcrb
push
sbb
ss
or
subl
shrb
fmul
cwtl
out
out
mov
mov
mov
iret
fidivrs
adc
fdivs
sub
test
setle
or
add
mov
xchg
mov
fdivs
pop
xor
cld
push
inc
cltd
xchg
jno
push
dec
cmp
pusha
push
or
lcall
mov
aam
loop
mov
sbb
test
shlb
icebp
rol
sbb
loop
add
add
lret
movsl
adc
and
dec
mov
jg
push
jb
enter
pop
jl
mov
nopl
mov
mov
mov
aad
lcall
loop
sti
xorb
inc
jae
popf
mov
jns
insl
push
fcmovbe
jecxz
iret
jge
or
ret
mov
cmp
pushf
inc
ds
icebp
push
cmpsb
insb
sbb
ja
mov
dec
and
push
int3
lods
jmp
jg
rclb
and
xchg
mov
scas
adc
inc
js,pn
repz
mov
popf
daa
dec
push
popf
jb
flds
lods
lahf
adc
jp
negb
sbb
xor
ret
inc
jo
fisttpll
pop
popf
mov
pop
pop
push
and
outsl
sub
jge
sub
push
cmc
movsl
sub
scas
sbb
sbb
addr16
add
jnp
or
pop
xchg
or
aam
mov
jl
or
ja
icebp
mov
sub
mov
mov
ret
mov
xchg
mov
jae
jg
sbb
or
mov
in
push
mov
pop
xchg
or
addb
push
pop
lods
adc
dec
jmp
andb
push
std
test
cmc
xchg
mov
cmp
es
popf
cli
les
and
popa
xchg
xchg
in
xor
jae
mov
jnp
movl
push
ret
out
dec
sub
cmp
lea
cmp
cmp
pop
imul
sbb
rorl
cmpsb
cmp
sbb
adc
cmp
gs
sub
dec
xlat
pop
adc
imulb
mov
and
lods
pop
sub
mov
xchg
fildll
xchg
int3
mov
jb
add
subb
dec
dec
call
pusha
fisubrs
out
pop
jno
sbb
mov
aaa
hlt
mov
push
gs
fisubs
test
add
dec
frstor
in
cli
mov
push
insl
adc
push
lcall
xchg
pop
bound
adc
mov
sbb
mov
stc
mov
cmp
test
test
push
je
in
test
push
adc
test
enter
pop
out
and
ret
or
sbb
icebp
add
and
mov
xor
fxch
ljmp
mov
mov
sub
xor
push
insb
mov
fdivrl
ljmp
cmp
mov
daa
fwait
aaa
notl
or
add
jg
fwait
arpl
imul
data16
xchg
dec
and
and
push
div
push
push
leave
and
jp
adc
sbb
andb
ret
cmpsb
lea
add
cmp
fldenv
movsl
xor
sub
jmp
loopne
jne
ds
push
mov
xor
cmp
sarb
int
xor
xchg
or
fwait
mov
jo
xchg
mov
addr16
push
stos
aam
cmpsl
add
mov
in
les
arpl
jne
addr16
test
negl
std
pop
jmp
sbb
int3
shlb
test
repnz
mov
sbb
out
xchg
ds
mov
outsb
test
data16
lahf
popf
arpl
dec
fwait
cld
add
adc
pusha
cmp
mov
popf
addr16
and
push
inc
imul
aas
aaa
movsb
ljmp
jl
mov
nop
cmp
rorb
cwtl
push
ret
aad
fiadds
sub
ja
stc
andb
stc
stc
insl
sti
pop
fs
hlt
jo
pop
pop
xor
cmp
adc
movsb
pop
inc
mov
jae
inc
std
pop
scas
mov
leave
sbb
xor
xor
clc
mov
mov
inc
jo
and
inc
rcl
push
mov
dec
daa
mov
mov
jge
sbb
mov
cmpsl
sarl
jbe
dec
mov
fldt
jo
xor
insl
add
imul
xor
fucompp
xor
jecxz
xor
sub
daa
scas
mov
dec
dec
push
mov
dec
xor
popf
out
jmp
lods
mov
xor
xchg
sbb
cmc
jne
mov
xor
rorb
shlb
je
push
add
test
ja
stos
scas
popa
andb
adc
mov
arpl
cmp
mov
cmp
add
or
fsubl
adc
mov
call
fadds
and
inc
add
leave
xor
insb
or
jae
sbb
insl
fadds
out
cwtl
adc
scas
inc
loope
imul
out
mov
xor
add
pusha
jae
and
dec
call
xor
push
dec
jl
cmp
rorl
loop
mov
jnp
mov
adc
jecxz
ds
or
ja
pop
inc
or
pop
mov
jns
mov
and
aad
pop
cmp
pusha
clc
xchg
jmp
add
pop
loop
repz
cmp
sbb
divb
aaa
push
push
mov
xchg
out
or
sbb
cmp
xlat
out
roll
or
pushl
mov
stos
das
stc
jle
test
push
adc
icebp
jno
aaa
mov
insb
loopne
or
mov
mov
hlt
sub
xchg
into
imul
stos
cld
into
push
cmc
dec
sbb
dec
and
and
cmp
lcall
pop
or
data16
daa
cmpl
repz
push
jne
cmp
mov
sbb
out
popa
jb
mov
mov
jnp
dec
stc
addr16
adc
loope
loope
es
mov
mov
push
push
cmpsb
out
mov
fcoms
out
dec
xchg
sarl
push
pop
sub
bound
mov
loope
aam
add
idivl
js
out
ret
inc
add
xchg
mov
sbb
cmp
stos
jbe
lds
xchg
mov
imulb
jnp
push
ret
shlb
enter
rolb
sbb
js
mov
cwtl
xchg
in
sarb
lret
or
cltd
jecxz
dec
pop
xlat
xchg
pushf
adc
push
push
js
fadd
les
nop
sbb
and
orl
pusha
push
es
sti
add
sub
ljmp
jae
lds
hlt
push
out
in
mov
cmpsl
sub
call
jae
in
cmpsl
addr16
jb
adc
sbb
daa
mov
in
sbb
mov
fmull
loop
cld
cmpsl
dec
mov
xchg
cmc
xchg
pop
mov
or
icebp
mov
mov
jb
and
out
fstpl
adc
dec
imull
pop
ficomps
cwtl
mov
pop
sti
lahf
inc
pop
scas
push
les
xchg
mov
je
mov
cmp
je
cltd
sub
and
mov
cmp
verw
pop
cmp
xlat
dec
add
fwait
jbe
stos
int
out
sbb
adcb
into
xchg
loopne
pop
loope
push
or
popf
stos
push
pop
pushf
int3
xchg
xlat
mov
push
cmp
xchg
aam
cmpsb
jae
sub
jo
add
xor
mov
mov
sub
mov
push
mov
stos
pop
mov
inc
int
or
sub
push
aad
pop
sbb
mov
pop
outsb
jns
ffreep
sahf
mov
xchg
inc
sub
repnz
jge
ds
dec
not
push
js
dec
xor
nop
mov
mov
movsb
and
cwtl
cmc
or
lock
mov
test
jecxz
icebp
iret
sbb
loopne
inc
sahf
dec
mov
pushf
inc
sub
dec
scas
les
fcoml
popa
fsubrs
fistpll
jl
out
ret
xchg
or
jbe
adc
movsb
xchg
push
inc
dec
pop
push
int3
adc
mov
idiv
adc
cmc
mov
stc
push
inc
hlt
mov
xchg
xchg
bndldx
rcll
pop
hlt
adc
loop
ss
idivb
cmpsb
push
jl
jle
mov
insl
inc
test
add
inc
cli
sbb
cltd
into
cs
jnp
stos
or
push
bound
adc
leave
sbb
in
jne
inc
mov
xchg
jne
push
mov
mov
sub
aas
incb
imul
nop
inc
hlt
or
push
lock
and
mov
or
test
xchg
add
pop
scas
mov
push
inc
call
lahf
test
test
or
pop
aad
inc
or
or
mov
aaa
gs
repz
and
leave
nop
call
aam
subl
mov
sahf
push
and
insl
loopne
movsb
sub
mov
in
cli
push
sbb
jle
pop
xor
push
push
fwait
inc
out
mov
add
mov
cmp
mov
aaa
inc
mov
lock
cld
or
lds
cmp
aaa
pop
aad
sub
enter
jo
std
aam
sbb
test
sub
jns
cmpsl
imul
cmpsl
mov
lret
xor
xchg
cwtl
jl
les
pop
fisubs
pop
je
cmp
dec
mov
data16
xor
std
pop
xlat
ljmp
mov
dec
jle
scas
mov
out
dec
imul
into
add
xchg
and
inc
call
inc
fs
sbb
ljmp
xor
add
out
jg
cli
mov
out
inc
mov
fcoms
or
inc
out
ljmp
jge
hlt
or
xor
insb
sbb
sbb
insl
stc
xor
mov
dec
imul
jno
cltd
into
out
movsl
xchg
mov
lds
test
fbld
sub
dec
or
ja
mov
or
scas
or
xchg
xchg
or
daa
in
push
sbb
jno
adc
int
push
inc
and
outsl
lcall
cwtl
negl
xchg
jnp
shlb
cmc
rclb
imul
inc
adc
lcall
jg
rorb
mov
push
mov
ja
mov
push
es
pop
rorl
icebp
sti
jnp
push
hlt
dec
hlt
and
xchg
mov
pop
sar
xor
imul
mov
or
dec
mov
push
mov
mov
js
mov
push
or
or
mov
xchg
addr16
and
test
mov
lods
fdivrl
pusha
stos
pop
popa
xor
push
adc
pop
in
aas
cwtl
cmpsl
aaa
mov
add
hlt
int3
pusha
mov
xchg
je
cmp
stos
ljmp
dec
std
fs
cmp
shlb
mov
data16
fdivrp
pop
test
add
mov
inc
lds
test
adc
inc
cld
mov
add
shr
daa
cmp
fcoms
dec
aad
sbb
mov
ss
imul
test
mov
adc
nop
ljmp
in
xchg
sbb
les
les
into
push
outsl
inc
pop
xchg
cmc
sti
js
cmp
lret
adc
adc
push
cmpsb
pop
cmp
jmp
xchg
push
and
mov
sbb
mov
mov
pop
push
dec
sbbb
movsb
loope
pusha
sbb
and
bound
lret
push
or
rclb
sbb
rorl
push
and
dec
jl
push
sbb
mov
nop
or
dec
jno
sub
inc
nop
cmp
and
fs
fdivl
mov
sbb
and
int
or
clc
xchg
imul
insl
jmp
sahf
xchg
fimuls
jns
push
mov
movsl
lret
in
and
pop
and
pop
in
jno
outsb
xor
mov
loop
into
pop
lret
js
push
jg
push
pop
aam
add
mov
jbe
dec
sbb
imul
sbb
lds
loop
or
xchg
jno
imul
inc
mov
punpcklwd
fidivs
loopne
mov
lret
popf
jno
enter
ljmp
cli
or
pop
cli
idivl
adc
add
xor
pop
aas
inc
xchg
inc
test
insb
dec
popa
mov
lcall
push
mov
xchg
and
pop
fwait
sub
cld
dec
adc
sbb
lret
adc
adc
push
data16
jae
sbb
aad
int3
lret
ljmp
cmpsb
inc
daa
cmpsb
rol
popa
mov
testb
test
jmp
movsb
shll
inc
jle
cli
cmp
pop
pusha
dec
test
mov
addr16
adc
pushf
int
jne
xor
cmpsb
out
fadd
mov
mov
insb
lcall
push
ret
pop
ss
cmp
and
pusha
and
sub
xchg
movsl
mov
sbb
mov
xchg
test
sarb
cmp
pop
jbe
and
xor
mov
int3
push
arpl
xor
cmp
cmpsl
pop
jo
addr16
jnp
jecxz
mov
imul
xorb
sbb
fmuls
imul
jbe
and
pusha
lret
hlt
jo
jo
sub
mov
pop
mov
jae
loope
and
cmp
xor
or
sbb
cltd
subb
fwait
mov
jp
add
shrl
pushl
push
mov
pop
cmc
push
mov
xchg
rcrl
pushf
imul
sti
sbb
and
incb
jbe
out
xor
or
cwtd
dec
fidivl
stc
in
inc
inc
xlat
add
dec
dec
orb
add
sarb
call
mov
mov
js
jmp
dec
sbb
scas
jo
cmp
shll
inc
stc
repz
sbb
add
dec
sub
sbbl
pusha
aaa
lea
sub
jp
xlat
daa
jns
jg
int3
mov
sar
movsb
dec
inc
popl
int3
cld
or
ds
add
xor
mov
mov
fxch
lcall
jnp
cmp
or
leave
or
bound
cmp
inc
adc
fadd
jp
test
jns
pusha
fldcw
jg
ror
or
jge
inc
pop
mov
xchg
jbe
add
pushf
mov
out
jns
lods
mov
fwait
or
arpl
insb
movsb
mov
outsb
sbbb
adcl
xor
addr16
sbb
bound
icebp
pop
xchg
cmp
pop
or
cmc
aam
jge
dec
lock
std
jbe
sbb
lea
je
add
inc
cltd
mov
jbe
add
stos
xor
test
pop
pop
aad
fcmovnbe
jb
fcmovbe
adc
xor
mov
sbb
sarb
outsb
stos
repnz
xchg
xchg
xor
lods
push
or
and
mov
lods
sti
jl
sbb
loop
sbbb
xor
mov
ss
arpl
mov
adc
inc
xchg
icebp
dec
pusha
fs
adc
and
mull
ret
dec
ljmp
inc
addr16
or
outsb
leave
movsb
cwtl
dec
adc
insl
ljmp
out
xchg
test
insb
loopne
test
out
ss
jecxz
call
push
fstl
and
mov
sarb
aaa
lock
call
pop
sub
test
jae
lods
xchg
js
std
iret
cmpl
pextrw
or
jg
pop
test
inc
in
adc
jb
fldt
xorb
or
dec
fcmovb
push
adc
shlb
push
sub
xlat
sarb
scas
dec
pusha
dec
jle
pushf
dec
cmp
imul
pop
lds
jno
lods
push
arpl
test
xor
dec
icebp
push
sbb
and
data16
loope
lret
or
mov
mov
syscall
xorl
popf
xrelease
pop
push
pop
xchg
mov
in
xor
in
xor
test
lcallw
cmpsl
mov
test
adc
pop
aad
sub
rorb
dec
js
scas
jo
xor
incl
test
paddusw
sub
xchg
xchg
repz
push
scas
mov
jmp
cmpsw
or
rorb
pop
push
add
push
pop
jb
subl
or
or
lcall
pop
test
push
ljmp
mulb
pop
mov
lds
add
aas
mov
mov
fldt
inc
push
frstor
sub
lcall
and
jl
test
or
sub
cmpsl
add
push
pushf
inc
jl
pusha
imul
cwtl
popa
adc
sbb
or
aam
xchg
mov
out
add
and
mov
nop
pusha
jp
movsl
lahf
and
fwait
add
sbb
and
push
and
aaa
test
mov
scas
xor
mov
xchg
push
cmpsb
insb
jg
gs
cmp
rcl
cmp
pop
repnz
das
lcall
pop
test
inc
push
imul
lret
push
adc
lret
mov
dec
push
fistps
popf
enter
jo
or
jl
mov
repnz
pusha
out
mov
mov
inc
mov
jae
cmp
add
test
mov
and
sub
rorb
sbb
clc
sarl
aaa
divl
cli
mov
xor
jle
pusha
das
scas
cmp
bsr
xlat
cmpsb
mov
sbb
sub
cs
stos
jo
cmp
push
out
cltd
call
cmc
and
mov
cltd
mov
scas
push
jbe
add
cmp
mov
cwtl
dec
pop
mov
pop
filds
add
mov
add
or
add
and
adc
sub
push
push
shl
icebp
aas
cmp
aaa
mov
jae
sahf
loope
cmpsb
cmp
cs
mov
jl
sti
testl
fists
inc
ss
std
xchg
jbe
ret
jnp
push
test
pop
cmp
push
pop
cmp
notl
mov
cmp
push
push
inc
add
and
pop
lea
in
or
mov
leave
lock
mov
lret
fisttpll
js
icebp
subb
test
mov
inc
pop
addb
daa
lods
shrl
or
sbbl
sbb
xlat
nop
pushl
xor
aaa
push
mov
mov
scas
jecxz
mov
inc
sbb
pusha
lods
fstl
mov
mov
div
lahf
popf
cs
jb
scas
push
out
aad
je
mov
bnd
or
inc
cltd
int3
in
popf
mov
push
data16
or
mov
jp
imull
xor
push
mov
jb
lock
sbb
ds
call
push
cwtl
adc
jo
les
mov
push
hlt
mov
out
sti
jns
push
sbb
cld
in
sti
sbb
movsl
mov
mov
sahf
and
nop
icebp
ret
out
dec
jae
ret
sub
out
mov
sbb
hlt
frstor
cs
pop
loopne
lahf
repnz
mov
xor
xor
js
mov
xchg
pop
cmp
adc
add
cs
pop
aaa
mov
arpl
ret
pop
push
iret
sbb
sbb
inc
xchg
xchg
add
sbb
xchg
out
push
pop
enter
in
push
ljmp
in
jmp
xor
jns
mov
jae
sbb
jle
cmc
cs
in
sti
pop
stc
sbb
lcall
hlt
jbe
mov
push
les
dec
cmovae
dec
loopne
jge
aas
enter
test
pusha
mov
cmc
jg
es
cmp
test
mov
ret
fisubs
shll
mov
movsb
jne
mov
pop
scas
ja
out
pop
jns
pop
xchg
bound
xchg
jne
xchg
jae
sub
ja
jle
and
cmpsl
xor
adc
repz
adc
mov
add
pop
mov
aaa
push
adc
sbb
mov
pushl
jl
or
in
cmc
cmp
add
in
mov
enter
mov
adcb
arpl
test
inc
ljmp
gs
add
adc
push
pusha
add
dec
dec
pop
andb
out
sub
and
imul
roll
inc
sub
mov
fmull
out
out
sahf
sub
imul
lods
mov
inc
cltd
je
add
xchg
nop
aam
notb
pop
sbb
jmp
push
cld
dec
subl
mov
js
test
add
clc
in
mov
shrl
popf
fldl
loope
imul
inc
int
cmpsl
sahf
stos
mov
inc
push
and
jne
out
mov
out
shl
xchg
add
mov
adc
or
enter
fs
cmp
sbb
fsubrp
ss
fwait
jmp
mov
xchg
pop
pop
jge
out
xchg
cmp
fs
lds
mov
mov
in
loopne
mov
xor
pop
xchg
sti
sbb
dec
sub
mov
and
std
fimull
mov
xchg
sub
cmc
sbb
loop
test
add
outsl
fldenv
in
xchg
push
push
dec
adc
cmp
sub
andl
mov
js
cltd
orl
mov
aaa
sahf
shll
fcmovb
nop
xchg
cmp
dec
mov
pop
loope
inc
or
scas
test
pushf
xchg
ljmp
add
shll
push
sti
jo
push
and
mov
mov
mov
arpl
cmp
or
xor
lds
pop
xchg
fsubs
mov
pop
xchg
sti
cwtl
adc
cld
xlat
xor
lods
clc
mov
jmp
pop
mov
les
pop
mov
gs
dec
outsb
dec
xchg
dec
cmpsl
cmp
negb
iret
sbb
js
addr16
push
sbb
fwait
out
pop
add
or
push
addb
and
cmp
test
jecxz
jmp
xor
push
jle
in
push
adc
lock
xchg
mov
fidivrl
mov
nop
repnz
xlat
out
mov
subb
pop
ljmp
dec
andl
jb
or
sub
shr
fwait
jae
cmp
mov
ljmp
add
daa
out
ret
into
ja
and
outsb
jae
jmp
lcall
or
push
jle
inc
loopne
mov
inc
adc
ret
lods
pop
dec
push
or
push
push
mov
movsb
in
stos
dec
daa
inc
or
jo
imul
test
xor
or
sub
jns
dec
negl
sahf
stos
sub
ror
ljmp
mov
jmp
adc
outsl
stos
pop
sub
addl
movsl
enter
cmp
sbb
add
fsubrs
aam
imul
inc
xchg
push
xor
mov
xchg
mov
fldenv
sti
std
bound
out
scas
add
sbb
adc
shl
inc
jmp
pushf
test
fbstp
jne
push
jmp
mov
jecxz
stc
xor
movsl
sub
push
sbb
mov
or
dec
subl
cltd
aas
jg
fdivrl
sub
mov
sub
out
shrl
frstor
and
jg
lods
test
ss
adc
mov
stos
mov
dec
pop
adc
mov
or
out
jb
lahf
mov
data16
fdivr
push
and
lcall
mov
scas
mov
and
and
xchg
and
jb
mov
add
fmull
inc
dec
cmp
mov
pop
shlb
sbb
cmc
and
out
cmpsb
push
scas
popa
rcrl
add
xchg
stc
xchg
pusha
pop
adc
lock
jge
shrb
pop
xchg
xchg
mov
mov
adc
mov
stc
enter
hlt
imul
ret
mov
int
stc
fidivrl
dec
mov
lods
mov
cwtl
xchg
pop
cmc
addl
loop
add
adc
mov
das
ljmp
cmpsb
dec
pop
adc
into
jae
xchg
out
jge
jnp
lret
sar
xor
cli
mov
or
lret
insb
repz
jecxz
and
sbb
jbe
sub
outsb
pop
pop
mov
cmc
sbb
push
sahf
lods
pop
and
push
pushf
nop
pop
out
add
xchg
cld
pop
dec
xchg
or
loop
sbb
rolb
cmpsl
movsl
jns
test
jp
sub
inc
popa
inc
push
ror
shl
sub
lock
add
xchg
cmp
pop
movl
mov
clc
xorl
jmp
out
sub
incl
xchg
push
jns
imul
xchg
das
fcomps
fdiv
xchg
dec
out
adc
mov
pop
jmp
stc
aaa
push
mov
push
jg
mov
add
push
add
ret
nop
adc
push
loopne
loopne
call
and
in
mov
lcall
push
loopne
mov
pop
aas
mov
lea
sub
sbb
repz
dec
inc
dec
push
lcall
sub
or
ss
adc
mov
xor
lods
xchg
cli
sbb
leave
subb
mov
mov
pop
test
call
adc
or
xchg
outsb
mov
outsb
loope
enter
xor
sub
mov
fucompp
pop
pop
repz
iret
adc
movsl
xor
mov
lds
in
and
mov
orl
adc
negb
mov
add
pop
mov
scas
adc
xchg
outsl
mov
pop
push
shll
ss
call
mov
scas
or
testl
scas
xchg
jmp
xor
xchg
sbb
mulb
inc
fsubl
imul
cmp
and
cmp
into
sub
jne
repz
insl
jmp
jge
or
int3
cmpsb
and
pop
outsb
in
jbe
fcom
les
cmp
cmc
push
lea
lahf
inc
nop
add
push
adc
dec
mov
jo
xor
mov
loop
lds
adc
cmp
shl
sub
inc
add
add
push
mov
xor
xchg
ljmp
sarl
jmp
or
arpl
fcmovbe
mov
pop
subl
rcrl
sbb
or
sbb
xchg
fstpt
mov
cmp
jne
sti
jne
mov
push
ret
icebp
jb
push
add
repnz
mov
ljmp
mov
lahf
test
cs
add
inc
addr16
movsb
ss
sbb
lock
add
outsb
or
movsb
aaa
in
subb
testl
xlat
loop
and
shrl
add
das
mov
jns
push
addl
mov
inc
or
addr16
lock
ljmp
add
adc
adc
stos
xor
adc
cmpsb
sbb
into
sbb
mov
fcmovnb
mov
add
idiv
sbb
repnz
shrl
jae
adc
cmp
pop
pop
lods
inc
mov
insl
hlt
sub
push
mov
sahf
lret
or
rorb
data16
or
xchg
cmp
or
idiv
pop
mov
push
fldt
subl
daa
adc
sbb
pop
mov
in
jns
scas
js
iret
fisubl
push
adc
pop
cmp
mov
jb
mov
xor
cmp
shl
mov
xchg
leave
pushf
push
fadd
out
lret
lret
jo
jg
cmc
imul
xchg
cmp
ja
add
inc
sahf
int3
sarb
sbb
xchg
fisttps
out
mov
lods
repnz
sbb
add
mov
shrl
jl
idivb
xchg
stc
jle
out
scas
ss
scas
push
inc
rcrb
dec
and
popa
cs
xor
xor
aaa
mov
jl
inc
shl
lea
mov
mov
leave
push
push
popa
lds
mov
data16
push
cmp
or
cmc
lret
aad
lock
bound
or
aam
push
mov
sub
mov
gs
repz
je
out
shll
or
incb
mov
cmpsl
xchg
or
sbb
mov
ljmp
jns
adc
stos
ds
push
cmp
cld
dec
mov
cli
fists
out
rol
roll
push
jmp
roll
xor
cmpsl
jae
push
cli
lahf
das
sub
mov
adcb
fs
cmp
test
or
jl
out
cs
or
lods
ljmp
jne
sti
hlt
pop
movsl
xchg
insl
adc
dec
jmp
cwtl
pop
stos
cmpsb
insl
and
mov
and
mov
scas
imul
test
dec
mov
mov
fisttpll
test
pop
add
cltd
cmp
and
push
sub
popl
sub
popa
mov
sbb
movsl
mov
es
in
inc
ds
popa
cmpsb
sub
stos
fs
or
jb
addr16
or
add
lods
adc
sub
mov
mov
pcmpeqb
aad
cs
mov
adc
xchg
ljmp
sbb
andb
and
and
sbb
mov
in
and
sub
iret
sbb
insb
inc
lock
sti
pop
das
scas
adc
movsb
loope
push
xchg
sahf
frstor
shl
sbb
dec
sbb
loope
mov
jo
je
sub
scas
subb
mov
pop
cmpsb
stos
lcall
mov
add
test
aaa
pop
mov
xchg
int
test
jp
push
out
push
inc
cmp
adc
dec
in
and
and
out
icebp
rcl
lds
fimull
cltd
pop
lcall
pop
mov
or
arpl
stos
pop
pop
ljmp
lods
addr16
fs
shr
dec
jbe
pop
ficoml
mov
inc
in
ror
cli
ret
rcrb
mov
test
push
aas
stos
jbe
sbb
repnz
clc
scas
cmp
lret
mov
push
test
mov
lds
mov
jp
mov
aas
lret
inc
add
aaa
mov
xor
outsb
out
mov
lea
or
sbb
xchg
aaa
pusha
cmc
pop
and
test
push
cli
cmpsb
push
movzwl
flds
add
ss
jmp
pop
or
fistl
mov
xchg
ja
addr16
mov
shlb
and
movb
popa
xor
outsb
mov
sarb
divps
and
push
mov
sbb
mov
ret
and
add
xor
scas
fildl
iret
in
movsb
or
call
lea
fidivrs
cmpsl
push
jge
mov
jne
test
dec
out
jns
mov
jne
rolb
or
sbb
inc
xchg
or
into
pop
test
inc
imul
xchg
scas
sub
icebp
xchg
mov
subb
notb
push
or
or
shll
sub
std
imul
xlat
cmp
fbstp
mov
out
fdivs
or
fdivrl
and
lret
test
das
sahf
stos
add
push
mov
jge
sub
or
jne
mov
mov
xchg
pop
pop
leave
inc
pusha
andb
add
and
fcoms
mov
mov
icebp
out
mov
std
rcr
cmp
add
iret
stos
insl
insl
mov
aaa
inc
gs
out
jae
call
pushf
pop
testb
xchg
lret
mov
push
and
pop
imul
jae
stos
test
test
adc
fistpl
lcall
pop
jae
jns
xor
mov
sbb
in
pusha
and
fldenv
outsb
insl
push
pop
lahf
push
sahf
or
aad
jns
mov
mov
and
inc
adc
sub
notb
pop
jg
js
push
add
int3
jo
xorb
xchg
cmp
lds
sub
fildl
daa
fisttpl
fdivs
or
pop
adcb
mov
or
popa
addr16
mov
inc
push
orl
pop
mov
scas
adc
lcall
sti
cmp
xor
dec
stos
adc
xchg
insl
xchg
mov
adc
js
mov
push
mov
rcll
mov
pop
xchg
mov
dec
or
pushf
push
inc
and
inc
and
jb
js
ljmp
ret
fnsave
lahf
adc
mov
push
push
cmp
sbb
mov
aaa
loop
adc
push
mov
cmc
int3
mov
mov
pop
xor
mov
popa
out
cmpsl
xchg
or
jmp
roll
xchg
movsl
out
and
or
and
push
sub
lcall
xchg
jmp
mov
or
add
or
jecxz
pop
sub
jl
mov
push
scas
loop
arpl
or
cltd
fildll
in
mov
mov
call
push
adc
jecxz
add
jae
and
gs
xchg
icebp
lahf
in
pop
jb
sbb
lahf
cli
shrl
sbb
paddw
push
jnp
xor
and
push
bound
adc
cmp
push
shl
jmp
inc
aam
into
pop
mov
std
loopne
mov
mov
fisttpl
bound
and
test
inc
and
movl
xlat
mov
out
mov
mov
lea
or
lods
daa
jnp
push
xchg
les
or
outsl
adc
stc
and
inc
loopne
push
cmpsb
mov
fbstp
cmpsl
xor
sbb
push
xor
push
jae
loop
push
test
cltd
aam
int3
mov
jo
stos
ficomps
pop
sbb
idivb
shrl
std
stos
test
inc
and
push
or
jp
movb
sbb
out
add
movsb
push
xchg
aam
imulb
xchg
sbb
jg
iret
movsl
lds
in
jns
cwtl
cmpsb
add
fistpl
fs
in
or
inc
cli
mov
jo
aam
push
lds
in
push
inc
mov
mov
cmpsl
jbe
in
insb
xor
enter
mov
xchg
xchg
push
xorl
inc
xlat
xchg
stos
cmp
cmp
adc
and
mov
js
cli
cmp
jle
cmp
arpl
loop
mov
pop
cmpsl
adc
jbe
lods
jns
cmc
mov
loopne
inc
push
out
mov
out
mov
sbb
adc
dec
inc
int3
cmp
shll
rcr
enter
xchg
cli
ret
pop
adc
js
pop
jb
mov
data16
sub
leave
hlt
clc
and
lret
test
push
clc
mov
xchg
and
dec
aaa
psrad
data16
push
push
rcrb
and
xchg
stc
les
and
cmpsl
popf
gs
mov
and
mov
in
setae
pop
in
xchg
cmp
xchg
xchg
mov
sub
aaa
mov
repz
vmovaps
fsub
aam
and
lret
shll
sub
hlt
incb
add
aas
mov
outsl
out
add
sbb
stos
jb
movsl
dec
test
pop
fistpll
pop
cmp
pop
pusha
addr16
icebp
cs
mov
movntps
cmpsl
loop
push
push
mov
lahf
daa
dec
mov
xor
mov
mov
fidivrs
lock
mov
xor
xchg
adc
dec
rcrl
pop
fsubp
and
outsl
insb
pop
sub
cmp
push
icebp
or
fmull
in
push
lock
push
dec
fldenv
fnstenv
sbb
xor
bsr
xchg
xor
jle
inc
popa
sub
lret
repz
cmpsb
add
fcomps
or
xchg
inc
es
or
cmp
movsb
cli
mov
fstps
leave
mov
cli
xchg
icebp
roll
jg
cld
dec
shlb
sbb
dec
mov
pop
insb
mov
scas
or
jmp
leave
mov
mov
jne
adc
dec
insl
pop
ja
in
jmp
std
pop
pop
inc
es
jg
xchg
cmp
xchg
jb
movsb
jle
ljmp
outsb
call
xchg
insl
sbb
xchg
sub
adc
xchg
dec
sti
push
bound
push
ror
ljmp
fwait
call
or
test
xchg
aaa
and
push
popf
pop
or
out
mov
lea
lds
sub
jg
fbstp
mov
nop
push
fmulp
pop
stc
dec
aad
xchg
and
lds
lods
mov
cmp
sub
mov
mov
cmp
shlb
add
loope
adc
flds
xor
inc
sbb
test
enter
adc
insl
enter
mov
mov
sarl
call
jns
movsb
cwtl
test
clc
mov
push
andl
fidivl
orb
mov
repz
pop
je
incl
mov
add
les
lcall
iret
xor
int3
mov
aaa
sarl
cmp
nop
aas
imul
jne
ljmp
jl
cli
mov
lret
or
jns
xor
mov
imul
sub
pop
jmp
insb
icebp
out
lock
cmc
ret
pop
and
pop
insb
je
sbb
aas
mov
mov
jmp
daa
sub
loopne
insb
movsl
xchg
mov
call
shlb
mov
dec
scas
out
movb
sbb
scas
jnp
pushf
nop
cmp
push
data16
jb
sub
les
xor
cmp
jmp
push
lea
mov
adc
aaa
les
iret
decl
imul
push
pop
clc
xchg
and
inc
push
inc
in
imul
aas
bound
ja
push
pop
push
xchg
cwtl
pop
divl
and
icebp
jmp
stos
pop
gs
mov
jb
lret
mov
cmp
aad
scas
lar
lock
sti
sbb
sub
pop
xor
imul
xor
mov
stos
pop
mov
inc
in
mov
xchg
jnp
sub
cld
jne
inc
into
push
dec
mov
inc
jne
lods
int
std
pusha
or
stos
push
xchg
sti
leave
mov
mov
test
jns
lods
bound
stc
push
pop
sub
sbb
dec
mov
dec
pop
jmp
fnstcw
inc
fnstsw
shll
adc
jno
aaa
mov
xchg
cli
mov
add
adc
adc
adc
test
push
in
pop
movsb
and
jmp
dec
dec
pop
pop
jecxz
ss
sbb
stc
jle
bound
pop
cmp
movsl
hlt
sahf
fmulp
mov
jl
ret
cmp
sarb
sub
pop
adcl
jno
mov
sub
add
xchg
shlb
das
movsb
cli
push
mov
stc
test
in
jg
fidivs
inc
fs
lds
mov
enter
stos
cmc
rcrl
pop
xor
ret
outsb
push
ja
push
cltd
mov
xor
mov
jns
loopne
inc
push
or
lahf
stos
lods
repnz
push
stos
lods
mov
lock
ja
ret
js
movsl
bound
ss
lcall
aad
dec
adc
add
fnsave
loop
mov
outsb
enter
jle
sub
mov
mov
xchg
shl
rorl
ret
movsb
sahf
cltd
into
mov
in
shl
mov
pop
add
push
bound
lcall
push
and
cmp
rcrb
lret
add
fdivp
fmull
or
add
inc
cmp
das
arpl
movsl
lahf
daa
popa
sbb
popf
jp
cmpb
push
mov
mul
test
data16
mov
imul
or
sub
test
adc
lcall
xchg
push
repz
mov
je
push
xchg
hlt
ds
xchg
loop
sti
sub
adc
xor
pop
sti
mov
cli
hlt
orl
add
aad
xor
pushf
ret
mov
mov
in
push
dec
cmp
sti
je
dec
cmp
ds
dec
jg
mov
sub
dec
sti
outsl
xchg
push
aaa
test
cmpsl
lods
dec
cmp
or
mov
inc
inc
mov
int3
or
andb
jle
push
dec
xor
add
adc
xorb
pop
sbb
jno
outsl
rcrl
pop
ret
sti
mov
faddl
adc
sbb
mov
jl
in
push
push
sub
pop
jge
sub
test
pop
mov
in
in
add
mov
rcrl
subl
rclb
sbb
push
scas
mov
fucom
dec
das
push
aad
xchg
aad
lcall
stos
fs
adc
movsl
lret
dec
add
jbe
mov
lods
inc
int3
sub
jmp
clc
pop
ljmp
cmpsb
aas
mov
and
mov
push
test
bound
mov
mov
into
and
lock
aaa
imul
jns
incl
dec
into
pushf
mov
sub
mov
test
cmc
adc
insb
mov
jo
movsl
xchg
mov
fmull
xchg
dec
jg
sub
xchg
iret
imul
andl
jmp
add
jno
mov
popf
out
mov
mov
in
rclw
cmpsb
jge
xchg
into
mov
adc
clc
fdivs
dec
cmpsl
add
mov
sbb
jle
pop
call
mov
sbb
dec
xchg
repz
add
xchg
rolb
or
push
mov
test
pop
and
in
and
test
stc
nop
and
sbbb
sub
daa
dec
popf
adc
mov
mov
fs
ret
rcr
std
popf
arpl
mov
lds
es
fs
push
cmp
je
imul
mov
mov
pop
loopne
mov
call
dec
out
mov
sahf
std
popa
insb
loopne
mov
cld
ret
out
std
push
or
cmc
inc
add
es
ficompl
push
cmpsl
sbb
adc
inc
add
xlat
sarb
push
sub
ds
hlt
sub
sub
out
scas
lods
call
stc
inc
jg
lcall
test
or
fistpl
inc
out
sub
and
pop
in
dec
in
push
push
cmp
mov
add
push
jg
outsb
dec
pop
out
jl
push
mov
adc
imul
stos
andb
jmp
pop
dec
mov
mov
lahf
aad
mov
or
push
loopne
out
test
loope
test
imul
jge
pop
inc
call
std
ds
add
push
jb
cwtl
adc
jp
repnz
fcoml
fstps
dec
push
stos
push
cmpsb
push
hlt
fdivr
mov
aas
std
js
cltd
sbb
xchg
jae
push
dec
ss
or
mov
adc
fildl
jno
out
lahf
stc
adc
testl
or
inc
loop
test
lret
dec
sbb
jge
dec
jg
pop
pusha
ljmp
fists
inc
iret
scas
sahf
sbb
jp
push
aaa
add
mov
mov
sbb
hlt
push
pop
jne
pushw
dec
shlb
hlt
into
add
mov
adc
fwait
or
and
in
outsb
orb
inc
shrb
sbb
pop
lcall
popf
int3
shll
sbb
in
adc
jns
in
inc
imull
push
or
or
mov
adc
push
repnz
addr16
rclb
fistpl
rsqrtps
sub
jle
ja
mov
push
mov
fadd
repnz
push
gs
jbe
das
jns
ds
faddl
enter
bound
adc
cmp
outsl
cmp
ds
pop
fcoml
mov
pop
dec
inc
shl
xor
nop
jecxz
mov
mov
pop
push
mov
inc
test
cmp
mov
xchg
dec
mov
jmp
xchg
lds
popf
jns
jne
enter
jb
cmp
sub
adc
mov
pop
sbb
leave
lea
xchg
mov
adc
xor
nop
dec
adc
sub
int
outsl
adc
pop
adc
pop
push
cs
lods
std
loop
jbe
jecxz
xchg
cwtl
xchg
ret
push
jg
push
lret
mov
fdivr
or
call
adc
pushf
loop
pop
bound
fldl2t
pusha
push
inc
loope
lds
push
in
stos
lock
mov
int3
push
sub
dec
lods
mov
push
push
add
ret
ds
inc
or
ret
adc
pop
or
mov
test
cmpsb
fmuls
mov
cli
aaa
lahf
loop
nop
stos
daa
cmp
gs
in
in
mov
dec
mov
addl
mov
orl
jg
push
stc
xchg
fst
xor
in
pop
pop
outsl
adc
cmpsb
mov
mov
fsubs
xchg
scas
pop
push
pop
testl
pop
movsl
mov
clc
stos
mov
and
hlt
shlb
hlt
sarl
lods
push
dec
cmpsb
dec
cmp
mov
lahf
int3
pop
push
jne
add
sbbb
mov
push
lods
scas
out
les
add
ljmp
lcall
cmp
sbb
clc
aam
pop
mov
jo
sahf
ret
or
loop
test
gs
push
scas
fistl
xchg
insb
arpl
pop
lret
rclb
push
fistl
mov
and
sub
popf
in
or
fidivl
jmp
or
shlb
push
mov
fcomps
test
cmpb
jb
dec
jecxz
add
mov
imul
xchg
inc
cs
jp
rorb
fdivs
push
dec
in
and
div
jp
pop
inc
lea
in
and
mov
das
push
cwtl
mov
sbb
sub
dec
mov
rolb
jl
cmc
push
mov
fsubl
rcr
inc
mov
aam
push
in
repz
fcompl
je
aaa
les
mov
scas
data16
lret
lods
xor
addr16
push
mov
inc
add
aad
adc
jno
xchg
fs
xchg
aad
mov
and
push
and
sbb
push
pop
cmc
fsts
stos
movsb
sbb
ret
lock
dec
je
testl
or
fwait
movsb
js
pop
mov
daa
adc
pushf
jo
lods
aas
mov
cmp
push
add
call
mov
movsl
sub
shrb
sbb
jnp
adc
enter
call
pop
jo
hlt
jge
jle
stos
rcrl
sub
fsubl
mov
sahf
lret
sbbl
sub
arpl
mov
out
mov
imul
aam
lea
push
push
add
jl
dec
push
and
mov
or
lahf
mov
call
repnz
ficompl
ljmp
scas
cmc
cmp
cld
andb
out
sbb
xor
inc
inc
mov
loope
fcomp
or
pop
jp
rorb
bound
cld
daa
insb
std
mov
sub
add
jle
lea
mov
std
data16
sub
enter
scas
mov
fdivrl
ror
daa
popf
mov
push
loope
or
adc
adc
mov
roll
push
pusha
and
dec
jae
cltd
pop
sub
stos
cltd
sub
hlt
addr16
inc
and
imul
cmp
jb
mov
push
dec
dec
loopne
and
mov
adc
push
ret
push
xchg
neg
push
sbb
es
push
in
cmc
pop
test
mov
jne
inc
pop
add
push
xor
cld
push
rorb
inc
loopne
fsubrl
mov
adc
jp
pop
negl
xchg
insb
xor
push
pop
jl
addr16
adc
xor
pop
mov
das
xchg
mov
push
xchg
add
dec
adc
mov
dec
mov
mov
je
out
inc
sub
outsb
cld
jno
xchg
out
jnp
jecxz
das
pop
jno
pop
jecxz
pop
out
ja
push
outsl
or
cltd
mov
push
imul
cmp
pop
jns
sbb
fcmovne
iret
movsl
std
mov
imul
cli
adc
movsb
insl
addr16
mov
lods
popf
push
push
aam
loop
andb
lret
or
cltd
dec
orl
aas
lahf
call
addr16
jp
sar
stc
mov
adc
dec
adc
fmulp
inc
popa
dec
cmpsb
cmp
rcr
push
inc
and
adc
iret
and
mov
lea
adc
or
in
or
fs
jo
test
clc
xlat
repz
popa
adc
std
mov
aaa
je
xchg
jns
lods
jnp
lock
pop
push
fwait
pop
inc
jl
aaa
loop
xchg
pusha
mov
fistpl
sub
fidivs
bound
xchg
lds
cld
repnz
out
ret
inc
and
loopne
shl
faddp
or
xchg
push
mov
leave
inc
sahf
pop
aam
scas
hlt
xchg
pop
nop
pop
sub
and
inc
ljmp
arpl
and
int3
and
xchg
jo
jbe
pop
popf
inc
fcoml
adc
int
aas
push
sti
enter
in
lahf
cmp
mov
pushf
cmp
les
cld
incb
in
dec
inc
rcll
lods
mov
inc
mov
mov
xor
cmp
xor
sub
push
sub
and
xlat
sub
sub
dec
mov
push
lods
mov
jmp
lea
push
inc
dec
inc
int
xor
fists
lcall
xorl
dec
repnz
xchg
or
cmpsl
cltd
cmp
mov
xchg
test
test
aaa
ja
push
jns
lds
pop
sti
fnstenv
dec
push
push
mov
stc
mov
add
stos
push
arpl
ljmp
mov
fnsave
and
rcr
pop
push
jp
mov
mov
clc
scas
shl
imul
loope
bound
pop
enter
pop
ret
test
aam
js
jbe
mov
mov
and
int3
or
pop
mov
push
mov
cltd
pushf
cmp
mov
lret
mov
rorl
mov
test
xchg
mov
sbb
in
adc
cmp
enter
es
cmp
jbe
sub
lea
mov
mov
addr16
inc
or
cld
lcall
pushf
imul
xlat
xchg
push
mov
sub
out
mov
aad
jo
push
addr16
dec
rol
into
pop
mov
cli
scas
inc
mov
fldt
pop
pop
fs
imul
fwait
outsb
xchg
lret
in
mov
mov
xor
inc
mov
out
je
fsubrp
jecxz
mov
in
call
pop
int
jle
mov
aas
shrl
jne
subl
mov
and
xadd
inc
mov
rcrl
ret
pop
jns
or
sbb
lcall
dec
mov
jl
fisubs
jno
xlat
inc
fs
std
imul
mov
sbb
ret
psraw
xchg
jecxz
cs
out
lea
xchg
cmp
jns,pn
cmp
add
stc
or
fisubrs
lahf
loope
cs
ljmp
jl
mov
cmpsb
adc
push
xchg
add
stos
jae
cmp
aas
adc
inc
push
fs
in
cmp
filds
push
push
dec
scas
push
or
std
ret
insl
nop
pusha
mov
mov
jmp
jae
push
icebp
dec
dec
loope
dec
lcall
dec
nop
fsubrs
lods
lods
sbb
scas
int3
pop
mov
sub
cmp
outsl
fs
push
dec
scas
in
popf
aam
mov
dec
rclb
add
jb
cmovs
mov
shll
xchg
or
testb
jmp
loop
not
cs
mov
nop
add
addr16
mov
in
pop
ficoml
sub
scas
jl
inc
add
lcall
adc
lret
scas
gs
loopne
movl
fiadds
lock
or
add
in
xchg
aas
loopne
jae
insl
push
mov
inc
and
add
add
stos
sbb
or
mov
xor
cmp
xorb
fnsave
mov
lds
add
xchg
push
jg
les
sahf
pop
mov
sub
mov
xlat
sub
ret
push
mov
pop
mov
pusha
cmc
das
scas
lahf
jno
imul
icebp
pop
repnz
xchg
lret
mov
xor
mov
arpl
cmpsb
dec
push
lret
lock
mov
xor
sub
je
inc
js
addr16
sti
jecxz
cmp
push
loop
mov
sub
out
xchg
icebp
mov
and
mov
xchg
mov
mov
mov
and
cmp
fucompp
inc
mov
imul
inc
push
xchg
mov
jecxz
pop
cltd
mov
sub
adc
mov
jae
addr16
sub
xor
imul
xlat
pop
mov
sbb
and
add
daa
xchg
loopne
jno
ja
sarb
not
add
mov
enter
and
cmp
js
shll
loop
loopne
sti
divb
nop
xchg
fldlg2
test
and
add
sbb
inc
aad
fcmovnu
cmp
adc
aas
sub
jmp
xchg
fisubrs
loop
stos
ja
je
mov
inc
push
inc
sub
inc
insb
mov
inc
jne
add
inc
pop
sub
sub
das
addb
mov
mov
shl
stos
fcmovne
sbb
and
not
dec
cmp
jge
shlb
and
stos
cmp
cwtl
dec
mov
cmp
aam
dec
sbb
xor
fdivl
mov
movsl
lret
push
dec
mov
test
xor
push
cmpsl
fstpl
inc
xchg
mov
push
xor
jle
sbb
lea
fsubl
adc
aad
aad
jae
pop
fdivp
lret
sub
psrlw
jo
ja
int
arpl
sbb
inc
jae
mov
pop
pushf
cmpsb
mov
sti
jbe
cmp
mov
ds
xor
fldenv
mov
mov
mov
jg
test
imul
loopne
sub
inc
test
jmp
xchg
aad
repz
negl
arpl
stc
mov
ljmp
push
js
sbb
mov
cmc
push
icebp
mov
dec
repz
fmuls
js
popa
push
mov
and
and
mov
into
inc
pop
cmp
inc
gs
aaa
push
sub
sub
sbb
int3
outsb
jne
push
dec
ss
mov
cmc
js
mov
xor
jmp
das
jmp
lods
outsl
ds
pop
sub
adc
jle
pop
add
notb
fidivs
add
jbe
push
test
xor
sub
ficompl
pusha
fsubrs
adc
shll
pop
dec
fistl
aaa
stos
jnp
scas
jne
xchg
mov
out
repz
inc
cmp
sbb
fldt
mov
out
add
pop
xor
jmp
in
aas
jnp
out
pop
xchg
mov
mov
es
lret
out
icebp
and
sbbl
jno
cwtl
jb
sub
xchg
cmp
dec
lock
cmpsl
pop
pop
mov
xor
push
sbb
pusha
scas
ret
adcl
fisubs
cmp
pop
lock
das
push
sub
loope
sub
aaa
adcl
push
cwtl
imul
iret
push
les
mov
xor
testb
imul
cmp
cmp
mov
fldenv
xor
sub
daa
in
xor
es
test
lea
nop
add
jb
jmp
orl
sbb
xchg
call
xlat
sub
cmc
push
mov
sub
mov
insb
ret
scas
loopne
movsb
int3
xor
adc
js
push
sbb
mov
adcb
cltd
or
push
push
cmpsl
popa
sub
shl
in
xchg
arpl
cmp
rcll
jns
aaa
cs
stc
iret
loop
in
ss
sub
sbb
push
js
sub
addr16
sub
xchg
sub
js
icebp
rcrl
push
dec
fistl
xchg
mov
insb
lret
js
sub
push
xor
lock
mov
mov
enter
out
mov
fwait
mov
in
aam
sub
xor
jmp
xchg
fsubp
sub
ret
inc
cmp
insl
js
addr16
inc
dec
lahf
push
and
jb
aas
add
cmpsl
mov
iret
addr16
add
dec
int
arpl
jb
dec
adc
adc
mov
sbb
imul
xchg
adc
imul
and
sti
dec
xchg
mov
imul
pusha
xchg
out
push
jmp
pusha
repz
into
push
iret
loopne
data16
inc
add
xchg
adcl
sub
cmp
mov
and
insl
mov
scas
add
mov
xchg
movsb
sub
movb
and
push
and
inc
js
lcall
loopne
insb
sub
pop
push
push
xor
jmp
cmc
outsb
repz
popa
mov
jg
insb
inc
test
or
sub
mov
sbb
mov
leave
push
sub
pop
sub
pop
insl
in
mulb
ja
js
iret
mov
or
jno
dec
cmp
dec
jge
lahf
femms
pusha
scas
add
push
pop
pop
push
inc
out
daa
ss
push
iret
negl
dec
mov
mov
sub
mov
sarb
cwtl
loopne
daa
adc
dec
mov
lds
das
test
mov
pop
jns
std
sti
push
lret
sbb
push
xchg
sbbl
mov
ror
mov
and
popf
imul
jbe
ret
jge
inc
fidivl
daa
gs
mov
jno
mov
lahf
stc
repz
dec
shl
cmp
fs
ret
add
test
or
decl
leave
add
mov
leave
ret
mov
xor
fucomi
xchg
insb
add
rcr
aaa
hlt
jmp
lods
dec
ret
int
xor
push
leave
imul
aam
std
adc
stos
cltd
push
aam
mov
and
in
lahf
xor
mov
lret
out
aad
mov
sub
ljmp
lock
jb
pop
sbb
pop
inc
mov
addr16
out
popf
add
enter
dec
jb
cmp
and
hlt
aad
xchg
pop
icebp
cmc
mov
repnz
mov
pushf
dec
test
xchg
insb
xchg
lds
jo
pop
shlb
aam
ja
mov
lea
or
push
sbb
aad
sbb
orb
dec
rcrl
iret
and
enterw
leave
xchg
push
mov
mov
mov
push
shrl
cs
push
es
sbb
lahf
cs
in
push
je
or
pop
stos
sbbb
adc
js
in
adc
mov
ljmp
cmp
cmp
pop
or
cmp
dec
mov
push
fsts
popf
or
add
xchg
fldcw
mov
add
inc
cmp
sub
ret
xchg
jg
clc
mov
int3
sbb
fst
adc
lods
xor
sbb
cld
xor
sub
aam
repnz
sti
arpl
mov
and
fldenv
pop
iret
orb
add
sbb
test
and
out
xchg
sbb
cmp
jge
sar
stc
xor
xlat
hlt
push
push
dec
icebp
and
gs
aaa
xor
fstl
and
xchg
movsb
mov
and
in
js
push
add
xchg
mov
mov
jle
cmp
test
or
adc
pop
inc
test
dec
inc
in
adc
outsb
sbb
daa
pop
and
repnz
jp
out
adc
out
or
je
mov
xor
in
add
lret
cmp
mov
xchg
xor
mov
insl
add
mov
xor
or
sub
outsb
mov
shl
push
enter
pushf
or
push
scas
jno
loopne
js
mov
pop
cld
push
std
int3
push
stos
ret
lods
inc
les
in
rclb
cmp
jns
fsubs
mov
cli
adc
sbb
stos
pop
rcrb
or
scas
call
cmp
jae
mov
jmp
scas
mov
jns
dec
insl
inc
and
jno
pop
dec
lret
es
test
pop
scas
cmp
das
jmp
push
or
inc
or
adc
popa
sbb
push
mov
push
nop
dec
movsb
cmp
cmpsl
pop
push
cltd
add
mov
push
push
push
insb
fmuls
pop
adc
add
pop
xchg
push
hlt
adc
repnz
js
dec
sub
cmp
test
imul
mov
shll
pop
fdivl
add
pusha
cwtl
clc
add
pop
jno
mov
xchg
fs
test
push
dec
lds
ret
xor
sbbl
push
dec
fmul
push
sub
in
enter
dec
sbb
adc
xor
insb
bound
les
wrmsr
aaa
inc
ds
jle
cmp
pop
dec
lret
xor
jnp
stos
adc
push
cmpsb
fwait
rcll
mov
subl
add
push
push
pop
mov
cmp
stos
cli
adc
or
or
pop
adc
jg
push
xchg
movsb
add
aaa
fdivrs
outsb
pushl
jp
or
push
and
and
dec
push
stc
test
inc
pusha
testb
lahf
xor
mov
adc
sbb
or
mov
hlt
testb
jmp
push
or
test
loopne
stos
adcb
stos
xor
and
pop
mov
cmpsl
inc
scas
xchg
loop
dec
xor
cmc
push
leave
dec
fistps
mov
sbb
aad
cmpb
jle
lods
pop
into
dec
addr16
stc
xchg
mov
ss
xor
mov
push
jg
idivb
icebp
xchg
xchg
loopne
mov
pop
adc
bnd
lods
mov
inc
xor
js
mov
dec
sub
sbb
je
mov
mov
or
test
insl
add
mov
cld
xlat
mov
mov
lcall
imul
mov
shrb
std
dec
xor
orl
out
dec
ljmp
push
cmc
sub
scas
in
xor
stos
push
repz
mov
jnp
movsl
add
push
inc
mov
sbb
or
push
jge
js
icebp
jmp
inc
lret
xor
xchg
sbb
lret
push
or
and
mov
push
mov
sbb
shll
and
jl
inc
test
push
inc
inc
xchg
inc
call
add
fnsave
mov
xchg
aam
imul
fdivl
mov
jno
and
xor
pop
jae
jb
add
lret
cmc
sarl
push
sub
mov
in
xor
nop
xor
xchg
cmp
sub
cmpsl
lea
test
in
sbb
outsl
into
sub
call
lret
bound
lcall
inc
mov
jge
sub
dec
repnz
jmp
or
sahf
pop
bound
repz
fprem
dec
jno
shrl
inc
push
imul
loope
mov
cmp
cmpb
imul
adc
popw
stc
roll
jmp
rcrb
jno
fwait
in
cmp
loope
test
cmp
and
mov
stos
mov
sbb
lret
ljmp
or
xchg
sahf
add
mov
test
stos
sbb
mov
inc
push
imul
stos
jb
notrack
lds
xchg
es
mov
xchg
addr16
cmp
mov
mov
jecxz
sbb
in
in
pop
imul
jl
xorb
iret
test
add
jge
pushl
jne
or
inc
pop
ret
inc
sbb
push
mov
stc
stos
inc
test
mov
cs
mov
push
rolb
fsts
jb
mov
rorl
jle
mov
ss
add
adc
cs
lock
cmpsl
push
test
outsb
add
fmuls
cmp
lea
xlat
cmp
jg
push
adc
dec
cmp
and
mov
xchg
dec
lret
notl
aas
aam
xchg
mov
mov
xor
test
jmp
and
jmp
mov
lret
sbb
sub
jecxz
popa
lods
add
stc
lea
fdivs
aaa
xchg
mov
js
adc
push
or
pop
and
cltd
call
popf
movsb
scas
jle
idivb
add
adc
jge
mov
pop
das
mov
cmp
xor
xchg
fldenv
jle
fucomip
jne
into
xchg
mov
in
test
add
inc
add
mov
xchg
pushw
out
xor
mov
pop
roll
push
nop
lcall
lock
cltd
shll
cwtl
stos
fcoml
sar
jae,pt
js
rclb
mov
sti
jnp
xchg
stc
mov
fsubr
xchg
aaa
arpl
xor
jle
mov
cmp
fdivl
inc
fs
cmp
push
dec
sti
or
jle
aaa
push
int3
mov
sbb
pop
out
sahf
mov
fsubs
add
add
sub
les
out
mov
test
add
cmp
adc
jge
pusha
fdivrs
lds
sti
ljmp
sub
bound
aam
mov
mov
imul
test
xchg
xchg
or
test
mov
in
int3
cmp
pop
aam
adc
outsl
inc
inc
int3
icebp
clc
or
sub
lret
mov
mov
sbb
sub
add
fiaddl
cmp
pushf
scas
mov
test
mov
fisubl
push
mov
ss
lds
pop
lahf
xchg
jno
pop
in
icebp
inc
dec
xor
mov
test
jns
iret
pop
or
pushl
mov
movb
shll
daa
mov
push
movsb
andb
jo
pop
jmp
push
push
sbb
xchg
sarb
fcoms
or
mov
popa
or
and
jp
lret
fcmovnu
addr16
cmp
push
push
test
std
mov
scas
pop
sub
imul
push
push
outsb
pop
adc
insl
rolb
sbb
mov
xor
mov
pop
iret
cmpsb
addr16
adc
roll
cmp
sub
fimull
shlb
sti
mov
or
sbb
sub
scas
stc
or
cmpsl
clc
push
stos
rcl
push
jne
call
mov
xchg
mov
out
cmpsl
out
jmp
sbb
dec
fmuls
aaa
jecxz
push
xchg
pop
and
lahf
rsm
imul
lret
and
ljmp
aaa
jae
inc
jle
inc
lods
in
in
stc
mov
lahf
das
cmp
cmp
lcall
push
mov
jg
decb
pop
test
mov
pop
sub
dec
or
lods
pop
int
jmp
mov
addr16
shlb
adc
sub
and
enter
clc
lock
out
arpl
aad
adcb
int
stc
scas
in
cwtl
sub
sbb
int3
dec
addr16
or
xchg
inc
nop
pushf
add
rcrl
andb
nop
or
imulb
mov
inc
mov
cmc
imul
mov
mov
xchg
dec
lods
mull
imulb
stos
xorb
or
addr16
or
pop
aaa
outsl
pop
aas
rclb
clc
cmp
dec
dec
jnp
jnp
shlb
rcrb
roll
xor
out
mov
cmp
test
rolb
leave
insl
ret
jge
cmpsb
mov
in
cmc
adc
jp
test
adc
stos
jmp
loop
movsb
loop
and
xchg
mov
arpl
xchg
fldcw
fimuls
repz
fdivp
xchg
ss
jmp
outsl
push
push
jae
xor
insb
pop
lods
bound
inc
jne
xor
sbb
dec
sub
dec
mov
ret
adc
add
lods
xlat
cld
pop
mov
pop
out
xor
mov
xor
sub
rol
xchg
push
sbb
mov
mov
jl
xor
je
imul
jmp
push
loope
fisubs
mov
xchg
push
fwait
lds
dec
xchg
push
insl
nop
orl
inc
mov
fiaddl
jns
inc
rorb
fistps
rcll
xlat
mulb
test
js
loop
movsb
inc
lret
aas
dec
mov
jns
push
orb
dec
push
mov
xor
mov
rorb
dec
cmc
int3
mov
cmp
or
out
daa
out
aas
cmpsb
dec
loop
lds
dec
sbb
add
je
ja
pop
inc
push
stos
lcall
fs
or
cmp
ret
mov
push
fisttpl
pop
push
and
in
daa
cmpsl
sbb
in
scas
jae
sbb
xchg
notb
cld
mov
gs
xor
loopne
mov
xor
cs
push
adc
lret
mov
sbb
xlat
rep
mov
xchg
mov
mul
inc
in
or
mov
mov
or
cmp
lret
xchg
pushf
outsb
out
lret
orl
arpl
in
adc
rorl
dec
aas
xor
and
mov
in
dec
push
repz
icebp
mov
out
movsl
sbb
fisttpll
sub
inc
mov
sbb
sub
and
push
test
jnp
xchg
inc
out
sbb
in
stos
ja
into
ja
mov
cli
bound
jl
mov
cmp
jae
int3
fdivrl
mov
push
loop
sbb
mov
imul
mov
xchg
rorl
pop
push
or
in
mov
sub
push
test
xlat
sub
pop
sub
dec
jmp
jle
mov
in
mov
out
adcb
fmul
setl
fdivrs
or
mov
dec
mov
cld
aad
leave
or
ret
jg
int3
stos
cmpb
in
xlat
cs
sub
inc
xor
cli
ret
test
or
in
jmp
imul
sub
loop
jne
pop
jo
rcrl
incb
adc
dec
jne
lods
hlt
fwait
mov
add
mov
pop
jnp
dec
mov
mov
pusha
push
mov
sti
in
jae
hlt
cmp
dec
lock
cmp
int
fwait
mov
xor
sbb
cmpsb
xchg
out
inc
push
pop
les
mov
enter
lea
xchg
cmp
sub
jno
mov
sub
pop
mov
lea
in
das
and
push
mov
test
xchg
test
or
xchg
fadd
cltd
rcrb
in
xor
arpl
add
int3
enter
jge
or
gs
stos
lret
xor
adc
dec
add
inc
or
mov
adc
push
das
cmpsl
bnd
dec
out
arpl
xor
and
adc
mov
jmp
push
mov
jg
push
leave
adc
decb
mov
cmp
arpl
std
or
fstpl
xor
xor
lret
icebp
scas
push
stos
mov
sub
xchg
pcmpeqd
ret
or
sbb
clc
insb
cli
pop
fcomps
xchg
add
xchg
bound
sub
bound
mov
lret
jg
daa
push
dec
xchg
xlat
lds
push
push
sub
pop
rcrb
ficompl
jle
jmp
ja
sub
mov
push
lods
stc
movsb
sbb
mov
lahf
cwtl
xchg
add
sahf
repnz
mov
push
sub
incl
insl
stos
push
test
int3
fdivrs
xor
js
mov
adc
lret
and
cld
data16
data16
sub
imul
push
cmpsb
clc
fwait
sbb
sti
jns
mov
pop
stos
rcrb
je
mov
das
push
xor
ret
push
rol
mov
mov
jnp
pop
mov
scas
fimuls
adc
adc
sub
sbb
mov
loope
pop
lret
frstor
insb
push
push
sahf
dec
mov
jge
xchg
cmpsl
jmp
aas
lds
xchg
dec
imul
push
daa
pop
mov
cld
mov
mov
adc
jl
leave
rorl
out
cmp
les
fcoml
dec
inc
mov
es
movsb
roll
icebp
fdiv
stos
leave
mov
jmp
mov
into
inc
cwtl
jns
push
idiv
jne
dec
pop
fwait
push
scas
hlt
mov
lock
push
and
movsl
mov
orb
xchg
fwait
lahf
andb
cs
stos
clc
pop
sub
jp
add
js
add
fucom
xchg
cli
rcl
mov
aas
inc
inc
jae
gs
adcb
mov
add
jmp
popa
sbb
and
add
ljmp
fnsetpm(287
cld
adc
enter
jo
outsl
ja
xchg
mov
xchg
lods
jmp
cmp
jg
jo
fstpl
xor
or
out
int3
inc
incb
adc
dec
mov
and
jl
jp
sub
jge
mov
xchg
ja
int3
ss
sbb
sbb
mov
cs
push
xor
push
add
inc
inc
inc
xchg
ss
rcll
cmpb
lods
push
das
xchg
ret
in
test
lahf
aad
pop
add
jne
xor
xor
lea
jbe
mov
jmp
adc
inc
mov
xchg
arpl
adc
jo
mov
out
pop
subl
jg,pn
bound
fiaddl
lahf
or
sub
xchg
pop
add
pop
push
mov
inc
inc
test
outsl
xchg
mov
aad
mov
scas
orl
inc
lods
mov
pusha
lods
out
xor
sbb
jbe
cmp
jl
sbb
jg
xchg
xchg
xchg
jno
xchg
push
jae
push
stos
pop
and
fdivrl
mov
inc
sbb
inc
pop
iret
fimuls
icebp
popl
aaa
addr16
xor
out
cmp
outsb
dec
push
jae
out
imul
add
sub
push
jnp
ret
inc
data16
popa
xor
daa
stos
fcmovnbe
push
adc
sub
inc
push
xchg
jl
xchg
aam
test
inc
inc
sub
pop
insb
adcb
aas
lret
bound
add
aad
push
jne
inc
std
es
iret
daa
stos
inc
ret
push
addl
adc
fdivl
xor
mov
in
fsubl
mov
aas
cmp
jp
out
test
mov
dec
aad
ffree
cmp
xchg
jne
int3
aas
int
idivl
cmc
test
inc
cmp
push
adc
lea
popf
and
and
xor
lret
popa
push
and
out
cmpsl
mulb
mov
add
xlat
or
dec
outsl
repnz
lods
repnz
inc
lock
push
push
cld
insb
in
sub
xor
mov
arpl
test
movsb
or
jge
aad
xchg
frstor
fmull
pop
ret
out
xchg
add
push
fnsave
loope
movsl
inc
xchg
inc
ret
add
xchg
aam
sub
cmp
sub
xor
fldt
popf
push
arpl
dec
in
and
mov
in
mov
mov
mov
sbbl
pop
movsl
dec
sbb
out
fwait
rcrb
out
sbb
sub
jmp
cmpsl
outsb
push
cmp
sub
adc
inc
cmp
xchg
push
and
ds
push
pop
mov
mov
fcoms
pop
xor
pop
sbb
inc
test
inc
hlt
mov
jns
xchg
xchg
pushl
int
cltd
sti
imul
add
nopl
sahf
pop
jo
sub
sbb
fidivl
fsubl
xor
or
inc
xchg
jp
fwait
mov
rcrl
pop
jae
xor
xchg
xor
fcoms
filds
mov
sbb
push
lock
xchg
inc
aad
lds
lret
add
mov
inc
xchg
xchg
loope
dec
xor
inc
sub
cwtl
pop
loope
xchg
les
xor
cmp
cmp
stos
pop
push
stc
inc
inc
out
movb
inc
out
mov
push
lcall
movsl
imul
and
div
adc
je
xor
push
and
sub
loopne
scas
int
in
xchg
sbbl
jno
clc
pop
movsl
rcrl
push
call
pop
add
jg
xchg
jge
pop
adc
cmpsl
or
lea
fidivl
mov
mov
sub
dec
ss
jno
test
out
data16
dec
loop
and
lret
push
xchg
jns
dec
js
testb
inc
mov
adc
xchg
xor
mov
jo,pn
cmp
mov
ja
adc
adcl
sbb
insb
testb
shrb
pop
mov
fmulp
xor
imul
js
jnp
adc
int3
dec
sbb
xor
cmc
cmpsl
push
mov
xor
mov
daa
jmp
and
push
ja
or
push
push
movsb
add
or
aas
loop
xor
cmp
mov
mov
inc
inc
sub
cld
mov
insb
dec
test
jno
push
push
xor
sbb
lret
sub
or
fidivl
pop
add
lods
sahf
mov
sub
mov
lcall
pop
aaa
sbb
jge
adc
inc
push
lahf
pop
pop
xchg
dec
ret
adc
jg
push
pop
adc
in
sbb
mov
and
xorb
push
push
fmull
push
aad
in
ljmp
arpl
xchg
xchg
daa
and
inc
inc
adc
lods
pop
jp
into
mov
jl
push
scas
fbstp
push
sub
cmp
dec
aam
je,pt
inc
loop
lods
leave
push
in
push
mov
adc
rcl
jge
or
inc
fnstsw
add
mov
movsl
and
mov
or
stos
sbb
mov
xchg
jb
jo
lods
xchg
leave
sub
xor
mov
clc
lods
in
cmp
test
adc
sbb
mov
pop
lret
jae
jo
gs
cmp
rorl
mov
mov
orb
lcall
in
movsl
rclb
push
cmc
test
repnz
push
inc
sbb
lds
in
push
and
leave
mov
xchg
sub
sub
pop
test
pop
lret
xchg
repnz
and
push
lret
loopne
dec
lret
mov
aaa
stc
jne
in
inc
jns
adc
mov
xor
popf
int3
cltd
inc
test
fsub
adc
push
ja
xor
sbb
xor
and
fcmovne
test
aad
xchg
jecxz
lods
jno
jl
test
xchg
pop
push
and
fstpl
jmp
sbb
add
scas
cmc
mov
js
lock
adc
cmpsl
loopne
leave
data16
fisubrl
pop
pop
pop
pusha
and
add
movb
dec
jp
or
ljmp
loope
mov
hlt
nop
or
and
jl
mov
js
sub
cs
and
aaa
sub
pusha
push
push
imul
mov
xchg
mov
sbb
pop
xchg
aad
xor
mov
jb
lahf
lds
fildl
out
stc
scas
ret
out
mov
sbb
inc
imul
dec
out
daa
cwtl
xor
cmp
or
xchg
ja
cmp
pop
or
aad
das
cmc
jo
pop
mov
jne
cmp
cmp
das
sub
inc
push
jmp
mov
sarb
mov
in
or
fistps
jae
adc
outsb
push
shll
sub
pusha
push
push
aam
cwtl
mov
hlt
jns
cmp
sub
pop
add
cmp
cwtl
cwtl
inc
insb
lock
pop
shrb
sarb
mov
ljmp
test
rcrb
cmp
add
lret
or
scas
and
dec
xor
add
mov
cmp
mov
xchg
lcall
pusha
xor
fisubl
and
repnz
push
fsubrl
outsb
sahf
mov
rol
mov
ss
gs
cmp
mov
dec
mov
jecxz
into
push
stos
cmp
ret
add
pop
xchg
mov
dec
mov
out
push
bound
add
in
xchg
sbb
cmp
mov
adc
cmc
out
jbe
jmp
mulb
or
jne
pusha
sarl
cwtl
popa
adc
pop
pop
aaa
sub
push
pop
fcoml
outsl
add
inc
add
mov
daa
lods
shrl
push
jle
lods
add
mov
movsb
xor
decb
sub
inc
nop
dec
stc
out
stc
stos
push
pop
cmp
add
sbb
push
push
out
jmp
pop
jb
aad
pop
pushf
cs
adc
push
xor
inc
mov
shll
int
ss
addr16
sti
mov
jecxz
push
push
and
sar
xchg
pop
cmp
test
ret
int
cld
in
outsb
pop
leave
xchg
lods
mov
xor
jae
int
adc
std
shl
inc
daa
cmp
sub
arpl
push
sub
cld
lahf
mov
inc
pop
ds
xlat
xchg
roll
jge
adc
int3
jo
arpl
nop
mov
into
push
filds
popf
fistl
lea
pop
jns
ds
pop
push
sar
sbb
int3
out
cmc
enter
ds
out
mov
sbb
inc
and
inc
outsb
out
fidivl
call
xchg
ja
fisttpll
je
push
jmp
cmp
out
sbbl
mov
iret
mov
jno
push
and
inc
pop
inc
mov
clc
push
xor
lea
fs
sti
shll
loop
rcrl
add
scas
movsb
data16
fsubr
push
hlt
nop
es
adc
push
push
lea
xor
sbb
aam
fisttpl
out
add
cmc
int3
xor
cmp
ljmp
aad
test
aas
testb
push
cli
pusha
sbb
lods
sub
lahf
add
jmp
dec
sbb
enter
sub
aaa
jg
fs
mov
aam
mov
popa
inc
int
adc
fldt
add
sbb
mov
iret
iret
jp
mov
pushf
out
cwtl
push
xor
adc
push
jns
jbe
xchg
mov
out
pop
sub
rcrb
and
dec
aad
sbb
stos
sti
push
cmpsb
mov
cmp
in
repz
out
idivb
mov
sub
sbb
adc
adc
in
mov
push
sbb
sarl
aad
arpl
add
inc
cmp
push
out
add
pop
in
add
mov
cmp
add
sar
mov
unpcklps
xlat
ja
imul
dec
outsl
outsb
rorb
incb
test
mov
sbb
adc
fimuls
std
test
push
cmp
pop
pop
daa
in
adc
mov
aas
adc
sub
sbb
dec
sahf
mov
outsl
xchg
fnsave
js
xchg
mov
fistl
jno
iret
jle
lds
dec
popa
push
pop
std
inc
fsubrs
xor
sbb
andl
pop
rorl
jl
xchg
adc
scas
lods
cmp
and
stc
bound
repz
cmp
push
sub
les
and
loop
fldenv
fmuls
incb
xor
inc
xchg
or
sub
mov
push
mov
shl
pop
ret
dec
lds
cmp
sbb
inc
and
adc
dec
stos
push
icebp
add
jb
mov
xor
inc
and
je
leave
negl
mov
aam
stos
shrl
sti
push
outsl
stc
insb
push
daa
mov
dec
mov
fcoml
icebp
push
adc
movsl
jne
dec
xchg
cmp
add
jg
or
repnz
outsb
sub
mov
pop
dec
dec
add
jb
jo
pop
sarl
sbb
fnstenv
in
add
call
fcoms
dec
iret
fbld
int3
and
sti
and
repz
jbe
in
jne
icebp
movsl
leave
cmp
mov
cmp
lret
or
sbb
push
sub
mov
sarb
lock
mov
aad
stos
or
mov
fst
hlt
fdivl
inc
add
lock
cmpsb
orl
adcl
pop
test
and
ss
je
push
out
and
mov
jmp
cmc
inc
push
xchg
and
imul
cld
rcl
leave
dec
cmpsl
jge
int
jle
mov
aaa
mov
mov
sar
pop
mov
dec
jp
jle
mov
xchg
or
push
sbb
repnz
sbb
xor
pop
or
sbb
shll
insb
cwtl
fwait
movsl
fsubrl
cwtl
or
pop
adc
cld
lahf
xor
dec
movsb
cmp
jae
or
mov
push
fisttpll
test
sub
int
dec
pushf
xlat
add
into
ret
in
and
fcomps
out
shl
mov
popa
dec
xor
dec
aas
out
outsb
cld
mov
xlat
pop
imul
adc
leave
movb
pop
les
leave
push
fsubs
call
std
pop
push
fadd
cld
orb
lods
cli
fwait
xchg
sub
dec
xchg
pop
add
repz
test
aad
mov
push
jl
cwtl
jecxz
push
xor
iret
sbb
imul
sbb
jl
mov
dec
mov
lds
notl
mov
ja
xchg
in
outsb
cmp
adc
mov
push
xchg
ja
mov
pop
mov
scas
shl
add
inc
shr
xor
jb
and
cmpsb
or
movsl
cmp
inc
mov
pop
cmpsl
daa
xor
rcrl
daa
arpl
gs
push
xchg
outsb
mov
mov
pop
jp
and
cmp
fcoms
fmull
loop
xchg
jl
and
mov
push
or
adc
insl
mov
into
dec
pop
stos
stc
sahf
jecxz
lcall
popa
outsl
pop
mov
lcall
or
pop
subb
adc
sub
call
xchg
popf
cltd
xchg
mov
aam
insb
add
loop
add
inc
mov
mov
xchg
aaa
mov
dec
in
imul
mov
push
pop
aad
bound
xor
xchg
rcrb
dec
dec
pusha
mov
cmp
dec
mov
cmp
mov
xorb
test
xchg
sub
and
xchg
addr16
icebp
or
and
sub
wrmsr
jbe
repnz
add
xchg
andl
adc
ret
aas
mov
jle
test
pop
enter
inc
push
push
int3
dec
pop
cmc
xor
sbb
repnz
dec
add
and
clc
jmp
jae
or
icebp
xchg
call
push
ret
jecxz
fmulp
add
push
mov
sbb
or
mov
out
flds
and
enter
inc
data16
xchg
sbb
fisubl
dec
stc
lock
mov
stos
enter
setle
jnp
outsl
xor
pop
fists
push
adc
dec
mov
mov
bound
inc
xor
outsl
dec
dec
mov
or
cs
test
cmpsl
outsb
andb
sub
xor
or
mov
dec
in
mov
fisubl
fmulp
jb
xlat
ret
mull
inc
mov
mov
cmc
xchg
push
insl
in
sarb
js
jno
lock
inc
daa
out
daa
pop
sbb
mov
dec
hlt
addr16
es
sub
push
push
adcl
or
je
outsb
push
rcll
mov
outsl
in
nop
repz
and
test
pop
jg
mov
pop
sub
sbb
or
and
test
test
and
mov
fstps
lea
icebp
add
bound
mov
xchg
jg
ss
or
adc
xor
fwait
xor
gs
scas
add
minps
insb
cmc
es
cmpsl
push
push
xchg
js
std
inc
or
adc
popf
lcall
in
js
dec
test
add
js
aaa
mov
movsb
or
jae
sbb
push
test
xchg
out
popa
mov
jl
cmp
cmpps
js
pusha
jl
in
dec
cld
lods
mov
pop
mov
cmc
inc
sub
fsubp
xor
je
and
cmpsl
movsb
popf
rclb
fwait
mov
mov
sbb
xor
push
xchg
fldl
ljmp
add
das
or
sub
mov
xchg
mov
fdivs
xcrypt-ctr
cmpsl
sbb
mov
fdivrl
push
xchg
idivb
pusha
subl
cmp
inc
faddl
adc
into
xchg
jl,pt
sti
mov
hlt
je
repz
aam
shr
jne
jge
roll
les
testb
xor
shr
mov
fs
inc
cmpsb
aam
cmc
mov
outsb
and
mov
and
int3
push
sbb
push
pop
and
popf
add
lods
mov
adc
das
push
das
pop
movsb
sbb
jle
dec
xor
sbb
xor
mov
inc
jbe
pop
cs
jo
fldenv
xchg
push
and
inc
js
jb
mov
xchg
cmpsl
lahf
xchg
adc
cmp
sarb
arpl
jg
pop
gs
push
cwtl
inc
jge
jns
sbb
inc
leave
call
data16
cwtl
cmp
outsl
enter
mov
sbb
das
aam
adc
xlat
imul
fiaddl
adc
outsb
push
xchg
cmp
pop
leave
hlt
fnsave
and
paddb
jl
dec
add
iret
pop
adc
mov
lock
and
or
int3
sub
test
xchg
nop
rorl
add
mov
and
push
popa
sbb
ret
xchg
xchg
fstpl
lock
fucomi
bound
jle
lea
mov
scas
rcrl
mov
ret
lods
shr
lcall
fidivrl
push
std
add
push
jno
out
mov
push
fs
aaa
mov
inc
jnp
inc
xchg
outsb
dec
and
adc
pushf
mov
push
jbe
push
imul
adc
or
mov
fisttpl
arpl
clc
sarl
pop
xchg
adc
cmp
jns
sbb
test
or
lret
int3
fwait
lcall
mov
fstps
fisubrl
mov
lock
push
xchg
in
popf
xor
imul
out
cmp
push
pop
lock
test
mov
sub
ret
mov
cmpsb
fdivs
ss
pusha
pop
adc
cmpb
cli
aaa
repz
push
lea
pop
mov
dec
push
popf
stos
jmp
inc
sub
lock
jnp
pusha
mov
sbb
inc
sbb
pop
in
push
lock
xor
stos
ss
in
scas
push
mov
jb
pop
xor
addr16
dec
and
xchg
fidivl
outsl
lea
int
ret
outsb
stc
outsl
popf
dec
test
iret
iret
inc
cmp
jmp
inc
test
les
add
stos
cmp
adc
jmp
adc
adc
add
dec
repz
xor
push
sub
mov
jnp
push
xchg
cmp
xchg
repnz
icebp
jl
lock
scas
inc
mov
xchg
pop
dec
jno
xlat
inc
cs
inc
adc
hlt
fistpll
test
cltd
ret
inc
add
cwtl
dec
jnp
mov
push
sahf
sub
hlt
iret
add
lds
aam
cmpsb
in
add
push
imul
mov
add
mov
sbb
jg
or
push
lods
aas
ja,pn
jnp
pop
nopl
int
add
xor
and
push
push
xor
pop
and
ret
pop
adc
jno
setp
lret
mov
fst
mov
jge
mov
dec
leave
jbe
in
lret
mov
outsb
div
inc
jp
emms
push
push
aad
adc
mov
mov
xchg
push
aaa
and
bound
shrb
sahf
arpl
jge
insb
int3
test
stos
push
enter
push
arpl
mov
scas
or
enter
sub
cmp
in
repz
aam
filds
pusha
int
inc
add
sub
andb
out
lock
lahf
and
sub
addb
mov
inc
mov
daa
xchg
popf
ds
xchg
cmp
stc
mov
or
or
aad
cmp
incb
mov
dec
push
das
lods
lds
push
cmpsb
cmpsl
daa
adc
je
mov
jbe
mov
repnz
push
sbbb
push
or
insl
xor
imul
mov
push
push
and
xor
mov
lret
stc
jmp
fidivrl
imul
or
sbb
jge
push
mov
out
lock
mov
test
sub
xor
fsts
lahf
jb
popa
dec
mov
scas
adc
lock
je
fsubs
inc
push
lods
xor
push
lea
ret
lods
cmp
inc
aas
dec
cmp
dec
bts
mov
mov
sub
divl
sbb
test
cld
call
add
pop
push
int3
xchg
and
xor
test
jns
xor
sar
cmc
xor
in
movb
cmp
or
ja
outsl
int
out
loope
cmp
fcmovbe
fmull
pop
push
or
sbb
leave
xor
aam
addr16
cs
jecxz
ja
sbb
inc
in
test
fidivrl
add
xor
pop
sti
push
sbb
in
xchg
push
adc
test
adc
mulb
mov
cmp
arpl
lods
int
pushw
xor
xchg
outsl
and
jb
sub
cmp
jae
adc
mov
xchg
add
xchg
imul
lret
lahf
int
pop
mov
in
push
repz
or
xor
sbb
push
out
xchg
jno
insl
jne
xchg
mov
xchg
xor
cs
jge
adc
pop
fmull
sti
xchg
pusha
mov
push
add
arpl
fwait
mov
mov
test
inc
fucomi
std
or
shlb
call
and
cmp
inc
rclb
aam
lahf
stc
cld
adc
pop
iret
sub
mov
pop
outsl
imul
mov
jb
aaa
push
imul
leave
leave
add
lcall
xchg
cltd
mov
gs
or
xchg
rcrl
outsb
jns
pop
cmp
mov
or
jle
add
orl
add
mov
and
orl
xchg
xchg
call
stc
cld
adc
lcall
adc
rolb
adc
jae
mov
push
push
jg
pop
mov
cli
adc
or
lcall
ljmp
add
jb
jg
je
sub
ljmp
out
or
in
xchg
ljmp
inc
out
lods
xorb
aaa
fsubr
cmp
add
lods
scas
pop
dec
ret
xchg
xchg
xchg
cld
rcrl
lahf
mov
outsl
xorl
cld
cld
dec
js
repz
shr
cmp
repnz
xchg
jnp
mov
sbb
fisttps
mov
sahf
adc
pop
clc
scas
mov
movb
jne
lock
push
sub
je
int
cwtl
dec
test
sbb
sub
sbb
mov
or
pop
mov
push
fcom
fsubl
and
popa
and
leave
fldcw
jae
rol
jl
std
jecxz
push
and
imul
and
mov
jge
and
adc
fisubrs
cmp
jno
pop
dec
dec
and
fistpl
cld
jp
mov
aaa
jl
and
hlt
jno
loopne
sbb
dec
cmp
fsubr
or
and
addl
pop
sub
fcompl
call
xor
push
inc
cmp
int3
jp
lea
scas
in
and
iret
mov
rclb
adc
pushl
divb
stos
sahf
mov
add
pop
jecxz
adc
xor
jmp
mov
fidivl
xor
fldt
sbb
mull
andl
mov
arpl
nop
xor
push
mov
adc
popf
adc
inc
repnz
mov
loop
fnstenv
orl
adc
cmp
push
xor
outsb
adc
push
pop
mov
or
xor
and
lods
xchg
sbb
imul
test
jge
jo
adc
sub
pushf
push
pop
movl
and
jl
int
push
or
sub
and
jmp
cmp
mov
ret
xchg
add
pushl
fidivl
xor
shrb
and
xor
in
ficompl
out
mov
lds
xchg
fisubl
adc
cmp
dec
mov
add
push
shlb
rclb
arpl
xchg
jns
inc
mov
xchg
roll
inc
movsb
xchg
pop
das
popf
adc
cmp
jae
mov
or
imul
int
add
dec
movsl
sub
jmp
mov
pop
and
js
nop
outsb
cmpsl
xlat
mov
lahf
push
in
and
mov
push
fistps
test
jo
push
fstp
cwtl
out
mov
sbb
jge
adc
es
dec
xchg
sysret
sbb
mov
push
outsl
sub
cli
fsubrl
scas
jno
adc
push
pop
xor
dec
movsb
pop
xor
fiadds
jne
and
int3
and
call
dec
inc
add
sub
xor
jno
add
jmp
outsl
ret
daa
inc
cmp
ljmp
lods
les
lock
test
push
mov
xchg
push
mov
sub
xor
cbtw
push
ret
dec
nop
xlat
lds
stc
xchg
xor
repz
enter
mov
jnp
and
test
ds
fsts
pop
pop
xlat
dec
xchg
aam
jle
dec
test
xor
and
fsubl
jl
or
push
cltd
and
pop
cmovl
jg
sbb
push
rolb
insl
jmp
rclb
pop
inc
enter
dec
clc
fwait
hlt
vpunpcklbw
push
scas
out
mov
or
adc
shrb
cmp
cld
dec
inc
addr16
and
fidivrs
js
push
push
roll
out
jl
xchg
cmp
call
imul
shrl
push
lods
mov
rcrl
sub
xor
push
inc
and
inc
xchg
test
push
mov
cmp
mov
and
addr16
mov
das
mov
or
loop
outsl
sbb
lahf
and
cmp
sti
mov
and
mov
jmp
clc
inc
test
popa
cwtl
addr16
fcmove
xor
dec
les
xchg
icebp
addl
mov
cwtl
pop
dec
sbb
adc
popa
jmp
xchg
jo
add
sbb
mov
sbb
gs
imul
rcl
and
test
mov
mov
push
sti
mov
mov
fldt
xor
xor
mov
pop
xchg
popa
sub
icebp
outsb
adc
pop
cwtl
mov
push
push
add
push
test
subps
adc
jl
cmpsb
and
subb
into
into
or
xlat
clc
jbe
pop
add
pushf
xchg
mov
or
pop
fsubrs
adc
inc
stos
push
fidivrl
xchg
or
and
push
mov
into
or
mov
jg
mov
and
add
cmc
stos
scas
lods
mov
ja
rclb
loope
jns
or
inc
stc
ljmp
lcall
shlb
xor
jnp
sarb
hlt
pop
mov
sub
mov
das
ljmp
xchg
popf
pop
or
mov
pop
mov
inc
fisttpl
ljmp
mov
movsl
mov
lods
pop
rol
push
bound
sar
mov
xchg
xor
jno,pn
dec
and
mov
and
xchg
mov
stos
ret
push
cmp
adc
jp
fmuls
out
lock
mov
fidivrl
jl
clc
mov
addr16
jno
aaa
insb
push
test
sbbl
add
jae
push
and
jle
xor
cmc
aas
notl
insl
bound
or
inc
in
stos
and
jne
in
cld
adc
xchg
shr
es
add
lahf
cs
inc
mov
mov
lret
jno
out
and
dec
pop
dec
outsb
lds
into
js
jo
lcall
stos
inc
sbb
mov
jg
test
jo
and
push
xchg
xor
hlt
cld
movsl
cltd
fucomp
fsubrl
and
push
hlt
push
sbb
in
rcll
call
mov
lret
mov
lds
divl
jbe
ja
hlt
jno
jp
int
lock
and
sbb
sbb
cmp
sti
jne
ljmp
into
aad
mov
cmp
and
nop
sarb
subb
dec
in
xchg
mov
cmp
outsb
dec
sbb
loopne
sub
addr16
xchg
cmpsl
pop
sub
addr16
sbbl
ficompl
in
lods
xor
hlt
adc
push
addb
inc
pop
js
add
test
cmp
loopne
sarl
cmp
je
adc
and
xorb
xchg
enter
adc
mov
and
and
pop
pop
jp
pop
add
push
mov
pop
or
adc
and
int
xor
dec
push
cmc
xchg
add
jmp
xchg
in
pop
pop
sub
mov
je
jns
cmp
loope
roll
data16
sahf
incb
push
inc
iret
mov
dec
cli
rclb
push
cmpl
pop
xor
sarb
jae
xor
jl
pop
mov
or
or
es
stc
or
dec
cltd
daa
call
cmpsb
push
scas
sbb
fidivrs
test
cmp
push
nop
xlat
add
andb
push
push
mov
test
stos
dec
lds
adc
idivl
lret
cmp
cmp
push
cltd
push
pop
addr16
lea
mov
inc
dec
jns
or
shl
and
mov
jmp
mov
int
fucomp
popf
roll
out
or
pop
sub
arpl
mov
mov
incl
shrl
fwait
bound
push
les
push
mov
movsb
mov
outsl
cltd
push
ret
shll
scas
ds
sbb
dec
mov
cmp
imull
xchg
dec
push
jl
push
loopne
aad
push
adc
fnstcw
or
lahf
hlt
das
xor
adcl
ds
test
cmp
jle
cmpsl
pop
sbb
into
aam
and
push
mov
pusha
clc
sub
mov
rcll
fs
cmp
xchg
ret
mov
int3
scas
fstps
add
mov
jo
inc
mov
inc
in
sub
mov
jmp
sub
rorl
scas
fidivrs
addr16
add
mov
sti
dec
mov
repnz
mov
pop
stc
ret
and
fbld
in
shrb
sbb
shl
out
loopne
dec
fs
pop
aas
nop
cmp
push
stos
jmp
dec
mov
lea
jle
inc
les
mov
xor
clc
dec
cmp
and
test
ja
jbe
out
test
lcall
mov
inc
ret
outsb
repz
les
push
shrl
test
jle
push
imul
in
fdivs
fwait
int3
nop
ds
mov
leave
mov
in
adc
push
pop
push
mov
jmp
fbld
dec
aad
aad
popf
fmul
lods
mov
push
filds
mov
sub
in
addr16
push
sbb
xor
jmp
sarl
std
or
lods
mov
jp
xor
loop
jns
mov
mov
sbb
and
inc
add
repnz
sub
pop
jmp
xor
mov
push
push
lds
and
mov
testl
es
aad
jb
pop
sbb
xchg
stos
call
cld
fcmovb
ja
lahf
push
and
fnstsw
aas
outsb
jnp
xchg
mov
mov
jl
lahf
aas
lea
dec
bound
push
outsb
add
sahf
mov
lcall
mov
dec
jmp
aad
mov
lret
sbb
inc
cwtl
in
mov
dec
nop
test
mov
fnstcw
aam
adc
mov
push
pop
pop
jbe
xchg
or
jbe
aam
out
sub
mov
mov
cli
xchg
ficoml
vpperm
jne
jl
lods
inc
cmp
addr16
push
and
in
inc
lock
jbe
mov
xchg
movsb
add
movsb
adc
cltd
pop
cmpsb
dec
lods
mov
cwtl
scas
xchg
sbb
or
and
jmp
inc
mov
cwtl
mov
andb
cld
or
push
test
xor
or
jo
stos
mov
push
xchg
lods
pop
in
xor
pop
xchg
popa
pop
xor
jmp
mov
push
sub
inc
popa
push
aas
enter
cmp
rclb
and
and
lds
data16
or
pop
xor
inc
pop
ljmp
push
mov
in
les
lret
fsubrl
pushf
jp
out
or
mov
mov
cmp
arpl
dec
mov
mov
iret
sub
and
pop
or
pushw
movsl
bound
fdivrp
aas
adc
js
mov
mov
andb
fistps
mov
std
and
jl
popa
repnz
ret
stos
stos
je
jl
mov
mov
adc
pusha
cmc
push
add
jno
sarb
pop
out
or
push
add
fld
add
fsubrl
testb
mov
mov
adc
cwtl
mov
pop
xchg
cmpsb
add
fwait
ss
inc
add
in
int3
mov
movl
out
adc
icebp
pushf
out
shl
sub
fldcw
and
fsubs
movsb
mov
divb
or
mov
test
adc
sarb
bound
clc
add
cs
jmp
adcl
mov
nop
ljmp
xchg
out
mov
adc
pop
pmaxub
mov
fwait
lret
add
popa
test
inc
fisubrl
imul
cltd
rorb
ss
dec
mov
jp
sub
lret
push
rclb
xor
cld
or
mov
sub
jg
decb
cmp
push
ljmp
add
cmc
std
imul
jecxz
jnp
sub
inc
sub
aam
push
in
sbb
mov
add
mov
adc
ret
daa
js
sbb
aaa
adc
adc
imul
dec
popa
out
xchg
dec
movsl
sbb
aaa
stos
inc
hlt
jb
xor
mov
sbb
pop
cmp
mov
adcb
test
loope
adc
dec
xchg
jecxz
and
cmpsl
jecxz
gs
xchg
adc
sub
xchg
fstpt
movsl
ja
inc
inc
subb
mov
fs
sbb
imul
adc
cld
jns
jmp
sub
adc
test
aas
xlat
lea
dec
pop
xchg
pushf
jns
aam
adc
jecxz
mov
push
pusha
pop
sub
shrl
mov
stos
inc
jno
popa
mov
dec
loopne
rcl
adc
xchg
stc
add
test
lods
cmp
dec
pusha
mov
mov
pop
inc
cmc
jnp
movsl
or
das
mov
jb
jno
mov
iret
hlt
xchg
bound
ja
sarl
jg
loop
mov
push
push
mov
mov
fnstsw
mov
aaa
sbb
stos
pop
les
push
ret
xor
xchg
adc
and
and
push
or
mov
pop
clc
mov
or
js
mov
add
in
ss
fldcw
cmp
cmp
cwtl
pusha
xchg
ja
hlt
sbb
or
mov
cmpb
lods
and
ds
ss
dec
fisttpl
mov
push
scas
mov
pop
lock
into
test
in
jg
aad
insl
or
aam
pop
das
lea
ja
jbe
xor
lds
pop
jbe
in
lods
push
sbb
xchg
pop
fwait
lahf
pushf
pop
and
pop
inc
test
stc
adc
pop
inc
sub
mull
aas
out
mov
dec
in
fdivl
pusha
adcb
cmp
jns
cmp
and
jmp
stos
outsb
mov
sub
cmp
push
mov
mov
xlat
ret
push
arpl
popf
dec
les
test
pusha
pusha
imul
test
pop
stc
dec
xor
test
pop
jns
popf
push
pop
xor
lea
cmp
mov
xor
ja
inc
icebp
mov
push
and
divb
cmp
pop
and
icebp
rolb
lret
jmp
pop
aad
push
bound
jb
aad
xchg
js
clc
es
jae
jno
adc
cmp
ljmp
fwait
push
movsl
mov
cmp
ljmp
xchg
movsl
push
das
cmp
mov
and
scas
jecxz
cs
vsubps
jp,pt
pop
xchg
lock
mov
dec
js
fisttpll
je
aas
shl
int
cmp
dec
call
data16
mov
mov
and
push
jge
js
mov
das
or
sub
enter
or
ret
mov
pop
dec
repnz
mov
or
lret
and
sti
mov
add
roll
pop
inc
test
out
cmp
outsb
inc
popf
ret
nop
push
in
jmp
movsb
and
inc
andb
and
or
jae
push
sbb
js
out
push
lret
fldcw
hlt
jno
sub
add
mov
mov
xchg
xchg
push
cmp
lret
lret
mov
push
rcll
fs
adc
cs
mov
jp
stos
jbe
into
push
and
je
iretw
pop
int
out
mov
jle
mov
adc
add
fldt
xor
leave
sub
jbe
push
add
sbb
data16
push
add
mov
add
imul
out
add
cmp
and
cmp
xor
lods
or
jg
into
jge
inc
adc
cmp
sub
mov
cmp
ret
sti
fs
push
stc
int
addl
mov
cld
int
rcl
cmpsb
mov
lahf
pop
movups
into
divb
pusha
insb
mov
rcr
xchg
popa
mov
lcall
xlat
mov
loope
xlat
out
cmpsl
mov
and
test
cwtl
adc
push
add
lods
scas
dec
ficoms
in
ret
in
and
js
mov
sub
imul
push
adc
lwpval
ss
icebp
fwait
inc
sub
or
fsubl
loopne
xchg
cld
sbb
mov
jmp
test
or
cmp
pop
pop
jns
and
mov
mov
sbb
aam
add
out
dec
fsts
sub
and
and
popf
cmp
jg
sahf
call
addb
mov
cmp
xorb
or
ds
out
movntq
out
xchg
aas
adcl
repz
or
mov
xor
sub
sub
or
test
mov
pop
mul
pushf
arpl
sub
pushf
insb
movsb
int3
jmp
pop
push
test
sahf
jbe
aaa
xchg
ljmp
fcoms
movq
in
inc
cmp
dec
int
mov
popf
vpunpcklbw
push
lods
fistpl
scas
jbe
aad
mov
push
or
fwait
cld
jno
xchg
pop
push
inc
jne
in
add
xor
filds
insb
pop
subb
arpl
mov
sub
sahf
push
je
and
ljmp
insb
std
into
out
add
movsb
inc
outsl
sub
push
mov
mov
push
and
andl
mov
xor
ds
pop
jnp
in
icebp
stc
dec
add
push
stos
adc
jmp
jnp
jnp
movb
jo
push
pop
addl
fimull
hlt
mov
xchg
cs
cmp
mov
add
in
repnz
adc
push
inc
push
in
mov
xor
push
dec
and
add
and
lds
or
mov
or
ds
imul
dec
ljmp
imul
push
push
adc
adc
fwait
jle
xchg
mov
or
repnz
addr16
js
adcl
movsl
rcr
add
shrb
inc
stc
ljmp
insl
add
insl
jne
push
add
xchg
int3
dec
sbb
cltd
inc
pushf
pushf
add
push
mov
cltd
lods
das
insb
jnp
mov
xchg
xchg
sahf
cs
lahf
jb
mov
jg
iret
rorb
push
adc
shlb
gs
mov
and
movsl
pop
popf
adc
jns
jae
pop
sbb
sahf
inc
inc
ret
aas
inc
and
loope
insl
call
pop
fistps
xor
mov
iret
add
insb
xlat
pop
out
int3
mov
nop
pop
xchg
sbb
aas
movsl
push
fcoml
pop
loopne
jo
aas
push
popa
scas
aad
in
loop
mov
and
shlb
add
mov
xchg
add
pop
dec
push
pop
insl
cmpb
mov
xor
xor
add
jns
or
fildl
jle
js
shrl
out
xchg
push
xchg
jmp
mov
rcll
ret
cmp
les
mov
fcompl
hlt
mov
call
andl
pushf
mov
movsl
ret
sub
je
adc
jmp
gs
repz
jp
test
xorb
mov
int3
mov
scas
ffreep
add
cltd
sub
pop
push
mov
fmul
sbb
scas
push
push
out
int3
add
loopne
pop
adc
inc
or
sub
loop
sahf
les
std
hlt
push
lods
in
fdivl
mov
addr16
dec
pop
inc
mov
lcall
mov
mov
mov
rorl
repz
and
mov
sub
add
lods
les
xor
add
rcrb
inc
adc
push
addl
popa
mov
test
and
aas
pop
hlt
data16
insl
pusha
ret
test
mov
imul
sbb
pop
mov
addr16
outsl
push
aas
dec
add
inc
or
shrl
push
inc
aaa
push
dec
loope
loop
gs
jns
ljmp
cmp
jne
shll
int3
pop
mov
mov
ljmp
fldt
nop
sbb
leave
paddb
sar
insb
pop
ret
push
fdivp
sub
adc
adc
push
jecxz
sbb
xor
or
enter
pop
add
xor
sub
jno
sahf
mov
dec
fistpll
or
inc
or
test
loopne
insl
pop
sahf
and
imul
mov
stos
fistpll
pop
mov
push
mov
sub
jns
jbe
lret
and
jle
xchg
dec
popf
fildl
push
and
popf
push
fmull
or
or
ret
sbb
imulb
cld
add
xor
arpl
movsb
jp
ss
int
xchg
adc
or
imul
cwtl
sbb
aas
stos
cmp
cmp
scas
cmp
hlt
inc
push
imul
mov
rcr
fs
outsl
sub
cli
lret
xchg
push
call
outsb
ud2
aas
pop
add
imul
in
sbb
pop
sbb
mov
lret
sub
mov
adc
ljmp
add
add
loopne
sub
rorl
push
cli
sbb
and
mov
cmp
lock
aaa
xchg
xchg
jecxz
rcl
jmp
xor
dec
mov
pop
add
jo
push
iret
imul
cltd
aam
sahf
gs
arpl
js
fstps
test
or
bound
inc
xor
or
idivb
pop
mov
icebp
push
jl
mov
pop
dec
xchg
leave
loope
imul
call
repnz
int3
and
mov
test
aas
or
movsl
outsl
push
inc
pop
in
pop
test
enterw
stc
xchg
cmp
mov
aam
pop
and
scas
pop
movsb
outsl
movsb
movsb
lea
popf
dec
pop
sahf
push
imul
pop
mov
adcb
fsts
cmp
jae
mov
popa
loop
out
out
insl
push
push
ror
fcoms
and
mov
pop
pushf
xor
push
or
dec
rorb
out
imul
fsubs
xor
or
fnstenv
psubb
movb
mov
inc
fldcw
dec
push
cmp
js
push
jecxz
aam
cs
aam
cmp
and
leave
scas
fisttps
insb
xchg
fcoml
inc
dec
adcl
in
mov
shll
jno
fisttps
cmp
pop
jae
inc
leave
mov
jnp
dec
fmuls
les
clc
fcomps
fidivrl
cbtw
dec
dec
mov
gs
mov
fidivrl
daa
add
daa
out
pop
andb
aam
cmp
int
sub
test
cmp
femms
data16
sbb
sbb
sub
mov
cmp
adc
mov
sbb
jle
pop
inc
jns
push
pop
nop
loopne
addl
fs
sbb
push
ret
iret
lahf
xchg
in
push
movsb
enter
insb
xchg
push
bound
lds
dec
jge
in
out
xor
push
rolb
adc
cmp
loop
jmp
jmp
xchg
movsb
mov
stos
in
mov
in
mov
scas
and
cs
in
xchg
std
movsl
pop
insl
adc
xchg
pop
and
dec
out
jnp
popf
shll
jmp
popf
ret
adc
push
loop
and
stos
xor
nop
or
orl
dec
push
lods
push
sbb
mov
pop
inc
cmp
mov
xorb
mov
cmc
jbe
leave
sub
hlt
out
inc
pop
nop
dec
xor
movsl
or
xor
cmp
xlat
fsubrl
xor
mov
add
aaa
cld
pop
iret
cs
jnp
das
std
lret
in
pop
xchg
jno
addl
inc
mov
adc
mov
xchg
lods
pop
pop
and
mov
scas
push
push
xor
testl
jecxz
negl
mov
aad
sbb
fcmovnu
xchg
inc
sbb
test
mov
mov
lret
rcrl
arpl
sub
or
in
xchg
mov
xor
pop
mov
dec
cmp
arpl
push
sbb
lret
icebp
stos
inc
fadd
dec
mov
test
add
fwait
or
rolb
pop
xor
cwtl
in
sbb
clc
fistpl
xchg
dec
mov
sbb
imul
sub
xchg
jo
int
repnz
mov
pop
mov
inc
pop
add
push
cmp
lea
stos
jl
adc
cs
sub
dec
arpl
mov
add
fdivl
xor
cmp
mov
push
data16
push
test
sub
not
xorb
or
lret
call
sbb
adc
out
daa
sub
mov
roll
in
mov
fwait
mov
gs
icebp
mov
cwtl
les
pop
pushf
lock
mov
cwtl
imul
in
inc
cmpsl
or
mov
lods
shrb
or
fildll
pop
and
pop
ljmp
stos
divl
aaa
enter
insb
imul
or
pop
push
add
movsb
push
dec
ss
lcall
ds
loope
iret
xchg
push
in
mov
shl
add
add
mov
jae
pop
arpl
fwait
popa
sub
xlat
ss
add
xchg
dec
cltd
and
lea
dec
loopne
cltd
cmp
mov
das
maxps
mov
and
jnp
pop
xchg
fsubrl
or
test
jmp
popa
jb
or
fisubrl
mov
inc
dec
dec
add
sbb
cs
inc
dec
int
dec
enter
les
adc
lcall
adc
lods
ljmp
add
dec
pop
push
or
sub
incb
aaa
pop
es
sub
lret
int
iret
aam
insl
enter
cmpsb
leave
enter
sbbl
stos
cmpsb
bnd
jo
jmp
jno
or
mov
add
xor
pop
stc
push
push
cmpb
dec
jmp
cmp
loope
sti
fwait
add
lcall
dec
add
mov
stc
stc
jmp
sbb
outsb
je
jae
sbb
dec
enter
or
lcall
test
push
push
stos
and
push
insb
sub
ja
sti
mov
lahf
or
or
inc
fisttps
in
or
test
les
add
xor
add
lock
movsb
pop
inc
adc
sub
mov
pop
lock
xchg
add
lahf
xor
movsb
cmc
stc
in
jbe
mov
lahf
leave
ffreep
pusha
adc
icebp
cmp
mov
jge
in
jecxz
jmp
cmpb
xchg
pop
rcll
rolb
loopne
pop
clc
imul
stos
out
imul
push
jecxz
xlat
sub
xor
push
in
push
or
cmp
xor
lret
lods
adc
stos
stos
subl
ret
xlat
into
popf
xchg
mov
int
mov
pop
mov
xchg
popf
fidivrl
dec
cmc
gs
out
scas
cli
cmp
jbe
cmc
sbb
jns
loope
sub
lea
or
std
in
cwtl
add
lock
jb
or
loop
pop
add
les
and
push
xchg
sub
or
or
lret
sub
fsubp
rcrl
negb
lcall
push
xchg
sbb
push
push
notb
jne
test
inc
mov
mov
out
into
js
ds
fsubl
jbe
insl
fldenv
ret
push
mov
gs
mov
push
push
fsts
sbb
scas
fidivrl
push
fsubrs
pusha
sbb
or
jecxz
mov
add
test
lods
xchg
dec
pop
push
jbe
xor
jae
ret
pop
in
mov
clc
pushf
pusha
rolb
les
xchg
mov
cli
out
ljmp
cmpsl
pop
mov
pop
lahf
lret
mov
mov
ret
jp
mov
inc
cmp
mov
pop
loop
popf
mov
iret
lcall
call
out
icebp
dec
lret
lods
iret
out
jle
push
jbe
lahf
add
fisttpll
jae
mov
ss
cld
or
mov
test
pushf
sub
inc
xor
inc
subl
mov
outsb
adc
and
jae
dec
jae
pop
xor
xchg
sbb
pop
fwait
mov
loope
orb
icebp
push
sti
dec
xor
fisttps
xor
jecxz
or
addr16
ss
mov
in
add
inc
dec
repnz
sub
inc
insb
jmp
les
sub
mov
mov
and
int
leave
pop
orl
lcall
or
arpl
fwait
pop
mov
sahf
cli
lret
push
add
leave
sub
or
mov
fbld
stos
out
loop
out
jno
push
inc
orl
adc
pop
ret
pop
arpl
sbb
lret
js
fcmovne
xchg
lods
cmc
push
lret
cmpsb
jb
xor
or
test
and
lds
loop
mov
jae
fdivrl
push
mov
lods
or
das
loop
or
fdivrl
pop
jae
pushf
loop,pn
add
add
lea
out
push
adc
or
pop
and
jo
js
lret
movsb
dec
or
pop
and
int
jae
inc
imul
movsl
sbb
pop
mov
aas
xchg
mov
scas
cmpsl
push
cmpsl
or
shrb
sti
add
sub
lret
les
cltd
adc
lea
jmp
ret
xor
pop
adc
fidivrs
push
pop
aam
je
sahf
ror
xchg
or
lahf
sarb
xor
movsl
xchg
jg
jecxz
jnp
fldl
xchg
lds
test
mov
xchg
popf
addr16
aam
xor
jne
xchg
fstl
push
xor
icebp
dec
shlb
mov
enter
inc
push
ret
and
lea
pop
loopne
or
add
and
cmpl
sbb
testl
rcrl
cmp
mov
xchg
stc
test
fldl
xchg
dec
push
inc
mov
jle
inc
xor
mov
repz
dec
jb
xchg
inc
adc
pop
push
inc
pusha
jl
in
cmp
xchg
and
dec
subb
std
ja
inc
das
pusha
enter
mov
mov
mov
push
adc
roll
xor
mov
inc
shl
cmp
mov
pop
out
addr16
adc
cmp
test
iret
iret
inc
inc
mov
cmp
mov
dec
mov
outsl
dec
push
mov
add
inc
dec
insl
xchg
push
fimull
adc
es
add
lahf
fsubr
push
lds
mov
and
jle
mov
into
or
add
mov
out
adc
mov
ret
xchg
and
scas
xchg
mov
int3
or
test
dec
sti
pop
dec
dec
sahf
lds
xchg
fsubrl
dec
inc
out
dec
push
adc
inc
xlat
or
adc
popa
push
movsl
mov
fs
test
in
lahf
jbe
adc
or
lds
adc
xchg
gs
pop
les
repz
or
aam
pop
enter
mov
ljmp
pop
cmp
dec
pop
xchg
iret
cmp
jnp
xor
dec
fimull
push
call
lock
inc
movsl
arpl
movsl
cmp
into
test
sbbb
imul
jle
loope
mov
loopne
and
inc
movsb
mov
push
xchg
call
sbb
mov
push
fldcw
daa
push
aaa
fmuls
sub
sub
jb
cmp
es
popf
xchg
mov
cltd
sbb
leave
aad
ret
add
cltd
sub
loope
mov
jnp
je
icebp
add
push
sbb
enter
scas
push
insb
jge
mov
push
push
sub
testw
sbb
mov
in
shll
inc
adc
jb
or
sbb
push
repz
xchg
mov
push
push
and
lods
fucomip
mov
scas
and
movsl
cmpsb
mov
cli
inc
jb
imul
rcll
dec
aad
out
jp
iret
out
jne
mov
aas
dec
call
inc
sub
dec
into
or
inc
adc
faddl
in
mov
repnz
mov
movsb
cwtl
add
sbb
inc
inc
mov
out
in
pop
mov
pop
mov
inc
xchg
dec
int
mov
push
daa
jecxz
adc
jno
cs
cs
das
or
adc
or
pop
or
nop
add
js
push
addr16
push
aad
mov
ret
xchg
jns
aam
test
cmp
cmp
mov
cmp
cld
out
jae
sbb
xchg
adc
loopne
icebp
sub
pushf
xchg
mov
jbe
jecxz
insb
jno
and
addr16
jmp
and
xchg
je
push
stos
div
sarl
test
ljmp
das
in
adc
add
sti
fsubr
cmpsl
push
jns
pop
outsl
push
fistpl
dec
rcr
push
push
std
xor
jge
in
stc
cwtl
test
mov
sbb
push
movsl
arpl
mov
sub
mov
lret
mov
jmp
inc
ret
push
push
fwait
or
xor
inc
push
cmp
int3
or
sbb
inc
out
mov
sarb
cmpsl
push
mov
popf
aad
pop
ret
orl
or
xchg
add
push
inc
add
pusha
repnz
mov
in
mov
add
xchg
inc
ret
stc
jae
inc
jg
ds
xor
lea
cmp
mov
or
mov
mov
enter
mov
test
ja
clc
dec
xchg
es
sub
orl
movsb
adc
js
repz
cmc
dec
dec
sahf
xor
in
jmp
out
dec
scas
aam
fisttpll
sub
int3
in
inc
mov
sti
in
cltd
push
and
dec
mov
clc
push
jb
aad
ss
mov
ss
ds
adc
loopne
movsl
in
insb
pop
pop
xor
lcall
sbb
test
inc
jb
rclb
cld
pop
ljmp
scas
or
sbb
and
addr16
repnz
xor
loop
and
mov
rcll
movsb
pop
dec
movsb
mov
and
sub
inc
sub
or
mov
xchg
jbe
fisubs
xchg
jg
insl
push
add
inc
and
jl
imulb
mov
fsubl
leave
or
push
xor
lahf
push
gs
pop
ljmp
push
add
loopne
sbb
outsl
scas
mov
sub
push
fwait
icebp
sub
push
ja
loopne
and
lods
inc
mov
pop
out
sub
add
mov
fldl
loopne
icebp
inc
mov
xchg
pop
mov
pop
mov
or
ret
testl
dec
dec
dec
test
in
test
mov
mov
in
cs
mov
xchg
cmp
cmp
mov
fisubrl
add
enter
dec
outsb
pop
clc
pop
or
lods
aam
inc
icebp
push
mov
ret
testb
out
mov
add
insl
dec
test
and
and
test
or
push
xchg
inc
ds
pop
pop
andl
xchg
jp
mov
nop
mov
fistl
push
rcrl
jns
test
sahf
push
and
lcall
andl
and
adc
cmpsl
nop
fidivrs
xchg
mov
andb
andl
std
test
cmpsb
divb
mov
outsb
dec
lret
ljmp
lahf
loop
cmpsb
jno
sbb
leave
xchg
xor
gs
xor
stc
fstpl
xor
mov
insb
and
cmp
xor
aad
ss
cli
repnz
int
add
push
lcall
lret
shlb
cmp
aaa
insb
xor
cwtl
pop
xchg
xchg
scas
cmpsb
and
aad
push
bound
inc
add
fldl
shll
cmp
add
add
stos
mov
push
lret
notl
sbb
dec
icebp
test
xor
cs
in
jo
insl
inc
das
jb
imul
jbe
adc
xor
inc
cs
or
iret
movsb
clc
push
aad
icebp
push
mov
pop
dec
jne
ja
xlat
jmp
cld
in
push
or
mov
std
dec
out
scas
test
in
pop
push
data16
ret
jmp
inc
leave
std
push
push
sub
testl
mov
inc
aaa
mov
clc
cmp
imul
stc
pop
mov
repz
pop
pop
in
cltd
dec
repnz
mov
outsb
mov
popa
mov
jle
shll
inc
pusha
ds
dec
xchg
cmp
test
pop
je
dec
push
mov
adc
push
ja
push
cmp
push
xchg
gs
push
jo
enter
push
je
cmpsl
push
cld
into
cmp
push
mov
pusha
fnsave
psadbw
sbb
fwait
dec
mov
sahf
add
out
jp
dec
pop
sbb
gs
xor
repz
sti
sub
in
faddl
icebp
push
pop
push
xchg
std
mov
add
xchg
and
mov
aad
or
adc
repnz
sti
xchg
out
jne
pop
and
loope
xchg
or
sti
jmp
fdivp
cld
add
pop
fldcw
fistpl
push
dec
add
add
xlat
daa
outsl
clc
mov
xor
stos
jge
inc
ss
jp
xchg
jmp
aas
mov
fdivrs
inc
mov
out
cmpsb
and
stc
lret
dec
dec
popf
and
xchg
hlt
mov
pop
arpl
cmc
pop
divb
cld
push
jo
push
mov
out
mov
xorl
mov
fcoml
aas
iret
sbb
aam
ffree
add
mov
inc
sub
push
dec
sbb
cli
rorb
push
ja
mov
jnp
aas
cs
leave
pop
sbb
clc
sub
mov
mov
xor
add
aad
fisttpl
mov
outsb
lcall
jge
repz
mov
adc
hlt
mov
lock
mov
out
adc
cltd
test
cmp
iret
jns
xchg
fcmove
and
push
mov
mov
cmp
dec
icebp
adc
jp
lret
jmp
pop
jne
cli
mov
sbb
mov
cmp
vcvtsi2sdl
ret
mov
dec
add
sub
dec
mov
ja
adc
xor
mov
dec
les
inc
xor
push
push
or
pop
lods
rolb
pop
rcrb
call
mov
aaa
jno
rolb
mov
xor
mov
pop
outsl
pop
imul
pop
xchg
inc
repnz
mov
and
dec
push
mov
out
popf
add
jns
adc
loop
dec
insl
imul
cltd
add
xor
or
repnz
cmpsb
push
xor
xchg
stc
jb
movsl
cli
sbb
push
sub
int3
mov
push
adc
das
sub
bound
adc
mov
int3
test
movsl
xor
test
add
and
or
or
aaa
negb
mov
bound
cmpsl
adc
lea
push
mov
call
push
lret
les
jge
xorl
xor
sub
aaa
mov
mov
jge
iret
adc
pop
imul
sub
cmpsb
addr16
cmp
shr
and
mov
aad
jnp
add
jecxz
sub
loop
push
lea
lret
jbe
test
jecxz
les
sub
cmc
jnp
andl
in
and
jo
dec
mov
jne
mov
dec
push
pushf
ds
leave
mov
in
cltd
and
cmp
mov
dec
stc
dec
inc
jg
jb
adc
jge
cld
lea
sbbb
jns
jmp
repz
mov
cld
xchg
pop
and
imull
or
out
flds
pop
jns
xchg
mov
jo
pop
mov
mov
jmp
sub
adc
lods
push
inc
ljmp
inc
pushf
jne
mov
or
shr
out
movsb
into
cmp
clc
jns
dec
movsb
mov
aas
push
add
cs
adc
int3
xchg
pushl
or
mov
in
push
inc
pop
in
dec
push
add
or
sbb
add
cmp
lahf
jle
jl
ljmp
or
xorb
in
ret
subl
pushf
xor
or
add
icebp
loop
es
aas
in
push
and
jb
loope
testl
lods
test
dec
and
xchg
push
fidivrl
xchg
sbb
cmp
xchg
fsubrl
inc
in
cld
sbb
adc
push
test
popa
jl
scas
mov
xchg
lods
xchg
sub
test
test
fisttpll
xchg
dec
mov
ds
adc
cs
fsubrl
jmp
fldl
mov
int
cmp
ljmp
sub
lahf
xchg
cltd
dec
inc
fnstsw
aad
jmp
mov
and
mov
inc
xchg
jp
push
pop
and
mov
and
daa
jmp
add
nop
int
push
mov
das
adc
ret
das
lds
mov
mov
sbb
adc
add
orb
pop
mov
xor
mov
iret
ret
dec
out
xchg
addr16
inc
inc
lret
adc
sti
mov
or
mov
lods
mov
xchg
ficompl
sub
lahf
xor
cwtl
jge
xor
jns
jp
cld
mov
enter
outsl
push
scas
ljmp
xchg
dec
push
into
jp
jns
stos
inc
mov
loope
movsb
dec
adc
test
jle
push
fmulp
xor
int3
movsl
xchg
lret
pushf
pop
sarb
sub
movsb
jo
xlat
int
mov
pop
lock
inc
xchg
mov
sub
xor
ljmp
mov
loope
int
dec
ljmp
xor
mov
int
es
sub
out
les
jb
mov
push
cmc
xchg
jno
out
fdivrs
sbb
popa
imul
scas
lcall
inc
dec
adc
iret
repz
je
cld
mov
xchg
jno
sub
aas
inc
cmpsb
dec
xchg
fsubrl
aaa
dec
mov
cs
gs
aad
stos
lret
ds
add
and
cwtl
hlt
test
push
cli
pop
nop
out
jae
out
jbe
into
into
dec
in
loopne
bnd
sub
inc
mov
ss
movsb
lds
jo
xor
nop
cmp
sbb
xchg
add
jnp
scas
ljmp
mov
add
cmpb
add
add
sbb
push
adc
jmp
inc
repz
insl
sub
fstl
mov
lea
ja
fs
dec
das
pop
mov
and
sbb
mov
fiadds
jmp
dec
aam
stos
push
xchg
aam
mov
stos
insl
sahf
cmpb
xlat
pop
fstpl
aam
and
add
mov
cmpsb
push
dec
mov
hlt
dec
daa
cmc
jg
adc
and
mov
jp
popa
sbb
lods
mov
mov
mov
adc
inc
add
mov
gs
jbe
arpl
pop
cli
mov
sahf
xor
mov
icebp
cmp
pusha
shl
imul
xchg
aam
shrl
das
inc
mov
lock
imul
push
fidivs
int
xchg
xchg
cmp
sti
shlb
mov
or
scas
sub
fimuls
inc
hlt
jl
cmp
inc
leave
in
inc
adc
mov
loop
stos
out
stos
jbe
out
int3
call
add
adc
outsl
add
mov
inc
mov
adc
shlb
inc
test
pop
sbbl
enter
andl
clc
push
notl
pop
and
inc
movsb
std
lahf
ljmp
sub
mov
in
gs
and
int3
and
pop
mov
pushf
divb
aas
out
psrlq
pushf
loopne
popa
inc
lods
sbbb
outsb
aaa
out
lods
jo
cmp
mov
in
inc
leave
mov
icebp
push
sti
cmp
pop
int
lock
lock
insb
js
inc
jae
out
fidivs
jg
mov
scas
aaa
mov
aam
lret
fimuls
mov
add
sti
pop
andl
sub
movsl
ret
jne
add
enter
notl
add
dec
xchg
push
movsl
test
stos
pushf
push
ds
or
xor
and
cli
adc
in
and
inc
sbb
sub
add
push
and
pop
sbb
mov
inc
sub
xor
xchg
je
cmp
mov
xor
cmp
jne
xchg
hlt
mov
stos
fs
jge
xchg
out
inc
mov
add
test
mov
mov
imul
sub
gs
push
bound
push
dec
repnz
movsb
mov
movsl
scas
adc
test
sbb
cmp
sub
or
xchg
mov
add
fwait
fs
xchg
aad
jge
add
imul
fucomp
shlb
and
ljmp
jns
mov
cli
fbld
xor
dec
sub
xor
imul
xchg
stc
cmp
insl
insl
mov
mov
int
jnp
inc
inc
mov
xchg
iret
sub
mov
jle
subl
inc
bound
add
ja
hlt
ja
jo
adc
rclb
add
test
inc
mov
or
in
sub
cmp
sbb
sub
cwtl
push
roll
adc
inc
roll
js
leave
mov
inc
mov
mov
pop
adc
sub
push
sbb
jnp
test
cmc
stc
cmpsb
stos
xchg
inc
mov
jl
movsl
data16
mov
iret
sbb
push
push
stos
incb
mov
mov
mov
cmp
mov
fcmovnbe
dec
test
icebp
sarb
fidivs
loop
mov
jge
mov
mov
push
mov
inc
mov
stos
xchg
jnp
push
ds
sub
bound
hlt
add
and
mov
jae
pop
cmp
jae
adc
lock
loop
lahf
jnp
iret
movsl
int3
fisttps
pushf
test
sbb
xlat
pop
int
mov
mov
mov
cmpsl
loop
fidivrl
mov
mov
mov
mov
xor
push
repz
bound
and
mov
in
aaa
dec
add
push
jmp
outsl
lods
xor
cmp
mov
dec
out
aad
daa
sub
imul
or
lock
add
cld
rorb
bound
adc
aad
loopne
dec
shll
inc
adcb
cmp
xchg
pop
dec
stos
outsb
les
inc
push
adc
inc
fldenv
pop
insb
fmull
and
pop
pop
iret
addb
sarl
and
jmp
xor
shll
hlt
in
cmp
inc
pop
jmp
mov
mov
je
mov
push
mov
adc
xchg
xor
jmp
and
int
in
cwtl
mov
inc
jbe
push
scas
jbe
cmpsl
jns
mov
inc
rolb
les
jo
sub
aas
in
js
jne
popf
mov
push
and
in
out
pop
push
cmp
dec
jg
shll
aas
ljmp
addr16
repnz
nop
subb
cltd
pop
xchg
mov
lret
adc
push
insl
mov
xor
pop
mov
or
or
push
imul
cmp
lods
dec
jo
pop
jmp
adc
mov
push
aas
in
mov
push
mov
mov
xor
add
stc
mov
pop
mov
push
mov
adc
xchg
or
or
repz
sbb
inc
stos
lods
inc
in
jge
xchg
jnp
pop
int3
lret
mov
pop
lock
fistpl
addr16
mov
cwtl
cmc
out
dec
imul
mov
add
sub
int3
push
cmpsb
mov
test
sbb
int
stc
mov
fs
sbb
sbbl
outsb
int
stos
clc
mov
adc
jl
sub
sub
les
add
lds
dec
loopne
dec
push
mov
pop
lods
repz
in
mov
out
int
dec
mov
stc
mov
xchg
sbb
mov
push
dec
pop
ds
jns
xor
push
daa
dec
lea
cmp
cmp
inc
mov
adc
shl
inc
cwtl
test
inc
or
enter
mov
mov
out
cli
xchg
pop
sub
cmp
cmpsb
adc
movsl
add
loope
cmpsl
xchg
lock
sti
push
aaa
sub
mov
je
jae
xchg
mov
mov
pop
inc
xchg
mov
and
lds
inc
inc
sarl
dec
jmp
dec
daa
cld
xchg
dec
and
dec
xor
loop
sub
fsubrs
adc
pop
xchg
jmp
cwtl
mov
mov
mov
jge
int3
adc
pop
and
fisubl
cld
iret
sub
dec
add
insb
orb
dec
jge
sbb
data16
mov
and
mov
cltd
gs
jb
jmp
out
fistpl
dec
adcb
xchg
inc
mov
pop
sbb
lcall
mov
movsl
add
addb
mov
movl
jp
or
je
addr16
lods
jo
aam
imul
stos
out
movsb
and
movsb
sbb
pop
ljmp
aad
push
gs
mov
mov
ss
inc
fbld
pop
cmp
jns
loopne
xchg
cmp
jg
mov
stos
lret
inc
or
and
andl
stc
cli
lea
aas
cwtl
mov
ss
cmpsl
cmpsb
test
jle
ret
imul
cmp
inc
jle
inc
push
mov
jle
sbb
add
cmp
pushf
cmp
mov
stos
scas
pop
mov
fcoml
les
ds
stc
outsl
shr
cmp
outsb
ljmp
rcll
out
and
cmpsl
xlat
cmpb
xchg
gs
sbb
xchg
les
lret
xchg
jecxz
fs
ss
nop
pop
lret
jmp
enter
mov
repz
adc
inc
in
dec
mov
in
mov
xchg
mov
mov
mov
fisubrs
jns
in
sbb
mov
and
cmp
mov
sub
add
push
dec
dec
leave
fisttps
mov
mov
fwait
aaa
in
inc
push
xchg
cmp
mov
repz
push
and
mov
cmpsl
or
fsincos
mov
push
leave
jae
add
cmpl
js
xlat
cmpsb
fmulp
jmp
inc
push
or
inc
sub
jg
out
jl
xor
push
inc
pop
inc
jne
bswap
iret
xor
inc
mov
sub
lret
fdivr
iret
outsl
loope
mov
mov
lahf
loopne
hlt
je
jle
push
pop
dec
mov
or
xchg
or
jno
test
call
xchg
aaa
pushf
push
mov
call
mov
add
pop
inc
pop
fmull
mov
inc
stos
in
and
jmp
push
into
inc
or
xchg
movsl
cmp
mov
bnd
pop
pop
daa
test
lea
cmpsb
jg
popa
dec
sbb
in
mov
je
or
xlat
jmp
insl
xor
adc
icebp
jne
mov
sbb
mov
mov
or
mov
out
xor
leave
pop
rcr
cltd
pusha
aas
inc
lret
addr16
test
pushf
in
lea
cmp
clc
or
sbb
bound
das
push
cmp
dec
push
rcr
sbb
out
xor
vpmacssdqh
and
fcmovnbe
sub
popf
retw
pusha
sbb
cmp
mov
jo
out
push
jno
or
lock
inc
adc
dec
xor
push
push
pop
add
add
sub
xchg
cli
fs
pop
inc
cmpsl
loopne
or
and
mov
xor
lds
or
lcall
cwtl
lret
mov
push
adc
out
incl
aaa
sarl
rcrl
lahf
in
dec
xor
pop
lret
push
jbe
cmpsl
ja
ret
popf
jmp
xchg
repz
loope
shrl
fs
mov
sti
add
lods
js
xchg
mov
out
cwtl
out
outsl
jae
testb
aas
pushf
push
push
cmp
jno
fs
xor
stos
jae
sbb
mov
shl
or
sub
repnz
out
sbb
dec
pusha
push
into
loope
gs
mov
dec
inc
call
pushf
push
pop
cmpsb
or
lcall
cmp
pop
pop
jo
jg
fwait
xchg
xlat
pushl
ret
pop
shl
lcall
mov
cmp
pop
fdivr
stc
push
mov
add
loopne
xor
enter
ret
push
fs
mov
lds
inc
add
mov
push
outsl
loope
hlt
es
adc
adcb
pushf
inc
fisttps
jl
and
ret
cmc
add
add
shl
scas
jmp
mov
cmpsb
jnp
std
shlb
xor
cmp
ret
mov
push
loope
xor
incl
pop
add
lods
sbb
mov
js
outsb
cld
cmp
and
iret
ljmp
mov
repnz
stos
jl
mov
es
dec
lods
add
leave
mov
sub
push
shrb
inc
xchg
repnz
ss
sub
ror
sub
push
push
enter
push
dec
stc
icebp
mul
lods
or
out
lea
shl
imul
ret
test
adc
add
out
adc
repnz
cmp
pop
ficomps
imul
dec
pop
inc
mov
adc
ret
cmp
xchg
or
jne
test
or
sub
pop
inc
rorl
cmp
lods
fcmovu
adc
and
dec
in
clc
inc
movsl
cmc
pop
in
nop
mov
into
pop
mov
fsubl
mov
subb
les
pushf
orb
out
xchg
push
pop
ret
mov
lahf
mov
test
scas
stos
and
test
push
cmp
cmp
add
push
cmp
inc
mov
xchg
inc
adc
mov
add
in
ljmp
mov
cltd
es
mov
outsl
shll
xor
xchg
call
xchg
int3
mov
mov
mov
inc
and
mov
pushf
dec
jp
mov
repz
jp
cmp
xchg
imul
adc
mov
pop
shl
pop
jns
xchg
mov
aad
xor
negb
mov
inc
addl
and
mov
fs
cmpsl
lea
mov
inc
pop
xor
in
lcall
ret
inc
test
enter
fdivs
cmp
loope
andl
adc
push
in
mov
jge
push
xor
inc
movsl
xchg
daa
rorl
pop
enter
repz
cmp
push
push
pcmpeqd
xchg
inc
int
cli
push
aas
xchg
jmp
xor
sub
mov
test
in
loope
add
mov
push
push
rep
sub
mov
xchg
sub
orb
movsl
fimuls
testl
mov
adc
fucomip
push
cltd
popf
lret
fwait
sti
xor
shlb
lods
cmpsl
push
inc
push
fsubs
addl
mov
mov
stc
sub
xor
and
clc
mov
xor
mov
xchg
notl
negl
sbb
push
xor
in
push
mov
xorl
cwtl
mov
aaa
jns
push
loopne
repz
cmc
inc
icebp
cld
adc
sub
out
mov
imul
stos
xchg
outsl
jle
mov
sbb
mov
jmp
push
mov
shlb
dec
sub
jmp
insl
dec
mov
je
push
push
jae
mov
inc
mov
dec
std
sti
xchg
jo
rcrb
push
out
lock
push
cmp
mov
rcl
push
shr
xchg
sub
int3
mov
mov
xor
lret
xchg
outsl
addr16
cmpsl
das
sbb
stc
cmp
outsb
cmc
xor
pop
dec
lds
push
mov
and
daa
into
mov
add
pop
dec
mov
enter
jne
sub
cmp
das
inc
bound
call
ljmp
adc
in
mov
pop
add
inc
sbb
loope
inc
cmp
enter
xor
add
sbb
loope
add
shrb
in
push
out
mov
dec
ret
jb
outsl
sub
aam
add
inc
lods
daa
inc
movsl
or
rclb
in
fcoml
std
pop
loop
gs
fstpl
inc
fcmovne
in
xor
orb
jle
int
pop
sbb
xor
loopne
inc
cs
fstps
out
lock
cltd
mov
pop
orl
and
or
shlb
mov
stos
inc
dec
incl
out
push
sbb
ret
insl
movsb
jl
cld
xor
mov
addb
jp
adc
andl
xchg
or
fcompl
inc
or
leave
bound
shll
mov
stc
and
pop
pop
mov
jp
gs
mov
sbb
add
out
push
sub
adc
and
sbb
xchg
or
test
in
mov
inc
dec
repz
cmovge
negb
out
in
inc
aaa
out
xchg
pop
jge
ljmp
sbbb
outsb
ret
sbb
lcall
jns
jne
test
sub
mov
ror
or
test
shll
sbb
repz
pusha
pushf
add
cmc
mov
fstl
bound
jb
jp
subb
mov
stc
cld
std
mov
fcomps
loopne
mov
aaa
sub
repz
cmp
xchg
jle
mov
mov
and
ja
flds
rclb
push
testb
shlb
rolb
pop
push
ds
pop
xor
pop
mov
cmpsb
out
mov
stc
rcrl
loope
pop
jne
int
jle
push
cld
test
out
sbb
inc
mov
cltd
xor
fists
movsl
clc
enter
sub
inc
and
arpl
push
lock
xchg
test
mov
dec
adc
dec
adc
jno,pn
cmp
dec
ja
iret
or
jp
or
mov
dec
sub
jae
mov
dec
cmpsb
sub
xchg
add
inc
cmp
sub
loopne
ret
mov
cmpsb
dec
int3
inc
mov
sar
lods
loop
jmp
lods
repnz
or
fcmovbe
iret
jno
inc
scas
xor
or
inc
inc
mov
jmp
push
loope
or
xchg
pop
or
jge
mov
lods
xor
sub
mov
mov
lcall
cs
cmp
sub
and
cmp
fwait
cmc
push
mov
jecxz
sbb
mov
notb
lcall
imul
fimuls
sub
jp
icebp
lea
xchg
lock
cmc
pop
push
push
xchg
and
cmpsl
adc
lret
mov
push
or
in
mov
shlb
lea
pop
movsl
sti
pop
push
aas
shrb
ja
sub
mov
xchg
dec
and
movsl
inc
mov
push
stos
jnp
out
lea
jb
xchg
fstpt
dec
add
outsl
fbld
push
ljmp
pop
xchg
das
cmp
clc
call
mov
cli
mov
movsl
movsb
addr16
sbb
xchg
bound
xchg
mov
in
fwait
lret
push
fisubrl
and
pop
adcw
sbb
mov
jg
lods
cmpsb
nop
mov
adc
nop
stc
mov
in
mov
sub
cs
inc
ror
daa
inc
or
mov
push
out
and
or
ret
stc
fcomi
add
in
mov
dec
repz
push
addr16
les
push
mov
dec
dec
inc
jle
dec
pop
out
outsl
ret
repz
sub
lea
sub
hlt
jno
add
pop
pop
xor
push
lds
xchg
mov
cld
test
cmc
int3
in
jbe
xchg
mov
mov
popf
pop
mov
or
lcall
in
out
xlat
and
push
lods
mov
or
cmpsl
or
pop
xor
mov
mov
ss
sub
mov
rcrl
addr16
fnsave
sbb
ss
scas
in
les
ds
push
arpl
cmp
sbb
jnp
pop
or
add
xchg
push
mov
or
jg
nop
push
xchg
jge
test
sahf
pop
xor
test
je
mov
xor
pop
std
mov
and
insl
aas
lea
sti
call
add
ret
mov
cwtl
into
mov
add
push
adc
xchg
sub
mov
adc
imul
ret
mov
sbb
sarl
mov
inc
adc
mov
and
addl
push
jl
push
cwtl
pop
nop
and
cwtl
addb
ljmp
cmp
andl
cwtl
or
dec
push
aam
push
cld
jae
iret
sbb
fisttpl
pop
mov
add
call
add
jne
xor
add
fisubl
fpatan
jno
fdivl
sub
loope
in
inc
pop
outsl
cli
call
mov
nop
dec
std
clc
and
or
jnp
add
sarl
dec
jb
stos
inc
mov
addr16
push
jno
xor
jno
jbe
push
xchg
out
test
addl
cld
adcl
xor
inc
cvtps2pi
cmp
push
xor
or
shlb
lock
fwait
mov
jns
mov
fnstcw
repz
mov
pushf
cmpsl
mov
or
je
lahf
add
fistl
push
mov
mov
clc
int
sub
ficomps
maxps
inc
mov
cli
add
in
dec
jp
add
pushf
dec
or
outsb
cmp
test
dec
rorb
outsl
ja
adc
das
stos
jbe
adc
xor
xlat
sbb
mov
pop
inc
das
sub
repnz
xchg
mov
mov
mov
xchg
cmp
in
mov
sub
and
pop
cld
lahf
adc
and
enter
js
es
dec
lahf
addr16
ret
or
or
mov
or
mov
pop
repz
mov
add
jne
mov
repz
push
jns
push
jne
inc
mov
je
cmpsb
jp
push
fdivs
xchg
shrb
mov
pop
outsb
out
xchg
popf
das
lds
fwait
xchg
lea
mov
stos
cmp
inc
xchg
sar
rclb
xchg
xchg
jno
jne
mov
mov
xchg
icebp
pop
mov
loope
scas
std
sbb
pushf
dec
xor
ficompl
lods
inc
inc
and
jmp
pop
mov
add
clc
xchg
sbb
and
js
mov
mov
icebp
in
leave
dec
mov
shlb
sbb
mov
cmp
out
and
in
and
in
rol
mov
xor
adc
insl
pop
fidivrs
inc
sub
cwtl
pop
mov
lret
int3
or
outsb
repnz
jmp
into
ret
popa
inc
dec
cltd
mov
nop
int3
or
loope
lret
push
sub
jae
push
sbbb
lds
jns
pop
add
loopne
call
and
jno
xor
test
sub
mov
pop
mov
mov
dec
add
cli
orb
mov
mov
and
push
add
push
test
sub
ljmp
and
mov
push
xchg
and
sahf
aas
addr16
stc
xchg
xchg
or
mov
xchg
scas
and
orb
fwait
mov
dec
xchg
add
jl
popa
mov
xchg
je
jl
shll
loop
xchg
xor
lea
xor
out
or
sub
arpl
cli
leave
daa
or
sub
mov
jg
inc
scas
test
in
and
filds
cld
adc
jae
lahf
repz
xor
add
mov
jecxz
inc
je
ds
jbe
icebp
cld
inc
movsb
mov
inc
cmp
or
ljmp
mov
xchg
sub
adc
add
mov
xor
xchg
int
jl
call
xchg
xor
xor
dec
mov
push
insl
out
and
jnp
ljmp
mov
stos
pusha
sub
add
sub
and
fcoml
std
addl
fisubrl
cli
mov
out
dec
jns
lret
stos
scas
decl
sbb
ret
jb
inc
pop
ds
outsb
sub
dec
das
and
imul
add
movsl
pop
sarb
inc
nop
js
ds
lock
and
lock
push
and
xor
cmp
pop
lret
adc
out
mov
jmp
jo
repnz
mov
push
mov
mov
scas
mov
pop
sahf
jle
mov
aaa
out
clc
and
int3
ss
and
xchg
cmp
mov
xor
cmp
lds
mov
lahf
insb
adc
dec
mov
roll
pop
shrl
addr16
insb
shrl
mov
inc
sbb
setge
sbb
or
adc
gs
stc
push
cmp
pop
ja
pop
negb
fidivrl
xor
daa
rcrb
ja
test
mov
or
mov
or
adc
imul
xchg
cmp
xor
add
sarb
inc
pusha
fldenv
arpl
inc
add
jo
jle
roll
mov
pop
insl
shll
vmovsldup
daa
push
dec
flds
dec
or
lods
test
mov
push
pushf
inc
sarl
cmp
daa
sti
push
sbbb
movsb
or
int
adc
mov
sahf
inc
add
sbb
lock
inc
adc
jle
push
adc
scas
mov
xchg
pop
jmp
aam
call
inc
cmp
ret
xor
out
addr16
fs
jl
xlat
mov
pop
add
sbb
loop
push
pop
jl
pusha
mov
push
jecxz
testb
mov
test
or
pop
mov
adc
sbb
xchg
pop
int
xor
or
mov
sti
sub
test
subl
mov
add
mov
pop
mov
aam
push
aaa
cmp
aas
inc
sahf
mov
out
add
cmc
insl
or
inc
xchg
mov
ja
mov
mov
shrl
jl
je
dec
sub
cmp
adc
xchg
shrl
outsb
or
inc
ret
add
and
cld
sahf
sbb
in
pop
out
or
inc
inc
sbb
js
jbe
outsl
xor
push
sahf
in
in
push
pop
fs
push
enter
mov
xor
sbb
roll
push
ret
cmc
fsubrl
mov
add
mov
pop
ja
xor
pop
enter
dec
ds
mov
std
sbb
fdivl
jmp
adc
xchg
loopne
jecxz
dec
push
bound
xchg
xchg
in
ljmp
and
adc
jno
rorl
pop
jae
adc
sarb
aas
dec
repnz
pminsw
mov
insb
fcmovb
orl
push
sahf
enter
sub
push
test
arpl
xchg
xor
fxch
int
add
push
ljmp
insb
inc
and
and
and
outsl
daa
je
outsl
scas
xchg
mov
cmp
xchg
sub
xchg
data16
addr16
daa
jno
jo
mov
dec
and
out
jge
sub
call
lea
test
jns
aam
mov
jns
stos
mov
enter
mov
shl
lds
sub
sub
add
mov
jne
arpl
xor
rclb
filds
push
lock
lahf
in
add
mov
mov
cmp
loop
and
pusha
add
cmp
mov
xchg
mov
lret
or
adc
outsb
pop
inc
rorl
das
inc
psrld
scas
cmpsb
cwtl
pop
aam
lret
popf
add
int3
sub
shll
inc
and
dec
scas
jbe
rolb
jns
in
fcoms
leave
movsbl
dec
sub
call
scas
adc
in
adc
jne
popf
cmp
int3
or
sbb
cwtl
je
mov
sub
mov
fistpl
sbb
xchg
xchg
mov
out
filds
jae
fwait
imull
pop
shl
lods
jbe
cli
add
stos
xchg
add
pop
jmp
fbld
and
cmp
xlat
xchg
mov
jecxz
cmc
cmc
repz
push
outsb
jbe
fsubr
jmp
data16
ficompl
jns
int
sub
pop
mov
mov
adc
pop
lds
mov
je
bound
outsb
xchg
sub
icebp
mov
jne
xor
xorl
flds
addr16
mov
jbe
jns
sub
mov
imul
inc
cmp
into
fsubrl
push
rol
outsb
push
jbe
insb
mov
insl
and
mull
mov
xchg
inc
jecxz
and
xchg
mov
fisttpll
cmc
cmpsl
xchg
ja
xchg
pushf
xor
or
in
or
xchg
sub
fcmovbe
pop
jo
and
dec
cmp
fnstsw
fisttpll
rcll
icebp
roll
setb
xor
outsb
add
lahf
mov
and
cmp
xorl
or
test
mov
shll
jl
lods
mov
sbb
cmp
mov
sahf
lock
shrb
imul
test
jno
dec
out
loopne
xchg
gs
notb
popf
jecxz
imul
add
and
mov
out
sbb
shl
dec
pop
pop
ss
mov
and
aas
sbb
fnstenv
xor
jl
popf
sbb
xchg
xlat
xchg
ja
and
cmp
dec
out
cmp
bound
pop
sub
push
xlat
enter
pusha
adc
stc
xchg
inc
rcrb
and
pop
push
scas
xor
adc
pop
xchg
cli
xchg
popf
daa
jg
mov
addr16
sti
pop
arpl
add
mov
push
pop
movsl
stos
sbb
push
movsl
mov
jp
call
mov
jbe
fidivs
fldcw
jmp
push
fisubs
call
sub
jmp
stos
sub
pop
and
or
in
xchg
cli
pop
adc
mov
sub
stos
mov
push
inc
push
jne
push
scas
daa
sub
cmp
sub
sbb
mov
lret
aaa
inc
aas
insb
and
push
loop
cmp
push
sub
sahf
bswap
inc
hlt
jge
ret
test
ret
cmp
push
int
outsl
sub
xchg
test
rcll
or
fwait
lods
pop
dec
leave
jg
mov
int
jne
or
jle
adc
add
addr16
inc
and
pop
cmp
mov
jmp
mov
int
cwtl
insb
sub
daa
call
or
inc
scas
loop
mov
mov
xchg
aas
fnstcw
add
ljmp
sbbl
adc
ds
sub
dec
aad
adc
es
xchg
push
outsl
fs
jg
pop
pop
push
incb
xchg
mov
xchg
mov
inc
stos
cmc
dec
pop
dec
int3
pop
es
mov
rorb
aad
nop
pop
test
xor
inc
jge
pop
adc
gs
outsb
ret
jbe
je
sbb
or
inc
add
outsb
dec
leave
cmp
dec
adc
sub
xor
dec
insb
mov
in
push
in
inc
setp
fs
lea
add
in
inc
pop
xlat
sub
push
fmull
jne
pop
repnz
jle
outsl
in
mov
xchg
push
add
mov
stos
je
xor
push
mov
fwait
stos
dec
sahf
lds
mov
xor
ret
and
push
lea
insb
sti
sbb
cmp
sahf
test
mov
loope
mov
inc
data16
sarb
cmpsl
mov
dec
clc
jae
sbb
fdiv
xor
jb
gs
enter
lcall
mov
popa
ror
mov
and
xchg
xchg
jne
shrb
jge
push
push
inc
bnd
mov
icebp
pop
and
inc
mov
lea
lea
xchg
mov
pop
andl
jno
push
movsl
pushf
fdivs
insb
mov
std
mov
stos
out
push
lds
subl
dec
mov
lahf
dec
xchg
clc
cmc
ljmp
test
mov
lods
dec
pusha
and
xor
sbb
lds
cwtl
shll
add
pop
pop
xchg
ss
pop
or
push
xlat
cmc
xlat
mov
cmp
add
icebp
iret
mov
push
es
lahf
jb
push
lock
or
cmpsl
out
mov
xor
add
fcoml
and
pop
xlat
mov
sbb
rorl
int3
das
ret
sbb
inc
icebp
xchg
enter
in
push
jae
outsb
jp
inc
adc
in
jge
repnz
xor
inc
jmp
mov
out
shlb
call
push
cli
push
cs
fsub
mov
dec
cmp
adc
cmp
xor
ret
cmp
sub
pop
insb
int3
inc
push
js
cmpsl
push
testl
mov
mov
push
inc
inc
mov
dec
inc
leave
test
mulb
xchg
out
cmpsl
cwtl
adc
jno
imull
popf
sub
or
and
fsubp
xor
sbb
sub
dec
mov
cmp
mov
mov
mov
aaa
aas
sti
jns
pop
loopne
jl
leave
dec
mov
inc
cmc
push
popf
pop
and
dec
sub
dec
mov
hlt
lds
mov
fwait
cld
loopne
dec
cld
push
sub
cmp
cmp
into
cmp
imul
push
cli
cmp
push
imul
adc
faddl
mov
sub
rorb
sbb
out
fwait
in
dec
enter
cmp
cmp
scas
xchg
js
push
sbb
ficoms
sub
cmpsb
mov
int
push
push
adc
or
aam
int
sbb
rorl
lods
xchg
xchg
sbb
fiaddl
mov
cmp
push
mov
sub
dec
or
addl
movsb
ret
lock
out
lret
mov
cli
imul
cwtl
cmpsl
jle
or
xor
cli
or
dec
mov
sub
lahf
pop
xor
push
sbb
pop
sbbb
shlb
punpckldq
dec
aad
loop
mov
ljmp
scas
pusha
sbb
pop
sbb
sub
xchg
sbb
leave
stc
mov
xchg
and
dec
mov
call
sbb
mov
mov
mov
dec
xchg
jb
rcr
call
mov
mov
adc
cmc
int3
dec
dec
sahf
aam
lods
repnz
bound
pop
das
mov
mov
mov
js
ja
mov
movsl
push
and
add
xchg
das
sar
jbe
daa
xchg
mov
inc
xchg
ffree
cmc
ret
les
dec
and
jg
xor
js
sbb
aas
sarb
stos
mov
lret
add
push
push
std
jnp
mov
push
lods
mov
or
fucomp
cmp
sahf
lcall
add
mov
mov
out
push
out
shlb
jns
mov
add
gs
cmp
mov
adc
ljmp
dec
pusha
in
fsubs
or
fwait
inc
xor
cmp
sbb
and
stos
lahf
mov
sarl
cs
sbb
push
jecxz
push
jp
add
sub
sub
mov
cli
ret
in
jns
add
in
arpl
dec
std
dec
xor
dec
mov
pop
sbb
out
iret
cld
fdivrl
fwait
sti
aad
imul
stos
addr16
dec
es
rcrl
cli
or
fimuls
xchg
lds
es
in
pop
stos
xchg
jle
sahf
push
xchg
mov
mov
outsb
cltd
ljmp
nop
pop
add
jnp
mov
pusha
xchg
lret
cwtl
pushf
int
lods
mov
dec
shll
dec
mov
adc
xchg
xchg
fbld
mov
xchg
sbb
add
stc
out
mov
test
arpl
pop
adc
insb
lds
xor
lods
or
ret
cmc
sub
sbb
int3
cltd
loopne
mov
lock
or
mov
shrl
and
shlb
mov
sub
test
out
lods
ja
lea
test
jae
mov
cmp
dec
out
les
xchg
das
mov
fsubr
add
jp
jns
xchg
cs
inc
pusha
mov
fistpll
pop
pop
mov
daa
mov
fsubs
gs
and
add
jno,pt
insl
xchg
sub
lahf
push
iret
mov
out
stos
cmp
psubusw
sbb
dec
rcrb
imul
jp
push
jno
jg
xchg
xchg
sub
enter
hlt
pushf
dec
xchg
push
pop
jno
das
std
dec
sub
stc
fwait
fwait
mov
mov
scas
push
fs
jl
roll
and
sub
out
jg
pop
les
pushf
or
movsb
fadd
jp
xchg
add
das
or
cmpsb
mov
or
cwtl
leave
cli
add
mov
nop
aad
clc
mov
das
add
add
test
loop
fcompl
scas
add
lock
hlt
fidivl
xor
shrl
mov
notl
mov
mov
sbb
dec
xchg
rcr
stc
fs
lods
jnp
push
jo
into
lea
stos
cmp
jg
in
ret
cltd
daa
jo
mov
inc
ss
pop
dec
cs
icebp
xor
in
scas
inc
push
adc
mov
add
xchg
mov
data16
movsl
mov
mov
sar
lahf
sbb
push
mov
divl
jl
ja
out
push
push
in
mov
flds
ret
add
add
sub
es
cmp
in
pop
fisubl
jmp
das
fwait
xor
dec
add
mov
jecxz
jecxz
push
mov
cmp
pop
sub
into
fdivs
and
mov
shr
mov
loop
xchg
test
das
pop
lock
xchg
in
sub
test
xchg
push
out
dec
lea
in
addb
and
leave
shll
mov
inc
dec
pop
push
aad
pusha
add
dec
outsl
mov
loop
mov
scas
jns
jae
push
pslld
mov
aaa
sti
cmp
test
adc
xor
jp
outsb
cmp
out
sub
add
test
jge
in
punpcklwd
ficoml
push
adc
mov
jp
or
mov
dec
pop
cltd
ljmp
aad
imul
arpl
mov
cmp
pop
cmp
leave
pop
add
andb
out
jle
mov
prefetchw
or
lea
push
xchg
mov
dec
scas
and
mov
orl
adc
sarb
add
cs
xchg
hlt
xchg
leave
or
mov
mov
mov
test
and
dec
insl
jecxz
int
std
mov
cli
dec
dec
out
popa
inc
add
dec
shll
or
ds
popf
jl
xchg
loope
lds
fldenv
xor
scas
sbb
rclb
ds
aaa
test
xlat
mov
mov
pop
pop
aas
mov
push
pop
cmp
shrl
or
js
cmp
mov
push
sub
mov
adc
mov
and
jno
les
pop
mov
jg
jne
scas
outsb
mov
dec
mov
sub
fisubrs
clc
ja
push
mov
lock
lret
or
clc
and
and
or
inc
inc
cltd
scas
in
or
and
mov
mov
and
sub
push
sub
jmp
jo
cli
pushf
cltd
fsubs
and
push
lret
ljmp
push
pop
cmp
inc
cmp
imul
addr16
cmp
das
int
scas
sbb
cmp
and
pop
push
nop
lret
call
shl
les
push
xor
inc
scas
xchg
mov
sub
xor
aas
lods
into
sbb
sbb
and
rolb
or
dec
lods
fadd
cmpsl
int
xchg
sub
jo
loop
jecxz
cltd
mov
mov
sbb
add
mov
push
cmpsb
cmp
imul
mov
ja
outsl
aam
sbb
push
nop
pop
jo
lea
mov
add
icebp
mov
lods
aad
andb
inc
push
loope
jbe
mov
sbb
fs
add
jbe
and
cltd
xchg
mov
or
cs
dec
call
add
sbb
xor
cmpsl
sub
push
das
lahf
xchg
stos
test
adc
test
pop
mov
mov
hlt
mov
loopw
nop
int
mov
xchg
inc
pop
or
jno
cwtl
lahf
mov
push
adc
inc
aad
stos
sub
cltd
inc
outsl
cmp
icebp
xlat
and
mov
lds
cwtl
xchg
adc
dec
scas
leave
adc
inc
in
ret
jg
testl
std
and
decl
dec
pop
in
jae
pop
iret
sub
scas
fimuls
sub
pop
fstpt
in
xor
out
repz
call
add
jg
or
das
sarl
adc
dec
stos
pop
clc
es
imul
test
mov
movsl
lret
add
fistpll
or
jecxz
popa
imul
shrb
fwait
sbb
into
dec
fs
push
aam
add
stos
mov
adc
js
sarb
jp
or
shlb
adc
xor
cmpsb
inc
je
je
data16
test
insl
in
call
inc
hlt
scas
mov
and
mov
imul
repnz
cmc
mov
mov
push
les
add
fdivrl
xchg
ljmp
ret
and
cmp
mov
int3
stos
test
mov
mov
mov
scas
test
cltd
int3
push
jb
aaa
cwtl
jecxz
add
int
pop
push
aad
lcall
ret
inc
cwtl
sub
ljmp
adc
adc
dec
xchg
adc
sub
sbb
inc
out
outsb
jge
push
out
add
aaa
stos
cmovp
mov
vcmpss
cmp
sbb
in
mov
push
punpckhwd
push
push
mov
outsb
push
pop
mov
cs
dec
add
test
mov
cwtl
mov
fwait
cmp
sub
xorb
je
test
mov
xor
pop
insb
push
fisubs
mov
bound
or
xor
jbe
cmpsl
lret
repnz
sbb
aad
mov
fsubs
xchg
push
mov
pop
jbe
add
hlt
lcall
cmp
stos
cli
push
ficompl
xor
mov
stc
lahf
inc
ds
cli
mov
jae
ss
leave
add
inc
out
jp
andl
cmpsb
or
fcompl
cmp
mov
lock
fdivrl
sub
lcall
cmpsl
stc
outsb
xchg
or
sbb
int
jnp
sbb
xor
xchg
and
mov
xor
push
aas
pop
adc
test
andb
mov
jbe
sahf
arpl
jo
test
mov
icebp
sbb
mov
divb
lds
lds
fsubl
sub
sub
les
pop
and
mov
sbb
stos
sub
dec
imul
in
in
mov
cltd
movsl
jmp
mov
leave
mov
insl
nop
pop
in
cmp
mov
jl
sbb
loopne
loop
inc
incl
bound
repz
xor
push
pop
daa
push
stc
clc
inc
fs
addr16
in
mov
mov
push
and
and
mov
pop
push
pop
xor
repz
jp
aad
sub
fidivs
lock
aaa
cs
fimull
adc
test
mov
push
dec
out
xlat
sub
sbb
out
gs
cs
push
mov
jo
xchg
mov
xchg
mov
xchg
notl
mov
leave
nop
sti
insl
jbe
inc
pop
clc
xorb
out
push
popa
fisttps
test
and
adc
rclb
xor
pushf
out
scas
mov
gs
jle
je
push
pop
adc
or
cld
lods
mov
pusha
inc
sbb
cld
addb
inc
stos
aam
adc
lods
pop
stos
xchg
leave
sub
shrl
sahf
cmpb
dec
sarl
addr16
xlat
fisttps
out
inc
add
daa
adc
cmp
fdiv
inc
aad
inc
mov
popa
sub
mov
inc
adc
push
ret
cmc
cld
lods
sub
and
xlat
cmovl
bound
lods
or
and
jle
fwait
fwait
sub
pop
test
rcr
fdivrs
dec
pop
pop
jo
and
mov
andb
cltd
std
out
and
xchg
or
jb
outsb
dec
pusha
or
jp
adc
sbb
ss
shlb
push
jmp
jecxz
or
sub
mov
es
or
sahf
jp
cmp
mov
mov
fldcw
xor
test
push
lcall
mov
insb
inc
dec
add
cmp
sbb
stos
push
push
push
inc
sbb
out
fidivs
add
out
dec
mov
mov
rcrl
jmp
lret
pop
sbb
ficoms
mov
cmp
cmp
and
loopne
hlt
or
xchg
mov
stos
mov
cld
cmp
mov
js
das
test
sub
mov
adc
or
mov
into
imul
cltd
pop
stos
out
sbb
int3
aam
pop
popf
dec
mov
mov
pop
inc
dec
scas
in
or
sbb
mov
pop
xlat
mov
pop
sbb
jno
movsb
fdivrs
mov
mov
push
or
test
ss
jo
cmpb
xchg
loope
mov
ja
movsl
les
or
roll
pop
pop
and
cltd
or
lret
add
push
adc
ret
nop
js
mov
mov
cwtl
fldl
sbb
push
stc
and
or
mov
shlb
jle
dec
xchg
jmp
mov
cltd
xchg
shr
out
inc
enter
arpl
sbb
push
les
pop
jb
xchg
testl
ss
dec
cmp
or
insl
push
ror
adc
sub
fst
ret
pushf
xchg
pusha
clc
xor
cmp
fwait
mov
jecxz
fwait
dec
pop
gs
add
rorb
arpl
int3
or
shl
test
sub
cld
inc
loope
out
jmp
adc
iret
mov
mov
shr
push
fistps
inc
inc
or
shl
fs
add
cmp
jmp
mov
xchg
imul
iret
mov
in
adc
jge
stos
cld
and
cmpsl
inc
jnp
inc
jno
or
pop
or
icebp
dec
in
push
rol
add
imul
imulb
testl
std
add
inc
sbb
pop
lret
xchg
jbe
sti
ss
inc
xor
push
and
cmp
xchg
jo
fsubrs
pop
pop
popf
cld
rorl
or
iret
lds
inc
leave
jns
xchg
mov
pop
testb
sub
aas
xchg
dec
or
sbb
or
pop
dec
and
imul
cmp
mov
mov
pop
hlt
or
rcr
push
fisubrl
mov
loopne
sbb
fbld
inc
or
adc
or
rorb
push
sbb
mov
push
leave
lcall
fists
lret
sub
sub
outsb
arpl
loopne
xor
lret
test
mov
inc
test
push
jp
scas
addr16
dec
iret
pop
jae
mov
mov
adc
fcoms
lock
xor
cmpsl
pop
outsb
mov
sub
fcomps
fisubrs
fs
sub
mov
repnz
ss
pop
push
je
push
mov
subl
xchg
mov
das
shlb
xor
bound
pop
sub
dec
aam
jge
das
test
mov
outsl
jge
mov
cwtl
repnz
out
xlat
inc
pop
or
mov
jne
mov
inc
or
jnp
and
fwait
je
mov
push
add
push
xchg
repnz
fistpl
lods
subb
fwait
addl
mov
jae
fs
pop
lret
or
xor
jl
mov
fwait
std
out
fwait
pop
negb
pop
cmpb
fidivrl
xor
add
pop
inc
or
and
mov
xor
orb
xchg
call
lcall
mov
xchg
xorl
pop
mov
ja
dec
stc
and
dec
jns
js
out
cmp
sub
push
jbe
nop
aad
sub
sbb
cmc
in
movsl
jno
test
push
pop
add
and
adc
mov
sub
insl
daa
push
xchg
xorb
push
fsin
out
lock
pusha
xor
add
pop
hlt
add
sbb
push
mov
pop
popf
aas
dec
shl
ja
popf
je
movsb
adc
negb
push
stc
testb
aaa
xchg
inc
sahf
xor
xor
scas
fildll
add
sbb
data16
cld
pushf
fcmovnu
imul
sbb
je
and
or
aad
xchg
mov
xor
xchg
sub
shrl
jmp
xchg
mov
loopne
mov
mov
cmp
out
cmp
push
je
dec
fwait
gs
and
jns
adc
inc
add
fnstcw
adc
mov
fstpl
and
jno
dec
movsb
xor
adc
icebp
dec
or
sbb
inc
pop
lods
call
dec
test
xor
sbbl
xchg
out
jbe
xchg
and
loope
popf
jne
sti
sub
xchg
and
das
fmuls
loope
xchg
stos
and
pop
aad
ret
gs
outsb
cmp
out
sub
aas
sti
data16
sub
sub
adc
mov
divb
cmpsl
test
add
and
xchg
dec
lods
pop
das
inc
lods
lea
mov
aas
cmp
mov
out
xchg
sbb
dec
or
dec
xor
scas
out
outsl
or
adc
xor
or
push
insb
or
adc
adc
jge
pop
jnp
imull
lret
mov
sbb
imul
sbb
sbb
aas
add
jbe
jecxz
popa
jg
and
stos
stos
test
cwtl
test
imul
mulb
out
imul
or
out
scas
das
dec
lock
les
ret
mov
mov
mov
inc
dec
movsb
mov
lahf
cmc
popa
xlat
sub
daa
pushf
or
pusha
mov
in
sbb
insl
push
outsb
sti
mov
in
movsb
jne
jle
cmpsb
out
cli
mov
sbb
pop
jecxz
in
in
mov
mov
stos
movsl
mov
adc
int3
dec
out
sub
mov
cwtl
mov
xor
out
add
sti
out
leave
pusha
add
popa
adc
gs
mov
mov
iret
mov
xchg
and
xor
xchg
adc
adc
pop
cmp
rcrb
aas
leave
cmpsb
scas
inc
sbb
push
divb
imul
adc
aas
pop
add
jno
stc
lahf
or
lock
sub
pushf
jp
sub
mov
lods
inc
lods
sti
push
mov
fisubrs
or
lahf
push
sti
cmp
and
inc
aad
sub
push
sbb
sub
arpl
pop
mov
aaa
xor
daa
repz
ss
jns
les
aaa
pop
lret
adc
add
pop
adc
dec
add
push
jno
jb
insl
ds
push
and
lahf
je
dec
js
jmp
xor
cs
or
pop
outsl
xchg
ja
call
pop
xchg
test
scas
inc
mov
fldt
and
andb
mov
das
add
cmp
add
test
out
fst
out
es
fwait
dec
xor
leave
test
in
pop
push
js
adc
rcr
inc
sti
inc
mov
mov
xchg
mov
sbb
jne
mov
inc
lds
aas
xor
les
dec
add
inc
rcrl
into
pop
jne
out
inc
paddusb
pop
movsb
pushf
add
fisubl
push
fs
pop
cmp
mov
mov
scas
dec
pop
push
xchg
add
clc
inc
orl
jecxz
imul
mov
cli
dec
lahf
fbstp
test
and
mov
mov
loopne
in
hlt
or
bound
adc
push
xlat
sbb
addr16
xor
push
rolb
sbb
mov
lret
inc
ljmp
push
pop
xlat
sahf
adc
cmc
loope
neg
inc
jp
xor
xor
mov
imul
adc
cmpsl
stos
push
sub
jno
or
sbb
mov
add
dec
or
lods
repz
fmull
xchg
xor
push
fs
outsb
sahf
in
mov
in
cmp
jl
fmull
sbb
xor
sbb
cmp
je
xor
ljmp
xchg
sahf
popf
xor
insb
add
push
gs
jl
movsl
ja
push
add
call
pop
mov
mov
xor
pop
jmp
std
jne,pn
adc
cmpsb
push
das
lret
cmc
mov
outsb
dec
ficoms
ret
repnz
in
jae
repnz
cmpsl
add
inc
cmc
jl
jecxz
cmp
mov
sub
subl
lods
inc
stc
jbe
push
push
push
test
jo
push
and
xchg
fiadds
and
arpl
in
sub
rcrb
mov
sub
loopne,pt
int
pushf
mov
push
add
push
hlt
fcomp
adc
outsb
movsb
scas
mov
xchg
sbb
in
lods
mov
or
add
aad
and
popf
sub
cmp
in
leave
nop
pslld
dec
cmc
out
inc
call
outsl
icebp
mov
and
ss
mov
jmp
aam
adc
push
mov
imul
cmc
push
adc
or
pushf
add
sbb
push
test
test
inc
aad
mov
push
fcomip
push
lret
fwait
stos
cs
rorl
data16
in
and
loopne
ljmp
mov
clc
xchg
jae
cmp
mov
jmp
push
into
seto
sbb
dec
es
das
xchg
into
repz
pop
jns
pop
push
adc
icebp
xchg
test
xchg
cmc
ret
dec
lea
loopne
mov
dec
aas
fadds
inc
clc
or
mov
sahf
cmp
sub
mov
jbe
repnz
stos
sub
push
add
js
xor
stos
dec
xchg
dec
xor
adc
sti
sub
inc
add
movl
test
fldcw
int
push
push
jp
test
and
lret
out
loopne
fmull
mov
dec
xchg
push
icebp
cmc
and
sti
mov
in
and
pushf
jns
pop
xlat
mov
push
in
ret
pop
and
xchg
and
frstor
out
dec
int
iret
mov
and
mov
xchg
idivb
les
outsb
push
mov
sarb
std
mov
jae
sbb
fwait
xchg
iret
push
insl
loop
sub
pop
jmp
lods
test
pop
cmp
pop
mov
mov
jmp
fs
xor
sti
mov
ds
imul
or
pop
jo
jmp
adc
sub
pop
popf
test
mov
sub
cmp
xor
outsl
stc
pop
gs
jecxz
insl
mov
mov
adc
pop
xchg
mov
push
popf
cmpsb
cmp
pop
xor
ds
test
mov
sub
insw
inc
repz
popa
clc
ret
rorl
test
push
push
fadds
mov
into
cmp
xor
xor
shll
lret
mov
jl
sbb
add
into
or
sbb
cmp
push
or
daa
sbb
xlat
mov
in
fdivr
in
mov
dec
adc
ret
sbb
xchg
mov
cld
bound
dec
cli
push
daa
rclb
dec
push
movsb
ljmp
mov
fs
scas
push
cwtl
and
test
or
xchg
mov
ficoml
sbb
es
pop
xor
in
out
add
cwtl
adc
xor
je
inc
pop
test
jns
cmpsl
push
or
js
frstor
push
ret
mov
mov
cs
pushf
mov
mov
and
lahf
adc
fs
dec
mov
xor
imul
ja
adc
jbe
sbb
push
or
rcrb
ljmp
popl
jecxz
push
nop
iret
adc
inc
inc
lock
add
in
jae
fnstcw
inc
pushf
loope
loopne
ret
movsb
mov
popf
scas
test
scas
outsl
mov
jp
dec
xor
fs
sbb
mov
xchg
or
out
cmpsl
sub
xchg
cmp
xor
insl
jae
movsl
lret
daa
adc
mov
mov
test
popf
push
test
orl
mov
in
fidivrl
cltd
mov
cmpsb
clc
mov
out
call
xchg
outsl
arpl
stos
aas
dec
push
fsubr
push
mov
sub
inc
mov
adc
sbb
inc
and
push
xor
xor
xchg
sub
push
adcb
shll
lcall
push
loope
js
maxps
xchg
lret
xor
add
inc
fsubrs
test
into
sar
mov
jnp
mov
das
xor
pusha
lret
daa
in
add
iret
pop
iret
mov
cmc
in
fnstsw
cmpsb
sub
das
mov
mov
adc
dec
and
mov
add
sahf
add
inc
cld
mov
fmulp
mov
inc
and
sub
sub
in
sbb
pop
inc
pop
pusha
push
mov
mov
mov
xchg
mov
call
mov
aam
cmpsl
roll
pop
inc
ljmp
mov
and
imul
cmpsb
cmc
push
push
push
pop
mov
push
mov
lea
rcr
loop
mov
dec
mov
das
xor
push
cltd
push
jmp
xchg
pop
lahf
fs
clc
xor
shr
je
js
jbe
xchg
psrlq
mov
cld
xchg
test
sub
jbe
jl
pop
cmp
jbe
jmp
add
cmc
aam
jne
pop
popf
jo
iret
movsl
xor
xchg
bound
in
xor
loopne
out
xchg
ret
test
popa
inc
jae
roll
ss
pop
push
cmp
test
int3
aad
push
imul
jbe
test
fsub
xor
xchg
popa
idivb
sub
and
jae
in
jecxz
inc
dec
mov
je
nop
fisubl
shll
cmp
sarb
xor
jp
sbb
push
mov
lods
cmp
mov
mov
dec
mov
pusha
push
cmp
xchg
push
ja
adc
xor
out
xchg
add
movsl
cmpsl
pop
int
imul
fcoms
aad
lods
jbe
call
arpl
lods
das
pop
aad
adc
xchg
inc
jns
add
outsl
dec
cld
pop
pop
pusha
dec
dec
xchg
jno
xchg
xor
mov
push
shll
push
mov
pop
dec
inc
inc
lea
notl
pushf
sbb
sbbb
cmpsb
daa
jb
mov
push
fcmovbe
adc
cmp
lock
aas
lds
adc
cmpsb
lcall
aas
jmp
shrl
jne
stos
sarl
or
aaa
mov
rcl
adc
test
push
pop
sbb
mov
fadd
inc
mov
mov
push
add
inc
notb
inc
int
adc
pop
aam
insl
sub
adc
cmp
hlt
pop
sbb
gs
movsl
adc
push
mov
popa
push
out
jne
js
lea
cmc
dec
pop
lods
push
in
sub
jp
pop
cmpsl
fcomps
daa
stos
xor
orb
sar
push
add
jns
sbb
sbb
and
pop
clc
jnp
iret
adc
jmp
inc
ret
filds
xchg
scas
jb
mov
into
dec
inc
test
stos
cmpl
pop
pop
test
lret
jb,pt
aad
mov
fdivrl
ljmp
inc
imul
je
fnop
dec
test
cld
int3
push
imul
dec
dec
lcall
mov
push
mov
data16
xchg
clc
mov
push
mov
mov
rcr
cmp
mov
dec
lahf
imul
in
or
in
fidivs
rol
bound
jmp
pop
in
xorl
sbb
mov
ljmp
sub
jmp
enter
sbb
cmp
or
movsb
outsb
jbe
inc
add
out
outsb
sub
adc
push
adc
jne
inc
dec
mov
xorb
rcrb
adc
fxch
push
cmp
les
push
int3
mov
inc
lods
push
lahf
pop
and
xchg
imul
in
and
xchg
pop
mov
nop
dec
inc
ret
popa
push
fwait
stos
in
push
push
xor
cmpsl
popf
fcmovnbe
push
jmp
push
xchg
test
cmpsb
push
sbb
mov
xor
jl
inc
popf
sub
mov
push
cmp
sub
ret
pop
mov
pop
sbb
and
inc
mov
daa
inc
insl
sbb
fisubrl
sbb
pop
mov
filds
pop
fadd
call
adc
mov
xrelease
mov
dec
and
sbb
mov
sbb
push
lcall
cmp
addl
adc
dec
cmp
inc
mov
addr16
loop
mov
sarb
subl
add
mov
pop
or
shlb
shll
sti
in
mov
jno
adc
adcb
sbb
mov
and
push
repnz
jbe
mov
subb
stos
xchg
std
arpl
insb
test
xchg
test
mov
add
popf
cmpsl
int
or
cltd
imul
xor
push
sub
in
daa
push
out
cmp
add
xchg
pop
test
push
int3
mov
in
sbb
and
mov
cmp
cs
mov
mov
imul
sbb
xlat
and
inc
xor
mov
xlat
out
or
sub
cmp
in
sub
shrl
mov
shl
call
add
popa
mov
test
jle
push
int3
daa
cmp
imul
sti
fwait
mov
sub
enter
inc
loope
lods
cmp
icebp
or
jmp
cli
xor
jo
sub
jge
ljmp
lea
cmc
or
mov
pop
mov
pop
popa
dec
cmpsb
in
lahf
pop
ss
ror
shll
mov
dec
jecxz
dec
imul
lret
and
scas
sbb
shll
inc
pop
mov
cmp
sub
mov
mov
loope
sbb
clc
popf
adc
or
inc
xor
pop
jno
add
shr
push
inc
push
iret
cltd
add
sub
inc
and
or
cmp
add
icebp
mov
adc
es
test
cli
inc
xchg
sbb
and
shlb
shr
arpl
in
xor
mov
and
ljmp
hlt
mov
emms
sub
pusha
mov
add
and
mov
or
lds
xchg
ljmp
xlat
mov
faddp
ficoms
xor
and
pop
cmpsl
sbb
dec
test
rep
ficoms
add
das
test
sbb
push
popa
bound
in
jl
sbb
add
push
dec
cmp
shrl
sbb
jl
xor
rcl
rol
add
rolw
mov
mov
xchg
adc
fwait
sub
test
push
ret
das
adc
xor
inc
stc
adc
stos
cmp
mov
arpl
pop
push
dec
dec
adc
pop
ja
sub
jmp
or
addb
mov
je
sub
pop
lret
popf
sti
pop
bnd
out
add
add
shll
push
in
inc
lahf
pop
das
mov
pop
and
lret
lea
in
or
pop
lret
xor
fisttpl
fistps
fstpl
mov
mov
loop
cmp
jle
arpl
sub
js
mov
lahf
out
out
ret
mov
leave
push
xchg
xchg
sub
sbb
popaw
pop
ret
mov
int
pop
sbbl
sbbl
xchg
fidivrl
mov
or
outsb
cmpb
pop
cmp
mov
jge
call
mov
into
std
lea
jnp
add
dec
lods
pop
mov
sub
std
cwtl
mov
push
or
mov
orl
sti
adc
dec
popf
pop
mov
ret
fs
mov
xor
xchg
add
cltd
adc
jnp
test
inc
dec
popf
shlb
mov
push
add
xor
and
dec
and
push
or
pop
js
jge
add
stos
xchg
push
push
cmp
jmp
mov
lock
or
mov
mov
lcall
sub
xchg
js
outsl
pop
or
cmp
mov
mov
or
dec
imul
jnp
sbb
dec
fs
fwait
cmc
xchg
popa
jo
jmp
test
imul
push
xchg
mov
add
cmpsb
mov
jo
loope
inc
ljmp
fs
pop
insb
pop
mov
mov
or
xchg
lds
pop
push
inc
add
inc
pop
mov
pop
push
push
enter
mov
stc
jno
test
push
test
ret
sbb
fbstp
fdivs
mov
repz
xor
mov
xchg
mov
mov
les
insl
bound
cmc
into
mov
lods
cmp
divb
pop
mov
les
sub
mov
out
into
pop
out
mov
int
imul
cmp
mov
cmp
add
jmp
test
ficoms
addb
sbb
push
in
daa
adc
cmp
sbb
leave
lret
mov
mov
shrb
scas
daa
pop
xchg
mov
lock
add
or
ret
loopne
int
sbb
mov
and
add
inc
inc
adc
in
loope
arpl
cmc
mov
inc
imul
mov
mov
in
sbbb
popfw
pushf
fmull
icebp
les
repz
push
cmp
in
push
adc
xchg
xlat
sub
test
addb
out
inc
jno
shl
fldl
xchg
xchg
ficoml
pop
movsb
movsl
and
jecxz
or
pop
outsb
fldenv
cmp
fcoms
repz
mov
test
in
mov
ffree
dec
cltd
jg
xchg
mov
gs
push
stos
pop
sbb
or
jmp
lret
and
dec
loop
je
cmpsl
mov
aas
cmp
xchg
icebp
cmp
cli
add
rolb
jge
pop
adc
mov
outsl
mov
shl
mov
mov
pop
lock
xchg
std
fdivl
lea
mov
out
cmc
push
cmc
push
cmp
in
loopne
push
cmp
lahf
mov
add
hlt
dec
movsl
push
mov
sbb
sahf
loope
xor
sub
sub
or
inc
fidivl
adc
fcomp
jnp
insl
sub
scas
repz
addr16
pop
add
cltd
jle
jbe
test
pusha
sbbl
jl
mov
xchg
xor
loopne
lret
xlat
push
sub
xchg
ficomps
xchg
aad
mov
inc
mov
lcall
mov
pushf
lret
int
mov
adc
mov
aad
ret
cmpsl
hlt
and
popa
sub
xchg
mov
jae
mov
les
jl
jmp
jae
repz
cmp
xor
test
in
filds
addb
ret
dec
shll
mov
sub
cmp
outsl
loope
mov
repz
push
mov
jg
ss
and
cli
movsb
xchg
sub
cmp
dec
mov
sub
sub
cld
pop
repz
xchg
dec
and
xor
std
mov
pop
pop
jmp
fwait
dec
and
xchg
jb
cmp
iret
jmp
adc
scas
or
dec
xorb
dec
add
cmp
mov
call
cltd
repz
lret
addr16
jl
xchg
cmpsl
mov
and
xchg
xchg
push
dec
iret
xchg
sti
push
aad
cwtl
sub
jge
pop
and
xchg
mov
hlt
push
movsl
and
add
jl
sub
push
dec
pop
out
adc
add
lods
call
test
and
loope
cmp
aam
test
mov
inc
dec
lock
leave
ret
push
in
fisubl
addb
jecxz
jp
adc
add
test
xor
add
mov
aas
aad
inc
addr16
lods
or
pop
dec
sahf
or
scas
pop
and
std
je
stos
daa
out
xor
jno
xchg
xor
int
xlat
in
add
inc
lds
dec
jns
sti
fwait
inc
xor
repnz
jmp
mov
mov
dec
xor
jle
shlb
in
mov
test
sbb
or
imul
aam
xchg
xchg
cld
rclb
or
mov
ret
test
inc
mov
sbb
jmp
mov
jp
scas
rcr
xchg
pop
sarl
idivb
mov
daa
jb
push
scas
or
jmp
mov
out
pop
rcl
sbb
mov
adc
cmpsl
int3
xchg
stos
inc
in
shr
in
xchg
repnz
xchg
pusha
scas
repnz
sub
loopne
sahf
fmull
or
pop
lock
sahf
lods
insb
mov
sti
jne
dec
sub
stos
fstl
aad
mov
xchg
pop
lcall
jmp
or
jnp
sub
xchg
pop
test
test
lret
mov
hlt
ds
inc
in
mov
xchg
shrl
mov
lret
icebp
mov
out
or
in
xlat
icebp
cmpb
sbb
dec
and
xchg
inc
ss
lahf
test
xchg
js
and
incl
sbb
jae
xchg
jae
cmc
outsl
lret
repz
pop
adc
int
push
fnstenv
jge
dec
adc
out
push
inc
jbe
sub
sahf
ja
cmp
mov
mov
inc
xchg
add
sub
addr16
loop
gs
lods
popf
xor
std
inc
push
jae
ss
loop
arpl
add
xor
jg
xchg
hlt
lcall
and
mov
xchg
cmp
lds
stc
or
sbb
dec
xchg
push
inc
or
test
cmp
xchg
xchg
inc
cli
mov
lahf
cmp
ss
xchg
mov
dec
je
pop
jae
xchg
subl
mov
movsl
fisttps
xor
orl
int3
push
loop
mov
pop
sub
push
js
lahf
push
loopne
adc
fcomps
mov
mov
movsb
xor
pop
add
cmpb
jge
inc
leave
out
sub
push
nop
mov
in
fwait
and
pop
and
and
sbb
cwtl
pop
sub
push
and
mov
adc
mov
pop
push
test
mov
sbb
push
cltd
mov
mov
sbb
jno
inc
add
jmp
push
sbbl
dec
in
aaa
and
cmp
sub
sub
mov
in
jl
sbb
in
lret
call
int3
in
push
pop
dec
ljmp
inc
add
sahf
ljmp
adc
sub
sbb
ret
sti
pop
outsb
into
outsb
pop
push
xchg
loopne
cmp
push
cs
inc
jno
stos
sbb
out
push
xor
popa
icebp
cmpsb
dec
fadds
hlt
das
pop
cmp
and
frstor
add
mov
push
js
push
add
sub
inc
rol
inc
aaa
popa
dec
push
jbe
jg
aas
repnz
pop
mov
xor
pop
int3
sub
imul
in
mov
mov
pop
mov
jecxz
xor
adc
faddl
fidivs
test
jbe
inc
jecxz
dec
mov
sub
call
fld
push
xor
pop
dec
subl
or
enter
mov
mov
dec
inc
pushf
dec
inc
orl
xchg
lcall
and
insb
mov
mov
mov
sbb
add
pop
cmp
shlb
jae
dec
lods
xor
repz
jae
jle
stos
jno
pusha
and
cwtl
add
push
or
test
cs
cmpl
mov
into
push
fstl
cwtl
int3
mov
dec
mov
push
fadd
push
out
cld
aas
aad
cld
arpl
sbb
out
fmulp
jmp
jge
sbb
aad
xor
scas
loopne
iret
mov
xchg
scas
push
and
and
adc
dec
lret
sbb
push
shrl
rolb
stos
sub
add
jno
test
mov
insl
fcomps
mov
movsl
jns
daa
push
sub
testb
jns
stc
adcb
mull
xor
sub
add
sbb
inc
test
out
push
xor
outsb
mov
dec
dec
adc
add
adc
pop
not
mov
cmp
xor
cli
push
push
lds
in
sbb
psrld
cmp
shll
lock
cmpsl
cmpsl
xor
xor
movsb
repnz
pop
lret
xor
xchg
dec
xor
es
cli
push
mov
inc
in
adc
cmpsb
sub
xchg
sbb
sub
mulb
call
xchg
pop
mov
and
gs
scas
ret
cmp
std
cmpsb
jns
push
enter
jb
test
sahf
xchg
lret
inc
aad
std
push
jge
mov
sub
mov
adc
mov
push
mov
push
pop
cmp
push
jg
cmc
push
addl
mov
in
cmp
ret
mov
int
fdivrl
cli
and
loopne
stos
repnz
lods
fmull
cmp
dec
orl
ss
fmull
hlt
sbb
movsl
popf
push
jae
push
test
cmpsl
mov
popa
xchg
pop
xor
ds
cmp
xchg
sub
js
inc
and
out
sbb
add
pushf
scas
cmp
pand
aaa
cmpsl
xchg
xchg
mov
clc
pop
sbb
sbb
stos
nop
and
jo
mov
fildll
pusha
scas
pushf
fadd
mov
orl
roll
push
lret
or
inc
repz
daa
jno
and
xor
flds
add
push
rcrl
nop
mov
cmp
xchg
pop
pop
fdivr
iret
movsb
sar
stos
sbb
enter
jns
or
ds
jae
xchg
or
cmp
hlt
mov
ret
enter
mov
cltd
or
hlt
aaa
pop
xor
push
pop
lds
pushf
dec
add
lret
and
cmpsb
mov
push
jno
out
fsubr
sbb
aaa
push
in
fsubrl
lahf
push
push
rcrb
cmp
in
in
jecxz
bound
mov
jb
xchg
pop
mov
loope
cmp
sbb
xchg
push
fists
ret
fwait
xorl
add
sub
mov
xchg
mov
sarb
aas
mov
sahf
mov
add
inc
cmp
jno
popf
sbb
adc
js
and
int3
sbb
inc
sub
sbb
pop
popa
adc
jg
jne
mov
test
outsl
jl
xor
stos
sbb
dec
sub
pop
xchg
mov
scas
ljmp
jmp
fidivs
lret
out
jecxz
pop
jnp
mov
cmp
mov
or
mov
cwtl
mov
stos
ds
ficoml
das
mov
adc
sub
mov
jmp
inc
jp
adc
stc
hlt
outsb
or
notl
jae
adc
daa
enter
sbb
lahf
nop
and
jmp
leave
cltd
mov
jle
ret
pop
repnz
pop
mov
xor
jb
ds
fidivs
pop
push
and
push
xchg
loop
je
in
into
and
mov
pop
arpl
cltd
rorl
dec
jo
hlt
push
cmp
cmp
or
ds
cmp
inc
pminub
scas
inc
add
jl
cmp
xchg
pmulhuw
repnz
pop
call
cmp
pop
call
xchg
push
or
lcall
sub
test
add
lret
ficompl
cmp
vdivsd
and
addl
ret
xor
insb
notl
mov
addb
shr
out
xchg
and
sti
xchg
jo
push
xchg
mov
lcall
pop
mov
push
or
mov
outsl
in
lds
push
xor
test
lods
adc
xor
jno
ret
add
bound
stos
ret
ljmp
into
pusha
and
inc
sahf
push
minps
nop
mov
pop
pop
dec
cld
aas
xor
mov
xlat
lcall
ret
stc
enter
inc
push
clc
in
add
out
bound
dec
add
push
and
sub
scas
fisubs
nop
sbb
hlt
les
mov
xor
xlat
pop
mov
mov
sarl
je
pusha
jecxz
xor
pop
add
stos
mov
lret
aas
cld
inc
pop
jge
scas
jo
xchg
inc
sub
jno
pop
scas
adcb
pop
movb
popf
in
pop
mov
pusha
inc
frstor
mov
lock
hlt
adc
fdiv
mov
sub
cmp
jge
sub
mov
xchg
push
push
jmp
xor
test
pop
hlt
and
add
es
scas
push
popf
dec
pushf
and
and
call
imul
mov
fs
cmp
xor
inc
ds
xchg
call
adc
add
mov
sub
push
cmc
ror
sub
xchg
lret
cmp
cmp
xchg
and
fsubs
loopne
nop
aaa
pop
aas
in
fs
jns
stc
push
outsb
int3
jmp
mov
addr16
bound
add
sub
ss
ret
ret
inc
leave
xor
mov
fdivs
adc
call
data16
imul
jg
ret
scas
shll
faddl
adcb
xchg
or
push
xor
outsb
pop
aam
or
push
pushf
adc
icebp
inc
enter
fs
leave
arpl
pop
inc
cmp
aas
push
xor
and
inc
call
fmulp
add
imul
idivl
adc
fs
sarb
bound
mov
sub
fwait
mov
ret
mov
adcb
inc
bound
xchg
leave
inc
idivl
pop
fdiv
std
call
sub
pop
xchg
xor
repz
repnz
repnz
push
mov
filds
aaa
fwait
dec
inc
in
and
xor
repnz
gs
cmpsb
daa
inc
aad
sbb
xorb
cwtl
push
movsl
sbb
jne
xchg
scas
inc
popf
repnz
popa
mov
int
les
popf
enter
push
movsl
fwait
push
negb
mov
sbb
nop
push
jp
jmp
xchg
sbb
idivb
cmp
jle
adc
push
movl
and
dec
mov
add
pop
jo
mov
out
sbb
jmp
pusha
imul
mov
cld
scas
cltd
test
pop
stos
push
or
ds
imul
imul
mov
adc
call
fildll
iret
xlat
and
xor
les
sub
jp
cmp
xchg
mov
decb
mov
dec
or
xor
fs
js
push
push
and
shll
adc
xchg
push
lahf
out
cmp
add
cli
sub
adc
idivb
push
xchg
push
mov
jle
mov
add
lret
jo
mov
or
fnsave
pop
mov
js
icebp
jmp
mov
sbb
and
push
flds
jecxz
push
sub
inc
loop
mov
test
fs
int3
je
xor
jle
idiv
fwait
pop
sub
lds
pop
jno
push
push
outsl
jno
dec
dec
lods
lock
xor
imul
lcall
ljmp
je
lods
xchg
ss
mov
cmpsl
push
push
mov
and
fnop
leave
je
leave
pop
enter
mov
cmpsl
mov
pop
repz
ds
fsubrl
mov
gs
cmp
cmc
cmp
or
push
xchg
aaa
lahf
adc
cmp
int
icebp
xchg
nop
loopne
into
sbb
cmpl
mov
into
jge
or
orb
xchg
sarb
cmp
push
dec
push
mov
add
test
pop
div
leave
or
adc
adc
js
int3
sub
das
jge
cld
clc
xchg
popf
and
clc
dec
enter
arpl
fsub
jne
jl
ret
or
ja
icebp
cld
stc
adcl
adc
ss
addr16
scas
push
dec
add
sti
or
jns
xor
jb
jg
push
les
mov
add
mov
push
out
mov
mov
subl
roll
lods
dec
add
loope
adc
pusha
icebp
insl
or
pusha
lods
mov
bound
arpl
mov
mov
idivb
and
push
xchg
pop
lods
fdivr
popa
or
mov
add
mov
dec
cmc
ret
aad
inc
stc
fnstcw
add
cwtl
jbe
mov
ret
adc
je
cmp
or
shll
xchg
cwtl
dec
xchg
int
test
xchg
dec
rcrb
cmp
shrl
push
dec
push
add
hlt
cmpl
pushf
gs
sti
rol
fsubr
mov
out
mov
in
cmp
push
xchg
pop
test
and
daa
sahf
or
int
mov
mov
andb
les
pop
ret
jbe
lea
xchg
scas
xchg
ja
sub
mov
incb
dec
xchg
mov
out
fsubrl
add
repnz
adc
in
push
inc
or
test
in
mov
inc
inc
inc
loop
add
mov
shrl
das
insb
repnz
jae
sti
js
sbb
push
dec
and
push
xchg
mov
push
mov
out
xchg
adcb
jo
jbe
pop
out
or
out
push
mov
xor
mov
mov
aam
jo
push
adc
in
shll
lcall
push
aaa
jl
sub
sub
dec
fcomip
das
xor
add
pop
pop
mov
push
arpl
into
pop
or
es
pop
mov
mov
jl
out
or
adc
dec
in
inc
nop
and
loop
xchg
flds
ss
int
js
dec
rep
and
lods
push
jo
jbe
dec
lret
fbld
stos
jg
rorl
pop
cltd
negb
or
xlat
test
jmp
test
inc
add
xor
sti
mov
xchg
mov
mov
test
rolb
lahf
pop
xor
add
cmp
sarb
push
shrl
sahf
lods
mov
out
ljmp
pop
das
cmp
sub
adc
sub
and
sbb
sar
inc
mov
and
inc
das
adc
push
fildl
inc
xor
mov
push
mov
hlt
jno
iret
adc
cli
and
mov
stc
mov
inc
cmpsl
sub
dec
mov
shr
ja
iret
lock
mov
ljmp
into
xchg
xlat
sarb
ret
adc
adc
pop
xor
lret
les
xchg
push
test
cmc
add
js
in
push
scas
pushf
mov
fildll
xor
push
xor
iret
pop
mov
cmp
inc
add
mov
std
aaa
popf
call
jl
xchg
mov
xor
xchg
xchg
xlat
lcall
dec
inc
lret
lds
adc
xchg
loopne
sarb
iret
pushf
rol
jb
mov
or
repnz
ja
fs
dec
sub
inc
out
shll
leave
imul
outsb
addr16
addr16
lds
xchg
shrl
xchg
cld
xchg
dec
inc
outsb
push
adcb
rcr
fs
mov
mov
insb
xchg
mov
mov
push
hlt
pop
mov
fstps
lret
jmp
inc
xor
lahf
and
pop
xlat
pop
cmp
jne
xor
sbb
sbb
mov
adcb
and
arpl
xchg
icebp
inc
mov
push
in
out
repz
lods
jge
push
ret
sub
add
lods
int
mov
ss
mov
rolb
in
lcall
sarb
imul
mov
jno
cltd
add
loop
stc
add
ret
mov
cltd
fldcw
out
jecxz
insl
xchg
daa
inc
cwtl
ficoml
sbb
adc
push
push
pop
xchg
inc
inc
pop
dec
sub
pushf
mov
mov
mov
insl
outsl
mov
loope
je
das
lock
xchg
ljmp
or
and
jecxz
sub
movsl
test
sub
in
out
xor
ret
not
insl
fidivl
bound
xchg
add
xor
insl
retw
shlb
add
imul
jns
clc
jmp
ja
sub
pop
push
xchg
ret
jle
adc
stos
xlat
adc
xor
sub
mov
scas
stos
jae
or
cmp
jecxz
test
adc
enter
xchg
lock
mov
test
movsl
fs
push
stos
int
cmp
sbb
fisttpl
xchg
sbb
les
jbe
popf
push
mov
out
or
push
inc
xor
in
add
pushf
lret
mov
pop
fdivs
or
mov
ss
push
lahf
mov
movsb
sbb
cmpsl
mov
rolb
mov
pop
enter
jne
jb
inc
rcrb
push
shrl
std
sub
push
or
sti
scas
adc
adc
out
call
pop
cmpsl
ljmp
pushw
out
ret
addr16
mov
pop
and
add
inc
cmp
or
inc
push
and
sub
rclb
add
sbb
fsubs
mov
pop
test
jmp
lahf
roll
aaa
out
adc
adcl
xchg
sub
mov
adc
dec
aas
imul
xor
jg
jo
sub
fimull
shlb
js
jns
sbb
int
pushf
sub
fstpt
jnp
popf
add
fisubrl
or
pop
xchg
std
ret
adc
pop
adc
push
inc
jg
dec
xlat
dec
cmpsb
mov
insl
xchg
cmp
mov
loop
je
cs
ret
or
push
in
je
movsb
mov
jb
mov
test
mov
xor
cmpsl
icebp
gs
xchg
dec
jecxz
rcr
push
lods
scas
pop
xor
pop
mov
cmp
sbb
or
inc
in
iret
loopne
and
xor
pop
popa
pop
enter
inc
cmp
push
add
lock
sub
mov
out
inc
andl
jge
jae
push
ja
pop
push
jae
cmc
imul
lock
and
rol
mov
ds
and
jb
and
or
fcompl
es
mov
push
leave
adc
push
mov
jae
xchg
sbb
xor
sbb
mov
xchg
sub
mov
and
arpl
xor
mov
iret
mov
push
int3
nop
aam
add
xlat
or
cltd
js
test
cmc
jmp
jg
pop
jp
sub
shrb
and
ds
out
mov
xchg
std
ss
cmc
aas
iret
push
test
and
xchg
inc
sub
add
xchg
cmpsb
das
out
and
int
cmc
lret
sub
fidivs
mov
add
cmp
inc
inc
clc
pop
mov
xchg
ds
add
in
pop
add
push
ja
mov
or
push
adc
iret
sub
popf
pop
push
imul
hlt
push
fucom
pusha
or
cmp
adc
popf
push
arpl
lahf
xor
into
pop
xor
and
cmp
aas
inc
cli
and
sti
aad
mov
pop
push
xor
mov
pop
mov
scas
sbb
cmp
mov
pop
in
cmc
aad
outsb
xchg
popf
mov
add
xchg
mov
sub
mov
std
imul
sbb
jmp
push
in
lds
inc
pop
ljmp
xchg
inc
enter
cmpb
mov
lcall
adc
adc
call
mov
xor
imul
mov
jo
faddp
inc
xchg
ljmp
jae
jb
pop
mov
mov
push
jmp
dec
cmpsl
sbb
insl
hlt
jecxz
xchg
and
dec
push
aas
or
les
push
pop
outsl
mov
pusha
js
sbb
int
adc
roll
dec
xor
add
aas
inc
dec
mov
pushf
inc
push
jle
mov
rcl
enter
sub
pop
divb
push
push
out
xor
push
icebp
mov
adc
aad
cltd
dec
inc
xchg
stc
fdivrl
rorl
xor
out
mov
add
loopne
out
rorl
cld
icebp
mov
call
rol
sub
mov
mov
fldcw
mov
jb
in
inc
and
lock
jb
add
dec
nop
int3
fstl
sbb
inc
or
xor
cs
push
inc
push
xchg
ret
or
in
sub
add
mov
mov
dec
mov
mov
jle
sbb
cmp
bound
push
scas
cmp
repnz
adc
cld
clc
sub
push
and
aas
jle
inc
fs
cli
inc
icebp
outsb
mov
int3
and
adc
pop
xchg
pop
jno
out
push
gs
and
ret
sbb
pop
pop
jecxz
mov
stc
cmc
push
jae
fucomi
das
cwtl
pop
jl
int
int
outsl
les
dec
shlb
mov
mov
out
out
mov
inc
sbb
lcall
loope
cmp
sub
xchg
jne
push
xchg
lret
sbb
jb
sbbl
pop
enter
push
jne
cmp
jmp
incl
stc
mul
scas
fs
add
out
clc
add
out
fidivrs
sub
insb
cmp
testb
inc
sub
sti
xchg
and
es
push
ds
mov
sbb
inc
pop
repz
sti
call
and
push
push
jle
inc
adc
outsl
bound
dec
pop
icebp
mov
cltd
lcall
jb
cmpsb
or
mov
movsl
xor
maxps
hlt
sub
repz
pushf
xchg
pop
fiadds
mov
dec
mov
adc
iret
mov
leave
enter
mov
jb
mov
cltd
mov
pop
add
sbb
hlt
loop
pop
shl
pop
mov
mov
xchg
aam
jge
mov
pop
das
ret
xor
fnsave
outsl
push
ljmp
das
cld
dec
aaa
pop
dec
fmuls
cld
scas
xor
mov
pop
fsubl
mov
mov
add
jp
or
jp
out
bound
or
loope
pop
jne
pop
iret
sbb
pop
testl
adc
xor
mov
addb
push
js
add
jbe
clc
fldenv
xchg
shlb
nop
or
inc
scas
fiaddl
ret
pop
arpl
call
adc
lret
mov
jl
cmpsb
mov
and
call
xchg
or
and
test
mov
sub
repz
outsb
mov
push
test
pop
cld
mov
popf
jns
fwait
enter
push
dec
setg
xlat
mov
gs
jae
xchg
mov
sub
repz
lods
cmpsb
xor
sbb
addb
dec
jno
adc
sub
leave
lock
xchg
test
xor
out
push
ss
sahf
jb
pop
and
das
in
cmpsb
jl
enter
pop
movsl
arpl
loopne
inc
cmc
hlt
mov
scas
cmc
and
mov
std
cmp
int
jge
in
scas
pop
inc
ficompl
mov
inc
jns
jle
repnz
cmc
mov
pop
mov
sub
rcrl
data16
mov
push
push
xor
mov
insl
shl
pop
divl
pop
test
sbb
std
push
aas
inc
lods
sub
and
mov
cmc
inc
inc
addr16
fnstsw
mov
cmp
scas
rcr
and
xchg
cli
xchg
inc
lods
outsb
pop
xlat
out
lea
out
add
inc
mov
cmp
lds
lea
sub
cmpsl
adc
into
adc
jg
adc
loop
or
movsb
jo
lahf
insl
andb
movsb
inc
xchg
std
push
outsb
mov
in
xchg
mov
sbb
gs
mov
addr16
mulb
and
inc
inc
in
cmp
test
ret
lods
push
mov
jne
test
and
sbb
lret
cld
mov
into
jmp
in
and
lcall
out
cmc
dec
add
pop
out
xchg
xchg
rcpps
iret
mov
fs
test
pop
sahf
xor
xor
das
lahf
mov
outsb
aas
cmp
daa
push
out
push
adc
hlt
pop
push
shll
lods
inc
sub
aaa
mov
dec
loopne
and
addl
jge
sub
cwtl
pop
inc
cmp
xchg
add
loope
dec
imul
cmc
jns
in
stos
stos
pop
cmpsl
repz
inc
adc
xor
dec
push
push
pop
aas
aas
stos
aam
pop
and
sahf
mov
xor
xchg
sbbb
mov
mov
data16
lds
xchg
or
lock
pop
mov
arpl
jne
je
sub
rclb
jmp
int3
clc
xchg
mov
mov
push
sahf
out
cmp
jno
data16
fisttpll
fnstcw
jb
scas
ret
jg
lock
mov
aad
fs
push
add
rol
and
movsl
in
gs
mov
add
lahf
das
xor
mov
cld
bound
xchg
push
dec
es
je
pop
aad
shrb
pop
cli
xchg
cli
daa
xor
movsl
xor
out
icebp
cmpsl
and
mov
cmc
mov
adcl
in
dec
arpl
adcl
jg
sarl
jne
mov
sub
jmp
sti
in
mov
inc
and
xchg
pop
cmp
xchg
jns
mov
xor
decb
out
cmpsb
dec
scas
pop
push
sarl
mov
pop
dec
loop
das
mov
arpl
shll
jns
jns
mov
lcall
nop
inc
fs
push
lea
pop
or
aaa
mov
mov
mov
incb
movsl
in
inc
ss
aam
test
mov
mov
aad
repz
dec
adc
or
sarb
fidivs
inc
pop
loope
pop
hlt
push
scas
push
xor
loop
pusha
xchg
bswap
or
cmp
emms
mov
push
cmp
cmp
mov
inc
push
xchg
push
inc
bndstx
fstpl
dec
inc
popf
mov
out
mov
cld
dec
cmp
bound
or
lcall
pop
out
mov
aam
jae
push
ret
pop
sub
xchg
sbb
mov
nopl
jnp
mov
and
jmp
cli
mov
sar
pop
adc
rorb
jae
mov
lahf
mov
inc
mov
int
push
ret
les
pop
xor
ljmp
adc
push
subl
jnp
test
js
jge
jnp
ss
fwait
mov
outsl
mov
xchg
lds
push
cmpsb
push
repz
sbb
jle
loope
sub
dec
fcmovbe
sti
leave
sti
loope
mov
mov
or
push
sbb
mull
adc
add
xchg
cmp
mov
pop
dec
mov
lahf
xor
addr16
push
sub
aam
pusha
mov
test
sar
out
mov
ret
adc
out
mov
insl
out
lock
and
push
out
jns
insb
lods
and
lcall
fwait
sub
outsb
lds
sbb
push
jne
je
mov
mov
ffree
push
pop
mov
inc
pop
aad
jbe
xor
loope
inc
add
pop
aas
int3
cli
incb
iret
leave
cmp
sub
adc
pop
adcl
rolb
pop
push
adc
push
mov
and
mov
push
jecxz
mov
mov
rorl
gs
mov
pop
scas
leave
jle
jecxz
cltd
lret
mov
sbb
rol
push
loopne
ss
cmp
and
jo
dec
je
not
cmp
and
sbbl
jbe
sbb
push
into
cmp
cmpsl
ret
xchg
push
jno
add
and
or
mov
lret
cmpsl
mov
xor
sbb
xor
xor
aam
fimuls
repnz
les
and
test
lahf
aas
fiaddl
mov
push
pop
stos
iret
iret
fsubrs
popf
add
dec
test
aas
mov
cmp
jl
push
jp
xor
sub
sub
fmuls
mov
xchg
call
movsl
mov
push
mov
cmp
xorl
sub
int3
nop
and
in
mov
push
aam
xchg
mov
outsb
dec
or
cli
mov
js
push
dec
pop
or
dec
push
lods
orb
mov
jle
mov
leave
xchg
push
mov
les
jae
and
mov
pop
lock
ss
pop
mov
adc
xor
adc
push
xchg
cmpsb
imull
rolb
adc
mov
push
out
stos
je
push
hlt
scas
out
sub
mov
jb
pop
sbb
or
xchg
add
imul
inc
shlb
mov
imul
test
push
call
outsl
vshufps
shlb
movl
nop
cmp
aam
inc
ljmp
std
es
scas
dec
out
int3
mov
fnstsw
adc
push
mov
in
xor
pusha
arpl
mov
addr16
pop
enter
mov
pop
stc
decb
pop
dec
out
loop
test
cltd
jne
sbb
jl
ficoml
push
dec
gs
lods
mov
imull
subl
enter
cmp
sbb
xchg
sbb
fadds
imul
or
rcrb
rcl
test
loopne
shll
adc
push
mov
jbe
daa
mov
add
jae
loope
mov
jbe
insb
popf
xchg
pop
stos
inc
push
adcl
dec
pop
mov
add
push
dec
mov
leave
repnz
push
pusha
and
mov
int
in
rcrb
nop
mov
pop
and
lahf
dec
push
jg
mov
sbb
in
imul
cmp
push
fidivl
pushf
mov
fsubr
testl
or
dec
add
daa
outsb
fildll
iret
mov
mov
insl
mov
lods
inc
ds
ljmp
xchg
pushf
test
in
push
sbb
push
es
pop
lock
imull
jg
repnz
repnz
test
mov
pop
inc
into
mov
andl
shll
jo
jmp
in
rcrl
gs
insl
push
je
add
jle
add
push
mov
and
inc
lods
loopne
std
and
xchg
aad
and
xor
pop
mov
xchg
xchg
xlat
imul
popf
aaa
jne
jg
push
pop
mov
mov
rcrb
mov
sarl
dec
cmpsb
adc
fst
mov
and
xor
lret
fisubs
inc
xchg
xor
cmp
dec
push
lea
pop
jb
out
inc
sub
xlat
fdivrs
jns
jle
dec
in
movsb
cmp
add
pop
in
and
dec
mov
arpl
std
pop
mov
gs
out
add
movb
cmpsl
xchg
pop
aam
out
enter
shl
inc
pop
xor
in
and
fwait
pop
out
aaa
sub
push
and
popf
push
inc
lcall
aas
negl
gs
mov
out
loop
scas
daa
xchg
imul
pusha
in
mov
mov
in
mov
jnp
or
fistpl
and
das
sub
lcall
imul
xchg
or
aam
cmpsb
in
test
movsl
lock
xchg
mov
pop
mov
adc
dec
xchg
and
or
mov
repnz
lret
out
cmp
fwait
and
mov
adc
ret
notb
mov
inc
jmp
js
data16
mov
scas
scas
in
outsl
mov
fwait
sahf
scas
loop
xchg
mov
inc
or
or
mov
sti
popa
sub
adcb
jae
jae
outsl
ret
out
xchg
adc
sbb
clc
imul
pop
or
inc
dec
inc
adc
pop
xor
inc
loope
fldcw
dec
repnz
rcll
stos
xlat
xor
and
push
mov
cmp
popa
mov
add
lret
ds
mov
push
lods
sahf
sbb
mov
pop
xor
mov
hlt
je
cmovnp
push
pop
std
add
mov
scas
push
cmp
mov
scas
pop
scas
fsts
ror
mov
pop
or
inc
xchg
xor
divb
sti
test
std
repz
sbb
js
jo
movsl
xor
sub
into
dec
xchg
dec
xchg
mov
jno
repnz
scas
mov
add
push
in
iret
andl
int3
call
push
or
mov
in
outsb
cli
sbb
jle
jl
pop
xchg
call
or
dec
sahf
add
or
sbb
mov
cld
hlt
imul
add
or
dec
rcll
daa
shlb
adc
out
xor
cmp
incl
sub
mov
sbb
xor
leave
into
ret
stc
add
mov
cltd
mov
lods
sub
inc
out
out
test
rorl
mov
mov
adc
lock
or
mov
mov
xchg
test
popa
testb
divl
psubw
mov
push
push
gs
mov
pop
or
jbe
jl
mov
pop
push
loopne
adc
dec
in
push
pop
inc
pop
lcall
adcb
lock
in
and
jb
sarb
mull
sub
daa
bound
mov
mov
mov
jg
in
mov
mov
pop
pop
push
pop
movsl
pop
rcll
nop
fadd
shlb
cmp
sbb
xchg
lea
sbb
jle
xor
sahf
mov
jle
inc
mov
add
jo
push
dec
cld
mov
mov
in
jns
or
and
or
xchg
xor
stos
xor
out
mov
push
xor
xor
mov
imul
ficomps
fs
sub
adc
sub
scas
mov
decb
shl
div
mov
fisubl
daa
stc
iret
out
push
dec
movsl
sub
ret
xchg
mov
adc
pop
imull
movsl
movsl
subb
ljmp
sub
jg
lods
lods
popa
rcll
test
addl
or
adc
lock
fsubrl
push
cmp
in
xor
jns,pn
pop
scas
add
push
pop
xor
cmpsb
hlt
clc
test
mov
pop
inc
mov
roll
pushf
mov
adc
push
adc
jno
xor
arpl
or
dec
inc
in
sarl
cmp
cmp
movsb
and
aad
fucomp
aaa
xchg
shlb
insb
pop
mov
mov
dec
cli
push
xchg
mov
pop
jo
hlt
popa
popf
and
push
cmpsb
repz
mov
push
jg
jmp
mov
jge
mov
ficoml
and
mov
mov
sbb
mov
jge
fwait
xchg
aas
aam
imull
pop
dec
daa
idivb
mov
scas
push
les
dec
and
or
pop
inc
xor
loopne
ds
bound
in
inc
push
dec
jno
shll
aad
adc
ja
cmp
sbb
dec
idiv
jmp
adc
insl
mov
pop
adc
rolb
xor
pop
cli
imul
xor
add
mov
dec
in
dec
repnz
dec
into
outsl
loopne
ret
mov
and
test
cltd
sub
cmp
cmpsb
dec
aas
adcl
push
dec
sub
insb
add
ljmp
rcrl
push
or
push
orl
mov
imul
mov
jge
push
push
addr16
clc
nop
gs
pop
sti
adc
jp
lock
sub
xlat
add
ds
cltd
fldcw
push
adc
sbb
pop
push
fisubs
fildll
fsubrl
push
inc
add
push
mov
sub
aam
loope
mov
addr16
mov
pop
mov
inc
das
shrb
xor
je
xchg
test
jle
push
sub
arpl
stc
push
cmp
out
leave
sbb
cmp
xor
lea
and
addl
jno
sarb
popa
xor
xchg
sub
mov
movsb
adc
je
cli
and
add
pop
int
shlb
xor
xor
cmpsb
je
push
xchg
ss
xchg
mov
mov
push
ficomps
cmp
in
xor
mov
mov
popf
cli
nop
pushl
idivb
jge
mov
pushf
sub
cmc
sahf
mov
cmp
cmc
int
or
and
xchg
lcall
sbb
inc
adc
jne
pop
out
adc
lcall
sub
aad
xchg
loop
fst
cmp
fcmovb
pop
jb
repnz
ror
cmpsl
mov
xchg
or
dec
mov
stos
or
mov
imul
ret
cld
adc
pop
lret
roll
out
jb
in
ret
push
stc
sti
xchg
popf
sahf
stos
jg
mov
divl
sub
cwtl
push
inc
rorl
jnp
cmp
mov
loope
shr
adc
inc
xchg
iret
adc
repz
xor
and
jmp
dec
clc
adc
dec
imul
mov
adc
jno
mov
cmp
mov
int3
mov
rcrb
pop
jmp
cmp
test
lea
pop
sbb
mov
mov
mov
sahf
mov
call
adc
pop
xchg
stos
xchg
outsb
popf
cmpsl
test
ficomps
nop
rorb
dec
jecxz
mov
mov
js
mov
imul
clc
leave
and
dec
push
pop
pop
add
cmp
pop
sub
ret
dec
nop
mov
test
pop
sub
push
les
addr16
cmpsl
jg
adc
cli
adc
cmp
mov
and
pusha
mov
sub
xchg
push
mov
or
add
mov
add
out
ja
jne
hlt
xor
mov
push
sysenter
cmpsb
push
xchg
pusha
push
movsb
push
pushf
sub
inc
cwtl
js
popa
outsb
mov
mov
pop
mov
mov
or
outsl
dec
add
cmpl
nop
iret
lret
cli
cli
cwtl
inc
ja
pop
loope
repnz
xchg
je
scas
ret
xchg
mov
fwait
inc
cmp
cltd
or
jp
mov
sbb
pop
pushf
orl
imul
add
jne
cmp
adc
inc
pop
fnstcw
ds
xlat
mov
lret
ss
fmuls
hlt
popa
xor
inc
push
in
divb
std
sarb
jne
mov
repz
jg
imulb
rcr
enter
pop
nop
and
adc
pop
adc
test
call
push
cs
jp
int
and
dec
pop
lods
cmc
cmp
out
jbe
ds
andl
rolb
inc
add
in
cmp
and
movaps
xlat
das
sbb
insb
pop
or
xlat
inc
xchg
mov
into
lods
outsl
inc
pop
or
inc
sbb
push
push
sahf
dec
and
ret
jbe
jmp
mov
daa
test
or
dec
fistps
push
sub
std
popa
push
scas
xor
ds
cwtl
mov
subl
jne
xor
mov
dec
sbbl
mov
and
in
sbb
in
cs
add
xor
mov
ror
sbb
popf
cld
sub
push
lret
sub
mov
lods
jbe
dec
stc
adc
mov
ffreep
mov
xor
mov
orb
pusha
outsb
push
lock
lods
xchg
sti
push
imul
and
xlat
jecxz
pop
int3
jle
ljmp
hlt
les
cltd
inc
xchg
in
stc
jle
xor
inc
loope
inc
pop
sar
cmp
call
xchg
push
mov
push
push
jg
xchg
dec
mov
sub
data16
add
mov
pop
pop
mov
stos
cli
lret
ja
push
outsb
mov
mov
dec
int
sbb
mov
mov
shrb
sub
into
je
mov
das
adc
int
loopne
fisubs
xor
push
jns
adc
xor
ljmp
dec
pop
out
add
xor
cli
pop
jge
ror
inc
pushf
shll
out
ret
fnstcw
and
push
das
in
xchg
fld
into
cwtl
in
add
adc
dec
xor
mov
rorb
inc
rcl
icebp
mov
clc
fcoms
icebp
cld
add
inc
sub
test
lods
pop
pop
out
imul
jb
jp
inc
ret
lds
frstor
ret
cld
mov
push
adc
and
xlat
iret
scas
xchg
mov
fstl
and
pop
std
stos
inc
cli
and
lea
shrl
inc
xchg
xchg
mov
and
aas
sbb
test
or
and
and
jp
ljmp
mov
add
pop
adc
add
and
jno
inc
jo
pop
mov
arpl
or
rorl
lahf
xchg
and
mov
dec
mov
jmp
sti
std
insb
inc
clc
lcall
jle
repz
pop
in
orl
xor
push
jl
add
mov
jno
pop
ljmp
xlat
xchg
dec
std
pop
imulb
outsl
ret
fwait
xchg
push
fucom
ds
cwtl
xchg
mov
xchg
faddl
insl
addr16
inc
push
add
je
ret
mov
clc
into
shrl
iret
fstps
dec
add
scas
in
add
mov
arpl
lds
rcll
xchg
cmpb
mov
lret
call
adc
into
aas
sbb
push
add
jle
push
inc
arpl
ljmp
cmpsl
stos
jns
std
push
xchg
cmp
loopne
jl
data16
movsl
cmp
xchg
ja
jl
push
cs
outsb
mov
insl
daa
neg
inc
adcb
leave
das
and
das
inc
int3
stc
pop
xor
dec
pusha
fildl
push
imul
or
enter
dec
ret
cmp
bound
iret
shrl
cwtl
popa
rolb
enter
sbb
push
cmc
andl
mov
loop
aas
jne
clc
mov
ss
xor
xchg
fwait
iret
lds
loopne
jp
mov
xchg
adc
adc
mov
sbb
outsb
loopne
mov
mov
inc
subl
dec
leave
data16
cmpb
out
fwait
push
mov
hlt
xchg
mov
jo
scas
loope
lods
push
dec
push
insb
mov
lret
orb
dec
adc
into
sbb
sbb
xor
pop
pop
cmp
fcmovbe
roll
pop
popf
ret
aas
push
add
fs
fcompl
and
out
sbb
lods
cmpsl
push
insb
rcrl
push
xor
jg
adc
mov
or
cmc
shll
std
or
aad
mov
adc
jno
sbbb
shll
fxch
mov
xor
int3
movl
pop
fsubrs
xchg
xchg
sbb
or
cmp
out
mov
inc
jle
push
mov
mov
inc
movsb
push
push
sti
setp
cmp
adc
inc
xor
adc
test
adc
les
fs
add
lock
gs
cmp
pop
cmp
adc
mov
jo
xchg
dec
and
add
lea
ss
icebp
scas
bound
or
push
dec
pop
jns
mov
mov
mov
cld
scas
xchg
mov
xor
out
inc
in
popa
hlt
cltd
out
ds
jnp
inc
or
xor
inc
sti
cmp
pop
xchg
movsl
cmp
xchg
xlat
shlb
mov
sahf
adc
pop
or
or
mov
inc
inc
and
movsb
mov
mov
dec
jecxz
std
sub
test
xchg
xchg
movsb
mov
cmpsb
pop
jno
cs
pop
cs
les
cmp
stc
push
jmp
repnz
imul
movsl
push
push
jg
sbb
jg
cmp
add
sbb
es
into
dec
popf
dec
inc
cmp
jp
fmul
push
xor
lret
and
lret
dec
xchg
dec
dec
add
adc
and
inc
cwtl
inc
loopne
pop
jl
cltd
jnp
sahf
adc
jp
inc
aaa
mov
fimull
jns
dec
and
imul
xchg
cli
sub
lahf
outsb
leave
mov
or
dec
push
xor
int
test
out
or
lcall
xor
jge
rcll
adc
lret
sbb
outsb
or
sub
rolb
fisubl
lahf
mov
adc
sbb
cltd
jnp
push
mov
push
out
xchg
jbe
xor
inc
rorl
mov
loopne
pop
inc
mov
sar
out
insb
fdivrs
aaa
aas
xor
push
xchg
cmc
mov
bound
mov
mov
mov
std
inc
cmpsb
in
cmp
add
dec
mov
push
inc
lods
push
or
pop
xchg
xchg
add
leave
outsb
jnp
sbb
mov
test
mov
pop
ss
pop
ljmp
sti
or
push
mov
daa
mov
hlt
cltd
sub
bound
rorb
push
sub
fists
add
mov
hlt
and
cmp
push
xor
cmp
fcomi
xor
ds
frstor
inc
test
scas
xchg
lahf
mov
push
xor
inc
pop
std
shll
ljmp
nop
sbb
in
push
sub
sbb
inc
add
jns
out
jne
in
mov
jecxz
inc
mov
pop
int
sbb
add
psrad
aas
arpl
and
addr16
pop
test
cmpsl
fcom
fs
ljmp
inc
push
outsl
in
bound
lret
lods
daa
scas
into
adc
mov
test
mov
adcb
push
fwait
dec
add
std
cmpsb
adc
xor
and
jl
test
scas
call
jmp
push
in
xor
dec
les
xchg
frstor
mov
in
ja
arpl
mov
push
and
sbb
xchg
fsub
aad
js
data16
test
fldcw
cltd
sbb
sub
xchg
sti
or
xchg
and
or
das
jb
xchg
adc
cmp
cmp
inc
or
scas
cmpsl
loop
jo
push
sub
rcll
cmp
je
inc
lods
int
cli
mov
jmp
aaa
loop
js
mov
and
push
stc
dec
add
incb
lahf
xor
adc
mov
dec
ficoml
fsubl
adc
orb
mov
sahf
pop
movsl
lods
mov
xchg
loop
adc
or
scas
xchg
movsl
mov
in
pop
add
test
idivl
cs
in
xchg
sub
enter
insb
popa
arpl
addr16
pushf
fs
pop
popa
pusha
fld1
mov
dec
out
shrb
lea
and
pop
aad
mov
pop
pop
adc
insb
add
xchg
push
or
repz
aaa
sub
das
lock
test
xor
push
ret
out
or
xor
and
inc
mov
lcall
idiv
sbb
or
inc
push
inc
aam
fidivs
test
pop
lret
push
movsb
testl
add
insb
jbe
leave
inc
push
dec
xchg
outsb
add
sbb
out
sbbl
cmpl
sbb
fwait
xchg
dec
mov
sbb
mov
push
pop
aas
loope
test
fadd
shl
jno
mov
xchg
add
addl
fdivrs
adc
cmp
fmull
add
sbb
rcr
andb
mov
movsl
xchg
or
stos
addr16
dec
or
test
or
scas
in
clc
dec
lret
cmp
add
or
sub
and
xchg
test
vmread
mov
jno
aas
jecxz
popf
pop
cmpsb
mov
test
movl
jge
sti
sbb
fidivrs
mov
inc
shr
testl
jne
test
inc
mov
xchg
in
insl
mov
mov
jae
ret
faddl
int
fs
xorl
ret
ja
or
pop
jnp
fdivrp
or
sarl
dec
fldlg2
fimull
lds
ljmp
and
or
dec
stos
xor
mov
lods
stos
jo
rcrb
and
xchg
loop
cmp
popa
cmp
sub
pop
adc
add
imul
cwtl
or
or
adc
data16
jbe
roll
es
shlb
popf
stc
sti
cmp
push
jnp
inc
test
out
or
cmp
sbb
jl
lock
popl
lds
jb
test
cmp
fbstp
sbb
loope
or
dec
xchg
add
pop
popf
jae
std
aaa
out
inc
stos
add
and
lods
lods
fstpt
stos
scas
sbb
popa
inc
sbb
jle
js
mov
aas
mov
xchg
and
cmp
test
or
leave
mov
fwait
xlat
mov
shl
and
dec
jl
lahf
mov
add
data16
inc
mov
xchg
dec
mov
test
call
stos
xchg
xor
stos
mov
mov
mov
fdiv
gs
pop
stc
adc
out
mov
outsl
xor
jg
pop
ja
out
negb
inc
loopne
mov
out
pop
sbb
mov
and
cmp
jne
fildll
mov
mov
nop
push
push
cmpsb
xchg
outsb
sahf
push
xchg
iret
mov
shrb
fwait
add
inc
sti
jmp
iret
dec
je
test
or
sarl
out
jp
pop
pop
jo
add
hlt
jns
testb
xchg
mov
lahf
jnp
fwait
shrl
jb
mov
and
lret
pushf
push
adc
jnp
mov
and
add
cmc
clc
cmp
inc
lds
cmp
cmp
int3
mov
repz
outsl
ljmp
push
fmuls
pop
push
mov
aaa
push
push
pop
mov
data16
or
aad
xlat
push
adc
daa
jmp
add
insl
ds
outsl
cs
ss
stos
cmpsl
sub
enter
inc
cwtl
inc
sub
bnd
dec
bound
jne
int3
cmp
xchg
pop
into
or
push
lea
fimuls
js
mov
mov
xchg
pop
mov
cwtl
push
roll
bound
pop
fildl
jno
cmp
jl
or
aaa
inc
dec
inc
loopne
or
cmp
pop
icebp
in
daa
pop
jne
add
fildll
lea
push
xchg
insb
jno
hlt
xchg
test
push
sub
insb
push
outsb
xor
mov
sbb
test
lock
xorl
push
clc
inc
mov
js
mov
sbb
into
sub
js
add
fcmovnb
xchg
test
and
sub
jbe
sub
stc
stos
add
or
or
dec
jp
data16
fidivs
mov
or
adc
cmpb
das
mov
jns
add
dec
cmpl
jno
mov
adc
mov
cld
shrb
xchg
cwtl
gs
rol
insl
mov
xchg
repz
fsts
xchg
ljmp
jecxz
cmp
out
push
xlat
aas
aaa
lahf
in
sub
inc
push
test
test
in
cmc
call
and
imul
cmp
xor
pushf
sub
test
xor
or
loopne
aas
scas
pop
test
mov
sub
sbb
out
out
int
pop
in
cmp
add
shlb
fcmovu
pop
daa
mov
fidivrl
and
pop
jle
adc
xchg
ljmp
xor
lret
push
js
popa
enter
rolb
jae
sahf
clc
test
in
dec
shlb
lock
pop
mov
cmp
enter
push
and
dec
cmp
xor
cmp
icebp
sbb
enter
mov
int
addl
cmp
insb
movsl
call
push
fwait
add
aas
add
roll
xchg
mov
daa
push
xor
xchg
cmp
mov
aam
mov
inc
movsb
popf
mov
hlt
fimull
dec
push
jo
out
mov
jmp
lret
fldenv
jmp
iret
push
mov
mov
mov
jg
mov
rolb
pop
lret
vmovapd
inc
mov
or
add
ds
pop
cmp
daa
mov
movsl
outsb
mov
push
mov
pop
mov
mov
je
loop
and
or
icebp
lea
xor
adc
lock
mov
pop
leave
orl
in
xchg
cmp
inc
xor
test
add
adc
mov
jecxz
outsb
cmp
les
and
push
and
or
enter
fstpl
lahf
loope
add
lds
fs
fcmovu
cli
arpl
dec
loopne
iret
das
in
clc
std
insl
push
cmpsb
fcom
mov
xor
and
jbe
mov
into
dec
movsb
push
push
lds
dec
stos
xchg
adc
addr16
pop
cmp
notb
lods
xor
ss
sbb
sbb
add
mov
ret
les
push
out
jle
ljmp
test
mov
in
mov
push
mov
test
add
out
xchg
fsubrp
add
stc
rorl
aam
mov
sub
or
sub
ja
loop
lcall
pop
sarl
xor
mulb
cmp
mov
cmp
pop
inc
xlat
jmp
inc
and
dec
daa
lahf
mov
out
mov
fadd
test
mov
and
sbb
or
outsl
push
out
jnp
ljmp
mov
jbe
scas
cltd
test
jnp
push
shl
and
fs
dec
adc
jge
dec
inc
fcoms
sub
ror
sub
push
gs
repz
shll
stc
cld
cwtl
aad
mov
sbb
fistps
xchg
cmp
das
popf
les
fistps
add
or
sbb
xchg
mov
jb
insl
mov
dec
adc
iret
lahf
mov
inc
fcomps
negl
shll
jmp
or
subl
mov
imul
loop
jp
sub
mov
inc
mov
data16
pusha
mov
xor
add
pop
iret
stos
movsl
test
pop
lret
pusha
movsb
sbb
fdivrp
fs
fst
jbe
ficomps
dec
inc
std
and
shll
xor
lods
mov
sarl
js
sub
inc
js
add
in
and
mov
push
adc
mov
dec
out
pop
stos
fsubl
stos
sti
imul
int3
jp
inc
fs
fsts
and
aaa
int3
loopne
mov
aad
incl
sti
add
arpl
in
das
pop
xchg
sub
sbb
sahf
adc
in
jo
mov
test
mov
popl
mov
sahf
push
xor
xlat
cs
sbb
mov
mov
dec
xor
cmpsb
mov
rol
stos
test
lock
jbe
ds
mov
cmp
and
sbb
stc
loop
mov
loopne
inc
xlat
jo
jmp
mov
loopne
xchg
test
out
and
mov
dec
pop
fwait
shll
int
cmp
inc
mov
sub
push
nop
dec
cmp
loop
lods
sahf
aaa
jmp
cld
pop
jbe
addr16
or
cmc
jge
aas
mov
je
and
lret
das
sahf
xchg
mov
int3
or
std
xchg
arpl
sub
idivb
xchg
repz
mov
add
addl
jg
mov
jae
loop
fbstp
and
sub
cmpsb
roll
rclb
push
xlat
movsb
lock
pop
inc
dec
or
mov
sub
das
les
fbstp
iret
in
imul
dec
int
sbb
adc
inc
mov
mov
push
and
pop
push
addl
mov
out
jg
lcall
into
pop
inc
fadd
jb,pn
outsb
arpl
mov
xchg
jge
adc
dec
bound
push
cmp
sti
push
fsub
nop
jnp
push
push
stos
push
and
sbb
jnp
and
or
iret
nop
xchg
scas
push
icebp
fiadds
mov
push
cld
jl
enter
push
hlt
out
cwtl
test
or
adc
arpl
mov
xor
push
mov
sti
adc
movsb
je
xchg
repz
cwtl
rorb
sbbb
out
jg
shll
shll
pop
out
xor
cwtl
or
adc
fdivl
jo
scas
jb
xor
sbb
dec
or
push
sti
xchg
add
jb
push
and
sbb
jae
enter
mov
add
test
xchg
mov
sub
xchg
lods
pusha
or
fwait
cmp
mov
jns
inc
je
or
jge
jb
aam
mov
in
lds
adc
mov
shlb
or
xor
iret
jmp
sbb
add
jne
les
pop
pop
pop
cli
fistl
xchg
dec
jo
cmp
pop
arpl
adcl
mov
mov
out
loop
pop
popa
movb
adc
jno
cmp
and
mov
push
jg
sub
icebp
mov
mov
xchg
dec
mov
dec
out
sub
sub
pop
xor
jbe
pop
mov
cmpsb
push
xor
xor
mov
dec
cmp
test
test
aaa
shl
aad
out
mov
pop
lcall
icebp
sbb
push
or
in
pop
pop
push
cwtl
pop
in
fnstcw
in
xor
push
ss
mov
sbb
xor
fiadds
push
push
xchg
jb
rcl
push
mov
hlt
xchg
fidivrs
mov
loop
push
fnsave
jno
fldcw
xor
lods
cmp
arpl
jmp
xor
js
test
out
ficoms
fcmovnb
test
in
mov
jno
sub
test
andb
out
inc
lods
dec
and
cltd
jbe
les
push
adc
lcall
adc
ljmp
fstpt
push
inc
pop
out
bound
push
xchg
lods
or
cmpsl
pop
mov
out
mov
cmc
dec
bound
cmp
inc
sub
addb
xchg
dec
xor
repnz
dec
xchg
and
pushf
dec
ljmp
mov
push
aad
out
mov
in
or
xchg
shr
xchg
inc
std
add
int
dec
mov
inc
out
xchg
sub
cld
pop
xchg
jp
push
lret
mul
push
scas
and
xchg
xor
loope
jecxz
aaa
or
add
mov
out
int3
jb
add
push
repz
out
fwait
pushf
sub
iret
or
and
pop
xor
ret
mov
imul
fldt
jecxz
xchg
ficoms
add
mov
push
aad
xchg
shlb
dec
imul
orb
cmp
cmp
pop
dec
js
aas
daa
repz
rolb
lahf
sbb
push
out
push
xor
sarl
ljmp
lret
dec
and
or
push
fwait
xchg
mov
sbb
xor
add
mov
test
cli
enter
and
or
divl
sbb
mov
xor
sub
and
pextrw
cwtl
cmc
mov
jnp
or
mov
sti
les
out
mov
stc
jno
push
bound
adc
aad
cmp
aam
out
xor
ljmp
ds
jg
jne
pop
and
fstps
push
pop
push
sahf
mov
push
mov
inc
and
mov
daa
push
push
loopne
mov
std
push
push
stos
lods
fwait
push
enter
adc
sbb
or
out
movsl
mov
sbb
movsb
js
or
adc
clc
push
sti
in
lret
mov
adc
mov
and
mov
dec
fdivrl
or
sub
repnz
push
es
inc
lods
fs
dec
mov
push
ja
lds
shrb
sbb
pop
inc
lret
orl
pop
sub
shrb
sahf
jecxz
fsubrl
lcall
pop
or
mov
out
insb
mov
or
aas
aam
test
nop
push
out
lea
xchg
jb
xor
aas
ss
xor
xor
stos
xorb
sub
lods
mov
mov
or
nop
cmp
mov
in
push
xchg
ret
mov
mov
jo
jnp
dec
decb
mov
outsb
dec
sub
sub
push
leave
stos
push
gs
out
xor
adc
mov
mulb
into
push
mov
adc
int3
pop
adc
push
jecxz
shlb
jp
repnz
or
xor
push
es
push
and
mov
mov
mov
in
pop
push
push
and
adc
hlt
xchg
imul
mov
adc
sub
xlat
cmp
adc
xchg
addl
out
sub
pop
lock
loop
lret
or
out
out
mov
sti
data16
lea
call
fstl
cmp
js
and
sub
daa
push
lds
dec
cmp
xchg
push
fwait
push
pop
push
imul
inc
mov
fucomp
mov
aad
mov
add
add
outsb
cmp
repz
lcall
xchg
gs
lret
push
call
ja
xchg
mov
bound
sub
test
insb
mov
cmp
adc
jbe
mov
inc
mov
ds
jl
mov
test
mov
std
data16
jno,pn
add
jecxz
inc
in
push
sbb
mov
push
ret
es
jbe
shr
data16
int
mov
mov
rcl
push
and
mov
push
popf
mov
sbb
mov
subl
and
testb
les
fs
cltd
in
jmp
fidivrs
xor
in
in
jp
cmp
add
mov
add
pop
lret
push
and
enter
cmpsl
aad
xchg
inc
and
ljmp
loop
inc
lcall
adc
fmull
push
add
aam
test
out
xchg
mov
mov
ret
les
adc
ret
dec
jbe
mov
prefetcht0
mov
sub
mov
xchg
pusha
xchg
xchg
pop
pop
pop
fidivs
cwtl
mov
fdivrl
rorb
inc
lret
add
scas
xor
cmp
mov
cmpsb
dec
dec
in
adc
lret
int
pop
outsb
aad
sbb
mov
xchg
adc
push
cmpsl
shll
shlb
test
cs
pushf
lods
arpl
mov
inc
daa
cmp
push
popf
xorb
aam
push
mov
dec
mov
xor
inc
test
and
sbb
cltd
das
lret
inc
ja
fldt
mov
cmp
xchg
add
pop
or
xchg
xor
or
add
out
outsl
dec
sbb
rol
call
and
iret
mov
cs
mov
xchg
pop
push
jle
push
popf
and
pop
add
mov
or
sarb
sub
mov
mov
adc
in
add
mov
pop
in
and
mov
sbb
or
xlat
pop
lods
mov
mov
jge
popa
not
repnz
jle
and
sahf
push
xchg
xchg
loope
pop
xorl
fwait
lds
mul
repnz
dec
sahf
int
mov
sar
or
mov
inc
mov
pop
aaa
jo
cmp
lret
mov
xchg
fisttps
dec
or
fsubrp
adc
lea
mov
and
add
push
push
sahf
adc
mov
xchg
pop
out
mov
outsb
mov
lret
cmpsb
adc
inc
rcll
imul
icebp
add
loope
lods
lcall
mov
pop
fs
cmpb
cmc
sbb
jmp
mov
popf
andl
insb
add
pop
dec
lods
mov
into
sbb
ja
ret
jbe
mov
cmp
rclb
out
or
leave
pop
loope
iret
out
push
jl
or
push
enter
mov
xchg
mov
mov
in
push
inc
cmp
cmp
std
rorb
dec
adc
adc
lock
pop
adc
loopne
in
jbe
lods
mov
xchg
or
inc
add
mov
addr16
fcmovbe
rcl
inc
sub
ds
jbe
mov
xchg
sub
mov
pushw
cltd
ficoms
sbb
into
pushf
fisubl
or
pop
jecxz
dec
mov
cwtl
out
mov
adc
out
mov
inc
xchg
push
jmp
call
inc
adc
xor
sub
add
push
add
jecxz
pop
jns
movsl
push
leave
mov
insb
das
cmpsb
stos
js
cmp
jnp
and
lret
std
pop
fbld
sub
fdivs
pop
sbb
dec
in
aad
xchg
xor
insb
mov
int3
cmpb
mov
xor
cmp
mov
add
xchg
sub
std
pusha
jp
inc
sub
or
movsb
pop
dec
and
dec
into
fs
pop
fldl
ret
cmp
cltd
gs
cmp
push
add
int3
out
xor
outsl
je
add
aam
xchg
lds
jae
shrl
stos
std
xchg
sub
pop
xor
adc
inc
push
lock
jnp
sahf
inc
out
push
cmpsl
cmp
fnstcw
and
rolb
adc
dec
pushf
inc
popa
mov
sub
sti
fs
mov
cmp
cwtl
fcoml
jb
jge
inc
into
out
lret
sbb
pop
mov
data16
jge
and
hlt
lods
mov
sub
xchg
jl
fsubrs
pop
outsl
or
mov
push
aad
in
out
jbe
test
test
inc
divb
movsb
or
daa
arpl
repz
xlat
js
ja
sub
dec
inc
mov
ret
scas
push
mov
fs
mov
sub
xchg
push
mov
mov
xchg
sbb
mov
mov
mov
rcrl
sub
cmpl
mov
or
js
rorb
sub
dec
ret
ja
dec
int
fdivrp
into
jp
daa
dec
je
mov
adc
sub
bound
icebp
nop
cld
rolb
mov
jno
xchg
sbbl
test
sbb
cwtl
sbb
or
add
ds
repz
lahf
dec
aad
dec
inc
or
in
decl
mov
insb
cmpsl
mov
in
xchg
jmp
aam
aad
and
xchg
and
test
lods
add
out
add
outsb
inc
add
jb
pushf
lock
push
shrl
cmp
jns
in
out
mov
test
mov
scas
sub
test
jo
nop
adc
orl
sarl
std
push
or
test
movsl
test
pushf
adc
stos
xor
pop
cmp
xchg
mov
ja
add
xchg
and
jnp
stos
lahf
and
pop
das
cli
pop
push
cmp
cltd
les
push
add
dec
push
mov
dec
jle
rolb
xchg
adcl
leave
xor
xlat
or
movsb
xor
xlat
sbb
mov
stos
jne
jnp
add
mov
sub
adc
std
pop
imul
xlat
sbb
call
sbb
pop
jb
lahf
sbbl
dec
mov
add
jmp
bound
stc
dec
pop
adc
sbb
ljmp
adc
sahf
add
ret
addr16
popf
sub
cmp
scas
sarl
imul
stc
pop
pop
aad
pop
xor
cmp
sub
sbbl
aas
jno
mov
push
leave
push
mov
fisubl
lret
hlt
mov
mov
xor
mov
test
jnp
xor
rolb
pop
jecxz
mov
out
in
cs
inc
xchg
mulb
push
adc
mov
cmpsl
out
lcall
mov
add
stos
adc
add
outsl
mov
xor
loopne
pop
mov
inc
push
dec
adc
xor
pop
jnp
leave
xchg
and
dec
lcall
out
test
push
je
ljmp
push
data16
add
popa
test
xor
jle
imul
jl
fwait
pop
mov
inc
sbb
sbb
add
jecxz
xor
pop
out
pop
lret
mov
daa
sub
movsl
popf
pop
fs
adc
pop
pop
dec
add
lods
jl
aad
mov
sbb
dec
lods
fwait
stc
push
xlat
push
sbb
scas
cs
pusha
call
pushf
sbb
pop
push
test
cltd
push
or
and
lcall
add
sbb
push
addl
cmp
xor
push
and
jmp
lods
std
lea
ljmp
mov
roll
xor
outsb
mov
mov
adc
in
andl
add
into
lds
inc
push
bound
fistps
xchg
push
movl
ret
inc
sbb
dec
mov
bound
cwtl
call
out
mov
ret
add
sbb
lret
xor
jae
mov
cmp
add
pushf
data16
sarb
sub
addr16
mov
sub
insl
fsubl
mov
fdivrs
jne
movl
cmc
dec
inc
jno
jne
popa
and
add
ffreep
adc
sbb
pop
adc
in
outsl
aad
sbb
loope
push
jnp
and
adc
shrb
jns
push
mov
jmp
test
ja
or
jae
lock
xchg
cli
sbb
jg
lods
scas
bound
xchg
mov
ljmp
aad
movsl
jno
jp
pop
xchg
cmpsl
and
shrb
aad
mov
and
insl
movsl
pushf
xchg
pop
or
insl
jge
and
enter
jecxz
outsb
ret
xchg
sbb
in
lds
mov
inc
dec
mov
pop
push
test
or
cmp
repnz
adc
aas
dec
push
or
hlt
add
mov
or
xchg
and
aaa
stos
sbb
mov
outsb
xlat
std
xor
ljmp
lds
sbb
enter
mov
or
test
hlt
xor
jecxz
sub
xchg
or
pop
call
pop
data16
mov
xchg
testb
insl
xchg
dec
rcrl
sbb
jnp
movsb
std
mov
mov
fwait
add
push
sbb
movsb
push
in
cmp
les
jg
jb
sub
sub
fiadds
xlat
imul
les
pop
mov
enter
sbb
or
pop
repz
xchg
dec
pop
pop
push
fldt
ficomps
add
mov
jns
mov
scas
adc
cwtl
fstpt
ja
cmp
mov
jmp
adcl
dec
jne
mov
insb
or
clc
mov
aas
movsl
lcall
insb
sbb
xchg
push
push
jnp
in
insl
xchg
mov
clc
loop
xchg
out
push
cmpsl
cmpsl
or
les
or
or
jne
jg
out
stos
mov
std
orb
sub
test
or
sbb
call
inc
loopne
out
mov
sbb
fldcw
rcr
xor
sbb
or
das
pop
aad
inc
cmp
dec
and
xchg
or
lret
xor
out
cmpsb
mov
es
adc
ljmp
sti
pop
xabort
adc
orb
shrl
call
pop
cmp
in
xchg
xchg
ja
inc
cmp
or
sbb
inc
lcall
cltd
fsubr
data16
add
fs
xchg
cmp
iret
fidivl
adc
aad
sbb
xchg
aaa
push
push
arpl
cs
imul
mov
ja
or
mov
sbb
stos
pusha
push
mov
mov
lcall
xchg
outsl
or
add
mov
movsb
push
test
adc
pop
pusha
enter
in
leave
sub
add
dec
adc
xor
push
mov
mov
insb
iret
scas
popa
sbb
fistps
jmp
push
or
imul
rol
int3
sbb
mov
push
mov
mov
xchg
push
adc
orl
pop
repnz
or
mov
iret
push
and
rclb
jb
pop
fs
mov
sub
xchg
mov
mov
fsubrl
adc
ljmp
push
loop
insl
pop
cmp
aad
dec
subb
lret
in
fstl
aad
jp
sbb
mov
insb
popa
leave
ljmp
int3
ja
fst
ret
jecxz
cmpsb
push
out
lods
call
in
fbstp
push
fbstp
sti
inc
and
push
lahf
shr
xchg
or
mov
adc
sub
push
aam
das
mov
xor
cli
cmpsb
pop
rclb
int
pusha
adc
imul
mov
ljmp
scas
sbb
dec
jo
cmp
jb
hlt
popf
xor
repnz
mov
addr16
imul
jge
mov
stos
inc
adc
sti
cld
jecxz
mov
fmuls
jp
push
dec
hlt
insl
aad
xchg
lds
test
imul
leave
sub
lock
inc
xor
fnstenv
cld
cmpsb
mov
or
cld
inc
lret
test
mov
pop
arpl
fsts
in
insb
push
ds
fildll
std
fidivl
jp
xchg
pop
movsb
out
cld
mov
push
mov
gs
mov
in
add
or
lock
inc
pop
push
rcll
jbe
out
insb
or
in
cli
cs
jg
icebp
inc
sbb
or
jne
xchg
mov
es
mov
jb
es
jl
lcall
out
lret
insl
enter
xchg
stos
aas
les
sbb
mov
jge
addr16
mov
stos
jmp
add
add
test
subb
pop
int3
lahf
dec
in
add
ss
shll
sahf
push
jae
mov
push
pusha
out
ret
sub
insl
cmp
inc
int
add
sbb
cmp
lcall
pushf
js
sub
pop
pop
mov
inc
mov
xor
push
stc
aam
cmp
pop
test
adc
push
inc
and
movsl
mov
and
gs
add
push
insb
add
xor
aad
dec
test
mov
pop
xchg
mov
or
shrb
inc
sub
push
fs
into
and
push
hlt
cmp
popa
mov
xor
mov
out
lea
mov
add
pop
stos
out
mov
sbb
gs
mov
push
addr16
pushf
sub
adc
jl
jae
mov
push
cmp
in
in
dec
pop
mov
decl
push
add
mov
or
push
js
addb
xorl
cli
adc
shrb
pop
push
add
xor
sbb
enter
xchg
jo
dec
jmp
xchg
dec
mov
sub
inc
es
mov
mov
das
sub
sti
int
sub
adc
in
push
cmp
push
lret
ljmp
mov
cmp
es
repz
rolb
xchg
out
fildll
or
es
push
fwait
cwtl
xchg
std
push
push
call
adc
sbb
jbe
add
fstl
mov
mov
loop
push
shr
pop
push
sub
sbb
inc
and
lock
sti
fsubrs
cwtl
out
and
push
pop
adc
mov
rcl
adc
sub
xlat
fsubr
jg
dec
dec
sub
pusha
inc
push
inc
lret
data16
sarl
daa
sub
xor
lahf
and
je
int3
cli
adc
rolb
mov
adcl
pop
jecxz
xor
loop
cmp
pushf
adc
insl
clc
xchg
add
pop
icebp
stos
lret
stc
sbb
test
and
fisttps
ja
sub
aad
sbb
dec
push
sbb
lock
push
sub
mov
mov
mov
test
loopne
xor
call
ja
lods
and
jae
int3
sub
ja
out
mov
out
je
jne
inc
jbe
fwait
cld
xor
mov
push
orl
and
jp
jnp
mov
call
fwait
lock
insb
ds
pop
add
gs
hlt
xchg
cmp
push
mov
lret
sub
test
mov
pop
fimull
aam
pop
or
les
dec
test
jp
inc
movsb
aas
inc
ret
and
rcll
ljmp
xor
loop
popf
push
inc
lahf
add
mov
sbb
adc
test
mov
mov
sub
rclb
inc
jae
lahf
mov
jge
test
jl
mov
fs
xor
rolb
mov
mov
cmpb
out
lods
mov
jns
loope
mov
fmuls
cmpsl
outsl
mov
std
inc
push
rcrl
adc
daa
jbe
cmpl
pop
jne
insl
nop
dec
dec
dec
add
lcall
xor
cmpsl
mov
clc
adc
xchg
xor
mov
dec
mov
sahf
aam
jbe
push
adc
fld
mov
mov
mov
insb
rcll
call
and
xchg
xchg
pop
int
ja
xchg
lcall
sub
iret
inc
mov
fidivs
aas
mov
enter
sahf
imul
dec
adc
dec
test
sub
mov
hlt
pop
jg
ljmp
bound
mov
xchg
fsubrs
jge
ljmp
dec
adc
out
mov
cld
dec
jmp
lret
sar
dec
and
or
inc
push
inc
push
mov
repnz
mov
popa
call
rcr
cwtl
in
jno
cld
cmpsb
xchg
dec
push
xchg
stos
mov
mov
push
cmp
aam
cmp
or
jmp
insb
lds
cwtl
and
xchg
popa
sti
ret
cmpsl
mov
out
pop
add
inc
or
int3
divl
popf
push
push
xchg
jg
mov
xor
push
out
xor
test
outsl
rolb
xchg
jae
mov
shrb
call
sub
sbb
orl
rcl
cmp
sbb
shrl
sub
cmp
daa
cmc
ss
dec
leave
sbb
rol
push
cmpsb
and
shll
out
jmp
xor
pop
sbb
add
mov
test
cmp
mov
xchg
xchg
inc
outsb
xor
adcl
fnstcw
dec
inc
adc
mov
aas
das
xchg
mov
ja
testb
mov
xor
hlt
sbb
scas
popa
pop
pop
nop
sbb
lods
mov
leave
insb
loop
and
xor
int
arpl
xchg
xchg
dec
rol
loope
lds
pop
jge
add
push
mov
fistpll
mov
pop
fnstenv
call
fdivrl
imul
aas
les
les
sbb
pop
jecxz
xor
js
lret
shl
add
mov
psubd
xchg
cmp
push
jbe
or
fwait
inc
pop
shrb
jp
loope
adc
leave
sahf
jno
push
jle
movsl
cli
sbb
lock
jmp
test
cmp
add
mov
rcll
dec
adc
lret
jns
xor
push
js
sub
and
dec
mov
inc
inc
add
push
xor
bound
jo
jb
adc
jmp
fwait
test
stos
mov
out
fidivrl
cmp
lret
sti
std
clc
mov
mov
int3
sub
sbb
xchg
ds
pop
hlt
cltd
push
imul
sti
or
cs
pop
jecxz
dec
dec
sbb
aaa
lock
dec
add
mov
or
popf
pop
adc
push
sub
xor
add
sarl
sti
mov
sbb
shll
and
xchg
and
in
negb
bound
push
dec
inc
mov
pop
xor
roll
out
mov
pusha
out
outsb
xchg
cmp
ds
es
pop
push
mov
aad
pop
leave
inc
call
inc
xor
adc
pop
mov
add
mov
jo
insl
and
mov
js
and
mov
or
jo
scas
jae
insl
das
scas
mov
fs
ja
insl
aad
xor
ret
add
stos
subb
fxam
mov
int3
into
mov
jg
shll
jb
call
or
pop
jne
test
mov
inc
into
xchg
add
ljmp
lcall
or
mov
out
imul
inc
inc
adc
int3
mov
stos
jb
leave
inc
jne
repnz
fwait
sarl
movl
das
movb
inc
dec
mov
mov
lahf
sldt
xchg
or
popa
inc
mov
nop
mov
xor
out
or
dec
ljmp
std
outsl
adc
cmp
test
sub
icebp
add
aam
push
test
or
pop
inc
ljmp
imul
mov
ror
mov
dec
cltd
scas
and
adc
xchg
push
aam
loop
xor
enter
cld
jle
data16
rclb
outsl
xor
jp
and
aas
fbld
dec
pop
and
popa
sbb
sbb
loopne
xchg
and
sahf
xchg
mov
rcrl
dec
decl
imul
jecxz
jle
dec
fdivs
mov
call
push
fcmovb
xchg
add
xchg
fldl
fsubp
lods
pop
fistps
or
aam
push
ss
aas
cmp
dec
call
xchg
insb
out
cmp
lcall
addl
hlt
cltd
aaa
inc
jns
and
in
or
and
jnp
shrb
ret
imulb
push
xor
test
and
xor
or
scas
out
adc
call
push
mov
fists
mov
bound
xlat
scas
pop
lds
pop
adc
and
loopne
adc
loope
jge
in
dec
rolb
sub
mov
mov
js
mov
sub
jle
adc
adc
sbb
out
mov
fsubr
lods
lcall
dec
push
sub
test
scas
and
ficoms
jl
lret
xor
jns
test
fidivrs
fwait
pop
pushf
pusha
inc
in
faddp
movsb
mov
sub
pop
push
sarl
out
push
inc
scas
dec
mov
push
sub
adc
lahf
lds
adc
scas
popf
pop
shlb
mov
lock
ret
jmp
outsb
lods
adc
jne
add
xor
add
hlt
xor
cwtl
lret
mov
int
push
dec
and
aam
fwait
mov
mov
cltd
lods
mov
adc
jb
jle
mov
out
mov
and
xchg
shrb
push
mov
add
addr16
pop
daa
xchg
imul
and
push
jl
cmp
and
and
add
mov
and
sub
jg
nop
jnp
xor
push
xchg
adc
in
pop
mov
mov
adc
inc
xor
andl
and
and
or
fdiv
push
xchg
decl
lret
inc
xchg
sahf
jl
icebp
test
push
aaa
gs
cmp
mov
pushf
lcall
movl
mov
nop
cwtl
mov
lcall
call
clc
sub
jl
jne
jmp
mov
xor
add
cmpl
insb
push
adc
and
cwtl
lret
and
and
xor
fdivrl
push
mov
das
add
adc
push
ja
addr16
mov
shl
and
fcmovne
inc
outsl
es
pushf
sbb
in
inc
jae
jne
int3
call
int
outsb
dec
xchg
addr16
js
jne
mov
pop
test
inc
imul
jmp
dec
es
and
sbb
sbb
fidivl
add
cmpsl
mov
jp
push
adc
xlat
lcall
add
mov
mov
ficomps
imul
adc
xor
js
hlt
call
clc
movsl
or
mov
movsl
mov
fildll
sub
cmp
cmpsl
cwtl
js
add
scas
xchg
les
inc
dec
xchg
push
adc
in
inc
popa
sahf
fidivrs
icebp
mov
shrl
dec
sarl
mov
push
ja
in
push
iret
jecxz
addr16
rcrb
call
rorl
ss
ficoml
xorb
aaa
inc
out
rcrl
jo
and
adc
sbb
xchg
jmp
test
fidivl
das
mov
fnstsw
pop
imul
mov
xchg
pop
or
sbb
add
cwtl
fchs
subl
scas
leave
adc
mov
mov
shl
jmp
inc
ret
js
mov
pushf
in
push
lods
andl
clc
jne
push
xchg
mov
xor
add
jne
sub
ret
nop
fmuls
dec
mov
mov
jno
or
or
mov
outsl
pop
lock
bound
outsl
or
inc
push
jle
aad
sbb
dec
push
fisttpll
mov
push
shr
xchg
mov
xor
jns
inc
mov
sbb
loopne
arpl
push
add
call
mov
jmp
inc
les
jae
test
bound
enter
lcall
inc
cmc
jg
xor
lock
and
sbb
mov
sti
adc
bound
dec
or
mov
shll
xor
inc
in
lret
testb
pshufw
imul
add
ja
pop
inc
add
push
andl
lock
lea
adc
insb
imul
xlat
cmp
jno
mov
sarl
cmpb
dec
and
adc
add
and
mov
ljmp
fildl
pusha
jl
xchg
add
xchg
cmp
sti
imul
addr16
test
cmpsb
in
xor
js
stos
push
fstpl
arpl
xor
mov
jmp
add
and
sbbb
dec
lcall
add
jecxz
adc
lods
int
adc
in
push
push
jl
cmpsb
aas
inc
leave
xchg
dec
lock
dec
int
call
pop
jmp
mov
mov
pop
outsb
loopne
ret
mov
je
testl
dec
sahf
lock
bound
sub
dec
ss
mov
sbb
dec
and
inc
add
fwait
sbb
cmp
mov
adcl
jmp
jmp
lcall
jl
das
inc
inc
jmp
cmc
fmull
sub
and
jae
dec
mov
xorl
cld
jl
mov
add
pop
cli
pop
aam
xchg
das
cmpsb
pop
push
and
int
mov
imul
mov
movsb
adc
jg
pop
loope
lock
push
jl
dec
aas
inc
jmp
std
sub
adcb
les
out
push
cmpsb
cmpl
mov
push
test
xor
jae
add
lods
sub
popa
in
xor
sar
xor
or
movsl
stos
dec
arpl
test
or
pop
jbe
inc
pop
cli
dec
and
push
shll
xchg
in
jp
js
out
pop
dec
daa
adc
rep
push
out
pushf
mov
mov
lret
cmpsb
pop
push
cwtl
in
or
jnp
stos
decl
pop
loope
out
push
cmp
andl
jbe
out
sbb
iret
adc
xchg
imul
fsubrl
stc
test
lret
subb
jecxz
pop
in
or
push
mov
ret
inc
mov
push
mov
out
test
pop
sbb
aam
test
iret
insb
jnp
insl
test
sarl
mov
imul
lahf
bound
or
mov
push
mov
jno
sub
mov
xchg
test
push
jno
faddl
lahf
cmc
enterw
sbb
sub
cmc
nop
test
xchg
jno
inc
mov
or
xchg
fstpt
lods
mov
pop
xchg
repnz
fwait
fisubrs
pop
das
int3
push
idivb
sbb
enter
enter
inc
jmp
pop
xlat
fisubrl
jo
xchg
js
push
xchg
sti
cli
outsb
mov
lret
fsubrp
shll
lea
lock
popw
inc
mov
mov
mov
fisttps
sbb
inc
pop
subb
sub
lods
aam
fldcw
add
into
daa
punpcklbw
repnz
addr16
lods
dec
pop
testl
jg
mov
data16
push
jae
fiaddl
loop
jmp
xchg
mov
outsl
imul
xor
jmp
jae
mov
out
mov
pop
scas
inc
decl
enter
sub
push
push
sbb
pop
mov
mov
fmulp
add
push
jbe
add
cmp
ljmp
adc
xchg
sahf
jno
sub
ljmp
shrl
mov
fucomp
insb
sbb
out
jae
insl
jae
xchg
sarl
add
movsl
push
arpl
in
std
out
in
insl
cmp
cmc
push
mov
mov
pusha
push
mov
cs
insl
ret
sub
jae
cmpsl
xchg
mov
rorl
sbb
fnstcw
xchg
rolb
add
lods
sahf
sahf
xchg
jno
loop
data16
aad
sti
and
and
negl
jmp
mov
test
mov
aam
jl
fiaddl
or
cmpb
fs
sbb
sub
mov
xchg
pop
in
nop
sbb
out
or
sub
jbe
jae
in
jmp
jne
int3
xchg
lcallw
add
adc
out
push
or
inc
nop
jb
arpl
adc
pop
jns
mov
add
xchg
idivl
mov
icebp
sub
xchg
mov
and
fdivs
dec
scas
push
ljmp
leave
dec
mov
sbb
arpl
je
insb
in
xchg
pusha
pop
cmc
push
imul
xchg
mov
xchg
and
outsb
test
inc
test
jae
pop
cwtl
shr
jb
ss
xchg
jecxz
cmp
cltd
adc
mull
inc
cmp
jne
std
rorb
xchg
lock
push
pop
add
adc
add
mov
test
fnstsw
inc
lahf
rclb
icebp
outsb
fisttpll
dec
lahf
lea
pop
imul
leavew
xchg
cmp
popa
inc
loopne
mov
lahf
sbb
mov
rclb
push
pop
in
test
sbb
ret
mov
pusha
push
bound
aas
cmpsb
sbb
icebp
cmpsl
adc
loopne
dec
aam
test
cmp
cmp
sub
add
daa
test
icebp
and
add
mov
dec
jl
orl
sbb
push
fmul
jo
xchg
scas
sbb
scas
popa
lock
int3
xor
lea
add
pop
xorb
mov
cs
adc
in
mov
push
pop
leave
lcall
cmpsl
cmp
ret
filds
mov
jo
dec
inc
jae
mov
test
aas
fs
fmull
outsl
inc
dec
fisttps
xor
pop
xchg
nop
inc
jle
lret
cmpsl
sub
push
call
jne
in
or
sbb
xchg
lret
jg
sub
mov
es
add
shrb
insb
dec
cld
xchg
mov
mov
push
adc
nop
aam
mov
sbb
push
pop
aad
mov
push
fdivrp
dec
fdivrl
and
push
pop
push
cmp
pop
ljmp
lahf
cmpsl
mov
fidivrl
sbb
loopne
aas
in
lea
pop
out
inc
adc
fisubl
insl
hlt
jns
and
push
xor
clc
loopne
cmpsb
push
imul
push
pop
sbb
cmp
sbb
aas
mov
sbb
out
xor
hlt
xchg
pop
insl
bound
lods
push
fildll
cmpb
inc
inc
pop
hlt
jae
sub
js
mov
sar
test
pop
cmp
push
push
jmp
xor
xchg
cmp
dec
jp
aaa
idiv
push
mov
mov
sub
pop
test
mov
int3
iret
lret
icebp
pop
loopne
jne
es
xchg
cmp
pop
sub
fidivs
push
push
aam
stos
sbb
mov
hlt
mov
lods
rol
sub
push
inc
pop
fcmovbe
insb
cmc
xor
pop
or
pop
stc
inc
push
jnp
daa
add
fisttps
pop
into
jmp
xor
rcl
outsb
fisttpl
add
std
jb
call
mov
addr16
sti
es
arpl
sbb
and
adc
movsl
rolb
fldt
pop
or
out
rcr
jp
pushf
outsb
rclb
loopne
mov
out
xor
mov
dec
add
mov
push
inc
icebp
sub
jmp
out
lret
pop
loop
inc
icebp
inc
rorl
xchg
ficompl
mov
nop
jae
or
out
rcll
cmp
adcb
jg
mov
rcl
andb
jp
fdiv
in
das
cmp
sub
incl
cmp
movups
mov
call
sbb
fiadds
push
sub
inc
inc
add
fwait
push
or
xchg
test
mov
das
pop
int
mov
cs
aad
cltd
dec
xchg
imul
out
aad
int3
scas
adc
in
jne
out
xchg
fildl
jns
inc
sahf
mov
inc
adc
test
cld
stos
pop
xlat
fisubs
or
jmp
fcmovu
xor
xchg
cmp
mov
xor
js
test
xchg
cmp
sub
fwait
mov
clc
add
push
fucomi
or
adc
add
js
leave
and
jb
pusha
xchg
mov
jp
inc
ja
mov
sti
dec
dec
fimull
jp
inc
jns
xorl
movb
xor
pop
stc
mov
mov
dec
or
sub
test
stc
stos
cld
jl
mov
xchg
les
jmp
add
and
mov
sub
sub
xchg
sbb
mov
rolb
dec
xor
adc
out
mov
outsl
push
cmpl
cmp
mov
jge
call
push
inc
stc
mov
in
pop
fsub
popa
sarl
pop
test
push
sub
add
push
fisttpll
fwait
inc
inc
in
ret
and
mov
or
out
in
xchg
push
mulb
les
push
ss
mov
sbb
and
push
mov
cmp
lods
ljmp
mov
iret
rorl
es
jecxz
push
data16
stc
adc
xchg
adc
lea
rcrl
pop
cmp
call
arpl
mov
add
cmpsl
and
aas
js
sti
inc
cmpsb
and
mov
mov
and
leave
cmpsb
in
ljmp
adc
daa
push
sbb
mov
sub
mov
dec
adc
mulb
push
or
mov
into
push
and
in
pushf
push
inc
lds
jl
rorb
cs
and
cltd
stc
stc
push
pop
and
dec
mov
push
jl
inc
lahf
dec
ja
push
or
push
mov
inc
fistpll
dec
mov
test
enter
test
repz
mov
mov
lret
call
xchg
scas
xor
loopne
cmc
sub
lock
fbstp
mov
int3
or
shlb
test
xchg
mov
pop
ficoms
stos
sbb
xor
xchg
mov
jg
pop
xchg
loop
lods
rcll
mov
inc
push
xorb
dec
loope
outsb
and
adc
push
sub
sub
fsts
pop
jo
mov
pop
jne
sti
ficoms
inc
pop
sahf
lret
jp
jno
xor
mov
stos
ja
enter
sub
add
icebp
add
int3
mov
popf
mov
cli
xor
jle
mov
loop
cmpsb
int3
cmp
xchg
inc
pop
mov
lahf
inc
movsb
lahf
push
popf
xor
imul
lcall
sub
out
inc
sub
sbb
pop
cmpl
mov
mov
aam
or
pop
adc
pop
ss
or
mov
int3
mov
movsb
sub
sar
mov
sbb
fsubr
jns
cltd
inc
jg
mov
leave
dec
mov
mov
test
scas
mov
ror
in
fisttps
jecxz
shrl
and
or
mov
movsb
call
bound
daa
or
rcl
mov
cs
inc
imul
les
mov
cli
outsl
cmp
cmp
es
adcl
out
push
jg
les
push
add
sbbl
cmpsl
mov
outsb
std
scas
push
movsb
test
mov
or
dec
and
or
gs
sub
cmp
xchg
movsl
cld
sub
xchg
fistpl
mov
pusha
sbb
mov
sarl
or
lock
and
sbb
mov
sbb
loopne
pushf
in
aad
aas
mov
sbbl
pop
mov
adc
ja
ja
test
stc
jne
jp
out
pop
rcrb
iret
cwtl
mov
add
cmp
aas
cmpsl
addr16
aaa
pushf
or
repnz
fdivrs
push
lret
pop
inc
push
aas
jns
insb
cmpsl
ror
cmp
or
in
ret
enter
xchg
push
jle
sbb
in
cmp
xchg
mov
jecxz
push
pop
sub
gs
inc
mov
pop
repz
dec
sbb
lods
fwait
push
inc
push
daa
sbb
into
jnp
sub
sub
pop
jne
mov
mov
push
enter
leave
fucomi
inc
loopne
cmpsb
pusha
adc
ret
icebp
mov
test
sub
ficomps
in
mov
shr
and
cmp
in
xchg
adc
cltd
popf
mov
jo
or
out
call
bound
lea
dec
push
inc
xchg
fcoml
pop
dec
mov
inc
addr16
jne
cmp
outsb
cmp
cmpl
cmpsl
movsl
jmp
out
ss
cmc
pop
sqrtps
divl
sub
stc
repz
lret
adc
xor
push
pop
iret
dec
xor
pop
pop
xchg
je
sahf
outsb
mov
mov
es
adc
pop
jg
jecxz
xchg
aas
and
test
cmp
loop
mov
out
pop
lahf
sbb
mov
add
imulb
out
ret
insl
inc
jmp
imul
enter
mov
sahf
dec
jo
mov
rorb
mov
outsl
and
ds
sbb
pop
sub
enter
mov
lock
stos
push
dec
cwtl
push
jns
jns
sahf
aas
jp
mov
fstpl
fisttpl
xchg
in
mov
outsb
add
mov
testb
ret
sbbb
rcr
mov
mov
shl
int3
xchg
insl
mov
pop
xor
push
pop
sub
mov
jecxz
clc
or
mov
dec
xor
lds
hlt
ret
dec
in
xor
and
mov
sbb
pop
cmp
cld
jbe
fnstsw
inc
jbe
fistpll
dec
inc
fldenv
xor
xchg
fbstp
pusha
out
sub
out
inc
mov
lods
sahf
loop
mov
fsts
call
push
xchg
daa
cmp
sub
aad
dec
xor
int
xor
lock
pop
sub
lret
loopne
dec
adc
dec
lods
mov
cli
flds
mov
xor
jae
cs
icebp
sub
int3
jns
out
jae
cli
mov
mov
mov
sarl
popa
jo
bound
stos
dec
push
hlt
gs
push
mov
sbb
ficomps
mov
adc
xchg
out
mov
xor
movsl
inc
and
sub
push
jge
cmp
push
mov
lret
stos
movsb
xchg
out
xor
inc
push
int3
out
mov
mov
stos
scas
mov
loop
cli
mov
ja
xchg
ret
xchg
movsb
dec
and
sub
mov
xchg
sbb
xchg
cmp
xlat
mov
lcall
in
outsb
push
pop
mov
aam
sub
inc
out
test
fwait
sub
sbb
sub
std
mov
cwtl
pushf
clc
outsl
mov
inc
sar
gs
push
xorb
dec
incl
jle
test
sahf
iret
inc
dec
cmp
mov
fistpll
ss
mov
cmpsl
mov
cmp
and
add
gs
push
lret
add
sahf
mov
leave
lcall
jns
or
cmp
inc
fs
ljmp
xor
mov
mov
pusha
fisubrs
jne
dec
test
jne
stos
mov
xchg
aas
aad
andb
aad
int
fsubs
loopnew
pop
outsl
mov
out
pop
lock
loop
pop
mov
jl
sbb
or
popf
cli
movsl
and
adc
push
fsubl
std
inc
fnstenv
cmp
lock
out
jns
in
push
mov
stc
cmp
addl
adc
push
xchg
stos
pop
mov
mov
movsl
jmp
dec
jns
idivl
jno
mov
sbbl
iret
cli
into
mov
mov
add
inc
or
mov
cmp
fstl
js
lock
pop
test
push
push
loopne
sti
popf
add
and
imul
ror
lret
push
addr16
push
xchg
sbb
lahf
into
mov
sub
aad
or
jle
ja
cmc
daa
adc
mov
add
cmc
lahf
mov
push
jge
jb
inc
xchg
push
xor
sbb
mov
shlb
jmp
testb
data16
leave
gs
mov
or
jb
arpl
rcl
sbb
sahf
mov
inc
dec
outsb
and
mov
xchg
arpl
add
shl
dec
pop
push
ja
cmp
pushf
xlat
daa
cli
icebp
jne
jns
jb
in
loop
shrb
and
addr16
mov
cmpl
inc
and
and
jl
fstl
lock
and
pusha
or
jmp
call
imul
jb
pop
mov
or
fs
cltd
testb
push
or
or
decb
repz
out
nop
jg
rorl
rcrl
popa
pop
mov
movsb
pop
push
outsl
or
gs
and
push
add
int3
jp
dec
mov
lods
push
dec
or
into
push
mul
adc
test
pop
xchg
inc
lock
xchg
sub
int3
pop
dec
jb
daa
xor
imul
mov
add
insb
lahf
mov
imul
sub
xor
fwait
test
xchg
cmc
popf
jmp
sarb
in
in
aad
or
lret
dec
shlb
and
ds
mov
jecxz
mull
and
fistpll
ret
sub
shl
outsb
loope
je
pop
lcall
add
arpl
jmp
and
test
fisttps
or
dec
add
mov
jecxz
pop
and
push
rcrb
lea
or
xor
xor
fs
mov
in
sub
bound
lock
js
cltd
dec
xor
add
cli
out
ja
push
pop
movsb
mov
andl
dec
aas
clc
push
mov
das
pop
or
adc
js
out
jge
xchg
jle
dec
push
xchg
data16
aad
mov
dec
dec
xor
loope
push
cld
mov
shll
cmp
xchg
push
data16
sti
adc
cmpsl
xor
mov
mov
lea
sbb
fstpl
nop
sbb
cli
loop
repz
outsl
mov
shll
sti
outsb
and
clc
imul
push
and
mov
add
cmp
pop
jo
lcall
sub
rorb
add
xor
mov
outsb
jge
jae
pop
push
mov
xchg
stc
dec
or
jge
xchg
pop
out
sub
fimull
add
lret
loopne
pop
cli
dec
sbb
add
adc
test
mov
ja
scas
inc
fwait
es
lea
aaa
aaa
dec
ret
adc
dec
inc
jg
mov
jno
xchg
adcl
test
jp
dec
add
jbe
pusha
xor
pop
jmp
scas
sub
sbb
pop
xchg
shrb
mov
daa
insb
push
andps
dec
sub
jge
dec
cwtl
es
jae
insl
push
movsb
cmpsl
push
push
fisttpl
and
sahf
inc
dec
push
push
pop
and
xchg
dec
pop
mov
in
lret
aam
in
cmp
pushf
and
or
das
xchg
xchg
mov
ja
repz
adc
ret
push
jmp
add
cmp
in
push
mov
rorl
imul
mov
cltd
mov
pop
fwait
and
xchg
popf
shll
dec
jecxz
mov
into
sub
adc
ss
in
nop
cmpl
nop
cmp
mov
cmp
push
adc
xchg
push
mov
mov
or
fsub
xchg
fst
leave
dec
popf
aad
cmp
jp
lods
std
mov
lret
pop
into
xchg
jmp
lcall
ds
scas
xor
or
pop
jmp
je
xor
fistps
jl
ja
push
sub
jno
add
lcall
and
add
leave
pop
push
std
stos
pop
jo
add
out
icebp
loope
mov
and
xchg
out
pop
add
sub
add
cli
scas
es
stos
subb
test
adc
fcoms
push
cli
jmp
in
inc
mov
xor
push
repnz
hlt
dec
dec
aaa
push
push
scas
test
js
rcrl
lods
cmp
push
fisubl
ret
cmp
push
movups
push
rcl
dec
xchg
in
mov
mov
dec
in
enter
sahf
dec
adcb
loopne
push
aad
xor
push
ret
mov
movsb
dec
jp
repnz
mov
test
fimull
xchg
roll
lock
xor
inc
loopne
xor
sbb
dec
gs
xchg
fdivrs
sbb
std
pushf
insl
sub
dec
rcl
cmc
mov
outsl
out
sub
and
inc
pop
gs
pusha
mov
inc
lret
adc
jb
insb
sub
mov
jge
adc
push
clc
xor
lock
int3
inc
out
cmp
pcmpeqd
cwtl
inc
xchg
xor
mov
xchg
xchg
test
loope
cmp
jmp
mov
pop
inc
outsl
stos
jmp
inc
sahf
ss
add
pusha
add
ss
in
bound
jl
fidivrs
dec
push
insb
adc
xor
fistps
rcrl
jmp
pop
adc
ret
xor
clc
dec
adc
or
es
or
fsubrp
repz
jne
cmpsb
icebp
lcall
jmp
jo
push
cmp
ja
jbe
xor
sbb
lea
or
push
push
jno
inc
stos
in
sbb
pop
int3
rcrb
jp
in
jg
mov
sahf
cmp
rcrl
sub
jb
les
fdivs
mov
jo
dec
jae
negl
inc
jns
or
push
arpl
in
push
fidivrs
inc
inc
cmp
int3
test
jecxz
sbb
fldl
xchg
xor
mov
dec
cmc
sbb
cmp
push
adc
add
inc
sbb
pop
mov
or
lea
mov
int3
pop
xchg
inc
and
sub
pushf
and
pop
add
add
pop
mov
jge
jo
mov
mov
add
xchg
xor
call
mov
mov
outsb
movsl
repnz
mov
shr
pushf
es
gs
std
or
lods
das
ficoml
ds
push
or
fdivs
fwait
pop
fwait
repz
xchg
es
int
dec
push
cmp
jge
idiv
jle
outsl
loop
fsubrp
push
std
fiadds
jmp
xor
in
repnz
sbb
enter
hlt
adc
jno
in
mov
dec
insl
fidivs
sbb
mov
lahf
inc
lods
outsb
sub
sub
or
push
popa
add
jno
scas
sub
xor
cmp
jae
push
and
inc
dec
xor
idivl
mov
out
dec
sub
xchg
movl
or
nop
pop
pop
in
inc
sbb
add
sub
cmpsl
mov
sbb
or
inc
movb
jecxz
fisubl
rolb
dec
inc
in
push
push
mov
mov
gs
mov
push
ljmp
inc
ja
xor
int3
or
mov
push
pop
xchg
mov
pop
mov
xor
cmp
cli
aas
inc
ja
jne
loope
mov
cmp
xchg
ljmp
dec
mov
push
mov
das
jb
arpl
lea
push
sbb
rcl
mov
cs
enter
push
adc
add
arpl
mov
cmpsl
or
sub
test
aaa
les
cmp
mov
fdivp
xchg
push
mov
ss
int3
lahf
add
mov
outsl
loope
and
das
mov
pop
or
adc
scas
incl
jecxz
sarb
lods
lret
xchg
filds
ret
cmp
mov
mov
data16
jns
addb
mov
or
inc
jbe
hlt
xchg
inc
hlt
out
out
cmp
jb
cmp
push
pop
lret
pop
incb
or
xchg
lods
into
das
mov
mov
int
mov
loope
and
shlb
pop
adc
inc
in
addr16
sub
push
mov
xor
pop
mov
mov
ret
jmp
int3
adc
sub
jo
lds
fldl
lahf
inc
mov
iret
imul
sbb
out
jnp
mov
xchg
ja
frstor
shl
ret
mov
in
push
jo
pop
fsubrs
mov
inc
push
pop
push
push
lahf
xchg
mov
fdivr
jge
jnp
jno
sti
mov
mov
inc
push
bound
jns
das
insl
sub
test
movl
inc
mov
sbb
xchg
push
pop
cmpsl
mov
mov
mov
mov
ret
pop
sbb
fs
dec
dec
mov
adc
out
sti
pop
lods
insb
adc
mov
xchg
fwait
lock
pushf
add
js
shlb
js
sub
mov
or
sub
push
sub
push
movsl
out
loopne
sub
jb
jnp
jno
pop
bnd
int
lahf
jmp
das
xor
jo
xlat
in
test
ficoml
rep
adc
in
and
pop
test
test
in
push
sub
or
mov
ds
sub
dec
xchg
jbe
cmpsl
and
cmp
cltd
push
push
and
sub
sub
sbb
xchg
mov
inc
cmpsl
in
ret
mov
fdivrl
xchg
adc
and
movl
push
inc
cmp
in
iret
ljmp
fwait
lcall
fcom
xchg
jg
and
mov
lock
out
push
in
popf
pop
push
test
je
scas
cld
dec
clc
fistpll
mov
rcll
fdiv
faddl
mov
fwait
mov
cmp
cs
sbb
mov
mov
xrstor
add
inc
icebp
cs
xchg
in
movsl
in
pop
dec
imul
mov
xchg
jae
add
repz
xchg
shll
mov
dec
lret
outsl
sub
je
push
repz
ficompl
fdivs
in
sti
mov
rep
das
inc
sub
mov
add
and
dec
pop
aas
xchg
mov
dec
out
lods
xor
push
in
mov
and
sub
loope
jge
movsl
shll
jns
inc
int3
jp
scas
cmpsb
mov
clc
push
arpl
icebp
sub
inc
jecxz
push
mov
shl
push
xlat
cmp
int3
add
inc
call
les
xchg
sub
lods
jb
ljmp
cltd
cltd
mov
es
jecxz
std
xchg
incb
fdivrl
xchg
pop
jge
sub
fnstsw
xchg
das
sti
movsl
cmp
hlt
int
jae
sahf
inc
sub
add
sbb
push
and
adc
mov
hlt
mov
mov
imul
lcall
push
xor
mov
push
call
cld
cltd
push
test
fsubs
mov
sbb
mov
xchg
mov
outsl
pop
pusha
ret
pop
lods
movsb
dec
sbb
adc
in
jmp
gs
push
push
inc
pop
sbb
mov
shlb
out
add
dec
mov
movsl
add
int
lock
insb
decb
test
mov
jne
adc
in
mov
hlt
int3
aas
mov
jecxz
into
in
jl
jge
mov
jo
imul
xchg
add
xor
scas
pop
sub
jae
add
adc
les
sahf
mov
pop
cwtl
or
jns
leave
mov
dec
cmp
cmpb
sbb
adc
test
jmp
mov
iret
push
jno
push
js
fs
or
lahf
dec
out
dec
mov
ss
test
pop
jb
cld
imul
cmp
sub
das
enter
adc
or
jmp
adc
adc
inc
cmpsl
sbb
dec
jae
je
lea
in
imul
fwait
jo
inc
nop
push
xorl
sub
scas
imul
mov
jge
fidivl
jb
sbb
divl
or
xchg
add
dec
inc
inc
push
ds
cmpsb
movsl
das
adc
sbb
jge
and
sbb
xorb
fwait
and
shlb
stos
xchg
or
jge
clc
decb
bound
rclb
cli
pop
repnz
push
js
enter
adc
sbb
ret
mov
neg
xor
mov
loope
mov
test
lods
mov
xchg
xlat
lock
sbb
movsb
cli
xchg
mov
mov
mov
fadds
or
je
fnsave
push
pop
push
cmpsl
and
in
or
and
jnp
pop
cmp
dec
cmp
std
out
pushf
rcl
push
aas
jmp
mov
and
mov
dec
addr16
pop
push
ss
xor
lods
loopne
jp
or
cmp
mov
jle
insb
pop
sub
mov
push
out
adc
push
adc
fcoml
push
or
int
fbstp
pop
pop
push
out
mov
mov
or
nop
enter
push
mov
cmp
push
jg
sub
cmc
push
adc
pusha
push
cmp
sub
pop
xor
lcall
dec
lret
loope
pop
aas
insl
mov
mov
daa
adc
pop
jmp
cmp
jb
sbb
fbstp
es
aam
lahf
data16
jae
int
xor
in
out
fisubrl
fs
push
inc
call
lock
pop
sbbb
addr16
in
addr16
push
mov
idivl
ljmp
subb
rol
scas
cmp
pop
ret
sbb
mov
xor
fbstp
xchg
xor
dec
mov
es
fistl
xchg
mov
lods
je
inc
xchg
xchg
clc
cltd
repz
js
push
cmp
xor
rclb
jmp
pop
aam
dec
sbb
into
pop
sbb
adc
add
sbb
mov
in
sbb
in
rcrb
aam
jnp
inc
aaa
mov
loop
shll
pop
mov
add
popf
cld
movsb
or
add
push
les
fldt
cltd
fisttps
jbe
sahf
cld
mov
pop
or
or
mov
iret
fmull
add
lahf
aaa
addl
mov
jb
mov
xlat
popa
cmp
gs
popa
in
nop
push
jp
mov
clc
in
ficoml
cmp
push
mov
cmpsb
adc
divb
sbb
mov
jge
mov
loope
sbb
test
jae
leave
hlt
mov
lret
dec
mov
mov
mov
pop
in
sub
cmpsl
aad
adc
js
inc
in
shll
mov
sbb
aad
mov
mov
insb
pusha
lds
pusha
ror
lods
sub
adc
or
mov
or
bound
fsts
shll
pop
dec
add
lea
push
nop
add
repnz
pop
inc
outsb
cltd
cmp
lcall
mov
out
pop
pop
mov
or
adc
cmp
int3
cltd
or
sbb
push
fwait
popa
add
xlat
mov
test
rcrl
xchg
movaps
mov
mov
push
repz
popa
int3
inc
fdivrl
sbb
dec
cmp
push
jne
pop
fstps
fwait
mov
mov
iret
lods
mov
sub
or
sub
adc
fs
mov
stos
jnp
ret
fisubrs
pusha
inc
sarb
inc
xchg
and
xchg
scas
and
clc
and
push
mov
test
pop
add
mov
or
popa
gs
int3
pop
inc
add
stc
ret
ds
cli
jns
or
arpl
or
jnp
mov
aad
cmp
dec
mov
outsb
mov
sbb
ja
pop
mov
int3
jae
das
hlt
pop
ret
js
mov
mov
aad
or
inc
adcl
cmp
decl
adc
insb
icebp
pushf
stc
js
sbb
cli
push
out
sbb
add
mov
sar
mov
pop
fisttpl
mov
out
iret
icebp
ds
jecxz
shll
pushf
jo
nop
mov
rolb
xchg
dec
jo
dec
shrb
ja
lea
pop
test
push
imul
cmpl
addr16
mov
and
mov
js
sub
pop
imul
ds
stos
shlb
or
andl
lret
fdiv
inc
mov
cltd
jns
lds
arpl
test
push
cmp
loopne
icebp
lret
and
das
add
rclb
push
popf
cs
lods
xchg
adc
xor
je
xor
lcall
adc
call
testb
mov
mov
mov
jmp
loope
cmp
and
mov
loop
lret
in
fildl
and
out
dec
addb
imul
sub
inc
out
dec
arpl
fimuls
sub
xchg
arpl
nop
and
push
fstl
adc
pop
pop
cmc
cld
mov
add
xchg
ret
push
fsub
xor
les
pushf
jge
popf
repnz
loopne
ja
jl
dec
mov
daa
mov
das
aam
add
inc
iret
or
rorb
imul
outsb
addb
cmp
lds
cmpsb
inc
rdtsc
stos
int
dec
notl
popa
adc
fisubl
sub
sbb
add
push
gs
add
stos
cmc
int3
ja
jno
rcl
add
repz
sbb
jo
push
stc
mov
lret
jmp
add
aam
inc
cwtl
push
mov
xchg
int
add
adc
subl
lods
pop
ljmp
ja
adc
fistpll
out
and
repz
mov
scas
or
int3
shrb
mov
sub
inc
lock
gs
sarb
aam
add
pop
mov
sti
pop
push
outsb
roll
sbb
cmc
jl
loope
add
mov
push
mov
add
xor
aaa
in
sub
subb
sbb
imul
lcall
mov
mov
adc
add
pusha
pop
mov
pop
xchg
repnz
pop
out
pop
inc
loop
out
pusha
mov
adcl
iret
mov
xchg
out
pop
adc
adc
xor
mov
in
rcrb
gs
dec
adc
jmp
jo
pushf
notb
jae
leave
addb
loopne
sub
je
xchg
pop
lret
stos
jecxz
outsb
fildl
dec
jmp
dec
or
xchg
jecxz
xor
subl
xchg
cmc
lahf
data16
scas
test
ds
divl
mov
jb
aam
push
cmp
rcrl
or
pop
lods
or
xchg
sub
xor
jecxz
loopne
test
xchg
cmpsl
pop
inc
mov
adc
sbb
shrd
daa
loopw
mov
cs
xor
adc
add
cmpsl
lods
lret
shl
sbb
call
jns
adc
mulb
xor
fdivs
pusha
fistl
mov
into
mov
cmp
popa
leave
icebp
xchg
and
ss
or
out
xchg
jae
xchg
loop
xchg
int3
sbbb
sti
negb
push
mov
push
mulb
scas
das
sarb
push
push
jge
cld
sub
mov
xor
loop
jae
fcomps
je
negl
ret
add
jbe
in
out
enter
jae
xchg
jb
ds
adc
fiadds
and
ficoms
loop
call
notb
aaa
stos
mov
movsl
pop
adc
mov
cmp
pop
push
pop
in
xlat
add
pop
loopne
dec
loop
rcll
lds
xor
push
nop
cmp
pop
movsb
shr
mov
rcr
nop
loop
mov
add
outsb
hlt
push
sub
shlb
js
in
mov
add
fs
scas
sbb
mov
aad
bound
imulb
xor
xchg
shlb
inc
cmovs
fsubl
adc
add
push
sub
dec
and
popa
sti
cmp
loope
iret
mov
adc
fbld
ret
add
fcomps
push
out
fisubs
fwait
push
fimull
repz
repz
int
or
fisttpll
addr16
push
jle
jae
sbb
jae
daa
pusha
sub
xor
shrb
dec
jg
out
repz
nop
mov
sbb
sub
in
push
inc
cmpsl
inc
cmp
pop
hlt
inc
adc
fwait
sbb
lds
inc
out
scas
jnp,pn
movsl
xchg
pop
insl
out
ja
out
bnd
movsb
pop
cwtl
jle
fst
mov
push
js
sub
dec
jae
add
ret
shll
hlt
adc
sbb
iret
movsb
movsl
adc
nop
push
into
sbb
stc
out
mov
ret
iret
mov
lds
call
sbb
inc
jo
ror
std
push
loop
pop
add
dec
aam
leave
lcall
je
xchg
out
adc
sub
pop
mov
jge
addr16
rorl
sbb
mov
push
push
sbb
test
push
lods
cwtl
pop
jecxz
ret
test
clc
pop
inc
add
pmaxub
pushf
jnp
movsl
jl
jnp
lods
xor
cmp
aas
test
jne
mov
pusha
addb
xchg
std
lock
shll
mov
xchg
rolb
pushf
adc
sub
add
movsb
cmp
inc
cwtl
sti
mov
xchg
js
arpl
clc
push
in
fmul
cmpsb
test
cltd
popa
mov
arpl
dec
mov
mov
mov
outsl
mov
xor
or
mov
sti
pop
cli
les
cmc
pusha
xor
in
xchg
push
jle
inc
lret
in
lret
pop
or
loop
rclb
add
aam
xorb
adc
cmp
xchg
inc
sahf
add
lods
adcb
lahf
stos
ljmp
sarb
mov
call
clc
pusha
stos
mov
leave
lret
dec
nop
scas
and
imul
pop
or
xlat
cmpsb
sbb
mov
add
mov
adc
and
sub
jo
cmp
dec
and
data16
fwait
mov
mov
mov
mov
mov
mov
lods
movsl
insl
mov
incb
pop
push
sub
out
in
mov
mov
lds
aad
push
es
mov
jle
add
mov
adc
pop
out
int
ficomps
daa
les
sbb
clc
insb
dec
inc
sbb
mov
daa
push
push
add
xor
jmp
mov
jecxz
lock
rcll
loop
dec
xchg
push
fistl
ljmp
pop
sar
jns
or
sar
subl
jae
lret
out
add
daa
or
dec
lahf
pop
popf
or
xchg
push
pusha
xchg
in
and
sbb
lock
mov
insl
sbb
fiaddl
mov
iret
fnsave
pop
fisubs
cmp
iret
dec
addl
inc
adc
mov
push
add
out
xchg
cmp
arpl
out
orb
mov
clc
aaa
jge
pop
jns
xchg
mov
clc
jb
sub
mov
fcoml
dec
xchg
jmp
xor
imul
outsl
test
in
out
ret
icebp
add
imul
xchg
inc
inc
fcmovu
int3
dec
mov
pop
mov
out
inc
push
bound
movsl
call
lret
mov
xor
sub
sbb
mov
mov
inc
jge
adc
sub
adc
outsb
fidivrs
dec
out
popa
jmp
sahf
lret
call
jp
sub
arpl
aad
mov
mov
or
sbb
cmp
loope
aaa
cmpsb
jg
sub
pop
or
les
ja
scas
bound
jl
aam
push
add
or
xor
push
pop
dec
test
push
test
imul
shrb
jg
cmp
clc
pop
add
ret
adc
sub
inc
push
mov
arpl
incb
xchg
xor
jae
inc
in
subl
out
test
xor
fs
cmp
scas
push
lret
test
into
gs
lcall
cs
dec
enter
sbb
jg
jp
rcr
outsl
push
sbb
jl
andb
inc
iret
jg
popa
fdivrs
shlb
dec
pop
fidivrs
pop
mov
pop
mov
add
xchg
and
or
cltd
xlat
pop
xadd
mov
mov
jg
les
cmp
insb
mov
xchg
in
pop
add
cmpb
arpl
adc
popa
outsl
jecxz
sub
push
popf
shl
jecxz
mov
or
mov
pop
js
lcall
sub
int
movsl
or
out
pop
es
sbb
xchg
mov
add
loope
sbb
enter
loop
addr16
sbb
popf
mov
mov
test
lahf
hlt
inc
push
scas
dec
nop
cmpsb
jbe
cmp
int3
add
dec
ss
mov
inc
inc
dec
push
rcrl
in
cmp
add
inc
dec
aad
rclb
inc
cwtl
pop
dec
xchg
mov
xor
int3
testl
dec
cmp
pop
xor
arpl
xchg
mov
xchg
dec
or
jnp
sub
cmpsb
adc
imul
dec
cmp
and
hlt
sub
sub
mov
gs
fistl
pop
addb
inc
pushf
test
xadd
std
jle
adc
int3
sti
sub
cmp
xchg
inc
sbb
adc
stos
inc
or
jns
xor
sbb
xchg
outsl
mov
or
and
in
add
cmp
dec
mov
arpl
cmpsb
iret
sbb
fldt
jno
add
inc
cmp
add
cmp
sbb
mov
sbb
pop
and
cmp
adc
mov
dec
in
mov
sahf
fsubr
out
sub
and
stc
cs
inc
idiv
loope
daa
outsb
jns
push
mov
xor
push
pop
notb
pop
pop
pop
xchg
stos
dec
push
jnp
inc
inc
cmpsl
or
pop
aas
fnsave
lds
leave
shll
xchg
lahf
loope
dec
and
enter
incb
shr
pop
ja
sbb
movsl
push
rcrl
in
inc
movsl
lods
jne
aaa
dec
repz
mov
dec
add
xchg
test
mov
and
shll
outsl
sub
aam
mov
mov
sbb
mov
sbb
push
sub
add
push
jle
add
xchg
and
xorb
and
repnz
mov
in
or
jbe
inc
push
sbb
leave
jle
jno
dec
or
cmp
jb
jb
insb
or
mov
inc
jmp
cmp
jmp
cmp
fbstp
add
cmp
cmpsl
hlt
pop
notb
cmpsb
movsl
cmpsl
ret
cmp
xchg
inc
pop
cwtl
inc
push
cmp
stc
jp
stos
fdivs
xor
popf
mov
adc
sub
jno
enter
or
mov
in
sti
inc
and
adc
mov
dec
lahf
xor
sbb
clc
adc
pop
loop
movq
std
lcall
out
mov
adc
push
lods
sub
mov
xor
popf
xchg
xor
lret
sub
fisttps
stos
sbb
rcrb
mov
and
or
adc
xchg
out
mov
push
out
mov
in
fs
pop
shrl
and
test
sbb
cmp
aad
jge
in
inc
mov
or
mov
packsswb
pop
enter
cmp
test
insl
xor
lret
and
push
ljmp
pop
pop
add
push
repz
add
aam
inc
mov
js
cmp
sbb
add
push
xchg
mov
and
push
and
dec
lret
cmp
ljmp
inc
jecxz
idiv
jnp
inc
mov
ds
call
or
sbb
and
or
cmp
xchg
dec
rorl
xchg
outsb
and
lret
jno
sbb
mov
mov
sub
bound
icebp
jmp
mov
jl
popa
inc
call
mov
nop
sbb
imul
ss
push
cwtl
mov
add
mov
cmp
lret
push
int
leave
adc
and
fistpll
test
and
jo
popf
jae
sbb
movsb
stos
sbb
add
sbb
sbb
or
mov
andl
and
cltd
jnp
jmp
adc
push
fstpl
shl
add
xchg
inc
add
repnz
pop
bound
stc
or
fistps
mov
mov
jg
sbb
fcmovbe
into
mov
test
jne
idiv
lds
insb
ret
out
ficompl
andb
scas
test
inc
inc
xor
push
insb
xor
sbb
cli
leave
ljmp
mov
test
sahf
push
lods
add
call
or
in
pop
call
mov
jne
mov
sti
mov
push
push
stos
ss
sti
fbld
cs
and
mov
rcl
mov
push
mov
rorl
cmpsb
mov
mov
ja
jbe
push
xchg
or
sti
loope
es
rcrl
jo
lock
nop
faddp
jl
mov
ss
push
dec
lds
mov
jge
push
pop
insl
test
xor
and
xchg
inc
imul
iret
jns
jb
and
mov
cli
shrl
and
std
mov
repnz
xchg
jns
xchg
lahf
cmp
movsb
lock
lahf
imul
sub
mov
cmp
mov
jg
insb
dec
scas
xor
dec
push
loop
inc
stos
add
imul
mov
adc
out
lock
inc
imul
sti
sbb
push
dec
push
mov
fisttps
pop
pop
int
stc
out
mov
sbb
fisttpll
cmpsl
push
add
mov
mov
fstl
ss
add
push
mov
or
btcl
test
leave
pop
and
push
sbb
jne
and
loope
js
pop
lods
movsl
repz
xlat
pop
jo
outsb
mov
mov
jno
or
cmp
out
mov
lea
pop
lock
repz
pushf
ror
imul
aad
inc
idivb
mov
sub
clc
lcall
mov
test
test
lret
and
popa
pop
movsl
test
push
scas
jo
sbb
mov
orl
xchg
push
mov
scas
in
mov
out
cmp
xchg
rorb
pusha
cmp
cmp
cmpsb
add
int
pop
enter
ret
xchg
mov
out
stos
in
in
es
js
fnstsw
pop
and
jle
jmp
push
scas
push
cmc
mov
les
dec
cmp
mov
pop
dec
mov
sbb
cmp
in
xchg
xor
mov
pop
outsl
add
push
iret
add
xchg
scas
sbb
fcomps
xor
push
lret
addr16
sub
das
pop
shrl
les
mov
or
mov
js
pop
inc
out
mov
lea
or
pop
jae
xchg
popf
mov
lret
mov
or
add
scas
ljmp
adc
sahf
sub
inc
subl
sbb
mov
inc
fistpll
pop
sub
cmp
sbb
jbe
ja
pop
lahf
ret
lret
ret
or
outsl
dec
repnz
enter
mov
xchg
cs
push
cmp
clc
jnp
sahf
jnp
push
cmp
jnp
mov
xchg
inc
mov
ret
mov
sbb
rclb
je
mov
fucomp
sbb
mov
cmpsl
leave
leave
lods
mov
mov
cld
je
hlt
popf
jg
adc
and
push
in
mov
push
inc
mov
mov
inc
and
das
xchg
jge
sahf
mov
das
outsb
cmpsb
cmpsb
adc
ficomps
cmp
mov
jae
sbb
movsl
into
repnz
cmc
dec
rol
scas
mov
ja
notb
loope
adc
outsl
lods
mov
fidivrs
mov
xor
xor
movsl
mov
xchg
push
faddl
dec
adc
mov
mov
push
lds
mov
popf
dec
out
mov
dec
stos
add
orb
in
repnz
idivb
adc
sbb
loopne
mov
fcoml
dec
push
cmp
mov
in
movsb
xchg
cmp
jne
or
xchg
jne
repz
or
es
fnstsw
in
aad
fbstp
outsl
lret
inc
push
fs
mov
loopne
cmp
pop
cmp
mov
and
sbb
cmp
dec
add
pushf
aas
in
fbld
cmp
mulb
mov
adc
and
fs
lret
cmp
mov
xor
xchg
and
std
pushf
mov
cmp
sti
nop
adc
fsubs
es
out
jns
cli
cs
xchg
imul
xchg
and
add
daa
mov
lock
jl
jmp
adc
lea
lock
pop
cs
pusha
xchg
gs
add
aad
fwait
mov
dec
loop
adc
es
test
cwtl
repnz
push
cltd
stos
mov
stc
xchg
mov
or
out
fs
int3
rcl
mov
iret
stos
mov
movsl
data16
shll
mov
in
jle
mov
cld
fistps
shrb
int3
cmp
in
stos
loop
mov
pop
daa
xlat
stos
mov
lds
cmp
jbe
xor
sbb
test
pop
mov
cmp
cltd
jb
dec
mov
push
fs
aam
xchg
cmp
imul
mov
int
cmp
idivb
out
clc
arpl
push
or
or
icebp
js
sub
adc
add
test
out
mov
pop
add
icebp
icebp
mov
ret
lods
jnp
jno
aaa
adcl
xchg
add
es
int
mov
xorb
arpl
mov
ss
mov
push
popf
sub
cmp
and
fiaddl
mov
lret
mul
xchg
jae,pn
divl
shlb
and
test
or
jns
std
adc
xor
gs
xor
popf
sarl
cs
dec
xchg
lds
jle
call
std
mov
in
je
xchg
in
jmp
int
or
enter
stos
fidivl
or
xor
fidivl
sub
enter
popf
popa
out
adc
loop
stc
mov
fcmovb
inc
ljmp
adc
insl
adc
scas
dec
testb
or
and
loope
rcrb
dec
xchg
jmp
mov
sub
cmp
js
pusha
gs
arpl
stc
fistl
xor
mov
jbe
push
mov
add
mov
xchg
inc
repnz
ss
sub
das
clc
in
out
adc
daa
sub
andb
mov
sbb
xor
jl
xchg
cmp
loop
xchg
lret
mov
lods
icebp
cwtl
in
mov
sub
push
dec
mov
push
mov
movsl
sarl
mov
cmpsl
loopew
jle
stos
ja
mov
into
jno
sbb
xchg
daa
ss
sub
cmp
adc
jecxz
xor
xor
or
add
mov
add
mov
sbb
sbb
subb
les
mov
jae
cmpsb
adc
loopne
adc
scas
shlb
adc
push
mov
sti
nop
inc
or
adc
adc
xor
push
mov
push
sbb
lds
cs
movsb
inc
loope
push
fs
stos
cmp
mov
mov
sbb
pop
pop
cmp
jl
sub
int3
jle
orl
push
mov
cs
xor
loopne
or
cwtl
repz
mov
push
inc
aas
cmpsb
push
cli
mov
adcb
insb
mov
loope
add
inc
inc
mov
pop
and
stc
andb
add
and
add
pusha
jge
icebp
inc
mov
fcompl
lcall
mov
in
cmpsb
push
dec
cmp
mov
mov
enter
xor
sysret
cld
mov
mov
dec
add
icebp
mov
and
leave
xchg
xor
ret
cmp
into
lahf
push
incl
lahf
push
push
lret
ret
stos
or
lea
movsl
pop
sbb
sbb
test
sub
fwait
mov
sub
cmc
dec
das
xor
scas
fisttpll
sbb
dec
xor
inc
test
jg
mov
shlb
in
mov
fimull
or
jae
fs
adc
mov
sbb
push
jle
jg
jae
or
mov
inc
add
out
pop
xchg
push
pushf
or
repnz
les
lods
sub
mov
je
pop
cmp
adc
jle
pushf
icebp
cs
xor
pop
imul
pop
nop
add
xchg
adc
cmp
stos
pop
inc
add
shlb
jno
push
mov
xchg
je
lods
sub
insl
fidivs
ret
adc
mov
jecxz
std
mov
adc
fdivl
es
cli
lahf
fistpll
mov
iret
fbstp
repz
mov
nop
aad
mov
ds
std
ss
pop
pusha
enter
fisubrs
xchg
sbb
mov
and
sub
and
inc
sbb
fistpll
xor
test
adc
mov
or
int
cmp
dec
sbb
cs
jns
push
imul
mov
cmp
incl
cmp
out
in
ja
leave
jmp
mov
dec
test
adc
and
jmp
add
ret
mov
nop
mov
inc
subl
and
cmpsb
ret
imul
cmp
cmp
das
gs
stos
stc
xchg
and
mov
inc
int
or
adc
jmp
mov
add
xchg
pusha
xchg
xlat
mov
mov
mov
pushf
test
cmc
xchg
shrb
shl
scas
sbb
xor
push
cmc
loop
je
xchg
add
sub
scas
jl
mov
sbb
mulb
es
repnz
movsb
and
add
pop
inc
xchg
dec
scas
ds
and
lahf
imul
lds
mov
testb
adc
pop
or
mov
push
sahf
or
dec
push
jp
add
push
xorb
stc
adc
enter
hlt
xor
xchg
lea
or
xor
push
pusha
imul
bound
lcall
out
mov
jmp
daa
xchg
fwait
adc
lcall
sahf
loop
in
fimuls
xor
jg
adc
cmp
adc
addr16
mov
mov
pop
mov
or
das
mov
xor
std
hlt
fstpl
sbb
push
je
fstps
cmpsb
stc
in
and
add
test
addr16
push
push
dec
adc
fbld
lods
pop
inc
jl
sub
mov
inc
lods
pop
mov
dec
int3
in
dec
pop
hlt
push
ss
sbb
jb
aam
lea
inc
adc
push
ja
mov
pop
jl
push
mov
mov
sti
iret
dec
mov
xchg
test
inc
call
or
or
mul
js
loop
xor
out
and
adc
sub
pusha
or
push
arpl
push
andl
sbb
xchg
sti
mov
mov
shll
test
lcall
mov
es
shl
mov
sub
pop
pop
rclb
xchg
mov
pop
into
hlt
icebp
push
xchg
xlat
cmc
lods
popa
pop
xor
gs
leave
mov
mov
inc
sub
nop
jecxz
js
jl
dec
mov
mov
pushl
in
pop
repnz
xor
xor
outsl
sbb
arpl
lea
mov
lock
addr16
pop
xlat
mov
fsts
mov
or
repz
ficompl
mov
icebp
lock
pop
out
inc
pop
inc
testl
adc
or
sbb
or
jnp
push
mov
stc
mov
outsl
dec
lahf
push
add
fsubl
fsubr
movsl
sub
out
jne
sbb
inc
out
jno
call
and
pop
xchg
mov
inc
add
loope
lret
jecxz
dec
stos
fistpl
leave
jo
or
cmp
inc
scas
xchg
imul
push
cmp
mov
xchg
dec
loopne
adc
enter
add
pop
xchg
cli
cli
mov
popf
out
repnz
hlt
xchg
lods
fcompl
pop
mov
dec
xor
mov
inc
loop
aam
pushf
xor
inc
dec
loopne
test
inc
mov
les
sbb
mov
lods
leave
movsl
push
push
stc
adc
outsb
movsb
ret
out
js
cmpsl
jno
pop
std
cwtl
fwait
test
ds
adc
sub
loopne
insb
fcomi
shll
add
cltd
dec
clc
pusha
dec
and
fisubrs
subl
or
inc
addl
inc
bound
cmp
incb
movsl
in
loopne
inc
icebp
jp
fs
xor
stos
cmp
mov
fwait
icebp
mov
mov
shll
mov
jecxz
mov
pop
mov
leave
lea
inc
fwait
mov
mov
clc
lods
es
out
jbe
shll
push
fwait
sbb
mov
inc
xchg
pop
nop
adc
add
or
cltd
and
sbb
insl
push
es
test
mov
add
push
xor
adc
mov
aaa
lea
pop
scas
fmuls
mov
out
inc
fisttpl
or
dec
dec
lcall
cli
and
mov
repnz
cmp
sub
iret
mov
inc
xchg
sti
addb
sbb
or
cmp
mov
mov
aas
sbb
add
cmpsb
ljmp
adc
push
mov
cmc
push
std
in
jne
mov
pop
insb
xor
lds
jg
js
and
xchg
adc
mov
dec
les
push
and
dec
aas
push
scas
inc
ds
iret
aam
jmp
scas
mov
adc
sbb
addr16
iret
iret
int3
pop
pop
nop
mov
sbb
pop
jb
adc
ror
icebp
mov
or
cmpsl
sbb
aad
ds
and
fadd
push
subb
push
jbe
fnstcw
push
mov
inc
subl
lods
gs
gs
pop
dec
int
sub
inc
cmpsb
js
gs
and
mov
jle
fbld
add
insb
mov
sbb
cltd
mov
xchg
les
mov
mov
aas
or
inc
jb
popf
outsb
ror
adc
pop
filds
roll
or
arpl
int
leave
mov
sbb
js
std
sub
stos
dec
push
fstpl
push
icebp
xchg
shrl
lcall
adc
jb
in
push
sahf
jns
push
int3
jge
pop
fs
lock
negb
sub
loop
xchg
mov
cltd
mov
nop
mov
xchg
and
sbb
cmp
xchg
xchg
cmp
push
jno
cmpsl
lods
and
jge
jge
pop
cmp
imul
mov
ja
or
dec
shr
je
std
mov
pop
fidivrl
insb
sub
and
mov
xor
xchg
mov
insb
pushf
inc
add
stos
jle
mov
jg
stos
mov
pusha
jmp
mov
ljmp
js
xchg
mov
push
insb
sbb
xchg
sbb
enter
nop
cltd
lods
ljmp
ds
mov
push
xchg
testb
sub
mov
shll
std
cld
enter
inc
mov
ret
sarb
insb
push
ret
dec
pop
or
stos
cmpsb
ret
pushf
add
jl
into
dec
jns
xchg
iret
in
push
rcl
pop
fwait
push
test
pop
das
shll
lock
cltd
and
aam
jbe
shrd
scas
or
icebp
and
xor
ljmp
add
scas
sahf
pushf
mov
sub
int
add
pop
fimull
ret
loope
lods
lahf
xor
fbld
or
leave
mov
roll
popa
mov
movsb
in
mov
stc
flds
imul
enter
and
scas
js
jbe
jmp
insl
rcll
outsl
mov
mov
sub
and
mov
test
jne
in
bound
or
mov
ljmp
das
pusha
les
ja
mov
mov
inc
addr16
and
mov
or
in
xchg
pop
mov
dec
shl
outsl
sbb
mov
mulb
mov
pop
pop
pop
xor
ret
xchg
or
push
inc
lahf
lahf
cmpb
jle
xor
repnz
xchg
sub
pop
pop
or
outsl
mov
lret
out
xlat
mov
mov
inc
jmp
icebp
push
sti
cmpl
daa
mov
inc
jno
pop
sbb
adc
fdivs
int3
mov
decl
adc
mov
lods
test
mov
mov
outsb
mov
sbb
shrb
test
mov
sub
or
xchg
outsl
adc
inc
add
xor
add
or
mov
or
popf
rcrb
xchg
negl
outsl
in
push
and
mov
cmp
mov
or
ds
sar
ret
aad
shlb
sti
mov
mov
shll
sti
push
jp
sub
mov
aad
cmp
stmxcsr
jnp
jo
cmp
pop
xchg
inc
adc
in
sbb
out
inc
dec
push
rclb
push
cmp
addr16
push
pop
cltd
icebp
imul
or
repz
jle
mov
dec
nop
xor
stos
push
mov
jae
add
fucomip
pop
cmpl
nop
jae
sahf
mov
pop
push
out
sti
nop
stc
mov
mov
push
xor
jge
in
xchg
mov
popf
add
lods
rcl
lea
outsl
pushw
inc
push
lea
cmp
mov
or
sub
clc
scas
mov
mov
sbb
insb
jl
dec
and
mul
insl
rorb
shrl
xor
neg
push
cli
or
pop
xchg
ja
cmp
ljmp
push
andl
pop
cmp
rcll
jp
rclb
lret
addr16
sub
test
scas
and
aam
inc
add
jns
push
pop
lock
nop
loope
mov
cmp
dec
push
idivb
cmp
insl
roll
scas
sbb
inc
add
adcb
fstpt
jmp
sub
lds
hlt
add
arpl
mov
test
pop
in
cmpsl
pop
mov
jecxz
out
hlt
sbb
sbb
fwait
pop
pop
repz
and
mov
and
ja
fcomi
loopne
scas
shrb
push
jmp
xorb
lods
jae
adc
cmpsb
jns
pop
xchg
push
icebp
mov
mov
les
mov
leave
sub
test
in
int3
and
lea
jae
mov
subb
add
mov
push
or
fistl
aam
mov
mov
ret
test
cmpsl
push
fmull
xlat
push
ret
lock
sbb
sub
cmpsb
fdivl
and
mov
mov
test
lea
mov
inc
mov
add
push
lret
fiadds
dec
jl
mov
mov
mov
xchg
scas
movsl
jmp
sbb
mov
push
jne
xor
rol
daa
sub
into
push
loopne
adc
stos
xchg
push
fnstcw
int3
test
enter
mov
divl
mov
icebp
add
jnp
jmp
loope
dec
aaa
rorl
subl
pop
sbb
cmp
test
mov
movsb
push
pushf
sbb
subl
jle
mov
add
or
out
push
jo
push
shll
fstl
sbb
cs
dec
je,pt
mov
adc
daa
add
in
es
movsb
sub
mov
shl
inc
pop
dec
not
and
cmc
ja
fnsave
cmp
arpl
push
shlb
inc
fscale
dec
xor
mov
shlb
push
rolb
jmp
xor
cmp
mov
cwtl
sub
dec
sbb
clc
aam
jbe
shrb
push
push
fs
sahf
jl
mov
xchg
mov
shl
sub
push
dec
sbb
mov
inc
fildl
fcomps
add
push
jg
lods
inc
adc
arpl
in
mov
insb
aam
sub
push
pop
add
mov
jp
xor
sub
sbb
xor
sarb
aas
js
mov
lds
mov
mov
mov
sbb
lock
aad
xlat
test
inc
dec
sbb
inc
dec
jle
adcb
lea
fisttps
ret
lret
inc
cmpsb
enter
clc
jbe
mov
js
clc
in
pop
and
xchg
add
add
sar
addr16
jmp
xchg
mov
adc
clc
xchg
loopne
xchg
dec
mov
xor
ja
mov
cld
inc
xchg
movsl
mov
stos
adc
and
dec
mov
cmpsb
inc
loope
popa
lods
push
jmp
outsl
adc
jne
data16
inc
push
sbb
jmp
push
mov
add
lahf
push
mov
xchg
mov
dec
pop
dec
jg
sahf
ret
xchg
mov
sbb
push
adc
inc
pop
mov
enter
sahf
cmp
cmp
sbb
decl
mov
stos
pop
xchg
mov
adc
aas
push
mov
mov
mov
sub
dec
outsl
fistpll
cld
xchg
movsb
mov
test
in
das
adc
xor
stos
sti
inc
adc
loopne
mov
mov
or
xor
add
clc
inc
imul
jp
data16
add
stos
dec
cmp
mov
mov
sbbl
sub
cltd
loop
sbbb
push
cli
lock
dec
hlt
or
push
jp
out
xchg
push
pop
call
pop
fwait
push
lds
jg
lahf
cmp
das
adc
into
stos
pushf
int3
xchg
into
lret
outsb
mov
jl
and
or
sub
sbbb
xor
rorb
push
push
popa
cld
aas
push
mov
mov
and
xor
add
lea
inc
xorl
test
push
inc
aas
in
mov
pusha
ss
rol
cmp
jb
mov
scas
mov
jg
stc
mov
int3
ds
jge
popf
cmpsb
mov
aam
dec
xor
decl
das
out
or
jne
fistpll
push
and
fisttpl
add
xor
sub
sub
arpl
testb
mov
int
lcall
call
push
arpl
jle
in
fcomip
and
in
dec
dec
xlat
arpl
xchg
pushf
dec
add
add
faddl
rcl
xor
xchg
cmp
sub
inc
inc
and
shll
pusha
pop
test
or
jo
fcompl
aaa
test
insb
mov
mov
in
mov
cmp
rolb
js
jo
mov
mov
mov
cmp
insl
push
leavew
lret
sbb
jb
sub
loopne
dec
fs
cmp
pop
push
pop
in
cmc
lahf
sub
sahf
adc
push
fcompl
es
xchg
fbld
inc
call
test
pop
aam
test
outsl
les
pop
iret
push
fcompl
nop
jae
adc
rorl
jg
les
mov
push
std
data16
ss
mov
test
rcll
shll
dec
movsl
sub
scas
xor
mov
inc
jb
leave
ret
add
nop
mov
jae
push
cmpsb
fldlg2
lahf
xchg
push
sbb
inc
dec
add
out
or
mov
mov
mov
xchg
jbe
es
mov
and
inc
pop
packsswb
cmp
mov
mov
inc
xor
shll
jns
popa
stos
hlt
pop
insl
in
sbb
insl
mov
push
jne
mov
inc
into
test
pop
in
cld
int
inc
or
push
imul
shlb
insl
xor
add
in
clc
jno
cwtl
shl
ds
add
nop
cmp
push
mov
jmp
sbb
sub
dec
dec
or
add
rcrb
lret
cld
xchg
dec
aas
inc
push
pop
sub
and
jne
lcall
adc
out
clc
inc
fists
orps
repnz
jne
test
loopne
cltd
push
bound
xchg
out
mov
iret
and
repnz
inc
xchg
mov
out
cmp
stos
jp
mov
or
out
insl
in
jge
sub
icebp
jg
inc
jne
fmul
pushf
sar
js
testl
aad
test
adc
arpl
faddl
jl
fnstcw
mov
orb
xor
add
popf
and
cmp
int
or
icebp
lods
clc
add
test
js
pusha
ljmp
lea
adc
adc
jge
fdivl
clc
xchg
sub
pop
js
jp
leave
pop
shr
cmp
mov
divl
iret
sub
xchg
sti
shr
sbb
into
mov
xchg
test
and
in
mov
push
lods
movsl
loopne
inc
pushf
mov
insl
ljmp
lods
pop
roll
pop
xor
mov
mov
push
xor
xor
fwait
pop
jmp
sub
into
push
pop
mov
and
and
lds
mov
xchg
jbe
xor
popa
pop
lret
mov
sbb
fsubs
pop
dec
and
sbb
clc
nop
insl
cs
jno
jge
pop
leave
jl
and
mov
jp
hlt
jp
mov
cs
outsb
fnop
inc
add
and
imul
cmp
jmp
mov
pop
xchg
xchg
sub
adc
lahf
jb
notl
push
in
enter
testl
jmp
hlt
jg
int
xchg
addr16
and
out
daa
dec
repnz
mov
dec
jge
insl
ret
and
cmp
cmp
js
inc
sub
fld
jle
mov
cld
sahf
packssdw
xor
push
mov
ret
imul
and
outsb
ficoml
cmpsl
frstor
popf
repz
inc
popf
test
in
aaa
fimuls
fs
daa
outsb
mov
out
ds
push
jmp
pop
or
loop
sbb
jge
hlt
pop
insl
adc
cmp
lahf
inc
adc
sbb
jns
repnz
daa
cmp
add
or
in
in
ljmp
imul
les
je
mov
andb
lods
movsl
sbb
add
mov
xchg
jns
mov
jge
adc
cmp
fwait
lods
stc
cmp
mov
inc
mov
jnp
inc
xchg
dec
xor
mov
je
xor
into
cmpsl
sbb
inc
xor
aaa
fmull
fdivr
or
aam
mov
lret
in
sub
pop
imul
pop
push
jns
dec
insl
fisubs
iret
sbb
jecxz
dec
inc
lret
sbb
cmc
inc
cli
pop
xor
inc
shlb
fstpt
pop
pop
sub
cmp
push
in
push
add
push
mov
arpl
insb
int3
nop
lret
sub
int3
leave
pop
mov
pop
push
xchg
cmp
shrl
pusha
mov
shll
adc
dec
pop
in
mov
lds
add
adc
imul
sub
stc
jbe
pop
aas
sbb
popa
cmp
das
xor
out
rcrl
cmp
sbb
cmpsb
mov
xchg
mov
pushf
shlb
mov
into
cld
stos
sarb
xchg
fwait
add
rorb
and
insl
push
loope
pop
ja
dec
repz
shl
test
clc
push
in
clc
add
shll
sahf
lret
pop
adc
mov
and
and
out
cmpsl
push
call
imul
add
xchg
pop
lds
aas
data16
out
mov
sbb
mov
mov
lods
jnp
lds
sub
leave
popa
into
cmp
test
pmullw
sub
xor
shrl
in
fists
ja
cltd
cmpsb
es
add
call
insb
dec
sub
dec
lahf
les
test
jmp
xchg
dec
sbb
pop
fs
shld
mov
popa
cmpsb
xor
push
mov
aaa
dec
inc
cli
push
fwait
ja
jb
js
mov
negl
ret
fcomi
fldl
mov
push
xchg
dec
cmp
int
fdivs
ror
mov
sbb
cmpsl
aam
and
inc
je
dec
pop
xchg
and
mov
movsl
movl
mov
movsl
in
outsb
or
inc
mov
fisttpll
sub
jecxz
int3
popf
sub
or
sub
bound
or
call
jno
or
and
sub
jle
inc
mov
int
jp
or
mov
loope
mov
decb
jle
int
repz
jp
mov
mov
lret
insb
xchg
mov
mov
inc
mov
mov
mov
std
push
mov
stc
push
fists
jmp
sar
mov
xor
and
jno
aas
in
stc
or
xchg
aas
insl
jns
push
jge
and
adc
movq
jno
push
mov
jno
das
icebp
loop
push
inc
cmp
pop
les
in
adc
std
jns
add
stos
sti
ret
cmpl
dec
mov
xor
mov
mov
shll
ja
dec
rcrb
inc
jp
inc
cmp
mov
addl
nop
insb
in
fs
mov
inc
jno
les
jnp
inc
dec
xchg
lods
pushf
sbb
stos
inc
testb
or
jbe
lahf
push
xor
out
gs
sarl
mov
or
ss
and
jnp
jns
loop
loope
xchg
rcl
jg
or
add
or
ljmp
sub
repz
mov
test
lahf
daa
add
mov
add
sub
mov
sub
fisubl
shlb
jp
mov
jl
mov
jnp
xchg
push
shrl
inc
out
stos
mov
fs
cmp
sub
sub
outsl
clc
jp
in
push
push
pop
cmp
mov
mov
pop
jle
or
xchg
fsubl
inc
sub
dec
add
add
fs
dec
push
xchg
gs
loop
push
repz
or
mov
and
inc
lcall
mov
popa
sti
pop
pop
dec
inc
icebp
test
add
adc
insb
mov
dec
out
sub
pop
cld
sub
in
testb
cmpsl
ds
adc
leave
jecxz
xchg
cmpsb
lret
push
xchg
mov
shlb
stos
xchg
pop
int3
pop
sbb
ret
sub
in
aas
sbb
mov
xchg
add
imul
sbb
lds
adc
push
cmp
jge
dec
ret
sbb
pop
cmc
insl
gs
stos
test
mov
lret
call
xor
not
les
cmp
mov
xchg
or
jp
jnp,pn
and
rorl
adc
pop
mov
sbbb
mov
pop
scas
movsb
add
sub
pop
pushf
jmp
insl
dec
sub
loopne
iret
imul
add
mov
data16
jns
in
dec
fucomp
and
outsl
es
cmp
scas
push
out
jp
lcall
out
pop
int
xor
push
out
add
addr16
rorb
fsubr
dec
xor
pushl
push
push
push
mov
sub
adc
adc
mov
dec
aad
mov
hlt
and
mov
sub
adc
xor
mov
daa
ret
in
addr16
and
lcall
ficomps
ret
and
movsl
sbb
out
mull
shll
lods
inc
in
ret
push
xchg
data16
dec
shll
pop
pushf
mov
add
mov
or
in
cmpsl
test
test
cli
mov
in
mov
inc
push
push
push
out
outsb
ja
mov
cmp
movsb
ss
aas
dec
out
movsb
or
inc
shl
aad
lds
pop
dec
std
mov
push
shl
fists
repz
aad
fidivrl
dec
std
and
mov
adcb
inc
xchg
pop
push
cmp
cmpsb
sub
inc
cli
mov
or
dec
inc
mov
inc
mov
popf
imulb
xorl
push
adc
jg
jg
cmp
call
aad
mov
inc
add
and
rol
push
mov
mov
adc
out
pop
popl
sbb
push
fcmovnbe
pop
fs
push
subl
push
mov
mov
mov
jge
jno
lock
inc
clc
movsb
insb
lret
mov
mov
sbb
and
push
push
test
sub
push
pop
xchg
in
inc
lds
rol
push
cwtl
loope
pop
sub
iretw
int
adc
mov
cmp
add
cltd
stos
data16
lret
out
jnp
adc
mov
dec
iret
loopne
aaa
dec
jecxz
shrd
lret
les
daa
aam
mov
add
mov
push
mov
fs
cmp
aas
adc
xchg
test
je
outsb
dec
dec
xchg
push
int
loopne
lret
sbb
cwtl
std
jae
insl
xlat
pushf
sub
pop
dec
sbb
sbb
aam
jne
es
sahf
enter
iret
jmp
lret
add
xchg
movsb
add
push
aas
dec
and
into
call
or
mov
ja
jae
jne
adc
into
mov
pop
aas
fstl
add
cmp
aad
mov
dec
lcall
mov
data16
inc
xchg
and
add
jb
xchg
xor
xor
push
dec
push
scas
sbb
fisttps
test
into
out
jns
stc
cwtl
sbb
mov
lahf
or
aas
cmp
movl
mov
jnp
pop
insb
sub
das
fs
mov
dec
sub
les
mov
dec
addr16
jmp
out
cmp
xchg
repnz
xchg
loope
fisubl
dec
scas
data16
cld
out
mov
push
lcall
fimuls
add
mov
leave
jle
repnz
and
clc
es
cmp
hlt
cmp
ljmp
shlb
outsb
scas
push
inc
cmp
ror
js
cmp
sub
adcb
push
scas
mov
push
inc
push
sbb
xchg
cmpsl
xor
in
std
out
aam
lcall
sbb
nop
push
jmp
push
in
hlt
jmp
fidivl
ss
inc
sub
imul
sub
cmp
loope
stc
cltd
push
popa
xor
mov
movsl
sbb
ss
iret
mov
jo
jge
cli
data16
adcb
lock
sbb
or
fs
add
sarb
je
xchg
mov
rol
pushf
in
add
orb
mov
pop
pop
sub
je
sbb
call
or
mov
push
fwait
xchg
push
out
push
or
cmp
push
mov
dec
scas
ljmp
in
push
dec
in
mov
dec
add
js
sbb
test
xor
and
xchg
ret
jg
sub
mov
lds
cmp
rorl
cmp
jp
jns
sbb
scas
or
orb
sbb
pop
insl
out
test
jmp
mov
insb
push
push
int3
adcb
cmpsl
fmul
lods
and
cli
pushf
imul
dec
cmc
sti
jmp
mov
daa
movsl
sub
jo
jle
mov
faddl
adc
inc
dec
icebp
mov
mov
mov
das
mov
je
adc
or
cmpsl
sub
fld
dec
lock
dec
xlat
cmp
jl
shlb
mov
in
shll
daa
xlat
enter
xchg
sarb
or
push
cmpl
shr
xor
sbb
adc
inc
jmp
out
push
test
jmp
xchg
push
cmovo
push
les
pushf
pop
clc
pop
movsl
hlt
cmp
pop
xor
sahf
rcll
jo
scas
mov
jmp
pop
inc
mov
pop
insb
push
aaa
mov
lret
jb
cmc
mov
les
pusha
mov
jne
jns
or
jge
dec
lods
das
inc
aad
and
push
xchg
sbb
clc
negl
hlt
or
loope
xor
aam
dec
inc
aas
add
inc
bound
call
mov
nop
sub
jne
daa
inc
and
pop
sahf
pop
mov
ret
adc
es
repz
shll
inc
jne
jo
stos
jp
fists
ficompl
inc
mov
fsubr
bnd
out
push
icebp
popl
addr16
xchg
lods
ja
lahf
les
ror
insl
pop
test
mov
adc
sbb
dec
cwtl
lahf
cwtl
ljmp
jl
cltd
xchg
mov
lds
pop
push
jnp
mov
je
popa
int
ja
mov
ficoms
add
mov
push
lahf
inc
enter
cmp
and
inc
or
push
ss
jo
pop
out
subb
test
pop
adc
adc
adc
icebp
es
mov
nop
pop
outsb
idivl
xchg
or
add
mov
pop
gs
shlb
aas
cltd
adc
jp
or
mov
clc
fadds
lcall
addr16
lods
or
test
out
sbb
push
lret
scas
add
sbb
pop
out
dec
xor
push
shrl
inc
push
addr16
imul
cmp
idivl
dec
roll
decl
in
xor
insb
repnz
fisttpl
rcr
sub
jle
push
mov
inc
notl
mov
sbb
pop
out
or
cmp
clc
pop
js
bound
xor
fists
fwait
jno
fisubrs
xor
dec
or
push
xchg
pop
cltd
jg
ret
sbb
add
xor
cmp
pop
mov
or
adc
inc
lret
push
pop
aas
jae
aam
fmuls
push
mov
sbb
movhps
sub
mov
jmp
test
sbb
fidivrs
ret
push
pop
movsl
adcl
push
dec
fwait
jbe
xor
xchg
cmp
popf
lds
sti
outsl
movsb
xor
movsl
js
sub
addb
mov
inc
push
loope
push
lahf
inc
mov
sub
movsl
pop
lret
add
out
out
xchg
push
push
rol
filds
xlat
add
adc
sbb
loop
push
out
or
jbe
push
nop
in
or
jns
sbb
sbb
push
je
pop
xchg
adc
inc
mov
push
or
aas
xchg
jns
push
popa
pop
sbb
jg
imul
clc
push
je
fdivl
mov
mov
sub
sub
mov
gs
dec
out
fdivrs
fwait
pop
loop
out
cmc
add
mov
mov
xchg
lret
test
loop
fldl
addr16
imul
push
fst
jle
pusha
jb
push
or
and
pop
jne
clc
out
cmc
push
add
adc
sub
fdivs
loop
enter
xchg
faddl
andb
push
lcall
repnz
fstps
add
stos
iret
in
sahf
sub
sbb
enter
push
adc
icebp
mov
orb
test
pop
mov
pop
xchg
xchg
pop
mov
pop
nop
out
jae
fwait
shll
pop
jge
sbb
push
sub
lret
or
pop
and
loopne
inc
inc
cmp
and
in
mov
inc
std
cltd
addr16
pusha
fcom
sbb
js
ud1
dec
repnz
cltd
push
gs
pop
cmpsb
lds
lret
mov
dec
hlt
push
jae
jmp
push
mov
es
std
dec
inc
sti
mov
mov
test
cmp
das
arpl
dec
push
or
inc
mov
data16
loopne
mov
dec
stos
xor
in
lcall
mov
imul
or
fdiv
adcb
jp
adc
cltd
pop
nop
notb
not
xchg
ja
sti
xchg
lahf
inc
sbb
cwtl
inc
mov
enter
icebp
mov
pop
cmp
push
mov
push
rcrb
or
adc
dec
andb
loopne
test
and
les
test
jae
jl
xchg
bound
lock
xor
jbe
push
pop
mov
icebp
jns
arpl
cs
xor
mov
bound
les
xlat
xor
scas
mov
or
xchg
sub
jp
mov
mov
mov
xchg
mov
ljmp
pop
push
lret
mov
fadds
das
mov
jl
mov
xchg
hlt
xchg
xor
cwtl
bound
aas
movb
mov
testl
add
out
add
push
add
pop
and
inc
xor
enter
int3
or
arpl
je
repz
and
dec
jno
cmp
hlt
addb
sbb
std
jmp
addr16
sub
fwait
pop
lds
or
roll
cmpsb
test
lcall
popa
fidivrs
leave
lret
xlat
dec
push
sbb
int3
pop
xor
push
lahf
pop
test
mov
cwtl
scas
inc
xchg
and
je
mov
es
pop
xor
push
iret
mov
int
xchg
push
bound
push
inc
cmp
repz
rorl
fists
mov
aas
test
iret
cmp
add
imulb
cmp
sbb
test
push
aas
les
out
lret
dec
je
divb
clc
pop
jmp
aad
mov
mov
add
or
notl
inc
mov
fildl
mov
popa
sub
sarl
clc
mulb
mov
test
sub
ljmp
jo
test
movsl
outsl
test
stos
xor
or
push
push
inc
dec
iret
popf
inc
and
or
adcw
jb
test
mov
mov
mov
push
imul
pop
dec
int
insl
push
cli
xlat
push
imul
sbb
sbb
cwtl
jmp
pop
daa
pop
push
push
arpl
daa
pop
inc
les
cmp
or
and
sbb
sub
imull
pop
mov
cmp
rcrb
lods
push
xchg
or
imul
push
lcall
imul
pusha
adc
out
dec
mov
das
mov
lods
push
test
popa
js
adc
loope
fwait
clc
ret
sbb
nop
outsl
int
lret
sbb
out
testl
inc
xchg
mov
aaa
push
cli
push
jmp
ret
cmp
mov
add
push
dec
cmp
fildl
sub
enter
ljmp
jl
mov
dec
test
fnstenv
mov
test
push
pop
add
inc
xor
repnz
fwait
popf
lret
xor
sbb
jmp
mov
scas
gs
mov
mov
xor
lcall
setle
mov
je
lock
fs
mov
or
scas
jne
je
jb
jnp
push
enter
stos
xchg
mov
dec
cmpsb
jmp
mov
jae
fbstp
pop
popa
xchg
jbe
pop
mov
mov
fildl
lahf
mov
add
pop
mov
dec
dec
or
repnz
into
push
jp
inc
imul
rcrl
mov
dec
je
or
push
mov
call
jmp
aad
imul
inc
or
int
lahf
xor
les
adc
popa
lods
mov
sbb
mov
pop
ds
mov
xchg
inc
ljmp
dec
orl
sbb
out
jns
or
rcrl
faddl
scas
fsubr
popa
aas
or
sqrtps
loopne
jns
aas
enter
cmp
fists
push
dec
outsl
out
rolb
hlt
into
add
xchg
into
jb
divl
vpslld
stos
cmp
adc
lods
or
in
fsts
lret
imul
dec
outsb
aam
ss
pop
fnstcw
pop
sub
fisubrs
dec
sub
cltd
js
xor
add
add
lock
loop
sub
pop
lock
movsb
xor
and
in
iret
cmp
mov
pop
test
xor
push
jno
cmc
and
xor
repnz
gs
mov
ja
adc
mov
xchg
test
fisubs
rorb
stc
fildl
mov
dec
sub
add
xor
mov
xchg
sub
xchg
mov
dec
in
cmp
and
addr16
outsb
add
cwtl
outsb
push
push
popa
inc
dec
adc
adc
jl
ljmp
sub
or
test
jmp
leave
repnz
mov
rorl
imul
inc
pop
ret
inc
andb
push
cmpsb
jno
mov
int3
adc
xchg
ret
fcoms
lea
ret
add
inc
jmp
jg
addb
mov
jle
jle
xor
jbe
jbe
lahf
test
push
mov
arpl
cmp
std
mov
mov
and
rorl
or
data16
dec
testb
sarl
daa
cli
cs
sub
daa
in
cmp
into
fstl
jbe
push
lea
add
dec
dec
xor
jg
cwtl
sub
push
and
lds
pop
inc
dec
in
add
sub
test
sbb
test
out
mov
sub
mov
cwtl
test
pusha
add
int3
pop
inc
test
adc
int
sti
dec
fistps
mov
fldenv
dec
add
cltd
mov
das
mov
aad
jmp
ljmp
rcrb
jge
cmp
js
cmp
cltd
pop
mov
xchg
adc
adc
insl
lret
inc
push
scas
popf
movsb
in
leave
lcall
fdivrl
cmp
test
test
imull
test
sbb
push
dec
sub
lods
nop
aaa
inc
cltd
lds
out
out
pop
xchg
adc
add
movsl
add
sub
or
mov
xchg
cmc
add
icebp
int3
pop
xor
rorb
ja
xchg
rcr
fmul
mov
orb
mov
jae
push
xlat
xchg
add
stos
outsb
je
movsl
push
test
gs
cmp
in
jl
sbb
cmpsl
cmp
idivl
mov
std
movsb
xchg
arpl
cli
add
addr16
cld
inc
fsubrs
popa
add
inc
loopne
das
movb
jae
pop
push
addl
push
adc
dec
mov
xchg
inc
jns
jmp
loopne
adc
push
xchg
loope
das
repnz
xchg
xchg
inc
out
notb
mov
jo
loop
pop
les
fstpl
shrb
sub
inc
and
into
call
popl
sbb
xchg
lods
push
sbb
leave
fcompl
jne
xchg
mov
fcmovnbe
sub
add
push
insb
scas
imul
call
pop
aas
nop
popf
and
and
jg
imul
or
test
cmpsl
addr16
jg
dec
out
in
mov
add
dec
std
inc
movsb
jmp
add
js
in
loope
insl
dec
stc
les
insb
jp
fisttpl
out
push
int3
ds
dec
dec
and
cmp
xorb
out
ljmp
and
jecxz
fsubl
dec
dec
into
lcall
ja
icebp
popf
ja
arpl
loop
es
add
mov
arpl
popa
in
mov
xor
adc
xchg
adc
rorl
mov
clc
mov
add
push
ret
push
fsubrp
roll
mov
mov
mov
mov
push
mov
sub
mov
pop
test
nop
nop
mov
pop
sbb
dec
or
in
aaa
into
cmp
fs
mov
jecxz
jg
leave
and
mov
cli
rcll
cmpsb
jb
and
jae
jecxz
repz
or
notb
cld
test
jb
sbbl
aam
and
stc
pop
sub
fucompp
mov
ss
call
pop
aas
aad
fs
inc
jnp
jno
lds
jle
inc
xchg
ja
lock
xor
cld
pop
mov
es
gs
inc
lcall
testl
fists
xchg
or
arpl
inc
or
in
cmp
dec
or
cmp
pop
mov
aas
xor
aad
fistpl
fisttpll
fcmove
mov
sub
mov
daa
pop
pop
cmpsb
adcl
inc
push
icebp
dec
jns
in
or
pop
jle
pop
mov
divl
fs
daa
lods
ss
or
cltd
mull
add
fnstcw
mov
cltd
pushf
add
adc
mov
jb
incb
ja
inc
fstl
add
leave
xchg
enter
cmpsb
test
fs
inc
inc
and
stos
cmp
xchg
lock
das
jo
cltd
rcrl
loopne,pt
inc
and
jbe
mov
adc
adc
inc
fxch
lods
dec
lock
out
shll
icebp
cld
push
repnz
adc
sbb
rorl
pushf
inc
add
movsb
or
push
cmc
lahf
mov
cwtl
movsl
sub
dec
insb
les
std
lock
lods
pop
out
or
je
adc
ljmp
cld
dec
cmp
bound
mov
in
hlt
scas
or
stos
mov
add
repnz
xchg
loope
jge
and
loopne
mov
pop
hlt
lcall
ja
add
mov
fstps
xor
loopne
and
add
outsb
mov
cmpsb
cmp
push
decb
pop
mov
fldcw
mov
punpckhwd
popf
mov
insl
cmpsl
push
sti
std
sub
inc
lds
test
rcrl
js
inc
into
fimuls
lock
cmp
fsubl
mov
mov
arpl
sub
xor
ret
sbb
popa
or
xchg
mov
xchg
push
insb
adc
mov
pusha
jg
mov
dec
dec
lret
push
jbe
sbb
adc
out
dec
imul
cmp
ror
mov
sbbb
popa
jb
iret
xchg
data16
and
rorb
fimull
outsl
sbb
test
xor
jl
loop
shll
cmp
dec
loope
jg
rorb
xchg
dec
push
arpl
dec
mov
xor
lea
fildl
pop
mov
mov
cmp
xchg
push
scas
imul
mov
jb
xor
loope
aad
insb
and
jp
popa
mov
mov
hlt
fimuls
dec
pop
je
xor
movsb
out
sarl
mov
ret
mov
imul
or
jl
hlt
out
lret
addr16
stc
out
push
cmp
push
daa
sahf
inc
inc
sti
push
jo
xchg
jp
sub
insb
push
push
daa
insb
jge
mov
push
pop
jl
push
fstpl
xchg
hlt
sbb
fsub
es
testb
dec
xchg
push
mov
cld
aad
mov
push
xlat
call
add
xor
insb
push
or
inc
sarl
test
xchg
jne
sbb
pop
vandps
les
push
mov
imul
mov
lock
out
fwait
xchg
in
in
jg
rcr
cs
iret
mov
mov
push
arpl
dec
cmp
mov
ret
fadd
fisubrl
push
dec
mov
mov
lcall
int3
inc
xchg
xor
popf
adc
mov
leave
and
jo
hlt
movsb
and
mov
imul
les
repz
mov
lods
bound
jb
pop
xchg
cmp
add
cmp
dec
or
and
mov
push
lret
add
push
mov
or
pop
jnp
push
mov
push
hlt
mov
lcall
pop
lret
mov
scas
or
inc
les
into
popf
bound
add
and
sysret
jecxz
aas
jae
xor
hlt
mov
push
mov
sub
sar
and
jnp
mov
xchg
cmp
mov
out
ds
add
std
cmp
add
jnp
lcall
imul
mov
or
dec
lahf
repz
out
sarb
das
mov
dec
adc
sbb
mov
ror
jle
shlb
pushf
out
mov
icebp
jp
sarl
loop
lret
push
fistpl
inc
lret
incb
mov
je
aam
enter
stos
rorb
movsl
cld
int
inc
out
lret
outsl
dec
movsb
mov
jnp
and
sti
pop
mov
movsl
cli
es
mov
mov
adc
mov
aas
test
adcb
pushf
cwtl
cmp
rorl
xor
mov
sub
lcall
sbb
push
xchg
sub
mov
xchg
fdivr
aam
and
lds
fstpt
dec
lcall
jo
cmp
cmpsb
mov
ret
mov
jno
out
jecxz
cltd
dec
faddl
loope
cmp
jnp
shufps
rcr
push
push
lods
xor
nop
les
daa
sahf
push
stc
cmpsb
jl
icebp
push
in
fnstsw
mov
mov
pop
adc
ljmp
jle
push
xchg
inc
sub
orl
or
in
mov
pop
or
ja
jmp
xchg
insb
push
add
stos
xor
lret
test
mov
sbb
jp
add
mov
pop
out
mov
test
pop
add
xchg
popa
dec
xor
call
cmc
mov
pushf
test
push
lea
and
cmp
mov
fistpl
or
jp
imul
jp
cld
sbb
mov
dec
and
mov
stc
sbb
add
bound
sahf
mov
fnstsw
cmp
mov
bound
aas
stos
push
pop
ror
xchg
or
ljmp
jp
mov
sahf
mov
jl
jo
jb
lcall
xchg
movsb
int
pop
mov
decl
fsts
decb
shll
insl
dec
add
push
into
sub
mov
pop
pop
repz
dec
xchg
test
out
and
iret
xchg
pusha
ss
pushf
inc
mov
sbb
jne
mov
xor
sub
mov
dec
leave
xchg
mov
mov
dec
pop
adc
pop
dec
ljmp
repz
xchg
inc
ja
add
xor
jmp
mov
pop
mov
cltd
mull
lret
xchg
xor
fadd
ds
pusha
mov
lods
dec
jl
xorl
sub
jb
pop
jo
add
insl
fdivl
xchg
adc
mov
xchg
mov
jg
loope
cmp
pop
and
pushf
push
hlt
add
gs
xor
xchg
pop
stos
popa
sbb
ret
or
or
cmp
and
push
dec
add
addl
mov
cmp
cmc
add
pop
cmp
adc
mov
cmp
inc
xchg
les
cmc
cmp
jne
xor
repz
inc
lds
nop
add
sbb
fmul
dec
lods
jbe
push
dec
inc
lcall
sub
enter
das
lds
pop
fbld
adc
movsb
jae
int3
repz
cwtl
dec
in
jo
icebp
repnz
or
in
sbb
out
mov
scas
rcrl
loop
xor
push
dec
lock
mov
sbb
fdiv
or
and
jmp
popa
vorps
dec
scas
sbb
int3
pop
mov
enter
xchg
jge
lcall
sbb
scas
add
sub
in
cld
popa
jo
inc
stc
pop
bound
inc
mov
sub
mov
or
fiadds
push
arpl
enter
xchg
cld
inc
xor
out
mov
repnz
dec
fnsave
xchg
push
xchg
xor
jmp
jo
repz
sbb
aad
aad
addl
push
cwtl
adc
leave
repnz
jmp
jmp
je
outsl
push
std
add
mov
pushf
xor
push
iret
or
xchg
xchg
notb
dec
cmp
popl
fildll
scas
adc
fnstsw
nop
out
jmp
pop
icebp
cltd
sub
pop
mov
sub
addl
fiaddl
pop
lds
cmp
mov
scas
les
popf
ss
iret
jns
and
and
sti
dec
fstl
pop
or
pushf
icebp
sub
xchg
jo
rorl
push
popf
xor
in
in
sub
test
ja
inc
cmpsl
call
out
call
ret
sbb
out
mov
in
jge
fwait
push
sub
lret
xchg
loopne
and
xor
lods
iret
jnp
mov
jo
cmp
in
repnz
insb
mov
pop
lcall
repz
push
or
je
cld
cmp
and
mov
xchg
shrd
fwait
sub
push
shll
movsl
stc
xor
jl
add
rcll
mov
push
pop
ja
mov
fnsave
inc
test
cmp
adc
int3
add
xor
dec
push
mov
mov
pushl
mov
mov
movsl
lret
pop
into
push
test
jle
call
mov
or
cmp
push
pop
cmp
loope
insl
test
push
add
lret
add
mov
aas
int3
add
fistpll
xlat
mov
aas
push
repnz
pop
stos
rcll
andb
sbb
fcmove
sub
push
in
ljmp
and
pop
imul
iret
push
pop
add
add
fsubp
nop
or
jno
add
and
jo
and
cmp
ja
std
dec
push
dec
andb
and
pop
nop
xchg
int3
add
repz
lea
dec
test
xchg
sbb
aas
icebp
out
mov
cmp
pop
cmpsb
xchg
test
ds
sbb
mov
mov
cmpsl
mov
ds
frstor
lods
push
sub
bound
push
push
sahf
stos
ss
in
mov
outsb
cli
add
xchg
notl
push
loopne
jo
int
gs
in
shrd
cli
xchg
lret
out
xor
hlt
cmpsl
test
shll
lcall
enter
dec
dec
lods
cmp
mov
inc
imul
mov
out
cli
and
inc
mov
ja
mov
mov
dec
mov
fimull
mov
jmp
into
and
add
cwtl
jae
pop
jecxz
jnp
or
sbb
push
xchg
decb
pop
and
mov
and
out
sub
push
ss
inc
jno
inc
enter
or
or
js
ljmp
movb
stos
adc
cld
das
inc
mov
jge
mov
inc
mov
pusha
dec
roll
xchg
movb
lods
in
xchg
adc
les
sarl
and
dec
and
repz
jbe
push
adcb
xor
fcomip
bound
jge
imul
pop
pop
sbb
or
pop
jg
cld
pop
mov
mov
test
mov
les
cli
addr16
movsb
insl
jns
xchg
cmp
fmul
pop
dec
pop
popf
call
loope
out
out
sbb
jno
aas
push
loop
rcrl
int3
inc
sarl
add
xchg
adc
push
js
faddl
jl
xchg
fisttps
mov
int
ja
sub
rorb
adc
sti
stos
sbb
lcall
movsl
cmp
outsb
movsb
or
pushf
sbb
in
sbb
movsb
inc
jae
mov
out
into
rcll
and
cli
lahf
mov
loop
jns
in
aam
and
push
shlb
mov
or
jg
addr16
in
lock
or
pop
rcl
jb
gs
cmp
std
push
xchg
pop
pop
or
sti
jmp
inc
mov
cltd
inc
dec
imul
push
outsb
or
pop
add
mov
inc
gs
fstpt
jp
sbb
mov
loope
cld
call
icebp
sbb
in
loop
mov
adc
jle
mov
cmp
sbb
cs
inc
dec
cld
dec
mov
sbb
mov
pusha
and
xchg
xor
push
fwait
sub
jbe
cmp
mov
addb
incb
push
fisubl
fldt
insl
jbe
pop
xlat
fistps
lea
push
cmp
mov
mov
cmc
lods
iret
stos
push
and
mov
jmp
cmpb
jno
jecxz
inc
or
xchg
pushf
cmp
or
call
and
jb
es
jne
shll
fcmovb
pop
dec
leave
mov
push
pop
add
jno
outsb
out
mov
push
lret
adc
out
call
cltd
adc
mov
mov
in
ret
lods
icebp
pushf
in
xchg
sbb
pop
cmp
pop
xchg
mov
popf
sub
add
xchg
cmpsb
push
mov
and
jp
leave
in
popa
adc
testl
sbbb
aas
decb
xchg
adc
and
leave
addr16
pop
dec
lahf
cmp
mov
xor
call
fwait
mov
stc
jo
mov
push
jno
enter
xchg
cmp
push
sub
ja
out
mov
negb
outsl
or
xor
mov
popa
imul
add
adc
pop
jmp
lods
jle
push
sub
xchg
mov
pop
add
cmp
ss
jp
jbe
xlat
xchg
push
addr16
sbb
mov
lds
loopne
bound
int3
xor
dec
pop
inc
repnz
sub
dec
sbb
ss
rcrl
loop
push
pop
push
dec
pop
mov
xchg
xor
inc
in
jo
lcall
dec
stos
in
movsl
movsb
cmp
lret
dec
pop
inc
ss
lock
mov
rcrl
dec
repnz
or
adc
adc
push
add
adcb
loope
test
cs
and
or
insb
incl
mov
xchg
sub
and
fwait
lods
repnz
pop
mov
jp
push
xor
and
mov
inc
dec
insb
repnz
stc
jge
fbld
repz
into
push
repnz
mov
sub
fidivl
sti
or
push
push
aaa
idiv
pop
cmp
aam
into
push
adc
cld
sbb
sbb
add
and
outsb
jmp
cs
mov
aaa
daa
cmp
rcl
jns
push
es
lods
adc
loope
xchg
std
inc
inc
and
xor
shlb
fdivr
push
xor
fs
enter
mov
push
outsb
jo
mov
dec
xor
subb
jmp
sub
sbb
gs
call
aas
xor
inc
fwait
pop
xchg
push
or
test
fildll
sti
mov
adc
and
sbb
inc
sbb
orl
stc
sbb
mov
and
mov
sub
test
dec
mov
mov
sti
push
pop
xor
jecxz
aad
cwtl
mov
inc
adc
and
mov
adc
test
xchg
sahf
adc
fisttpl
mov
xchg
and
lods
mov
movsb
cmp
push
shrl
mov
rcr
jp
or
dec
inc
fsubr
dec
cmc
aaa
xchg
cmpsb
inc
paddb
lcall
popf
leave
lahf
or
stc
fwait
mov
cmp
inc
in
movsl
pop
adc
les
or
mov
arpl
sub
jo
or
call
jecxz
sub
inc
inc
sub
push
repz
and
dec
cmp
cmp
fnstcw
out
ss
aad
jo
jae
fisttpll
push
lods
add
loope
mov
icebp
cmp
xor
addr16
sub
cmp
sub
cmpsb
ljmp
inc
outsb
cmp
movsl
sbbb
out
dec
bound
enter
mov
and
mov
mov
push
clc
mov
out
aad
adc
and
push
cltd
and
mov
aam
jne
pop
outsl
adc
fldl
mov
push
leave
in
push
lock
test
adc
mov
mov
or
int
fwait
cmpsb
push
ja,pn
insl
je
cmp
inc
and
aas
lock
mov
shlb
fisttpll
xor
or
sub
fsubrs
je
out
das
mov
push
mov
adcl
cmpsl
cmc
or
in
xchg
add
daa
or
cwtl
jbe
in
cmpsl
mov
adcl
xor
nop
scas
xor
sbb
lods
mov
iret
push
stos
ds
mov
rol
cmp
iret
pusha
rorl
adcb
adc
shrb
or
lcall
add
mov
fbld
and
hlt
xchg
jp
mov
out
leave
call
adc
jbe
out
mov
mov
loop
movsl
fs
lock
enter
int3
sub
pushf
push
imul
sbb
adc
cmc
ret
jmp
in
mov
add
sub
xchg
int3
test
dec
js
es
sahf
addl
loopne
loopne
xchg
inc
pusha
pop
inc
mov
mov
in
mov
push
pop
adc
or
inc
ja
call
imul
pop
into
mov
aas
sub
and
cmpsl
inc
fisubrl
cld
rsm
and
gs
inc
rorl
dec
lret
push
push
add
sbb
sub
ds
insb
mov
loop
dec
push
fstpl
aad
dec
dec
insb
imul
aad
mov
es
sti
rcrb
mov
fwait
dec
in
mov
lea
std
repz
stc
ja
int3
js
roll
xchg
inc
scas
or
jle
daa
jl
mov
push
cmpsl
cmc
dec
idivb
rcrl
lcall
sub
xor
xchg
or
icebp
cmpb
push
sahf
xchg
jge
xchg
mov
push
or
cmp
dec
mov
in
and
cmovl
jae
mov
xchg
pop
sbb
xchg
push
and
and
jo
lret
add
jne
mov
daa
arpl
jecxz
hlt
cmp
loope
and
inc
stc
enter
pop
out
aam
and
enter
es
jecxz
push
mov
inc
fstps
jge
xlat
jmp
xchg
jnp
lods
and
mov
jg
out
add
inc
inc
pushf
xchg
mov
scas
adc
mov
cmp
sub
jle
dec
ret
cli
cmpsb
imul
mov
fadds
fnstenv
fldcw
ljmp
jb
mov
lea
cmp
jmp
loop
mov
dec
add
out
fidivl
stos
mulb
rolb
mov
and
out
dec
jmp
jne
loop
sub
pop
adc
mov
or
repz
sbb
and
insl
stc
adc
add
adc
inc
aas
mov
ja
pop
repnz
sahf
xor
fs
into
fwait
inc
xchg
sbb
inc
inc
and
cwtl
jmp
push
cmp
addr16
mov
mov
lods
shrb
xlat
pop
sarl
in
inc
jle
cmpsl
or
cmp
cmc
shlb
jle
enter
fcoms
sbb
testb
push
mov
mov
mov
inc
test
cmp
mov
and
rcl
in
xlat
push
xchg
inc
clc
mov
push
push
loope
sub
sub
add
sarb
imul
icebp
push
rcl
andl
rep
loopne
inc
pop
leave
lds
pop
clc
adc
or
adc
addr16
scas
daa
std
out
pop
adc
cmp
cmp
xchg
dec
roll
popa
push
mov
idiv
or
dec
and
bound
xchg
mov
cli
xor
mov
dec
dec
mov
in
pop
mov
adcb
sbb
outsl
inc
pop
das
and
sub
jne
sbb
and
or
sahf
stos
popa
mov
clc
pop
or
out
xor
pop
fistps
cwtl
shl
mov
shll
or
push
inc
test
movsl
imul
rcl
xlat
imull
jecxz
popf
cld
stc
lea
loopne
add
sbb
mov
stos
adc
mov
mov
ja
or
jp
popf
enter
fimuls
mov
lods
xor
push
fisubl
repnz
insb
lret
or
inc
in
mov
roll
icebp
jno
mov
mov
or
popa
sbb
mov
stos
std
adc
cmpl
int3
in
ficomps
fldenv
jle
lcall
xor
dec
scas
sub
fdivrl
setle
lret
outsl
hlt
pop
aad
lahf
fadd
push
xrelease
out
sbb
sahf
or
adc
lret
popf
fwait
push
xchg
popa
mov
jnp
popa
sub
sub
loope
sub
rcl
call
xor
push
bound
jmp
pop
mov
sub
repnz
in
imul
ret
and
inc
adc
cmp
pop
xor
pop
stc
dec
sub
stc
mov
rcr
out
mov
fistl
mov
xchg
push
lock
mov
js
inc
push
das
mov
out
or
pop
fst
imul
mov
cmc
imul
loop
jp
ds
dec
ljmp
and
and
and
inc
out
mov
movsb
xchg
inc
lret
enter
jl
out
jno
daa
out
and
mov
mov
mov
add
pop
push
cld
xchg
rcrb
or
lock
adc
mov
jle
aaa
pushf
ret
sub
mov
call
push
sarl
push
mov
adc
mov
and
movsb
sbb
cmp
xchg
in
ret
orb
repz
clts
inc
push
pushf
fwait
mov
cs
add
dec
test
dec
add
std
fcomp
fwait
outsb
xchg
mov
rcrb
adc
inc
push
xchg
stc
mov
lret
int3
and
test
fucomip
out
add
or
ret
xchg
cld
xchg
repz
add
fwait
jge
ret
daa
sub
loopne
xchg
xor
pop
cmp
fwait
je
jmp
lock
dec
dec
sahf
and
sar
push
movsb
mov
sbb
mov
mov
mov
jno
and
mul
outsb
push
cmpsb
dec
pop
fadds
rcrl
push
xchg
fs
test
fwait
xor
ja
inc
into
xchg
pushf
scas
mov
mov
and
push
shll
sub
add
mov
lods
sbb
jo
es
shrb
rcrl
pop
or
mov
or
aam
and
shll
lret
jmp
hlt
xorb
push
sub
xchg
dec
clc
jp
insb
jecxz
and
dec
dec
jge
rorl
push
or
andl
pop
out
sbb
sbb
inc
lods
fstpl
mov
je
or
aad
sub
push
std
lods
and
out
outsb
inc
outsl
dec
or
hlt
inc
arpl
cmp
movsl
xorl
decl
sub
gs
jge,pt
pop
pop
xor
stos
lods
fidivl
movsl
xchg
cmp
dec
adc
add
lret
jmp
mov
nop
jns
dec
cs
adc
les
jmp
mov
add
jb
dec
popf
subl
test
es
push
fadds
xchg
and
jb
xchg
cltd
lret
pop
iret
push
pop
fwait
cwtl
fnstenv
mov
push
cmp
shll
popa
lods
dec
fcmovb
mov
cmp
and
xlat
push
xchg
mov
jb
jnp
fsubl
and
mov
mov
sub
shl
arpl
pop
add
mov
sub
pushf
test
pop
mov
sahf
or
sub
aam
fidivrl
jo
test
push
inc
sahf
and
faddl
sbb
jns
sub
mov
cmp
out
int
mov
fsts
sbb
lcall
adc
push
cmp
daa
push
arpl
inc
int
lretw
push
shrb
insb
jne
xchg
jns
in
pop
loopne
je
iret
ja
push
cmp
jae
mov
jno
clc
jo
jmp
cs
mov
pop
mov
xchg
cli
pushf
mov
xor
jbe
lods
or
mov
dec
jl
popl
ret
mov
iret
xchg
adc
lods
sbb
rclb
mov
dec
xor
sbb
in
dec
mov
jmp
push
lods
in
leave
xor
xor
pop
dec
movsl
clc
xlat
dec
cmp
sbb
cmp
jmp
mov
cmp
sti
in
push
sbb
mov
xchg
jbe
pop
mov
and
jo
or
fisubs
iret
popf
add
movsb
rorb
xchg
push
mov
sub
or
int
and
or
pusha
or
iret
movsb
sti
cmp
sub
in
lods
orl
lock
popf
sbb
lret
adc
mov
jb
icebp
jb
jae
sahf
out
insb
cmp
mov
inc
negl
les
mov
mov
push
mov
jnp
out
and
jno
pop
inc
insl
in
add
and
testl
xchg
xchg
inc
testl
in
add
stos
mov
scas
and
cmpsl
sub
sub
cmp
inc
pop
test
xchg
flds
inc
iret
cld
sahf
jbe
pop
xor
ret
subb
loopne
jmp
outsl
add
sub
or
xor
pop
mov
xchg
dec
orl
ret
xor
jp
call
push
adc
sbbb
insl
xchg
jmp
mov
lds
push
jbe
push
pop
in
cmpb
mov
mov
pop
mov
cmp
mov
push
pop
scas
jno
test
push
ljmp
fxch
daa
lock
xor
jno
jb
int
jb
stos
ficomps
mov
jns
sbb
je
inc
and
cmpsl
mov
daa
bound
sbb
in
mov
cltd
xor
stos
lods
mov
or
sbb
outsb
add
out
test
mov
mov
add
pop
add
pop
je
mov
lock
imul
es
shrb
pop
adc
sti
xor
rolb
shrl
nop
cmp
mov
sarl
pop
movsb
pop
dec
push
dec
mov
pop
mov
push
jl
cwtl
sbb
adc
daa
lock
lahf
sbb
xchg
addr16
cmpsb
pop
xor
inc
mov
ret
mov
push
pusha
pop
jmp
out
addr16
scas
xchg
cltd
push
gs
repnz
outsb
mov
aaa
add
sub
adc
int
sar
pop
sub
lds
shr
enter
push
xchg
into
adc
ja
outsl
outsb
int
int
and
es
fcmovb
and
bound
pop
mov
pop
pop
js
sub
into
rcrb
andb
jg
cmp
inc
and
movsb
inc
out
cmp
mov
push
cwtl
hlt
pop
xor
adc
cli
xchg
sti
sbb
adc
lock
sbb
shll
je
dec
jecxz
mov
push
xchg
dec
fcmovne
cltd
aaa
push
lea
adc
in
faddl
bound
imul
push
cli
ljmp
mull
nop
jb
gs
cs
mov
imul
in
xor
int3
ss
inc
push
insl
sarb
lret
lods
ret
jno
adc
cmp
ja
repnz
push
add
rolb
mov
adc
jge
jp
fldenv
in
in
adc
loope
mov
mov
and
mov
clc
ljmp
jle
xor
dec
mov
out
fsubrp
mov
sbb
mov
loop
imul
pop
sti
pop
hlt
lds
bswap
shlb
adc
mov
fistps
adc
dec
incb
daa
loop
stc
lock
sub
jg
lea
add
sbb
pop
out
pop
adc
les
pop
pusha
and
mov
sub
cmp
gs
andl
ss
cwtl
das
call
adc
inc
or
rorb
push
adc
sarb
jmp
pop
test
dec
cltd
jo
xor
jge
or
mov
jge
ljmpw
faddl
add
push
cmpsb
mov
adcb
hlt
cmp
orl
push
insl
xor
sahf
and
sub
insb
lcall
or
ret
xchg
cwtl
out
push
fsts
in
add
inc
ss
jbe
cltd
int
into
xchg
push
jmp
loope
mov
cmp
movsb
mov
cmpsl
cmpsb
std
cmp
jp
xchg
aaa
push
maxps
push
jp
loopne
pop
gs
mov
jno
push
cltd
dec
adc
pop
mov
outsb
adc
stc
mov
and
aad
xchg
ret
or
pusha
inc
aas
test
test
leave
mov
inc
ljmp
mov
jl
mov
mov
sbb
dec
clc
mov
sbb
in
mov
and
testl
jge
lret
push
dec
sub
add
les
sbb
adc
inc
stos
inc
jb
sub
lds
inc
les
mov
lea
lcall
adc
lods
pusha
decl
mov
sub
pop
lcall
enter
mov
dec
es
and
inc
fcmovu
jno
int
sbbl
mov
adc
roll
pop
pop
dec
incb
sub
mov
and
negl
add
cmpsb
nopl
dec
pop
aad
cmpsb
out
push
cltd
inc
call
orl
xchg
jmp
shl
inc
and
movsb
pop
sub
add
iret
arpl
xor
mov
out
add
xchg
mov
mov
mov
frstor
loope
in
mov
xchg
adc
popf
ss
aaa
pop
mov
cmpsb
lret
aas
rcll
stos
inc
pop
cwtl
imul
rorl
test
jbe
jnp
insb
sbb
push
pop
setp
call
mov
fistps
loope
aas
aaa
pop
add
pushf
cmp
in
mov
cmp
pop
mov
inc
int3
test
jbe
int3
aad
dec
sbb
repnz
data16
push
and
jp
hlt
push
mov
mov
lahf
push
shrl
sbb
mov
or
into
dec
jnp
in
sbb
pop
idivb
lret
and
jb
cmp
pusha
out
fidivs
cmpsl
push
jns
stc
sub
rcll
push
call
mov
jns
gs
mov
push
sub
icebp
loope
mov
stos
push
pop
xor
pop
mov
adc
push
mov
fs
fwait
xor
cmp
fldl2t
insb
adc
jae
mov
mov
dec
aam
stos
cltd
fisttpl
sub
mov
inc
push
jp
mov
imul
mov
dec
call
imul
jnp
out
mov
inc
int
std
lret
inc
jle
mov
sub
das
adc
sarb
pop
incb
dec
or
shlb
and
or
and
lds
pop
lds
sub
sbb
repnz
aaa
xchg
arpl
sbb
mov
orb
push
ror
into
scas
ds
adc
test
fwait
js
pop
ret
xchg
pop
cmc
mov
jp
mov
nop
fimuls
movsl
fisubrs
imul
jecxz
add
lret
cmp
mov
sub
enter
subl
pusha
mov
lods
call
insl
sub
lret
cwtl
push
or
scas
mov
pushf
mov
test
test
push
xor
mov
leave
js
adc
cmp
dec
out
push
aas
sub
scas
or
jb
jge
cmc
mov
lds
ja
test
fisubrs
inc
cmp
dec
mov
stos
bound
stc
cmp
dec
call
jl
add
into
xchg
mov
xchg
jo
ja
sbbb
jns
fnstcw
cmpsb
xor
fwait
xchg
aam
cltd
pop
imul
gs
ret
scas
test
jp
jmp
mov
mov
clc
popa
pop
in
imul
add
push
or
cmp
bound
or
ja
dec
repnz
cmpsb
lds
push
movsb
scas
cli
out
adc
int3
test
pop
sbb
cld
jecxz
jb
cmp
sbb
hlt
hlt
movsl
push
imul
sbb
sahf
in
inc
rcrb
es
adc
mov
in
mov
pop
lods
in
add
inc
xor
outsl
sbbb
lahf
addl
aaa
push
scas
cli
push
mov
jns
push
mov
sarb
ljmp
cmpsl
pop
xchg
out
push
push
mov
in
dec
xor
sub
or
fstpt
into
rolb
addl
and
popf
mov
xchg
dec
inc
dec
mov
fwait
or
sub
xlat
dec
jb
orl
das
movl
leave
arpl
cmp
out
inc
and
xchg
shll
sbb
jmp
fisttps
jno
aaa
push
icebp
mov
pop
xchg
mov
push
sub
or
pop
sub
pop
xchg
fldenv
xor
dec
filds
ljmp
push
mov
and
and
xchg
xchg
std
daa
mov
jmp
aad
nop
xorb
int3
idivb
lds
sbb
jns
int
inc
fmuls
pop
push
or
mov
mov
dec
dec
add
paddq
cmp
sbb
xor
mov
sbb
testl
sbb
jecxz
out
mov
push
aas
incl
arpl
addl
mov
inc
shlb
roll
xchg
mov
mov
sub
inc
in
push
ret
inc
aas
test
out
into
xchg
add
and
mov
add
add
int3
jb
cmpsb
mov
xlat
in
repnz
andb
inc
out
bound
pop
mov
psubsw
or
mov
or
push
ljmp
aas
mov
sbb
xchg
dec
cwtl
pop
lret
cmp
and
push
push
and
lret
dec
push
lcall
dec
fs
std
fldl
mov
and
fldl
int
sbb
out
jl
pop
sbb
and
mov
or
cmp
mov
cli
scas
lds
jge
rolb
pop
adc
clc
sbb
or
sahf
push
push
xchg
leave
in
ljmp
sub
push
pop
mov
pop
loop
out
sub
ror
das
ret
cmc
inc
outsb
fnstsw
inc
mov
movsb
and
xor
pushl
dec
cmpsb
test
push
iret
leave
push
ljmp
repz
mov
jmp
pop
dec
lret
lds
sbbl
jbe
or
or
pushw
and
adc
iret
push
pusha
add
sbb
inc
rorl
lcall
xchg
ja
pop
and
insl
mov
jge
hlt
push
cmpsl
pop
cli
mov
cmp
mov
pop
shll
dec
test
push
pop
mov
pop
mov
fwait
pusha
in
fimull
adc
push
pop
fistl
loope
sub
fildll
in
pcmpgtd
xchg
mov
pop
dec
out
and
inc
push
add
addr16
repnz
dec
pop
mov
rclb
and
inc
adc
mov
dec
xor
pop
push
leave
cmp
ds
inc
pop
ss
inc
sub
add
sbb
inc
lahf
popa
inc
and
dec
hlt
dec
pop
repnz
ljmp
jmp
inc
mov
fdivl
lret
hlt
adc
or
repnz
fiaddl
mov
cmp
les
xor
clc
test
push
xchg
jo
adc
lea
icebp
adc
mov
gs
fdiv
shlb
jb
mov
or
inc
bound
cltd
popa
js
cmp
enter
aad
stos
fidivl
xchg
into
xor
in
in
call
add
sbb
lods
xlat
add
out
or
stc
orl
inc
dec
push
push
imul
inc
pushf
jp
pop
mov
lahf
loope
lods
push
les
pop
xchg
push
ljmp
cmp
outsl
cs
js
mov
mov
mov
fsubp
je
rclb
mov
outsb
es
mov
shll
aam
inc
stos
nop
mov
pop
mov
adc
dec
fldcw
jg
xchg
mov
jo
int
loopne
lock
push
icebp
adc
shlb
xchg
arpl
cltd
xor
ret
or
dec
jecxz
lods
lret
ss
lret
bound
and
xchg
pop
test
and
xchg
push
xorb
mov
jmp
loopne
dec
and
test
aas
jno
push
or
fmull
add
jnp
loope
sub
dec
pop
out
push
test
adc
outsl
or
push
nop
lahf
xlat
cs
cmp
add
dec
sbb
test
mov
cmp
scas
sub
add
fldenv
pop
call
fisubrs
call
xchg
hlt
jnp
mov
sbbb
pop
sub
add
fucomp
das
add
lods
das
sbb
rcrb
mulps
dec
mov
and
sbb
dec
roll
jns
mov
ret
fnstenv
ds
mov
mov
scas
pusha
dec
mov
cld
add
xor
add
cmp
inc
pop
inc
inc
outsb
into
out
ret
jge
add
rcll
mov
in
or
pop
test
jnp
je
cmp
mov
int3
rolb
mov
mov
mov
or
jnp
sbb
cli
push
dec
sub
xor
fsts
hlt
inc
xor
notl
dec
cmpsb
pop
pushf
mov
daa
lods
sub
shl
shll
ret
pop
push
dec
sti
push
push
mov
adc
cli
scas
or
jae
push
jecxz
push
lret
sbb
gs
jge
xor
inc
test
lods
dec
rclb
inc
sbb
cmc
cltd
pop
out
dec
lods
mov
ret
mov
lcall
imul
movsl
push
or
clc
into
add
inc
insl
pop
lret
outsl
insb
ljmp
adc
js
jge
inc
aas
dec
push
cmc
insb
mov
lret
mov
push
inc
pop
cmp
test
addr16
xchg
adc
aas
lcall
xor
adc
test
out
and
push
inc
xor
mov
jbe
xor
lret
repz
in
jbe
mov
rorl
and
dec
lock
ficomps
subb
xor
pop
push
iret
cltd
mov
mov
out
xchg
leave
enter
xchg
mov
xlat
jecxz
sub
inc
out
xchg
jb
inc
ret
mov
and
test
mov
pop
and
dec
push
enter
push
in
mov
sub
mov
imul
pop
gs
jle
jecxz
pop
mov
adc
xchg
pusha
test
mov
daa
adc
jae
imul
sub
insb
insl
and
dec
addb
loope
adc
sbb
jns
ds
pop
jl
rol
repnz
idivb
push
aaa
mov
sub
cmpsl
add
subl
mov
sarl
fcompl
sti
movsb
cld
mov
cltd
jno
fstl
push
and
jo
jle
ds
inc
pop
sbb
xchg
or
add
sub
jmpw
test
int3
cmpsb
push
mov
xchg
shrl
sub
scas
shll
out
loop
out
repz
sbb
jbe
gs
jge
sbb
push
cwtl
pop
fdecstp
dec
adc
mov
xchg
or
push
sub
jmp
fcmovnb
test
xchg
sub
sub
mov
pop
inc
repz
xchg
outsl
push
jge
dec
xchg
rorl
cmp
jbe
jne
ss
mov
mov
dec
push
cmp
aaa
mov
popf
cmp
adc
insb
cmp
xchg
mov
rcr
adcl
and
int3
xor
push
inc
shlb
in
fsubl
in
push
mov
cmc
jg
jbe
fnsave
out
pop
sbb
and
ret
ss
stos
push
call
daa
dec
jg
out
mov
test
mov
xor
fwait
mov
mov
inc
test
ret
aas
pop
jno
cmp
cmp
push
inc
jecxz
nop
orl
into
fisubl
aaa
gs
out
jns
loope,pt
loope
fdiv
dec
je
test
sub
jae
aam
addl
ret
dec
mov
sahf
jne
mov
int3
xchg
xor
aaa
xchg
cmp
stos
cmp
stos
jno
sbb
div
cwtl
jecxz
adc
stos
loope
dec
fsub
mov
div
daa
addr16
mov
daa
mov
push
jg
aaa
adc
cmp
sbb
adc
cmp
mov
sub
insb
jno
aas
cmc
test
jo
mov
in
and
add
jmp
and
mov
mov
imul
and
jp
insb
cld
xor
sahf
mov
cmc
add
cld
sub
rorb
pop
mov
loope
xor
inc
sub
mov
xchg
lcall
mov
add
sbb
shrl
inc
fildl
pop
xchg
xchg
call
mov
out
insl
clc
mov
cltd
je
xor
lock
aas
out
push
ret
icebp
scas
push
inc
pop
jge
aas
pusha
stc
sbbb
jno
push
xor
fmull
loop
adc
pushf
subl
xor
cmp
push
jl
or
adc
push
push
mov
dec
inc
mov
mov
mov
dec
jns
xchg
jo
xlat
loopne
jae
fcmovu
rcrb
cwtl
jg
test
or
or
push
mov
push
adc
push
cmc
leave
insb
pop
popa
or
and
filds
into
scas
or
or
push
stos
xlat
push
push
xor
pop
adc
lahf
mov
scas
pop
inc
ret
push
jmp
in
and
stc
mov
inc
adc
mov
clc
xorb
cmpl
inc
push
leave
jns
or
ljmp
xor
or
adc
stos
dec
aad
into
xor
ljmp
mov
repnz
icebp
push
out
pop
cmc
test
adc
sti
xor
repnz
inc
or
gs
cs
addr16
fwait
xorl
lea
insl
cmpsl
into
sbbb
insl
test
push
and
sub
ret
mov
leave
sbb
hlt
sub
sbb
jle
adc
fucomi
inc
mov
jecxz
and
test
lods
jp
in
lret
push
add
jbe
sub
mov
test
movsb
sub
bound
shll
jne
fmuls
dec
mov
dec
int
sub
pop
sub
ret
push
xor
sub
int
ret
xchg
loop
repz
in
pop
sbb
ja
or
push
jo
daa
xor
sub
notl
sub
call
pop
mov
sar
xor
outsl
mov
cmpsl
adc
xor
out
enter
shrl
fbld
xchg
dec
negl
jo
push
fwait
lock
lahf
push
int
xchg
mov
xchg
cli
ret
inc
rorb
nop
leave
add
mov
mov
negb
push
dec
dec
mov
repnz
call
cmpsl
rcll
sub
inc
mov
insl
stc
ljmp
cmp
jle,pt
add
mov
mov
add
ds
test
lret
mov
cld
lods
repnz
xor
ja
popa
out
lock
mov
mov
insl
stc
movsl
push
pop
inc
or
mov
dec
fnstcw
xchg
push
je
mov
fildll
cmp
ds
adc
scas
popa
aam
pop
cmc
sarl
loop
mov
cmpsb
ret
aad
rclb
sti
jno
sub
pop
mov
mov
std
inc
iret
xchg
ret
orl
mov
fimuls
ja
jp
and
jecxz
movsl
sbb
scas
push
popf
cs
lret
cmovae
stos
xrelease
js
push
stos
lock
pop
dec
ret
and
jbe
cld
inc
lcall
jecxz
out
enter
ret
data16
xchg
inc
jl
les
fs
jne
fs
lods
cmc
jns
in
cmpb
mov
loopne
jmp
push
call
mov
mov
or
call
pop
sub
and
lcall
add
stc
pop
fisubrl
cld
jo
ret
seto
test
imulb
push
jp
adc
inc
cmpsl
pop
test
push
test
data16
push
push
mov
add
sar
mov
fwait
mov
xor
jge
jmp
fiaddl
shrl
push
mov
popf
pop
add
fsubrl
das
jae
cmp
and
pop
cmpsb
jo
push
cmp
sub
test
shlb
jg
push
xchg
clc
movsb
xlat
mov
pop
data16
test
xchg
adc
in
xchg
pop
mov
sbb
fldcw
cmpsl
mov
inc
lcall
adc
adc
daa
lahf
xlat
or
adc
add
jge
cmp
fdivrs
xchg
aaa
dec
xchg
push
or
fistps
mov
cmp
shll
xor
or
xchg
xchg
ret
sbbb
ja,pn
inc
shld
fs
jne
inc
rcrl
sub
xor
jb
int3
into
or
sarl
xor
xchg
push
adc
push
enter
rol
jnp
adc
cmc
jmp
out
das
mov
adc
cmpsb
cmp
push
pop
pushf
mov
jbe
xor
xchg
aam
pop
and
mov
ss
test
scas
pushf
dec
orl
push
hlt
jl
daa
std
add
fwait
outsl
inc
loope
mov
fsubs
fwait
mov
mov
stos
syscall
add
or
fadd
sub
pushf
addb
push
pop
push
lret
xor
push
xor
call
mov
jnp
fildll
js
mov
popa
xor
pop
pop
xor
cld
or
insb
lea
out
sub
pop
mov
fcoms
jnp
push
xor
adcb
inc
mov
push
insb
fdivs
dec
pop
dec
subl
dec
add
pop
aaa
pop
sub
mov
sub
loope
andl
adc
xor
adc
out
mov
lea
repz
mov
sbb
leave
pop
aad
mov
js
lock
pop
fiadds
pop
push
test
add
and
inc
int
icebp
or
nop
das
leave
mov
lock
mov
enter
push
leave
adc
cmp
mov
mov
adc
push
je
adc
add
inc
decb
sub
cmp
dec
bswap
out
adc
test
outsb
mov
dec
repz
lret
cmp
loop
shll
clc
lds
or
rcll
in
cmpsb
mov
shlb
cwtl
jg
addr16
sbbl
cmc
mulb
leave
movsb
mov
mov
mov
sbb
cs
push
call
xchg
mov
lret
loope
cmp
adc
mov
pop
popa
ss
sbb
ret
dec
arpl
dec
mul
fidivl
pushf
clc
xor
mov
clc
test
cmp
test
fmull
dec
pusha
push
fimull
shlb
jge
out
addr16
out
test
mov
mov
sbb
pop
out
mov
or
inc
ja
push
mov
jmp
aam
adc
sub
xchg
fwait
cld
popf
js
mov
pop
jle
lds
out
xor
inc
mov
xchg
push
push
ds
lods
mov
mov
mov
add
push
pop
adc
mov
dec
outsl
or
inc
divl
and
or
sarl
in
iret
pop
cli
jbe
add
fisubrs
jl
scas
jmp
jae
jne
sub
inc
mov
mov
test
push
std
shlb
xchg
test
lret
nop
aad
es
mov
test
inc
shlb
xchg
adc
mov
jns
mov
sbb
mov
xor
add
cmp
out
scas
popa
jnp
mov
sbb
fnstenv
in
outsl
movsb
add
xchg
xchg
mov
add
loop
xchg
inc
fidivrs
sbb
inc
clc
mov
and
pop
popf
ss
sbb
add
mov
or
push
or
mov
cmp
es
test
lods
push
adc
ljmp
push
xchg
mov
mov
popf
dec
fiadds
cmpsb
xchg
adc
inc
sub
jmp
mov
jmp
or
ret
or
icebp
popa
adcb
call
mov
adc
push
lcall
es
adc
je
cmp
mov
fldl
mov
hlt
mov
and
in
fsubs
cltd
push
fisttpll
cmp
xor
jo
ret
gs
movsb
fwait
mov
sbb
in
adc
sbb
lahf
imul
jbe
cmp
xlat
cmpsb
add
cltd
push
push
fidivrs
push
cmp
xchg
push
nop
or
dec
roll
pop
addr16
mov
mov
imul
jg
xlat
and
mov
addl
mov
scas
rcl
and
and
and
cli
in
mov
add
inc
mov
pop
pop
xor
sbb
mov
testb
push
arpl
add
jne
mov
aad
add
add
inc
add
add
dec
cld
shlb
cmp
and
cmp
pop
fsubrs
out
mov
rol
mov
shll
mov
rorb
xchg
loopne
jp
mov
mov
sbb
rolb
hlt
fcoms
xor
sahf
add
movsl
or
push
cld
loopne
movsb
mov
mov
test
push
push
scas
mov
lock
pop
out
dec
fldenv
mov
sub
popa
aad
pop
rorb
loopne
fldenv
mov
scas
mov
xchg
and
inc
aaa
push
ds
test
jno
mov
lds
mov
outsb
mov
push
jle
bound
jmp
popf
loopne
cltd
loop
out
icebp
mov
in
in
call
out
bound
in
mov
enter
cltd
repnz
movsl
mov
xor
out
loope
addr16
cltd
ret
lret
nop
gs
testl
icebp
inc
aas
lcall
into
pusha
inc
out
adc
test
mov
jne
sbb
adc
dec
push
mov
adc
out
and
cmp
pop
xor
push
mov
pop
es
imul
fisttpl
jmp
insb
lahf
in
cmp
leave
lods
push
mov
in
inc
xchg
cmp
fdiv
rcrl
push
test
inc
and
popf
aas
bound
test
call
push
mov
xor
sbb
sbb
das
pop
xchg
mov
push
or
pop
jp
mov
add
push
mov
lods
icebp
shr
or
push
pop
rcrb
ljmp
dec
pop
in
mov
sbb
ja
icebp
loope
pop
mov
mov
shr
mov
inc
dec
adc
xor
pop
scas
test
arpl
or
and
jae
shll
das
pop
mov
mov
pop
adc
movsb
ficoms
int
fmul
xchg
imul
cmp
dec
rorl
mov
dec
outsb
insb
and
cmp
pop
lret
mov
insb
cmpl
add
push
pushf
xchg
mov
xor
inc
inc
push
jp
add
imul
push
add
pop
leave
js
js
loope
lock
sbb
ds
xorl
mov
or
repnz
cmp
aad
in
mov
imul
mov
lret
dec
cmp
inc
rorl
fisubl
mov
push
fldl
mov
jle
sahf
dec
xchg
fdivrl
das
test
jmp
ret
xchg
cmp
sub
sbb
js,pn
cmpsl
sbb
fisubrl
stos
sbb
inc
in
popf
push
imul
fwait
push
mov
pop
xor
xchg
or
jne
mov
jno
xor
inc
imul
addb
jns
ja
dec
sbb
pop
xor
pop
xchg
shl
out
in
sbb
clc
and
shr
es
ret
add
mov
push
sub
imul
sbb
lret
rol
push
mov
inc
mov
cmpl
and
inc
jl
repz
mov
cmp
pushf
jecxz
mov
or
pop
mov
add
lds
es
push
jp
lret
adc
stc
aad
push
in
sbb
in
add
pop
iret
fadds
push
jns
mov
sahf
adc
or
jl
pop
pop
dec
test
sub
cmpsl
push
sbb
clc
and
xchg
or
ja
in
cld
jnp
and
insb
jge,pn
sbb
or
test
iret
mov
cmc
test
aaa
test
mov
cs
push
negb
les
add
push
mov
mov
add
sub
test
jae
and
std
and
in
stos
and
leave
lcall
fwait
hlt
mov
mov
loopne
push
jns
outsl
lcall
push
and
clc
aad
mov
jne
jl
xchg
in
ljmpw
mov
addr16
add
cmp
sbb
pop
dec
mov
cmp
iret
push
out
imul
dec
add
mov
mov
adc
sub
add
sbb
or
dec
sbb
xchg
and
mov
repz
xor
sub
mov
xchg
insl
rcll
fwait
lock
pop
pushf
pop
mov
cmc
daa
stc
adc
sub
jo
sub
inc
pop
push
sahf
bswap
sbb
movsb
jne
dec
inc
cld
leave
xchg
dec
inc
imul
fsts
inc
cmpsb
sarl
ficoml
nop
mov
xor
clc
sbb
in
imul
cmp
jg
int3
fisubrl
in
scas
js
mov
cmp
xor
outsl
and
lret
iret
stc
cmpsl
or
and
out
add
cwtl
mov
cmp
scas
enter
sbb
inc
mov
roll
adc
mov
flds
divb
fisubs
aas
or
add
push
push
sarl
das
mov
add
lahf
mov
ljmp
arpl
popf
mov
lcall
jnp
scas
loopne
xor
out
and
cmpsb
sbb
mov
cmp
inc
add
xchg
rcrb
push
add
clc
js
inc
adc
push
add
cltd
push
mov
es
mov
test
jmp
sub
xchg
jmp
aas
mov
pop
cmpsb
call
insl
nop
jns
fs
push
hlt
inc
sti
ds
lods
adc
stos
stos
lret
push
xor
fsubs
shl
mov
jmp
fmull
or
sub
cli
mov
lret
xor
lea
jle
dec
push
ds
push
fstpl
ds
cmpsl
les
or
dec
popa
xor
add
sahf
popl
sub
push
aad
jmp
stc
jnp
cmp
xor
enter
or
lea
or
into
leave
shlb
in
jecxz
in
mov
inc
lea
and
mov
cli
lret
adc
out
mov
stos
fisubl
bound
cli
loope
add
pop
adc
xchg
lods
shl
stc
sarb
cld
int
aaa
sbb
sbb
sub
in
repz
mov
push
jns
adc
test
add
sub
inc
xor
add
daa
leave
pop
sub
sbb
xor
jle
inc
adc
mov
inc
mov
nop
ds
jp
loopnew
mov
sbb
cmpl
xchg
fbld
mov
or
add
cmp
into
fnstcw
and
jge
psubusb
cmc
jae
cmpb
inc
fnsave
inc
icebp
dec
mov
arpl
cmp
mov
push
xorl
xor
sbb
aam
and
call
mov
lret
jmp
pop
or
shlb
out
jb
push
daa
nop
leave
xor
mov
add
push
push
xorl
mov
lea
sbb
xchg
stos
mov
fwait
push
mov
pminub
add
cmp
xor
dec
out
negb
jb
dec
and
mov
mov
cmpsb
test
push
push
pop
mov
cmp
popa
jbe
cmpsl
or
in
insb
mov
lcall
loope
add
adc
or
cmc
push
jae
sbb
cs
pop
in
aam
or
mov
mov
and
test
mov
cmp
addr16
loope
jmp
lret
lcall
pop
insb
xchg
je
pop
sbb
repnz
aaa
clc
pop
lods
xchg
clc
insl
repnz
sbb
dec
cmc
insl
aaa
in
sbb
mov
pop
inc
sbb
push
ret
mov
adc
hlt
cmc
lods
and
in
jmp
lods
addr16
jo
dec
lahf
movsb
jp
mov
cmp
sub
lret
xchg
fstps
sbb
sarl
jae
movsl
adc
stc
and
pop
inc
in
in
sub
sbb
loopne
andl
sub
cmc
sub
xor
in
lock
or
cmp
mov
xor
ret
mov
push
dec
mov
aam
lcall
pop
adc
mov
sbb
dec
loope
das
mov
out
sti
add
call
mov
add
xchg
cmpsl
outsl
dec
pushl
sti
and
push
mov
pop
push
or
or
adc
add
sub
test
mov
iret
in
or
repz
fnstcw
jb
movsb
adc
xor
cmp
inc
inc
mov
stos
std
orl
int
into
xchg
cltd
or
pop
daa
cs
xchg
inc
pushf
lcall
xchg
pop
pop
mov
loop
xor
lret
dec
in
add
fnstcw
cmp
sub
call
mov
push
sbb
scas
push
mov
mov
ret
inc
jle
loop
and
jnp
and
into
dec
dec
xor
cld
lcall
aas
mov
cmc
ljmp
xchg
bound
or
jle
jbe
or
mov
outsb
jns
fisttpll
fidivrl
push
push
das
test
adc
jb
je
pop
mov
arpl
stos
xchg
xlat
jl
enter
fiaddl
in
dec
lock
iret
jmp
sub
inc
iret
mov
ficomps
cmp
stos
mov
pop
filds
push
add
sti
pop
inc
jecxz
negl
dec
int3
xchg
cmpsl
xor
push
cli
int
sbb
outsb
subb
cmp
push
sti
movsl
mov
cmc
push
int3
sub
push
push
dec
ret
das
cmp
pop
dec
jl
and
mov
mov
sahf
in
xor
jbe
cmp
push
lea
pop
in
mov
pop
pusha
adcb
pop
stc
outsb
fucomp
xor
mov
les
jo
clc
popf
aam
je
cs
clc
push
cmp
pushf
sahf
ja
inc
fcoml
lods
xchg
adc
push
popf
fadds
loop
leave
or
inc
xchg
sub
mov
data16
adc
jae
jns
jl
jnp
adc
xor
and
aas
pop
out
jecxz
scas
test
jnp
push
jl
mov
mov
cmp
add
imul
ror
cmp
pop
xchg
fnstsw
sbb
mov
lods
pop
and
xor
mov
addr16
loop
repnz
imul
jmp
mov
jne
mov
insl
daa
es
out
mov
xor
jp
sub
lods
cld
xor
in
inc
test
cwtl
aad
add
fwait
lock
and
dec
sub
lcall
es
sbb
loope
push
and
shll
inc
cmp
mov
mov
add
xor
mov
sub
mov
mov
push
push
xchg
lock
and
sub
leave
repz
mov
mov
jnp
dec
aam
ficoms
add
xchg
sar
cmp
mov
adc
les
sahf
outsl
jecxz
shlb
nop
and
inc
xor
test
aam
das
mov
aaa
mov
and
xchg
pop
push
insb
orb
loopne
out
cmpsl
inc
test
push
gs
xor
sahf
jmp
ret
js
jp
adc
mov
jle
cmc
repz
ret
lahf
daa
dec
jns
inc
pop
push
push
shlb
dec
mov
dec
mov
mov
jl
test
fcom
and
pop
in
xchg
push
mov
fbld
jp
adc
sbb
test
emms
lahf
jg
and
lods
daa
ss
outsb
insl
pushf
jecxz
fidivl
cmp
inc
xchg
mov
dec
push
lods
hlt
addr16
or
and
and
or
pop
bound
mov
fs
decl
shll
pop
push
in
pop
xchg
xchg
into
add
into
sti
pop
les
test
mov
dec
and
jo
cmp
cmpsb
xchg
ljmp
xlat
and
push
push
cli
dec
push
icebp
movb
ss
xchg
inc
pop
and
in
or
outsb
stos
xchg
aas
jae
outsl
jecxz
and
test
inc
in
cli
jo
jmp
pop
or
es
js
cmp
jnp
in
mov
imul
sbb
pushf
adc
xor
popa
stc
xor
and
push
inc
rolb
rol
idiv
pop
mov
int3
in
in
sub
or
xor
xor
xchg
dec
jecxz
stos
ds
add
inc
repnz
adcl
nop
xor
stos
mov
jne
push
sub
rorb
lret
push
xor
xor
push
cmpsb
out
jnp
add
fidivs
jbe
sbb
dec
pop
add
jl
int3
sbb
inc
mov
outsl
jg
cmp
pop
pop
jbe
xchg
dec
dec
out
mov
gs
sbb
popa
push
push
sub
cmpl
daa
sub
pop
out
mov
inc
and
dec
les
insb
stc
pop
sbb
stos
cmpsb
dec
stos
push
push
lret
add
insb
ret
mov
scas
jp
mov
sti
movsl
fcompl
cmp
ror
adc
shr
aam
xor
jmp
jno
add
aad
sub
xchg
scas
aas
test
jae
mov
sti
sbb
and
movsl
jno
imul
fwait
repnz
xchg
add
cwtl
xchg
bound
xchg
les
jmp
inc
or
xchg
or
out
enter
xor
and
push
jg
mov
aas
mov
cmpsl
icebp
mov
js
gs
xchg
es
lods
push
mov
xorl
lcall
nop
arpl
aaa
arpl
loope
lret
rcr
test
bound
aam
and
dec
inc
lret
cmpsl
mov
je,pn
cmc
ja
push
sub
add
pop
movsl
and
pop
fmuls
jmp
mov
or
fistpll
loopne
xor
enter
lods
and
test
jno
cmp
clc
loope
stos
mov
fnsave
shr
add
mov
addl
je
jp
or
ja
mov
or
es
lods
pop
cwtl
aaa
xor
push
xchg
pop
or
pop
cltd
stos
pop
push
xor
add
rclb
mov
adcb
ret
mov
xchg
fldcw
das
mov
mov
inc
cmp
cmp
adc
or
sub
push
mov
ret
test
mov
cmc
mov
aaa
in
or
push
jmp
xchg
xchg
jb
sarb
cmp
xor
addr16
into
pushf
in
xlat
nop
push
icebp
cwtl
push
jae
sub
mov
cld
shll
jecxz
or
movsl
imul
mov
out
and
dec
mov
into
aas
ficoms
fiaddl
xchg
fnsetpm(287
add
mov
pop
dec
pop
cmp
pushf
jmp
inc
sbb
out
movsl
setg
sub
mov
add
imul
sbb
cmp
dec
pop
out
inc
xlat
pop
mulb
shlb
test
inc
mov
into
arpl
dec
mov
aaa
mov
out
mov
cld
xor
mov
aas
mov
and
cwtl
and
jne
pop
add
sarl
out
lods
mov
or
pusha
sub
into
pop
cmp
shrb
subb
mov
mov
and
dec
mov
cmp
movsb
stc
pop
roll
dec
es
sub
cmp
fbstp
cmp
movb
inc
rcr
inc
subl
cmp
fxch
loop
adc
pusha
push
mov
jo
mov
in
jp
pop
push
inc
aaa
push
sahf
fildll
fldt
jb
mov
cli
stos
fs
pop
jmp
inc
cmc
xchg
int
ss
rcrb
fs
sub
push
je
mov
sub
push
xchg
cltd
in
movsl
xor
or
cmp
mov
sbb
jno
or
pop
int3
adc
jne
mov
dec
xchg
movsl
cmpps
out
push
add
daa
sbb
aas
pusha
mov
mov
xor
ja
popw
mov
jmp
in
push
pop
aas
xchg
fidivrl
mov
jp
pushf
into
lcall
xchg
mov
push
jl
mov
cwtl
xlat
mov
subl
push
inc
call
cmc
ficomps
mov
fwait
jle
and
add
or
loope
into
sub
fidivl
pop
xor
push
adc
movsb
push
sbb
add
cmp
fs
jg
xor
movsb
mov
inc
out
cwtl
into
xor
lret
lds
rolb
in
aaa
aam
daa
rolb
shlb
adc
add
xchg
stos
push
cmp
data16
and
push
testl
cld
imul
dec
test
sbb
and
cmp
adc
bound
sti
movsl
in
xchg
mov
mov
dec
pop
test
das
sbb
shrb
push
push
stos
out
add
aam
not
jmp
jecxz
popf
lcall
mov
clc
mov
ret
jg
int
add
add
pop
icebp
lcall
push
repz
cmpsl
sti
add
push
cmp
fsubl
push
mov
push
dec
mov
push
push
es
stos
inc
xlat
lods
js
lods
das
fucomp
gs
subb
sub
push
adc
mov
pop
lods
pusha
lret
jnp
and
xor
pop
enter
push
fdivrs
pop
int
xchg
cmp
in
jns
imulb
add
xor
or
sub
push
les
and
mov
sub
mov
jl
dec
dec
mov
mov
mov
stc
fisubrs
notb
and
in
out
adc
jp
es
fcoml
sub
jo
jmp
je
shrl
hlt
insb
lret
es
xor
cld
mov
pop
aas
in
out
push
loope
sub
aad
shrl
dec
mov
adc
push
int
cmpsl
insl
push
adc
inc
aas
push
inc
dec
movsb
or
movsb
cli
inc
jg
sbb
into
xchg
jmp
js
xor
sarb
lock
hlt
pop
and
add
test
insl
fdivrs
mov
dec
pop
dec
popf
push
lea
repz
and
dec
push
push
in
imulb
mov
mov
call
addr16
mov
jg
mov
inc
loop
into
sbb
in
fld
inc
dec
and
or
add
idivl
dec
or
dec
mov
in
out
addr16
sub
jnp
sub
sub
lods
aas
ffreep
mov
inc
cld
push
movb
push
xchg
dec
pop
fmulp
dec
mov
call
adc
xchg
fdivr
leave
addl
mov
jnp
jbe
divb
pusha
jecxz
fisubs
ret
jecxz
lahf
std
stos
inc
imul
mov
lds
jmp
mov
pop
leave
sbb
cmp
lock
jns
mov
clc
outsb
pop
push
push
repz
xor
pshufw
mov
fs
pop
mov
jns
lds
add
imul
cwtl
mov
dec
mov
fwait
jae
mov
dec
inc
adc
sarl
push
sub
xchg
ret
adc
test
mov
mov
rolb
cli
stc
xchg
jmp
push
add
fidivl
out
nop
sbb
xor
or
pop
mov
pop
add
jmp
mov
jmp
mov
enter
movsl
ja
iret
and
pop
pop
aad
xchg
xchg
lods
nop
inc
jbe
jge
leave
stos
and
mov
cs
jecxz
sbb
rolb
loopne
test
xchg
push
std
pop
mov
aam
sub
or
jbe
and
std
in
mov
popl
adc
push
iret
lods
pcmpgtw
dec
cmc
mov
xchg
jge
adc
adc
stos
mov
ljmp
lahf
dec
mov
jns
aas
dec
sub
add
mov
loop
xor
jb
push
or
cmp
mov
xchg
inc
fadds
out
push
insl
lods
out
xchg
fsts
out
jg
aam
out
and
aam
les
shll
push
jecxz
push
mov
jmp
cmp
inc
dec
cmpsl
xor
mov
mov
sub
jge
mov
xor
dec
data16
movsb
addr16
shl
out
sbbl
sti
call
jmp
cld
call
push
in
jns
lcall
aad
dec
cmpsl
dec
outsb
into
sub
mov
iret
rcrl
inc
sub
and
mov
dec
bnd
je
adc
clc
sub
inc
or
mov
enter
je
ret
ljmp
adc
je
and
push
dec
inc
push
into
movsb
mov
ljmp
pop
fwait
push
rclb
fistl
test
sub
adc
out
dec
mov
insb
mov
int3
imul
out
inc
aad
shrl
imull
and
iret
or
andb
test
insl
and
pop
stos
push
cmp
inc
mov
out
popf
inc
adc
sub
pop
xchg
test
subb
inc
mov
insb
popa
test
push
pop
mov
stos
pop
fwait
xchg
movsb
mov
push
push
cmp
lods
xchg
ljmp
jg
gs
movsb
sub
pusha
movsl
out
jbe
in
inc
cmp
xchg
pop
es
cltd
jnp
fstps
rolb
ret
mov
push
imul
sbb
jb
push
adc
clc
ljmp
fwait
into
mov
sbb
xor
jns
loopne
inc
stc
mov
or
sub
iret
pushf
lock
inc
ss
push
mov
ds
cmc
insb
add
ficoms
test
xorb
and
add
out
sub
add
mov
dec
dec
loopne
mov
imul
inc
jo
mov
enter
push
adc
ret
inc
fs
jno
adc
mov
imul
add
push
test
fisubrs
in
icebp
sub
push
test
icebp
cld
lods
leave
and
int
dec
and
xchg
mov
out
add
push
xchg
mov
clc
xchg
sahf
into
adc
fstpt
add
mov
psrlq
clc
sbb
xor
sbb
push
mov
pop
inc
movsl
fimuls
insb
fmuls
add
sub
bound
inc
adc
adc
dec
test
and
in
ret
push
cmpsl
fnstenv
sbb
lods
xor
lods
sbb
jp
lret
mov
clc
add
imul
fsubrl
pop
cmp
rcl
xlat
push
fbld
addr16
mov
mov
addr16
xchg
aaa
push
sub
push
mov
enter
bndldx
xchg
push
and
mov
lock
movsb
pop
mov
jle
fwait
or
call
rorb
je
je
popa
or
adc
adc
or
leave
mov
movsb
imul
fs
movsb
mov
jo
out
adc
mov
dec
mov
dec
pop
bswap
int
call
add
ret
bound
or
fwait
sub
jle
jg
sahf
mov
inc
in
fs
sar
shlb
or
lock
daa
dec
cmp
adc
pop
rcll
inc
addr16
inc
std
xchg
je
loop
movsb
mov
bound
mov
mov
mov
outsl
insl
adc
cmp
fstps
lret
sub
or
and
fs
out
sbb
jno
mov
stos
shrl
dec
pop
sub
icebp
sbb
out
xchg
lds
jge
inc
cmp
dec
fiadds
pop
cwtl
dec
mov
jnp
add
add
push
inc
inc
dec
divl
mov
mov
adc
jle
test
dec
and
inc
sahf
fbld
cmp
imul
movsb
xlat
lret
bound
jnp
jno
xchg
test
inc
cmp
dec
mov
xchg
sbb
test
pop
ljmp
lods
sahf
sub
mov
rol
push
fucomp
mov
dec
pop
call
loop
int3
enter
inc
add
repz
stc
xchg
std
mov
inc
mov
call
mov
ss
sbb
negb
jb
imulb
mov
in
push
ss
repz
lcall
pop
cmp
add
fs
cs
dec
dec
sti
lock
scas
das
movsb
jb
cmc
out
in
leave
and
mov
ss
jl
jg
das
and
mov
and
gs
mov
add
push
sbb
test
inc
les
hlt
adc
stos
sbb
pop
push
cmp
lds
xor
lret
pushf
adc
loopne
cmp
leave
in
inc
pop
jp
pop
mov
jne
repz
mov
aas
add
pop
js
adc
gs
sarl
mov
iret
mov
or
cmp
test
loope
dec
mov
fiadds
es
hlt
mov
ror
jbe
fsubs
shll
pop
sbb
pop
push
mull
out
aam
mov
mov
movsb
int
xor
jmp
leave
sti
push
aam
adc
pop
xor
out
dec
jg
insb
lret
xchg
push
data16
ja
out
inc
insl
xchg
xchg
push
pop
mov
push
hlt
mov
inc
jp
mov
cs
jb
scas
xchg
and
jg
fadds
jo
cmpsl
push
ret
and
cwtl
xchg
xor
in
push
push
sbb
inc
fs
jns
jg
sbb
cmc
or
add
mov
negl
sbb
je
push
lea
cmpl
js
pusha
loope
cld
jg,pn
cmp
dec
movsb
mov
cmp
mov
insl
fistps
lret
pop
retw
sub
fnsave
insb
cld
mov
xlat
or
ljmp
dec
jmp
pusha
ret
data16
adc
cmp
fdivrl
pop
fs
shrb
ja
sti
inc
aas
faddl
push
scas
sub
add
out
es
aad
dec
xchg
pushf
push
adc
jbe
add
xlat
and
jge,pn
mov
xlat
pushf
lea
sahf
call
push
mov
int
popf
inc
jb
pop
out
sub
out
xlat
shll
and
cld
movsb
pop
das
scas
sbb
inc
mov
sbb
jmp
pop
loop
popf
jo
aas
sbb
das
or
push
dec
sbb
popf
push
dec
testl
dec
cmp
out
jge
jo
mov
scas
adc
stc
adc
jo
mov
rorl
mov
adc
lods
dec
out
das
fimull
les
and
pop
subb
mov
dec
aad
push
sbb
jbe
xor
in
push
mov
inc
pop
arpl
fldenv
mov
xchg
dec
mov
or
testb
pop
andl
popa
call
aaa
dec
loop
cmp
out
add
xor
ficoml
adc
inc
lcall
jb
popf
jle
jecxz
pop
push
mov
cmc
in
inc
test
das
testl
imul
cmp
call
stos
aas
mov
sub
fisttpl
ja
lahf
loope
cmpsl
push
push
and
jmp
add
add
fs
insl
sbb
fwait
das
mov
cmpsb
pop
pop
movsl
add
jae
cmp
pop
stos
loopne
lahf
sbb
in
idivb
fildl
and
xchg
xor
das
pop
in
push
xchg
jno
cmc
inc
push
das
or
out
xor
test
sub
or
mov
cmc
pop
cmc
adc
lds
cmc
loope
fistpl
mov
xchg
lcall
filds
lds
sub
or
dec
hlt
xchg
nop
shll
packssdw
das
insl
pop
sub
xchg
aaa
rorb
jbe
push
fs
mov
sti
pop
jle
sub
mov
dec
adc
cwtl
mov
les
pop
xor
les
mov
and
test
mov
cmpsl
push
arpl
scas
mov
push
push
imul
fwait
inc
scas
add
xor
mov
mov
pusha
dec
movsl
loope
ljmp
gs
jg
xchg
addr16
out
sbb
jbe
push
sub
lock
ljmp
cli
adc
ljmp
mov
or
mov
mov
add
cld
sub
push
jbe
push
lret
pop
or
cmp
or
ds
push
jns
cli
dec
inc
imul
inc
out
sub
test
lods
fbld
mov
inc
xchg
es
mov
lock
movl
pop
push
repz
mov
nop
mov
scas
pushf
add
and
int3
outsl
sar
aaa
mov
adc
lret
jne
into
and
in
jmp
inc
jne
cmp
adc
cmp
push
cld
pushf
jl
in
jp
outsb
jl
imul
sub
gs
inc
pusha
xor
scas
data16
pop
or
insb
movb
cmp
add
jns
inc
push
icebp
icebp
bnd
movsl
aaa
inc
xchg
daa
adc
ds
pop
ljmp
arpl
jns
sahf
push
repz
adc
bound
adc
les
pop
gs
push
decb
mov
mov
adc
cmp
daa
pop
push
or
test
sahf
add
mov
std
movsl
subl
cmp
mov
mov
xlat
es
inc
fs
in
scas
scas
insb
jne
jne
icebp
jns
cmp
and
imul
jo
lea
cmp
sbb
fsubl
jl
mov
jb
sbb
popa
call
dec
imul
inc
jmp
mov
int
push
cmpsb
mov
cmpsl
lret
ficompl
std
sahf
add
xchg
nop
jecxz
sti
scas
dec
jmp
inc
scas
pop
stos
nop
add
and
std
iret
insl
dec
mov
xchg
js
fidivrl
mov
inc
daa
fstpl
pop
fcom
imul
repnz
int3
mov
jg
sbb
mov
popf
mov
mov
adc
pop
push
out
addl
mov
arpl
inc
iret
add
fidivrl
push
imul
mov
adc
add
fstp
push
mov
out
in
dec
mov
fwait
arpl
ss
pop
popa
iret
les
clc
push
ss
xchg
inc
dec
cmp
popf
clc
outsl
mov
pop
push
cmp
mov
sbb
pop
clc
xor
dec
add
dec
stos
es
rcll
xor
mov
xchg
inc
add
test
cmpsb
jle
push
call
fildll
jl
popa
frstor
xchg
icebp
stos
pop
daa
inc
push
adc
rcr
insb
inc
mov
adc
sbb
mov
cs
mov
sbb
push
xor
cmp
lock
and
adc
inc
test
out
out
and
loop
popf
inc
test
or
ret
jo
sbb
or
xor
jp
push
mov
dec
mov
fisttpll
inc
repz
mov
ret
dec
jb
mov
xor
in
xchg
sbbb
or
clc
push
push
sub
dec
dec
scas
les
adc
xlat
outsb
stos
pop
mov
pop
dec
fidivrs
mov
bound
mov
mov
test
test
xchg
incb
mov
es
adc
xor
add
sbb
xor
outsb
sub
hlt
add
andl
pop
cmp
add
out
adc
pushf
roll
jne
loop
cwtl
pop
and
out
loop
mov
sbb
dec
popf
mov
call
jle
lds
push
mov
cmpb
lcall
fildl
scas
popl
mov
in
or
fimuls
lea
and
inc
imul
push
lds
add
dec
sarb
fcmovne
lahf
push
mov
aad
inc
add
in
jge
fimuls
out
iret
dec
outsb
mov
add
add
inc
push
push
sahf
fdivrp
jmp
test
ror
mov
fisubl
ljmp
and
stos
push
outsb
leave
fldenv
rorb
cmc
lods
fs
jnp
and
test
adc
movsb
into
addr16
xchg
lcall
mov
push
movsb
dec
icebp
add
xchg
rcrb
inc
mov
fimull
cmp
lahf
fiaddl
or
fs
or
aam
xor
js
push
addl
adc
and
aaa
jecxz
cmp
pop
cli
xor
dec
int
aaa
aam
mov
jecxz
push
andb
leave
push
push
sbb
std
mov
js
jmp
sbb
pop
jo
test
xor
js
xchg
adc
dec
test
bound
push
pop
fcmovbe
movsl
sub
push
loope
icebp
inc
test
ds
and
xchg
inc
aas
cli
xchg
inc
mov
inc
add
dec
inc
aad
adc
jbe
les
je
in
mov
xlat
lret
jmp
jnp
lock
and
rolb
or
pop
jg
ficomps
sub
sbb
adc
or
jmp
jg
inc
mov
out
xchg
adc
int3
call
loop
push
cmp
sti
mov
and
push
es
cmpsb
movsb
jbe
subb
lea
add
mov
dec
sub
icebp
xchg
pop
or
lcall
pop
cmp
xchg
lods
inc
cmp
mov
adc
dec
nop
ljmp
jmp
push
ja
lea
pusha
insl
jge
std
cmp
add
outsb
inc
mov
dec
and
xchg
jo
mov
mov
sbb
dec
stos
dec
ss
jge
in
push
push
int
shrl
loope
mov
stc
and
pop
xchg
outsl
hlt
les
push
je
and
sub
dec
mov
mov
xchg
jge
mov
les
cmp
and
scas
xchg
xchg
inc
popf
xlat
gs
es
xor
test
mov
xchg
pop
jp
jg
push
adc
push
fcomps
fnstsw
rcrb
in
inc
jge
add
add
mov
insl
lods
mov
in
adc
lret
movsb
aaa
sub
lods
sbb
pushf
push
das
or
mov
pop
jb
or
mov
aam
pop
inc
push
mov
rcrb
jo
repnz
mov
lods
push
cmp
mov
es
mov
jmp
mov
lea
lea
mov
and
mov
fwait
push
push
popf
xor
jge
dec
add
adc
mov
push
push
adc
std
sbb
jo
push
cmp
mov
sbb
shl
sbb
jge
mov
enter
stc
xor
pop
lds
mov
inc
jnp
mov
add
addb
sub
xchg
cmovbe
xchg
pop
xchg
loopne
mov
jae
jmp
mov
ficoml
mov
test
lahf
dec
ja
sarl
xchg
mov
push
loopne
movsl
and
lock
dec
stos
pop
imul
mov
lret
out
or
stos
add
les
movsb
fstpl
je
shll
adc
xchg
out
fisubs
lock
push
imul
xchg
aam
jae
mov
cmp
cltd
js
xchg
popa
lock
sub
inc
pusha
insb
xchg
aaa
fadd
mov
fisubl
fisubs
pop
inc
mov
es
cmc
pop
mov
test
pushf
in
or
dec
popf
push
pusha
pop
push
add
insl
cmpsl
cmpsb
jmp
popf
movl
dec
les
xor
ljmp
mov
lds
inc
jnp
mov
das
scas
inc
xchg
jno
sti
pop
andb
test
pop
aad
and
mov
movsb
dec
icebp
out
cltd
pop
and
adc
adc
lods
jge
pop
xchg
and
dec
xchg
test
aaa
divb
mov
mov
fiadds
lret
and
mov
sub
cmpsl
push
mov
inc
and
sub
ret
insl
aam
jl
stos
sub
jne
cltd
sub
ret
adc
jns
movsl
test
test
xchg
stos
pop
mov
push
pop
jne
push
mov
mov
jbe
add
inc
sub
lret
inc
cld
fcompl
pop
aad
enter
dec
cld
lahf
adc
lahf
mov
sarb
scas
dec
push
mov
sbb
mov
cld
imul
pop
mov
mov
scas
mov
fucomi
jb
pop
pop
std
or
enter
incl
insb
cmpb
clc
cmc
jle
xchg
adc
loopne
popf
and
xchg
sahf
lahf
adc
jl
aam
adc
pop
clc
sbb
jns
adc
mov
cmp
mov
jecxz
adc
xchg
cwtl
lret
and
or
sar
inc
lods
div
or
dec
fadd
sbb
sub
fsubp
out
test
mov
ja
das
lds
test
bound
jne
dec
addr16
je
sbb
sub
movsl
loope
sarl
fwait
rcrl
cmp
sub
push
dec
inc
jb
mov
pop
sub
fwait
xchg
nop
movl
add
jo
in
or
jns
push
mov
adc
xchg
cmp
je
mov
out
ficompl
ljmp
jg
xor
sub
int3
xor
lret
cmp
add
in
pop
sti
aam
loop
push
mov
mov
and
jnp
fistps
xchg
xchg
and
xchg
mov
inc
ret
fstpt
mov
lea
lret
xchg
jg
sub
popa
cli
lcall
fsts
rclb
mov
jle
pop
mov
cwtl
pop
jecxz
xchg
push
call
insb
pop
xor
lcall
push
les
ljmp
test
pop
push
cmp
out
movsb
in
hlt
lret
xchg
xor
mov
sarl
loope
pop
les
fldl
and
pop
aas
fildl
jbe
lcall
sub
dec
pop
cmp
jle
gs
push
push
pop
fisttpl
mov
mov
pop
mov
loop
mov
push
pop
sub
add
add
xor
mov
push
push
mov
shl
pop
dec
adcb
mov
in
addr16
mov
mov
add
inc
adc
inc
out
stos
fstpl
repz
cmc
mov
sub
dec
push
movsl
jp
mov
ljmp
mov
add
out
cmp
ss
shlb
xchg
fmull
hlt
jecxz
ds
psraw
subb
push
iret
pop
out
or
xor
mov
xchg
jmp
cmpsl
push
stos
lcall
inc
sub
imul
mov
cmp
mov
sbb
popf
punpcklwd
insl
mov
frstor
js
and
mov
gs
xchg
mov
pop
and
pushf
dec
jle
lods
in
mov
mov
dec
and
pop
and
adc
shr
jl
pop
mov
hlt
shrb
sbb
cmc
nop
sbb
lds
cwtl
jle
adc
lret
outsb
out
insl
std
in
jge
xor
xchg
outsl
iret
add
jae
imulb
mov
fstpt
les
psubsw
and
jbe
or
movl
shl
lcall
loope
cli
push
test
mov
jge
mov
loope
in
sarl
jno
xor
fsubrp
outsb
ficompl
jle
stos
in
jp
push
jmp
not
in
xor
mov
into
push
cmp
add
mov
add
lock
push
int
cmpsb
lods
pop
insl
loop
jbe
in
push
add
or
dec
xor
add
dec
cmpb
and
movsb
shlb
sub
loop
jnp
scas
mov
pop
mov
imul
lea
mov
xor
and
fiaddl
inc
xchg
xor
inc
loopne
and
cmp
movsb
sahf
imul
es
cmp
inc
jne
das
test
inc
cmpsl
sbb
lret
cltd
stos
xchg
dec
and
xorl
and
in
push
jns
and
stc
test
aaa
mov
cltd
or
push
nop
insb
jo
pushf
adc
and
jae
adc
push
stc
jge
nop
jo
add
mov
adc
lret
sbb
dec
es
push
aas
nop
fcmovnb
or
inc
mov
push
inc
rol
dec
xchg
enter
std
push
jle
gs
in
mov
pop
std
stc
pop
push
cli
stc
pop
jbe
pop
dec
inc
cwtl
mov
xchg
shr
dec
adc
jnp
inc
nop
fyl2xp1
xchg
arpl
push
adc
dec
in
and
cld
push
out
loope
jnp
jo
mov
add
decl
xor
imul
movsb
cmp
dec
test
pop
sub
dec
lds
mov
pop
sub
jae
insl
ss
xchg
ss
lds
out
dec
fwait
jge
inc
dec
fs
mov
sbb
adc
ffreep
rorb
je
jnp
inc
lock
fs
or
push
and
jg
jge
and
lods
icebp
sub
imul
mov
ret
xchg
imul
sub
sbb
sbb
hlt
dec
dec
rorl
dec
stc
cltd
jb
scas
lock
repnz
insb
lds
aad
adc
mov
test
inc
or
mov
push
jl
push
cmpsl
mov
stos
je
addr16
test
sub
sbb
cmp
mov
dec
xor
incb
popa
popf
inc
and
pop
inc
jle
mov
js
adc
aad
filds
mov
sub
dec
mov
cmc
popf
mov
int
arpl
push
dec
sub
insb
ljmp
jae
or
mov
or
adc
pushf
mov
mov
cmc
enter
cld
push
push
into
out
rolb
push
fstps
fdivr
pop
xchg
sbb
inc
xor
out
xchg
mov
aas
or
adc
sub
adc
add
xor
mov
pop
jp
out
cli
fstp
outsl
inc
xchg
and
jmp
sub
pop
shll
xlat
or
scas
push
xchg
xor
cmc
push
jg
xor
insl
jg
lds
movaps
lcall
aas
inc
jns
andl
in
daa
cmp
negl
data16
jge
das
adc
jmp
and
ds
xchg
imulb
shl
sbb
cmpsl
pusha
shr
cld
lock
or
pop
mov
incb
lock
aad
xchg
int
jbe
stc
inc
lock
jns
stc
test
pop
dec
outsl
fbld
dec
adc
lods
mov
aas
sbb
enter
jle
mov
pop
iret
jle
cmpb
jae
insl
mov
lds
xchg
fwait
out
into
adc
fwait
ja
int3
xchg
shll
leave
or
mov
mov
mov
add
repz
or
add
cld
and
jo
xor
mov
adc
popf
ja
or
or
lock
push
xchg
jo
bound
scas
fdivl
test
adc
cmp
rcrl
shrb
cmp
push
pop
stos
mov
push
les
fucom
cmp
add
les
push
notb
xorb
imul
or
test
sbb
sti
dec
push
mov
mov
sub
jg
jno
jecxz
std
int3
sbb
data16
rol
out
mov
loope
roll
inc
mov
jno
loope
xchg
cmp
mov
push
mov
push
adc
insb
jbe
fisttps
repnz
ljmp
cmp
sbb
jg
sbb
mov
pop
call
mov
add
sbb
sub
xor
andb
mov
into
stos
and
jno
mov
xor
mov
stc
inc
push
shrl
pop
or
xor
lahf
xchg
dec
mov
dec
cmp
xchg
popa
dec
jno
or
dec
mov
cmc
xor
enter
pop
loope
dec
cmc
dec
sbb
int3
mov
and
ljmp
aam
stos
sub
dec
push
in
ljmp
xchg
scas
jb
rcr
push
push
jge
pop
mov
mov
and
add
dec
ljmp
pushf
jb
push
xchg
lods
aam
mov
out
outsl
inc
xor
and
daa
dec
pop
xor
negb
xor
jne
or
xor
cs
sbb
mov
sbb
mov
pushf
sahf
dec
cmp
fldcw
rcll
in
sbbb
xchg
loop
jge
lods
cwtl
pushf
sub
fists
ljmp
fstl
insb
adc
dec
xchg
xchg
mov
dec
and
cmc
fs
enter
sub
ja
aam
cmp
test
dec
push
push
xor
xor
sarl
outsl
roll
cmp
ffreep
lods
push
jmp
scas
jbe
pop
lret
cmpsb
fs
clc
clc
std
pushf
lods
in
cmpps
sub
or
cli
dec
movsb
loopne
cmpsb
ficompl
jp
leave
mov
pop
ss
dec
int
jmp
pop
iret
loop
cmpsb
fstl
imul
pusha
pop
mov
call
sbb
push
icebp
push
pop
xorl
sbb
dec
lahf
dec
cmpsl
loope
add
mov
add
lods
dec
jle
maxps
jmp
sub
mov
sbb
xchg
lods
lret
loopne
xchg
sub
push
mov
pusha
lods
ja
push
xchg
push
push
sti
mov
sub
fisttpl
test
dec
sub
or
fldt
push
lods
mov
adc
mov
movsl
sarb
sbb
mov
adc
jmp
pushf
push
dec
jo
repnz
in
xchg
jns
add
pop
fstpt
xchg
push
nop
cli
popf
daa
sbb
imul
punpckldq
or
lahf
cmpsb
in
adc
adc
lret
in
xchg
mov
cwtl
shrl
pop
jmp
jnp
adcb
push
sub
icebp
cmp
fimull
fstps
sbb
pop
out
push
jne
adc
outsl
mov
stos
push
add
loope
cmp
sbb
daa
mov
and
movsl
push
fidivrl
push
in
jnp
test
sti
stos
and
and
out
test
dec
into
cld
enter
mov
xor
out
nop
or
mov
mov
cld
jl
leave
inc
aad
jns
push
cmpl
shl
cmp
les
sarl
cli
pop
jns
lds
push
pop
pop
inc
cmc
adc
int
inc
sti
pop
fs
les
data16
jmp
popa
cwtl
xor
push
cmp
push
ret
inc
lds
push
pop
jb
pop
pop
loopne
dec
icebp
popf
push
roll
das
in
fdivrs
dec
xchg
adc
xchg
mov
insb
jp
sub
leave
arpl
mov
xchg
push
rcrb
sub
icebp
jo
add
je
hlt
aaa
push
adcl
push
xchg
sub
sub
or
xchg
or
pand
lcall
cld
mov
pop
jg
inc
sbb
insb
and
lea
mov
leave
dec
pop
jbe
mov
scas
inc
icebp
inc
sbb
mov
adc
aas
adc
push
push
lret
jno
in
lea
cmpb
arpl
pusha
leave
inc
mov
sub
mov
loop
outsl
xor
dec
clc
in
mov
aam
pushw
mov
test
push
xor
cmp
popf
daa
xor
ljmp
pop
push
shll
iret
enter
xchg
jne
mov
test
cmp
jle
mov
enter
jnp
lret
mov
out
xorb
cmpsl
lods
pusha
fsubrs
cmp
enter
rcrb
stc
jae
pop
loop
outsb
loopne
enter
push
sub
inc
jne
or
sub
ja
mov
push
bound
mov
arpl
dec
pusha
or
adc
mov
jmp
mov
out
mov
jp
jp
xor
scas
ds
stos
movsl
gs
mov
divl
lods
cmp
mov
jno
xor
or
ficoml
shrl
dec
mov
jno
outsl
test
sub
gs
sahf
sahf
cmp
je
sub
lcall
hlt
sbb
push
cmp
lock
sbb
pop
ljmp
jno
mov
pop
sub
dec
rorl
imul
or
sub
pop
sbb
or
pushf
es
inc
outsl
mov
pop
pop
inc
cmp
pushf
add
test
addr16
nop
jnp
fisubrs
repz
mov
out
movsb
cmp
ss
or
dec
push
xlat
add
or
sti
je
fs
loop
xor
xchg
inc
push
leave
jle
xor
rorb
js
or
push
sti
lcall
xor
cmp
imul
or
push
xor
scas
out
cmp
cmp
or
std
pop
jle
testb
out
lret
inc
sahf
cmpsb
push
sbbl
add
add
fmuls
dec
js
pop
loope
add
in
mov
out
ljmp
mov
int
test
ja
jne
mov
loope
pop
inc
or
stos
bound
mov
jns
sar
jg
adc
aas
out
imul
icebp
pslld
or
push
mov
pop
and
imul
into
into
xchg
fidivs
pushf
or
xor
and
xacquire
and
jns
mov
ss
lods
fmul
pop
push
xchg
mov
or
out
test
mov
addb
rcrl
inc
dec
or
lods
inc
jecxz
stos
vpaddb
cli
pop
addb
inc
int
add
stos
stos
test
xchg
imul
inc
mov
inc
iret
adc
shll
cmp
dec
out
arpl
xor
das
mov
mull
mov
push
pop
cmpsl
gs
dec
js
mov
dec
sbb
pop
add
mov
sub
mov
jb
sbb
jg
fcmovu
and
inc
fists
sbb
push
outsb
cmpsl
add
pusha
lret
leave
push
xchg
popf
sbb
clc
clc
mov
mov
andb
mov
add
in
aad
xor
bound
pop
or
stc
jnp
insb
sahf
push
sbb
mov
gs
xor
jmp
out
adc
cmp
pusha
pop
pop
pop
mov
fldl
xchg
daa
stos
push
jnp
nop
test
bound
push
pop
mov
mov
jnp
add
xlat
mov
cmc
mov
lret
sbb
push
out
pusha
rcr
mov
jbe
cmp
lods
leave
mov
dec
push
movsb
cltd
andb
dec
js
cmp
sub
cmp
mov
jecxz
popaw
lods
mov
test
and
xor
and
mov
fnsave
sub
add
cmp
sub
repz
divl
pop
adc
negb
paddsw
sub
and
out
xor
icebp
add
xor
mov
nop
loope
cwtl
call
popf
cmp
aad
cmp
cmp
out
mov
popf
xlat
fcomi
lahf
xor
in
sub
xchg
call
add
cmpb
pusha
hlt
push
mov
ret
or
mov
sarl
test
mov
push
pop
jl
jae
dec
xor
sbb
and
cli
cmc
sub
leave
fcmovne
iret
push
lahf
in
lret
in
fstpl
data16
adc
sub
mov
pop
xor
bnd
xor
cmpb
push
mov
xor
scas
mov
xorb
push
dec
mov
push
or
les
mov
jl
or
in
jmp
and
push
xchg
ffree
mov
mov
sahf
iret
push
test
pop
loop
and
lret
ja
stos
fimuls
movsb
jns
aam
iret
ds
loopne
iret
fisttpll
fstpl
cmp
mov
aam
lahf
fsubl
jns
test
aam
pop
mov
xor
mov
mov
outsb
add
inc
or
lahf
nop
mov
mov
jne
out
add
push
inc
jg
jge
loop
pop
mov
je
inc
push
out
in
pushl
xchg
jmp
cmp
mov
push
icebp
sub
jne
scas
inc
jae
dec
in
ret
rclb
xchg
out
mov
xor
aad
hlt
lret
icebp
sub
roll
xchg
scas
pusha
pusha
sub
popa
sub
icebp
push
aaa
adc
imul
adc
dec
ret
fisttpll
push
loope
ret
sub
xchg
pop
adc
cmc
sub
lock
ja
scas
sub
lds
pushf
cmp
or
rcr
fldl
xchg
jg
cmpsb
out
mov
outsl
popa
pushf
jnp
push
arpl
jb
mov
jge
sbb
popa
cmp
loopne
or
cmp
enter
mov
mov
sar
sbb
repnz
jns
lds
pop
xlat
pop
push
sub
and
cltd
jnp
mov
xchg
out
lcall
sahf
hlt
lea
outsb
loope
outsl
decb
dec
jbe
leave
add
xchg
cli
out
jmp
xor
test
outsb
ret
aas
cmpsl
dec
mov
scas
int
int3
movswl
sbb
jbe
sub
xchg
jb
shlb
lcall
call
add
mov
ss
add
leave
sbb
mov
repnz
dec
adc
daa
cmp
es
sub
push
insb
add
fnstcw
adc
ja
add
ret
ljmp
dec
and
fidivs
mov
dec
cmc
add
sbb
cmp
addr16
jns
mov
xor
and
dec
mov
jge
mov
lret
lds
outsl
js
enter
fidivrl
shr
aam
cmp
pop
fisubl
aas
mov
add
lahf
dec
loopne
cmpsb
xorl
fsubr
adc
mov
adcb
mov
loopne
mov
dec
xchg
pusha
cwtl
inc
mov
and
jne
xchg
push
sbb
fnstcw
shl
adc
cmp
pop
jae
jmp
in
outsb
outsl
shll
pop
or
push
sbb
cmpsb
inc
adc
jl
mov
mov
inc
call
xlat
push
jle
bswap
adc
inc
xor
jns
xchg
mov
test
sbb
repnz
dec
sub
sbb
in
jae
cmp
stos
pushf
adc
ret
push
fs
dec
cmp
push
les
and
fildl
lock
scas
xchg
fcmovnu
in
cld
dec
pop
sahf
jnp
clc
pop
aaa
and
or
and
sub
outsb
mov
xor
loop
mov
jno
shll
inc
cmp
jo
adc
je
sbb
xchg
mov
outsb
rorl
cwtl
ficoms
mov
sarl
clc
xor
inc
fs
stos
dec
in
daa
notb
dec
clc
or
js
xchg
mov
sbb
mov
and
rclb
mov
push
mov
fbld
pop
pop
pop
xchg
out
iret
add
int3
loope
pop
or
inc
bound
repnz
daa
shrb
test
push
nop
cmp
push
push
adc
xchg
xchg
mov
roll
and
daa
addr16
repnz
nop
dec
adc
adc
cmpsl
mov
cli
mov
pop
mov
and
fs
cmp
js
xor
push
into
jbe
mov
sub
mov
sbb
adc
push
addr16
push
mov
pop
fidivl
scas
dec
xor
notb
mov
cmpsl
in
ss
fsubrl
sbb
out
jnp
rclb
xchg
and
dec
int
mov
push
inc
pushw
dec
repnz
push
cmc
add
push
popf
test
push
int3
hlt
and
in
jmp
dec
je
push
movsl
lahf
aas
jb
or
in
jg
mov
arpl
mov
push
loop
fwait
sub
jbe
mov
scas
mov
push
inc
jne
add
rcl
mov
and
cmp
dec
aam
adc
cmp
or
into
bound
cwtl
int
xchg
mov
icebp
xchg
out
rclb
xchg
mov
inc
cwtl
or
mov
cmc
sbb
ja
dec
or
stos
aaa
xchg
loop
jp
gs
pop
data16
sub
push
out
fildl
pushf
leave
fwait
iret
aaa
hlt
ficoms
dec
fcomp
mov
lods
pop
add
mov
inc
mov
jecxz
lds
fisubrs
cmp
mov
je
lds
sahf
leave
push
rolb
lret
lret
or
sbb
fsubl
ljmp
jbe
lods
dec
add
mov
push
or
in
repnz
int3
mov
mov
jbe
rcrl
pop
and
aad
pushf
aad
pop
sbb
andl
mov
cmp
or
or
and
fs
and
mov
push
cld
jbe
sub
bound
in
sbb
mov
add
test
pop
outsb
repz
xchg
imul
in
pop
mov
aam
and
das
mov
imul
mov
jg
xor
ja
xchg
mov
push
dec
inc
mov
adc
or
shr
xchg
mov
scas
sbb
fists
lods
lods
mov
int
xchg
les
ds
cmp
dec
sbb
jns
mov
add
xchg
jg
mov
xor
sub
rcrl
hlt
adc
shlb
into
xchg
loopne
cs
push
mov
adc
sub
repz
and
mov
add
dec
cmp
clc
sub
inc
enter
sbb
icebp
jle
and
adc
repz
sub
jg
mov
outsb
subb
stos
mov
add
inc
push
pusha
pop
mov
dec
pop
xchg
push
mov
inc
int3
mov
jb
mov
push
inc
test
cmp
insl
ss
mov
cmp
int3
lahf
mov
xor
lret
lods
fisttps
int3
jge
jmp
fisttps
mov
mov
scas
mov
insl
sub
xchg
mov
out
jne
sti
inc
aaa
dec
push
adc
adc
imul
popf
jno
lock
imul
mov
ficoms
in
cmp
mov
mov
add
ja
pop
sarb
push
sti
jbe
dec
popa
jns
insl
cltd
push
xchg
adc
adc
addl
push
adc
les
jns
add
stc
fsubp
out
or
movsb
fcoms
mov
mov
and
pop
fs
std
leave
mov
sbb
pop
xchg
out
dec
adc
or
lcall
adc
test
jmp
sbb
lods
pushf
add
int3
xchg
fstpt
mov
sbb
ds
cs
inc
mov
insb
mov
test
fmuls
and
xchg
outsl
pop
fsub
clc
repnz
repnz
stos
outsl
pop
frstor
into
ret
and
xor
stos
sub
mov
fisttps
mov
fnstsw
in
fdivs
and
pop
inc
mov
mov
xlat
inc
aad
inc
fsubrp
repz
gs
mov
xchg
shlb
lock
fnstsw
add
pop
int3
adc
push
jecxz
xchg
and
jmp
aaa
inc
mov
not
movsb
xor
mov
xor
fistpll
adc
dec
cmpsb
inc
in
in
jge
popa
dec
or
lcall
push
push
lods
rcrl
mov
inc
inc
lods
adc
mov
lcall
lret
insb
mov
cmpsl
and
sbb
push
inc
xor
xor
or
mov
lret
das
aad
mov
jne
jg
pop
fldt
dec
inc
ficompl
rcrl
cmpsl
rcrb
jp
jne
sti
imul
xor
push
inc
and
int3
pusha
ss
out
inc
mov
sub
test
fcompl
inc
iret
ss
dec
push
mov
jg
aaa
lods
inc
int3
shrl
xor
cwtl
or
mov
inc
out
xchg
ret
pop
jmp
fisubrl
dec
lods
popa
clc
adc
add
push
push
cmpsb
mov
push
incb
push
stos
je
inc
imul
inc
mov
stos
cs
sbb
sub
sub
mov
test
mov
inc
nop
jg
mov
xchg
rcrb
lcall
stos
iret
push
push
xor
or
or
sti
scas
sub
dec
fstl
aad
cmp
jmp
mov
test
cmp
jo
int3
cld
xchg
mov
test
xchg
xchg
or
daa
es
popf
cmp
mov
inc
dec
popf
ficomps
jle
es
sub
sub
rcr
inc
aaa
mov
xor
cmp
rol
xor
cs
cs
cld
mov
dec
cmp
push
or
cmp
mov
insl
sub
push
xchg
loope
lods
pop
icebp
jmp
loopne
pop
pop
mov
sbb
dec
aad
fwait
mov
loopne
cmp
xchg
lock
mov
repnz
sysexit
in
pop
cltd
jo
and
insl
sub
xor
xchg
ja
bound
jg
mov
cli
cmp
push
maxps
push
cmp
xor
or
shrl
ss
cld
out
mov
loop
mov
cltd
out
or
outsl
neg
push
stos
mov
mov
or
xor
aad
shrb
in
cmp
stos
inc
fnstcw
cwtl
xchg
int
and
stc
add
bound
sbb
fstpl
insl
dec
js
mov
fisttpll
int3
mov
pop
js
fs
sbb
mov
pop
push
mov
dec
dec
mov
lods
test
ja
cmp
stc
cmp
jo
pop
aam
mov
push
pop
push
repnz
cmc
lds
sar
add
add
inc
test
mov
xchg
into
lds
ljmp
aaa
sti
popf
xchg
rol
cs
jnp
daa
adc
mov
lret
mov
xchg
push
xchg
sarb
pop
push
add
push
sub
lret
outsb
ja
cwtl
shll
inc
arpl
sub
push
clc
xchg
movsl
mov
fimull
add
in
pop
and
je
fnstcw
int
mov
aam
add
lods
mov
add
pop
cmc
mov
pop
mov
dec
outsl
jno
je
mov
es
pop
mov
push
fs
psubsw
pop
xchg
int
cmp
repnz
pusha
xchg
hlt
mov
sub
xor
pop
in
xchg
pop
xor
js
lret
mov
aad
jnp
push
sub
or
movb
pop
shrl
jl
cltd
mov
js
pop
mov
loop
jmp
and
add
mov
xor
pop
ljmp
cmp
iret
clc
shll
cmp
mov
sbb
mov
hlt
imul
cmc
jb
jnp
popa
cmp
xchg
scas
aas
pop
and
cmp
cs
call
out
sbb
fistpll
out
sbb
cwtl
add
bound
movsl
jecxz
push
aam
cld
sar
adc
ds
cltd
dec
das
rcrl
add
dec
or
cmp
mov
mov
divl
test
jmp
rolb
push
adcl
dec
cmp
fidivrl
mov
pop
sbb
mov
sbb
add
lret
divl
movsl
arpl
add
shrl
mov
inc
jnp
pop
aad
mov
inc
mov
jg
cmc
xchg
rorl
or
add
fistl
les
or
inc
push
mov
sbb
movd
and
test
mov
push
cmc
inc
mov
mov
popf
call
cmpsb
pop
ret
pop
cmp
fimuls
iret
pushf
sarl
jmp
pop
jmp
int
jp
mov
in
and
and
je
xor
mulb
roll
cli
mov
rorl
idivl
inc
std
nop
mov
mov
push
lret
icebp
add
jg
mov
mov
dec
push
in
inc
loope
pop
clc
sbb
shll
sarb
loopne
insl
das
int3
mov
pop
aaa
addr16
jp
fcmovnu
call
int
jge
lds
and
nop
cmp
cmp
cs
out
jmp
adc
mov
hlt
or
js
mov
mov
push
bound
pop
mov
mov
push
mov
dec
cmpsb
call
dec
cwtl
mov
in
xchg
or
lods
and
jmp
nop
iret
adc
imul
movsl
xchg
pushf
mov
cltd
sbb
jl
dec
enter
or
push
hlt
mov
nop
scas
inc
push
xor
adc
push
push
fdivrl
testl
jbe
mov
mov
repz
inc
stc
xchg
imul
cmpsl
popf
jmp
es
enter
xchg
adc
xor
push
adc
jg
inc
adc
inc
pusha
lods
cld
pusha
sbb
out
jns
pushf
jae
mov
cmc
and
jno
mov
push
out
enter
jl
dec
sbb
pop
in
jae
shll
pop
mov
call
mov
das
inc
push
and
repz
cmpsl
cmc
or
repz
jbe
dec
testb
xor
loope
ret
jmp
data16
push
cmpsb
add
mov
cmp
in
aas
repnz
hlt
ja
out
jl
push
pop
cmpsb
stos
and
mov
jnp
or
aas
xor
cmpsl
and
out
lds
mov
adcb
loope
stc
out
mov
mov
int
push
add
mov
jge
daa
and
lods
pop
stos
stc
inc
lcall
jne
fistl
xchg
mov
push
xchg
movsl
inc
cmp
test
sti
xchg
add
ljmp
aad
push
aaa
and
daa
add
jmp
cld
inc
cmpsb
or
mov
mov
mov
roll
xchg
mov
lcall
push
adc
cmp
in
pusha
sub
push
pop
shrb
jge
fimuls
ret
jns
out
push
cmp
push
pop
jl
adc
pop
fisubrs
stc
push
clc
mov
adc
pop
cmp
push
ror
icebp
outsl
mov
nop
mov
lods
add
cmp
int
mov
fisttps
loopne
and
mov
test
dec
adc
loopne
xchg
mov
dec
and
inc
faddl
mov
cmp
fildll
fldt
add
jecxz
in
rorb
ss
inc
out
loope
jle
ret
jl
jle
outsb
mov
jbe
dec
lar
js
add
leave
mov
lret
ret
jbe
jnp
jo
push
sbb
sbb
inc
mov
gs
xchg
pop
ret
pop
adc
jmp
xchg
push
sbb
hlt
jp
fdivl
xor
and
nop
ficompl
mov
fsin
pushf
stos
in
in
cmp
sub
sbb
jmp
fsubs
shlb
dec
add
or
test
cmp
mov
hlt
aas
xchg
pop
pop
add
cmp
clc
mov
and
xchg
xorb
jb
xor
test
push
pop
cmpsl
adc
jb
jle
insl
into
hlt
inc
cmc
jno
out
inc
inc
arpl
pop
sub
pusha
adc
repnz
xchg
and
cmp
sbb
adc
daa
push
dec
pop
imul
aaa
fucomi
scas
and
and
arpl
dec
mov
sub
popa
inc
xor
test
loopne
clc
jns
add
adc
adc
push
arpl
jl
xor
clc
jae
pop
mov
sbb
inc
int3
fildll
movsb
and
mov
xor
mov
xchg
jecxz
mov
popf
cwtl
and
fwait
aad
cltd
movsl
outsl
or
mov
pop
aaa
xchg
jecxz
insl
test
jmp
not
fs
jno
scas
lret
mov
push
lods
jl
mov
push
orb
sarb
and
pushf
das
mov
in
adc
insb
repnz
xor
js
scas
repz
mov
push
dec
xchg
add
and
sbb
mov
sub
jns
dec
test
xor
popa
sub
sub
inc
data16
mov
push
jbe
push
mov
dec
mov
sti
adc
nop
ljmp
fs
ss
sti
sahf
mov
aad
push
lret
mov
and
arpl
mov
fisubs
mov
mov
int3
insb
pop
fwait
lahf
or
xchg
movsl
cmpsb
stc
ljmp
pushf
iret
mov
sbb
add
sti
xor
sbb
inc
test
repnz
mov
pop
std
jo
add
push
les
adc
sti
and
xlat
or
mov
ljmp
or
aad
in
sub
sbb
xor
cwtl
enter
loope
in
push
enter
adc
or
cs
lret
int3
mov
or
and
daa
stos
xchg
daa
outsl
lahf
jecxz
add
mov
out
xchg
mov
xlat
dec
addr16
outsb
mov
std
mov
mov
push
out
push
push
mov
and
xchg
addr16
sub
fnstcw
sub
insb
mov
test
ja
mov
adc
mov
add
frstor
sti
aad
lea
out
mov
mov
sbb
dec
mov
ss
mov
jbe
fldt
and
inc
arpl
imul
add
jmp
pop
xor
sbb
xchg
ret
inc
mov
mov
inc
sbb
pop
xchg
popa
in
mov
fmuls
call
jl
hlt
out
into
in
jmp
clc
ja
lds
data16
sbb
repz
or
xchg
push
addr16
in
imul
push
outsb
sbb
fimull
das
scas
jecxz
clc
int3
add
cmpsl
dec
cmc
push
pop
adc
lcall
gs
xchg
jne
or
arpl
stc
scas
mov
xchg
outsl
lods
shrl
push
and
add
pop
clc
jb
iret
xor
in
mov
das
not
popa
sbb
scas
jbe
pop
inc
xor
movsl
xor
or
cmp
cmc
cmp
iret
pusha
and
mov
addr16
scas
or
ss
inc
sub
mov
in
sub
push
sbb
mov
lock
inc
cld
cmp
insl
add
jp
push
fwait
push
int3
sbb
into
jge
xchg
pop
xchg
mov
pop
pop
leave
test
bound
jmp
int
daa
dec
add
xchg
insb
adc
jl
popf
lods
cmp
adc
jle
xchg
jns
ja
scas
rcrb
sahf
testb
pop
test
add
mov
sbb
mov
dec
fisubs
test
adc
dec
sbb
adcb
add
xchg
add
add
cmp
stos
sub
testl
xchg
or
lret
or
inc
and
xor
lahf
jbe
jmp
adcb
and
and
xchg
out
mov
sti
bound
pop
mov
xchg
pop
daa
rcrb
mov
and
divw
int3
cmpsb
xchg
and
xchg
or
dec
xor
add
scas
fld
add
mov
daa
dec
push
jns
xor
or
dec
sbb
pushf
jecxz
push
aaa
bound
clc
rorb
les
adc
cmp
pop
xchg
cmp
mov
cmpsb
stos
je
mov
sbb
jb
mov
cmp
mov
push
dec
pusha
fnstsw
arpl
or
int
mov
int
mov
push
dec
push
fsub
gs
dec
imul
jo
xchg
jmp
push
sub
dec
add
and
push
outsl
ret
sub
inc
jno
mov
pop
shlb
adcl
xorl
xor
sub
sar
arpl
popf
mov
in
jae
jmp
repnz
add
movups
push
lcall
in
pushf
cmp
mov
jb
jo
sahf
arpl
mov
adc
lret
cmp
daa
in
pop
sbb
sbb
xlat
mov
int3
mov
xor
je
jo
dec
xor
rcl
jne
loop
jb
or
sbb
push
push
hlt
repz
mov
pop
mov
out
cmp
add
sti
icebp
loopne
rcr
or
dec
mov
add
pop
lock
or
mov
shll
adc
jge
dec
lods
push
sbb
nop
cmc
jns
push
pop
push
and
ret
adc
fucomp
xor
xlat
fildl
jo
xchg
push
mov
mov
sar
xlat
cmp
fnstcw
aad
cli
loopne
dec
shrl
pop
sub
outsw
mov
xlat
int3
inc
test
int
icebp
aam
push
mov
mov
ss
mov
xchg
dec
cmp
pushf
outsl
pop
leave
iret
lea
inc
xchg
sti
inc
int
out
dec
ds
aas
scas
sub
cmova
push
mov
insl
loopne
les
cmp
mov
aas
mov
je
lea
mov
cmp
icebp
insb
push
pop
movsb
add
sbbl
push
fisttpl
loop
jo
clc
xor
lods
xchg
enter
mov
fldcw
loope
ljmp
aam
inc
stos
movsb
clc
mov
jns
mov
pop
pushf
iret
xor
mov
scas
movsl
decb
lret
cmp
bound
xor
pushf
fcmovnb
xchg
xor
dec
and
mov
push
push
std
jb
leave
arpl
or
inc
test
or
push
or
xor
not
pop
mov
jns
test
int3
mov
in
xchg
data16
inc
call
aas
fstpt
sub
jne
mov
mov
pusha
cmp
lods
imul
cmp
mov
pop
mov
lea
sti
dec
test
lock
push
mov
fisubl
or
lock
shlb
or
mov
jle
inc
outsb
pop
hlt
sub
mov
cld
loop
enter
jl
pop
xchg
add
das
pop
xor
ret
pop
adc
dec
mov
and
test
inc
stos
mov
shll
xchg
scas
cs
jecxz
out
daa
aaa
mov
push
clc
xor
mov
popa
mov
out
outsl
add
clc
sub
stos
cmc
test
inc
xor
mov
push
into
test
and
xor
xchg
movsl
enter
in
stos
sahf
movsl
pop
imul
cs
add
xor
sbb
sub
cmp
ss
and
les
cmp
push
add
inc
ret
dec
mov
adc
dec
mov
pop
shr
sub
or
aad
test
push
dec
dec
int3
push
addr16
push
rolb
dec
stos
fistpl
pop
xchg
jns
mov
cmpsb
push
push
or
xorb
dec
push
sub
jbe
fs
mov
aaa
or
jl
loope
push
mov
xor
jmp
fcmovne
stc
mov
add
push
mov
in
jns
out
jg
insl
out
pop
mov
daa
bswap
and
sarb
in
sub
bound
loop
inc
sti
cs
loopne
aas
lret
testb
xchg
out
inc
cld
pop
push
sbb
mov
and
pop
aaa
lods
or
ret
adc
lods
ss
push
sbb
xchg
pop
pop
xor
push
movsb
mov
cwtl
xlat
leave
test
push
adcl
dec
jmp
mov
pop
ds
jae
mov
pop
call
sarb
fisubrl
inc
sub
loopne
sub
adc
add
mov
mov
mov
das
aad
sti
sbb
pop
pop
cmp
loop
pop
outsl
fsubl
ret
lret
mov
popf
jmp
imull
loop
rorb
cld
lds
mov
cltd
push
ljmp
xchg
sbb
sub
pop
push
push
mov
iret
and
insb
push
dec
xchg
cli
push
fsub
imul
out
pop
or
dec
dec
pushf
adc
push
xchg
repnz
sbb
sub
cmp
adc
enter
daa
pushl
lcall
mov
or
mov
cli
lods
movsb
add
add
mov
cmp
add
mov
and
je
mov
add
mov
rorl
and
sub
out
dec
in
push
pop
fbld
adc
push
jmp
mov
shl
es
or
dec
xchg
pusha
pop
or
loope
or
nop
jmp
cli
sub
std
xor
pop
jmp
mov
jno
in
xchg
or
psubsw
andb
flds
jb
add
cwtl
pop
pop
cld
fmuls
pop
testl
dec
and
lock
mov
mov
fldt
adc
or
xlat
sub
mov
out
cmpl
loopne
jecxz
jecxz
ret
fisubl
or
dec
repnz
rolb
push
int
xchg
adc
inc
fisttpll
mov
les
cmpl
lcall
push
cmp
gs
out
adc
add
dec
pop
mov
inc
lret
cli
and
scas
dec
je
jecxz
sti
lods
push
push
imul
add
xor
xchg
xchg
inc
mov
jmp
fwait
push
jmp
pop
fcoms
divb
cmp
pop
in
jecxz
in
dec
rcrb
add
xchg
adc
mov
imul
lds
divb
insl
cmc
cld
lret
mov
rcrl
mov
pop
jno
imul
lret
int
clc
fisttpll
xor
sbb
mov
pop
ljmp
fdivs
add
mov
ljmp
xchg
hlt
ds
les
mov
test
cli
mov
fsubs
out
xchg
fs
dec
lds
mov
and
dec
pop
cld
mov
insb
and
popf
ret
mov
cs
cmp
lret
mov
cmp
out
push
inc
stc
mov
push
dec
pop
lret
imull
std
mov
mov
cmp
dec
jmp
pop
pop
in
out
inc
out
ficoml
jns
pop
push
xchg
outsl
fcomps
test
mov
std
adc
sar
and
mov
or
iret
bound
pushf
aad
fadd
pushf
adc
add
mov
mov
mov
jae
ja
push
cmp
inc
in
fs
cwtl
sbb
stc
and
cld
gs
pop
jecxz
into
cmp
dec
jmp
in
lods
push
fldcw
cmpsb
fwait
mov
movsl
sbb
fdivl
iret
xchg
xchg
fldcw
jmp
mov
lods
xor
fnstenv
pusha
out
mov
iret
rclb
inc
shll
test
push
test
xchg
mov
iret
cmp
pop
mov
pop
movsb
sub
adc
loop
sti
xchg
call
adc
dec
rorl
pop
nop
int
imul
je
js
push
test
in
int
lahf
push
ljmp
scas
mov
sub
mov
sbb
icebp
call
pop
int3
out
cld
cmp
cld
adc
jno
aaa
mov
dec
lret
xor
mov
aas
mull
adc
sub
out
jno
outsl
lea
xor
ljmp
arpl
add
mov
fdivrp
sub
xchg
mov
ja
cmpsl
mov
pushf
push
test
loop
jnp
rorl
rcl
xchg
in
jb
nop
dec
and
insb
aas
outsb
xchg
hlt
test
inc
and
es
in
add
inc
sub
subl
xchg
scas
dec
cmpsb
out
mov
mov
imul
cmp
adcl
push
or
xor
das
dec
xchg
insl
scas
stc
push
or
pushf
pop
std
leave
iret
mov
mov
jge
add
adc
inc
cmp
das
sub
aad
sbb
loope
push
pop
push
test
cltd
pusha
mov
imul
loopne
sbbb
and
xchg
xchg
clc
ja
call
fs
rclb
jbe
js
pop
adc
inc
mov
push
mov
and
js
dec
call
mov
hlt
in
andl
es
arpl
mov
xchg
xor
imul
nop
cmpsb
mov
jmp
in
cmpsl
test
out
pop
sbb
test
cmp
iret
jo
test
push
inc
xor
lds
pushl
in
add
sahf
xor
test
xchg
in
jbe
pop
xchg
adc
sbb
mov
pop
fbld
xor
dec
cli
fildl
testb
lret
cmp
jmp
lods
mov
lods
xchg
cmp
xchg
push
jns
sbb
adcb
xor
xorl
out
sub
and
stos
mov
and
inc
fimuls
mov
cli
push
arpl
and
vmread
add
mov
pop
sahf
sbb
push
jecxz
jg
pop
mov
dec
or
xchg
xchg
mov
xchg
cld
repz
test
push
jge
stos
pop
loope
sbb
xchg
mov
dec
push
mov
fs
sbb
out
jns
shr
sbb
das
inc
loope
or
xlat
lods
lret
lahf
push
sbb
jb
sarl
or
out
adc
adc
push
in
das
mov
cmp
push
jg
cmp
or
xchg
adc
ds
in
pop
bound
repz
push
js
mov
pop
push
out
adc
popf
test
add
mov
sub
jo
mov
lret
or
dec
popf
pop
sahf
cmp
lods
jae
or
insb
cli
mov
icebp
push
pop
cs
dec
subl
cmc
das
daa
jnp
add
cs
mov
cmpsl
xchg
push
jno
out
fiaddl
add
and
lret
es
lds
mov
testb
loopne
das
sbb
fnstsw
xor
push
add
test
add
push
in
xlat
fistpll
xchg
repnz
pop
ret
sub
add
pop
dec
cmpsl
sbb
in
lods
sub
xchg
stos
icebp
cmpsl
jb
and
push
xchg
mov
cmp
dec
cltd
adc
cmp
pop
out
cltd
mov
in
leave
sti
fsts
xchg
ja
pop
sub
test
mov
fs
and
xchg
sbb
mov
das
jbe
cmpl
scas
imul
cmp
sub
mov
adc
int
scas
xor
pop
in
jecxz
int3
ret
lods
ret
dec
sub
test
pop
loop
shll
das
je
stos
and
mov
cmc
adcl
xor
adc
addr16
fs
andl
add
mov
xchg
sbb
std
xchg
mov
mov
std
popa
sbb
pop
or
cmp
add
aam
jnp
icebp
sti
call
stos
and
or
pop
push
scas
fildl
test
sub
pushf
imul
jbe
add
add
xchg
inc
into
inc
push
add
add
clc
lods
add
xchg
xor
sbb
mov
dec
pop
fcoms
adc
pop
inc
repnz
jb
jne
push
cmp
push
cmp
dec
or
cmp
push
mov
daa
repz
sub
insl
jnp
insl
aam
data16
loope
dec
rclb
cmp
xchg
inc
adc
add
cmc
arpl
sbb
gs
jge
test
imul
out
dec
imul
xor
adc
repnz
outsb
cmpsb
bound
sub
mov
sbb
mov
or
mov
mov
ljmp
gs
out
les
test
or
pop
cli
adcl
push
in
or
shl
popf
aam
inc
adc
sarb
mov
push
outsl
mov
cli
push
call
mov
push
pop
ss
std
pop
pop
icebp
jp
sub
pusha
scas
clc
lods
push
dec
mov
cmp
xor
mov
cmc
popf
and
lds
adc
pop
dec
push
into
jmp
pop
repnz
lds
push
decl
fxch
in
fisttpll
in
ret
inc
das
rorb
mov
pop
pop
fdivrl
and
or
push
xor
sar
sub
test
in
insb
mul
repnz
pop
jg
inc
mov
mull
arpl
xor
pop
lock
cld
push
sbb
jle
lock
mov
dec
push
test
xlat
pushf
scas
cmp
push
xor
cltd
and
sbb
fmulp
mov
pop
hlt
pop
nop
or
call
add
js
inc
jbe
or
repnz
cmp
push
inc
push
push
pop
stos
sbb
xor
out
push
roll
cmp
scas
mov
cwtl
adc
scas
xchg
das
es
cmp
xor
fdivrs
sbb
fucomi
data16
cltd
push
jns
xchg
cmpsl
or
les
cmp
pop
or
push
jae
pop
movsb
loopne
cmc
push
xchg
cmp
fldl
std
enter
adc
orl
xchg
xor
adc
add
out
and
dec
push
test
pop
xor
xchg
mov
jmp
inc
and
xor
andl
xchg
into
stos
scas
ja
mov
in
int3
xor
dec
fdivrl
jp
inc
sub
imul
rolb
cmp
ds
adc
mov
xchg
push
icebp
shrb
mov
rcrb
inc
subb
xchg
jl
jmp
xchg
inc
dec
xchg
jnp
aad
les
fcompl
push
mov
push
jge
jle
inc
hlt
dec
mov
xorb
mov
pop
int
test
jecxz
in
sar
into
cmp
xchg
pushf
jle
xchg
inc
cmp
mov
or
push
nop
sub
jae
and
stos
xchg
shll
scas
add
jb
in
sbb
fs
repz
push
out
push
xor
jae
out
adc
cmp
aam
jnp
mov
push
movsb
subl
movsl
lahf
aad
sub
sub
test
daa
aas
xchg
popa
in
xor
lds
sbb
das
mov
jmp
sbb
out
push
std
aaa
adc
xor
jmp
sub
fildl
cmp
cltd
mov
aas
cld
pop
fnsave
out
pop
mov
push
mov
mov
or
cltd
inc
mov
sbb
push
ja
push
jge
sbb
push
rol
leave
or
int
inc
insb
in
dec
and
push
out
push
jne
je
xchg
sbb
jle
lods
cmp
mov
js
mov
stos
ja
add
mov
clc
enter
mov
jmp
jle
lcall
jne
sub
xor
insl
push
jl
xchg
cmc
pop
test
scas
cmp
pop
andb
sti
aad
lahf
pop
jl
xchg
inc
xchg
jl
gs
and
sbb
lds
js
lock
jle
push
cmp
inc
mov
xchg
xor
xchg
inc
mov
lcall
mov
repz
test
mov
pop
push
mov
or
cli
inc
loop
ficoms
jge
and
adc
cwtl
lea
inc
pop
jae
cmp
cmp
xlat
leave
in
fldenv
jbe
scas
xchg
rolb
mov
aad
test
inc
jns
mov
fisubrl
das
pop
sahf
inc
and
out
sub
mov
xchg
dec
mov
insl
sub
jle
movsb
imul
aas
fcoml
dec
out
xor
or
jno
xchg
fst
je
in
mov
xor
push
mov
xchg
dec
in
sbb
push
loope
stos
movsl
jge
jne
xor
sbb
pushf
pop
mov
fidivrl
stc
dec
shll
fadd
std
stos
pop
sub
dec
sbb
dec
lods
fucomi
inc
mov
das
push
and
add
lock
lret
mov
aad
jb
sahf
aad
enter
mov
aad
cmp
stos
inc
daa
add
movsb
test
cmp
addr16
dec
push
sub
cmp
insb
lock
pop
arpl
ss
lret
bound
xchg
in
cmp
lret
test
push
js
mov
jge
ja
pop
adc
loop
lcall
test
mov
inc
lret
add
dec
add
lahf
adc
xchg
jecxz
add
mov
push
xor
sbb
ret
insl
cmp
int3
fs
call
loope
icebp
xor
insl
dec
int3
dec
cld
xor
pop
push
add
mov
jg
ficoml
movsb
jb
pop
ficoms
loopne
lret
clc
and
xchg
mov
stc
jg
dec
sbb
lods
notl
xchg
in
xor
rorl
bound
ret
jns
jge
adc
lods
pop
gs
push
js
cld
jecxz
push
fsubs
jecxz
jo
je
cld
cmp
insb
in
mov
sbb
mov
shrl
fisttps
in
cmp
in
or
push
cs
and
int3
adc
rcl
mov
fisubrl
imul
push
jle
push
andl
cmpsb
jns
loope
stc
xor
sbb
cmc
pusha
dec
orl
mov
repnz
ret
mov
hlt
pop
mov
pop
int
or
jno
pusha
and
fwait
xor
mov
jnp
lods
rorb
clc
pushf
add
imul
enter
lahf
dec
mov
dec
lods
jb
dec
xor
insb
out
jl
mov
bound
clc
rclb
pop
push
jge
sbb
in
mov
enter
mov
jg
adc
cmp
cs
push
rsqrtps
scas
lahf
fdivrp
xchg
push
gs
mov
mov
pop
mov
mov
enter
ljmp
sub
fsts
jae
aad
stos
push
sub
push
sub
lods
lret
cltd
mov
imul
add
mov
stc
and
inc
push
jo
icebp
push
ret
sbbb
loop
add
push
ljmp
mov
iret
icebp
cs
push
xor
and
call
loopne
ret
mov
jns
addr16
cmp
dec
addr16
lock
jno
stos
aas
outsl
test
mov
jae
jb
jbe
call
loopne
fsubl
push
xchg
mov
outsl
pop
inc
push
jae
sbb
pop
scas
out
mov
cmc
mov
outsb
mov
cli
push
aas
iret
cmpsl
push
sub
or
adc
clc
push
sahf
fmull
popa
dec
mov
add
roll
sbbl
rcrb
out
push
cmp
or
adc
ss
push
insl
popa
pop
cwtl
and
xchg
fnsave
lret
decl
movsb
xor
cli
clc
pop
pop
cmpsb
mov
sahf
add
or
jmp
sub
lret
inc
push
xchg
or
inc
add
add
jb
lret
xlat
in
adc
or
and
add
cmc
pushf
rcrb
and
and
out
jae
and
inc
adc
cmp
divb
xchg
sub
sbb
rcr
sbb
add
mov
sub
sub
js
test
sbb
adcl
mov
dec
dec
je
jmp
inc
xlat
sbb
adc
movsb
and
mov
add
mov
dec
or
ret
or
cmp
add
mov
sub
mov
jp
xchg
inc
sub
adcb
sbb
movsl
push
test
push
out
rcl
add
xchg
xchg
cmc
mov
push
xchg
sbb
jbe
andb
out
mov
dec
data16
mov
and
out
adc
or
or
sbb
repz
repnz
cmc
out
inc
or
mov
nop
in
fdivrs
push
test
inc
pop
les
mov
das
loopne
xchg
xor
imul
popf
aad
sbb
jecxz
clc
and
pop
repz
mov
add
push
xchg
lds
xor
jno
pop
sub
sarl
sub
mov
inc
jae
das
fstp
adc
add
pushf
or
jl
int
jns
rcr
cmp
sub
sub
push
mov
mov
stos
jae
sti
mov
mov
decb
gs
lcall
adc
inc
xor
jne
les
fsub
fs
test
aam
lods
dec
scas
xchg
fidivrs
xor
jle
push
ret
es
out
sbb
xor
cmc
xor
jge
xor
int3
or
dec
xchg
adc
jnp
pop
add
leave
push
loop
test
inc
mov
orl
add
jg
xchg
outsb
add
push
and
mov
xchg
xorl
jp
fadds
cmpsb
shrb
xchg
enter
push
bswap
es
cmpsb
adc
and
jne
and
std
jb
and
adc
cmp
fsubl
int
lods
leave
push
js
outsb
lahf
mov
jl
in
xchg
pop
inc
push
cli
mov
je
test
push
mov
out
lcall
mov
push
jg
ljmp
rorb
cwtl
js
lret
xchg
sti
es
xchg
mov
out
lea
orl
ret
pop
dec
out
rolb
jmp
int3
sbb
stos
mov
push
push
movsl
add
sub
inc
or
mov
push
test
cmp
imul
stos
or
or
jbe
jmp
cmpsb
jns
xor
negb
jmp
enter
ljmp
stos
loopne
inc
call
in
lods
test
mov
xlat
adc
lods
jns
movsb
jno
int
push
inc
lds
ljmp
xchg
shlb
pop
dec
mov
pop
sbb
rorb
nop
mov
xor
pop
push
push
nop
push
jne
or
daa
push
cmp
call
xchg
lahf
aad
mov
push
xor
icebp
and
dec
mov
verw
leavew
je
sub
in
mov
cli
dec
int3
pop
and
lret
ret
mov
pop
cs
xor
or
mov
shll
pushf
mov
jp
adc
dec
lahf
pusha
pop
dec
or
lea
xor
leave
mov
mov
stos
out
test
xlat
push
xchg
roll
mov
incl
add
popa
imul
fiadds
into
cmpsl
call
pop
xchg
cwtl
into
lcall
and
shll
mov
ds
test
ret
add
inc
ret
mov
push
xchg
xor
pushf
xchg
xchg
in
sarb
mov
and
stc
jg
ljmp
insb
lea
ljmp
push
test
xor
xchg
mov
jecxz
movsb
scas
cmp
mov
mov
lcall
add
or
fdivs
addr16
fistl
es
and
ret
jle
pop
stos
sar
out
push
lods
push
lret
std
inc
mov
lods
push
jb
cltd
cli
int
mov
lods
and
fimull
nop
inc
pop
outsb
jne
cmp
jl
sub
jecxz
inc
scas
jl
clc
push
adc
cltd
cwtl
mov
dec
mov
jecxz
push
cltd
pop
sub
loope
lret
jno
push
loopne
in
sub
je
mov
dec
jne
lcall
cmp
aam
loope
outsl
cmc
lds
hlt
pop
ds
mov
inc
ds
cmp
clc
or
sbb
cmpsl
mov
adc
mov
sub
sbbl
cmc
push
scas
xchg
lret
jb
push
pop
pop
jmp
jno
loopne
ret
push
push
imul
push
insb
mov
xchg
mov
jecxz
cld
mov
popa
addr16
xchg
pop
cmp
push
push
fadds
loope
xor
loop
loopne
ds
sub
jg
or
jo
xchg
out
jmp
pop
lret
mov
gs
xchg
xor
cld
ficomps
loop
rcrb
cmc
xor
pop
outsl
inc
xor
cmpsb
inc
inc
jbe
mov
jb,pn
and
or
andl
xorl
fcoml
sub
out
sub
jnp
mov
and
sub
cld
bound
mov
adcl
data16
add
pop
ret
fnstsw
adc
addr16
jne
mov
daa
into
insb
jecxz
mov
pop
pop
int
es
pushf
push
pop
pop
cmpsl
inc
addb
lods
xchg
inc
cmp
dec
ja
loopne
pop
stos
pop
or
mov
xchg
jmp
ret
add
push
push
les
mov
jmp
cmp
call
mov
inc
rolb
xor
mov
mov
adc
sbbb
notb
dec
test
xchg
cmp
cmp
fs
adc
xor
dec
sbb
lods
pop
sub
fadds
sbb
adc
mov
jle
cmp
jmp
sub
scas
je
push
inc
push
fisubs
fsts
mov
mov
dec
dec
sub
adc
inc
add
mov
ja
or
sbb
testl
aam
test
and
push
pop
or
and
fdivs
pop
ljmp
sbbb
incb
arpl
js
mov
sbb
adc
fnstsw
fdivl
cmpl
add
xchg
pop
sahf
xlat
and
sub
out
push
shll
and
mov
add
movsb
scas
out
push
ficompl
push
mov
pop
popl
test
cmp
lea
icebp
ja
popa
cmp
sub
xor
mov
fs
mov
cwtl
mov
push
incl
pop
pop
xchg
sbbb
xchg
push
cmc
xor
cltd
addb
mov
sbb
outsl
out
ret
mov
push
out
into
pusha
imul
mov
or
mov
in
repnz
adc
mov
mov
daa
icebp
out
cmp
maxps
push
incl
sbb
iret
adc
sarb
ret
add
call
xchg
lret
out
sub
cld
mov
std
out
cmp
jae
push
sar
repz
mov
cmp
add
or
jnp
fnstsw
ret
mov
std
mov
iret
and
jg
xchg
int3
test
and
add
jne
xchg
pusha
jbe
cmpb
mov
push
incl
popa
cmp
movsb
cs
test
or
dec
push
adc
mov
sub
jmp
les
pop
sahf
fs
clc
push
shl
pushf
daa
mov
es
popf
sarb
push
xor
testl
jp
mov
sub
fxch
inc
outsl
xchg
push
roll
ja
or
sbbl
je
sub
repnz
or
loope
mov
and
aam
pop
dec
out
out
pop
cmp
xchg
dec
cmp
daa
xor
push
cmpsb
fcomp
call
fstl
push
or
jl
pop
sub
sbb
inc
mov
mov
loope
sub
popf
lret
lret
mov
aas
push
das
insl
xchg
jge
jmp
les
loope
movsl
xchg
xor
and
jmp
mov
push
xchg
pop
fdivrp
out
mov
arpl
stos
adc
mov
pop
fisttpll
pop
call
add
push
std
daa
mov
inc
cmp
imul
outsl
xchg
or
pushf
jno
jnp
adc
fmull
add
lds
push
sbb
pop
inc
xchg
sti
add
lcall
clc
mov
sahf
mov
ds
ficoms
mov
dec
das
inc
jmp
push
mov
push
sbb
sub
jecxz
lret
ret
call
cmp
movsl
sbb
cwtl
add
xchg
xchg
mov
scas
mov
sub
shll
sub
sub
bound
out
andl
fdivr
out
int3
push
loopne
push
scas
jne
ret
mov
push
xorl
sti
sub
cmp
sti
or
out
cmp
jge
movsl
inc
jmp
add
mov
movl
inc
fucomi
inc
xchg
xchg
add
or
popa
testl
mov
decb
sbb
add
popf
jns
mov
inc
jbe
add
cmc
es
imul
jl
not
sbb
outsl
stc
push
cmp
sbb
mov
add
inc
xor
fbld
or
std
in
inc
cmp
push
clc
xchg
dec
sbb
pusha
xchg
movsl
jbe
adc
rol
aad
xrelease
jae
or
test
pop
adc
inc
or
iret
push
lcall
sbb
repz
xor
or
movsb
mov
jb
mov
aam
aam
dec
and
and
mov
inc
pop
hlt
push
fmul
mov
adcb
orb
jg
mov
in
dec
adc
xchg
pushf
fwait
pop
imul
gs
mov
ja
insl
xor
pushf
pop
mov
push
sub
xor
xor
sub
sbbb
popa
inc
notl
cli
push
nop
iret
pop
fwait
repz
es
loop
stos
xor
xchg
sub
lds
dec
sbb
inc
cmp
dec
mov
out
cmp
xor
pop
mov
testb
stos
fdivl
imul
mov
xor
mov
sub
xchg
je
jecxz
push
dec
test
cwtl
dec
mov
lds
fstps
inc
fs
stos
stc
and
mov
data16
sub
rclb
push
call
neg
lock
mov
adc
xorb
stc
dec
ret
cmp
fmul
xor
mov
js
repz
or
sbb
lea
jb
or
mov
mov
jo
jb
iret
filds
pop
dec
jb
xchg
inc
imul
adc
fisubs
nop
jp
or
pop
test
imul
mov
sub
stos
sub
loop
inc
xchg
mov
push
repnz
sbb
fisubl
cwtl
push
pop
mov
ljmp
pop
data16
lods
add
sub
fsubrs
sbb
push
xchg
fmull
test
and
sub
push
repnz
repnz
sub
insb
fwait
pop
in
rolb
inc
arpl
popa
inc
lock
sub
add
sub
subb
push
dec
push
cwtl
outsl
std
bound
xchg
std
mov
iret
dec
and
adc
mov
and
xor
test
dec
and
imul
jp
sub
cmc
push
scas
push
dec
std
stc
mov
dec
insb
pop
movsb
xor
je
gs
ret
cmp
push
stos
sbb
jno
test
or
sbb
mov
int
mov
in
xlat
outsb
aas
mov
aam
xchg
pushf
xchg
popl
int3
int
mov
ds
xor
and
xor
xor
arpl
scas
lods
xor
stc
xor
sub
mov
aad
xor
in
scas
fsubrp
lods
push
adc
out
push
sbb
ret
movsl
adc
in
mov
dec
push
les
aam
nop
les
push
xchg
jbe
dec
cmp
je
dec
dec
xor
repnz
cmp
inc
mov
ss
add
mov
mov
sbb
test
mov
xchg
pushf
xchg
fsubrl
lds
iret
mov
push
cmp
orl
scas
and
sub
add
in
mov
lahf
mov
mov
outsb
inc
adc
notl
push
xbegin
xor
mov
jmp
pop
into
mov
xchg
lret
fsubl
insl
xchg
mov
mov
repz
mov
pushf
add
xor
sub
out
cmp
dec
and
addl
mov
cltd
gs
push
push
lret
inc
ret
and
in
and
incb
mov
and
mov
dec
push
leave
fstpt
loope
pop
imulb
cmc
shl
pop
mov
dec
pop
outsl
fisttpll
pop
mov
popa
push
lods
inc
in
sbb
adc
shrb
pop
jge
negb
outsl
fistpl
clc
pop
dec
add
enter
push
inc
sti
or
in
xor
push
shrl
mov
out
ds
cmpsl
add
das
neg
fisubl
xchg
jmp
ljmp
rcrl
xor
inc
fbstp
jp
mov
pop
loop
pusha
mov
push
and
pop
andl
jne
stos
mov
movsb
call
dec
lret
xor
mov
cld
jae
sbb
cmp
enter
and
or
sbb
pop
and
lret
popf
and
and
ja
pop
mov
mov
cmpsb
or
mov
mov
xchg
pusha
cmp
push
xor
dec
lcall
scas
rorl
push
int3
jb
mov
call
es
xchg
push
imul
out
test
in
xor
jge
mov
mov
jno
jb
dec
clc
rcl
pop
out
xchg
dec
fdivl
push
pop
test
cmp
shrl
aas
push
test
outsl
push
push
add
mov
push
inc
xchg
std
lds
mov
jl
out
xchg
mov
ficoms
jae
mov
mov
mulb
sub
mov
repz
daa
and
jl
test
scas
mov
stc
jl
sbb
jmp
fwait
mov
lahf
adc
or
adc
xor
lahf
lahf
popf
mov
fisttpll
arpl
cs
mov
sbb
or
xchg
sti
cmc
sub
in
push
clc
jnp
jns
hlt
movsb
lret
dec
adc
ret
out
rolb
mov
xor
dec
fs
dec
pop
loop
pop
jne
mov
mov
xlat
lock
sahf
ret
fbstp
push
lret
mov
or
mov
aam
mov
nop
xchg
jmp
aas
mov
mov
mov
jl
arpl
jne
imul
cmp
sub
stos
rcrl
mov
push
aad
aaa
popf
cmp
cmp
scas
push
ljmp
xchg
jo
scas
and
clc
mov
inc
pop
jl
jnp
pop
pop
or
jge
fidivl
int
pop
fcomp
shlb
lods
add
jg
add
mov
ficoms
push
rolb
jne
aad
mov
imul
sub
fnstsw
push
add
dec
daa
cwtl
lods
or
jge
aam
andl
mov
test
icebp
mov
mov
cmp
inc
and
xchg
mov
sbb
or
aad
inc
jo
dec
in
xchg
inc
mov
cmp
xchg
xor
sahf
jo
inc
rcl
fidivs
lret
jp
or
fcmovnb
gs
mov
add
ss
aaa
pop
pusha
dec
xor
repz
ret
cmpsb
xor
jbe
pop
dec
jp
jb
loope
popa
leave
insl
xlat
jns
pop
shrl
cmp
pop
and
outsl
or
push
cmp
add
pop
inc
mov
adc
enter
aas
cld
cmp
test
sub
push
test
add
cmpl
cmpb
decl
adc
mov
lea
insl
push
push
cmpsb
and
push
or
bound
orl
mov
daa
mov
and
mov
insl
cmp
push
add
movsb
movsl
fcompl
push
in
mov
jg
jge
sbb
push
jl
shlb
mov
nop
push
loope
xchg
push
adc
cmp
push
cld
push
fdivl
loop
cmp
imul
test
pop
daa
cld
sbb
xor
pusha
cs
push
mov
xor
insl
sbb
bound
je
mov
cmp
es
imul
stos
jg
fisubrs
cmp
test
mov
xor
mov
es
push
and
mov
dec
js
int3
mov
aaa
mov
stos
lea
mov
gs
sub
push
les
loop
jecxz
mov
subb
cmpl
xor
data16
lret
test
rclb
xor
push
aam
add
or
imul
push
gs
or
sub
loope
arpl
js
push
mov
sbb
inc
xor
mov
pop
mov
xchg
add
sbb
mov
pushf
sarb
or
in
sub
sti
cmp
jne
popa
cld
mov
ret
cmp
inc
pop
mov
lahf
and
mov
cmovb
or
push
fwait
dec
repz
jg
mov
cld
mov
pushf
sub
repz
sbbb
in
mov
push
jmp
cs
push
inc
nop
xchg
mov
cmp
jno
imul
in
sti
or
outsl
fisubrl
xchg
pop
jne,pn
mov
pushf
les
fdivs
pop
lret
ret
jge
mov
mov
jo
imul
mov
pop
arpl
mov
cmp
sbb
jno
sbb
jge
cwtl
lcall
mul
cld
aam
lods
jbe
leave
cmpsb
push
addr16
xor
lods
xchg
in
sahf
jbe
call
push
add
xor
lahf
dec
hlt
jae
mov
mov
xorl
pop
outsb
lods
stc
sub
rclb
add
sarb
and
fcompl
mov
mov
push
jo
mov
rcl
push
or
popa
dec
pop
lock
cmp
mov
add
inc
das
add
dec
movsl
xchg
dec
cmp
mov
mov
inc
pop
sbb
lea
xchg
adc
out
mov
xor
dec
loopne
fwait
adc
gs
cmp
push
mov
aas
or
push
ret
stc
mov
cmp
adc
cmovo
sub
sahf
jp
je
dec
in
pop
addr16
sub
push
int3
roll
sbb
or
xor
jmp
adc
cmp
cmc
rclb
js
cmp
sub
movsl
int
stos
sub
lock
sbb
scas
mov
fcompl
adc
and
sbb
mov
mov
stc
cmp
cs
sub
add
add
inc
xchg
pop
or
dec
jbe
mov
or
mov
enter
mov
stc
out
mov
sbb
sub
inc
lcall
sub
jge
js
sub
pop
mov
sub
dec
out
das
or
test
pusha
xchg
aam
xorb
lods
cs
fwait
jno
xor
fldenv
fstpt
inc
mov
dec
icebp
std
fstl
mov
icebp
ret
cmp
sahf
mov
xchg
cld
inc
and
in
dec
xchg
pop
in
or
ss
sbb
in
lcall
inc
xor
inc
push
cmp
pop
icebp
pop
push
and
cltd
mov
jecxz
or
pop
mov
xor
xchg
loop
push
cmpsb
fs
mov
lods
andb
aaa
and
push
lcall
into
imul
fsqrt
lret
into
aam
pop
leave
and
stc
fcmovnu
or
cmp
and
arpl
and
icebp
and
setl
bound
sub
dec
sbb
ret
mov
imul
scas
andb
xor
in
dec
dec
ja
sti
loope
and
popf
jnp
movsl
in
jecxz
popf
mov
shrb
sbb
jb
rcll
pop
fnstsw
cmpsb
push
push
int
mov
xor
push
decl
mull
dec
sbbb
cmp
nop
test
popa
mov
push
clc
mov
dec
daa
xchg
sub
dec
inc
fimull
outsl
call
divl
or
xchg
pop
sbb
dec
xorb
mov
mov
adc
mov
lea
into
add
pop
mov
add
and
or
cmp
jb
mov
sbb
stc
repz
mov
pusha
inc
push
sbb
pusha
loop
hlt
and
xchg
and
sub
pop
or
imul
gs
pop
mov
pop
shl
pop
push
mov
fxch
push
sub
xor
pop
mov
adc
mov
mov
or
mov
jae
jo
mov
les
and
fucomi
adc
jbe
cmpb
mov
inc
pusha
mov
cmp
scas
cmp
and
stc
lds
and
and
sub
inc
xor
pop
and
aas
sub
test
clc
and
xchg
push
pop
push
and
or
dec
pop
mov
out
outsb
leave
movsl
sbbb
loope
mov
test
mov
dec
jno
inc
ds
and
adc
lret
roll
pop
pushf
jmp
repnz
cltd
and
sbb
mov
mov
lret
jle
aam
add
lret
sahf
in
les
lcall
lcall
inc
in
and
jge
mov
in
test
cmp
adc
movsl
addr16
mov
sbb
mov
into
arpl
dec
jae
inc
mov
stc
das
dec
dec
loope
popf
mov
push
scas
leave
push
inc
aad
js
cwtl
jmp
in
pusha
insl
cltd
mov
xchg
paddusw
sbb
ljmp
xor
ds
insl
iret
ljmp
outsl
mov
adc
std
xchg
loop
sti
imul
popa
test
stos
jge
lcall
lea
mov
dec
aas
cmp
xchg
xor
imul
addr16
jp
add
or
outsb
sub
lcall
ds
push
cld
into
dec
or
movsb
fs
push
lcall
xor
mov
stos
add
in
in
out
jge
cmpsl
dec
or
adcl
jmp
dec
xor
movsb
in
sbb
repnz
lret
xlat
fstpl
inc
xor
jae
xorl
xor
in
aaa
hlt
iret
xchg
int
aas
out
stos
filds
dec
loope
cmp
mov
add
fsubrl
ffreep
shrb
jge
inc
pop
mov
std
sbb
stc
fucomp
xor
dec
aad
fidivrl
aaa
xor
sub
dec
xlat
dec
enter
or
xchg
insl
test
sahf
sbbb
sbb
ja
aam
inc
imul
in
add
movsl
cmp
add
dec
sahf
xchg
sti
hlt
add
movsl
jbe
push
inc
xchg
inc
cmp
fistps
rcrl
inc
push
jecxz
mov
into
fadds
pop
nop
movsb
cmp
movsb
push
sub
pushl
inc
ficompl
loope
cmp
sub
pop
bound
mov
push
in
cld
jmp
push
sbb
dec
mov
mov
int
push
imulb
xor
xor
xchg
out
xchg
mov
loop
add
xchg
popa
aam
mov
pushf
fcoms
je
push
fimuls
shr
or
xchg
pop
mov
mov
xchg
push
cmp
mov
dec
and
sbb
or
xlat
cmc
add
dec
push
push
and
push
adc
adc
andl
push
or
ljmp
sub
cmpb
roll
dec
fwait
shl
fdivl
mov
comiss
add
jmp
in
lahf
pop
fiadds
jae
mov
mov
mov
jae
sbb
sbb
add
stc
pop
cmp
call
inc
cmpsb
jbe
fbstp
push
gs
sbb
leave
je
es
jns
pushf
mov
lods
sbb
and
xor
scas
rolb
cltd
pop
mov
inc
fistps
int3
call
arpl
divb
push
sti
jl
mov
ret
jge
xchg
mov
sub
pop
inc
fsubp
js
adcl
aas
and
xor
loop
call
and
adc
add
std
fsubl
dec
or
mov
fnstcw
inc
hlt
sub
fs
cmp
int3
jmp
jno
sbb
jae
push
jmp
inc
es
das
scas
dec
pop
cld
stos
xchg
mov
mov
dec
dec
pop
pop
or
xor
test
mov
sahf
xchg
add
pop
test
clc
mov
call
pusha
fstps
mov
mov
daa
mov
sti
dec
xchg
or
sbb
fistps
es
sbb
in
mov
lret
divb
xor
mov
xchg
in
mov
fdivl
adcb
adc
lahf
lods
jge
mov
ret
mov
les
test
push
push
mov
mov
xlat
xor
jb
lret
xchg
jle
adc
es
mov
fisubs
push
lret
jnp
mov
stos
sub
sub
aaa
es
dec
lock
inc
insb
push
mov
mov
sbb
xor
movb
sti
adc
daa
push
mov
lret
sbb
pushf
insb
into
loop
fiadds
lret
in
sub
addb
stos
adc
xchg
cmp
cmp
cmpsb
pop
jns
mov
cmp
cwtl
adcb
mov
mov
push
gs
cld
or
mov
out
loope
mov
scas
jno
mov
mov
mov
pop
popa
sarl
jp
pop
push
cmp
and
pop
stc
ror
fisubs
or
aaa
out
mov
shrl
xor
aam
cs
out
sbb
xor
pop
addl
std
mov
or
pushf
mov
push
mov
sahf
jno
daa
lcall
jb
sub
push
push
xor
jae
inc
sub
inc
cmc
stc
pop
out
pushl
lods
lret
imul
scas
jne
cmpsb
mov
push
inc
pop
aad
pop
sub
add
xchg
lods
sub
ja
push
rclb
or
movsl
or
fsubl
nop
popf
sti
jge
fdivl
mov
add
negl
jae
sub
adc
add
xor
out
loop
cmpsl
dec
pushf
popa
xor
adc
jl
push
push
pop
jno
pop
loope
frstor
jbe
ret
insb
insl
in
and
pop
mov
mul
int3
push
fcmovb
xchg
pop
aas
push
push
xor
and
and
jl
mov
insb
in
mov
je
lret
or
or
inc
mov
imul
fidivl
xor
scas
or
or
add
adc
mov
imul
shlb
dec
pop
mov
dec
pop
in
push
arpl
dec
mov
adc
lret
mov
cmp
xchg
mov
loope
mov
jns
jnp
add
mov
cli
sub
cli
inc
xlat
in
das
icebp
in
loope
cli
repnz
cmp
mov
pop
mov
dec
cmp
jns
sub
sbb
adc
pop
dec
imul
aaa
dec
sbb
jo
std
hlt
push
sbb
bswap
sahf
js
pop
sub
clc
mov
pop
and
pop
add
mov
popf
test
icebp
dec
imul
mov
push
inc
lcall
xchg
xchg
ljmp
mov
dec
mov
rcl
gs
xchg
cmpsl
aad
cs
shll
mov
sarl
mov
xchg
add
dec
add
xchg
nopl
or
push
rorl
or
enter
sub
in
fcmovnb
sbb
jb
rcrb
int3
and
jnp
push
and
jne
int
cmpsl
fisttpl
mov
adc
popa
test
xor
dec
dec
clc
jae
cmp
pop
mov
xorps
sbb
inc
mov
xchg
pop
and
frstor
xor
jecxz
lcall
mov
add
dec
push
xor
mov
push
cmp
lds
pusha
outsl
rolb
xchg
pop
ret
adc
inc
or
arpl
mov
stos
jge
jbe
dec
ret
enter
fsubrs
ret
scas
push
sbb
shrl
into
outsb
cld
ja
stos
out
sbb
out
pop
sbb
repz
push
and
fadd
je
call
and
test
pop
mulb
popa
bound
call
jno
sub
mov
sbb
jne
dec
jo
lea
movsb
pop
cmc
mov
testl
ljmp
mov
xor
imul
popf
lcall
hlt
jp
pop
sub
mov
fstpt
inc
repz
pmulhuw
lret
xchg
mov
xor
dec
or
mov
ret
jmp
mov
fldt
push
ds
adc
push
imul
cmpsl
push
jb
xor
pushf
dec
xchg
xchg
popf
stos
pop
lock
and
mov
mov
xlat
xor
in
fstpl
cmp
mov
sti
aas
mov
or
imul
sti
icebp
cli
loope
sahf
push
pop
mov
sbb
inc
ror
jne
push
push
jp
adc
dec
push
jae
cmp
push
pop
and
sbb
pop
sub
cmp
lret
mov
dec
sub
push
mov
popa
lcall
add
shll
ja
push
jge
mov
lcall
jge
mov
insb
sbb
lret
ret
mov
xor
mov
xchg
xchg
insb
jge
test
mov
adc
xor
push
rcll
mov
cmp
jnp
arpl
hlt
sbb
bound
cmp
jno
cli
loopne
fucomip
add
outsw
xchg
jecxz
sbb
lret
mov
das
jp
mov
jno
push
ds
lods
icebp
mov
ret
xor
or
mov
or
scas
pop
and
pop
sbb
mov
es
incb
repnz
sub
fistl
fsubrl
stos
xor
jae
adc
aaa
add
aaa
xchg
push
pop
xor
shlb
xchg
push
xchg
bound
jle
mov
xchg
mov
scas
negb
jp
fsts
popf
mov
pusha
das
adc
jno
jo
push
push
inc
sub
fdivr
xchg
pop
mov
cltd
imul
pop
loope
popf
and
sbbl
inc
cmp
loop
add
xchg
xchg
xchg
andl
lret
xchg
or
not
add
jecxz
push
or
jns
insl
mov
jnp
ljmp
test
jle
push
aas
xchg
scas
jle
imul
enter
cs
cwtl
jge
cmpsl
fisubrl
xchg
rclb
inc
mov
cmpsb
xchg
xor
and
sub
data16
jecxz
sub
cmp
pop
or
mov
dec
adc
fisubs
aaa
lcall
rcll
push
mov
out
ss
and
lods
flds
mov
inc
idivb
pop
ret
cmp
jle
orl
scas
add
add
lret
mov
lds
or
fdivr
add
out
imul
test
lret
rolb
pusha
bound
das
ja
lock
stos
cld
dec
imull
rsm
je
popf
imul
cmp
je
in
repnz
insb
in
shlb
xchg
cld
cmc
inc
pop
dec
sahf
enter
test
add
push
int3
push
fistl
jp
push
cs
aad
cltd
push
test
inc
aad
cmp
add
and
fcmovnu
loopne
ficompl
ljmp
test
adc
mov
push
cwtd
sbb
aam
xor
repnz
inc
ljmp
mov
in
mov
popf
cs
sub
aaa
lods
adc
pop
xchg
movsb
push
and
mov
or
pop
adc
sub
in
jmp
daa
dec
jne
sub
loopne
mov
mov
jmp
in
pop
mov
sbb
mov
scas
adc
rorl
jl
nop
or
add
js
push
mov
ret
xchg
int3
push
jecxz
or
nop
loope
pop
xchg
dec
lret
imul
push
xor
das
jns
pop
inc
ds
push
outsb
push
loopne
or
in
push
sbb
sub
mov
movb
aaa
push
mov
jne
mov
jbe
psllq
int
mov
adc
leave
fnsave
shlb
cmpsb
icebp
jae
test
pop
ds
pop
or
adc
xchg
push
in
lcallw
sbb
sub
fld
movl
mov
hlt
or
mov
adc
int3
lods
sbb
or
xchg
fsub
bound
xchg
scas
jg
aad
inc
sub
stos
xchg
cld
mov
xchg
and
and
add
iret
jns
out
cli
mov
insb
mov
mov
push
add
cs
mov
out
jo
sbb
scas
icebp
mov
inc
movsb
and
jo
fldl
or
add
mov
out
lock
mov
mov
xchg
add
ret
cmc
dec
jbe
idivb
mov
and
sub
push
pop
fmuls
pop
dec
or
testl
roll
adc
pop
xor
xor
xchg
lods
aam
aam
sahf
mov
push
test
inc
fcomps
sub
cmpsl
roll
pop
lahf
jp
arpl
or
aaa
jge
add
fwait
test
in
lcall
sub
pusha
push
lret
inc
enter
sbb
push
mov
repnz
loop
sti
lea
xchg
mov
shrl
sahf
mov
in
inc
sub
cld
push
mov
arpl
out
push
sahf
xor
inc
add
rcrl
pop
push
sub
int
push
cmp
sub
jmp
pop
mov
std
jl
jo
adc
test
lods
andb
movb
inc
xor
or
add
int3
and
sbb
mov
mov
cld
fistl
mov
adc
clc
pop
out
in
push
pop
mov
or
inc
sub
lcall
sbb
bound
xor
fmull
jl
and
push
adc
inc
mov
movsl
pop
sbb
psubsb
cmp
adc
pop
pop
mov
sbb
or
push
lock
push
mov
test
inc
xor
add
ds
mov
ror
pop
outsl
jmp
negb
stc
ret
sbb
add
xchg
inc
mov
dec
test
inc
mov
repz
sti
in
cmp
iret
xchg
mov
es
popa
adc
pop
popa
enter
loop
pop
lret
scas
into
scas
lock
sub
xchg
ret
test
dec
push
inc
hlt
fstpl
insb
icebp
pop
push
mov
ljmp
iret
mov
mov
adc
mov
jecxz
mov
int3
mov
xor
fcomip
mov
add
push
cmp
int
push
mov
outsl
les
decb
xchg
test
push
add
xchg
sti
xor
js
dec
inc
outsb
scas
sub
int3
outsb
dec
gs
aam
dec
icebp
adc
dec
sbb
sub
and
out
daa
lods
rol
mov
in
pop
jb
or
sbb
sbb
imul
ds
sbb
sbb
sub
sub
inc
loopne
push
pop
dec
popf
shlb
jne
pop
push
test
cmc
mov
mov
in
cmc
jecxz
pusha
inc
test
cld
mov
or
test
addb
push
ja
jmp
insb
jnp
aam
outsb
adc
idivl
scas
pop
popf
popf
adc
mov
xorb
arpl
adc
jecxz
adc
mov
imul
js
pop
push
inc
andb
or
jecxz
sbbb
sbb
dec
adc
roll
hlt
leave
fcomi
cltd
jecxz
inc
inc
jmp
imul
add
sbb
pop
cmp
rcrl
lret
movsb
push
and
or
sub
pop
mov
jbe
cmc
sbb
xor
or
sbb
xchg
inc
in
pop
out
fstpl
leave
in
fldt
sbb
xchg
push
in
sahf
ss
push
out
aad
or
jo
jbe
jo
rorb
xchg
lret
mov
mov
scas
divb
enter
dec
addr16
push
cmp
mov
pop
iret
adc
nop
subl
daa
outsl
imul
lea
scas
mov
ret
xchg
outsb
ljmp
mov
in
mov
mov
push
pop
shlb
int3
and
shll
testb
fdivl
testl
icebp
fs
xor
sub
mov
push
lcall
ja
xchg
fstl
ret
sbb
xchg
pop
and
dec
and
lds
mov
out
or
cmpsl
int
icebp
cmc
inc
pop
movb
mov
mov
cmc
mov
mov
adc
adc
arpl
testb
sbb
shlb
rcll
lret
mov
jbe
les
std
cli
cs
mov
je
mov
sbb
pop
negb
mov
jne
xor
push
notb
push
ret
jne
icebp
push
push
push
out
arpl
jge
std
lahf
icebp
dec
mov
mov
xchg
pushf
stos
dec
adc
pop
rcll
nop
fisubrl
cmp
jne
data16
nop
sbb
cmp
loope
xor
fwait
test
inc
repnz
lcall
adc
xlat
nop
lret
and
mov
adc
mov
add
test
jno
xchg
lds
jge
jmp
out
cmp
in
jbe
mov
fildll
cmpsb
mov
lods
xchg
clc
inc
or
mov
mov
push
out
leave
jae
xchg
mov
fldt
ds
movsb
idivl
sub
cli
sbb
adc
mov
cmp
incb
jno
jnp
out
out
outsb
cmp
cmpsb
sbb
shll
cmp
xor
aas
daa
xor
js
xor
sbb
jle
sbb
pop
add
dec
mov
hlt
outsb
and
test
adc
xchg
add
or
mov
sbb
xor
scas
int3
jge
mov
sub
cmp
mov
lret
mov
es
mov
hlt
popf
rcll
dec
loope
xchg
mov
sub
js
pop
adc
sub
cmp
cld
sub
arpl
sbb
fstps
addr16
push
cmp
cli
add
push
cmp
test
out
fnstenv
roll
lret
or
pop
ret
dec
pop
aad
inc
cmpsl
dec
fnop
sbb
add
pop
jo
push
jnp
call
xchg
pop
xor
cmpsb
fcomi
mov
push
add
pop
out
test
and
add
sahf
push
pop
popf
push
out
notl
sub
mov
or
sub
jle
in
push
stc
mov
push
das
vcomiss
mov
test
xchg
lcall
popa
mov
or
popa
lret
mov
and
xorl
add
jecxz
adc
lahf
int3
sbb
or
enter
js
insl
push
sti
jae
int
outsl
add
out
jecxz
into
push
cmpsl
xchg
mov
mov
sbb
cmc
outsl
pop
pop
nop
adc
or
stc
dec
ljmp
cs
add
and
aam
pop
push
jge
rcrl
xor
insb
xor
aam
pop
xlat
inc
xchg
sbb
xchg
dec
in
jg
push
xor
sub
shrl
shlb
lds
clc
jmp
xor
scas
inc
adc
lods
pop
and
das
repnz
mov
data16
cmpsb
mov
xchg
lea
mov
jmp
or
add
xchg
push
cmp
out
dec
push
repnz
clc
sbb
mov
xchg
jno
sbb
cmp
xrelease
xor
mov
loopne
nop
inc
xchg
adc
push
xor
xchg
inc
sti
lods
mov
mov
mov
fwait
div
out
adc
insl
cld
mov
mov
xchg
mov
xchg
in
repnz
push
ds
inc
push
sub
adc
sub
add
nop
call
repz
adcl
sub
adcl
aaa
nop
mov
mov
mov
adc
data16
xor
pop
fs
xlat
xchg
cltd
push
outsl
inc
sub
adc
mov
adc
ret
mov
in
push
cwtl
mov
rclb
push
mov
jae
andl
jl
or
sub
xlat
pop
out
repnz
loopne
sbb
inc
es
scas
xor
adc
fs
in
outsl
outsl
jo
popf
mov
mov
pop
pusha
mov
cs
lods
fs
or
rcl
xor
test
dec
insb
sbb
mov
mov
std
mov
xor
mov
pop
lods
or
add
fxch
fistl
inc
aaa
loopne
cli
stc
dec
jo
inc
mov
mov
loop
jecxz
mov
imul
invd
shlb
or
add
call
movsb
xor
dec
sbb
cmp
outsb
mov
adc
cmp
aad
icebp
arpl
ret
out
cmp
push
pop
aam
repz
mov
imul
in
gs
push
paddusw
lahf
or
cmp
cs
add
mov
test
shlb
pop
into
aam
pop
not
mov
mov
call
lds
fwait
sub
cmpsb
jmp
jge
mov
pop
aad
sbbb
mov
lret
inc
mov
bound
mulb
dec
cmp
add
dec
pop
pop
sub
imul
call
sub
cs
jge
test
xlat
es
scas
enter
xor
mov
mov
sub
and
push
dec
xchg
push
push
sbb
stos
add
cmc
sub
jmp
lea
cltd
notb
inc
aaa
pop
inc
ja
cmp
or
cmpl
daa
dec
lock
cmc
out
mov
sbb
ret
push
subl
in
and
movsl
in
clc
cwtl
jle
dec
pop
mov
cmp
mov
jbe
xor
ret
fldenvs
jmp
out
mov
inc
imul
inc
or
pop
fcompl
stc
iret
mov
cmc
adc
in
imul
jbe
test
imul
push
xor
mov
dec
mov
sub
out
pop
add
dec
pop
stos
mov
into
mov
jae
js
jbe
insl
out
lcall
sbb
jle
push
cmp
test
lea
dec
pop
cli
adc
nop
inc
mov
lods
leave
out
adc
negb
addr16
jbe
xchg
fidivs
pusha
lret
inc
xchg
sbb
insb
iret
cmp
cmc
cltd
xchg
fiaddl
pushf
js
pop
inc
push
jno
xchg
ret
push
push
pop
pop
cwtl
add
rolb
mov
and
pop
pop
jnp
ret
in
jo
jb
mov
sti
arpl
jge
fwait
daa
lds
mov
cmp
or
jae
adc
xor
rclb
push
mov
outsl
inc
fwait
mov
add
xchg
pop
and
lret
or
xor
sbb
jbe
and
add
movsb
inc
gs
pop
mov
push
xor
lahf
sbb
lea
inc
dec
stos
cld
mov
cmpsl
sub
test
fisubrl
outsb
iret
enter
cs
ss
testb
repnz
sbb
stos
clc
loop
ljmp
mov
push
push
xor
push
sub
mov
jns
dec
jge
mov
sub
iret
es
and
ss
add
incb
xchg
cli
cltd
add
xor
push
sub
add
jo
cmp
enter
sub
or
sbb
add
mov
jle
scas
fsubrl
scas
stos
xchg
jne
adc
sti
push
lahf
add
out
outsl
inc
cld
xchg
mov
jbe
sub
xor
fbld
xor
push
and
adc
nop
int3
adc
mov
jge
das
fisubrs
fwait
and
push
push
rorb
pop
add
neg
repnz
nop
cli
pop
sbb
fs
mov
adc
fs
pop
pop
push
mov
repnz
or
jne
jmp
mov
cmp
pusha
or
cwtl
loope
and
out
push
mov
fisubs
xchg
jl
add
jl
outsl
cmpsl
stos
inc
fisttpll
mov
loopne
add
roll
fcoml
aas
loop
mov
pop
jl
lcall
cmp
and
add
and
jp
insb
jns
shrl
cld
in
test
mov
xchg
daa
popf
pop
cmp
push
jns
shll
repnz
sbbl
stc
jb
sbb
cs
sahf
push
inc
fadds
push
sub
pop
sub
nop
jmp
lret
hlt
je
test
mov
dec
daa
stos
push
mov
lret
jns
call
outsl
test
imul
cli
outsb
dec
inc
int
inc
cmp
push
inc
jp
std
call
in
jne
out
xchg
ret
cltd
cmp
jbe
adc
fs
mov
iret
icebp
cmp
pop
pop
into
dec
push
popa
outsl
push
dec
inc
lea
or
data16
sbb
fists
cmp
push
inc
xor
cmp
cmp
imul
mov
and
in
aas
mov
rclb
test
mov
jmp
add
mov
jne
addr16
dec
cmp
xor
enter
repz
push
inc
call
fstpl
push
add
and
lock
pop
les
mov
imul
je
test
cmp
or
mov
or
sbb
adc
push
mov
xchg
jae
push
pushf
not
lea
jns
inc
adc
and
pop
cwtl
mov
push
lret
stc
pop
sub
mov
sub
xor
dec
xchg
mov
aas
fwait
dec
pop
sahf
aaa
das
cmp
pop
mov
jmp
inc
or
data16
scas
mov
rcrl
gs
and
mov
scas
adc
mov
outsb
mov
xchg
pop
addb
repnz
mov
rol
pop
loope
testb
adc
xchg
jmp
xor
push
jle
xchg
leave
lods
pusha
ljmp
add
push
push
stos
pop
fwait
cmp
push
lcall
xchg
pop
add
or
add
push
aam
mov
mov
dec
mov
sub
adcb
or
pop
pop
add
xchg
sub
mov
les
inc
or
sbb
jns
loope
mov
cmp
cs
pop
je
or
js
shl
push
or
es
dec
or
test
shr
or
sbb
test
les
ds
pop
sbb
outsl
push
ja
mov
int
inc
mov
fcmovbe
lea
xchg
dec
push
xchg
int3
cli
lock
mov
mov
int
and
popa
xlat
and
hlt
or
mov
into
jmpw
xorb
adc
int
popf
push
testb
divb
lret
jp
inc
sahf
jp
inc
mov
xchg
xchg
xchg
enter
fcoms
rcll
xchg
dec
lret
pop
or
jle
cmp
ja
data16
jge
xchg
pop
cmp
fwait
stos
ds
mov
adcb
out
or
xor
cmp
cmpsb
inc
std
lret
push
sarb
mov
stos
sahf
dec
xorb
ficoms
fmul
je
test
in
jp
std
pop
inc
inc
sub
add
cmpsb
and
xor
sahf
repz
les
push
adc
out
adc
cli
rorl
sti
fiaddl
imul
or
cmpsb
dec
xor
cmpsl
inc
pop
mov
dec
xor
and
adc
xlat
jge
roll
pop
cli
aas
test
sub
pop
cmp
jne
mov
xchg
loope
test
adc
or
and
fwait
cs
xlat
sarb
inc
jl
push
mov
fldenv
cli
mov
div
mov
jbe
adc
dec
loope
aad
movsl
or
inc
outsb
stc
add
sub
test
inc
add
xor
push
xor
fnstsw
mov
xchg
or
clc
mov
push
push
mov
lods
cmpsb
inc
movsb
nop
adc
and
adc
or
mov
pop
imul
mov
sbb
xor
mov
jnp
in
jae
aaa
sbb
jno
aaa
sub
xchg
xor
adc
out
push
mov
xchg
cs
adc
fwait
push
lret
int
jno
and
xchg
sub
gs
test
cmp
jb,pt
mov
cld
int3
add
dec
imul
movsb
jl
sbb
pushf
test
repnz
lcall
xchg
inc
outsl
xchg
push
adc
loop
push
cltd
jne
push
sub
movb
xchg
xchg
jne
lret
leave
sub
js
popf
or
jg
inc
sbb
push
fs
jns
push
push
jle
in
test
push
xor
cmp
cmp
lds
std
mov
xor
xchg
or
and
mov
idivb
mov
imul
xchg
dec
test
lret
aam
pop
aad
inc
in
sub
aaa
subb
mov
insb
adc
jmp
xchg
in
imul
mov
push
jmp
pop
pop
adc
ds
imul
sarb
jae
cmpb
std
pushf
pushf
call
push
sub
mov
iret
xchg
insl
sub
inc
pop
xlat
inc
in
mov
sahf
pop
push
push
repnz
pop
das
inc
aaa
lcall
mov
jne
fbstp
insl
cltd
sub
arpl
ret
ret
adc
dec
cmp
mov
lea
fdivrl
stos
mov
push
mov
add
stc
int
mov
sbb
lods
pop
and
mov
mov
xor
jge
cmp
add
dec
cmpl
and
gs
in
ljmp
mov
inc
popf
ret
inc
fdivrp
lds
jp
mov
or
int
insb
add
pop
jg
fimuls
punpckhdq
adc
sub
test
xor
fnsave
test
push
stos
hlt
push
mov
cmp
ds
add
adc
mov
ret
jg
movl
fdivl
xor
or
mov
push
int
fcoml
sbb
std
popf
pop
sahf
mov
mov
xchg
cmc
xor
sahf
sub
scas
jecxz
ja
or
cmp
or
imul
cmpb
test
lods
jnp
jle
and
lods
pop
lret
imull
int3
jo
xchg
or
add
xchg
shl
cld
popf
movsb
stos
aaa
cltd
xchg
mov
and
inc
jne
out
aam
ljmp
add
xchg
test
jl
sub
mov
pop
xchg
mov
mov
aaa
add
adc
ret
xor
cs
jl
mov
addr16
mov
lret
repz
xor
fldenv
ljmp
cmp
fmull
repz
dec
dec
pop
and
sub
xor
xorb
ljmp
filds
inc
cmpl
push
add
pop
fadd
jmp
dec
cmp
jp
push
jno
outsb
test
pop
test
and
bound
or
jnp
cmp
push
push
cmpsb
sahf
addl
aaa
dec
cmpsl
dec
sarl
sub
cmp
test
jle
mov
test
and
inc
int
push
jecxz
popf
je
out
xchg
fwait
or
icebp
push
lahf
stos
xchg
divl
stos
je
sti
loopne
inc
jns
push
mov
enter
pushf
fsubr
jne
out
lret
xchg
jmp
xor
js
cld
adc
jb
int
je
nop
add
xor
stos
repz
lret
mov
mov
xchg
std
ljmp
jbe
cmp
fsubr
fcmovbe
sub
mov
dec
jecxz
iret
mov
xchg
sub
mov
pop
adc
jg
pusha
cltd
jmp
add
add
dec
repnz
jmp
adc
mov
mov
inc
mov
fs
sbb
rcll
jmp
stos
add
insb
test
xor
aad
int
mov
push
out
pop
test
xor
aad
inc
adc
mov
jge
mov
mov
loope
lret
pop
inc
sbb
aam
jmp
push
in
int3
sbb
push
addr16
mov
jl
jae
jno
mov
push
xchg
or
orb
mov
fwait
mov
stos
xchg
pop
idivb
popa
in
loopne
or
test
ss
xor
pop
lock
shr
push
ja
mov
stos
fcmovnbe
sub
mov
mov
je
push
fwait
test
movsb
call
fwait
mov
aaa
enter
fistl
push
lret
sbb
mov
stc
sbb
jno
jle
jmp
cltd
push
mov
pop
adc
and
mov
sbb
pushf
dec
movsl
jae
lds
in
mov
bound
inc
jae
mov
push
mov
inc
cmc
inc
add
imul
daa
mov
mov
xor
les
into
popa
pop
mov
cld
adc
cli
mov
mov
loopne
loope
inc
js
sti
pop
ficoms
inc
mov
insb
jo
and
sub
int3
xchg
fsubrs
jae
mov
jmp
rorl
mov
loope
or
sahf
xchg
scas
add
adc
and
mov
mov
bound
repnz
sub
mov
cld
jne
aaa
and
and
push
idiv
stos
loop
pop
or
mov
push
or
pop
shlb
pop
push
leave
in
mov
mov
stos
and
in
xchg
push
xor
mov
mov
data16
adc
call
mov
pop
sub
pushf
pop
inc
data16
mov
je
sbb
mov
push
inc
lods
mov
call
mov
lock
xchg
inc
sub
out
sbb
cmp
cmp
addr16
stos
subl
frstpm(287
cmp
fs
in
ljmp
outsb
imull
mov
inc
loopne
jne
fdivrs
sub
pop
fldenv
jo
cwtl
and
jae
movsb
loope
sub
and
shlb
jle
or
xor
push
bound
inc
and
jnp
sbb
loopne
sbb
mov
call
mov
test
jecxz
inc
push
cmp
push
inc
add
xor
je
lret
push
push
mov
dec
xchg
out
je
sub
cld
push
in
scas
sbb
sbb
xchg
dec
ret
mov
out
xlat
loope
xchg
loop
pop
mov
inc
jne
aam
xor
es
sbb
mov
mov
imul
arpl
inc
pop
push
ret
mov
xor
mov
push
stos
ror
inc
mov
jno
jmp
add
stc
mov
daa
loope
xchg
insb
ja
mov
clc
mov
gs
lods
ret
ss
jg
mov
les
pop
cmpsl
sbb
stc
add
into
bound
enter
pop
and
mov
clc
mov
rcl
and
pop
add
xchg
push
dec
arpl
inc
daa
ljmp
das
xor
xchg
adc
cld
fadd
jb
and
dec
outsl
shrl
sbb
mov
cli
int
add
xor
mov
cld
cltd
movsl
add
cwtl
jne
aad
movsb
imul
jl
insl
sbb
test
cwtl
mov
adc
inc
movsb
jb
mov
jnp
sub
and
xor
scas
cmpsl
push
divb
push
adcb
mov
fcmovbe
jb
imul
mov
hlt
les
push
mov
stos
push
pop
dec
and
add
sti
fstl
in
lcall
in
lods
push
cmp
add
movsl
mov
nop
inc
inc
sbb
pop
jne
addr16
jecxz
xlat
idivb
mov
mov
enter
mov
sbb
fwait
repnz
enter
loope,pt
inc
mov
xor
aam
push
cmpsb
pop
test
cmp
lods
dec
xor
cmpsl
push
inc
popa
lcall
inc
mov
gs
in
mov
xor
clflush
addr16
in
js
jno
pushf
mov
jg
adc
mov
fs
or
xlat
not
das
and
nop
ficompl
fldz
pop
mov
pop
push
ja
cmp
popf
cwtl
mov
sbb
jb
shlb
push
addb
fs
dec
nop
or
xor
inc
imul
sbb
cwtl
pop
or
stc
fs
outsl
push
addr16
inc
mov
sub
dec
adc
mov
aaa
mov
jno
lahf
stc
jmp
loop
adc
je
aas
xor
jg
xchg
sahf
ljmp
mov
aam
mov
xor
and
in
imul
mov
pusha
out
jmp
test
enter
movsb
cmpsb
mov
sbb
ficompl
push
dec
fisttpll
adc
mov
fldt
bndldx
sbb
cmc
adc
mov
clc
cli
pop
sbb
clc
xchg
mov
or
out
scas
xchg
adc
test
movsb
xor
lret
repz
cmpsb
aad
mov
mov
mov
sub
insb
lret
cmp
fcmovb
lds
dec
loope
gs
sbb
xlat
fs
push
mov
push
mov
push
frstor
enter
adc
jae
and
adc
cmc
lret
jnp
cmpsl
lret
inc
jge
sub
push
mov
leave
test
enter
push
lcall
sbb
scas
repnz
loopne
push
fs
push
int
xor
sub
sbb
loope
repz
rcll
add
lret
imul
or
int3
stos
aad
sub
out
inc
mov
or
adc
jae
andb
call
rorb
sub
xchg
push
jle
jns
add
test
mov
repnz
mov
mov
sbb
cmc
push
jle
cmpsl
jle
push
sbb
mov
jb
sub
shlb
enter
mov
or
inc
lahf
out
ret
and
push
mov
iret
test
add
movsl
sub
xchg
mov
ret
sarl
divl
dec
lcall
inc
ljmp
iret
in
test
stc
mov
jnp
and
push
aad
ffree
lea
ret
scas
rcrb
sarl
inc
movsb
inc
insl
jmp
aad
mov
add
test
dec
mov
sub
addl
mov
imul
adc
mov
jmp
popa
scas
das
gs
aaa
pop
or
xorb
inc
idiv
or
gs
pop
sbb
sbbl
lcall
sub
add
mov
aas
in
je
popa
aaa
sbb
add
push
lahf
sbb
xor
movsb
push
cmc
testl
rol
dec
or
pop
scas
fcmovne
jbe
inc
xchg
hlt
dec
adc
test
adc
aas
sbb
js
push
add
cmp
add
pop
lret
and
in
pop
mov
jno
mov
sbb
test
sub
jnp
scas
jge
push
jg
insl
call
xor
sub
pop
xchg
fidivrs
orl
adc
push
test
mov
sub
xor
xchg
ret
mov
xor
sub
mov
iret
lods
setbe
pop
sub
icebp
sbb
mov
and
fisubrs
cmp
in
jb
cli
mov
mov
aad
rol
movsb
idivl
add
sub
push
cmpsb
movsl
mov
sub
jl
adc
data16
sti
jmp
inc
xchg
and
xchg
mov
ss
dec
push
bound
lods
daa
shr
pop
movsl
aaa
in
mov
adc
cmp
lds
cmpsb
movaps
es
inc
and
loope
out
xorl
cmp
mov
jbe
sub
adc
mov
outsl
loope
jb
aas
push
scas
jle
sti
pop
dec
adc
pusha
sahf
push
pop
jo
dec
rclb
or
jne
inc
pop
lcall
add
lahf
in
sub
dec
mov
in
aaa
int
ss
pop
loopne
mov
in
mov
sbb
adc
test
cmc
mov
shlb
sbb
movsb
add
cmp
lds
push
adc
or
iret
pop
cltd
andl
bound
cld
jl
lock
xor
cmc
xchg
idivb
movsl
imul
mov
add
loopne
inc
fmull
cmpsb
jge
pop
outsb
fcoms
mov
push
push
pop
divl
dec
mov
ja
push
loope
push
cmp
repz
divb
mov
popa
lahf
incl
adc
mov
inc
cmp
or
lea
lret
push
cmp
push
cmpsl
dec
cmpsl
aas
xchg
lret
cmpsb
scas
addb
lds
mov
int
stos
int
dec
fisttpll
jne
std
xor
test
fwait
in
mov
pop
mov
xchg
enter
shlb
inc
test
xor
cmpsl
addr16
andl
adc
je
lcall
cmpsl
imul
sbb
dec
sbb
inc
mov
ret
bnd
or
imul
mov
push
mov
rcrb
sub
mov
daa
and
dec
sbb
mov
push
cli
leave
or
mov
mov
int
jo
test
mov
mov
cltd
popf
sub
xchg
insb
or
rclb
fcoml
push
in
clc
call
popf
mov
xlat
jmp
addr16
push
aas
clc
xchg
std
adc
push
pushl
xor
mov
inc
xchg
inc
add
fsubr
xor
sbb
fs
pusha
mov
push
and
inc
enter
ret
jmp
push
inc
fidivrl
out
mov
cmp
push
aam
movsl
icebp
sbb
rcrl
or
dec
aaa
inc
mov
or
stos
sti
repz
aaa
pop
cltd
mov
push
popa
loopne
das
ret
pop
and
popf
aad
test
inc
pop
loop
fidivrl
test
cmpsl
ret
xchg
cltd
imul
mov
rcll
call
cmp
lods
fcompl
inc
jge
mov
rsm
cli
push
mov
inc
adc
push
out
ret
push
fwait
and
jae
insl
jo
fmull
push
dec
int
xor
mov
bound
pop
adc
cwtl
dec
cmp
push
lcall
pop
xchg
jp
dec
cmp
lahf
jo
cli
fsubrp
test
lcall
mov
decb
jp
popl
adc
push
aaa
mov
clc
fyl2xp1
push
mov
xchg
out
fwait
sub
ljmp
jns
and
or
data16
mov
les
push
in
scas
pop
sub
push
inc
cmp
sbb
mov
popa
test
lcall
in
mov
lahf
mov
lea
pusha
in
lea
stc
ss
mov
and
psubusw
ror
rcll
push
mov
fbstp
sbb
xchg
sbb
or
sar
daa
adc
into
test
shll
sbb
jne
mov
clc
inc
jge
popa
and
leave
push
test
mov
pop
cli
in
cli
ljmp
movsl
jnp
popf
sub
rcrl
mov
fcoms
pop
mov
outsb
repnz
scas
ds
or
mov
adc
mov
jnp
push
sbb
inc
lods
cmp
js
mov
mov
lcall
repnz
andb
data16
inc
dec
sbb
popa
cmc
int
add
jne
pusha
push
insb
cmp
es
aam
fistl
and
shrl
ljmp
test
stos
shll
xchg
aad
mov
push
addr16
out
pop
push
movb
jns
push
test
mov
ret
loope
dec
mov
push
add
mov
imul
es
xchg
mov
test
es
mov
lcall
push
push
sub
jo
dec
dec
or
or
pusha
or
cs
and
fwait
adc
pop
nop
xor
mov
adc
xor
jno
sub
cmp
jns
adc
fimuls
add
stos
pusha
je
hlt
es
stos
daa
xchg
mov
sbb
nop
mov
test
stos
cmp
cmpsb
hlt
sbb
cld
mov
ret
stos
add
xlat
add
sbb
stos
clc
and
jmp
adc
push
bound
xlat
mov
in
jg
stc
inc
xorl
es
repz
std
push
in
dec
cmp
stos
push
repnz
or
add
fs
add
leave
xor
daa
nop
aam
loop
mov
inc
inc
ds
inc
jne
add
jge
jle
stos
or
imul
lods
divb
roll
adc
hlt
rcr
or
mov
pusha
rorb
out
outsl
or
mov
add
xchg
iret
adcb
testb
inc
lods
and
inc
push
mov
popa
mov
test
jle
adc
lock
push
outsl
adc
or
push
xor
outsb
pop
jb
jl
rolb
je
xchg
jae
aaa
sbbb
mov
cmp
cwtl
inc
sbbb
jb
fiadds
xor
cmp
mov
dec
stc
repz
adc
xor
jbe
xor
ljmp
lea
mov
lock
imul
xorl
adc
push
gs
fisubs
xchg
int
push
and
xchg
clc
hlt
out
call
adc
lods
inc
inc
sbbl
outsl
and
and
mov
iret
mov
xchg
jp
adc
js
in
cwtl
mov
xchg
rolb
cmpsl
push
sub
and
cltd
jl
cvtdq2ps
outsb
push
xorb
int3
mov
xchg
arpl
mov
xchg
sbb
out
jae
stc
sbb
lock
mov
ja
cmovb
push
hlt
sub
lds
xchg
push
add
loopne
div
cmp
xchg
ljmp
xchg
and
mov
cmp
imul
cmpb
jb
jp
xor
push
stos
mov
push
jmp
pop
lods
and
push
xchg
cs
jns
in
adc
les
xor
lahf
xchg
mov
xor
loope
test
push
mov
cmp
test
cwtl
imul
push
dec
mov
jecxz
aas
out
xchg
aas
loop
mov
sub
dec
cld
mov
adc
scas
mov
lret
fisttps
mov
or
in
mov
lea
iret
dec
pop
mov
inc
gs
push
or
pop
push
jb
daa
fildl
xchg
push
pop
and
int3
push
stos
cmp
pop
inc
sti
or
jno
mov
xor
mov
jecxz
sub
jae
push
sbb
xchg
mov
mov
bound
dec
daa
dec
sbb
fs
clc
call
pusha
stos
push
xchg
sbb
arpl
arpl
adc
cmpsb
xchg
adc
insl
sti
fldt
jb
jae
or
rol
add
in
dec
dec
mov
rorl
sahf
mov
insl
mov
cld
or
sbbb
pop
pop
repz
cvttps2pi
lret
sbbl
test
inc
jmp
adc
push
cmpsb
mov
xlat
jnp
mov
lahf
into
gs
pop
mov
xchg
les
inc
xchg
stc
cmp
repnz
push
push
cwtl
xor
jb
rorb
lahf
sub
popf
cmp
xor
in
outsl
or
in
imul
pop
push
addr16
cli
insl
pusha
sub
pushf
sbb
mov
xchg
or
push
or
mov
adc
test
movsl
xlat
loop
gs
fldl
or
xchg
scas
fcom
cltd
stos
jo
ret
mov
loopne
jno
sub
incl
cmp
fwait
push
add
pop
pop
inc
cmp
pop
add
icebp
push
insb
push
inc
dec
fcoms
sub
sbbb
xchg
leave
mov
ficompl
sarl
add
lock
mov
call
icebp
xlat
or
ret
punpckldq
fcmovb
hlt
sahf
mov
sbb
pop
inc
das
sbb
icebp
fcmovnu
dec
xchg
xchg
dec
sbb
jnp
lcall
into
cld
dec
xchg
insb
sub
xchg
xchg
jg
les
out
push
mov
repz
pop
jmp
faddl
stos
mov
xor
or
bound
into
jns
cmp
and
xchg
xchg
into
imul
stc
ffreep
iret
mov
sahf
out
lcall
cmp
cltd
lods
js
push
dec
mov
inc
ljmp
in
jb
push
xor
sub
and
dec
xchg
sbb
mov
testl
imul
jo
lahf
popa
mov
pop
pop
xor
subb
cld
repz
xchg
mov
cwtl
dec
add
xor
and
ret
in
push
stos
mov
stos
dec
cld
popa
mov
test
jmp
loope
cld
inc
repz
mov
mov
enter
adc
lahf
stos
sbb
lret
inc
fsubp
add
mov
aad
test
sub
and
repz
xchg
aas
mov
xor
insb
mov
nop
xchg
dec
sbb
fmul
mov
daa
mov
lds
and
adcl
shr
jae
bound
mov
mov
test
subl
movsl
pop
xchg
sbb
jno
out
add
pop
cmp
test
fadd
and
and
add
das
daa
cmpsb
fsubr
loop
out
movsl
push
cmp
push
cld
mov
pop
out
add
push
mov
insb
sbb
xchg
test
mov
ss
jge
dec
push
adc
mov
mov
xchg
daa
xchg
pop
bound
cmpsl
push
push
push
mov
mov
add
sub
jbe
and
xor
or
cmp
xor
or
fwait
imul
bound
and
mov
or
pop
ret
test
push
addr16
mov
sub
cmp
or
rolb
mov
mov
cmc
mov
xorl
into
lods
jle
inc
imul
popf
test
jmp
sti
sbb
cmp
and
jbe
stc
shl
sbb
inc
dec
rclb
std
xorl
inc
add
jmp
sarb
pop
fsts
in
adc
ljmp
cmp
mov
mov
push
gs
les
lods
jbe
xor
add
push
sbb
push
sti
rorl
mov
ja
in
imul
cld
push
sbb
lock
out
gs
push
cmp
in
loop
sub
and
mov
imulb
push
mov
adc
arpl
mov
mov
or
lret
or
leave
sbb
pushf
mov
push
inc
xchg
popa
sub
fdivl
add
mov
sbb
subb
out
inc
mov
mov
imul
push
aam
sbb
add
popa
fildl
nop
icebp
call
push
jno
mov
adc
push
push
nop
add
sub
sbb
or
jecxz
fnstsw
mov
jp
call
dec
dec
fcomps
mov
popa
add
das
cwtl
shlb
daa
out
inc
popf
rorl
iret
outsb
mov
lcall
repnz
cmp
pusha
scas
aas
jle
scas
shl
outsb
push
xchg
and
shl
xor
sbb
es
lret
and
loope
lods
add
mov
lds
sbb
mov
xlat
popf
in
push
mov
sub
fbstp
xchg
mov
cmp
or
sub
cmpsl
push
shl
mov
fdivs
dec
outsl
mov
aaa
mov
push
sub
sbb
mov
dec
leave
push
in
mov
xor
lcall
cmp
leave
adc
popf
add
mov
movsb
cmp
pop
mov
xlat
add
fisttpll
mov
jge
lea
std
pushf
fidivrs
mov
push
pop
testb
dec
stos
jg
cmp
or
pop
sub
pop
inc
jp
lods
xor
add
addr16
jle
push
push
lcall
test
inc
push
sub
inc
jg
add
mov
lret
add
push
cmp
clc
dec
fst
cwtl
and
push
xchg
movsl
cmc
ret
pushf
stos
mov
scas
sti
fimuls
push
pop
in
inc
je
shrb
push
nop
xlat
pop
jl
push
outsb
xchg
push
nop
inc
outsl
out
add
sahf
xor
inc
pop
gs
out
les
cltd
dec
fldt
pusha
ret
repnz
fstpt
insl
xor
or
push
dec
and
dec
orl
ja
sub
daa
insb
push
sub
sub
jbe
cmpl
sahf
pop
and
repnz
jp
push
mov
xchg
jb,pt
sbb
mov
inc
inc
and
mov
mul
arpl
lds
ljmp
xorl
scas
sbb
jl
and
jl
mov
mov
fimuls
pusha
pop
or
in
xor
push
push
xor
jbe
enter
mov
sub
das
dec
or
pop
push
mov
mov
mov
fldt
pop
invd
test
or
jns
shlb
pop
mov
cli
jbe
mov
inc
push
dec
and
adc
repnz
add
or
adc
jne
add
movsb
pop
mov
cmc
lods
bound
aad
adc
add
subb
jno
mov
dec
xlat
jle
aad
out
cmpl
jne
add
pushf
pop
loopne
mov
sti
push
adc
cmpsb
movsl
inc
clc
cmc
jmp
sti
add
mov
mov
out
xor
push
stos
jno
enter
sub
popf
and
xor
and
lods
mov
push
xor
pop
jl
addr16
add
les
cmpsl
jns
xchg
push
pusha
mov
inc
mov
pop
xchg
and
or
popf
int
fisttps
xchg
xor
inc
nop
cmp
lcall
ja
lcall
shrb
rcl
lods
inc
test
and
cmpsl
out
sbb
add
jp
rcll
sub
mov
jmp
inc
inc
xor
out
mov
inc
xchg
fsts
xchg
fimull
in
and
in
add
push
mov
imul
pop
sbb
pop
pop
ss
out
sub
test
enter
mov
push
mov
iret
adc
aam
push
sbb
dec
cmp
mov
sbb
and
lods
cld
push
lods
cmpsb
imul
loop
divl
int3
and
andb
adc
andl
pop
das
jecxz
ss
rcl
fidivl
imul
stos
cmp
and
inc
aad
sbb
mov
inc
add
rcll
mov
inc
ja
fwait
mov
jecxz
addl
xchg
stc
ficompl
arpl
es
adc
into
dec
call
dec
icebp
cmp
outsl
and
xor
stos
enter
mov
xchg
sub
fwait
jge
out
fistpll
jmp
enter
lcall
pushf
inc
lods
loopne
inc
push
test
inc
arpl
mov
lahf
int3
mov
mov
ss
or
pop
mov
or
jle
dec
cmp
push
stos
repnz
out
xchg
jl
and
xor
int3
mov
xor
sub
xchg
outsb
jae
rorb
std
mov
dec
adc
jp
fucomip
enter
xchg
mov
loope
pop
in
cmp
or
pop
mov
sbbl
push
sub
cmpsb
pop
fadd
jle
xor
cld
stos
and
mov
mov
and
inc
mov
inc
jg
xlat
lcall
inc
mov
add
jp,pn
push
xchg
jp
shlb
push
push
or
out
sub
cmp
test
cmp
dec
mov
insb
loop
fnstenv
lds
mov
data16
dec
imul
pop
lods
or
orb
push
sbb
add
sbb
sbb
mov
jmp
movsl
aaa
sbb
fwait
pop
and
pop
dec
icebp
lcall
std
popa
ret
in
out
or
mov
push
mov
iret
cli
mov
sub
outsl
pop
int3
xchg
stos
dec
jle
inc
ljmp
sbb
mov
jle
out
jb
imul
je
dec
pop
jbe
or
inc
dec
xchg
dec
movsb
xor
ds
aam
push
lahf
mov
adcl
xor
mov
mov
int
test
push
icebp
fs
fidivs
jl
add
lret
stc
adc
test
stc
jb
xlat
sarl
xor
push
pop
das
in
mov
rorl
lods
rcll
mov
pop
jg
add
add
dec
cmpb
cmpsb
sub
mov
sub
icebp
inc
push
xchg
fiaddl
sbbb
sbbb
cmc
cmpsb
and
pop
mov
lahf
push
out
cmc
gs
pusha
lcall
test
push
ret
inc
ss
xor
into
stc
cmc
repnz
pop
fsubrs
xor
repnz
dec
add
xlat
fldcw
push
jle
or
xchg
push
sbb
jnp
or
ljmp
cmp
mov
sub
insb
add
dec
lods
outsb
add
cld
lods
pop
mov
fld
xchg
lds
nop
mov
or
outsb
jb
or
adc
ret
mov
jns
jne
repz
popa
adc
outsl
loopne
neg
jne
and
push
mov
aaa
call
jbe
xchg
lods
mov
xchg
mov
jg
test
or
jecxz
or
mov
push
stos
jae
mov
mov
fwait
push
pop
jmp
push
rcrb
xchg
cmpl
je
fxch
and
add
cld
loope
dec
mov
pop
adc
xchg
mov
aad
xchg
stc
dec
push
nop
mov
sbbb
add
out
cld
xchg
or
cmp
or
pop
aaa
test
or
ja
xchg
or
nop
fcoms
add
inc
testl
mov
out
int3
mov
and
and
cs
ret
xchg
flds
jb
outsl
push
xor
iret
fwait
ja
jbe
cwtl
rorb
fwait
test
push
inc
stos
or
dec
stos
push
push
inc
subl
jnp
sbb
dec
mov
js
dec
shll
mov
mov
std
mov
enter
neg
inc
rcrl
lods
lea
cmc
call
cmp
pusha
jge
inc
hlt
sub
adc
lcall
or
inc
add
sbb
rorl
jmp
scas
add
dec
pop
pop
pop
xchg
lcall
ljmp
jbe
leave
out
clc
fs
push
pop
and
arpl
dec
loopne
leave
jb
arpl
cmp
data16
loopne
cmp
xchg
mov
ss
lods
arpl
or
repnz
daa
lret
push
lods
dec
xor
push
orl
imul
lret
mov
sbb
sbb
test
not
test
stos
and
in
enter
leave
ljmp
outsl
pusha
wbinvd
push
and
jg
jnp
dec
pop
inc
js
mov
popa
pop
inc
inc
xchg
pushf
sbb
pop
rcrl
jne
ss
daa
neg
scas
mov
adc
rcll
rol
enter
cltd
clc
les
std
dec
pop
pop
push
lret
ljmp
lods
xchg
cmc
and
pop
mov
adc
cli
push
mov
mov
jmp
pop
jecxz
loop
icebp
push
jle
jne
jmp
dec
stos
hlt
insl
xlat
shrb
stc
popf
mov
mov
dec
lret
lret
popf
or
adc
cmp
sti
stos
les
and
ret
or
aaa
test
scas
out
mov
pop
or
pop
les
and
popf
aaa
out
jecxz
fnstenv
pop
mov
int3
rcrb
addl
inc
leave
push
pop
lods
in
sbb
pop
adc
sub
nop
ja
ret
fidivl
aas
shrb
scas
test
ffree
add
lds
mov
scas
test
dec
pop
xor
add
fbld
aaa
icebp
lret
pop
pop
jb
nop
int
sbb
dec
pop
cmp
fucom
sbb
testl
cmp
mov
pop
shlb
incl
les
aaa
jns
mov
sub
lahf
enter
neg
shrb
sub
shrl
xchg
pop
or
jns
push
je
mov
call
stos
cmp
fiaddl
add
fldl
shlb
fnstenv
stos
decb
imul
jge
push
into
jg
xchg
xchg
sub
sbb
and
adc
test
stc
stos
jmp
or
mov
sub
mov
cmc
mov
or
lahf
push
jecxz
loop
dec
xor
add
stos
and
stos
lods
test
les
lods
xchg
lret
jmp
jge
inc
adcl
sub
rclb
pop
imul
jg
jbe
mov
andl
xlat
push
loope
cmc
popa
mov
je
jns
push
xchg
gs
pop
lods
mov
lcall
lods
mov
shl
pusha
mov
fisttpll
jle
lock
cli
gs
mov
sahf
cltd
and
ss
das
xchg
lahf
je
andb
or
mov
cmpsl
and
add
jo
loope
mov
fs
fistpll
or
adc
pop
mov
lods
cmpb
pusha
fidivs
jg
dec
jmp
aam
mov
and
scas
test
fidivs
aas
ds
lea
arpl
int
icebp
scas
push
or
mov
adc
sub
mov
fildl
cmp
ret
sbb
inc
out
xchg
inc
shrb
arpl
and
xlat
push
fsubp
out
or
cld
shrl
cmp
mov
mov
cmpsb
add
stc
cmp
andb
cmp
mov
xchg
xor
je
sbb
add
inc
fstpt
add
push
scas
cld
mov
sbb
repnz
xlat
xor
pusha
ret
jno
push
inc
adc
sahf
pop
jb
mov
out
movsb
jb
dec
xor
sub
cmp
cmp
mov
xor
movsl
push
cmc
std
inc
in
dec
mov
test
shll
jge
in
mov
lret
mov
push
mov
imul
cmp
jmp
mov
xor
in
xchg
in
push
cli
adc
neg
inc
jmp
xchg
cmpl
inc
cs
jbe
mov
test
jb
inc
push
mov
push
sbb
jb
in
xchg
or
aad
xchg
clc
sbb
sbb
ss
push
out
jecxz
mov
or
jl
adcl
icebp
sub
js
sahf
xchg
cmp
jnp
ficoms
rclb
je
xchg
and
jns
daa
in
test
or
pop
stos
push
fistl
and
repz
xor
pop
test
shll
fwait
cmp
push
pop
push
sbb
and
xlat
mov
imul
adc
inc
rolb
push
sbb
or
xor
out
push
rcrb
mov
xchg
mov
ror
pop
dec
shrb
inc
xchg
ret
jnp
fxch
dec
cltd
insb
adc
and
jne
fldcw
add
sbb
push
add
mov
jg
cmp
or
sbb
scas
pop
push
and
sti
inc
out
popa
cmpsb
ret
mov
es
xchg
xchg
outsb
jae
mov
pop
enter
sub
icebp
jbe
fists
cmpsl
js
mov
sarl
out
push
adc
faddl
fmuls
jae
aad
loopne
push
xchg
jns
mov
push
xchg
test
push
sbbb
jnp
into
addl
xchg
mov
cmp
xor
jno
pop
mov
scas
es
std
rorb
xor
ljmp
mov
nop
mov
inc
dec
repz
sub
fidivrl
dec
jbe
gs
mov
stos
pop
cmp
stc
gs
pop
ljmp
or
in
les
ljmp
scas
cmc
lods
je
cmp
cmp
aas
mov
fwait
add
adc
pop
fcoml
loop
cli
adc
stos
cltd
mull
in
xchg
mov
xor
mov
and
sahf
stos
adc
cmp
lret
add
lods
lret
iret
push
pusha
mov
aas
adc
rcrl
aad
insl
xchg
in
loope
push
dec
popa
addr16
mov
jge
jns
jmp
stc
pop
mov
ret
add
cltd
mov
cld
and
jge
cmp
paddusb
push
adc
ljmp
and
or
xor
cmpsl
push
insb
fcompl
iret
xor
test
push
loopne
test
or
orl
add
sbb
jl
cmp
shll
and
ja
or
xchg
in
loop
int
inc
cmp
xlat
popa
sbb
mov
daa
daa
cmp
mov
cmc
pop
shl
xor
es
nop
icebp
mov
adc
jecxz
mov
xor
lods
mov
lcall
push
sbb
data16
stos
inc
lret
adc
aam
ljmp
jbe
mov
push
lock
push
out
mov
and
sub
pop
jp
jo
mov
insl
mov
rcll
andl
outsl
out
add
lds
lea
jbe
out
stos
xor
fs
insb
call
es
inc
pop
mov
insl
xchg
enter
fidivrs
jmp
push
push
add
stos
and
not
loope
jbe
rdtsc
je
pop
js
dec
test
sbb
scas
pop
or
aad
mov
je
jae
pop
inc
cmpsb
or
jecxz
enter
out
push
jl
jbe
rol
inc
addr16
push
ss
sub
movsl
inc
aas
sub
adc
inc
push
sub
and
xchg
pop
cli
ffree
ja
iret
inc
or
add
lea
fsubl
add
pop
adc
test
sub
inc
scas
lcall
sub
arpl
arpl
pushf
in
mov
sub
out
inc
test
dec
lahf
mov
jb
nop
mov
push
mov
jnp
lods
pop
out
push
lret
pop
adc
std
loopne
les
outsl
adc
pop
jecxz
ss
inc
aaa
cmp
ja
outsb
mov
lea
ss
lahf
popf
data16
sbb
in
and
int3
sbb
in
je
ja
in
cwtl
ret
iret
in
or
or
movsl
mov
loope
cs
jno
xorb
out
push
or
orb
pop
pop
xchg
xor
inc
inc
push
int
cmpl
xchg
fcomps
cmpsb
call
xchg
dec
push
std
adcb
dec
gs
sub
jo,pt
rcrl
cmp
mov
mov
mov
mov
sbb
pop
cmpsl
insl
mov
push
icebp
pop
jbe
mov
cmpsb
or
mov
inc
call
or
vdivps
or
add
aam
mov
scas
daa
add
or
shll
mov
xchg
out
mov
sub
add
cmp
adcb
jbe
sbb
lea
push
lcall
xchg
mov
cmp
and
mov
ljmp
xchg
in
xor
fistps
xchg
pusha
jmp
jb
jmp
mov
jmp
mov
ficoms
repz
add
sti
dec
clc
cmp
fisubrl
ficompl
movsl
jmp
sbb
mov
cmpsb
xchg
cli
repz
adc
adc
or
mov
clc
xor
pop
xor
mov
int
pop
in
and
jmp
sbb
ret
lock
imul
adc
mov
xchg
clc
jle
andb
sbb
pop
in
stos
cmp
pop
mov
dec
adc
pop
add
sbb
mov
pushf
inc
std
sub
int3
fdivrp
lods
ss
popl
insb
or
mov
jb
mov
in
jp
popf
das
mov
std
das
sbb
jnp
sub
fmul
data16
into
jl
or
add
cli
fisubl
xor
das
xor
inc
mov
cmp
inc
or
xorb
push
jg
or
mov
std
xor
icebp
aam
dec
popa
sbb
andl
dec
or
out
sub
std
lcall
xor
pushf
sti
pop
mul
dec
mov
sbb
push
push
shl
aam
dec
out
ja
mov
sbb
out
lods
mov
imul
lods
push
cmp
mov
jge
adc
xchg
or
hlt
sarl
pop
fwait
xor
add
push
inc
inc
ja
aam
enter
mov
stos
sbbl
push
inc
xor
ljmp
lods
mov
aas
push
dec
push
cmovp
pusha
and
arpl
in
mov
push
dec
push
sti
sbb
sbb
adc
mov
shrb
lret
enter
loopne,pt
xor
loop
pushf
inc
lods
adc
or
jp
ficoms
sub
sub
lahf
in
int
ror
mov
stos
rclb
pop
je
pop
repnz
push
sti
test
cmpl
mov
daa
popa
jo
xor
dec
ficoml
lcall
ss
mov
cmp
dec
inc
fs
sar
sbb
mov
loopne
and
nop
dec
les
insl
xlat
add
pop
leave
mov
ds
dec
sarl
insb
or
ss
repnz
jo
movsl
aam
pop
out
fidivrs
jo
xor
mov
xchg
or
jmp
dec
aam
adc
jno
jmp
fsubrl
pop
or
mov
shrl
lcall
adcb
mov
xlat
cmp
xlat
popf
outsb
add
jae
cmp
mov
dec
mov
shrb
mov
sub
popa
add
push
cmp
xor
lret
clc
inc
inc
jmp
sub
scas
movb
in
and
sub
add
sbb
out
aad
fdiv
leave
jmp
pop
jp
jae
ds
cli
jae
pop
lret
iret
and
outsb
push
lret
xor
addr16
lret
std
sub
lcall
adc
arpl
out
sub
pushf
in
in
sub
jl
js
lock
xor
sbb
and
fidivrl
or
enter
mov
shrb
sbb
push
or
idiv
imul
cmp
cs
inc
and
cmp
enter
adc
pop
pusha
test
shll
jae
and
xchg
mov
xor
sbb
adc
es
add
fcompp
xor
push
cmpl
cmp
pushf
jns
add
lock
dec
leave
idivl
add
xchg
cli
mov
or
push
jge
cmp
xlat
xor
mov
and
pop
dec
push
in
roll
cld
stc
mov
sub
pushl
pop
sub
maskmovq
idivl
mov
fcmovne
jae
fcoml
jl
or
aaa
fnstsw
aad
dec
roll
cltd
xor
jl
adc
xchg
out
out
test
in
stc
inc
add
fdivp
dec
add
fisubrl
push
jmp
neg
and
dec
daa
add
stos
xor
inc
or
out
inc
sbb
iret
sub
xchg
dec
add
sub
xchg
and
in
fs
jb
push
mov
test
frstor
or
sbb
adc
movsl
subl
test
bound
repz
lods
xor
lock
cmp
push
imul
nop
jmp
pop
push
add
in
adc
je
cltd
mov
idivb
mov
aas
in
or
mov
std
lcall
mov
mov
pop
mov
jl
insl
ljmp
test
xor
adc
inc
sub
out
stos
mov
cmp
lahf
out
mov
mov
test
scas
push
mulb
flds
lods
mov
sti
cwtl
push
pmulhw
fldcw
push
clc
cmpsl
in
sbb
pop
xchg
enter
mov
sub
sub
lahf
dec
icebp
scas
jnp
fldenv
or
jnp
mov
sub
je
js
sti
jge
and
push
pop
clc
cmp
lods
lret
cmpb
inc
out
or
inc
je
sbb
or
cmpsl
mov
xor
outsb
xor
aas
mov
or
fidivs
jmp
sarb
push
xorb
fiaddl
ret
sti
and
pop
pop
sub
or
sbb
lret
cmp
es
loop
cmp
pushf
fstpl
mov
outsb
jns
cli
mov
repnz
pop
call
jmp
xchg
mov
or
dec
pop
pop
sbb
cmp
push
inc
movsb
sub
mov
jle
repnz
and
or
sahf
addr16
cmpsb
push
sbb
inc
pop
cmpsl
jbe
jle
pop
jbe
loopne
jle
aad
fstpt
ljmp
and
sub
pop
adc
orb
mov
insb
xchg
lcall
jb
xor
mov
ja
dec
push
call
mov
negb
outsl
lds
hlt
or
imul
cmp
mov
pop
or
xchg
xchg
mov
pop
add
ds
xor
cltd
lret
test
jnp
sbb
icebp
mov
aad
cmp
dec
push
pop
inc
xor
into
pop
mov
idivl
jg
sbb
cmp
mov
inc
repz
scas
cmpxchg
stc
insb
jnp
inc
pop
adc
push
lret
test
je
imul
push
adc
xor
outsl
mov
and
hlt
sub
jae
push
mov
fmull
xchg
dec
jmp
push
test
and
mov
in
dec
call
dec
aam
pop
iret
mov
inc
dec
sub
pop
rclb
aam
mov
decl
insl
pop
pop
ljmp
fsincos
iret
movsb
outsl
mov
call
jbe
cmp
fsubrs
jb
fcompl
icebp
inc
sbb
xchg
les
in
push
ja
lds
aas
lock
mov
movsl
arpl
mov
mov
out
sub
stc
icebp
repnz
mov
cmp
inc
push
pop
stos
aam
sbb
jb
mov
xchg
lods
jnp
xor
data16
cli
lods
sbb
in
js
dec
outsl
or
xchg
dec
stos
adc
jge
dec
stos
mov
mov
imulb
jl
dec
stos
mov
push
xor
adc
mov
sbb
or
into
mov
daa
lret
movsb
sbb
subl
jno
sub
xchg
call
hlt
aad
lock
shrb
inc
lea
mulb
in
cmpsb
sub
mov
mov
out
sahf
out
mov
aam
loopne
inc
call
loop
repnz
pop
jecxz
sbb
iret
pop
ror
popf
push
xor
adc
int3
jne
insb
mov
mov
fsub
arpl
repz
cmp
cmc
sub
std
add
push
fnstsw
movl
ljmp
jmp
mov
rcrl
mov
push
icebp
dec
aaa
hlt
lds
xor
pop
out
out
or
scas
mov
dec
push
dec
xchg
dec
adc
loop
xchg
or
fbld
jno
movl
push
cltd
popf
ret
fs
cli
inc
lea
nop
test
cli
loope
xor
dec
push
in
cwtl
add
pop
xchg
lea
lds
imul
mov
xchg
push
pop
push
aaa
pop
mov
cwtl
out
mov
es
stc
rcll
popf
adc
data16
mov
pop
push
sub
cmc
push
jno
cltd
mov
lahf
fidivs
lea
outsb
loope
int3
push
sbb
testb
jle
cwtl
pop
pop
jmp
adc
pop
mov
sub
into
aaa
popa
xor
fsubrs
mov
xor
mov
push
clc
mov
punpckhdq
xor
ret
lods
roll
jmp
xchg
mov
mov
adc
mov
lret
in
leave
add
cmp
pop
push
outsb
push
push
adc
and
pop
dec
movsl
mov
inc
outsb
data16
jle
std
pop
mov
loop
jg
add
lahf
push
shrl
xchg
mov
shl
jns
int3
mov
pop
nop
iret
jns
sbb
mov
movsb
dec
out
stos
jbe
loope
rorl
fsub
cltd
xchg
out
out
fisubs
lods
int
ret
or
ret
xchg
repnz
fs
xchg
lods
dec
jno
adc
mov
mov
jno
xor
int
fld
ds
cmpl
dec
cmp
stc
push
movsb
adc
cmpl
lcall
xchg
cmp
add
or
in
push
pop
sbb
popf
jge
mov
cmpsb
sub
aad
ja
in
setnp
in
mov
lret
dec
pushl
xor
pop
loope
push
repnz
lods
cmc
inc
in
ret
cmp
xchg
sbb
cmpsl
roll
mov
mov
movq
aaa
outsb
pop
mov
inc
stc
movsb
push
popf
js
jno
ljmp
test
cld
or
idivl
jmp
not
jb
int
movsl
fidivrs
mov
lods
pop
jmp
aas
stos
bnd
xchg
push
in
lret
inc
lahf
cmp
push
cmp
push
outsb
mov
mov
inc
arpl
xor
scas
adc
mov
xor
cltd
lahf
and
inc
dec
xor
push
pop
jnp
ret
sub
cmpsl
lret
movsb
fistps
cld
sbb
out
inc
add
mov
mov
xor
and
mov
lods
gs
fnstsw
in
inc
in
ljmp
mov
inc
xor
cmp
daa
rcrl
pop
add
fs
cmp
mov
sub
xchg
inc
push
xchg
ret
cmp
ficoml
dec
dec
bound
mov
sub
inc
jecxz
mov
adc
mov
mov
je
cmpsl
popa
inc
and
into
stos
pop
arpl
cld
sbb
test
mov
leave
sub
fsub
mov
sbb
xlat
jns
cld
in
add
lds
cmp
pop
push
jb
ror
inc
jecxz
insl
pop
push
pop
fs
stos
dec
repz
add
lahf
and
aas
int
inc
movsb
daa
dec
inc
and
lea
mov
xchg
or
xor
out
into
sub
mov
out
out
sbb
cmp
adc
incb
inc
add
dec
add
mov
stos
mov
or
push
mov
mov
sbbl
push
pusha
repnz
add
cmp
arpl
sbb
leave
mov
mov
ljmp
das
jae
out
es
sar
fdivs
push
sub
xchg
xchg
dec
or
and
jne
add
or
mov
jo
les
iret
inc
mov
iret
xor
push
xchg
xor
xlat
push
leave
fisttpll
push
ja
push
mov
repz
push
cli
ljmp
lahf
push
push
aaa
mov
pop
shl
leave
add
enter
inc
mov
leave
inc
out
xchg
pop
xor
mov
xchg
mov
adc
push
int3
ret
pusha
sarb
and
into
sub
pop
mov
icebp
cmp
scas
gs
aad
jp
jno
loop
lret
add
xchg
in
push
cmp
push
out
shll
inc
ss
xor
or
dec
sbb
or
inc
data16
rcll
xchg
out
out
cs
xor
aam
je
push
mov
mov
mov
fs
sub
sbb
sbb
sarb
inc
mov
data16
sub
enter
xchg
outsl
fwait
xor
mov
xchg
incb
or
add
mov
xor
es
subl
pop
lock
adc
inc
push
stos
xchg
dec
sarb
or
aam
sub
fcoms
inc
icebp
inc
in
in
add
or
inc
inc
mov
inc
or
push
ss
jno
push
rep
movsb
int3
divl
cmc
iret
sbb
popf
addr16
cmp
cmp
inc
in
fisubl
imul
lret
jo
xchg
cmp
inc
and
lret
sbb
jo
cmp
xchg
push
out
das
cmpsb
push
dec
adcb
fdivl
inc
or
or
adc
pop
clc
adc
pop
cs
pop
add
push
xchg
xlat
ljmp
pop
or
ret
sar
into
push
aad
sub
out
xchg
dec
addr16
imul
dec
mov
ret
inc
pop
and
cmpsl
bound
cmp
cmpsb
icebp
mov
and
jnp
rorl
ret
negb
shrb
test
push
pop
jns
fisubs
enter
popf
or
jl
cltd
lods
xchg
cs
dec
out
mov
hlt
pop
xchg
loopne
pop
push
cmpsb
xchg
cli
dec
repnz
vmread
fiadds
push
jg
xchg
push
lock
jmp
pop
mov
movsb
mov
add
inc
aad
loop
sti
jmp
iret
xchg
idivb
test
mov
dec
pop
adc
pop
stos
stc
jle
push
out
push
push
jno
cmp
or
lea
adc
adc
dec
and
sub
lret
and
outsb
push
in
xchg
mov
adcl
into
sub
ret
stos
data16
mov
sub
popf
ret
inc
lds
jns
inc
stos
mov
lock
lods
xor
lods
test
cmp
jo
xor
adc
outsb
repnz
or
pop
arpl
jl
cltd
adc
mov
sbb
jg
push
jns
mov
xchg
movsl
dec
pop
hlt
mov
and
or
inc
inc
push
sub
cmp
push
insb
daa
jo
cmp
scas
push
and
clc
clc
or
mov
sub
lds
arpl
push
add
inc
int
fsub
int
dec
cmp
movb
dec
adc
fstl
icebp
xor
mov
mov
out
pop
or
inc
mov
in
int
cmpb
gs
pusha
xchg
iret
nop
dec
sti
stos
push
mov
sub
inc
int3
xchg
sbb
jns
bound
jo
xchg
xchg
adc
test
push
inc
bound
jns
jno
sbb
je
into
xchg
stos
dec
push
push
daa
jg
pop
iret
jl
cmp
mov
divl
mov
adc
js
sub
and
inc
sbb
adcl
cs
jl
flds
fistps
roll
in
jb
add
pop
stc
lcall
ljmp
das
mov
es
mov
xor
xchg
leave
add
dec
cmp
stc
inc
mov
loope
pusha
imul
clc
mov
sub
rol
add
shlb
sbb
loope
sub
sub
jns
adc
fildll
jb
out
movsl
and
mov
pop
inc
inc
loopne
cmp
testb
dec
aaa
push
pop
adc
arpl
mov
inc
push
xchg
mov
mov
jo
dec
pushl
add
fisttpl
in
dec
xor
fstl
scas
xchg
lea
push
jp
les
mov
push
mov
xor
test
xor
and
movsb
rolb
daa
cmp
mov
xchg
jae
dec
pop
sbb
lret
add
mov
movsl
enter
imul
clc
xchg
mov
cmp
je
ret
mov
lods
dec
jns
or
or
cld
test
xor
mov
sbb
push
mov
pop
ja
or
aaa
dec
je
aas
sub
xor
xor
mov
add
mov
mov
sarb
cmc
mov
rcrl
cli
je
in
mov
call
into
sub
stos
mov
xchg
fldenv
push
mov
fidivl
insb
dec
aas
ret
sub
scas
inc
mov
jle
or
call
dec
out
jnp
aam
lahf
iret
jp
jbe
push
jbe
nop
call
jg
stos
shr
and
push
gs
pop
inc
and
aaa
mov
into
push
sbb
and
hlt
or
testb
jno
lea
or
dec
mov
daa
inc
mov
and
dec
mov
test
inc
inc
cltd
push
mov
push
xchg
jmp
jle
dec
test
pop
dec
mov
adc
xor
mov
xchg
out
test
mov
cmp
inc
inc
push
sahf
fsts
in
scas
push
jnp
pop
xor
inc
push
push
cmc
xchg
stos
add
lcall
xor
mov
lea
fisttpl
xchg
test
pop
fstl
push
jns
loope
push
or
dec
sbb
les
mov
sahf
push
ss
into
lock
pop
jmp
xor
cmc
sti
adc
push
je
cltd
je
xchg
adc
and
push
add
pusha
push
cmp
sarl
push
sbb
mov
mov
add
xor
push
pop
xchg
icebp
repnz
std
inc
and
outsb
add
cmpb
add
outsb
inc
pop
and
lods
sbb
scas
in
icebp
xchg
mov
testb
xor
mov
push
in
xchg
adc
clc
jp
stc
push
aas
sbb
or
xor
in
xlat
dec
xor
inc
ljmp
test
cmpsl
into
or
gs
inc
sub
xor
sbb
lods
clc
push
shll
dec
push
cltd
mov
mov
jmp
mov
out
jl
add
loopne
lahf
das
test
clc
xchg
mov
clc
sub
das
pop
hlt
loopne
fwait
pop
rorl
aas
and
add
and
inc
mov
jl
mov
xor
cmp
idivb
data16
fdivrs
xchg
inc
in
leave
in
xor
push
cmp
push
js
lcall
sub
out
mov
fldt
cmc
in
call
fcompl
push
push
adc
nop
jmp
mov
fwait
hlt
dec
adc
or
divl
ljmp
inc
sbb
mov
fwait
cmc
sub
dec
mov
pop
inc
mov
pop
jno
jg
pop
or
and
aad
mov
pop
in
inc
fbstp
mov
icebp
or
and
and
and
cs
mov
fxch
inc
daa
jnp
dec
jg
js
rclb
fiadds
push
pop
push
cmp
addr16
xchg
jae
int
jg
sbb
xchg
cltd
dec
pop
scas
jo
xchg
mov
sbb
dec
cmp
mov
testl
mov
into
and
jne
popa
test
dec
addr16
addr16
adc
mov
jge
jmp
mov
stos
jns
out
pop
adc
lock
xchg
xorl
push
movsl
cmp
enter
cs
lret
dec
out
loop
mov
jecxz
iret
outsl
out
fsubrs
scas
mov
push
dec
or
mov
xchg
push
mov
xor
addr16
jnp
mov
ds
fwait
mov
adc
shll
lods
sbb
xchg
push
out
pop
rcll
dec
ss
pop
das
pop
jecxz
mov
rcll
ret
imul
push
into
out
jnp
mov
mov
addl
cs
inc
test
push
mov
pop
xor
and
inc
or
or
notb
cmp
mov
ja
pusha
lods
pusha
leave
add
arpl
mov
decl
or
sar
repnz
mov
adcl
mov
cmp
insb
stos
pusha
push
mov
mov
mov
cmp
insl
cmp
test
popa
sarb
push
xchg
lcall
cs
ds
mov
mov
or
shr
cmpsb
fwait
add
adc
neg
cmc
popf
mov
aad
sub
xor
push
dec
xchg
pop
aas
jnp
or
inc
clc
lret
andb
inc
jne
mov
or
and
loop
cli
adc
cltd
out
popa
push
lahf
call
or
add
clc
mov
cmc
xchg
push
sahf
mov
scas
lahf
fcmovb
push
pop
fadds
add
imul
in
gs
push
sbb
mov
jbe
arpl
icebp
or
cmp
sti
mov
dec
inc
or
or
xor
jecxz
xchg
jp
cmp
aas
popa
in
mov
filds
and
cmp
sub
add
xchg
and
mov
jb
inc
call
and
pop
inc
nop
or
das
bound
push
or
adc
inc
jb
push
jbe
mov
imul
sub
xor
sub
cmpsb
lds
cltd
aam
hlt
or
jbe
mov
mov
cmp
jo
xchg
and
popa
xor
lcall
js
incb
add
loope
adc
xchg
jg
gs
xchg
mov
jg
fcom
dec
gs
mov
dec
mov
cld
jnp
nop
ss
sub
cli
sbb
jae
jle
mov
pop
sub
in
adc
rolb
cld
std
call
mov
mov
lea
in
mov
lods
mov
xor
sub
fbld
sub
dec
xchg
sub
ss
dec
mov
dec
dec
fldenv
mov
mov
js
pop
call
test
sbb
push
pop
xchg
rorl
sbb
mov
in
pop
or
dec
sbb
fneni(8087
and
out
int3
cli
mov
pop
dec
cmp
loope
mov
dec
adc
jl
fldl
scas
test
sub
cli
mov
xlat
adc
sub
dec
mov
mov
sbb
or
dec
jb
adc
xchg
push
or
jecxz
shr
and
cmp
shr
stos
and
in
mov
das
enter
xchg
pushf
leave
add
imul
mov
ja
push
inc
ljmp
iret
arpl
movl
int
pop
mov
push
stos
inc
data16
sub
mov
and
xchg
pop
inc
sub
pop
shrw
and
fdivrs
cmp
sub
sti
sbb
mov
mov
loope
mov
pop
jmp
sbbb
iret
adc
pop
xchg
cmp
outsl
leave
pop
scas
cmp
cmp
rclb
addr16
or
iret
xor
cmp
push
cwtl
push
mov
data16
and
jle
and
jno
lret
jnp
mull
clc
fstpl
outsl
pop
fucomp
fmul
pop
pop
mov
xchg
dec
test
jmp
mov
pop
bound
xchg
data16
mov
movsb
lea
test
aaa
aas
icebp
dec
cli
xor
daa
or
notb
leave
clc
or
out
mov
push
cltd
aad
adc
add
rol
xchg
jns
int3
add
std
jae
mov
or
repnz
sbb
cmp
gs
inc
and
stos
mov
in
mov
or
and
movsb
jo
inc
clc
pop
xchg
orb
push
mov
mov
cmp
ret
mov
cmp
repz
cli
xchg
iret
jle
jmp
push
or
call
xor
mov
cld
sub
fimull
gs
add
cld
incb
inc
clc
jne
ds
cmp
scas
xor
adc
xchg
jno
inc
sahf
arpl
pop
cmpsl
xchg
push
je
mov
and
mov
add
aaa
bt
imul
pop
cmpsl
xchg
hlt
inc
dec
xchg
mov
xchg
lcall
adc
inc
jb
int
enter
jmp
sub
fwait
stc
das
or
idivl
les
lcall
xchg
jmp
loope
mov
je
cmp
int
mov
mov
inc
jmp
fildl
std
not
pop
aam
xchg
and
jmp
push
xor
and
sub
mov
mov
fwait
dec
mov
sub
and
cmc
ficoml
jge
mov
pusha
mov
mov
mov
mov
mov
pop
xchg
out
and
aaa
dec
fwait
inc
cs
sbb
rcr
jne
push
cmpsl
out
jae
cld
ljmp
sti
push
inc
lds
out
frstor
mov
mov
sub
xor
mov
push
lea
dec
add
ficompl
pop
cs
add
pop
pusha
pop
push
and
cltd
xor
and
jg
in
dec
mov
adc
pop
in
sbb
add
sbb
xchg
in
sub
add
addr16
mov
rorl
jl
aad
dec
in
popa
jb
jb
or
adc
sbb
lret
mov
jp
xchg
and
fcmovbe
add
pop
xor
and
jbe
loopne
imul
ret
inc
arpl
push
ret
xchg
popl
aas
lcall
add
popf
rol
lods
sbb
in
sar
dec
enter
push
dec
mov
shrl
fdivrl
lods
inc
popf
xor
stos
pop
or
adcb
arpl
iret
lock
mov
icebp
int3
xchg
and
mov
push
xchg
mov
mov
pop
ds
addr16
xchg
mov
jecxz
popf
pop
test
xor
outsb
jno
aas
andl
xlat
rolb
push
jp
push
pop
push
xor
test
pusha
mov
test
inc
xchg
push
sbb
xchg
cmc
xor
das
xchg
out
fistpll
je
mov
std
aad
adc
enter
fwait
mov
into
xchg
cmp
jg
ret
dec
xor
push
sub
fidivl
icebp
xchg
mov
xchg
add
sbb
mov
fildl
je
in
mov
jecxz
inc
lcall
inc
insb
repz
cli
push
test
das
mov
movsb
loop
xchg
fwait
data16
mov
push
mov
fldl2e
adc
cs
cmp
mov
mov
mov
std
ljmp
jo
cmp
arpl
arpl
lock
push
test
test
xor
mov
les
mov
ror
push
adcb
add
dec
aas
ret
cmpl
pop
mov
mov
fistpl
test
lock
push
inc
cld
pop
outsb
cld
outsl
and
adc
xchg
dec
pop
iret
test
and
lock
push
mov
cmp
mov
lea
add
clc
jmp
or
cwtl
fnstsw
and
push
aad
mov
clc
xchg
js
pop
cmpl
sbb
int
inc
mov
mov
jbe
cmp
loopne
add
inc
push
repnz
mov
jp
dec
cltd
into
mov
and
shrb
add
or
clc
loope
jnp
adc
pop
lret
stos
shlb
push
imul
cs
inc
clc
dec
addb
sub
jo
sub
ficoms
jae
xor
loope
adc
imul
mov
xor
push
stc
cs
mov
mov
jno
sbbl
jecxz
push
add
mov
mov
cmp
mov
aaa
fsub
cmc
or
jns
push
push
push
sarb
movsb
cmp
test
push
loop
cmp
add
push
negl
jge
jmp
and
ficoml
rcr
test
ljmp
sub
aas
lods
pushf
sub
inc
out
jbe
push
jle
mov
jno
mov
xchg
adc
std
ret
bound
idivl
addr16
sub
cmpsl
xchg
aaa
dec
es
pop
lock
scas
add
shll
dec
lds
push
loop
jle
out
imull
push
and
cmpsl
imul
dec
mov
sbb
decl
mov
cltd
jle
dec
or
insl
sbb
cmp
cmp
mov
sub
das
pop
enter
sbbl
pushf
repz
mov
pop
sub
in
push
fs
cmp
sub
lods
cmp
sbb
dec
fs
test
dec
mov
xor
adc
pop
shll
repnz
leave
sub
in
fisubl
outsl
sub
mov
int3
and
ds
or
lds
test
jp
or
data16
jmp
jae
add
jecxz
nop
jb
pushf
push
aas
fbld
divb
fs
adc
mov
xor
bnd
push
loopne
mov
and
xorl
sbb
andl
dec
fscale
sub
push
aas
cmpsb
push
jns
das
xor
dec
sub
je
xchg
sub
and
imul
or
xchg
cmpsb
sbb
fimuls
fisttps
lret
lea
push
lret
mov
shrb
mov
mov
gs
sbbl
cmp
and
adc
push
mov
cs
or
mov
in
pop
lods
add
xor
pop
ror
data16
jmp
mov
and
dec
jecxz
lret
or
loope
sub
and
mov
xchg
push
daa
sub
cmp
cmp
lret
dec
pop
insl
dec
adc
sub
adc
lock
mov
cmpsl
test
loopne
push
lea
push
add
out
movsl
mov
pop
sbb
mov
jecxz
or
xchg
sti
mov
hlt
mov
stc
arpl
mov
sub
aad
push
outsl
inc
ss
stos
push
aam
xor
sub
faddl
push
out
mov
mov
lret
jecxz
mov
cmc
xchg
sbb
test
mov
ror
dec
imul
and
sbb
das
hlt
jae
out
or
pop
movsb
mov
aas
mov
xchg
cmp
sti
sub
xchg
aad
inc
sbb
lret
aam
sub
sub
inc
push
jo
mov
cmp
les
add
repz
sub
or
xor
arpl
popa
jp
and
pushf
psubusw
ljmp
sub
jae
test
pop
jg
jmp
or
sbb
sbb
popf
or
fisubrl
dec
xchg
scas
jle
push
cmp
rclb
icebp
adc
jo
addl
cmpsl
mov
inc
call
mov
lock
rclb
xor
mov
outsl
mov
jl
int3
out
adc
mov
or
push
pop
ret
sub
xor
ret
mov
in
test
push
push
rclb
cmpsl
cmp
xchg
aaa
sbb
inc
jge
shrl
pop
fcompl
scas
pop
inc
addr16
mov
jecxz
jno
xorl
sbb
lock
rolb
int
add
in
mov
mov
inc
hlt
dec
sub
popa
ja
mov
push
scas
imul
xor
imulb
mov
subl
xlat
mov
fcomps
adc
cltd
stc
in
mov
cmp
cs
testb
repnz
push
xchg
aam
pushf
jge
push
mov
ljmp
fyl2xp1
inc
fidivrs
inc
sub
movsl
mul
lea
int3
stos
scas
loopne
sbb
test
inc
mov
notb
or
repnz
arpl
imul
pop
add
inc
inc
stos
std
jbe
es
add
mov
adc
xchg
dec
and
jnp,pt
sub
mov
xlat
mov
mov
call
mov
pop
sbb
insl
outsb
stos
mov
mov
cmc
in
pop
sbb
pop
xor
daa
ficomps
mov
hlt
leave
std
mov
popl
repnz
mov
push
mov
sub
sub
fld
xlat
hlt
pop
iret
and
ljmp
add
or
rcrb
or
push
xchg
mov
adc
dec
das
or
push
scas
out
mov
inc
test
fnstcw
mov
sub
ret
jmpw
pop
mov
in
jg
jno
bound
outsl
cld
leave
xchg
push
scas
leave
jecxz
pop
movl
mov
clc
jbe
pop
cmp
mov
push
fisttpl
sub
inc
repz
sub
popf
sub
sbb
lea
push
cmpsl
cli
add
pop
xorb
iret
mov
popf
cmpsb
sbb
ljmp
mov
out
mov
sahf
mov
cld
pop
jecxz
mov
fnstenv
mov
test
shlb
ja
or
jo
stc
lahf
clc
lret
subl
pop
pop
push
arpl
cltd
jmp
fildll
call
lods
mov
mov
xchg
insl
lahf
push
mov
mov
fsubr
mov
add
aam
loope
ds
in
rcr
lahf
pop
adc
pop
into
jae
aam
xchg
loope
fiaddl
cmp
cld
jge
lds
stos
sahf
cmp
stos
cltd
add
out
nop
mov
in
dec
adc
ja
cmp
ljmp
cmp
xchg
aam
repnz
or
adc
sbb
sub
xor
stc
xor
push
leave
shrd
ds
mov
aaa
mov
inc
ret
cli
sub
shrl
fstl
or
stos
push
ror
out
rorl
xchg
insb
ss
pop
pop
out
sub
ret
fwait
js,pt
mov
xchg
stc
out
and
je
rorl
out
stos
push
pop
sub
sbbl
cmp
int3
mov
repz
int
mov
stos
cmp
movsb
rolb
xor
jmp
mov
xor
mov
cmpb
mov
ret
ror
jne
pop
and
sbb
xchg
jb
cld
inc
add
jp
xchg
dec
jl
dec
add
cltd
mov
scas
xchg
outsb
inc
push
xchg
shrb
loop
push
mov
mov
das
dec
mov
int3
cmp
mov
sub
imul
pop
xor
loop
pushf
inc
cmpsb
adc
aas
lret
out
add
inc
sub
pop
sub
inc
jnp
pop
arpl
jno
add
out
rcrl
popa
sbb
lea
pop
inc
ljmp
dec
aaa
sbb
fcompl
xchg
jbe
aaa
test
das
in
in
test
xchg
xor
fmull
dec
mov
xor
add
cwtl
test
push
sub
cmp
jne
lcall
xchg
jo
pop
mov
adc
subl
add
or
mov
jge
enter
adc
aam
mov
mov
movsb
push
adc
mov
fcmove
push
cmpb
xor
sbb
fdivrs
add
dec
ret
scas
shl
add
rclb
sbb
dec
push
gs
js
jne
test
or
add
ljmp
pop
push
test
mov
imul
lret
fbstp
sbb
das
mov
hlt
dec
push
jl
ja
scas
cltd
sub
in
or
loopne
fidivl
push
xchg
mov
insb
sarl
mov
sbb
cmp
xchg
int
mov
iret
xchg
mov
fistpll
xor
pop
or
jecxz
loope
adc
fcmovbe
mov
bound
movsb
add
repnz
rcll
movsb
dec
enter
call
clc
jmp
mov
push
std
pop
leave
pop
mov
xor
cmp
sarl
lea
insl
insb
mul
leave
lahf
scas
movsb
mov
dec
jnp
seta
ja
mov
pusha
adc
push
inc
jae
mov
rcll
xchg
mov
popf
lea
js
loope
or
jnp
pop
lods
sub
cli
les
push
add
fldt
pop
mov
push
mov
jae
jl
int3
inc
insb
mov
xchg
lcall
iret
pop
adc
repz
cmp
cld
add
testl
xchg
and
and
mov
mov
adc
rcll
cld
jbe
inc
ss
cmp
fldl2e
and
pop
cltd
sub
mov
and
sub
imul
iret
jae
out
cs
sub
and
stc
cmpsb
nop
stc
insl
ds
stos
push
movsb
fisttpl
decl
cmp
and
and
adc
jns
clc
xchg
and
sahf
call
lea
rcrb
mov
in
mov
ret
std
push
mov
call
loopne
pushf
sbb
mov
out
add
and
dec
inc
test
enter
testl
fwait
xchg
sbb
push
mov
dec
js
jle
mov
arpl
push
sbb
jmp
adc
mov
cmp
pusha
xchg
jb
es
cmp
fcom
lea
std
and
xlat
shl
cmp
outsb
pusha
sbb
xchg
jmp
jbe
imul
out
fmul
aam
addr16
imul
pop
out
push
fs
hlt
gs
xor
mov
insl
and
xchg
pop
pop
push
mov
dec
sbb
cmp
sub
push
stos
push
or
cmp
int
mov
test
repnz
mov
lahf
out
add
mov
mov
or
sub
in
cmp
push
or
sti
aad
mov
mov
cmpsl
mov
mov
push
push
xor
fsubrs
cmp
adc
outsl
push
pop
inc
mov
jbe
fcomps
cmc
xor
inc
mov
push
pop
adc
jecxz
xor
shrb
dec
loope
xor
adc
cmc
add
dec
inc
sub
daa
mov
nop
cmp
jle
adcb
lcall
xchg
cmp
push
int3
jecxz
fwait
movsl
icebp
lret
jecxz
nop
fwait
stos
repnz
xor
dec
xchg
cli
daa
push
adc
std
jge
or
into
dec
sub
sti
data16
xor
jg
pusha
sub
adc
repz
xchg
jecxz
mov
sub
insb
neg
lods
cmp
fldl
xor
mov
inc
mov
sub
or
imul
out
loopne
scas
fsin
add
or
test
aas
xor
cmp
add
mov
push
mov
shl
xchg
jg
or
jp
mov
jge
sti
mov
jmp
push
iret
xchg
inc
adc
push
loope
pushf
loop
mov
aad
xchg
jo
mov
in
insl
lahf
sti
js
fmull
lret
mov
outsl
add
fnsave
test
stos
ss
mov
mov
mov
into
xor
test
or
mov
imul
xor
test
pop
sub
sbb
xchg
jge
cmp
sub
fstps
mov
mov
out
iret
and
cmpsb
aad
push
sbb
jl
mov
or
repnz
hlt
push
into
fisttps
aam
xchg
insb
cmpsl
andl
push
data16
jnp
sbb
cltd
test
aaa
or
leave
movsb
clc
push
jmp
or
sub
pop
xor
add
das
cmpb
adc
lock
add
les
dec
repz
clc
sub
imull
test
insb
push
cmp
stc
add
call
insl
add
movsb
and
push
sbb
xchg
dec
cmp
fs
mov
add
ja
mov
inc
testb
in
inc
xor
insl
add
mov
hlt
or
leave
sbbb
fsubs
lret
jns
xchg
negl
push
test
push
push
mov
mov
sub
lods
outsb
jecxz
cmp
out
pop
cmp
out
call
fdivl
mov
xchg
sti
adc
mov
xchg
mov
xor
addr16
adc
xchg
add
xor
in
sbb
fcoml
arpl
gs
jmp
imul
push
sbb
cmpxchg
loopne
shll
and
xchg
lods
scas
sbb
sub
adc
dec
push
push
or
movsl
lods
xor
cmc
sub
push
sbb
test
outsb
inc
cli
mov
lahf
popf
rol
aas
inc
jae
test
faddl
test
push
adc
mov
data16
dec
hlt
add
cs
inc
mov
inc
dec
cmp
xor
sbb
inc
or
int
pop
mov
xchg
js
test
int
int3
pop
scas
cmp
leave
adc
aam
cli
add
fwait
pop
or
in
ja
mov
dec
outsl
inc
test
stos
mov
out
loopne
fdivrs
xlat
loopne
cmpb
push
insb
in
sbb
add
xchg
rorl
xchg
enter
inc
sbb
cltd
mov
fists
and
pop
in
icebp
mov
jne
dec
push
clc
jge
lods
push
es
inc
cmp
nop
jns,pn
inc
xor
into
xchg
cli
mov
cs
dec
ror
fwait
pop
fdivl
adc
mov
push
in
sbb
ficompl
add
mov
add
xchg
inc
or
scas
lret
leave
pop
jne
fs
inc
inc
popf
ret
or
into
and
or
pop
pop
fnstenv
lret
hlt
inc
xchg
pop
pop
sbb
xchg
and
cwtl
xlat
mov
or
sbb
imul
adc
mov
sbb
int3
stos
aas
mov
imul
push
lret
jl
lea
lcall
dec
je
aaa
test
mov
dec
sti
lock
mov
adc
mov
jne,pn
add
and
jae
out
pop
in
fidivrl
mov
shl
test
pop
int
imul
outsl
mov
ljmp
xor
mov
icebp
out
push
pop
jns
lock
jmp
jnp
dec
jle
enter
push
fmul
add
repz
into
mov
fwait
stos
mov
jg
mov
test
cmp
stc
ror
je
cmp
jl
mov
inc
in
push
pop
popa
mov
mov
mov
add
mov
adc
sub
lods
sahf
mov
pop
rcrl
mov
les
jne
mov
dec
xor
ja
jo
iret
test
fnstsw
adc
xor
mov
lods
and
arpl
mov
dec
dec
aam
add
arpl
jmp
data16
push
xchg
adc
gs
cmp
xor
mov
addr16
fwait
cmp
xchg
pop
fdivrs
stos
icebp
add
test
icebp
pop
lcall
sub
adc
sub
xorb
xor
pop
jge
hlt
nop
jmp
sub
sbb
aas
pop
into
mov
jp
jno
inc
dec
les
inc
xor
dec
push
xchg
inc
jnp
add
fstl
cmp
and
mulb
xlat
notl
inc
es
jge
push
inc
sub
test
fcoms
addr16
aaa
mov
stc
ljmp
add
ret
sub
mov
stos
mov
shrl
adc
or
mov
cli
mov
aaa
push
lock
dec
sub
mov
cmpsb
cmp
dec
cmpsl
sbb
cmp
dec
cli
shrl
notrack
ret
cmpsl
cwtl
fs
or
repnz
dec
push
mov
push
scas
aam
addr16
pop
cmp
cmp
xor
adc
mov
add
div
inc
jo
imull
dec
add
jbe
xchg
mov
pop
xchg
pusha
fs
dec
xchg
adc
in
sti
jns
push
sub
or
jl
iret
and
mov
stos
lcall
adc
sub
sahf
pop
xchg
or
push
std
bound
push
sub
pop
into
nop
in
mov
inc
xchg
jg
es
scas
aas
dec
mov
xchg
data16
push
cmp
or
repnz
sub
or
lahf
or
add
aam
bnd
xchg
dec
push
repnz
loopne
adcb
mov
mov
shll
jo
in
jnp
sbb
pop
je
mov
aas
lock
mov
xor
pop
xor
rorl
dec
repnz
inc
cmp
roll
dec
push
push
jno
int3
sub
fwait
insb
xlat
in
outsb
lock
mov
push
repnz
repnz
sub
out
xor
lock
xor
adc
adc
xor
ss
ret
andl
adc
xor
sbb
and
inc
push
stos
aad
sbb
pop
mov
loope
addl
sbb
cmpsb
and
inc
hlt
xchg
push
sbb
ljmp
or
clc
mov
mov
fisubrs
xchg
cwtl
je
adc
mov
adc
jbe
xchg
pop
int3
pop
jbe
jae
cmp
xor
adc
mov
mov
testl
dec
imul
pop
movsl
add
aas
sbb
test
aam
push
add
mov
shll
mov
pop
jb
sbb
jns
inc
mov
je
push
jmp
in
imul
jae
adc
lcall
pop
xlat
loop
inc
sub
int
adc
call
and
je
aam
dec
repnz
adc
addb
fistpl
fsubs
add
cmp
gs
jmp
sarb
push
test
test
cmp
test
pop
nop
jg
sbb
xchg
inc
pop
int
fiaddl
add
adc
mov
xchg
mov
add
popf
lahf
mov
adc
inc
lcall
and
fcompl
bound
shlb
outsl
inc
stos
pusha
xchg
mov
pop
xor
sub
test
pop
mov
mov
ljmpw
sbb
and
call
sbb
pushf
fcoml
sub
add
adc
add
dec
dec
pop
add
inc
aaa
and
mov
or
sbb
bound
push
lret
sbb
js
or
xor
fnclex
nop
fcoms
dec
pop
jo
mov
loopne
dec
mov
push
int3
out
adc
aam
push
and
xchg
pushf
inc
pop
push
jp
stos
nop
and
pop
jle
popf
pop
daa
adcb
cmp
inc
xor
outsl
fdiv
mul
and
arpl
ja
add
out
fistpll
xchg
addb
jb
pop
push
sub
lds
mov
test
movsb
cltd
popf
cli
xor
adc
fimull
dec
pusha
imul
stos
jl
lock
xchg
gs
push
mov
cmp
mov
ljmp
cmc
adc
inc
addb
mov
pop
into
out
or
push
and
and
push
dec
pop
and
mov
pop
ss
lahf
sub
cmpsb
dec
add
test
icebp
popf
inc
outsl
dec
iret
ss
mov
mov
and
and
sub
pop
ja
fistpl
sub
cmp
hlt
ret
ss
adc
sub
insb
sub
lock
lcall
xor
xor
adc
sbb
inc
jle
adc
ret
adc
out
jo
mov
pop
sub
ljmp
nop
dec
loop
icebp
enter
stos
fbstp
nop
mov
movups
jnp
fs
daa
shlb
aad
mov
jnp
mov
pusha
out
mov
std
add
adc
pop
out
lds
mov
loope
dec
es
pop
mov
leave
insl
inc
sub
popf
or
xchg
xor
cmp
cld
lret
xor
insb
mull
dec
sub
cmp
cmp
jo
daa
mov
fcomps
lahf
xor
adc
fiaddl
orl
xor
mov
jl
insl
sub
push
or
int
out
cmc
push
jp
dec
cmp
cmp
sbb
shrb
mov
and
sti
xor
aam
add
or
cmp
pop
mov
je
jle
stc
sbb
push
fld
adc
sbb
mov
mov
jl
fcoms
push
mov
iret
and
xor
aaa
dec
cmp
inc
adc
xor
loop
xor
pop
daa
inc
mov
imulb
cmc
movsb
out
lods
fildl
xchg
repz
push
xlat
jb
popf
int
or
or
push
cmp
add
inc
sbb
xchg
mov
in
mov
push
sahf
mov
pop
stc
dec
pop
aas
push
nop
pop
jg
fadd
loope
daa
jne
fwait
and
adc
ljmp
cs
sti
hlt
dec
pop
std
mov
faddl
orb
dec
insb
cmp
mov
stc
jmp
sbb
adc
or
lock
jmp
decl
jg
mov
mov
sub
mov
push
fnstcw
jg
and
adc
mov
in
movsb
jo
mov
dec
xchg
pushf
push
xor
pop
repz
jno
fldenv
jecxz
xchg
loopne
push
dec
inc
xorl
dec
js
dec
cmp
stc
mov
add
pop
xor
push
rorb
int3
jle
cmc
cmp
cmp
cmc
lahf
mov
ret
pop
sbb
mov
xor
sahf
push
add
push
push
xchg
je
arpl
xchg
push
cli
adc
xchg
shrl
mov
adc
mov
lret
jge
and
xchg
push
mov
inc
popa
rolb
icebp
loope
aas
mov
push
cmp
roll
xlat
das
add
icebp
pop
cmp
jnp
minps
push
and
and
mov
dec
xchg
popl
dec
push
fisttps
movsb
aaa
ja
shll
xor
fsubrl
cmpsl
or
ljmp
mov
das
rcl
popa
icebp
pop
mov
test
rorb
pop
popa
jb
int3
shlb
sbbb
pop
xor
rcrl
add
mov
mov
and
push
adc
xchg
dec
jo
vminps
push
aam
daa
pop
sub
sub
stos
push
sbb
in
into
in
jno
xchg
scas
and
nop
outsl
in
jbe
cmp
sbb
push
pusha
cs
adc
loopne
jb
sahf
js
or
addr16
mov
out
dec
hlt
imull
push
int
out
inc
out
ja
cmp
arpl
pop
outsb
faddl
rolb
sbb
dec
je
dec
dec
sub
or
inc
jg
cmc
addr16
leave
or
mov
push
sbb
roll
mov
lcall
rolb
and
mov
cmp
pop
pusha
mov
xchg
inc
incb
pusha
jg
das
ret
dec
mov
loop
add
push
dec
pop
push
inc
push
mov
insb
sbb
in
jae
sbb
popa
sbb
inc
stc
sbb
pop
sub
inc
ret
mov
testl
jmp
pop
rcrl
addb
int
orl
ljmp
lock
stos
imul
or
dec
mov
add
decl
push
out
pop
xlat
xor
mov
dec
adc
aas
pop
push
lcall
iret
xchg
lret
mov
cmp
adc
dec
sub
dec
add
enter
subl
divl
and
inc
push
xorb
es
sub
add
mov
and
mov
xlat
push
inc
mov
mov
lock
sbb
test
ret
insb
push
pop
cmp
cmpsb
out
jmp
pop
pop
into
repnz
repz
cmp
pop
stc
mov
dec
loopne
icebp
inc
popf
fisubrl
and
cmp
sbb
test
inc
inc
inc
or
pop
pop
pop
test
mov
sub
sub
movsb
jle
es
repz
pop
cmpsb
dec
int
push
and
cmp
mov
sbb
mov
rep
sbb
mov
xor
mov
loopne
push
sti
sbb
clc
fdivrs
sub
mov
fadds
cmp
outsb
sbb
mov
shlb
push
movsb
sub
jae
aam
leave
pop
lahf
sub
call
popa
add
push
push
xchg
xor
xchg
sbb
jl
push
ds
pop
mov
repnz
fsubrs
cmc
vmovq
push
in
push
mov
jae
jecxz
ficoms
mul
xchg
push
dec
pop
negl
fdivs
sub
xchg
adc
sub
lcall
mov
leave
fisubs
addr16
ret
jno
and
mov
pop
mov
mov
daa
loopne
js
inc
inc
or
jg
pop
scas
aad
inc
mul
inc
push
int
das
jno
sarb
cld
or
js
ds
mov
leave
mov
and
pop
xlat
imul
and
xchg
mov
aad
cld
mov
fisttpl
nop
sub
jo
int
jmp
fisubrl
mov
adc
out
push
mov
out
dec
push
cwtl
movsl
mov
in
xlat
out
aaa
adc
negb
xchg
adc
mov
xor
js
pop
pushf
aas
test
data16
out
adc
xchg
xor
pusha
rolb
rcrb
sub
add
pop
sti
cmp
adc
loop
dec
mov
cltd
clc
push
popf
pop
pop
xchg
lds
add
sub
inc
cmp
sub
fisttpll
pop
movsb
in
jb
ja
mov
push
jae
mov
add
cmpsb
dec
bound
pop
inc
lcall
out
mov
pop
cmpsl
in
pop
push
mov
push
or
push
outsl
cmp
sub
test
pop
movsl
outsb
sti
out
insl
sub
inc
push
dec
fsts
test
fs
dec
fidivrs
test
pop
sub
movsb
ljmp
insl
xor
inc
xchg
je
lods
xor
cmc
pushf
push
sarb
and
lret
shlb
and
in
out
pop
popa
lods
fdivr
pop
cmp
sbb
lahf
jb
testl
or
pop
test
pusha
mov
aaa
xchg
movsl
test
mov
mov
add
jae
leave
push
fisubrs
cmovno
and
push
popw
mov
push
inc
inc
test
lret
loop
pop
jge
and
or
cli
out
mov
sahf
push
mov
es
add
mov
ds
roll
jne
xchg
pop
mov
into
mov
sbb
xor
dec
iret
rcrl
pop
xchg
pushf
xchg
xchg
cmp
fcoms
xor
ret
or
jge
mov
push
into
rcll
pop
fbstp
jne
inc
cltd
cmp
add
leave
sbb
cld
dec
aam
pop
insb
cs
lret
cmp
rcl
mov
lods
xchg
dec
fs
fcmovnbe
jge
mov
xor
sbb
xor
cld
and
or
outsl
or
mov
les
inc
out
loop
xorb
fcoml
xor
lods
lock
fcmovu
movsb
cmp
sbb
xor
fisttpl
xchg
clc
popa
ds
in
jg
notl
cmp
into
js
pop
mov
popa
sbb
sub
cs
aam
sbb
pushf
in
andb
push
mov
fistpll
xchg
inc
inc
dec
and
inc
mov
pop
mov
dec
cmp
pop
loopne
adc
xchg
pop
movsb
loope
sbb
data16
sbb
xor
sub
add
int
mov
jp
int
dec
dec
mov
fisttpll
lods
daa
sbb
addr16
repz
sti
xorb
cmpsb
shlb
dec
cmp
cmpsl
push
add
mov
jmp
shlb
adc
jmp
mov
dec
or
sbb
pop
into
out
fs
xchg
push
dec
mov
sbb
pop
fcomp
psubusb
mov
imul
push
adc
arpl
loop
lret
data16
jns
mov
mov
inc
stos
sub
shr
xchg
sbb
add
repz
cmp
pop
and
push
mov
cs
mov
jp
outsl
rorb
pop
inc
xchg
mov
and
lods
and
push
ret
xor
mov
lds
loopne
pop
push
xchg
outsb
jl
xor
xchg
sub
add
icebp
and
popf
xchg
jnp
dec
add
cwtl
inc
adc
bound
scas
mov
xor
dec
push
xchg
pop
sahf
movsb
push
pop
pop
add
mov
roll
mov
cmc
js
adc
or
inc
xchg
lds
xchg
test
insl
adc
cmp
pop
mov
cmp
fnclex
scas
push
xchg
push
inc
or
xchg
insl
pop
xchg
clc
ss
xor
push
in
shrb
jae
rep
xor
mov
xchg
or
cli
rcrb
mov
and
xor
jbe
shlb
jbe
add
pop
mov
sub
ja
jo
rolb
xchg
and
xchg
lock
xor
ficompl
outsb
jp
mov
pop
mov
adc
and
mov
or
dec
rorb
lods
jns
jecxz
pop
incl
and
lahf
gs
jo
divl
xor
push
xor
sahf
loop
cmp
and
fsubp
ss
cmp
mov
lret
add
xchg
pop
movsl
or
test
push
int3
inc
fmuls
push
xor
test
sahf
scas
ror
mov
in
sub
cmp
add
add
mov
lods
int
sub
jp
inc
hlt
outsb
bound
jno
push
pushf
inc
in
jnp
push
fs
xchg
les
std
add
les
cli
into
scas
in
pushf
pop
jo
into
test
pop
pushf
aaa
pop
mov
stos
gs
jecxz
test
xchg
aam
push
or
fsubrl
repz
jno
cmp
pop
xchg
push
cmp
cmp
add
fnstcw
mov
cmpsb
mov
lcall
add
add
orl
inc
sub
or
xor
inc
sti
or
push
mov
mov
mov
push
ljmp
movsl
jp
mov
test
insb
aaa
sub
add
fisubs
out
or
stc
add
popa
das
pop
mov
bound
andl
cmp
incb
dec
in
dec
rcr
cld
mov
jmp
pop
mov
fucom
jmp
adc
push
pushw
in
adc
adc
cld
aam
mov
xor
push
rolb
pop
mov
fs
push
call
jnp
out
xchg
jge
mov
pop
push
push
subl
sub
loop
insl
sub
stc
ljmp
or
insl
aam
aaa
push
ds
leave
sub
xchg
and
fcomip
jae
lds
test
add
loope
sbb
cmc
icebp
cwtl
enter
lret
sbb
add
inc
pop
xor
add
fdivrs
push
std
or
or
pop
xchg
sub
addr16
pop
loope
mov
imul
jge
les
sub
or
mov
and
rcl
mov
test
int3
popa
es
lods
rorb
leave
es
pop
mov
in
filds
out
jle
xchg
fidivs
mov
mov
cmpsl
jecxz
add
test
test
mov
out
sbb
adcb
or
fs
test
out
push
mov
dec
add
and
shrb
jb
pop
push
arpl
stos
popf
push
push
aad
into
sub
cmp
int
push
xchg
jo
mov
imul
push
dec
and
shrl
stos
mov
out
sbb
aaa
jl
out
jne
test
loopne
sbb
test
or
sbb
xchg
push
or
stos
loope
adc
add
scas
push
cmp
imul
inc
fwait
adc
mov
fstpl
loope
mov
inc
outsl
xchg
bound
and
das
or
jp
pop
sub
and
add
inc
xor
fsub
out
lods
out
sbb
repz
movl
jecxz
shl
jle
pop
test
add
or
xchg
sarl
roll
jns
aaa
out
xorl
lock
out
add
cmpsb
int3
adc
nop
imul
je
push
rep
push
into
loopne
inc
js
pusha
cmc
pusha
cmp
jge
jg
in
xor
push
sti
inc
inc
sub
les
orl
call
in
xrelease
andl
and
fs
xchg
pop
je
pop
or
xor
dec
cmp
or
loop
pop
sbb
dec
dec
dec
sub
push
fldt
push
adc
inc
popa
pop
and
dec
xchg
gs
imul
dec
nop
pop
sub
std
je
pop
pop
or
add
or
mov
mov
pop
jmp
data16
add
hlt
jae
add
addr16
daa
cmp
or
in
jbe
dec
sub
pop
enter
add
das
dec
mov
aam
cld
lcall
inc
mov
sub
sbb
jle
lret
mov
or
clc
adc
paddw
xchg
and
pop
out
jo
or
jg
insl
mov
cmp
inc
and
fcoms
fsqrt
pop
cmp
ljmp
mov
lea
mov
dec
sarb
das
bound
inc
mov
xchg
mov
or
sub
sub
outsl
aam
int
or
arpl
pop
adc
pop
leave
inc
push
pop
aaa
ljmp
in
lcall
jl
lret
pop
dec
mov
icebp
inc
cmp
sub
xor
xchg
jl
jge
mov
fsubr
lcall
in
mov
enter
cltd
mov
xchg
sbbb
xchg
loopne
fs
adcl
sub
add
jne
shll
mov
cmp
mov
mov
or
jge
in
mov
lock
cmp
push
fildll
mov
test
int
adc
ss
out
adc
or
fwait
lcall
cld
push
cmc
popf
nop
aaa
jp
outsb
push
stos
sub
xor
inc
sub
cli
and
fldcw
ret
icebp
stos
stos
std
mov
xchg
ds
cmp
leave
mov
add
jbe
push
jl
or
ja
pushf
in
xchg
push
stos
ljmp
push
fcmovnu
jp
divl
xor
popa
repnz
fucomi
sbb
push
sub
pushf
insl
int
xor
sub
call
clc
data16
std
inc
test
push
sub
sub
jmp
push
stos
stc
xorb
mov
aam
fmuls
add
sbb
ljmp
cmc
stc
or
lahf
mov
imul
out
pop
mov
jbe
lds
or
enter
or
loopne
adc
fwait
lret
cli
xchg
jge
jmp
stc
add
dec
jb
dec
dec
mov
pop
or
push
cmp
cmp
das
cmpsl
xor
cmp
in
enter
bound
out
push
pop
out
out
loopne
packsswb
insb
call
jecxz
mov
lahf
pop
adc
int
jo
add
or
xchg
out
jl
lock
scas
cmp
xchg
pop
in
add
leave
das
and
js
inc
jnp
je
sbb
push
dec
pop
scas
fs
adc
jge
add
pop
fcompl
dec
pop
xor
push
negb
cmc
and
js
xorl
jb
in
inc
leave
cld
fildll
popf
cmpsl
ljmp
adc
adc
or
add
sub
jle
cmpsl
dec
xchg
lds
orb
iret
xor
addb
jbe,pn
or
mov
jle
or
inc
stos
and
shl
cmp
punpckhdq
ficoms
push
mov
loop
nop
ret
lret
pop
lcall
in
push
pop
dec
clc
dec
xchg
mov
push
xor
pop
loopne
movsl
ja
mov
fidivl
aas
lret
add
xor
outsb
loopne
inc
leave
fistl
je
sahf
adc
jns
mov
aad
ficoms
pusha
into
shll
dec
outsb
gs
iret
notb
cmp
pop
jno
testl
mov
mov
xlat
ret
insl
adc
mov
sub
pushf
cmp
xor
fisttpll
fwait
jecxz
ror
inc
fxtract
dec
sbb
popl
and
in
scas
fs
pop
mov
dec
xor
addr16
cmpsl
fidivrl
repz
inc
and
shll
jbe
arpl
sahf
in
fdivr
jle
push
dec
jbe
sub
cld
fcmove
push
ds
inc
fcomps
stc
jp
mov
test
sahf
or
push
mov
push
mov
arpl
pushw
test
int3
jecxz
ds
fidivs
mov
sbb
aam
cmpsb
push
jnp
pusha
add
jnp
xorb
dec
lods
dec
inc
xchg
push
test
mov
outsl
repz
fimuls
ja
pop
xor
test
dec
ss
mov
cmp
inc
lods
test
int
leave
rcll
cmovs
das
jb
bound
mov
es
shrb
adc
inc
inc
test
mov
repnz
mov
mov
std
ret
sbb
lods
lods
sbb
push
std
leave
xchg
mov
mov
sbb
fwait
in
rolb
push
mov
xchg
mov
sbb
sbb
pop
rcr
inc
cli
imul
fisttpll
call
mov
mov
mov
cmpsl
insl
mul
pop
push
test
add
lods
stos
je
incb
imul
ja
dec
pop
push
mov
movsl
inc
or
iret
in
sub
in
jae
pop
pusha
pop
mov
adc
adc
jl
adc
fdivrl
iret
pop
mov
cmc
xchg
jns
cs
leave
aam
inc
ljmp
bnd
pop
and
or
jns
sub
or
adc
pop
fs
add
div
jp
sbb
cltd
cmp
dec
ficoms
pushfw
xchg
fidivrs
ds
cli
shl
push
pop
js
imul
outsl
ret
jne
adc
int
xchg
cmp
loop
popf
inc
mov
ja,pt
pop
push
and
in
cltd
adcb
push
mov
xchg
out
stc
jo
aad
adc
outsb
xor
je
xchg
and
shrl
adc
cmp
mov
pop
icebp
pusha
xchg
adc
enter
or
adc
xor
pop
rolb
int
ret
pop
jle
cmp
inc
loop
mov
mov
arpl
gs
pop
loopne
lock
ss
ret
lods
into
adc
sbb
or
pop
adc
nop
xchg
data16
ljmp
and
es
sbb
loop
shl
mov
bound
call
pushf
lret
ret
dec
ret
popa
mov
outsl
imul
mov
jo
mov
addl
dec
pop
mov
in
push
shlb
outsb
and
and
mov
ja
push
sarb
cmp
cmpl
add
ds
stc
cmp
add
cmc
pop
jecxz
cwtl
imul
stc
inc
fdivs
roll
jb
rorl
pop
inc
cmp
mov
mov
mov
scas
lahf
cmp
dec
cmpsl
stos
mov
stos
pop
sbb
or
int3
sub
out
lock
xchg
lahf
push
or
and
repnz
jns
jb
mov
adcb
mov
mov
sub
pop
sbb
mov
scas
lods
inc
test
test
clc
pop
add
mov
adc
jnp
test
icebp
add
insb
jae
cmpsl
movsl
lret
sbb
daa
std
jge
pop
or
and
mov
lahf
xchg
jmp
sub
or
sbb
xchg
mov
movsb
pop
imul
mov
fldl
and
rolb
xor
jmp
fwait
xchg
add
jecxz
or
jecxz
cmp
fistl
jo
xchg
push
or
jbe
jo
sub
fwait
inc
ss
mov
ljmp
rcrl
pop
sbb
int3
xchg
lea
fiaddl
ss
mov
enter
jne
dec
dec
inc
jnp
jge
shlb
mov
cli
jge
loopne
int3
sub
fdivl
sbb
arpl
imul
ret
pop
push
mov
pop
shrb
jl
out
outsb
sbb
in
xchg
jmp
repz
loope
sub
dec
add
test
push
xchg
xor
jge
mov
adc
jmp
inc
orb
xchg
fisttps
std
loope
cmp
cmpsl
into
xchg
int
std
mov
data16
aaa
clc
sub
adc
and
mov
aad
sahf
add
fs
dec
shr
or
xchg
jge
push
sub
ja
ss
hlt
arpl
inc
jno
hlt
das
mov
xchg
sub
inc
mov
sbb
jg
ja
jg
aad
dec
push
lods
lret
addr16
and
lods
or
outsl
jecxz
mov
outsb
fisttpl
mov
dec
cltd
loop
adc
add
out
stc
fstpl
jae
pop
mov
enter
aaa
jle
insl
mov
sti
hlt
or
aaa
xchg
lods
sbb
jle
out
cmp
dec
rclb
sbb
repz
movsbl
pop
out
inc
jb
fdiv
xorb
sub
shr
loope
adc
loop
adc
inc
add
mov
lret
mov
inc
icebp
loopne
xor
pop
push
mov
add
jno
jns
sarb
gs
stos
test
lahf
add
sub
cld
add
gs
repnz
pop
fdivrl
dec
jecxz
les
mov
aaa
pop
subl
mov
adc
das
fwait
rcl
xchg
jge
dec
jmp
fmull
sbb
js
mov
xchg
roll
rorl
mov
icebp
xorl
dec
lock
mov
sbb
lods
jnp
xor
aad
xchg
pop
loopne
daa
mov
jb
mov
mov
push
push
test
jo
in
sbb
xchg
sti
mov
push
pop
inc
mov
xor
insl
xchg
jp
mov
loop
aad
jae
mov
idivb
mov
jmp
pushf
int3
dec
mov
imul
xchg
cmp
in
or
mov
jo
mov
test
xor
ret
leave
mov
dec
xor
cmpl
jecxz
mov
mov
mov
inc
mov
push
nop
add
push
ficoms
aam
ficoml
xor
or
jo
in
pusha
dec
sbb
jnp
insl
test
pushf
adc
mov
fs
fimull
push
jecxz
pop
xor
sahf
mov
loope
or
sbb
xchg
pop
sbb
loope
insl
scas
and
decl
pop
or
movsl
pop
and
xchg
and
int
jg
and
inc
push
out
call
mov
cmp
xlat
inc
xor
ret
pop
fsubrp
mov
push
lods
pop
push
or
jecxz
test
mov
movsb
movsb
imul
cmpsb
mov
mov
or
fsubl
inc
sbb
cwtl
dec
mov
sbb
out
inc
fdivrl
pop
mov
jge
jge
push
in
jb
push
xchg
push
out
sti
push
add
mov
push
ja
jmp
mov
cmpsb
roll
stos
imul
cwtl
stos
mov
lods
enter
adc
das
jge
cmp
clc
mov
stos
jmp
inc
pop
sub
jl
outsl
jl
jmp
out
fdivrs
into
aam
popf
lcall
push
ret
cmp
jge
add
mov
scas
in
addr16
cs
jle
mov
stos
jmp
inc
lcall
dec
sbb
testb
aam
xchg
xchg
jge
imul
and
es
inc
xlat
out
loope
dec
and
fs
cwtl
jmp
les
lock
mov
jmp
dec
adc
cmc
out
inc
inc
std
cmp
sahf
cmp
push
push
pop
popa
dec
xchg
ret
and
adc
outsl
shr
test
fisubrl
push
mov
xchg
jp
aad
mov
add
popf
shlb
test
call
cmpl
dec
mov
lods
add
xlat
mov
or
dec
rorl
outsb
test
mul
clc
add
mov
repnz
jmp
add
xchg
mov
in
mov
scas
dec
into
push
leave
imul
gs
pop
xchg
pushf
in
xor
sti
rcl
jl
mov
jmp
dec
mov
xlat
fbld
dec
movl
push
jo
add
pop
jae
xor
mov
mov
xchg
adc
xorb
cwtl
mov
arpl
ss
xor
fwait
and
cmp
sbb
mov
imul
fs
add
call
xchg
mov
pop
jecxz
xchg
jbe
pop
cmc
insb
add
pop
sub
mov
sbb
jg
sahf
mov
or
sbb
testb
or
jnp
rcll
mov
jb
mov
dec
sub
push
xlat
mov
mov
daa
xchg
jge
leave
stc
pop
int3
outsb
dec
sarl
mov
sub
sbb
idivb
inc
push
sti
fistpll
cmc
loopne
xchg
mov
pushf
pop
jmp
jns
in
xor
sub
mov
add
push
push
xor
adcl
and
aad
rolb
inc
sti
and
pop
xchg
mov
movsb
mov
push
pop
xchg
or
stos
pop
pop
aas
cmp
lcall
or
incl
scas
sti
iret
dec
sbb
mov
jbe
sbb
push
sbb
adc
and
jg
fnstsw
and
insl
jae
mov
mov
mov
adc
adc
lock
gs
mov
mov
jae
pop
inc
pushf
pop
rorb
lock
inc
mov
out
cmp
mov
scas
into
push
push
or
mov
push
movsl
mov
dec
xchg
add
fcoms
lahf
add
idiv
mov
mov
test
test
jmp
mov
cltd
push
mov
movsl
push
int
push
lods
pop
dec
stos
push
out
outsb
mov
sbbl
push
test
sbb
cld
xchg
fistl
test
scas
adc
jle
popf
js
mov
into
inc
test
repnz
or
jle
or
adc
pushf
aaa
sbb
dec
popf
imul
xchg
rcr
sti
jo
popl
mov
ret
or
aas
xchg
int
jns
out
es
mov
nop
inc
jno
mov
inc
dec
cmp
repz
ljmp
dec
mov
or
xor
sbb
sbb
mov
mov
cltd
orb
inc
aad
push
inc
je
outsl
push
push
mov
mov
jns
push
imul
call
flds
scas
into
adc
xor
add
fsubrl
orb
adc
aad
imul
je
cld
clc
cltd
mov
lcall
adc
arpl
gs
sub
fiadds
adc
outsl
testl
xchg
jmp
or
lea
test
ret
mov
mov
mov
sarl
shl
loope
sbb
push
adc
xor
mov
mov
popa
xchg
aad
aam
ss
jl
xchg
mov
mov
int3
pop
inc
enter
jl
add
in
push
pop
aam
add
sub
and
sub
xor
inc
das
mov
ja
add
repnz
and
xor
mov
movsl
stos
pop
out
pop
fdivrs
push
roll
mov
xchg
push
fstl
fiadds
jnp
mov
sub
dec
mov
cmp
push
mov
ja
loope
stos
jge
mov
aas
push
pop
add
mov
pop
mov
adc
out
scas
push
adc
mov
lret
sub
cmp
push
mov
adc
push
pop
mov
pop
sbb
cmc
xchg
xchg
and
cmc
add
mov
mull
enter
push
fs
int3
lock
and
mov
cmp
inc
mov
mov
xchg
mov
sbb
sbb
mov
ja
pop
push
add
push
jecxz
cld
mov
enter
xchg
lret
mov
jae
adc
orb
xor
in
mov
dec
push
outsb
xchg
jg
sbb
inc
mov
add
ret
in
mov
test
and
movsl
iret
mov
clc
jnp
inc
ds
jge
sbb
and
stos
sbb
cltd
dec
daa
fsubl
sbbb
ret
scas
mov
xor
rolb
sbb
dec
jno
cmp
jmp
push
js
jb
or
xchg
cmp
psubw
and
cmc
fldlg2
addr16
fcmovbe
and
sub
push
pop
ret
inc
popa
repz
out
adc
and
sbb
int
pop
xor
aam
inc
jae
push
movsl
test
sbb
xor
xchg
jge
mov
fwait
incl
fsubr
jg
mov
test
cltd
sbb
mov
mov
ja
sub
test
xchg
aas
sub
fs
adc
adc
mov
test
fildl
or
insb
push
mov
push
or
push
mov
and
icebp
mov
adc
icebp
add
pop
xor
push
addr16
pop
inc
inc
mov
gs
or
movsb
mov
xor
xor
or
rorl
je
fistpll
out
sub
jnp
mov
xorl
xlat
inc
xlat
cmp
or
xor
arpl
cmc
jl
lock
mov
adc
icebp
jecxz
and
add
dec
outsl
inc
test
dec
xor
jne
fdivl
sahf
adc
sbb
in
insl
out
mov
cmp
into
mov
loope
loope
add
adc
imul
loope
dec
mov
addr16
loop
xchg
divb
push
inc
xor
xor
imul
mov
and
xchg
pop
mov
sbb
sub
sub
ret
pop
loopne
pop
ret
adc
cwtl
out
sbb
and
mov
aaa
or
int
ror
mov
out
sbb
or
test
pop
in
jecxz
fmuls
and
dec
mov
sub
das
fstps
or
push
inc
mov
mov
stc
adc
lahf
pop
pop
fildll
imul
ja
pop
hlt
gs
mov
mov
jg
xor
bound
ret
ficoml
rclb
and
movsb
es
add
inc
jne
mov
pop
jmp
out
fs
lods
jmp
cs
cmp
movsb
pop
mov
xchg
jge
push
inc
or
test
sub
adc
data16
add
int
jge
inc
loop
in
mov
out
clc
repz
push
jl
in
mov
mov
pop
mov
flds
xchg
popa
pushf
lock
ja
test
xor
cmpsl
pop
xor
or
ljmp
jmp
dec
mov
jae
in
mov
mov
cld
add
pop
nop
stos
adc
in
push
cmp
mov
sub
push
lea
test
pop
into
cs
jo
loopne
adc
mov
popa
or
loop
out
push
dec
mov
and
push
pushf
cmpsb
aam
fimull
jge
lret
dec
dec
xchg
dec
sub
inc
test
push
lret
and
mov
cmp
inc
or
enter
jp
test
repz
sbb
mov
outsl
xchg
jle
daa
pop
ss
pand
and
jae
adc
imul
cli
das
nop
cmp
test
inc
aaa
cmovbe
jno
clc
dec
flds
fstpt
outsl
aas
inc
jb
push
scas
test
cmp
or
xchg
loop
stos
outsl
std
sarl
cmp
xor
loopne
ja
sbb
pop
popf
pusha
movsb
mov
add
cmp
sbb
in
imul
cltd
sub
or
xor
jle
out
jg
into
xor
in
dec
mov
sbb
pop
test
push
fwait
mul
jne
cmpsb
jo
inc
sbb
scas
shlb
mov
loope
mov
xchg
jns
jo
add
xor
insl
mov
sbb
xchg
arpl
mov
jne
aaa
pushf
arpl
bound
in
xchg
ljmp
mov
shl
jl
sub
push
fwait
pop
leave
int3
lods
scas
scas
sbb
orb
lret
inc
sub
add
daa
stc
mov
scas
mov
mov
or
xor
test
into
repnz
ret
inc
shlb
mov
in
popl
mov
inc
call
in
fs
iret
insl
xchg
das
add
hlt
sti
cmp
shlb
lret
in
mov
cmp
outsb
movsl
imul
out
sbb
and
in
aaa
stos
xchg
aaa
or
xchg
or
aas
adc
adc
pop
mov
sahf
pop
inc
popa
xor
inc
daa
les
push
jae
inc
and
pushf
gs
dec
sub
add
xor
mov
repz
rolb
adc
stos
push
sbb
lahf
pushf
call
pop
imul
push
cmp
xor
pop
repz
adc
adc
xor
and
mov
and
lret
and
in
stc
xor
and
pusha
or
pop
lcall
leave
ffreep
sub
into
dec
rcl
mov
xchg
daa
ret
arpl
mov
pop
out
dec
or
inc
out
fcmovbe
cwtl
ljmp
add
stc
or
mov
scas
mov
fcmovb
push
sub
xchg
imul
push
rorb
mov
cltd
cmpsb
sub
push
jmp
mov
jbe
sub
push
loopne
or
cmpsb
pop
cmp
cmpsl
sbb
pop
pop
push
fsubrl
nop
mov
push
sbb
push
clc
xlat
adc
dec
sbb
aas
pop
mov
cltd
mov
and
mov
arpl
mov
jae
fisubrs
stc
jg
pop
or
addr16
push
int3
test
and
enter
lock
mov
jbe
adc
xor
cli
shlb
fwait
ret
lods
sbb
shrl
lahf
jb
xchg
cwtl
cmp
mov
jg
push
jmp
in
fnstenv
jne
jbe
mov
rcll
stc
daa
scas
dec
aas
aas
jle
icebp
fadd
in
xchg
mov
outsl
pushl
push
je
xchg
cmp
rcrb
mov
pop
mov
xor
pop
imul
cmpb
add
out
dec
xor
inc
push
cld
and
call
stc
dec
lock
push
xchg
pop
jns
ja
mov
lods
lret
mov
test
test
jbe
cmp
ret
or
scas
sbb
push
jg
je
sbb
mov
jge
idiv
inc
jl
xor
mov
rcrl
xchg
push
and
adc
jle
dec
sbb
sbb
xchg
dec
jl
fucomp
outsl
mov
rcr
shrb
pop
jge
adc
in
cmp
loope
xor
add
filds
push
ljmp
sarb
das
sbb
and
subb
shl
ss
sub
lock
test
das
insl
xchg
jecxz
int3
push
aad
cwtl
or
movsb
and
push
jl
loop
loopne
testb
mov
add
jmp
test
lahf
xchg
cmpsb
stos
pop
and
mov
jge
sub
adc
lds
inc
fnstcw
cld
inc
shl
fidivl
jo
pop
cwtl
add
cltd
sbb
push
jp
add
fwait
andl
xchg
adc
sbb
add
adc
stos
sub
mov
xchg
xor
push
dec
mov
mov
fisubs
jae
jecxz
cs
ficomps
mov
pop
sbb
jp
mov
pop
pop
jo
fistps
jb
mov
shlb
fwait
adc
ror
push
push
int3
inc
jbe
cltd
mov
es
imul
repz
paddw
iret
add
pushf
sub
jge
cmp
lea
push
mov
pushf
xchg
jb
sahf
adc
inc
dec
mov
rcr
xchg
sub
lock
pop
xchg
test
hlt
cmp
dec
pushf
xor
mov
xor
or
insb
bound
lods
pop
inc
mov
addl
ja
or
or
xchg
es
xchg
dec
je
push
mov
nop
mov
jo
mov
sarl
loopne
pusha
or
adc
and
inc
adc
cmpsb
pop
es
sbbb
push
xchg
mov
cmp
and
jnp
push
cmp
inc
or
rcrb
iret
lods
mov
test
dec
push
push
mov
sub
lret
sbb
int3
mov
mov
pusha
lods
arpl
xchg
add
mov
or
or
shrb
inc
mov
pop
inc
scas
test
cmpsl
xchg
out
dec
push
stc
call
ds
sub
jmp
movsl
push
stos
adc
cwtl
ret
andl
scas
repz
ret
mov
xchg
pushl
or
mov
dec
lret
jecxz
sub
daa
or
imul
xchg
or
pop
nop
fwait
sbb
movsb
sub
repz
enter
leave
cwtl
dec
cmpsl
cwtl
xlat
sahf
mov
imul
inc
scas
je
push
inc
push
sbb
jo
outsl
test
xor
sub
xchg
das
sub
stos
fwait
and
mov
lcall
jbe
out
inc
mov
pop
mov
popa
fdivp
addb
dec
shrb
add
js
jle
into
test
outsb
call
sub
cmp
mov
test
bound
xchg
push
loop
in
add
inc
add
std
mov
stos
lret
lock
dec
cmpsl
sub
jns
sbb
movsl
inc
sbb
mov
pop
dec
mov
push
insb
xchg
push
ja
jp
jbe
push
add
sbb
sub
pusha
ss
arpl
mov
lods
dec
adc
jle
pop
scas
movsb
jle
lods
aam
mov
mov
and
sbb
fsubrs
repnz
pusha
dec
mov
pop
mov
mov
xchg
and
sub
nop
repnz
test
stc
jge
data16
mov
fwait
xchg
aaa
push
or
jae
sbb
xor
fidivl
loopne
inc
add
or
bound
fildl
or
cs
js
jae,pt
ds
pop
jo
inc
andb
insb
jae
xchg
jp
and
pop
int
and
test
scas
inc
or
mov
cld
xchg
daa
aas
cmp
cmc
imul
cmpsb
push
add
lods
mov
mov
mov
fistps
xchg
push
lods
es
sahf
fucomi
andb
sub
aam
pop
jae
loop
inc
aam
subl
clc
jle
repnz
sub
sub
sarb
sub
ficoms
push
enter
pop
ss
xor
push
shll
push
addb
sub
fcomp
hlt
cmc
jno
cmp
pop
lock
xchg
ret
test
lret
inc
dec
pop
insb
fwait
inc
in
out
into
inc
popa
fdivs
add
cs
jg
lods
push
iret
push
mov
dec
imul
jg
inc
mov
sub
dec
hlt
sub
loop
cwtl
ljmp
ret
cmpsb
adc
inc
xchg
testb
jmp
shll
insl
cmp
stos
jno
orb
fisttpll
mov
imul
jnp
loop
mov
inc
mov
fldenv
lock
sarb
filds
push
test
aaa
xchg
xorl
je
orl
adc
and
jl
xor
test
or
push
and
repz
cmp
negl
xor
lret
insb
clc
inc
jg
in
lcall
js
lods
in
sub
inc
loop
cmp
push
ret
mov
jg
jmp
addr16
jo
and
and
push
mov
ret
lods
loop
sub
sarb
ja
xor
out
cmp
mov
insb
xchg
inc
push
scas
xchg
pop
mov
xor
arpl
dec
inc
xchg
call
int3
out
mov
mov
push
mov
popf
inc
lret
sbb
jns
jg
pop
mov
rclb
pop
mov
push
ret
mov
lds
xchg
ret
fs
inc
sub
iret
jmp
cmp
mulb
adc
jge
xorb
xchg
add
cmp
dec
std
cli
push
and
fstpt
dec
adc
push
test
ja
stc
in
jmp
pop
jl
stos
push
fmull
cmp
add
pop
jge
inc
pop
push
js
lds
push
test
and
dec
fs
sub
aad
imul
sub
pop
clc
push
shr
pop
lock
or
fwait
sbb
jl
mov
jne
lods
in
fsubrs
push
je
pop
ret
loope
lea
mov
sarl
or
in
push
jns
push
popf
pop
jns
ret
adc
push
or
je
data16
mov
xor
pop
mov
mov
inc
fistps
lahf
mov
addl
leave
adc
popa
fldcw
fnstenv
ljmp
lahf
add
push
imul
out
mov
push
fmuls
mov
fwait
lret
mov
add
aad
push
nop
stos
sbb
push
push
pop
jno
loop
jecxz
shr
sbb
jne
adc
jbe
lcall
pusha
mov
rcll
pusha
cmp
imul
adc
data16
adc
or
sub
bswap
ljmp
scas
pushf
mov
ljmp
mov
dec
cmp
popf
lret
stos
iret
push
add
mov
insl
jp
aas
out
cld
in
add
fmull
push
clc
mov
sub
mov
rcll
les
mov
stos
mov
sub
sbb
fmuls
int
hlt
test
push
and
push
lds
cmp
hlt
push
movsl
repnz
push
rcr
insb
in
mov
aas
dec
and
lock
mov
repz
xchg
sub
mov
and
push
push
inc
int
ljmp
mov
inc
arpl
pop
inc
and
push
xchg
roll
jb
cmp
sub
jns
fwait
int
sub
cltd
enter
les
pop
or
outsb
jb
dec
push
lock
xchg
aaa
mov
lret
aas
pusha
push
jae
sbb
push
jmp
in
cmp
imul
sti
sbbb
mov
and
in
sub
jo
lahf
xor
xor
mov
inc
jo
inc
dec
leavew
xchg
in
mov
popf
out
push
adc
and
inc
add
lods
cli
fstpl
or
inc
imul
push
jge
jg
push
mov
sub
imul
pop
cmpb
je
fcoml
xor
cld
imul
cmpsb
incb
cmp
mov
cmp
mov
in
mov
dec
inc
cmp
mov
addr16
pop
dec
jge
adc
push
mov
mov
dec
push
adc
pop
add
inc
push
xchg
lods
mov
les
comiss
sub
mov
popl
enter
push
push
jo
mov
pop
fs
add
dec
ja
mov
je
xchg
stc
jbe
or
xchg
mov
out
and
in
ljmp
add
les
dec
xchg
dec
mov
and
xor
sbb
and
dec
add
test
mov
outsb
xchg
sarl
int
jle
adc
int3
scas
insl
imul
add
lahf
push
pop
popa
mov
ljmp
fldl
rcll
jno
ficoml
test
into
push
add
cmp
xchg
sbb
dec
sbb
push
jnp
fisubrl
icebp
adc
scas
shl
clc
movsb
sub
iret
jns
add
rorb
insb
pop
aad
xchg
test
sbb
arpl
flds
dec
test
and
mov
fwait
cli
push
sub
inc
imul
fmuls
rclb
pop
nop
ss
pushf
mov
cmp
lcall
and
inc
and
scas
mov
dec
nop
jp
ss
int3
xor
clc
repz
and
clc
jmp
jge
les
mov
lock
lahf
movsb
inc
cmp
fisubrl
or
jbe
test
push
stc
sti
lret
adc
hlt
in
pop
pop
sub
jnp
gs
sub
loop
inc
mov
mov
or
pop
scas
pop
cld
cld
fucomp
enter
push
aas
mov
jl
cld
cmp
adc
ficoms
cmpb
push
stos
or
fldt
hlt
lretw
inc
fnstsw
adc
adc
loopne
cmc
dec
xchg
sub
call
nop
sbb
in
push
dec
push
cmc
ret
ja
stos
imul
mov
mov
sbb
xchg
lods
pusha
test
xor
sub
add
or
push
pop
inc
lods
xchg
shl
jb
push
fnstenv
sub
xchg
xor
jecxz
mov
pop
cmpsl
je
add
add
insw
aas
test
jg
inc
fsubl
dec
xor
sbb
fs
test
dec
in
js
mov
aam
dec
mov
xchg
ss
in
mov
ret
cmp
or
push
mov
push
imul
adc
ret
push
ss
push
aas
and
mov
dec
shl
aas
push
mov
pop
inc
sbb
vunpcklpd
adc
mov
xchg
imul
data16
bound
mov
leave
pop
movl
cmp
imul
jno
push
or
jg
dec
dec
mov
adc
cmp
jbe
repz
ds
xor
ss
sub
sbb
fs
fsubl
fisubl
xchg
xor
dec
mov
mov
ficoml
mov
or
mov
jne
mov
or
cltd
movsb
dec
adc
lret
test
sarb
push
addr16
add
imul
sbb
in
pop
repnz
jno
dec
sub
test
pop
stos
cmpsl
test
loop
cmp
dec
push
daa
aam
adc
xchg
xchg
lods
mov
outsb
fildll
pop
loope
bound
andb
repz
ss
mov
nop
ja
and
test
das
sub
xor
repnz
nop
int
add
pop
jg
inc
rcll
lea
xchg
cmp
lods
cwtl
icebp
mov
std
push
out
mov
outsl
out
daa
imul
adc
fsubs
push
test
xchg
xchg
fdivp
sbb
lret
xor
dec
addr16
jae
test
pushf
fbld
test
mov
and
and
xor
dec
pop
dec
sbb
push
mov
into
jo
push
jp
loop
roll
ret
mov
cmpsl
add
pop
int
mov
or
repz
int
mov
lret
fucomip
cmp
aam
pop
push
clc
repnz
movsb
dec
pushl
inc
lds
push
dec
data16
dec
pop
lea
cmc
mov
sub
std
cmp
pop
leave
fcmove
mov
das
adc
in
xchg
xchg
lods
mov
xchg
cmp
scas
push
in
ds
adc
and
push
addr16
or
orl
outsb
push
ds
fwait
pop
loope
stos
cwtl
ret
push
mov
cmp
dec
sbb
xor
jmp
pop
test
push
xchg
sbb
inc
pusha
out
shl
filds
cmp
std
in
mov
push
mov
sub
adc
mov
jb
add
mov
and
add
xchg
lock
lahf
add
inc
jno
cmp
push
cwtl
cmp
fisttpl
dec
imull
movsl
fcoml
inc
loopne
pop
jle
ss
lcall
cmpsb
jne
sarb
ret
cwtl
jbe
call
dec
rol
xor
loopne
adc
shrb
mulb
dec
imul
dec
stos
and
lcall
cmpsl
push
and
test
ficomps
shll
xchg
in
inc
lods
decl
jae
or
xor
cmc
sbb
scas
ds
sub
sbb
cs
mov
subl
iret
aad
adc
loop
push
int
repz
mov
pop
frstor
mov
lock
movsb
xor
cmp
jo
jle
dec
xchg
or
subb
xchg
fnstenv
insb
add
sbb
aad
jge
insl
pop
data16
sub
inc
sub
dec
js
out
shll
addl
jnp
sti
xor
adc
out
out
or
adc
mov
leave
adc
cmp
pop
jns
js
rclb
sbb
andb
cmp
cmp
inc
leave
icebp
imul
sahf
mov
jo
sbb
sti
jb
pop
and
sbb
cmp
adc
xor
dec
orl
push
sarb
iret
cld
mov
les
xchg
in
je
aad
nop
fcomps
test
fists
movsb
test
mov
fcmovu
test
lods
sahf
clc
inc
dec
data16
std
and
fcmovbe
outsb
cs
es
and
arpl
pop
lret
in
and
push
and
lahf
sub
dec
fs
lock
out
bound
adc
fdivp
inc
add
or
in
hlt
test
movsl
and
std
jno
mov
push
inc
lock
movb
mov
test
je
push
mov
stc
cmpsl
pop
xchg
jp
hlt
push
sub
sbb
lock
imul
jmp
es
ja
dec
pop
jbe
pushl
jne
test
mov
or
xor
xor
and
mov
jns
aaa
shl
sti
xor
mov
jae
and
mov
fistps
jo
pop
sbb
addl
ficomps
cmp
cwtl
and
in
test
push
aam
cmp
bound
fmull
or
fldt
mov
pop
ss
ja
movsl
add
xor
dec
push
fwait
xlat
sub
int3
inc
pop
scas
inc
inc
pop
pop
outsb
loopne
mov
push
inc
leave
mov
lcall
push
push
enter
in
mov
orl
es
sarb
xchg
gs
pop
lods
jecxz
cmpsl
mov
outsl
fmul
mov
mov
dec
roll
into
cmp
out
insl
rorl
decl
xchg
cmc
xchg
es
xor
fwait
dec
jne
fidivl
xor
sub
lret
inc
dec
sbb
xor
enter
test
lahf
lea
ret
cmpsb
mov
xchg
dec
test
loope
or
mov
xrelease
cmpsl
sub
test
xorl
mov
cmpsl
std
sbb
inc
popf
dec
xchg
cmp
jmp
jmp
cwtl
fistpl
sub
mov
fstps
lahf
mov
in
in
xchg
sub
pop
adc
scas
cli
sbb
shr
fcomps
rcll
scas
dec
cmp
mov
mov
jge
sub
das
mov
pop
je
int3
pmaddwd
jno
adc
std
sub
adc
push
mul
or
lret
mov
push
fstps
rorb
test
jb
dec
mov
lods
popf
mov
dec
ljmp
inc
test
popf
mov
push
std
insb
jnp
fidivrs
push
xchg
cmpsb
es
lods
jecxz
lcall
mov
or
js
scas
fnstenv
cmp
push
into
movsl
pop
lods
sbb
lock
inc
push
jns
orb
jle
mov
std
push
in
das
adc
les
xor
mov
rolb
pop
mov
mov
pop
or
xchg
aad
and
call
add
cltd
jnp
cltd
test
sub
filds
push
lea
mov
and
mov
fs
lds
xchg
push
out
nop
stc
iret
or
cmp
pop
mov
pop
leave
mov
lods
inc
add
pop
cmpsl
cmp
mov
imul
mov
rorl
cs
push
adc
mov
out
push
mov
addl
mov
mov
cmpsl
sbb
sahf
imul
push
in
pop
jecxz
add
mov
daa
mov
mov
mov
sbb
or
xor
mov
cmpsb
push
inc
in
xor
stos
ret
cmp
sbb
push
outsl
lea
test
jp
mov
push
mov
fnstcw
mov
repnz
xchg
sub
xor
std
frstor
pop
pop
lret
loopne
adc
xlat
push
xor
pusha
fisttps
sahf
xor
mov
jne
xchg
xchg
xchg
inc
pop
push
daa
jmp
xchg
mov
inc
jno
lret
mov
int3
or
pop
aam
xchg
mov
add
mov
mov
aad
cmp
lret
add
cmpsl
test
adc
mov
sbb
divb
cmpsl
adc
in
xor
xor
push
int3
or
js
lods
and
aam
mov
shr
dec
xchg
out
cmp
int
adc
cmc
xor
pop
call
popa
shlb
mov
jo
das
push
push
push
test
int
pcmpeqd
ret
jno
inc
sub
movsb
adc
pop
fs
or
fidivrs
shl
sub
sahf
and
add
pop
sahf
stc
ficompl
or
ljmp
mov
mov
or
int3
and
dec
adc
stos
shr
aas
in
xchg
out
adc
lds
mov
je
xor
scas
lods
sub
clc
lea
mov
sub
dec
xor
loope
mov
adc
cmpsb
mov
daa
adc
add
mov
cmpsb
cmp
and
ds
or
inc
sub
dec
xchg
adc
jmp
out
push
xchg
cmp
push
xchg
mov
adc
cmp
and
sbb
mov
mov
pop
aam
dec
mov
repnz
mov
pop
pop
js
dec
repnz
pop
daa
std
imul
add
cmpsl
lahf
pop
loope
aad
pop
cli
adc
push
mov
push
adc
insl
and
xchg
adc
in
cs
mov
mov
dec
mov
inc
enter
aas
jbe
lret
dec
sarl
je
sbb
push
add
xor
jbe
jmp
adc
push
loop
xchg
or
bound
dec
pop
movzwl
pop
movsb
and
xchg
cmp
inc
pop
xchg
mov
add
cltd
jns
das
pop
pusha
jae
xchg
inc
push
and
dec
out
lods
incl
jns
popf
shll
push
cmp
pop
shl
pop
xchg
jl
push
jbe
psubw
setp
das
std
jle
sub
in
push
jne
sub
fsubs
or
push
pusha
mov
fdivl
ret
sub
lods
pusha
and
mov
mov
movups
or
test
lods
xor
xchg
aaa
jb
cmp
sbb
loop
cli
add
pop
jb
jns
iret
loope
mov
in
and
jge
jl
jne
mov
pop
xchg
mov
pop
mov
push
icebp
push
fsts
fs
adc
pop
mov
loope
jg
mov
xor
pop
stos
jns
fs
adc
stc
clc
or
inc
imul
stos
inc
sbb
push
and
lock
orb
cmp
movsl
outsl
bound
in
test
into
jae
cli
push
gs
cmp
and
xchg
jbe
iret
jno
std
dec
dec
dec
dec
jecxz
mov
rcll
mov
dec
scas
dec
push
cmpsb
ret
and
out
sarl
fisubrs
pop
int
loopne
mov
cmp
ja
leave
jo
inc
loop
rorl
pushf
jb
pusha
mov
nop
xorl
dec
in
mov
pusha
mov
xchg
push
and
and
jne
fs
sub
push
sbb
sbb
mov
jg
push
fistps
js
cmpsb
jl
jp
out
in
jecxz
outsl
push
stos
inc
int3
fidivrl
ror
aas
loope
push
mov
addb
lods
xor
jp
stos
push
push
arpl
mov
test
sub
mov
sbb
lret
mov
cmovge
out
jbe
pop
fsubrs
xor
rorb
filds
sahf
insb
and
std
test
bts
mov
or
icebp
lret
addb
rcl
ljmp
inc
popw
mov
jmp
cs
xchg
pop
push
cltd
cmp
fchs
cmp
add
xchg
jbe
mov
xchg
loop
inc
sub
pushl
jg
into
jo
mov
shrl
jb
inc
inc
out
mov
lcall
cld
inc
les
in
neg
adc
dec
pop
bound
or
cmp
into
cli
xchg
xchg
xor
jae
lcall
push
xchg
cmpsl
xor
jbe
cmp
sub
xor
movsl
jmp
mov
movsl
or
pop
fwait
test
lcall
outsl
in
lcall
mov
iret
div
mov
and
mov
jno
fiadds
pop
inc
jmp
jb
gs
jbe
or
lock
scas
inc
fwait
ljmp
mov
inc
sub
lret
push
insb
hlt
jp
in
enter
jno
pop
movsl
ficoml
out
pop
mov
lods
and
sbb
fwait
or
nop
pusha
dec
pop
out
mov
mov
inc
mov
cli
jp
out
inc
je
jne
fdivl
rcll
test
sub
jnp
loope
xchg
mov
mov
dec
cltd
sub
imul
pushf
pop
pop
gs
push
je
movb
pop
out
xchg
mov
adc
xlat
jne
mov
xchg
or
out
push
add
addr16
xchg
scas
clc
loopne
inc
add
mov
jne
and
dec
lcall
inc
repnz
mov
mov
dec
shrb
pop
jb
and
jg
js
jbe
leave
and
dec
jmp
cmp
fstpl
jle
or
sbb
xor
mov
rol
lods
idivb
jno
arpl
xor
lret
insl
leave
ljmp
mov
xor
jmp
and
sub
shlb
cmpsl
dec
sub
nop
push
xchg
cmp
push
aad
mov
repnz
add
mov
mov
repz
fs
cld
aaa
push
jmp
fneni(8087
mov
push
cmp
dec
popa
sbb
out
pop
into
ljmp
push
sbb
mov
and
mov
jg
and
and
xchg
call
scas
inc
das
cld
ss
ja
sti
mov
arpl
xor
sarl
adc
adc
ret
enter
rol
lea
mov
mov
scas
xchg
xlat
push
pop
adc
fcomip
ds
mov
inc
test
mov
add
lods
pop
test
sub
out
inc
push
outsb
and
mov
clc
in
add
int3
loop
and
in
or
pushf
sti
ljmp
sub
xor
and
js
pop
ljmp
daa
xor
cmp
cli
pop
inc
pop
push
sbb
pop
fcmovbe
mov
xlat
loopne
data16
cmp
push
into
scas
sub
and
ljmp
jno
daa
testb
je
loopne
sbb
adc
mov
jge
negb
mov
xor
scas
jecxz
mov
jb
adc
in
or
mov
insl
mov
or
repz
jle
call
stc
lcall
xchg
pop
mov
inc
push
mov
fcompl
push
xchg
subb
jns
sub
sbb
iret
imul
sbb
fistps
ljmp
or
mov
lret
fs
fucomi
dec
leave
dec
xor
xchg
out
lahf
mov
add
mov
pop
cmpsb
or
movswl
mov
stos
pushf
das
enter
xchg
adc
ljmp
ret
add
add
lds
inc
lcall
loop
pop
and
popa
inc
mov
cld
mov
clc
stc
xchg
jp
repz
cmp
xor
fidivs
sbb
jne
add
loope
sub
sub
mov
mov
pop
xor
pop
dec
jo
testb
xor
inc
inc
outsl
dec
mov
dec
xchg
adc
xor
hlt
scas
iret
mov
movsb
and
mov
movzbl
in
es
mov
sbbb
xchg
xchg
xor
rcrl
xor
int
rcrl
test
xchg
lds
lret
jno
ret
add
ret
inc
iret
push
pop
test
sahf
test
add
ficompl
lods
inc
fidivrs
dec
addr16
xor
popa
popf
jle
adc
jno
jno
mov
cmpsb
push
jecxz
cmp
shrb
cmp
jmp
mov
cwtl
mov
call
jae
mov
dec
xchg
out
push
xchg
loopne
and
fcmovnb
mov
mov
sti
orl
iret
add
cmpsl
daa
mov
cwtl
add
xchg
mov
nop
call
mov
cltd
mov
sub
fsubrs
jmp
or
push
mov
sbb
mov
pop
pop
and
mov
jmp
out
and
jnp
outsb
stos
mov
cmp
push
das
xor
push
mov
cs
clc
je
and
push
sbb
stc
dec
out
sbb
inc
jle
lcall
sub
call
in
cmovbe
outsl
xchg
test
and
push
add
inc
mov
pusha
loope
insb
cmp
notl
lret
xor
cmpsb
sub
sub
xor
jp
push
add
jg
jge
or
mov
ljmp
push
popa
sti
fnstsw
ficoms
repz
sub
cli
ret
test
outsb
add
sarl
mov
in
out
mov
jns
and
inc
and
hlt
push
hlt
pop
lret
mov
dec
push
push
mov
sbb
shrb
arpl
push
or
jle
add
int
loope
dec
and
icebp
fmuls
subb
nop
mov
out
dec
sbb
leave
cmc
outsb
sub
and
lahf
xor
fcomps
loope
fcomi
in
clc
imul
iret
sub
pop
sbb
sub
nop
stc
mov
call
jno
mov
mov
mov
mov
hlt
rcll
lods
repz
xchg
in
test
jl
gs
mov
jecxz
enter
jns
in
jae
mov
sti
add
push
sbb
out
inc
stos
cmc
fmull
adc
lods
daa
lods
iret
mov
or
ffreep
sbb
jmp
jns
push
in
sub
pop
jge
cltd
cmp
rolb
bound
or
add
xchg
ret
pusha
mov
mov
pop
stc
pop
jmp
mov
mov
test
inc
adc
pop
lods
xchg
fiaddl
jp
lcall
cs
adc
adc
mov
shl
pop
inc
add
lock
test
pusha
dec
sbb
jl
pop
mov
push
mov
insb
fs
insl
add
stos
sti
fadd
add
adc
fmuls
xor
sahf
test
cmp
ud0
cli
xorw
pop
adc
lahf
int3
lods
cwtl
inc
fidivs
test
mov
ret
cmc
inc
loope
stos
sub
cmp
jle
xchg
jmp
cmp
add
inc
add
mov
inc
sbb
dec
jb
and
scas
test
jg
lahf
jae
jnp
sub
lods
iret
pop
xchg
xchg
mov
imulb
pop
fcomps
sbb
mov
sbbl
mov
lock
mov
jl
jmp
scas
aad
jmp
mov
sbb
mov
sbb
or
call
mov
call
inc
sbb
scas
sbb
testl
mov
inc
mov
out
sti
sbb
and
out
sbb
int3
nop
adc
add
push
lret
sahf
and
cmp
repz
sarb
xor
imul
add
test
dec
fstpt
je
xor
lahf
xlat
lahf
sahf
je
fstpl
ljmp
test
es
pop
sahf
jmp
or
faddl
pop
cmpl
cmpsb
les
mov
inc
cmp
and
imul
sub
jbe
fwait
insl
push
sbb
fsub
inc
push
xor
cmp
cmp
cmp
mov
push
add
sub
call
pop
aaa
cmpsl
iret
push
das
adc
iret
mov
loope
xchg
xor
and
inc
lods
push
mov
arpl
ret
mov
cmpsb
add
adc
adc
lea
xor
out
in
pop
pusha
xchg
sbb
sbb
inc
mov
sbb
inc
rep
inc
mov
sbb
out
lea
push
inc
popa
sbb
imul
lahf
out
stc
adc
dec
jg
aaa
and
fdivp
cwtl
xor
mov
dec
std
mov
mov
push
imul
inc
jb
lods
call
sbb
test
jmp
lods
or
push
sbb
push
push
cmp
aas
mov
adc
xchg
sbb
mov
or
mov
neg
jmp
add
iret
sub
ss
dec
sub
mov
mul
sbb
push
sti
mov
add
testb
rorl
daa
out
xchg
xchg
jmp
clc
lock
adc
xchg
loopne
pop
cwtl
stos
pop
dec
mov
in
jno
mov
lcall
inc
pop
leave
fwait
nop
lea
or
and
or
or
or
xchg
xlat
xor
add
or
popa
pop
scas
ss
inc
dec
jns
sbb
pushf
int3
fldenv
sti
jb
mov
jecxz
pusha
sar
xor
lcall
ljmp
insl
add
dec
add
cwtl
cmp
sti
mov
adc
test
inc
pop
mov
in
fnstcw
aaa
out
push
or
inc
or
xchg
in
mov
leave
adc
in
data16
fsts
cmp
cltd
or
movsl
cmp
xor
or
mov
inc
subl
cmovle
or
mov
pop
push
in
pop
in
mov
adc
ds
mov
xchg
xor
jl
outsb
xchg
fildl
dec
sahf
movl
fmuls
cli
dec
pusha
sub
jbe
mov
pop
dec
push
xlat
lods
adc
dec
shll
jbe
icebp
inc
gs
sub
push
call
pop
loopne
outsb
xor
push
cmpsl
aas
fidivrl
inc
mov
inc
jge
push
mull
or
ficoml
cld
mov
pop
jns
inc
jmp
cld
mov
push
test
add
outsl
mov
add
push
js
jbe
faddl
cmp
icebp
mov
jo
sbb
xor
push
inc
call
jnp
pop
jmp
push
mov
dec
mov
xchg
sub
or
fstps
daa
xcrypt-ofb
push
outsl
mov
adc
add
cwtl
scas
ja
shrl
xchg
ja
jmp
les
pop
sub
inc
xlat
insl
cmp
cmpsl
pop
add
lret
and
adc
xor
pop
mov
insb
jae
pop
cmpsb
shrb
cmp
mov
bnd
dec
push
mov
cmp
adc
fadd
xor
xlat
pop
jno
ja
fidivs
mov
and
aaa
jnp
sbb
add
repnz
mov
xor
lahf
inc
and
lds
and
sar
test
xor
push
adcl
add
hlt
cmp
testl
movsl
lods
jae
pop
add
pop
cmp
pop
arpl
lret
rcll
push
movups
push
fists
xchg
ret
clc
mov
jns
ljmp
xchg
js
push
pop
out
adc
js
and
ret
adc
lds
xlat
push
push
jge
and
or
or
inc
icebp
sbb
sub
sbb
in
cmovb
xor
xor
push
cltd
pop
mov
sbb
sbb
fisubl
shl
xchg
iret
and
push
and
dec
jmp
jae
cmp
rcl
jecxz
std
les
scas
cmp
jo
or
aas
mov
je,pt
addr16
push
mov
mov
dec
andl
inc
aam
std
sar
popa
mov
outsl
cmp
cmpsl
popa
out
inc
push
mov
js
or
loopne
add
mov
idivb
lods
cld
cmp
sbb
sub
cmp
ucomiss
and
mov
gs
jl
xchg
adc
sub
jmp
scas
jp
jb
jo
in
jnp
ror
cmp
mov
mov
xchg
das
sub
jae
add
aas
mov
fidivrs
popf
ss
dec
inc
mov
mov
jnp
scas
pop
test
adc
pusha
jmp
sbbb
fucom
mov
pushf
dec
cld
mov
aas
sub
sub
or
ja
cmp
out
inc
stos
xchg
jmp
addr16
inc
and
cmp
test
mov
ljmp
pop
jl
lds
xor
push
inc
dec
popa
addr16
inc
dec
in
cmpsb
jns
rorl
mov
int
or
and
adc
lea
dec
add
jge
daa
cmpsb
push
ficompl
lds
push
lret
bound
je
add
arpl
leave
push
dec
fwait
xchg
sbb
lods
sbb
mov
mov
loop
mov
cwtl
push
sub
rclb
pop
gs
cs
out
adc
pop
adc
ret
insl
xchg
mov
mov
mov
xlat
add
xor
jne
imul
sbbl
add
cmp
test
cmpsl
add
push
shl
loopne
insl
aas
push
out
scas
mov
pop
pop
fwait
scas
pop
jno
mov
nop
pop
cmp
adc
popa
adc
bt
popa
sub
adc
and
xchg
dec
stos
das
pop
mov
xchg
pop
cltd
test
ret
ret
inc
orl
jmp
cmp
or
or
insl
popf
das
inc
mov
inc
repz
ds
push
sub
xchg
mov
fnstenv
jbe
out
push
jmp
and
out
and
loopne
fwait
inc
pushf
jmp
cmovns
jmp
xchg
ds
push
push
sbb
add
daa
movsb
enter
jg
cwtl
adc
mov
push
adc
pushl
lods
add
imul
int3
ficompl
sbb
jo
fists
int
scas
cmpsl
ret
pop
pop
inc
inc
cmc
loope
loope
dec
lods
dec
fimull
xor
adc
fwait
out
pop
lods
fmul
stos
testb
es
cmp
gs
fs
adc
lret
aad
lods
cwtl
or
jae
ret
mov
or
xor
and
and
sahf
mov
push
jmp
xor
inc
and
sub
inc
fistpl
cmp
ljmp
sbb
mov
sub
bound
mov
pop
scas
xchg
push
jecxz
cmp
add
aam
aad
add
xlat
or
mov
dec
or
iret
jo
data16
notl
push
scas
cmp
int3
lcall
adcl
pusha
lret
mov
and
or
xchg
adc
call
in
dec
xor
lret
fidivrs
fcompl
cmpb
jb
popf
ss
ss
jle
bound
inc
ss
xchg
int
or
sbbl
outsb
loop
jbe
mov
and
pop
jno
and
ja
ja
ljmp
mov
pop
pop
in
jb
in
jg
jmp
pop
sub
add
push
sbb
xor
xor
push
ss
jne
push
jno
sbb
aam
test
pop
jnp
mov
xor
test
scas
dec
push
and
sbb
dec
jmp
fsub
lock
jbe
dec
movsl
test
pop
or
xlat
push
dec
testb
jle
mov
xchg
loopne
das
sbbb
out
mov
mov
xor
pop
jnp
and
xchg
mov
pop
cmp
movsl
adc
add
sbb
fucomip
lret
fcomi
movsl
push
sbb
or
sbb
sub
cs
jo
cmpb
jge
mov
lret
add
mov
mov
mov
dec
inc
lock
ja
sarl
imul
mov
fcomps
jmp
in
xor
cmp
daa
inc
adc
xchg
and
test
mov
xchg
jge
lea
xchg
mov
cld
cli
xor
in
xor
mov
jbe
test
ret
out
test
pop
add
in
inc
fstpt
sbb
fstpl
sub
sub
add
mov
mov
stc
incl
cmpsl
jl
sbb
sub
xchg
pop
ds
and
popa
cld
push
std
mov
lahf
movsl
sahf
setl
xchg
mov
lret
cwtl
roll
adc
inc
pop
in
and
cli
push
out
mov
ds
movsl
add
pop
cltd
xchg
or
mulb
lock
jmp
loopne
cli
dec
and
jne
pusha
out
sub
mov
in
cmp
lods
xchg
push
cmp
popf
lret
push
ret
stc
cs
jae
adc
sub
mov
jecxz
inc
hlt
sub
adc
ret
sbb
push
push
aaa
rorb
sub
sbb
mov
stos
push
lods
jb
addr16
cmp
cltd
data16
xchg
aad
dec
int
jg
lods
mov
shlb
push
jge
and
push
or
sbb
ja
cmc
push
xchg
fldl
fs
hlt
jbe
divl
push
jecxz
adc
data16
or
scas
lods
adc
sub
data16
fstps
ss
fisttpll
cmc
push
push
lret
mov
cli
inc
das
jno
imul
cli
adc
test
loopne
stos
mov
gs
adc
rorl
mov
aaa
push
jl
mov
mov
dec
push
mov
inc
sub
out
inc
add
dec
mov
clc
fistpll
mov
inc
jnp
pop
sti
add
pushf
in
inc
shr
js
sub
fisttps
xor
pop
inc
xor
push
cmp
cltd
out
xchg
jbe
imul
mov
xor
movsl
push
cmc
cmp
shr
dec
and
cmpsb
jge
fdivr
fdivr
adcl
xor
popf
fsubrs
fisubrl
sub
inc
mov
bound
jne
rcll
inc
aas
gs
inc
movsb
lcall
daa
xor
mov
mov
or
fnop
xor
mov
inc
loop
pusha
mov
pop
pop
push
and
sub
xor
daa
aas
in
sti
push
and
fxch
and
add
fdivs
mov
mov
stos
mov
mov
mov
mov
jbe
loopne
pusha
sets
aad
daa
orl
xchg
cmpsl
sub
mov
into
xchg
or
inc
sbb
and
lods
cmp
dec
cmpsb
pop
rorl
scas
xchg
mov
or
push
push
push
mov
mov
dec
mov
lock
lea
mulb
sti
jnp
and
and
jbe
daa
gs
test
sub
out
cld
adc
gs
jns
popf
or
scas
outsb
pop
add
lock
bound
pushl
rolb
mov
or
repz
je
or
add
mov
cli
push
dec
xchg
jns
and
test
add
sti
ret
gs
jns
scas
sub
or
rcrb
sub
sarb
ficomps
dec
pusha
sbb
test
cld
arpl
adc
inc
add
icebp
std
jmp
mov
repz
mov
test
and
and
in
ja
sbb
imul
sbb
popf
hlt
enter
sub
xchg
xchg
or
push
scas
cli
xor
mov
mov
push
pop
push
xor
fstl
jge
ja
ja
aam
jg
jbe
test
loopne
xor
push
rcl
dec
mov
lahf
divb
les
int3
mov
mov
push
lods
in
lods
insb
out
push
addr16
inc
stc
xchg
test
mov
nop
xchg
movsb
mov
jns
mov
pop
pop
lods
sbb
push
sub
mov
xor
mov
loope
adc
or
and
jno
sub
fadds
and
push
pop
into
cmp
lds
out
ffreep
push
push
sub
mov
mov
inc
test
sbb
xchg
repz
shll
jp
sbb
jmp
movsl
jge
or
jno
movsl
or
repnz
mov
mov
jnp
pop
test
movsb
inc
push
mov
in
sti
pop
sub
xchg
clc
jp
add
pop
shll
scas
ret
adc
out
icebp
push
mov
cmpsl
dec
push
jbe
inc
push
stc
xor
fstl
and
xchg
rcrl
cmp
jmp
mov
div
out
repnz
mov
jmp
xchg
enter
movl
pop
loope
or
jns
in
inc
push
outsb
loope
movsl
jnp
stc
add
fs
jnp
jo
pop
test
sbb
cld
notb
outsl
loope
ss
mov
out
fidivrs
cmp
adcl
dec
sub
loop
or
xchg
shr
push
jae
adcb
aad
and
mov
lods
pushf
xchg
aad
scas
lea
insl
inc
xor
xchg
pop
out
push
out
out
push
jbe
adc
push
js
cltd
das
fldt
add
xor
sbb
lahf
lret
add
int3
inc
gs
out
or
rcr
adc
mov
ret
je
ss
lahf
xchg
push
in
adc
pop
stos
movsb
and
push
jp
adc
lcall
mov
ss
or
mov
sub
sarl
out
ret
add
leavew
xchg
lahf
pop
push
xchg
dec
xchg
mov
mov
sub
test
fstl
in
mov
push
lds
cld
lea
stos
xor
adc
xchg
scas
pop
out
fninit
push
sahf
xchg
out
fdivrp
cltd
xor
cmpsl
xor
lods
std
or
lods
pop
push
pop
out
sbb
and
shlb
std
or
or
xor
dec
les
xchg
push
lds
je
dec
cltd
pusha
cwtl
push
xor
jno
push
lea
std
jnp
int3
xor
sbb
sub
sub
aad
insb
mov
sbbb
inc
mov
mov
jns
jns
ss
xlat
icebp
push
aas
push
gs
imul
pop
out
mov
mov
pop
outsl
sarl
xor
sub
adc
lds
dec
lds
decb
loopne
pop
xlat
fidivl
add
adc
dec
dec
jbe
gs
mov
call
rcrb
mov
mov
jecxz
push
cmovne
in
gs
aaa
xchg
popf
mov
mov
test
out
lret
addr16
jbe
inc
es
push
xchg
in
sub
xchg
jecxz
setl
rol
pop
push
mov
aam
iret
aas
inc
sub
rcr
ds
mov
sbb
inc
and
ret
xor
int
cmc
popa
mov
cmpsl
ret
add
adc
inc
xchg
enter
xchg
adc
shl
mov
push
rorb
test
or
cmp
test
out
fistpl
jno
pop
stc
inc
dec
test
das
fcomi
inc
fst
aad
and
hlt
lods
fs
repz
fsubrs
mov
insl
add
mulb
imul
mov
popf
pop
mov
pop
pop
mov
inc
push
mov
dec
fs
sbb
pop
push
in
in
mov
xchg
xchg
push
jb
dec
xchg
inc
or
lods
psubq
mov
mov
dec
pop
push
jp
and
cmp
and
insb
mov
stos
les
adc
mov
jae
cmp
mov
insl
dec
or
and
xchg
test
insl
bound
ficompl
inc
xchg
or
cltd
jne
out
iret
and
outsl
outsl
daa
mov
push
mov
decl
xchg
ret
iret
mov
ret
sub
push
pop
into
jnp
or
into
loop
push
jmp
mov
lea
sbb
in
jb
and
jl
xchg
mov
xchg
push
or
pop
and
pop
xor
dec
sbb
mov
dec
inc
xor
pusha
jge
xchg
sub
inc
mov
lahf
sbb
adc
fwait
and
movsl
push
popf
arpl
pusha
arpl
pop
xor
cmpsb
dec
mov
adc
xor
jmp
mov
in
xchg
js
inc
jno
or
test
or
xchg
cmp
mov
and
outsb
sbb
fstl
adc
inc
jb
ror
inc
mov
fwait
and
adc
or
sub
scas
and
and
pop
dec
pop
mov
ljmp
add
ret
dec
jae
jmp
xor
xor
test
or
fnstcw
inc
inc
daa
repz
lret
dec
jl
scas
repz
mov
jg
adc
sbb
popaw
int
and
sarb
shrb
pop
xor
jge
lcall
jae
sbb
mov
add
out
mov
push
bound
pop
rcrb
gs
cmp
fbld
ja
test
mov
gs
push
enter
inc
mov
xor
jno
pop
push
jp
push
fwait
cmc
int3
cs
imul
sub
and
int
cmc
xor
arpl
mul
movsw
sub
leave
lret
shrl
mov
jns
loop
or
jecxz
outsb
mov
nop
jo
pop
insl
aad
sbb
push
mov
jmp
fildl
je
push
cmp
sbb
ja
mov
psrlq
sbb
sti
jo
adc
mov
mov
adc
lret
test
add
ret
pop
mov
out
sbb
mov
inc
xchg
sub
imul
dec
aas
mov
fdivr
cwtl
xchg
or
imul
push
fcoms
fsubrl
add
jae
aas
lcall
fcomp
or
clc
inc
add
mov
add
or
xor
bound
mov
cmpsb
jge
push
or
lcall
jnp
in
incl
dec
dec
idivb
pop
add
into
pop
xor
cmp
mov
stc
mov
xchg
sub
mov
shll
xchg
jle
fisttps
push
mov
adc
pop
fisubs
mov
mov
js
xchg
sub
or
bound
in
inc
out
dec
cmpl
mov
jns
shlb
dec
and
pop
aad
cwtl
sbb
cld
push
pusha
lods
dec
ret
cmp
aam
xchg
sub
popa
xor
pop
or
rcl
mov
mov
and
push
orl
cmpsb
lds
insl
mov
imul
mov
mov
push
and
mov
inc
xchg
lea
add
mov
lds
mov
arpl
xchg
mov
mov
xor
push
add
or
and
adc
pop
cltd
int3
jmp
out
fwait
add
jmp
inc
test
adc
push
mov
and
jle
aam
pop
repz
mov
mov
mov
mov
idivl
and
mov
fwait
xchg
lret
addr16
aam
or
jae
insb
xchg
cmp
pop
xor
lea
in
push
and
enter
add
movsl
sahf
in
ret
std
jp
pop
jne
add
in
jbe
cmp
fst
outsl
outsb
insl
je
scas
push
mov
enter
push
jbe
xor
cmpb
faddp
dec
jb
dec
stos
mov
or
sar
sar
ret
lods
test
mov
mov
js
sub
push
jns
inc
cmc
testl
inc
fwait
hlt
cmpsl
ret
inc
and
test
add
mov
and
in
ljmp
push
stos
jno
in
xlat
inc
jbe
in
sub
sub
dec
insl
clc
les
ss
mov
pop
mov
xor
push
push
and
cmp
pop
xchg
or
andl
stos
cmpsb
jns
sbb
out
mov
cmpb
sub
faddl
or
adc
sub
std
out
arpl
lahf
mov
inc
dec
push
pop
popf
jne
adc
mov
and
adc
clc
xor
lods
add
xor
dec
mulb
repz
inc
mov
push
mov
shrb
popf
cmp
divb
mov
sbb
push
shrb
ss
jo
add
jo
cmp
faddl
daa
mov
xorb
in
int3
loope
iret
cmp
loopne
jmp
and
loope
dec
fisubrs
mov
push
outsl
lret
aaa
adc
mov
or
sbb
mov
push
mov
inc
movntps
gs
dec
ret
mov
or
sbb
push
lea
dec
or
ja
fisubl
jge
je
dec
push
aam
add
or
inc
loop
sbb
cmc
push
mov
sar
add
fisttpl
mov
imul
push
fisubs
in
mov
fcmove
mov
jnp
dec
or
leave
sub
sbb
or
ret
push
test
xchg
mov
lea
or
mov
adc
mov
push
rcrl
pop
mov
call
or
stos
lret
aaa
jo
repz
mov
insb
cwtl
mov
or
sub
aaa
xor
orl
add
xlat
sub
hlt
push
cld
fcoml
push
and
inc
scas
lret
dec
stos
sahf
push
and
mov
push
push
rcll
pop
rcrl
data16
inc
es
inc
mov
cmp
hlt
orb
dec
fwait
into
mov
jge
fmul
or
les
add
xchg
and
push
out
syscall
inc
aaa
xchg
or
fs
or
iret
xchg
cld
fs
add
leave
or
arpl
jae
push
mov
cmpb
clc
xchg
lds
xchg
lea
pop
or
repnz
notb
inc
jge
mov
lods
jo
add
mov
push
xchg
xlat
push
jbe
leave
sub
pop
push
jnp
arpl
lods
repz
out
in
in
das
insb
mov
in
jns
jle
jge
pushf
lahf
sahf
repnz
adc
jne,pt
or
test
loopne
icebp
dec
mov
outsl
jg
iret
int3
xchg
and
rcrb
sub
mulb
pop
sbb
jle
ds
mov
out
subl
push
pop
movsb
dec
cmpl
mov
imul
and
mov
dec
or
insb
dec
and
add
out
adc
sbb
mov
cmp
repz
pushf
bound
cmc
mov
into
cmp
ss
push
loope
movsb
out
sub
xor
add
add
popf
pushl
lock
mov
in
out
inc
jl
loop
outsb
nop
lds
push
ja
mov
loope
movl
inc
mov
js
fs
jae
mov
pop
dec
mov
adc
dec
mov
jl
lds
sbb
mov
cltd
jns
push
and
lock
rcll
and
pop
popf
rcl
faddl
in
mov
int
mov
test
mov
call
outsl
adc
sub
sbb
dec
lret
lods
jg
rol
loop
pop
cmc
pop
and
xlat
int
mov
push
xchg
mov
inc
xchg
ja
pop
mov
enter
cmp
adc
mov
jl
xlat
cld
add
mov
jnp
pop
push
iret
cld
scas
lods
imul
lret
add
scas
cmp
lods
arpl
fdivrs
and
pop
out
sbb
push
in
outsl
mov
add
mov
imul
inc
cmpsl
cmp
enter
das
repnz
ret
and
das
mov
add
sub
jl
pop
sti
add
add
mov
out
imulb
mov
in
mov
pop
cmp
mov
rol
xchg
fcompl
bound
adc
mov
xchg
inc
hlt
es
stos
out
aaa
xchg
adc
rorl
adc
test
dec
lods
push
cmp
into
jecxz
out
sub
bound
movsl
dec
mov
out
dec
sub
add
and
stos
shlb
mov
bnd
or
lods
lcall
and
stc
subl
test
out
add
addl
push
imul
lcall
xorb
sbb
and
push
mov
dec
adc
movb
inc
or
insb
mov
inc
mov
iret
add
mov
push
vandnps
out
test
adc
mov
mov
sub
or
pop
cmpsl
xor
loop
fnsave
insl
cmp
std
sub
out
testb
in
dec
adc
addb
loope
stc
sarl
clc
mov
jne
idivb
jmp
scas
cld
push
push
testl
cmpsl
sbb
mov
or
mov
or
and
ljmp
cmpsl
mov
test
aad
or
or
sahf
xor
rolb
inc
adc
das
jo
test
enter
out
xor
cmp
and
add
push
dec
xlat
cmpsb
repnz
jecxz
add
jecxz
mov
movsl
mov
testl
or
lock
cmpb
dec
ret
rcr
cmp
add
mov
shr
movsb
mov
lahf
hlt
mov
sub
mov
ds
daa
jae
xor
clc
dec
pop
in
shrb
jo
clc
hlt
subb
xlat
rcll
push
aas
prefetch
or
and
xor
dec
or
cld
das
jns,pt
or
mov
sahf
jle
xchg
stc
xlat
xchg
pop
push
and
cmpb
sahf
dec
and
dec
sbb
lea
sub
jbe
lea
inc
mov
sub
push
inc
enter
and
xor
mov
notl
lds
fildl
inc
daa
cmp
outsl
nop
pop
in
adc
stos
xchg
or
xor
or
scas
mov
icebp
xchg
rcrl
adc
stos
mov
pop
pop
fsubrs
and
push
cli
mov
das
jg
movsb
sbb
mov
mov
sbb
cmp
movsb
add
xchg
aam
cmpsb
test
icebp
mov
and
and
repz
cmc
ja
pop
fistl
xchg
rcrl
out
adc
jbe
movsb
adc
mov
ret
jecxz
mov
dec
or
aaa
lea
fstl
pusha
sbb
dec
outsb
xorl
push
mov
enter
and
sbb
addr16
stc
aaa
jns
das
pop
stc
jns
les
sub
aad
cli
dec
stos
fsubs
pop
popa
xor
dec
sahf
add
pusha
std
icebp
arpl
xor
hlt
loopne
test
xchg
adc
je
sbb
push
icebp
jl
frstor
fisttps
int
add
dec
jle
add
imul
sbb
das
gs
sbb
dec
rcll
sahf
sbb
shlb
cmpsb
in
sbb
lea
mov
push
mov
add
out
fists
cmc
inc
inc
cmpsl
push
pusha
dec
mov
out
sub
jmp
loop
mov
mov
mov
and
stos
pop
inc
pop
inc
push
pop
bnd
jg
jge
push
outsl
mov
xchg
mov
pop
xchg
lcall
sbb
pop
stos
lahf
into
pop
xchg
xchg
mov
jbe
mov
cmp
cmp
xchg
aaa
add
in
or
aas
std
cmpsb
and
push
rorl
pop
pop
cmpsb
pop
pop
orb
imul
and
in
or
jmp
sub
ret
test
in
pop
cmp
fwait
push
mov
loopne
sarb
out
mov
call
cmp
or
dec
sub
adc
push
xor
xor
sbb
subl
push
adc
cmovne
in
subb
stos
or
das
cmp
call
movsl
ret
gs
xor
sbb
mov
lcall
cmp
out
loope
add
aad
into
stos
mov
add
pop
jecxz
iret
mov
cmpsb
mov
rcr
mov
adc
jo
xor
sub
jbe
jl
or
mov
dec
loopne
cmp
aaa
xchg
xor
cmp
jns
cmpsl
cwtl
push
inc
nop
mov
jae
sarb
stc
call
ret
mulb
movsb
push
mov
testl
sbb
loope
mov
inc
orb
sbbl
mov
adc
adc
cld
xor
scas
pop
lds
sub
and
pop
dec
int
push
cwtl
mov
mov
push
jecxz
adc
mov
xor
adc
jle
cwtl
ja
pop
fcoml
inc
cs
mov
xchg
sub
cli
bound
sbb
aam
xchg
sub
mov
push
sbb
mov
cmpsl
or
sbb
nop
adc
fneni(8087
cld
cmp
loopne
popa
adc
aad
daa
mov
sub
dec
out
int3
imulb
mov
pop
xchg
xchg
pop
pop
dec
jne
mov
push
stos
and
sbb
inc
std
mov
les
in
xchg
push
repnz
fdivr
loopne
loopne
in
cmp
or
sub
sbb
add
push
push
push
lock
imul
lods
aas
les
ficoms
cmpsb
sbb
les
jnp
int3
pop
es
mov
xor
movsl
loopne
rep
sub
cli
enter
dec
or
or
rcll
push
imulb
les
xor
lret
pop
iret
inc
push
int
inc
push
push
in
js
lret
pusha
out
xchg
add
xchg
js,pt
shlb
jo
cmp
sub
push
nop
sar
push
ret
ss
dec
xor
insb
adc
xchg
mov
mov
mov
sbb
notl
int
rorb
dec
adc
dec
pop
mov
ja
cmpl
stos
aas
sub
fwait
mov
out
add
imul
gs
mov
add
nop
add
sti
fwait
xchg
pop
movl
jns
mov
cli
mov
mov
mov
jae
jo
mov
push
call
cmp
xchg
or
mov
mov
or
mov
dec
inc
mov
cmpsb
mov
jl
mov
cmpl
mov
and
or
cld
jmp
cmpsb
mov
mov
js
mov
test
jmp
icebp
addr16
mov
sbb
into
jae
pop
mov
iret
mov
scas
imul
test
rcrb
pusha
int
js
push
mov
inc
xchg
push
shll
push
out
insl
out
gs
push
xchg
cmp
fsubrl
cwtl
test
aam
push
mov
cltd
mov
mov
xchg
mov
xchg
sub
xchg
or
fildll
cli
cmp
mull
out
cwtl
ss
jo
sub
dec
test
bound
popa
mov
inc
jns
fwait
lods
jb
imul
push
push
mov
je
lods
pushf
jle
pop
cwtl
xchg
or
aad
inc
cmpsb
xor
je
pop
ja
sbb
push
mov
std
aas
hlt
jne
dec
pushf
dec
mov
jge
imul
sahf
dec
mov
lock
ss
push
mov
fwait
dec
lahf
cld
mov
fstl
sbbb
daa
or
fldt
jmp
testb
xor
cmp
mov
jp
dec
add
sbb
cmpsl
sub
push
adc
and
inc
mov
in
sub
idivl
pushf
subb
xchg
dec
xchg
stc
cmp
pop
and
out
sahf
sbb
mov
js
cmp
cld
pop
std
add
mov
cmpsb
jne
leave
cmpsb
repnz
mov
push
pop
loope
pop
jmp
in
xor
adc
test
loope
sub
mov
xor
lret
adc
inc
cmc
or
or
pop
mov
mov
pop
int3
gs
outsl
dec
mov
jbe
xchg
sbbb
pop
jnp
lret
xchg
dec
data16
xchg
cmp
shlb
out
test
insl
pop
je
jae
mov
sub
mov
dec
mov
pusha
loop
dec
add
test
icebp
add
cltd
cmp
ret
mov
and
adc
push
ret
loopne
cltd
dec
lret
xchg
jmp
out
inc
push
into
mov
roll
shll
aad
jle
data16
jno
adcl
pop
mov
shrb
leave
pusha
rorb
cmp
push
ret
or
push
lret
jne
jb
rorb
add
mov
jmp
jmp
pop
inc
inc
pop
cmpsb
mov
gs
xchg
cmp
test
fcoms
jl
xor
lock
mov
and
cld
sarb
loop
jecxz
into
sub
cmp
adcl
inc
mov
js
pop
enter
pop
mov
not
mov
addr16
out
and
ds
pusha
in
add
xchg
mov
ss
stos
cli
sub
lcall
push
fistpll
fisubs
inc
and
loop
cmp
jle
push
mov
addr16
les
pop
mov
and
mov
add
xor
int
sub
cmp
ret
lea
cwtl
xor
pop
adc
or
je
enter
jmp
sub
out
xchg
rcll
movsb
adc
add
push
pop
aaa
add
pop
aad
pop
call
cmp
leave
jg
push
lods
xor
std
fimull
jb
xor
dec
dec
out
cmp
mov
mov
jae
cmp
scas
popf
repz
lds
push
in
stc
mov
loopne
enter
push
sbb
inc
orl
push
shrb
arpl
inc
mov
jg
insl
add
out
jecxz
out
scas
test
ja
aas
mov
clc
add
push
cmp
dec
cmp
mov
enter
cs
mov
add
pushf
in
movsb
les
nop
inc
push
cmp
call
fists
xchg
mov
xchg
out
std
in
jmp
inc
les
fmuls
mov
push
scas
xchg
dec
and
mov
shrl
pop
addl
testl
push
cli
xor
daa
aas
ret
test
aam
push
jge
mov
dec
cmp
sub
sbb
dec
sbb
dec
mov
sub
pop
aaa
std
cwtl
mov
je
mov
xchg
pop
or
sar
into
fldl
lcall
mov
push
filds
add
fs
data16
adc
inc
xchg
push
adc
lds
jp
test
mov
mov
bound
lahf
in
loope
mov
lcall
mov
sub
lods
xchg
stos
mov
cmp
data16
pop
inc
add
stos
int3
aas
push
mov
xlat
jne
mov
lock
aad
lock
push
and
fisubrs
cwtl
cld
sbb
arpl
push
cli
sbb
stos
shrb
jl
int3
mov
out
fs
xlat
in
mov
xchg
mov
or
add
sti
add
stc
aaa
roll
loope
mov
mov
gs
cmp
sub
and
into
jns
mov
sub
mov
cli
pusha
mov
jnp
in
inc
add
fiadds
sahf
jae
inc
mov
sbb
pop
lea
je
inc
ss
subb
dec
ljmp
inc
cmc
fsubl
pop
sti
incl
xchg
aaa
dec
inc
push
inc
bound
mov
mov
sbb
mov
dec
or
mov
repz
test
loopne
lods
rclb
mov
popa
rcrb
add
add
aas
xchg
stos
notl
push
in
and
gs
inc
inc
movsb
xlat
pushw
pop
in
xchg
and
test
mov
xor
mov
movsb
dec
sbb
loope
dec
aaa
sbb
xchg
jl
cmp
enter
cmp
sub
rcrb
xchg
das
fidivrl
test
test
mov
jl
xor
sub
mov
mov
dec
loope
push
dec
lods
inc
pop
mov
xchg
jle
fsts
cmpsl
das
adc
and
pop
jg
pop
dec
lret
sub
sbb
xor
jbe
js
dec
ds
stc
jmp
fisubl
jns
clc
ret
loope
adc
fucomi
mov
mov
jo
xor
test
ret
adc
fdivs
push
cmp
push
ds
mov
inc
cmpsb
or
pusha
ret
fsts
sahf
dec
mov
ss
cmp
nop
mov
xor
test
jo
add
mov
or
xchg
divb
loopne
jmp
mov
push
inc
scas
arpl
push
cld
aaa
dec
cmp
sub
imul
or
jmp
mov
hlt
and
bound
into
ret
add
and
jg
ret
xorb
leave
sub
cwtl
fimuls
add
mov
push
popf
movb
fnstcw
jecxz
mov
mov
sub
fcoml
icebp
pop
and
sarb
insb
and
test
daa
je
sbb
sarl
adc
push
push
jns
lods
xchg
call
popa
fwait
sarb
xchg
jno
adc
scas
inc
shll
or
in
cmpsb
aaa
mov
in
loop
std
push
sub
clc
in
repz
out
and
scas
add
pop
sahf
lods
push
mov
ds
sub
xchg
dec
dec
and
and
inc
adc
arpl
xor
adc
ss
dec
dec
xlat
inc
dec
sahf
hlt
fcom
ret
or
sbb
pop
mov
dec
sti
dec
addb
mov
rol
push
xchg
and
addl
cld
das
cmp
jnp
adc
fstpl
data16
std
xor
shrl
out
xor
dec
jne
pusha
stc
ja
sti
xor
stos
ficoms
les
lds
sahf
xchg
andl
xor
push
add
cmp
sub
push
data16
or
fcompl
and
ret
repnz
sbb
dec
adc
add
cmc
jne
jo
cwtl
nop
or
and
jp
cmpsl
les
jp
adc
mov
push
mov
inc
push
lock
loop
roll
or
test
sub
fwait
or
adc
adc
pop
jb
push
inc
pop
jo
ljmp
inc
xchg
out
out
mov
mov
xchg
mov
call
aas
cs
cmpsb
aaa
ret
and
xor
xlat
mov
fidivl
pop
or
push
cmpsb
mov
jge
bound
out
repnz
scas
aaa
mov
adc
inc
repz
cmp
loope
or
rol
and
cmp
pop
adc
push
setnp
cmp
xchg
sbb
xchg
rcrl
lahf
jae
adc
shrl
mov
and
int3
inc
sub
loop
sub
dec
aaa
fs
mov
jl
adc
xchg
mov
fucomi
outsl
or
dec
cmp
aaa
aam
cmp
sub
sub
jns
int3
aam
mov
test
adc
mov
pushf
pushl
add
mov
xchg
es
jecxz
fistpll
or
push
dec
xchg
in
inc
dec
out
bound
inc
adc
mov
call
cmpsl
insl
jno
sub
cmp
inc
add
mov
mov
cltd
push
outsb
in
decb
sar
xor
aas
out
lret
shrb
stc
lahf
dec
cmp
mov
mov
sub
daa
popa
jle
push
jl
lret
aam
ja
cmp
inc
test
pusha
xorb
xchg
movsb
scas
fs
add
sbb
mov
mov
xchg
mov
mov
rcrb
pop
ret
mov
aaa
inc
js
fwait
xor
pop
cmp
movsl
push
xor
cs
sbb
notl
jp
xor
xchg
push
jno
data16
scas
pop
cmp
xchg
push
or
mov
add
mov
cmpsl
inc
adc
mov
cmc
cmpsl
mov
in
sbb
ret
push
movsb
and
stc
sub
popf
xchg
mov
jle
or
out
sub
fiaddl
inc
test
jmp
jecxz
sbbl
mov
cmp
in
jge
sub
dec
and
lods
mov
mov
into
out
xor
lock
push
push
xchg
or
fmull
mov
pop
insb
mov
mov
aaa
xor
pop
aad
inc
jno,pt
popa
nop
stos
fistl
data16
and
or
push
shll
aad
mov
cmp
addb
repz
and
mov
negl
jae
jno
hlt
lahf
lds
xlat
movsl
xchg
repz
sbb
dec
loope
fs
ret
pop
pop
and
mov
rolb
imul
jae
imul
mov
sbb
xor
adc
dec
and
out
pop
mov
mov
cwtl
xchg
push
fwait
test
dec
dec
mov
mov
xlat
jg
stos
dec
int3
les
mov
shll
and
mov
ficoml
lds
pop
add
cmp
xchg
cmp
dec
mov
mov
loop
sbb
repnz
cltd
ret
lret
jnp
idivl
jbe
mov
sub
push
cmp
pop
adc
and
mov
out
repz
mov
jae
inc
sub
xchg
dec
test
dec
add
rcr
jl
aas
and
adc
adc
icebp
push
in
lods
xchg
mov
out
aaa
test
jno
xor
add
jmp
into
inc
inc
xor
imul
lods
repnz
lds
add
jecxz
lds
sarb
pop
add
pushf
cs
sbb
rcrb
lret
sbb
mov
adc
add
addl
pop
push
xchg
mov
inc
testl
sbb
lahf
xchg
out
iret
pushf
xchg
adc
jo
sub
aad
mov
lods
lret
test
aaa
adc
cmp
call
mov
mov
sub
add
xor
repnz
push
jno
jmp
adc
dec
jmp
lahf
stos
rolb
xor
mov
inc
sbb
pop
adc
daa
cli
adc
mov
or
lcall
jne
push
imul
or
daa
ficoms
pop
adc
xor
call
or
xlat
mov
bound
testl
ss
jns
mov
xor
test
sbb
out
cmp
aas
in
call
icebp
cmp
pop
pop
dec
test
arpl
push
into
int3
data16
mov
dec
loop
dec
cmc
mov
lahf
into
xor
jne
fwait
rcrl
popf
popf
adc
push
inc
inc
push
pop
ror
jge
xor
jnp
loopne
loope
test
out
xor
in
cmpsl
pop
ret
add
pop
or
sub
aas
mov
ret
push
push
and
pop
mov
mov
ffree
loopne
cli
js
push
add
fdiv
iret
insl
dec
mov
or
push
and
test
mov
push
fcoms
test
cwtl
iret
mov
mov
dec
in
mov
xor
sbb
aas
push
out
xor
arpl
sbb
inc
pop
mov
rcr
stos
cwtl
les
cmpsl
sub
xor
jmp
scas
rcrb
jmp
test
push
adc
cmpsb
jns
rclb
aaa
push
fnstenv
adc
fisubl
stc
cmp
mov
or
and
xchg
adc
andb
mov
push
add
inc
sub
jno
frndint
out
mov
mov
jp
ret
xchg
xor
int3
fst
sti
mov
aam
cmpsl
outsl
insb
ss
adc
jne
rorl
frstor
arpl
push
je
inc
leave
test
in
push
adc
bound
jecxz
jno
jbe
xchg
and
dec
jae
jle
call
cmp
xchg
xor
dec
stos
scas
cli
mov
inc
jns
popf
frstor
lcall
pushf
rol
aas
mov
lahf
or
repz
lret
pop
jle
dec
flds
fstpt
push
jbe
imul
lahf
fnop
sub
mov
insl
xchg
push
pop
xchg
or
xor
and
xchg
outsb
lods
pop
sbb
sbb
pop
jo
sub
scas
push
js
stos
mov
loopne
flds
cmc
and
mov
mov
dec
push
gs
pop
push
add
pop
lods
push
xchg
add
mov
cmp
pop
add
dec
pop
aaa
fstp
inc
das
gs
scas
sub
pop
xchg
iret
inc
pop
add
ljmp
mov
and
mov
dec
xchg
notb
inc
into
enter
sub
adc
aaa
dec
jmp
in
push
jo
lods
push
sub
pop
sahf
mov
xchg
rcrb
shl
cmp
jae
enter
sub
call
jo
xor
xor
daa
out
in
fwait
xor
out
insb
jl
fsubl
into
nop
daa
mov
enter
rorb
icebp
push
stc
jno
arpl
pop
mov
cwtl
xor
mov
mov
sub
and
dec
xor
insb
lea
push
jbe
cmpsl
push
push
gs
sbb
sbb
pop
add
push
pop
dec
gs
test
movsb
mov
cld
mov
scas
rcr
icebp
inc
enter
mov
nop
cld
cwtl
popa
push
stos
mov
push
xlat
outsb
sarb
loop
sarb
and
mov
fadd
add
mov
push
adc
insb
inc
inc
loope
std
mov
mov
vorps
and
lcall
fwait
popf
and
imul
jmp
mov
cmp
js
and
into
cwtl
lret
push
mov
pushf
add
gs
insb
movups
shrb
jo
repnz
insl
cmp
in
mov
pop
push
pop
cmpsl
mov
xchg
int
xor
mov
lcall
mov
mov
movsb
and
lds
mov
mov
adc
cltd
enter
lods
sbb
out
test
test
cmp
push
ss
mov
enter
into
rep
in
and
aas
clc
daa
mov
js
outsl
leave
xchg
loop
xchg
ds
pop
loope
push
mov
int3
lret
add
push
out
jno
bound
mov
push
insb
or
icebp
cmp
pop
mov
clc
cmpsl
outsl
lret
sub
xchg
je
mov
jae
mov
shrb
and
incb
inc
mov
xor
push
shrl
inc
pop
cmp
rcr
aad
push
enter
int3
push
fsubs
fs
or
or
repnz
cmp
lret
sbb
add
mov
cmc
lret
mov
repnz
or
jp
jno
dec
jge
inc
pusha
jns
pushf
jle
push
inc
or
mov
push
mov
and
clc
lock
in
aam
iret
fdivl
xchg
and
push
xadd
sub
cmc
je
in
xor
mov
repz
add
mov
inc
fsubrs
pop
push
movsl
shlb
mov
mov
adc
in
jnp
xchg
sbb
sarb
or
jbe
imul
mov
cmp
call
add
out
dec
lds
cltd
loop
smsw
fsubrl
mov
sub
and
lea
mov
imul
enter
scas
pop
orb
inc
and
push
addr16
and
cmp
sti
cs
ret
dec
add
lcall
pushf
push
dec
sbb
lcall
pop
incb
cmc
xor
mov
gs
sub
lret
add
fwait
or
mov
fwait
insl
call
aaa
inc
mov
mov
test
je
enter
loop
push
sahf
movsb
icebp
test
adc
aad
mov
mov
aas
cmp
mov
push
setns
sbb
xchg
and
nop
cmp
mov
outsl
add
mov
and
mov
icebp
lret
inc
mov
lcall
scas
xor
fwait
dec
test
pusha
pusha
frstor
mov
test
mov
cmp
adc
and
sbb
bound
cld
movsb
jno
lea
es
jnp
cwtl
dec
hlt
jle
inc
mov
sbb
cmp
lret
adc
xchg
or
xchg
in
scas
movsb
lret
cli
cmpsb
mov
stos
dec
movsl
sbbb
out
pushf
add
sub
cmp
loopne
rorl
cmpl
cmp
pushf
shl
jns
push
and
add
xchg
sub
popf
jbe,pt
sbb
mov
imul
negb
outsb
xor
mov
inc
movb
mov
dec
adc
arpl
cwtl
push
jle
lret
sub
dec
stos
ss
xchg
shr
sbb
jnp
xchg
inc
fildll
jnp
jae
xor
push
jecxz
ret
cmpsl
jne
pop
xchg
or
cmpsb
add
pop
scas
mov
sub
lcall
ret
cmp
or
xchg
or
dec
out
mov
inc
mov
es
or
mov
xor
xchg
jp
clc
fcompl
jne
jp
stos
xor
inc
jge
xlat
out
shll
movsb
stos
es
push
std
adc
outsb
stos
test
les
hlt
mov
fwait
mov
inc
pop
js
test
lret
or
mov
rcrb
addb
out
rorl
test
push
dec
aam
cmpb
mov
ja
or
test
in
push
xchg
test
in
mov
mov
dec
sbb
jecxz
test
mov
stc
sahf
daa
mov
xor
jle
in
add
lcall
jge
icebp
mov
push
xchg
sti
roll
cs
pop
xchg
or
mov
push
lods
sbb
push
imul
and
cmp
xor
and
sti
mov
mov
mov
jmp
aas
dec
test
inc
adcl
mov
aaa
addr16
pop
dec
stos
movsl
mov
imul
test
scas
jb
lods
inc
lret
test
and
jae
subl
add
nop
clc
push
mov
stos
pop
arpl
sub
sub
out
jecxz
insb
inc
mov
and
or
adc
out
stc
cli
xchg
lods
or
repnz
fildll
pop
cmpsl
test
cmp
stos
or
jb
nop
mov
js
lcall
in
adc
dec
jecxz
fildl
sbb
dec
rorl
rcrb
loop
movsl
pop
adc
aad
add
outsl
sti
das
fwait
scas
add
mov
mov
add
mov
inc
push
testb
ret
jnp
cs
or
fdivs
rol
test
push
fwait
push
std
fiadds
popa
jno
cmpsl
lahf
pop
adc
lock
mov
mov
dec
out
les
inc
sarb
inc
pop
pop
outsb
cmc
cmpsb
pop
out
sub
lds
xchg
sub
xor
xor
xchg
cmpsb
sbb
pop
jle
cwtl
incb
fldcw
ret
xor
iret
aas
add
xchg
int3
add
push
movsl
mov
insb
lret
mov
xor
call
leave
jle
push
std
cmp
add
pop
cmpsl
mov
lock
jp
mov
adc
sub
pop
or
sub
lret
push
push
push
inc
jb
jl
repnz
repnz
pop
call
add
repz
ret
sub
popa
popf
jns
xor
push
cmc
xchg
mov
dec
scas
pop
push
inc
repnz
js
sbb
sahf
mov
pushf
push
in
push
rcll
and
pop
xlat
lahf
lea
mov
mov
stos
test
xorl
mov
xchg
loopne
and
outsb
fincstp
test
mov
lods
iret
in
bound
fldenv
xor
push
inc
cltd
push
fucom
mov
data16
popf
lret
mov
cltd
mov
movb
fdivp
sub
imull
push
shll
mov
les
jle
push
cld
lahf
ss
imul
push
adc
shll
gs
in
jo
fwait
leave
in
and
test
dec
inc
cmp
pop
or
pusha
inc
out
push
mov
or
sub
sub
or
insl
add
orl
mov
adc
mov
inc
mov
xchg
movsl
xor
mov
mov
pop
cld
push
movsb
pop
inc
faddl
lods
and
and
aas
aad
push
push
adc
out
mov
loop
mov
call
jo
inc
cmp
loopne
cmp
scas
adc
lea
popa
pop
push
push
sahf
imul
cs
shlb
jg
imul
scas
xchg
mov
daa
or
push
or
aad
movsl
scas
dec
rcr
flds
push
or
fistpl
rolb
sub
btr
push
rorl
sbb
mov
mov
mov
or
andb
or
xchg
into
adc
lock
xor
aad
lods
xor
mov
jge
out
rcrl
push
mov
xor
into
loop
xor
fisubrl
out
pop
pop
or
jmp
lock
or
in
jmp
cmpsb
cmp
jecxz
stos
fs
mov
jbe
inc
sbb
nop
out
mov
loope
or
outsb
jp
mov
loopne
xor
std
dec
test
loopne
js
inc
mov
xchg
jnp
std
sbb
notb
cli
sub
inc
jmp
mov
sti
clc
and
mov
inc
test
loope
mov
adcl
pusha
push
cmp
or
lret
scas
pop
std
sbb
addb
rorl
out
addl
stc
loop
in
push
dec
xor
ss
cmp
mov
fidivl
fdivs
std
fs
add
or
push
mov
or
addr16
ljmp
outsl
movsb
mov
mov
xor
cmc
movsb
pop
push
adc
sahf
push
mov
gs
loopne
lcall
stc
filds
std
xchg
and
xlat
rcrl
ret
insl
xchg
sub
jnp
fmull
mov
mov
cwtl
pop
cmp
ficoml
sbb
mov
ds
or
repnz
add
xchg
rorl
int
adc
and
shlb
sbb
addb
inc
mov
shrl
push
in
rolb
scas
jnp
notl
movsl
push
aas
daa
loop
pop
repz
jl
mov
and
dec
loop
mov
sbb
loopne
out
lods
imul
push
les
mov
ljmp
or
cwtl
inc
mov
xchg
fsubp
add
push
pop
dec
pop
shl
xchg
sub
mov
xchg
jle
mov
popa
mov
int3
cmp
sbbb
outsl
scas
add
push
lcall
mov
and
adc
jge
cwtl
dec
bound
jmp
mov
jae
xchg
gs
out
mov
pop
mov
fsubrs
shr
subb
dec
ljmp
mov
push
cmp
adc
or
mov
dec
xchg
mov
jl
sub
or
xor
inc
pop
and
out
mov
in
mov
cmpsl
jle
mov
lods
mov
sbb
mov
push
and
xchg
pop
mov
lock
jbe
out
jle
pop
js
push
pop
push
outsl
dec
jne
in
insb
mov
pushf
mov
cmp
lret
cmp
test
xor
pop
pop
cs
pop
sarl
clc
and
in
cmp
lods
mov
sub
sub
ja
jae
cwtl
and
push
inc
stos
loop
add
dec
jecxz
push
sub
mov
dec
cmpb
das
cmp
jle
repnz
fwait
cmpsl
movsb
cmpsl
outsb
lcall
xchg
pop
sub
add
imul
dec
and
icebp
add
aam
scas
mov
adc
fsub
scas
or
rolb
hlt
fsts
mov
roll
lods
shlb
int3
dec
fistpll
jp
cmp
lods
mov
subl
mov
jne
push
adc
or
and
add
outsb
cmp
dec
loop
cmpsl
aas
dec
or
add
notl
lret
ds
fnstsw
ret
lahf
xor
lds
je
lret
aam
jecxz
sbb
out
cmp
daa
mov
add
push
or
mov
lret
out
leave
aaa
aaa
adc
addl
and
ljmp
andl
mov
push
xchg
mov
mov
loope
imul
or
jbe
or
aaa
dec
scas
js
jbe
repnz
xor
xchg
mov
sub
dec
jmp
dec
shll
aas
sbb
push
mov
aaa
test
ss
mov
sbb
enter
and
sti
inc
les
in
decb
sahf
out
int3
out
sbb
jns
fisttpll
lods
cld
sub
or
popf
cmp
xchg
pop
or
jl
pop
mov
xor
clc
cmp
adc
push
push
add
fimull
mov
insb
aas
jmp
push
ret
stc
adc
mov
ss
scas
xchg
lods
dec
clc
xor
cmp
pop
aas
fisubrs
inc
mov
sbb
and
mov
push
mov
mov
ret
cmpsb
push
xor
mov
inc
pextrw
iret
addr16
fs
xlat
test
sub
aad
push
call
movsb
pop
movsl
lcall
ret
add
xor
add
pop
xchg
xlat
push
roll
into
sti
enter
push
lds
arpl
sub
xchg
lahf
sub
arpl
push
aam
inc
xchg
addl
fimull
mov
ljmp
jnp
or
mov
fdivl
jo
mov
fistpll
dec
call
xor
adc
iret
lock
inc
add
divl
aaa
adc
pop
outsl
mov
lahf
popa
inc
dec
inc
or
xor
sub
pop
rcr
cmp
hlt
inc
mov
pop
repz
fbstp
mov
and
pop
lds
sbb
or
pop
roll
cmpsb
mov
fstpl
lea
rcrb
pop
xchg
cmc
divb
pop
aad
in
and
push
ds
cli
ss
sub
loop
icebp
loope
js
and
mov
sbb
cmp
jp
add
sub
es
sub
cmp
test
cwtl
out
scas
push
test
lods
cmc
out
jne
push
test
divb
pop
mov
leave
scas
lock
mov
in
pusha
mov
and
pop
push
mov
les
push
out
dec
cmp
repz
push
sarb
adc
push
das
faddp
test
pusha
nop
add
sti
sub
mov
filds
cs
dec
add
cmp
movsb
test
sub
xorl
xor
mov
push
inc
bnd
scas
sub
xchg
je
mov
cs
or
xchg
inc
jnp
in
out
data16
in
mov
sbb
jecxz
test
shlb
popl
cmp
mov
push
jne
jbe
cmp
rcl
rcrl
mov
jg
jmp
scas
je
movsl
scas
inc
aaa
dec
pop
inc
test
or
push
adc
xchg
pop
fs
pushl
aaa
and
add
rcrb
pop
int3
pushf
je
shlb
fisubrl
in
pushf
out
syscall
adc
xlat
xchg
xor
cmp
push
scas
push
ret
rorb
xchg
xchg
pop
mov
or
adc
push
sbb
arpl
repz
add
insl
pop
jl
xor
stos
pop
xor
scas
lcall
jl
lcall
adc
xchg
add
fnstcw
loopne
adc
jne
cmp
clc
sti
rorl
scas
and
dec
add
xor
jns
pop
xlat
cmp
xor
lahf
jl
sbbb
sbb
sbbb
xor
mov
outsl
leave
inc
lods
cmpsb
pop
stc
add
inc
or
push
cmp
mov
jl
cmpsb
adc
mov
and
daa
into
xchg
ja
cmc
push
loope
negb
out
vmovmskpd
fistl
xlat
jmp
xor
inc
adc
lea
add
xchg
push
cltd
inc
mov
mov
hlt
xchg
sbb
mov
jecxz
dec
shrb
dec
sub
cmp
ja
xor
pop
insl
push
pushf
int3
mov
fistpl
int3
and
sub
xor
lods
dec
fstpt
and
repz
es
sahf
popa
push
xchg
jne
pop
fs
cmc
data16
out
mov
in
into
lods
cmp
jb
loope
fdivr
insl
pop
pop
pop
mov
mov
movsl
or
jo
sub
jbe
mov
inc
lea
cmc
dec
movsb
mov
jbe
gs
mov
push
pop
add
xchg
sub
push
subl
in
imul
negl
andb
add
stos
mov
loope
call
std
jge
dec
int3
add
fidivs
push
out
and
mov
dec
das
adc
std
lahf
mov
inc
into
arpl
jmp
lret
push
and
mov
pop
rorl
fldcw
nop
inc
cs
xchg
adc
xchg
pusha
xor
adc
mov
shrl
dec
and
test
into
mov
add
int
aas
mov
push
push
andl
or
mov
rorl
dec
mov
mov
ret
cmpsl
sbb
ficomps
mov
and
xchg
mov
cmp
hlt
loopne
ljmp
mov
out
jge
or
fisttpl
and
mov
push
fisttpl
popa
loop
mov
cmp
pop
stos
push
push
into
push
xorb
ja
xor
pop
out
mov
aam
xor
icebp
insb
lcall
popa
add
xor
push
mov
mov
inc
sub
or
adc
add
test
repz
xchg
and
cmp
clc
jmp
aam
test
leave
bound
shl
idivb
pop
lea
std
test
dec
jne
aad
pop
xor
push
mov
out
push
cli
sbb
jno
cmp
jb
inc
cli
xchg
outsl
test
mov
cli
dec
in
sbb
hlt
lea
mov
ffree
mov
ss
sarb
adc
mov
mov
cmc
jb
imul
xorl
jnp,pn
xor
dec
sub
push
dec
cwtl
jmp
stc
sub
jb
add
pop
insl
mov
push
mov
hlt
clc
dec
adc
lods
enter
cmp
inc
dec
add
sub
mov
pop
mov
jecxz
mov
push
inc
nop
pop
xor
xor
mov
or
and
sbb
in
sbb
das
cmpsl
inc
push
or
int3
imul
cmpsb
push
mov
push
outsb
negl
mov
pop
cli
ljmp
outsb
and
adc
mov
data16
dec
insl
popf
jns
test
inc
lret
frstor
lret
je
mov
or
lret
shlb
repz
add
add
jb
push
dec
lcall
call
and
mov
jecxz
cmp
cmp
adc
dec
xor
xchg
inc
imul
jmp
mov
cwtl
gs
xchg
or
aad
inc
lret
lds
and
rcrb
pop
mov
fcmovne
cmp
add
mov
mov
inc
bound
and
sub
push
pop
mov
cwtl
sbb
movsl
test
dec
in
bound
lods
sbb
cmp
std
das
pop
jnp
mov
cltd
bound
fisubrl
inc
mov
mov
fidivrs
jecxz
stos
pop
sub
push
inc
fwait
push
push
xchg
sbb
repnz
mov
or
arpl
test
hlt
fsub
xchg
cmp
test
outsb
stc
daa
jmp
jecxz
xchg
cmp
jno
imul
rcrl
scas
push
push
std
add
mov
movsl
jnp
inc
popf
sarl
aas
mov
mov
loop
adc
mov
aas
sbb
xchg
cli
mov
mov
or
push
iret
add
outsl
out
cmpsl
fistpll
daa
es
jecxz
inc
cmp
push
test
push
test
mov
cmp
add
repnz
mov
fsubr
jle
movsl
jae
sub
jmp
jl
mov
fnstenv
pop
and
scas
loop
adc
push
addr16
fs
xchg
into
ret
jne
inc
and
pop
in
pop
add
das
adc
pop
inc
fistpll
adc
xchg
sar
mov
scas
or
mov
sbb
or
sarl
pop
in
pusha
iret
fsubrl
jno
dec
xchg
cmp
pop
add
lock
mov
aas
mov
push
fcmove
dec
xchg
call
adcl
adc
bound
pop
xlat
xchg
or
mov
mov
test
repz
mov
lds
or
pop
jl
clc
pusha
jle
mov
pop
sti
jmp
ret
push
gs
popf
loopne
imul
cmc
cmp
add
or
jno
leave
add
fsubr
adc
pop
or
je
sub
pop
pushf
pop
jmp
rcl
mov
int3
xchg
fwait
insb
cwtl
mov
sbb
jbe
and
push
arpl
sub
loope
imul
jns
cli
cs
mov
inc
add
cmpsl
xor
mov
xor
ss
mov
rcll
adc
iret
rorb
sub
mov
and
dec
push
add
push
stos
xlat
dec
xor
daa
push
gs
lret
addl
outsb
lea
cmpsb
xchg
mov
mov
mov
fwait
in
pop
add
pop
jle
test
push
add
dec
xchg
and
adc
jl
int3
jne
stc
pop
notl
loope
aad
mov
repz
cs
fistpll
scas
ljmp
jno
jne
loope
data16
pop
dec
and
stc
inc
cwtl
fnstenv
mov
jl
and
out
jg
or
adc
cmp
test
mov
daa
jmp
jg
pop
add
or
loope
fucomip
sar
aam
bound
jno
push
mov
push
shlb
or
insl
sbb
test
inc
xchg
es
add
gs
push
add
std
xchg
push
les
xlat
fxch
and
or
cmp
push
aas
arpl
ret
ljmp
sti
mov
mov
xchg
loope
xchg
sarl
xor
xrelease
mov
rorb
testl
jmp
or
pusha
imul
mov
xor
xchg
pop
inc
movsb
add
mov
xchg
aad
add
xchg
in
stc
fs
aas
mov
and
pusha
mov
addr16
mov
subl
bound
stos
dec
push
je
pushf
scas
mov
xchg
lds
pop
push
sbb
cwtl
sbb
lea
pop
test
jp
mov
clts
fdivl
icebp
push
lods
mov
mov
pop
xor
outsb
mov
dec
inc
add
je
daa
outsb
ja
leave
cmc
cli
dec
mov
ss
pop
aam
mov
xor
decb
pop
xchg
outsb
xchg
pop
add
cmp
mov
lret
lods
xor
js,pn
out
fdivp
pop
jmp
je
negb
sahf
cld
mov
outsl
adcl
leave
sar
scas
pop
xor
mov
inc
xlat
lahf
lea
mov
xor
xchg
cmpsl
xchg
cmp
pop
and
ret
adc
sbb
pop
pop
and
cmp
push
lds
in
ds
scas
orb
stos
cld
addr16
lret
push
aam
ljmp
lret
inc
mov
imul
mov
cltd
scas
mov
outsb
mov
test
mov
repz
pop
mov
pop
sub
lods
sub
lret
cld
or
in
xchg
adc
sbb
mov
sbb
push
test
jne
repnz
ret
jle
or
pop
and
inc
sahf
mov
stos
pop
and
or
imul
es
dec
push
in
mov
ljmp
leave
inc
jg
sar
xchg
addb
xchg
test
cmp
jecxz
fldenv
dec
ret
rorl
aad
adc
into
pop
sbb
movsl
shlb
push
push
mov
push
mov
and
inc
mov
dec
stc
push
push
sbb
jno
adc
fnstenv
mov
call
dec
push
xor
repnz
in
pushf
xchg
sub
push
repnz
mov
add
mov
jne
cmp
adc
andb
lcall
cwtl
add
push
rorl
sub
mov
inc
sbb
call
mov
lds
add
mov
add
jecxz
mov
stos
cmp
sbb
xor
mov
cli
xor
jmp
out
lods
test
roll
mov
test
int3
jbe
xor
iret
and
xchg
loop
sub
adc
mov
cwtl
inc
daa
xchg
xchg
push
dec
das
push
mov
icebp
cmc
mov
ja
inc
and
cltd
push
dec
mov
xchg
cli
aaa
es
mov
inc
imul
sbb
mov
outsl
mov
icebp
jno
int
pop
sbb
xor
popa
dec
fistl
mov
sub
add
pop
aaa
adc
xchg
cmp
push
inc
out
add
jno
jnp
adc
pusha
int3
imul
inc
insl
pusha
mov
mov
imul
mov
add
adc
xchg
push
pushf
cmpsb
scas
cmp
push
rcrb
sub
inc
aas
repz
xchg
in
xchg
cld
aaa
lahf
das
mov
in
xchg
ss
aam
and
iret
push
fistpll
sub
inc
pop
rolb
or
gs
test
jmp
lahf
and
nop
push
or
adc
inc
lret
push
in
mov
rorb
or
cmp
lds
jl
mov
shll
cmp
pusha
xor
inc
call
push
in
in
mov
pushf
xlat
inc
push
sahf
xlat
lcall
and
pop
jp
mov
data16
addr16
rolb
dec
and
adc
mov
in
out
enter
sar
gs
pop
add
dec
cmp
inc
push
aam
gs
repnz
xchg
and
or
sbb
pushf
popa
cmc
mov
divb
sbb
inc
scas
lock
test
clc
push
cmpsb
sbb
dec
xchg
sub
or
ja
mov
mov
jge
ret
cmp
mov
dec
test
pop
sbbl
push
test
xorb
pminsw
pusha
adc
sbb
adc
inc
dec
iret
push
jb
divl
push
ljmp
loop
not
mov
movsl
daa
mov
fs
repnz
mov
sbb
mov
fisttps
and
mov
insl
inc
ljmp
inc
gs
pop
cmp
mov
js
dec
iret
cmp
loopne
pop
jmp
gs
fimuls
aaa
push
jne
pop
inc
sbb
cmpsb
push
pop
push
jo
sbb
xchg
xadd
or
sub
cmp
ficoml
pop
mov
loop
lahf
mov
push
sti
test
sbb
sbb
orb
dec
cwtl
cltd
adc
jecxz
cli
repnz
and
xchg
cmp
je
pop
pop
inc
jae
popa
cld
xchg
out
test
mov
adc
repz
cmp
dec
pop
pusha
xchg
xlat
outsl
inc
gs
loopne
mov
movsl
cmp
mov
pop
pop
aad
stos
dec
jae
dec
test
and
rcll
xchg
xchg
lds
mov
cmpsl
jecxz
cmp
pushf
mov
xor
je
sbb
push
lcall
mov
mov
repz
pop
aas
aas
stc
xchg
jb
push
mov
ret
push
push
cmp
push
popa
push
mov
adc
bound
mov
add
pop
inc
jge
lods
mov
mov
and
jo
dec
insb
mov
lret
lcall
in
dec
dec
mov
rcrb
lods
fstps
adc
inc
mov
jmp
xchg
push
jns
pop
xchg
add
or
int
and
add
aad
mov
sub
or
test
movsb
shrl
mov
sub
xchg
jo
xlat
adc
pop
lcall
push
xor
jno
xor
fsubrs
mov
sub
lahf
stc
push
test
ret
mov
hlt
imul
sar
out
pop
xor
cmp
add
scas
xlat
lods
and
bound
mov
mov
xchg
inc
sbb
jne
adc
mov
loope
pop
incb
sti
push
pop
aas
into
cmp
and
push
or
adc
sbb
lock
sbb
jmp
lods
pop
jp
scas
pop
sbb
cli
push
imul
xor
mov
lahf
jne
loopne
mov
ss
sub
xchg
lret
push
popl
push
fbld
mov
xchg
jecxz
add
mov
sbbb
mul
sbb
cltd
mov
sub
inc
jl
jnp
and
lahf
lock
jno
mov
dec
mov
fmul
ljmp
imul
jecxz
xchg
popa
xchg
sbb
inc
push
lods
xor
stos
cmc
mov
xchg
jg
mov
mov
lea
mov
push
fwait
pop
addr16
inc
cwtl
mov
fiaddl
ljmp
sti
or
or
jge
dec
fdivl
jo
jnp
mov
sub
outsl
sbb
inc
mov
jmp
loopne
inc
ljmp
imul
mov
stos
dec
jns
lcall
adc
push
mov
jae
fldenv
mov
or
mov
dec
ds
sbb
aaa
dec
imul
jae
fwait
add
int
xlat
pusha
aas
and
out
pop
pop
icebp
push
pushf
repnz
lock
in
xchg
fldt
or
add
dec
stos
jecxz
pop
jecxz
pop
bound
mov
repnz
test
cmp
dec
pop
xor
lcall
pop
sub
mov
cmp
jmp
push
xor
or
or
xchg
pop
push
pop
jo
and
dec
sbb
and
movsb
lods
cmp
fwait
lods
loope
mov
adc
or
pop
dec
inc
sub
xchg
push
jo
adc
jg
push
jno
test
orb
adc
jmp
add
mov
stos
adc
dec
or
cmpsb
shl
mov
test
mov
xor
mov
xchg
lahf
xchg
sub
fsts
push
push
xchg
pop
outsl
int
xchg
ja
mov
clc
hlt
imul
call
jns
cltd
roll
inc
fsubrl
hlt
cmp
adc
pop
jno
hlt
sub
nop
nop
test
test
in
psadbw
pushf
xchg
daa
xor
cmpsl
rcl
das
or
cwtl
adc
lret
mov
in
outsl
out
sbb
test
or
add
mov
or
jmp
push
and
inc
sbb
insb
out
sbb
mov
jmp
sbb
and
mov
push
mov
mov
sarl
jecxz
adc
add
bound
lods
jno
outsb
stc
movsb
adcb
adc
jns
mov
cmp
dec
movl
ljmp
pop
mov
dec
loopne
inc
adc
cmpl
imul
sbb
ljmp
fcoml
sbb
rcr
jnp
les
pusha
in
sti
mov
aaa
mov
test
movsb
xorl
cmc
add
into
cmp
cmpsl
pop
nopl
cmp
je
fisubrs
out
sbb
adc
sub
xor
imull
mov
out
sbb
adc
arpl
lahf
sub
lods
mov
jl
inc
mov
pop
add
movsl
jge
mov
mov
mov
xchg
sub
insb
loop
iretw
and
xchg
fimuls
push
jmp
add
fwait
push
pop
cwtl
mov
pop
inc
jge
or
xchg
cltd
fisubrl
push
mov
test
movsl
repz
sub
jle
mov
popf
pusha
dec
cs
xor
ret
enter
jb
or
rcll
cmp
adc
jae
push
cmp
data16
push
lods
pop
sbb
test
mov
push
pop
out
dec
push
push
push
lcall
cmpsl
jl
or
in
pusha
adc
xchg
test
xor
jge
sub
and
fwait
lds
sub
and
addr16
push
incl
aam
rcll
shrb
daa
pop
jmp
mov
es
in
pop
sarb
test
lret
or
ret
jecxz
adc
pusha
sub
les
shrb
int3
mov
lock
ds
sahf
mov
xor
outsb
cmpsb
daa
es
pminsw
cmp
test
pop
xchg
adc
call
loop
imul
sub
fldl2e
pop
iret
and
repnz
jp
jno
fs
sbbl
es
aad
into
ds
inc
ja
out
sbb
aas
sub
or
daa
push
and
push
arpl
lret
sbb
jge
nop
or
push
add
fistps
push
or
andl
mov
outsl
clc
xor
test
mov
jge
stos
rol
mov
outsl
xchg
insl
sub
dec
int3
fidivrs
mov
mov
or
imul
ss
cmp
xchg
es
adc
shll
test
incl
lret
mov
and
cmpsb
inc
cmp
adcl
jbe
mov
pop
lret
mov
sub
mov
add
shl
push
jle
imul
andb
mov
xchg
add
push
pop
push
test
loop
mov
popf
adc
xor
xchg
cmc
inc
pop
outsl
test
inc
outsb
jmp
xchg
add
ret
cs
movsl
mov
mov
sbb
mov
mov
dec
add
adc
mov
sub
mov
mov
cwtl
pop
push
mov
xchg
sub
xor
aam
fidivs
fcomps
cld
xchg
faddp
push
jle
orb
test
aas
clc
shlb
movsl
in
xchg
push
and
rdtsc
out
subb
pop
mov
pop
popf
add
mov
sub
sub
testb
outsb
mov
cmpsl
andl
add
in
or
imul
xchg
popa
dec
enter
jne
add
mov
mov
xlat
roll
insb
out
mov
cmp
add
inc
xchg
add
addr16
push
les
ljmp
or
adc
xorb
fcomi
add
xchg
dec
pop
pushf
cltd
mov
mov
nop
inc
mov
mov
pop
jl
xchg
dec
or
dec
int
mov
orl
in
sti
filds
mov
scas
or
jo
add
or
ds
adc
out
or
lods
push
adc
mov
jecxz
push
mov
mov
jg
out
jl
xchg
popa
and
stos
mov
dec
es
jbe
pop
mov
lods
push
cli
mov
sarl
fdivp
mov
mov
push
mov
sub
mov
mov
mov
outsb
lret
pop
test
dec
cli
inc
das
sarb
jg
lods
enter
ljmp
xchg
xchg
stos
dec
mov
gs
loope
std
xor
push
adc
xor
mov
sub
lcall
push
dec
mov
dec
jbe
decb
hlt
fld
add
ss
push
jecxz
mov
rol
or
xadd
cmc
or
xlat
adc
jnp
gs
pop
push
movsl
in
jg
jb
fldt
mov
push
scas
mov
xlat
sbb
cmp
push
jecxz
cmpsl
into
or
addr16
les
add
in
arpl
push
add
lods
shlb
std
cmp
imul
rorb
jb
movsl
mov
sbbb
addl
xchg
leave
adc
cmp
or
jno
int
adc
testl
ret
fiaddl
popa
xchg
inc
and
imul
mov
push
loope
hlt
adc
pusha
sbb
xor
and
sbb
sarb
lods
mov
add
pop
mov
ljmp
jg
mov
out
rorb
clc
ja
jbe,pn
daa
dec
movsb
cltd
cltd
cwtl
xchg
mov
or
mov
test
test
sbb
andb
rorl
and
xchg
mov
repz
imul
f2xm1
and
xchg
dec
pop
xchg
aam
ret
sbb
into
popf
arpl
inc
dec
mov
int3
mov
add
mov
pusha
cmpsl
jno
repnz
lret
mov
adc
or
mov
imulb
or
xchg
insl
dec
mov
inc
aam
cwtl
les
sub
test
or
dec
loopne
dec
xchg
mov
ret
inc
push
mov
sahf
lcall
cmp
gs
fstl
inc
test
pushf
fidivrl
icebp
hlt
xchg
xchg
push
hlt
in
sbb
jge
xchg
fildl
mov
jb
dec
daa
test
subl
mov
push
jns
mov
jge
pusha
in
addl
pop
ficomps
lahf
jbe
and
add
mov
shrb
dec
dec
and
add
mov
jo
jns
cwtl
xchg
fistl
and
mov
mov
cld
stc
pushf
fisttpl
xchg
das
pop
outsb
out
sarb
pop
cltd
arpl
ret
xor
inc
mov
add
in
sub
xchg
mov
lea
jne
rol
dec
mov
pop
pop
ret
pop
add
or
fiadds
inc
sbb
mov
in
xor
fwait
xlat
in
aam
test
aaa
and
out
inc
sbb
mov
frndint
xor
pop
jge
imul
rolb
xchg
data16
cwtl
es
dec
arpl
sbb
cmpsb
out
dec
xchg
mov
addb
outsl
inc
repz
pop
push
mov
lds
mov
lret
adc
push
hlt
daa
mov
xchg
lret
inc
loopne
sub
dec
mov
es
imul
shlb
jb
sbb
icebp
test
xor
push
sbb
xchg
stos
movsl
sbb
mov
add
pusha
rcr
sbb
lea
test
stos
inc
inc
lods
and
cmpsl
mov
sti
int
scas
leave
sub
iret
fmuls
xchg
movsb
inc
aad
lahf
pop
fwait
add
mov
lret
les
subl
cmp
lods
in
dec
sub
add
pop
xchg
xchg
sbb
sub
sub
add
ret
and
push
cmp
adc
outsl
les
mov
hlt
adc
sbbb
xchg
add
aas
sub
sub
loopne
push
jmp
mov
imul
adc
jns
shrl
sub
fnsave
inc
shlb
in
test
add
repnz
dec
jmp
ss
mov
add
adc
test
in
pop
outsb
or
add
icebp
sti
aam
shrl
pop
aad
xor
adc
inc
in
add
and
pop
les
xor
mov
push
ret
outsl
mov
dec
push
jg
test
ret
jae
rcll
sbb
sahf
add
add
in
lds
negb
sahf
int
push
out
das
mov
int3
lods
fcomi
out
imul
nop
jns
jne
movsl
rol
popf
es
add
faddp
xchg
mov
add
in
mov
rclb
cmp
cmp
cwtl
push
xchg
xor
call
test
addr16
outsb
jbe
and
mov
sub
cli
or
out
loope
fsts
testb
popa
shrb
icebp
jg
mov
inc
dec
test
fisttpll
ds
insl
adcl
push
incl
dec
adc
idivl
test
jb
fwait
ja
cld
sahf
sbb
push
cmp
and
outsb
pop
add
iret
icebp
aad
ret
nop
int
mov
adcl
imul
xor
into
dec
iret
inc
out
mov
and
popa
push
aaa
mov
pop
lcall
arpl
cmp
sbb
add
cmp
jp
test
xor
push
jge
jne
cltd
daa
sbb
and
push
sub
popf
inc
cmpxchg
adc
push
enter
fsubrs
adc
dec
push
enter
or
cltd
sub
mov
int
sbb
and
scas
cmp
ljmp
cmp
stos
push
pop
cmpsb
push
jbe
cmp
das
and
add
mov
div
repnz
clc
je
mov
mov
and
push
fidivl
mov
mov
outsl
inc
mov
jo
lcall
fcomp
iret
cli
imul
jae
pusha
inc
add
xchg
fwait
pop
aad
push
fstpt
cmpsb
add
ja
loop
ljmp
mov
negb
iret
mov
sbb
iret
dec
jnp
push
addr16
lea
mov
subl
push
xor
sub
push
daa
jb
popa
or
fsubl
jge
jp
sbb
add
inc
insb
jle
or
out
mov
mov
xchg
in
aad
out
inc
xchg
cmp
mov
sub
xchg
rorb
add
xchg
insb
icebp
sub
imul
sbb
arpl
or
fcmovbe
or
test
push
in
lods
add
fldl
shlb
xchg
lcall
sbb
fsubs
cli
cmp
sbb
outsl
jo
mov
xchg
ss
out
and
inc
mov
cwtl
jb
pop
dec
sbb
jmp
pop
xchg
hlt
cmpsb
pushf
lock
mov
push
pop
bound
adc
imul
xor
adc
add
fcmovb
inc
push
dec
cmpsl
jbe
mov
ljmp
dec
mov
and
pop
int3
cwtl
add
push
push
push
fsubl
push
enter
dec
xor
ja
insb
cmp
xchg
dec
cmp
fiadds
inc
mov
jmp
mov
outsb
imul
fnstcw
inc
pop
scas
pop
xchg
pushf
movsl
fdivs
sub
lods
add
push
in
decb
xlat
xor
das
jp
cli
fdivrp
movsb
repz
push
inc
push
cli
in
out
addl
xor
frstor
fiaddl
fsubrl
mov
inc
xchg
in
mov
je
dec
or
sti
pop
test
sub
sub
lods
into
scas
jb
sub
mov
cwtl
gs
hlt
mov
lcall
pop
cmp
roll
mov
test
cwtl
mov
cmp
push
jmp
fsubrl
enter
incb
add
push
xor
cmp
in
xchg
pusha
jg
sbb
push
push
ss
aam
and
adc
cmp
imul
or
dec
test
pop
push
in
xchg
scas
mov
ret
das
and
loopne
sbb
pop
rcrb
or
push
imul
push
and
adc
rcrb
enter
bound
rorl
mov
lret
fidivrl
rolb
xchg
shl
inc
ja
mov
inc
ret
mov
aas
pop
out
jecxz
push
adc
loop
jo
jnp
jae
push
out
int
push
jne
pusha
adc
jp
leave
ss
lds
mov
and
loopne
inc
lea
outsb
aad
xor
shl
pusha
lret
iret
xchg
shlb
or
outsl
jnp
stos
adc
fistps
mov
enter
subb
or
ljmp
xor
clc
cmp
sub
je
mov
jmp
cmpl
lahf
mov
mov
fwait
mov
or
rorl
xor
sub
or
add
xor
sbbl
cmp
lods
cmpsb
cmpsb
adcb
add
sbb
cmp
mov
cmp
mov
xor
push
pop
and
lcall
ret
stos
cmp
push
stc
mov
ds
test
jg
aam
outsb
jecxz
dec
or
xchg
pop
ja
int3
sbb
mov
mov
test
pusha
mov
fsubs
aaa
mov
mov
aaa
in
inc
das
cmp
cmc
and
movsb
aaa
mov
push
pop
push
add
inc
xchg
push
inc
pushf
jb
xchg
stc
cmp
sub
je
in
jg
test
repz
pop
cmp
pop
stos
sbb
xchg
and
push
in
xor
subb
js
jo
cltd
cmpsl
test
add
lcall
ret
cmp
sbb
imul
add
sub
lret
shl
nopl
or
outsb
pop
das
inc
cmc
push
inc
cmp
mov
jl
xor
int
push
aad
mov
cmc
nop
jl
push
stos
mov
xchg
outsl
movsb
cltd
push
sub
xchg
xor
adc
jge
adc
fidivrs
xlat
fiaddl
push
loopne
pushw
push
jb
sbb
mov
mov
push
lock
icebp
clc
es
sub
dec
aaa
jge
addl
adc
into
and
xchg
mov
enter
aas
dec
int3
cmpsb
cld
in
in
fsubl
test
add
add
imul
and
or
es
sbb
shll
ss
je
sbb
pop
mov
adc
push
fdivrs
icebp
pop
jo
adc
sub
dec
xchg
ds
dec
popa
xorb
fstps
sbb
or
clc
push
sbb
mov
aas
mov
std
and
ret
test
lret
in
push
pop
xchg
mov
or
xorl
and
imul
adc
ficompl
into
bound
inc
aam
bound
shlb
enter
stc
or
and
inc
or
sub
in
lds
xor
mov
subl
scas
mov
adc
xchg
out
das
sub
xor
mov
xor
inc
scas
popa
pop
out
mov
xor
mov
push
sbb
jo
push
sbb
cmc
call
or
cmp
fisttps
imull
jb
inc
inc
daa
scas
sbb
out
pop
int3
and
roll
scas
loopne
jmp
out
out
jae
rorb
sub
jo
lret
out
mov
fwait
adc
negl
pop
cld
mov
into
int3
or
pusha
mov
fsubl
mov
push
fistpll
gs
ret
pop
cmp
fwait
lcall
ret
popa
push
js
xor
sbb
push
sub
jp
in
xchg
js
mov
das
pusha
add
ljmp
jecxz
mov
insl
movsl
pusha
movsl
icebp
das
out
cmpsb
push
sbb
mov
btsl
fistpl
test
and
jne
or
shll
xchg
xor
pop
loopne
mov
rol
popa
sub
movb
jle
jl
inc
mov
or
and
fidivl
mov
lret
mov
clc
call
cmp
imul
mov
add
jns
add
fdivr
pop
push
xchg
xor
xlat
repnz
icebp
dec
insl
nop
out
and
mov
lret
or
imul
or
aad
add
rolb
ja
add
popa
mov
jnp
jns
out
jle
out
out
mov
lods
push
lcall
shll
and
rcll
daa
in
or
jne
xchg
or
mov
xchg
mov
add
dec
test
imul
sbb
in
mov
pop
addb
adc
adc
mov
push
gs
movsb
imul
push
or
jb
fiaddl
fcom
enter
in
sub
inc
out
pop
push
leave
leave
xchg
cs
mov
ljmp
fidivrs
cli
sbb
mov
cmp
mov
test
fcomps
mov
sub
dec
icebp
jns
testb
mov
adc
std
mov
inc
mov
and
fwait
xlat
dec
fnsave
push
aas
push
mov
mov
out
scas
add
data16
pushf
arpl
movsb
nop
js
loope
xor
movsb
mov
dec
outsl
push
cltd
push
push
mov
nop
rcl
mov
sub
loope
mov
sbb
iret
rcll
js
jp
les
push
clc
shr
dec
inc
adc
sahf
xchg
sbb
or
push
jns
into
rcr
fisttpll
jecxz
scas
jne
stc
sub
addr16
out
fcmovnbe
dec
leave
mov
nop
pop
aaa
pop
setp
inc
insb
pop
popl
cld
push
jg
lods
cmp
push
jp
mov
pop
iret
ss
ss
dec
sti
jecxz
in
mov
ljmp
sahf
jecxz
inc
sub
cmp
int
xor
rclb
jl
mov
test
jecxz
repz
xchg
mov
inc
xchg
push
bound
enter
in
pop
mov
inc
inc
mov
push
stc
and
psubw
push
mov
cli
shlb
repnz
adcb
dec
push
shll
mov
aam
notl
stos
inc
xchg
mov
jmp
lea
ljmp
idivb
andl
repnz
sub
outsb
pop
in
pop
xchg
and
ss
fnsave
imull
pop
inc
mov
jp
shrb
dec
cltd
add
xorl
sbb
jl
in
scas
cltd
out
jmp
fistps
adc
out
les
fldenv
jne
stos
adcl
cmp
pop
outsl
movsl
sub
dec
pop
mov
or
xchg
sub
lea
in
lea
add
movsb
nop
call
testb
push
xchg
mov
fimull
out
cmp
sub
movsb
dec
icebp
and
stos
inc
mov
jae
inc
mov
push
aaa
sub
add
into
cs
in
push
lret
cwtl
mov
pop
cwtl
fisttpll
lock
jb
add
in
rorb
lds
push
vmovntps
fs
mov
sbb
test
push
push
ret
insl
bound
rcrb
cmp
mov
push
scas
push
pusha
and
stc
cld
or
jae
adc
in
sub
mov
add
out
scas
push
cmp
mov
lea
cmp
lea
rol
add
pop
stos
sarl
addb
popf
leave
push
movl
leave
push
cwtl
lahf
push
dec
xchg
dec
sbb
mov
and
inc
imul
ret
stc
inc
sbb
jae
in
mov
mov
adc
rorl
mov
cmp
pushf
adc
adc
mov
mov
lcall
cld
push
lds
fsubrs
pop
push
lea
sbb
and
rcr
movsb
inc
testb
pop
data16
hlt
sub
cmc
outsl
pop
in
xlat
out
xor
js
fldenv
mov
pop
push
mov
jle
xor
test
inc
sbb
fwait
xor
insb
and
xchg
out
lds
add
adc
sub
add
popf
insb
dec
or
test
insl
imul
out
aam
cltd
mov
cmp
xor
pop
ja
adcl
xchg
sbb
test
mov
adcl
xor
pop
jl
xor
push
leave
cmp
add
inc
jmp
cmp
xor
mov
in
dec
test
cmpb
andl
pop
or
xchg
scas
adc
push
xchg
fmul
xor
jge
shrb
inc
out
inc
loop
push
movsl
push
inc
ja
push
and
leave
lret
lods
push
aam
xlat
lcall
ret
cld
into
in
pop
mov
jmp
cld
jno
es
xor
jg
jg
fistpll
outsl
push
outsl
add
fisubrl
sub
in
addb
daa
xchg
mov
jae
jge
sbb
mov
sbb
dec
lds
sar
jle
dec
arpl
mov
fwait
dec
jb
sbb
xor
mov
out
shl
inc
xchg
cmp
orl
jg
popa
subl
xor
mul
sti
cmp
ret
adc
xchg
mov
loope
test
push
mov
mov
cmp
inc
leave
xchg
cmp
inc
push
push
mov
push
xchg
addr16
dec
push
jae
hlt
mov
xchg
xchg
adc
xlat
adc
incl
out
gs
sti
test
mov
inc
movsb
cvtps2pd
movsl
mov
cmc
cmp
rolb
ss
push
jo
addl
ror
stos
loop
dec
cmc
push
jmp
imul
inc
daa
cmp
loopne
pop
push
jne
mov
dec
fsubrs
daa
mov
aad
lods
inc
jge
sbb
std
pop
outsl
mov
out
push
sub
cmp
mov
repz
call
aam
fldt
je
adc
sub
jo
sub
jg
cmp
dec
lret
pushf
mov
in
inc
pop
andl
negb
daa
out
nop
into
xchg
cmp
test
adc
leave
xchg
adc
addr16
clc
jae
fwait
or
add
mov
cmpsl
sbb
das
lds
ret
push
and
cmp
insl
insb
shll
rclb
stc
int3
pop
inc
mov
aam
cmpsb
jno
jo
push
aam
inc
xor
test
shll
and
fistl
mov
pop
adc
or
scas
mov
push
mov
js
mov
mov
xchg
mov
out
outsl
xchg
mul
loopne
arpl
out
icebp
adc
fcmovnbe
jmp
lds
inc
xchg
aaa
push
pop
inc
push
xchg
out
jge
push
adcb
add
pop
testb
jb,pn
ljmp
jo
test
call
loopne
push
xor
sbb
xchg
imul
add
adc
cmp
or
fidivs
push
mov
pop
mov
dec
mov
xor
or
clc
cmc
fildll
out
mov
jle
xchg
push
imul
sbb
mov
cmp
cmpsb
lahf
addr16
repz
mov
adc
int
loope
jmp
sbb
pusha
sub
adc
aaa
test
mov
and
repz
mov
out
dec
or
adc
cmp
jl
xor
jbe
xchg
cs
sbb
xor
sub
and
rcll
mov
sti
mov
mull
dec
pop
ds
leave
subl
in
sbb
test
icebp
or
pop
inc
shll
dec
mov
mov
loope
or
and
pusha
sub
or
gs
xchg
mov
xor
into
jg
aas
into
loope
popf
out
stos
nop
fldenv
jmp
adc
pop
stos
lahf
xchg
inc
sbbl
clc
xor
mov
push
pop
sub
inc
xlat
mov
xchg
cltd
scas
cwtl
lods
les
xchg
dec
addb
pop
adc
pop
mov
fwait
lcall
sbb
pop
gs
fwait
push
jle
push
rorl
shlb
aam
jge
pop
mov
testl
daa
lret
testb
ret
lods
imul
push
icebp
bound
push
mov
xchg
mov
push
cmpsb
inc
xor
sbb
lods
rclb
inc
lret
popa
shll
push
mov
push
loopne
jl
inc
cmp
pop
push
inc
mov
cltd
cli
mov
int
xor
and
scas
jne
mov
mov
iret
jge
xchg
aaa
into
jp
mov
dec
roll
mov
jo
int3
daa
ror
pop
in
pop
jecxz
cmp
test
shlb
rcrb
int3
lds
fcomi
subl
pusha
dec
mov
dec
dec
cmpb
and
add
nop
sbb
dec
jb
xchg
jl
adc
imul
lock
pop
inc
es
int3
addr16
sub
out
ljmp
jecxz
mov
fs
jle
sbb
and
pop
je
out
jae
fsub
xchg
fdivl
xor
movsb
pop
sbb
imul
ret
xchg
add
mov
xchg
mov
lock
mov
mov
pusha
xchg
cmpsb
dec
sbb
es
xor
jecxz
int3
insl
pop
push
pop
push
clc
cltd
repz
clc
in
inc
xor
mov
push
cs
shrl
xchg
in
mov
add
loopne
lods
xchg
sub
xchg
jno
les
lahf
sets
dec
push
mov
fbld
jl
sbb
adc
mov
cmc
or
aaa
mov
addr16
in
aam
rolb
jno
scas
shlb
leave
les
pop
lret
movsb
cmp
int
mov
movsb
xlat
add
mov
sbbb
lcall
add
cld
push
jl
loop
adcl
xor
clc
jl
pop
mov
lock
inc
inc
xchg
stos
inc
or
cmp
test
mov
sbb
mov
inc
ret
mov
pop
pop
pop
movsb
push
push
aaa
jecxz
xorl
test
rorl
xlat
mov
in
icebp
out
push
cmpsl
or
pop
ficoml
mov
daa
dec
inc
xor
jo
imul
sub
push
pop
mov
iret
mov
mov
stos
xchg
pop
clc
sub
gs
sbb
dec
cmp
les
fcomps
js
pusha
outsb
dec
mov
cli
daa
push
cli
fs
fmul
pop
pop
nop
mov
jecxz
adc
pop
dec
ret
cmp
shrb
lahf
insl
stos
mov
dec
dec
sub
inc
call
negb
in
mov
jae
dec
mov
mov
aaa
sbbl
movsb
nop
aaa
je
idivl
add
movsb
mov
or
pop
sub
subb
aam
popa
sbb
in
or
dec
iret
mov
sahf
mov
push
int3
xchg
imul
mov
mov
in
pop
xor
adc
cmp
xor
ds
or
nop
loopne
or
enter
sub
cld
push
fstl
add
mov
push
push
dec
dec
mov
cmp
and
dec
mull
and
test
add
stc
divps
out
mov
dec
cmp
lods
lea
dec
lea
pop
sahf
jp
insb
into
adc
imul
das
popf
xorl
cmpsl
and
aad
cld
shlb
push
mov
cmp
pop
ret
fnstenv
popf
push
cmp
loop
mov
and
inc
movsl
data16
int
nop
cmp
cmp
mov
push
out
and
shlb
lock
push
xchg
aam
adc
hlt
into
xlat
idivb
push
das
out
jne
mov
and
divb
rcll
iret
jbe
imul
xchg
lods
dec
add
sub
scas
mov
push
push
jle
ret
insb
sub
imul
push
add
push
xchg
fidivs
push
lods
negl
movsl
out
loopne
cltd
divl
fistpll
add
hlt
pop
cmpsl
inc
popf
xchg
mov
mov
pop
adc
add
fisttpl
xchg
fisubs
jle
data16
in
test
xor
imul
popf
ret
mov
add
add
orl
mov
icebp
mov
lahf
jbe
rorb
sub
in
aas
xor
cmp
fisttpll
lods
das
cs
pop
inc
mov
and
lods
mov
rcr
lret
pop
cmp
imul
mov
push
bound
inc
hlt
arpl
cmp
xor
out
mov
mov
mov
mov
hlt
aaa
jne
cli
call
mov
pop
jecxz
cmpsb
xchg
pop
sbb
dec
adc
add
nop
daa
jmp
dec
and
lods
addb
or
inc
movsl
jns
dec
mov
or
repnz
aam
mov
aad
cli
repnz
xor
dec
movsl
mov
xor
sub
lock
push
or
loopne
lods
inc
dec
int3
dec
mov
pop
es
and
push
insb
iret
imul
adc
adc
clc
and
mov
pop
jns
cltd
push
addb
pop
lds
xor
scas
mov
pop
push
addr16
loope
add
push
or
cmp
popa
pushf
test
or
shlb
push
into
cld
pop
dec
lock
cli
dec
push
cmp
aas
insb
xor
popf
stc
add
dec
add
or
pop
xchg
pop
sub
mov
test
lods
or
out
lret
cli
testl
int
scas
ret
xchg
lock
outsl
lods
cmpsb
ret
pop
and
cmpb
inc
add
mov
icebp
dec
cmp
leave
ja
push
pop
push
push
outsb
inc
sbb
loop
in
and
nop
cmp
mov
ds
jmp
aaa
mov
repnz
inc
or
roll
gs
outsb
sar
cli
inc
and
popf
std
sub
xchg
repz
dec
in
xchg
in
mov
or
inc
sbb
or
aas
cwtl
frstor
mov
or
insb
sbb
fstpl
out
jbe
std
jle
ret
movsb
aaa
stos
adc
neg
sub
or
jae
jae
mov
data16
out
flds
aaa
bound
and
aad
add
stos
stos
in
loope
insl
movsb
push
push
gs
push
outsl
fbstp
inc
xchg
jns
or
pop
lret
filds
sbb
daa
rorb
scas
xlat
outsl
in
push
cmpsb
fwait
push
jl
jno
inc
movsb
leave
push
fs
cwtl
mov
push
add
sbb
icebp
mov
dec
data16
push
mov
data16
lods
loope
jne
inc
or
iret
fsubr
inc
cmp
cs
sarl
insb
push
add
mov
nop
ficomps
in
and
mov
cltd
mov
fiaddl
icebp
out
push
test
xchg
xchg
test
sbb
ljmp
adc
push
mov
dec
adc
mov
pop
in
outsl
adc
mov
repz
cmc
pop
movsl
lods
ljmp
push
es
pop
inc
stos
shlb
dec
adc
call
incb
mov
add
aad
cmp
shll
xchg
stos
icebp
nop
or
push
jecxz
fs
daa
mov
cmpsl
jbe
les
sbb
dec
cmp
mov
push
push
insb
inc
mov
loop
movsb
and
stos
fnsave
out
xchg
or
and
push
inc
and
xlat
in
mov
cld
adc
dec
xchg
push
xchg
shll
sbb
arpl
cmpb
push
add
mov
add
outsl
mov
lds
pop
js
push
addb
sub
cmp
mulb
xchg
or
adc
sti
jmp
adc
test
jne
pop
negb
fwait
sub
mov
push
sbb
dec
pop
fcomps
xchg
and
ss
clc
xchg
add
add
xorb
add
lcall
mov
pop
push
pop
push
add
inc
test
rorl
movl
xchg
fucomip
sub
add
leave
pop
shrb
nop
popa
xchg
movsl
or
mov
call
pop
pop
xor
sub
mov
or
mov
rolb
push
stos
lock
cltd
or
lods
out
fs
imul
lcall
cs
pop
mov
sbb
fwait
add
mov
in
cmpsl
push
rcll
fsubl
pop
outsb
iret
push
mov
out
push
pop
aaa
shl
ja
inc
cwtl
in
push
or
lods
insb
jge
ret
xor
inc
jle
popa
inc
add
or
cmp
in
test
dec
cmp
imul
cltd
jecxz
shl
mov
inc
mov
inc
jp
mov
fs
pop
push
fstl
fistpl
cmp
mov
jns
jecxz
insb
push
push
sub
popf
jle
cmovne
mov
fldenv
js
addr16
inc
mov
cmp
mov
popa
dec
adc
push
mov
mov
lock
sti
mov
jmp
push
jno
dec
gs
mov
in
mov
bound
xchg
fisubl
or
lea
and
xor
lods
sub
ds
repnz
insl
gs
fcomps
loopne
push
jge
adc
cmp
cmpxchg
adc
push
dec
push
iret
xchg
insl
popf
cmpsl
add
subl
mov
push
push
icebp
add
mov
pop
sbb
loopne
adc
pop
add
and
fs
mov
movsl
jecxz
push
push
addr16
aas
or
movsl
adc
int
add
lcall
pop
das
add
jmp
push
xchg
pop
lret
icebp
push
mov
jp
push
enter
insb
inc
push
xor
dec
fistl
xchg
cmp
clc
mov
fsubl
cmpsb
jno
cmp
insl
push
xor
cltd
test
hlt
xchg
jns
movsb
cmp
sub
out
xchg
and
push
dec
popf
fldl
iret
and
das
and
test
jo
inc
std
repnz
dec
rcrb
add
mov
mov
push
jnp
and
mov
test
add
mov
mov
xchg
cmp
mov
aaa
and
mov
xchg
in
mov
pop
inc
repnz
dec
psllq
cmp
je
scas
dec
imul
push
inc
inc
add
sti
lea
push
inc
je
hlt
jmp
add
jb
jle
inc
push
imul
cld
cmp
or
flds
cmpsb
arpl
sahf
mov
mov
mov
sub
add
pop
sti
scas
push
pop
addr16
add
imul
mov
push
jge
fistpl
push
int3
jl
stos
sbb
rolb
cltd
loop
push
pop
aad
mov
int
in
insb
pop
jmp
test
jecxz
bound
pusha
xor
xchg
pop
inc
cmpsb
sub
aam
ja
pop
or
aas
and
das
mov
jl
or
pop
dec
jnp
sti
dec
decl
mov
jl
loop
push
inc
inc
inc
rcrl
inc
sbb
jae
arpl
rcr
mov
sub
pop
push
inc
movsl
cli
lock
fs
dec
push
ret
inc
jge
dec
sahf
jge
cmp
es
cltd
cmp
pop
lret
mov
rolb
ret
push
and
sub
jb
sbb
and
dec
fcmovnbe
jns
push
fcomi
mov
fnsave
xor
jge
sbb
fimull
fadds
jbe
xor
cmpsl
rcr
rorl
in
cmp
add
sbb
xor
push
sbb
insb
jmp
dec
push
dec
adc
and
add
dec
mov
insl
jmp
es
mov
xchg
mov
aad
inc
xchg
mov
mov
jb
das
inc
cwtl
imul
iret
jecxz
add
adc
mov
lods
loopne
or
insb
repnz
sti
push
popf
rcr
test
mov
push
insl
ret
cwtl
and
addr16
cmp
cmpsb
roll
dec
sub
push
hlt
push
cmp
stos
fsubs
shrb
push
in
or
push
dec
sub
jne
mov
ficompl
xchg
lods
dec
fadds
add
adc
cmp
mov
fmuls
add
xchg
mov
mov
test
sbb
inc
pop
in
out
sub
pop
scas
int3
and
cmp
add
push
lods
sar
dec
das
fisttpll
test
fs
cwtl
insl
test
movsl
insl
scas
outsl
scas
int3
fdivrs
cld
cmpl
pop
push
xor
icebp
mov
mov
cli
sbb
lock
flds
jp
sbb
aaa
call
mov
mov
test
outsl
sub
cmp
pusha
ja
sub
xor
adc
pusha
dec
popf
or
lcall
xor
pop
mov
inc
xlat
popa
lds
and
ljmp
jecxz
push
dec
xchg
add
cs
sub
adcl
dec
ret
jno
pop
stos
add
fsubl
mov
in
xchg
aam
mov
xor
lock
in
stos
adc
int3
lcall
lock
inc
dec
sbb
je
xor
mov
inc
icebp
mov
icebp
lret
out
aad
fiadds
add
pop
cmp
inc
js
add
cmc
sub
arpl
cmpsl
sub
insl
mov
push
mov
push
cwtl
adc
add
sti
or
mov
xor
ret
push
roll
add
in
lahf
dec
cli
dec
call
inc
aaa
ficompl
sbb
mov
xor
popf
bound
dec
xchg
push
fdivr
hlt
push
mov
insb
les
xor
lock
xchg
js
gs
add
mov
cmp
dec
test
adc
test
cli
insl
dec
cmpsl
or
rcrl
push
adc
call
in
mov
jb
lea
or
ret
mov
lea
jae
dec
pop
lret
rol
jo
ss
pop
mov
push
clc
mov
mov
out
push
mov
cld
mov
mov
inc
ror
pop
cltd
insb
hlt
addr16
pop
inc
pop
mov
adc
notl
nop
mov
sarb
lds
and
adc
inc
push
dec
test
popl
in
in
jae
cmp
cmp
insb
jl
push
xchg
aaa
push
sub
or
jno
xchg
adc
mov
jo
xor
test
adc
mov
push
cmp
js
mov
adc
and
cmpsl
cmp
xor
cmc
stc
loopne
or
rcl
or
sbb
pop
and
push
sbbb
or
cmp
aaa
push
ljmp
imul
popf
shlb
cmp
pop
rclb
mov
cmc
mov
sahf
aad
add
aam
in
in
stos
lods
mov
jmp
dec
mov
cmpsb
and
popf
scas
outsl
mov
xchg
scas
in
imul
clc
inc
inc
xchg
adc
mov
movl
mov
push
dec
sub
mov
in
cs
cmp
jmp
pop
enter
iret
ud2
pop
push
xchg
mov
popa
hlt
fdiv
int3
mov
xchg
pushl
sub
pushl
fnstsw
lahf
jb
sarl
imull
push
cs
enter
scas
pop
jge
imul
fwait
repnz
sub
fisubrs
push
xor
lret
jge
mov
cmc
rclb
shlb
lock
sub
sub
dec
and
in
or
mov
cmp
mov
test
push
test
add
lock
aas
test
add
xchg
imul
rcll
in
pop
lock
imul
jmp
add
stos
in
in
or
adc
cmp
jl
rcrl
dec
cmpsb
cli
out
jle
mov
xor
lods
lods
adc
aam
outsl
sub
sbb
inc
data16
jmp
out
in
adc
mov
sub
inc
dec
mov
outsb
pushf
lcall
jl
jp
or
mov
mov
repnz
inc
jmp
jae
subl
sbb
xchg
and
lods
sbb
push
mov
scas
adc
lahf
aaa
in
cmovbe
fcomip
stos
loope
movsb
mov
pop
push
lret
fisttps
cmp
testb
ss
cmp
popf
fwait
adc
int3
or
dec
mov
mov
leave
mov
mov
mov
out
xor
cmp
mov
in
fucomip
cmpsl
inc
add
mull
fisttpll
out
jmp
inc
and
fldenv
sub
cs
call
fstl
aad
xor
push
cmp
inc
aaa
lcall
push
insl
loopne
adc
inc
mov
mov
mov
icebp
cmp
jl
mov
es
xchg
or
push
rol
stos
xor
leave
mov
dec
mov
ret
mov
imul
outsb
inc
scas
and
test
jg
cs
pusha
or
or
out
sub
mov
xchg
push
in
mov
adc
push
xchg
pop
dec
lods
arpl
aam
sbb
adc
jl
push
hlt
hlt
push
xchg
daa
dec
add
ja
or
or
mov
or
ss
movsb
lock
ds
inc
sub
or
out
out
and
sbb
sbb
xor
xor
cmc
loope
ja
stc
das
imul
scas
push
lea
push
xchg
and
cltd
adc
imul
lea
jne
or
push
gs
or
fisttpll
ds
xchg
and
mov
clc
adc
mov
xchg
dec
cmp
testl
adc
jmp
and
in
in
pop
mov
pop
popa
xchg
mov
mov
jbe
xor
out
dec
fwait
mov
mov
mov
shl
inc
pop
stos
pop
inc
inc
fsubl
xor
xor
fwait
outsb
imulb
push
pop
aaa
les
mov
out
pcmpgtd
or
fdivs
jmp
ss
aaa
clc
pop
and
jno
enter
pop
cmp
or
stos
push
xor
ja
lock
lock
sbb
bswap
fs
mov
xor
jne
insb
dec
lods
into
outsl
xor
or
mov
inc
sub
pop
fnstsw
jge
mov
inc
das
xchg
push
lcall
xchg
cmp
dec
push
ret
mov
notb
push
mov
stc
jbe
mov
cmp
push
fcomp
fldenv
cwtl
int
add
lret
lret
jle
pop
and
int
xchg
repz
mov
aaa
cwtl
pop
add
arpl
outsl
hlt
leave
xchg
xor
and
jle
and
adc
sbb
or
push
movsl
sub
aaa
sarb
insb
push
push
scas
fidivl
out
mov
jno
repnz
xor
ljmp
ret
sub
jns
mov
test
add
and
sbb
adc
xor
xlat
pop
pop
or
xchg
std
xor
mov
leave
out
cmp
decb
cltd
jns
inc
iret
fildll
je
cmpb
stc
sub
mov
or
stos
mov
or
sti
mov
add
push
movsb
sahf
out
lods
in
mov
mov
repnz
pop
mov
jle
cmpsb
pop
sbb
mov
mov
push
fcoms
jge
aas
dec
cmp
bound
push
js
call
push
call
cmc
idiv
outsl
add
adc
jo
jge
inc
inc
into
les
insl
push
xlat
jo
adc
mov
pushl
out
mov
aad
xor
movsl
out
and
sub
outsb
xchg
jg
dec
mov
sub
pop
stc
movsb
inc
lcall
pop
inc
push
sub
sbb
jl
loop
inc
cld
push
or
js
icebp
insl
cmp
mov
mov
scas
fs
loopne
add
dec
das
mov
xchg
cmp
lods
cld
jmp
fdivrl
jl
sti
pusha
loop
stos
mov
add
sub
fbld
jge
test
sahf
cmp
mov
jnp
in
lods
out
out
mov
sbb
jbe
addb
addr16
loopne
jae
clc
mov
dec
cmc
pop
jl
xor
jb
dec
xlat
outsb
lret
pop
sub
mov
push
pop
xor
adc
fildll
enter
xchg
pop
sti
cmpsb
imul
and
mov
cmp
std
ds
mov
pop
fdivl
inc
add
dec
inc
rep
add
test
aas
pushf
jle
imul
add
xchg
push
ret
jmp
jnp
cmc
popa
cmpsb
cmp
fs
iret
push
sub
or
mov
cmpsl
mov
jb
mov
icebp
not
push
mov
sub
popa
mov
push
nop
jnp
mov
icebp
sub
jb
movsl
xor
add
mov
jo
popa
cmp
jae
sahf
ret
shrl
lret
ss
jbe
ror
xchg
pop
ret
xchg
filds
push
fcoml
mov
stos
push
cmp
test
adc
repnz
cmp
inc
sbb
add
std
icebp
scas
fcompl
and
cmc
es
mov
cmpb
vmwrite
cmc
push
fwait
cmp
sub
negl
mov
aad
cmpsl
adc
cmp
xchg
je,pn
lock
invd
xor
jl
cwtl
pushf
shrl
cmp
mov
ret
aad
sbb
cmp
mov
add
insl
pusha
push
int3
sbb
mov
pop
add
mov
sbb
in
and
vrsqrtps
or
cmpsb
je
gs
mov
lret
adc
hlt
out
cmp
in
popl
or
or
cld
xor
movsb
add
or
cmpsb
mov
shr
xor
inc
iret
and
shlb
les
ds
cmpsl
adc
and
insb
fnstcw
jns
or
mov
jns
stos
cli
ret
xchg
pushfw
xor
ret
xor
jo
outsb
leave
leave
mov
xchg
mov
push
inc
cmpsb
cld
sbb
fnstcw
mov
mov
pop
shrl
or
daa
push
mov
or
pop
xor
add
add
push
outsl
inc
pop
fcoml
test
xchg
cmp
xor
mov
or
ss
out
xchg
fwait
repz
call
loopne
or
sub
add
aam
jg
clc
xchg
ss
xchg
add
mov
and
inc
pop
add
mov
jo
jge
clc
popa
cltd
cmp
aad
push
sub
fnstenv
cmp
in
push
filds
lods
movsl
inc
push
pop
sub
pop
popf
hlt
pop
decb
jns
in
xor
out
psubsw
ret
jae
je
sub
arpl
subl
dec
cmp
mov
sar
pop
sub
and
pop
test
push
xchg
mov
sub
dec
lods
xor
and
aad
jo
and
in
mov
xchg
sti
inc
fdivp
xor
call
push
push
cmpsl
flds
scas
cmpsl
fidivrl
stos
lea
mov
pop
dec
pushl
push
add
enter
jae
pop
scas
dec
mov
mov
push
push
lods
ds
mov
jmp
dec
dec
mov
lods
rorl
dec
addl
cmp
sbb
sbb
and
mov
jecxz
test
push
cmpsb
push
sbb
mov
fstps
mov
sub
sbb
dec
add
sub
xchg
cmp
aas
imul
pop
push
jns
add
adc
sub
popa
stos
xor
sbb
jno
fstl
dec
pop
xchg
push
mov
or
add
cltd
inc
jmp
fisubrs
daa
in
lahf
push
sahf
addr16
mov
xchg
and
mov
ficomps
adc
adc
js
in
addb
inc
lahf
push
mov
cmpsl
dec
inc
int3
not
daa
mov
dec
scas
ret
pop
loop
aas
dec
aad
in
or
sbb
mov
pop
fsubs
or
pop
and
ret
xchg
loope
mov
add
mov
leave
or
dec
lods
jg
mov
jbe
lcall
push
mulb
adc
hlt
pop
xor
adc
and
popf
insb
push
cmp
into
lods
lahf
add
and
rcrb
sub
inc
mov
fidivrs
aaa
movsb
imul
js
loop
and
mov
ds
jns
sbb
inc
in
in
or
push
jb
sub
mov
fstp
sbb
adc
sbbl
in
sbb
xchg
cwtl
and
stc
inc
jmp
dec
add
in
fcmovu
movsb
adc
int
pop
hlt
mov
and
movsb
and
sbbl
mov
test
fwait
rcr
lods
add
call
setle
mov
mov
subl
mov
aad
sub
enter
jmp
sbb
xor
iret
repz
insl
movsb
push
or
or
adc
or
mov
ror
pop
or
xor
sbb
imul
pop
in
in
cmp
nop
push
cmpb
es
xlat
pop
mov
fildl
sbb
push
repnz
adc
pop
add
mov
lea
pop
jge
icebp
mov
mov
das
xchg
sar
or
pop
sbb
aam
mov
dec
pop
jle
std
pop
repnz
je
dec
or
jns
sub
mov
arpl
loope
inc
out
mov
nop
data16
jo
in
int
mov
sub
out
inc
or
cs
mov
out
cmpsl
and
and
int3
jb
mov
cltd
jno
mov
inc
aam
enter
cmpsb
pop
pop
xor
xchg
sbb
jbe
fcos
push
in
mov
sbb
lock
lock
fs
mov
cltd
adc
jge
sbb
mov
jg
sub
scas
xchg
mov
pusha
mov
inc
pop
jne
lcall
mov
fsubrl
jecxz
dec
mov
in
cmp
lret
ss
pop
loopne
lret
mov
push
or
xor
adc
pop
pop
adc
dec
ljmp
mov
scas
and
add
add
movsb
pop
cmp
aad
pop
mov
out
pop
into
ret
inc
scas
mov
gs
ror
and
shll
xor
aad
lahf
xchg
icebp
cmp
outsl
or
cmp
das
lahf
sahf
and
scas
inc
notb
popa
mov
xchg
inc
in
imul
aam
add
xchg
add
push
ficoml
and
dec
cmp
xchg
js
dec
mov
incb
mov
mov
lea
out
lods
mov
notb
sbb
mov
gs
sbb
cmp
fnstsw
pop
push
adc
cmp
mov
adc
pushf
pop
and
adc
lcall
push
js
sbb
in
nop
dec
mov
xchg
sub
cmp
subb
fs
or
jmp
and
push
mov
add
divb
mov
lods
mov
mov
cmp
insb
mov
icebp
pushf
jmp
fcomp
adc
inc
adc
sub
icebp
xchg
xchg
inc
push
das
mov
or
mov
cs
adc
scas
and
popf
cmp
cmp
pop
cwtl
sbb
inc
push
add
clc
cmp
sbb
mov
xchg
and
add
or
jnp
loopne
pop
add
loope
cwtl
mov
add
cs
in
in
mov
push
or
jmp
xchg
and
dec
jb
push
push
stos
mov
dec
addr16
bound
xor
call
mov
clc
xor
pop
pop
repnz
xchg
cmp
sarb
mov
ds
xchg
out
arpl
add
cmp
je
push
jno
sbb
push
out
lea
cmp
pusha
sar
mov
add
adc
aas
pop
push
mov
or
xor
xor
ss
jp
cmpsb
hlt
stc
icebp
adc
jg
push
pop
xchg
ss
in
data16
jbe
pop
xor
mov
cmp
mov
inc
faddl
lock
lea
sub
repz
arpl
out
testb
push
dec
popf
lea
dec
and
pushf
jae
daa
jle
ret
iret
sub
push
call
sarl
nop
cmp
mov
addb
pop
push
sarb
xchg
cmp
arpl
ljmp
jmp
out
orb
sub
adc
mov
leave
popa
lock
mov
inc
fcmovu
cmp
lods
lea
push
ret
or
jecxz
xchg
xchg
mov
lea
aaa
sbb
movsb
mov
sahf
sbb
pop
sub
pop
aas
dec
in
and
stc
loope
fcmovbe
in
mov
enter
mov
adc
fnsave
mov
and
xor
sti
stos
inc
cmp
jg
shlb
dec
stos
dec
mov
rolb
clc
rcrl
jae
jae
das
push
int
lret
daa
mov
cmpsb
clc
pop
inc
pop
jl
sub
cmp
push
sarb
mov
call
jae
iret
movsb
paddw
and
fs
stos
push
test
stc
loopne
pushf
mov
push
or
outsl
add
cmp
inc
sbb
jo
jns
mov
lock
add
je
stc
imul
jge
sarl
mov
mov
pushf
sti
sbbb
je
jae
fistpl
lret
pop
shlb
xor
push
movsb
icebp
out
ret
pop
out
test
lgs
fsubrs
add
dec
fldl
ret
adc
inc
xchg
nop
jmp
call
mov
or
mov
and
cmpsb
aam
ficompl
ret
mov
stos
mov
inc
mov
cmp
push
sbb
orl
pushf
push
cwtl
jge
cmp
loopne
imul
jno
xchg
testl
cmp
leave
pop
aad
jnp
pop
imul
hlt
push
sbb
or
cmp
mov
ds
add
or
in
out
loopne
loop
fmulp
and
mov
out
fnstenv
cmp
push
mov
cwtl
loop
fbld
sahf
xor
in
sbb
mov
adc
and
mov
push
pop
mov
orb
cmc
std
int3
adc
mov
mov
out
cmp
mov
jge
mov
pop
es
je
mov
pop
outsl
cmp
mov
je
xor
xor
aad
daa
xchg
decl
or
mov
push
pop
xchg
pop
dec
sbb
push
xlat
xchg
mov
cmp
leave
push
push
fdiv
mov
cmp
sub
push
mov
add
fistps
test
mov
fadd
jnp
dec
rorl
sub
mov
xorb
adc
insl
fld
clc
pop
cmp
mov
pushf
or
outsl
mov
int3
pop
xor
pop
inc
lahf
dec
jno
mull
and
out
xor
es
adc
es
sbb
insb
xchg
sti
and
imul
xchg
inc
push
mov
mov
or
xchg
fdivrl
jns
or
ljmp
jg
ja
pushf
fnstcw
dec
bound
outsl
data16
ds
xchg
inc
rclb
aas
and
xlat
dec
dec
lds
jb
ja
sbb
dec
cmp
dec
push
aas
xchg
xchg
shlb
mov
lds
sbb
outsb
clc
mulb
xor
mov
movsb
cli
cmp
aaa
pop
pusha
jo
xchg
cmp
pop
adc
add
cwtl
dec
cli
sarb
lds
dec
rorl
addr16
je
cld
sbb
inc
bound
adc
lods
int3
repz
jne
mov
xor
inc
stos
pop
adc
cmp
cli
je
and
getsec
mov
push
and
test
push
pop
push
enter
std
cmp
or
pop
scas
xor
jle
adc
or
ljmp
mov
pop
pop
jmp
xchg
push
stos
enter
outsb
cmp
scas
dec
lret
jp
push
jnp
popa
xchg
xor
inc
leave
xor
mov
xchg
les
xchg
xchg
xor
push
leave
push
fcom
inc
push
sahf
js
xor
pop
aam
pushf
xchg
jecxz
pushf
inc
imul
dec
and
lahf
push
push
fstl
mov
mov
cmpb
pop
push
data16
addr16
das
xchg
dec
or
cmpsl
in
icebp
mov
mov
out
insl
mov
movsb
mov
cli
cltd
in
in
fisubs
mov
mov
lcall
push
mov
mov
shl
out
pop
sbb
fwait
sub
pusha
ds
add
mov
lahf
int3
movsl
mov
loopne
inc
xchg
adc
mov
mov
inc
xor
shll
repnz
shrl
movl
mov
push
mov
aad
js
dec
sub
lods
add
mov
outsb
jo
pop
jae
ss
pop
xchg
addr16
cmpsb
les
mov
or
inc
repz
sub
mov
pop
mov
cmpsl
in
jmp
fwait
pop
clc
pusha
data16
xor
xchg
xchg
cmp
ss
lahf
fisubrs
xchg
mov
sub
pop
out
bound
jne
div
dec
lods
jge
js
or
imul
idiv
add
push
xor
mov
adc
cmp
pop
cmpsb
or
jbe
sub
xlat
cmp
orl
inc
dec
push
xlat
mov
sub
cmpsb
bound
cltd
popa
mov
dec
data16
or
ja
testb
sub
aaa
mov
xchg
and
sar
cwtl
push
jnp
movsb
loopne
inc
push
sahf
test
pop
shlb
jns
sbb
repnz
jmp
inc
adc
xor
mov
sub
xor
lret
fists
std
jnp
jle
xchg
cmc
push
jnp
pop
push
sub
cmp
fisttps
push
push
xchg
cmc
sbb
mov
and
push
jmp
movsb
cmc
xor
jae
push
dec
data16
jne
popa
aad
mov
ret
lcall
rcrl
xor
pop
pop
dec
idiv
jg
sbb
out
pop
mov
xchg
fs
xor
push
sbb
clc
and
mov
ss
pushf
mov
mov
dec
jnp
mov
cmp
push
jne
cli
in
sbb
jb
in
dec
inc
pop
xchg
lds
jle
rcrl
adc
and
hlt
cltd
add
mov
sbb
addl
sbbb
mov
fwait
xchg
lea
mov
push
push
dec
loop
or
pop
repz
jo
and
rol
ret
repnz
pop
sbb
push
mov
xchg
iret
mov
add
cli
stc
stos
sub
adc
and
arpl
nop
lods
ljmp
jae
testl
dec
addr16
dec
mov
mov
lahf
dec
lods
pop
icebp
sbbb
pushf
or
mov
jmp
fwait
ja
fs
mov
lock
inc
fstp
loopne
jg
in
pop
test
xor
cmp
lock
into
rorl
xor
aas
shll
adc
cmp
cmpsb
jge
xchg
call
test
fistl
pop
in
int3
dec
xor
sar
mov
pop
pushl
jo
cmp
cmpl
in
repnz
adcl
scas
scas
or
add
movsl
jo
in
inc
sar
xchg
inc
push
add
dec
mov
dec
dec
add
push
or
sub
fisttpl
dec
lods
push
sub
push
mov
jle
mov
mov
in
mov
flds
push
mov
push
stc
ds
ds
dec
stc
scas
inc
out
xor
stos
pop
add
out
add
out
fisubs
sbb
rorl
fcmovb
inc
aaa
xor
xorb
adc
push
or
lods
mov
push
sub
cmp
enter
push
xor
pop
adc
fisubrs
pop
int
stc
cmp
lea
xlat
mov
es
loop
int
inc
sub
mov
cmp
cmp
push
out
sbb
dec
xchg
mov
sub
mov
mov
popa
insl
clc
xchg
push
mov
sbb
stc
push
arpl
push
test
jl
cmpsb
roll
shr
call
test
inc
push
loop
mov
das
cs
cmp
dec
and
xor
add
loop
cmpsl
icebp
dec
and
jb
jg
addl
add
pop
push
xchg
and
jno
sti
sub
das
dec
adc
in
and
xor
sub
mov
sbb
jnp
gs
xor
jl
add
repz
stc
cltd
xchg
in
sbbl
inc
stos
sub
gs
insb
ret
in
aaa
js
mov
dec
cs
add
test
and
ror
or
or
cmpsb
cmc
popa
xor
cmp
lock
mov
das
test
mov
adc
jle
jecxz
and
mov
sub
xchg
add
js
outsl
push
loopne
sbb
pop
sbb
lods
or
aas
adc
mov
cwtl
mov
js
adc
subb
mov
fs
lahf
aaa
adc
and
popf
lock
push
scas
sbb
insb
std
sbb
dec
mov
dec
mov
lcall
dec
mov
aam
mov
push
and
mov
repz
mov
sub
jecxz
imul
inc
lods
mov
call
popf
push
sbb
sub
addl
or
repz
or
jno
sub
push
add
fcompl
jns
sbb
sbb
lret
push
lret
scas
jo
jne
xor
cwtl
lahf
rep
fildll
sub
push
xchg
and
dec
mov
pop
popl
daa
mov
pop
xor
and
gs
add
into
sub
aas
mov
sub
inc
addb
outsb
mov
cwtl
lret
and
popf
pop
cs
jae
mov
push
rol
call
fsubrs
fistl
lods
and
iret
sbb
adc
pop
pop
sbb
hlt
xlat
push
inc
out
andb
push
dec
inc
dec
mov
push
push
add
ljmp
add
push
mov
mov
cld
sbb
jecxz
lods
cmp
movsb
cld
cli
cltd
das
sub
inc
push
out
lods
sarb
push
aas
clc
popa
or
vcvtuqq2pd
pop
cmc
jl
add
jge
mov
cmp
push
arpl
cmp
popa
sbb
lahf
pop
sub
mov
jne
add
mov
or
pop
mov
lock
into
imul
xor
mov
pop
mov
and
xor
int
adc
ret
or
push
lret
repz
ljmp
push
cmpsb
outsb
dec
mov
push
mov
jmp
jecxz
testb
mov
test
adc
aas
je
out
test
nop
mov
push
loop
push
test
push
inc
ljmp
in
insl
daa
js
inc
les
jbe
flds
xchg
pushf
or
sbb
rcl
and
sbb
adc
sbb
pop
addr16
pop
push
scas
sub
ljmp
push
pop
add
jns
add
aaa
push
int3
cmp
mov
in
cmc
gs
das
xor
sbb
cmp
xor
sub
dec
data16
enter
cmp
loope
stos
into
adcl
jecxz
es
mov
imul
sarl
hlt
mov
pop
cmpsl
push
inc
and
divb
jmp
stos
inc
and
out
push
pop
rcl
stos
jno
lret
pop
ret
sub
lret
jle
mov
sub
fcmovnu
sbb
inc
icebp
adc
lahf
scas
xor
mov
lahf
jbe
adc
syscall
lahf
adcb
xchg
jg
out
mov
sub
mov
xor
repz
stos
adc
pop
dec
mov
mov
xlat
adc
es
push
adc
lcall
fisttps
cmc
and
sbb
cmpsb
fcoml
mov
xchg
push
movsl
fidivrs
ret
dec
adc
jp
mov
push
dec
sub
lret
sbb
dec
jecxz
add
rcr
jle
pop
push
cmp
push
or
shlb
pop
xor
inc
mov
into
xchg
aad
dec
pop
in
fstpl
dec
push
add
dec
cmp
int3
call
adc
fwait
sar
inc
mov
mov
mov
xchg
xchg
mov
dec
and
popa
dec
push
movsb
clc
insb
xor
cmpsb
sub
in
or
and
mov
sbb
inc
pop
inc
add
out
push
nopl
lods
pusha
mov
add
push
and
cli
mov
aad
cmp
ljmp
dec
pop
sub
jge
inc
mov
fmulp
insl
pop
push
adc
lock
mov
xor
jnp
inc
aas
fwait
in
hlt
dec
dec
adc
sbbb
mov
aaa
xchg
or
ljmp
add
inc
dec
pop
hlt
pop
and
inc
mov
rorb
xchg
adc
pusha
push
sbb
mov
outsb
xchg
dec
std
fwait
or
sti
in
dec
insb
fsub
adc
rorb
mov
pop
out
gs
leave
stos
add
incl
repz
xacquire
inc
movsb
and
sbb
repz
add
jno
mov
ds
xchg
mov
dec
push
or
xchg
cmpsb
cld
in
xchg
dec
fcmovu
add
jle
sbbb
dec
out
aam
dec
adc
test
bound
in
movsb
cmp
ja
dec
outsb
push
sub
sub
xor
outsb
mov
jp
ds
jno
inc
shll
or
gs
lret
xchg
ss
add
shll
sub
rorb
dec
inc
push
data16
cmp
int3
inc
and
arpl
ret
jg
insl
nop
jle
fidivl
nop
out
push
push
int
mov
xchg
or
imul
stc
sar
mov
adc
cmp
out
adc
pop
sahf
mov
lds
std
es
aam
aas
mov
push
push
outsl
push
mov
pop
stos
or
dec
test
inc
jne
out
mov
jne
cmp
push
mov
sbb
mov
cltd
and
loop
fs
cmp
das
mov
in
mov
movb
std
imul
roll
push
push
movsb
ret
icebp
sbb
xchg
and
frndint
xor
inc
push
add
xor
pushf
pop
mov
pusha
ret
and
jns
dec
lock
lea
aam
in
ljmp
sub
popa
xchg
pop
insl
test
sbb
loope
or
push
inc
subb
insb
dec
test
mov
xchg
sbb
xor
inc
sub
test
je
mov
mov
add
mov
sub
jp
call
stos
xor
mov
subl
sbbl
lret
jbe
test
or
jmp
add
push
out
mov
or
stc
add
xor
imul
loop
sbb
push
push
lods
inc
hlt
sti
push
sti
add
fcmove
or
lods
dec
sub
call
mov
xor
pop
xor
cltd
imul
xchg
leave
adc
insb
loopne
mov
push
ljmp
jl
push
int3
mov
lcall
push
test
iret
mov
xchg
mov
xor
dec
aad
mov
cltd
sub
insw
aam
xor
outsl
data16
mov
pop
out
mov
add
je
and
cmp
sub
dec
sarb
rclb
jle
mov
xchg
inc
sbb
cmp
ljmp
inc
aas
ljmp
int3
das
in
adc
pop
pusha
dec
mov
mov
push
add
jg
insb
inc
pop
pop
mov
icebp
push
hlt
push
pop
lock
adc
fbstp
xchg
outsl
mov
lahf
mov
call
pushf
call
jge
add
jge
rcr
lret
mov
testb
shlb
dec
lock
orb
adc
cmp
jle
dec
mov
scas
lds
adc
push
mov
out
and
jmp
stos
lods
push
jg
mov
jmp
popa
inc
xchg
stc
ret
cld
or
pushf
popl
sbb
ds
dec
pop
es
sub
add
lcall
inc
insl
or
mov
mulb
jl
scas
mov
or
mov
or
xchg
adc
into
lea
insl
mov
imul
ret
iret
mov
sti
into
pop
jge
pop
and
daa
lds
adc
push
push
notl
and
rolb
inc
inc
or
int
mov
push
lods
inc
aaa
test
and
sub
inc
or
inc
xor
and
pop
das
or
push
lret
push
daa
faddl
xor
test
xchg
adcl
jo
sti
popf
lret
mov
mov
je
xlat
mov
pusha
mov
jg
adc
or
mov
xchg
xor
popl
call
mov
fldl2t
sub
lret
mov
mov
stos
pop
push
mov
jecxz
xor
js
movsl
xchg
fwait
sub
mov
inc
or
adc
icebp
push
clc
and
out
xor
xchg
mov
aam
stos
adc
sub
xchg
movsb
pop
pop
pusha
pop
shlb
test
js
jne
mov
ror
and
pop
jle
adc
int3
mov
fstpl
mov
cmp
or
mov
and
lds
mov
mov
mov
lret
mov
andl
lods
daa
adc
pop
mov
mov
mov
out
stos
adc
ret
mov
and
inc
dec
cmp
mov
movsb
fwait
inc
ret
fiadds
arpl
aaa
rcrl
pop
push
push
xchg
pop
movsl
and
inc
mov
inc
cmc
cmpsl
setne
adc
hlt
dec
pop
jl
jecxz
nop
cmp
mov
sub
and
sub
cmp
mov
cmpsl
jl
rcrl
divb
push
addr16
in
aam
mov
mov
sti
and
add
push
dec
mov
inc
test
push
pop
mov
push
add
and
cmp
iret
push
xchg
cmp
xor
or
mov
sbb
push
enter
daa
adc
adc
or
cmpl
inc
push
call
dec
adc
mov
adc
jne
ret
inc
stos
loop
sub
push
or
lret
outsl
test
and
jns
cmp
jecxz
jmp
or
stos
cmp
testb
mov
sti
aad
cmp
mov
inc
push
push
inc
push
dec
lret
das
mov
xor
lret
daa
pusha
hlt
push
repz
test
dec
icebp
cmp
jecxz
cwtl
ret
call
lcall
xchg
stos
mov
clc
add
push
pop
in
xchg
jo
out
cmpsl
loop
adc
movsl
cmp
mov
inc
xchg
js
test
fdivs
sti
aam
push
or
test
mov
mov
xor
shrb
lret
push
and
dec
xchg
push
popf
insb
lods
leave
scas
inc
psubd
cmpb
insb
jle
jns
jl
jno
jge
pop
sub
and
jl
xor
das
out
out
jne
xor
aam
les
stos
inc
popa
jnp
mov
mov
inc
cmp
scas
xchg
mov
lods
or
mov
mov
jno
stc
mov
xchg
xchg
xchg
movsl
xlat
adc
sahf
mov
inc
sub
adc
mov
push
mov
fwait
scas
push
push
shl
adc
mov
sub
xor
push
xor
sbb
aaa
cld
xchg
rorb
or
xor
xchg
and
andb
or
inc
dec
or
push
push
dec
pop
inc
or
cli
sbb
add
inc
outsb
clc
add
mov
repz
in
sbb
cltd
pushf
nop
lods
pop
icebp
in
and
dec
cmp
hlt
jg
in
in
loopne
dec
je
daa
push
mov
pop
rorb
loopne
xchg
adc
xchg
mov
pusha
popf
dec
add
lahf
jge
cli
add
pop
jno
loopne
pop
adc
dec
cmp
aaa
mov
push
call
push
pop
mov
clc
aad
push
push
adc
mov
jne
push
mov
mov
mov
inc
inc
mov
jmp
cmpsb
loopne
addr16
in
push
jl
mov
push
cwtl
pop
loopne
mov
leave
cmpsl
ds
testl
bnd
or
add
stos
outsb
fildll
inc
dec
add
lret
cmpsb
jp
es
mov
stc
add
sub
js
sbb
push
dec
xorb
push
pop
je
or
fildl
mov
adc
sbb
pop
and
push
aad
js
cltd
and
mov
dec
hlt
mov
add
pushf
repz
xor
sbb
mov
add
inc
inc
out
sahf
mov
lods
add
pushf
jae
repz
fldcw
les
xor
pop
xchg
inc
mov
shlb
sbb
fnstcw
mov
in
push
ds
pop
pop
sbb
loopne
mov
pusha
imulb
xchg
popw
and
lea
lods
adc
push
adc
stos
cmp
divl
outsb
sub
sub
pop
into
and
test
shll
jmp
mov
push
fiaddl
lods
cmpsb
scas
stc
mov
data16
push
push
sub
xchg
dec
daa
sarb
cmp
lret
in
xor
arpl
jp
mov
sub
xchg
out
mov
mov
cmp
sbb
xor
xor
int
rcl
fistl
jl
jmp
xor
push
and
push
shll
adc
push
xchg
fcoms
aad
pop
xchg
enter
loop
mov
or
outsl
fildll
rolb
dec
movsl
xor
push
mov
int
and
pop
mov
push
out
int3
fidivl
imul
fidivl
add
hlt
stos
mov
jb
dec
mov
dec
mov
sub
cmp
push
lock
dec
packssdw
mov
xchg
lods
push
jmp
mov
jg
mov
or
mov
mov
mov
jge
push
pusha
rcr
mov
sub
fisubl
sub
dec
mov
lret
aam
mov
stos
js
mov
xchg
dec
sbb
jb
xor
sub
add
adc
int
cmpb
aas
add
fisttpll
sub
popf
mov
loopne
adcb
jns
mov
or
xchg
lods
sbbb
icebp
and
fcmovnbe
mov
inc
or
pop
sbb
adc
hlt
incb
xor
sbb
add
mov
dec
xchg
dec
and
jns
xchg
clc
mov
vmread
push
insl
jno
jbe
inc
cmp
and
out
out
shr
repz
push
ror
mov
adc
cmp
outsl
jo
ficomps
xor
xchg
fsubrs
lret
xchg
adc
jle
sti
out
cmc
lret
cwtl
cmp
xchg
xor
xlat
repnz
ds
add
cmpsb
xor
sbb
mov
enter
push
sbb
inc
test
sbb
mov
jb
ljmp
movsl
ret
sarl
dec
inc
lcall
aas
or
dec
cs
repnz
sbb
loope
mov
pop
shrl
xchg
ret
out
es
repz
cmp
ss
push
in
dec
inc
cmp
outsb
and
das
mov
xor
inc
push
mov
xchg
into
pop
mov
mov
ja
mov
dec
mov
and
push
cmp
xor
or
sbb
xchg
add
sub
mov
sbb
xor
jl
bound
int
out
jnp
ficoml
ja
push
push
stc
sbb
imul
aas
insb
and
popa
mov
cmp
push
lds
movsb
mov
dec
addb
decb
stos
outsl
pushf
dec
push
mov
nop
inc
lret
pop
pop
xchg
mov
or
mov
xchg
rorl
xchg
adc
icebp
push
mov
stos
fs
pop
sbb
or
out
sahf
mov
and
sbb
push
es
into
jge
pop
dec
xchg
int
xor
test
das
inc
mov
sbb
sbb
into
or
lret
mov
push
push
jns
adc
mov
push
arpl
stos
in
sahf
ss
mov
xchg
jecxz
add
loopne
mov
xor
mov
aaa
and
xor
jnp
jmp
in
push
fcoms
jle
das
dec
icebp
xor
test
in
pushf
divl
mov
push
cwtl
add
jo
pop
mov
leave
dec
sti
rorl
push
lods
dec
fsubl
adc
popa
inc
xchg
filds
arpl
jo
mov
imul
jg
xchg
loopne
pop
mov
jne
in
and
pop
jb
jmp
scas
std
stc
clc
shll
push
mov
add
mov
ficoms
and
enter
jl
pandn
xchg
movsl
jo
loopne
add
jne
out
xchg
sbb
das
add
adcl
lock
ss
fbstp
call
sbbb
js
stc
push
repz
daa
mov
je
push
repnz
xor
sub
mov
mov
jnp
jecxz
stos
mov
inc
push
mov
xor
xchg
lds
add
cmpsl
sub
lea
mov
pop
xchg
stos
xchg
or
cmp
inc
xor
fidivs
mov
sbb
dec
out
push
jns
pop
aam
dec
sub
xchg
mov
sahf
push
inc
out
pop
ret
ljmp
cmp
pop
movsl
fldcw
sti
cmpsl
call
fs
pop
xor
fcmovb
push
push
and
je
cli
cs
sub
rcr
in
dec
inc
stc
inc
fisttpll
mov
movzwl
ds
in
xor
rorb
mov
int
insl
pop
std
pop
scas
pop
insl
rol
lcall
inc
dec
jle
bound
lahf
mov
mov
xor
inc
shll
jecxz
push
push
insl
pop
shl
cmp
mov
xor
pop
sarb
dec
push
int
popf
shld
or
jle
xchg
mov
push
in
sbb
dec
cmp
and
mov
aam
stos
push
xchg
in
cmc
movsl
cltd
mov
movsl
out
jb
ds
int
or
xchg
ror
mov
lret
stos
f2xm1
mov
in
scas
ja
xor
sub
fwait
push
addr16
in
mov
jle
push
push
adc
jbe
sbb
pop
fyl2xp1
pop
lahf
jmp
jmp
push
adc
cmp
push
xchg
sub
xchg
dec
sub
lea
pop
jb
adc
bound
mov
mov
das
adc
jb
cmpsb
inc
pop
sbb
in
push
mov
xor
sbb
xor
mov
int
add
sub
jno
out
es
loope
mov
jmp
and
daa
pop
add
rolb
std
xchg
xchg
call
mov
pop
adc
test
inc
push
out
das
mov
in
jae
sub
mov
sahf
clc
fwait
and
jns
push
aam
pop
std
rcr
adc
out
mov
in
loopne
outsb
in
push
test
sub
pop
movsb
rcrb
mov
xchg
fildll
mov
mov
xchg
push
sti
lea
shrl
add
push
fcmove
pop
std
icebp
sti
push
and
pop
push
jmp
cmpl
and
pop
push
jmp
int
imul
inc
jmp
popa
nop
jo
or
add
cmp
nop
and
pop
popa
imull
pop
adc
lcall
adc
lds
mov
adc
push
mov
adc
mov
mov
inc
loopne
or
mov
cmovo
addr16
pop
stos
adc
jl
dec
in
pop
adcl
mov
or
out
cmp
dec
cltd
cmp
sbb
out
movsb
push
add
stc
les
or
push
lahf
sbb
dec
loope
inc
mov
rol
jo
mov
adc
pop
inc
pop
enter
sub
pop
lds
aad
push
idivb
testb
or
inc
mov
xchg
xor
push
mov
movsb
adc
jge
lds
scas
pushf
movsb
aad
int
mov
and
cltd
out
aaa
std
jno
xchg
mov
call
fdivrs
mov
mov
jmp
addr16
push
popa
xchg
pop
xchg
outsl
xor
or
push
xchg
arpl
sub
mov
mov
loopne
cmp
inc
lcall
lret
in
mov
mov
cmc
xor
add
inc
adc
adc
adc
repnz
mov
icebp
xor
and
mov
dec
and
push
outsb
loop
sti
mov
out
mov
jns
mov
loopne
sub
andl
loop
stos
adc
imul
mov
mov
daa
inc
mov
sub
jmp
out
inc
fxch
cld
mov
test
divl
rcrb
rcl
inc
xor
sar
and
faddl
mov
mov
jle
lea
mov
lcall
adc
pop
imul
jae
mov
ret
lcall
adc
stc
in
dec
sub
dec
mov
mov
int
repz
jmp
cmp
push
lea
loopne
add
mov
dec
pop
fbstp
add
push
xor
jb
mov
test
mov
jg
or
rcr
add
or
or
sub
iret
lock
mov
jmp
lods
inc
jl
pop
aas
jle
and
xchg
push
push
jg
and
mov
lahf
dec
sub
mov
cmp
jns
outsl
adc
inc
inc
pop
adc
xchg
push
data16
push
fwait
mov
lock
jne
cmp
xchg
insb
in
xor
dec
pop
jge
jo
repnz
mov
lcall
push
sbb
xor
inc
in
shll
mov
je
cmpsb
movsl
jns
sarb
and
jno
dec
cmp
and
mov
push
in
and
or
sar
cmp
adc
insb
lret
mov
sbb
orb
popa
lea
cmp
push
mov
dec
sti
add
cmp
or
cmp
pop
aad
xor
sbb
xchg
insl
push
pop
cmp
dec
imulb
xor
in
insb
call
mov
push
ljmp
and
mov
in
mov
and
idivb
cmp
fnstenv
add
dec
js
push
inc
mov
jecxz
inc
cmp
or
jle
mov
mov
pop
push
inc
clc
inc
jae
rcl
jle
dec
push
hlt
cmpsb
inc
cld
lahf
cmp
lret
cmp
mov
push
arpl
xchg
daa
outsl
bound
and
or
add
cmp
xchg
nop
and
add
mov
fld
fsts
jmp
or
test
scas
inc
sbb
xchg
mov
sete
xchg
and
inc
lock
movd
mov
stos
xorb
cmc
jb
sbb
bound
aaa
arpl
sbb
test
aas
leave
sbb
fnstsw
adc
mov
sarl
push
andb
sbb
dec
lods
or
fists
lret
dec
push
je
sbb
enter
gs
fisttps
pop
scas
int
loopne
fistpl
mov
fdivl
jg
fwait
gs
fwait
add
and
mov
nop
sbb
popf
mov
push
jne
add
adc
test
jp
mov
dec
jmp
and
sahf
adc
orb
or
std
pop
and
sbb
jecxz
jne
cmp
xchg
mov
cmp
sub
sub
scas
aaa
bound
push
sbb
mov
add
inc
inc
xor
mov
subb
mov
fnstsw
shl
mov
aam
push
arpl
daa
test
rcll
sbb
popf
ficompl
mov
bnd
adc
add
jns
lock
leave
lcall
fwait
or
adc
jns
idiv
test
lods
mov
cmp
sub
enter
inc
arpl
mov
inc
xchg
lds
test
dec
rcll
es
loope
adcl
or
jmp
jbe
dec
dec
test
pop
and
push
dec
cmp
cltd
repnz
arpl
jge
mov
adc
jg
push
stos
js
mov
fwait
repnz
scas
mov
ret
scas
xchg
push
test
movsl
lcall
shrb
jb
mov
scas
sbb
sahf
out
mov
sarl
out
clc
push
xor
and
pop
dec
jecxz
mov
mov
ret
popa
int3
dec
insb
out
jbe
xchg
jo
xlat
out
int
lret
inc
inc
arpl
mov
pushf
mov
lock
repnz
xchg
lods
loopne
jbe
xchg
hlt
xchg
push
mov
push
inc
jl
xor
lds
int3
xchg
mov
mov
mov
mov
mov
xchg
gs
loop
pop
jmp
mov
fidivs
lock
xor
test
aam
and
popa
imul
ds
mov
divl
inc
jnp
xchg
repnz
add
xor
push
push
sub
leave
stc
in
mov
aaa
scas
lds
cmp
mov
sub
mov
ret
fdivrs
mov
sub
jb
push
cmpsb
es
filds
jge
jge
or
mov
dec
cmp
push
mov
cmc
lcall
mov
and
sub
adc
data16
jmp
dec
pop
arpl
js
pop
or
imul
jecxz
and
mov
lcall
lock
push
int
int3
sub
jae
orb
mov
mov
jbe
dec
call
mov
jl
cmp
or
es
mov
aas
gs
pop
dec
insb
sahf
incb
xlat
add
push
xchg
pusha
jle
push
cmove
sbb
mov
jbe,pt
hlt
cmp
xor
stc
test
jge
adc
mov
int
sub
sahf
push
lahf
adc
dec
mov
pushf
movsl
dec
xlat
dec
into
jae
aad
dec
nop
mov
adc
arpl
stc
inc
push
pop
notl
jno
xlat
sub
or
out
fwait
sub
pop
or
sub
and
leave
call
lock
inc
cmp
mov
test
dec
jnp
pcmpeqb
mulb
adc
adc
xor
add
mov
mov
gs
fs
cltd
insb
push
lods
mov
push
inc
les
cli
inc
andb
jb
mov
ss
daa
popa
test
and
pop
test
xchg
sbb
xchg
fnsave
pusha
std
add
or
xchg
pushf
jns
xchg
adc
pop
and
mov
adc
jge
mov
jno
jge
inc
xchg
xchg
imulb
fidivl
in
lcall
add
cmp
cmp
in
mov
inc
sub
mov
push
and
xchg
lds
inc
cmp
clc
lds
push
rorb
cltd
sarl
mov
and
and
loop
xchg
shrl
dec
lods
adc
or
add
mov
cs
int
roll
push
pop
pshufw
cmpsl
or
xchg
dec
repnz
flds
dec
sbb
or
insl
sbb
mov
popf
in
into
and
dec
aas
sub
sbb
mov
int3
sbb
xchg
pusha
loope
lret
push
outsl
mov
xchg
mov
pop
push
mov
xor
pop
pop
in
lret
aaa
and
shl
into
cmp
pusha
test
fistpll
fs
cmp
cmp
shrb
or
fisubrl
push
adc
loope
mov
imul
push
int
outsl
int3
xor
stos
in
xor
sub
inc
ljmp
lcall
fsubrs
cmp
repz
cltd
dec
cmc
xchg
inc
fists
mov
or
mov
test
xor
imul
push
divb
mov
push
jle
test
or
xchg
jnp
lods
pusha
mov
clc
decb
nop
mov
jns
pop
push
adc
jl
sbb
sti
pop
lds
sub
mov
xlat
dec
in
lret
test
mov
fnstenv
push
sub
xor
mov
cmp
fcomps
js
mov
inc
inc
loope
outsl
call
xchg
mov
inc
lcall
scas
out
rcrb
idivl
xor
inc
cli
pop
xchg
dec
xchg
cs
out
push
popa
xchg
int
leave
or
cmp
es
inc
pop
jle
cmp
adc
mov
lds
lret
sub
mov
jle
in
lea
xor
push
hlt
scas
mov
scas
pop
jae
pushf
xchg
mov
xorl
xchg
mov
mov
sti
and
sahf
fists
orl
aaa
and
mov
scas
mov
xchg
mov
cmp
fisubs
lahf
lret
sub
mov
clc
pop
cmp
lret
mov
clc
jb
str
gs
push
fwait
dec
ret
inc
mov
add
repz
cmpsb
pop
mov
xor
xchg
mov
stc
push
mov
in
pusha
adc
xor
mov
fistpll
aas
xor
outsb
pop
addr16
rorb
addr16
outsl
mov
leave
shrl
adc
mov
pop
push
pop
adc
lock
popf
sub
jno
add
pop
shr
mov
adc
cmpb
icebp
movsl
push
or
stos
ror
enter
add
aam
repz
jg
dec
pop
cwtl
add
popa
jns
dec
test
dec
inc
or
or
sbb
adc
sub
jno
stos
cmc
dec
lock
pop
sub
pushf
out
sarb
stos
dec
sbb
inc
jns
or
or
nop
push
lret
cs
jae
lock
push
sub
das
pop
mov
xchg
hlt
out
adc
in
pop
mov
mov
push
aam
xchg
es
test
cli
mov
mov
push
add
outsl
jp
clc
and
xchg
xor
add
jnp
push
daa
repnz
pop
and
mov
dec
fwait
hlt
outsb
repz
outsb
inc
repz
rcl
in
popf
mov
bound
lods
mov
xor
andb
pushl
adc
icebp
jns
sub
mov
push
lods
sahf
push
dec
sub
add
inc
pop
cs
rolb
jmp
push
xchg
aad
imul
fstpt
and
test
lret
xchg
pop
and
sub
shll
and
pop
mov
dec
sahf
jge
sub
ss
fmulp
nop
rolb
sarl
call
bnd
sub
cmp
inc
jbe
xchg
mov
and
xchg
push
xchg
ljmp
adc
ljmp
mov
lret
jne
not
movsb
mov
lret
lock
fwait
xlat
idiv
xor
ljmp
push
push
jo
cmp
mov
or
into
adc
cmpsb
mov
sub
sbb
xchg
orb
andl
imul
movsb
call
insl
mov
adc
push
cwtl
inc
sub
bound
sub
and
rcrl
pop
aad
pop
loopne
dec
dec
mov
push
push
sahf
leave
inc
sbb
dec
fwait
dec
les
imul
sub
cwtl
stos
mov
pop
dec
sti
loopne
jl
cmp
pushf
inc
push
cmpsl
adc
je
xchg
cwtl
insl
test
or
dec
pushf
inc
adc
mov
inc
sbb
movsb
rol
cmpsl
lret
pop
enter
adc
adc
imul
dec
rcr
int
in
add
push
mov
push
inc
add
and
and
jne
loop
lret
loopne
insb
adcl
xor
cwtl
push
sub
mov
mov
xchg
mov
mov
into
xchg
div
fildl
scas
aad
bound
inc
sbb
sahf
fstpl
add
inc
lock
popa
adc
mov
ja
inc
call
insb
sbb
lea
mov
cmc
fmul
cmc
cwtl
jmp
test
mov
test
cs
sub
pop
flds
in
sarl
lds
adc
push
subb
dec
js
mov
pop
nop
dec
xchg
pop
jne
hlt
ror
test
lret
mov
mov
adcb
mov
std
es
xorl
cmp
inc
addr16
lahf
xchg
pusha
or
cmpsb
rclb
andl
pop
push
stos
out
test
sub
cmp
into
call
mov
orl
cmp
push
jo
ja
mov
adc
mov
lods
and
int3
lcall
inc
in
les
sahf
push
inc
testl
pushf
scas
adc
sub
mov
inc
enter
mov
ficoms
cmp
stc
in
cmp
sub
iret
adc
cmc
sbb
and
sbbl
or
push
push
jmp
cwtl
push
pop
jns
lods
and
lcall
and
push
xlat
dec
cwtl
shlb
inc
mov
fisubrl
inc
lcall
das
push
mov
js
mov
xchg
dec
mov
roll
ss
xor
lret
bound
xchg
mov
aam
int3
jo
lret
pop
xor
push
data16
mov
jge
xchg
fwait
call
sub
ror
hlt
inc
xchg
arpl
xchg
mov
gs
inc
aaa
movsl
or
imul
sbb
ss
add
and
aam
sbb
jg
imull
and
fadds
inc
into
or
cmpsb
repz
pop
aam
jb
mov
cmp
test
or
stc
jne
popa
aam
in
pushf
lcall
cmp
xor
xchg
sub
push
jne
into
push
aam
shl
js
les
lock
inc
inc
pop
adc
xor
sbb
fwait
sti
les
jno
std
ljmp
dec
dec
cmc
or
cld
js
sub
scas
xchg
pushf
push
jae
out
cmp
dec
pushf
push
xchg
or
and
loopne
mov
sbb
cwtl
fdivrp
mov
pop
cmp
mov
sbb
push
int3
test
pop
add
scas
mov
jno
jb
cmp
shlb
push
data16
pop
std
adc
cmp
lock
xchg
jo
sub
or
hlt
push
js
mov
push
push
faddl
add
addb
cli
add
sbb
popf
scas
adc
sti
les
pop
pop
xchg
xchg
sub
push
pop
push
and
mov
mov
std
mov
in
fisubrs
push
fistpll
mov
sti
dec
shll
fstpl
lret
cmp
idiv
cmp
or
push
repz
jne
data16
fwait
pop
push
adc
mov
loopne
pushf
adcb
cli
push
and
stos
lret
lret
popa
pusha
dec
adc
int
sbb
and
pop
dec
sbb
cld
jne
dec
inc
push
and
xchg
and
mov
pusha
cmp
dec
mov
inc
andl
dec
and
mov
mov
hlt
and
adcl
xchg
lret
mov
arpl
out
inc
bound
stos
xor
push
mov
xor
pop
and
xchg
mov
push
ret
cltd
out
and
pop
sarl
xchg
xchg
inc
jo
fdivl
test
and
icebp
dec
dec
adc
iret
data16
js
sti
insl
inc
inc
fsts
sbb
sbb
pusha
and
ds
mov
outsb
in
cmpb
jo
mov
pop
test
fwait
mov
xor
inc
jnp
cwtl
mov
subb
sbb
rcrl
stc
pop
jle
lea
aaa
test
lret
sbb
in
pop
jno
xlat
inc
xlat
xor
cmpsl
test
inc
mov
jge
cmc
ficomps
ret
fstpt
out
adc
adc
sti
xchg
stos
mov
cltd
notl
rcrl
int3
outsb
fisttpl
in
mov
mov
imul
pushw
mov
fnstsw
data16
hlt
gs
in
push
outsb
aad
mov
mov
push
cmpsb
push
cmc
sub
cmp
cld
lahf
jl
add
les
cltd
orb
stc
ds
cmp
mov
aam
add
std
les
dec
mov
and
xor
inc
xchg
xor
xor
jp
add
fwait
or
pop
mov
fidivrs
inc
xchg
jb
mov
xchg
jge
and
push
scas
test
add
mov
or
pop
sub
push
iret
mov
das
adcl
rcrb
sti
fdivrl
int3
xchg
adc
movsl
xchg
xchg
outsb
int3
jle
std
sub
cmp
xchg
push
or
int
pushw
idiv
test
or
dec
outsl
pop
scas
arpl
popa
scas
hlt
test
adc
aad
sub
inc
inc
xor
ds
inc
in
jl
std
mov
sahf
les
in
push
fistpll
call
imul
xchg
jmp
ffreep
pop
cli
adc
jg
es
mov
mov
outsb
push
jb
into
xor
cwtl
mov
stos
js
push
jo
stc
into
push
add
sub
pop
dec
mov
xor
mov
mov
loop
mov
fcoms
repnz
xor
out
inc
lcall
jmp
xlat
loopne
pop
push
inc
in
add
fs
scas
mov
les
sahf
sub
icebp
dec
cltd
sub
ss
xchg
dec
nop
sub
and
jmp
aam
mov
icebp
sbb
pop
adc
outsb
adc
inc
mov
lret
hlt
mov
adcl
cli
jmp
or
std
push
pcmpgtd
push
or
sbb
out
insb
jae
andb
dec
sub
test
mov
insb
push
xchg
mov
aas
in
mov
test
nop
mov
cmp
aas
mov
outsl
jmp
cmc
testl
cli
mov
pushl
outsl
sub
fcom
xchg
inc
negb
dec
pop
adc
dec
icebp
out
shr
in
mov
aam
in
sahf
xchg
cmpsl
mov
xchg
repz
out
aaa
lcall
xchg
inc
and
pop
fmull
adc
jno
imul
xchg
pop
cmp
mov
push
test
maskmovq
mull
or
push
outsb
sbb
jno
mov
xchg
xchg
in
mov
xlat
test
jle
jle
mov
xor
sub
dec
mov
mov
pop
mov
cmc
adc
ss
testl
movsl
repnz
mov
cmpsb
lea
sbb
sub
add
stos
add
mov
mov
adc
pushf
dec
inc
insb
xor
cmp
adc
push
nop
stos
lahf
and
adc
lods
push
ret
push
dec
hlt
cmpsl
pop
pop
lret
inc
adc
cltd
nop
or
movsb
stos
mov
stc
xor
xor
xor
dec
fxch
call
mov
cmp
das
test
sbb
pop
call
add
inc
int
movsb
sub
pusha
mov
stos
cli
dec
mov
sbb
adc
sub
rcll
mov
mov
dec
cmp
mov
int
xor
cmpsb
dec
lcall
adc
push
das
sarb
js
cs
jnp
mov
push
aad
pushf
mov
push
xchg
gs
mov
test
mov
xor
adc
shl
fadds
mov
test
in
xchg
push
push
cmp
inc
xlat
cwtl
sbb
sub
jo
dec
sarb
enter
sbb
push
popa
push
loope
lret
stos
inc
sbb
aaa
mov
cmp
jne
daa
aas
loop
pop
es
xchg
outsb
pop
xor
push
sbb
add
cmp
xchg
jne
pushf
mov
mov
insb
icebp
test
test
mov
mov
into
icebp
jae
sbb
scas
xor
fucomp
mov
push
cmp
mov
popa
dec
cli
jp
negb
mov
repnz
flds
push
adc
ljmp
call
fmull
iret
aad
adc
cli
in
imul
out
mov
pop
inc
rcl
or
pop
mov
dec
or
call
mov
fistl
notb
adc
dec
push
dec
out
lods
jne
add
push
ja
cld
mov
jl
push
adc
lods
inc
cmp
fldenv
sbb
fsubrs
loop
lds
je
add
dec
sbb
aad
repnz
dec
push
and
imul
push
push
cwtl
int
int3
repz
jmp
mov
push
mov
push
xor
test
xor
mov
popf
icebp
aad
ficoml
js
mov
std
or
add
inc
cmp
cmp
fwait
jp
mov
imul
inc
cmp
inc
sbb
sbb
test
push
lods
inc
shlb
hlt
xlat
jno
fbstp
cmpb
jmp
mov
loope
lds
cmp
mov
xchg
dec
fmuls
cmc
popf
icebp
lods
shll
hlt
mov
or
or
mov
fsubs
enter
in
movsl
adc
adc
jecxz
lahf
xchg
mov
inc
pop
or
loope
lods
cmp
xlat
shrl
add
cmp
das
notl
in
mov
fdivs
cs
cs
es
cmp
xlat
mov
push
inc
fiaddl
pusha
adc
addr16
movsl
adc
cmp
adc
xor
and
pop
push
pop
add
sbb
mov
sbb
mov
cmp
les
mov
shl
inc
aaa
xor
int3
cli
aad
ss
mov
filds
mov
sbb
sub
or
ret
inc
pop
mov
xorl
jg
testl
ret
xchg
pop
enter
fadds
mov
cmc
add
test
cltd
arpl
xor
xchg
mov
push
cli
in
mov
data16
cld
scas
push
sbb
push
js
loope
jl
xchg
or
adc
clc
xor
sbb
mov
shrb
stos
test
and
xchg
rcrb
xor
sbb
imul
sbb
adc
add
xor
repz
jp
in
shl
inc
pop
stos
dec
or
cmp
sub
inc
insb
push
sbb
pop
out
mov
or
xor
insl
jne
rclb
jl
clc
pop
test
in
xchg
test
leave
mov
sbb
pop
ficompl
push
mov
andb
decl
cltd
fs
insb
inc
pop
inc
cvtps2pi
loop
cmp
pop
push
out
stos
fdivs
push
sub
sti
je
pop
addr16
or
cli
insb
in
shlb
cmp
push
push
popf
jle
adc
or
cs
pop
push
pop
inc
shrl
jle
adc
std
addb
jo
pop
loope
sub
xchg
test
and
shlb
nop
leave
fwait
gs
ss
xchg
pushw
movsb
pop
mov
lret
stc
scas
jmp
test
std
dec
mov
call
inc
and
lods
add
outsl
inc
cmp
jne
and
rclb
in
mov
cwtl
ficompl
fwait
mov
es
rclb
fwait
or
in
pop
lock
stos
mov
cs
jmp
adc
dec
or
sti
mov
fcom
into
mov
mov
loope
jbe
mov
xor
fisubrl
jp
mov
cwtl
test
add
mov
punpcklwd
int3
jnp
push
aaa
xchg
xor
sub
test
hlt
roll
mov
mov
in
gs
adc
mov
cmpsl
pusha
pop
leave
fisttpl
xchg
xchg
add
xor
xchg
xchg
dec
sar
std
fdiv
and
or
xor
ss
aam
scas
sbbb
movsb
jno
es
jle
sbb
pop
mov
repnz
push
and
mov
shlb
pushf
ljmp
mov
cwtl
mov
fdivrl
arpl
je
xlat
jge
xorb
cmp
pop
fildl
in
mov
outsb
push
mov
div
lret
mov
push
mov
or
fucomp
out
cmpsb
out
test
jnp
mov
mov
arpl
aad
xchg
mov
add
jecxz
push
fimull
shrl
adc
pushf
xorl
lods
stc
inc
lods
fidivrl
sbb
sub
mov
xchg
jl
call
bound
and
mov
cmp
fwait
jns
clc
loopne
mov
pop
pop
xor
push
mov
dec
test
sar
repnz
cltd
lcall
push
jnp
and
xchg
and
sbb
ret
callw
pop
xchg
aam
add
fstpt
lea
mov
xor
pop
inc
push
fs
bound
ret
sub
hlt
pop
inc
orb
pop
or
cltd
mov
adc
dec
stos
pop
repz
repz
pop
in
mov
fwait
test
lods
fsubrs
ficompl
lods
push
mov
xor
out
shlb
movsl
cli
out
imul
movsl
sub
fcmovnbe
pop
pusha
mov
scas
inc
inc
jmp
aaa
outsl
sbbl
repz
imul
cmp
sti
and
es
test
aas
shlb
das
xlat
mov
pop
xor
cmp
pop
xchg
insb
mov
fsqrt
in
filds
and
jo
cmp
dec
push
mov
imul
mov
xchg
mov
mov
inc
cmp
xor
lods
out
hlt
and
pop
mov
sahf
int3
xchg
movsl
movsl
daa
jae
test
cwtl
cld
int3
sbb
sub
dec
pop
xchg
add
cmpsb
aaa
sbb
push
sbb
mov
xchg
pop
into
pushf
ss
xor
in
outsl
cld
cli
inc
aad
xor
or
sub
sbb
mov
sub
cmp
sub
mov
nop
jno
add
dec
leave
xor
inc
lcall
xchg
sub
outsl
jno
out
scas
inc
pop
adc
std
adc
lahf
mov
sbb
hlt
adc
repz
lret
push
clc
xor
inc
iret
jmp
and
push
test
std
lods
mov
or
fwait
jo
jnp
mov
pop
iret
xchg
jae
in
xor
xor
inc
jecxz
add
mov
dec
cmp
cli
jle
xchg
xchg
sbb
ss
leave
and
jbe
out
cltd
imul
push
mov
add
aad
adc
cs
push
lret
lock
ljmp
cltd
cmp
fxch
lods
jns
inc
in
nop
loop
pop
imul
pop
ss
stos
stos
or
xor
popf
sub
xchg
mov
loope
sub
aaa
push
ljmp
clc
repnz
subl
pusha
xor
repnz
push
cli
lock
xor
and
jnp
popf
pop
pop
sahf
das
inc
test
pop
push
icebp
fwait
mov
and
dec
adc
cmpsb
xchg
jbe
xor
pop
fstl
mov
cmp
push
repnz
int3
mov
cmpl
adc
push
mov
test
mov
hlt
stos
push
out
or
daa
cmp
mov
mov
mov
hlt
xchg
movsl
filds
nop
jecxz
repz
xlat
pop
hlt
repnz
scas
cmp
dec
pop
push
xchg
sbb
dec
push
sub
push
mov
push
mov
outsb
mov
mov
ror
jg
mov
xchg
xor
dec
mov
pushf
and
mov
iret
lock
push
les
dec
sub
leave
out
leave
adc
push
jp
add
or
mov
xor
sbb
mov
in
cmpl
and
pop
adc
fxam
push
cmc
xor
xor
mov
movsb
sub
ljmp
cld
mov
xchg
mov
insb
pop
push
mov
sub
mov
imul
and
jmp
icebp
pusha
jecxz
push
jne
repz
pop
lcall
dec
mov
cld
sub
xor
xchg
in
sahf
rorb
fistps
mov
imul
addr16
leave
fiadds
xchg
or
lcall
sub
mov
test
xchg
cmc
ss
shlb
inc
adc
rclb
cld
popa
sub
out
in
mov
cli
fwait
jo
enter
lret
jb
push
seto
cmp
fdivr
mov
popf
pushf
into
ds
pop
cli
aad
dec
hlt
mov
aas
dec
insl
idivl
icebp
cmp
dec
lret
xchg
pushfw
testb
mov
mov
jae
fildl
and
push
inc
dec
mov
pop
lahf
sbbb
push
push
ljmp
outsl
shlb
push
fistpl
push
cmp
jl
or
in
cmp
pop
sahf
xlat
xorl
jecxz
xchg
cmp
ret
repz
cmc
xchg
cmp
sub
cltd
imul
leave
dec
add
ss
es
jle
or
cmp
mov
es
mov
ljmp
nop
js
cltd
fsubl
fsub
clc
das
arpl
imul
xchg
jb
adc
pushf
fstps
loop
imul
mov
ljmp
or
fbld
xchg
mov
pop
jmp
fldenv
push
add
mov
stos
int
imul
xor
pop
mov
jb
in
mov
jmp
xor
mov
stos
xchg
rol
jg
dec
sbb
roll
mov
scas
out
ja
loope
fs
push
mov
adc
push
dec
das
xor
mov
jnp
pusha
iret
inc
in
jl
pop
dec
cmc
outsl
xchg
into
mov
ds
lods
stc
insl
xor
cmc
add
pop
out
fwait
dec
cmp
bound
mov
and
dec
fdivrp
jmp
movsl
mov
flds
dec
fbstp
or
fxch
out
loopne
push
mov
adc
or
mov
loopne
lds
add
testb
push
pop
cmpsb
jo
mov
and
roll
mov
and
out
mov
andb
sub
push
das
cmpsl
or
std
call
mov
xchg
aam
adc
sbb
sbb
and
test
repnz
daa
in
xor
pop
push
pop
xor
mov
mov
push
inc
jae
jb
mov
scas
out
loopne
cwtl
xor
sub
mov
dec
mov
sub
pop
es
inc
rol
insb
mov
into
cld
popa
adc
inc
imul
scas
lret
pop
data16
stos
pusha
movaps
std
mov
in
cmp
push
aaa
fnsave
mov
lret
cmp
xchg
ret
idivb
ljmp
ljmp
xchg
mov
adc
mov
add
addr16
pop
jno
or
enter
jbe
adc
cli
and
lds
sub
mov
inc
loopne
sbb
fs
and
adc
enter
repz
xor
mov
lret
lret
scas
adcb
popa
mov
xor
push
push
pop
pushf
sbb
jb
out
hlt
mov
hlt
push
outsl
push
mov
iret
pop
sub
or
stos
jle
addl
push
into
pop
insb
xor
icebp
add
leave
mov
cld
xor
xchg
repz
shl
inc
shll
call
jb
dec
sub
lret
adc
mov
aas
aaa
movsb
xor
aas
aad
adc
jb
movl
flds
fcoml
add
mov
pop
inc
in
cmp
sub
pushf
mull
inc
aas
and
fdivl
sarl
inc
js
push
lret
adc
inc
mov
dec
data16
movsb
repz
and
cli
scas
jbe
jmp
push
mov
inc
push
out
adc
xchg
or
add
push
arpl
ss
stos
lea
push
outsb
xlat
cmp
scas
enter
rclb
xchg
jne
xchg
mov
mov
data16
shll
arpl
mov
push
mov
int
dec
fwait
xchg
mov
cmp
cmp
fstl
jmp
les
pop
shl
jmp
outsb
inc
or
cmpsl
scas
aas
test
pop
pop
jle
xchg
mov
jbe
and
mov
shrb
xor
mov
movsl
or
sub
mov
add
xchg
push
movsl
popf
pop
jnp
popa
inc
adc
movsl
cmc
in
pop
push
pop
add
sub
push
test
mov
aad
jecxz
sti
jecxz
dec
and
in
fildll
push
cmp
xor
leave
xorl
lret
push
adc
inc
push
stos
int3
cli
mov
jno
mov
add
faddl
mov
xor
xor
mov
out
or
js
mov
sub
je
jmp
js
pop
cs
sub
fabs
sti
lods
pop
sbb
or
jg
inc
xor
mov
ljmp
jp
mov
clc
rcll
adc
idivl
pushf
pop
clc
jg
enter
xor
icebp
push
xchg
or
sbb
leave
lcall
and
mulb
enter
cmpsl
mov
pop
ret
and
cmp
stos
and
xchg
je
icebp
jne
xchg
bound
inc
sahf
es
shll
xor
mov
scas
ljmp
inc
clc
dec
gs
dec
mov
sar
sarl
inc
xor
leave
in
push
fwait
push
aam
out
sbb
lahf
in
add
cmp
sbb
lcall
mov
std
mov
lock
add
add
je
movsl
mov
mov
adc
mov
jns
int3
sahf
subl
std
pop
dec
pop
cmpb
faddl
shlb
clc
jecxz
sbb
xchg
mov
in
test
dec
push
in
mov
jl
lret
sub
rorl
stos
pop
cmc
and
je
nop
aad
push
int
and
sbb
fisttps
jl
jg
and
push
pushf
pop
fwait
test
jecxz
or
and
sbb
bound
jno
cmp
push
xchg
imul
inc
es
repnz
adc
adcl
push
std
sbb
fimull
add
out
cmp
and
dec
movsl
ljmp
xor
stos
jnp
xchg
push
jne
xor
or
int
or
pop
decb
xchg
outsl
int3
push
ds
aad
lret
or
sbb
cmp
mov
je
loop
xor
xchg
jno
xchg
push
outsb
add
clc
test
cmpsl
mov
jecxz
and
sub
sbb
jecxz
inc
add
jecxz
mov
cwtl
mov
dec
aam
jo
cli
pop
dec
mov
clc
aad
stos
negb
js
bound
or
inc
loope
xchg
mov
xchg
jbe
add
mov
movsb
cmp
fcomi
call
push
ja
in
outsl
mov
mov
leave
rclb
rclb
inc
mov
cmp
mov
dec
lret
or
imul
sti
fimuls
sub
and
cs
mov
mov
xor
dec
adc
aas
cmp
push
jnp
out
cmp
arpl
push
mov
negb
xchg
ret
mov
rorb
lret
mov
js
push
inc
ljmp
test
adc
aas
cld
jg
imul
inc
jnp
xchg
inc
or
cvtpi2ps
fs
mov
jle
adc
ficompl
in
daa
xchg
xchg
pop
mov
sub
jns
lret
test
push
ret
mov
xorb
fwait
jle
scas
or
bound
je
outsb
outsl
jbe
and
cmp
sarl
push
push
stos
mov
push
push
mov
and
dec
imul
mov
hlt
jp
cmp
sarb
sbb
cltd
pusha
cmp
jae
movsl
out
fldenv
mov
push
movsl
lock
jbe
test
insb
add
dec
test
fcomps
push
hlt
sbb
test
pop
jl,pt
adc
jb
gs
dec
rcr
das
out
xor
cli
imul
insl
push
mov
pop
add
hlt
scas
bound
jl
in
mov
adc
sub
push
imul
inc
cld
mov
jmp
in
insl
inc
bound
or
or
inc
adc
gs
pop
loop
out
xchg
mov
pop
mov
or
aad
push
fdivl
lds
xor
mov
jp
dec
xlat
stos
mov
insb
cwtl
mov
cltd
fstpt
mov
sub
test
adc
xor
mov
sbb
gs
fsubrl
aam
mov
mov
in
xchg
popa
jae
movsb
pop
movsb
clc
sub
inc
cmpl
xor
out
cmp
push
mov
icebp
enter
dec
fcmovne
fnstenv
pop
outsb
xchg
test
not
lea
inc
mov
pop
xor
mov
xor
stc
mov
lcall
pop
add
and
out
stos
js
cmp
in
mov
cld
in
ret
xchg
mov
xchg
rcll
cmpsl
cld
cwtl
aad
outsb
push
insb
scas
inc
jp
push
mov
mov
xor
pop
mov
mov
jae,pt
shll
dec
mov
or
lods
sub
jge
inc
push
dec
pushf
das
cmp
aaa
or
add
fsubrl
ret
enter
iret
mov
inc
movsb
aad
aad
in
mov
in
jge
ss
fwait
adc
sub
or
sarb
mov
mov
sti
jmp
sti
daa
add
push
jo
and
test
out
pop
adc
or
dec
push
xchg
or
cmp
flds
push
cmp
stc
mov
outsl
jbe
sub
adc
cmp
push
scas
in
mov
or
mov
jne
out
cmp
xchg
cld
sti
mov
jns
decl
xchg
jns
xorl
popf
mov
jne
lret
mov
insl
lods
cmpsb
mov
sub
jp
cmp
mov
mov
mov
or
or
and
popf
cli
loop
sub
push
xlat
xor
jp
push
inc
clc
pushf
push
add
add
sbb
pop
and
sub
add
aaa
cmpsl
aam
inc
in
lret
mov
inc
push
aam
pop
movb
dec
lods
pushf
mov
fiaddl
scas
test
sub
push
inc
xchg
inc
into
sarl
jne
push
inc
jmp
shlb
jg
jbe
fmul
jae
stos
and
mov
lcall
cwtl
cli
sbb
fdivrl
daa
adcl
inc
daa
mov
mov
sub
out
shl
pop
stc
push
pop
and
loop
push
mov
pusha
inc
dec
mov
fldl2e
hlt
jp
arpl
mov
call
cmp
xor
fcmovbe
add
push
scas
lcall
dec
push
mov
scas
and
cmp
xor
push
in
push
dec
push
fwait
inc
lods
fs
sbb
fldenv
shll
jge
push
bound
xor
sub
mov
sti
sahf
xlat
lret
aad
insb
xchg
jo
mov
clc
mov
mov
jl
pop
lods
ret
jne
out
aam
push
push
pop
inc
mov
add
lcall
sbb
roll
pusha
add
lods
mov
and
fstpl
fimull
adc
outsb
dec
arpl
sbb
jl
loopne
adc
shl
xor
popf
dec
mov
lahf
insw
ss
fstl
dec
call
aad
cwtl
sub
movsl
xor
xor
into
out
sti
dec
test
cs
pop
and
mov
sbb
lds
xor
jl
lods
sahf
mov
xchg
mov
lcall
rorb
ret
imul
aaa
jge
in
sub
sti
movsb
jecxz
repnz
mov
cmp
into
js
sbb
cmp
xlat
fsts
ja
mov
cmp
test
popa
mov
stos
pop
sub
pop
mov
lock
sub
mov
ja
dec
and
mov
inc
push
xchg
call
adc
addr16
in
mov
and
mov
and
leave
sub
mov
pop
out
push
ss
mov
adc
testl
popf
dec
lret
push
mov
in
fisubl
mov
sar
out
push
int3
xor
and
rol
lock
fsubs
xor
dec
sub
rcl
jg
mov
mov
cwtl
xchg
cli
xor
in
aas
insl
xchg
sbb
ret
xor
cli
insb
inc
push
jecxz
cltd
lahf
xchg
cmp
test
addr16
ret
sbb
add
movsl
adc
fsubl
outsb
out
push
sbb
nop
ss
xor
mov
and
outsl
cmpsb
sbb
fstl
jae
fmul
xor
mov
loope
dec
pop
jmp
pop
xchg
jnp
xor
stos
mov
jo
and
outsb
and
inc
pop
push
xchg
push
sahf
fstpl
sub
stc
mov
fistpll
leave
xchg
loopne
dec
popa
push
mov
cltd
in
pop
xchg
lds
mov
iret
ror
ja
jbe
push
test
or
sub
mov
push
sub
fimull
fbstp
cltd
pop
fs
push
addb
sub
arpl
lods
jg
movsl
scas
mov
mov
or
pop
lret
lret
fcmovbe
repnz
ja
jbe
notl
sub
jae
xchg
xor
es
movsl
sub
push
clc
lds
fadds
sbb
out
sbb
test
and
jle
jmp
into
out
mov
int3
pushf
add
loope
dec
lods
into
addr16
scas
jo
iret
mov
test
lret
pop
xchg
sub
test
in
in
je
adc
mov
and
fcmovb
pop
rolb
pop
xchg
mov
xchg
cmp
call
dec
inc
icebp
call
cwtl
inc
inc
adc
jmp
ret
in
out
bound
xor
inc
add
jbe
loope
pop
sub
push
data16
jnp
jns
fdivs
lods
das
dec
mov
jp
lahf
aaa
push
add
pop
aam
fildll
pop
clc
push
std
push
cli
mov
rorl
loopne
add
cltd
mov
xchg
inc
pushf
add
loopne
mov
pop
mov
test
and
ja
pop
add
pop
adc
cmpsl
addr16
jmp
xor
das
divb
mov
sbb
hlt
pop
into
push
xor
popa
xchg
outsb
aaa
fstl
mov
sar
adc
lods
sub
push
or
filds
jle
jg
mov
les
pop
out
cli
popa
push
out
pop
cmp
daa
int3
in
mov
test
pop
jle
hlt
scas
adc
mov
xlat
cmc
movsl
ror
das
out
mov
les
mov
pop
sti
popa
fstpt
sbb
cli
in
sbb
popa
pusha
mov
cli
sub
mov
sbb
dec
dec
inc
mov
cmc
xchg
add
pop
shrb
stos
xchg
dec
das
test
mov
js
mov
jle
mov
jmp
sbb
les
int
bswap
jp
and
stc
push
xchg
xchg
mov
lea
xchg
stos
cwtl
adc
jp
cmp
pop
loopw
jge
insl
xor
std
or
jmp
ja
sub
jbe
mov
shrb
mov
lret
test
xor
and
sbb
pushf
fwait
leave
add
dec
xchg
inc
jb
pop
lret
loop
inc
inc
les
lds
mov
lea
mov
add
ljmp
cmpsb
hlt
mov
xchg
jae
outsl
sahf
adc
arpl
inc
inc
mov
add
mov
mov
lods
add
cmpsl
arpl
sbb
pop
jns
inc
sub
mov
ljmp
cmp
mov
cmpsw
aas
lock
pop
jne
jge
js
dec
pusha
bound
pop
jne
xchg
push
cmp
cld
mov
dec
xchg
lahf
fcmovne
jb
ljmp
mov
mov
dec
mov
into
jbe
jno
sbb
mov
cmp
scas
test
cli
push
jae
mov
pop
lret
xchg
fwait
ds
popf
xlat
mov
sbb
pop
push
mov
aaa
pop
jno
adc
icebp
int3
rolb
xorb
adc
test
in
and
cltd
repz
aas
in
std
lret
xchg
mov
xchg
stc
lret
add
xchg
pop
out
jecxz
das
fst
dec
push
aaa
arpl
into
stos
cmp
repz
das
cmc
cmp
dec
dec
xchg
sub
or
ja
jne
add
and
shlb
insb
aaa
jns
and
cmp
jge
or
jecxz
mov
mov
sbb
or
rol
and
mov
aas
jne
push
test
adc
mov
push
push
inc
scas
negb
mov
loopne
push
lret
push
inc
jmp
sbb
sbb
mov
cwtl
xor
mov
out
add
lods
xchg
fdivr
mov
loope
adc
and
mov
pop
mov
mov
sbb
mov
nop
or
adc
test
lods
dec
js
xor
fisubl
pop
xlat
sbb
test
fmull
testl
mov
mov
push
daa
pushf
imul
cwtl
xlat
jb
xor
xor
mov
dec
jns
pop
pop
shl
push
ret
xchg
sub
inc
out
and
push
xchg
int
xchg
call
cmp
mov
cmp
mov
or
mov
filds
xchg
inc
pop
lods
lods
mov
notb
dec
pop
cmp
mov
notl
jmp
adc
test
sbb
pop
jecxz
int
imul
cmpsl
aaa
xor
ret
xorb
js
jbe
push
add
iret
pop
popf
jp
lret
jne
daa
cmp
xor
jle
and
dec
dec
cmp
jns
mov
xor
mov
pop
adc
jp
js
rorl
rolb
mov
dec
cltd
js
das
aam
js
hlt
or
and
jo
ds
rcr
lods
in
mov
pop
mov
pop
cs
movsl
jnp
arpl
dec
jae
push
lock
das
adc
inc
xor
pop
dec
enter
enter
sbb
pop
sbb
gs
int
lock
push
fucomp
lret
and
stos
and
sub
inc
inc
jo
iret
xchg
movsl
pop
sub
jl
out
in
mov
mov
cmp
pusha
fistl
mov
jb
pop
pusha
jge
icebp
xor
jns,pt
jae
or
orl
jp
jae
out
daa
lret
shll
or
xor
mov
dec
xchg
pop
sbb
push
push
notl
sbb
clc
xchg
loop
test
imul
push
in
dec
pop
scas
ja
jle
dec
lret
mov
addr16
aam
dec
std
xchg
jmp
adc
dec
xchg
repz
mov
in
aas
mov
scas
sbb
loop
les
add
sbb
cmp
orb
mov
mov
stos
je
fnstenv
call
pop
pop
add
addr16
jnp
cmp
scas
xchg
jmp
or
addr16
pop
adc
cmc
dec
xchg
xor
ret
cmc
xchg
push
int
ffreep
je
push
and
pop
in
cmp
cmpsl
add
add
js
xor
imul
stc
push
xor
out
jmp
dec
out
sub
aaa
jne
mov
adc
push
jne
in
dec
ss
pop
aad
imul
push
in
in
cmp
mov
or
or
xchg
pop
adc
push
imul
ljmp
dec
out
icebp
stc
xchg
mov
mov
sbb
lock
adc
jnp
loop
sbb
orl
movsb
aam
cmp
sbb
jmp
jle
push
rcrb
ret
or
pushf
loopne
fldcw
inc
dec
xor
iret
pop
cmp
push
sbb
adc
mov
jp
add
clc
fildl
pop
mov
das
pop
out
sub
push
loopne
xor
xchg
mov
mov
dec
mov
xchg
jecxz
add
adc
inc
test
cli
inc
clc
sub
loop
adc
fwait
dec
or
cwtl
mov
popa
les
outsb
pushf
fsubr
jne
dec
in
enter
mov
bound
sbb
pop
jmp
lea
stos
jo
popa
addr16
fistps
and
shll
in
push
imul
mov
push
jo
lds
sub
pop
mov
adc
movsb
imul
pop
jbe
xchg
pushf
jns
push
in
je
in
rorl
jle
ja
cmp
mov
inc
outsb
sbb
cmp
pushl
push
fisubs
cmp
pop
cld
scas
dec
aad
cmp
les
pop
movsb
rcrb
mov
into
fwait
add
inc
jb
mov
add
add
roll
in
aad
flds
cltd
jo
test
cmp
pop
xrelease
hlt
imul
mov
pop
incl
call
add
in
out
adc
add
stc
jmp
jmp
jne
adc
popl
jge
loopne
fucomi
stos
cmp
cmpsb
loop
or
movsl
xor
lret
nop
dec
sub
or
jle
mov
mov
stos
stc
mov
mov
dec
or
pop
into
into
mov
push
cmpsb
xchg
data16
push
push
cmpsl
and
xchg
jg
pop
add
cmp
adc
mov
push
inc
cmp
inc
add
or
xchg
pop
imul
imul
pusha
out
pop
imulb
and
int
and
cltd
mov
push
cwtl
jne
push
into
fcompp
nop
in
enter
arpl
sub
mov
add
insl
push
sub
iret
xchg
cmc
std
pop
add
inc
adc
scas
es
pop
jno
pop
mov
cwtl
fsubrs
jno
inc
mov
test
cmpsb
mov
add
inc
cmpsl
cmp
push
sbb
lds
sub
xchg
popa
sbb
loopne
fistpll
lcall
mov
cmpsl
dec
xor
or
and
cs
scas
sub
sbb
dec
dec
adc
xor
cmp
sub
addr16
jmp
in
pminsw
or
pop
test
xor
mov
jns
add
sub
push
cmp
jnp
movsb
mov
cmp
fdivrs
xor
cmpsl
sbb
mov
lds
add
jge
mov
repz
mov
jbe
repnz
mov
and
adcl
mov
lea
mov
dec
jg
pushf
bound
ja
mov
into
int3
and
xor
push
test
xchg
add
jp
xor
add
lret
mov
das
mov
mov
repz
inc
fidivs
je
or
jmp
push
rorb
jge
insb
pop
push
cmp
cltd
subl
push
ja
pop
movsb
push
daa
es
or
add
dec
adc
shll
pop
stc
mov
dec
sbb
or
sarl
mov
jl
mov
jae
sbb
sbb
pop
cmp
std
jb
jge
shr
pop
rorl
dec
mov
ljmp
add
leave
jnp
mov
mov
mov
pusha
inc
scas
xor
jle,pt
add
mov
sbb
dec
sahf
imul
test
negb
pop
inc
popa
mov
sti
push
jae
mov
or
sti
mov
pop
out
je
loope
in
mov
adc
iret
push
test
jmp
or
cmp
inc
addr16
push
cmp
sbb
outsl
jo
out
scas
mov
in
add
arpl
and
cmc
xor
sub
ss
sub
adc
push
mov
into
popa
in
inc
in
adcl
or
lea
ljmp
jae
mov
jp
pop
push
pop
push
cmc
sub
sti
sbb
repz
sbb
aam
les
push
pop
in
sbb
pusha
movb
insl
fwait
xor
dec
ljmp
sub
or
lahf
mov
inc
call
cmpsb
es
dec
sbb
orl
cmpsb
mov
jbe
lock
pop
sti
jp
add
aaa
es
pusha
and
jle
push
jbe
es
mov
cmp
or
and
jecxz
fwait
cltd
mov
cmpsl
add
addr16
mov
negl
insb
mov
dec
cmpsl
out
xlat
pop
mov
rcll
xchg
dec
or
and
ja
int
push
jp
bound
stos
stc
inc
div
inc
rclb
je
hlt
inc
sar
mov
inc
dec
hlt
cmpsl
mov
cs
sub
or
sub
out
mov
jo,pn
test
jbe
or
and
daa
jle
lds
and
mov
les
jnp
add
loopne
lds
insb
jns
mov
xorb
mov
ror
cmp
push
test
jne
mov
pop
sbb
push
jmp
mov
loope
xor
cs
dec
push
je
rep
sub
and
dec
jnp
insl
lds
dec
lods
cmp
xor
dec
sti
jecxz
dec
pop
jge
jmp
clc
mov
jp
cs
cmp
inc
lret
and
int
or
fidivl
cmp
sub
fbld
clc
test
push
mov
fistl
mov
dec
out
push
cmp
jl
add
mov
mov
add
mov
xchg
bnd
pop
das
pusha
xor
out
test
out
push
fbstp
mov
aam
pusha
inc
lahf
test
pop
ror
jnp
out
sub
lret
pop
out
inc
sub
out
or
jae
dec
rcr
dec
into
xchg
addb
mov
bswap
mov
push
jb
pop
test
pop
pushf
sbb
mov
xor
loope
repnz
adc
jb
sub
mov
cwtl
inc
in
mov
add
shrl
lods
enter
movsb
insb
out
sbb
jae
inc
gs
movsb
add
rcll
adc
or
cmp
xor
enter
xor
popf
mov
push
inc
mov
xchg
push
pop
pop
mov
xlat
iret
enter
pop
sarb
addr16
and
jb
push
push
jae
jl
ret
and
dec
mov
ljmp
enter
jmp
adc
cwtl
mov
daa
xorb
dec
in
push
pop
bound
in
inc
adc
and
adc
cld
or
cli
in
add
inc
mov
into
cmp
mov
outsl
loopne
insb
test
jae
mov
cltd
add
lret
stc
cmp
sarl
repz
add
and
xchg
push
aad
rorl
iret
lahf
popa
int3
cwtl
fdivs
push
iret
mov
enter
jnp
sbb
xor
aam
es
test
cltd
and
movsb
fistpl
fisttps
jmp
pushf
jne
rolb
dec
pop
pop
vmread
push
mov
sahf
inc
mov
addb
or
xorl
insl
test
push
iret
insl
mov
jg
into
pop
mov
inc
pop
jle
push
push
xchg
jmp
repnz
mov
stc
mov
scas
jbe
testl
cld
xchg
adc
mov
test
mov
xor
sub
iret
mov
xor
adc
add
lock
dec
sub
pop
fisubrs
sbb
popa
pop
repz
mov
jg
sbb
or
fdivp
gs
push
nop
or
flds
xchg
adc
inc
out
lods
repnz
sub
mov
repnz
mov
lcall
mov
gs
std
mov
mov
mov
sub
jge
jb
xor
and
and
or
js
movsb
and
loop
dec
xor
ret
call
icebp
jge
cmp
push
mov
pop
inc
mov
xchg
cmp
mov
push
imul
cwtl
cld
test
inc
mov
push
or
cmc
outsl
push
subb
adc
mov
sbb
je
lret
push
sub
call
data16
ljmp
adc
stos
aam
ja
cwtl
push
xor
push
mov
nop
movsb
mov
push
push
dec
or
dec
dec
loope
neg
mov
hlt
or
cltd
clc
insl
cs
cmp
mov
aam
les
movsb
aaa
sbb
jns
aam
loopne
pop
sub
insl
jae
repz
push
fcoml
inc
lahf
movsb
in
and
shr
dec
mov
addr16
jecxz
mov
out
loop
inc
xchg
xor
incb
pop
sbb
ds
cld
cmc
pop
test
repz
push
adc
adc
cmp
push
addl
cmp
xchg
lcall
in
sbb
das
pop
sub
scas
sbb
sbb
je
mov
pop
movsb
xchg
mov
fidivs
inc
out
stos
mov
add
les
cmp
mov
pop
mov
cmp
aad
pop
in
mov
fwait
push
jge
dec
hlt
mov
adc
lea
and
data16
jbe
dec
pushf
jp
sbb
jbe
or
test
push
jb
push
mov
or
jmp
sbb
insb
pop
daa
pop
xor
mov
stos
shrb
stos
aas
or
sbb
sbb
sbb
cmp
xchg
or
and
insb
pushf
jle
outsb
add
fimull
jb
mov
jl
push
dec
push
sbbl
cmpsb
call
je
cmp
xchg
test
lock
jecxz
and
leave
xor
xor
cli
das
mov
lcall
fwait
ds
dec
jne
push
insl
aas
shlb
scas
movsl
out
or
or
movd
lcall
scas
sub
arpl
ljmp
push
hlt
sti
test
jne,pn
das
inc
or
sarb
jge
sub
adc
dec
aas
ds
pop
lret
rep
pop
push
xchg
push
push
call
pandn
pop
mov
jg
mov
dec
enter
test
pop
rol
add
mov
cmovns
les
daa
mov
adc
pop
aaa
xchg
popf
xchg
fisttpl
mov
fs
leave
jmp
add
cmp
mov
ljmp
mov
push
jnp
inc
inc
pop
pop
mov
jmp
cltd
dec
mul
push
add
lods
jecxz
movsl
jp
jge
call
nop
insb
lds
jg
xor
jge
pop
int3
inc
xor
faddl
push
xor
arpl
push
fistpll
xor
or
dec
add
clc
cmp
pop
roll
inc
pop
mov
jge
push
test
xor
out
addr16
or
xrelease
aaa
jnp
xor
xor
icebp
dec
mov
mov
addr16
sub
and
shrb
mov
dec
xchg
xor
xor
xchg
adc
fsubl
sbb
scas
inc
icebp
clc
push
lea
in
mov
push
xlat
lods
in
fistps
pop
jns
imul
pusha
xor
aaa
lds
sahf
jecxz
mov
pop
cmp
push
mov
push
xor
fisttpl
xor
movsl
nop
js
xchg
lret
gs
nop
insb
in
push
inc
lds
or
addr16
sub
jle
aam
push
pop
hlt
pop
inc
lods
fidivs
jno
insl
push
loope
sbb
aad
test
test
ret
lds
push
ret
mov
ret
leave
movsb
and
lcall
enter
decl
stos
adc
in
cld
sbb
or
push
xor
jnp
fwait
ret
mov
and
add
repz
imul
mov
stos
jns
push
mov
aaa
mov
push
aam
push
cmp
hlt
scas
mov
jns
mov
mov
mov
dec
clc
lret
mov
enter
add
mov
fadds
testb
mov
stc
xchg
loopne
mov
mov
and
or
push
cmp
aad
adc
enter
lahf
shl
push
les
popf
stc
inc
pop
sti
pushf
or
cmp
arpl
and
imul
addr16
push
sti
pop
cwtl
in
rorl
pop
push
sub
jge
clc
int3
pop
in
fdivrp
rolb
out
add
push
ljmp
xor
aas
shr
adc
popa
add
mov
mov
sub
popf
add
add
fstps
jmp
mov
fadd
lcall
out
or
movsb
adc
lahf
negl
dec
pop
stos
stos
cmovbe
mov
loop
xchg
aaa
jne
mov
repz
sbb
pop
adc
loop
and
xchg
call
sub
inc
and
mov
pop
jbe
mov
test
loopne
loope
add
pushf
insb
push
jnp
cmp
and
int
into
or
arpl
inc
mov
adc
mov
or
out
adc
inc
enter
jge
xchg
mov
push
push
dec
rorb
into
push
push
sub
xor
loope
push
loope
leave
cltd
cmc
add
daa
inc
jns
xor
les
mov
cmpsb
hlt
pop
stc
dec
fsubr
lahf
rorb
cltd
call
pop
test
ret
bound
push
jmp
out
in
test
add
in
dec
repz
mov
or
sbb
pop
pop
add
dec
xor
es
lods
lret
mov
fisubrl
xchg
mov
inc
insb
or
mov
adc
pop
mov
aad
xchg
adc
and
lds
ret
jnp
daa
aad
sub
jne
lret
divl
rcl
mov
xchg
sbb
bound
jp
or
adc
ret
mov
jbe
movsb
fstpl
sbb
ret
aas
arpl
js
out
pop
jo
int3
pop
mov
push
enter
mov
rcrb
shrl
mov
xchg
sub
outsb
jbe
adc
push
push
xor
wrmsr
sbb
out
stos
cli
adc
lea
repnz
ljmp
dec
sub
pop
call
mov
aad
insl
movsb
or
pop
pop
pop
imul
mov
repnz
fnstenv
seta
leave
ret
mov
jp
xlat
or
out
bound
popl
inc
fidivs
orl
mov
scas
mov
jg
sbb
xchg
movsb
push
es
test
fcoms
mov
xor
jo
inc
adc
sbb
imul
out
pcmpgtd
loope
jmp
dec
pushf
xor
cmpsl
leave
test
inc
insl
mov
adc
out
shlb
pop
fsts
je
hlt
ljmp
jg
aas
out
xchg
lods
divl
sbb
aaa
jno
pop
int3
adc
xchg
jl
call
pop
cmp
icebp
gs
mov
jno
pop
fbld
popf
add
cmp
fwait
jge
rolb
sbb
push
adc
pop
mov
and
xor
dec
mov
out
adc
aaa
imul
jbe
jmp
mov
pop
mov
aad
lods
mov
test
icebp
mov
cmpsb
jmp
icebp
dec
clc
push
int
xor
inc
lret
cs
mov
push
jae
rcrl
stos
mov
or
stc
sub
sarb
jl
testl
lods
sub
fsubs
loopne
dec
int3
iret
jns
xor
jns
push
jne
pop
shll
int
mov
scas
push
mov
add
sbb
inc
xchg
push
adc
xor
and
idivb
mov
xchg
call
loopne
rorl
mov
sub
lds
jnp
repnz
repz
out
enter
bound
xorl
add
xchg
lods
pushf
xor
js
in
sbb
and
int3
ja
mov
fdivp
test
sarb
add
xchg
fs
cld
and
mov
shrb
ds
inc
mov
call
into
out
mov
ljmp
mov
ds
popl
scas
pop
out
outsl
pop
stos
leave
imul
in
xchg
dec
test
mov
pop
cmpb
xchg
out
adc
mov
xor
les
nop
jle
cmp
pop
add
dec
in
call
xorl
or
psrld
int3
adc
dec
dec
mov
sbb
shlb
fisttps
fs
xor
cli
loopne
dec
lret
ret
out
dec
fildl
or
leave
cmp
stos
push
lds
das
repz
leave
mov
ret
lods
test
jge
daa
stos
sbb
pop
xchg
jo
bound
mov
and
adc
cltd
loope
loop
test
outsb
push
cmp
mov
std
cmpsb
dec
xor
pushf
aam
cli
mov
fisubrl
lcall
je
outsl
out
mov
mov
fimull
cltd
ficoml
movsl
pop
insb
pop
std
lcall
push
ss
addr16
leave
test
out
mov
stos
sqrtps
filds
loop
loopne
iret
sbb
inc
outsb
mov
dec
jne
inc
inc
add
cmp
jecxz
lcall
out
stos
cltd
jbe
and
pop
test
jge
daa
outsl
sbb
mov
outsl
mov
shlb
sub
lea
mov
cmp
sbb
cmpl
or
pusha
mov
adc
jbe
inc
xchg
cld
repz
scas
jp
dec
notb
lds
fstpt
mov
mov
fwait
out
xchg
loope
lea
nop
sbb
jne
cmp
dec
push
cs
sub
mov
or
lods
lea
aas
cmp
mov
scas
in
xor
pop
and
cli
fldl
insl
insb
je
or
jae
cmc
ljmp
cmpsl
xor
and
cltd
cwtl
inc
movsb
push
xadd
mov
mov
or
and
inc
jle
mov
xor
pop
mov
dec
iret
je
pop
jmp
lcall
test
cmp
inc
mov
in
push
sub
aaa
add
movsb
xor
dec
push
push
test
sti
int
cmp
subb
fucom
jo
addl
je
jbe
add
mov
ror
icebp
fistps
in
cmp
pop
or
lods
repz
cltd
dec
xor
push
push
cli
add
mov
mov
mov
stos
mov
inc
xor
pop
adc
ss
jbe
into
rorb
filds
arpl
lcall
jmp
lock
xchg
push
lcall
add
pop
push
push
fsubl
adc
mov
sahf
test
inc
or
popf
and
or
popf
cmp
leave
inc
adcl
sbb
loopne
cmp
adc
xchg
imul
xchg
cmc
ljmp
push
mov
add
sbb
mov
sbb
std
es
push
test
in
xchg
lret
add
push
dec
mov
dec
bound
mov
les
and
outsb
mov
or
loopne
loope
mov
xchg
and
test
test
pop
ret
decl
push
sub
and
pop
fdivl
fmull
orb
daa
sti
xor
mov
sub
repz
pop
lcall
mov
sarb
inc
jg
int
cmp
incl
xlat
out
push
xchg
daa
andl
push
les
cmpb
mov
lret
test
jno
mov
testb
xchg
cmpsb
es
out
inc
scas
cmpsb
pop
jno
arpl
shll
push
mov
push
pop
xlat
pop
adc
pusha
in
push
les
addb
mov
int3
test
sahf
das
outsl
and
mov
add
insl
xor
and
sbb
mov
lret
add
sbb
or
pop
repz
sbb
clc
es
lods
xor
and
cmpsl
add
or
and
mov
mov
cwtl
pop
pop
addr16
loop
jmp
inc
push
je
push
fsubs
notl
push
add
js
xchg
nop
or
push
lock
adc
mov
jmp
sub
sti
pushl
xchg
sahf
fdivrp
cmp
pusha
xor
xor
call
jle
sbb
pop
adc
int3
xor
ljmp
repz
jns
ret
cmc
lret
jne
pop
and
jae
shrl
push
sbb
pop
xchg
cmp
xor
ljmp
adc
pop
fstpt
movsb
xchg
cmp
fadds
inc
rcrb
ljmp
lods
rol
lret
lret
fwait
push
ret
out
xchg
mov
pop
ljmp
sar
mov
jne
int
add
jmp
inc
mov
scas
mov
add
mov
aas
daa
cli
lock
roll
cmp
pop
lds
cmovge
or
iret
cld
arpl
push
pushf
shr
sbbl
popa
xchg
pop
inc
aam
aad
ss
push
ds
add
shll
xchg
sub
xchg
xchg
mov
mov
paddusw
mov
or
dec
out
sbb
mov
ss
sbb
jb
push
and
mov
mov
mov
insl
lcall
and
xchg
and
jge
fnstcw
movsl
in
stos
xor
filds
shrb
sahf
and
jbe
lret
imul
mov
aaa
fcomi
lcall
inc
hlt
push
cs
pusha
test
lahf
mov
lcall
dec
push
loop
xor
cmpsb
xchg
fwait
mov
out
sub
ret
adc
insb
push
cmpsb
xor
fbld
mov
cwtl
xlat
dec
adc
stc
test
mov
xor
pop
cmp
mov
sbb
rorb
fsubs
mov
sub
push
sbb
push
js
pop
loope
cmp
xchg
push
outsl
mov
jne
orl
test
shrb
clc
inc
or
pop
test
cli
jmp
scas
lcall
cmp
cmp
mov
jecxz
outsb
mov
cli
add
pop
add
ret
lcall
jne
and
xchg
jb
bound
mov
push
xchg
jp
aad
mov
inc
mov
mov
jbe
das
mov
xchg
and
orl
das
fiaddl
cmpsb
jne
pusha
adc
cmpl
lods
dec
adc
sbb
test
or
lods
xor
ss
push
dec
jp
and
pop
xor
scas
ret
pop
sbb
fdivrs
add
adc
pop
mov
adc
fbstp
xor
add
jmp
inc
inc
leave
loopne
sub
call
jecxz
or
test
outsl
mov
dec
cltd
sub
mov
push
sarl
ret
cwtl
add
mulb
pop
or
xlat
mov
adc
sbb
cmp
mov
lret
orl
add
scas
ljmp
imul
push
jp
dec
or
inc
add
sti
pop
mov
mov
push
int3
adc
nop
dec
and
pop
in
pop
adc
jb
fs
sbb
negb
mov
mov
movsb
jecxz
rcr
push
inc
push
pop
adc
jnp
ret
mov
push
mov
ror
mov
or
fbld
jnp
mov
xor
push
fidivrl
sbb
ds
push
pop
sub
out
sub
sbb
push
sbb
dec
mov
mov
cmpsb
dec
or
xchg
add
mov
sub
mov
ss
dec
mov
cwtl
cmc
mov
adc
aad
mov
inc
orl
divl
mov
lea
dec
mov
or
sbb
pop
fnstcw
mov
mov
adc
and
or
lcall
notl
mov
fimull
xor
test
hlt
out
sub
dec
sub
repnz
hlt
ss
or
jns
xor
adc
inc
cmp
jle
inc
or
fcomps
push
pop
mov
lods
dec
pop
add
dec
sbb
enter
adc
lds
lret
inc
scas
fstp
dec
fs
add
sbb
inc
jno
cmp
mov
adc
ljmp
ljmp
push
or
cmp
faddl
call
shll
loope
mov
aas
jb
adc
shrl
cmp
add
jo
adc
xor
xchg
cmp
insb
test
push
cmp
dec
sbb
pop
xor
add
dec
sub
arpl
pop
mov
repnz
pop
out
sbb
xchg
ficoml
push
std
or
out
out
push
pushf
mov
loope
subl
into
or
fdivrl
fdivrl
mov
loop
ret
mov
or
pop
mov
mov
cmp
jb
xor
fcoml
mov
mov
test
imul
adc
or
xor
or
lods
mov
loop
outsl
repnz
add
jmp
xchg
mov
jg
or
pop
enter
ror
sbb
ds
jle
inc
sub
popa
lods
cld
cltd
sbb
sbb
push
fldenv
imul
cltd
xlat
lcall
pop
cmpsl
in
and
jno
xchg
mov
mov
mov
jnp
push
mov
imul
aad
push
or
pop
das
xchg
int
mov
aam
add
scas
leave
bound
pop
pushf
sub
adc
xchg
mov
push
lcall
mov
repnz
pushf
fwait
test
movsl
push
xor
lahf
xchg
fstl
sub
nop
mov
mov
push
js
dec
movsl
in
jo
daa
xchg
pop
mov
lea
aas
push
lock
bound
negb
iret
cmpb
sub
mov
jne
bound
mov
cmp
xchg
jo
push
call
scas
push
xchg
fs
xor
fnstsw
or
add
xchg
call
jl
jp
jbe
popf
icebp
insb
xor
inc
out
clc
xchg
mov
adcl
xchg
pop
or
sub
gs
add
adc
or
movsb
arpl
dec
push
mov
roll
and
mov
pop
pusha
nop
sarl
data16
dec
repz
stos
fisubs
xchg
int3
push
sbb
outsb
int
pop
lret
cwtl
mov
loopne
xchg
das
or
push
pop
fimuls
inc
xor
inc
jae
addr16
mov
lret
ds
adc
je
loope
test
jno
lock
xor
sbb
add
adc
lock
xor
out
xor
nop
mov
in
inc
int
into
popa
enter
pop
xor
out
les
shll
jecxz
and
lret
cltd
cwtl
aas
jnp
jmp
pop
imul
push
addr16
adc
xchg
lcall
mov
hlt
push
xchg
leave
cmp
dec
data16
add
inc
sub
fdivl
daa
mov
into
je
jae
imul
add
mov
mov
mov
and
xor
iret
cltd
dec
enter
and
mov
xchg
mov
das
mov
lock
lcall
and
cmp
push
cmp
cltd
cld
popf
xchg
cmp
ret
fists
repnz
in
inc
jge
movsb
and
addr16
sbb
icebp
hlt
std
in
fmuls
ljmp
imul
xchg
in
rorl
imul
dec
mov
jmp
das
inc
sub
les
mov
hlt
imul
and
and
jno
lods
out
push
xlat
pop
adcb
dec
pop
scas
sarb
shr
push
jns
jg
hlt
andl
jle
cs
lcall
ss
sub
cmp
in
imulb
mov
out
dec
cld
dec
daa
dec
adc
int3
mov
jle
adc
or
outsl
and
sbb
iret
cmp
pop
nop
in
out
inc
mov
shlb
cmc
dec
dec
insl
pop
push
leave
sub
push
and
or
enter
dec
mov
pop
arpl
pusha
or
loopne
mov
hlt
cwtl
push
jae
daa
fsub
cmp
dec
dec
mov
inc
rolb
jecxz
mov
es
mov
addr16
outsl
pop
test
cmp
lods
call
icebp
mov
mov
push
push
std
lock
cmp
mov
nop
imul
ret
jo
test
push
js
dec
js
sbb
sbb
out
fcomps
sbb
cmc
jbe
out
xchg
jge
cwtl
mov
jg
sub
ljmp
sti
mov
in
in
push
ss
fucom
lock
loope
dec
xor
ficompl
loope
and
popa
add
sub
xlat
adc
fcmovu
lods
int
lods
out
pop
jns
and
dec
imul
mov
xor
inc
mov
daa
xor
aas
mov
or
xchg
xlat
orl
xchg
ret
leave
pusha
ret
pop
mov
and
call
jo
pop
xchg
outsb
push
cmp
popa
std
out
mov
fs
cmp
shll
loope
out
cld
and
sub
ret
lret
push
sbb
jp
call
inc
fmuls
icebp
fwait
int3
add
in
dec
adcb
lahf
adc
jg
lods
jmp
daa
xchg
xchg
lods
arpl
popa
adc
lret
mov
call
jge
cmp
fs
adc
add
fimuls
loop
arpl
mov
jns
mov
fildl
add
jns
jo
roll
adc
inc
mov
add
fisubl
pop
adc
sarb
jl
xor
aam
mov
jge
or
fisubrl
pop
xchg
movsl
add
xor
pop
dec
adc
sub
jecxz
dec
adc
mov
lret
test
cli
cmp
mov
sub
cmp
negl
or
inc
jp
pop
imul
xor
repz
add
scas
ja
xchg
lds
dec
aad
divb
ja
jnp
or
int3
pushf
sbb
and
dec
xchg
xor
xchg
cmp
bndldx
dec
and
dec
sub
adcl
insb
addb
push
lock
inc
pop
sahf
mov
mov
stos
out
shrb
shll
lcall
pushf
int
nop
je
lahf
imul
add
inc
ds
push
dec
adcb
xchg
mov
test
add
clc
lahf
repnz
mull
cmp
iret
sahf
xchg
cmpsl
mov
xlat
push
in
xor
fs
fdivp
nop
add
mov
mov
ja
mov
cmp
mov
iret
mov
cmp
pop
adc
mov
int3
cmp
and
fwait
and
pop
jp
xchg
cmp
cmpsl
lret
xchg
dec
outsl
les
mov
ret
sub
es
sbb
mov
xchg
push
lods
enter
or
mov
ljmp
xor
xchg
adc
sti
inc
ljmp
and
das
pop
mov
cwtl
aad
addb
rorl
leave
mov
ror
pop
mov
test
push
enter
dec
cmc
mov
cld
fstpt
loopne
sti
call
das
xor
and
cmp
push
sub
inc
inc
fistps
mov
jmp
adc
sbb
jle
jl
push
sub
xor
jp
insl
push
iret
or
movsb
mov
cmp
dec
add
xlat
adc
inc
jle,pt
sub
xchg
rcrl
adcl
mov
jno
in
mov
mov
add
repz
jo
cs
cmp
sahf
addl
pop
mov
in
sar
ret
lcall
out
mov
mov
ret
mov
or
push
sbb
stos
jne
jg
pop
push
not
leave
jb
inc
movsb
push
scas
popa
jmp
sbb
cld
cmp
push
add
ret
xchg
jg
mov
test
push
loope
sahf
fwait
mov
stos
adc
int
xchg
mov
fcoml
test
ret
add
lret
xchg
sahf
and
pop
js
hlt
iret
daa
daa
sbb
dec
push
cmpsl
outsb
jg
insb
js
imul
js
jno,pt
and
lds
ficoms
pop
sarb
xor
repz
xchg
xchg
popf
stos
sbb
mov
movsl
xchg
adc
push
pop
jle
into
mov
sti
or
aam
jb
or
push
ljmp
test
jb
inc
pop
ficoms
test
xchg
mov
add
clc
int
xor
mov
fwait
mov
mov
cmpl
sbb
dec
add
sub
scas
jne
iret
sahf
in
pop
jp
fucomp
out
and
sbb
insl
dec
and
inc
xchg
cmp
mov
xchg
mov
into
jl
xchg
ror
push
lret
push
mov
cltd
repz
scas
ja
xchg
repz
mov
pop
mov
sub
in
jb
adc
les
repz
lods
add
movsl
into
ret
jae
lcall
inc
icebp
push
xchg
and
repnz
scas
and
dec
add
mov
int
push
sarb
mov
xor
dec
pop
in
mov
adc
loopne
cmp
call
test
in
hlt
std
sbb
mov
add
out
xchg
or
mov
iret
pop
addr16
inc
pusha
xchg
add
shrl
hlt
and
sbb
stos
xchg
cld
xor
pushf
lea
test
nop
jg
jbe
or
push
cmp
roll
jmp
mov
jecxz
scas
pop
enter
je
push
xorb
cmpl
loop
push
dec
sbb
arpl
rcrb
pusha
fcomip
jo
scas
cwtl
xchg
test
lds
mov
addl
jl
inc
loop
jl
bound
cmpl
xchg
stos
stos
mov
push
sub
data16
jae
fwait
and
mov
and
and
and
out
out
fimuls
dec
es
push
mov
fdiv
rol
out
test
stc
mov
xor
jnp
in
pop
lods
adc
sub
xor
std
dec
ret
push
stc
dec
test
mov
movsl
mov
mov
fcoml
leave
cmpsl
mov
mov
repnz
pcmpeqw
pop
lods
outsb
adc
call
cmp
pop
or
jg
fisubs
lcall
or
test
popaw
sub
loope
push
sub
add
incl
cld
push
or
stos
xchg
cmp
sbb
sbb
and
fidivrl
call
test
mov
cmc
xchg
lret
test
lahf
in
inc
inc
pop
call
jle
outsb
fnstcw
push
js
mov
and
and
roll
incl
or
and
call
xor
ja
stc
xchg
cli
add
jbe
add
adc
mov
ljmp
negb
or
aad
adc
mov
daa
push
mov
xchg
ja
lods
mov
ja
call
imul
jns
insl
mov
mov
push
xchg
xor
jg
jae
aad
cmc
push
inc
aam
and
sbb
cmp
clc
push
push
ja
sub
mov
or
aas
cmpsl
int3
cs
aam
outsb
mov
xlat
mov
sub
in
jp
inc
cli
stc
mov
iret
fsts
push
mov
sti
push
pop
cld
mov
mov
call
aam
gs
adcl
pop
sti
xchg
xor
jl,pt
pop
mov
inc
jnp
mov
dec
cs
int3
cmp
xor
dec
insl
lret
dec
popf
fstps
lds
mov
ja
stos
fstpl
aad
rclb
ret
mov
adc
fstl
addr16
xchg
sub
mov
lock
jp
and
fidivs
inc
pushf
xchg
mov
lret
loop
xchg
aas
and
loopne
out
daa
into
repnz
jge
fsqrt
int3
xchg
sti
mov
adc
lcall
ficoms
push
xor
repnz
mov
mov
cmp
std
xchg
fs
imul
xchg
hlt
mov
add
mov
jbe
lcall
xor
clc
cs
sbb
add
add
xchg
jnp
sub
sbb
aaa
xor
dec
mov
fcom
xlat
fisttpll
sub
js
ds
cld
lods
stos
jle
jb
dec
dec
pop
cmpsl
push
xor
or
adc
in
add
cmc
push
sbb
lds
mov
lret
insb
mov
ret
aaa
lds
ljmp
addb
pop
cmp
mov
cltd
xchg
dec
test
inc
scas
sub
out
sub
das
movsb
mov
fistpll
xor
sub
fisubs
sub
mov
jge
mov
xor
stos
mov
idivl
sbb
lods
push
xor
fisubl
or
clc
mov
or
in
pop
dec
mov
xchg
rolb
xlat
mov
push
jb
lret
inc
inc
mov
inc
test
sbb
roll
jns
mov
inc
and
lahf
subl
xor
cmp
dec
pop
ss
ja,pn
mov
cmc
jnp
jae
adc
inc
pop
ss
int
jbe
add
stc
sbb
pop
movsl
push
popa
mov
in
pop
fiaddl
test
shll
dec
fidivl
xchg
lods
or
cmp
push
sbb
push
jo
mov
in
and
in
or
dec
jno
push
aad
rcr
in
int
push
jb
aam
movsb
cmpsb
sbb
cmpb
sahf
add
iret
call
lret
lods
ja
fnstsw
jnp
pop
mov
aam
push
jge
jns
pop
nop
dec
cmc
push
pop
lods
jnp
xchg
repz
or
mov
cmp
push
test
mov
pop
imul
iret
nop
movsb
xorl
icebp
mov
jle
daa
fninit
scas
or
push
aas
cmp
push
sub
out
sub
dec
clc
jo
stos
dec
jp
jp
sub
pop
pop
shlb
cmp
in
sub
jbe
dec
fcmovne
sbb
cmpsl
insl
adcb
mov
cmp
call
test
mov
xchg
xchg
dec
sbb
adc
inc
loop
iret
add
pop
adc
or
mov
push
stos
pop
loope
add
aas
jne
rcrb
mov
lret
add
aas
in
mov
arpl
dec
std
dec
inc
notb
xor
sub
pop
mov
push
cs
test
sub
mov
mov
enter
das
xchg
pop
push
mov
shlb
lret
push
insb
or
sub
ss
dec
stos
jge
pop
jno
mov
inc
andb
scas
push
pop
xor
pop
pop
push
loop
out
push
cmp
aad
adcb
jmp
pop
jl
in
scas
ficoms
test
push
rol
lcall
ja
and
add
cmp
sub
mov
xchg
sarl
imul
jo
adc
jmp
inc
cld
ljmp
ds
sbb
inc
and
xor
and
incb
pop
or
pop
cld
cmc
clc
in
pop
sbb
ljmp
in
cmp
jo
mov
push
insl
in
mov
daa
jae
pop
inc
aas
aam
or
repz
xchg
dec
das
adc
inc
xor
and
ret
mov
pushf
xor
iret
cmp
jge
inc
push
repz
pusha
ret
jmp
fs
xchg
mov
hlt
int3
mov
popf
aaa
jae
int3
and
inc
cmc
mov
inc
xchg
push
sub
mov
add
sbb
popf
popa
mov
pop
int3
sub
bt
or
pushf
lret
dec
test
xchg
jo
xor
xor
ljmp
xchg
cmp
pinsrw
out
fdivrl
repnz
insl
lret
arpl
mov
mov
cltd
out
js
jns
xchg
mov
cmpsb
xor
jp
jle
pop
stos
int3
cli
inc
sub
insl
pusha
push
fists
dec
fsubrl
daa
fcmovu
lock
movsb
pop
stc
out
xchg
std
mov
add
inc
or
fwait
xchg
leave
xor
xor
testb
popf
pop
inc
jmp
orl
push
stos
decb
test
mov
cwtl
lcall
push
mov
jge
xchg
lea
cmp
rcl
shlb
adc
jns
dec
dec
xchg
pop
inc
or
bound
xlat
int
fcomps
mov
jl
repnz
rcrb
ss
fwait
sbb
cmpsl
mov
mov
mov
test
es
daa
adc
iret
fs
push
fldenv
sbb
push
ja
fiaddl
push
aaa
inc
insl
aas
dec
call
insb
lock
dec
xchg
and
out
in
pop
das
rorl
pop
sbb
int
rcrb
sub
fsubs
inc
xchg
popf
cmc
outsl
add
push
pop
aaa
adc
jge
xchg
sub
dec
xchg
push
cmpsl
sub
add
dec
repz
cli
imul
inc
push
inc
imul
gs
push
call
stc
mov
push
shll
ljmp
xchg
mov
and
cli
sub
push
mov
mov
shlb
ja
shr
cwtl
ds
push
cmc
lock
pop
ja
or
sub
addl
mov
iret
clc
jno
pop
ds
out
inc
xor
test
mov
fwait
jo
adc
and
mov
inc
sbb
mov
popa
xchg
loop
popf
jg
imul
lcall
loop
sub
mov
push
test
imulb
inc
add
lea
pop
ret
and
sub
adc
sbb
push
shrl
inc
jecxz
popa
sti
fucomi
mov
out
and
inc
adc
stos
pushf
pop
push
mov
mov
aam
aaa
dec
lahf
inc
jmp
stos
test
fisttpll
loop
shl
add
cmpsb
xlat
seto
lods
sbb
dec
loop
dec
add
mov
mov
mov
xchg
sub
push
jle
mov
ret
add
shr
push
daa
and
push
jmp
adc
sti
sarl
dec
test
mov
xor
nop
sti
cli
pop
jl
enter
adc
repnz
in
and
push
xor
cmpsb
addl
insb
sti
or
inc
fnsave
sbb
pop
pop
xor
and
test
and
and
push
push
and
add
jge
rclb
std
mov
jg
insb
cmp
mov
cs
popa
fldl
pop
or
xchg
mov
divb
and
jnp
js
mov
xor
repz
sub
movb
jb
dec
arpl
inc
xchg
inc
push
pop
andl
sub
adc
mov
rorb
ret
dec
fsubl
xor
lods
jp
cmp
mov
addb
mov
call
es
push
pop
jmp
push
and
and
inc
cmp
int
xchg
cltd
shrl
dec
pop
inc
mov
push
les
ficoml
aas
out
jbe
push
dec
xor
xor
pop
mov
gs
mov
mov
incl
sbb
adc
push
in
daa
adc
loop
idivb
adcl
and
sti
cmp
mov
add
stos
adc
push
bound
out
jae
jnp
jmp
cmpsl
mov
adc
mov
rep
fdivs
clc
lret
lock
cmc
shlb
inc
fucomip
fimull
cmc
cmp
fs
sbb
lock
and
jmp
dec
cwtl
push
in
add
fstl
sbb
mov
inc
lods
xor
jg
jg
inc
pop
movsl
movsl
das
jne
adc
icebp
dec
rorb
cmpsb
insl
lea
dec
cmp
sub
push
cmpsb
jae
and
cltd
shrb
cmpsl
in
jo
jns
jecxz
lods
and
dec
shlb
push
movsl
mov
hlt
adc
bound
cmp
insb
add
in
xor
lods
out
rcl
push
rorl
push
mov
je
mov
lcall
insl
test
sub
mov
out
xor
inc
ja
cmp
in
pop
test
fildll
sbb
addr16
add
push
fstl
cltd
sar
sbb
insb
daa
and
xchg
ja
push
mov
xchg
jl
scas
adcl
dec
mov
sbb
xchg
out
push
sub
xchg
mov
mov
mov
lea
dec
xchg
leave
lcall
inc
inc
mov
mov
inc
loope
dec
push
test
in
leave
xor
add
dec
dec
lret
or
xor
aas
jo
in
neg
pop
dec
pop
push
inc
adc
popa
jg
cmp
bound
cmp
iret
xor
adc
cmc
dec
stos
arpl
imulb
in
cwtl
sub
sub
lods
popf
add
push
fiadds
mov
push
pop
xchg
dec
into
fidivs
xchg
ret
sbb
bound
lods
fldl
fidivs
jae
xchg
cmpsl
xor
xlat
rcll
fs
or
jecxz
cmpsb
mov
popa
cmp
lret
aam
push
dec
mov
cmp
jo
add
jo
gs
or
sub
push
mov
jecxz
push
lods
inc
fidivrs
inc
push
pop
rcrb
dec
cmp
adc
jns
ret
dec
mov
into
mulb
insl
sarl
repnz
out
and
hlt
cmpsb
movsb
test
cmc
in
lahf
pusha
mov
xchg
pop
inc
cmp
pop
adcb
adc
lahf
inc
pop
jecxz
adc
int3
or
dec
cmp
out
push
ret
lahf
popa
pop
fsubrl
mov
mov
adc
outsl
adc
lock
jnp
loopne
xchg
inc
dec
out
in
sbb
push
mov
xchg
outsl
xor
sbb
pop
dec
sub
outsb
aad
sbb
dec
leave
sahf
xchg
sar
ret
pushf
push
add
mov
inc
ret
repnz
repnz
push
aad
jmp
sbb
lcall
sti
mov
loopne
scas
repnz
dec
sarl
setg
fists
and
sbb
dec
pusha
xor
into
push
out
mov
add
xchg
repnz
lock
inc
hlt
and
test
adc
cmpsb
mov
mov
xchg
mov
cmp
imul
jmp
dec
mov
mov
pushf
call
popf
cwtl
adc
inc
push
xor
adc
pop
jecxz
cwtl
xchg
push
or
pop
push
jmp
xor
shrb
fwait
into
jecxz
scas
test
and
jp
mov
inc
sbb
repz
jp
aad
fs
push
lahf
cmp
notb
adc
jecxz
sub
mov
in
decl
xchg
and
aaa
lahf
mov
fdivrp
insl
pop
cli
aaa
sub
add
imulb
add
adc
dec
sbb
mov
out
mov
fnstenv
out
mov
imul
repnz
fadds
in
pushl
imul
sti
or
ss
shll
pop
fildl
scas
push
stos
push
int
cli
xchg
jnp
subl
mov
inc
ds
ret
in
es
or
sub
xchg
sti
mov
lret
stos
das
xchg
shl
out
mov
shr
push
mov
shlb
jp
sub
mov
sbb
insb
jmp
cmp
cmp
aas
movsl
clc
popf
and
push
leave
add
repnz
decl
jns
mov
arpl
mov
mov
push
push
adc
add
das
hlt
cmp
and
repz
or
sbb
mov
push
std
rcll
cmp
mov
mov
mov
shl
or
pushf
and
adc
roll
shlb
icebp
imul
jb
insl
or
call
aaa
scas
push
pop
lret
fistps
gs
dec
adc
outsl
xchg
sbbl
adc
addl
mov
aam
aas
into
outsl
mov
pop
dec
inc
sub
rolb
adcb
jl
add
rolb
ffree
jecxz
sahf
mov
iret
jnp
or
and
push
push
add
xlat
push
loop
sbb
cli
xor
xchg
out
xor
pop
es
aaa
cmp
pop
shll
insl
or
scas
divb
sbb
pop
test
mov
mov
or
outsb
mov
pop
int
mov
dec
push
jge
outsb
or
sbb
aam
mov
ficompl
rcll
shrb
rorb
test
adc
and
push
imul
cmp
pop
jmp
fsubrs
das
or
stos
sub
rorl
add
lcall
addl
imul
fucomp
mov
loope
mov
mov
in
dec
stc
xchg
lock
test
aad
jno
and
arpl
add
fisubl
push
outsl
in
mov
xor
push
cmp
and
ret
xor
pop
jge
cmc
dec
or
sarl
adc
jmp
and
jle
or
ljmp
lahf
cmpsl
mov
mov
push
fildll
mov
pop
adc
add
mov
and
jp
xlat
outsb
in
xchg
lea
ret
jne
enter
inc
enter
inc
sti
leave
gs
lcall
fidivrl
sbb
sahf
or
sbb
sbb
push
mov
rcrb
dec
mov
jle
pop
add
push
movb
aas
jmp
pop
sbb
mov
add
fbld
bound
imul
mov
idivl
cld
push
insb
or
jmp
cmc
nop
outsl
jle
or
push
lds
test
xor
lret
inc
cmp
int3
mov
mov
fxch
and
dec
test
xchg
arpl
mov
push
scas
into
in
enter
bswap
inc
jge
pop
sub
cmc
aam
inc
outsl
fadds
pop
ds
push
dec
sbb
rcrb
cmp
in
push
mov
ret
mov
loop
iret
icebp
mov
push
fldcw
pop
fsubrs
pusha
xor
inc
pop
call
imul
cmpsb
sarl
adc
xor
mov
adc
or
and
lods
mov
xlat
mov
outsl
sbb
jmp
cmc
notb
add
add
mov
or
adc
or
pop
arpl
mov
movsl
mov
add
js
pop
pop
jb
shlb
cld
xchg
xor
leave
mov
mov
sub
aaa
popf
sub
or
fisttps
cmpsl
cltd
inc
loop
pop
mov
mov
and
mov
push
pushf
pop
dec
cltd
les
sti
popf
jl
ja
repnz
pop
xchg
icebp
cmp
xor
sbb
cmp
cmpsl
cli
lahf
sub
pop
fidivl
xor
mov
pop
mov
pop
sbb
out
mov
xchg
mov
sbb
jmp
fnstcw
or
jno
xor
sti
mov
incb
out
stos
jne
jl
aam
int3
out
pop
cmp
push
xor
addr16
popf
xorl
fiaddl
cmovg
imul
mov
adc
adc
iret
popf
imul
cmp
jmp
dec
das
icebp
sbb
inc
dec
cmp
jbe
adc
sub
loope
pop
pushf
add
xchg
dec
clc
and
sbb
subl
out
or
mov
decl
fdivrl
shl
or
jmp
jg
cmp
andb
xchg
clc
pop
push
js
jo
lods
js
or
adc
call
jo
stc
addb
dec
je
mov
repnz
sub
sti
pop
mov
xchg
pusha
dec
mov
sbb
stos
pop
into
mov
cmp
out
shrb
push
jge
push
je
popf
mov
nop
and
repnz
push
cmpsl
push
in
stos
mov
or
sub
jmp
aad
cmp
jbe
sub
inc
popa
add
and
jmp
aam
mov
push
insl
data16
jne
mov
xchg
pop
pop
xchg
or
xchg
stos
js
jbe
adc
pusha
mov
mov
pushf
or
int
or
sbb
dec
pop
repz
ret
xchg
les
adc
jle
test
inc
sbb
inc
jmp
mov
push
or
jns
faddl
inc
and
loope
mov
xchg
fwait
jbe
mov
pop
jno
jge
sbb
jp
stc
adc
jmp
out
jle
das
push
mov
dec
sbbb
shlb
cwtl
aas
stos
mov
sub
sub
xchg
mov
gs
mov
filds
dec
adc
mov
pop
cmp
inc
imul
cmpb
adc
clc
mov
xchg
and
cltd
data16
jecxz
rcrb
sub
pop
xchg
mov
out
mov
adc
lock
aam
rclb
mov
call
inc
sbb
pop
cmpsl
jmp
mov
dec
pop
ja
or
rcll
jae
ret
lods
push
jnp
pushf
cli
mov
data16
pop
dec
cld
pop
pop
icebp
or
lock
scas
sbb
xlat
je
mov
insl
cmp
or
cmp
scas
sub
fiaddl
sbb
jp
push
loop
lahf
movsb
add
ljmp
je
xor
inc
addr16
sbb
jae
push
jae
call
push
pop
and
int
jae
sub
push
fistpll
testl
push
inc
lods
sbb
test
shr
fstpl
jmp
inc
jnp
jno
and
push
xchg
insb
imul
xor
mov
cmpsb
les
add
cwtl
cld
repz
daa
jg
mov
jbe
rcrl
xchg
idivb
divb
ljmp
push
fsubp
out
pop
jmp
test
stos
lea
out
aam
cs
dec
sahf
fidivrl
insl
gs
mov
adc
xchg
inc
xchg
jmp
push
add
mov
adc
stos
jg
inc
sti
insl
or
dec
sbb
bound
mov
xchg
in
dec
sbbl
out
xchg
lea
inc
jns
mull
or
mov
dec
pop
int3
rcl
mov
mov
iret
adc
repz
sahf
pop
ret
xchg
sub
enter
test
mov
jl
or
mov
mov
or
testl
and
push
arpl
mov
inc
inc
shll
mov
mov
xchg
inc
cmp
fimuls
lods
cs
stc
fisubrs
sahf
fldcw
notl
push
mov
inc
mov
test
fmull
jmp
add
mov
mov
stos
das
jp
fwait
repz
shlb
mov
xor
rcrb
cwtl
or
jno
add
mov
sbb
pop
shrl
mov
mov
int3
bound
mov
in
add
sbb
sbb
cs
mov
stc
mov
inc
push
or
xlat
mov
int
inc
inc
adc
jmp
sub
push
clc
rcrl
pop
add
fistpl
jno
mov
xchg
mov
xchg
add
push
pop
sarb
jecxz
sbb
fiaddl
lock
faddl
movsl
js
aaa
fwait
pop
js
outsl
aad
pop
jae
mov
pop
sbb
jl
mov
lock
fdivr
mov
lcall
push
push
lds
addl
fcomps
adc
addb
dec
jle
jae
add
or
fcoml
andl
add
dec
cmc
sub
jb
mov
aaa
in
sbb
pop
outsb
lods
fldl
in
mov
inc
dec
push
push
jb
dec
pusha
fwait
or
sub
lods
sub
stos
or
jne
dec
mov
push
dec
add
jmp
pop
std
scas
scas
jmp
add
fucom
jne
mov
inc
leave
test
into
inc
push
push
lret
mov
mov
adc
lahf
push
push
inc
fcmovb
dec
pusha
das
cs
lea
dec
outsl
fstps
jge
test
loop
mov
std
test
sub
dec
mov
xchg
shrb
insb
dec
mov
dec
insl
inc
or
add
loope
sub
xchg
sbb
xor
outsb
lods
mov
into
dec
push
pop
out
cs
nop
loopne
xor
mov
mov
mov
lds
jbe
mov
aam
inc
cmp
std
int
and
xor
enter
mov
movsb
mov
pop
xchg
stos
mov
mov
sub
sub
mov
dec
sbb
xor
or
fiaddl
std
xchg
cltd
cmp
dec
es
mov
pop
pop
mov
mov
mov
out
sahf
stos
add
mov
jne
mov
mov
cmpsl
in
sbb
add
mov
cmp
and
xchg
iret
gs
adc
and
cmp
inc
ret
cmp
cltd
shl
mov
or
aam
push
fdivrs
xor
cmp
outsl
mov
loop
pop
ret
jge
mov
sub
push
or
scas
sbb
loop
gs
xchg
mov
adc
repz
sbb
sub
add
sub
xchg
bound
lret
xchg
andb
cmp
push
jne
roll
cmpsl
add
lret
cli
add
out
out
andb
das
pop
xchg
jg
in
xchg
lock
and
sahf
mov
pushf
icebp
add
jno
sub
mov
mov
xor
mov
lret
sub
push
pop
sarb
js
rorl
mov
adc
push
imul
cmp
sbbl
jae
push
sbb
xor
mov
rcrl
pusha
dec
cwtl
or
mov
mov
or
hlt
js
mov
sar
mov
xlat
jnp
inc
test
and
gs
mov
add
inc
mov
daa
addr16
sahf
mov
inc
adc
insl
sub
mov
lcall
mov
inc
push
xchg
mov
pop
fsubrl
dec
outsb
fildl
push
fiadds
js
xor
xchg
bound
clc
pop
cmpsb
cltd
xor
sbb
out
loop
jmp
bound
rcrl
mov
stc
lret
nop
clc
sub
adc
xchg
icebp
xor
fwait
xchg
push
cmp
or
dec
pop
inc
mov
mov
mov
call
cmp
mov
sub
or
xor
shlb
pop
push
push
xor
fadds
icebp
clc
mov
in
scas
ljmp
daa
rolb
sarb
int
mov
test
rcr
xor
cmc
mulb
or
and
mov
push
add
adc
jg
mov
mov
cltd
mov
ljmp
leave
mov
pop
out
push
mov
ljmp
outsl
stos
push
ret
pop
mov
sub
loopne
jnp
jbe
insb
imul
rclb
subl
sbb
arpl
std
shrl
lds
xor
aad
xchg
into
pop
fs
clc
call
fldl
aas
xchg
repnz
mov
dec
in
out
jno
inc
cmp
pushl
js
shlb
out
repz
pop
imul
test
les
cmpsl
fsubl
mov
out
or
or
mov
sbb
mov
mov
pop
lahf
aad
jmp
maxps
dec
sbb
ss
pop
sub
mov
cmpsb
jle
call
das
ficoms
or
fnstcw
xchg
mov
dec
jnp
cwtl
pop
push
fsubp
mov
imul
or
xchg
jl
icebp
push
out
or
orb
sbb
fnsave
push
mov
sahf
icebp
and
aas
pop
and
jbe
jo,pt
pop
pop
imul
jmp
bound
mov
repnz
repz
jb
jmp
fs
stos
outsb
aaa
pusha
mov
sbb
pop
faddl
or
movsb
aaa
pop
fcmovbe
jb
cltd
jl
daa
xor
jg
movsb
sbb
sbb
in
arpl
mov
pushf
lcall
xor
cwtl
sbb
shlb
pop
in
and
sub
ja
adc
inc
into
imul
nop
imul
mov
xchg
rorb
push
pop
daa
out
loopne
in
pop
cmpsb
cmp
outsl
out
xchg
loope
cmp
cmp
push
jmp
pop
pop
outsl
cmp
xchg
sub
cmp
dec
mov
in
jb
mov
xchg
cmp
xchg
xchg
xchg
bound
xor
jg
outsb
adc
mov
jns
push
lea
xor
sti
loope
adc
test
pusha
lods
and
mov
jl
scas
cmp
sbb
mov
xchg
xchg
maskmovq
testl
mov
divb
es
add
mov
into
and
inc
shlb
add
pop
push
lea
es
test
das
loope
dec
pop
add
scas
ja
lret
fdivp
frstor
adc
xor
xlat
jl
add
stos
out
lds
mov
cltd
xchg
arpl
add
mov
cmpsl
mov
inc
scas
sub
pop
ficoml
testl
mov
mov
cmp
pop
add
in
pop
shl
mov
mov
sub
push
or
cmc
es
popa
inc
enter
lds
jmp
daa
sbb
jae
aas
in
xchg
mov
xchg
mov
lahf
and
cltd
fwait
rcll
fwait
js
dec
push
out
dec
or
repnz
or
rolb
pusha
jne
test
les
xor
imul
pop
cs
loope
cmpsl
stos
mov
inc
cli
rorb
jnp
mov
out
cld
xlat
pop
sub
mov
insl
lock
and
pop
mov
insb
cmp
xchg
jmp
out
mov
pop
out
sbb
inc
sti
adc
pop
jmp
push
fsts
sub
jb
rolb
lea
adc
mov
out
jmp
lods
lret
push
inc
xchg
loop
pusha
mov
lds
xchg
js
repnz
sub
cmpsb
cwtl
roll
pop
dec
mov
out
xor
imul
ret
call
adc
sub
mov
in
lea
fsubrs
shrl
imul
in
iret
shlb
sbbl
jle
lea
and
push
sti
mov
rep
cli
sbb
cmp
addr16
jle
mov
ss
pop
call
cmpb
in
rcl
shll
inc
rolb
inc
data16
pop
xor
sbb
cld
push
inc
data16
scas
mov
imul
dec
lret
push
icebp
outsb
and
iret
or
icebp
imul
adc
push
loopne
jmp
ljmp
out
push
lock
mov
xor
stos
pop
loop
mov
std
insl
inc
mov
mov
lret
clc
dec
jo
jae
roll
xor
xchg
xor
or
roll
cmp
fdivs
cld
movups
std
mov
scas
lret
arpl
cmp
int
clc
icebp
mov
adc
pop
imul
push
mov
data16
imull
or
push
pop
insb
std
movsb
or
jmp
fcmovb
xor
sub
data16
daa
jle
and
adc
stos
inc
cmpsb
dec
sbb
inc
out
hlt
lock
fstl
push
out
rorl
mov
outsl
mov
mov
sub
add
jecxz
insl
mov
ss
fsubl
cmpsb
faddl
addb
enter
push
add
into
pop
ss
out
enter
jmp
inc
leave
and
loop
jns
les
movsb
sarb
jo
mov
insl
adc
sub
jnp
and
mov
mov
adc
add
ja
mov
popf
dec
mov
or
jp
pop
rorb
lret
dec
call
xorb
ror
mov
scas
sbb
ret
imul
lret
ljmp
push
test
mov
shrl
in
lret
fsubrl
push
fstpt
or
sti
mov
jno
mov
mov
nop
push
insb
cmp
in
xor
fldenv
je
aam
aad
mov
jge
jle
push
or
xchg
add
push
xchg
dec
xchg
xchg
and
negl
jno
xchg
cmpsl
push
dec
std
clc
das
insb
push
and
mov
jo
imul
cwtl
clc
mov
inc
js
cmp
lret
stc
push
jno
mov
dec
loopne
cmp
pop
adc
pop
push
fisubrs
stos
mov
jbe
je
sub
dec
iret
test
aas
ljmp
and
inc
iret
cli
pop
xor
jg
rcll
fs
into
mov
fs
push
frndint
pop
in
ljmp
push
push
adc
loop
scas
xor
mov
push
nop
pop
or
scas
mov
cs
mov
sbb
loope
dec
daa
push
pop
testb
add
xchg
mov
cwtl
mov
sarl
sbb
add
or
mov
mov
mov
outsl
movsb
mov
or
ja
in
mov
pop
and
adc
stos
pop
out
mov
and
pusha
sahf
dec
shlb
inc
jb
pop
pusha
sub
xchg
push
jp
pop
mov
fdivrp
cmpsl
sub
pop
in
lods
pop
push
xor
mov
fnstcw
push
cmc
lcall
lret
xchg
pop
fwait
push
stos
adc
popa
cmp
aam
adc
roll
pand
mov
ss
sarl
xchg
das
lea
adcl
insl
sbb
mov
sbb
imul
mov
imul
inc
push
in
js
ds
int
cli
xchg
jecxz
push
add
lock
add
scas
add
push
lea
aam
push
mov
add
push
sub
cmp
ja
jns
and
jns
dec
shrl
push
aaa
mov
shlb
add
cld
dec
repnz
xor
push
sub
out
movsb
inc
cs
es
shll
gs
mov
or
dec
and
test
lods
sub
inc
into
test
daa
pushf
ja
ficompl
hlt
lods
out
call
and
lds
mov
sub
mov
push
or
xor
sub
adc
cmc
pop
add
test
mov
xchg
daa
lret
adc
cli
sahf
xorb
and
sub
test
mov
iret
mov
lahf
xchg
jmp
gs
xchg
jns
cmc
mov
add
and
push
add
inc
ss
in
mov
stos
mov
lods
shl
ret
insb
ljmp
in
cmpsb
mov
mov
adcb
inc
adc
das
sbb
adcb
lret
iret
pop
adc
cmp
cmpb
mov
mov
ror
jp
orl
mov
sbb
mov
stc
in
add
cmp
iret
ss
jns
pop
call
jp
add
sub
test
outsb
jno
push
in
push
dec
in
adc
in
add
mov
in
push
rorl
int3
adc
ficoms
push
addr16
stos
movsl
mov
js
mov
aas
aas
ja
bound
add
scas
cmpb
pop
shrl
add
inc
pushf
mov
xchg
call
pushf
cmovo
add
ljmp
popa
jp
mov
aam
call
pusha
fsubrs
cmp
ss
iret
leave
lret
data16
arpl
and
lock
into
lret
mov
xchg
movsb
add
adc
shl
int
gs
sub
and
outsb
jae
jns
daa
sub
outsl
adc
scas
pop
inc
mov
and
and
outsb
cli
fidivrl
mov
mov
aam
jge
sti
test
pop
es
outsb
std
js
fisttpll
stos
lahf
in
xchg
lret
push
cwtl
xchg
xor
addr16
movsb
mov
push
adc
lcall
les
add
and
mov
aaa
mov
push
push
or
sub
jns
cwtl
jnp
jmp
movsb
data16
mov
xchg
mov
lds
xchg
push
repnz
sub
mov
adc
and
in
sbb
dec
and
ds
cmpsl
lods
rcrl
cmp
dec
pop
je
loopne
sub
jl
lea
and
sbb
sbb
out
push
imul
jmp
dec
pop
aaa
jmp
jmp
push
nop
mov
and
pop
movsl
mov
cmpsb
push
into
fiaddl
push
add
clc
pop
ljmp
sahf
outsb
fadd
sti
and
sarl
cmpsb
out
orl
jl
mov
sbb
lahf
adc
outsb
fwait
mov
push
inc
daa
cltd
dec
adc
cltd
lret
pop
xor
mov
xchg
insl
jne
mov
xchg
mov
aaa
cmpsl
ljmp
mov
jl
add
push
mov
in
out
ret
arpl
and
or
mov
inc
and
lds
clc
sub
dec
in
imul
xlat
cmpsb
mov
or
mov
push
hlt
repnz
lods
sbb
dec
mov
loop
mov
clc
in
pop
loop
fs
xor
push
mov
aam
adc
or
and
add
pop
leave
cmc
lret
mov
sahf
stos
mulb
sub
sub
sbb
pop
lcall
call
push
stos
xchg
mov
pop
lods
dec
icebp
cli
mov
stos
mov
push
and
adc
out
in
movsl
push
pop
enter
mov
lahf
stc
fnstenv
add
adc
loopne
ljmp
mov
mov
and
dec
xchg
push
insl
mov
xchg
inc
scas
jecxz
push
xchg
cmp
lea
bound
mov
test
daa
clc
ljmp
pop
push
loop
call
in
shl
xchg
ret
shll
pop
mov
push
ljmp
jl
daa
inc
pop
or
mov
pop
aad
dec
subl
clc
add
cwtl
jb
mov
jbe
mov
dec
xchg
add
sbb
pop
jo
add
lock
andb
pop
inc
inc
sub
jl
iret
out
push
and
aaa
out
std
sbb
push
jne
data16
fisttps
mov
add
mov
xchg
or
mov
inc
loope
cmp
inc
movsl
push
movb
lret
testb
lea
pop
jge
push
sti
xlat
inc
mov
jne
lods
jns
mov
movsl
mov
ret
mov
sbb
adcb
movsb
sbb
and
push
xchg
inc
notl
cld
fs
rcll
and
dec
test
and
xchg
movsl
sbb
cmp
fistpl
lret
inc
sbb
div
sbb
lahf
xchg
xchg
stos
out
je
hlt
sub
cmp
pop
mov
aaa
mov
mov
adc
icebp
ds
sbb
gs
in
and
cwtl
xchg
int
out
or
jns
mov
shll
imul
subb
or
mov
fcmovbe
iret
xchg
mov
jne
add
ja
sub
jmp
cwtl
setnp
in
ja
loop
ja
lods
fldenv
pop
shll
xor
lret
xor
adc
pop
ljmp
mov
inc
aaa
in
or
mov
xchg
cmp
daa
jnp
icebp
pusha
xor
or
test
les
frstor
fildll
pop
lock
dec
das
mov
mov
jmp
ljmp
push
imull
pusha
fistl
sub
fwait
adc
rcll
testl
cmpb
addr16
movb
fsubp
cli
jecxz
pop
pop
pop
movsb
arpl
fnstsw
xchg
in
xlat
mov
test
gs
scas
sbb
xor
xchg
hlt
cltd
fdivl
dec
out
mov
inc
arpl
jo
scas
xlat
fcomi
sub
movsl
in
mov
mov
clc
xor
push
cmp
dec
and
push
mov
push
jecxz
call
lea
sub
xor
das
je
mov
jge
loopne
in
push
xchg
jo
icebp
mov
xchg
sbb
lock
cmpsl
ss
das
ja
loop
mov
push
or
int3
push
call
stc
shlb
cmp
int3
cmpl
ret
fcompl
subb
cs
jno
fldcw
xchg
ss
add
test
mov
push
iret
fst
lds
cli
aam
dec
mov
and
vpmulhuw
aad
or
arpl
addr16
xor
sbb
push
dec
lock
add
mov
xchg
mov
push
loop
movsb
jmp
mov
pop
ljmp
enter
jmp
aad
jo
cmp
leave
sub
and
stos
cmp
jg
adc
insb
gs
mov
mov
rorl
fcoms
push
xchg
and
les
and
sbb
or
aad
inc
or
jb
rcrl
jns
scas
ds
nop
inc
add
clc
mov
repz
ret
cltd
imul
out
inc
mov
popa
or
pop
rcrl
and
inc
push
add
test
mov
sub
repnz
lea
lret
mov
test
loope
and
mov
cltd
jno
in
pop
cmpsb
imulb
cmp
dec
insb
je
jnp
mov
inc
xchg
stos
cmp
mov
not
insb
jnp
mov
adc
xchg
mov
aas
sbb
push
push
aam
jb
out
mov
pop
int3
jo
leave
mov
cmp
das
and
stos
jno
jo
shll
mov
std
inc
inc
pusha
shlb
stc
xchg
aad
sub
add
test
xchg
popf
outsl
inc
stc
jbe
popf
enter
push
mov
mov
cmp
in
mov
ret
lea
push
jmp
cmp
mov
xchg
push
mov
scas
stc
push
ret
push
and
cmp
gs
cmp
aam
ja
out
xchg
or
outsb
push
jo,pt
dec
shrb
xchg
add
jle
dec
xchg
adc
fmull
pop
lock
sbb
stc
xor
mov
cmpsl
pop
lea
arpl
jecxz
jecxz
dec
ja
mov
jno
outsb
dec
or
lods
inc
jp
sub
or
jp
das
out
dec
nop
outsl
inc
sub
xor
pusha
xor
inc
sub
stc
out
pusha
das
push
pop
lods
popa
xlat
ja
mov
or
fists
out
lods
lcall
in
nop
and
iret
sub
adc
jb
shll
or
adc
outsb
les
mov
sbb
jae
push
stos
shll
adc
push
mov
mov
mov
mov
dec
mov
adc
push
mov
loopne
mov
or
addl
aaa
data16
and
or
mov
xor
test
xor
in
cld
out
xchg
push
mov
sub
out
mov
jnp
lods
jo
jo
lahf
int3
loope
ljmp
out
jle
gs
jge
fildl
mov
shrl
dec
push
mov
lods
testl
push
lea
xor
and
and
and
pushf
push
mov
push
add
add
shlb
pop
sub
ret
adc
mull
dec
in
jecxz
adc
out
ficoms
lds
imul
dec
and
mov
leave
jmp
sarl
xchg
movsb
xor
popf
iret
inc
and
and
push
cmp
push
xor
lcall
mov
dec
mov
and
leave
addb
or
icebp
jg
das
mov
mov
adc
loop
adc
xchg
jns
or
adc
data16
dec
cld
and
inc
fists
jne
inc
xchg
dec
or
shl
xchg
leave
aas
in
iret
test
inc
sbb
and
fldcw
lcall
mov
mov
rcrb
mov
sbb
scas
fldenv
and
lcall
out
xor
cwtl
push
adc
scas
xchg
out
and
add
pop
test
rcrb
or
add
jecxz
shrb
xchg
popf
push
xchg
sub
push
inc
jecxz
jge
adc
hlt
and
dec
inc
mov
sub
push
cmp
js
shrb
iret
insl
ja
jnp
mov
cmp
rclb
into
and
fimull
sahf
movsb
iret
outsb
sbb
add
xor
in
add
stos
mov
pop
iret
lea
push
test
cli
mov
or
int
fst
les
mov
adc
push
test
je
mov
mov
dec
sbb
repnz
fmuls
test
popf
or
test
dec
adc
jno
sbb
repz
sub
add
test
lods
inc
xor
dec
lods
mov
jns
pop
cmpl
add
popa
es
xor
sub
out
shrb
cltd
add
xchg
fsubrs
and
pop
xor
out
sbb
dec
push
jmp
mov
and
call
dec
loop
xor
xor
mov
jmp
repnz
adc
lret
das
fcmovne
sub
ret
xchg
xor
sub
mov
xor
mov
sahf
cmp
cltd
sbb
in
mov
imul
pop
push
jne
movsl
shl
out
sti
sub
ja
ret
inc
cmp
mov
movsb
sti
leave
jle
outsl
cmp
mov
push
mov
xchg
shlb
push
scas
fwait
xchg
mov
add
call
jo
inc
and
pusha
cli
test
sub
inc
mov
in
loopne
cltd
push
nop
clc
bound
stc
shl
xchg
repnz
fs
fbstp
out
xchg
xor
mov
rcrb
cwtl
xor
push
mov
shrb
jp
add
int
sbb
dec
fisttpll
aaa
idivl
xchg
sti
mov
es
in
sub
sbbb
jle
jb
ret
mov
repz
inc
adc
fsubl
sahf
inc
xchg
mov
cli
pop
mov
popa
andl
scas
xchg
loope
adc
sub
test
cmp
jecxz
xor
or
mov
divl
cmpsl
sbb
lods
repnz
ja
cmpb
jl
leave
pop
out
in
fstpl
and
mov
jmp
add
and
xchg
push
js
out
mov
mov
or
mov
pop
mul
jae
push
inc
mov
push
repnz
inc
mov
jns
push
repz
jl
xor
in
cmc
sub
test
dec
gs
jno
test
xchg
ret
roll
or
push
int
inc
scas
pop
or
leave
jne
cld
stc
pusha
push
jp
test
pop
adc
mov
dec
add
out
cmpsl
lds
jl
daa
xor
dec
or
lea
aad
sbb
pop
xchg
cmp
int3
lcall
or
xchg
jmp
mov
cmpsb
clc
mov
ror
jns
inc
adc
and
pop
push
in
lcall
xchg
clc
imul
pop
mov
test
mov
stc
xor
push
adc
popa
enterw
testl
rcll
sub
aam
roll
sub
mov
mov
cmpsl
sub
adc
jle
fucomip
out
repnz
cmp
addr16
sub
inc
push
ds
adc
sahf
and
cmp
xlat
pop
in
dec
mov
arpl
out
test
or
arpl
or
rclb
or
data16
cmp
sub
xor
aas
sti
xor
enter
fdivrl
pop
test
dec
adc
lcall
mov
lret
hlt
rclb
jl
add
mov
cmp
add
push
scas
mov
add
ja
sti
xor
sbb
scas
jecxz
pusha
xchg
cmp
push
inc
repnz
aaa
cs
mov
cmp
sarl
push
sbb
out
inc
mov
xchg
cmp
ljmp
lock
out
int3
mov
jnp
push
mov
sbb
push
mov
sar
mov
cmp
and
enter
mov
inc
cmp
popa
scas
stc
enter
push
jb
pop
das
lret
das
push
arpl
movsb
movsb
or
mov
test
pop
loope
or
sub
repnz
into
shrb
pusha
xchg
jle
dec
adc
adcb
cld
add
sub
cmp
aas
mov
sub
xchg
filds
test
shlb
scas
jnp
mov
aam
jle
xchg
mov
lret
mov
xchg
inc
aaa
das
negb
push
sub
sub
pusha
test
popf
mov
int3
jle
xchg
daa
call
xchg
cmc
lods
ss
orl
icebp
pop
mov
mov
xchg
int
lods
xchg
inc
and
cmp
push
lret
fcmove
ja
cmpsb
shl
orb
lods
or
fistps
adc
xor
ds
gs
cld
rorb
in
fnstcw
loope
pop
mov
cs
mov
xor
inc
dec
jns
xor
imul
lds
aas
mov
shlb
sbb
movsb
adc
pushf
loope
xchg
mov
xlat
pop
movsl
lret
repz
movsl
xchg
jo
push
data16
jo
into
out
mov
ds
xchg
mov
xchg
push
pop
sub
pop
cmp
bnd
fsubs
sbb
xor
rcr
jmp
loopne
out
xchg
cmpsb
adc
repnz
mov
add
pusha
mov
ja
loope
arpl
cmp
mov
stc
xor
add
mov
push
fbld
jle
repnz
int3
add
mov
xchg
xchg
mov
inc
shll
addr16
mov
leave
into
push
mov
insl
loopne
enter
inc
xor
lods
cmpsb
pushf
andb
sbb
jg
js
rcll
mov
mov
adc
jns
cld
mov
dec
adc
and
add
sub
lahf
fdivs
push
std
enter
mov
js
lcall
loop
hlt
and
sahf
and
push
dec
xor
es
shlb
cmp
push
mov
in
popa
xchg
stc
aad
outsb
lcall
xchg
scas
andb
add
mov
dec
pop
ficoml
adc
xlat
imul
js
nop
mov
xor
mov
mov
stos
pusha
nop
jbe
xchg
test
ja
jb
push
imul
testb
cld
jle
add
js
mov
jno
in
and
and
mov
fsts
and
inc
insb
or
dec
pop
mov
dec
movsl
sbbb
popa
jl
icebp
int3
js
nop
cmc
daa
hlt
js
add
inc
ret
aam
das
xor
pushf
mov
add
fcmovbe
or
cmp
iret
sti
dec
rcrl
les
cmp
pop
ret
or
lds
lock
add
sbb
movsl
div
or
je
clc
imul
and
and
test
adc
insb
lcall
jns
jbe
dec
loop
xchg
dec
ss
inc
orb
bound
push
out
mov
add
loop
mov
lret
sub
fadd
and
inc
icebp
xor
sbb
xchg
aaa
dec
test
mov
dec
adc
xchg
cli
sub
push
data16
mov
cmp
mov
insb
mov
iret
fcomps
jle
mov
dec
mov
inc
pop
sub
and
mov
sub
and
aaa
jae
mov
sbb
ljmp
ret
adc
pop
test
pop
inc
mov
cmc
insl
clc
or
fldl
mov
mov
add
negb
sbb
out
into
lahf
test
sub
jb
mov
add
mov
or
insb
loope
sub
lock
xchg
mov
movsb
and
cmp
loop
mov
xchg
cmp
add
cmp
js
fs
icebp
push
sbb
pusha
ljmp
js
sbb
add
dec
mov
cld
sbb
roll
push
push
aaa
push
add
imul
aam
das
mov
imul
push
sbb
hlt
dec
xor
mov
sbb
dec
push
or
xchg
loope
jo
in
ret
and
dec
outsl
push
jl
and
std
jp
les
cmpsl
stc
lods
arpl
cld
sub
push
add
jl
add
push
aaa
mov
imul
inc
std
sub
push
jae
pusha
xor
or
cld
xchg
adc
dec
aad
push
pusha
push
sub
dec
movsb
xlat
adc
mov
xchg
in
pop
inc
and
je
imul
mov
fdivr
or
push
cmpsl
add
mov
lods
jb
dec
in
leave
jnp
push
sbb
shll
scas
pop
into
test
xchg
cmpsb
cwtl
dec
stos
sub
push
pop
pop
xchg
sbb
arpl
xor
into
push
pop
mov
ds
pop
stc
mov
xchg
addl
enter
mov
xchg
shlb
sbb
fistpll
sbb
loop
pop
or
fs
rorl
into
add
jge
xor
inc
fimuls
mov
or
cmp
popa
sub
rcll
fadd
lea
pop
mov
add
in
pushf
pop
sysexit
test
add
mov
mov
mov
jae
lret
mov
imul
and
jno
mov
xchg
movsl
mov
fldl
fistps
shll
out
xor
je
add
popa
test
loopne
repz
sub
ljmp
adc
popa
mov
ss
or
lds
daa
lret
lock
inc
rorb
cmpsl
xchg
arpl
add
adc
mov
ret
aaa
mov
iret
fsubl
test
imul
je
or
jne
in
jbe
sbb
push
jle
rcrl
fidivrl
scas
js
inc
inc
adc
add
stos
pop
push
push
out
xchg
adc
xor
inc
aas
or
push
xlat
mov
pop
xchg
cmp
test
pop
jg
sub
mov
sub
scas
ds
fs
incb
xchg
pop
pop
mov
imul
in
push
inc
jecxz
in
fcoml
in
fs
xchg
dec
out
daa
les
mov
shrb
testl
lcall
add
cmpsl
scas
mov
add
jmp
inc
popa
push
movb
cmp
stos
xchg
or
add
inc
jmp
outsl
dec
xor
lds
cmpsl
insb
or
data16
ds
cltd
push
testl
inc
cmpsb
scas
repnz
jne
and
xchg
pushl
dec
or
and
dec
daa
int
jb
mov
mov
and
fs
das
int
cmp
pop
shrl
int
xorl
arpl
sub
xchg
divl
add
lahf
ss
lcall
js
mov
mov
jns
sbb
cs
jo
testb
shrl
xlat
inc
jge
test
mov
add
inc
test
fadds
xchg
sbb
dec
lds
out
cmp
lret
lods
mov
mov
imull
jmp
sbb
sub
jg
or
sbb
add
mov
xchg
hlt
or
das
nop
es
mov
push
xor
cmpsb
inc
add
jnp
xlat
loopnew
arpl
sbb
mov
pop
adc
push
outsl
jns
mov
fidivl
and
sub
mov
loope
fcompl
sahf
cmpsl
testl
dec
push
mov
jne
pop
xchg
sbb
pop
pop
inc
mov
cmp
and
rclb
clc
inc
in
mov
sbbl
push
mov
pop
insl
data16
adc
ss
mov
pop
out
decl
jb
sub
in
jp
ret
add
out
loope
inc
sub
cmp
mov
cmpsb
in
popf
das
inc
aad
js
ret
outsb
sbb
push
das
stc
daa
sbb
jle
xchg
cmp
movsb
sub
mov
jns
jle
adc
push
mov
sahf
mov
push
dec
clc
test
mov
dec
push
mov
fldcw
popf
sub
roll
cmpsl
pop
fmull
movsl
lret
test
je
popf
mov
insb
addl
testb
pop
cltd
stos
daa
inc
dec
or
jmp
popa
rclb
stos
outsb
or
rcr
mov
lods
dec
stos
mov
roll
rorb
sub
mov
xchg
mov
xor
loop
lods
imul
lcall
adc
testb
and
leave
fs
out
jle
out
and
xchg
inc
jl
orl
add
inc
dec
push
sbb
sub
inc
lea
je
cwtl
cmpsl
pop
aaa
mov
aaa
imul
or
and
push
xor
gs
inc
cmp
dec
shl
daa
sbb
test
iret
cli
or
jecxz
xor
lds
or
cmpsl
jb
push
les
orb
subl
mov
cmp
imul
inc
test
lcall
insb
push
scas
sub
stos
in
jle
mov
lahf
push
jl
rorl
pop
mov
push
mov
lahf
rcrb
ret
outsl
cmp
xchg
popf
xor
pop
stos
loopne
addb
ss
mov
jns
xor
sub
dec
mov
mov
inc
int
inc
mov
pusha
gs
icebp
pop
scas
cmc
in
repnz
ss
ja
faddp
push
push
dec
jecxz
fs
pushf
jnp
xor
mov
xor
nop
in
pop
jo
fbld
stos
xor
jmp
mov
and
dec
rcll
fucomp
aaa
rcl
test
stos
mov
jbe
push
jbe
xchg
scas
pop
fstp
xor
scas
inc
iret
sub
pop
aaa
mov
push
pop
xchg
cwtl
daa
mov
jno
inc
imul
add
imul
es
in
aas
shrb
ret
dec
jl
fistps
cli
leave
pushf
test
push
sbb
cltd
outsb
fstps
add
sbb
rcl
inc
jo
sbb
out
lock
out
mov
sub
adc
mov
mov
fcoml
add
dec
cmpsl
je
pop
xor
xor
jb
push
cmp
pop
imul
mov
mov
sub
stos
pop
sub
fnstsw
xchg
dec
enter
mov
stc
mov
jmp
push
in
movsb
aas
mov
add
push
shrb
stos
pop
push
mull
insb
jecxz
imul
std
pop
dec
enter
jmp
std
mov
hlt
add
aas
adc
scas
sarl
add
es
push
loope
fwait
push
jne
dec
mov
push
test
rorl
xchg
adc
cltd
mov
pop
and
cwtl
lret
in
pop
mov
jge
cmp
pop
mov
flds
xchg
or
fidivs
and
cmp
test
and
dec
pop
mov
push
les
sbb
aaa
or
in
cmp
push
jecxz
sbb
sti
aas
or
mov
pop
pop
mov
cmp
xor
xchg
sbb
nop
mov
push
fidivs
cmp
push
push
jns
aaa
inc
xchg
sahf
inc
push
aaa
shll
add
mov
inc
out
pop
xor
cmp
test
mov
adc
pushaw
vpunpcklqdq
fmull
add
push
fistpl
not
mov
push
fistpll
out
push
fiaddl
and
inc
inc
or
cs
stos
pop
xchg
jl
mov
mov
mov
xor
dec
cmp
daa
test
rorl
andl
pop
inc
jle
stos
out
inc
dec
data16
sbb
or
xor
push
aad
dec
insl
cmp
gs
adc
mov
sub
mov
rcrb
jnp
adc
mov
cmp
into
xchg
mov
mov
stos
pushf
dec
andl
sub
pop
inc
mov
xchg
add
xor
cmp
fldl
imul
les
jecxz
pop
pop
pusha
cwtl
push
andb
jp
add
dec
cld
cmpl
jge
add
daa
xorb
push
cli
adc
cs
jg
fstp
popf
add
mov
outsl
lahf
pushf
shll
and
in
adc
mov
lods
or
and
or
loop
cmpsl
cmpsb
cmpsb
ret
jb
ljmp
or
enter
mov
pop
xchg
xchg
cmp
add
push
loope
add
popf
dec
mov
push
in
out
mov
add
and
cmpsl
cmp
pop
sub
mov
sbb
cwtl
push
sub
jp
sbb
popa
or
out
dec
stos
lret
pop
add
sbb
enter
fwait
adc
enter
bound
jns
sub
cwtl
fsubrs
ds
aas
hlt
adc
mov
repz
pop
pop
jae
xchg
mov
mov
gs
popf
ret
sub
jge
fisubrl
or
fsubrs
pop
inc
and
jb
push
adc
ljmp
addr16
and
mov
adc
xor
data16
jmp
adc
addr16
sub
pop
hlt
popa
cmp
pop
and
jae
cmpsl
fwait
popa
into
xlat
jmp
sbb
mov
stos
sbb
mov
in
arpl
ds
mov
push
jl
or
pop
mov
push
adc
adc
xchg
repz
cmpsl
jle
adc
stos
pop
dec
test
stos
xchg
add
push
in
orb
sub
insb
mov
sarb
add
imul
xor
xchg
and
imul
jmp
stc
adc
jae
loopne
mov
mov
or
clc
dec
cltd
xchg
aad
xor
aam
adc
sahf
lods
fldt
leave
mov
adc
xchg
xor
pushl
fwait
das
das
add
sub
push
cmp
dec
mov
dec
aam
in
adc
fildl
pop
test
add
sbb
adc
lcall
sub
inc
inc
mov
test
mov
adc
xor
imulb
sbb
imul
out
xchg
cmp
enter
cmpsl
js
or
sub
mov
popf
cmp
test
imul
inc
fdivrl
outsl
lock
mov
inc
pop
xor
push
in
xchg
sub
sub
js
jnp
add
dec
and
js
fdivrl
mov
bound
lods
mov
insb
getsec
cli
out
sub
adc
adc
pop
aas
mov
mov
out
mov
std
adc
jno
lea
int3
fdivr
xlat
add
push
push
pop
loop
inc
test
add
xchg
cs
pop
inc
inc
lea
hlt
orl
adc
movsl
out
xchg
andb
mov
addr16
movsb
pop
mov
clc
ret
test
or
daa
addb
add
sbbb
adcb
adc
std
inc
repnz
sbb
pop
fimuls
ds
outsl
xor
push
sahf
jae
addb
ja
push
sub
stos
jge
push
cmc
icebp
mov
mov
pop
inc
ss
ss
and
leave
cmp
xor
aaa
rcll
ret
mov
or
sbb
mov
pop
fxch
dec
popf
pop
add
leave
dec
mov
nop
fisubrl
insl
sbb
mov
xlat
add
or
and
lods
movsb
outsb
add
mov
xor
xchg
lar
push
cmp
xchg
lea
push
mov
pop
jle
mov
test
lea
mov
mov
clc
xor
mov
push
rclw
mov
lret
loop
xchg
jae
cmp
les
add
cmp
mov
dec
dec
fstpt
xchg
stos
push
pusha
out
mov
jae
xor
lcall
adc
clc
shl
std
scas
fdivs
mov
sub
push
int3
lea
inc
adc
cmp
arpl
mov
lret
sbb
outsl
jnp
adc
out
dec
jne
daa
xor
fsubl
or
push
stos
mov
or
mov
pop
inc
into
push
pop
lds
inc
mov
jns
out
jg
popf
int
add
inc
lds
ds
sbb
mov
cmp
and
lea
div
je
lea
rcr
shll
pop
outsb
divb
jle
js
insb
mov
xchg
rcl
je
ljmp
sbb
rolb
mov
sbb
fistps
adc
push
imulb
rol
mov
pop
jno
jmp
aas
int
pushf
sub
pushf
jmp
mov
test
ss
xor
mov
lret
adc
fcompl
stc
bound
or
jbe
ljmp
mov
mov
test
mov
add
js
sub
or
mov
adc
push
shlb
jbe
adc
lds
int3
incb
clc
ds
add
mov
ss
mov
cmpsb
cmpsb
gs
inc
jge
popf
shrl
punpckhdq
aaa
popa
call
jne
or
loop
out
push
sbb
push
call
sub
cwtl
in
loop
push
fldpi
xchg
gs
and
popf
sub
jmp
push
sbb
cmpsl
inc
mov
outsl
aam
jno
jno
fmull
jb
out
int
jle
jle
xchg
lcall
imul
filds
hlt
mov
out
aaa
in
jge
fstps
mov
pop
int
inc
scas
xchg
mov
je
out
out
sub
sbb
das
mov
scas
les
popa
inc
lds
fistpl
xchg
pop
cmpsb
push
out
roll
js
fists
sbb
and
lret
ret
mov
testb
shlb
leave
inc
rcrw
adc
or
je
adcl
xor
mov
jo
insb
dec
imul
dec
scas
mov
lahf
iret
pushf
jne
outsl
aaa
arpl
fcomi
sahf
push
pop
shl
sub
sti
cmpl
sbb
aad
mov
rorl
ss
xchg
xor
or
and
push
mov
in
mov
inc
sbb
mov
fstpl
dec
mov
mov
xchg
in
sbb
push
test
cltd
lret
mov
in
sub
lods
lods
test
fistpl
stos
pushf
push
or
pusha
ds
repz
outsl
add
push
mov
sar
and
jmp
push
popa
sub
es
cmp
repnz
fidivrl
add
mov
pusha
loopne
xor
or
adc
fmul
test
ja
and
push
fildll
subl
fcmovnbe
push
jbe
adc
mov
inc
pop
mov
mov
loop
in
out
and
cltd
and
filds
xchg
stos
push
or
and
fcompl
dec
xchg
lods
rcrl
mov
dec
insb
dec
mov
sub
add
sti
stos
mov
subb
mov
pop
pop
mov
lds
xor
mov
mov
push
nop
loope
movsl
in
outsb
sub
adc
adc
mov
mov
dec
cmp
mov
dec
mov
push
xor
pop
cmp
jo
das
sbb
popa
test
out
pop
mov
cmp
cmc
jg
fs
lret
xchg
lret
or
loop
scas
sub
and
enter
push
dec
out
adc
icebp
sbb
mov
sarl
dec
push
cmpsb
xchg
xchg
jns
pushf
dec
mov
repz
jae
xlat
push
shll
push
sahf
xchg
cmc
ret
dec
jb
out
jle
mov
push
lea
sub
jge
pusha
outsl
dec
lds
xor
cs
add
adc
jo
movsl
xor
fcompl
outsb
jb
push
outsb
add
into
sub
sbb
jge
xorb
push
call
aaa
hlt
notl
lcall
xor
push
jbe
imul
xchg
in
iret
mov
ret
push
jle
into
fstps
jp
fwait
sbb
mov
mov
xchg
push
test
push
sbb
lahf
mov
inc
add
les
scas
fs
out
sbb
mov
vsqrtss
cld
and
xchg
or
pop
testl
loope
inc
xchg
rclb
ja
adcb
add
jnp
cmp
inc
in
jne
or
add
jns
add
mov
mov
adc
imul
add
shlb
xchg
or
sub
mov
mov
xchg
movsl
movsb
shrl
cmpsb
jnp
out
das
push
mov
cli
sub
ret
or
mov
cmp
lret
mov
xchg
inc
aas
adc
out
out
dec
cmp
mov
std
push
clc
js
sbb
cmp
xchg
sbb
sub
inc
std
or
inc
mov
mov
fcomps
pop
insl
in
int
dec
and
in
dec
and
fimuls
xor
lods
shll
pop
call
jmp
jle
cwtl
jne
add
dec
outsl
lret
lcall
ror
cmp
inc
in
dec
xchg
int3
xor
or
adc
or
test
mov
push
sahf
fsubp
subl
cmc
into
negl
aam
int
and
xchg
shrb
icebp
aad
mov
mov
std
divl
pop
xor
lahf
dec
mov
cmp
xchg
push
nop
adc
jbe
add
inc
sub
mov
and
bnd
inc
mov
enter
mov
and
push
in
or
dec
sbb
ficompl
mov
mov
xlat
dec
push
sahf
inc
shrb
jo
inc
mov
cwtl
push
loope
push
pop
outsb
stc
ret
scas
fwait
push
sbb
cmpsl
add
add
lahf
and
jo
jbe
xchg
mov
pop
out
fisttps
sbb
push
dec
lods
lahf
xchg
popf
lcall
or
test
pusha
push
and
dec
mov
scas
sub
repz
dec
inc
mov
push
dec
pop
in
pop
mov
jbe
add
mov
mov
sbb
stc
xchg
and
or
fs
aas
aam
xchg
fmull
loope
or
sti
shll
pop
lret
mov
cmp
sbb
xor
loope
aam
and
and
dec
fdivrp
movsb
fadds
fsubrl
shrl
ud2
jle
sbb
repz
repz
cld
dec
and
mov
add
cmpsb
sub
imul
mov
gs
push
bound
dec
fcompl
push
jns
cld
je
scas
push
pop
pusha
fnstsw
inc
mov
cmp
loopne
jge
es
dec
aaa
cmp
jp
mov
rorl
movsl
dec
es
sarl
test
fcoml
push
add
ss
test
jbe
mov
into
push
fcoms
push
jl
add
jnp
xchg
add
mov
fldenv
cmp
aam
repnz
imul
aam
add
mov
adc
outsb
sti
lcall
js
das
in
mov
sub
jge
push
mov
std
iret
sbbl
push
lcall
push
cli
mov
ds
loop
mov
scas
repnz
dec
push
mov
and
test
or
mov
inc
and
popf
or
adc
sbb
mov
orl
sub
insb
sub
insl
cmp
inc
pop
loop
mov
mov
push
cli
testl
aaa
aaa
in
loope
in
mov
adcl
or
or
out
aaa
add
dec
push
shrb
imul
arpl
arpl
mov
or
sub
or
lret
shlb
cltd
insb
pop
cmp
cmpsl
cltd
dec
aad
loopne
out
xor
nop
test
notb
scas
and
xor
inc
orb
int3
and
movsl
test
xor
sarl
add
ljmp
nop
lcall
cmp
scas
mov
leave
out
xor
adc
push
adc
mov
push
pop
out
xchg
outsl
push
js
js
sbbl
mov
loopne
mov
test
mov
fs
ret
mov
xchg
in
or
test
pop
addb
adc
int3
fwait
int
sub
subl
lods
inc
insb
mov
adc
inc
mov
arpl
push
mov
jbe
aaa
sti
lea
ds
popa
mulb
mov
pop
pop
mov
and
inc
adc
mov
mov
inc
jns
dec
iret
lea
xchg
pusha
cmpsl
sarl
dec
push
xchg
adc
xor
sub
xchg
push
pop
scas
mov
xlat
push
shll
mov
jge
fildl
sbb
in
cmp
jae
mov
out
jecxz
ret
ds
jns
in
sbb
lret
je
insb
xchg
in
inc
notl
mov
push
adc
out
dec
cmpsl
push
rclb
loope
repz
adc
aas
jg
ret
nop
jno
notl
sahf
into
scas
adc
cld
xor
cwtl
hlt
inc
or
in
mov
repz
fwait
add
inc
cltd
fdivl
outsl
mov
pop
mov
in
in
aad
hlt
xchg
lods
add
pop
div
mov
das
cmp
jmp
fildll
scas
sub
testl
lret
fidivs
dec
je
gs
jnp
test
pop
mov
pop
jp
pop
fs
push
adc
lods
in
cmp
popf
jl
cmovle
inc
ljmp
sbb
imul
and
mov
divl
enter
adc
push
scas
sub
shlb
lea
sbb
test
rcr
sbb
negb
lds
loope
xchg
xchg
in
int
add
jg
cmovno
cmp
pop
push
cmpsb
fdivrl
pop
out
test
mov
pop
lret
jno
cmp
or
jb
push
fdivs
push
and
data16
pop
notb
fwait
repnz
cli
mov
jmp
mov
cmc
mov
xor
lods
cs
adc
in
pop
out
fistpll
icebp
mov
iret
dec
push
mov
inc
mov
jo
gs
pop
and
mov
add
inc
add
in
fsin
in
add
mov
pop
pop
push
popf
out
jmp
leave
jno
push
mov
push
add
cmp
push
push
lcall
adc
and
lahf
shlb
outsl
mov
push
fwait
pop
push
imul
xchg
insb
out
mov
aad
push
imul
xor
imul
sarl
ret
dec
jp
cli
out
mov
sbb
or
loope
pusha
xchg
mov
movsl
js
jno
add
mov
enter
mov
mov
mov
arpl
jp
test
jle
out
mov
ror
mov
jnp
popf
aaa
hlt
bound
add
push
dec
lea
aam
xchg
cmpsb
call
adc
push
mov
xchg
outsl
jbe
jg
jbe
pop
sub
sahf
sahf
jmp
mov
jns
fstpt
movsl
xchg
adc
ret
mov
jae
into
pop
jno
cltd
mov
ja
mov
mov
mov
jae
imul
push
adc
in
je
xor
mov
cmpsb
test
mull
dec
in
dec
and
push
imul
push
inc
jecxz
jb,pn
dec
lahf
fldl
dec
xor
cwtl
in
adc
dec
mov
mov
jb
rcrb
inc
std
jae
fnsetpm(287
cmp
ja
sbb
mov
bnd
and
dec
pop
cld
xchg
xor
rorb
cmp
aam
es
repnz
mov
jp
mov
and
mov
aaa
insb
xorb
call
js
cmpsl
fnstenv
int3
dec
pushf
cmpsw
mov
sbb
loope
mov
in
aaa
cmp
imul
js
xchg
loopne
cmp
ficoml
imul
loop
sbb
stos
mov
movsl
clc
popf
jo
push
sti
insb
divb
mov
sbb
ds
pop
sbb
add
addr16
xchg
pushf
dec
or
sti
sub
xlat
std
js
and
mov
scas
add
inc
ss
xchg
sbb
dec
add
out
popa
fsubs
data16
xchg
into
push
fldt
sub
int
dec
daa
mov
mov
xor
ljmp
inc
idiv
cmpsb
loopne
dec
push
popf
push
pop
cmp
test
mov
dec
and
mov
xchg
mov
sti
stc
enter
mov
repnz
jecxz
pop
aad
fisttpll
and
mov
icebp
test
outsb
adc
fstps
cld
push
leave
pop
and
jg
pushf
or
mov
push
and
and
pop
int3
pop
add
inc
cmpsl
inc
sbb
add
les
out
sub
pop
fs
cltd
mov
cmp
or
or
xchg
pop
dec
dec
push
movsl
jp
popf
repnz
pushf
xor
mov
pop
scas
fldenv
pop
sbb
inc
cli
mov
push
aaa
in
cmpb
xor
lods
hlt
inc
stc
sahf
cmp
lods
cmp
hlt
fnstsw
pop
xchg
mov
rolb
mov
pop
dec
ret
cmp
and
cmp
pop
int3
inc
fists
cmpsl
add
fmulp
mov
pop
test
rclb
push
outsb
pop
out
pop
xor
es
lea
add
jmp
into
and
mov
or
xor
adc
out
dec
sbb
stc
rclb
cmpb
jb
push
std
mov
loop
mov
mov
das
lret
pop
popf
ja
mov
fmuls
sbb
push
cmc
aas
into
pop
js
imul
xchg
mov
lahf
imul
dec
cmp
dec
scas
mov
xor
fldenv
imul
lock
pop
aam
mov
push
mov
notl
sbbb
jns
jge
mov
imul
sub
loope
clc
clc
lea
in
push
jns
mov
pop
xor
push
es
cmp
xor
ja
sbb
xchg
mov
popa
dec
push
xor
pop
adc
in
in
stos
movsl
sub
enter
sbb
sub
inc
adc
sbb
lods
inc
xor
pop
test
xor
sahf
out
adc
out
lret
sbbb
adc
rcll
icebp
rcl
fisubrl
xchg
push
jge
sbb
push
decb
pop
xlat
mov
jno
adc
fstpl
es
outsl
mov
stos
pop
xchg
es
cmp
icebp
inc
jp
popf
sub
fmull
mov
cli
nop
hlt
les
push
pop
leave
mov
lcall
pop
int3
xchg
mov
lea
xchg
into
push
cwtl
adc
add
arpl
dec
sbb
in
sub
lock
decl
cld
cmpsl
mov
dec
and
jns
dec
loopne
popf
xchg
mov
mov
scas
jae
ljmp
movsl
aad
pop
in
add
jecxz
inc
push
xor
jl
mov
pop
pop
sbb
fs
and
rcrw
xor
dec
jl
jns
stos
adc
aas
cltd
les
inc
fiaddl
pop
pop
mov
icebp
or
sub
stc
cwtl
test
mov
pop
pop
jl
mov
imul
es
mov
sub
leave
in
push
test
jae
dec
repnz
lcall
pop
xchg
outsl
inc
inc
inc
mov
mov
inc
push
lea
mov
xor
fimull
das
sbb
insb
out
cmp
test
mov
dec
clc
sbbb
sbb
adc
jno
jmp
mov
push
icebp
lret
js
fcomps
adc
fcmovnu
mov
mov
adc
mov
xchg
fldcw
xor
out
adc
rcrb
or
jecxz
rcrl
and
inc
in
ja
orl
mov
and
or
fmuls
es
jns
push
daa
push
add
movsl
mov
mov
mov
rcll
or
jne
fistl
or
mov
jae
push
xchg
scas
xor
and
stos
mov
inc
dec
lret
push
rcll
pop
cli
repnz
and
ss
push
popa
in
mov
cmp
xor
xorb
insl
mov
mov
out
pop
inc
inc
clc
ja
push
push
push
or
add
cmp
mov
jo
imul
push
ja
arpl
dec
fimuls
mov
mov
mov
stos
les
adc
lcall
gs
sahf
inc
and
jmp
jb
dec
mov
ss
and
ret
movsb
loope
push
sti
movsb
adc
mov
or
insl
push
js
orb
in
and
in
lret
push
push
mov
leave
inc
adc
ret
cmp
jo
push
sahf
xor
push
fldenv
sub
les
rcll
xchg
mov
mov
jns
movsl
push
jo
push
mov
jge
or
movsb
mov
pop
xlat
adc
and
sbb
jg
push
icebp
pop
arpl
push
cmp
add
test
cltd
xor
shr
jbe
cmp
shlb
fisubs
pop
xchg
cmp
fs
icebp
xor
insb
outsb
push
dec
lcall
and
movsl
xor
sub
push
hlt
nop
jne
push
not
pop
mov
fldt
sti
push
add
je
inc
xchg
inc
cltd
aam
lret
scas
jbe
jp
scas
out
in
jo
sbb
or
add
or
mov
mov
ficoml
sarb
mov
cmp
jp
mov
insb
ret
test
jbe
sub
pop
mov
das
lret
sub
xor
inc
outsb
mov
push
pusha
cmp
add
nop
xlat
inc
bound
mov
or
out
sbb
mov
inc
pop
push
xor
cmpsl
mov
push
lret
push
out
inc
fwait
gs
mov
imul
mov
xor
les
lea
and
or
rcll
and
ja
js
popf
loope
or
or
out
cmpsl
push
mov
test
testb
mov
push
sub
lahf
out
mov
mov
sbb
ficoms
jle
shlb
sbb
popa
mov
pusha
orb
adc
insl
lret
adc
repz
stos
pop
xchg
fisttpl
xchg
jle
lcall
shll
push
fisubl
xor
and
addr16
mov
mov
sub
addr16
pop
push
aam
mov
jo
mov
sbb
sub
mov
xchg
outsl
rolb
adc
cmc
scas
or
fs
shll
pop
xchg
xlat
mov
adc
insl
fcmovbe
mov
lret
shrl
fwait
dec
sbb
fldl2e
pop
icebp
addb
pop
mov
pop
and
add
or
andb
roll
jno
aad
xchg
mov
pop
xor
dec
movsb
cld
pop
mov
mov
push
ret
and
sbb
out
lcall
lock
add
xor
inc
add
jo
add
inc
ja
push
leave
aam
inc
mov
sbb
add
loopne
xchg
aas
popf
xor
xchg
and
mov
mov
push
lea
dec
mov
icebp
jmp
mov
or
das
jl
dec
xor
dec
inc
std
pop
xor
jbe
jb
mov
repnz
lea
and
mov
inc
mov
lret
rolb
and
daa
adc
filds
aaa
or
scas
xor
notb
jns
sarl
or
scas
pushf
jle
test
sub
mov
roll
gs
lods
mov
call
inc
test
mov
imul
ret
into
loop
icebp
gs
sbb
ds
sbb
call
sub
add
fldl
adc
lea
or
in
out
in
pop
lret
jo
in
cli
lahf
mov
sbb
fdivrl
sahf
fiaddl
fldenv
test
mov
addb
in
cmp
push
cmp
xor
or
dec
imul
shrl
ds
cmp
mov
mov
sub
lods
sbb
jle
mov
mov
xlat
pop
stos
xchg
out
aam
add
pop
in
cli
push
out
lret
adc
insl
dec
js
jb
xchg
sbb
sarb
pop
scas
mull
inc
fildll
push
lods
mov
shrb
fldt
call
push
sbbl
das
mov
pop
imul
in
jge
out
lahf
jo
pop
mov
mov
mov
push
pop
mov
cmp
sub
mov
pop
adc
adc
mov
imul
pushf
or
xchg
push
fisttpll
movsb
mov
or
xlat
jnp
dec
sub
and
fsubrl
out
xchg
jle
push
and
mov
js
jmp
jmp
and
and
loop
in
inc
mov
movl
sbb
cmpsb
lret
add
xlat
fcomps
mov
push
and
xchg
jp
mov
jae
out
push
ss
jne
jne
jp
cmp
or
xchg
or
sub
insl
add
repz
pop
or
enter
daa
cwtl
orb
in
xlat
ret
gs
lret
and
stos
push
mov
cltd
xchg
ss
sti
jmp
sahf
out
stos
int3
adc
or
fmul
mov
scas
aam
mov
pop
jno
mov
and
cmpsb
addr16
mov
dec
mov
mov
jle
push
adc
adc
adc
repz
mov
jo
ret
sbbl
orl
xor
cltd
test
mov
mov
pop
mov
adc
dec
fdiv
cmp
stos
xchg
rorb
cwtl
mov
nop
dec
cltd
xlat
cmp
sub
popf
jecxz
xor
in
imul
ret
out
jns
jp
inc
fistps
js
push
not
lock
js
inc
fadd
and
dec
mov
in
lret
xor
mov
es
addb
movsb
push
ljmp
sbb
mov
push
mov
inc
pusha
xor
lods
mov
jl
mov
adc
pusha
int3
cmpsl
ja
sbb
loop
push
xor
cmp
push
push
mov
fcmovnbe
es
daa
popa
shll
and
mov
xchg
mov
mov
cmp
cltd
je
cmp
sarb
adc
cmp
add
test
dec
mov
lcall
cmpsb
rcl
pop
pop
and
mov
pushf
sti
fldl
mov
xor
xor
jmp
js
mov
inc
mov
jnp
cli
push
popa
xor
sub
fstl
mov
pop
sub
lds
fwait
mov
sub
xchg
in
fbld
push
sbb
mov
mov
mov
inc
fbld
or
jbe
cmpsb
push
rcll
ljmp
imul
aas
xor
andb
movsb
mov
jbe
lcall
dec
adc
and
sub
pop
inc
cmpsb
cmp
popa
or
cltd
adc
rorb
movsl
test
call
jnp
lods
fucomp
test
out
int3
sbb
lret
icebp
je
addr16
cmpb
out
lds
adc
aad
fcoml
fwait
mov
mov
outsl
fcoms
mov
adc
aad
ret
pop
popa
je
pushf
mov
cmpsb
out
xor
fcoml
lret
mov
ret
jle
imul
test
call
imul
push
ret
adc
push
mov
fmuls
xorps
sub
fwait
push
leave
add
pop
mov
ret
mov
in
push
mov
mov
inc
mov
lcall
dec
outsl
jo
mov
mov
insb
inc
xchg
cwtl
ja
fs
or
cmp
ss
fdivrl
and
adc
sub
cmpsb
push
mov
shrb
pop
cmc
ljmp
xchg
movsl
push
add
jb
loopne
ret
sbb
mov
lret
pop
mov
push
mov
inc
icebp
cmp
mov
dec
andb
mov
mov
xchg
in
adc
repz
iret
mov
int3
xchg
xchg
fwait
ds
ja
or
mov
adcl
xchg
push
ja
out
mov
test
lcall
mov
jne
jnp
xlat
pop
adc
arpl
xor
inc
lds
lret
sbb
mov
call
scas
adc
movsl
pusha
or
fs
add
fisubrs
push
jmp
loop
xchg
in
pop
mov
stos
ficoms
lea
loopne
dec
mov
and
inc
imul
push
or
dec
cmp
jne
sbb
inc
je
push
push
enter
mov
cmp
mov
insb
imul
jle
aad
dec
push
mov
out
lds
shl
mov
jns
insb
adc
sbb
push
and
scas
lret
addr16
inc
inc
xor
inc
add
es
cmp
or
inc
aas
mov
shrl
mov
mov
or
push
out
jecxz
test
nop
xorl
frstor
pushfw
loopew
lds
xor
adc
pop
adc
jno
es
mov
or
and
push
lock
fs
popf
jg
xor
or
cmp
ss
inc
sarb
js
mov
and
inc
sarl
or
sbb
lcall
lds
jns
outsb
mov
test
outsb
xchg
or
bound
lods
mov
test
ljmp
aaa
cmp
mov
int3
js
vsubsd
mov
testb
inc
sti
xchg
test
and
push
xchg
sti
jl
in
sub
sbb
js
lret
fcomps
add
inc
mov
mov
sar
loop
ffree
rcrb
add
lret
mov
jno
push
rcrb
xchg
dec
pop
fisttpl
mov
mov
pushf
out
xchg
in
call
mov
jmp
sub
jl
stos
xchg
push
cld
lcall
aad
adc
sbb
xor
jb
mov
sbb
data16
outsb
sarl
shrb
ljmp
test
mov
cmp
in
aad
and
or
and
push
mov
push
xor
cld
out
iret
outsb
ret
cmp
mov
xor
icebp
mov
cs
cli
inc
cmp
mov
shlb
jge
movsb
and
mov
jle
mov
iret
data16
mov
es
fwait
shll
inc
ja
add
push
les
mov
lcall
in
sub
jg
pop
and
mov
sbb
rol
add
inc
stos
gs
es
jge
leave
subb
jecxz
enter
dec
mov
rorb
cmpsb
dec
aad
push
xchg
inc
bound
push
xor
andl
out
inc
cs
pop
sub
in
jge
sub
fmuls
dec
sub
xchg
mov
test
in
cmp
lret
rcrl
push
fcoml
lds
ljmp
inc
mov
cmp
pop
xchg
shl
pmaxsw
fdiv
outsb
scas
adc
lock
xor
shrb
cld
rcl
int
rcrl
leave
sbb
in
frndint
push
pop
pop
int3
mov
movsl
inc
fnstenv
dec
add
mov
mov
cmp
mov
js
sbb
inc
leave
jnp
push
mov
mov
mov
add
ja
inc
xorl
testb
scas
pop
add
push
iret
dec
out
fimull
aas
scas
and
inc
pop
mov
lcall
or
pop
adc
dec
xor
mov
je
addr16
push
inc
outsb
adc
jg
mov
mov
mov
incl
stos
cmp
cmpsl
out
pusha
or
sbb
in
mov
cmp
out
pop
pop
aad
das
mov
xchg
rcr
cltd
fs
fpatan
sub
movsb
mov
xor
mov
sbb
pop
add
inc
and
icebp
xchg
xor
aaa
inc
sbb
sub
or
jmp
pop
sub
repz
popa
xlat
or
outsl
push
int
cs
mov
mov
and
mov
jne
lock
add
out
cs
add
adc
adc
cmp
adc
das
call
pop
sbb
arpl
or
cld
call
and
add
sahf
sbb
push
mov
adc
subl
pop
mov
sbb
xlat
das
push
ret
xchg
mov
adc
and
lcall
int3
sub
xor
sbb
je
xchg
xchg
sub
add
xchg
mov
outsl
adc
cmpsl
aam
jb
cmc
or
idivl
xor
mov
mov
mov
push
push
inc
dec
dec
pop
popa
mov
mov
push
test
insl
sub
addr16
sub
hlt
shlb
stos
sbb
mov
daa
out
dec
das
cmpb
xlat
mov
add
mov
dec
cmp
loopne
movsb
push
outsl
pop
cmc
pop
add
flds
pop
push
daa
add
adc
sbb
mov
rorb
pop
jmp
pop
jae
sub
lods
ficoms
out
xchg
dec
cmp
xchg
push
or
push
ds
imul
repnz
outsl
arpl
clc
and
xchg
pop
cld
outsl
loop
adc
push
sub
bound
fildl
add
sub
out
leave
add
adc
or
mov
xchg
cmp
fisubrl
scas
int
jl
popf
aam
dec
ja
sahf
lods
aad
mov
aam
loope
jbe
aaa
adc
cli
push
mov
push
ljmp
push
pusha
push
rcll
das
pop
test
lds
pop
adc
fucomip
lret
out
pusha
add
mov
jnp
lock
leave
mov
mov
mov
subb
lret
insl
orb
lods
lods
add
enter
push
sbb
cltd
jno
popf
xchg
cmpsl
je
or
mov
out
roll
andnps
popa
sbb
decb
push
js
aas
jmp
xor
lret
xlat
lret
mov
mov
jmp
or
incb
pop
jg
mov
in
sahf
sti
pop
dec
xor
sti
and
add
fs
imul
outsl
pop
bound
sub
inc
jmp
mov
adcb
hlt
stos
sahf
xchg
imul
mov
lea
pop
mov
mov
addl
pop
movsb
icebp
arpl
clc
inc
gs
mov
push
pop
xchg
pushf
jns
ficompl
aam
pop
push
adc
sbb
sbb
mov
or
les
sub
and
dec
cmp
lahf
push
test
xchg
adc
scas
lret
add
out
sub
pop
add
add
or
sub
pusha
or
mov
ret
pop
movl
popa
negl
push
lock
mov
out
out
sub
jo
in
dec
bound
pushl
rorl
imul
xchg
mov
mov
aad
jb
jg
xchg
pop
rol
in
leave
sbb
sbb
mov
out
sub
dec
test
call
or
pushf
and
mov
loopne
inc
into
test
add
mov
jnp
sbb
arpl
sti
xlat
xor
adc
fcomps
mov
push
pop
aas
mov
inc
add
in
stc
sbb
cmp
xchg
add
push
xor
loope
les
push
xor
dec
in
lock
pop
aaa
pop
mov
int
and
mov
ja
push
xchg
outsl
fistpll
lahf
iret
adc
jnp
lret
popa
push
pop
cmp
fsubrs
movsb
pop
jecxz
in
pop
xor
jne
dec
sbb
jae
sti
aad
jae
push
cmpsl
sub
sub
out
fsts
inc
mov
testb
mov
adc
lret
rorl
mov
fbstp
and
push
cmp
scas
xor
xchg
aas
rolb
push
outsl
rcl
lods
or
mov
out
mov
cmpl
aas
or
or
and
ja
push
aas
mov
add
xor
in
push
xchg
clc
jne
popf
sbb
shlb
stc
push
xchg
int
sbb
cmp
push
test
ret
ljmp
aaa
fistpl
dec
in
adc
pop
xchg
stos
mov
mov
out
sub
outsb
dec
inc
push
or
cwtl
jg
or
mov
jns
mov
push
pushf
add
aam
fimuls
imul
ficompl
mov
or
xor
mov
or
pop
push
sub
repz
xchg
das
inc
mov
test
sub
mov
push
push
adc
fs
adc
push
fcomip
outsl
adc
sbb
iret
xchg
hlt
gs
lods
int
nop
adc
in
mov
jns
cmpsb
mov
cmp
icebp
push
call
loope
scas
lds
daa
mov
mov
mov
lock
adc
ja
aad
jno
sbbl
pop
sbb
fsubs
pop
in
movsl
pop
cmp
roll
jle
cmc
xchg
fisttps
push
mov
mov
outsb
and
adc
test
fbld
ret
sub
divb
or
loopne
iret
pop
out
stos
ret
or
pushl
sbb
mov
mov
sbb
in
fsub
cmpsl
and
pusha
mov
imul
inc
cld
cmpsb
mov
mov
leave
xchg
mov
sbb
roll
fldt
push
sbb
test
jp
out
outsl
inc
bound
das
sarb
arpl
frstor
outsb
pop
xor
int3
ffree
in
add
dec
icebp
cld
sub
ss
shl
pop
psubusb
testb
mulb
pop
enter
stos
cmp
sahf
jno
pop
or
xchg
shl
popa
out
dec
ret
icebp
orl
test
push
sub
and
and
inc
xor
mov
jecxz
rol
lods
sub
mov
mov
and
daa
xchg
cmp
cmpsl
adc
push
scas
movsb
pop
or
jae
pop
sti
mov
mov
out
pop
mov
ljmp
in
xchg
sbb
nop
lret
lcall
jnp
neg
xor
ljmp
fmuls
mov
inc
push
dec
inc
push
cmc
inc
fs
out
std
imul
or
nop
outsl
out
sub
jge
push
fwait
xchg
adc
movsb
ret
mov
gs
jb
negl
fldt
mov
push
repnz
in
pop
stos
test
dec
push
add
hlt
pop
andb
fsubrp
cmp
mov
add
sbb
int
jbe
cmp
aas
mov
adc
xchg
imul
or
jne
mov
mov
mov
push
mov
aaa
xchg
in
lcall
test
mov
lea
push
pop
sbb
fstl
out
jne
lret
movsb
cmc
xchg
loop
pop
cmpsb
fs
cltd
aaa
insl
cmp
jg
jb
movsl
and
clc
and
jge
cli
cltd
clc
repz
cmp
xchg
into
rorb
cld
cld
mov
iret
gs
int
mov
sahf
fnstsw
loop
sub
shrl
cmpsb
adc
ds
ljmp
cmp
pop
xor
iretw
mov
push
pop
sub
pop
mov
mov
pop
mov
push
roll
dec
and
repnz
cld
and
repz
nop
xchg
arpl
out
xlat
inc
mov
addr16
lock
jae
filds
hlt
imul
lret
mov
sbb
cmp
xorb
lret
sub
in
mov
pushf
loop
pop
push
stc
aaa
cmp
lret
mov
mov
enter
mov
and
xor
xor
sub
mov
je
cmp
push
and
fs
leave
test
push
subl
mov
or
lods
imul
jg
xor
fbld
sbb
nop
xchg
cmp
dec
cmc
std
sbb
mov
pop
hlt
sub
xlat
pop
mov
js
push
add
popa
inc
fistl
jmp
pop
dec
repz
int3
cmpl
xchg
int
rclb
sahf
test
mov
aas
mov
xor
sti
push
xor
fwait
xchg
fdivrl
test
fildll
sbb
aas
or
mov
dec
sbb
lea
mov
loop
dec
sub
aaa
and
lea
enter
inc
cmpsl
xchg
and
test
shl
inc
inc
push
push
add
sub
xchg
sub
dec
pusha
cmpl
sbb
push
into
icebp
mov
jecxz
ljmp
jno,pn
add
dec
addr16
rclb
lret
stc
dec
movsl
out
enter
nop
xor
pop
aam
jmp
insl
mov
sbb
jbe
pop
cwtl
gs
out
sub
or
es
rorb
sbb
mov
adc
fucomip
or
add
mov
mov
sub
or
hlt
mov
idivl
add
cmp
icebp
lock
xchg
xor
jp
adc
roll
jmp
cmc
push
mov
cld
xchg
cmc
cmpsb
add
stc
sti
inc
sub
mov
lea
mov
orb
repnz
inc
add
jnp
call
test
ret
sub
add
mov
add
test
leave
pusha
cmpb
mov
js
sarb
sub
or
cmp
sbb
stos
and
faddp
testl
and
or
push
mov
mov
jne
test
xchg
dec
int
in
lods
sbb
out
sbbl
ret
fs
push
clc
std
clc
pop
and
lea
push
xchg
lods
rorl
std
mov
dec
test
sbb
pop
mov
ret
xor
sbb
popf
int
lods
popf
and
xor
iret
adc
ret
adc
dec
or
adc
xchg
jmp
push
sub
lret
pop
xchg
pop
dec
fwait
in
cltd
hlt
adc
mov
out
insb
sub
aas
cli
lock
cs
push
fst
fs
add
shl
xor
cmp
inc
jae
pushf
out
sub
xchg
push
fs
pop
ficoms
outsb
xchg
jmp
fwait
cltd
fdivr
or
sub
jo
dec
pop
aam
out
mov
addr16
xchg
mov
fsubrl
sub
cmp
data16
sahf
popa
mov
jns
insb
mov
out
sub
jno
pop
xor
pop
iret
testl
aaa
mov
pop
aas
or
dec
inc
aaa
mov
lds
jb
xchg
in
sbb
push
mov
loop
xchg
or
pop
adc
insb
dec
or
icebp
cmp
call
mov
movsl
push
ret
flds
dec
pop
mov
cs
xchg
mov
test
in
stos
mov
test
inc
ucomiss
adc
adc
aas
dec
int
sub
ja
and
es
mov
inc
fcoml
pop
push
mov
mov
jmp
push
push
js
popl
jl
pop
fcoml
test
test
jge
imul
dec
ficoms
adc
adc
lret
rorl
jmp
fs
mov
sub
lcall
cli
mov
pop
xor
cmpsl
xchg
dec
jp
incl
fwait
xchg
sub
stos
and
or
jg
data16
pushf
out
add
scas
and
pop
pop
or
mov
push
sbb
sti
es
mov
cltd
push
rorl
cli
shll
int3
mov
dec
or
jne
int3
push
jp
jecxz
cmpsl
cmp
loop
xor
jl
fildl
push
test
jmp
enter
addr16
mov
daa
sbb
cmc
je
ret
scas
aam
nop
sbb
mov
movsb
dec
jg
lds
loopne
jnp
rcrl
or
sub
jnp
mov
mov
scas
adc
and
in
lret
cmc
jmp
mov
push
loop
icebp
or
aaa
or
dec
std
in
adc
adcb
pop
in
lds
imull
lds
scas
inc
push
das
ja
xchg
mov
je
dec
mov
pop
lcall
and
out
push
mov
mov
add
cmp
jne
dec
ljmp
xchg
xor
push
dec
jne
mov
mov
inc
enter
jmp
icebp
jbe
and
mov
movsl
lea
imul
pop
lret
xor
mov
enter
and
add
out
pusha
sub
out
pop
shrb
mov
nop
and
xchg
std
icebp
in
and
sbb
inc
inc
popf
mov
xor
push
sub
les
cmp
out
test
js
and
push
or
jnp
shll
jns
jp
push
test
mov
loope
add
inc
add
cmp
pop
in
je
iret
xchg
mov
and
push
fsubrp
jns
pop
pop
cld
fwait
mov
ret
loop
jg
imul
sbb
cmp
int3
push
cmp
ja
ret
ficomps
xchg
rolb
sub
movb
lret
sub
ja
xlat
jae
cmpb
ljmp
adc
sti
cld
dec
or
imul
xor
xchg
mov
or
push
sub
out
scas
sbb
mov
sbb
rclb
push
xlat
mov
cmp
push
int
mov
add
or
sbb
sbb
cs
fs
in
xchg
lock
lret
mov
xchg
js
sub
jb
test
popa
lods
sub
scas
and
call
ja
scas
xchg
jmp
sbb
aaa
mov
sti
inc
push
lock
push
andl
pop
out
daa
divl
and
mov
dec
imul
aam
xchg
idiv
adc
pop
pop
cmpsb
les
xchg
in
repz
inc
pushf
sub
mov
mov
push
push
sub
pusha
sbb
sarl
arpl
add
pop
shlb
jle
sahf
rcr
inc
cmp
imul
mov
mov
mov
mov
cld
jns
cmp
je
or
cmp
inc
or
imul
cmp
sub
add
jbe
in
sbb
and
in
add
fwait
inc
rclb
jns
inc
inc
imul
push
jae
mov
rorl
shll
fs
cmp
pop
fdivrp
aas
push
frstor
mov
ret
dec
mov
lret
xchg
fldenv
jl
sub
andl
cmp
fidivs
clc
adc
sub
jmp
cmp
cmpsb
jnp
je
dec
icebp
mov
inc
mov
push
dec
pop
mov
or
daa
xor
pushf
add
outsl
and
mov
insl
sub
divb
mov
sub
xlat
push
inc
fisttps
pop
lods
fadd
imul
and
imul
cmc
mov
mov
and
and
mov
add
pop
sub
fs
sbb
js
xchg
shl
sbb
sub
sbbl
test
cltd
pushf
bound
loopne
out
push
mov
xor
cmp
shl
push
pop
repz
xchg
lods
lock
lock
xlat
gs
xlat
out
fwait
push
jge
andnps
roll
xchg
mov
cltd
mov
das
mov
test
push
inc
inc
jnp
push
add
inc
fstpl
movsb
push
aam
jne
mov
push
jmp
lds
mov
or
loope
leave
mov
fiaddl
cmp
sbb
rcrb
outsb
jne
hlt
xlat
and
mov
out
push
xchg
stos
mov
pop
xchg
xor
jmp
adc
loop
mov
jbe
shrb
jl
or
fbld
scas
arpl
cmp
cmp
xchg
popa
addl
mov
insl
gs
sbb
mov
lods
loopne
mov
fstl
fiadds
mov
les
sub
xchg
inc
dec
push
pop
sub
clc
xor
sbb
daa
into
mov
cmpsl
in
fmull
sbb
cmpsl
push
sub
jb
mov
pushf
cltd
xchg
cmpsl
lock
mov
cmp
incl
and
lret
mov
inc
mov
push
repnz
xchg
push
xchg
dec
xchg
push
inc
dec
mov
push
push
pop
xchg
je
test
aad
push
nop
movups
jo
or
sbb
cld
add
or
adc
daa
add
mov
addb
mov
adc
icebp
enter
sub
cmp
sbb
mov
or
pop
and
add
cmp
and
push
subb
outsl
xchg
in
stos
jecxz
cmp
jecxz
sbb
aam
mov
inc
adc
mov
in
or
sbb
mov
aad
fmuls
push
pop
jp
in
and
and
mov
ljmp
push
mov
mov
sbb
jmp
popa
sti
idivb
pusha
adc
fimuls
xorl
leave
test
dec
mov
imul
rcrb
cmc
sbb
xchg
inc
sub
mov
sbb
pop
lods
mov
add
push
sbb
dec
aas
dec
fst
dec
decl
cmp
rcrb
jg
pop
cmc
fiaddl
mov
scas
outsb
test
xor
pop
dec
sub
popf
xchg
sti
push
lock
inc
ret
xor
cli
add
out
push
lahf
push
sub
add
aad
and
test
add
movb
pop
imul
inc
pop
push
icebp
lds
call
add
enter
es
mov
xchg
and
aaa
xor
pop
push
popa
out
cld
out
stos
pusha
ljmp
cmc
sub
dec
pop
movsl
mov
inc
mov
sahf
mov
jge
mov
xor
not
xchg
lods
test
psllw
repz
fs
xchg
xor
add
rcll
stos
or
gs
mov
mov
fwait
mov
into
in
dec
stos
mov
lcall
lock
fisttpll
pop
sub
or
dec
adc
sub
sahf
call
inc
lcall
bound
ret
inc
jno
inc
push
or
push
mov
fnstenv
ljmp
fs
cli
ret
in
outsb
movsb
outsb
mov
fdivl
sbb
loopne
inc
jbe
mov
test
jns
and
xor
push
adc
push
or
pushf
dec
movsl
inc
cld
or
mov
sti
movswl
pop
mov
loop
fstl
arpl
daa
xor
xor
mov
decb
pushf
pop
out
js
pop
loope
in
jg
jmp
shrb
push
pop
int3
mov
dec
stos
xor
sarl
cmpsb
data16
xor
arpl
and
jecxz
xor
sub
push
mov
sub
ljmp
inc
fs
je
or
xor
rcrl
or
mov
jno
xor
push
repnz
sub
shlb
lea
shrl
xchg
ss
mov
adc
jae
popf
xchg
push
jno
add
xlat
lret
in
cmp
aas
ja
into
or
dec
dec
daa
xor
insl
dec
and
ficoms
in
push
stos
arpl
xor
mov
cld
loopne
in
sbb
adc
test
ljmp
clc
in
aad
sub
and
push
jl
cltd
pop
int3
mov
xor
ds
bound
nop
xor
cmp
shll
xchg
jne
jg
loope
sbb
xor
popa
push
test
fwait
imul
sbb
mov
jmp
cmpsb
mov
mov
sar
pushf
sar
dec
mov
mov
cmc
push
push
mov
repz
int
pop
fwait
or
stos
sbb
test
jle
or
jge
xlat
nop
pop
jns
lods
sub
sbb
out
jecxz
sahf
pop
into
push
mov
nop
pop
aam
test
dec
fsubrl
jle
daa
xor
fwait
daa
xlat
push
imul
jbe
push
xchg
mov
push
es
xlat
lds
daa
aaa
pop
and
std
loop
aas
sti
and
push
stos
inc
add
or
cmp
ss
inc
loopne
and
lret
mov
or
sub
push
inc
push
add
cmp
es
jg
xchg
mov
mov
xchg
mov
insl
pop
xor
daa
imul
or
fisttpl
add
lahf
pop
scas
insl
cmpsl
jle
push
xorl
lds
cmp
cmp
cmp
dec
lock
push
daa
jle
out
pop
xor
imul
xorb
jecxz
shlb
movsl
jge
mov
mov
xor
jb
faddl
pop
mov
inc
aas
cmc
mov
xchg
or
inc
arpl
repz
xchg
add
mov
shlb
lods
mov
xor
repz
dec
fdivr
xlat
lods
xor
xor
mov
jp
out
lock
icebp
stos
stos
ss
cmpsb
imul
and
inc
mov
and
dec
leave
icebp
lods
push
scas
adc
addl
push
dec
roll
push
in
mov
sbb
xchg
mov
adcl
adc
sub
add
mov
inc
mov
test
cltd
outsl
mov
leave
jbe
xor
mov
ljmp
adc
insb
pop
push
ret
and
repz
adc
adc
testb
pop
mov
sbb
loopne
sub
lcall
popf
inc
out
ja
jmp
xchg
or
cld
filds
scas
mov
pop
mov
xor
je
xlat
scas
aad
xchg
lret
pop
inc
lods
pop
push
and
pop
xchg
fisubs
loop
xchg
nop
sub
and
adc
gs
cli
adc
pop
xor
ds
hlt
call
pop
mov
push
pop
cmp
repz
lcall
inc
pop
mov
addr16
xchg
aam
dec
xchg
imul
in
mov
test
loop
xchg
push
aad
loope
andps
pop
and
dec
les
pop
or
add
fwait
imul
fisttpl
fwait
js
cmp
cmpb
and
imull
jp
mov
in
adcl
std
mov
icebp
jle
sti
add
lock
ljmp
xlat
jp
arpl
mov
lock
inc
inc
stos
and
mov
dec
or
mov
cs
cmp
xor
add
pop
rcll
sbb
pop
scas
lea
mov
mov
dec
jle
xor
jae
ret
cmp
in
ficoml
in
mov
xchg
push
cmpsl
jmp
je
int
mov
test
adc
ja
cmp
mov
lahf
in
jle
cmpsl
cmp
les
jo
fucomi
sbb
mov
mov
ret
je
cmpsl
jbe
push
inc
in
mov
jno
and
dec
jg
and
or
shl
xchg
add
in
repz
xchg
xchg
lcall
mov
call
xchg
leave
cmp
outsb
in
xor
and
jmp
icebp
or
add
in
mov
pop
cli
cltd
loopne
or
stc
push
push
inc
cs
mov
or
pop
inc
mov
inc
dec
lcall
xor
push
in
dec
pop
data16
out
lahf
test
mov
test
mov
dec
pop
adc
cmp
test
repnz
push
jmp
test
sub
pop
sti
aad
mov
pop
and
shll
pop
loopne
mov
lea
sub
xchg
adc
loop
mov
jmp
shl
stos
pop
arpl
adc
aaa
in
lods
push
push
xor
sbb
dec
adc
add
andb
cmp
pop
push
xchg
mov
dec
pop
int
in
aas
push
mov
data16
mov
std
dec
mov
push
popf
jno
bound
insl
sti
push
xchg
mov
xchg
mov
out
cmpsb
add
mov
cmp
sub
imul
adc
jnp
push
jbe
ficompl
sbb
dec
sti
test
ficomps
arpl
aas
xor
nop
mov
cs
xor
inc
dec
and
pop
test
shlb
or
cmc
movsl
mov
in
jns
push
idiv
mov
mov
mov
bound
jmp
xchg
pusha
adc
or
xlat
xor
pop
in
mov
out
aas
and
adc
imul
and
xchg
insl
mov
insl
ja
jge
pop
pop
sbb
jno
in
insb
add
dec
fsts
fs
inc
call
call
ltr
ret
enter
fisttps
mov
in
mov
sbb
dec
mov
imul
fisubrl
cmpsb
aam
inc
pop
cli
mov
mov
loopne
aam
push
aam
rorl
in
push
xor
arpl
push
xchg
pushf
test
mov
movsl
pop
mov
xor
xlat
xchg
pop
inc
pop
cld
decl
addb
inc
in
or
mov
inc
mov
stc
jge
jb
pause
inc
dec
rolb
jae
xchg
sbbl
repz
es
pop
push
or
cltd
cmp
push
push
push
dec
xchg
push
gs
add
mov
shlb
aam
jl
das
push
lock
cmp
mov
in
popf
sbb
adc
movsl
stos
lret
jge
daa
adc
jae
mov
inc
mov
movsw
frstor
hlt
add
lods
fnstcw
inc
loopne
mov
int3
mov
add
dec
ja
pop
fidivrl
push
and
sarl
jno
loop
inc
icebp
stos
repnz
ljmp
sub
cs
add
pop
into
sti
push
xor
xchg
dec
cli
sub
xchg
dec
in
xchg
fldenv
and
or
sub
loop
sbb
in
pushf
inc
adc
popa
xor
cmc
cmpl
xorl
sub
add
mov
mov
in
bound
sub
sub
jmp
fdecstp
cmpsl
das
test
sbb
mov
cmp
mov
neg
xchg
popf
sub
test
cs
mov
sahf
mov
fiaddl
mov
jl
sub
cli
out
rclb
and
jae
jbe
icebp
dec
iret
add
mull
push
popf
jle
pop
pop
cmp
popf
jnp
dec
dec
or
lock
inc
fs
outsl
xchg
cmp
sub
hlt
cmc
xor
outsl
hlt
fnsave
jl
xlat
sub
mov
sbb
clc
mov
mov
clc
adc
shrl
inc
insl
add
mov
or
cli
pop
pop
xchg
jnp
cmp
es
cwtl
mov
mov
xchg
mov
into
sahf
jb
dec
hlt
dec
loop
mov
cmc
adc
icebp
add
imul
stos
cmp
imul
pusha
dec
xor
xchg
lds
xchg
loopne
sub
fnsave
clc
sub
fwait
xorb
cmp
jbe
cmp
jmp
sarl
cmp
xchg
hlt
out
mov
test
ljmp
or
cmp
jg
loope
mov
mov
loope
inc
out
and
std
dec
push
rcrl
mov
lods
mov
pop
sub
pop
sbb
das
lock
and
cmp
push
or
dec
rorl
xchg
or
test
loopne
xlat
push
out
rcll
adc
sbb
xchg
pusha
or
bound
sub
mov
cmp
loopne
inc
inc
add
insb
lods
inc
call
xchg
popa
cmp
push
cmp
lahf
add
push
test
movsb
pop
mov
jecxz
loopne
mov
mov
inc
push
mov
push
inc
inc
pusha
addr16
aad
jmp
dec
jg
loop
jb
fwait
lea
push
or
mov
jg
ret
push
cmp
ret
popa
in
aaa
cmp
fucomip
sbb
xchg
xor
cmp
movsl
popa
xchg
outsb
cmp
repnz
sti
cmp
mov
or
jecxz
and
push
xchg
xor
mov
mov
stos
fadd
idivb
xchg
les
pop
popa
cs
xchg
lods
mov
cmp
pop
fs
jo
xchg
imul
mov
xchg
int3
and
add
fldenv
es
insl
popf
xor
test
xor
cmpsl
sub
icebp
and
and
or
rcll
enter
or
mov
xor
jl
xor
fs
adc
loope
js
dec
in
adc
das
jl
cmp
arpl
push
pop
sbb
push
scas
pop
fdiv
orl
hlt
add
jb
rcll
fildll
xor
sbb
cmp
sahf
sti
or
testl
mov
inc
cltd
or
movsb
fistpl
or
addr16
or
adc
das
mov
ror
nop
pop
xor
insb
test
loopne
clc
test
dec
outsb
and
orl
movaps
push
sub
dec
xchg
ret
daa
push
push
mov
push
jbe
fdivrl
sti
loop
push
cwtl
cmpsl
out
push
add
movsb
mov
addb
mov
popf
add
jo
hlt
repnz
xchg
int
cmp
adc
testl
or
int
sti
jmp
pushf
cmp
jne
and
aaa
ret
and
push
repz
push
inc
loopne
sub
xchg
cmp
ja
pushf
xlat
xor
pop
and
mov
or
ror
xchg
cmp
add
out
imul
cmp
or
cmp
into
cmp
or
push
stc
and
pop
push
mov
lock
mov
xor
std
clc
push
jo
xchg
pop
test
pop
sti
pop
fwait
inc
lods
addr16
or
mov
push
adc
push
and
sbb
mov
pop
out
mov
sub
add
fistpl
pop
add
mov
loop
clc
inc
push
scas
sti
stos
lret
int
jmp
loopne
testl
mov
sub
test
repnz
pop
or
js
addr16
mov
jle
xchg
js
inc
cltd
push
movsl
mov
adcl
sbb
loop
lea
sahf
pop
xchg
push
adc
xchg
jnp
add
add
imul
jns
jg
mull
popa
adc
imul
lods
pop
les
in
test
cli
fisttpll
dec
adc
lret
scas
dec
data16
sub
sbb
mov
and
mov
rcll
sub
les
push
scas
xor
xchg
rcll
loop
xor
mov
xlat
imul
out
jo
or
jmp
jmp
dec
pop
test
aas
cltd
test
popa
lods
loope
dec
data16
aas
ror
add
idiv
imul
push
and
push
add
lcall
nop
aaa
or
pop
xchg
fsubrl
flds
mov
les
push
pop
int
in
sub
aad
fs
leave
xchg
dec
fsubs
imul
and
jl
mov
pop
cli
cs
ret
cmpsl
push
cmc
scas
or
bound
push
int3
jle
cmpsb
sub
lahf
loopne
dec
lods
jns
inc
mov
jb
mov
push
popf
sbb
sub
movsb
int3
sbb
jg
in
mov
daa
sbb
jge
dec
xlat
push
jl
pop
je
mov
cmp
mov
test
test
dec
out
nop
lods
leave
lahf
adc
xchg
and
push
out
mov
test
cs
or
add
adc
sub
push
stc
or
hlt
sub
shrb
ljmp
movsb
repnz
shl
mov
sbb
hlt
dec
pop
xchg
scas
ds
push
xchg
into
fadds
sub
push
add
mov
push
rorb
jns
mov
enter
loope
int
jp
ret
jae
sub
es
or
mov
jl
decb
adc
fcoml
shll
in
js
adc
inc
pop
jle
mov
and
inc
dec
repnz
inc
add
subl
add
jb
mov
aaa
inc
sbb
pop
fistpl
jb
inc
push
jbe
insb
sahf
out
adcl
sbb
sbb
inc
sbb
rorb
cmp
add
test
pop
cmp
cmp
insl
push
mov
aad
fcompl
cmp
frstor
sbb
mov
test
lcall
inc
xchg
sub
dec
push
lock
rclb
inc
enter
lahf
stos
das
inc
push
mov
iret
add
sub
mov
outsb
es
out
mov
fst
js
popf
xchg
xchg
jge
jp
loop
push
test
pop
test
jmp
sub
imul
xchg
pop
outsl
jb
outsb
mov
sbb
cmpsl
push
mov
cmpsb
jge
mov
sub
mov
notb
gs
adc
xchg
cld
mov
subl
hlt
in
rorl
out
popl
adc
lret
inc
mov
mov
cli
decl
scas
sub
mov
mov
gs
xor
sbb
dec
xchg
add
pop
lods
bound
inc
pop
cmp
ss
dec
inc
cmp
cmp
add
fwait
xor
cltd
test
or
es
adc
mov
adc
xor
dec
fwait
jle
push
insb
lahf
insl
mov
mov
aad
lret
aad
dec
push
imul
sub
fstps
push
jnp
aas
mov
iret
ja
adc
inc
jb
pop
jge
add
xchg
and
shlb
jns
adc
clc
pop
adc
loop
add
roll
in
sahf
jge
aas
pop
dec
insb
xchg
or
mov
nop
or
xchg
das
or
outsb
mov
fbstp
cmp
mov
add
pop
lock
sub
inc
push
cmp
xchg
xchg
xor
cmp
sub
arpl
in
pop
jno
mov
add
push
mov
mov
out
mov
jg
lret
pop
lahf
sub
pop
sar
xor
lcall
mov
mov
jo
cltd
cmp
jbe
adc
xchg
fdivrs
sub
fcomp
les
cmpsl
test
out
inc
rcll
jg
test
fnsave
aaa
jns
cld
or
orl
jmp
nop
stos
testl
or
gs
sub
pop
jle
adc
aaa
arpl
xchg
push
adc
and
jp
or
shlb
or
es
outsl
push
addr16
mov
stos
test
insb
cmpl
shr
pop
sub
cmc
dec
inc
in
xchg
add
inc
arpl
loop
arpl
icebp
sbb
add
add
jecxz
shrl
xlat
sbb
and
cmp
push
rcrb
sbb
nop
mov
int
jge,pt
dec
shl
jae
testl
add
adc
adc
test
pop
shrb
add
pop
in
les
int
movsl
dec
popa
and
mov
or
jp
or
sub
lods
in
dec
lods
adc
add
pushf
or
jb
sbb
outsl
icebp
mov
arpl
push
lgs
pushl
cmp
dec
popa
sub
xchg
stos
and
leave
add
in
scas
or
mov
testl
jmp
xchg
ss
stc
ret
xor
arpl
fistpl
lret
and
lar
push
pop
inc
sub
pop
pop
and
xchg
xchg
jae
lds
jno
addr16
in
mov
pop
add
add
inc
fldl
rcrb
ret
push
xor
loopne
fsubrs
or
xchg
cmp
xorl
jmp
lods
cltd
xchg
xchg
dec
ret
xor
mov
mov
adc
xchg
lahf
mov
arpl
fbld
shrl
stc
sbb
adc
xor
stos
mov
adc
or
pushf
xchg
jmp
mov
push
xchg
add
pop
sub
imul
dec
mov
xor
out
pop
jecxz
les
lret
xor
lock
in
jo
xor
pop
sahf
movb
fs
orl
sub
ja
shll
lcall
imul
pop
shlb
adc
xlat
dec
mov
outsl
xchg
mov
sub
jns
sub
mov
or
mov
mov
dec
mov
shll
rcrl
cli
jle
idivl
inc
adc
cmp
call
in
pushl
xlat
push
aam
ret
scas
dec
xor
imull
add
xchg
xchg
inc
sbb
gs
or
repz
pusha
sub
into
xchg
pop
aaa
js,pt
repz
ror
jnp
enter
push
mov
shlb
outsl
push
scas
cmp
inc
movsl
aas
ficomps
mov
adc
es
xor
sbb
sub
sbb
arpl
or
das
pop
cli
int
xor
fnstenv
fdivl
bound
fs
ja
or
out
sub
arpl
ret
orl
mov
aam
ret
mov
sbbb
loopne
pop
pusha
je
mov
cmpsl
xchg
pop
push
pop
adc
enter
popf
mov
fiaddl
popa
fsubl
add
notb
dec
out
fprem
pop
in
shr
sbb
ds
addr16
xchg
sbb
pop
mov
test
cmpsb
dec
and
mov
adc
dec
pop
push
mov
jmp
and
adc
scas
mov
sti
and
mov
pop
popf
inc
mov
stos
les
lock
leave
mov
daa
xor
or
call
iret
sbb
out
add
mov
inc
jecxz
dec
stos
jg
xor
aas
cwtl
push
push
or
jno
enter
add
scas
iret
sbbl
push
out
cwtl
imul
es
das
cmp
push
subl
scas
xor
xchg
jo
sub
cltd
push
add
or
xchg
add
int3
hlt
stos
insl
jmp
cmp
jmp
jl
daa
jmp
xchg
sub
je
es
rcrl
std
lock
cmp
fldt
pusha
test
xor
add
leave
jle
sti
mov
imul
bnd
sub
mov
pop
and
lret
adcb
mov
and
pop
dec
int3
inc
stc
int
add
call
mov
movsl
push
mov
lret
les
push
cmp
lock
mov
jl
xchg
mov
addr16
push
mov
loope
hlt
stc
dec
mov
fwait
and
call
gs
dec
scas
rcll
jp
inc
ss
xchg
outsl
out
xchg
cmp
push
sbb
xchg
out
aas
sub
mov
ja
scas
sbb
jge
pop
jns
or
dec
lods
pop
inc
ret
sar
gs
hlt
sub
pop
xor
push
shrb
cwtl
xor
mov
nop
std
xchg
cmc
es
xor
inc
lock
cmp
filds
add
sub
icebp
jno
mov
cwtl
in
popa
popa
xor
push
fiadds
lds
jno
sbb
lret
xlat
and
cmp
jge
adc
sti
pushf
test
push
and
scas
pop
xchg
cmpsb
ret
add
call
data16
mov
into
popf
sbb
mov
add
jmp
es
sub
ret
mov
pop
mov
xor
fidivs
inc
enter
mov
sub
mov
loope
les
sbb
and
cli
es
push
dec
stos
sub
add
fcmovnb
sti
xchg
nop
sbb
and
in
push
mov
pop
sbb
and
std
cli
insl
xchg
mov
cmpsl
xchg
sub
mov
cmp
push
mov
pop
mulb
mov
stc
sbb
sti
inc
imul
je
ljmp
adc
sub
add
push
xor
inc
sub
loope
ss
cltd
add
xchg
mov
sti
and
rcll
out
ss
mov
cmpsb
jp
jo
movsl
sub
or
cli
mov
sbb
sti
jbe
les
or
sub
inc
or
int3
jne
mov
sbb
or
jnp
pop
or
push
imul
inc
or
jbe
jne
jmp
shll
mov
push
shlb
in
pop
jbe
jno
adc
cs
mov
mov
cwtl
cltd
dec
sub
xchg
mov
mov
jbe
ds
jmp
in
push
lret
aam
icebp
fildl
sbb
and
popw
fistps
data16
inc
clc
inc
xor
and
les
sarb
push
push
mov
push
cmpsb
or
sahf
imul
mov
lcall
int
pusha
xor
sub
inc
ljmp
mov
mov
or
sahf
movsb
repz
sbb
sbb
sahf
stos
mov
cwtl
test
inc
jmp
outsb
jl
inc
push
mov
into
repz
lret
pushf
imul
cld
arpl
jne
std
insb
inc
jne
into
fldl
ja
mov
test
lods
insl
sub
and
outsl
jge
call
mov
push
mov
stc
outsl
shlb
idivb
or
test
stos
xor
ret
out
mov
lods
icebp
int3
cmp
leave
fstpt
scas
fs
push
inc
mov
rclb
mov
add
fnstenv
add
mov
xor
scas
jo
cltd
inc
pop
push
movsl
imul
call
pop
scas
cld
mov
pop
mov
dec
pop
cltd
sub
nop
testw
xlat
xchg
jns
inc
adc
loop
and
mov
mov
xchg
and
mov
ret
jecxz
push
shrl
add
inc
push
xor
subl
icebp
pop
jge
imul
xlat
daa
fwait
pop
cwtl
inc
push
dec
ljmp
push
rcrl
sub
add
aam
mov
mov
pop
call
xchg
fists
jl
add
stos
popa
xchg
mov
cmp
shrl
push
fcoms
push
mov
add
test
scas
clc
ret
incl
pop
pusha
sbb
incb
lcall
or
mov
adc
cmp
jae
pop
stc
xchg
and
jg
mov
cmp
push
mov
loop
lods
add
dec
add
lret
mov
pop
psubsw
int
cwtl
fmul
aaa
mov
cmp
cmp
shlb
jne
bound
pop
repnz
xchg
inc
pop
orl
cld
push
push
pop
out
mov
sarl
in
pop
aas
mov
xchg
in
dec
jne
les
push
loopne
mov
fst
icebp
movsb
jmp
jp
sahf
or
mov
inc
push
out
int
add
mov
or
stos
sub
sahf
test
sbb
nop
ss
jmp
iret
push
push
mov
pusha
stos
loopne
mov
lods
xor
lea
les
jp
or
das
and
add
lods
pop
push
pop
jge
dec
mov
insb
ss
repz
testl
inc
sbbb
mov
jmp
mov
test
shll
adc
xchg
cmp
aam
stos
repz
aam
fwait
es
lea
repz
inc
dec
fiaddl
dec
mov
mov
xchg
shlb
scas
sub
scas
hlt
inc
imul
cmp
jle
lds
incl
xchg
mov
ret
jno
stc
pop
lock
mov
xlat
popa
cli
sbb
dec
sbb
sbb
je
fisubs
imul
in
loopne
out
cwtl
pop
leave
hlt
sahf
lock
cmp
add
mov
lock
adc
mov
loopne
dec
movsl
mov
aas
mov
adc
cmp
jb
or
in
mov
icebp
out
pop
nop
rcr
sbb
stos
xor
lds
scas
daa
fwait
icebp
out
imul
test
mov
je
sub
mov
adcb
or
add
and
sub
dec
loop
adc
sub
xchg
cmpsb
iret
sbb
rcr
pop
ljmp
inc
orl
dec
pop
jp
arpl
pop
out
adc
jae
fisubrl
mov
xor
imul
mov
or
mov
popa
shll
insb
sbb
int
mov
ds
mov
inc
xlat
shll
addr16
sub
shlb
pushf
bound
scas
pop
mov
sahf
cmpsb
aas
xchg
mov
insb
mov
fwait
add
aaa
outsl
imul
and
daa
inc
pop
inc
add
push
jno
pusha
add
movsl
mov
jp
in
shll
fs
mov
cmp
add
fsubrl
popa
orb
stc
push
push
cmp
cmp
in
imul
int
sub
ss
imul
lea
inc
dec
std
inc
lds
adc
mov
fwait
dec
and
js
dec
add
inc
fistps
sub
ss
gs
pop
icebp
ja
and
lods
mov
sbb
stc
lea
aad
cmpsl
das
sahf
xchg
and
stos
adc
cwtl
dec
cld
popf
xor
sub
dec
inc
cmp
mov
jecxz
out
dec
push
outsl
mov
add
mov
popa
sub
xor
cmp
mov
jl
mov
cwtl
popa
push
jnp
shrl
and
sub
mov
in
mov
std
mov
iret
je
in
test
fsubr
cmp
jnp
ja
arpl
mov
repz
xor
in
fdivrs
jno
jbe
in
xor
movsb
fucomi
mov
test
mov
insb
pop
xor
insb
in
flds
or
cmp
movsb
mov
stos
adc
and
pop
movl
loop
cltd
nopl
lahf
xor
pop
adc
push
icebp
inc
xchg
xorl
mov
jmp
dec
jge
jnp
add
loopne
pop
add
inc
sbb
aaa
mov
xchg
orb
clc
cmp
adc
flds
cmp
mov
test
inc
add
mov
or
iret
dec
mov
orl
xor
adc
fwait
cmp
add
pop
fsubr
das
add
pop
les
repnz
in
inc
repz
aaa
inc
addb
arpl
fcoml
jns
shl
das
sub
mov
xchg
lcall
gs
lret
jns
je
xor
dec
jecxz
pop
jb
inc
add
jae
nop
lods
push
xorl
mov
out
sub
jmp
add
jp
ret
dec
iret
orl
pop
cmpsb
jne
pusha
pop
imul
xor
rcr
movsl
arpl
or
mov
pop
rcrb
dec
jno
mov
test
mov
test
emms
and
mov
and
adc
pop
xchg
xor
mov
jb
pop
stos
xchg
test
sub
mov
mov
jns
std
or
cltd
scas
sbb
push
lds
push
repnz
adc
std
fstpl
cld
add
pop
jb
in
stc
testl
mov
pushf
es
inc
or
xchg
pop
popf
adc
jno
movsl
popf
pop
mov
orb
pop
sbb
push
and
pop
je
pop
pop
and
mov
add
add
idivb
and
sub
jb
push
rorb
jle
pop
loope
enter
cwtl
in
jmp
sub
bound
pop
cmp
loope
fucomi
push
xchg
mov
mov
jge
cmpsl
dec
cwtl
mov
jmp
or
jle
sub
mov
out
je
mov
add
push
push
and
in
lods
stos
pop
data16
repnz
and
inc
push
xchg
shr
ja
push
mov
clc
mov
lock
and
sub
lods
std
sbb
xorl
div
adc
and
jne
movsl
int
bound
xchg
ret
add
xchg
lea
jno
push
aam
aam
shll
jo
ljmp
and
adc
mov
repz
neg
in
jo
pop
push
xchg
inc
test
enter
cmpsl
adc
xor
mov
add
cli
insl
dec
mov
je
movl
loopne
aam
mov
lock
pop
stos
fildll
cltd
je
xor
pop
mov
stos
xchg
scas
mov
insb
add
sbb
jbe
cld
mov
add
int3
xchg
xor
aaa
mov
xchg
xchg
clc
pop
inc
push
sbb
addr16
repz
adcb
mov
mov
adc
xchg
icebp
or
fsubrs
loopne
mov
fnstcw
dec
loopne
mov
lcall
cld
shl
rclb
popa
mov
fldl
cmpsb
xchg
imul
sbb
or
mov
mov
inc
sbb
push
adc
call
int
or
push
pop
ret
shlb
xor
lret
xchg
push
sbb
sbb
insb
loop
call
sub
call
ds
inc
sub
out
ds
add
pop
sub
stos
push
jl
sub
jcxz
scas
js
stos
inc
stos
dec
mov
and
pop
mov
adc
push
mov
sbb
test
mov
add
mov
xor
mov
insb
sbb
pushf
mov
and
testb
inc
loope
sbb
dec
pop
enter
sbb
addr16
outsl
data16
and
cmovb
mov
mov
outsb
inc
push
rcrl
and
call
pop
addr16
loopne
cli
loop
ljmp
sbb
push
xchg
xchg
fdiv
pop
and
xlat
push
inc
jle
iret
adc
roll
pop
aam
mov
aaa
ss
xor
test
lods
and
inc
xchg
sbb
stc
pop
imul
jb
mov
scas
cwtl
sbb
insl
xchg
stos
stc
sbbb
jmp
add
add
adc
sbb
fists
je
sbb
lret
daa
and
jp
cmp
mov
cltd
cmp
inc
xchg
das
dec
sbb
test
jne
ss
mov
mov
jnp
pop
inc
pop
jg
std
imul
pop
in
cmp
inc
sbb
push
inc
scas
inc
daa
jb
into
lods
jecxz
push
repnz
push
lods
sub
cmp
sub
jecxz
lea
xor
push
into
xor
sbb
mov
mov
scas
mov
xchg
push
sbb
sbb
or
ret
push
xchg
call
adc
enter
inc
jb
sbb
outsl
in
add
arpl
inc
and
pop
js
xor
es
and
pop
and
movl
pop
test
and
and
mov
fsubl
pop
fcomps
ss
gs
pop
sbb
out
jns
aad
pushf
and
adc
inc
jnp
jno
push
cmp
sbb
fcompl
test
xlat
add
outsl
pop
and
mov
je
mov
js
xor
dec
cmp
push
dec
dec
jg
jb
xlat
jae
imul
sbb
lods
push
fsubrs
incl
gs
xor
pushf
inc
outsl
mov
push
adc
not
push
cld
xor
repz
sub
imul
ret
push
mov
fwait
push
jmp
adc
mov
lds
sti
inc
mov
mov
cmovs
sub
xorl
jmp
push
sub
jno
insl
imul
stos
pop
xor
aam
fisubl
push
mov
in
cmp
lcall
mov
rolb
pop
sub
fldt
xchg
inc
xor
xchg
push
popa
jl
shll
mov
fwait
sti
insl
jno
fstps
mov
out
jecxz
pop
sbb
addr16
fwait
aam
sbb
sub
je
add
mov
clc
or
std
jns
nop
ficoml
mov
adc
dec
test
shll
pop
arpl
das
xchg
xor
aad
push
out
wbinvd
inc
out
fistl
fimull
adc
aad
adc
rolb
jns
mov
out
mov
cmpsb
ret
loop
pop
sub
movsl
call
popf
jmp
dec
push
outsb
movsb
sti
adc
shll
int
scas
gs
cltd
xchg
pop
mov
cmpsb
shl
fists
inc
addr16
cmp
jb
shll
sbb
adc
cmp
iret
inc
mov
call
or
inc
and
or
rcrb
xor
xchg
sub
jnp
aam
or
cmp
sub
sbb
dec
push
addr16
in
cld
add
cld
sub
shll
shlb
addr16
imul
add
lcall
adc
iret
lret
dec
in
sbb
jb
lea
or
or
xorb
cmp
mov
decb
mov
push
es
pop
mov
cmp
push
stc
jb
aad
je
sahf
inc
push
xchg
inc
daa
addr16
lret
xchg
xchg
pop
addr16
lods
sub
cld
test
or
pop
fistps
popf
sbb
ret
adc
fdivs
fcmovnb
imull
xchg
pop
sub
and
xchg
jmp
jle
mov
pop
pop
pusha
insb
sti
inc
xchg
outsl
or
leave
dec
stos
and
hlt
sbb
insb
daa
into
lahf
shll
sahf
movsl
jne
js
outsl
and
mov
add
insb
sub
fst
dec
and
je
ret
push
xor
fsqrt
call
jl
outsl
div
sahf
leave
pop
in
push
xor
das
shl
and
sbb
test
leavew
movsb
stc
int3
jae
cmc
sbb
xchg
in
push
and
mov
inc
movsb
rcrl
testb
sbb
jb
mov
add
pop
je
int3
push
pop
in
jg
not
cmc
pop
rcrb
enter
lcall
sbb
push
dec
das
mov
stos
cltd
adc
mov
movsb
pushf
int3
rcll
flds
stos
cmp
rorl
jmp
fnstsw
push
rorb
rcrl
ret
xor
lret
rcll
cmpsb
cmp
jae
and
js
mov
xchg
rclb
adc
pop
test
sbb
jp
jl
sbb
wrmsr
lock
jp
lods
xchg
movsl
in
addl
lret
adc
xchg
loope
adc
jecxz
ret
push
shr
mov
jl
aaa
cmpsb
fwait
dec
push
in
pop
cs
test
add
sbb
testb
out
add
adc
push
push
movsb
xchg
adc
inc
dec
mov
inc
push
jnp
fcmovnb
pop
repnz
mov
xchg
xchg
in
adcb
or
cld
lods
mov
sbb
xchg
scas
jecxz
cld
and
stos
dec
dec
test
push
call
push
jecxz
daa
test
call
paddusw
mov
sahf
out
aad
push
jl
push
and
and
stc
iret
fcmovb
add
cltd
pop
mov
pop
shlb
sbb
jle
xlat
mov
mov
inc
xchg
or
mov
adc
ret
lods
xor
sub
cld
adc
pushf
mov
add
je
ja
push
data16
jmp
pushf
push
mov
mov
sub
rol
add
or
in
inc
mov
test
fucomi
shl
or
stos
xchg
lods
hlt
out
out
in
sbb
dec
movsb
repz
test
fstpl
cmp
fldcw
jae
sbb
jb
and
out
mov
movsb
std
mov
adc
sbb
sysret
mov
jb
or
aad
and
loopne
add
fadds
aas
lods
imul
inc
xchg
loop
sahf
mov
cmc
adc
inc
inc
lea
daa
in
jne
adc
fdivrl
sub
cmp
out
stos
paddw
or
xor
jle
push
push
xor
sub
es
imul
xor
add
jle
js
fidivs
sub
outsl
add
push
xchg
ret
std
into
jecxz
pushf
jb
dec
insl
cmpsb
outsl
jmp
push
sub
push
jbe
mov
cltd
sbb
mov
push
push
inc
xchg
in
mov
mov
dec
mov
push
mov
sbb
pop
aam
dec
xor
lods
orl
fmuls
jo
add
cld
mov
into
and
jle
mov
jmp
jne
or
pushf
repz
or
xchg
in
cltd
aas
es
sub
and
pop
ss
into
inc
or
sub
jp
cli
ss
shlb
jp
pop
cmpsb
pop
sub
jmp
and
mov
add
mov
mov
das
fs
mov
stc
xor
jmp
and
add
fs
dec
mov
loope
adc
loope
lods
mov
xchg
rorl
jae
mov
ret
sub
push
cmc
jne
push
jb
out
mov
inc
pop
sbb
leave
pop
orb
subb
jg
iret
add
adc
push
inc
pop
xchg
sbb
mov
sarl
ds
xchg
mov
sbb
shl
movsb
add
xor
into
cmc
in
adc
movsb
xchg
mov
movsb
pop
addb
inc
jnp
inc
and
pop
cltd
xor
add
xor
adc
adc
mov
cli
mov
incl
iret
push
mov
push
bound
fstpl
in
adc
push
call
mov
or
insl
inc
push
fldcw
aas
es
ljmp
lahf
int3
jecxz
sub
pop
xor
ljmp
xchg
push
mov
daa
testb
int
add
je
rorl
xor
sub
sti
cmp
scas
mov
adcl
cmp
test
lods
sub
add
lret
aas
mov
repnz
pop
cwtl
inc
xor
icebp
int3
adc
pop
cmp
push
in
aas
jno
fidivl
mov
test
das
push
out
mov
lods
mov
lcall
or
xchg
mov
jb
mov
clc
cmp
push
mov
pop
pushl
js
adc
out
outsb
or
push
jne
jge
pushl
icebp
bswap
cli
loope
and
xchg
mov
fucomp
pop
mov
xchg
ljmp
ljmp
lret
add
test
sub
fisubrs
mov
je
movsb
jb
imul
data16
lret
cmp
sbb
bound
push
aas
addr16
orl
pop
std
xchg
lret
dec
icebp
xor
in
xchg
lahf
push
es
cmp
lods
xchg
fistps
push
adc
pop
ja
sbb
and
into
call
jle
movsl
out
cmp
mov
xor
mov
loope
inc
data16
femms
xor
out
pop
lahf
call
insl
movsb
cmp
out
movhps
sarb
es
or
mov
push
mov
in
push
dec
pop
xchg
cmp
adc
xchg
inc
dec
les
pop
nop
iret
fimull
pop
arpl
repnz
cmp
icebp
sbb
or
and
fsts
add
jl
lahf
jecxz
shll
in
or
js
push
cs
insb
jl
inc
shll
filds
outsl
dec
ds
jg
mov
pop
loop
lock
scas
rorl
xchg
push
lds
and
fidivs
mov
pop
sub
or
inc
and
fiaddl
push
mov
lds
lahf
adc
push
enter
push
clc
add
loopne
cmpsb
push
sbb
pop
and
loope
inc
xor
sbb
out
add
out
xchg
out
les
enter
popa
and
xor
es
fisttpl
mov
movsl
fidivrl
jmp
push
mov
cmpsb
fwait
aad
arpl
out
je
movsb
call
mov
cmp
je
pop
push
fisubs
sbb
sbb
cltd
ljmp
mov
push
mov
inc
popa
or
push
sub
js
push
jmp
fwait
mov
mov
mov
sbb
sub
mov
xchg
jle
pop
out
and
roll
dec
or
gs
stos
dec
cmc
add
cld
fs
dec
pop
push
or
clc
mov
or
sub
mov
gs
mov
jl
mov
aaa
jo
cmpsl
aad
dec
lods
movsb
push
ja
rol
or
rolb
fs
pop
sub
bound
imul
cmp
push
mov
adc
lods
popf
sbb
stc
ret
xchg
es
and
je
jl
mov
mov
sub
shrl
inc
aam
sbb
xor
js
jmp
xchg
dec
cmp
fs
pushf
xor
inc
jo
cmp
adc
nop
repz
xchg
imul
movsb
in
inc
fidivl
push
mov
push
jb
mov
dec
fsubl
push
dec
out
add
jmp
test
mov
movsb
mov
hlt
fwait
loopne
dec
inc
fwait
lret
mov
les
fwait
pop
notl
sbb
out
jmp
loop
push
mov
test
clc
std
ret
daa
popa
xchg
int
fdivs
push
and
mov
jne
adc
sbb
xchg
ret
lds
pop
add
fwait
insb
mov
int
push
xchg
and
or
lahf
aad
jge
arpl
mov
mov
cmc
into
jo
mov
sub
dec
sbb
cmp
jl
lea
mov
lret
or
push
pop
aam
inc
jecxz
nop
xchg
add
inc
ss
pop
sahf
mov
lods
mov
mov
mov
xchg
pop
fisttpll
adc
xchg
pop
in
mov
out
sti
jmp
mov
in
jmp
or
adc
or
subl
jp
pop
neg
testl
scas
pop
add
sub
shl
push
mov
mov
lcall
inc
movsb
mov
or
iret
lcall
sbb
ljmp
ret
out
cwtl
mov
adc
cmc
in
mov
dec
cmp
inc
cli
in
add
pop
xchg
push
sbb
adc
rclb
clc
adc
push
jecxz
ljmp
adc
and
test
faddl
fsub
inc
in
inc
sub
rcll
outsb
adc
scas
adc
test
out
xlat
int
mov
sbb
cmp
cli
jmp
stos
les
add
push
in
xchg
jmp
movsl
or
sbb
cmp
dec
sbb
lahf
jle
mov
jle
addb
and
nop
inc
into
lahf
movsl
mov
rorb
xchg
in
add
fs
out
daa
in
sbb
inc
sub
sbb
fisubrs
push
lea
inc
dec
in
lahf
or
pop
sbb
pop
insb
sbb
scas
jbe
push
mov
jge
mov
inc
mov
fstpt
jns
cmp
std
add
das
jg
movsl
lret
les
imul
mov
cs
mov
in
jle
out
mov
jecxz
lcall
fnstcw
cmp
cmp
inc
rclb
push
mov
mov
int
xchg
pop
sti
les
xorl
inc
loop
test
push
popa
mov
or
mov
cmpsw
cmpsb
ret
add
into
pop
xchg
pop
sub
addr16
test
add
inc
cmpsl
adc
push
fcompl
repnz
mov
mov
hlt
mov
call
add
sbb
jns
rcrl
sti
push
shl
inc
fdivrs
test
lahf
inc
scas
pop
mov
mov
imul
aam
xchg
sub
jne
ret
push
out
pop
sub
fisubrs
jmp
cs
shrl
movsb
ja
xchg
pop
bound
ds
add
imul
arpl
jecxz
mov
push
jle
jae
lcall
sbb
or
lods
fmull
fsubl
nop
addb
ljmp
or
loope
push
mov
dec
dec
cmpsl
jb
jb
add
push
cmp
iret
mov
jns
jnp
add
mov
stos
mov
cld
or
push
aaa
push
mov
mov
cs
rcrb
leave
jne
sbb
fdiv
jns
test
cmc
mov
pusha
faddl
cwtl
mov
lods
mov
out
in
int
pop
sbb
inc
add
add
push
push
mov
repnz
jb
les
fildl
cmp
data16
adc
inc
jo
xchg
xchg
dec
cmp
pop
xchg
mov
or
cmc
mov
mov
jno
pusha
dec
sub
lahf
loopne
add
lret
ret
sbb
fdivs
aam
mov
sbb
lods
add
mov
add
scas
int
scas
jl
cmp
scas
add
xor
cmpsl
fstpl
cwtl
push
sbb
push
leave
popa
mov
sub
mov
push
rcl
or
add
dec
cmp
or
test
rcl
stos
int3
push
inc
cli
in
iret
fisttpll
xor
cmp
push
clc
sbb
int3
std
push
aam
mov
sub
arpl
sarb
or
adc
mov
leave
inc
clc
push
shlb
test
lods
xlat
sub
inc
dec
arpl
test
inc
jecxz
lock
xor
out
inc
in
jne
mov
mov
cmp
adc
add
jb
mov
gs
lcall
push
movsb
xchg
add
push
push
flds
mov
cwtl
add
stc
xchg
sbb
test
imul
mov
push
jb
dec
or
mov
pop
sub
cmp
cltd
in
stos
xchg
cld
stc
xchg
shll
fisubs
notb
loopne
adc
jb
push
inc
pop
fs
fisttps
lret
or
sbb
push
add
addl
pop
int3
lds
test
mov
jle
sbb
icebp
cld
aam
sbb
jne
lret
sbb
fbld
push
mov
inc
insl
sub
cli
std
divl
daa
adc
lods
in
sub
test
adc
cltd
and
jmp
shll
adc
inc
add
insb
loopne
cli
inc
add
inc
xchg
sbb
and
xchg
xchg
cmp
sbb
sbb
jno
mov
ja
inc
or
pop
sbb
jle
xlat
pop
les
int
mov
push
int
cld
test
mov
aam
loop
add
pop
sarl
push
xor
int3
jno
adc
or
cmc
loopne
imul
out
adc
lahf
cmp
inc
in
movsl
loope
popf
repz
cmp
fs
mov
jns
pop
push
rorl
mov
vshufps
add
mov
push
sub
insb
cmp
aam
lcall
mov
sub
jecxz
push
adc
or
pop
dec
js
ja
aad
xchg
mov
les
dec
push
adc
push
out
sbb
pushf
xor
aam
mov
dec
fildll
sahf
cwtl
mov
jno
cmp
cmp
mov
mov
cltd
fadds
andb
addr16
mov
pushf
repz
iret
pop
adc
xchg
cmpsb
mov
std
cmp
add
and
dec
ret
mov
adc
sub
js
inc
add
mov
mov
leave
data16
je
sahf
sub
sahf
test
add
int
into
jne
mov
outsl
fwait
ds
int
sbb
jecxz
cmp
test
pop
pop
fs
inc
adc
sub
loop
icebp
cwtl
xor
fsubrs
pop
dec
movsl
movsl
pushf
xchg
push
sub
scas
in
jns
mov
pop
sbb
cmp
outsl
cvttps2pi
es
mov
movsl
pop
aaa
lcall
mov
icebp
pxor
sbb
lahf
pushf
cli
call
leave
sub
xchg
adc
jle
lock
mov
icebp
daa
cmp
xchg
ja
test
jmp
and
in
daa
outsl
inc
fcmovbe
jecxz
loope
adcl
push
push
movsl
push
cmp
mov
and
xor
orl
xor
push
out
mov
xchg
in
cmp
xchg
xor
cwtl
test
adcl
dec
test
sub
cltd
pop
call
pop
cltd
xor
imul
enter
aad
inc
cmc
dec
sbb
popf
push
out
ftst
push
sub
cmp
sbb
dec
dec
out
nop
mov
insl
rcll
jnp
setle
fdiv
loope
push
js
ss
dec
ds
fistpl
iret
pop
mov
sbb
bswap
add
insb
jbe
mov
add
add
sub
jecxz
pop
hlt
fisubrl
sbbl
jb
int3
imul
inc
mov
loope
loope
out
push
jge
lock
mov
cli
jno
dec
add
and
mov
jmp
scas
sub
push
dec
add
mov
xchg
mov
pop
mov
and
int
cmpsl
dec
lods
mov
lods
dec
scas
xchg
arpl
aam
mov
add
outsb
xor
sbb
jmp
xchg
in
call
cmpsl
es
nop
scas
adc
xor
adc
loope
adcb
inc
and
mov
dec
jle
mov
into
sbb
sbb
push
push
shr
sbb
pop
jp
es
adc
xchg
add
sbb
test
jo
aas
jmp
rorl
push
ss
addr16
fldenv
inc
cmp
or
mov
mov
and
pop
lsl
fwait
add
addb
jne
inc
mov
popf
cmpsb
adc
out
sub
sbb
or
pop
repnz
std
xlat
clc
icebp
xchg
fstps
push
dec
lea
dec
cltd
negb
dec
insb
mov
xor
mov
jo
fnstenv
sbb
dec
cmp
lods
sub
outsl
jns,pn
inc
push
add
out
adc
scas
push
cli
popa
lret
push
lcall
aad
in
stos
les
in
rclb
loope
inc
push
popa
xor
adc
mov
mov
jle
test
cmpsl
mov
jns
mov
cltd
or
lcall
adc
sbb
int
test
inc
add
jne
aad
mov
pop
repnz
lcall
rcl
xchg
or
divb
fwait
sbb
mov
dec
getsec
mov
call
insb
repz
xor
nop
in
lret
jno
popf
mov
mov
xchg
fistl
int3
je
sbb
mov
xchg
mov
jae
shlb
ret
adc
cmp
pop
adc
cmp
out
orl
xchg
mov
cmp
and
push
dec
xor
insb
pop
jl
push
lds
lods
add
repz
clc
inc
mov
out
mov
xchg
lahf
inc
pop
fcomip
and
daa
mov
lcall
test
push
push
fnstcw
mov
dec
ljmp
mov
imul
int3
mov
dec
lret
pushl
daa
or
call
add
dec
adc
insb
sbb
mov
cmp
loop
lea
scas
repnz
aam
mov
sbb
xchg
lds
dec
cmp
and
push
inc
mov
sub
xor
lret
sub
pushl
lret
adc
ljmp
push
mov
lret
adc
jae
mov
sub
sub
arpl
pop
insl
and
sarb
decl
mov
aam
mov
xchg
movsb
sbb
jge
and
jno
xchg
stc
mov
imul
mov
add
out
and
pop
scas
jne
clc
test
and
mov
mov
jle
sbb
pop
pop
xor
dec
aas
iret
inc
or
cmp
int3
push
pop
pop
cmpl
repnz
inc
int
pop
aad
dec
add
jg
xor
imul
sbb
mov
inc
stos
cmp
sbb
das
mov
xor
cmp
jp
daa
push
ds
xchg
cmc
mov
mov
fstpl
push
push
jecxz
and
or
add
adc
shrb
mov
adc
pop
jnp
ret
sbb
mov
push
ficoms
or
pop
aaa
add
repz
push
lea
push
jecxz
pop
cmpsl
xchg
fsts
dec
das
das
pop
sbb
jp
iret
arpl
push
sbb
inc
sbb
lea
or
jle
loopne
push
mov
mov
push
test
or
mulb
in
add
out
leave
loope
mov
stc
push
jnp
orb
mov
and
dec
dec
sbb
add
rolb
movsb
mov
mov
jne
xor
inc
rorl
push
xchg
loopne
sti
mov
pop
in
add
jae
xchg
dec
push
xchg
jne
loopne
sahf
shr
fs
or
movsl
ljmp
mov
push
jecxz
add
xchg
test
mov
mov
andb
push
out
cli
fs
imul
ret
imul
or
das
add
lods
lahf
ja
dec
sbb
cmp
mov
pop
or
in
jne
popl
sub
cmpsb
std
xchg
test
mov
push
and
jns
sbb
pop
cmp
addr16
bnd
mov
testl
shrb
insb
mov
or
sbb
ljmp
call
or
and
mov
inc
outsl
jle
sub
stos
mov
out
bound
jp
loope
mov
rolb
repz
movsl
mov
mov
sbb
push
push
call
xchg
adc
imul
dec
mov
inc
ret
adc
sub
mov
sahf
mov
scas
mov
popa
movsb
fs
xchg
out
mulb
cli
pushf
lods
adc
mov
sbb
rolb
jns
inc
ja
push
movl
sbb
inc
or
xor
sbbb
xor
or
jnp
jbe
adc
xchg
insb
dec
xor
popf
mov
sub
pop
pop
nop
xor
int
cmp
imul
cmp
jl
bound
lods
sub
mov
inc
bound
sahf
pop
cmp
and
lcall
mov
cwtl
sbb
stc
or
push
stc
lcall
test
push
loopne
pop
xchg
mov
pushl
rorl
vmovaps
insl
call
sub
add
data16
xor
insb
mov
into
lea
sarl
cld
xchg
loop
test
andb
sbb
xchg
movsb
push
hlt
clc
clc
dec
rolb
add
or
mov
hlt
repz
adc
inc
fwait
mov
repnz
lcall
xor
sub
test
inc
jmp
add
out
stos
out
push
stc
push
push
sbb
pop
rcrb
and
push
add
jl
sub
adc
js
pop
jnp
into
ficoms
push
cmp
and
lods
cmc
mov
out
cmpsl
aam
scas
lcall
jmp
pop
push
dec
lods
aaa
roll
leave
adc
inc
fidivrl
xchg
mov
and
adc
daa
cmp
fistl
das
sub
jmp
hlt
popf
stc
sbb
pop
js
out
lds
xchg
adc
pop
push
and
push
xchg
pushw
int3
lret
pop
adc
xchg
ret
cmpb
test
pop
push
aad
adcb
repz
dec
out
out
and
xchg
sub
es
mov
decl
bound
lret
outsb
xor
cwtl
fistpll
xor
je
xor
pop
ds
fldt
jns
les
xchg
je
loopne
arpl
jo
rorl
mov
inc
pop
sahf
nop
lahf
mull
pop
jle
in
pop
ljmp
mov
cmpsb
call
jns
pop
mov
loope
pop
or
jb
jmp
and
das
stos
outsb
stos
cmp
mov
fdivrs
add
call
clc
sbb
movb
and
jmp
mov
repz
pushl
xchg
or
shrb
fadds
pushf
mov
inc
xor
gs
lds
adc
add
inc
or
dec
out
push
jnp
push
push
pop
sbb
lds
cmpsb
mov
push
in
insb
mov
push
mov
outsb
pop
sbbl
lcall
cmp
xchg
mov
inc
lods
rclb
in
les
movsl
mov
pushl
roll
adc
pop
out
add
lahf
dec
mov
out
mov
jecxz
fcompl
fadds
scas
fs
inc
loop
shll
gs
mov
adc
popa
sbb
int
lret
loopne
mov
outsb
shrb
mov
push
dec
jbe
or
cmpsb
sub
inc
aam
gs
add
jne
movb
and
lret
scas
sbb
std
xchg
jae
out
lahf
popf
lds
jno
push
fs
pop
outsl
arpl
mov
mov
push
call
cmpsl
hlt
inc
imul
lahf
xchg
dec
rcrl
pop
pushf
nopl
inc
in
xor
push
adc
and
ret
inc
jmp
repz
pop
js
jae
daa
fidivl
cmp
out
decb
dec
or
cmp
stc
lods
hlt
rcll
cs
mov
push
lock
mov
adc
in
movsl
xchg
pusha
xchg
cmp
cwtl
mov
lret
dec
rolb
push
fs
mov
cmpsl
das
adc
loope
movsl
push
mov
sahf
es
je
pop
daa
sbb
add
lahf
cwtl
data16
lods
es
push
mov
push
and
mov
push
cs
inc
in
fwait
das
pop
lea
shrl
sbbl
adc
fiaddl
mov
push
andl
push
xchg
mov
fistps
sub
lods
sub
xchg
stos
dec
push
pushf
add
imul
clc
pop
dec
aaa
fwait
push
jmp
loopne
adc
lods
test
jecxz
scas
or
js
sahf
sbb
ret
mov
pop
ja
jl
cmp
lods
push
fists
lret
and
xchg
sbb
cmp
jbe
cmp
adc
xchg
adc
fdivl
fildll
push
mov
icebp
push
xchg
mov
in
lock
xor
and
push
mov
test
mov
add
xchg
popa
adc
xor
sahf
xchg
fs
cmc
jg
mov
loope
jne
lds
leave
and
fiadds
int3
cltd
lret
and
pushl
stos
cmp
mov
in
xchg
je
movsl
jbe,pn
out
sub
fs
or
movsb
sbb
xchg
mov
sbb
inc
push
fidivl
test
test
adc
xchg
into
out
shll
sub
sub
ljmp
add
mov
push
imul
sbb
or
ds
add
inc
roll
frstor
adc
mov
mov
jge
xchg
jmp
pushf
sbb
mov
mov
das
icebp
rcll
lods
push
jae
insl
jge
pop
mov
mov
or
add
divb
call
or
pop
push
lods
jns
imul
jge
push
ja
rep
push
stos
sub
loop
adc
call
cltd
pop
insl
sbb
push
inc
loop
test
sbb
icebp
push
out
mov
mov
je
movl
jle
loope
jnp
int3
push
shl
repz
stos
jo
xchg
mov
mov
pop
popa
sbb
lahf
mov
dec
mov
mov
inc
jbe
fiadds
iret
push
lahf
rcll
dec
pop
sbb
push
and
push
cmpsb
jl
dec
xchg
sbb
mov
inc
outsl
stos
addb
sarb
mov
ret
and
dec
orl
lret
mov
call
push
insb
stc
jl
dec
stc
mov
pop
test
xchg
lret
out
dec
push
inc
test
push
into
fcoml
dec
pop
jae
adcl
cltd
cmp
jnp
jae
jnp
inc
mov
jb
mov
in
stos
push
fxch
ret
pop
aad
sub
out
push
xor
push
mov
sbb
jp
inc
xor
out
cmp
lock
or
das
xchg
fisttpll
mov
cmp
cmpb
pop
xlat
adc
rorl
cmp
sti
inc
pop
sbb
nop
xchg
dec
outsb
jo
pop
mov
push
addr16
xchg
fucom
lahf
loop
dec
xchg
add
or
and
mov
jl
dec
pushf
xor
sbb
xchg
or
adc
sysenter
leave
inc
in
mov
dec
sub
int3
repnz
and
mov
lock
inc
push
outsl
out
pop
call
ret
ljmp
shlb
cmpl
jbe
lock
or
nopl
and
movsb
sbb
ret
sub
cltd
adc
lret
mov
inc
push
xchg
adcl
inc
push
mov
sbb
scas
enter
fiaddl
out
xor
insl
test
pop
test
sub
ror
dec
add
scas
add
mov
pop
xor
gs
sti
test
pop
mov
adc
rcrb
xor
dec
mov
push
dec
sbb
mov
push
pop
xchg
ret
das
out
fdivr
xor
fwait
ljmp
cmp
repnz
loop
stc
cli
pop
sub
sub
sbb
dec
pop
jg
orb
orl
repnz
inc
icebp
xlat
mov
outsb
lret
xchg
push
inc
pushf
hlt
cmc
jmp
mov
or
lcall
sub
in
outsb
mov
in
dec
jne
nop
jnp
cli
and
icebp
xchg
rolb
mov
mov
or
stc
or
aas
and
movsb
dec
or
dec
bound
and
inc
outsl
int
aam
fiaddl
ja
mov
in
add
add
xor
pop
mov
adc
xchg
jge
and
negb
popa
fisttpl
mov
fwait
das
jae
cmp
jmp
pop
fadds
or
int3
ss
inc
das
jb
xor
fldenv
xchg
shr
mov
sahf
insb
out
enter
push
pop
lahf
rolb
movsl
cwtl
imul
and
imul
lret
or
fdivrs
fists
jns
inc
sbb
mov
pop
mov
push
jp
daa
sbb
sub
mov
test
mov
popa
pop
inc
test
aaa
clc
pop
out
inc
cltd
add
aad
cli
jg
jg
in
fnstcw
inc
cmp
jmp
and
and
insl
ja
and
pop
jae
push
dec
push
dec
insb
or
xlat
add
sub
dec
mov
push
jo
in
popf
rorb
fldenv
leave
mov
jg
cmpl
lds
data16
push
jecxz
out
jmp
in
leave
dec
in
dec
roll
cmpsl
xchg
adc
mov
sarb
movl
in
dec
push
adc
into
hlt
sub
rolb
repnz
sub
dec
stos
mov
fwait
bound
cmp
push
pop
mov
imull
clc
fisubs
shrl
and
paddusw
into
xor
cmp
das
out
adc
div
or
cmpsb
call
push
test
jns
sbb
dec
pop
adc
pusha
test
ljmp
je
daa
add
jge
cwtl
cld
and
xor
cmp
or
xor
mov
je
repnz
add
pop
dec
add
push
dec
fldenv
icebp
lret
pusha
call
cld
push
jb
pop
xchg
mov
mov
pusha
adc
xor
mov
lock
sub
mov
cmc
inc
movsl
stos
and
xchg
cmp
aam
in
jge
jb
ret
jae
leave
outsb
jo
mov
loopne
aad
imul
adc
ds
fidivs
vmovdqa
dec
mov
push
sbb
mov
xchg
mov
shl
ljmp
mov
inc
xor
add
push
divb
data16
mov
lahf
imul
xchg
mov
popf
adc
fucomip
jbe
adc
xor
push
mov
fidivl
lds
pop
xchg
push
incl
mov
in
imul
orl
rcll
fisttps
imul
hlt
imul
push
jb
pop
mov
push
mov
rcrl
shlb
das
mov
dec
cmp
in
repnz
je
sahf
je
sub
cmp
pop
movsb
mov
adc
xchg
adc
xchg
and
hlt
cs
xchg
sbb
xchg
inc
xor
pop
xor
mov
mov
sbb
mov
jns
mov
adc
insl
test
xor
inc
dec
fisttpl
dec
cmp
ds
cmc
sub
rolb
aad
push
jmp
dec
rcrl
xchg
jecxz
push
mov
push
ja
mov
push
sti
sbb
mov
inc
test
pop
enter
xor
sbb
mov
scas
femms
cld
sahf
jp
mov
fsub
clc
iret
or
push
or
scas
push
push
mov
mov
aaa
clc
cmp
cmp
jg
dec
daa
adc
mov
ret
cmp
xorl
nop
dec
pusha
jns
test
pop
add
push
sbb
or
pushf
pop
stos
scas
jle
xchg
ljmp
pop
adc
jge
sbb
mov
sub
dec
addr16
xchg
pop
adcb
xchg
icebp
mov
lcall
xchg
fisubrl
xlat
mov
push
xor
cwtl
mov
xchg
cmp
into
adc
popa
or
rclb
cmp
xchg
pop
pop
mov
rcrb
ret
and
sbb
mov
fdiv
and
arpl
js
or
jmp
cmp
stos
push
call
jmp
ds
fiadds
insl
test
adc
xor
jno
arpl
outsb
clc
aaa
scas
cmp
adc
loopne
icebp
scas
int
push
test
mov
fadd
or
adc
cwtl
stos
aas
filds
lret
cmp
fisubs
rorb
sbb
out
xchg
inc
or
popf
jno
xchg
les
pop
scas
js
mov
sub
pusha
jle
ficoml
dec
sbb
jbe
ret
cmp
mov
dec
dec
jmp
enter
add
push
adc
xchg
lods
out
jg
mov
mov
sti
out
xchg
lret
add
inc
pushl
addl
bnd
stos
dec
call
cld
push
push
and
ljmp
scas
xor
ds
les
stos
fcoml
test
test
lds
mov
scas
mov
inc
outsl
addr16
inc
mov
sub
rcl
cmp
out
xor
jns
clc
xor
fldt
push
add
arpl
jg
je
jg
scas
adc
mov
scas
shrl
jo
mov
decb
adc
lahf
pop
ficompl
jmp
das
aad
sub
out
sub
les
test
int3
fisubrs
leave
decb
scas
jne
leave
and
ljmp
push
jle
pop
add
lds
dec
movsl
inc
xchg
in
pop
and
fsubrl
push
ffree
popf
xchg
shrl
jmp
or
dec
arpl
in
pop
push
jmp
in
in
sub
adc
not
add
stos
push
push
cmc
lods
sbb
add
loopne
dec
mov
jmp
xor
pusha
es
ja
shr
inc
mov
lea
dec
pop
mov
and
nop
or
cmp
in
movsb
movsl
ss
ret
push
inc
and
lods
pusha
lds
sbb
xor
add
andb
sub
adc
inc
fisubl
adc
push
xor
add
inc
mov
data16
shrb
outsb
lcall
fcomi
xor
dec
out
push
clc
sbb
and
pop
iret
add
cli
and
xor
sbb
mov
xchg
shrb
adc
inc
jecxz
jns
shlb
dec
sbb
cmpsb
xchg
ds
jb
cmc
outsb
stos
xchg
push
ds
lods
pop
xor
mov
or
test
cmp
popf
push
xchg
es
mov
jg
std
in
pusha
mov
pop
and
adc
icebp
mov
test
sbb
jo
jge
xchg
fistl
xor
into
push
dec
clc
inc
cmp
leave
insl
xor
test
icebp
mov
jmp
sub
and
scas
mov
aam
scas
int3
aad
lods
pop
sub
and
scas
stc
cmp
sti
push
push
sbb
fiadds
lret
lods
inc
movsl
out
in
mov
mov
fs
dec
jnp
cmp
mov
push
inc
jle
fwait
cmp
mov
mov
dec
or
lcall
repnz
fmuls
sbb
fildl
ja
movsb
repnz
scas
loope
push
rcl
out
push
rolb
ret
icebp
shlb
xchg
push
jae
sub
adc
je
xorb
xchg
xor
ljmp
jb
or
sub
and
jno
mov
sbb
insb
aas
cli
icebp
mov
push
cltd
add
cmpsb
out
sti
frstor
push
adc
fldt
and
loop
ja
cld
outsb
cmpsl
jb
xchg
pop
fstl
push
cmp
dec
add
xchg
xchg
pop
shlb
cld
sub
movsl
jbe
mov
aad
push
push
jnp
pop
rcr
dec
ljmp
loopne
jl
call
mov
or
pop
mov
mov
ss
or
xchg
lahf
jle
dec
outsb
pushf
xrstor
sub
in
jo
mov
push
inc
sarb
adc
jge
int
pop
cwtl
stos
jo
xor
je
sbb
cltd
iret
test
push
aas
push
hlt
adc
push
daa
or
jno
movsl
dec
mov
les
add
sub
out
leave
xchg
sbb
insl
xlat
fs
shl
mov
cmp
xchg
sbbb
aas
sub
aaa
push
push
stos
mov
cmp
adc
in
pushf
adc
loope
imul
mov
or
xlat
icebp
jg
enter
push
fwait
inc
lock
jle
aas
jbe
ret
xor
adc
jne
and
cmc
mov
adc
xor
pop
jle
mov
flds
jns
test
mov
adc
sub
xor
js
call
rclb
sbb
push
es
mov
push
xor
mov
movsb
mov
or
jne
out
jl
add
jl
xor
adc
jns
imul
test
movl
stc
adc
and
pop
and
lahf
jne,pn
fmul
xor
ffree
xor
sbb
lahf
and
and
sbb
ret
mov
adc
leave
add
fmuls
sub
jno
push
and
scas
push
cmpsl
adc
xchg
lods
inc
lcall
jne
shrb
addl
ljmp
dec
push
jns
xchg
rorl
dec
sbb
mov
out
push
pop
or
push
aam
dec
out
push
add
xor
fdivrs
xor
sub
push
aad
sbb
ljmp
shll
or
cld
sub
cmpsl
jecxz
or
in
mov
into
dec
mov
xchg
adc
ret
aad
pusha
push
push
mov
jp
ret
or
mov
fwait
cmp
add
or
xchg
xchg
scas
dec
sbb
sbb
imulb
in
mov
test
inc
dec
ds
push
outsb
popa
clc
out
ret
mov
fiaddl
dec
mov
negl
cmp
pop
stc
or
cld
mov
and
push
cltd
and
fildll
and
test
aad
insl
jne
fxch
add
xor
jnp
std
push
cmp
pop
mov
imul
fbld
stos
jae
mov
lahf
loopne
mov
xor
mov
cmp
std
push
jno
je
jg
pop
dec
aam
ljmp
xor
xchg
out
push
jbe
mov
test
fsubrs
pop
mov
dec
pop
adc
jb
gs
ds
jb
hlt
xchg
dec
add
std
pop
jp
nop
inc
cmp
out
jl
loopne
sarb
adc
rcll
xchg
movsb
jp
and
push
enter
push
push
fcomps
inc
add
data16
loopne
xor
mov
in
dec
jmp
adcb
add
lahf
adc
test
jmp
in
test
jmp
in
out
jg
xchg
push
cmc
ss
ret
sbb
es
pop
and
ljmp
mov
add
aad
xlat
scas
sub
sub
xchg
cmp
dec
inc
stc
dec
fnsave
inc
cmp
ljmp
loope
popa
fmull
les
pop
fidivl
xor
inc
sub
outsl
lods
jge
mov
sbb
fstpl
pop
cmp
xor
sub
std
push
push
cwtl
push
push
stc
cs
cmpsl
and
gs
pop
xchg
cltd
cli
fistl
jmp
arpl
jne
xchg
mov
jbe
cld
fwait
scas
aaa
fidivrl
test
dec
cld
jmp
in
aaa
sub
cmpsb
sbb
repnz
repz
cmpsb
adcb
and
in
adc
sub
into
fdivrs
mov
adc
out
lahf
push
jne
ja
mov
pushf
sbb
add
test
push
or
inc
and
mov
adc
cs
cwtl
leave
insl
enter
ficomps
fdivrl
mov
sti
int3
fwait
les
cmp
cmp
cli
pop
jae
movsl
daa
movsl
push
loop
gs
test
push
imul
add
push
insl
fstl
push
gs
fcmovnb
add
aaa
pop
or
in
imul
mov
outsl
dec
fadds
dec
jne
mov
pop
xchg
adc
orb
sbb
sbb
ret
or
fisubl
sub
pop
pop
fwait
cld
data16
mov
adc
push
stc
stos
jecxz
xchg
je
imul
lods
fistpl
std
lock
hlt
mov
shrb
lock
sbb
incl
cmp
mov
ljmp
fnstsw
mov
cmp
les
rorb
stos
stc
dec
hlt
in
xchg
add
mov
ljmp
fstpt
or
pushf
pop
and
iret
sar
and
sbb
mov
add
test
jae
stos
mov
jg
mov
fistl
add
out
test
rcl
fs
jbe
popa
jl
cmp
push
xor
lods
push
rorb
idivl
or
xchg
mov
movsl
dec
lea
mulb
cli
cld
sbb
push
mov
sbb
inc
and
test
xchg
shlb
fnstcw
arpl
pop
std
jns
pop
jecxz
push
adc
sbb
mov
jo
xor
aaa
or
insb
mov
inc
lods
or
inc
cmp
lock
jle
xor
call
push
or
loopne
xchg
stos
bound
out
test
aad
xchg
test
jnp
loop
xlat
lds
pop
rcrb
mov
xor
fisttpll
imul
adc
fistpll
addr16
inc
inc
bound
shll
andb
add
fcomi
inc
imul
adc
inc
bound
lds
aas
cmpsb
mov
mov
aam
out
rep
lret
mov
mov
push
cmpsb
or
es
jg
jg
pop
cmp
rcll
lcall
cwtl
fs
cmc
int
aas
push
aam
lahf
insl
shrl
adc
sbb
xlat
rcl
stc
imul
dec
dec
mov
cmp
add
popf
stc
mov
pop
fisubl
testb
xor
push
push
inc
mov
mov
add
pop
arpl
test
sbbb
cltd
cwtl
mov
dec
adc
xlat
lcall
into
sbb
add
mov
in
dec
push
test
cmpsb
and
stos
xorb
loopne
adc
inc
bound
xchg
scas
cwtl
mov
iret
jae
jne
push
sti
fsubrs
ret
insl
fnsave
add
scas
sub
ja
shrb
das
rcrl
cmp
ljmp
or
repz
adc
rclb
arpl
fmuls
pop
add
ret
stos
in
and
mov
pop
arpl
pop
mov
pop
xchg
fwait
mov
loopne
jg
stos
xor
cmp
lahf
xor
arpl
xor
push
ds
ret
jmp
or
cmp
pop
repnz
add
sti
and
mov
scas
sub
or
pop
push
sub
sub
xlat
adc
lods
std
lock
adc
orl
sub
jge
and
adc
sbb
fs
sti
popf
push
imul
imulb
mov
xorb
aam
cmp
cmp
popa
adc
xchg
dec
mov
cmp
outsl
jmp
pop
lcall
push
packuswb
subl
push
bswap
testb
inc
ja
or
adc
dec
jne
or
sub
fildll
filds
adc
cmpb
push
mov
and
cmpsb
enter
xchg
enter
inc
mov
dec
popa
outsl
pop
mov
out
mov
jecxz
sbb
leave
fsts
lea
test
inc
outsl
jmp
and
cltd
cmpsb
jbe
jnp
sbb
mov
cmp
mov
std
dec
dec
jp
xchg
cmpsl
andb
sub
ss
test
and
mov
cmp
cli
aaa
mov
andl
xor
outsl
xlat
mov
pop
fldenv
sub
mov
xchg
add
daa
and
push
bound
dec
sbb
dec
aaa
fsubl
shl
adc
outsb
stos
jns
rcrb
les
sahf
and
cmp
dec
cmp
mov
stos
in
std
daa
mov
mov
data16
outsl
gs
push
aaa
jmp
mov
ljmp
mov
data16
mov
push
or
sub
ljmp
cmpsl
and
cmovno
arpl
js
mov
fstps
push
loope
sub
stos
add
xchg
test
xchg
dec
inc
gs
jge
jo
pushl
push
mov
inc
add
ficoms
dec
add
loope
fwait
and
mov
push
loope
fisubl
add
lock
adc
mov
sub
mov
push
scas
sarb
jmp
or
aaa
pop
adc
pop
jae
jmp
repnz
or
lods
iret
adc
and
out
enter
jg
add
add
scas
inc
xchg
or
inc
jno
cwtl
pop
lods
xchg
pushf
fldenv
jl
movsl
mov
aas
jo
ds
lret
xchg
pop
in
or
sub
adc
test
mov
lock
mov
pop
xchg
push
xorl
push
out
pusha
pop
aaa
xchg
enter
in
jae
shll
xor
fsubr
gs
sbb
xor
jge
mov
sub
jae
dec
out
sbb
jbe
adc
sahf
mov
jl
outsb
pushf
sub
cmp
xchg
cmp
out
sub
cltd
jns
and
mov
ss
pop
les
rcl
pusha
lcall
push
pop
subl
std
jge
pusha
add
cmp
imul
mov
sarl
bound
jle
cmp
dec
rolb
adc
inc
mov
jmp
xor
push
fcoms
lods
jbe
xorb
daa
inc
lret
mov
mov
negb
stc
arpl
jle
sahf
xor
mov
hlt
mov
int3
mov
mov
pop
int
xchg
divb
dec
lods
xor
mov
lock
push
xchg
leave
cmp
ljmp
in
jbe
lret
push
into
sub
icebp
add
xchg
push
push
lret
stos
lret
and
xchg
sbb
mov
mov
inc
fstpl
pop
cltd
jbe
lods
mov
sbb
aaa
loop
std
mov
dec
ljmp
or
fcmove
ret
mov
in
push
push
pop
out
jae
cmpb
stos
clc
dec
lcall
push
orb
pop
arpl
mov
sub
push
fstps
lea
test
sbbb
pop
sti
sarl
mov
leave
pop
adc
ds
dec
cltd
fadd
popa
aam
jge
xor
and
push
das
jl
sarb
add
dec
xchg
jbe
sub
nop
pop
xor
shr
mov
mov
sti
dec
and
lcall
nop
dec
movsb
mov
pusha
test
lods
mov
lods
mov
pusha
mov
repz
test
int
mov
cwtl
pop
js
sbb
imul
inc
loop
mov
mov
adc
pushl
repz
fs
test
jb
nop
add
adc
int
iret
fistpll
sbb
xor
js
cmp
js
jg
paddusb
mov
test
repnz
leave
pop
cmp
sti
je
rcr
pusha
sahf
lret
out
or
sbb
pop
lods
les
sbb
stc
mov
stc
fs
jns
cs
les
mov
xor
jle
leave
rolb
out
xor
sub
jae
cmp
or
out
mov
scas
cmp
xor
arpl
subb
or
lock
int3
inc
dec
ljmp
in
jge
cli
pop
fstl
in
inc
inc
sbb
jmp
xor
mov
stos
cmp
sbb
inc
jbe
fdivrs
inc
cmp
and
cmpsb
sbb
jnp
push
cmc
cmp
sahf
or
jnp
xchg
or
xchg
and
movsb
mov
sbb
fs
pushf
push
jmp
and
cmpsl
sbb
inc
repz
cld
jle
call
mov
jne
cltd
adc
outsb
cli
jns
mov
cmp
xor
jo
xor
xor
scas
clc
mov
sub
xor
fnstcw
dec
sub
in
shlb
push
jbe
inc
cmp
jmp
xchg
sub
int3
fs
xor
jns
mov
jmp
lds
cmp
nop
sahf
in
add
xor
sbb
in
outsl
pushw
lret
push
cmpb
fistps
pop
scas
push
xor
or
lcall
les
mov
lret
stc
ret
test
mov
loope
lahf
cmpsl
push
add
xchg
in
scas
sub
int3
or
xchg
adc
mov
repnz
pop
inc
bound
push
call
pop
inc
dec
jp
pop
mov
outsb
fldl
cmp
loopne
inc
inc
in
xchg
sbb
cmp
test
lock
cmp
bound
outsb
xorb
hlt
mov
cwtl
fnstenv
adc
fldenv
orb
cli
ret
cmpsl
sub
push
mov
push
out
rcr
ret
add
jbe
sub
lea
cmovle
ret
cmpsb
pop
mov
aad
cmp
add
scas
push
push
jp
cmp
push
sbb
sub
outsl
mov
loopne
repnz
push
movsl
cmpsl
loope
repnz
xchg
cmpsb
jnp
data16
push
iret
push
idivl
loope
jno
lods
pop
imul
lods
push
repz
push
movsl
xchg
jmp
sbb
insl
mov
test
pop
add
sahf
add
sub
jno
pop
push
int3
mov
mov
shll
or
jmp
mov
sub
and
or
adc
mov
push
out
sub
jae
mov
int3
mov
mov
dec
aaa
repz
dec
add
fcmove
cld
vmwrite
dec
aad
in
cmp
or
sbb
loopne
les
inc
ficoms
pop
mov
std
add
fwait
in
lcall
inc
jge
mov
xchg
popf
lret
cmpsl
or
mov
cmp
cmp
pop
and
insb
dec
loopne
and
adc
mov
mov
loop
hlt
test
into
pop
inc
mov
inc
cmp
jmp
cmp
push
sbb
in
jno
loopne
xor
hlt
cmp
insb
cmp
push
fcompl
mov
in
push
sub
mov
sahf
ret
popa
lods
sub
dec
jmp
popf
imul
insb
mov
add
popf
fistpl
pop
lcall
xchg
adc
mov
std
mov
push
test
iret
outsb
xorl
push
test
push
fcmovnbe
cmp
loope
scas
push
cld
lret
and
popf
or
sub
shl
in
sbb
push
push
cmc
popa
pop
cmp
jmp
insb
lahf
test
iret
adc
dec
xchg
fimuls
mov
dec
jl
in
sub
pop
and
fistpll
and
push
sti
mov
hlt
pop
mov
add
in
fidivrl
adc
out
mov
dec
pop
xchg
aad
jb
shlb
mov
std
out
and
cmpsl
and
roll
adc
cltd
jno
sub
in
jg
insl
mov
lods
dec
sbb
cmp
scas
out
add
cmp
cwtl
es
cs
push
push
lock
fdiv
push
pop
les
movsl
enter
clc
push
frstor
call
movsb
add
cwtl
sbb
add
adc
pop
mov
pop
mov
mov
pop
dec
mov
clc
std
fwait
test
lcall
test
cli
sbb
mov
xor
sub
cmp
cld
lret
incb
cmp
test
mov
push
push
not
jmp
std
mov
mov
inc
ss
add
pop
adc
fcoms
add
enter
outsl
and
mov
xchg
push
test
xchg
cmp
or
push
push
sub
mov
dec
pop
mov
cld
xchg
jmp
pop
jae
add
in
fiadds
dec
dec
lret
mov
stc
sbb
das
push
push
insl
mov
add
mov
xor
jnp
mov
sub
adc
mov
dec
pop
push
jb
cmp
ret
lcall
and
sbb
sbb
and
test
out
fsubrl
jne
scas
cwtl
sbb
jne
aaa
insb
adc
into
lods
lods
jecxz
adc
xchg
jp
sbb
outsb
movsl
mov
mov
cltd
cmp
pop
mov
outsb
rorl
sar
cmc
sbb
mov
mov
mov
jnp
pop
or
jnp
xchg
call
push
cmp
vpunpckldq
fnstenv
jmp
sbbl
and
dec
adc
shlb
mov
aad
sbb
mov
xchg
ljmp
das
aad
pop
add
sbb
xchg
xorl
sub
leave
in
jge
cmp
jne
pop
mov
mov
jns
notb
dec
bound
cmp
clc
ljmpw
xchg
in
mov
aas
fsts
icebp
ret
std
loope
pop
loop
nop
push
popf
call
je
loope
jns
adc
pop
repz
jmp
jecxz
sbb
inc
cltd
mov
into
into
mov
out
mov
repz
dec
test
aas
sahf
in
std
psllq
or
pop
fnsave
arpl
cmp
mov
jns
dec
sub
pop
jae
orb
push
sbb
cwtl
cli
jmp
mov
sub
jbe
imul
jbe
xchg
shr
in
jae
aam
or
mov
and
leave
cmpsl
or
call
shrb
stos
lea
xchg
orl
out
ret
mov
sub
jmp
pop
fiadds
std
pop
into
push
inc
insl
dec
insl
movsl
mov
mov
popa
out
xchg
mov
jmp
test
clc
mov
jne
jle
xchg
inc
inc
addr16
outsb
push
into
push
push
adc
dec
leave
or
jle
pop
add
sbb
jb
cwtl
inc
inc
loope
scas
lret
xor
ss
xchg
or
cmp
and
outsb
sub
pop
stos
sti
mov
clc
lret
sbb
insb
jg
in
sub
cmc
mov
faddl
das
out
push
lcall
add
std
xchg
sub
mov
test
jle
dec
sbb
inc
mov
mov
enter
cmpsb
mov
dec
loop
fs
bound
or
add
lcall
testl
mov
nop
push
cli
jle
xchg
cwtl
sub
adc
daa
aad
jae
push
lods
sahf
je
and
repnz
cld
cmp
mov
movsl
mov
outsb
mov
leave
loope
inc
cmpsb
mov
or
mov
jmp
stc
pop
ret
and
cmp
mov
popa
cwtl
jns
cmp
das
sub
inc
push
scas
push
pushf
lea
xor
rolb
inc
cmpsb
leave
or
lods
ljmp
incl
nop
scas
sub
ret
addr16
lret
xchg
sarl
add
xor
ror
jp
xlat
es
xor
and
int
mov
pop
pop
mov
je
cmp
xchg
es
out
add
ret
test
push
loopne
aas
pop
pop
pop
aas
daa
fwait
clc
rclb
je
and
jge
pop
xchg
or
and
outsl
sub
out
or
jmp
push
cmc
xchg
sub
mov
jae
push
test
addb
xlat
or
jbe
sti
mov
test
inc
mov
jo
inc
jae
inc
int
and
inc
in
vandnps
or
clc
fistl
push
mov
je
add
test
push
pop
push
xor
lods
and
jo
aad
xorl
adc
mov
sahf
rorl
stos
shrb
pop
loope
pop
push
adc
or
pop
jne
xlat
fsubs
and
dec
enter
jecxz
sbb
or
jle
cli
push
adc
cmp
test
sub
cmc
push
jl
push
jnp
jg
shrl
mov
ja
xchg
bswap
cmp
loope
xor
lea
mov
sbb
pushf
test
mov
mov
btc
cmp
xchg
pusha
das
sub
xchg
push
icebp
movsb
js
out
and
sbb
stc
pop
jmp
jmp
scas
cwtl
mov
fsubrp
push
mov
mov
cmp
insb
xor
push
ret
es
fdivl
adc
mov
aaa
scas
cs
repnz
lret
pop
sbb
mov
outsl
dec
orb
fidivs
mov
cmp
jge
dec
ret
mov
dec
push
imull
fdivl
mov
push
adc
in
jb
test
push
sub
xchg
inc
adc
sti
hlt
dec
imul
cmpb
lock
outsl
mov
in
mov
incl
imul
test
sahf
leave
or
ss
mov
out
mov
sarb
out
out
in
mov
rcr
out
push
mov
notb
int
lret
les
cmpsl
xchg
roll
test
xor
sub
lds
lea
test
fnstenv
test
cmp
out
lods
inc
mov
inc
ljmp
movsb
mov
dec
cmp
nop
jl
xchg
ret
pop
mov
mov
or
cmpsb
popf
cmpsl
adc
fcoml
xor
jo
std
js
incl
rclb
pop
pop
jbe
xchg
add
dec
push
xor
jnp
cmp
inc
scas
mov
lods
mov
sbb
push
js
mov
pop
nop
testl
xchg
fidivrs
lods
lock
add
stos
xor
test
pop
int3
testb
fwait
lds
mov
or
shll
sub
loopne
les
push
or
and
movsb
call
movsb
push
adc
gs
loop
lcall
aad
cmp
outsl
scas
cmpsl
rcl
adc
sahf
hlt
frstor
sti
jae
or
mov
ret
xchg
sbb
sahf
imul
mov
out
cmpsb
movsb
addr16
jg
cmpb
jg
sub
xor
dec
inc
xchg
out
push
inc
cmpsb
adcb
mov
inc
scas
es
mov
repnz
rclb
mov
shll
lret
mov
dec
int3
sbb
mov
mov
and
dec
hlt
mov
stc
add
inc
mov
inc
rcrl
aad
adcl
insl
mov
mov
out
mov
popa
add
xchg
add
das
jns
call
dec
mov
cwtl
lods
stos
xchg
fistpl
in
cmp
ror
stc
aas
inc
cld
incb
in
cmpsb
test
xor
ret
loope
dec
cli
sahf
adc
and
jbe
jp
inc
mov
jno
add
pop
hlt
cmc
cli
jno
mov
stos
mov
jno
andb
daa
push
pop
xor
mov
or
mov
sub
dec
mov
pop
or
jne
sbb
mov
dec
xor
pop
jno
lods
frstor
dec
int
cmc
jae
adc
out
imul
fstps
xorl
insb
in
xor
add
cmpsb
adc
aaa
sub
mov
cmp
add
xchg
pushf
aaa
out
pop
mov
daa
xchg
push
mov
push
or
in
mov
data16
cmp
neg
or
xor
scas
rorb
and
out
cmp
stc
out
and
enter
dec
adc
sub
sub
sub
fisubrl
mov
pushf
xor
sub
pop
aam
adc
cmp
fisubl
mov
loop
sub
dec
mov
js
cli
sub
fwait
cmpsb
rcrl
and
mov
or
mov
jnp
push
lock
sti
jbe
pop
popf
and
adc
cmp
repz
rclb
jae
inc
subl
dec
and
lock
cwtl
inc
xor
xor
nop
push
adc
adc
in
roll
add
arpl
or
js
xor
add
lea
sub
popf
scas
inc
test
mov
ja
sub
cmp
push
test
cwtl
adc
jecxz
xorl
add
insb
mov
sub
and
pop
addr16
jnp
dec
mov
in
pop
cmp
stos
fidivrs
or
lcall
mov
in
add
and
das
sahf
lods
mov
aam
shl
cltd
jmp
add
adc
jge
mov
into
xchg
cmp
mov
enter
xor
inc
xchg
push
fildl
sub
mov
int
cmpsl
inc
xor
cld
dec
popf
push
xor
mov
cmc
shr
mov
fidivl
mov
inc
lods
nop
inc
in
jle
adc
sbbl
and
shrb
cmp
cli
fmuls
aas
imul
rcl
repz
js
movsb
cmp
push
xchg
jne
push
add
lret
or
pop
add
popf
mov
xchg
or
mov
adc
std
cltd
cmp
in
out
add
jl
cmp
rcrl
sub
dec
adcl
sub
mov
aad
xchg
shr
movsl
push
int
fidivl
sub
dec
mov
pusha
sub
mov
pop
mov
pop
cli
jp
cmp
popf
dec
inc
lock
shll
aaa
lahf
ljmp
sub
not
pop
orl
jbe
gs
xchg
insl
gs
pop
rolb
out
xchg
mov
test
inc
je
rolb
push
add
std
scas
fidivrl
movsl
js
sub
aaa
mov
cltd
aam
out
cli
insb
enter
imul
out
das
mov
stc
mov
mull
push
in
mov
pop
mov
xor
addr16
push
rcrb
shlb
fchs
sbb
int3
xor
adc
pop
xor
ret
es
insb
lret
aad
mov
insb
addr16
incb
outsl
inc
push
push
inc
call
mov
add
pop
std
in
fisubrs
scas
push
test
mov
fstpl
mov
gs
mov
add
jge
pop
xchg
ret
push
xorl
ja
daa
and
pushf
fidivl
ret
leave
cmp
sub
ret
cmp
adc
fldcw
adc
jecxz
mov
lock
loope
sub
mov
jge
mov
xchg
out
cld
xor
aas
iret
fstl
insl
adcl
les
sbb
push
jge
out
and
xchg
decb
push
pop
cmpsb
mov
mov
sub
cmpl
xlat
sbbb
or
push
and
and
cmp
cmp
sbb
pop
xor
ja
addl
gs
mov
stos
fsubs
add
insl
mov
jbe
test
and
popa
jle
add
mov
push
popa
xor
cmc
sbb
repz
dec
fwait
and
inc
sub
daa
dec
adc
xor
lret
adc
ds
out
xor
or
movsl
negb
mov
dec
aam
out
pop
shl
clc
iret
pop
pop
jo
dec
test
mov
rolb
aaa
pusha
aad
pop
je
jns
adc
dec
or
stos
add
outsb
outsb
sbb
aas
lret
push
ret
lods
or
call
push
aam
pop
lds
and
daa
daa
cmp
mov
adc
clc
pop
mov
mov
lods
sub
and
pop
out
adc
mov
mov
ja
xchg
lods
out
std
adc
mov
jb
push
mov
push
sbb
sub
jl
mov
leave
popa
xchg
cmc
sub
jae
ficoms
and
mov
inc
pop
adc
xlat
xchg
pop
cmpsb
sbb
inc
or
aaa
les
jb
arpl
sub
shrb
mulb
mov
cwtl
mov
fcmove
mov
arpl
pop
mov
dec
mov
scas
fsubs
imul
icebp
dec
out
outsl
mov
or
ret
jmp
cwtl
cmp
xlat
outsl
outsb
addr16
bound
cmpsb
inc
test
test
stc
mov
sbb
xchg
cli
push
and
arpl
mov
jmp
aad
lods
loopne
jbe
pop
fidivl
outsl
test
sub
jp
sbb
push
into
jmp
mov
push
and
rclb
hlt
cld
in
mov
flds
dec
mov
pop
dec
aam
jmp
nop
fs
movsl
popa
fildll
into
lds
pop
lahf
rolb
imul
xorps
sub
cltd
ret
aad
mov
add
insl
sahf
test
push
clc
dec
out
pop
lea
rclb
clc
dec
scas
int
sub
stos
fidivrl
mov
mov
mov
push
inc
or
mov
xchg
sbb
cltd
ret
lcall
fs
aaa
in
das
adc
out
js
and
jge
and
pop
cld
sbb
mov
leave
iret
fsub
or
jmp
cltd
std
and
sbb
or
outsl
test
sbb
xchg
jns
pop
push
test
roll
daa
scas
insb
mov
lahf
data16
aam
xor
jecxz
lret
or
inc
and
popa
push
inc
cmc
mov
inc
ficoms
jno
fsubrs
in
out
push
fstps
jge
data16
je
xchg
cmp
mov
adc
and
lahf
fisttpl
movsl
pop
push
fsubrl
dec
cmp
inc
jns
shrb
dec
add
fisttpll
mov
dec
lret
mov
or
js
sbb
rcrl
add
dec
mov
inc
es
jae
mov
cld
and
xchg
adc
sbb
inc
jno
or
stc
imul
pop
add
xor
adc
xor
add
shrl
sbb
xor
and
or
mov
sub
xchg
data16
das
mov
adc
xchg
pop
out
pop
loopne
mov
push
cmp
fcompl
test
iret
testl
cmpsl
and
call
test
lea
mov
aad
jge
rorb
sarb
mov
mov
mov
add
xlat
push
cmp
xchg
dec
fstpl
inc
adc
fidivrs
sbb
shrb
fdivrl
mov
mov
jecxz
adc
push
or
xchg
inc
xorb
mov
bound
inc
movntq
xor
push
jno
scas
aaa
in
outsb
cmp
pop
sub
xor
sti
fiaddl
sub
add
push
stos
cmp
pusha
push
sbb
mov
and
jecxz
shrb
imul
sbb
sub
lds
subb
sub
xchg
inc
dec
decl
out
jmp
pop
dec
sbb
mov
loopne
push
adc
aaa
pop
rclb
xchg
cli
or
xchg
push
cmpsl
xor
pushf
mov
outsb
cld
jne
mov
stc
cmp
bound
incl
inc
testl
imull
sbb
shl
mov
rclb
push
xchg
stc
addr16
outsb
mov
pushf
cld
mov
inc
and
add
dec
cmp
ja
in
mov
int
cmp
jnp
add
in
fsubr
std
out
sbb
in
aaa
mov
outsl
add
push
jp
scas
sti
popa
push
test
add
xchg
dec
and
push
push
cmp
push
cmpsb
jno
das
cwtl
les
jns
sahf
shrl
shlb
outsb
inc
mov
mov
clc
xchg
popa
mov
and
lahf
lods
loopne
sub
outsb
sbb
adc
cmpsl
xchg
lds
test
in
popa
jle
cmp
insl
jmp
cmc
mov
fwait
mov
pop
mov
mov
dec
or
ljmp
sbb
sub
addr16
adc
inc
imul
fcoml
mov
mov
movsb
xor
jne
push
ljmp
dec
mov
mov
sarl
cmc
test
imul
daa
jo
add
pop
loope
mov
xchg
sahf
pushf
inc
cmp
sbb
or
ret
movsb
sub
pop
test
cli
add
rorb
sbb
int3
pop
mov
scas
jge
cli
inc
jae
mov
aas
jo
test
movsb
lds
mov
pop
dec
aaa
push
mull
stc
add
mov
mov
aad
dec
inc
push
jns
adc
jo
mov
mov
or
dec
pop
xor
and
fwait
mov
testb
cmp
inc
gs
cmpsb
add
inc
cmp
popf
aam
shll
dec
scas
loop
nop
popa
cmp
in
adc
inc
sub
nop
mov
clc
jae
test
sti
ror
sub
pop
adc
fcmove
cmp
xchg
mov
fwait
call
imul
add
xor
jmp
das
adc
jp
add
subl
jbe
in
mov
xchg
cwtl
cmpsl
inc
out
sbb
xchg
jb
fs
mov
iret
daa
jge
mov
loop
push
imul
scas
xor
sbb
subl
jns
mov
jbe
pop
mov
into
scas
mov
shll
testl
xchg
jle
movb
or
fcompl
pushf
adc
roll
mov
cmp
test
cmp
jno
fwait
gs
out
lock
pusha
lcall
pop
mov
xchg
inc
or
lcall
scas
popa
imul
inc
jae
sub
push
sbb
imul
jb
sbb
mov
adc
call
mov
pop
or
jns
stos
movsl
sub
inc
mov
mov
sahf
xor
cmp
cmp
sbb
jae
sub
xor
lahf
shlb
cwtl
lret
inc
push
data16
bnd
sarl
js
mov
insl
dec
xchg
and
mov
insb
lods
cs
or
stc
popa
sub
jnp
test
leave
or
add
push
jb
ljmp
or
test
or
lock
mov
sbb
jb
dec
sub
lret
scas
push
and
sbb
add
pop
outsb
xchg
lahf
rcrl
in
mov
sbb
and
out
dec
cmc
aas
fildl
insb
jl
cmpsb
mov
inc
cld
jnp
movb
mov
inc
jmp
cld
in
cs
pop
sub
lcall
je
mov
inc
mov
fbld
nop
fwait
mov
push
cmp
in
mov
or
test
icebp
xchg
outsb
fisttps
pop
jae
fneni(8087
xchg
hlt
lods
ds
leave
add
aam
sarb
test
and
mov
jno
sbb
jne
stos
stos
movsl
cwtl
dec
test
nop
jmp
popf
mov
in
lret
inc
fisubrs
push
lods
jns
jae
xchg
xor
adc
lods
adc
xchg
jnp
mov
movsl
jecxz
aad
xchg
mov
stos
cmp
es
sub
movsl
insb
or
add
clc
lock
nop
cmp
js
mov
into
jle
dec
or
add
lods
push
xorl
jp
lcall
cmpl
jg
mov
popw
xorb
mov
push
dec
out
dec
or
push
jecxz
bound
stc
loope
gs
scas
stc
xchg
push
outsb
add
mov
cli
movsl
mov
cmpsb
daa
dec
jne
leave
stc
inc
rcl
or
jnp
ret
sub
sbb
cmp
scas
jmpw
push
jmp
insb
lret
pop
addr16
mov
ret
in
add
cli
jmp
cmp
push
andb
adc
jle
mov
lods
dec
xor
loop
repz
les
adc
inc
sbb
cli
cwtl
ss
xor
sub
pop
or
sti
insb
dec
mov
je
scas
inc
arpl
jo
bnd
mov
sti
sbb
mov
cmp
fildll
clc
shr
jecxz
jmp
add
adc
push
push
movsl
and
hlt
xor
ljmp
aas
insl
cmp
pop
xchg
pop
movl
addr16
into
push
add
xchg
test
addl
dec
dec
and
iret
jns
test
lcall
add
cltd
cmp
push
roll
push
aas
push
sub
dec
fldenv
pop
lret
inc
inc
pop
pop
stos
or
loopne
cltd
or
test
imul
ss
gs
data16
aad
mov
jno
fsubp
js
jge
testb
mov
cltd
pusha
jecxz
lahf
jge
ret
call
out
push
ja
dec
pushf
rcrb
arpl
in
les
mov
mov
push
cmp
add
popf
mov
jmp
loopne
or
cwtl
test
xor
mov
ja
add
sub
nop
in
inc
mov
arpl
sub
not
icebp
sbb
fstps
sbb
add
nop
sub
or
xor
or
adc
pop
mov
xor
add
pop
mov
cmp
ffree
dec
xchg
cmp
rcrb
lock
sahf
ljmp
int
and
mov
or
mov
cmp
insb
push
or
sti
pop
xor
fldt
mov
call
stc
repnz
or
dec
movsb
sub
pop
mov
jp
scas
mov
mov
dec
stc
push
popa
xor
iret
inc
and
lret
sbb
pusha
pushl
adc
pop
stos
sbb
test
push
mov
test
ret
adc
xor
jb
mov
mov
push
ja
dec
lret
jg
mov
pop
sahf
movsl
in
cli
in
mov
and
lahf
sbb
pop
mov
or
push
cmc
movsb
in
pop
test
xor
push
adc
ds
shll
cmp
pushf
sub
sahf
mov
loop
jns
xor
xor
push
mov
cltd
or
push
repnz
fwait
int
ljmp
faddp
sub
fs
inc
out
movsb
ljmp
cli
mov
or
js
fwait
repz
lcall
ret
inc
dec
xchg
scas
jnp
das
pop
clc
pop
clc
push
xchg
in
ss
aad
mov
inc
sub
mov
bound
jle
add
fwait
lods
mov
push
fldcw
pop
out
fwait
push
clc
in
mov
add
dec
jg
or
in
lret
ja
flds
jne
fcmovnb
pop
test
dec
je,pn
sbb
das
sbb
pop
mov
mov
dec
sbb
les
mov
mov
or
movsb
outsb
stos
int3
sub
mov
add
jmp
jns
scas
mov
movsl
cmp
xlat
inc
mov
imull
jmp
jne
ret
add
add
mov
rcl
mov
jno
mov
fs
rorl
jmp
mulb
push
jnp
shrb
ror
psubb
cmc
in
rcl
xchg
repz
and
sub
mov
dec
mov
fsubs
out
jne
cmp
pop
jne
fst
cmp
pop
outsb
or
jb
mov
fndisi(8087
mov
int
lahf
mov
outsl
insb
mov
and
je
push
inc
js
sub
out
pop
out
subl
inc
pop
mov
loop
jb
mov
das
out
outsl
cmp
inc
leave
pop
pop
call
mov
cmp
or
jg
inc
or
push
jnp
stos
pop
test
pushf
add
bound
test
pop
sub
jl
mov
dec
lods
adc
rcr
push
cmp
icebp
dec
div
pop
lds
sub
or
fnstcw
ret
hlt
cmp
jecxz
movsb
cmpsl
xchg
xchg
pop
xor
sbb
or
mov
jl
jg
imul
in
popl
sub
cld
sub
testb
sub
push
addr16
popf
adc
out
mov
imul
sahf
das
xlat
in
fnsave
jmp
xor
mov
test
popf
jl
mov
add
fisttpl
movl
mov
mov
push
cs
jb
jmp
adc
xor
je
scas
js
cmp
or
mov
mov
mov
test
sbb
jae
cmp
shlb
daa
out
add
insl
test
rcrb
pop
pop
sbb
inc
adc
notb
pop
dec
mov
push
sub
out
add
call
ret
dec
add
pop
rcr
lods
out
cs
icebp
xor
movsl
mov
inc
lret
xchg
jne
lds
filds
or
jecxz,pt
rcl
jmp
xor
inc
ja
dec
lock
cmp
mov
adc
mov
iret
mov
cmp
test
stos
add
ja
inc
dec
sbb
pop
inc
in
cltd
daa
jbe
cmp
mov
fbld
jno
das
mov
shrl
in
insb
leave
pop
leave
push
dec
orl
repnz
xor
mov
jecxz
in
sub
dec
test
xor
lahf
js
fsubl
xor
mov
mov
cli
sahf
test
in
jo
testb
or
dec
inc
mov
arpl
jge
fs
fs
add
mov
pop
cmp
loop
lds
jbe
notl
push
mov
daa
pop
lret
pop
xchg
add
sbb
mov
aam
pop
test
fisttps
or
dec
int
jns
pop
aas
imul
insl
aam
add
mov
fbld
add
or
in
loop
cmp
out
or
push
dec
out
pop
jle
push
or
jb
jns
shll
shl
sbb
and
push
add
stc
add
sub
add
cmova
dec
das
add
hlt
mov
sbb
dec
add
inc
notl
cli
push
stos
inc
dec
jle
xchg
jb
cmp
popf
sarb
pushf
int
inc
cwtl
inc
mov
lret
mov
xor
pusha
lea
test
xchg
lahf
mov
pop
les
pop
or
dec
add
dec
pop
pop
popf
adc
and
insb
xor
dec
inc
out
icebp
mov
add
mov
dec
fldl
mov
ja
and
inc
xorb
adc
out
clc
cmp
pop
mov
shll
sub
jmp
push
sahf
add
fs
dec
xchg
mov
aaa
incl
gs
and
mov
in
inc
push
ret
cmp
out
and
cmp
pop
cmp
fcoml
push
push
and
push
or
push
mov
adc
xor
mov
mov
mov
in
iret
xchg
test
test
pop
fistpll
out
sahf
sarl
jne
loope
xor
mov
xchg
cltd
jmp
pop
rclb
dec
loop
xor
adc
xchg
or
mov
add
ds
xor
xchg
pusha
shll
xor
sub
shrb
aaa
and
jnp
jnp
jl
mov
jb
adc
xor
mov
pop
sbb
jp
xor
pop
add
mov
jg
aam
jne
mov
add
fsubl
lret
mov
pop
js
imul
lret
jno
mov
sub
push
bnd
mov
outsl
xchg
jl
shrl
lods
fs
movsl
es
xchg
dec
enter
jbe
lcall
mov
xchg
outsl
cmp
clc
scas
test
jp
cmp
fucomp
fsubl
mov
bound
push
mov
roll
or
jbe
jb
mul
xchg
add
add
adc
lcall
mov
sbb
or
add
add
movl
icebp
sahf
push
sub
shr
inc
cmc
mov
mov
lods
cmc
xor
mov
xchg
xchg
movsl
mov
out
ficomps
dec
mov
and
sbb
mov
lds
decl
imul
dec
int
in
or
mov
imul
leave
xchg
xor
jo
adc
and
mov
lods
xor
jle
rcr
cmp
push
inc
popf
xor
out
inc
fdivrs
popa
cmp
jnp
jg
jae
jl
inc
or
outsb
gs
dec
jbe
jae
jg
mov
mov
inc
clc
mov
lea
pop
sub
lods
pop
dec
loopne
dec
mov
flds
mov
adc
inc
insl
cmp
aas
sbb
add
inc
or
pop
dec
cmp
push
dec
lea
push
rcr
out
jmp
pop
sub
sbb
cmc
mov
or
sbb
cmpsl
aaa
lret
xor
push
and
nop
pop
mov
int3
xor
push
mov
les
movsl
dec
addr16
dec
dec
push
pop
insl
test
xchg
repnz
add
imul
shlb
inc
gs
mov
and
js
sub
push
inc
rcrl
jae
imul
push
in
shl
and
leave
or
negl
shr
xor
sub
mov
sbb
insb
inc
add
loope
in
inc
fimull
popa
pop
pop
mov
mov
rorb
sti
adc
xchg
jmp
outsl
loop
idivl
rcl
or
or
inc
dec
subb
pushf
iret
daa
cltd
dec
pop
push
movsb
mov
cmp
imul
inc
push
pmuludq
dec
lods
ds
sar
outsb
or
popl
in
or
xor
js
jle
fadd
mov
add
ljmp
dec
xchg
xor
jb
fwait
xrelease
stos
insl
aad
pusha
or
add
hlt
xchg
dec
mov
jmp
or
jmp
cld
xor
add
adc
dec
jne
dec
dec
mov
adc
push
call
mov
imul
bound
gs
jmp
scas
or
xchg
xlat
inc
js
jae
inc
mov
int3
lret
adc
mov
mov
popa
dec
cmc
dec
movsl
setbe
call
pop
add
inc
shl
mov
frstor
aam
xchg
fidivrs
mov
mov
out
pop
push
loop
in
dec
mov
ljmp
add
and
stos
push
xlat
out
jl
sub
pushf
push
divb
and
and
pop
js
fstl
pushl
mov
xchg
addr16
cmp
imull
iret
mul
xchg
mov
cmp
xchg
pop
daa
das
add
dec
pop
hlt
sub
stos
testl
jle
orl
and
fadds
jae
inc
pop
add
adc
jno
addr16
and
push
iret
cmpsl
xchg
shl
inc
ds
adc
fisttpll
lods
in
ret
push
jmp
dec
and
outsb
sub
clc
xor
bound
std
cltd
push
sbb
sbb
inc
add
mov
hlt
mov
mov
jle
pop
pop
popf
and
pushf
or
imul
xor
pop
shll
inc
fimull
insl
xchg
mov
leave
out
push
adc
mov
or
mov
sbb
lahf
fsubrl
movsl
fldenv
icebp
cmp
xchg
lret
jb
push
jg
or
cmpsl
sbb
lcall
jmp
fs
cmp
mov
cmc
js
shrb
fdivp
lahf
mov
int3
dec
lcall
stos
mov
and
rcrl
pop
nop
mov
int3
lahf
or
jbe
idivb
pop
mov
and
pusha
push
mov
sbb
lock
cli
into
lods
xor
out
fnstcw
sub
loop
xor
inc
and
adc
dec
xchg
shlb
popa
fnstenv
enter
dec
adc
fisttpl
dec
ret
xchg
pop
xchg
add
cwtl
mov
test
fxtract
shlb
mov
lods
gs
into
dec
mov
jg
lret
movsb
lds
mov
or
inc
inc
aas
jg
and
in
inc
adc
cmp
jmp
pop
les
ljmp
in
jg
sti
or
add
repz
stos
int
jae
add
cmp
cwtl
inc
add
movsl
sub
fstpt
fisttps
dec
cmpsl
mov
roll
fdivl
dec
xlat
mov
and
imul
mov
ss
mov
push
pop
or
sbb
shll
call
iret
sbb
std
pusha
int3
and
add
ss
sub
out
pop
sbb
leave
adc
ret
jmp
clc
test
in
jp
cmc
out
pop
iret
lds
in
icebp
sti
sbb
push
loopne
ja
or
push
imul
push
dec
xchg
cmpb
pop
jge
and
test
sub
and
or
jns
mov
sub
lods
shll
das
or
dec
jne
mov
and
nop
inc
xor
sbb
push
push
xchg
mov
mov
leave
sbb
inc
loope
xor
xor
mov
in
jp
mov
cmpsb
idivb
sub
mov
adc
sbb
jl
loop
or
dec
push
adc
xchg
shrd
icebp
inc
fbstp
test
and
add
push
fisubrs
cmp
add
pop
enter
stos
xor
stos
pop
mov
rep
mov
mov
or
rcll
fbld
int3
ret
xchg
push
push
mov
dec
cmp
xor
sub
push
in
sub
xor
xchg
push
mov
nop
and
pop
or
or
adc
dec
out
jle
adc
andb
inc
data16
push
in
in
fadd
lods
data16
repnz
jae
fs
push
xor
xor
cmp
lret
out
mov
outsl
or
aas
xchg
xorl
test
mov
and
cmc
out
sub
xchg
add
cmp
xchg
adc
test
lods
push
xlat
xchg
loope
in
not
jle
ret
fs
lret
pop
xor
mov
call
jge
add
jae
mov
lock
push
ret
flds
dec
jo
and
xor
call
pop
dec
or
outsl
pop
test
mov
add
xchg
and
fdivs
adc
stc
xchg
daa
es
cld
push
push
mov
cltd
xlat
mov
ret
mov
imul
int3
add
les
fnstsw
out
fsubrs
jp
jle
fnstcw
add
sub
shlb
xor
fcoms
jne
stos
jbe
inc
inc
mov
sti
pop
mov
jg
mov
es
push
jne
pop
int3
decb
or
insl
sub
std
sub
imul
add
jbe
adc
mov
mov
imul
cmpsl
add
sub
cwtl
filds
stos
push
shlb
lds
mov
cmp
adc
pop
and
icebp
inc
sub
pop
sahf
bnd
xchg
mov
pop
jno
sbb
addr16
and
subl
movsl
add
mov
xor
jg
or
jl
adc
rol
inc
mov
scas
dec
rol
sbb
jae
xchg
loopne
sub
cmpb
int
stos
loope
pop
ret
sub
jle
ret
sti
adc
pushf
sub
cmp
jmp
out
stos
pop
or
aas
dec
mov
hlt
mov
hlt
mov
pop
pop
add
daa
cmpsb
jne
mov
mov
scas
std
inc
add
and
jle
push
repnz
fisubs
int3
or
jmp
xchg
ss
int3
jmp
imul
pop
decb
fcomps
xchg
add
sbb
pop
fisttpll
leave
dec
xchg
xchg
daa
out
push
cld
sahf
lcall
leave
add
lods
push
sub
rorl
mov
cmp
rorl
adc
idivb
idiv
push
adc
les
inc
pop
push
lock
jnp
sub
sbb
aaa
dec
cmp
sbb
movl
cwtl
push
xchg
and
nop
cld
rcll
mov
sub
rorl
mov
or
xchg
fiadds
sub
gs
jb
leave
push
lds
xchg
loop
packuswb
pop
add
cmpsl
xchg
test
lahf
sbbb
push
xor
in
xor
inc
lret
bound
mov
repz
pop
cmp
pop
es
ljmp
shll
in
mov
das
mov
mov
lea
repnz
and
mov
repnz
test
sub
mov
and
sti
mov
fdivp
lods
fisubs
mov
add
sbb
push
cld
inc
sub
outsl
andl
mov
inc
xor
lock
push
pop
mov
xchg
inc
jb
ret
movsl
sub
aaa
jecxz
aaa
mov
inc
fnsave
push
mov
dec
int3
hlt
adc
ss
pop
jae
jp
push
bound
cwtl
mov
pop
push
xor
jo
into
les
push
xchg
aam
xchg
scas
and
outsl
push
xor
lcall
mov
and
ss
mov
into
mov
mov
mov
dec
jmp
lods
cmp
cmc
lahf
cwtl
inc
or
call
jp
lods
push
push
stc
pop
lret
leave
je
dec
lea
adc
jp
sub
xchg
fildll
mov
in
and
push
sub
imul
or
dec
imul
imul
jbe
mov
push
cld
aaa
gs
or
sti
and
les
std
stos
xor
or
lfs
pop
and
sub
push
dec
xchg
in
rorb
repnz
mov
addr16
jecxz
mov
xor
clc
pop
sbb
cmp
xor
xor
add
clc
fsub
adc
repnz
pusha
mov
daa
je
inc
jge
mov
cwtl
cmp
enter
lods
inc
inc
ret
push
pop
add
outsb
stos
jo
mov
xchg
jns
lods
andb
sub
ljmp
aad
mov
pop
mov
cli
xchg
xor
jne
dec
dec
repz
sysexit
xlat
mov
or
leave
add
add
fwait
outsl
stos
outsl
or
cld
lods
das
out
xorl
in
jns
mov
inc
xchg
test
dec
cmp
adcb
push
xchg
adc
mov
arpl
mov
cmp
lret
pushw
cmp
sbb
mov
xor
mov
pusha
idivb
test
idivl
add
xchg
pop
das
cmpsl
in
push
addr16
cmpsb
add
insl
mov
inc
in
lret
inc
dec
mov
add
pop
jns
dec
imul
sub
pop
ret
out
test
push
test
pop
cmpsb
lret
int
fs
in
inc
clc
mov
call
adc
aad
shlb
subb
inc
lds
sbb
loope
ljmp
movsl
mov
pop
fs
xor
xchg
cmp
std
and
lret
arpl
insl
aas
sti
jmp
in
pop
js
ljmp
iret
outsl
data16
jle
imul
ljmp
mov
or
out
sub
mov
lods
and
inc
xchg
sub
push
push
adc
pop
push
inc
or
aaa
lock
out
hlt
cmp
push
cmc
push
js
out
loop
or
popf
sub
push
mov
icebp
xchg
andb
or
lret
add
adc
adc
jmp
pop
out
out
sbb
inc
xchg
stos
clc
xor
dec
cltd
hlt
int3
in
into
add
mov
subl
inc
scas
dec
push
mov
icebp
cmpsb
xchg
pop
and
jno
in
je
push
xorb
mov
sub
push
pop
lods
dec
push
jmp
inc
sub
ljmp
ss
jmp
mov
loope
rcll
shlb
fmulp
inc
ret
jl
outsb
fcoml
jno
jecxz
mov
sti
inc
int
repnz
notl
rolb
xchg
pop
iret
push
clc
xlat
jmp
std
popf
cmp
xchg
popf
pop
into
mov
inc
ret
rorb
xor
and
mov
lret
leave
outsb
jb
sbb
in
iret
push
aas
rcrl
sbb
adc
inc
sahf
xchg
lcall
shl
push
push
dec
icebp
icebp
outsl
mov
popa
jns
clc
nop
inc
fwait
inc
mov
shrb
fcomp
mov
jg
pop
xchg
iret
insl
xor
adc
cmpsb
jb
dec
leave
ficompl
rcrb
push
into
aaa
fcmovnbe
sub
pop
jnp
stc
push
arpl
and
enter
or
push
aam
add
mov
pop
inc
jne
jae
sbb
lret
and
scas
test
dec
cmp
daa
dec
imul
xchg
mulb
das
lcall
dec
mov
pop
icebp
adc
iret
outsl
lock
repnz
out
and
jae
jno
rcr
mov
cmpsl
push
mov
notl
xlat
xchg
and
adc
pushl
shrb
xor
stc
xchg
push
cmc
add
xchg
adc
clc
mov
in
lcall
mov
outsl
fdivl
fsubp
movsb
fisttpll
mov
or
mov
adcl
inc
mov
call
dec
imul
xabort
jne
xlat
lds
std
inc
leave
lods
sbb
xchg
ds
push
pusha
dec
stc
imulb
cmp
pusha
invd
add
push
push
lahf
roll
int
ja
sbb
inc
outsl
ljmp
rcrl
das
and
pop
lods
jmp
push
adc
jge
pushf
and
xlat
insb
jle
mov
orl
in
data16
pop
sbb
xor
or
lea
aaa
aam
addr16
sbb
jl
mov
pop
jo
inc
aas
mov
mov
xchg
in
fs
cmc
test
pop
and
mov
stos
cli
andb
add
cmp
sbb
in
pop
sbbb
jl
scas
outsb
sbb
jo
mov
push
sarl
cmc
divb
jns
pop
fwait
or
dec
lock
lcall
mov
and
movl
les
inc
enter
rorl
xor
xlat
pop
mov
cmp
les
cmp
sbb
cmc
aad
mov
lahf
xchg
rol
flds
pop
xchg
vprotb
adc
mov
mov
add
cltd
loop
in
push
push
into
clc
push
fldl
xlat
stos
push
insb
mov
and
dec
fs
rolb
mov
fiaddl
pop
pusha
adc
leave
jge
sub
fldt
sahf
stos
jp
ja
mov
jno
and
test
bound
push
mov
jns
sahf
movsl
jb
adc
xchg
sub
xor
xchg
adc
loopne
mov
lods
mov
aam
add
scas
push
not
test
xor
push
loop
adc
adcb
sub
outsl
inc
or
mov
movsl
push
out
ljmp
mov
and
adc
mov
jle
cli
mov
fsubs
push
mov
sbb
ljmp
and
pop
adc
out
inc
sarl
jmp
and
mov
sub
shr
stos
and
sahf
pop
aad
rorb
divl
and
cmp
mov
icebp
xchg
dec
ja
arpl
orl
jmp
adc
add
lea
dec
and
cmp
sub
cmp
mov
xor
test
scas
in
popf
imul
test
loopne,pt
jle
jmp
jne
js
pop
scas
push
daa
or
inc
push
or
jg
lock
fwait
lahf
pop
sti
enter
mov
orl
stos
iret
movsb
iret
test
imul
pusha
adc
jae
sub
pop
fcomp
cwtl
lods
sbb
clc
movsl
mov
mov
xor
enter
rol
repnz
dec
sbb
movsb
aas
add
je
gs
inc
adc
fcomp
push
rcr
dec
pop
hlt
mov
mov
push
or
ret
inc
mov
addr16
addr16
ljmp
aas
push
ljmp
dec
push
mov
xor
movsb
bound
ja
jbe
je
cltd
repnz
jae
mov
push
js
fwait
pop
add
and
mov
add
push
in
jecxz
sbb
call
or
cmp
xor
adc
stc
add
xchg
hlt
add
mov
in
push
add
pop
jno
jae
into
stos
das
mov
fsubr
dec
sbb
sbb
dec
packuswb
sbb
xchg
jno
pop
rcr
sub
test
rorl
or
add
mov
aad
jae
push
dec
ret
frstor
testb
dec
mov
mov
xchg
int3
repz
out
or
es
incb
cld
cmp
xorb
adc
cmp
aaa
in
ret
ror
and
pop
mov
lcall
jp
stos
push
in
movsl
outsb
les
xor
lods
inc
mov
and
inc
repz
or
dec
jnp
or
std
xor
leave
mov
sub
add
cmpsl
push
xor
test
pusha
mov
movsl
imul
dec
mov
sbb
mov
ljmp
add
cltd
mov
pushf
or
les
ss
in
inc
xchg
mov
repnz
push
popa
aas
xchg
jnp
daa
dec
dec
hlt
mov
ljmp
ljmp
xor
mov
ror
arpl
sbb
sub
fwait
les
sbb
push
mov
jmp
cmpsb
and
sub
jmp
int3
xchg
insb
and
ficompl
jns
dec
mov
xchg
inc
std
lret
in
sahf
xor
mov
lock
das
ja
imul
sbb
pop
insl
cmpsb
shll
movsl
cmpb
adcb
lods
ret
jl
or
add
fidivl
lds
ret
push
fs
jle
addr16
pop
sub
arpl
sbb
sub
dec
inc
push
andb
fstps
sub
push
in
or
mov
mov
and
js
mov
cmp
mov
sub
or
testl
pop
xchg
and
push
and
xor
imul
cmp
cmpsl
in
or
cmc
test
call
and
xchg
loope
loope
cltd
or
xchg
push
mov
xor
lods
xchg
out
stos
cli
sub
lcall
jns
push
movhps
ds
sbb
mov
fscale
flds
xlat
decb
jnp
decl
into
jmp
shr
push
inc
xor
or
mov
lret
jecxz
imul
push
outsb
sbb
mov
fcompl
add
xchg
ljmp
jo
jg
push
jge
pop
test
adc
int3
scas
call
jne
dec
add
hlt
or
jl
fidivrs
cmp
adc
inc
push
xchg
lret
jns
add
jno
lcall
push
int
shr
fdivrs
cmp
xchg
pop
mov
imul
gs
mov
dec
cmp
push
jecxz
and
mov
push
outsl
outsl
push
cmp
decl
aas
jmp
leave
dec
mov
push
jl
iret
xchg
fwait
stos
xchg
push
xor
jg
aad
dec
fildl
loop
test
add
lods
add
repnz
sbb
mov
add
dec
adc
mov
int3
xchg
cli
pop
pop
rcrb
fldl2e
aad
outsb
push
mov
sahf
faddl
xchg
jl
xor
adc
hlt
and
leave
mov
xor
movsb
adc
outsb
inc
stos
inc
fidivrs
mov
cld
sub
pop
push
jns
je
stc
mov
pop
dec
ret
nop
out
dec
lret
jmp
insb
dec
or
fwait
mov
mov
fucomip
mov
dec
mov
dec
add
mov
inc
and
push
dec
ficomps
and
inc
dec
mov
fnstcw
cwtl
std
sbb
in
xlat
xchg
dec
test
push
sub
out
xor
sub
adc
sarb
and
ror
mov
adc
push
cmc
dec
mov
stos
mov
aas
ret
sub
in
push
mov
scas
in
push
add
xchg
xchg
lret
xchg
xchg
and
lea
xchg
push
jge
fstpt
es
mov
add
dec
dec
aas
lods
pop
jmp
jg
or
pop
in
jae
iret
or
and
or
mov
int3
pop
mov
lods
test
sub
dec
scas
mov
ret
ret
bound
in
dec
test
cmp
push
into
sbb
outsl
lret
inc
scas
mov
imul
pop
stc
cltd
push
or
or
and
rcl
dec
fnstsw
push
and
nop
push
add
das
xor
nop
xchg
xor
mov
cmp
dec
adc
cld
fdivrs
cmp
inc
sub
inc
mov
out
repz
clc
or
xchg
xchg
mov
cwtl
popa
pop
fmul
jl
jne
inc
aad
roll
ds
imul
ficoml
rorl
jbe
mov
sub
xchg
out
sub
js
jge
lea
inc
sbb
dec
sub
jo
jge
notl
pop
cmp
mov
imul
movsb
das
out
jo
and
arpl
or
in
and
mov
xchg
es
dec
xchg
push
mov
dec
cmp
sbb
daa
pop
adc
xchg
and
sub
inc
loop
insb
and
fcmovnb
adc
mov
gs
ss
add
add
sub
popl
insl
das
int3
jecxz
mov
dec
daa
test
jne
sub
addr16
or
decl
dec
movsb
fnstcw
mov
std
scas
repnz
jg
xor
push
mov
cmp
mov
cmpsl
and
cltd
lret
fidivrs
pop
push
inc
outsb
xor
dec
test
ljmp
lods
push
js
fwait
sub
xchg
cmp
addr16
jge
xor
out
divb
cmc
xchg
daa
inc
lahf
mov
jo
dec
xchg
inc
es
sbb
es
or
cmp
sub
sub
or
ret
jmp
mov
jne
push
push
or
inc
cli
sarb
xchg
pop
nop
pop
nop
test
sbb
into
ret
rcll
movsl
dec
inc
loop
arpl
cmp
jo
and
js
out
lods
adc
mov
bswap
ss
adc
insl
inc
mov
mov
js
add
mov
mov
gs
push
ss
adc
test
mov
or
stos
mov
lea
push
lret
leave
and
insl
inc
or
pop
push
dec
pop
clc
movsb
sbb
in
cmpsb
decb
adc
cmp
sbb
lret
movlps
and
les
in
add
scas
mov
pop
mov
push
aad
shlb
mov
arpl
sarb
mov
stos
in
rorl
nop
xchg
and
jp
xchg
in
je
and
data16
mov
shll
sub
daa
pop
dec
cld
jno
rorl
mov
mov
jnp
jp
xchg
pop
xchg
push
roll
ret
pop
aas
mov
test
iret
mov
loop
add
sub
mov
test
cmp
sbb
inc
jecxz
nop
iret
movsb
mov
out
mov
cmp
stc
popf
movsl
xor
lods
arpl
adc
push
scas
aad
jle
cs
cmp
xchg
pop
jp
in
jbe
loop
mov
inc
ds
jge
repnz
push
fdivl
mov
lock
or
jb
mov
or
in
out
push
xchg
inc
dec
pusha
ret
cld
or
xorb
fs
js
sbb
push
or
stos
add
pushf
cmpsl
xchg
iret
leave
stc
or
mov
mov
ljmp
mov
mov
ffree
sub
sarl
fwait
mov
in
arpl
dec
pop
and
and
fadd
and
out
inc
pop
dec
xchg
and
nop
lret
xor
fdivl
pusha
adc
dec
std
xchg
daa
insw
sub
sahf
fs
stos
xchg
xchg
ss
xor
fisttpl
mov
lock
popa
push
dec
into
and
mov
and
fimuls
call
dec
incl
add
lahf
dec
out
add
loope
clc
outsl
ds
push
sbb
les
out
in
rcrl
data16
dec
nop
pop
dec
scas
fcmovne
repnz
fsts
imul
dec
cmp
cmpsb
mov
add
jecxz
and
xor
aaa
inc
popa
lret
sub
or
fsubl
fcmovnb
fldt
jbe
adc
lds
xchg
pop
out
lds
addl
repnz
inc
xchg
into
pushf
adc
dec
sbb
int3
fnstcw
sub
ret
pop
jae
sub
add
add
dec
popa
mov
ss
orl
out
add
in
inc
and
gs
push
pushf
dec
pop
dec
and
sub
cmp
rcll
jb
call
mov
sub
xor
outsb
sub
out
jge
fists
scas
jecxz
push
in
or
mov
push
sbb
jnp
and
mov
data16
mov
cmp
ret
pop
idivl
iret
sbb
mov
pushf
mov
xchg
mov
jl
sbb
shrd
loopne
stc
pop
mov
dec
or
mov
mov
sub
stos
cmp
add
cltd
shr
push
xchg
imul
out
or
or
lods
pop
js
sbb
or
out
jl
sub
jp
xchg
mov
xchg
mov
xchg
dec
mov
sahf
dec
pop
and
add
aad
repnz
sarl
dec
sbb
insl
clc
lahf
xchg
insb
ret
jecxz
aaa
xor
jne
hlt
fs
fcmovbe
adc
insl
push
shrl
or
jle
push
aaa
push
sarl
ss
js
push
mov
or
fwait
cmp
mov
fbstp
fildll
insb
lea
and
mov
ficomps
enter
mov
mov
test
out
outsl
cli
jecxz
push
pop
loopne
insl
frstor
mov
and
lock
enter
push
mov
push
adc
add
jb
clc
addr16
add
xchg
cmp
lea
outsb
jecxz
mov
cmp
adc
push
repz
repnz
lods
mov
mov
mov
push
pop
adc
fidivl
xor
aam
dec
jmp
cltd
mov
mov
out
lret
inc
mov
dec
add
add
scas
mov
divl
ret
ss
mov
mov
push
mov
fprem
test
into
push
addr16
in
add
sbb
or
mov
mov
test
sub
shlb
mov
sbb
enter
cwtl
xchg
into
jbe
cmp
pusha
cmp
add
pop
pop
dec
xchg
lret
sahf
shlb
insb
push
lcall
cmp
xchg
int
cmc
mov
pop
adc
lods
xchg
out
rclb
dec
imul
gs
inc
add
mov
scas
xchg
lea
xorb
insb
xchg
push
dec
test
fldl
pop
cmp
out
sahf
shl
ds
movsb
lds
inc
cltd
aaa
cmp
mov
push
push
dec
mov
sub
repnz
inc
mov
push
in
mov
shr
cmp
inc
fbld
int
dec
sub
mov
cmpsb
icebp
sbb
push
lods
into
mov
xchg
out
mov
lods
xlat
and
dec
xor
outsb
dec
sub
mov
jns
fwait
icebp
scas
popa
cmp
dec
push
inc
push
xchg
mov
int3
push
cli
mov
dec
pop
repnz
cmp
pop
hlt
arpl
repnz
insl
pop
ficoms
andl
call
pop
rcrl
push
pop
shl
or
jbe
xlat
shrl
cmp
pop
jge
xor
or
push
add
outsl
pop
cli
insb
loope
cmp
iret
fdivr
mov
mulb
das
cmpsb
fldt
negb
popa
movsl
aam
sub
fdivl
xchg
in
ret
scas
ljmp
je
add
iret
cmpsb
xlat
jg
fiadds
loopne
cmp
dec
cmpsl
pop
push
jae
imul
xchg
push
pop
push
inc
andb
jno
addr16
stos
sub
jle
jns
dec
push
mov
shlb
sahf
neg
mov
lret
inc
cmpsb
xchg
aad
aas
ficoml
std
int3
jge
in
cs
mov
lahf
test
ja
fwait
or
arpl
cs
xchg
mov
mov
iret
xchg
int3
mov
push
mov
sbb
pop
setl
cmovno
lds
mov
push
shlb
pop
push
cmc
aad
lea
dec
clc
cmp
xchg
lods
push
maxps
mov
xchg
mov
pushf
push
repz
gs
xchg
mov
mov
stc
test
and
ss
ficoml
dec
cmp
lock
dec
jno
mov
and
xchg
jl
jecxz
xchg
lret
std
outsb
and
sub
and
dec
pop
adc
pop
jp
add
cmpsb
mov
dec
pop
aaa
inc
xchg
xchg
imul
loopne
sub
cli
push
dec
jns
std
lret
sarl
and
jbe
mov
mov
cld
sbb
lods
int
mov
hlt
cmpb
fidivs
out
and
push
sub
xchg
jl
cmp
xor
flds
add
xor
enter
dec
int
sub
scas
popf
clc
repz
and
adc
ds
dec
lcall
scas
fxch
adc
adc
cmp
or
daa
repz
or
jmp
cwtl
filds
push
mov
fbstp
xor
jle
scas
inc
add
out
xchg
xor
clc
popa
lret
lods
aam
jns
mov
cmp
dec
add
mov
add
call
and
and
mov
call
fldln2
xor
ljmp
insl
enter
imul
mov
cmpb
push
out
lcall
je
pop
jo
hlt
jge
push
lds
sbbb
stc
push
or
cs
ja
adc
jb
jg
pop
jno
xchg
cs
es
lock
clc
cli
sti
jle
test
dec
aam
inc
adc
out
shlb
and
jl
sbb
mov
push
xor
clc
push
mov
aaa
es
and
inc
imul
aaa
dec
jmp
stc
out
sub
xchg
popf
out
hlt
or
lods
push
or
test
bound
sub
repz
sub
inc
sub
inc
je
fnsave
std
ja
mov
arpl
inc
cmovb
mov
fdivrl
loopne
sub
bnd
aas
pop
pop
shrl
adc
sub
inc
adc
jae
push
inc
dec
inc
rorl
mov
loop
seta
cmpsb
inc
popf
imul
sti
xor
xchg
test
add
sbb
dec
popf
xchg
dec
stos
xor
sbb
inc
push
nop
lret
cmpsl
jb
cmp
cld
sahf
xor
dec
adc
mov
or
dec
insb
insb
mov
and
sbb
add
repz
outsb
xchg
xacquire
mov
jg
xor
mov
sbb
mov
rorb
xchg
add
jl
push
mov
notl
out
mov
mov
add
jp
cld
dec
flds
call
int3
call
clc
mov
sub
mov
jl
repz
bound
xor
imul
add
adc
in
or
bound
mov
push
arpl
jmp
in
ret
sbb
mov
fadds
loope
imul
std
sub
pop
push
push
negl
aam
sbb
xchg
ret
stc
push
enter
stos
lcall
out
aad
mov
add
sub
notb
cmpsl
dec
push
stos
jae
nop
popf
xchg
in
in
add
cmp
xor
fistpll
jne
aaa
icebp
cmpsb
in
cltd
mov
ljmp
test
test
stos
mov
mov
in
mov
jg
jno
sub
scas
sbb
and
mov
aaa
jne
data16
inc
cmpsl
jl
into
fwait
pop
sub
push
or
loop
fstpt
shll
xchg
xor
out
sub
js
hlt
scas
inc
mov
rolb
imul
mov
add
jl
movsl
lock
adc
nop
mov
mov
sub
fdivs
hlt
sahf
aas
aam
ljmp
mov
inc
sahf
push
and
mov
fcompl
lods
or
rcrb
mov
jo
shll
add
cwtl
or
js
rcr
xorb
nopl
scas
sub
cmpsl
mov
rorb
xchg
xor
inc
shrl
inc
int
and
pop
mov
jae
mov
jns
fcoml
push
stc
cmp
xchg
adc
pusha
add
push
fidivs
les
xchg
pop
fistpll
jecxz
cs
and
xor
loope
frstor
inc
xor
xchg
mov
mov
push
pop
cmp
loopne
adc
sub
rclb
pop
fisttpll
push
mov
popa
arpl
dec
ret
adc
in
xchg
add
cmc
push
imul
cmp
xor
push
in
pop
mov
mov
pop
push
lcall
mov
cmpsb
std
xchg
ljmp
add
adc
nop
cwtl
push
adcl
push
xlat
add
xor
mov
and
mov
and
ljmp
mov
fildl
test
inc
xchg
mov
add
cltd
cmc
gs
js
mov
daa
inc
jle
or
xchg
xor
sub
cli
ficompl
andl
jg
xchg
psrlq
xchg
add
jbe
cmpl
mov
mov
in
inc
insb
rolb
jb
mov
sbb
add
imul
inc
xor
inc
clc
das
scas
data16
jae
pop
jb
jno
and
jmp
sti
jle
rcrl
popf
mov
pop
dec
pop
aam
pusha
and
mov
or
mov
cmp
cmpsb
loope
dec
and
mov
sbb
mov
adc
lock
adc
arpl
rclb
jne,pn
adc
jb
sti
inc
xchg
loop
out
pop
jno
xchg
pop
xchg
scas
int
sub
jo
loopne
or
xchg
sbb
mov
ja
xchg
test
in
sbb
mov
mov
pop
fwait
int3
or
lods
xor
ljmp
or
sbb
pop
stc
or
mov
fwait
mov
decb
push
es
mov
int
lret
loop
cmpsb
mov
jp
popf
mov
mov
pop
xchg
mov
mov
outsb
test
mov
mov
cltd
push
push
xchg
lea
loope
adc
sub
out
push
push
mov
dec
push
sub
xchg
lcall
test
pop
inc
pop
push
xchg
pop
xchg
dec
mov
add
fdivrl
or
mov
xor
cmp
xchg
dec
adc
or
pop
dec
cwtl
aaa
push
lods
pop
dec
int
xor
adc
cmp
mov
jle
lods
clts
dec
and
jae
nop
popf
cmp
inc
movb
xchg
loopne
popf
mov
push
outsb
mov
dec
ds
test
inc
and
stc
cmp
or
push
fs
mov
push
in
scas
or
jne
nop
pop
mov
sub
mov
push
outsl
jmp
in
inc
andl
aam
mov
mov
adc
and
popa
push
push
repnz
rclb
or
cwtl
lea
jns
mov
lret
cltd
sub
mov
arpl
scas
add
popf
ss
lret
cmpsl
xchg
or
xor
inc
or
pusha
cmp
popa
mov
dec
popf
cmc
jmp
inc
xor
dec
negb
pop
pop
rolb
fs
add
jns
jno
jbe
daa
cmp
lcall
xchg
push
pop
mov
jmp
push
daa
push
fdivl
into
addl
test
movups
ljmp
mov
cmpsb
stos
xor
mov
cmp
push
das
mov
mov
push
clc
popa
add
push
and
gs
push
xor
cmp
and
or
mov
dec
popl
push
out
lahf
push
ds
jns
stc
push
push
mov
hlt
sbb
jns
xchg
xchg
imul
jbe
cmp
or
ljmp
or
xchg
or
cmp
outsb
push
sahf
mov
sub
mov
out
das
sub
rcrl
insb
jo
in
push
sbb
mov
pop
rcrb
js
int
ror
ficompl
xchg
or
fisttpl
ds
in
inc
ja
adc
stos
cmpb
pop
xor
pop
mov
shrl
aad
leave
sbb
jbe
adc
cmpl
outsb
das
xor
test
cmpsb
loop
ja
xchg
frstor
aad
aaa
les
into
sub
cwtl
jno
push
jge
lahf
cmp
cmp
mov
sbb
arpl
test
aam
inc
lret
mov
ljmp
loop
lret
enter
sbb
movsb
add
shrb
mov
xchg
jg
out
push
mov
ret
sbb
pop
or
aas
ret
leave
scas
inc
push
mov
xchg
inc
pop
pop
adc
adc
clc
nop
ds
sahf
cwtl
mov
ds
lods
mov
mov
mov
push
divps
or
aas
int
sub
cmp
pop
cmp
fwait
outsb
xor
js
daa
in
scas
jmp
int3
mov
insb
les
shlb
mov
clc
aaa
jp
mov
out
xorb
repnz
pop
sub
push
nop
cmc
dec
jb
int3
bound
into
lods
and
popf
dec
sub
rcr
sbb
or
jg
into
jnp
icebp
outsb
clc
bnd
sub
pop
and
jg
and
loop
icebp
hlt
and
adc
fnstenv
push
jle
stos
adc
xor
dec
cmc
lret
mov
dec
jmp
pop
mov
jnp
sub
dec
mov
xor
mov
jl
xor
cmp
in
xor
mov
lret
add
fcoml
and
pushf
repnz
mov
out
insb
test
mov
push
xchg
mov
sbb
pop
xor
sbb
mov
incl
mov
cmpsb
call
addr16
scas
xlat
in
pop
fdivs
cli
lods
fcompl
cltd
in
mov
in
push
call
jecxz
sub
cmpsb
not
jecxz
pop
repz
sbb
movsl
mov
iret
leave
and
call
xor
lea
dec
imul
in
sbb
flds
cmp
inc
test
mov
sbb
xor
inc
mov
sbb
fmul
cmp
dec
outsb
fadd
jp
mov
xchg
add
pop
xchg
inc
lds
xor
ljmp
sbb
jmp
int
jnp
push
repnz
jge
shrl
push
xchg
jle
cmpl
push
and
stos
decl
pop
sub
add
xchg
add
push
outsb
xchg
hlt
andb
clc
test
nop
xchg
arpl
jae
jo
jmp
shll
movsl
sbb
in
cmpsl
sub
dec
lret
outsb
test
xor
aam
loope
cmc
and
das
lods
add
xchg
or
adc
dec
inc
add
mov
inc
push
mov
roll
adc
popa
push
loope
ja
rcl
or
jle
sub
or
andb
jnp
push
je
daa
divb
ljmp
in
add
daa
loope
lods
ret
sbb
dec
mov
dec
jl
jno
orb
push
andl
push
cltd
mov
ljmp
fistps
push
sarb
inc
jg
jmp
sub
jmp
mov
lcall
dec
arpl
add
jne
or
icebp
imull
jb
sbb
fisubl
nop
scas
xchg
dec
xchg
xchg
popf
imul
mov
and
cltd
pop
mov
dec
cld
fbstp
dec
inc
outsl
in
or
jns
dec
js
es
frndint
fs
and
bound
sbb
cmp
jp
adc
mov
imul
or
outsb
decb
lcall
roll
mov
and
int
shll
dec
jp
cwtl
out
data16
push
test
and
cmpsl
sub
dec
xor
sti
dec
movsl
cmp
aaa
icebp
int
fs
mov
jp
lock
movsb
inc
and
stc
filds
mov
or
jmp
int3
ret
jno
cmp
push
pop
mov
xchg
xchg
cmp
inc
inc
mov
push
adc
lock
pushf
mov
mov
and
ja
repnz
int3
jl
sbb
pop
pop
movsb
out
sub
xlat
ljmp
cmpsb
mov
sbb
pop
shr
aad
inc
add
mov
sbb
aas
pop
sub
jns
sub
shrb
cld
insl
inc
push
jns
rcll
sub
je
mov
mov
ljmp
clc
dec
dec
jae
xchg
jb
lock
shrl
push
push
in
das
leave
fwait
subb
mov
stos
mov
popa
add
mov
addr16
xor
mov
push
test
cmp
adc
fisubrs
dec
mov
push
lret
mov
mov
flds
or
mov
mov
pusha
cmp
sbb
out
jae
shlb
stos
pushf
push
jl
imul
imul
mov
fsts
dec
mov
popa
push
arpl
and
scas
mov
js
pop
adc
popaw
xor
sahf
xor
and
stc
shll
jnp,pt
sbb
mov
mov
sub
add
mov
jg
inc
jno
dec
aam
cmp
mov
xchg
dec
addr16
sbb
dec
dec
push
xor
sbb
sbb
into
xor
shrl
mov
xchg
xchg
in
push
ljmp
lods
add
popa
rorl
test
cmp
cmp
test
pusha
push
pop
sarl
push
mulb
add
cltd
mov
add
cli
pop
mov
scas
or
mov
adc
or
mov
fwait
pop
mov
adc
maskmovq
jecxz
int
movb
or
int
lea
icebp
jb
clc
mov
cmp
in
jns
scas
shrl
dec
push
adc
jg
dec
mov
sub
in
gs
outsb
jmp
dec
fwait
mov
dec
add
stos
bound
out
or
sub
xor
jmp
test
test
mov
ja
das
inc
cmp
mulb
xchg
sub
aaa
es
inc
xor
scas
or
sarl
rclb
fistpl
push
and
nop
dec
push
fisttpll
jecxz
sti
sub
fwait
cmp
mov
adcb
mov
mov
aaa
sbb
lock
mov
adc
dec
stos
fcomip
sbb
out
sar
xor
xchg
dec
jne
mov
push
ret
sbb
mov
xor
push
inc
dec
sub
dec
and
ret
sbb
mov
adc
and
mov
xchg
mov
dec
into
jno
lods
xor
outsl
fdivs
inc
sub
jle
mov
push
aam
test
notb
jecxz
or
imul
add
xchg
lret
inc
jo
pop
jns
lds
aaa
sbb
xchg
outsb
mov
cmp
scas
dec
pop
push
and
adc
cmp
imul
push
stc
adc
out
xchg
bound
sub
addr16
add
ret
mov
leave
push
rolb
fadd
shrl
les
push
cli
jle
mov
cs
xchg
mov
rol
scas
pop
inc
dec
fwait
stc
lret
sti
cs
scas
mov
sub
xchg
and
sti
arpl
cmp
fsubs
into
jmp
jo
or
cmp
and
pop
jo
call
stos
dec
xlat
and
in
mov
scas
sub
inc
jne
or
adc
push
aaa
push
jns
xor
loop
ljmp
loope
sbb
jnp
fs
lods
scas
cmp
cli
jne
fldcw
jae
popf
xchg
adc
sub
mov
jg
popa
xor
movsb
mov
xchg
lahf
or
aaa
adc
dec
adc
int3
mov
in
add
xorb
sub
cs
add
movsb
jl
aaa
xor
adc
ds
jmp
ret
dec
and
mov
sbb
mov
cmp
test
or
rcrb
int
pop
negl
es
xchg
ficompl
jmp
rorb
pusha
fstl
out
mov
push
mov
mov
push
fs
cmp
repz
in
mov
repz
inc
xor
addr16
sub
or
into
push
orb
rcll
fmul
add
enter
xchg
xchg
jnp
jb
test
hlt
popf
pop
shl
dec
xlat
sub
jns
out
push
out
fsubrs
test
repz
xlat
in
adc
jnp
adc
and
push
iret
add
bound
jecxz
enter
outsb
cmp
addr16
mov
jno
ljmp
ss
xlat
pop
lret
mov
shrb
and
mov
adc
das
cmp
ja
into
xchg
mov
int
and
repz
adc
lret
xchg
adc
pop
movsb
add
dec
js
jmp
out
iret
pop
push
adc
adc
cmp
lret
sbb
mov
aaa
pop
popf
lret
or
inc
ss
lods
xor
fmuls
push
or
into
ret
push
mov
out
dec
mov
aaa
cmp
daa
sub
test
mov
dec
aas
jmp
cwtl
gs
aas
loop
inc
push
and
les
and
cmp
mov
push
push
stos
mov
xchg
cmp
jle
cmp
xchg
je
xchg
pop
lods
pop
cmpsb
rorl
cmp
sbb
fwait
sub
cld
pop
cmp
mov
pop
sbb
xchg
pop
inc
adc
lds
inc
pushf
xchg
push
mov
xor
inc
add
daa
jmp
sub
xchg
fs
rorl
xor
adc
push
xchg
rolb
mov
mov
mov
mov
cmp
popf
frstor
js
and
mov
adc
jae
xchg
or
fisubrl
pop
jae
repz
and
jecxz,pt
aaa
xchg
sahf
mov
pusha
in
dec
fwait
jp
mov
fmul
jl
iret
fidivrs
test
mov
cmp
push
sub
sbb
mov
pop
std
xchg
inc
sbb
add
mov
mov
cmp
mov
pusha
cmp
xchg
push
out
push
push
stos
or
das
sarl
pop
pop
push
xor
push
jp
fwait
jbe
mov
lahf
aad
mov
mov
pop
mov
into
mov
mov
xchg
sbb
mov
add
lea
or
xchg
dec
das
cld
jne
test
inc
daa
lret
mov
push
inc
inc
mov
adc
jbe
mov
movsb
or
sbb
movsl
mov
inc
loopne
jl
jns
sbb
mov
jno
sub
inc
data16
dec
movsl
sbb
or
andb
adc
adc
les
xlat
inc
sarl
adc
fnstsw
addl
sub
cld
push
call
jecxz
mov
div
shrb
aas
addl
fs
inc
imul
pop
push
call
cld
pushf
es
xchg
fidivrs
lcall
pop
shlb
ljmp
inc
lods
and
movl
scas
iret
scas
insl
scas
pop
xchg
mov
aad
inc
sbb
mov
stos
jg
adc
arpl
mov
jnp
or
outsb
cmp
andb
mov
leave
adc
mov
lock
call
mov
pop
add
gs
jno
push
push
mov
test
or
loop
xor
leave
xchg
cmp
adc
mov
pop
cld
mov
push
popa
cmp
sti
test
cmp
daa
cs
pushf
aam
std
push
mov
popf
mov
in
fsubs
cmc
shll
adc
addl
out
add
mov
pop
das
aam
repz
aam
and
dec
sbb
out
adc
and
shrd
pop
sbb
jns
jp
or
dec
mov
scas
pusha
pop
or
cmp
lahf
cld
out
imul
push
stos
mov
addr16
adc
pop
aaa
in
arpl
insb
add
inc
and
ss
pop
add
in
nop/reserved
mov
mov
outsb
insl
cmp
sub
out
inc
lea
cmp
cmp
mov
scas
mov
add
ss
mov
mov
nop
cmp
push
jno
leave
icebp
adcb
js
fcoms
data16
daa
mov
imul
xchg
sub
or
test
adc
movsb
fdivrs
lahf
mov
adc
arpl
xor
cmp
scas
and
cmp
dec
popf
bnd
inc
xor
dec
mov
dec
lahf
cmp
lock
and
xor
lret
ds
dec
xlat
aas
call
mov
pop
pop
into
leave
outsl
mov
add
ss
pop
or
jnp
stos
out
and
sub
popf
dec
stos
mov
dec
jne
pop
fstpl
lahf
xor
jp
shll
sbb
jle
and
jno
int3
dec
adc
pop
push
sub
aad
into
imul
div
push
enter
mov
xor
andb
jnp
iret
pop
mov
mov
cmp
jle
in
mov
aad
push
mov
xchg
out
cs
jp
jmp
dec
in
sbb
jne
or
movsb
fxam
mov
adc
imul
jbe
lret
or
dec
or
out
movsb
xchg
sub
imul
jle
hlt
lds
mov
inc
push
or
push
aad
imul
pop
sarb
cltd
decb
stc
inc
sbb
daa
data16
movsb
xor
sbb
mov
or
xor
fsub
jmp
lods
pop
push
xlat
xchg
movsb
pop
sbb
aam
push
cmp
mov
shrl
dec
xor
sarb
sbb
out
out
pop
icebp
adc
cwtl
mov
pop
jp
mov
sti
cmpb
fidivrl
dec
mov
or
stos
sbb
test
pop
outsb
mov
dec
std
mov
and
lods
scas
mov
jbe
cld
pop
js
dec
mov
mov
fs
add
sbb
sub
lds
gs
cmpsl
xor
lret
pop
gs
xlat
and
sbb
je
jnp
cld
popf
push
jmp
test
sbb
and
mov
cltd
lds
or
adc
push
sarb
mov
inc
int3
gs
scas
or
push
idivl
mov
fwait
into
fsubl
push
loop
sti
jmp
repz
loope
outsl
adc
cmp
pop
mov
lds
pop
cmpb
adc
sbb
pop
lods
fstl
cld
aas
mov
loop
cwtl
mov
cld
cmpsl
outsl
ds
xchg
mov
sub
push
in
daa
sti
xchg
int3
jle
adc
repz
xchg
in
or
pop
fwait
and
mov
xor
ret
sbb
nop
push
adc
mov
ret
inc
lds
pop
add
xor
rorb
pushf
jnp
and
xor
cltd
int3
imul
xor
js
fsubl
mov
int
sbb
mov
push
pop
xchg
jnp
dec
mov
pop
data16
pop
out
inc
jne
popf
mov
mov
fstps
cmp
in
inc
or
das
and
add
mov
mov
daa
or
mov
xor
jno
stos
mov
repnz
jmp
mov
rorb
pusha
mov
je
pushf
and
sub
inc
or
popa
mov
cmp
outsb
mov
cmp
popf
push
xchg
adc
lds
fnsave
bound
mov
mov
les
inc
ljmp
mov
mov
xchg
add
gs
popf
push
jmp
js
pop
sbb
jg
mov
movsl
push
mov
jbe
lods
push
mov
in
jo
push
addr16
push
xchg
arpl
push
mov
inc
es
sub
cmc
xchg
add
push
inc
ss
fs
in
cltd
inc
add
xorl
fmul
addr16
add
cmp
push
enter
fisubl
or
mov
cwtl
insb
shlb
or
loopne
icebp
sbb
or
dec
out
push
mov
addb
adc
movsl
repz
jmp
jo
pop
jle
sbb
loope
cmpsb
arpl
hlt
int
loopne
cmp
jae
jmp
mov
cmpsb
cmp
test
lea
insb
xlat
ljmp
xor
dec
pushf
mov
push
in
ss
adc
les
das
or
and
ljmp
and
mov
rcl
in
mov
orl
mov
sub
mov
xchg
fwait
dec
sub
mov
mov
mov
pop
cmp
jmp
dec
adc
inc
xchg
stos
and
mov
mov
push
repz
int
shrb
lods
or
cmpsb
dec
push
pop
nop
mov
jo
fidivs
mov
jg
insb
inc
cltd
jecxz
mov
imul
and
out
push
scas
cmp
rorb
sbb
adcl
pop
sub
push
int
cmp
lods
nop
scas
cwtl
mov
fldt
xor
or
shll
leave
push
int3
ss
adc
mov
sarb
adc
outsb
dec
int3
jl
xor
jbe
cli
sbb
rorl
fs
xchg
popf
std
mov
lcall
sub
xor
push
xchg
xor
and
test
lahf
push
insb
js
leave
or
test
xchg
pop
push
out
mov
push
push
push
shrl
xor
imul
cmp
ret
xorb
pop
mov
jno
loopne
xchg
leave
cmp
and
jb
mov
adc
adc
lods
iret
cli
aaa
sbb
mov
xor
stos
xorb
mov
rcrl
xchg
outsb
or
jb
xchg
mov
push
mov
jp
mov
shlb
xchg
jmp
bound
clc
sub
push
fsubr
in
stos
jno
dec
mov
and
mov
inc
sub
out
add
sbb
dec
mov
out
pop
fcoml
fisttps
adc
sbb
insb
mov
adcl
js
in
pop
jbe
xchg
test
sub
imul
loopne
jle
xchg
clc
jp
es
add
cld
out
js
cmp
cmpsb
xor
int
rclb
push
lahf
icebp
pushf
dec
je
into
repnz
fstp
xchg
mov
push
inc
mov
cwtl
inc
js
leave
lods
sbb
movl
out
int3
leave
sahf
rcl
adc
or
sarl
movl
sub
mov
pop
and
movsb
sub
pop
adc
or
arpl
cmp
sbb
ja
jno
shll
decb
mov
adc
rcll
mov
mov
pop
xchg
mov
out
out
cli
mov
jle
outsl
in
push
rcll
int
popf
push
jb
inc
push
test
xchg
call
mov
inc
pop
push
add
cmp
push
rcll
pop
pop
mov
je
mov
push
cmpsb
out
pop
insl
cmp
push
or
outsl
clc
lcall
and
sbb
data16
add
mov
popa
dec
adc
ret
cli
pushf
incb
imul
mov
jmp
mov
out
inc
sbb
push
aaa
loop
dec
imul
pusha
push
sbb
repnz
movsb
rcl
lret
mov
inc
add
insl
mov
out
addr16
sub
scas
or
adc
loop
xor
int
sub
push
xchg
inc
lods
fs
xor
or
cmp
jg
mov
out
lret
movsb
inc
jb
mov
loopne
pusha
cs
xchg
xor
lret
gs
jno
inc
mov
xchg
test
es
sub
test
bound
popa
mov
jnp
mov
jns
movsl
aaa
xor
fs
cmpsl
aam
inc
xchg
add
jg
stos
jmp
push
lods
and
in
mov
sti
push
xchg
or
mov
idivl
es
sub
jb
pusha
push
imul
xchg
hlt
cmp
inc
fisttpll
xlat
xchg
jb
sub
shlb
add
ljmp
lret
repz
fmulp
xchg
stos
xchg
sub
push
adc
mov
xchg
lds
jno
or
jns
seto
lods
cmpsl
test
jo
negl
lret
sbb
sbb
adc
jne
inc
dec
shl
xchg
aaa
cltd
pop
mov
and
push
add
addb
dec
lcall
stc
das
xchg
pop
cmpsl
idivl
or
movsl
mov
mov
test
dec
fcompl
mov
popf
sub
xchg
jge
rcl
or
lods
pop
shl
mull
mov
outsl
andl
loope
fdivl
scas
lret
sbbl
or
and
push
mov
jg
pop
sub
insl
push
int3
sub
bound
aaa
cs
fisubrs
ret
jns
icebp
mov
inc
xchg
loop
stos
add
adc
pmullw
cmp
and
sub
test
push
pop
ror
mov
sbb
push
cld
ss
les
dec
push
loop
push
testb
jno
call
xchg
push
mov
dec
jmp
dec
insl
xchg
inc
and
loope
mov
lods
jnp
adc
sbbl
dec
cld
in
fsubs
das
pop
ret
nop
aad
js
adc
cwtl
fwait
mov
rorl
pop
add
daa
xor
hlt
roll
les
xlat
ss
fsubs
movsl
pop
ret
jo
dec
jge
daa
out
out
in
rcrb
ja
sub
aad
add
jbe
shl
cmp
mov
stos
pop
pop
jmp
push
inc
ljmp
jg
ljmp
cs
data16
es
nop
push
shlb
lods
mov
xchg
or
iret
cwtl
fnstenv
cmp
scas
adc
sbb
pop
ds
inc
call
movsb
jb
mov
popf
or
hlt
sbb
lock
jmp
add
clc
push
out
xchg
hlt
xchg
and
repz
inc
mov
rol
inc
add
cs
out
gs
push
fnstsw
pop
mov
aad
and
ja
adc
cmp
xchg
pop
mov
pop
adc
or
push
hlt
mov
jmp
test
cwtl
outsl
loop
ds
ret
inc
pop
aad
or
mov
or
leave
pop
cmp
les
ss
push
mov
popf
add
or
call
and
repnz
ret
sbb
sbb
adc
test
lds
scas
inc
push
mov
mov
mov
jmp
jnp
loop
inc
inc
nop
fs
ret
mov
ds
inc
daa
sti
or
jp
push
stos
fucomi
xchg
idivl
nop
daa
mov
cld
mov
mov
aas
or
scas
outsl
inc
in
cltd
loop
or
stc
xchg
mov
mov
mov
movsb
push
push
outsb
adc
fdiv
jp
mov
fsubrs
div
bound
outsb
popa
ljmp
test
adc
in
pushf
mov
popa
fcoms
push
jb
inc
adc
aas
and
aam
lahf
ret
jmp
and
lea
mov
mov
add
pop
sbb
dec
inc
popf
sbb
add
and
push
outsb
pushf
jp
mov
xor
les
and
dec
mov
rcl
je
cs
jno
xchg
das
xor
cmp
test
lods
loop
stos
pop
das
int3
jns
das
aam
push
es
out
jne
sbb
xchg
cmp
add
mov
jecxz
daa
push
das
iret
mov
mov
sbb
or
dec
aaa
dec
mov
fidivl
arpl
mov
lret
out
mov
adc
pop
and
mov
lret
cmp
push
sbb
cmpsl
fisttps
mov
cmp
push
cmpsl
add
stc
pushf
jl
sub
mov
push
push
std
adcl
dec
mov
nop
decl
dec
aas
outsl
clc
push
inc
cmc
push
mov
pop
jb
xor
filds
sub
xor
add
and
cmp
pusha
or
stc
fwait
sbb
mov
or
and
dec
aas
cmp
fldl
xchg
insb
push
sarl
xor
lahf
push
or
cmp
cmpsb
decl
mov
lea
xlat
cmp
jp
lcall
je,pn
sbb
add
mov
cmp
or
cltd
and
dec
jmp
add
test
aas
sti
iret
mov
out
xchg
pop
and
std
sbb
outsb
fcomps
lock
fsubrp
jnp
mov
xchg
mov
lret
lds
pop
add
mov
clc
mov
icebp
subl
mov
es
rolb
cmp
cmp
push
add
into
int3
push
test
and
jp
mov
fwait
hlt
shlb
sbb
pop
xchg
lret
je
stos
stos
jecxz
out
sub
in
pop
leave
addr16
or
pop
xor
mov
push
inc
mov
loop
into
cmp
enter
repz
fst
adc
dec
inc
sahf
add
xchg
cmp
in
dec
cmp
repnz
jnp
xor
jg
pop
or
in
std
push
rorl
test
int
insb
imul
sbb
sub
jnp
fimull
lcall
xchg
in
and
dec
repnz
repz
or
cmp
outsl
popf
sahf
out
sub
pop
sarb
pop
movsb
sub
jmpw
scas
pop
or
or
cmp
loope
jmp
xor
std
dec
or
lahf
aas
mov
ja
mov
scas
stos
sub
je
mov
add
jmp
cmp
and
or
mov
push
popf
mov
movsb
nop
in
mov
aam
sub
aaa
sub
mov
lcall
repz
rcll
jnp
call
cmpsb
mov
add
or
les
push
jnp
cmp
jl
mov
into
xchg
sbb
testb
adc
push
sbb
xchg
jb
inc
push
add
test
lods
mov
mov
mov
xor
xor
in
cmp
or
mov
mull
dec
std
shlb
mov
and
outsb
nop
xchg
scas
and
jmp
push
mov
mov
push
test
inc
dec
add
and
cmp
and
inc
insb
aaa
cmp
inc
or
fildl
pop
outsl
inc
test
inc
pop
adc
fsubs
add
mov
stos
pop
xchg
cmc
repz
repz
cmp
sub
test
push
sbb
ds
ja
icebp
xor
jmp
jl
into
ja
xlat
movsl
inc
cli
mov
jge
mov
jle
xorl
jbe
incl
fwait
mov
cmp
jns
dec
icebp
lods
inc
mov
leave
popa
pop
in
lods
lods
lock
insb
dec
and
repz
int
pop
push
pop
dec
or
fcomps
push
imul
push
inc
negb
pop
mov
xor
aam
add
jmp
push
in
lods
mov
scas
aad
or
clc
test
jnp
or
popa
popa
jns
xor
pop
mov
push
das
dec
cmp
divl
pop
or
and
push
cmpsl
or
in
stos
leave
dec
xchg
inc
mov
and
arpl
outsl
push
and
add
xor
add
and
xchg
test
cmc
cmpsl
xor
fldenv
dec
jne
cmp
adc
and
cmp
ljmp
ret
mov
push
or
add
or
daa
insl
out
insb
adc
jne
outsb
aad
push
cmpsb
sbb
les
sbb
cmp
jge
mov
mov
add
fidivrs
dec
scas
inc
ljmp
out
jecxz
loope
jmp
cmp
test
popa
movsl
jns
jo
push
aaa
shll
sbb
mov
jnp
and
xor
jnp
jmp
add
sti
push
add
test
inc
mov
arpl
push
pop
dec
cld
xchg
and
test
shlb
leave
push
dec
adc
aad
and
testb
mov
data16
jnp
in
cmpsb
adc
decl
cltd
xchg
int3
imul
call
cmpb
in
bound
out
mov
into
testb
imulb
push
mov
pop
dec
out
rcr
daa
fdivs
addr16
mov
jmp
ss
xchg
pop
fmuls
fmull
les
shll
sbb
test
mov
and
imul
ds
mov
jge
and
inc
mov
cmp
add
lret
push
and
je
pop
lods
mov
stos
insb
je
in
add
add
jns
jp
andl
mov
mov
xchg
mov
dec
stos
dec
cmp
rolb
scas
and
pusha
jb
sbb
lods
xchg
cs
cld
and
cmp
lods
mov
fisubrl
cmp
mulb
mov
xchg
sbb
rorl
jnp
es
push
xor
mov
int
pop
subb
mov
js
or
imul
mov
jg
and
cs
xchg
idivl
aaa
cwtl
fnstsw
xchg
cmpb
test
pushf
push
ljmp
jns
and
clc
popa
jmp
mov
pop
lods
lret
cli
add
mov
fwait
pop
fists
push
xor
daa
jb
mov
mov
jae
test
das
test
in
mov
jg
jl
cwtl
int3
out
mov
loope
jge
or
call
sbb
stos
arpl
lret
and
mov
loop
pop
push
lret
faddl
test
ljmp
push
cmc
xchg
mov
out
inc
loopne
dec
jecxz
ret
dec
icebp
mov
push
jns
add
cs
push
adc
xchg
mov
imul
push
int3
jb
outsb
pop
adc
sbb
xchg
mov
leave
lahf
dec
pusha
lea
outsb
jmp
xorw
scas
fst
push
sub
pushf
shll
out
addr16
je
fadds
aas
pop
jne
leave
das
ret
or
mov
ds
cmp
cmp
or
adc
and
and
jge
sti
add
or
dec
dec
in
mov
inc
rcll
nop
adc
jbe
lret
aad
movsl
rcr
fs
bswap
outsb
jp
mov
frndint
xchg
xlat
xor
or
push
pop
in
or
test
dec
sti
mov
out
arpl
leave
push
repz
in
jns
imul
int3
sbb
ret
dec
enter
pop
and
movsb
sbb
imul
push
int
inc
std
sub
push
push
sbb
mov
or
jl
add
adc
cwtl
push
jecxz
xchg
mov
add
daa
in
push
xor
pushf
pop
mov
cmp
mov
mov
es
mov
fwait
add
add
cmc
push
mov
fs
enter
or
inc
leave
je
adc
fbstp
outsb
in
sub
mov
fwait
jl
mov
ss
dec
dec
pop
inc
xor
mov
int3
repnz
jb
xchg
sbbl
cltd
pop
out
mov
arpl
lods
jp
in
andl
xor
and
or
sbb
addr16
fnsave
insb
sbb
gs
pop
xchg
add
movsl
and
mov
fildll
or
xor
xchg
pop
in
xor
leave
in
sbb
addb
or
dec
xor
cld
cltd
or
fldcw
fcomp
jp
out
sarl
mov
in
icebp
icebp
mov
sub
out
mov
inc
sti
jl
cmc
shlb
xor
repnz
cli
ret
sarl
inc
shll
gs
insb
lock
test
xchg
cmp
mov
in
mov
sti
ja
mov
fiaddl
loopne
xor
out
pushf
mov
lcall
push
cmpsb
aam
data16
vxorps
fxch
and
arpl
or
icebp
ljmp
test
ds
jns
dec
jae
sub
lock
jo
jecxz
ret
pusha
sbb
scas
adc
adc
call
data16
rolb
pop
push
aas
jp
mov
jbe
xor
xchg
mov
xor
add
mov
and
int3
stos
add
dec
int3
or
call
fdivrl
xor
aad
fs
jp
out
enter
jmp
jns
movsl
fistpl
cmovnp
imul
out
mov
mov
mov
es
cmp
mov
repnz
lret
in
jl
or
jmp
std
lret
insb
call
arpl
cmc
shrb
mov
add
bound
mov
xchg
addb
mov
mov
jecxz
dec
inc
or
aam
inc
pop
mov
sti
mov
ret
xlat
jo
cltd
fwait
mov
iret
dec
loope
sub
repz
mov
sbb
mov
lcall
inc
outsl
cs
std
jo
or
hlt
mov
repz
pop
xchg
mov
jnp
jle
lret
xor
dec
mov
stc
push
dec
cs
xchg
xorb
icebp
xchg
pop
sbb
test
adc
mov
iret
and
add
outsb
add
mov
je
and
rorl
sbbl
dec
sub
xlat
fs
add
mov
repnz
call
push
push
fsubr
pop
ja
cmp
arpl
pop
sar
adc
daa
mov
jle
sub
cltd
shlb
subb
pop
sbb
sbb
test
jo
jecxz
insb
xchg
sarb
jne
popl
hlt
leave
lret
test
mov
test
fmuls
in
push
repnz
loopne
sbb
sub
lods
xchg
mov
push
icebp
fcmovnb
jle
adc
sub
mov
addr16
and
jns
inc
stos
jns
and
fdivrl
js
push
sarb
fs
pop
dec
push
mov
jmp
sbb
aad
xchg
xor
jno
shlb
push
cmp
xor
dec
pop
jecxz
subl
push
shl
pop
fsubs
push
popl
mov
ds
outsl
mov
and
aad
sub
inc
add
mov
add
aaa
loope
enter
les
pop
iret
int
insl
add
pop
lret
push
in
cld
push
or
dec
adc
fiadds
jg
cmp
out
lds
push
cwtl
shll
jg
hlt
adc
js
insb
sub
mov
push
and
or
xor
lods
and
ss
dec
mov
cmc
js
cmp
out
push
clc
push
mov
mov
add
mov
lret
pop
pop
xor
insl
imul
inc
inc
int3
sub
pop
sbb
mov
imul
rorb
sbb
sub
xchg
test
mov
into
popa
cli
fcoms
fildll
inc
leave
jb
mov
mov
int
fcompl
movsl
addl
jbe
adc
pop
jmp
shrl
fstl
xor
xchg
push
in
cmp
jbe
test
ds
mov
insb
push
sbb
jb
pcmpeqb
pop
into
ljmp
repnz
inc
stc
lret
pushf
stc
out
icebp
sub
sbb
or
push
lea
popa
cmp
ja
lcall
or
and
xchg
jb
adc
scas
outsl
jecxz
out
sbb
fcomps
repz
ljmp
mov
test
dec
jb
movsb
insl
sub
arpl
iret
into
pop
xor
ja
pop
movsb
xchg
cmp
scas
dec
lret
xor
jne
or
dec
outsb
lcall
stos
sub
xchg
lcall
dec
xchg
popa
xchg
add
andl
lret
insl
mov
out
push
out
cs
outsl
or
ljmp
ja
or
or
pop
hlt
sub
mov
les
push
shrb
add
pop
sahf
stos
rorb
add
sbb
stc
mov
andb
mov
ret
testb
jp
sub
pop
xlat
sbb
add
push
xchg
aam
or
jecxz
inc
sbb
rorl
mov
lcall
daa
push
mov
mov
in
dec
sbb
pop
xchg
jp
xchg
xor
loope
cmpxchg
pop
xor
mov
addr16
rorb
sarb
outsl
jmp
or
mov
xchg
push
fildl
out
test
add
cmp
xlat
pushf
sbb
and
ret
mov
loope
pushf
jmp
test
push
sub
push
dec
enter
sbb
jae
push
loop
mov
inc
fwait
test
cwtl
iret
mov
and
cmpsl
cli
or
test
jmp
call
test
ret
out
jo
std
ret
outsb
mov
mov
mov
cmp
or
lret
pop
mov
mov
jno
add
fisubs
jmp
les
rorb
xchg
mov
rcl
push
fs
icebp
daa
les
movsb
mov
push
xchg
iret
and
inc
repnz
pop
dec
mov
add
pop
cmp
push
cltd
jl
das
and
out
cmp
mov
ljmp
jge
hlt
dec
xor
mov
inc
mov
cmc
jne
lods
or
adc
out
out
mov
and
and
sub
mov
lods
jo
je
sub
push
jge
out
or
pop
mov
jl
popf
cltd
or
pop
sbb
jmp
xchg
stc
orl
dec
mov
in
sahf
mov
repnz
xchg
int3
xor
flds
xchg
iret
insl
jecxz
repz
lahf
push
aam
xor
pusha
jne
loopne
mov
jecxz
mov
aas
sub
ret
mov
lods
cmpsb
jb
aad
sbb
cmp
test
and
mov
xchg
jl
sahf
movsb
mov
cld
in
jns
push
mov
ds
das
sub
cmp
add
out
mov
xchg
mov
clc
sub
xchg
int3
adc
xorb
or
add
mov
push
ss
data16
dec
in
or
insl
jno
cmc
and
cmp
push
jmp
inc
sub
rcll
call
out
cmpsb
cmp
add
add
call
movsb
cli
ret
mov
in
cmp
dec
sbb
pop
lds
and
inc
hlt
js
jg
mov
cmp
stos
fwait
inc
or
imul
in
pusha
iret
dec
je
not
stos
sbb
adc
mov
pusha
sti
mov
jle
test
push
xor
xor
shll
sbb
addl
push
and
push
xchg
scas
addr16
icebp
mov
movsl
rolb
dec
pop
loop
cld
loope
xor
jecxz
stos
es
dec
outsl
mov
xor
inc
out
pop
add
stos
ss
cwtl
mov
sbb
cmc
loopne
jmp
lret
fstpl
test
sbb
in
xor
in
out
and
in
jne
cmp
fiadds
and
je
lods
clc
dec
in
adc
insl
push
jl
test
pushf
rolb
mov
movsl
test
ljmp
mov
scas
inc
mov
std
sar
cmpb
sbb
out
fcomi
in
xor
jb
and
bnd
clc
pop
stos
stos
enter
sbb
sbb
jg
jmp
fildll
ja
xor
call
in
cltd
pop
push
pop
lods
cwtl
xchg
cltd
jno
hlt
mov
roll
in
add
or
imul
mov
pop
sub
mulb
pop
jae
arpl
popf
or
into
movsl
negl
adc
xor
movsb
jl
xchg
add
ljmp
push
jo
jg
add
int3
add
cwtl
lcall
out
in
sbb
scas
lock
push
mov
pop
sub
je
xchg
ds
add
inc
pushf
inc
xchg
and
scas
push
jae
add
adc
mov
inc
iret
scas
mov
push
cltd
fisubrs
sysenter
lret
lods
mov
hlt
lret
jno
cli
add
scas
ficoml
loope
bound
inc
call
mov
dec
adc
lock
cmp
xor
fisubrl
or
clc
mov
jo
addl
out
bound
sub
push
inc
mov
inc
jle
mov
or
scas
pushf
add
dec
jo
sub
sarl
sarb
in
push
daa
jg
dec
push
or
loop
sbb
popf
dec
sub
and
sub
add
out
cltd
xchg
cltd
shrb
and
push
or
out
test
and
and
jle
das
xor
sbb
add
mov
ljmp
add
mov
nop
cmp
push
lahf
cmp
int3
or
into
sti
mov
mov
outsl
dec
and
int
lret
adc
lret
into
gs
inc
and
insb
out
xchg
jl
jns
loope,pt
xchg
or
mov
add
sbb
leave
cmp
cmp
push
mov
adc
xchg
xchg
insb
in
int3
cld
push
sub
es
ja
inc
inc
les
and
arpl
out
push
sbb
mov
fadd
popa
xchg
testb
fcmovu
out
xchg
aaa
mov
mull
int
cwtl
nopl
addr16
mov
mov
pop
inc
xchg
mov
xchg
mov
daa
imul
outsl
retw
cli
out
xchg
jns
pop
aas
flds
sahf
and
xchg
test
ds
mov
push
pop
sub
cs
push
mov
jle
test
imulb
push
inc
bound
or
sbb
sarb
je
sbbl
jns
mov
adc
in
mov
xchg
cltd
ss
jecxz
out
lods
xchg
test
or
jp
test
movsl
repnz
and
jecxz
lret
hlt
xchg
rorb
leave
adc
repz
rcll
scas
lock
or
cmc
lods
dec
adc
jnp
sarb
push
jmp
jge
xor
push
sub
sbb
mov
dec
lcall
xlat
mov
jp
push
test
dec
mov
adc
adc
pop
je
repz
push
arpl
loopne
cmp
das
addr16
push
fldt
inc
push
daa
mov
ja
cli
pop
jg
fcomps
push
push
dec
stos
mov
push
jmp
push
or
adcb
rolb
push
icebp
inc
or
xor
dec
fistpll
movsl
clc
cmp
or
adc
mov
and
repz
xor
jmp
enter
ret
cmp
fbld
rcll
xor
pusha
push
cwtl
jns
or
jg
xchg
push
mov
decb
in
or
dec
idivb
imul
pop
movsl
and
fisubrl
sbb
sbb
xchg
popa
repz
sbb
test
jns
in
das
lock
hlt
add
xchg
hlt
aas
hlt
movsb
call
test
or
xchg
jg
mov
dec
adc
adc
mov
sar
addr16
lcall
jmp
cmc
or
test
adc
imul
sbb
push
aam
dec
xor
rcrb
leave
sub
je
adc
add
aad
inc
cld
test
mov
ja
outsl
sbb
fwait
dec
lock
xlat
cmp
adc
addl
mov
ja
cltd
inc
and
sahf
pop
stos
sub
xor
inc
xor
dec
lret
mov
mov
test
adc
rcll
mov
add
xor
push
push
jecxz
adc
ret
insb
cmp
sub
xchg
mov
push
addl
das
xchg
or
jmp
inc
dec
scas
lcall
and
mov
jno
sbb
cmp
orl
shr
cli
mov
jecxz
xchg
pop
xchg
mov
inc
add
xchg
xchg
fidivrl
cld
jecxz
push
loopne
push
cmp
pop
sbb
aaa
ss
aam
ja,pt
jae
jnp
inc
addr16
adc
mov
fwait
imul
mov
push
aas
outsb
pop
loope
cmpsl
stos
jle
std
xchg
lds
mov
adc
adc
imul
sti
clc
mov
push
hlt
aad
je
aam
data16
jg
aam
scas
loop
adc
cwtl
mov
ret
pop
enter
iret
mov
xchg
js
daa
sahf
mov
fwait
sub
add
push
dec
or
mov
jle
lods
insl
dec
xchg
and
add
mov
addps
jb
jbe
xor
and
mov
test
into
sbb
pop
fwait
jns
clc
lret
in
aaa
sub
out
dec
int
and
rcll
sbb
dec
jno
ja
or
sub
divl
mov
fidivrs
xchg
movsb
lret
insl
mov
shlb
sbb
mov
xor
cmp
testb
fwait
push
adc
sbb
or
or
push
fs
push
xlat
pop
xchg
mov
mov
mov
in
sbb
adc
loop
add
and
test
xlat
rclb
and
jg
mov
push
mov
cmpsb
pop
test
xchg
aam
mov
jge
cmp
js
cmp
sub
int
shr
mov
dec
in
xchg
daa
dec
addr16
test
sbb
daa
je
pop
mov
fstpt
mov
int3
hlt
iret
sub
lds
inc
mov
adc
jg
les
repz
sbb
xchg
mov
cmp
jmp
rorl
fwait
mov
stc
outsw
or
cmpsb
push
imul
in
into
pop
scas
jle
fistps
jle
lock
jno
js
repz
bndldx
xor
xchg
adc
jmp
xchg
pusha
jecxz
call
fists
and
jae
mov
adc
imulb
lods
pop
add
and
or
iret
ss
dec
inc
std
fwait
shll
push
jmp
jb
mov
cli
adc
xor
dec
pop
dec
jae
scas
fldl
into
push
sbb
push
lock
dec
mov
xor
or
pop
or
mov
add
adc
mov
stos
mov
nop
leave
cld
mov
fidivl
cmp
adc
ds
or
cltd
or
cwtl
cmp
jne
pop
push
call
das
cmp
cwtl
fnstcw
fbstp
sbbb
ss
mov
inc
leave
iret
imul
aas
mov
xlat
push
iret
sub
inc
push
les
cmp
pop
nop
pop
dec
lock
jo
cld
daa
push
sbb
sbb
daa
jns
jb
ss
cmp
test
xchg
cmpsb
mov
movsl
mov
or
outsb
and
mov
xchg
xchg
sbb
lret
mov
adc
call
js
out
dec
cld
lods
lcall
sbb
mov
lods
ficoms
ja
jle
dec
lock
stos
gs
int
and
sahf
adc
sbb
cmp
push
shlb
cmp
fisubrl
push
test
pop
inc
push
jl
cli
mov
popa
xchg
sub
shrb
xor
sub
cmp
pop
cmpsl
int
test
daa
mov
xor
out
push
popf
mov
jg
fiadds
add
stos
test
adc
push
adc
or
mov
mov
or
out
in
bswap
pop
fnstsw
test
orl
lods
out
xchg
sub
mov
les
test
mov
pop
int3
js
in
mov
inc
cmc
aam
mov
cld
ret
and
or
cmp
mov
push
cltd
xchg
lock
les
aas
xlat
test
cmovp
mov
pop
icebp
sub
and
lods
mov
add
or
push
lret
xlat
jle
lcall
jp
imull
addr16
and
insl
jmp
xor
loop
ja
adc
adc
pop
mov
data16
dec
or
inc
repz
enter
xchg
xlat
jnp
loop
sti
dec
dec
xor
adc
mov
xor
stos
push
push
jge
cmp
and
loopne
shrl
not
std
add
fbld
ds
cmpsl
xor
pop
sbb
into
pop
testb
jo
add
scas
rcrb
inc
or
pop
sub
mov
sub
jae
outsl
jecxz
sbb
pop
inc
lret
pop
cmp
push
rorb
jge
cmpsb
movsl
test
std
stos
mov
mov
sub
outsl
scas
mov
mov
dec
sub
mov
in
repnz
jecxz
or
add
inc
dec
inc
and
loopne
xorl
cmpsl
mov
or
clc
rcll
mov
pushf
xchg
rcrb
fs
std
pop
mov
cmpsl
and
js
cmp
cld
scas
jns
fdivrl
stc
cmp
or
mov
pusha
dec
sub
test
sub
cmpsl
shlb
enter
mov
test
push
mov
imul
dec
cltd
dec
jecxz
push
mov
outsl
daa
pop
inc
lock
push
lahf
fstps
cs
push
pop
push
ret
fnstsw
cmp
aaa
jge
mov
cmpsb
jg
shlb
pop
and
aam
std
cmpsl
mov
mov
fwait
lds
clc
pop
fwait
das
aam
xchg
inc
out
or
or
mov
and
xor
lock
add
jl
mov
lods
cmp
jle
outsl
out
push
cli
dec
enter
sahf
add
lret
inc
cltd
lods
fists
dec
fwait
insl
cltd
or
lods
inc
xchg
pop
pop
addb
aaa
cld
insb
mov
shll
or
inc
sub
mov
call
push
cmp
cmp
mov
add
push
test
fsubl
xor
pushf
pop
dec
shll
stos
push
xchg
rcrl
loope
mov
movb
sbbb
adc
int
adc
jae
xchg
pop
xchg
pop
sti
mov
rol
nop
and
jecxz
dec
mul
pop
fcomps
dec
in
aas
xor
jne
push
icebp
loop
in
addr16
xor
aaa
add
aad
sbb
jo
scas
adc
sbbb
push
lahf
negl
or
imul
inc
inc
loope
sbb
sbb
imul
les
jae
pop
push
outsb
jge
hlt
stos
push
in
cmp
ljmp
push
push
lcall
dec
faddl
cmp
mov
pop
xor
mov
lret
loope
addr16
enter
in
sti
int3
mov
aas
jge
or
out
enter
push
and
dec
ds
jmp
xor
nop
fbld
push
cmpsl
adc
jo
stos
lahf
pusha
lea
mov
xchg
pusha
vmovlps
sub
xchg
adc
adc
push
adc
push
mov
aam
js
xchg
shlb
out
stc
mov
hlt
ret
mov
jmp
inc
adc
push
mov
xchg
push
stc
sti
sbb
and
xchg
xchg
repz
dec
push
aad
jae
aam
shl
movsl
fadds
push
daa
adcb
clc
fwait
cmc
dec
imul
shll
dec
insb
call
mov
inc
sbb
inc
std
aam
or
in
test
mov
pop
in
or
mov
dec
adc
fnstsw
loope
pop
adc
fwait
out
xchg
push
pop
push
xchg
inc
lea
push
adc
int3
mov
pop
sub
add
mov
ja
sbb
test
sub
psubq
mov
test
out
pop
lods
stos
int3
outsb
cmp
pop
fistl
sbb
lods
or
xchg
jmp
aas
dec
jge
lods
mov
fwait
jmp
sbb
mov
pop
je
sbb
mov
les
imul
int3
add
leave
mov
lcall
cmp
jle
mov
add
sbb
add
add
dec
pusha
adc
ds
inc
sub
mov
mov
sti
mov
jmp
rorl
add
loopne
loopne
div
inc
aam
xchg
xor
test
jl
inc
pop
jae
mov
xor
mov
imul
repz
lahf
mov
mov
sbb
push
inc
cltd
iret
push
xchg
testb
sub
push
sub
add
pop
jl
add
jle
lds
jecxz
cmp
sbb
iret
das
mov
mov
inc
nop
inc
push
std
inc
cli
add
cmp
pop
jne
test
ret
xchg
std
dec
frstor
inc
sub
ret
in
xor
jl
mov
popa
jae
push
push
mov
mov
jecxz
pop
lret
cmpsb
aam
stc
out
data16
fisubl
xchg
int
popf
sbb
loop
loope
popf
fdivl
fstpt
mov
and
add
inc
mov
jb
add
jg
movntq
insl
xor
lea
test
xchg
mul
mov
dec
cmpsl
adc
mov
shlb
fsubs
bound
push
add
imul
dec
xor
push
insb
sbbl
mov
add
or
mov
lldt
jl
mov
arpl
mov
idivl
xor
and
ljmp
jmp
xchg
dec
add
es
adc
add
xchg
mov
inc
jle
mov
adc
xchg
addr16
dec
dec
icebp
mov
xor
cmp
pop
jo
insl
sbbb
not
inc
jnp
xor
in
sbb
push
int
out
cld
inc
xor
sahf
lds
nop
jge
jne
rep
mov
mov
sub
fdivrs
nop
add
pop
lret
pop
mov
adc
pop
sub
sub
add
cltd
push
xor
and
daa
add
movsb
les
popw
cmp
mov
and
mov
and
scas
rcr
sub
mov
es
push
insb
mov
fisttpll
sbb
adc
push
pop
and
imul
fisubrl
insb
push
push
xchg
lret
movsl
mov
add
mov
xchg
cs
push
inc
jno
fimull
sbbl
fs
sub
lret
xlat
repz
test
data16
and
imul
dec
arpl
mov
mov
jne
bound
jne
and
lret
or
ljmp
std
shlb
call
pop
cli
push
mov
pusha
addr16
fldl
jp
insl
hlt
mov
lret
repz
push
stos
jo
cmp
jne
ret
dec
mov
shl
cmpsb
add
dec
bound
aas
mov
in
lahf
rcll
popa
sbb
xchg
or
push
fisubl
cmp
push
enter
push
js
lret
dec
cmp
dec
ds
push
mov
lcall
jb
xchg
inc
xor
fldt
cmp
pushf
je
xchg
push
aaa
aas
sahf
inc
cmc
int
rorb
sub
or
fists
cli
in
xlat
push
fmulp
aam
andb
ret
iret
sbb
sub
shll
and
repz
ret
mov
cmc
pushf
ljmp
mov
aad
inc
xchg
gs
push
in
dec
push
fidivs
int3
xchg
xchg
lods
push
cmp
ret
shl
xchg
xchg
cmp
sbb
mov
out
mov
test
xchg
xchg
lods
sub
addr16
flds
negl
and
sbb
testl
push
xor
and
jge
jge
jp
xchg
mov
xchg
imul
gs
test
or
sbb
movb
xchg
or
dec
stos
xchg
cmp
push
roll
and
cmpsl
call
hlt
jg
sti
sbb
mov
stos
mov
push
out
pop
mov
notl
mov
xchg
inc
cmp
dec
in
adc
les
je
pop
adc
idivl
test
xchg
mov
daa
add
lock
ds
mov
xor
and
test
adc
mov
je
loop
fldcw
ffreep
lds
add
mov
push
jecxz
int
js
enter
xorb
fildl
out
aam
fcmovnbe
dec
sti
cltd
add
pop
shrl
inc
lcall
cltd
sub
pop
idivl
adc
stc
jne
dec
stos
pop
iret
mov
es
cli
inc
or
dec
cmpsl
jl
inc
add
cmp
leave
gs
imul
popf
das
aas
sbb
jge
clc
xlat
mov
inc
pop
dec
cmp
add
jg
lcall
inc
decl
stos
and
shlb
mov
test
xchg
mov
inc
jb
mov
push
dec
test
pusha
sarb
rclb
sbb
loopne
push
mov
sahf
inc
dec
mov
es
xor
fs
iret
pop
or
into
sbb
sbb
in
gs
fidivrl
inc
pushf
sbb
scas
and
lock
push
add
lods
sahf
dec
dec
iret
jl
jae
popa
or
cmpsl
sarl
jbe
jbe
lods
int3
cmp
sub
sbbl
movsb
sub
cmp
fsubrp
hlt
sarb
daa
push
cld
sub
mov
fidivs
pop
iret
cli
inc
imul
repnz
fmulp
adc
ja
in
mov
gs
dec
mov
push
push
mov
jne
cmpb
jns
push
sti
mov
sbb
sbb
or
into
pop
std
mov
push
pop
pop
dec
push
insl
insl
test
repz
inc
dec
and
sub
loop
and
sub
test
jl
pop
push
jecxz
stos
movsb
or
sub
cld
loop
xchg
sub
cmpsb
or
lods
mov
dec
lods
push
or
ret
mov
pop
mov
lods
stos
mov
cld
mov
dec
sub
cld
mov
or
push
mov
movsl
insl
les
popf
adc
push
jge
xor
decb
push
popa
movsl
pop
push
cmp
push
mov
mov
cmp
xchg
push
dec
std
jecxz
fistps
or
mov
xor
mov
test
jne
adcb
mov
mov
sbb
js
dec
in
popa
push
mov
daa
push
pop
lea
cmpsl
mov
mov
jnp
test
xlat
out
xor
and
adc
sub
imul
jns
in
ret
or
enter
xchg
mov
stc
mov
ss
notb
sub
aad
and
or
bnd
hlt
sub
hlt
mov
aad
adc
mov
or
push
daa
add
dec
lock
sbb
add
imul
jge
std
pop
xor
mov
lret
mov
popa
mov
loopne
mov
mov
outsl
pop
inc
adc
insb
cmp
mov
pop
ficoms
dec
push
xchg
adc
bound
jae
pop
int
dec
unpcklps
xchg
shrl
or
addr16
mov
fwait
jp
dec
xor
cltd
insl
mov
dec
mov
mov
jo
dec
cmpb
adc
push
in
pop
gs
aad
popa
stos
jle
mov
mov
pop
push
mov
leave
mov
nop
lahf
mov
jno
add
xchg
test
popa
cmp
inc
lds
lea
adc
cmp
pop
jbe
pop
pop
inc
negl
push
lods
js
adc
arpl
sbb
mov
jg
hlt
in
fisttps
dec
sub
mov
fimuls
pop
jo
imul
inc
test
or
sub
push
test
stos
inc
inc
cli
jl
and
arpl
push
pusha
push
mov
or
or
or
mov
insl
jbe
dec
pop
push
fs
sarb
xchg
xor
pop
out
inc
fs
std
pop
inc
mov
jle
jbe
mov
jg
imul
in
lahf
jne
cwtl
aam
inc
fidivrs
push
cmpsb
mov
push
sub
cmp
imul
popf
and
mov
roll
insb
fldl
lods
or
push
mov
cmp
mov
arpl
inc
es
pop
mov
ret
add
xchg
fiadds
dec
push
int3
aad
pop
mov
in
out
icebp
imul
xchg
mov
or
cmpsb
leave
insl
mov
push
mov
scas
sbb
pop
sbb
mov
cmpsl
jnp
sbbb
pop
jno
incl
dec
ss
fs
stos
fdivrp
pusha
pop
loope
repnz
sahf
add
adcb
inc
xchg
sub
jecxz
add
adc
sub
ljmp
fistpll
test
xchg
pop
adc
and
insl
pusha
movsl
sub
mov
dec
cmp
mov
les
add
movsb
popa
sub
push
mov
xor
loop
mov
jg
push
pop
pop
out
cmp
insb
inc
or
xchg
int
mov
std
mov
rorl
fs
xor
pop
arpl
mov
xor
jns
out
dec
shll
jg
out
ret
lea
jae
pop
aas
mov
sti
ss
xor
out
lcall
bound
fidivs
ret
jmp
xchg
adc
sahf
dec
out
rcll
aad
insl
add
pushf
popf
sub
sbb
mov
shr
jo
iret
ret
js
add
jle
fucom
jmp
sbb
push
roll
je
in
ljmp
cmp
loop
fwait
jmp
in
jno
popa
fs
fsubrs
xchg
or
xchg
dec
jno
repnz
adc
repnz
cmp
cltd
das
adc
mov
dec
pop
jo
pusha
mov
popl
jne
pop
adc
mov
lret
outsb
lock
or
lret
pop
jl
jns
add
lret
pushf
stos
push
repz
scas
push
scas
push
mov
arpl
addr16
adcb
pop
jp
and
lods
jle
xor
cmp
adc
ja
jl
cmp
jecxz
mov
jae
fnstcw
int3
adc
inc
cmp
adc
push
push
dec
movsb
fmuls
sahf
aam
stc
std
shlb
fs
shrl
arpl
push
adc
and
cmp
aad
and
lock
pop
iret
into
lret
out
sbb
mov
sub
mov
xor
scas
dec
xor
pop
mov
mov
and
jb
into
mov
inc
and
aas
test
in
hlt
fidivs
inc
dec
adc
test
push
shrl
mov
cli
jmp
xchg
jae
pop
mov
dec
leave
xor
xchg
sbb
xor
aam
popa
lock
gs
mov
inc
shll
sarl
lret
movsl
insb
into
pushf
mov
cmc
fistps
cmp
aas
rolb
es
push
inc
push
inc
fwait
out
sub
in
add
mov
xor
cmpsb
insb
cwtl
jb
shll
lea
jecxz
mov
bound
shl
and
cmp
push
sarb
lea
inc
pop
inc
stos
xchg
out
out
shll
add
dec
jo
sbb
nopl
mov
jg
std
adc
test
roll
test
mov
and
lea
mov
out
dec
movsb
mov
leave
lcall
push
movsl
xchg
std
mov
jecxz
push
or
popf
jl
sbb
pop
rorb
test
push
mov
pop
xchg
cltd
dec
jmp
out
adc
cmp
lret
mov
enter
loope
scas
lret
jnp
scas
pop
inc
cltd
scas
mov
pop
cmp
hlt
lea
pop
inc
cmp
push
pop
mov
cli
test
das
mov
cmp
cmp
push
stos
fdivl
aam
into
fisubrs
push
cmp
inc
ds
jmp
and
cld
dec
imul
leave
outsb
push
leave
jmp
cs
stos
fldenv
add
dec
cmpl
mov
cmp
dec
subl
xor
sbb
xor
xor
scas
cwtl
jno
divl
lcall
nop
pop
xor
sub
pop
dec
push
fdivp
xor
pop
add
jns
pop
pop
ja
adc
or
fsubl
inc
xchg
lret
mov
sti
push
std
insb
xorl
pop
push
je
cmc
push
or
loope
scas
jns
add
rcrb
into
out
jbe
outsl
mov
fwait
add
pop
mov
sbb
mov
jle
jae
jae
inc
mov
sub
pushf
loope
movsl
jg
movsl
or
insl
dec
ja
faddl
mov
pushf
and
hlt
or
filds
es
std
jns
jmp
mov
jmp
lea
sbbl
sarb
inc
jecxz
cltd
mov
iret
jle
into
outsl
cwtl
xchg
or
movntps
ja
stos
leave
and
add
ret
add
lret
fidivs
sbb
ficomps
xchg
mov
dec
push
stos
ja
cmp
sub
jbe
pop
mov
lret
or
jp
cmp
mov
xchg
mov
fimuls
negb
test
in
or
pop
cmp
je,pn
popa
sbb
das
and
pop
sbb
dec
adc
push
sti
and
cltd
les
and
xchg
cmpsl
push
mov
push
cli
mov
push
in
stc
pop
in
mov
ret
icebp
sbb
dec
push
mov
in
mov
sti
ss
mov
add
lea
mov
lret
and
ss
aam
sbb
ljmp
ljmp
cltd
mov
aad
lcall
dec
pop
out
jl
in
cld
lcall
call
rcrb
lock
mov
stc
jmp
or
sbb
orb
xchg
jb
add
ljmp
call
pop
bnd
adc
xchg
adc
jmp
lret
iret
ret
bound
nop
in
rorb
mov
jb
xchg
repnz
scas
aaa
mov
std
and
pop
inc
ja
jb
cwtl
mov
ljmp
push
arpl
out
movsb
sbb
lods
adc
je
dec
loope
sub
cmp
imul
mov
xor
in
and
insb
js
std
pop
mov
pop
mov
mov
xchg
insb
rcll
scas
inc
add
mov
jg
repz
fbld
push
push
adc
test
cld
fucom
cltd
and
jp
ljmp
sub
test
or
out
loopne
sbb
cmpb
loop
xchg
imul
repnz
cmp
inc
mov
xor
xor
inc
xchg
adc
xor
sbb
loopne
push
xorb
lret
push
mov
inc
inc
into
lret
fsubrs
ds
or
xchg
nop
xchg
add
mov
shrl
or
imul
fs
enter
lret
lods
sbb
into
cli
jne
sbb
dec
cmp
movsl
lret
call
mov
mov
dec
scas
add
adcb
or
sahf
std
pushf
clc
inc
push
mov
imul
sub
cmpsl
pop
sbb
std
lcall
js
pop
stc
or
mov
inc
inc
jne
xchg
test
out
add
cltd
push
jl
mov
sub
mov
push
mov
test
mov
sti
xchg
outsb
jp
aad
mov
scas
mov
inc
dec
lds
lock
subl
jp
mov
std
loop
lods
sub
lods
or
sub
mov
xorb
jns
cmp
sub
adc
ds
mov
lahf
pop
ret
scas
loope
out
into
mov
loopne
out
enter
inc
push
inc
sbb
leave
cmp
push
rorb
mov
pop
fwait
add
and
sub
gs
and
nop
pop
test
pop
and
imul
sbb
inc
add
ljmp
imul
adc
aas
sbb
data16
sbb
inc
sbb
pusha
sti
aas
inc
pushf
dec
fs
fimuls
test
cmp
repz
mov
cwtl
xlat
js
lods
jp
add
and
fs
fxch
sbb
or
das
cltd
sub
or
sbb
sub
movsb
xor
inc
aam
mov
sub
inc
push
mov
push
mov
call
ret
mov
sarb
rclb
cs
inc
mov
cli
lahf
mov
stos
inc
xlat
loop
in
mov
dec
mov
or
loope
cli
xchg
push
ficomps
add
daa
cmp
into
leave
cltd
leave
mov
scas
dec
int3
push
cwtl
cmp
cmpsl
add
jns
or
xchg
xchg
stos
push
dec
shll
data16
add
imul
sarl
mov
int3
daa
hlt
adc
sub
jb
push
mov
aas
cltd
dec
ds
nop
push
adc
and
push
subl
mov
sub
packuswb
fsubs
add
dec
rcrb
aas
push
cmc
and
imulb
cmp
mov
jp
pushf
filds
mov
sbb
imul
in
inc
mov
pop
adc
enter
mov
dec
jno
jne
jae
loopne
ljmp
popf
lcall
cmc
pop
test
jnp
mov
dec
mov
clc
leave
sub
add
nop
cmp
mov
sub
test
lds
jecxz
insl
or
mov
je
pop
dec
xchg
imul
out
or
cli
adc
aas
lods
jae
sahf
testl
add
shlb
fsubrl
xchg
push
jnp
add
aaa
loope
xchg
adc
cmp
imul
add
mov
sbb
mov
mov
push
or
dec
mov
inc
mov
out
lcall
loope
outsl
wbinvd
fwait
push
xchg
push
pushf
fdivs
stos
pusha
int
addr16
mov
outsb
leave
outsb
nop
enter
hlt
mov
jne
arpl
scas
sbb
pop
push
xor
mov
outsl
xchg
imul
jo
outsl
aad
jns
mov
mov
ficoml
cli
xlat
popf
dec
jne
mov
ss
xchg
lea
cltd
ret
in
push
add
push
stos
push
push
jns
or
cmp
dec
leave
insb
sbb
xorb
aam
and
into
imul
in
fiaddl
stos
mov
outsl
sub
xchg
punpckldq
xchg
jno,pt
imul
loope
orb
mov
dec
jecxz
hlt
fimuls
jbe
mov
shll
mov
sub
jnp
mov
fists
sub
mov
mov
adc
push
in
xor
xchg
cmp
sar
cli
lret
fnstsw
or
mov
pop
pop
fwait
mov
push
inc
ret
xor
movsb
mov
jno
andb
pcmpeqb
roll
enter
lds
std
sub
fdivl
pop
push
pop
filds
iret
lahf
call
arpl
dec
push
mov
jecxz
cld
pop
shl
sbb
das
movl
push
mov
icebp
xor
or
in
push
inc
cli
dec
push
mov
aad
jns
mov
daa
mov
popa
mov
mov
pop
les
test
pop
ficompl
out
xor
icebp
shlb
adc
loopne
xlat
mov
add
cld
or
inc
fsubrl
lock
movsl
pop
sub
stos
push
idivb
or
ret
mov
imul
lods
mov
fwait
fwait
pop
lcall
xlat
fsubp
js
add
xor
cmp
lock
cmpsl
sub
jae
add
and
fidivs
mov
cmp
les
sbb
lret
clc
push
pop
ja
or
sbb
sbb
push
adc
jmp
add
pop
ja
push
pushf
dec
ds
dec
ljmp
mov
mov
mov
push
arpl
test
xor
imul
or
loope
inc
stc
cmp
push
aaa
inc
push
outsl
push
out
xor
xchg
inc
mov
inc
mov
sbb
add
dec
inc
add
push
adc
std
cwtl
test
pop
outsb
enter
mov
cltd
jns
fxch
popa
xlat
xchg
adc
sub
dec
insb
jnp
mov
mov
push
xor
mov
out
or
or
dec
outsb
ss
call
imul
add
mov
mov
xor
aam
mulb
into
xchg
sbb
sub
jbe
mov
enter
jle
jns
mov
call
or
hlt
xor
mov
lods
mov
test
aas
into
repnz
mov
xor
outsb
sub
loope
sahf
movsl
or
sub
ja
mov
xchg
jo
cmp
mov
push
cmc
dec
mov
or
incb
cld
adc
mov
out
pop
in
jg
push
int
jg
shlb
cmpl
xchg
lds
sahf
cli
stos
or
push
leave
cmp
jl
aam
or
stos
adc
paddb
add
jl
mov
add
call
add
lods
push
xchg
setae
imul
mov
sub
sbb
in
pop
add
dec
fwait
gs
push
fwait
adc
mov
push
test
das
push
mov
outsl
cltd
ret
pop
jge
add
cwtl
jmp
lock
jne
sbb
push
pop
shlb
and
mov
mull
sub
push
insl
dec
sbb
rcrb
sbb
and
sub
icebp
es
dec
and
sub
frndint
in
inc
jae
enter
test
int
sbb
inc
dec
sub
cmpb
jecxz
aaa
repz
stos
cmpsb
xchg
cmc
pop
push
cmc
fisubrs
mov
or
jae
dec
adc
pop
sbb
push
lahf
adc
cmc
xchg
movsl
cld
and
jo
lods
lahf
mov
js
insl
pop
lahf
out
pop
imul
cmp
add
mov
add
or
mov
fistpll
pop
fnstsw
pusha
push
les
jno
jg
fisttpll
in
cs
cmp
and
lea
xchg
ficomps
xchg
dec
shrb
or
mov
mov
shl
call
sahf
adc
imul
mov
arpl
stos
dec
cli
xchg
dec
in
inc
xchg
adc
mov
je
aaa
outsl
lcall
jno
mov
jp
arpl
pop
sti
cmp
add
sbb
bnd
xlat
ret
jmp
fsub
mov
clc
popa
pop
sub
sarb
dec
aam
mov
add
sahf
dec
sbb
icebp
scas
push
sysenter
and
and
mov
mov
fcompl
fldl
push
pop
mov
nop
in
dec
add
add
xchg
mov
add
and
mov
jp
xchg
adc
push
call
cmp
xlat
dec
jl
ja
xor
pop
in
inc
mov
shlb
dec
push
xchg
fs
ds
xchg
fucomp
jae
sub
cmp
sub
daa
test
cmp
shl
mov
xchg
mov
addl
cwtl
mov
xchg
enter
sbb
pop
mov
and
fcomps
cwtl
jbe
push
ljmp
add
stos
mov
adcb
iret
bnd
shll
or
sahf
lea
out
clc
pushf
call
icebp
pop
cmc
cltd
push
cmc
cmp
insl
cmp
xor
push
or
adc
mov
outsl
mov
cmp
push
sbb
sbb
js
lock
fwait
lahf
adc
xchg
jnp
arpl
aam
pusha
push
mov
pop
add
jb
xchg
repnz
pop
das
inc
mov
js
sbb
adc
xor
jnp
xchg
call
mov
sub
cmc
shrb
out
and
and
insl
stc
cmp
in
inc
pop
int3
sbb
cmp
fidivrs
pop
adc
pop
xlat
xchg
mov
cmp
ja
jge
or
sbb
int
sbb
push
js
daa
jo
add
scas
mov
scas
mov
adc
dec
xchg
sub
pop
pop
scas
scas
cwtl
pop
out
adc
enter
sbb
and
mov
inc
rcrb
add
clc
pop
xor
jg
aad
push
sbb
mov
daa
mov
inc
hlt
pusha
pop
add
mov
mov
mov
jmp
fwait
add
notb
dec
testb
orl
mov
xchg
and
and
mov
out
cmp
push
push
hlt
xchg
iret
mov
rorl
sub
lods
int
cltd
lods
pop
add
inc
pop
dec
int
sbb
scas
jmp
int
sub
inc
jl
fs
jno
mov
lods
mov
mov
or
jno
addr16
jne
jno
movsl
push
sahf
inc
pushf
lahf
xor
aam
mov
imul
and
adc
lock
stc
lcall
es
data16
xlat
cmp
int3
add
dec
mov
jp
loopne
sub
cwtl
insb
inc
scas
sahf
dec
stc
pop
sbb
push
inc
stos
fisttps
stos
inc
sbb
sti
and
push
aaa
sbb
cmp
pop
or
hlt
sbb
in
inc
out
out
ljmp
pop
sbb
insb
notl
stos
fdivp
out
mov
sub
mov
adc
mov
pop
adc
scas
cmp
jmp
ret
sbb
adc
mov
sub
jnp
aam
xchg
outsb
cmp
mov
xchg
loope
inc
mov
inc
jns
cmpb
jne
cld
loop
sbb
fcomps
aaa
lret
movsb
push
dec
sub
push
mov
sbbl
fdivrs
enter
add
scas
fisttpll
in
push
hlt
add
mov
ficoms
and
push
testl
mov
movsl
pop
fiadds
icebp
je
mov
cmp
add
leave
adc
outsl
dec
ds
sahf
mov
adcl
add
call
or
sahf
cwtl
out
clc
push
in
movsl
sub
cld
or
pop
xor
ja
adc
pop
push
sahf
lcall
dec
nop
loopne
pushf
out
cmc
cld
aam
pop
lods
in
dec
outsl
shll
shr
in
in
popa
sub
sbb
ja
imulb
ds
push
lahf
fists
ret
push
sbb
inc
mov
adc
pop
mov
stos
lock
test
dec
iret
push
std
imul
inc
and
and
jg
and
adc
mov
inc
stos
lods
adc
xchg
out
into
stc
mov
inc
lds
addr16
adc
fisubs
clc
loop
sets
jne,pt
dec
mov
lds
out
cmc
pop
pop
xor
jne
push
xchg
inc
and
jb
fstps
movsb
cmp
daa
hlt
xor
xchg
sbb
add
shlb
cmp
inc
in
jmp
nop
fcoms
sbb
pushf
mov
pop
or
xchg
lea
fmulp
adc
xor
mov
cmp
xchg
jb
ljmp
add
pop
clc
mov
imul
in
clc
addr16
jl
ucomiss
cmpsl
lcall
call
dec
jge
jne
adc
sarb
ds
jnp
dec
insl
mov
sbb
push
in
and
or
mov
lock
hlt
mov
repnz
mov
sbb
cmp
jo
aas
dec
dec
dec
mov
int3
jb
es
push
or
jbe
xchg
push
nopl
dec
push
inc
repnz
xor
sbb
and
cli
les
movsb
fiaddl
setl
repnz
test
subb
sbb
mov
jle
cld
xor
in
jmp
mov
imul
out
std
pop
inc
lea
lods
fnstenv
outsb
imul
sbb
cmpl
les
and
sbb
inc
test
mov
pop
mov
xor
ss
lds
cld
icebp
rcrb
jge
cmc
movsl
xchg
fwait
pop
xchg
add
jbe
mov
ja
out
notw
lret
out
cmpsl
lea
jecxz
cmc
lret
add
mov
push
addb
in
jl
adc
sbb
push
jmp
lods
adc
adc
xchg
xchg
pop
in
aad
xchg
cmp
call
sub
imul
sub
push
adc
cmp
cli
pop
sti
push
push
xchg
add
sbb
in
std
clc
mov
sbb
aas
test
add
ficomps
hlt
jmp
cmp
push
pcmpgtw
or
push
fcmovne
aam
sub
fsts
mov
neg
pop
dec
nop
add
cs
xchg
xlat
mov
lods
xchg
movsl
stc
cld
push
mov
mov
xor
mov
popf
pop
push
xchg
push
insl
fwait
mov
inc
fs
pop
adc
sub
xchg
mov
pop
mov
adc
ret
fbstp
arpl
and
sbb
les
into
icebp
sub
outsl
cwtl
xchg
jmp
lahf
les
pop
push
push
adc
xlat
mov
cs
mov
leave
mov
fsubs
cs
inc
ja
incb
aad
ljmp
mov
mov
mov
stc
test
jbe
lret
sbb
notb
or
cmp
mov
mov
mov
movsl
mov
adc
cmp
lahf
adc
push
lret
and
jnp
sbb
xchg
inc
pop
pop
lret
adc
mov
pop
fnstcw
cwtl
add
pop
add
jne
cwtl
pop
add
or
in
mov
adc
je
clc
xor
fdivrl
pop
sbb
and
repnz
dec
movsl
inc
add
mov
pop
rclb
xorb
add
std
sbb
cwtl
out
pushf
stos
lahf
push
cltd
insb
fnstsw
fs
loop
mov
xchg
xchg
daa
pop
mov
fcmovne
and
pop
xchg
push
cs
xor
stc
and
popa
fnstcw
mov
and
arpl
or
out
loope
mov
rclb
xchg
adcb
lret
jg
xchg
test
cs
ss
push
pop
or
or
pusha
xchg
inc
adc
push
jno
mov
mov
mov
loopne
fisttpll
stc
shrd
sub
jns
dec
out
jns
pushf
or
pusha
es
pop
inc
adc
pop
xchg
aaa
mov
mov
push
sub
mov
test
dec
aam
rcrb
jno
mov
fs
jmp
cmc
xchg
filds
lock
clc
out
jnp
jnp
dec
cli
or
add
or
cmp
lahf
mov
pop
cmp
fs
add
imul
in
adc
pop
or
xlat
sub
shrl
dec
movsl
inc
inc
mov
jbe
pop
and
pop
xchg
imul
cmp
test
fs
aas
cmp
mov
movsl
mov
les
xor
xchg
lahf
xor
pop
out
add
fimull
imul
adc
mov
aad
jp
je
in
pop
pop
xor
ret
int3
sbb
pop
push
aam
add
adc
lods
push
sub
cmp
xchg
mov
je
mov
not
pop
movsl
std
jge
ljmp
add
mov
sahf
aad
jmp
mov
or
inc
jbe
pop
subl
shlb
jmp
loop
xchg
fistpl
push
add
lret
push
les
xor
and
xor
mov
dec
push
xchg
loop
ss
int
outsb
jmp
mov
arpl
xchg
bound
cwtl
mov
adc
lods
adc
sbb
shlb
test
fimull
lock
inc
lret
stos
mov
movsb
sub
call
rorb
mov
movsl
sub
popf
loop
cmp
cs
pushf
fldenv
scas
xchg
xchg
xor
jge
mov
test
adc
mov
jmp
pop
out
mov
inc
push
out
jnp
adc
pop
ret
inc
dec
adc
and
sub
loope
mov
sahf
push
xchg
mov
push
push
fistpll
movsl
pop
cmp
jb
jmp
stos
dec
shrl
scas
ja
xchg
lea
adc
in
lods
dec
cmp
add
mov
test
sbb
xchg
and
mov
jb
dec
adc
rcrb
ja
rcll
stos
lods
fiaddl
ss
xchg
movsb
inc
mov
mov
addr16
push
sahf
push
outsl
test
pushf
pop
pushf
cmp
adc
or
pop
lret
insb
test
jne
xor
fs
lret
xor
lods
pop
xor
bnd
clc
dec
inc
cmp
addb
or
sbb
shlb
push
push
pop
xchg
hlt
mov
inc
test
or
or
hlt
xchg
test
sbb
xor
and
or
and
test
xchg
sub
test
inc
pop
xor
jecxz
pop
jb
ds
pop
dec
jne
xor
add
clc
mov
repz
lret
xlat
call
clc
fmull
in
inc
push
push
dec
add
and
add
ror
jae
lea
insb
mov
fdivr
add
leave
mov
adc
lods
cmp
push
cmp
pop
add
pop
test
cmp
inc
xlat
pop
xchg
ds
gs
aad
outsb
adc
lods
push
jo
mov
fcoml
inc
inc
sub
aad
mov
mov
clc
or
mov
pop
andl
and
add
dec
out
arpl
pop
nop
sub
cmc
pop
xchg
lahf
xor
movsb
push
dec
in
es
in
dec
cli
jge
sub
jae
scas
jg
xor
fcmovb
movsl
add
nop
int
sub
mov
sbb
or
decb
je
xor
mov
rcl
enter
and
pusha
gs
mov
mov
jecxz
scas
aam
push
in
fldl2e
lcall
fsubl
jmp
insb
inc
int3
rcll
bound
out
jbe
outsl
jge
icebp
adc
nop
ja
sub
lret
into
stc
movsb
fwait
lret
cmp
daa
jnp
xchg
xor
pop
pop
cmp
xor
or
and
xchg
lcall
faddl
jb
and
lcall
in
lret
leave
sahf
xchg
addr16
pop
xchg
mov
inc
in
dec
aad
fcmovbe
mov
xchg
test
iret
in
dec
enter
cmp
lods
inc
icebp
xchg
fnsave
adc
cmp
dec
test
pop
xchg
lds
ss
inc
int3
popa
mov
js
mov
jb
pop
xchg
fs
dec
and
pop
sub
lret
cltd
adc
mov
in
jecxz
bound
cmp
push
dec
movsl
sti
adc
fwait
inc
mov
rcrb
imul
mov
rol
adc
xor
mov
test
jbe
cmc
jb
pop
xchg
pusha
jmp
pop
fs
stos
pop
mov
ljmp
and
enter
and
dec
dec
stos
push
sbb
test
pop
ja
jno
call
fwait
out
sarl
lock
and
addl
or
pop
cmp
inc
jp
cmp
stc
shlb
fildll
add
or
out
les
add
add
xor
sbb
dec
stc
cmp
xor
mov
popa
cmp
mov
test
cmpsb
mov
ret
add
pushf
xor
sub
xchg
and
imul
xor
ljmp
fisubs
fiadds
iret
fs
xchg
push
ja
ret
inc
push
in
xchg
insb
data16
imul
andb
and
sahf
in
sbbl
or
sub
sbb
jne
push
jmp
push
xor
mov
roll
add
ja
leave
mov
lea
movb
lea
lret
fwait
mov
sub
repnz
out
cld
rcrl
sub
inc
mov
ja,pt
lea
cmp
outsl
cmp
mov
lds
testb
adc
mov
jg
imul
nop
pop
idivb
dec
aad
dec
add
popf
negb
out
jg
xor
stos
sub
inc
sbb
inc
scas
aad
jge
pop
cltd
adc
mov
out
add
push
or
dec
andl
cmp
mov
popa
scas
and
cmp
jl
les
rcll
outsb
mov
jmp
cli
test
scas
out
push
xor
addr16
add
mov
cmpsb
jae
or
sub
stos
ror
fistpll
or
pop
call
sti
popa
incl
jb
addr16
mov
or
lock
pop
jmp
push
je
and
leave
or
shll
dec
pop
push
push
loope
clc
push
mov
int
enter
repz
add
rcrl
aad
js
sub
cld
iret
mov
sub
sbb
mov
data16
cmp
xor
je
add
sbb
pop
jno
aas
jnp
push
scas
sti
cmp
shlb
pop
dec
das
fldenv
push
cmpsl
lahf
push
nop
clc
adcl
add
ds
addr16
jmp
xchg
out
popf
mov
mov
push
mov
in
repnz
pushf
loopne
mov
ret
mov
in
adcb
xchg
sub
cwtl
pusha
jnp
mov
sub
mov
icebp
and
inc
adc
daa
in
test
addps
loope
and
test
std
mov
divb
iret
xor
cwtl
ja
jae
dec
mov
stc
int3
pop
mov
inc
mov
aas
push
xor
dec
adc
push
aaa
inc
std
jbe
nop
jg
scas
insl
cwtl
jle
out
xlat
repz
or
lret
packuswb
or
sbb
push
or
mov
in
in
lcall
xchg
xchg
xchg
xchg
add
mov
sbb
daa
push
addr16
inc
mov
xchg
mov
scas
arpl
adc
enter
test
lret
das
jge
loopne
mov
in
ret
icebp
add
movsl
mov
inc
jl
inc
cltd
sti
and
mov
dec
jb
mov
inc
sub
lods
lods
add
and
and
adc
call
jg
mov
inc
ss
test
jb
xor
outsb
push
xlat
daa
add
rorl
cwtl
cmpsb
rol
mov
sbb
mov
in
inc
out
test
inc
cmp
fcmovnu
and
aad
shl
stc
sti
push
popl
test
pop
daa
lret
je
xchg
icebp
inc
sbb
sbb
icebp
cltd
lods
aaa
push
lcall
sub
mov
push
pop
pop
push
out
mov
bound
dec
push
push
rep
push
sub
ja
loopne
jnp
fwait
cld
je
scas
cmp
stos
lds
addr16
test
imul
lahf
movsl
add
mov
add
imul
sub
mov
xor
fmull
and
mov
leave
stos
pushf
repz
adc
cwtl
add
lahf
cmc
stc
mov
daa
shll
and
adc
pop
pop
out
mov
sbb
sub
lcall
int3
jmp
sbb
notb
andb
dec
jmp
sbb
adc
push
js
pop
ja
stc
adc
sub
dec
ret
add
adc
dec
and
mov
lock
gs
pop
es
jle
push
fildl
mov
ljmp
lds
daa
int3
and
xchg
hlt
fsubl
or
sub
in
sahf
xor
fmull
add
adc
add
repz
or
sub
push
sub
mov
push
xchg
mov
inc
mov
lret
les
enter
xor
mov
jbe
push
xchg
mov
push
popf
test
dec
xchg
push
pop
mov
das
rorb
fdivl
pop
in
push
sub
test
aaa
jle
aaa
hlt
sahf
pop
pop
cs
jp
jne
xchg
add
jnp
dec
and
push
pop
pop
and
jecxz
and
mov
cmp
test
mov
and
sti
loope
lock
shlb
repz
pop
ds
mov
push
mov
cmpsl
pop
std
in
mov
sub
dec
add
shlb
in
add
pop
inc
cmp
xchg
jecxz
fcomps
mov
cmpsb
mov
jmp
das
mov
mov
shlb
stos
and
cmpsb
lds
lahf
sub
push
lret
xchg
pop
fildll
xor
xlat
cmp
aam
adc
mov
test
jmp
enter
imull
rorb
jp
dec
mov
xor
add
repnz
sbb
std
lcall
aam
fimull
insl
sub
int
mov
test
stos
dec
test
pop
lahf
mov
ljmp
popf
out
movzbl
movsb
or
xlat
in
and
mov
in
pop
xchg
add
nop
movsb
cltd
push
ds
mov
nop
outsl
push
into
inc
and
jb
rclb
push
mov
sbb
aaa
repnz
icebp
or
sbb
addl
xchg
out
jge
lret
inc
addr16
adc
xchg
inc
push
add
cmp
adc
push
loopne
xor
int
inc
dec
adc
sbb
dec
rcll
test
jo
jge
popf
adc
xchg
loop
mov
inc
leave
adc
add
sbb
add
enter
dec
pop
jae
or
adc
mov
es
outsb
xchg
mov
js
insb
jle
xchg
or
jecxz
dec
dec
mov
ret
dec
mov
mull
cmp
push
and
das
into
pop
dec
jecxz
cmp
xor
gs
test
hlt
xchg
ret
fsubrl
or
mov
adc
fwait
pop
mov
lods
rolb
and
mov
lods
out
rolb
push
pop
mov
xchg
xchg
cmpsb
nopl
sbbl
stc
int
push
cmp
scas
rclb
fdivp
xchg
sbb
jg
leave
mov
sbb
hlt
sub
test
sbb
push
jg
in
int3
dec
cmp
test
or
cmpsb
push
mov
fmulp
sub
mov
jle
cmp
mov
int3
stos
mov
dec
fidivl
push
sbb
lods
push
cmc
arpl
add
clc
and
mov
leave
xor
je
shr
push
jns
add
mov
cwtl
mov
lods
mov
xor
mov
add
xor
cmpsl
lret
out
shlb
test
rclb
add
dec
mov
pop
cli
inc
pop
fdivr
push
into
mov
jno
std
cli
jnp
sub
mov
xchg
arpl
xor
insl
add
push
popf
add
xor
sub
xor
test
lods
hlt
push
xchg
adcb
pop
cmp
dec
ja
mov
in
xchg
push
in
lcall
mov
jbe
or
adc
stos
fists
cmp
xor
jbe
dec
je
or
mov
xor
xlat
outsb
cli
fidivs
jnp
aam
add
sub
mov
cmpsl
rcr
inc
mov
add
sahf
lods
rclb
in
xchg
cmp
pop
jo
push
mov
addr16
addb
shlb
push
icebp
ja
inc
rol
pop
inc
ds
lret
mov
xor
sub
imul
xlat
push
data16
enter
rorb
push
call
popa
and
in
cltd
pop
xor
lret
lcall
inc
loop
repz
pop
jmp
mov
dec
mov
fdivl
add
pop
sbb
stos
enter
pop
and
jnp
lock
ja
ljmp
and
stos
into
sti
or
mov
mov
add
mov
add
and
xchg
cld
aad
and
pusha
or
cmpsl
mov
adc
xchg
sub
ret
loope
lods
push
inc
cmp
pop
mov
inc
cltd
jmp
vcvtps2dq
or
shll
outsl
mov
imul
stc
js
mov
add
mov
stc
mov
push
frstor
sub
sub
mov
jp
or
mov
pop
mov
jne
or
js
mov
ja
xor
mov
mov
jo
push
mov
xor
inc
xchg
adc
push
insl
adc
in
push
and
jle
ljmp
lea
sub
push
push
mov
dec
or
mov
adc
ret
mov
xor
push
nop
loope
xchg
pop
push
das
or
popa
pushf
xchg
xor
cmp
or
pop
enter
insb
or
mov
sti
sub
mov
sub
and
push
and
sub
enter
out
sbb
ret
aam
clc
and
lea
sbb
cmp
mov
mov
xchg
cwtl
mov
les
pop
add
adc
insb
add
out
jge
and
je
and
mov
jbe
rcl
inc
out
hlt
int
xor
sub
in
out
imul
and
jp
icebp
pusha
inc
in
push
scas
pop
data16
cltd
adc
sub
ror
xor
pop
loopne
adc
xchg
cmp
xor
pop
xchg
cwtl
ljmp
inc
cmp
rep
js
mov
mov
pop
data16
mov
jnp
ret
add
jno
xchg
jno
call
je
fstps
ss
addb
lods
cmp
out
and
call
adc
ds
mov
popf
add
sbb
push
or
jl
js
mov
ljmp
inc
mov
ds
mov
inc
sub
inc
test
hlt
mov
inc
or
mov
pop
push
in
push
insb
and
fcompl
xor
movb
pop
int3
sbb
clc
pop
mov
cmp
mov
data16
mov
adc
loopne
cld
pop
mov
flds
mov
pop
mov
and
dec
xchg
sub
arpl
rcrl
and
js
push
es
xchg
push
and
dec
and
pushf
add
sbb
push
in
xor
push
mov
ret
inc
scas
repnz
mov
mov
xchg
lea
mov
mov
stos
addr16
jg
sbb
mov
push
push
and
dec
cmpsb
and
xchg
popa
add
jo
in
ss
mov
stos
es
sbb
mov
out
call
out
inc
xor
hlt
cli
and
jbe
cs
xchg
sbb
pusha
mov
push
cmp
shrb
jne
xchg
sub
cmp
adc
adc
cmp
bound
mov
loopne
mov
inc
ja
not
sub
scas
inc
fsubrs
shr
adc
mov
in
sub
fdivs
mov
scas
icebp
roll
icebp
lcall
inc
in
call
or
sbb
cmpsl
lret
fists
sub
xchg
or
ss
xchg
fstpl
cmpsb
or
and
iret
arpl
inc
outsl
jne
push
icebp
insl
das
pop
movl
push
in
pop
inc
movsb
fdiv
aam
inc
jmp
sahf
mov
jg
ret
popf
sarl
mov
insl
andl
es
or
xchg
outsl
mov
cmpsl
sub
mov
negb
xor
lods
std
in
ljmp
popf
hlt
mov
std
fldcw
pop
jb
mov
fdivrl
mov
sub
xor
fmull
mov
std
rcl
mov
dec
sbb
iret
jg
std
push
mov
xchg
cmp
sub
test
push
mov
cld
adc
xor
das
pop
iret
mov
scas
cmpb
adcl
jnp
in
sbbb
inc
xchg
xor
or
mov
ja
sbb
xor
sub
mov
mov
mov
mov
out
cmc
es
addr16
push
sub
testb
lahf
call
sub
and
adc
adc
xor
and
mov
xchg
in
lea
les
or
mov
jle
xchg
or
cwtl
fwait
mov
sahf
pusha
shlb
cwtl
xor
push
xchg
lret
inc
mov
jnp
lahf
lahf
lahf
pusha
fld
lods
dec
adc
bound
dec
clc
xchg
popf
cli
sbb
dec
mov
aad
out
mov
sub
and
dec
iret
push
cltd
mov
push
je
popf
stc
xor
test
jno
dec
int
inc
mov
pop
out
fstpl
push
pushf
dec
gs
dec
cwtl
cmp
sbb
and
inc
mov
cli
int
inc
movsb
aam
ret
inc
or
adc
out
sahf
add
add
cmp
fucom
jmp
lret
fstpl
xchg
lret
push
inc
jg
out
testb
push
test
xor
fadd
dec
dec
mov
xchg
sti
mov
sti
fimuls
dec
push
mov
or
in
icebp
cmc
jle
sbb
hlt
xlat
faddl
mov
lock
inc
dec
in
call
jnp
mov
adc
adc
decb
addr16
push
dec
inc
and
push
inc
dec
inc
cmp
and
or
mov
imul
push
outsl
cmpsb
adc
lret
jmp
cmp
rorl
push
je
call
lods
jne
sub
mov
inc
push
addl
sbb
sbb
cmp
jae
or
fs
inc
out
test
or
mov
push
xor
jle
xlat
jg
insl
call
and
lea
les
cli
mov
aaa
push
jp
push
js
in
push
xor
mov
movsl
sbb
dec
call
stos
xlat
sarl
and
out
outsl
ja
aas
inc
dec
xchg
mov
jmp
sub
push
dec
cld
add
xchg
cwtl
lahf
mov
sbb
xor
inc
xchg
mov
mov
fs
lea
test
bnd
ds
test
pop
mov
xor
push
jmp
in
test
mov
and
das
and
cmp
gs
mov
fs
sub
stos
hlt
test
jp
ja
ret
ret
imul
mov
jb
xchg
repnz
fidivrs
dec
jle
cmpsb
mov
filds
mov
pushf
dec
mov
sbb
sub
lahf
movl
xchg
cs
sar
push
adc
int3
cli
stos
pop
je
stos
xlat
xchg
inc
jnp
shrl
mov
xlat
sbb
xor
inc
dec
mov
insl
jb
mov
iret
xor
rorl
jnp
mov
test
push
aad
leave
xchg
mov
out
jp
cmpsb
into
ret
aaa
xor
adc
loopne
aam
mov
sbb
jno
mov
cmp
cmp
inc
add
out
cld
sbb
xchg
adc
adc
sbb
mov
ss
cmp
insb
jmp
std
in
cli
cmp
testb
mov
fstp
lods
hlt
out
fucom
cli
ss
insb
inc
add
bound
lahf
sub
push
loope
repz
xchg
jae
movsl
std
mov
lret
xor
sub
cmpsb
out
mov
bound
daa
stc
lcall
mov
mov
jp
push
andps
mov
ds
dec
inc
sarl
ret
mov
pop
or
jae
mov
dec
sub
imulb
je
push
or
cmc
negl
fwait
in
inc
out
jp
sti
adc
dec
xlat
sbb
aaa
clc
cmp
dec
lret
sub
in
jmp
sub
mov
sahf
icebp
ss
inc
cs
imul
push
js
aam
and
or
test
jmp
sahf
shl
push
push
mov
decb
repz
enter
std
fdivs
jmp
mov
enter
and
inc
int
inc
or
lret
jnp
mov
cltd
jno
jb
shll
and
jns
outsl
jno
xlat
or
frstor
xchg
jae
jae
stc
lea
sub
ret
mov
sbb
popa
xor
mov
adc
in
popa
push
pop
cmp
mov
xor
jno
fstps
sub
or
cmpb
jns
movb
ficomps
mulb
in
shlb
dec
xchg
add
jecxz
xchg
mov
xlat
xor
dec
sub
fsubp
cli
dec
inc
cmc
jo
sub
jns
shrb
stos
lods
adc
nop
rorb
movsl
sub
sub
fsts
repnz
push
pop
rcl
jne
adc
orb
or
fidivs
jne
mov
sub
add
jg
movsl
in
ljmp
push
sub
push
imul
idiv
int
js
add
xchg
adc
popf
popa
xchg
adc
das
insb
push
push
jae
loope
in
out
sub
adc
int
jmp
or
test
mov
xchg
mov
enter
sbb
sbb
lret
cmp
arpl
jne
dec
jecxz
cmp
cmp
lahf
nop
or
scas
add
push
mov
fnsave
fidivrs
mov
pop
jge
ret
mov
cmp
or
sbb
test
icebp
xchg
xorb
adc
cmp
jno
jnp
mov
xor
pop
and
in
repz
jnp
adc
dec
jl
push
jle,pn
mov
inc
fidivl
cmpsb
mov
fidivrs
mov
fwait
dec
sub
mov
hlt
mov
add
leave
inc
lret
cwtl
sbb
jns
or
jmp
hlt
stc
lcall
ss
mov
hlt
jb
data16
fistl
xchg
mov
sbb
xor
scas
push
das
insl
les
dec
xchg
jno
fcoms
mov
and
xchg
mov
fldenv
loop
jo
mov
fstps
and
jmp
adc
jmp
jmp
ds
add
fwait
pop
push
subb
ret
jns
out
add
sbb
int3
aas
cmp
arpl
mov
adc
sbb
pop
out
sbb
sub
addr16
lock
test
jp
or
call
lds
xchg
lret
fidivrs
negb
incb
push
pop
jg
pop
mov
jbe
xor
dec
ror
int
popa
push
cld
xchg
out
lods
gs
add
sub
ja
movsl
shll
in
adc
mov
xchg
jmp
inc
add
push
cmp
push
add
es
xchg
dec
sub
xchg
lds
test
dec
sbb
add
mov
lahf
cwtl
call
movsl
jle
and
scas
cmp
adc
pop
or
add
cli
mov
dec
fisubrs
push
aam
dec
in
movsb
addr16
out
jnp
cltd
jl
add
mov
cltd
xchg
sarl
add
xchg
pop
cmp
adc
daa
mov
sub
movsb
mov
jl
add
xchg
adc
scas
nop
mov
add
test
ja
pop
aas
addl
dec
je
decb
mov
add
jl
aam
mov
mov
icebp
cmp
icebp
dec
lock
pop
lods
jns
mov
cmpsl
aam
mov
dec
mov
mov
or
xor
sar
push
mov
lcall
inc
ret
std
pop
inc
pop
add
cmp
ja
and
ss
testb
mov
in
shrb
pop
lret
mov
mov
fs
leave
mov
jnp
mov
pop
mov
addr16
sahf
pop
xchg
in
leave
fistpll
jo
push
xchg
add
jle
xchg
sub
arpl
pop
in
or
xchg
pop
rolb
push
imul
cltd
aam
in
jns
mov
mov
add
jg
push
loop
xchg
lcall
outsb
cmpsb
adc
dec
xchg
bound
imul
jle
icebp
imul
adc
xchg
xor
fisttpl
aad
mov
test
or
lds
repnz
pop
mov
test
mov
stc
sbb
std
mov
es
dec
mov
out
pop
jno
daa
jb
les
push
fucomp
leave
ljmp
popf
sti
xchg
or
xchg
and
pop
dec
sti
mov
xchg
fs
imul
sbb
mov
push
pop
insb
gs
scas
cld
pop
es
dec
jmp
fists
lods
xor
pusha
mov
and
jmp
fadd
aas
inc
faddl
rcll
daa
leave
jbe
fcomps
inc
dec
push
sbb
lods
clc
mov
test
dec
test
sahf
aaa
jecxz
hlt
jb
sahf
popf
inc
sbb
inc
sub
test
push
xor
lods
dec
mov
repz
lret
ret
scas
mov
xchg
rcl
fadds
mov
or
shld
aas
xchg
js
push
stos
daa
imul
bound
imul
mov
cs
out
lods
mov
imul
cmpsl
sbb
xlat
movsb
nop
mov
int
mov
xchg
ror
cmpsl
pop
imul
test
fnstsw
mov
out
mov
int3
popf
adc
jle
mov
push
mov
pop
sub
add
push
lock
xchg
sahf
add
sub
mov
loope
repnz
ficoms
pop
mov
sub
sub
ss
jae
sbb
mov
cmp
cmp
add
push
mov
pop
inc
pushf
pop
xor
jecxz
mul
mov
inc
mov
lods
fdiv
or
hlt
and
adc
xchg
dec
loopne
outsb
cmpsb
cmpl
mov
add
popa
loop
dec
push
out
xchg
ds
rcr
and
and
lret
dec
pop
loope
ret
cmpsb
call
xlat
mov
xchg
in
addr16
ja
into
idivb
xchg
jge
cmpsb
imul
xchg
inc
sbbb
or
inc
add
cmp
jae
jnp
rcl
lret
lret
in
mov
adc
mov
mov
push
enter
shll
ljmp
sub
dec
test
cmp
mov
sub
xchg
inc
flds
cmc
lods
jp
iret
push
and
pop
in
xchg
push
and
inc
adc
sahf
inc
add
add
cli
pusha
lea
sub
xchg
lods
pop
cmp
mov
sbb
lret
dec
daa
fs
scas
or
inc
popl
mov
xchg
hlt
or
or
xchg
imul
sub
repnz
sub
sub
out
cld
xchg
fcomp
jae
lcall
xlat
into
rol
inc
dec
or
js
ret
jne
pop
sti
fdivrl
flds
jbe
mov
add
and
mov
push
add
jo
out
jae
jae
fiaddl
jbe
pop
notb
xlat
cmp
cld
or
mov
sbb
xor
xchg
push
push
jnp
shll
ja
mov
psubusb
cmp
cmp
call
inc
mov
mov
inc
inc
jmp
cmpsb
mov
aam
mov
lds
lods
and
jmp
push
outsb
push
mov
leave
and
xchg
inc
idivl
mov
lock
push
inc
sub
lahf
mov
mov
push
test
jg
stos
sbb
insb
mov
cmp
popf
das
lods
or
adc
das
shll
add
aad
mov
hlt
inc
mov
mov
mov
sbb
mov
sti
jecxz
in
jns
fdivrs
daa
push
xchg
pop
mov
ds
cwtl
mov
push
mov
aaa
push
and
ret
outsb
scas
cmp
mov
or
mov
fwait
mov
xor
mov
xor
sub
jae
jbe
insb
hlt
pop
je
pusha
outsl
pop
inc
call
xchg
lahf
jne
in
pop
mul
pop
sub
pushf
lds
jle
mov
mov
pushf
and
pop
fadds
je
mov
sbb
push
xchg
loope
push
pop
sarb
push
repnz
aam
fisttpll
lods
mov
loope
dec
cmc
cmp
test
adc
adc
mulb
aad
clc
sub
iret
inc
andb
jp
xor
sbb
lods
push
out
mov
or
outsl
scas
jne
inc
pop
add
fisubrs
cmc
xchg
negl
xchg
popf
mov
cld
call
adc
int3
add
pop
jg
in
pop
cmp
jns
loopne
adc
lcall
cmp
and
scas
insb
notl
dec
mov
add
sbb
xchg
and
aad
lods
cltd
sbb
fsubr
fldenv
push
push
fdivs
andl
sar
jno
fstpt
fisubrs
dec
xchg
mov
mov
inc
adc
mov
mov
clc
or
sbb
mov
lcall
mov
out
mov
push
mov
mov
or
stos
jns
js
sub
sbb
add
xor
push
out
sub
adc
or
add
mov
loope
mov
dec
lea
nop
mov
mov
push
xchg
roll
iret
jne
xchg
xor
icebp
mov
stos
test
push
sub
in
loopne
xor
lcall
sti
and
call
mov
popf
cmpl
movsb
add
bound
sub
xchg
rorl
decl
add
mov
pop
push
rorl
divb
xor
push
inc
mov
popa
outsb
sub
mov
mov
insb
call
sub
bound
or
outsl
scas
pushl
jno
and
inc
in
push
out
ss
or
pop
push
inc
movsl
or
sbb
cmpsb
lahf
imul
mov
pop
cmpsl
mov
inc
and
adc
imul
das
inc
cli
sub
mov
pop
mov
dec
ucomiss
cwtl
adcl
mov
add
bound
xchg
mov
fsubs
jnp
in
cmp
jae
dec
mov
outsl
lcall
dec
pop
mov
adc
test
add
adc
xchg
movsl
movsl
xchg
sbb
pop
lahf
into
lret
add
or
mov
push
adc
mov
sbb
sbb
inc
and
es
cmp
rol
movsb
and
sub
xchg
dec
jmp
les
cli
cmpsl
leave
bound
mov
xchg
fs
rcll
fdivrs
sub
xor
and
out
addb
mov
jb
data16
jns
jl
xchg
nop
dec
dec
lcall
icebp
push
pop
jp
add
stos
mov
mov
add
xchg
dec
ja
mov
sbb
mov
loope
xchg
dec
cmp
dec
shrb
fwait
push
sub
loopne
out
sbb
fisubrl
mov
cmp
js
lds
sub
sti
cmp
ljmp
fwait
outsl
jl
pop
xchg
xchg
lods
rcrl
daa
je
cmp
add
and
int
cmp
or
xchg
xchg
xorb
cmc
add
repnz
repnz
leave
lcall
add
adc
dec
daa
scas
stos
push
xchg
inc
push
and
mov
jns
sbb
inc
jg
xor
loopne
ficomps
movsl
cmp
or
inc
xlat
jb
add
out
icebp
lea
cmpsl
out
stos
ljmp
ds
adc
add
mov
aas
cs
pop
cmp
and
imul
xor
jg
aas
dec
dec
cmp
dec
mov
jp
mov
in
inc
sahf
xor
shlb
jnp
push
lds
dec
arpl
and
adc
jno
pop
imul
std
mov
aas
cltd
pop
cmp
outsl
test
int3
orb
cmpsb
cltd
jne
mov
and
fsubrs
inc
push
mov
pop
les
cmp
xor
or
mov
mov
test
xor
mov
aas
sub
out
mov
inc
arpl
pop
mov
add
faddp
shlb
sub
shll
and
mov
fnsave
jno
ljmp
negl
loope,pt
push
inc
lock
jno
jg
push
sbb
jo
mov
dec
jno
hlt
adc
rcll
stc
cltd
cld
pop
mull
fisubrs
je
pop
imul
les
scas
add
adc
adcl
mov
add
aad
push
add
outsb
in
mov
call
js
sub
icebp
clc
call
cmpsl
pop
cmp
add
ret
pop
jae
clc
insb
and
sub
scas
ret
gs
and
arpl
lcall
filds
das
sub
mov
sub
push
dec
sarb
loope
xor
fwait
out
push
push
into
testl
in
mov
push
adc
addl
fdivrs
xchg
add
rorl
or
out
dec
jne
jnp
aaa
aad
add
mov
cmp
mov
push
mov
aas
std
adc
sbb
pop
lods
mov
jmp
and
add
mov
jno
rolb
mov
adc
pop
leave
mov
add
dec
mov
mov
xchg
daa
jmp
loope
and
push
call
aas
cld
les
ss
out
lret
jmp
pop
cs
inc
into
mov
cli
sbb
cmpsb
mulb
xor
cli
mov
mov
sbb
sub
xor
jae
dec
mov
or
and
loop
lret
xchg
cltd
lds
sti
bound
shrb
jo
js
xor
inc
sub
loope
lods
xchg
cmp
fiaddl
sbb
fs
inc
in
jns
push
xor
dec
call
data16
xor
hlt
xor
aaa
sahf
adc
int3
and
jp
add
push
add
mov
adc
mov
lods
dec
push
push
push
mov
xlat
aam
sbb
ss
mov
pop
ret
and
add
mov
test
dec
punpcklwd
and
push
pop
test
aad
mov
pop
imul
jecxz
adc
or
imul
mov
in
push
sub
addr16
cmp
sub
add
add
cmp
arpl
xchg
cmp
js
lcall
add
jle
xor
pop
leave
mov
enter
pop
mov
ss
ds
mov
sub
lods
sbb
rcrl
in
push
mov
cmp
aam
xchg
mov
cmp
cmpl
inc
xor
fdivrl
pop
mov
mov
jl
mov
in
adc
xlat
mov
sahf
test
push
cs
arpl
mov
les
bound
dec
mov
data16
aaa
lret
mov
lock
fxch
gs
push
fsubrs
jb
gs
xor
or
cld
pop
testl
or
xor
xor
inc
in
lret
adc
inc
jg
call
std
hlt
in
icebp
or
xor
sub
imul
push
rcrl
out
pop
and
push
jb
imul
loop
es
decb
xchg
xchg
push
jb
sbb
dec
js
scas
mov
mov
imul
movsb
ljmp
pop
cmp
stos
dec
gs
dec
cmp
movsl
int3
mov
inc
jg
outsb
mov
push
aad
xor
fcmovb
sbb
lock
and
push
das
jmp
dec
aad
cli
sbb
dec
mov
mov
mov
fisubrs
gs
stos
push
dec
roll
mov
in
loop
dec
out
ffreep
mov
adc
mov
dec
xor
adc
call
mov
loop
add
sub
mov
xchg
add
daa
outsl
add
cmp
in
mov
rcrl
sub
and
push
popa
xor
jecxz
xor
cmp
mov
mov
mov
xor
daa
mov
jae
insb
fidivl
mov
leave
cmp
mov
jo
je
aad
lods
sbb
ja
pop
push
sarb
cmp
or
inc
out
add
loope
mov
test
or
icebp
pop
push
push
test
push
lcall
repnz
add
es
and
adc
pop
fnsave
imul
cmc
loope
xchg
xchg
ret
loope
sub
aam
sbbb
pop
jnp
insl
push
lods
ljmp
out
xor
movb
or
and
jge
out
test
pop
test
add
xor
lds
rcrb
addb
mov
push
insl
inc
lahf
ja
push
movsb
push
icebp
cmp
arpl
push
mov
mov
or
lock
mov
pusha
sar
mov
pop
mov
fldenv
push
out
out
mov
cmpl
repz
mov
mov
lahf
insl
pop
insb
repz
or
leave
mov
imul
test
mov
mov
data16
icebp
xor
mov
jae
xor
adc
fldl
mov
and
test
and
stos
vorps
fldt
dec
inc
push
push
shll
sbb
sub
sub
in
adc
lock
adc
ds
mov
orb
es
xchg
or
mov
movsl
xchg
fstps
xchg
adc
mov
or
dec
xor
dec
andl
in
or
in
fwait
aad
inc
dec
movsb
lret
mov
dec
add
js
cmp
adcb
outsb
fwait
push
mov
clc
pop
xchg
and
loope
push
push
aam
test
aam
fsubrl
stos
mov
outsb
nop
inc
sub
sub
mov
gs
into
inc
mov
xor
test
jnp
scas
mov
addl
or
je
mov
pop
pop
addl
pop
sub
push
push
mov
ljmp
xchg
ljmp
cmp
mov
test
fsubrs
mov
cmpsb
sbb
lret
ljmp
and
movsl
xchg
pop
pop
aaa
and
or
aas
lds
insb
divb
ror
or
push
xor
cmp
adc
mov
cwtl
pop
adc
rol
xchg
out
or
fadd
mov
dec
add
xchg
cltd
jmp
outsl
out
sbb
cwtl
push
loopne
mov
push
push
xor
fildl
imul
std
sub
stc
movsl
pushf
negl
push
inc
inc
and
out
pop
mov
jmp
ss
mov
out
or
movsb
pop
data16
das
leave
fstpl
ret
daa
stc
mov
sub
rcrb
cmp
jbe
out
into
dec
jp
rcrb
mov
pop
xlat
lods
adc
pop
push
outsl
repz
fcomps
sbb
mov
inc
mov
jle
or
enter
mov
pop
mov
stc
pop
xchg
call
sarb
leave
ljmp
jb
cmp
mov
sbb
leave
add
shl
mov
sbb
sbb
push
faddl
pop
lods
mov
mov
jp
cmp
leave
pop
scas
pop
movsb
inc
mov
fiaddl
jp
mov
push
stos
add
jae
push
mov
pop
mov
lock
ret
and
lcall
sub
stos
rep
sub
shrl
fistps
mov
cli
mov
push
lcall
jmp
lods
popf
call
dec
xlat
icebp
xor
imul
push
adc
pop
fsubrs
jg
call
cwtl
add
inc
rcll
cs
jecxz
lcall
dec
iret
stos
mov
lock
mov
add
mov
mov
and
jg
int
cmp
sbb
add
push
inc
scas
aas
test
and
add
imul
xchg
push
sahf
shlb
or
outsb
or
clc
sbb
bound
sarb
arpl
jp
xlat
sub
sbb
fdivl
mov
or
in
addr16
dec
and
push
enter
xchg
lret
sbb
xchg
mov
and
sub
cld
push
lea
add
xchg
sbb
add
lds
mov
push
push
xchg
cmp
jl
scas
outsl
dec
rolb
test
pop
mov
jno
pop
jecxz
xor
aad
or
arpl
pushf
xor
cmp
sub
and
sub
in
loope
ja
stos
add
or
addb
inc
jle
fwait
in
dec
dec
cmp
int
aam
shl
gs
cmp
cmpsb
flds
addb
std
mov
sbb
push
cmc
sbb
int3
out
das
push
sub
lods
add
push
add
subl
and
repz
sbb
mov
and
imul
adc
repz
out
jo
jp
fcomp
xchg
test
adc
mov
jge
data16
loop
pop
mov
dec
fmuls
push
sbb
jb
popf
es
and
rolb
stc
fisubrl
icebp
and
push
mov
in
test
test
lahf
adc
or
adc
dec
mov
pushf
or
sub
mov
jo
xchg
xchg
jne
xor
and
out
mov
aam
jp
fldt
ret
int
push
dec
movsl
pushf
xchg
cmp
ret
fmulp
xchg
sbb
jne
push
or
sbb
dec
test
pushf
mov
or
lock
daa
aad
jecxz
mov
fnsave
ret
xor
xchg
pushf
push
cmpl
shrl
rorl
gs
push
xchg
andl
jp
jg
js
fs
loop
mov
out
and
mov
pop
outsb
push
add
xor
mov
mov
lcall
ss
mov
push
leave
xchg
sbb
sti
clc
pop
xor
mov
pusha
sub
test
dec
jmp
add
xlat
daa
cmp
push
fs
cs
xor
ret
loope
or
adcl
test
cmp
dec
mov
dec
jnp
jle
daa
sbb
pop
and
inc
popf
hlt
adc
sarl
cmp
inc
xchg
inc
dec
dec
in
mov
js
rol
mov
pop
sbb
fisttpll
fisubrl
into
in
or
fwait
adc
cltd
out
ljmp
lcall
cmp
or
xor
into
jns
je
shl
mov
inc
xchg
rol
add
jmp
or
and
ret
jle
sbb
sub
movsb
je
push
and
in
test
outsl
add
insl
fstp
push
sub
push
int
and
ds
jmp
out
mov
mov
ficomps
lcall
jmp
daa
aas
pop
push
mov
mov
shrl
fwait
push
xor
sti
lea
aad
cmovne
repz
insb
cwtl
rcrl
aas
rep
mov
lods
stos
cwtl
repz
inc
jne
les
arpl
lods
xchg
mov
lods
mov
mov
xor
sahf
xchg
repnz
cmc
int
fwait
loopne
sti
cmp
xchg
pushf
sbb
fwait
and
bound
scas
repz
xor
or
test
pushf
mov
lret
and
inc
fadds
cmc
dec
jg
sbb
dec
xor
dec
xchg
cmpsb
xchg
loopne
jge
inc
mov
jmp
pop
negb
jmp
lcall
fiaddl
out
int
loopne
je
inc
xchg
cmc
push
jo,pt
push
and
push
add
in
lcall
or
in
jbe
imul
enter
inc
sub
outsl
dec
or
daa
xor
or
sub
fisttpl
rcl
or
mov
ss
ret
xor
sarl
test
pop
mov
gs
adc
cmp
roll
and
jge
pop
rcrl
dec
jbe
ret
aam
cli
jbe
movsb
leave
daa
dec
pushf
cmpb
pusha
clc
sbb
xchg
loop
sbb
xchg
cmpsl
mov
fstpt
jo
jne
mov
push
call
call
jns
mov
iret
cld
xchg
mov
mov
scas
dec
out
mov
cli
dec
out
mov
fists
push
mov
lret
and
add
add
movsb
and
xor
pop
jg
cmc
pop
push
cmpsl
out
sahf
lahf
fcmovbe
js
movsb
out
cmp
xchg
clc
cmc
xchg
dec
and
dec
cmp
add
lcall
jnp
adc
les
dec
in
fnstsw
mov
sub
inc
cmc
mov
jmp
test
xchg
rcrb
xchg
leave
pop
mov
insl
es
sbb
sbb
adc
xchg
pop
xchg
sbb
mov
adc
add
stc
inc
push
es
mov
cs
neg
push
pusha
in
nop
pop
xor
fadds
sahf
faddp
inc
mov
outsb
bound
pop
adc
addr16
jmp
popf
call
lcall
idiv
loop
aas
push
lret
mov
ss
bound
loop
mov
mov
rcl
mov
aad
mov
push
loope
and
push
push
or
mov
cwtl
or
sbbb
sub
mov
adcb
movsb
imul
cmp
jne
jmp
fnstcw
out
or
mov
outsb
test
mov
jb
inc
xchg
pop
xor
vunpcklps
xor
push
scas
mov
aad
divb
andl
loop
into
daa
add
pop
and
xlat
sub
sub
cmc
jp
icebp
or
insl
popa
scas
pop
adc
pop
cmp
mov
enter
test
adc
push
mov
pop
cli
pusha
test
and
ficoms
test
xor
jl
pop
scas
mov
cmp
shl
inc
sbb
idiv
pop
ss
and
mov
pop
cmp
mov
lds
xor
xchg
inc
xorb
sbb
mov
dec
adc
lahf
aam
lods
add
cmp
inc
or
xor
inc
xlat
gs
jmp
int
jl
into
pop
dec
add
cmp
xor
or
je
push
mov
xchg
push
lock
ret
xor
push
jl
sbb
sbb
inc
and
jp
jns
loopne
or
jo
mov
or
lcall
por
test
inc
xchg
sub
and
adc
mov
pop
pusha
lret
xlat
fs
xchg
mov
add
icebp
xchg
mov
imul
mov
and
and
inc
inc
mov
dec
jmp
xchg
stos
fstpl
fucomi
arpl
dec
push
xlat
ret
out
push
nop
test
mov
and
xchg
loop
pop
cmp
out
loop
fstps
cld
mov
ss
js
enter
pop
or
roll
lock
adc
mov
mov
pop
mov
jp
divb
xor
fwait
mov
push
leave
sbb
mov
aad
stos
adc
adc
pop
jo
loope
jo
arpl
sub
js
jnp
pop
out
jg
sbb
pusha
jl
scas
jns
and
add
rol
mov
jmp
fs
arpl
fmul
inc
in
adc
cmpb
push
lcall
push
fbstp
addr16
and
out
fstps
lahf
std
mov
mov
adc
mov
xchg
adc
push
jle
xchg
jp
mov
adc
fmul
fcomps
push
cld
movsb
xor
int
mov
fsts
and
insl
and
out
push
clc
jg
jle
cmp
in
cmpsl
cmp
lahf
loopne
aam
sbb
cli
fwait
stos
out
pop
pop
fs
das
lea
insb
xchg
mov
and
adc
dec
push
ja
rolb
addr16
notb
pop
jne
lret
fldenv
insb
ficomps
fucomp
inc
insl
ret
into
mov
xlat
clc
mov
pop
es
mov
cmp
or
push
xchg
pop
insl
ret
pusha
cmp
adc
in
cmp
scas
jnp
test
scas
cwtl
imul
imull
enter
fmul
sbb
cld
lahf
mov
cs
adc
cmp
xor
and
ds
rorb
lock
icebp
adc
xchg
dec
ja
xor
and
out
in
mov
xchg
shr
mov
mov
xor
cli
shrb
jp
sahf
mov
test
inc
loopne
aaa
adc
xchg
xchg
sarb
xor
ljmp
insl
rcr
jno
mov
mov
mov
and
les
lds
sub
dec
ss
push
adcl
data16
fidivl
enter
into
sahf
lret
or
sub
mov
jne
xor
je
and
mov
mov
inc
mov
adc
jecxz
adc
add
sbb
lods
aam
aas
mov
aas
xchg
cmp
dec
pushf
shll
hlt
cmc
in
push
jnp
jge
fidivrl
cmc
rcll
adc
jmp
das
push
insl
jl
dec
mov
xor
popa
xor
frstor
pop
mov
in
push
movsb
das
divb
xorl
ret
mov
fxch
inc
cmp
gs
xchg
into
pop
fisubrl
adc
fadd
jmp
dec
push
loope
xor
cmp
fnstenv
pop
and
inc
inc
shrb
xlat
mov
jmp
test
jl
lret
pop
push
int3
jno
lea
cwtl
je
push
mov
je
xchg
scas
jo
test
adc
push
movsl
dec
sub
sar
xor
jne
sub
es
and
mov
push
mov
push
movsl
push
mov
mov
adc
es
lea
arpl
test
insb
fstps
xor
sbb
inc
cli
xor
add
mov
nop
scas
add
imul
inc
movsl
xor
addr16
cmc
sar
cmpsb
cmp
inc
shr
into
sub
rcrb
inc
shrb
lods
iret
mov
add
popf
adc
cwtl
or
add
push
xchg
scas
addr16
xchg
mov
lahf
sti
sbb
xor
out
stc
or
mov
jns
inc
push
xchg
test
bound
loop
ds
shll
add
or
ds
repnz
push
jle
mov
pop
mov
aas
imul
outsb
mov
dec
push
mov
mov
push
dec
and
stos
in
pop
xorl
xchg
xor
adc
fidivs
not
xchg
fldt
scas
scas
inc
ret
pop
movsl
adc
fnstsw
and
mov
jo
mov
xchg
add
mov
adc
icebp
push
sbb
movsl
hlt
add
jg
imul
sti
je
movsb
and
sub
pop
jg
mov
sbb
lods
add
cwtl
test
pop
clc
push
pop
mov
into
xor
sub
cli
adc
mov
pop
push
loopne
xchg
xchg
or
mov
mov
fcompl
dec
pop
add
and
mov
out
es
mov
xor
or
mov
xchg
or
rcrl
lds
inc
dec
popa
imulb
add
lods
xchg
cli
out
and
dec
or
aam
pop
sar
cld
inc
mov
and
pop
sub
push
push
xchg
xchg
cmpsl
ret
adc
push
and
or
in
mov
xchg
out
xchg
xor
jmp
xchg
fbld
push
jl
mov
clc
sti
aam
fs
inc
push
aas
jbe
add
lds
ja
lcall
inc
mov
adc
in
aas
shll
into
mov
push
aad
iret
mov
cmc
test
sarl
inc
cmpb
mov
pop
iret
sahf
in
arpl
out
fs
xor
add
cmp
lret
jge
cmpsb
dec
sub
push
xor
lret
fadd
cmpl
sti
lods
lahf
sub
push
orl
xor
in
hlt
imul
add
fwait
or
mov
mov
inc
gs
adc
fnsave
icebp
pop
loope
cwtl
xchg
push
insl
pop
repz
jns
ljmp
xlat
cmp
call
dec
sub
and
into
sub
insb
mov
cs
orl
mov
cmp
xor
shl
pop
aaa
jecxz
sub
cmp
repnz
xor
mov
add
xchg
sarl
mov
mov
push
jbe
cld
mov
popa
xchg
mov
adc
popf
mov
adc
aas
jno
pop
sti
and
pushf
ja
push
xorl
ljmp
xchg
jbe
cmc
cmc
mov
sbb
add
push
inc
ret
icebp
pop
cmpsb
push
cmp
cltd
fsubrs
and
aad
divb
mov
cmp
cli
dec
cs
mov
popf
lcall
pop
push
xchg
add
insb
repnz
push
in
arpl
cmp
aad
lahf
inc
jae
sub
inc
jne
sub
or
aas
pop
inc
outsb
add
cs
jmp
ds
push
jp
into
inc
scas
sub
scas
bound
inc
xchg
leave
shl
sarb
push
inc
jmp
inc
fsts
sub
cmp
jno
mov
mov
and
popa
scas
mov
mov
mov
push
pop
mov
inc
mov
or
mov
add
iret
insb
inc
push
push
je
mov
in
gs
sub
clc
mov
pusha
inc
push
fsubrl
inc
and
pop
pop
scas
or
or
dec
and
mov
pop
sub
xor
or
or
fisttpll
sbb
aam
stc
mov
repz
xor
xchg
inc
xchg
ret
jp
push
mov
add
lods
icebp
fnstcw
stos
pusha
push
ljmp
repz
push
popf
std
sub
cli
inc
pop
push
cmp
and
dec
fs
jp
xor
cmpsb
test
cmpb
mov
mov
filds
push
out
adc
icebp
lock
std
and
iret
fcmovnbe
cld
cmp
iret
xor
and
xchg
mov
sahf
push
ja
lret
mov
test
cli
mov
aas
fwait
arpl
add
xchg
and
popf
sahf
sub
ret
clc
sbb
enter
push
leave
xor
jne
repnz
cmpsl
jnp
xorl
cmp
mov
jno
inc
inc
mulb
mov
leave
aam
jp
psubd
stc
movsl
in
dec
pop
out
mov
inc
or
movsl
push
pusha
cltd
add
jnp
imul
jle
or
mov
nop
pop
xor
daa
push
add
push
push
arpl
cmp
cmp
stc
dec
sbb
adc
sub
testl
sahf
into
lea
mov
dec
dec
fnstcw
xchg
out
std
add
and
sub
es
mov
adc
mov
push
lahf
sub
loop
xchg
add
gs
hlt
jp
addr16
ret
xchg
dec
test
sub
jp
cmp
repz
divb
movsl
cmp
int
hlt
fwait
pop
xchg
int3
or
or
or
das
xchg
es
ja
lods
push
push
faddl
enter
xchg
mov
arpl
mov
imul
testl
pop
push
jno
sbb
jge
out
inc
or
mov
call
and
out
cmp
adc
addr16
push
cmp
jg
sarl
sub
push
lods
outsl
loop
or
aam
xchg
mov
imul
out
and
xor
insb
xchg
das
out
push
push
mov
pop
aad
pushf
lods
int3
les
test
mov
ds
push
int
and
cmpsl
pop
out
jp
dec
xor
ficoml
std
call
lret
inc
ficoms
add
aaa
jae
sysret
cltd
std
inc
jae
pop
das
das
test
push
loop
push
sbb
pop
repz
imul
cmp
add
push
dec
aaa
lcall
out
sub
jmp
lret
xor
dec
insb
sbb
push
in
daa
scas
or
out
lret
lods
push
scas
ds
bound
cwtl
shl
mov
add
xchg
and
cmp
ret
aam
outsb
mov
adc
insb
stc
movsb
gs
sbb
add
xlat
push
lahf
add
xchg
outsl
movsb
inc
sub
iret
lahf
lcall
push
ret
pusha
enter
xor
add
lock
std
mov
jecxz
cld
jne
sarl
call
sub
movsb
lcall
fisttpll
dec
loopne
jg
or
jb
adc
mov
jge
pop
lahf
dec
mov
sbb
xor
std
fldl
lea
push
ficoms
enter
jb
push
cmp
xor
arpl
movsb
mov
sbb
inc
push
das
out
clc
adc
push
push
jg
les
push
in
dec
jge
je
dec
inc
push
out
lcall
mov
daa
outsl
stos
jae
mov
hlt
nop
mov
xchg
scas
ss
in
fwait
lea
out
lods
lret
mov
mov
sbb
call
adc
xchg
sub
sbb
pop
in
mov
jns
notb
xor
xor
test
lds
add
dec
mov
in
insb
push
sub
mov
mov
cs
inc
cs
pop
jmp
je
out
dec
push
rolb
scas
xorb
cmp
add
push
push
rorb
dec
js
jecxz
orb
out
mov
adc
adc
cmp
and
repnz
and
xchg
ret
adc
and
rorb
mov
jnp
enter
push
jp
loop
mov
mov
mov
sub
sub
loop
mov
fcoml
dec
or
pop
xchg
cmpsb
ja
push
adc
out
lods
mov
adc
or
aad
inc
repnz
icebp
call
iret
xchg
adc
dec
aaa
dec
cmp
add
add
hlt
popa
stc
xchg
ss
jns
je
dec
fldlg2
mov
int
paddusw
adc
pop
xchg
add
mov
cwtl
lds
push
mov
fists
call
outsl
inc
inc
pop
dec
add
mov
xchg
sub
sar
sub
or
jb
cli
enter
fwait
dec
mov
lret
pop
repz
or
imul
xor
or
pop
sbb
test
jb
push
push
mov
or
je
fdivrl
push
int3
dec
mov
aam
jp
adc
dec
hlt
dec
rclb
pop
xchg
rorl
jo
inc
push
adc
sub
fisttps
in
mov
dec
lahf
loop
ret
inc
aad
add
pushf
mov
lahf
or
fists
lcall
lahf
mov
push
ret
ficomps
sub
pop
shrb
ja
jecxz
mov
test
pusha
das
cmpsb
push
mov
lea
and
dec
int
mov
mov
andl
outsl
sarb
mov
mov
mov
pop
lret
int
popf
sub
inc
sahf
pop
test
add
cmp
xchg
shr
sarb
icebp
xchg
jae
popa
ret
int
pop
push
testb
daa
and
cmc
push
inc
inc
sbb
jle
stos
out
movsl
jo
cmp
movsb
push
and
xchg
jg
and
mov
jbe
add
add
adc
out
xchg
enter
jae
mov
les
test
inc
xchg
in
mov
add
leave
out
mov
sub
jbe
pop
pushf
pushf
lcall
roll
jne
int
mov
fstp
and
test
push
shl
mov
repz
mov
fldl
loope
cli
leave
sbb
test
andb
mov
test
inc
hlt
decb
hlt
xor
dec
cmp
andb
imul
mov
sti
push
ja
lcall
repz
aas
or
jbe
iret
sti
cld
cmc
scas
and
inc
jge
repnz
daa
pop
out
push
addr16
push
xchg
adc
dec
adc
lods
push
dec
pop
xor
or
fdivrl
dec
ja
filds
ljmp
test
stc
test
cmp
shrl
pop
mov
je
fdivs
xor
aas
shlb
pop
insl
loopne
jns
pop
icebp
ss
push
sub
cmp
inc
mov
sub
adc
lahf
xor
sbb
adc
test
or
imull
dec
xlat
or
xor
outsb
dec
sub
mov
lods
jg
outsl
in
xchg
pop
push
adc
and
and
aas
mov
inc
inc
movsl
jl
mov
push
sub
mov
sbb
loope
lahf
add
pop
test
fwait
sbb
ret
std
lahf
and
cmp
push
jae
mov
push
xorb
adc
xchg
test
cmp
outsl
dec
jns
jecxz
xorb
in
xor
jns
in
mov
loopne
test
rolb
dec
xchg
and
bound
inc
jg
inc
cld
push
out
sbb
inc
in
add
adc
xor
inc
rol
jae
pop
cmp
pushf
pop
xchg
divb
out
loopne
pop
pop
imul
dec
adc
out
aaa
xchg
and
icebp
xchg
outsb
ja
adc
push
pop
test
fisubrs
or
and
fcomps
lahf
cmp
fcomi
cmp
sbb
out
mov
fldenv
rcrb
fistpll
xorb
imul
in
and
dec
mov
add
push
add
stos
out
or
leave
dec
mov
fstps
xor
mov
rcl
test
flds
jg
mov
out
push
int3
repz
adc
push
cmp
out
mov
mov
int
aas
das
jg
test
mov
aas
test
test
fildll
jmp
aas
pop
jnp
mov
test
cwtl
mov
or
fs
addr16
test
mov
xchg
inc
jno
enter
imull
xchg
inc
lahf
out
in
xchg
js
aad
pop
scas
insb
cvttps2pi
ljmp
jb
pop
ds
ds
add
xor
push
pop
xchg
xchg
mov
shlb
mov
push
jno
sub
inc
push
je
pop
in
out
push
arpl
in
aam
dec
fsubrs
popa
mov
cli
clc
ret
int
addb
push
ret
pop
cmp
sub
mov
mov
pop
dec
xlat
mov
js
popa
ds
jbe
cmpsl
call
or
xchg
cmpl
call
push
popl
mov
aaa
ljmp
mov
pop
push
sarl
dec
or
in
lods
pop
dec
iret
mov
mov
fwait
adc
cmpl
sarb
mov
sub
pop
cwtl
das
mov
inc
mov
out
out
sti
subb
inc
xchg
inc
add
movsl
mov
adc
pop
mov
call
mov
mov
aaa
sub
cmc
insl
imulb
loope
push
mov
sub
or
vmovhpd
loop
jae
mov
lahf
mov
adc
iret
daa
wbinvd
fwait
xor
shll
fdivr
cli
sub
and
jge
movl
push
test
sbb
call
jne
movsl
rclb
and
xor
sub
and
je
sub
fdivp
mov
sbb
push
frstor
mov
fimull
jmp
pop
pop
fldt
in
outsb
inc
loopne
xchg
ds
les
fiadds
mov
or
push
push
mov
xchg
sbb
push
xor
xor
adc
mov
and
xchg
pop
xchg
adc
jecxz
xchg
mov
mov
adc
or
and
mov
test
fists
and
mov
int
aad
sbb
test
push
xor
fwait
mov
add
cli
in
pop
je
out
cmp
stc
sbb
push
xchg
les
jb
enter
sub
lret
xlat
inc
jbe
idiv
fwait
xchg
ds
inc
dec
mov
cwtl
fiadds
gs
jge
incb
xchg
or
mov
lock
pop
loop
cmc
int3
push
bound
shll
insb
push
cmp
mov
shlb
push
pop
xlat
shlb
mov
xor
aad
clc
sbb
jo
dec
jecxz
pop
repnz
cmp
pop
shl
ret
and
mov
rcr
jno
inc
xchg
mov
hlt
add
mov
push
sbb
test
mov
insl
xlat
cli
mov
jg
test
xor
dec
jmp
call
fstp
enter
push
fnstsw
aas
cmp
jge
adc
pop
and
pusha
jmp
pop
test
xor
xchg
rsm
xor
shll
fistps
or
icebp
int3
stc
stc
add
cld
pop
xlat
mov
dec
add
jno
jmp
jecxz
into
sbb
sub
mov
mov
mov
daa
pop
adc
out
cmp
add
sub
push
popf
js
pop
sti
pop
xor
aaa
mov
add
xor
pop
jne
push
pop
imul
jmp
or
bound
mov
sarb
jecxz
adc
cld
pop
loopne
xchg
add
rcll
in
cmp
sbb
jae
push
xchg
sub
arpl
hlt
fistpl
mov
jmp
sub
jl
xchg
xchg
and
je
testl
add
push
xlat
inc
pushf
jg
or
fs
pop
xor
fstl
mov
rolb
jp
mov
add
push
pop
sbb
idiv
negl
pop
filds
and
fidivs
lods
add
add
outsl
nop
jb
test
jge
jg
dec
shl
sub
dec
lea
stc
xor
add
outsl
adc
mov
xchg
mov
or
ret
mov
lds
inc
sbb
cld
int
jp
imul
aas
and
push
fsubrl
rcrl
mov
add
cmpsl
and
out
push
outsb
out
mov
shll
pop
sub
mov
dec
cs
cld
dec
aas
popf
or
popf
cli
stos
mov
les
mov
sub
dec
add
cmpsl
xor
dec
add
xchg
or
dec
push
sahf
push
jnp
je
jmp
pop
sub
sub
icebp
ds
int3
shr
fldcw
dec
setge
bt
ja
lods
jb
mov
sbb
cmp
cmp
inc
xchg
and
or
js
mov
cmp
and
popf
jbe
scas
mov
lcall
jge
leave
movsb
popf
or
cmp
faddp
mov
or
hlt
ja
mov
lcall
xchg
clc
xorl
mov
lods
sbb
push
pop
xchg
jo
inc
pop
out
mov
leave
loopne
in
jg
ds
mov
pop
or
mov
rol
mov
ljmp
jo
cmpsl
movsl
test
sti
add
jnp
enter
sahf
iret
and
push
lock
pop
cmpsl
jb
jl
or
negb
add
mov
adc
xor
and
mov
data16
add
fstl
push
push
stc
inc
mov
std
jmp
pushl
mov
push
mov
xchg
testb
and
pop
mov
stc
fsubs
sub
or
cltd
je
out
in
ljmp
xor
xchg
dec
jbe
adcb
pop
clc
mov
sub
lahf
dec
inc
jae
in
add
repnz
adc
movsb
cmp
arpl
add
and
adc
dec
pop
scas
xor
mov
mov
div
sub
inc
leave
rcrb
jns
fldcw
push
adc
sub
push
nop
and
cmp
mov
add
ja
repnz
insl
not
rcrb
xor
cmp
mov
add
mov
imul
sarl
jo
push
mov
push
out
xchg
sub
data16
lea
mov
and
and
bound
adc
jp
lods
ds
jle
jbe
add
xchg
pushl
xchg
pop
lea
pop
rclb
sub
sub
jb
adc
pop
fcomps
data16
ja
cs
lods
xorl
subl
adc
xor
dec
subb
in
push
pop
aad
jb
addr16
sbb
push
xor
sbb
sti
push
fisttps
cli
test
rolb
push
subb
cwtl
sbb
lods
adc
adcl
out
jecxz
rep
jne
mov
std
fwait
test
rcrb
inc
cmp
jo
mov
repnz
ja
test
xchg
loopne
inc
cmpsl
scas
xchg
scas
movsb
test
addr16
shl
test
xchg
mov
sub
and
jecxz
adc
xor
aaa
push
popf
cmp
xor
jae
dec
fcomi
or
cmp
sub
jne
fistpl
sbb
mov
fwait
in
cmp
mov
pop
roll
or
cmpb
dec
insl
out
loop
xor
and
shlb
add
ss
push
rorb
pop
fisubs
stos
cmc
pushf
sub
cmpsb
cmp
mov
mov
inc
pop
mov
xchg
pop
lods
pusha
je
or
cwtl
test
pusha
xor
in
insl
cwtl
mul
cmp
mov
and
inc
and
add
cld
mov
jnp
ror
ljmp
pop
clc
mov
jae
jp
dec
addl
jnp
icebp
and
xor
nop
dec
sbb
mov
fcmovu
sbb
pop
xchg
pop
les
sub
or
std
das
and
cmp
add
int3
jbe
in
mulb
mov
lcall
loope
in
xchg
push
inc
out
movsb
sahf
loope
cmp
push
mov
out
cmp
and
pop
outsl
jp
inc
loop
xor
loopne
adc
push
and
std
dec
in
xor
xchg
cld
aam
and
jle
or
pop
push
fs
push
dec
cmp
je
into
pop
bswap
repz
fisubl
cli
xchg
lds
into
sub
std
jae
push
adc
add
movsb
nop
fimuls
cmp
stos
or
and
pop
ficomps
arpl
lock
or
ds
popf
and
and
daa
adc
or
or
pop
sbb
lods
pop
jmp
mov
xchg
insl
ret
jmp
sbb
fstpt
inc
stc
add
xchg
add
stc
lret
inc
push
int3
aaa
ret
add
inc
lock
jns
or
xlat
sub
cmpsb
jmp
add
adc
mov
lcallw
cmp
mov
cltd
pop
rorl
stos
fcompl
leave
mov
dec
and
je
jo
roll
and
push
stc
push
dec
mov
mov
addb
andb
inc
je
loopne
sub
cmp
adc
pop
lds
dec
mov
loop
scas
cmpsb
mov
cltd
sub
dec
adc
not
jnp
ret
mov
mov
mov
aam
or
pop
pop
cmp
ficoml
into
push
scas
and
loopne
std
push
arpl
jno
aaa
mov
daa
aad
ljmp
dec
jns
sbb
in
xchg
icebp
aam
and
fucomip
adc
imul
ja
nop
jmp
mov
pop
movsl
adc
pop
mov
and
sub
fwait
gs
mov
sbb
mov
nop
adc
mov
in
jg
inc
sub
jle
add
jle
sub
leave
cmpsl
cmp
sbb
fsubl
cld
aad
lds
jl
push
xchg
in
pop
lret
dec
out
stos
mov
pop
pusha
dec
and
mov
fildll
mov
fsubl
fsubr
cmpsl
sub
mov
xchg
lcall
ljmp
adc
inc
mov
ficompl
jnp
sub
popf
stc
sti
fcompl
lcall
pop
fwait
pop
stc
loope
xchg
or
lods
sbb
mov
mov
inc
xchg
shll
jb
jmp
out
out
inc
fcmovne
gs
adc
and
adc
test
jle
adc
popf
jecxz
dec
es
adc
push
xor
es
push
leave
add
and
jge
dec
test
mov
scas
cmp
les
mov
inc
aam
xchg
cmpsb
xchg
and
mov
jbe
in
lret
pushf
xchg
mov
mov
aam
mov
mov
fucomi
sub
test
dec
cmc
mov
int3
sub
fcompl
hlt
scas
xchg
xor
push
jp
roll
lock
sub
xchg
sub
inc
or
dec
ja
enter
push
or
popf
adc
mov
dec
jne
lcall
push
mov
int
xchg
idivl
mov
lcall
dec
adc
outsb
cld
enter
cwtl
adc
aas
xor
inc
mov
xchg
pusha
add
insl
lods
cmpsl
or
push
daa
inc
dec
mov
adcb
icebp
es
inc
cld
test
jb
paddsw
js
adc
js
xchg
inc
jl
adc
xchg
addr16
inc
mov
ret
std
js
and
ss
je
sub
out
jns
cmpsb
shlb
sub
mul
inc
les
lock
mov
push
jge
out
sbb
pusha
mov
pop
mov
mov
jp
push
dec
loop
ret
or
pop
mov
mov
test
mov
mov
jo
add
cmpsl
push
into
rcll
cmpsb
xchg
push
out
imul
sub
jae
jle
cmc
sbb
rorl
imul
jmp
out
jmp
xchg
sub
sbb
jg,pn
and
xor
in
mov
and
mov
inc
sahf
leave
xor
ja
add
or
jnp
or
and
stos
jle
out
cmp
aad
jge
pusha
jno
inc
inc
cmp
jns
add
fwait
adc
xor
and
scas
and
stos
outsl
enter
and
push
adc
lods
int3
dec
nop
popf
aam
enter
cmp
scas
push
add
lds
mov
push
pop
std
mov
xlat
xchg
inc
sahf
sti
mov
lods
inc
ret
imul
pusha
xchg
sbb
xchg
pop
idiv
ss
sbb
push
shrl
rorb
sub
std
cli
mov
fwait
mov
cld
pusha
arpl
fadd
cmp
lods
ror
pop
xchg
mov
or
xor
dec
mov
cmp
inc
push
xchg
rcrl
iret
in
mov
ss
ds
cmp
or
das
or
sbb
fwait
push
cli
mov
jl
jge
les
int
les
mov
ja
pop
outsl
pop
xlat
and
lret
repz
movsb
fdivrp
loop
pop
jae
shlb
sbbb
mov
test
lcall
sub
rorl
stos
inc
icebp
mov
and
adc
jnp
orb
lods
dec
pushf
push
inc
mov
xor
sub
es
or
stos
dec
add
sbb
sub
mov
mov
das
aaa
repz
lock
jle
and
daa
incb
jp
xchg
adc
jmp
xchg
lods
xor
jae
mov
or
fisubs
push
lret
add
fidivrl
adc
dec
addb
or
or
xor
roll
shrb
in
jmp
adc
xchg
icebp
cmp
pop
in
xchg
inc
push
sahf
inc
cmpb
or
scas
pusha
scas
out
lock
sahf
push
test
testl
mov
movsl
jbe
cli
xchg
cmpb
pop
mov
aas
int3
sbb
xchg
cli
call
mov
add
adc
jmp
dec
mov
stos
es
dec
dec
inc
ss
fxch
mov
ja
xor
pop
pop
mov
dec
jp
jno
add
or
xchg
jb
mov
push
mov
adc
jle
mov
imul
xchg
xchg
jnp
scas
inc
scas
dec
cmpsl
xor
pop
inc
popf
mov
fildll
cmc
xchg
in
mov
repz
rcrb
mov
scas
inc
xchg
jb
int
xchg
pop
je
arpl
sbb
cli
arpl
cld
in
addr16
jg
out
or
jl
lret
shl
mov
sub
and
pop
pop
aas
repnz
adcl
rorl
gs
dec
mov
push
and
push
push
in
cmp
nop
pop
je
cmpb
fcmovne
mov
or
arpl
lcall
and
movsb
popf
mov
or
stos
faddl
mov
fldt
sub
je
pop
test
inc
sub
add
sbb
sub
cli
rcll
jae
lcall
outsb
hlt
adc
pop
push
sti
jne
inc
push
aas
out
test
shlb
or
jno
mov
mov
pop
repz
int
add
imul
fistpll
add
js
notb
sbb
or
inc
pop
lods
jb
mov
push
dec
and
inc
nop
inc
cltd
inc
adc
les
add
mov
jge
je
mov
das
fdiv
gs
adc
xchg
out
pushf
sub
aaa
or
dec
ret
out
push
push
dec
imul
inc
xchg
inc
push
iret
outsb
sbb
dec
fisttpl
pop
add
out
rorb
mov
sub
data16
fwait
outsl
push
jno
pop
xchg
xor
push
push
ror
bound
repnz
fdivrp
pop
mov
sbb
mov
rcl
jae
sub
ds
inc
imul
push
mov
mov
popf
ss
int3
inc
fimuls
int
and
test
add
ss
repnz
pop
sub
pop
mov
xchg
fisubrl
jg
lret
xchg
insb
enter
mov
inc
ja
test
fs
sub
xlat
int3
frndint
clc
jmp
xchg
or
lock
xchg
mov
or
insl
xchg
lret
aad
adc
mov
mov
mov
lahf
push
xchg
add
lret
inc
cmc
stc
iret
addb
mov
stos
push
cmp
jg
dec
cwtl
sti
mov
mov
mov
xchg
jb
inc
mov
jb
nop
sti
mov
xor
pop
inc
xchg
mov
cmpl
sub
clc
cmp
add
in
add
mov
push
push
push
cmp
or
and
out
clc
inc
push
inc
push
jnp
mov
xchg
xchg
lds
clc
shlb
clc
mov
fcoml
mov
sub
into
ret
push
lcall
push
sub
pop
sarl
push
imul
push
mov
mov
cmp
es
cld
cmc
inc
fadds
lods
xor
sub
cmp
ss
push
mov
adc
fucomp
rcrl
pop
adc
rcr
ficoms
not
enter
xchg
ljmp
pop
fimull
lods
cltd
sub
into
pinsrw
mov
mov
inc
aas
xchg
arpl
jnp
cmc
dec
stos
jns
jp
add
adc
inc
jne
js
mov
std
aam
nop
add
test
sub
into
xchg
stos
mov
mov
push
dec
cs
mov
int
mov
les
mov
push
pop
icebp
ret
pop
pop
adc
fstl
outsb
adc
jecxz
lcall
adc
xor
out
jae
lea
arpl
imul
xchg
arpl
fstl
test
add
sub
xor
pop
inc
lahf
aam
pop
push
add
gs
mov
test
imul
mov
jb
cmpsl
nop
mov
scas
fstpt
lahf
mov
arpl
xor
ds
pop
jmp
cmp
cltd
shlb
sub
es
icebp
or
xlat
loopne
cmp
inc
mov
and
add
add
insb
and
inc
add
sbb
sub
sub
mov
sbb
test
add
jl
push
mov
inc
insl
sbb
jl
pop
aas
mov
jne
mov
push
enter
shl
mov
arpl
adc
dec
les
push
or
orl
sbb
js
pop
nop
jbe
push
movsl
inc
xor
add
enter
into
pop
cli
inc
pop
sub
clc
addr16
stos
repz
xor
popf
clc
push
dec
outsl
imul
scas
int
push
push
push
adc
sbb
or
dec
inc
cld
insl
push
cmp
aam
outsl
fs
xchg
dec
dec
addr16
dec
jmp
fbld
popf
aaa
decb
lahf
lret
cmp
lock
sti
mov
std
loope
adc
cld
pop
sbb
push
enter
out
pop
cmpsb
cwtl
test
cmp
cwtl
stos
cmovl
mov
pop
mov
cmp
sub
cwtl
je
mov
rcll
shll
mov
xlat
loopne
pop
sub
jbe
sti
movb
pop
push
jp
test
imul
add
mov
push
dec
ret
mov
adcl
aam
sub
fprem1
test
push
loopne
repnz
jnp
loopne
xchg
in
jo
out
pop
dec
vmwrite
lahf
stc
sti
jns
test
lea
pushf
repz
push
sbb
test
gs
in
pop
arpl
nop
fsts
pop
mov
pop
in
mov
lret
push
dec
jns
scas
int3
fs
daa
xor
test
mov
add
jmp
movsb
mov
sarb
mov
dec
ljmp
lea
push
jmp
cli
xchg
test
add
push
cmp
push
xchg
repnz
adc
mov
xchg
aad
sbb
subb
push
and
pop
test
daa
adc
inc
add
rolb
pop
cltd
in
cmp
repnz
fistps
sti
and
pop
and
stos
sbb
inc
cmp
into
gs
insb
mov
flds
and
push
sti
lret
stos
mov
shr
fistpll
xchg
inc
jmp
adc
mov
sti
push
stc
adc
repnz
or
jo
cmp
ss
in
inc
ljmp
scas
and
mov
das
mov
jns
mov
sbb
dec
jbe
in
pop
lea
or
add
sub
fidivrl
fstps
dec
je
shufps
pop
push
cmp
seta
mov
xchg
cli
or
sbb
and
mov
shr
repz
xchg
xchg
dec
mov
push
adc
and
mov
mov
push
mov
push
xchg
scas
iret
cmpsb
dec
scas
or
aad
or
push
cmp
ds
jp
push
dec
js
adc
jmp
dec
push
xor
das
out
cli
nop
lcall
sahf
jbe
scas
or
int3
fdivs
dec
call
adc
pop
push
in
fucomi
nop
lret
and
in
xor
pop
ds
jns
rcrb
push
adc
int
dec
pop
or
inc
loop
sub
ret
jb
jno,pt
push
pop
dec
and
aaa
outsl
test
mov
cmpsl
fs
jg
pop
je
shll
mov
mov
mov
scas
adc
dec
adc
mov
sub
jb
jnp
imul
js
movsl
mov
cmp
push
imul
ds
push
lods
cmpsb
lods
and
mov
jnp,pn
in
xchg
mov
cld
nop
push
sbb
adc
pop
or
dec
pop
mov
ljmp
icebp
fwait
inc
xchg
lods
pop
and
pop
bound
arpl
cli
dec
fdivrs
sti
loop
sahf
add
fistpl
cmp
and
cmp
loop
fidivl
sbb
mov
inc
pop
out
repz
rcpps
ds
std
insl
push
in
repz
mov
sbb
pop
jo
jb
push
sub
mov
pop
mov
jno
mov
xor
stos
shrb
popf
pop
sub
jne
cmp
mov
les
xchg
mov
add
pop
xor
cmc
leave
fidivrs
mov
xor
std
sbb
icebp
sub
push
test
jne
repz
push
jns
jns
lret
bound
and
movsl
pop
push
das
dec
dec
stos
nop
cmc
or
clc
jbe
lret
mov
and
mov
xchg
pop
add
clc
mov
fidivs
pusha
bound
xchg
lret
outsl
insb
xchg
xchg
aad
loopne
ds
lcall
adc
leave
cwtl
jbe
inc
adc
mov
rep
test
push
loope
cli
fsubl
xchg
jecxz
out
test
push
mov
nop
xor
das
out
mov
cmpl
outsl
xlat
data16
mov
push
dec
fs
imul
jb
xlat
lret
lock
ljmp
scas
mov
xor
in
mov
inc
cmp
push
aas
xor
xor
push
inc
mov
xchg
jl
xor
test
lock
sbb
mov
cmpsl
je
jle
shlb
fistps
mov
cmp
and
jmp
push
fiadds
add
push
rcrb
repnz
aaa
add
lods
adc
push
pop
dec
jns
fnstcw
push
mov
ret
je
clc
sub
nop
push
clc
push
scas
mov
xor
cmp
push
std
fistps
push
add
std
jb
ds
mov
out
fcmovne
add
stos
dec
pop
or
cmc
fisttpl
cli
add
imul
mov
sahf
icebp
and
lods
sbb
std
push
aam
mov
mov
insl
add
movsl
shrb
cmpsb
cmp
xor
push
xchg
jnp
repz
andl
pop
cmp
stos
addps
push
pop
lret
popl
std
std
mov
fucomip
or
xchg
ja
aad
test
jno
sub
xchg
xchg
or
cwtl
aas
pop
je
add
movsl
out
xchg
repz
and
adc
jle
sbbl
xor
mov
sbbl
xchg
aaa
fdivrl
sbb
xor
cmp
or
or
jecxz
sbb
xchg
and
mov
mov
ret
mov
rol
jle
sbb
inc
pop
or
stc
test
xorb
add
pushf
fs
sbb
sub
sbb
jg
jbe
cmp
pop
cwtl
scas
xlat
enter
daa
cmp
dec
inc
outsl
cmp
cmp
xor
sbbb
xor
pushf
fildll
push
mov
imul
mov
push
and
or
popa
fnstenv
mov
inc
push
orb
sahf
xchg
mov
insb
je
fisttps
js
in
or
push
bound
cli
xchg
mov
jb
jecxz
pop
add
adc
test
cmc
inc
push
stos
loop
scas
push
clc
arpl
mov
filds
addr16
out
mov
push
lret
in
xchg
adc
and
dec
add
adc
addr16
lea
dec
or
adc
aad
or
fdivp
sti
ret
mov
adc
sub
add
adc
lea
sbb
dec
lds
mov
arpl
cmp
imul
cld
or
aas
adc
and
jl
dec
xor
mov
mov
aaa
xchg
cmp
mov
add
jnp
std
popf
enter
call
insb
mov
mov
aas
iret
jne
jge
push
adc
xchg
mov
or
cmp
ror
pop
ret
inc
ljmp
cmp
push
sbb
mov
fidivl
xchg
lret
sahf
inc
gs
outsl
sbb
bound
mov
xlat
in
mov
sarb
loopne
pcmpeqw
pop
or
pop
xor
xchg
lods
xchg
cli
ds
mov
gs
daa
jl
cwtl
adc
push
dec
inc
inc
fwait
out
xchg
and
mov
add
adc
pop
es
cwtl
mov
ljmp
jg
and
loop
pop
test
dec
xchg
test
daa
xor
inc
and
mov
icebp
cmp
mov
pop
mov
mov
in
jnp
out
or
jb
dec
jo
xchg
sbb
add
jb
adc
cmp
cmp
adc
int3
cmpsl
xor
shlb
insb
les
addl
dec
lret
ljmp
pop
into
push
jo
mov
js
mov
jb
pop
testb
pop
imul
adc
push
je
jb
dec
cmp
fidivrl
stc
cmp
jmp
out
arpl
cmp
arpl
je
sub
stos
push
pop
into
mov
scas
in
xchg
in
repz
cmp
sub
cmpsl
pop
sbb
test
out
add
pop
mov
ret
jb
movsb
xlat
jne
mov
fs
and
mov
stc
dec
sub
inc
cld
cmpsl
push
adc
mov
xchg
dec
pusha
je
dec
out
sbb
out
sbb
push
pop
or
xchg
pop
dec
jae
dec
sub
jl
pop
outsl
cld
aas
and
mov
gs
enter
push
add
imul
clc
mov
xor
mov
mov
cmp
cmc
gs
je
pushf
push
ljmp
icebp
push
leave
adc
lret
or
out
or
fists
insb
jns
sti
add
inc
inc
call
idiv
pop
aam
rorl
add
ds
adc
adc
xchg
clc
add
ret
sub
cmp
shll
mov
fdivp
jg
pop
jne
stos
mov
mov
lods
test
movsl
jmp
xor
add
add
inc
sahf
jae
mov
dec
sbb
mov
or
pop
into
adc
popa
sub
dec
adc
and
mov
xlat
das
lea
xor
mov
stos
add
and
mov
pop
or
in
addr16
cmp
and
aad
xchg
mov
insb
push
add
clc
jbe
movb
sub
push
clc
cmpsb
pushf
fiadds
aaa
ss
xor
pop
add
imul
sbb
push
or
icebp
mov
and
clc
sbb
mov
push
xchg
sub
sub
pop
sub
dec
xchg
xchg
push
stc
sub
dec
xor
ja
lret
data16
fistl
jbe
add
adc
cmpb
imul
push
mov
stos
jb
xchg
cmpsb
inc
add
push
aaa
push
cmpsb
sbb
jne
icebp
aam
ds
outsb
and
push
inc
frstor
inc
push
lods
pushf
int
popf
shll
xor
mov
adc
xchg
filds
cmp
xorb
aaa
jne
rclb
mov
or
lea
jmp
mov
inc
or
sub
cltd
insl
lock
and
push
ljmp
jmp
jo
mov
mov
ret
addr16
enter
push
or
shrl
popf
jecxz
je
and
loop
stos
pop
ret
and
inc
mov
push
push
dec
push
mov
outsb
out
sbb
aam
stc
loop
cld
and
repnz
ds
jle
lods
sbb
mov
xchg
push
xchg
cmp
mov
and
dec
push
xor
aad
mov
push
xchg
std
push
aad
inc
mov
lods
sub
loope
pop
push
outsb
hlt
cmp
push
mov
das
mov
out
mov
cmp
pop
add
adc
leave
lods
xchg
lds
fs
and
lock
mov
popa
lock
jg
adc
add
sbb
sub
pop
xor
and
inc
push
sti
mov
aam
mov
mov
cld
mov
add
push
inc
clc
shlb
xchg
add
dec
mov
sbb
push
mov
xchg
jnp
adc
sti
xor
stos
jecxz
out
mov
ret
scas
push
out
mov
mov
inc
cmp
push
jne
ss
mov
data16
punpcklbw
addr16
sarb
xchg
js
lds
out
cmp
cli
xchg
popa
scas
imul
xlat
pop
mov
sbb
out
fnsave
pusha
out
mov
or
or
cmp
daa
dec
jns
aad
call
into
pushf
jno
jae
lock
sarl
test
mov
fidivrs
repz
out
stos
out
mov
ficomps
iret
jnp
in
xchg
pushf
popf
fiadds
je
sbb
mov
push
test
xchg
lock
lret
in
addb
lret
insl
pushf
repz
cmc
aaa
xlat
add
inc
and
in
mov
xchg
stos
push
mov
gs
inc
mov
test
dec
fwait
cmp
adc
imul
fidivs
lret
mov
insl
ss
xor
jl
mov
adc
cmp
movsl
arpl
cltd
loop
movsl
pop
out
sub
scas
jae
jmp
push
cltd
mov
into
lea
mov
repz
sub
push
iret
or
dec
xchg
mov
aam
xor
xlat
stc
xchg
sbb
pusha
imul
aad
sbb
add
pop
jg
dec
jnp
jge
fidivrs
sbb
xchg
xor
inc
pop
int
pop
ljmp
add
pop
movswl
ffreep
mov
pop
sub
loop
aaa
bound
popf
pop
pop
push
out
push
push
cmpsb
adc
mov
push
jnp
roll
fimuls
sub
shll
sarb
xchg
cmp
fwait
std
ss
cmc
repnz
mov
cmp
es
movsl
aaa
fbstp
mov
mov
fsubs
mov
push
inc
mov
pop
xorl
cmp
fs
mov
push
mov
sahf
aam
mov
inc
push
adcl
nop
inc
gs
mov
pop
cmp
das
loop
push
ja
lahf
pop
jmp
nop
aas
mov
fwait
popf
insl
sahf
xor
mov
push
mov
mov
enter
and
add
lods
jecxz
cmpsb
xchg
inc
and
test
jbe
test
insb
sbb
mov
fst
cs
mov
or
jecxz,pn
jle
popf
loop
and
fsubs
enter
dec
dec
mov
mov
sub
scas
add
ret
dec
stc
xchg
add
jmp
sub
dec
fisubl
push
jo
push
fisttpl
adcl
mov
jg
mov
aaa
xor
and
mov
shr
jg
pusha
in
pushl
out
jne
inc
addr16
cmpsb
imul
xchg
xor
add
push
int
jns
inc
pop
enter
push
cmp
dec
imul
outsb
rcrl
mov
xchg
mov
mov
cmp
inc
adc
addl
div
pusha
test
push
push
mov
sbb
push
mov
aas
dec
push
adc
jecxz
sbb
xor
sub
cmp
mov
dec
dec
ja
inc
mov
adc
outsl
decl
ficomps
mov
xor
push
pop
mov
je
out
loope
test
cmc
mov
test
jb
or
or
movsb
out
testb
cmp
pop
jle
nop
or
lock
or
nop
mov
mov
pop
and
xchg
or
mov
dec
test
xchg
mov
or
test
or
or
clc
enter
pop
inc
pop
mov
push
xchg
les
mov
je
fldcw
jmp
jnp
add
xchg
and
addl
cmc
aad
lret
jae
xchg
pusha
mov
or
pop
pop
lea
mov
cmpsb
ret
mov
xchg
push
add
pop
out
pusha
addr16
xlat
mov
jl
pop
scas
imul
pushl
or
xchg
or
push
loopne
aad
xor
in
and
lea
sarb
mov
cwtl
lahf
or
sti
fwait
fs
test
mov
xchg
xchg
mov
and
mov
adc
push
leave
jmp
ljmp
into
adcb
popf
clc
jbe
adc
jo
rclb
cld
mov
cmc
insl
jne
sub
xor
or
in
add
inc
mov
add
jbe
fnstenv
pusha
dec
xor
stc
int3
repz
push
imulb
lds
call
add
loope
sub
xchg
outsb
push
fdivr
pop
xchg
adc
roll
cwtl
leave
addb
push
sbb
lret
imul
ret
mov
dec
lahf
adc
jbe
cmc
mov
fdivs
and
push
iret
jl
dec
scas
enter
out
dec
add
pop
push
cmp
or
sub
inc
ror
mov
jecxz
add
fstps
or
js
and
lods
mov
les
mov
adcl
add
xchg
add
jno
mov
xchg
imul
xlat
mov
fsubl
fistps
movsb
xor
std
cs
xchg
mov
mov
or
jecxz
and
repz
sub
cmp
inc
addr16
aam
jns
es
scas
xchg
sti
inc
jno
sbb
sub
sti
das
xchg
push
add
jl
dec
loop
ss
sar
out
xchg
frstor
ja
sbb
sbb
mov
lret
mov
mov
or
mov
cmp
or
pop
jle
in
mov
sub
in
push
das
fcmove
inc
push
pop
sbb
jno
jg
test
into
out
mov
into
mov
mov
xchg
std
les
adc
sbb
movsb
adc
jno
fcoms
inc
dec
pop
inc
imul
andb
push
mulb
lock
jb
xchg
jmp
flds
sbb
or
xor
sub
adc
movsb
fs
aam
stos
cmp
neg
push
out
xchg
daa
mov
das
adc
fisubl
push
fldenv
or
xchg
dec
daa
lods
adc
ss
outsb
out
out
push
insl
adc
and
adc
inc
jo
loop
sub
push
or
inc
pop
cmpsb
xor
xchg
mov
shrl
adc
add
out
push
ja
sub
add
or
cmp
ja
fs
movsl
jo
jmp
xlat
in
enter
mov
jl
lret
cmp
xchg
inc
fisttps
hlt
xchg
mov
fisttps
push
xchg
sbb
xor
lcall
adc
pop
push
shlb
pop
mov
addr16
mov
dec
mov
fsubr
mov
pop
jecxz
les
mov
cmp
imul
jb
int3
inc
cmp
xchg
or
sbb
mov
loopne
adcb
dec
jecxz
fadds
imul
js
adc
ret
adc
sub
hlt
jbe
add
in
lcall
loopne
std
test
jge
loop
dec
cmc
mov
add
or
in
lods
xor
pop
fistpll
in
pop
jns
mov
pop
pop
push
fnstenv
and
enter
fadd
pop
mov
dec
cmp
mov
xor
jns
inc
add
rcll
jmp
jle,pn
test
mov
push
xor
inc
ja
sti
jle
dec
mov
xlat
xchg
cmpsl
xchg
mov
data16
sub
push
mov
push
ja
cmp
ret
jge
aaa
xor
sbb
cmp
pop
lret
adc
inc
xchg
ja
pop
in
push
dec
and
add
aaa
adc
fldenv
es
aad
push
jg
mov
rcrl
fcomps
loopne
inc
cmpsl
xor
stos
in
mov
jne
push
neg
lcall
bound
sub
cmp
in
cld
cwtl
sbb
ds
mov
ljmp
push
lock
add
or
dec
cmp
popa
jge
mov
or
push
jle
inc
push
movsb
aas
rolb
data16
sbb
sbb
fbld
jno
inc
cmp
jge
repnz
ljmp
fistps
xchg
ret
mov
mov
in
mov
ljmp
jne
mov
xor
add
mov
lea
lods
jecxz
xchg
adc
adc
jno
xor
ljmp
push
repnz
or
add
mov
add
dec
aas
xchg
or
push
ja
imul
push
adc
mov
stos
lds
mov
arpl
xchg
xchg
stos
pop
cmp
jb
lcall
pop
mov
pop
xchg
adc
mov
mov
in
icebp
das
sub
aaa
push
imul
lret
ret
sub
loop
imull
sahf
mov
hlt
add
pop
xchg
fidivrl
mov
adc
cmpsb
int
push
adc
pop
leave
push
dec
xlat
cmpsl
and
jmp
xchg
hlt
adc
imul
lea
out
jo
dec
mov
mov
idiv
das
jmp
in
fisttps
lea
cmp
fisubrs
pop
or
cli
repz
inc
mov
mov
fldcw
fldl
fcmovbe
lods
ja
push
std
dec
ror
scas
inc
pop
xchg
sbb
adc
sbb
in
test
sub
lret
push
mov
mov
pop
push
sar
iret
popa
call
in
push
sub
mov
add
test
jno
adc
mov
imull
xor
jmp
add
repnz
out
xlat
loop
outsb
mov
loopne
jg
cmpl
jl
outsb
cmp
cmp
mov
push
push
rol
lods
mov
iret
dec
sub
test
out
clc
icebp
test
insl
xor
xchg
ja
leave
mov
dec
lret
sbb
adc
faddl
movsl
lea
mov
imul
ds
push
pop
hlt
or
test
sub
les
and
out
add
jl
out
arpl
adc
or
lods
mov
fsubl
xchg
mov
popf
inc
sbb
sbb
cmpsl
outsb
aaa
js
icebp
push
stos
mov
fs
shll
add
mov
outsl
add
lea
jecxz
fadds
loop
jmp
out
mov
sbb
mov
outsb
fsubrl
add
mov
call
dec
fildl
loope
sub
sarl
cmp
lea
outsl
sbb
pushf
push
aas
mov
or
cmp
shll
dec
jbe
push
mov
ljmp
in
add
mov
pop
ja
sub
push
dec
mov
jmp
jle
and
xor
add
sub
hlt
ljmp
sbb
xor
cli
mov
call
int3
sbb
xlat
out
aad
jmp
sbb
lret
in
aam
adc
test
mov
mov
and
fidivs
test
xchg
inc
xor
test
fs
in
mov
leave
outsl
jge
mov
call
adc
scas
or
fwait
scas
test
lods
push
lret
adc
pushf
into
and
dec
je
out
out
insb
jne
jb
xor
and
inc
add
popa
cmp
or
sub
cmp
into
xorl
ja
lret
lret
push
repnz
lods
mov
fs
arpl
adc
pop
fwait
scas
sbb
xor
jge
push
fisubrl
call
sahf
ja
xchg
push
push
cmp
cmp
cwtl
pop
loopne
sub
mov
mov
fs
mov
std
xchg
jne
test
mov
lods
fldt
adc
inc
sarb
and
in
mov
or
dec
or
mov
repnz
jbe
rol
xor
out
dec
cwtl
mov
inc
ret
xchg
mov
mov
pop
mov
int3
mov
xchg
ljmp
fidivl
loopne
push
jmp
in
fistpll
or
clc
and
outsb
xor
sub
jp
and
ret
jmp
mov
add
jp
sbb
dec
test
add
pop
fldenv
pusha
push
daa
sarl
in
adc
rcr
jnp
aaa
cmc
push
loop
dec
or
call
lcall
jmp
icebp
and
aad
pop
xchg
int3
mov
sub
outsb
stos
push
add
mov
jmp
xchg
call
movsb
rolb
lret
push
imulb
mov
outsl
je
in
xor
iret
mov
dec
sbb
dec
test
fnstenv
jecxz
pop
cwtl
adc
insl
mov
ret
xor
fstpt
gs
cmp
cld
and
mov
and
sti
xor
in
dec
push
jnp
mov
jo
xor
or
mov
mov
ja
aas
data16
ud1
sbb
xchg
pop
jle
in
out
jmp
sub
inc
jecxz
jb
jb
cmp
sahf
mov
jge
push
pop
push
cmpsl
jge
sub
cmovns
into
or
cld
mov
cmp
push
mov
and
pop
in
jae
pop
push
in
cmp
push
xor
inc
add
mov
or
mov
fsubl
arpl
je
popa
fsub
cltd
into
and
pop
xor
iret
lea
mov
inc
xchg
add
dec
ret
adc
xchg
addr16
sub
xchg
lcall
or
jl
xor
and
rcr
push
push
mov
xor
rol
rcll
push
adc
mov
xor
jo
in
scas
push
cmp
out
adc
xchg
dec
xchg
arpl
cmp
push
cli
add
lods
mov
fcomp
fildl
shl
jnp
adc
outsl
mov
mov
mov
or
push
movsl
inc
rorl
enter
dec
pop
xchg
gs
cmp
pop
test
stc
cwtl
dec
lods
lahf
nop
icebp
jae
jo
ljmp
dec
pop
popf
pop
cmp
mov
gs
fmuls
or
shll
xchg
sub
nop
jno
icebp
cmp
add
jecxz
fidivs
leave
add
out
in
inc
sbb
clc
aam
cmpsl
and
push
or
rorl
jp
cwtl
loope
pop
pop
and
repnz
rorl
mov
mov
xor
mov
mov
sub
push
movsl
mov
ficoms
fdivs
cmp
sub
pop
lods
lcall
jmp
lahf
mov
stos
arpl
and
int3
dec
imul
mov
lods
dec
jo
out
cmp
pop
ja
mov
add
loop
sub
repz
fwait
pop
cwtl
stc
jae
push
decl
push
sub
add
pop
mov
pop
or
xor
sub
roll
jae
pop
pusha
cmp
sub
push
insl
pop
inc
push
push
mov
test
push
xchg
or
inc
jp
cld
cmpsl
inc
in
jmp
adc
inc
div
roll
or
mov
shlb
imul
arpl
hlt
stos
dec
dec
jbe
xchg
cmp
xchg
sub
js
mov
int
ljmp
fsubrs
fnstcw
or
jge
aaa
daa
leave
sub
inc
xchg
mov
push
adc
mov
or
or
inc
jo
loop
inc
stc
push
rcrb
shr
outsl
adc
rolb
cltd
lds
adc
dec
dec
or
insb
rcrl
cmpsb
jbe
fs
movsb
dec
inc
in
xchg
cwtl
daa
pop
clc
xchg
subl
xchg
pop
mov
gs
dec
inc
jb
xor
xor
push
fldt
push
mov
pop
jmp
xchg
cli
and
dec
dec
sbb
or
push
fdivrs
sbb
add
leave
mov
jl
negl
les
push
icebp
orl
jns
add
dec
test
dec
add
sbbl
bound
inc
jge
pop
adc
ret
testl
jecxz
cmp
lret
jns
pop
popf
lea
mull
out
mov
cmp
add
mov
sbb
mov
movsl
push
jbe
and
dec
sarl
or
xchg
ljmp
fistps
aam
mov
and
push
lret
mov
test
and
dec
jno
mov
ds
int
push
arpl
jg
sub
xor
sti
ss
lcall
cmc
add
cmpsl
test
test
jl
cltd
mov
xor
mov
mov
fistpll
pop
xor
movsb
out
sub
repnz
mov
lcall
ret
sub
jno
mov
ds
cwtl
jle
mov
clc
inc
out
pusha
cld
jl
inc
ljmp
dec
shll
std
cmp
dec
or
xor
sbb
out
xor
loope
sub
dec
jmp
xchg
cmp
mov
push
sub
lahf
push
mov
out
into
xchg
jb
xor
and
pop
lret
mov
cmp
pop
push
icebp
inc
dec
jnp
js
insl
cwtl
cmc
cmp
stc
insb
sbb
dec
mov
out
ret
into
dec
mov
pop
into
in
stos
imul
xor
addr16
mov
cmp
jno
and
pop
push
jge
inc
or
push
or
inc
hlt
lcall
stos
enter
into
pop
movsl
subb
pop
test
cli
std
leave
add
mov
test
sbb
pop
xchg
addr16
call
fucomi
sub
dec
jmp
cmp
mov
outsb
sub
sub
daa
cmp
inc
mov
fstpt
scas
sub
pushf
lock
ror
push
add
jl
push
sar
test
call
fwait
inc
mov
pop
in
cwtl
jbe
mov
adc
sti
lahf
xchg
mov
push
push
jecxz
sbb
mov
xchg
inc
rol
nop
mov
push
push
sbb
pop
sbb
jns
out
push
mov
cli
loope
and
inc
mov
scas
jmp
fiadds
or
adc
ficoms
and
mov
outsl
aaa
pop
loope
xor
popa
cmp
sbb
add
testb
das
pop
push
loop
loopne
inc
imul
aaa
enter
fsub
movsl
int3
add
mov
sbb
or
stc
cmp
or
ljmp
sub
add
test
ljmp
sbb
add
push
add
scas
sarl
cs
mov
sub
das
loop
push
dec
popf
popf
lret
push
fildl
push
mov
xor
negl
aam
in
gs
cmc
xchg
jp
adc
daa
sbb
iret
or
push
xchg
stos
ds
cmpsb
push
sbb
inc
add
sti
and
mov
fdivl
mov
xlat
aas
test
rep
lods
adc
movsb
and
add
gs
negb
imul
je
inc
icebp
or
push
cmc
mov
test
clc
hlt
out
and
les
pop
or
jbe
adc
sub
xor
dec
orl
hlt
jl
in
ret
call
sti
inc
and
mov
stos
jno
pop
scas
inc
out
or
cmp
lods
xchg
mov
lock
push
outsl
inc
push
cmp
stos
lcall
add
pop
aad
push
or
inc
test
mov
cmp
xchg
cld
push
ja
dec
sub
sbb
fists
cltd
add
or
and
out
dec
scas
pop
or
push
xchg
icebp
aas
jle
xchg
adc
shll
lods
lock
into
inc
in
call
andl
or
lock
sub
pop
mov
out
int3
add
mov
jb
das
loop
cmpsb
loop
mov
data16
ret
pop
arpl
rcr
add
xor
pop
cmpsl
mov
out
daa
sarl
fldl
cmp
movsb
popf
pop
aad
nop
xor
loop
cmp
clc
je
cmp
and
repnz
icebp
add
mov
pusha
out
andb
cmp
ss
out
mov
sbb
and
and
mov
in
add
push
and
sahf
push
in
sti
xor
lock
lods
repz
mov
imul
mov
notb
popa
ret
rcll
mov
push
jbe
xorl
jmp
aaa
loope
xchg
or
inc
adc
ja
pop
sub
push
mov
jp
aaa
repnz
pop
cmp
jg
icebp
sbb
mov
dec
pop
or
xorl
push
pop
push
xchg
xchg
call
xor
cltd
mov
adc
and
fld
cld
add
sub
xlat
aad
sti
pushf
mov
repz
push
les
mov
jae
xchg
push
inc
pusha
cs
arpl
cltd
test
and
loope
pusha
and
popf
pop
fildll
push
cmp
in
sbbl
or
push
dec
ret
addr16
negl
sub
sbb
xor
das
fmul
and
jne
cmp
aas
fisubl
jmp
push
icebp
mov
sub
push
push
jb
adc
shl
jb
xlat
mov
push
aaa
dec
dec
scas
mov
stos
aad
xchg
dec
adc
in
dec
cmp
cmp
mov
and
shlb
lods
xchg
jns
les
rcll
sub
jo
movsl
push
rolb
sahf
pop
mov
dec
mov
mov
imul
cmp
cltd
rorl
test
leave
faddl
inc
sub
pop
inc
in
ss
cmc
push
or
mull
inc
lds
cs
pop
mov
lcall
pop
jne
inc
push
mov
push
jle
fdivrp
bnd
xchg
dec
flds
out
popa
jae
push
mov
mov
cmp
pushf
cmp
jle
das
in
loopne
mov
inc
xor
inc
pop
inc
push
cwtl
push
je
repz
pop
and
stos
js
push
icebp
sub
push
pop
xor
mov
sbb
mov
shl
add
jo
stos
lahf
inc
and
lods
or
fcoml
shlb
inc
mov
popa
inc
adc
std
push
xor
mov
rcl
xor
rcrl
mov
sbb
movsb
loope
lods
pop
lods
arpl
and
push
jmp
es
mov
setns
stos
xchg
add
cmpb
sbb
jb
int3
test
jle
and
push
out
add
mov
daa
icebp
stos
inc
inc
mov
mov
push
or
ja
stc
int
xor
and
pop
pop
push
mov
mov
add
sub
cmp
xchg
adc
xchg
loop
xchg
pop
dec
jns
sbb
add
adc
and
xor
adc
push
mov
orb
cltd
adc
pop
xor
pop
repz
sti
pand
dec
mov
jnp
popa
out
iret
ja
lret
in
xor
xlat
sub
aas
loopne
mov
inc
mov
push
test
push
mov
sub
or
scas
incb
jne
inc
mov
cmp
jnp
fimuls
js
sub
jmp
mov
mov
xchg
inc
mov
adc
dec
xor
scas
dec
sbb
push
mov
imul
or
imul
or
into
pop
mov
mov
in
jl
sti
out
dec
test
clc
sarl
in
inc
loope
negb
mov
lcall
in
outsl
push
jae
das
sbb
sbb
ljmp
cmp
inc
daa
push
aaa
mov
out
orb
dec
fwait
scas
mov
iret
lods
mov
cmp
fs
shl
outsl
subl
pop
aam
lods
jl
je
adc
lea
adc
shll
push
inc
mov
dec
cmpsb
je
out
arpl
jbe
xor
or
cmp
inc
adc
lods
xchg
aam
sti
repnz
mov
and
sbb
pushl
rcrl
mov
mov
pushf
push
push
adc
subl
dec
pop
orl
rorl
data16
push
pop
and
test
pop
pop
cmp
pop
add
mov
and
test
sti
rcrb
xchg
into
fldt
sahf
addb
sbb
addr16
push
mov
sarl
jbe
xchg
mov
pop
push
sub
hlt
aam
aaa
jo
mov
rol
jno
ret
rorl
or
pop
ljmp
loopne
cmp
testl
arpl
scas
push
xchg
call
fucomi
shll
pop
inc
sbb
fwait
addl
push
fndisi(8087
push
jmp
scas
ljmp
nop
pop
lret
ret
ret
rclb
nop
inc
sub
pop
lcall
or
cli
icebp
xchg
notb
icebp
mov
pop
scas
push
nop
imul
aas
mov
jne
sub
inc
push
jle
pop
lcall
xor
mov
cmpsb
mov
inc
or
inc
mov
scas
xor
xchg
sub
jmp
cmp
mov
dec
dec
xchg
sti
popf
cs
pushl
xorl
sub
xchg
mov
add
ret
mov
les
mov
jnp
outsl
std
push
xor
sti
flds
push
rdpmc
xchg
jo
push
mov
popf
or
out
sbb
test
jmp
outsl
xor
aaa
adc
jg
mov
mov
sbb
test
lock
dec
mov
bound
enter
in
les
lcall
jg
mov
jg
xlat
adc
jnp
jne
clc
pop
addr16
movsb
jo
xchg
stos
mov
push
add
scas
in
pop
iret
adc
xor
pushf
and
xorl
out
cmp
test
mov
out
cmp
mov
jp
dec
mulb
addl
jns
mov
xchg
push
ret
add
out
xchg
and
sub
push
adcl
xchg
push
mov
lods
mov
cli
jae
fmul
pop
pop
popf
mov
sub
fisubl
and
sti
daa
cmc
jg
cmp
jae
sub
xlat
pop
push
repnz
stc
or
in
push
pop
aaa
int
imul
outsb
addr16
insb
sti
lahf
jecxz
fsubs
cmp
iret
mov
inc
je
repnz
adc
dec
sub
and
adc
add
sbb
jno
and
inc
jne
test
mov
sbb
inc
scas
lds
inc
lods
and
adc
cmc
sbb
mov
lock
adc
cmp
movb
mov
pusha
outsl
inc
es
cltd
sbb
daa
dec
pop
shrb
sub
stc
xchg
vmovhps
les
jle
in
nop
xlat
lods
outsb
add
out
aad
enter
test
js
outsb
insb
je
cmp
cmc
jp
out
push
fcomps
loopne
pop
sbb
cltd
mov
or
pop
push
jbe
daa
loopne
jbe
inc
in
adc
mov
adc
add
pop
xlat
cmc
fwait
movsb
out
jo
daa
cmp
mov
mov
cmp
jb
mov
out
pop
mov
inc
ljmp
insl
mov
xor
shlb
and
jmp
std
mov
inc
add
imul
sub
ffreep
add
test
mov
xor
outsl
aam
outsb
cwtl
std
mov
jecxz
xorl
or
push
pop
movsb
shr
int3
cwtl
add
fdivr
push
inc
ds
or
xor
push
scas
inc
out
ja
jle
pop
dec
mov
dec
mov
push
push
adc
dec
mov
push
fldl
or
mov
cmc
xlat
orb
mov
sbb
pusha
sahf
hlt
mov
and
leave
popa
jmp
pop
and
inc
fmull
pop
popf
aad
popa
jp
pop
dec
in
nop
xor
inc
mov
sub
gs
xor
dec
call
cwtl
cs
mov
mov
xor
add
mov
pop
adc
lods
mov
pop
repnz
sbb
leave
push
out
arpl
loopne
xor
sahf
xor
pop
rolb
popf
je
icebp
or
lods
cmpsb
pop
push
popa
jae
fisubrl
jge
test
fdivrs
mov
mov
mov
push
mov
xchg
dec
sbb
call
icebp
pop
lock
ss
sub
push
and
push
dec
dec
xor
push
fcoml
jp
fcoml
xorl
jbe
std
inc
cmp
xor
dec
imul
mov
push
lret
stos
cmp
or
fwait
cmp
pop
inc
out
cmc
mov
or
aam
jle
test
jl
jmp
mov
mov
push
push
les
hlt
repz
je
jno
jl
inc
adc
int3
sub
or
negl
movsw
push
add
push
mov
cmp
xchg
push
out
xor
lret
pop
sbb
imul
inc
je
js
outsl
ret
or
jno
cmp
fnstcw
pop
or
push
mov
mov
orb
sbb
lea
cmp
dec
push
inc
lock
and
adc
std
leave
and
lock
cmp
xchg
jns
cmpsl
add
out
lahf
subl
clc
and
imul
outsb
mov
out
sti
push
push
mov
mov
lock
arpl
addb
pop
pop
mov
sub
inc
push
pop
mov
lods
sbb
test
jp
lahf
ja
js
jmp
mov
xchg
xchg
push
scas
fnstenv
into
arpl
cmp
sub
fnstenv
add
sub
and
mov
mov
rorb
mov
mov
jp
or
and
pop
and
adc
ror
xchg
xchg
push
stos
xchg
pop
jnp
xchg
dec
outsl
and
jo
imul
out
cltd
into
aam
mov
lret
mov
adc
scas
fdivp
dec
sti
add
lcall
fimuls
out
xor
jle
mov
sub
or
inc
jb
xchg
lods
imul
push
inc
imul
icebp
jo
dec
pop
jb
dec
adc
xor
inc
scas
dec
je
iret
std
sub
mov
jne
cld
cmp
or
mov
jns
dec
gs
mov
jne
iret
loop
test
jae
pop
dec
rol
mov
sbb
push
sbb
jge
xchg
hlt
je
lock
in
sbb
xchg
sub
xor
dec
fldcw
imul
xchg
adc
xor
push
sub
stc
push
adc
dec
inc
cltd
sbb
ljmp
shrb
into
repz
mov
rcll
sti
sbb
lcallw
test
adc
jge
cs
in
insl
mov
inc
les
rclb
lahf
vzeroupper
fnstenv
in
movsl
dec
aam
les
mov
fldl
mov
outsb
ret
xor
dec
pop
stos
mov
int3
jmp
test
pop
mov
sub
aas
mov
jbe
xor
sub
dec
movnti
pop
pop
mov
test
scas
adc
cltd
or
aas
jns
out
and
loope
sbb
pop
push
jno
sahf
mov
test
dec
fcomi
push
iret
and
inc
lcall
mov
xor
and
je
jle
pushf
ret
pop
mov
loope
sahf
enter
mov
and
out
sti
lods
dec
imul
inc
xor
sbb
or
or
es
outsl
dec
pop
adc
mov
pop
jecxz
movsl
por
push
jnp
gs
xchg
je
mov
xor
pop
inc
xchg
out
in
mov
pavgw
jmp
mov
aam
addr16
push
scas
add
stos
mov
rorl
bound
ret
icebp
fldt
ret
xchg
jg
cli
pop
push
cmp
test
jge
ja
cmpsb
gs
sarw
dec
adc
sbb
jg
outsb
sti
xor
jle
dec
cmp
loop
les
pop
test
fldcw
dec
gs
mov
xchg
sub
mov
sahf
sub
add
inc
cmpsb
add
mov
push
mov
es
and
insl
cmp
ror
mov
jl
ret
sub
cmp
push
iret
enter
sbb
mov
cmpsb
add
cmp
xchg
into
ret
jp
ret
into
movsl
sbb
les
pushf
lods
and
xor
insl
or
lret
outsb
in
loope
lea
add
or
or
mov
and
mov
pop
in
pop
das
icebp
xchg
scas
scas
mov
arpl
dec
cwtl
lret
cmc
cwtl
insb
push
pcmpgtd
inc
in
outsl
add
pop
and
inc
push
aas
sahf
ss
pop
cltd
rclb
fsub
jle
mov
out
jl
mov
cmp
push
sbbb
cld
call
push
std
or
sbb
and
push
jle
lret
sbb
icebp
mov
sub
bnd
and
xor
test
outsb
mov
dec
fiadds
cmp
sahf
push
add
dec
xchg
inc
test
mov
or
popa
fisttpll
mov
arpl
int3
adc
or
cmp
mov
add
push
repnz
sub
roll
lds
xchg
mov
lock
sub
xchg
repz
loope
jns
movsl
and
jl
xchg
dec
mov
call
sti
jge
and
mov
mov
push
dec
sub
aad
xlat
xor
inc
jo
pop
cmpsb
test
dec
push
push
cmc
add
das
fstpl
or
fadds
mov
xchg
and
push
arpl
jle
sub
shrl
jno
rcrb
call
fldl
xchg
sbb
push
outsb
arpl
aad
cmp
into
sbb
ljmp
jae
sub
xor
mov
cwtl
stc
sbb
mov
pop
jp
jnp
jnp
notb
mov
add
xchg
ret
loopne
fbld
movsl
cltd
push
jl
sahf
push
sub
and
in
sbb
mov
test
pop
dec
or
ficomps
mov
lahf
cmc
rcrl
mov
or
enter
mov
cwtl
or
mov
xchg
jg
sub
in
xor
add
gs
pop
and
sub
lods
inc
repz
and
mov
gs
cs
mov
jno
push
mov
cwtl
jbe
mov
inc
fnstsw
jge
and
pusha
mov
sub
out
scas
daa
gs
jo
add
shll
jo
cmp
adc
icebp
cs
add
push
icebp
aad
lret
gs
shl
ljmp
jecxz
jb
sub
mov
out
sahf
daa
lahf
jle
popf
sub
lret
orl
int3
test
inc
scas
lds
mov
stc
and
movsb
xchg
insl
js
scas
fsts
subl
xorl
fcmovb
mov
fucom
jnp
push
mov
or
fcoms
fdivrs
jge
add
or
in
mov
jbe
ss
dec
or
push
sahf
jb
sbb
adc
std
popf
and
inc
mov
data16
xchg
cmp
jge
dec
dec
jno
movsl
into
and
loop
pop
xchg
pop
nop
lods
mov
ret
sbb
jne
sbb
ret
aad
imul
data16
inc
push
add
in
hlt
push
sub
jnp
adc
movsb
xor
in
push
jbe
sbb
xor
movsl
pop
insl
addl
inc
out
xor
push
sub
popf
es
sub
loopne
sub
pop
or
cltd
cmp
cmp
adc
cmc
pop
or
jge
dec
mov
sbb
xor
fbstp
inc
lcall
pop
sahf
fidivrl
inc
inc
stos
inc
outsb
notb
mov
cmp
mov
in
data16
push
hlt
je
in
scas
xor
inc
cmpsl
fs
pop
push
fnsave
ljmp
out
inc
ss
lods
rolb
mov
pop
push
mov
notl
scas
xor
aam
lret
test
test
je
cltd
dec
xor
in
xor
pusha
bound
pop
inc
in
pop
and
sub
cmp
insb
aaa
mov
test
test
adc
mov
out
push
pop
das
loope
mov
lret
inc
sub
aas
ljmp
pop
adc
aas
imul
out
and
mov
dec
xchg
rolb
rcr
jnp
popa
jl
xor
sub
leave
cmc
cs
jle
mull
in
aaa
or
sbb
adc
add
pushl
xor
repz
es
cmp
cltd
int3
cmp
xchg
push
stos
lock
push
fpatan
ret
leave
sub
adc
sub
push
mov
inc
test
shr
add
lcall
stc
jns
xchg
test
insb
test
lret
in
lret
inc
add
fs
mov
les
mov
xchg
mov
mov
pop
outsb
and
mov
jmp
pop
xchg
xor
mov
jge
pop
cmpsb
lcall
sub
scas
inc
jne
mov
jl
mov
and
imul
ret
fisttpll
pop
cmp
es
rorb
sub
dec
sbb
jecxz
cmp
mov
jnp
dec
into
sti
clc
mov
fnstsw
xor
cmp
add
andb
sbb
or
insl
adc
lds
pushf
dec
and
jae
push
aad
inc
movsb
shrl
dec
xchg
ja
nop
icebp
pop
push
adc
dec
dec
xor
adc
mov
je
int3
push
pop
cmp
cld
sbb
testl
test
mov
dec
dec
or
push
lcall
repz
aaa
inc
inc
sbb
pop
mov
cmpsl
add
pop
or
xchg
inc
loopne
jno
sbb
pop
loopne
mov
cltd
call
decl
mov
ljmp
fcos
or
scas
pop
shrb
add
xor
gs
cmp
int3
repnz
jae
pop
push
push
adc
push
or
arpl
xchg
scas
imul
xchg
insl
push
xchg
cmc
mov
jecxz
xchg
sub
dec
scas
pop
sbb
dec
inc
scas
outsl
aaa
xchg
dec
fwait
bound
arpl
lahf
adc
cs
mov
pop
mov
cli
mov
js
out
call
popf
insb
pop
push
leave
sub
clc
lock
gs
xor
out
mov
jae
ret
in
les
aaa
movsb
xor
cmpb
mov
aas
xchg
fcomp
lea
dec
shl
pusha
scas
fdivrs
sbbl
rcrl
pusha
push
add
mov
xchg
mov
add
adc
dec
repnz
push
sub
addr16
movsl
add
dec
push
ficoms
stos
insb
cmp
insl
ljmp
jle
xchg
fs
outsb
shrl
int
cmp
scas
mov
inc
push
and
dec
jge
int
xor
adc
testl
add
xor
push
enter
mov
cmp
lds
jecxz
mov
call
push
insb
jns
pop
jle
inc
notl
inc
repnz
mov
mov
arpl
inc
repz
mov
loop
and
xchg
xor
mov
sub
jns
outsb
notb
cmpsl
xor
addr16
sub
xchg
and
pop
clc
jnp
inc
out
inc
std
mov
pop
call
jne
rcll
jmp
clc
and
jle
lock
xchg
lods
jns
sbb
out
int
dec
pop
enter
inc
loopne
xchg
mov
insl
xchg
out
adc
sub
push
fmull
inc
xchg
stos
cmpb
mov
jne
dec
adc
mov
jae
hlt
jecxz
mov
sbb
je
leave
jg
mov
xor
imul
cld
fsubl
sbb
mov
push
sbb
inc
insl
sub
imul
and
mov
sub
add
add
or
add
adc
dec
or
cmp
xor
cmp
dec
push
sarb
into
jp
dec
fsubrp
mov
in
repnz
popf
imul
push
cmpsb
sub
clc
sahf
arpl
cli
stos
fbld
pop
pop
lds
xchg
rcl
adc
leave
ficoml
jnp
pop
nop
jne
xchg
shlb
ss
addl
ret
fimuls
mov
pop
bound
rcrb
and
push
mov
out
pusha
mov
sarl
lcall
sbb
mov
fiadds
add
xchg
sbb
dec
or
mov
sub
lcall
outsb
cmp
jge
hlt
movsl
sub
mov
dec
mov
icebp
fucomip
js
and
dec
ror
scas
loop
or
out
pop
push
lea
cmp
lods
cltd
sti
lret
sbb
jmp
lcall
cmc
fnstenv
xchg
mov
hlt
lock
into
cs
mov
lds
sub
mov
xchg
sahf
mov
loopne
pop
bound
dec
das
push
insb
xlat
jnp
arpl
add
mov
cli
add
leave
lock
lock
or
sub
inc
mov
and
dec
pop
pop
sbb
pop
lret
jns
mov
mov
jmp
les
sub
mov
data16
cmc
or
inc
mov
test
jb
aaa
js
negb
popf
das
xchg
fidivl
daa
xlat
mov
dec
push
pop
mov
mov
cld
xchg
bound
dec
xchg
push
decl
ret
sbb
xor
fadd
stos
call
pop
pop
das
push
and
inc
popf
dec
mov
call
cmp
arpl
adc
movl
inc
pushf
repnz
fs
stc
push
test
mov
fnstenv
mov
add
and
pop
stos
inc
shrl
sti
xchg
or
pop
mov
cmpsl
jb
mov
pop
mov
cli
mov
push
mov
pop
rclb
push
stos
in
jp
jp
sahf
int
mov
fdivs
aam
inc
addb
push
cmp
insb
popa
sbb
jb
imul
pop
scas
cmpsl
lock
or
mov
loopne
xchg
push
mov
sahf
pop
lcall
sbb
dec
mov
arpl
xchg
test
ficoms
mov
out
mov
es
enter
xlat
mov
dec
sub
pop
add
ret
sub
leave
outsb
cwtl
and
addl
bound
add
mov
adc
insl
inc
bound
mov
outsl
pop
pop
cmp
xchg
lea
inc
je
pop
pop
decl
dec
jo
fwait
int3
addr16
dec
xchg
pop
aas
addr16
mov
mov
rcr
mov
push
xor
mov
sti
mov
outsb
push
adc
lods
dec
mov
sbb
rcll
daa
dec
pop
pop
das
cmp
adc
jae
lock
cmp
ds
push
adc
insl
and
ja
mov
test
test
sbb
hlt
int3
mov
in
xchg
add
scas
repnz
cmp
pop
push
jg
dec
push
jae
data16
xchg
dec
jecxz
rcrl
and
or
fwait
or
bnd
jge
mov
arpl
outsb
pop
mov
mov
and
or
in
lret
push
add
stos
dec
cmp
mov
fs
sub
cmc
loopne
dec
roll
add
xchg
jne
in
inc
mov
ret
dec
dec
cmp
xor
add
cwtl
lret
add
cld
mov
in
scas
in
push
in
cmp
xor
int3
stc
add
pop
ds
fadd
stos
adc
mov
cld
adc
mov
lods
lods
dec
sahf
in
mov
jle
leave
in
scas
push
jne
std
xchg
pop
push
fldt
sbb
adc
pop
push
sub
mov
push
jns
mov
lret
ja
loop
hlt
pop
and
push
jl
test
pop
fisttpl
sti
lods
rep
imul
repz
xchg
push
in
jns
dec
call
mov
adc
push
push
mov
xchg
jnp
outsb
adc
inc
xor
adcb
fucomi
fcompl
cmp
sub
mov
push
push
lods
popf
inc
add
call
and
ss
mov
mov
cmpsl
inc
or
dec
add
push
mov
adc
popf
cmpsl
push
push
xchg
pop
lret
ljmp
fcoms
pop
aaa
outsb
inc
cmpsl
xchg
adc
in
add
cs
inc
inc
jno
daa
xchg
jne
add
push
mov
fldl
cmp
adc
mov
pushf
test
stos
les
stos
out
add
cmpb
cs
sub
leave
popa
mov
leave
jmp
cs
pop
dec
subb
push
push
fdivrl
push
pop
fstpt
inc
inc
and
pop
xchg
cmp
inc
in
inc
sbb
mov
xorl
andb
xchg
jns
rcrb
jg
adc
test
in
add
stos
dec
push
dec
lea
or
pusha
pop
out
bound
jno
sub
push
int
fadd
mov
add
das
fistpl
sub
enter
mov
fnstsw
xchg
and
fs
xchg
push
out
cld
jge
sbb
subl
lcall
push
out
scas
sub
xor
in
mov
decl
pop
xchg
adc
lods
shr
add
or
lock
mov
pop
xor
hlt
sbb
cli
imul
push
push
adc
mov
ftst
pop
lds
insl
leave
inc
jb
clc
jbe
stc
push
loopne
xor
and
mov
test
xor
adc
in
push
jne
ljmp
gs
loope
jmp
cmp
adc
sub
jnp
mov
mov
add
sub
fistpll
jl
cmp
fimuls
nop
loop
xchg
mov
jg
fiaddl
mov
sti
lock
inc
sbb
repz
popf
nop
mov
ljmp
arpl
push
mov
ds
mov
mov
mov
push
cmp
sub
ret
mov
sbb
cwtl
loope
gs
adc
push
xchg
mov
xchg
das
insb
cmp
add
loope
ret
jp
cmp
cs
mov
jno
push
and
std
add
and
pusha
mov
mov
jnp
or
push
push
mov
mov
sub
jbe
dec
jl
mov
sub
je
cmp
jae
pop
rolb
jne
or
mov
xchg
popf
out
inc
add
push
sbbl
xchg
pop
dec
xchg
push
sbbb
mov
rol
xchg
jb
and
stos
push
pushf
jmp
add
mov
int3
mov
mov
jmp
jecxz
mov
es
add
sub
jbe
mov
orl
xchg
push
fbstp
pop
jmp
movsl
pop
pop
cmp
xor
inc
pushl
hlt
and
xor
xchg
addr16
mov
mov
imul
inc
out
mov
cmpsb
bound
ds
sub
iret
mov
daa
inc
lds
jp
and
pushf
push
or
push
test
push
push
mov
in
xchg
outsb
jo
aas
loopne
mov
rol
ds
inc
div
add
fwait
aad
jp
sti
cmp
es
int
ret
nop
push
punpcklwd
pop
scas
mov
cmpl
aaa
jae
jns
fcomi
mov
cmp
jo
push
cmp
mov
data16
mov
dec
jb
fs
push
sbb
push
loope
push
inc
lcall
pop
sub
jle
shr
out
int3
sub
inc
fs
push
lds
sarl
lods
dec
dec
cmpl
in
ret
insb
pop
sub
clc
fmuls
mov
xchg
push
inc
rcrb
stc
add
add
out
addb
mov
lock
pop
sahf
xchg
mov
adc
add
cmpb
adc
rorl
aad
daa
jle
rcrl
and
xor
mov
aas
or
pop
add
cli
in
jbe
test
fisubrl
or
pop
data16
pushf
jl
cmp
jp
out
jmp
push
xchg
pop
inc
lea
pop
les
pop
mov
dec
aad
adcl
cmpsb
xchg
dec
dec
jge
lahf
mov
pop
mov
mov
popl
and
cmp
jp
movsl
xor
or
test
cmpl
mov
dec
movsl
push
and
es
sub
or
xor
aam
or
push
adc
imul
mov
jno
xchg
mov
mov
scas
iret
movsb
xchg
sbb
xchg
xor
cs
pop
lods
mov
cmp
inc
stc
je
sbb
sub
cmp
mov
mov
xlat
inc
cmpsb
sbb
leave
and
dec
stos
adc
and
cmp
int3
sbb
mov
scas
pushf
cltd
fsubl
dec
gs
push
sub
xor
movsb
mov
and
inc
fistpl
or
lcall
and
mov
movsb
jo
mov
sub
stc
icebp
push
insb
fidivrs
fxch
lock
repz
fildl
fwait
xor
cmp
jns
pop
mov
add
sbb
dec
loope
std
incb
mov
mov
cmpsb
imul
shl
dec
cmpsb
aam
dec
jne
out
add
cs
sbb
mov
sbb
sbb
sub
in
std
mov
push
push
mov
inc
inc
push
push
das
dec
adc
popa
cltd
push
pushl
xchg
xor
push
mov
fildll
push
lahf
imul
outsl
js
jbe
cmc
cmp
subb
or
dec
inc
mov
imul
push
xor
rolb
and
lods
xchg
dec
xchg
pop
out
fdivl
push
outsb
fdivp
jmp
xor
or
jo
test
pop
test
cmc
ljmp
push
push
cmc
test
scas
cmpsb
and
inc
rclb
mov
in
cmp
mov
mov
or
aas
push
and
aam
add
lcall
subl
clc
stos
leave
pushf
mov
test
addr16
push
in
cltd
test
xchg
mov
stos
adc
jge
ss
push
jb
push
test
scas
es
mov
int
and
sub
add
out
into
jno
addr16
xchg
sbb
sbb
in
in
cmp
xchg
cmpsb
aas
fcompl
test
and
jb
cwtl
dec
into
dec
sub
shl
adc
divb
sub
jns
sub
mov
repnz
mov
pop
push
xchg
mov
add
mov
repnz
into
xchg
push
sub
mov
push
add
inc
pop
andl
mov
xchg
pop
and
lret
pop
clc
nop
sub
int3
mov
xchg
push
fcoml
imul
cmp
hlt
pop
clc
aad
jbe
arpl
fmulp
cmp
sti
rolb
and
shll
mov
lahf
int3
pop
jmp
mov
xchg
cmp
xchg
push
cmp
lods
int
jmp
cmp
cmp
or
lahf
dec
sbb
push
xor
je
dec
in
or
push
jl
fldl
and
andl
add
sbb
lcall
xchg
cmp
enter
cmp
jle
sbb
vphsubdq
cmp
push
adc
jl
or
aaa
iret
pop
inc
rorb
pop
scas
inc
push
test
scas
adc
cmp
icebp
mov
lods
sbb
jp
fcomps
push
addr16
imul
aam
dec
cs
popa
cmpl
cwtl
idivl
jne
bound
jle
out
sbbb
lcall
or
fbld
or
scas
outsb
rorb
push
mov
es
ret
negl
dec
inc
pop
call
sub
add
pushl
inc
enter
mov
fdivrs
mov
push
adc
mov
ja
pop
pop
push
inc
daa
mov
repnz
lret
or
ljmp
ljmp
adc
lcall
xor
mov
dec
in
inc
out
mov
pop
notl
sbb
ffree
das
icebp
inc
cli
in
ds
jp
sub
jbe
jnp
xor
add
xchg
sbb
pusha
or
stc
push
leave
loopne
imul
mov
mov
mov
popf
sbb
push
add
icebp
xor
lock
inc
loopne
fs
pushf
pop
jns
shrl
and
bound
xor
cmpsb
stos
dec
scas
dec
xchg
or
sbb
mov
in
add
aas
or
pop
daa
dec
push
cmp
pop
sbb
out
cmp
and
jle
imul
mov
add
stos
add
pop
ror
xlat
shrb
icebp
jg
jno
int3
pop
mov
adc
cmp
push
je
clc
call
outsl
repnz
in
inc
in
or
out
push
lret
imul
jp
cwtl
lret
sbb
fdivrs
add
jnp
scas
int
add
sbb
js
xchg
mov
pop
or
mov
shll
mov
mov
insl
and
mov
pop
sub
push
dec
pop
inc
movsb
push
mov
in
jg
sub
jbe
xchg
push
pusha
hlt
jbe
out
push
orl
ds
push
imul
scas
shrb
sbb
out
jae
sbb
sub
pop
imul
pop
in
popf
je
mov
cwtl
add
or
loop
sub
pop
scas
pop
inc
pop
dec
testb
cwtl
js
fisubl
mov
loope
cmp
fldcw
dec
iret
fnstsw
adc
pop
jmp
popa
orb
movsb
ficompl
xchg
nop
jnp
or
xchg
mov
nop
push
repnz
mov
inc
cmp
sbb
outsb
stc
outsl
xor
addr16
imul
fstcw
clc
mov
mov
popf
clc
test
xchg
mov
or
dec
clc
loope
out
pop
negl
push
mov
stos
or
pop
add
mov
inc
sarl
mov
test
pusha
pop
lahf
pop
enter
mov
sbb
ljmp
pushf
push
fadd
lock
mov
pop
fadds
cs
imul
ret
pop
icebp
leave
scas
lds
pushl
xor
and
andl
negl
arpl
jo
inc
repz
loop
cmp
jmp
inc
in
ret
scas
and
ss
ss
mov
pop
call
jae
je
fs
fstpl
stc
lods
ror
inc
xchg
xor
lods
mov
xor
cs
jnp
pop
lcall
jp
aaa
aas
scas
xor
jne
and
mov
les
iret
stc
jnp
xchg
sbb
inc
sarl
imul
push
inc
inc
cli
and
jbe
fiadds
shl
sahf
lods
inc
movl
add
mov
mov
cs
mov
sbb
cmp
lds
adc
jecxz
fildll
or
mov
out
lcall
mov
mov
push
mov
and
fldenv
adc
mov
cmc
cld
pusha
mov
adc
imul
stc
push
les
push
or
leave
aad
stc
xchg
jmp
stc
xor
push
pop
movsl
mov
nop
inc
adc
xor
insl
popf
xor
push
jns
dec
inc
cli
xor
je
add
jbe
cmpsb
jns
and
mov
mov
out
loopne
push
cmp
fs
fistpll
outsb
xor
push
and
outsl
enter
xor
or
xor
lret
fdecstp
mov
sbb
sbb
jns
xchg
dec
jo
pop
addb
loop
iret
pop
inc
fldl
mov
xchg
fstpl
scas
in
xor
test
mov
scas
and
pop
push
and
inc
jg
sub
or
mov
xor
pusha
and
fdivrs
dec
and
fisttpl
dec
and
insb
int3
xchg
mov
fcoms
fwait
mov
fdecstp
dec
rclb
int3
imul
arpl
orb
dec
mov
xchg
mov
cltd
cmpsl
cmp
stos
sbb
leave
push
stos
push
pop
repz
xor
ret
enter
lock
test
inc
dec
adc
xor
cli
inc
movzbl
push
cld
mov
and
movsb
dec
add
inc
jle
ret
mull
sarb
cmp
pop
test
inc
push
pop
mov
add
xchg
pop
sbb
sti
push
cmpsl
xor
sub
lahf
adc
and
int3
lahf
pop
sbbl
adc
lahf
jl
or
push
pop
inc
mov
aaa
mov
gs
rcr
aam
xchg
mov
in
inc
xlat
cltd
sub
sar
lret
lds
or
adcb
and
add
jns
mov
inc
dec
mov
loope
fs
sub
icebp
adc
dec
adc
flds
ret
pop
inc
lds
imul
cmp
ret
mov
test
xlat
daa
pushl
inc
repnz
fnstcw
sub
dec
and
lahf
cmp
mulb
inc
insl
out
jecxz
ss
mov
mov
mov
xor
mov
lea
mov
lcall
daa
leave
decb
lret
lods
es
pop
dec
ja
pop
cmp
jmp
dec
mov
arpl
mov
pop
xchg
or
fistpl
lods
sbb
pop
sub
xor
mov
dec
sahf
out
sbb
cmp
xor
sbb
pop
jg
xchg
jp
push
ret
adc
cmpsl
pop
fisubrs
inc
outsl
mov
iret
cld
or
mov
mov
cmp
mov
sub
rcl
jmp
sub
adcl
sbb
popf
iret
xchg
enter
add
push
push
imul
bound
subb
jge,pt
dec
sub
sbb
int3
clc
sbb
int
repz
std
jp
inc
jg
mov
inc
and
lret
into
dec
sbb
add
call
std
pop
push
xchg
cli
jb
push
cmp
loopne
cmp
stos
das
in
adc
sub
out
into
test
or
or
sbb
xor
xchg
xchg
fcmovb
sub
ret
fisttpll
sbb
inc
loopne
aad
inc
faddp
shlb
out
jge
je
mov
rcrl
xor
fiaddl
inc
ret
icebp
push
cmp
decb
test
ficoms
scas
xchg
jae
sbb
rol
push
or
icebp
or
add
into
scas
add
jp,pn
xchg
add
mov
sub
jp
adc
jb
arpl
push
push
xchg
out
push
mov
aaa
repnz
lods
add
outsb
and
cmpsb
jg
mov
add
dec
and
xchg
daa
jo
ja
filds
xchg
pusha
jbe
sarb
pop
jl
mov
push
rcrl
hlt
push
lcall
pop
test
jbe
sbb
in
sub
or
fists
cwtl
ror
jg
sbb
into
pop
popa
stos
test
daa
xor
push
push
xor
sbb
mov
nop
mov
pop
fcoms
data16
jo
lods
mov
hlt
mov
mov
je
sarb
leave
sub
cltd
mov
ss
dec
adc
fiaddl
lock
or
cmp
call
xchg
mov
mov
xor
xchg
mov
sub
add
or
insb
push
add
mov
dec
sub
push
cmp
fs
pop
js
jo
lret
push
imul
aas
inc
scas
add
nop
lock
fcoml
sbbb
das
test
je
mov
pop
pop
add
popf
or
sub
mov
sub
scas
fidivs
push
cmp
and
into
js
pop
xlat
adc
orb
xchg
xchg
jno
jle
pushf
incb
xchg
and
int
mov
ret
imulb
fcmove
jecxz
mov
sbbl
ret
xchg
cmp
push
xor
jns
pop
jle
adc
jno
jbe
scas
aam
mov
sahf
iretw
aad
sbb
lahf
or
rcll
dec
loope
dec
and
pop
filds
mov
mov
cltd
jmp
cmpsb
jno
test
ljmp
sbb
mov
loop
dec
pop
mov
jge
jecxz
push
jl
jb
es
jge
push
fnop
mov
js
pop
xchg
cmp
iret
bnd
or
jno
jl
aaa
sub
mov
jo
loopne
daa
mov
xchg
pop
pop
mov
testl
and
lfs
lret
add
xor
sbbb
inc
ds
je
mov
or
push
add
sbb
cmc
out
inc
jle
arpl
andb
sbb
loopne
sbb
andb
stos
test
loope
push
adc
push
out
ljmp
repnz
and
jmp
inc
jno
pop
pop
mov
mov
sub
icebp
out
mov
repz
outsb
in
add
lcall
jno
test
aas
cmp
lods
lahf
xchg
adc
pop
push
pop
and
lcall
adc
dec
out
pusha
cmpsl
fwait
mov
mov
mov
push
xchg
sub
mov
pop
xchg
movsb
and
es
dec
lahf
std
mov
jmp
mov
xchg
mov
add
or
xor
divb
push
adc
or
dec
int
insb
outsb
pop
xor
mov
inc
mov
in
mov
mov
jl
lcall
sub
addr16
iret
pushf
int
ret
lret
push
std
dec
mov
xchg
jge
xchg
fsub
cmpsl
sbb
push
rclb
add
or
scas
or
loopne
daa
or
sbb
xor
fists
push
push
and
inc
lods
ja
data16
and
push
rorb
jge
js
add
bound
cmpsl
pop
fstpt
inc
sub
push
jne
xchg
outsl
jnp
int3
idiv
out
lret
sbb
mov
mov
jmp
add
sbb
pop
dec
movsl
sub
out
mov
sbb
sub
aam
mov
sub
movsl
dec
jnp
addr16
xchg
and
daa
mov
adc
jae
cmp
lcall
cmpsb
cmp
push
jp
std
sbb
ljmp
sbb
inc
lcall
inc
or
rcr
call
cmp
xchg
dec
pop
dec
inc
push
inc
repnz
push
icebp
pop
xchg
add
mov
sbb
popf
lock
test
rcll
cmp
lret
ret
outsl
sub
call
push
sbb
mov
sbb
pop
xor
dec
lock
leave
in
ljmp
mov
xor
insb
adc
or
sub
orb
inc
dec
fsubrs
adc
imul
in
das
ret
in
mov
fstpt
cli
in
xchg
xor
mov
cltd
rcr
testb
cmp
shlb
dec
lcall
jbe
mov
repz
clc
sub
mov
mov
rorl
loopne
adc
sub
imul
mov
lods
push
bound
sbb
adc
pop
pop
ss
sub
cmp
inc
fiaddl
repnz
and
out
add
cli
int3
dec
xor
cmpsl
xorb
jno
and
and
add
pop
pop
lods
cltd
outsb
push
testb
jge
pop
int
daa
jmp
mov
and
adc
mov
repnz
inc
stc
js
aas
sbb
scas
pop
outsb
xchg
fs
pusha
lret
testb
mov
ss
fidivrs
int3
rclb
xor
mov
and
adcl
xor
rorb
imul
mov
movsb
sahf
movb
xor
sub
cs
fdivs
arpl
or
cltd
outsb
push
js
mov
jecxz
cld
arpl
subb
xor
and
clc
pop
sbb
pop
pop
out
push
es
jle
lea
fnstcw
jg
sub
xor
mov
fnsave
out
ljmp
sbb
push
pop
test
dec
mov
lea
ljmp
dec
stos
ja
push
add
cmc
pusha
test
adc
ret
ret
addb
add
sahf
push
and
pop
and
ret
adc
or
mov
pusha
adc
dec
test
into
cmpsb
or
movsl
xchg
dec
pop
ss
loop
add
loopne
nop
mov
lds
add
sbb
mov
push
push
fbstp
adc
fwait
nop
cmpsb
adc
cmpsl
push
push
negb
sbb
adc
xor
mov
enter
jne
mov
rorb
pop
lcall
repz
ror
enter
les
ret
lock
loop
add
mov
ss
test
mov
gs
das
xor
in
icebp
mov
fwait
iret
pop
push
fmul
xchg
jecxz
ret
or
ret
xorb
pop
out
push
add
repz
into
jnp
imul
cs
mov
xchg
xchg
leave
jbe
jne
sahf
out
mov
cmpsl
jmp
test
jb
mov
mov
sbb
aaa
inc
jmp
and
fldenv
mov
pop
xchg
adc
xor
sub
fsubs
inc
dec
xchg
and
push
xchg
rcrl
pop
or
dec
repz
movsl
pop
xor
aad
aam
jo
inc
mov
push
fistpl
or
push
adc
jbe
pop
out
icebp
mov
popa
lea
inc
jge
dec
ja
cmc
mov
lahf
and
push
inc
cwtl
repz
in
fcomps
daa
scas
imul
pop
jg
or
lds
je
adc
popa
out
dec
jp
mov
lea
inc
and
pop
jg
jne
xchg
mov
faddl
push
adc
dec
scas
mov
xchg
jae
push
gs
out
ficomps
and
flds
leave
fwait
and
jb
cwtl
pop
lods
ret
outsb
and
imul
and
repnz
scas
test
mov
mov
loope
sti
or
or
adc
in
pop
jge
xchg
mov
xchg
pop
cld
mov
adc
jnp
outsl
mov
movsb
xor
lock
je
mov
or
inc
jmp
shr
loope
jno
inc
mov
in
mov
mulb
bswap
sub
mov
dec
stos
mov
cwtl
or
push
in
in
outsl
outsb
lea
xchg
cmp
xchg
gs
loop
repnz
cmc
cmp
sub
stos
in
xor
jp
repz
enter
dec
pop
repz
mov
mov
adc
int
pop
ja
push
popa
sub
movsl
mov
push
lret
nop
xor
sub
dec
je
jge
jbe
jo
clc
add
fldenv
dec
inc
insb
xorl
inc
adc
push
mov
mov
loopne
mov
mov
and
std
xor
cwtl
rorl
mov
fsubs
scas
sbb
fwait
push
jmp
scas
jbe
xchg
xor
xchg
mov
out
sti
xchg
sahf
das
xchg
mov
push
push
and
out
inc
call
cltd
movsb
repnz
shr
loop
jle
xchg
sbb
out
dec
inc
and
push
mov
lret
pop
sahf
rolb
outsb
hlt
pop
aas
test
int
inc
scas
and
inc
sub
pop
cmp
sbb
adc
jl
fstl
mov
cmpl
aas
arpl
sti
or
push
mov
push
jnp
mov
iret
cmp
mov
mov
sub
push
or
xchg
stc
xchg
cmp
jecxz
adc
fnstsw
test
pop
aad
mov
or
cld
xlat
adc
push
push
sbb
stos
dec
push
add
addr16
mov
adc
arpl
mov
xlat
fldenv
fsubrs
mov
inc
xchg
addb
call
test
xlat
dec
loope
mov
pushf
sub
insb
hlt
lods
stos
pop
aaa
xchg
mov
int
ret
and
ja
addr16
call
xchg
or
aaa
jb
pop
stc
fisttps
cmp
push
comiss
das
and
dec
pop
adc
out
xchg
insb
xchg
pop
push
jnp
movsb
ja
jns
inc
repnz
add
loope
mov
xchg
hlt
mov
adc
lods
mov
pop
add
das
stc
cmpl
pop
mov
xor
rolb
push
mov
mov
hlt
add
jae
scas
mov
xor
and
scas
cmp
iret
xor
das
das
mov
ret
add
xlat
cmp
clc
xor
add
xchg
ljmp
fs
or
add
cwtl
cmp
int3
pusha
mov
or
cmp
cmp
loop
fistl
test
test
dec
inc
push
pop
rcrb
dec
xchg
mov
test
dec
pop
add
adc
jmp
sub
outsl
ss
addr16
sbbb
pop
add
ds
or
mov
sbb
out
sti
loopne
xchg
aaa
pop
cmp
cmc
test
or
pop
lcall
mov
mov
mov
cli
int3
jg
push
and
mov
xchg
add
xchg
push
out
xor
sbb
xchg
jge
jmp
mov
subl
and
outsb
inc
and
pushf
je
inc
dec
mov
out
leave
rsqrtps
adc
cmp
jle
lret
mov
push
sbb
ret
cwtl
cmp
cmpsb
es
mov
sbb
into
test
pop
push
inc
sub
jmp
gs
je
mov
sbb
sub
sbb
out
in
xor
fildl
adc
aas
add
lahf
loope
lds
cltd
test
js
je
mov
sbb
adc
dec
mov
push
adc
roll
mov
lds
mov
gs
insl
cmp
mov
fldt
in
in
jne
pop
int3
xlat
sbb
scas
stos
push
in
movsb
aas
pop
dec
inc
mov
sbb
fcom
add
cwtl
xchg
shl
xlat
adc
push
cmpsl
mov
xchg
mov
adc
xchg
sbb
mov
js
loop
dec
xor
test
ljmp
rorb
jne
mov
idivl
xchg
pusha
test
push
clc
scas
stos
dec
push
xor
loope
fstpt
lcall
pop
mov
mov
jle
cmp
mov
jmp
aad
in
shlb
out
pop
pop
xchg
xchg
in
out
sbb
outsb
push
push
jno
xor
xchg
sbb
out
adc
lock
repz
aas
mov
mov
pop
fcoms
xchg
inc
adc
rorb
sbb
push
dec
or
jne
add
sahf
fisubrl
push
fistpll
out
xrelease
xchg
imull
mov
stos
jno
inc
lock
adc
xchg
stos
jae
in
push
sub
in
pop
pusha
adc
lds
or
ja
loopne
das
add
lahf
data16
leave
and
pop
push
sahf
rclb
bound
adc
pop
or
in
dec
aam
int
xchg
sbb
xchg
loope
or
push
sbb
je
inc
out
ret
out
pop
das
test
cmp
sahf
cmp
xchg
fists
jns
fcomps
dec
addr16
outsb
sarb
mov
dec
in
ficoml
push
jnp
cld
outsl
inc
jo
dec
out
jecxz
ret
xor
loope
sbb
adc
pop
dec
imul
mov
xchg
jb
lret
mov
and
out
xor
iret
dec
xchg
lcall
push
cmc
lea
ret
pop
dec
mov
pop
sub
mov
ret
mov
int
out
adc
jns
dec
inc
push
dec
adc
add
shrl
sub
lret
sbb
loopne
adc
shrl
and
mov
inc
aad
or
jnp
ljmp
pop
mov
js
aam
mov
jno
sub
pop
jbe
repnz
mov
test
mov
int
test
scas
mov
inc
mov
in
mov
mov
sub
pop
dec
cld
mov
mov
jecxz
mov
mov
cmp
add
adc
inc
mov
js
es
cli
jl
xchg
iret
dec
jno
cmpsb
in
mov
inc
insl
jecxz
bound
enter
push
pushf
call
cmpsb
test
jns
inc
popf
imul
leave
mov
xor
in
adc
dec
sub
jbe
je
test
addr16
lcall
pop
rcr
jmp
add
jp
divl
and
fdivl
fiaddl
pop
sbb
sar
mov
stos
outsb
ljmp
cmpsl
cli
mov
stc
flds
jg
testl
mov
mov
stc
cli
shlb
outsl
ret
mov
or
in
sti
test
mov
rcl
cld
aam
push
jmp
add
xor
in
sahf
lods
int3
mov
je
sub
sbb
das
mov
fists
test
add
cmp
test
mov
pop
dec
mov
xor
pop
popa
scas
jnp
pushf
movb
mov
xchg
mov
lods
dec
imul
jns
shlb
ret
mov
mov
and
ljmp
fxch
mov
sbb
loopne
mov
push
cltd
cmp
sub
xor
push
enter
jmp
xchg
scas
mov
cmpsl
ja
cs
jns
or
fcoml
or
loopne
lock
scas
inc
imul
cmpsb
cltd
jl
sbb
stos
gs
inc
repnz
pop
cmpb
mov
test
cmp
or
ret
ss
lret
or
bound
int3
in
nop
xchg
push
push
repnz
sub
test
pop
rcrb
lret
mov
ja
xchg
dec
and
popl
add
dec
xchg
push
ret
fucomip
sarl
inc
cmp
xchg
in
gs
jmp
pop
push
ljmp
test
pop
jae
sbb
outsb
test
pop
mov
cmp
inc
popa
shll
jl
popf
pop
dec
xor
sarl
mov
loopne
std
insb
loope
xchg
inc
les
pop
or
push
and
fwait
sti
adc
xor
cmp
cmpsl
mov
dec
mov
or
imull
pushf
sbb
test
mov
std
outsb
add
adc
mov
movl
xlat
out
xchg
mov
dec
inc
jecxz
dec
xorl
insb
push
icebp
insl
loope
aad
xor
dec
mov
stos
ja
adc
out
loope
sub
mov
mov
rcr
sahf
adcl
xchg
aad
cli
fstps
data16
aaa
shl
test
adc
xchg
cmpsb
jge
aas
js
cmp
popa
mov
jecxz
enter
add
fadds
mov
dec
stos
sbb
orl
out
pop
iret
mov
mov
cmpb
mov
jnp
repnz
mov
fwait
aam
add
push
mov
imul
pop
pop
adc
es
repz
push
enter
out
addr16
outsb
outsl
daa
sbb
dec
addr16
pop
pop
jmp
push
repz
icebp
pop
add
mov
pop
xor
cmp
add
inc
pop
popf
aaa
notb
outsl
mov
fistpll
and
addb
lods
sbb
and
cmp
inc
xor
xchg
pop
loopne
inc
xor
pop
inc
pop
dec
dec
cmp
popa
dec
push
aad
mov
or
sub
cmp
bound
repnz
and
cmp
fsts
mov
or
jp
or
cmp
popa
adc
xor
ljmp
or
adcl
out
in
and
or
shll
roll
mov
mov
pop
ja
pop
dec
idivb
scas
aas
daa
mov
in
lcall
cmp
sarb
cmp
xchg
jnp
hlt
push
or
xchg
add
cmp
pop
mov
fnstenv
sahf
outsb
dec
mov
push
cltd
test
inc
cmp
test
jae
int
and
jb
xchg
pop
subl
or
ret
pushw
ljmp
lahf
jg
jecxz
clc
mov
jle
clc
mov
adcl
loope
jb
mov
dec
dec
les
add
mov
insb
jecxz
test
jl
mov
int
dec
dec
scas
mov
repz
test
cs
sti
sub
sbb
aaa
xor
xor
iret
and
adc
dec
jp
pop
push
mov
mov
icebp
aad
pop
cmp
cli
push
aad
xor
push
imul
test
cmp
lock
adc
mov
je
sub
mov
inc
pop
dec
pop
sti
adc
jge
scas
outsb
test
sarb
mulb
mov
aas
out
dec
lret
insb
fildl
inc
mov
inc
lret
nop
jge
test
dec
mov
cmpsl
mov
add
mov
push
xchg
arpl
pushf
xchg
pop
pop
sarl
lahf
lcall
jns
popf
jecxz
lcall
pop
jbe
les
negl
sti
sbb
adc
mov
sbb
aas
mov
push
in
outsb
hlt
and
add
pop
jmp
cmp
jecxz
pop
js
ss
jne
arpl
fistpl
pop
xchg
push
mov
clc
insb
fcmovbe
push
cmc
xchg
push
xor
in
roll
test
into
imul
fs
pop
dec
and
mov
dec
mov
fnstsw
test
roll
cmpsl
ret
push
mov
mov
rorl
and
out
aaa
add
fcomps
imul
add
shrl
cmp
push
jp
push
iret
adc
mov
fwait
add
cltd
std
lcall
insl
adcb
or
es
data16
xchg
enter
push
test
add
mov
mov
xor
pop
js
jecxz
stos
pop
xor
jg
inc
pop
inc
adc
add
aad
dec
clc
or
dec
mov
into
rcll
stc
stc
or
out
xor
iret
ret
testb
dec
jns
test
dec
adc
hlt
movsb
lret
adc
add
out
mov
or
lahf
dec
cmova
xor
pop
push
cmc
negl
movsb
call
sub
mov
fnsetpm(287
sub
xchg
dec
lods
ljmp
dec
jb
xor
pop
and
call
xchg
idiv
pop
mov
sbb
cmp
lock
and
aas
mov
or
jge
sub
and
pop
lock
mov
ljmp
lcall
lock
mov
ret
xor
mov
testb
push
call
stc
xlat
shll
movsl
mov
and
mov
add
shll
push
push
cmp
scas
adc
sub
pop
sbb
sbb
out
in
or
and
xchg
sub
mov
nop
out
movsl
pop
pop
add
cltd
push
outsl
xor
push
cmpsl
inc
xor
adc
xchg
jecxz
popa
test
add
sub
aam
fmul
sub
and
mov
and
add
and
mov
or
aad
xlat
ret
add
sub
icebp
out
inc
out
push
popf
gs
xchg
rcll
mov
loop
sub
mov
push
cmp
lahf
pop
push
or
testl
test
or
mov
neg
mov
cmp
lret
mov
adc
arpl
pop
ret
lods
push
push
repz
sbb
jp
stos
lret
cmpsb
jno
mov
push
mov
subl
ss
xor
es
xchg
and
into
test
adc
subb
sbb
add
mov
jg
and
mov
rol
test
xor
mov
les
shl
mov
fwait
push
enter
mov
xlat
mov
push
lods
mov
pop
cld
add
fcomps
or
out
pop
cwtl
test
pop
icebp
mov
xor
stos
fdivl
test
nop
or
sbb
adc
mov
std
scas
mov
sbb
fdivrs
pushf
or
inc
jmp
push
and
and
inc
ret
cmp
pop
jmp
sub
adc
test
inc
out
shlb
jp,pn
jmp
sti
bound
ja
ja
or
xchg
inc
cmpsl
leave
in
pop
push
outsb
fadd
nop
int
push
cmp
ljmp
jbe
sahf
add
sbb
pop
jge
pop
adc
bswap
imul
jp
test
int3
push
mov
inc
push
mov
add
mov
jns
mov
dec
xor
fucomip
mov
mov
dec
seto
mov
cmpsl
mov
inc
xchg
jb
cltd
push
push
popa
pop
out
push
and
jl
out
and
or
cwtl
sbbb
jl
lcall
nop
in
push
es
cmp
cmpb
repnz
fwait
lahf
lods
push
aas
subl
adc
test
mov
insl
mov
es
xchg
pop
fsubp
push
cmp
mov
clc
test
push
push
sub
js
push
add
pop
orb
inc
sahf
or
int3
cmpsl
cmp
or
in
std
jnp
jnp
sbb
cmp
adc
dec
adc
lock
jmp
dec
jmp
jo
iret
addb
in
dec
enter
js
leave
inc
out
xor
lods
adc
pop
scas
adcb
xor
sbb
add
push
arpl
mov
xor
push
pop
adc
test
or
mov
fidivs
dec
out
mov
xchg
xchg
cmp
add
pop
pusha
push
mov
in
loopne
mov
fisttpl
push
and
sub
repz
jl
leave
lret
mov
inc
pop
push
lea
adc
xor
adc
fistpl
inc
mov
pushf
sbb
add
mov
fcmovnbe
push
inc
cmpsl
mov
sti
push
repz
mov
pop
lods
inc
fstl
mov
movsb
push
loopne
jecxz
jbe
jns
jbe
mov
arpl
aad
out
rcrl
pop
jo
gs
pop
push
push
inc
jno
xor
sub
mov
add
fs
test
mov
pop
cmpsl
popf
add
mov
ja
ja
jmp
pop
movsb
mulb
fwait
cltd
insb
push
lret
sub
adc
loopne
nop
xor
loope
mov
stc
or
mov
fsubs
pusha
mov
cmp
mov
add
mov
testb
inc
add
xor
xor
sbb
xor
daa
mov
shrb
in
ds
loop
push
add
jae
nop
outsl
mov
xor
pop
mov
jne
imul
sub
leave
imul
mov
addl
sbb
ret
cli
dec
mov
cld
andb
adc
addr16
adc
pusha
out
sub
xchg
call
jmp
jmp
xchg
aaa
loope
cltd
scas
sub
push
leave
and
out
int3
idivb
sub
push
js
mov
xchg
push
mov
pop
mov
mov
nop
dec
out
cmpsl
adc
enter
sti
ljmp
xor
stc
fwait
add
lret
ss
jmp
xchg
mov
and
sub
test
pop
das
cmp
imul
mov
stc
lahf
movsl
and
or
shlb
test
cmpsl
shrb
adc
add
ljmp
sbb
loopne
cld
cltd
push
fwait
inc
iret
aad
xor
jns
rorb
jne
jge
ss
sub
push
jecxz
xchg
jle
cwtl
mov
aaa
repnz
fwait
mov
pop
ds
dec
xor
push
test
inc
in
mov
rcll
jp
or
add
jnp
fwait
jge
adcl
mov
aaa
cltd
cltd
das
lret
mov
jno
or
imul
insl
test
std
cmpb
ret
imul
icebp
xor
test
push
sub
jge
fisubrs
and
fdivl
stos
daa
gs
cmp
iret
enter
dec
xchg
test
cld
mov
fildl
loop
sub
pop
and
pop
dec
mov
je
mov
push
jb
xchg
es
mov
aas
pop
add
pop
les
adcl
add
ja
or
out
test
add
loope
add
js
ljmp
cmp
popf
decl
dec
cmpsl
icebp
push
sub
mov
repnz
mov
and
in
mov
roll
jge
lods
jbe
movsl
add
dec
fnstcw
jge
daa
dec
adc
adc
call
ret
mov
add
lahf
mov
mov
ljmp
ja
stc
push
fldenv
push
pop
mov
xor
mov
cs
push
inc
shlb
sahf
sti
insb
pop
mov
iret
test
lcall
jmp
imul
pop
push
mov
fldl
loop
lahf
inc
mov
addl
dec
adc
std
mov
outsl
xchg
sahf
into
pop
jbe
xchg
push
cltd
imul
jecxz
xchg
mov
fisttpll
ror
pop
test
mov
jo
lock
xchg
mov
out
xchg
dec
insl
lods
xchg
cmovs
cmp
in
xlat
inc
adc
cmp
xor
movsl
mov
fwait
pop
repz
jns
dec
addb
jge
mov
stos
push
pop
es
sbb
sbb
call
cmp
pop
sub
xor
xchg
xorl
mov
aas
sbb
cltd
xchg
and
pop
push
mov
movsl
jp
pop
sti
xor
rdmsr
and
dec
push
push
popf
jle
fldt
mov
aam
inc
leave
mov
jae
xchg
stos
std
jne
push
and
and
mov
rclb
mov
dec
aaa
decb
fldenv
fistpl
lea
ss
lea
nop
imul
out
shlb
jne
shrl
add
push
xor
cmp
push
mov
sbb
leave
xor
fidivrs
pushf
out
inc
mov
les
dec
mov
or
pop
popa
aaa
dec
loopne
and
sub
sub
push
jecxz
mov
sbb
fsubr
ret
push
xchg
in
leave
cltd
mov
les
shlb
inc
rorb
popa
and
call
push
add
xor
popf
in
push
mov
dec
pushf
adcb
int
lret
xchg
pop
ret
in
xor
cmp
cmpsb
leave
stc
mov
sub
pop
mov
dec
loopne
pop
addb
sarb
push
mov
mov
mov
inc
xor
scas
push
xor
cmpsb
cld
jb
out
xchg
cmp
lcall
fmul
adc
mov
fwait
jmp
pop
test
cmp
loopne
jmp
xor
jo
dec
inc
dec
or
xchg
in
mov
lret
aad
xchg
push
daa
jg
lcall
gs
sbb
ja
lcall
xorb
loopne
sbb
divl
push
pop
daa
mov
xor
and
push
jle
stc
iret
jbe
or
ss
inc
fwait
dec
adcl
cli
and
xchg
outsl
pop
cwtl
fwait
push
inc
sub
fs
mov
imul
outsl
push
push
lock
push
das
mov
adc
jecxz
iret
inc
shll
stos
pop
push
popa
adc
push
test
daa
bound
mov
dec
adc
outsb
sub
ret
pop
mov
lcall
push
lock
stos
mov
or
adc
cmp
iret
mov
add
insl
mov
jl
test
xchg
xchg
call
stos
popf
ret
pop
shlb
dec
add
idivl
mov
xchg
xor
sbb
pop
cmpsb
sub
rcll
leave
and
rclb
insl
popa
mov
cmpsb
out
inc
inc
ret
mov
add
pushf
fwait
data16
aas
je
lahf
lret
fstps
fildl
mov
mov
stos
bound
lret
iret
out
adc
mov
jecxz
test
lahf
ret
push
sbbb
fidivrs
mov
das
pop
sbb
aad
add
dec
mov
push
cwtl
stc
and
fs
and
fidivs
jbe
inc
jle
mov
je
lods
adcl
xchg
cltd
hlt
ljmp
pop
jbe,pt
loopne
push
fwait
mov
jmp
mov
lea
shlb
scas
rorb
aas
outsb
push
sub
mov
test
les
xchg
insb
lahf
imul
pop
dec
mov
std
xchg
cltd
pop
shrl
das
loop
dec
cmpl
fdivr
shl
cmp
xorb
lods
pop
orl
cmc
ffreep
lock
inc
mov
repz
adc
pop
fwait
jge
insl
add
xchg
shlb
mov
sub
outsb
sbbl
out
jns
adc
es
adc
std
lret
rorb
xlat
and
in
mov
adc
daa
jle
jns
jmp
pushf
mov
mov
mov
xor
fists
test
ljmp
cli
inc
std
mov
mov
in
aaa
jl
stos
test
stc
rolb
repz
mov
jae
xchg
add
imul
sahf
nop
test
icebp
inc
jns
cmc
mov
inc
mov
out
dec
es
mov
pusha
in
mov
push
adc
data16
add
je
cmp
dec
negl
pushf
push
orb
iret
jge
mov
mov
in
pop
push
jbe
mov
xor
sbb
lret
arpl
and
mov
sbb
mov
fistl
cmpsl
loope
stos
push
inc
cmp
fwait
sub
jae
jb
je
insl
or
xor
mov
int
push
pop
pop
out
cmp
leave
fdivl
jb
aad
add
jecxz
add
cmp
xchg
sub
push
jo
fisttpl
or
dec
jne
out
test
add
lds
inc
mov
je
and
dec
jae
push
jecxz
cmp
xorl
sti
int
dec
add
push
sar
adc
xchg
xlat
imul
push
mov
push
fcmovnb
lcall
js
out
stos
stos
lret
imul
rcrl
int
adc
mov
xchg
adc
cli
incb
dec
add
repz
pop
push
iret
xchg
push
notl
insl
push
mov
and
das
ret
cmp
test
test
mov
adcl
orl
xchg
cmp
jge
and
in
loope
notl
fs
fldcw
push
push
pop
push
cmp
dec
sbb
dec
movsb
divb
scas
testb
and
imul
addr16
lcall
push
xor
add
outsb
aaa
leave
scas
xor
pop
call
push
jle
push
or
nop
sbb
imul
in
sbb
clc
jbe
ss
stos
das
lret
xchg
lds
int3
cmp
in
sub
lods
or
dec
add
push
push
aad
lret
lahf
aas
aaa
pop
fs
pop
adc
in
mov
pop
leave
sbb
mov
xchg
std
jp
in
mov
mov
sbb
xor
and
fsubs
sub
es
inc
movsb
subl
push
call
sahf
leave
jg
and
aas
lea
sbb
inc
jo
movsl
jp
cmp
lret
movsb
or
mov
repz
vprotd
frstor
sub
lret
lcall
aam
mov
push
mov
sbb
mov
lds
mulb
nop
inc
mov
xchg
and
adc
mov
dec
lds
in
dec
mov
sahf
mov
push
leave
movb
test
dec
jno
or
push
arpl
push
fstps
adc
mov
mov
inc
mov
shrl
je
fimull
loope
xchg
test
popf
scas
and
pop
xor
dec
arpl
inc
add
jno
mov
mov
adc
xchg
leave
pop
out
add
frstor
xchg
insb
mov
ficoms
and
lcall
inc
clc
jp
cmp
out
scas
lods
das
test
inc
out
out
testb
cli
shl
sub
jnp
mov
addr16
adc
mov
lcall
push
push
movsb
pop
in
xor
jne
mov
in
mov
xor
mov
push
movl
jnp
push
fcoml
adc
icebp
lret
rorb
sar
in
addr16
xchg
mov
jbe
pop
out
test
dec
adc
dec
out
and
pop
mov
nop
and
int3
or
jae
push
push
je
xchg
ret
push
cmpb
dec
mov
cmpsb
insb
jne
adc
movsl
xor
inc
dec
sbb
nop
nop
movsb
icebp
popl
pop
in
sbb
out
arpl
mov
sbb
enter
aas
mov
push
divl
imul
cmp
out
pop
es
jbe
daa
negl
cmpsb
std
push
aas
mov
xchg
add
add
lds
cmp
cmp
cmc
xor
das
xor
jns
sbb
mov
mov
mov
xchg
adc
rclb
imul
adc
mov
loope
adc
call
xlat
cmp
fs
and
scas
mov
pushf
xchg
popl
sub
out
xor
add
cmc
fidivl
cwtl
daa
fimuls
dec
scas
sbb
jne
dec
mov
sbb
iret
clc
out
inc
mov
out
pusha
adc
enter
sbb
jmp
dec
adcb
jl
ret
cmpsb
aaa
xor
sbb
insl
pusha
out
xchg
jae
xor
fld
mov
imul
ja
mov
inc
pop
jae
or
jne
inc
mov
inc
sarb
lods
outsl
das
aas
lods
xor
les
nop
pop
pslld
aad
add
hlt
nop
ds
scas
add
gs
je
testl
push
sbb
test
xor
adc
xor
xchg
movsb
jbe
pop
mov
mov
mov
and
mov
or
les
lods
repnz
sbb
popf
push
in
xchg
cs
ret
inc
sbbb
or
ret
inc
scas
mov
mov
test
movsl
cmpsl
push
sbb
adc
pminub
lock
adc
mov
jnp
sub
fwait
popa
dec
sub
out
loopne
aas
dec
jo
xchg
insb
in
fsubrs
nop
stos
scas
dec
jae
pop
fwait
lea
push
jbe
lret
sbb
xor
jecxz
or
jmp
adc
mov
xchg
pop
xor
and
shll
sbb
subb
ds
pop
mov
pop
stos
adc
jmp
vmovdqa
stc
aas
cmc
mov
push
adc
mov
jg
push
jle
daa
jae
in
xchg
ljmp
sbb
add
adc
loope
jmp
jl
das
in
dec
dec
test
movsb
push
push
test
stos
test
andb
lret
test
cmp
add
cmp
shlb
push
out
movsb
mov
in
pop
jns
mov
cmp
sbb
aas
mov
or
and
and
mov
mov
jae
xor
inc
xlat
pop
ret
cli
out
shlb
xor
jbe
pop
jae
push
cwtl
cmp
push
dec
or
fnsave
mov
shll
pop
out
mov
inc
jmp
push
jmp
js
in
in
aas
lods
arpl
sti
imul
dec
adc
xchg
mov
jns
scas
pop
repnz
aas
shr
out
push
scas
pop
ret
cmp
pop
mov
jl
xchg
cmp
push
jecxz
xchg
test
adc
aam
ret
pop
imul
in
das
mov
inc
ljmp
clc
stc
adc
xchg
mov
sbb
adcl
mov
test
sub
out
mov
inc
lea
xchg
cmp
or
pop
mov
and
dec
mov
out
int3
repz
dec
sbb
mov
add
loope
add
pop
in
jecxz
xlat
ljmp
scas
outsb
adc
sbb
dec
das
xchg
or
lods
or
jns
ljmp
lds
pop
icebp
cmovs
add
pop
cmpsb
inc
fisttpl
loopne
lret
ja
inc
sub
gs
mov
notb
and
xchg
push
jmp
xchg
fs
mov
adc
add
out
loop
jp
out
rorl
mov
rolb
adc
repnz
scas
xor
and
lret
push
push
mov
mov
fcompl
les
sbb
sbb
sbb
cld
std
push
mov
cmpsb
shl
xchg
inc
insb
and
std
subl
xchg
cmpsb
cmpb
xchg
insl
je
inc
pop
dec
sbb
scas
and
xchg
adc
clc
icebp
fcomp
icebp
jp
sbb
mov
ss
push
xor
nop
fs
insl
mov
adc
sbb
call
fwait
shl
out
cli
cmc
fcmovbe
push
cmp
push
push
mov
mov
or
outsl
lods
jnp
sti
or
addb
jp
hlt
aam
adc
dec
nop
adc
jle
mov
pop
lcall
mov
push
push
incb
xchg
mov
xchg
jmp
arpl
mov
inc
push
repz
lods
popl
stc
filds
outsb
je
push
add
cmc
or
stos
jae
jo
jae
cs
dec
dec
jmp
test
popf
sahf
adc
xor
mov
mov
outsl
sbb
divb
cmpl
out
adc
scas
cs
mov
adc
cmp
pop
into
stos
cmp
pop
mov
pop
int
xchg
adc
pop
test
cwtl
push
mov
mov
cmp
push
dec
push
cmpl
mov
idivb
icebp
push
cmp
jg
or
divl
xor
xchg
jl
filds
push
movsl
notb
inc
ja
rorb
ret
sbb
adc
mov
pop
ja
pop
or
push
int
and
ds
popa
xor
pop
das
clts
popl
inc
sbb
call
filds
and
jne
in
stc
ljmp
push
les
mov
mov
mov
aaa
lds
aas
jmp
cmp
fdivs
jmp
jl
dec
mov
xorb
mov
xor
in
jecxz
shll
or
repnz
pop
inc
movsl
dec
jb
dec
cld
push
xchg
mov
or
fwait
adc
sbb
xor
mov
pop
push
cmp
adc
jne
dec
mov
jge
sbb
insl
pop
aam
adc
inc
xchg
push
loop
or
push
sub
cwtl
int3
dec
imul
inc
scas
hlt
mov
outsl
pop
sub
out
stc
mov
test
das
xor
xlat
dec
mov
mov
mov
push
pop
lret
add
push
sub
and
lea
mov
test
testb
repz
dec
test
mull
nop
cmp
or
aad
pop
loopne
sbb
mov
xchg
cmp
push
push
lahf
and
ret
std
xor
out
fmuls
stc
mov
repz
mov
fs
arpl
jl
pushf
mov
mov
dec
mov
push
pop
aaa
das
sar
mov
aas
jns
inc
mov
popa
insl
xor
pop
mov
mov
push
jp
adc
xor
jmp
js
inc
pop
sub
clc
dec
ret
adc
aaa
jbe
call
and
clc
out
sub
inc
test
enter
adc
cmpsb
mov
fsubs
push
and
dec
lds
pushl
xlat
stos
xlat
pop
out
cmp
xchg
jns
sti
mov
cmp
rcll
mov
mov
pop
sub
pusha
xlat
out
adc
jmp
mov
roll
mov
jne
xchg
arpl
mov
aam
fcomps
out
scas
fisubs
mov
sbb
pop
loope
inc
push
hlt
out
loopne
pop
jle
cmc
mov
inc
add
gs
xchg
rorl
and
rdtsc
cld
dec
aas
adc
ja
fs
mov
xchg
adc
into
adcl
loopne
popf
fsubrs
mov
adc
in
dec
jl
mov
arpl
test
shrl
push
fisubs
mov
and
pop
insl
mov
or
adc
or
scas
mov
cmp
pushf
jg
sbb
lds
or
ret
lret
imul
pop
loop
movsb
dec
fldcw
jg
ja
mov
inc
lret
xchg
repnz
adc
sub
sub
addb
and
push
xchg
aam
cmpsb
aaa
in
stos
cltd
sub
pop
push
cmpsl
adc
dec
mov
lds
es
push
mov
loop
adc
fs
add
mov
scas
verw
lahf
adc
test
sbb
movd
push
mov
lret
mov
adc
hlt
cmpl
cli
mov
jns
sub
jo
pop
dec
data16
mov
xor
inc
in
adc
movl
outsb
or
lock
in
adc
lods
push
pop
cmpsb
xchg
mov
in
and
sbb
aam
cld
insb
pop
mov
push
imul
pop
sub
add
cmpsl
pop
jb
jo
mov
cltd
adc
scas
dec
mov
mov
fadds
jp
jle
sbb
mov
scas
jecxz
pop
sahf
xchg
push
outsb
jmp
jnp
cmp
xchg
sbb
daa
jno
mov
fidivrl
push
sub
imul
cmp
lret
and
jmp
sbb
mov
notb
ss
or
or
jl
push
lock
mov
mov
imul
int
xchg
inc
mov
inc
js
dec
movsb
add
test
in
mov
mov
cli
dec
push
aaa
sub
xor
int
cld
outsl
xor
pushf
arpl
sub
fcmovnbe
in
inc
ljmp
mov
and
inc
shlb
pop
pop
fisttpl
xor
sahf
rcl
push
out
popf
cmc
and
xlat
mov
cmp
xchg
jnp
imul
pop
ja
sbb
gs
adc
xchg
popa
xor
das
add
loope
jbe
xchg
test
in
mov
insl
out
add
cmc
mov
jle
lret
and
addr16
xchg
push
call
push
jne
jmp
fxtract
cmpsb
js
jge
and
outsl
ds
or
repz
mov
inc
in
push
loop
int3
nop
xchg
incb
dec
pusha
ret
imul
jns
mov
lds
xchg
leave
pop
or
jmp
xchg
inc
cli
test
mov
and
dec
sbb
mov
and
cld
cmp
ljmp
lds
cmp
xlat
shll
add
add
mov
mov
aam
addr16
jg
inc
js
leave
jnp
lcall
loope
roll
mov
dec
jb
loope
xor
test
xchg
sahf
xchg
inc
sub
jno
movsl
xor
out
push
jbe
scas
fisttps
std
int3
in
mov
lahf
add
mov
jb
mov
sbb
mov
xchg
add
xor
pop
stc
js
call
pop
hlt
pop
inc
out
jae
rolb
mov
mov
pop
test
xor
out
xor
pop
mov
cmp
in
insb
rolb
mov
and
sub
cltd
and
jno
int3
inc
adcl
lret
xor
and
jle
sbb
or
daa
mov
iret
std
mov
sub
or
daa
fwait
inc
outsl
push
cmp
dec
add
sbbl
jecxz
mov
scas
xorb
lods
fcomps
push
cs
je
add
pusha
jp
inc
or
pop
scas
xchg
and
ret
mov
jg
cmpsb
add
mov
sahf
cli
mov
xchg
cmpsl
push
mov
push
pop
psubsw
cmp
test
cmp
arpl
adc
mov
clc
out
xor
notl
fwait
loope
icebp
mov
dec
fsubl
loope
xchg
lret
mov
inc
xor
lret
jge
xor
and
xor
inc
jmp
dec
mov
pop
or
dec
add
hlt
call
xchg
sub
jle
dec
movsl
fcoml
xor
inc
stc
rclb
jl
wbinvd
shrb
nop
movsl
push
sub
das
add
out
ja
sbb
mov
inc
out
popa
mov
jbe,pt
pop
push
orb
xchg
ds
mov
cmpl
cmp
mov
fists
cmp
push
jb
xchg
lahf
ret
sub
js
mov
add
cmpsb
cmpsb
loopne
adcb
jnp
jne
add
test
mov
test
es
mov
mov
fisttpll
subl
push
test
xchg
cmovs
ret
mov
fwait
push
push
lods
iret
lods
jg
pop
mov
xor
ret
repz
insb
and
clc
lcall
movsb
pop
fdiv
add
and
aas
cltd
mov
rorb
cmp
dec
shrb
mov
or
add
adc
insb
sbb
stc
pop
inc
push
dec
mov
mov
inc
cmp
mov
test
cld
popa
dec
mov
sbb
sub
dec
fists
or
push
cmpsb
clc
bound
inc
or
out
mov
int3
popa
push
test
pop
and
shl
ret
adc
ret
in
jmp
iret
sub
in
mov
xchg
icebp
jne
ret
jns
mov
fldenv
cmpsb
sbb
fcoml
pop
shll
jmp
out
pop
movsb
dec
inc
jl
rorb
jge
sub
loop
pushf
call
negb
ljmp
pop
fildll
or
sub
push
sti
shl
das
jb
push
xchg
cmc
leave
push
mov
mov
test
mov
sub
into
add
lock
stos
cmpb
xor
cli
pop
stc
mov
mov
sub
fildll
xor
add
stos
pusha
scas
scas
dec
lods
sbb
jno
jmp
push
adc
sub
push
xchg
xchg
push
outsl
cli
push
sub
nop
or
daa
jne
out
cmp
test
dec
call
lock
sub
mov
sub
sti
js
xchg
mov
mov
lret
sub
int
jae
fwait
mov
cmp
pop
cmpl
add
and
push
arpl
jnp
xbegin
out
loopne
js
cmp
adc
and
mov
sub
in
fwait
jge
je
jne
icebp
mov
lock
mov
ljmp
or
mov
jp
jno
aad
inc
cmp
ljmp
or
xchg
xchg
ret
fwait
or
dec
xchg
lea
lods
sbb
cmpsb
sti
subl
push
fstl
cs
sub
adc
sahf
xchg
pushf
repz
jle
subl
xlat
lret
ret
jo
ret
jmp
pop
pusha
mov
stc
push
psubusw
adc
adc
in
lcall
mov
mov
das
adc
xlat
jo
and
cs
out
movsb
add
sbb
xchg
aaa
sbb
iret
mov
or
rcrl
add
nop
sub
adc
cmp
and
rclb
cmc
rcll
repnz
fiaddl
cmpsl
cmpb
dec
fwait
stc
arpl
and
repz
mov
bound
mov
inc
xchg
cmp
js
or
pop
adc
cwtl
fnstenv
mov
cwtl
xchg
rorl
inc
js
lods
lods
mov
pop
jne
push
test
fsubl
loopne
adc
mov
jno
sbb
neg
dec
mov
and
pop
cs
test
out
inc
xor
xchg
or
xor
in
jae
sub
stos
cs
mov
sbb
add
sbb
loope
jo
mov
outsl
mov
gs
aam
mov
aaa
js
in
leave
mov
int
pop
mov
jne
pop
dec
xchg
into
inc
sbb
jb
jle
clc
mov
sbb
lock
pop
outsl
xor
mov
jne
sub
imul
push
push
xchg
fs
sti
mov
fisubs
adc
ret
sub
dec
lock
cmc
xchg
fstp
and
xor
push
test
push
call
push
sti
add
mov
adc
jge
jmp
cmp
int3
jg
xchg
sub
dec
fidivrs
dec
in
sarb
xor
orb
sub
adcb
pop
jne
cmp
sub
sti
arpl
ljmp
ficompl
jae
stc
pop
test
pop
pop
adc
das
pop
pushf
jno
push
pop
clc
pop
adc
pop
icebp
xchg
xchg
clc
jmp
adc
xchg
je
jns
add
fbstp
in
ficomps
pop
scas
out
mov
add
push
arpl
js
mov
into
adc
rol
push
fwait
test
jo
ljmp
mov
stc
rorl
xorb
mov
push
cmc
add
repnz
add
dec
sbb
dec
cwtl
ret
dec
repnz
aad
scas
add
mov
add
add
cltd
fisubs
cmp
mov
push
outsb
fildll
jo
xor
mov
adc
out
inc
adc
inc
dec
jecxz
sub
jns
pop
dec
inc
lahf
and
sub
inc
insb
outsb
rorl
addr16
mov
out
mov
lahf
int3
cli
mov
mov
adc
inc
gs
icebp
pop
test
push
cmpsb
inc
xor
and
mov
xchg
inc
daa
cs
xor
pusha
sub
jl
pushf
aam
xchg
inc
ds
pop
into
cmp
int
mov
inc
or
lock
mov
test
movsl
inc
ds
je
add
rep
cld
push
push
fwait
jbe
push
cmp
sarb
jo
filds
js
es
rorl
and
insb
pushf
lods
add
lods
repz
and
jecxz
sub
test
push
loope
xchg
dec
js
xor
fdivl
jle
add
sbb
into
arpl
mov
dec
outsl
push
cmp
sub
mov
or
movsl
and
cmpb
and
push
add
sub
in
mov
and
xor
hlt
aam
mov
adc
fsubl
jno
hlt
int
mov
xor
imul
mov
xor
adc
hlt
test
inc
mov
add
push
and
pop
out
arpl
mov
js
push
push
insb
push
shr
adc
cli
imul
hlt
jbe
pop
ja
lcall
mov
jle
xchg
in
xchg
rolb
mov
popf
pop
jecxz
mov
pmaddwd
sbbl
cmp
arpl
js
lcall
fbstp
shl
gs
mov
dec
mov
dec
fstpl
cmp
stos
pop
xchg
dec
inc
test
mov
xchg
inc
lods
rcr
inc
xchg
jle
mov
rorb
lods
xchg
in
popf
movsl
push
mov
and
arpl
dec
mov
or
orl
pusha
arpl
and
mov
dec
xor
jnp
out
cmp
scas
out
push
xor
push
cmp
adc
push
fsts
sbb
stos
rcrb
out
mov
incb
inc
popf
daa
scas
add
loop
leave
mov
mov
lods
fdivrl
stos
sahf
push
cmpsl
jl
call
xchg
gs
mov
dec
outsl
arpl
mull
sbb
ds
in
push
mov
je
stc
jbe,pn
mov
adc
push
jge
pop
xor
sbb
jmp
cmp
push
mov
inc
and
into
iret
call
mov
fmulp
stc
bound
ds
lahf
jle
cmp
xor
in
mov
inc
out
mov
fcomps
inc
ror
or
fcmovnbe
adc
jae
sahf
int3
insl
or
inc
adc
popf
and
sbb
gs
ds
stos
pop
add
push
in
xchg
push
sbb
je
xor
push
xchg
adc
xlat
mov
lods
jo
add
jecxz
imul
pop
orl
cmp
xor
jge
sbb
inc
xchg
push
test
imul
fsubr
jns
pop
pop
dec
bound
test
outsb
aam
mov
int
cmp
dec
aad
int3
sbb
popa
subl
repz
call
cmp
sub
sbb
rcrb
sub
cmp
scas
fwait
mov
adc
or
popa
out
push
repz
mov
dec
adc
pop
inc
cwtl
outsb
gs
subb
push
push
xchg
icebp
push
fwait
mov
pop
cmp
leave
inc
jb
lcall
push
repnz
pop
cmpsb
test
push
pop
movsb
mov
lea
push
jge
mov
inc
cltd
repnz
lds
jo
fistpll
adc
xchg
shlb
jmp
adc
cli
movsl
fwait
cltd
in
push
ret
dec
dec
sub
push
add
fldt
mov
lods
in
arpl
cmovns
mov
mov
lcall
fists
sbb
xor
pop
dec
cmp
pop
add
add
cmc
ja
test
sub
dec
sub
pop
mov
pusha
push
in
xchg
add
xchg
xchg
push
xchg
pop
js
call
jb
xor
fwait
orb
mov
mov
jo
bound
dec
out
pop
mov
mov
dec
cmc
push
or
add
mov
mov
leave
and
jmp
and
mov
pop
add
js
dec
cmp
fs
mov
lret
icebp
mov
mov
jge
cltd
cmp
jge
cmp
sbb
lahf
mov
ljmp
fisubs
and
pop
jnp
lret
lahf
xchg
inc
mov
pop
test
scas
xor
mov
xor
cmpsl
sbbl
mov
pop
xchg
ret
mov
mov
xchg
lahf
jecxz
inc
jne
xor
pop
push
xor
sub
loop
push
dec
repz
cmp
aad
pop
movsb
push
inc
dec
mov
jp
mov
fsubl
roll
xor
mov
mov
popf
cmpsb
lahf
fadds
and
pop
add
lea
or
cs
out
mov
pop
xchg
fs
sbbl
ret
ficompl
movsb
jne
pusha
or
gs
repz
inc
sub
clc
dec
stos
jne
and
aas
add
adc
jns
cwtl
and
add
mov
shl
jns
fsubl
sbb
pop
jp
sub
out
mov
mov
push
and
loope
ss
ss
loope
xchg
ss
sub
and
rolb
stos
sahf
sbb
js
pop
js
out
fsubrp
jb
leave
flds
mov
lret
out
dec
push
adc
push
sbb
into
lods
adc
or
mov
push
adc
notl
add
fldl
add
xchg
fstl
call
cmpsl
xor
outsl
inc
ret
call
jb
push
inc
jnp
dec
xchg
inc
stc
jg
push
pop
flds
lock
movsl
inc
mov
pusha
lock
jge
push
popf
call
ss
dec
mov
adc
repnz
das
mov
sub
sub
ret
dec
es
pop
mov
mov
fs
aad
fucomi
std
sub
pop
lret
clc
imul
inc
aas
mov
xchg
pop
mov
xlat
cld
sub
push
out
shrd
and
mov
or
add
stos
scas
ret
sbb
les
jne
ljmp
hlt
jns
cmp
mov
cmp
and
xchg
mov
in
stc
or
rcll
inc
test
mov
mov
incb
mov
pop
lods
sub
mov
pop
repnz
pusha
push
jg
daa
add
mov
pop
jns
lock
mov
loop
jg
xor
data16
rclb
shl
popa
jbe
mov
jnp
rcrb
movsb
mov
jge
aas
ss
sub
and
fdiv
inc
lcall
insb
loop
les
sbb
addl
push
push
mov
pop
xorl
cmp
mov
inc
cli
mov
xchg
jmp
daa
orl
insb
test
loop
xchg
add
inc
sub
add
jns
dec
pop
lea
mov
xchg
push
mov
fwait
cmc
lret
mov
push
cmc
stos
sub
sbb
inc
add
mov
mov
adc
sbb
cmpsl
cmpsb
bound
push
push
push
cmpb
adc
testb
repz
dec
push
js
xchg
mov
cld
xchg
and
cmp
sbb
or
scas
das
repz
jl
test
inc
or
sub
pop
call
daa
mov
mov
or
mov
arpl
push
sbb
sbb
stos
repz
call
and
xlat
scas
loope
sbb
addr16
mov
ret
xor
out
dec
mov
fstpl
jg
aad
adc
xchg
xchg
outsl
xor
xchg
sub
jbe
or
mov
daa
push
mov
nop
dec
lahf
cltd
dec
std
lds
jb
gs
iret
lea
mov
fcomps
push
push
jl
mov
mov
repnz
adc
adc
jl
mov
cld
push
enter
jo
mov
mov
stos
xchg
movsb
iret
cli
movsb
mov
pusha
xchg
inc
call
into
jbe
aam
sub
jnp
jnp
insb
sahf
call
fiadds
lods
sub
cmp
xor
popa
xchg
scas
insb
add
push
push
das
cld
pop
fmull
addr16
mov
mov
jnp
fwait
inc
pop
pop
shll
out
ret
stos
pushf
cmp
jns
jne
pushf
xchg
mov
mov
mov
jle
mov
fyl2x
mov
cmp
xchg
rcr
test
inc
cmp
popf
mov
int3
xchg
cmp
fildll
js
enter
mov
les
repz
imul
adc
cmp
jnp
enter
ss
mov
fldl
iret
leave
push
dec
mov
mov
mov
js
xchg
inc
mov
vcmppd
pop
mov
imul
adc
movsb
add
sbb
aad
icebp
inc
push
leave
jnp
xchg
int
sbb
js
and
xchg
sbb
fwait
push
daa
out
cmp
shlb
fcoml
inc
pop
aam
jb
imul
xor
mov
sbb
adc
ss
add
push
mov
sub
inc
daa
in
dec
mov
sbb
lahf
subl
hlt
lret
outsb
clc
mov
mov
maxps
jnp
add
sbb
jg
mov
mov
push
mov
inc
mov
ficompl
mov
and
repnz
notl
loope
inc
pop
outsb
cwtl
adc
out
cmpsl
cmp
adc
sbb
mov
in
mov
les
sub
in
sarl
cli
pop
in
push
test
adc
aam
add
sub
sub
mov
ja
cli
cwtl
mov
and
xchg
jae
cmp
xchg
std
pop
std
cs
sub
xchg
fdivr
cmp
out
add
lret
cmpsb
jp
mov
das
bound
push
inc
rclb
sbb
push
popa
test
push
jne
mov
jae
nop
cmpsb
mov
push
xor
movsb
es
hlt
mov
mov
xchg
xchg
nop
cwtl
xchg
add
jl
pop
ljmp
xchg
stos
adc
je
ret
mov
out
incb
cmpl
in
and
lea
jns
jp
pusha
sbb
push
push
inc
pop
out
popf
push
js
dec
cltd
sti
out
mov
loop
jl
add
pop
cli
loop
test
push
stos
mov
add
push
not
sub
xchg
fdivl
ret
mov
std
fnsave
fbld
insb
xorl
mov
add
sbb
aam
ret
xchg
push
jno
insl
xchg
xchg
jns
lock
xchg
int
mov
outsl
sub
xchg
call
lods
out
popa
es
push
inc
imul
je
xchg
fwait
add
mov
xor
push
jl
fsubl
mov
add
push
repz
inc
push
xor
out
mov
fisubs
sub
enter
pcmpgtw
cwtl
add
mov
sub
add
mov
or
pop
or
ret
fsubr
inc
add
sub
push
mov
push
addr16
sti
std
mov
pop
mov
hlt
dec
jp
jecxz
scas
scas
bound
adc
sbb
jb
in
cmp
mov
inc
iret
xor
inc
mov
or
sbb
pop
lods
call
mov
mov
inc
sbb
cs
fistl
fdivl
add
aad
ret
inc
js
jmp
lahf
cmpsl
js
jp
add
imul
fs
daa
cmpb
xlat
jbe
in
mov
out
dec
ss
loope
cld
jno
ja
das
mov
cmp
and
jno
cwtl
jo
xchg
out
sbb
mov
sbb
jl
fisubs
ficoms
dec
dec
pop
adc
iret
sub
or
xchg
out
cmc
xchg
pop
jae
std
ret
jg
data16
in
jp
arpl
jp
pop
mov
mov
cwtl
pushf
orl
push
aas
jmp
push
fwait
sub
fdivs
jo
or
mov
sahf
jg
cmc
fadd
rorl
aas
enter
pop
daa
cmp
adc
sub
ret
out
xchg
cmp
xor
data16
nop
push
pushf
fimuls
sbb
imul
clc
xor
sub
add
jns
pop
mov
xchg
add
jnp
arpl
mov
ror
xchg
jb
dec
dec
int3
in
mov
imul
add
stc
mov
das
enter
dec
sbbl
loopne
repnz
sub
push
dec
rcrb
int3
mov
scas
out
std
mov
out
sub
pop
jmp
shlb
cli
fwait
jne
cmpsl
mov
cwtl
sahf
or
push
dec
in
rorb
cmpsb
xor
xor
aad
popf
mov
sbb
mull
vpmuludq
pushf
loope
jnp
mov
lcall
jns
imul
mov
inc
inc
mov
dec
add
leave
test
inc
jg
imul
xchg
movsl
js
movsl
push
inc
fidivrl
push
pop
aaa
jmp
xchg
mov
pop
jp
stc
out
add
mov
cli
push
iret
test
mov
mov
and
sub
jno
xacquire
lods
mov
lcall
jae
jge
and
shll
sub
sub
jecxz
fs
sub
fidivrs
adc
xor
cmp
testb
in
inc
out
xor
dec
and
int3
sub
xor
iret
int3
stos
mov
add
mov
int
inc
xchg
test
xor
dec
jl
adc
mov
adc
in
pop
std
jp
push
lock
repnz
test
xor
mov
dec
rol
aad
mov
mov
jo
das
inc
lcall
mov
jne
push
fwait
jecxz
in
popl
lret
in
cmpsb
pop
addb
xchg
adc
pop
sahf
lods
cmc
ja
scas
pop
pop
mov
lret
sarb
dec
mov
out
jbe
or
add
imul
dec
scas
jg
std
test
mov
adc
xchg
movsb
outsl
push
cmpb
repnz
out
dec
and
loope
ss
mov
pop
pop
mov
out
jp
mov
fwait
nop
scas
iret
xchg
in
xchg
lahf
jns
ret
dec
adc
dec
repnz
pop
mov
mov
scas
daa
adc
jl
lcall
pop
call
dec
scas
in
and
lret
dec
fiadds
fyl2x
call
sub
jl
sbb
pop
out
into
movsl
mov
dec
inc
cmp
jecxz
push
pop
fidivs
mov
cmpxchg
scas
push
shll
jne
push
cmp
fmull
dec
mov
daa
pop
mov
xor
lods
fwait
or
mov
and
scas
leave
xor
pop
push
rorb
sub
mov
pop
pop
mov
stos
push
je
adc
fs
xor
mul
cmp
into
std
test
cmpsl
sbb
cltd
fnsetpm(287
orl
addr16
in
push
sub
sbb
mov
icebp
mov
dec
iret
dec
xor
imul
cs
bound
push
stos
es
mov
mov
and
adc
and
aam
adc
jbe
pop
jae
iret
scas
insb
push
push
or
mov
leave
stc
repz
outsl
cmpsb
insl
cltd
test
data16
mov
dec
faddl
dec
adc
ljmp
jnp
push
call
enter
xor
and
incl
mov
add
pop
mov
stos
lea
mov
mov
dec
out
cmpsb
push
push
inc
cli
mov
dec
lods
jno
ljmp
push
cs
xchg
mov
jne
push
mov
xor
in
or
fnsave
ret
inc
jmp
cmpsl
call
pop
and
push
inc
test
loopne
cmp
jl
cmp
cmp
cmp
int
mov
mov
sti
lahf
mov
adc
aad
mov
mov
fidivs
cmp
mov
mov
rolb
sahf
mov
mov
insl
test
ret
xlat
roll
sbb
mov
xor
insl
sbb
or
lret
loopne
dec
fisubl
stos
scas
repnz
jb
imul
subb
add
or
shlb
stos
mov
out
mov
repz
lcall
mov
and
mov
pushl
fisubl
pushl
hlt
jge
or
movswl
fs
cmp
in
push
ds
and
rcrb
daa
dec
shlb
xor
ds
jae
dec
lock
lahf
sbb
inc
jle,pt
dec
mov
xor
inc
rorl
mov
sbbb
sub
push
mov
lods
xchg
or
out
inc
xchg
xchg
or
inc
stos
jne
jmp
mov
xor
push
sub
mov
adc
shlb
in
sub
movsb
cmp
add
sbb
addr16
cmp
cli
aas
adc
cmp
xchg
loopne
mov
jb
lea
daa
jge
jecxz
test
jl
pop
mov
fadds
pushf
fcmovnbe
les
and
loop
mov
dec
pop
nop
data16
in
fs
jmp
push
xor
das
scas
ljmp
mov
cmc
mov
mov
cmpsb
xlat
shlb
out
aad
aam
pop
scas
idivl
push
jg
sub
test
cmp
repnz
xchg
sar
loopne
push
rclb
cmp
outsb
dec
lret
or
roll
clc
jne
icebp
xor
dec
sbb
lods
or
orl
jge
adc
jl
les
popa
icebp
or
xor
out
cmp
in
aad
and
dec
mov
inc
xchg
push
imul
in
fsubr
rclb
test
aad
cmc
outsb
mov
add
dec
int3
jmp
and
mov
les
lcall
jno
stos
adc
les
inc
push
aas
loopne
loopne
add
das
aad
jp
ja
sbb
not
or
mov
in
mov
mov
testl
xchg
daa
mov
xor
mov
or
cltd
adc
addr16
shrl
jb
pusha
xchg
repnz
shlb
int3
fimuls
stos
shll
cmpb
mov
jg
jb
pop
push
out
lret
out
in
mov
add
cmp
aaa
adc
or
mov
push
sub
mov
repz
sahf
mov
adc
and
imul
sti
xchg
xchg
test
jb
sbbl
shr
mov
iret
jne
xor
sub
orb
stos
loop
inc
push
push
mov
je
pop
push
pop
outsb
iret
pop
sahf
adc
push
push
fincstp
mov
pop
scas
adc
mov
jecxz
mov
mov
loop,pt
adc
sbb
push
aas
xor
int
pop
rcrl
cmp
shlb
xchg
scas
hlt
add
out
xchg
daa
or
inc
testl
xchg
outsl
push
cmp
add
test
mov
adc
mov
push
pop
sahf
xor
pop
roll
cwtl
cmpl
cmpsl
test
mov
add
push
lret
sub
fdivs
ja
cld
fsub
in
cmc
movsb
jmp
fs
mov
inc
loope
cmpsb
jp
aaa
mov
mov
aad
inc
test
movsb
sbb
push
inc
fwait
pop
xor
push
mov
mov
mov
loop
stos
jns
ljmp
rorb
or
imul
icebp
dec
and
cmp
loopne
push
sbb
inc
arpl
inc
subb
sub
mov
xor
jmp
mov
into
mov
sahf
jae
pop
xchg
gs
arpl
add
lahf
push
jmp
push
mov
mov
test
sub
sahf
xchg
cmp
push
sbb
push
ret
stos
pop
add
bnd
cmp
nop
je
mov
mov
js
push
inc
xchg
in
xor
mov
ljmp
fiadds
add
outsl
jp
sub
jle
rcll
sub
dec
popa
mov
fstpl
test
or
out
push
cmp
popf
idivb
add
enter
xchg
pop
fiaddl
mov
xchg
call
movsb
mov
sti
fwait
xchg
int
jbe
push
and
cs
out
sti
les
or
mov
cltd
mov
notb
enter
aaa
pop
and
inc
leave
bound
pop
mov
inc
pop
sti
add
mov
into
aam
push
push
ret
inc
or
mov
fsubl
pop
lret
jns
inc
lret
add
mov
rcrb
sbb
xchg
subl
pop
sbb
test
fcoms
ds
fimuls
cmp
lcall
lret
dec
idivb
cmpsl
adc
popa
and
jmp
jno
scas
test
sahf
inc
mov
shll
test
push
outsb
addb
push
push
ss
dec
imul
jbe
cltd
xchg
inc
pop
and
cmp
add
lea
fwait
and
mov
int
cmp
lahf
adc
pusha
xchg
mov
out
adc
jno
out
out
addr16
insb
test
and
in
add
mov
ficoml
push
mov
cli
push
addr16
out
xchg
dec
jb
pop
cmp
mov
mov
pop
mov
fdivrs
out
nop
jp
dec
push
push
pop
mov
cmp
push
inc
push
mov
ret
inc
popf
and
test
cmpsb
outsl
cld
mov
dec
pushf
mov
mov
push
cmpsb
or
cs
cmp
pop
fmulp
dec
push
es
push
shll
pushf
out
push
ja
test
or
xor
mov
iret
sti
cmc
mov
ljmp
insl
fsubrs
icebp
daa
inc
testb
or
dec
sub
cmp
cwtl
push
fwait
add
int
and
into
out
jb
push
lret
enter
test
sub
jo
mov
and
add
les
xchg
stc
dec
pop
and
jbe
add
test
gs
mov
and
dec
xchg
push
xchg
out
add
in
mov
insb
outsl
push
clc
xchg
or
int3
ret
repnz
mov
aad
xchg
pop
lock
into
shl
shrl
and
pusha
jns
das
in
shl
call
int
and
mov
xchg
xchg
xchg
adc
and
leave
jo
add
nop
pop
jo,pt
add
mov
push
lods
jns
fcmovne
cld
mov
xor
inc
ds
sub
jge
push
and
pop
shll
dec
xchg
pop
inc
divl
sub
pop
hlt
in
ret
adc
pop
jle
lret
jb
int
cmpsl
stos
push
xlat
outsl
adc
bnd
jo
push
jge
cmp
cmpsl
or
push
imul
mov
je
rep
cmp
daa
loopne
inc
data16
add
daa
jp
mov
rcrl
repnz
dec
mov
mov
andl
scas
fimull
ret
and
mov
xchg
imul
sbb
inc
or
cmp
mov
in
out
lret
sbb
adc
mov
imul
dec
leave
and
xor
jo
ds
out
pop
ja
adc
fs
push
in
lret
or
mov
xchg
aaa
mov
cmp
ja
imul
loop
out
adc
inc
pop
push
sub
jg
daa
or
xchg
scas
push
cs
mov
out
mov
mov
mov
je
inc
add
push
enter
fdivs
fbstp
lea
xor
sub
mov
lods
add
fdivs
adc
mov
fldl2e
push
lahf
into
bnd
xchg
or
lods
push
fidivrl
adc
cmp
cmpsb
ficomps
mul
das
cmpsb
push
push
in
jb
inc
mov
sbb
jge
and
sub
in
ret
mov
stos
push
pop
lcall
xchg
push
xor
int3
test
push
scas
je
idivb
mov
jecxz
pushl
daa
adc
repz
pinsrw
cltd
inc
repz
testb
pop
sub
cmp
inc
and
pop
cmp
xor
push
jno
mov
stos
lds
popf
mov
sub
repz
test
arpl
mov
addr16
xchg
rcll
and
push
push
insl
mov
rorb
pop
push
add
cmp
push
std
scas
mov
sub
pop
into
dec
mov
pop
packuswb
arpl
fcoml
test
subl
adcl
test
mov
test
pop
in
scas
stos
pushf
les
or
psrlw
or
inc
fistpl
testl
inc
jnp
shll
sub
jns
push
mov
imulb
aad
xlat
outsb
in
dec
cltd
and
pop
adc
push
cs
mov
dec
lret
fimull
iret
gs
push
in
sub
pop
movsl
push
mov
cmp
add
push
cmp
sbb
cli
clc
push
in
insb
xchg
or
push
mov
mov
scas
fldcw
push
out
ret
outsb
jbe
out
mov
mov
add
mov
cmp
lcall
xchg
cmpl
xor
pushf
popl
mov
jp
push
sub
or
jg
inc
test
stc
dec
sbb
outsl
jp
mov
jmp
inc
loop
enter
push
push
or
lods
loop
push
push
sub
popf
dec
pop
cmp
sbb
and
add
mov
fisttps
cmp
cmpsb
arpl
out
pop
and
mov
add
mov
mov
out
or
cltd
test
sahf
pop
push
mov
loop
mov
arpl
cmpsb
dec
loope
add
mov
sti
dec
sub
and
bound
xchg
les
or
fists
gs
cmp
aaa
ja
xor
div
ret
arpl
into
loopne
cmp
test
add
jge
push
jb
inc
mov
xor
add
jmp
inc
in
stc
bound
xor
loope
popa
cmp
nop
lcall
aam
ret
jne
mov
push
jge
fs
mov
fldcw
test
mov
popf
imul
sub
pop
lea
movsb
fdivr
popf
in
mov
shl
mov
mov
or
sbb
xlat
and
das
xor
lock
outsb
fimull
add
xchg
mov
ja
mov
dec
jge
or
sbb
xchg
or
test
mov
jno
mov
shrb
lret
jg
int
xchg
rolb
divps
aam
ret
insl
mov
dec
xchg
dec
mov
or
cmp
pop
inc
dec
scas
mov
lret
pop
jl
xchg
movsb
jle
pop
imul
inc
sbb
mov
push
pusha
lds
aad
lea
sbb
pop
cmp
idivb
jg
adc
pop
xor
adc
stc
xchg
xchg
xor
mov
mov
cs
pop
cwtl
xchg
pop
mov
mov
pop
scas
xor
push
loope
cmp
ja
fisubl
add
xorl
mov
mov
out
lods
lret
insb
test
mov
pop
sbb
and
jae
int3
shrl
into
das
inc
fwait
and
into
mov
sbb
jne
cmpsl
xlat
je
xor
xchg
imul
add
out
mov
in
fwait
sub
lods
hlt
lods
dec
push
and
and
jne
lds
mov
mov
fimuls
xor
mulb
sbb
push
imul
inc
idivb
sub
into
xor
cmc
jmp
or
sub
sub
in
sub
call
pop
fucom
mov
out
mov
out
ja
mov
push
icebp
dec
jge
xor
jnp
pop
cltd
cmp
dec
subl
ficompl
dec
xor
cmp
inc
mov
in
cmp
cld
and
xchg
jge
lea
movb
into
mov
adc
subl
adc
out
xor
mov
in
jnp
cmp
pop
test
jnp
aaa
add
pop
adc
pop
jmp
inc
jo
jmp
push
int
nop
stos
sbb
fwait
xor
mov
xor
movsl
xchg
cli
int3
inc
into
mov
pushf
int3
cmp
mov
daa
xchg
shll
adc
cwtl
add
mov
push
jbe
push
cltd
xchg
ficomps
jge
mov
dec
rclb
mov
mov
pop
jne
cmp
pop
sahf
xor
into
lcall
imul
mov
aam
out
mov
aam
or
mov
dec
rcrl
inc
mov
jg
cltd
test
mov
and
pop
mov
mov
imul
test
pop
mov
jl
inc
xor
popf
pop
ret
cmpsb
sub
in
sarl
dec
adc
mov
dec
sub
loope
cmpl
xchg
dec
jb
das
mov
dec
movsl
lahf
pop
dec
add
and
jp
sub
sbb
mov
repz
mov
les
orl
jno
stos
push
in
sub
push
cld
testb
lret
iret
push
fdivl
mov
loop
jo
outsb
add
adc
aam
mov
shlb
xor
jbe
repz
out
in
push
in
sbb
in
out
nop
outsb
mov
pop
cmp
mov
fistpl
jge
mov
mov
enter
mov
in
mov
rcrl
inc
push
leave
pop
jmp
loopne
in
inc
mov
outsb
gs
rcrb
xchg
lcall
xchg
xor
mov
lods
inc
pop
ja
add
mov
mov
jge
xchg
enter
aam
cltd
xor
test
test
push
xor
xchg
cmpsb
xchg
movsl
lods
rclb
stc
mov
and
lock
repz
or
call
jge
fwait
push
add
inc
xchg
shll
dec
rcll
stc
xchg
imul
adc
or
jmp
out
in
dec
outsb
xor
shll
daa
mov
nop
dec
mov
ljmp
pop
dec
stos
cld
lret
outsb
arpl
inc
mov
aas
or
cld
movl
xchg
repz
aam
mov
pop
daa
rolb
lcall
mov
lds
cmp
mov
xchg
mov
adc
inc
adc
mov
mov
popf
aas
adc
mov
in
dec
xchg
test
fistps
lods
or
es
and
test
sbb
fdivs
sub
insl
cmp
loopne
jae
inc
bound
mov
bnd
cmp
or
xlat
vmovdqu
fwait
int
mov
sub
dec
push
es
pop
add
push
mov
aaa
iret
push
cmpsb
mov
fwait
inc
adc
in
jno
aaa
push
addr16
mov
cmp
xor
cmp
dec
mov
test
stos
inc
push
mov
bound
rclb
lcall
mov
das
and
cmc
insb
and
sbb
xlat
sbb
xchg
fucomip
in
and
mov
lds
push
fucomi
dec
xor
pop
cwtl
push
push
xchg
sub
mov
jne
sbb
cld
mov
enter
hlt
mov
jnp
mov
jmp
fildl
mov
or
dec
enter
sbb
sbb
test
mov
stc
sbb
into
loop
aam
shl
cmc
cmp
sub
in
lock
add
push
adc
sarb
pop
mov
cmc
out
and
pop
sahf
icebp
in
pop
pop
mov
std
divl
mov
sub
push
inc
call
sbb
ret
dec
icebp
int
push
and
movsb
lret
sub
adc
outsb
adc
cmpsl
jp
lods
pop
sub
nop
into
lds
pmaddwd
inc
push
cmc
push
jle
lods
pop
mov
jns
dec
push
fists
ficomps
pop
sbb
cmp
ja
ds
into
push
rclb
les
lret
jecxz
lcall
scas
cmp
inc
cmp
or
pop
push
fistl
jmp
jmp
mov
pop
cmp
enter
sbb
fmul
lods
mov
bound
inc
dec
int
xchg
mov
sub
pop
adcl
test
mov
and
jge
icebp
or
jecxz
dec
cld
mov
dec
shlb
adc
enter
fstpt
jecxz
das
lahf
call
fisttpl
jno
insb
fistpll
adc
push
in
arpl
pop
sbb
pusha
mov
sbb
out
mov
mov
aad
stc
ljmp
push
out
or
dec
sti
push
fwait
in
call
inc
arpl
lds
mov
dec
aas
or
bound
out
mov
xor
lods
idivl
shrl
sub
sarb
mov
push
js
add
sarb
arpl
cmpsl
or
push
sbb
ret
sti
jl
scas
sarl
xchg
cwtl
in
mov
testl
pop
jecxz
cmc
xor
push
out
inc
aad
adc
dec
mov
xchg
ret
lcall
aaa
xor
cmpsb
sbb
pop
inc
rorl
popa
sub
mov
and
aaa
pop
jg
rcr
mov
dec
lea
mov
test
sahf
mov
movsb
mov
cmp
imul
nop
jo
scas
pop
jl
hlt
mul
jne
adc
outsl
cmpsl
stos
mov
pop
jge
movsb
scas
lahf
cwtl
pop
cld
rep
xchg
mov
incl
push
lahf
lock
inc
shrl
and
idivb
pop
les
xchg
add
imul
dec
mov
dec
into
inc
and
push
daa
lock
cmp
mov
jmp
add
adc
adc
outsl
adcb
lock
adc
lahf
divb
fldt
je
mov
icebp
dec
sbb
pushl
int
adc
iret
aad
ljmp
popa
xchg
lods
pusha
push
and
push
punpcklwd
leave
add
cmp
fdivs
xor
mov
frndint
ret
pop
jge
sbb
sub
push
pop
scas
pop
lret
push
jae
shlb
add
mov
hlt
jb
dec
push
insl
cmpl
push
sahf
push
push
aas
or
outsb
jecxz
ljmp
insb
ret
dec
movsb
and
lods
push
adcl
jns
inc
mov
fwait
testb
sarb
bound
adc
cltd
arpl
pop
pushw
dec
cmp
push
popf
icebp
fucomip
mov
test
push
stc
cs
dec
sbb
jmp
pop
add
xlat
stos
push
or
adc
mul
mov
or
xchg
xchg
dec
into
mov
lock
cmpsl
arpl
jl
insl
lahf
mov
mov
out
icebp
sub
xor
or
jbe
rcrb
leave
xchg
js
and
pop
pop
mov
movsl
test
jmp
xchg
test
dec
sarl
fcompl
out
xchg
add
addl
mov
mov
pop
stos
inc
jl
adc
loopne
and
pop
lret
dec
gs
and
inc
mov
in
push
jns
addr16
js
cli
push
xor
adc
mov
rcr
and
and
int3
inc
int
sub
int
insb
inc
cwtl
fs
xor
iret
adcb
or
xor
xchg
dec
std
gs
xor
push
or
imul
sti
test
repnz
aam
adc
jge
push
dec
pop
mov
cmp
mov
mov
bound
scas
and
or
inc
sahf
jmp
int3
repz
mov
aas
pop
int
les
enter
jnp
jp
cli
mov
mov
mov
pop
sarb
fidivl
shr
mov
mov
or
clc
adc
aas
jge
lret
mov
xchg
and
push
inc
mov
jno
sub
cld
and
sbb
mov
lds
cwtl
test
shl
outsl
nop
call
stc
movsb
nop
pop
ljmp
and
fadds
ja
addr16
cmc
dec
jg
mov
and
xchg
sub
subl
cmp
mov
jno
loope
pop
out
push
scas
push
xchg
sbb
add
mov
lods
loope
xchg
dec
das
rorl
scas
mov
imul
mov
pop
sbb
push
and
mov
inc
mov
enter
test
mov
aam
rorl
fnsave
jns
jl
mov
out
mov
add
sbb
aaa
jns
fmulp
js
push
dec
mov
and
call
dec
dec
pop
fisttpll
aas
xchg
lea
sarb
mov
mov
pop
mov
fwait
lahf
xor
negl
mov
aad
cmc
add
mov
sbb
mov
pop
jo
loop
push
pusha
inc
add
mov
jmp
add
push
jl
stos
pop
mov
push
pop
mov
mov
arpl
cwtl
stc
pop
imul
push
imull
cli
adc
pop
lahf
mov
repz
cmpsl
sub
mov
lcall
and
ja
or
xchg
mov
xor
xchg
inc
jg
xor
outsl
adc
cmpsb
mov
stc
adc
push
lods
stc
and
xchg
aas
jecxz
int3
push
fiaddl
mov
out
cmpl
adc
jle
pop
data16
mov
xor
jl
cltd
cmp
rorl
in
jge
sbb
or
dec
jecxz
ja
jae
or
sub
push
adc
inc
out
mov
faddp
pop
rclb
scas
ret
xor
cmp
push
loope
jnp
inc
jne
pop
sub
mov
push
jo
bound
mov
int3
jne
push
call
repz
faddl
ud2
pop
pusha
jo
dec
pop
push
inc
outsb
push
xor
sub
lret
pop
movl
push
stc
cmp
fildll
pop
jge,pn
sbb
lds
shlb
or
jnp
dec
scas
icebp
icebp
pop
sbb
mov
and
mov
dec
rcrb
lret
shrl
adc
mov
aas
mov
pop
test
inc
adc
mov
mov
sbb
mov
mov
in
enter
mov
shlb
sub
sahf
sub
dec
ficomps
fildl
dec
int3
fs
and
and
pop
jecxz
je
mov
fldl
mov
out
scas
mov
mov
jnp
push
jge
int3
popf
mov
jg,pn
jmp
jmp
sti
jge
aad
pop
inc
sub
xchg
rcrl
dec
push
fcmovu
popf
inc
sbb
cmp
jo
fisubrs
xor
or
xchg
daa
dec
jecxz
or
xor
or
mov
cmpsb
lcall
push
mov
mov
sbb
or
cmp
pop
mov
push
push
mov
inc
imul
xchg
xor
fstps
mov
daa
mov
add
xor
icebp
mov
mov
or
sub
jecxz
mov
fnstcw
add
jge
shll
fmul
scas
fiaddl
inc
or
mov
xchg
test
sub
sub
hlt
pop
ss
dec
test
repz
mov
inc
lret
clc
fldenv
push
or
lock
out
lcall
frstor
sbb
sbb
dec
push
xor
push
xchg
stos
dec
xchg
pextrw
loopne
xor
stc
sbb
js
jmp
lret
jmp
dec
and
pop
or
in
das
push
mov
test
cmpsl
mov
dec
xor
sub
loope
jnp
mov
mov
add
aas
add
into
insl
inc
cmp
nop
sub
outsl
lods
aas
iret
add
sub
insb
or
mov
repz
push
pop
xchg
iret
fmull
or
sub
push
fnstenv
arpl
cmp
lret
push
and
popf
pop
jae
xchg
sbb
fwait
and
mov
xchg
adc
std
test
sbb
add
repnz
inc
nop
stos
inc
push
call
or
sti
sub
sub
dec
jge
jle
pop
andl
cmovs
inc
test
mov
dec
mov
outsb
cli
push
leave
sti
and
movsb
push
sbbb
lods
mov
stos
repz
mov
dec
mov
dec
pushf
sbb
insl
out
cmp
push
in
sbb
ret
ljmp
hlt
lea
leave
clc
xchg
xchg
out
mov
aam
leave
rolb
mov
dec
mov
test
into
data16
jp
inc
repnz
fsubrs
xor
push
mov
push
inc
aas
scas
std
out
mov
bnd
or
das
pop
pop
scas
gs
or
cltd
repz
cltd
fisttpl
sahf
xchg
in
mov
mov
push
int3
mov
or
cmp
jns
cmp
cmc
mov
mov
push
push
push
jge
push
call
mov
dec
bsf
pop
shrl
push
data16
cld
cmp
mov
jle
pop
adcb
xchg
pop
pop
fcoms
add
or
andb
push
xchg
xor
ds
jp
sub
xchg
cmpsb
sbb
add
std
mov
cwtl
rolb
rolb
jae
mov
xor
test
aam
pop
inc
xchg
outsb
jg
repz
xor
cmp
mov
inc
pop
notl
or
cld
mov
in
lds
pop
icebp
inc
scas
xchg
jp
mov
ljmp
cmpsb
mov
leave
cltd
popf
not
and
addr16
ja
sahf
mov
sub
jae
sbb
iret
mul
sahf
iret
pop
mov
leave
mov
int
rcll
negl
ja
pop
push
jle
sub
xchg
xor
xor
sti
sti
cmp
push
cmp
les
pop
out
adc
mov
movsb
fwait
cltd
fidivs
dec
mov
pusha
sbb
ds
cmp
jno
mull
loopne
fmuls
xchg
cld
gs
psrad
pop
xchg
pop
pop
fwait
jb
aaa
mov
and
push
test
xor
sbb
xlat
xor
pop
aaa
pop
add
xchg
ret
mov
test
arpl
pusha
inc
inc
outsl
add
nop
xorl
cmpsb
ficoms
and
or
or
and
orl
bound
in
call
push
mov
in
fstpl
jb
mov
jge
data16
flds
sbb
repnz
inc
ret
fcom
jnp
mov
in
movsl
cwtl
rcr
lods
sbb
insl
mov
imul
dec
sub
call
xor
dec
and
xor
scas
push
aaa
and
dec
adc
mov
dec
aad
movsb
push
mov
mov
add
sbb
scas
mov
idiv
xchg
mov
push
out
and
and
jp
outsb
ret
sarl
addr16
cmp
lahf
mov
mov
fscale
mov
pop
fsubr
lahf
pop
fwait
adc
int3
addb
mov
jns
enter
pop
mov
cmp
incb
loope
push
mov
insl
gs
jl
outsl
jg
call
or
sbb
push
add
and
mov
aas
xchg
mov
jbe
sub
out
fisubs
pop
sbb
in
pop
mov
fdivr
pop
push
int3
jno
push
shlb
or
popa
out
mov
fidivrs
cmp
retw
xlat
add
jbe
dec
clc
jns
outsl
in
pop
mov
or
in
add
les
mov
mov
sbb
dec
repnz
sub
in
jae
jmp
loopne
push
out
bound
lahf
cmp
push
in
imul
add
xchg
sahf
mov
and
xchg
adc
mov
scas
adc
cmc
pop
dec
or
stos
push
sub
add
push
pop
push
iret
push
add
mov
push
jp
cmpsb
mov
add
xchg
ficompl
mov
pop
xor
mov
push
je
xchg
xchg
cwtl
movl
stc
sti
cmovl
mov
sbb
loopne
jle
cwtl
mov
dec
stos
cltd
ja
mul
xor
lret
push
dec
mov
mov
ljmp
shrb
xor
hlt
stos
jbe
push
xor
mov
lahf
mov
adc
and
sub
mov
inc
xor
aaa
mov
jbe
cltd
push
fdivl
mov
xchg
and
and
xor
mov
lock
jle
pop
cmp
fidivl
dec
cmp
cmpsl
mov
pushf
test
mov
cmp
jg
sbb
test
add
adc
aam
addr16
lea
jnp
mov
jb
mov
pop
xchg
xor
inc
and
push
add
in
ret
jle
imul
pop
addr16
pop
xorl
push
pop
adc
sub
jmp
mov
or
cmp
nop
dec
aas
push
daa
pop
pushf
out
xor
mov
int
xor
jo
pop
add
pusha
je
push
mov
cld
mov
cmc
xor
mov
pop
cmp
and
sbb
out
xchg
les
arpl
push
push
pushf
mov
xor
jae
push
push
in
stos
ret
dec
mov
mov
js
jecxz
pop
push
jno
popf
insl
push
pop
and
je
pop
outsl
in
cmpsl
fld
pop
add
and
js
test
mov
cmp
xchg
sbb
sbb
cltd
xor
lret
movsb
xor
out
inc
iret
stos
cltd
push
push
jmp
xchg
ljmp
imul
sub
out
sbb
push
xor
mov
out
sub
adc
aaa
int3
sbbb
enter
das
cmpsl
scas
mov
mov
out
cs
ja
stos
test
mov
jge
out
rclb
mov
imul
adc
cmpsb
insb
push
mov
mov
lret
test
mov
wrmsr
adc
push
jg
mov
sub
mov
lods
pop
mov
xor
cld
out
sti
ljmp
orb
push
insb
adc
xchg
pop
add
cs
mov
sub
jecxz
cltd
inc
lock
lret
cmp
jg
insb
or
aas
push
push
mov
sub
rcr
je
aas
js
mov
xor
es
mov
pusha
push
xor
pushf
jno
sbb
aam
mov
andb
aad
xchg
jle
inc
sti
movlps
inc
out
nop
js
dec
push
mov
push
mov
loopne
xchg
sbb
pop
jne
imul
push
fstps
push
enter
cltd
stos
cs
mov
xchg
sub
in
push
add
data16
aaa
sub
in
inc
fistpl
adc
and
mov
xchg
repnz
lock
mov
cmpsb
push
push
ss
loope
mov
lods
cmpb
fisubs
lcall
test
push
aam
das
jns
in
inc
imul
imulb
testl
lods
pop
sti
xor
sar
outsb
es
clc
mov
lods
mov
adc
dec
pop
xor
shrb
fistpl
shrb
inc
xchg
sub
idivl
movsb
lods
pusha
mov
mov
imul
or
inc
pop
mov
mov
out
mov
shll
push
push
outsb
imul
push
add
pop
jmp
addl
shl
add
ret
add
fimull
leave
mov
sub
leave
dec
mov
and
adc
loope
adc
fcoml
xchg
mov
mov
test
pop
or
mov
pop
dec
fwait
xor
repnz
and
ret
add
xchg
mov
cmp
lcall
inc
incb
lds
test
shrb
mov
cmp
ret
xor
cmp
push
lea
jae
aas
cmpsl
ljmp
or
addb
mov
cwtl
add
ds
mov
shlb
jmp
pop
inc
adcl
mov
shlb
adc
aad
jb
jo
int3
stos
cld
lods
mov
cmp
cmp
mov
or
push
adc
clc
lods
sub
imul
mov
sbb
les
lcall
pop
adcb
add
mov
sahf
insb
out
fwait
inc
fs
out
fcom
mov
movsl
movsb
sbb
push
imul
popl
push
jbe
stos
inc
test
int3
fcmove
in
ljmp
lret
mov
inc
xor
jb
fs
sbb
das
andb
jnp
push
jg
aad
jle
and
std
jmp
ljmp
cmpsl
cmp
outsb
and
sarb
repnz
inc
cmp
lods
sub
cmp
iret
outsl
arpl
fbld
fnsave
push
add
lds
xchg
cltd
mov
rcll
add
ja
xor
cmp
jno
aad
out
xchg
lods
cs
scas
cmp
das
lock
aaa
jo
sbb
incb
dec
sbb
mov
add
fbld
dec
fs
inc
push
sub
or
je
cli
fwait
push
sbb
sub
push
mov
loopne
mov
jbe
cwtl
inc
inc
aad
popf
inc
lock
lahf
pop
sub
mov
bound
stos
adc
sbb
or
movsb
leave
sub
dec
shll
and
addb
push
test
xor
loope
insl
nop
mov
gs
fadd
add
push
add
sbb
fistl
inc
repz
mov
cmpsl
fs
mov
add
mov
fcmove
mov
idivl
incb
dec
call
jno
jl
pusha
jp
mov
sub
bound
add
in
xor
roll
std
add
out
mov
lret
xchg
icebp
and
mov
mov
mov
inc
push
mov
adc
push
repz
les
inc
xchg
or
test
jae
hlt
shrb
inc
jns
les
sub
fisubrl
fsubrs
scas
movsl
bound
ds
cmp
xchg
outsb
in
cltd
shlb
cmp
ljmp
aaa
or
pushl
mov
hlt
push
rcrl
mov
ljmp
testb
test
icebp
xor
ret
rcrb
mov
leave
lahf
push
bound
call
pop
mov
pop
movsb
addr16
cwtl
out
gs
insb
fcoml
gs
push
lods
pop
int
filds
or
dec
popf
jecxz
ret
mul
xor
mov
test
pop
sti
jo
idivl
daa
call
push
cltd
out
pop
rclb
jo
les
mov
jle
loope
data16
cmpsl
mov
xchg
xchg
in
pushf
imul
lock
cmp
mov
pop
out
arpl
mulb
ret
lods
sub
dec
jns
xor
mov
push
cmpl
dec
sub
shll
fnsave
testb
outsb
jecxz
mov
sbb
scas
mov
adc
and
aam
test
xor
xor
daa
push
insl
lds
lret
add
mov
pop
adc
sbb
and
xchg
push
lret
sarb
fldt
sbb
pop
mov
sbb
dec
inc
mov
cmp
imul
ds
popf
pop
out
clc
push
lea
dec
sti
push
mov
xchg
lahf
into
sarb
jmp
sbb
gs
testb
pop
lock
sbb
les
repz
lret
lret
fistpll
outsb
lods
fwait
mov
jbe
out
cmp
test
add
stos
sahf
mov
test
push
lcall
mov
jo
insb
imul
inc
loope
cmc
lret
adc
sbb
push
out
and
sbb
sub
xchg
in
cmp
sbbl
pusha
cmp
cltd
popa
dec
dec
add
and
cmpsb
enter
fcoml
loop
fbld
int
popf
incl
lcall
and
cwtl
xchg
sbb
cmp
out
loop
cli
pop
imul
ss
cs
clc
adc
ljmp
mov
pop
paddb
ss
rcrb
jno
dec
jg
mov
mov
mov
mov
sub
aas
js
sub
test
cmpsb
cmp
xlat
adc
rcr
inc
xchg
cmp
jb
adc
enter
loop
dec
jne
dec
std
mov
lcall
lds
mov
mov
enterw
mov
push
lret
dec
push
clc
inc
dec
mov
mov
rcl
jecxz
lods
dec
ja
mov
mov
cmp
mov
enter
test
or
lock
lods
add
mov
scas
imul
cmp
testb
sub
clc
add
aam
xchg
add
push
imulb
mov
sub
mov
jb
in
xlat
jg
negl
inc
cli
push
push
xchg
imul
and
cmp
or
in
cmpsl
insb
lret
cmp
pop
or
jmp
cmp
ret
xchg
test
dec
js
xchg
shll
movsb
push
fidivs
push
dec
cltd
lock
repnz
aas
imul
pop
xor
push
inc
jg
jne
mov
in
aaa
data16
out
or
in
and
cwtl
cmpsb
insb
pushf
cmp
cmovnp
inc
jo
mov
imul
nop
pop
adc
dec
sub
fsubr
and
jns
pop
addr16
xchg
inc
test
dec
mov
pushf
push
sbb
outsl
mov
cwtl
lret
sub
mov
bound
add
hlt
cld
push
out
movb
pop
push
outsb
adc
movswl
xchg
out
les
movsb
pop
ljmp
lret
sbb
xor
lcall
pushf
fwait
jle
lret
icebp
imul
movl
xchg
dec
insb
call
jno
xchg
ret
push
orl
nop
sbbl
pop
mov
mov
or
push
or
adc
push
into
stos
rorb
mov
pop
xor
dec
or
sbb
xor
pop
inc
mov
mov
push
jmp
arpl
push
dec
mov
addl
sub
pop
pop
arpl
lea
cmp
ja
scas
dec
jno
nop
fucompp
cmc
jbe
in
pop
lods
dec
pop
lcall
cmp
add
aam
and
mov
pop
bound
addr16
int3
leave
adc
in
ret
roll
sti
negl
scas
shrl
gs
in
inc
shl
push
cmpsl
xchg
cmp
ljmp
addl
les
test
dec
sub
int3
scas
into
leave
mov
mov
clc
sbbl
cld
sbb
sbb
fbstp
and
jmp
ror
cwtl
xorl
inc
xchg
rorb
outsl
jp
xchg
sahf
cmpl
xor
shlb
pop
in
pop
mov
adc
dec
sub
or
hlt
push
pop
mov
jb
cmp
adcb
cmpsl
orb
cmpsl
ljmp
rep
loope
jg
fnstenv
push
pop
ret
mov
repnz
jae
add
or
push
mov
int3
lock
jo
push
es
test
repnz
mov
jno
nop
and
sbb
and
gs
jmp
xchg
pusha
rol
outsb
andl
mov
or
sub
or
push
adc
loope
in
out
rorl
push
cmp
cmpl
jmp
lret
xor
scas
repz
and
mov
sahf
mov
mov
mov
adc
cmpsl
int3
xchg
pop
adc
sub
cwtl
inc
sti
inc
or
add
scas
sahf
jae
aad
push
jns
xchg
test
into
nop
mov
int
dec
jbe
hlt
inc
xor
push
pop
jmp
test
add
mov
aad
or
sub
inc
test
cmpsb
rol
fs
xchg
pop
mov
out
leave
push
mov
xchg
jg
or
push
sub
ret
add
leave
mov
popa
pop
mov
sub
andb
mov
xchg
fcoml
aas
add
stc
inc
inc
nop
fdivl
cmp
ds
xor
adc
mov
cwtl
lret
adc
sar
ss
or
cmp
add
inc
fildl
repnz
lock
push
je
nop
std
mov
mov
push
mov
add
shrl
aad
mov
fs
xlat
jbe
push
push
dec
cmp
xchg
fiaddl
ret
repnz
or
pop
fdivrl
jmp
aas
jmp
mov
sub
iret
xchg
call
lods
dec
pop
fdivs
insl
adc
mov
dec
into
pop
addr16
dec
ret
sbb
popf
and
loop
addr16
movsb
stos
and
add
fmuls
test
push
cmp
insl
xchg
fsubrs
movl
dec
dec
sbb
add
and
or
arpl
pop
dec
inc
lods
sbb
dec
sub
lahf
ja
lock
cmpsb
dec
jns
push
dec
lods
ds
test
mov
das
dec
fidivrs
js
mov
pop
xchg
mov
push
jge
xor
stc
test
push
mov
pop
fildl
addl
cmp
cs
mov
fisttpll
cwtl
in
shll
arpl
push
mov
jl
ljmp
dec
mov
xchg
les
fisubrs
push
loopne
rolb
imul
push
xchg
jmp
mov
repz
mov
or
ja
cmp
dec
fsubp
xlat
movsb
push
cmp
pop
adc
pop
repz
daa
out
add
out
adc
fldcw
xor
mov
test
inc
std
stos
mov
inc
ds
xchg
inc
test
lds
or
popa
arpl
dec
cmp
dec
jp
push
and
lea
mov
outsl
add
je
cmp
out
sarb
inc
jo
addr16
adc
add
or
imul
xchg
fcomip
mov
mov
xor
adc
loopne
dec
fdivl
rcrl
addb
inc
jns
or
sbb
mov
pop
out
insl
stos
enter
and
out
cmp
sahf
dec
imul
and
sbbb
pop
xor
dec
dec
mov
nop
push
mov
mov
dec
outsl
repz
lea
pop
shlb
pop
lds
cmp
add
fiadds
mov
mov
or
loopne
xchg
out
mov
jns
dec
jbe
lock
mov
sub
sbb
inc
jg
out
lock
mov
mov
rolb
xchg
mov
and
sbb
jns
stos
jg
ds
add
jle
inc
shlb
repz
rsqrtps
daa
fstpt
call
or
mov
and
lahf
adc
dec
lods
mov
movswl
xchg
fnstsw
in
mov
sub
fstps
in
lock
jb
cmp
adc
jge
and
mov
jns
repz
and
mov
jle
int3
insl
and
mov
push
pop
jg
icebp
mov
and
xchg
dec
out
sbb
adcl
stc
add
cli
xor
mov
xchg
xchg
rcrl
xor
int
pop
push
cmc
adc
shr
fstpl
mov
pop
mov
pop
negb
popa
das
dec
xorb
xchg
cwtl
gs
dec
fucomp
sahf
test
jb
mov
andl
bound
cld
xor
rorb
cmp
rolb
cld
in
pop
jno
xor
popf
jno
mov
ja
cmp
pop
stc
add
inc
cld
push
lcall
call
cmp
lret
enter
sti
test
mov
decl
sbb
inc
imul
mov
cld
mov
fdivl
sahf
push
andl
icebp
fcoms
pop
in
sbb
mov
imul
mov
je
adc
arpl
hlt
cmp
mov
in
icebp
ret
mov
test
out
xchg
jo
es
daa
in
sahf
cmp
sarl
test
jp
lods
sbb
clc
mov
imulb
sub
sbb
lods
cwtl
push
pushf
pop
adc
addr16
xor
push
out
mov
lcall
push
imul
mov
add
ret
xchg
pushf
mov
imul
xchg
inc
mov
xor
cli
enter
cmp
or
lahf
lods
and
das
ficomps
int
dec
cmp
enter
mov
movl
imul
rol
cltd
cld
jno
mov
jb
and
lods
lock
cmc
xlat
cmc
xor
jge
lods
cwtl
je
pop
mov
and
push
loope
rcll
add
imul
pop
jo
mov
iret
sub
lea
inc
aam
scas
std
arpl
jne
xor
icebp
sub
lods
and
sub
jb
jns
dec
mov
mov
push
stos
sub
sub
mov
popa
xchg
mov
or
lock
mov
inc
inc
fistl
lds
add
mov
cmp
mov
adc
arpl
push
adc
or
pop
dec
xchg
inc
es
notl
movsb
mov
lock
outsl
cmpsl
mov
enter
mov
push
sub
aaa
mov
out
sub
icebp
mov
out
xchg
lahf
and
lahf
mov
dec
int3
xor
dec
ret
cmc
xchg
dec
enter
mov
and
push
push
push
stos
loopne
ret
cwtl
js
daa
aas
loope
mov
jge
les
and
ljmp
ja
ds
icebp
scas
dec
jg
testl
ds
int
rcll
idivb
into
lcall
fucomp
ds
mov
lcall
pop
outsl
subb
sbb
dec
gs
and
adc
cmp
xchg
jae,pt
pop
or
test
xchg
enter
xor
adc
sub
add
pop
cmpsb
rolb
gs
mov
inc
mov
push
jb
xor
inc
add
pop
aam
jne
xchg
pop
add
or
bt
adc
xlat
jo
inc
aam
lahf
mov
inc
pusha
sbb
sub
loopne
cs
test
pop
cmp
xchg
hlt
pop
push
inc
and
adc
lcall
inc
mov
sbbb
lods
mov
in
xor
je
orb
arpl
mov
repz
add
pop
or
pop
in
insb
popa
and
cmp
cmp
mov
fdiv
or
pop
loope
sbb
es
aas
je
sub
pushf
cwtl
pop
mov
inc
mov
fs
push
mov
or
jno
cmp
insl
test
stos
mov
aam
add
pushf
daa
or
out
inc
cmc
addr16
xchg
lret
sbb
pushf
gs
push
mov
sbbl
shr
in
push
iret
aas
ret
pushf
cld
cmpsb
ljmp
movsl
mov
pop
les
push
mov
addr16
fcoml
int
js
mov
inc
ss
jp
imul
lds
push
incl
ds
xor
sbb
mov
dec
jo
test
and
mov
lret
jne
inc
xor
pushf
push
ds
fnsave
xor
movsb
sbb
sahf
mov
nop
mov
cmpsb
in
adc
out
jmp
fs
xchg
in
rol
sub
repz
mov
loopne
or
xlat
sahf
inc
push
push
movsb
inc
lahf
and
das
or
lds
fnstsw
out
stos
mov
sbb
or
cltd
sahf
into
inc
and
push
and
sub
sbb
mov
lcall
cmp
cld
lret
incl
jb
shrb
jb
call
scas
adc
lock
scas
sahf
jle
ret
fucomi
xor
push
jno
lcall
sti
jnp
push
fstpt
cmp
imul
sub
mov
xlat
cmp
inc
inc
mov
fcmovbe
ficompl
and
jl
fildll
andb
divps
les
pop
mov
sbb
pop
cli
jg
enter
movsb
mov
movlps
popf
inc
insl
push
sahf
cmpsl
and
sbb
lret
jmp
or
test
fbld
mov
and
pushl
inc
pop
push
pop
fldt
sbb
and
pushf
and
test
push
out
push
pop
int
out
adc
or
clc
das
lods
mov
aaa
jge
xchg
hlt
mov
cmpsb
mov
sbb
dec
aam
bound
adc
jecxz
dec
adc
pop
outsl
sahf
mov
vunpcklps
jge
addl
das
scas
outsl
decl
mov
stc
movsb
cmpsl
xor
mov
out
rorb
daa
aaa
xor
lret
xchg
pop
inc
inc
mov
out
testb
add
push
jae
sub
xlat
xchg
jmp
dec
cmp
aaa
lock
mov
roll
adc
sub
jmp
mov
adc
out
daa
add
popf
cltd
jmp
add
jb
mov
sbb
push
push
lcall
div
ror
sbb
notb
cmpsl
xchg
cmp
rcll
xor
mov
add
mov
cmpb
rcl
inc
fbld
jno
mov
mov
popf
adc
jns
xor
scas
xchg
addr16
sbb
sarb
cmpl
inc
rorl
jb
js
cmp
pop
mov
orb
repz
lods
sar
xchg
pop
adc
and
pop
lock
jns
pop
cmp
adc
adc
sbb
adc
push
jno
arpl
in
sahf
push
xor
out
cltd
jecxz
pop
xchg
mov
add
lods
pushf
jg
cmp
loope
fistl
stos
inc
xlat
inc
lret
xor
pop
lods
popf
pop
sub
push
int
daa
insb
pop
sub
jne
leave
daa
aam
mov
push
xchg
stos
repnz
enter
mov
ret
jo
fnstenv
enter
mov
fistl
fwait
sahf
mov
sbb
stc
cmp
cld
cli
aad
daa
xchg
push
jnp
cwtl
jb
jg
mov
bound
mov
addl
fbld
mov
mov
lods
shlb
out
mov
dec
adc
leave
xor
mov
jne
mov
jbe
mov
mov
jo
das
pop
stc
rclb
add
jecxz
lds
dec
imul
cmpsl
push
das
xor
mov
fisubrs
loopne
mov
or
fbstp
sub
jmp
or
shl
sbb
ret
xor
sbb
sbb
cltd
jns
cwtl
mov
add
push
mov
xor
inc
mov
push
clc
and
mov
mov
mov
or
mov
popa
aas
adc
lods
cmp
mov
negl
lret
sar
fldenv
fimull
or
int
xchg
inc
hlt
push
mov
and
in
loope
mov
sub
cmc
and
add
rorl
push
adc
movsb
pusha
cmp
push
sub
aas
xchg
pop
mov
add
mov
push
movsb
xchg
mov
dec
sbb
aas
clc
and
or
repz
imul
stc
loope
mov
adc
pop
pop
mov
jno
call
mov
loopne
and
inc
and
iret
stc
add
adc
mov
inc
mov
aaa
xchg
jbe
out
cmpsb
fs
jns
pop
push
dec
iret
adc
loope
movsl
mov
loop
pop
repz
dec
sub
orl
hlt
adc
fsubrs
sub
cmp
adc
fists
test
fildll
dec
mov
mov
cmp
dec
addl
cmc
scas
xor
decl
jnp
mov
jo
fstpl
xor
mov
mov
ss
and
popa
adc
ja
pop
or
push
sub
clc
das
insb
out
ret
rcrb
loope
push
push
xor
insb
lock
scas
inc
xchg
cld
cmp
mov
cmp
push
lods
dec
std
xchg
mov
jecxz
js
adc
aas
add
js
popf
cmovns
das
loop
jecxz
loopne
out
das
and
mov
insl
sub
inc
aam
and
popf
sbb
insl
sbb
lahf
decb
jb
xchg
push
lock
imul
add
stos
mov
and
and
addr16
popf
mov
mov
and
sub
cmp
mov
sbb
sub
jle
xor
xlat
xorl
outsl
xchg
fsubl
pusha
mov
popf
xchg
sahf
js
out
fwait
mov
jne
inc
dec
mov
inc
mov
dec
out
push
adc
repz
push
push
pop
cmpb
cwtl
push
out
sub
scas
divb
lcall
add
in
or
loopne
sbb
mov
mov
mov
testb
div
jp
xchg
cltd
lds
adc
xchg
mov
les
int
and
jle
scas
sarl
xor
adc
adc
int3
pop
sti
xor
repnz
mov
dec
icebp
mov
outsb
cmc
pop
or
pop
mov
jbe
aad
call
ret
push
mov
mov
jp
fs
sub
cli
dec
sbb
dec
xchg
fwait
out
pop
cli
and
and
inc
stos
test
sahf
add
andl
ljmp
pop
arpl
outsb
cmc
pop
cli
lcall
lds
vxorps
ss
std
pusha
lret
pop
loope
push
sti
je
sarb
jp
pop
jecxz
data16
loopne
and
or
pop
cltd
add
dec
repz
push
push
sbb
ljmp
mov
int3
or
shl
pop
mov
inc
jge
lds
arpl
jmp
dec
xor
add
push
mov
ret
xchg
testb
xchg
xchg
fbstp
aaa
testl
test
xor
push
test
es
js
jo
rcrb
inc
pushf
inc
xor
xor
push
mov
jns
adc
xchg
arpl
mov
jo
pop
push
loope
mov
lahf
stos
inc
int
push
filds
cmp
sbb
int
stc
lods
je
idivb
addr16
xchg
mov
pop
lret
or
sahf
or
xor
testb
add
xchg
nop
mov
push
sbb
or
jne
out
testb
in
pop
sub
das
add
xchg
pop
adc
xor
jge
shr
cwtl
insb
or
pop
rol
cmp
jo
pop
xor
cmc
and
or
jecxz
mov
fcoml
inc
test
jmp
push
mov
iret
adc
rcrl
in
inc
addr16
aaa
shlb
push
mov
push
subl
sub
sub
xchg
push
mov
and
xchg
into
clc
or
lea
pop
push
or
pop
xor
and
mov
mov
out
xchg
mov
jnp
insb
mov
movsl
daa
ficoms
cmc
subb
xchg
or
and
or
mov
pop
daa
lea
les
inc
icebp
cmpsb
cmp
dec
dec
cmp
insb
inc
out
not
iret
in
imul
inc
jae
int
pop
add
push
sbbb
adc
add
fbld
cmpsl
sbb
dec
dec
lret
aam
fmull
pop
lahf
sbb
arpl
mov
fsubp
decb
jmp
fnstenv
inc
xchg
or
cld
dec
addr16
arpl
push
push
hlt
mov
jle
call
inc
mov
mov
push
jl
jno
mov
mov
and
in
dec
int
xor
stc
push
loop
dec
lahf
jb
pop
push
xor
add
sbb
enter
pushf
lods
clc
out
fnstsw
stos
and
pop
adc
out
push
mov
jo
cmp
sti
pop
and
mov
cld
je
mov
inc
mov
mov
mov
add
dec
or
and
lock
loop
test
xor
dec
add
cmp
cmp
cmp
jbe
les
sahf
jae
leave
mov
das
andl
pop
xor
cmp
pop
mov
mov
mov
les
fsubrl
jbe
and
inc
inc
mov
js
dec
jnp
nop
add
mov
es
and
arpl
xchg
jns
mov
mov
fidivl
pop
or
andl
mov
es
or
cmp
mov
push
dec
test
or
mov
popa
movsl
sbb
loop
stos
bound
shrb
jnp
pop
lods
xchg
jb
pop
out
cltd
repnz
mov
daa
pushf
or
dec
test
cli
ss
sbb
pop
or
scas
sbb
aas
adc
mov
notl
jmp
gs
xchg
je
arpl
jns
aas
mov
aaa
xchg
lahf
dec
icebp
shr
lret
sbb
dec
sub
test
insl
out
ret
gs
sub
negb
xor
arpl
jle
aaa
aas
movsl
xor
pop
jge
dec
fiaddl
mov
push
push
mov
test
mov
arpl
inc
cmp
sub
pusha
mov
lods
test
mov
mov
or
jmp
adc
add
out
inc
stos
push
cmpsl
jnp
inc
add
mov
or
in
pop
xchg
std
jg
mov
cmpsl
sbb
dec
mov
lret
das
mov
jmp
inc
add
push
pop
lcall
pop
mov
pop
sbb
pop
push
lods
fcmovnb
scas
adc
jmp
push
cmpsl
pop
shrb
xor
jae
dec
and
xlat
inc
iret
ljmp
rorb
int3
outsl
xchg
push
inc
insb
icebp
movsb
jle
dec
popf
or
push
aas
sbb
xchg
add
daa
andl
ljmp
ret
mov
xchg
aaa
push
inc
xor
pushf
int3
insl
shrb
jb
xor
out
and
lcall
jmp
call
popa
ds
jnp
into
test
fisttpl
mov
and
in
push
std
inc
dec
push
test
pop
sub
sub
jl
lret
jno
outsl
adc
leave
sub
adc
shl
jl
in
lea
jns
mov
div
in
and
data16
sbb
icebp
push
mov
fxch
scas
outsl
sbb
into
js
dec
mulb
popf
shlb
inc
in
mov
add
push
aad
sahf
repz
sub
mov
push
pop
out
and
cmpsb
sbb
les
inc
adcb
or
adc
push
hlt
rorb
cltd
jmp
xor
xlat
iret
mov
dec
addr16
jo
movsb
scas
push
lods
scas
fmull
out
xor
insl
test
or
ds
push
dec
pop
repnz
iret
push
xchg
cwtl
sarl
jae
pop
mov
xor
cld
cmp
repnz
inc
jmp
hlt
add
insl
es
pop
shl
mov
shrl
mov
jecxz
xor
dec
jle
ss
loop
or
adc
push
mov
ret
clc
clc
arpl
fiadds
mov
or
stos
pop
mov
divl
inc
push
push
imul
mov
outsl
adc
push
leave
push
repz
jg
gs
cltd
sbb
mov
adc
dec
imul
iret
icebp
aad
out
stos
dec
mov
mov
out
sbb
mov
sub
sbb
movzwl
cltd
sbb
mov
and
stos
inc
cmpsb
js
ret
gs
icebp
pop
outsl
outsb
inc
data16
in
lods
fabs
jmp
loope
mov
jno
mov
xor
aaa
addb
test
sbb
pop
jo
adc
push
xor
call
inc
cmc
jae
add
push
in
dec
gs
popa
adc
and
in
adc
cmpsb
mov
out
call
dec
add
or
daa
out
imull
scas
sub
nop
xchg
shlb
or
cmp
push
and
out
xchg
sub
cmp
and
or
jle
adc
loop
ret
insl
sti
incl
iret
scas
insb
sub
mov
add
mov
push
push
test
add
or
add
hlt
fadds
js
dec
aam
popf
mov
ret
es
mov
enter
rol
shll
into
sbb
xor
jmp
sbb
mov
outsb
mov
push
arpl
jle
loop
xchg
xchg
fbld
ret
jno
daa
movsl
ror
cmpsb
dec
into
mov
mov
test
lock
jnp
dec
int
jmp
and
adcl
mov
cmp
push
sti
mov
mov
push
aad
ja
ljmp
sub
add
loopne
shrb
hlt
lds
dec
and
fs
test
lahf
mov
nop
mov
fs
lods
adc
jecxz
imul
out
cmpsl
push
in
inc
stos
out
fsub
je
adcb
sbb
ror
pop
jmp
pop
flds
test
addl
add
mov
fadds
iret
dec
or
mov
daa
xchg
cs
pop
pop
daa
sbb
adc
dec
daa
dec
xchg
mov
mov
in
in
pop
in
lret
push
adc
cmp
nop
fildll
pushf
jmp
jmp
dec
sbb
inc
xorb
inc
sbb
fbld
add
scas
das
fcmovnu
dec
and
mov
mov
stos
sub
outsb
pop
rclb
cli
push
and
or
pop
popf
outsb
aas
stos
dec
xor
push
scas
leave
push
push
pop
pop
stos
sub
in
popl
fwait
out
jb
and
fs
rcrb
cmp
andl
push
dec
push
je
mov
xor
sahf
fwait
inc
mov
cmp
inc
cli
sbb
sub
ja
push
xchg
push
aas
stos
sbb
shll
mov
xchg
incb
lret
out
jmp
or
mov
jno
xchg
addr16
sub
pop
sti
xchg
shlb
push
cmp
push
int3
pop
xor
push
imulb
push
fsts
test
mov
mov
sub
mov
pop
popa
inc
xchg
cmpsl
sub
jl
pushf
xchg
xchg
mov
insl
bound
sbb
push
dec
outsb
rcll
add
loop
int
add
xor
aad
push
ficomps
push
out
adcl
sbb
daa
fildl
scas
adc
jl
out
mov
cs
pop
adc
test
divb
mov
stc
mov
scas
pop
sbb
gs
dec
pop
inc
clc
aad
inc
addr16
dec
mov
jg
cltd
cltd
mov
or
cltd
lahf
push
and
pop
xchg
pusha
shll
lods
xorl
inc
aam
jp
add
mov
xorl
cmp
pop
and
fwait
cld
mov
xchg
filds
mov
ja
lcall
xor
cmp
or
jb
push
mov
les
adcl
outsl
ljmp
cmp
in
xchg
mov
push
fdiv
sbb
adc
mov
and
add
leave
into
push
pop
jo
in
fs
mov
filds
in
in
mov
push
int
aad
out
fstl
xchg
popa
ds
inc
pusha
add
cmp
xorb
xor
jnp
inc
pop
pop
dec
lret
mov
mov
mov
subb
stos
sbb
je
loop
jle
xchg
leave
testl
int
sub
in
or
mov
dec
or
push
sub
aas
arpl
js
sbb
or
jl
int
pop
jl
inc
insl
push
cli
push
test
jle
cmp
ss
dec
cwtl
or
dec
outsb
sarb
insl
int
stos
jg
cld
xlat
test
icebp
cmp
jne
repnz
sbb
insb
jecxz
pop
xchg
mov
mov
sub
into
sub
jb
mov
scas
div
sahf
fsubl
pop
ljmp
xchg
outsl
push
nop
int
mov
and
ficompl
mov
mov
mov
add
ja
test
or
out
repz
mov
rcl
idivb
adc
push
notl
test
fs
dec
xchg
ljmp
cli
or
fwait
bound
inc
inc
jo
clc
sbb
dec
jns
cmpsb
jae
pop
jp
movsl
adc
jge
push
out
insb
fcomps
dec
out
das
inc
insb
incb
fnstcw
inc
pop
sub
mov
lahf
xor
push
and
mov
fisubl
cmp
rep
mov
pusha
xor
sub
sub
aam
xor
pop
push
jnp
mov
and
sub
cli
xchg
inc
sbb
int
dec
pop
call
testl
lret
mov
cwtl
cmp
dec
push
push
sub
and
inc
ret
fwait
sub
mov
outsb
dec
test
xchg
movsb
mov
sahf
subb
mov
mov
jl
mov
sbb
mov
jo
mov
adc
out
jecxz
lcall
pop
dec
outsl
xchg
adc
and
sub
jnp
adc
and
loope
cmp
gs
imul
add
lea
push
jns
nop
ret
sbb
lcall
sub
push
fcomip
cmp
inc
and
in
fsubr
fwait
into
xor
mov
jns
adc
push
cmp
xor
mov
sub
sub
jecxz
mov
jo
cmp
movsl
nop
push
div
cli
dec
sbb
add
adc
jle
jge
fiaddl
add
fisttpl
jne
pop
test
inc
fcomps
sub
in
paddusb
out
insl
mov
push
and
and
cmp
add
addr16
sbb
sub
xchg
mov
in
dec
xor
mov
sbb
mov
clc
jne
xchg
xchg
jl
inc
pop
or
pop
push
enter
lea
hlt
lcall
push
movsl
jns
cmp
push
movsl
aaa
std
pop
cs
xchg
pushf
out
stc
pop
ds
cmp
or
daa
daa
icebp
inc
hlt
addl
and
push
mov
lret
xchg
xchg
fisubrl
ror
jb
adc
das
shlb
push
les
push
jnp
out
inc
jmp
jg
in
movsl
pop
loop
loopne
xor
das
psrlw
orl
inc
das
stos
ss
scas
insb
sbb
pop
adc
sub
dec
xchg
pusha
xor
jb
int3
xchg
sti
jne
push
mov
in
fldenv
xchg
adc
pop
or
push
jae
jp
mov
add
pop
fs
loop
test
pmuludq
mov
sub
push
loop
sbb
jbe
test
fdivr
incl
mov
inc
fadd
inc
fcomps
jg
mov
push
sbb
and
cld
mov
xchg
sbb
rcl
xor
std
je
lret
xchg
das
push
stos
and
adc
ja
out
ss
test
scas
out
fcos
popa
fstpt
xchg
mov
mov
jae
pop
push
ficomps
jmp
xchg
mov
and
xor
test
aam
add
jmp
cmp
lods
sub
and
popf
xchg
or
sti
push
and
sbb
push
sti
push
dec
pop
sbb
mov
sahf
popa
addl
out
popf
push
xchg
jmp
mov
stos
mov
popa
pushf
push
pop
push
leave
js
stos
repnz
sbb
sbb
ljmp
addb
jne
pushf
push
nop
out
adc
lahf
push
sbb
pop
fiadds
cmp
sbb
inc
cmp
cmpsl
in
cwtl
cmp
std
imul
ret
pop
and
xchg
orb
pop
cmc
cmp
sbb
cld
out
xchg
cmp
and
inc
xchg
imul
repz
jle
xor
and
sti
push
cmovno
sub
es
fldenv
insb
mov
or
push
repz
mov
pop
out
push
flds
sub
cmp
aas
ss
sub
xor
mov
pop
sahf
mov
nop
loopne
jo
jge
add
pusha
out
outsb
mov
add
push
repnz
cld
fstpl
jae
stos
lcall
pop
mov
mov
ja
cmp
arpl
pop
xchg
test
jne
sub
stos
mov
nop
fadd
mov
js
pand
inc
add
mov
std
xchg
test
xchg
jge
and
mov
repnz
sbb
jne
mov
mov
and
jo
cs
add
mov
or
daa
mov
and
add
lock
and
push
mov
cmp
in
lahf
stos
loope
data16
pop
pusha
popa
and
fsubs
je
inc
mov
rorw
cmp
push
mov
push
ss
xchg
add
inc
add
cmc
mov
jns
in
adc
cmp
pop
xor
or
outsb
addr16
stos
dec
or
mov
mov
mov
int
cmp
ret
dec
pop
cli
xchg
add
stc
inc
iret
dec
and
mov
pop
xchg
cmpsb
or
fucomp
lock
push
insb
clc
aad
pop
cmp
out
test
adc
xchg
xchg
push
es
hlt
test
cmpsl
push
incb
sti
sub
mov
lret
xor
ret
cmc
daa
fsubrl
mov
mov
jmp
xchg
rorb
fwait
pop
lret
jbe
test
iret
pop
cmp
stos
gs
iret
push
and
mov
sbb
push
xor
add
loope
mov
adc
jl
pop
dec
or
cmp
je
jo
push
xor
xchg
stos
sub
pushf
xor
push
dec
sbb
int3
xor
cli
imul
pop
push
cld
rclb
sbb
loopne
incl
sub
mov
jbe
rcrb
imulb
jg
insl
push
ret
add
pop
leave
push
pop
mov
leave
or
sbb
jb
sub
lahf
lret
insb
int
test
mov
push
cmp
add
fs
xchg
jae
sub
popl
dec
pop
sub
cmp
mov
orl
pusha
fldenv
mov
sbb
call
fbstp
inc
sub
adc
movsb
scas
adc
sbb
jl
cwtl
shlb
sbb
push
lret
mov
sti
pop
enter
or
filds
pop
add
stos
jnp
push
sahf
in
addr16
sbbl
loop
std
out
mov
dec
mov
cmp
mov
outsb
and
ljmp
cltd
push
add
xchg
ss
dec
or
bndstx
push
xchg
lea
sbb
rcrb
clc
popf
or
imul
mov
mov
daa
nop
adc
fisubrl
fwait
mov
jno
js
pop
iret
cmp
push
movsb
inc
rcll
lahf
xchg
push
pcmpeqd
scas
imul
sub
adc
aam
push
mov
mov
sbb
pop
xchg
add
shl
test
or
in
int3
xchg
add
jnp
repz
outsl
mov
jbe
and
sub
jnp
or
push
xchg
addr16
add
inc
add
ja
and
cmpsl
jmp
push
rolb
lahf
sbb
inc
fnsave
loopne
pop
cmp
in
scas
add
push
aas
cmpb
cmp
iret
pop
test
out
hlt
stos
pop
frstpm(287
mov
loope
dec
pop
mov
xor
mov
repz
and
sbbb
push
jmp
loop
cmpsl
cmp
pusha
adc
mov
in
mov
pop
sub
icebp
mov
inc
pop
ret
mov
mov
dec
addb
mov
test
dec
scas
xor
dec
repnz
je
stos
leave
mov
aam
ret
add
in
pavgw
xchg
dec
jne
mov
sbbb
jcxz
jg
add
std
jnp
aad
add
in
add
int3
fiaddl
cmp
xlat
mov
and
imul
add
mov
loop
xor
jge
adc
and
fdivrs
inc
push
mov
push
mov
out
inc
dec
pop
pop
jecxz
nop
pusha
jmp
or
mov
jp
aaa
test
shll
jg
jmp
nop
stc
cld
adc
aas
and
mov
push
leave
insb
lods
out
push
loope
mov
movsb
dec
nop
fistps
adc
shl
xchg
adc
rorb
daa
mov
jmp
sub
outsl
rol
inc
icebp
pop
mov
push
add
cmc
sbb
adc
in
push
clc
adcb
adc
pop
cltd
jge
cmp
call
pop
stos
push
push
icebp
push
mov
xchg
xor
subb
lds
mov
fidivrl
inc
aas
cli
in
jp
imul
test
cmc
push
idiv
mov
jb
leave
negb
shlb
mov
xchg
add
adcl
jns
js
repnz
jg
or
adc
in
add
lods
lods
add
jg
mov
dec
push
mov
cmp
lods
jge
mov
imul
cmpsb
lods
mov
jo
sub
jne
push
cmp
mov
into
push
push
and
add
loope
movsb
mov
in
in
mov
push
push
repz
mov
std
xlat
dec
push
hlt
pop
ss
add
jp
adc
cltd
cmp
mov
inc
and
outsl
add
lcall
xchg
dec
or
leave
lea
int3
jbe
inc
int
xchg
lret
push
ja
adc
aas
pop
cmp
add
pusha
repnz
inc
lret
imul
dec
mov
xor
xchg
xor
push
icebp
sub
mov
lods
pop
jl
sub
aas
imul
pushf
mov
nop
cli
pop
ljmp
push
jp
rcl
mov
xchg
cmc
cli
push
mov
jno
inc
movsb
cmpsb
mov
inc
mov
jb
idiv
sarb
jae
clc
jp
clc
sub
xor
insl
out
repz
sub
dec
jge
sti
dec
testb
lret
hlt
sbb
cmp
mov
push
or
test
mov
pop
mov
push
in
xor
imul
pop
mov
add
and
mov
mov
pushl
enter
imul
jmp
adc
mov
lock
pop
add
stc
int
or
xlat
es
jg
test
pop
inc
mov
adc
xor
out
enter
jmp
cld
dec
push
cwtl
xchg
add
nop
pop
test
dec
inc
fldt
sbb
lock
push
test
outsb
sbb
or
cmp
sub
push
out
mov
sbb
dec
mov
mov
repnz
fdivr
dec
jp
mov
pop
push
pushl
xlat
pop
jno
mov
data16
xor
into
sub
mov
scas
loop
mov
jae
testb
cwtl
loop
inc
xor
fmuls
jl
and
jl
lods
ljmp
sahf
jl
inc
pop
inc
sbb
in
jae
xchg
lods
pop
addl
and
das
shl
push
mov
mov
mov
loope
repz
jbe
adc
daa
roll
add
inc
fsubrl
xlat
repnz
xor
push
jnp
cli
jecxz
sub
xor
jp
aad
out
jl
dec
mov
data16
movsb
nop
lahf
lock
xor
or
int3
pop
dec
or
icebp
lahf
sti
hlt
frstor
or
push
cmp
outsb
rorb
inc
dec
mov
mov
xor
fwait
xchg
mov
jmp
in
fldt
xor
loope
add
sahf
xor
jbe
mov
dec
inc
mov
subb
cmp
mov
xor
push
cmp
dec
loopne
cld
mov
xchg
mov
scas
sbb
imul
lret
outsl
ja
lea
hlt
scas
xchg
adc
add
lds
icebp
push
xor
jo
shr
fiaddl
jle
sbb
outsl
sub
push
test
fildl
je
adc
in
popf
xor
xchg
dec
xor
xor
or
jno
jecxz
push
out
mov
outsl
fdivrl
jnp
leave
cmp
pop
call
ljmp
hlt
xchg
add
addb
push
ljmp
cmp
xchg
lret
dec
ret
mov
jl
xchg
xchg
cmp
pop
mov
ds
sbb
ds
adc
leave
inc
fucomi
or
or
mov
pusha
push
add
enter
sti
xor
or
mov
insl
sbb
mov
fwait
pop
fwait
sbb
lret
sbb
add
iret
push
gs
mov
shlb
inc
xchg
insb
inc
into
adc
sbb
mov
fbld
xor
shrl
lret
sub
ja
and
mov
mov
dec
iret
and
mov
and
aas
pop
jns
test
push
into
mov
mov
imul
sbb
daa
ja
inc
dec
mov
push
fwait
cmp
mov
and
imul
add
sub
and
leave
adc
xor
mov
cmp
lcall
push
mov
and
sub
mov
push
sti
add
movsl
jge
clc
std
pop
mov
ret
pop
push
repz
xchg
cmpsl
lret
cmp
fcompl
xchg
add
or
xchg
mov
mov
fidivrs
aaa
sbbb
jno
cmpsl
push
cmp
pushl
pop
adc
jns
dec
push
aas
jmp
mov
add
jg
mov
push
in
mov
xor
jg
cmp
jbe
ljmp
je
xchg
jecxz
sbbb
repz
lds
pop
sbb
adc
cltd
dec
lods
lahf
push
insl
and
test
xor
lret
lds
rolb
add
inc
imul
insl
es
push
xor
movsb
subb
push
and
or
xchg
clc
mov
cmp
pop
loop
fists
bound
bound
xor
aam
out
xor
je
addr16
shll
sub
shlb
jp
add
ror
or
adc
lds
notl
add
imul
imul
jo
sbb
add
mov
mov
test
cmc
jnp
sbb
cmc
outsl
push
fs
inc
cli
cmp
jp
cmp
ficoml
ja
bound
mov
mov
data16
mov
xchg
jp
cmp
fildll
jge
rorb
push
int
and
pushl
or
mov
jl
repnz
or
push
inc
jecxz
into
jge
imul
and
aaa
pushf
out
pop
hlt
push
jae
mov
mov
inc
mov
mov
insl
xor
pop
sub
shll
stc
or
in
adc
adc
cmp
inc
std
jns
xchg
xchg
mov
test
xor
push
or
out
rolb
push
adc
mov
xlat
sarl
lock
pushf
jo
in
xor
iret
icebp
xchg
aaa
test
fptan
sbb
pop
mov
lea
sub
jle
das
mov
inc
repnz
jle
add
fldcw
mov
std
mov
gs
lahf
inc
jecxz
mov
mov
fdivrp
jmp
mov
lcall
inc
mov
mov
adcb
cmp
pop
push
cmpsl
mov
push
sub
pop
fdivrl
jecxz
sub
and
pop
add
pop
adc
icebp
stos
adc
rcrl
arpl
lds
leave
test
inc
les
mov
push
test
dec
repnz
jecxz
lret
dec
fidivl
cmp
mov
pop
ds
arpl
mov
pop
xor
mov
dec
inc
imul
rorb
dec
add
xchg
xor
xchg
mov
mov
mov
pop
int3
inc
inc
adc
test
and
stc
or
fs
mov
mov
or
test
cli
xor
hlt
fcoms
lcall
es
aaa
dec
int3
add
repz
mov
mov
jne
add
shll
or
divl
inc
clc
hlt
rorb
push
adcb
lods
pusha
inc
sahf
addr16
sub
mov
or
pmulhw
mov
xchg
sbb
xlat
sbb
orb
cmp
pop
rolb
xchg
pop
stos
and
inc
pop
cltd
mov
jae
dec
popf
fdivl
ljmp
fcomps
jns
sarl
xchg
in
cmc
xchg
loop
lcall
jbe
jbe
jnp
mov
sub
cli
es
test
out
push
mov
jmp
mov
fisubs
adc
dec
cmp
push
call
pop
add
sbb
stos
push
fimull
cmp
add
ror
inc
jo
aas
cltd
add
jne
or
scas
xchg
rol
jmp
cmp
push
mov
xchg
popa
xor
xor
lea
mov
jb
and
xor
fbstp
fdivs
lcall
push
ljmp
mov
std
mov
mov
jno
xor
repnz
dec
mull
out
jge
stos
jecxz
imul
imul
sbb
dec
pushf
mov
push
cld
scas
jns
aaa
fistl
inc
add
or
and
pop
iret
sbb
cmp
add
std
cmp
adc
inc
pop
inc
hlt
or
pusha
js
or
adc
ja
xchg
xchg
adc
in
fstpl
mov
rcll
mov
mull
xchg
xchg
ljmp
mov
roll
add
pop
xchg
mull
dec
mov
inc
add
cmp
ret
dec
aas
mov
arpl
mov
das
cmpsl
sbb
popf
and
or
fildll
push
icebp
add
jg
movl
int
mov
cwtl
sub
xor
das
or
push
mov
jmp
js
pop
std
mov
icebp
aaa
adcl
lock
loopne
movsl
out
cs
inc
inc
pop
inc
xor
or
jbe
xchg
insl
push
mov
inc
es
sub
je
insb
xor
mov
mov
mov
inc
or
or
and
cltd
in
xchg
and
adc
jbe
sbb
jns
push
loopne
jb
mov
pop
fcomps
sahf
fs
xor
pop
enter
inc
dec
shlb
out
repnz
stos
cmp
dec
xlat
push
xchg
bound
cmp
adc
int3
push
sbb
imul
xchg
je
push
jl
add
or
lock
mov
mov
testl
sub
pop
or
pop
xchg
dec
cmc
and
inc
mov
lret
mov
data16
arpl
leave
ret
push
outsl
inc
mov
mov
mov
mov
mov
pusha
fcoml
mulb
xlat
in
hlt
jb
mov
fisubs
loope
dec
push
jns
int3
sub
add
insl
cmpl
sbb
stc
out
loop
pusha
push
in
popf
pusha
cmp
jo
dec
clc
aad
mov
testl
dec
push
jnp
rcr
jle
ds
dec
loope
icebp
xchg
mov
push
inc
and
or
aam
xchg
mov
adc
xor
xor
xchg
repz
mov
into
xchg
imul
repz
insb
std
pop
movsl
mov
movsb
adc
add
mov
fwait
jb
cli
xor
xor
adc
andb
mov
sub
loop
popf
aas
add
std
fldcw
pop
cmpl
cli
scas
sub
data16
cltd
pop
pop
daa
outsb
xchg
add
aaa
push
xchg
sub
lds
rep
out
loop
mov
sub
inc
sbb
arpl
fucomp
mov
std
xor
out
add
out
push
xchg
js
cmp
xchg
mov
cmp
les
push
shlb
push
mov
adc
inc
mov
inc
popa
add
std
sub
push
and
in
in
add
fcompl
insl
mov
and
adc
sub
cmp
pop
mov
inc
xchg
call
int3
stos
adc
icebp
scas
mov
sbb
dec
hlt
push
icebp
cmp
xchg
nop
jp
repz
jo
jns
jb
cmp
dec
push
ds
mov
ret
stos
sbb
loopne
cvtps2pi
enter
pop
adc
fwait
adc
cmpsl
sub
das
jno
pushf
outsb
fisubrl
dec
mulb
add
mul
and
mov
mov
dec
push
test
outsb
jmp
test
lock
cld
lock
repnz
cwtl
movl
and
add
or
dec
cwtl
and
fstpl
mov
adc
repnz
or
sub
sbb
and
addr16
xor
adc
pop
xchg
std
loope
xchg
inc
hlt
stos
ficompl
jo
jb
adc
aas
xchg
xlat
pop
and
or
fisubs
pop
cld
inc
arpl
shll
js
in
cmp
xchg
les
push
movd
loope
cmp
mov
mov
add
jecxz
inc
sub
sub
or
clc
stos
les
pop
lret
adc
lahf
push
or
push
fnstenv
cmp
mov
cltd
in
into
stos
cmp
jb
mov
dec
sahf
pop
pop
out
stc
jne
mov
or
mov
mov
cld
decl
dec
adc
jne
xchg
cltd
add
mov
jle
rolb
mov
inc
push
jp
inc
jmp
lds
ja
jg
lahf
push
pusha
dec
daa
adc
scas
jmp
cmp
add
popa
emms
inc
mov
das
xor
in
sub
fdivs
rolb
sbb
cmp
push
add
arpl
dec
or
adc
ficompl
idivb
push
ficomps
jmp
nopl
or
out
adc
fmull
ret
mov
scas
jo
mov
bound
int
shlb
imul
jnp
sar
aad
mov
jne
and
int3
jl
adc
jb
xchg
adc
add
lahf
and
stos
add
push
jp
adc
adc
cmp
mov
xchg
lods
mov
into
cmpsb
lock
imul
adc
lea
mov
sub
gs
daa
sub
and
sub
xchg
jp
dec
pop
sbb
and
cmp
push
daa
mov
hlt
movl
dec
in
pop
test
xchg
and
mov
into
pop
out
ljmp
jmp
push
pop
cmp
lea
movsl
sub
lock
pop
lea
pushl
cmp
mov
add
mov
data16
lods
mov
mov
negl
push
es
pop
sbb
bswap
stc
lahf
inc
pop
mov
aas
je
add
and
movsl
dec
ds
mov
imul
push
adc
jp
mov
xchg
enter
ds
sbb
adc
popf
add
jg
xchg
adc
aaa
stos
add
enter
add
push
stos
xchg
add
cwtl
cmpsb
in
jmp
aam
cwtl
add
popa
sbb
mov
and
rorb
xchg
pop
xchg
xor
outsb
xor
inc
loop
jo
or
testb
in
out
imul
adc
xlat
sbb
ret
adc
movsb
mov
cmp
aad
insl
sub
jmp
inc
imul
jb
idiv
push
inc
mov
lock
das
xlat
cmp
mov
and
adc
scas
cs
or
ret
clc
fsubl
xor
inc
pop
insl
sar
ljmp
adc
and
sub
pop
adc
pop
sbb
sub
pop
and
mov
scas
cmp
insb
push
shll
ret
sbb
mov
aam
stos
cmp
mov
xchg
lahf
lods
xor
cmc
mov
sub
push
mov
inc
lea
add
in
xchg
nop
jno
stos
pusha
insb
stos
mov
div
ljmp
cmp
iret
shlb
push
sub
loopne
and
inc
mov
lock
cmp
jns
mulb
and
dec
stos
sar
or
cmp
arpl
test
movl
shr
and
adc
aad
sub
cmc
loop
repnz
xchg
sti
mov
push
dec
loop
cld
sub
cmc
push
std
inc
adc
jb
iret
mov
mov
jge
in
adc
pop
in
jb
ss
in
push
xchg
mov
pop
lea
lahf
mov
xchg
stos
test
addl
mov
mov
lahf
je
push
pop
stc
lret
push
mov
lret
mov
xchg
pop
and
pop
xchg
or
xor
sub
cmp
mov
and
adc
imul
scas
jo
inc
data16
and
cmp
ljmp
sbb
jmp
clc
push
push
lods
outsb
inc
lds
pop
int
mov
mov
or
insb
mov
mov
adc
push
ret
lea
pop
push
insl
popa
mov
mov
jl
lock
sbb
loopne
sub
fstps
loop
mov
adc
dec
push
mov
lcall
insl
inc
and
ss
into
dec
cmpsl
push
in
out
sub
pop
scas
test
adc
jecxz,pt
sbb
fs
jb
fisttpl
movzwl
pop
cmp
push
push
in
push
into
inc
cmp
mov
and
int3
mov
xor
push
cmpsl
loop
sub
or
push
cwtl
call
lcall
fwait
js
adc
rorb
jle
jb
cli
subb
ret
ret
adc
clc
popf
or
mov
and
jge
clc
pop
aad
testb
mov
imul
repnz
mov
sbb
jg
cli
xor
xchg
push
mov
loop
mov
or
popa
movsb
cli
inc
pop
cmc
insl
inc
mov
test
lods
clc
cmpsb
cmp
or
sar
ja
jae
dec
sahf
fldl
ljmp
mov
jmp
xchg
mov
dec
stos
inc
notl
mov
mov
lock
push
or
dec
clc
cmp
into
shlb
dec
cwtl
outsb
lods
xchg
lock
jle
stos
roll
hlt
sbb
je
jo
adc
test
cmpsl
dec
je
push
xchg
adc
setp
inc
cmp
pop
sti
fwait
ljmp
jle
jge
and
or
mov
test
mov
ror
addr16
xchg
jnp
scas
sub
in
stos
outsb
es
sbb
push
inc
xor
adc
insl
push
pop
and
push
lret
cli
and
fwait
xchg
nop
push
sbb
pop
jle
xor
sub
or
xchg
stos
cld
shlb
fnstcw
mov
mov
push
sbb
std
sbb
data16
cmpsb
lock
lret
dec
cmp
repnz
and
test
loop
nop
lods
xchg
mov
and
or
xlat
pop
out
xor
and
scas
nop
rcr
sub
int3
cli
stos
rolb
call
push
xlat
cmpsl
das
repnz
cmpsl
cmp
push
add
loopne
jno
push
pop
sbb
ss
fnsave
pop
xor
shl
mov
mov
add
mov
xor
cld
lds
add
mov
xchg
outsl
inc
mov
push
ljmp
sbb
mov
push
mov
lahf
jp
std
mov
scas
inc
test
jp
fisttpll
adc
push
sub
jno
push
shr
push
jbe
adc
mov
js
mov
push
mov
pop
push
das
cmpsb
add
lret
scas
xor
lret
push
test
mov
adc
fadds
call
or
cli
cmpxchg
cmp
fimuls
push
test
pop
pop
lcall
add
or
cmpsb
push
lds
jae
inc
loope
je
push
jge
mov
movsl
xor
jb
nop
mov
outsl
pop
xor
stos
stos
std
sbbb
lea
call
lea
repnz
pop
in
rcll
and
in
cmp
pop
jno
fsubl
cs
adc
pusha
std
ret
in
ret
lock
jno
xchg
fs
xchg
sbb
mov
nop
sub
add
sub
jle
jnp
in
inc
aam
mov
je
mov
mov
mov
and
mov
scas
or
jmp
rep
xor
sub
in
inc
add
sar
mov
add
and
push
or
cltd
out
repnz
lock
cmp
hlt
dec
sarl
mov
pop
mov
shrb
mov
ljmp
aaa
sub
mov
xor
push
in
push
fnstcw
ret
ds
es
out
imul
pop
lock
xchg
hlt
or
rcrb
xor
dec
dec
jmp
pop
sub
arpl
push
je
into
jle
in
jo
stos
clc
aaa
mov
mov
xchg
pop
inc
stos
clc
out
jae
mov
adc
mov
mov
lea
add
xor
out
mov
subb
fwait
dec
add
mov
out
rorl
sarb
xchg
mov
mov
sti
flds
dec
dec
add
insb
jle
loopne
add
pop
push
or
mov
lret
fisubrl
cmp
inc
lret
and
testb
jp
cs
dec
int3
cmp
gs
icebp
adc
mov
rolb
inc
xor
sub
dec
in
push
push
lods
sub
cmc
jmp
data16
addb
les
outsl
add
xchg
add
mov
cwtl
jg
mov
out
subb
cmpl
sub
mov
cmp
enter
push
stos
imul
roll
or
gs
arpl
or
pop
fidivs
adc
fildll
aas
push
inc
les
add
imul
movsl
ss
add
adc
push
int3
push
xor
inc
jne
adc
jmp
cltd
aaa
push
adc
ja
fildl
xlat
push
out
loopne
mov
ljmp
pushf
aas
push
frstor
or
mov
arpl
push
stos
outsl
sbb
mov
and
and
sbb
jns
les
mov
int
mov
mov
jp
sbb
pop
mov
xchg
jno
add
aaa
lret
sbb
cmp
xorb
mov
sub
fimull
jo
dec
cld
sbb
jb
or
mov
das
push
imul
adc
lret
pop
jmp
xlat
jne
and
out
leave
adc
stos
push
mov
loope
mov
push
push
dec
das
jmp
pop
mov
cmpsl
jns
lcall
stc
es
cmp
test
in
mov
cs
inc
nop
mov
cmpsl
sub
mov
dec
adc
or
movsl
jp
pop
mov
jb
jno
cmp
aaa
rdtsc
in
mov
pop
xchg
test
cmp
daa
faddp
and
bound
repz
lock
jg
mov
dec
push
push
fwait
ja
scas
mov
cmpb
stos
das
scas
cmpsl
jg
mov
and
out
lret
cli
dec
add
xor
cmp
jmp
sub
adc
inc
out
push
adc
lods
mov
and
adc
ret
lret
in
hlt
outsb
inc
loopne
call
aaa
push
or
adc
repz
negl
repz
pop
cmpsb
jnp
jp
test
fdivs
pop
mov
int3
dec
push
push
aad
or
push
dec
jg
movsb
dec
inc
dec
icebp
inc
test
pop
jmp
ljmp
pushf
ljmp
xchg
cltd
in
loop
lods
jne
mov
call
sahf
arpl
xchg
xchg
inc
jns
cmp
and
pop
out
jle
sbb
mov
and
repnz
aaa
outsb
pop
sbbl
roll
pop
pop
xor
cmp
in
pop
pop
and
and
mov
rorl
push
push
xor
ficomps
sbbl
sti
pop
iret
cltd
popf
std
loope
jo
fs
jmp
mov
or
nop
xor
sbb
movsl
mov
nop
jae
sbb
mov
or
ss
aaa
dec
in
jge
cltd
xor
fnstsw
or
les
leave
dec
jg
and
movb
fsubs
xor
lods
or
dec
adc
cld
mov
add
in
enter
sub
pop
arpl
or
fsubrs
add
aaa
mov
mov
inc
sahf
sub
sbb
pop
inc
lods
mov
add
movsl
aam
adc
int
rclb
bound
int
jbe
mov
sub
push
push
mov
js
push
leave
push
mov
dec
push
jge
repnz
stos
mov
inc
jb
xchg
inc
rcll
cltd
jp
icebp
adc
sbb
lea
ja
lods
mov
jmp
jp
inc
xor
cmp
cld
mov
fdivr
mov
int3
lods
inc
lret
pop
fmull
leave
fistps
cmp
aas
dec
aad
add
push
mov
push
icebp
aad
inc
push
inc
xor
mov
mov
push
dec
das
stc
les
or
pusha
cmp
mov
cmp
cmp
adc
bound
addb
xchg
sub
dec
movsb
xor
out
fstpl
repz
pop
sbb
or
xlat
outsl
popf
push
fsubrl
in
jmp
jns
pop
inc
mov
jno
aaa
hlt
daa
adc
xchg
xchg
inc
cmp
adc
sbb
jge
adc
or
cwtl
jmp
push
imulb
aam
sub
in
sbb
push
mov
test
sbb
add
cmp
flds
inc
sbb
cmp
int3
xchg
std
pop
jmp
jbe
fwait
jne
ja
jmp
insl
cmpsb
pusha
push
cmp
push
or
pop
pop
je
xchg
test
je
test
mov
clc
xor
daa
mov
push
or
pop
cmp
xorl
push
sub
call
in
ljmp
test
jo
je
dec
mov
jnp
pushf
jbe
icebp
jae
mov
test
nop
jle
mov
or
cmpsl
and
sub
js
pop
sbb
in
lcall
jo
clc
lea
sti
repnz
sbb
xor
jnp
jecxz
rcll
lret
jb
jmp
sub
cltd
movsb
sbb
jg
push
pop
out
push
out
imul
and
in
notl
add
subl
inc
repnz
leave
mov
and
cmp
testb
fs
and
sbb
lock
and
loopne
or
pop
test
cld
jg
cmp
mov
enter
in
in
insb
js
aad
sbbl
sti
iret
imulb
popa
pop
jns
into
mov
rclb
clc
ss
inc
rorl
ficoml
lcall
test
aas
sbb
test
into
sbb
dec
cmpsl
xor
jl
mov
jecxz
bound
jl
jbe
das
jbe
dec
leave
stos
inc
push
outsb
fstl
xor
xor
jle
cmpsb
ja
inc
dec
fistpll
add
mov
xchg
mov
adc
push
bound
dec
or
or
ljmp
gs
scas
sub
dec
das
push
pop
jg
stos
push
push
popa
jp
or
cmp
ljmp
cmp
adcl
insl
sahf
push
loope
out
int3
adc
fnstcw
roll
fimull
jp
pop
mov
push
popf
jge
ja
mov
inc
mov
dec
and
aad
inc
popa
mov
pop
sbb
ja
jno
subb
push
sub
cmp
mov
xor
mov
into
mov
jb
xchg
mull
xchg
add
ficoms
mov
mov
roll
cmp
pop
pop
pop
adc
inc
pop
cwtl
subl
jmp
inc
lret
cwtl
mov
call
iret
xor
ja
push
cmpsb
test
add
inc
pop
outsb
insl
xchg
mov
jno
cmp
pusha
cs
pop
mov
mov
mov
jg
das
and
cli
push
or
mov
sub
pop
xchg
aaa
rorb
jbe
shll
stc
stc
sbb
imul
jns
jnp
loop
jbe
add
into
or
jp
xor
or
repnz
or
lds
ja
mov
or
cld
lods
imul
outsl
dec
adc
pushf
cmp
inc
sbb
mov
cmp
aaa
jae
nop
inc
mov
hlt
outsb
cli
xchg
lret
xchg
sub
push
mov
aaa
jnp
lret
push
shll
hlt
xor
int
pop
mov
notb
sub
mov
push
sbbb
mov
push
xchg
mov
fsubl
push
and
sbb
pusha
mov
out
loopne
inc
xor
ret
dec
or
sarl
or
push
in
addr16
or
pop
adc
adc
outsb
sub
inc
mov
inc
dec
mov
shrl
xchg
mov
pop
lock
je
addr16
inc
cmp
pop
jbe
mov
bound
dec
or
dec
stos
jl
fildll
pop
or
clc
push
fs
cmp
xchg
or
adc
and
popf
push
pop
inc
sub
mov
xchg
mov
fildll
or
mov
sub
sub
addr16
repnz
push
add
mov
pop
aam
mov
cld
mov
fnstcw
mov
pop
lret
int3
dec
xchg
outsl
scas
loopne
adcb
or
inc
rcll
adc
push
sarl
icebp
data16
sub
inc
and
dec
mov
sub
lock
gs
xchg
inc
out
fimuls
cmpsb
push
xchg
repz
fs
ds
xchg
popf
mov
test
push
or
mov
lahf
sub
xchg
jno
dec
icebp
dec
push
imul
mov
cmpsb
mov
sbb
mov
rcll
in
sbb
jl
xor
ss
xor
push
push
cmp
xor
es
dec
mov
jge
sbbb
mul
pop
sub
test
dec
outsl
mov
pop
js
stos
in
scas
cmc
pop
repz
insl
movsbl
nop
jo
jp
add
add
into
les
call
dec
lods
inc
rclb
adc
subl
mov
stos
loopne
shll
call
cwtl
addb
icebp
sub
stos
dec
testl
mov
mov
rclb
cli
mov
out
popa
xor
subb
into
rcrb
dec
xor
gs
adc
jl
jbe
add
lock
dec
fimuls
nop
and
lds
jle
mov
adc
mov
push
xor
inc
and
fdivrp
gs
cmc
cwtl
cmp
dec
inc
ja
cmpl
aam
and
pop
hlt
push
add
sub
fwait
lret
mov
inc
lret
lds
pop
xchg
push
imul
jle
out
loopne
and
xor
sbb
or
je
or
imul
mov
cmp
lods
pop
loopne
mov
xor
jbe
cmp
xor
aaa
mov
outsb
fimuls
jbe
sub
pop
je
jg
bound
sub
xor
mov
jns
pop
jno
les
cmpl
scas
shl
aaa
xor
jb
adc
lcall
mov
repz
loop
mov
pop
mov
mov
lea
enter
nop
subb
js
jae
pop
js
inc
icebp
inc
mov
outsl
inc
lods
rcrl
out
inc
icebp
mov
aas
add
mov
lcall
fidivs
mov
jge
or
mov
sbb
dec
adc
test
dec
pop
icebp
scas
adc
shl
xchg
dec
dec
ss
sar
fmull
repnz
repnz
pop
dec
sarl
cmc
arpl
mov
dec
and
les
shrb
fsub
xorl
sti
or
sahf
pop
sbb
sbb
jo
sbb
lcall
cmpb
mulb
jb
cltd
iret
movsl
cwtl
lock
and
add
xchg
inc
dec
mov
lret
lock
xchg
cmp
sarl
or
mov
mov
xor
xchg
mov
in
jae
adc
push
push
pop
jecxz
loope
dec
cmp
pop
push
loop
xor
fdivrp
sub
ja
pop
fwait
jnp
dec
pop
lret
sub
leave
xor
add
std
nop
les
popf
pop
or
xor
add
jecxz
sahf
dec
scas
enter
pop
sti
jb
pop
dec
xlat
fstpl
jle
pop
in
sbb
sti
lock
lcall
cmp
adc
testb
nop
aas
movsb
dec
test
popa
jg
mov
lahf
cmpsl
imul
das
and
cmp
push
jl
loop
pop
mov
rorl
pop
push
lret
xchg
sbb
into
arpl
call
xorl
daa
arpl
mov
sti
xlat
pop
out
xchg
scas
mov
or
hlt
adc
aam
pop
pushf
dec
shll
loope
rcrl
dec
xchg
mov
out
and
dec
mov
mov
push
ljmp
inc
in
data16
lock
test
inc
or
aaa
xchg
dec
test
pop
jge
mov
inc
rcrl
xchg
mov
pop
cltd
cld
ja
mov
push
adc
push
jmp
add
dec
adc
negb
std
lret
cmp
dec
mov
imul
lock
mov
enter
add
dec
xorb
sti
dec
or
xchg
jno
xor
dec
xchg
push
out
cmpsb
jmp
cmpsb
std
ljmp
sbb
ljmp
inc
adc
lret
pop
fsubl
mov
incl
mov
jmp
gs
jge
sarl
incl
dec
xchg
cmp
push
orl
jb
jno
xor
xchg
imull
int
sbb
mov
mov
cwtl
and
xchg
sbb
arpl
fsubrl
clc
std
call
inc
je
and
mov
add
out
adc
imul
repz
pop
lea
popf
inc
xor
andl
aas
mov
and
out
jno
push
in
test
dec
int3
shrl
cmpsb
int3
ret
pop
adc
sub
dec
scas
pop
pop
push
sub
std
or
jnp
les
adc
repnz
dec
and
pop
push
cmp
lcall
jge
mov
nop
and
lock
scas
xchg
push
mov
fs
sub
cltd
xor
loop
call
push
in
imul
int
in
xor
mov
and
mov
leave
pop
xchg
cwtl
push
imul
in
lcall
fs
sub
xchg
jg
jle
sub
pop
and
scas
stc
lock
push
das
stos
add
cmp
out
enter
and
mov
mov
cmp
sub
ds
mov
loope
enter
fisttpll
cmc
insb
jle
xor
rol
pop
add
cmpsb
xchg
insb
adc
shl
mov
sbb
push
jne
cmp
jns
ror
and
cmp
insb
outsb
push
xchg
movsb
sbb
mov
mov
cmp
pusha
sub
cmp
icebp
sahf
and
mov
add
inc
leave
xchg
cmc
dec
pushf
fmuls
push
sub
cmp
jp
cmp
mov
ficoml
cwtl
pusha
push
lea
daa
cmp
inc
and
cmpsl
aaa
out
sbb
lret
pushf
in
dec
pop
push
inc
ficompl
outsl
nop
xchg
inc
xchg
stc
fwait
mov
test
ds
movsl
daa
stos
xor
leave
mov
sbb
outsl
mov
fistpl
and
push
mov
mov
fldt
xchg
mov
sub
push
fcmovne
push
and
push
push
cli
pop
pop
jb
adc
jae
xchg
push
xor
xchg
imul
ret
mov
test
fdivrs
popf
stos
aas
adc
cmp
xchg
cmp
xor
xchg
push
outsb
in
cli
mov
dec
test
pop
or
sbb
adc
out
out
fisttps
mov
and
xchg
sub
repz
dec
cs
fcmovnb
mov
jge
mov
push
xor
repz
mov
pushf
xchg
repz
or
cmp
int3
xchg
test
into
xchg
hlt
xor
xor
adc
lcall
test
cmpsb
fwait
jae
cld
idivl
ficomps
jnp
and
fsubrl
js
cmp
cli
dec
fstpt
jp
aaa
test
pusha
adc
sti
cmp
scas
lds
icebp
lock
fisubrl
std
pop
cmp
mov
push
cwtl
cmpsb
pop
test
push
aam
leave
into
lea
lret
ret
push
std
ret
pop
adc
sti
mov
adc
aam
scas
inc
mov
fwait
neg
inc
pop
mov
pop
mov
fmulp
jg
stos
dec
pop
leave
je
push
mov
xchg
movb
mov
jge
sbb
lret
pop
xor
gs
dec
dec
stos
mov
es
or
ror
shll
sub
setge
inc
xchg
mov
lock
aad
push
ljmp
ds
aas
adc
sarl
mov
push
rcll
mov
insb
cmp
not
sti
or
fst
daa
stos
adc
xor
xchg
int
jae
fwait
scas
xor
movsl
fildll
data16
jbe
mov
mov
std
lea
mov
fcmovne
shlb
xor
in
and
dec
dec
sbb
jns
xchg
fsubl
in
push
bound
ss
xor
mov
add
rolb
rolb
lret
ljmp
aam
arpl
fcmove
fistps
into
das
pop
adc
lcall
aaa
pop
fs
jnp
lds
nop
add
sbb
pop
mul
xchg
shl
stos
ss
cltd
fcoml
les
dec
xor
push
cmp
cmpl
or
test
mov
inc
push
jnp
add
xor
orb
outsl
in
mov
outsl
lods
ja
insl
cltd
inc
add
jl
je
pop
out
test
xor
into
lret
sahf
mov
pop
sub
lret
in
cmp
xchg
lods
adc
leave
inc
xor
adcb
xchg
js
sbb
inc
andb
repnz
mov
push
lods
je
js
mov
daa
sbbl
les
into
out
mov
or
decl
mov
dec
ds
clc
and
and
add
mov
jae
xchg
sub
fbstp
aad
sub
movsl
lds
insl
test
add
add
pusha
imul
fcoms
add
lock
lds
inc
xor
addb
fildll
adc
lret
pushf
inc
lds
push
inc
iret
adc
pop
xchg
sub
mov
xchg
push
dec
cltd
lahf
aaa
xor
test
mov
push
cmp
cwtl
mov
testb
xor
xchg
inc
push
sub
test
divl
dec
lods
rcrl
or
sub
dec
xchg
cmpb
ss
push
pop
hlt
ljmp
mov
adcl
add
xchg
cmc
add
pushf
mov
mov
and
aas
or
pop
out
rclb
xchg
addr16
adc
stos
outsb
dec
scas
icebp
push
add
pop
push
cmp
aad
in
jl
and
inc
adc
mov
push
mov
mov
push
sti
dec
sub
call
fdivrs
sub
mov
push
xchg
fwait
mov
aad
sub
pop
add
dec
gs
sbb
insl
test
loop
data16
cwtl
xor
inc
test
xor
mov
addr16
cmpsl
dec
inc
inc
push
in
and
xchg
hlt
fisubs
fcompl
mov
mov
cltd
inc
cmp
cmp
xchg
dec
aaa
fimull
mov
add
cld
mov
sub
mov
adc
pop
lcall
adc
add
cs
pushf
cmpsl
mov
test
icebp
ds
and
add
cmp
push
sub
cmp
negb
sub
ret
push
and
add
jge
sarl
dec
sahf
dec
cs
sti
cwtl
fldt
das
jne
xchg
dec
add
sbb
jno
jg
jns
add
lea
push
mov
jno
leave
add
aad
and
sbb
div
mov
jecxz
stos
mov
outsl
int
test
mov
lods
xchg
lret
jge
push
movsb
and
mov
ljmp
xor
out
stos
jbe
fdivrl
rorb
add
frstor
shl
das
sbb
dec
outsb
mov
jae
sbb
sub
dec
inc
push
xchg
lods
mov
divb
xchg
repz
jp
pop
adc
mov
adc
lods
push
out
add
pop
les
data16
push
inc
mov
mov
icebp
mov
ret
daa
mov
loopne
fwait
movsl
stos
cmpsl
add
xchg
and
cmp
aad
notb
repz
clc
jmp
xor
shr
in
pop
lahf
add
xor
mov
mov
fsubrs
lret
nop
jno
jae
pusha
addr16
jge
cltd
in
xchg
pop
in
ljmp
je
pushf
mov
iret
lcall
rolb
ror
mov
pop
mov
enter
jns
sar
jmp
repnz
dec
ja
dec
sbb
aaa
aam
and
icebp
mov
push
push
insb
mov
popl
js
imul
lds
sbb
jb
cmpl
jns
mov
out
aas
fimull
dec
and
stos
test
mov
sub
lea
mov
push
xchg
lods
pop
daa
iret
jle
pop
shrb
inc
mov
int
cli
rdpmc
dec
mov
mov
mov
sbb
rolb
lods
sbb
imul
fwait
cltd
gs
stos
jnp
notb
sbb
cmp
or
or
cs
lcall
fisubl
andl
and
mov
pop
out
dec
leave
jns
mov
adc
loop
stos
ljmp
sub
xor
fcompl
mov
js
or
fs
mov
ss
lea
out
push
mov
aad
sbb
jns
ret
or
mov
mov
sub
mov
gs
scas
popl
popf
ret
sbb
jmp
scas
fdivr
cmp
pop
jmp
xor
push
sub
sub
mov
and
jg
push
jle
add
mov
mov
and
push
ret
imul
aam
xlat
adc
jb
mov
fisttpll
sub
gs
add
or
les
in
jmp
jecxz
adc
int
sbb
nop
push
push
lods
enter
scas
or
inc
sub
movsb
test
adc
xor
dec
or
jae
jno
leave
cmp
mov
jp
dec
int3
push
xchg
inc
pop
jle
mov
pop
inc
shrl
mov
outsb
jnp
push
dec
pop
cld
inc
out
in
cltd
add
pushf
xchg
push
imul
pop
xchg
call
clc
scas
scas
or
push
ljmp
jns
mov
lret
xchg
sbb
adc
subb
daa
push
adc
or
xor
jge
ret
iret
cmp
cmp
arpl
leave
shl
jecxz
sbb
fidivrs
pop
add
or
xlat
aas
mov
push
addr16
popl
sti
rolb
jne
test
jle
ficoms
push
std
mov
inc
ss
repz
es
xor
lods
pop
xchg
push
lds
int
lret
mov
lret
imul
into
push
and
lret
fsubr
fisubrl
icebp
pop
add
test
lahf
lahf
add
mov
and
ja
andb
pop
loope
jae
lcall
xchg
jno
rolb
xorb
fwait
or
in
cmp
stos
and
jg
daa
adc
xchg
push
and
pop
loopne
cli
and
mov
or
push
cs
fisttps
mov
ret
loopne
mov
cmp
cmpsb
add
fnstsw
insl
in
sub
sub
sub
loop
mov
lcall
fmuls
loop
mov
les
sub
mov
in
adc
mov
cld
sub
outsb
fcoml
aaa
testb
or
push
inc
pop
outsl
stc
rcrb
pop
mov
imul
mov
es
aaa
push
sbb
mov
cmpsb
xor
xor
into
cmc
jl
mov
sub
int
or
mov
stc
add
sbb
sbb
fdivl
adc
lret
mov
loopne
fs
fistl
enter
test
adc
mov
dec
push
add
push
push
sub
sti
out
cmp
outsb
int
ja
fs
imul
jbe
aaa
mov
jl
test
adc
dec
sar
ret
xchg
mov
ljmp
aam
test
sub
adc
scas
inc
jp
inc
cmp
pop
xor
and
sub
pop
and
adc
pop
and
cmp
sub
out
sbb
ret
mov
fsubrl
inc
lahf
cmp
lea
xchg
adc
or
push
dec
fsts
or
mov
popa
mov
dec
lods
lock
sub
adc
add
cltd
pushf
and
adc
andl
mov
lock
mov
add
and
pushf
es
dec
pop
cmovg
out
testl
pop
lods
daa
push
fwait
jmp
cltd
pop
jae
fdivrl
or
add
add
bound
dec
adc
mov
mov
loop
mov
jecxz
call
pop
mov
repz
or
test
pop
push
daa
sahf
bound
mov
aam
das
mov
fldcw
pop
iret
outsl
clc
mov
pop
sbb
test
pop
pusha
out
mov
adc
jg
in
mov
lods
orb
fcompl
push
scas
ds
dec
mov
cs
mov
jns
lea
jnp
cmp
dec
repz
push
push
xor
popf
je
mov
inc
xor
pop
sub
aam
push
mov
sbb
jle
loopne
mov
dec
xor
mov
cli
outsb
mov
mov
sub
enter
std
fst
push
in
outsb
and
cmp
mov
sub
lret
sub
adc
jbe
pop
rorb
int3
add
dec
jecxz
imul
jne
insb
daa
mov
push
test
movsb
mov
xchg
ret
int
shll
enter
adc
arpl
inc
xor
dec
xor
sarb
orl
es
clc
rorl
sbb
test
jmp
sarb
sbb
adc
xchg
dec
ja
lods
cmp
or
inc
ret
out
inc
pop
and
mov
lret
or
icebp
hlt
mov
jmp
adc
and
mov
add
sub
sbb
or
cmpb
push
lret
jne
mov
pop
mov
jecxz
paddb
lahf
aas
cmpsl
inc
pop
or
insb
into
fimuls
repnz
test
xchg
and
push
xor
aaa
sub
shlb
in
push
jne
dec
or
flds
in
cld
fwait
iret
xlat
push
sbb
cmp
pushf
iret
xor
mov
lret
add
orl
hlt
xchg
jmp
mov
inc
mov
xor
addr16
xchg
add
bound
les
sbb
imul
popl
movsb
pop
pop
lret
jl
fwait
jmp
cwtl
incb
inc
add
push
mov
mov
das
sbb
push
leave
rolb
and
or
mov
xor
inc
push
dec
pop
das
adc
popa
mov
pop
leave
jecxz
xor
mov
lret
xchg
pop
mov
xchg
mov
or
scas
dec
mov
cli
push
jbe
mov
mov
imul
lret
cli
mov
sub
and
mov
shlb
xchg
cmp
mov
xor
push
jb
sbb
dec
adcb
out
pop
ljmp
lret
sub
daa
mov
jp
and
stos
fsubrl
push
and
pop
push
test
repz
cmp
movsl
pop
jl
faddp
xchg
inc
bound
pop
imul
pusha
cwtl
jnp
and
mov
jno
aas
fldl
sbb
fldenv
fs
push
mov
jbe
xchg
hlt
outsl
aad
mov
push
pop
gs
adc
mov
rorl
mull
push
cmp
ja
mov
inc
addr16
ds
scas
sti
and
dec
insl
jmp
push
mov
pop
jp
nop
mov
movsb
mov
lock
push
or
ja
cmpsl
out
bound
xchg
inc
dec
loope
sti
jmp
mov
pop
fdivs
jno
ret
addr16
dec
repz
bound
mov
mov
in
inc
inc
test
jnp
lods
add
cmpsl
pop
mov
out
call
loopne
cs
es
test
ret
movsb
popf
dec
add
pop
inc
adc
sub
repz
dec
sti
stc
push
sub
add
pop
xchg
adc
lcall
out
aas
lahf
nop
mov
lahf
pop
push
arpl
pop
das
call
out
sti
push
ja
or
aam
sahf
pop
add
mov
cmpsb
mov
loope
mov
mov
or
xchg
sahf
bound
push
xchg
lock
push
fdivrl
pushf
xor
addr16
jbe
mov
fidivrl
loopne
mov
push
mov
in
mov
popf
jp
lret
cmpsb
inc
ret
pop
xlat
lock
je
push
dec
push
mov
mov
pop
fsubr
add
add
test
scas
out
mov
movsl
in
xchg
adc
out
lods
push
sahf
clc
mov
xchg
jge
iret
add
cmpxchg
xor
sub
lods
ret
ds
xchg
adc
pop
push
pop
daa
dec
sbb
push
jl
dec
jbe
jl
mov
lea
movsl
movsl
jecxz
ja
mov
ret
mov
cmp
out
fwait
mov
sbb
push
data16
subps
sub
push
sarl
and
lret
mov
ljmp
or
mov
lock
enter
mulb
add
stos
pop
push
aad
cmc
popf
jae
ljmp
jle
xchg
call
inc
pop
out
fpatan
pop
pop
movsb
pop
ficomps
jbe
les
sub
call
jg
ss
pop
xchg
fs
cs
mov
jge
xchg
in
mull
mov
les
xchg
jno
cwtl
lret
push
or
jge
push
add
jb
cwtl
push
push
jnp
in
cmp
fldl
ds
ficomps
lods
aaa
jmp
push
cmp
call
comiss
dec
scas
jle
sbb
xchg
pushf
sbb
fisttpll
push
fiaddl
cmp
neg
mov
inc
push
jg
ss
push
stos
dec
loopne
mov
movsb
pop
dec
into
ja
lock
xor
aad
sub
push
xacquire
push
fsubl
mov
outsl
dec
pop
xor
or
inc
sahf
inc
mov
outsl
jae
or
cmp
and
aas
out
add
stc
add
fs
and
in
dec
gs
push
dec
mov
cld
arpl
jbe
push
lret
scas
scas
mov
xchg
push
pop
lods
cs
cwtl
stos
adc
xchg
push
sub
jo
cmp
push
lcall
sbb
xor
xor
xor
repz
rcr
jge
pushf
and
xchg
dec
push
push
push
mov
mov
xor
out
hlt
and
outsb
rol
mov
push
dec
std
test
enter
inc
mov
gs
pushf
sahf
jnp
or
out
sub
ja
mov
mov
cltd
out
and
xchg
and
dec
icebp
inc
mov
inc
movntq
mov
cld
and
push
jg
jnp
popa
mov
dec
pushf
insb
push
cmp
aad
scas
iret
mov
cmp
mov
fstpt
or
cs
in
and
aam
dec
push
sbb
dec
mov
jl
shrb
jnp
jnp
inc
or
test
addb
daa
je
outsl
pop
pusha
sub
in
testl
sub
or
mov
or
jae
pop
xchg
hlt
je
scas
movsl
popa
mov
test
stc
xchg
je
loop
add
inc
mov
repz
sbb
test
stos
test
push
jb
adc
jle
xor
push
scas
dec
sub
push
cltd
push
xor
jp
iret
pushf
inc
mov
popf
push
outsb
insl
xchg
fwait
pop
aam
mov
icebp
jmp
loopne
xor
lcall
push
pop
std
cwtl
adc
adc
dec
out
into
sbb
jg
mov
xchg
or
js
test
or
and
iret
mov
inc
push
add
mov
enter
cld
test
lds
test
aas
dec
fwait
data16
mov
xchg
idivb
mov
push
push
mov
pop
sbb
leave
push
dec
imulb
sub
inc
mov
jne
mov
stos
push
sahf
inc
imul
and
xor
cwtl
addr16
cli
lds
sarl
test
dec
jae
sbb
pop
adc
daa
or
or
cmc
or
in
outsb
mov
aam
mov
dec
add
sbb
mov
and
or
and
sub
pop
adcl
mov
js
inc
pop
push
daa
lcall
mov
insl
adc
mov
arpl
dec
cmp
scas
adc
decl
loopne
cmp
cmp
fs
fbstp
ret
xchg
inc
dec
sub
add
notb
pop
mov
jge
scas
scas
call
leave
inc
cmpsb
sbb
faddl
fwait
add
sbb
jne
stos
ficomps
cmp
jbe
or
inc
movsl
fsubr
sbb
cwtl
xor
das
mov
clc
inc
cmp
fcoms
js
shll
inc
inc
sbb
jbe
test
fisttpll
mov
stc
ret
scas
fsubrs
or
inc
cld
popf
add
icebp
loope
cmp
or
jb
jmp
imul
shrb
cmpsl
or
stc
or
xchg
aaa
push
mov
jbe
mov
mov
stos
push
sub
mov
pop
add
out
aad
into
fdiv
cmp
and
test
jecxz
inc
push
xor
ret
inc
mov
cltd
daa
nop
jmp
outsb
jecxz
nop
xchg
mov
insl
mov
push
push
gs
imul
sahf
popf
in
in
mov
inc
shl
outsb
fs
jge
fstps
fcoml
das
ret
fdivrp
jg
push
cmpsl
mov
mov
lods
dec
mov
push
mov
sub
popa
jno
imul
mov
lcall
mov
xlat
mov
adc
push
add
es
test
adc
mov
adc
iret
repz
rolb
out
scas
lods
jo
push
push
out
push
in
hlt
sbb
push
test
push
or
jae
adc
in
push
pushf
mov
aas
dec
neg
sub
pop
and
ja
cmp
enter
aas
ficoml
jnp
sarb
stc
cltd
fsubrs
dec
aaa
push
or
adc
push
dec
mov
xchg
adc
fwait
mov
jg
out
push
fdivl
jno
adc
ljmp
jmp
lock
popf
mov
mov
sub
scas
call
flds
push
lea
ja
push
jge
dec
dec
xchg
test
test
mov
cmp
outsl
punpckhbw
fnsave
mov
sarl
or
loop
sbb
mov
pop
dec
jle
test
sub
lret
into
xchg
stc
int3
mov
and
std
pop
adc
mov
dec
push
jo
fistpl
xchg
popf
cmc
neg
push
mov
addl
enter
xchg
in
addr16
xor
jne
inc
mov
cmpsb
add
in
into
daa
iret
sti
jecxz
or
push
je
ljmp
rcr
adc
add
or
stc
xor
int3
movsb
scas
push
inc
call
je
mov
arpl
test
or
and
clc
pusha
jmp
popa
xchg
mov
popf
ljmp
pushl
inc
sbb
sahf
and
push
mov
test
push
das
mov
loope
cmp
cmp
jle
nop
inc
or
xchg
aas
or
stc
aaa
aam
jnp
cmp
stc
subb
repz
call
jecxz
fldt
fistpll
xchg
sahf
push
or
jb
cmc
mov
inc
aaa
enter
out
dec
sarb
sti
and
mov
mov
push
fcomip
sbb
xchg
out
mov
imul
outsb
ljmp
fucomp
mov
push
dec
je
cwtl
xor
jmp
int
ret
das
xor
xor
push
insb
jo
mov
shrl
aas
pop
mov
aas
rolb
dec
add
inc
mov
pusha
sbb
in
push
testb
shr
mov
add
scas
dec
dec
adc
push
sub
leave
adc
jnp
mov
pop
ljmp
ficoms
inc
or
imul
lahf
mov
push
lods
xor
movsl
xchg
scas
inc
xor
sbb
xlat
and
fcomi
int
out
addl
sarl
in
mov
cltd
into
push
cmp
and
add
xchg
sti
jns
daa
add
lods
repnz
bound
rorl
and
aas
orl
xchg
pop
pushf
jne
jg
jns
leave
cmpsl
ret
leave
orb
push
pop
jge
fisubs
push
add
fsubl
call
pop
icebp
inc
lcall
out
mov
outsl
add
mov
shlb
mov
mov
push
sbb
xchg
mov
pop
fwait
in
xchg
xchg
lret
or
into
sub
xchg
or
inc
call
mov
clc
pop
out
pop
mov
push
sub
lea
xchg
xchg
push
jmp
push
mov
mov
nop
rcrb
mov
dec
xchg
jp
mov
pop
in
ss
cmpsb
push
and
fistpl
jle
lods
pop
fldenv
push
cmpsl
xor
inc
jae
push
sahf
cmp
icebp
sub
or
xor
mov
fiaddl
pop
out
in
sub
sub
jnp
arpl
push
or
stos
hlt
movsb
lret
dec
or
push
sbb
push
popa
shl
pop
mov
lods
push
push
es
ljmp
jle
fdivs
mov
rcll
mov
stc
dec
hlt
das
subl
mov
loope
dec
loop
and
aaa
sbb
gs
inc
loopne
push
sbb
out
rolb
outsl
fnstsw
movsb
mov
pop
fidivrl
adc
mov
add
xchg
xor
ret
cmp
push
iret
inc
arpl
fiadds
cmp
push
arpl
cld
mov
leave
lret
inc
cmp
pop
add
or
shll
xchg
loope
push
mov
sbb
adc
std
daa
lret
fistps
cmc
jp
xlat
loop
cmc
fdivp
fisubrs
mov
sub
fidivrl
shlb
in
add
jbe
cmp
out
stc
popf
pop
pop
add
sub
inc
loop
xor
popf
add
in
dec
cmc
xlat
add
xchg
jmp
test
and
ficoms
ret
adc
and
mov
jae
sbb
loope
fwait
js
lret
mov
or
inc
scas
sbb
or
setp
push
daa
dec
fildll
adc
loop
mov
mov
ja
inc
repz
cld
stc
push
pop
or
or
mov
dec
loope
icebp
dec
mov
fs
pop
mov
inc
ja
xor
xor
add
mov
push
loopne
aas
jbe
pop
mov
scas
lods
mov
popf
and
scas
mov
les
jmp
cmp
add
xor
add
mov
mov
aaa
mov
mov
and
jmp
roll
jae
and
jl
ss
sbb
cmpsl
leave
pop
sbb
std
inc
popa
loope
lods
outsl
stos
adc
pop
bound
lahf
cmpsl
fistpl
sbb
ds
faddl
xchg
xor
ficomps
jbe
dec
mov
lds
rcl
xchg
fwait
enter
sub
push
sub
sarb
mov
movsl
movsb
fwait
add
or
push
pop
ljmp
jl
ret
int
add
pop
test
pop
outsl
dec
lds
sahf
and
scas
push
sub
outsb
and
roll
cld
cmp
mov
jb
pop
scas
adc
enter
stos
dec
pop
in
jmp
mov
mov
xor
mov
ljmp
fmull
cmp
orb
dec
push
or
mov
mov
ret
mov
ss
push
sbb
and
and
imul
enter
sbb
cmpb
rol
in
enter
fidivrl
ljmp
in
stos
shlb
in
pusha
inc
loopne
data16
cmpsb
pop
add
sbb
jo
rcr
or
mov
jl
lcall
rolb
push
fwait
pushf
inc
fwait
adc
mov
push
add
pop
push
jecxz
movsb
push
in
dec
out
or
jno
mov
popf
ret
jmp
insb
xchg
insl
dec
mov
mov
mov
inc
inc
lds
xor
pop
int
and
addb
out
popa
data16
imul
lret
jmp
lods
call
mov
aam
xchg
fwait
loop
and
push
mov
or
or
jbe
xor
scas
cwtl
mov
test
add
in
push
mov
bound
outsb
jge
dec
and
push
dec
ss
es
shll
leave
gs
cmpsb
mov
and
lock
jno
fidivs
popf
or
mov
sub
mov
lods
lods
and
xchg
iret
inc
mov
add
push
mov
cmp
stc
sub
cmp
add
stos
or
xlat
insl
sbb
inc
cmpsb
or
icebp
cmp
jmp
adcl
das
int3
cmp
lret
pop
cwtl
mov
stc
sti
push
and
mov
xchg
push
data16
jns
inc
addps
pop
or
jns
sbb
add
mov
mov
push
xchg
push
dec
orb
mov
fsub
jge
in
add
and
cmp
cmpsb
int3
cmc
push
lcall
dec
cld
adc
xor
xor
or
imul
push
mov
pop
shll
jl
test
xchg
adc
xchg
out
cmpsb
in
mov
sbb
fildl
jp
in
inc
xor
decl
enter
loop
inc
in
iret
push
mov
sbb
add
inc
je
ja
mov
inc
add
pop
in
test
pop
sub
cmp
sbb
jb
xor
lock
mov
int
mov
jge
fwait
jg
cli
adc
mov
xchg
mov
mov
dec
cmc
popa
dec
push
xor
addr16
imul
sub
dec
pop
stc
faddl
loop
ror
cmp
dec
jno
push
xchg
std
xor
stos
jno
pop
mov
stc
cmpsb
and
dec
mov
arpl
gs
add
lret
cmp
cmpsb
lods
and
pop
xor
mov
xor
xor
rolb
adc
mov
sbb
or
jle
cmc
adc
and
repz
adc
fs
lock
or
loop
mov
stos
mov
mov
leave
xor
aas
pop
sub
fiaddl
jmp
mov
mov
ja
iret
jg
adc
mov
mov
jge
popa
fdivs
and
lret
dec
nop
inc
into
or
and
add
mov
jge
outsb
lock
jo
ret
fwait
add
or
rcll
leave
adc
push
and
add
mov
adc
jecxz
push
xlat
std
fld
add
call
imul
lcall
pop
int
mov
ds
fidivrs
mov
in
jo
ds
push
test
mov
mov
int
pop
aas
jb
out
into
js
xchg
sahf
aad
dec
xchg
or
iret
sbb
test
std
dec
fiadds
sub
test
loop
out
inc
enter
xchg
xchg
ss
out
xor
adc
mov
add
inc
mov
sbb
pop
lods
lret
sbb
adc
pop
dec
xchg
add
fnstcw
dec
lods
cmp
xor
or
cmpsl
bound
cmp
shrb
test
lahf
xchg
push
lret
in
xor
sub
and
iret
in
jp
mov
in
stos
data16
inc
adc
add
repnz
push
xor
sub
loop
inc
xchg
jl
cs
fwait
pop
sub
mul
pusha
aam
xchg
sub
xor
ret
inc
cmpsl
sbb
or
pusha
mov
outsb
or
jbe
add
repz
sub
xchg
or
push
mov
pop
dec
fldl
insl
icebp
loopne
cs
fldcw
xlat
insb
movsl
dec
xchg
fldcw
jne
inc
loope
pop
in
loope
in
call
inc
stos
das
mov
imul
and
ds
enter
mov
loopne
outsl
add
and
jne
cld
lods
jne
inc
stos
pop
jmp
insl
jge
daa
cmp
mov
push
ljmp
dec
enter
das
sarb
cld
popa
aaa
push
inc
push
jns
jle
enter
mov
roll
data16
xor
ljmp
adc
lock
movl
rcll
std
pop
test
scas
lea
mov
mov
imul
mov
sub
pop
adc
mov
jp
loop
jae
mov
lret
jnp
data16
sbb
inc
sbb
adc
or
loopne
cmpsl
int
mov
adc
pusha
ret
loopne
mov
cltd
aas
inc
clc
loopne
or
cld
out
pop
inc
roll
jae
sbb
ljmp
adc
add
mov
insl
sbb
aas
lea
xlat
push
data16
jecxz
aam
dec
mov
cmpb
sub
cld
pop
add
push
cmp
mov
lahf
push
jb
in
movsb
pop
push
data16
data16
xchg
divb
cmp
dec
lahf
cmp
rorl
pop
inc
sub
cmc
lock
push
adc
loopne
ret
xor
mov
ljmp
and
cmpsw
push
stos
js
sbb
xor
push
mov
popa
lea
pop
orb
popf
sbb
jmp
jp
jo
adc
and
dec
mov
push
xchg
cmp
jmp
pop
fdivl
mov
fisubrl
inc
sahf
test
jge
push
pop
xchg
push
sarl
ffreep
mov
cltd
lock
arpl
mov
pop
aam
pop
cmc
push
inc
add
jle
push
mov
push
loopne
jl
lret
bnd
pushf
xchg
rorb
insl
sub
cmp
add
xorl
call
cmc
insb
shl
pop
ss
adc
xchg
lahf
daa
and
sub
aas
xchg
sets
jnp
cmp
or
sti
push
push
in
aam
rorl
jl
imul
shlb
sbb
fstpt
stc
mov
cmp
fidivrs
jmp
xchg
scas
sub
push
mov
sbb
lahf
mov
arpl
push
jmp
xlat
pop
sbb
cmp
add
or
mov
push
push
sti
xor
adc
test
imul
dec
mov
mov
inc
pop
mov
lcall
mov
or
xlat
jmp
bound
fneni(8087
fidivrl
leave
les
jo
test
stos
sbb
sbb
xor
mov
ljmp
fs
aam
lret
sarl
add
jb
daa
sub
shrb
mov
das
shrl
mov
dec
push
js
cltd
lahf
in
jne
or
nop
fbstp
sbb
xor
fdivl
jmp
fs
int
jne
mov
lods
pop
or
shl
jne,pt
rcl
sub
and
clc
cmp
push
inc
addl
insl
inc
pop
and
fstl
pop
ds
cmp
jne
scas
cwtl
repnz
imul
clc
jb
lret
movsl
cli
or
pop
inc
sbb
inc
add
test
adc
and
mov
sbb
cmp
inc
xchg
cld
lahf
and
or
cmp
xchg
shrb
xchg
add
sbb
test
movb
jp
push
sarb
mov
cltd
icebp
sbb
push
or
mov
cmp
jae
or
push
mov
sub
cli
adc
pop
dec
cwtl
rorl
rcrb
mov
shl
push
fmuls
mov
loop
push
lret
jbe
dec
scas
mov
mov
mov
sub
jg
movsl
or
popf
aas
dec
cwtl
or
adc
insb
jns
mov
in
testb
xchg
push
cmp
mov
push
dec
and
adc
mov
xchg
mov
leave
inc
jne
add
and
inc
mov
idivl
aad
sub
lds
or
or
adc
jne
lahf
leave
pop
jle
jmp
mov
daa
add
dec
popa
add
pop
inc
shrb
cmp
in
and
and
jge
lret
add
das
ror
mov
mov
out
aam
xor
hlt
mov
daa
push
icebp
leave
iret
mov
int
cmp
nop
lret
adc
ja
xor
cmp
add
or
sahf
jmp
out
cli
dec
jb
xchg
mov
pop
xor
xchg
ret
dec
addb
sub
or
outsl
es
inc
movsb
sbb
outsb
mov
xchg
shll
mov
mov
xchg
mov
or
jnp
int3
outsb
popa
jo
lret
mov
jo
aas
into
mov
sub
dec
mov
sub
xor
sbbl
out
and
fstp
xchg
in
clc
jg
xchg
sar
lds
test
insb
enter
lahf
jg
sub
xor
movsl
andl
in
jne
dec
ja
and
push
sub
movl
pop
xorl
sbb
mov
jp
pop
push
mov
mov
xchg
or
jp
lret
xchg
loope
cmp
stos
xor
rcll
push
fadd
xor
pop
cmp
mov
jmp
repz
and
aas
inc
into
jb
lahf
xorl
jnp
push
mov
dec
inc
sub
fsubrs
fs
and
cmp
out
sbb
add
xchg
sbb
repz
popf
sbb
inc
pop
fcomi
xor
or
jno
fildl
aam
inc
push
fs
sub
ret
repnz
jge
or
push
or
jmp
mov
jp
sub
dec
mov
inc
adc
sbb
add
out
ljmp
fadds
idivl
sbb
xchg
mov
and
add
loope
adc
orps
mov
jmp
hlt
ja,pt
and
mov
lock
jbe
xchg
sub
adc
mov
dec
imul
fcomi
and
fmull
in
out
mov
call
enter
jne
incb
out
cwtl
mov
push
stc
imul
add
cmp
jecxz
imul
int3
sarb
push
hlt
and
mov
cs
xor
push
push
fdivrl
xor
xchg
mov
xor
insl
cmpsb
mov
sub
sti
aaa
aas
gs
or
pop
sahf
jle
insb
repnz
sbb
jecxz
cmpsb
imul
in
aas
cs
or
stos
repz
sbb
or
mov
int3
fsubs
cmp
adc
sbb
mov
push
pushf
test
xor
shrb
pop
bound
sbb
mov
lods
mov
sbbb
dec
dec
andb
mov
gs
lcall
in
or
rcr
fidivs
data16
stos
ret
push
push
loop
cmc
jnp
sahf
data16
nop
popf
cli
xchg
hlt
jp
push
aad
cmpsl
lods
scas
test
pop
push
push
mov
test
mov
and
sbb
push
shr
mov
sub
arpl
xchg
dec
cmpl
aad
hlt
lahf
xor
xsha1
cmpsb
or
das
addr16
sti
scas
lret
or
fnstcw
pop
inc
lcall
lcall
divb
mov
ret
cltd
jmp
mov
xchg
inc
stos
mov
hlt
mov
bound
xor
mov
pop
jae
insl
icebp
cmpsl
stos
xor
cmpsl
rcll
aaa
jns
inc
fwait
mov
fnstenv
out
mov
repnz
mov
lea
ss
in
push
imul
mov
out
cmpsb
jbe
mov
jl
dec
insl
rolb
or
out
movsb
outsb
es
lds
pop
ss
mov
mov
cmp
or
push
push
push
ljmp
push
ljmp
mov
jno
insl
or
xor
mov
fdecstp
inc
xchg
stos
addr16
out
mov
je
push
mov
or
pop
sahf
lock
mov
adc
test
jbe
sarl
inc
movsl
sub
or
in
sbb
add
addr16
mov
mov
fldt
mov
jae
std
add
mov
mov
pop
push
test
jne
and
outsb
ss
mov
push
jecxz
int3
aas
dec
out
in
sti
or
jb
cmp
sub
dec
scas
push
mov
or
repnz
add
mov
push
pop
xchg
or
aad
add
cs
int3
jecxz
mov
sub
dec
movsb
mov
movsl
jg
jnp
pop
jecxz
dec
fdiv
test
movsl
addr16
aaa
xchg
jg
nop
jns
jecxz
ret
cs
ljmp
sbb
add
inc
insb
testb
xchg
mov
pop
mov
movsb
cmp
push
mov
rclb
cmp
dec
lods
lds
sbb
xor
cmp
out
aad
es
jmp
mov
or
cmp
push
into
sti
mov
das
rorb
or
push
sub
xor
jmp
mov
sub
out
pop
lods
mov
aad
mov
shll
daa
repnz
xchg
mov
dec
hlt
out
in
enter
or
je
stos
push
push
or
mov
cmpsl
cmp
push
jns
jmp
faddp
push
cmp
outsl
loopne
cltd
dec
jmp
mov
movsl
dec
std
cwtl
mov
popa
rcll
je
push
outsl
cmc
xchg
aam
sub
mov
and
sbb
xor
test
std
dec
inc
stc
lahf
dec
jge
loopne
nop
jno
dec
jnp
stos
mov
imul
dec
sbb
shrb
jne
icebp
ss
jp
fdivp
xchg
cmpsb
adc
xor
leave
push
lds
and
push
push
rorl
inc
orl
fmull
lods
and
pop
cmp
fisttpl
mov
mov
xchg
or
jns
cs
ret
out
mov
int
cmp
mov
loope
push
mov
and
jle
inc
ret
out
sbb
jns
or
mov
push
xchg
adc
sub
push
jge
push
aaa
xlat
cmp
inc
es
lcall
xor
add
fnstcw
fldpi
lods
mov
mov
mov
jge
inc
in
out
ds
test
movsb
xchg
in
lods
stos
test
pusha
mov
dec
pop
leave
pop
xchg
lret
xor
mov
cs
dec
or
and
pop
movsb
daa
into
cmp
scas
mov
ljmp
dec
jno
stos
mov
es
jo
push
dec
mov
adc
sub
int3
sahf
dec
xchg
cltd
call
inc
sbb
push
mov
fisttpl
iret
mov
aas
leave
mov
scas
push
imul
cmp
xchg
pop
jo
loope
xchg
xchg
stc
inc
jge
adc
cmp
pop
add
cmpsl
std
mov
das
xchg
pop
pop
cld
ret
cmp
popa
push
aam
xlat
lods
lock
sbb
adc
push
leave
pop
leave
and
mov
cmp
insl
clc
test
xor
std
xchg
push
pop
mov
stos
jge
sub
adc
xor
jge
push
out
daa
or
repnz
outsl
push
push
mov
bound
pusha
loop
addr16
push
cmp
mov
jnp
inc
dec
in
pop
sti
mov
sbb
cmpsb
sarl
mov
jmp
imul
es
jle
jge
testl
jbe
add
popf
imul
push
sbbb
pop
mov
add
les
bound
ss
icebp
jnp
mov
aaa
int3
sub
adcl
in
xchg
sub
bound
or
mov
sbb
popa
mov
js
and
test
stc
mov
sub
push
outsl
mov
out
and
pop
adc
lods
jno
fsts
pop
aam
dec
pusha
iret
mov
and
call
icebp
push
jne
in
mov
popf
movaps
push
push
loope
and
test
movsb
mov
dec
fstl
sahf
subb
pushf
or
repnz
les
jne
test
call
fldenv
std
loope
in
stc
mov
push
xchg
test
into
mov
and
and
adc
jl
mov
mov
add
sub
pop
sub
std
jb
fildl
clc
outsl
inc
loope
sub
test
fstpl
shlb
inc
inc
fldl
aas
mov
call
pop
push
pop
push
xor
repnz
nop
mov
jnp
data16
je
jle
jl
mov
dec
subb
cli
inc
sbb
stc
lcall
fnstsw
movsb
xor
shlb
nopl
pushf
push
repnz
outsb
clc
mulb
sbb
jae
loopne
ds
mov
bound
test
cmpsl
push
lea
mov
outsb
cmp
hlt
or
push
pop
insb
jbe
ds
popf
add
fsub
dec
dec
ja
jno
ficoml
or
cwtl
rclb
aaa
xor
das
sbb
dec
jbe
mov
shrb
sub
push
test
cmp
loopne
lods
aas
insb
fwait
call
push
mov
jne
mov
lds
psrlw
outsb
jo
mov
pop
mov
or
into
mov
inc
push
or
lds
mov
pop
cwtl
mov
or
xchg
addl
mov
mov
jmp
ret
and
dec
pop
mov
dec
jecxz
lret
sti
mov
sub
lahf
gs
ds
cmp
pop
mov
rol
insl
call
clc
xor
add
push
jp
dec
lea
pop
idiv
xchg
lcall
mov
in
ror
pop
lds
lret
mov
jecxz
or
mov
mov
xor
xor
mov
jl
pop
popa
gs
scas
pop
ja,pn
loope
mov
xor
out
out
sti
sbb
je
push
jl
movw
fistpll
fsubr
sahf
imulb
mov
mov
mov
negl
jo
push
xchg
sti
fs
and
push
jno
dec
and
ja
pop
pop
cmp
shrl
pushf
popf
rolb
enter
js
push
mov
ret
in
daa
pop
addl
xchg
outsl
and
pop
jno
out
lods
mov
mov
rolb
loop
mov
xchg
push
mov
sarb
les
lret
ja
dec
add
lahf
pop
dec
orps
add
inc
mov
inc
aas
pop
push
push
test
lock
push
jbe
jmp
pop
insl
adc
lock
sub
fiaddl
xchg
jg
fsubrl
inc
sbb
test
fsubrl
or
jne
dec
in
mov
or
push
sahf
mov
je
fwait
jmp
push
mov
sbb
pop
or
outsb
or
rorl
xchg
test
lea
lret
adc
clc
and
and
lds
scas
cwtl
test
iret
mov
sbb
je
aad
jle
stos
sbb
shrb
push
xlat
mov
and
push
xchg
add
mov
int
dec
lock
ljmp
pop
mov
lret
inc
mov
aad
das
pop
cmpsb
dec
or
inc
push
xchg
rolb
hlt
or
cmp
fiaddl
adc
mov
or
mulb
aam
inc
mov
mov
into
out
jbe
cmp
movsl
inc
fldcw
inc
outsb
push
jmp
cmp
in
inc
sbb
std
add
imul
push
pop
js
rorb
cmp
push
clc
repnz
sub
xchg
fmull
pop
notl
pop
int3
mov
inc
popf
jg
pop
loop
xchg
mov
in
ret
aaa
lahf
stos
xchg
dec
mov
sbb
movsb
mov
inc
push
mov
push
bnd
sbb
sti
stc
mov
in
je
sbb
sub
in
iret
mov
mov
movsl
into
cli
or
sti
jne
insl
loop
fs
push
inc
sub
pop
sbb
in
je
fsubrl
cwtl
jno
or
scas
aaa
sbb
ljmp
cld
cmp
pop
aas
imul
cmp
push
test
fwait
dec
sti
cltd
xor
inc
dec
pop
sbb
popa
fs
jge
dec
movsl
adc
xchg
inc
lock
ret
insl
mov
mov
cltd
mov
inc
xor
inc
mov
nop
pop
pop
aaa
add
ljmp
sti
arpl
je
ret
xor
xor
cmpsl
imul
lods
sub
test
inc
out
scas
cld
jnp
jcxz
jg
hlt
dec
mov
ret
fs
adc
in
mov
mov
dec
dec
rclb
adc
cmpsl
mov
out
inc
imul
roll
push
sahf
pop
mov
out
decl
xchg
dec
sub
lcall
lcall
lea
mov
mov
jbe
call
pop
adc
pushl
pushl
cmc
mov
adc
add
je
mov
clc
add
inc
mov
push
gs
cmp
out
cmpsb
ficoms
repz
mov
and
cs
cmpsl
clc
pop
add
mov
lds
adc
rolb
cmpl
loopne
ret
fwait
mov
cmp
xchg
or
pop
xchg
mov
clc
sub
adc
and
jg
dec
dec
xchg
pushf
lret
mov
inc
daa
pusha
or
adc
lods
pop
loope
xor
nop
aad
popa
in
jle
jle
mov
mov
std
pop
outsb
inc
repnz
mov
int3
adc
in
jmp
xchg
sub
lods
lods
loopne
test
jmp
inc
pop
stos
fmul
pop
push
or
and
fs
pop
push
scas
insl
adc
movsb
jo
es
mov
aas
mov
es
xchg
dec
in
push
pushf
roll
sbb
sub
cwtl
nop
xor
sbb
cmp
scas
js
pop
or
movsb
cwtl
test
lahf
cmp
into
mov
cld
fildl
data16
ja
popf
sbb
xlat
mov
sub
xchg
mov
insb
test
xchg
out
aam
es
cmpsb
nop
lods
ja
and
lock
iret
mov
xor
hlt
and
jo
add
les
lea
jmp
mov
rol
lcall
cmp
or
push
push
loop
mov
ss
repnz
dec
outsb
fcomi
sbb
push
pushw
ret
cli
dec
pop
into
jl
loope
mov
ljmp
sbb
mov
jmp
aas
loopne
jno
lret
stos
mov
and
in
pop
subb
add
jecxz
pop
and
xor
andb
sahf
jmp
sub
test
sub
int3
push
push
aas
xchg
subb
pop
popf
pop
mov
dec
dec
mov
xor
mov
setl
sbb
sbb
out
dec
sbb
push
ljmp
cwtl
repnz
or
or
lods
cmp
jp
lret
les
in
mov
pop
js
aaa
cmpps
sub
cli
xchg
mov
cld
dec
cltd
mov
dec
pusha
dec
pop
inc
in
xchg
fs
testb
mov
aam
and
or
addl
jne
fs
or
add
mov
movb
jg
jg
add
and
sbb
fwait
pusha
xorl
cwtl
pop
mov
add
inc
sar
xor
add
mov
mov
pop
lods
xor
mov
jne
mov
and
faddl
je
mov
pop
lods
inc
fstpt
mov
jmp
cmpsb
xor
lds
xor
leave
lea
jb
xor
jbe
push
pop
in
mov
loopne
add
jno
fs
sti
rcrl
add
mov
cmp
repnz
aas
sub
push
ja
fsubr
jl
mov
cmp
cmpsb
test
lret
dec
test
ja
pop
inc
data16
mov
lret
fcoms
or
out
loop
int3
xor
psadbw
outsl
inc
sub
mov
mov
push
sub
and
out
fildll
xor
fstps
or
dec
mov
aam
mul
pop
push
mov
xlat
inc
sbb
sbb
inc
popf
add
ja
lret
mov
mov
aaa
mov
jo
push
inc
loopne
jae
mul
popf
and
pop
fsubrs
jecxz
and
cmpsl
xchg
mov
xor
out
mov
sbb
daa
call
ret
psrld
rolb
or
test
cli
mov
adc
test
scas
push
je
test
mov
cld
mov
addr16
pop
repz
out
inc
pop
or
xchg
sub
jmp
fidivrl
sti
jo
ljmp
fs
iret
cmp
adc
fadds
sbb
movb
xchg
mov
or
mov
lods
fidivl
icebp
inc
xchg
movsb
lret
int3
repz
out
js
push
and
mov
xchg
sbb
pushf
add
xchg
mov
jno
jl
inc
in
ds
nop
sti
push
jge
dec
out
cmpl
pop
mov
sub
filds
jo
sbb
adc
subb
fadds
into
inc
inc
sub
popa
xor
or
in
data16
pop
into
test
aaa
and
xchg
sub
adc
enter
and
popf
aam
mov
es
xchg
pop
lock
test
in
mov
test
pusha
dec
sub
lcall
cmp
loop
les
pop
es
cmc
ja
push
mov
imul
jecxz
xor
fsubrs
dec
in
in
dec
mov
add
mov
mov
push
mov
mov
stos
cmc
inc
sub
fdivs
jp
test
testb
mov
push
pop
add
mov
lret
js
push
pushf
test
movsb
sub
pop
add
inc
jp
in
xor
mov
push
fstpt
out
leave
or
in
js
into
and
mov
jge,pn
loop
in
jno
jnp
adc
adc
pop
fildll
pushf
out
shrb
into
and
push
ja
mov
xchg
lahf
or
lahf
push
inc
jge
push
out
mov
stos
or
mov
jnp,pt
mov
xor
xchg
adc
addl
insl
and
loop
cmc
aas
movsb
dec
mov
mov
lock
call
push
push
jbe
dec
inc
push
adc
testl
adc
pop
and
push
bound
cmp
repz
lcall
sub
inc
imul
xlat
aam
nop
in
leave
scas
inc
lcall
mov
or
cltd
dec
je
pop
sub
popa
stos
mov
pop
mov
jecxz
cmp
pop
popf
icebp
inc
xlat
jno
dec
clc
out
cmp
push
nop
push
js
pop
lods
push
in
mov
inc
jge
cmp
out
jl
insb
mov
jecxz
xchg
in
lret
adc
aam
cwtl
imul
jno
cmp
sbb
ja
sub
shrl
inc
jne
movb
sarb
jle
cli
push
push
jns
inc
or
jns
xlat
inc
cmp
test
mov
mov
movsb
xchg
fdivrl
mov
nop
mov
pop
mov
shl
into
jns
and
movsb
xor
iret
mov
sbb
sbb
stos
sub
sbb
outsb
adc
jmp
sbb
mov
repnz
cmp
test
push
scas
stc
rclb
pop
es
pop
cmp
repnz
sub
test
jb
mov
jecxz
and
push
push
shl
scas
lret
mov
inc
add
jmp
fcmovbe
aam
in
mov
push
stos
jl
mov
ljmp
jns
jae
rclb
push
or
fwait
pop
xlat
mov
mov
pop
shl
out
cltd
outsb
int3
sbb
and
xor
es
scas
push
pushf
sub
test
xchg
sbb
out
inc
cmpsl
xlat
mov
push
mov
lcall
xor
cli
movsl
scas
push
cmp
loope
sbb
in
xchg
xlat
ret
mov
pop
scas
rorb
jg
push
mov
adc
or
push
add
xchg
xchg
jbe
and
ret
lods
cmc
dec
jge
add
dec
clc
xchg
xchg
popf
scas
mov
rcll
mov
mov
push
jnp
sbb
hlt
jns
hlt
push
fnstsw
lods
ljmp
movsb
lods
and
add
mov
aaa
add
sbb
das
pop
filds
insl
jno
xchg
loop
fs
sub
loope
jb,pn
arpl
lret
in
stc
mov
add
fldenv
loopne
cmpsl
sahf
jo
out
xchg
jl
shl
or
ret
mov
das
addr16
cld
fstl
adc
xchg
jmp
xor
leave
xor
inc
jae
jne
fnstsw
mov
mov
jge
mov
mov
xor
hlt
push
sti
push
adc
popa
scas
call
xchg
call
mov
and
jns
fbld
in
mov
ljmp
dec
mov
mov
adc
enter
push
inc
lret
jp
outsl
jmp
or
fcompl
cmp
add
lock
dec
dec
push
popf
nop
push
out
jno
mov
mov
sub
pushf
mov
sbb
in
inc
addr16
add
dec
mov
xor
insl
xor
push
mov
mov
imul
mov
repz
xlat
and
mov
dec
insl
aam
psubb
ds
in
aam
xchg
stos
test
or
or
call
mov
sub
or
call
pop
movsl
fisttps
push
fcomi
mov
sbb
or
aaa
fnstcw
aam
xchg
push
es
jge
jmp
pop
xor
stos
inc
sub
loope
and
push
ja
sbb
fisttpl
or
test
bound
out
lret
insb
add
mov
ss
mov
int
inc
adc
sahf
adc
out
clc
cmpb
mov
cmp
inc
loopne
daa
dec
sub
xor
out
mov
hlt
das
mov
hlt
aas
out
fwait
and
in
mov
sub
movsl
pop
lret
scas
loope
ret
rorb
mov
jp
cmp
dec
lret
push
in
pop
sbb
aas
inc
dec
push
test
int3
inc
outsb
xchg
shl
sub
cwtl
test
add
cld
and
xlat
xorl
aam
xchg
fildll
dec
xor
insb
xchg
in
nop
nop
adc
inc
mov
lcall
xor
mov
scas
ljmp
pop
inc
pop
arpl
test
pop
dec
popf
push
lods
xchg
mov
ja
mov
loope
mov
pop
inc
mov
push
out
in
es
jae
je
fistpl
adc
ret
jb
add
inc
inc
pushl
iret
jbe
outsb
xor
lea
insl
cmc
pop
adc
jecxz
and
dec
je
out
leave
jns
xchg
je
mov
imul
cmp
je
and
loopne
les
push
rclb
add
fildll
or
jb
mov
js
aad
movsb
ss
es
loope
rcrl
fldcw
inc
scas
stos
scas
adc
jp
out
fwait
sub
aad
jno
and
mov
out
jnp
adc
mov
rcr
clc
mov
cmpsb
loopne
popa
mov
jne
outsb
cmpsb
xchg
in
add
outsb
push
jg
mov
inc
adc
cmp
mov
push
daa
xor
cmp
and
inc
insb
jmp
test
xor
in
fisubs
insb
aad
jbe
jle
add
es
xlat
sub
jl
pop
stos
rolb
add
cmp
int3
fimull
out
lea
test
int
mov
cmc
jne
sbb
sbb
mov
cmp
push
and
push
lea
mov
shll
xchg
jne
jl
inc
add
sub
imul
and
lret
xorb
xor
add
adc
outsl
jnp
xor
sub
lea
out
rcr
sub
mov
cmc
fs
push
movsl
sbb
pop
dec
cld
push
fcmovb
roll
aad
popf
call
xor
pop
mov
call
test
inc
sti
sbb
pop
push
rcll
sbb
movsl
jle
js
push
pop
push
and
xlat
stos
fsubrs
stc
cmpsb
jp
dec
in
mov
sbb
scas
cmp
xor
add
inc
mov
jge
jno
sbb
cmp
inc
cli
jns
push
ljmp
mov
jecxz
pop
aas
scas
sub
jmp
cmpsb
mov
xchg
and
cmpsb
or
ret
in
pop
scas
aam
or
push
and
and
divl
aad
test
icebp
lds
cmp
mov
dec
fwait
jl
cmp
clc
loopne
shlb
mov
in
testb
dec
outsb
xor
push
cltd
jns
repnz
or
lahf
rcrb
fcoms
sub
xlat
test
add
aad
push
lock
push
xchg
insl
jg
sbb
and
sar
or
sub
outsl
xor
movsb
out
adc
ficoms
scas
xor
pop
ret
jecxz
std
add
xchg
sbb
out
cmpsl
sbb
jge
adc
loope
lock
lahf
in
dec
ja
popa
push
push
xchg
stc
xchg
ljmp
inc
outsl
push
jo
pop
lods
mov
cmp
push
js
or
fcoms
add
sahf
or
iret
jnp
sbb
cmovae
adc
dec
xlat
mov
test
addr16
jo
push
imul
aad
repz
in
dec
or
das
mov
out
inc
in
jg
movl
push
xchg
stos
push
xchg
imul
mov
cmp
mov
mov
jle
outsb
mov
sti
in
dec
imul
mov
add
and
mov
data16
sub
outsb
lods
xor
push
pusha
push
ror
jmp
clc
jae
xchg
push
jp
add
xchg
test
mov
push
mov
and
xchg
cli
test
pop
inc
add
xor
outsl
adc
adc
call
cmc
pop
mov
sti
push
pop
sub
daa
mov
insl
sti
mov
mov
ds
outsb
push
mov
int3
cmp
cmp
es
psrlw
or
add
rclb
mov
adc
jg
adc
aas
push
pushw
addr16
pop
xchg
push
inc
mov
or
dec
rcl
jp
or
addl
addb
or
ja
pushf
xor
mov
xchg
jo
xor
dec
movsl
inc
mov
lock
jmp
add
push
or
sub
mov
jecxz
xchg
popf
daa
mov
iret
xchg
mov
aad
inc
add
inc
rcrb
fcoms
xchg
jle
jns
arpl
push
lret
sub
adc
test
sarb
or
shl
push
dec
test
jo
push
fdivr
lea
pop
dec
test
scas
mov
mov
jg
imul
ds
pop
and
fadds
repz
jns
stc
xchg
cs
mov
arpl
dec
add
inc
nop
xchg
out
imul
jbe
xlat
pop
add
lds
mov
push
add
mov
mov
sti
mov
jp
lret
xor
mov
ret
dec
jmp
adc
xchg
mov
ret
decl
add
cmp
sahf
jae
inc
sbb
add
xor
xor
sub
mov
adcb
mov
xchg
sbb
push
pop
insb
cmpsb
push
xor
xlat
xchg
and
dec
pusha
dec
lahf
xor
in
sti
add
cld
std
inc
or
lods
cld
enter
gs
jp
scas
insl
jl
sahf
xor
leave
insl
add
push
push
push
adc
sub
cmp
fdivl
push
sub
mov
pop
repz
adc
aaa
inc
fs
push
or
rorb
sub
dec
xor
movsl
sub
jne
xchg
jge
enter
movsb
icebp
movsb
movaps
jno
insl
cld
xchg
pop
jae
xchg
pop
gs
iret
mov
xor
jmp
mov
pushf
sub
pop
mov
pusha
ret
push
inc
addb
push
test
add
or
pop
cmp
scas
xchg
sub
pusha
jge
inc
ljmp
les
sbb
inc
or
inc
mov
add
and
sbb
std
aam
lret
cmp
imul
jg
add
dec
or
dec
jbe
dec
mov
ficompl
sbb
add
add
ud0
jo
sub
push
test
jmp
lds
aad
dec
out
dec
movsl
xor
push
adc
mov
xor
insb
dec
rclb
nop
outsb
dec
inc
sahf
push
leave
mov
andl
dec
inc
movsl
mov
jne
dec
test
repnz
scas
add
roll
lahf
xchg
out
mov
xchg
iret
xchg
pop
dec
ja
push
fadds
loopne
push
inc
clc
jbe
mov
cmp
mov
adc
addr16
xor
scas
mov
out
sbb
outsb
mov
pop
into
cmp
push
outsl
xchg
pop
push
pop
xlat
nop
ja
outsl
adc
int3
jge
popf
or
cmpsb
jo
out
or
pop
aas
jle
shll
push
jecxz
mov
mov
mov
xchg
loop
inc
icebp
stos
jnp
loope
int3
and
mov
pop
out
loope
xor
dec
maskmovq
negl
jne
fcmovnu
stos
call
roll
or
pushf
mov
adcb
or
ss
in
xor
xchg
mov
and
inc
sub
sub
adc
add
jecxz
iret
and
push
pop
xchg
lds
mov
sbb
push
out
add
std
psrlw
testb
in
dec
mov
movl
pop
add
push
outsl
sub
mov
outsl
ret
adc
mov
bound
pusha
sbb
fmuls
dec
rcrl
adc
sbb
add
adc
sahf
adc
mov
lea
mov
cmp
in
loope
or
mov
test
xor
xor
jne
mulb
cwtl
sbb
aam
adc
popa
loop
testl
mov
aam
cmp
movsl
scas
outsb
dec
or
push
push
in
jecxz
enter
xorb
add
mov
xlat
sub
enter
cmp
ret
aad
test
fisttpll
popf
std
mov
mov
hlt
lret
push
adc
cs
call
ja
bound
cmp
push
insl
xchg
lock
fldt
into
cmp
ja
testl
fninit
jne
and
xchg
dec
mov
insb
mov
shl
jns
imul
stos
jne
lret
loope
lds
dec
mov
add
pop
push
pop
movb
mov
inc
test
pop
insl
jns
repz
ret
iret
or
outsl
or
icebp
scas
and
dec
out
lcall
outsl
push
das
frstor
icebp
add
and
pop
ss
push
push
lret
add
pusha
lret
add
pcmpeqw
dec
add
jnp
cmp
cmp
test
mov
mov
sub
mov
shlb
imull
inc
cmpsb
push
stos
mov
add
adc
out
mov
and
mov
das
inc
mov
test
mov
add
in
data16
push
sub
jecxz
fs
in
push
dec
mov
stos
jns
cld
call
dec
sbb
dec
pop
les
mov
addr16
popf
pop
fldcw
push
xor
xor
xchg
mov
cld
sbb
mov
xchg
loopne
and
inc
mov
push
jge
das
cvtps2pi
dec
inc
stos
rcrb
jmp
sbb
jb
lahf
add
xacquire
aas
inc
jb
mov
int3
inc
test
pop
sahf
roll
imull
or
ret
pop
mov
movsb
dec
jo
addr16
and
pop
inc
stos
or
sub
pushf
push
adc
inc
mov
insb
sbb
cmp
cmp
jno
hlt
iret
mov
xchg
sbb
xchg
rclb
dec
push
jo
adc
daa
sub
inc
pop
insl
int3
push
or
ja
int3
xchg
ljmp
inc
push
xlat
in
out
xchg
push
out
mov
rclb
jge
idivl
stos
sub
test
push
fldl
xchg
jns
mov
xor
mov
ja
xchg
shlb
or
jmp
xchg
xor
inc
pop
or
mov
daa
into
loop
aaa
or
push
addr16
fisttpll
mov
mov
shrb
lcall
notl
out
push
jnp
lcall
or
lahf
imul
loop
fstps
mov
cmpsl
pop
jns
push
inc
rolb
mov
push
jne
enter
test
je
js
shlb
mov
loope
pop
mov
repnz
pop
js
ja
cltd
dec
lods
adc
hlt
and
test
pop
push
jnp
xchg
mov
jb
xchg
xchg
lahf
jae
js
ja
das
jg
rcr
test
dec
add
sub
mov
xorl
adcb
inc
cmp
repz
pop
add
or
mov
add
mov
stos
icebp
sbb
sbb
adc
xor
push
test
pushf
sarl
loope
hlt
fisubrs
and
pop
push
popa
loopne
cmpsb
loopne
or
xchg
mov
mov
ss
push
out
cmp
rorb
lahf
std
inc
push
fisttps
push
sbbb
mov
out
ss
or
sbb
xor
daa
repnz
mov
push
popf
insb
xchg
jge
les
mov
mov
pop
xchg
or
add
jo
mov
movl
inc
and
movsl
adc
cmp
stos
mov
mov
jg
mov
testl
lcall
jge
popl
push
loopne
inc
js
adc
aad
and
je
repnz
es
repnz
outsb
push
rcr
sbb
popa
mov
aaa
xchg
or
mov
mov
dec
jecxz
mov
lock
dec
inc
lret
jbe
fmul
movsb
orb
in
inc
push
push
fldl
in
inc
scas
ss
jmp
scas
nop
iret
xlat
rolb
mov
xchg
outsl
mov
cmp
sbb
pop
push
stos
sbb
mov
push
add
push
sbb
pop
cmpsl
aad
aad
daa
loop
dec
add
mov
int
mov
add
inc
sbb
sbb
repz
scas
sbb
mov
cs
mov
shrl
sbbb
lcall
sub
pmulhw
add
inc
dec
adc
aas
test
adc
testl
test
xor
inc
sbb
aaa
orl
mov
sbb
pusha
jge
pop
movsb
outsb
xchg
shrl
ljmp
cmpsb
push
sbb
push
test
fsts
je
mov
mov
lahf
stos
scas
shrl
xchg
jle
fwait
std
fwait
ret
mov
nop
popf
aam
icebp
jge
pop
or
sub
into
inc
les
jno
icebp
call
or
and
lea
fstl
nop
adc
jnp
loopne
loopne
dec
mov
or
movsb
addb
jb
dec
mov
in
test
out
dec
fstps
int
push
xchg
push
push
js
mov
pop
movsl
in
je
xchg
addb
xchg
iret
jecxz
fmull
push
jno
mov
push
scas
lods
repnz
pop
das
jecxz
sub
push
jecxz
aaa
adc
pop
mov
pop
imul
and
mov
popa
in
lock
jg
mov
or
pusha
mov
andl
fucomip
call
cmp
pop
dec
fwait
rcrb
push
sub
frstor
addr16
sbb
xchg
xor
jmp
cli
mov
xchg
push
mov
movsb
jle
arpl
sahf
and
add
test
imul
xor
loop
popa
mov
mov
dec
pop
into
mov
popf
inc
out
sti
movzwl
add
mov
xchg
jl
dec
and
xor
ret
lret
mov
in
xchg
push
mov
outsl
das
pop
daa
mov
sub
mov
andl
dec
mov
lods
pop
jecxz
out
movlps
icebp
push
cli
fisubrl
mov
add
into
xor
lahf
cmp
cmc
cmpl
loop
cmp
or
lcall
mov
addr16
push
add
nop
rcrb
test
jecxz
pop
fld
adc
dec
ss
mov
shll
lahf
scas
adc
repz
nop
popf
sbb
ffree
adc
mov
fwait
sbb
outsb
push
mov
aad
loop
popa
push
in
icebp
mov
aad
xlat
cli
sti
xor
aam
out
mov
call
and
mov
les
xchg
inc
movd
push
cmp
icebp
imul
xchg
or
stc
out
jbe
sbb
enter
inc
stos
mov
xchg
dec
push
hlt
sub
pop
mov
add
mov
leave
xlat
push
je
xchg
xlat
mov
xchg
mov
mov
and
in
mov
fisttpl
fldt
mov
dec
stos
mov
in
fimuls
subl
outsb
movsl
pop
pop
inc
imul
daa
ja
out
out
out
mov
inc
repnz
dec
rorl
stc
loope
push
cmp
pop
or
shlb
cmp
push
testb
mov
sub
lcall
stos
jle
fildll
pop
sub
outsb
mov
ja
push
fidivs
in
fs
mov
les
xlat
xor
repnz
jl
dec
jne
rol
or
lds
xor
ficoms
ss
dec
sub
scas
cs
ffree
movsl
xchg
sbb
xchg
mov
fadds
cmp
push
lds
out
or
in
ret
jl
or
jno
sbb
fisttps
add
out
push
sahf
mov
out
jnp
gs
add
test
jl
adc
jmp
inc
nop
sahf
add
jp
shrb
inc
dec
in
js
or
mov
lods
lcall
in
mov
lret
aam
and
cmp
daa
sbb
push
xchg
daa
js
nop
xchg
lret
lahf
xor
jecxz
or
push
fidivrs
mov
addb
shrb
xlat
adc
sahf
cli
test
flds
and
movsb
sub
adcl
sti
push
and
dec
and
cltd
add
mov
sub
call
outsl
push
pop
and
imul
push
popa
cs
dec
xor
xor
push
pop
rolb
outsb
scas
xor
cmp
das
xlat
fdivl
and
add
cs
cmp
in
xorl
int
es
sbb
loop
mov
enter
aas
add
into
popa
inc
sub
das
xchg
popf
and
xlat
stos
or
mov
lock
adc
shl
cmpb
mov
sbb
sub
mov
movsl
les
sbb
jns
popa
mov
mov
xor
mov
scas
pop
adc
ficomps
cmp
dec
adc
cld
and
in
mov
lret
and
pop
sbb
lcall
das
jp
cmp
sub
sub
aam
adc
cmp
dec
aad
push
mov
data16
cld
pop
inc
popa
outsb
nop
test
push
sub
mov
pop
int
mov
inc
loopne
mov
pop
shll
add
popf
iret
dec
outsb
cmp
shr
jae
rorl
fidivl
movsb
mov
cmp
ja
add
add
mov
addr16
enter
jecxz
dec
adc
mov
adc
cmp
daa
xor
cmc
or
jno
xchg
mov
int
int3
je
aaa
aas
scas
je
sbb
jae
inc
aam
adc
and
insb
shll
in
mov
aas
push
repnz
push
xchg
sbb
aam
push
cmpsb
pop
andb
add
inc
push
add
sub
adc
pop
pop
xchg
ds
pop
xchg
add
pop
dec
jmp
sub
lods
fisttps
aam
aaa
jle
das
fmulp
adcl
push
pop
inc
rorl
js
fstl
ds
stos
cmp
push
mov
inc
add
ja
repz
inc
incb
ficoms
aam
adc
or
ja
push
or
mov
sub
shlb
mov
test
push
scas
rclb
jb
pusha
mov
adc
mov
imul
xor
call
testb
in
and
test
mov
fwait
scas
xchg
jg
adc
test
jge
sub
inc
lret
push
pop
ret
addr16
xor
test
mov
scas
or
jle
mov
cltd
pop
repnz
add
outsl
adc
ficomps
test
xchg
pop
les
xor
je
cmpsl
test
das
out
imul
aas
sub
fdiv
sbb
cmp
add
roll
imul
mov
fmulp
push
jmp
in
jge
fsubl
cld
or
cmc
add
push
in
xchg
test
test
rcrl
sub
aas
std
ja
mov
xor
filds
xor
fcoms
out
mov
push
mov
int
fbld
out
int3
lods
sahf
pop
in
push
mov
pop
inc
and
mov
mov
sbb
push
js
inc
jno
xlat
pusha
cmp
pop
adc
push
pop
push
xchg
sbb
fcmovu
inc
jg
adc
in
hlt
bound
dec
jno
gs
pusha
xchg
inc
or
mov
out
mov
sub
fdivl
cmp
jecxz
jecxz
jge
push
mov
arpl
inc
rolb
aad
jbe
nop
js
cmp
add
fs
xor
sub
and
imul
mov
lods
sbb
int3
shlb
sbb
sub
or
push
push
addl
leave
sub
bound
je
enter
xchg
stos
ror
jno
ja
movsb
mov
mov
test
mov
clc
push
xchg
mov
add
enter
mov
clc
sbb
cmpsl
int3
fiadds
push
mov
or
js
sub
pxor
daa
std
cmp
mov
push
mov
repz
jle
out
inc
fistps
ret
rorl
mov
adc
hlt
mov
fcomps
xchg
jbe
jmp
add
mov
xchg
jb
fmul
enter
or
cli
cmp
add
jmp
popf
sbb
jg
movsl
mov
push
fnsave
push
xor
mov
mov
adc
lods
pop
inc
xchg
pushf
push
in
fs
int3
call
pusha
movsb
aas
pop
icebp
outsl
jle
repnz
mov
jae
push
push
movl
cmpb
ljmp
cli
mov
mov
test
xor
lret
dec
loopne
and
push
dec
ror
xchg
sub
cmp
mov
adc
aam
sahf
cmp
leave
and
shrb
je
outsb
fidivl
xchg
adc
add
jmp
adc
cli
lods
add
push
fwait
inc
fbld
cmp
adc
nop
js
pop
std
sub
sbb
push
sahf
lods
cmp
dec
roll
movsl
adcb
lods
popf
shrb
mov
lret
shr
push
push
inc
push
and
xchg
movl
test
pop
lret
and
cmc
cmp
std
pop
das
inc
fdivl
je
dec
sarl
out
jb
sbb
aas
jmp
pop
sbb
jecxz
pop
sub
je
je
adcb
test
lods
jo
sbb
mov
andb
test
popa
cmp
enter
xor
push
sbb
test
aad
imul
mov
sub
mov
mov
clc
leave
mov
jecxz
aas
push
push
adc
and
adc
mov
mov
and
cltd
lretw
adc
xchg
mov
nop
in
rcr
in
jecxz
inc
push
and
cli
push
sub
ljmp
and
push
mov
mov
stos
loopne
xor
cmp
ja
push
aad
adc
add
jecxz
test
pop
icebp
loopne
jg
sub
jmp
stos
gs
mov
loopne
mov
adc
imul
adc
in
inc
outsl
outsb
pop
je
xor
test
cmc
call
cli
or
xor
push
inc
adc
push
xchg
jg
pusha
cmpl
shll
push
inc
mov
inc
fwait
arpl
cltd
inc
mov
adc
dec
cmp
cmpsb
pushf
inc
in
xchg
sbb
out
pop
pushl
push
push
push
or
push
lret
mov
imul
jae
xor
mov
inc
mov
xlat
out
lods
das
adc
or
out
inc
mov
int
jnp
sbb
aad
lahf
xchg
xchg
ret
dec
push
push
jns
sbb
adc
pop
sti
jnp
xor
push
insb
cmp
adc
repz
jae
add
repz
aaa
lahf
shrb
fmull
movsb
cs
hlt
sbb
dec
pop
xchg
mov
push
outsl
notl
mov
jg
fiaddl
sbb
jmp
add
jmp
sbb
lea
lds
cmpsl
mov
jne
mov
fldpi
mov
repz
jmp
sbb
pushf
adc
mov
loopne
imulb
fcompl
xchg
lret
pop
data16
mov
shl
addl
jmp
push
jbe
pop
adc
mov
jg
lahf
shll
or
std
push
repz
dec
mov
xlat
push
stos
pop
stos
repnz
push
test
shll
and
pushf
add
fnstcw
push
out
lods
mov
aam
jno
dec
cwtl
sarl
icebp
push
inc
popf
pusha
inc
pop
inc
sbb
xlat
sarb
push
inc
lods
mov
jge
cld
adc
adc
mov
nop
clc
mov
and
xlat
jl,pn
mov
pusha
in
xchg
mov
pop
mov
ss
jno
pop
cmp
mov
call
addl
into
scas
cmp
fiadds
mov
ret
lods
out
fs
and
sti
mov
pop
gs
fisttpll
cmpsb
cmp
shl
sub
fimuls
mov
inc
into
xchg
std
out
lret
pushf
mov
xor
adc
dec
cwtl
roll
adc
mov
stos
dec
cli
mov
or
and
dec
push
loop
daa
fidivrs
mov
xchg
push
cli
cmp
fs
push
mov
sbb
push
testl
arpl
inc
xlat
or
daa
sbb
inc
js
pop
bound
das
mov
cltd
rcr
push
call
cwtl
pop
inc
dec
daa
dec
cmp
cmc
inc
add
data16
jns
cmp
lea
mov
jno
lahf
push
int
popf
lret
sbb
pop
nop
pushf
push
xlat
and
mov
pushf
cmp
inc
dec
lock
jne
nop
adc
fists
push
and
dec
mov
into
mov
or
or
sub
test
add
jo
pop
or
adcb
push
or
bound
xchg
movsl
jnp
mov
dec
sbb
jb
inc
xchg
addb
push
mov
or
push
dec
push
pop
inc
int3
sub
cmp
lods
cmpl
lods
mov
mov
jb
ja
loop
and
or
jne
jle
push
lahf
aaa
ficompl
sub
pushf
or
mov
jbe
mov
push
repnz
dec
inc
ret
sbb
mov
mov
fidivs
xchg
mov
decb
xchg
orb
mov
mov
jl
dec
scas
es
nop
dec
or
repz
ja
push
dec
pop
cmp
lcall
es
xchg
lock
loopne
xor
mov
mov
add
shr
fildll
mov
movsl
leave
sbb
adc
in
out
imul
jmp
mov
flds
adc
fwait
lods
cld
pop
add
xchg
out
adcb
sbb
cld
mov
icebp
mov
lock
sbb
dec
outsl
xor
xor
pop
fildl
xor
sub
push
inc
outsb
inc
pop
dec
rcrl
lcall
scas
jp
lahf
or
cmp
add
lret
inc
aad
xor
subb
pop
add
adc
inc
pushf
mov
sub
nop
test
aaa
and
shrd
sbb
inc
adc
xchg
mov
mov
mov
cmp
mov
mov
lds
cwtl
adc
lcall
scas
stc
int3
sarl
sbb
cmp
pop
call
cmpsl
loop
loop
mov
cmpsb
lcall
sarb
pop
jecxz
shl
in
add
ja
lea
negb
jmp
jno
ret
push
add
adc
ljmp
push
add
insl
rcrb
inc
scas
mov
sub
and
inc
fstps
inc
fwait
dec
mov
pop
mov
xor
cltd
arpl
clc
shll
mov
jp
sbb
pop
jge
mov
das
fwait
test
outsl
push
push
mov
dec
je
addr16
les
mov
mov
orb
sub
dec
jno
inc
pop
ret
cmpsl
inc
int
les
imul
mov
stc
inc
jg
ljmp
mov
mov
sub
add
es
adc
dec
xor
inc
fadd
aad
adc
add
imul
cmp
loop
divb
or
pop
insb
mov
mov
xchg
scas
xor
test
stos
addr16
pop
push
jbe
cli
sub
jp
aas
aam
mov
mov
jge
mov
sub
jl
mov
sub
je
sub
into
push
jnp
notb
out
ret
xor
pop
les
insl
dec
pop
hlt
push
fs
leave
inc
in
enter
adc
mov
push
mov
jbe
frstor
ljmp
mov
dec
ljmp
nop
sbb
in
and
cmp
in
pop
mov
movsl
aas
out
xlat
xor
ret
mov
xor
adc
ljmp
addr16
pop
adc
mov
std
sbb
ret
lcall
sub
cmpsl
pop
jg
adc
mov
in
sub
add
xor
push
mulb
lock
leave
add
pushf
pusha
xor
add
fistpl
pop
imul
sahf
addr16
dec
shll
adc
xchg
ret
jbe
movsl
mov
xchg
xchg
stos
xor
and
add
jne
xor
dec
decb
insl
jmp
xorb
ret
in
test
les
rorb
scas
cld
jne
dec
aad
pusha
into
sub
cmp
sarb
rolb
push
jbe
jo
aad
inc
sbb
popf
and
mov
xchg
mov
movsl
cmp
imul
les
aad
roll
adc
and
cmp
xor
sarb
lret
shrl
push
cmp
push
push
test
cmp
clc
leave
lahf
and
push
loope
fisubrs
imul
pop
jae
and
sub
rolb
sbb
out
xchg
cli
lcall
and
xchg
pop
mov
push
pop
push
cli
jl
jbe
mov
sbb
test
and
pop
cmc
in
jbe
in
mov
sub
mov
jno
ds
adc
xor
popa
adc
dec
sbb
in
in
out
inc
int
cmp
scas
mov
and
xchg
mov
cli
xor
inc
dec
or
dec
inc
jbe
jg
xor
mov
cmpsb
outsb
lea
mov
pop
cld
and
and
frstor
outsl
sti
push
add
push
lods
sbb
cs
loope
ss
jnp
push
jle
jle
mov
ljmp
gs
inc
mov
iret
add
stos
lahf
fisubs
inc
imul
jo
repnz
jns
fisubrl
movsl
push
insb
mov
mov
pop
mov
loop
jl
push
shrl
pop
add
loopne
push
ret
rcll
jae
xor
jge
rclb
data16
push
incb
ds
and
jg
mov
pop
push
outsl
xor
cmp
fcmovb
loopne
add
lods
push
ficomps
stos
mov
icebp
jnp
and
fnstcw
stos
push
jecxz
dec
stc
pop
pop
cltd
scas
jp
cmc
mov
lds
popf
push
mov
ljmp
jne
and
add
mov
xchg
int3
ss
lds
test
aam
push
mov
das
stos
adc
sub
ret
cmpl
arpl
dec
xchg
mov
xchg
push
push
mov
cmpsb
out
das
xor
sub
sbb
int
mov
xlat
xorb
or
mov
jo
ja
in
cwtl
cmp
xchg
and
cld
sti
xlat
scas
dec
insb
sbb
mov
adc
fdivs
adcl
push
popf
and
and
dec
and
clc
pop
int
shlb
jg
pop
xchg
outsl
sbb
cmp
push
xchg
fptan
shrl
lea
push
testl
clc
cli
xchg
movsb
lret
aam
jle
add
pop
mov
lods
and
rcll
sbb
sbb
xchg
fldenv
faddp
inc
ss
movsl
pop
xchg
rolb
mov
xor
mov
xlat
xchg
cli
hlt
push
shr
lock
mov
push
inc
xchg
mov
pop
lret
clc
fstpt
icebp
shlb
gs
pop
lock
xchg
repz
sbb
jg
nop
rcll
pop
pop
dec
jae
arpl
pop
cmp
enter
cmp
int3
add
push
gs
repz
lods
loope
and
xchg
aas
aas
mov
cmp
jg
xchg
dec
xchg
and
clc
lret
jecxz
pop
add
test
mov
imulb
push
cmp
dec
popa
jmp
mov
adc
jbe
push
mov
jo
xchg
cwtl
dec
adc
mov
imul
cld
inc
cwtl
push
sahf
pop
dec
xor
xor
insl
je
xor
call
mov
xchg
jae
pop
dec
icebp
cmpsl
pusha
aaa
xchg
sbb
adc
push
arpl
pop
dec
ffreep
inc
inc
mov
sub
mov
pop
xor
test
lds
adc
movsb
lods
popa
cmpsb
fwait
inc
or
sub
outsl
repz
fistpll
loopne
jmp
adc
xor
gs
jl
inc
ret
ss
outsb
cmp
repnz
test
mov
gs
faddl
sub
ret
pop
and
xchg
inc
xor
xor
inc
mov
ds
sub
adc
arpl
cs
mov
mov
jle
int
push
daa
in
dec
xchg
and
lahf
cs
cmp
push
mov
cmpsl
inc
fisttps
jmp
std
cmp
fldcw
cwtl
adc
call
sub
pusha
int
xor
mov
in
sbb
into
push
shlb
mov
or
add
inc
test
lods
pusha
js
lock
mov
sub
stc
sbb
adc
dec
jg
std
clc
jp
pop
je
stos
test
shll
sbb
push
dec
xchg
pop
cmpb
nop
in
sbb
dec
cmp
push
xchg
test
or
push
movsl
imul
movsl
mov
out
inc
pop
xlat
push
jecxz
mov
and
inc
xlat
cs
sbb
and
lret
mov
aas
push
iret
sub
cs
mov
dec
sbb
stc
adc
fdecstp
out
sub
xor
frstor
stos
imul
aas
adc
mov
out
pop
addr16
lret
pop
into
pop
call
xor
xor
cmp
addb
bound
inc
aam
jbe
idivb
mov
les
sub
test
dec
mov
add
cmpsb
add
pop
test
sub
mov
lcall
ljmp
xlat
jne
or
lret
popf
loope
push
imul
add
inc
push
test
sti
cmp
jbe
or
pop
sub
xor
jne
pop
push
les
bound
dec
rcrb
sub
jge
cmp
or
addl
mov
loopne
jns
pop
leave
les
sbb
ret
mov
cmpsb
fs
fnstcw
jecxz
sub
and
xchg
xchg
lcall
or
lret
jle
jmp
and
jns
jmp
xchg
mov
scas
mov
sub
test
loopne
test
mov
insl
inc
add
mov
jb
adc
pop
mov
ret
adc
push
lret
cmovg
adc
push
test
mov
push
xchg
jne
push
mov
push
pop
test
cmc
repz
pop
adc
mov
and
dec
test
popa
idivb
and
aad
push
push
cmpsl
pop
lods
or
psubw
fwait
mov
adc
inc
faddl
sub
imul
hlt
sarl
add
andb
scas
mov
push
xchg
aad
pop
mov
cmp
movsl
mov
cmp
mov
add
nop
pop
push
adc
aad
jnp
xor
sbb
or
popf
push
pop
fsubs
test
jmp
mov
imul
cmp
int
jne
rcrl
fdivrl
mov
mov
gs
jo
std
icebp
imul
pop
pop
pop
je
mov
and
nop
mov
std
jl
dec
jle
add
aaa
or
or
adc
or
sub
xor
push
mov
mov
inc
push
std
xor
xchg
movsl
push
or
daa
mov
inc
push
repnz
mov
inc
xchg
cwtl
mov
fldt
rcrb
sarb
xor
stos
xor
leave
leave
dec
pop
aas
pop
jle
pop
mov
push
sbb
jmp
mov
js
pusha
nop
jne
jmp
push
dec
pop
inc
mov
mov
mov
daa
pop
ljmp
jae
inc
mov
scas
mov
jns
ss
or
imul
xchg
sar
mov
stc
jge
mov
mov
cmp
pop
cmp
push
dec
push
add
loope
mov
repnz
insl
cs
call
fbld
mov
xchg
jno
push
popf
push
mov
dec
cmp
das
inc
inc
xchg
jp
mov
or
fwait
mov
adc
push
pop
add
pop
sti
adcb
pop
push
jecxz
jns
mov
mov
adc
dec
fstpt
dec
mov
sbb
sbb
mov
push
test
add
pop
sbb
icebp
cltd
insl
aad
push
aam
stc
mov
out
cmp
jne
cmpsl
lods
push
xor
or
push
jb
and
jle
adc
dec
test
cmp
les
push
sbb
jb
add
and
push
mov
cltd
pop
pusha
pop
sub
push
hlt
js
call
jmp
xlat
push
inc
mov
lea
movsl
iret
xchg
pop
lret
mov
out
insb
mov
cs
push
mov
sbb
dec
test
loopne
xorl
push
pop
xor
cmc
pop
cmpsl
cmp
icebp
mov
loop
and
aaa
in
adc
mov
fwait
fs
lret
adcb
fs
sub
inc
add
nop
or
lods
dec
out
lret
lea
in
shlb
inc
lcall
adc
push
pushf
cmp
pop
xor
pop
push
push
lods
pop
sbb
inc
fdivrs
sbb
mov
ja
xor
add
cmpsl
aad
lock
mov
jbe
xor
in
pop
push
hlt
pop
lret
mov
mov
adcb
cmp
out
out
inc
rolb
out
xor
mov
pop
cmp
mov
pusha
xchg
and
jns
call
pop
lock
jle
movb
addr16
mov
adc
insl
loopne
dec
movsl
mov
dec
inc
fwait
stc
dec
int3
pusha
lods
mov
jae
mov
bound
in
ds
mov
fdivs
ret
rclb
rorb
and
push
test
push
shll
xor
repnz
out
inc
das
ds
xor
mov
cld
fcompl
adc
gs
xchg
mov
mulb
les
mov
pop
dec
sbbb
mov
mov
push
add
mov
mov
mov
dec
hlt
cmp
int
lahf
push
xchg
aas
popa
in
pop
lock
inc
xor
and
adc
out
jne
test
and
insb
xor
data16
pop
cmp
and
sbb
cltd
inc
push
mov
push
jl
mov
daa
lds
adc
push
jecxz
inc
jbe
mov
in
imul
pop
call
adc
pop
sarl
add
or
cmc
loop
icebp
scas
cli
mov
jge
cmp
sub
jge
adc
mov
lods
lds
cmp
fs
fwait
sub
mov
jecxz
add
pop
xor
pop
roll
push
sbb
pop
dec
mov
cmp
jno
imul
std
stos
adc
or
xchg
ret
stos
sub
xchg
jbe
out
js
orb
cmpsl
push
sub
jmp
popa
cmp
sahf
sub
sbb
inc
add
hlt
ret
or
loope
and
and
xchg
fdivs
faddl
push
js
xor
int3
imul
repnz
sub
mov
inc
mov
and
iret
imul
iret
pop
mov
pop
ljmp
lahf
sahf
xlat
test
mov
les
inc
mov
jp
inc
out
dec
jp
jo
mov
loopne
sbb
xchg
xchg
in
lods
loopne
add
std
test
inc
jmp
popf
and
jnp
jmp
ljmp
jo
xlat
out
into
scas
bound
aaa
mov
daa
push
push
stc
jno
cmp
inc
fbld
aam
adc
cwtl
iret
inc
daa
pop
cmpsl
dec
neg
adc
stc
test
mov
push
cmp
int
mov
sbb
clc
ficomps
mov
orl
rcl
push
outsb
jecxz
dec
pop
push
mov
nop
ret
aas
add
push
or
xchg
xlat
mov
pop
lock
mov
mov
jge
int3
mov
into
into
into
pop
push
jmp
inc
loopne
gs
pop
mov
adc
mov
repnz
in
adc
lret
addr16
fmuls
add
clc
shll
shll
fdivrs
call
dec
movsb
mov
mov
sbb
std
daa
les
xchg
dec
push
lahf
pop
jne
cmp
dec
xor
movb
jb
add
add
dec
dec
mov
iret
rcrb
xor
jae
mov
pop
ja
dec
cmp
xor
leave
mov
inc
mov
pusha
add
xlat
sub
nop
mov
and
cmpsl
fldlg2
fptan
rcll
jle
pop
and
xchg
pop
pop
sub
aas
ja
xchg
mov
mov
add
xchg
mov
mov
sbb
sub
xchg
lods
jbe
mov
adc
push
jo
in
mov
insb
in
rcrl
jl
push
adc
xchg
lods
jecxz,pt
and
test
jae
movsb
lock
or
pop
inc
cmpsb
xchg
or
cmpsb
rcrb
push
int
js
or
fbstp
push
insb
cmp
mov
adc
iret
push
pop
cmc
leave
fs
out
mov
add
insl
xor
dec
test
cltd
jecxz
push
or
mov
movsb
fwait
adc
xor
neg
int
xor
aaa
lds
mov
push
adc
xchg
shll
lcall
stos
daa
inc
shlb
arpl
test
sub
sbb
inc
push
inc
xchg
rcll
aas
movsl
and
pop
mov
push
call
fstpl
push
or
mov
push
dec
or
jecxz
arpl
sbb
fs
pop
lods
mov
adc
in
mov
and
push
jnp
ljmp
mov
add
repz
pop
mov
inc
lods
cmp
lahf
cmp
fiadds
scas
mov
xor
cli
mov
ss
inc
push
pop
and
ja
sbb
bound
adc
add
incb
mov
or
int3
pusha
jne
and
cld
sarb
xchg
or
jno
loope
jecxz
and
outsl
shll
incl
and
cld
add
testl
std
dec
pop
ret
jne
in
sub
scas
cmp
scas
out
adc
xchg
js
dec
and
and
lds
pop
sub
xor
arpl
xor
movsb
jl
cmp
getsec
lods
mov
scas
fidivl
mov
jns
hlt
or
jae
or
mov
jle
mov
cmpb
fst
dec
mov
js
sub
mov
ds
fucomp
mov
add
insb
cmpsl
fsts
arpl
jno
adc
stos
cmc
sbb
pop
popa
adc
lods
mov
jno
and
mov
mov
push
cmc
idivb
ljmp
mov
adc
jle
mov
dec
js
push
push
push
je
mov
les
sbb
pop
shl
xor
rclb
cmp
xor
push
jmp
mov
adcb
push
push
xchg
sub
xor
mov
push
add
xor
push
shrl
je
outsl
mov
cmc
pop
shlb
and
movl
xchg
ja
in
mov
pop
cld
fdiv
adc
cld
cltd
xchg
cvtdq2ps
scas
push
ret
sub
cltd
std
stos
jmp
scas
movsb
repnz
je
out
xchg
push
pop
out
fcomi
stc
inc
push
or
out
hlt
dec
mov
sub
push
and
inc
fldl
sub
imul
mov
xor
xchg
inc
and
std
mov
call
bound
inc
aas
inc
mov
and
push
inc
pop
movsl
clc
pop
jg
jo
cmp
ds
hlt
aas
push
jecxz
push
jns
scas
incl
or
outsb
les
loope
pusha
adc
jl
sbb
mov
jns
dec
cmpb
add
call
stos
test
out
or
ljmp
pop
push
mov
mov
insl
xchg
fs
mov
push
shlb
jl
mov
les
cmpsb
jge
dec
fimuls
mov
dec
ret
push
inc
add
movsl
int
adc
ficoms
ret
adc
pop
cmp
subb
sahf
sub
mov
pop
adc
mov
push
push
setl
inc
scas
jo
sub
push
andb
es
xor
lods
es
sbb
jno
loope
push
xor
and
lret
add
xchg
dec
inc
mov
dec
adc
dec
adc
push
fidivs
sub
or
fucomip
jge
fstl
and
jnp
cld
mov
jb
fiaddl
stos
inc
daa
or
adc
ljmp
sbb
popf
popf
mov
xor
test
sti
cmc
push
push
pushf
xchg
pop
inc
adc
and
xchg
lods
cwtl
iret
in
pop
mov
fwait
jle
xchg
lock
jo
jno
mov
or
aam
pop
mov
jb
sub
and
ret
pop
inc
mov
outsl
lds
pusha
out
jle
pushf
lds
jge
hlt
mov
sub
imul
sbb
and
or
jl
popf
dec
mov
mov
fcmovne
mov
jnp
daa
das
mov
jo
cmc
out
xchg
aas
std
push
sahf
jbe
xlat
inc
scas
call
out
lods
or
mov
adc
cmp
loop
aas
roll
nop
add
cmp
nop
sub
add
shlb
cltd
mov
xor
fnstsw
test
ss
sbb
sub
imul
adc
bound
std
xchg
jecxz
xor
mov
xchg
jne
adc
jmp
jl
outsb
mov
or
or
insl
cld
dec
sbb
sbb
jns
mov
sbb
fs
xorb
pusha
mov
sbb
pop
mov
ss
imul
and
xchg
es
sbb
lds
loope
repz
xchg
mov
push
xchg
cld
sahf
push
cmp
cmp
cwtl
dec
enter
or
in
add
pop
lods
fcmovbe
rclb
out
push
orb
and
push
lret
jl
inc
and
andl
sarb
cmpsl
xchg
lods
sub
fs
daa
add
mov
pop
dec
or
mov
pop
xchg
lret
sub
cmp
loopne
fisubrs
or
in
fsubl
scas
add
jnp
in
arpl
mov
test
sub
mov
mov
ficompl
mov
in
fucom
lret
dec
push
outsl
xchg
clc
negl
lock
and
call
cmp
arpl
pop
and
call
jg
in
and
lock
jge
rcrb
stos
mov
in
sbb
in
sahf
mov
push
dec
mov
inc
xchg
enter
mov
xchg
das
dec
mov
sbb
enter
lret
xor
mov
mov
jae
jecxz
or
dec
jbe
lods
mov
pop
test
xor
and
mov
sub
in
jns
movsb
movsl
pop
and
insb
and
ss
fs
lret
arpl
mov
and
shrl
dec
jl
out
into
and
cwtl
xor
enterw
ret
lret
inc
cmpsb
aaa
mulb
xchg
std
xchg
std
inc
xchg
xchg
xor
or
mov
push
mov
cld
mov
push
push
xor
iret
jle
out
test
mov
jno
cmp
stos
inc
push
out
sub
sbb
xchg
call
pop
pop
icebp
gs
test
push
bound
negl
jo
repnz
rolb
mov
jecxz
mov
xchg
mov
cmp
bound
push
xchg
test
xchg
xchg
dec
repz
mov
test
pop
test
stos
jl
daa
and
inc
adc
cs
popa
cmp
and
enter
ficompl
cwtl
adc
test
push
push
push
adc
aad
push
inc
fs
imul
jp
dec
cld
xchg
sub
lea
cmp
xchg
push
mov
or
sarl
jge
pop
mov
mov
jl
xchg
cmp
mov
test
sar
out
cmp
add
mul
pop
in
icebp
aad
push
sbb
xorl
adc
mov
mov
mov
inc
insl
jge
xor
add
rcr
cmpl
ss
jmp
adc
mov
int
sbb
repz
add
mov
and
gs
ret
mov
test
jl
sbb
mov
dec
sub
or
divb
mov
cmpb
lcall
pop
pop
pop
addr16
frstor
jb
sub
shll
dec
xchg
out
dec
push
insl
add
mov
outsl
sarl
or
out
movsl
xchg
jno
jae
imul
mov
mov
push
loop
cli
scas
mov
je
inc
cmp
fidivrs
cmpsl
cltd
aaa
sbb
jmp
clc
out
icebp
dec
xor
push
push
out
imul
mov
or
dec
mov
push
mov
in
ficompl
stc
mov
cmp
cltd
lret
fdivrl
pop
jle
fsub
pusha
add
inc
iret
test
cld
fcmovnu
mov
dec
inc
bnd
xchg
add
push
enter
lret
push
mov
rcll
test
sarl
mov
loopne
sahf
push
pop
add
stos
and
sub
jmp
and
ret
sub
adc
mov
fldl
jge
ss
les
sbb
mov
out
ljmp
xchg
cmp
mov
sbb
mov
dec
and
mov
add
dec
add
xchg
sub
sub
sbb
ja
es
lock
loopne
xchg
jg
cli
mov
inc
pushf
add
lds
pop
and
divb
lods
aas
and
cmc
syscall
mov
and
sbb
sub
add
xchg
jne
push
pop
push
stos
fldt
cmp
lret
jae
xchg
pop
cwtl
push
icebp
ficomps
jl
ja
mov
add
loop
inc
in
xchg
adc
push
adc
xchg
cli
xchg
mov
mov
test
add
fstpl
add
cmp
cld
lds
loopne
or
ret
jno
push
sub
adc
iret
inc
xor
out
dec
xor
inc
mov
mov
mov
inc
jmp
cmp
push
icebp
ja
xor
notl
mov
mov
rcll
sbb
jnp
stos
cmc
lcall
and
dec
pop
aam
sbb
sbb
xchg
cmp
mov
stc
sbb
mov
sub
ret
jp
xor
mov
and
cltd
jbe
aaa
sub
loop
mov
je
inc
lret
mov
mov
dec
fldz
jns
shlb
cltd
clc
push
and
shrl
pop
sub
mov
test
mov
adc
fwait
imulb
repnz
push
mov
enter
sti
dec
sbb
sahf
mov
pushf
repnz
xchg
and
ret
mov
int
imul
pusha
je
cmc
xchg
xorps
subb
iret
mov
xchg
test
pop
lret
jns
cmp
jle
out
std
mov
add
push
or
mov
lea
or
inc
fs
je
mov
adc
rcll
adc
xor
outsl
jg
xor
mov
or
out
xchg
divl
cmp
bound
sub
shll
sbb
lahf
mov
imull
xor
and
movsl
jmp
scas
mov
sub
mov
stos
addl
lret
ret
xchg
mov
aam
pushf
xor
mov
lcall
mov
sbb
and
pop
outsb
mov
mov
insb
lods
rol
sbb
xchg
jmp
in
adc
dec
mov
nop
mov
jge
dec
cmc
xlat
jp
push
rcl
jmp
aad
jmp
or
rcr
cli
dec
sub
movsl
jb
push
pop
push
ret
sub
push
fildll
pop
inc
ja
aad
adc
xchg
mov
std
pushf
mov
sub
add
mov
jb
dec
jecxz
stos
ret
add
jge
xor
inc
inc
bound
in
inc
pop
mov
shrl
inc
inc
xchg
and
xchg
shll
jne
push
shlb
icebp
test
sbb
jnp
mov
and
jns
mov
lret
adc
hlt
insb
out
mov
loopne
cmp
sub
inc
pushf
sbb
pop
mov
mov
mov
std
xchg
rorl
sbb
daa
in
les
insl
mov
out
sbb
jne
xor
jo
loop
dec
insb
imul
je
jb
in
push
outsb
nop
push
inc
mov
stc
add
add
push
sub
and
jecxz
aaa
cli
aas
sbb
sub
cltd
sbb
push
faddl
addr16
in
cmp
add
daa
movsb
adc
das
jmp
xor
bound
xchg
repnz
dec
xor
dec
inc
jo
das
sub
cmc
mov
push
or
add
sub
cmpsl
cltd
cmp
popf
dec
test
ficoms
jmp
test
push
push
cmpsl
sbb
xor
lahf
push
mov
in
call
mov
push
lods
lods
das
rcll
in
mov
inc
sbb
or
hlt
pop
shrb
cmp
test
jne
lcall
not
inc
xchg
mov
fmulp
stos
insl
insl
sti
div
push
push
push
clc
cmpsl
dec
fwait
and
and
jnp
cmp
fistps
decb
cmp
sub
leave
push
pop
xor
push
popa
pop
xchg
nop
scas
cmp
mov
jnp
push
xor
ret
inc
ret
dec
daa
mov
insb
sbb
ftst
sub
inc
push
push
imul
mov
and
push
push
out
pop
stos
or
mov
ja
sub
mov
and
scas
mov
psrad
jne
rcr
inc
sbb
bound
and
dec
sbb
inc
sub
inc
sahf
out
test
fs
nop
dec
scas
mulb
jle
xchg
out
dec
mov
or
add
mov
mov
aam
pop
adc
das
adc
adc
imul
mov
pushf
nop
cmp
or
loopne
mov
jo
cltd
add
aas
ljmp
sbb
jle
ss
cwtl
jnp
test
leave
pop
mov
add
int3
inc
enter
js
inc
mov
mov
les
outsb
fsubr
jg
out
xor
pop
mov
inc
pop
cmp
js
sbb
addr16
out
cs
movsl
movsb
repnz
mov
cs
in
inc
mov
xor
aad
push
add
and
push
xchg
sub
xchg
std
fsubl
movsb
sub
popa
xchg
xor
jl
mov
loope
lea
fdivs
mov
xor
push
jns
cmp
inc
jg
add
dec
push
hlt
xor
sbb
clc
loop
outsl
outsl
adc
xor
sub
in
mov
dec
mov
mov
fisubl
out
daa
lods
xor
push
js
cld
ror
cmp
and
sbbb
insl
sub
jle
sbb
aad
test
daa
xor
mov
pop
or
pop
lods
enter
or
stc
and
or
fldcw
xlat
fidivl
dec
adc
add
xchg
cmp
mov
adc
cmp
inc
aad
std
icebp
mov
cmp
dec
scas
pop
lods
idiv
stos
adc
jmp
shl
mov
mov
into
jle
mov
jl
inc
shlb
ds
xchg
xchg
divb
jb
icebp
arpl
das
arpl
mov
adc
add
pusha
int3
jecxz
sbb
pop
movsl
stc
add
inc
ja
lods
add
and
fbstp
cmc
adc
mov
test
sbb
mov
loop
or
xchg
push
dec
cmp
mov
push
or
test
and
pop
and
out
mov
test
pop
mov
fisubs
cmpsl
js
inc
sbb
push
xor
add
inc
xor
or
mov
gs
mov
mov
or
rol
mov
push
orl
mov
push
or
loope
mov
cld
jle
mov
clc
mov
std
fiaddl
out
sbb
push
cmp
add
xchg
stc
mov
scas
scas
movsl
adc
add
mov
into
dec
sub
scas
pop
std
enter
xchg
inc
jp
mov
inc
clc
add
jecxz
and
ret
les
jmp
mov
mov
cltd
sbb
in
lock
inc
inc
popf
xor
pop
adc
int
jecxz
mov
pop
mov
push
inc
push
ljmp
stos
cmp
push
add
mov
and
jb
dec
jnp
and
xchg
xor
xchg
lock
adc
cmc
adc
fisubs
nopl
xchg
scas
jp
js
aad
dec
idiv
mov
jb
push
outsl
dec
xor
fidivrl
jge
dec
mov
in
movsb
cmp
or
cmp
test
loopne
packuswb
fiaddl
xor
push
inc
jne
or
xchg
jl
outsl
xchg
flds
fwait
mov
scas
mov
ja
test
cmpsl
das
push
cmp
arpl
or
or
test
stos
sbb
jbe
jae
add
sbb
xor
and
and
test
mov
pop
adc
fdivrp
sbb
sub
mov
fldenv
int
adc
dec
and
leave
test
jl
xchg
sarb
mov
lds
pop
pop
lea
out
push
icebp
hlt
cmpsb
push
jmp
test
jne
jg
mov
lret
popa
jae
mov
inc
dec
xchg
xor
leave
aam
add
dec
mov
out
fbld
movsl
movsl
inc
push
enter
cmp
addr16
iret
adc
icebp
pop
mov
and
xchg
push
leave
add
mov
xor
pusha
stos
jmp
ljmp
ret
cmp
nop
dec
cmpsl
mov
nop
aaa
aad
xchg
push
add
sub
jmp
mov
outsl
add
hlt
in
mov
js
outsb
cld
std
add
push
mov
ds
cld
xchg
or
gs
pop
push
cmp
xor
pusha
imull
roll
add
jge
jae
faddp
and
bound
adc
jne
aas
in
jl
pop
shl
cmpl
adc
dec
push
adc
mov
outsl
mov
xchg
inc
xchg
pop
addr16
data16
cmp
push
outsb
inc
out
xchg
add
stc
dec
jmp
cmpsb
out
test
loope
cmc
xchg
pop
xor
mov
mov
rcr
mov
enter
push
mov
outsb
outsl
and
cmp
outsb
data16
sbb
ljmp
push
mov
addl
scas
dec
out
xchg
dec
xchg
test
jb
lcall
out
pop
mov
lea
or
pusha
jns
rclb
push
lock
negb
mov
add
pop
das
pop
sbb
pop
insl
cmp
outsb
mov
dec
cmp
push
inc
jg
adc
jecxz
add
cmc
pop
jno
mov
lcall
jge
sub
and
shll
rclb
push
lock
add
gs
mov
pop
mov
mul
imul
loope
sbb
pop
ja
cli
inc
scas
xorb
or
cmc
xlat
std
lahf
pop
cwtl
add
sbb
mov
sub
mov
in
push
cld
xchg
sub
repz
dec
mov
in
jae
mov
xlat
xchg
and
in
sub
push
or
cld
cmp
mov
out
cmp
hlt
or
mov
dec
int
dec
jecxz
inc
ljmp
inc
lret
test
mov
sbb
scas
adc
int
sbb
pop
scas
push
cmp
jb
daa
jp
cmp
add
xchg
lret
jne
int
hlt
sbb
mov
xor
aam
in
in
pop
lods
jmp
scas
push
scas
xchg
imul
pop
mov
mov
popf
ret
pushf
push
dec
mov
fsubl
dec
or
push
mov
pusha
cmp
pop
out
das
mov
push
pop
fdivr
cmp
mov
fmulp
mov
enter
jmp
lock
pop
inc
rcl
mov
pop
push
add
scas
in
jo
cwtd
les
xchg
xchg
pop
sbb
mov
or
dec
adc
cmp
fmul
popa
push
push
in
sbb
lock
test
push
imul
jb
out
scas
push
data16
hlt
fstl
scas
sub
test
pusha
xchg
cmp
js
dec
daa
bound
or
fcmove
cmpsb
mov
test
dec
sub
shrl
out
push
cmp
sbbb
mov
sub
std
mov
adc
add
pop
mov
inc
mov
pop
jle
in
adc
inc
jmp
mov
and
adc
lahf
xor
jmp
test
mov
adc
sub
sub
mov
inc
out
inc
iret
xlat
call
ljmp
xlat
mov
sub
lahf
mov
movsl
es
mov
ljmp
aaa
push
and
insb
ficoms
repz
adc
xor
xchg
mov
mov
cmp
fstl
mov
ljmp
and
xchg
sub
out
test
dec
stos
hlt
in
icebp
cmpb
iret
bound
adc
pop
cmp
daa
sbb
inc
cmp
addb
lret
sar
imul
mov
xor
ss
mov
cmp
imul
pushf
push
lahf
push
adc
fisubl
mov
adc
stc
add
push
push
cmpsb
or
mov
pushf
jno
nop
fucom
or
jmp
insl
call
mov
js
xchg
dec
gs
iret
pop
cmp
add
jns
mov
mov
leave
out
pop
out
lret
push
adc
mov
mov
add
xor
inc
xor
push
and
in
mov
jmp
xor
or
imul
dec
jae
sub
mov
decl
jnp
cld
popf
lods
push
aad
adc
push
add
mov
imul
mov
outsb
popf
fildll
xchg
pop
cmp
jmp
pop
xlat
test
sidtl
or
jnp
add
fadds
repnz
dec
fistpl
jno
xchg
pop
sbb
repz
mov
pusha
push
push
and
push
mov
pusha
jbe
je
popf
test
cwtl
nop
adc
push
cmpb
or
sbbb
test
syscall
hlt
mov
ret
mov
mov
dec
lahf
mov
xchg
mov
push
push
hlt
mov
push
xchg
int
cmp
scas
rolb
push
enter
xchg
es
jmp
sti
mov
popa
stc
je
nop
outsl
sub
daa
pushf
sbb
icebp
cmp
and
fisubs
add
jns
clc
in
mov
mov
test
and
inc
mov
hlt
sbb
xor
sahf
outsl
pop
mov
cmpsb
jl
lock
jle
fsubp
mov
inc
mov
icebp
rol
xor
insb
lods
test
adc
jg
add
mov
fmuls
inc
mov
push
jp
mov
lock
xchg
incl
mov
daa
orb
mov
rcll
xchg
ja
jnp
test
add
add
pop
ljmp
jecxz
pop
adc
cltd
or
sbb
pop
je
test
movsl
int3
and
xchg
add
pop
clc
dec
inc
mul
divb
sbb
cmp
mov
enter
pop
dec
int
sbb
jnp
sbb
pusha
pop
dec
pop
lahf
es
jae
xor
outsl
ja
push
popf
fnsave
insl
in
mov
sbb
popf
mov
sub
movsl
xchg
aam
fstl
inc
inc
cmpsl
imul
cmp
cld
cmp
ret
mov
xorl
pop
xor
jmp
cmp
fsubrl
sbb
mov
adc
pop
insb
adc
add
lahf
aad
dec
mov
adc
test
pop
jp
lret
ds
mov
test
sub
outsl
int
and
loopne
push
iret
idivl
mov
pop
cmp
xor
daa
cmpsl
outsb
add
sbb
adcl
jns
xchg
stc
mov
callw
jge
mov
outsl
pop
push
cwtl
mov
cmp
jo
shlb
stos
or
pushf
roll
push
mov
lcall
mov
into
pop
or
inc
inc
shlb
adc
xchg
xchg
pop
push
add
jnp
iret
cmp
aas
fwait
and
mov
push
jmp
pushf
iret
pop
adc
or
sub
add
xchg
add
jne
call
xchg
push
add
pop
rolb
mov
cmpsb
inc
into
arpl
out
lods
je
movsb
cmpsb
xorb
icebp
or
hlt
mov
insb
lods
rclb
push
ds
setb
pop
imul
cli
pop
xchg
xor
mov
test
or
push
loopne
push
gs
cmpsb
enter
arpl
adc
mov
adc
ja
stos
insb
pop
push
push
add
jnp
out
movsl
add
xchg
test
rol
dec
inc
xor
lods
pushf
jg
or
add
sti
pop
mov
or
lods
lret
ret
scas
cltd
les
and
xchg
fcomi
mov
in
mov
lods
or
loope
scas
repnz
dec
push
cmp
add
lock
inc
mov
ss
imul
cmp
sbb
push
mov
les
outsb
mov
sbb
andb
sub
jge
stos
mov
call
or
fcoms
and
mov
or
movsl
fmul
dec
cmp
cmpb
mov
repnz
repnz
add
jns
sub
xlat
push
jno
push
hlt
arpl
add
dec
ss
leave
xor
shlb
dec
movsb
or
inc
fldcw
xor
loopne
or
sbb
mov
mov
addr16
xchg
mov
xor
outsl
ja
cmpsl
fnsave
mov
dec
cs
das
inc
cld
ljmp
insl
jnp
ja
call
mov
jecxz
pushf
and
js
mov
scas
aaa
in
aas
inc
lock
mov
test
push
out
and
mov
imul
dec
dec
sbb
in
push
in
sub
pusha
or
push
clc
jae
out
sub
push
and
mov
cmp
ljmp
mov
add
in
lcall
fs
cmp
pop
mov
inc
push
jp
xchg
addb
insb
add
cmp
adc
jp
fcoml
and
lret
inc
insb
inc
imul
loop
int3
sub
jmp
push
jae
jmp
test
sti
jl
test
adc
lahf
sbb
add
dec
push
stc
cwtl
inc
out
aam
fsub
xor
leave
mov
lea
aad
sub
rolb
test
mov
insb
pop
pop
in
inc
rcll
adc
in
cmp
cmpsb
cmpsb
dec
adc
movsb
cli
cmp
sar
xor
and
nopl
push
fldcw
fcomip
dec
inc
inc
jl
shlb
daa
mov
out
das
clc
imul
lock
push
daa
icebp
mov
push
jg
js
aas
xchg
dec
or
or
sti
xchg
and
cli
mov
add
mov
adc
popa
lahf
adc
sub
sbb
sub
adc
or
leave
xchg
push
mov
adc
pop
out
xchg
test
push
mov
insl
mov
sub
lret
lcall
add
add
sbb
jb
adc
mov
or
mov
movsl
loopne
add
daa
mov
dec
jecxz
into
in
lret
mov
movsb
lahf
jnp
jb
pop
dec
das
dec
lea
xor
cmp
xchg
out
pusha
sbb
and
shrb
jbe
in
out
fs
out
xor
mov
lock
xor
fists
fdivl
and
shll
jmp
xchg
outsb
test
pop
lods
xor
xor
push
pop
repnz
adc
ja
xor
jne
decl
mov
inc
fstpt
jge
xchg
in
fstp
mov
add
pushf
aaa
je
xor
daa
or
xor
fwait
cmpl
xor
jmp
mov
and
imul
in
inc
int
pop
cmp
xor
adc
xchg
and
jmp
popa
xor
dec
xchg
jmp
xchg
pop
lds
and
fsubs
int
rclb
mov
daa
push
pop
pop
add
out
je
xor
cmp
xchg
and
rol
push
in
sub
ret
mov
cmpsb
sbb
xchg
popf
out
dec
xchg
mov
cli
out
sahf
cld
and
cmp
dec
loop
pop
out
incl
dec
dec
loop
rcl
mov
lods
les
mov
lahf
sahf
add
mov
xlat
xor
dec
pushf
aad
fucomi
test
stc
rorb
jne
ja
sti
jg
iret
inc
cli
aas
popf
call
or
mov
pop
aaa
pusha
fsubrs
push
enter
es
test
dec
aaa
lahf
cmc
xor
mov
push
or
push
mov
add
sbb
insl
int
xchg
frstor
xor
push
jne
mov
xor
mov
in
and
fdivrs
fadds
movsb
int3
adc
or
ss
adc
lret
pop
jecxz
decb
imul
mov
push
sub
dec
sbb
lods
xchg
ljmp
enter
push
mov
test
push
push
jne
mov
jae
jns
add
scas
lret
stos
xchg
repnz
aaa
cmpsl
xor
push
jb
lods
pushf
xchg
lahf
and
adc
push
dec
push
ds
push
mov
adc
or
push
cmc
js
insb
mov
or
pop
sub
mov
jb
sbb
pushf
lods
lret
sbb
and
cld
or
ffree
fimuls
iret
mov
and
les
and
push
lret
cld
sub
cmpsl
dec
mov
test
push
lahf
mov
lods
rcl
bound
and
pop
enter
sbb
pushf
rcrl
sbb
add
inc
add
mov
pop
fxch
pushf
lahf
sbb
cli
test
add
aam
mov
fstp
sub
imul
cmpl
lahf
mov
ret
add
jo
push
pop
push
push
imul
test
aas
mov
pop
scas
mov
pop
bnd
push
shr
test
adc
pop
lock
xchg
fbld
or
pop
jne
out
cwtl
lret
adc
push
mov
cld
andl
lahf
pop
repz
cli
pop
ret
in
pop
gs
rol
or
xchg
gs
cmp
pop
repz
imul
lahf
icebp
pushf
jb
fistl
shrb
mov
int3
pop
mov
and
dec
inc
out
add
and
lea
iret
push
adc
loop
mov
push
sub
lods
mov
and
pusha
cmp
mov
mov
data16
pop
or
ds
shlb
jp
and
rcrl
int
stc
pop
xor
js
and
sbb
lahf
sbb
fdivrs
xchg
pop
jbe
add
pop
or
pop
dec
inc
cmp
push
stc
adc
jmp
mov
mov
ja
loop
cmpsl
adc
push
std
sbb
je
mov
xchg
mov
and
mov
clc
mov
inc
lock
sub
test
sub
in
adc
pop
xor
jnp
data16
or
mov
stos
test
jns
mulb
inc
jge
cmp
sbb
pop
inc
nop
mov
cmp
xrelease
xchg
pop
xchg
cmc
cltd
push
je
outsb
sbb
test
pop
and
into
sar
out
push
pushf
fldcw
and
lret
imulb
cltd
mov
ficompl
test
mov
xchg
sbb
fwait
xor
imul
pop
sbb
fimull
ljmp
js
mov
pop
dec
add
or
mov
mov
jl
scas
fdivrs
mov
popl
call
push
xchg
mov
aam
fdivr
sti
jne
shlb
push
lret
push
stos
jg
js
push
jl
iret
ret
mov
pop
data16
push
xorb
pop
cmc
call
rcrl
pop
mov
mov
sub
cli
dec
testl
adc
fs
mov
push
loop
mov
xchg
lret
xchg
pop
dec
sbb
fs
sub
mov
in
or
xchg
pop
lock
xchg
push
xchg
inc
in
push
push
push
dec
fs
sbb
mov
sub
push
in
sub
and
sub
roll
mov
jl
mov
pop
insb
pop
mov
mov
jne
inc
test
sub
mov
decb
sbb
enter
pop
dec
dec
cmp
mov
fidivrl
xchg
pop
xchg
sbb
cmpsl
inc
pop
sub
push
dec
pminub
and
cmpsb
add
outsl
inc
inc
stos
call
mov
testb
push
scas
jo
mov
adc
pop
xor
stos
cli
mov
sbb
std
mov
iret
in
sbb
imull
inc
cmp
les
sub
mov
push
lahf
pusha
repz
mov
in
jl
mov
call
xchg
mov
dec
and
arpl
inc
jp
in
mov
lcall
pop
fndisi(8087
test
fcmovnu
lret
test
inc
jg
stos
mov
aad
stos
push
mov
int3
xchg
mov
arpl
push
add
push
cwtl
adc
inc
jae
arpl
xor
les
push
mov
daa
pop
loop
xor
push
inc
jecxz
and
inc
adc
mov
pop
adc
addl
add
jbe
push
je
pop
sub
cltd
mov
insb
sbb
icebp
mov
or
les
xchg
pop
cmpsb
mov
mov
mov
sub
xor
push
fcom
das
cltd
cld
scas
cmp
push
inc
movsb
xchg
cmpsl
stc
adc
fldenv
ret
adc
js
xor
roll
cmpsl
lretw
repz
ss
dec
hlt
data16
jns,pt
gs
lret
js
lods
test
std
aam
scas
outsl
push
mov
outsb
inc
pop
mov
xor
or
adc
or
push
stos
adc
adc
outsb
xchg
jmp
movsb
mov
xlat
movsb
sbb
adcb
dec
test
inc
ljmp
push
or
test
loop
xchg
fmulp
xchg
add
inc
jb
fwait
lret
imul
lods
cmc
push
push
jle
outsl
in
adc
repnz
testl
subb
movsl
lock
testb
loope
cmc
out
movsb
mov
mov
pop
push
dec
inc
inc
jb
test
mov
shrl
shl
cmp
push
and
sub
push
cld
sub
inc
mov
push
fs
iret
cmp
inc
rol
fistps
sub
push
lahf
out
popl
push
lock
dec
jle
xchg
mov
fcomps
test
xchg
cmp
add
inc
jmp
xchg
mov
adc
sbb
adc
sti
cld
jg
mov
inc
imul
mov
out
pop
mov
nop
inc
cmp
movsb
pop
test
fimull
lock
add
addr16
mov
in
adc
cltd
insl
sub
test
add
push
mov
daa
stos
fiadds
inc
sub
shr
es
xor
jge
cmc
mov
je
xor
test
jge
cs
shl
mov
inc
jp
sub
aam
sarb
xorb
jge
mov
xor
inc
ss
insb
xchg
dec
gs
or
jmp
mov
popa
cmpsl
sub
cs
mov
mov
cmpsb
xchg
lds
daa
les
int
sti
int3
bound
orl
movsb
push
nop
cmp
stos
rolb
addl
xlat
sbb
cmpl
lods
xor
jb
fistl
into
cmp
and
cmp
add
cwtl
sbb
lock
jo
mov
ss
out
imul
mov
jecxz
jecxz
ret
arpl
movsl
push
inc
pop
push
pop
lret
adc
loopne
int
lds
sub
push
imul
das
popa
fstpl
sbb
jb
xor
xchg
lock
scas
mov
cmp
mov
aaa
add
mov
cmpxchg
dec
adc
lcall
xor
push
jg
enter
test
decl
std
fisubrs
add
push
movb
or
leave
ds
rcr
push
jbe
push
add
out
ret
adc
frstor
pop
and
pop
add
pop
in
imul
mov
ficomps
ljmpw
out
mov
mov
pusha
inc
inc
dec
pushf
hlt
mov
mov
mov
mov
sbb
shl
adc
and
popa
mov
aad
retw
stos
jmp
lds
and
sub
push
cmp
repz
gs
pop
or
repnz
pop
cmpsb
testb
fsubrp
or
mov
fsubrs
test
jb
decl
lret
cmpb
sub
sbb
mov
call
filds
lea
popa
es
sbb
lods
mov
aam
inc
and
fs
out
aam
std
or
sub
adc
cmp
mov
icebp
mov
jbe
cmpl
mov
xor
push
cmp
jp
cli
lds
push
and
push
jecxz
xchg
jp
pushf
jge
clc
mov
shrb
ss
int3
jmp
cmc
cld
movsb
mov
les
fxch
inc
jle
push
test
fld
lcall
inc
add
push
push
lods
xchg
cmpsl
test
packsswb
xbegin
push
push
imul
idiv
cmp
jo
dec
rclb
sbb
shl
and
outsl
das
xor
lods
aaa
mov
mov
xor
test
cmp
sbb
xor
sahf
xor
shl
cld
int3
frstor
jp
xor
sbb
jl
mov
call
inc
xchg
or
jno
dec
sbb
es
add
lea
test
fimuls
scas
jg
xchg
add
xchg
lahf
out
push
sarl
sbbl
ljmp
xchg
push
cmp
cmp
popf
icebp
xchg
lea
or
nop
or
sbb
lret
lret
fmull
std
add
scas
decb
outsl
jecxz
insl
mul
test
test
add
mov
lret
mov
mov
mov
jmp
pusha
inc
add
arpl
mov
bound
sub
adc
cmp
cld
iret
call
insb
cmp
daa
cli
mov
ret
mov
popa
mov
mov
jp
movsb
insb
lahf
jne
bound
add
nop
add
pop
lods
cmp
fcmovnb
adcl
mov
sub
lock
add
cltd
or
pop
nop
xchg
out
stos
inc
mov
cltd
ja
fdivrs
repz
call
in
push
stos
jae
pop
adc
ljmp
les
loopne
negl
xor
push
js
lea
mul
pop
ljmp
or
mov
pop
das
xor
repnz
rorl
pop
out
pushf
addr16
adc
fstpl
dec
push
push
sbb
fnstenv
cmp
femms
mov
outsb
imul
fs
loop
sti
pop
pmulhuw
cld
pop
data16
sub
negb
sbb
or
call
aas
adc
inc
lock
xor
inc
dec
mov
or
jbe
fwait
cmpsb
lds
push
pop
dec
push
or
jecxz
repz
push
sbb
bound
mov
iret
sahf
push
hlt
mov
and
adc
jmp
lret
gs
pushf
test
pop
mov
movsb
out
std
or
mov
outsl
in
cmp
sbb
aaa
imul
sub
aam
repnz
rcll
push
stos
int
lahf
out
push
add
int
scas
pop
ffreep
scas
push
packsswb
mov
out
xor
mov
inc
xor
insl
pop
push
cld
cmp
or
or
jp
or
movsb
js
ds
mov
out
xchg
mov
ror
call
pop
jbe
push
fimuls
xor
int3
sbb
ljmp
fadd
fld
je
ja
pop
xchg
into
xor
sbbb
sbb
in
push
xchg
call
cwtl
xor
in
add
dec
fiadds
or
and
aas
enter
mov
lods
jl
test
or
decl
pop
insb
sbb
sub
gs
roll
mov
subl
cmp
mov
pop
sbb
push
push
sbb
cmc
std
iret
hlt
push
pop
sbb
in
sarb
lret
leave
xchg
ljmp
mov
xchg
adc
pop
push
lods
icebp
movsb
push
sbbb
loopne
fdiv
pop
cld
bound
roll
or
dec
cwtl
push
xabort
fisubs
cmp
test
out
pop
add
scas
jo
je
cmpsb
push
inc
sub
cmp
test
stc
dec
test
mov
adc
hlt
test
xchg
aad
jp
sbb
pop
xor
imul
int3
pushf
fadd
mov
xor
mov
push
test
ret
sub
aad
ret
mov
lret
push
clc
dec
xchg
xchg
mov
movsb
push
cmpsl
or
sbb
xor
sbbl
xor
fdivrl
xchg
stc
cld
mov
sub
loop
imul
mov
mov
in
cmp
test
push
lods
es
setns
mov
mov
lret
in
outsb
scas
loope
fcmovnb
mov
test
jmp
pop
add
out
push
xchg
xchg
stos
xlat
xchg
mov
inc
sbb
mov
add
push
jle
pop
popf
sub
ret
xchg
mov
movsl
dec
push
push
cmp
cmp
push
repz
dec
jae
ja
lcall
dec
adc
aaa
fbld
cwtl
in
iret
enter
inc
test
int
or
mov
mov
sub
mov
cmp
das
dec
in
jae
cmp
mov
xor
imull
cmp
insl
pushf
jecxz
mov
sahf
inc
mov
mov
movmskps
repz
xchg
mov
mov
lods
lds
sub
xor
das
pop
aad
ljmp
adcb
arpl
pop
xchg
cmc
push
push
pop
ds
cli
xor
in
lods
ja
mov
mov
int
jnp
mov
pop
mov
mov
cwtl
stos
mov
push
push
mov
enter
xchg
cmpsb
xchg
ret
dec
fcomps
push
mov
sar
jnp
sahf
mov
push
push
jmp
in
lock
lret
sbbb
int
hlt
mov
jge
push
xchg
pop
int3
loop
inc
lahf
mov
mov
sub
ret
addr16
ss
shll
ljmp
iret
leave
sti
mov
pop
jg
arpl
leave
jp
js
xchg
rorb
imul
xchg
inc
xchg
js
aam
mov
jne
test
daa
divb
movsl
adc
and
pusha
cmp
orb
arpl
push
aad
mov
adc
inc
subb
insl
push
mov
xchg
inc
push
mov
mov
mov
xchg
hlt
jmp
fisttps
inc
lret
out
fisttps
scas
mov
push
shl
xorl
jge
pop
mov
sti
out
stc
jb
aad
pop
and
pusha
mov
ss
add
inc
pusha
je
lret
daa
xchg
clc
push
push
jecxz
stos
fildl
sbb
pop
pop
push
jmp
mov
outsl
mov
mov
push
inc
dec
in
inc
in
mov
addb
ret
dec
call
call
call
adc
mov
push
out
jae
imul
dec
addr16
xlat
cwtl
addl
and
mov
sub
pop
test
mov
mov
imul
xor
fadds
in
clc
rcll
or
xchg
ret
mov
shll
das
out
xor
in
pop
pushl
xchg
icebp
aas
cmp
push
in
test
es
adc
sbb
negl
into
mov
cltd
and
push
dec
jmp
sarb
or
ss
xchg
mov
xor
aas
pop
sbb
imul
arpl
mov
xor
jp
xchg
cmp
imul
sub
lcall
add
pop
pusha
pop
mov
gs
add
in
push
adc
popf
mov
jge
push
pop
inc
in
pop
xlat
das
mov
add
pop
sub
repz
cmp
jg
pop
mov
inc
out
rcll
addb
xor
cmp
adc
xchg
sub
mov
cmpsl
out
nop
icebp
mov
xchg
sarb
push
or
xchg
push
jge
andl
subl
fstpl
fcomps
mov
loop
inc
cmp
ret
ret
sar
idiv
mov
cld
jne
arpl
inc
cwtl
cli
push
adc
xchg
lahf
sbb
das
add
xor
push
ret
xchg
fdivr
push
sbb
add
loop
int
outsb
fnstcw
sub
inc
mov
pop
cld
scas
out
dec
loope
adc
inc
data16
dec
mov
rol
ljmp
pop
in
push
mov
inc
jbe
popa
xor
or
jnp
mov
scas
push
ljmp
push
pusha
std
pop
arpl
outsl
mov
addr16
mov
test
or
icebp
jp
adc
sub
jbe
hlt
ficoml
push
jle
ds
shlb
movsl
adc
test
or
in
ficompl
and
hlt
pop
sbb
stos
and
movsl
sti
es
jmp
mov
add
icebp
inc
push
xchg
and
inc
div
movb
gs
fwait
adc
lock
sbb
pop
stc
sub
orl
dec
dec
stos
or
jo
lea
std
mov
nop
ljmp
hlt
divb
imul
out
jno
ljmp
jmp
mov
leave
add
test
loopne
add
lock
mov
loop
cmpsb
jbe
cmp
adc
mov
pushl
popa
mov
jbe
outsl
sbb
add
lcall
inc
cld
or
out
pop
loope
push
pop
xor
popf
sbb
or
loop
ljmp
test
and
das
or
jno
cmp
jle
push
mov
es
scas
push
out
mov
jmp
mov
repz
sti
and
loope
mov
mov
or
test
mov
jp
mov
lret
mov
mov
or
lahf
mov
adc
out
or
imul
inc
cmpl
pop
lea
and
push
ss
or
daa
mov
lods
xor
loopne
jbe
sarl
in
or
add
push
shlb
mov
ss
ja
xor
xor
es
jmp
sbb
mov
js
jo
negb
cmp
in
adc
scas
orb
xor
es
repz
addr16
inc
jp
mov
sub
or
stos
cmpb
fsubs
and
jne
test
xchg
mov
mov
jb
mov
mov
inc
scas
sub
dec
xlat
sub
lock
push
jnp
scas
sub
aas
out
aam
mov
popf
cmpsl
loopne
mov
inc
rorl
inc
sub
cmp
addb
inc
ja
js
out
mov
stc
repnz
jae
push
pop
movsb
ret
cmpsb
ds
cmp
imul
stos
dec
ret
mov
leave
je
hlt
xor
hlt
adc
lods
nop
fwait
scas
sahf
imul
inc
mov
ja
push
push
iret
mov
push
std
pushl
imul
outsb
lahf
adc
push
add
aaa
cltd
adc
shr
stos
movsl
gs
pop
pop
add
popa
xor
pusha
add
inc
and
push
fstps
loope
fcomp
and
xor
mov
jbe
gs
xor
popl
test
lret
out
test
and
mov
mov
test
lods
enter
ret
jb
aas
sbb
pop
ss
or
xchg
push
ret
sub
out
adc
inc
in
push
popf
addb
sbb
lea
xor
push
shl
lds
push
in
dec
aas
in
add
push
xor
jg
ljmp
and
push
inc
ret
sub
mov
xlat
adc
out
clc
mov
mov
push
mov
xchg
ret
testb
mov
cld
inc
jp
pop
push
andl
pop
xchg
inc
pushf
push
gs
fcoml
add
or
lcall
test
outsb
fcomps
movsb
jne
push
insl
clc
sahf
mov
mov
push
jns
xor
fisubrs
or
hlt
ror
out
ljmp
out
mov
daa
incb
inc
cmp
pop
jae
pop
dec
mov
test
inc
sbb
stos
sahf
pop
xchg
lahf
rorl
push
pop
imul
or
xlat
inc
mov
add
push
xor
sbb
stc
mov
stc
adc
mov
ret
jns
mov
outsb
add
fisubs
ds
push
fs
repz
mov
inc
push
das
inc
sbb
sbb
lds
hlt
jecxz
add
mov
add
cmc
push
cmp
add
cmp
out
dec
scas
mov
lret
ljmp
jle
pop
fimull
pop
bound
adc
movsb
push
inc
enter
dec
mov
pop
shlb
add
sahf
and
push
cltd
inc
test
sbb
ret
cmp
shrb
inc
mov
sbb
adc
aaa
out
xchg
dec
adc
mov
xlat
cmp
out
repnz
cld
jl
and
negb
mov
inc
popf
cli
add
mov
xchg
in
xlat
into
xchg
adc
jbe
jge
adcb
cwtl
std
cmp
adc
int3
addb
jle
fisttpl
jg
js
jae
sbb
cmpsb
xor
and
xorl
dec
inc
aas
je
sbb
popa
pop
pop
pop
fs
popf
mov
call
inc
ljmp
sub
sub
popa
xchg
and
mov
pushf
int
mov
lret
xor
repnz
xor
out
xchg
dec
cmp
mov
icebp
and
lcall
add
mov
repz
jne
outsb
push
mov
mov
pop
inc
sub
xchg
adc
sub
inc
mov
and
mov
mov
adc
cmp
out
jp
ss
jmp
sub
add
sub
movsb
inc
jo
dec
mov
cld
arpl
lock
mov
mov
xchg
je
es
and
pop
sbb
data16
jmp
adc
or
or
dec
lret
adc
mov
inc
or
add
sub
adc
scas
test
fdivrl
and
js
nop
mov
xchg
mov
frstor
addb
ds
mov
testl
push
nop
add
and
jmp
xor
ror
pop
add
and
orl
and
jo
inc
push
sub
jp
jmp
lret
add
push
sbb
mov
pop
pop
push
mov
out
stc
in
mov
or
sti
clc
cmpsb
cld
pop
js
cmp
jle
scas
sahf
popa
or
sbb
and
push
daa
adcl
mov
push
call
stos
adc
outsl
jae
mov
aam
roll
lcall
pop
enter
mov
mov
and
pop
ficoms
push
inc
lcall
out
testb
das
lcall
dec
test
inc
mov
push
mov
fsubl
or
or
or
or
or
mov
and
add
jnp
cmp
mov
lock
pop
mov
add
xchg
or
lds
test
lea
adc
add
enter
mov
fsubr
xchg
push
push
push
pop
mov
xor
adc
mov
or
mov
inc
cld
dec
sbb
push
pop
mov
dec
mov
ficoms
xchg
cmp
nop
sarl
mov
jg
daa
adc
push
pop
xchg
icebp
inc
ret
mov
addb
lods
lods
sub
ss
subl
xor
orl
out
mov
gs
mov
xlat
push
fdivrl
fwait
xor
jo
or
push
jmp
mov
mov
push
mov
ljmp
push
lods
das
pop
in
call
xlat
mov
push
fstl
cli
cs
rorb
std
int
incb
and
mov
out
jmp
repnz
std
ror
insb
test
inc
or
and
out
and
out
repz
aas
mul
insb
mov
pop
mov
sbb
cmp
dec
rclb
adc
fildl
int
icebp
cli
lds
in
lahf
enter
sub
jne
ljmp
popf
fs
dec
add
dec
ror
dec
repnz
mov
adc
pop
loop
mov
jg
xchg
nop
jbe
mov
or
sub
jecxz
xchg
pop
pcmpeqw
jp
push
in
ss
addb
xor
fidivl
xchg
je
lea
add
mov
test
fs
std
scas
xchg
imul
push
lret
shrl
and
sbb
call
cli
cltd
lock
jae
sbb
mov
in
fs
jmp
mov
jecxz
fsubrs
popa
push
inc
cmp
mov
div
dec
dec
add
inc
fsub
lcall
jg
push
xchg
out
cmp
pop
mov
mov
fcomps
push
lods
push
ds
dec
frstor
pop
pop
xor
and
fistpl
adc
nop
in
scas
or
cmp
les
xor
push
add
push
pop
add
adc
lcall
dec
in
or
aad
ret
xchg
adc
imul
jo
aas
add
xor
call
inc
or
scas
loope
popf
mov
fldl
in
cmp
push
addl
rorb
inc
aas
push
sahf
adc
dec
rorl
imul
testb
and
sub
gs
jge
jl
or
dec
xor
out
and
std
loope
test
loop
mov
jp
andb
cmp
lock
loopne
mov
cmp
and
movsb
add
sti
mov
mov
mov
dec
xor
mov
imul
sti
out
inc
cmp
push
popa
lret
sub
inc
rorb
mov
pop
push
dec
bound
dec
pop
or
jmp
push
sahf
xor
cmp
scas
call
lahf
dec
mov
cmp
sub
mov
das
or
sub
pusha
out
push
cmp
xchg
dec
mov
mov
sub
es
aam
fcmove
add
and
repnz
sub
stos
cltd
add
pop
or
inc
cmp
out
or
inc
sarl
inc
pop
shlb
adc
fs
jb
add
add
pop
out
dec
mov
movsl
out
pop
notl
cmp
xlat
out
sub
jae
push
test
inc
pusha
mov
cmpsb
iret
sub
lock
jb
scas
and
punpckhdq
jne
inc
shrl
fsubr
and
dec
push
sti
int3
cmpsb
mov
add
sbb
sbb
sbb
enter
adc
punpckhwd
jp
je
icebp
jp
daa
xor
or
cmp
psrld
sbb
push
push
mov
adc
cwtl
movsl
push
sbb
xor
rcrl
xchg
pop
movsl
xchg
pop
xor
aad
movsb
cwtl
add
adc
cs
arpl
mov
fs
sub
cmp
dec
mov
add
xor
adc
pop
loopne
lret
gs
xor
sbb
imulb
jne
inc
std
mov
les
and
into
in
jne
aam
mov
aam
inc
pop
xor
push
cmc
cli
jo
pop
imul
jne
addr16
sbb
es
ss
fimull
test
repz
aad
mov
rolb
andl
cld
mov
cmp
movsl
xor
sahf
data16
outsb
test
cmp
not
xchg
jne
in
mov
ljmp
push
mov
inc
add
xor
sbb
xchg
pusha
jle
jge
or
push
mov
dec
sbbb
cmp
out
xor
out
hlt
fs
xor
inc
and
mov
mov
es
push
movsl
sahf
jae
xchg
inc
mov
cmp
xchg
test
mov
jo,pn
push
adc
jge
aam
push
std
mov
sbb
and
add
movsb
xchg
adcb
jl
pop
cs
inc
sbb
xchg
aaa
ljmp
sbb
lahf
and
scas
dec
and
push
mov
add
ljmp
test
sub
jb
xchg
jle
cli
lret
mov
xchg
loop
jns
rcll
and
pop
inc
cmc
rclb
ret
dec
or
fcmovnbe
fs
pusha
popf
dec
adc
ret
xor
jne
cwtl
int
rorb
dec
mov
fbld
dec
mov
popa
pop
aas
xchg
repz
xchg
dec
push
adc
dec
ficoms
and
pop
les
xor
psubq
cmp
inc
pop
pusha
addr16
inc
mov
push
mov
mov
dec
ficompl
push
cmc
sbb
mov
mov
into
cmp
stc
mov
sub
jl
out
aas
adcb
pop
jp,pn
mov
pop
push
lea
add
movsl
dec
xor
daa
adc
fsubl
cmp
rclb
dec
cld
test
std
std
cmpb
jmp
fisubs
sahf
mov
das
jb
jbe
test
ret
daa
push
out
pop
and
xor
js
push
js
lods
adc
test
mov
cld
sbbb
addb
movsb
stc
inc
xchg
dec
dec
pop
mov
mov
mov
pop
test
and
sbb
lcall
addb
aas
push
pop
sbb
loop
int
cmp
mov
sbb
mov
mov
bound
fistpll
sub
clc
les
xor
cli
dec
mov
idivb
loopne
pop
jp
addr16
popa
lret
lods
insl
pop
pusha
jge
push
dec
ljmp
pop
pop
mov
out
repnz
push
xchg
sub
add
fsubrs
and
and
leave
or
sbb
lock
sub
repnz
daa
mov
cli
mov
push
ds
sub
push
aas
xor
xchg
dec
mov
lret
cmp
call
cmpsb
push
sub
movsl
sbb
loopne
mov
sahf
cli
lock
jecxz
cmp
sbb
pop
push
inc
xchg
lods
andb
test
mov
sub
out
or
cmp
inc
sub
mov
and
cmc
loop
nop
mov
bound
mov
cmp
loopne
mov
dec
addr16
gs
shll
sub
xlat
mov
repz
or
aad
jnp
inc
mov
pop
fincstp
sub
dec
and
loope
cmp
sahf
and
adc
inc
ret
idiv
add
sti
or
mov
out
sbb
leave
test
out
adc
adc
mov
xlat
push
cmpsl
call
mov
inc
ds
sar
dec
pop
ret
cmp
in
imulb
pop
roll
cmp
adc
std
dec
clc
daa
test
inc
aad
mov
mov
sub
call
mov
jmp
xchg
push
add
in
lods
push
fsubr
dec
mov
sahf
jae
xor
cmpsl
and
or
and
xorb
loopne
imul
ds
jg
inc
sbb
xchg
ljmp
pop
subl
sbbl
mov
into
sbb
lds
insb
ja
pop
fnstsw
mov
test
inc
dec
jns
jg
cmp
dec
testl
int3
sysexit
lods
cmp
loop
jmp
iret
lret
xchg
mov
lcall
jne
jne
sbb
add
sahf
pop
filds
sbb
sar
inc
pop
push
jmp
insl
test
fnop
push
mov
mov
pop
xchg
fsubs
mov
mov
adc
add
inc
stc
xchg
or
movsb
push
adc
je
dec
int3
dec
cltd
sahf
ds
into
sbb
xchg
xor
mov
push
sub
lods
jno
xchg
jmp
mov
loopne
popf
lds
pop
test
rolb
rcrb
mov
cli
cs
xchg
and
jl
or
fildl
test
mov
or
popf
ljmp
or
pop
jmp
and
movsb
cmpsl
and
popf
es
mov
jne
out
lock
pop
fistl
inc
int3
sub
fstps
xlat
sub
pushf
and
pop
or
lcall
les
and
xor
dec
enter
std
push
cs
push
xchg
mov
add
cmp
leave
push
popf
and
ror
repnz
movsb
leave
rclb
inc
dec
mov
pop
mov
aam
jae
jne
cmp
pop
pushf
inc
rorl
scas
or
ret
lahf
daa
push
mov
aaa
loope
std
sbb
mov
arpl
aaa
xor
xlat
repnz
xor
mov
cmp
fdivrl
leave
sbb
inc
aad
insl
into
mov
out
push
fsubl
addb
mov
roll
lret
or
ret
and
adc
cmp
ds
mov
push
jle
sbb
inc
pop
rcr
sbb
dec
pop
test
or
pop
das
sbb
push
cmp
inc
sbb
arpl
ja
stos
icebp
xchg
imul
push
push
push
jmp
rol
mov
or
push
adc
jge
movsl
mov
cmc
repz
sub
push
xlat
fst
push
rolb
orb
jl
xor
jnp
shl
and
adc
shlb
das
push
cwtl
out
inc
add
jno
mov
cmp
sbb
das
push
xor
enter
push
stc
fimuls
jnp
push
cmp
cmc
adc
push
jo
push
inc
out
fiaddl
repz
es
pop
inc
push
xlat
cmc
push
mov
xorl
xchg
xchg
jmp
insl
dec
push
sbb
std
outsb
and
mov
js
jl
sahf
inc
adc
dec
sbb
dec
outsl
stos
mov
mov
jg
imul
jecxz
mov
fxch
xchg
mov
nop
cmp
mov
mov
mov
xchg
mov
dec
stos
jecxz
testb
ficoml
addl
mov
in
cmp
decb
mov
add
fsts
dec
rclb
pop
jmp
mov
mov
pop
movsb
push
add
stos
icebp
cltd
cmc
adc
icebp
pop
pop
or
lea
push
mov
jo
adc
inc
lods
mov
mov
cmpsb
test
inc
mov
ja
faddl
xchg
push
popf
sbb
gs
in
jno
dec
pop
mov
xor
pusha
inc
lock
popf
mov
add
mul
shl
mov
mov
sbbl
dec
cs
push
addr16
test
xor
test
sti
mov
prefetcht2
inc
sbb
jmp
js
mov
xchg
fiaddl
repz
inc
jmp
push
mov
lock
push
hlt
jecxz
push
push
scas
pop
adc
xor
insl
leave
lods
aam
xor
loopne
jno
cmc
sub
faddl
add
fdivrs
adc
in
push
xor
pop
xchg
shll
xor
sbb
xor
out
pushf
xor
or
jl
cmp
add
mov
inc
or
mov
and
subl
sbb
jbe
push
iret
aaa
ss
fmull
or
lret
das
inc
imul
rclb
push
jae
jge
inc
sbb
jns
inc
sub
inc
filds
lret
inc
js
in
dec
push
jns
xor
mov
rorb
push
adc
push
adc
sub
stos
dec
adc
inc
xchg
jno
jne
jle
adc
cs
push
xor
pop
dec
jno
pop
push
lahf
xchg
pop
test
add
mov
js
cld
adc
pop
outsl
inc
jns
mov
out
outsl
outsb
mov
dec
lret
pop
cmp
xor
pop
push
repnz
dec
inc
inc
mov
negb
cmc
out
xor
out
repnz
jp
mov
rclb
mov
stos
sahf
mov
leave
mov
fldt
into
stc
sbb
mov
inc
aam
or
cmp
fdivrl
test
mov
hlt
add
cmc
xlat
mov
arpl
outsb
mov
pop
in
test
stc
das
dec
in
xor
cmc
dec
mov
jge
shll
rcrb
dec
fstps
push
arpl
xor
jg
push
sbb
mov
cmp
lea
xchg
xchg
ror
cli
scas
es
aaa
jl
pop
mov
leave
add
dec
out
lock
xlat
sub
add
aaa
aad
rcl
push
sub
cli
les
xor
repnz
sub
push
iret
insl
mov
ud1
cmp
shlb
cmp
inc
push
cwtl
jmp
das
inc
fwait
and
mov
xchg
les
cmp
xchg
ret
adc
xchg
add
cmpb
inc
stos
dec
jnp
cmp
mul
and
loopne
ds
loope
xchg
iret
sub
arpl
mov
mov
cmp
lods
pop
dec
insl
inc
movsb
incl
add
mov
std
cli
loop
xchg
sarl
fisubl
cmp
cs
mov
lret
std
jbe
shll
sub
or
movsl
sub
adc
cmp
mov
pop
in
xor
and
adc
sbb
sbb
sub
cmp
and
mov
jmp
test
inc
filds
loop,pn
and
pop
and
add
or
mov
cmp
ja
xchg
dec
mov
jb
dec
fiaddl
sbb
jbe
dec
shlb
jno
dec
cli
pop
xchg
inc
push
sbb
cs
shrb
lds
jo
sbb
iret
sbb
ret
popa
xor
out
popa
icebp
stos
jno
xchg
sbb
in
lds
jp
mov
push
movsl
dec
in
ds
aad
xchg
mov
jmp
xor
cmpsb
xchg
jg
subb
dec
sub
pop
xbegin
fnstenv
punpckldq
shll
aad
or
std
push
xchg
scas
jle
mov
imul
jg
iret
test
enter
mov
movsl
dec
jne
nop
lret
pop
jnp
push
call
out
or
stos
xchg
aam
cwtl
es
cmc
das
lret
cmc
xor
push
pop
cltd
adc
mov
loopne
push
test
cmp
xchg
loop
xchg
js
repz
or
aaa
ss
add
fbld
xlat
mov
fimuls
icebp
cmp
dec
ficoms
cmc
mov
sub
shll
loop
jp
test
xor
in
push
xchg
jne
cmp
es
test
add
sarb
xchg
xchg
jmp
add
inc
mov
mov
notl
or
rclb
cmp
test
fwait
bound
or
cmp
sub
jg
dec
sarb
mov
xchg
mov
pop
imul
mov
and
add
push
and
pop
in
jmp
and
pushf
dec
jl
dec
cmp
add
shll
mov
jns
aas
rol
movsb
sbb
cmp
push
lock
xchg
nop
lret
mov
dec
dec
mov
and
mov
mov
xorb
mov
push
xchg
ljmp
xor
dec
cmp
jmp
xor
stc
and
arpl
inc
imul
rclb
sbb
or
xchg
in
filds
stos
je
push
sahf
push
jo
pop
pop
dec
pop
iret
fistps
adc
pop
fsubl
jo
mov
pusha
cltd
sub
xor
ljmp
les
xchg
mov
faddl
mov
mov
push
arpl
adc
aad
push
sub
dec
pop
inc
xlat
push
mov
mov
jg
sbb
in
add
mov
mov
aaa
sub
jl
mov
dec
ss
icebp
aad
test
lahf
push
jg
stos
sti
jmp
adc
cmc
jge
cmp
xchg
mov
xor
adc
ljmp
rcrb
movsl
inc
jp
cmc
lods
cmc
inc
mov
mov
sbb
cwtl
mov
mov
test
mov
and
aad
xchg
int3
jb
mov
test
cmp
dec
lods
js
lock
and
cmp
pop
sbb
sub
sub
mov
sbb
fadds
stos
arpl
out
dec
into
pop
xlat
fdivs
cmp
xor
daa
sbb
in
outsb
adc
push
jne
add
out
xchg
shr
jecxz
mov
sbb
mov
loopne
nop
sub
rolb
test
daa
insl
xadd
pop
push
lock
scas
sbb
sti
fsts
xchg
scas
inc
std
or
dec
push
and
pop
lcall
stos
pushf
or
mov
cmova
fsubl
ret
sub
xor
pop
arpl
cmp
gs
sahf
ljmp
push
hlt
scas
ds
jle
nopl
into
or
shrl
repz
xor
outsl
xchg
test
pop
cmpsl
lds
add
mov
push
ret
fcmove
push
adc
lock
jno
test
les
pop
inc
sbb
sub
pusha
inc
addr16
imul
mov
test
mov
mov
add
jbe
inc
xchg
lock
push
jo
iret
xchg
pop
push
dec
inc
adc
imul
shlb
clc
sbb
inc
mov
popf
inc
imul
rorb
cld
pop
in
das
push
sub
adc
leave
shll
sbb
sbb
sub
ss
mov
inc
mov
fdivrl
pop
loop
adc
clc
xchg
adc
sub
sahf
jns
dec
ss
xlat
js
sbb
ja
test
in
cmp
sbb
sbb
add
std
jg
sbb
mov
sbb
sub
aas
jle
xchg
lahf
repz
std
adc
dec
call
mov
and
adc
mov
call
sti
xor
cmp
jb
pop
adc
inc
add
and
test
jecxz
dec
dec
push
jecxz
cli
push
jg
push
pop
jmp
mov
push
notl
fs
adc
mov
shl
negl
lcall
xchg
xor
loope
shrb
testl
movsb
mov
inc
pop
xor
out
mov
adc
dec
iret
aad
imul
add
cmp
addr16
pop
test
jmp
mov
enter
sbb
cmp
adc
loope
xchg
adc
scas
xchg
in
dec
inc
cmc
push
add
std
rclb
lahf
push
fs
shr
scas
or
push
mov
inc
ret
dec
add
addb
pop
cmp
sub
add
test
mov
xchg
or
sti
adc
aaa
les
add
inc
cmp
repz
push
lods
mov
inc
les
ss
mov
sub
mov
ret
aas
ss
push
in
xchg
ret
ljmp
lret
dec
jo
adc
dec
mov
mov
mov
sbb
jo
sbb
xor
sbb
xor
dec
dec
mov
pop
xchg
xchg
movsl
aad
fildl
adc
lret
cltd
mov
ret
pop
push
fwait
std
adc
add
dec
gs
pushf
cld
es
xchg
fidivs
nop
jmp
aas
loope
imul
repnz
jno
movd
leave
mov
inc
mov
jae
popf
push
inc
adc
fisubrl
fimull
sub
arpl
nop
add
imul
push
les
xchg
pop
xor
mov
jb
cld
or
mov
scas
sbb
stos
sbb
xor
xor
mov
fidivrs
lods
movsb
cmp
stos
pushf
fmul
lods
je
sub
cmp
add
cmp
adc
in
in
test
cmpsl
enter
inc
les
push
cmp
scas
repnz
mov
cwtl
pop
psrad
mov
test
sub
movsb
movsb
repnz
cmpl
add
out
xlat
push
and
ja
push
sar
ds
cmp
outsl
ficomps
sbb
aaa
push
jnp
jl
mov
push
out
arpl
sbb
mov
push
enter
and
orl
jnp
js
fnstsw
xchg
push
and
push
scas
xor
jne
xchg
int3
or
xchg
xor
jb
fdivrl
or
icebp
mov
and
pop
and
ret
cld
in
xchg
inc
and
inc
repz
jl
mov
das
shrb
leave
loop
cltd
sti
jg
pop
outsb
movsb
lods
in
mov
sbb
aaa
outsl
and
push
pop
pop
movsl
imul
dec
add
inc
loope
fwait
add
shlb
ja
xor
ja
or
scas
data16
cmpsl
test
xchg
pop
pop
xor
jp
test
fcom
ds
call
fwait
cmp
aas
aas
mov
add
or
int
mov
mov
push
pop
jle
mov
mov
mov
call
inc
mov
xorl
mov
sub
and
loop
subl
lret
xor
add
jp
or
jae
dec
ljmp
xchg
mov
lahf
pop
pop
into
lds
lret
jmp
xchg
fsubr
jae
shlb
pop
fxam
mov
push
and
shlb
nop
cmp
dec
int3
push
cld
and
nop
jbe
mov
adc
sbb
push
sbb
jle
adc
jmp
repz
jns
mov
daa
push
movsl
out
icebp
or
std
jecxz
cld
xchg
cwtl
cmp
gs
or
lcall
pop
lea
popa
fstpt
jb
inc
add
mov
iret
mov
push
push
add
movsl
mov
inc
fsubl
loop
push
repnz
in
lcall
jmp
add
sbb
dec
or
jp
addr16
pushf
add
lret
insb
xchg
sub
cmpb
loop
pusha
push
mov
out
repz
cmp
add
mov
lea
sbb
push
xlat
jge
adc
in
lea
ss
stc
xchg
aad
inc
pusha
iret
mov
mov
inc
jo
inc
nop
pop
pop
inc
subb
pop
adc
aas
sbb
dec
shll
mov
xchg
movsb
or
jo
add
cmpsb
sub
adc
fwait
xor
add
arpl
scas
sbb
mov
inc
xchg
jp
inc
ret
outsb
mov
rorb
fxch
idiv
sub
push
movsb
out
sbb
push
stos
pop
pop
das
rcr
xlat
dec
testl
and
lcall
fdivs
enter
pop
or
fsubrl
aad
xchg
rclb
ds
jmp
mov
out
add
repz
je
sub
shll
cmp
les
shr
in
loope
xchg
sti
je
add
addr16
sti
adcl
js
jg
repnz
add
fisubrl
out
scas
xor
js
cmp
add
jge
jl
sub
push
mov
arpl
push
je
aas
outsb
sub
imul
aad
jg
add
adc
adc
aaa
and
jle
pop
inc
mov
dec
addr16
ds
gs
jecxz
mov
ljmp
ljmp
and
cwtl
mov
mov
dec
imul
shl
sub
rcrl
outsl
add
add
daa
aam
lahf
inc
adc
xchg
sbb
push
std
cmpsl
jge
inc
adc
pusha
lret
mov
les
into
and
mov
adc
add
pop
fisubs
in
add
pop
test
pop
inc
xor
jbe
mov
add
dec
aad
ret
mov
filds
xchg
pavgb
pop
and
out
mov
cld
loop
mov
shll
push
aad
xchg
stos
aas
cs
mov
sbb
push
fsubs
adc
mulb
lret
loop
mov
aad
imul
sub
into
test
mov
loope
scas
pop
mov
xlat
int
movl
loop
sub
xchg
inc
jbe
and
into
mov
outsb
jbe
adc
mov
push
je
sub
add
jne
ljmp
orl
sbb
push
push
mov
mov
add
jmp
mov
sarl
sub
repz
aam
inc
jl
cs
mov
popa
push
xchg
pop
jnp
and
imulb
test
int3
push
call
shlb
mov
aad
fnsetpm(287
lock
subb
test
mov
in
pop
push
pop
dec
cli
out
sahf
into
stc
push
sahf
scas
loope
daa
aam
fdivrl
call
mov
or
sub
das
hlt
adc
jne
pop
sbb
push
icebp
filds
mov
daa
xor
inc
cmp
adc
aam
in
and
loope
mov
scas
fidivrl
sbb
pop
xor
ljmp
clc
lea
mov
push
pop
inc
mov
lock
xor
fdivl
jb
pop
sub
cld
addr16
and
xchg
adc
push
loope
js
mov
cmp
leave
mov
push
pop
adc
fsave
or
adc
mov
aas
lret
push
lods
and
mov
jmp
popa
out
rcr
in
push
aam
lahf
into
je
pop
or
popa
hlt
shll
sbb
cltd
mov
arpl
add
outsb
cmp
test
fimull
pop
mov
arpl
cltd
mov
sti
mov
sbb
or
inc
pop
jge
testl
movsb
inc
sbb
rcll
jbe
lds
out
xor
cmp
and
bound
notl
push
movsb
and
adc
cmp
loope
incl
inc
xchg
mov
ds
sahf
lock
clc
cmc
shlb
lar
mov
push
jle
fwait
lock
inc
add
jmp
push
shlb
bound
jmp
decl
mov
mov
out
notl
mov
mov
pusha
and
addr16
xchg
sub
xor
vmovq
popa
mov
sbb
mov
rorb
shll
loop
dec
jle
or
mov
inc
jno
dec
sbb
sbbl
push
outsl
mov
cli
xor
push
pop
adc
test
inc
xor
loope
loopne
loopne
inc
inc
fisubl
int3
scas
mov
mov
scas
aad
or
hlt
int
in
repnz
pop
testb
jmp
call
mov
cmp
adc
push
or
bound
fistps
sbb
sub
fwait
fwait
popa
mov
and
insl
enter
xchg
loopne,pt
add
popa
imul
idivl
jecxz
orb
jno
hlt
loopne
dec
lret
sbb
mov
rcll
xchg
mov
mov
xor
push
pop
movsl
imul
std
fcomp
push
add
jmp
jae
dec
jnp
mov
daa
pop
mov
adc
cmc
dec
std
mov
out
sub
adc
jecxz
fidivrs
dec
jle
fsubp
in
jae
sbb
fists
jns
nop
cltd
sub
fisubs
xchg
cmp
aas
int
shll
shlb
daa
lea
inc
add
push
jns
mov
sub
sub
inc
test
dec
jae
std
xchg
xor
repnz
loop
aad
movsl
loopne
je
xchg
push
fists
test
arpl
xchg
rcrl
orl
adcl
lcall
std
mov
xchg
stc
mov
cmp
xchg
xlat
pop
fstpl
pop
iret
jle
jnp
add
dec
pop
jmp
mov
rol
cmp
lds
cli
mov
lock
mov
dec
js
loop
adc
pop
sti
popa
inc
fnsave
lcall
outsl
and
std
cli
imul
mov
fs
cli
lods
divb
adc
push
dec
xchg
cmp
xor
cli
lret
jp
sub
imul
mov
mov
out
fdivr
push
inc
inc
test
mov
adc
loope
xchg
sarl
ret
mov
std
clc
cmc
xchg
fdivl
push
enter
pop
je
mov
stos
sub
lds
adc
loope
je
inc
or
or
bound
mov
xor
mov
call
jbe
mov
and
shrb
pusha
xor
shlb
inc
inc
push
into
xor
std
idiv
inc
pop
adc
add
rcrb
daa
and
pop
jl
out
bound
sbb
fs
and
and
pop
lret
mov
sub
das
mov
cmp
incl
cmp
dec
pop
mov
pop
push
int
add
mov
insb
mov
xchg
push
adc
mov
fs
popa
clc
mov
lret
jge
or
sbb
jl
jmp
xchg
sub
push
sub
push
enter
incb
cmp
mov
jl
sub
xor
ljmp
cmc
push
sub
mov
pop
xor
mov
mov
ljmp
dec
jecxz
ds
cld
or
and
inc
mov
xor
es
mov
pop
ret
push
adc
jnp
dec
mov
aaa
push
rol
fisubs
inc
mov
xor
repz
sbb
popf
ja
pop
dec
mov
pop
shr
movsb
mov
push
inc
negl
sbb
mov
pop
adc
out
lahf
pop
pop
ss
adc
and
fildll
mull
clc
rcll
cmpsb
hlt
sbb
mov
sahf
jecxz
xlat
testl
push
inc
xchg
and
mov
push
push
test
dec
ror
xchg
inc
inc
add
push
push
xor
adc
cld
push
cmp
or
cmp
pop
mov
fdivl
in
pop
lret
mov
pop
push
sti
les
ds
dec
mov
dec
test
popf
cmp
mov
cli
sti
loopne
loope
js
xchg
add
ja
filds
idiv
cmpsl
push
mov
push
mov
ss
lods
xchg
xchg
and
cmp
stc
lret
push
mov
cmp
inc
int3
push
sbb
sti
arpl
mov
outsb
or
out
xor
nop
adc
fmuls
pop
jbe
add
cmp
adc
push
cmp
sub
je
cmp
fimuls
std
adc
sbb
loopne
add
dec
test
daa
mov
vmovntps
scas
adc
stc
xchg
loope
cwtl
mov
lret
mov
push
pop
mov
cli
mov
mov
movsl
or
mov
arpl
es
cmc
icebp
pop
fistpll
decb
xor
in
pop
jmp
cmpsl
push
sub
popf
andb
fadds
xor
lret
aam
xor
out
in
adc
sbb
shrl
cmp
hlt
mov
push
add
aaa
in
push
andb
sbb
xor
icebp
fists
iret
and
mov
mov
fcomip
jge
fscale
push
pop
mov
or
movl
mov
cmc
lahf
imul
mov
adc
or
sahf
inc
jo
pop
not
cwtl
stos
sti
push
xor
stos
in
push
pop
adc
rcll
test
cmc
or
repnz
scas
test
outsl
rcll
add
mov
dec
fnstsw
cwtl
cmp
inc
mov
sbb
mov
out
inc
iret
jl
imul
xchg
sub
push
fwait
push
movl
inc
pop
pop
lret
jo
xor
sub
xchg
sbb
push
cld
pop
cli
pop
iret
mov
and
dec
insb
inc
pushf
add
lcall
fstl
cld
popf
data16
push
js
mov
dec
and
xchg
xchg
jl
inc
std
sub
popa
daa
jg
xchg
addr16
pop
nop
js
inc
cmpb
dec
popf
in
pop
cmp
or
inc
add
or
movsl
es
cmp
repz
int
mov
lds
and
push
and
loope
jmp
repz
aam
mov
pushf
xor
lds
out
sub
mov
jb
add
xchg
out
loopne
lock
xor
nop
out
mov
out
mov
jns
adc
adc
sub
ss
adc
inc
stos
mov
jbe
dec
or
or
xor
jp
enter
xor
and
xchg
mov
sub
je
mov
lret
mov
xchg
inc
call
xchg
sbb
pop
push
adc
arpl
int
or
rcr
add
stc
inc
or
mov
sub
daa
cwtl
movsl
jge
or
mov
movsb
add
xchg
test
repnz
lret
xor
pushf
lock
fldenv
and
or
movsl
shrb
scas
xorl
push
mov
push
fstpt
bound
pop
sbb
rcrb
unpckhps
insl
sbb
fwait
dec
out
and
add
call
frstor
out
mov
leave
movsb
ret
adc
cld
enter
addr16
int
and
xor
sarb
add
or
mov
jmp
sbb
data16
xchg
inc
addr16
mov
pop
int3
hlt
sub
bnd
sbb
sbb
call
mov
aas
je
and
sbb
push
enter
cwtl
xchg
or
push
cmp
sahf
in
dec
xlat
xchg
ljmp
pop
inc
or
mov
insb
jnp
pusha
rclb
push
mov
fcompl
ja
push
pop
adc
and
or
jae
nop
mov
adc
divl
lock
in
push
xor
shrb
cld
dec
add
scas
cmp
add
jmp
ljmp
pop
lods
js
cmp
dec
sub
addr16
test
pop
xlat
push
subl
pusha
shlb
pop
daa
aam
lods
aad
inc
mov
jmp
pop
iret
pop
inc
pushf
cld
xchg
jbe
mov
mov
icebp
in
mulb
cmp
int
daa
mov
dec
xchg
jnp
bound
pusha
aaa
mov
and
mov
ficoms
mov
adc
call
ljmp
pop
movsb
sti
dec
xchg
loope
push
lods
mov
xorb
aad
dec
icebp
and
mov
loopne
add
jg
test
push
jbe
stos
ret
xor
pusha
sbb
sbb
jb
jne
dec
shll
icebp
out
add
movsl
insb
mov
in
and
imul
cmp
add
adc
lcall
mov
add
xorb
mov
aad
and
pop
or
pop
pop
mov
decl
xchg
push
adc
sub
ret
imulb
mov
sbb
adc
sub
stos
bound
negb
push
scas
fists
les
stos
cmp
loopne
jo
or
pusha
xor
cmc
roll
mov
push
es
push
fs
pop
and
sti
xchg
cmpsl
out
push
into
scas
sbb
testl
adcb
int
push
in
fcomps
cmpsb
and
sbb
jbe
xchg
xor
cmp
mov
mov
or
push
or
mov
push
mov
push
and
mov
imul
lahf
test
cmpb
in
leavew
int3
in
lea
in
cmp
repz
sub
adc
jae
bound
dec
mov
add
subb
pushf
into
cmp
idivb
jbe
outsb
sub
cltd
and
mov
loopne
in
mov
daa
add
fwait
sarl
push
mov
inc
dec
cmp
rcl
and
popl
es
jb
imul
aas
jg
push
pop
mov
fucomi
jb
cmp
mov
orl
pop
icebp
movsl
ret
icebp
xchg
mov
mov
mov
mov
daa
je
mov
cmpsb
rcrb
pop
or
repnz
bound
sahf
pop
in
pop
push
xchg
xchg
mov
fwait
jbe
icebp
ds
and
ljmp
cli
loop
sub
hlt
jg
insb
sbbl
arpl
ds
in
and
pop
xchg
bound
int
mov
add
testb
cmpsb
movq
cltd
push
pop
and
leavew
ljmp
fmul
or
jecxz
mov
enter
jbe
ss
xor
mov
cmovns
shll
testb
mov
aam
push
fwait
jae
repnz
js
mov
shl
jg
pusha
jecxz
xchg
mov
inc
movsl
mov
pushf
mov
jl
insb
mov
repnz
pop
sbb
in
jl
add
cmp
mov
mov
repz
cmp
sub
xchg
mov
aad
mov
popf
xor
sbb
cltd
push
mov
push
pop
xchg
movsb
dec
inc
push
push
mov
ljmp
imul
push
rorb
out
xor
pop
out
stos
cmpsl
cmp
arpl
arpl
jo
jb
in
popf
icebp
push
test
fcomps
mov
cmp
jecxz
pop
cmpsb
sub
jno
mov
adc
out
mov
jg
imul
pop
push
imul
mov
mov
push
sbb
std
das
aam
inc
and
fwait
xlat
movsb
jo
int3
pop
or
mov
mov
push
mov
or
mov
stos
fwait
adc
jae
std
stos
mov
data16
gs
popa
filds
rorl
dec
pop
lret
stos
jge
sub
sub
and
jle
ret
lret
insl
cltd
popf
imul
lds
dec
icebp
add
inc
mov
cltd
mov
pop
bound
jnp
and
data16
lds
sahf
lcall
mov
addr16
int3
repz
les
dec
adc
mov
cmpsb
push
jbe
pop
dec
lds
pop
fwait
out
loope
std
add
mov
xor
xor
icebp
inc
adc
and
pusha
gs
or
xchg
les
push
xor
xchg
xor
dec
ret
dec
jge
push
push
lds
push
scas
ret
repz
outsl
iret
pushf
mov
xlat
push
data16
lock
test
mov
xchg
sub
jp
cmc
add
int
lea
jno
roll
inc
sbb
aas
add
mov
call
inc
push
pop
arpl
push
sahf
adc
ljmp
mov
jp
or
jmp
lahf
xchg
testl
cwtl
cmpsl
xor
lcall
pop
inc
cmpb
iret
xor
xlat
xor
into
cmpsb
mov
mov
popf
pop
adc
adc
jp
shrb
push
ret
stos
roll
outsl
xor
sti
sbb
pop
push
scas
in
sbb
movsb
and
cld
xorl
movsl
ret
test
aam
fwait
mov
ret
test
push
cmp
lahf
jl
sub
subb
lret
enter
lcall
fld
jbe
xor
clc
xchg
dec
dec
js
xchg
dec
cmp
cmp
xchg
mov
out
in
test
jb
xor
push
mov
mov
lock
mov
mov
add
pop
ds
scas
mov
pop
push
mov
add
loope
jp
and
fcomip
lods
int3
shrw
mov
fwait
jle
dec
sbb
or
push
icebp
add
pop
xor
ljmp
out
stc
incb
mov
inc
in
loopne
repnz
loope
inc
or
dec
es
add
imul
loop
mov
clc
jecxz
adc
xchg
sarb
popa
rolb
jnp
push
or
lret
ja
mov
mov
xor
inc
mov
mov
push
pop
pop
int3
fists
xor
jns
jmp
inc
das
mov
popf
shll
test
sub
loopne
push
and
sub
out
or
dec
cmpsb
jne
sub
jmp
push
inc
hlt
lea
fwait
jnp
mov
cmp
push
pusha
push
cmp
mov
dec
xchg
les
gs
inc
cmp
lock
in
popf
xor
xor
mov
shrw
mov
xchg
sbbw
jne
mov
cwtl
shrb
fnstenvs
pop
cmp
adc
js
sarl
lcall
in
jbe
sub
xchg
mov
dec
add
lret
aad
add
movsb
xlat
mov
xor
inc
jge
fxch
and
push
xor
or
pslld
mov
mov
or
add
outsl
movsb
adc
aas
dec
dec
leave
mov
negl
insb
pop
xor
arpl
rcrb
mov
add
lahf
xchg
rol
inc
into
xorl
ret
jne
jp
pop
or
jne,pt
cvtps2pd
lahf
dec
mov
cmp
mov
test
mov
adc
aaa
int3
pop
push
pop
insl
aam
adc
mov
pusha
lds
clc
xchg
fistpl
loope
push
or
add
xor
mov
dec
sub
mov
sbb
jecxz
leave
mov
push
pushf
lods
mov
inc
in
int3
cmp
add
and
sbb
xor
stos
add
mov
xor
stos
mov
jmp
and
mov
xlat
sbb
add
push
filds
pushf
out
and
cwtl
insb
xchg
push
and
mov
jae
in
mov
in
sbb
out
test
mov
add
sbb
lret
das
cwtl
insl
lds
push
aas
and
adc
out
scas
lret
jnp
dec
push
sahf
cmpl
scas
jns
fnstsw
hlt
in
sub
push
or
out
cli
imul
adc
cli
cmp
cmpb
xor
cs
lahf
pop
pop
jbe
repnz
xchg
stos
iret
and
movsb
jno
pop
mov
cmp
popf
xor
in
add
add
hlt
adc
mov
jle
cmp
mov
mov
loop
sub
pushf
cli
dec
iret
mov
mov
pop
dec
clc
lock
call
jae
add
or
mov
fisubrs
test
lea
xor
sahf
mov
out
sub
lods
cmpsb
sub
or
hlt
ljmp
cmpb
sub
xchg
loopne
aad
add
push
jge
pop
sub
aas
aaa
push
lea
jae
xlat
cld
adc
iret
mov
ret
pop
dec
pop
sub
es
jbe
fisttpl
cld
xor
repz
mov
js
add
sub
xchg
cltd
and
jp
dec
iret
mov
jbe
inc
push
xchg
dec
pop
sub
pop
sbb
leave
lret
pop
out
js
pusha
adc
stos
sbbb
ljmp
iret
xor
dec
sbb
icebp
mov
nop
and
sub
inc
je
sub
movsb
and
mov
jmp
mov
mov
add
test
dec
adc
jno
aas
fs
movsl
out
mov
rcll
pop
pop
loop
jge
or
jmp
or
ret
pusha
adc
hlt
pop
adc
stos
out
in
sub
jo
push
ffree
leave
imul
mov
mov
out
lahf
lcall
jnp
add
jecxz
dec
jg
xchg
xor
imul
xchg
sbb
in
push
cmp
pop
and
lret
iret
fiadds
cld
push
xor
clc
fcomps
inc
iret
das
inc
or
fucomp
jmp
push
lds
es
inc
fsts
xchg
aas
ret
mov
sbb
sub
pop
popa
sbb
out
xchg
sub
andb
inc
insl
cmp
int3
inc
gs
or
repnz
aam
sub
outsl
push
pusha
pop
popa
xchg
or
push
xlat
pusha
imull
repnz
fbld
cs
adc
and
pop
idiv
inc
sbb
ds
lahf
xor
jnp
out
pop
vhaddpd
mov
push
and
and
inc
jb
sub
inc
icebp
fnstsw
mov
cwtl
ds
test
pop
cltd
add
sahf
fstps
movl
out
jmp
mov
outsb
cmp
push
shrl
decl
stos
xor
mov
adc
cmp
mov
push
sub
mov
pop
rcrb
mov
sbb
pop
cmp
adc
jl
dec
insb
in
mov
clc
rol
std
pop
ljmp
mov
mov
imul
pop
out
mov
cmp
jl
and
in
int
xor
fisttpll
dec
in
in
pop
xchg
xor
inc
mov
push
mov
xchg
sbbl
clc
push
ret
leave
sbb
sbbl
pop
ret
xor
lods
outsl
jb,pt
adc
cmp
adc
jnp
push
cld
lods
subb
mov
push
in
lcall
es
push
sahf
mov
ja
imul
jle
aaa
aam
in
leave
pop
imul
mov
movsb
and
jns
inc
jmp
mov
fidivrs
out
push
cmp
jmp
pop
xchg
and
push
popa
shlb
add
ret
pop
xor
ds
add
dec
cmp
mov
int
mov
repnz
sbb
pushf
push
mov
sbb
outsl
push
xchg
pop
cltd
not
nop
outsl
iret
test
push
in
sbb
pop
sub
repnz
xchg
dec
jbe
test
jp
push
insl
pusha
cmp
inc
enter
imul
or
mov
mov
adc
frstor
addr16
pop
push
stc
aaa
push
pushf
sbb
mov
xchg
filds
out
add
sbb
sbb
in
dec
jl
test
clc
add
cmp
test
iret
mov
outsb
inc
adc
pop
lods
inc
adc
dec
lahf
dec
cwtl
loopne
out
xchg
sub
inc
ljmp
add
add
pop
or
cwtl
rcrb
mov
dec
pop
rcll
xor
push
int3
push
call
sub
mov
cwtl
push
in
lods
or
ret
xchg
mov
push
sbb
pop
movsl
cs
jb
mov
ret
lock
pop
sti
mov
push
mov
movb
cmp
push
cmp
mov
push
scas
push
and
fwait
xchg
or
pop
mov
fists
push
iret
sub
cmpsb
jne
mov
sbb
cmc
xchg
in
mov
or
mov
repnz
int
adc
push
mov
repz
mov
push
movsl
mov
in
sbb
hlt
sub
arpl
fildl
mov
mov
or
sub
stos
jnp
lods
xchg
mov
sub
les
or
out
inc
cmp
aam
subl
in
or
jo
test
xchg
movsl
fnstenv
push
pusha
jbe
addr16
and
pop
mov
push
pop
pop
xlat
daa
fldenv
addr16
mov
pop
mov
loope
and
jnp
mov
lds
mov
xor
mov
repnz
hlt
shll
in
mov
loop
stc
sbbl
sahf
movl
mov
andl
cmpsl
pop
rcll
pop
inc
les
pop
sbbb
xchg
lret
imul
mov
imul
aad
fdiv
lahf
add
pop
shrl
dec
out
mov
pop
xor
push
cmp
mov
mov
push
xchg
add
cmpsb
mov
mov
sar
cwtl
add
cmp
in
push
test
and
and
stos
cmp
gs
gs
xlat
mov
sbb
jne
inc
lret
push
sti
cmc
es
xor
outsl
lock
cmp
in
dec
pop
addr16
push
xorb
cltd
sahf
push
popa
mov
es
incb
test
mov
xlat
xchg
mov
mov
lcall
nop
fildl
arpl
mov
ss
repz
ret
test
mov
ret
push
sbb
xchg
mov
lahf
scas
mov
xchg
das
fnsave
cmp
push
mov
dec
mov
push
movsb
cmp
dec
sbb
xchg
sbb
enter
push
cmp
push
jge
push
out
fwait
cli
mov
jecxz
pop
sahf
or
adc
pop
ret
xlat
fs
sbb
sub
adcb
sbb
jno
xchg
dec
jmp
mov
sub
es
pop
incb
in
aas
jl
mov
gs
fstp
outsb
es
and
cwtl
jbe
inc
mov
frstor
pop
repz
dec
pop
push
fscale
dec
das
das
jg
xchg
popf
repz
mov
mov
hlt
mov
mov
xchg
jp
pop
add
cli
sbb
mov
sahf
push
aam
pop
xor
gs
xorb
das
sbb
je
sti
pop
js
lods
pop
xchg
outsl
add
loope
jle
out
in
cmp
imul
jl
inc
jno
mov
xor
sub
repz
dec
push
insl
cmpsl
jp
push
out
incb
fsubl
popf
popf
push
xor
jns
test
sub
add
sub
scas
fcoml
mov
pop
push
push
adc
in
sbb
mov
mov
cmp
in
inc
loopne
jge
add
mov
std
push
popf
fmul
jb
jno
add
cmc
data16
cmp
mov
push
push
xor
lock
jmp
and
repz
mov
cmp
lods
cmp
shlb
add
or
and
pop
cwtl
cli
adc
sbb
push
inc
xor
stos
pop
sbb
jb
jnp
ret
fwait
lcall
cs
lahf
push
loop
inc
ret
mov
mov
xchg
jns
es
adc
xlat
pop
div
mov
test
enter
inc
push
jae
fstpl
mov
in
mov
mov
idivl
lock
sahf
cli
ds
fwait
xchg
pop
pop
cmpsl
xchg
fwait
or
mov
dec
dec
out
sbb
pop
cmp
rclb
xchg
jp
addb
sub
jne
xlat
movsl
adc
mov
repnz
stc
jle
cmp
lock
aad
mov
test
jge
int
lret
jp
divb
fldt
mov
push
fstps
stos
sub
xlat
or
xor
insb
stc
fdivrl
lahf
shl
xchg
lds
in
icebp
xchg
call
inc
mov
in
ret
xchg
adc
jl
rclb
cmpsb
out
pop
sub
cmpb
mov
lret
jns
push
repz
pop
lret
mov
sbb
mov
add
mov
or
aas
cmp
hlt
mov
outsb
lahf
int3
mov
cmc
outsl
dec
jae
jmp
push
int3
dec
gs
mov
setae
cld
add
push
loop
movsl
jl
xor
push
mov
inc
xor
mov
xlat
and
nop
hlt
shll
mov
add
push
mov
push
pop
ljmp
out
icebp
jae
push
cmp
testb
jo
and
or
xchg
adc
rep
aaa
and
sub
adc
rorb
xor
lods
push
mov
dec
sub
mov
lods
sbbb
cs
jae
outsl
xlat
sti
jmp
xchg
sti
movsb
inc
mov
adc
cmc
lods
ficoms
cs
jnp
loopne
pushf
mov
xchg
out
es
dec
jae
push
fldenv
xor
stos
mov
scas
xlat
inc
leave
loope
sbbb
ret
mov
adcl
xchg
inc
out
aad
dec
mov
scas
leave
inc
add
inc
add
stc
loop
and
sbb
std
ficoms
arpl
mov
adcb
js
lea
push
pop
and
lds
cmp
dec
push
jno
add
pushf
pop
jns
push
jb
shlb
fimuls
int3
jns
xor
or
andl
jno
ds
mov
sub
and
stos
xchg
aaa
push
or
jl
fnsave
das
fwait
cmp
sub
stc
xchg
or
insl
mov
dec
xchg
adc
test
outsb
adc
adc
inc
mov
jl
movd
mov
test
mov
xorps
out
xlat
mov
lods
cmp
cmp
loope
sar
test
cwtd
aas
test
out
insb
call
ds
stos
pop
or
cmp
jecxz
jmp
icebp
xchg
mov
movsl
into
and
inc
in
gs
jge
add
lods
icebp
in
mov
in
mov
sbbl
inc
jnp
push
mov
test
or
mov
adc
add
cmp
mov
push
jg
cmp
cmp
inc
movsb
push
outsl
mov
sbbl
stc
xlat
sbb
cli
pop
outsl
and
inc
js
sahf
nop
or
sbb
pop
mov
push
faddl
mov
jl
or
mov
test
jp
mov
dec
sub
sbb
adc
jge
jl
mov
es
and
xor
lds
inc
shrb
xor
xchg
push
sarl
add
repz
adc
mov
pop
sti
or
fs
jno
inc
rolb
dec
ds
cld
jns
sub
cs
decb
sbb
ficoms
mov
scas
arpl
out
dec
stos
mov
jne
or
sub
in
insl
push
outsl
testb
outsb
xchg
dec
call
add
lods
adc
and
sub
ret
dec
sahf
ret
pop
and
sub
mov
jb
pop
mov
cmp
lds
loop
lcall
push
jne
dec
or
mov
dec
sbb
js
xchg
outsl
dec
adc
aas
lods
push
cmp
lret
test
mov
mov
cwtl
stos
mov
std
mov
pop
mov
or
popa
mov
jne
xchg
mov
xrelease
adc
mov
imul
jl
pop
sub
add
arpl
mov
push
ljmp
test
push
test
fidivs
mov
outsl
aad
pop
out
movsl
lea
jp
xor
popa
push
jge
push
pop
out
jge
xor
xor
sub
std
lret
cmpsl
xlat
mov
xchg
fstp
test
ret
call
pop
cs
aas
sahf
xchg
jle
addl
scas
mov
pop
dec
movsl
imul
clc
jbe
mov
adc
pusha
jecxz
xchg
out
scas
js
cwtl
call
push
les
pop
loope
rcrl
add
jns
dec
xchg
jg
fdiv
xor
xchg
data16
popf
dec
adc
and
fucomi
fs
adcb
lds
out
mov
mov
xchg
and
dec
stos
pop
jbe
test
insb
sbb
cwtl
iret
int3
inc
xchg
pop
rolb
inc
aad
sub
outsl
pop
int3
and
hlt
pop
out
mov
test
sub
stos
int
xchg
xchg
filds
shlb
and
cmp
mov
fsts
das
dec
xchg
test
pop
pop
daa
arpl
adc
in
mov
sti
inc
aad
in
jle
push
push
in
add
add
in
adc
push
sbb
lock
xor
sub
lret
pop
stos
sbb
xchg
out
jge
out
nop
repz
outsb
out
push
adc
pop
pop
fmull
notb
ret
fidivs
mov
jne
cli
adc
mov
mov
inc
aas
jge
stos
add
push
xchg
scas
test
stc
mov
mov
dec
test
pop
stc
jns
test
jbe
or
pop
aad
mov
add
push
mov
cwtl
in
cwtl
je
mov
jecxz
cli
add
mov
adc
jbe
loop
inc
aad
arpl
ljmp
imul
in
mov
push
push
mov
sarl
or
jp
popf
lahf
bnd
pop
cmpsl
in
loopne
insl
inc
lret
xchg
mov
loope
aas
and
je
dec
inc
cmc
jp
inc
xor
mov
sub
mov
lods
divb
leave
cltd
mov
mov
and
outsl
add
cmp
jno
mov
rcll
mov
inc
add
mov
daa
jne
push
clc
aam
jl
fcoml
into
jbe
sub
pop
pop
ret
xchg
ret
mov
add
daa
add
push
mov
cli
mov
or
push
inc
lret
dec
sub
and
out
cmp
xor
mov
rdpmc
mov
xchg
sub
clc
test
lds
mov
out
push
into
pop
ficompl
loop
or
iret
pop
popa
roll
and
push
dec
out
cmovg
mov
int
inc
pop
xlat
notb
jbe
or
dec
mov
sub
mov
loope
lea
push
push
push
sbb
lods
call
or
out
movsb
in
adc
cmp
inc
lahf
jns
mull
into
dec
pop
shll
cmpsl
push
add
aad
sub
pop
push
insb
daa
mov
leave
or
stc
pop
aad
sub
out
add
sbb
loop
dec
fidivrl
sbb
mov
icebp
adc
jp
mov
add
sub
jnp
aas
adc
repz
flds
test
movsl
out
faddp
movsb
mov
jmp
push
and
mov
adc
rcll
roll
nop
int3
mov
sub
dec
test
out
dec
mov
int
imulb
jl
and
or
inc
ffreep
nop
jno
imul
jbe
add
enter
cmpsl
fldt
adc
into
repnz
xchg
stos
fmuls
outsb
xlat
push
daa
mov
pop
out
cmpl
push
push
repnz
clc
mov
daa
into
and
sbb
inc
inc
fucomi
cmpl
push
mov
xchg
sbb
inc
and
ss
pop
sub
cmp
mov
ret
mov
test
pop
mov
push
push
in
sbb
enter
pop
jns
in
jne
jp
das
xorb
test
cmp
push
adc
jbe
mov
mov
pop
inc
jmp
cmc
js
add
xor
xor
xor
fcmovb
loope
inc
cmp
stos
addr16
vandpd
pop
icebp
loopne
cmp
push
arpl
pop
stc
loope
std
or
pop
inc
push
out
sub
es
inc
ljmpw
mov
fists
rol
cli
push
fnstenv
or
out
lcall
adc
incl
pop
lds
dec
sbb
not
or
cli
sub
push
pop
ret
sbb
filds
mov
xchg
lsl
leave
fcoml
cmp
fcoml
icebp
clc
pop
mov
push
hlt
rol
aad
xor
stc
mov
shrl
mov
mov
mov
jne
xchg
and
scas
out
insl
fdivrs
xchg
or
push
lret
xchg
sbb
add
ljmp
insl
mov
aaa
call
scas
aam
push
xchg
xor
push
push
push
inc
out
int3
mov
and
loope
mov
adc
das
aas
or
inc
fsub
xor
test
and
dec
fwait
movsb
out
mov
mov
adc
loop
outsl
loop
dec
shll
inc
fwait
lea
ret
insl
ret
jge
enter
or
jae
pop
aam
aam
jecxz
popf
lret
lea
or
addb
shrb
xor
push
shrb
add
faddl
sti
dec
xor
cld
or
jl
jo
dec
aaa
cmp
dec
pop
stc
stc
pop
andb
and
pop
in
sub
xchg
inc
push
shlb
cmc
mov
mov
sbbl
stc
push
mov
arpl
mov
inc
test
jl
cmp
loopne
stos
in
mov
ret
int3
mov
jle,pn
xor
xchg
addr16
pusha
adc
adc
pop
adc
aas
add
and
mov
inc
fs
into
mov
in
out
adc
inc
sbb
clc
push
pop
rcrl
pop
xchg
adc
nop
divl
jg
or
sbb
dec
idivb
and
push
fxch
shll
js
stc
mov
cmpsl
ja
cmp
push
testb
push
and
addb
movl
cld
xor
mov
and
cwtl
adc
stc
cmp
fidivrs
adc
xchg
sbb
or
fnstsw
imul
lcall
ljmp
sub
xchg
fists
inc
shlb
mov
mov
icebp
mov
sarb
fsubr
mov
pop
jle
test
and
cld
into
mov
mov
mov
jnp
mov
sub
orl
imul
sub
cmpsb
jae
mov
adc
cli
mov
xlat
popl
shr
daa
outsl
xchg
aas
rcrl
mov
out
xor
cs
mov
mov
push
push
mov
mov
outsb
or
aas
inc
arpl
jp
ja
sub
jo
repz
lret
aam
rcll
lea
adc
sub
dec
insb
aas
bound
pop
adc
mov
jne
into
mov
sti
mov
pop
rol
imul
sbb
mov
adcb
jb
xchg
jae
ret
out
mov
lea
outsb
inc
inc
inc
repnz
rol
add
mov
fwait
cmpsb
xor
mov
xchg
stos
stos
xchg
js
adc
pushf
ljmp
das
in
jno
push
addr16
in
mov
sbb
sub
nop
in
xchg
hlt
xchg
repnz
mov
inc
pop
lret
xchg
dec
clc
xchg
ret
imul
pop
jl
mov
arpl
cmpxchg
mov
mov
fmull
ret
dec
fldenv
mov
and
test
push
mov
add
jmp
or
int3
sbb
sahf
in
sub
in
gs
push
mov
adc
lcall
clc
push
xor
call
inc
nop
aam
dec
clc
nop
rcrb
push
arpl
fnstsw
lret
xchg
adc
mov
mov
icebp
lcall
insb
shr
push
push
out
test
fwait
int3
lret
mov
scas
call
xchg
lcall
cmpsl
rcrl
call
nop
outsb
jo,pt
rcr
loopne
les
lret
sub
xorl
jmp
fnstsw
jno
xchg
or
push
xlat
arpl
jo
lcall
pop
addr16
pop
dec
sub
jo
mov
and
movsb
add
add
or
cli
inc
ficomps
xlat
jae
std
jne
shl
cmp
sub
cmpsb
test
out
xchg
ret
mov
add
loopne
fwait
xlat
cmp
movups
das
out
inc
cmp
jecxz
and
aad
add
test
xor
dec
push
lahf
jle,pt
push
cmpsl
lds
sub
add
xor
int3
mov
xor
add
loope
cmpsl
stos
outsl
and
arpl
lahf
pop
xchg
push
cmp
xlat
inc
ja
mov
lcall
stos
test
jl
sti
into
fld
dec
push
jmp
insb
in
push
rclb
fistps
enter
xchg
push
xchg
iret
outsl
adc
fstpt
jb
and
mov
push
jbe
or
repz
cmp
push
dec
push
jnp
xchg
jns
or
cmp
cld
jne
call
aam
push
and
ljmp
inc
fwait
jnp
cmp
jle
cmpsb
add
and
shrb
ficoms
pop
sub
inc
loopne
mov
dec
mov
jmp
stc
xchg
ss
add
jne
mov
popfw
jle
mov
sbb
fistpl
and
jo
loop
fs
imul
lds
lods
cmpsl
je
xchg
in
push
inc
inc
scas
push
dec
or
cmp
lds
jo
out
xchg
andb
mov
stos
xor
movsl
push
imul
push
adc
into
sub
push
jns
adc
outsb
popa
add
or
in
pushf
or
enter
inc
cmp
hlt
leave
mov
jns
add
pop
ret
jmp
dec
je
mov
mov
lahf
movzwl
fisttpll
pop
test
lret
pushf
xchg
push
mov
movsl
sub
lds
fwait
xor
dec
fdivs
fnclex
ret
orl
imul
pushf
into
in
push
xchg
inc
pop
cld
push
jecxz
and
test
dec
incl
sbb
stos
rorl
clc
cli
sarb
mov
cmp
push
je
push
into
ss
mov
test
addr16
inc
xor
fistps
inc
push
cmp
jecxz
adc
fadds
jge
aaa
jge
xchg
mov
adc
fidivrl
orb
sarb
loope
sahf
dec
fst
sbb
dec
sahf
sub
out
xchg
pop
jne
cmpsb
pop
lret
xchg
call
fsubp
jb
mov
or
sbb
jne
push
dec
stos
mov
insb
jmp
and
lahf
jae
inc
adc
in
dec
je
loop
push
xchg
outsl
jbe
test
sub
jg
mov
stos
pushl
cwtl
pusha
mov
jo
cmp
aad
push
push
pop
mov
adc
mov
test
stc
int
mov
add
xorb
gs
jb
add
adc
js
mov
sbb
add
inc
jle
jno
out
dec
movb
insl
loop
sbb
dec
cmpsl
popa
mov
sub
and
outsl
cs
sub
sarl
pop
xor
fsubrs
xchg
ja
cmp
shll
mov
out
xchg
mov
call
lock
pop
sub
cmc
or
ljmp
inc
add
dec
dec
fsubrl
imul
xchg
push
popf
jb
xor
adc
in
push
xchg
fbld
test
xchg
fistpl
push
insb
pushf
jl
stos
lcall
sbb
jns
dec
ds
add
dec
mov
out
add
dec
jle
faddl
or
xor
out
in
clc
lcall
or
mov
jg
daa
pop
xor
fcomi
and
imul
xchg
xchg
adc
out
xchg
pop
or
repnz
rorb
gs
stos
add
xor
mov
sti
cmp
mov
jmp
push
xorb
inc
adc
pop
xorl
pusha
aas
xchg
cmp
and
pop
ficomps
sti
jmp
xor
sub
mov
stos
sub
adc
les
sbb
scas
lret
push
and
jge
jae
push
mov
mov
out
jns
out
jl
push
mov
iret
dec
or
pop
ss
daa
sub
inc
dec
fwait
jecxz
sub
mov
lret
repz
iret
mov
and
into
inc
int
xchg
cmpsb
imul
out
mov
aas
sub
mov
and
rcl
and
push
push
pop
xchg
adc
out
and
lea
mov
push
xlat
or
imul
push
mov
aaa
jmp
sbb
inc
push
sub
fadds
sub
jmp
int3
imull
push
addr16
mov
sbb
jmp
in
mov
mov
cmp
adc
adc
loop
pop
or
sti
call
xor
pop
movsb
push
daa
divl
loopne
dec
or
sbb
xrelease
popl
insl
xor
scas
jp
lret
and
outsl
imul
push
bound
adc
xchg
mov
inc
out
fistps
push
pop
mov
and
adc
mov
adc
insb
jecxz
ja
cmp
sbbb
cmpsb
push
mov
fsubl
sub
mov
jle
test
popf
loopne
push
scas
pop
push
roll
add
popf
je
adc
xchg
inc
push
mov
push
cmpsb
fsubrl
add
or
mov
jae
cli
xor
jne
sti
lcall
cmpsb
push
and
sub
inc
pop
lock
push
stc
jp
je
ret
xor
fwait
inc
data16
push
mov
jne
xchg
shll
fnstenv
mov
fwait
test
popa
das
or
lcall
fists
mov
out
into
stos
push
out
loop
ljmp
dec
and
pop
fwait
jg
imul
push
fwait
sbb
sub
pusha
xchg
fsubl
sbb
imul
mov
xor
aaa
pop
add
adc
lret
fwait
jmp
or
xor
dec
adc
mov
lock
dec
mov
imul
hlt
fidivrl
aam
cmp
xor
cmpsl
add
xor
adc
add
stos
fimull
jge
shll
addr16
addb
in
sbb
andl
mov
enter
aam
fsts
addl
pop
cs
test
mov
push
mov
mov
out
jo
dec
dec
cmp
cld
ss
in
lock
and
scas
inc
ja
mov
mov
ficoms
xchg
loope
mov
xlat
inc
jle
pusha
leave
pop
iret
xor
in
fcomi
add
pop
push
arpl
inc
loop
and
repnz
pop
jbe
into
or
fwait
arpl
mov
or
std
test
xchg
adc
or
and
pop
aaa
xor
jecxz
scas
subb
cmpsl
lods
push
sar
fcmovnb
inc
test
and
and
imul
mov
stos
roll
leave
dec
daa
cmp
dec
icebp
jmp
sbb
inc
adc
jle
aad
cli
push
xchg
scas
jno
daa
add
ss
testl
stos
ret
xor
ss
xchg
int
sub
push
pop
fstl
xor
mov
shl
sbbb
iret
xor
les
aaa
clc
popf
aas
orb
aam
aam
push
mov
push
pop
push
fisttps
repz
cmpsl
movsl
xchg
pushl
inc
movsb
pop
jnp
cmpsb
popa
sbb
pop
jle
push
cmp
inc
int
push
adc
pushf
icebp
xchg
xchg
icebp
loope
push
xchg
sub
jp
les
icebp
push
mov
mov
pop
test
in
orl
jnp
bound
call
aas
stos
sub
inc
add
xchg
lods
roll
dec
int3
sbb
lods
sub
addr16
dec
push
or
push
test
mov
xchg
das
push
icebp
push
xchg
xchg
add
cs
jb
dec
fidivl
cs
or
pop
cmp
nop
pop
mov
scas
pop
lods
cmp
sbb
loope
xchg
ret
fcmovnu
mov
xor
js
xor
mov
sub
icebp
sbb
lret
xchg
shl
cmp
fildl
popa
mov
movsl
push
xor
sbb
ja
push
or
xchg
fsubl
int
sbb
add
imul
shl
adc
negb
mov
xchg
lods
mov
add
cmp
mov
les
lcall
xor
lahf
jo
and
std
inc
and
mov
adc
insb
push
push
fxch
or
push
xchg
jl
arpl
addr16
xor
jnp
push
outsb
nop
es
test
jl
notl
jns
ja
sbb
pop
in
mov
stc
loop
mov
adc
out
adc
jae
jle
sub
sub
icebp
js
je
jg
mov
cwtl
scas
inc
mov
or
divl
pop
or
aas
mov
mov
into
dec
enterw
mov
insb
mov
push
jg
push
cmp
add
or
mov
dec
and
add
shr
cmpsl
jmp
adc
jl
dec
push
lcall
in
cmp
outsl
pop
add
or
pop
xlat
ret
fcoml
daa
sbb
mov
xchg
pop
push
mul
in
push
int3
insl
jno
mov
pop
sbbb
mov
ds
jae
xlat
dec
push
fstpt
subl
mov
mov
data16
nop
push
ret
and
test
mov
incb
fcoms
jle
ljmp
out
mov
filds
mov
push
add
or
cmc
fsts
xlat
mov
testl
stos
scas
xchg
rcrb
pop
imul
es
je
mov
lcall
jne
jle
mov
mov
mov
sti
sub
jmp
xor
dec
sbb
clc
gs
add
sti
add
ja
fcoml
jb,pt
xchg
cmp
out
sub
jbe
das
mov
outsb
push
push
jecxz
out
or
and
or
add
mov
loop
xchg
es
daa
inc
loopne
xor
xchg
or
out
std
jns
xor
inc
dec
in
mov
repz
xor
dec
cmpl
dec
lea
inc
rcrb
adc
mov
scas
int3
xchg
jo
fdivl
cld
jno
push
and
push
data16
mov
adc
and
xchg
push
mov
flds
jl
and
xchg
popw
imul
or
mov
in
fdivp
dec
pusha
add
jo
jbe
orl
sahf
cmp
mov
jb
gs
stos
mov
sub
cmpsb
jne
imul
jl
mov
jne
mov
pushf
sub
push
push
test
out
mov
adc
push
pusha
test
lock
and
test
das
jg
add
outsb
popf
adc
add
dec
pop
nop
inc
push
mov
xor
repz
or
data16
pop
shll
push
sahf
adc
add
jge
outsl
jb
ljmp
cs
sbb
imul
lods
mov
imul
fiadds
scas
adc
rorl
fidivl
mov
push
das
int3
insl
nop
pop
dec
fucomp
dec
add
gs
out
rcrl
inc
add
mov
adc
pop
loope
fdivrl
xor
pop
addb
mov
sub
adc
mov
decb
mov
mov
leave
or
jno
xchg
les
loope
fsubs
lret
mov
out
xor
out
lcall
dec
cmp
or
loopne
imul
xor
and
sbb
push
call
outsl
insl
stos
jmp
mov
fldt
xor
add
inc
xor
imul
cltd
aad
xchg
sub
or
jo
es
mov
rcr
add
xlat
nop
cmc
sbb
mov
lcall
mov
jne
imul
mov
outsl
stos
test
in
bound
cmc
cmp
sub
in
test
push
fstpt
scas
xchg
in
ljmp
movsl
mov
std
and
sbb
shl
pusha
mov
inc
pushf
fimull
jmp
cld
ds
hlt
cmc
fimuls
mov
fucomp
pop
add
ja
cmpsl
push
mov
cmp
lods
xlat
cmp
cmp
pop
lods
outsb
pop
mov
inc
jae
stos
pop
call
rolb
loop
adc
and
mov
add
lock
roll
cli
mov
les
sub
push
sub
mov
fcomps
sub
jno
dec
dec
cltd
jp
addr16
outsl
and
jne
call
jno
aas
sbb
adc
popf
push
jg
leave
xor
test
ds
test
mov
imul
mov
add
and
sub
xchg
rorl
mov
cmp
test
data16
sub
inc
ja
mov
mov
insl
fwait
les
outsl
iret
test
mov
insb
sub
or
orb
push
fimull
lahf
bound
jno
pop
roll
sub
xor
enter
mov
mov
cmp
push
sbb
inc
ss
mov
sarb
cwtl
add
fdivl
mull
push
cmp
xor
or
pop
sbb
insb
es
mov
out
out
outsl
test
imul
cmp
loop
mov
xlat
xor
jecxz
and
mull
inc
or
xchg
mov
pop
fsubl
push
dec
inc
add
cmp
addb
ret
cmp
nop
jp
imul
xor
fnstcw
ljmp
fidivl
loop
pop
push
dec
push
xchg
and
sbb
inc
test
dec
cmpsb
inc
mov
out
lock
lea
daa
loope
sbb
jmp
inc
pop
push
pop
cltd
xor
push
out
es
lock
add
pusha
fidivrs
and
sbb
cmp
and
mov
rcrb
inc
shrb
push
dec
adc
mov
stc
ds
and
mov
aad
imul
mov
notb
arpl
xchg
adc
or
mov
xor
sahf
jae
lret
shr
xchg
rclb
xor
shrl
sbb
cmp
pop
lea
mov
fcomp
push
stc
lock
aaa
add
add
lcall
mov
test
inc
aad
sbb
jle
orl
fcmovu
out
icebp
sub
dec
mov
push
xchg
bound
scas
popa
add
inc
and
push
inc
sub
dec
call
cmpsb
push
jle
sub
inc
push
inc
fstps
sbbl
pop
pop
and
dec
repz
jo
out
mov
jg
sti
or
or
orl
sbb
xor
mov
addr16
lods
lahf
adc
nop
sub
cmp
outsb
negl
add
add
and
loopne
xchg
or
push
lcall
in
inc
les
mov
xchg
pushf
adc
mov
dec
int
mov
dec
jl
popf
ljmp
mov
mov
ja
dec
inc
mov
insl
das
lea
and
iret
cmp
inc
pop
cmp
fistps
iret
pop
test
add
pushf
pop
popa
and
inc
pop
addl
inc
jo
inc
aas
repnz
push
mov
sbb
mov
in
sahf
ljmp
mov
jbe
movsb
jno
aaa
popa
cmp
sub
inc
push
dec
in
jmp
push
dec
loope
push
into
mov
dec
nop
shl
rolb
xor
insb
sbb
push
popa
stos
dec
or
int3
subl
lcall
or
jmp
aaa
sarl
divb
mov
and
push
mov
mov
in
into
pop
loopne
fcmovbe
enter
xchg
mov
insb
mov
mov
jmp
jp
ret
outsb
sub
test
cmpsl
sbb
popf
sub
jmp
push
imull
mov
adc
xor
sub
adc
mov
popf
push
fdiv
rorl
aas
jle
mov
stos
push
andl
jnp
cld
mov
or
inc
rcrl
add
jle
stc
shlb
cwtl
stos
fnstsw
scas
sub
rclb
cli
lods
ret
mov
dec
sbb
hlt
xchg
aad
jp
adc
adc
cmp
leave
lea
sub
lds
std
push
adc
pop
and
xor
je
dec
jbe
cwtl
mov
outsl
movsl
pop
daa
xchg
pop
mov
jns
xor
repz
pop
sbb
push
test
data16
mov
inc
add
or
les
out
mov
xchg
lahf
pop
and
pushf
jle
push
mov
cmpsl
jp
es
pop
dec
out
out
roll
inc
jg
into
movsb
sbb
add
and
jnp
daa
pusha
sub
mov
xor
push
adc
mov
xchg
out
adc
jnp
loope
pop
pop
popa
int
xchg
hlt
test
test
ds
push
movd
xchg
ljmp
cwtl
xchg
aam
mov
push
popf
lea
pop
stos
mov
rorb
inc
je
outsl
add
lock
ss
cld
bound
or
iret
push
jge
ja
sbb
sbb
inc
out
iret
jg
push
and
push
dec
inc
sub
cmp
mov
data16
in
adc
repnz
andl
jnp
callw
xchg
push
das
mov
fsubrl
mov
cmpl
imul
dec
add
jle
aad
test
mov
int3
jae
loope
sahf
jge
popl
je
insb
mov
enter
dec
cmc
push
jnp
test
push
sub
icebp
pop
int
adcb
lcall
les
shl
insl
mov
addr16
xchg
lret
xchg
into
cmp
cltd
mov
loopne
cmp
mov
hlt
cmp
fdivrs
int3
pop
sub
and
outsb
dec
push
and
sub
jge
in
lock
in
bound
xorl
in
jbe
dec
jge
jge
movb
loope
lock
fsts
sbb
cltd
repz
push
jnp
add
loop
jo
es
push
jmp
dec
lcall
mov
jno
cmp
mov
adc
test
xchg
cmp
cmp
jle
inc
aad
arpl
and
imull
xchg
sbb
push
imul
push
int
mov
sahf
push
aaa
in
iret
add
popa
movsb
cmp
popf
lock
sub
pop
mov
inc
mov
sub
mov
sub
movsl
mov
test
daa
push
lcall
inc
movsb
lods
movsb
lahf
shrb
das
pop
mov
out
adc
jns
cs
xchg
cmp
fcmovnu
out
jmp
mov
xor
imul
inc
clc
imul
dec
scas
mov
scas
xor
push
add
adc
aaa
pop
adc
test
mov
jnp
pop
inc
call
push
add
rolb
test
mov
and
insb
mov
frstor
mov
mov
mov
sub
inc
inc
aas
sbb
sub
push
fldcw
push
mov
mov
div
mov
jo
pop
dec
pop
lahf
imul
std
xlat
pop
ljmp
je
loopne
in
add
mov
rdmsr
imul
mov
push
call
jmp
adc
push
jl
call
sbb
pop
jmp
add
lea
mov
bound
adc
lods
sub
cmp
loopne
pushf
add
push
mov
in
add
sbb
pop
add
scas
dec
add
cltd
and
andl
sub
push
inc
jl
jle
sbb
dec
mov
inc
call
std
lods
mov
sbb
pop
or
jae
pop
or
ja
int
xchg
sbb
adc
mov
pop
adc
mov
push
cli
outsb
mov
notl
stos
jp
lds
les
addb
dec
dec
arpl
lret
inc
test
popf
out
shll
dec
and
adc
orl
add
or
fprem1
clc
adc
dec
xchg
mov
ja
dec
mov
movsb
jb
scas
lahf
jp
hlt
nop
dec
pop
sub
xor
or
les
movsb
aaa
iret
imul
arpl
lock
or
aad
loop
jb
mov
mov
out
int
mov
aam
add
mov
and
int
sub
xlat
fistpl
jno
icebp
test
scas
jg
and
sub
jg
out
insb
fsubrs
std
cmp
fbld
loop
ds
fcmovnbe
mov
out
loop
xchg
push
int
xor
push
mov
je
jle
sbbb
inc
fldl
popa
push
ficoms
sub
or
xchg
shlb
pop
sub
mov
in
es
mov
sbb
out
mov
bound
ds
mov
add
mov
bound
mov
xchg
jns
ret
adc
repnz
add
iret
movsb
repnz
and
fimuls
cli
loope
or
out
dec
addr16
and
in
lahf
mov
sbb
mov
add
shlb
mov
mov
fst
flds
stos
lahf
xchg
in
mov
and
sbbb
xchg
push
push
cmc
sbb
push
jmp
mov
outsb
out
movsb
cmp
sub
or
frstor
push
pop
incb
sti
mov
pop
cmpsl
roll
pushf
ss
dec
jns
mov
sbb
adc
icebp
int3
divb
test
sbb
xchg
fbld
popa
aaa
rcrb
into
or
fst
dec
pop
movsl
fnstenv
xchg
pushf
push
lea
push
xchg
cltd
daa
pop
inc
mov
shlb
mov
sbb
xlat
outsb
int
or
and
jo
jae
and
cmc
das
enter
out
nop
cli
jne
mov
xchg
mov
mov
decl
test
fdivl
fistpll
xchg
in
jl
data16
loope
arpl
dec
test
jg
mov
push
xchg
out
fcom
mov
mov
out
je
mov
outsl
pop
inc
sbb
fwait
jle
dec
mov
fimuls
adc
push
addr16
cs
mov
mov
dec
xchg
pushf
inc
stc
nop
jge
lret
dec
xor
sahf
fnsave
notb
push
pop
push
inc
cld
xor
dec
xlat
loopne
cmp
adc
dec
lock
dec
setns
in
fidivl
fbstp
inc
pop
out
sahf
imul
or
inc
or
imul
std
enter
push
inc
cld
aam
adc
cs
pop
ds
xchg
outsl
aam
add
mov
mov
rcll
add
fists
lds
loope
inc
testb
int
in
mov
shrb
jne
mov
pop
mov
add
outsb
sub
rorl
int3
iret
sbb
aaa
xor
pop
mov
cwtl
lods
lods
fidivs
jne
out
push
cmp
ljmp
cld
popa
mov
push
js
addr16
lds
push
pop
pop
xchg
pop
push
mov
pop
jnp,pt
or
cmp
or
movsb
arpl
xchg
movsl
jle
cmpsl
sbb
divl
mov
pop
mov
adc
sub
popf
xchg
pop
dec
cwtl
shrl
stc
shlb
jbe
mov
jno
lods
xchg
dec
aam
mov
cmp
push
clc
movsb
ret
xchg
fidivl
sbb
jns
push
pop
or
call
test
dec
lahf
mov
xor
add
add
aas
rcl
inc
sbb
jo
mov
push
adc
mov
scas
jmp
shlb
packuswb
loope
lret
adcl
loope
xchg
ficompl
or
or
out
fmuls
sub
call
jb
jne
rolb
jbe
imul
inc
popf
sbb
jb
hlt
nop
icebp
cmp
mov
test
movsb
ret
push
pop
stc
enter
and
sbb
inc
push
adc
in
mov
push
pop
mov
mov
cmpsb
jge
gs
jo
adc
sbbb
call
adc
sbb
and
dec
aaa
leave
hlt
in
xor
loopne
cltd
inc
out
testl
push
xor
xchg
outsl
fnstcw
mov
ja
and
cmc
cs
mov
stos
xchg
gs
addr16
mov
lcall
cmp
cwtl
fwait
pop
inc
inc
and
es
shll
rcrb
aas
sub
mov
cmp
push
mov
push
dec
add
shlb
mov
insb
jmp
add
xchg
clc
xchg
dec
adc
sub
pop
and
movsl
lcall
stc
loopne
mov
add
iret
les
mov
jp
xor
sub
arpl
push
mov
repz
sarl
stos
and
mov
or
cmp
pop
push
sub
cmp
enter
mov
in
mov
popa
xchg
cmp
lock
nop
xchg
sub
mov
cwtl
popf
adcl
mov
aam
stc
mov
dec
mov
xchg
pop
xor
lret
mov
ljmp
ja
fwait
dec
mov
out
lds
in
or
in
xchg
push
dec
add
aad
add
push
aam
mov
mov
inc
dec
jne
pop
inc
hlt
push
xorb
insb
push
pop
jge
je
or
sub
push
test
lds
mov
pusha
xorl
xchg
je
std
sti
and
pop
mov
pop
dec
hlt
mov
jecxz
aaa
inc
or
sahf
mov
pop
shll
in
icebp
sub
pop
lret
push
xchg
bound
movsb
fiaddl
jecxz
add
mov
sub
dec
mov
push
xor
aaa
adc
dec
mov
pop
add
subb
movsb
jl
lea
lea
and
sbb
loop
mov
jl
push
sub
stos
mov
and
addl
lcall
orb
or
lahf
stos
mov
adc
add
sahf
lahf
inc
mov
mov
pop
mov
sub
popf
inc
popf
lea
inc
cmp
jg
cmpb
sub
push
add
lock
out
test
outsb
mov
fdiv
inc
pop
adc
popa
mov
sub
test
or
mov
mov
sub
inc
xchg
mov
insl
fists
jle
mov
sti
stc
jnp
mov
out
xor
rorl
out
not
loope
loope
mov
test
mov
imul
fcoml
out
or
rcrb
lahf
shlb
sub
aaa
fisubrl
jno
push
rorb
rcll
adc
popf
inc
int
and
test
dec
cs
out
adc
into
inc
test
push
cmp
testl
mov
jle
scas
data16
jge
test
cmpsb
add
or
or
inc
mov
mov
fldt
int3
sbb
pop
les
out
push
aas
inc
mov
cld
fs
xor
pop
rcrl
mov
aas
ret
fwait
mov
push
shll
test
push
lods
mov
jbe
jne
mov
sub
aam
push
iret
add
xchg
cmpsb
fstl
or
fistpl
or
dec
das
scas
xor
nop
cmpsb
ljmp
mov
adc
mov
dec
imul
jl
pop
les
adcl
popa
or
ljmp
bound
mov
cmp
ds
fucomi
push
movsb
sub
dec
xchg
mov
pop
out
lds
mov
pop
lods
imul
sub
ret
cmp
xor
xchg
dec
pop
test
outsb
aam
loope
mov
mov
imull
dec
add
add
js
andl
data16
loop
notl
xor
orb
aad
mov
mov
std
clc
rclb
add
xor
popa
jecxz
fistpll
in
shrl
mov
mov
addr16
ds
ja
sahf
iret
addb
ljmp
popa
inc
xchg
add
fildll
cmp
jg
idiv
jno
insb
and
mov
mov
shll
mov
pop
andb
repnz
add
mov
sub
xor
aad
ret
ret
xor
test
push
jbe
mov
into
loop
sub
in
push
ja
popf
lea
dec
ds
jmp
sbb
insb
and
push
clc
sbb
or
sub
pusha
or
lods
cld
push
push
mov
incl
cmp
dec
lret
add
push
push
inc
ja
mov
or
clc
outsb
cld
mov
sbb
dec
jecxz
sbb
scas
lds
inc
popf
xor
pop
pop
sub
inc
push
outsb
adc
int
addr16
push
jecxz
outsl
jmp
jle
mov
std
int
in
adcb
add
mov
es
dec
out
shll
movsl
fisubl
cmp
xchg
push
mov
cmp
call
fs
push
inc
stc
inc
inc
loope
cmp
jmp
mov
cs
cmp
xor
loopne
sub
in
jno
stc
jbe
push
lcall
adc
mov
sbb
cli
or
arpl
pop
popf
fnstsw
sub
mov
enter
jns
and
adc
loop
ret
sbb
into
cli
loopne
xor
and
mov
jecxz
add
divb
les
lret
hlt
or
popa
jecxz
or
mov
push
cltd
frstor
dec
adc
mov
jg
dec
and
scas
adcb
test
jp
or
push
into
inc
jmp
mov
imul
sbb
adc
inc
in
ss
or
leave
adc
jno
cmp
or
fsubl
xlat
in
repnz
mov
cwtl
ljmp
pop
jle
shlb
inc
dec
jp
pop
int
mov
and
imul
jg
out
imul
sbb
aaa
adc
xchg
insl
jecxz
stc
fistpll
stos
clc
mov
lret
js
lds
gs
xchg
xor
add
fwait
out
movzbl
out
leave
fwait
mov
xor
sbb
imul
pusha
pop
filds
mov
gs
js
cmpsb
or
sti
push
push
adc
xchg
lds
pusha
test
out
xor
leave
sarl
cli
int3
cld
iret
decb
cmp
lock
push
nop
push
hlt
and
testb
fcomps
in
add
cmp
dec
lock
ss
fcompl
mov
pop
sbb
xchg
and
shlb
loopne
inc
or
push
dec
jp
shr
loopne
xchg
inc
push
out
fcomps
repz
mov
sub
add
mov
jl
mov
inc
dec
in
dec
jl
mov
leave
daa
and
inc
scas
in
sub
mov
push
push
sbb
push
cli
insb
inc
sub
jno
cli
icebp
jge
inc
ret
dec
xor
out
pop
add
pop
pop
push
and
cmpsl
xor
adc
mov
add
outsl
push
push
insl
pop
dec
and
loopne
sub
push
pop
std
aaa
pop
mov
mov
insl
or
mov
stos
lock
xor
fnstsw
dec
ljmp
mov
nop
pop
orb
mov
cmpsb
out
adc
jle
mov
lret
fucomi
sub
sbb
add
push
fs
mov
outsl
fcoms
icebp
push
insb
push
fadds
sbb
cmpsb
pop
inc
push
cmpsl
jne
sub
mov
lcall
mov
push
sub
jl
and
sub
call
nop
add
nop
cwtl
loopne
mov
cmp
dec
jecxz
movsl
aas
int
cmp
imul
shrl
lods
inc
sbb
or
cmp
test
mov
loopne
rclb
gs
mov
inc
push
stos
insl
in
inc
jg,pn
gs
imul
xlat
jg
xchg
or
int3
jecxz
mov
adc
lea
add
scas
scas
negl
cli
out
cmp
nop
xchg
adc
insl
push
add
jb
jge
loop
jno
pusha
out
push
dec
mov
pushf
loop
es
ret
sti
adc
or
cwtl
iret
sub
adc
add
cmpsl
das
mov
pop
aad
add
inc
push
jp
inc
adc
in
imul
stos
mov
inc
and
imul
pop
and
sub
notl
es
das
jmp
cmp
mov
dec
cmp
mov
pusha
push
mov
sbb
mov
mov
xchg
and
stos
fisubl
pushf
dec
jmp
je
mov
loop
xor
cmp
jp
xor
and
insl
adc
sbb
adcl
push
jo
js
stos
and
pop
pop
add
push
cmp
push
pop
lods
mov
dec
andl
sar
lcall
mov
mov
dec
xchg
jl
outsl
jae
xchg
out
std
mov
les
loopne
xor
mov
push
cmpb
jmp
lock
mov
jp
cwtl
adcb
hlt
dec
xlat
xor
pushf
jo
dec
scas
cmp
gs
stos
ljmp
mov
xchg
mov
adc
sbb
test
xor
mov
lock
push
cwtl
fldl
scas
insb
xchg
mov
xchg
adc
lret
xor
push
adc
sub
push
aad
pop
shl
addr16
out
jbe
mov
pop
mov
mov
fists
mov
mov
pop
push
dec
out
sub
enter
mov
iret
pop
call
loop
dec
dec
test
adc
and
xorl
jb
dec
inc
add
dec
sbb
xchg
ret
int
outsb
mov
push
pop
cmp
or
sub
daa
cmp
xchg
or
addr16
shll
jns
pop
roll
dec
xchg
xchg
mov
dec
jl
cwtl
dec
rcr
xchg
shrb
rolb
mov
jnp
loope
add
hlt
push
inc
dec
inc
inc
or
mov
and
popf
arpl
mov
cmp
push
and
mov
test
inc
cmp
mov
xchg
test
shll
xor
mov
sbb
test
dec
fists
sub
sbb
adc
daa
scas
push
addb
les
pop
lret
push
xchg
xchg
jmp
fucompp
fnstsw
pop
dec
pop
fs
shll
cmp
subl
adc
shl
cmpsb
fxam
dec
aam
dec
push
xchg
test
cmp
outsb
jne
cmpsb
add
and
es
aaa
in
outsl
jno
sub
lods
mov
aaa
mov
xor
pusha
insl
shlb
test
xchg
pusha
jo
in
iret
mov
out
clc
pop
scas
adc
lret
es
rclb
imul
into
push
aam
mov
lret
int3
mov
inc
repz
imul
outsb
push
in
xor
xor
pop
push
ret
int3
dec
xchg
insb
sbb
bound
dec
cmpsl
es
scas
jl
test
data16
or
cmp
arpl
call
xlat
cmp
enter
outsl
sub
icebp
cwtl
aad
cmp
jmp
test
iret
adc
push
add
add
stos
xchg
inc
xchg
jne
cmp
in
shll
rcll
push
inc
add
je
int3
lret
jns
or
inc
gs
xorb
mov
stc
int3
cld
lret
xchg
pop
mov
fdivrs
adc
xchg
mov
cmp
andl
pop
mov
sbb
fwait
arpl
out
js
mov
addw
and
fdivs
into
adcb
push
gs
sub
or
std
xor
fildll
rorl
push
inc
mov
jae
mov
out
stos
arpl
mov
pop
test
push
push
aad
test
fstl
cli
pop
jmp
cmp
shrb
ljmp
adc
lret
inc
icebp
jecxz
lds
pop
test
jnp
rorb
icebp
push
xchg
add
jmp
sub
or
and
test
or
cmpsl
mov
lahf
sub
dec
shrl
xor
shlb
fstps
xlat
pop
mov
lods
xchg
xchg
stos
jae
adc
inc
and
cs
out
mov
push
adc
insl
rorl
insb
or
add
adc
mov
jecxz
jl
fdivrs
adc
dec
lret
arpl
mov
out
pop
jg
fstpl
lock
pop
in
xor
js
xor
stos
inc
negb
fsts
lock
jae
cmc
arpl
in
adc
cltd
das
pop
fildll
in
lret
push
pushf
cmpb
mov
jmp
and
pushf
xchg
dec
aam
insl
out
fmull
mov
mov
sub
push
cltd
lret
cmpsl
mov
lock
cmp
mov
sub
inc
outsl
and
or
es
dec
and
inc
rcrl
and
jmp
test
xor
aad
or
cmpsb
dec
xchg
dec
or
dec
mov
xchg
into
and
into
sbb
int3
cli
xlat
xchg
dec
into
pop
xchg
cmp
stos
mov
lahf
rclb
test
pop
fwait
cmp
or
sub
dec
or
les
pop
sarb
loopne
movsb
call
push
nop
sbb
push
gs
jle
jle
clc
rorb
ret
lea
int3
xor
push
adc
cltd
test
pop
out
adc
xor
adc
mov
mov
mov
and
jb
cli
sub
mov
mov
mov
lahf
arpl
inc
data16
jg
dec
mov
popl
das
test
test
xlat
adc
mov
in
lret
mov
mov
outsl
cmpsb
sub
add
push
sub
std
xchg
add
imul
or
inc
add
sahf
nop
push
adc
and
mov
xorb
aam
out
mov
jge
sbb
mov
fcmovnbe
cmp
cmp
push
lock
test
push
fwait
ljmp
test
jnp
inc
fnsave
testl
bound
jp
jns
test
jl
inc
xor
or
pop
push
les
shr
fwait
xchg
fcoml
in
fs
lcall
dec
sti
and
divl
hlt
es
mov
cmp
stos
adc
lods
es
jle
xchg
clc
not
test
jle
dec
mov
mov
leave
in
repz
cmp
or
dec
push
test
imul
push
push
leave
jge
out
ja
jg
jecxz
or
sbb
sarb
out
xor
int3
popl
setle
jg
sbb
mov
stos
dec
rorl
enter
nop
xor
jo
lahf
sub
mov
mov
mov
adc
hlt
or
sahf
sbb
or
repnz
lcall
in
aam
ds
cmpl
aas
dec
mov
sub
add
lea
inc
dec
out
and
adc
test
sbb
jb
sbb
mov
cwtl
mov
std
sub
xor
inc
push
into
loopne
mov
or
cltd
iret
pop
mov
inc
sbb
inc
rcl
push
mov
popa
loope
xchg
inc
aaa
or
sbb
cmc
push
inc
scas
divb
cld
mov
in
cltd
cmp
gs
sbb
mov
xor
test
pop
outsb
pushf
jno
orl
mov
imul
repz
sub
mov
jp
aaa
adc
pop
insb
mov
sbbb
lret
out
lcall
movsb
xchg
xchg
pop
push
cltd
lods
fs
add
xchg
lahf
adc
stos
xchg
jb
pop
sub
mov
inc
ret
cmpl
push
icebp
ljmp
mov
mov
sub
cmp
sbb
xor
scas
sbb
mov
cwtl
push
insl
push
mov
pop
xchg
cltd
add
notl
lds
jecxz
nop
lods
pop
js
and
imul
daa
nop
xchg
mov
dec
pop
clc
pop
icebp
mov
mov
stc
or
xchg
jne
bound
jne
icebp
push
sar
testl
in
xchg
lcall
cs
lret
sbb
xchg
fwait
xchg
dec
mov
aaa
pop
mov
mov
mov
jmp
bound
mov
inc
push
jno
pop
dec
jp
mov
cmpsb
xor
rorl
mov
imul
xor
sub
cmp
arpl
mov
dec
add
mov
in
testb
out
sbb
mul
push
scas
inc
nop
mov
inc
sub
xchg
std
jge
add
cmp
clc
push
fisubl
cmpsb
lods
mov
sub
adc
mov
cmp
enter
out
leave
lds
xchg
nop
stos
adc
movsb
icebp
cmc
sbb
mov
dec
and
rorb
cwtl
in
jb
addr16
stos
imul
cmp
lds
and
test
dec
add
lods
pop
and
das
sbb
inc
inc
loop
ss
aaa
xlat
shl
xchg
jecxz
fstpl
xor
and
xlat
mov
lock
mov
or
xor
inc
mov
push
sarb
bound
sti
sbb
push
and
mov
mov
aam
pop
cmp
dec
mov
xlat
test
adc
mov
cmpsb
push
repnz
imul
out
lret
fcoml
mul
enter
pop
mov
add
mov
popa
test
sub
push
inc
cli
out
pop
dec
pop
xchg
mov
push
insb
and
in
or
push
sub
cmp
daa
fisubrs
aad
incb
xor
in
sti
xchg
clc
fnstenv
mov
mov
jnp
sbb
mov
xchg
and
mov
stc
stos
out
das
data16
jns
add
sub
movsb
mov
sub
mov
aam
lods
enter
ds
repnz
sub
pop
pop
fcoml
movsl
in
jne
adc
add
sbb
insl
inc
rorb
mov
xchg
cs
hlt
sbbl
pop
lds
pop
mov
lock
sbb
fs
and
lret
lods
or
sbb
or
pop
ret
jp
adc
and
into
jecxz
out
shll
cmp
mov
dec
jle
out
xorl
lea
leave
nop
or
test
lahf
int
xchg
cmp
fxam
jle
cmp
shlb
adc
cmp
mov
imul
mov
push
inc
repnz
loop
fidivs
mov
aad
gs
add
fisubrs
sbb
dec
lcall
mov
jp
pop
and
int3
xchg
push
mov
sbb
ljmp
sub
shrb
int
arpl
ret
lret
idivl
outsl
test
loop
fdivrl
pop
fistl
xchg
loop
sbb
sahf
sbb
and
push
or
cmp
jmp
adcl
inc
inc
sbb
xor
push
or
je
ret
imul
scas
dec
xchg
dec
inc
into
inc
adc
mov
jle
mov
mov
sbb
pop
scas
push
jmp
cmp
cmpsl
add
mov
bound
into
sub
mov
xor
dec
ret
jg
int
negb
mov
pop
pop
mov
out
push
push
orl
sbb
or
dec
push
ja
ss
pop
push
mov
lcall
fsubs
mov
es
sub
pop
mov
imul
add
cmovnp
push
inc
sbb
js
jg
mov
dec
mov
xor
push
popa
xor
mov
scas
sub
ljmp
lea
imul
add
lods
cltd
into
lea
aam
inc
mov
insb
pop
lock
std
hlt
sub
fsub
dec
lret
push
mov
pop
pop
cmpsl
inc
sbb
out
out
int3
xchg
in
jecxz
jbe
leave
jecxz
hlt
aad
jnp
mov
mov
jae
aaa
xor
pop
cmp
or
test
pop
and
mov
sub
jns
xor
xadd
imul
test
jae
test
sub
pop
sub
clc
cmpsl
lds
sub
cmc
into
test
fadd
sbb
fisttps
fcompl
adc
repnz
cli
sbb
dec
js
push
in
inc
dec
andb
les
or
xchg
jmp
loopne
cld
loope
xor
enter
int
lret
add
cli
frstor
lahf
dec
pcmpeqw
hlt
sub
data16
adc
sbb
push
inc
inc
std
xor
arpl
jbe
ds
or
enter
push
in
add
sub
dec
adc
ret
add
add
xorb
mov
fdivr
ret
imul
push
movsl
jp
jl
stos
arpl
lahf
jmp
ds
mov
cwtl
adc
jle
movsb
jmp
ficompl
scas
cmp
mov
mov
push
aas
insb
pop
mov
lea
fisubl
and
shlb
push
bound
jmp
sbb
xchg
cmp
jecxz
rorb
in
insb
cltd
xchg
out
push
pop
lcall
aaa
sub
mov
test
cmp
add
pop
sub
aas
fstpt
idivl
je
xor
or
int3
es
aas
insb
std
pop
inc
or
inc
cmp
mov
sti
or
ret
js
cmpsb
and
adc
scas
sub
sub
add
adc
and
xchg
jmp
push
mov
mov
mov
rorb
imul
out
das
push
dec
push
out
bound
jne
stc
lret
insb
xor
lcall
xor
inc
lock
aas
pop
cld
xchg
cmp
scas
roll
lcall
filds
call
lret
cld
push
sbb
sub
push
movsl
or
jne
adc
arpl
lock
inc
shlb
iret
sarb
add
pop
lock
jecxz
push
push
jg
xlat
pop
jo
enter
inc
jmp
bound
adc
gs
sbb
nop
sbb
dec
add
mov
movl
dec
cmp
pop
mov
sub
cmc
in
les
inc
xor
inc
sbb
rol
jg
push
sbb
xchg
data16
jl
add
mov
push
or
xchg
popf
push
sub
mov
jp
outsb
cwtl
call
movb
pop
or
push
ja
adc
or
daa
mov
and
out
pushf
nop
jge
jo
mov
mov
jae
adc
xchg
mov
aam
pop
test
es
loopne
dec
adc
mov
pop
into
push
in
inc
add
push
pop
jbe
cmp
hlt
mov
pop
rcr
mov
push
adcl
inc
add
stos
leave
fwait
mov
in
pop
lods
ljmp
scas
pushw
jbe
nop
adc
daa
popa
stos
jle
lahf
repnz
aas
xor
icebp
lea
push
mov
and
lock
cmc
lcall
adc
mov
or
sub
ficompl
stc
jne
test
push
xchg
pop
outsl
lcall
aaa
out
mov
in
stc
pop
cmc
loop
out
and
mov
mov
add
stos
xchg
imul
dec
xchg
push
mov
mov
addr16
in
cmpsb
insl
and
push
stos
xchg
xchg
ds
data16
dec
jge
stos
sbb
rolb
cmp
or
icebp
outsl
outsb
sarb
lea
mov
pop
inc
inc
xchg
mov
mov
xor
xor
pop
sbb
add
sbbb
cmp
xchg
fistps
and
lahf
jmp
fistps
mov
jno
push
aaa
stc
sub
push
repnz
mov
bound
mov
arpl
mov
lock
jle
adc
mov
shrl
sub
arpl
sahf
test
inc
mov
shll
pop
jg
mov
sub
bound
add
ljmp
fadds
popa
xchg
pop
add
mov
and
aas
stos
add
mov
cmp
and
adc
adc
and
in
mov
and
cwtl
sub
les
ret
cwtl
lods
cmp
lret
addr16
push
imul
shl
xor
les
mov
shll
iret
push
cli
jae
mov
sarb
dec
andl
xchg
insb
xchg
fstl
mov
sub
addr16
je
rol
ss
std
movsl
jg
loop
arpl
mov
mov
test
divl
pop
pop
jbe
cmpb
sar
sti
pop
ds
cli
sub
pushf
inc
and
jge
inc
mov
push
fcomps
pusha
dec
add
or
or
clc
mov
xchg
mov
cmp
bound
cmp
push
jae
adc
jmp
rdseed
sub
push
repnz
mov
cltd
push
ffreep
inc
out
push
dec
out
insl
jbe
sbb
enter
cmp
ljmp
sub
out
push
fs
mov
adc
stc
sbb
cmp
dec
sbb
sub
and
rorl
jo
and
fdivs
add
mov
and
or
inc
outsl
scas
mov
das
mov
jle
sub
in
xchg
js
mov
test
sbb
mov
pop
bound
fwait
into
mov
enter
sbb
movb
fbld
or
ja
jp
dec
jecxz
test
dec
test
push
fsubrs
jns
lock
sbb
jmp
inc
jno
pop
sub
mov
xor
adc
pop
push
nop
sub
push
xor
iret
cltd
jl
mov
dec
mov
out
out
fdivrl
fcoms
flds
adc
neg
aas
jno
fstpl
adc
pushf
push
cmp
push
hlt
lea
arpl
adc
shrb
sub
cmp
loop
jnp
jbe
ret
pop
xchg
xlat
adc
lahf
dec
repnz
xor
pop
push
insl
adc
xor
cmpsl
daa
rorb
jle
inc
xchg
mov
sbb
movsl
arpl
and
subl
mov
aad
pusha
cmp
int3
idivb
xchg
aad
pop
vmread
psubusb
fisubl
nop
or
fdiv
orb
ja
repz
sbb
mulb
fwait
pop
stc
inc
fst
dec
mov
insl
jmp
mov
or
sahf
iret
pop
sti
push
mov
add
lods
fstps
mov
outsl
cmp
pusha
in
sub
lock
mov
xlat
aam
pop
mov
mov
add
xchg
mov
sub
push
leavew
mov
fcomps
clc
adc
sub
pop
out
jbe
pusha
xor
adc
cmpsl
insl
in
lods
popa
repnz
cli
lret
cmp
pop
push
subb
pop
cmpsl
lret
mov
lcall
push
jb
adc
pop
mov
dec
sti
lret
popa
or
mov
enter
int
inc
fsubl
int3
jge
in
mov
inc
cmp
cmpsl
dec
divb
pusha
lret
outsl
cmp
daa
pop
jle
les
inc
dec
push
shll
lock
add
sub
pop
es
jp
and
mov
sbb
xor
loope
sbb
aaa
gs
test
pop
cmpsb
cmc
jns
cli
or
and
mov
and
push
and
ret
bound
into
fcmovnu
inc
mov
aaa
shl
faddl
sbb
pop
call
xchg
and
or
in
loop
orb
idivb
sbb
pop
aaa
repz
and
dec
push
mov
mov
adc
add
dec
xchg
add
subb
data16
jns
loope
shl
jo
pop
jl
cmp
xor
xchg
neg
dec
icebp
repz
int
mov
int3
sub
jp
pop
jle
lods
je
in
adc
adc
xchg
xorl
lea
sbb
xchg
out
cmpsb
clc
out
in
test
rolb
sbb
mov
and
add
out
ja
mov
xor
negb
adc
cmp
lods
inc
rorl
inc
shl
in
push
dec
out
cmp
jl
dec
out
mov
add
mov
xlat
push
mov
idiv
sbb
into
mov
jecxz
ds
les
inc
fbld
jecxz
adc
ret
add
add
loope
cmp
pop
addl
lcall
out
call
mov
movsb
scas
lcall
fs
in
aaa
stc
mov
jb
xchg
sbbl
lock
inc
sahf
dec
mov
cmp
into
lea
ljmp
and
pop
cli
cltd
les
sub
stos
mov
pop
stos
mov
mov
push
add
sbb
add
pop
inc
push
cmc
loopne
subb
xor
in
dec
push
xor
adc
pop
dec
shlb
push
shl
adc
jecxz
mov
adc
push
pushf
cli
push
mov
or
xchg
mov
cli
das
xchg
movsl
bnd
mov
dec
pop
clc
stos
fistl
push
in
cli
sub
mov
subl
push
in
push
fstpl
or
mov
fstpt
out
adc
add
cli
js
pop
iret
sub
push
or
test
hlt
sti
or
cli
out
inc
pop
xor
iret
xor
add
ror
in
stos
or
jg
mov
cmpsl
and
and
inc
scas
outsb
mov
adc
subb
add
cmp
add
adc
rolb
dec
jecxz
sbb
js
push
sar
jge
insb
ja
mov
xorb
pop
sbb
cs
push
mov
push
mov
push
scas
add
add
or
aad
jb
xchg
mov
fidivrs
mov
andb
and
out
mov
call
sbb
sbb
adc
sti
shlb
mov
jecxz
xchg
xor
inc
inc
adc
out
pop
movsb
pop
repnz
adc
cmpsl
notrack
mov
lret
pop
lcall
and
xchg
lret
push
adc
je
and
fldenv
pop
xlat
xor
popa
fwait
lahf
cltd
mov
sub
aad
gs
scas
jnp
mov
popl
movsl
lds
shll
ret
repnz
mov
jge
insl
mov
cmp
ds
jle
inc
dec
xchg
ret
xlat
xchg
test
das
jg
insb
nop
inc
in
ds
mov
mov
lds
scas
or
das
mov
sub
in
push
jb
mov
fldcw
sbb
sbb
dec
xchg
xor
into
fstl
popa
int
pop
lea
ret
mov
insl
adc
call
out
jb
fisubrl
xor
sbb
testb
cli
add
mov
in
cmp
pop
push
addr16
inc
sub
mov
sbb
loopne
rcrl
xchg
loop
mov
and
adc
mov
cmp
jge
or
loope
jp
lret
inc
mov
cmp
cmp
inc
adc
add
fs
adc
inc
mov
inc
jg
rcll
add
cmp
clc
in
inc
insb
sbb
mov
testb
test
mov
and
and
cmc
cwtl
dec
jecxz
adc
les
cwtl
push
mov
jbe
loopne
scas
rcl
xchg
cwtl
inc
cmp
jmp
xchg
jmp
pop
adc
sahf
lret
sub
xchg
add
pop
dec
stos
jns
stos
clc
dec
mov
stc
addr16
sbb
dec
lock
jae
cmc
jo
incl
orl
dec
leave
aas
mov
ja
pop
xor
mov
add
sar
cs
adc
add
jmp
in
pop
mov
test
pop
or
aas
imul
gs
out
or
jb
adc
vmovsd
add
cwtl
das
call
stos
in
popf
mov
sbb
cmc
cmpsl
scas
xchg
jbe
into
lcall
in
andl
push
push
adc
dec
fs
inc
pop
fdivrl
call
mov
fildl
mov
mov
int3
nop
sbb
in
mov
arpl
int
mov
aam
push
cmp
push
ljmp
hlt
popa
xchg
sub
push
popf
icebp
je
mov
cmp
add
pop
out
mov
test
clc
add
leave
lods
faddl
mov
out
insb
adc
in
loop
xlat
lahf
jge
xlat
and
mov
mov
lea
pop
mov
push
xor
pop
or
and
adc
add
cmp
sbb
jo
stos
lahf
jecxz
xchg
mov
push
add
andl
xor
xor
jne
xor
pop
jg
fsubs
stc
inc
data16
pop
icebp
loope
iret
rcll
fnstcw
idivl
divl
jb
insb
stos
outsb
xlat
pop
mov
or
ret
adc
adc
inc
pop
or
stos
addl
mov
js
sbb
cltd
sub
les
enter
mov
idivl
stc
push
adc
sub
adc
mull
mov
push
std
stos
sbb
lret
insl
pop
sbb
fists
sub
adc
cmp
dec
lret
jecxz
inc
xor
enter
jb
and
inc
push
mov
jnp
inc
shrb
push
testb
dec
or
mov
in
cwtl
sub
rolb
inc
jo
pusha
mov
push
sub
xchg
stos
xchg
mov
movsb
xlat
std
inc
push
out
aaa
sbb
int3
dec
jb
ds
fptan
push
lcall
xor
scas
jb
jae
mov
inc
mov
leave
test
push
arpl
jl
push
jp
dec
mov
outsl
dec
or
jns
xor
mov
rcll
iret
xchg
add
mov
sbb
sub
bound
push
cli
out
add
cmp
div
mov
cltd
jae
aas
cmp
and
jge
jns
ret
adc
cwtl
xchg
dec
sbb
inc
jmp
mov
rcl
mov
test
sti
xor
mov
movsb
fwait
fsubrs
add
mov
shlb
outsb
subl
cld
fst
lret
sub
push
xor
mov
and
mov
xor
cmpsl
mov
test
xchg
dec
jmp
shll
mov
jmp
push
add
ret
in
add
pop
sahf
mov
xchg
and
dec
or
mov
inc
push
push
ficoml
dec
std
mov
or
inc
cmpsl
adc
push
add
leave
ret
push
push
mov
mov
and
shrb
xchg
sarb
mov
enter
das
mov
inc
mov
or
pop
js
ljmp
xor
push
imul
inc
ss
mov
rcrb
mov
mov
mov
ds
sbb
imul
or
xchg
rclb
xlat
insb
pop
lret
iret
ja
pushf
dec
or
push
mov
cmp
adc
push
cmp
jecxz
dec
mov
aaa
mov
push
or
adc
lock
mov
jbe,pn
push
lods
test
mov
jmp
push
dec
popf
mov
push
jecxz
xchg
mov
xlat
add
pop
sub
push
push
adc
and
fcompl
mov
and
idivb
mov
addr16
out
insb
ljmp
js
adc
push
cmp
sar
xchg
scas
mov
test
mov
jbe
iret
sbb
xor
out
mov
jae
jl
test
push
lods
js
mov
jnp
rcll
or
cmp
imul
int3
push
out
mov
mov
pop
cmp
out
pop
add
leave
das
push
mov
cmpsl
push
mov
xor
jecxz
mov
lods
sub
adc
mov
xor
push
addr16
addl
mov
loope
push
pop
pop
lcall
mov
xor
ljmp
push
add
push
mov
lahf
js
fs
mov
icebp
jle
test
pop
jae
repnz
dec
mov
xchg
ret
mov
gs
jne
outsb
and
imull
pop
cmp
sbb
xchg
test
ret
shll
cltd
push
stc
pushf
and
xchg
jle
inc
mov
dec
mov
add
jp
jo
loopne
and
fdivrs
mov
jnp
insl
adc
in
mov
mov
and
mov
mov
pushf
adc
dec
shl
sbb
dec
dec
int3
push
sarl
xchg
push
ficomps
xchg
xchg
jbe
sbb
xchg
jno
iret
in
xor
adc
push
inc
icebp
rcrb
add
jle
and
cmp
ss
aam
or
test
and
rclb
and
mov
ja
xchg
ja
xor
mov
jp
sbb
loopne
mov
ret
xchg
inc
lods
je
adc
aam
leave
xchg
fdivl
mov
scas
lret
xor
dec
cmp
sub
jbe
dec
jmp
das
lret
test
xor
cwtl
call
rorb
orb
xchg
mov
push
jmp
sbb
outsl
dec
jnp
mov
jmp
out
jns
lsl
out
bound
add
repz
adc
xor
pusha
insl
idiv
mov
sub
adc
dec
or
clc
cmp
push
lahf
icebp
scas
int3
mov
sbb
adc
ret
jb
cmpsl
aaa
dec
subb
imulb
xchg
inc
ljmp
mov
sbb
adc
aas
mov
scas
ror
loopne
mov
and
add
mov
mov
add
gs
cmp
sarl
into
cmc
mov
push
push
cmp
hlt
and
popa
or
adc
lea
fidivrl
into
jecxz
insl
popl
adc
sbb
loope
cs
add
cmpb
and
sub
sub
sub
stos
dec
addl
icebp
push
jecxz
mov
cmp
fildll
add
int
orb
push
daa
stos
inc
and
add
ret
mov
mov
dec
cmp
push
dec
adc
rcll
test
scas
in
aad
jbe
addr16
es
cmp
push
sub
jmp
call
scas
out
adc
scas
scas
or
loop
rcrl
js
orb
test
out
mov
xor
add
ja
or
or
inc
and
out
addb
xor
push
cmp
mov
sti
or
push
fsubr
sub
das
xchg
cld
sti
mov
add
fstpl
mov
fsubrl
call
xchg
int3
mov
and
pop
sub
add
pop
aam
or
push
push
into
and
mov
fistpl
stos
mov
push
push
jns
insb
out
idivl
dec
rolb
sub
in
into
push
fwait
ret
movsb
fstpl
scas
cmp
add
add
loop
inc
add
jp
aaa
mov
mov
lahf
mov
xchg
sahf
lea
fcmovnbe
rcrb
or
mov
in
fcoml
sbb
xchg
pop
mov
pop
data16
es
aam
sub
pop
sub
mov
sarb
xor
shl
mov
cmp
push
sbb
icebp
mov
lret
sbb
loop
enter
add
pop
fdiv
fistpl
fdivrs
dec
or
lret
push
scas
pop
cli
mov
push
mov
popf
aad
aas
jg
sahf
xchg
sbb
lds
movsl
scas
push
lock
fistps
or
mov
in
and
clc
popf
mov
lcall
add
fstl
imul
mov
cmp
notb
cmp
pop
push
add
cmp
js,pt
shrb
sub
into
xor
mov
test
stos
jb
sarb
mov
adc
cmpsl
cmp
push
pop
push
movsl
sbb
xor
lock
sub
dec
cld
adc
push
dec
add
jmp
loopne
sub
add
add
mov
xchg
stos
dec
push
sub
pop
dec
insl
out
sub
dec
enter
cmp
xor
xchg
cmpsb
loope
insl
push
add
sbb
into
bound
outsb
lods
sbb
and
cmp
pop
sti
movsl
jl
jg
aas
shlb
cwtl
inc
jge
das
adcb
ss
xchg
in
fcmovne
sub
fstl
add
movsb
mov
orb
popf
or
and
sbb
mov
sub
cld
dec
test
pop
inc
mov
loop
jb
stos
std
movsb
scas
add
jb
sbbl
sarl
sub
fs
dec
xchg
pop
aas
inc
adc
mov
add
mov
loopne
filds
sbb
repnz
mov
inc
in
and
jge
test
loop
adc
testb
push
inc
and
fnstsw
inc
or
sbb
jg
xchg
dec
int
mov
leave
repnz
jns
jo
int
mov
push
in
jae
movzbl
xor
pop
aas
xchg
cs
add
pop
jg
inc
pop
shlb
pop
xchg
je
mov
movsl
fldcw
sarl
add
adc
pushf
jb
sbb
insl
test
cmc
jae
pop
outsb
in
dec
mov
push
inc
mov
pop
cmp
jmp
pushf
lcall
gs
sbb
jb
mov
push
and
dec
stos
andb
mov
and
call
sub
jae
lea
adc
add
jbe
int
push
dec
jnp
jl
pop
lcall
add
push
xor
js
sbb
xor
mov
mov
push
cmp
cld
push
icebp
ljmp
sub
pushw
cmp
or
js
or
fwait
dec
cmp
mov
or
mov
fdivrp
sbb
int
jno
sbb
adc
sahf
cwtl
ja
xchg
iret
push
shlb
jg
inc
fnstcw
sbb
aas
sbb
sub
push
aas
mov
lds
aaa
jl
adc
rcrb
push
sub
mov
fildl
jbe
inc
lahf
in
sti
js
out
mov
push
inc
stc
lret
fxch
push
mov
adc
movl
mov
inc
adc
add
xchg
jbe
or
adcl
push
sub
xchg
lret
mov
cmp
mov
adcl
nop
and
inc
pop
jnp
adc
dec
mov
imul
loopne
jbe
outsl
cmc
faddl
aas
arpl
fldenv
or
jle
inc
mov
addr16
sbb
lods
popa
test
adc
stos
ds
repz
cmpsb
jmp
xchg
in
hlt
inc
scas
cmp
pushf
lcall
sarl
dec
sahf
mov
add
or
and
iret
sub
push
dec
mov
rcrb
xlat
mov
cmpsl
ficoms
pop
mov
inc
and
sahf
add
outsb
clc
jp
push
pop
cmc
aaa
mov
shll
add
ficoms
jmp
add
xlat
in
repz
adc
sahf
adc
mov
lock
test
ret
or
test
inc
lcall
popf
repz
mov
test
pop
lret
xor
repnz
dec
test
repz
jae
or
loopne
cmp
and
lds
inc
aas
cmc
shrb
mov
fsubrp
push
das
movsl
push
arpl
push
inc
adc
loope
mov
pop
sbb
and
cmp
repz
pop
add
add
es
pop
cmpsl
jg
sub
sti
fs
enter
mov
jmp
mov
adc
outsb
cwtl
sub
sahf
sbb
mov
lods
loop
push
mov
pop
test
gs
jne
sub
sbb
sub
call
mov
sbb
pop
pop
jmp
inc
lods
push
xor
mov
sbb
pop
fldcw
mov
or
xorb
repz
sub
cmpl
xlat
ss
and
clc
mov
scas
lahf
xor
xchg
cmp
xor
pop
xchg
or
push
fdiv
or
int
imul
sbb
inc
imul
mov
fwait
in
ret
xor
adc
test
mov
push
sbb
faddl
or
test
in
lds
push
mov
push
ja
fdivrl
imul
lret
fdiv
enter
xchg
fsubs
fmull
mov
jbe
dec
hlt
jecxz
pop
fimuls
mov
sti
stos
mov
push
or
push
insb
pop
out
dec
mov
push
mov
and
xchg
jp
xorb
imul
jo
stos
mov
mov
cmp
add
cmp
xor
fidivs
jne
lea
mov
xor
fidivrs
mov
insl
jp
les
sub
into
sti
sbb
mov
sub
cmc
sti
sbb
or
jo
pop
or
in
pushf
and
cmpsl
and
sub
xchg
mov
and
fistps
mov
aas
and
call
lret
xchg
dec
add
lock
dec
stos
scas
decl
mov
jae
xor
mov
jbe
ror
jno
lock
fiaddl
mov
add
jg
jp
xchg
out
pop
orb
adc
stc
rol
repnz
pop
xchg
xor
aas
repnz
add
xor
push
das
int
fildll
inc
add
jns
loop
jbe
lcall
aad
stc
and
lock
int
mov
lahf
repnz
push
lock
in
xchg
jmp
or
sti
fisubrs
sar
jb
in
inc
jae
dec
fucomip
dec
adc
pop
insb
scas
jl
mov
add
ss
out
sub
rcrb
mov
mov
sub
push
jno
rcrl
out
popf
icebp
insl
push
test
cld
loope
bound
xor
cs
aam
ja
jmp
push
mov
push
push
sub
aas
xlat
inc
mov
xor
push
leave
mov
fimuls
lea
das
roll
insl
shlb
fisttps
xor
in
mov
jb
dec
xchg
fstpt
sub
pop
inc
jl
pusha
sbb
pushf
pop
dec
jae
adc
imul
mov
mov
and
push
mov
inc
fdivp
jne
pop
adcl
xor
jmp
inc
sub
cli
sub
es
pop
or
cmpsl
loope
mov
dec
lods
cmpsb
nop
pop
mov
adc
pop
lahf
xchg
test
xlat
cmpsb
dec
sti
pop
cli
cmp
jbe
call
mov
jl
iret
dec
and
ret
iret
xchg
dec
pop
push
and
cld
push
or
das
pop
rcrl
or
push
rcrl
pop
pop
lret
mov
xchg
out
hlt
xor
fs
cli
pop
es
sub
dec
pop
fwait
or
filds
and
pop
data16
or
dec
cld
xor
pop
aam
jb
mov
sub
inc
sub
or
data16
sahf
icebp
dec
rcll
ss
addb
mov
fnstcw
push
imul
adc
testb
jmp
roll
and
xlat
shrb
dec
adc
mov
bound
push
sbb
pop
sbb
xchg
call
pushf
mov
xchg
les
push
mov
push
icebp
ja
fiadds
push
je
mov
test
ljmp
jp
jo
int3
js
jae
movsl
xorb
lods
mov
icebp
or
mov
hlt
les
mov
mov
das
pop
sub
fimull
imul
push
sub
je
and
mov
arpl
call
mov
jns
fisubrs
mov
stos
cmp
jns
pusha
jbe
mov
out
pop
lds
push
mov
in
out
and
sbb
sahf
lea
jge
mov
sti
ret
adc
mov
push
xor
arpl
pop
loopw
popf
jg
icebp
gs
mov
fnsave
scas
xchg
lock
and
mov
inc
adc
leave
mov
mov
jbe
ss
sbb
stos
or
insb
inc
inc
sub
lock
lock
aas
push
test
cs
xor
or
rcrl
inc
in
xchg
leave
push
ljmp
lods
aas
jge
lcall
sub
std
insl
xchg
xlat
in
hlt
aas
adc
std
in
int
sbb
inc
xor
add
gs
sbb
call
ds
daa
sbb
dec
faddp
jecxz
lock
pop
inc
ljmp
iret
jecxz
movsb
in
clc
nop
xlat
cmp
push
dec
inc
sbb
andl
xor
lock
cltd
movsl
in
mov
cmp
fs
sub
dec
movsb
jno
dec
jne
test
pcmpeqd
pop
mov
mov
jns
adc
and
test
dec
int
lahf
and
popf
dec
push
cli
fdivl
lods
sbb
adcl
and
and
ret
pushl
jecxz
and
pop
xchg
mov
pop
negl
jnp
add
ljmp
jge
jmp
in
sahf
xchg
scas
mov
les
aam
and
push
and
es
sti
sub
mov
out
cmpsb
stos
gs
in
jle
pop
sub
mov
xchg
mov
fcomps
test
mov
jo
sti
cs
sahf
or
jns
les
mov
push
jb
push
pop
sbb
cmp
and
fiadds
xchg
xchg
fwait
add
popf
subb
fists
or
repz
in
sbb
stc
cld
mov
xchg
add
outsb
mov
repz
cmp
lret
js,pt
push
cmp
push
stc
jmp
das
outsl
push
dec
in
out
dec
out
xchg
lods
pop
fiaddl
andl
xchg
push
fimull
sub
or
push
cs
adc
jno
fstpl
mov
xchg
inc
in
dec
in
sub
xchg
insb
sbb
mov
push
lcall
incb
je
jmp
and
mov
repnz
add
adc
add
jbe
outsb
add
dec
stc
cmp
lret
ss
sbb
jmp
ds
add
cli
cmp
cmpsl
push
pop
mov
mov
insb
movsb
mov
xchg
mov
in
repz
lret
aam
icebp
ja
dec
adc
outsl
add
ljmp
mov
movsb
mov
test
dec
dec
loop
clc
pop
adc
cmp
scas
jo
je
dec
ds
mov
push
xor
xlat
les
or
mov
add
or
fs
inc
cmc
pop
insl
mov
loop
outsb
adc
mov
jb
cltd
fcoml
insl
aad
dec
inc
repz
dec
jbe
mov
push
roll
dec
ljmp
outsl
or
mov
ret
add
push
repnz
dec
dec
jp
ret
pop
xchg
mov
add
aaa
mov
mov
loope
mov
sbb
aaa
dec
lods
jne
and
jg
and
dec
imull
lods
test
out
or
inc
and
jno
ds
mov
or
or
loope
daa
flds
and
pop
ja
icebp
sbb
pushf
std
lock
mov
fwait
xchg
popa
outsl
lock
sahf
sbb
out
scas
xor
out
push
repz
cmpsb
mov
fcompl
xchg
loopne
add
sub
es
mov
mov
dec
inc
pop
mov
imul
xor
dec
push
lcall
cmc
filds
popa
pop
insl
div
scas
ffree
cmp
out
push
bound
test
enter
xor
mov
xchg
inc
jns
ja
scas
iret
pop
mov
cmp
shrd
xchg
ss
xor
inc
movsb
mov
xchg
pop
daa
add
xchg
hlt
sub
lea
sbbl
leave
sub
dec
stos
cwtl
cld
test
push
xorb
pop
inc
cli
pop
out
cmp
mov
sbb
shl
adc
mov
add
rcrb
dec
xor
add
outsl
xchg
jne
cs
add
push
stc
jae
popa
xchg
in
dec
leave
or
cmp
orb
xor
cmp
icebp
cmp
inc
jno
sahf
mov
sbb
popa
push
outsb
scas
loopew
loope
repz
pop
pop
cmp
add
out
push
hlt
xlat
cmp
pop
xchg
sbb
mov
jle
lods
lret
movsl
fnsave
xchg
inc
aad
std
mov
inc
push
cld
sub
cli
push
sub
sub
mov
and
dec
mov
insb
rcl
inc
pop
sbb
mov
pop
and
movsb
cld
scas
push
push
xchg
shll
and
pop
and
xchg
xor
xchg
inc
mov
adc
or
lods
push
inc
pusha
dec
add
imul
fisttps
hlt
adc
mov
add
roll
or
mov
sub
cld
xchg
add
arpl
jae
pop
addb
fisubs
dec
fstl
jae
jg
fcoml
clc
sub
xor
ja
in
jne
insb
xchg
popa
movsb
rclb
lret
inc
cmp
movsl
fsubs
in
lods
fisttpll
aaa
in
scas
jmp
inc
rcll
and
or
outsl
cmc
sbb
scas
pop
enter
out
ror
loope
outsb
mov
out
xchg
sbb
clc
jmp
shll
call
or
ret
pop
cmp
mov
mov
pop
mov
xor
imulb
hlt
or
pop
cwtl
mov
mov
inc
hlt
add
lcall
xchg
mov
arpl
jo
or
mov
cmp
and
add
incl
movl
pop
jmp
lods
xchg
jecxz
stos
jg
push
es
add
outsb
cmc
and
outsl
popa
stos
cmpsb
sub
cmp
mov
clc
add
xorb
xor
xlat
adc
mov
and
dec
aaa
notl
shl
bound
xchg
dec
add
add
scas
xor
movsb
mov
cs
xchg
cmp
jp
sub
adc
rcrl
cmp
hlt
sbbb
ret
inc
pop
mov
mov
or
bound
incl
ret
dec
push
movsl
enter
inc
js
outsl
add
rcll
lea
or
mov
or
jp
or
cmp
shlb
mov
sub
insl
insl
ret
fnsave
mov
cmp
sbb
mov
or
jns
out
mov
cltd
lahf
dec
push
mov
movsb
add
shlb
jae
aas
push
dec
sbbb
pop
fiadds
and
mov
jnp
das
pusha
mov
dec
sub
mov
lods
sahf
test
dec
fistl
cmc
mov
add
add
mov
mov
dec
int
jbe
xchg
lahf
push
jle
ret
into
inc
push
fildll
inc
sbb
mov
outsl
fs
loopne
popa
out
inc
adc
mov
fwait
dec
pxor
outsb
arpl
daa
pop
jmp
xlat
ds
xchg
movsl
mov
xchg
fwait
lds
xchg
je
lret
pop
in
faddp
inc
lods
mov
psubd
pop
daa
add
shll
push
jecxz
push
movsl
xor
add
jb
mov
dec
daa
mov
cmp
ds
fnstsw
daa
insb
negb
pop
out
adc
jno
test
movsl
cltd
add
daa
call
or
sub
icebp
dec
xchg
call
aaa
je
aad
cltd
ja
adc
jns
dec
sbb
push
jp
push
pushf
or
ljmp
test
lds
fists
jo
ret
mov
dec
cmpsl
mov
cmpsb
inc
pop
xchg
sbb
out
mov
lods
mov
popf
pop
pop
cs
ja
mov
bound
sbb
outsb
xlat
dec
mov
or
adc
sub
cmp
push
mov
jae
or
leave
mov
rcr
inc
jae
popa
jmp
lock
dec
xor
inc
icebp
add
jno
jb
je
enter
jo
insl
out
or
mov
outsl
push
cmp
jge
adc
roll
sub
in
mov
jno
std
popf
dec
lock
mov
jl
mov
xchg
push
mov
imul
dec
mov
gs
mov
mov
repz
repnz
lea
je
sbb
push
push
adc
inc
fists
scas
daa
ds
mov
addr16
sbb
xor
jp
add
ljmp
cltd
addr16
es
push
loop
je
stos
add
cmpb
inc
xchg
and
dec
out
fimuls
lds
sarl
xchg
add
lock
mov
stos
xchg
inc
aaa
nop
test
jb
cmc
jb
fs
cmp
in
sub
push
push
pslld
mov
out
aam
pop
lea
clc
and
in
xchg
push
jmp
mov
and
sub
xor
push
xchg
mov
js
jae
popf
bound
or
push
sbb
ret
data16
popa
xchg
out
stos
xchg
icebp
xchg
pop
cmp
std
push
push
jmp
sub
xchg
xchg
movsl
push
pslld
pusha
jae
or
mov
dec
sbb
jecxz
sbb
js
sub
xor
hlt
or
fstps
loope
xor
lret
push
into
movsb
jb
ret
out
jl
mov
mov
pop
stos
fsqrt
pop
jmp
xlat
sub
or
das
push
jno
lahf
std
xchg
mov
repnz
in
mov
pop
jmp
adc
cmpsl
and
mov
aam
imul
cmpsl
out
jecxz
movsb
mov
mov
or
xor
test
xor
lret
add
mov
aaa
call
mov
xor
jne
push
push
push
lock
xchg
cmp
lods
in
mov
decb
xchg
adc
dec
cli
shl
fnstenv
push
test
pop
shrb
in
stos
mov
jo
fcmovnbe
movsl
pop
push
mov
fdivr
xor
shl
mov
sbbl
arpl
jge
cld
jp
ret
jns
and
out
and
and
jo
enter
repnz
leave
movsb
fldt
push
pop
mov
repz
xchg
xchg
and
or
add
jb
add
push
sbb
adc
cwtl
in
xor
push
insl
lock
mov
loop
adc
sub
repnz
dec
scas
shrb
inc
add
push
imul
imul
sbbb
mov
out
shll
cmp
ret
rcrb
les
shlb
into
gs
adc
mov
negb
bound
sbb
push
in
push
stos
mov
sbb
xchg
xchg
push
imul
pop
jnp
mov
or
mov
pushf
push
cld
cmc
push
clc
dec
pop
xchg
xorl
lds
push
mov
jnp
jae
jge
pop
push
sbb
notb
js
lret
fiadds
ljmp
dec
lret
clc
int3
cs
sahf
loop
stos
test
adc
sbb
out
fistps
cmp
shlb
ljmp
clc
vmwrite
scas
mov
jae
mov
jb
xor
or
pop
mov
xchg
dec
loopne
sub
rcr
out
pcmpgtd
cmp
mov
pop
sbb
pop
jo
movsl
sub
push
xor
repz
cmpsl
mov
push
imul
hlt
out
into
bound
or
pop
int
or
sub
mov
popf
std
mov
lahf
sbb
lock
push
cmp
and
cmp
scas
out
test
loop
dec
adc
ljmp
mov
cmp
and
jmp
iret
inc
sub
adc
hlt
xchg
test
rcll
stos
and
dec
popf
jbe
mov
cmpsl
adc
pusha
inc
popf
aam
cmc
adc
je
xor
pop
push
cwtl
push
push
push
rclb
mov
xchg
cmpsl
mov
lock
xchg
push
in
lahf
and
xchg
les
mov
xor
push
cmp
jp
aaa
sbb
out
cmp
shrb
fildl
mull
sti
outsl
mov
mov
iret
add
adc
fsubr
aad
sbb
mov
mulb
sbb
movsb
lcall
pusha
dec
inc
ja
sbb
dec
mov
roll
sbb
movsl
push
scas
pushl
mov
jo
int3
lods
stc
jne
sbb
xchg
je
popf
leave
aaa
push
inc
fcompl
mov
dec
mov
into
pop
cmp
jp
test
add
pop
sbb
mov
fsubrs
or
add
jo
popf
pop
cmp
call
add
jmp
mov
inc
mov
and
loopne
lea
cltd
lea
push
fisubs
ja
aas
ss
loope
push
dec
inc
shlb
pusha
pop
aas
mov
mov
mov
jno
dec
test
mov
lahf
cld
lret
push
sub
test
nop
jo
inc
cmpsl
pop
push
push
scas
loopne
leave
cmpsl
ret
push
or
jnp
sbbb
inc
cmpsb
mov
cmpb
xlat
faddl
cs
sbb
or
sti
cmpsb
jge
adcb
xchg
int3
lea
rol
inc
inc
xchg
mulb
cmp
int
mov
jmp
sbb
mov
push
mov
popf
xorb
movsb
cmc
pop
mov
stos
pop
push
int3
cld
jge
mov
test
call
jge
outsl
jnp
aam
mov
int
sbb
or
add
aam
lahf
pop
rcrl
mov
fiaddl
je
int3
xor
stos
pushf
push
cmp
lods
mov
xor
jecxz
push
mov
loopne
sub
dec
lea
outsl
push
jnp
repnz
out
push
lret
setb
xchg
bound
mov
imulb
sub
dec
addb
sub
movsb
cmp
pop
sbb
pop
mov
add
cmc
rcl
add
inc
into
jmp
dec
mov
mov
xchg
mov
push
push
shrb
insb
ljmp
jae
add
pop
push
rorl
xchg
pop
scas
loopne
ljmp
add
push
addr16
ja
push
out
sti
and
xchg
rcrl
jmp
xchg
adcl
fisttps
and
mov
test
xlat
in
loop
scas
cmp
push
aas
pop
je
aad
std
push
fs
insb
mov
pop
ficompl
or
push
fisttpl
fsts
and
loope
jge
dec
add
in
fs
addr16
mov
stos
add
icebp
mov
inc
fs
cmpsw
arpl
adc
mulb
push
push
in
xchg
jmp
test
fldt
imul
imul
adc
ret
or
lds
pop
pop
int3
or
jae
pop
cli
shl
and
rcl
mov
cmp
imul
dec
sbbl
mov
or
popa
sub
inc
cmc
hlt
sub
jge
and
add
add
test
pop
sub
add
sarl
mov
ljmp
stos
push
lret
xchg
inc
pop
ret
sbbl
jl
mov
lods
sub
test
xlat
aad
aam
into
add
mov
jmp
push
scas
xchg
dec
mov
xchg
xchg
pop
js
xorl
std
mov
rcr
cmc
mov
sub
xor
cwtl
mov
inc
outsl
jg
fwait
int
fmulp
imul
cli
mov
out
movsb
mov
jb
pushl
adc
add
jbe
add
fs
into
sbb
dec
icebp
jno
rclb
push
in
std
xor
hlt
add
movsl
inc
or
dec
mov
scas
scas
insl
cmpb
ja
adc
pop
inc
ret
pop
mov
lock
push
lock
xor
clc
arpl
pop
cmp
popf
popf
jge
cmp
lds
cmc
les
sbb
xor
int
and
sub
ss
inc
ud1
mov
and
enter
imul
sbb
push
adc
shl
cmp
mov
mov
lods
test
inc
jl
ficomps
ds
jg
and
outsb
pop
sbb
sbbb
imulb
sti
xlat
push
out
xchg
cmp
stos
sti
out
sub
cmp
stos
lods
test
lea
push
sbb
lds
or
shrl
mov
in
add
add
iret
pop
mov
nop
cwtl
cld
xchg
nop
mov
push
adc
sub
jno
jg
and
mov
mov
sar
sbb
fdivl
pop
cmpb
ja
jmp
mov
xchg
xchg
lret
cmp
cli
mov
lret
sahf
je
xchg
add
aas
or
sete
lcall
das
adc
mov
sbbl
push
pop
jb
cmp
in
movsb
lea
and
cmp
fsubr
call
faddl
sbb
sbb
int3
sub
popa
int
ss
pusha
filds
jae
cltd
out
xor
mov
rclb
sub
dec
push
sub
inc
cmc
test
inc
xlat
fdivs
add
cmpsb
xchg
inc
jb
cmc
ss
out
sub
int
lods
or
inc
shl
push
fisubrs
or
out
mov
dec
and
push
popf
add
jl
pop
into
mov
lahf
das
scas
mov
and
sub
pop
outsl
pop
out
jne
in
aam
fcoml
outsb
or
out
push
test
sti
repnz
pop
loope
mov
lcall
cmpb
pop
jecxz
cld
rorl
add
into
popa
adc
and
cltd
cwtl
call
dec
or
jp
pop
dec
sub
andb
and
mov
mov
movl
das
xorl
int3
fildl
popl
jp
fcmovnu
lods
jg
mov
jl
sbb
push
mov
js
femms
sbb
jnp
aaa
xor
mov
push
jae
or
repnz
sbb
bound
push
fisubl
adc
sbb
movsl
jno
xor
mov
xchg
inc
dec
fisubrs
mov
push
lret
or
lock
pop
repz
mov
icebp
mov
dec
rol
ret
aaa
rclb
sub
insb
insb
fyl2xp1
add
das
add
shlb
das
and
aas
aas
adc
push
cmpb
movsb
xlat
push
std
lea
inc
int3
stos
jge
icebp
cmp
mov
inc
iret
loope
lods
mov
dec
adc
into
cmp
in
sub
es
jp
adcb
fnsave
test
push
push
movzbl
adc
sahf
push
les
aaa
icebp
cmp
cltd
sahf
popa
jae
lock
dec
push
push
mov
push
mov
enter
xchg
scas
adc
aaa
popa
rorb
rdtsc
movsb
pushf
jl
sub
jle
mov
in
arpl
fdivrl
cli
xor
test
cmp
xor
and
das
ret
shlb
fcomps
sbb
aaa
cmpsb
xor
ljmp
arpl
mov
test
sbb
inc
call
jl
outsl
lods
gs
push
movl
outsb
cmc
mov
sti
shlb
xchg
xor
pusha
inc
aam
enter
mov
or
and
xor
and
jge
scas
pushf
lret
test
ja
loop
jb
fbld
pop
imul
out
inc
icebp
cmp
movsb
sub
cmp
pusha
push
aas
test
push
push
sbb
cltd
mov
clc
test
scas
in
jbe
fmull
push
aas
add
xchg
add
std
xchg
pop
adc
in
aaa
sub
mov
xchg
fmulp
ss
mov
mov
jo
shl
cmpsl
repz
stc
iret
insl
jecxz
push
xor
cmp
xchg
fcmove
mov
cmp
mov
jmp
insb
xor
in
adc
imul
sub
and
lcall
pusha
out
adc
adc
aam
insb
sub
fnstenv
jecxz
jb
adc
pop
xorb
add
cmc
es
or
or
in
sbb
cmp
lds
js
pop
cmc
inc
pushl
stos
dec
rcrl
inc
jb
add
xor
fmull
pop
and
lret
fs
inc
pop
jmp
sub
add
cmpsb
xchg
add
ja
xchg
pop
mov
enter
sbb
loop
cmp
cmpsl
mov
mov
repnz
in
testl
jg
pop
xor
cmp
xchg
ljmp
in
stos
mov
ja
cli
in
jbe
jb
test
jnp
outsl
add
push
jle
jp
xchg
mov
pop
sbb
stos
jae
pushf
movsl
int3
and
xor
pop
addr16
int3
adc
sbb
xchg
loop
mov
mov
and
and
mov
lcall
push
and
lods
cmp
imul
dec
mov
dec
push
testb
pop
insb
adc
lock
fcomi
xchg
cmpb
mov
lock
and
mov
adc
nop
ja
leave
scas
mov
adc
mov
cmp
lods
in
sub
dec
push
fadd
push
or
jno
inc
mov
or
imul
outsl
imul
rcrl
mov
in
nop
xlat
imul
xor
call
loope
rolb
loop
mov
std
xor
add
int
sub
out
cmpsl
push
lcall
ss
add
xchg
in
pop
push
dec
cmc
jl
push
mov
mov
jae
inc
mov
sti
xchg
in
flds
sub
jg
or
ficomps
mov
pushf
or
and
push
push
imul
inc
fucomi
dec
and
in
out
out
lds
testb
fsubl
xchg
adc
mov
aaa
jns
es
outsl
xchg
cmp
rcrb
lods
mov
jb
push
test
mov
movsb
stos
and
pop
cs
fists
dec
outsb
sub
out
dec
xchg
fcos
push
push
mov
or
scas
out
xorb
jns
push
sub
mov
lock
xchg
sub
jl
and
stc
mov
pushf
add
xchg
pop
gs
lock
pop
sub
out
sti
pushf
and
jo
fdivrs
mov
jnp
or
roll
adc
inc
mov
xor
mov
outsl
clc
mov
jo
mov
sub
loope
lds
xbegin
lea
fnsave
add
mov
jnp
ljmp
and
cwtl
sbb
sbb
sbb
mov
adc
cmc
mull
sbb
push
fdivrl
repz
pop
mov
sbb
pop
pop
dec
and
inc
pushf
xchg
ret
xchg
jmp
ja
mov
lcall
into
mov
and
mov
pop
sub
js
mov
stc
xor
mov
stos
mov
jge
add
cmp
in
mov
js
jbe
rclb
sbb
orb
dec
mov
mov
shrl
int
lods
xchg
add
rorb
cmp
mov
ja
mov
and
dec
lcall
test
call
xor
fisttpl
xchg
pop
push
inc
push
in
mov
jg
adc
xchg
and
cmpsl
enter
popa
icebp
xor
sbb
shl
push
outsl
push
fstpt
fs
pop
cmp
repz
cmp
dec
mov
enter
filds
and
mov
repz
dec
adc
dec
adc
push
cmp
dec
outsb
aaa
mov
push
arpl
rcll
xchg
xchg
push
insl
or
sbb
out
lds
sbb
lds
jmp
mov
sbb
mov
pop
inc
fbld
jns
nop
xor
jne
cli
jb
jns
cltd
das
pop
lret
mov
in
enter
or
add
push
jge
ss
roll
add
push
sub
push
inc
scas
and
adc
rorl
xchg
sub
jle
sub
scas
xchg
stos
cmp
cmp
push
sbb
inc
shrb
dec
fnstcw
aam
into
xchg
dec
sub
mov
cltd
mov
sub
pop
icebp
inc
inc
add
xor
pop
aas
aas
fimull
push
xchg
sti
add
cmpsl
fistpl
xor
ret
or
ss
lret
lock
das
mov
aad
mov
and
loop
and
mov
insb
sub
sub
jle
cltd
jo
mov
mov
push
fnstsw
mov
rcr
lret
sbb
insb
lods
sbb
test
jne
lods
lcall
sbb
mov
test
add
aam
mov
jecxz
sub
fsts
and
imul
jmp
prefetch
unpcklps
fcmovnu
clc
lock
jne
adc
push
lret
lock
sti
pop
dec
rcll
or
and
out
loopne
sub
in
xor
lret
push
mov
dec
pop
pop
xor
cld
or
ret
addb
mov
js
and
ljmp
mov
xchg
outsb
cwtl
mov
andb
mov
jmp
in
movsl
push
add
bound
rclb
hlt
sub
mov
test
shr
mov
mov
mov
bound
push
and
pop
pop
fs
add
cmp
btr
fs
mov
push
aam
and
sbb
bound
data16
xchg
xor
sbb
imul
xlat
in
xchg
adc
mov
xchg
dec
jmp
in
int
xor
jge
daa
jne
mov
ror
insb
cwtl
sub
xchg
jg
jno
xor
sub
jl
xchg
adc
xor
pop
xchg
mov
mov
cmpsb
pop
dec
lods
push
cmp
xor
fldl
and
es
cwtl
dec
sbb
cltd
into
rolb
in
mov
and
popf
push
mov
roll
lods
in
clc
pop
adc
jge
lock
jns
cmp
cmpsl
jmp
into
dec
and
rol
pop
sub
inc
sub
cmp
mov
sbb
ret
dec
push
sarl
lcall
xorl
mov
push
mov
add
jp
adc
insl
push
xchg
pop
jbe
sub
adc
pop
mov
test
or
adc
insb
mov
aas
in
rclb
adc
mov
push
iret
adc
jae
jmp
imul
repz
cld
or
mov
data16
cli
push
jnp
test
inc
ss
jge
dec
ret
aaa
pusha
pushf
dec
test
jae
or
cld
jl
pop
add
inc
mov
sbb
iret
or
adc
push
jbe
pushl
xor
xor
mov
nop
cmc
sbb
lahf
pop
loope
je
adc
sbb
inc
xor
inc
cmp
lcall
xlat
push
cltd
mov
daa
add
lcall
mov
jo
inc
pushf
out
jns
mov
rorl
nop
repnz
shlb
imul
arpl
pop
pop
loop
enter
jb
push
xchg
and
dec
mov
leave
and
call
push
adc
xchg
jbe
push
push
out
jecxz
outsl
enter
repz
adc
mov
lods
cli
dec
adc
mov
or
in
pushf
push
jnp
cld
pop
adc
push
sub
movsb
and
lods
ljmp
xlat
mov
insl
repnz
and
ds
mov
int
ficoms
lret
frstor
mov
fisttps
push
dec
push
addps
movsl
jne
cli
mov
mov
push
repnz
fs
hlt
cmp
inc
mov
pop
pop
push
rcrb
sbb
aad
bound
xchg
sub
fldenv
push
aas
lods
mov
cmp
jae
mov
pusha
or
popf
add
divb
push
and
pop
jnp
ja
sarb
xor
icebp
or
inc
adc
lods
push
push
xchg
or
fimull
push
ret
mov
dec
js
inc
jns
fldt
stos
mov
pop
mov
inc
repz
dec
jo
dec
adc
and
sub
add
cmp
imul
cld
inc
test
aaa
sbb
es
sbb
or
lock
mov
mov
jb
aas
mov
test
xchg
ss
sbb
int
sarl
add
arpl
jle
pop
add
sub
ds
int
sbb
inc
mov
mov
fisubrl
cwtl
pushf
bound
push
push
jge
adc
push
add
sbb
cld
flds
divb
in
leave
scas
rol
pusha
jae
push
xchg
add
jmp
repz
push
pop
adc
add
mov
cmp
mov
cmpsl
imul
leave
dec
es
push
mov
cmpsb
or
sub
cmp
pop
into
sbb
pop
movsl
in
sbb
pop
daa
jmp
pop
repz
sub
in
cmc
dec
add
orb
cmpsl
loop
xchg
cmp
iret
or
lds
adc
mov
fucom
jne
and
pop
mov
fcomi
ljmp
mov
push
inc
dec
jo
data16
negb
insb
push
ret
lock
mov
xchg
repnz
pushf
mov
loopne
xor
push
test
pusha
mov
pushf
addr16
rcr
fidivrs
fdivrl
int
mov
cli
pop
cmp
xchg
add
nop
movsb
mov
fwait
ss
jp
iret
aam
sub
pop
push
inc
cmp
push
hlt
sbb
mov
cltd
icebp
or
loopne
rcl
daa
mov
add
inc
or
xlat
pop
cmp
cmp
dec
sub
jmp
test
fmuls
push
mov
popf
cwtl
mov
dec
jmp
dec
sahf
cltd
icebp
arpl
in
pop
outsl
pusha
push
sbb
push
in
jl
adc
sbb
mov
adc
push
rclb
ret
jbe
xor
mov
inc
pop
loope
pushf
leave
les
or
ja
cmp
inc
pop
pop
bound
xchg
mov
ljmp
clc
movsl
inc
jl
loope
jmp
lea
loopw
test
mov
mov
mov
inc
lds
push
movsb
sbb
mov
lods
divps
int
mov
add
add
int3
les
cmp
jno,pn
sbb
test
pop
sub
push
fmuls
xor
pushf
jbe
mov
push
mov
into
or
into
xor
push
sbb
or
sbb
xchg
repnz
mov
mov
popf
sbb
xor
imul
subl
jp
adc
test
mov
mov
pop
inc
daa
push
mov
cwtl
neg
pop
mov
push
test
mov
sbb
outsb
sbb
stc
vmovapd
in
jb
xor
pop
sbb
jmp
adc
adc
ljmp
outsl
push
ss
fwait
xchg
and
popl
sub
pusha
popf
out
scas
mov
inc
dec
test
shrl
cmp
icebp
mov
out
fnstcw
loope
in
mov
pop
xchg
add
cmp
sbb
adc
andl
xlat
out
popa
gs
aam
dec
pop
enter
inc
enter
dec
add
shll
aam
mov
xor
or
and
rcrl
iret
xor
push
rolb
pop
std
adc
leave
test
sbb
cmp
cmc
push
add
js
ret
popa
fisubrl
xchg
mov
or
xchg
or
fnstsw
adc
scas
and
push
inc
lcall
push
pushf
xchg
test
ljmp
fdivrl
dec
out
in
aaa
aas
mov
bound
out
mov
sbb
int3
aad
test
int3
in
sub
int3
movsb
adc
cmp
enter
sub
sarl
fsubr
or
push
mov
leave
xchg
jns
cwtl
loope
push
rolb
cs
adc
sub
and
pop
scas
js
stos
and
sahf
into
arpl
cwtl
sub
das
pop
mov
dec
das
das
pop
test
out
adc
enter
xor
ljmp
aad
or
scas
xor
cmp
jge
sarb
jl
scas
rorb
rolb
cmp
add
cwtl
fs
dec
xor
fists
sub
xor
gs
jno
adc
sub
jl
sub
out
cmp
movsl
jae
add
and
and
sbb
adc
cwtl
inc
fnstenv
in
or
cmp
mov
inc
push
cmp
and
adc
and
mov
stos
dec
xchg
sahf
jno
sbb
imul
inc
fsubl
leave
stos
test
mov
cwtl
mov
in
lods
mov
lock
pop
out
jb
int
adc
clc
adc
or
xchg
cmp
cmpsb
in
loope
lcall
shrl
stc
subb
fisubrs
sbb
outsb
jns
call
cld
movsb
cmpsb
push
inc
in
xor
mov
xchg
nop
dec
cli
addr16
pop
div
push
cmp
and
adc
dec
xor
mov
push
push
pop
sub
insl
inc
or
out
lods
xchg
loope
push
sub
xor
jl
mov
test
mov
xorb
sti
ret
cwtl
jmp
in
mov
mov
rorl
insb
movsb
jecxz,pt
xchg
hlt
push
dec
inc
mov
push
scas
mov
mov
arpl
lock
leave
and
std
int3
mov
add
int3
inc
inc
mov
xor
cmpsl
addr16
mov
flds
jb
inc
int3
daa
test
in
mov
outsb
push
gs
xchg
movsl
jbe
pop
arpl
jg
aaa
dec
xchg
repnz
push
rol
mov
leave
fadd
jle
rolb
mov
sti
sub
in
out
sub
outsb
data16
shrb
xchg
rolb
cwtl
scas
scas
jo
lcall
lods
fidivrs
dec
fdivl
cmp
loope
and
cli
fimull
scas
cmp
in
and
insl
shll
xor
jp
inc
add
loopne
add
adc
push
mov
jecxz
cmpl
outsb
cmp
roll
imul
xchg
sarb
iret
adc
add
divl
les
scas
scas
adc
out
push
sbb
test
lods
cmp
das
fbld
inc
push
push
loope
mov
lock
stos
rcl
insl
enter
jg
push
mov
jb
rcrl
push
jl
sbb
testl
dec
sbb
jnp
test
dec
xchg
jo
lock
adc
enter
sahf
mov
clc
push
lods
out
jmp
cmpsb
stc
jge
push
xchg
sub
arpl
push
push
popf
inc
push
movb
xchg
cmp
adc
cli
mov
frstor
mov
mov
xchg
aad
cmp
mov
add
lock
or
nop
inc
jecxz
inc
enter
push
cs
pop
push
mov
fwait
sub
mov
push
adc
stos
sahf
xchg
push
movsl
lahf
popa
cltd
aam
or
inc
call
shr
jge
jp
in
addb
mov
jecxz
insl
inc
and
cmpsb
adcb
hlt
xchg
test
pop
outsb
clc
push
adc
in
xchg
add
ds
inc
addr16
lret
cmc
loop
sbb
aam
or
std
shlb
outsb
insl
and
adc
ljmp
leave
sbb
fldln2
push
and
push
pop
mov
or
xor
rcll
push
test
es
incl
push
cs
push
in
imulb
push
dec
int3
bswap
sbb
xchg
inc
sub
testl
testl
sub
jae
xchg
cmp
adc
insl
xlat
rclb
jne
sub
push
es
mov
lock
jecxz
rcrl
clc
mov
push
or
mov
fsubr
mov
mov
xchg
int
sarb
shr
mov
clc
gs
cld
imul
xchg
repz
push
call
xlat
pop
or
add
and
ficoml
das
pusha
and
lods
xchg
roll
loopne
sbb
and
lds
aaa
and
jg
mov
test
xchg
popf
mov
mov
or
int
icebp
into
xchg
stos
mov
inc
cmp
aaa
mov
cld
push
test
mov
push
mov
sbb
out
adc
stos
insb
pop
sub
xchg
sti
cmpsl
enter
mov
adc
les
pusha
jle
notb
arpl
sub
or
les
or
mov
iret
mov
loopne
ret
push
mov
int
popf
mov
es
mov
out
mov
adc
ljmp
lret
jmp
or
hlt
jnp
pushl
mov
mov
mov
cmp
and
pusha
jne
sbb
mov
out
mov
inc
mov
mov
out
mov
iret
lods
sbb
inc
sbb
dec
push
cs
scas
cwtl
pop
aas
jnp
pop
mov
push
and
fdivp
loope
sub
std
and
out
cltd
cmp
addr16
pop
xor
jg
fs
ljmp
enter
dec
in
mov
in
pushf
inc
jg
das
mov
push
je
adc
sub
add
loopne
push
cmc
loop
std
cmp
mov
sub
shl
mov
and
pop
addl
inc
adc
and
add
lock
repz
lods
cmp
sbb
ja
pop
push
ljmp
adc
mov
lods
sbb
jle
jne
inc
inc
int3
punpckldq
adc
in
pop
pushf
jbe
adc
dec
mov
mov
mov
movhps
mov
adc
lds
mov
jl
adc
sbb
lret
ljmp
adc
mov
es
das
cli
xor
sbb
rcl
stc
xchg
cmp
dec
and
mov
fcoms
lock
mov
jp
repz
mov
daa
sub
jecxz
ja
jbe
cmpb
lcall
js
movsl
mov
jb
les
cmp
ljmp
je
pop
pop
xor
popa
mov
andl
sbb
push
xchg
mov
sbb
jp
mov
xor
ret
mov
xor
mov
pop
repnz
dec
in
cmpsb
repz
popf
into
outsb
lcall
push
call
xchg
in
push
dec
inc
mov
scas
xchg
cmp
mov
mov
push
mov
ret
mov
aam
xor
push
push
shll
fwait
push
loopne
push
ljmp
sets
add
pop
or
mov
inc
dec
cmp
mov
addb
sbb
mov
mov
mov
jmp
pop
pop
sbb
dec
ffreep
fwait
arpl
aaa
jne
inc
pushf
ds
cmp
mov
xchg
pusha
cltd
mov
inc
xor
cmp
pop
ljmp
cmpsl
cmp
nop
mov
inc
jle
rcll
enter
xor
cmpl
dec
js
sarb
subl
adc
or
mov
and
push
mov
jle
mov
cmp
inc
adc
into
addr16
sbb
cmc
xor
pop
notl
les
outsb
jno
and
es
fbstp
mov
nop
inc
fcmovnb
out
loopne
insb
pop
fadds
das
inc
jecxz
lahf
and
rcll
push
in
ret
xor
sbb
xchg
xor
pop
andb
jo
leave
rolb
int3
mov
inc
jle
loopne
push
sarb
test
stos
or
call
push
add
push
das
sub
imul
push
daa
mov
ret
das
push
cli
push
sbb
mov
popf
pop
mov
xor
insl
dec
scas
lcall
jne
adc
testb
mov
jg
push
jb
push
fcoms
xchg
in
jl
pushf
shl
xor
imul
fldl
cmp
lods
dec
ds
jb
cld
loope
add
push
popf
out
test
cmc
inc
pushf
lret
dec
lret
iret
mov
enter
ja
cmpsl
scas
inc
loopne
add
jle
pop
cltd
js
or
out
or
fs
fs
fsts
mov
sbb
add
push
pusha
nop
ret
icebp
dec
mov
imul
daa
cmc
push
or
std
andl
outsb
xchg
popf
push
mov
orl
lret
inc
por
or
xor
dec
cmp
jbe
mov
inc
int3
or
leave
jae
sbb
int3
xlat
sbb
fwait
jnp
call
xchg
xorb
stos
add
shll
mov
inc
cmp
mov
shll
arpl
inc
pop
ret
and
shr
incl
imul
mov
inc
pop
inc
sub
popl
xchg
loop
pusha
cs
push
mov
pop
adc
or
or
cmp
movsb
popa
lret
lds
xchg
push
in
push
jmp
jbe
xor
or
pop
sbb
or
push
cmp
push
cli
int3
jg
gs
push
insl
int
int
sub
cmp
and
test
or
hlt
out
add
sarb
cmp
xor
testl
jg
cmp
add
xor
push
sub
dec
subb
icebp
push
xchg
xorb
js
sar
int
push
shlb
xor
mov
push
popf
mov
insb
pusha
mov
movsl
imul
movsb
jle
out
js
aam
clc
mov
popf
xchg
adc
fadd
cmp
inc
pop
adc
pushf
addr16
negl
xchg
lock
jecxz
pop
dec
pop
lea
out
nop
jl
cltd
cmpl
insl
sub
mov
stos
inc
imull
xlat
outsl
xor
aam
dec
xchg
out
std
sub
push
test
sar
pop
dec
sarl
mov
push
imulb
push
adc
enter
ja
gs
rcl
es
adc
mov
adc
add
cmp
and
add
icebp
cmp
cs
mov
dec
stos
sahf
adc
dec
ss
pop
inc
mov
mov
sbb
aad
pushf
pop
loop
adc
pop
idivb
out
dec
bound
arpl
lret
icebp
gs
sbb
push
into
dec
adc
movups
test
aaa
cwtl
add
push
sub
pop
pop
out
iret
sbb
bound
add
xchg
cmp
shrb
rcrb
cmp
xor
pushl
testb
fld1
mov
ret
or
adc
jle
out
repz
xchg
adc
push
sbb
xor
sahf
xor
adc
mov
ret
daa
mov
sub
aam
xchg
inc
pop
jmp
xor
inc
adc
call
int
dec
ret
stos
pop
bound
mov
sub
popf
loop
mov
or
and
shlb
mov
ret
nop
leave
add
push
out
push
push
xorl
divb
hlt
cmp
mov
movhps
push
sbb
xchg
xlat
lds
mov
dec
fcoml
push
mov
lret
hlt
negl
push
xor
pop
mov
mov
mov
lret
push
or
inc
movsl
mov
lods
jmp
mov
mov
pop
repz
push
push
cmp
repz
xor
rolb
cmpsl
dec
pusha
push
clc
push
adc
sub
sub
or
sub
jle
out
sub
mov
daa
jmp
fcomi
jg
mov
sbb
in
mov
faddl
xor
test
xor
or
icebp
outsl
jp
jns
rclb
sbb
sub
push
cmpsl
leave
int3
imul
pushl
std
jne
test
mov
xor
mov
xchg
pop
dec
in
imul
sbbl
cld
rclb
stos
addr16
aas
loope
scas
adc
and
shlb
jmp
es
mov
xor
cltd
and
sub
shlb
mov
and
push
pop
jne
jns
sbb
stos
ljmp
push
push
mov
andl
notb
cmp
mov
push
in
psrlw
cmpsl
out
out
imul
jno
xchg
xchg
jmp
inc
aaa
or
movsb
andl
fnstcw
mov
mov
mov
xorl
push
hlt
and
push
cmp
es
mov
insb
insb
aaa
push
sarl
mov
loop
rcll
mov
or
mov
mov
shrl
pop
maxps
lods
daa
xlat
xchg
jno
mov
mov
outsb
movsl
rorb
jbe
mov
jmp
xlat
jmp
enter
imul
mov
out
push
mov
cmpsb
scas
inc
lea
xor
inc
dec
or
sub
push
xchg
mov
or
fistps
test
adc
mov
jo
lds
sbb
adc
in
cld
push
sbb
repz
mov
testl
insl
mov
jb
sub
repz
push
xchg
cmp
rcrl
pop
inc
fs
bound
popa
mov
aas
rorl
adc
and
mov
shll
add
stos
and
out
and
pop
sub
pop
xchg
pop
push
and
pop
movd
jbe
mov
jg
hlt
stos
daa
add
call
xchg
mov
scas
sbb
jp
aad
pop
test
xchg
cltd
cmc
ljmp
stos
adc
xor
sahf
inc
ficoms
adc
je
test
push
or
lcall
push
push
pushf
add
insl
adc
test
jl
test
addr16
repz
add
jecxz
pusha
inc
fistpl
xchg
repz
xlat
lds
outsl
out
fiaddl
addr16
push
dec
mov
add
pushf
mov
sub
and
sbb
push
nop
pusha
cmpsb
int3
fnsave
fnstcw
icebp
adc
jo
call
mov
and
jg
pop
mov
sub
aas
movsl
cmpl
arpl
pop
lret
outsl
push
adc
xor
mov
mov
fwait
out
sbb
cwtl
call
add
sbb
cmp
sbbb
adc
imul
call
out
jecxz
sub
inc
adc
fistpl
rclb
and
dec
pusha
mov
xchg
div
mov
pop
mov
ljmp
call
fwait
pusha
pop
xlat
test
andl
pop
int3
lock
xchg
sub
loop
daa
jno
mov
test
sub
and
and
jmp
dec
outsb
mov
fxch
iret
mov
xor
fnsave
ja
add
sub
test
mov
and
dec
jecxz
mov
jl
aad
add
pop
xchg
adc
int3
or
push
shrl
pop
sbb
out
stos
jmp
push
sarl
jp
adc
ret
xchg
in
mov
jecxz
mov
rcll
mov
stos
call
cmp
bound
jg
nop
je
cli
das
pop
rcll
xor
out
mov
and
xchg
and
insb
sbbb
shll
fs
lcall
lcall
imul
clc
mov
pop
push
sbb
insb
add
sarl
cmp
stc
mov
in
lods
rorb
ds
jg
sbb
jl
xorb
jecxz
cli
cmc
dec
xchg
hlt
mov
je
cmp
add
aaa
cmp
add
jle
inc
sbb
xchg
push
dec
inc
enter
rcll
xor
clc
leave
out
cmpsl
sti
push
xchg
outsl
mov
lods
fwait
pop
dec
fs
bswap
mov
cmp
fdiv
mov
push
repnz
push
stos
and
xor
mov
inc
cmp
addl
xor
pop
negl
ds
cmp
push
mov
je
cwtl
int
inc
and
and
sub
clc
int
cmp
sti
dec
ret
mov
mov
ret
mov
lret
xor
out
dec
sbb
or
addr16
push
lcall
mov
jl
or
ret
sub
lods
out
outsb
out
push
nop
mov
sti
imull
jl
data16
xchg
clc
shl
mov
cwtl
ja
pop
and
push
cmp
mov
xor
adc
shrl
add
and
inc
xor
cmc
xchg
test
xchg
scas
das
xchg
jg
pop
inc
mov
xor
lods
subl
jecxz
std
jmp
xor
xchg
daa
mov
xchg
stos
fwait
xchg
dec
pop
mov
sub
fs
jo
repnz
dec
iret
movsb
xchg
or
and
push
and
or
pushf
into
js
dec
and
lods
fs
mov
mov
icebp
outsb
dec
mov
mov
jecxz
fbld
xorl
adc
popf
mov
inc
arpl
shrb
repz
daa
shrb
mov
or
mov
jo
les
add
pop
loope
jbe,pt
jl
sub
inc
add
outsb
and
ljmp
mov
xchg
addr16
push
test
jg
dec
jno
bound
inc
pusha
int
cmp
adc
rclb
int
pop
rcll
andl
xchg
shlb
pop
roll
js
shrd
ret
les
xor
mov
cmp
pop
or
les
jne
les
mov
push
stos
push
and
inc
shrl
mov
mov
pop
out
xor
lods
outsl
ret
int
mov
addb
int3
and
mov
int3
pop
add
or
xlat
repnz
push
and
adc
seto
lahf
mov
stos
das
flds
jo
data16
mov
fistl
test
loopne
test
daa
push
xchg
loop
xchg
jge
ret
sbb
sbb
fimull
mov
pop
cwtl
int
outsb
aad
push
inc
loop
or
fsubrl
mov
icebp
mov
jo
dec
fcompl
mov
das
sbb
pop
xor
imul
fisubs
cmpsb
pop
xchg
push
mov
nop
stos
aaa
push
sbb
loope
fstps
mov
jne
mov
cwtl
pop
out
push
inc
mov
ret
and
jbe
jb
lods
xor
ja
addr16
mov
outsl
call
xchg
arpl
outsb
idiv
push
push
push
cmp
cmp
pop
mov
push
xchg
aad
sbb
mov
lds
sbb
movsl
cld
in
into
sub
jp
sbb
push
add
call
lock
mov
fucomip
adc
mov
movsb
cmp
dec
bound
xor
cmp
je
aam
das
xchg
mov
mov
xchg
jns
xchg
aam
push
clc
dec
cmpsl
inc
and
xlat
lcall
lods
jbe
xchg
sarb
dec
fidivs
mov
lods
std
fisubs
rolb
out
dec
add
shll
pmaddwd
loopne
cwtl
cmpsb
fucomip
mul
movsb
out
xor
aas
push
mov
sub
je
jge
fsin
sub
cmp
in
shll
mov
scas
cmp
fsts
ror
dec
inc
cld
fldlg2
mov
sbb
nop
fs
xlat
lock
addb
je
mov
sarl
out
jo
mov
enter
div
dec
aaa
jbe
jae
data16
adc
push
fidivs
pop
adc
sbb
jp
arpl
add
sbb
insl
ljmp
ss
out
mov
sub
out
cmp
andb
test
je
push
xchg
pop
insb
xor
call
push
repnz
lret
mov
cwtl
bound
cmpsl
fmull
imul
test
scas
mov
incb
jbe
cmp
mov
pop
push
cli
mov
lds
sbb
mov
or
xchg
and
jne
xchg
push
negb
sub
mov
adc
mov
fdivrl
mov
fists
push
cmp
add
out
sbb
and
arpl
sti
insl
popf
xor
loope
pop
push
push
dec
sub
pop
in
aaa
stos
push
lods
mov
push
lahf
movsl
dec
lahf
xchg
mov
loope
or
xorl
daa
jns
jns
imul
push
insl
cli
xor
mov
aaa
xchg
jnp
mov
mov
mov
and
push
mov
fidivs
pop
mov
pop
mov
or
cmc
dec
push
mov
mov
and
inc
cmpb
lea
cli
xor
cmpsl
sub
pop
adc
dec
xor
push
add
pop
mov
scas
mov
js
pop
je
iret
sti
xor
popa
push
fimuls
mov
movsb
fistl
clc
mov
xor
mov
ret
mov
mov
cli
mov
cwtl
jno
mov
mov
mov
pop
add
inc
mulb
outsb
xor
fs
mov
dec
sbb
push
or
adc
sbb
push
mov
nop
cmp
jo
popa
subb
xor
pop
ficompl
inc
stc
dec
xor
fwait
sahf
mov
shrl
je
xorl
mov
aas
jmp
idiv
ljmp
fcmovb
cs
or
iret
cwtl
clc
loope
pop
xchg
pop
loopne
add
pop
pop
adc
add
lret
jecxz
mov
inc
das
in
mov
or
in
stos
jbe
es
mov
jne
mov
pop
scas
inc
adc
das
mov
dec
pop
jo
or
mov
fdivl
jns
insb
push
jb
imul
out
or
inc
push
xlat
cltd
or
push
dec
inc
lret
push
add
cwtl
xchg
jl
js
or
xor
popa
adc
jno
sbb
mov
data16
aam
xchg
sub
lahf
xchg
lcall
into
hlt
inc
sub
add
scas
mov
sub
bnd
pusha
pop
stos
inc
pop
mul
jnp
std
pop
mov
loope
enter
aas
cmpsl
add
orb
sbb
inc
fsubrl
add
jb
andl
js
mov
xor
jnp
aam
ljmp
dec
pop
repnz
lret
aad
es
movsl
rclb
adc
adcl
mov
shll
xchg
or
xchg
stos
push
push
push
xchg
iret
mov
or
das
pop
push
out
fidivrl
sub
inc
mov
mov
stc
mov
xchg
shll
sub
sbbl
rol
in
or
xchg
bound
dec
and
cwtl
ret
xchg
ficoms
sar
push
add
pop
mov
lods
sti
push
stos
lret
shrl
lcall
fnstcw
jmp
xchg
add
or
repnz
fldenv
movsb
inc
jecxz
sahf
push
js
pop
mov
mov
adc
mov
ljmp
jno
fwait
insl
ret
cmpsl
sub
mov
lods
push
dec
insl
popa
pop
mov
movsl
je
lock
pop
sbb
scas
jno
imul
dec
sub
cltd
outsl
insb
adc
pop
sbb
scas
stos
fistps
out
outsl
repnz
cli
sahf
pop
dec
rcrl
lcall
sub
inc
adc
push
adc
je
mov
jno
sub
jnp
jecxz
stos
mov
fwait
mov
pop
incl
shlb
dec
and
mov
fadd
mov
jge
sarl
push
adc
sbb
lea
lods
sbb
cmc
jg
clc
in
movsl
inc
leave
add
mov
ja
dec
push
ret
inc
jo
fisttps
add
mov
push
mov
les
xchg
jo
loopne
xchg
lods
inc
xchg
aaa
and
pop
push
sub
push
jnp
testl
subb
pop
xchg
mov
push
rcrl
leave
or
inc
decl
out
out
stc
or
daa
push
xchg
jne
loope
test
sbb
sbbl
sbb
jecxz
pop
sarl
in
mov
in
ret
jae
cmp
mov
in
iret
out
mov
xchg
cmp
xorb
cli
mov
enter
cltd
out
loope
mov
rcr
lret
fisubl
lret
pop
fcom
cmp
fistl
xor
xchg
sbb
jo
mov
adc
test
cmc
xchg
add
mov
jl
push
xor
outsl
outsb
aaa
repnz
jge
jae
and
mov
xor
mov
mov
mov
stos
sbb
orb
punpckhwd
movsb
sbb
sarl
mov
jl
xchg
scas
fistpl
pcmpgtw
in
sub
mov
dec
mov
dec
push
xor
sub
inc
and
fildl
pop
inc
xchg
pop
adc
leave
xchg
cmp
notb
xor
dec
adc
dec
andb
pushf
jbe
mov
test
push
shll
dec
dec
cmp
add
ja
mov
mov
test
cmpsb
lcall
push
jp
xor
pop
sub
dec
mov
idivb
orb
inc
sahf
aad
test
stos
lret
add
shll
das
clc
ds
add
pop
int
aas
mov
call
shll
pop
aaa
int
inc
pop
mov
xor
stos
leave
push
out
test
in
sti
mov
sti
jge
bound
stc
rorb
mov
inc
jbe
cmp
test
ror
mov
scas
inc
mov
sbb
repnz
sub
stos
stos
andb
cmp
rolb
outsl
les
push
push
ja,pn
mul
js
push
sbb
jb
or
mov
jns
sbb
sub
sub
stos
ss
jb
jecxz
sub
int3
das
repnz
xchg
cmp
in
or
pop
sub
xchg
add
sbb
jge
fistl
xor
es
push
xor
xlat
stc
les
pop
mov
sub
dec
sub
imul
cmp
pop
and
rcrb
push
add
xchg
insl
leave
jmp
outsl
movsb
pop
je
pop
loopne
mull
test
sbb
mov
push
jg
mov
lods
ffreep
adc
repnz
xchg
and
out
xor
lods
popf
gs
into
andb
stos
pop
jmp
mov
mov
fs
into
daa
jnp
je
movsb
imul
jmp
sub
inc
xor
pop
or
icebp
dec
in
jmp
push
testb
sbb
jl
cmp
cmc
stos
popa
int3
mov
push
sahf
push
incl
mov
push
outsl
stc
je
pusha
test
or
cli
int3
jne
bound
daa
inc
sahf
push
scas
div
cwtl
dec
and
cmc
and
xor
push
notl
cmp
and
dec
inc
jns
bound
mov
add
lahf
mov
jmp
aaa
sub
cmp
mov
dec
out
xchg
inc
mov
push
cwtl
rcrl
xchg
cs
or
stos
adc
sbb
adc
xchg
sub
gs
add
jo
in
push
fimuls
or
ja
in
enter
iret
das
rorb
mov
aam
sub
mov
dec
lods
cmpsl
ja
inc
lret
out
adc
aas
jb
les
out
cmpsb
and
insl
notl
lods
push
std
sbb
test
xchg
cld
xchg
in
and
sub
jb
dec
jp
mov
loop
test
push
pop
pop
arpl
sub
fs
cmp
fisubl
popl
lret
xchg
add
or
add
addr16
lret
xor
enter
xor
sub
xor
ds
xchg
xor
push
add
jmp
enter
push
sbb
mov
add
sub
dec
jb
adc
loopne
aam
ret
jae
inc
inc
push
jo
dec
push
jmp
sbb
add
and
add
pop
fistpll
je
dec
mov
rclb
lret
int3
dec
and
push
arpl
mov
inc
xchg
mov
fcoml
fdivs
inc
jbe
vdivss
insb
mov
add
dec
xchg
mov
ja
push
clc
inc
movl
sub
mov
ret
mov
movl
div
push
leave
cmp
sub
jne
add
sbb
push
cltd
lock
add
subl
popl
mov
dec
imul
xchg
loop
pushf
fistl
and
aad
or
mov
jecxz
ss
inc
pop
pop
or
xchg
xor
xchg
add
mov
fistpll
fstl
dec
jp
inc
imul
push
outsl
add
pop
sbb
xor
dec
mov
cmp
out
xlat
xor
mov
lahf
jnp
dec
dec
shr
push
mov
sub
xchg
push
subl
add
imul
lahf
ss
sbb
in
mov
mov
call
pop
insb
aam
mov
xchg
das
test
cmp
mov
orl
jne
repz
jmp
fisttpll
add
or
inc
lahf
push
fldt
jns
pop
shl
cmp
rcl
xor
adc
pshufw
shrl
fnstenv
sahf
je,pt
adc
push
imul
push
lock
icebp
mov
dec
data16
or
jo
push
jno
fldenv
es
hlt
or
test
sbb
dec
pop
mov
xchg
xchg
inc
lret
mov
jg
jle
add
sbb
callw
cmpsb
dec
cwtl
pushf
cwtl
mov
mov
sahf
dec
xchg
sub
xor
mov
cmp
jl
stc
xor
aas
xchg
imul
push
cwtl
insl
jge
pop
sbb
in
sub
hlt
adc
pop
pop
cmp
xor
in
shrl
out
cmp
mov
xor
jnp
mov
outsb
xor
lea
cmc
xchg
push
jb
clc
mov
movsb
cmpsl
adc
or
ret
insb
cld
lds
lret
mov
insl
xor
hlt
imul
inc
inc
jb
xchg
loopne
jno
repz
xchg
xchg
dec
ljmp
repnz
lret
ret
orb
inc
pop
mov
fistps
mov
pop
cs
in
movsb
fisubl
jl
jae
push
subl
shll
je
jl
out
in
popa
test
adc
xor
ds
mov
test
sbb
xchg
testb
xor
xchg
sarl
mov
aad
push
ret
mov
jnp
cwtl
dec
add
ficompl
sti
jae
das
shlb
es
out
cmp
inc
cmc
mov
xchg
fdivrl
leave
fdivl
mov
mov
cmp
out
pop
imul
push
add
and
adc
sti
fistpl
jbe
push
bound
dec
int
xchg
or
out
pop
movsb
dec
inc
sub
mov
cmp
je
adcl
jle
jae
pop
dec
push
pop
jp
xchg
fdivl
leave
mov
sub
movb
mov
adc
and
push
pop
cmc
or
inc
cmpsb
test
and
adc
insl
inc
hlt
and
mov
sbb
aas
xor
and
pushf
lret
ss
mov
leave
ja
cs
pop
js
mov
mov
cld
adc
lahf
and
movsl
imul
sub
outsl
fsts
sarl
push
pop
out
push
cmpsb
jo
es
mov
sbb
loope
test
or
adc
cmp
sbb
push
pop
or
popf
jg
ds
add
fxtract
inc
mov
scas
xor
das
add
loope
lds
push
xchg
andb
inc
out
loopne
scas
sub
pop
add
xchg
and
in
outsl
adc
pop
cli
mov
notb
ret
push
scas
ror
inc
mov
fnstenv
mov
mov
add
xchg
mov
mov
hlt
add
sahf
psllq
test
jno
add
push
mov
mov
ja
cltd
mov
pop
subb
mov
xor
inc
shr
xchg
pop
cmovs
lret
and
dec
shlb
movsl
xor
mov
insl
fcom
adc
sub
mov
cmpsb
pusha
pop
sbb
out
mov
pop
imul
add
leave
movsl
lock
movl
inc
hlt
cmp
jl
aad
jb
pop
pop
mov
mov
insb
divl
fidivrl
jbe
test
fwait
jg
cmp
out
mov
push
sub
fsub
or
pop
movsb
push
mov
or
mov
mov
imul
and
lahf
mov
loop
mov
div
mov
ret
inc
outsl
push
movb
dec
out
sub
loope
outsb
js
adc
cmp
mov
fists
test
and
jo
ds
lods
fildl
lret
mov
data16
mul
mov
mov
in
lods
push
or
ja
scas
nop
xor
mov
call
sub
mov
nop
adc
pusha
mov
push
lret
jno
dec
add
jne
push
dec
sbb
cs
mov
test
xor
arpl
push
fisttps
cmc
in
dec
aam
pusha
sbb
xchg
mov
sub
dec
ret
lods
popa
sete
push
mov
into
dec
sub
sub
stc
movsl
mov
cmc
pop
adc
dec
sub
roll
ss
add
xor
les
daa
push
fmull
jns
add
shlb
in
pop
scas
outsb
scas
loop
loop
adc
shrb
shl
ret
test
pop
popa
sbb
inc
push
xchg
xor
icebp
pusha
jno
xchg
scas
xor
out
lods
and
insb
arpl
shll
dec
aas
xchg
sub
mov
ja
pusha
ret
js
pop
aad
xchg
jbe
lds
dec
call
xlat
cmpl
outsl
outsl
cmp
shrl
push
ja
daa
dec
pop
cs
mov
das
shll
pop
rcl
push
imul
pop
xchg
add
mov
cld
flds
int
imul
push
mov
cmp
in
push
cmp
dec
or
jge
and
pop
nop
mov
arpl
rolb
xchg
dec
cmp
jecxz
aas
scas
sub
sti
sbb
sahf
jecxz
pop
adc
lods
jp
mov
adc
rcl
roll
xor
xchg
sahf
insl
push
adc
and
mov
ja
mov
sahf
xchg
movsl
or
das
mov
mov
lahf
cmc
out
lods
mov
daa
movl
cmp
inc
mov
fwait
dec
test
jnp
aam
int3
sub
push
outsb
push
mov
xchg
daa
es
in
je
cld
rolb
dec
adc
mov
adc
mov
mov
sti
shll
arpl
dec
push
lods
push
pop
xlat
sub
loopne
jo
andl
sbb
mov
mov
fisubl
ja
cmp
scas
mov
adc
fbld
mov
push
add
mov
mov
cld
rclb
cmp
rcrb
xchg
mov
scas
mov
insl
xchg
jle
xchg
xor
test
fcompl
dec
and
icebp
movsl
pop
shll
leave
fldcw
out
call
jmp
aas
loop
cli
stos
mov
xchg
test
fwait
mov
loop
mov
mov
cmp
or
mov
out
mov
jmp
and
bound
mov
push
out
add
xchg
xchg
test
dec
add
ljmp
ja
mov
in
jnp
pop
pop
scas
push
aaa
stos
arpl
or
jo
into
insl
movsl
dec
and
ljmp
sub
fmulp
les
inc
sub
pop
jp
adc
xchg
leave
pop
test
in
clc
jno
pop
lcall
inc
in
mov
pop
cwtl
lret
gs
sbb
sub
loope
add
push
xor
sub
test
popf
insb
cltd
jnp
fisttps
dec
int3
fdivs
mov
sti
icebp
sbb
outsb
mov
repz
mov
fcmovnb
push
mov
scas
pop
mov
mov
divl
test
scas
xchg
fidivs
push
pop
sub
jge
jg
xchg
stc
or
push
repz
xchg
lcall
xchg
sub
inc
dec
imul
cmc
cmp
adc
push
loopne
mov
outsb
jo
sti
push
jl
rcll
repnz
ss
dec
in
scas
out
xchg
add
decb
bound
cli
int
aam
and
testb
lods
in
xor
dec
dec
aaa
loop
outsl
mov
mov
les
imul
aam
loopne
mov
pop
es
mov
repz
xorl
xchg
adc
loop
cld
jne
sbb
jp
mov
clc
xbegin
jno
adc
mov
into
shlb
pop
shr
or
pop
btr
mov
mov
xchg
shlb
ljmp
cmpl
add
push
cmp
and
jae
sub
movsl
xchg
fiadds
adc
aas
mov
jmp
mov
fadds
clc
inc
xchg
mov
lahf
stc
xchg
mov
sbb
iret
sbb
in
test
sbb
imul
push
fcoms
jecxz
aad
aas
push
das
je
and
sbb
jge
mov
stos
jle,pn
dec
mov
dec
push
sbb
in
mov
inc
ds
rcrl
pop
or
das
test
xchg
outsl
dec
jne
xlat
xorl
aam
mov
cmpl
iret
psubusb
adc
inc
push
cmpsl
lods
push
in
decl
xor
out
adc
push
or
push
insl
popa
fidivrs
or
pusha
lods
push
clc
jmp
and
pop
in
scas
lds
mov
jmp
std
mov
push
les
xor
adc
fsub
jnp
fstps
dec
jp
jo
fstpl
mov
jno
call
fdivp
inc
mov
loop
gs
fsubrs
or
sbb
or
xlat
pop
lret
mov
sub
loop
cld
dec
das
or
inc
pop
mov
push
insl
mov
jp
das
xchg
addb
push
lods
push
xchg
in
push
add
cltd
leave
daa
xchg
cmpsb
scas
iret
adc
sub
rorl
aam
mov
sbb
push
jg
jbe
mov
sbb
sti
pop
and
mov
out
ret
push
stos
dec
mov
jns
stc
mov
cmp
out
leave
or
test
aaa
add
sti
xchg
dec
pop
mov
mov
idiv
mov
lcall
iret
mov
lret
fsubp
int3
int3
pop
insl
movsl
sub
or
int3
loopne
repnz
les
sbb
cmpsl
lcall
jmp
decl
leave
dec
mov
das
pop
dec
fldenv
mov
fs
arpl
test
ret
dec
mov
push
push
cmp
inc
gs
mov
push
rcl
sub
sub
pop
jns
sub
inc
pop
out
arpl
dec
adc
nop
pop
jecxz
pushw
sub
and
scas
arpl
das
inc
xor
test
adc
lret
shrl
push
mov
sub
sub
sub
cltd
cmp
shlb
push
mov
fs
cbtw
xor
shrd
ret
sub
jmp
add
cmp
fnsave
mov
out
sbb
xchg
lea
imul
dec
xchg
icebp
xlat
pop
push
in
shrb
sbb
jno
int3
rcll
mov
mov
xchg
out
pusha
out
fsts
aas
ds
mov
pushf
repnz
pusha
pop
jle
inc
add
jp
push
mov
fimuls
jecxz
subb
mov
movsl
pop
cmp
push
add
loop
mov
pusha
push
sub
xchg
pop
add
lret
xlat
into
lock
pop
aas
fstl
xor
movsb
or
loopne
push
das
ljmp
mov
ljmp
or
mov
fiadds
push
scas
pop
andb
sub
jb
outsb
popf
jp
ja
xor
sub
mov
jecxz
lahf
scas
or
mov
pop
push
cli
jl
mov
dec
sbb
jmp
dec
loop
rcll
out
sbb
aad
movsl
mov
push
sbb
pop
dec
dec
hlt
dec
push
es
sbb
mov
loop
int3
nop
sub
sbb
aaa
shrb
movsl
dec
sbbb
adc
sub
pop
inc
inc
dec
jbe
lret
mov
test
jg
jmp
cmp
xchg
testb
imul
push
out
add
or
fidivrs
adc
clc
fucom
mov
rorl
jo
cmpsb
cmp
xchg
pop
or
insb
lcall
call
pop
cltd
pop
cmpsl
je
out
add
inc
inc
iret
lahf
mov
add
push
push
pusha
xchg
das
loop
shrb
movsl
sbb
add
and
popa
push
dec
call
fdivl
sub
mov
ret
push
shrb
fstps
adc
push
cltd
inc
int
jle
cltd
data16
insb
jmp
ds
mov
mov
add
das
inc
push
leave
andl
and
push
pop
das
cmp
cmp
mov
imull
and
lahf
push
test
fnstenv
inc
or
loop
pop
lahf
popa
xor
mov
lock
sub
push
inc
scas
lds
lods
leave
mov
pop
adc
inc
addb
or
fdivr
test
out
rcll
add
popf
push
leave
ja
pop
addr16
sti
and
mov
adc
xor
mov
out
push
in
add
mov
push
sub
mov
mov
dec
cmc
ficoml
out
lds
xor
add
cmp
movsb
daa
insl
mov
sahf
push
loopne
enter
inc
outsl
pop
je
popa
xor
xchg
frstor
out
into
jmp
rorl
int
mov
pop
ljmp
cmpsl
jns
jge
inc
cmc
adc
enter
mov
mov
push
xchg
or
pop
aad
imul
xor
js
mov
aad
push
jne
pop
or
adc
and
cwtl
imul
pusha
mov
fisubl
xchg
in
inc
rol
xchg
in
call
add
pop
pushf
shrb
cmc
dec
daa
xorl
xchg
and
ljmp
loope
cltd
sti
push
inc
shrl
jne
xor
mov
sbb
lea
dec
cmc
dec
or
lods
fldl
rolb
in
jno
ss
sub
pop
inc
pop
and
dec
xor
mov
inc
mov
ja
jbe
mov
cmp
iret
cmp
mov
lret
cmp
mov
mov
inc
sub
inc
fwait
lcall
lods
cmp
push
loopne
mov
dec
xor
jns
out
xchg
mov
inc
xchg
sub
sub
sti
lds
mov
inc
mov
icebp
add
test
xor
mov
das
adc
idivb
out
gs
or
in
test
fs
mov
or
aad
add
imul
jbe
fildll
pop
mov
lds
mov
mov
mov
loopne
stos
jb
iret
or
nop
fstp
sbb
loope
insl
shll
xchg
ret
out
push
outsb
insl
cld
popf
push
push
xchg
add
movb
sbb
add
mov
cmp
push
xchg
popf
rcrl
das
and
xchg
mov
arpl
popf
rcrb
jb
mov
jo
adc
movsb
cmp
fwait
out
into
hlt
enter
mov
setb
lcall
inc
push
loop
dec
sbb
scas
dec
in
pop
mov
inc
fnstenv
ss
mov
cmpsl
lcall
js
cltd
pop
faddl
push
mov
lea
sub
repnz
push
jns
out
mov
sbb
adc
mov
adc
aas
aaa
popf
xchg
loope
es
or
out
in
pop
in
xchg
loope
popa
jle
lods
mov
ss
jb
dec
sub
mov
jmp
mov
push
xchg
lock
add
movsl
aas
sbb
xchg
lret
mov
call
pop
mov
mov
mov
mov
mov
push
pop
sbb
test
jno
popf
data16
mov
adc
out
insl
inc
fwait
sub
pusha
das
adc
or
insb
mov
pop
fidivl
and
shrl
jo
into
in
scas
dec
fs
fwait
pop
and
cmpsl
repnz
mov
dec
sbb
mov
push
lahf
jns
fadd
sbb
sbb
pop
std
or
mov
js
pushf
fisttpl
lcall
fwait
jae
and
in
mov
sti
in
mov
ret
xor
push
fidivrl
scas
orl
clc
cli
mov
ret
xchg
xlat
cmc
jnp
xor
fbstp
mov
pushf
icebp
ljmp
xlat
sbb
les
pushf
ret
adc
stos
push
push
inc
adc
and
mov
lret
push
ljmp
leave
idivl
mov
cltd
mov
movsl
sahf
adc
mov
fisubl
pop
data16
cmovns
xchg
inc
mov
lods
lcall
out
jmp
cmpsl
add
cmp
push
push
inc
mov
or
mov
mov
inc
filds
popf
pop
pop
sub
lds
daa
pop
or
lcall
mov
arpl
push
xlat
or
mov
outsl
insb
in
mov
scas
inc
mov
push
adc
in
fidivrl
popa
fwait
test
scas
or
push
xchg
and
adc
jg
sbb
test
aam
roll
sbb
push
repnz
push
mov
sti
and
lds
inc
mov
test
fs
mov
daa
les
xor
sbb
add
lds
imul
ret
ds
xchg
aaa
mov
scas
sbb
pop
fs
sbb
lahf
es
cmp
dec
push
lods
sub
js
push
jle
push
int
aaa
dec
into
push
sahf
jecxz
lret
in
pop
or
cmp
adc
dec
inc
jno
addr16
cmpsb
sub
pop
cmp
xlat
inc
dec
lea
repnz
cwtl
lcall
int
cmp
xchg
scas
rcll
stc
mov
adc
data16
mov
mov
inc
ret
sub
mov
mov
out
jecxz
push
add
into
adc
pop
adc
rorl
ljmp
sbb
cmpsl
push
out
decb
push
pushf
scas
cwtl
dec
icebp
iret
addr16
jne
scas
pop
push
mov
cmp
jl
notb
and
and
sub
push
stos
fs
jmp
cmpsl
dec
je
enter
mov
cld
pop
les
aam
pusha
push
aad
sbb
scas
ret
mov
or
xor
push
xlat
imul
xor
movsl
pop
lahf
add
andb
imul
add
push
jp
mov
pop
jnp
mov
dec
stc
dec
nop
xchg
xor
arpl
push
pop
fsubrs
adc
aas
pop
push
and
imul
pop
inc
or
lret
mov
and
cmp
movsl
xor
jno
nop
lds
adc
getsec
std
mov
aad
mov
inc
cld
pop
mov
xor
in
xor
xchg
push
pop
aad
outsb
pop
mov
push
addr16
mov
aad
and
nop
ds
jge
rcll
adc
dec
xchg
les
adc
adc
mov
popa
or
ljmp
mov
mov
pop
cmp
loope
push
cld
std
nop
fnstenv
fdivrs
pushf
pop
test
insb
jae
cltd
dec
adc
clc
aaa
je
add
xchg
push
mov
fisubl
xchg
pop
test
jae
xor
loope,pt
dec
dec
push
jle
dec
idiv
or
mov
jns
test
adc
mov
inc
mov
sbb
out
dec
add
mov
je
push
and
dec
xlat
jne
dec
xchg
stos
je
pushf
hlt
jns
out
out
push
insl
mov
cmp
in
loopne
aam
push
test
imul
lds
mov
shrl
lock
push
cmpsl
cwtl
sbb
daa
aam
imul
mov
and
movsb
sub
lea
ss
sbb
pop
pop
or
add
cmpsl
add
cwtl
fisubrs
or
add
adc
add
out
add
fwait
pop
and
jecxz
data16
sub
and
mov
add
ljmp
ret
ss
movsb
fmulp
and
pop
sbb
cld
or
or
xor
fisttps
push
fwait
sbb
push
mov
imul
lods
call
inc
mov
sti
aaa
nop
xchg
lcall
movsl
popa
incb
or
and
or
addr16
mov
adc
mov
inc
lock
das
enter
cmp
pop
clc
adc
movsb
sti
pushf
outsb
cmp
adc
mov
lods
mov
iret
fnstsw
sub
or
daa
cmp
out
mov
add
jae
sahf
pop
add
sbb
shll
sbb
dec
ja
fadds
add
movsb
xchg
icebp
movsl
mov
and
in
ret
lods
daa
mov
and
adc
and
adc
cs
mov
mov
fstl
adc
lcall
in
ljmp
shrb
test
mov
or
aas
out
cmp
mov
push
xor
das
and
sub
fwait
or
xchg
addr16
cmpsb
xorb
ficoml
fs
ficompl
in
add
add
test
mov
push
in
stos
rcr
jo
mov
push
mov
movsb
ret
pop
sub
cli
pop
push
out
xor
or
xor
or
pop
sub
shl
inc
pusha
orb
mov
xor
jge
test
pushf
insl
pop
add
dec
xlat
mov
stc
dec
outsl
lret
mov
xor
aas
and
cmp
lods
jo
dec
in
xchg
adc
out
push
rcrl
mov
cmc
push
scas
sbb
sbbb
xlat
mov
add
es
iret
aaa
rcr
jns
pop
clc
lds
xor
adc
aas
lds
lea
call
cmp
add
push
adc
and
mov
adc
xor
mov
adc
mov
bound
jno
pop
inc
mov
out
negl
ds
push
sar
or
out
call
fistl
or
jmp
jl
daa
dec
addr16
or
stos
mov
ss
dec
xchg
pop
or
and
lods
xor
mov
xor
repnz
push
push
jno
leave
jns
or
mov
jl
fisttpl
aaa
or
or
mov
into
jecxz
divl
clc
movsl
adc
mov
jmp
ljmp
les
cmp
and
jecxz
icebp
sub
push
sbb
adc
test
push
jle
push
cli
aad
pop
adc
inc
adc
je
popa
pusha
add
jne
iret
into
imul
dec
push
aad
dec
into
call
xchg
decl
push
or
std
push
jmp
idivb
pop
icebp
sbb
adc
adc
and
rcrl
icebp
and
shlb
in
sbb
loope
outsl
cmp
xchg
adc
ljmp
cmp
xchg
pop
sbbb
mov
add
pop
jecxz
add
push
inc
pop
mov
cmpsb
cmp
push
xchg
leave
xchg
mov
or
jg
pop
inc
sti
cli
das
sbb
in
shlb
inc
lods
inc
jnp
jmp
cs
je
push
shl
xchg
ds
pop
out
aad
sti
lea
shlb
mov
scas
cmp
or
lcall
cwtl
out
push
jo
and
ja
xor
xor
push
out
repnz
jns
rcrb
cli
fisubrs
and
ds
or
rcl
and
out
mov
push
jmp
addb
popa
sub
jnp
movsb
or
lret
mov
jbe
cmp
add
add
jg
xor
dec
and
inc
cmp
repz
test
inc
loopne
pop
add
iret
loopne
adc
call
sub
sub
popf
fdiv
addl
inc
mov
adc
clc
push
insl
rorb
inc
in
jg
and
repz
cmpsl
jg
call
subl
enter
mov
cmpsb
cmp
pop
out
aam
dec
loopne
mov
sbb
sbb
cmp
xor
test
add
ret
fisubrl
pop
fstps
mov
inc
das
dec
sti
fiaddl
jl
je
jmp
daa
clc
mov
xchg
cmp
scas
leave
lret
fcompl
xor
dec
sub
cmp
shrb
sbbb
dec
mov
jp
aad
add
cwtl
je,pn
insl
pop
gs
inc
push
pop
pop
fadds
addl
lods
sbb
adc
mov
add
pop
lds
dec
loop
mov
mov
xchg
jle
in
rcr
mov
pop
inc
mov
scas
pop
dec
fimuls
std
lahf
in
and
jo
or
cmp
sub
push
push
sbb
push
xchg
int3
rcrl
push
inc
sbb
ljmp
enter
fwait
cmpsl
mov
test
sub
push
fs
es
push
mov
ja
mov
xor
mov
inc
jns
jae
or
xor
dec
xor
into
enter
mov
push
inc
int3
xor
pop
aas
mov
popa
xchg
sub
dec
pop
add
cmpsl
sahf
sbb
out
and
or
clc
aaa
push
ds
push
pop
je
fbstp
mov
test
les
out
icebp
jo
pop
jmp
fistl
xchg
mov
sbb
fnsetpm(287
push
ret
lods
repnz
imulb
jle
pop
mov
bndstx
aad
sahf
loopne
fsubs
push
dec
adc
mov
jb
pop
mov
call
int
pop
adc
xchg
xor
cli
mov
movsb
push
ljmp
mov
pop
push
xor
cmc
xor
sbb
mov
mov
das
and
rcrl
sub
xchg
xchg
call
std
fs
jp
loopne
fstpl
push
or
pop
lret
cwtl
xor
pop
jmp
jp
sbb
lcall
xchg
inc
cmp
fildl
or
mov
flds
jne
vpunpckldq
out
lods
jg
inc
shlb
rcll
push
or
loop
dec
sbb
mov
hlt
xor
add
xchg
cmc
popl
push
pop
fisubrl
sbb
sub
add
inc
xor
sub
jmp
or
cmp
push
add
in
and
aad
jle
jmp
adc
cmp
repz
mov
fdivs
popf
adc
fidivs
adc
ficomps
push
jmp
push
out
test
cs
jb
lods
lods
xchg
arpl
jp
test
mov
push
in
rorb
test
pushf
shll
mov
je
xchg
xor
arpl
mov
and
mov
sbb
inc
lcall
test
rcrb
and
sub
dec
sub
ret
adc
xchg
jne
aam
out
fbstp
and
cld
stos
cld
pop
dec
scas
pushf
xor
inc
xchg
sbb
add
ret
xchg
enter
cld
mov
mov
sbbb
out
xchg
out
xor
insl
adc
fistl
shrl
sbb
or
xchg
pop
daa
jbe
push
or
push
out
loopne
enter
inc
or
push
jmp
popf
sti
or
push
ljmp
jmp
aas
mov
movsl
les
sub
stos
jb
int3
and
jno
loopne
fistps
jp
xchg
stos
add
aaa
call
mov
xchg
movsb
sbb
loope
sarb
mov
fdivrs
pop
push
add
push
jnp
xchg
inc
ret
das
jo
loop
mov
btr
mov
icebp
fcompl
sarb
imul
mov
cmp
xchg
lea
shrl
fstp
test
arpl
es
mov
cli
jle
adc
push
insb
sub
sub
add
arpl
popf
xchg
pop
sbb
xchg
cmp
push
add
push
xor
jmp
fucomp
xor
add
in
imul
cwtl
dec
popa
push
outsb
test
sub
imul
jecxz
sti
jo
mov
out
sarl
outsb
xchg
mov
movsl
rolb
jns
sub
adc
dec
mov
test
fcoml
mov
jmp
loopne
jp
fs
hlt
push
mov
int3
pop
jb
out
xchg
lods
push
test
cmp
lahf
or
inc
sub
sti
mov
xor
js
push
lahf
dec
negb
in
mov
ret
repnz
push
scas
popa
pop
pop
stos
inc
imul
das
pusha
hlt
cltd
mov
mov
mov
pop
in
mov
jnp
aas
mov
sub
inc
aas
xchg
sti
pushf
mov
pop
pop
movsl
mov
dec
fidivs
es
lea
fstl
xor
sti
mov
imul
aaa
mov
fneni(8087
bound
scas
jns
and
and
push
push
mov
mov
adc
or
cmpl
fwait
push
dec
addr16
imul
jl
xchg
cmp
or
outsb
daa
call
mov
jae
cmpsl
add
test
inc
out
sub
push
out
out
fwait
adc
inc
inc
mov
xchg
test
mov
bnd
mov
pop
cli
mov
loope
icebp
movsl
mov
jecxz
enter
jmp
dec
sbb
pop
jle
mov
out
xor
push
jne
jle
mov
cmp
xchg
jmp
out
insb
mov
jg
mov
xlat
xor
repz
lcall
sub
add
repnz
lcall
enter
cmpsb
mov
stos
movsb
andb
fiadds
sub
xor
bound
adc
pop
or
movsb
add
sub
add
or
jecxz
xor
inc
and
pop
arpl
lret
cmp
stc
scas
mov
aam
sbb
and
jnp
rorl
sub
popa
pop
dec
mov
ret
and
ljmp
mov
inc
lea
sbb
or
in
sbb
insl
xor
inc
pop
inc
pop
mov
mov
xor
cmp
jnp
fstpl
cld
pop
fmuls
jecxz
rcl
mov
shrb
xor
dec
add
mov
fs
jns
xor
stos
jecxz
push
mov
xor
xlat
shlb
xchg
fabs
mov
jmp
pop
les
in
das
fwait
das
pushf
xchg
lcall
pop
insb
test
adc
and
xorb
xchg
pop
add
adc
in
mov
lods
or
sbb
ret
dec
aam
bt
data16
sbb
mov
add
or
loopne
sub
sub
es
rcrl
xor
mov
xchg
jg
call
mov
push
xor
inc
js
fisubl
mov
add
xor
mov
lods
mov
lcall
xchg
sti
sti
ss
aas
adc
aad
sti
int
add
mov
sarl
xchg
add
movsb
dec
ret
or
fnstenv
movsl
adc
cmp
pop
icebp
add
mov
sbb
dec
and
lock
mov
rcrb
jae
push
stc
pop
hlt
adc
push
dec
loop
je
mov
adc
or
sbb
test
loope
jp
mov
mov
sbb
mov
dec
cmp
movsb
mov
mov
lret
dec
in
cmc
adc
je
cmc
inc
jno
add
mov
xor
push
test
scas
jnp
mov
sub
mov
cmc
iret
inc
adc
mov
imul
adc
mov
xor
xchg
rcrb
xor
mov
add
pushf
fnstenv
jne
dec
lods
cmp
fildl
jecxz
push
aas
jo,pt
push
js
repz
ret
xchg
cmp
pop
addr16
pop
cmp
and
xchg
add
pop
shlb
push
outsb
jb
or
push
jne
mov
shl
rclb
add
sar
jns
mov
push
and
push
movsb
and
scas
pop
dec
pushf
out
jecxz
mov
sbb
test
jno
shll
xchg
fsub
testb
cltd
mov
adc
ja
movsb
jp
das
dec
lea
mov
enter
sub
mov
repnz
mov
add
call
adc
cmpsl
pop
pop
xor
cli
xchg
xor
add
lcall
mov
jb
xchg
push
icebp
repz
xchg
sub
fdivs
cmp
xchg
ss
sub
inc
cltd
xor
inc
fwait
inc
cmp
mov
and
jae
dec
loop
inc
adc
cli
push
add
push
mov
rcr
sbb
fstl
xor
int3
xlat
and
inc
fcoms
lods
pop
int
ja
cmp
jbe
mov
sbb
mov
je
js
xchg
cltd
stos
insb
arpl
repnz
sbb
cwtl
or
inc
add
aam
call
arpl
je
pop
fiadds
lret
fldt
and
xchg
fs
xchg
fld
sbb
push
fwait
sub
push
out
mov
std
jnp
out
xor
xchg
push
mov
mulb
push
out
sbb
daa
mov
push
pop
lcall
sbbl
and
xchg
leave
mov
adc
add
out
icebp
dec
fsub
jle
loop
add
ja
lea
inc
fsubrl
icebp
or
xchg
pop
xchg
mov
mov
adc
jno
ret
les
push
je
add
fldenv
add
lods
cmp
ret
into
lret
add
fcompl
sbb
pop
aam
mov
jecxz
fstl
pop
pop
pop
repnz
shrb
sbb
in
inc
pop
xor
ret
mov
lahf
adc
mov
mov
mov
fucompp
fdivl
or
lea
clc
lcall
insl
test
push
mov
nop
mov
movsb
push
sub
adc
test
and
push
icebp
cltd
aaa
mov
adc
mov
arpl
cmp
les
popl
or
out
add
adc
sub
outsl
inc
push
xchg
add
ret
jg
pop
jbe
fistl
das
into
sbb
insl
or
jl
loop
pop
scas
loope
sub
test
or
and
popa
fistl
je
pop
ret
loope
aam
das
mov
xor
add
sbb
das
popa
insl
dec
mov
out
sbb
dec
and
mov
into
xor
out
inc
push
pop
push
push
push
pop
pop
mov
xor
pop
lret
rcrb
xchg
test
dec
movsl
add
cmc
jo
add
cmp
push
repz
call
into
loopne
rcrl
jp
cli
negb
jmp
sarb
mov
test
sbbl
mov
xor
lcall
pop
mov
cltd
lcall
call
ja
shl
inc
int3
mov
inc
sub
sub
xor
dec
loope
and
push
cld
out
lret
out
sbb
sub
test
push
cmp
sub
sbb
mov
jne
sbb
rolb
ror
dec
sub
fwait
sub
repz
fidivl
arpl
push
in
jae
add
adc
test
shl
mov
xor
fucomip
loop
out
orl
icebp
ret
shlb
sub
fcoms
into
sub
push
xor
jo
push
adc
std
in
pop
inc
xor
loop
sbb
imul
movsb
enter
dec
jns
mov
adc
xor
add
inc
mov
das
and
jecxz
xchg
sbb
fists
adc
shrb
jo
mov
pop
and
sub
jl
pop
cltd
test
fstps
scas
inc
outsb
lahf
pop
mov
pop
ds
xlat
cmp
shl
inc
cmp
in
or
popa
sub
in
lods
ret
cs
std
cmp
in
aaa
cmp
jne
push
pop
cmp
inc
rcrl
mov
daa
pop
imul
addr16
repnz
mov
and
test
pop
stc
popa
loop
es
imul
arpl
rolb
pop
lods
dec
jecxz
ljmp
sti
xlat
aad
in
xchg
cmp
gs
adc
inc
popa
xor
xor
imul
or
inc
lahf
mov
mov
cmp
add
push
inc
mov
xchg
mov
popf
leave
push
repz
in
es
into
fmul
fnstcw
push
jns
movsl
sub
lods
mov
ljmp
jb
xchg
mov
or
pop
xor
in
mov
add
mov
roll
movsb
dec
fsubr
dec
test
ja
xchg
test
push
inc
push
out
test
sbb
rcrb
sub
mov
or
int3
and
jle
push
xor
xchg
and
gs
push
or
lds
xor
push
add
shrb
ljmp
lea
shrb
divl
jo
push
xchg
and
cmpsl
daa
xlat
out
inc
dec
adc
xor
xlat
arpl
sbb
sar
and
icebp
dec
mov
pop
xchg
sub
jns
xchg
outsb
lods
mov
rcll
outsb
aas
jg
add
mov
lcall
repnz
pop
sbb
sub
inc
mov
ljmp
mov
inc
lret
inc
cmp
es
add
jb
xor
outsl
mov
inc
xchg
fbstp
js
add
daa
in
dec
sbb
loopne
pop
jle
adc
enter
sub
jno
jp
sbb
mov
mov
or
mov
push
push
fwait
cmp
inc
xor
push
ljmp
pusha
or
push
mov
aam
in
ret
add
stos
repz
repz
or
je
mov
lods
clc
into
movsl
and
push
xorb
mov
push
pop
cmp
xchg
outsb
fwait
in
loopne
inc
test
out
mov
mov
mov
mov
nop
sahf
pop
repnz
fwait
pop
xorl
xchg
outsl
popa
negl
dec
or
and
or
sti
adc
jno
lret
push
mov
call
scas
loop
xlat
mul
lret
mov
fidivrs
jle
xchg
scas
pop
out
sbb
loope
and
or
xlat
arpl
leave
pop
xor
in
cmc
and
std
pop
push
js
inc
sti
push
push
int
push
or
repz
xchg
sbb
add
fcmovbe
inc
out
sub
fildll
sahf
daa
out
lcall
inc
in
adc
xchg
js
adc
subb
push
mov
fucomip
decb
push
lods
shll
sbb
stc
inc
cmpsb
addr16
ljmp
pusha
dec
pop
jo
pusha
idiv
fcmovbe
into
jae
lahf
sahf
sub
cmp
lcall
jo
xor
call
cltd
stc
fdivrs
mov
test
mov
loopne
inc
popf
daa
daa
test
jbe
and
xchg
xorb
je
pop
mov
pop
pop
pop
test
lret
xlat
inc
ljmp
adc
inc
mov
ja
pop
dec
jb
icebp
in
inc
mov
push
sahf
les
xchg
add
outsb
ja
notb
addr16
addb
mov
cmpsb
in
mov
mov
ror
vpsrld
and
and
emms
pop
adc
mov
int
test
iret
push
hlt
out
pop
pop
sub
jae
pushf
cmc
mov
ds
mov
sub
jno
shr
mov
loope
adc
or
push
testb
xor
push
add
add
inc
fsubr
adc
int
jnp
sbb
fstpt
push
dec
aas
lock
sbb
sub
aad
bound
ficoml
outsb
xchg
push
imul
enter
pop
je
adc
hlt
hlt
xor
push
jmp
shll
push
insl
push
dec
int3
lods
cmp
push
repnz
mov
xchg
in
inc
out
mov
and
jns
adc
xchg
aas
push
lock
lret
aas
push
rcr
add
cmpsb
lods
inc
mov
or
test
and
hlt
imul
xor
and
mov
and
icebp
push
clc
mov
dec
loope
loopne
xor
sub
lret
sub
call
mov
adc
dec
or
mov
bound
popf
adc
and
jbe
xchg
or
jmp
jae
or
push
test
fnstenv
xchg
inc
sbb
xchg
data16
mov
sbb
xchg
bound
ljmp
js
xchg
or
xor
or
cmpsb
daa
mov
iret
jmp
mov
out
pop
sub
andb
sbb
lret
test
test
test
xchg
cmpsl
add
out
push
xor
mov
clc
in
dec
insl
cmpl
ret
mov
addr16
adc
xor
test
cs
jbe
and
xor
lods
andb
inc
jae
mov
pushfw
mov
int3
movsl
xor
adc
shl
mov
and
arpl
fisubl
lods
xlat
add
repz
cmpsl
jmp
inc
das
loope
hlt
fsubr
sub
inc
aas
aaa
rorl
mov
ss
shl
imul
xchg
dec
jp
xor
and
cmp
enter
jmp
mov
mov
pop
xchg
scas
mov
clc
mov
repz
mov
push
int
test
stos
shrl
push
in
mov
jmp
xchg
push
push
and
xor
push
imul
jae
test
negb
pusha
jbe
sbb
ret
cmp
inc
adc
and
inc
ljmp
roll
inc
mov
push
pop
pop
or
rcr
ret
les
add
adc
movsb
dec
mov
inc
push
push
jae
imul
mov
test
sbb
xchg
bound
sti
dec
pop
dec
ljmp
add
mov
mov
push
lock
adc
test
jecxz
addb
rclb
shlb
pop
ja
mov
imul
sbb
jge
fists
int3
loope
lahf
cmp
adc
xor
pop
in
inc
out
sbb
and
lcall
das
les
mov
add
mov
ja
test
in
inc
add
pop
lock
idivl
dec
adc
mov
pop
stos
out
shrl
mov
sub
subb
test
mov
int3
or
cmp
jp
add
rcr
notl
addr16
sti
pop
mov
rclb
test
jb
sbb
lea
dec
jns
xor
sub
repz
stos
lds
dec
pop
adc
int
jl
add
outsl
cwtl
or
inc
sarb
ljmp
lret
je
jns
dec
mov
jo
xchg
cmpsl
lock
add
and
test
sahf
cwtl
dec
cli
aam
jl
xor
dec
sub
in
xchg
push
or
mov
mov
and
js
mov
pop
jecxz
adc
sub
mov
repnz
push
roll
push
sahf
mov
cwtl
js
push
push
jae
jge
daa
jo
lahf
outsb
mov
addr16
sti
dec
mov
lahf
dec
cmpsl
popa
xchg
into
ret
and
or
add
call
insb
clc
push
lods
and
stc
jo
movsb
out
mov
cwtl
jo
add
gs
movsb
or
lds
xor
pusha
lret
dec
sub
icebp
out
mov
fisttps
cmp
in
push
jp
out
leave
inc
test
inc
out
lds
jecxz
sahf
and
fdivs
repz
add
sub
cmp
dec
pop
mov
ja
data16
mov
cmp
gs
shrl
jno
lock
cs
jge
adc
pavgb
pop
fmulp
and
push
daa
adc
std
cmp
mov
int
stos
pushf
xor
mov
loop
pop
std
dec
test
and
rorb
mov
in
dec
lahf
dec
aam
les
inc
int3
sbb
scas
hlt
pop
mov
pusha
hlt
fldenv
add
jnp
lret
fsubrs
mov
mov
push
mov
jmp
dec
mov
movsb
lods
pop
div
add
sarb
ret
push
jo,pn
adc
inc
inc
dec
cld
sarb
add
cmp
xchg
jecxz
aas
jecxz
pop
and
and
mov
mov
mov
push
rorl
and
cmp
or
jl
clc
mov
ljmp
in
dec
inc
pop
cmp
cld
push
add
cmc
addr16
clc
repz
jmp
sub
inc
pop
es
clc
cmpsb
rcl
sahf
iret
es
pop
out
fnsave
cmp
add
jmp
inc
mov
cwtl
int3
mov
add
jle
adc
add
jno
or
mov
nop
aaa
lods
insb
stc
cmp
mov
dec
ja
jp
xor
jmp
cmp
int3
cmc
fsubs
add
dec
mov
mov
mov
clc
and
mov
pop
mov
pusha
aas
mov
jmp
mov
rcl
fwait
mov
les
icebp
fidivrs
mov
jmp
sub
mov
int3
cli
out
in
or
insl
scas
pop
lock
xchg
ret
push
jmp
out
pop
int3
stc
cmpsb
aas
repz
xor
loopne
or
int
sub
les
jmp
xor
loope
shrl
orb
outsb
jbe
movsb
fsqrt
fisubrl
nop
loop
ja
lea
inc
xchg
test
rcr
jne
cmp
movsb
sub
aaa
stc
cmc
cmc
push
push
adc
cwtl
icebp
enter
test
movsb
aas
mov
mov
mov
jp
add
adc
aas
sub
sbb
push
test
cmp
dec
cmp
push
leave
sbb
stos
enter
rcr
aad
enter
add
popa
mov
or
dec
adc
call
cmp
sbb
pop
fdivrl
mov
aam
dec
cli
push
xor
cmc
out
mov
ret
test
sbb
in
push
movsb
inc
xorl
adcb
icebp
stos
mov
jmp
sahf
and
loopne
out
mov
andb
push
mov
das
push
mov
xchg
out
andl
jge
add
sbb
xchg
repnz
sahf
jns
and
push
loop
leave
in
int3
lea
xor
jl
in
mov
ret
sarl
filds
enter
add
mov
cmpsl
pop
push
pop
ficompl
out
pushf
or
add
sbb
scas
data16
repz
xchg
sub
add
lods
iret
stc
lret
lods
js
shll
fmull
dec
jne
jmp
xchg
repz
scas
mov
shr
test
mov
inc
push
jg
das
push
add
inc
and
out
push
or
movsl
adc
and
mov
inc
push
mov
dec
add
pop
and
iret
test
mov
and
imul
mov
mov
sbb
or
ss
and
xor
push
inc
jmp
pop
jo
jae
pushw
inc
or
lcall
xlat
scas
nop
cs
test
les
daa
dec
in
mov
push
dec
dec
arpl
sbb
mov
repz
cmp
sub
cmp
inc
push
push
lcall
in
popa
sub
mov
ss
push
addb
or
push
mov
jmp
xlat
xchg
adc
mov
push
icebp
or
or
shrl
xchg
push
adc
jecxz
inc
mov
je
jl
ljmp
jl
pop
loopne
vpmacssww
int
fxch
mov
jae
das
into
xor
decl
ror
mov
push
loopne
push
jmp
das
jmp
and
jbe
push
fldt
std
push
js
pop
aad
dec
aas
cld
adc
insl
negl
sti
mov
imul
jae
js
cs
or
fsubs
cld
sti
clc
adc
cmpsb
sbb
movb
mov
and
push
or
sbb
sub
sbb
or
mov
push
call
int
in
cmp
sub
xchg
cli
and
jne
and
push
push
push
adc
dec
add
add
cmp
imul
and
lds
notb
out
jmp
fwait
out
sbb
xchg
jle
sbb
xor
add
je
addr16
push
bswap
jecxz
jmp
sarl
aaa
jbe
clc
add
lret
gs
add
adc
lods
sahf
jbe
push
fisubl
loop
cmpsb
inc
pop
fstpt
fwait
or
push
cmp
sub
insl
sub
sbb
push
cli
adc
outsl
std
dec
inc
and
push
pop
jle
movsl
out
push
adc
ds
xchg
push
pop
mov
sbb
in
out
ficoms
push
sub
mov
imul
test
fs
pop
and
ret
mov
fwait
push
adc
push
jle
inc
repnz
mov
in
dec
out
pop
scas
iret
cmp
xor
aad
stos
inc
shlb
pop
push
int
lods
and
out
pop
mov
and
or
mov
mov
lea
push
cmpsb
sti
fiaddl
movsb
mov
std
pop
cmp
shlb
push
dec
push
fdivs
xor
test
xchg
ss
leave
dec
aad
pop
cwtl
sbb
xchg
lods
push
insl
subl
sub
sub
pop
out
mov
cwtl
testl
xor
push
popf
ljmp
lock
xor
adc
sbb
push
movsl
enter
cmp
mov
jmp
popa
leave
popf
test
icebp
divl
popa
adc
dec
mov
pushf
cltd
sub
jnp
lods
push
insl
mov
add
lods
jl
cltd
inc
jge
pop
int
subb
sub
scas
push
add
ficoml
inc
dec
xchg
insb
in
lret
cwtl
repz
les
push
or
push
repnz
loop
adc
mov
cmpsl
mov
push
jbe
xchg
cmp
xor
dec
xchg
push
into
push
pop
adc
xor
mov
icebp
or
jae
or
mov
mov
mov
daa
jbe
gs
dec
jle
outsl
stos
pop
fisttpll
leave
add
inc
dec
aad
test
lret
popf
mov
int3
pusha
fs
xchg
cli
fdivl
lcall
xchg
cmpsl
mov
pop
cltd
adc
insb
lahf
mov
push
dec
mov
mov
pop
mov
repz
fisttpl
jl
fldenv
loopne
aad
call
stos
js
adc
pop
imul
mov
stos
sbb
stos
leave
punpckhbw
mov
mov
stc
sbb
sbb
aaa
sbb
mov
xchg
or
pusha
push
mov
sub
cmp
popa
movsl
in
push
inc
mov
inc
mov
int
xor
hlt
aas
pop
test
loopne
dec
dec
sub
push
push
push
sbb
mov
pop
pop
sbb
std
clc
orb
fnop
lds
test
sbb
scas
dec
ds
imul
push
inc
sahf
adc
frstor
xchg
sub
loope
data16
xchg
jle
dec
pushf
pop
fsubr
ds
sbb
inc
jmp
pusha
mov
pop
rcrb
ljmp
add
mov
loop
or
imul
int
jecxz
xchg
icebp
test
int3
repnz
mov
icebp
out
pop
aam
pop
jnp
fsubs
sbb
pop
dec
es
and
leave
stos
daa
imul
cld
fucomp
test
stc
fsub
in
dec
out
jmp
mov
scas
sub
push
lahf
push
call
mov
es
dec
lock
cmp
sub
xchg
cs
imul
or
popa
sbb
adc
push
test
das
xor
push
pop
pop
xlat
inc
js
shll
sahf
sub
jnp
mov
stos
pop
xchg
shl
loop
mov
outsb
aam
add
add
dec
iret
cmpsl
aas
testb
in
and
jne
add
jmp
and
imul
mov
dec
and
into
sub
xor
add
je
cld
loop
push
test
sti
cmp
xchg
movsb
mov
push
mov
mov
and
into
push
jg
into
cmpsl
inc
dec
repz
subl
xchg
idiv
pop
stos
sub
push
lret
jg
or
push
std
nop
iret
aad
aaa
sti
jmp
and
xchg
mov
cmp
and
push
mov
shr
popf
pop
andb
mov
sub
repz
gs
add
or
xor
mov
sahf
jp
pop
dec
jo
lea
jne
inc
xchg
ret
orl
xchg
testb
fisubrl
popf
movsb
or
mov
mov
fs
into
adc
push
aas
fistpl
lcall
shrl
xchg
lret
push
mov
push
loop
sbb
add
or
add
fistpll
and
daa
mov
push
call
icebp
inc
cmp
push
and
hlt
pop
cmpsl
pusha
lahf
mov
push
shrl
xor
test
clc
or
stc
fsubr
jnp
mov
xlat
sub
fs
mov
stos
test
jb
in
in
push
lods
cmp
roll
pop
push
jecxz
jns
imul
imul
sbb
push
stos
fmuls
shrb
xchg
jns
push
out
je
or
inc
loopne
pop
cmp
repz
jne
sub
mov
adc
out
mov
jg
cltd
xchg
imul
call
test
lahf
mov
faddl
jnp
push
popf
push
inc
out
divb
aas
jge
sbb
jne
jp
mov
pop
cmpsl
jnp
jbe
pop
inc
add
pop
dec
and
mov
je
ljmp
lods
aas
sbb
and
cltd
out
xchg
test
jle,pt
nop
jb
lret
mov
and
in
jmp
pop
mov
dec
fadds
leave
je
jp
sub
mov
push
lods
pop
lods
pop
xchg
mov
mov
xor
in
mov
cltd
adcl
out
dec
pop
cmp
jl
les
and
lods
ss
sbb
hlt
cmp
cmp
aas
jns
fnsave
enter
and
mov
stos
loopne
jnp
mov
adc
pop
imul
fcmovbe
imul
push
pop
jno
mov
dec
insb
aas
sbb
fistl
push
bts
or
sub
adc
xchg
push
fistpll
insl
sub
dec
in
push
es
jecxz
cld
xchg
mov
lods
gs
jb
arpl
push
pop
push
enter
pop
cmpsl
pop
mov
aad
testl
push
and
jl
nop
sar
adc
push
dec
fcmovu
stos
mov
sbb
repz
inc
sbb
cmp
jl
push
xchg
shr
daa
aas
dec
test
cmp
repnz
in
dec
mov
cs
daa
cmp
xor
or
cltd
das
and
inc
and
fcmovb
and
out
xchg
jae
je
add
jge
cmc
test
pushf
mov
outsb
stos
ret
fst
ret
jp
stos
xchg
rcll
mov
mov
push
cmp
hlt
in
mov
ss
xchg
sbb
hlt
iret
sbb
xlat
out
aad
jne
shlb
push
loope
lahf
push
or
jmp
jbe
mov
and
lock
jmp
cltd
sbb
aad
lods
insb
push
outsl
jmp
or
fildl
jl
daa
jnp
adcl
fucomip
mov
jb
mov
mov
push
xor
test
xchg
movsb
fists
into
mov
cmp
testl
das
out
test
insb
sbb
mov
popf
arpl
adc
and
outsb
inc
xor
add
add
mov
das
xchg
inc
addr16
ror
xor
rcl
out
hlt
xchg
dec
mov
hlt
testl
cmovle
mov
dec
andb
popf
lcall
mov
dec
into
stos
lret
mov
sbb
and
loopne
sarl
lahf
xchg
sub
subl
in
leave
stos
sbb
addr16
sub
adc
std
xor
aaa
jae
sahf
push
sub
aas
mov
sbb
adc
mov
enter
inc
pop
mov
gs
lds
lock
arpl
adc
int
data16
jecxz
rorl
push
adc
loope
pop
inc
xchg
xlat
jecxz
ljmp
js
pop
xchg
js
fdivs
aaa
dec
cmp
pop
cltd
xor
cmp
aas
cmp
ds
xrelease
sti
lahf
fs
js
inc
mov
fnstcw
pop
lret
ret
outsb
and
lock
outsb
xor
je
cli
imul
in
and
data16
adc
inc
mov
cld
cmc
jecxz
movsl
mov
arpl
push
cmpsb
jno
popa
and
mov
lret
add
xlat
mov
cmc
xor
in
test
dec
xlat
lds
xchg
sahf
aas
nop
fnsave
mov
scas
push
lcall
stos
mov
aas
xchg
andb
push
xchg
notl
sbbb
inc
adc
pop
jle
jg
dec
cmp
enter
mov
jne
out
pop
pop
mov
push
enter
mov
rclb
jne
push
push
or
outsb
in
xchg
mov
subl
rorl
dec
jl
pop
and
mov
loopne
mov
lods
ror
jbe
sbb
and
addb
je
cmp
mov
push
cli
push
les
je
call
mov
sbb
into
int
fstps
mov
push
mov
pop
add
mov
pop
je
les
jp
dec
stc
leave
push
decl
roll
mov
nop
mov
repz
lock
xchg
mov
popf
insl
rorb
aaa
push
or
cmp
ficompl
ret
addr16
push
test
test
std
mov
imul
scas
dec
dec
fidivl
in
int3
leave
jecxz
dec
inc
movlps
sti
call
dec
adc
popa
aas
fs
jne
cmp
push
loope
xchg
popf
push
fwait
enter
test
in
call
inc
stc
pusha
popf
fwait
pop
or
push
and
or
scas
mov
pusha
dec
icebp
dec
sub
lret
jae
pop
xor
ljmp
push
loop
aaa
fwait
test
add
pop
insl
cmpsl
cmp
lcall
fwait
push
shll
xchg
mov
fdivl
fistpll
xchg
jmp
inc
scas
mov
iret
adc
aas
ljmp
xchg
adc
subl
or
sbb
ja
push
pop
pop
hlt
push
mov
mov
add
lret
push
adc
lahf
add
pop
je
call
icebp
aam
or
adc
dec
mulb
xchg
out
add
test
sbb
xchg
movsl
out
stc
out
inc
inc
dec
adc
push
dec
jbe
xchg
jno
call
xor
xchg
add
fiaddl
filds
mov
sub
fcom
insb
sub
or
lret
addr16
fdivs
imul
addl
test
jb
cli
fistpll
pop
mov
movsl
lods
jo
xor
incb
fcomps
sub
fwait
pop
je
add
aad
repz
jbe
cmp
rcr
xchg
adcb
insl
insl
mov
into
rorb
xchg
cmp
in
aam
jbe
in
add
xchg
sub
pop
adc
dec
inc
mov
test
adc
add
or
push
daa
ret
hlt
ss
push
sbbb
xchg
test
std
lds
call
in
add
jge
popa
test
lret
sub
in
test
mov
dec
aaa
jge
movsb
fcompl
sbb
xchg
adc
and
and
or
fwait
test
mov
setae
sub
push
jne
dec
sbb
bnd
sahf
sti
sub
lret
or
loope
pop
lcall
dec
pop
jnp
dec
adc
outsl
sbb
negl
rorl
movsl
inc
mov
scas
arpl
fistl
aad
in
popa
aaa
out
jp
loope
scas
aas
xor
mov
mov
clts
adc
push
js
fisubrl
sti
push
rcr
daa
fwait
in
adc
lea
ret
pop
and
ffree
inc
and
or
adc
and
jne
enter
into
xchg
dec
sbb
pushf
xchg
bound
push
fstps
das
inc
xchg
sbb
fs
add
hlt
aad
das
das
scas
xchg
pop
std
in
sbb
imul
or
sbb
xor
sarl
mov
cmc
or
sbb
data16
push
jecxz
push
rolb
and
jg
mov
push
in
or
push
rcll
mov
nop
fmull
jbe
xor
and
cld
shlb
int
sub
out
xchg
test
xorb
and
mov
call
adc
ljmp
adc
arpl
xchg
push
pop
iret
xchg
rcrl
addr16
xchg
and
xlat
xchg
adc
cmpsb
adc
sbb
fucomp
or
pop
cmp
adc
out
shll
idiv
jp
mov
arpl
mov
mov
das
adc
ficomps
mov
cs
sbb
cmp
stc
pop
sahf
pusha
fisttps
cld
add
push
jmp
inc
insw
dec
pop
movsb
xchg
jg
pop
inc
loope
fisubrl
aam
ds
pop
pop
mov
sbb
adc
sub
out
fwait
mov
ljmp
add
mov
mov
mov
sub
out
jg
mov
into
sahf
iret
dec
fimull
dec
out
mov
cli
mov
test
jp
or
js
shll
jnp
cmp
cwtl
or
dec
outsl
jae
loopne
ret
adc
mov
repnz
repnz
das
sarl
fldl
int3
aaa
les
cmp
arpl
orl
jae
xchg
inc
sbb
je
test
xchg
std
loope
scas
mov
outsl
test
push
outsl
xor
pop
rolb
mov
mov
pusha
or
pop
xor
jnp
movl
fwait
pop
divl
push
jbe
insl
dec
pop
pop
pop
daa
iret
mov
pop
jo
gs
arpl
cltd
mov
push
inc
loope
sahf
shll
nop
fisubl
adc
dec
mov
call
ljmp
adc
dec
sub
repz
popa
xor
pop
inc
inc
push
pop
adc
or
dec
xchg
gs
mov
pop
cmp
cmpsl
aas
push
fwait
xorl
cmpsl
imul
mov
cmp
mov
or
icebp
scas
iret
loope
arpl
mov
mov
test
sub
xchg
test
aaa
ljmp
mov
mov
xchg
cli
mov
and
adcb
and
push
mov
cmpl
std
addr16
ljmp
fstp
popf
jmp
lds
icebp
cmp
fisubrl
sub
xchg
into
push
les
aas
aam
data16
or
dec
popa
pop
mov
rorb
aas
jl
pushf
int
fcoms
mov
dec
xor
aam
and
cs
jge
xchg
or
dec
mov
or
cmp
add
xchg
div
movsb
or
call
cmp
jo
imul
enter
cmpsl
aaa
xor
sbb
lahf
cltd
jge
lods
pop
pop
mov
outsl
cli
push
or
mov
fisttpll
outsb
imul
sahf
ljmp
xor
push
jns
mov
adc
loop
pop
imul
outsb
outsl
push
fcomi
and
adc
inc
sub
jge
aad
mov
mov
add
inc
shll
in
pop
push
dec
dec
test
sub
dec
push
out
std
outsb
jne
mov
mov
xorb
rcll
mov
dec
out
lods
lds
mov
rcrl
adc
cmpsl
pop
add
jns
xor
out
adc
in
push
sub
mov
xchg
imul
outsl
push
icebp
cs
pop
sbb
out
mov
fucompp
adc
aaa
jmp
sbb
mov
dec
add
add
imul
inc
cld
aas
pop
dec
xor
ja
das
xchg
mov
and
and
cmp
add
adc
pop
pop
fidivrl
push
insb
xchg
mov
inc
inc
xchg
adc
push
pop
addr16
mov
sti
das
push
shl
jo
repnz
and
out
sbb
popa
pop
xor
dec
fiaddl
mov
push
sti
mov
jb
sbb
push
add
les
in
adc
jbe
aas
popf
daa
or
pop
loop
sbb
adc
jo
ret
add
bound
push
mov
into
loope
cmp
cwtl
aas
jbe
push
aas
aaa
sub
scas
pop
insl
xchg
or
adcl
pop
add
pop
jecxz
sahf
gs
and
push
mov
mov
push
shrb
sahf
lret
movsl
cmpsb
sbb
cmpb
adc
mov
sub
sti
lret
add
or
stos
mov
inc
pop
iret
dec
and
jno
xor
xchg
cwtl
ja
xchg
cmp
add
les
sbb
sbb
inc
mov
in
jmp
aam
xor
sbb
cmp
dec
push
adc
jno
movsl
arpl
xchg
lret
and
xchg
or
jg
xchg
pop
in
mov
data16
cmp
idivb
std
test
mov
xor
mov
dec
fisttpl
leave
cmc
inc
and
cmpsb
mov
or
inc
mov
xchg
push
cltd
xlat
xor
jo
stos
inc
jbe
or
adc
jno
outsl
outsb
test
aas
leave
jo
add
scas
mov
push
mov
xlat
mov
inc
mov
and
insl
cltd
sub
lea
cmp
cmpsl
fiaddl
fsubrl
push
bound
mov
bound
sub
div
and
mov
out
into
fs
dec
cmpsb
push
xor
dec
lea
inc
cmpsl
mov
jmp
jl
pop
or
push
js
pop
mov
mov
aad
and
cmp
push
outsb
popf
or
fucom
aas
xor
or
dec
fiadds
jns
popf
shrl
div
or
pop
pop
jns
adc
and
les
sub
sbb
dec
ret
xchg
sub
dec
ds
jne
pop
imul
or
lock
test
jmp
out
shll
cwtl
inc
push
insl
mov
xor
mov
push
cmpsb
cltd
sbb
mov
aad
jl
pop
and
inc
cmp
mov
ret
test
scas
push
lea
xchg
inc
fimull
in
push
jmp
cs
cmp
dec
lds
lods
out
inc
dec
cmc
mov
lods
xchg
mov
int3
push
xorb
dec
shl
jge
fneni(8087
dec
addl
mov
and
add
data16
shrl
and
dec
lcall
mov
dec
xchg
loope
mov
mov
divb
pop
push
and
iret
pop
cwtl
lods
mov
sbb
inc
loopne
ja
clc
lret
call
xchg
stos
adc
arpl
fldl
lock
sbb
scas
xor
loope
or
mov
imul
test
stos
fidivs
inc
insl
inc
rolb
rcll
outsb
ret
aas
or
push
ds
inc
addr16
cli
out
ljmp
test
add
fwait
icebp
mov
push
jg
test
sbb
mov
adc
rol
mov
mov
dec
cmp
lahf
xor
mov
sbb
mov
add
jmp
or
add
fisubrl
push
sub
lret
mov
rolb
and
mov
lock
mov
ret
add
jnp
lods
mov
insl
fs
aas
push
iret
leavew
xorl
repz
sub
scas
fimuls
mov
jo
mov
fs
insl
cmpsl
mov
cwtl
pushf
and
in
pop
dec
mov
push
push
jno
lea
cwtl
jnp
js
jg
test
xchg
rol
shrl
out
pop
stos
lods
out
and
dec
sub
push
inc
fs
cmp
movsb
push
imull
ja
shll
add
rcl
push
fmuls
lahf
notl
or
call
int3
js
push
iret
movsl
fcomi
or
aaa
and
cmpsl
sbb
cld
cmc
xor
pop
ljmp
cmpsl
jns
movsb
lcall
rolb
inc
aad
aas
push
imul
lahf
push
xor
fimuls
pop
andb
bound
inc
xor
jno
test
push
in
or
popa
rol
add
push
nop
sbb
fldenv
and
xor
jne
xchg
and
add
inc
adc
jbe
iret
mov
mov
jp
scas
xchg
sbb
sub
fdivrl
push
jb
in
mov
mov
mov
mov
jbe
out
rorl
add
or
insl
mov
ss
ror
cli
jnp
add
scas
sbbl
insl
es
or
test
repnz
push
xchg
sbb
mov
mov
into
and
adc
xchg
nop
cli
push
shll
stos
out
and
push
test
cwtl
movsb
cwtl
xor
int3
test
inc
sub
sub
mov
xchg
dec
mov
test
mov
xchg
or
xor
xchg
lods
push
shrl
arpl
out
inc
lahf
jns
les
mov
int3
test
pop
cmp
jbe
daa
lret
fisubl
imul
iret
jne
pop
fists
push
movsl
mov
xor
push
sub
je
jecxz
std
cmpsb
push
int
adc
xchg
inc
mov
fwait
pop
sbb
sub
add
xor
shrb
jle
dec
xchg
sbb
lcall
shl
xor
push
push
cmpsl
jbe
shlb
ds
aaa
cmp
out
jno
lods
pop
fmull
sbb
or
clc
jmp
xlat
aam
loope
pop
sbb
mov
or
aaa
pop
clc
push
rcl
push
cmp
imul
movsl
call
push
pop
mov
ja
jbe
pop
mov
push
les
lods
inc
es
sahf
pop
sub
add
out
aas
sub
adc
inc
xchg
push
bound
jo
icebp
sub
cs
mov
hlt
xchg
jns
mov
mov
pop
inc
inc
mov
jg
push
pop
in
outsb
ret
cltd
inc
out
sti
test
repz
cmpb
push
ljmp
lods
imul
ds
xchg
dec
je
aas
ljmp
mov
jp
cmp
andl
mov
push
xchg
dec
or
stc
sub
push
or
cltd
mov
mov
jmp
jge
xor
sub
mov
das
ret
xor
cs
lds
xchg
sbb
xchg
ret
and
incl
std
mov
xchg
insl
and
push
mov
or
test
ficomps
xchg
subl
jecxz
std
xchg
in
fdiv
push
sub
mov
add
push
dec
lock
jmp
bound
xchg
mov
mov
push
repnz
in
daa
je
scas
push
sub
xchg
movsb
or
push
inc
loop
cmpsl
xor
adc
movaps
push
jp
outsl
push
dec
mov
sub
ljmp
in
je
test
fisttpll
adc
push
push
push
mov
sarb
sub
sbb
jb
cmp
mov
sbbl
add
pusha
xchg
je
xchg
or
pop
cwtl
and
and
xor
dec
xchg
bound
sbb
lds
dec
adc
sub
sub
test
jle
sub
xor
sbb
adc
xchg
pushl
out
adc
fs
push
pop
xor
pop
mov
lret
mov
cmp
sbb
mov
roll
out
iret
outsb
sbb
out
sbb
imul
jns
cs
sti
dec
and
je
pop
mov
sbb
ds
xor
adc
inc
fucom
orb
push
mov
shld
mov
and
adc
movsl
or
loope
adc
in
aas
xchg
les
or
mov
xchg
jecxz
xchg
cmpsb
jl
inc
cmpl
divb
test
leave
push
ja
enter
repz
outsl
jecxz
xor
fadd
shlb
pushf
lahf
dec
aad
and
add
adc
pop
push
sbb
fldt
dec
cmpsb
mov
cli
aad
xchg
push
xlat
jbe
pop
xor
push
inc
ret
rcll
lods
je
lock
dec
inc
cmp
sbb
imul
daa
jmp
bound
repnz
gs
xlat
cmpsl
pop
decb
cmpsl
xchg
decb
scas
adc
xor
jg
sbb
jecxz
fistps
ljmp
inc
mov
add
mov
in
scas
cli
sti
das
ljmp
fdivrp
call
shl
pop
jno
mov
mov
call
jge
xchg
jge
loope
fidivrs
add
das
sub
lds
sti
mov
insl
push
adc
fisubl
xchg
xchg
adc
pushf
add
add
test
outsb
daa
mov
aam
mov
mov
xchg
aad
lock
out
xchg
xchg
add
sahf
mov
xchg
sti
dec
inc
jne
mov
mov
int3
pop
neg
cmp
xor
xlat
cs
inc
sub
aam
jecxz
mov
mov
mov
cmp
arpl
scas
cmp
xor
xchg
out
xchg
pop
xor
sahf
push
add
mov
add
add
push
cmp
rcrb
lret
je
addr16
lahf
insb
outsb
and
fidivs
popf
ret
or
add
push
incl
dec
stos
xchg
xchg
xor
jmp
jmp
imull
lahf
fwait
js
mov
sbb
popa
jo
subb
inc
iret
lahf
inc
xorl
clc
pop
insl
mov
xchg
fldl
sbb
loopne
push
loop
aam
outsl
leave
ljmp
cmp
pushf
mov
rorb
bound
mov
scas
jle
fmull
inc
out
aaa
sub
and
jnp
pushf
push
lret
je
jge
jp
cmp
mov
arpl
call
enter
adc
inc
jle
cmpsb
mov
imul
rorl
and
and
gs
stos
jmp
orb
ret
xor
cltd
repz
sarl
dec
add
mov
nop
xlat
mov
data16
dec
mov
mov
mov
sub
scas
imul
jbe
and
inc
pop
add
push
cmc
mov
popf
inc
leave
fcomi
out
mov
add
mov
ss
in
daa
inc
aaa
ret
aam
xchg
sub
cmc
stos
movl
adc
mov
and
jg
adc
push
test
test
lods
push
and
xchg
push
fs
pop
lret
clc
pop
jb
iret
push
add
fimuls
fsubr
movsb
cld
inc
jne
inc
jp
mov
stos
push
inc
pop
sbb
sub
ljmp
lds
sub
testb
ficomps
rdmsr
fdivp
sub
lret
jecxz
aas
ret
jnp
mov
pop
push
inc
stos
test
int
push
or
xlat
arpl
inc
ret
inc
xor
movsb
push
add
cmp
push
cs
loopne
dec
lea
xchg
inc
mov
sbb
imul
loopne
and
scas
fstpt
jp
inc
pop
jno
dec
jb
sub
jo
lcall
sbb
jp
pushf
or
push
addr16
arpl
or
movsb
je
cmp
mov
aas
cmp
lock
scas
xchg
pop
and
test
inc
hlt
sbb
jecxz
adcb
adc
adcb
stc
cmc
iret
in
cmp
iret
mov
nop
cmp
das
setns
lahf
mov
stos
push
jnp
divb
mov
test
arpl
xchg
loop
test
or
and
pop
cld
test
test
jg
push
and
gs
cmp
inc
fdivrl
popf
in
dec
inc
push
cld
jl
inc
in
mov
dec
out
int
push
in
sahf
push
add
repz
add
or
rcrl
popf
ljmp
nop
shlb
and
adc
jmp
aaa
mov
and
sub
cmpb
pushf
inc
fiadds
cltd
loope
out
jl
sbb
pop
stc
mov
rolb
pop
negb
movsl
cmp
fdivr
sub
fiaddl
mov
in
rclb
dec
lock
rol
dec
setbe
mov
ret
cmp
testl
cmp
or
fsubs
pop
inc
popf
dec
jg
push
inc
inc
add
add
test
sti
cltd
lret
stc
lret
fcom
addr16
sub
stos
fcmovbe
test
push
push
xlat
popl
mov
xor
loope
xchg
fiaddl
mov
sbb
mov
jnp
push
push
addr16
mov
jo
dec
dec
adcb
and
mov
sub
std
dec
push
ffree
fistpl
adc
jno
lahf
push
out
adc
ficomps
sbb
dec
mov
dec
sbb
mov
insl
dec
or
dec
and
aas
mov
sub
iret
or
gs
push
out
dec
cmp
cmp
or
and
mov
mov
loope
data16
lret
pop
out
mov
rorb
sub
jp
xor
sub
adc
int3
sub
jae
mov
pop
and
xchg
stos
cltd
imul
mov
mov
xor
in
leave
jle
leave
fwait
sub
sub
lea
sub
nop
dec
and
jb
pusha
lods
mov
out
aas
int
test
inc
in
arpl
mov
mov
call
jge
fbld
dec
sbb
add
loopne
mov
cltd
mov
out
mov
lds
pop
idivb
incb
cli
adc
frstor
popa
ds
rclb
jmp
jae
inc
sbb
imull
mov
test
repz
aad
call
push
pop
popf
jl
jne
or
cmc
cmp
push
push
lods
out
mov
lahf
mov
sbb
mov
cmp
fcompl
and
loop
out
jp
adc
xchg
jae
push
mov
push
clc
shlb
xchg
push
shl
int3
push
mov
mov
push
dec
addr16
mov
jns
or
adc
addr16
stc
pop
jecxz
mov
add
inc
cli
or
xchg
cmc
in
cltd
mov
jl
inc
add
xlat
in
jecxz
fwait
and
lahf
bound
xlat
inc
sub
ja
adc
xor
in
jle
mov
adc
or
sbb
jge
mov
push
or
jle
push
xor
pusha
jmp
cmp
outsl
push
mov
out
loop
xchg
cwtl
lret
add
jbe
call
ljmp
xor
xor
aam
sysenter
imul
cmp
movsb
imul
push
lcall
jbe
xlat
incl
gs
mov
out
mov
jp
outsl
mov
cld
mov
ss
mov
sub
scas
adc
jo
roll
mov
mov
lods
dec
lcall
ret
test
loopne
lea
scas
push
lods
sbb
imul
fs
lds
lret
mov
add
dec
xor
fisubs
popa
add
inc
std
lods
mov
xor
bound
xchg
arpl
lahf
fwait
es
sarb
dec
mov
mov
popf
ds
popa
lds
enter
ret
cmpsl
popa
out
aam
in
xchg
movsl
sbb
loopne
stos
fiadds
lds
jp
andb
or
rorl
icebp
inc
repz
sbb
hlt
cwtl
mov
fs
mov
lds
add
push
push
scas
push
aaa
or
pop
sar
xchg
mov
jp
mov
test
or
test
inc
in
push
cltd
push
in
jge
sti
mov
xchg
nop
mov
sar
cmpb
mov
mov
mov
xor
sbb
inc
mov
xor
xchg
in
mov
in
adc
mov
cltd
out
xchg
push
ss
or
out
aam
jne
dec
sub
sbbb
xchg
outsb
jns
dec
xchg
movsl
cld
pop
ljmp
imul
fwait
adc
fs
hlt
cld
in
pop
cmpsl
andb
sbb
or
pop
inc
inc
mov
rcll
lret
fmulp
call
pop
xor
outsl
mov
cmpsl
jns
inc
jo
aaa
leave
push
xorl
mov
inc
push
push
jo
inc
lds
or
mov
in
rclb
inc
pop
or
sub
push
mov
popa
xchg
imul
mov
mov
mov
cli
cmp
and
and
xor
inc
dec
sbb
scas
into
out
jg
and
pop
or
in
jo
mov
outsb
pop
les
jbe
hlt
jecxz
out
out
sbb
lock
lcall
xor
add
pop
inc
xchg
pop
loope
call
popf
out
test
inc
and
aaa
inc
sti
cmp
sbb
fwait
fs
in
sbb
bound
std
frstor
lods
adcb
rcll
ret
mov
xchg
int
push
jmp
dec
mov
and
shr
mov
int
je
jecxz
mov
into
aad
push
dec
lcall
mov
test
mov
inc
aaa
mov
lds
mov
cmp
cltd
scas
out
add
xlat
xor
or
cld
inc
jb
or
xchg
xchg
mov
cmp
mov
or
imul
js
imul
sahf
lret
testl
xor
ret
fs
push
stos
dec
and
test
loop
fs
jnp
push
aaa
insb
negb
cs
adc
icebp
lock
out
xor
jg
add
jbe
mov
stos
mov
bound
sbb
and
push
fdivrl
movsb
lds
and
push
inc
imul
repz
pushf
ret
cmpsl
add
loop
inc
adc
push
cld
and
cmp
push
notb
cmp
ss
dec
fisubs
jo
add
inc
add
movsl
es
xchg
aas
test
in
pusha
or
loop
push
sbbb
call
fiaddl
hlt
iret
pop
pop
aaa
mov
mov
mov
cmpsl
xor
call
dec
dec
lock
cmp
push
fildl
jge
push
cmp
shl
xchg
mov
add
add
imul
xchg
jecxz
int3
sbb
cmovne
dec
inc
and
int
clc
repnz
xchg
sbb
in
test
or
and
lock
push
stos
sbb
shll
pop
cmp
inc
shlb
dec
ljmp
and
xchg
cli
sbb
push
cmp
mov
and
test
sub
insb
xor
jne
pop
psrad
aad
arpl
pop
jb
mov
aam
xchg
in
push
fcmovnu
mov
aam
add
sub
dec
and
lock
mov
sub
inc
add
scas
add
inc
xor
pop
loopne
fidivs
addr16
aad
insl
or
dec
fstps
sbb
dec
jno
inc
jg
dec
pop
jb
test
shll
ljmp
lret
mov
mov
mov
and
test
cwtl
push
rclb
mov
movl
orl
in
xchg
mov
inc
movsb
inc
gs
sbb
loop
std
and
in
pop
inc
cld
icebp
hlt
xor
cmp
pop
lahf
das
or
sarl
mov
fistpll
push
xlat
es
cmp
sti
add
add
sub
sub
leave
ljmp
movsb
lret
inc
jp
xor
mov
add
loop
and
push
dec
dec
xchg
int
mov
xlat
loopne
pushf
enter
push
pusha
test
aam
mov
jbe
sti
jb
mov
sbb
icebp
lret
xchg
pop
jecxz
movsb
xor
out
loope
xor
testb
mov
push
add
ret
insl
add
shll
icebp
je
mov
dec
cltd
inc
rcrl
sub
lods
mov
stc
cmpb
je
addb
sti
mov
mov
cld
mov
shrl
outsb
dec
and
cmp
aas
outsl
in
insl
lods
mov
aad
arpl
inc
xor
or
sub
jp
adc
mov
nop
mov
call
into
movsl
xchg
jmp
xor
test
outsl
sti
push
scas
mov
sub
out
scas
cmp
cmc
movsl
jle
jp
test
out
adc
xchg
movsb
cmpsb
add
out
testb
mov
iret
lret
add
lahf
mov
pop
inc
jno
hlt
loop
daa
cmpsb
xor
add
xchg
hlt
jo
pop
inc
rorb
scas
cmp
add
mov
rcll
addr16
xor
clc
int3
into
pop
jb
lea
rcrb
sub
mov
sub
or
in
bswap
cwtl
lds
mov
sti
enter
mov
ss
mov
inc
out
cmpsl
mov
andl
cmp
adc
fistpl
outsl
inc
test
testb
mov
mov
adc
adc
jno
inc
xor
xchg
pop
and
and
ja
ss
stos
jg
xchg
sbb
jg
cld
test
mov
inc
mov
and
pusha
cmp
lcall
mov
cmpb
jp
mov
fsts
fnsave
test
push
movsb
cmpsb
pop
xor
mov
stc
mov
insl
pushf
pop
push
arpl
mov
add
mov
mov
gs
xor
lea
pop
idivl
fcomi
fcomi
mov
out
lea
stos
cwtl
pop
aas
out
scas
mov
mov
ret
add
call
lret
outsl
fsubrl
mov
ja
push
mov
shlb
in
movsl
in
scas
add
add
fldcw
xor
mov
aas
enter
mov
inc
lret
mov
sub
or
push
ret
jbe
lahf
ds
ret
mov
sbb
movw
shr
inc
inc
pop
push
xchg
lock
xlat
dec
gs
pop
out
jecxz
bound
jb
std
inc
mov
xchg
loop
mov
mov
mov
test
cli
mov
rolb
adc
ss
or
cltd
imul
aad
int3
icebp
mov
in
mov
adcb
leave
inc
mov
sahf
outsl
daa
addr16
xchg
cli
leave
sub
cmpl
xchg
nop
mov
sti
mov
add
jmp
mov
jmp
mov
enter
fistpl
mov
cmp
add
insb
or
shrb
xchg
aas
pop
xchg
sahf
push
testb
lcall
and
or
int
xchg
cmp
stc
mov
mov
jb
push
ret
adc
cmp
leave
cmp
imul
in
fisttps
xchg
dec
pop
push
outsb
enter
aas
ret
adc
mov
dec
int3
cwtl
or
out
xchg
push
and
data16
adc
mov
pop
xchg
aas
jae
call
add
pop
push
dec
mov
pop
xchg
loope
adc
les
rorb
dec
jb
jle
imul
jle
enter
push
lock
inc
inc
inc
xor
call
faddl
dec
lock
insb
fimull
stos
cmp
dec
sbb
iret
dec
mov
xchg
imul
fimuls
mov
cmp
push
loopne
adc
adc
mov
pop
xchg
push
mov
ds
icebp
adc
test
xorb
lcall
and
adc
adcb
mov
stc
repz
mov
xor
lcall
push
pop
out
leave
into
lock
cmp
jle
sti
inc
outsb
aas
lock
loop
jmp
jl
mov
subb
test
ret
lods
dec
add
lret
loop
repnz
aam
sbb
mov
push
sub
mov
stos
and
sarb
stc
mov
mov
xchg
outsl
jae
movsb
add
rcll
ret
leave
repz
adc
xchg
xchg
push
test
or
cmc
add
lds
mov
and
int3
mov
imul
dec
push
les
pushf
dec
sti
cmc
push
cmc
into
insl
cmp
push
lcall
in
enter
lcall
lret
jae
sub
leave
dec
pop
mov
xchg
shlb
sbb
add
ret
js
xor
push
cwtl
xchg
xchg
jmp
dec
not
in
pop
sahf
push
dec
loopne
stc
jae
out
rcrb
xlat
out
cmc
xchg
pop
lods
cmp
mov
loop
arpl
ss
call
pop
outsb
xor
dec
repnz
inc
scas
pusha
scas
outsb
hlt
mov
mov
mov
test
mov
and
sub
cmp
insb
mov
in
mov
in
lods
int
shll
rclb
nop
adc
mov
subl
dec
push
mov
aad
in
mov
cmpsl
jmp
ds
cmpb
fdivrs
lds
jmp
lcall
pop
and
xchg
xor
adc
mov
mov
sti
add
cwtl
cmc
pop
jmp
add
jnp
cli
andb
ss
inc
outsb
and
in
inc
add
dec
sbb
sbb
adc
pop
rorl
sbb
jb
int3
lret
idiv
clc
iret
adc
mov
dec
mov
into
sbb
inc
shll
push
fcmovne
jb
jb
icebp
jl
xor
jmp
inc
pop
adc
pop
ds
xchg
test
mov
dec
sub
call
outsb
stos
push
jns
inc
or
pushf
sub
xor
aam
xchg
mov
inc
xor
cmp
in
adc
sbb
or
and
cld
mov
mov
fisubl
int3
in
dec
popa
add
push
xor
inc
ret
movsb
sub
mov
sub
ss
pop
sarb
mov
lcall
xor
or
pop
nop
adc
xor
cmp
dec
jmp
fs
dec
jbe
add
call
pop
jne
cmpsl
pop
mov
sub
daa
cmp
mov
sub
pusha
push
cmc
mov
pop
out
push
xor
pushf
leave
int
lcall
mov
cmc
iret
test
pop
jo
xchg
add
fs
lret
mov
data16
push
stos
in
and
fstpl
sub
cmc
mov
out
jbe
mov
out
movsb
inc
lret
sub
jae
in
mov
or
cwtl
fs
inc
mov
addl
fsubl
dec
das
sti
push
test
adc
dec
push
mov
shll
push
mov
fcom
repz
jmp
jg
outsb
dec
shll
mov
insb
inc
popf
sbb
jne
and
add
jb
push
push
inc
repz
jo
mov
lods
orl
clc
xchg
or
mov
mov
test
pop
mov
push
sbb
shrl
and
or
pop
pop
mov
and
add
push
dec
push
xor
ror
fsubrl
cmp
js
shll
fsubrl
jp
cwtl
das
lcall
pop
sub
dec
cmp
xor
call
gs
mov
test
mov
pusha
daa
lock
mov
mov
in
enter
jp
mov
out
lahf
and
and
mov
and
cli
inc
pop
fnsave
mov
adc
divb
inc
test
arpl
push
lds
pop
lret
jl
xor
bound
ficomps
pop
pop
in
lods
imul
in
hlt
lods
enter
mov
mov
enter
je
into
xchg
shl
mov
lea
fsubrs
js
or
dec
insl
lcall
dec
sbb
or
aam
fstps
adc
cmp
mov
adc
mov
mov
repnz
popa
cmpsl
and
out
sub
lock
enter
adc
jno
mov
add
mov
loope
fiaddl
xor
mov
in
les
mov
adc
dec
ret
xor
inc
shr
popa
cmpsb
adc
sbb
into
xchg
and
ds
mov
ds
xchg
xor
in
sbb
push
xlat
repnz
pop
roll
push
mov
mov
mov
xchg
jne
test
in
pop
insb
push
test
mov
mov
sbb
add
mov
jg
mov
xor
in
adc
loop
dec
xlat
loopne
cmp
jno
cs
xchg
das
imul
dec
fbstp
lods
fidivrs
cmp
mov
call
stc
and
inc
cmpsl
jnp
mov
pusha
les
inc
pop
mov
mov
sub
clc
addr16
inc
jno
push
xchg
mov
adc
inc
aaa
cwtl
icebp
inc
nop
dec
pop
fildl
pop
add
jbe
cmc
jnp
jmp
loop
dec
pop
add
push
and
imul
sbb
or
pop
sbb
fnsave
movsl
ss
ftst
cmp
leave
sbb
sarl
adc
or
dec
jns
mov
inc
js
mov
cmp
mov
bound
sahf
inc
push
inc
add
mov
adc
mov
and
out
pop
repnz
fdivrl
ljmp
lods
xchg
adc
fwait
repz
out
xchg
ja
add
adc
sub
ljmp
fildl
push
bound
xlat
shrl
hlt
sbb
sbb
fidivl
andb
push
cltd
mov
call
push
aaa
jmp
in
sub
jb
sarl
in
and
dec
arpl
jle
cmp
lret
add
and
inc
repz
pop
aam
stos
adc
js
or
int3
cmp
adc
pop
das
clc
pop
xor
xchg
pop
outsl
nop
push
jge
pop
test
pop
cs
or
pop
fdivs
mov
mov
pusha
nop
inc
adcb
push
cmp
mov
or
pop
mov
mov
and
inc
popf
inc
shlb
test
test
mov
out
aas
int3
pop
aaa
jae,pn
dec
insl
xor
jnp
fs
icebp
xchg
push
push
sahf
cmp
ja
adc
call
or
in
pop
pusha
mov
out
mov
les
adc
and
fcoms
cmp
in
shlb
adc
pop
arpl
or
add
and
subl
mov
jp
xchg
add
cmp
xchg
or
in
es
dec
or
mov
imul
mov
rorb
and
cmpsl
push
mov
sbb
pushf
outsl
pop
add
mov
and
sub
xchg
stc
cmp
xchg
dec
in
ret
jge
and
jno
mov
push
call
adc
add
fwait
mov
sarl
jno
call
loopne
lea
cmp
cmp
mov
cmp
aam
imul
testb
cmp
mov
cmp
jne
xchg
cld
mull
push
inc
sub
fcomip
add
or
mov
stos
les
hlt
enter
or
inc
mov
cmp
cld
cltd
xor
repz
inc
pop
repz
incb
loop
pop
sbb
or
fisubl
jne
fbld
aas
adc
and
sub
cmc
pop
xor
fisubrs
lock
daa
xor
adc
nop
fsubrl
add
insl
push
mov
clc
or
or
adc
popf
nop
adc
xchg
cmp
in
pop
dec
mov
in
jecxz
out
sub
sahf
push
push
ret
stos
cmc
pop
sbbl
inc
adc
pop
push
cmpsl
rorb
insb
fisttps
ja
and
hlt
fistps
jg
jecxz
psubw
sahf
and
jmp
cwtl
sbb
aam
ljmp
je
iret
fiadds
leave
shlb
aam
mov
push
pop
adc
sub
loopne
jp
mov
xor
icebp
cmp
adc
popf
repz
cmp
out
sbb
push
je
and
js
inc
fildl
jle
sub
or
call
xor
and
xchg
js
fiaddl
outsb
cmp
lea
repnz
arpl
leave
cmp
inc
insl
dec
adc
mov
rorb
in
inc
shlb
rcrb
out
insb
sbb
les
mov
das
sbb
sahf
into
xchg
mov
repnz
jne
loope
xchg
stos
add
ret
push
lret
jno
popa
dec
repz
andb
loop
mov
sti
loop
add
jbe
or
xchg
dec
mov
inc
repnz
call
push
sahf
sub
rcrb
ret
or
or
lret
scas
cmp
mov
rolb
data16
ret
andl
sbb
fsubs
sub
mov
dec
dec
call
mov
xchg
jecxz
lods
je
test
inc
sbb
divb
xor
repz
xor
sbb
vsqrtsd
inc
push
mov
cmp
mov
stc
popf
xor
inc
jmp
sbb
loopne
push
ret
cmp
mov
xchg
test
idiv
cmpsb
mov
imul
shll
mov
push
imul
call
jno
movsb
sbb
loope
sbbb
into
inc
in
out
iretw
data16
je
xlat
insb
fldl
lock
add
pop
negb
jnp
mov
xor
or
scas
cmpb
rclb
sub
lcall
xchg
iret
out
xchg
sarb
cmpb
aas
xor
cmc
shr
dec
push
sahf
js
mov
add
movsl
shl
xchg
push
int3
jae
cmp
pop
jnp
add
scas
repz
inc
and
mov
dec
js
daa
or
dec
push
hlt
loope
inc
mov
rcrb
cmp
idivb
sbb
cmp
mov
movsl
ljmp
sti
mov
xchg
cltd
nop
leave
push
hlt
sti
push
aam
rclb
jnp
cltd
test
aas
repnz
xchg
mov
data16
divb
inc
xchg
dec
sub
inc
stos
mov
xor
pop
xor
leave
es
leave
repz
jo
or
in
or
mov
test
push
or
cwtl
push
jle
out
cld
mov
fmull
pop
mov
and
xor
aad
sbb
fcmovb
ret
mov
ret
pop
push
es
popl
push
cmp
jo
and
in
jge
int
sub
inc
mov
ljmp
out
out
mov
dec
xor
jl
mov
js
shlb
xchg
ss
rcl
mov
call
push
out
add
add
fnsave
mov
jae
outsl
dec
xor
inc
lods
jno
lea
adc
or
mov
inc
pushf
xchg
xchg
xchg
jp
xor
or
add
cmpsl
jne
and
clc
insl
addr16
push
and
or
fldl
xchg
push
cli
pop
bnd
fisubs
ret
xchg
jmp
inc
push
dec
push
xor
scas
sbb
inc
jmp
sbb
enter
cmp
push
inc
jmp
cs
xor
lret
lds
inc
pop
cmp
hlt
popf
loope
mov
sahf
or
stos
popa
jae
pop
das
dec
push
lods
adc
xchg
add
shl
lcall
mov
xchg
popf
inc
push
lea
jo
mov
and
ljmp
or
mov
jmp
and
add
call
loope
sbb
push
or
sub
fcomps
in
jb
movsb
ret
mov
mov
push
jno
add
hlt
aam
es
push
jb
pop
ljmp
sbb
or
sub
ret
mov
gs
movsb
cmp
cwtl
mov
repnz
and
dec
mov
dec
jns
push
sti
ljmp
popf
mov
daa
mov
hlt
xchg
cmp
cmp
movsb
xor
lods
and
inc
hlt
std
loope
adc
in
dec
mov
adc
orl
xchg
pop
clc
add
and
inc
dec
call
pop
xor
out
cmp
iret
sbb
cmc
shl
cmp
xor
mov
lret
loop
push
xchg
xor
mov
xor
push
rclb
push
cmc
dec
sbb
adc
mov
pushf
fwait
or
notb
cli
mov
pop
dec
mov
imul
lret
pushf
inc
push
inc
test
loope
sub
sub
dec
adcb
lea
pop
pop
fsub
js
scas
out
loop
push
xlat
pop
adc
scas
aam
movsb
sub
jb
mov
pop
or
rcrl
inc
or
push
and
out
aaa
cmp
xor
push
cmp
int
push
or
jbe
pop
and
sub
cli
jmp
mov
pop
jo
sbb
xchg
inc
dec
mov
jle
test
push
xchg
clc
add
and
xor
int
arpl
out
aad
xchg
adc
jnp
xchg
jns
pop
insl
aad
fmuls
lock
xchg
mov
xchg
xor
out
push
adc
lds
xlat
jle
adcl
mov
call
pop
int3
mov
cmp
gs
xlat
or
js
adc
xorb
lret
sub
add
adc
shrl
add
jnp
into
sbb
insb
les
push
js
xor
cltd
outsl
inc
les
mov
loop
inc
sahf
rcrb
flds
push
adc
pop
stos
insl
add
dec
testl
push
mov
fisubrl
cmpl
sar
dec
les
jnp
xor
fwait
adc
sbb
es
add
lret
jp
add
hlt
sbb
shl
enter
and
push
pushf
cmc
sti
mov
xor
rcrb
idivb
lds
jl
xchg
pop
pop
lock
xchg
pop
popa
xlat
sahf
cmp
mov
or
jg
sahf
jmp
test
bswap
insb
pop
and
mov
mov
dec
jae
push
inc
mov
repz
sbb
or
xlat
pop
xchg
es
loopne
jae
xor
lods
adc
jo
xchg
mov
push
repnz
in
leave
jbe
jns
cmp
inc
cmc
xchg
mov
sar
cmpsl
jns
cmp
movl
dec
cmpsl
mov
push
jl
sbb
aad
fisttpll
or
push
sbb
out
scas
and
sarb
dec
popa
imul
fdivp
inc
leave
sbb
push
mov
das
dec
repz
mov
mov
es
adc
mov
paddusb
mov
stc
sub
mov
cwtl
mov
bound
sub
lahf
out
pop
cmp
mov
xor
out
add
sbb
or
pop
xchg
fadds
negb
out
pusha
pop
xchg
in
hlt
or
push
ficoml
pop
es
push
mov
pop
dec
add
in
inc
rcl
in
and
cli
or
fnsave
in
addr16
lods
mov
loop
movsl
iret
add
sbb
gs
in
pop
and
xor
push
dec
lods
mov
cmp
or
cmpsl
and
out
imul
sbb
xchg
mov
mov
clc
mov
mov
popa
push
or
fidivs
sbb
nop
sbb
mov
push
loop
sahf
adc
mov
data16
aaa
test
xchg
sub
dec
cs
adc
jl
ret
dec
push
add
rol
inc
adc
cld
mul
ljmp
jns
pop
aam
cmp
and
pop
fsubs
jns
lcall
in
jecxz
mov
pop
add
sub
or
inc
roll
mov
sbbb
rep
xlat
mov
shlb
and
pop
js
mov
fildll
out
int3
jge
inc
push
dec
push
dec
ja
inc
add
loopne
pop
xchg
fisubs
lock
and
test
lock
mov
inc
jl
inc
inc
int3
jg
mov
adc
or
cmp
ficompl
fnsave
cmpsl
movsl
stos
nop
leave
mov
and
lcall
rcr
dec
mov
mov
arpl
stos
push
outsb
rcrb
mov
enter
fldenv
jae
xchg
mov
xor
add
aas
push
mov
or
je
outsl
fdivl
scas
rcll
cwtl
call
xchg
mov
mov
mov
adc
lock
test
push
ss
lahf
stos
push
ret
orl
in
insl
repz
and
push
adc
cmp
mov
cwtl
dec
cli
subb
lods
mov
and
lret
jle
sbb
cmc
cltd
rcl
xchg
lret
jecxz
pop
ret
imul
arpl
popa
or
ds
xor
xor
out
shll
jb
subb
dec
movsl
jp
mov
push
push
and
mov
sub
pop
fbld
push
adc
dec
jl
jecxz
int
fs
inc
scas
lcall
mov
movsb
xor
jns
pop
dec
jnp
pushf
sahf
or
add
xor
jne
pop
xlat
sbb
push
inc
cmpsb
jbe
pop
imul
sub
out
jbe
lods
mov
mov
jg
fidivl
xchg
mov
xor
popa
cmpsb
lret
dec
mov
mov
inc
pop
repnz
test
lret
dec
imul
cwtl
ffreep
imul
inc
xor
push
outsl
jns
pop
sbb
mov
xchg
in
arpl
mov
jge
bound
mov
jnp
hlt
out
scas
or
jne
pop
test
outsb
sub
push
and
and
and
das
inc
adc
mov
dec
fdivl
outsb
fwait
repnz
nop
sar
mov
test
push
pop
sti
mov
xor
movb
outsb
xchg
and
jle
push
cmpb
ljmp
jmp
insb
add
sub
add
lret
pushf
mov
mov
imul
jo
lods
jns
xchg
nop
add
int
aaa
les
adcb
ror
in
xor
shrb
loop
jb
cmpsb
pop
out
sbb
mov
aaa
je
adc
pop
out
scas
sbb
sbb
pop
rclb
mov
out
and
push
cmp
mov
rolb
scas
popa
sub
pushf
cltd
xchg
hlt
fldt
inc
xchg
jno
jbe
test
insb
iret
lea
lea
test
lret
in
lea
mov
int
mov
inc
jae
sub
std
in
dec
inc
fwait
dec
aad
jge
adc
lahf
jge
and
dec
push
mov
sub
jno
jno
dec
sbb
sbb
shrl
es
pop
jmp
rcll
mul
pushf
mov
jbe
sahf
out
outsb
mov
adc
stos
or
movsb
sti
in
cld
decl
out
imull
adc
in
leave
dec
loope
mov
dec
js
insl
xor
inc
ror
ss
mov
xchg
testb
adc
lock
je
and
cmp
mov
mov
jge
mov
mov
fisubs
pop
out
sbb
es
imul
pop
push
loope
jge
or
je
sti
mov
mov
je
adcl
iret
into
mov
adc
pop
add
push
and
mov
sti
xor
sbb
stos
xchg
push
xor
cwtl
fcompl
cmp
jo,pn
add
jg
aas
movsl
dec
xlat
push
mov
cld
ret
stc
lea
ds
jmp
xchg
mov
mov
jg
mov
add
aad
xor
sbb
ret
sbb
orl
in
addr16
sub
fstl
mov
pushf
cltd
scas
cmc
add
nop
push
add
push
shll
xchg
test
aam
xchg
call
fnstcw
movsl
xchg
push
addr16
cmc
xor
repnz
push
jp
aad
insb
jge
data16
lret
das
popf
test
xor
push
out
loope
push
jecxz
push
jecxz
mov
ret
mov
xchg
repz
aaa
xor
cmp
das
movsl
cmp
xor
leave
loopne
or
cli
movsl
lcall
push
pop
and
jg,pn
and
xlat
jo
sbb
pushf
xor
jb
pushf
mov
mov
and
adc
fists
cmp
push
arpl
cmp
add
xchg
adc
lret
lods
stos
je
sbb
ret
xchg
or
sub
inc
pop
mov
in
sub
fsubrl
cld
mov
xor
rcrl
cli
aad
fsts
insl
xchg
or
adc
cmc
movsb
int
clc
pop
je
or
cmp
mov
cmp
out
addr16
clc
sub
dec
mov
dec
daa
enter
negb
lods
scas
mov
stos
aas
cmp
aaa
aas
jns
add
lds
push
add
jbe
movsl
ja
gs
xchg
push
dec
fsubrs
ss
adc
push
int
scas
sub
pushf
cmp
adc
cs
add
xchg
jge
or
lea
movsb
add
sbb
fistpll
pop
pushf
cmp
rclb
or
dec
jg
or
xor
jnp
daa
xchg
mov
adcb
push
mov
out
pop
cmc
pop
push
lahf
push
cmp
ss
out
mov
stos
xor
pop
std
fs
pop
and
xchg
jp
std
push
mov
xchg
push
sti
add
popf
outsb
push
adc
mov
xchg
jecxz
mov
adc
inc
sbb
out
fildl
mull
rcrb
xchg
shll
xchg
xlat
xchg
out
xor
cmp
cmpsl
jg
outsb
roll
aad
lea
push
dec
fs
or
jb
inc
int
or
dec
xchg
xor
outsb
out
mov
lods
mov
lods
pop
or
pop
fcom
ja
mov
add
jge
scas
xchg
ss
sub
out
rcrb
lock
dec
pop
test
xchg
insb
fidivrs
or
cmpsl
or
insb
push
inc
or
test
cld
mov
and
scas
cwtl
pop
jnp
int
test
push
enter
or
push
jmp
aam
dec
xchg
jle
in
inc
cmp
mov
fisttps
xor
xchg
icebp
sub
cmpl
and
pop
hlt
mov
fs
jecxz
pop
out
sbb
out
jle
sbb
in
push
push
pop
insl
mulb
lea
call
and
mov
jmp
js
adc
mov
mov
outsb
dec
scas
lods
mov
cmp
xchg
add
in
pushf
xor
stc
push
xchg
sub
mov
je,pt
or
in
ljmp
ss
push
sbb
pop
icebp
roll
in
push
dec
shrl
lock
imul
jns
cmpl
cmp
xor
bound
loop
dec
cltd
dec
loop
inc
cmp
push
sahf
mov
mov
repz
gs
insl
fadds
sbb
mov
cld
scas
xlat
inc
sub
mov
or
adcl
cmp
add
arpl
faddl
imul
jge
inc
and
push
lock
lcall
rcll
sub
dec
shl
cs
shlb
mov
cmpsb
or
test
test
scas
roll
and
or
fisubl
outsb
movsb
jns
cmp
popf
imul
sbb
imul
insl
pop
ret
mov
xchg
dec
xchg
add
xorb
and
cmp
cld
addb
ds
lcall
push
call
pop
mov
push
cld
mov
cld
mov
in
and
cmp
xor
or
inc
or
or
fbstp
orl
pop
or
clc
push
jg
add
fwait
rorl
pop
dec
mov
mov
and
ret
imul
test
pop
push
rolb
out
lret
ficompl
cwtl
clc
sub
aas
dec
mov
jnp
ja
lods
jnp
call
sbb
dec
into
xlat
jle
mov
lock
scas
loop
aad
scas
sarl
ljmp
mov
lcall
subb
sub
popa
popa
hlt
pop
loope
inc
fsub
lret
outsb
les
mov
sub
inc
out
loop
mov
ror
xchg
and
inc
ja
pop
cmp
call
add
in
test
sbb
dec
mov
pop
pop
fbstp
dec
popf
rcl
pop
dec
punpckhwd
jecxz
ljmp
les
sub
push
jle
pop
hlt
in
mov
ret
in
movsl
jno
hlt
dec
mov
shll
int
shrl
sub
xor
lods
xor
int
fistps
daa
sub
sbb
jle
stc
add
sbb
xor
add
ret
dec
mov
loopne
push
stc
or
imul
and
lods
dec
fldcw
xchg
outsb
push
mov
out
test
dec
mov
dec
fs
add
xchg
fldenv
das
nop
cmp
jnp
and
shl
imul
ret
adc
adc
bound
xor
xchg
sbb
cmpsl
dec
faddp
pop
jle
inc
jnp
lds
lea
movsl
jo
and
out
fwait
add
addl
rorl
repnz
or
mov
data16
inc
stos
outsl
aam
test
rclb
or
dec
jns
mov
in
mov
sarl
mov
xor
pop
gs
and
mov
fdivl
sbb
push
mov
mov
dec
cmp
lock
out
dec
mov
xchg
mov
repz
xchg
repnz
inc
add
movsb
loopne
cmpsl
add
in
and
xchg
push
mov
popl
and
jae
or
fisubrs
adc
cltd
lahf
sar
fimull
mov
sahf
lock
pop
andb
adc
jo
add
adc
jl
pop
mov
sub
jb
mov
xchg
xor
mov
pop
pop
fmuls
or
cs
or
in
cs
pop
testl
add
mov
mov
adc
pop
mov
mov
mov
xor
cmp
sub
sbb
mov
rorb
adc
imul
lahf
mov
fcoml
xor
addr16
mov
push
in
stos
mov
mov
out
shll
fldt
cs
outsb
fninit
cmpsl
in
cmp
cld
ret
lea
fadd
mov
pop
xlat
jmp
daa
xlat
jne
mov
add
xchg
pusha
gs
sti
or
orb
pop
or
mov
out
mov
in
or
int
ret
iret
shrb
lods
adc
push
xchg
mov
and
lock
xchg
push
xchg
push
arpl
sub
bound
dec
enter
sub
sti
mov
xor
xor
jge
add
and
in
push
dec
adc
jnp
lods
lret
xchg
pop
in
jle
stos
lea
addl
mov
and
incb
adc
adc
std
mov
push
mov
call
aad
lahf
ds
push
movsl
inc
mov
cmpb
sbb
cmp
jnp
out
int
sbb
pusha
mov
sbb
push
cmc
mov
insl
in
scas
xchg
loopne
mov
gs
mov
in
cld
movl
sar
and
fwait
pop
jno
ret
mov
xorl
sarb
dec
fwait
sbb
dec
fst
add
sub
dec
dec
xchg
and
mov
pop
arpl
mov
rolb
jg
pop
cmpl
das
mov
adc
mov
ret
mov
stc
cmp
or
dec
add
je
jmp
jb
xor
xchg
jnp
repz
or
mov
add
sub
in
mov
mov
xor
hlt
jmp
dec
and
xchg
scas
std
loop
cwtl
clc
jns
or
xchg
mov
adc
jp
dec
inc
fs
outsl
test
pop
xchg
testb
lods
test
imul
xlat
push
repnz
clc
out
dec
fs
arpl
jg
in
fdivs
fstps
int3
adc
xchg
adc
xchg
xchg
dec
mov
clc
xor
jbe
out
nop
js
xor
lret
jmp
nop
sbb
in
popa
fadds
leave
cmp
mov
jl
jl
loopne
pop
push
stos
jmp
int3
sbb
lea
push
pop
aam
test
xor
lea
cmpsl
scas
aaa
inc
pop
push
je
or
arpl
jo
nop
sub
add
jmp
fnsave
aad
mov
cmp
inc
mov
rcll
cmpsl
clc
lds
popf
pop
dec
movsb
mov
sbb
ljmp
mov
xchg
jb
dec
xor
pop
pop
mov
outsl
jl
rcll
mov
mov
dec
sbb
call
mov
jns
repnz
jecxz
sbb
int3
xchg
mov
xchg
ficoms
addl
or
inc
int
xor
adc
inc
push
mov
push
int
popf
mulb
unpckhps
push
mov
mov
ds
sbb
mov
jo
scas
cmpb
sahf
aas
lea
lret
pop
xor
cmp
je
pop
xor
xchg
fcompl
sub
mov
andl
mov
xchg
adc
mov
mov
inc
daa
popa
mov
cld
insl
xor
nop
fwait
or
test
adc
ds
repnz
or
xchg
sti
or
in
jns
test
jge
mov
test
roll
mov
mov
adc
fisubs
jmp
mov
mov
movsb
xchg
out
aas
lea
mov
add
enter
xchg
mov
jns
and
and
insb
test
lcall
cwtl
movsl
sbb
or
stos
lods
js
pop
push
pop
xchg
nop
cwtl
stc
lods
mov
nop
aad
mov
test
dec
xor
dec
sbb
test
push
hlt
push
inc
inc
das
pop
arpl
xchg
xchg
stos
mov
mov
xchg
and
push
cmp
mov
jno
xchg
fcoms
inc
divl
data16
dec
push
popa
lods
scas
lret
pop
push
jno
xchg
or
hlt
ds
adc
push
sahf
jge
mov
shlb
dec
lcall
insl
pop
lret
lret
sarl
pop
dec
sarb
xchg
mov
mov
les
mov
cmp
xor
gs
jb
lods
push
inc
mov
xchg
inc
adc
inc
push
sub
xor
cmpsl
or
mov
hlt
fmul
push
push
xchg
loopne
das
jns
cltd
dec
cs
mov
std
lods
or
and
aam
inc
std
dec
jecxz
arpl
and
adc
int3
cwtd
pop
iret
fidivrl
add
sbb
ss
xchg
int
dec
out
cmp
mov
lds
sarb
xchg
cmpsl
shrb
sbb
cmp
mov
pop
stc
inc
xor
hlt
movsl
dec
into
xchg
call
mov
add
mov
leave
pop
cmp
fildl
adc
ja
arpl
cmc
inc
pop
jnp
cmp
cmpsl
pop
bound
mov
jnp
or
cmp
fdivs
movsl
mov
jle
stos
jae
test
pop
int
int
test
jnp
xchg
mov
sub
adc
and
loopne
add
sub
out
cmp
jp
dec
cmp
pop
out
mov
cmpsl
jnp
push
inc
in
cltd
jecxz
into
mov
imul
test
faddl
fwait
sub
mov
jns
pop
cmp
inc
daa
out
popa
jle
loope
adc
cld
je
jg
and
push
xor
sub
shrl
add
jno
sbbl
stc
idiv
call
push
xchg
push
mov
pop
push
in
aas
stos
pop
inc
add
call
pop
shrl
les
fs
push
mov
push
movsl
xchg
clc
push
lret
cmp
mov
sbb
repnz
imul
js
fadds
sbb
imul
dec
pop
mov
jbe
pop
sub
push
xchg
fs
cmp
adc
and
cmpsb
je
inc
stos
ljmp
das
cmp
imul
pop
or
mov
clc
imul
fldt
pop
inc
xor
mov
into
sub
inc
inc
and
shr
mov
enter
inc
bound
stos
xchg
lret
pop
push
sub
movsl
mov
subb
jno
add
dec
push
in
jmp
xor
xchg
addr16
pushl
sub
pop
nop
bound
in
movsb
rsqrtps
jno
loopne
adc
mov
push
ss
or
or
call
scas
push
scas
dec
pop
push
popf
sbb
pop
xchg
mov
roll
jp
es
adc
sbb
ret
mov
out
or
push
test
xor
out
push
add
sub
nop
cmp
pop
inc
mov
jne
call
mov
fsts
push
and
sub
mov
into
leave
out
mov
hlt
imul
add
push
test
dec
adc
fs
fnstenv
stos
clc
adc
push
orb
mov
and
fsubrs
cmp
loop
push
mov
xor
insl
fcoms
xchg
pop
mov
in
das
js
cmp
mov
push
call
and
test
xchg
dec
or
jp
jns
pop
mov
xchg
cmp
insb
gs
xchg
push
sbb
add
cli
sbb
in
mov
xchg
fildl
mov
fwait
pop
add
aad
push
ret
mov
cmp
mov
iret
fists
lahf
nop
in
in
mov
inc
out
testl
rcr
and
mov
pop
or
shlb
flds
negb
sbb
popa
mov
pop
ret
mov
fadds
les
mov
lcall
jl
pop
xlat
mov
ret
jae
inc
loop
inc
jns
sti
mov
idivl
out
insb
sti
dec
or
shlb
fstpt
pop
fwait
fwait
adc
jle
out
jns
addl
adc
jo
ds
jb
enter
cmp
fimuls
insb
shl
in
lock
pop
xchg
jbe
movsb
sarl
adc
es
cmp
inc
fbstp
insl
jle
mov
das
dec
loopne
pop
push
dec
jb
repz
addr16
mov
ja
jg
mov
int
xlat
cltd
ss
adc
mov
xchg
sbb
test
push
and
cli
mov
ss
ljmp
cltd
pop
xchg
icebp
daa
xchg
in
mov
xchg
loop
xchg
mov
imul
aas
mov
aas
xchg
lods
cmp
mov
cmp
insb
jp
dec
push
ret
xor
dec
stos
sub
mov
arpl
xchg
outsb
out
mov
push
lahf
push
clc
nop
mov
loope
pop
add
ret
inc
cmpl
repz
push
jb
and
pop
add
movsb
cmp
sbb
call
aam
push
fwait
add
loopne
sub
sbbb
push
clc
shl
mov
std
aaa
sub
popf
mov
sbb
sub
pushf
jne
add
shl
dec
push
pop
push
jecxz
push
cmp
cmp
pop
cmp
movsb
xorl
sbb
cmp
mov
adc
aas
std
jne
or
popf
inc
insl
nopl
daa
sub
cmp
inc
pop
and
cwtl
out
lds
push
mov
mov
pop
adc
movsb
icebp
pop
xor
pop
fnstcw
sbb
mov
add
je
hlt
fsubrs
add
popf
subb
xor
movlhps
mov
stos
cmp
out
jne
inc
pop
jno
sbb
movsl
sub
shlb
pop
test
jae
inc
jno
test
imul
aas
mov
daa
fcmovnb
clc
push
in
out
shr
dec
and
dec
jnp
std
mov
mov
lock
jg
in
jg
popa
mov
jns
push
nop
enter
mov
subb
scas
dec
cmp
call
in
add
mov
lea
bound
mov
cli
lods
fwait
or
adc
fcomps
xchg
cmp
xchg
mov
ja
push
mov
push
aas
roll
out
sahf
in
out
int
or
cmpsb
push
dec
loopne
test
xor
pusha
in
push
jo
pop
mov
fldenv
inc
mov
les
outsl
xchg
and
inc
sahf
push
ret
cld
int
adc
mov
frstor
test
scas
sbb
int
call
loope
addr16
fdivrs
sub
inc
xor
leave
in
xor
or
shll
test
ret
or
push
mov
dec
call
stc
or
mov
add
outsb
jne
jmp
jnp
test
movsb
sub
pop
rolb
jmp
andb
repz
and
dec
clc
inc
xor
xchg
dec
sub
and
mov
rcr
inc
movsb
sub
hlt
mov
mov
shlb
dec
or
or
jmp
imul
jns
lret
xor
push
add
outsl
push
movsb
out
pusha
or
inc
push
stos
xor
stc
clc
rcl
push
int
ss
push
cmpsl
cmp
jge
lock
push
dec
sub
mov
pop
in
xlat
aad
std
fimuls
push
push
das
jb
scas
scas
decb
jo
cmp
pop
movl
and
out
xor
nop
sub
mov
xchg
cmpsb
add
xor
cli
cmp
xor
mov
imull
mov
int
xor
popf
inc
aaa
fmull
xor
add
cmpsl
loope
adc
out
push
inc
into
ljmp
pop
xchg
jg
sti
inc
aam
adc
cmp
cmp
clc
add
sub
sbb
pop
xchg
mov
mov
ss
or
jns
pop
cmp
ret
mov
pop
jne
or
push
outsl
push
push
mov
xlat
adc
inc
out
scas
std
mov
or
cmp
mov
adc
sub
sbb
sbb
cltd
lds
mov
fistpll
mov
jmp
pop
push
jae
xchg
push
pop
dec
mov
insb
repz
fisttpll
mov
ret
xlat
dec
lds
shl
popf
xchg
cmp
pop
or
push
outsl
aaa
pushf
xchg
outsl
test
clc
xchg
flds
int
pop
and
ret
repz
mul
inc
mov
repnz
aam
xchg
mov
or
push
push
repnz
sbb
mov
lahf
inc
sub
mov
add
sub
scas
cwtl
int
fmul
cltd
jnp
xchg
xor
inc
mov
fcmovb
xor
or
pusha
ror
fdivrs
inc
or
jno
or
lcall
dec
or
stos
ds
iret
movsl
nop
inc
push
mov
aam
jg
mov
pop
lret
aam
lds
aad
ds
mov
pop
inc
jnp
add
test
enter
sub
popf
inc
inc
xor
mov
pop
mov
jecxz
cmp
pop
pop
jo
lahf
push
outsb
and
sub
fsts
pop
bound
loop
mov
aaa
jmp
mov
das
sub
fs
popf
mov
xchg
fwait
enter
data16
mov
pop
cmc
push
mov
or
insl
mov
ljmp
iret
mov
aas
sub
scas
adc
popf
xor
mov
and
add
sbb
push
push
xchg
cmp
push
or
in
xor
sub
repz
bound
movsb
mov
mov
out
or
jle
inc
idiv
pop
mov
mov
mov
xor
mov
cmp
add
imul
cmpsl
pop
sar
sti
mov
pop
inc
sahf
clc
push
push
aaa
fxch
insb
arpl
jno
sti
fs
jns
cmp
cwtl
insl
adc
hlt
cmp
xchg
jns
jnp
dec
sarl
popf
lahf
mov
movsl
jl
fdivrs
xchg
mov
popf
mov
pop
or
shrl
inc
sbb
mov
rclb
inc
lods
sbb
lock
jg
loop
pop
and
pop
outsb
aad
cmp
int
or
in
les
in
mov
add
addl
xor
insl
test
fdivr
out
sbbb
push
out
inc
lods
sub
sub
dec
sbb
add
mov
inc
repnz
xchg
call
ror
in
mov
adc
pop
movsb
cmp
ss
inc
add
repz
sub
test
popa
push
in
xchg
out
lahf
mov
es
cld
imul
aam
cmp
lret
ds
xor
push
repnz
lea
xor
dec
jp
fnstcw
and
and
jo
mov
push
loopne
inc
in
mov
setp
jno
cmpsl
inc
push
or
cld
xchg
jo
hlt
shll
sbb
cmp
xchg
mov
and
js
cmp
cmp
push
fldt
aaa
mov
ja
in
outsl
cmp
pop
movsl
shrl
mov
or
adc
mov
push
sub
cmpsb
sbb
inc
mov
ret
ret
int
jecxz
cs
call
dec
lcall
push
daa
data16
pushf
popa
or
cmpsl
lods
aas
dec
insl
ja
fldl
xchg
push
rclb
mov
inc
rdtsc
stc
sarl
inc
imul
rolb
into
into
jne
lea
dec
jae
nop
jne
lret
xchg
aam
mov
jge
int3
cld
dec
test
mov
jae
cltd
xchg
inc
sub
ss
jmp
push
cmp
sub
call
scas
dec
pop
push
sbb
sbb
cld
inc
rcr
adc
dec
and
lea
lea
push
xchg
packsswb
scas
xor
imul
xchg
es
sub
ljmp
mov
mov
fbstp
adc
inc
inc
pop
push
sti
fdivl
lret
sahf
data16
repz
sbb
xchg
jecxz
test
mov
nop
jmp
loope
mov
mov
fsub
dec
stos
and
mov
push
lcall
clc
pop
rcrl
pop
adc
jle
call
and
add
pop
mov
mov
ret
jae
push
je
enter
xor
addr16
inc
mov
lea
shll
sbb
inc
or
cmpsl
call
movsb
stos
pop
mov
jmp
aam
ret
jo
cld
push
mov
mov
xor
enter
ret
xchg
sahf
push
rcl
add
mov
inc
in
push
inc
sub
pop
call
jg
jecxz
mov
pop
inc
lods
leave
clc
aam
test
sub
movsl
movsb
not
cmp
or
loopne
int3
loopne
dec
sti
pop
add
leave
ret
add
mov
data16
jbe
push
movsb
dec
jo
test
dec
jg
push
push
fdivs
pop
add
insl
addr16
fistl
add
xor
rorl
shlb
movsb
mov
and
cld
in
rcr
and
mov
push
mov
cmp
cmpsb
fiaddl
cld
notl
adcl
lret
dec
stc
sub
xchg
push
adc
jnp
nop
sarb
add
xor
dec
outsb
adc
add
out
pop
cmpb
out
in
mov
pop
jbe
jb
in
mov
mov
test
popf
jb
test
loopne
mov
cmp
cmpsb
mov
inc
dec
push
andl
jno
jbe
out
jo
in
adc
add
push
mov
fdivrs
fsub
dec
test
out
dec
lret
and
popa
mov
add
inc
stc
dec
mov
sub
jle
jecxz
mov
xchg
outsb
out
and
mov
add
xchg
or
and
cmc
movsl
test
pop
mov
push
dec
imul
fimuls
cmp
test
aam
fwait
jnp
inc
dec
std
inc
mov
jecxz
push
repnz
mov
sbb
jle
ret
xlat
addr16
movsl
cwtl
movsb
pop
test
push
fildl
into
std
aaa
cld
inc
sub
imul
pop
fwait
dec
mov
and
sub
loop
sbb
add
adc
push
divb
cmp
fisubrl
test
mov
cltd
jo
or
icebp
push
or
inc
ffree
cmp
push
cwtl
nop
sub
lret
xchg
dec
or
sbb
movl
push
das
mov
jg
cmp
lock
iret
imul
fcomps
movsl
adc
adc
out
repnz
sub
cmp
sbb
mov
pop
leave
push
bound
mov
mov
repz
mov
iret
mov
cmpsl
inc
pop
jge
xor
xchg
ss
mov
stc
lcall
pop
mov
or
repz
push
sub
dec
dec
and
jmp
mulb
pop
pop
pop
nop
imul
pop
clc
mov
jecxz
mov
xlat
divl
hlt
sub
jp
sbbb
adc
scas
sar
add
sub
mov
inc
jne
pop
xor
scas
cmp
lea
pushf
push
add
mov
ss
sbb
enter
lock
mov
inc
icebp
pop
testl
ss
movsb
neg
jnp
dec
mov
repz
push
jae
push
xlat
inc
pop
mov
cltd
negl
mov
outsl
xchg
mov
iret
jns
pop
aaa
adc
sub
sbb
dec
sbb
add
decl
pusha
inc
dec
les
in
stc
ljmp
pop
mov
ficoms
jecxz
fstpt
je
ja
mov
xchg
dec
inc
test
es
pop
or
mov
pop
dec
dec
jecxz
mov
or
dec
pushf
shr
sub
cwtl
iret
lds
out
xchg
xor
pop
shll
pop
fdivrs
lds
in
icebp
insl
xchg
and
insl
or
dec
or
addl
jo
mov
fmull
movb
das
fadd
inc
and
inc
fisubrl
jno
pmulhw
out
jno
xor
mov
xchg
imul
loope
test
mov
sbb
xor
andb
out
popf
adc
in
jp
push
cmp
push
cs
mov
xchg
push
das
push
jle
into
mov
pusha
push
push
clc
and
lret
or
mov
and
rorb
xor
loop
out
jno
mov
sbb
call
cwtl
push
xor
pushf
shl
das
sarb
test
cld
mov
fsubrp
lds
jp
cmp
jmp
out
dec
pop
fmull
scas
rcll
lcall
sti
stc
lds
fnstenv
sub
js
push
in
push
loope
iret
mov
fisubs
jl
scas
xchg
loop
outsb
rclb
mov
enter
xor
inc
dec
inc
pop
pop
xchg
lea
pop
add
cmc
scas
popa
popf
jle
dec
insb
scas
xchg
mov
push
push
shll
out
repz
movsl
push
enter
je
xchg
push
push
stos
sahf
lret
xchg
jns
je
add
mov
loopne
push
idivl
pusha
int
outsl
call
push
pop
mov
jae
dec
pop
shlb
clc
or
add
and
or
jmp
add
jb
je
es
jle
jle
sub
inc
dec
mov
shll
sbb
inc
xchg
pushf
mov
movsl
push
sbb
cmp
inc
dec
mov
scas
xchg
xor
in
pop
jmp
bound
xchg
andl
shrb
jae
test
imul
inc
or
fstl
add
jnp
in
je
xor
lods
into
outsl
cs
pop
xor
xchg
into
mov
dec
loope
cltd
and
sar
aas
push
in
pop
push
fdivl
mov
xor
xor
inc
pop
jle
sahf
xor
xchg
push
std
out
sub
pop
movsl
repnz
lcall
lods
add
pop
lods
mov
jne
pop
ds
sub
pop
cmp
pop
mov
fisubs
lret
cltd
pushf
ljmp
mov
mov
sub
xchg
aaa
sub
dec
mov
aaa
aaa
js
ret
pop
dec
xchg
adc
addl
add
std
ljmp
pop
adc
mov
push
cmp
fistl
pop
addr16
or
js
ja
in
cmpsl
stos
mov
ret
je
ret
add
daa
bound
scas
mov
mov
mov
jne
movsl
pop
mov
je
dec
cmpb
orb
fwait
mov
in
and
push
mov
addr16
xchg
mov
in
jns
mov
fdivrs
outsb
sti
pop
dec
out
popa
xchg
mov
push
addr16
jg
mov
dec
insb
inc
mov
pusha
repz
jae
int
jle
shrb
das
out
push
lock
cmp
int
rcll
xlat
arpl
push
jns
fwait
jo
add
mov
leave
jae
jmp
jns
nop
int3
in
and
push
sub
cmpsb
mov
sbb
mov
lret
mov
push
je
test
mov
cli
add
sub
add
sahf
pop
inc
push
out
inc
add
xor
pop
cmp
aam
cmp
mov
mov
in
add
add
adc
jmp
adc
adc
int
outsl
lret
add
pop
sbb
dec
in
mov
into
hlt
and
pop
cmp
cld
jge
sbb
jbe
pop
xchg
imul
cmc
cs
movsb
cmp
sub
test
adc
add
cli
add
incb
sbb
xchg
movsl
nop
push
mov
jb
mov
sub
mov
jne
inc
xchg
loopne
mov
push
data16
or
mov
bndldx
sarb
test
ljmp
and
mov
sub
call
xor
mov
and
hlt
daa
sbb
cmp
rcl
sbb
mov
cmp
sbb
int3
xor
mov
xor
jg
leave
movsl
orl
xlat
nop
dec
scas
pop
push
into
or
ja
sbb
add
pusha
fcoml
mov
into
sbb
rclb
mov
inc
fs
sti
inc
pop
adc
rclb
fcmovb
js
sbb
imul
add
orl
je
jae
es
outsb
push
or
fsub
mov
or
mov
jl
fmuls
or
inc
sub
cs
push
pop
int
aaa
sarl
jg
jns
add
pusha
mov
pop
sbb
call
hlt
xor
lret
sbb
stos
or
pop
jle
dec
xchg
pop
push
push
push
loope
cmp
mov
xor
and
insl
xor
inc
adcl
xchg
xchg
negl
arpl
mov
scas
cld
ss
sbb
lahf
adc
xor
cs
jecxz
xchg
scas
fwait
mov
sbb
in
cltd
inc
jmp
pusha
fwait
pop
fnsave
xor
or
and
mov
in
cmpsl
cltd
leave
mov
test
add
jge
test
inc
or
fdivl
xchg
fs
mov
out
or
and
inc
or
cli
int3
ss
daa
sti
arpl
fcmovnu
aas
pop
cmp
adc
mov
xchg
jo
test
mov
insb
sbbb
push
cmp
jns
call
imul
stos
ljmp
mov
shlb
jns
jne
sub
inc
subl
push
test
daa
stc
das
adc
fs
cld
enter
mov
stos
cmp
jmp
fs
xor
ss
into
xchg
mov
or
pop
dec
cmp
mov
sbb
mov
cmp
inc
or
jns
out
repnz
mov
testl
addb
adc
or
outsb
outsl
out
insl
dec
sbb
add
fldt
ud0
or
cltd
pop
mov
mov
inc
mov
xchg
jbe
call
les
int
xchg
mov
sarl
and
aaa
dec
sti
adcb
jg
and
decl
jno
ret
inc
push
mov
sahf
dec
and
mov
movsb
test
push
add
out
ss
ret
cmp
aas
cltd
add
ljmp
mov
lds
mov
mov
mov
lahf
sbb
cli
in
rcrb
mov
cli
or
sahf
sbbl
js
jnp
sbb
push
jb
xchg
pushf
or
ret
mov
orl
ficoml
andb
in
mov
sbbb
ret
ljmp
mov
pop
lods
incb
pop
ficomps
mov
cmp
lock
mov
stos
test
lods
mov
mov
or
dec
xor
inc
addr16
or
ret
mov
out
adc
fs
mov
icebp
cmp
mov
mov
leave
sub
cmpsb
or
inc
aad
arpl
es
int
pop
shl
outsb
aad
getsec
mov
addr16
dec
in
fbstp
shlb
dec
xor
ret
ror
sbb
iret
xchg
sub
jg
sbb
scas
inc
mov
mov
out
push
dec
orl
cmp
and
mov
dec
fimull
rolb
cltd
frstor
lock
xor
je
ret
sbb
fistpl
push
sarb
fnsave
mov
jns
ret
sbb
imul
xchg
sbb
dec
inc
sub
add
fs
push
ret
adc
push
add
roll
mov
push
sbb
mov
mov
xor
clc
insl
push
push
xor
lahf
cld
jp
and
mov
dec
and
decb
dec
mov
cmp
aad
cmp
ljmp
inc
and
pop
lahf
mov
lods
or
mov
xchg
add
lret
ret
and
dec
ja
gs
inc
outsb
icebp
mov
mov
out
shll
xor
aas
and
lahf
inc
scas
sub
movsb
jo
cmc
daa
daa
adc
jge
addr16
ljmp
sbb
dec
push
data16
pusha
das
ret
xchg
aas
std
mov
orl
jl
outsl
push
xor
add
or
cmp
fldenv
adc
push
ret
cmpsl
push
and
cmpsb
inc
mov
or
mov
sub
dec
in
inc
xor
pop
dec
inc
pushl
fldcw
ret
test
lret
jnp
movsl
jno
inc
insl
inc
and
dec
adcl
loop
xchg
add
push
jg
dec
scas
outsb
call
mov
pop
nop
mov
and
ja
lods
mov
xor
or
adc
mov
dec
insl
aam
in
imul
js
cmpb
lret
out
jbe
rorb
inc
push
mov
sub
je
pop
add
gs
sbb
into
cmp
das
shrl
cltd
mov
addl
ljmp
int
jnp
xchg
aam
lahf
out
je
mov
out
fildl
in
clc
add
rorb
sbb
sbb
test
int3
pop
stc
jbe
add
jae
push
cmp
je
insb
jge
mov
pushf
push
in
insl
orb
push
leave
movsl
ds
pop
xor
subl
xor
xchg
and
adc
and
inc
xchg
mov
call
mov
push
insl
dec
xchg
inc
scas
sub
adcb
push
xor
pop
jae
popf
les
cmp
leave
sbb
pushf
or
push
imul
sbb
dec
decl
or
pop
lret
or
jne
rcrb
add
les
arpl
imul
enter
icebp
jmp
orl
dec
dec
shll
mov
pushf
sub
and
fidivrs
mov
out
mov
jns
std
fbld
xchg
sub
push
int3
repz
pop
mov
xor
rcll
jge
decb
mov
and
xor
js
xchg
sbb
xchg
sarb
or
fnstcw
cltd
xor
mov
je
lahf
enter
mov
cmp
mov
inc
xchg
addl
pop
lock
pop
sub
cs
xor
mov
sub
mov
mov
cli
pop
andb
jns
jmp
imul
dec
stos
out
and
sbb
inc
xchg
pop
inc
xchg
test
xor
mov
pop
push
test
add
add
jmp
sti
and
in
in
pop
xchg
test
mov
imul
out
adc
jmp
mov
pushf
aam
out
pop
rorl
xchg
jns
aam
imul
mov
repnz
and
jecxz
mov
ljmp
cmp
jns
inc
xlat
xchg
out
mov
xor
test
xor
fbld
aad
cmpl
in
pop
ds
outsl
sbb
sbb
out
out
sub
cwtl
rcl
push
jg
mov
dec
call
and
add
jne
fwait
popf
cmp
add
cmpsl
punpcklbw
cmpl
mov
add
jp
dec
and
xor
mov
imul
sub
xor
cmp
mov
test
sbb
test
jp
into
pop
pop
pushf
push
add
pop
daa
rorb
jle
shll
dec
loopw
sub
mov
mov
popf
push
sarb
out
push
mov
xchg
cmp
xchg
or
in
mov
cld
pop
push
mov
push
xchg
stos
xor
dec
cmp
in
call
lcall
leave
mov
add
lea
mov
dec
sbb
sub
out
cwtl
mov
xor
mov
shlb
cltd
xor
inc
loopne
repnz
mov
test
push
mov
aaa
jg
daa
lock
inc
bound
xlat
push
je
sub
sti
arpl
add
jo
mov
lss
inc
mov
dec
inc
bound
cmp
push
aam
jnp
insl
cwtl
loop
jne
or
inc
add
std
outsb
scas
lds
stc
into
lahf
xor
leave
dec
stos
popa
jb
push
es
test
push
xor
inc
test
cld
fnstenv
push
pop
js
mov
sbb
xor
mov
ljmp
mov
push
sbb
sbb
jl
sbb
repnz
xlat
push
enter
es
and
xchg
inc
rorl
inc
mov
pop
push
cmpsb
mov
dec
imul
lret
movsb
mov
push
mov
enter
lea
test
outsl
js
jp
adc
sti
xor
inc
inc
ret
cmpsl
cmp
cltd
dec
scas
inc
scas
aaa
ljmp
and
inc
arpl
jle
xlat
sysexit
lods
shrl
push
add
push
and
and
inc
faddl
es
xlat
popa
push
push
roll
in
sub
fdiv
jae
rcll
jle
add
dec
pop
movsl
pop
add
jbe
sbb
sahf
xchg
rcll
out
pop
pop
pop
lcall
mov
mov
jg
ret
jae
inc
ja
jg
insl
test
cmp
stos
xorl
xchg
movsl
lcall
mov
add
pushf
xchg
cli
jb
dec
ljmp
leave
or
out
test
mov
and
and
jl
sub
sbb
jmp
xchg
mov
mov
mov
js
rclb
adc
call
ret
jmp
sbbl
dec
pop
sbb
pop
xlat
dec
bound
dec
lahf
pop
adc
mov
mov
cmp
jbe
cmc
push
add
xor
btc
and
sub
sub
popf
imul
ljmp
dec
cmp
cmp
sub
fdivl
push
inc
ret
xchg
insl
daa
insl
adc
daa
psubb
xchg
iret
in
test
xchg
jg
lods
sbb
daa
push
ret
sub
repnz
jbe
mov
stos
icebp
jnp
xchg
popl
xor
aam
mov
gs
jo
push
jmp
mov
inc
fdivl
sbb
mov
insb
pop
scas
pop
jl
ja
aad
pop
stc
cli
cmp
xchg
rcr
xor
in
or
mov
mov
add
inc
inc
lods
fcompl
aas
test
push
sbb
shlb
dec
mov
pushf
fadds
out
sti
mov
arpl
mov
inc
bound
icebp
lret
jne
mov
test
js
in
xchg
and
dec
in
jo
imul
popf
pop
test
sbb
adc
dec
add
pop
adc
mov
jo
add
inc
into
jge
jecxz
test
cmp
lods
xchg
ja
mov
pop
cmp
mov
movsb
lods
sub
cmpl
xchg
dec
lcall
inc
ds
leave
jb
movsl
ret
push
ljmp
hlt
clc
call
out
xor
je
xchg
leave
sahf
mov
daa
aam
hlt
sbb
xchg
imul
mov
fst
dec
push
in
fdivrp
xor
data16
dec
jbe
adc
jge
out
push
insl
jno
cld
repnz
lods
out
pop
enter
mov
sbb
mov
or
les
cmpsl
mov
pusha
shl
add
cmp
xchg
add
insb
hlt
cli
sbb
int
pop
xchg
lahf
jno
jb
shlb
fwait
adc
movsl
test
sbb
mov
fiaddl
ja,pt
mov
push
pushl
das
popa
push
push
movsl
or
rcll
push
fldt
pop
outsl
mov
pop
aas
push
lods
xor
mov
lcall
inc
ds
mov
sub
sbb
out
out
adc
call
mov
ss
and
xchg
mov
out
mov
mov
clc
mov
push
xor
out
lods
add
neg
imul
fimull
mov
dec
movsb
in
jno
fcmovnu
push
out
jmp
add
cmp
adc
les
inc
jnp
push
cwtl
cli
jle
aas
fs
xchg
pop
cmp
dec
sub
or
popa
lret
lret
cmp
mov
xchg
dec
mov
inc
imul
mov
jle
inc
dec
out
xchg
pop
lock
popa
mov
int3
aaa
fisubs
outsl
pushw
dec
in
lock
cmp
xor
xchg
push
jns
sub
xchg
or
cltd
clc
clc
in
cltd
mov
popf
pop
xor
sbbl
cs
iret
aad
push
mov
cmp
cmc
jbe
ds
and
mov
adc
jmp
pop
mov
pusha
and
aam
jne
negl
negl
add
aaa
or
mov
iret
xchg
jbe
cmpsb
lock
sub
out
sub
cmp
pop
mov
cmp
sbb
xor
push
insb
xor
or
int
addr16
jp
inc
sub
or
lret
repz
ja
test
add
dec
inc
repz
mov
cs
adc
lret
or
pop
pop
les
pop
lret
mov
popa
adc
push
jnp
loopne
mov
rcll
movsl
mov
cli
inc
dec
push
dec
dec
cmc
mov
inc
add
inc
lret
testb
dec
ss
cli
jle
je
inc
jnp
les
add
mov
xor
sti
pop
loop
xchg
stos
stc
sahf
jecxz
push
sbbl
cmc
icebp
mov
and
and
sbb
inc
push
leave
adc
lods
push
ret
mov
add
pop
outsb
cltd
out
lock
setne
pop
out
ss
adc
add
xorl
insl
out
mov
mov
xchg
popa
dec
xchg
push
sub
mov
mov
js
enter
hlt
xor
inc
push
pushf
das
jge
cld
int3
sahf
cmc
ljmp
and
jae
gs
add
push
or
cli
out
out
pslld
inc
cli
cmp
mov
or
adc
fidivrl
jns
xchg
add
or
sub
loope
repz
lahf
add
xchg
adc
popa
jne
dec
test
mov
jnp
cwtl
gs
dec
aaa
popw
stos
mov
outsb
add
mov
shr
sub
dec
add
int
in
jnp
sbb
jo
push
fisubrs
fdivl
or
in
cmp
lret
add
divl
in
pop
das
imul
fnstcw
fcmovnb
shll
mov
into
mov
sbb
jnp
outsb
jmp
dec
jae
xchg
in
push
jae
lods
rolb
pop
adc
scas
dec
call
pop
mov
rcr
cld
adc
in
movups
aam
rcrb
cwtl
pop
inc
hlt
js
stc
fldenv
fisttpll
dec
pop
fimuls
or
rorb
repnz
pop
dec
dec
mov
dec
clc
inc
dec
scas
jnp
sbb
jnp
cmpps
cmp
pop
cmp
push
mov
fs
or
repnz
xchg
push
xchg
fs
jno
lret
nop
arpl
jo
or
dec
lea
int3
jae
pop
repnz
loopne
test
lea
dec
cmpl
jb
call
push
xor
fcoml
sti
add
test
insb
cmp
shll
jge
mov
rcrl
xor
inc
getsec
and
or
inc
call
pop
mov
push
ret
fsubl
mov
mov
mov
mov
fxam
mov
push
adc
adc
orb
js
adc
xor
aas
les
movsl
scas
lods
stc
rolb
or
xor
xchg
sarb
movb
cmp
inc
add
mov
addb
jno
push
sbb
shll
xchg
jno
dec
xor
mov
and
jle
mov
ret
outsb
xor
mov
mov
or
gs
shrl
cmpsl
in
pop
dec
adc
lock
pop
pop
add
cld
jb
imul
fldt
dec
jbe
xchg
sub
int3
jl
sub
out
jmp
outsl
cwtl
jg
stos
daa
fisttpl
mov
das
pop
movsb
les
adc
fcmovnbe
push
dec
je
mov
ret
mov
stos
jne
mov
mov
jbe
inc
lahf
xchg
sbb
xchg
push
or
jge
mov
adc
ja
jl
add
push
movsl
sbb
jp
mov
and
imul
jo
bound
xorb
add
mov
pushf
shlb
test
repz
mov
std
and
imul
jb
adc
in
add
adc
pushf
xchg
push
adc
mov
into
cld
iret
mov
dec
mov
lret
push
sbb
push
jb
icebp
pop
movsl
pop
inc
fnstcw
je
hlt
aam
ss
pop
shll
pop
stc
leave
das
pop
sahf
stc
repz
mov
xlat
mov
mov
mov
cmc
sbb
sbb
jg
xchg
daa
dec
js
addr16
push
mov
xchg
rcll
lods
or
xor
push
adc
mov
pop
mov
mov
mov
xor
adc
fstp
daa
lret
or
les
xchg
imul
movsb
jbe
jmp
xor
mov
shlb
je
sub
push
mov
inc
xor
dec
jb
ret
mov
pop
rcrl
push
cs
cmpsl
jp
lcall
inc
lock
mov
jae
sub
push
mov
lock
cmp
imul
pop
or
xchg
adc
in
adc
xor
add
jl
daa
inc
fwait
fs
fstpl
fisubrl
inc
out
inc
pop
enter
pop
add
add
leave
jp
add
mov
jg
cs
mov
out
mov
jp
cmp
ja
add
mov
cltd
lods
or
mov
mov
fsts
push
mov
outsb
jle
push
pusha
gs
pop
inc
test
setno
bound
dec
pusha
inc
fdivl
push
mov
sub
push
jb
sbb
push
push
into
cmc
les
imul
mov
ss
pop
notb
inc
dec
dec
movsb
or
pop
movsl
dec
mov
rclb
cmpsl
and
mov
pusha
mov
in
data16
popf
fyl2xp1
jnp
fadd
xchg
add
mov
sbb
mov
mov
xor
pop
ss
jecxz
pushl
lock
jae
insl
icebp
das
sub
pop
fstpl
mov
lret
lds
pop
mov
and
xor
aas
popa
je
clc
dec
aas
xchg
jns
xor
into
inc
dec
daa
cs
clc
add
xor
inc
dec
jb
and
xor
sbb
fsubr
into
pop
mov
lock
jp
into
scas
hlt
push
gs
cs
nop
mov
nop
fs
int3
sbb
aad
das
inc
mov
mov
xor
mov
push
sbbb
aad
inc
insb
mov
ss
inc
pop
mov
pusha
jmp
xor
rcrb
aaa
popa
and
sub
dec
loopne
pusha
or
ja
sbbl
rcll
mov
aas
dec
in
sbb
dec
fabs
push
iret
mov
rcr
xchg
sahf
rcll
push
adc
mov
jecxz
out
push
and
pop
std
mov
cmc
jnp
xor
lods
or
stos
or
pushl
popa
dec
cmp
sbb
pop
aad
in
jne
dec
push
inc
cmp
push
push
cmpsb
leave
les
xor
repnz
rcrb
in
push
pop
sub
jp
inc
adc
aas
cmp
mov
and
mov
xchg
ja
mov
cld
add
mov
lods
shr
mov
push
push
sbbl
mov
dec
das
dec
and
outsl
negl
neg
sbb
mov
scas
jg
mov
out
jbe
cmc
pop
pusha
xor
das
loope
pop
ja
cmp
add
lahf
and
daa
mov
and
mov
jge
sub
mov
mov
mov
add
sub
rclb
mov
push
shrb
xchg
mov
cmpsl
jo
jp
dec
adc
fmull
mov
xor
jle
cli
imul
shl
and
mov
push
or
cmp
sub
add
jge
sub
outsb
frstor
cmp
inc
cmp
aaa
mov
dec
push
and
dec
addr16
ss
test
xchg
pop
cwtl
jl
dec
jb
dec
aas
loop
lods
sub
out
mov
mov
fucomp
test
adc
adc
dec
mov
cmp
inc
push
pop
insb
fcmovnu
scas
je
add
insb
mov
or
inc
test
in
lret
rolb
cld
rolb
repz
mov
xor
push
cmp
adc
mov
fstpt
cli
int3
pop
jmp
and
jle
rcll
sub
jb
push
mov
pop
mov
jne
xor
push
in
pop
mov
cmp
pop
mov
mov
and
clc
push
pop
aas
inc
xchg
test
xchg
add
jae
xor
es
xchg
mov
mov
stos
xchg
mov
lcall
adc
jg
int
or
push
mov
sbb
pop
cld
xchg
imul
fdiv
testb
cli
cmpsb
mov
popf
sbb
dec
in
insl
cld
cmp
int3
movsl
cmp
rcrb
sbb
cmp
jmp
out
shll
add
dec
clc
fcoms
push
pop
enter
sbb
xor
add
shrl
lods
dec
popf
adc
sti
cwtl
mov
lock
add
xchg
sar
enter
pop
sbb
jmp
xchg
add
addr16
not
sarb
mov
in
jno
add
xor
test
xor
jo
add
fimuls
in
stos
fimull
subl
out
and
pop
xchg
fs
or
mov
sbb
pop
mov
push
jge
in
mov
jle
push
xchg
sub
jb
push
add
adc
xor
push
ret
add
and
int3
cmp
inc
xor
ret
cmp
adc
xor
daa
les
or
call
pop
adc
jb
daa
and
xchg
adc
and
cs
mov
in
daa
pop
push
xor
add
xlat
pop
push
push
loopne
fs
roll
sbb
xchg
sub
push
popa
and
mov
fiaddl
movsl
cli
pushf
shrl
divl
jns
jns,pt
jle
es
push
or
xchg
ljmp
pop
xchg
sub
mov
test
lret
es
ret
xchg
add
mov
mov
xchg
lods
loopne
popa
cmpsb
inc
sub
out
or
mov
jmp
das
das
out
aam
add
fwait
scas
pop
test
mov
push
pusha
jnp
push
xor
inc
xchg
pop
xor
inc
sub
mov
lret
lods
lcall
mov
ret
rcrb
jecxz
pop
cmp
ja
stos
cmpsl
pop
fisttpl
push
negl
inc
outsl
mov
pop
mov
cmc
es
inc
pop
imul
mov
cld
out
cmp
push
mov
push
aaa
dec
inc
daa
add
xchg
inc
xor
cwtl
xor
and
arpl
fildl
outsl
xchg
setb
adc
sbb
mov
out
inc
scas
inc
adc
xchg
popf
push
mov
push
sub
jnp
sub
es
dec
add
ljmp
pop
mov
dec
cmpsl
dec
imul
dec
jns
and
movaps
out
or
rorb
and
xchg
sahf
push
leave
sub
cmp
xchg
aam
mov
imul
sbbl
ret
push
pop
adc
dec
arpl
xchg
lods
mov
cmc
pop
push
outsl
xchg
jbe
dec
add
mov
orb
jnp
mov
inc
dec
jle
lret
subb
sbb
mov
out
push
and
or
mov
or
push
mov
lcall
push
fs
push
insl
cmp
xchg
ds
mov
adc
or
jecxz
sub
inc
mov
ja
repz
cmpsl
leave
xchg
mov
ljmp
push
sub
mov
jmp
jmp
inc
pop
mov
and
das
push
cmc
shll
push
imul
mov
loope
add
xchg
cmp
stos
mov
lahf
jp
iret
mov
dec
call
dec
mov
aaa
sbb
sub
inc
punpckhbw
cwtl
test
shlb
loopne
repnz
loope
xchg
test
shll
testl
inc
mov
ljmp
js
pusha
arpl
lret
cmp
in
into
mov
sub
inc
fs
das
insb
sarb
add
popa
mov
xor
push
out
pop
pop
adc
mov
in
rorl
cs
inc
and
or
pop
cmpsl
add
lcall
out
imul
xchg
js
or
mov
clc
jmp
fwait
rcll
push
mov
aas
push
repnz
scas
cmp
pop
add
sub
lret
outsl
sub
daa
fisttpll
pop
dec
xchg
shll
and
outsl
ds
pop
test
or
add
push
push
adc
mov
or
xchg
std
shr
pop
call
scas
mov
inc
js
pop
mov
mov
mov
xchg
lods
popl
insl
insl
dec
test
enter
fsts
out
in
mov
mov
dec
mov
pop
out
int
test
push
push
push
and
sar
or
mov
xor
test
jl
ss
mov
jbe,pn
and
and
dec
stc
pop
mov
xchg
mov
mov
stos
out
mov
jg
jle
push
jb
shll
out
xor
mov
jge
es
sub
xchg
test
push
rcr
sbb
test
dec
inc
xor
xor
jecxz
test
dec
jg
insb
mov
repnz
sahf
sub
into
bound
loope
cmpsl
into
aaa
inc
xor
es
dec
xchg
jp
outsl
jmp
sbb
mov
push
cwtl
outsb
int
or
adc
adc
pop
movsl
mov
into
test
dec
mov
add
mov
pop
mov
pop
dec
fisubl
xchg
mov
mov
sbb
inc
dec
jmp
dec
jecxz
dec
mov
mov
pop
fidivrl
sti
or
stos
aad
mov
mov
ror
mov
ret
ja
sbb
in
and
out
xor
mov
add
and
xlat
mov
jg
sub
cmp
sarb
cmp
test
cld
cmc
addr16
xor
call
mov
sahf
xor
jo
push
mov
jae
push
sbb
stos
ret
mov
push
sbb
fisttps
cld
ror
push
int
cmp
sbb
rclb
fiaddl
rcrl
shl
inc
add
js
mov
adc
push
imul
cmp
jecxz
or
inc
xor
xchg
xor
fwait
fwait
sbb
lret
dec
add
add
inc
xchg
repnz
mov
popa
lock
repz
and
jge
inc
or
stc
aaa
inc
xor
push
xchg
push
jne
pop
pop
mov
fwait
mov
lds
sub
and
mov
mov
add
orb
test
xchg
test
or
xor
andb
loope
mov
cmp
les
mov
xlat
subl
fnstsw
imul
pmulhw
cmp
adc
or
add
lahf
insb
xor
negb
scas
int3
push
test
aam
add
sti
lea
movswl
cwtl
int
xor
loope
adcl
xchg
mov
fstpl
fildll
xlat
test
inc
dec
je
insl
and
shr
ja
add
fstpt
roll
inc
dec
or
in
inc
fldt
rolb
cmp
dec
inc
add
jmp
insb
cli
std
push
jge
test
movsl
int
dec
icebp
xlat
dec
sub
xor
out
cwtl
mov
fldenv
int3
out
push
orl
ficoml
imul
push
repz
push
pop
stc
add
test
mov
scas
or
jecxz
int
or
inc
lret
outsb
add
xchg
pop
rcrb
ret
roll
dec
ja
idiv
push
mov
out
ret
or
loopne
mov
incl
lea
test
jne
sub
call
jns
rorb
js
pop
jae
jbe
test
xchg
fwait
xchg
dec
sti
lds
inc
dec
mov
jb
add
ss
test
lds
and
stos
inc
cs
mov
push
outsl
fsubrl
and
ja
or
gs
clc
repz
or
popa
push
sub
fwait
inc
iret
and
in
add
jmp
mov
mov
out
lods
dec
push
push
jo
icebp
mov
and
in
adc
test
adc
loope
in
cmp
mov
mov
pop
xor
imul
adc
xchg
mov
jmp
cmp
mov
mov
jle
fdivrp
push
sub
das
push
inc
shlb
mov
shrl
xchg
push
es
cmp
sub
pop
adc
xor
adc
insb
addr16
test
sbb
push
in
test
popw
lea
arpl
push
add
jb
cmp
dec
jle
das
sub
gs
jo
ds
int3
push
mov
aad
mov
out
nop
cmpl
mov
cmp
sub
dec
int
les
or
jae
mov
inc
cmp
mov
pop
mov
rorl
cld
mov
outsb
mov
push
test
icebp
xor
outsb
out
ds
sbb
xchg
cmpsb
xchg
mov
add
pop
mov
mov
push
rclb
bound
add
xchg
pop
sbb
xor
not
push
cmpsl
ljmp
pop
ja
push
lods
out
pop
addr16
push
add
lock
xor
lcall
mov
mov
loope
push
and
pop
xchg
or
xor
out
pop
aaa
push
loop
rcr
negb
adc
push
adc
push
adc
int3
push
jg
mov
inc
insb
push
ffree
andl
lods
ds
outsl
pop
cmp
es
je
pop
jb
xchg
and
xorb
fucomi
rorb
repz
test
xchg
sbb
and
push
xor
pop
out
pusha
les
inc
sti
push
lahf
aad
ljmp
cli
aaa
in
mov
inc
into
outsl
fstpt
stos
std
in
imul
jge
shll
xor
xor
cmp
mov
mov
xor
mov
stc
pop
outsb
sub
add
add
mov
mov
arpl
xchg
jp
pop
or
mov
or
push
inc
jg
popf
mov
xchg
loope
inc
movsl
dec
add
sbbb
pop
fs
aad
bound
imul
test
into
fisubs
iret
inc
ss
sbb
cltd
mov
and
fidivrs
or
outsl
add
inc
sahf
lods
ja
and
xchg
xchg
fistpll
xlat
fs
in
dec
cmp
in
icebp
add
test
inc
sbb
xchg
dec
or
out
std
inc
push
cmp
aaa
inc
pop
sbb
jmp
test
sbb
out
bnd
imul
jns
out
fdivrs
xor
jl
pop
repz
jge
xor
mov
cmp
hlt
repz
orb
mov
adc
inc
lret
pop
rclb
push
js
pmaddwd
xchg
fwait
pop
xor
or
das
rolb
mov
xchg
jg
loope
imul
in
vmovlps
pop
sar
mov
cmp
adc
ret
mov
xchg
push
cwtl
mov
idivb
fidivrl
mov
sarl
cld
iret
inc
pop
push
pop
mov
js
insl
xchg
fwait
pop
sahf
mov
cmpsl
cs
adcb
cltd
sahf
or
movsl
aas
lock
movsl
push
bound
adc
repz
outsb
xchg
push
lea
lods
and
mov
push
or
jp
push
push
inc
stos
xor
xchg
lret
adc
int
shrd
call
lahf
dec
mov
inc
push
sbb
xchg
shl
push
sti
test
roll
leave
dec
imul
jmp
fldcw
dec
das
sbb
loopne
inc
pushf
addr16
sbb
nop
incb
pop
cmc
jg
ds
adc
call
fdivs
inc
les
test
adc
or
in
in
in
lret
jmp
pop
aam
packuswb
lods
cmpsb
movsb
ret
dec
jmp
andl
adc
push
jae
sti
and
mov
pusha
ljmp
add
push
cmpsb
lea
in
outsl
stos
fildl
mov
dec
sbb
xchg
or
mov
in
jno
push
lods
out
ss
pop
lods
js
or
sti
int3
sti
inc
mov
xchg
ret
fsubp
rorb
in
push
add
daa
pop
cmovp
jecxz
pop
aad
cli
je
cmpsl
push
mov
cwtl
fisubs
aad
inc
dec
adc
pop
faddl
lods
notl
pop
jle
fdivp
sub
and
xchg
loope
or
mov
cld
cmp
aad
mov
xor
bnd
movl
pop
fidivl
cltd
cmp
mov
inc
dec
loope
ret
xlat
mov
call
add
mov
inc
loope
test
dec
mov
jmp
rolb
int3
mov
adc
xchg
adc
push
sbb
sub
ljmp
fistl
cs
adc
adc
jecxz
xchg
push
in
push
pop
clc
data16
mov
pop
cld
and
std
out
cwtl
fidivrs
movsl
dec
jns
cmc
add
in
ret
mov
daa
incl
gs
in
lret
push
push
in
or
mov
cmp
dec
adc
or
jle
xchg
and
cs
jmp
js
inc
lods
iret
cmp
pop
pop
daa
jno
and
dec
aaa
add
subb
lret
jle
jae
int3
cs
rep
cmp
jle
fisttpll
lock
mov
jno
leave
fmul
js
sahf
adc
popf
xor
test
popf
imul
or
cld
push
cld
lods
and
xchg
ret
mov
imul
fcomi
mov
movsl
outsb
push
push
push
mov
push
mov
mov
mov
arpl
movsb
enter
cvttps2pi
pop
nop
orl
mov
adc
cmpsl
lds
xchg
xchg
fcoms
mov
int3
je
push
les
jle
pop
pop
fldcw
mov
add
stos
push
mov
cmp
push
mov
or
sub
push
or
mov
out
xor
lcall
sbb
rorb
aaa
rorb
inc
inc
push
out
mov
add
add
xlat
aam
mov
incl
cmp
jl
mov
adc
add
out
jae
xorb
test
xchg
cmp
jns
imull
sbb
les
sbb
popa
mov
add
sub
xorl
imul
mov
sub
addl
pop
leave
loop
repz
lcall
je
je
cmp
mov
repz
pop
and
cmc
and
sbb
mov
faddl
fwait
out
add
incb
daa
push
adc
clc
clc
inc
mov
sub
cmp
pop
push
insl
sbb
loopne
ja
popa
mov
cmp
and
pop
loope
push
ret
shlb
call
xor
cltd
pop
jns
mov
loope
push
adcb
shrl
adc
dec
inc
dec
pop
fwait
add
rdmsr
ljmp
in
ficompl
jnp
lods
sub
pop
mov
aas
or
jl
mov
mov
sub
pop
xchg
shrb
add
imul
hlt
test
std
and
aad
arpl
push
repnz
test
mov
loopne
adc
cld
lret
jbe
inc
pop
xchg
push
or
mov
pop
mov
inc
jge
addr16
dec
mov
and
sub
cmp
push
int3
je
loopne
imul
or
imul
push
mov
repnz
lret
shrl
pop
cmp
movsl
dec
mov
pop
add
sbb
cwtl
test
arpl
lcall
xor
pop
gs
sub
cmp
lock
mov
mov
ljmp
push
adc
jo
sub
add
cmpb
pop
mov
pop
xor
xor
mov
aad
jo
jmp
jne
fcmovb
mov
dec
sahf
enter
pop
js
xchg
pusha
sub
aad
movd
into
xchg
mov
xor
inc
push
call
mov
fs
orb
sbb
inc
mov
int
fmuls
js
adc
sbb
jo
imul
mov
imul
mov
sub
mov
pop
pushf
jl
mov
mov
test
pop
cwtl
loop
mov
fs
test
std
mov
pop
mov
movsl
push
fwait
xchg
mov
hlt
inc
mov
adc
add
pop
jne
stos
pop
sbb
xchg
test
mov
sub
mov
inc
xchg
mov
add
adc
or
push
jle
stos
out
lcall
imul
jle
push
ss
lds
out
das
or
addr16
mov
xor
repz
movsb
pop
mov
cmc
popf
dec
aaa
pop
cmp
shrl
out
pusha
out
mov
loop
in
ret
push
cmp
test
dec
mov
nop
mov
sub
addr16
or
cmp
jg
jl
movsl
cmp
loopne
adc
lods
push
fidivs
subb
test
int3
and
cmpsb
aam
dec
push
add
cmp
adc
mov
fdivrs
pop
inc
xorb
mov
scas
sub
push
adc
fldt
dec
xchg
shr
out
sahf
mov
cmpsb
test
cmp
sub
pushf
in
push
xor
mov
roll
sbb
gs
aad
mov
ds
fs
rolb
mov
std
aam
js
add
mov
jp
add
cld
jle
inc
jecxz
adc
xor
dec
xorl
jbe
notb
cmp
popa
mov
mov
push
xchg
loop
test
sti
sub
sbb
enter
lock
pusha
dec
cmp
xchg
fldenv
xchg
or
test
mov
cmp
jne
mov
jbe
stos
dec
mov
jmp
or
enter
outsl
xor
lahf
dec
mov
btc
add
scas
sbb
inc
insb
fistpll
push
and
out
int3
lea
mov
dec
in
adc
test
aas
int3
int3
clc
adc
mov
cmp
xchg
jbe
adc
dec
orb
rorb
jecxz
cwtl
dec
jl
cmp
mov
pop
xor
fldt
decb
xchg
fistl
daa
je
pop
cmp
xchg
cmp
xor
pop
and
leave
mov
lods
and
or
sub
push
lcall
or
jne
xchg
xchg
inc
xor
adc
push
jg
or
pinsrw
dec
ret
js
fldcw
stos
sbb
test
pop
push
xchg
stos
outsb
mov
adc
ja
pushf
pop
adcl
pop
mov
imul
sub
test
data16
clc
inc
les
push
stos
gs
enter
shlb
xchg
cmpl
pop
fsubl
shl
daa
and
fwait
stc
mov
movb
lock
ljmp
xor
daa
sub
cli
push
lahf
push
mov
xchg
pop
add
cs
add
orb
outsl
jmp
fstl
jmp
jo
cmp
push
loope
in
insb
mov
pop
push
insb
jbe
rolb
lahf
sbb
icebp
call
jmp
stc
test
dec
xchg
cmp
and
add
cltd
movsl
orl
adc
sarl
nop
shr
mov
jecxz
jecxz
mov
sbb
mov
fdivs
sti
shrl
call
xor
lock
cmp
popa
or
ljmp
roll
cmp
adcb
test
outsb
in
sbb
iret
rorl
fsubrs
mov
push
gs
std
cmp
cmp
ja
scas
test
das
movsb
fbstp
mov
leave
xor
std
out
adc
loopne
fwait
les
lcall
loop
mov
dec
pop
xchg
or
fstpt
or
xor
add
add
ret
imulb
mov
add
scas
pop
jp
inc
dec
pop
mov
outsb
mov
rcrb
int3
cmp
pop
ret
jl
pop
mov
int
jmp
cli
imul
and
dec
test
push
aaa
repz
mov
fwait
repz
mov
adc
pop
std
movsb
test
inc
cmp
sub
jle
jg
out
xor
inc
adc
push
cmp
les
mov
daa
xchg
shlb
mov
sbb
popa
dec
cmp
in
into
rcrb
popf
clc
movl
mov
fs
pop
lods
adc
jge
adc
xrelease
mov
int3
iret
push
mov
clc
out
xchg
sbb
shll
adc
cli
push
push
mov
and
addr16
lahf
mov
dec
ss
lahf
pop
bound
repnz
xchg
dec
jb
scas
fcomip
pop
mov
or
stc
rorb
and
cmc
add
cmp
mov
sub
stc
pop
roll
fisttpll
out
in
dec
imull
and
out
movsb
xor
cli
fs
jge
jmp
jb
call
das
mov
mov
jo
cli
jge
out
adc
mov
ja
stos
inc
jb
fucomp
inc
jbe
shll
or
mov
xchg
jo
icebp
outsl
mov
mov
xchg
add
mov
pop
mov
mov
cs
xor
xor
sbb
cs
add
mov
xlat
leave
jno
repnz
fwait
push
cmpsb
rcrb
pop
inc
jae
push
sbb
data16
loopne
lret
pop
outsl
add
sub
xchg
addr16
fsubl
mov
inc
cmp
and
xchg
outsb
cmp
and
ss
cld
pop
mov
cmpsb
xchg
xlat
dec
pop
and
jl
sub
movb
popa
int3
mov
hlt
fwait
lds
pop
add
notb
inc
dec
std
jg
add
adc
or
bound
cmpsl
arpl
loop
ret
ss
xchg
push
popf
cmp
lmsw
mov
out
fdivrl
ljmp
inc
dec
and
cmp
fmul
sub
lahf
fstl
lds
cmpsl
mov
xchg
das
int3
loopne
fwait
arpl
add
xor
xor
fistpll
mov
pushf
iret
aad
fistpl
int
and
imul
jp
jne
or
mov
push
jg
adcl
ret
into
in
loope
cmp
pop
lds
outsl
lock
inc
adc
jnp
aam
jmp
ret
and
xchg
xorl
rorb
or
jge
lahf
jb
sub
scas
daa
xchg
mov
push
ror
xor
repz
pop
fisubrl
cld
psllw
cmc
lret
mov
xor
sbbb
mov
mov
std
incl
and
sub
adc
push
fldl
inc
es
pusha
inc
sbb
cmp
insl
andb
pop
jp
dec
fadd
imull
adc
adc
fsts
push
sahf
xor
xchg
sub
pop
cmp
xor
inc
fcoml
xchg
cmp
es
icebp
pop
ret
dec
cltd
xor
in
fcompl
cmpsb
push
dec
mov
push
int
subb
xchg
sbb
out
movsl
or
add
pop
sub
out
mov
xor
xchg
adc
pop
pop
lea
add
jecxz
loopne
adc
push
cld
sbb
lcall
cmpl
mov
mov
push
fisubrs
pushf
lahf
mov
sbb
fs
push
mov
cld
int3
cli
ret
and
andl
ja
pop
xchg
outsb
dec
fiaddl
mov
xor
in
rcr
push
sub
test
stc
out
mov
or
outsl
xchg
clc
stc
add
mov
cld
sarb
sub
loopne
loope
pop
push
loopne
xchg
push
or
pusha
lret
xchg
pop
sub
jb,pt
mov
mov
jb
sahf
clc
mov
repz
mov
push
mov
xor
lret
lret
testb
jle
imul
repnz
mov
movsl
mov
loope
sti
pop
mov
out
scas
loope
mov
test
lock
shll
push
pop
ljmp
adc
mov
movsb
leave
or
lcall
je
fisubrs
push
sbbb
or
adc
xchg
test
fsubrp
sar
insb
or
imul
pop
push
pop
push
push
adcb
xor
inc
leave
adc
outsl
imul
xor
push
sbb
lret
sub
jb
xchg
xor
lods
hlt
jmp
pop
leave
pop
mov
pop
aaa
push
pop
xchg
or
lea
bound
into
inc
or
jmp
sar
shlb
scas
shll
nop
pushf
int
imul
not
add
xchg
jbe
aad
arpl
push
or
stc
pop
mov
inc
mov
fwait
rcrl
cmpsb
add
stos
jbe
lods
xchg
cmp
in
mov
cld
in
cmp
outsl
xchg
loope
cmp
jne
insb
pop
jbe
fisttpl
jg
dec
jne
mov
inc
popa
add
rcll
push
es
imull
mov
pushf
mov
movsl
jecxz
mov
scas
int3
stc
pop
in
pop
and
aaa
mov
stc
inc
scas
fwait
sbb
std
jne
pop
add
das
sub
xchg
inc
add
sbbb
cmp
shlb
push
lret
insl
cli
jmp
insl
mov
aam
adc
jne
cmp
mov
gs
cwtl
mov
ss
inc
loope
stos
imul
sub
push
jns
scas
adc
nop
popf
xchg
xchg
push
push
xchg
enter
loope
mov
aas
cli
stos
sub
and
shll
sub
or
adc
sub
and
dec
leave
sub
ret
and
mov
and
dec
jo
cmp
dec
add
pop
mov
cltd
daa
mov
inc
out
pop
add
add
gs
inc
popf
mov
clc
lret
aam
mov
lret
bound
ljmp
subb
mov
fistps
das
jle
or
xchg
xchg
lods
rcrl
and
in
push
push
loopne
sub
xor
imul
test
mov
mov
mov
outsl
pusha
sahf
jnp
or
out
pop
iret
imul
enter
cmc
sub
cmp
adc
stos
mov
es
adc
js
adc
inc
cwtl
mov
es
lcall
sub
adcb
inc
dec
pop
call
cmp
nop
lret
mov
sbb
call
sub
jecxz
jg
cmpb
aaa
cltd
jmp
adc
push
jno
lret
mov
mov
sti
jo
cmp
in
push
mov
cmp
or
lea
jo
imul
push
sbb
ret
aad
lcall
mov
andl
ret
jne
and
pop
or
fimull
dec
xchg
popf
movsl
mov
push
add
lods
mov
jo
sti
cmpsl
aad
pop
dec
out
icebp
sbb
movsb
das
cmp
fnstsw
loopne
xchg
xor
jnp
dec
xchg
mov
cmp
xor
mov
or
out
loopne
pop
pushf
in
push
outsl
cwtl
mov
pop
jbe
pop
lea
inc
sbb
pop
adc
mov
sub
shll
and
push
sbb
call
push
outsl
pop
dec
fisttpl
xchg
xchg
inc
sbb
cltd
pop
test
sub
jg
icebp
dec
fnsave
cltd
enter
sti
xchg
sbb
inc
adc
ss
dec
xor
arpl
xor
push
stos
fisttpl
out
neg
daa
cli
xchg
das
sbb
insb
pop
jns
je
jnp
push
icebp
adc
mov
lea
loopne
pop
leave
fistpl
dec
outsb
add
popf
je
xor
jbe
push
cmc
xor
popf
in
cmpsl
insb
fdivl
mov
in
or
mov
or
inc
clc
push
or
out
sub
dec
xor
inc
shl
pusha
and
dec
add
mov
mov
jnp
in
or
mov
mov
pushf
inc
mov
cmpsb
xor
out
enter
cmp
clc
push
pop
ret
push
jg
js
adc
insl
push
add
repz
outsb
mov
mov
data16
std
es
popa
sbb
push
mov
inc
jmp
fnstenv
cmp
mov
cmp
mov
sti
add
ds
add
push
jbe
cld
jecxz
stos
cmpsl
mov
pop
gs
int
loopne,pn
repnz
dec
pop
inc
xorl
scas
dec
cmp
cli
mov
and
pop
int3
pop
rolb
xor
pop
test
bound
aaa
nop
neg
cmp
lea
cmp
loopne
idivl
cmp
mov
shr
cltd
enter
cld
push
pop
je
out
add
xchg
sahf
out
mov
jns
pushw
mov
dec
sbb
lcall
sub
push
cld
add
loop
repnz
stc
jge
jl
push
and
fimull
xchg
push
outsl
sbb
imul
scas
std
lds
cmp
imul
insb
adc
mov
sub
cmc
ljmp
xchg
push
stos
js
jno
mov
add
int3
cs
mov
call
and
movsl
mov
bound
pop
jle
adc
aad
and
jbe
popf
test
inc
add
outsb
mov
cmc
sbb
iret
cmc
scas
movsb
xor
es
in
orb
test
mov
test
cmp
ja
inc
fistpll
mov
ljmp
adc
outsb
adc
inc
aas
dec
lods
pop
sbb
mov
or
cltd
sbb
sub
dec
adc
pop
fwait
cld
and
adc
and
jno
popf
or
push
pushl
lds
in
cmp
or
and
popa
std
inc
mov
cmp
fdivl
jp
cmp
daa
cmpsl
fstpl
jne
imul
jecxz
pop
jb
in
ds
je
es
aaa
scas
in
push
scas
mov
sbb
fstp
stos
sti
xor
xchg
sub
aaa
fs
outsb
data16
dec
or
or
cmp
sahf
mov
insb
cmp
add
test
mov
rcrb
add
cmp
gs
adc
xchg
cs
shl
push
das
xchg
lret
adc
pop
pop
mov
fiaddl
jmp
mov
sti
add
in
cmp
ret
sub
mov
xchg
sti
incb
adc
add
adc
insl
push
mov
out
push
cmpsb
lods
repnz
aad
scas
out
xor
add
cmp
adc
pop
scas
lods
and
in
jbe
xchg
cmpsb
in
subl
mov
xor
inc
sbb
ljmp
xor
pop
mov
enter
jns
rorl
and
dec
or
es
jae
jnp
jle
xor
out
push
mov
inc
dec
pop
int
jle
out
lret
xchg
stos
aaa
push
and
xchg
xchg
in
mov
fidivrl
adc
jbe
jns
jnp
insl
scas
push
stos
std
cmp
js
pop
cmpsl
out
out
test
test
mov
dec
pop
leave
fiaddl
out
sub
inc
push
adc
out
mov
mov
add
ja
xchg
lock
stc
cmp
cwtl
push
outsb
jnp
aas
imul
arpl
adc
mov
mov
cwtl
daa
cmp
push
mov
add
insl
jns
mov
mov
loope
xchg
push
out
aam
std
loopne
scas
inc
xchg
jns
test
adc
mov
adc
mov
jmp
jnp
add
or
jns
in
xchg
cmpsb
inc
mov
int
into
ja
js
pop
sub
lret
mov
sahf
mov
jle
add
jl
add
push
hlt
arpl
and
movsb
mov
data16
imul
sub
pop
pop
sub
or
hlt
push
fidivrl
pop
bound
xor
call
scas
push
push
sahf
pop
push
lret
das
and
adc
pmulhuw
and
xchg
cs
dec
idiv
dec
jmp
out
mov
mov
ds
push
ret
add
jae
dec
shll
outsb
mov
jmp
div
lds
notb
xorb
hlt
adc
xor
cmp
mov
push
insl
cmpsb
inc
pop
inc
clc
outsb
xlat
das
sub
adc
dec
popf
pop
ret
shr
add
outsb
mov
dec
mull
pop
pop
push
xchg
out
dec
dec
int
push
dec
cmp
sbb
js
push
out
cmp
xchg
pop
out
repz
test
int3
fisubrs
pop
jmp
or
scas
jb
sahf
movsl
sbb
lock
lea
mov
pop
inc
int3
xorb
jle
push
pop
sub
insl
pop
mov
ja
movsl
jl
lods
jmp
shrb
cmc
pop
jns
push
ja
mov
mov
stos
pop
cmp
in
outsl
mov
cli
fs
mov
lods
fdivs
inc
mov
xchg
mov
mov
fsubp
int3
pop
dec
pop
cwtl
jl
push
jbe
pop
mov
xchg
das
repz
ret
aaa
cmp
test
fwait
hlt
sbb
mov
pop
and
addl
iret
mov
das
loopne
pop
push
sahf
cmp
sahf
jbe
dec
push
mov
inc
cli
insb
hlt
pop
and
jno
jne
mov
ds
xor
ss
leave
push
popa
aam
loop
jp
jbe
or
mov
ret
outsb
mov
lret
int
dec
aad
push
sbb
nop
inc
xor
sbb
inc
push
cli
sbb
js
lods
cld
jmp
leave
mov
pusha
loopne,pn
mov
pop
adc
jp
jmp
out
lea
pop
outsl
fnstenv
into
ret
push
push
fbld
aaa
ljmp
push
add
mov
and
je
adc
fadds
xchg
xor
mov
add
pusha
ljmp
push
or
sub
adc
ja
inc
out
jmp
and
push
sub
popa
mov
subl
pop
pop
lods
cmpsb
mov
outsl
xchg
stos
test
and
int
or
adc
out
mov
into
decb
jge
bnd
test
popf
cmp
pusha
jno
pop
xor
aas
xor
push
int
daa
dec
sub
test
ficompl
out
lock
in
add
inc
jecxz
xor
push
fucomi
addl
add
or
push
mov
dec
xchg
pop
adc
outsl
fwait
imul
mov
sbb
mov
dec
and
test
outsl
enter
loopne
lods
es
pop
lods
enter
int3
shll
jmp
lcall
cli
sbb
sub
ss
jp
test
repz
mov
mov
push
and
fwait
out
jp
enter
enter
cld
mov
or
mov
jp
insb
pop
int
sahf
mov
xchg
fidivrs
sbb
cmpsb
sub
mov
je
push
test
jnp
mov
jns
inc
push
rcrb
pop
mov
push
add
mov
in
or
roll
dec
into
pop
sti
xor
icebp
bound
adcb
popw
fwait
aad
jle
cwtl
sub
push
push
adc
push
and
xchg
stos
dec
sub
add
sbb
fdivrs
scas
xlat
mov
sbbb
xlat
pop
mov
fmuls
int
mov
nop
aam
imul
push
mov
sbb
dec
jle
fcompl
je
repz
stos
adc
mov
jmp
std
shll
mov
push
push
lret
sub
inc
daa
lret
inc
mov
mov
fidivl
push
xchg
leave
fisttps
mov
pusha
sbb
daa
pop
xchg
and
jp
nop
sbb
ret
sub
xchg
xor
repnz
push
dec
in
mov
shl
sub
and
dec
aaa
adc
lahf
or
rcr
or
movsb
fsub
sbb
add
cmp
ficompl
cmp
lahf
cmpsl
stos
pusha
imul
psadbw
pop
andl
mov
fldenv
adc
sbb
scas
jmp
iret
shrl
mov
or
mov
pop
int3
pop
aad
lahf
add
push
xchg
aad
xlat
xor
dec
pop
cmpl
sarb
pusha
xchg
jo
push
sarb
out
push
jno
sbb
iret
lock
or
insb
gs
push
movsl
mov
loope
popa
into
aas
int3
loopne
jge
rcr
dec
out
adc
pop
mov
mov
daa
inc
movsb
or
lret
push
stos
aad
jp
jg
push
inc
cmpsb
inc
frstor
push
mov
into
cmpsl
xor
iret
les
shr
out
xchg
arpl
lahf
xchg
cmpsl
push
and
test
cmpb
cmpsl
cs
enter
notb
xor
inc
sub
out
mov
cmc
in
inc
mov
and
mov
dec
and
xchg
add
pop
hlt
fimull
fneni(8087
mov
out
mov
mov
sub
jbe
fildll
pop
test
xchg
arpl
daa
sti
insb
ret
iret
sti
loop
es
shlb
mov
jmp
dec
push
mov
pop
popa
cmpsl
and
mov
sbb
sbb
cmp
or
pop
pushf
cmpsb
mov
testb
sub
scas
jb
sub
sub
push
mov
add
jae
iret
out
xor
iret
inc
push
dec
test
flds
xor
pushf
or
mov
enter
sti
and
jnp
decl
sbb
loop
xor
inc
call
pop
adc
loopne
leave
repnz
aad
out
mov
push
out
into
xchg
push
push
sub
dec
mov
fmull
mov
add
mov
stc
mov
cmc
xchg
push
xor
jb
cmc
aad
jmp
loop
push
lock
fcmovne
daa
int
sbb
push
pop
fisubl
cwtl
and
cmc
into
push
or
sub
push
test
test
movsb
mov
aad
sub
fistps
lret
xor
cmp
dec
adc
das
insb
out
pusha
ljmp
stos
cli
mov
aas
nop
shl
scas
push
push
inc
sub
pop
out
dec
xor
dec
nop
sbbb
mov
in
clc
rclb
ds
add
das
das
hlt
pop
jne
jg
flds
clc
or
inc
hlt
mov
stc
pop
jb
mov
jbe
ds
scas
push
lods
repnz
rorl
seta
mov
cmpsb
jecxz
jb
test
cmpsl
and
ret
arpl
in
push
mov
inc
push
ljmp
sbb
lret
inc
mov
mov
mov
xchg
jbe
mov
mov
lahf
outsb
out
into
dec
pop
into
mov
sub
shll
loop
mov
in
or
mov
cld
inc
ss
out
jo
add
data16
lds
jno
sub
xchg
xchg
push
dec
aam
call
out
or
pop
enter
cmpsl
std
mov
mov
push
and
es
push
aaa
test
ffreep
lea
fimull
pop
aaa
out
inc
jle
mov
iret
push
sub
inc
ret
repz
daa
aas
sbb
jge
clc
ret
fwait
ds
sub
lods
rcl
rdtsc
pushf
incb
mov
pop
data16
cwtl
shr
push
pop
sbb
mov
insl
adc
nop
mov
xchg
jne
adc
sub
fsubs
adc
ror
adc
icebp
add
js
xchg
aad
push
lds
add
push
repz
push
push
scas
inc
aaa
sbb
addl
cld
popa
jne
das
sbb
sahf
shl
loope
pop
or
push
fistl
jmp
mov
addr16
mov
jo
cld
jno
fsubrl
repz
add
lds
sbb
xor
xchg
das
and
push
hlt
ja
push
not
xchg
outsb
xor
adc
inc
mov
xchg
sub
lock
jle
ljmp
test
adc
cmpsb
arpl
xchg
xlat
fst
jl
xor
xor
push
divps
lcall
je
dec
push
mov
popf
cmpsl
cmp
fstl
or
adc
xor
addl
add
sub
sub
xorl
je
xor
add
shrl
xor
ss
cltd
sub
and
cmp
pop
inc
leave
ds
push
and
jo
pop
sbbl
adc
sub
ds
sub
shlb
and
sbb
sub
jbe
pop
arpl
mov
xorb
jle
cmp
pop
adc
push
sbb
mov
leave
call
xchg
push
or
fnstenv
idivb
repz
mov
xchg
and
cltd
mov
cli
push
inc
stos
loop
icebp
sub
lods
call
sahf
mov
lret
xchg
into
fildl
ffree
jae
int
ret
ss
cld
bound
push
adc
shr
inc
and
mov
push
out
and
data16
out
mov
lock
ja
push
std
scas
in
test
call
sub
push
fadd
sub
sub
dec
mov
push
push
add
dec
mov
and
pop
push
mov
mov
add
shlb
flds
and
jo
mov
pop
add
lock
jle
rclb
andb
ret
cs
inc
cs
lret
out
leave
xchg
adc
pop
idivl
mov
mov
shlb
fsubs
fnsetpm(287
jge
mov
push
hlt
sbb
jecxz
jg
clc
and
ficoml
pop
mov
js
out
ljmp
iret
jp
in
sub
out
mov
into
push
in
push
or
jl
sti
lcall
sbb
jecxz
adc
arpl
fwait
stc
fisubl
sahf
int3
jnp
in
mov
cltd
mov
ds
loope
subps
sub
lcall
icebp
iret
xor
ds
push
xlat
sub
cmpsb
test
mov
xchg
pop
mov
pop
cmp
inc
paddusw
in
out
orb
dec
iret
icebp
sti
shll
fimuls
jecxz
pop
jle
cmp
fstpl
popf
cmp
mov
xor
pop
adc
out
test
dec
push
sub
push
into
or
dec
js
mov
inc
dec
pop
push
pop
sbb
or
call
xchg
dec
mov
sbb
push
pop
dec
pushf
lret
and
inc
pop
sub
mov
out
dec
cmp
rolb
das
nop
push
js
inc
xor
dec
sbb
scas
jae
jne
jno
pushf
in
mov
push
jns
xchg
mov
sahf
pop
call
mov
dec
mov
xchg
sti
cltd
cli
mov
pop
mov
or
ja
out
rep
and
hlt
jle
mov
push
and
loope
mov
mov
lods
enter
inc
or
pusha
subb
and
xchg
push
jnp
fdivrl
add
inc
test
int
mov
mov
inc
jecxz
int
mov
and
fcomip
lea
imul
subb
inc
jge
cltd
jmp
dec
lret
push
pop
sti
mull
pop
ds
sub
xchg
pop
jbe
fstpl
jo
jge
mov
push
mov
dec
push
into
pop
mov
orl
bound
xor
test
pop
imul
xchg
mov
daa
or
imul
add
xor
enter
pusha
ret
mov
jnp
sbb
cmc
sbb
sub
inc
mov
and
mov
mov
push
pop
jmp
push
movsl
adc
outsl
lcall
popa
adc
adc
jbe
sbb
mov
jae
scas
lcall
or
mov
movsb
mov
int3
mov
xacquire
inc
sbb
mov
xchg
xchg
lods
mov
out
cltd
add
push
lods
mov
out
and
aaa
cmpsb
lock
fbld
xlat
rcr
add
pop
fcoms
xor
xor
xor
shll
and
outsl
mov
push
cs
pop
add
or
popa
rorb
push
sub
fwait
cmp
xchg
inc
scas
clc
and
flds
cs
out
push
xor
pop
xchg
scas
fldl
inc
pop
scas
inc
cmp
gs
dec
cmp
lcall
mov
xchg
sar
inc
jbe
or
lret
decb
lock
mov
push
gs
push
dec
cmp
pop
ret
jmp
ret
xor
or
dec
jno
mov
mov
cmc
sarl
mov
and
push
mov
cmp
popf
mov
pusha
mov
sub
xchg
sbb
add
je
out
xchg
cltd
mov
cmp
pop
dec
mov
and
ficomps
lahf
push
and
jo
rcr
ret
mov
shrb
dec
pop
mov
sub
push
icebp
ds
cmp
cmpsb
mov
pop
jg
adc
outsb
cmp
int
sarl
rcll
dec
rol
neg
clc
outsb
xor
icebp
enter
outsb
sarb
xchg
inc
dec
insl
icebp
subl
cltd
mov
cmp
mov
or
mov
cs
out
push
test
adc
inc
add
mov
dec
cmpsb
shll
std
cmpl
sahf
add
pop
xor
push
pusha
or
mov
in
rcrl
cmp
es
push
push
and
ret
mov
out
bound
scas
adc
lea
sub
aam
cmpsb
add
mov
mov
ja
ljmp
pop
clc
int3
mov
ss
pop
mov
or
push
clc
sub
fldt
and
push
xor
pop
imul
sbb
ficoml
push
push
jp
test
das
dec
inc
inc
xchg
out
insb
xchg
mov
in
xchg
cmpsl
push
push
std
pop
pop
cmpsb
push
pop
inc
sbb
int
data16
int3
and
push
mov
rorb
movsl
jne
xor
jle
out
sbb
call
aam
fwait
push
dec
and
pop
shl
orl
dec
js
jle
push
pop
mov
fisubrl
rcrb
sbbl
jae
ror
ja
xor
jo
cmc
movsb
mov
mov
jl
lea
dec
xlat
dec
mov
loopne
mov
dec
icebp
les
and
popa
push
scas
cmp
add
popa
cmp
cmp
mov
fnstenv
sub
jne
cli
filds
stos
and
shrl
mov
call
sub
lds
inc
pop
add
lods
lock
inc
loope
lahf
dec
repnz
pop
pop
mov
inc
jae
mov
dec
cmpsb
jmp
lcall
cmp
fistpll
daa
xchg
leave
xchg
loop
and
xlat
cld
adc
or
aad
sbb
xchg
pop
sti
or
pushl
sti
dec
jbe
arpl
cmp
lods
test
inc
lcall
lcall
add
cwtl
pop
fistpll
push
dec
xchg
jge
pop
cmp
pushf
scas
lods
mov
in
popf
adc
andb
ret
inc
and
add
and
mov
in
into
sbb
out
aam
lcall
inc
and
lds
imul
pop
in
nop
add
jge
fs
mov
popa
pop
adcl
clc
push
notl
in
outsl
add
aaa
push
lea
adc
mov
inc
gs
stc
mov
jae
mov
push
rol
and
je
jno
push
sti
dec
and
lds
cmc
sub
mov
je
scas
jecxz
push
test
test
fstps
xor
test
dec
lahf
mov
jmp
or
leave
jmp
xchg
mov
push
aaa
adc
xor
or
jmp
mov
imul
sub
hlt
rolb
xchg
push
mov
push
roll
mov
lods
int
imul
xor
int3
mov
mov
lcallw
fisttps
imul
mov
aad
lods
popf
jmp
jmp
push
push
fldenv
sbb
dec
jbe
lret
mov
decl
loop
fsub
jp
jo
sbb
mov
out
lret
adc
sbbl
enter
mov
cli
fimuls
mov
sub
sbb
add
mov
sbb
push
push
pushf
das
xchg
pop
mov
or
aas
decb
aam
adc
test
mov
out
shlb
mov
out
add
xchg
sub
adc
sub
sub
pop
repnz
ja
in
or
jle
shll
dec
rorl
adc
pop
out
out
in
ror
push
sub
push
mov
xchg
jae
push
sbb
cmp
and
shr
mov
repnz
xor
adc
es
push
jmp
push
roll
jmp
pop
cmp
pop
mov
and
lea
and
mov
inc
xchg
xadd
repnz
fucomip
ret
data16
or
ljmp
out
sub
stos
inc
jno
stc
icebp
jae
repnz
jnp
fisubs
clc
sub
and
adc
cmp
adc
jl
fwait
jo
cltd
test
mov
cmpb
cld
fwait
out
sbb
push
ret
lock
outsb
das
sbb
popf
sub
stos
pop
jb
xor
mov
das
fnsetpm(287
mov
popa
sbb
lcall
sbb
rcl
shll
cmc
sbb
adc
mov
pop
cwtl
pop
or
orb
lahf
sub
out
movl
jmp
sbb
sbb
shlb
inc
gs
cmp
gs
hlt
sbb
jo
fsubs
push
ds
jecxz
push
xchg
push
daa
insl
aad
daa
adc
sub
push
sub
xor
shlb
mov
sbb
dec
enter
adc
fs
add
insb
rorb
mov
aad
pushf
pop
scas
in
mov
inc
pop
movsl
jns
mov
call
js
xchg
cli
fists
iret
mov
xor
jae
sbb
aad
cmp
rorb
mov
pop
out
jns
push
into
inc
dec
xor
rol
stos
jmp
add
and
push
pop
sub
push
jnp
fcmovnu
jae
dec
icebp
clc
inc
and
pop
push
ljmp
arpl
shrb
mov
pop
nop
arpl
mov
pop
mov
inc
pop
jl
push
inc
ret
push
iret
push
and
js
aas
gs
push
icebp
loop
mov
mov
insl
int3
or
ret
lret
and
cmpsb
push
out
xchg
push
test
stos
mov
test
fcomps
movsl
call
pushf
cmpsb
push
mov
cmp
aam
pop
ret
ja
xchg
sbb
int
or
fidivrs
stos
stc
popf
int3
fcomip
dec
pop
call
lds
inc
sub
ljmp
aam
cmpsl
fimuls
push
int3
or
inc
stos
adc
xorl
push
cwtl
sub
mov
stos
and
cld
in
incl
xchg
subl
push
xor
inc
push
inc
out
xchg
xlat
mov
fisubrl
pop
insl
mov
sbb
stos
and
cli
mov
out
xchg
dec
das
lret
bound
or
fwait
jo
scas
in
and
pop
push
loope
sub
mov
cs
jo
push
mov
iret
out
cwtl
mov
sbb
lock
insl
aaa
popl
sarb
test
in
xlat
jno
cltd
sub
cmp
or
dec
loop
aas
xor
in
lahf
dec
adcl
vfmsubadd132ps
sbb
inc
or
push
fbstp
dec
pop
mov
hlt
mov
or
stos
in
push
fldcw
pop
jae
and
pop
cmp
sar
lahf
and
ficompl
mov
sti
pop
lcall
mov
lds
sub
shlb
jp
inc
pop
pop
xchg
xchg
in
in
xchg
lods
inc
adc
xchg
stc
sbb
mov
mov
nop
outsb
sub
xor
mov
pop
jbe
std
fldt
mov
cmc
nop
xchg
mov
inc
loop
inc
ljmp
in
loope
enter
mov
addl
stos
and
cmp
push
addr16
pmaxsw
in
daa
xorl
pop
xor
std
mov
cwtl
insb
into
xchg
jmp
stos
xchg
or
in
xor
loopne
stos
or
scas
ss
sahf
and
scas
push
push
pop
cmp
es
std
or
les
xor
insb
mov
jle
addr16
fmull
std
lahf
dec
in
enter
aaa
test
pop
or
fstpt
xchg
mov
out
loop
pop
mov
fnstcw
cwtl
or
lret
jg
inc
inc
ja
cmp
adc
js
test
or
sbb
push
ja
rcll
js
push
insb
lret
lret
cwtl
jp
xchg
sbb
inc
jae
or
cmp
pop
dec
stos
jp
sbb
aaa
iret
mov
xor
cs
sbb
bound
int
push
mov
lods
stos
and
int3
fldt
sbb
jnp
rcrb
xchg
out
pop
data16
and
lea
stc
push
stos
data16
daa
xchg
es
mov
mov
and
gs
mov
mov
mov
inc
cmp
inc
cmp
int
inc
pop
pop
jae
scas
repz
popf
lret
xor
scas
emms
dec
and
or
inc
inc
inc
incl
inc
notb
ret
fs
mov
hlt
sbb
add
out
test
adc
cmc
stc
repz
xchg
xor
sub
push
dec
lock
jae
xchg
testb
mov
mov
inc
push
movsl
je
xor
pop
ja
shll
loop
dec
ljmp
mov
jmp
sarb
gs
add
or
xchg
jb
xor
adc
cld
mov
jnp
jnp
out
fnstcw
ret
popa
jmp
mov
call
in
jne
int
cmpsb
mov
mov
pop
mov
nop
mov
adc
fldl
arpl
xor
xchg
insb
adc
mov
outsl
mov
arpl
iret
mull
push
sti
shr
sub
cmpsb
ss
xlat
divl
mov
mov
add
repz
nopl
ret
lcall
mov
outsb
cltd
test
pop
mov
rclb
fstl
lcall
jl
pop
test
test
pop
jle
imul
pop
ss
dec
and
cmc
xlat
in
or
popa
mov
lods
jno
std
sub
sub
stos
mov
pop
cmpsl
popa
sub
pop
add
outsb
out
pop
imulb
fwait
or
sbbl
xchg
std
xchg
xchg
mov
jge
gs
xchg
inc
icebp
cli
cwtl
popf
pop
stos
test
in
shrl
loop
ja
push
in
daa
mov
call
pop
rcrb
mov
jbe
test
out
mov
out
out
add
ds
scas
popa
jge
fbld
clc
xor
lret
jns
scas
pop
aaa
jle
jnp
cmpb
cli
addb
movsb
and
push
test
jmp
jns
pop
divb
repnz
arpl
mov
lods
decb
sti
addr16
lcall
add
sahf
jge
and
add
sub
cmpsb
pop
pop
dec
es
adc
negl
dec
pushf
std
mov
mov
pop
mov
inc
lds
dec
movsb
adc
adc
jns
mov
xchg
into
cmp
fdivrl
mov
fistpll
mov
lret
pop
dec
cmp
pop
push
push
repnz
lds
sti
push
hlt
dec
cli
es
push
push
jne
mov
les
jbe
xor
mov
sbb
sbb
les
lea
divb
or
in
xchg
filds
add
mov
icebp
cmp
inc
add
or
sub
ffreep
or
push
loope
addr16
popa
adc
enter
xchg
test
xchg
inc
jae
clc
add
mov
daa
leave
jle
sbb
dec
mov
lods
dec
mov
xor
xchg
movsb
negl
dec
push
fnsave
fwait
lds
mov
addb
cmp
fwait
sub
adc
jge
movsl
in
loop
movsb
and
imul
pop
xchg
cltd
xlat
and
les
fldl
pop
jae
repz
mov
mov
popa
mov
mov
dec
ffreep
mov
js
push
mov
cltd
cmp
stc
sbb
sub
push
jl
imulb
add
repz
test
in
enter
gs
push
data16
xchg
fimuls
or
push
mov
test
fdivr
push
inc
scas
mov
bound
xor
dec
repnz
and
cmp
pop
sbb
inc
popa
push
pop
cmp
imul
ret
add
lret
xor
out
ret
pop
sbb
sub
push
cmpsb
jge
jge
push
shlb
popf
int3
push
sub
add
lods
push
mov
ficoml
mov
pop
movsb
int3
rolb
inc
sbb
mov
cmpsb
pop
xchg
xchg
jne
ret
dec
jmp
sub
shll
inc
aas
mov
dec
sub
inc
cltd
aas
push
roll
jno
xor
jae
jge
or
add
xchg
push
enter
sahf
mov
shrl
adc
out
repz
pop
adc
aam
pop
xor
in
lret
or
dec
jecxz
mov
and
cmpb
loope
or
in
mov
mov
in
xor
ljmp
mov
data16
pop
sbb
push
rorb
push
mov
mov
mov
or
pop
imul
pop
scas
insl
int
es
leave
ds
subl
sahf
test
insb
push
push
xor
in
inc
mov
rorl
jo
movsl
and
pop
cmp
fisttpl
or
icebp
cmp
and
xchg
add
cld
and
ret
mov
das
std
movsl
mov
dec
mov
js
add
jg
mov
mov
icebp
shr
push
push
ret
pushf
add
sub
xor
xor
ja
mov
push
mov
cmpl
ret
clc
insl
dec
int
jmp
pusha
ret
xor
negb
aaa
lahf
es
rorl
rclb
or
das
mov
and
cmp
repz
in
pusha
pop
cli
mulb
mov
push
ret
push
jmp
inc
add
add
or
and
and
xlat
icebp
push
and
sbbl
out
imul
arpl
int
shl
dec
push
mov
sub
enter
xor
pop
push
gs
push
addr16
lods
xchg
mov
jbe
movsl
clc
or
mov
out
xchg
bound
pop
jmp
sub
fimull
or
inc
pop
into
lea
add
cltd
dec
out
push
add
mov
movsb
mov
repnz
and
xchg
inc
ret
ljmp
sbb
pop
and
aad
or
add
pop
push
lods
aaa
dec
xorl
ja
jb
add
cmp
aam
enter
ljmp
sbb
ficoms
xchg
pushf
loope
test
dec
mov
pop
lcall
push
aaa
lods
jl
rcl
jl
sahf
call
and
xor
aas
sbb
cmc
add
mov
sbb
sub
push
cltd
sub
loopne
pop
in
iret
imul
ja
inc
push
int
mov
push
cmp
jmp
in
inc
push
repnz
pusha
inc
xchg
mov
jb
pop
ret
sti
xchg
jge
mov
enter
dec
cmc
ret
inc
ficomps
movsl
xor
mov
push
xchg
adc
inc
xor
mov
lds
popf
jae
jmp
push
dec
add
push
mov
fldl
or
mov
and
sub
xor
fidivl
xor
cmp
mov
inc
xlat
cmp
fcoml
loop
in
add
xchg
dec
movsb
js
mov
lcall
xor
cmp
mov
cmp
out
jae
push
cmp
xor
aas
jne
dec
nop
and
xchg
in
mov
repz
sbb
ds
sbb
push
mov
sub
jo
shrb
jbe
pop
stos
icebp
add
adc
add
test
ds
jge
imul
movsl
cmpsl
and
cmp
clc
popa
leave
lds
fistl
pop
outsl
js
aam
pop
xchg
mov
es
mov
xchg
fucomip
es
jl
imul
inc
xchg
bound
mov
cvtpi2ps
dec
xchg
or
pushf
ret
xor
mov
jo
imulb
jne
mov
xchg
mov
in
ficompl
push
mov
repnz
and
pop
mov
call
adc
cld
xor
mov
leave
add
add
jp
sub
cwtl
das
rcll
lahf
inc
or
pop
push
inc
pop
scas
or
xor
negl
mov
xor
mov
arpl
test
sub
roll
cmp
mov
push
dec
xchg
leave
orb
sub
rcll
inc
mov
insl
aaa
mov
loopne
adc
mov
int3
mov
aas
popf
fsubr
ss
arpl
sti
and
sub
sbb
out
into
jge
xchg
push
push
xor
and
dec
cmp
cmp
outsb
xor
mov
dec
aas
sub
pop
or
cmpsl
test
stos
std
jno
mov
ret
push
push
push
cs
les
mov
punpcklwd
cli
leave
or
enter
push
fimull
adc
pop
roll
nop
lret
icebp
mov
in
out
pop
lods
dec
and
adc
pop
pushf
inc
add
mov
mov
mov
push
hlt
call
or
int3
sbb
insb
repz
mov
pop
test
push
push
fnstcw
addr16
shlb
and
ret
clc
jne
pop
arpl
call
lcall
int
daa
xor
sub
jecxz
jo
mov
mov
mov
out
pop
fldl
ret
sub
jnp
jg
out
in
adc
rcl
jmp
fidivrs
arpl
cld
enter
sti
or
jbe
mov
xor
insb
pop
mov
add
stos
xchg
aad
sub
lock
mov
sub
shrb
int3
ss
mov
sub
or
das
fucom
mov
scas
fadds
fadds
fs
xorl
cltd
lea
rorb
or
in
mov
pusha
hlt
and
int
jle
jmp
jg
xor
sub
lods
aas
add
fs
fstps
int3
cmp
adc
andl
mov
fwait
add
sbb
add
loop
aaa
rorb
inc
lods
inc
in
rorl
lods
divl
mov
imul
cmp
pop
ffreep
into
ljmp
mov
adc
ja
add
fnstsw
inc
dec
adc
cmp
cmp
jmp
inc
fimull
sub
in
xchg
and
and
sarb
add
jo
mov
lea
sti
jl
out
mov
mov
dec
in
mov
sub
out
inc
insb
mov
mov
rol
jmp
sbb
add
icebp
mov
call
sti
mov
rep
xchg
call
je
lahf
scas
sbb
mov
daa
adc
cli
std
inc
pop
cmpsb
mov
mov
inc
mov
ljmp
lds
jno
cmp
push
rcrb
scas
stos
jmp
xor
ret
dec
scas
xchg
sti
inc
je
enter
movd
dec
scas
dec
push
jb
js
pop
fistps
pop
sbb
sahf
lcall
cmpsb
inc
jecxz
xorl
mov
dec
mov
and
aam
pop
cmpb
call
mov
xchg
jns
dec
push
push
in
lahf
shlb
cwtl
jne
mov
mov
ss
adc
mov
into
dec
mov
test
jle
mov
jb
add
xor
mov
ljmp
add
jl
dec
adc
sub
cmpsl
imul
pushf
mov
dec
push
mov
cmc
or
dec
or
jnp
mov
sbb
je
mov
cld
or
fmuls
daa
pushf
sub
rorl
mov
sahf
xchg
cmp
and
cmp
aas
sti
jmp
and
out
loopne
popa
loopne
sbb
sbb
dec
aam
in
outsl
xor
pop
pop
pop
roll
sahf
in
mov
scas
xor
lcall
outsb
sub
mov
jnp
rcll
insb
out
xor
sarl
sub
hlt
int
inc
adc
mov
inc
push
aas
sti
push
jge
sbb
xor
cmpsl
jecxz
out
imul
movsb
sub
add
push
xchg
push
testl
into
jae
out
mov
scas
imul
mov
sbb
dec
in
ret
aad
inc
lea
mov
push
imul
mov
push
xor
push
mov
jge
ss
clc
mov
loopne
and
ret
pop
push
cwtl
fcomps
sub
int3
mov
pop
sahf
mov
cs
lahf
xchg
cmp
mov
mov
test
adc
sarb
hlt
fadds
xor
loope
or
jo
sbb
pop
in
cld
ret
push
dec
pop
cmp
push
and
jae
push
jo
dec
add
test
lahf
xchg
cmpb
push
sti
xchg
les
add
cmp
sub
mov
xor
adc
push
loop
fcoml
jb
mov
jo
xlat
call
ja
lods
andb
xchg
xor
daa
test
imul
les
fisubrs
pop
inc
stos
pushf
in
mov
cwtl
dec
ret
lea
arpl
mov
adc
push
nop
jnp
jmp
pop
sub
and
inc
ret
or
mov
in
jmp
ror
lahf
pusha
jge
cmp
xchg
jb
adc
lcall
or
mov
pop
add
push
xchg
shrb
push
loopne
mov
pop
mov
xchg
dec
out
push
adc
pop
push
mov
lcall
icebp
push
test
pop
add
lods
sub
push
stos
dec
sarb
cli
daa
sbb
push
lret
sub
ret
popa
hlt
jp
fnsave
push
mov
sti
repz
test
mov
sarl
jg
pop
xor
in
cmp
xchg
xchg
push
push
clc
fisttps
subb
div
jge
or
sbb
add
sahf
testb
fdivs
sbb
loopne
mov
push
std
sbb
mov
pop
add
xchg
pop
mov
lods
fsubs
into
call
mov
sarl
inc
hlt
adc
cltd
mov
jno
xchg
imul
jnp
dec
push
push
in
jbe
add
cwtl
mov
mov
popa
push
scas
xor
fildll
rcrl
fdivl
jne
inc
cltd
cmp
lcall
xchg
push
mov
jae
pop
push
xchg
cli
jb
cmp
ljmp
pop
ja
sub
popa
sbb
xchg
xor
fldcw
pop
and
adc
push
xor
idivl
xlat
xor
fwait
lcall
ret
mov
jg
dec
nop
in
inc
mov
xchg
stos
data16
xor
jns
inc
inc
or
ror
dec
mov
bound
cmp
pop
xchg
sub
inc
insb
pop
movsb
mov
lds
ja
cmp
outsl
cmpl
stos
pop
lahf
adc
ficompl
xlat
clc
sub
imul
fcompl
ret
jns
shr
jp
dec
adc
cmp
push
rcrl
loop
lea
addl
dec
fstl
das
aas
add
xor
xchg
loopne
mov
mov
mov
iret
mov
pop
add
mov
dec
dec
pop
and
jnp
push
cmp
xchg
cmp
mov
xchg
xchg
adc
cmp
rol
push
xchg
sbb
scas
in
ja
aaa
outsb
cmp
and
insb
out
leave
cli
sahf
fstl
js
insl
cmp
fsubrl
inc
add
push
aas
mov
pusha
aas
adc
and
push
lcall
jmp
mov
inc
iret
shlb
jg
ret
mov
inc
pop
sub
cltd
movsb
jmp
mov
mov
pop
gs
lds
repnz
scas
jb
dec
stos
call
addr16
mov
cmp
mov
stc
pop
mov
imul
lods
jmp
xchg
or
sahf
xor
out
push
sbb
jbe
and
xchg
mov
sbb
repz
loopne
mov
ffreep
les
lods
lcall
cmp
out
mov
aam
test
arpl
pop
stos
mov
mov
out
movsb
ja
jns
std
mov
adc
into
data16
cmp
inc
sub
or
xlat
sub
mov
xchg
movq
cwtl
or
lds
jl
dec
inc
jb
xchg
lret
mov
rep
pop
in
fistpll
int
push
rclb
dec
adc
inc
sbb
mov
loopne
lea
mov
rorb
mov
pop
pop
aas
in
xchg
loope
mov
lods
adc
js
inc
addl
sbb
lahf
push
mov
fsubl
repz
std
int3
fwait
fistl
lahf
outsl
xchg
je
or
pop
popa
ljmp
cmp
mov
dec
inc
adc
mov
leave
add
call
cmp
repz
push
xlat
sbb
sti
ficoms
cmp
adc
inc
dec
lods
jge
pop
in
sbb
xor
ret
add
clc
addr16
dec
mov
push
sbb
mov
inc
lret
orl
adc
sub
inc
das
std
outsb
int
pushf
call
lcall
sbb
adc
or
pop
push
loopne
mov
jb
hlt
mov
pop
push
push
push
gs
push
push
or
jb
mov
push
in
ret
sub
pop
add
test
xor
rcrb
add
push
aas
push
addr16
es
inc
test
jo
and
mov
fmull
mov
or
icebp
cli
js
fcoms
or
leave
xor
lret
sub
jb
mov
cmp
andb
lret
mov
sub
scas
cmp
mov
cmpl
sar
xor
inc
rcrl
movsl
jae
out
lods
das
xchg
mov
sbb
iret
stc
insb
xchg
and
fistpll
adc
mov
test
jnp
or
shlb
xchg
jg
dec
out
mov
fstp
pop
sub
lds
xor
bnd
out
pop
lret
sub
inc
or
hlt
dec
add
and
js
push
jb
icebp
fsubl
mov
out
orps
shll
and
daa
aam
mov
fbld
cmp
fstpt
stos
icebp
in
add
lret
jp
sbb
or
hlt
fisubrs
and
iret
loop
xor
loope
and
sarl
cli
jmp
dec
lods
mov
xor
sti
mov
pushf
test
cmp
add
add
mov
mov
shl
sbb
outsb
add
aad
mov
dec
adc
enter
lret
sarb
mov
inc
cmc
in
out
lret
add
arpl
mov
repnz
movl
xchg
rorl
push
xchg
sbb
lods
mov
lods
jno
jecxz
adc
push
cs
inc
xchg
push
lret
dec
xchg
mov
loopne
sar
add
jb
cmpsl
clc
xor
cs
push
inc
push
pop
fwait
xchg
cs
xchg
and
xor
fwait
jl
outsb
xchg
push
push
mov
mov
filds
jo
cmpsb
push
xor
xchg
nop
out
ds
lods
shll
mov
insb
add
insl
ja
idivb
inc
and
mov
test
cmc
mov
mov
nop
into
cmp
cmp
or
fildll
sub
xchg
insl
out
add
dec
jae
dec
adc
mov
stos
sub
js
loope
mov
cli
fucomp
jo
xchg
push
outsb
sub
jle
int
inc
fists
mov
xlat
cmp
mov
js
popf
popf
mov
mov
scas
les
jg
leave
dec
mov
lret
fnsave
pushl
jbe
cmp
cvtps2pi
push
insl
jnp
loope,pn
jl
rolb
rcll
or
cmc
dec
sub
out
mov
add
pusha
mov
or
add
xor
push
mov
out
sbb
leave
add
loope
cmp
notb
mov
mov
or
fs
and
push
aad
popa
inc
hlt
iret
dec
loope
push
test
rcrb
sub
popa
jge
add
or
imul
or
xor
pop
imul
xor
loop
mov
sbb
aad
fstpt
mull
popf
jo
arpl
dec
inc
lcall
sbb
push
pop
adc
sti
xchg
loope
mov
mull
imul
repnz
jge
push
in
fcmovbe
stos
repz
sub
xchg
xchg
loopne,pn
sbb
sub
mov
jg
sbb
jmp
cli
adc
jo
mov
sbb
popf
rcll
faddl
mov
sarb
mov
loope
cs
fldl
pop
xchg
ret
loopne
repz
xchg
cmpsl
mov
mov
iret
jno
xchg
cmp
out
movsl
bound
mov
inc
inc
enter
xor
int
shr
bound
cltd
adc
mov
ja
sbb
ficoml
pop
push
gs
lods
clc
push
ror
and
push
mov
mov
loope
negl
dec
cmp
inc
push
sbb
mov
out
jbe
or
push
xor
and
xchg
stos
cli
js
sub
xchg
int
add
in
fdivrl
outsb
les
fsts
dec
mov
cmp
mov
xlat
mov
dec
imul
mov
jle
lahf
fbld
ret
sbb
stc
push
sbb
decl
mov
pop
and
lret
dec
ja
jg
add
fcoms
sbb
jb
add
ljmp
mov
jmp
enter
jg
inc
add
sbb
bnd
in
lcall
iret
cmp
ja
add
cmp
sub
mov
and
adc
add
xchg
lds
loope
or
jo
fwait
xchg
mov
nop
icebp
popl
insb
insb
incb
mov
mov
cmp
xchg
fdivl
arpl
mov
xchg
inc
sub
pop
push
test
adc
pop
ja
cwtl
in
fildl
or
jle
sbb
scas
mov
testl
ss
popf
or
aam
cmp
pushf
arpl
push
push
sbb
lret
dec
xchg
sub
in
mov
in
lods
sbb
bnd
mov
pop
imul
push
sub
jno
inc
add
cmpsb
jl
mov
pop
cwtl
stc
adc
inc
aaa
or
test
push
xchg
jne
cmp
pop
jmp
jl
movsl
add
fdecstp
mov
sbb
mov
or
rolb
dec
cmc
mov
lret
xchg
pop
adc
shlb
adc
ret
stc
aad
mov
es
pop
push
test
push
pusha
mov
dec
mov
cmp
std
shll
xrstors
test
mov
pop
xor
push
sbb
add
sub
in
daa
dec
inc
test
cmpsl
lock
lahf
fxch
pop
xchg
xlat
insl
popf
push
jle
insl
test
mov
cmp
ljmp
in
je
decb
sbb
lods
in
iret
push
and
jl
in
pop
std
fwait
inc
lock
sbb
mov
ret
stos
pop
imul
and
add
fldl
xchg
xchg
fldt
jne
fsubrl
adc
lods
nop
icebp
pushf
or
cmpsb
sub
lret
and
repz
push
mov
popf
inc
fldcw
dec
mov
xor
test
out
cld
mov
push
mov
out
test
cmp
mov
ret
cmp
das
cmpsl
sub
out
xchg
mov
and
std
sbb
ja
mov
popa
fxch
mov
or
test
push
pop
negb
sub
aaa
sar
xchg
repz
popl
xor
test
xor
leave
sbb
mov
movsl
jecxz
fsts
add
xchg
aas
xor
push
jno
cld
cli
or
call
out
pop
add
add
popa
mov
mov
psubsb
inc
add
iret
mov
lods
out
xor
or
stos
cmp
add
pop
rcll
mov
push
mov
out
lahf
leave
xor
repnz
pop
stc
subl
test
push
jmp
cmc
mov
inc
cmp
popf
jecxz
jns
mov
add
inc
jbe
fwait
outsl
sbb
push
sbb
jb
cmp
test
daa
inc
sbb
push
mov
mov
mov
xchg
cltd
inc
imul
rclb
xchg
push
mov
mov
push
pop
rcll
pop
dec
push
arpl
arpl
mov
cmp
das
pop
scas
xchg
and
fadd
int3
xor
or
out
xor
sahf
jnp
jns
mov
stos
sub
inc
inc
inc
pop
push
mov
adc
push
inc
subl
cmpb
iret
shrl
jg
jecxz
inc
lock
inc
push
pop
dec
test
fwait
arpl
pop
fadds
nop
mov
xor
mov
rcr
lret
out
cld
pop
xchg
stc
mov
loop
cmp
outsb
sbb
lcall
cmpsb
jne
dec
and
jnp
sahf
bound
push
jmp
mov
mov
adc
mov
xor
test
imul
hlt
pusha
into
pop
sahf
sub
lods
fcompl
xchg
pop
xchg
xor
repnz
xchg
sbb
dec
insl
mov
mov
fsubrs
jg
and
ss
xor
add
in
push
aas
cmc
add
dec
ffree
aaa
and
loop
andb
inc
nop
aam
add
pop
ret
pop
cmp
xor
test
hlt
pop
dec
and
fimull
ret
popf
mov
lods
ljmp
daa
addr16
testl
test
mov
aam
out
out
repnz
lods
cs
xor
jmp
jne
pop
xor
xor
lcall
hlt
repz
cmp
lods
jnp
inc
pop
rcrb
mov
stos
pop
outsb
in
sub
adc
in
sbb
mov
ss
movsb
mov
and
xchg
xor
stos
dec
gs
gs
pop
gs
das
and
cmp
cmp
in
stos
add
out
xchg
cmp
xorb
mov
push
mov
iret
inc
cmp
stos
pop
jno
aas
into
mov
hlt
test
imul
call
movb
mov
add
fisubrs
arpl
enter
add
adc
jg
pop
insb
fsubrl
push
and
cmp
xchg
mov
or
pop
or
into
jne
mov
pop
lahf
negb
sbb
mov
daa
test
cmc
mov
cmc
out
les
aaa
xlat
push
lcall
in
xchg
sar
jge
test
xchg
pop
bound
add
mov
dec
lret
pandn
cmc
adc
cwtl
negl
shlb
jle
xor
sbb
scas
gs
sahf
dec
add
outsl
lds
xadd
ljmp
inc
and
xor
fisubs
inc
scas
xor
movsb
xchg
inc
enter
xchg
jns
xchg
jge
outsl
cmp
mov
add
inc
shl
imul
sbb
out
pusha
adc
push
ret
pop
nop
push
xchg
ja
inc
je
push
sbb
ljmp
pop
fcomps
mov
fwait
lods
mov
subb
outsb
in
xchg
push
scas
inc
cli
dec
dec
dec
pop
std
lock
inc
inc
xchg
adc
push
mov
repnz
mov
lock
in
mov
pop
cmpsl
cld
sbb
loope
fnstenv
mov
out
adc
lahf
mov
sbbl
adc
add
test
cmp
xchg
jns
or
jns
inc
mov
cwtl
adc
cmp
jnp
sub
out
or
int
xchg
or
cmp
and
hlt
mov
ror
pushf
mov
dec
in
ret
xchg
pop
fwait
aam
fidivs
jno
jp
mov
push
xchg
das
test
fcomps
sub
push
sub
push
aad
outsb
sbb
movsl
mov
out
jp
jnp
adc
pop
inc
push
flds
out
dec
xor
add
js
pop
fadds
inc
fisttps
addl
bound
mov
cmpb
and
cld
dec
dec
jb
pop
loop
test
sbb
daa
scas
decb
adc
pop
push
sub
sbb
jns
outsb
mov
adc
mov
mov
sub
or
fdivr
jl
jmp
outsl
sub
push
xchg
lods
pop
iret
insl
hlt
add
xor
cmp
inc
jb
les
movsb
jle
fdivs
or
adc
lret
mov
je
push
xor
lahf
pop
icebp
cltd
lods
aaa
mov
stos
add
push
inc
fldl
jle
push
negl
shl
cli
jo
inc
xchg
mov
stc
and
inc
xor
dec
iret
sub
add
mov
inc
loopne
and
mov
movsl
pop
int
lods
or
call
add
push
jnp
jmp
gs
or
jnp
xchg
inc
mov
adc
sarb
shrb
mov
push
lods
jo
loopne
sarb
xor
or
push
mov
out
test
ret
cmc
mov
xchg
jp
bound
loopne
insl
cld
jg
pop
aas
loope
jp
xchg
jno
mov
cmp
sbb
ss
adc
pop
push
mov
cwtl
fcomps
mov
push
imul
js
cmpsl
sub
aad
fmuls
sub
mov
xlat
mov
push
lods
leave
adc
div
sti
add
push
and
xor
cpuid
ja
cmp
mov
and
and
mov
push
test
pop
push
xor
sbb
jle
in
cmpxchg
stc
sbb
push
imul
clc
arpl
inc
fnstcw
add
xchg
lret
into
xchg
mov
jl
and
inc
addr16
pusha
fdivl
hlt
scas
push
pushf
sbb
lds
or
add
pushl
jg
insl
outsb
or
mov
pop
call
fisttpll
aaa
jne
shll
cwtl
fdivl
and
adc
sub
imul
push
dec
cmp
xchg
lods
dec
cmc
mov
nop
outsb
add
outsl
mov
xor
leave
mov
or
lcall
bound
sub
divl
and
push
insb
mov
lret
adcb
lds
hlt
jg
rcrl
xor
xchg
cmpsl
adc
hlt
mov
les
adcb
lock
cmp
loope
sbb
daa
fwait
shrl
mov
in
pop
pop
xor
mov
inc
sub
jp
decb
sub
xor
rorl
aaa
lahf
out
mov
sub
inc
dec
and
pop
xchg
cmp
xor
xor
adc
dec
inc
lcall
leave
sbb
jle
xor
out
push
daa
mov
movsb
xchg
movsl
jb
cltd
out
sahf
and
lods
fiaddl
lret
imul
inc
and
std
push
push
ret
cld
pushf
loope
mov
and
repz
mov
or
sti
scas
lret
aas
mov
adc
dec
out
mov
daa
xor
iret
rol
cmp
mov
dec
sub
pop
imull
shll
xorl
neg
push
mov
push
outsb
mov
cmp
in
jp
mov
insl
loop
stos
cs
dec
jnp
sbb
pop
inc
sbb
rol
mov
mov
rcl
push
adc
jmp
fiadds
mov
add
imul
adc
div
fidivrl
inc
insb
jecxz
xor
flds
pop
aad
add
fcoms
rcrl
push
xchg
inc
xor
sbb
adc
clc
movsl
and
shr
push
je
push
inc
call
jge
insb
mov
sbbb
ret
roll
xor
push
push
fstpt
test
sub
jl
push
push
loop,pt
out
out
jno
or
addb
and
outsb
pusha
sbb
mov
cltd
outsl
xchg
push
fs
inc
ds
push
add
jnp
push
stc
add
cmpsb
add
in
bound
dec
or
pop
cld
out
xchg
mov
jbe
mov
jecxz
movsb
sbb
movsb
jbe
nop
adc
aam
mov
cmp
and
mov
rcrb
stos
pop
or
push
or
push
add
ret
sahf
inc
int3
dec
into
lods
mov
jns
or
imul
mov
xor
leave
leave
scas
mov
xor
aam
pop
xchg
mov
aas
inc
sub
jp
xchg
cwtl
pop
popf
je
push
push
inc
movsl
in
mov
pusha
in
jmp
push
shll
mov
jmp
sub
sub
jmp
fcomps
mov
outsb
xor
ret
push
mov
dec
in
jp
inc
sbb
std
int
ret
mov
inc
nop
negb
xor
jle
sub
xor
xchg
dec
xor
bound
pop
lock
jge
sub
sarb
mov
and
inc
inc
sub
and
nop
rorb
and
mov
dec
mov
pop
jbe
mov
insl
shlb
out
xchg
cltd
movsb
subb
cmc
cli
ss
and
jbe
sub
inc
cmp
add
aas
mov
pop
das
or
push
outsb
and
inc
adc
jp
sbb
jnp
cmp
dec
outsl
xlat
repnz
sub
imul
fucompp
sbb
fcomps
pop
nop
sub
cmp
dec
clc
out
mov
fnstsw
xchg
sbb
adc
rcl
pop
nop
rcll
ret
sub
mov
mov
loopne
dec
cmp
mov
pusha
std
je
push
test
cmp
jl
xchg
hlt
test
push
out
dec
ljmp
cmpsb
and
xor
mov
fisubl
xchg
sahf
sub
frstor
pop
jecxz
or
jnp
repnz
addr16
mov
xchg
ds
cmpsl
cwtl
mov
push
push
bound
lret
cli
rolb
sbb
rorb
cmc
mov
es
add
fldcw
stos
push
push
sub
in
pop
push
in
mov
xor
lock
insl
testl
cwtl
pop
dec
push
mov
addl
aam
icebp
xor
cli
daa
stc
jp
cmp
stos
into
cmp
scas
shll
jae
jo
and
fistpl
movsb
mov
jns
xchg
jle
jg
jbe
addr16
dec
lret
sub
sbb
sub
and
imul
mov
mov
out
and
inc
dec
addr16
mov
lcall
sbb
cmp
stc
push
add
jnp
xor
les
mov
mov
mov
jne
in
xchg
stc
mov
int3
xchg
add
test
sbb
loopne
pop
aad
push
add
sbb
pop
mov
inc
xchg
sbbb
add
xor
pushf
andb
sbb
fdiv
fstps
cwtl
ja
lods
test
push
inc
in
xchg
mov
cltd
imul
orl
dec
cmp
js
andb
mov
push
pop
stos
xchg
lret
daa
ret
into
movsb
jecxz
add
shlb
lock
ret
jecxz
dec
outsb
ss
loopne
lods
mov
cmc
es
mov
dec
stos
jno
push
test
push
jb
inc
dec
jne
mov
scas
mov
add
mov
push
sahf
negl
dec
pop
lahf
test
cmp
sbb
in
das
jno
sub
sub
lock
xchg
push
popf
cmpsl
jo
divb
xchg
js
mov
imul
dec
adc
jp
call
jae
cmp
jl
sbb
add
push
mov
mov
jle
xor
sbb
jnp
sti
cmp
dec
cmp
andb
dec
and
sahf
mov
pop
out
sub
stos
shlb
test
fsubl
cmp
cmp
jo
xor
inc
iret
ret
lret
mov
lods
mov
dec
and
xchg
push
or
shl
dec
push
inc
aaa
test
test
jnp
lahf
hlt
sub
pop
lcall
js
inc
and
fmuls
pop
push
push
stc
cmp
pop
push
mov
lret
mov
sub
jb
roll
fcmovu
fisubrs
jbe
inc
sbb
sbbb
orl
xor
mov
jns
inc
and
jecxz
movups
movsb
subl
insl
out
sarb
rorl
test
mov
mov
stc
pop
xor
add
mov
push
adc
or
mov
pusha
pop
jo
sbb
xchg
push
cmp
lea
adc
bound
mov
cs
push
and
test
int
loope
lock
nop
inc
pop
punpckldq
or
push
out
mov
cmp
mov
or
cmp
lcall
cmp
popf
cmp
repz
mov
xchg
sbb
cli
out
out
jg
cmc
ret
fcmovnbe
push
push
jo
inc
gs
xlat
testb
or
cli
cltd
mov
aas
ds
mov
cltd
outsb
hlt
jae
dec
sbb
add
push
inc
and
add
arpl
ja
push
leave
fldl
rolb
sbb
rorl
pop
fdivp
jae
sti
or
ja
outsl
andl
xor
sub
push
leave
sbb
nop
mov
out
rcrl
out
adc
loop
lret
lods
mov
jns
cmc
cmp
add
xchg
int
dec
xchg
jnp
mov
lret
into
push
push
imul
out
icebp
lods
dec
push
popf
fsubrs
daa
mov
psubusw
sbb
btc
mov
jno
stc
call
decb
pop
clc
aam
icebp
inc
sub
sahf
dec
jecxz
add
pop
fbstp
out
mov
movsb
fsub
jmp
ljmp
cwtl
mov
pop
ffree
arpl
add
mov
add
cmp
cwtl
cmpl
js
shl
inc
mov
clc
sbb
jge
cltd
xchg
addl
cmp
add
ret
ja
cltd
xor
and
dec
scas
add
lcall
ficompl
mov
mov
imul
daa
sbb
inc
in
lock
push
jno
xor
jbe
sub
std
test
jnp
vmovdqa
mov
call
and
and
push
shl
cmp
shll
addr16
lods
ror
mov
xchg
hlt
iret
lret
xchg
out
inc
out
idivb
fstps
sahf
xchg
and
adc
sarb
dec
sarb
aad
hlt
or
je
mov
pop
mov
inc
and
jae
xor
add
iret
pusha
test
jg
jg
mov
lcall
lahf
push
out
cltd
xchg
in
ja
and
push
or
xorl
cwtl
dec
inc
es
lret
pop
jo
lcall
cmpsb
fidivrl
dec
aad
sbb
mov
jne
in
xchg
mov
and
je
divb
adcl
and
mov
inc
test
cwtl
pop
jmp
pop
pusha
mov
dec
stc
aas
clc
mov
cmpsl
movsl
out
shll
and
mov
mov
mov
jecxz
jecxz
fwait
movsb
lea
xchg
vminsd
imul
push
repnz
loop
sbb
ffree
cld
xorb
aas
xchg
ljmp
sub
lds
cmp
or
repnz
js
pop
sbb
jo
stc
pusha
mov
in
aaa
loope
jno
cwtl
sahf
lcall
sub
xchg
inc
sbb
ljmp
sbb
jmp
aaa
arpl
in
mov
push
subb
push
out
jge
xchg
pop
mov
xor
mov
lock
stos
dec
pop
call
cmp
dec
and
int3
sub
push
dec
sarl
jo
popa
sbb
pop
pop
lods
add
repz
add
aas
out
enter
loopne
hlt
addl
mov
xchg
jo
push
mov
pop
xor
int
fwait
repnz
xor
cmpl
add
push
lock
je
adc
stos
cmpsb
outsb
mov
lret
pop
pop
cmpsl
call
dec
into
out
push
or
lds
in
ja
cld
mov
das
push
loopne
jno
mov
pop
jbe
fxtract
inc
mov
jl
jp
cmp
pop
push
pop
mov
add
sub
ds
roll
xor
sti
jbe
mull
xor
jg
push
jge
lods
adc
test
cmp
dec
jnp
ljmp
push
push
mov
mov
repnz
mov
sbb
fidivrs
call
sbb
jo
mov
test
push
pop
lea
cmp
or
xchg
sbb
adc
lock
fisubrl
pop
xchg
cmp
mov
sahf
add
ja
or
pop
and
insb
push
out
dec
popf
adc
xor
add
add
cltd
or
into
xor
rcrb
xchg
mov
dec
int
outsb
in
add
jnp
daa
mov
mov
pop
bound
das
adc
and
sbb
push
and
and
xor
adc
loopne
stc
pop
add
mov
push
jnp
and
mov
xlat
fmuls
outsl
mov
frndint
cli
sbbb
mov
lock
and
push
pop
mov
push
sbb
mov
dec
cmp
dec
test
inc
cmpsl
js
adc
cmp
push
push
test
lock
push
mov
sbb
out
cwtl
movsb
ljmp
cmpsb
ss
add
shll
cmp
add
cmp
rorl
bnd
icebp
flds
jnp
lret
jl
bound
jp
testb
cmp
mov
add
or
into
test
pop
pop
dec
jecxz
pop
dec
test
push
pop
jl
rorb
aas
jmp
push
mov
push
dec
out
insb
imul
or
ss
inc
mov
pop
test
pushf
fidivrl
leave
jae
jbe
sub
xchg
sti
pop
adc
and
cmp
rcll
cld
outsb
mov
jge
fstpt
mov
arpl
test
mov
inc
stc
mov
js
adc
das
fidivl
jb
or
add
and
and
sarl
jb
fsub
pop
sub
jo
mov
and
lea
in
sbb
pop
jae
test
mov
mov
dec
adc
test
push
cmpsl
dec
movsl
popa
repz
cld
orb
popf
xor
adc
sbb
subl
insl
and
mov
fsubrl
into
mov
in
mov
inc
lds
jo
mov
lcall
cmc
xchg
xor
subl
jmp
xchg
mov
ret
inc
aam
xor
in
pop
loope
push
icebp
fs
pop
or
mov
cmc
lods
arpl
mov
icebp
dec
fwait
cmp
push
test
nop
ss
jae
mov
cs
adc
shl
cmp
xor
and
outsl
adc
mov
jmp
arpl
call
sub
fidivl
sbb
js
out
sub
das
sbb
rolb
xchg
mov
stos
and
lds
dec
pop
lea
add
dec
inc
cltd
cmp
push
jp
cmp
dec
and
inc
fldenv
or
rorb
inc
sub
sub
imul
push
push
daa
xchg
push
sarl
dec
mov
push
aaa
add
jmp
fisubrs
dec
sbb
jns
nop
inc
push
sarl
dec
ret
sbbb
and
ret
add
add
dec
in
pop
cmp
out
pop
ret
sbb
jl
cmpsl
jb
sub
outsl
sbb
xor
cmpb
data16
mov
out
cmpsl
call
mov
call
xor
xchg
xchg
repnz
imul
inc
push
and
aaa
inc
mov
cli
sub
push
and
mov
fmulp
vmovlps
jmp
mov
sbb
adc
cwtl
sar
ret
ja
hlt
or
sub
enter
sub
inc
aad
gs
inc
inc
icebp
add
rorb
mov
mov
enter
test
call
dec
xor
adc
inc
xchg
sbb
jge
adc
xchg
add
call
mov
jbe
inc
lds
dec
push
outsb
dec
cmp
js
mov
out
mov
jecxz
dec
pop
aas
lods
sbb
push
icebp
pop
jb
pop
jecxz
pop
inc
inc
fidivrl
jno
imul
pop
jp
fcmovbe
or
mov
add
cmpsl
int
int
xrelease
imull
mov
mov
out
mov
cmpsl
nop
push
push
push
das
add
arpl
jl
sub
lcall
mov
cmpsl
sbb
clc
jmp
push
adc
out
cli
enter
pop
mov
int
mov
rcrb
push
mov
add
fstps
out
mov
lcall
push
and
lock
xor
push
mov
or
jmp
fcompl
test
aaa
pushf
sub
shl
inc
lds
or
pusha
xor
imul
popf
mov
mov
jg
subl
movsb
adcl
add
ss
cs
inc
insb
movsl
std
stos
xchg
in
fmulp
daa
mov
dec
call
ret
lahf
sub
mov
mov
and
ss
outsl
testb
push
scas
xlat
cmp
stc
fbld
test
xor
sbb
test
dec
cltd
ret
out
xor
cmovs
push
and
mov
ret
inc
nop
test
xchg
call
xchg
adc
mov
cmp
push
pop
inc
in
cmp
sahf
and
stos
lahf
fisttps
xchg
nop
ds
xor
or
adc
mov
pushf
movsb
ja
jnp
test
jl
data16
aas
ret
or
cmp
into
cwtl
xor
loopne
and
sub
int
mov
andl
or
mov
jecxz
cmpsb
push
outsb
aad
xor
mov
mov
push
add
outsb
add
sub
adc
cmp
sbb
sub
cmc
and
popa
inc
cmp
inc
jb
dec
mov
mov
insb
jle
rorl
push
mov
cmp
div
fisubrl
fcomi
idivl
jl
push
call
pop
add
daa
fisubs
cli
inc
lock
mov
dec
lds
in
lods
or
jo
gs
lcall
fwait
lods
mov
mov
arpl
enter
push
xor
or
dec
jp
sbb
std
std
sbb
jb
shlb
sti
add
mov
mov
in
add
push
add
lret
mov
cmp
das
jle
imul
inc
mov
pop
iret
add
xchg
insb
jo
xor
dec
push
test
mov
aas
jmp
jnp
movsb
insl
insl
pop
inc
out
aas
adc
faddl
add
push
cltd
roll
in
or
stos
sub
xchg
inc
inc
pop
fbstp
sahf
in
shl
fmul
mov
fwait
setge
mov
mov
notl
jmp
xor
sub
adc
seto
pop
sti
cli
jne
sti
push
lcall
into
push
push
jecxz
mov
std
insl
jle
pop
xlat
xchg
dec
fnstenv
pop
mov
in
push
cmpsb
cmp
sbb
ss
rcll
test
xchg
in
push
jge
sbb
mov
mov
adc
jno
enter
loope
int3
gs
inc
imul
xchg
dec
fildl
adcb
mov
or
dec
mov
rcrb
stos
xor
push
mov
int3
mov
jle
stos
mov
lds
xor
add
xlat
inc
loopne
mov
or
jl
clc
push
mov
cmovl
ja
or
pop
js
shll
enter
add
cld
dec
dec
lcall
int3
jno
xchg
lcall
sbb
frstor
stos
fildl
ljmp
in
ret
xor
adc
pop
xlat
pop
stos
inc
lds
pop
pusha
leave
mov
fidivrl
rol
mov
jle
shlb
lahf
jp
lcall
or
int3
popf
roll
mov
add
jo
ljmp
dec
push
xor
insl
and
addr16
leave
xor
lds
aam
xchg
fld1
and
inc
xchg
lea
sbb
ss
or
jne
dec
cmp
aaa
aad
mov
mov
sub
fdivrl
xchg
jnp
addl
jae
xchg
jmp
xor
test
imul
stos
loop
sbb
and
shll
pop
or
sti
aaa
fcom
lods
stos
dec
shll
rcpps
sbb
xor
repz
out
jecxz
pop
arpl
icebp
mov
xchg
push
push
mov
jb
add
pop
outsb
fistps
adc
dec
inc
or
pop
fsubrs
pop
add
lea
and
orb
dec
sbb
and
adc
or
test
sbb
inc
cmovge
imul
sub
mov
daa
cwtl
test
mov
incb
xchg
rolb
inc
jno
cmp
sti
adc
inc
mov
stos
pop
dec
std
mov
or
xor
imul
xchg
lret
dec
fbstp
addr16
jle
int3
mov
popf
cld
iret
sarb
loop
test
cmpsl
or
push
xor
push
pop
push
int3
inc
cmp
mov
jp
and
pop
daa
repnz
dec
stc
lods
sub
mov
mov
addr16
cmpsl
int3
jmp
in
and
sub
je
jecxz
lods
mov
insl
sbb
mov
cmp
in
rcll
aas
sub
inc
outsl
xor
je
repz
fdivrl
dec
pop
mov
cmp
sbb
inc
pop
inc
add
and
pushf
arpl
sub
pop
xchg
jnp
jmp
adc
xor
lcall
mov
jmp
repz
mov
mov
push
les
dec
lret
mov
and
testb
lods
xor
orl
xchg
mov
fnstcw
mov
insl
outsb
aas
pop
lods
sub
jp
cmp
xor
addr16
lret
imull
inc
jmp
pushf
out
jns
out
fnstenv
mov
xchg
mov
outsb
xchg
jns
dec
mov
shll
fwait
mov
test
jg
mov
pusha
sbb
xchg
push
dec
mov
sbb
ret
add
sub
in
jb
adc
push
sub
out
mov
iret
cs
cmp
in
out
lea
sti
sub
dec
fldenv
push
stos
push
rol
lds
cmp
mov
cmp
mov
cmp
dec
shl
ret
arpl
iret
lds
jg
jns
fldcw
cli
dec
jne
lcall
jbe
in
pushf
dec
in
rol
not
roll
xchg
jno
jo
mov
xor
pop
xchg
xchg
jne
outsl
rcrb
push
jae
fdiv
imul
sbb
ss
das
jmp
stos
repz
je
fmuls
push
inc
jns
out
inc
mov
push
and
jp
fsubs
iret
adc
fwait
sahf
pushf
add
dec
aad
sbb
iret
adc
out
sahf
idivb
in
lret
jo
dec
add
leave
or
pushf
jp
testb
xor
mov
popf
adc
mulb
add
mov
jno
or
mov
or
cmp
cmp
sub
add
jno
mov
inc
mov
subl
es
adc
xor
rcrl
jb
orb
mov
jg
cmp
popa
cmp
sub
cwtl
popf
push
pusha
mov
add
enter
inc
cmp
roll
or
inc
test
inc
shrb
imul
push
lcall
mov
jle
out
or
jmp
xchg
cmpsb
push
cli
loope
scas
jno
sbb
fadds
pop
cmp
out
test
dec
lret
adc
aas
mov
int
int3
mov
jae
mov
aam
mov
xchg
pop
dec
fwait
repz
aas
mov
movsb
jne
pop
les
mov
int
mov
imul
mov
push
jns
inc
ret
ja
imul
add
push
adc
cmp
mov
and
vmulps
jnp
jnp
push
pusha
stc
stos
fs
jbe
push
shrl
dec
rcll
clc
enter
xlat
fisubrs
fstl
pop
gs
inc
cmpsb
jmp
stos
fisttpll
daa
data16
mov
lret
aas
or
mov
testb
int3
mov
ret
bound
les
fnsave
and
rcll
lods
dec
fcoms
mov
sbb
xor
testl
add
or
rol
pop
sahf
sub
arpl
popf
pop
rolb
leave
xchg
adc
sub
dec
out
data16
iret
loop
push
into
pop
rcr
cmp
std
pop
xor
inc
mov
cmpsl
sub
xchg
into
movsl
outsb
cmp
repnz
adc
lret
gs
push
cmp
inc
nop
mov
dec
fisubrs
and
outsl
icebp
sbb
and
lcall
scas
leave
lds
bswap
lcall
xor
jnp
mov
mov
lret
dec
push
jg
fistpl
and
sub
xchg
pop
sti
sub
mov
sbb
fsts
fsts
jno
or
inc
xor
mov
sbb
int3
scas
push
xlat
nop
mulb
cmpsb
cwtl
test
jns
pop
call
and
movsb
cmpsb
sbb
pop
aaa
lahf
add
test
loopne
enter
xchg
insb
dec
mov
mov
movsl
push
push
cli
inc
int
aad
pop
outsb
out
or
sbb
sub
push
idivl
pop
or
divl
and
adc
aad
negl
push
dec
jae
push
inc
jbe
xor
sbb
out
mov
pop
fwait
lds
sysenter
xchg
mov
aad
pop
mov
out
mov
jnp
mov
int3
mov
vdivps
pop
jg
xchg
cmp
insb
insl
jp
mov
sub
push
and
arpl
inc
int
mov
mov
test
fisubs
xor
out
and
add
mov
ret
test
scas
dec
inc
or
cmp
setno
mov
sbb
into
push
mov
xchg
cmpsb
mov
cmp
adc
xlat
lock
out
int3
test
xchg
das
cltd
push
and
in
scas
and
sub
imul
xchg
pop
cmp
jae
and
jnp
ret
ja
stos
je
mov
hlt
push
or
jb
aad
jmp
imul
pop
or
dec
popf
xchg
adc
or
sbbl
in
jecxz
jg
lods
mov
mov
in
lea
stos
push
repnz
push
jp
pop
data16
xor
jge
jns
ret
jns
ret
add
dec
xchg
push
mov
ret
iret
sbb
cmp
adc
mov
insl
adc
xchg
jmp
outsl
add
push
dec
mov
push
xchg
orl
fcomps
mov
mov
repnz
dec
and
sub
mov
fldt
icebp
xchg
stos
add
test
popa
xor
mov
xchg
shlb
fisttpl
or
mov
fwait
cmc
jl
and
jns
negb
jl
lret
adc
scas
xchg
mov
mov
xchg
ret
xchg
mov
sub
gs
jo
mov
dec
push
push
fstpt
add
jmp
arpl
arpl
dec
loopne
add
mov
add
int3
addr16
outsl
mov
insl
push
cli
push
js
scas
push
push
or
das
lcall
pushf
ds
aas
cmp
jl
out
popa
push
stc
xchg
sti
out
push
jae
add
lods
fucomip
pop
sbb
mov
repz
adc
sbb
mov
pushf
mov
cli
ret
cmp
push
mov
icebp
mov
cmc
pop
and
and
in
xor
loope
in
push
push
jbe
xchg
flds
sbb
push
mov
adc
imul
stos
daa
mov
mov
jns
aam
lcall
nop
fs
rcll
pop
fwait
mov
lret
mov
test
lahf
xchg
aas
test
call
ficoml
lcall
mov
cmp
and
cmp
xchg
jo
not
outsb
inc
scas
cltd
adc
scas
and
sub
pushf
popa
mov
pop
push
mov
xchg
jbe
pusha
rcrb
push
and
inc
xchg
xchg
jnp
mov
dec
popa
mov
push
push
jae
js
ljmp
xchg
fidivs
inc
fcmovnb
sbb
and
jo
subb
xor
in
out
mov
test
loope
pop
and
outsb
pop
push
xor
jns
mov
cmp
xor
and
jae
ret
sti
sbb
fdivl
test
xchg
push
cwtl
mov
jle
xor
xlat
xchg
std
inc
int
pushf
xchg
outsb
cmp
mov
push
bound
push
or
jae
jp
idiv
inc
in
aaa
iret
mov
cmp
fadds
mov
test
push
sahf
insl
dec
mov
inc
shrb
into
dec
xchg
xchg
push
popa
or
xor
enter
jl
jbe
lret
arpl
add
cld
xorl
outsl
and
and
fwait
sbb
fcomi
pop
rclb
fiaddl
popl
cs
icebp
cmp
rcl
jne
popf
jmp
or
cld
jecxz
leave
inc
shll
or
out
jmp
aaa
adc
imul
push
nop
mov
jb
cmp
into
pop
xor
ljmp
jecxz
mov
loope
out
fwait
ds
movsl
push
aam
mov
adc
xchg
cld
icebp
leave
dec
out
sbb
push
stc
sbb
sbb
adc
out
mov
sahf
pop
pop
lods
pop
sub
mov
addr16
cs
mov
dec
inc
loopne
lods
test
pop
rclb
test
pushf
dec
sub
xchg
and
enter
push
or
xor
cmp
inc
fcmovb
ljmp
jo
fcomi
xchg
mov
fwait
sbb
push
pop
loop
testl
repnz
out
les
rolb
or
popf
popf
cmc
push
mov
jnp
imul
lds
mov
mov
loope
inc
gs
dec
and
lods
fs
in
mov
add
or
int
ret
jae
out
repnz
push
sub
lock
inc
repnz
je
cmp
cltd
bound
or
xchg
or
or
xor
mov
push
jmp
jnp
hlt
jl
jno
inc
xchg
aam
jp,pt
leave
mov
lods
cltd
mov
adc
xor
movsb
pop
lcall
dec
jnp
sahf
sbb
imul
jp
rolb
or
mov
sub
sbb
sub
sub
data16
loop
inc
jge
lahf
lret
dec
aas
push
insb
mov
sbb
cmp
nop
jle
xor
push
loope
jns
les
xchg
bound
fwait
sbb
and
or
mov
aam
push
lahf
imul
pop
xchg
popw
sbb
leave
mov
dec
mov
addr16
adc
sub
rol
rorl
add
in
push
push
mov
mov
xchg
lea
inc
jo
mov
inc
notb
push
ret
sub
jl
jmp
push
mov
fldl
pop
neg
es
mov
iret
fcomps
xor
dec
nop
mov
faddl
out
rcrb
cmovge
aad
lock
es
cld
sub
stos
sahf
jne
adc
mov
inc
xchg
xor
add
pop
jmp
adc
test
ss
inc
xor
fwait
lret
outsl
iret
sub
mov
xchg
mov
leave
imul
enter
test
add
and
imul
out
add
ss
in
jnp
pop
jbe
in
lds
fdivl
inc
stos
sahf
in
sub
dec
or
cli
lds
insb
inc
mov
lahf
cmp
mov
daa
xor
mov
daa
lret
out
sahf
shll
mov
fcompl
cmp
fldenv
clc
and
mov
pop
stc
cmp
dec
dec
mov
mov
bound
mov
mov
imul
cmp
hlt
inc
push
subl
mov
loope
icebp
std
mov
ja
fwait
push
add
fisubrl
nop
icebp
cld
ffreep
jno
jae
test
loopne
add
adc
pop
jle
fs
aad
adc
cmc
sub
sub
sub
dec
mov
loope
cmp
sub
pop
fstl
push
mov
xor
adc
lcall
jle
clc
cwtl
adc
sbb
iret
mov
loope
out
mov
pusha
push
push
sub
and
mov
negb
rcr
push
xchg
mov
lods
lea
rcll
sbb
leave
push
pop
mov
test
cld
sbb
sahf
pop
mov
mov
and
and
lods
adc
jl
ja
ror
fdiv
iret
pop
sub
xchg
cwtl
push
xchg
cld
test
roll
js
lea
je
add
dec
pusha
jb
stos
mov
jo
adc
repz
fcomip
movsl
insb
mov
xor
jle
push
and
or
push
pop
test
scas
pop
adc
bound
in
loop
sub
scas
jge
lea
mov
or
into
xor
call
js
lods
aas
ret
jbe
test
dec
inc
cmp
outsb
mov
xchg
dec
add
push
pop
aam
sub
popf
rolb
lret
add
xlat
push
push
ficompl
mov
pop
movsb
inc
or
mov
bound
test
jmp
jg
lcall
xchg
lret
test
mov
sub
andl
or
inc
dec
out
fidivrs
fisubl
shr
pop
loopne
mov
add
add
push
enter
xor
je
aas
daa
cli
bound
jnp
push
dec
sub
sub
mov
imul
addl
mov
lods
in
jmp
movsl
enter
sarl
lahf
dec
sbb
add
push
cmpsl
jecxz
push
jb
loopne
mov
into
mov
stc
adc
lahf
jp
in
mov
cmp
push
and
in
adc
cmc
rcll
cltd
int3
js
and
jns
push
jne
out
mov
jnp
repz
dec
inc
aas
aad
dec
jl
xchg
fdiv
iret
fsubs
inc
jp
inc
pop
add
mov
sub
rcrl
jge
cmp
jmp
rcrb
mov
push
jne
gs
or
insb
shl
idivb
inc
shlb
imul
push
outsb
vfmsubadd132pd
sti
stos
ret
or
dec
and
pop
xor
pop
jl
inc
fisttpll
adc
or
xor
fisubrl
xor
lret
outsb
lcall
push
push
mov
dec
dec
mov
in
divb
jbe
xchg
and
scas
push
sbb
xchg
inc
imul
cmp
sub
fs
popf
roll
push
xchg
bound
cltd
mov
mov
rolb
decb
cltd
xor
xchg
fildl
push
ret
dec
in
lret
mov
shl
cwtl
outsl
sub
jbe
mov
jge
xchg
xor
sub
stos
mov
pop
add
sti
mov
mov
jne
fwait
stos
push
inc
mov
imul
dec
fs
sub
pushf
push
sbb
cs
mov
mov
mov
mov
or
sub
or
in
mov
or
or
xor
xchg
adc
out
fwait
or
mov
icebp
add
pop
mov
cmp
popa
push
or
icebp
std
mov
rcrl
aad
dec
std
mov
push
gs
lods
ret
mov
jg
fabs
lret
mov
test
inc
hlt
inc
mov
pop
inc
mov
clc
sub
insl
fwait
test
cmpl
cld
rcr
cld
stos
ds
dec
movsl
mov
xchg
cmp
xchg
jl
fmulp
or
push
lods
aam
repz
mov
sbb
stc
mov
ljmp
inc
int3
adc
bound
push
mov
push
daa
push
fwait
mov
cmpsb
adc
or
mov
ficoms
or
add
push
mov
dec
xor
movsl
jnp
adc
rorb
out
cltd
sahf
mov
aad
insl
push
addr16
and
adc
fsubrp
or
push
or
pop
inc
arpl
and
add
and
dec
lret
sub
cltd
aad
mov
jb
inc
test
push
sub
sub
mov
push
push
push
fildl
lcall
les
fisttpll
movsb
mov
adc
lret
jg
mov
mov
lahf
dec
movsb
mov
test
mov
pop
arpl
mov
insl
mov
xchg
xor
je
in
dec
sbb
out
aad
lret
push
data16
test
fadds
fldl
sbb
jne
pop
lret
addr16
xchg
ss
push
sub
dec
cmc
scas
fwait
jne
mov
stos
and
scas
mov
fisubs
cwtl
adc
add
cmpsb
mov
push
ss
push
adc
mov
adc
dec
push
mov
cmpsl
add
nop
xchg
in
cmp
adc
mov
das
popf
imul
pop
test
mov
dec
sbb
and
adc
je
dec
sbb
inc
or
pop
cmp
arpl
loope
imul
inc
addr16
xor
ja
mov
adc
stc
lret
dec
aad
inc
bound
inc
js
mov
jmp
in
mov
jnp
inc
lret
or
xlat
adc
dec
sub
lcall
ds
pushf
dec
mov
dec
mov
jb
jmp
out
imul
push
sub
clc
test
rorb
inc
inc
jb
pop
call
xchg
in
mov
in
pop
les
js
cli
lahf
and
aaa
adc
into
shr
je
imul
and
int
clc
push
cmp
push
jle
mov
into
stc
dec
mov
mov
adc
jg
imul
pop
int3
aas
iret
dec
sbb
mov
idivb
mov
inc
sbb
mov
shl
jle
cld
cmpsl
mov
push
or
out
jl
push
adc
test
mov
ret
ljmp
dec
or
stc
mov
das
cltd
fisubs
xor
arpl
inc
add
call
insb
adc
aas
mov
sub
fs
push
ljmp
pop
or
xlat
dec
mov
xor
jbe
push
lea
movsl
mov
jne
mov
push
fwait
pusha
das
fbstp
mov
push
cs
faddp
mov
mov
dec
scas
pop
xchg
mov
xchg
vrcpps
decb
pop
pop
daa
push
mov
and
sub
lea
negb
xchg
sub
mov
stc
or
lea
clc
int3
cltd
jnp
pop
les
pop
add
cmpsb
frstor
inc
cmpsb
dec
xor
sub
mov
fsub
or
mov
add
aaa
fdivrs
aaa
jns
lods
gs
arpl
int3
adc
adc
mov
inc
hlt
and
loopne
fsubrs
movsl
cmpsb
movsb
popf
repz
imul
add
push
test
and
fsubrs
cld
fadds
fdivrp
sub
in
inc
aas
int3
outsl
fwait
sub
sti
mov
scas
cmp
xorl
xlat
fsubp
jae
jmp
push
fldenv
icebp
inc
sbb
push
pop
insl
sub
mov
lret
sub
add
je
xchg
test
mov
cmp
mov
dec
popf
mov
fwait
stos
sub
gs
sub
and
inc
push
mov
call
dec
int3
aad
addr16
pop
xchg
xchg
bound
imul
icebp
mov
mov
movsb
push
cltd
sub
cmp
xor
pop
mov
push
push
cmpsl
mov
out
ja
mov
jnp
mov
add
fidivs
in
or
jb
ret
adc
xchg
mov
orl
and
sub
dec
pop
and
stos
sbb
pop
mov
pop
and
mov
testl
mov
xorps
pop
out
dec
repz
repz
dec
inc
add
bound
cmp
xchg
add
out
ja
mov
sbb
lock
mov
xor
push
lcall
pop
mov
inc
push
or
sbb
outsb
sub
sbb
sub
sub
ljmp
dec
push
inc
stos
or
or
repz
sarl
pushf
and
add
jno
outsb
and
filds
cwtl
out
loopne
mov
adc
pushf
xchg
jns
jae
movsb
push
jno
rcll
jae
inc
int3
loope
mov
mov
clc
mov
mov
movl
xchg
mov
aas
jge
daa
mov
push
pusha
ds
add
mov
lahf
mov
sbb
dec
cli
mov
add
jns
jns
loop
dec
adcl
jecxz
pop
sbb
movsb
push
mov
sbb
adc
mov
sahf
jno
mov
sbb
cmpsb
cmp
fdivr
iret
cmpsl
pop
xlat
sub
roll
mov
jbe
mov
sbbb
ftst
insl
sbb
sub
pop
add
dec
xor
repz
fstpl
cmpsb
adc
cltd
push
pushf
into
push
xor
push
xchg
xchg
in
cltd
xor
push
and
or
dec
insb
int
push
icebp
dec
adc
xor
pop
mov
int
int3
cmp
insl
outsb
pusha
mov
icebp
push
inc
xor
mulb
outsl
mov
or
in
and
mov
add
cltd
mov
out
aam
arpl
int
jnp
sbb
fmul
push
stos
xor
or
daa
dec
xchg
sbb
or
cwtl
ljmp
outsb
int3
subb
sub
shll
sub
and
test
xchg
xor
les
xchg
mov
xchg
aas
xor
fidivs
aaa
in
cmc
sbb
sbb
and
xorb
add
inc
decl
and
aaa
inc
pop
mov
inc
mov
insl
and
sub
xchg
insl
stc
add
cld
xchg
sbb
xor
lea
mov
shl
mov
sub
cs
je
ret
mov
xchg
incl
dec
and
pop
push
mov
jae
cmp
xor
lock
pop
or
cs
sub
adc
cmpsl
dec
popa
push
add
xchg
mov
jnp
and
sbb
or
ret
arpl
sbb
jne
lea
xor
inc
aam
lock
pop
ljmp
xor
mov
and
cmp
aam
lock
dec
lahf
rcrl
xchg
dec
add
loop
push
xor
daa
sbb
and
ret
xchg
aam
ficoms
and
sub
ljmp
addl
mov
mov
dec
mov
das
mov
and
out
movsl
loope
and
pop
xchg
sahf
out
or
cmp
lret
stc
cmpsl
andl
xchg
add
into
xor
clc
cltd
cmp
icebp
ret
dec
ret
xchg
xchg
mov
push
lods
mov
movsl
cmp
push
sbb
pop
pop
inc
xor
sbbb
fwait
cmpsb
mov
mov
cmp
popa
ja
hlt
ret
ss
inc
int3
outsl
mov
mov
sbb
repz
cmp
xor
mov
arpl
mov
and
mov
iret
shl
shll
loope
sub
mov
mull
div
nop
jae
sub
jno
push
stos
cwtl
cmc
pop
insb
loope
push
scas
pop
and
inc
das
and
ret
sahf
add
xor
fimull
pushf
mov
roll
xchg
xchg
mov
xchg
sbb
mov
roll
fiaddl
shrl
xchg
testb
mov
cmp
imul
loopne
jl
adcl
dec
and
sbb
icebp
xor
rcrl
sbb
mov
push
jp
pushf
cmp
and
mov
fmull
leave
iret
sub
cmp
lods
repnz
pop
dec
mov
mov
fs
push
adc
jae
xor
adc
mov
nop
push
and
dec
out
sbb
pushw
rcr
mov
fstps
hlt
xchg
mov
scas
andl
lock
int
in
cmpsl
push
insb
je
out
and
aam
jnp
jno
pop
ja
clc
dec
adc
addr16
mov
sbb
push
jb
xchg
dec
rorl
ss
mov
cld
mov
fisubl
fmull
imul
inc
orb
push
andl
lods
pop
shrb
fidivs
outsl
ret
fbstp
add
push
dec
loop
je
popa
mov
inc
push
lahf
std
rorb
and
cmp
dec
jnp
and
adc
dec
test
xchg
or
cwtl
dec
and
mov
cmpsb
inc
or
repz
int
test
inc
mov
lea
push
and
out
xor
ss
bound
arpl
push
xchg
mov
nop
or
pusha
jmp
mov
je
adc
and
add
cmpsb
arpl
stos
mov
jae
pushf
iret
jbe
cmp
ja
fs
out
popf
pusha
imul
js
fisttpll
fcompl
imul
xchg
mov
lret
mov
mov
cli
sub
aas
fbld
cmp
xchg
scas
and
iret
cmp
mov
rcrb
push
jecxz
lds
xor
sbb
adc
clc
popa
xchg
cmpsb
pop
pop
test
call
pop
ret
jne
xlat
scas
test
das
push
out
fstpl
lea
mov
mov
mov
push
stos
mov
sahf
mov
mov
sbb
xchg
cmp
pop
sub
insb
push
jne
js
dec
sti
push
inc
outsb
mov
sub
inc
mov
jecxz
test
xchg
je
and
int3
pop
out
jae
inc
loope
fimuls
adc
jge
mov
cs
into
pop
hlt
mov
into
dec
popf
adc
sub
mov
mov
mov
scas
mov
in
mov
loope
mov
inc
add
arpl
cwtl
std
fwait
add
pop
mov
les
pop
nop
add
test
movsl
das
add
fistps
scas
push
mov
pushf
fildll
ret
iret
jne
rclb
popf
jo
sbb
dec
mov
sbb
push
fisubs
lret
ss
or
rclb
and
repnz
mov
cld
push
sub
pushf
lods
test
daa
movsb
mov
sub
mov
adc
jo
addb
fs
sub
sub
push
mov
stc
cmc
fisubrl
adc
add
test
aam
ret
popf
rcrb
daa
sbb
shl
rclb
inc
sbb
lock
ds
ret
pop
inc
and
sti
repz
pop
es
jecxz
fistl
mov
jge
imul
pop
in
adc
jl
push
push
in
xchg
sbb
lcall
in
sbb
pop
mov
sbb
pop
and
daa
nop
adc
add
xchg
push
add
sub
sarl
xchg
xchg
push
add
push
ja
push
outsb
fdivs
insb
push
fistpl
sbb
and
mov
mov
mov
mov
mov
cs
add
mov
xchg
aaa
xor
fucomi
ficompl
test
and
movsb
cwtl
stc
and
push
xchg
xchg
mov
loop
sbb
sti
cmp
lds
pop
loope
mov
cmpsb
inc
pop
mov
ds
ss
jg
pop
ret
lods
into
loop
and
scas
gs
add
mov
fmull
jl
jmp
mov
inc
in
sbb
inc
test
sahf
loopne
or
xchg
icebp
cmc
stos
imul
inc
js
pop
or
ja
mov
sarb
jle
adc
std
pop
mov
jo
adc
cwtl
insl
mov
fwait
mov
jecxz
and
and
loopne
push
pop
ljmp
cs
or
cli
dec
inc
cs
fldcw
and
incl
popa
in
xchg
sbb
xor
rolb
jle
jecxz
rcrb
jmp
leave
dec
mov
nop
add
mov
mov
jp
xor
out
cmp
clc
mov
test
jno
test
lods
stos
push
sti
ljmp
enter
lods
sbb
popf
int3
movsl
mov
pop
dec
add
sahf
jmp
mov
lods
push
nop
inc
std
inc
mov
stos
xor
lds
cmp
mov
xorb
xor
push
stos
or
adc
pop
out
inc
jg
mov
or
jne
cmc
push
out
mov
je
leave
test
movsb
sbb
gs
or
fisttps
or
mov
cmp
cmp
das
outsl
inc
fdiv
jno
sub
aam
cmp
int
popa
xor
dec
fwait
in
in
test
pop
in
std
inc
scas
hlt
adc
addr16
js
cli
jmp
xchg
cmpsl
mov
sub
aas
mov
ss
mov
or
jns
addr16
test
adc
xchg
ret
aas
bound
cmpsb
and
sub
mov
loopne
icebp
or
pushf
aam
jle
ds
repnz
ss
mov
jecxz
insl
incb
addr16
in
mov
sub
dec
test
and
sahf
xlat
popf
cltd
jecxz
inc
and
mov
jmp
mov
xor
xchg
shl
lret
loop
pop
cmpsl
aas
push
xchg
test
add
and
enter
aam
test
cmpsl
test
or
or
movsb
icebp
cmp
dec
lods
cmp
fdivrl
stc
lret
fistl
mov
cmp
xchg
aas
adc
pop
mov
pop
xor
jecxz
fcompl
enter
xchg
jecxz
jle
int
insb
pusha
xor
stc
dec
fwait
in
arpl
or
sub
hlt
cmp
dec
aas
dec
sahf
bound
add
mov
out
push
mov
sub
mov
bound
shrl
and
stos
dec
cmp
and
outsb
add
into
insl
sbb
mov
xor
mov
jne
jbe
xor
js
loopne
jne
jp
sbbl
mov
cld
repnz
std
sahf
or
mov
repz
add
adc
mov
enter
daa
add
leave
sub
and
mov
mov
rolb
mov
jge
mov
sbb
xor
enter
incb
into
fisttpl
mov
ficoms
cs
push
jns
sahf
push
cli
cwtl
fdivrp
shll
ror
dec
test
inc
jecxz
int
mov
lea
sub
and
insb
pop
xchg
xlat
xchg
add
add
cmpb
ss
aas
or
jae
scas
cltd
shl
add
sbb
pusha
inc
rolb
xchg
sub
nop
sahf
ja
jmp
xor
cmc
repnz
cmp
and
pushf
pop
add
shlb
mov
insb
inc
xor
push
dec
sbb
cltd
push
pop
push
lcall
movsb
lahf
lods
insl
bound
ret
or
lea
adcl
aad
dec
jmp
test
cltd
push
cltd
lcall
dec
add
ss
sahf
and
dec
dec
and
popa
in
cmp
push
cmp
pop
fcomip
mov
push
mov
sbb
cmp
inc
dec
arpl
shlb
daa
jg
in
mov
cmp
push
ss
aas
fwait
sub
xchg
fwait
ret
ret
aaa
push
inc
dec
and
aam
adc
inc
adc
pop
jp
inc
xchg
mov
xchg
loopne
rorb
jb
sbb
adc
pop
mov
lock
xchg
in
push
mov
scas
xchg
imul
addr16
mov
lret
lock
mull
inc
stos
mov
sub
cli
pusha
and
sbb
sbb
hlt
nop
sub
jle
jg
stos
ret
and
or
dec
jecxz
loopne
cmp
stos
addr16
mov
aas
and
xor
xchg
xor
scas
mov
xchg
xchg
lods
scas
repz
call
push
mov
xchg
inc
scas
call
cltd
push
sti
mov
sbb
std
jmp
xchg
inc
add
test
jg
pop
push
test
into
aad
in
add
cmp
xchg
mov
dec
into
xor
push
jge
leave
sbb
inc
jecxz
mov
adc
or
dec
repnz
push
adc
ret
adc
sarl
jge
popl
sbbl
popa
mov
xchg
stc
cmpb
and
mov
cwtl
mov
sbb
lret
add
lods
and
clc
mov
test
sub
xor
popa
and
pop
imul
mov
aaa
xor
jo
and
inc
cwtl
sub
shrl
sarb
mov
mov
rol
cld
mov
jmp
insb
jle
push
add
sub
mov
pop
pusha
je
test
scas
paddusw
cwtl
mov
ss
mov
pop
cmp
mov
leave
lock
daa
inc
adc
cwtl
mov
jno
pop
test
mov
out
sub
or
push
repz
iret
and
aam
and
dec
inc
mov
cmp
push
icebp
pop
popa
enter
mov
fwait
inc
push
cwtl
test
sti
or
xorl
adc
and
mov
loopne
dec
lock
jns
stc
pop
in
std
xor
icebp
mov
mov
mov
call
cwtl
mov
push
outsl
pushf
mov
push
ljmp
lret
sbb
js
and
jbe
push
push
imul
cmc
adc
mov
xchg
aaa
imul
dec
es
or
das
xchg
push
dec
xlat
add
mov
jmp
adc
adc
sub
mov
inc
and
inc
outsb
mov
movd
fmulp
mov
xchg
mov
adcb
pop
mov
mov
and
and
push
scas
xor
aam
fnstsw
pushf
ret
cmpsb
shrl
push
push
call
jne
out
inc
mov
lods
add
cmpsl
xor
rcr
jno
dec
lds
imul
decl
push
arpl
outsb
imul
inc
push
insb
test
lock
and
dec
xor
mov
pop
shr
cmp
scas
leave
faddp
popf
jne
jae
nop
dec
mov
aad
jae
cld
push
fisttpll
ficoms
push
jl
popa
jl
push
and
imul
mov
dec
jbe
cs
repnz
mov
stos
stc
fsubs
or
xor
pop
aam
cwtl
test
gs
mov
add
or
or
adc
int
cwtl
fidivl
pop
add
mov
adc
add
xor
int3
into
mov
jo,pn
sub
xchg
dec
aam
adc
mov
push
xor
ljmp
sub
jae
out
test
sti
movsl
jle
shld
xchg
loop
inc
add
lock
or
lds
inc
in
sub
out
xchg
and
adc
sbb
repz
push
and
mov
cli
stos
scas
push
shll
add
stc
jb
in
xchg
loop
iret
test
xchg
mov
jo
imul
lahf
xor
jg
out
lock
sbbl
imul
add
movsl
sub
sub
push
out
mov
mov
push
cmpsl
js
dec
jg
negb
xor
mov
sahf
push
pop
mov
mov
in
popf
cmp
imul
sarl
es
mov
outsl
push
sbb
mov
shll
pop
repnz
pushf
sub
jmp
outsb
pushl
mov
mov
scas
test
pop
ret
scas
int3
lea
lock
mov
lret
xchg
lea
cwtl
pop
add
mov
add
out
daa
leave
data16
enter
mov
jg
rcr
cld
and
test
xchg
pop
test
push
fiadds
pop
repnz
scas
imul
mov
push
aas
mov
les
sarl
rolb
mov
mov
fsubrl
sar
mov
icebp
std
or
popa
or
push
movsb
xchg
sbb
cwtl
jecxz
or
sub
outsb
ktestb
dec
jns
adc
jge
pushf
inc
pop
in
fldcw
cmp
sbb
rcrl
movsb
mov
push
cmp
inc
or
je
mov
rcr
cld
mov
cltd
mov
daa
push
arpl
cmp
add
sti
adc
ffree
je
insb
xchg
pop
jno
fs
inc
gs
add
into
pusha
cmp
lods
sbb
shlb
adc
sahf
shr
xchg
pusha
mov
push
dec
inc
dec
outsb
fcomp
mov
add
dec
in
adc
xor
shll
call
or
stc
add
push
jg
daa
xchg
sub
xor
mov
hlt
inc
dec
lock
mov
rcll
sub
in
jmp
imul
loop
sbb
sub
sbb
pop
outsl
fsubl
mov
fwait
push
imul
xchg
push
push
rolb
sti
cmpsb
clc
loopne
or
rorl
lods
cmp
ja
add
pop
sub
fbstp
call
ljmp
sub
mov
aaa
mov
jae
ret
rorl
sbb
cmp
aaa
jns
sbb
push
pop
dec
sbb
sbb
dec
inc
jl
push
test
cmp
test
sub
scas
das
mov
and
jp
cmpsl
xchg
addl
sub
imul
xlat
dec
in
and
shll
mov
dec
add
icebp
mov
icebp
in
mov
int
inc
jnp
stc
cmpsb
call
pop
dec
les
sbb
les
frstor
insb
imul
je
mov
enter
out
adc
sbb
mov
ret
fiaddl
adc
enter
into
outsl
and
iret
inc
aad
jp
inc
cmpsb
or
sub
xchg
sub
and
mov
inc
cmp
or
negb
adc
jne
icebp
out
popa
xchg
xlat
lods
clc
mov
inc
cmp
jl
mov
pop
cmp
sbb
std
adc
fs
mov
inc
dec
push
mov
and
xchg
hlt
clc
cmpsb
stc
mov
cmp
ret
idivb
enter
add
push
and
out
test
mov
imul
hlt
sti
adc
mov
scas
sub
test
lock
mov
mov
insw
xchg
mov
std
les
cld
or
cmpsb
iret
inc
inc
daa
rcl
pop
lods
jbe
xor
and
ret
jbe
jns
rcrb
popa
mov
inc
dec
pop
mov
cld
jns
ja
pop
mov
loopne
popf
cmpsb
fsubp
xlat
shll
jecxz
dec
and
add
es
arpl
jl
jp
in
pop
fstpt
xchg
pop
sub
into
adc
fmull
call
inc
aam
lea
mov
xchg
inc
mov
fsubl
leave
push
lods
push
mov
les
push
lock
mov
loope
xchg
add
stc
inc
test
mov
shll
inc
gs
pushf
es
and
lea
jae
fs
mov
lds
cltd
xchg
mov
jmp
jecxz
sbb
mov
outsl
lcall
jns
fistpll
xor
fwait
lret
gs
fisubl
sub
inc
out
cmp
xor
test
test
in
test
jne
and
in
and
lock
dec
stos
shlb
test
pop
or
daa
repz
stos
or
cs
mov
test
rcl
add
rcrl
xchg
dec
pusha
repz
std
iret
mov
ljmp
inc
mov
out
jl
out
cmpsb
cld
fcomps
ret
fsts
mov
mov
popf
cld
aaa
pop
test
fcomp
ss
mov
add
mov
aaa
pop
ret
adcl
sbb
mov
mov
mov
xorl
sbb
pop
and
lds
dec
and
shll
add
cmp
mov
pop
scas
lock
arpl
cmp
xchg
xchg
cmc
jne
icebp
cmc
fcomps
ret
pushf
mov
popa
ja
sti
pusha
push
js
cs
mov
scas
add
push
sbb
jns
push
xor
rcrb
lods
cmp
notl
ljmp
hlt
mov
mov
gs
cli
sbb
cltd
cli
repz
out
sub
adc
xchg
mov
imul
jno
inc
mov
or
stc
jmp
hlt
mov
push
imul
sbb
rorb
insb
adc
sub
test
mov
fcomp
cmp
jae
insb
mull
sub
mov
stos
mov
insl
inc
sub
ret
mov
or
cmp
test
insb
mov
stc
ja
aaa
in
stc
or
xor
mov
pusha
inc
add
xchg
lock
aaa
fcompl
jg
xor
xor
inc
shlb
mov
sbb
arpl
mov
xadd
dec
add
es
into
inc
pop
pop
addr16
icebp
insl
loope
sub
outsl
jg
inc
scas
xchg
out
dec
cmp
outsb
mov
or
lcall
test
sbb
xor
fistl
mov
cs
sbb
ret
mov
jae
loopne
pop
pushf
sbb
lds
xor
inc
or
mov
out
mov
adc
fildl
dec
and
mov
aas
mov
sti
sbb
pusha
arpl
inc
fsubs
shll
mov
in
inc
sub
inc
ja
dec
rcll
cmc
cli
pop
shrb
sbb
pop
hlt
cmp
inc
cmp
lea
sub
mov
arpl
xchg
pop
pop
jle
loop
cwtl
cld
scas
mov
push
lcall
cmp
sti
jg
and
fs
xchg
leave
mov
pop
stos
mov
push
and
or
es
sbb
inc
jno
cmpl
stc
cmp
cs
ret
lods
mov
arpl
imul
add
test
fcoml
xlat
mov
cmp
cmp
push
gs
imul
enter
lret
xchg
test
jbe
cmp
xchg
scas
int3
inc
jns
mov
inc
mov
jecxz
sar
scas
xchg
push
mov
add
call
jb
jne
inc
or
push
pop
loop
pop
aas
cmpsb
mov
jo
pop
shl
cs
lret
call
jle
sbb
pop
xor
push
lcall
mov
dec
dec
cmp
insb
int3
xor
pinsrw
mov
inc
das
icebp
movsb
xchg
xchg
call
pop
mov
leave
in
enter
je
inc
out
mov
movsl
add
add
lods
repz
shl
lcall
mov
out
out
aad
in
in
inc
clc
mov
push
negl
dec
cmpsl
lcall
jle
push
cwtl
sbb
popf
push
das
push
adc
push
mov
js
mov
bound
lahf
insl
mov
mov
and
repnz
dec
scas
fsubrl
shl
arpl
fs
clc
cltd
arpl
rcll
or
or
negb
movsb
gs
stos
xor
jmp
cmp
mov
cmp
jno
out
mov
push
mov
cld
jbe
repnz
int
or
xlat
sbb
mov
fldcw
add
andb
pusha
jo
subl
insl
and
and
jge
lods
shll
jno
pop
fs
inc
into
mov
mov
sbb
insl
daa
inc
mov
enter
loope
icebp
pop
popa
mov
pop
ret
aad
jecxz
sbb
into
jle
xchg
aad
stos
pop
cmc
notb
out
and
cmpsl
dec
or
loopne
js
pop
mov
int3
ljmp
bound
add
loop
gs
and
mov
jl
ficoml
dec
aam
ficomps
lods
popf
aas
lea
imull
lahf
stos
fsubrp
lea
mov
push
and
push
ds
scas
repnz
lds
adc
push
jns
mov
mov
mov
setno
mulb
push
bound
sub
and
xchg
call
mov
out
ja
pop
mov
incb
shl
aaa
cmp
lcall
pop
jb
fcmovnbe
mov
xchg
jns
mov
xchg
aad
cmp
and
sbb
mov
xor
scas
xor
mov
pop
lret
jne
cmpsl
or
jle
adc
data16
cmc
pop
icebp
add
jae
insl
jbe
aas
pop
loopne
push
test
in
jb
or
inc
mov
arpl
mov
out
das
mov
jge
cs
inc
sbb
inc
ds
enter
mov
outsl
stc
mov
push
mov
sti
ret
cmpsb
aad
mov
cmpb
push
aad
hlt
sub
mov
push
adc
xchg
xchg
mov
cli
in
loopw
mov
sbb
fisubl
je
push
add
loop
aas
and
les
mov
and
test
xchg
sub
testl
jo
push
mov
cs
lcall
sub
mov
adc
enter
loopne
sub
out
cwtl
popl
js
ja
inc
aaa
pop
sub
or
mov
dec
daa
and
lcall
sub
popa
pop
cmp
dec
cmp
movl
popf
mov
and
lret
stc
adc
add
int
cmpb
js
xor
push
idivb
jae
and
mov
outsb
hlt
sbb
pop
mov
cmpsb
fimull
push
push
shlb
mov
mov
or
fimuls
push
inc
jae
ret
cmp
jge
mov
jb
and
mov
push
sbb
aas
mov
push
fcomps
sbb
into
push
decl
cmpsb
subb
sar
push
ljmp
push
push
in
xchg
fidivrl
mov
push
or
mov
arpl
fbstp
fs
movsb
or
push
cmpb
push
jl
jmp
mov
in
hlt
in
fldt
inc
inc
pop
es
push
mov
or
out
mov
xchg
lea
mov
push
cwtl
sbb
cwtl
sahf
mov
lahf
xchg
jo
pusha
push
push
mov
in
xor
jg
cmp
out
xchg
pop
lods
lods
or
bound
inc
ret
xchg
sbb
and
div
jne
xor
jo
inc
mull
subb
test
jecxz
pcmpeqw
adc
hlt
dec
jae
loop
push
push
test
in
scas
pop
nop
fildl
ret
or
sti
push
dec
add
push
jle
in
and
jnp
cmp
es
pop
and
inc
das
daa
inc
cltd
stos
pop
mov
pop
pop
stos
dec
lret
jle
outsb
leave
lds
shrl
mov
sub
cmp
jnp
mov
sbbb
int3
mov
cmc
mov
dec
push
xchg
mov
das
es
mov
ret
xor
cmp
cmp
imul
mov
test
stos
cmc
cli
daa
or
push
jl
loopne
sbb
jne
stos
dec
les
dec
fadds
sbb
outsb
out
sub
sub
push
test
addr16
jne
test
jl
jnp
or
inc
test
jmp
inc
add
loopne
dec
push
fucomi
lods
cwtl
adc
ljmp
sub
mull
jmp
test
ja
cltd
mov
mov
push
call
int3
sbbb
pop
fs
add
mov
jle
jns
aaa
sub
loope
push
sub
sub
jle
ret
loop
call
sub
in
jne
cmp
pop
cmp
jb
push
and
cltd
pop
test
insl
jp
mov
jecxz
mov
idivb
sahf
int
mov
pop
rol
jge
push
mov
mov
dec
xchg
cmc
outsb
leave
sbb
repz
cmp
mov
xor
clc
fldl
push
push
inc
stos
cwtl
and
adc
mov
sbbl
ja
inc
xchg
sbb
sub
stos
cmp
xchg
aas
sub
int
int
test
testl
mov
xchg
lret
stos
jno
sbb
xlat
pop
leave
cmp
xchg
dec
pop
adc
mov
jmp
shl
shrl
repnz
dec
js
clc
mov
fmulp
jo
push
sbb
add
add
lret
xor
mov
into
daa
insb
cld
mov
aas
gs
sub
adc
popa
cmp
pushl
xchg
inc
es
scas
xor
inc
testl
inc
pop
int3
sub
outsl
and
jne
lock
xchg
test
mov
adcb
jge
lret
xchg
cmp
sbb
popa
int
inc
push
xchg
aam
ja
and
add
mov
adc
xchg
notb
roll
inc
incb
push
jns
inc
fs
pop
mov
or
fsubr
xor
fs
push
jns
rolb
pop
mov
sbb
or
rorl
repnz
and
push
enter
out
dec
dec
dec
test
icebp
mov
pusha
inc
mov
lods
push
mov
test
or
loope
lea
pop
sub
fldcw
in
and
sahf
xchg
mov
loopne
push
or
dec
iret
sbb
stos
popa
push
jae
fiadds
xor
aaa
test
dec
sub
xor
mov
pop
jno
pop
pop
or
inc
jmp
sub
sbb
lea
lock
adc
sub
jno
in
jg
not
jb
cmp
sbb
bound
clc
xor
push
aas
insb
add
popa
enter
push
in
lret
hlt
push
mov
cmp
mov
inc
and
jbe
subb
dec
jle
call
aaa
push
push
adc
xor
sub
out
or
into
int3
roll
add
int
pop
movzwl
adc
dec
lods
insl
push
xchg
dec
gs
xor
xchg
pandn
imul
sub
inc
mov
or
adc
dec
cmp
push
xchg
sub
out
mov
and
sub
cli
push
sub
jns
pushl
xchg
ja
leave
iret
lods
mov
inc
shl
movsl
addr16
repz
into
lods
lcall
lea
ds
insl
ds
jno
and
xor
stos
enter
aas
mov
cmp
ret
xor
or
out
jecxz
pop
mov
icebp
scas
xchg
lret
sahf
xor
cwtl
sbb
or
xchg
xorb
bound
xchg
push
das
and
push
push
stc
fdivl
lcall
xchg
loope
scas
outsb
ret
dec
cld
sbbb
and
jnp
out
rcl
dec
sbb
sub
ficoms
and
lret
cwtl
push
sti
xchg
pop
or
xchg
xchg
xchg
lds
mov
lret
jo
test
int
js
xlat
dec
sub
pop
jle
jbe
mov
dec
ficompl
mov
roll
xor
dec
pop
sbb
and
push
shrl
sbbl
ret
ret
xchg
xchg
pop
sbb
mov
orl
in
and
sub
lea
pop
out
rolb
push
mov
jo
faddp
in
test
xor
fcmovne
sub
hlt
movsb
dec
or
mov
adc
jl
cltd
adc
pop
xor
lahf
cmp
jmp
sbb
cmp
inc
scas
jp
rcrl
rolb
in
out
loopne
scas
lret
mov
movsb
dec
imul
jno
fdivr
inc
sub
pop
pusha
cwtl
inc
out
pop
repz
nop
inc
lods
pop
sbb
mov
lcall
out
leave
nop
jmp
cmp
xchg
mov
out
xchg
mov
sub
jns
or
sbb
stos
xchg
call
shll
cltd
test
mov
pop
push
lahf
push
stos
pop
icebp
add
sbb
cld
pop
mov
add
aas
and
sbb
and
cmp
mov
adc
shlb
aad
rolb
movsl
cltd
sub
xchg
fwait
pop
sbb
nop
mov
xor
mov
dec
add
push
mov
repz
push
pop
inc
pop
inc
mov
push
dec
mov
sub
sbb
cmpsl
pop
sbb
jo
sub
sti
lds
lcall
inc
add
icebp
jo
adc
adc
int
lahf
sub
movsb
dec
fst
jg
ret
mov
mov
or
into
nop
add
push
sbb
aam
scas
mov
popf
dec
outsl
adc
push
dec
jmp
sbb
rcr
lock
mov
pop
mov
pushf
lcall
mov
xlat
iret
cmpsl
or
mov
mov
jnp
pop
je
outsl
fcompl
pop
cmp
xchg
fidivl
jecxz
cmc
nop
in
inc
ljmp
xor
push
xor
xor
jnp
add
xor
icebp
push
mov
push
imull
or
cmp
mov
push
adc
aaa
scas
jnp
fcmovne
aaa
in
jecxz
push
cmp
adc
lds
mov
push
adc
test
test
in
pop
and
inc
imul
sub
jnp
mov
xor
push
aas
xchg
jge
or
jo
stos
push
sbb
out
ds
fcoml
in
mov
mov
lea
pop
out
stos
adc
push
fs
into
js
push
cld
nop
or
fdivs
mov
aas
pusha
sbb
adc
js
dec
inc
adc
movsl
mov
jns
and
pop
in
add
fcmovb
push
xchg
pop
sahf
pop
fcmovb
cmpsb
outsl
xor
sbb
js
filds
add
orb
jae
sbb
fdivr
icebp
add
sub
lods
push
mov
pop
mov
inc
push
cltd
data16
and
ror
push
adc
lds
jo
cli
or
pop
pop
dec
pop
jg
imul
andb
movsl
shlb
shr
out
mov
push
jmp
pop
rcrb
push
nopl
inc
stc
and
cmp
add
sbb
push
sbb
adc
out
add
in
and
stc
jl
or
cmp
or
in
fs
rcrb
fcoml
ds
xor
jmp
stc
roll
outsb
pop
adc
mov
mov
movsb
test
sbb
test
adc
lahf
les
stc
pop
xor
in
das
test
xchg
das
rcrl
into
push
in
imul
into
movsl
imul
push
hlt
push
push
mov
xor
lock
inc
push
fidivrl
loope
popf
mov
loopne
js
fadds
movsb
xchg
sub
pop
jge
pop
xor
jo
pop
push
xchg
cmp
xor
mov
push
lods
fstpt
lahf
xor
ljmp
mov
sbb
cmp
add
adc
mov
jbe
scas
cwtl
and
dec
das
popa
mov
or
mov
in
cmpsl
aad
or
icebp
push
mov
jno
hlt
adc
bound
ret
daa
fsts
add
push
mov
jno
stos
daa
xchg
ljmp
js
cmp
repnz
jle
and
and
dec
cmpsl
cwtl
pop
dec
mov
add
cmp
clc
imul
mov
cmpsb
test
mov
jg
xor
inc
push
negl
out
push
je
jbe
ret
out
bound
jle
jmp
testb
fs
clc
clc
add
or
push
dec
dec
popf
cmp
pop
mov
mov
loope
fnsave
or
jne
mov
lret
dec
fisubl
xchg
mov
or
mov
cmp
push
out
push
leave
aas
jp
mov
xor
cs
and
and
xor
mov
mov
jp
stos
cltd
ss
pop
adc
insb
stos
mov
inc
sub
cmp
inc
add
arpl
cmp
cmpsb
popa
pop
pop
sbb
jns
dec
dec
or
in
sub
prefetch
add
push
xor
or
add
xchg
or
aad
mov
lods
adc
fwait
shl
lods
test
mov
in
ss
pop
push
dec
jmp
xchg
xchg
inc
pop
fdivs
mov
adc
fwait
loope
clc
mov
shr
mov
inc
sbb
mov
sub
xlat
andb
pop
loope
in
lret
lock
aam
push
subl
pusha
into
add
mov
scas
or
cld
and
movsl
sbb
or
lcall
nop
mov
adc
adc
mov
dec
lods
inc
pop
lods
inc
or
pop
xchg
dec
cmp
inc
jmp
stc
andl
imul
mov
cld
push
xchg
sub
out
dec
xchg
mov
push
fsub
lods
sti
jecxz
rcrl
paddq
cmpsb
pop
xchg
sbb
test
ljmp
int
ds
lret
jne
dec
rcrl
and
into
pop
outsb
shlb
mov
xchg
xor
jae
add
mov
jle
sarl
mov
mov
pop
sbb
mov
jmp
jo
xor
rorb
aas
jne
mov
and
mov
push
mov
stos
jnp
ret
hlt
sub
arpl
rorb
daa
lods
stc
sbb
mov
shll
pusha
repz
or
or
shll
fdivrs
jge
stos
push
mov
pop
sbb
in
mul
and
push
stos
aaa
jb
sarb
pop
jmp
mov
and
xchg
test
xchg
add
jecxz
cltd
callw
clc
aas
jge
mov
inc
xchg
xlat
mov
pop
sub
xorb
pop
aas
push
dec
inc
je
int3
xor
cwtl
ja
xchg
jno
mov
insb
and
addl
in
xchg
xor
out
scas
and
lock
arpl
fwait
inc
out
mov
push
add
and
popl
notb
rorb
stos
dec
stos
inc
xchg
jmp
inc
in
lods
inc
or
lahf
imul
mov
test
repnz
mov
lods
in
mov
sbb
lret
mov
mov
push
inc
push
xlat
dec
xor
cmp
jne
pop
sbb
pop
push
sbb
into
jne
sysexit
popf
mov
inc
push
ficoms
test
cmpsb
dec
std
or
imull
mov
pop
push
push
jecxz
lock
inc
push
cwtl
fs
dec
jge,pt
ficomps
and
inc
lods
leave
and
pushf
adc
dec
push
sbb
testl
adc
sti
orb
sbb
inc
loop
pop
mov
stos
shlb
push
xchg
and
dec
sbb
mov
stos
addr16
mov
push
inc
ficoml
popa
adc
push
xchg
add
pop
in
xchg
arpl
lea
cmp
fidivs
dec
xchg
je
outsl
std
es
push
outsb
pop
sahf
aaa
or
test
and
out
stos
push
outsl
dec
mov
loopne
dec
sarl
sbb
xlat
fnstsw
sub
into
or
mov
adc
dec
mov
rcr
aas
jbe
jg
adc
addr16
or
xor
dec
movsb
loopne
xor
test
lahf
jl
add
sub
mov
fnstsw
loope
insl
xor
push
shlb
pop
imul
or
arpl
jg
outsl
movsb
mov
xor
iret
inc
pop
inc
ss
jg
fwait
push
fnstsw
insl
adc
sub
call
repz
pop
xor
and
shlb
out
xchg
and
mov
push
stos
mov
cmp
pop
jns
xor
dec
mov
test
pusha
scas
mov
xor
push
xor
adc
xor
xchg
dec
popa
push
xchg
and
push
cmp
cmp
sub
inc
int3
pop
mov
and
jno
in
lods
movsb
sub
fisubrl
sbb
inc
insl
cltd
shll
and
cmp
out
loope
imul
pushf
mov
out
adc
pop
mov
lret
add
pop
xor
js
push
mov
fdivrs
mov
xorb
aas
pusha
in
vpcmpeqd
xor
sbb
faddl
leave
jg
xor
jae
jl
jg
jge
imul
aam
add
xlat
mov
pop
outsl
pop
fdivr
js
jne
lds
mov
dec
sbb
arpl
loop
iret
ss
lods
push
sbb
daa
cmp
out
cmpsb
mov
inc
cmpsb
in
fwait
vpshad
push
in
mov
scas
loop
xchg
mov
adc
mov
cmpsl
ficoml
push
repz
jmp
imul
in
fiaddl
pop
jmp
jbe
push
and
pop
and
aam
lds
pop
adc
outsl
lahf
test
fwait
push
sbb
jecxz
jbe
cmp
movsb
pop
out
sub
add
add
jp
jp
cmp
stos
pop
pop
lods
stc
mov
adc
or
cmp
sarl
lret
sub
mov
push
arpl
pop
xor
push
ds
hlt
sub
scas
stos
adc
mov
lods
push
mov
rcrl
rcll
mov
scas
daa
inc
cs
es
lcall
cs
push
sub
test
test
fistps
call
jnp
mov
lret
repz
mov
jnp
inc
sbb
or
and
sbb
test
sti
addr16
in
aam
fwait
in
shlb
icebp
mov
loopne
and
call
shl
and
pop
fcomip
adc
mov
dec
ja
jo
pop
ljmp
sbbb
mov
xchg
into
xchg
jae
sti
adc
out
repz
sti
pop
xchg
push
cmp
lods
jge
outsl
ljmp
fs
cmpsb
pop
jb
jno
xor
sbb
scas
jb
movsl
mov
push
pop
mov
push
test
cli
or
cmp
jns
scas
loopne
aaa
pop
shld
push
lea
jp
xchg
pusha
aad
inc
mov
jle
cmpsb
xorb
repnz
dec
fsubrs
mov
out
cmpsl
icebp
pop
mov
jno
incl
and
ljmp
rclb
dec
sahf
xchg
fldt
mov
call
pop
mov
xchg
xor
add
ret
sarb
or
mov
iret
rorl
jno
fiaddl
pop
mov
cmc
add
fbld
mov
es
mov
mov
pop
dec
jae
mov
mov
mov
mov
sbbb
sbb
jae
add
aas
mov
into
das
test
xchg
enter
jmp
mov
sub
loopne
jecxz
and
pop
imul
fcomp
scas
inc
fcmovnb
hlt
adc
call
lret
inc
pop
in
dec
or
cmp
mov
cmp
mov
fs
sti
sbb
stos
add
imul
insl
in
inc
in
push
jmp
in
int3
push
mov
aam
test
mov
push
arpl
bound
mov
and
sub
icebp
jno
aad
in
mov
std
lock
ljmp
scas
jle
repz
cmp
cmp
sbb
sbb
xchg
sbb
xor
inc
out
std
add
xor
test
daa
fsubs
jae
push
aad
rcrl
cwtl
jge
xor
xchg
mov
repz
into
jo
mov
negl
mov
loope
jmp
lods
pop
dec
pop
or
mov
cltd
cld
push
loopne
pop
mov
adc
loop
call
push
out
adc
adc
ret
inc
dec
fstl
pop
pop
loope
lcall
mov
sub
sbb
lahf
imul
cmp
mov
xor
rclb
scas
lods
lcall
mov
xchg
in
iret
loopnew
cmp
stc
dec
cs
adc
pop
rcrl
fstp
nop
jp
rclb
into
jne
and
imul
dec
xchg
xor
push
cmpsl
add
out
sarl
in
add
pop
add
jnp
mov
xchg
pop
icebp
push
popa
in
rclb
test
dec
punpckldq
fsubl
data16
pop
and
std
add
imul
mov
jp
dec
popf
and
movsb
loope
inc
mov
lea
std
pop
cmp
adc
and
pop
push
xchg
movsb
xchg
jbe
hlt
ja
pop
jmp
scas
cmpsl
dec
dec
pop
sbb
jge
ret
add
mov
pop
or
add
aam
outsl
add
hlt
add
fs
je
test
sti
xchg
and
sbb
clc
cmpsl
jb
jnp
fldl
sahf
sub
sbb
pop
inc
pushf
test
sub
arpl
inc
jle
nop
and
mov
add
mov
movsl
clc
lret
stos
cmp
dec
mov
or
dec
addl
ljmp
cs
lahf
test
add
out
adc
in
cmpsb
adc
pop
cs
enter
push
inc
fs
sub
aas
dec
sbb
insl
mov
iret
mov
out
or
out
pop
or
or
les
add
jle
and
jo
adcl
or
xchg
loope
shll
cmpsl
fistpl
dec
cmpsl
pop
mov
cmp
sar
int3
sub
insl
imul
aaa
and
in
in
xchg
pop
aas
xor
repz
push
and
jb
enter
cmpsb
mov
shr
lret
imul
mov
sbb
aam
mov
mov
lock
hlt
push
xor
imul
and
out
mov
adc
scas
mov
ja
jnp
das
mov
gs
int3
adc
mov
lahf
gs
mov
aad
shll
sub
pusha
jle
fwait
icebp
loope
mov
cmp
mov
in
dec
mov
enter
out
adc
ret
pop
push
cmpsl
adc
sti
in
shrl
cmpsl
push
in
repz
out
mov
xlat
and
push
nop
add
and
adc
mov
add
cmp
jb
lods
jne
cmp
push
mov
push
repz
cmp
mov
jo
aam
and
imul
or
jle
fidivl
inc
or
adc
rcrb
xor
out
mov
adc
xchg
xchg
into
in
andps
mov
fisubl
push
add
inc
sbb
ret
mov
aam
jne
dec
adc
sbb
adc
ja
mov
scas
mov
xor
test
nop
push
jmp
insb
inc
jl
mov
bound
in
push
in
les
lock
cmp
out
inc
and
mov
xchg
push
or
dec
pop
inc
test
js
inc
mov
ljmp
push
ss
rolb
popa
pop
xchg
lcall
mov
ret
lods
sti
fimuls
fstps
scas
fcompl
gs
hlt
testb
out
xlat
xor
cmp
pusha
popa
dec
stc
subb
inc
jecxz
adc
es
je
sub
adc
repnz
into
fdivrl
xor
cmc
loop
or
lcall
aas
add
enter
or
insl
xor
cltd
adc
push
int3
sbb
or
cmp
std
xchg
inc
jmp
pop
sbb
cmpsb
cmp
sub
cltd
rolb
jmp
inc
inc
or
dec
sub
add
sub
cli
inc
sub
mov
add
arpl
fld
sub
push
jae
sub
stc
mov
incb
loop
and
stos
lret
pop
mov
nop
mov
stc
push
inc
cmpsb
out
into
dec
inc
jb
outsb
mov
pop
pushf
enter
sub
divb
xchg
cmp
xchg
jae
clc
inc
arpl
sub
and
inc
inc
push
js
sub
loope
dec
jns,pn
mov
lahf
inc
and
andl
push
xchg
out
dec
shlb
xor
push
in
or
inc
sub
cmp
dec
roll
loopne
lods
inc
adc
enter
sub
mov
sub
xchg
dec
out
sub
addb
jnp
mov
orb
sti
arpl
and
pop
adc
pop
xor
push
push
repnz
cwtl
adc
pusha
cmpb
dec
loopne
ss
sarb
mov
inc
mov
fildl
mov
add
shll
in
and
xchg
mov
jl
test
inc
loop
fcompl
in
push
lret
pop
cltd
out
subb
addb
orb
mov
and
lret
scas
pop
fnsave
arpl
mov
mov
cmc
mov
shrl
push
shlb
xchg
cmp
sub
inc
sbb
pusha
aam
mov
mov
push
nop
adc
jno
nop
pop
or
clc
out
leave
cmp
in
xor
std
sbb
stc
movsl
push
cmp
hlt
cltd
and
push
jmp
insb
dec
cmp
mov
and
jne
gs
pop
xchg
or
sti
sarb
push
cmp
add
push
aas
aas
cmpsl
sti
cmp
jns
jae
cwtl
fsubrl
mov
daa
and
jge
mov
or
lds
outsl
loopne
je
call
dec
xor
dec
ror
add
sub
xchg
fsubl
dec
jae
jno
xor
es
inc
mov
dec
jno
dec
adc
scas
push
outsl
add
loope
rclb
cld
jbe
jmp
clc
imul
mov
sbb
xor
sti
cld
xchg
sarl
fisubrl
sub
add
ss
nop
in
loopne
jo
jbe
lods
pop
cli
push
cmp
movsl
sbb
mov
fs
int3
push
mov
jecxz
mov
mov
cmpsb
mov
icebp
inc
push
movsb
and
lock
loop
and
sbb
stos
add
pushf
arpl
ffree
adc
out
inc
mov
lahf
jb
inc
xchg
mov
fiaddl
mov
lret
cmp
mov
inc
movlps
lahf
pop
mov
movsb
mov
jne
sti
mov
loope
outsb
imul
or
inc
push
mov
xchg
pop
cmpsb
inc
nop
pop
pushl
mov
mov
inc
mov
ret
push
mov
movb
movsb
mov
mov
jg
pusha
pop
sti
lods
inc
xor
ficoms
sub
test
sub
ret
or
inc
jns
mov
ss
aaa
pop
mov
dec
sti
sbbb
sahf
xchg
push
or
mull
gs
cwtl
pop
mov
xor
mov
out
dec
es
mov
pop
xchg
clc
sbb
cltd
fadd
lcall
jle
jle
sbb
leave
sahf
inc
adc
test
repnz
or
fcomps
adc
push
cmpsl
sub
push
xor
cmp
test
sbb
scas
jno
ljmp
scas
divb
or
mov
xor
jp,pn
mov
mov
adc
xor
push
sti
jno,pt
xor
faddl
sahf
test
inc
cwtl
push
add
rsm
sub
xchg
xchg
mov
mov
sbb
adc
mov
mov
inc
jp
std
into
int3
xchg
sbb
cmp
cmc
inc
ret
jp
or
nop
mov
lret
mov
mov
cmp
jne
test
rolb
jmp
ss
adc
sub
jmp
jmp
inc
inc
rcr
push
int3
xor
ja
mov
fisubrs
lahf
hlt
mov
rsqrtps
mov
mov
stos
or
jge
outsl
push
ljmp
test
jg
inc
int3
insl
pop
out
dec
sub
pop
sahf
xorl
loopne
cld
lcall
std
insl
testl
mov
je
push
and
lds
faddl
ret
pop
int
or
in
repz
scas
xor
leave
lahf
cli
iret
adc
sbb
jl
mov
test
aad
ret
out
sub
pusha
jl
out
xchg
xor
lahf
cmc
movsb
xchg
mov
jp
cmp
mov
push
repnz
fcomip
rcrl
add
pusha
cmp
cltd
cmp
jno
jns
cmpsl
fildl
in
mov
dec
push
add
adc
scas
jns
not
cmpsl
mov
mov
aas
and
push
inc
pushf
or
mov
bound
xchg
push
adcb
test
inc
mov
repz
outsl
lods
loopne
cmp
jb
enter
or
test
aam
iret
xchg
jo
xlat
dec
xchg
dec
mov
lret
fs
jl
jmp
push
pop
jl
sbb
jg
aad
push
aam
arpl
adc
cwtl
icebp
mov
push
pop
in
shll
dec
push
dec
adc
lcall
fcom
jg
fs
xor
sub
push
sub
mov
inc
and
repz
xor
pop
mov
fadds
push
loope
pop
mov
jns
lea
push
mov
je
das
out
xor
or
and
nop
insb
dec
mov
push
or
or
xchg
sub
aas
jnp
lcall
pop
loopne
mov
mov
dec
or
fs
jo
sti
sbb
xchg
pop
filds
enter
pop
jnp
xchg
xchg
lret
sti
xor
mov
jnp
cmpsl
sub
push
insb
inc
jne
addr16
mov
sbb
mov
or
in
jmp
push
xchg
stc
scas
cmp
and
sar
jo
mov
xchg
mov
sub
adc
out
jno
add
data16
rcll
jmp
enter
jp
mov
sbb
imul
jmp
out
mov
ljmp
xchg
and
pop
adcb
fsub
repz
dec
inc
cmp
jbe
jmp
cmpsb
insb
lret
and
lahf
mov
mov
fwait
je
pop
dec
pop
xor
inc
adc
leave
xchg
sub
xchg
and
ret
jne
adc
insb
sub
addr16
jne
inc
out
sub
out
push
subb
adc
lock
fldt
jl
adcb
sub
imul
fisubrl
mov
lahf
mov
das
lds
jbe
mov
mov
imul
jle
jecxz
push
data16
sbb
cmpsl
mov
clc
push
sbb
decl
insb
cmpsb
mov
into
mov
std
test
repnz
jno
jae
test
sub
outsb
arpl
cmp
sub
sbbl
xchg
mov
mov
addl
fldt
sub
xchg
sub
mov
inc
add
jp
lea
xchg
mov
in
mov
addr16
sbb
adc
add
xchg
outsb
mov
movsl
sti
cmp
mov
popf
inc
jne
xchg
xlat
jg
jb
lret
dec
rclb
jno
fiaddl
daa
scas
into
inc
add
iret
inc
mov
subb
adc
adc
push
sub
sbb
adc
pop
rclb
push
aam
sub
hlt
out
add
out
pop
push
sub
mov
sbb
mov
lahf
stc
mov
fdivr
call
ds
jae
jno
shlb
jns
add
push
pop
adc
push
lea
add
cmovp
mov
pop
stc
call
adc
push
mov
and
enter
mov
jecxz
sbb
fstpt
out
loopne
fcompl
or
aaa
inc
mov
inc
lods
mov
cmp
hlt
mov
push
mov
aad
sub
and
shlb
test
jae
push
int
stos
inc
mov
inc
aam
scas
in
in
mov
or
push
adc
lods
out
adc
cwtl
outsl
adc
aad
out
stos
lret
adc
and
pop
lahf
repnz
sbb
and
insl
add
sub
pop
mov
into
lret
int
and
dec
inc
fisttps
push
hlt
mov
mov
push
iret
xchg
inc
jecxz
fs
sbb
das
nop
mov
aam
lock
fwait
outsb
mov
das
xlat
cltd
jp
scas
mull
adc
inc
mov
jns
or
in
push
and
push
mov
mov
and
sbb
mov
mov
inc
scas
or
mov
arpl
adc
mov
inc
add
pusha
xlat
xlat
in
sbb
push
mov
inc
sbb
fs
sahf
std
in
or
repnz
mov
push
mov
iret
mov
cmp
mov
insb
inc
mov
adc
scas
pushf
jge
mov
add
cmp
pop
sbb
fcmovnbe
je
scas
sahf
jmp
fs
push
aas
shlb
ja
aaa
or
idivb
out
pushf
imul
scas
lcall
cmp
xor
pop
lret
addl
cmp
icebp
inc
stos
jecxz
ffree
iret
rcll
dec
push
push
adc
push
mov
fwait
out
negl
test
cmp
and
cmpsl
jae
mov
cmpsb
cltd
inc
inc
lcall
inc
cmp
jp
mov
inc
pop
sti
push
jbe
push
les
call
jmp
lds
sbb
sub
bound
jno
adc
jp
adc
sarl
sub
mov
rclb
ficomps
subl
lea
push
inc
pop
fidivrl
test
fisttps
out
bound
and
xchg
test
jb
dec
sub
xlat
mov
mov
pop
scas
test
gs
ficoms
shlb
in
pop
gs
cmp
leave
lret
xchg
dec
shlb
loope
push
sbb
add
repnz
and
aam
mov
nop
xor
imul
outsl
push
aad
push
push
mov
or
add
push
mov
add
int
add
bound
add
inc
sub
out
xchg
stc
cli
inc
fwait
out
cli
pop
xlat
test
cmpsb
orb
cmp
inc
and
push
dec
push
xor
lret
mov
ja
je
popf
icebp
in
xchg
mov
rclb
test
mov
inc
push
and
nop
js
adc
cmp
and
sub
jns
jmp
test
leave
cltd
xlat
stos
movsl
mov
out
int3
jmp
and
or
movsb
push
jg
filds
lock
add
push
jns
mov
mov
pop
repz
jmp
mov
pop
sub
cmp
call
clc
mov
push
mov
lcall
mov
lret
or
mov
mov
jmp
lock
sar
cmp
jo
data16
or
cmp
shll
clc
xchg
lret
dec
xlat
sbb
cltd
out
sbb
loope
fidivrs
and
xor
and
bound
push
push
stc
fs
mov
sbb
and
push
adc
xchg
cwtl
out
mov
jmp
inc
and
adc
xchg
out
rcrl
adc
adc
mov
les
and
fsubr
cmp
or
mov
les
repnz
xchg
test
cld
stc
push
sub
repz
clc
push
ja
mov
out
xor
or
fsubrl
dec
dec
es
sub
fwait
mov
pop
imul
daa
pop
loop
xchg
jbe
jge
cmpsl
jmp
xchg
mov
pop
pop
mov
lcall
sub
jne
sbb
and
mov
cwtl
fsubrs
lds
xchg
cmp
repz
pop
scas
cmp
in
mov
cli
popf
out
lea
sqrtps
stc
sbb
pop
sbbl
mov
movb
js
out
roll
xchg
add
repz
outsl
test
leave
add
int3
lds
dec
push
pop
je
insb
mov
cmp
in
cmp
dec
push
in
stos
movsl
jl
cmp
es
inc
cmp
ljmp
and
mov
push
addr16
nop
jmp
movsl
mov
sbb
nop
mov
sub
pop
int3
xchg
push
gs
push
iret
push
mov
xor
mov
push
mov
fildl
mov
push
shlb
sub
dec
or
adc
sti
or
aad
sti
xor
lea
jnp
into
pop
imul
inc
dec
ljmp
cmc
mov
out
and
pop
ljmp
mov
cld
or
insb
test
call
pop
test
xchg
dec
mov
cmp
out
lret
test
int
rorl
pop
test
cmp
fidivl
add
push
lods
fdivrl
insb
pop
fiadds
stc
aad
das
gs
mov
mov
aad
and
and
sbb
jg
mov
jg
inc
and
inc
sbb
test
arpl
and
test
imul
pop
cmpsl
cmpb
sub
inc
nop
xchg
lret
lret
jnp
inc
sub
aam
mov
ds
adc
mov
imul
movsb
inc
mov
enter
cmp
mov
cmp
adc
mov
and
inc
mov
test
inc
data16
aam
dec
arpl
into
jo
adc
adc
int3
dec
out
sbb
movsl
orl
and
or
and
jl
mov
int
test
rcr
lock
loopne
mov
cltd
dec
daa
xchg
les
mov
sbb
fchs
jbe
rcrl
mov
xchg
pop
cmp
sbb
push
fbstp
outsl
lods
jb
insb
cmp
addr16
or
adc
lret
or
or
jo
jg
jnp
in
in
fs
pusha
cmp
or
pop
repz
int
cmpsb
jmp
inc
push
scas
imul
insl
scas
pop
xchg
mov
adc
jno
dec
cwtl
das
test
or
and
sbb
shrd
adc
add
push
jae
repz
inc
sub
mov
inc
clc
adc
outsb
dec
dec
nop
data16
subb
jno
aaa
cs
pop
xchg
jmp
inc
out
sbb
in
in
in
int3
pop
stos
add
sub
inc
fsts
mov
dec
add
xor
out
or
jmp
addr16
daa
cmpsb
cmpsl
sub
movsb
stos
repnz
in
xchg
push
imul
add
clc
repz
sub
js
xchg
testb
insl
xor
outsb
mov
cmp
jo
test
sbb
pusha
xor
pusha
ret
sub
js
jp
and
dec
or
into
push
out
inc
in
sub
mov
into
lcall
pusha
add
mov
js
pop
or
jle
sti
pop
loop
jle
or
pop
mov
mov
movsb
mov
or
dec
sbb
ja
fstl
sub
cs
mov
iret
bnd
mov
inc
adc
in
xchg
xor
jmp
or
idivb
dec
xlat
or
imul
outsl
iret
dec
insb
add
push
js
lea
cmp
test
test
sahf
loop
push
inc
xlat
clc
adc
data16
sbb
cwtl
adc
jmp
pop
test
shrb
pop
mov
and
or
nop
push
loopne
movsl
pushf
into
out
sub
inc
fistpll
movb
inc
vphadduwq
sub
xchg
and
jbe
dec
mov
and
rorb
mov
popa
pop
lret
js
fisttpl
pusha
mov
or
je
mov
std
mov
pusha
or
inc
push
pop
cli
and
ret
call
mov
push
pushf
xchg
push
mov
loopne
adc
inc
sub
pusha
iret
push
add
icebp
xchg
test
fwait
mov
enter
cmpb
incl
into
or
cmp
or
es
xor
inc
out
shrl
scas
arpl
cmpsb
sbb
or
movsb
mov
adc
push
daa
aaa
inc
pop
inc
lds
lds
clc
dec
push
sbb
mov
ljmp
leave
popf
mov
dec
nop
mov
and
call
iret
and
in
or
inc
cs
mov
mov
fbstp
sbb
or
inc
sarl
imul
adc
add
or
imul
pop
cmpsl
dec
movsl
and
loopne
xor
mov
les
xchg
jns
and
in
jo
xchg
dec
jge
lock
fstpt
out
xchg
lds
xchg
xor
std
xchg
inc
xchg
sub
inc
ja
data16
push
cli
movsb
xchg
xchg
pop
aaa
push
cmp
and
xor
das
mov
push
push
hlt
lds
add
fsub
imul
arpl
sub
rorl
inc
out
pop
movsl
jecxz
sbb
test
pushaw
lock
adcb
test
sub
rorb
pop
stc
out
add
pop
rcr
add
cltd
movsl
pusha
test
lret
mov
mov
mov
push
jg
mov
into
and
jne
adc
cltd
scas
fwait
dec
and
pushf
cltd
pushf
addr16
aam
dec
mov
cmp
shll
add
pop
bnd
or
in
mov
xor
outsl
inc
pop
lods
in
fdivs
add
mov
and
sub
clc
insb
lahf
add
and
inc
adc
lods
inc
rol
mov
add
ret
mov
pop
orb
push
mov
pop
cs
mov
ret
fnstsw
stos
lods
sbb
jne
push
mov
xchg
mov
je
xor
xchg
out
nop
pop
loope
push
into
in
dec
not
lea
and
cmpsb
aad
mov
jecxz
push
sub
gs
xor
xor
out
ja
xchg
arpl
cmc
mov
out
fs
clc
in
mov
pop
adc
push
repz
movsb
mov
in
pop
push
mov
in
ror
pop
test
xchg
xchg
pop
xlat
jl
adc
dec
sbb
add
mov
push
stos
iret
cli
jns
std
movsb
rorl
ds
mov
xchg
mov
pop
in
rorl
int3
lock
jecxz
lahf
aaa
daa
inc
sbb
dec
jns
inc
addr16
dec
ja
jae
push
sub
xchg
cmp
mov
push
nop
dec
xor
out
push
in
cmpsb
lahf
jl
dec
mov
das
fidivrs
inc
add
sbb
aad
adc
add
test
out
in
mov
es
pop
fistl
pmulhw
pop
add
mov
mov
add
xchg
push
push
call
push
mov
ss
xlat
loope
mov
sbb
add
lahf
or
or
push
xor
inc
jno
lcall
fldcw
repz
xor
rcr
sbb
adc
pop
push
mov
icebp
je
cli
inc
mulb
push
retw
mov
orb
push
ret
insb
pop
push
ja
aas
dec
sbb
popf
cs
mov
mov
sbb
pop
xor
jnp
pop
mov
dec
mov
scas
inc
xorb
jae
mov
cmpsl
jg
add
loope
push
add
or
movsl
shll
add
shll
movsl
adc
dec
lock
mov
cmp
or
lret
scas
aam
add
push
fidivs
jne
jecxz
xchg
mov
jno
inc
stos
jne
sbb
xor
cltd
out
shlb
and
lahf
push
outsl
iret
lock
arpl
xor
mov
stc
mov
adc
sbb
pop
in
jo
mov
icebp
mov
fidivs
popa
repz
xor
adc
stos
es
cld
adc
sub
fcomps
cmpsl
arpl
sub
xchg
add
mov
in
loopne
inc
jge
mov
mov
xchg
xchg
fidivrs
sub
dec
sub
xlat
cmpsb
out
mov
adc
mov
dec
in
sbb
push
sbb
or
out
pop
push
pop
orl
xchg
dec
push
pop
xor
aam
ja
mov
xchg
mov
add
jbe
adc
fdivs
sub
mov
dec
lcall
dec
cmp
inc
icebp
cltd
dec
clc
scas
nop
or
iret
in
out
jb
sbb
inc
stos
xchg
or
js
pusha
js
jae
mov
push
jp
lret
xor
cltd
xchg
jmp
call
mov
push
enter
repnz
sbb
icebp
mov
push
stos
jmp
xchg
and
je
bound
std
push
sub
xchg
fisttpll
add
ret
cmpsl
test
xchg
inc
adc
add
inc
mov
xchg
cmp
jbe
in
dec
lret
pop
pop
jp
mov
fldl2e
adc
push
sarb
push
jge
jns
push
pusha
sbb
in
xchg
cmp
sbb
xchg
sbb
and
dec
sti
data16
sbb
mov
jmp
mov
arpl
adc
push
mov
xor
testb
cmp
cmp
cmp
lcall
pop
push
negl
xchg
icebp
adc
adc
mov
je
hlt
leave
or
in
lcall
jle
sbb
jle
dec
lret
jg
cmp
out
fwait
pop
hlt
cmp
nop
sbb
mov
scas
daa
cmpsl
out
pop
xlat
pop
stos
pop
mov
enter
stos
movsl
jno
sarl
mov
pop
lret
ficompl
mov
fucom
fs
mov
push
orb
inc
adc
adc
adc
inc
fnstsw
mov
test
pop
jmp
aad
sub
icebp
lea
add
inc
cmp
jmp
xchg
xchg
out
lret
unpcklps
out
cli
push
xor
lret
popf
sti
cmp
mov
rolb
mov
fdivrp
sahf
xchg
inc
ds
std
xchg
xchg
adc
fs
fldcw
ret
lods
imul
shl
jb
rcll
loope
push
cmpl
gs
shll
out
push
mov
pop
arpl
push
add
test
inc
int3
loop
insl
imul
xchg
stc
fsub
and
mov
movsl
add
mov
les
nop
stos
out
outsl
mov
jno
sub
inc
shl
ljmp
mov
lret
shr
mov
sub
out
inc
loop
loope
push
insl
xchg
setns
sbb
aas
add
cmp
pop
movl
sub
push
or
xor
mov
add
pop
test
enter
aas
out
cmp
nop
aaa
lret
gs
testl
mov
out
push
push
dec
push
xchg
add
jae
push
fwait
pop
outsl
lods
or
push
jmp
fxch
sub
cmc
mov
icebp
push
jmp
or
call
fidivrs
sbb
mov
arpl
push
pop
mov
imul
inc
adc
insl
xor
pop
pop
adc
ret
cmp
scas
in
and
cmc
dec
dec
ror
inc
les
sub
or
sbb
mov
adc
outsl
or
adc
out
sub
add
jmp
pop
pop
jmp
lods
int3
test
ds
sbb
lods
jae
aad
push
sub
and
shlb
or
test
lahf
int3
lods
pop
rol
mov
mov
or
stos
sti
mov
pop
push
mov
sbbl
gs
bnd
imul
fmulp
mov
out
mov
and
int
rorb
lock
push
xor
movsb
hlt
pushf
xchg
inc
mov
inc
push
sbb
jne
fnstcw
out
pop
mov
int3
mov
sbb
ret
mov
scas
outsl
stc
leave
xor
stos
aas
jnp
bound
jp
push
cmp
pop
jo
add
sub
int3
jmp
inc
add
ss
mov
inc
xor
movsl
out
std
cmp
outsl
jbe
in
push
cmpb
xchg
xchg
pushf
ret
xchg
and
rclb
cmpsb
add
sub
les
inc
pop
cmpl
cmp
negl
push
add
mov
sub
push
ret
arpl
xor
dec
inc
cmpb
push
xor
fcoms
outsb
lcall
jl
jmp
jge
js
aas
mov
cmpsl
cmp
wbinvd
xor
mov
daa
sbb
and
add
jge
mov
out
lcall
or
mov
out
inc
nop
fdivrs
pusha
sbb
adc
mov
jge
insl
adc
testl
and
stos
fwait
pop
loop
ret
mov
xchg
cli
std
xorb
aas
scas
or
je
cmp
arpl
loope
xor
inc
xor
cwtl
jbe
movsl
mov
mov
and
xchg
vpcomd
pop
lods
sbbl
adc
sar
sbbl
imul
add
lds
mov
xor
repz
jmp
shrb
mov
test
mov
lods
push
add
inc
mov
fucomi
addr16
mov
pop
lret
pop
xchg
mov
lahf
out
jno
inc
repz
pop
fildl
lock
mov
std
push
scas
jg
imul
lods
testb
cmp
ljmp
pop
fsubrs
jno
inc
pop
jns
fldl
clc
jnp
jo
cwtl
stos
outsl
fisttpll
hlt
push
and
sbb
jmp
rol
sbb
xchg
jl
mov
jg
jp
ds
pop
cmp
mov
mov
push
xchg
mov
push
clc
add
cltd
mov
cmp
sahf
rorb
fnstsw
mov
xchg
adc
and
jne
stc
mov
pop
cmp
inc
add
ret
rcrl
xchg
add
xor
cmpsb
dec
adc
out
negl
or
adc
mov
sbb
cmpsl
imul
imul
mov
mov
insb
test
fwait
cmpsb
fisubl
add
and
adc
mov
sub
dec
pushf
fildll
stos
incl
ds
push
push
fdiv
call
jnp
enter
xor
xchg
es
pop
les
mov
mov
adc
test
push
mov
scas
sbb
jne
sbb
lcall
adc
dec
pushf
push
xor
clc
cltd
int
sub
data16
ljmp
inc
cmpsl
pop
jecxz
sbb
pop
lret
test
in
inc
sti
pop
xchg
push
jb
popa
fldenv
mov
and
cmp
rorl
repnz
outsl
dec
xlat
int
leave
scas
jle
and
neg
jbe
add
loopne
js
and
mov
add
xchg
aaa
hlt
cs
pop
addr16
sbb
in
xor
dec
outsl
push
dec
lds
sti
aad
pop
pop
out
xchg
test
lret
and
test
fcomi
and
jge
dec
add
notb
mov
imul
push
pop
add
dec
inc
lock
fdivrl
inc
mov
pop
inc
mov
bound
jo
ljmp
test
hlt
adc
and
mov
out
stos
adc
inc
pop
fimull
negb
inc
or
add
iret
dec
and
mov
mov
clc
jle
ljmp
jae
pop
cli
sbb
out
popa
mov
add
mov
fs
adc
push
jmp
aam
fists
jl
ffreep
xor
push
aaa
xchg
xlat
inc
dec
repnz
mov
jo
nop
das
pop
loop
addb
sbb
push
in
xor
inc
shlb
int3
add
fidivl
ljmp
xchg
repz
xor
dec
test
mov
jnp
ds
dec
rorl
xchg
mov
dec
enter
notb
daa
loope
sub
outsl
mov
pop
iret
jle
mov
sbb
jbe
fdivr
jmp
dec
fiaddl
iret
jle
rolb
ss
sub
sbb
data16
xchg
lock
les
pop
loope
jmp
test
sbb
scas
cwtl
xchg
daa
outsl
mov
xlat
inc
sub
xchg
jne
jl
shll
xor
adc
mov
lods
xchg
cmp
imul
dec
jl
sub
mov
scas
jne
jl
dec
into
push
sahf
push
std
outsl
or
lea
push
or
lods
jns
subl
sar
frstor
push
cld
das
cmpsb
dec
test
data16
xchg
mov
insb
sti
cli
xlat
or
and
jg
xchg
push
popa
pop
dec
xor
aam
xchg
gs
jo
imul
in
adc
shl
cli
and
or
lea
aad
insb
ss
mov
jno
mov
mov
jg
cmp
leave
out
jmp
adc
cmp
imul
mov
loope
inc
jno
sbb
or
adc
push
inc
rclb
cmp
lods
jbe
dec
mov
jg
inc
or
ss
adc
dec
lahf
int
fcompl
sbb
mov
out
jno
ffree
into
jns
std
loop
dec
es
add
mov
pop
pop
in
cmpsb
pop
movl
jecxz
insl
jo
dec
arpl
sub
out
dec
lahf
popf
add
cli
jg
mov
sub
ja
movsl
lds
cmp
fistps
aas
xchg
push
cmc
daa
xchg
mov
xor
jae
push
pop
sub
mov
and
pusha
std
add
cmp
test
inc
pop
es
fwait
xchg
rcll
pop
aam
ljmp
xlat
pop
es
leave
mov
inc
mov
test
imul
std
mov
mov
mov
lret
clc
in
sti
push
and
or
adc
and
adc
inc
je
pop
clc
pop
cld
inc
movsl
add
inc
push
cmc
mov
jle
mov
add
cmp
test
or
mov
and
movsb
fists
push
aaa
nop
aas
outsl
xor
adc
mov
icebp
insl
es
cmpsl
dec
pushl
cmp
mov
xchg
aas
arpl
pop
inc
fcoms
ss
dec
jbe
mov
cmp
adc
cld
idivb
in
paddb
icebp
iret
shll
fadd
jle
xor
pop
repz
imull
negl
rclb
adc
in
xchg
fsubs
add
out
fs
mov
add
inc
in
insb
sarb
inc
orb
jno
cmp
sbb
fdiv
sbb
aad
xchg
in
xchg
jl
adc
cmp
cmpsb
insb
cmp
xor
sahf
data16
insb
rorb
insl
cmpb
pusha
rclb
jmp
inc
dec
nop
sbb
clc
shl
loopne
dec
pop
cmp
jb
div
mov
jle
lcall
shrb
stc
cmp
lods
stos
out
pop
movsl
dec
adc
inc
leave
xor
jle
and
add
adc
pop
loop
out
movsl
ljmp
and
mov
fucom
mov
dec
or
adc
jmp
inc
rorb
rcll
in
and
ljmp
xchg
outsb
and
cmc
cmp
lret
mov
rorl
dec
adc
addps
addr16
pop
jge
ret
lret
and
jo
and
push
jmp
or
data16
lret
out
push
pop
lea
mov
test
dec
enter
insl
call
sub
adc
loopne
dec
nop
scas
hlt
cmp
cld
or
lods
sbb
mov
xor
push
stos
std
cltd
adc
outsl
xor
pushl
push
add
cmp
xor
js
jl
in
pop
cs
xchg
inc
add
ss
jmp
mov
dec
pushf
pop
repz
repz
fdivr
or
inc
add
cmp
ds
negb
scas
sub
mov
cmp
cmpsl
sub
loopne
xlat
addl
push
mov
mov
cmpsb
clc
pop
iret
arpl
sbb
xor
xor
adc
je
cld
cs
xchg
sub
loope
cs
mov
lret
cwtl
adc
mov
pop
andb
cwtl
rorb
out
fistl
aad
mov
decb
adc
mov
pusha
mov
add
xchg
repz
std
mov
mov
outsb
imul
inc
popf
popa
push
scas
sub
cmp
shlb
xor
mov
movsl
sbb
lea
xor
mov
sahf
mov
not
inc
add
cmpsl
scas
scas
xchg
loopne
insl
mov
pop
inc
enter
imull
or
pop
jle
jle
arpl
or
mov
cli
daa
mov
testb
scas
sarb
dec
adc
outsl
icebp
dec
cmp
out
mov
add
pop
or
rcll
xlat
pop
mov
and
sub
subb
push
hlt
mov
mov
enter
jno
sar
ret
mov
or
jge
xchg
cmp
pop
fidivs
cmp
mov
mov
push
aad
mov
insl
mov
sub
xchg
fs
xor
cmp
xchg
lock
sbb
nop
push
cmp
jae
pop
in
adc
ss
mov
aad
and
rorl
clc
imul
lret
int
sbbl
ss
jne
fs
inc
popf
inc
jb
data16
subb
lods
or
pop
addb
adc
fildl
insb
push
rcll
bound
cmc
pop
pop
lods
jmp
xor
push
pop
push
imul
fstpt
loope
imul
shlb
sub
out
dec
out
cmpsb
xchg
and
andl
cmp
push
push
test
jnp
mov
stos
loop
dec
dec
add
inc
push
lods
int
call
inc
int3
in
mov
repz
pop
sbb
mov
xchg
stos
push
dec
or
addl
popf
cs
jle
pop
jl
and
pop
pop
ret
out
inc
fwait
xchg
mov
ficoms
popf
mov
ja
jo
push
fwait
inc
adc
notb
out
paddusb
push
enter
push
mov
mov
xchg
test
in
mov
aaa
movsl
inc
mov
and
adc
mov
leave
out
ret
push
repnz
xchg
into
inc
stos
xchg
mov
cmp
stos
inc
or
mov
outsb
sarl
xchg
inc
inc
dec
sbb
cmp
lea
ds
cwtl
jb
test
xchg
movsb
outsb
int3
test
cld
and
nop
mov
sub
mov
inc
repz
sub
lea
inc
or
mov
lea
scas
arpl
sbb
sub
shl
cmp
and
xlat
lahf
sahf
pop
jbe
mov
ja
and
clc
call
jmp
mov
sarl
in
cmpl
mov
nop
adc
out
sbb
dec
dec
adc
mov
add
enter
ljmp
lret
sbb
lds
xor
or
mov
mov
sbb
jge
pop
pop
aas
xlat
add
in
or
and
cmp
dec
ja
dec
es
mov
adc
or
xchg
sbb
mov
push
pop
mov
add
cmp
in
adc
das
pop
dec
add
adc
and
pop
aas
fs
push
mov
xlat
jl
pop
mov
jecxz
or
out
xchg
or
or
mov
aam
lcall
out
cmp
mov
mov
lods
mov
jnp
xchg
cmp
call
pop
div
push
cmc
es
insb
daa
or
ficomps
sub
or
loope
sub
and
cmpb
lods
call
aad
xor
push
sub
xor
cmovle
adc
mov
fstps
icebp
icebp
loop
adc
clc
scas
sahf
mov
ret
insb
push
mov
jle
stos
and
sti
in
int
inc
add
popa
push
aad
test
sub
arpl
and
adc
adc
psraw
in
jp
adc
mov
scas
out
iret
insl
mov
xchg
mov
mov
cltd
xchg
pop
cld
sbb
mov
idiv
out
into
retw
add
pop
pop
es
mov
or
cmp
xor
call
sbb
sbb
cmp
addr16
negb
pop
jle
lcall
sbb
stos
jno
out
ljmp
dec
shrb
aad
into
ds
out
test
cmp
loope
bound
icebp
pop
daa
imul
sbb
sbb
out
xor
push
inc
aad
hlt
add
lock
jno
sbb
jo
adc
pop
pop
mov
inc
nop
daa
cmc
push
mov
fldt
je
enter
and
cmpl
loopne
mov
dec
loop
cmpsl
or
sti
bsf
pop
das
sub
inc
jno
ss
push
mov
into
into
add
fistpl
movsb
fwait
lods
inc
aas
out
push
out
xor
and
push
cwtl
xor
xlat
mov
mov
push
test
repz
jae
dec
ds
cmp
add
mov
mov
lea
das
inc
andb
jns
pop
and
leave
lods
lds
aad
sar
adc
sti
outsb
stc
ja
fs
xchg
or
xchg
push
add
xchg
ret
push
nop
xor
stos
imul
or
int
leave
xchg
push
xor
rcl
das
cmp
jmp
push
hlt
daa
insb
stc
leave
dec
fcmovu
add
xlat
push
add
mov
inc
adc
sbb
shll
lret
lea
mov
mov
xor
sahf
nop
lret
faddp
mov
pop
xor
ljmp
xor
and
fdivrs
into
ficomps
sbb
cmpsl
ja
xchg
xor
sahf
les
xchg
insb
push
lea
decb
in
in
insl
daa
stos
inc
or
dec
addb
lea
add
add
adc
jg
loope
ficomps
ret
lock
aas
cmpsb
rcrl
push
jns
arpl
ljmp
movsb
pop
test
cmp
jp
hlt
pushf
push
pop
in
push
addr16
lods
fcmovnbe
pop
cmpsl
leave
sub
lahf
mov
xchg
jnp
fisubrl
jl
inc
jo
shll
lock
cmp
jg
and
sti
ficoms
in
test
or
stos
cld
push
fnstenv
dec
mov
stos
dec
xor
jns
insl
imull
pop
pop
out
into
xchg
lea
sbb
fcomp
pop
dec
push
out
rorl
or
out
xchg
and
in
inc
lahf
pop
dec
in
test
es
xor
push
imul
adc
nop
cmc
mov
sub
dec
lods
imul
push
sub
pop
jg
pushf
fsubs
lds
push
cltd
inc
jge
gs
sub
pop
push
mov
scas
call
xor
pop
sub
xchg
call
fdivrs
xchg
jle
fistps
dec
adcl
iret
ljmp
mov
pop
sbb
adc
cmpsb
stos
sub
sbb
aad
dec
or
sbb
sahf
fiaddl
mov
dec
or
test
sbb
pusha
lds
push
cmc
pop
push
fs
pop
hlt
fsubl
dec
cmc
pop
push
pop
inc
add
xor
xor
nop
push
sbb
pop
adc
add
in
inc
jmp
fidivs
xchg
cmp
stc
test
push
xor
jno
fiaddl
adcl
int3
mov
int3
mov
je
repz
dec
mov
push
dec
push
cli
jle
cmpsb
cmpl
mov
test
fstpt
mov
mov
cltd
xor
nop
lock
dec
cmpsl
or
popa
dec
outsl
xor
mov
enter
add
sub
jp
jnp
jo
xchg
arpl
in
test
cmp
scas
lcall
insl
sbb
nop
ja
je
jp
pop
jne
rorb
lahf
fidivl
test
loope
push
nop
adc
rol
in
dec
jge
int3
mov
adc
xchg
or
inc
xchg
imul
int
test
addr16
cmp
xor
in
cmpsb
push
sti
inc
loopne
and
jo
int3
xchg
mov
cmp
xor
adc
je
cmc
mov
xlat
pushf
pop
stc
dec
cld
xor
xchg
push
cltd
fidivl
xor
int3
push
mov
xchg
push
dec
ljmp
jbe
push
and
divl
pop
dec
clc
lret
or
xchg
in
cmpsb
rolb
xchg
mov
or
push
es
inc
dec
dec
jle
add
mov
cmp
mov
cmp
xchg
adc
out
mov
cltd
xor
lods
mov
out
jl
cmp
aam
mov
jge
adc
push
cmp
jae
insb
movb
mov
and
nop
dec
insb
shrb
pop
lahf
loopne
icebp
push
andl
jnp
and
pusha
mov
popf
push
ss
dec
xlat
cmpsl
test
mov
filds
lods
cmp
testl
sub
dec
adc
pusha
jecxz
fstpt
sahf
inc
orl
outsb
stc
incl
add
cltd
cmpsb
scas
call
scas
clc
or
jns
dec
adc
sbbb
test
xor
push
push
fwait
xchg
inc
mov
test
clc
mov
pop
mov
les
fldt
mov
idiv
loop
sbb
cwtl
mov
into
mov
add
daa
imul
mov
out
push
and
iret
mov
inc
lcall
std
mov
cmp
mov
jnp
jecxz
sub
js
roll
outsb
mov
sti
cmp
add
aad
inc
pop
ds
pop
push
jge
iret
cs
jecxz
cmp
adcl
mov
or
or
sub
jmp
cmp
xor
imul
popf
rorb
mov
arpl
inc
sbb
push
movsb
xchg
aaa
movsl
sub
or
xchg
out
das
mov
pop
fbld
fnstenv
jo
andl
rcrl
les
add
ds
pop
xor
pop
scas
push
in
data16
popf
pop
nop
or
push
sbb
cmpsl
outsl
and
and
and
shlb
jne
or
aad
lods
bound
adc
sub
jmp
adc
pop
out
call
out
adc
mov
adc
and
add
andl
rcrb
mull
mov
and
sub
icebp
push
cld
push
jne
jnp
enter
mov
ljmp
je
push
pop
and
push
xor
test
dec
mov
cmp
pusha
add
jbe
cltd
cmp
cmp
loop
adc
push
push
jb
mov
mov
push
imul
sub
jb
sti
fs
sub
bound
in
mov
cmp
fisttpl
popf
push
inc
incl
insl
dec
outsl
mov
jne
jb
sub
pop
imull
fwait
mov
pop
pushf
pop
insl
mov
repnz
data16
xorb
sbb
inc
add
mov
into
pop
and
sti
mov
dec
push
loopne
sbb
mov
fs
mov
mov
fs
lret
pusha
jle
aad
fisubl
outsl
or
test
sub
xchg
jb
ret
out
inc
inc
push
ss
stos
roll
andl
sub
mov
xor
push
mov
pushf
rorb
notb
jne
rorl
fisttpll
das
stos
shr
std
sbb
or
popl
mov
fists
loope
push
lods
rorb
jbe
xlat
mov
sbb
xchg
out
loopne
rcll
sub
shlb
jno
rol
imul
aad
loope
push
in
cmpsb
and
shr
out
leave
pop
push
push
add
push
push
and
loopne
test
and
scas
sbb
add
ljmp
mov
sbb
ficompl
push
lods
movsb
fwait
imul
scas
jp
mov
in
stc
test
and
jbe
xchg
push
test
call
pop
dec
ret
dec
aaa
lea
lea
pop
xor
mov
dec
push
incl
int3
fsubrp
and
and
outsb
add
fimull
fsubrl
push
test
das
mov
mov
mov
push
cmp
push
out
xchg
int3
mov
and
mov
pusha
xchg
adc
pop
dec
add
jp
adc
push
das
pop
aad
and
ljmp
out
dec
dec
or
icebp
sbb
in
xchg
cltd
jb
inc
jg
mov
xlat
rcrb
dec
nopl
and
and
mov
lret
stc
xchg
outsl
mov
jg
mov
test
stos
sarb
xorl
bound
icebp
call
stc
sahf
mov
js
fisttps
adc
xchg
sahf
push
or
push
sub
push
mov
in
and
mov
pop
sti
xor
mov
xor
call
mov
pop
lds
fmul
cmp
inc
push
push
stc
or
popa
sbb
xchg
dec
adc
jb
cmp
aaa
mov
rolb
jge
sahf
repz
and
nop
xlat
cmpsb
out
aas
mov
scas
dec
or
lods
out
xlat
fwait
add
outsl
pop
cwtl
cmpsb
inc
mov
mov
push
aas
or
push
leave
pop
hlt
jb
sub
push
cmpsb
jb
sbb
xlat
lret
push
sar
or
imul
dec
or
idivl
xor
aad
and
fstpt
pushf
xchg
dec
cmp
test
inc
pop
push
mov
adc
mov
ret
pop
test
sarl
lea
jle
jg
inc
and
outsl
sub
js
fwait
pop
push
repz
cmp
mov
or
sbb
push
xor
add
xchg
sbbl
sarl
cmp
lds
jne
cmp
cmpb
loope
int
leave
stc
cmp
push
or
xor
or
sbb
adc
push
sub
in
cli
mov
loope
jmp
mov
or
je
cmpsl
push
out
jg
mov
cmp
xor
jb
ffreep
fwait
scas
mov
adc
ja
fldenv
leave
cmp
aaa
inc
shlb
xor
adc
lahf
ret
inc
pop
inc
mov
xchg
out
push
and
lret
add
daa
aad
jno
dec
mov
dec
jb
shll
out
lock
xorb
xchg
cmc
mov
test
and
pop
cltd
pushf
add
jecxz
cmp
mov
cmpsl
pushf
shl
repnz
mov
mov
jno
das
mov
je
or
xlat
ret
cli
lcall
std
dec
inc
sbb
adc
adc
cld
loopne
and
or
or
jmp
outsl
jl
mov
sub
cli
aaa
push
fdivl
mov
popa
loop
push
test
sti
sbb
icebp
pop
movsb
gs
cmpsl
xorl
popa
test
aam
nop
mov
cmp
jmp
mov
xchg
scas
mov
jecxz
jp,pt
leave
adc
add
sub
icebp
insb
and
int
out
xchg
and
test
sub
inc
fisubl
sbb
dec
js
mov
push
icebp
xor
scas
in
pop
outsb
jnp
lret
xchg
add
cli
cmp
inc
std
sub
adc
stos
dec
filds
or
in
dec
sbb
and
add
jb
outsb
not
fsubrs
dec
scas
jg
shll
adc
cwtl
aas
loopne
xor
or
loopne
icebp
jb,pn
and
cld
push
out
or
add
pop
nop
sbb
pop
sub
mov
adc
lds
repnz
sti
in
jmp
pop
ficompl
mov
jae
and
les
sub
in
leave
push
mov
loopne
jl
mov
ja
stos
pop
or
sbb
pop
jnp
imul
fdivl
loop
lods
std
mov
pop
es
mov
popf
dec
cmp
sbb
mov
pop
cmpb
clc
adc
pop
shrl
mov
jnp
fwait
das
push
mov
cmp
fldt
mov
push
and
sub
enter
sub
in
xor
aas
add
jp
subl
xchg
daa
in
pop
xchg
int3
mov
xor
or
pop
adc
adc
fisttpll
xchg
inc
sub
aad
add
out
fcomps
cmp
push
dec
dec
out
push
jae
mov
or
shrb
adc
push
sbb
dec
sbb
lods
mov
fnsave
push
loopne
lahf
inc
mov
mov
sub
ljmp
gs
pop
cmp
xchg
xor
test
xorb
cmp
bound
data16
fiaddl
or
mov
cmp
mov
xchg
mov
sbb
mov
aaa
cmp
popf
sti
pop
push
hlt
loope
xchg
xchg
jecxz
mov
push
nop
lds
inc
pop
add
sub
push
lret
movsb
xchg
or
push
cmp
dec
pop
out
insb
lret
jp
push
pushf
dec
cwtl
fwait
repz
jno
sbb
jae
xor
mov
in
push
ret
mov
popf
push
sahf
adc
jb
nop
sub
pop
into
add
dec
jnp
sahf
xchg
fstpt
xchg
push
xor
push
xor
fwait
shrl
inc
xchg
pop
mov
sbb
js
pop
out
and
sbb
fsubs
shr
das
sub
add
xchg
jmp
hlt
fisttpll
xchg
rorb
sub
pop
mov
nop
cs
sub
jl
ljmp
xchg
mov
ds
popa
fldl
outsl
rclb
insl
pop
rolb
mov
xchg
in
movntps
fwait
test
insb
or
out
sbb
dec
pop
lods
ficoml
or
stc
mov
jns
andl
jne
add
pop
fldenv
out
imul
test
call
jmp
fisttps
push
pop
mov
daa
dec
xlat
xor
xchg
subl
mov
push
icebp
out
adc
gs
push
and
imul
push
xchg
cmp
mov
lock
cs
jns
fsubp
xor
jnp
imul
add
dec
mov
mov
pop
ret
mov
sub
cmc
daa
pop
rolb
fbstp
leave
dec
inc
push
cmc
jbe
and
pop
inc
fs
bound
push
test
in
icebp
orb
js
cmp
jp
pop
rclb
orb
push
push
fsub
cwtl
enter
test
mov
hlt
mov
stc
aam
enter
ds
cmp
inc
fs
xor
outsb
jg
scas
and
mov
dec
xor
xchg
adc
fsub
stc
test
pop
adc
jno
xchg
aad
imul
pop
cmp
test
pushf
xchg
pushf
cmc
dec
in
mov
leave
ja
clc
xchg
out
call
push
jle
outsl
mov
movsl
or
xchg
xchg
jge
push
nop
mov
cmpsb
shll
xchg
mov
cs
loope
stos
xor
mov
sbb
rcll
mov
ss
jns
inc
lods
mulb
test
jb
mov
clc
je
xorb
popa
pop
xorb
mov
ds
daa
shrb
sti
pop
mov
daa
mov
leave
out
jp
rorl
sub
test
out
int
and
cmpsb
add
jo
sbb
jp
inc
mov
out
and
sub
dec
movlhps
lock
lret
ljmp
cmp
mov
mov
insl
leave
and
testb
test
stos
xlat
mov
mov
cmp
xchg
pop
dec
dec
pusha
std
pop
mov
cmpsl
or
cwtl
cltd
cmpsb
push
sahf
xchg
cmpsl
or
sbb
lcall
paddusw
xchg
in
sub
test
mov
xor
aas
cmpsb
xchg
popa
imul
or
push
push
aas
popf
or
dec
push
sub
data16
test
cli
test
lods
fiadds
imul
in
push
int
push
cmp
mov
sbb
iret
jbe
push
lods
or
ficoml
or
cmp
pop
xchg
push
sarb
pop
pop
or
jp
mov
jbe
int
xor
into
jl
repz
sti
mov
jle
icebp
jecxz
lgs
test
adc
jmp
das
loope
call
sti
andb
ljmp
xlat
inc
mov
pop
movsl
push
xchg
stc
sahf
xchg
rcrb
std
sbbl
lret
push
leave
imul
fnstcw
pop
pusha
inc
cltd
add
aas
and
lahf
out
pop
sarl
sbb
out
es
iret
scas
stc
xor
push
cmpsb
jo
mov
mov
sbb
aam
mov
push
int
rcrb
mov
pop
jle
outsb
leave
incb
sahf
outsl
mov
push
mov
jle
xor
xor
add
add
sub
jno
add
and
daa
mov
adc
sbb
dec
pop
mov
cmp
or
in
lock
add
xor
pmullw
into
fisubrs
outsb
jbe
xchg
ljmp
push
inc
cmc
in
mov
ret
lret
ljmp
or
out
push
stc
je
lods
add
mov
jecxz
xchg
mov
ficoms
mov
loop
popf
jae
daa
sub
mov
idivl
adc
loopne
sub
add
xor
shrb
and
jbe
pop
xor
fldenv
pop
pop
and
jns
xchg
sub
dec
jge
sub
dec
and
mov
jb
bound
adc
push
adc
lret
fs
jne
push
out
sub
mov
es
int
adc
cli
mov
jae
inc
xchg
xchg
adc
fwait
xor
cli
std
mov
push
or
popf
pop
xor
shrb
xor
imul
leave
loope
or
push
out
repz
and
shrl
and
sbb
pop
mov
xchg
cmpsl
cs
xor
pop
roll
stos
lock
jbe
ljmp
pop
ljmp
mov
cmp
jmp
int3
jno
pop
rcrl
jne
pop
adc
clc
les
pop
int3
jbe
pushf
fstl
sti
fldcw
cmp
in
mov
jnp
adc
add
cmpsb
inc
lods
jl
mov
out
test
fs
popf
test
xchg
jbe
addr16
mov
dec
subl
dec
adc
leave
jp
lahf
insl
hlt
push
loopne
lock
in
and
jae
mov
dec
cli
push
cmp
into
jge
pop
cmpsb
data16
pop
repz
add
out
imul
jne
xchg
cs
sub
push
jecxz
inc
fidivrs
enter
out
adc
mov
lds
mov
xor
mov
mov
pop
lods
fs
xor
fwait
dec
mov
test
incb
push
push
and
mov
repnz
cmc
pop
clc
xchg
xor
mov
shlb
cmp
je
push
add
inc
lahf
mov
in
pop
push
fiadds
movsb
rolb
mov
xor
fsubrs
inc
rclb
sub
xchg
pushf
subb
dec
sti
jbe
lret
fstpt
aaa
mov
filds
cmp
mov
lea
insl
sbb
jge
imul
mov
scas
nop
jp
outsb
push
lds
cmp
dec
xor
outsl
mov
add
pop
cmp
xor
cmp
insl
sub
cli
lahf
add
adc
pop
fwait
imul
adcl
xlat
add
dec
sub
icebp
mov
pushf
lock
mov
pop
mov
pop
dec
icebp
rclb
insb
repz
jge
jo
rorl
push
jnp
jo
decb
movsb
mov
ffreep
mov
push
mov
and
in
push
sub
xorb
mov
sub
dec
loop
testb
in
std
fsubs
mov
fstpl
or
mov
out
gs
cmp
jmp
mov
push
pusha
or
jbe
jno
mov
dec
aam
les
dec
and
ja
in
ss
pop
jns
shll
xchg
sub
ja
lahf
and
mov
mov
inc
sahf
std
out
cltd
jb
mov
mov
movsb
inc
cwtl
ss
xchg
sbb
jo
add
daa
rcrl
cmpsl
out
mov
cmp
sub
dec
sub
xchg
stc
inc
xchg
or
jle
jecxz
fwait
icebp
adc
dec
ror
add
js
sub
je
das
xchg
inc
push
icebp
inc
imull
push
repz
pop
pusha
popf
dec
into
mov
dec
jmp
mov
add
fcmove
inc
dec
mov
add
add
arpl
sbb
bsr
scas
aaa
jnp
in
lret
pop
adc
and
jmp
repz
mov
cmpsb
jmp
popf
rcrl
xor
lock
stos
lcall
and
xor
dec
push
adc
fimuls
lods
nop
imul
ja
insl
dec
dec
xchg
or
jns
mov
sbb
in
inc
aaa
adc
sbb
mov
testl
mov
cmpsb
nop
add
and
push
daa
jo
mov
dec
pusha
rcr
test
imul
lret
iret
sbb
and
mov
adc
sar
xchg
ror
jmp
push
adc
orl
jmp
sub
insl
mov
imul
insl
or
ja
lret
lock
ss
push
mov
lahf
incb
jge
cs
cmpsb
push
mov
and
aam
xor
popf
xlat
rorb
dec
pop
outsl
or
mov
fs
and
xchg
jnp
andl
cmpsb
jge
and
hlt
cmpsl
push
add
cmp
and
inc
daa
push
lds
push
icebp
andb
sbb
xchg
mov
mov
nop
xchg
in
lret
in
sbbl
mov
into
mov
pop
xor
dec
adc
dec
fs
popa
and
movsb
adc
xor
mov
or
pop
xor
push
pop
jl
clc
gs
push
pop
ret
mov
aas
xchg
mov
push
sub
pop
mov
shrb
xor
nop
mov
ret
aas
xchg
icebp
mov
rorl
in
imul
mov
fsubs
loopne
push
aas
mov
out
je
jmp
inc
dec
movsb
adc
jbe
sbb
movsb
mov
push
push
pusha
push
int
mov
cs
out
cmpsb
jecxz
jo
into
repz
iret
adc
loope
movsb
enter
mov
fnsave
inc
loope
or
push
and
or
mov
out
mov
data16
scas
jmp
arpl
add
add
pop
js
fdivs
lret
mov
dec
aad
lahf
and
in
lahf
push
fstpl
test
lea
and
add
jp
popf
jp
push
or
cmc
or
fcoms
loope
shl
scas
mov
decb
jmp
dec
xchg
inc
cmp
loop
and
cmp
sub
ljmp
sbb
mov
sti
inc
les
xor
push
mov
mov
out
and
xor
in
jae
les
mov
mov
adc
lds
mov
subl
push
js
cmp
es
and
adcb
stos
jmp
repnz
jns
dec
mov
add
inc
clc
xchg
inc
or
pop
lds
adc
adc
lods
daa
repz
shrb
fistpll
sub
je
mov
mov
loop
xor
mov
call
imul
mov
mov
mov
jo
fidivs
popf
iret
mov
push
lret
jnp
inc
rorl
cmp
cmp
adc
add
aas
aaa
add
pusha
out
and
mov
xchg
out
and
adc
or
mull
xchg
cmp
dec
sub
jecxz
movb
adc
fidivrl
lds
cmp
ss
lahf
insl
add
inc
sbb
int3
jb
and
sub
aaa
cmc
sti
mov
pop
sub
jnp
shrb
jecxz
sub
lock
inc
xchg
ficomps
testl
xchg
pop
imul
ljmp
adc
and
mov
xchg
orl
sub
dec
popa
lods
xchg
lods
jmp
xorl
outsl
pop
fbstp
clc
pop
jmp
inc
lcall
add
aad
and
mov
jmp
xchg
xchg
cmc
dec
adc
fldl
rclb
in
jmp
jmp
ret
daa
popf
push
aaa
test
aam
or
jns
add
sbb
cmpsb
push
jno
inc
adc
xchg
add
mov
decb
xor
aam
inc
or
mov
push
outsb
call
cmpsl
jmp
fdivr
xchg
or
dec
js
mov
cmp
sub
push
fisubl
scas
push
lcall
cmp
insl
xor
test
push
adc
jno
pop
daa
sbb
mov
sbb
mov
mov
dec
mov
out
sbb
xor
xchg
cltd
jb
push
mov
or
aad
or
xchg
mov
jb
mov
es
js
cmpsl
xor
pop
push
ja
jo
xchg
pop
mov
call
icebp
pop
add
sub
xlat
loope
mov
xchg
daa
push
mov
mov
fsubs
xor
in
add
lea
outsl
hlt
mov
mov
notb
adc
xchg
pusha
js
xor
fistps
pop
lea
push
sbb
sbb
or
or
inc
lahf
std
movsl
mov
insb
int3
ljmp
xor
push
sub
lock
cltd
xchg
clc
daa
xor
lods
and
jo
pop
pop
jmp
mov
rorb
xchg
mov
xchg
jl
pop
pop
mov
dec
movsb
push
xchg
insb
shll
rcrl
add
cmp
jns
mov
js
and
sub
mov
xchg
jnp
and
je
lods
inc
adc
movsb
mov
lret
pop
arpl
js
jb
inc
dec
xchg
push
push
pop
mov
mov
xchg
sub
or
pop
mov
mov
inc
push
jmp
push
pop
push
scas
adc
out
and
dec
xor
shll
sbbb
test
jae
out
mov
jge
mov
sbb
jae
add
lock
aaa
jmp
sbbl
and
arpl
xor
out
xchg
fisubrl
push
popf
pusha
adc
push
je
movsb
aam
hlt
xchg
pop
cmp
sbb
xlat
push
cmpl
xchg
add
cwtl
add
dec
cmpsl
inc
cmp
lcall
call
lahf
ret
call
and
pop
repnz
pop
or
dec
push
int
movsb
add
into
mov
repz
pushf
push
inc
or
repz
xlat
dec
adc
test
lcall
jno
in
movsb
dec
outsb
pushl
cmp
inc
test
fmulp
cmp
lods
mov
aad
loopne
scas
scas
xchg
lahf
cmp
scas
fmull
jg
dec
popa
cmc
push
pop
mov
popa
jne
xchg
jle
in
mov
add
adc
cmp
xor
ret
sarb
dec
push
and
push
mov
out
pop
adc
pop
inc
test
push
mov
out
or
cltd
pop
test
push
aaa
mov
movsb
mov
sahf
sbb
xchg
rorb
pop
repz
cmp
inc
mov
pop
add
xchg
xchg
mov
cld
pop
loopne
sbb
stc
xor
shlb
xchg
es
je
pop
jle
fxch
jae
push
jmp
divb
aad
imul
rorb
clc
inc
loope
and
jmp
imul
shlb
fwait
pop
inc
inc
xor
leave
stc
in
sbb
cmp
fstl
sbb
xor
adc
out
ljmp
xor
outsb
test
or
jle
addr16
lea
fistpl
jge
bndldx
add
into
pop
test
sbb
or
mov
mov
pop
ja
cmpsl
pusha
sub
ja
stos
stc
sbb
push
mov
outsl
sub
sub
sub
sbb
cmpsb
pop
inc
out
adc
repz
jge
pop
cmp
lods
movsl
jge
adc
cmp
inc
mov
inc
scas
jecxz
push
pop
or
sub
inc
jl
in
cli
ret
shrl
ds
xchg
sbb
mov
lods
negl
inc
push
mov
ret
cmp
mov
mov
mov
call
mov
sub
push
jle
cmp
sbb
mov
in
sbb
push
rcrl
pop
xchg
fdivs
leave
push
xchg
xorl
cmp
stos
mov
cltd
cmp
es
cli
cmpsl
sub
sbb
icebp
sarl
xor
in
mov
lret
pop
icebp
repz
push
lock
enter
pop
mov
rolb
shll
jp
addr16
shl
jnp
cmp
add
inc
mov
imul
and
adc
mov
jnp
out
movsl
arpl
push
fldt
frstor
cmp
dec
and
repz
hlt
in
cmp
icebp
nop
mov
mov
cli
adc
mov
jno
mov
js
xlat
sub
push
cli
mov
jl
notb
test
jnp
or
inc
cmp
adc
loop
add
rorl
mov
and
push
jge
jg
push
and
inc
jecxz
jae
mov
insb
rcll
push
push
mov
mov
push
fidivl
mul
jae
jb
cmp
mov
mov
adc
xchg
adc
cmp
fdivrl
test
lahf
ljmp
jle
outsb
dec
rorb
inc
pop
mov
cli
test
sub
in
xor
orb
jge
decl
fdivs
mov
xor
xor
adcb
inc
fsubrl
loope
imulb
pop
xchg
sub
popa
cmp
sbb
shrl
xchg
push
nop
sbb
lret
adc
dec
push
dec
and
outsl
sar
cmp
push
dec
shl
fs
out
in
xchg
lds
or
mov
pusha
jns
cwtl
fs
push
aam
sub
dec
daa
mov
add
jl
cs
sti
jbe
movsb
mov
mov
push
inc
or
ja
fwait
in
mov
scas
xchg
xor
stos
pop
inc
mov
add
dec
xor
outsb
adc
aam
bound
and
cmovae
inc
xchg
or
popa
push
outsl
mov
push
add
jbe
hlt
bound
enter
neg
push
arpl
aaa
mov
daa
xchg
sarl
mov
mov
pop
roll
xchg
jecxz
imul
movsl
lock
sbb
roll
jp
push
jge
sub
lock
cmp
and
ss
call
int3
xchg
dec
test
add
lods
pop
lahf
inc
mov
fildll
mov
sbb
cld
imul
inc
mov
lods
mov
in
lret
xchg
or
movsb
and
xor
shr
mov
mov
pop
arpl
inc
sbb
dec
pushf
test
jns
mov
inc
out
cwtl
lcall
dec
mov
lds
xor
pop
fadd
vmovlps
icebp
nop
sub
pop
test
js
cli
mov
mov
pop
jnp
popa
pop
xor
dec
das
jl
data16
fnstenv
mov
jg
stos
adc
lea
nop
dec
in
arpl
pop
out
insb
jae
adc
or
les
ss
fiadds
lcall
jmp
ror
push
in
mov
push
hlt
andl
add
icebp
imul
insb
cwtl
sub
xor
iret
dec
dec
stos
add
nop
jmp
pop
mov
js
rep
sub
aas
stc
cli
mov
movsl
dec
add
pop
push
add
jmp
push
fwait
sarb
jo
fcompl
addl
movsb
shrl
shrb
mov
leave
mov
add
and
sbbl
mov
fildll
stos
cwtl
ja
das
scas
jmp
inc
pop
jb
lea
out
js
fstps
loopne
out
mov
fwait
add
pop
mov
ja
loopne
inc
cmpsl
fnsave
cmp
call
add
xor
fdivs
mov
mov
push
mov
lock
xor
fsts
repnz
xor
repz
rolb
dec
shrb
or
stos
pop
in
mov
out
jge
loop
nop
faddl
xchg
xchg
loope
out
imul
dec
dec
pop
sub
aad
cmp
pop
mov
add
jae
xor
mov
cmpsb
out
movsb
test
lods
mov
gs
pop
mov
fildl
mov
out
xchg
lret
ret
popf
repz
arpl
adc
mov
out
loope
popa
filds
dec
push
and
int3
push
sbb
aad
pop
ret
xchg
inc
mov
popf
push
rcrb
ds
enter
pusha
jp
dec
sbb
jne
clc
mov
loop
cs
jecxz
insb
mov
xor
push
in
test
in
mov
or
xchg
int
cltd
imul
push
or
pushf
sbb
stos
sbb
sbb
push
jmp
lret
add
cmp
and
push
or
cmp
cs
adc
out
mov
jge
test
xor
lahf
orl
pop
aad
mov
push
repz
xchg
in
add
fldt
loope
mov
pop
out
sbb
subb
das
lahf
and
jae
or
mov
mov
jns
mov
mov
and
jge
cmpsb
cmp
mov
xor
jnp
shll
stos
inc
jnp
inc
imul
sub
sub
bound
push
loope
gs
stos
outsl
hlt
dec
hlt
fistpl
test
inc
pushf
adc
pop
and
pop
jne
sbb
cmp
and
mov
enter
xchg
push
push
mov
enter
scas
add
movsb
or
bound
call
mov
outsl
addl
push
popf
repnz
insl
idivb
sbb
fnstcw
cmp
bound
fnstenv
movl
hlt
sbb
ljmp
xor
pop
adc
dec
dec
pop
fsubl
push
and
lods
inc
fadds
dec
mov
inc
inc
mov
or
pop
xchg
jno
andb
mov
add
sub
test
cs
outsb
xchg
jecxz
pop
jg
mov
cltd
adc
mov
dec
les
push
mulb
std
rorb
jge
xchg
xor
ja
pop
cmp
sbb
je
fbstp
jbe
nopl
sub
addr16
ss
pop
mov
nop
jne
stc
clc
mov
das
inc
push
mov
fisttpll
adcl
cmp
and
cmp
or
int
lods
dec
out
movsb
notb
stc
lcall
cld
mov
push
pop
mov
dec
mov
lds
push
jp
jl
xchg
divw
adc
push
fcoml
das
xchg
mov
out
int3
adc
mov
out
decl
insb
add
jmp
sub
dec
test
cmp
xchg
pop
push
mov
mov
call
movb
in
push
into
leave
pop
push
cli
mov
dec
out
fiadds
xchg
jle
ds
mov
cmpsb
jno
fs
jns
shll
out
add
sarb
and
mov
loope
inc
cs
out
sbb
pop
insl
and
dec
ss
adc
test
jae
test
xchg
mov
add
cmp
sti
xor
push
jmp
dec
add
test
js
enter
xor
negb
mov
xchg
jg
adc
mov
push
adc
loop
pop
dec
push
xor
xor
ss
sbb
pop
push
cmp
ds
mov
sbb
stc
mov
xlat
push
pop
sti
xchg
jmp
and
out
gs
xchg
insl
sahf
adc
xor
out
rorl
push
test
pop
fwait
iret
test
inc
push
jp
dec
jb
movsb
cmp
enter
lret
jecxz
xor
pop
adc
das
inc
pop
scas
pop
pop
sub
pop
jg
mov
les
cmpsl
pushf
mov
dec
in
sbb
sub
mov
les
and
xchg
out
lahf
mov
adc
xchg
xchg
rorl
adc
loopne
cmp
push
ss
aaa
mov
sbb
dec
jbe
mov
ja
idiv
lods
rcll
aas
je
addb
jecxz
jp
lods
jns
lea
push
sub
pop
sahf
push
insl
fmul
mov
gs
jne
mov
adc
jne
fstps
mov
insb
ja
cmp
fldl
sahf
mov
push
xchg
stc
fwait
imul
cmpsb
aad
aaa
ret
pop
xchg
dec
std
sbb
out
mov
fdivs
or
xchg
cmc
sbb
ja
adc
mov
cltd
and
xchg
mov
fdivrs
shlb
popf
xlat
test
add
xorb
inc
js
or
adc
push
mov
in
mov
fisttpll
add
mov
xlat
out
repz
mov
xchg
adc
outsb
jne
xor
test
lods
pop
mov
sarb
repz
mov
push
scas
xlat
and
fistpll
inc
lahf
cltd
mov
or
ret
pop
inc
and
fwait
add
aad
mov
lea
ret
test
adc
test
int3
xchg
das
mov
xchg
dec
adc
mov
in
inc
jne
imul
xchg
sar
or
pop
adc
jecxz
or
shrb
push
sub
or
mov
push
mov
int
jle
in
fistps
rolb
jecxz
out
push
mov
int
cld
loopne
xchg
test
stos
xor
and
or
xor
mov
or
mov
mov
ds
push
ud2
mov
sarb
lcall
sbb
mov
insl
mov
test
loop
inc
cmpsl
int
gs
xor
sub
sahf
mov
mov
xorb
fisubs
lds
xchg
sbb
mov
movmskps
adc
insb
fnsave
jecxz
filds
pop
add
repz
fistps
iret
mov
loop
cmp
in
pop
push
cmp
insl
sbb
add
icebp
loope
pop
nop
insb
jb
andb
adc
mov
shlb
int3
icebp
addl
mov
push
test
jno
push
dec
xchg
mov
popa
push
or
stos
cld
stc
sti
sbbl
xchg
dec
gs
inc
into
jp
push
jno
mov
cmp
mov
das
std
mov
popa
rep
imul
stc
out
cltd
jge
jbe
push
leave
xor
jno
pop
cmp
xor
imul
negb
test
fwait
inc
hlt
xor
ss
leave
test
test
mov
shlb
loop
ljmp
in
pushf
int3
data16
cli
test
adc
leave
out
pop
fbstp
pop
cmp
cmp
pushf
jmp
rcll
mov
insb
dec
movsl
aad
rorl
cmp
mov
aam
or
sbb
sarl
jp
jmp
cs
movsl
inc
repnz
sub
test
mulb
jno,pt
out
aas
add
enter
aam
add
mov
out
shlb
sbb
fistl
fxch
into
mov
aad
fists
js
lock
mov
out
ja
gs
clc
dec
dec
jp
fistpl
mov
jp
or
pop
jecxz
or
push
mov
pop
dec
dec
push
sub
and
and
nop
sahf
xchg
sbb
lock
cltd
test
into
and
fnstcw
mov
pop
shl
mov
ret
mov
bound
xor
mov
in
jne
cmp
scas
mov
push
shr
gs
in
nop
xor
outsb
add
or
mov
pop
adc
mov
jg
imul
dec
fidivs
xchg
daa
cmp
clc
std
push
gs
aaa
and
mov
stos
lret
jecxz
call
hlt
addb
add
inc
jne
push
std
js
sbb
add
int
rcrb
subps
cld
mov
or
fidivs
dec
xchg
dec
sub
xor
mov
outsb
insb
adc
pop
dec
pop
push
inc
adc
jge
les
push
mov
test
mov
std
sub
cmc
jge
cmp
stos
adcb
lds
mov
aam
mov
or
imul
mov
push
je
outsl
ljmp
push
xchg
cli
out
cmp
inc
mov
or
adc
push
call
push
mov
lods
loope
add
pop
xchg
in
push
push
mov
mov
sbb
xchg
cmp
jb
aam
stos
dec
lods
fnstenv
and
sti
sub
inc
jno
push
pop
inc
lea
scas
cmp
outsb
cltd
gs
inc
push
add
mov
lods
scas
mov
pop
dec
add
add
jge
dec
sbb
das
push
pusha
mov
cmp
fxtract
stos
add
loopne
sbb
add
jecxz
add
enter
mov
hlt
les
dec
bound
add
sarl
xor
jmp
add
ds
xchg
push
mov
sbb
pop
aas
push
data16
jg
mov
dec
ret
in
test
mov
sarb
je
pushf
arpl
dec
mov
jp
mov
nop
sbb
imul
lds
push
cmpb
cmp
aam
adc
push
sub
push
adc
mov
jae
movsl
cmpsb
jo
aas
pop
mov
xchg
popf
stos
arpl
sub
or
mov
inc
dec
jae
aas
mov
mov
out
mov
cmpsw
pop
dec
sbb
aaa
jns
jl
lea
out
leave
inc
add
insb
into
cmpsb
pop
pop
shrl
add
pop
iret
mov
lds
lock
std
scas
xchg
in
cmpsb
sbb
pop
push
pusha
and
xor
in
lds
mov
add
jnp
jo
data16
xor
add
in
add
out
mov
and
push
shll
rdpmc
mov
xor
add
fsubl
sbb
inc
mov
jno
lea
adc
mov
pop
dec
mov
and
cld
or
loope
fld
jo
adc
jae
push
arpl
ja
mov
insb
sub
stos
lods
xchg
mov
dec
call
pop
pop
sbb
inc
enter
addr16
fnstsw
push
mov
nop
jge
jb
lret
out
add
xchg
je
push
pop
lcall
ret
push
add
cmp
mov
mov
loope
lods
dec
add
inc
repz
cld
int
int
out
std
in
mov
ja
xchg
adc
add
dec
adc
fcmovnb
xor
mov
push
xchg
lock
dec
add
push
push
mov
test
nop
out
xor
add
sbb
call
into
ljmp
clc
fldt
push
in
inc
shll
das
mov
add
lret
xchg
ss
pop
int3
lret
mov
mov
inc
or
call
sbb
adc
xor
cwtl
js
jge
and
jp
or
jnp
jg
push
nop
mov
pop
xchg
aad
fiaddl
jb
push
pop
mov
xor
and
xchg
lcall
adc
repnz
cld
pop
xor
dec
push
cmp
js
dec
fnsave
je
sbb
mov
sbb
popa
dec
push
test
push
jecxz
gs
xchg
xor
rcr
jb
mov
aas
je
inc
mov
cmpsl
stc
inc
inc
jl,pn
mov
stos
add
pop
or
nop
xorb
lds
test
js
fsts
sti
inc
push
testb
xchg
dec
lea
pop
pop
mov
add
cltd
cmp
fsts
lods
lods
pusha
push
enter
sbb
xlat
data16
emms
iret
mov
pushf
jg
mov
push
mov
inc
inc
insb
sub
ss
mov
lret
imul
sub
dec
dec
andl
jb
scas
ljmp
imul
adc
mov
into
xchg
sbb
daa
out
ljmp
aad
push
lret
jp
or
xchg
add
jge
add
bound
mov
js
sub
xchg
mov
int
sub
popf
pop
mov
inc
cs
inc
fcoms
addb
fnstsw
adc
loope
ja
push
dec
andl
popa
mov
movsb
mov
ret
mov
cmpsb
mov
ljmp
ds
cmc
sub
pusha
inc
jmp
in
dec
and
cmp
ss
sub
jbe
mov
add
mov
add
int3
mov
pop
or
das
or
loopne
cltd
sbbb
popl
daa
add
mov
mov
stc
sub
mov
icebp
negb
bswap
ja
or
push
mov
repz
lret
jmp
out
repz
and
cmp
and
mov
push
ret
jg
popa
and
adc
cmp
cmp
mov
sarb
mov
movsl
pop
test
leave
mov
push
and
loop
cmp
xor
dec
xchg
xchg
sbb
push
subb
push
or
sbb
sbb
or
adc
shrl
and
es
js
and
mov
push
jno
imul
push
jp
dec
leave
jmp
add
fistpll
aaa
in
pop
mov
loope
sub
pop
inc
mov
push
hlt
pop
cwtl
psubw
adc
cmc
into
push
xor
mov
call
daa
les
mov
je
xchg
cmpb
or
jge
in
int
das
rcl
je
jns
sahf
pop
push
call
mov
outsl
jbe
ja
divb
or
sub
call
push
sbb
aas
dec
xchg
cmp
sub
jl
inc
out
mov
push
insl
push
mov
or
mov
aam
into
lods
inc
int3
jae
adcl
pop
lret
xchg
inc
into
jp
je
mov
dec
sbb
inc
aad
push
dec
cmpsl
cmp
add
adcb
sbb
or
jnp
hlt
js
lods
fiadds
pop
pop
or
xor
mov
dec
add
xchg
icebp
adc
cli
nop
push
mov
jl
ficoml
and
movsl
movaps
lret
jl
jne
lret
fcoml
push
adc
adc
rolb
scas
fcompl
mov
scas
xchg
cmp
addr16
sub
jge
mov
std
data16
sbb
outsl
test
add
cmpsl
add
xchg
push
xchg
sbb
inc
mov
pop
or
fdivrl
fistps
or
aaa
popf
mov
insl
xchg
jmp
sahf
test
insb
shll
pop
push
jmp
jl
inc
andb
mov
lret
cmp
movsl
cmp
sbb
pushf
and
rorb
inc
pop
leave
and
or
or
movsb
cmpsb
xchg
mov
add
ds
mov
jns
cmp
es
test
cmp
xor
sub
fdivrl
push
mov
addr16
cmp
or
in
xchg
cli
adcl
push
push
push
daa
cmpsl
xchg
add
pop
loopne
push
popa
dec
shll
dec
xor
loope
fnstcw
fdivs
mov
out
pop
orb
sbb
insl
cmp
xor
mov
dec
dec
ret
shrb
and
sti
mov
flds
inc
movsl
sub
push
adc
ret
and
and
lret
inc
sub
or
jp
repnz
inc
mov
lcall
loope
aas
sub
movsl
in
sbbb
loopne
mov
jo
sbb
lods
lea
and
clc
xchg
push
add
testb
mov
add
mov
sahf
xchg
dec
movsl
push
or
push
idivb
mov
popa
sbbl
sub
in
icebp
lea
outsl
shl
stos
pop
mov
xchg
push
js
add
ja
push
jge
jle
loop
gs
xchg
push
dec
js
dec
dec
fdivl
js
sbb
sbb
dec
testl
icebp
and
mov
out
pop
jns
lds
cmpsl
in
cs
jecxz
mov
mov
push
jle
clc
shr
cmpsb
in
loope
mov
fs
xchg
enter
and
push
jae
lret
rcr
or
xchg
cmpsl
hlt
dec
push
bound
lret
add
imul
dec
hlt
or
ret
js
stos
cmpsl
cli
push
int
ret
xchg
mov
popa
test
lret
mov
pop
adcl
mov
inc
sahf
inc
adc
inc
jmp
mov
mov
push
pushf
jnp
mov
cmc
lods
jno
dec
popf
jb
loope
fisubrl
out
fcmovne
xchg
sti
stc
popf
mov
test
add
lods
push
inc
daa
inc
or
sbbl
xor
testb
sahf
fstl
dec
test
ror
call
and
jnp
insl
push
int3
sahf
std
push
inc
xchg
sub
hlt
aaa
je
push
sbb
test
xchg
xchg
roll
insl
rcll
iret
test
and
mov
mov
sahf
add
cmp
and
aas
bnd
xor
aaa
js
pushf
pop
mov
lret
stc
jno
bound
lds
insb
adc
cmp
in
dec
mov
adc
mov
dec
xchg
cmpb
js
pusha
jecxz
or
or
out
pop
pushf
mov
lods
add
fs
jo
das
push
fists
pop
repnz
dec
loopne
xchg
int
movl
test
mov
sbb
or
lret
das
sahf
add
ds
or
clc
jae
cli
jge
lret
jo
loopne
testl
dec
outsl
lock
js
test
bsf
sub
and
cltd
aad
xorl
int3
jnp
sub
inc
rorl
pop
mov
in
sbb
adc
aaa
daa
mov
dec
cwtl
pmaxsw
iret
out
ss
out
jae
inc
xorl
es
inc
sub
scas
pop
pop
dec
mov
pavgw
out
rorl
or
jmp
pusha
adc
sub
lret
xchg
arpl
dec
mov
pop
popa
adc
jmp
aas
ja
or
ja
mov
jne
or
repnz
cld
hlt
ss
sbb
mov
add
push
jb
push
js
icebp
lods
inc
xor
andl
frstor
into
dec
icebp
and
sub
mov
jns
cwtl
sub
rcll
popa
int
xchg
clc
jb
and
cwtl
mov
lret
ljmp
mov
push
cmp
adc
mov
es
cmc
mov
jns
add
or
rcll
dec
push
xchg
and
pop
clc
insb
fxch
int
cld
imul
imul
xor
fsubp
lahf
test
leave
xlat
pop
sbb
lret
cltd
jb
fisubs
in
add
pop
arpl
fwait
lods
inc
adc
ds
sub
pop
sbb
flds
sub
out
in
or
or
dec
enter
test
rcr
pop
jge
mov
xor
add
pop
pop
fcompl
fwait
adc
or
and
jl
xchg
int3
jae
dec
ret
push
mov
or
pop
or
xchg
dec
inc
pop
ja
and
stc
and
rorl
and
jae
pushf
scas
test
pop
int
out
sti
stc
out
mov
pop
add
jl
lret
jmp
inc
daa
add
adc
sti
loop
pop
fsubr
add
shll
xor
add
adc
in
pop
mov
mov
scas
inc
mov
lcall
das
repnz
lea
inc
repz
mov
inc
lret
dec
stc
push
gs
dec
push
dec
call
repnz
push
in
mov
shlb
mov
les
popa
xor
cmpsb
lcall
jmp
cmpsb
inc
xchg
nop
jns
es
adc
sub
ss
ljmp
push
sbb
dec
xchg
pop
mov
fisttps
mov
sbb
mov
ret
xchg
or
dec
push
xchg
out
out
shl
test
inc
cmpsb
fdivrl
dec
xchg
lds
das
jle,pn
rolb
sub
xchg
pop
hlt
xchg
stos
pop
popf
jne
std
xor
sbb
mov
pop
jle
or
lret
sbb
push
addl
in
and
mov
movsb
push
xchg
mov
pusha
jp
call
xorb
in
xchg
push
lea
ret
mov
repz
push
pushf
bnd
jl
xchg
filds
or
xor
xchg
into
or
fxch
hlt
mov
je
or
and
xor
mov
xchg
push
inc
mov
mov
mov
iret
adc
mov
hlt
out
mov
lds
inc
lods
adc
loope
sar
or
pop
push
cmpsb
repnz
sbb
pop
xchg
fbld
popa
sub
int3
rcl
insl
das
mov
incb
inc
in
xor
pop
das
out
xor
in
xor
shll
push
inc
xchg
xor
push
xor
lds
shl
fsts
data16
cmp
cmp
push
adc
popf
cmp
push
mov
sbb
sbb
stos
aad
push
fstpt
and
andl
cmpsb
push
push
push
fimuls
or
xor
push
insb
xor
mov
adc
js
sub
mov
cmp
loope
mov
push
lea
jp
sbb
and
pop
andb
aad
xor
sbb
mov
mov
sub
push
mov
stos
test
enter
jl
std
clc
cli
cmp
mov
or
cmp
and
dec
cmp
sub
lea
out
sub
movsb
pushf
jle
lahf
mov
ret
imul
loopne
stos
cmp
xchg
push
xchg
jne
adc
lret
or
or
ror
aad
fwait
loope
enter
mov
xor
mov
stc
lock
int
fldcw
data16
sbb
mov
add
or
push
in
shrb
fldl
inc
pop
cmp
mov
xor
dec
xor
adc
mov
jecxz
shlb
ss
xor
xchg
iret
rol
pop
inc
pop
lock
inc
les
jge
ds
sbb
lret
cwtl
fmull
inc
divl
or
mov
lods
or
pusha
mov
fimuls
add
imulb
shll
mov
ss
push
outsl
sbb
inc
ja
mov
mov
and
jbe
cmp
pop
test
push
outsl
sarb
jns
pushf
imul
lret
sbb
add
adc
add
add
fisttpl
add
push
jno
jb
push
call
mov
jl
xor
pop
icebp
ficompl
jo,pt
push
enter
lahf
loope
pop
leave
out
cmp
jo
xchg
push
push
push
iret
push
jmp
xor
flds
mov
ds
dec
es
fldenv
add
imul
inc
xor
inc
xor
inc
mov
inc
sub
mov
es
sub
mov
or
mov
int
and
jb
and
stc
pop
pop
daa
clc
xlat
loope
lock
or
gs
aad
or
int
adc
lret
rcrb
xchg
mov
or
dec
scas
push
out
push
sub
xchg
push
testl
dec
movsb
add
mov
das
xor
jne
xchg
jb
cmpsb
mov
ja
daa
adc
test
xor
out
and
stos
sbb
out
pushf
fdivl
push
jbe
fdivrs
mov
mov
repz
fimull
in
jg
repnz
cmp
int3
pop
sbb
add
inc
inc
jae
mov
andb
dec
mov
cmp
push
push
pop
bound
sub
push
adc
call
fs
ss
sbb
loopne
xor
or
mov
jnp
cmp
imul
push
jecxz
cmp
mov
aaa
mov
sbb
xlat
jnp
ret
rcrb
push
jl
in
sub
shrb
sahf
or
cld
push
mov
and
dec
aas
icebp
outsb
lret
push
inc
imul
mov
xor
cmp
leave
add
mov
fiadds
push
xor
dec
loope
cmp
mov
sbb
stc
fiadds
out
hlt
pop
inc
and
xorb
outsb
xchg
push
or
movsb
mov
adc
cwtl
adc
jb
outsl
or
repz
jge
mov
add
xor
lcall
rcrb
sub
sbb
mov
xchg
add
fsubrl
dec
hlt
sub
in
pop
outsb
pop
push
mov
xchg
jo
xchg
push
mov
gs
push
pushf
adc
lret
adc
cmp
cmovle
push
ljmp
cli
andb
insb
popa
pop
lock
lret
jle
cs
shrl
into
xchg
inc
addr16
fcompl
jb
aaa
dec
xor
inc
push
aam
inc
insl
or
fs
aam
movsl
lods
dec
xchg
mov
ret
fldt
popf
push
sti
jnp
adc
cmpsb
rorb
dec
add
test
into
sbb
push
xchg
push
inc
jns
mov
add
jp
push
dec
movsb
pop
and
xor
sub
xor
pop
jmp
shr
inc
add
insb
js
pop
incb
test
mov
outsb
jo
aad
test
je
fldt
scas
mov
fsts
mov
push
xchg
faddl
repz
jmp
lea
rcrb
xlat
outsl
add
push
and
hlt
jp
and
mov
mov
xchg
cltd
sbb
adc
xchg
inc
mov
jo
mov
out
jae
dec
mov
add
cwtl
push
call
daa
jecxz
fimull
sbb
lret
dec
sete
bound
cmpsl
push
fadds
popa
push
and
mov
mov
movsl
cwtl
out
dec
dec
stos
into
pop
jp
movups
add
fisubrl
and
inc
sbb
jle
jecxz
and
ljmp
sub
movsb
adc
gs
scas
and
pushf
inc
cmp
dec
adc
mov
int
push
push
test
cmpb
les
jmp
out
push
lock
add
and
sub
in
enter
sub
shrb
dec
sub
inc
ret
cmp
es
push
outsb
aam
jp
adc
add
jnp
add
and
imul
xchg
cs
add
outsl
out
dec
scas
iret
scas
ss
stos
sub
movsl
fst
sub
cmpsb
add
jnp
and
js
cmp
push
addl
dec
fs
pop
ja
xchg
mov
or
push
fs
nop
xor
cs
inc
negb
fmull
call
and
dec
inc
cmp
pop
je
and
js
and
cltd
mov
adc
sub
sbb
push
negb
mov
mov
dec
bound
mov
popf
xchg
sbb
shl
cmp
jp
xlat
les
mov
xor
adc
outsl
lods
lret
das
sub
repnz
hlt
ss
dec
xchg
es
xor
inc
inc
pop
sbb
les
jle
dec
mov
lret
orb
mov
inc
pop
rcrb
std
sbb
out
std
out
push
pop
test
nop
out
xchg
fs
cld
adc
int3
hlt
adc
ds
mov
jmp
stos
mov
mov
ret
or
lcall
call
cmp
arpl
cmp
call
jmp
out
add
mov
aam
and
test
pop
sub
leave
clc
icebp
cmp
lods
rcll
jl
subb
mov
shrb
shrl
test
ffreep
lds
inc
pop
add
or
les
push
cmp
sarl
pop
adc
xchg
jns
inc
or
jl
scas
arpl
mov
adc
leave
pusha
push
aad
push
std
enter
popf
js
cld
mov
mov
mov
shll
mov
mov
movsl
xor
xor
in
test
pop
mov
jmp
pop
dec
cs
filds
sub
inc
mov
int
mov
fstps
fldenv
sub
scas
insl
jae
add
inc
inc
fimuls
cmpsb
ljmp
xchg
mov
cmp
pushl
xchg
cli
xchg
pop
adc
stc
and
mov
shrb
mov
inc
hlt
add
fbld
xchg
sbb
int
jecxz
cmp
fistps
dec
in
adc
push
lret
xor
flds
ds
jecxz
adc
rclb
popf
icebp
xchg
pop
js
cs
xchg
stc
fisubl
jne
inc
test
pop
xchg
push
int3
and
aad
fwait
stos
mov
push
hlt
pop
sti
test
pop
cmc
divl
fdiv
dec
jbe
mov
push
fstl
js
push
repnz
jl
hlt
cmp
int
out
xchg
cmp
xor
addb
sub
fisttps
jae
sub
pop
call
mov
icebp
inc
adc
shl
inc
mov
add
stos
adc
xchg
xchg
mov
adc
inc
dec
outsl
pop
jl
inc
sub
mov
xor
jle
xchg
and
add
pop
icebp
testl
xchg
xchg
push
andl
mov
pop
jbe
sti
adc
sub
mulb
xorl
fwait
ret
iret
aas
daa
xor
daa
ret
adcb
push
out
repnz
mov
cld
adc
pop
mov
push
ret
or
or
dec
enter
sarb
xchg
aas
cli
inc
cld
ss
stc
fcomps
out
sbb
cli
cmp
mov
dec
insl
jne
sub
fsqrt
mov
push
and
std
mov
sub
es
shll
cmp
inc
outsl
fwait
mov
dec
add
jns
pusha
inc
mov
in
imul
sbb
cwtl
movsb
sub
pop
das
aas
mov
mov
pushf
std
mov
das
rorl
movsb
push
ljmp
mov
jbe
xchg
into
xchg
lods
mov
pop
jl
ss
js
outsb
ficompl
lods
or
ds
cli
outsb
sbb
adc
jg
jbe
dec
lds
sbb
pop
dec
jb
adc
lock
xchg
movsb
std
out
loopne
mov
adc
mov
mov
loop
dec
push
sub
xor
sub
or
test
sbb
pop
and
out
dec
adc
scas
mov
sbb
mov
push
jl
dec
jge
sub
adc
outsb
pop
adc
xchg
aaa
enter
out
ljmp
outsb
fldenv
mov
push
fldt
xlat
sbb
push
dec
rcl
insl
fistpl
or
sbb
or
lahf
jo
pop
outsb
sub
inc
shrb
dec
push
fs
mov
mov
push
nop
daa
int3
jmp
or
shll
cmp
popf
pop
fsub
inc
ds
or
aaa
sbb
cli
xchg
add
inc
pop
imul
mov
sub
adc
repz
push
sti
jo
jb
dec
popf
and
mov
imulb
into
mov
cwtl
push
leave
adcl
int
or
jecxz
mov
shr
enter
rcl
mov
mov
dec
pop
pusha
fiaddl
test
push
push
adc
push
pop
lea
cmp
ret
mov
frstor
das
mov
mov
aaa
test
out
inc
jg
fisttps
dec
jl
pop
mov
push
dec
or
mov
je
cmp
xchg
pushf
das
test
sub
cmp
pop
pop
outsb
push
fdivl
mov
int
pushf
addb
int3
sub
lods
pop
jne
mov
dec
adc
into
lods
jmp
lahf
sarb
daa
cmp
stc
jae
add
jbe
pop
loop
fiaddl
cld
mov
outsb
sarb
pop
int3
sub
cmpsb
jmp
add
je
addb
mov
nop
ds
lret
clc
xor
xchg
xchg
dec
sbb
xchg
pop
iret
fcmovne
cmpsl
cmp
sbb
mov
lret
aas
in
loopne
test
fildl
insb
popa
cmp
adc
sbb
lret
push
sarb
ljmp
mov
sbb
inc
sahf
cmp
add
adcl
jl
mov
lahf
cmp
pop
xlat
push
push
mov
shll
sub
or
adc
and
cwtl
or
dec
mov
or
add
mov
and
or
xor
repz
cmp
mov
mov
mov
jg
nop
sub
push
mov
sbb
mov
push
cmpsl
in
cld
xchg
aas
mov
inc
out
hlt
ja
xor
mov
mov
inc
je
and
jmp
test
pop
les
shr
push
push
lods
pushf
sbb
dec
call
xchg
jg
mov
sbb
push
push
daa
dec
jbe
cmp
daa
mov
jbe
sub
and
add
gs
clc
in
js
adc
xlat
cmp
jg
cli
jl
popf
or
les
xlat
stos
sbb
je
je
int3
add
in
sbb
add
mov
repnz
adc
cs
stc
fdivrp
imul
movsl
or
add
xor
dec
leave
out
fs
bound
lds
hlt
jl
int3
lock
dec
psrlq
dec
push
aad
negb
in
and
test
dec
loope
imul
movsl
mov
fidivrs
xorl
ret
mov
cmpsl
or
dec
inc
cmp
push
cmpl
xchg
cld
sarl
insb
pop
cli
mov
fwait
arpl
out
insb
aad
das
inc
mov
std
ret
out
and
sahf
push
xchg
pop
or
xchg
test
and
inc
xchg
lret
xorb
enter
jmp
out
jg
insb
sub
repnz
pop
adc
js
mov
mov
mov
out
sub
lcall
and
stos
hlt
jae
cmp
mov
bound
in
pop
xor
ljmp
dec
inc
pop
adc
cmp
mov
nop
insl
pop
sub
sub
lret
jns
inc
nop
cli
push
pop
jg
in
lods
inc
sbb
mov
pop
inc
jo
in
cld
gs
jg
shlb
pop
mov
or
cli
lcall
aaa
mov
aas
aas
xchg
inc
in
in
or
dec
lock
inc
aas
sbb
das
pop
ss
inc
xor
and
sub
pop
push
rolb
jns
not
clc
xor
sub
addr16
call
jp
leave
xor
enter
adc
iret
fcompl
cmc
pusha
aam
mov
iret
xor
mov
jmp
outsl
inc
xchg
pushf
sbb
movups
jns
cmp
pop
mov
cmpsb
mov
lret
out
int
sbb
mov
fnstsw
repnz
leave
mov
mov
inc
mov
xchg
movsb
push
mov
repnz
test
mov
pop
bound
dec
mov
fldt
and
rorb
mov
sbb
xchg
outsb
sub
cmpsb
inc
and
je
and
add
into
iret
sub
mov
xor
dec
pop
cmp
dec
xchg
jne
loopne
add
xor
lahf
or
pop
xor
paddw
xchg
mov
movsl
cld
je
mov
push
or
int3
push
dec
jo
sub
mov
inc
inc
mov
mov
shll
in
cmp
mov
js
jnp
ljmp
lahf
push
sub
jmp
aam
out
push
sarb
imull
cmpb
add
mov
hlt
xchg
push
cmc
pop
inc
pop
clc
xor
or
jno
jnp
pop
xchg
mov
adc
add
sbb
scas
push
or
pop
movsb
xchg
les
imulb
mov
sbb
orb
sub
mov
dec
mov
push
xor
xor
lods
xchg
mov
rolb
aam
sbb
sti
lock
adc
mov
call
das
idivb
xchg
xchg
insl
pop
and
and
lcall
clc
mov
lds
ret
jg,pt
add
pop
fimuls
mov
mov
dec
divb
std
inc
inc
or
addr16
in
push
and
fisttps
dec
imul
movsb
aad
imul
les
das
mov
mov
cltd
add
int
jp
pop
push
jl
in
xchg
out
sub
in
pop
fsubl
jg
jne
mov
xor
cmp
add
jl
sbb
rcll
insb
sub
lret
pop
andb
xor
or
lock
fiaddl
clc
sbb
orl
mov
sbb
mov
jne
lret
fnsave
xchg
xchg
mov
xchg
iret
sub
fldl
sbb
movsl
imul
pop
xlat
imul
notl
inc
sbb
loop
sbb
push
aas
cmp
gs
in
in
mov
sbb
cmp
and
dec
scas
enter
cs
jecxz
inc
test
pop
cmpb
cmp
sbb
in
loopne
and
ljmp
dec
ds
xlat
cmp
and
fmulp
sbb
loop
xchg
shll
mulb
lcall
mov
imul
enter
pop
jae
mov
inc
insb
pusha
test
mov
mov
imul
movsb
sbb
scas
xorl
js
rcr
mov
idiv
lcall
inc
mov
insl
outsb
xchg
push
pusha
ret
xor
adc
mov
jae
mov
sub
jge
in
arpl
cmp
lods
or
pop
mov
inc
rcll
xor
idiv
fs
ret
call
or
and
je
mov
cmp
dec
ds
popa
inc
ljmp
xlat
cmpsl
test
inc
xor
mov
pop
aaa
pop
addr16
mov
adc
lods
dec
aas
sti
aas
mov
sub
ret
or
nop
leave
daa
cmp
loop
pop
xor
lcall
fistpll
sub
in
mov
dec
xor
add
inc
shrl
cld
sbb
mov
mov
add
imull
in
sub
mov
cmpsl
push
jg
or
and
mov
sub
test
mov
mov
addl
cmp
sbb
scas
sub
pop
arpl
xchg
mov
push
sahf
push
enter
in
cwtl
push
aam
addr16
cmpsb
push
popf
and
lahf
movaps
xor
jecxz
lods
jecxz
js
mov
lods
mov
data16
je
insb
cld
xor
popa
mov
dec
add
mov
xchg
mov
mov
sub
inc
loop
mov
inc
daa
sub
or
nop
push
or
cmp
or
lahf
stos
push
loop
xchg
insb
xor
repnz
in
jb
inc
cli
ja
lahf
mov
bound
enter
sti
mov
les
stc
fs
xchg
scas
scas
push
inc
mov
xchg
sub
or
lret
cmp
out
sbbl
push
inc
pushl
and
hlt
fistpl
hlt
out
mov
cmpsl
arpl
clc
adcl
pusha
pop
sub
scas
mov
js
in
mov
gs
lock
adcb
cmp
cmp
mov
pop
push
ljmp
jle
jnp
jmp
inc
ret
push
push
out
jo
and
icebp
cmp
mov
lds
dec
push
filds
fdivrs
xchg
jo
and
mov
xchg
std
frstor
pop
jo
mov
ret
loopne
lret
roll
int3
xlat
clc
movsl
sub
int
push
sub
pop
dec
or
leave
jl
inc
lahf
jae
cmp
test
xor
adc
and
aaa
or
mov
cmp
xchg
jmp
jl
mov
mov
xor
push
jno
or
fisubs
mov
jbe
movsl
adc
dec
scas
mov
and
mov
and
and
in
cmc
dec
cmp
or
jmp
fwait
and
pusha
call
mov
dec
jne
ja
aas
push
dec
imul
enter
std
rdpmc
imul
in
xchg
mov
dec
mov
push
pop
dec
call
xor
gs
mov
pop
jbe
hlt
jmp
xor
and
inc
js
fidivs
add
push
jmp
inc
les
dec
sti
orl
or
pop
pushf
add
imul
lea
in
out
mov
lods
cmpb
in
aad
stos
int3
cli
inc
xchg
cmp
les
jne
popf
cltd
mov
xor
inc
loope
jg
rcrb
jecxz
addb
fisubl
ja
xchg
fadds
mov
fidivs
adc
mov
xlat
add
sub
into
enter
mov
jecxz
test
ds
lods
xor
xchg
mov
adc
shl
jle
lods
aaa
add
ss
mov
insl
cmpsl
adc
adc
pop
in
jb
cmpsl
cld
rcll
xor
jg
push
push
inc
pop
push
nop
cmp
cmpsb
in
push
sbb
mov
mov
or
fdivrs
mov
loopne
mov
dec
out
out
leave
push
out
push
in
dec
dec
pop
leave
pop
mov
mov
mov
test
mov
sub
xchg
out
outsl
mov
push
je
popa
jl
inc
nop
xor
mov
lahf
push
js
lods
push
ret
inc
dec
add
sbb
int3
ss
dec
ret
sarl
pop
pop
rcll
push
adc
sbb
es
push
cmc
rcl
sub
sbb
inc
add
sbb
jmp
fs
aad
daa
inc
add
insl
push
mov
je
or
sarl
pushl
out
adc
add
stos
pop
clc
pmullw
scas
arpl
push
xor
repz
push
das
jmp
cld
cmpsl
add
loope
sub
or
or
stc
incl
repz
add
sub
mov
cli
and
out
sbb
xchg
mov
shl
faddl
mov
test
fdivl
and
mov
js
js
adc
bound
clc
pop
leave
lret
stc
imul
insb
jo
xlat
xchg
jne
xor
in
test
dec
cmp
and
mov
xor
int
lcall
cmpsb
mov
and
pop
xor
xor
shlb
sbbb
inc
inc
mov
inc
jae
cmpsl
cmp
dec
xchg
lret
jle
mov
repnz
xchg
xchg
fldcw
fwait
out
xchg
pop
lock
xor
inc
xchg
bnd
mov
jb
mov
fst
jecxz
fiaddl
enter
xchg
xchg
mov
popa
lret
sarb
mov
pop
push
repnz
decb
outsl
xor
or
adc
leave
aaa
jl
mov
repz
mov
mov
imul
sub
and
stc
or
cmpsb
pop
into
shll
mov
push
hlt
lods
sbb
jmp
add
xchg
pusha
sbb
test
in
dec
dec
xor
sti
mov
in
xor
xor
push
or
stc
int
cli
sub
call
mov
js
ljmp
mov
dec
pop
xor
js
or
repnz
call
push
add
jne
xor
cld
and
add
rcrb
daa
sbb
jge
cltd
int
movsb
jl,pn
into
cmp
testl
xchg
in
sbb
ret
jo
sub
sbbb
fsubr
pop
pop
push
add
cmp
inc
movsl
aad
lods
mov
into
fwait
inc
into
adc
addr16
stc
mov
mov
ret
test
adc
call
hlt
fldt
jle
push
adc
fldl
inc
adc
jecxz
xchg
test
cmp
fstpt
sub
inc
and
aas
loope
adc
push
lock
stos
int3
test
fcoml
cmp
fiadds
rorl
insb
cltd
dec
test
cmpsb
in
ss
sub
stc
leave
jg
in
xor
add
mov
mov
aaa
addr16
and
cmc
jbe
dec
push
test
test
cmc
loope
mov
jmp
and
rorl
inc
icebp
mov
shlb
sbb
mov
adc
stc
sbb
inc
sahf
push
outsl
jg
pop
inc
ja
std
cltd
fdivrs
add
imul
cmpsb
dec
pop
lcall
icebp
pop
dec
mov
lea
pop
aaa
push
and
into
fdivs
mov
sbb
push
mov
add
cmp
mov
adc
cwtl
les
aas
push
inc
mov
daa
in
cmp
add
cmp
xchg
xor
xchg
daa
ja
popf
pop
adc
xlat
mov
push
in
les
xchg
cs
mov
scas
xchg
push
testb
rcr
clc
dec
nop
jecxz
mov
movsl
add
in
push
clc
repz
icebp
jge
jge,pt
xchg
mov
jb
in
es
lea
arpl
loope
pushf
ja
iret
js
xchg
or
or
inc
or
popf
mov
mov
inc
scas
jle
inc
aad
fnsave
shr
push
mov
pop
sbb
adc
mov
int
fidivrl
adcb
cmp
icebp
jp
fld
aam
hlt
aad
fwait
fistpll
fisubs
inc
loopne
popa
sbb
mov
pop
pop
cmp
fs
mov
dec
mov
cmp
add
out
dec
xchg
sub
insl
push
push
outsl
inc
shlb
cmp
pop
mov
inc
ret
inc
rcr
sbb
out
data16
cwtl
imul
and
ja
dec
data16
pop
clc
rolb
out
js
lds
lret
ljmp
imul
xchg
insl
pop
adc
mov
adc
jbe
aas
movsb
pop
xchg
dec
jg
jo
popf
or
pop
push
sbb
pop
fisttpl
sti
jecxz
pop
lds
ja
mov
dec
mov
jmp
sub
add
bound
inc
loop
cmp
sar
adc
scas
lds
in
cld
fisubrs
pop
add
shrb
call
imul
sbb
pop
in
gs
insl
push
fidivrs
xlat
pmaxub
pop
pop
mov
icebp
call
stos
scas
js
hlt
scas
add
stos
adc
cmp
adc
adc
scas
lods
and
or
lahf
push
pop
xchg
mov
fildll
adc
out
dec
or
xchg
lods
je
and
mov
aaa
pop
fsubrl
cmpps
test
test
sti
test
sub
jo
inc
mov
popa
xchg
dec
cli
mov
test
in
mov
cmp
sub
cld
aad
xchg
shrb
loope
int
cmp
xor
dec
and
fwait
dec
xlat
lret
inc
jle
push
push
lea
jne
mov
movsb
shl
lret
neg
jl
adc
push
jno
pusha
std
mov
rorl
xor
mov
pop
inc
mov
out
mov
sub
xchg
jge
or
or
or
test
leave
pop
inc
pop
or
adc
pop
sub
xor
sub
movsl
inc
sub
mov
mov
sahf
dec
mov
sbb
loopne
add
push
aam
mov
pusha
cmp
ljmp
int
test
push
addr16
sbb
push
aad
mov
cmovno
xchg
fs
mov
icebp
lods
mov
stc
jne
test
or
gs
mov
fnstenv
xchg
out
adc
popa
jmp
sub
test
lds
cmpsl
call
xor
mov
mov
popa
mov
popf
pop
mov
xor
mov
dec
or
bound
push
mov
dec
lret
ja
adc
fs
lock
jno
aaa
out
xlat
sub
xor
or
movsb
test
or
adc
jns
cld
xchg
shll
mov
int3
sahf
mov
xchg
pop
das
push
dec
les
xor
outsb
shrl
scas
in
sbb
mov
cmp
sub
sub
jp
xchg
movsl
or
push
pop
mov
sbb
aas
xchg
mov
mov
adc
or
sbb
add
movsb
movb
shlb
js
pop
inc
push
jl
cmpsb
mov
test
mov
add
lock
add
dec
dec
int3
fcompl
ret
cmpsl
xchg
repz
cmc
cmp
cmp
in
inc
jo
and
xchg
cltd
xchg
pushl
fwait
test
aam
scas
and
adc
bnd
ljmp
mov
push
lret
and
int3
push
std
inc
daa
push
or
pop
mov
lcall
xchg
sub
inc
in
xchg
push
stos
jmp
mov
lods
cmp
fnstcw
inc
aaa
mov
mov
sbbb
int
iret
xlat
add
out
push
ret
popa
out
dec
add
cmc
cmp
xchg
mov
mov
mov
pop
stos
push
pop
push
push
push
loope
inc
fwait
gs
dec
in
or
xchg
lods
sbb
repz
cmp
pop
jmp
mov
xchg
fsubs
jl
fs
std
cs
sbb
and
mov
add
cld
repz
push
fmul
cwtl
ja
jg
aas
addb
subl
inc
fdivs
out
ret
xchg
mov
jecxz
xchg
fs
mov
aam
popf
out
xchg
gs
push
cmp
xchg
add
push
cld
scas
jle
inc
xor
cmpl
jnp
cmc
cmp
inc
daa
add
push
mov
cmpsb
and
psraw
cli
sub
mov
fldt
or
mov
mov
xchg
and
std
push
mov
adc
pop
bound
inc
pop
push
loop
pop
inc
mov
lret
pop
icebp
das
add
cwtl
and
pop
mov
xchg
mov
push
movsb
in
jne
shll
es
add
jns
dec
jmp
arpl
std
pusha
xchg
xor
sti
hlt
jecxz
jmp
aaa
push
push
sahf
mov
xchg
and
repnz
add
gs
cmpl
jmp
or
mov
cltd
fisubrl
jle
gs
aaa
xchg
mov
mov
sub
jl
lahf
jle
jo
push
roll
mulb
das
sbb
push
mov
imull
mov
test
fiaddl
or
sbb
xlat
cmp
in
sbb
and
jne
pop
fcomi
pop
lods
and
hlt
fimuls
ret
jo
inc
hlt
bnd
out
andl
out
mov
popf
fmul
jo
leave
mov
dec
popl
jbe
cmp
and
jl
pusha
icebp
sarb
std
in
cli
and
lcall
fnstsw
mov
call
pop
inc
cwtl
cmc
in
adc
fdivl
arpl
and
pop
outsb
mov
mov
sbbl
call
out
cli
cwtd
push
leave
psadbw
rcrb
jns
punpcklwd
mov
mov
inc
popf
clc
hlt
shrb
sub
add
xchg
push
push
inc
subl
popf
cs
loopne
inc
scas
pop
andb
pop
and
mov
dec
cmp
cmp
inc
cmp
sbb
movsl
dec
pop
push
outsb
mov
jle
out
mov
pop
sbb
je
push
sub
loop
cmc
nop
push
cld
and
sbb
cmp
repz
cmp
mov
ja
push
ljmp
dec
inc
ffreep
xchg
rolb
xchg
jl
push
and
out
lahf
add
xor
mov
addr16
insl
imull
scas
mov
push
lods
xor
je
push
xchg
out
imul
imul
mov
dec
mov
add
sbb
pop
lods
pop
push
cmp
cmpsl
in
mov
dec
popf
dec
adc
mov
rcrb
mov
or
push
loop
mov
daa
mov
rcrl
jmp
mov
adc
pop
push
mov
sbb
int3
in
dec
dec
xchg
dec
mull
xchg
jecxz
repnz
lret
stc
inc
push
fimull
popa
in
jne
add
pop
sahf
pop
std
dec
les
sbb
rcrl
mov
mov
aas
and
ret
sub
xchg
and
add
jmp
rcrl
and
inc
xchg
stc
dec
test
jo
dec
push
movsl
cli
clc
inc
sbb
ss
mov
imul
add
cltd
inc
fchs
into
sbb
repz
mov
mov
pushf
nop
xorl
mov
xchg
aas
lea
shl
jg
sub
push
or
and
or
adc
push
shl
adc
enter
mov
mov
and
aad
dec
insb
addr16
mov
jp
xor
sbb
sti
xlat
cmp
xor
daa
mov
push
outsl
sbb
adc
aas
pop
add
cli
mov
jo
jmp
insl
push
add
loope
or
cmp
sbb
scas
je
or
mov
incl
xchg
icebp
pop
lahf
xor
insl
mov
pop
cwtl
mov
icebp
sub
cld
test
out
mov
and
xchg
cmc
mov
notb
arpl
mov
test
xor
sbb
add
jbe
cmp
idivb
add
movb
push
cmpsb
push
mov
clc
out
in
adc
sbb
fwait
pusha
or
das
addr16
sub
inc
xchg
sub
lds
xchg
dec
pop
add
mov
dec
push
xor
cmpsl
out
mov
pushf
bound
dec
arpl
leave
sbb
lods
sbb
lea
out
cmp
test
pop
mov
testb
out
loop
fsts
repz
loop
stos
or
dec
pop
mov
mov
lret
popa
cmp
ficoms
scas
jl
or
pop
dec
je
insl
sbb
stc
test
pop
stc
push
push
movsl
leave
inc
lahf
inc
ja
add
inc
scas
xor
adc
divl
mov
ds
lcall
sbb
cmpsl
lods
test
fistl
xor
ret
clc
mov
cmp
insb
push
popa
push
jne
addl
fwait
insb
push
popf
mov
dec
addr16
sub
dec
cmpsl
iret
xor
mov
jl
cmpsl
mov
in
lea
andl
adc
sub
out
sahf
dec
ljmp
or
fdivl
addr16
push
push
jbe
inc
int
call
or
pop
sahf
xorl
mov
mov
es
dec
shr
push
ret
out
outsl
dec
aam
push
cmp
push
jmp
movsl
lret
in
pushf
cli
mov
test
mov
loopne
stc
adc
stos
faddl
pop
mov
pop
mov
ja
aam
adc
and
jo
push
mov
iret
outsl
sahf
mov
sbb
imul
addr16
push
inc
xchg
add
jmp
jle
shrb
lds
push
pop
mov
sbb
pusha
xchg
inc
insb
mov
imul
insl
popf
clc
or
push
push
jecxz
orl
add
mov
mov
xchg
xor
ss
lret
in
inc
sub
cmpsb
shll
insb
cmp
stos
dec
fsts
mov
cmp
js
push
pop
aas
aaa
adc
stc
push
lcall
inc
fwait
call
mov
fistl
gs
lret
mov
jns
pop
pop
pop
shll
leave
cs
pop
sub
and
insb
sbb
in
mov
int
rcrb
and
je
inc
call
add
push
add
icebp
inc
sub
addr16
stos
sbb
rorl
arpl
aad
or
in
inc
repz
dec
pop
js
pushf
das
pop
mov
jmp
push
loope
hlt
scas
jae
mov
das
dec
fcomi
and
das
push
dec
aam
cwtl
dec
push
xchg
jge
enter
div
movsl
xchg
nop
loopne
out
std
pop
xor
sub
insb
test
cmpsl
cs
out
out
int3
enter
push
xchg
mov
in
and
xchg
adc
nop
loope
notb
xor
enter
jge
out
pop
mov
dec
fldenv
xor
dec
add
lods
fistpl
mov
add
xchg
pop
je
out
pop
push
sbb
inc
push
inc
nop
repz
dec
sub
jge
and
inc
jp
es
fwait
aam
cmp
dec
or
notrack
xchg
mov
lahf
xchg
scas
xor
lahf
and
sahf
mov
scas
divl
cmp
mov
nop
out
hlt
xchg
sbb
in
push
cs
adc
je
daa
inc
jbe
sbb
pop
lret
and
es
pop
js
test
or
lahf
stos
cltd
mov
loopne
lret
jle
xchg
out
cmp
add
mov
outsb
dec
mov
test
pop
push
jp
adc
in
cs
fdiv
add
es
shlb
push
mov
lock
fs
stos
repz
mov
outsb
fwait
je
sbb
cmp
dec
aas
mov
lock
xchg
fldenv
dec
pop
pop
ljmp
iret
loope
xor
loop
pusha
push
adc
push
sbb
aam
sub
pop
inc
imul
je
test
push
jnp
push
jmp
sarb
sbb
rol
pop
adc
cltd
add
or
ret
mov
ss
lret
std
or
or
adc
adc
js
push
and
popl
jno
scas
mov
fwait
into
lret
jp
push
adc
hlt
pop
xchg
test
push
loop
int
sub
and
add
adc
and
lret
into
popl
adc
in
pop
js
imul
pop
jecxz
fsubl
mov
add
adc
in
sub
les
shl
cltd
insl
adc
cli
ss
ret
adc
mov
xchg
pop
mov
sahf
mov
inc
ficoml
sbb
scas
push
rclb
insb
mov
sti
xor
sub
shll
insb
push
outsl
jecxz
mov
orl
idivb
arpl
pop
jl
lea
xor
sub
nop
mov
xchg
je
mov
or
daa
xchg
lods
into
fsubrs
jmp
adc
mov
leave
ficompl
cwtl
sahf
stos
mov
clc
xlat
cwtl
xchg
mov
mov
or
pop
add
jmp
aam
out
cwtl
sbb
push
cmp
shll
gs
lahf
lea
decl
ret
lret
clc
jo
pushw
fdivrl
test
lret
push
mov
fsubl
fdivrs
or
adc
pop
dec
mov
in
fidivrs
jns
xchg
mov
mov
mov
cwtl
das
enter
std
jns
cwtl
lret
lock
data16
ret
jns
insb
pop
and
test
into
sub
push
jns
pop
inc
pop
sahf
jge
or
call
jb
scas
iret
sub
sbb
mov
ret
pusha
inc
and
jb
inc
pop
add
dec
xchg
imul
pop
ljmp
jno
stos
scas
jp
mov
or
mov
mov
out
lods
cmpsb
push
stc
pop
mov
lods
adc
push
lret
mov
cmp
movsl
jno
adc
lock
xchg
sbb
sub
aad
or
jno
nop
mov
out
std
adcb
out
sti
testb
test
sbb
cmp
mov
bound
xchg
cltd
inc
js
dec
mov
xchg
call
stc
dec
ja
adc
dec
or
jae
dec
inc
mov
add
cmp
push
ss
sub
lea
mov
stos
ss
and
xchg
inc
das
idivb
sbb
in
cmp
push
pop
stc
sub
sbb
icebp
adc
jp
cmpsl
pushf
sbb
jae
cltd
jb
add
xchg
mov
fmul
in
xchg
push
jge
movsl
fdivr
daa
in
test
loop
and
extrq
popf
lret
jle
dec
hlt
jecxz
mov
add
leave
xchg
testl
pop
push
and
cmp
clc
mov
addr16
xor
scas
mov
movsw
push
scas
addr16
and
sahf
lock
sub
dec
int3
push
scas
repnz
inc
mov
push
int3
shll
cmp
push
nop
lods
in
jecxz
sbb
push
mov
popa
cmp
or
fs
dec
jo
jb
cld
lds
js
sub
jnp
and
adc
and
xchg
mov
inc
call
roll
inc
cmp
mov
gs
cmpsb
mov
cmp
push
mov
nop
out
sahf
dec
jp
das
add
xor
pop
mov
sbb
mov
mov
mov
fcomip
int
insb
and
minps
aad
cmpsl
cmp
popa
imul
ret
dec
aam
mov
jns
dec
dec
jmp
xchg
ja
insl
imul
sub
bound
jmp
rolb
sbb
add
ret
push
xor
xor
mov
jb
add
sarb
adc
clc
mov
cwtl
insl
push
cld
insb
aaa
mov
cli
push
push
lahf
xor
ret
push
and
push
xchg
stos
xchg
ret
xchg
cmp
int3
mov
ljmp
mov
lahf
sub
push
aam
sahf
fidivrl
adc
insb
aam
mov
repz
in
outsl
fmull
dec
pop
inc
test
addr16
mov
enter
jnp
inc
jb
lahf
aaa
fdivrl
adc
flds
or
cltd
xchg
sbb
dec
scas
test
cld
ret
and
adc
ret
push
sub
jae
jb
stos
inc
repz
inc
call
icebp
es
call
inc
cmp
push
xchg
xchg
mov
dec
imul
pop
adc
adc
xor
fidivrl
mov
xchg
pop
jnp
out
arpl
ss
pop
ds
jg
mull
mov
addr16
inc
push
outsl
dec
dec
xchg
jle
sbb
and
mov
sub
mov
int3
mov
xchg
and
icebp
cltd
xorl
inc
push
sub
addr16
xchg
pusha
cld
dec
fnstenv
or
xchg
push
add
leave
and
mov
in
incl
mov
pop
in
js
xor
loope
jns,pn
aad
cmpsb
adc
sbb
mov
ret
pop
test
test
sbb
inc
out
dec
roll
aad
roll
or
sub
xor
subl
fimull
enter
stos
jnp
ss
inc
jp
inc
mov
mov
rcr
sbb
mov
cmp
mov
pop
outsb
pop
sbb
insl
loopne
in
js
stc
and
or
add
aad
insb
sahf
adc
shlb
cmpsw
out
lret
mov
jg
inc
jae
mov
lcall
cs
fdivs
jg
push
test
stc
enter
lock
fldt
gs
lods
adcl
push
les
rclb
push
dec
push
push
mov
or
sub
shlb
cltd
xor
fsqrt
mov
sbbb
movsb
leave
mov
dec
mov
pushf
jl
mov
jb
popa
and
out
into
mov
mov
or
bound
pushf
jp
rcl
ds
out
push
sti
jge
sbb
and
popa
ds
movsb
lcall
add
and
push
scas
cwtl
sub
ja
daa
sub
sub
xchg
imul
mov
sub
push
cmpsl
fwait
dec
cmp
and
xor
jae
test
lods
fwait
repz
cli
fchs
dec
mov
dec
and
mov
rcrb
into
dec
sub
call
popa
sub
push
imulb
icebp
subl
mov
aaa
psubw
pop
push
les
aas
or
movsl
mov
rorl
mov
push
int3
test
in
sbb
xor
arpl
xchg
int3
inc
push
adc
jnp
and
pop
cli
test
int
mov
leave
mov
lcall
les
pop
out
pop
push
popf
sbb
scas
dec
and
sarb
and
mov
stc
fsubrl
add
call
jb
rolb
xchg
arpl
push
out
add
ret
push
cs
hlt
xchg
test
vphaddubd
enter
push
mov
xor
sub
and
jbe
xchg
add
jle
sbb
pusha
pop
ja
adc
add
and
dec
jle
jecxz
sbb
leave
insb
idivl
fs
test
xor
mov
or
push
or
mov
add
adc
arpl
cmp
adc
mov
out
lcall
sahf
or
add
js
push
or
sti
jb
arpl
and
jg
lahf
jnp
sub
adc
int
mov
adc
popa
addl
into
lret
or
ljmp
push
pop
xchg
sbb
stc
cmpsb
out
pop
repnz
sbb
push
xorl
cmp
jmp
and
test
pop
hlt
outsb
or
cmp
push
gs
pop
mov
pop
stos
push
neg
test
push
call
ret
mov
movsb
test
lcall
je
push
xor
loop
arpl
dec
test
xor
fsubr
inc
outsb
add
inc
mov
push
cs
jl
dec
jg
xchg
adc
xorl
aas
bound
js
repz
stos
mull
mov
mov
xchg
leave
shll
mov
ficoml
or
cltd
mov
or
add
sti
aad
mov
sub
stos
cmp
cli
push
mov
cmp
or
mov
jb
dec
cmp
insb
ds
outsl
sbb
dec
outsl
inc
xor
lcall
xchg
arpl
or
push
js
jmp
jb
xor
xchg
sbbb
jle
adc
int
mov
jb
daa
add
push
je
xchg
pop
cmpl
push
arpl
dec
jge
leave
jmp
add
mov
ret
pop
ja
dec
sbb
cli
fisttpll
cli
ret
adc
add
cmp
aaa
fnsave
and
jno
xchg
scas
stos
rolb
add
out
mov
ret
mov
daa
lahf
flds
jg
out
mov
xlat
mov
stc
bound
cmpsb
dec
push
stc
and
or
push
and
sahf
and
xchg
add
cmp
cs
ja
mov
and
jmp
xchg
and
mov
popa
add
or
or
sub
adc
mul
mov
mov
movsl
movsl
loop
sti
cli
or
adc
pushf
outsl
ljmp
daa
jns
out
push
cmp
ja
xor
mov
xchg
scas
cmc
mov
add
adc
adc
scas
daa
or
mov
dec
gs
or
addr16
dec
xchg
inc
jo
push
inc
mov
xor
inc
call
sbb
cmp
fisubrl
data16
fimull
fwait
jge
mov
sbb
lods
sbb
sub
mov
jecxz
mov
jp
movsl
call
cltd
push
inc
cmp
es
aam
fmuls
fildl
ds
jle
loopne
mov
pushf
sbb
and
jp
push
lret
pop
add
adc
inc
jns
inc
lcall
add
jle
jmp
and
xchg
xor
fisttpll
mov
mov
sbb
mov
inc
mov
insl
pop
mov
nop
out
jmp
mov
push
xchg
xor
mov
jo
repnz
mul
jmp
cli
test
jns
mov
fiaddl
dec
dec
stos
sub
or
ret
fsub
push
cmpsl
jl
ljmp
aaa
cmp
jp
repnz
or
loop
inc
jb
cmp
and
sbb
xchg
mov
jb
out
mov
lods
add
in
cmp
lock
or
push
test
jecxz
cmc
pop
pop
xchg
lret
xchg
and
cwtl
lahf
aas
addb
inc
pop
out
sbb
cs
pop
mov
push
cmp
add
xor
cmp
sub
jne
pop
mov
stc
scas
dec
cmp
not
loop
fstpl
jae
jae
mov
jp
mov
jg
lea
cmpsl
dec
mov
in
aaa
jno
xor
cmpsl
mov
push
and
push
iret
xchg
push
arpl
push
clc
or
mov
xchg
push
xchg
pushf
aas
pop
mov
movsb
lret
sbb
push
inc
jl
mov
jge
popf
rcrb
inc
lds
mov
scas
movl
xchg
int3
stos
ja
mov
std
outsl
in
loopne
jmp
add
dec
xor
idivb
ss
out
icebp
fsub
xor
sub
test
xor
stos
insb
loopne
xchg
jne
pop
cmp
out
xor
ja
or
pop
jecxz
aad
leave
cmp
xor
cmp
in
push
dec
pop
je
jp
jecxz
outsl
mov
and
imul
lahf
or
popf
or
imul
mov
jle
or
jp
jnp
add
jge
mov
mov
ja
jb
mov
ret
cmpb
inc
mov
dec
push
pushf
mov
lahf
leave
les
sbb
negb
loop
out
mov
push
fwait
mov
test
mov
fbld
mov
xor
xchg
pop
outsb
out
or
add
out
mov
cmpsb
dec
jo
cmp
or
jecxz
imul
adc
sahf
int
push
int
and
mov
fildll
dec
mov
or
or
pop
xchg
jp
cld
cltd
test
aad
or
pop
popa
cwtl
sarl
jae
jnp
repz
pop
cmp
lds
les
je
push
pop
sbb
sub
test
jmp
imul
out
lcall
sti
arpl
and
sub
inc
pop
cwtl
sbb
and
popf
cmp
pop
pop
push
jns
add
adc
repz
popa
cmp
shll
adc
push
gs
fdivrl
mov
test
mov
fadd
or
aam
push
or
outsb
ficomps
dec
cmpsl
outsl
mov
push
shlb
lods
in
insb
pmuludq
insl
sub
pop
lods
fdivs
mov
add
cwtl
jb
xor
add
jmp
mov
movsb
test
shlb
adc
inc
jo
sahf
mov
fnstenv
cltd
fiadds
pop
cmp
mov
dec
push
xchg
das
xchg
add
std
insl
mov
movsl
addr16
adcl
jae
or
pop
pop
call
cmove
lret
adc
lcall
pop
lcall
imul
jg
push
add
add
andl
add
insl
xor
cltd
cmp
xchg
cmp
adc
daa
mov
cld
hlt
jmp
enter
aad
pop
mov
mov
sub
frstor
push
aas
xor
out
mov
dec
pop
mov
sbb
dec
insl
rcll
loope
clc
hlt
lea
fcoml
mov
inc
fimull
push
cmp
movsb
jl
jmp
fcmovnbe
int3
mov
add
in
mov
imull
mov
sub
loop
in
or
cmp
mov
bound
pop
in
push
fildll
loope
test
jp
test
inc
dec
sub
outsb
adcl
push
test
in
mov
and
pusha
cwtl
push
sbb
sarl
addr16
out
mov
xchg
cmpl
xchg
arpl
iret
rcll
sbb
jg
xchg
jno
aas
cmp
out
dec
add
sbb
cmpsb
jbe
cmp
int3
fnstcw
cmp
xor
mov
dec
aad
insb
dec
adc
mov
cvtps2pd
mov
mov
addl
sbb
cmp
mov
scas
add
gs
int
mov
int
aaa
in
cmp
dec
inc
push
jns
cmp
in
sbb
push
ljmp
cwtl
mov
push
sub
pop
mov
fstpt
xchg
add
addr16
cmp
push
mov
pop
mov
fsubrl
jbe
mov
aad
mov
pop
sbb
mov
jne
jg
dec
ljmp
das
imul
cmpsl
mov
sub
rolb
sbbb
jb
cmpsb
mov
aad
xor
pop
xor
inc
cmp
jge
repz
gs
push
add
push
mov
test
push
ljmp
cmc
aas
out
mov
addl
or
jne
shrb
and
xor
cmp
sub
and
adc
fldt
jle
sbb
jo
call
mov
inc
inc
mov
sahf
xlat
pop
adc
pop
je
cwtl
negb
mov
int
pop
scas
ret
cli
sub
rcr
jo
orl
and
addb
shlb
cmp
sub
pop
je
and
inc
bound
in
xor
in
popa
ja
lret
sbb
add
out
jge
nop
and
addr16
cmpsb
pop
imul
inc
test
cmc
cmp
pop
mov
lds
dec
dec
in
scas
sub
pop
inc
orl
xchg
jmp
and
pop
outsl
dec
cltd
fwait
mov
rcrb
movsb
negl
cmpsl
je
divb
jp
adc
imul
dec
and
mov
aas
sbb
iret
sahf
cli
inc
mov
dec
adc
push
push
popf
cltd
sbb
iret
outsb
dec
lret
idivb
dec
cli
out
sbb
cmpl
js
jb
ljmp
into
cltd
fisubs
and
fists
and
iret
movsl
pop
adc
mov
les
loop
jae
mov
mov
inc
imul
dec
cmp
in
mov
inc
fidivs
idivb
add
movsb
jb
add
das
add
adc
xor
sbb
cmp
inc
inc
pusha
je
outsl
xor
jp
jbe
xor
cmp
fisubrs
imul
and
push
subb
xlat
push
jecxz
jp
lds
cmp
mull
jp
lock
ss
shlb
push
xchg
in
sub
scas
lea
lret
ds
cmp
js
ljmp
and
mov
pushf
xchg
dec
les
dec
jns
inc
fcomi
flds
insl
gs
and
pushf
fstps
rolb
pop
lahf
repnz
mov
jg
hlt
jmp
jmp
jnp
imul
jmp
lds
xchg
lods
dec
cmp
in
sahf
mov
sahf
aad
out
cmp
ret
xchg
sarb
shll
push
push
popf
rcr
scas
rcrl
mov
imul
mull
xchg
pop
cmp
iret
into
add
shll
xlat
cltd
xchg
mov
jae
mov
bound
int3
jbe
addr16
jp
cli
movsb
xor
add
jmp
xchg
dec
stc
and
mov
ja
ja
sbb
xor
sbb
cmpsb
sub
pop
sub
aas
adc
bnd
sarb
test
iret
jnp
sub
push
mov
sub
mov
clc
loop
adcb
pop
out
mov
cltd
mov
jo
mov
push
adc
ret
mov
pop
push
cmp
mull
adc
push
jmp
mov
push
shll
mov
adcb
fiaddl
in
out
lcall
lcall
outsl
xor
jnp
andl
push
ss
mov
ss
jno
cmp
sbb
lock
lods
mov
xchg
lods
test
aaa
fstp
push
pop
inc
xchg
pop
iret
mov
jmp
outsb
cmp
popa
or
xor
push
lods
mov
es
push
jnp
sub
int
cmp
and
inc
push
push
pop
dec
push
imull
movsb
sub
xchg
fidivs
test
xor
inc
mov
mov
xor
addr16
xchg
pop
inc
testl
je
stos
into
mov
prefetch
push
add
push
cmpsl
sbb
stos
or
jg
pop
cwtl
push
cmpl
stos
xchg
mov
pop
cmp
outsb
fldt
cmc
hlt
pushf
bound
std
inc
insl
dec
in
addr16
push
push
ss
shrb
mov
inc
xchg
es
addr16
ljmp
sbb
xlat
out
hlt
jbe
pop
scas
xchg
push
mov
insb
in
iret
mov
leave
test
cmpps
inc
inc
inc
jle
pop
mov
and
js
out
xchg
push
xor
fists
lret
popf
and
dec
mov
sub
sar
xchg
sbbl
jb
add
hlt
ret
ret
inc
mul
incb
loope
vunpcklps
sbb
fadd
fbld
mov
aaa
add
push
call
sti
xchg
lret
sub
test
ret
adc
push
adc
into
outsl
scas
enter
mov
mov
mov
xchg
imul
imul
ret
pop
and
mov
cmpsl
je
adc
scas
int3
push
cmp
sahf
and
fsts
push
arpl
jl
jnp
jl
aas
mov
or
es
decl
or
mov
jmp
or
jg
in
mov
jae
mov
mov
fsubr
out
adc
scas
leave
mov
fstpl
jle
push
cmp
in
imul
lods
sub
imul
cmpsb
enter
ds
mov
sbb
fsubs
ds
dec
mov
mov
fwait
sbb
sbb
outsl
mov
jg
and
push
es
aam
xchg
clc
xor
sahf
dec
aas
and
sub
aaa
lds
inc
subb
cli
cli
lret
push
jmp
mov
pop
aam
int3
mov
add
fstpt
adc
loopne
sub
fwait
arpl
repnz
xchg
imul
mov
fiaddl
inc
pusha
mov
push
jne
rolb
cmc
stos
loope
stc
mov
mov
fwait
sub
inc
inc
fisubrs
mov
lods
andl
push
adc
decl
xor
mov
xor
not
cmpsb
lret
movsl
loop
mov
xchg
or
popa
scas
push
jb
add
xchg
push
and
inc
negb
dec
mov
scas
dec
push
mov
dec
and
mov
movsb
pop
pushf
test
mov
xchg
xchg
fdivrs
mov
cmp
in
cmp
push
mov
xchg
pop
in
popf
fwait
dec
mulb
push
out
sub
push
add
addb
ljmp
mov
push
subl
mulb
nop
sub
jb
jge
aad
lods
jae
jne
lcall
ret
jge
pop
mov
in
aad
out
in
cmc
lcall
mov
xor
xchg
ret
xor
fisubrl
sbb
lahf
mov
leave
into
imul
or
out
xor
mov
test
loop
shl
jno
inc
sbb
push
movsb
icebp
pop
or
pop
inc
push
out
xor
ficoms
ficoml
arpl
inc
addb
jge
dec
fidivrl
cmp
ret
sahf
xchg
out
cmpb
sub
add
cmp
push
repz
in
test
loope
in
dec
adc
dec
stos
aam
int3
inc
push
xlat
pop
xorb
adcl
ss
xor
cld
int3
shrb
xor
and
fsubs
xchg
divb
pop
pusha
iret
jecxz
insb
mov
cmp
sub
dec
push
test
add
inc
sbb
cltd
xor
inc
dec
inc
push
sub
push
pop
push
and
cmp
rol
mov
rorb
fdivrs
xchg
sbb
test
push
cmc
das
pop
and
cli
arpl
mov
push
sub
sbb
add
int3
jecxz
mov
push
mov
das
leave
adc
mov
add
push
es
mov
add
stc
xchg
iret
inc
neg
fsubrl
or
push
dec
call
in
cmp
int3
mov
sub
jo
inc
bound
std
dec
or
jns
mov
in
dec
popf
pop
out
xor
testb
pop
lock
sub
ja
pop
out
xor
lds
jnp
int
out
enter
lock
std
cmp
packsswb
jl
aad
xor
mov
mov
out
pop
mov
sbb
sub
push
into
out
mov
jmp
xchg
ficompl
lret
aas
cmp
mov
or
mov
fcom
in
sbb
ds
xchg
jle
push
je
jp
mov
xor
test
insb
sbb
inc
xchg
sar
loope
cmpsl
lret
push
xlat
scas
ja
call
cltd
adc
jbe
jbe
ret
lcall
sbb
jmp
arpl
test
lock
jmp
rcll
pop
xchg
fistpll
xchg
inc
and
pop
sbb
cmpsl
imul
adc
pop
sahf
bound
aam
sbb
inc
test
mov
jae
scas
push
and
xor
adc
push
adc
jmp
das
push
cmc
addr16
out
xor
mov
adc
add
sahf
mov
and
jbe
rcl
adcb
cmp
xor
sub
and
add
mov
shlb
lods
mov
sub
loop
movsb
test
cwtl
aam
pushf
outsb
outsl
jecxz
in
in
xor
pop
in
pop
enter
ljmp
cmp
insb
push
jns
aas
xor
hlt
inc
dec
ds
imul
dec
jl
out
dec
dec
repnz
mov
inc
mull
notb
dec
mov
inc
xor
leave
loopne
fiadds
sbb
mov
cmpsl
imul
bndstx
cmp
sub
jns
add
in
outsb
daa
dec
sbb
mov
inc
xor
push
push
cmpsl
pushf
ja
aas
orl
fsubrl
xchg
push
cmp
ljmp
push
stos
xchg
scas
adc
push
add
lock
rorl
sarl
dec
mov
mov
fwait
pop
je
in
sub
mov
out
jns
inc
pop
mov
cmp
sarl
insl
les
xchg
pop
out
dec
jl
aad
adc
pop
lcall
jne
mov
mov
xchg
push
push
adc
adc
adc
dec
sbb
sub
xlat
dec
xor
jbe
shrb
iret
jae
out
xchg
pusha
add
js
insl
aam
arpl
lret
pop
sub
dec
into
fisttpl
in
mov
call
xor
movsb
or
sub
pop
jno
xlat
xchg
xor
shlb
jb
inc
jg
scas
sbb
ret
test
adc
ficompl
xchg
lods
pop
sahf
outsl
cmpsl
xchg
rclb
pop
pop
xor
incl
rcll
rcl
in
push
int3
jno
inc
arpl
stos
imul
inc
out
add
aas
adc
push
fucomp
pop
sbb
pop
sub
push
jle
adc
xchg
mov
popf
sub
repz
out
push
dec
call
mov
arpl
mov
lcall
or
xlat
cmp
mulb
and
bt
push
xchg
xor
out
cld
xor
push
xchg
adc
mov
rol
jbe
bound
xchg
lcall
pop
mov
test
sbb
test
das
and
push
push
cmp
push
in
push
pushf
rolb
imul
lcall
out
xor
outsb
add
loop
movsb
imulb
cld
ret
mov
shrb
jp
cmpsl
ficoms
push
xor
int
add
in
mov
add
fwait
in
jecxz
enter
sbb
adc
pmaddwd
loop
and
sbbl
fnstsw
inc
push
xlat
push
pop
in
fsubs
pop
cmp
fs
clc
add
pop
aam
mov
in
out
sarb
sbb
push
jge
ss
clc
movsl
xchg
fs
loop
mov
sbb
ret
repnz
popf
cmc
or
loope
jb
out
aas
mov
dec
mov
xchg
jl
push
out
scas
loop
or
repnz
ljmp
push
mov
mov
stc
loop
inc
inc
inc
and
mov
cltd
or
sbb
sbb
mov
stos
lock
test
int3
enter
aad
add
out
adc
mov
adc
dec
stos
rol
pop
cmp
xor
mov
jge
jae
push
push
xor
mov
in
mov
dec
sahf
mov
and
test
bound
adc
push
int3
addr16
into
andl
aam
stc
test
je
fimull
pop
xor
scas
aam
jns
jl
test
mov
dec
adc
mov
cmpsb
mov
and
jl,pn
xlat
push
cli
or
xor
xchg
or
adc
adc
cmp
mov
fs
sub
iret
xchg
mov
sbb
cmc
mov
push
loop
imulb
pusha
call
outsl
divl
shlb
inc
cld
mov
fstpt
add
jg
addr16
inc
dec
pop
int
pop
dec
inc
cmp
push
lods
dec
adc
xchg
das
cmpsb
adc
test
xchg
out
adc
cmpsb
hlt
call
repnz
mov
movsb
dec
aas
jmp
clts
out
mov
xor
outsl
test
sbb
jno
int
leave
xchg
jg
mov
int3
jmp
scas
mov
or
cmp
inc
stos
loop
and
in
inc
hlt
xchg
add
mov
nop
push
sbb
mov
sbb
lea
xchg
fcmovnb
mov
dec
test
push
push
lods
ja
lds
jp
fsubl
cmp
mov
arpl
sbb
bound
ss
and
imul
cmpsb
or
dec
xchg
in
cltd
fucompp
cmp
adc
cmp
add
add
jae
lret
and
push
xchg
jmp
adc
push
xor
insb
xchg
icebp
fwait
dec
lods
hlt
test
inc
inc
add
fidivl
push
xchg
xchg
cmp
sbb
test
xchg
mov
in
mulb
jge
ja
pusha
fcomp
ja
push
lret
and
cs
cld
mov
lea
sub
jnp
mov
out
mov
push
fs
jne
sub
fstpt
cmp
push
clc
testl
or
push
outsb
int3
mov
dec
inc
dec
mov
es
cmp
push
mov
push
leave
lea
cmp
dec
cmp
imull
xchg
or
mov
mov
das
out
in
aad
rcrl
into
mov
pop
inc
xchg
jae
pop
ja
adc
pop
push
or
andb
and
sub
xor
out
inc
test
xor
ljmp
jbe
cmp
and
push
nop
into
daa
popa
push
nop
ja
mov
addb
xchg
inc
push
cmp
ret
test
add
xchg
cmp
inc
sbb
push
fs
push
xor
cli
repz
and
clc
cmpsb
lods
inc
lcallw
xor
xor
xchg
inc
out
into
mov
dec
fsubl
pop
stc
push
dec
test
jl
add
pop
lock
dec
push
repz
xlat
push
xchg
mov
xchg
arpl
data16
mov
add
fcomps
ds
pop
xor
adc
fucomp
mov
xor
xchg
sub
or
fnstsw
xchg
cmpb
stos
push
xor
or
ficoml
and
cwtl
stos
in
decl
sarl
sbb
mov
loopne
hlt
lock
scas
mov
push
outsl
xchg
flds
mov
popa
mov
rcl
and
sbb
dec
test
out
dec
adc
inc
outsb
sbb
inc
inc
imul
mov
adc
sub
repz
cmp
pop
mov
mov
xlat
enter
pop
pop
mov
aas
dec
inc
push
cwtl
mov
push
pop
jmp
mov
adc
push
iret
je
and
cmp
xchg
loope
popf
in
add
inc
mov
mov
loopne
shll
inc
lds
mov
dec
adc
and
xchg
out
hlt
pop
xchg
fucomip
subl
inc
jns
jge
in
jg
call
insl
mov
sbb
sub
mov
xchg
adc
push
push
dec
stc
push
mov
mov
je
mov
gs
jmp
mov
mov
jle
lret
jp
aaa
jg
insl
inc
sahf
jp
push
insl
cli
xor
lahf
jmp
into
negb
mov
pop
sub
mov
push
outsb
aaa
xchg
jmp
cwtl
repnz
adc
int
dec
lds
pusha
adc
mov
pop
mov
ds
add
jg
movl
sarl
out
cli
stc
xchg
inc
into
fst
add
push
leave
call
add
loopne
cwtl
outsb
in
jae
les
xor
lcall
adc
in
xor
daa
inc
aam
js
push
dec
add
and
mov
aad
or
sub
pop
test
or
inc
add
aas
ficoml
cmp
sub
push
popa
or
add
addr16
xlat
test
inc
jp
leave
ljmp
sbb
arpl
outsb
insb
xor
sub
hlt
in
and
xor
push
movsl
dec
mov
sbb
xlat
fisubrl
xchg
movsl
pushf
adcl
push
lahf
pusha
push
repnz
test
gs
sbb
aam
pushl
nop
inc
lret
push
xor
aam
into
sub
lret
fucomp
push
imul
lahf
lea
inc
adc
pop
test
subl
mov
add
lods
out
adcb
add
out
xchg
mov
inc
jle
sbbl
imul
int
mov
arpl
popa
movsb
fimuls
popa
loop
adc
dec
repnz
pop
add
sub
stc
adc
push
in
mov
loop
pop
jne
aam
push
lods
inc
iret
inc
gs
or
std
fcomp
and
adcl
pop
inc
xchg
mov
inc
in
mov
int3
xorb
xor
dec
push
mov
dec
pop
mov
adc
mov
adc
pop
in
add
mov
orl
xlat
adc
call
pop
andl
imul
add
fs
inc
sub
cli
cmp
jge
adc
sahf
jle
xor
mov
mov
nop
push
imulb
imull
mov
arpl
push
jmp
sbbb
jb
repz
pop
push
ret
mov
cmc
mov
sti
push
fdivp
out
sbb
inc
in
mov
sti
xchg
add
cmp
mov
nop
iret
cmp
loop
ljmp
inc
es
mov
repnz
dec
push
fcoms
stc
out
inc
jbe
add
lods
into
push
mov
call
scas
lcall
cmp
add
adc
xchg
sub
fiaddl
sbb
movsl
loop
add
inc
pop
xchg
imul
movsl
jle
popl
lret
or
or
bound
mov
xorb
push
mov
popf
mov
hlt
push
sbb
or
jbe
mov
sti
sub
xlat
or
pop
pop
add
mov
xchg
pop
mov
xchg
jno
mov
and
cld
adc
pusha
cs
fmuls
adc
mov
adc
xor
loope
adc
imul
push
cmp
dec
mov
rol
shll
ret
fwait
sub
addl
jo
stos
cli
and
pop
stos
aas
lahf
pushl
stc
mov
out
mov
fucomi
inc
mov
xor
inc
pop
push
nop
ljmp
cld
add
pop
inc
fwait
xor
stc
xor
xor
sub
jo
lock
rcll
andl
pop
push
scas
adc
sbb
notl
or
std
or
mov
fistps
dec
data16
mov
pop
std
push
enter
mov
lcall
mov
or
rclb
lcall
je
cmpsl
cmp
push
shrb
push
cwtl
adc
addr16
jmp
ds
enter
xchg
inc
inc
out
lret
dec
xchg
xor
xchg
pop
addr16
cwtl
popa
adc
push
cltd
sub
jge
ljmp
jno
cmpsl
ss
decl
mov
push
push
push
cld
fdivrp
int
adc
mov
jns
stos
mov
and
std
popa
daa
push
push
inc
sbb
mov
test
das
mov
xchg
mov
or
mov
jae
jp
xlat
jo
xchg
cmpsl
mov
sbb
and
mov
shrb
jno
mov
jecxz
jo
movsl
mov
repnz
adc
add
mov
cmp
lock
cmpb
call
pop
push
mov
jbe
mov
out
rcr
xor
inc
div
pop
aam
or
sub
sbb
jb
xchg
pop
rcll
leave
add
mov
push
sbb
or
psrlq
pop
adc
mov
rorb
xchg
add
ror
or
repz
repnz
push
sti
mov
adcb
push
pop
leave
fbstp
call
xor
cmp
js
repz
test
rcll
aaa
mov
stos
mov
pusha
add
mov
dec
nop
mov
xor
xchg
xchg
fcoms
and
xlat
or
mov
ja
pop
orl
jp
pop
jp
add
mov
loop
jo
push
dec
or
push
mov
pop
negb
pop
pop
call
ljmp
cmpsl
jnp
pusha
out
stc
ja
divl
arpl
mov
popf
xchg
cs
xchg
dec
xlat
push
lcall
incl
lret
fwait
pop
inc
loop
dec
testb
rcl
ss
xchg
xchg
pop
mov
popf
iret
cmpsl
mov
scas
shrl
repz
jns
sbb
mov
lret
shl
stos
sbb
add
aam
in
adc
pop
adc
int
cld
test
in
mov
push
lock
scas
notl
push
sbb
mov
test
fsts
out
loope
loopne
xor
jmp
mov
lods
data16
mov
lds
jmp
into
sbb
sub
push
incl
sbb
jno
cld
xor
xchg
cltd
or
and
cld
jl
push
or
jno
rorb
arpl
lds
or
outsb
mov
inc
decb
js
test
or
add
cmp
test
push
data16
lds
je
rdpmc
jge
adc
mov
mov
cs
cmpsb
testb
or
xor
jle
xor
and
sub
sti
or
setae
pop
std
add
sbb
push
jb
sub
shrb
mov
mov
mov
jo
div
dec
xor
out
xchg
inc
adc
and
xor
fadd
xchg
pushf
lret
mov
ss
loopne
push
mov
ret
mov
rorl
lahf
push
dec
jp
push
sub
clc
adc
xchg
xlat
xchg
in
jo
xchg
mov
rolb
dec
cmp
imul
xor
fisttpl
mov
sub
imul
loop
sahf
shlb
movsb
iret
fxam
dec
push
jge
arpl
mov
pop
addb
jnp
in
dec
es
bound
dec
mov
sub
push
and
sub
test
sbb
xlat
cmc
in
and
xchg
out
sbb
inc
adc
push
mov
mov
sbb
mov
stc
mov
pop
in
notb
push
push
dec
xchg
mov
sub
push
mov
mov
pop
ret
clc
rcr
gs
insl
inc
ljmp
inc
mov
push
outsb
insb
cwtl
jae
mov
xchg
adc
aad
je
add
push
cmpl
sbb
xchg
jnp
mov
xor
aaa
dec
sbb
mov
jno
add
jp
and
std
and
test
mov
cmpb
dec
dec
xor
lcall
add
bound
xchg
and
leave
test
jecxz
inc
pop
pop
cltd
shlb
add
ret
inc
pop
fs
outsb
nop
nop
iret
mov
scas
jbe
mov
dec
or
mov
jmp
add
idivb
fimull
lret
push
jb
das
inc
insb
xchg
imul
mov
and
push
jp
push
popa
push
repz
imul
lods
sub
and
pop
lock
pop
mov
xor
clc
inc
syscall
insl
enter
sbb
movsl
shrb
pop
fs
mov
jo
sbb
mov
push
inc
add
lcall
ret
out
mov
pushf
rolb
pop
adc
lcall
adc
mov
push
dec
or
insl
outsl
icebp
mov
mov
cmp
jle
pop
scas
clc
cmpsl
jo
push
test
in
iret
mov
bound
xchg
push
mov
and
or
fucompp
ret
sahf
cmp
or
adc
outsl
dec
sub
orb
sub
outsb
add
mov
add
mov
cld
aam
clc
sar
mov
sub
dec
cmpsb
fsubp
inc
dec
and
inc
out
sahf
icebp
fs
testl
in
push
mov
sub
sub
pop
bound
or
sbb
lds
data16
mov
iret
outsl
lea
sbb
ret
mov
les
imul
orl
jns
lahf
add
mov
clc
ret
leave
inc
and
rclb
fstps
lret
movsb
fimuls
dec
mov
xchg
test
jb
push
and
stos
jo
inc
out
cmp
lret
outsl
fisttpll
xor
xchg
push
shll
sbb
push
dec
call
sub
mov
cmp
inc
sti
mov
loope
popf
lret
pop
fldenv
insb
xchg
stos
sub
shrl
dec
popa
int3
popf
or
cli
or
or
subl
test
sbb
divl
jb
jmp
or
lods
sub
mov
sbb
mov
pusha
arpl
sub
div
pop
bound
cmp
and
add
or
arpl
jns
adc
xchg
mov
sbb
xchg
or
insb
xchg
dec
mov
aaa
fimuls
inc
xor
jne
jp
mov
inc
jno
xor
sti
rcrb
ja
xor
fadds
repz
xchg
mov
sub
inc
enter
popf
xor
xchg
jae
pop
daa
and
sub
lock
imul
movsb
ja
push
push
in
popa
stos
adc
mov
fisttpl
jae
cmovno
add
test
out
loope
mov
in
push
stc
push
jbe
std
xor
lock
test
sbb
mov
cmp
mov
out
hlt
test
mov
push
add
outsl
clc
popf
pop
rorl
cmp
mov
dec
icebp
push
rcr
pop
inc
push
mov
ss
ffreep
jnp
in
sbb
mov
data16
and
mov
lods
dec
divb
dec
inc
mov
cltd
mov
jns
push
pushf
aam
lahf
add
das
std
loope
and
es
sub
cld
push
mov
jno
adc
std
cmc
push
test
je
xchg
mov
insb
jo
test
cmp
std
jmp
lock
pop
cmp
mov
push
sbb
outsb
inc
icebp
scas
jb
xchg
or
int
rcrl
pop
rcll
es
mov
mov
mov
adc
adc
push
repnz
pop
xchg
int
or
xor
sub
cmpsb
icebp
mov
addl
mov
push
push
loope
insb
and
push
dec
scas
mov
xchg
mov
mov
push
popf
les
cld
mov
movsb
data16
mov
shll
mov
out
ret
push
xchg
cmpsl
loop
ficoms
mov
std
test
dec
dec
rorb
mov
pop
les
test
mov
pop
push
stos
ret
loopne
sar
sub
notb
in
clc
jl
add
imul
nop
and
pop
clc
jns
faddl
xor
push
rcl
sbb
xchg
mov
mov
pusha
rcrl
adc
jae
fldcw
xchg
mov
xchg
bound
push
xorb
lahf
add
push
ret
fwait
pop
mov
or
xchg
xor
mov
sbb
xchg
mov
int
sbb
xchg
je
in
jnp
add
adcl
insl
xor
push
lods
add
cwtl
roll
adc
out
add
ja
add
stc
jg
sahf
pop
mov
fsubl
ret
or
pop
or
xchg
xlat
dec
roll
push
xchg
das
pop
cmp
inc
data16
ljmp
das
or
sahf
fdivs
icebp
test
jbe
inc
sub
loopne
adc
mov
xlat
movl
je
pop
inc
data16
xchg
rorb
sahf
fistl
fidivl
jg
cmp
test
pusha
sub
sbb
sub
adc
call
inc
std
dec
mov
movsb
mov
push
adc
jne
dec
add
pop
and
jns
pop
add
jmp
int3
sbbl
xchg
loop
push
cmp
mov
outsb
cmp
mov
xchg
ret
push
jecxz
adc
imul
jge
xor
inc
lcall
fmul
roll
push
xor
pop
cltd
div
popf
pop
dec
inc
pushf
stos
rcrb
push
call
ret
jnp
enter
ljmp
mov
ss
fsubs
call
test
mov
dec
stos
inc
sbb
pusha
mov
popa
pop
mov
loopne
xchg
pop
xor
add
sub
mov
repz
mov
lcall
and
push
testb
push
addl
int3
mov
subl
or
subb
xor
sbb
jl
nop
int
mov
int
xchg
stos
and
das
movsb
inc
push
xor
jbe
sbb
pop
pop
ja
jbe
clc
out
xor
cmc
adc
int3
add
in
mov
cmc
jge
lret
xchg
cmp
adc
decb
inc
push
inc
call
cmp
push
jge
jnp
jmp
ret
dec
cmp
cwtl
sub
pop
dec
xchg
rorb
cmp
bound
lods
sbb
xchg
aad
push
add
push
test
bound
or
sub
jb
and
and
mov
cmpsb
jle
cwtl
sti
aaa
inc
repnz
pop
mov
jb
fnsave
add
sahf
shrb
enter
mov
mov
mov
or
mov
les
pusha
adc
sbb
push
data16
and
inc
sbb
xor
sub
imul
iret
mov
test
ficoms
vmulss
or
scas
xchg
gs
dec
push
ds
loope
mov
inc
cmp
movsl
into
xor
fisttps
push
nop
jo
cmpsl
xchg
add
dec
sub
push
dec
xchg
mov
jge
aaa
ret
jg
sti
mov
jbe
cmp
movsb
and
xchg
loopne
inc
out
mov
push
cmpsl
jecxz
mov
or
xchg
loopne
enter
sub
iret
iret
lods
sbb
push
movsl
andl
jge
je
ljmp
mov
or
adc
lods
jo
add
lret
fdivr
jnp
xchg
cmp
cmp
fwait
adc
adc
test
repz
jne
testl
mov
insl
push
stos
cmp
inc
push
lcall
jbe
cmp
in
insl
out
jne
xor
in
lret
adcl
stos
cmp
mov
pop
mov
pop
pop
cli
fldl
cs
daa
push
sbb
fimull
cmpb
scas
cmp
popf
adc
jecxz
jae
jns
test
mov
fldcw
xchg
ret
pop
lods
adc
pop
repnz
imul
sarl
imul
dec
loop
mov
sub
clc
push
lea
sub
or
pop
inc
sbb
orl
arpl
cmp
adc
xchg
mov
cwtl
repnz
stc
sbb
das
inc
insb
inc
stos
sbb
loopne
adc
out
jbe
test
insb
xor
push
addr16
popa
jae
lods
outsl
push
sub
and
mov
pop
cli
repz
xor
test
push
jae
sub
mov
repz
sbb
mov
sbbb
add
ret
ret
xchg
sbb
aam
cmp
push
std
cwtl
out
in
sub
or
or
cmp
xchg
ret
aad
push
adc
mov
push
and
addr16
arpl
push
or
out
mov
gs
cmp
mov
mov
sub
idivb
fdiv
insl
lahf
push
stc
mov
shrb
sub
bnd
pop
adc
ja
fwait
sub
loop
mov
xchg
sub
lret
in
adc
js
push
and
push
addr16
mov
pop
push
mov
jnp
fwait
bnd
push
cmp
xchg
and
xchg
data16
jns
jge
push
sbb
or
sub
xchg
cld
bts
iret
scas
xchg
ror
mov
insl
add
jmp
int3
enter
jns
aaa
nop
insl
pop
push
fwait
push
adc
sub
jns
testb
mov
shrb
loopne
sub
push
or
pop
sarb
or
dec
sahf
mov
add
stos
pop
xchg
push
in
shll
sarb
inc
fbld
arpl
aaa
out
repnz
loopne
frstor
pop
dec
repnz
or
xchg
rcrb
or
imul
sbb
push
mov
cltd
cmp
push
fwait
stc
stos
or
sbb
and
enter
xchg
mov
inc
outsl
fsts
jmp
lret
divl
mov
push
fbstp
and
sbb
dec
dec
cmc
xchg
mov
jne
sub
shll
mov
loop
sub
scas
sti
outsl
ret
fdiv
jl
arpl
stos
mov
jo
insb
pop
negl
aas
data16
dec
xor
lcall
jae
loope
pop
xchg
push
pushl
jecxz
test
stc
mov
mov
lret
lcall
inc
push
leave
in
push
imull
ret
and
xor
rcll
iret
fstl
sbb
ds
cmpsb
add
dec
imull
mov
sti
jle
movsb
pop
pop
lods
int
shll
sbb
js
fstpl
orl
push
pop
scas
cltd
sbb
inc
fistl
xchg
repz
adc
cmp
push
imul
lea
xchg
insl
arpl
mov
sbb
jns
je
int
sbb
insl
lds
xchg
pop
jae
jmp
test
rcrl
std
dec
sub
push
sbbb
push
or
int
jno
push
pushf
dec
inc
mov
push
sbb
cmc
nop
pop
aas
in
sbb
cltd
lods
add
popf
xor
dec
add
add
out
mov
sbb
gs
int
cmc
push
push
insb
testb
cli
jl
lods
sti
lods
mov
or
mov
xchg
cwtl
pop
fs
mov
jl
adc
pop
add
out
rorl
icebp
dec
push
ss
into
stos
or
ret
adc
push
iret
cmp
stos
adc
mov
mov
xor
jmp
xchg
xor
fbld
ret
xchg
push
repnz
inc
jo
adc
and
xchg
fildll
addr16
mov
mov
adc
fdivs
insb
lods
sub
int3
cli
test
jne
cld
in
sar
ret
pusha
or
in
mov
jle
aaa
lcall
aad
lods
popf
push
pop
sbb
je
inc
pop
setl
movsb
and
daa
add
mov
pusha
dec
pop
jmp
jecxz
ret
cld
mov
jmp
jo
fwait
out
rolb
jo
lods
loope
dec
hlt
push
mov
inc
and
mov
pushl
imul
jne
cli
mov
push
push
outsb
cmp
inc
mov
call
fldl
or
fsts
jmp
cmpsl
cld
inc
out
pop
lods
sbbl
loope
mov
pop
lahf
ret
out
orl
aam
int
inc
loopne
inc
push
push
fldenv
fimuls
or
or
xchg
or
movsb
aam
orl
arpl
leave
dec
sbb
insb
cs
cmpsb
adc
mov
push
into
repnz
cmc
stos
cli
or
add
cmp
mov
cmpsl
lods
inc
push
call
dec
xorl
lea
jae
jno
ljmp
in
pop
rcl
sbb
ret
aas
fs
cmpsl
pop
mov
cmp
insl
ret
or
add
scas
dec
clc
rcr
clc
pusha
adc
cmpl
jbe
sub
ljmp
shr
ja
aas
mov
xchg
aam
jecxz
in
stos
sub
jg
pop
ds
sub
xchg
roll
adc
pop
xchg
lds
ret
rcll
roll
xchg
cmpl
aaa
pop
stc
push
rcr
cltd
dec
xor
mov
jo
jp
icebp
in
add
bound
fnstsw
adc
andb
add
cmp
gs
jecxz
pop
mov
nop
dec
push
sbb
xchg
dec
push
mov
dec
adc
les
mov
fsubs
and
mov
scas
dec
fiadds
test
fldcw
std
and
mov
test
inc
mov
sbb
xor
mov
iret
xchg
lcall
enter
mov
int3
xor
or
sub
inc
iret
add
mov
movsb
lea
fisubs
rcrb
xor
repz
mov
pop
adc
mov
or
lret
dec
fxch
sub
cwtl
dec
scas
sbb
push
push
fisttps
jbe
dec
mov
lret
add
bound
dec
mov
sbb
rorb
cmp
sub
mov
mov
enter
fdiv
push
dec
mov
mov
mov
lahf
repz
or
sbbb
jmp
incl
clc
sbb
icebp
daa
cmp
fstpt
ss
fisttpl
lds
sub
mov
pop
push
jnp
pop
add
pop
push
push
insl
xchg
cwtl
mov
xor
stos
and
fsubl
inc
sbb
or
test
fstps
and
addr16
addb
stos
mov
scas
test
rcll
hlt
out
inc
outsb
xchg
pop
xchg
out
xchg
mov
leave
mov
in
adc
ljmp
loop
and
xchg
jmp
mov
inc
in
lret
ss
imul
jae
mov
out
stc
nop
mov
adc
mov
push
dec
lea
pop
fdivrs
mov
subb
divb
push
xor
loop
sbb
imul
adc
push
fwait
jno
adc
and
push
xlat
jno
test
mov
outsl
cmp
rorl
icebp
int
add
addl
xor
es
sub
mov
xor
test
shl
adc
mov
inc
add
enter
cltd
stc
mov
add
cs
and
adc
test
push
pusha
mov
jbe
scas
aad
mov
ljmp
or
aaa
leave
mov
cmp
xor
dec
xchg
jb
lcall
adc
icebp
movsl
xor
sarb
jne
test
ss
pop
cmpb
pop
imul
dec
or
scas
add
adc
xlat
cmpsb
cmp
lret
jl
aad
lret
mov
stc
stc
fsubr
adc
in
ret
loopne
je
loop
and
and
arpl
pushf
loopne
filds
loopne
iret
dec
pop
xor
stos
and
ret
call
or
and
add
push
sti
gs
push
adc
lds
mov
pushf
push
mov
xchg
imul
rolb
inc
shlb
loop
js
push
sbbb
sub
mov
fs
mov
js
cmp
sbb
movsl
lahf
rclb
add
lahf
xchg
dec
scas
pop
cmpsl
lods
push
mov
pop
xchg
xchg
in
jmp
icebp
es
aad
movsb
int3
pop
cld
fstl
sub
aas
sahf
cmpsb
mov
or
clc
inc
out
xchg
xchg
push
sub
lret
mov
jecxz
add
jl
add
lods
test
mov
cld
cld
pop
dec
clc
iret
ffree
cs
into
cmp
mov
inc
dec
push
mov
test
cli
mov
mov
cmp
bound
out
add
pop
push
or
ja
push
xor
pop
dec
jecxz
jo
sbbl
xchg
mov
or
lock
scas
sbb
push
dec
movsb
std
pop
mov
xchg
icebp
lret
jle
iret
xchg
sub
arpl
sub
pushf
or
movsb
aas
into
push
int3
fs
stos
add
mov
arpl
es
out
add
add
mov
das
xor
xchg
inc
stos
xchg
and
out
fcmove
xchg
subb
xchg
xchg
fcmovne
call
mov
mov
pop
out
fs
mov
pop
mov
add
imul
push
hlt
adc
jne
fwait
jmp
and
ja
fisttpl
sbb
scas
mov
jne
add
and
shll
lods
pop
lcall
mov
in
inc
add
jns
cmc
sbb
lret
cmp
mov
mov
mov
jno
push
int
ds
or
pop
or
or
xor
leave
pop
cmpl
imul
cmp
cmp
shrb
das
pop
aaa
inc
test
push
nop
insb
jg
add
xlat
or
cmp
ret
std
gs
mov
mov
test
mov
or
or
add
shlb
iret
shlb
push
movsb
xchg
fbld
add
pop
lret
cltd
mov
insb
aas
out
pop
adc
negb
push
jp
scas
pop
movsl
rcll
adc
data16
repz
lret
jg
arpl
push
cltd
sub
clc
pop
cmp
movl
xchg
lcall
jbe
scas
lret
ficompl
movb
push
jge
push
push
jo
jnp
push
loope
pushf
js
push
xor
outsb
lods
jb
jl
jb
inc
and
and
stos
lods
rorb
jae
sub
xchg
inc
stos
mov
adc
inc
test
int
enter
popa
push
icebp
jp
das
add
pxor
add
mov
scas
out
sub
sahf
lock
ss
iret
sbb
xor
ficoms
cmc
adcb
mov
int
mov
fdiv
lods
imul
mov
cmp
dec
jbe
shll
jns
mov
fcompl
rorl
xor
scas
stos
jmp
cmp
fcomp
mov
cmpsb
sbb
lret
mov
dec
orl
out
loop
mov
lcall
mov
xchg
jecxz
and
mov
aas
jecxz
outsb
pop
loop
repnz
jle
in
jne
or
scas
dec
cld
sbb
jae
in
inc
pop
movsb
call
sar
pushf
push
xor
jg
rcl
push
fwait
mov
cmc
insl
movsb
pop
out
pop
fidivrs
mov
cmp
pop
dec
xchg
jge
dec
and
insl
cmp
fiaddl
std
xchg
pop
xchg
jge
rcrl
decl
sahf
jns
fs
pushf
arpl
pop
outsl
cli
jb
fldenv
and
es
daa
xor
pop
sbb
push
outsb
push
jle
lods
adc
out
jge
rorb
xor
adc
sahf
inc
sarl
int3
mov
les
fbstp
ret
adc
mov
mov
inc
or
cli
xor
gs
popa
add
jge
jg
stos
shl
out
shlb
lahf
out
scas
push
mov
bound
xchg
push
xchg
jmp
test
popf
arpl
sarl
push
imul
in
pop
stos
sub
dec
imul
jo
rolb
test
xor
xor
pop
inc
mov
addl
xchg
insl
pop
cmp
jae
lahf
pushl
add
jp
pop
out
mov
xchg
mov
mov
sub
mov
fdivrs
fldt
jb
sahf
test
push
cmp
lea
add
iret
push
les
dec
inc
push
sub
outsl
xchg
pop
stc
push
filds
call
mov
jne
push
and
add
inc
cmp
mov
movsl
inc
lahf
aad
push
inc
out
nop
mov
sub
arpl
cmp
inc
jae
js
jmp
icebp
leave
xor
scas
int3
jns
or
test
mov
inc
add
or
mov
xor
call
cmp
insl
push
mov
test
add
test
inc
loopne
xchg
test
xorb
mov
xchg
mov
mov
sbb
sbb
rcl
loope
push
pop
jl
das
sbb
aad
xchg
mov
dec
dec
add
push
movsb
xor
inc
es
out
adc
dec
mov
btr
push
insl
push
pop
dec
add
enter
fcmovnb
dec
je
push
dec
int
push
add
or
adc
out
lea
xchg
cwtl
or
sahf
mov
xchg
sub
xchg
push
std
xor
lock
xor
push
jmp
add
in
das
dec
mov
ds
pop
mov
mov
inc
in
jbe
mov
leave
xor
and
mov
push
xchg
jecxz
fists
loope
ljmp
or
leave
mov
cmp
imul
insb
lods
mov
lea
jg
insb
mov
pop
int
cmpsb
clc
scas
sub
sbb
jb
lock
mov
adc
roll
fdivrl
sti
movb
add
insb
sub
lea
aaa
push
inc
sub
lock
xchg
mov
fwait
mov
sub
sub
insb
int3
int
loope
fisubs
lock
mov
popf
inc
push
ret
inc
jns
cmp
repz
ds
and
pop
dec
xchg
mov
sub
add
jb
xchg
push
stos
stos
xchg
add
out
push
mov
in
push
je
push
xor
mov
jnp
adc
packssdw
mov
fwait
pop
out
lds
push
inc
addr16
mov
and
loopne
mov
aad
mov
cmp
decb
iret
dec
mov
repz
cwtl
outsb
pop
lock
into
xorb
lds
sub
sbb
cld
dec
bound
fadds
in
je
lret
fcmovnu
das
clc
mov
cmpb
lock
adc
call
cmp
pop
insb
dec
shlb
dec
icebp
jp
movsl
cmp
fidivrl
fwait
lds
push
outsb
scas
les
daa
push
or
add
or
leave
bound
fwait
in
jno
arpl
js
add
jnp
iret
jg
ret
mov
mov
adc
sub
sti
push
jns
ljmp
ret
mov
icebp
aaa
sbb
mov
mov
mov
fwait
adc
pop
jge
adc
pop
xor
jns
sub
and
arpl
mov
sbb
in
or
outsb
nop
adc
sub
sub
mov
inc
add
push
jmp
out
fildl
xorl
or
jle
call
add
fistpl
add
test
inc
pop
xchg
jne
jnp
xchg
shrl
stos
loope
xchg
cs
pop
sub
addr16
filds
push
daa
xor
cmp
add
ds
pop
and
movsl
insb
outsl
fwait
push
outsb
mov
pop
insl
mov
adc
movl
jl
test
push
inc
mov
xchg
push
push
push
insl
pop
push
movsb
jecxz
stos
inc
arpl
clc
xchg
test
mov
fildll
xchg
inc
dec
dec
or
in
xor
mov
dec
outsl
dec
xor
adc
xlat
aas
mov
insl
inc
std
push
jb
xor
push
lods
sub
mov
xchg
adc
sub
mov
fstpt
in
inc
mov
mov
sub
fwait
mov
xor
xor
pop
divb
insb
and
lret
in
pop
push
int3
xorb
xchg
pusha
pop
fstps
mov
pop
lock
or
pop
aas
fsubrs
roll
adc
out
push
mov
inc
cwtl
shl
add
jp
cmp
jl
cmc
pop
mov
inc
mov
cmpsl
enter
add
inc
jns
mov
nop
ret
mov
pop
lock
push
call
out
add
xchg
sti
push
ret
int
cmpsl
test
mov
adc
bound
push
shll
add
insl
imul
jno
subb
insl
and
fildll
xor
lret
stos
mov
lret
inc
jp
jmp
movsb
dec
push
cmpsb
or
shl
rcll
dec
test
mov
loop
mov
jmp
test
pop
inc
jle
jl
shrl
sti
lods
loopne,pt
adc
cmp
std
clc
test
pop
inc
ss
mov
pusha
xchg
xchg
or
jp
mov
repz
mov
add
les
test
subb
loopne
push
xor
xor
cltd
push
std
sbb
push
lret
adc
xor
mov
in
mov
std
jp
adc
je
xchg
ret
mov
dec
cmp
mov
jae
or
nop
xor
mov
sbb
jo
dec
xor
lods
mov
nop
mov
mov
lahf
movsl
inc
ret
lahf
rclb
loop
jmp
pop
xor
lahf
stos
ror
mov
push
xchg
les
mov
lret
dec
mov
jge
push
jns
cld
scas
xchg
pop
pop
dec
lret
int
pusha
lods
and
add
xchg
mov
push
mov
cs
bound
insl
push
das
shlb
push
adc
ret
mov
les
lcall
xor
lret
cmp
ss
dec
icebp
push
xchg
not
jl
add
sbb
lock
out
fsub
pop
jno
mov
out
jmp
test
xchg
dec
mov
clc
adc
loopne
or
addr16
jo
outsb
sub
inc
pop
and
add
add
jge
cmpl
push
xor
push
pop
es
sti
je
or
sbb
sbb
loope
ret
lret
cmp
nop
aas
enter
cmc
jnp
adc
push
inc
shll
test
or
fcmove
sbb
pushf
xchg
xchg
mov
in
in
adc
xchg
insl
add
out
cltd
mov
xchg
inc
pusha
stc
rclb
mov
mov
sbb
or
push
push
lcall
sahf
mov
sub
out
push
push
jno
insl
js
std
adc
inc
xchg
and
mov
xor
dec
sub
int
inc
push
xchg
stos
ljmp
sub
enter
ror
in
pop
xlat
imul
or
dec
daa
sti
addr16
mov
inc
adc
pop
rcrl
jae
popa
test
push
or
mov
inc
decl
xor
imul
mov
pop
popa
push
jmp
xchg
adc
ror
mov
pop
rolb
sbb
out
sub
popf
mov
cltd
cmp
int
dec
adc
lret
out
sti
outsb
aas
sar
fistpl
jne
jg
xor
mov
mov
andb
lods
lds
into
in
or
jmp
jae
mov
stos
xchg
dec
pop
je
pusha
inc
imul
xchg
pusha
lahf
mov
mov
push
sub
mov
mov
leave
rclb
fidivs
pop
or
adcl
roll
ret
dec
xor
dec
fiadds
inc
dec
add
sbb
enter
mov
mov
iret
mov
mov
dec
js
out
adc
and
andb
mov
sub
int
std
jp
pusha
fbld
rcll
sbb
push
loopne
mov
ds
push
notl
dec
call
shr
push
push
inc
ja
imul
ljmp
mov
imulb
dec
adc
jo
dec
and
in
leave
int
cmpsb
sub
add
sahf
jns
add
out
test
mov
pop
fidivrl
lea
outsb
rcrb
shl
pop
xor
xor
jecxz
fwait
sahf
cmp
xor
sub
dec
cltd
ret
xchg
jo
inc
push
cmpl
arpl
jne
pop
popa
out
fcoms
mov
daa
dec
lcall
jns
or
sbb
mov
ret
xchg
jno
enter
adc
inc
xor
or
andb
scas
adcl
xchg
cltd
loopne
inc
sti
fsubrl
sub
stos
cmp
adc
in
push
imul
sbb
add
popa
int3
sub
pop
mov
pop
sti
mov
sub
and
dec
or
mov
sbb
dec
rclb
or
adc
sub
mov
loopne
mov
mov
idivb
jmp
push
stos
pop
mov
push
mov
fldenv
mov
add
je
stos
fs
cmc
and
fsub
dec
pop
jg
jmp
mov
dec
decl
faddl
lret
jnp
rolb
fidivrl
cmp
mov
mov
and
test
pop
stos
in
cltd
jae
js
pusha
lods
data16
inc
pop
jge
pop
rcll
mov
faddl
push
icebp
push
mov
insl
sub
mov
xchg
dec
cmp
rclb
or
push
stos
stos
mov
test
and
mov
scas
inc
mov
stc
out
mov
pop
mov
int3
inc
adc
push
aas
imull
nop
mov
xlat
cmpsb
and
xor
stos
lret
xlat
in
rcr
xor
push
rolb
mov
js
outsl
roll
mov
hlt
sti
pop
js
push
xchg
cli
es
lret
sub
push
in
xchg
mov
xor
lret
and
inc
pop
mov
and
or
jnp
or
fisttpll
test
xchg
bound
mov
in
fsincos
mov
cmp
sub
adc
dec
sub
or
pop
jbe
adc
jbe
imul
sar
js
stc
jb
pop
mov
inc
xchg
jge
add
hlt
andb
jae
jle
int
push
mov
xchg
gs
jp
sub
jecxz
cmpsb
pop
cmp
cs
mov
push
stc
jp
imul
pop
and
pop
in
in
pop
sahf
and
pop
loope
cs
dec
lock
enter
adc
lods
out
mov
xor
out
push
aam
mov
flds
stos
xchg
add
mov
push
jbe
jecxz
mov
sahf
aaa
out
jmp
js
sbb
mov
repz
sub
sbb
xor
insl
push
mov
adc
mov
sub
sub
je
sub
push
cmpb
aam
jmp
int
sti
scas
push
sub
mov
test
lods
pop
jae
cmp
dec
adc
xor
pop
fmuls
ja
enter
cmpsl
push
into
ljmp
jno
leave
ret
movsl
fdivrs
pop
pop
add
add
stos
loop
jl
inc
js
sub
fbld
nop
dec
out
push
jle
sub
xchg
sti
sub
mov
out
outsb
shrl
push
lret
adc
lret
fildll
push
sti
mov
and
data16
js
loop
mov
je
push
and
adc
in
enter
es
xor
cmp
jo
sbb
and
ret
mov
lods
jl
sub
insb
xchg
clc
mov
cli
and
dec
enter
stos
sub
loop
into
pop
lcall
dec
push
cmp
addr16
lcall
mov
jge
mov
dec
cs
jnp
xor
lret
pop
pop
test
lret
mov
sub
in
inc
jg
in
rcr
push
out
test
sub
fdivs
jmp
xor
mov
cltd
in
mov
jae
jmp
sub
dec
imul
xchg
xchg
imulb
mov
pop
add
shll
inc
cmp
inc
push
pop
subb
stos
ljmp
fisubrl
sbb
push
add
sbb
or
pushf
and
cmp
jb
lret
xchg
cmp
pop
add
js
ja
outsl
fldcw
dec
in
jge
mov
daa
and
sbbb
rclb
add
dec
mov
cmpb
aam
aam
or
enter
fdivrs
les
cld
jnp
mov
xor
dec
call
pusha
pop
adc
push
in
fwait
iret
mov
cwtl
push
push
and
cmc
pop
add
adc
ja
push
js
pop
mov
cmpsl
shll
add
mov
lds
lret
dec
gs
es
call
ds
fldenv
fucomi
es
and
and
pop
jo
or
jmp
shrl
cmpsl
cltd
mov
dec
inc
movb
inc
and
push
icebp
xorps
out
jg
xor
in
or
divl
push
jmp
clc
bound
shl
pop
aas
mov
jge
xor
movsb
decl
adc
fisttpll
jmp
adc
push
sub
push
test
and
pop
mov
imul
jl
adc
or
cmp
fsubr
js
out
test
test
imul
into
loope
pop
std
rcrl
js
xchg
cmc
push
mov
xor
and
xchg
dec
lret
sbb
cwtl
ds
mov
dec
push
mov
std
in
rclb
xor
rcrb
les
cli
xlat
fwait
das
xor
repnz
hlt
das
mov
mov
arpl
add
aad
rol
and
mov
test
in
push
inc
stos
cmp
jns
out
sbb
adc
movsb
cmp
jae
aad
rolb
add
repz
lahf
mov
inc
sti
test
lcall
dec
mulb
sbb
sub
arpl
out
mov
sub
pop
jns
lcall
pusha
fldenv
mov
shl
js
adc
dec
in
out
leave
cmp
fwait
xchg
leave
push
dec
fsts
inc
jbe
repnz
jecxz
jo
xor
lods
mov
xchg
jl
mov
icebp
xor
fxam
pop
stos
jno
mov
lahf
loope
pop
sbb
rcll
subl
xor
dec
cmc
push
loope
call
mov
sbb
sub
pop
dec
xor
lcall
outsl
std
ds
outsb
or
nop
daa
mov
hlt
shll
push
hlt
inc
mov
jge
push
jo
in
insl
inc
push
pop
ret
sbb
int3
repz
inc
mov
lods
push
out
mov
jl
xor
sbb
jne
push
jmp
es
xor
xor
lds
insl
stos
popf
test
sub
adc
lret
add
pop
imul
jb
mov
testl
xchg
inc
sub
cmpsb
vsqrtss
sub
fucom
ret
or
push
outsl
fcoml
push
and
push
imul
and
mov
jae
mov
xchg
pop
jns
movsl
test
push
add
dec
psrld
and
jge
push
pop
leave
ret
dec
sbb
imull
es
stc
js
or
jnp
lahf
jge
fs
shl
mov
test
inc
push
adcb
sti
mov
lods
aaa
scas
push
fisubl
and
addb
adc
loope
ja
xor
jo,pt
adc
lea
jns
xchg
sti
rcl
dec
lock
jo
aam
pop
mov
addr16
xor
sbb
ja
dec
int
aaa
test
and
xor
xchg
into
mov
loop
imul
xlat
push
movsl
test
in
movsb
inc
mov
ret
scas
cmc
lods
and
add
pop
cmpsb
out
ret
aaa
and
jns
icebp
cmp
stos
jge
stc
xlat
cmp
cmp
fiadds
aas
insl
add
jno
cmp
aas
mov
push
stos
jecxz
aam
jns
int3
aad
jae
imul
cmp
jmp
stc
adc
jnp
fxch
fs
mov
jge
sti
and
inc
fsts
sub
adc
popa
jmp
rolb
fnsave
add
dec
ret
in
inc
or
mov
add
lods
incb
outsb
sbb
inc
xchg
add
fistpll
icebp
int
rcr
xchg
popa
nop
inc
out
hlt
mull
sub
jle
js
xchg
imul
mov
jnp
scas
imul
mov
dec
xor
adc
popf
stos
aas
push
lock
sbb
adcb
into
jl
and
pop
dec
outsb
mov
push
fisubrl
xchg
mov
fiadds
mov
cmp
adc
mov
orl
lcall
roll
xlat
ss
lcall
movsl
ss
insb
push
jo
cltd
test
ret
aad
cmp
cmc
std
rorb
icebp
data16
es
test
adc
jp
adc
mov
sbb
arpl
jg
pop
insb
fwait
jecxz
inc
lods
xlat
add
mov
iret
jmp
lods
scas
sub
rcll
push
jb
inc
addl
xchg
call
or
mov
pop
xor
cmp
mov
push
jmp
inc
xor
cmp
in
fdivl
push
aad
or
call
xor
filds
jne
inc
sub
xlat
pop
popa
push
and
cmpsl
test
sbb
imul
mov
cmp
sahf
mov
pushf
pop
lret
mov
inc
hlt
jo
out
xlat
xchg
aas
xor
pop
and
pop
pop
cmp
shlb
or
movsl
hlt
call
mov
push
push
pushf
ss
add
lds
popa
jge
std
fldl
cmp
aad
arpl
in
and
aam
mov
mov
sub
loop
fwait
jne
and
and
dec
mov
dec
pop
cmp
ret
lods
jp
mov
xor
popf
int3
loopne
ss
test
icebp
pop
xchg
lcall
add
aad
inc
or
inc
cmpsb
pop
mov
push
push
cmc
mov
push
inc
mov
jnp
dec
call
dec
xchg
data16
cmp
pop
iret
aas
pushl
cmp
js
jne
jmp
xchg
push
das
add
mov
dec
scas
vpsrlq
mov
hlt
mov
and
repnz
aam
push
and
cs
cmp
pop
int
adc
inc
clc
nop
sahf
jecxz
or
xchg
dec
jg
gs
pop
roll
mov
addr16
cmp
mov
repz
xchg
push
fwait
and
sub
dec
xor
cmc
mov
imul
aaa
lcall
inc
adc
and
xchg
mov
jbe
rorl
call
xchg
jge
mov
or
insb
or
push
mov
jno
hlt
fwait
sti
cmp
pop
sub
lods
sub
fs
fs
cmpsb
lcall
xchg
insb
fnstenv
fimuls
jo
pop
cmpsl
mov
xor
sub
fcoms
bound
inc
pop
cmp
jge
dec
cmpsl
or
push
int
add
mov
movsb
jle
push
test
adc
jns
loop
cwtl
notl
push
push
pop
rcll
in
test
mov
mov
push
mov
push
mov
nop
pop
jmp
xor
push
xchg
xchg
add
ret
xlat
fs
rcr
mov
jbe
and
filds
xchg
cmpsl
call
jl
xchg
jae
lahf
cwtl
jnp
fs
in
push
fists
cmp
vshufps
inc
sub
xor
adc
dec
test
outsl
push
lock
dec
dec
or
inc
dec
sub
subl
add
lods
shr
cld
into
pop
jle
xchg
jp
je
fidivs
ret
mov
sub
mov
stc
inc
push
loop
sbb
rorl
xorb
not
mov
and
cmp
xor
and
mov
lods
fwait
adc
cli
aam
mov
loopne
sbb
imul
sahf
aad
jecxz
scas
mov
loop
jbe
mov
int
mov
dec
sub
push
jne
mov
sub
repz
push
cmpsl
sub
sarb
rep
push
in
inc
cmp
test
paddsw
imul
out
push
xor
fsubl
sbb
fsts
xchg
cmp
pushf
shlb
pop
inc
inc
sub
in
addr16
push
fwait
adcl
into
das
adc
out
in
cmp
mov
xchg
pop
rolb
push
cmpsl
xchg
pop
ljmp
test
dec
test
je
sub
pop
inc
dec
jl
dec
int3
push
mov
mov
push
or
inc
mov
xchg
push
rolb
bound
leave
lods
and
xor
popf
or
and
mov
pop
lods
xlat
push
mov
popf
or
movsl
cwtl
xchg
lds
stos
lahf
jnp
orb
jp
std
mov
jnp
lahf
pop
ss
pop
push
js
push
insb
lods
push
dec
push
mov
mov
cli
mov
popaw
mov
push
rcrl
or
and
fildll
lea
enter
subl
adcl
imul
scas
push
jne
inc
fwait
push
mov
jmp
xor
push
xor
pop
mov
js
mov
jp
dec
les
pushf
out
nop
out
test
sub
int
xor
sti
mov
mov
lahf
pop
pop
adc
shrb
jg
sbb
jle
lds
std
inc
popa
rorl
sbb
neg
nop
mov
jns
outsl
xor
repnz
jl
xor
test
cmp
arpl
popa
mov
mul
fdivl
cmc
iret
pushf
fs
sub
mov
push
stc
fcmovnbe
xor
sub
xor
daa
shlb
popf
push
imul
and
leave
xchg
add
scas
mov
or
cmpsl
ja
mov
sbb
fs
stos
cltd
jl
mov
fs
mov
mov
aaa
call
mov
push
daa
ljmp
xor
dec
mov
shl
enter
jne
push
mov
adc
cmp
or
jb
inc
mov
or
sbb
sbb
popa
jbe
test
sbb
test
or
pop
jae
int
leave
enter
lret
and
in
test
or
lods
pusha
sbb
pop
addr16
mov
fdivrs
test
es
test
xchg
mov
cli
inc
stos
in
sbbb
sbb
lea
lds
mov
std
adc
lds
in
mov
dec
mov
add
call
lods
push
dec
pop
ficoml
mov
xor
jno
clc
mov
lock
lret
insl
pusha
pop
int
out
jl
out
sbb
sub
dec
push
mov
lods
dec
lea
aaa
cwtl
dec
out
movsb
mov
loop
add
and
lock
aas
xchg
and
movsb
push
repz
or
jecxz
or
fsubl
insb
adc
and
lret
pop
jns
inc
pushl
add
sbb
loop
jae
out
int
pop
mov
in
and
sub
scas
test
sarl
flds
jo
pop
icebp
rdtsc
jae
or
test
in
insl
dec
rcr
pop
mov
out
ret
push
sub
ficoml
xchg
mov
mov
jmp
divl
and
pusha
mov
push
les
pop
stos
aam
int
adc
adc
mov
aam
ret
out
sahf
repz
jb
dec
cs
pop
xor
mov
and
mov
xor
mov
xor
out
leave
fisttpl
cmp
push
jecxz
jb
out
inc
mov
pop
divb
adc
push
fnstcw
fldl
rolb
loopne
movsl
xlat
inc
insb
insb
cwtl
sbb
inc
push
push
mov
and
les
js
sbb
inc
sub
mov
xchg
fucomp
or
int
mov
sub
fsubrl
jne
sub
out
ret
daa
loop
dec
ds
mov
mov
cmpps
dec
adc
mov
pop
repz
je
mov
adc
insb
clc
out
js
pop
inc
xor
inc
fdivrp
stos
pop
add
or
push
movsb
lret
popf
loopne
and
jmp
out
adc
lea
std
addr16
movsb
sub
insl
flds
int3
inc
add
imul
ss
repz
jecxz
mov
mov
lcall
push
sbb
std
aam
cmc
hlt
inc
pop
ljmp
dec
jge
sub
pop
jmp
je
jo
sub
and
mov
push
ja
cmpsl
push
flds
or
fidivs
dec
je
and
aas
mov
pop
out
fwait
pop
mov
xor
cmp
sub
mov
daa
or
jecxz
mov
inc
adc
or
loopne
rcrb
push
cmpsb
outsb
lahf
movsb
dec
int3
shll
jns
dec
mov
sbb
addr16
fs
push
inc
aam
xlat
clc
dec
lea
icebp
pusha
shl
xchg
ja
push
nop
pop
rorb
test
and
adc
sub
add
pop
rol
mov
repnz
xchg
push
push
cmc
aaa
out
fsubr
pop
or
insb
jb
sbb
nop
test
cmpsl
scas
xor
pop
adc
clc
movsb
mov
jecxz
cmp
mov
pushf
xchg
out
loope
out
loope
stos
mov
push
xchg
and
pop
xor
sbb
mov
mov
or
scas
sub
rcrb
jp
mov
mov
popa
mov
and
cmp
xchg
adc
loop
dec
rolb
lcall
ret
mov
and
lret
outsl
pop
mov
imul
jo
push
lret
loop
lea
sub
pop
and
sbb
or
push
in
out
jge
je
and
mov
js
lcall
es
xor
sub
push
lods
in
jg
mov
lods
xor
and
mov
cmp
or
iret
mov
ret
shl
mov
movsb
les
repnz
jnp
jge
xlat
addr16
or
aas
dec
push
cmpsb
ja
adc
push
outsb
mov
xor
mov
xchg
mov
das
cmp
pop
pop
mov
xchg
cmp
fidivs
leave
push
adc
pop
pshufw
rorb
cmpb
mov
inc
mov
aam
daa
ljmp
outsl
fisubl
adc
adc
and
iret
mov
add
int
repnz
pop
int3
dec
push
jge
ret
insb
and
add
jne
push
lods
subb
or
rolb
popl
test
xchg
fimull
stos
inc
mov
test
sub
lock
out
mov
in
mov
outsl
and
ds
int3
cmp
stos
std
or
scas
and
add
in
push
xlat
mov
push
movsl
sbb
push
inc
mov
outsb
or
xchg
jl
aaa
sbb
push
lods
cmp
or
or
dec
lret
es
sahf
xchg
scas
fidivl
and
add
jne
sub
std
jno
cmp
push
xchg
scas
lds
iret
jmp
movsb
inc
xchg
adc
insb
and
or
cmpsl
cmp
pop
add
lahf
sbb
mov
out
popf
jns
imul
sbb
fbld
mov
push
lret
dec
inc
arpl
ret
stos
push
mov
rcll
aaa
add
negb
insb
adc
push
cmp
add
inc
mov
push
roll
dec
pop
inc
call
cmp
fsubrs
pushf
sbb
jnp
xchg
cli
and
adc
cmp
ja
out
xor
std
sbb
int3
or
lret
and
sub
cmc
pop
cmc
fsin
arpl
and
sub
xchg
popa
sub
orb
jmp
fs
insb
jle
cli
pusha
pusha
sahf
xchg
cmpb
mov
push
pusha
mov
aad
rcrb
mov
mov
cmpsb
fucomip
sbb
pushf
xchg
cs
jns
rorb
push
fbld
jecxz
mov
or
ljmp
pushf
cmpsb
sarb
dec
cmp
jp
sbb
or
leave
pop
inc
jo
test
pop
mov
xchg
lock
not
mov
mov
and
jle
pop
push
stc
adc
clc
push
xor
xor
push
xor
sub
outsl
fcompl
xchg
dec
push
lods
pop
inc
mov
mov
mov
xor
xchg
dec
ljmp
dec
cltd
loope
push
enter
pop
xor
out
adc
inc
mov
pushf
inc
icebp
test
push
mov
pop
stc
cld
jne
dec
aam
hlt
jno
inc
xor
or
add
inc
in
lock
adc
cs
add
cmpsl
std
jge
cmpsb
pop
cmpsb
push
nop
push
repnz
repnz
out
lods
mov
ror
mov
mov
sahf
or
xchg
cltd
loope
repnz
in
loopne
dec
in
mov
mov
sarl
jecxz
rcll
repz
scas
lods
pop
xor
stos
pslld
and
add
cmp
and
andl
cli
inc
inc
inc
in
jg
stos
cld
cwtl
int
pop
ror
xchg
adc
pop
xor
andl
scas
sti
pop
xchg
enter
je
addr16
push
push
repnz
cmc
imul
mov
ret
fisubs
adc
es
jge
sahf
mov
dec
push
push
fistps
mov
mov
stc
mov
mov
daa
xchg
cwtl
sub
jo
push
clc
jbe
mov
xchg
fiaddl
dec
and
mov
push
cltd
sbb
mov
mov
push
push
andps
lods
and
jns
test
push
mov
jne
adc
xlat
imul
in
jno
pusha
lret
fmull
xor
test
inc
sbb
repz
inc
and
fdivl
loopne
out
pop
mov
sarb
leave
hlt
pop
mov
test
dec
push
xor
scas
inc
les
rep
dec
push
mov
aam
inc
xlat
into
mov
rcrl
add
jno
sbb
and
pop
mov
inc
push
add
jle
and
sti
cmpsb
dec
mov
aam
in
jg
cmp
in
negl
add
jns
jge
jmp
xadd
hlt
mov
clc
popf
pop
mov
cwtl
sbb
push
dec
mov
pop
sahf
jmp
outsb
xchg
lahf
xchg
mov
scas
adc
push
push
pop
mov
sar
dec
mov
or
adc
in
call
push
xor
and
adc
rclb
jmp
push
xchg
cmp
adc
adc
ret
insb
insb
movsb
std
int
fcmovnb
addr16
push
std
jbe
test
mov
mov
lods
icebp
jg
add
je
mov
call
repnz
ljmp
dec
f2xm1
in
icebp
insl
iret
fwait
test
mov
hlt
ja
jge
clc
orl
lahf
mov
dec
imul
push
dec
imul
int3
and
mov
jo
daa
pop
out
jl
shl
lds
xchg
lods
mov
mov
enter
adc
fimuls
xchg
jbe
outsb
in
push
popl
gs
mov
cmp
jne
repnz
dec
out
testl
mov
sub
movsl
push
aam
push
or
dec
inc
enter
mov
pop
sub
bound
adc
sti
stc
jge
fldenv
lds
loopne
out
add
mov
clc
icebp
inc
mov
cmp
movsl
mov
xchg
adc
jnp
or
mov
test
scas
jge
imul
push
aam
push
sbb
fisubrs
bound
cmpsb
sub
jns
sub
pop
or
fcoms
xchg
push
xor
aad
push
jae,pt
sub
subl
and
sbb
push
pop
lods
loopne
mov
repz
jo
pop
cs
or
mov
adc
lahf
inc
mov
cmp
xchg
or
fwait
cld
mov
jle
shll
cltd
fwait
ret
sbb
dec
push
mov
inc
cltd
icebp
fldcw
shrl
mov
push
dec
mov
scas
xor
xor
cvtdq2ps
cmp
and
je
sbb
cmpsl
and
lods
imull
rorl
add
pop
lock
jmp
and
pop
cmp
mov
fs
mov
push
push
iret
sbb
fld
dec
xchg
cmp
std
nop
hlt
hlt
jne
stos
mov
and
dec
sahf
inc
and
sub
xor
sub
filds
lock
lret
popa
xchg
fsubrl
fcoml
jae
push
stc
shlb
inc
hlt
in
lahf
sahf
sti
xor
xchg
les
dec
xchg
lcall
shl
stos
pop
sbb
jmp
cmpsl
popa
popa
xor
shll
mov
movsl
add
stc
fwait
and
inc
pop
pop
or
push
dec
jle
inc
insb
sbb
in
xor
jae
aaa
into
cmpsl
int3
or
mov
shll
jb
cld
sbb
add
imul
fwait
mov
cmp
mov
sarb
fdivrs
test
sbb
stc
lahf
es
inc
ret
cmp
int3
jg
pxor
inc
stos
testb
sbbl
out
xchg
ret
and
mov
fcmovnu
lret
fidivl
into
insl
int3
jecxz
push
push
stos
add
out
pop
push
dec
sub
mov
subl
jle
xor
into
jge
cmp
mov
shlb
cmp
ret
orb
xchg
jnp
xchg
stos
mov
xor
out
adc
insl
out
negb
out
pop
dec
inc
mov
clc
stos
mov
incb
mov
ret
pop
fiadds
sti
xorb
fdiv
pop
les
jae
push
shlb
test
mov
aad
ss
scas
sbb
out
icebp
mov
xchg
sar
ds
lock
adc
sarb
push
lods
test
sub
sub
icebp
sahf
xor
jg
xchg
idiv
ret
pop
sbbl
es
inc
movsb
fmulp
adc
loope
je
ret
pop
fsubrl
dec
jl
das
jecxz
mov
xor
outsb
jg
inc
leave
cmpsl
cld
mov
sub
push
dec
sub
out
xchg
sbb
inc
jae
push
cmp
fcoml
sub
js
test
scas
jnp
and
sub
pop
das
or
fldenv
or
mov
jb
in
cli
jno
add
stos
negl
scas
dec
jp
fidivrs
gs
rorl
mov
sbb
loop
seto
sbb
xor
cwtl
mov
inc
or
jmp
and
dec
xchg
mov
das
push
fwait
or
div
mov
loopne
pop
pop
jecxz
xorb
jbe
push
mov
pop
cld
insl
test
mov
inc
cmp
mov
pusha
mov
xchg
jecxz
fldcw
je
pop
scas
add
fisttps
jno
mov
xor
cmp
ficoms
rcll
lcall
insl
jb
gs
in
mov
negl
push
and
mov
fcoms
mov
stos
lock
ss
shll
je
dec
cmpsb
mov
pop
pop
pop
pop
test
xor
fidivrl
lods
aad
and
loop
add
push
test
dec
dec
test
cmp
aad
lea
stos
jb
sbb
jb
inc
sub
daa
mov
xchg
xchg
lcall
lds
nop
inc
mov
or
mov
enter
movsb
dec
push
xor
jno
or
popf
push
sbb
bnd
call
ret
adc
jecxz
push
ja
in
mov
xchg
dec
jle
adc
repnz
fs
jmp
ret
push
divb
add
stos
pop
sbb
dec
mov
mov
push
mov
shrb
jge
xor
cs
and
js
stos
call
jo
out
int
mov
sbb
ss
pushf
or
mov
add
and
jno
cmc
shrb
pop
sar
enter
fidivrs
das
adc
test
int
mov
in
icebp
flds
jo
lret
test
jge
cmp
jbe
testl
aad
xchg
aam
xchg
stos
shll
popa
xor
xlat
leave
les
ror
pop
inc
orl
pop
cmpsb
dec
mov
inc
lcall
sub
lahf
pop
imul
test
jp
ljmp
cltd
jno
add
push
testb
je
loopne
cmpsb
inc
or
pop
loopne
out
in
pop
jns
adc
bound
dec
add
popa
push
xchg
lcall
sti
jno
lock
inc
dec
dec
aaa
je
repnz
sar
mov
sbb
and
fdivl
push
js
jmp
xor
and
lea
or
roll
cmp
leave
add
pop
in
mov
cmpsb
mul
mov
fisubs
insl
in
xor
sub
dec
scas
mov
sub
rolb
lret
xor
cmp
mov
out
cmp
nop
lcall
and
add
sbb
sub
lcall
cwtl
xchg
fsubs
mov
push
leave
pop
adc
push
add
data16
ja
daa
mov
xor
or
xchg
add
out
dec
push
xchg
inc
inc
or
cli
stc
adc
pop
mov
xchg
xchg
add
loop
inc
fisttpl
fbstp
je
cwtl
xchg
xlat
xchg
push
rcll
jge
andl
mov
outsl
imul
dec
adc
xchg
mov
aas
push
leave
sbb
ljmp
idivl
adc
and
or
pop
int
rclb
bswap
xchg
inc
jo
mov
fldenv
ljmp
scas
out
lods
cmp
and
adc
add
adc
addb
arpl
mov
sbb
cli
push
and
outsl
xchg
jne
bound
push
andl
lret
xchg
clc
ret
inc
mov
fidivl
lea
inc
loope
fsts
xlat
push
pop
loop
jbe
push
fdivrp
je
adc
sub
arpl
sarb
rclb
xchg
pop
shll
adc
xchg
push
xor
shll
cmp
inc
mov
jno
cmc
cmc
aas
lea
dec
jae
enter
in
pop
pop
mov
leave
rolb
out
jo
add
cmp
push
enter
aaa
jns
adc
adc
xchg
sbb
dec
xor
jl
cli
sub
sub
sub
movsl
sub
pop
xor
jp
push
out
push
das
cmp
pop
in
sbbb
xor
popa
mov
inc
test
or
mov
stos
jae
dec
mov
xor
dec
jnp
pop
mov
cmp
outsb
and
inc
stos
daa
sub
ret
mov
push
pushf
in
ja
mov
sub
xor
push
fstpt
mov
in
mov
pop
inc
sub
cs
icebp
jno
mov
insl
cmp
cmp
mov
std
insl
mov
xor
push
aaa
push
test
cwtl
lret
push
ss
jmp
addl
mov
cwtl
sub
les
and
sbb
sub
fsubrp
jnp
je
cmpsb
stos
mov
daa
adc
push
insl
sub
data16
or
jg
test
hlt
dec
test
sbb
xchg
mov
sub
lds
jmp
mov
add
xchg
imul
ret
mov
imul
movsl
nop
fs
js
and
stc
push
mov
mov
int
scas
and
sub
cmp
mov
or
into
insb
cmc
xchg
cmp
popa
or
cmp
icebp
push
test
adc
shl
dec
fwait
xchg
inc
add
fucomip
pop
jne
lods
adc
les
add
or
sub
bound
ret
dec
xor
movsb
mov
cmp
inc
addr16
std
jno
pop
adc
add
mov
lods
mov
mov
enter
mov
push
into
mov
cmp
orl
enter
incl
gs
mov
add
aam
int
adc
popf
cmp
gs
test
pop
or
pop
lahf
xchg
and
xor
jb
into
adc
add
insb
pushf
loopne
jb
mov
sub
out
add
test
lret
xor
mov
mov
mov
or
loopne
test
cmpsb
sub
addr16
dec
in
pusha
mov
cmc
adcl
movsl
adc
mov
xchg
mov
test
outsl
mov
sbb
xchg
mov
sub
aad
outsl
lods
cmp
and
data16
mov
ret
ret
fsubl
xchg
in
sbb
xor
add
movb
xchg
cwtl
push
inc
cmpsl
sub
xchg
dec
cmp
das
popf
sub
mov
outsb
leave
adc
ret
sub
and
scas
loop
loop
scas
xor
jmp
add
addr16
sahf
aaa
call
push
orb
and
sub
aas
push
test
loop
mov
add
jle
in
std
and
int
jnp
int
lods
mov
xchg
mov
scas
aaa
cmc
sbb
les
mov
pushf
test
xor
shll
in
or
sub
enter
adc
xor
fadd
push
xor
mov
inc
lds
sbbb
outsl
lea
cmp
sub
mov
mov
mov
and
adc
iret
adc
dec
movb
mov
mov
add
stc
dec
push
inc
and
loope
or
in
repz
aaa
insl
flds
repz
sub
aad
enter
lcall
clc
cmp
push
ljmp
mov
out
pop
call
fs
addr16
ds
cmp
stos
mov
lret
or
pop
pop
iret
nop
repz
scas
mov
out
sub
mov
xchg
notb
jp
mov
jbe
movsb
inc
sub
mov
fnstcw
ljmp
stc
xchg
mov
idivb
cmp
lea
arpl
adc
fcomip
sbb
jp
repnz
adc
pop
outsb
lea
icebp
mov
xor
adc
mov
in
push
cmpsb
je
sub
pusha
shlb
pushf
lock
pop
cmp
pop
cmp
sub
imul
sets
mov
pusha
les
daa
decl
out
cmp
xor
cmp
xor
pop
in
xor
lret
xor
add
out
xor
ss
scas
mov
or
fsubrl
xor
les
imul
in
xchg
mov
adc
call
mov
adc
and
lret
push
mov
or
pop
sub
cmp
or
insb
insl
scas
mov
mov
pop
aas
and
add
scas
out
in
sub
xchg
push
or
dec
adc
adc
mov
cmpsl
jecxz
sti
sbb
aad
mov
xchg
add
test
out
jne
out
or
scas
leave
out
ror
cwtl
call
sub
ljmp
mov
inc
or
add
movsl
mov
push
add
cwtl
fwait
daa
push
sti
fisubrs
pcmpeqw
and
ja
pop
pop
rep
imul
sahf
inc
inc
mov
lods
shrl
shr
jmp
pop
mov
cs
scas
xchg
cli
aad
xlat
daa
insb
stos
dec
sub
enter
mov
push
js
or
sbb
popa
repnz
in
sbb
pop
fnsave
lcall
aad
pusha
xchg
test
ffree
xchg
fstpt
ljmp
sbb
pop
in
inc
and
cmp
dec
sub
fisubs
sbbl
jl
std
jne
inc
push
or
xchg
xchg
lea
enter
or
and
xor
popa
jo
pushf
int
jp
nop
je
pushf
insl
pop
cld
outsb
mov
mov
mov
xor
fists
sub
cli
push
cmpsl
or
dec
push
in
xor
sbb
jl
sub
ss
xchg
mov
xchg
dec
testl
ret
add
push
aad
pop
xor
sbb
cmpsb
cmc
sub
fs
scas
and
xchg
dec
dec
mov
sub
mov
push
mov
cmp
movsl
mov
enter
divb
lods
dec
in
xchg
sub
sub
inc
push
mov
or
shlb
dec
sbb
jl
and
aad
into
cmc
cmp
shlb
inc
rcr
leave
hlt
inc
adc
insl
jge
imul
lret
cld
lea
gs
mov
orw
mov
pop
arpl
out
repz
mov
loope
sbb
pop
outsb
imul
fdivp
cmpsl
pop
out
scas
mov
push
mov
or
xchg
fcoml
fucomp
andl
imul
push
add
sarb
loope
xlat
dec
cld
push
adc
ss
lahf
adcl
lods
movsb
gs
fsubrs
mov
cwtl
xchg
lcall
enter
or
fcmovu
add
xor
int
xchg
adc
je
jle
out
lahf
sbb
mov
daa
push
pop
mov
sub
or
pushf
scas
push
or
push
scas
fsubrs
cmpsl
test
cwtl
xorl
cmpsl
or
nop
jae
aad
jl
add
jg
insb
xchg
mov
and
rcl
stc
lret
dec
daa
insl
adcl
fistpl
xchg
movsb
popf
nop
jbe
adc
int3
mov
test
lahf
cmc
ds
in
push
xchg
mov
push
cs
mov
aaa
add
mov
mov
iret
add
add
cltd
mov
enter
lock
inc
dec
out
ret
sbb
mov
int
push
pop
mov
lret
scas
cwtd
add
imul
roll
icebp
dec
dec
sbb
jae
xchg
mov
jmp
or
gs
movsl
and
mov
lds
push
and
lock
pop
push
faddl
adc
sbb
test
jae
xchg
arpl
or
xchg
repnz
scas
jbe
sbb
pop
fnsave
jb
mov
mov
or
cmp
rorb
mov
mov
push
daa
pop
add
jbe
push
cmp
enter
ds
xor
fbstp
mov
jnp
fbld
out
test
inc
cmp
test
and
mov
pop
lret
call
test
cmc
jg
mov
mov
jno
out
aam
xlat
bound
push
pop
insb
je
pop
idivb
ja
jbe
icebp
sub
rclb
int3
mov
or
push
sarl
outsl
xchg
leave
xchg
shll
pop
je
repz
push
fbld
daa
test
push
insl
fdiv
jmp
iret
jmp
push
pop
test
push
fists
mov
push
pop
lcall
lds
inc
sbb
out
mov
addl
cmp
movl
popa
repnz
fadds
add
fiadds
int3
push
incl
adc
mov
rcll
iret
std
stos
xor
sbb
add
dec
adc
in
xor
mov
jbe
lods
lods
push
popa
sbb
ja
sti
jb
add
adc
lea
rcrb
pop
jb
movsb
adc
sbb
pusha
das
mov
mov
push
aad
jge
sbb
cmc
jge
ds
call
das
cmp
adc
repz
adc
lds
mov
sub
push
rol
xchg
mov
sub
cld
fstps
sub
and
mov
loopne
aaa
mov
push
inc
aas
in
pop
lcall
pop
arpl
test
push
outsl
daa
out
out
fstl
iret
imul
adc
mov
int3
loope
imul
xchg
xchg
arpl
sub
jecxz
insb
leave
call
xchg
cmp
pop
push
mov
popw
mov
imul
jae
cs
outsb
daa
lea
sarb
jl
inc
pop
outsl
push
aam
mov
mov
ljmp
xchg
ss
fisubs
cld
sbb
cmp
jp
push
xor
js
jge
mov
mov
or
loope
xlat
xor
ret
jae
and
dec
testl
cmp
cli
adc
mov
addr16
stc
ja
in
iret
sub
stos
repnz
jl
adc
mov
mov
add
mov
adcl
in
push
cmp
mov
cmp
xchg
dec
sbbb
lret
loopne
outsl
xor
test
mov
and
sbb
xor
xor
repz
cmp
out
outsb
cltd
and
rcr
pop
dec
mov
sub
loop
popa
mov
sbbb
pusha
popl
outsl
popf
mov
pop
pusha
inc
test
mov
cmp
std
xchg
test
lods
xchg
dec
cmpsl
dec
in
sarb
out
inc
xchg
xchg
rorb
outsl
pop
jp
sbb
jae
and
cwtl
inc
jb
jl
push
mov
and
xor
jl
and
inc
sbb
add
shl
data16
in
xchg
and
ficoml
pop
in
bound
les
xchg
outsl
jb
inc
insb
aas
jle
sbb
fwait
stos
imul
add
pop
ss
cs
add
adc
cmp
cmpb
aas
test
dec
fcoml
outsb
je
ljmp
inc
test
movsl
or
adc
mov
pop
fldl
jne
movsb
into
xlat
popf
lods
jb
adc
push
pop
xor
xor
sub
lcall
incl
mov
inc
or
add
fistl
insb
xchg
xlat
jge
adc
imul
lds
daa
fimuls
or
sub
test
mov
loop
or
push
fimuls
adc
ret
jg
mov
add
dec
ret
and
or
mov
cmpl
push
cmp
sub
jecxz
dec
daa
stos
aaa
pop
xchg
pop
mov
sub
dec
mov
xchg
mov
repz
or
push
cmp
mov
scas
xor
xchg
sahf
cld
mov
jmp
pop
es
in
push
or
out
filds
mov
lds
bound
fdivr
popa
lea
xor
out
shl
repnz
jge
shl
sub
add
mov
mov
ret
sub
out
addr16
pop
xchg
adc
pop
cmp
insl
int3
and
nop
pop
popa
xor
push
cmc
in
dec
ja
inc
cmp
or
jg
adc
fmuls
mov
jge
out
les
lods
jae
into
ret
xlat
sub
cmp
xchg
mov
stc
xchg
add
xorl
call
pop
pop
shll
jo
push
pushf
stos
aad
and
aam
dec
fldt
dec
mov
adc
xchg
push
xchg
xor
aaa
aas
cli
sti
or
pop
stos
adc
sbb
lret
jecxz
orb
xorl
cmpsl
lods
xchg
sub
imul
in
xchg
pop
cs
aam
xchg
and
bound
push
add
inc
mov
pop
fimull
xor
in
sbb
and
mov
mov
popf
lods
loopne
inc
bound
jp
or
pop
cmp
xchg
cmpsl
mov
movsb
pusha
loopne
adc
xor
data16
lock
or
inc
daa
dec
and
in
movsl
add
popf
pop
ljmp
fadd
fbstp
stc
in
lea
in
adc
pop
sub
arpl
popa
out
sbbb
xchg
lock
cmp
in
fadd
and
rcll
shr
dec
jne
popa
imul
mov
or
out
mov
cli
mov
lods
xorb
sbb
and
dec
lods
pop
push
out
mov
and
jbe
das
xor
enter
xor
mov
mov
sub
iret
mov
cmpsl
dec
sbb
mov
popa
movsl
mov
mull
jecxz
sub
std
enter
mov
push
mov
dec
pop
push
mov
fndisi(8087
mov
imulb
adc
push
pop
adc
ret
mov
test
xchg
xchg
adc
xchg
test
ss
pushl
inc
and
sub
mov
xor
pop
push
cltd
aaa
in
add
pop
in
pop
mov
jno
fmull
or
dec
sub
inc
jle
outsb
sub
mov
sbb
jmp
sti
xor
stos
push
pop
ret
ret
popf
or
push
add
std
out
mov
rcl
pop
fs
fisttps
mov
lods
aaa
test
xor
sbb
int
jp
push
insl
cmp
shrb
icebp
cmp
adc
or
push
add
es
lcall
insb
fisttps
gs
inc
jns
jge
out
or
stc
negl
in
andl
ljmp
jbe
lcall
imul
pop
jo
xchg
outsb
mov
sub
inc
cwtl
lcall
dec
and
mov
add
aaa
xchg
mov
inc
jnp
and
lahf
push
lret
scas
hlt
mov
inc
arpl
addb
xchg
xlat
pop
scas
test
cmp
jecxz
popa
clc
mov
aam
xchg
in
mov
mov
leave
fwait
pop
and
sbb
cmp
es
push
nop
outsl
sub
pushl
test
adc
lahf
cmp
test
mov
in
pop
lret
jae
cmpsl
shlb
sbb
aas
and
pusha
and
insb
adc
or
inc
adc
ss
ds
mov
inc
push
ljmp
outsb
mov
adc
enter
fsubl
rolb
jle
mov
push
fcoml
or
push
or
or
dec
pushf
add
fdivl
xchg
sbb
rcl
mov
mov
dec
xchg
stos
sbb
adc
jns
outsb
jle
mov
jnp
lret
mov
fdiv
push
ds
cmp
adc
mov
push
lock
mov
aas
in
mov
or
sub
xor
fwait
insl
mov
jbe
stos
fildll
jle
aas
and
pop
mov
jo
ds
fwait
xor
dec
insb
xor
mov
xor
imull
mov
arpl
lcall
cmp
pop
fists
outsb
divb
xor
or
movsb
sti
mov
sub
rclb
ret
fisubrl
mov
or
fsubrp
mov
push
jae
jecxz
jge
add
mov
jno
add
call
dec
xchg
stos
inc
clc
std
nop
xor
les
xorb
stc
es
xchg
fidivs
cwtl
add
cmp
mov
xor
cltd
and
inc
adc
add
jns
pop
mov
mov
mov
jg
jmp
cmp
push
xchg
mov
jmp
ljmp
push
inc
testl
dec
xstore-rng
cmpsl
add
daa
or
fists
in
rorl
sub
test
inc
xor
lcall
pop
adc
adc
mov
repnz
mov
xchg
bnd
mov
mov
sbb
push
mov
call
inc
addr16
sbb
mov
cld
xor
pusha
int3
sub
nop
pop
push
mov
adc
inc
test
cmp
ror
xor
in
popa
cmpl
lcall
mov
jg
mov
movsl
scas
xor
leave
movsb
jne
xchg
and
inc
testb
test
add
sbb
or
lods
sub
stc
in
clc
jnp
jge
push
popf
inc
cmp
cmp
gs
test
mov
push
or
lret
insl
cvttps2pi
inc
arpl
cmp
push
jle
cmp
mov
add
sahf
inc
out
sbb
jp
cmpsl
xchg
in
pop
jae
shlb
ret
mov
and
loopne
mov
xchg
add
mov
imul
sub
mov
mov
add
pusha
xor
das
or
push
jb
rorb
push
bound
adc
out
aaa
jne
sbb
sahf
xchg
cmpsl
xor
insb
fwait
movsl
ret
enter
mov
sub
movb
xor
and
insb
mov
cmp
mov
cltd
dec
pop
xlat
jbe
dec
stos
mov
pop
fwait
and
jmp
dec
adc
in
mov
call
sub
nop
sbb
lods
push
push
xchg
inc
repz
stc
push
push
pusha
movsl
inc
and
mov
outsb
sti
idivb
out
add
leave
nop
hlt
dec
xor
jno
sbb
cmp
xchg
pop
adc
hlt
mov
fwait
push
fisubs
rorb
lods
lods
jge
xchg
aam
ret
sub
das
icebp
mov
jns
jecxz
fiaddl
xchg
sbbl
xchg
sub
out
sub
hlt
add
arpl
mov
and
fwait
lcall
dec
test
dec
das
pusha
out
jbe
mov
sub
fistpl
add
sbb
mov
mov
inc
fsts
jge
les
ret
jmp
inc
js
ds
pop
insl
mov
mov
pop
enter
rorb
xor
cmc
inc
adc
jmp
adc
test
and
incl
into
inc
into
sub
xor
aad
add
xor
or
dec
sub
sbb
mov
les
or
rorl
inc
int
fadds
negl
adc
cmc
mov
cmp
pop
push
scas
dec
adc
scas
rol
cmpb
lret
adc
add
movsb
mov
jno
imul
scas
dec
xchg
cs
jne
xchg
dec
and
loop
push
jno
insl
or
jb
inc
cmp
add
pop
lods
icebp
fs
in
lock
adc
xchg
jno
adc
dec
xor
int3
jge
mov
mov
lods
imul
or
mov
fsubp
xor
rcll
push
clc
and
push
xchg
add
or
out
and
fwait
out
xchg
adc
mov
outsl
sbb
pop
sbb
pop
and
imul
jecxz
add
das
insb
popa
lods
ror
pop
add
inc
xor
and
jns
xchg
into
jo
js
and
lods
jge
ficomps
sbb
es
mov
push
notl
xor
sub
mov
jno
inc
xor
add
imul
pop
push
push
or
insl
movsb
loopne
mov
or
adcl
mov
mov
ret
repz
out
fmull
dec
stos
daa
inc
push
or
lcall
iret
sahf
out
mov
mov
inc
loopne
in
aas
or
movsb
daa
das
and
mov
xchg
or
aam
xchg
lods
jbe
push
cli
cld
pop
pop
sbb
loopne
test
inc
je
sbb
add
mov
int
adc
jnp
pusha
ja
sub
popf
inc
dec
nop
popa
mov
pop
pop
mov
jecxz
xor
cli
cmp
sbb
pop
push
add
mov
mov
xor
xchg
jecxz
push
adc
add
add
push
jo
imul
jg
jl
int
xor
repnz
fmull
fbstp
mov
pushf
dec
cmpb
loopne
es
mov
scas
cmp
nop
sbb
stos
jae
adc
cs
mov
jl
add
fnstcw
mov
mov
in
pop
pop
jbe
inc
int
mov
or
int
cld
aaa
mov
icebp
aas
jmp
jno
ja
aas
shl
cld
adc
aaa
jl
jg
pop
sbb
mov
dec
imul
repz
int
rorb
jae
ret
std
sub
add
dec
in
jnp
pop
enter
jmp
ds
hlt
and
imul
adc
dec
mov
jl
mov
test
or
cmp
push
add
popf
imul
inc
sbb
push
negb
pop
hlt
or
pop
cltd
sti
mov
in
out
daa
outsl
call
insl
fldt
fdivrl
add
dec
arpl
jge
add
jns
cli
mov
testl
sbb
cmp
push
cmc
inc
lods
and
pop
xor
inc
mov
js
rorb
loop
imul
jmp
mov
call
add
xor
lea
into
mov
shrb
or
outsb
dec
mov
push
cmp
mov
cld
or
jmp
push
mov
enter
dec
push
shrd
ret
sbb
fnstcw
loope
inc
xlat
xor
and
test
or
outsl
xor
ss
dec
hlt
ja
pop
adc
sbb
push
popf
xor
fistl
add
hlt
fsubr
dec
adc
mov
mov
sbb
and
add
or
and
cld
add
lock
lds
cmp
hlt
inc
sbb
int
daa
addr16
jne
mov
add
std
icebp
mov
mov
imul
loope
push
cmp
jp
iret
jo
sbb
mov
add
jae
loopne
mov
daa
fistl
jb
adc
lods
mov
icebp
test
xchg
xchg
int3
cmp
adc
nop
int3
insl
cmp
ljmp
pop
outsl
jae
inc
mov
mov
or
cld
sbb
jo
data16
dec
mov
xchg
rol
mov
xlat
and
rcrl
pop
aam
loopne
and
out
dec
insl
push
inc
push
shl
xlat
clc
adc
daa
int3
jp
into
addr16
and
jno
sub
add
lods
fistl
test
and
mov
mov
inc
out
in
jecxz
mov
mov
sbb
push
dec
sbb
dec
dec
jmp
sbb
out
fs
adc
cmp
bound
icebp
shlb
xor
jae
xorl
icebp
and
cmp
imul
push
test
ficoms
or
mov
rcrl
jo
push
jo
pushf
jle
stos
je
lahf
rcrb
xor
test
clc
in
adc
cmp
lahf
jecxz
dec
jb
mov
and
jno
loopne
jg
sbb
sarl
push
jnp
dec
outsb
push
inc
sbb
ss
insb
bound
or
sahf
xlat
or
sbb
movl
gs
insl
cmp
ja
mov
ret
das
in
jne
je
imul
imul
push
dec
pop
test
test
fidivrl
xchg
insl
dec
mov
adcl
cmpsl
mov
cmpsl
shl
inc
in
xor
jmp
idivl
jle
loop,pt
adc
inc
push
jle
jnp
outsb
mov
fucomip
lahf
pusha
jp
mov
aaa
aaa
stc
sub
loop
jle
push
cmp
fnstenv
add
cmp
mov
mov
xchg
das
inc
sbb
les
cmp
dec
xlat
ret
std
shl
lret
dec
jg
mov
jp
mov
mov
cmp
mov
dec
rclb
xor
xchg
stc
cmp
adc
enter
jl
ficompl
daa
cmp
in
jl
xchg
leave
xlat
fwait
jnp
int3
push
dec
loop
mov
int
mov
insb
mov
pop
jl
sti
push
push
push
ljmp
mov
fsubrs
sub
or
push
shll
hlt
cmc
sub
lcall
jmp
xchg
ds
jo
sbb
ss
mov
aam
dec
or
out
push
stc
and
inc
shlb
add
push
cwtl
inc
jp
sbb
mov
push
mov
and
mov
aas
mov
ds
add
lea
dec
pop
lods
adc
repnz
pop
dec
daa
xchg
test
popa
xchg
mov
sbb
jmp
jp
xchg
ficoml
jle
imul
push
inc
outsb
fimuls
fchs
and
cs
sbbl
test
sub
popa
jae
ret
cli
add
inc
in
add
bound
adc
iret
in
stos
std
sbb
mov
push
or
sti
mov
cltd
adc
jae
lods
mov
jg
outsl
es
dec
push
ss
adc
xor
icebp
imul
sub
and
or
xchg
sbb
popf
cmc
cmp
xor
and
mov
jg
xchg
xlat
xchg
or
out
pop
mov
sub
ret
les
lcall
out
pop
mov
xchg
mov
pop
outsb
es
call
sub
adc
jge
xchg
pop
jp
mov
jno
addr16
cli
and
mov
andl
imul
es
cs
rclb
push
sub
dec
jl
sbb
add
ja
int3
jno
sbb
outsb
mov
mov
adc
ja
dec
scas
lret
pop
xchg
sub
repz
imul
loopne
fs
sub
stos
or
mov
js
in
jno
push
data16
or
inc
fistpll
loope
adc
mov
jnp
sub
mov
into
aam
js
cmp
cmp
movsb
lea
inc
jae
mov
sbb
mov
and
in
decl
sbbb
dec
dec
insl
inc
inc
int3
lock
sahf
and
pop
fldl
dec
pop
cmpsb
push
mov
and
dec
inc
cmp
in
sub
add
sub
mov
cmp
test
addb
fstl
mov
rcrl
stos
jne
fnstenv
mov
andb
test
xchg
jl
nop
sbb
pop
ret
xor
pop
mov
fcompl
pop
jbe
mov
push
rcrl
hlt
adc
add
std
ffreep
and
and
stos
inc
call
and
mov
push
add
pop
add
push
gs
jnp
add
or
cmpsb
lods
aaa
sbb
lea
mov
xchg
punpcklbw
and
sbb
push
ja
sbb
outsl
rep
cmp
int3
xchg
jmp
js
inc
clc
cld
lahf
addr16
jl
test
js
in
orb
mov
std
mov
std
dec
mov
nop
sub
adc
dec
inc
sub
enter
cmp
mov
dec
sahf
data16
subb
aad
push
push
add
push
push
jp
mov
cmp
inc
gs
and
xchg
bound
cld
cmpsl
xchg
cltd
cmp
jae
jne
pop
mov
sub
push
xlat
sahf
mov
and
ljmp
jle
mov
paddusb
and
push
xor
xor
pop
jge
add
ret
push
jp
add
xchg
push
lcall
jle
jg
sub
sbb
mov
adcl
or
mov
inc
outsb
push
add
pop
fmuls
ret
cmp
call
jg
andb
sbb
fdivs
les
sbb
jae
call
mov
xor
mov
lret
roll
xchg
data16
cltd
mov
mov
fs
adc
test
int3
fbstp
mov
push
hlt
imul
xchg
rclb
adc
dec
imul
loope
inc
arpl
or
leave
popa
jmp
mov
js
out
lahf
inc
pop
sbb
std
fs
fsts
movsb
lcall
add
icebp
ret
in
ffree
movsl
push
xor
ljmp
adc
sbb
fisttpl
and
rorl
mov
test
arpl
or
int3
and
fdivl
mov
xchg
jne
lret
or
adc
cmp
lods
cli
or
bndldx
jbe
pushf
negl
mov
cmpb
cwtl
xchg
xchg
es
outsb
mov
and
or
xchg
pop
cmp
neg
sub
lahf
pop
cmp
and
test
pop
in
push
rclb
call
push
sarb
push
mov
test
mov
mov
insl
jmp
out
jb
ret
pop
lret
mov
xchg
mov
xor
inc
push
into
shl
add
xchg
xchg
add
hlt
ss
push
shll
xchg
sub
xchg
out
je
test
xchg
dec
mov
lahf
xor
xchg
pushf
jo
xchg
addb
lock
mov
std
roll
sub
cltd
mov
or
inc
stc
xcrypt-ctr
cmpsl
fsts
jns
inc
stc
inc
or
cld
jnp
repz
mov
bound
shlb
dec
fisubs
inc
gs
adc
lock
mov
enter
call
add
mov
xorb
gs
sub
fiadds
mov
jmp
xlat
inc
cmp
out
or
dec
filds
sub
nop
add
jl
mov
stos
and
cmp
jae
and
es
mov
pop
cltd
jl
jg
mov
sbbb
call
cmpsb
ss
lods
stos
sub
cltd
and
push
int
ljmp
add
mov
adc
std
loop,pt
js
les
pop
std
decb
sbb
cmp
adc
push
lret
test
add
bnd
jle
gs
imul
jo
and
push
jmp
xor
int
daa
inc
fwait
dec
mov
ds
loopne
and
inc
sub
xchg
and
fisubrl
test
xlat
in
sub
cld
int
in
and
push
mov
mov
mov
mov
push
cs
push
jns
xchg
inc
mov
movsb
adc
cmp
pop
mov
into
sbb
int
into
mov
js
inc
adc
xor
dec
daa
push
or
loope,pn
sbb
xchg
mov
out
mov
dec
jg
mov
mov
dec
pop
pusha
push
sbb
xorb
lock
movsb
enter
mov
hlt
inc
es
es
mov
loope
xchg
fiaddl
pop
mov
and
inc
ficoml
xchg
xlat
lcall
dec
jns
pop
adc
jne
pop
sub
fildll
into
dec
or
sbb
cmp
dec
sub
or
xor
mov
lock
sub
pop
out
and
sub
cmp
push
ss
aaa
aam
imull
mov
aam
sbb
lahf
js
mov
pop
lcall
pop
jl
fwait
sbb
jo
sub
pushl
sbb
cmpsb
sub
test
outsb
xor
fnstcw
push
jo
testl
cmpb
or
loop
cwtl
lret
push
xor
inc
movsb
adc
into
iret
test
adc
mull
cmp
loop
out
loop
repnz
inc
sub
cmp
mov
push
pop
mov
loopne
mov
enter
stc
xchg
aaa
xchg
jne
xor
leave
xchg
stc
dec
pop
imul
and
push
mov
loop
out
aad
out
lea
stos
lea
in
call
mov
rcr
add
popa
mov
mov
cmp
mov
inc
ljmp
cmp
sub
mov
pop
test
mov
jl
sub
xlat
dec
pop
std
mov
cwtl
pop
cmp
repnz
sbb
pop
pop
out
add
fdivs
out
sub
arpl
pop
fstpt
cs
pop
pop
jecxz
dec
test
arpl
lret
shrb
pop
lods
movsl
sahf
mov
add
mov
into
push
in
mov
stc
mov
add
mov
dec
ret
add
sbb
sub
lea
icebp
daa
ss
data16
xor
shlb
jae
push
mov
fwait
es
enter
add
sbb
pop
call
dec
push
jmp
mov
add
mov
sub
pop
adc
cltd
ljmp
jne
jbe
gs
xchg
fimull
test
shl
sub
test
rcl
push
rcrl
push
xchg
popa
std
mov
loopne
cltd
fnstsw
jle
sbb
cmpsb
loop
jmp
les
pop
popa
push
push
fimuls
dec
mov
sub
stc
pop
faddl
orl
in
nop
imul
inc
and
mov
xor
push
js
movsl
fcomp
dec
xchg
jae
adc
testb
pop
push
push
lods
cmpsl
divl
add
or
aas
out
enter
movsl
outsb
repz
daa
setl
adc
fsincos
or
sub
lret
rcrl
cmpsb
push
and
inc
in
push
jmp
mov
push
xchg
jecxz
pop
std
pushf
and
sub
dec
xor
xchg
pusha
mov
andl
jo
xchg
lcall
fwait
inc
loope
gs
dec
inc
out
push
lds
or
and
cltd
stos
int3
mov
xor
and
fwait
sub
scas
pop
arpl
lret
push
inc
add
test
add
cs
cmp
jp
xor
lock
sub
lods
sarl
inc
mov
pop
xchg
cmp
imul
in
loop
daa
and
sub
mov
pop
into
mov
xchg
push
mov
movsl
lcall
mov
or
insb
sub
push
aas
jecxz
data16
lods
orl
push
ficoml
faddp
or
and
cmp
std
or
insl
repz
test
mov
dec
mov
sub
mov
push
xchg
xlat
dec
imul
xor
pop
xor
inc
cli
push
cmp
pop
lret
cmpsl
jg
mov
rcrl
daa
mov
ljmp
and
push
das
ret
cmp
xchg
sbb
jle
or
and
add
inc
ljmp
push
outsb
sub
push
movsl
sti
scas
push
je
into
mov
xor
cli
pop
sti
dec
jo
test
movsb
and
and
and
mov
push
sbb
push
xchg
cwtl
adc
or
movsb
adc
xchg
in
push
cmp
jge
pop
fcomp
xor
out
into
xchg
jmp
out
add
mov
sbb
adc
adc
push
es
scas
daa
repnz
rorb
mov
sub
pushf
xor
push
cmpsl
lods
dec
lds
sti
insl
mov
mov
pop
jecxz
stos
push
inc
or
std
xor
inc
pop
adc
pop
cwtl
lods
mov
sbb
popf
and
mov
aad
sbbl
or
arpl
cli
sub
pusha
pop
bound
aas
inc
mov
dec
mov
inc
sub
mov
mov
jmp
and
cmp
push
sub
cmp
xlat
hlt
push
gs
iret
inc
push
mov
je
stc
and
pushf
rcl
stos
lahf
std
int3
gs
push
dec
adc
adc
loopne
cltd
sbb
xlat
int3
cld
in
sbb
lea
in
out
push
add
mov
jecxz
arpl
subb
lds
cwtl
dec
sbb
enter
sub
sbb
mov
test
hlt
cwtl
mov
loopne
sbb
cmp
call
scas
stos
shrb
repz
mov
mov
and
mov
and
popa
lretw
mov
xchg
adc
xor
xchg
mov
adc
aad
add
stos
sbb
mov
cltd
shll
cmc
inc
jnp
cwtl
insb
fiaddl
lcall
mov
or
push
mov
dec
xor
dec
pop
push
jge
mov
dec
fimuls
cmp
push
das
add
jae
push
lret
jge
in
aam
xlat
addr16
fnstsw
ret
dec
push
hlt
icebp
shll
adc
dec
notb
scas
popf
lods
lock
push
mov
dec
jp
add
push
loope
lds
jle
outsb
and
arpl
xlat
scas
popa
sahf
and
push
fwait
and
out
xchg
rcll
and
cltd
lcall
jne
or
jnp
or
mov
adc
adcl
ret
dec
jge
jge
mov
dec
jg
add
sarb
jl
sbb
pop
pop
mov
cmpsl
jns
sbb
or
test
pop
mov
pop
sub
xlat
mov
std
rol
jge
mov
sbb
sbb
lret
dec
das
cmp
divb
subb
and
or
loop
inc
aas
xor
adc
adc
jecxz
fidivl
mov
cli
call
push
icebp
sbbb
mov
mov
jg
es
jmp
pop
add
xchg
jae
mov
int
mov
dec
loope
jnp
adc
ret
cmpsl
lods
ret
popf
imul
jmp
repz
loopne
add
nop
mov
lret
pop
xor
movsl
cmpl
pop
loop
inc
fwait
ret
sbb
xchg
repnz
mov
repz
clc
mov
jnp
ljmp
mov
cs
adc
int
xor
mov
clc
pop
popf
dec
fs
rorb
push
in
xchg
push
push
sbb
inc
cmc
std
imul
pop
xchg
rorb
dec
test
ljmp
fcomps
imul
js
or
clc
js
out
mov
xchg
push
adc
add
mov
cmp
cmc
or
mov
daa
pop
jb
fadds
stc
jge
inc
and
inc
scas
and
jp
gs
push
in
into
sub
add
fistpll
dec
inc
mov
push
xor
fiadds
mov
js
pop
lahf
sbb
cmpsb
std
jmp
jo
cmp
out
lods
loopne
idivl
sbb
movb
pop
loop
mov
scas
fidivrl
aad
test
stos
aaa
xlat
push
xchg
iret
add
movsl
jl
fldl2e
sbb
xchg
aad
ret
call
repz
jae
add
cld
and
in
mov
xchg
cli
mov
mov
push
dec
inc
or
test
or
dec
push
push
cmp
mov
popa
xchg
xor
xchg
mov
clc
loop
bound
cmpsb
push
aaa
in
adc
push
inc
xor
popa
pop
pop
std
pop
rorb
cld
adc
push
icebp
in
outsl
or
dec
lock
add
mov
sbb
sbb
xlat
inc
cmpsl
xchg
mov
out
fwait
imul
rcrl
idivl
imul
add
sbb
pop
mov
xchg
mov
sahf
xor
rcr
fsubrl
lds
in
mov
outsl
adc
cwtl
mov
add
inc
mov
mov
loopne
cmp
cmp
or
jmp
sahf
shll
mov
push
or
jle
mov
push
pop
mov
loop
data16
lret
jo
sbb
xlat
sub
xor
and
pop
push
fimull
setb
push
add
lods
xor
xchg
add
arpl
mov
addr16
test
cwtl
add
inc
out
sbbl
sbb
in
or
xchg
push
or
or
lds
repnz
inc
in
jno
mov
mov
mov
cld
push
lret
leave
cmp
push
pushf
inc
sbb
sub
cmpb
fs
clc
sbb
pop
mov
gs
cli
inc
in
ficoms
insb
add
adc
in
frstor
jg
adc
add
inc
ret
lock
push
and
lods
in
xchg
sub
xor
cld
ds
xor
test
mulb
jnp
or
je
jl
lret
xchg
xor
xor
xchg
pop
fldenv
fdivrl
pop
mov
mov
mov
mov
or
mov
xchg
in
movsl
pop
push
popf
andb
jl
arpl
mov
pop
test
mov
dec
push
pushf
bound
mov
clc
pop
xor
jb
outsl
mov
fstpt
into
pushf
mov
gs
or
rcll
and
aad
stc
xchg
mov
test
and
out
mov
rep
jl
pop
loopne
ja
xlat
int3
jae
lahf
xor
push
sbb
xchg
lds
aas
kunpckwd
push
not
into
adc
fs
sbb
mov
sub
adc
pop
and
or
mov
stos
mov
dec
int
aaa
mov
mov
es
loopne
jmp
and
je
mul
add
test
jmp
dec
hlt
in
and
and
mov
push
xor
aaa
dec
adc
mov
pop
pop
inc
aas
push
add
fisubrl
mov
aam
and
pop
push
in
add
or
lret
push
jge,pn
inc
arpl
iret
cmpsl
adc
sti
inc
cltd
stos
xor
cmp
push
and
pop
push
andb
fmulp
push
lods
jp
mov
jae
ds
mov
fsts
in
inc
xor
sbb
imul
into
std
cmpl
idivb
prefetch
or
scas
out
mov
xchg
cmc
out
add
mov
mov
fxch
xchg
adc
lds
loopne
in
ret
dec
inc
addl
ss
pop
out
xor
les
ficoms
jg
aaa
lret
ror
xchg
jmp
add
cld
in
push
push
add
inc
iret
cli
xchg
jae
jae
push
mov
sbb
sub
inc
sbb
inc
adc
or
fwait
cmp
mov
mov
mov
iret
pushw
imul
cld
fdivl
cmpb
js
imul
push
enter
add
mov
cmp
ror
por
add
mov
fisttpll
pop
or
in
mov
cmp
sbb
lods
bnd
outsl
vmulsd
cmc
sbb
jmp
mov
shrl
and
add
mov
mov
movsb
push
and
fadds
xchg
ljmp
push
fbstp
test
fidivs
into
scas
sub
cmp
scas
stos
push
je
cltd
jb
add
inc
hlt
out
arpl
pop
imul
or
icebp
xor
or
pop
dec
mov
xchg
xor
popf
aaa
and
cmp
xchg
jnp
std
mov
stc
cmpb
mov
mov
jb
movsb
lahf
fwait
cmpsl
mov
sub
mov
sbbl
jmp
xchg
lcall
add
push
lock
pop
jmp
imul
dec
jp
mov
rcl
leave
out
and
xchg
pop
mov
cmp
mov
sarb
cli
loop
mov
xlat
pop
mov
and
gs
and
nop
imulb
cmc
sbb
leave
rorb
subb
fstpl
sub
pop
pusha
dec
cmp
test
lcall
shr
pop
mov
bound
int
fs
fdivrl
inc
test
fdivrl
ret
lahf
fdivp
orb
pop
aaa
lret
pusha
lock
rcrb
adc
fcmovnu
or
ret
jp
inc
test
jge
syscall
push
xchg
aaa
sbb
fisubl
xlat
mov
out
xchg
rorl
stc
mul
xchg
sub
popa
arpl
sub
shl
dec
sub
cmp
jae
jmp
jno
ljmp
movsb
cld
sub
jecxz
js
hlt
xchg
push
fdivr
xchg
sub
lcall
push
inc
cmp
cltd
int3
mov
jno
xor
sti
mov
jnp
push
and
fcompl
in
fsubr
imul
cwtl
dec
mov
and
sbb
outsl
xchg
mov
mov
shr
popa
rclb
xchg
cmp
aaa
fwait
xor
pop
popf
fildl
loop
sub
lds
sbb
jno
xchg
cmp
test
mov
mov
fs
mov
addr16
inc
fcoms
cmp
xlat
test
push
sti
mov
xchg
mov
std
cmp
enter
dec
mov
inc
jno
push
sti
mov
mov
es
dec
int3
daa
jmp
fbld
adc
inc
push
popf
pop
aad
push
mov
adc
in
or
xchg
iret
mov
outsb
outsb
xor
sbb
into
ja
imul
sub
outsb
out
mov
popa
pop
mov
mov
xor
pop
push
push
stos
or
mov
inc
mov
push
cmp
ds
jb
pop
adc
xor
rolb
imul
push
stos
mov
repz
in
pop
repz
adc
stos
mov
dec
pop
fmulp
shlb
outsl
pop
fs
out
xlat
movsb
dec
jnp
je
loop
pushf
sahf
xor
movsb
push
push
adc
xor
sbb
shlb
push
scas
test
dec
xchg
mov
jg
jle
mov
mov
push
jbe
add
cmp
cli
sbb
stc
mov
sub
frstor
lods
icebp
cmp
xor
xchg
test
sub
xchg
outsl
movswl
les
or
sbb
ljmp
jne
fnstsw
cmp
push
jnp
add
xchg
lret
fcmove
loopne
leave
mov
jbe
sbb
shlb
xchg
pop
sbbb
push
insl
or
xchg
dec
ss
pop
xlat
add
loop
les
loop
jo
daa
push
test
dec
das
popf
outsb
xchg
push
sti
jae
fsubrs
cmp
add
and
adcb
xlat
or
or
jge
roll
insl
lods
decl
je
outsb
sarb
int3
nop
les
or
add
lcall
ficompl
ds
push
insl
fwait
cltd
or
xor
xchg
and
inc
setg
cmc
mov
jo
pop
cwtl
xchg
outsb
jmp
pop
idivb
xchg
dec
pop
loope
xchg
mov
sub
insb
out
cmp
stos
sti
jns
icebp
dec
cmp
xchg
repz
fnstsw
mov
orl
xor
imul
sahf
xor
add
sub
mov
push
nop
mov
lret
xchg
mov
stos
inc
pop
dec
loop
mov
jo
out
fsts
mov
push
orb
dec
sub
mov
sub
sub
cmp
pushf
out
mov
push
jg
test
lock
std
mov
or
push
xor
pop
movsb
pop
cmp
xlat
and
adc
je
add
inc
mov
fisttpl
in
stos
rcll
je
outsl
push
mov
push
jmp
mov
sbb
add
pop
pushl
fwait
or
fldl
out
mov
lea
not
sbb
int3
mov
sbb
aaa
negl
movups
incl
loop
pusha
xchg
call
loopne
push
jle
inc
in
or
or
and
dec
or
jo
lret
call
rcl
or
xor
in
mov
in
outsb
data16
jle
push
jo
dec
pushf
mov
cmpsb
xor
popa
dec
ljmp
or
push
mov
test
inc
out
push
mov
aam
inc
adc
dec
add
mov
scas
add
pop
xchg
out
rcrb
fidivs
mov
fs
mov
fcmovb
imul
push
mov
filds
lds
inc
push
pop
inc
popf
push
out
insl
out
in
out
in
std
mov
jne
xlat
out
fs
scas
inc
pop
sbbl
mov
pop
mov
or
ljmp
cmp
in
inc
sahf
test
ljmp
jecxz
loop
push
mov
xchg
mov
adc
jns
or
ret
imul
jno
sarl
mov
dec
repnz
add
popf
enter
and
sbb
mov
fbld
cmpsl
rcrb
jb
paddusb
pcmpgtb
xchg
ja
add
jl
mov
in
aam
bound
xchg
cmp
push
adc
daa
jecxz
icebp
subl
dec
adc
lahf
dec
imul
mov
jg
fwait
ret
pop
jp
lods
pop
cld
sbb
and
sti
cmpsl
jmp
loopne
aad
pushf
scas
jne
add
frstor
orb
repz
xor
adc
psubq
aaa
xchg
push
pusha
lods
test
pop
hlt
mov
mov
push
or
sahf
je
pop
sti
cwtl
mov
inc
int
nop
in
in
dec
shl
xlat
out
fnsave
test
movsb
cwtl
and
push
cmc
adc
fisubl
pop
fwait
jg
daa
sbb
icebp
push
ljmp
orl
rorb
les
mov
test
orb
rorb
xchg
sub
das
inc
sub
jne
mov
movsb
push
push
push
jo
cmc
cmpsb
fsubrl
and
or
jge
cmp
stos
std
data16
mov
mov
ljmp
test
loope
fidivl
pop
or
in
dec
mov
lds
push
pop
dec
mov
lea
dec
out
fwait
pushf
in
inc
dec
aas
push
jecxz
bound
mov
cmpsb
pusha
js
xor
gs
scas
sbb
push
fists
sub
lods
cli
xrelease
inc
andb
imul
inc
popf
leave
pop
fs
mov
inc
fcompp
push
sar
mov
nop
aas
lock
lods
pop
sbb
pop
mov
test
inc
xor
lret
sti
push
cli
shll
cltd
js
subb
sub
aas
shrl
test
daa
xchg
cmpsb
ret
shl
adc
mov
aad
bound
into
rcrl
aam
and
int
ss
popa
repnz
and
jecxz
test
or
mov
sahf
inc
push
pop
or
addr16
or
movsb
aam
dec
loope
push
scas
xor
sbb
push
xlat
dec
pop
lea
stos
sub
mov
inc
xor
push
lods
add
mov
les
roll
fyl2xp1
loop
mov
cmp
jbe
push
mov
push
and
js
stc
xor
pop
clc
pusha
mov
mov
enter
fbstp
mov
pop
xchg
addr16
negl
loop
fdivrp
imul
cmp
sbb
iret
sbb
xchg
faddl
scas
dec
in
xor
jle
sbb
dec
lods
js
cmpsl
in
push
stos
jno
cmp
xchg
addl
out
or
shl
and
inc
outsb
xchg
data16
or
jns
scas
std
bound
jo
sbb
jnp
cmp
mov
out
add
push
and
nop
fisubrs
int3
jmp
jecxz
fimull
mov
cli
aaa
xchg
sbb
rolb
movsl
cli
cmp
sub
loopne
mov
push
add
pop
pop
test
pop
pop
and
xor
int
popf
sarl
shrl
cmp
pop
jecxz
lea
enter
xorb
fwait
ja
pop
pop
cs
data16
fwait
popf
adc
push
stos
lret
pusha
pop
xchg
shrb
xor
push
mov
mov
lds
mov
rcl
insl
sbb
xor
ss
fs
dec
mov
sarl
pop
inc
add
es
daa
js
dec
test
out
scas
jb
rcrb
mov
add
or
push
mov
sbb
movsl
pop
mov
lods
pop
push
stos
out
adc
push
jmp
cmp
sub
jbe
and
mov
sti
mov
pop
cltd
sbb
mov
popl
sbb
data16
sbb
xor
dec
out
loope
cmpsl
pop
mov
test
outsl
loop
cmp
dec
sub
fnstsw
in
int
xor
stos
dec
idivl
jnp
lret
adc
stc
aas
dec
notl
push
in
lcall
cmp
cmc
mov
adc
pop
ja
leave
sub
adc
mov
or
sub
shrl
cmp
xchg
dec
adc
xlat
in
pop
or
and
movsl
fsts
sbb
sbb
loopne
fcompl
jne
popf
out
push
lea
mov
pop
lret
xor
or
test
xchg
mov
int
xlat
idivl
cmp
inc
xchg
ljmp
out
lahf
cmpsb
mov
xchg
lea
push
mov
ljmp
or
ss
mov
lcall
inc
add
inc
mov
std
pop
xor
xchg
pop
inc
sbb
cld
adc
mov
sub
test
sub
sti
fidivl
pop
cmp
pusha
adc
push
sub
ljmp
repnz
dec
and
out
cltd
sti
adc
sbb
mov
cmp
xchg
add
adc
decb
dec
cmpsb
xor
sub
jne
imul
cmc
movsl
or
sbbb
pop
xor
push
lahf
jmp
inc
xor
xor
aam
and
stos
movsl
out
cmp
jbe
xchg
aaa
cmpb
inc
shlb
jp
ret
and
imul
je
lcall
pop
inc
mov
mov
or
shrb
push
fldt
push
jp
popa
lock
in
fdivrp
pop
mov
leave
mov
out
mov
out
lds
xchg
loop
push
ljmp
and
dec
jns
scas
push
mov
fcomi
jge
or
outsb
sub
mov
jns
fst
xor
push
cmp
mov
les
mov
mov
or
push
cmc
jbe
jl
cmp
push
aam
mov
stc
inc
jmp
fcompl
in
ret
sbb
adc
xor
lahf
repnz
sbb
add
scas
outsl
loope
pushf
mov
push
and
sub
popf
rol
mov
cmp
mov
fisttps
out
xchg
aaa
mov
test
xchg
neg
pop
and
into
or
mov
sti
push
pop
cwtl
xor
lahf
ret
mov
mov
or
stos
ljmp
fcomps
mov
pop
fsubrs
bndstx
push
xor
out
dec
mov
enter
pusha
cmpsl
fbld
xor
add
hlt
in
cmp
push
and
rol
lcall
mov
fcmovu
int3
inc
test
sub
pop
outsl
xchg
add
lds
hlt
cwtl
sub
faddp
popa
mov
hlt
mov
adc
ds
ljmp
mov
aad
and
adc
mov
adc
dec
xor
int3
mov
shll
ljmp
jmp
adc
pop
cmc
sub
rolb
pop
test
cmpsl
leave
hlt
scas
jno
sbb
or
xlat
cld
fwait
cmc
mov
sahf
shl
arpl
imul
fwait
add
mov
sub
inc
xor
xchg
out
xchg
sti
push
push
popf
mov
push
push
rcll
leave
xor
es
fdivs
loope
fucomp
cmpb
rclb
xor
cwtl
je
lods
leave
pop
repnz
and
dec
push
sbb
repnz
lahf
insl
test
dec
mov
mov
rorb
or
dec
test
jne
scas
mov
sub
xchg
inc
add
push
jle
push
xchg
in
and
test
jmp
inc
mov
movsl
fs
xchg
addb
fidivs
outsb
pop
or
repnz
sbb
inc
push
or
cmp
push
jo
faddp
cmp
outsl
mov
or
xchg
imul
aam
push
testb
adc
loope
xor
ja
out
pop
fsubrl
into
inc
aad
and
mov
leave
test
xchg
inc
mov
in
gs
lcall
loope
jge
jle
out
aaa
cli
xor
sarl
sbb
push
sti
pop
xorl
jg
les
movsl
or
add
fwait
push
out
fs
decl
testb
test
mov
adc
addr16
mov
and
iret
stos
jbe
lahf
xchg
push
jmp
push
xor
sbb
cld
and
loopne
rorb
sub
imul
in
addr16
xchg
mov
lods
js
popa
adcl
aas
sbb
cmpsb
das
int3
cmp
push
mov
push
pop
mov
nop
lret
xchg
xchg
mov
push
jl
mov
mov
and
mov
add
mov
mov
mov
pushf
lcall
cld
or
adc
sbbb
adc
and
addr16
les
fdivl
xchg
pushf
fnsave
or
ja
mov
fwait
std
xor
push
outsl
sub
mov
cmp
dec
add
out
adc
mov
mov
fiaddl
fsubrl
pushf
lods
jecxz
inc
repnz
fcoms
ja
push
subb
mov
pop
adc
in
sub
add
lcall
dec
sarb
test
or
fisubrs
xchg
mov
lds
mov
push
movsb
mov
aas
lods
jp
push
and
mov
popa
pop
mov
jl
int
inc
stc
dec
aam
testl
push
or
mov
cld
mov
leave
push
mulb
push
ss
pop
rclb
call
push
push
xchg
decb
rolb
dec
pushf
mov
in
insl
ret
jge
xchg
xor
pop
in
xor
or
dec
mov
mov
fisubrs
jge
out
es
dec
cmp
sbb
aad
push
jle
and
pop
in
mov
fstps
dec
rcr
inc
adc
clc
inc
jl
outsl
into
push
push
aam
mov
test
sub
pop
mov
mov
push
adc
jae
sbb
jge
shr
cld
test
jbe
jae
sub
or
cmp
push
xchg
jle
and
cli
mov
sbb
and
out
xor
orb
shrl
ja
jp
mov
jb
fcoms
cmpsb
into
xor
gs
mov
lahf
sub
test
dec
add
or
or
add
mov
pop
jle
jbe
mov
popa
add
out
insb
mov
divl
add
dec
lcall
cmp
cmp
imul
cmp
xchg
jg
jge
jnp
and
and
outsb
adc
sbb
jmp
inc
shll
jb
fscale
or
cld
ss
enter
dec
fiadds
xor
cmp
or
mov
stos
lcall
jge
cwtl
xlat
adc
mov
mov
les
pop
and
pop
popf
mov
push
push
xor
clc
mov
jle
sub
outsl
nop
or
into
out
das
out
xchg
je
shrb
into
jo
xor
sub
adc
loopne
lret
jg
idivb
cmp
int
dec
rcrb
sbb
pop
in
inc
std
jns
lods
inc
shrb
mov
push
mov
lret
add
pop
aaa
mov
lea
hlt
cltd
mov
ljmp
stc
sarl
fisubrs
js
jnp
ljmp
pop
and
mov
add
rol
sbb
aam
xor
loop
xchg
aas
lods
xchg
mov
adc
inc
and
fisttpll
xor
or
fstpt
and
jle
add
loope
jne
pop
dec
insb
std
mov
add
xor
adc
data16
rolb
cmp
icebp
jge
adc
lock
dec
sub
fdivrl
jo
dec
and
cmpb
mov
and
filds
add
fwait
test
xor
add
cld
mov
in
pop
fsts
dec
dec
inc
cmp
cmpsl
and
mov
jnp
inc
nop
fwait
fs
cmpsl
xchg
movsl
inc
and
das
imul
jle
rol
cmp
add
sub
fsts
xchg
pop
mov
rorl
add
sub
adc
mov
pop
int
or
je
sub
sub
mov
jnp,pt
and
mov
stc
cmp
popl
sahf
xchg
xor
pop
sti
enter
test
xchg
arpl
add
roll
data16
mov
push
cmc
jp
out
or
xchg
pushf
and
fs
mov
aaa
mov
leave
icebp
jae
mov
cmp
adc
nopl
inc
or
mov
aam
push
notb
xlat
roll
lea
bound
pushf
jns
adc
push
xorl
popf
mov
cli
jecxz
test
std
or
and
push
jo
xchg
cs
lret
repz
jb
test
movsb
mov
stos
push
push
stc
xor
jne
pop
lahf
xor
jecxz
push
insl
and
jne
loope
sub
mov
lock
mov
fld
cmp
adc
adc
inc
and
sub
mov
push
imull
xchg
jp
xchg
push
mov
xchg
imul
int
push
rorb
inc
imul
bound
dec
movsl
arpl
repnz
dec
mov
mov
outsl
inc
inc
sub
mov
adc
jnp
sti
fadds
dec
scas
sahf
fsubr
mov
fistpl
insb
mov
ret
je
cmpb
addr16
push
lret
or
mov
mov
les
jle
mov
sbb
in
jo
jmp
jg
incl
aas
mov
gs
lret
xchg
aam
sub
pop
mov
aam
mov
mov
nop
add
cltd
jg
lcall
inc
rorb
iret
or
cmp
insb
shll
sarw
xchg
sub
repnz
jl
xchg
repz
repz
aad
gs
xor
jg
pop
test
lcall
inc
and
shll
pop
push
cmp
popa
push
adcb
inc
aam
mov
shlb
in
adc
mov
fwait
out
rcl
and
icebp
xor
inc
xor
int3
rcl
into
in
sbb
mov
or
or
jmp
aad
cmc
loope
jmp
outsb
enter
in
push
pop
sahf
lods
sti
pop
outsl
ds
shlb
rcr
mov
dec
call
subl
xchg
mov
mov
sahf
out
mov
xor
arpl
and
rorb
scas
in
ja
inc
jb
mov
int3
push
fwait
mov
inc
add
imul
xchg
mov
add
sub
dec
inc
sub
arpl
and
pop
and
les
mov
pop
dec
inc
jae
out
mov
enter
pop
jae
leave
mov
inc
push
dec
or
aaa
cmp
dec
mov
mov
push
add
test
movsb
daa
xor
out
lahf
jno
sbb
or
bnd
bound
stc
inc
popa
xchg
mov
jb
mulb
dec
iret
push
fidivs
pop
push
imul
mov
cltd
adc
in
outsb
or
out
leave
je
sbb
ret
je
mov
cmp
dec
cmp
xor
xlat
mov
ds
mov
loope
xlat
and
mov
pop
mov
xlat
inc
dec
push
lcall
jg
xchg
jae
fimuls
stc
popf
lds
sub
sbb
dec
jmp
mov
arpl
jae
mov
sbb
orb
xor
cmc
and
fcmovu
or
sbb
js
xchg
out
pop
push
lret
pop
cld
test
add
es
cmpsl
sahf
mov
jns
pop
mov
daa
fdivl
push
mov
sub
inc
stos
cli
inc
icebp
ja
fdecstp
sbb
push
sahf
dec
xchg
mov
and
adc
outsb
int3
mov
add
pop
push
xchg
cmc
pushl
shlb
in
jge
add
adc
lea
shrl
rclb
cld
adc
sbb
into
jb
mov
clc
stc
sahf
rclb
inc
push
movsb
arpl
out
enter
cmpsb
aas
stc
fabs
fisubrs
shll
dec
dec
mov
jge
in
test
sub
in
std
inc
sbb
inc
jecxz
pop
in
sbb
and
or
cmpsb
test
jle
mov
pop
inc
push
sub
and
pop
inc
lret
aaa
mov
sbb
xchg
stos
and
loopne
mov
xor
loope
and
shlb
pop
into
jmp
jmp
ljmp
push
fstl
adc
xchg
mov
adc
hlt
xor
or
cld
dec
pop
cmc
fstl
push
dec
sub
xlat
test
lods
add
inc
nop
out
add
pop
lcall
imul
pop
rolb
cmp
jp
mov
imul
pop
mov
add
cmpsl
fsubrl
push
ss
enter
outsl
or
pop
xchg
xor
sub
shlb
and
mov
testl
inc
sub
leave
or
mov
cmp
insb
jl
xchg
loope
sbb
jmp
jae
inc
add
inc
pop
in
mov
jne
push
xor
enter
mov
shlb
jl
and
or
and
cmp
imulb
xchg
inc
mov
mov
outsl
sbb
sbb
mov
std
push
pop
pop
pop
xor
jb
nop
dec
mov
out
push
lcall
ret
jmp
nop
les
push
out
mov
lret
inc
jae
mov
push
mov
xchg
or
ljmp
hlt
xchg
lods
inc
bound
pop
fcoml
dec
loop
jne
dec
lret
lods
loop
jno
xorb
cld
in
mov
outsb
in
rorb
sbb
mov
repnz
adc
loop
push
rorb
or
bound
adc
push
aam
jbe
ja
icebp
dec
fldl
sub
call
ja
mov
mov
or
mov
cwtl
out
mov
fimuls
mov
imul
sarb
cwtl
cmp
mov
sub
es
lret
sub
push
lds
adc
shlb
and
mov
jmp
rcll
ljmp
mov
pop
shlb
inc
das
or
sub
xchg
or
mov
push
in
xchg
out
hlt
into
pushf
test
push
mov
jg
andb
test
inc
in
pop
adc
scas
and
lea
pop
jns
fsubp
jno
mov
inc
es
jmp
stc
sarb
push
outsl
and
addr16
fbstp
jne
or
fwait
mov
arpl
mov
mov
fidivl
xchg
mov
jecxz
outsb
dec
in
and
mov
jge
xchg
jae
addr16
in
cmp
test
aas
lock
pop
adc
jl
cmpsb
push
imul
js
xor
mov
dec
jmp
mov
prefetchw
push
insb
or
mov
push
xchg
in
repz
out
and
push
pop
pop
fnstsw
jl
jbe
xchg
bound
aas
pop
aam
mov
iret
ret
ljmp
or
rcll
ljmp
scas
jno
lods
stos
mov
dec
push
sarb
jbe
push
cmp
cltd
jae
pop
or
pop
sub
pop
loop
ror
test
adc
movsb
lods
pusha
std
popa
mov
cmpsl
ret
test
sub
insl
add
out
scas
add
int3
inc
jo
push
xorl
jne
jbe
xorb
xor
mov
std
mov
pop
rolb
jne
repnz
rorl
repnz
outsl
in
mov
jne
mov
adc
fucomip
push
cmp
lock
sbb
icebp
sbb
push
push
push
lret
and
jae
leave
lods
aad
lock
ret
gs
cli
clc
hlt
push
mov
push
ret
and
xlat
inc
xchg
cmpsb
and
ljmp
sub
idivb
jno
cmp
call
xchg
mov
scas
xchg
jbe
sbb
adc
dec
jge
inc
addr16
insb
jp
es
enter
mov
cld
aas
fwait
inc
popa
ffree
mov
jp
cwtl
cmp
or
sub
pop
insb
push
and
add
sub
adc
push
aam
sub
push
lds
and
mov
dec
add
js
xor
or
adc
int3
sti
inc
dec
cmp
push
sbb
dec
push
xchg
aad
mov
out
mov
stc
xchg
dec
fsubs
dec
stos
fildl
cltd
push
and
sbb
lret
mov
mov
push
test
push
dec
fadd
xchg
lret
mov
fcomps
sbbb
jo
cli
cmp
mov
jns
add
sub
repnz
cmpsl
dec
mov
jg
mov
ss
xor
testl
in
mov
shrb
push
sarl
xchg
cmc
outsb
bound
sar
mov
mov
push
imul
mov
addr16
das
or
lods
jne
loope
js
mov
inc
xchg
gs
sbb
cld
ds
inc
js
dec
js
ljmp
xchg
mov
data16
sbb
and
lea
das
and
mov
and
out
sbb
roll
fwait
out
enter
mov
xchg
es
mov
jmp
mov
mov
cmp
jl
xchg
out
idivb
cmp
xor
addb
pop
decl
stc
jnp
sub
sub
leave
pop
in
sahf
pop
out
rclb
cmpsb
adc
xor
push
imul
fcomip
pop
adc
inc
inc
jbe
aas
lea
jne
pop
dec
lret
and
fdivrl
xchg
sbb
push
sbb
call
xlat
mov
mov
lret
stos
adc
cmpsl
hlt
adc
mov
test
gs
pop
push
and
into
and
mov
push
adc
add
in
ds
jns
inc
xchg
cmpsl
das
sub
jno
cmp
mov
popf
movsb
add
push
dec
jl
push
in
jns
jb
fisubs
dec
cmp
ljmp
out
insl
in
pop
popa
xchg
sbb
jno
ds
or
xchg
sbb
gs
cmp
adc
pop
orl
xchg
movsb
mov
aam
xor
adc
jb
inc
inc
mov
loop
mov
imul
pop
push
ja
ds
repnz
or
aam
mov
jns
in
nop
or
push
mov
dec
inc
outsb
int3
sbb
fldt
jl
mov
arpl
std
add
fcomps
push
cmpb
mov
push
push
mov
dec
push
mov
stos
cmpl
pcmpgtw
xchg
stc
jp
mov
sbb
pop
sbb
mov
jne
sbbb
sbb
ficoml
mov
jle
mov
cmpsb
incl
jno
cmp
adc
nop
lret
pop
int3
xchg
sub
rcll
mov
or
push
dec
loopne
mov
ror
mov
push
xor
loope
inc
cmp
sbb
mov
jb
mov
mov
mov
lea
xor
in
pop
add
cmp
rcr
hlt
adc
dec
subb
sbb
pop
movsb
jle
mov
movsb
out
sub
lods
mov
popa
notb
test
xor
and
dec
jnp
fcoml
pusha
dec
enter
flds
xchg
ret
pop
stos
lds
mov
jle
xor
call
stc
icebp
iret
popf
cmp
sub
and
mov
sub
scas
aas
enter
push
push
addb
popa
mov
xchg
int
jo
pop
mov
stc
lcall
pop
push
and
dec
int
lock
mov
or
mov
stos
and
xor
sub
inc
jmp
cwtl
mov
testb
xchg
stc
jb
hlt
lret
sbb
fwait
jo
pop
mov
pop
jl
movsl
test
fcomps
cmpl
add
mov
xchg
mov
pusha
mov
cmp
sarb
xor
mov
jle
or
and
mov
or
sti
jo
push
or
add
inc
popf
mov
xchg
fwait
inc
or
push
sbb
imul
fsubl
push
cmpsb
and
add
orb
scas
hlt
das
rclb
rclb
clc
xchg
cmp
sbb
cmpsl
loop
pushf
mov
fcoms
mov
xor
sbb
test
pusha
pop
aam
dec
inc
sub
jg
or
rcrl
sub
stos
push
push
sti
ret
sub
icebp
outsb
dec
inc
mov
ss
cmp
push
and
stos
mov
iret
iret
ret
push
cmpb
lcall
pop
pusha
lods
jae
adc
stos
ret
bnd
adc
lods
fsubrs
stos
xchg
in
aam
sbb
int
push
call
or
cmpsl
out
andl
add
push
lods
mov
test
pop
inc
out
stc
gs
sub
int
jo
ficomps
inc
outsb
xor
lods
adc
daa
addl
push
pop
or
or
das
xlat
sbb
cmp
mov
lahf
xchg
xor
or
xlat
adc
iret
fcoms
or
sub
inc
stos
cmp
xchg
dec
or
sub
sbb
xlat
mov
jb
inc
movsl
push
jno
lcall
dec
cmp
in
or
jmp
push
cld
lret
inc
cmp
loope
or
call
ret
out
add
add
adc
mov
lcall
inc
sbb
pop
pushf
outsb
out
xchg
inc
cmp
xchg
cli
mov
pop
popf
outsb
or
or
lcall
shld
sub
rorb
jnp
je
sbb
add
dec
adcl
cld
and
jns
pop
push
call
mov
push
hlt
stos
dec
popa
dec
mov
out
idivl
dec
or
dec
lds
xor
lock
adc
cmpsb
push
add
mov
int3
mov
xchg
mov
add
loop
push
mov
adc
and
shrl
fsubr
and
add
mov
or
push
dec
mov
cwtl
push
aam
mov
bound
pop
adc
inc
push
mov
inc
pushf
add
jne
adc
inc
iret
test
and
and
jnp
push
push
mov
iret
cmpsb
in
xor
cmc
inc
or
jmp
pop
push
inc
outsl
lahf
inc
fildll
sub
sahf
mov
sbb
and
cmp
pop
rcr
jns
dec
push
pop
fwait
adc
mov
inc
mov
and
push
in
xchg
adc
dec
add
pop
insl
jecxz
jecxz
lods
ficoml
push
call
aam
into
call
loope
push
push
mov
daa
jg
enter
cs
pushf
or
and
add
mov
loop
movsl
fwait
pop
roll
cmc
xor
fcmove
add
rcr
xchg
pop
inc
inc
lret
nop
sub
xor
xchg
sub
adc
xchg
aaa
outsl
insb
push
cmp
xchg
inc
int3
movsl
stos
mov
xchg
add
adc
and
nop
fcoml
push
inc
mov
sub
jge
enter
icebp
jo
fisubrs
push
push
scas
or
and
sbb
push
repnz
sub
mov
test
insl
mov
lods
call
subl
movsb
push
pop
imul
and
push
cli
in
jg
cltd
loope
xor
inc
add
and
in
popf
jg
imul
mov
and
fstpt
inc
xor
jns
call
ljmp
jnp
dec
and
mov
xchg
add
repnz
add
inc
clc
sub
test
lods
push
lcall
sub
mov
nop
mov
ficoms
cmc
push
mov
pop
or
push
push
repnz
iret
out
inc
lea
and
push
iret
or
in
xchg
je
add
cmp
sub
lea
cmpsb
insb
xchg
xchg
jl
and
add
pop
adc
ret
out
xor
cmp
xchg
push
add
adc
inc
mov
outsb
popf
xchg
arpl
sub
adc
sub
adc
inc
xor
pop
jno
out
pop
scas
adc
mov
imul
xchg
daa
dec
or
jbe
aas
or
and
cli
mov
jnp
loopne
mov
std
inc
push
pop
into
cmp
js
mov
xor
fucomip
or
outsl
jge
sbb
cwtl
repnz
push
jno
and
fstl
sbb
ss
mov
andl
mov
imull
mov
xchg
mov
lea
and
pop
xor
loope
outsb
repz
inc
shll
dec
movsb
rorl
xchg
es
and
and
mov
rcrl
loop
fdivrs
or
stos
or
pop
jmp
or
lret
push
dec
jae
mov
out
fstl
int
dec
and
stc
mov
jne
stos
or
outsb
jno,pt
lds
adc
das
dec
lret
xor
dec
mov
repz
push
push
lods
mov
jb
xchg
pop
out
pop
ds
adc
add
loope
and
loop
pop
cmpsb
pop
es
mov
cmp
or
push
cmp
pop
cmpsl
in
cwtl
movsb
mov
inc
mov
or
js
jg
out
xlat
loop
js
or
push
mov
jnp
fmulp
mov
daa
mov
mov
loope
cmp
push
or
mov
mov
sub
or
aas
daa
mov
pop
jg
mov
fwait
pop
in
xchg
adc
punpcklwd
mov
popf
and
ljmp
call
out
mov
mov
jbe
shlb
insl
insb
xor
aas
cmp
das
push
mov
adc
std
pop
mov
int3
xor
repnz
les
pop
adc
test
ja
mov
mov
nop
jo
dec
out
mov
fst
jns
fwait
mov
sbb
or
sub
cmp
xchg
fstp
mov
jl
inc
das
dec
mov
push
icebp
test
dec
push
fiaddl
adc
cmp
pop
pop
pusha
jmp
mov
and
gs
xchg
outsl
sti
pop
jno
push
push
icebp
out
and
sahf
mov
out
sbbl
inc
pop
and
aas
ljmp
js
cmpsl
cmp
add
adc
xor
fwait
add
pop
sti
dec
xor
aad
enter
and
sbb
ja
test
cmp
mov
push
jnp
dec
lret
inc
push
cmp
jle
pop
cld
lock
dec
mov
mov
daa
nop
or
mov
jae
enter
push
out
rcrl
rcrl
pop
mov
jno
mov
adc
out
movsb
dec
xchg
in
loope
data16
xor
cmp
add
add
icebp
outsl
pop
adc
and
add
dec
dec
add
jnp
add
mov
inc
add
mov
add
add
add
cmp
jne
repz
jmp
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
andl
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
pushl
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
pushl
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
movb
movl
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
movb
test
js
jg
mov
mov
cmp
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmpl
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzwl
push
push
movzwl
xor
push
lea
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmpl
sete
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
int3
jmp
