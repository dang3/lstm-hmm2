sbb
add
mov
sbb
push
xor
jne
stos
pop
mov
hlt
xor
inc
sub
and
cmpsb
jae
push
mov
sub
jne
rcrl
sahf
outsb
adc
sub
out
fimull
cmp
push
repz
out
push
xor
add
pop
mov
icebp
inc
inc
cmpb
jns
and
and
in
mov
cmp
orb
jmp
push
int3
iret
or
js
lcall
dec
adc
inc
test
xchg
xchg
xor
fwait
bound
xchg
icebp
xorl
sbb
mov
mov
scas
mov
xchg
enter
pop
pop
ljmp
or
icebp
into
adc
pop
mov
xchg
imul
sub
sub
adc
testb
push
mov
cmp
sub
push
leave
pop
jle
es
shlb
xor
mov
leave
mov
mov
or
je
pop
xor
add
jns
arpl
and
dec
mov
mov
out
fbstp
push
adc
lods
jb
shll
push
fwait
imul
pop
mov
xchg
jae
insb
mov
xor
loopne
inc
jp
lea
repz
cwtl
nop
lods
mov
cli
mov
or
mov
cmp
ret
ljmp
pop
ret
imul
ret
sbb
hlt
mov
sbb
int
mov
xchg
push
xchg
push
fcoms
mov
inc
or
push
ret
sbb
cmp
add
sub
subl
pop
lods
neg
pop
pop
xchg
add
mov
add
jmp
jmp
dec
xchg
in
lds
sbb
mov
stos
inc
cmc
dec
mov
fwait
and
jnp
sti
push
adc
xor
pop
adc
cmpsl
cs
scas
fs
sub
mov
loope
test
push
rcll
std
push
xchg
test
ficoml
test
pop
dec
add
dec
push
adc
movsl
pop
imul
dec
lock
adc
or
pusha
je
inc
mov
data16
mov
pushf
adcl
icebp
stc
cmc
jg
fnstsw
mov
jnp
jecxz
adc
sub
rcll
arpl
ret
jg
sbb
lods
mov
xorl
and
adc
cld
mov
inc
dec
and
fcomp
and
mov
int
loopne
push
and
jo
jno
fistpl
sbb
nop
loop
jge
cmpl
gs
xor
mov
sub
leave
pop
push
mov
mov
mov
dec
mov
stc
cmp
mov
and
and
mov
jbe
xor
push
pop
inc
cmp
stos
mov
mov
jbe
sbb
mov
adc
cmc
mov
lock
or
or
jl
jge
or
daa
in
adc
std
mov
call
mov
in
outsl
in
push
cwtl
repnz
js
cmpsl
jae
aaa
add
scas
insb
data16
pop
jmp
mov
add
push
adc
push
loopne
pop
sbb
scas
dec
xchg
insl
rcr
in
decl
jle
mov
mov
mov
push
scas
or
ret
cwtl
push
call
data16
ja
push
add
xchg
les
fbstp
and
and
pop
jg
push
xor
sub
out
lods
mov
rcr
dec
sahf
lods
push
push
stos
pusha
lret
xchg
pop
loop
repnz
sbb
mov
push
cmp
test
push
ljmp
lea
ja
xor
lcall
in
cmp
sub
mov
fadds
jne
dec
imul
pop
mov
and
shrl
mov
jae
iret
add
cmp
fnsave
sbb
cltd
sti
sub
xchg
ja
mov
add
pop
subb
cmpsb
xor
sub
inc
and
cmp
mov
xlat
mov
lods
pop
xchg
and
xchg
or
dec
inc
shr
xor
fistpll
jbe
jl
xchg
xchg
gs
xlat
mov
dec
sbb
nop
test
sbb
jmp
aam
mov
subl
pop
bound
push
pop
bound
jg
mov
sbb
adc
ljmp
fcoml
add
enter
cmpsb
ret
dec
iret
ljmp
gs
mov
rolb
scas
ss
das
pop
add
pop
sub
mov
sbb
dec
ds
stc
adc
adc
mov
or
push
pop
mov
out
ficoml
mov
call
scas
adc
sbb
adcl
dec
scas
pop
sbb
lea
jle
cmpsl
cmc
daa
mov
rolb
imulb
cmpsb
lock
repnz
add
xchg
cmpsl
jecxz
sub
xor
jmp
or
cmpb
imul
push
mov
jge
push
ffree
mov
or
push
outsl
jne
jmp
arpl
xlat
pushf
js
xlat
sbb
gs
xchg
lea
cmp
sub
cmpsb
lods
cwtl
scas
gs
popa
test
ljmp
xchg
add
mov
cmp
inc
out
xor
cli
lds
add
push
xlat
inc
sarl
xchg
call
sbb
xchg
sahf
icebp
imul
dec
mov
icebp
mov
lret
or
adc
out
jg
out
and
or
js
xor
stc
sub
shlb
xchg
mov
imul
sub
push
fisttpl
jecxz
mov
or
mov
popf
ror
iret
mov
mov
pop
inc
dec
xchg
neg
cwtl
xchg
vcvtpd2dq
movsl
popf
test
sbb
and
inc
jbe
out
mov
shlb
jo
mov
pop
out
jbe
push
arpl
push
leave
mov
jge
sub
pop
adc
movsb
sbb
pop
imul
pop
cmp
int3
inc
or
or
and
nop
test
clc
add
xor
pop
jmp
mov
jge
sbb
cmpsl
icebp
sbb
mov
cmp
pop
and
movsb
out
mov
inc
std
adc
mov
add
shrl
adc
ja
outsl
adc
mov
and
enter
add
push
sub
mov
out
xchg
in
push
enter
xchg
ja
mov
scas
gs
testb
jp
jb
adc
aam
addr16
loop
pusha
subl
push
pop
adc
icebp
mov
in
xor
stos
inc
mov
push
mov
pop
jl
inc
mov
xor
outsb
push
popl
xor
push
mov
add
jb
repz
xchg
pop
mov
lea
mov
dec
jge
repnz
sub
push
lods
in
sahf
mov
das
cld
ret
xor
jbe
cmp
xchg
imul
mov
cmp
or
add
pop
popf
mov
loopne
xchg
xor
xor
subb
enter
js
js
icebp
sti
imul
aam
sbb
and
lea
mov
test
sub
push
push
cmp
add
jle
shl
jmp
xchg
scas
and
shr
jl
ljmp
pop
add
dec
add
pushf
cmp
sti
popa
fnstenv
adc
inc
in
jbe
repz
fisubrl
xchg
dec
repz
xor
cmp
jl
mov
cmpsl
imul
out
or
sti
fadds
ja
jo
adc
pusha
fdivp
int
mov
mov
clc
push
out
jne
aaa
cmp
inc
pop
xchg
jge
andb
mov
xchg
mov
imul
mov
jp
cmpsl
pop
test
xor
aad
push
cmp
push
hlt
push
adc
lcall
sti
inc
xchg
jmp
push
cmova
jl
lret
je
inc
add
mov
mov
pop
or
jbe
add
jl
sub
pop
cmc
scas
pop
imul
add
pusha
movsl
jnp
sbb
daa
xorl
pop
pop
inc
pop
fistl
cmp
inc
adc
sbb
cmp
xor
mov
lods
push
les
mov
jb,pn
ja
sbb
push
addr16
sub
jno
shl
and
mov
insl
pop
fildl
xchg
popa
and
loopne
mov
imul
loope
test
out
subl
rcrl
cmp
jb
paddb
movsl
ja
les
es
and
jmp
jg
pop
xlat
in
fsubrl
mov
adc
sarl
mov
out
xor
and
bound
pop
or
cwtl
lcall
jbe
xor
xlat
pop
out
inc
iret
cli
adc
or
pop
bound
loope
or
fcoml
fstpl
out
movsb
jg
js
adc
xchg
hlt
fcoms
mov
inc
adc
fcmovnu
out
mov
sarb
orb
inc
in
mov
testl
jb
adc
xchg
lret
lcall
popa
push
or
cmc
inc
dec
push
adc
je
imul
adc
push
adc
arpl
repnz
psubb
loopne
mov
loop
clc
movsb
inc
mov
pop
es
out
sbb
lahf
xchg
enter
mov
movsb
sbb
mov
scas
rcr
repnz
mov
test
dec
ljmp
jle
sbb
leave
lods
lock
in
cmp
pushf
fistpl
add
push
pop
sub
push
jl
or
mov
in
jnp
sub
insl
andl
inc
out
test
add
mov
in
jns
movsl
mov
jnp
movsb
mov
scas
js
push
push
inc
adc
pusha
dec
push
xor
add
xor
sbb
mov
and
test
push
insl
xor
in
add
cmp
in
dec
out
pop
lret
cmp
adc
adc
add
out
test
pusha
adc
pusha
loop
cltd
or
outsb
sub
pop
sub
push
aad
add
add
ja
jle
mov
jo
pop
addr16
inc
sbb
pop
int3
inc
push
dec
xchg
xchg
int3
push
out
mov
push
xchg
ret
in
clc
xchg
stos
jb
stc
jo
imul
shl
dec
inc
nop
jecxz
lods
inc
ret
xchg
mov
and
loope
lea
vmulpd
inc
sub
adc
or
stc
scas
xor
ljmp
mov
push
lods
mov
fwait
push
decl
addr16
add
mov
xor
arpl
push
outsl
sub
gs
add
lea
mov
stos
cmp
stc
test
dec
dec
ret
dec
pusha
and
pop
aas
sbb
jno
outsb
xchg
fdivs
cli
sbb
inc
or
jns
aad
push
xor
movzbl
xchg
add
mov
fisubrs
testl
and
push
mov
arpl
xor
loop
mov
sti
arpl
xor
pop
xchg
push
sub
sub
xchg
js
jmp
xchg
fwait
jnp
xchg
pushf
lock
leave
cmpl
sub
jl
pop
sub
mov
popa
xor
cltd
sub
add
dec
cli
and
addb
arpl
push
and
xchg
repnz
cmp
int
fs
jmp
dec
sub
pop
fistps
enter
shll
jl
jnp
push
mov
xor
cmc
pop
xor
jge
outsl
jo
cltd
and
mov
rclb
mov
inc
int3
xlat
scas
insl
pushf
xchg
and
rcl
mov
dec
push
rorb
cltd
ljmp
mov
das
mul
xchg
mov
jmp
mov
xor
in
pop
push
mov
xchg
int3
nop
push
out
out
stc
fs
movsl
push
cli
out
xorb
pop
xor
stos
mov
inc
imul
jl
ljmp
dec
movsb
clc
mov
xchg
push
fs
test
sbb
mov
inc
mov
rcll
push
mov
mov
sarb
shrl
shlb
adc
jge
jne
rolb
scas
imul
data16
jbe
int3
mov
add
inc
pop
mov
adcl
les
movb
sbb
mov
sahf
xor
fucom
test
mov
jbe
stc
loope
and
daa
loope
ljmp
fdecstp
cli
mov
push
lds
xchg
pop
dec
or
int3
int
aam
mov
sqrtps
xchg
ret
and
sub
inc
pop
xchg
shl
jl
jmp
and
push
jl
int3
bound
hlt
sub
mov
xchg
inc
push
cli
aad
dec
pusha
dec
pop
add
loop
dec
dec
inc
out
xor
push
iret
outsb
je
mov
sub
push
xor
sbb
lods
popa
sbb
fldenv
inc
lods
in
xor
pop
xchg
imul
movsl
dec
repz
adc
jge
or
rclb
int
rcrl
aaa
dec
in
mov
mov
into
add
adc
lods
repz
mov
fistps
dec
sub
aaa
adc
fwait
mov
imul
insb
mov
push
mov
adc
xchg
lds
sub
int
pop
ljmp
mov
dec
loop
adc
cmpsb
das
xchg
jge
push
xchg
cmp
mov
adc
pop
mov
or
and
push
inc
faddl
push
xor
inc
cltd
pop
mov
adc
jmp
push
xchg
mov
cli
scas
insb
mov
mov
imul
es
jnp
sub
and
jnp
add
xchg
paddq
aaa
sub
out
sbb
andb
sti
mov
inc
mov
shl
rclb
xor
and
cmc
pop
fimull
mov
loop
inc
icebp
dec
sub
pop
hlt
stos
lret
lea
hlt
into
adc
arpl
add
sub
or
xor
rcrl
push
or
fbld
cmovbe
test
sub
daa
cmp
jmp
and
fs
inc
arpl
stos
cs
mov
pushf
push
addr16
adc
popf
in
add
imul
dec
movq
sub
stos
sub
int
jecxz
mov
push
out
sub
push
cs
call
sub
ds
dec
aas
push
pushf
push
cmp
lcall
fcoms
push
mov
push
adc
into
out
cwtl
mov
mov
xchg
xchg
movsb
pop
mov
aaa
sbb
cmpsl
bnd
enter
pop
jecxz
jno
lods
mov
stos
test
xchg
repnz
sub
scas
push
scas
xor
out
pushf
cli
or
scas
xor
jo
imul
enter
pop
mov
fcmovbe
inc
cltd
cmp
jge
inc
mov
pop
and
je
insl
popa
ror
sub
cmp
sub
lret
mov
out
ret
es
or
mov
lods
jle
mov
popf
push
xchg
jmp
sahf
adc
daa
or
push
pop
xor
fs
in
pop
mov
jl
sub
out
repz
push
mov
lods
imul
mov
and
mov
adc
push
fwait
xchg
adc
or
push
stos
push
or
cmp
mov
sahf
or
pop
lods
jbe
out
push
pop
or
sub
add
addr16
xchg
mov
push
jl
stos
movsb
cmp
push
mov
out
lock
int3
sub
movsl
xor
inc
jl
fcomip
inc
jns
sbb
flds
clc
adc
add
dec
lret
mov
sbb
dec
vmwrite
and
icebp
jmp
xchg
adc
outsb
daa
sbb
cmp
out
add
out
scas
in
call
push
cli
sbb
pop
popa
jae
insb
mov
push
shrb
mov
dec
xchg
cmp
pop
and
mov
inc
js
mov
ret
test
out
xchg
mov
lret
xchg
aaa
stos
sub
or
xor
pop
mov
xchg
mov
mov
mov
call
aas
test
inc
jns
stc
roll
mov
lret
out
lahf
pop
inc
xorb
xchg
cmc
icebp
aam
sub
int3
shrl
mov
jne
jge
pop
shrl
jp
push
out
jnp
hlt
fwait
out
pusha
adc
les
mov
shll
pop
add
enter
inc
mov
inc
xor
lods
rorb
jbe
pop
push
icebp
dec
dec
aam
lret
pop
in
sub
push
mov
and
jb
lret
jecxz
push
sub
lret
repz
arpl
pop
mov
cld
mov
popf
dec
pop
bound
imul
aaa
or
rorb
and
ret
xchg
xor
xor
or
fadds
movsb
fwait
std
scas
shll
sbb
inc
mov
inc
out
add
lods
fdivrs
dec
xchg
lea
adc
or
shll
xchg
xchg
negb
cld
arpl
jno
into
aad
pop
pop
mov
js
lods
jecxz
arpl
cs
sbb
inc
cmp
loope
mov
pop
or
in
gs
inc
aas
in
fcom
inc
pop
sbb
inc
loopne
dec
pop
repz
mov
hlt
inc
imul
pusha
mov
jae
pusha
adcl
jnp
fimuls
cwtl
scas
dec
test
ret
bound
mov
leave
xchg
mov
test
mov
fs
fimull
cmp
aam
mov
cmp
jmp
sub
dec
or
enter
mov
mov
cmp
in
mov
ds
dec
movsl
test
movsl
or
movb
cmp
iret
pop
leave
test
out
inc
and
fildll
push
pop
dec
cmp
outsl
adc
int
call
or
ljmp
mov
lret
ss
int3
pop
and
xor
mov
inc
rorb
mov
mov
hlt
or
insb
or
push
push
dec
shr
or
movsl
sbb
sub
or
dec
stos
repz
dec
dec
jne
jnp
mov
sbb
push
fstp
fcomps
push
cltd
mov
xlat
andl
fidivl
and
cmp
sbb
sbb
dec
gs
out
into
lcall
popf
add
add
std
rcl
mov
bound
dec
test
test
mov
lahf
cmp
cmp
fwait
adc
push
inc
imul
sti
or
xchg
xchg
push
andl
dec
pop
or
inc
xchg
sti
cmp
aam
gs
in
and
jb
std
faddl
shlb
push
test
in
jmp
inc
xchg
or
push
mov
rcrb
pop
adc
test
mov
add
adc
ds
leave
and
popl
push
lea
push
mov
and
inc
inc
pop
sub
cmp
sub
jo
sarb
outsl
fwait
loop
fiadds
dec
xchg
cmp
dec
int
lds
insb
dec
in
addr16
sub
xchg
push
pop
cmp
insl
aam
sbb
xchg
push
or
negl
xchg
inc
xor
dec
lahf
inc
or
inc
xor
in
inc
mov
subl
orb
cmpsb
sbb
inc
lock
arpl
sub
xchg
fabs
out
popa
sub
push
out
cmpsl
pop
outsb
sbb
sub
ret
mov
es
insl
mov
add
sahf
cmpsl
popa
push
cwtl
sbb
push
push
ja
mov
ds
pop
xchg
das
iret
out
push
out
dec
sub
jnp
lds
mov
inc
jp
in
sbb
daa
shrb
xor
sub
adc
dec
btr
cmc
lea
lods
sbb
std
push
mov
dec
cwtl
xor
ffreep
mov
inc
pop
es
jle
sti
sti
xor
sbb
ret
add
mov
mov
jnp
lret
inc
mov
pushf
mov
inc
test
insl
pop
adc
push
xor
ds
xchg
clc
in
sub
aam
arpl
sahf
add
scas
in
inc
pop
das
jb
js
stc
mov
push
rcr
push
dec
and
jne
lock
sub
mov
fiaddl
dec
ret
pushf
mov
cli
lret
sub
pop
call
ja
pushf
pop
push
xchg
out
jnp
sub
loope
fisttps
push
arpl
addb
mov
subl
xor
enter
fstl
insb
cmp
jmp
mov
nop
mov
push
testb
insl
es
cmp
pop
xchg
xlat
popf
mov
xchg
xchg
mov
xor
or
out
add
lea
cmp
mov
mov
xchg
adc
or
xchg
fisubrl
aaa
jbe
ljmp
cld
inc
sahf
aad
xchg
adc
dec
js
inc
movsb
mov
sub
aaa
pop
lock
lea
outsl
jmp
movsl
imul
mov
out
xchg
xor
mov
mov
jmp
mov
and
roll
cmpsl
call
mov
xchg
inc
push
ja
xchg
clc
push
inc
xor
stos
sub
dec
pop
xor
cmc
mov
in
dec
pop
cld
je
mov
inc
fistpll
mov
jge
or
dec
fisubl
pushf
sub
pop
loop
jno
push
or
lock
dec
xchg
or
and
es
arpl
and
dec
pop
mov
add
aad
out
into
mov
cmp
xchg
fnstsw
sti
and
rolb
xor
inc
leave
xchg
cmp
fnstsw
shll
jo
mov
dec
imul
mov
insb
ror
xchg
imul
xor
aam
jle
xlat
mov
mov
push
faddl
cmp
mov
pop
insb
xor
add
scas
adc
jmp
dec
jg
jnp
add
add
add
scas
dec
dec
ret
pop
andl
out
push
arpl
int
mov
sarl
lea
xor
cmp
adc
test
insb
mov
and
std
fldcw
outsl
test
adc
pop
push
xchg
les
int3
int3
clc
sbb
jmp
sub
and
popw
pop
xor
and
and
int3
sahf
sub
pop
int3
adc
cmp
mov
mov
mov
push
mov
mov
mov
sub
fildl
repz
loop
cmp
inc
mov
lahf
cmpsl
xor
mov
fisttpl
ret
inc
push
call
rcrl
jbe
imul
js
fmull
inc
fsubs
inc
out
jbe
shll
inc
inc
pop
dec
adc
jle
loop
jo
pushl
pusha
dec
stos
jns
and
rcll
movsl
push
test
mov
aam
xor
mov
scas
ja
and
mov
xor
outsl
rcl
xchg
sbb
movsl
push
jg
adc
jg
lret
mov
cs
jecxz
jp
add
push
xchg
mov
fildl
mov
inc
push
pop
jb
js
lock
xor
lods
pop
fistl
divl
jg
loopne
fisubrl
jl
hlt
jno
mov
lods
xor
jae
sar
pop
sub
shlb
mov
jb
in
pusha
ja
sahf
int3
jl
jmp
inc
fnstenv
cmpsb
xor
shl
mov
add
jp
xchg
dec
pop
pop
mov
shll
lahf
mov
into
shrl
leave
test
jmp
data16
inc
inc
xchg
dec
xchg
in
into
pop
outsb
xor
dec
pusha
fs
dec
lock
xor
push
daa
add
sbb
mov
adcl
mov
popf
out
fldcw
jns
je
fsubp
lds
push
mov
lods
adc
push
inc
mov
dec
ret
idivl
mov
xor
fmull
dec
lahf
xchg
lret
mov
loop
js
jno
mov
jae
mov
mov
jnp
std
inc
pop
test
xchg
loopne
xor
adc
rcrb
add
sub
push
and
mov
lods
and
fxch
ja
js
pop
les
xlat
aam
jg
mov
mov
sub
push
sub
fimull
jg
jno
jge
cmp
fdivrs
or
sbb
sti
fnstcw
dec
dec
fwait
scas
test
mov
mov
sbb
test
adc
mov
clc
imul
xorb
outsb
adc
lret
xor
imul
mov
inc
xor
lea
mov
nop
push
icebp
lret
xor
test
mov
sub
adc
mov
push
pop
imul
outsl
sarb
mov
jne
or
stc
jmp
sarb
push
adc
paddd
leave
ja
into
movb
mov
nop
lret
subl
fnstcw
ficomps
out
das
ficoml
movsl
scas
into
into
adc
fisubrs
pop
mov
mov
sbb
sbb
test
push
loopne
daa
ljmp
mov
aas
xchg
je
push
push
cmp
pop
xchg
sbb
sarb
or
cmp
mull
xchg
jl
fldt
popa
and
mov
jns
gs
mov
enter
mov
xor
push
rolb
ficoms
xchg
nop
dec
pushf
mov
nop
jo
mov
mov
cmp
pusha
in
leave
fucomip
nop
call
das
or
jns,pt
jle
xlat
das
pop
inc
repnz
sbb
mov
cmpsl
adc
fwait
lret
and
cmp
adc
test
xchg
adc
pop
test
push
push
sti
lcall
dec
sbb
inc
mov
andl
and
pushf
add
and
pusha
stos
adc
dec
mov
and
mov
pop
lret
jne
stos
cwtl
outsb
inc
xchg
imul
hlt
mov
leave
jmp
clc
test
js
mov
xor
int3
mov
scas
sub
fnstsw
pop
pop
pop
cmpsl
sbb
xor
cmpsb
test
adc
xor
movsl
hlt
idivl
stos
sti
fidivs
movsl
cwtl
push
xor
push
loope
ret
jl
sahf
popw
push
in
jnp
jb
dec
mov
insl
jb
sub
mov
ljmp
test
lret
fdiv
fdivr
mov
cmp
jmp
popa
test
push
in
call
mov
dec
leave
ds
mov
pop
xchg
push
stos
ret
sub
ret
xor
mov
ficoms
cld
jae
fxch
rcr
repz
cmp
push
or
lea
push
xorl
cmp
sti
outsb
out
inc
fwait
idiv
hlt
xchg
lahf
es
push
repnz
das
dec
out
xchg
mov
sbb
pop
lods
ds
daa
jle
stc
or
mov
adc
fbstp
xchg
fwait
pop
loop
mov
ret
lcall
clc
mov
pop
xlat
push
out
ret
mov
andb
cwtl
mov
fbstp
pop
leave
adcb
testl
lcall
add
iret
sub
int
out
push
dec
mov
fs
mov
imulb
xor
scas
pusha
jb
fstl
js
daa
cwtl
icebp
loopne
jo
xorb
sub
pop
nop
fcmove
loopne
fdivs
shrl
push
js
pop
xchg
cmp
push
pop
or
test
call
cmp
shrb
or
js
and
jecxz
or
adcb
push
or
lahf
jl
mov
outsb
jge
notb
xor
xor
cmp
or
aad
lds
xor
or
jno
in
add
inc
mov
vmwrite
dec
out
or
cmp
adc
xchg
xor
adc
sti
mov
adc
or
xchg
shlb
add
adc
jle
aad
xor
cmp
dec
fwait
out
in
or
jmp
adc
push
aad
adc
mov
outsb
test
mov
inc
inc
or
xchg
in
fwait
sbbb
lret
mov
jge
insb
and
add
lahf
xchg
dec
sbb
ficoml
rcrl
push
mov
and
mov
std
inc
ror
push
fistps
mov
pop
lahf
popa
add
mov
mov
add
push
test
dec
fs
push
jle
mov
loopne
pop
lahf
out
out
cmpsb
adc
push
lds
std
mov
std
mov
fscale
movsl
cli
inc
or
insl
xchg
dec
icebp
mov
popf
dec
inc
subl
inc
sub
test
mov
lock
pop
stos
jns
push
xchg
popa
adc
xor
sub
xchg
push
in
mov
mov
adc
cld
fildl
inc
sub
add
lds
or
cs
lcall
sbb
out
mov
std
repz
xor
les
test
ljmp
add
adc
call
enter
adc
out
sbb
cwtl
jbe
cld
xor
push
jb
and
mov
fs
add
cmp
dec
pop
push
out
int
imul
cmp
roll
mov
pop
sahf
scas
inc
pop
xchg
std
icebp
jns
popf
mov
jb
flds
bound
jl
cmc
je
mov
cmp
mov
xor
lds
pop
dec
jb
out
mov
sub
pop
jno
push
hlt
cwtl
call
sbb
sub
inc
aam
jnp
inc
andl
mov
adc
cmp
das
push
enter
xchg
jo
mov
sbb
adc
jl
push
stos
sbb
adcb
mov
jae
cmp
rcrb
cmp
daa
cmpsl
sub
iret
jnp
iret
jl
popf
or
pop
pushf
rcrl
pop
mov
in
push
adc
arpl
mov
and
pop
pop
pop
aaa
nop
clc
in
sbb
mov
lds
loope
lods
add
add
sbb
push
insb
fstl
dec
sarl
aad
adc
out
ret
repnz
add
jne
mov
imul
popa
testl
pop
cwtl
popf
fxch
jecxz
nop
and
lds
rolb
fdivrs
fists
jg
push
notl
loope
pop
cmp
or
insb
dec
sbb
aad
xchg
into
mov
sbb
jnp
sbb
mov
je
or
test
hlt
movsl
xlat
xchg
movsl
inc
sbb
loop
jo
rcr
adc
loope
movsl
seto
insb
sbb
push
insb
ljmp
not
or
add
sbb
out
mov
paddq
mov
cmp
mov
xor
loope
cmp
adc
ja
or
outsl
sub
out
lret
test
lods
or
int
sub
xchg
mov
push
pop
mov
loop
movdqu
int
dec
fs
dec
or
fsub
mov
js
mov
scas
pop
std
dec
jle
inc
pop
pminub
cmp
mov
xor
or
xchg
movsl
dec
jns,pn
popa
xchg
jne
adc
dec
mov
out
pop
cwtl
or
sbb
or
stos
dec
in
inc
jl
bound
push
push
fbld
daa
stos
arpl
jb
loop
add
jns
mov
inc
idivl
mul
xor
inc
mov
cmp
add
clc
fnstenv
rorl
and
shl
push
add
mov
ret
cmpsb
in
fsubl
fcmovu
pusha
xchg
xor
xchg
xchg
xchg
inc
fsts
cmp
jg
bound
mov
in
pop
inc
rclb
push
rclb
gs
xchg
dec
shlb
push
sbb
aam
mov
jecxz
cmc
fsub
push
cli
cwtl
sbb
test
fldenv
aad
cmp
and
cltd
pop
lahf
dec
jae
imul
cmp
lahf
gs
add
jmp
push
cmp
cwtl
jb
nop
jae
test
cld
or
mov
daa
jg
adc
ror
iret
lds
test
inc
pop
sub
ljmp
jp
mov
xor
push
popf
mov
insb
in
cli
push
add
jo
loopne
imul
shrl
ficompl
xchg
sub
inc
or
xchg
dec
popa
sub
andb
nop
iret
cs
dec
and
push
sahf
rcrb
js
mov
mov
push
xor
pop
lods
add
ss
inc
cmp
cmc
clc
fsubl
mov
fdivrl
dec
sub
lret
add
icebp
fldt
push
sub
push
aad
sbb
dec
mov
mov
std
sar
xor
sti
or
testb
sti
xchg
mov
int3
daa
addb
jb
out
adc
lahf
mov
mov
xlat
jbe
jg
add
pop
movsl
adc
fwait
rorb
insl
les
test
sbb
and
mov
jle
imul
ja
sbb
sbb
cmp
int3
sbb
inc
push
or
repz
ret
pop
fcoml
leave
jae
outsl
sbb
pop
imul
mov
xor
mov
leave
xchg
ja
mov
dec
dec
xor
incb
pop
rcrl
ds
cmpl
movsl
bound
dec
sub
jae
mov
cmp
nop
mov
adc
mov
xor
xchg
out
or
ja
mov
ret
xchg
ret
xchg
xor
iret
jmp
bound
aam
lret
push
sub
xchg
jl
jle
and
push
fsubp
out
cltd
dec
xchg
and
adc
repnz
pop
aas
cltd
xor
sbb
hlt
pop
or
mov
mov
mov
mov
or
iret
mov
dec
cmp
cmp
cmp
jnp
or
leave
popf
push
pop
pop
sub
mov
push
rorb
iret
and
int
jecxz
pop
pop
mov
push
ret
mov
cmp
outsl
cltd
inc
aad
adc
and
aaa
xchg
jnp
sub
sbb
jne
movsb
in
loop
adc
push
pop
movsl
stos
pop
test
pusha
sbb
das
inc
pop
and
add
mov
loop
mov
push
inc
in
pop
movsb
mov
sbb
dec
or
mov
test
sub
lds
adc
mov
cmp
push
sbb
xor
push
insb
dec
scas
lock
fwait
lea
add
clc
sarb
jae
mov
das
sbb
adc
inc
bound
lcall
add
cmc
mov
xchg
jae
fildl
std
adc
cli
fidivl
test
repnz
cli
scas
test
or
inc
pushaw
mov
mov
fdivs
mov
jge
mov
rclb
lods
shrb
sbb
sbb
ror
pop
sbb
mov
xor
stos
fildl
jns,pn
mov
and
data16
rcll
fwait
sti
pop
test
cld
insl
lds
and
mov
xor
ja
mov
shll
inc
mov
sub
insl
icebp
in
lock
push
inc
lods
outsl
add
inc
nop
jbe
popa
lods
rcr
inc
pop
jae
jno
xchg
xor
or
cmp
adcl
lds
jbe
idiv
cmp
popa
in
xor
ss
push
and
or
in
add
xchg
fs
fsts
pop
punpcklbw
sub
pop
jae
in
call
push
push
sti
jmp
pushf
fnstenv
stos
fdivrp
test
push
cli
push
mov
lods
in
mov
mov
xchg
dec
push
pop
scas
mov
mov
int3
pop
xor
sbb
cmp
mov
mov
dec
mov
cmp
pushf
inc
adc
test
cmp
ljmp
enter
test
or
add
icebp
sahf
pop
dec
mov
dec
fistl
mov
aaa
and
and
addr16
dec
mov
pop
cmpsb
xor
bound
mov
idiv
ss
mov
adc
add
movsb
inc
lods
push
or
movb
js
and
outsl
cmc
roll
dec
sarb
mov
fdivs
and
xor
scas
in
insb
pop
jne
xchg
stos
jl
jnp
jmp
cmp
and
and
ja
mov
pop
mov
lods
insl
mov
push
movsb
mov
mov
rolb
mov
jmp
out
pushf
mov
adc
out
test
xchg
jle
jno
pusha
add
mov
xchg
dec
ror
in
and
shrl
shlb
jmp
addl
sbb
push
inc
jne
sub
jg
adc
mov
cmpsl
loopne
ljmp
push
sbb
lea
pop
clc
jp
std
jo
je
repnz
sub
daa
js
rolb
pop
jp
jg
outsl
stc
push
jo
fisttpl
mov
btc
xchg
fs
sbb
andl
xchg
push
mov
lret
xchg
pop
lds
mov
dec
pop
add
cwtl
ret
in
ss
push
or
sbb
mulb
fisttpll
aaa
test
fbstp
push
mov
dec
push
xor
cmpsb
push
hlt
add
rclb
es
mov
jb
adcl
fcoml
dec
cmpsb
mov
adc
es
test
mov
popf
ret
mov
mov
loopne
pushf
dec
push
les
xor
push
add
sub
addl
jg
ss
int
jg
cmp
fmulp
mov
mov
or
test
scas
pusha
and
xor
sti
mov
cmpsl
push
pop
mov
jle
mov
add
xor
insl
cmpsb
subb
icebp
in
mov
pop
stc
dec
pop
pusha
js
push
mov
xor
sub
or
pop
inc
mov
data16
adc
in
ret
popf
lahf
nop
jb
aad
addr16
add
jl
ljmp
and
jge
out
jle
insb
mov
and
mov
push
push
jge
dec
sti
leave
xorb
popa
in
jl
sbb
dec
fs
pop
pop
jae
inc
add
movsb
add
lcall
nop
jecxz
sbb
aas
scas
sbb
imul
or
dec
out
inc
sbb
test
jbe
lret
pop
mov
fildl
es
mov
jp
sub
mov
std
jo
pushf
xchg
fstps
aaa
mov
xchg
xor
inc
dec
push
dec
add
fsubs
mov
xchg
jecxz
xor
inc
jp
xor
icebp
mov
clc
into
ret
cmp
dec
in
or
das
xor
ja
lds
sbb
jecxz
mov
js
loope
xchg
xchg
jno
or
fdiv
and
repnz
outsl
data16
mov
and
mov
xchg
addr16
js
mov
fidivl
mov
xor
xchg
out
push
insl
in
lahf
inc
xchg
jne
fstl
sub
sub
arpl
fcompl
popa
sub
repnz
nop
xchg
add
and
test
adc
bnd
mull
incl
inc
pop
fwait
xchg
pop
out
cmpsb
xor
mov
mov
pop
sub
dec
pop
not
imul
inc
nop
jbe
stos
lret
mov
cmp
test
adc
pop
jp
cwtl
repnz
mov
mov
sti
pushf
addb
outsl
or
test
mov
cmp
mov
mov
movsb
lea
test
in
sub
popa
mov
je
mov
dec
dec
ss
pop
adc
push
cld
out
cwtl
jbe
insb
push
jmp
cld
into
loop
pmulhuw
outsl
clc
aam
push
push
jge
push
sub
inc
shlb
xchg
mov
in
xchg
xor
sub
stc
inc
aaa
cmp
inc
testl
jmp
arpl
div
or
fimuls
data16
pop
mov
add
clc
cmp
pop
pushf
mov
mov
xchg
pusha
adc
inc
mov
or
push
lret
into
scas
ss
fisttps
dec
xchg
stos
push
xchg
dec
mov
mov
mov
ret
outsl
jnp
dec
out
xor
outsb
stos
call
dec
pop
add
pusha
push
xchg
pop
cmp
jno
jecxz
push
and
rolb
add
jl
lods
cltd
inc
imul
xchg
xchg
and
mov
jno
xchg
shl
fildll
dec
xchg
add
iret
jns
sub
and
inc
jge
add
jnp
pushf
push
push
out
cmp
xor
xchg
das
std
bound
mov
xor
or
add
mov
sti
int
std
iret
push
jb
hlt
mov
push
mov
xchg
xchg
and
push
or
test
mov
cwtl
xchg
lea
mov
jne
sbb
jnp
insb
mov
xchg
adc
mov
jg
inc
add
jge
imul
enter
or
pop
int
lds
cli
leave
or
mov
aaa
add
sub
push
in
mov
movsl
scas
push
push
fdivr
inc
outsl
fbld
daa
and
scas
iret
mov
push
test
mov
pop
sbb
jo
out
sbb
push
incb
lcall
cmp
jl,pt
jge
mov
pop
or
mov
aad
lcall
sarl
or
fs
add
adc
mov
pop
test
fcomi
lahf
sbb
jnp
sbb
or
and
lcall
and
dec
mov
adc
or
pop
pusha
mov
push
inc
hlt
cs
cltd
lods
xlat
sarl
icebp
pop
cmpsb
or
sub
stos
or
scas
fstps
jo
iret
cmp
mov
dec
mov
ficoml
cli
sahf
out
arpl
jbe
and
clc
jmp
in
pop
enter
pop
sbb
cs
scas
push
outsl
pop
cmpsb
xchg
xlat
testl
shrb
mov
pop
out
pop
cmc
test
xchg
cmp
xor
hlt
mov
push
xchg
mov
pop
pop
mov
les
icebp
push
repz
pop
mov
inc
cmp
or
mov
mov
inc
mov
xchg
xchg
cmp
scas
arpl
loopne
push
cld
insl
into
sub
mov
and
pop
push
push
jae
in
mov
adc
lret
mov
sub
int3
xchg
sbb
lcall
fcomp
cmc
jl
push
imul
push
movsb
out
inc
mov
xor
lock
adc
pop
jmp
push
pop
push
push
ja
jne
jno
cmp
mov
push
lock
xchg
std
sbb
push
fldcw
fdivl
lret
and
adc
mov
inc
arpl
in
fistps
les
jp
in
xchg
inc
call
pop
stos
xor
jmp
data16
in
sahf
cs
xor
xchg
pushf
and
inc
dec
dec
inc
dec
mov
into
xchg
jae
jb
xchg
jnp
xchg
and
mov
cmp
dec
fcmovnu
xchg
test
stos
and
sub
push
cltd
xchg
jp
jne
adc
cwtl
cltd
cmp
ret
and
fs
aad
addr16
sahf
fcmovnbe
sahf
sub
dec
fcomip
dec
jno
in
std
bound
jne
inc
call
dec
push
mov
popf
jmp
out
sbb
xchg
mov
hlt
fcomps
or
mov
call
aaa
fs
push
mov
mov
imul
xchg
adc
dec
mov
xchg
loopne
cmp
adc
andl
push
mov
cmp
jbe
jmp
add
mov
push
and
repz
fadds
out
xchg
gs
out
xchg
adc
int3
xlat
scas
shlb
jb
fadds
rcll
mov
dec
jg
xor
in
push
or
rolb
adc
stos
mov
clts
push
fsubs
mov
xchg
cmpsb
pusha
and
xor
aas
icebp
scas
mov
jle
out
mov
aad
inc
mov
out
xchg
add
jp
dec
imul
add
sbb
divl
push
std
and
sbb
nop
jmp
cmp
stos
addr16
and
lods
movsb
rolb
insl
in
insl
xchg
ja
out
iret
jge
push
cmp
sarl
js
std
dec
dec
dec
cld
ja
cmp
push
xchg
enter
dec
ja
rolb
xor
pop
decl
xchg
rcr
pop
mov
xor
push
adc
insb
sub
sbb
lahf
into
add
stos
or
mov
add
lods
cwtl
aas
adc
xchg
call
xchg
pop
pop
es
or
fidivrs
lret
daa
mov
jle
lods
test
sub
les
mov
cmc
adc
pop
shl
aas
dec
push
aas
lods
cwtl
add
cltd
push
mov
sbb
stc
add
dec
out
xchg
jae
loope
dec
add
add
aad
add
xchg
inc
pop
inc
daa
test
xor
adc
imul
dec
fimull
xchg
mov
adc
loop
inc
or
test
inc
cmp
aas
dec
sub
sbb
sbb
fsts
dec
mov
push
sbb
jae
aad
cltd
mov
shl
sbb
cmp
jo
nop
out
jecxz
mov
adc
mov
and
in
xchg
stc
scas
jns
and
stc
stc
data16
iret
es
loopne
cvtps2pi
std
mov
jge
stc
pop
popa
mov
out
test
add
xor
adc
push
mov
sahf
inc
adc
je
sahf
daa
insl
or
stos
lcall
sub
push
aam
es
add
sub
xorl
notl
sub
jae
shrb
and
adc
loopne
leave
xchg
sarl
mov
shlb
pop
aad
cmp
lods
fildl
inc
jecxz
add
mov
jmp
push
es
pushf
jle
xor
out
arpl
sub
add
out
add
lods
mov
in
mov
lods
push
hlt
loope
add
xlat
jb
loopne
out
adc
clc
cli
pop
push
fmulp
arpl
or
or
xor
movsb
dec
pop
mov
xlat
xor
sbb
jb
adc
insb
leave
mov
xchg
jb
add
aad
xchg
leave
mov
movsb
dec
sahf
jbe
js
imul
mov
insl
sub
gs
sbb
and
inc
cmp
mov
call
out
cltd
and
mov
mov
rorl
push
xchg
adc
loope
test
out
dec
jmp
mov
mov
dec
xchg
sub
ss
or
xlat
fisubl
out
jle
adc
sbb
lods
std
jbe
jge
outsb
jp
xchg
in
mov
movl
adc
jbe
sub
and
jle
cmp
mov
loop
pusha
mov
cmc
inc
sub
sahf
lods
in
xor
fstp
xor
shlb
popf
imul
cmp
add
and
out
cmp
mov
or
fnstsw
addr16
sti
sbb
daa
pushf
loopne
cmp
out
mov
cmp
add
push
sbb
test
lahf
es
jp
cwtl
add
test
xor
lods
pushf
in
or
push
xor
add
in
dec
es
jnp
addr16
cmc
inc
dec
add
popa
inc
arpl
and
push
mov
jecxz
dec
xchg
xchg
xorb
ss
data16
orb
pop
xor
xchg
sbb
sbb
pop
jnp
inc
aas
in
movsl
test
push
push
cmp
dec
jae
pop
fwait
jo
dec
loop
aad
cs
dec
jle
divl
adc
insb
mov
bound
jo
dec
cli
out
pop
or
jge
popf
ja
xor
jbe
popa
dec
aam
and
adc
pushl
adc
in
data16
insb
xor
pusha
jmp
add
in
sahf
ss
je
cmp
int
and
les
and
sub
dec
adcl
mov
jle
rcr
int3
mov
dec
mov
mov
pop
pop
pop
mov
jb,pn
cmp
add
ljmp
les
and
out
adc
mov
xor
mov
lods
cmp
sub
adc
lahf
push
mov
std
jne
in
push
cmpsl
in
cmp
push
mov
mov
push
test
rclb
lcall
popa
mov
push
daa
jge
inc
mov
stos
les
dec
jnp
lea
in
lcall
mov
arpl
pop
sub
sbb
adc
pop
shl
aad
jg
xchg
xor
push
lcall
mov
test
xchg
pop
mov
int3
or
add
cwtl
cltd
dec
jge
cmp
inc
jp
sub
aaa
lds
jo
bound
jae
or
sub
test
push
push
mov
mov
jecxz
push
cmovl
lods
aad
push
daa
imul
fisubl
mov
adc
bound
andl
fmull
scas
pop
mov
je
iret
cmc
or
ds
pop
sbb
or
push
push
inc
add
mov
adc
cmp
scas
stos
dec
test
mov
or
cmc
fstl
push
cli
and
into
hlt
movsl
sub
imul
js
mov
rcll
daa
loopne
mov
loopne
lods
loop
sarb
enter
mov
push
aam
gs
lahf
mov
je
lock
mov
lea
test
push
lea
je
fistps
mov
ret
daa
add
test
test
xor
shrb
xor
movsb
mov
mov
ds
add
and
adc
sti
loope
or
in
lret
and
mov
add
push
shl
cmp
jp
mov
cs
jl
icebp
adcb
insl
dec
repnz
inc
popl
das
hlt
lods
inc
lret
xchg
push
jecxz
lds
lcall
movsb
mov
jbe
lret
jle
inc
es
testl
xlat
jmp
movsl
cmp
aaa
and
int3
sbb
and
dec
in
mov
mov
mov
imul
arpl
lret
mov
mov
loope
xlat
pop
or
mov
lods
push
out
adc
lahf
jmp
and
sarb
testb
outsb
jmp
in
in
mov
sar
adc
sub
xchg
xchg
jle
sub
and
inc
inc
int
ds
mov
mov
out
sarb
dec
cmp
add
enter
int
jmp
in
mov
push
scas
std
xor
adc
xchg
shr
mov
roll
rorb
je
sbb
lcall
fisttpll
push
iret
push
jl,pt
cltd
std
jno
jbe
insl
xor
push
gs
cmpl
sbb
push
sbb
pop
in
jns
inc
shll
lahf
jmp
push
mov
push
das
pop
fldt
test
icebp
or
fidivrs
aaa
mov
rorb
jne
out
lock
sub
sbb
push
dec
negb
loopnew
aas
mov
cmp
ret
push
add
xor
lods
mov
sub
sbb
popf
lea
inc
pop
inc
in
sub
movsb
cmp
adc
lahf
mov
orb
mov
leave
rcll
leave
jbe
fistpll
and
and
shr
ljmp
fidivs
inc
xor
xchg
dec
shll
mov
adc
sbb
jle
movsl
je
jmp
push
pushf
lods
test
ljmp
fwait
scas
mov
insl
cs
sahf
call
add
pusha
or
cmp
out
ds
fsub
sub
pop
cmpsb
lahf
popa
std
inc
and
sbb
pop
ret
pop
sub
lahf
cmp
incb
pop
xor
adc
lret
insb
pop
cmp
mov
cmp
and
movsb
rcll
push
or
int3
jge
icebp
sbb
pop
inc
add
pop
push
idivl
inc
daa
sub
lcall
test
xchg
icebp
sbb
movsl
add
push
pop
sub
add
jno
or
sbb
sub
jne
js
dec
pop
lock
jnp
rolb
xor
gs
and
mov
test
fdivrs
rcrl
aaa
push
or
xchg
push
fisubs
cwtl
cmc
or
dec
add
movsb
stc
add
lods
mov
repnz
inc
inc
xchg
mov
push
pusha
push
cmp
mov
mov
push
std
jae
fdivrl
adc
jnp
fidivrl
inc
add
arpl
fldt
fiaddl
pop
ret
cltd
aas
cmpsb
pop
mov
int
inc
roll
pop
out
in
sbb
xor
cmpl
scas
mov
fcmove
xchg
and
lcall
rcrl
push
fnstsw
xlat
xor
ss
in
xchg
cmp
aaa
inc
fwait
jns
faddl
cmp
mov
sbb
push
push
sub
sub
sub
ret
pushf
sub
mov
push
cmp
or
mov
movb
xchg
inc
aaa
fdivs
movsb
adc
enter
test
lret
xor
cmp
or
js
fcomps
aas
mov
leave
lods
sub
sbb
dec
cli
data16
mov
cmpsl
fucom
pop
add
ffreep
mov
inc
fisubs
cwtl
test
andl
clc
cli
out
nop
add
fcompl
xor
and
dec
push
adc
in
shrl
push
imul
sarb
das
popl
pop
jne
push
ljmp
mov
jbe
data16
rcrl
jne
cld
xor
mov
mov
hlt
loop
jbe
sub
jo
or
pop
jp
adc
sbb
cmp
movsl
jnp
sbb
popa
hlt
or
arpl
sbb
push
rolb
adc
push
test
in
jno
out
mov
mov
xchg
stos
call
mov
mov
sbb
fnstenv
xchg
xor
aas
pop
bound
dec
mov
push
or
pop
jle
sbb
mov
add
lret
push
leave
sub
js
mov
jb
pusha
pop
cwtl
adc
mov
aam
adcb
cmc
adc
push
pop
js
je
pop
or
loop
sahf
jne
mov
pop
repnz
mov
je
adc
adc
and
mov
dec
inc
mov
jecxz
arpl
mov
dec
ja
out
int
jmp
insl
sarl
fs
es
es
inc
jbe
in
pop
je
fsubrs
xor
ret
out
pop
das
mov
mov
mov
filds
jl
insl
ret
and
pop
addl
pusha
fs
sti
dec
pushf
mov
fsub
andb
inc
xchg
xor
fsubr
dec
pop
inc
repnz
mov
test
or
sbb
cmp
test
jae
dec
adc
popf
outsl
mov
add
sbb
dec
les
jmp
mov
sub
sti
jne
call
push
mov
jae
sub
and
pushf
inc
cmpsb
xor
sub
mov
ss
mov
movsb
pop
les
fistl
in
dec
add
xchg
stos
insl
std
jmp
add
fstl
aad
push
mov
inc
int
stos
xor
repnz
cmp
bound
pop
jnp
sbb
les
pop
sub
mov
sti
outsl
nop
lea
xor
jmp
ret
ret
rcll
data16
nop
sub
push
lret
mov
aam
push
and
pop
adc
shlb
and
lods
fdivs
jb
lods
in
scas
test
dec
les
jnp
cmp
add
fcompl
jg
nop
xchg
hlt
test
or
loopne
loopne
out
and
jae
pop
loope
jb
mov
lods
and
push
aas
call
sbb
jns
repnz
cmp
int3
cmp
jnp
imul
push
shlb
cmpsb
repz
push
push
loop
outsl
push
add
out
jl
fcmovne
insl
fwait
lods
aaa
gs
jge
fsts
cmp
lock
aam
iret
fistl
insl
or
mov
xlat
in
cmp
sub
aaa
icebp
sub
dec
orl
popa
in
cmp
in
xchg
ret
mov
test
shl
mov
pop
mov
lock
fildll
sub
subb
shrl
out
jle
lock
jns
stc
push
xchg
out
repz
and
xor
inc
stos
fcompl
dec
xor
add
add
sti
adc
lcall
dec
outsb
mov
pop
mov
mov
push
stos
mov
pop
outsb
and
xor
test
ret
leave
popf
mov
fnsave
push
mov
jb
fmuls
xacquire
stos
mov
pop
ljmp
in
dec
add
shlb
add
mov
fsts
scas
mov
dec
pop
cmp
mov
jo
pop
sub
xor
ret
outsl
sbb
push
cmpsl
mov
fmuls
add
dec
sahf
xchg
cwtl
sbb
cmp
daa
cwtl
cmp
jno
push
push
inc
enter
notl
or
jge
mov
call
arpl
adc
add
cmp
jl
shrl
jae
inc
mov
fildl
add
lret
int3
push
pop
inc
sub
or
ja
push
inc
xor
outsb
dec
and
movsl
rcpps
push
mov
sbb
mov
or
lea
imul
mov
lods
mov
sti
pop
push
pop
sbb
aad
pop
xor
add
xor
jns
jo
dec
jae
les
inc
xchg
in
xor
pop
outsl
push
mov
pop
imul
mov
addr16
jmp
and
stos
inc
add
mov
gs
add
jmp
fwait
inc
or
jnp
jae
pop
mov
sbb
popf
repnz
cmp
push
bound
out
out
enter
push
dec
sbb
push
pop
sub
std
sub
iret
test
sti
push
out
xchg
in
xchg
mov
or
insb
mov
popw
outsb
fnstsw
jns
sub
mov
sub
mov
je,pt
aas
pop
jmp
mov
xchg
cmc
cmc
mov
and
mov
insl
adc
xor
test
in
jno
push
jne
test
shrd
cmp
or
dec
cmp
sub
push
shl
in
or
sub
js
out
jnp
cmp
mov
push
subb
jbe
mov
xchg
or
sbb
ret
aaa
int
daa
jne
add
or
mov
inc
popf
sub
pop
sti
scas
cmpsl
and
jl
lock
pandn
push
ret
push
jge
mov
sub
ss
and
dec
inc
sbb
roll
push
push
fldt
cs
xlat
lret
pusha
jp
and
test
rcr
xlat
mov
pop
outsb
icebp
ss
cli
iret
cli
inc
inc
testl
mov
push
cmpsl
arpl
push
js
sub
fists
sbb
or
sarb
repnz
dec
out
arpl
dec
and
es
push
adc
inc
pop
bound
mov
call
pusha
out
mov
push
loopne
in
sub
xchg
fists
js
fmulp
push
shl
add
jle
icebp
sarl
mov
cmpsb
and
jl
mov
ds
bound
push
pusha
loope
pushf
jno
fldenv
ja
lods
ret
xchg
icebp
loopne
movsl
mov
loopne
mov
and
inc
inc
sbbb
clc
dec
aad
and
xchg
sub
mov
aas
adc
pop
out
xchg
cs
xor
add
das
dec
int
mov
xchg
mov
xor
imul
test
mov
insl
imul
ja
push
adc
xchg
and
lods
bound
orb
repnz
cwtl
sub
int3
js
dec
pop
scas
adc
pusha
pop
mov
fsubs
or
in
loop
pop
mov
mov
lret
arpl
je
lcall
out
xchg
jecxz
shrl
out
xchg
add
mov
call
cmp
dec
call
dec
xchg
lods
addr16
jno
icebp
mov
rcr
icebp
insb
mov
xchg
mov
cmp
je
xchg
push
pop
cmpsl
neg
push
rcrb
icebp
sbb
fimuls
add
add
dec
into
imul
ja
roll
mov
lret
movsb
andl
int3
jns
test
jb
inc
dec
in
add
shll
test
in
xorb
and
addr16
call
lret
daa
negb
lea
fs
andl
mov
or
and
daa
xor
cmp
mov
loope
mov
lods
push
xchg
pop
push
jmp
push
mov
or
test
push
lods
push
ret
or
ret
jbe
sub
mov
mov
out
fldt
sub
outsb
xchg
in
daa
pop
sub
adc
fmulp
shrl
or
xor
mov
mov
aam
movd
xor
inc
pushf
and
cmp
hlt
jge
movsl
out
jo
data16
dec
mov
leave
xor
jbe
rorb
out
not
sub
movsl
sub
push
mov
test
pusha
shl
push
mov
add
mov
pop
inc
insl
mov
les
push
add
loop
das
push
or
jbe
inc
mov
add
cmp
cmpsb
xlat
mov
jmp
cwtl
imul
dec
ret
push
push
mov
ljmp
loope
adc
ss
adc
lret
inc
inc
xchg
jecxz
loope
out
cltd
icebp
repnz
insl
dec
jp
jge
rcrb
pop
bound
into
addr16
inc
insl
negb
gs
inc
mov
cmp
stc
xchg
repz
mov
scas
sub
loope
das
movsb
jle
mov
cmp
sbbb
mov
loope
inc
xorb
enter
rorb
enter
pop
jp
pop
out
mov
adc
xchg
mov
sbb
shlb
into
sub
mov
mov
mov
sbb
movups
in
test
adc
in
dec
out
daa
sub
out
sbb
pop
push
push
enter
and
sbb
xor
and
xchg
xor
out
dec
cmpl
mov
cli
jp
in
dec
pop
mov
mov
fcmovnu
fs
gs
hlt
subl
dec
jno
xchg
sub
iret
pop
incb
out
dec
push
and
jge
aad
and
xor
add
mov
xor
sti
pop
outsl
dec
dec
lret
cmp
sbb
push
inc
insl
out
cmovns
enter
sbb
adcl
incb
xor
rol
mov
jno
aaa
stc
or
xor
sub
lahf
fadds
mov
gs
mov
pushf
dec
or
push
imul
inc
xchg
inc
leave
gs
sbb
outsb
cld
cli
test
and
pop
test
pop
xchg
mov
enter
jne
xor
mov
movsl
jg
add
int
mov
sub
lea
lahf
lahf
shlb
insb
mov
in
mov
lret
dec
mov
out
jns
or
add
stos
outsb
xchg
jno
jae
sbb
inc
sti
jg
in
movsl
pop
repnz
pop
mov
imul
imulb
fdivrs
leave
clc
sbb
jp
lods
fisttpl
aaa
shll
clc
xor
cli
call
clc
xor
mov
mov
test
in
fidivs
scas
inc
dec
sti
sub
aas
push
mov
sub
sub
jle
ret
adcl
jle
shr
inc
lock
es
mov
pusha
mov
pop
out
jp
pop
fdivrs
jnp
dec
mov
mov
and
cmp
sbb
andl
or
int3
movsb
push
dec
ret
adc
sbb
cmp
int3
mov
pop
mov
sti
jecxz
cmp
nop
rclb
jle
repnz
or
xor
xchg
jle
test
pop
push
jbe
cld
sub
dec
mov
inc
add
or
ljmp
xor
cmp
inc
jae
dec
out
mov
push
loope
outsl
sbb
add
mov
les
rcr
cmp
pop
pop
push
fmull
jo
aas
rcr
cmp
test
push
pop
xor
jb,pn
lret
mov
loopne
and
push
or
mov
pop
mov
ja
and
out
cmp
and
and
je
out
push
jge
out
aam
movsl
pop
push
pop
dec
push
xor
pop
push
cmp
shrb
mov
cmp
mov
add
pop
setno
jno
mov
cli
movb
pop
int3
outsb
add
shlb
jp
mov
mov
add
xchg
cli
aaa
inc
testb
adc
push
and
push
imul
pop
outsl
mov
and
dec
mov
icebp
push
dec
xor
pop
in
pop
adc
add
movsl
push
cmpsb
mov
ret
xchg
inc
sbb
push
dec
xchg
sti
sbb
and
out
gs
pop
test
mov
aad
sub
adc
stos
pushf
ljmp
shrb
ljmp
aas
popa
pop
pop
or
dec
mov
sbb
pop
test
dec
ljmp
push
xchg
loopne
push
pop
data16
lahf
fimull
mov
stc
les
inc
pop
dec
rcl
push
push
adc
or
rorb
subb
sarl
aad
imul
xchg
mov
fwait
mov
sahf
push
popf
inc
add
adc
xchg
ret
lret
enter
cwtl
add
lods
hlt
push
push
push
adc
mov
push
push
jl
adc
fsubs
aam
mov
int
cmp
jnp
xorb
push
inc
lds
into
and
mov
addr16
jmp
cmpsl
inc
mov
fcmovnbe
outsb
movsl
sub
out
mov
cld
inc
inc
pop
repz
dec
push
xor
imul
push
cmp
or
mov
nop
jns
xchg
push
jecxz
ljmp
scas
jmp
ret
test
cltd
and
or
pop
sbb
and
push
in
sub
jbe
or
mov
scas
outsb
inc
bound
xchg
mov
incl
push
outsb
ret
sbb
pusha
adc
lret
xor
xchg
fnstsw
jecxz
cltd
add
mov
fistpll
das
orl
lea
js
xor
xchg
sti
test
xchg
mov
lods
and
mov
lds
add
xor
loope
jg
jmp
sub
or
stos
adc
mov
test
lds
xor
je
adc
aaa
mov
xchg
dec
fildl
test
js
cmp
xor
daa
neg
cmp
gs
sub
ljmp
mov
rorl
pop
mov
movsl
jp
mov
mov
or
jnp
xor
fists
das
imul
mov
push
jge
in
xor
jge
ret
mov
cltd
mov
out
mov
jae
leave
jle
lds
mov
iret
scas
sahf
push
ret
sbb
inc
mov
ret
xor
jmp
jbe
push
jecxz
mov
fwait
loope
iret
ficoms
push
mov
adc
mov
std
enter
add
cmp
adc
pushf
shrb
add
sbb
daa
push
hlt
inc
roll
insb
mov
and
aas
leave
mov
inc
std
rclb
cmp
outsb
mov
lds
dec
inc
xchg
outsl
inc
mov
adc
lret
xchg
fiaddl
xchg
sbb
scas
pop
add
sbb
xchg
je
push
add
stos
es
xor
mull
and
repnz
mov
hlt
fadd
jmp
push
pop
lds
mov
mov
mov
pop
jecxz
add
adc
loope
int
pop
cmp
aas
cs
imul
mov
stc
rorl
shll
and
fs
pop
xchg
cmp
mov
cmp
movsl
pusha
test
mov
int
push
fwait
insl
mov
fwait
mov
lcall
out
out
lods
stos
push
cltd
mov
xchg
sub
mov
adc
inc
mov
pop
sbb
lcall
sbb
xor
jg
sbb
dec
xchg
movsb
scas
dec
in
add
mov
jo
in
add
in
fsub
lret
mov
xchg
lea
add
mov
or
daa
inc
sti
inc
fs
je
aad
inc
data16
push
dec
push
xlat
in
rcrb
cmp
insb
mov
mov
cld
pop
cmp
int3
out
inc
pop
xor
stos
mov
and
xor
fsts
xchg
push
insb
jle
addb
orb
add
imul
mov
rorl
in
jnp
xor
sarb
test
or
push
sub
inc
push
sbb
fucomi
ds
insl
je
jge
jmp
decl
push
pusha
popa
ja
pop
mov
fisttpll
ljmp
scas
or
jecxz
cmp
mov
repz
add
add
pop
cs
loope
add
clc
out
out
aam
dec
mov
leave
sub
fcompl
jp
mov
leave
movsl
insb
cld
mov
jae
shrl
push
pop
sub
jmp
ja
fdivrp
movsb
lea
call
and
fldt
mov
mov
inc
and
imul
gs
jge
lods
into
xchg
fisttpll
jg
adc
cld
fistpl
jge
rcrb
mov
pushf
aas
sub
rolb
fstpt
hlt
pushf
test
aad
in
jge
bound
jle
std
mov
mov
add
bound
in
mov
mov
or
sub
and
mov
ss
sbb
scas
movsl
sbb
push
ret
sbb
inc
or
ja
add
bound
adcb
cld
test
je
loopne
pop
mov
mov
xchg
or
sub
sti
xor
and
push
mov
in
cltd
and
out
mov
cli
jg
sbb
mov
inc
in
adc
pop
xor
mov
jbe
imul
xchg
shrl
xchg
sub
sbb
mov
fwait
or
and
test
sbb
push
jo
mov
ds
repz
push
cltd
mov
rorl
fwait
shrl
fadds
mov
hlt
push
mov
out
popa
cmpsb
fidivrl
jmp
js
shlb
loope
aad
loopne
in
adc
outsb
repz
mov
imul
xchg
add
mov
push
jno
jl
int3
stc
jl
xchg
fimuls
mov
sbb
pop
xor
cmp
xor
ret
adc
and
sub
mov
adc
dec
mov
test
das
in
fmuls
mov
sub
pusha
inc
jle
inc
movd
ret
jmp
xchg
loope
andl
push
dec
test
les
fwait
in
dec
orl
mov
inc
push
sbbl
call
dec
cmp
jae
add
insb
dec
pop
mov
lods
jns
cli
xchg
push
call
sub
pop
test
push
fsubrl
mov
mov
std
pusha
mov
mov
call
pop
stc
fldcw
or
sbb
sbb
mov
dec
sbb
sub
xor
pop
mov
push
les
mov
popa
insb
inc
out
icebp
test
enter
mov
lret
inc
pop
aam
sub
cmp
xchg
jbe
clc
inc
insb
adc
push
push
in
das
jecxz
or
or
movsl
adc
vcmppd
mov
fistl
cmp
incb
aas
sahf
sbb
in
sti
lret
mov
or
iret
or
lret
mov
adc
test
inc
out
aaa
ja
dec
ja
push
or
inc
int
fnsave
dec
scas
dec
push
cli
push
pop
mov
stos
popf
rolb
lahf
mov
not
adc
add
sub
dec
shll
pushf
cmpsl
out
inc
lds
jg
cmp
sarl
gs
loope
test
xorl
mov
addb
cltd
hlt
mov
xor
push
sbb
jns
pusha
jnp
jo
cmpsl
cmp
insl
inc
adc
xchg
movsl
cmp
sub
lods
adc
adc
clc
outsl
repnz
stos
testl
xchg
cmp
xor
movsl
inc
push
mov
punpcklwd
xor
cmpsl
shrl
mov
push
xor
push
imul
push
push
xchg
mov
in
outsb
sub
push
cmp
dec
push
push
cmp
push
pop
adc
icebp
sub
push
mov
cli
dec
mov
jns
test
ljmp
xchg
pop
mov
popa
into
clc
cmpsl
fmul
adc
enter
decl
dec
xor
push
iret
movsb
jge
mov
adc
lahf
int
outsb
stc
adc
fstp
add
std
lahf
xchg
scas
out
out
fs
xchg
or
out
or
in
shll
jno
or
popf
addb
mov
sbb
fucomip
lea
rcrb
arpl
icebp
mov
mov
loope
sbb
dec
in
add
jle
push
cltd
sarb
ret
dec
push
mov
orb
insb
stos
pop
iret
push
mov
push
xchg
mov
adc
nop
arpl
lods
pop
inc
dec
cmp
add
or
xchg
sbbl
adc
pop
or
aad
mov
push
xchg
sub
hlt
lcall
lods
imul
pop
mov
and
jnp
and
lods
dec
pushf
aam
call
cli
xchg
push
add
jns
mov
sub
xor
add
std
cmc
repnz
cmpsl
jno
je
fisttps
pop
mov
dec
repnz
ja
scas
xlat
addl
or
enter
xor
pushf
iret
lods
popa
jns
xchg
data16
mov
mov
and
mov
aam
insb
pop
mov
inc
outsb
mov
stos
mov
test
addr16
xor
loop
jmp
pop
lret
jmp
repz
ljmp
pop
insl
aam
dec
xchg
cs
sbb
pop
inc
dec
xchg
fwait
pop
repnz
adc
imul
and
lea
and
scas
xchg
xor
in
pop
and
cmp
jp
js
or
lcall
pop
fwait
jno
add
ds
jmp
std
cmp
neg
scas
out
movsb
cmp
dec
sub
inc
mov
arpl
sbb
subb
mov
shrb
popf
pop
xchg
add
aad
popf
test
shll
pop
bound
js
stos
filds
mov
fwait
icebp
scas
xchg
adc
loope
dec
scas
dec
inc
and
incl
jne
cwtl
ja
xor
cmp
fwait
inc
negl
sbb
lods
insl
and
xchg
add
aas
mov
sub
mov
std
inc
loopne
xchg
cmp
sahf
xchg
mov
jge
ret
fs
out
ss
push
les
ds
cltd
outsl
jmp
ret
outsb
inc
arpl
or
in
negl
jge
adc
mov
mov
addr16
cmp
call
movsb
mov
push
dec
dec
cmpsb
or
pop
inc
in
fisttps
or
fwait
repnz
enter
cwtl
fsubrl
imul
sar
das
shlb
sbb
adc
sbb
pop
out
mov
push
icebp
rclb
ja
dec
mov
xor
out
aaa
dec
aas
and
gs
jae
lret
or
push
lret
mov
mov
cwtd
pop
bound
ret
aam
or
jns
xchg
insl
dec
mov
sbb
sub
mov
leave
ja
xchg
add
pop
aaa
inc
in
add
mov
push
mov
clc
int3
sbb
adc
clc
sub
fmuls
mov
in
xchg
adc
repnz
mov
cmp
cmp
mov
fistl
imul
ljmp
insl
popa
ds
in
movsb
ds
sub
push
insb
ret
gs
bound
aam
stos
sbb
sub
out
push
test
pop
mov
ss
sahf
pop
fildll
dec
and
lods
lods
mov
lods
or
adc
das
xor
jl
bnd
lcall
scas
mov
aaa
mov
sahf
cs
inc
add
notl
enter
push
xchg
jns
jmp
mov
mov
clc
test
sbb
adc
jmp
push
xor
mov
stos
in
xchg
pop
out
shl
loop
mov
pop
xor
dec
ja
mov
ds
imul
fisttps
stc
jno
sub
es
aam
bound
icebp
cwtl
jb
aaa
jp
enter
push
outsl
adc
mov
mov
sbbb
jp
int
mov
dec
daa
mov
cmc
lcall
inc
daa
mov
inc
int3
andl
and
mov
outsb
lea
cmpsb
xchg
jle
xchg
aaa
imul
push
lods
insb
and
jae
sbb
aad
outsb
stos
pop
mov
ja
add
call
fdivs
push
jl
es
jns
flds
inc
pop
je
jne
push
movsl
or
rorw
lcall
push
push
mov
mov
sahf
lock
in
jae
push
and
sub
mov
int3
cmpl
addr16
cmp
mov
dec
addr16
popf
jmp
roll
iret
out
rorl
orb
out
or
imul
cmpsb
mov
cmpb
outsb
out
push
add
ja
add
dec
in
pushf
jmp
mov
aam
in
pushf
mov
sarb
inc
arpl
stc
pop
sahf
sbb
push
push
mov
jo
xchg
enter
pop
and
cmpsl
insb
pop
popf
lea
dec
or
jl
mov
and
filds
rclb
sbb
ja
aad
scas
lcall
push
repnz
pusha
repnz
jb
aaa
shrl
xchg
push
adc
incl
ret
cwtl
jne
cltd
dec
add
testb
pop
shll
je
push
fsubrs
cmpsb
push
xor
int3
inc
js
sahf
fidivl
push
dec
not
imul
mov
js
aam
ja
fsubrs
sbb
call
lahf
aad
dec
mov
push
cwtl
or
jg
lahf
lods
sub
cmc
cmpsb
popf
iret
push
leave
outsb
in
stc
enter
cmpsb
leave
adc
mov
push
les
scas
incl
mov
cld
and
cmp
mov
ljmp
dec
out
jge
rol
ds
out
lds
inc
adc
pop
cmpsb
mov
hlt
pop
data16
lods
dec
sbb
std
cwtl
pop
xchg
mov
dec
pusha
push
mov
lock
xchg
cmpl
mov
adc
jl
xor
push
rcl
fidivrs
ss
inc
jmp
stos
out
inc
pop
rcrb
add
jge
stos
ljmp
mov
dec
mov
cmp
rclb
mov
and
add
jl
cmc
mov
aam
ljmp
fimuls
sub
out
push
sbb
adc
jnp
mov
mov
push
inc
mov
dec
dec
mov
or
cmpsb
mov
jo
repnz
jl
repz
outsb
jne
stos
mov
dec
add
mov
push
or
sbb
imul
jb
repz
and
mov
clc
cmpsb
movsb
pop
inc
adcb
leave
sbbl
sbb
ror
aam
adc
mov
push
cmp
mov
scas
mov
adc
sub
xor
aad
push
ss
xor
cmp
sbb
fstl
jp
cli
mov
cmp
out
fxch
add
insl
fidivrl
popf
test
push
mov
adc
push
pop
cltd
in
dec
pusha
xrelease
shrb
inc
mov
push
les
movsl
shr
call
dec
mov
push
push
cmp
fsubrl
pop
push
stc
pushf
and
sbb
cmp
xor
stc
imul
enter
aaa
mov
fimull
scas
ss
bound
push
divl
adc
repnz
les
in
and
mov
pop
aad
xor
xchg
shll
ds
inc
jae
inc
leave
mov
mov
loope
lock
and
fmuls
pop
push
xor
shrb
sbb
pop
shr
xchg
in
mov
add
enter
adc
add
into
xor
fs
cmp
mov
jg
push
add
sub
cltd
pusha
add
mov
xchg
arpl
ror
sub
out
push
gs
jb
add
insb
xchg
mov
cmp
pop
in
jbe
fisttpll
sbb
and
mov
cwtl
sti
rorl
imul
outsb
inc
dec
mov
nop
xchg
xor
popa
dec
sub
jecxz
clc
xor
gs
jg
imul
ljmp
or
sbb
xlat
cmp
cmp
imul
pop
inc
imul
imul
push
adcb
out
sbb
pop
idivb
pop
cmp
push
cmpsb
jge
cmpsl
andb
js
push
les
adc
pushf
push
cmpsl
xchg
sbb
ds
sahf
xorl
cmp
sub
fwait
fs
push
cmp
xchg
lods
andl
push
jecxz
sbb
scas
mov
adc
sbb
int
xchg
stos
mov
cmp
inc
xchg
icebp
int
scas
adc
jp
and
jmp
push
mov
gs
in
adc
andl
frstor
add
imull
aam
xacquire
push
and
out
add
hlt
add
push
mov
lret
adc
adc
es
dec
jo
inc
imul
ja
fwait
inc
cmc
shrl
vpaddsw
mov
daa
movntq
pop
jns
stos
xor
or
adc
movsb
addr16
scas
enter
mov
inc
jns
shrb
sub
jle
hlt
stos
ret
lock
sbb
mov
lret
lods
mov
repnz
in
in
add
mov
mov
sbb
jb
mov
dec
or
sbb
shll
or
cmp
fsub
mov
stc
ret
or
loop
popf
sub
dec
or
cld
scas
xorb
mov
mov
iret
or
hlt
aas
lahf
push
sbb
pushf
cmp
arpl
call
cltd
xchg
xchg
inc
insb
subb
push
dec
add
sub
jp
pop
aam
je
cmp
xchg
mov
loop
sbb
jb
sbb
aam
lret
in
xchg
cmp
jbe
fs
int
add
add
adcl
outsl
into
adcb
fstps
test
cmp
inc
cmpsl
mov
test
and
jbe
lahf
xchg
mov
in
dec
push
push
out
subb
clc
mov
insl
gs
add
adc
cli
push
push
push
lahf
mov
notb
dec
lock
lods
in
mov
mov
sti
or
pop
jmp
xchg
sti
adc
je
mov
popf
movsb
les
fcompl
int3
leave
loopne
inc
dec
mov
shrl
mov
push
cmpsb
jae
lock
jno
pop
inc
stos
push
pop
fisttpl
decb
sbb
fsubs
and
xchg
mov
loop
fcompl
enter
fmul
lea
icebp
fs
push
or
or
add
sub
and
dec
pop
dec
outsl
int3
sbb
lcall
adc
inc
notl
mov
xchg
lea
mov
adc
cmp
ret
cld
and
mov
xor
and
and
repz
test
andl
push
sbb
outsb
pop
dec
mov
adc
pop
add
fimuls
aas
pusha
stos
cmp
insl
mov
adc
mov
test
push
sbb
nop
test
test
pop
push
pop
cmpsb
aas
adc
xchg
fs
pop
sbb
ljmp
push
cmpl
xor
inc
mov
negl
jle
out
fsts
loopne
inc
ss
push
in
ret
xlat
clc
xchg
mov
fsubl
cmp
dec
lcall
imul
imul
or
adc
cmp
aaa
fidivs
ficomps
lret
inc
pop
shrb
mov
sub
add
xchg
sbb
mov
jge
clc
cltd
push
jno
movsl
add
sbb
adc
xchg
cmp
out
mov
mov
out
inc
jecxz
pop
in
stc
mov
mov
arpl
jnp
xchg
mov
iret
pop
mov
cli
data16
xchg
xor
cmp
scas
push
cmp
frstor
insb
and
fcmovne
lock
leave
pop
std
inc
test
lods
je
jl
inc
mov
mov
cmp
mov
ljmp
cmc
sbb
push
data16
rcrb
xor
scas
mov
or
addb
test
inc
cltd
xor
or
and
lock
xor
push
mov
mov
mov
or
enter
push
mov
jp
xor
or
loope
lcall
inc
inc
push
jns
mov
mov
sarb
pop
add
test
rcl
pusha
insb
mov
sbb
aam
out
push
in
lahf
mov
inc
sub
stos
and
adcl
aas
xchg
jp
aam
stc
xor
sbb
mov
xor
sbb
mov
loopne
add
cs
pop
loop
mov
ret
leave
cld
fsts
fcmovne
sub
and
pop
outsb
test
push
jp
and
jno
sub
add
adc
cmp
cld
sti
mov
test
movsl
rcrb
dec
repz
xor
or
pop
data16
repz
fbld
mov
mov
sbb
adc
cmp
pusha
je
push
push
out
into
and
mov
rcrb
xchg
cltd
push
add
lcall
and
shll
jns
testl
aam
orb
stos
aas
and
sub
sbb
test
fdivrp
mov
adc
and
and
mov
mov
fucom
data16
mov
add
icebp
jp
mov
cmp
and
into
cmp
xor
jae
pop
jge
sbb
in
ret
ds
daa
fcoms
mov
stc
inc
nopl
imul
into
add
fidivrl
xchg
lret
xchg
push
add
adc
mov
cld
cmp
pop
mov
in
std
test
dec
sti
in
cld
out
sahf
icebp
fildl
fdivl
repnz
jmp
xchg
adc
push
mov
fld
pop
push
xchg
xor
cmp
fiadds
insb
outsl
pop
xor
ret
jl
pop
and
jno
cmp
insl
sbb
pop
ja
adc
pushl
fmulp
les
cmp
fadd
stc
test
les
stc
fstpt
adc
jge
shl
or
lret
shl
shl
stos
add
xchg
jecxz
cmpsl
push
xorl
pop
lret
or
jae
push
add
dec
jmp
ret
fbld
loope
mov
repnz
xor
pop
push
mov
xchg
cmp
add
orb
paddusw
in
or
push
rcrl
sub
dec
mov
push
je
dec
rolb
shlb
and
jg
shll
in
jl
pop
and
inc
dec
gs
cmp
push
pop
stos
adc
ja
cmpsb
mov
mov
repnz
jae
adc
mov
mov
xorl
addl
imul
sub
nop
xor
sbb
enter
xor
pop
ss
xchg
movsb
add
cli
sbb
test
or
push
fdivr
inc
out
sti
push
and
aam
pop
call
daa
mov
adc
jbe
aad
sbb
cli
mov
mov
cld
mov
out
data16
xchg
xchg
cmpsb
in
cli
sub
dec
mov
lret
or
stos
cmp
out
fadds
dec
repz
stc
jns
in
sub
pop
or
cmp
das
push
mov
mov
das
push
mov
in
data16
cltd
push
dec
or
jle
cmp
adc
mov
inc
xor
icebp
inc
cld
fs
clc
dec
or
inc
adc
add
pop
out
fsts
fidivl
jp
push
add
std
je
gs
lahf
or
rorl
dec
xor
popa
pop
mov
jecxz
call
in
mov
popa
xchg
sub
dec
push
adc
sub
popa
scas
pop
loopne
pop
xchg
rorb
out
pop
xchg
mov
ljmp
jp
jg
and
dec
scas
xlat
loopne
adc
dec
or
and
xchg
or
xchg
add
cld
mov
outsb
push
dec
mov
test
mov
test
jbe
out
adc
clc
shll
lahf
fisubrs
and
fs
mov
push
sub
xchg
dec
cmpsb
cld
ss
inc
sbb
outsl
inc
push
and
adc
cmp
fs
mov
in
repz
jb
inc
adc
out
std
xchg
sub
push
cmp
dec
xchg
cltd
or
xchg
mov
dec
insl
test
clc
mov
inc
cmp
pcmpeqb
pop
cmp
sarl
dec
sbb
mov
shl
andl
jp
inc
sbb
ret
cli
pop
pushl
mov
and
bound
in
mov
std
add
insl
icebp
or
push
imul
lds
mov
leave
test
jg
je
xor
lods
dec
lock
mov
xchg
sahf
cmp
adc
popl
mov
es
cmp
mov
in
add
or
fwait
mov
push
ss
sbb
ds
out
fisubrs
mov
mov
ja
mov
jae
xor
jno
cmpsl
fs
mov
not
inc
jno
insl
loopne
lret
lahf
nop
insl
sub
jno
adc
cmp
push
xor
loopne
clc
fcompl
sahf
push
mov
and
inc
mov
add
ja
push
mov
int3
mov
push
or
sub
jg
push
test
aaa
rcl
push
outsl
inc
mov
dec
shl
das
loop
addr16
ja
push
mov
in
fisttpll
jl
mov
cmc
arpl
stos
out
inc
push
fldt
fsubrl
push
sbb
push
nop
or
xor
lds
pop
out
cwtl
xchg
push
iret
gs
pop
test
lcall
cld
and
mov
movsb
imul
mov
and
pop
repnz
mov
jmp
jo
stc
aaa
jge
push
jge
andb
pop
js
mov
out
cmp
lds
gs
fsub
jecxz,pn
jns
sbb
lods
mov
xor
shrb
adc
dec
jl
loope
mov
add
lcall
jne
repz
scas
cmp
out
repz
inc
push
push
scas
fs
nop
imul
jbe
xor
je
mov
leave
icebp
insl
sbb
sti
cld
mov
test
mov
ror
sub
mov
dec
jns
call
sub
add
mulb
out
in
xor
popf
in
aaa
xchg
xor
cltd
push
cld
repnz
mov
aad
shll
test
dec
addr16
je
or
mov
mov
inc
aam
dec
pop
in
int
xor
mov
outsl
cld
clc
stos
clc
mov
push
fadd
mov
ja
pop
xor
xchg
xchg
mov
jno
jb
stc
cmpsb
shll
lock
push
dec
and
pushf
repz
mull
inc
outsl
in
gs
sbb
loop
leave
incl
pop
cmp
popf
call
inc
push
scas
and
je
xchg
mov
jb
sti
inc
rcl
fld
mov
int3
lods
fs
cli
cwtl
dec
jg
out
cmp
lds
mov
test
test
or
jns
xor
or
out
push
add
sti
dec
push
nop
adc
movsl
leave
xchg
inc
imul
sbb
jecxz
cmc
mov
jecxz
mov
leave
js
adc
add
pop
xchg
cltd
out
int3
adc
in
adc
adc
stc
paddusw
adc
mov
out
inc
mov
adc
push
movsb
addr16
jmp
xchg
xor
fnsave
ss
mov
sbb
sti
sub
xchg
cmc
jg
cli
add
jg
aaa
mov
jne
adc
arpl
dec
add
push
add
imul
sahf
rorb
inc
in
mov
rorl
lret
arpl
dec
lret
mov
test
mov
sub
cmp
cltd
ror
push
ds
dec
lods
call
cmpsb
loop
dec
popa
loope
cmc
mov
repz
scas
jbe
mov
js
leave
lret
xlat
adc
fdiv
inc
adc
sbb
js
ljmp
pop
loope
stos
addl
xor
push
jp
cltd
jbe
cmp
pop
add
mov
xor
leave
dec
mov
sahf
xchg
dec
mov
lea
jno
xchg
dec
push
jne
fucomi
mov
xchg
sub
mov
mov
pop
enter
sbb
mov
faddp
mov
dec
add
or
ficoml
or
lcall
add
ljmp
movsb
xor
out
pop
jg
cltd
int
aam
stc
sbbl
jnp
repz
shl
mov
mov
fidivs
mov
mov
aad
negb
sbb
jg
xchg
fdiv
sti
adcb
dec
sti
sbb
rorb
dec
mov
shll
add
or
and
inc
pop
jns
es
pop
cmp
imul
cmpsl
or
xchg
out
inc
pop
outsl
xlat
pop
xor
testb
movlhps
mov
jb
test
and
mov
popf
or
mov
sub
fbld
aas
rolb
or
push
sbb
pop
push
pop
push
xor
push
movsb
push
mov
mov
call
dec
jecxz
or
mov
mov
xor
cwtl
inc
lods
push
icebp
push
jmp
adc
outsb
mov
pop
aam
es
mov
mov
outsl
mov
mov
mov
fs
mov
js
in
test
sub
or
ret
sbb
push
je
shrb
inc
and
in
loopne
int
aam
popf
jb
subl
lock
andl
insl
clc
add
aaa
stos
mov
leave
pop
imul
jg
fists
data16
and
add
imul
push
add
stos
inc
loop
cmp
push
movl
sbb
sub
xor
rcr
push
data16
pop
jg
jg
push
ds
cmp
shr
pop
xchg
scas
pop
or
xchg
jns
push
arpl
in
lcall
jb
pop
or
imull
mov
and
or
jne
stos
pop
mov
mov
jg
cmp
in
jmp
mov
push
xchg
pop
fsubl
shrb
sahf
jb
stos
mov
mov
adc
int
inc
xchg
mov
inc
decb
pop
xor
and
cmpsb
jo
ffreep
cltd
push
add
jle
push
test
lods
sub
xchg
or
dec
ds
pop
notb
into
mov
cmpl
call
xchg
jle
jb
orl
xor
push
or
out
test
outsb
in
out
sub
loopne
xor
sub
pop
mov
push
mov
jb
mov
sbb
xchg
loopne
out
pop
sahf
jle
xor
mov
mov
jp
sti
jle
iret
mov
popf
push
push
dec
cmp
pushf
xchg
mov
fs
iret
loope
or
nop
mov
push
sahf
dec
cltd
jecxz
sub
stos
fmull
sbb
fcmovnbe
and
int3
iret
popa
pop
cli
cmpsl
add
test
test
lret
roll
fnstsw
lret
leave
cmp
jb
mov
add
adc
inc
xchg
loop
decb
js
mulb
dec
inc
dec
cmp
inc
xor
inc
out
mov
sub
jmp
push
mov
enter
add
scas
jo
fs
flds
sub
push
cmp
pop
call
mov
roll
or
xchg
jge
push
sar
ljmp
adc
cwtl
adc
push
push
adc
inc
lcall
bound
mov
inc
jle
repnz
lret
js
faddl
loope,pt
or
pop
gs
sub
cld
xlat
dec
adc
sbb
fildll
xlat
sbb
scas
popl
dec
or
je
imul
sub
aad
xchg
pop
pop
sbb
in
pop
xchg
insl
popl
cmc
daa
push
shll
cwtl
jbe
in
mov
xchg
xor
int
push
outsb
fiaddl
and
sub
stos
in
or
into
adc
mov
filds
mov
dec
ljmp
cmc
pop
inc
mov
push
mov
repz
pop
pop
les
xchg
pop
adc
je
not
push
iret
sub
in
aas
add
loope
adc
fidivrl
scas
jmp
lea
dec
fs
inc
bound
aad
fwait
inc
daa
jb
into
inc
in
shl
lock
jge
sbb
das
ret
add
dec
imul
and
lcall
mov
lahf
jge
fistpll
sbb
pop
sub
xchg
cmp
mov
mov
scas
xchg
dec
in
out
les
jmp
and
xor
scas
pop
sbb
icebp
pop
ret
adc
test
leave
inc
push
fists
add
xor
add
push
jmp
inc
shlb
lds
stos
add
cmp
int
cmp
test
fstpt
out
outsb
dec
fwait
aad
mov
sub
push
mov
cs
xchg
push
mov
push
popf
push
ret
scas
outsb
xor
sahf
and
mov
sbb
mov
cwtl
xchg
or
xor
out
testb
push
cld
les
mov
and
lcall
push
mov
sahf
imul
cmp
rcll
je
cli
ljmp
cmp
mov
dec
aad
cmp
stc
xor
in
les
sbb
addr16
sbb
sub
lods
ret
dec
jns
push
pop
fwait
mov
syscall
into
je
xchg
imul
mov
xchg
test
int
dec
adc
cmp
mov
cmpsl
dec
lock
mov
xor
jb
test
js
scas
mov
fwait
icebp
sub
ja
in
pushf
mov
filds
fsubs
cli
sbb
mov
add
xchg
cld
xor
testb
inc
ss
push
popf
add
outsl
fld
cli
xchg
add
jg
je
in
cmp
aas
push
ret
out
xlat
xor
push
test
cmp
addr16
into
xchg
xor
in
sahf
imul
or
insl
stos
add
pop
insl
mov
mov
xchg
fadds
cs
loope
std
testl
daa
mov
jnp
jle
inc
pop
lock
and
andb
add
pop
xchg
fbld
mov
cld
dec
adc
xor
dec
add
add
scas
add
loope
dec
jae
jecxz
aas
pop
or
fxch
ss
jl
push
mov
loop
mov
lahf
loop
mov
ficomps
and
icebp
out
fidivrl
js
fists
add
inc
divb
insl
int3
ds
stc
je
sub
push
lret
ss
mov
rcrl
movsl
xchg
mov
jns
stos
push
jl
or
cmpsb
dec
xor
cmpxchg
xor
mov
and
adc
mov
dec
jp
sbb
cmp
cmp
sbb
dec
lods
daa
mov
inc
mov
incb
push
out
mov
mov
aam
xor
icebp
mov
cmp
or
jae
cwtl
push
stos
sbb
in
jp
cmp
mov
shrl
jne
adc
dec
std
in
add
pusha
out
scas
xor
add
lret
int
sub
jl
xor
gs
test
mov
jne
add
insb
jecxz
xchg
push
aas
cmp
xchg
idivl
pushf
les
imul
sub
arpl
fwait
clc
mov
mov
fmull
mov
xchg
or
adc
add
cld
fnstsw
dec
push
mov
mov
dec
frstor
pop
loopne
inc
jbe
testb
pop
std
mov
lds
sbb
dec
inc
scas
cld
repz
in
add
into
jae
fildl
sahf
push
iret
mov
or
jp
and
push
cwtl
sub
mov
icebp
push
rcr
push
mov
insb
xor
aas
popf
imul
faddp
lds
mov
jecxz
push
aas
jo
ds
scas
add
jne
repz
and
roll
or
decb
mov
out
xor
dec
jnp
test
pop
sbb
xchg
xchg
cmp
mov
jnp
mov
inc
sub
inc
lcall
mov
or
mov
xchg
push
and
mov
mov
jno
mov
cmpsb
and
mov
dec
push
lcall
sahf
mov
pop
sub
push
int3
inc
pop
cltd
orl
sub
lods
adc
ret
mov
movsb
imul
cmp
inc
mov
insb
push
loopne
lods
pop
adc
adc
add
cld
mov
xor
cs
cmp
push
ficoms
mov
mov
je
mov
fstpt
shrb
icebp
rcrl
mov
xchg
or
sbb
push
lods
cmp
nop
fimuls
pop
or
lahf
addl
adc
mov
push
int3
jmp
fwait
add
xorl
cmp
fldt
cltd
loope
int3
jne
push
push
ret
cmp
jmp
mov
jl
in
test
mov
mov
aam
popf
adc
daa
shrl
outsb
pop
js
clc
jmp
cmc
stos
push
mov
or
or
jg
pop
stc
mov
dec
int3
inc
shlb
fcmovne
movsb
aas
fwait
dec
movsl
or
jmp
js
inc
pusha
aaa
in
ficompl
sub
cmp
lcall
addr16
shl
adc
jecxz
cld
loope
shll
stos
pop
adc
lcall
mov
sub
jae
stos
sub
inc
bound
sbb
fs
mov
push
pop
sub
fwait
test
sbb
xor
std
mov
aad
loop
shr
inc
mov
clc
loopne
xchg
scas
dec
out
lds
jge
in
vpsubb
jb
test
push
and
cmp
mov
out
jecxz
mov
in
imul
mov
mov
xchg
add
mov
adc
inc
xor
xor
in
fsubrl
repz
insl
mov
dec
xchg
mov
xchg
mov
call
xor
stc
sbb
cmpsb
sti
mov
mov
adc
fs
sbb
outsl
xchg
jg
das
mov
xor
aad
mov
out
ljmp
repnz
pop
mov
push
sub
ds
cld
addr16
xchg
jns
loopne
xchg
mov
jmp
js
cmp
push
leave
mov
cmp
inc
test
xor
ret
mov
xor
out
aad
loope
dec
pop
loopne
cmp
and
insl
add
fidivs
inc
std
sub
jle
mov
adc
aaa
jge
push
mov
push
ret
adc
mov
ret
mov
xchg
jae
inc
xor
ja
decb
fwait
cmc
sahf
and
cmp
xor
lds
xor
mov
jb
mov
std
add
scas
mov
cld
negl
call
lods
mov
cmc
fisttps
stos
jns
pop
xchg
xor
in
test
andl
jae
sahf
jae
dec
jne
mov
repnz
jne
mov
pop
or
scas
cmpsl
mov
fcoml
mov
ror
hlt
cmp
cmp
jle
mov
jle
nop
mov
xor
fimull
cmpb
out
insb
mov
cmp
mov
push
fcompl
pop
xchg
ror
int3
inc
xlat
xchg
mov
shr
sub
into
or
es
jae
push
int3
inc
out
loope
test
add
pushf
mov
test
sahf
repnz
cmp
mov
xor
cs
and
bound
scas
ficomps
sub
jle
and
mov
mov
fmuls
push
inc
add
add
mov
scas
lret
in
daa
mov
leave
sbb
lret
insb
mov
aam
mov
dec
push
repz
into
and
jmp
lahf
scas
sub
stc
stos
push
push
dec
leave
xchg
sbb
sbb
push
sub
loop
aas
nop
repnz
insb
ss
push
cltd
ds
cmp
jae
jge
insl
test
ds
ffree
xor
mov
pop
iret
ficompl
push
aam
xchg
cmpb
mov
mov
ljmp
orb
or
or
ss
sub
repnz
andb
mov
fisttpll
popf
imul
outsb
sub
xchg
nop
inc
stos
in
pop
addr16
jmp
es
pop
imul
fidivs
mov
xchg
cmpl
fbstp
fistpl
cld
ljmp
loop
cmp
jle
push
lret
pop
ds
push
mov
pop
mov
cli
xor
mov
xchg
dec
call
sti
daa
and
je
and
mov
loope
and
iret
mov
insb
jns
inc
jg
push
dec
jne
xor
xor
adc
subb
push
xlat
negb
cld
cmp
xchg
dec
inc
daa
cltd
add
clc
mov
sarl
bound
repnz
adc
cmpsl
clc
cmp
lds
jecxz
add
in
xor
jae
push
sub
jl
test
jno
cwtl
mov
and
dec
sub
add
xchg
fimull
stos
and
scas
pop
jecxz
or
inc
adc
repz
cwtl
jno
in
rorb
jbe
repz
test
xlat
mov
cwtl
push
imul
aam
xchg
sbbb
xlat
xor
xchg
addb
xchg
sbb
mov
and
cli
cmpb
es
sahf
imul
addr16
jbe
dec
aas
ss
xchg
movsl
push
aad
cmpsb
sahf
cmpsl
or
dec
push
adc
adc
nop
jae
mov
or
popa
ret
mov
mov
cmp
loope
sbb
xchg
dec
cs
mov
mov
arpl
push
jnp
jmp
inc
mov
fcomps
xchg
adc
mov
push
adc
lock
bound
xor
dec
and
test
popf
push
push
jp
outsl
popa
jmp
mov
mov
pop
sub
push
cmp
repz
xorb
inc
mov
inc
aaa
xor
jmp
push
shr
cmp
sbb
mov
aas
jne
jnp
pop
inc
jg
lods
sbb
pop
dec
or
cmpsl
jl
push
jo
and
adc
arpl
ljmp
incb
cmpsl
cmc
mov
das
add
adcb
or
bound
xorl
out
inc
push
or
outsb
test
lret
mov
das
xorb
add
das
jo
mov
dec
sub
xor
cmp
xchg
and
mov
push
jo
sbb
in
and
scas
in
pop
fwait
mov
lods
push
icebp
in
imul
lods
in
imul
lods
sbb
sub
xchg
ficoml
mov
les
ficomps
cltd
jecxz
stc
lods
xchg
or
sbb
sbb
xchg
mov
leave
test
push
insb
cmp
and
add
enter
dec
add
mov
lcall
adc
inc
aas
inc
mov
or
mov
mov
xchg
aad
jae
mov
adc
scas
daa
repz
loope
in
push
into
mov
pop
out
fisubl
ja
arpl
in
cs
loop
shrb
dec
repz
mov
das
flds
xchg
addr16
xchg
sbb
fldl
jge
xchg
and
or
and
and
jnp
lds
or
pop
shrb
movb
mov
arpl
pop
stos
add
xchg
dec
mov
insl
fstl
xchg
xor
stos
xchg
sbb
in
lods
dec
inc
shl
lahf
xor
mov
xor
das
lea
lock
jmp
popf
jl
mov
jge
dec
xchg
push
inc
sub
sbb
es
gs
movl
dec
pushf
mov
in
fchs
add
sub
jg
lock
std
das
test
outsl
inc
lock
sbb
mov
mov
jg
or
fcomps
test
out
push
movsb
inc
mov
sarb
cmp
data16
xchg
pop
pop
fwait
xchg
hlt
pop
mov
int3
aam
sub
sub
push
add
xor
repnz
movsl
orl
add
push
test
js
ret
pop
outsb
jle
ret
shll
xchg
loopne
inc
aam
adc
sahf
pop
dec
dec
leave
repnz
call
push
test
adc
mov
push
call
jbe
ret
add
shll
mov
popf
pop
lahf
pusha
call
icebp
int3
xor
in
mov
push
or
fdivl
aaa
loopne
das
xchg
aas
ds
mov
mov
xor
xor
inc
dec
shlb
xor
in
pusha
popf
lret
push
mov
roll
add
dec
ret
aad
cmpsb
inc
mov
bound
in
push
pop
cmp
xchg
in
xchg
jae
fstl
shlb
gs
ds
push
hlt
cmp
movsb
adc
push
cmc
sbb
loop
imul
js
sti
add
cmc
fisubrl
push
adc
mov
pushf
add
popa
xchg
ljmp
daa
mov
das
sbb
in
test
es
popa
push
mov
scas
mov
lods
pop
jbe
xchg
jb
xchg
fcompl
in
or
dec
dec
mov
pop
icebp
and
cltd
gs
push
jmp
pushf
in
xchg
pop
stc
loopne
nop
lds
xchg
push
lock
pushf
mov
cli
int3
roll
add
add
aas
push
loopne
inc
push
xchg
bound
jle
push
imul
cmp
lods
es
or
add
add
mov
adc
imul
dec
push
and
jg
stc
fcmovnb
enter
and
pop
movsb
out
push
pop
jp
inc
lea
xor
mov
pusha
mov
popa
sbb
iret
scas
sub
mov
leave
cmp
jb
sub
pop
imul
pop
imul
add
pop
xchg
push
sbb
and
nop
int3
push
arpl
or
fstl
lods
jb
xchg
pop
jbe
hlt
hlt
adc
mov
or
sub
mov
fsub
dec
mov
daa
insl
orb
stc
mov
sti
cmpb
mov
mov
leave
cli
stos
aaa
sub
in
orb
sbb
jle
in
fistl
scas
stos
daa
lcall
movsl
jnp
inc
jmp
pop
test
leave
ffree
aam
movl
and
ss
and
in
jnp
mov
movsb
rorb
xlat
cltd
push
mov
ds
js
cmp
in
xchg
pop
add
shll
repz
nop
jmp
inc
pushl
xchg
popa
jge
fsubrs
sbb
scas
push
loope
loope
lock
leave
pop
loopne
mov
fadd
sub
movsl
lahf
int3
mov
cwtl
xor
and
xchg
jecxz
mov
mov
addl
arpl
cli
push
call
adc
mov
popf
popa
dec
pushf
jmp
or
push
xchg
sub
std
pop
sarl
xchg
lcall
mov
sbb
push
inc
cmp
jl
mov
cmpsb
mov
iret
adc
inc
movsl
ss
das
sarb
imul
mov
or
add
xchg
or
test
add
xchg
lea
mov
rcr
adc
divl
shlb
sbb
mov
sub
xor
mov
movsb
mov
pop
sahf
leave
inc
xchg
or
fbstp
loopne
push
ja
cmp
add
push
lret
cwtl
in
aam
inc
mov
insl
or
xor
loopne
push
int
jmp
pop
movsl
adc
fwait
out
and
inc
sbb
inc
popa
imul
and
test
pop
pop
dec
and
cmp
or
in
lea
test
ficoml
xchg
mov
push
xchg
popa
sbb
cmp
lret
cmp
mov
or
pushf
or
jnp
loopne
psubq
loopne
push
dec
mov
ds
and
pusha
xor
cmc
sub
fidivs
punpckhdq
jge
cmp
divb
into
add
cmp
jbe
jg
cmp
in
stos
cmpsl
lret
shl
addl
add
sbb
add
aad
sbb
aas
cmp
sub
aad
scas
sti
sub
mov
mov
in
aas
out
sub
out
outsb
pop
sarb
adc
and
mov
sahf
inc
iret
cmp
es
mov
insl
test
sbb
sub
jl
call
jne
call
dec
lret
jo
cld
add
cld
rcr
adc
jne
mov
xchg
ja
jae
cltd
movsl
mov
inc
movswl
mov
stos
ds
arpl
test
jne
stc
inc
pop
int3
pusha
push
aad
inc
out
nop
xchg
and
pop
ljmp
or
incl
push
in
push
jo
dec
shll
out
cmc
lret
in
int3
adc
mov
lahf
lret
add
inc
xchg
sbb
bound
add
pop
ret
roll
aad
or
andl
mov
pop
lods
iret
nop
adc
repz
jns
bound
cmp
jne
aas
xchg
pop
rol
xchg
cmp
xor
inc
mov
lods
mov
bnd
addr16
adc
test
add
je
fs
int3
loope
jae
ror
lods
pop
loop
xchg
mov
enter
fs
sub
in
push
jecxz
jns
push
mov
mov
and
and
out
add
dec
dec
test
lds
test
push
sub
outsb
pop
dec
int
js
or
in
shlb
pushf
fcompl
mov
adc
cmp
or
aad
mov
stos
mov
xchg
push
xchg
cmp
or
dec
dec
push
xchg
xchg
pop
or
push
cmp
add
addl
or
rol
sbbb
incl
sbb
pop
rcrb
cmpsb
mov
pop
mov
ret
dec
cmp
insb
insb
enter
dec
lock
cmp
sbb
out
ss
jbe
dec
and
push
pop
sub
mov
and
icebp
fcmovnbe
leave
pop
mov
lock
jg
loop
sub
xlat
idiv
push
out
mov
mov
pop
arpl
outsb
cltd
insb
into
lret
test
push
add
call
negl
lods
enter
xchg
inc
pop
out
inc
adc
mov
ret
mov
sub
push
lahf
outsl
inc
xchg
fnstsw
push
leave
add
lret
mov
ret
arpl
mov
sub
sbb
mov
cli
dec
sbb
data16
adc
jb
std
addr16
push
pop
and
and
xor
xor
mov
mov
mov
rcrb
sbb
rorb
or
xor
lock
mov
fidivl
push
mov
lea
lea
mov
sub
xor
cmc
ljmp
mov
fs
adc
xchg
out
xlat
ret
insb
inc
jo
xor
loope
add
cmp
pushf
fstp
mov
add
test
sub
insl
and
xchg
lock
in
bound
pop
ljmp
stc
pop
mov
shlb
push
pushf
mov
dec
fsub
add
ljmp
and
add
cmpsb
cmp
in
nop
leave
or
xor
sbb
sbb
jmp
xor
sbb
jmp
push
sub
mov
lds
mov
es
inc
xchg
inc
loope
jl
out
or
dec
mov
mov
lcall
and
sbb
dec
fists
inc
pop
sbb
pop
call
orl
and
cltd
das
rol
xchg
mov
or
sbb
rcll
cmp
lods
add
aad
mov
mov
mov
pop
dec
mov
cld
ljmp
rolb
xorl
cmp
xchg
lock
dec
add
sub
xchg
dec
rcr
jo
rcrl
lods
lods
mov
aad
or
hlt
add
fxch
inc
js
movsl
mov
mov
popw
stos
and
outsl
mov
sub
aas
jmp
out
xchg
adc
xchg
sub
iret
mov
sbb
cmp
vpminub
je
cli
repz
mov
movsb
sti
cmp
add
jmp
or
inc
lahf
bound
jle
stos
sbb
mov
leave
jb
fcomi
sub
push
xchg
sbb
ds
outsl
sbb
lahf
out
stc
imul
pop
cltd
enter
insl
lea
cli
pusha
imul
sub
pop
sahf
xchg
mov
stos
call
sahf
xchg
mov
and
xor
inc
cmpsl
pop
pop
sahf
pop
xor
sub
push
aam
int3
les
cmp
mov
int
mov
pushf
das
jp
int3
pusha
and
pusha
sbb
cli
mov
inc
mov
push
leave
mov
and
stos
add
cmp
fidivrl
iret
cld
push
xchg
push
fs
pop
mov
or
cltd
sbb
fiadds
shrb
je
add
mov
icebp
push
xchg
sbb
stos
insl
lret
dec
loopne
jge
repnz
bound
adc
sti
movsb
mov
mov
test
fidivl
pop
xlat
push
dec
xchg
mov
mov
pop
es
loope
add
xor
push
mov
pop
mov
sub
xchg
xchg
xor
mov
fcoms
cmc
sar
scas
mov
mov
mov
jo
push
and
or
pop
mov
cmpsb
enter
pop
pop
into
loope
scas
mov
sub
push
cld
lds
ljmp
sti
cs
push
cmp
in
clc
push
jmp
test
or
shlb
imul
aaa
in
push
mov
rorl
out
dec
mov
jno
sbb
xchg
shll
mov
loop
cmpsb
out
jmp
and
add
nop
jp
jge
xchg
or
fimull
cmpsl
in
jb
addr16
cmc
mov
insb
pushfw
adc
mov
mov
xor
test
out
jb
movsb
cli
test
add
xor
sti
jp
js
dec
xchg
fimull
xchg
test
outsb
sbb
cld
push
inc
int
push
dec
imul
sub
ljmp
popf
orb
mov
and
and
add
std
fsubrs
fstpl
and
aas
rcr
les
push
loopne
fistpl
sbb
test
rolb
lret
jno
xchg
jo
push
sar
push
rcr
sub
sbb
cmp
xlat
adc
inc
sub
lahf
outsl
push
jo
ljmp
mov
flds
movsl
inc
lahf
push
add
jp
pushf
int
rcr
jmp
and
enter
pop
sub
and
rcrl
adc
or
mov
jae
cmpsb
sub
fnstsw
adc
jne
cmpsb
sbb
bound
adc
cli
rcrb
jns
sub
xchg
cmp
cmpsb
inc
xor
mov
mov
xchg
imul
mov
jo
xchg
sbb
mov
aad
sub
popf
ret
mov
or
mov
gs
adcb
jmp
loope
cmp
or
jg
and
sbb
mov
pusha
sub
push
sbb
cmpl
rcl
loopne
popf
insb
bound
nop
xchg
jl
imul
mov
adc
xor
in
int3
push
shlb
loopne
loopne
add
nop
and
sbb
inc
hlt
adc
daa
inc
pop
jo
out
ja
jle
inc
movsb
shrl
pusha
bound
icebp
adc
mov
add
outsl
xor
mov
add
jg
cmc
mov
push
in
mov
outsb
sahf
xchg
push
std
xor
pusha
sub
enter
scas
push
lcall
jbe
mov
mov
insl
cmp
lods
mov
push
jecxz
mov
add
clc
fstps
js
cmp
loop
mov
in
je
push
dec
push
push
stos
fiadds
aaa
mov
inc
inc
aad
push
hlt
mov
int
shrl
ret
cwtl
scas
lds
dec
push
xchg
or
je
movsb
xor
jge
je
push
cmp
fnstcw
test
cmp
iret
mov
pop
pusha
push
and
mov
mov
mov
pop
mov
cmpsb
pop
cmp
push
lret
fcoms
inc
push
xor
inc
dec
enter
rcr
push
pop
push
ret
adc
inc
or
push
test
fwait
pop
data16
shll
add
inc
adc
ret
adc
cmc
dec
and
mov
out
adc
adc
stc
icebp
jb
xchg
fwait
pop
inc
pop
int
mov
fsubrp
das
hlt
daa
bnd
jne
sarb
shlb
cmp
fnstenv
sbb
jo
rcr
mov
idiv
pop
mov
lcall
cs
shrb
add
lcall
movsl
test
mov
xchg
mov
cmc
dec
sbb
sub
ljmp
dec
push
or
jl
bnd
sahf
int3
mov
xchg
sbb
test
mov
adc
jno
inc
mov
and
jmp
pop
mov
aas
mov
fstp
stos
fld
adc
roll
mov
xchg
cmp
inc
dec
in
cmp
jg
jo
and
pushf
sar
jne
push
daa
or
lret
lds
xlat
mov
imul
je
inc
shlb
dec
ljmp
mov
dec
into
xor
popa
rcrb
inc
outsl
scas
out
fisubrl
sarb
and
frstor
mov
adc
and
adc
cwtl
jmp
lock
jecxz
out
cmpsl
pop
bound
daa
fstps
loope
jmp
xor
push
mov
aad
push
mov
adc
mov
mov
out
pop
mov
lods
or
gs
sahf
cmp
dec
nop
sti
fwait
pop
sbb
and
aas
push
inc
mov
leave
xor
push
push
or
ljmp
aaa
inc
call
jmp
add
mov
adc
fisttpll
pop
int3
pushf
sbb
jnp
pop
aam
pop
dec
or
pop
push
scas
xchg
xchg
or
pusha
fwait
inc
ret
dec
push
mov
je
loope
xchg
lea
in
dec
mov
push
loopne
mov
mov
shl
cmpsl
xchg
aas
push
insb
cmp
mov
dec
mov
push
mov
int3
pop
or
ds
movsb
repnz
push
push
mov
dec
push
adc
jbe
add
fsubrp
scas
and
xchg
outsb
push
xchg
xchg
push
xchg
mulb
push
gs
sub
inc
jle
aaa
dec
and
push
jae
imul
insb
push
pop
pop
mov
pop
pushf
outsb
out
hlt
and
sarl
jns
arpl
push
mov
inc
sti
mov
aam
lods
mov
xchg
call
cmpsb
sbb
sub
mov
leave
scas
mov
cmp
adc
jb
pop
jp
pop
or
xchg
out
aaa
add
fdiv
or
push
aam
imul
xchg
iret
dec
in
aad
jnp
ds
movsb
sub
or
stos
ss
lret
loop
rolb
xchg
sahf
and
inc
stos
fimuls
hlt
leave
icebp
jns
imul
inc
stos
loopne
ret
data16
push
xor
test
xor
adc
mov
add
popa
pop
jp
in
and
cmovne
into
sbb
out
int3
cmp
adc
jo
fwait
inc
aaa
or
adc
fs
icebp
movsb
repz
loope
ret
lods
lock
sbb
mov
jns
js
into
jmp
outsb
jbe
ret
mov
das
xchg
out
rcl
mov
out
dec
pop
inc
cwtl
scas
adc
jne
xchg
xor
xchg
cmp
mov
xchg
int3
fisttpl
fsubs
xor
mov
dec
sbb
sahf
xor
into
jns
in
imul
mov
test
mov
es
aam
cmpsl
adc
mov
pop
lcall
iret
push
inc
mov
divb
insl
pop
lret
jne
pop
xor
or
push
xorl
mov
imul
mov
and
das
loope
cwtl
mov
pop
lds
xchg
stos
mov
sbbl
ret
xchg
pop
testb
push
fstpl
es
lods
je
pop
sub
and
xchg
dec
xchg
mov
sarb
ficoms
pop
xchg
cmp
cmc
cmpsl
pop
cmp
mov
loope
push
and
lods
decb
inc
pop
mov
nopl
fcmovnu
xor
jmp
and
insb
ret
dec
pop
into
mov
inc
jns
and
push
mov
lret
nop
aas
into
rol
lock
into
outsb
mov
cmc
mov
push
push
inc
adc
sbb
mov
xchg
sbb
mov
xchg
xchg
xor
sbb
mov
jno
dec
adc
movsl
std
jmp
xchg
leave
jnp
cmp
mov
jecxz
push
int3
mov
or
mov
adc
imul
push
xchg
add
dec
xor
adc
rorb
cmp
setle
jbe
push
movsl
mov
cmp
loop
jne
lahf
out
ret
mov
xchg
hlt
leave
std
jle
xchg
aad
mov
scas
rorb
dec
cltd
push
cmp
adc
pop
loope
xchg
jl
rcr
pushf
xchg
test
fcomps
dec
clc
lock
shlb
add
test
nop
fidivs
hlt
mov
test
dec
mov
pop
shl
xchg
hlt
test
sub
leave
xchg
and
scas
pop
shlb
push
test
push
sbb
jno
jmp
mov
add
xchg
loop
hlt
or
repnz
mov
subb
leave
mov
sbb
sahf
aaa
lods
push
test
stos
inc
sbb
fsubl
cltd
jo
fisubl
out
js
lock
or
lock
push
pusha
stc
mov
rcrl
xchg
dec
add
std
xorb
test
xor
inc
ja
stc
not
pop
adc
daa
xor
mov
xlat
dec
pop
mov
mov
pop
call
int
mov
mov
push
mov
jge
stos
cs
in
dec
pop
cmp
dec
test
cli
mov
test
les
repnz
mov
pop
das
xor
dec
jmp
add
xchg
sub
xor
sbb
in
jmp
in
add
mov
aaa
gs
btrl
dec
inc
popa
rorl
xchg
xchg
into
push
daa
call
xor
sub
mov
xchg
fld
jns
add
arpl
addr16
sbb
inc
push
pop
push
int
shrb
ret
rcll
or
sbb
int
cmp
xchg
jl
enter
aaa
gs
mov
dec
nop
mov
cmp
jmp
and
push
jecxz
fldl
jmp
pusha
iret
out
pop
mov
popf
in
gs
xor
cld
xchg
lret
pop
jns
xchg
mov
int
adc
movsb
push
mul
imull
clc
insl
xor
out
mov
pop
daa
lods
push
mov
repz
inc
or
xchg
pop
ss
das
xchg
adcb
push
inc
push
jnp
xor
push
and
dec
push
adc
lods
scas
mov
into
sub
push
sub
mov
inc
xor
lahf
int
cltd
mov
ljmp
mov
pop
stc
ret
push
push
ja
dec
sub
push
iret
popf
xchg
fmuls
xchg
ret
dec
ficoml
dec
pop
inc
scas
mov
sbb
movsb
push
jl
add
shlb
xor
xchg
icebp
xlat
xor
fxtract
cli
or
ret
mov
jge
mov
sub
stos
adc
xor
push
or
jl
sbb
xor
sub
int3
mov
jbe
dec
mov
std
fstpt
mov
inc
in
movsl
cs
xchg
dec
and
xor
mov
sarl
sti
test
lahf
loopne
adc
mov
mov
shrl
adc
fwait
dec
es
cltd
scas
mov
or
jmp
out
dec
xor
or
ret
mov
cmpsl
mov
add
icebp
mov
in
mov
xchg
pop
mov
imul
adc
pusha
or
mov
lea
jg
rorl
imul
cmpsl
nop
jp
jle
push
sub
shll
lahf
fstpl
pusha
or
test
pop
aam
cmp
mov
out
inc
push
shlb
sub
cmc
pop
mov
dec
iret
dec
loopne
jecxz
out
in
push
jbe
bound
adc
je
and
mov
rcrl
sbb
sbb
lret
ror
or
cmp
les
sar
adc
ret
out
imul
or
ret
inc
pop
mov
inc
int3
pop
out
mov
dec
xor
insb
and
cmp
jno
cmpsl
ja
test
lahf
xor
in
cwtl
lock
ficompl
rcll
pop
je
in
cmpsb
test
arpl
dec
lock
dec
sbb
fsubr
cmp
add
mov
aam
stos
cltd
je
inc
outsl
mov
movsb
shl
sub
adc
out
jbe
iret
outsl
call
sbb
stos
sub
pop
pop
jge
bound
cltd
jmp
test
and
insb
cmp
mov
outsb
mov
jno
add
enter
das
sbb
and
test
fdivr
jge
test
add
push
and
lds
push
into
mov
or
cmp
cmp
cmp
filds
imul
jle
dec
cmp
in
pusha
in
das
loope
popa
sub
add
pop
push
mov
imul
push
cmp
or
xor
iret
sub
ret
sub
mov
dec
jb
inc
ret
sti
sub
lock
adc
sahf
mov
sahf
repnz
adc
jae
jp
or
scas
ret
mov
xchg
out
shll
adc
rcrb
xlat
jp
outsl
insl
push
and
pop
stos
and
fsts
xor
and
mov
sub
ficoms
repnz
or
ds
repnz
or
push
or
push
mov
lock
push
outsl
pop
mov
shr
shrb
mov
mov
es
xrelease
in
jns
mov
ss
ret
push
add
fs
mov
adc
mov
push
jp
push
std
cltd
mov
mov
jg
stos
sbb
sbb
fwait
aaa
cmp
add
xchg
adcl
sub
int3
lea
mov
mov
jmp
jno
out
pop
mov
shlb
or
pop
outsl
adc
jns
pop
cmp
stc
xchg
add
or
fnstcw
add
push
add
je
xchg
dec
neg
mov
aas
ljmp
imull
or
insl
aas
cwtl
enter
xchg
sbb
and
pop
pop
jl
fwait
jle
sbb
mov
repnz
cs
adc
jg
cmpsl
loopne
xlat
lock
adc
out
sbb
fildl
adc
sub
mov
sti
mov
mov
mov
mov
jae
mov
mov
adc
pop
shl
sub
inc
in
cmpsl
andb
scas
lret
shrl
push
xor
cmpsb
mov
mov
dec
mov
mov
sub
fucomip
int3
cmp
xorb
push
outsl
les
imul
out
in
adc
xor
jle
in
jb
popa
das
jo
cmp
adcb
inc
rorb
shlb
aaa
mov
fmull
xchg
call
mov
sub
enter
iret
les
cmp
dec
imul
xchg
cwtl
lods
jnp
mov
push
cmc
adc
push
lods
decb
sub
movsb
push
or
jecxz
pop
push
ret
aaa
inc
push
pop
loop
popf
jl
jae
femms
inc
and
push
sbb
adc
lock
mov
pusha
jbe
add
mov
lods
push
push
aas
aam
cmc
cmpsb
mov
call
push
in
xor
popf
mov
inc
xchg
les
mov
enter
subl
ja
or
pop
mov
jg
xor
dec
and
mov
jb
xchg
inc
mov
cs
enter
add
bound
data16
call
cmp
loope
or
mov
sbb
xor
cli
dec
pop
or
pop
int
xchg
mov
fcoml
pop
jno
sahf
cmpsb
push
pop
in
dec
imul
sbb
mov
aaa
pop
mov
std
and
in
fs
jl
mov
mov
jmp
lret
nop
call
adc
jbe
sar
fstpt
xor
jns
kmovb
cmp
data16
cld
sbb
mov
inc
cmp
lods
push
push
inc
sbb
mov
fwait
push
jns
imul
mov
popf
out
xchg
rcrb
jle
in
mov
negl
mov
pop
sbb
or
mov
sub
lea
jae
jle
repz
sub
iret
lret
ret
dec
pop
stc
lahf
lea
push
inc
push
ficoms
loop
inc
ds
cltd
jmp
repnz
cmp
imul
sbb
xor
push
jp
sbb
inc
mov
push
outsb
scas
out
lock
ja
mov
jne
add
fs
in
mov
bound
in
addl
lret
ja
das
aas
jae
int
jns
inc
inc
adc
jo
inc
mov
call
jmp
popa
outsb
fnstsw
push
insl
shl
in
sbb
lret
sbb
cmc
das
mov
in
jnp
popf
mov
sub
and
mov
jge
xchg
call
jne
in
jg
adc
imul
sbb
dec
push
in
ljmp
mov
cltd
push
in
hlt
xor
push
lods
sub
fdivrl
mov
jecxz
xchg
xchg
ljmp
add
out
inc
adc
cmp
in
inc
sub
pop
cmp
inc
xchg
in
sub
inc
les
les
mov
mov
hlt
cs
add
clc
shrl
ret
dec
sbb
inc
dec
and
adc
hlt
push
pushf
imul
jle
xor
xor
dec
mov
out
push
cmpsb
inc
fistl
cld
cmc
cld
stos
fsubs
jp
stos
mov
in
fdivrp
cmpsb
sub
mov
dec
sahf
imul
cmp
loop
cmp
daa
xchg
repnz
fldt
ss
adc
cmc
jmp
es
push
adc
andl
and
cs
pop
pop
jns
xor
push
mov
add
xchg
imull
lcall
ds
jbe
mov
flds
push
sbb
fs
adc
mov
lods
out
dec
insl
sbb
cmpsl
push
cltd
dec
sub
roll
sbb
dec
loop
xor
in
loop
pop
sbb
les
add
incb
sub
inc
cmp
mov
adc
inc
and
jl
or
jl
mov
inc
scas
sbbb
xor
sti
cmpsl
fstpl
jle
fstps
pop
mov
mov
adc
push
es
lcall
addr16
jb
aaa
loope
fnstsw
mov
xor
stos
mov
cld
xchg
pushf
dec
sbb
lods
dec
push
adc
mov
addr16
test
push
inc
sahf
jo
gs
enter
pop
test
cmp
aaa
aaa
pop
mov
shrl
lret
insl
imul
stos
aam
mov
arpl
addr16
mov
push
add
lahf
outsl
xchg
xlat
xchg
jno
fadds
sbbb
movsl
and
or
cmp
mov
xlat
xor
subb
fadds
cli
xor
sub
cmp
sarb
clc
in
loopne,pt
pop
jno
sub
insb
addr16
push
pop
mov
stos
jbe
sbb
sub
call
push
ja
jae
mov
std
mov
ficompl
adc
out
and
bound
cwtl
mov
pop
push
cld
jmp
cmp
out
roll
add
ljmp
pop
cmpl
jmp
sbb
ds
jg
ret
fwait
push
mov
mov
cmpl
js
stc
adc
repnz
push
lock
sarb
in
jae
dec
xlat
xor
inc
adc
stos
jno
push
mov
out
pop
jmp
inc
cmc
or
cld
inc
out
popa
lods
rep
fiaddl
mov
xchg
mov
subl
int
mov
int
inc
in
xor
iret
jl
repnz
push
pop
fidivl
cmpsb
ja
shlb
insb
pop
pop
xchg
jno
inc
xor
jne
push
aad
sbb
cmp
and
xchg
icebp
mov
jp
mov
xlat
pop
movsb
negb
jge
push
or
pop
pop
jecxz
mov
bound
sarl
push
in
je
fnsave
daa
pop
mov
push
adc
fneni(8087
repnz
xchg
stos
in
mov
bound
adc
xor
js
mov
push
push
cmp
enter
cmp
mov
ja
les
push
push
push
and
push
cwtl
add
pop
loopne
shl
xor
jmp
inc
sbb
mov
add
lds
test
xchg
cli
inc
lods
test
mov
loop
ss
mov
lret
push
pop
push
and
push
xchg
dec
ljmp
mov
lcall
jmp
cmpsl
dec
out
jge
jbe
mov
das
or
and
imul
fisubs
mov
cmp
aas
xor
xchg
adc
add
mov
cli
ret
cmp
xor
mov
roll
fcompl
and
push
cli
pop
iret
loope
gs
arpl
mov
cmpsb
addr16
lcall
add
push
js
test
xchg
out
stc
mov
inc
stos
ljmp
loope
jb
test
test
je
out
mov
movsl
jp
sub
cmp
mov
xlat
aad
fwait
jle
into
mov
push
mov
rol
mov
addl
int3
xor
push
pop
dec
outsb
call
les
out
gs
mov
mov
sbb
int
shlw
xor
fcompl
inc
imul
xchg
lods
out
fucom
xor
add
fbstp
cmpsl
sub
mov
dec
inc
lahf
jg
mov
das
outsl
and
cmp
sub
fisubs
int3
ja
rolb
dec
sub
sub
rcrl
cmp
leave
std
push
sub
das
pop
mov
adc
test
mov
xor
out
cli
jle
lds
pop
subb
arpl
cmc
cs
in
addr16
cmp
pushf
push
sahf
jb
or
mov
daa
sub
add
cmpsb
add
cmp
adc
in
je
cmp
mov
mov
push
xchg
mov
ljmp
mov
mov
push
push
sbb
in
testl
and
or
pop
fdivrl
lock
dec
ret
je
and
sub
ror
je
decl
arpl
das
icebp
cld
or
mov
push
xor
cmp
cmc
mov
mov
icebp
or
sbb
stos
ljmp
mov
test
xorb
sbb
mov
cli
mov
pop
mov
cmp
mov
pop
push
mov
test
push
push
xchg
dec
scas
scas
push
fabs
enter
or
mov
xchg
pop
jge
es
icebp
aas
aas
pop
sarb
mov
enter
pop
loop
enter
jmp
ds
daa
cwtl
xchg
loopne
stos
xor
push
mov
pop
nop
outsb
push
inc
ret
out
xchg
lods
mov
mov
cmpsl
imul
mov
pop
ret
test
stos
push
ret
cmp
inc
and
movsb
push
dec
adc
or
xorb
cld
lods
scas
bound
inc
mov
or
mov
push
jg
divb
push
mov
das
mov
iret
jbe
pusha
enter
push
call
stos
and
xchg
rclb
sub
jl
and
sarb
pusha
out
scas
push
or
cltd
sub
xchg
lcall
mov
fdivrs
xor
adc
iret
add
or
push
orl
ja
and
xor
lods
dec
into
mov
orb
push
sbb
mov
pop
sbb
inc
sti
loopne
jb
jp
scas
inc
js
outsl
jp
pop
pop
stc
lahf
gs
mov
mov
cli
mov
sub
int3
jbe
lahf
and
loope
sub
gs
adc
add
ret
imul
jecxz
pop
pop
ret
push
sub
imul
aam
rclb
ljmp
ficoms
and
sub
inc
dec
cmovge
cmp
andl
dec
jne
popl
hlt
push
sub
mov
jmp
je
push
je
addr16
daa
call
ret
idivb
push
pop
lods
lds
repz
jmp
outsb
aaa
fbstp
dec
and
test
call
jecxz
inc
xor
das
sub
and
and
fbstp
inc
insb
and
mov
mov
xchg
sarb
mov
test
jbe
xorl
aam
cmc
mov
mov
outsb
adc
inc
xor
ret
adcl
pop
inc
jb
das
xchg
movb
popf
cld
pop
cs
mov
lcall
mov
push
xor
jge
dec
mov
jmp
mov
xchg
pop
mov
pop
sbb
sti
xor
add
and
ljmp
sbb
cmp
xchg
xchg
dec
xchg
ds
or
es
fistpll
out
pop
divl
lret
fstpt
sti
jb
mov
sbb
movsl
adc
adcb
cmpsl
mov
leave
mov
outsw
push
in
xor
cvtps2pi
adc
repz
cmc
arpl
cmc
cmp
mov
rcll
or
mov
fstpl
call
pop
int
negb
int
sub
jl
dec
push
movsb
data16
xchg
jno
push
pushf
and
jl
or
js
jp
sub
jno
jmp
ret
sbb
test
movsb
xor
adc
mov
fsubp
mov
iret
rorl
cld
clc
xchg
dec
mov
xor
nop
adcl
pop
xor
cmp
in
lahf
lret
lods
mov
adc
cmc
popa
mov
dec
push
insb
cmp
int
rolb
ficoml
pop
mov
outsb
jge
sbb
inc
sbb
fists
mov
add
je
or
sbb
cmpsl
lock
jge
or
iret
sbbl
mov
movsb
out
ret
push
rcr
aam
lods
or
test
aam
scas
or
sbb
into
pop
outsl
dec
imul
mov
mov
xchg
jae
inc
lcall
loopne
imul
pop
mov
iret
and
insb
in
pop
push
mov
je
andl
push
xor
mov
pop
nop
xlat
ljmp
sub
sub
jae
fmul
inc
mov
fdivrs
fiaddl
mov
xchg
dec
stc
jnp
mov
sub
inc
imul
sub
push
mov
cld
push
bound
outsl
jns
and
sbbb
cmp
jecxz
push
sbbl
cmp
stos
mov
out
pop
push
lods
cmp
in
subl
mov
mov
out
mov
lret
in
pop
repnz
xlat
nop
sti
jmp
rol
push
stos
imul
ret
sahf
stos
xor
dec
inc
ja
sbb
ja
jb
stc
mov
out
jp
shl
xor
outsb
cmp
sbb
mov
cmpl
scas
mov
push
mov
jle
ficompl
xchg
add
ficomps
jge
shll
int3
push
ucomiss
mov
les
pop
in
xlat
adc
sbb
in
insl
xchg
push
push
cmp
dec
mov
shll
or
add
shlb
mov
jmp
push
bnd
mov
mov
or
pop
ss
das
ss
and
mov
in
lock
lock
mov
sub
mov
icebp
movsb
xchg
cmc
jmp
mov
leave
jno
or
mov
pop
mov
sti
mov
adc
pop
scas
dec
out
sahf
pop
jmp
xchg
jmp
sti
aas
ds
scas
sahf
sbb
test
imul
mov
adcl
mov
fldcw
mov
ds
mov
loopne
xor
pop
mov
xor
mov
add
in
dec
lret
fisubrl
pusha
mov
mov
mov
push
sub
inc
adc
dec
lods
or
adc
ja
jbe
inc
int
fbld
lds
cmp
sbb
repnz
lods
inc
jne
lods
int
xchg
push
aad
sbb
mov
cmp
dec
pop
inc
pushf
push
data16
mov
jge
xor
push
in
cmp
pusha
daa
cwtl
jae
jnp
fcomip
mov
in
xor
mov
jne
and
mov
mov
iret
cmc
nop
in
dec
push
mov
adc
aaa
adc
shlb
cs
dec
jbe
push
pop
mov
out
push
adc
jp
inc
lret
mov
pop
pop
into
push
imul
dec
jnp
repz
stos
cltd
add
jp
je
fwait
movsb
sub
jmp
dec
sub
pop
ja
or
ret
add
or
testb
sub
popf
cmp
mov
push
inc
fists
fistps
cmp
arpl
gs
mov
push
push
push
inc
jns
nop
stc
lock
xchg
outsl
shlb
inc
add
ficoml
fsubrs
ss
inc
fstps
test
sub
mov
ficoms
sar
xor
push
in
je
pop
push
sbb
stos
pop
bound
xchg
movsb
int3
ja
stos
and
push
test
mov
and
std
clc
inc
mov
dec
xor
xor
push
ds
push
push
ljmp
mov
clc
pop
jae
imul
xchg
rolb
popa
sbb
stos
sbb
pop
mov
inc
mov
xor
adc
out
insl
push
mov
jmp
jle
mov
in
leave
and
xchg
mov
data16
sbb
mov
sahf
imul
push
inc
lea
jecxz
rcrb
int3
jmp
xchg
shl
cmp
pop
imul
sbb
addr16
pop
mov
pop
xchg
xchg
movsb
bound
mov
gs
pop
or
sbb
cs
xlat
pop
push
outsl
out
filds
rcl
es
add
push
xchg
bound
jnp
xor
add
xchg
lods
xchg
mov
loop
int3
popa
mov
inc
push
in
cmp
movsl
pop
mov
adc
aam
xchg
mov
ljmp
insb
pop
les
pop
sbb
mov
xor
and
nop
pop
dec
pop
xlat
ret
xor
ja
mov
ret
push
pop
mov
mulb
jae
cmp
inc
test
jl
std
cmp
pop
scas
jb
fisubrl
insl
dec
jl
jg
jbe
nop
push
mov
out
xor
push
nop
cmpsl
rcll
sub
mov
fisttpll
imul
cwtl
inc
add
push
dec
sbb
das
lahf
fisttps
jmp
ss
push
mov
enter
jae
inc
hlt
push
inc
fcompl
mov
mov
mov
mov
mov
insl
out
or
push
xor
mov
leave
jle
outsb
cli
mov
into
fwait
stc
inc
mov
out
in
inc
xchg
rcl
cmp
xchg
loop
push
jae
testb
rclb
test
out
addl
scas
sahf
pushf
dec
hlt
fbstp
sub
into
and
into
jns
and
fwait
inc
jo
lret
repz
cli
or
sbb
ret
or
inc
mov
jne
gs
fildl
pop
js
fwait
jmp
jp
lcall
int
ret
or
push
mov
jne
inc
sahf
cmp
jns
fidivrl
ja
repz
mov
sub
and
rcll
add
icebp
sub
stos
in
push
xchg
fstl
hlt
rolb
aam
inc
add
inc
pop
adc
cli
xor
inc
jb
xchg
enter
ds
int3
repz
pushf
jb
or
mov
pop
leave
lret
and
shll
nop
das
mov
dec
scas
shll
movsb
cwtl
push
sti
dec
call
push
fyl2xp1
jecxz
sbb
inc
test
xchg
jp
mov
rcr
lret
mov
cmp
adc
push
adc
dec
jmp
mov
bound
ret
lret
mov
inc
or
repnz
movsl
adc
pusha
test
push
cmp
lret
pop
aas
dec
mov
cmp
fld
movsb
cmc
fbstp
mov
out
stc
sbb
ljmp
lret
sbb
insb
sub
inc
test
in
lcall
test
sbb
mov
mov
add
outsb
test
andl
outsb
xor
add
ljmp
mov
xor
jnp
stc
pop
sub
and
lock
pop
xchg
repnz
push
test
cmp
rolb
hlt
or
scas
in
xchg
or
cwtl
mov
addr16
push
mov
push
dec
imul
repz
cmpsb
sahf
cld
pop
stos
out
adc
nop
or
sbb
inc
push
leave
mov
sbb
sub
imul
xchg
fildl
sub
fcom
adc
adcb
mov
pop
stos
mov
ja
jg
shl
lea
cmp
cld
imul
je
mov
add
imul
sbb
cmpsl
and
mull
rcr
out
xchg
out
in
ds
out
sbb
or
mov
jne
sbb
or
std
cmpsb
or
imul
inc
xor
push
bound
stos
repnz
outsb
mov
xchg
pop
clc
int3
pop
fiaddl
mov
fsubs
push
or
arpl
pop
adc
imul
aaa
mov
fistpl
pusha
aad
aas
adc
push
cmc
mov
out
xchg
mov
push
out
push
ss
in
mov
ret
ret
push
negb
in
out
add
adc
jae
shlb
rclb
mov
inc
adc
fwait
xchg
aam
push
pop
jg
sbb
ja
shlb
xchg
mov
sti
mov
sbb
fldcw
sbb
test
sbb
orb
sahf
nop
sub
mov
cmp
cmp
repz
mov
data16
outsl
iret
push
fwait
sbb
push
je
mov
xchg
ljmp
mov
sub
cwtl
xchg
xchg
dec
sbb
cmpsl
frstor
pusha
in
inc
fsts
adc
int3
int
int3
jne
sbb
jg
gs
xchg
mov
test
ror
jns
adcl
iret
pop
pop
jo
dec
jmp
cmp
mov
fidivrs
not
arpl
sbb
mov
ret
dec
dec
mov
stc
sub
fimull
iret
fnstsw
popl
mov
nop
sbb
adc
add
aaa
out
lods
jbe
mov
push
xchg
sbb
xchg
test
fwait
xlat
mov
sub
jg
aam
dec
pop
sbb
imul
je
mov
aaa
add
push
xor
dec
nop
mov
shlb
pop
sbb
jg
cli
jmp
ss
or
mov
fistl
sbb
imul
dec
dec
lods
cmpsb
or
xchg
aad
cmp
sub
xchg
inc
gs
mov
dec
sbb
roll
jle
mov
xor
aam
lret
adc
xchg
dec
dec
push
ficoms
addr16
call
les
jl
pop
jbe
jno
std
mov
add
jmp
push
fisubs
cld
push
je
loop
and
orl
push
cmp
xchg
mov
es
add
sub
ret
pop
mov
arpl
clc
or
mov
push
in
scas
add
les
int
and
arpl
xor
in
subl
test
loopne
testb
pop
or
in
add
jle
pop
fucomip
adc
and
lcall
addl
and
jbe
fisubs
jmp
xor
xchg
mov
rolb
fs
jae
mov
fistps
imul
ja
mov
add
cli
fsubrs
mov
ss
dec
mov
jb
mov
std
bound
xchg
sub
aas
cld
dec
pop
popf
mov
jmp
push
into
pop
ds
pop
mov
mov
test
movsl
cmp
sbb
fimull
lea
mov
add
xchg
mov
outsl
xor
pop
fidivrs
sub
adc
mov
pusha
loopne
adcl
fldenv
mov
sbb
xchg
leave
push
sahf
pop
dec
pop
push
dec
mov
in
mov
mov
xlat
loope
adc
inc
jmp
mov
fbld
push
inc
lock
xchg
inc
cmpb
dec
sahf
sti
add
jo
push
mov
mov
add
sbb
or
iret
push
mov
push
in
test
dec
push
pop
cli
dec
inc
data16
loope
pop
inc
add
xor
jecxz
call
add
dec
cmc
cmpsl
addr16
outsb
and
out
xchg
add
push
xor
lret
xor
sti
sub
push
mov
cmpsl
push
inc
lea
and
mov
pop
mov
mov
subb
mov
cmp
pop
lock
jecxz
in
xchg
pop
icebp
fwait
xchg
sbbb
in
mov
jnp
and
ljmp
sti
pop
shll
bound
jno
push
sub
cli
sbb
or
adc
les
iret
jp
test
pop
jle
test
scas
mov
sub
clc
orl
daa
ja
adc
jl
mov
adc
insb
dec
add
call
movsb
push
outsb
cmpsl
mov
jl
mov
lret
jle
lfence
cld
xchg
mov
outsl
jbe
and
sbb
and
push
enter
fistpl
lea
pop
cmp
fstl
push
mov
ror
xchg
test
dec
mov
dec
cli
cmpsl
or
and
out
mov
pop
shll
aam
jne
add
subl
cmp
mov
cmp
inc
adc
into
xchg
sub
xchg
clc
push
lcall
nop
popf
and
bound
repnz
lret
data16
rorb
test
leave
in
or
push
sbb
pushf
call
loop
adc
and
mov
test
test
ja
jnp
sbb
mov
jno
std
xsaveopt
adc
and
pop
inc
data16
or
lock
test
add
xor
mov
jle
mov
push
jmp
sub
je
popf
jmp
dec
in
shrl
xor
jp
data16
jb
pop
into
rcrb
imul
xchg
lcall
fldt
mov
fimuls
ljmp
push
pop
iret
push
jns
add
fsubl
mov
rolb
inc
pop
mov
mov
jno
imul
push
mov
mov
push
sbb
mov
mov
in
clc
ret
push
push
outsl
popa
jp
mov
cltd
sbb
enter
sub
push
mov
popa
pop
jg
stc
cs
sub
push
jl
nop
sarb
movsl
mov
ss
mov
and
ja
test
sti
out
push
call
repz
mov
sti
xchg
movsl
aas
jmp
stc
xor
sbb
jmp
rcrl
hlt
xchg
push
popf
adc
pop
rcr
sbb
dec
popf
inc
ss
popl
cmp
mov
cmp
neg
or
cmp
stc
sbb
mov
outsb
fdivl
test
xchg
lea
cld
pushf
shrl
cltd
enter
push
inc
inc
aam
cmpsl
push
pop
pop
cltd
and
movsl
push
jge
and
ret
das
mov
dec
cmp
loop
sbb
jnp
clc
outsb
mov
lods
nop
or
lret
lds
xrelease
dec
cwtl
fildl
inc
in
cmp
cmp
lret
cwtl
push
xor
mov
loop
orl
pop
lret
cmp
pop
sahf
mov
fwait
test
push
cmovb
addr16
leave
push
mov
lret
inc
push
fnstenv
scas
mov
hlt
adc
jl
and
insl
pop
inc
iret
pop
adc
cmp
xor
fs
rorb
ds
lcall
fcompp
jle
fdivrl
mov
les
icebp
adc
push
xchg
insl
out
rolb
idivl
sbb
pop
adc
jg
add
insl
xlat
addb
stos
outsb
sub
push
insl
inc
push
inc
scas
test
sub
hlt
out
ss
aam
arpl
out
xor
test
adc
in
mov
pushf
sbb
repnz
add
xor
jl
xor
jge
dec
aam
test
dec
pop
cld
push
mov
lahf
xlat
cmp
dec
sub
fcmovnb
cmp
aas
scas
lock
or
or
dec
sub
fidivl
data16
pusha
frstor
cmpsb
push
mov
pop
xor
pop
mov
sbbl
push
inc
push
or
xchg
lds
in
mov
ficomps
and
sbb
inc
lds
scas
lahf
adc
ret
jge
add
repnz
sbb
sbb
jecxz
mov
test
jbe
mov
flds
add
inc
push
outsb
lret
hlt
or
test
jmp
popa
arpl
or
call
loopne
dec
pop
or
loopne
jns
pop
mov
outsb
outsb
or
cmp
pop
dec
mov
cmp
fwait
daa
and
add
incl
mov
mov
mov
lea
or
ret
das
adc
fstl
xlat
insl
out
pop
xlat
pop
pop
aaa
xchg
jmp
roll
xor
adc
ss
scas
cmp
xchg
in
mov
stos
mov
add
jge
out
mov
out
and
dec
mov
mov
mov
in
and
mov
lods
int
add
cmp
sub
lret
mov
scas
gs
out
xchg
negl
jbe
adc
mov
push
jns
lret
dec
cmc
xor
shr
aas
and
or
in
ficompl
mov
std
and
inc
xor
sub
inc
bound
pop
cmpsb
fwait
and
loopne
ja
ficomps
clc
ja
sbbl
pop
int3
or
sbb
gs
mov
xchg
push
adc
dec
and
stc
mov
cli
fadds
sub
aaa
adc
ret
push
dec
push
push
inc
leave
lds
icebp
sub
xchg
divb
negl
sbb
inc
cmp
cmp
int3
fbstp
sub
ja
add
push
imul
fnstenv
fsubs
or
inc
cmc
adc
sbb
or
push
pop
ljmp
adc
jecxz
repz
sti
mov
divb
data16
movl
cmpsb
cmpsl
xchg
adc
add
sbb
test
stos
clc
add
dec
push
cld
xor
lahf
pop
shrb
lcall
adc
push
outsl
jo
iret
popf
in
mov
xchg
and
hlt
xor
leave
pusha
jo
repz
sbbl
mov
loop
pop
push
add
out
jno
aam
jnp
clc
pushl
cmp
out
fstpl
ljmp
lods
mov
insl
dec
pop
or
pushf
cmp
push
add
mov
insb
pop
mov
sti
aaa
add
adcb
aad
mov
int
adc
push
xchg
notb
test
ss
das
or
imul
fistpll
mov
jns
and
mov
test
mov
adc
push
stos
sbb
pop
in
mov
jns
pop
cltd
mov
into
stos
in
and
xrelease
outsb
push
in
pusha
lods
xor
daa
out
add
out
out
fwait
js
das
es
and
mov
push
inc
sbb
in
xchg
pop
pusha
mov
push
into
leave
sub
insl
pop
int3
jmp
fldcw
or
mov
fcoml
mov
xor
sub
hlt
icebp
into
mov
fwait
xchg
ret
push
mov
push
pusha
negl
shlb
adc
mov
and
and
lcall
inc
and
ret
insb
std
leave
adc
mov
dec
cld
stos
fnstenv
test
sbb
aaa
xlat
mov
clc
and
mov
addr16
mov
jmp
movl
gs
push
inc
xchg
cmp
push
jne
clc
mov
inc
cld
or
sub
push
mov
sub
pop
sbb
notl
mov
test
cltd
inc
loop
xor
cmpsl
fsubrl
dec
mov
popf
mull
call
xchg
and
jb
dec
inc
pop
sti
shlb
sub
jae
or
stc
mov
rorb
xor
push
pop
push
ret
out
sarl
pop
in
in
inc
out
fistl
xchg
cs
cmpsb
xor
xor
and
and
ds
fcomps
jl
jns
cs
inc
daa
push
push
inc
mov
addr16
add
mov
cmp
xchg
mov
push
and
dec
mov
mov
or
xchg
cli
mov
dec
mov
xchg
daa
xchg
mov
sub
in
xchg
mov
fwait
inc
push
jbe
test
sbb
pop
add
cmp
mov
mov
mov
ret
push
ljmp
test
mov
out
push
repz
pop
inc
dec
mov
icebp
and
nop
gs
jge
daa
sbbl
pop
repz
scas
or
xor
out
mov
fsin
popf
mov
pushf
mov
push
xor
and
lret
lret
fs
jbe
test
push
lea
sbb
xor
xlat
sbb
cld
mov
rcl
mov
sub
pop
icebp
sub
xor
ljmp
pop
push
call
cmpsb
into
pop
dec
loopne
int3
call
lcall
jno
loopne
mov
inc
inc
inc
mov
inc
mov
and
sub
test
adc
add
ret
jp
lcall
in
outsl
sub
out
pop
stos
sub
inc
adc
fs
repnz
leave
pushf
mov
adc
xchg
sub
gs
jle
pop
je
jb
xlat
incb
gs
push
add
pop
mov
and
xor
test
out
daa
out
xchg
ficoms
cmc
andb
lahf
fadds
cmp
lahf
jmp
push
dec
iret
shrl
es
in
push
pop
sub
in
in
mov
dec
and
pop
xchg
cmp
push
ret
aad
adcl
jl
mov
outsb
push
xor
inc
pop
cmpsl
or
divl
div
push
push
movsl
out
inc
es
lea
fwait
dec
int3
mov
mov
aad
and
or
cmp
mov
lds
adc
les
add
push
xchg
out
xchg
enter
fwait
pop
loop
sub
repnz
sbb
ficompl
add
decb
and
cmp
les
rorb
imulb
add
repnz
mov
sub
xor
push
adc
pusha
popa
inc
addr16
mov
ljmp
add
adc
dec
test
sub
mov
and
arpl
inc
mov
xor
push
sahf
add
jbe
cmpsl
pop
bsr
adc
push
and
add
push
mov
loop
jmp
mov
and
and
shl
daa
clc
sub
out
dec
xor
jbe
hlt
arpl
and
adc
jmp
clc
xor
pop
push
mov
scas
insl
enter
xchg
jp
mov
pushf
mov
repnz
sub
jnp
or
pop
test
iret
loopne
fstps
mov
mov
ljmp
outsb
rcrb
push
inc
mov
mov
loop
dec
frstor
lock
scas
push
dec
pop
fnsave
stos
fcomps
rcrl
pop
inc
add
mov
sbb
mov
jnp
shr
scas
cld
fnstenv
ret
stos
jb
in
xchg
push
cmp
lret
mov
imul
and
jmp
or
idivb
mov
and
cmpsb
mov
pop
inc
mov
rcl
mov
xchg
sbb
or
fistl
pop
fisttpl
mov
fildl
test
fildll
dec
test
jb
test
aam
fadds
loop
scas
ret
cmpsb
shl
out
dec
adc
mov
and
jl
push
cmp
es
xchg
lods
mov
push
lea
mov
ljmp
fistpll
pop
aad
sub
inc
outsb
fisubs
call
dec
jae
mov
adc
sub
in
jnp
push
mov
and
test
les
xchg
xchg
in
fcoms
fcomi
mov
pop
mov
xor
faddl
insb
push
pop
cmpb
lods
mov
mov
shl
xchg
xor
or
fs
negl
jmp
xchg
movsl
popa
cmp
jae
mov
push
xor
pop
ja
scas
js
loopne
xchg
das
jecxz
inc
out
je
push
stc
and
mov
jge
cli
les
sub
mov
push
std
stos
test
es
mov
scas
mov
flds
mov
xor
mov
stos
pop
stos
dec
inc
int3
add
push
mov
mov
add
lds
lret
stc
xchg
jecxz
pop
sub
jbe
mov
pop
cmc
pushf
adc
bnd
sbb
inc
pop
mov
addb
sub
loop
outsb
into
jo
ja
fadd
cli
lods
and
lock
jle
and
jnp
add
outsl
ret
mov
cmp
xchg
ss
push
js
sub
bound
jbe
js
mov
ja
jmp
adc
mov
cmpsl
mov
scas
inc
mov
test
sbb
mov
jecxz
lret
pop
mov
mov
fstpt
clc
cmp
testl
imul
mov
lea
setle
or
fbld
push
mov
lds
mov
leave
xchg
addr16
popf
add
pop
xor
lahf
mov
addl
mov
shrl
xchg
push
subl
out
mov
xor
out
pop
and
mov
gs
adc
cltd
jo
lods
fucomi
inc
pop
jl
mov
push
add
cmp
mov
hlt
outsb
arpl
jmp
pushf
fisubrs
dec
dec
xlat
push
mov
mov
mov
mov
mov
bnd
leave
loope
loopne
sbb
or
mov
mov
gs
inc
ljmp
cwtl
xchg
xchg
cmp
movsb
pop
xchg
jecxz
lods
nop
mov
inc
shl
or
xor
mov
and
adc
push
jnp
icebp
add
imul
push
jb
jl
push
pop
iret
pushf
and
shrl
and
and
pop
pop
shr
imul
adc
jno
push
mov
mov
xchg
adc
ljmp
cmpsl
and
ss
inc
das
mov
imul
les
jo
mov
fdivp
hlt
arpl
pop
lahf
push
mov
inc
ret
bound
loop
sbb
sbb
rol
inc
inc
or
in
lds
fists
xchg
ret
and
loop
mov
inc
jne
mov
stc
cld
cmp
inc
inc
out
and
sbb
xlat
ret
pop
jle
mov
cmc
daa
mov
cmpsl
mov
cld
stos
xor
rcl
push
dec
jle
xchg
or
dec
aas
addr16
inc
sbb
idiv
daa
icebp
imul
xchg
xchg
shll
test
mov
xor
dec
or
cs
es
fs
decl
sub
xchg
adcl
out
sub
js
pop
fbld
and
sbbl
orl
pop
testl
cmp
aad
es
sub
mov
aam
ficomps
outsb
roll
in
daa
pop
cmp
push
dec
jne
inc
icebp
orl
cltd
jmp
push
test
sarb
xchg
decl
outsl
in
xor
pushf
fwait
aas
aam
int3
add
add
test
das
jecxz
ror
mov
cltd
dec
cmpsl
inc
jne
div
push
ss
addb
pop
pop
icebp
shrd
jg
test
cmpsb
gs
incl
mov
mov
icebp
out
rol
cmpb
inc
mov
les
dec
pop
and
stc
test
or
xchg
mov
icebp
ljmp
mov
arpl
sbb
jge
movsl
xchg
lcall
insb
rcr
push
scas
cmpsl
inc
mov
cmpsl
out
cmpl
inc
cwtl
adc
ljmp
loop
mov
jmp
cmp
rol
out
insl
add
roll
or
mov
cmp
sub
pop
cmp
ljmp
or
test
icebp
jecxz
inc
ja
aad
popf
mov
pushf
call
dec
adc
jg
in
fildll
jle
cld
pop
es
adc
fcoms
nop
fs
repz
push
pushf
gs
imul
cmc
lahf
aam
rorb
mov
mov
push
sbb
hlt
mov
inc
sbb
jmp
out
leave
xchg
inc
sbb
dec
xor
sub
cmp
fsub
pop
test
addr16
and
ret
inc
test
in
sub
arpl
xor
in
movsl
add
out
push
dec
ret
into
in
in
outsb
outsl
mov
outsb
cmpsb
call
outsl
dec
pop
mov
inc
and
mov
jecxz
sub
fcmovnu
loope
fcomp
lret
sbb
mov
in
pop
sub
jbe
xchg
push
jge
mov
cltd
out
lea
mov
je
sub
stc
pusha
cwtl
adc
lock
pushf
adc
imul
pop
ljmp
mov
fildl
xor
in
movsl
or
shll
dec
loop
lods
and
jae
in
daa
mov
pop
shrl
push
add
jns
cltd
sub
fdivrl
repnz
out
mov
add
mov
xor
dec
mov
test
iret
xor
mov
cmpsl
outsb
les
inc
lock
lahf
movsl
jge
fs
inc
shl
movsl
les
mov
push
dec
into
pusha
stos
mov
and
fwait
pop
aad
lret
jmp
les
xchg
mov
in
sbb
cmp
fxch
fdiv
sbb
lcall
sbb
jle
ds
push
and
xchg
cltd
push
push
xor
aad
pop
aas
mov
in
out
and
jge
leave
sub
mov
popf
icebp
cmc
add
xchg
mov
inc
lods
cmp
push
cltd
mov
pop
and
cmp
mov
scas
lods
cmp
insb
je
inc
ficoms
fdivs
in
pop
jge
mov
inc
push
jb
bound
rol
mov
fsubr
out
dec
loop
push
inc
icebp
xor
gs
jns
or
sub
jecxz
sbb
adc
jle
and
mov
mov
lret
or
lcall
mov
out
test
push
sarb
andb
sti
std
mov
clc
xchg
mov
shll
popf
call
js
xor
cmp
jb
xchg
mov
jbe
pop
push
lds
mov
sbb
adc
in
icebp
push
fmuls
rolb
lret
in
rcrl
adc
mov
lods
xchg
filds
out
arpl
shlb
sbb
scas
add
std
jne
out
lds
or
gs
cmp
mov
cmp
imul
mov
dec
loope
mov
lahf
ss
and
dec
mov
dec
lahf
jnp
aam
xor
jge
pop
xchg
inc
iret
or
dec
jl
and
sahf
dec
jo
shl
push
jne
push
out
mov
jb
pop
fs
inc
adc
or
fiaddl
pop
sbb
xlat
sub
mov
xlat
lds
repnz
cmp
lods
mov
ja,pn
push
adc
bound
mov
sahf
sbb
mov
sub
dec
sbb
lcall
clc
xchg
sbb
mov
js
sub
push
pop
sbb
scas
xor
pop
cmp
pop
mov
push
mov
lods
xchg
sub
aaa
mov
mov
ja
dec
inc
or
decl
sbb
push
xor
add
out
xchg
xchg
pusha
dec
mov
or
fdiv
mov
adc
aas
pop
mov
sub
jne
push
jnp
pop
flds
mov
hlt
dec
movsl
jnp
lret
cmp
push
mov
and
stos
lret
jle
xlat
lret
lret
inc
mov
arpl
sub
xchg
push
cmpsb
sub
popa
mov
nop
and
pop
rolb
xor
not
mov
push
outsl
adc
test
insb
xchg
lcall
clc
mov
cmpsl
ss
cmp
test
ret
lret
push
aam
mov
popa
and
movb
xor
nop
mov
js
xchg
or
iret
xorb
jg
sbb
jb
loop
add
aam
rcr
into
ret
mov
xor
jne
dec
in
dec
inc
adc
inc
xchg
cwtl
fisttpll
lods
dec
xor
data16
mov
fisttps
and
pop
pop
divl
inc
bound
xchg
inc
imul
jg
xor
sar
cmpl
mov
dec
inc
add
fsubrs
add
arpl
jb
jge
sbb
cmpl
cli
fisttpll
dec
jns
inc
sub
pop
sub
cmp
cmp
jae
ljmp
fnsave
cmp
push
mov
or
xor
pop
push
sub
lods
and
jl
sub
xor
mov
pop
jns
xor
xchg
sub
mov
shlb
or
loopne
fucomp
dec
lock
mov
shr
aam
into
jnp
dec
ds
or
imul
ss
mov
fbld
and
out
int3
sti
outsl
pop
repnz
outsl
inc
jbe
shrb
dec
into
iret
ss
data16
dec
sub
and
cmp
add
repz
out
lahf
out
sub
fmull
aad
dec
mov
repnz
mov
mov
sub
mov
cmc
inc
das
pushf
leave
push
push
dec
jo
insl
nop
or
leave
fildll
lods
jae
int3
adcl
and
sub
or
out
jp
push
stc
les
fstpt
sbb
jnp
inc
jge
xlat
or
dec
and
outsb
mov
cmp
pusha
and
xchg
or
std
push
lods
and
xchg
and
pop
inc
outsl
rcr
inc
sbb
repnz
popf
push
hlt
mov
test
jno
adc
sbb
sub
push
loope
clc
popf
das
pushf
inc
and
int
mov
and
fs
fwait
or
and
mov
jns
xlat
lods
xchg
cmc
mov
mov
test
std
out
xlat
jmp
mov
dec
mov
nopl
rcrl
sbb
jmp
pop
adc
daa
jecxz
pop
pop
add
lcall
loopne
rcl
je
out
inc
jp
jge
sub
cmp
jo
insb
mov
jle
das
jbe
aad
adc
dec
cld
xor
lock
imul
nop
push
push
scas
pop
sti
addr16
add
sbb
push
and
mov
ds
mov
aam
xor
jp,pn
fdivrl
mov
mov
jne
push
pop
pop
mov
xchg
fs
roll
jns
out
or
aam
add
xor
test
and
sub
lcall
sub
lods
adc
dec
sti
xchg
pushf
addr16
test
pushf
push
bound
push
sub
subb
pop
loop
cmpsl
or
lods
mov
pushf
and
jo
cmpsb
jge
push
cmp
dec
cwtl
aaa
push
mov
xchg
mov
daa
ret
inc
push
leave
or
jne,pt
adc
sbb
in
mov
inc
mov
jg
inc
inc
in
insb
push
pop
mov
mov
aam
jmp
mov
mov
add
call
fucom
insb
jo
hlt
dec
mov
and
dec
mov
insb
push
and
push
enter
push
test
daa
int3
cmpsb
cmpsl
mov
mov
and
xor
sarb
jge
pop
sbb
inc
dec
pop
add
mov
lds
inc
out
test
shr
sub
outsb
xchg
rol
cld
xlat
mov
sbb
stc
imul
mov
sub
addb
in
stos
mov
pop
das
pop
sbb
xchg
sbb
mov
sub
mov
push
mov
pop
xchg
and
push
and
pop
sbb
xchg
sub
mov
cmp
pop
and
mov
int
push
fidivrs
in
sbb
jnp
ss
repz
or
mov
dec
out
cmp
push
ja
js
in
fsubs
loopne
xor
mov
fincstp
xchg
loop
mov
jle
dec
pop
mov
addr16
mov
and
pop
mov
insl
mov
pop
jge
and
jg
inc
sub
scas
gs
mov
xor
xlat
nop
sub
inc
leave
and
dec
inc
popf
lcall
or
mov
push
cs
jns
cmp
adc
add
lret
ljmp
cmp
or
pop
xchg
inc
xchg
mov
ja
xchg
and
xchg
sub
cltd
lea
fs
add
loop
out
inc
xchg
bound
mov
xchg
shll
orl
loop
or
or
test
repz
into
jnp
xor
js
adc
enter
call
out
cmp
dec
faddl
pop
xlat
adc
and
daa
pop
aas
add
or
cmpsb
lahf
push
rcll
faddl
fst
loope
loop
mov
pop
sti
jmp
xchg
stos
lahf
push
sub
out
mov
mov
mov
inc
lret
mov
push
jge
popf
push
repnz
or
mov
jne
stc
inc
mov
es
popa
sbb
pop
pop
lock
mov
rcll
xchg
sub
fstps
jl
imul
or
jb
add
or
dec
push
dec
mov
hlt
out
xchg
int3
add
dec
add
mov
or
mov
xchg
montmul
cmpsb
add
aaa
mov
popf
jle
sub
stos
rorl
fcoms
push
test
das
pop
fadds
xchg
xchg
cmovnp
push
fs
aaa
xlat
mov
cmp
jle
in
bnd
jae
popf
in
test
xchg
popf
cmpsl
push
mov
sub
push
fldl
xchg
ficoms
loopne
dec
inc
dec
aam
ljmp
lock
push
rolb
mov
loop
cs
cmp
repnz
aas
jb
xor
xchg
pop
and
loopne
xchg
out
stc
pop
push
mov
imul
cld
mov
lcall
mov
cmpsb
rorb
jns
xlat
lret
and
je
adcb
cmpl
xchg
sbb
mov
cmpl
dec
push
xchg
int3
cld
jmp
sub
pop
filds
test
dec
push
sbb
cmp
and
cld
mov
jnp
and
sahf
mov
enter
loope
xchg
or
mov
mov
in
test
mov
pusha
cli
testb
push
aam
ret
jge
les
out
cmpsl
cwtl
arpl
sbb
outsl
idivl
stc
iret
add
pop
cltd
pop
pop
pop
pop
stos
ljmp
repnz
fld
push
mov
mov
mov
sub
ja
cmp
xchg
lea
dec
push
insb
sub
sub
mov
adc
sbb
xchg
and
sbb
arpl
les
mov
jle
adc
fwait
repz
adc
addb
fs
mov
fs
lret
mov
xor
sub
aad
xchg
mov
mov
dec
push
lea
cmpsl
xor
push
adc
insl
xor
mov
sub
inc
lret
jbe
adc
and
mov
int3
sub
sahf
lods
mov
and
imul
enter
testb
inc
xchg
je
scas
dec
leave
push
leave
movsb
out
mov
ds
xchg
pop
popa
mov
sub
xchg
arpl
add
mov
mov
xor
je
push
lret
das
push
push
xlat
push
enter
mov
or
fucomi
pop
add
outsl
or
hlt
mov
add
mov
movsl
dec
test
mov
xlat
cwtl
xchg
ret
adc
sti
mov
loop
lcall
divb
and
jmp
pushf
ret
out
inc
xor
mov
out
ljmp
in
sbb
jecxz
xchg
mov
repnz
sti
mov
sub
out
inc
and
mov
or
stos
rorb
std
xor
adc
jb
adc
lcall
push
aad
push
adc
jb
je
shr
xchg
insb
mov
inc
inc
mov
push
jb
cwtl
jmp
pusha
sub
push
and
ds
sub
xchg
or
sbb
pop
insl
inc
hlt
or
cltd
cwtl
inc
fucomi
enter
rorl
push
dec
subl
and
addr16
add
pop
cld
cmp
aam
in
xor
add
lea
mov
aas
repnz
roll
add
xor
mov
cmp
sbb
in
adc
dec
pop
cs
adc
outsb
push
adc
lods
out
cmp
dec
xor
mov
call
xor
and
xchg
mov
mov
lahf
xchg
lahf
enter
sbb
cmp
mov
outsl
dec
adc
pop
or
or
lds
or
loope
push
jle
into
cmp
mov
xor
pop
popa
aam
fisubs
mov
mov
stos
jns
mov
scas
pushf
add
jbe
xchg
shl
xor
lds
cmpsl
bound
mull
xor
adc
dec
mov
sbb
aas
loop
mov
or
push
add
sbb
movsl
jae
cli
or
dec
adc
in
mov
push
stc
add
add
stos
sub
stos
pop
push
jno
data16
cmp
addb
jo
xchg
mov
adc
dec
jl
repnz
into
scas
push
mov
push
nop
mov
shl
mov
mov
dec
stos
push
fwait
lret
mov
sub
add
xchg
lds
data16
addr16
not
shrl
xorb
cmp
adc
xor
mov
or
sbb
xchg
xchg
cmp
outsb
cltd
mov
and
out
arpl
mov
xor
adc
movsl
dec
mov
mov
fwait
adc
jp
adc
mov
aaa
or
adc
notl
jp
pop
shlb
push
out
mov
adc
push
pop
mov
dec
or
mov
mov
int3
or
inc
or
mov
cmp
adc
in
cs
loop
push
movsb
hlt
into
mov
mov
enter
ljmp
aam
test
jmp
adc
sub
enter
mov
ds
push
fcoml
push
test
mov
cmpsb
in
psubb
push
insl
inc
mov
add
mov
and
and
inc
cmpb
fsubrl
mov
add
jp
xor
mov
mov
and
mov
popa
cmc
scas
inc
jp
mov
lods
cs
lcall
adc
adc
loope
in
sti
cmpsl
mov
xor
dec
dec
in
ret
mov
lods
aad
mov
cs
out
ret
xchg
mov
es
add
sbbb
sbb
pushf
lahf
out
fdivrs
loopne
dec
lods
fimull
and
mov
push
scas
aam
nop
pop
mov
bound
push
movsb
test
movsb
jge
arpl
xchg
repz
mov
in
cmp
scas
push
stos
mov
mov
jnp
cmp
icebp
sub
fidivrl
shll
fidivrl
lds
mov
roll
sub
push
popa
std
pop
jl
mov
scas
cmp
inc
xchg
nop
adc
and
das
popf
sti
lahf
lret
add
xchg
cld
cmp
in
xor
and
inc
out
sbb
sar
xchg
adc
inc
push
mov
pop
stos
sbb
lret
jp
push
int3
out
insb
imul
adc
test
mov
shr
movsb
mov
dec
cmpsb
jo
push
js
mov
jg
outsl
scas
xorb
lock
inc
cmp
xor
xchg
notl
mov
dec
leave
rorl
fildl
adc
dec
mov
sbb
test
push
into
jb
pop
lds
sahf
jg
push
test
dec
inc
leave
out
jg
inc
mov
les
fnsave
and
das
and
cmp
in
push
push
sbb
jne
hlt
mov
add
in
andl
add
jle
cmp
inc
inc
mov
sbb
sub
mov
add
enter
out
pop
push
testb
cmp
dec
movsl
movsl
jbe
mov
lret
adc
jo
mov
mov
sub
imul
gs
dec
sub
jo
jg
dec
or
add
lret
xor
rorl
ds
push
subb
add
xchg
inc
add
mov
mov
cmc
movsl
mulb
loop
movsl
add
rclb
inc
dec
pop
dec
push
dec
pop
addr16
sbb
cwtl
fiaddl
sub
mov
dec
inc
mov
cld
pop
mov
xor
leave
add
inc
push
je
cmp
test
insl
int
jnp
sbb
repnz
addr16
in
scas
shlb
fbstp
shlb
sbb
daa
pop
and
push
inc
cmp
cltd
mov
movsl
add
push
push
sarl
mov
sub
push
pop
mov
js
aam
jne
and
lret
sbbl
in
aaa
repnz
push
bound
in
test
cmc
movd
nop
xor
mov
popa
hlt
xchg
and
inc
scas
cld
push
ret
cmp
inc
cmp
sarb
jge
cs
dec
cmp
imull
xor
pop
iret
mov
pusha
pusha
and
daa
call
fld
arpl
sub
mov
mov
xchg
js
movsl
icebp
dec
and
loope
test
add
xchg
xor
insb
jno
sbb
fwait
jo
mov
cmp
pop
mov
insl
icebp
and
and
xor
mov
nop
das
xchg
push
push
and
jl
ds
jae
push
cmp
ret
incl
mov
mov
scas
test
mov
loopne
bound
sub
mov
movsb
and
iret
mov
fsts
cltd
insl
sahf
popf
jle
addr16
mov
add
mov
sub
add
fwait
cltd
leave
jp
imul
cwtl
dec
and
enter
repz
out
lahf
or
rcrl
insb
push
out
inc
shll
mov
push
fs
and
fistpl
mov
or
test
les
sbb
pop
jae
mov
orl
fisttps
cld
adcl
bswap
push
xchg
xchg
add
push
sbb
mov
je
pushf
cli
add
push
mov
xchg
in
inc
xchg
lcall
les
jecxz
das
sub
movlps
dec
jg
mov
in
jecxz
mov
js
sarb
pop
push
popa
mov
xchg
loopnew
loop
push
iret
outsb
es
and
gs
arpl
aam
fsubp
idivl
int3
shll
jae
jecxz
test
pop
and
cmp
push
lods
int3
or
repz
lds
scas
sti
fildl
popf
into
aaa
shl
stc
sub
cmp
mov
cld
loopne
jle
xor
push
sub
push
or
int3
fmull
movsl
je
sub
sbb
insl
test
outsl
lds
fnstenv
jp
pop
cmp
dec
adc
fwait
jns
xor
mov
fs
jae
js
test
mov
scas
cmp
lret
hlt
push
jno
xchg
fcompl
ja
in
cmp
mov
xor
sub
push
pusha
in
jae
sub
pcmpgtw
push
mov
int
sub
inc
cmp
mov
fmul
fcoms
cmp
pop
out
or
inc
jg
ja
rclb
sub
push
bound
push
cmp
rorl
stc
fs
int
in
fdivrp
add
jle
out
in
imul
lods
jp
ret
lcall
aam
sbb
pop
xchg
clc
inc
adc
in
or
inc
fucomp
mov
add
cmp
cmp
sub
push
sarl
dec
aas
or
sarl
add
popf
fs
mov
test
iret
push
cmp
testb
add
ficoms
inc
sub
dec
ret
cmp
push
mov
mov
xlat
inc
cmp
es
xchg
or
or
xchg
mov
pop
inc
repnz
sar
lret
pop
and
icebp
sbb
lds
jb
mov
jecxz,pn
cmp
fildl
xor
mov
sbb
mov
sbb
or
xor
and
jmp
pop
in
mov
lahf
ljmp
xor
ror
cmp
adc
in
pop
fists
out
ficoml
dec
xor
cmpsl
jecxz
iret
pop
push
push
pop
leavew
mov
scas
push
jge
mov
mov
cmp
stos
mov
das
cmc
pop
dec
scas
sbb
pop
mov
call
or
xchg
in
dec
sbb
mov
add
jp
ror
test
rep
sub
cmp
dec
adc
or
or
ja
scas
bound
ja
test
orl
sarb
inc
cld
dec
add
add
shlb
pop
loop
cwtl
xchg
lret
mov
mov
push
call
scas
lods
in
xlat
push
mov
lods
or
repz
xor
and
bound
dec
mov
ret
cmp
push
popf
push
pop
mov
loope
cmpsl
mov
cltd
insl
stos
mov
xor
fsubr
fwait
repz
cmpsb
aam
ds
cs
jmp
mov
jae
movsb
sub
loope
cmp
inc
push
mov
sbb
xchg
xlat
repz
movsl
push
pusha
movsb
dec
mov
insb
pop
shlb
mov
sbbb
cli
dec
jne
ret
in
cmp
push
nop
or
cltd
in
jno
out
es
in
push
shrb
cld
xchg
adc
sar
mov
dec
pop
divl
imul
xchg
movsl
test
inc
push
js
sub
xchg
and
sbb
dec
xchg
push
or
inc
or
cmp
fildl
sahf
add
aas
je
scas
pop
testb
lea
jb
xchg
jge
lods
je
movsb
mov
shlb
stos
sbb
pop
test
aad
pop
cmp
inc
loope
shlb
iret
pop
scas
mov
es
rcrl
adc
popf
cmc
stc
rorb
inc
pop
outsb
ret
movsl
add
into
sbbb
ror
xor
fildll
repz
mov
pushf
dec
roll
push
testl
insl
jl
xor
xchg
rorb
mov
push
cmp
jl
clc
dec
mov
mov
sbb
hlt
test
out
fisubl
pop
dec
sti
mov
negb
les
pop
sub
test
rolb
inc
lret
sahf
sub
sbb
fcmovnb
lock
enter
add
push
mov
mov
mov
imul
outsb
pop
shll
leave
jb
in
call
sbb
ret
lcall
push
dec
insb
or
and
ret
or
nop
pop
out
stc
xor
jne
es
sbb
mov
mov
add
fistpll
push
xor
mov
pop
out
push
into
stos
das
jnp
pop
pop
shrl
push
dec
pop
sti
mov
cmp
in
cmp
inc
and
int3
lods
fnstcw
sbb
aas
call
xchg
or
xor
insl
enter
stos
xor
fs
rcl
subl
xor
pop
xor
call
xchg
out
push
sub
inc
andl
sbb
cmp
jns
xorb
jb
lods
inc
push
std
lahf
mov
dec
adc
dec
or
andb
fcmovnu
repz
clc
cmp
addb
ss
mov
sub
or
xlat
adc
sub
icebp
and
clc
int
fsubrs
push
or
jecxz
sub
js
call
nop
lods
out
andb
cmpsb
dec
and
out
mov
dec
pushf
dec
sub
sub
sub
fldt
std
mov
xor
in
pusha
lcall
mov
mov
mov
mov
subl
jg
stos
mov
in
jo
aaa
addl
push
add
mov
xor
cmpsl
or
mov
cli
scas
and
or
outsb
pop
adc
push
jecxz,pn
ljmp
rolb
cmc
leave
movsl
jns
mov
std
or
testb
dec
lds
fwait
pop
cmp
jb
xchg
jmp
orb
sbb
cmp
jno
mov
mov
fldcw
jbe
pop
nop
push
aam
in
jp
mov
in
sub
hlt
sub
jl
mov
cltd
dec
stc
loop
sub
add
cmpb
jne
adc
add
pop
sbb
mov
adc
pop
sbb
sar
fs
push
push
xchg
xor
add
subb
sbb
mov
pop
jnp
xchg
fisubs
pop
daa
sub
mov
outsl
inc
sub
fdivrl
sub
pop
std
mov
cmp
pop
jae
mov
cli
lods
rorl
stos
cli
adc
mov
and
sbb
add
lret
les
aam
or
rcl
out
outsb
addr16
and
push
mov
sub
jbe
xchg
push
and
sti
ds
movsbl
imul
mov
cld
inc
iret
pushf
imul
divb
outsl
shrb
jecxz
and
rorl
pushf
icebp
into
push
cs
cmp
sbbl
or
ja
or
ss
push
cld
enter
notl
or
ljmp
dec
xchg
cltd
cs
lods
and
mov
stos
stos
cmp
dec
lret
rcrl
jnp
jge
cmp
cmpsl
pop
negl
jmp
xor
xor
fistps
repnz
subl
add
out
push
adc
fmuls
cli
out
add
jnp
mov
enter
fisubl
cmp
adc
repz
xor
lret
sub
out
daa
jle
dec
call
push
lcall
mov
xorps
xchg
pop
enter
pushf
dec
lea
pop
daa
mov
dec
mov
pusha
mov
dec
push
add
sub
iret
mov
inc
inc
addr16
out
nop
inc
cltd
jg
pop
mov
stos
xlat
xchg
mov
outsb
dec
out
mov
push
xchg
xchg
mov
enter
push
movaps
xchg
pop
dec
nop
xchg
adc
sub
jbe
xchg
push
dec
icebp
pop
sub
lcall
daa
out
mov
jb
xchg
nop
cmp
pop
jmp
push
cmp
pop
add
stos
mov
popa
and
xor
pop
or
mov
pop
sbb
dec
jb
dec
mov
jbe
insb
je
sbb
inc
sbb
add
cwtl
dec
jge
lock
cld
jae
jo
xchg
test
inc
enter
insb
mov
test
rcll
shlb
xor
sbb
inc
mov
dec
pop
ljmp
orl
test
jno
and
in
fs
sarb
cs
mov
lret
xor
mov
mov
adc
and
mov
in
ss
dec
xchg
pop
sbb
faddl
mov
jg
mov
inc
mov
mov
insb
shrb
mov
lods
insl
and
retw
push
pop
jg
cmp
adc
imul
mov
shlb
sub
idiv
loopne
push
jno
cmp
cmp
jl
imul
jp
mov
add
mov
push
mov
andb
xor
testl
and
sbb
js
leave
repz
stc
xchg
ds
adc
push
xlat
out
jg
push
mov
loop
es
dec
mov
add
mov
mov
adcb
xor
pop
sub
cmp
fstps
or
push
push
inc
xchg
jl
test
mov
rorb
lcall
std
jne
sbb
in
scas
dec
jmp
cmp
mov
icebp
xchg
sbb
insl
rorl
inc
dec
pop
xchg
or
jg
loop
bound
iret
sahf
adc
xchg
mov
mov
mov
push
pop
addr16
lods
pop
or
insb
inc
out
xchg
push
lea
inc
pop
cmp
inc
mov
testl
mov
push
sbb
mov
xchg
xchg
mov
mov
andl
inc
dec
push
inc
fs
adc
loop
push
aas
adc
je
lods
out
stos
cmp
dec
call
movsl
xchg
sbb
jmp
sub
jbe
pop
notl
add
and
ljmp
daa
or
or
and
test
imul
popf
cmc
imul
dec
push
insb
mov
mov
arpl
test
enter
mov
push
scas
aam
aas
adc
rcll
add
xchg
cld
lahf
sub
xor
lock
add
dec
lret
mov
xchg
lret
sbbb
mov
rorb
out
aad
rcll
mov
andb
ds
iret
lods
stos
ss
jbe
xor
std
push
mov
jbe
xchg
into
cmc
pop
dec
jbe
mov
jge
and
and
stos
dec
xchg
jb
push
push
subb
std
ss
xchg
mov
sub
lahf
aam
xchg
pusha
jns
adc
sahf
dec
xchg
mov
pop
push
cltd
jo
dec
in
or
inc
inc
jbe
cmp
mov
or
imul
lods
inc
cmpsl
push
js
pop
ljmp
in
aad
das
jne
and
adc
adc
push
inc
lea
jmp
xchg
repz
aam
xchg
sub
jbe
into
sbb
mov
jecxz
mov
add
xor
aas
cmp
insb
aas
shlb
push
adc
das
and
dec
in
inc
shl
jb
call
pushf
lret
out
insb
and
pop
sub
cmpsl
ret
imul
imul
xchg
sbb
and
addr16
shrb
sbb
in
sbb
test
pop
push
gs
mov
push
ja
jecxz
enter
cltd
adc
test
insb
mov
push
dec
and
pop
push
imul
jns
lds
xchg
cmpsl
ret
lret
inc
lret
jo
xchg
test
sbb
or
inc
and
call
lret
inc
ljmp
pop
adc
inc
inc
outsb
pusha
jl
inc
div
and
and
xor
insb
test
cwtl
mov
aas
push
jmp
lds
xchg
sbbl
adc
call
sub
sbb
sub
inc
push
jp
and
loope
ficoml
or
sbb
enter
leave
jne
mov
scas
mov
dec
lock
lds
jp
popa
mov
pop
sbb
in
push
push
ljmp
xor
pusha
or
cwtl
xor
addr16
dec
jle
xor
add
sarl
mov
ljmp
sub
jl
push
in
popf
mov
addr16
pop
fs
cmp
addr16
les
das
adc
inc
pop
insl
rcrl
ljmp
sbb
je
mov
fs
sub
sar
add
leave
mov
insb
adc
adc
insb
mov
or
mov
and
sub
fistps
ja
xchg
and
loopne
jno
nop
xchg
sub
push
and
jo
add
decl
jae
int3
repnz
inc
sbb
lds
sbb
fadds
enter
int
jmp
imull
jp
sbb
adc
sbb
mov
xchg
cmp
mov
xchg
repz
dec
mov
cwtl
jo
mov
pop
leave
movsl
gs
int
stos
adc
rorl
xor
xchg
lods
sub
mov
int3
jp
dec
repz
test
cmp
movsl
in
push
shrl
xchg
pop
mov
cmp
xlat
inc
jo
push
push
pop
push
xchg
push
pop
or
mov
repz
dec
scas
out
iret
mov
jae
shlb
sub
es
mov
and
mov
out
mov
into
add
sbb
call
sbb
xorb
cmpsb
xchg
lcall
cmp
addr16
scas
lds
push
cltd
cmp
cmc
int3
add
lcall
std
mov
cmc
sbb
xchg
and
add
inc
mov
dec
push
mov
insb
push
or
mov
mov
mov
imul
jp
outsb
ds
ljmp
adc
xor
xchg
cmp
jge
push
dec
push
xor
ret
test
insb
inc
call
sub
and
aam
push
addr16
mov
fsts
pop
dec
movsb
mov
flds
xor
cmpsb
js
je
aas
loop
inc
enter
js
adc
mov
mov
push
add
sti
xchg
lods
les
jae
jb
shrl
ds
cwtl
aaa
adc
testl
test
iret
out
mov
mov
int3
loope
jg
cmpsb
test
add
mov
std
lods
cmp
xlat
jno
sbb
orl
mov
daa
in
sbb
stos
test
popl
push
cmpsl
sub
xor
lret
lcall
in
and
les
xor
add
sbbl
dec
mov
add
xlat
jns
adc
std
ljmp
xor
xchg
mov
jnp
cmp
ss
sbb
fisttps
xorb
ret
and
ret
mov
push
lods
add
idivl
insb
arpl
ss
pop
jge
xchg
pop
xor
pop
xor
aas
mov
mov
inc
rcll
leave
xchg
mov
test
cmp
add
ret
xchg
xorl
incb
leave
repnz
notl
faddl
cld
loope
inc
imul
sbb
cmc
sub
pop
sbb
pusha
xchg
pop
xor
jnp
mov
pop
or
dec
iret
aas
aad
scas
out
pop
jp
mov
adc
sahf
or
mov
sbb
dec
dec
or
ret
scas
loope
icebp
cmp
negl
sbb
inc
inc
pop
jbe
sahf
addb
ret
adc
xchg
adc
and
and
dec
test
jg
js
add
sbbl
jl
push
pop
pusha
mov
pop
arpl
mov
pop
xchg
ds
pop
mov
pop
nop
pop
dec
xchg
dec
sbb
or
incb
fildll
cld
lds
ficomps
sbb
fdivs
add
stos
mov
inc
cmp
cltd
mov
fwait
mov
loopne
andb
adcb
adc
xor
xor
cmp
mov
adc
hlt
pop
xor
jbe
roll
sahf
jae
or
pop
mov
aad
add
xchg
mov
imul
lret
call
jno,pt
je
rcrb
movsl
xlat
mov
clc
mov
mov
mov
xchg
jb
sub
faddl
or
addl
hlt
xchg
insl
ja
cmp
inc
stos
adc
sahf
das
xchg
mov
xchg
cmc
pushf
pusha
call
adc
add
sarl
push
cltd
or
jno,pt
mov
mov
xchg
pop
andb
xorb
lret
jle
jns
mov
into
aam
sub
out
sbb
lock
cmp
pop
jb
sub
cwtl
xchg
cmp
in
mov
xchg
sbb
sub
push
or
loopne
jo
and
add
je
gs
sahf
repnz
xlat
arpl
and
dec
jecxz
imull
clc
mov
pop
fwait
ret
inc
lret
push
sbb
daa
dec
lret
cmp
outsl
cmc
pop
mov
std
pop
pop
sbb
arpl
cmpsl
pop
add
movsl
dec
mov
inc
fnstcw
sti
test
xor
lock
jmp
mov
xchg
add
ret
lret
in
into
cwtl
pop
xor
daa
leave
dec
xor
iret
sti
pop
adc
test
mov
adcl
adc
mov
push
inc
cld
out
adc
popa
mov
dec
lret
data16
dec
jnp
jno
idivl
andl
xchg
movsl
daa
xchg
scas
mov
jae
sbbb
push
sbb
fidivs
mov
bound
aad
es
mov
leave
pop
pop
outsb
adc
fwait
sbb
scas
xor
in
sahf
ret
push
scas
inc
insl
pop
push
outsl
mov
ljmp
lcall
or
sub
mov
and
jnp
rolb
mov
shlb
jne
xchg
push
mov
inc
adc
int
jb
mov
mov
mov
enter
and
ffree
jecxz
jecxz
movb
adc
mov
xor
out
inc
and
scas
cmc
mov
pusha
xorb
inc
xchg
adc
cmp
pop
into
and
and
pop
mov
push
inc
insl
sbb
scas
insl
lock
fsubp
xchg
and
jmp
enter
pushf
xor
jbe
lods
push
mov
xchg
inc
stos
pop
fisubl
push
push
out
jp
jbe
adc
je
xor
sbb
and
cmpsl
int3
cmc
fmul
fwait
jge
pop
and
xchg
xchg
shl
xchg
xlat
push
jg
cmp
daa
shl
mov
add
xlat
sbb
test
cmp
mov
insl
xor
xor
scas
sub
rol
xchg
in
aas
mov
mov
push
mov
adc
cmp
shlw
in
fs
lods
jecxz
iret
sub
scas
jp
sub
iret
inc
aaa
mov
xlat
stos
les
mov
bswap
mov
jno
mov
out
jnp
mov
bound
ret
test
ret
pop
int
dec
and
dec
jb
dec
lods
cli
jo
jo
mov
ss
jmp
push
cs
aaa
mov
adc
push
cmp
daa
rorl
sub
sahf
ljmp
jns
mov
jno
push
insl
mov
cmpl
mov
repnz
xchg
pop
pop
push
cmp
mov
and
pushf
fdiv
fsubl
call
push
fs
push
vpavgb
daa
jb
fisttpl
das
xchg
cmp
adc
sbb
in
cld
or
dec
out
sub
arpl
push
outsl
mov
cmpsl
pop
pop
cmp
out
pop
sbb
or
sbb
xor
pop
pop
cld
mov
pop
xlat
jmp
push
inc
mov
xchg
nop
test
subb
push
or
push
add
or
insl
adc
push
hlt
mov
push
mov
push
mov
fldcw
mov
ds
aas
outsl
lods
pop
adc
sub
in
aas
fwait
pop
pop
mov
pop
daa
jo
pop
mov
push
repnz
jle
out
push
pop
jl
fstps
popl
ja
stos
ret
inc
pushf
dec
data16
movsl
shrb
xchg
or
test
inc
popf
jmp
imul
xlat
std
mov
xchg
sbb
stc
inc
or
xchg
in
bound
mov
sub
cmp
cmc
addr16
les
mov
loopne
dec
daa
mov
push
fbld
jecxz
pop
cmpsb
lret
shll
clc
hlt
cs
shll
sbb
and
test
adc
loopne
pxor
das
sbbl
or
jb
and
mov
jg
sar
loope
in
loopne
or
mov
out
mov
dec
sbb
fdiv
mov
arpl
repnz
xchg
pop
cmp
movl
cmp
addl
repnz
fidivl
adc
imul
data16
and
jmp
add
dec
insl
mov
jno
aaa
out
iret
or
xlat
scas
in
add
scas
sbb
loopne
jp
sbb
xlat
inc
pop
into
popw
loope
fbstp
je
xor
shlb
sahf
dec
lds
xor
cltd
sbb
or
mov
test
lea
dec
gs
adc
jne
movsl
mov
pop
jmp
mov
xbegin
pop
mov
movlhps
scas
test
push
into
jl
in
sbb
test
and
movsl
mov
rolb
pushf
rcr
pop
scas
adc
stc
stc
in
loop
pop
imul
in
lahf
insl
sbb
pop
mov
mov
or
lret
or
idivl
jo
shr
and
lds
jl
push
xlat
cmp
jl
in
decb
maxps
stos
or
mov
sub
adc
pop
incl
inc
mov
lods
fs
lods
out
fists
xor
xchg
sbb
scas
leave
add
jno
jo
iret
clc
lahf
lock
push
fcmovb
pop
sbb
xchg
repnz
lock
sub
adc
inc
cmp
shr
dec
inc
popa
ret
iret
cmp
sbb
fsub
fisubrs
jl
sbb
add
scas
scas
jmp
xchg
inc
fcompl
cmp
leave
into
dec
std
loope
mov
inc
fiaddl
stc
shll
sbb
bound
or
cltd
call
rclb
iret
jge
imul
mov
sbb
cmp
ficomps
lret
cmpsb
push
xlat
js
lods
sbb
add
fists
outsb
push
mov
loopne
ss
in
push
mov
mov
or
repnz
popf
test
and
jg
lds
das
test
ja
in
test
xchg
cld
push
add
mov
xchg
jmp
adc
loop
ja
cli
popf
aam
rclb
and
jp
xor
jmp
mov
jmp
in
shrl
jno
cld
cmp
pop
idivb
lea
pop
cmp
xor
daa
or
cmp
or
popf
push
dec
sbbb
insb
imul
jo
fs
negl
pushf
rcl
shl
push
out
push
out
mov
sbb
mov
fdivl
mov
dec
pop
add
jb
pop
cltd
lock
hlt
pop
cltd
ja
jmp
xchg
pusha
jo
xchg
and
push
loop
cwtl
xchg
adc
cmp
mov
push
scas
cmp
lods
push
sbb
dec
lods
out
daa
movsl
test
push
add
fnsave
lahf
sbb
mov
inc
fs
addr16
push
stos
add
repnz
popa
mov
rorl
lods
mov
cmp
jnp
and
ds
jge
imul
sub
fsubrl
jnp
lret
pushf
ret
bound
mov
ds
lret
cmp
lahf
repnz
imul
ret
add
pop
fs
test
cmp
fstpl
adc
push
sub
inc
dec
and
mov
cli
push
push
sub
and
pop
fisttps
mov
inc
ss
inc
mov
insb
cmp
dec
pushl
push
scas
adc
cmp
and
loop
cmc
add
nop
xchg
roll
or
fisttpl
and
pop
pop
int
push
adc
aad
mov
dec
inc
and
and
lahf
mov
mov
sti
outsb
mov
mov
adc
mov
in
call
fs
mov
mov
hlt
ljmp
ja
or
popf
push
scas
popf
xchg
out
sbb
stos
xor
imul
outsl
repnz
push
lret
addr16
and
adc
movsl
adc
popf
adc
aam
pmullw
fidivl
mov
sbb
sbb
mov
mov
pop
scas
xor
and
ret
stos
pushf
pop
mov
pop
out
pop
lds
mov
das
mov
pop
test
and
js
mov
sahf
or
lods
mov
mov
pop
mov
adc
pop
test
pushf
rcl
jp
adc
das
or
dec
mov
lahf
jecxz
mov
sub
outsb
jnp
push
sub
xor
popf
stc
dec
add
mov
out
mov
fistps
ret
jo
ss
inc
iret
sbb
fld
mov
dec
jle
lods
ret
pop
lahf
loopne
scas
mov
or
sti
xchg
pop
enter
addr16
xchg
xchg
mov
pop
lahf
add
icebp
sbb
lods
js
test
scas
bsf
pop
and
xor
push
dec
test
icebp
rorb
bound
inc
mov
add
mov
out
pop
rep
imul
fistpll
repz
sti
push
xor
or
push
movsl
mov
sub
int3
inc
or
lds
push
stc
adc
sub
mov
push
cld
adc
xor
cmp
or
out
add
xor
mov
movsb
shrb
scas
inc
pop
push
adcl
jb
negl
cmp
xchg
rcrb
jne
out
mov
mov
fiaddl
or
data16
loop
jnp
int3
cmp
aad
pop
push
xor
push
repz
mov
pop
rolb
xor
outsb
data16
sbb
mov
sub
cmp
movsl
in
out
cmpsl
popf
popf
out
lahf
xchg
jns
lahf
push
mov
jnp
mov
mov
xor
inc
inc
sub
inc
clc
sbb
xchg
gs
dec
xor
ss
leave
xor
arpl
jp
in
shl
fbstp
jle
loop
mov
lds
popa
mov
xchg
jbe
in
mov
test
int
push
dec
push
lret
push
loop
cmp
fs
inc
add
das
cli
adcb
lcall
xor
popa
shl
cmp
movsl
mov
mov
jns
test
in
clc
ljmp
insl
pop
icebp
mov
sbb
cmpsl
ss
push
jmp
ljmp
inc
shrb
push
xchg
mov
inc
cltd
fdivr
cmp
test
mov
es
lods
sbb
jle
arpl
jle
pop
movsb
push
jne
fdivrs
jp
sbb
ret
shlb
lods
mov
test
sbb
adc
sub
pop
pop
or
adcb
les
and
lret
fmul
mov
push
loop
outsb
insb
div
lret
jmp
scas
mov
adcb
sub
jb
clc
adc
stc
xor
jmp
mov
test
fildl
mov
jmp
jecxz
pop
out
sbb
pop
push
fsubp
mov
fisttpl
lret
lahf
bndldx
xchg
jle
std
jo
pusha
cmp
lahf
cmpsb
repnz
lea
xchg
inc
mov
add
int3
mov
sbb
pusha
jnp
ljmp
cmp
sbb
idiv
and
lods
subl
aad
inc
xchg
mov
lods
mov
sbb
ja
es
cmpsb
xor
mov
cmp
cwtl
imul
cwtl
jae
jp
add
and
dec
cwtl
push
cmp
sti
fimull
jb
mov
dec
jae
push
fadds
dec
mov
pop
mov
mov
lods
jle
add
add
js
adc
sbbl
cmp
jle
movsl
movsl
pop
jl
clc
sbb
out
fs
mov
sbb
cmpb
xor
fimull
jbe
outsl
sub
sbb
sbb
xchg
insl
xchg
orb
scas
jl
or
jmp
lock
inc
xchg
pop
ljmp
pushf
pop
aam
sbb
push
call
jb
fisubs
mov
sbb
or
lods
push
pop
les
testb
mov
lret
mov
outsb
adc
div
cmpb
jmp
jecxz
jp
push
cmpsb
fstps
imul
loope
mov
aas
aas
in
imul
scas
shrb
push
js
sti
xor
adc
into
or
call
popf
mov
pushw
adc
and
cmpl
inc
sti
jo
fdivl
pushf
js
push
gs
cld
mulb
push
mov
and
aas
inc
loope
test
addr16
mov
repnz
cld
filds
loope
mov
loop
jns
push
fisttpll
jmp
adc
adc
shl
add
repz
mov
jecxz
outsb
popa
or
jecxz
xchg
test
popf
setbe
shll
or
mov
stos
mov
pop
pop
fnstcw
pop
mov
fnop
sbb
pushf
pop
jmp
mov
add
in
lods
hlt
lret
add
cmp
mov
xchg
pop
sbb
pop
enter
mov
inc
scas
pop
lds
int3
inc
mov
jg
int
loop
cmpsl
pop
mov
xor
mov
hlt
cmp
loop
sbb
les
dec
rcrb
ret
jno
or
mov
imul
sbb
sub
dec
dec
jno
and
cmp
jno
inc
rorl
jl
add
add
lods
mov
idivl
mov
orl
movsl
and
cmp
sti
test
ficoml
jo
mov
lcall
adc
jecxz
adc
lcall
dec
sbb
xor
lret
shlb
sbb
push
outsl
push
loopne
lcall
movsb
cwtl
insl
stos
test
xor
jl
ljmp
sbb
repz
test
ret
pop
fldt
int3
add
add
mov
jo
test
stos
and
ds
xchg
xor
sbb
std
aam
shrl
cltd
dec
sbbb
mov
fwait
ss
outsl
add
add
repnz
lods
mov
call
fldenv
push
push
inc
lret
jnp
sbb
cwtl
xlat
scas
test
pop
test
cmpsl
cmc
jg
enter
hlt
pop
cmp
arpl
mov
lret
decl
pop
xchg
test
andb
push
xor
and
int3
ss
fcmovnbe
sti
ret
xor
pushf
dec
rcrl
mov
aas
ret
mov
into
shll
int3
or
cld
mov
nop
fildll
pop
jecxz
dec
out
pusha
mov
add
mov
jecxz
mov
sbb
adc
add
fmuls
or
in
and
movsl
repnz
mov
or
iret
in
dec
stos
out
cmc
xor
and
mov
pop
cltd
shr
jmp
fsts
push
push
xchg
lret
mov
xor
fwait
pusha
and
mov
and
jmp
mov
ljmp
adc
mov
inc
adc
pop
adc
movsb
xchg
aaa
pop
xorl
and
loope
insb
icebp
out
test
dec
mov
jle
and
icebp
out
mov
jmp
cwtl
mov
and
or
xchg
movsl
push
cltd
or
adc
and
cmp
adc
dec
adc
shl
shrl
stos
jne
cld
stc
pusha
sbb
dec
and
xor
mov
imul
movsb
mov
or
sbb
imul
jl
aad
scas
sbb
or
push
lret
push
xchg
ret
or
sti
inc
ljmp
iret
cltd
ja
js
xchg
std
cmp
sti
shrb
cld
ror
jnp
push
lcall
mov
mov
in
pop
call
ss
mov
stos
shlb
stos
mov
arpl
idivl
lahf
clc
or
scas
test
xchg
xchg
mov
fwait
jl
ss
mov
push
sarl
test
sar
ret
clc
mov
into
sub
insb
mov
icebp
ljmp
xchg
mov
int3
pop
mov
jg
jbe
mov
cmp
inc
add
pop
int
add
insl
cltd
jae
pop
mov
mov
sahf
inc
cld
add
scas
fwait
dec
int3
xchg
rcll
stos
mov
mov
inc
test
xchg
orb
mov
ja
dec
aad
decl
hlt
jle
hlt
lahf
out
lret
aam
jmp
inc
ljmp
loopne
mov
out
adc
lock
ss
dec
aad
fwait
xchg
or
add
xchg
daa
xchg
outsl
hlt
std
sbb
sbb
cmp
cmp
pop
jb
loopne
jbe
mov
jbe
mov
jo
mov
xchg
mov
cmp
mov
jo
add
fsub
dec
push
test
negb
jo
aad
iret
xor
inc
js
inc
jge
dec
iret
sub
fldt
add
sbb
imul
pop
dec
mov
addr16
xor
jne
mov
hlt
adc
xor
mov
mov
ljmp
mov
jmp
insl
or
cmc
mov
push
daa
inc
fyl2x
dec
in
sbb
sbb
push
sbb
adc
leave
sub
loope
call
xorl
loopne
imul
cmp
xor
adc
cmpb
and
pop
ds
sbb
add
mov
xchg
stos
imul
pop
addr16
pusha
ret
push
enter
mov
sbb
xchg
fs
js
mov
inc
xchg
sbb
mov
sub
arpl
das
or
test
outsl
test
das
dec
test
mov
jns
xor
mov
cmp
jnp
pop
mov
pop
mov
adc
nop
clc
dec
jg
pusha
repz
fidivs
mov
push
aaa
sbbb
or
add
cltd
and
repnz
jne
pop
pop
insb
call
jmp
inc
push
fidivrs
dec
adcb
out
addl
adc
mov
fstpt
xchg
adc
push
lret
ds
inc
xor
stc
outsb
mov
dec
mov
aam
sbb
scas
and
test
push
and
push
mov
adc
ljmp
xor
jnp
orl
push
xchg
jle
or
and
ret
movsb
push
mov
loop
push
jle
pop
sti
xchg
adc
jno
xor
in
cmp
repz
sbb
jbe
or
aam
and
inc
push
xor
jb
dec
rcrb
test
popf
jb
adc
mov
fsub
dec
jg
clc
adc
aad
push
jno
jno
outsb
call
or
int3
mov
scas
adc
jns
addr16
jle
inc
pop
mov
insl
sbb
popf
scas
in
add
push
sahf
ja
mov
incb
insl
mov
and
jl
repz
push
jecxz
mov
test
sbb
mov
push
cwtl
mov
cltd
dec
xchg
push
push
adc
or
imul
and
mov
icebp
in
repz
mov
repz
arpl
pop
xor
pusha
cmp
jle
arpl
inc
mov
outsl
inc
jp
and
int
mov
es
ds
cmp
mov
or
xor
hlt
xchg
dec
or
adc
arpl
scas
rcr
or
mov
cmp
sbb
push
add
int
add
or
push
add
jg
inc
icebp
imul
and
mov
lea
cmc
lock
inc
out
and
add
scas
cltd
cld
mov
sub
mov
pushf
ljmp
pop
insl
test
jmp
data16
pop
add
jne
stos
gs
or
push
das
sub
ficoml
shrb
fiaddl
pushf
cmp
in
push
or
mov
out
sbb
mov
in
pop
in
roll
mov
cltd
rorb
mov
imul
fs
sbb
fwait
mov
jno
cmpsl
mov
fdivrs
adc
popa
sbbl
pushf
lret
fcmovnu
stos
ljmp
sub
cmp
sub
loopne
xchg
pop
faddl
int
sbb
rcr
clc
nop
cmpsl
add
je
icebp
shlb
js
arpl
xchg
lods
ror
or
pop
sahf
call
fimull
cmc
sahf
add
mov
outsb
add
mov
addl
mov
xor
jle
mov
jcxz
or
jecxz
lods
push
jmp
adc
push
cld
mov
mov
inc
scas
xchg
jae
and
es
clc
push
push
inc
dec
push
cmp
dec
bound
sarb
fsts
pop
cmp
icebp
fiaddl
insl
xor
pop
add
pop
dec
push
xorb
fwait
push
pop
and
xor
jne
mov
push
lret
call
testb
adc
mov
fistpl
inc
cmpsb
xor
hlt
adc
int3
and
dec
roll
cmp
mov
pushf
push
or
cld
mov
mov
sub
xchg
fs
jg
les
lods
pop
pop
call
ljmp
stc
ret
leave
iret
xor
sbb
mov
mov
movsl
cwtl
ret
mov
inc
add
xchg
sbb
and
mov
ror
lret
flds
ss
roll
push
cmp
cld
sarl
jne
add
cld
xor
scas
jp
dec
loope
sarb
imul
xor
imul
xor
test
rorb
pop
jmp
cltd
lret
pop
pop
xchg
mov
xchg
xor
mov
sub
enter
inc
mov
in
xchg
pop
in
cwtl
js
or
mov
xor
pusha
or
scas
lods
and
jae
jmp
or
stc
test
sbb
orl
imul
add
fbstp
clc
mov
jns
xor
or
int3
inc
test
and
push
dec
push
shll
push
cmp
arpl
out
mov
bound
pop
push
adc
push
addr16
jecxz
ret
sbb
pop
sub
xchg
fwait
or
add
aaa
sub
cld
dec
daa
add
lea
lahf
out
and
insl
cmp
fldt
and
xor
xchg
clc
jmp
push
pop
btc
jns
mov
sbb
push
push
cmc
inc
stos
arpl
push
pop
loope
jp
xor
or
sbb
xor
fists
pop
push
cld
xchg
xchg
pop
and
std
sub
test
pop
icebp
orl
xchg
cmp
xchg
cmp
or
fs
xchg
inc
and
xchg
cli
jge
ret
mov
lods
xor
pop
push
cmc
mov
and
cmp
add
loope
pop
loop
enter
pop
jbe
hlt
mov
imul
ljmp
cli
sbb
pushf
pop
lretw
add
test
stos
xor
sbb
inc
cmp
lea
adc
and
mul
mov
add
mov
insl
cmp
mov
hlt
push
ret
pusha
mov
rep
cmp
add
scas
pop
xchg
stos
shll
mov
adc
icebp
out
insb
xor
das
adc
pop
mov
lea
les
movsb
push
sbb
mov
mov
jbe
mov
dec
or
push
daa
pop
popa
mov
lret
adc
or
add
xor
leave
cmp
ret
mov
cmp
pop
imul
imul
es
xchg
cmp
cmp
mov
push
inc
mov
fadd
ljmp
ljmp
addr16
xor
pop
ret
push
mov
xlat
xchg
int3
mov
push
ret
xor
xchg
xor
mov
xor
fsubr
stos
inc
lret
xchg
add
push
cs
push
xchg
outsb
aam
fistpll
icebp
lahf
testb
out
push
pop
pop
adc
fisubl
scas
call
mov
push
adc
movsl
and
fildl
sbb
stc
int
push
ja
sahf
dec
insb
xlat
jb
int3
sbb
lcall
pop
push
cmpsl
inc
das
repnz
xchg
stos
cmpsb
xor
jno
sub
sub
out
cmp
push
lods
add
inc
push
xchg
jmp
roll
inc
pusha
das
testb
stc
repnz
xchg
fmull
jmp
add
mov
jle
add
imul
lods
gs
cltd
sub
sub
pop
inc
loop
push
lock
cmp
mov
std
bound
or
icebp
pop
daa
mov
mov
xchg
lea
sub
fdivl
imul
or
rorl
out
xchg
mov
xor
in
je
cmp
cmp
mov
popa
jne
push
inc
mov
js
shll
insb
mov
xchg
ljmp
inc
bound
xchg
sub
das
mov
and
inc
jl
jns
mov
mov
popf
cmpsb
xor
mov
test
notb
xlat
sarb
mov
or
xchg
mov
jle
loopne
mov
adcl
mov
xchg
daa
sub
ret
imul
je
stos
cmpsb
jge
enter
xor
roll
mov
bound
and
call
cwtl
pop
xchg
test
xlat
jmp
push
push
pop
pop
adc
mov
shl
jmp
stos
cmc
sub
lods
jo
leave
movsb
xchg
cltd
push
test
xchg
cmp
sarb
xchg
in
adc
iret
popf
comiss
or
adcb
push
inc
push
sub
dec
fs
adc
fadds
and
add
cmp
xor
stc
pushf
rorb
cmpsb
in
sub
mov
shlb
jl
sbb
lods
pushf
lods
test
pop
cmpsl
push
lock
mov
popl
insb
cwtl
xor
js
xchg
ds
loopne
daa
mov
call
jl
lcall
fiaddl
adc
hlt
mov
mov
sbb
jb
cs
inc
sub
mov
mov
sti
inc
cmp
xchg
insl
leave
fstps
ss
hlt
shrb
jecxz
xchg
fstps
loop
sub
pop
ret
imul
inc
mov
mov
out
data16
or
es
aaa
jle
mov
jbe
sti
int3
mov
insb
scas
cwtl
scas
ds
je
push
cs
lods
jne
mov
jl
xorl
jp
mov
js
xchg
daa
or
in
ret
shl
pop
dec
mov
cmp
popa
gs
fldcw
cmc
push
sbb
out
cs
jno
mov
mov
inc
jns
fstpt
andb
in
sti
mov
mov
cmp
sbb
lahf
js
sbb
jl
test
or
cwtl
push
les
push
lds
das
sub
cmc
adc
fistpl
pop
std
fs
call
sub
mov
or
aad
push
sub
push
shrl
adc
adc
push
fadds
lret
lods
imul
inc
and
es
xor
sti
jge
outsb
mov
sbb
int
inc
std
cs
inc
cmp
test
adc
imul
cmpb
push
or
mov
sbb
outsl
adc
jg
enter
fldl
inc
testl
daa
inc
dec
push
mov
enter
pusha
hlt
fwait
mov
arpl
jmp
pop
leave
pop
out
push
adc
xchg
push
into
mov
mov
cld
pop
loop
mov
dec
fwait
push
and
out
mov
sbb
xchg
mov
lods
aad
mov
aas
sub
movsl
repz
out
hlt
test
outsb
das
out
lea
out
outsb
not
fildll
xchg
jp
rcrb
pusha
mov
fucomip
cltd
xchg
xor
xchg
jns
rorb
cmc
cwtl
add
lea
fwait
sbb
or
aas
add
cmp
xchg
cmp
jle
add
idivb
mov
cmp
push
and
push
orl
mov
adc
outsl
addr16
sub
fdivl
inc
test
push
lea
adc
add
mov
push
sbb
cmp
cmp
sbb
imul
pop
lahf
mov
inc
rorl
and
pop
cli
lea
int
dec
lret
out
cmp
jle
push
push
push
ret
jge
fs
rol
mov
sbb
and
mov
lcall
out
jno
call
mov
cmp
push
pushf
out
pop
and
mov
sub
adc
rcrl
js
adc
cmp
push
inc
aas
and
push
fs
addr16
pop
dec
dec
and
smsw
jns
daa
push
cltd
lahf
push
push
cld
cwtl
lret
lahf
rolb
push
movsl
push
das
sbb
ret
adc
mov
lcall
aaa
loope
je
jb
scas
adc
repnz
xor
cwtl
shrb
xchg
inc
add
fbld
loopne
xchg
loope
sbb
in
mov
cmp
in
fs
or
cmp
cli
mov
je
dec
pop
aas
jp
and
adc
sub
fstps
shlb
daa
sub
repnz
xor
inc
jg
popf
test
cmp
cmp
dec
dec
nop
stos
clc
cmp
jne
adc
fsubs
jbe
sub
add
jne
jno
fdivr
or
inc
out
out
sbb
stos
mov
xor
push
mov
cmp
add
ja
daa
outsl
pop
adc
add
inc
sahf
inc
es
pop
push
aas
repz
pop
mov
mov
or
int
pop
sub
dec
ss
add
adc
seto
shrl
adc
lea
inc
orb
lods
out
and
mov
jle
cwtl
pop
fsts
jae
cmp
repnz
pop
imul
lods
mov
push
xor
popf
daa
ret
mov
fs
mov
or
repnz
fwait
adcb
insl
sub
and
data16
jb
sti
xor
loope
pop
and
add
pop
mov
test
sbb
jns
xchg
adc
cmp
daa
daa
pop
or
mov
lahf
pushf
sahf
mov
scas
rcrl
cmpsl
jbe
xor
pusha
int3
dec
fistl
outsl
mov
jge
cmp
shll
sbb
or
and
xchg
or
xchg
or
add
fcompl
rcrw
jns
les
cmp
jp
mov
loope
out
xchg
lret
pop
xor
std
inc
loope
or
mov
leave
push
sbb
jo
adc
mov
test
leave
clc
inc
sub
and
cmp
gs
push
add
xchg
int
jb
mov
bsr
or
xchg
jbe
adc
leave
es
and
fldl
in
mov
shl
inc
inc
adc
jne
je
cmp
pop
and
rcrl
pop
das
xchg
xchg
pop
mov
insl
in
scas
xchg
je
and
jecxz
mov
cmp
inc
mov
lods
jmp
movsb
stc
jne
add
pop
sti
out
sarb
mov
fucomp
mov
sbb
jmp
cli
mov
pop
pop
mov
inc
clc
mov
sarl
mov
enter
xchg
test
push
imul
push
inc
and
flds
fdivl
lods
hlt
push
lret
pusha
test
popl
and
mov
cmpb
push
test
test
push
mov
das
jne
xor
push
mov
fdivrl
jge
sub
pop
pop
inc
popf
fldenv
addr16
xchg
mov
cmc
dec
jne
std
out
inc
ret
pop
int
jmp
pop
cs
stos
popf
pop
mov
adc
mov
xchg
enter
mov
lods
and
loop
push
jecxz
jo
insl
stc
push
add
jb
repnz
and
sarl
dec
movsl
jnp
ret
and
aas
je
mov
cld
mov
in
xchg
mov
fmull
push
loop
adc
popa
aaa
push
mov
inc
jge
mov
mov
pushf
pop
jle
pusha
xor
mov
mov
ljmp
push
loop
and
mov
loope
and
jg
fidivrl
mov
repnz
push
lea
mov
pop
scas
stos
pop
fistpll
push
call
icebp
aam
sbb
popf
add
pop
lcall
jb
pushf
mov
jo
ljmp
ja
ljmp
or
mov
fisubrl
mov
lret
mov
ds
out
in
push
enter
push
js
mov
mov
lahf
cld
adc
push
cmp
push
faddp
push
negb
xor
xchg
loopne
or
lods
jo
cmp
push
addb
sub
movsb
clc
or
rcll
dec
pushf
aaa
pop
inc
mov
cmp
std
std
aaa
mov
xchg
loope
lds
inc
push
mov
pop
inc
and
shll
lahf
fstps
or
mov
in
fwait
rolb
outsb
push
xchg
jno
mov
punpcklbw
inc
sub
push
andb
fs
shll
stos
push
push
sbb
mov
cmpsb
lods
bound
xor
mov
dec
stos
ficompl
xlat
jge
cli
test
incl
or
inc
jbe
mov
nop
mov
loop
popf
cltd
repz
lock
ds
loope
sahf
pop
push
push
stos
test
jae
dec
mov
mov
outsl
or
jbe
lret
mov
arpl
aad
aas
dec
jecxz
mov
jns
lahf
sbb
mov
sub
xchg
addb
fisubrl
test
and
cwtl
pop
inc
sbb
fldl
sub
mov
pop
xor
dec
out
inc
lds
insl
mov
in
fistps
hlt
xor
cmp
ds
sbb
decl
cmpsb
sahf
std
xor
outsl
sbb
lods
outsw
out
sbb
xor
mov
push
mov
push
cmp
ljmp
mov
push
repnz
shl
dec
stos
into
cmp
xchg
mov
mov
or
shlb
push
mov
inc
dec
adc
hlt
mov
loopne
cltd
pusha
or
adc
in
repz
imul
and
mov
sbb
bound
ljmp
fsubp
dec
xchg
out
mov
push
fidivs
scas
and
ficomps
push
outsl
rolb
fwait
sub
pop
sbb
xchg
push
leave
movsl
cwtl
or
inc
cmp
jae
test
or
call
mov
cltd
push
inc
addr16
arpl
daa
stos
aaa
xchg
cmpsb
inc
test
sub
pop
adcl
inc
out
dec
push
lock
add
imul
aas
aas
pushf
push
cmp
test
and
or
mov
push
divb
or
mov
sarb
fnstenv
pop
subb
push
ror
int3
sub
mov
dec
push
std
pushf
shrl
sub
mov
add
fs
pop
repnz
cmp
jae
mov
cs
shl
ljmp
shl
lods
xor
inc
push
mov
out
adc
sbb
shr
gs
mov
ret
jnp
jo
sarl
lock
movsl
sbb
mov
jne
mov
insb
out
sbb
mov
jns
push
jecxz
mov
lcall
or
jo
iret
data16
jns
dec
loop
cld
mov
push
jge
push
pop
mov
lods
cmp
mov
sahf
lds
jb
cmpl
xor
imul
hlt
repnz
ja
push
adc
push
daa
push
jno
mov
xor
fsubrl
sbb
iret
inc
jo
insl
dec
inc
loopne
mov
add
dec
or
fsubrl
lods
inc
shll
outsb
in
jnp
cmpsb
ljmp
xlat
xor
lods
loope
daa
inc
push
xor
dec
sub
int
cwtl
dec
loopne
dec
int3
inc
iret
ss
repz
add
adc
and
fnstcw
xlat
cwtl
and
jge
mov
pop
cmp
in
mov
mov
xchg
xchg
adc
enter
cltd
shll
scas
xchg
test
fxch
jae
mov
data16
mov
adc
subl
dec
in
push
fldcw
jns
inc
aaa
cs
jecxz
bound
jns
out
mov
pop
loopne
stos
les
lret
popf
cmp
mov
arpl
or
rcr
lcall
lcall
inc
or
or
xchg
lock
sub
cld
cld
daa
cs
xchg
je
stos
fcomip
sahf
inc
pushl
mov
push
sbb
add
sub
or
mov
test
jne
insb
mov
pushf
jo
sbbl
mov
dec
stc
jnp
sub
push
mov
test
jb
xor
in
ja
repz
icebp
out
dec
repz
xor
mov
adc
dec
cmp
add
and
mov
pop
cs
mov
mov
fnstenv
ret
popa
xor
dec
imul
cli
mov
ljmp
jnp
push
lret
cmpsl
adc
sahf
cli
pop
xorl
sbb
mov
sub
mov
jl
and
sbb
decb
lea
push
cmp
push
sbb
ret
mov
jmp
or
pop
mov
nop
add
pop
pop
in
iret
loopne
mov
aaa
jle
cmp
xchg
push
bound
dec
mov
lahf
cmp
cli
push
pop
mov
jecxz
test
in
add
cmp
stos
adc
das
jp
dec
stos
inc
scas
mov
jp
outsl
outsb
adcl
ja
call
ljmp
cmpsl
xchg
repz
shrl
jmp
movsl
dec
enter
push
hlt
pusha
fidivs
push
pop
add
sbbl
rolb
mov
pop
popa
out
or
mov
or
leave
mov
popa
notb
and
into
and
sbb
jnp
clc
pushf
stc
mov
push
mov
pop
dec
dec
hlt
mov
mov
sti
insl
scas
sbb
cli
movsb
scas
sbb
jecxz
add
sub
lods
cmc
jno
pop
add
xchg
repnz
call
sbbl
adc
dec
xchg
xor
roll
sbb
xchg
aam
mov
std
pop
xchg
push
aam
inc
pop
jg
loop
jmp
dec
loope
es
pop
test
out
test
imul
call
lds
pop
jecxz
stos
rcrb
dec
insb
lret
test
ret
or
fwait
jle
and
and
subl
add
add
inc
pop
jbe
push
mov
addb
addl
pop
je
lret
loopne
or
les
sub
in
iret
cmp
mov
sbbl
push
scas
push
movsb
in
aam
pop
jo
out
pushf
push
mov
lods
jne
inc
dec
stc
jne
loopne
lock
push
xchg
jge
arpl
clc
in
mov
mov
push
cmc
mov
inc
scas
lahf
jbe
xchg
sahf
int3
fsubrl
shrb
xor
pusha
outsb
scas
sub
xchg
lret
xor
mov
nop
aaa
sbbb
pop
adc
jg
test
mov
imul
xor
inc
adc
test
mov
push
jns
jmp
lret
xchg
and
sbb
xchg
insl
cli
negl
mov
out
data16
mov
dec
sahf
bound
jmp
jecxz
xor
push
sub
fimull
rclb
fists
add
ss
dec
ds
mov
mov
or
cmp
outsl
mov
adc
or
mov
push
inc
cld
lahf
add
std
xor
mov
jae
stos
andl
lahf
stc
jnp
mov
pop
hlt
mov
ret
push
repnz
cmpsb
xor
stc
das
daa
inc
sub
nop
hlt
jne
mov
movsb
mov
jecxz
int3
aas
and
iret
sti
xchg
int3
push
or
in
les
jle
mov
imul
bound
or
mov
and
sbb
xchg
jl
movsb
jp
out
test
movsb
daa
jmp
outsl
aas
push
sub
push
popl
iret
push
lcall
pusha
push
shrb
mov
mov
je
lret
xchg
scas
cmp
in
lea
adc
push
lret
cmpsb
jb
jno
adc
hlt
or
mov
mov
insl
xor
out
test
jl
into
pop
add
cmp
add
sub
adc
adc
dec
std
sbb
popf
push
jmp
xor
lret
inc
push
mov
mov
jo
loop
insl
or
mov
cld
dec
dec
out
xor
push
inc
push
add
pusha
call
cmc
or
ja
daa
iret
lea
mov
mov
lods
and
aam
cmp
pop
xchg
into
mov
pop
dec
sbb
ficompl
xchg
pusha
insb
mov
call
add
ds
sahf
push
nop
cmp
or
mov
lcall
or
xchg
pop
mov
sbb
push
pop
sub
cmp
xchg
fbstp
push
cld
cld
rcll
mov
mov
cmovs
ja
fisubrs
dec
aaa
cmpsb
repz
pop
push
dec
les
lds
stos
pop
push
in
sub
pop
int3
out
jl
movsb
cs
inc
push
or
push
or
int
jne
into
jo
inc
sub
popa
jno
cmp
jp
dec
mov
push
sbb
add
xor
dec
in
xchg
jecxz
fldenv
jg
xchg
and
repnz
sahf
mov
push
mov
ret
dec
adc
test
push
enter
dec
mov
lds
sahf
cld
inc
pop
fstpl
sarb
cmp
jne
cmpsb
mov
or
divb
into
and
jecxz
xchg
inc
xor
nop
adcb
and
mov
lcall
xlat
ret
out
in
mov
cwtl
lret
lahf
adc
pop
sbbb
mov
xor
jb
cmp
dec
inc
test
xchg
ret
addr16
xchg
pusha
lods
jecxz
ficoml
push
sti
mov
fs
xor
and
dec
je
mov
xor
ret
adc
push
inc
sbb
add
fldenv
push
mov
add
push
adc
xor
out
stos
lret
mov
push
lods
clc
pop
mov
ds
push
pop
mov
or
inc
xor
jo
mov
ror
mov
loope
push
add
enter
jg
xor
or
xchg
mov
xchg
subb
mov
popa
xor
fdivr
leave
mov
adc
std
icebp
pop
add
hlt
lods
lahf
push
in
lcall
sbb
xor
inc
movsl
imul
push
pop
fcomp
js
lcall
push
cmp
sbb
pop
pushf
inc
stos
ret
pop
jmp
push
jmp
aaa
orb
test
aam
xor
popa
loopne
ljmp
test
das
ljmp
push
inc
sbb
aas
pop
lret
test
icebp
shrb
pop
outsb
out
xor
loope
push
int3
sbb
dec
pop
or
and
cmpsb
jbe
aam
xchg
lahf
in
mov
test
add
lcall
ja
and
addb
test
adc
add
cmc
fbstp
xchg
xchg
xor
out
mov
inc
and
rorl
xor
aad
in
or
add
pop
outsb
fnsave
icebp
cmp
and
xor
pop
ret
and
xor
test
xor
add
icebp
inc
inc
mov
ror
fwait
push
setge
outsb
popf
jae
call
lock
mov
xchg
sub
jle
repnz
and
inc
add
daa
sub
sub
pusha
mov
jne
repnz
iret
out
aas
fsubrs
sbbl
inc
fwait
js
push
call
pop
loope
mov
in
lea
bound
lea
inc
cmpsb
xchg
jno
push
addl
sahf
cli
lret
fs
out
xchg
pusha
out
sbb
jl
inc
push
shrl
aaa
in
mov
das
clc
ja
adcb
ret
adc
test
cmc
xchg
mov
dec
or
imul
dec
insl
pop
sbb
out
adc
push
jb
lahf
cmpsl
das
mov
cmp
fsts
lcall
jne
xchg
je
out
pop
jle
xor
jl
pop
inc
cli
out
and
fidivl
adc
loope
pop
sbb
adcl
rcrb
bound
pop
pop
lret
les
dec
aad
adcl
sahf
or
inc
push
cmp
aad
test
aas
push
xor
and
mov
insb
scas
mov
fwait
ss
stc
lods
testl
cmp
xchg
cmpsb
jp
fdivl
xlat
xchg
bound
mov
das
xchg
fimuls
mov
movsl
cmp
jge
mov
push
mov
mov
inc
les
xor
aaa
rorb
dec
add
leave
into
shll
movsb
fnstsw
xchg
out
mov
fwait
lea
daa
pop
rorl
or
add
mov
jecxz
jp
cltd
mov
repz
pop
inc
ret
and
pop
xlat
push
mov
scas
cli
cmp
data16
cmp
mul
inc
adc
aas
leave
outsl
pushf
xor
addr16
adc
call
xchg
into
aaa
inc
fadds
push
and
cli
jns
testb
dec
arpl
scas
sbb
or
mov
fbstp
dec
sub
fsubrl
jo
sbb
jp
data16
in
popa
ret
call
dec
stos
fdecstp
mov
push
mov
or
loope
mov
xchg
adc
loopne
scas
xchg
lods
cmc
and
lcall
xchg
testb
inc
lds
or
dec
push
in
push
mov
adc
dec
jae
bound
pushf
test
or
dec
int
jmp
mov
jne
cmp
arpl
push
push
lahf
add
push
jo
ret
push
xchg
movsl
lea
mov
and
test
addl
push
test
jno
push
xor
mov
xor
push
enter
cmp
inc
push
inc
mov
inc
xchg
sarb
sub
mov
cwtl
outsb
push
mov
cld
xor
faddl
fidivrl
mov
and
xchg
out
ret
lods
ja
into
clc
dec
into
lods
out
add
aaa
pop
gs
fdivp
popa
and
xchg
adc
popa
int
mov
cmpsl
out
mov
imul
push
mov
add
dec
setbe
scas
iret
push
dec
roll
or
jg
mov
inc
push
and
outsb
sub
in
xchg
xor
mov
ss
and
stos
jmp
ss
lahf
add
mov
or
dec
add
pop
xor
imul
jg
mov
shrb
imul
data16
jg
ret
push
int3
icebp
push
movsb
ret
sub
cmp
ljmp
add
enter
shll
ds
add
push
jo
inc
mov
shl
add
ljmp
in
js
test
cmp
mov
cs
sub
mov
cmp
gs
push
sbb
stc
sarb
sub
scas
mov
loopne
mov
lods
out
test
outsl
insb
inc
popf
mov
push
pop
enter
ljmp
mov
mov
shlb
rcll
std
repz
push
or
lods
lods
cltd
cmp
cltd
ret
mov
out
xchg
jnp
ss
clc
cmp
and
ljmp
push
xchg
pop
fadds
inc
mov
jns
mov
pop
popf
and
scas
mov
mov
adc
mov
cmp
out
shrl
cltd
add
push
dec
or
jnp
enter
xor
dec
jnp
mov
cli
dec
adc
lock
insl
mov
pop
lret
mov
decb
fsubrs
adc
dec
ljmp
inc
arpl
jle
test
cmp
jge
jne
cmp
and
or
adc
push
add
fcoml
rcr
inc
xchg
lock
lods
stos
jnp
negb
sub
test
testb
pop
test
jmp
sbb
sar
mov
les
add
jne
jmp
dec
and
xchg
sub
not
inc
test
sub
fmulp
mov
dec
leave
add
jno
inc
mov
push
xchg
shl
stos
jno
lock
call
loopne
fmul
sbb
ds
dec
xor
movl
mov
xchg
loop
std
mov
cmc
cmp
out
sbb
addl
add
and
into
sbb
inc
dec
mov
mov
mov
loop
outsl
repnz
sbb
adcb
jl
mov
fwait
mov
pop
mov
mov
cltd
mov
adc
enter
loopne
and
xchg
push
adc
in
add
pop
add
xchg
pop
divb
inc
out
sbb
aad
xchg
or
lea
mov
popf
shrb
xchg
cmp
adc
cwtl
and
repnz
xor
or
xor
sbb
call
inc
pop
sub
shl
sub
pop
adc
lea
je
sahf
fwait
movsl
mov
and
mov
insl
scas
adc
clc
mov
das
repz
sbb
push
ret
lock
and
test
rclb
call
mov
lret
dec
aam
test
inc
adcb
insb
add
push
jbe
aas
sub
js
xchg
ret
mov
ret
mov
arpl
les
pop
mov
inc
in
pop
in
sbb
push
pop
jmp
out
jg
inc
mov
sti
dec
adc
adc
pushf
cmpsb
pop
pop
rolb
outsb
pop
loopne
sbb
stos
or
mov
in
mov
fwait
not
jle
lcall
xor
cltd
lods
out
mov
lcall
mov
jecxz
and
xor
push
jno
mov
orb
add
sarl
mov
icebp
mov
fwait
add
stc
aas
or
mov
sbb
repnz
mov
mov
mov
stos
addr16
jp
mov
stos
repz
out
sub
push
out
nop
dec
cmp
cmpl
jecxz
mov
insb
xor
and
test
mov
insb
xor
adc
daa
add
sbb
dec
je
out
and
addr16
fisubs
or
repnz
push
pop
ret
push
addr16
out
jbe
outsl
mov
dec
fidivrs
arpl
aam
ds
std
xor
outsl
out
ficoms
jp
jno
mov
push
test
sahf
jg
int3
fwait
mov
push
mov
jmp
sub
test
js
mov
cmp
xchg
es
pop
mov
mov
mov
add
lret
add
xchg
insb
jle
adcl
xchg
add
lea
hlt
or
or
hlt
stc
test
shrl
je
cmc
push
jbe
stos
test
mov
sbb
in
pop
cmp
xchg
sahf
push
or
in
sub
out
mov
sbb
inc
jb
or
cmpb
mov
or
inc
dec
sub
int
clc
fwait
outsl
gs
and
ds
mov
fucomi
sti
mov
push
imul
fimuls
out
mov
dec
ficomps
mov
push
pop
dec
sub
sbb
out
gs
pop
pop
mov
fisubl
pop
imul
mov
sub
dec
out
adc
scas
jno
add
push
cmp
fisubrl
mov
xchg
out
shrl
sub
mov
ds
fisttps
pusha
dec
jg
insb
mov
xchg
mov
daa
enter
adc
pop
pop
icebp
in
es
in
out
lock
test
xlat
jg
cmp
loope
mov
lods
push
jp
test
dec
in
imul
les
jb
jne
or
out
in
inc
and
aaa
in
xor
cmpsl
js
inc
sub
inc
xlat
notb
cmp
mov
inc
std
sahf
xor
repz
sarb
jne
pop
xchg
imul
dec
negb
mov
push
in
shll
xor
and
dec
xchg
orb
addb
cmp
addl
sbb
out
scas
test
fsubrl
mov
inc
mov
shlb
pop
test
fwait
or
enter
scas
xor
lods
and
bound
jbe
arpl
fidivrl
ljmp
xchg
sahf
aam
jecxz
in
mov
xlat
jb
xchg
cmp
add
fwait
aad
into
fldl
pusha
add
pop
cltd
sti
in
lcall
insb
sub
cltd
mov
xchg
cmp
sbb
jo
dec
cld
out
dec
imull
imul
call
insl
bound
xchg
pop
test
ficoml
sbb
aad
and
jo
sub
in
inc
push
inc
outsb
add
and
jb
rcrb
and
jns
push
pop
dec
jnp
cs
mov
mov
test
in
xlat
pop
bound
pop
outsb
shlb
jns
daa
mov
in
and
cmp
insb
or
outsb
adc
imul
loope,pn
and
and
scas
mov
iret
mov
pop
shlb
sbb
add
inc
sbb
or
push
repz
out
push
add
xchg
repz
xchg
sahf
adc
sub
call
int
and
jmp
aam
inc
mov
jb
pop
xchg
je
jbe
or
sbb
mov
push
mov
mov
inc
jle
adcl
and
cld
xchg
rcrl
outsb
rcrb
insl
sub
cmp
sbb
mov
jb
mov
sub
xlat
aam
loop
add
hlt
or
sbb
in
enter
not
sbb
cmp
or
imul
xor
inc
mov
jb
push
pop
mov
shll
sub
add
pop
lods
leave
addr16
aaa
aam
outsl
or
mov
insb
push
sub
insl
add
test
pop
arpl
mov
fistl
imul
call
push
pop
aad
sub
sbb
inc
test
and
xor
cmp
pop
cwtl
adc
cli
pusha
mov
mov
jecxz
or
pusha
stc
enter
mov
mov
adc
and
push
mov
lods
pop
pop
fwait
jge
mov
xchg
bound
push
mov
gs
jbe
je
sti
xchg
icebp
adc
insb
mov
pop
stc
or
movsl
pop
and
adc
jne
inc
mov
pop
gs
jecxz
leave
jge
mov
ss
jle
iret
jae
fs
call
adc
ljmp
loope
sbb
cmp
mov
test
in
daa
sub
mov
xor
jbe
rorb
pop
xor
je
out
data16
bound
inc
adc
push
bound
lea
pop
fwait
jno
adc
mov
pop
mov
lahf
sub
and
or
outsb
xchg
dec
sbb
pop
stos
mov
pop
lahf
outsl
cwtl
jns
xchg
sbb
clc
or
push
jo
aad
push
insb
das
push
adc
pop
sbb
test
mov
outsl
shll
flds
inc
push
movsb
lret
mov
xor
es
loope
mov
movsl
sbb
pop
in
jl
sub
jne
xor
lea
add
lods
scas
cmpb
add
addb
sub
testb
fnstsw
dec
ffreep
aad
inc
in
inc
pop
and
fs
sbb
ret
popf
lock
cs
and
ret
icebp
pushf
imul
rdpmc
ja
mov
xor
pushf
pop
mov
adc
fildl
ret
push
mov
cmp
pop
into
or
testb
int3
cmpsb
cltd
cld
mov
repnz
sub
sbb
loope
in
cli
mov
add
jb
cs
in
dec
fwait
and
sub
or
enter
frstor
repz
out
adc
std
mov
inc
pop
pop
es
cmpb
or
orl
fcomps
cld
adc
jns
adcl
cmp
xchg
lret
inc
cmp
pusha
fildl
xchg
sbb
xchg
inc
jbe
shlb
xchg
mov
xor
mov
jg
lods
cmp
and
push
and
mov
inc
sub
dec
cmp
xchg
jl
and
scas
insl
xor
pop
dec
sub
shl
cmp
aas
jbe
cmp
push
into
test
dec
push
xchg
cmp
or
sbb
mov
jae
add
jge
loopne
mov
in
sbbb
dec
nop
repnz
push
js
inc
test
xor
aad
jle
ficoml
ret
ja
popf
mov
in
call
push
clc
testb
inc
ficompl
loope
inc
and
push
sahf
mov
icebp
inc
cmp
out
mov
scas
mov
ficoms
mov
cli
rcll
inc
in
movsb
xchg
scas
mov
mov
or
out
inc
cltd
fidivl
es
add
aad
repnz
shl
xchg
and
pop
rcrb
push
nop
dec
dec
inc
aas
mul
aam
xor
neg
and
cmp
ret
pop
sahf
shlb
xchg
push
sti
unpckhps
sub
push
add
and
push
insb
xchg
inc
sbb
mov
ss
into
aas
fistpll
lahf
lods
lods
nop
mov
arpl
outsl
add
sbb
mov
imul
imul
shlb
add
sub
sub
lock
test
sbb
push
out
cs
cmc
bound
mov
push
cltd
pop
xchg
sahf
push
or
aad
int
mov
ret
or
lds
push
inc
test
jno
add
push
out
stos
jg
adc
outsl
xor
mov
mov
in
xchg
out
adc
addr16
outsl
subpd
xchg
adc
mov
push
fdivl
test
in
mov
andw
or
xchg
hlt
sti
ljmp
add
sbb
and
leave
mov
cmp
mov
jo
inc
fnstsw
loop
push
sahf
and
bound
xchg
dec
loop
sub
mov
jecxz
data16
jns
and
loop
mov
lds
mov
sbb
fdivs
mov
into
lret
ret
fisttpll
jns
mov
outsl
int
push
mov
and
in
arpl
dec
aam
sahf
out
fistps
inc
fcom
test
je
xor
lds
jae
xchg
mov
ds
cmpsb
cmp
xchg
push
sbb
xchg
fsubr
pop
adc
pop
jmp
jns
push
into
lea
test
sbb
jb
or
pusha
jp
push
enter
inc
mov
fsubl
xor
xor
fsts
lret
test
cmc
sbbl
das
mov
pop
jnp
inc
imul
mov
xchg
out
sti
sbb
addb
sub
hlt
xor
dec
cmp
mov
sbb
shll
sbb
pop
cmpsl
xor
cmpsl
cld
cmp
icebp
ja
idivb
decb
push
push
gs
sarb
out
mov
adc
push
mov
fldl
out
dec
pop
jno
loop
cmpl
mov
jge
stos
call
ror
push
pushf
out
xor
outsb
jp
dec
iret
iret
pop
int3
mov
popf
adc
xchg
lods
cmp
cmp
cmp
icebp
jbe
push
xchg
cltd
pushf
or
sar
mov
push
in
adcb
ds
and
daa
lock
out
adc
in
lock
or
test
into
sub
outsl
pop
jno
insl
rol
imul
loope
add
pop
sbb
lea
mov
cmp
mov
data16
mov
dec
movsb
xchg
jbe
or
add
lret
jo
sbb
mov
adc
loope
icebp
jo
sti
insl
popa
arpl
jp
push
or
mov
popa
lret
pop
add
cmp
sbb
pop
xor
mov
mov
sub
gs
jne
out
cs
or
mov
cwtl
dec
inc
loopne
mov
dec
push
add
cmp
mov
mov
in
jl
repz
mov
cmpsb
pop
jg
add
push
or
fisttpl
loope
xchg
js
push
mov
jl
xor
rcr
pusha
ret
insl
jo
mov
lods
adc
dec
cmp
mov
ja
nop
inc
scas
mov
out
pop
mov
add
and
adc
xor
aad
or
repz
inc
pop
sub
or
and
inc
das
lock
imul
aas
pop
jge
mov
in
cmp
in
mov
test
mov
mov
mov
xchg
in
lds
sub
cmp
std
jmp
add
shr
out
fwait
scas
xchg
jp
adc
mov
xor
and
jp
stos
and
mov
jmp
jge
jb
push
jg
pop
filds
push
sahf
mov
sbb
mov
scas
pop
adc
adc
fiaddl
in
test
jae
mov
dec
xor
lods
and
cmpsl
cli
test
aas
mov
cld
pushf
pop
popf
out
inc
inc
pop
cmp
xor
sbb
adc
or
fcoml
dec
leave
leave
stos
mov
pop
xor
inc
lods
scas
sbb
and
dec
clc
pop
rcll
fs
xchg
pop
popf
xchg
pop
or
mov
xchg
repnz
mov
rcrb
pop
negl
or
cmp
or
or
mov
ds
dec
pop
or
xchg
dec
jae
cmp
mulb
pop
push
test
lea
sti
mov
nop
xor
lret
test
and
fists
jns
scas
and
inc
push
push
cmp
jle
dec
fstl
sbb
mov
test
sbb
negl
push
jp
dec
cmp
pop
add
dec
fcmovbe
dec
push
sbb
das
rcr
imul
fs
sbb
pop
jecxz
mov
mov
adc
adc
test
mov
dec
loop
dec
lock
out
repnz
sub
imul
mov
mov
jo
test
lds
pop
jmp
leave
rclb
jo
lahf
pop
mov
jp
adc
mov
data16
dec
fs
or
lret
outsl
test
inc
jbe
dec
jnp
cli
and
mov
cmp
add
jmp
pop
mov
mov
scas
sub
or
sahf
lret
jb
movsb
inc
enter
leavew
and
dec
dec
idivl
loop
scas
xchg
xchg
mov
xor
sahf
sub
dec
outsl
flds
daa
sub
add
add
push
cli
sub
loope
mov
push
jecxz
inc
adc
mov
push
mov
sti
dec
xor
xchg
shr
mov
jl
stos
pop
lret
inc
mov
add
nop
out
jb
pop
adc
jle
mov
daa
loop
xor
cmp
sbb
and
aas
xchg
sub
flds
xor
cwtl
mov
fincstp
and
fwait
cmp
test
sub
loope
cmp
loopne
notb
push
mov
stos
push
cmpsl
les
sbb
loope
leave
ja
inc
mov
and
sub
cmpb
call
rclb
cmpsl
push
into
push
int
ja
xor
inc
out
mov
mov
adc
stc
inc
mov
xchg
idivb
fsubr
cmp
adc
cwtl
mov
out
pop
jecxz
daa
cli
mov
int
aaa
cmpb
and
incb
in
xor
js
test
adc
and
repnz
test
imul
sub
gs
ret
xor
fisttpl
sub
mov
sbb
mov
nop
cmc
les
test
aad
rcrb
add
ret
dec
mov
fisubs
lock
push
add
cltd
adc
movswl
push
adc
and
push
add
stos
js
fists
mov
popf
das
jo
test
xchg
inc
mov
enter
add
pop
sti
adc
mov
sub
movsl
sub
repnz
in
stos
andb
outsb
loopw
mov
cmp
pop
mov
jno
xchg
cwtl
repnz
add
test
add
fsubr
and
add
pop
pop
mov
sbb
add
sahf
sub
push
cmp
into
xchg
aas
mov
icebp
outsl
cmc
cmp
and
int
into
xchg
in
jne
mov
rorl
push
test
roll
stos
lcall
fidivrl
stos
mov
mov
pop
ret
mov
jne
pop
xchg
jnp
adc
out
cmpsb
xchg
dec
mov
mov
inc
jmp
ror
sbb
mov
pop
add
mov
scas
fisubs
adc
pushf
push
movl
insb
mov
mov
or
xor
imul
icebp
fistpll
gs
mov
xchg
ja
mov
out
or
out
lret
shlb
ss
mov
dec
mov
inc
repnz
das
call
mov
aad
inc
inc
into
xor
inc
cmp
push
fists
icebp
push
xor
adc
jne
sbb
or
inc
dec
jb
cmp
in
stos
loop
mov
xchg
xchg
cltd
mov
sub
inc
or
or
pop
fisttpll
out
adc
jl
inc
sbb
pusha
jo
cmp
and
mov
jge
mov
mov
cmc
call
push
or
dec
push
dec
push
movsb
pop
sub
mov
and
insb
enter
in
jl
and
xor
test
jmp
sarl
push
dec
js
mov
xor
js
je
dec
lahf
sub
test
xchg
or
xor
or
fcomp
sbb
cmp
fucomi
mov
sbb
xchg
repnz
loopne
ss
mov
mov
stos
cmovbe
mov
dec
movsl
lods
ss
jne
test
xchg
push
pop
cld
and
ret
jp
enter
popa
cmc
jne
lret
dec
fs
sbbl
adc
xlat
cmpsb
ja
rolb
pop
nop
test
sub
pop
fsincos
jge
dec
sbb
lcall
shll
stos
andb
mov
out
adc
add
incl
mov
ljmp
dec
push
or
cmp
fwait
aaa
mov
lods
dec
mov
shr
inc
jge
jb
pop
push
pusha
and
mov
popa
jmp
fbld
adc
repz
ja
loopne
imul
popa
mov
and
in
pop
loop
repnz
inc
mov
jge
sub
shrl
scas
mov
jmp
sbb
iret
lea
jecxz
and
nop
addb
mov
fmull
pop
clc
je
ret
cmp
xor
es
add
sub
add
cmp
add
faddp
out
dec
aas
jnp
mov
adc
push
push
cmp
aam
je
scas
in
mov
insb
push
pop
out
push
arpl
jne
movsb
adc
mov
mov
stc
adc
adcb
xchg
loope
inc
pop
repz
cmp
fwait
dec
js
jp
lahf
dec
xor
gs
mov
popf
mov
pop
andb
fsubl
adc
jl
bswap
cwtl
jne
stos
xchg
mov
iret
fnsave
or
jae
xor
in
jbe
or
adc
cmpsl
sub
pop
inc
add
out
outsl
xor
pop
lock
and
xchg
fsubrl
jp
sub
leave
cmpsb
add
add
mov
xor
pop
mov
and
test
xor
or
mov
push
aad
mov
xchg
loope
aas
jp
shr
cld
inc
lcall
sbbb
call
lds
seto
dec
add
xor
das
dec
mov
sarl
outsb
adc
fcomps
ss
dec
mov
shlb
loopne
sti
and
pop
dec
jno
lods
scas
sub
sbb
xorb
popf
sub
pop
jge
mov
pop
insl
imul
sahf
mov
dec
xor
xchg
pop
inc
mov
xorb
lret
xchg
mov
xlat
inc
fadds
call
arpl
xchg
popf
cli
scas
repnz
adc
int3
ljmp
mov
xchg
arpl
push
mov
dec
fdivrs
ds
jl
fildll
fimuls
dec
fldenv
adc
sub
add
rorb
pop
xor
mov
cmpsl
arpl
push
and
push
incl
xchg
mov
dec
cld
jnp
xor
nop
shlb
add
in
int
jb
push
rcr
xor
inc
xchg
cmp
add
and
test
cwtl
xchg
pusha
rorl
push
les
dec
mov
fsubrs
inc
pusha
dec
dec
jns
inc
mov
imul
arpl
shl
into
push
or
imul
or
xchg
sahf
push
lods
sub
popf
mov
xchg
mov
or
adc
adc
shrl
cmp
daa
daa
les
jge
mov
adc
pushf
and
aad
jno
aam
es
ds
adc
push
jae
or
aaa
ja
cmp
nop
or
mull
fdivrl
sbb
addr16
les
test
iret
mov
insl
xchg
jne
fmul
mov
xchg
ja
cmpsl
rcrb
mov
sbb
std
xchg
mov
andl
subl
fwait
push
or
subb
pop
push
push
stos
sub
cmp
xchg
mov
jo
cmpsl
add
mov
insb
sbb
mov
sub
int
mov
mov
pop
daa
out
mov
adc
adcl
nop
cmp
pusha
lahf
xchg
lea
imul
sbb
fcomp
lcall
scas
out
and
jge
mov
rorl
ffree
inc
popf
push
inc
pop
inc
add
dec
int
mov
js
inc
jbe
das
iret
jb
sbb
inc
mov
gs
out
push
lods
out
popa
inc
xchg
adc
flds
rep
push
cmp
jl
lea
pop
in
xor
or
scas
add
mov
jecxz
cmp
jns
jp
cmp
loopne
fimull
pop
mov
dec
sbb
lcall
dec
or
lahf
and
dec
inc
cmp
or
jb
mov
pushf
pop
inc
or
je
dec
xchg
jmp
pop
xchg
scas
in
fstpl
scas
jmp
addr16
fistps
mov
and
xorl
jp
into
sbb
mov
int
icebp
fcmovbe
ss
es
incl
fcoms
cwtl
imul
mov
lods
mov
add
inc
leave
xchg
sub
fsubl
dec
mov
mov
push
aad
fldcw
sub
xchg
test
insb
test
xchg
out
fisubs
popa
sub
dec
imul
xchg
icebp
mov
sbb
adc
repz
dec
lea
shrb
pop
xor
mov
mov
or
jbe
xchg
or
and
lods
mov
sahf
fcmovnu
pop
stos
sub
into
or
ja
es
fidivrs
imul
data16
xor
push
jmp
add
ret
mov
push
int
es
adc
subl
xor
mov
xor
vunpcklpd
xor
arpl
mov
fldt
arpl
xchg
jae
mov
aaa
ja
mov
cmp
repnz
jmp
inc
sbb
cs
push
jb
hlt
push
mov
xchg
mov
or
or
push
mov
xchg
adcb
rcl
in
cld
xchg
dec
loope
out
test
jnp
mov
mov
sub
imulb
js
mov
jecxz
mov
cmp
test
sub
mov
pop
mov
pop
xor
add
dec
add
sti
les
vmread
int3
jp
dec
dec
fcmovnu
or
gs
cmp
test
xor
dec
push
out
dec
ret
repnz
stos
mov
push
in
iret
pop
mov
sti
popf
lds
movsb
and
cmp
mov
imul
and
fs
daa
or
sub
jge
dec
inc
pop
insb
inc
mov
mov
lods
lret
xor
jle
adc
ret
call
pop
popa
jnp
mov
pop
mov
fstl
mov
sub
roll
pop
sbb
js
out
or
cltd
push
fcmovnu
dec
jp
jmp
lahf
pop
cmp
pusha
adc
aam
add
call
jnp
add
jp
and
lds
pop
push
movsb
addl
inc
xchg
adc
pop
sbb
jno
imul
cmpsb
insl
fdivrs
push
pop
aam
test
dec
into
fcomps
xchg
enter
adc
sbb
in
les
int3
adc
mov
mov
xor
pop
sti
mov
or
add
and
shl
daa
push
sbb
mov
xchg
popf
push
mov
push
loope
in
scas
out
fs
inc
jae
ds
lcall
je
sub
sub
push
sahf
jo
or
jns
sub
cmpsb
inc
adc
add
leave
mov
ret
xor
xchg
in
xor
test
shlb
outsl
stos
sbb
add
les
dec
or
jae
insb
add
mov
sub
jo
or
cmp
loope
cmc
subb
add
inc
pusha
mov
imul
cltd
push
or
and
mov
inc
fmulp
test
popa
dec
mov
cmpsb
adc
icebp
inc
mov
aaa
scas
jo
ret
outsl
sbb
pop
jp
lods
dec
cld
dec
inc
mov
in
mov
xor
out
mov
xchg
bound
sub
cmp
insb
stc
adc
jmp
or
push
inc
mov
jp
push
js
inc
jge
fdivrp
fsubr
sub
das
pop
cwtl
add
sbb
out
cltd
rcrb
jecxz
fcmove
pop
cltd
ss
pop
fs
je
int3
add
lods
add
or
in
inc
inc
lret
cmp
dec
add
jecxz
pop
inc
add
shll
inc
pop
ffreep
jg
std
enter
lea
loope
push
out
pop
mov
and
int3
jo
mov
pushf
outsl
aad
lock
cmpb
push
stos
add
fdivs
popf
lea
insb
mov
bound
push
inc
lds
pop
lret
out
out
divb
jl
jmp
mov
mov
xor
test
or
pushf
jp
pop
aam
fldenv
sub
pop
and
stc
push
pop
inc
outsl
aaa
adc
out
or
in
aam
sbb
add
std
mov
sub
or
xchg
push
inc
xchg
xlat
mov
imul
and
pushf
mov
add
ljmp
imulb
xchg
dec
into
push
test
mov
out
mov
iret
ret
in
mov
pop
sub
pop
loopne
jmp
bsf
push
sbb
repnz
push
and
sti
jecxz
fs
pop
dec
out
in
test
mov
repnz
je
decb
push
push
adc
out
daa
cld
push
rorb
sub
in
sub
or
aad
icebp
push
pushf
and
or
xorl
cs
mov
push
mov
push
xchg
sarb
pop
pushf
mov
cmpsb
in
lahf
out
jno
and
jb
mov
and
cmpsl
cwtl
adc
cmpl
gs
in
gs
mov
adc
add
xchg
add
add
dec
aam
add
icebp
push
or
dec
ljmp
cld
push
ljmp
mov
adc
cwtl
mov
out
mov
cld
lods
cmp
out
dec
test
in
andl
gs
pop
sti
push
enter
xchg
popa
mov
imul
mov
fs
cli
ds
loope
jb
cmp
in
add
jecxz
push
and
mov
xor
xchg
push
lret
mov
cld
jae
js
and
loopne
xor
push
add
loopne
or
cmp
mov
xor
ficomps
shll
ret
or
jns
stos
sbb
subb
outsb
push
loopne
push
mov
add
shrl
mov
xor
xlat
cmp
ss
mov
sti
cld
sub
sub
test
mov
add
popa
enter
out
mov
jb
aam
cld
sahf
and
into
mov
cmp
or
and
push
jge
rcrl
jmp
lcall
mov
jg
iret
aam
out
inc
dec
mov
dec
mov
adc
aaa
icebp
jle
and
sub
mov
push
popf
bound
sarl
lea
sahf
mov
xlat
push
movsb
cmp
test
sub
mov
jne
jge
adc
xchg
out
insl
icebp
std
icebp
stos
fistpl
adc
fcoml
fldl
aad
mov
ret
inc
pop
cmpsl
jne
out
push
xor
daa
je
and
cltd
movsl
add
push
pop
mov
roll
add
inc
adc
xchg
add
stc
jmp
negb
and
imul
sarb
fists
jbe
inc
xchg
in
in
pop
xchg
scas
dec
or
cltd
outsb
cmp
lret
mov
xor
popa
clc
push
and
sarb
jle
add
sub
sub
rcr
repz
data16
jle
lret
add
adc
xchg
inc
aaa
jbe
dec
in
inc
or
mov
stos
dec
mov
fsubrp
add
lret
xor
jp
xor
loop
cmpb
xchg
pusha
cmp
sahf
mov
mov
pop
and
or
ss
xor
rcrb
mov
or
cmp
hlt
jle
jge
int
das
mov
dec
imul
loope
push
out
adc
gs
mov
hlt
orb
mov
repnz
and
mov
dec
js
ja
ret
adc
pop
dec
add
jo
push
sbb
mov
inc
jbe
jl
jnp
lcall
dec
mov
fnsave
ret
imul
inc
loopne
mov
add
adc
je
aad
out
aad
bound
out
inc
cs
xchg
pop
mov
out
inc
cmp
cltd
iret
push
add
cmp
sub
pop
pop
fs
cmp
dec
mov
dec
inc
subl
iret
mov
fistl
push
mov
insb
repz
xor
xor
adc
test
jg
mul
cwtl
lea
lds
inc
mov
jne
dec
cmp
fsub
sbb
fstl
mov
out
adc
and
sbb
or
out
stc
sub
sub
mov
and
aaa
mov
dec
adc
lock
fadds
inc
xchg
cmp
mov
adc
test
or
mov
jmp
pop
aaa
rolb
mov
test
pop
das
insb
fadd
repz
and
fcomp
aad
leave
mov
cltd
sub
xchg
pop
add
stos
sub
rcr
dec
mov
push
movsb
push
bound
repnz
gs
add
cmp
mov
or
or
inc
jle
sarb
push
mov
dec
dec
inc
sbb
mulb
movsl
mov
cmp
pushf
ds
popf
lcall
scas
movsb
addr16
pop
mov
cmp
stc
fidivl
adc
cwtl
pop
push
fldl2e
fmuls
mov
push
mov
mov
mov
testb
popf
aas
loope
push
test
xor
dec
mov
and
out
inc
pop
mov
lcall
xor
push
xchg
mov
loop
adc
pushf
subb
std
pop
dec
lcall
mov
xchg
jno
ret
ljmp
andb
cmp
push
mov
mov
xor
mov
ja
sub
jbe
push
lock
daa
xor
dec
jbe
xor
pop
mov
jbe
jae
mov
fadds
popf
inc
pop
dec
jns
out
inc
add
add
fidivs
lock
out
dec
int3
je
mov
push
out
mov
rclb
pop
mov
xchg
cld
push
mov
popf
jle
ret
movsl
cld
or
repz
mov
and
fwait
mov
push
stos
rcll
sub
arpl
mov
xchg
fidivl
fdivs
push
sbb
push
fidivs
xchg
push
repnz
lods
push
out
ja
or
and
pop
mov
ret
and
and
mov
test
lock
jecxz
fstps
hlt
dec
daa
loop
push
out
fisubrl
xchg
push
stos
outsl
inc
loop
into
sahf
ljmp
leave
imul
lods
outsl
mov
daa
orb
mov
movsl
push
divl
repz
shll
mov
outsl
dec
xor
cmp
cs
push
call
roll
dec
inc
ds
inc
and
add
inc
and
insl
pop
or
test
push
in
in
in
movsb
jnp
xorl
stos
leave
sahf
lods
and
mov
out
mov
fdivp
jl
dec
js
das
pushf
daa
mov
xchg
xchg
insl
jb
ret
inc
push
inc
imul
lcall
jl
clc
jmp
ficompl
mov
push
sbb
mov
push
inc
in
dec
push
outsl
mov
fs
fwait
sbb
into
xchg
je
je
mov
mov
pop
jae
daa
mov
push
lea
fdivrs
shll
pop
mov
xchg
cltd
inc
bound
pop
shr
ds
xchg
int
inc
insb
fldcw
fmuls
pop
sbb
loope
imul
notl
and
insl
mov
push
cld
add
aam
and
mov
dec
xchg
in
mov
push
mov
mov
in
imul
inc
loopne
arpl
enter
inc
je
inc
sbb
enter
pop
les
cmp
sbb
adc
pushf
scas
hlt
arpl
sbb
mov
loopne
out
sbb
fwait
cmc
sbb
jno
mov
das
dec
or
movsb
in
lcall
jmp
push
xchg
cli
sub
mul
cmp
int3
ja
hlt
bound
and
mov
sub
mov
lds
clc
sbb
push
add
test
aaa
push
lock
xor
xchg
xlat
jl
sbb
mov
bound
roll
adc
mov
pop
clc
adc
test
mov
lret
out
hlt
inc
into
or
xlat
cwtl
lea
das
jg
adc
das
mov
jl
sbb
int
sti
xorl
pop
lcall
sub
clc
cld
testb
imul
out
mov
sti
or
jns
sub
in
jno
es
dec
sbb
sub
enter
pop
aas
stc
cmp
sub
loope
rorb
jg
imul
cli
aad
ja
inc
and
stos
icebp
sbb
xor
insl
mov
ss
loope
mov
push
mov
sbbb
hlt
adc
sbb
cs
test
add
pop
clc
fwait
mov
push
jecxz
jb
push
negl
push
cmp
aaa
fwait
cmpsl
je
sub
mov
out
fsub
dec
outsl
mov
mov
xchg
pop
test
push
or
and
push
xchg
hlt
xchg
jecxz
cltd
fdivr
mov
adcb
and
stos
sub
xchg
mov
sub
cmp
rcrl
xor
popa
out
sti
xchg
shl
iret
icebp
inc
out
cmp
jnp
push
mov
fbld
mov
or
sahf
cmc
movsl
mov
cwtl
or
sub
or
or
mov
int3
andb
mov
das
sub
jl
xor
loope
lock
jno
les
in
cmp
mov
testl
pusha
sbb
ficoms
divb
dec
loop
push
incl
loope
cmpsl
push
fists
xor
or
pop
lcall
jp
shl
enter
cwtl
popa
stos
ja
pop
subb
imull
bound
sahf
cmp
xor
mov
loopne
add
mov
or
sbb
pop
ret
loopne
sub
add
hlt
std
daa
pop
or
jmp
ja
mov
adc
testl
or
pop
cmpl
dec
or
adcb
xchg
dec
inc
lds
add
and
mov
notb
mov
sub
dec
cmpl
icebp
test
std
push
ja
fbld
imul
pop
fmuls
scas
inc
sbb
mov
cmp
xor
loop
bound
sbb
test
or
fistpl
das
push
xchg
movsl
outsb
cmpsb
pop
addr16
nop
jb
jbe
mov
lods
cmp
xchg
jns
cltd
addl
or
cmpsb
sbb
lods
mov
lods
or
loopne
dec
xchg
add
sbb
cmp
and
jmp
sub
sub
xor
dec
imul
adc
jmp
test
lahf
sbb
pusha
jg
and
and
xchg
scas
push
aad
movsb
sub
sub
in
daa
clc
push
stos
xor
xchg
cmp
icebp
xor
pop
data16
sbb
int3
cmpsl
pop
sub
mov
dec
cmp
and
mov
pop
or
loopne
pop
aas
dec
or
inc
jnp,pn
fwait
sbb
ret
fistps
fnstenv
push
and
or
loope
rcl
loope
jae
cld
xor
sbb
mov
mov
enter
test
aam
xchg
jae
rcrl
push
into
cltd
and
mov
xor
fwait
xor
xlat
mov
imul
popa
inc
mov
xchg
xor
movsl
pusha
test
sbb
les
nop
pop
out
mov
ljmp
fldcw
adc
outsb
dec
mov
fstpl
out
lcall
cpuid
add
arpl
fldl
jge
mov
loop
test
call
stos
add
lahf
aas
or
pop
imul
in
add
and
pop
fucomip
push
adc
stos
pop
je
popa
pop
cmc
dec
cmp
dec
sbb
cmp
fwait
les
movsl
dec
mov
inc
ud2
pop
das
test
pop
sub
jae
std
add
mulb
cwtl
das
adcl
mov
fcoms
mov
push
pop
lea
push
xchg
sarl
loopne
enter
ficoml
leave
pop
mov
mov
std
daa
xor
push
or
cmp
call
sbb
not
xchg
pop
lret
inc
out
sbb
addr16
push
int3
lods
test
inc
push
test
mov
fnstcw
ss
sub
sti
push
or
inc
cmc
cltd
shrl
xor
mov
xor
outsb
orb
aaa
push
push
imul
mov
test
or
push
sbb
mov
sbb
daa
fmul
mov
out
sbb
mov
xchg
xor
aad
pop
and
jmp
int
js
fidivs
pop
lds
insb
xchg
sbb
aad
stos
and
orb
cmp
enter
enter
std
sbb
or
aas
int
push
rolb
adc
push
pop
and
cwtl
jl
stc
push
pop
mov
loope
stos
fisttpll
sbb
cld
push
lods
mov
pop
or
jb
sbb
xchg
adc
lret
dec
scas
jnp
divl
jns
fdivrl
push
jmp
inc
push
push
xor
insl
sbb
ds
jle
sbb
cmp
cltd
push
pushf
fdivrs
sbb
pop
sbb
cmp
pop
mov
push
xor
fwait
sbb
pop
rorb
ljmp
enter
mov
enter
in
push
scas
shrl
xchg
out
in
dec
inc
inc
sbb
mov
xchg
dec
cmp
mov
lea
add
aaa
jbe
icebp
fwait
clc
xchg
icebp
mov
hlt
inc
and
fmull
leave
fwait
pushf
jle
jle
inc
das
xchg
lods
pop
cs
mov
inc
test
xor
adc
mov
mov
lret
pop
pop
nop
inc
push
pop
xchg
lods
mov
or
int
mov
pop
sub
testl
mov
flds
mov
sub
movsb
cmpsb
cwtl
fwait
das
rolb
pushf
jb
sbb
fsts
les
out
gs
pushf
lods
lcall
jle
mov
push
and
cmp
shrb
movsl
mov
filds
pop
dec
or
cmp
fs
jne
and
mov
sbb
loop
cmp
mov
or
insl
add
mov
fstl
pop
mov
std
cs
inc
stos
subb
je
cmc
je
stos
ss
or
sbb
mov
loop
push
sbb
adc
gs
or
or
pop
mov
adc
xchg
mov
jecxz
fistpll
cwtl
pop
icebp
leave
lret
xchg
fisubl
fsubrl
xchg
add
sub
insb
in
dec
rorb
data16
cltd
mov
insb
sub
jg
inc
out
push
repnz
ljmp
lods
dec
mov
mov
sar
es
jo
outsb
test
or
in
mov
imul
jne
out
dec
mov
inc
xor
int
add
pop
mov
pop
ljmp
out
jo
mov
das
inc
imul
orb
dec
xor
sbb
es
cwtl
test
and
fisttpll
cli
mov
cld
jl
fisubrl
jns
mov
sti
mov
cmp
lods
dec
inc
enter
cmpsb
add
adc
dec
movsb
gs
out
push
outsb
pop
sbb
sbb
mov
subb
leave
outsl
or
fisttpll
sub
inc
andb
fsubs
in
jge
jbe
push
test
stos
mov
and
sub
in
js
pushl
cs
or
lret
std
punpcklbw
mov
add
testb
aas
adc
nop
call
enter
adc
or
pusha
mov
xchg
sbb
push
adc
lock
mov
pop
pop
int
pop
jl
and
sub
dec
mov
je
cmpsl
xchg
jecxz
cmp
shrl
shrb
and
cmp
cli
mov
movl
or
xor
shll
push
popa
cmp
mov
sub
xchg
xchg
fldl
cmp
mov
mov
or
mov
sub
ja
xor
popa
sbb
adc
daa
jle
cmp
outsl
add
movsl
cmpsb
jno
push
mov
pop
push
jl
scas
jle
jb
shl
pop
push
mov
fnstenv
sar
imul
add
das
int3
dec
mov
sbb
dec
jge,pt
mov
cmp
mov
mov
rsqrtps
repnz
stc
pusha
stc
mov
and
andb
std
inc
push
cld
ret
pop
insl
das
int
mov
hlt
cmp
addr16
cmpl
ss
mov
icebp
je
mov
fdivrs
into
dec
cs
aam
fiaddl
aad
in
imul
pop
andb
hlt
jp
push
push
push
stos
fwait
cmp
out
mov
aam
ret
popa
pop
xor
xor
adc
dec
and
fsubrs
or
adc
mov
jp
fidivrl
cmp
or
cltd
adc
cmp
sbb
jle
test
cmp
jmp
or
jnp
mov
and
ss
lock
cwtl
das
ss
lcall
out
mov
xchg
sub
mov
xor
test
inc
push
xor
loopne
push
shll
and
mov
pop
addr16
into
repnz
fildll
nop
sub
test
int3
aam
or
xor
lods
movsl
bound
inc
jge
mov
insl
dec
mov
arpl
and
push
sub
inc
insl
mov
adc
push
hlt
or
xor
test
fldenv
and
or
in
inc
mov
sub
add
jns
jg
xchg
orb
mov
xor
adc
scas
outsl
sbb
lret
test
mov
nop
or
fistpl
cmpsb
sub
cmp
xchg
mov
icebp
xor
sub
sahf
test
sub
pop
andb
and
mov
xor
xchg
sbb
sbb
fistps
popf
out
pop
repnz
add
ret
mov
mov
jecxz
cmpsl
mov
mov
lahf
rclb
pusha
and
data16
fwait
rorl
daa
lods
imul
lret
dec
addr16
and
inc
iret
xchg
outsl
mov
mov
cmp
jno
stos
add
shlb
mov
pop
es
test
mov
aam
pop
out
dec
fmull
mov
jmp
xor
fimuls
adc
mov
lret
enter
out
mov
xchg
inc
lahf
data16
cmp
mov
sub
mov
jo
call
sub
shlb
fnstenv
insb
pushl
scas
sbb
pop
movsl
xchg
mov
xchg
mov
mov
dec
stos
jle
sarb
cmp
mov
jge
sbb
sti
iret
and
push
or
inc
adc
cld
bound
xor
loope
fstps
nop
fucom
std
and
pop
rcl
roll
cwtl
and
adc
loopne
stos
dec
test
xchg
xchg
xchg
dec
xor
cmpsl
iret
add
stos
loop
aas
sub
mov
lret
hlt
ss
and
sti
in
das
cltd
xchg
mov
lahf
mov
hlt
jl
mov
xor
arpl
test
adc
icebp
nop
cmp
fwait
dec
jb
sbb
sbb
insb
movsl
adc
and
pushf
scas
jmp
rcr
cld
int
loop
cmp
out
ret
mov
fwait
mov
dec
out
das
mov
int
jl
repz
jg
lds
aad
subl
cltd
cltd
jg
sbb
loop
hlt
test
mov
in
pmaxsw
push
into
out
adc
dec
xorb
popa
sbb
sbb
sbb
shr
aas
sub
fsubp
xchg
lahf
mov
mov
pop
pop
pop
leave
out
shlb
pop
cmp
inc
pop
xchg
sub
sub
inc
adc
nop
lcall
fimull
sbb
pop
push
xchg
icebp
stc
push
sarb
push
gs
adc
mov
dec
dec
test
dec
cwtl
lods
imul
push
addr16
xchg
or
insb
xchg
dec
out
in
cmpsl
jnp
ret
sahf
outsl
leave
push
inc
test
xchg
popa
xor
add
push
test
rorl
rcrb
jnp
mov
sarb
hlt
and
push
jbe
push
mov
jg
adc
add
mov
adcb
push
inc
push
cmc
inc
cmp
or
mov
mov
in
aad
ret
ja
add
jg
out
and
repnz
rcrl
arpl
mov
cwtl
or
pusha
shll
adc
cltd
push
push
imul
push
jmp
rorb
or
aaa
dec
sub
ret
pushf
sub
push
stos
or
ror
push
push
mov
dec
insl
pop
push
shlb
inc
cltd
movsb
scas
lret
test
cwtl
icebp
and
movsb
stos
pusha
lret
test
je
out
sbb
rolb
fdivp
lods
enterw
popa
out
mov
movsb
xor
fists
movsb
inc
test
push
mov
jecxz
cmp
cmp
push
fnsave
stc
mov
add
lret
push
sar
loopne
mull
dec
adc
push
push
fsubr
cmp
mov
mov
push
push
add
in
sbb
mov
aaa
inc
xor
pushf
jb
int
jb
sbb
adc
ja
fwait
cmp
loopne
jne
cltd
inc
test
mov
gs
pop
icebp
xchg
popf
sahf
insl
mov
mov
xchg
test
cmp
pop
jl
or
testl
mov
insl
sbb
lcall
movsb
inc
in
push
das
push
sub
pusha
stc
jnp
xchg
sub
mov
in
in
push
jecxz
pop
cmpsb
or
inc
jne
jecxz
test
adc
cltd
cmp
dec
addr16
out
mov
xchg
sbb
cmp
push
fidivrl
or
insb
ret
cmp
rcrb
adc
jae
sbb
sub
fst
and
cmp
adc
sbbb
das
adc
insl
push
rorb
in
xchg
push
in
pop
mov
sub
or
in
shlb
xchg
sbb
out
xor
push
cli
mov
jmp
and
push
test
ds
jns
mov
push
xor
cmp
mov
ror
cmp
mov
sar
xchg
jnp
add
aam
push
or
rcll
pop
adc
loopne
cmpsb
jmp
mov
popa
cmp
repz
inc
outsb
aad
xlat
mov
test
push
xlat
mov
dec
cmpb
dec
flds
lret
jp
sbb
test
jle
fldenv
push
mov
jp
andl
pop
xor
and
jg
add
push
dec
sbb
pop
iret
jg
xchg
loope
cmp
subl
jno
dec
test
jb
and
inc
xor
or
sub
push
ss
mov
leave
jb
jno
stos
aam
lret
in
lods
sub
or
test
imul
stos
lahf
adc
mov
fs
xor
ljmp
aaa
inc
xorb
push
adc
sub
int
and
cli
add
repz
sub
xor
sbb
add
lcall
pop
cmpsb
and
cmc
or
mov
fsub
sub
push
xchg
inc
mov
movzbl
mov
jmp
jle
lds
orl
sub
and
sbb
out
out
dec
dec
xchg
addl
int3
add
adc
lret
sti
lods
cltd
adc
pop
es
mov
mov
fiadds
sarb
add
aaa
sbb
jb
cwtl
je
mov
sub
stos
inc
data16
jbe
jge
add
mov
stos
mov
movsb
xchg
out
ja
lods
aas
adc
push
mov
stos
mov
ja
pcmpeqd
jl
repnz
scas
imul
iret
xchg
jecxz
int3
enter
push
icebp
mov
sbb
test
dec
push
dec
mov
push
adc
in
loope
movsb
cmpsb
xchg
stos
sbb
fsubl
and
and
sub
mov
cmp
imul
xchg
sarl
inc
loopne
xchg
in
xchg
mov
mov
and
das
mov
ds
repnz
lock
andl
xchg
cmp
push
sub
dec
std
lcall
int3
push
sahf
lcall
repnz
mov
pop
push
in
or
jp
addb
js
push
push
mov
adc
es
or
mov
jg
push
push
push
adc
add
mov
add
cli
fs
daa
cmp
adc
in
stos
int3
into
adc
out
xlat
dec
sahf
and
adc
out
frstor
stos
dec
mov
push
lahf
data16
push
loope
rcr
sarl
mov
add
sub
shll
dec
cmp
push
rol
xchg
jg
popf
xor
mov
aam
int3
lahf
and
pop
loopne
mov
out
inc
xor
dec
or
or
rcrb
mov
mov
jbe
jg
loopne
stc
cmpsb
adc
adc
ljmp
test
aad
enter
pushf
imul
stos
pop
jo
imul
ret
insb
mov
add
mov
sahf
fidivrl
or
aad
add
mov
cmp
add
push
cmc
dec
adc
sub
cli
mov
mov
mov
in
xchg
cpuid
mov
popf
xor
lea
jno
pop
pop
lea
add
in
cmp
dec
lds
popa
inc
arpl
movsb
sbb
movsl
bound
push
xor
loope
cmp
in
out
push
lret
dec
in
mov
jo
cmc
xor
pop
jne
test
xchg
or
mov
jbe
insl
lods
imul
dec
in
aaa
in
lret
lahf
inc
jg
aas
insb
or
fwait
ret
inc
inc
pop
mov
pushf
adc
imul
sbb
cmp
jge
mov
mov
test
dec
js
cwtl
scas
or
ja
dec
les
stos
dec
stos
rclb
aam
test
mov
and
leave
loopne
adc
pop
loop
sub
xchg
pop
sub
ret
jbe
mov
mov
pusha
push
jge
les
sbb
rorl
xchg
push
pushf
xchg
or
dec
mov
mov
testb
fidivrs
fidivrs
aaa
mov
and
adc
out
dec
pop
push
jno
lret
mov
xchg
sbb
cmpsb
pop
repz
lods
push
insl
pop
sub
mov
jle
subb
mov
mov
nop
mov
cli
sub
ret
arpl
psubq
mov
ret
in
adc
lods
mov
inc
inc
mov
arpl
lea
arpl
sbbb
iret
sbb
xchg
mov
cmc
and
xor
cmp
arpl
adc
into
pushf
inc
and
jae
movsl
xor
popa
xor
or
jl
test
call
pop
insl
cltd
mov
shr
pusha
dec
adc
sbb
jae
mov
addr16
lret
push
lds
xor
mov
dec
cmpsl
mov
sub
xor
in
lret
repz
sub
int3
xchg
adc
idiv
xor
add
popa
inc
or
mov
jns
scas
cli
mov
mov
push
cmpsl
addr16
aad
xchg
mov
stc
push
lahf
les
xchg
fs
gs
addb
je
mov
inc
insl
add
out
push
in
int
cmpsb
and
cmp
inc
dec
add
pop
lock
test
push
mov
push
xchg
ret
jb
dec
loopne
sti
inc
nop
sbb
add
dec
sbb
inc
in
in
imul
mov
pop
rcrl
clc
dec
cmpsb
aas
icebp
out
insl
mov
mov
xchg
in
pop
mov
aam
mov
movsb
pop
add
je
jno
adc
xchg
pop
adc
sbb
mov
jp
sbb
js
loope
pop
push
jle
and
arpl
lock
jno
inc
xlat
ss
aam
movsb
sahf
les
pop
push
adc
mov
jb
jno
sbb
xor
jl
ja
rcl
out
lods
mov
pop
add
dec
sub
pop
loopne
push
cld
mov
int
lods
cmp
push
adc
mov
sub
xchg
dec
sub
jecxz
aad
mov
jae
dec
rolb
iret
or
lods
add
mov
pushf
or
adc
shrl
orl
adc
in
dec
jno
ja
daa
cmp
test
dec
sub
frstor
and
pop
and
test
pop
push
xchg
fxch
arpl
out
je
cmp
lcall
mov
and
mov
xor
xlat
mov
inc
and
int
push
sub
cmc
inc
adc
in
subb
sarl
iret
mov
out
mov
jns
cwtl
push
push
loope
or
xor
leave
imul
push
sbb
sahf
sbb
cmp
movsl
jg
rolb
adc
or
test
stos
sub
pop
lea
mulb
push
fistl
out
mov
push
call
jbe
subl
gs
dec
daa
out
inc
jg
mov
repnz
pop
fbstp
and
inc
jmp
and
push
fscale
push
dec
shll
mov
ret
mov
add
jmp
sub
cld
or
and
pusha
xchg
and
aad
sarl
and
fsubs
jle
jmp
or
inc
pusha
dec
lock
cli
xchg
sbb
mov
in
mov
and
lret
fcmovnbe
test
and
gs
mov
jb
pop
xor
loop
sti
mov
out
jb
mov
mov
ret
adc
mov
inc
fs
push
cmp
push
lret
fimuls
push
pop
cmp
jecxz
inc
outsb
loop
pop
fimuls
dec
data16
or
sbb
add
pop
sbb
sub
dec
and
outsl
orb
push
scas
fistpl
jecxz
cs
jp
out
ljmp
outsb
daa
dec
jmp
inc
stos
xchg
jb
insb
hlt
int3
xacquire
rolb
test
iret
dec
les
xor
push
sbb
adcb
cmp
scas
cmpsl
idivb
lods
push
mov
mov
pusha
incb
sbb
mov
out
cwtl
es
sub
mov
and
cld
xlat
push
xchg
mov
pop
pop
test
push
adc
xlat
pmaddwd
jae
enter
or
inc
repnz
jmp
out
or
push
ljmp
dec
jb
repz
jmp
xor
jl
mov
cwtl
xor
cmp
stos
fidivl
jmp
ret
setbe
or
pop
lret
xchg
sub
movsb
sbb
pop
fistps
fnsave
imul
test
lahf
out
mov
sbb
mov
sbb
cmp
push
ret
mov
pushf
xchg
dec
mov
test
cli
daa
or
fs
int
fs
int
dec
add
int
repnz
xchg
sub
jbe
fistl
mov
jo
arpl
sbb
sbbb
xor
rcrl
repnz
mov
cmp
fisttpll
lret
or
fstp
daa
cltd
push
add
in
aas
add
and
outsl
mov
int3
dec
stos
lods
dec
jl
inc
sub
gs
call
loop
mov
testl
clc
ret
push
jge
iret
mov
jbe
inc
movsb
sbb
mov
cmp
mov
sub
lods
pop
xor
jle
in
addr16
push
or
fiaddl
sbb
inc
sbb
mov
adc
inc
dec
sbb
pop
jmp
push
sbb
enter
fsubr
roll
sbb
and
add
jae
xchg
push
sub
fwait
jl
dec
sbb
jo
cli
mov
iret
movsl
test
test
xchg
mov
mov
xchg
stc
pusha
jb
xor
cmp
jle
dec
push
mov
sbb
cmc
stos
lods
aad
or
out
pop
push
enter
icebp
lds
fcomps
dec
jl
adc
add
das
adc
sbb
sub
xor
sti
sbb
dec
push
cltd
mov
out
sub
xchg
nop
std
mov
ja
xor
aaa
lds
push
dec
jbe
mov
iret
in
cmpb
mov
jg
ret
rcrl
test
jb
icebp
imul
and
pop
cmpb
or
jge
aas
je
addl
daa
sub
mov
aaa
jae
ffree
inc
test
sti
dec
std
or
mov
loope
or
call
insb
and
mov
imul
mov
loope,pt
xchg
xor
gs
cmp
fimull
xor
add
mov
dec
sbb
push
jg
in
bound
imul
mov
jge
ss
ja
xchg
pop
addr16
pop
bound
jmp
arpl
fwait
cmp
ss
or
cmp
je
je
ficompl
mov
les
inc
test
mov
sbb
jbe
add
cmpsl
pop
ret
jmp
sbb
mov
mov
jo
dec
icebp
sub
mov
jae
and
dec
xor
ret
repz
pop
jne
stos
movsl
sub
or
icebp
fcmovbe
lret
jle
leave
add
loopne
and
ljmp
test
shrb
mov
lods
dec
mov
and
call
adc
cmp
xor
xchg
stos
mov
push
push
cmp
addr16
lods
jecxz
xor
mov
xchg
xor
jae
repz
mov
sarl
mov
adc
or
sub
out
or
bound
mov
sbb
jle
hlt
repz
ja
or
aas
sub
xor
pusha
into
cmpsl
inc
or
pusha
mov
adc
xor
sub
lods
pop
icebp
ja
xor
and
add
fs
int
sub
mov
lods
adc
sub
or
xor
push
test
xchg
pop
rcl
faddl
sbb
jae
inc
add
test
int3
lock
mov
hlt
and
dec
inc
out
ljmp
or
dec
std
dec
xchg
pushf
lock
hlt
clc
nop
jbe
gs
das
cmp
push
xor
jle
call
in
or
clc
shl
xchg
int3
fwait
xlat
push
or
adc
popf
test
add
dec
in
es
cmpsl
and
dec
sar
pop
lock
push
nop
int
or
sahf
jae
xchg
inc
push
mov
dec
jo
dec
adc
aad
insb
cltd
xchg
les
push
dec
push
sbb
outsb
gs
outsb
jecxz
imul
pop
mov
mov
sub
data16
inc
loopne
dec
jo
sti
dec
sti
xchg
pop
out
fildl
and
inc
push
xor
std
cmpsl
mov
sbb
ja
shll
cli
mov
dec
addb
adc
fwait
sarb
rolb
lret
cli
jp
and
and
push
push
daa
jle
popa
mov
adc
rcll
and
xor
sbb
cld
xchg
jne
cwtl
mov
sti
clc
add
idivl
pop
out
push
mov
out
adc
cmp
jo
fs
fisubl
pop
aas
mov
xor
daa
inc
fcoml
dec
sub
mov
adc
inc
mov
jl
mov
inc
lds
test
lret
push
in
cmc
mov
or
repnz
xchg
and
roll
dec
mov
sahf
jp
inc
push
int
sub
jo
loop
iret
cmp
dec
jb
shlb
push
and
mov
and
push
push
push
jbe
push
iret
push
push
jge
mov
mov
jae
mov
test
mov
les
jge
push
leave
sbbl
or
fnsave
test
add
mov
cli
jmp
lahf
cmp
cmp
js
sbb
xor
fcomip
adc
mov
dec
aad
inc
pop
inc
out
test
out
jnp
xlat
inc
add
inc
xor
cmp
push
scas
mov
cmp
or
push
or
mov
sbbb
enter
aas
notl
or
adc
cltd
mov
xchg
pusha
mov
adc
iret
aad
lods
stos
push
push
push
dec
fcomps
arpl
cmp
out
imul
rcr
cmpl
xchg
rorl
and
fbstp
rcrb
mov
mov
or
aad
mov
lea
fs
sbb
addr16
in
xor
popa
test
dec
popa
dec
adc
inc
cld
add
fcompl
mov
test
mov
ljmp
sbb
pop
xchg
pop
jb
xor
in
addr16
popf
and
jne
xchg
mov
das
xchg
popa
pop
jae
fbld
sahf
and
and
and
cmpsl
xor
or
push
popf
mov
jle
sbb
outsl
fisubs
push
dec
loopne
rorl
pop
jbe
nop
xchg
ret
or
and
xor
fwait
das
jmp
in
xchg
jb
jmp
mov
das
cmp
psrad
scas
cmpsl
push
xchg
ret
fidivs
mov
xchg
or
xlat
aaa
movsb
das
push
les
scas
mov
jae
xor
sti
int
dec
cmp
xchg
mov
lods
arpl
jo
jns
out
push
jb
sub
fs
sub
sub
add
inc
mov
cld
in
pop
xchg
mov
adc
sbb
aas
mov
dec
outsb
mov
ds
movsl
pop
mov
dec
cmp
cmp
mov
cs
jg
call
sub
add
scas
test
add
out
dec
cmpsl
inc
inc
pusha
in
adc
add
mul
dec
loopne
in
bound
jl
mov
jle
pusha
ret
mov
shrl
js
movsb
xchg
dec
fnstcw
mov
out
and
mov
xlat
mov
mov
mov
cmp
mov
arpl
mov
movl
cmp
cmpsl
call
xor
pop
adc
mov
xchg
adc
sub
cmpsl
ret
or
pusha
insb
in
sbb
ret
mov
push
mov
inc
inc
xchg
rolb
mov
mov
out
bound
inc
mov
insl
mov
push
popa
or
ds
movsl
and
inc
xchg
rorl
sub
pop
cld
sarb
sub
push
inc
mov
and
setp
out
mov
sarb
stos
mov
in
sti
mov
mov
out
movsl
ja
inc
clc
ror
sbb
inc
insb
icebp
mov
sbb
and
cltd
int
sub
or
xor
out
testl
mov
cmp
mov
je
loopne
xchg
or
jge
adc
rcll
rorb
dec
push
test
test
mov
shlb
je
js
sbb
sbb
js
or
xor
xor
ret
ffreep
lret
mov
testl
push
mov
sub
int
mov
jmp
cs
adc
test
imul
pushf
clc
cmpsl
mov
cwtl
jns
in
sarb
loope
shlb
mov
loope
mov
jg
popf
mov
mov
and
pop
stc
and
xchg
out
inc
int
add
mov
jne
mov
ret
xchg
stos
xor
in
or
int
lods
pop
and
outsb
sbb
rol
dec
and
mov
jge
lock
xorl
push
push
dec
adc
stos
fwait
mov
sbb
mov
xchg
addr16
cmp
cmc
in
cmp
enter
out
and
mov
cs
adc
rorb
movsb
imul
lods
arpl
rorl
sahf
mov
mov
out
cmp
sub
adc
fcoms
hlt
je
sbb
inc
stos
cmc
mov
push
fisttpll
sbb
repnz
xchg
aad
mov
popf
jo
pop
movsl
adc
rol
and
daa
lcall
mov
in
fs
shr
imul
test
popa
sbb
add
inc
and
dec
sbb
hlt
ficoml
icebp
gs
dec
pop
es
jmp
divb
or
or
inc
sub
mov
in
leave
and
xor
inc
lret
repz
sub
inc
push
xchg
cmpsb
push
sub
cmp
std
mov
cmp
jp
inc
arpl
fadd
cmp
xor
iret
jbe
mov
call
testl
andl
scas
andb
in
xchg
mov
shrl
sub
jbe
sbb
inc
xchg
push
mov
pop
dec
sahf
rcrb
int
int3
and
adcl
adc
test
push
aad
pushf
mov
lock
pusha
cvtps2pi
push
dec
mov
es
sbb
lret
adc
jecxz
xor
or
rol
cmp
daa
jae
pusha
pop
xchg
cmp
mov
int
pop
movsl
push
orl
loope
sub
cmp
and
addl
push
dec
rcrb
in
adc
pop
and
xchg
jne
test
stos
shl
add
xchg
push
repnz
dec
loope
pop
mov
mov
movsl
push
aaa
or
inc
xor
mov
cli
mov
pushf
pushf
or
into
dec
mov
cmp
cmp
and
fdivl
sub
sbb
rclb
shrb
cltd
mov
loope
lds
je
xor
pop
push
cs
cmp
lods
jns
neg
or
sub
ss
out
popf
lock
cmpsl
mov
inc
xor
nop
xor
filds
push
cmp
shrb
lods
mov
sbb
mov
pop
jle
mov
mov
adc
test
insl
xchg
push
sub
leave
test
fsubrp
mov
movsl
add
fidivrs
mov
or
aas
jno
xchg
pop
push
sub
orb
mull
les
pop
sub
push
lock
xchg
loopne
dec
daa
adc
push
sub
lret
xor
cli
sbb
loope
es
stc
cmp
leave
xorb
and
rorb
push
add
jle
and
push
stos
fcoml
out
sbb
outsb
outsl
or
jbe
ss
loope
fcmovne
cmp
fildll
into
cmp
gs
pop
fdivr
cs
sbb
jnp
sbbl
mov
dec
enter
jnp
addr16
cmp
mov
jne
test
cld
jo
rolb
mov
dec
mov
sbb
mov
jle
jg
push
ljmp
aad
out
push
cmp
or
mov
rolb
repnz
or
imul
xor
popf
add
stos
pop
rol
push
rclb
int3
mov
or
xor
sub
ljmp
mov
cltd
inc
repnz
adc
int
out
popf
lock
add
shrb
int
mov
jns
dec
cwtl
ret
xor
adc
roll
imul
cmpsb
dec
scas
nop
fs
push
js
insb
ss
mov
addr16
dec
pop
adc
cmp
mov
clc
nop
pop
inc
add
inc
xlat
adcb
cmp
jae
dec
cmp
cmp
push
out
inc
imul
sub
es
push
sub
into
outsb
inc
addb
adc
into
dec
mov
lret
fst
arpl
jae
dec
push
mov
lret
repnz
mov
lcall
jnp
xchg
fldt
leave
int3
ljmp
sub
push
in
repnz
stos
xlat
lods
in
fmull
push
stc
dec
lahf
mov
xor
adc
leave
xor
in
andb
nop
js
scas
notb
pop
jnp
jbe
jno
pop
push
pusha
cmp
jp
jne
fldt
xchg
dec
in
lods
ss
stos
mov
gs
add
call
cmp
add
push
push
mov
xchg
mov
inc
push
dec
ja
mov
push
inc
mov
test
push
and
jl
xor
in
push
in
mov
xor
cwtl
fisubrl
ss
movsl
jmp
mov
cwtl
push
cmpl
iret
push
icebp
adc
inc
test
xchg
cmp
in
dec
inc
or
add
cmp
mov
lods
jns
or
fs
pop
mov
lock
push
enter
xlat
out
mov
adc
adc
inc
add
and
dec
and
test
lret
aas
pop
mov
sub
sar
mov
std
or
push
add
adc
in
mov
fsubrl
in
adc
push
mov
jne
outsl
cmpsb
cmp
pop
sbb
mov
std
rcrb
mov
add
push
mov
jne
or
xlat
ss
mov
jns
mov
adc
movsb
jns
ds
cmp
mov
mov
xchg
push
mov
stos
dec
repnz
cltd
and
imul
jno
add
arpl
in
insb
sub
and
enter
icebp
push
insb
test
cmp
or
mov
dec
push
in
addb
dec
insb
fsts
mov
lret
ds
fiadds
push
in
scas
cwtl
xchg
xchg
popa
outsb
jmp
rcrl
dec
cltd
outsl
fdivrs
add
mov
mov
xchg
lret
mov
lea
pop
xchg
stos
sbb
outsb
push
jle
cli
and
xchg
cmp
sbb
mov
mov
stos
pop
mov
out
fdivs
add
jae
and
icebp
insl
add
sub
pusha
push
xor
rclb
sub
xchg
pop
in
sbb
shr
idivl
sbbb
mov
add
sub
shlb
lret
inc
jnp
xlat
fstpl
mov
das
mov
jl
fisttpl
insb
fisubrs
mov
xor
sbb
adc
fscale
repnz
cmp
leave
mov
iret
enter
mov
mov
mov
lcall
jnp
jmp
inc
mov
add
test
test
hlt
in
jmp
fdivl
subb
dec
push
mov
and
iret
xchg
jnp
and
mov
adc
inc
cmc
push
pop
adc
gs
push
out
xchg
ss
ret
pop
in
lret
pop
inc
imul
cmpsb
std
sub
loope
dec
cld
inc
mov
dec
ds
cmp
jmp
fnstenv
mov
enter
das
cmp
and
lret
nop
lods
cmp
outsl
xchg
cld
xchg
xchg
cs
xor
addr16
mov
ret
or
pop
xor
cmp
cmc
jle
sbb
add
or
cmp
add
cld
adc
xchg
xchg
cmp
rcr
aam
xchg
mov
or
lahf
pusha
fiadds
mov
aad
jp
xchg
hlt
pop
fisttps
add
push
inc
cwtl
loop
xchg
dec
lock
lcall
inc
push
pop
leave
ja
scas
pop
mov
int
jbe
mov
outsb
inc
out
or
pop
and
inc
ret
mov
xor
cmpsb
shlb
adc
mov
xchg
push
pop
push
jmp
sbbl
cmp
inc
pop
push
xchg
gs
sub
mov
or
jae
jg
xchg
jno
aas
imul
pop
lods
dec
cmpsl
xor
mov
cli
mov
xchg
jno
pushl
jne
je
das
sbb
jbe
or
sbb
dec
jmp
jns
bound
insb
or
fdivrp
into
xchg
mov
jmp
xchg
pop
into
decl
cwtl
lods
xor
and
xchg
push
into
loope
insl
movsb
movb
ss
daa
gs
cmp
inc
rolb
mov
rorl
insl
out
fdivrs
push
sub
std
cmpsl
lcall
sbb
les
push
or
dec
jmp
adc
into
and
or
repz
out
sarb
ret
or
push
and
dec
adc
push
sub
cmp
cmp
push
mov
mov
lds
cld
cmpsb
ffreep
xor
xor
inc
lock
xchg
xor
cltd
mov
push
mov
or
xor
fwait
hlt
push
or
and
cmp
mov
fsubl
popa
insb
jg
into
or
mov
mov
out
xor
cmpps
mov
xchg
mov
das
lds
aaa
pop
push
call
insb
mov
test
mov
in
arpl
xor
xrelease
in
adc
cmpsb
xorl
mov
cmp
in
mov
cmp
roll
and
lcall
mov
add
rcrb
mov
jo
inc
mov
xchg
roll
xchg
push
and
xchg
call
movsb
iret
mov
jmp
sub
fwait
sub
jo
jge
dec
adcl
movsl
jmp
mov
pushf
mov
jae
add
repz
mov
sbb
pop
push
push
mov
jle
push
int
das
int
in
arpl
imul
xchg
xchg
cmp
sbb
clc
stos
lret
std
icebp
pop
and
jle
cli
std
pop
movl
mov
adc
and
mov
pop
jp
adc
jl
movsb
inc
inc
xor
cld
fwait
pop
dec
pop
out
push
stc
push
dec
test
nop
pusha
outsl
mov
sub
mov
shlb
jo
push
test
sub
call
insl
add
inc
mov
cmp
mov
cmp
shl
xor
push
movb
pop
push
cli
jle
jns
pop
out
cltd
roll
push
enter
popf
jno
in
dec
std
adc
leave
or
inc
inc
popf
test
xchg
loop
setge
jb
pop
add
push
adc
test
xor
xchg
shl
xchg
rolb
push
nop
and
out
sub
add
loop
cmpsl
into
pusha
sub
test
sbb
mov
jbe
jge
outsl
bound
fsubl
inc
pop
cmpsl
test
cld
out
cmp
dec
adc
mov
shrl
jge
rcr
cmc
lods
cs
das
lods
adc
call
outsl
outsl
sbb
call
cmp
jb
insl
and
ja
push
cmp
add
dec
shrl
lea
es
push
sub
or
or
mov
aaa
enter
jle
pusha
push
test
out
inc
xorl
xchg
xchg
shll
or
rsqrtps
movsb
std
stos
push
out
pop
sbb
out
mov
loopne
pop
inc
inc
lcall
std
jp
fsubl
cli
cmp
jo
outsl
or
pop
fnsave
add
lcall
adc
lock
push
aam
nop
jns
pushf
cltd
dec
push
shr
mov
inc
shrl
xchg
sbb
and
and
or
lds
lods
inc
fnsave
hlt
cmpsb
adc
das
mov
hlt
fdivrs
sahf
cmpsl
aad
jg
js
dec
add
mov
and
push
mov
test
nop
mov
add
aad
repnz
jle
repnz
repz
push
sarb
hlt
push
pop
dec
fldcw
inc
cmpsb
popf
cmp
test
sub
mov
cmp
sub
addr16
out
leave
mov
xchg
lahf
lret
fwait
xchg
jbe
sti
shl
dec
clc
adc
negl
out
cli
xchg
shrl
pop
pushf
movhps
vphaddwq
imul
outsb
cmp
adc
imul
addr16
add
adc
lcall
loope
pop
lods
adc
cmp
dec
out
das
cs
adc
xchg
push
pop
and
mov
pop
sbb
or
lcall
adcb
jmp
push
aad
xor
insb
mov
fdivrp
sar
fmul
mov
rcll
sub
pop
enter
ljmp
imul
add
lock
shll
dec
sti
adc
test
roll
push
test
aad
or
push
js
test
movsb
xchg
subl
xchg
addr16
push
xchg
addr16
push
cli
sbb
fldenv
aas
out
sbb
sub
push
sbb
jno
fmuls
mov
adc
stos
shr
sbbb
dec
aaa
mov
test
fs
mov
insb
jecxz
mov
arpl
xchg
data16
pushf
rcrb
fidivrl
sub
out
out
mov
or
stos
jecxz
xor
je
pop
sbb
jno
mov
xchg
lss
loop,pt
add
fdivrl
popa
jl
sub
out
rorb
das
and
dec
neg
ret
xchg
addb
jle
ja
jne
and
dec
fwait
push
push
arpl
sbb
push
push
cmpsb
add
xor
je
or
lret
or
add
xor
sub
je
shlb
push
dec
jmp
adc
cwtl
fwait
and
pushf
out
mov
incl
push
popf
and
fdivs
lea
jnp
adc
jne
or
jno
or
rorb
push
call
loopne
nop
mov
dec
adc
and
mov
sar
in
sbb
test
bswap
push
mov
cmovo
add
inc
outsl
dec
jge
scas
repnz
into
loope
mov
and
add
rcll
shl
sub
adc
aaa
sbb
inc
inc
push
insl
jns
mov
je
out
xor
hlt
xorl
ficompl
cmpsb
leave
sub
sbb
xchg
scas
mov
add
loop
loopne
call
adc
inc
inc
or
repnz
inc
pop
adc
xchg
push
addl
push
stos
movl
outsb
or
pop
nop
aas
or
jge
outsl
xor
cmp
lods
icebp
pushf
xlat
xchg
lcall
mov
cwtl
mov
mov
and
xlat
xchg
or
ss
fstl
sbb
icebp
sub
in
imul
data16
ljmp
cltd
jo
stos
in
fisttps
and
and
test
test
nop
scas
jmp
or
scas
enter
xchg
mov
mov
mov
inc
pop
mov
lods
ja
add
scas
outsl
pop
jno
out
inc
jmp
jle
cmp
cmpsb
ljmp
lret
or
xchg
jg
iret
xchg
xor
mov
jns
pop
and
xchg
int
out
push
loop
inc
dec
mov
xor
shll
push
sbb
icebp
cwtl
es
xchg
cmp
sbb
fadds
aas
xor
movsl
mov
sbb
sub
pusha
xchg
sbb
clc
stc
sbb
ds
rcll
clc
aad
outsl
lret
cli
cmpsb
pop
xchg
xorl
adc
movsb
inc
inc
mov
sbb
mov
push
mov
jge
das
push
sbb
xchg
jne
sub
or
jnp
in
pop
loopne
repz
pop
pop
out
pop
adc
aad
cmpsb
or
test
enter
pop
inc
and
in
mov
ficompl
daa
roll
adc
dec
sbb
aam
sub
insl
add
outsb
f2xm1
pop
out
jno
cmp
mov
cwtl
push
lret
cmp
imul
cmp
repnz
lcall
idivl
adc
pop
or
mov
stos
xor
pop
cmc
mov
icebp
xor
push
insb
mov
das
pop
mov
mov
enter
dec
jnp
imull
jne
jo
mov
adc
and
aad
mov
jecxz
orb
cmp
call
or
movsb
lcall
push
lahf
jg
lods
ja
or
ss
mov
xor
xchg
mov
je
arpl
sahf
outsl
mov
push
xchg
jns
sarl
decl
fnstenv
sbb
adc
xchg
loope
ret
mov
xchg
inc
xchg
xor
dec
and
lret
mov
xchg
aas
cmp
push
lods
into
push
and
mov
add
out
pop
pop
into
or
stos
daa
and
sbb
pop
or
push
push
out
push
imul
arpl
jbe
dec
jl
or
out
mov
je
out
push
imul
fisubs
or
sub
jle
jo
iret
xor
push
cld
daa
cmp
js
cmp
lahf
test
test
std
or
pop
mov
push
loopne
push
leave
mov
loopne
xchg
sar
aaa
sahf
mov
pop
aam
ljmp
lods
out
push
repnz
jae
ret
push
test
data16
shrl
adcl
dec
les
or
push
and
movsl
cld
push
cmp
fmuls
ret
pop
push
loope
cwtl
sbb
test
lahf
inc
int
arpl
jnp
and
adcb
shll
xor
faddl
out
lahf
enter
dec
out
or
ds
or
stos
jne
mov
stos
out
bound
dec
cmp
pop
xor
or
pop
decb
adc
cltd
data16
dec
sub
pusha
insb
dec
push
xchg
clc
cmpsl
cmp
adc
mov
out
bound
out
clc
popf
inc
les
and
test
cs
fsubrp
jmp
push
call
sub
pop
cs
cmc
add
mov
movlps
loop
mov
pop
xor
sbb
out
jne
jno
mov
pop
pop
fsub
add
cmpsl
ja
mov
sub
add
fnstsw
mov
cmp
push
cld
jp
xchg
push
stos
dec
sub
imul
ja
fstps
ret
and
pop
dec
dec
repz
fidivrs
mov
ljmp
icebp
or
mov
mov
xor
sbb
sub
push
sahf
movsb
pop
pop
shll
ja
ficoms
test
stos
lea
sbb
sar
dec
mov
icebp
jg
hlt
pushf
mov
mov
sbb
push
pop
dec
negb
sub
clc
or
add
xchg
out
dec
in
cld
push
leave
inc
sbb
jmp
rorb
loope
in
mov
icebp
mov
mov
lahf
pop
cmp
in
pusha
cmp
xchg
jb
jae
mov
out
icebp
arpl
scas
sub
xchg
movb
push
and
arpl
imul
adc
push
dec
out
and
mov
xchg
hlt
pusha
js
outsl
adc
inc
and
cmpsl
popf
rcrl
mov
mov
outsl
push
xchg
shll
jg
je
shrb
xchg
mul
int3
push
call
cmp
jo
xor
mov
loop
add
mov
ss
movsl
pop
fs
enter
insl
cmp
orl
in
cmpl
cmpsb
std
pusha
or
mov
add
mov
outsb
add
sbb
mov
aam
sbb
out
cmp
nop
outsl
mov
xorb
jl
mov
sbb
adc
sbb
daa
add
push
push
insl
sub
push
dec
pop
dec
jl
movsb
popa
and
repnz
mov
sub
lret
inc
adc
popf
fldl
cwtl
pushf
jb
adc
and
mov
bound
add
icebp
lret
xchg
rolb
jl
loopne
lods
push
fnstcw
pop
in
mov
ss
inc
lahf
fnstsw
outsl
sbb
jns
lret
add
mov
mov
jne
int
arpl
push
decl
pushl
xor
mov
in
mov
ret
daa
xor
inc
xor
cltd
xor
inc
jno
lcall
or
int3
mov
cmp
add
mov
inc
pop
aaa
gs
jecxz
sub
int3
ds
push
lret
mov
pop
je
lock
and
add
jecxz
scas
cwtl
sbb
push
dec
jnp
sub
mov
int3
sar
rorl
jmp
js
jp
pop
shr
mov
sbb
popa
cmp
inc
sub
fistps
out
jns
pop
js
cmp
in
pop
pop
insl
jno
jo
jle
cmp
jb
add
jmp
ljmp
into
mov
sub
daa
scas
pop
loopne
dec
xchg
lds
xor
outsb
add
pop
icebp
out
test
sub
xchg
pop
fucomp
pop
push
addb
js
adc
repz
and
bound
or
push
or
and
mov
and
cmpsb
repnz
add
mov
cmpsb
pop
lcall
mov
push
int
sti
mov
xchg
subb
movsb
inc
mov
or
jns
lcall
repz
dec
mov
mov
sbb
sub
mov
mov
ja
in
jl
pop
fs
add
mov
ja
push
mov
or
jb
add
icebp
sbb
cltd
or
pop
sub
outsl
ljmp
fs
mov
daa
or
je
cmpsl
xchg
inc
int3
sbb
aas
in
and
daa
push
cs
push
xchg
leave
and
sbb
pop
popf
sbb
scas
mov
outsl
loope
or
push
movsl
and
std
mov
inc
cmp
imul
jmp
cmc
aas
pop
jno
std
jne
out
push
cmp
mov
inc
push
mov
xor
popf
inc
insl
add
xchg
mov
insb
mov
and
fs
dec
jo
loop
cs
inc
adc
faddl
roll
jo
fldcw
or
pop
mov
int
jp
int
xchg
pop
xchg
hlt
repz
xchg
inc
out
fstpt
jo
sbbl
xchg
mov
xchg
fimull
adc
push
aam
pop
mov
sbb
ds
divb
in
mov
or
jl
jge
xor
pop
aaa
cmp
hlt
jns
or
sti
cld
repnz
jge
push
je
pop
sbb
mov
mov
sub
dec
test
dec
sbb
loopne
cs
scas
aas
lods
rcr
mov
gs
and
xchg
mov
dec
pop
mov
mov
ja
cmpsb
pop
into
andl
xchg
jmp
dec
outsb
sbb
das
inc
push
jge
mov
scas
out
jns
inc
adc
outsl
push
sti
pxor
dec
xlat
push
mull
jecxz
cmp
add
mov
cmpsl
es
cmp
rcr
enter
mov
mov
push
inc
mov
outsl
out
mov
adc
cmp
movsl
jp,pt
xchg
imull
iret
pop
add
fildll
idiv
sub
push
pop
dec
pop
cld
sbb
adc
xchg
rorb
xor
in
fsubp
pop
into
dec
or
and
sarb
xor
xlat
gs
mov
out
add
aam
mov
adc
out
test
sbb
gs
fcompl
mov
jno
outsb
cli
ds
dec
mov
sti
cwtl
cmp
pop
sbb
out
into
mov
dec
jo
pop
adc
jmp
inc
jno
push
jne
adc
inc
pop
aam
xchg
and
add
scas
repz
jecxz
mov
or
insb
addl
push
push
imul
and
insl
push
mov
xchg
pop
mov
cmc
dec
or
or
out
hlt
mov
in
mov
or
gs
ljmp
and
arpl
gs
hlt
xor
stos
xchg
xchg
in
test
mov
and
jle
push
and
xchg
and
aad
fstpt
lock
es
adc
xchg
push
mov
addr16
mov
mov
pop
mov
ljmp
sbb
jbe
dec
fidivl
push
lea
sbb
cmp
divb
negb
add
add
mov
xchg
ja
inc
cmp
xchg
mov
fs
jnp
aaa
cs
xorb
xchg
or
add
add
ds
and
jne
pop
in
fnsave
mov
lods
insb
out
loop
cmp
mov
test
aam
cmp
dec
inc
add
lahf
pop
add
fsubrs
or
jb
mov
dec
pop
movsb
mov
fimull
addb
dec
out
push
pushf
cmc
ja
daa
data16
jg
xchg
popa
xchg
xchg
sti
push
out
pop
mov
xchg
mov
lods
inc
rcrb
cmc
stc
mov
aas
jns
shrl
add
test
sbb
rcrl
jns
add
mov
hlt
addb
pop
popl
imul
mov
test
mov
push
sbb
mov
gs
mov
dec
mov
imul
adc
pop
push
sub
mov
outsb
or
sbbl
fisubrl
add
cmp
lret
dec
add
in
xchg
faddp
hlt
inc
cld
xor
and
inc
or
add
gs
sbb
insb
outsb
js
mov
mov
cmc
arpl
ss
lods
arpl
sti
push
xlat
out
ds
lods
push
cmc
loopne
dec
popa
stos
fcoml
cli
in
inc
imul
mov
xlat
cltd
mov
push
jbe
out
or
loope
cmpsl
pop
shlb
ja
out
or
sub
daa
or
dec
xchg
dec
cli
into
pop
add
fsub
cmpsl
add
lret
cmpsb
repnz
nop
out
push
out
pop
adc
adc
sti
xchg
jecxz
fwait
loope
lods
stos
adc
inc
fwait
push
xchg
push
jl
push
cmp
neg
add
nop
scas
imul
aad
sub
repz
in
jns
lret
pop
cmp
ficompl
or
jecxz
lods
clc
daa
or
arpl
dec
xchg
loop
xchg
test
outsl
ljmp
mov
jnp
dec
add
hlt
jecxz
gs
and
in
mov
cmp
or
scas
addr16
xlat
lea
xor
sub
push
shrb
sbb
iret
push
pusha
adc
inc
iret
test
inc
sub
cmp
rclb
jne
mov
dec
xor
mov
fstl
and
cmc
popa
cmp
ret
mov
xchg
jae
mov
mov
mov
pop
addl
pop
popf
mov
fidivl
mov
or
mov
xor
lds
out
pop
insb
into
out
push
std
dec
popl
pop
pop
mov
mov
cmp
mov
shlb
loop
jo
pop
shrl
out
pop
jbe
popl
rclb
aad
scas
clc
data16
add
xor
cmc
hlt
and
xchg
sub
push
repnz
in
adc
sub
mov
movsl
movsb
mov
xchg
add
cmp
mov
and
pop
inc
rcpps
call
lock
rcrl
adc
sbb
push
dec
aaa
scas
xor
lods
rcrb
xlat
dec
arpl
repz
loop
push
and
add
loope
mov
sarb
xor
sub
push
test
sbbb
testl
push
fsub
push
and
or
cmpsb
inc
jnp
push
and
adc
jb
mul
test
repnz
sahf
jne
adc
movsl
aas
jns
nop
out
mov
and
test
lods
icebp
jge
lods
xor
stc
sbb
mov
flds
jle
es
or
hlt
andl
mov
out
movsl
bts
inc
popf
xchg
lret
jne
or
sbb
sbb
shlb
in
mov
in
mov
fsubrl
movsb
mov
cmp
jg
pop
cs
aam
inc
stos
adc
loope
scas
insb
ds
bound
cmp
add
sub
ret
mov
lret
loopne,pt
push
pop
mov
mov
dec
loop
jle
mov
jp
xor
in
cwtl
negb
cmp
sub
in
out
loop
mov
push
outsb
push
pop
mov
mov
sbb
pushf
imul
stos
mov
xor
lret
jl
sbb
call
mov
repz
jle
or
sbb
push
jne
sub
repnz
addr16
or
scas
rorb
and
scas
mov
imul
lahf
xchg
sarl
fscale
fwait
push
adc
stc
subl
mov
cwtl
into
fstps
inc
mov
xor
hlt
cmp
jmp
pop
mov
jnp
dec
xor
into
hlt
xor
xchg
cmpl
sti
sbb
test
les
lret
sbb
shll
data16
xchg
xorl
mov
mov
repnz
lcall
cmp
adc
cmp
inc
ja
sarb
xor
mov
mov
scas
xor
rcrb
subb
jg
add
test
hlt
out
cmp
fidivl
outsb
jl
ja
ljmp
xor
jg
fsubs
dec
xchg
pop
pop
rcr
dec
sbb
sub
loope
rclb
jne
add
inc
leave
cmp
mov
ffree
mov
sub
push
or
fmuls
lret
adc
ljmp
movsb
mov
in
dec
sbb
xchg
pop
pop
clc
enter
dec
test
aad
xchg
lods
sub
xchg
in
bound
ljmp
int3
lret
rclb
jl
fidivl
int3
or
fistpll
lods
gs
daa
fnstcw
jo
mov
push
push
pop
mov
pop
pushf
lods
mov
loopne
mov
je
jns
xor
adc
loope
mov
ret
int
call
push
pop
movsl
inc
stos
nop
mov
bound
loopne
xchg
jle
xor
fs
iret
mov
int
in
mov
lahf
ds
jne
jl
js
jmp
inc
mov
and
and
or
xchg
pop
push
mov
jae
aad
or
addr16
sbb
xchg
in
fldenv
clc
and
cmc
and
addr16
xor
lahf
cs
xchg
jecxz
and
test
xchg
dec
or
pop
xchg
or
jle
jg
adc
call
sbb
sub
jnp
pop
push
call
xlat
outsl
sub
gs
xchg
scas
or
cmpb
ret
inc
cmpsl
adc
mov
pop
mov
scas
and
fnstenv
test
sbb
mov
sbb
pop
push
fwait
add
out
xchg
rcrl
subl
loop
xchg
push
or
lea
or
icebp
int3
mov
loop
clc
andb
stc
or
cli
ja
std
lock
xchg
push
rorl
pop
jbe
bound
inc
xchg
sbb
loopne
daa
add
sbb
sahf
mov
push
cli
pop
sbb
jae
mov
mov
stc
adcl
adc
call
je
repz
rcr
out
add
nop
int
popa
pop
lods
jae
sbb
repz
sti
xor
mov
xor
ret
dec
flds
out
bound
cwtl
cmpl
xchg
jne
mov
or
rcr
jb
cmpsb
or
xchg
iret
mov
leave
sbb
push
xchg
shl
and
cmp
out
fisubrs
loopne
inc
in
mov
and
adc
jle
dec
sub
fisubrs
dec
pop
dec
rcl
mov
pop
inc
inc
fcmovnu
jl
std
xor
inc
or
sub
pop
dec
repnz
xor
and
xchg
jle
xor
inc
cmp
enter
pop
sbb
jmp
enter
push
xchg
mov
out
mov
jb
jns
pushf
test
jmp
inc
add
mov
push
rcll
aad
out
mov
insb
aad
sbb
repz
inc
das
and
sub
inc
mov
xchg
xchg
pop
inc
icebp
lods
daa
iret
lods
cmpsl
push
incb
inc
sbb
sub
push
in
jno
cmp
xor
lds
repz
adc
mov
jle
adc
add
rol
adc
outsl
loope
clc
ja
cmp
dec
xor
clc
arpl
sbb
sbb
add
out
aaa
enter
adc
in
xor
loopne
jmp
icebp
pop
notl
xchg
mov
push
shlb
pushf
cmp
lahf
jb
adc
mov
mov
dec
insb
les
mov
mov
mov
je
xor
cmp
xchg
loope
jnp
jo
sub
adc
in
ja
adc
or
sbb
das
mov
dec
or
push
cld
push
xchg
nop
ret
sub
into
ds
ja
data16
stc
xchg
mov
stos
je
cmpsb
shlb
mov
fisttpll
jge
shlb
ret
data16
push
cmp
shll
jl
mov
dec
mov
push
or
jno
into
popf
rcr
loopne
pop
add
or
sbb
mov
nop
outsb
cs
pop
mov
mov
roll
sub
adc
aad
aam
push
mov
bound
aas
dec
leave
lret
popf
aaa
mov
clc
jb
or
pop
movsb
jnp
xlat
cmp
lds
int
aam
sbb
xchg
outsb
out
into
sahf
xor
clc
fnstcw
test
push
out
insl
dec
mov
fsts
test
inc
lahf
pop
testb
mov
dec
mov
test
movsl
cmpsb
outsl
jne
add
hlt
sub
ret
lods
aas
adc
emms
data16
adcl
cld
js
xchg
mov
clc
call
cld
mov
outsb
in
xor
or
shll
add
xchg
sbb
sbb
adc
out
push
loop
inc
xchg
jnp
ret
rcll
aad
jmp
add
pop
stos
mov
cmp
lods
mov
sub
mov
adc
xchg
aas
xor
xchg
and
jle
scas
jmp
add
adc
push
sysexit
mov
enter
stos
dec
xchg
aas
push
shl
lods
mov
les
lahf
aas
movsl
int3
jle
cmp
orb
lods
sahf
ret
jae
sarl
jp
in
mov
xchg
inc
sbb
fldl
es
rol
stc
in
pushf
and
fiadds
sti
stos
cmc
nop
sub
mov
mov
push
enter
mov
push
xchg
je
jmp
jo
add
std
bound
jge
or
sub
jp
orb
cmp
stos
icebp
shl
test
add
scas
and
clc
out
dec
je
ret
loope
repz
pop
mov
push
pop
in
pop
xor
mov
adc
jb
add
aam
push
or
pop
jno
adc
sub
ljmp
or
jle
jno
xchg
cmp
loop
jbe
lods
stc
nop
std
arpl
testb
jge
xchg
sbb
push
dec
sti
test
pop
dec
mov
in
jae
ljmp
lahf
inc
or
dec
cmpsb
ljmp
ja
cwtl
aad
pop
popf
out
aaa
and
iret
ds
dec
and
xchg
cmp
cmp
pushf
adc
or
push
fildll
mov
and
cmp
adc
jo
pop
bound
popf
sbb
fcoms
out
stos
repz
in
pusha
in
imul
sbbb
pop
scas
jne
dec
dec
pushf
push
loopne
jmp
and
in
out
inc
xor
in
inc
les
test
js
inc
mov
mov
adc
pop
pop
add
int
fdivrs
mov
cltd
repnz
push
enter
mov
int
pop
xchg
mov
push
or
add
xchg
loopw
hlt
movsl
jge
inc
insl
dec
push
add
fisttps
imul
xor
xchg
inc
sahf
test
lcall
lods
shl
lds
xchg
mov
mov
stos
or
pavgw
push
mov
in
xor
xchg
adc
stos
out
and
push
cs
sbb
cmp
hlt
mov
jnp
stos
adc
cmp
xlat
lock
jae
add
and
sub
cmp
insb
mov
je
aam
mov
fimull
call
sbbb
push
and
add
sub
cmp
lea
or
pop
pop
stc
filds
pop
pop
lcall
pop
push
shlb
popf
leave
insb
push
push
add
frstor
xor
pop
imul
xor
cld
dec
dec
addr16
mov
repz
jnp
inc
dec
or
aaa
xchg
mov
pop
leave
xor
inc
mov
xchg
dec
js
jae
lahf
cmp
clc
and
fnsave
mov
fidivl
sbb
in
dec
popf
fcmovbe
jecxz
cmc
aaa
jmp
fs
imul
jo
push
clc
sub
cmp
mov
push
cmp
adc
xor
add
nop
faddl
add
cs
lret
mov
cltd
dec
and
xchg
lcall
testb
push
ss
adc
push
leave
arpl
cwtl
jg
fmul
test
lock
jge
and
movsb
imul
push
inc
adcb
cmp
xchg
jg
call
aad
ljmp
ret
ja
cmp
cmc
jge
xor
dec
mov
jl
cmp
cmpsl
enter
xor
inc
test
bound
sub
mov
in
cmp
cmp
mov
mov
scas
fnstcw
mov
add
dec
clc
mov
dec
push
loopne
loop
xchg
in
pop
out
jns
into
cmp
into
repz
xchg
call
push
adc
mov
aaa
imul
shrl
push
inc
stos
xchg
mov
test
mov
enter
jbe
pop
add
stos
into
scas
aam
sar
xor
andb
popa
lods
mov
mov
dec
xor
test
rcrb
adc
in
divl
jno
xor
out
xor
fwait
dec
mov
ror
aas
addr16
pushf
aaa
pop
in
fs
arpl
xor
add
mov
popa
xchg
mov
pop
mov
adc
out
inc
pusha
jne
pushf
jecxz
call
pop
mov
push
pop
inc
mov
int
jl
leave
cmp
cs
imul
mov
xchg
out
stc
mov
adcb
push
push
jp
mov
mov
ret
lea
adc
call
push
inc
mov
adc
mov
mov
test
xchg
push
cmpsb
inc
sbb
ret
inc
xchg
fidivrl
jnp
xchg
mov
or
add
jae
loopne
and
outsb
and
lods
popa
aas
ret
pop
xor
hlt
adc
fimull
or
adc
cmp
fbld
add
lods
xlat
sub
leave
scas
push
into
lds
stos
push
and
push
mov
mov
cmc
shl
orb
dec
das
sub
mov
cmpsl
jmp
push
leave
lret
adc
xchg
shrb
jmp
sbb
cmpsl
push
ljmp
sbb
nop
fprem1
lcall
jns
jno
mov
cmpsb
daa
jns
cltd
xchg
inc
leave
dec
pop
ja
sbb
push
lock
dec
out
int
jae
cld
adc
daa
sub
jbe
int3
sbb
mov
adc
aas
lcall
shl
xlat
movb
push
add
sbb
mov
adc
clc
push
jl
push
sub
pop
jo
out
sahf
popf
push
mov
jnp
xchg
pop
out
pop
sbb
and
fistl
ret
loopne
cltd
loope
push
pop
or
mov
in
sbb
pop
or
sbb
outsl
mull
fistpl
xchg
shll
jmp
inc
mov
or
fistpll
in
jge
test
push
cld
inc
fmull
das
adc
sub
or
push
fnsave
mov
lods
movsl
lods
mov
pusha
out
enter
imul
cmc
mov
sub
fisubl
rcrb
loopne
incb
in
aam
mov
jbe
xor
repz
xchg
add
pop
aam
jno
pop
cmp
inc
in
icebp
jns
add
fsubrs
js
cld
sbb
outsb
out
fidivs
mov
out
and
dec
push
iret
fcom
movsb
xor
mov
arpl
outsb
rcrb
fistl
mov
xor
outsl
pop
fldenv
fnstsw
xor
and
cld
or
push
and
aas
gs
sbb
data16
jmp
jl
add
in
loope
mov
cmc
clc
mov
mov
outsb
or
ds
sub
push
ds
jne
mov
je
aam
sub
mov
sbb
sahf
mov
test
mov
jb
outsb
adc
sahf
add
mov
or
fiaddl
inc
push
inc
cmp
stos
shrd
jbe
cmp
jl
mov
hlt
jmp
int
filds
mov
les
add
adcb
aaa
scas
mov
push
jl
xor
add
add
mov
into
test
mov
call
add
ja
xor
int
aam
pop
push
sbb
cmpsl
jl
test
sbb
lret
das
bound
xor
xor
push
xor
push
xor
mov
roll
sub
cmp
aad
loope
pop
out
hlt
decl
popa
bound
fcomps
dec
or
subl
movsl
aas
mov
inc
jae
scas
push
movsl
lahf
es
jmp
test
jge
lcall
pop
xor
mov
jmp
arpl
add
daa
xchg
mov
push
mov
push
scas
mov
bnd
cmp
xor
xlat
mov
sbb
inc
lcall
nop
mov
imul
int3
and
dec
adc
in
dec
inc
inc
adc
xor
push
fcomps
lea
fs
jnp
in
xchg
gs
dec
pop
shll
lods
cmpb
dec
ds
jae
dec
add
addr16
lods
lahf
loope
jb
xchg
jno
flds
fsubrl
mov
mov
out
leave
or
fxch
cmpsl
xor
out
jl
pop
inc
bound
pop
adc
negb
aas
adc
aad
in
and
sub
sbb
roll
mov
ss
aaa
test
xchg
xchg
pop
out
push
pop
mov
add
fnstenv
mov
xchg
push
dec
aam
adc
test
dec
cmpsl
adc
cmpb
sbbl
pop
std
lret
mov
roll
sbb
xor
cmc
sbb
hlt
mov
mov
jecxz
jnp
sbb
daa
sub
jg
sub
mov
rorb
in
cmp
push
xor
push
aam
cs
insb
lahf
ja
loop
cmp
sub
jo
insb
js
call
loopne
iret
inc
les
and
adc
int3
xchg
push
cmp
les
sbb
ja
sbb
mov
gs
lock
mov
xchg
arpl
sahf
insb
or
cmpsl
cmpsl
inc
cli
xorb
lea
adc
out
mov
and
xchg
aas
push
cmp
out
jns
nop
xchg
xor
loop
outsb
pop
cmp
lock
inc
insb
cld
jle
add
fistpll
pop
fisttps
and
inc
in
xchg
cmp
mov
jb
into
lods
arpl
scas
mov
sbb
out
fldcw
movsb
arpl
lret
xchg
lds
add
inc
gs
fsubrl
cmc
out
mov
mov
or
cs
push
cmpb
jg
or
jns
xchg
push
fisubs
dec
sub
pop
pop
jns
sbb
fs
mov
repz
mov
pushf
xor
lret
sub
popa
enter
adc
popa
clc
je
xor
cmp
lahf
jae
inc
in
dec
push
call
leave
add
and
xchg
js
int
sahf
loopne
sbb
subl
pop
sub
add
ljmpw
fsub
fs
push
cmpsl
or
jbe
push
xor
outsl
xchg
test
mov
jmp
mov
inc
out
ja
sarb
test
mov
test
and
pop
aad
nop
gs
jecxz
jno
rol
negl
or
fsubrl
xor
lock
loopne
jl
jmp
int
xor
fsubl
and
cmp
adc
loopne
aad
ljmp
lcall
cmpsb
pushf
adc
adc
frstor
cmp
adc
dec
cmp
xor
cmpsl
add
mov
pop
cmp
lahf
out
outsb
sub
xor
push
or
mov
dec
sbb
lods
jns
mov
pop
dec
pop
push
mov
dec
pusha
ret
sarb
pop
sbb
cmc
outsb
xlat
add
jecxz
ss
xchg
test
hlt
and
daa
jns
adc
imul
imul
js
sub
xor
popf
add
std
cltd
pop
pop
out
push
lahf
add
loope
lahf
call
pop
ffreep
xor
adc
push
movsl
fucom
loopne
inc
loop
mov
lret
repnz
daa
and
sub
movd
jae
int3
sbb
add
dec
pop
push
popa
inc
mov
xor
imul
aam
sbb
pop
push
ss
add
mov
push
arpl
jmp
xchg
sbb
adc
sub
test
xor
addr16
pop
cwtl
jno
cmc
test
add
arpl
push
stc
pop
stc
sti
jl
cmpsb
insl
xchg
fstl
sbb
or
lahf
push
test
mov
mov
sbb
sub
adc
in
shrb
push
inc
int3
lahf
out
loopne
push
ljmp
mov
dec
xchg
in
outsb
sbb
jno
pop
int
pmaddwd
test
jb
pop
nop
jmp
loopne
jb
icebp
mov
rol
lds
stc
and
cwtl
sub
jecxz
mov
push
adc
rcrl
js
mov
xor
cmpsl
pusha
mov
pushf
lods
lods
pusha
inc
inc
addr16
icebp
das
xchg
adc
fwait
mov
daa
ds
mov
dec
ret
mov
sub
or
xchg
jo
out
push
addl
xchg
mov
lock
and
pusha
cli
mov
mov
or
popa
mov
leave
cmp
xchg
stos
fdivrl
mull
xor
cmc
and
call
cmpsb
sbb
out
xchg
cltd
mov
jl
in
stc
mov
or
add
addb
movsl
adc
push
and
xor
jne
fdecstp
xor
jns
inc
inc
pop
push
xor
adc
xchg
rcrb
add
cmp
js
inc
dec
or
inc
icebp
adc
leave
mov
add
push
push
cmc
jae
or
jne
rcl
adc
std
clc
nop
inc
pop
hlt
je
mov
pop
testl
inc
pop
sbbb
repnz
js
cmp
mov
xchg
incl
adc
fsubs
jg
lret
pop
dec
fwait
xchg
outsl
add
mov
sbb
jecxz
push
push
testb
or
xor
popa
popa
dec
cmp
sub
loope
std
sub
dec
lcall
fs
adc
lds
push
push
pop
lods
cs
lea
xchg
shl
lock
inc
inc
jae
jbe
fistl
mov
jns
popf
sbb
lods
xchg
xor
pop
push
in
out
sub
cmpsl
stos
stos
mov
in
inc
lods
cltd
arpl
je
push
fmul
nop
pop
cmp
cmp
test
hlt
addr16
mov
or
iret
dec
ds
mov
pop
xor
stc
int3
pop
or
sub
mov
add
in
lcall
popf
pop
cmp
pop
aad
pop
mov
loope
cld
xor
imul
aas
not
jo
sub
js
shl
les
xchg
idiv
loop
cmp
cmp
dec
adc
scas
xchg
lods
adc
jl
xor
dec
push
mov
filds
push
fs
das
mov
pop
ret
test
out
sub
scas
inc
das
sti
push
rolb
dec
pusha
pop
push
addr16
pop
sbb
add
mov
dec
xor
dec
xor
mov
mov
jb
aad
lods
cltd
xchg
lcall
mov
pushf
xchg
mov
loopne
pop
cmp
pop
and
lods
lods
aas
std
repnz
lods
aad
in
cli
fadd
test
loopne
sub
jg
call
jp
fists
repnz
mov
pop
pushf
movsl
das
iret
mov
dec
addl
inc
add
cmp
pop
ss
es
movsl
xchg
jbe
mov
stos
nop
out
leave
inc
sub
repnz
cmp
and
int3
adc
sbb
cld
cli
or
cld
movsb
adc
pop
jne
ret
xchg
shl
push
xchg
jmp
outsb
mov
mov
lret
arpl
push
pop
mov
xor
or
inc
adc
insl
fcompl
shll
les
insl
pop
add
roll
js
cmp
ret
cmc
or
out
les
pop
cmp
adc
es
in
adc
cmp
jl
aaa
jbe
push
sub
jns
iret
das
cmpsl
dec
and
out
lods
bnd
sbb
jb
inc
pop
pop
mov
lock
mov
pop
subb
mov
lcall
in
shlb
mov
pusha
nop
jbe
loope
jle
xchg
add
insl
mov
jmp
hlt
sub
jg
mov
lods
sahf
mov
pusha
inc
dec
aad
gs
xchg
push
fsubrs
test
shll
adc
in
pop
push
push
sbb
pop
jecxz
pushf
push
xchg
pop
sub
movsl
dec
xlat
insb
enter
sub
sub
cmp
jne
mov
inc
jmp
pop
pop
es
out
push
daa
xor
xlat
xchg
jp
mov
add
push
data16
add
push
repz
imul
mov
stos
jae
lahf
mov
xchg
mov
mov
jmp
sub
mov
push
loopne
push
mov
mov
cltd
pop
sbb
cmpsb
mov
and
rep
mov
loop
imul
inc
adc
pop
stc
outsb
and
stos
xchg
xchg
lret
es
out
push
xlat
xor
aam
dec
and
adc
cltd
aam
lcall
cmc
in
mov
cmp
jae
popa
mov
jmp
sub
mov
lret
imul
xor
sbb
cltd
lahf
fnstcw
fcoms
cmp
orl
mov
adc
sub
jne
pop
lcall
test
pop
ficoml
cmp
jae
mov
xchg
push
mov
insb
add
add
xor
sbbl
xchg
or
fwait
dec
out
dec
push
jnp
xor
mov
repz
xchg
sti
stc
fstcw
push
loope
jbe
dec
mov
repz
mov
aas
es
cmc
inc
mov
int
fistpl
loope
pop
cmp
pop
push
sarl
xlat
leave
or
rolb
push
mov
lods
rorl
adc
lcall
lods
lahf
or
ret
xchg
xchg
fldt
mov
pop
push
sbb
ret
cmpsw
sbb
cmp
push
aam
ja
dec
mov
mov
sti
xchg
ret
es
mov
push
add
lahf
aas
and
mov
push
mov
or
or
imul
pop
mov
xchg
int3
rorb
or
in
cmp
fadds
jmp
adc
mov
ds
mov
insb
push
outsl
int3
rcrl
pop
test
aad
xchg
int
push
mov
loop
aad
jg
add
cmc
inc
fdivl
pop
push
or
mov
pushf
shll
xor
jle
inc
xlat
add
dec
pop
or
push
jecxz
lods
cmc
mov
pop
push
push
cmp
sub
test
pop
or
xor
lods
pop
inc
aam
insl
cmp
inc
addr16
adcb
add
mov
jb
cltd
pop
push
pop
cs
imul
fs
pop
outsb
xchg
cmp
lods
xchg
add
mov
cmpsl
in
mov
push
test
loope
das
movsb
cmp
lods
xchg
pop
xchg
mov
arpl
pushf
out
clc
dec
sarb
in
fcmovnu
mov
dec
push
je
test
movsl
ficomps
pop
jbe
xchg
nop
mov
xchg
adc
xchg
cs
outsb
add
cltd
cmp
or
or
pop
adc
sbb
rcrl
mov
and
xchg
loopne
and
and
out
or
mov
daa
pop
and
in
rcrb
push
out
pop
mov
mov
in
pop
aaa
ljmp
jmp
lahf
ja
sbb
out
adc
push
fs
and
insl
aaa
xchg
xor
in
mov
sub
test
fwait
popa
push
add
push
popf
xchg
sbb
fnstsw
jae
push
push
fldl
cli
sbb
out
jae
inc
movsb
fnop
jne
pop
and
mov
ljmp
push
mov
cltd
and
push
iret
inc
add
fnstsw
jae
pop
movsl
shrb
jp
push
test
and
orb
movsl
xchg
adcl
pushf
jge
movsl
negl
fimull
test
ja
aas
imul
data16
or
pop
je
rorl
adc
out
out
ror
pop
mov
dec
cld
imul
repz
jbe
cs
fiaddl
adc
push
mov
test
push
xor
out
cli
mov
xor
addr16
outsb
sbb
or
pop
cmc
test
das
jg
lods
mov
sahf
je
push
ljmp
xlat
sbb
cmp
nop
mov
cmpsb
mov
and
xor
lods
ds
sahf
cmp
mov
mov
pop
pop
cmc
lahf
add
lds
test
cli
sub
ret
inc
out
cmc
sbb
lods
call
or
inc
mov
enter
rcll
sub
scas
dec
cmc
ljmp
fcmovu
push
lahf
inc
adcb
out
mov
jne
fwait
push
sbbl
data16
jno
lahf
in
jle
mov
jge
cmc
sbb
push
inc
test
aas
adc
jns
out
mov
or
addr16
stos
add
push
iret
xchg
mov
or
jno
stc
sbb
xchg
test
adc
xorl
in
lret
dec
pop
jle
into
mov
call
or
shr
and
fldcw
scas
subb
rclb
pop
call
or
mov
addr16
pop
push
imull
xor
fiadds
jae
jns
dec
sbb
mov
xchg
je
adc
in
daa
mov
je
pusha
mov
stos
cmp
test
lock
mov
popa
fldenv
lret
mov
jmp
sahf
pop
add
push
and
aaa
popa
pop
mov
cmp
pop
adc
icebp
test
and
ljmp
shlb
enter
mov
pusha
push
jl
or
sbb
mov
into
int3
mov
adc
lret
sub
aas
filds
hlt
repz
loop
adc
push
pop
leave
rcrb
add
rolb
cmp
xchg
push
iret
fidivrs
repz
insl
sti
aad
sbb
dec
icebp
xchg
dec
cmpsb
fwait
jns
xor
std
mov
add
pop
jbe
or
jnp
movsb
lret
lcall
sbb
jg
ja
dec
mov
inc
testl
mov
movsl
aaa
pop
gs
xchg
mov
jp
icebp
sub
ret
stos
outsb
hlt
fs
out
xor
jo
ret
test
cmp
mov
cmp
les
mov
test
repz
pop
cmc
pop
cmp
cltd
lods
mov
jno
xchg
scas
pop
dec
inc
pop
sbb
dec
jns
loopne
stc
push
jg
xchg
fsubs
push
xchg
sub
sbb
xchg
lcall
xor
ds
lcall
aam
scas
add
jle
dec
test
dec
mov
adc
int
inc
push
in
and
mov
xor
xchg
fstps
jae
sbb
rcl
mov
punpckhbw
mov
cmp
push
loop
adc
xchg
cli
inc
sbb
mov
shr
rclb
mov
pop
fcoml
lcall
cmp
push
add
aad
ficoml
ret
repnz
loopne
insb
rcll
mov
pop
es
cmp
push
or
test
repz
mov
sbb
push
jo
push
subl
adc
add
push
in
cmp
mov
sarl
out
jo
sbb
sti
shrb
add
paddsw
int
leave
lock
mov
iret
bound
and
dec
cli
sbb
xor
mov
leave
xchg
movsb
sbb
cmpsb
fidivs
jb
xlat
mov
bound
xor
divps
lock
dec
outsl
call
dec
mov
insl
scas
pop
cmp
sahf
out
and
or
sub
push
cmp
popl
push
sub
mov
add
call
and
mov
dec
dec
notl
orb
popa
push
test
fst
push
in
ret
inc
xchg
clc
jnp
mov
sahf
and
ljmp
ret
mov
sub
notl
jle
push
dec
jge
cmp
sub
inc
lahf
das
push
mov
hlt
add
sbb
add
cmp
pusha
sbb
mov
loopne
sbb
test
pop
add
add
add
stos
icebp
sub
popf
xchg
mov
dec
pushf
mov
sti
sub
cwtl
repz
pusha
nop
je
std
and
jbe
scas
pop
aaa
mov
lods
xlat
xor
mov
and
mov
fyl2x
ss
cmp
leave
cld
cwtl
daa
sbbb
sbb
mov
inc
test
lods
cmpsb
mov
mov
ja
gs
xor
inc
xor
cwtl
push
mov
sbb
mov
add
arpl
xchg
sub
test
xlat
test
pop
adc
add
ljmp
mov
push
dec
lret
add
inc
mov
mov
inc
jno
xor
dec
jb
xchg
sub
mov
filds
inc
push
js
enter
add
xchg
sbbl
or
shlb
mov
movsl
sub
stos
lock
inc
rcr
sbb
jmp
dec
pop
and
lods
mov
jne
dec
loopne
inc
test
pop
scas
pop
fcmovbe
fidivrs
pop
fistps
and
mov
shrl
cli
jno
mov
mov
gs
pop
inc
gs
insb
mov
xor
xchg
repnz
stos
int3
adc
push
and
pop
enter
scas
jae
call
mov
bnd
les
sti
cmc
push
push
vmread
stos
and
inc
mul
and
ret
xchg
add
pusha
out
dec
mov
js
pusha
adc
mov
push
dec
aad
sub
mov
cmc
or
movsb
or
shr
jbe
add
mov
and
in
mov
inc
mov
mov
or
rcrl
imul
hlt
std
das
or
and
in
mov
and
into
das
mov
test
lea
pop
and
inc
sub
cmpsl
aas
sahf
inc
push
jnp
xor
in
lret
mov
add
out
and
and
aad
sbb
inc
add
aad
xorl
scas
adc
ss
pop
add
sti
inc
mov
orl
stos
pop
jmp
cmp
push
adc
inc
fs
fimuls
test
sbb
mov
daa
push
call
aam
fcoml
mov
sub
xor
ja
push
inc
or
push
add
testb
dec
pop
sub
je
stc
mov
mov
aaa
jbe
jno
lret
jmp
sbb
movsl
repz
push
push
aam
cmpl
dec
ja
adc
data16
cmc
xchg
dec
and
insb
clc
fidivl
movlhps
dec
pushf
sbb
mov
push
push
fwait
imul
lods
mov
mov
jge
rorb
cmp
push
mov
ss
pop
push
cmp
jge
rorb
mov
xor
data16
mov
aam
in
mov
mov
push
cmc
mov
imul
pop
xor
inc
fs
repz
loop
xchg
fcoml
popf
nop
insb
cmp
outsb
mov
cltd
push
xchg
push
lret
dec
icebp
sbb
jle
xchg
xor
mov
mov
loope
std
mov
arpl
xchg
pop
pusha
imul
mov
jno
and
ljmp
mov
stos
jo
push
lahf
push
mov
sbbl
xor
or
xchg
stos
and
jbe
and
push
sbb
outsb
xchg
mov
or
xchg
cmp
add
loopne
lea
and
jmp
nop
jnp
repnz
xorl
mov
cmpsl
lock
and
popf
out
lods
add
push
add
icebp
mov
in
push
dec
mov
shll
sahf
loop
mov
arpl
xor
movsl
inc
mov
xchg
push
ds
jle
cltd
jmp
cmp
stos
inc
sbb
mov
add
adc
jg
nop
hlt
out
aaa
mov
push
jb
out
or
test
leave
jb
inc
fmuls
rcr
xchg
add
or
dec
arpl
insb
jbe
scas
leave
movsb
pop
push
push
dec
clc
cmp
mov
call
push
call
fisubl
sub
sub
test
mov
cmp
gs
aad
xor
jmp
mov
inc
and
clc
movsb
xor
cld
mov
pop
jge
insb
ss
push
pop
and
int3
mov
stos
push
into
cld
sub
in
fwait
in
jp
iret
jb
int3
xorb
ret
fists
sbb
stos
ja
mov
mov
ss
jge
out
gs
fbstp
mov
nop
push
push
pop
dec
enter
sub
mov
push
ds
pushf
cld
push
xchg
scas
test
popa
test
mov
sbb
mov
mov
or
push
mov
xchg
or
ljmp
test
int
shl
push
inc
or
popa
jb
inc
cmp
outsl
sbb
scas
xchg
aam
jae
cmp
cs
cmp
lods
xchg
jnp
push
jns
push
lahf
mov
rorl
dec
cmp
mov
pop
cmp
mov
pop
in
test
adc
xor
push
imul
adc
fldt
adc
int3
push
xchg
mov
iret
jp
jno
stos
cwtl
pop
imul
xchg
jb
test
and
je
and
out
mov
outsb
or
mov
call
xend
mov
pop
call
jo
xchg
sbb
jecxz
pop
and
jp
test
adc
xchg
xor
pop
out
xchg
xchg
and
jnp
sub
or
in
sti
mov
jmp
sub
cmpsl
adc
jle
xchg
xchg
mov
push
mov
dec
dec
test
and
mov
mov
or
out
mov
adc
cwtl
jb
xchg
push
sti
stc
sbb
aad
lret
or
dec
jae
xchg
daa
jne
push
xorb
sbb
stos
ret
dec
rclb
ret
fiaddl
out
add
inc
leave
outsb
shrl
xchg
out
pop
mov
daa
insl
mov
pushf
cmp
jo
ret
xorb
add
pop
call
add
sbb
fwait
loopne
in
jg
mov
push
adcl
mov
iret
repz
jmp
inc
sub
fwait
xchg
lret
les
pop
lret
scas
adc
sbb
sbb
stos
xor
xchg
or
das
bound
xor
ss
adc
sub
sub
test
loop
fisttpll
jl
je
pop
cwtl
repnz
sbb
aad
xor
in
nop
cli
test
lret
in
or
sbb
jb
mov
js
dec
xchg
fstps
stos
sbb
mov
in
test
test
dec
push
aas
lcall
cld
or
cmpl
mov
in
jge
fwait
lods
mov
lods
adc
xchg
negb
mov
inc
mov
movsl
sub
add
in
cmp
xchg
int3
out
ds
movsl
adc
and
and
lahf
jb
fcmovbe
daa
fidivl
pop
inc
repz
stc
int3
shll
jns
and
cmp
inc
ret
mov
pop
imul
xchg
cmp
xor
test
inc
cli
out
pop
cmp
cmp
aas
ljmp
add
leave
push
push
mov
and
daa
gs
mov
jb
fs
hlt
adc
imul
roll
sub
cwtl
mov
pop
xchg
pop
mov
int3
adc
cmpsl
lret
fbstp
or
das
adc
xchg
cmpsb
aam
sahf
out
mov
rol
iret
scas
cmp
cmp
pop
popa
je
mov
insl
loopne
mov
enter
mov
push
in
pop
rcrl
add
aaa
scas
pop
rolb
jg
xchg
sub
or
fnstcw
add
lcall
mov
xlat
sbb
push
fbstp
fisubl
pop
adc
jle
pop
popw
or
adc
adc
xor
rcll
aaa
ret
fnstenv
mov
dec
lret
pop
mov
inc
or
faddl
xor
cmc
or
and
out
lods
jge
fs
add
inc
lea
mov
divl
cld
popf
and
push
pop
cld
rolb
or
ret
jp
jmp
mov
ror
sub
push
push
pop
mov
mov
pop
add
mov
dec
int
xchg
push
stos
aad
and
bound
pop
jmp
lret
clc
xor
orb
xchg
pusha
mov
dec
push
pusha
xor
jp
push
push
insb
and
cmp
cmp
dec
or
or
sbbb
sub
in
sbb
movsl
inc
mov
pop
mov
movsl
cwtl
gs
lods
into
lahf
es
jmp
cwtl
aad
cmpb
in
sub
xchg
imul
arpl
jno
pop
lahf
bound
mov
push
arpl
cmp
lret
inc
bound
std
mov
test
inc
out
roll
test
shll
pop
pop
insb
cmc
in
add
clc
sahf
xchg
pop
xor
sbb
xchg
mov
sti
jno
pushf
jne
sub
pop
sti
lods
sub
dec
mov
push
in
sbb
test
or
cmp
insl
fsubrs
jge
push
xchg
jne
inc
jmp
or
les
add
xor
clc
fwait
jmp
aaa
rcrb
icebp
mov
add
leave
stc
loopne
pop
in
add
push
xchg
leave
cmp
test
xchg
stc
std
loop
sub
mov
mov
and
xchg
stos
xor
cmp
pop
push
sbb
mov
sbb
shr
mov
xor
ds
mov
sahf
mov
das
inc
ucomiss
and
mov
dec
ret
js
dec
mov
sbb
cld
addr16
icebp
push
incl
das
aas
in
cs
and
and
bound
xchg
pop
dec
pop
sahf
sbb
push
stc
icebp
movsb
shll
and
add
mov
cmc
call
push
sbb
and
mov
cmpsl
leave
cmpsl
cmp
xchg
stc
in
jge
lret
das
or
cmpsb
cmovo
add
imul
push
or
jp
xor
stos
jo
jp
push
dec
bswap
es
and
sbb
cmp
stc
int3
cmpsb
inc
and
mov
ficompl
push
jmp
add
or
mov
xchg
sbb
inc
dec
dec
add
push
mov
xchg
mov
ds
inc
gs
sub
stos
mov
pop
adc
add
sbb
xor
xchg
hlt
idivl
jns
push
push
or
mov
or
sub
mov
dec
imul
push
pusha
mov
xchg
in
clc
loope
sub
lret
jmp
ret
out
jns
leave
sub
xorl
xchg
mov
pop
mov
js
sahf
xor
and
mov
out
cli
push
and
loop
inc
pop
ret
cli
add
push
jp
in
loope
imul
movsl
jbe
or
sbbl
sbb
push
mov
dec
stc
jb
lds
lods
aam
push
dec
dec
mov
pusha
mov
inc
sbb
jle
push
pop
int3
cmp
inc
sub
loopne
or
aad
and
mov
test
jno
icebp
xchg
movl
in
stc
add
popf
jle
dec
mov
mov
loopne
fcom
ja
outsb
fucomi
pop
lods
lret
ret
addb
out
fistl
jmp
push
cmp
mov
rep
scas
sbb
and
cmpsl
pop
rcl
adc
inc
dec
jge
dec
arpl
pusha
ss
inc
mov
outsl
pop
ss
pop
jle
rclb
dec
push
xchg
or
inc
hlt
jne
cmpl
sahf
std
shrl
add
cli
insb
test
mov
mov
mov
pop
jg
fldcw
or
jp
popaw
xchg
cmp
ds
stos
loopne
ja
fdiv
xchg
and
stos
jbe
mov
dec
data16
hlt
push
dec
mov
insl
sbbb
pop
fwait
pavgb
stos
mov
sbb
fsubp
mov
loopne
add
push
adc
les
mov
dec
ds
sarb
dec
daa
imul
inc
add
in
fmull
inc
cmp
or
test
fisttps
call
or
daa
mov
shll
sbb
mov
sbb
cmp
out
pop
push
cltd
outsl
pop
cmp
outsb
jo
ja
pop
jb
dec
mov
jnp
lods
pop
shll
push
js
ret
fwait
out
pop
aam
out
out
cmpsl
cmc
xchg
cli
adc
mov
push
lret
ret
push
rcr
frstor
jb
icebp
aas
ja
mov
cmp
cmp
sbb
push
xor
or
sti
pushf
jl
dec
clc
add
sbb
mov
mov
rolb
rcrl
or
mov
test
sbb
iret
insl
and
inc
enter
mov
popa
add
loopne
adc
ljmp
loopne
xchg
push
and
adc
mov
sbb
sbb
out
mov
cmp
into
pop
loop
xor
xor
daa
dec
pop
inc
or
into
inc
pop
mov
mov
rolb
gs
shrb
in
dec
rorb
sub
ja
adc
jle
mov
fdivrl
mov
dec
cwtl
insb
and
push
sbb
sbb
adc
aam
sub
in
shlb
pop
test
add
stc
aaa
sahf
fwait
sub
xor
mov
pop
mov
sub
sbb
adc
int
fs
ss
repz
xchg
fnstenv
xor
xor
add
iret
popa
lret
cltd
adc
jns
push
outsl
sbb
dec
xchg
mov
jnp
fwait
mov
mov
lcall
ljmpw
fsubl
add
pop
sbb
fidivl
xchg
shl
adc
test
inc
mov
pop
xor
dec
sbb
xchg
inc
sar
fldt
add
pop
mov
jo,pt
mov
mov
shlb
xor
out
adc
mov
ja
sub
mov
jecxz
movb
jno
sub
jp
imulb
mov
ljmp
push
in
in
or
in
jbe
inc
and
add
andl
aaa
outsb
xchg
mov
inc
adc
adc
shll
mov
inc
ret
test
popa
pop
sbb
mov
or
imul
shrl
add
out
scas
push
es
add
dec
sub
lock
jns
push
daa
mov
or
jmp
cmpsl
jg
fcmove
push
mov
and
filds
jnp
pop
and
cli
aam
fildl
dec
and
mov
imul
ret
push
sub
mov
cmp
mov
jns
dec
outsb
jl
rcrb
lcall
sub
jb
loope
add
jmp
in
fnstenv
scas
add
repz
mov
test
int3
cmp
mov
dec
js
add
jb
dec
sbbl
jle
jns
movsb
xor
es
aam
movsl
mov
popa
les
je
test
mov
mov
pop
int3
sbb
es
pop
popf
cmp
and
in
ss
and
pop
scas
adc
or
add
or
ljmp
mov
cmp
mov
dec
inc
sahf
pop
repz
pop
scas
fsubrp
fadd
icebp
loope
push
jge
xchg
addr16
sti
sbb
xor
les
pop
sub
push
cld
and
dec
cltd
adc
ja
das
or
adc
andl
mov
hlt
mov
pop
in
aad
test
lret
inc
rcrb
inc
pop
cmp
lahf
aam
dec
mov
lock
inc
xchg
push
stos
add
popf
push
dec
lods
stos
or
ss
or
ja
ret
fisttpll
mov
js
das
pop
mov
sbb
pop
push
dec
xor
mov
rolb
aam
das
xor
mov
insb
mov
pusha
mov
cmp
xchg
mov
lea
sbb
sub
push
mov
scas
push
adc
sub
bswap
mov
mov
icebp
cmp
pop
popf
jmp
or
cmpsb
dec
sub
stos
iret
mov
in
pop
insb
pushf
pusha
push
and
or
andl
dec
imul
xchg
das
cmp
sarl
int3
filds
fdivrl
mov
sub
lods
push
dec
ficoms
pop
xchg
mov
lods
lock
mov
shl
push
loop
jmp
add
cmp
sub
jae
cwtl
jno
push
iret
push
mov
push
sbb
inc
lret
jecxz
sahf
loope
mov
pop
xchg
mov
mov
jg
call
scas
pop
subb
movsb
out
shrb
mov
repnz
inc
aam
inc
into
lret
jp
loop
jg
cmp
or
push
repnz
das
xlat
inc
add
js
iret
cmp
jmp
dec
outsb
pop
sbb
jbe
mov
lds
dec
xlat
insl
test
xor
jl
mov
vpmullw
sub
loop
push
lret
mov
rcr
sub
dec
mov
repz
lock
jns
lea
into
fmuls
ja
push
xchg
insb
and
lahf
cmp
xor
lods
bound
into
je
movsb
dec
int
inc
pusha
jne
imul
or
xor
lds
ja
pop
les
sahf
setg
and
arpl
loope
cmpsl
inc
lcall
shrb
cltd
xchg
xor
into
lcall
int3
jge
test
cmp
and
pop
addb
lret
loop
fidivs
in
pop
xor
loopne
dec
mov
loop
mov
adc
sbb
xchg
orb
inc
sbb
mov
dec
repnz
js
mov
or
ss
xor
movsb
insb
sub
cmpsb
jb
dec
cmp
sahf
mov
iret
cli
sbb
ja
loope
cmpsb
adc
fidivl
mov
in
rolb
jb
jmp
dec
mov
mov
in
mov
mov
dec
mov
scas
push
pushfw
mov
jle
and
rcrb
xorb
pop
push
jp
cmp
sub
imulb
pxor
icebp
fcoml
ret
aas
loopne
dec
in
insb
movsb
jl
dec
pop
int3
cmp
sbb
pop
push
mov
es
pop
out
push
ret
decl
jl
sahf
xchg
adc
jg
data16
sub
mov
push
int3
dec
dec
fcomi
xchg
int3
cmpsb
xchg
jae
and
xchg
push
sbb
push
or
sub
cmp
cmpsl
xchg
xor
cmp
push
cld
jmp
dec
and
mov
dec
pop
clc
xchg
out
test
push
inc
mov
and
fdivrl
mov
mov
rol
pop
sbb
mov
aaa
sub
push
lret
leave
dec
inc
pop
nop
data16
sub
pop
inc
loop
ret
subl
xchg
mov
cs
and
cli
xor
xchg
call
in
xor
aam
dec
pop
push
loopne
ja
xchg
dec
mov
xchg
inc
rol
sbb
jae
lret
test
arpl
jecxz
leave
int3
pop
sbb
test
outsb
icebp
push
mov
adc
xor
mov
ss
data16
lea
sbb
push
pop
cmpsb
mov
daa
rclb
test
pusha
xchg
inc
jmp
mov
pop
outsl
or
xor
fwait
lods
push
addr16
imul
movl
fisubrs
in
sbb
mov
mov
add
pop
sbb
sub
cmpb
mov
mov
daa
mov
imul
pop
adc
and
cmpsb
cli
jecxz
push
fldcw
fwait
sub
ficoms
and
dec
mov
mov
loope
es
clc
aas
sbb
xor
int
dec
jbe
cmp
mov
push
mov
mov
or
inc
movsb
adc
and
jg
jo
into
or
pop
sub
stos
int3
mov
or
repnz
jmp
sub
shr
xor
adc
add
insl
jbe
jne
xchg
mov
scas
into
jg
sbb
daa
adc
insl
ljmp
dec
push
mov
addr16
mov
cli
push
es
mov
xchg
gs
or
pop
push
out
push
out
rcr
inc
push
jae
pop
mov
or
sbb
fsubrl
aam
pop
add
sbb
mov
nop
inc
mov
sub
or
xchg
cltd
pop
into
testb
cmp
in
sbb
xor
fs
mov
rorl
lea
push
int3
cmp
adc
in
cmp
into
push
adc
add
add
sub
fnstsw
popf
shlb
xor
test
popf
dec
xchg
addr16
ja
pop
and
sub
dec
popf
out
scas
push
jge
sbb
xchg
bound
pop
and
xor
sub
or
int3
test
add
push
and
daa
xorl
push
aam
or
aam
push
or
xchg
call
and
dec
jnp
bound
les
sbb
insl
mull
pop
mov
xchg
cmp
stos
outsb
ss
mov
bound
fnclex
imul
adcl
sub
xchg
jmp
mov
pushf
repz
movsb
jge
das
outsb
push
push
or
jp
sbb
add
test
xchg
fadd
stos
stos
cltd
pop
pushf
das
pop
mov
pop
gs
and
popa
cmc
mov
cmp
stos
cmpb
cmp
leave
dec
mov
sub
popa
pushl
mov
mov
js
gs
dec
repz
mov
sbb
dec
xor
dec
cmp
mov
ds
adc
mov
mov
cwtl
xor
cwtl
call
jmp
mov
pop
cmp
dec
std
xchg
cmpsb
push
sub
and
shl
sub
push
addl
pop
xchg
push
cltd
mov
push
xchg
js
ret
sbb
in
or
mov
imul
fwait
call
mov
push
inc
sahf
sub
bound
jmp
cmpl
fwait
mov
or
xor
cltd
jae
mov
cltd
scas
dec
cwtl
pop
test
and
xor
out
or
add
jno
xchg
jle
pop
cmp
std
sbbb
addr16
and
add
adc
and
imul
mov
inc
inc
stc
mov
popf
fistps
mov
jg
rcrb
jge
lret
fisubl
mov
cmp
test
push
mov
outsl
mov
xor
fmull
insl
add
xchg
orl
cmp
lock
jbe
stos
mov
out
daa
push
add
mov
aad
push
cbtw
scas
xchg
loopne
pop
or
mov
cld
dec
dec
sarb
pop
sbb
outsl
cmc
loope
mov
sub
loop
xor
or
inc
cmp
ljmp
xchg
inc
jge
xchg
leave
fcmovne
lret
xor
pushl
xchg
jo
cmp
fwait
lcall
xchg
jb
cmp
dec
mov
pop
add
dec
add
or
int
or
adcb
mov
nop
lods
in
jl
pushf
sbb
fsubr
or
pop
sbb
mov
rorb
std
cmp
movsb
pop
sahf
in
sbb
xor
sub
fcmovne
inc
and
aam
fisubl
out
xor
add
sbb
pop
out
out
imul
es
loope,pt
sahf
sub
cld
fidivrs
into
loop
xchg
and
pop
out
pop
cwtl
mov
fs
lahf
mov
xchg
xor
mov
jl
in
sub
inc
scas
cmp
push
jnp
add
xchg
mov
mov
inc
int3
push
or
adc
sbb
outsb
sub
sti
cli
pop
xlat
mov
jnp
add
call
stos
or
mov
xchg
imul
ret
sbb
std
lds
push
xor
inc
dec
add
fcoml
idivb
add
add
mov
repnz
rclb
insb
mov
sbb
or
jmp
or
xchg
push
cmp
or
add
pop
inc
call
fmuls
arpl
dec
js
and
mov
mov
mov
adc
das
int3
dec
xor
dec
jno
ja
xor
lds
pop
xchg
ja
adc
cmc
into
es
out
pop
out
and
mov
fldl
call
pop
pusha
lods
fisttps
inc
je
mov
punpckhwd
and
mov
sbb
mov
add
rorl
pusha
pop
inc
inc
lods
stc
out
or
xchg
pop
inc
mov
loopne
pushw
scas
add
mov
sbb
mov
lods
test
in
adc
jge
outsl
ret
loope
sbb
add
mov
popf
icebp
xlat
sbb
add
xchg
cmp
shrb
and
pop
in
and
scas
pop
repnz
mov
adc
push
or
mov
addr16
jne
aas
mov
jno
mov
or
jmp
les
aas
ljmp
iret
or
push
inc
jg
sbb
mov
out
fnstcw
xchg
das
out
pop
insb
loopne
adc
dec
dec
mov
add
movsb
pushf
out
ret
insb
outsl
jbe
test
xchg
sbb
icebp
or
inc
sub
lret
add
es
jne
fucomp
fldt
lret
jbe
fbld
imul
or
mov
or
out
inc
fwait
into
pop
jbe
add
inc
inc
int
cmp
icebp
or
idivb
dec
outsl
xchg
xchg
cmp
hlt
mov
xchg
mov
xor
sub
popf
sbb
xor
jb
lds
jbe
add
add
xchg
pop
pop
mov
cltd
cmp
or
push
mov
stos
mov
mov
sub
frstor
xchg
repnz
sub
cmp
cmc
lcall
pop
lcall
jmp
scas
xchg
pop
jmp
sbb
bound
bound
pop
test
mov
test
or
add
and
push
jge
and
fwait
cmp
ja
test
xor
sub
dec
mov
imul
std
movsb
outsl
inc
dec
mov
add
sti
rcrl
cmp
mov
adcb
pop
pop
adc
jle
push
push
test
sub
xchg
add
adc
jno
adc
sahf
dec
dec
add
mov
shrl
idiv
in
mov
pushf
adc
sub
push
out
mov
dec
test
in
cli
fcoms
inc
pusha
or
ja
mov
xchg
adc
sub
les
subb
fs
nop
dec
xchg
pop
mov
ret
cmp
inc
sbb
inc
xchg
fistpl
or
add
pop
sbb
jg
mov
movsl
rclb
test
mov
idivl
scas
mov
rorb
mov
inc
xchg
adc
push
mov
mov
xlat
loope
dec
cli
cltd
xchg
pop
and
sub
dec
rcrb
loope
repz
bound
pop
clc
gs
daa
or
hlt
and
pop
mov
loope
xchg
add
popf
test
pusha
sbb
pop
add
mov
sub
testl
pop
loop
lret
dec
lods
mov
xlat
ror
cmp
les
sub
cmp
pop
inc
or
stc
cmp
popf
or
jp
pop
shlb
lea
sub
ss
sub
jg
mov
pusha
ja
add
xchg
bnd
pop
lret
lcall
hlt
je
xor
mov
and
test
fildll
pop
push
fstl
in
mov
and
mov
cmp
add
in
loopne
dec
push
sahf
or
jns
adc
pop
xchg
and
int3
sahf
jle
pop
push
shl
fcoms
test
mov
xor
xor
adc
xchg
shlb
inc
pop
imul
dec
mov
lods
in
or
mov
xchg
lret
adc
sub
xchg
gs
pop
add
aam
out
pop
jno
pop
les
outsb
inc
mov
in
in
push
jb
ret
lret
lock
cwtl
xor
and
popa
sub
ss
xchg
xchg
xor
cmp
sub
jp
mov
push
fidivl
jmp
or
fsincos
xchg
cs
add
arpl
aad
jecxz
xchg
jne
push
adc
dec
andb
je
loopne
cmp
pop
repnz
insl
jb
xor
das
xchg
das
stos
push
sub
jg
mov
enter
mov
scas
cmp
int3
aaa
adc
mov
xchg
lcall
movsb
mov
adc
mov
stos
and
jecxz
pop
lahf
dec
push
cmp
repz
ja
cltd
out
jb
cs
mov
or
and
sbb
sub
loopne
test
clc
push
mov
repz
mov
mov
test
adc
mov
test
leave
sbb
xor
mov
cltd
clc
mov
adc
leave
int
fbld
in
int3
out
xor
jmp
sub
les
iret
push
jnp
leave
xchg
adc
adc
push
cmc
push
clc
cmp
int3
xchg
mov
push
ja
mov
xchg
ss
pushw
je
daa
xchg
or
adc
scas
pop
dec
into
sub
rcrl
sahf
add
pop
mov
jp
adc
mov
xchg
outsb
sahf
sbb
dec
pop
imul
jns
jns
jg
aas
sub
mov
bound
push
pop
mov
pop
or
fisttpll
cmp
mov
popa
pop
push
jno
in
sub
imul
lret
add
in
test
add
add
into
add
icebp
jl
fs
aam
inc
out
cmpsb
adc
adc
mov
pop
ja
lods
clc
js
and
popa
cmp
inc
popa
cs
lea
or
ret
aad
jecxz
mov
cmp
mov
cmp
push
xchg
das
addr16
inc
mov
jge
jp
and
and
xchg
mov
xlat
in
int
imul
sahf
bound
data16
add
fstps
sbb
mov
cli
mov
xor
fwait
stc
nop
stos
jmp
xchg
fwait
cli
sbb
or
adc
cmp
psllw
jno
pushf
adc
or
and
sbb
push
aad
sbb
pop
stos
out
enter
jno
and
bound
mov
dec
push
dec
sti
sub
int
loope
movsl
fcmovnu
push
jmp
pop
adc
stos
lods
xchg
mov
dec
imul
sub
in
nop
scas
pop
orb
push
clc
pop
pop
add
aam
sbb
aas
cmp
std
xlat
adc
in
loopne
imul
mov
jmp
sub
sub
push
loopne
xor
sbb
ds
sbb
fidivs
xchg
mov
rcrl
cmp
call
hlt
push
cmc
loop
sti
xchg
shrb
out
xchg
cwtl
loope
pop
repz
mov
test
aam
xor
mov
mov
ss
call
int3
add
sub
aaa
cltd
cmp
ficoms
inc
jle
mov
cmp
sub
sub
xchg
and
cltd
pop
sbb
cmp
aam
aas
mov
pop
lea
inc
or
lods
xor
shl
mov
sahf
push
test
mov
std
fs
popf
iret
or
xor
addr16
cs
dec
je
mov
ljmp
imul
pop
lds
sti
mov
mov
insl
in
ds
js
cltd
jnp
ret
push
push
xchg
xchg
dec
pusha
inc
add
cmp
cwtl
stos
add
scas
data16
push
nop
and
mov
pop
pop
rol
pushf
pop
fwait
push
sub
les
orl
das
pop
fisubl
cli
jl
jns
adc
pop
mov
sbb
push
and
push
sbb
rolb
inc
es
sti
test
out
int
inc
into
push
dec
dec
jb
stos
xchg
jae
cmp
cmpsb
and
sub
in
addr16
jmp
and
jne
aas
cli
or
dec
adc
clc
loopne
mov
cld
mov
inc
adc
inc
adc
adc
push
andb
and
cld
xchg
dec
shrl
outsl
add
jg
pop
xchg
ljmp
xchg
mov
cwtl
sub
repnz
shrl
out
xchg
jge
inc
arpl
xchg
mov
es
stos
cmp
inc
insl
scas
and
push
mov
jb
cs
insb
sub
and
fwait
mov
jnp
std
jne
fwait
dec
js
data16
mov
inc
mov
aas
lahf
pop
lcall
fmul
or
cmc
lods
pop
bound
orl
out
and
inc
js
lahf
mov
rol
mov
push
jb,pt
push
shlb
fstps
jo
push
out
xchg
arpl
in
addb
repnz
pop
cmp
mov
testl
or
dec
mov
cmpsl
dec
xor
fmuls
sbb
dec
mov
adc
repz
and
jge
adc
adc
fsubl
lcall
loope
sarl
and
dec
mov
jnp
fadd
out
in
stc
dec
and
ret
mov
cwtl
int3
scas
sarb
adc
mov
in
sub
adc
add
or
mov
dec
mov
or
xchg
push
sbb
hlt
pop
mov
movsb
and
push
mov
adc
sub
subl
xor
in
loopne
shll
subl
shll
icebp
adc
and
adc
or
pop
jb
mov
fmul
xchg
jp
imul
dec
daa
mov
xor
xchg
add
mov
push
in
shlb
loop
mov
or
testl
jae
cmp
mov
dec
out
hlt
mov
cmp
sbb
lcall
adc
push
jb
adc
aam
jns
out
sub
popa
jmp
aaa
leave
xor
sbb
jge
das
jns
adc
test
inc
sub
scas
test
and
das
push
sbb
jl
inc
adc
fcmovbe
das
test
inc
pusha
movsb
and
xor
pop
imul
in
mov
rcpps
mov
mov
xchg
mov
or
pop
mov
ljmp
test
mov
xchg
subps
es
cld
dec
mov
mov
cld
pop
stos
sub
dec
push
xor
fcomps
bound
lcall
gs
inc
sbb
out
sub
std
das
clc
add
cmpb
push
jne
rcrl
lock
cli
sbb
aad
ret
or
inc
jmp
xor
das
push
mov
sbb
js
jmp
fptan
mov
sub
outsb
addr16
leave
fstpl
test
nop
xlat
mov
and
adc
mov
inc
jmp
add
adc
pop
mov
push
and
adc
xchg
pusha
push
aad
test
pop
lock
adc
push
sub
mov
cmp
in
movsl
pop
or
daa
fistps
or
mov
mov
sub
pop
xor
cmp
mov
or
adc
pop
or
cmpsl
imul
shll
shrl
fadds
mov
mov
adc
int3
mov
xchg
lret
inc
lock
call
pop
xor
mov
dec
fwait
int3
mov
mov
cmp
inc
lahf
dec
dec
add
daa
add
aam
mov
inc
sbb
std
mov
lea
mov
jns
mov
mov
aas
stos
jb
push
xchg
mov
outsl
adcl
rolb
or
cmp
lahf
fldl
scas
hlt
push
jns
inc
xchg
sahf
lahf
mov
setbe
mov
sbb
mov
sbb
jmp
loop
jbe
sbb
mov
or
sub
mov
cmpsb
int3
stos
push
xchg
lds
add
jg
xor
stos
subl
sti
pop
dec
adc
mov
ss
ss
mov
cmpb
out
out
gs
and
inc
and
xchg
fucomi
arpl
sbb
sahf
rcl
sub
js
or
test
jo
and
iret
pop
mov
inc
imul
int3
dec
mov
mov
xor
mov
ja
push
inc
mov
cmp
in
mov
mov
cmp
ds
xchg
mov
or
pop
dec
test
mov
sbb
sti
scas
and
push
mov
jmp
test
out
mov
ljmp
sub
jne
cmpb
nop
stos
jns
jmp
adc
rolb
xchg
xorl
icebp
mov
faddl
mov
sbb
inc
lods
mov
mov
ret
mov
fwait
out
or
push
inc
mov
movsb
push
inc
xchg
pop
sub
pop
addl
xor
jmp
push
push
sarb
pop
mov
xchg
popa
je
stos
int
lds
sub
xchg
mov
sahf
ret
inc
andl
mov
sub
stc
fcom
or
std
mov
push
shlb
std
mov
daa
adc
jne
inc
shrl
aad
divb
cmp
ret
out
test
and
pop
mov
out
imul
xchg
xor
inc
xchg
ret
dec
mov
stos
addb
inc
addl
cwtl
jmp
mov
jmp
adc
adcb
mov
add
sub
lds
dec
js
sub
pop
iret
jnp
ret
pop
addb
mov
push
test
cwtl
cmp
test
lods
xorb
jo
xrelease
ret
dec
mov
lea
jle
pop
rclb
xchg
mov
stos
insb
or
push
push
in
je
std
cli
lock
out
adc
aam
insb
insb
lret
fidivs
movsl
pop
hlt
pop
ljmp
stos
out
dec
and
and
in
mov
pusha
push
in
ret
xchg
mov
and
test
fsubl
pop
lcall
jmp
push
mov
es
mov
shll
lds
js
cmpl
cmp
xor
shl
jne
loop
out
inc
sbb
mov
testl
lret
sub
repz
adc
lods
and
popf
imul
cmc
out
jp
mov
out
xor
adc
fiaddl
test
xor
shrb
cmp
lods
lods
push
jp
xchg
adc
sub
fs
xchg
ret
cmp
mov
xchg
sbb
gs
sti
out
pop
in
inc
mov
adc
shlb
dec
and
mov
mov
sbb
xchg
cltd
xchg
add
std
mov
fcoml
adc
mov
outsb
add
sub
arpl
sbb
pop
jne
xor
lahf
stos
mov
sub
sbb
sti
xchg
shll
in
fnsave
cmpsl
insl
and
cmp
push
es
or
and
aam
push
in
inc
inc
fs
sbb
xchg
mov
dec
jnp
shrb
loope
mov
mov
mov
mov
add
sub
pop
jnp
ljmp
xchg
loopne
jb
imul
arpl
mov
jo
ret
dec
jge
sub
pop
xchg
sbb
orl
sbb
xchg
mov
shlb
mov
aaa
push
jb
lds
mov
mov
mov
add
mov
mov
or
adc
xchg
mov
jl
mov
shll
ljmp
fisubrl
in
xchg
inc
mov
and
fsub
arpl
mov
pop
xchg
add
inc
scas
jbe
push
jnp
sub
push
mov
pop
test
out
xor
mov
lret
adc
test
or
or
aas
mov
idivb
dec
test
push
inc
pop
je
mov
ret
push
sti
scas
inc
or
and
fstpl
mov
pop
mov
cs
sub
popa
push
add
cmc
mov
and
pop
lock
notb
mov
xchg
cmp
or
pop
loopne
sub
jne
clc
cmp
out
bound
pop
dec
in
cmp
jge
ret
dec
leave
cmp
mov
fcoml
jg
addl
orb
mov
lret
imul
adc
adc
pushf
sub
mov
inc
in
mov
fdiv
push
mov
jl
loop
xchg
sub
xor
inc
ret
shrb
out
jae
imul
bound
mov
dec
daa
cmp
ds
xor
orb
mov
xchg
mov
xchg
jl
fists
add
xchg
mov
cwtl
cltd
xor
cmpsb
popf
xor
lcall
jbe
push
rolb
inc
gs
sub
jl
int3
out
rolb
or
adc
mov
cld
mov
lcall
xor
movsl
inc
and
add
pop
mov
pop
imul
aam
mov
push
into
jmp
mov
daa
pop
cmp
sbb
inc
or
lods
pop
xor
aad
inc
inc
sahf
cmpsb
inc
sub
mov
push
dec
das
les
xchg
sbb
mov
lds
sub
xor
lods
mov
mov
dec
and
jnp
pop
dec
dec
push
in
xchg
fildl
test
rorl
and
inc
sub
sbbb
lret
pop
and
adc
add
cmp
fldl2t
aam
imul
inc
out
or
stc
xchg
push
inc
mov
add
dec
shlb
pop
mov
test
shrl
push
int
or
ja
daa
int
or
adc
adc
mov
stos
shrl
add
js
in
and
cmc
adc
or
inc
cltd
lods
mov
sub
push
daa
mov
xchg
jmp
pop
jecxz
fnstcw
cmpb
aad
dec
push
pop
leave
mov
mov
fwait
mov
xor
add
lock
jnp
inc
cmp
xchg
cltd
cmp
mov
pusha
sub
mov
cltd
es
dec
ljmp
inc
add
repnz
std
fwait
repz
daa
in
xor
push
int
push
dec
es
cmp
xchg
je
cmp
mov
cmp
mov
aaa
imul
cmp
cmpsl
pop
mov
aaa
cmc
roll
lret
and
dec
in
dec
jmp
sahf
outsb
imul
adc
jne
inc
stos
inc
subl
inc
jae
mov
inc
sbb
jo
jnp
jno
js
cwtl
mov
sub
test
pop
inc
push
seta
pop
jnp
ret
and
adc
jne
push
mov
inc
or
mov
loop
outsl
lcall
sbb
mov
xchg
or
loopne
or
arpl
add
mov
xorl
pusha
jno
lods
fnsave
add
fwait
insb
push
in
dec
data16
push
dec
popl
adc
xchg
xor
pop
imul
es
or
out
shll
popa
fadd
add
rcrb
jae
mov
sub
mov
and
and
in
xchg
inc
push
mov
xchg
js
stc
mov
mov
out
xchg
dec
adc
nop
sbb
and
out
cs
sbb
ret
das
mov
arpl
and
bound
int
fldenv
xchg
sub
std
mov
bound
pop
jmp
add
xor
orps
mov
repnz
insb
lods
jbe
jno
inc
mov
lcall
jae
out
sahf
pusha
push
mov
jl
movsb
shrl
enter
cmp
hlt
clc
outsl
xchg
lods
arpl
jmp
pop
iret
addr16
xchg
repnz
mov
fiaddl
fs
pop
fs
cs
xor
inc
mov
insb
add
orb
rcrl
sbb
dec
adc
test
jnp
push
adc
mov
xchg
mov
mov
xor
mov
mov
or
cld
mov
cmp
insb
sbb
pusha
pop
pop
sub
push
cmp
adc
repz
or
push
adc
jg,pn
setne
sub
mov
std
sahf
js
jno
shrb
aas
ss
mov
inc
ja
and
leave
popf
bound
out
int3
pop
sarb
loop
xchg
pop
loopne
add
loop
pop
into
loop
clc
dec
psllq
ds
leave
pusha
xlat
xchg
mov
lret
jmp
ret
shlb
movsb
jge
push
iret
dec
clc
test
repz
dec
test
fisubs
inc
push
cld
jno
jne
stc
mov
stc
pusha
insl
sub
std
into
cs
into
sbb
add
gs
jle
xchg
out
scas
int
lcall
and
aaa
inc
arpl
inc
test
jae
imul
inc
repz
mov
aad
cmp
xor
and
push
push
dec
das
inc
cltd
mov
inc
mov
xor
movsl
jmp
aam
arpl
or
cmp
jbe
xchg
arpl
sbb
jnp
inc
repnz
jp
sbbl
sbb
sbb
in
testl
fnstsw
ljmp
adc
mov
cmp
adc
aas
jmp
xor
in
sahf
pop
das
ss
jne
xchg
mov
or
dec
fsubl
mov
mov
icebp
cmp
dec
mov
in
lods
in
dec
sbbl
roll
push
dec
add
ds
sarl
inc
push
mov
push
cmpsl
loope
push
loop
fs
dec
mov
inc
in
ljmp
data16
add
scas
xor
mov
insl
jo
xchg
fildll
fsub
icebp
add
out
sbb
dec
pop
push
pop
jae
lods
ret
rorl
popa
add
inc
repz
pop
lods
jge
out
es
or
iret
mov
cmp
mov
bound
push
pop
pop
loop
ljmp
int
dec
xchg
out
enter
faddl
sub
fucomi
jge
jmp
jle
add
jecxz
sub
cmp
or
call
jecxz
push
mov
push
jae
cmpsb
es
xor
inc
mov
in
je
sbb
insb
cmp
xchg
dec
sbb
movsl
push
movsb
scas
xor
test
js
push
xor
and
push
popa
movsb
loope
jns
jb
cmp
jae
lahf
loop
or
movsb
popa
mov
push
push
icebp
in
inc
push
dec
cmp
dec
adc
dec
and
sbb
icebp
fiadds
clc
aaa
jg
cmp
xchg
xor
mov
dec
cli
lock
xchg
mov
cmp
inc
in
leave
adc
sbb
ret
jmp
pop
jg
jne
mov
push
popa
les
inc
pop
sub
imul
test
shll
jle
cld
inc
outsl
mov
int
cmc
stos
or
cmp
mov
pushf
lea
or
mov
jnp
sahf
outsb
jno
sbb
ljmp
xchg
adc
iret
fstps
fisubrl
sub
les
shll
pop
int
outsl
ljmp
jp
jb
xchg
clc
xor
mov
ds
pop
xchg
popa
pop
imul
sub
adc
jno
xor
jge
jbe
scas
ja
mov
fiadds
sbb
pop
ss
iret
dec
outsb
cmpsl
sub
xchg
sbb
vpsubq
jbe
mov
xlat
das
xlat
lea
xchg
mov
xchg
fs
xor
daa
in
dec
cmpsl
inc
popa
pop
xchg
pop
leave
imul
mov
push
cmp
hlt
or
ja
push
in
jge
into
fwait
int
loopne
andb
dec
stos
out
mov
sbb
sub
push
enter
push
mov
push
xor
movsl
and
push
dec
js
ljmp
adc
in
inc
fsubrs
popf
lock
adc
mov
jp
cmp
inc
loopne
iret
movsb
scas
jg
cs
mov
cmpsb
add
popf
push
stos
leave
add
inc
int3
sahf
pop
fimuls
addr16
cmp
inc
pop
or
mov
sub
sbb
xchg
xor
lret
or
xchg
pop
sbbl
adc
mov
std
xchg
gs
xor
in
outsb
out
xchg
and
sub
xchg
mov
push
dec
js
in
idivl
in
jg
in
mov
sbbb
sahf
icebp
ss
rorl
push
pop
push
loop
decb
adc
imul
repz
mov
mov
dec
orb
fldcw
aam
in
xchg
push
mov
xor
cmp
or
nop
test
jp
xor
dec
arpl
jmp
ja
sarl
cld
in
enter
fwait
mov
out
ret
test
in
inc
and
das
scas
mov
sub
lret
nop
nop
jl
mov
clc
mov
lds
adcl
adc
push
or
sbb
rorl
xor
add
push
pop
fsubrp
push
add
push
sub
pop
jecxz
bound
mov
fdivr
jecxz
das
bound
decb
xchg
or
xchg
push
xor
gs
push
int
mov
xchg
pop
mov
lods
or
inc
repnz
stc
divl
inc
add
mov
push
test
cmp
sti
xorl
popa
sub
mov
fdivrl
std
fldl
dec
cmp
int
in
aad
lahf
dec
xor
push
repnz
dec
and
into
and
lret
jecxz
cld
daa
xor
cli
or
xchg
les
and
jns
inc
rorl
lods
insb
fadd
outsb
sbb
mull
xor
int3
outsb
insl
sahf
fs
js
sahf
xor
fistpl
test
jo
imul
sub
jecxz
stos
push
addr16
sub
loop
test
mov
mov
ret
ljmp
in
pop
xchg
push
cld
dec
lret
arpl
out
and
xchg
sub
push
push
call
movsb
push
repz
fildll
in
sbb
or
fisttpl
mov
cmc
and
ss
insb
sub
ss
sub
int
jb
adc
pushf
into
and
mov
cmpsb
jo
pop
pop
es
gs
mov
jb
loope
xchg
stc
outsl
das
dec
dec
jecxz
test
xchg
popf
inc
jns
dec
dec
cltd
sbb
inc
inc
mov
sub
jge
std
and
call
popf
jnp
inc
push
push
nop
test
add
insl
es
out
pop
aam
out
repz
sbb
mov
dec
cmpsb
into
pop
inc
xchg
aaa
movsl
push
loop
scas
fwait
lahf
aad
dec
jl
sub
pop
lcall
sbb
leave
sbb
sub
lds
xor
mov
pusha
inc
add
arpl
pop
xchg
cld
int
enter
jbe
in
pusha
aas
ucomiss
das
dec
lods
stos
dec
aas
pop
sub
dec
add
mov
test
arpl
xchg
bound
dec
jne
mov
push
xchg
or
adc
lret
mov
mov
sbb
ror
mov
cmpsb
mov
cmc
jne
push
out
and
daa
ja
ss
ja
jae
mov
into
mov
xlat
mov
jbe
rcrb
ficomps
mov
mov
pop
addr16
cs
mov
mov
xor
fnsave
cmp
inc
pop
xor
pop
or
mov
cli
leave
push
scas
push
iret
pop
sti
lahf
cmp
aam
stc
clc
xchg
scas
sbb
xchg
cmp
jg
test
mov
sub
call
in
imul
testl
mov
fistpll
mov
nop
push
dec
std
push
out
clc
xchg
addr16
ss
getsec
mov
popf
notb
testl
orb
push
pop
or
leave
add
dec
bound
xlat
dec
ror
mov
pop
jne
int3
mov
loopne
pop
rcr
dec
outsl
pop
push
push
fistl
ds
fdivl
push
loopne
shll
mov
inc
pop
or
or
je
std
scas
mov
sti
daa
int3
fldenv
cmp
in
and
cmp
mov
adc
ret
pop
leave
dec
or
mov
sub
imul
add
xchg
aas
cmp
push
shrl
fists
cwtl
in
mov
jl
in
aaa
xor
sbb
adc
jo
sbb
jg
sub
push
movsb
mov
mov
inc
mov
or
push
lahf
mov
filds
add
add
inc
mov
cmp
pop
and
pop
dec
inc
xchg
ja
cwtl
int3
dec
lods
push
push
lahf
add
pop
enter
stos
gs
push
rol
inc
cmp
mov
fs
jge
mov
xor
mov
mov
daa
sti
or
jo
mov
jg
test
jmp
xchg
cmpsl
cltd
pop
lods
sar
addr16
or
mov
jb
std
push
or
call
add
pop
xchg
jecxz
in
mov
setge
repz
fbstp
gs
fadds
xchg
mov
xchg
lcall
lock
cmp
lcall
mov
stos
lea
pop
cmpsl
or
rep
jge
or
sub
fwait
mov
addb
mov
xchg
add
sub
mul
or
add
sarb
or
loop
pop
test
arpl
add
xor
xchg
imul
lcall
stos
push
stos
mov
mov
jmp
addb
movsl
stos
push
fiaddl
sbb
xchg
push
inc
sbb
sub
loope
clc
shr
push
das
pop
stc
jns
sub
cwtl
imul
inc
ret
sahf
pop
shll
rorb
push
in
and
pop
and
ja
pop
outsb
dec
and
or
push
jecxz
mov
add
push
stc
enter
loopne
test
push
mov
jl
pusha
shlb
dec
xchg
mov
push
mov
fwait
pop
nop
aas
sub
cld
mov
clc
andb
or
repnz
nop
push
push
cmc
push
and
insb
sub
ffree
inc
pop
cmpsb
mov
inc
mov
mov
movsl
xchg
ret
loopne
scas
adc
jbe
cmp
imul
mov
mov
xchg
lods
dec
in
mov
clc
lods
inc
test
idivb
cs
int3
scas
push
rorl
pop
mov
aad
xor
or
sarb
loopne
insb
cwtl
sahf
clc
sbb
gs
dec
bound
cmp
int3
test
cmpsb
mov
hlt
mov
add
push
jmp
hlt
push
push
popf
test
test
jnp
dec
push
ljmp
mov
dec
push
sbb
pop
aad
jmp
and
mov
in
xorl
test
inc
leave
mov
out
stos
sbbl
mov
dec
std
or
out
sbb
aaa
fdivl
shll
shrd
loop
pop
cmp
lcall
cs
ror
cmp
cmp
mov
push
std
add
xchg
adc
xchg
xchg
and
adc
push
inc
push
in
inc
mov
repz
jbe
into
jbe
sahf
hlt
out
aad
int
or
mov
pop
mov
ds
neg
add
dec
mov
add
je
gs
sbb
repz
xchg
test
ds
iret
pushf
mov
sbb
push
jmp
dec
mov
cmp
rorl
xchg
cmp
ljmp
fistpll
push
inc
out
jmp
out
xchg
nop
loopne
in
shll
test
jp
push
xchg
rorb
movsb
xchg
pop
push
das
clc
mov
decl
mov
in
sub
pop
in
test
mov
orl
rorb
xchg
xor
in
and
push
mov
add
stc
jecxz
sbb
sbb
dec
cli
jecxz
lods
data16
loopne
stos
push
test
outsb
loopne
aad
call
lret
stc
mov
rol
dec
adc
scas
dec
shll
add
jb
sbb
push
mov
xor
ret
mov
outsl
ja
pop
xchg
mov
xchg
hlt
dec
in
enter
adc
pop
xchg
mov
testl
xchg
outsl
pop
int3
xor
mov
hlt
sbb
outsl
jns
sbb
mov
jne
dec
push
and
outsl
das
push
lret
inc
cltd
mov
sbb
xor
sub
daa
dec
xchg
negb
jg
inc
adc
fsub
pop
fisubrl
adc
ret
mov
jnp
cmp
rcll
sbb
lret
sbb
fsubs
inc
inc
mov
mov
test
xchg
sbb
push
push
sub
fs
sbbl
out
dec
push
jp
stc
cmp
fsubrs
mov
push
sub
test
iret
iret
fcomi
mov
sbb
pop
cs
cmp
imul
and
jle
ret
sti
and
add
jmp
pushf
lock
outsb
cld
scas
adcl
test
std
push
pop
loope
test
cmc
mov
adc
test
jecxz
jmp
add
gs
or
lar
dec
shlb
ds
cmp
stos
out
aaa
int
lcall
push
popa
lea
sbb
aad
fidivrs
or
add
mov
xor
xor
lcall
out
push
loope
lods
iret
in
xor
pop
pop
jecxz
rcl
clc
imul
jns
and
lret
xor
push
ljmp
sbb
std
dec
outsl
mov
int
pop
fcomi
pop
aaa
popf
jnp
mov
inc
andl
mov
mov
sbb
jg
xchg
and
fbld
scas
mov
mov
aam
or
mov
pop
inc
mov
idivl
fmull
jo
sbb
les
ljmp
bound
jge
out
clc
shl
test
inc
std
pop
mov
std
filds
pop
dec
mov
pusha
pop
push
mull
lcall
jb
cmp
mov
test
into
mov
mov
lcall
dec
mov
pusha
and
jno
inc
jmp
jecxz
jp
subl
add
aas
pop
mov
out
rorl
add
adc
pop
dec
mov
jle
outsl
movsb
adc
inc
adc
push
xchg
aas
loop
insl
cmp
jecxz
adc
in
int3
hlt
gs
aas
data16
xor
sub
cli
stc
xor
mov
ret
cmp
insb
mov
cmpsl
lock
mov
std
loop
paddq
call
dec
enter
pushf
rclb
inc
loopne
shlb
enter
jp
mov
incb
insb
ljmp
adc
cwtl
xchg
cmp
jl
inc
gs
push
sbbb
push
push
xor
adc
fldt
in
cli
jae
inc
mov
sub
or
cs
lcall
popa
imul
xor
loopne
mov
pop
in
fwait
push
cltd
call
outsb
arpl
jns
xchg
rcr
mov
loopne
jecxz
mov
mov
jp
jl
sub
test
sub
leave
repz
repnz
in
or
sbb
sbb
pminub
std
jbe
cmp
cmp
xor
sub
mov
bsf
insl
movsl
push
mov
and
movsb
loopne
icebp
add
jp
and
sub
pop
sahf
lods
and
dec
push
shr
lahf
inc
add
mov
in
and
lea
cmp
loop
push
psubsb
jno
push
std
ss
ja
add
mov
sbb
push
xor
jne
outsl
sbb
sub
outsl
movsl
arpl
out
and
and
test
scas
mov
mov
mov
int
dec
pop
cs
sub
out
pop
pusha
and
dec
pop
test
gs
imul
or
push
mov
loop
loopne
mov
mov
add
inc
xchg
pushl
icebp
cmp
scas
add
sub
sub
les
mov
cs
stos
jp
or
lods
jo
sbb
shrb
testl
push
cmp
sub
jne
sbb
sahf
lret
push
inc
aaa
pop
dec
lods
cmpsb
push
push
lods
pop
dec
xchg
imul
mov
pop
dec
imul
lahf
daa
ret
es
xchg
aaa
pop
and
movaps
and
xchg
loope
orl
push
mov
cmp
outsb
mov
rorl
pusha
movsb
sbb
pop
adc
lods
pop
aaa
int3
cwtl
orb
cli
sti
adc
cmp
arpl
cld
loopne
xor
addr16
cwtl
jge
lds
push
add
dec
push
adc
mov
or
mov
out
sbb
nop
jl
hlt
jae
int
mov
mov
cmp
mov
push
mov
push
gs
iret
lods
lds
pusha
push
outsl
movsl
ja
xlat
jnp
scas
outsl
clc
jp
shl
and
jl
cwtl
repz
xchg
js
and
les
and
nop
xchg
dec
fstp
push
mov
mov
cmp
add
push
pop
jg
inc
cwtl
jo
adc
popa
ficoms
iret
pop
daa
inc
xor
dec
imul
or
push
inc
ja
enter
fdivs
or
aaa
mov
je
push
jl,pt
cwtl
or
les
sub
mov
addr16
push
and
dec
mov
sti
push
fs
incb
iret
mov
mov
sysenter
mov
or
adcb
sbb
out
push
sub
inc
xchg
or
and
mov
or
jmp
fisubl
ss
adc
jns
mov
lods
jns
push
jbe
pop
push
cmpsb
adc
inc
rorb
pop
xchg
pushf
mov
shrb
mov
je
sbb
decb
ss
sub
cmpl
js
mov
je
pop
xor
cmp
lcall
fwait
xor
imul
arpl
mov
dec
adc
pop
inc
pop
repz
mov
cltd
add
outsb
xor
mov
xchg
shll
fmuls
sub
xchg
mov
int
inc
in
test
cmp
or
jns
addr16
sub
jg
fwait
pop
pusha
test
xchg
cmp
loope
push
pop
in
fwait
xor
lret
stc
jecxz
bound
inc
js
jbe
push
ror
xor
movsl
fisubs
pushf
or
push
adc
rcl
dec
adc
mov
mov
adc
das
notl
jbe
scas
cmc
sbb
in
sbb
or
ss
ds
mov
negl
cmc
inc
out
dec
push
xchg
sub
sub
sti
jp
aas
dec
das
push
dec
pop
dec
pop
in
and
mull
inc
pop
add
out
movsb
lods
bound
cmpsb
push
inc
xchg
push
and
mov
sbb
push
add
xor
jno
into
dec
lret
std
aad
dec
push
dec
in
ljmp
scas
lret
js
mov
adc
cmp
scas
inc
ret
cmp
or
adc
testl
add
mov
or
and
push
das
sub
jmp
sbb
xchg
lcall
filds
jbe
jp
mov
add
mov
rcrb
mov
lret
divb
fistpll
es
inc
popa
inc
fildl
cmp
out
std
sub
pop
rolb
xor
clc
adc
test
jp
push
data16
test
repnz
ja
pop
pop
fmull
mov
mov
push
push
add
sbbb
sbb
xchg
stos
push
xchg
lret
test
cmp
mov
mov
sub
mov
or
jmp
add
pop
dec
ss
cmp
sahf
or
sbb
idivl
inc
test
sbb
push
out
push
cmpsb
sub
cmc
or
addr16
jmp
lahf
mov
shl
cmp
jne
xlat
mov
ret
clc
lods
movsb
sub
mov
pop
mov
push
cs
mov
xchg
pushf
mov
stos
pop
sub
negl
xchg
push
daa
addr16
call
in
jb
orb
jmp
sahf
shrl
pop
push
xor
xor
xchg
stos
ja
xchg
push
or
divb
rcr
leave
push
xchg
mov
insl
or
pop
pop
pusha
or
adc
cmpsb
imul
mov
dec
out
lods
pusha
fldenv
js
xchg
and
xchg
mov
loop
es
cltd
inc
xchg
movb
stos
mov
movsb
cmpl
test
mov
sbb
dec
adc
adc
sbb
and
cmp
push
or
testl
iret
ss
je
push
sbb
sbb
mov
popf
push
xor
lock
fsincos
dec
mov
fdivl
push
jge
sahf
into
pop
nop
insb
cmp
cmpsl
idivb
adc
xchg
mov
xchg
pop
xor
mov
mov
leave
test
pop
push
movsl
mov
xadd
outsb
outsl
inc
jp
lret
call
fwait
mov
mov
mov
outsl
fnclex
into
adc
mov
mov
fdivs
ret
gs
and
fcmovnb
movsl
mov
pop
inc
std
xchg
mov
jecxz
jp
mov
or
mov
int
inc
add
cmp
mov
sub
fiaddl
pop
sti
pop
pop
adc
jne
mov
inc
sbb
mov
movl
nop
dec
dec
sub
cmpsb
into
pop
mov
push
xchg
stos
out
push
sahf
xchg
add
aas
cli
mov
imul
stc
dec
stos
push
inc
xor
ret
mov
popf
add
inc
add
test
and
or
cmpsl
loope
pop
nop
mov
arpl
cltd
test
test
mov
adc
cltd
mov
push
nop
inc
add
push
jns
dec
fnstenv
movsb
std
push
dec
sub
mov
jmp
in
adc
xchg
cmp
pusha
and
into
fsubrl
aam
repz
dec
ds
adc
movsl
iret
sub
adcl
shll
and
pop
xlat
call
arpl
bound
data16
xor
adc
or
mov
movsl
xchg
loopne
xchg
push
dec
dec
into
xor
xchg
nop
inc
push
cwtl
pop
in
addb
sbb
aaa
mov
dec
inc
sti
call
sub
xchg
lcall
test
or
sbb
cmp
jns
test
insl
aas
loop
xor
cli
xchg
sbb
cmp
dec
lea
out
push
add
pushf
pop
scas
std
xchg
xchg
jge
mov
outsl
in
int
inc
ficomps
std
adc
mulps
mov
pusha
out
mov
jge
jg
scas
stos
mov
and
lods
inc
shrb
mov
faddp
les
sub
movsb
inc
cli
mov
xchg
data16
xchg
test
enter
pop
mov
and
call
xchg
cs
mov
mov
xor
sbb
dec
faddl
pop
out
jne
roll
xchg
inc
xor
lahf
mov
xor
xlat
repnz
lcall
int
int
and
in
adc
sahf
xchg
ret
sub
data16
and
add
cmp
sbb
mov
shrb
push
jle
adc
mov
jge
out
pop
add
outsb
cmp
in
iret
fisttpl
testl
pop
and
mov
pop
sbbb
test
repz
adc
mov
insl
inc
call
or
adc
sarl
sbb
pop
or
push
pop
lock
cmp
mov
fidivs
dec
mov
xchg
jno
imul
adc
xchg
sub
pop
dec
jnp
fs
mov
pop
imul
mov
pushf
xor
mov
nop
adc
jne
imul
inc
ror
aaa
cmp
push
pop
call
sbb
insl
cltd
inc
test
cmp
sahf
addl
rcrb
mov
ficoml
pop
inc
lock
jns
in
push
mov
xchg
sub
push
inc
push
in
jo
pop
pop
lcall
sbb
mov
shl
aad
push
pop
adc
fsts
insb
repz
repz
dec
inc
jnp
cld
add
mov
loope
out
into
push
jl,pn
pop
cmp
mov
mov
ds
pop
or
mov
cmpsb
and
push
cmp
cmc
xor
pop
push
jno
std
fisttps
scas
pop
aaa
dec
adc
addr16
pop
jb
and
cmp
push
test
dec
push
das
sbb
inc
jno
repz
cmp
mov
push
fwait
sub
dec
cli
cmpsl
mov
jmp
add
fwait
and
mov
icebp
inc
cld
fstpt
jg
mov
repnz
in
outsl
fstl
cmp
sbb
cltd
movsb
xchg
pop
and
mov
cmp
xchg
mov
cmp
shll
pop
add
test
sahf
sub
jp
add
mov
enter
shl
xor
cli
lea
xchg
cmp
stos
adc
mov
mov
shrb
stc
lcall
movsb
loope
das
enter
sti
dec
inc
mov
mov
or
repnz
daa
cwtl
test
js
aaa
jno
mov
sub
lahf
inc
add
mov
ljmp
rorb
push
adc
inc
push
mov
dec
dec
enter
dec
dec
add
cld
adc
aaa
pop
fistpl
mov
rep
sub
mov
aas
scas
adc
ljmp
sbb
mov
flds
in
xchg
xchg
jns
sbb
or
inc
pop
popa
fsubrl
outsb
xchg
fiaddl
or
jecxz
fbld
adc
dec
mov
in
mov
xchg
fst
jp
adc
pushf
add
cmp
push
or
pop
mov
mov
rclb
lock
lods
mov
dec
mov
jne
cmpsb
xchg
dec
ljmp
cmp
mov
pop
pop
push
daa
insb
outsl
mov
cli
add
or
or
push
jge
mov
inc
xchg
fnstenv
js
movsl
insb
mov
and
xchg
cmc
cwtl
lods
int3
cmpb
jbe
in
mov
xchg
dec
push
cwtl
fwait
sub
jmp
pop
sbb
imul
sbb
pop
stc
mov
push
inc
mov
lcall
mov
movsl
inc
js
movsl
repnz
add
cltd
imul
cmpsb
mov
sti
cpuid
outsl
imull
mov
jl
loop
adc
add
and
jp
xchg
rcr
push
mov
out
dec
inc
xchg
sub
push
and
daa
movsl
adc
pop
cld
add
stos
and
loopnew
bnd
clc
negl
fmulp
mov
aas
pop
push
insb
xor
cs
addl
cltd
scas
mov
jecxz
dec
popa
shrb
sahf
pop
jmp
sbb
add
imul
xor
sbb
or
fisubrs
mov
loope
rclb
dec
pusha
imul
lcall
mov
pop
xchg
xchg
xchg
rcll
jle
dec
rcrb
push
cmpsl
movsb
into
lock
push
cs
or
mov
sbb
sbb
sub
sbb
loope
ljmp
bound
or
test
daa
jbe
mov
pop
sahf
dec
fisubrl
outsb
dec
mov
mov
pop
jg
cs
mov
pop
pop
daa
subb
sbb
shlb
cmc
add
pop
clc
fistl
pop
imul
shll
call
daa
pop
or
jg
subb
or
dec
shll
int
mov
jl
xchg
nop
dec
cmp
push
mov
scas
in
lea
mov
or
and
pop
lret
sbb
bswap
ret
cwtl
les
jno
cmp
or
dec
jl
lahf
jge
xchg
or
andb
ffreep
jne
mov
lcall
lret
cwtl
pushf
in
push
das
cmc
mov
lock
and
pushf
adc
sub
xorl
lret
fnsave
jl
push
out
sti
dec
loopne
dec
mov
imul
ss
je
les
shll
xor
mov
mov
push
mov
pusha
push
mov
lret
pop
sub
fsubl
sub
push
jbe
mov
xor
psrad
pop
fstpt
cmp
sub
call
out
cmp
pusha
dec
push
mov
jle
into
mov
inc
stc
stc
inc
cltd
fisttps
add
loop
dec
ret
out
into
push
push
in
and
sub
aam
sub
jle
sarl
xchg
lcall
xchg
inc
rorl
push
js
lret
cltd
fisttpll
cmp
ds
and
add
xchg
lea
mov
mov
in
sub
cmp
jge
jp
in
faddl
aaa
cltd
dec
dec
mov
movsl
jo
mov
movsb
adc
lcall
aaa
add
ss
int3
js
imul
sbb
xor
inc
cs
adc
les
jnp
sahf
or
adc
aas
insl
jns
dec
outsb
rcll
test
int3
in
inc
imul
cmp
sub
push
icebp
cmp
cmp
pop
test
pushf
cmc
outsl
or
and
push
jbe
popa
scas
scas
lret
lret
dec
mov
adc
out
lea
push
cmc
mov
cmp
and
shrb
xchg
rclb
inc
nop
test
push
mov
mov
dec
sbb
daa
loope
mov
mov
lods
clc
cli
call
insb
sub
pop
adc
test
xchg
sbb
cli
fsubp
mov
ret
add
or
sbb
pushf
xlat
xchg
pop
sbb
aam
repz
lea
popf
xorl
clc
add
gs
adc
aaa
jp
movsl
mov
xor
xchg
cwtl
lahf
fstpt
xchg
call
ret
xchg
addr16
cmp
mov
lahf
ret
mov
clc
outsb
mov
adc
or
data16
xchg
mov
jl
cmc
lahf
sahf
sub
push
push
stos
testb
lret
std
cmp
mov
cli
push
mov
pop
fwait
ret
jae
xchg
lret
add
fwait
int
or
and
jbe
lods
adc
fwait
lahf
mov
popf
std
xchg
dec
jl
arpl
add
int
jl
in
sti
repnz
mov
xchg
aas
mov
flds
fnstenv
imul
pop
or
outsl
cwtl
ret
xor
cltd
add
loop
bnd
pop
insb
or
push
xor
push
xchg
scas
imul
and
sbbl
icebp
cmp
mov
aam
add
shll
dec
or
xor
mov
sahf
rolb
imul
inc
cwtl
gs
mull
mov
mov
xchg
push
rcl
xchg
decl
outsl
insb
and
or
add
sub
pusha
movsl
sbb
fdivrs
lds
out
sar
ror
xchg
test
lret
lcall
arpl
xchg
jne
adc
scas
lods
pusha
mov
sub
jns
das
movsb
dec
inc
out
iret
mulb
push
imul
aaa
or
sti
cli
dec
or
fdivrs
lock
subb
mov
clc
adc
sub
nop
stos
shl
sahf
cmc
pop
push
push
das
adc
xlat
cld
xor
xchg
mov
stc
ds
and
push
push
xor
mov
push
test
and
add
bound
sub
repnz
cld
inc
jne
inc
sub
mov
loope
imul
and
jp
jo
dec
pushf
cmp
lea
xlat
mov
push
jmp
sub
dec
adcb
imul
cmc
dec
push
mov
xchg
and
adc
sbb
xor
add
mov
xchg
sahf
cwtl
xchg
or
insl
hlt
out
cmp
je
js
lods
test
mov
mov
xor
adc
sbb
pop
or
push
sbb
insb
in
mov
iret
leave
xchg
dec
dec
adc
or
sub
adc
mov
fiaddl
pop
stos
repnz
mov
xlat
push
jne
das
ljmp
test
pop
rolb
push
push
out
ficomps
jnp
lea
push
loopne
imul
cltd
mov
idiv
outsb
into
add
sar
cli
jg
idivb
dec
pop
or
cltd
adc
push
test
mov
adc
std
ret
icebp
mov
je
fnsave
or
stos
mov
arpl
stos
imulb
repnz
pop
shrb
pop
idivb
dec
stos
pop
les
arpl
push
ja
xchg
dec
sti
pop
xor
pop
rcll
inc
add
mov
sub
xchg
cmp
mov
mov
ret
sti
or
push
mov
cmpl
pop
daa
push
push
adc
ja
les
sub
mov
cs
loopne
sub
mov
jo
cmc
ret
xchg
push
sbb
lcall
inc
fildl
dec
sub
or
push
iret
mov
sub
pop
adc
aam
insb
xlat
push
mov
enter
add
les
js
jg
pop
sbb
jns
sub
dec
lret
cmp
arpl
fxch
or
jg
lahf
cmp
sbb
or
sub
cmp
fdivs
mov
pop
mov
jnp
sub
xor
cmp
or
enter
fldln2
aam
cwtl
scas
es
push
mov
std
fistl
je
jp
push
push
inc
cmpsl
pop
xor
rcrb
test
xchg
inc
pushf
cmp
jmp
xchg
xorl
inc
lea
rcrl
inc
sbb
lahf
gs
adc
xchg
fidivrl
adc
pop
sbb
xchg
jg
call
jle
ljmp
outsb
arpl
pop
pop
cmc
loope
insl
inc
pop
and
or
add
push
clc
pop
xor
xor
pop
lahf
lods
hlt
repz
les
pop
data16
xchg
mov
inc
lock
fucomi
pop
jb
add
xlat
out
imul
loopne
pop
mov
gs
inc
cmp
je
daa
mov
lea
jo
add
adcb
jmp
cwtl
int
or
lock
cmp
ficomps
push
fsubrs
adc
mov
fwait
sub
popf
jae
pop
cmp
loop
add
std
out
mov
bound
or
ds
cmpsb
std
nop
cmp
in
mov
mov
jge
das
mov
pop
pop
ficomps
pop
jb
sbb
into
in
or
cmp
enter
outsl
inc
push
lods
inc
pop
mov
cltd
sub
jecxz
push
fdivrs
pop
popa
pop
cli
sub
push
mov
pop
lods
jnp
insl
mov
leave
mov
and
jmp
test
dec
xorl
leave
xor
mov
dec
sti
xorb
in
push
loope
mov
cmp
and
adc
cmpsl
sbb
push
add
xor
adc
and
leave
popf
jno
sub
add
mov
xor
dec
test
inc
movl
sahf
jbe
xor
je
jo
or
loop
push
sbb
jle
scas
in
pop
jmp
push
popw
mull
ds
pop
dec
outsl
fs
xchg
push
cmp
inc
xor
mov
jmp
shll
xchg
and
xchg
jnp
cmpsl
xor
jnp
test
popf
popa
nop
cmp
outsl
push
test
xchg
push
pop
popl
adc
loopne
inc
mov
mov
hlt
dec
dec
hlt
cwtl
adc
xchg
ret
xchg
ds
and
je
in
push
das
mov
push
popa
shrl
jmp
cmpsl
dec
adc
jp
xchg
fiadds
lret
push
hlt
fsub
sbb
out
push
push
aaa
xchg
shl
cmp
pushf
push
int3
dec
test
in
cmp
inc
xchg
cmpsb
pop
jne
sbb
pop
pop
movsl
mov
in
xor
jp
add
ret
jns
push
add
push
lahf
cwtl
cwtl
add
jg
ffree
fwait
stos
inc
jp
aam
xorb
loop
out
xor
push
icebp
das
stos
cmp
inc
mov
xchg
sub
inc
jle
xor
int
and
and
add
std
or
aas
mov
push
jo
aas
ss
mov
sbb
dec
popf
pop
shlb
push
mov
pop
jg
jecxz
cwtl
cmp
xor
push
repnz
and
shl
cmp
ljmp
fst
ret
test
aad
sub
jb
adc
pop
movsb
sbb
xchg
dec
mov
cli
loopne
sbb
pop
xchg
sub
push
ljmp
stc
test
or
nop
mov
rcrl
dec
jge
jp
fs
dec
leave
mov
mov
inc
adc
jno
vunpcklps
in
mull
pop
mov
cmpsb
xor
xlat
daa
lock
lea
popa
idivb
cmpb
cmp
lock
repz
aas
cmpsb
sbbl
and
dec
icebp
mov
adc
sbb
sub
popf
aad
cltd
shrl
lcall
ss
test
push
mov
fcmovnb
push
xor
push
icebp
iret
adc
test
sar
aad
pusha
cmp
inc
sbb
mov
xor
popf
cltd
insb
inc
rcll
mov
fmulp
iret
sti
add
adc
sbb
imul
lea
ja
movsl
loope
mov
sbb
xor
sub
into
cld
pushf
rorl
mov
mov
sti
mov
cmp
mov
pop
dec
insl
cmp
xchg
in
jl
movsb
insb
lret
cmpb
je
pop
iret
in
xor
addr16
aas
sub
inc
mov
push
fwait
mov
lret
ljmp
adc
insb
mov
add
scas
sub
dec
shrl
xor
in
fs
sub
cmc
ret
push
decb
or
lret
push
xchg
add
and
jae
push
lods
adc
test
sbb
aad
push
leave
mov
pop
roll
add
inc
push
pusha
adc
into
pop
push
out
in
int
addr16
lcall
jmp
or
sub
aas
insb
loopne
dec
pop
test
lods
lret
jns
jl
iret
push
imull
arpl
das
inc
xchg
icebp
jg
sub
negb
push
insb
dec
push
mov
mov
jge
xlat
test
aaa
adc
ficomps
xor
pop
mov
popa
cmp
gs
cmp
dec
xchg
push
lock
or
ljmp
cmp
cmp
sub
int3
jno
mov
cmp
lahf
bound
data16
mov
jo
jecxz
sub
fstl
jno
push
sbb
add
add
jmp
jmp
push
nop
sbb
mov
enter
negb
jecxz
jmp
xchg
pop
jo
push
mov
in
or
adc
xchg
xchg
std
inc
jp
rcll
psubsb
scas
mov
stos
andl
pop
push
sahf
insl
fdivrl
andb
lahf
or
rcrb
xchg
push
push
test
cmp
sbbb
js
xchg
gs
sbb
lods
rolb
stos
int
jae
fistl
test
adc
imulb
loope
fcoms
outsl
lret
lods
and
imul
lret
call
pop
dec
dec
cmpb
adcl
lock
mov
or
push
arpl
dec
ret
frstor
mov
or
in
xor
xor
push
sbb
inc
push
push
xor
jnp
dec
or
dec
dec
outsb
or
fsubrp
enter
pop
jne
jb
sub
test
loope
int
and
push
mov
cs
add
jmp
loop
ficomps
dec
test
outsl
arpl
mov
lahf
xor
pushf
add
ja
andb
xchg
loopne
int3
inc
mov
clc
push
cs
jmp
shll
out
sbb
sub
aad
stos
xchg
and
stos
push
js
or
mov
dec
xchg
cmp
popa
movsl
imul
cltd
and
sbbb
inc
outsl
xor
lods
in
mov
add
in
lret
or
mov
out
movsb
mov
xchg
push
add
jmp
call
rclb
push
jle
push
mov
lock
pop
negb
dec
movsl
fcoms
sub
fwait
adc
or
lods
inc
cwtl
pop
dec
xor
xor
sbb
rorb
imul
cmovg
iret
shlb
and
xor
jno
sub
repnz
pop
ficoms
dec
inc
adc
pop
fxch
push
mov
dec
insl
mov
lock
imul
les
lahf
xchg
out
cmc
mov
int
int3
sahf
js
out
xor
push
call
test
fwait
or
dec
dec
sahf
js
jo
outsl
mov
sub
pop
fistps
scas
xorl
or
mov
jecxz
into
js
jge
mov
lea
shlb
rcrb
rorb
test
adc
scas
dec
lds
fsts
xor
inc
mov
sbb
or
dec
gs
mov
jecxz,pt
mov
add
test
ds
popf
jg
fs
mov
push
add
sub
fcomp
cmp
mov
cmp
mov
mov
dec
push
repnz
aad
jns
into
add
mov
cli
pop
lods
mov
fwait
jns
mov
xor
ret
ficoml
or
mov
imul
jbe
push
icebp
mov
mov
push
push
sahf
xchg
mov
cwtl
xchg
inc
movsl
fiadds
jno
fldcw
scas
cmc
jb
rcrb
sub
mov
push
xor
add
stos
adc
add
test
jp
lret
mov
fwait
cmp
pop
test
and
add
andb
xchg
in
adc
fbstp
push
sub
scas
push
addr16
call
xor
fbstp
out
xor
sub
and
addr16
and
fsubs
test
mov
lahf
repnz
lods
aam
adc
inc
or
xor
mov
lahf
sub
imul
imul
dec
in
mov
cmp
xor
lcall
mov
pop
int
idivb
add
mov
movsl
std
ljmp
pop
jnp
lea
fdivrl
mov
stos
sub
aas
adcb
sarl
jle
rorb
fnsave
cmp
push
daa
xchg
je
jle
inc
fistl
mov
lret
and
loopne
adc
movsl
and
add
push
insb
add
or
scas
loop
dec
cmc
xchg
push
mov
das
sbb
jb
pop
sbb
jmp
xchg
pop
pop
stc
enter
aam
jbe
lea
test
movsl
je
pop
mov
sbb
sub
cmc
ret
mov
fdivs
leave
push
push
pusha
pop
sub
mov
lds
dec
cmp
jge
icebp
iret
and
cmp
and
cmp
lea
dec
push
pop
cli
lcall
filds
push
lret
and
jbe
sbb
inc
bound
cmpsl
lods
pushf
je
push
jnp
cmpsl
loop
or
scas
mov
pop
pop
mov
rclb
mov
dec
mov
mov
movsb
dec
leave
cli
ss
or
popf
dec
stos
pop
sub
mov
mov
push
test
in
inc
aam
push
pop
sub
sarb
sti
iret
cmp
push
mov
div
je
jo
jo
aad
pop
xchg
les
xchg
in
add
and
jbe
cmp
in
dec
cwtl
cmp
jbe
xchg
jl
pop
dec
jb
jne
sbb
dec
popa
inc
lret
loop
je
jns
xchg
dec
dec
cmp
and
in
ret
sub
rcl
jl
popa
push
stos
in
pop
adc
sbb
sbb
call
int
mov
add
xchg
or
jo
movsb
xchg
lods
or
jno
jmp
out
push
push
ljmp
cmp
push
pop
inc
mov
mov
jl
mov
adc
sub
inc
test
jle
add
imul
lret
xchg
dec
dec
icebp
pop
inc
lcall
jl
mov
addr16
xor
dec
f2xm1
cld
push
jg
jge
das
pop
jnp
dec
jo
mov
dec
out
cmp
fs
adc
ds
cmpsb
std
shl
xchg
jecxz
mov
pop
rclb
fsub
out
in
xchg
inc
arpl
mov
cwtl
out
cmp
inc
pop
xchg
aas
sbb
jne
or
inc
iret
mov
sbb
stos
iret
and
aam
sarb
popf
pop
pop
aam
lods
xchg
clc
adc
rolb
subl
out
aad
sub
ficoml
sub
inc
pop
sbb
mov
rorb
cld
ficomps
xchg
js
push
fwait
in
cmp
mov
enter
or
pop
lcall
test
push
test
xor
inc
mov
ja
clc
mov
xchg
repnz
and
or
das
xchg
imul
icebp
ds
fpatan
dec
repnz
push
icebp
pusha
pop
mov
push
hlt
fs
inc
mov
pop
sbb
xchg
sar
js
pop
push
movb
xchg
popf
push
popf
je
jns
push
dec
cmp
je
add
outsl
xlat
movsb
mov
dec
hlt
sub
test
xchg
into
sub
xor
gs
imul
sti
lcall
sbb
js
xchg
add
stos
xchg
and
cmp
mov
and
push
cmpl
idivl
scas
push
pop
sbb
js
adc
dec
mov
pop
cmp
data16
rcr
mov
mov
mov
add
orl
test
inc
call
or
and
pusha
pop
in
inc
test
jno
mov
xchg
in
or
cmp
std
fists
jno
adc
data16
or
mov
sahf
or
testl
pop
hlt
jmp
mov
pop
mov
dec
push
ret
je
mov
imul
icebp
add
insb
fistl
fimull
test
xlat
cmpsl
xor
adc
stc
popf
push
orl
mov
jl
xchg
add
idivb
stc
in
xor
test
ret
cmpsl
adc
dec
or
into
cltd
movsl
lock
or
inc
push
adc
sbb
xor
shl
cwtl
add
pusha
mov
les
cli
push
and
mov
or
cltd
xor
xchg
rorb
mov
popa
jmp
insb
lods
inc
mov
lea
in
pop
jae
clc
leave
mov
pushf
lret
sub
push
lea
pusha
jle
xorb
fidivl
cltd
inc
dec
test
cmp
test
lock
lret
jge
sbb
cmp
mov
loopne
out
mov
sarl
jp
jl
sub
xor
jmp
fmul
ja
push
or
lcall
in
or
jns
ret
lock
cmp
push
repz
ret
inc
mov
lds
mov
cld
cmpsb
popa
inc
xchg
inc
add
cltd
push
test
xchg
and
xchg
imul
pop
lea
or
jmp
dec
mov
rcll
insl
in
jno
jae
lods
mov
outsl
out
or
cmp
pop
mov
outsb
xchg
cmp
rcll
cmp
fiaddl
scas
cmp
sbb
loope
add
sub
imul
fimuls
mov
sub
loope
shlb
rcrb
fsubl
dec
inc
pushf
icebp
push
sub
ljmp
jl
jg
insl
jecxz
iret
jmp
jnp
pop
sbb
stc
push
jae
int3
add
in
push
add
pushf
xor
cmpsb
push
js
push
xchg
lds
inc
rcrl
loope
dec
bound
lock
dec
icebp
or
xor
in
mov
lcall
mov
or
and
or
and
pop
inc
lds
cltd
push
xor
xchg
jg
into
mov
jns
mov
stc
and
loop
mov
sbb
aam
call
lret
pushf
inc
xor
mov
and
mov
les
adc
xchg
ret
lea
lods
outsl
dec
adc
sub
pop
loopne
ret
testb
sub
arpl
mov
bound
mov
dec
lret
push
or
add
adc
push
imul
xor
pop
psrlw
xchg
movsl
push
shll
enter
je
sti
int3
movsl
orb
in
es
mov
int3
pop
dec
test
in
or
into
pop
or
test
scas
add
xchg
cwtl
out
mov
sub
dec
cwtl
sbb
mov
fwait
hlt
xchg
dec
push
cmp
mul
xor
push
or
mov
cmp
test
loope
aam
icebp
ljmp
fs
outsl
xchg
sub
aad
imul
dec
movsl
inc
pop
outsl
dec
xchg
mov
mul
pop
out
mov
pop
in
push
mov
push
sarb
rcrl
test
xor
add
repz
mov
and
in
xorl
add
in
mov
mov
cmpsl
mov
xor
mov
int3
push
lret
movq
andl
mov
cmp
cmc
ficoml
insl
dec
add
lret
inc
lret
sub
out
mov
jne
mov
jecxz
dec
inc
xchg
or
rcll
aas
in
cld
pusha
mov
push
aaa
lret
push
rcrl
aas
imul
jns
popf
sbb
lahf
clc
or
pop
jb
xor
aaa
inc
xchg
dec
jmp
and
mov
jecxz
push
imul
adc
cmp
mov
cmp
mov
lahf
mov
cmp
sub
fiaddl
mov
fcmovnbe
add
dec
jne
adcl
and
stc
jmp
loopne
sbb
cmp
ja
movsl
pop
xchg
and
mov
popf
pop
push
jo
stos
in
cmpl
mov
dec
jmp
outsb
cwtl
sbb
or
clc
jmp
pop
and
data16
or
jmp
push
dec
jo
mov
mov
pushf
or
lahf
loopne
add
repz
mov
sub
sti
mov
adc
jo
lods
fsub
xor
mov
insl
push
repnz
fnstenv
cwtl
into
or
out
sub
shl
dec
and
xor
inc
sahf
insl
test
inc
sub
push
xor
aas
jbe
fnstenv
ret
and
mov
cmp
adc
shlb
iret
aad
sbbl
xchg
test
and
stos
sub
out
xchg
bound
mov
notb
jecxz
fstpt
cli
xor
into
ds
cmpsb
jnp
pop
and
test
mov
and
sbb
pop
cmp
cmpsl
jl
dec
popa
pop
shrl
mov
jne
addr16
jl
mov
test
mov
test
addb
sti
push
add
out
mov
cmp
xchg
adc
jmp
inc
outsl
or
insb
and
cmp
stos
mov
jnp
fs
jae
adc
push
jmp
sub
sbb
scas
shrl
addl
scas
call
ret
cmpl
dec
cmpsb
ret
add
dec
loope
mov
push
jg
enter
aad
sub
js
and
jl
mov
testl
les
jmp
aas
xor
xor
and
push
dec
shll
push
icebp
hlt
jle
insl
fimuls
dec
inc
insl
out
das
inc
jp
fs
push
jbe
mov
push
and
inc
xor
mov
ds
cmp
or
insb
sbb
cmpsl
jo
push
push
cmc
pop
inc
stc
push
stc
sub
mov
sub
adc
mov
and
ljmp
dec
loopne
fs
mov
push
int
cwtl
arpl
inc
push
imulb
adc
or
xchg
dec
xchg
cmpsl
xor
inc
sbb
ja
idivl
enter
loop
and
cwtl
inc
cmp
pop
xlat
adc
out
shr
sbb
and
into
push
adc
imul
jb
pop
xchg
pop
dec
loope
or
xlat
mov
das
rcrb
add
add
stos
mov
rol
shlb
mov
iret
clc
ds
popf
xchg
mov
lcall
push
out
and
xchg
int
shrb
push
int3
cmp
ret
mov
push
loop
sbb
pop
insb
mov
lret
add
mov
push
xchg
mov
or
inc
pop
adc
arpl
xchg
call
rcr
push
or
mov
xchg
and
mov
pop
mov
adc
pop
imul
sub
cld
lcall
sub
pop
sub
test
lds
add
insb
xor
leave
mov
insl
inc
stos
ficoms
mov
inc
mov
fwait
mov
inc
adc
imul
dec
xchg
push
inc
in
mov
mov
ficoml
ss
xor
and
aad
mov
push
dec
je
in
jecxz
dec
rcll
packssdw
shrb
outsl
mov
jne
insl
pop
decb
push
lahf
sub
cmp
pop
lret
push
dec
jbe
stos
stos
or
cwtl
aas
fcoml
inc
mulb
xchg
in
jae
pop
lock
daa
mov
ret
hlt
adc
fnstenv
mov
addl
rol
jle
jle
cmp
xchg
sti
jae
cmpsb
adc
js
cld
mov
dec
xor
xchg
pushf
insl
push
jnp
dec
or
adc
inc
xor
popa
shll
add
jae
notl
pop
adc
andl
dec
mov
mov
jl
repz
lcall
sub
rorb
iret
ret
dec
rorl
push
mov
in
dec
popa
mov
out
dec
mov
mov
mov
cmp
lret
lock
pop
int3
mov
lock
push
mov
dec
mov
mov
pop
leave
mov
imul
lret
mov
addr16
shl
shlb
push
jb
inc
mov
jmp
into
add
jne
sbb
lds
adc
lock
jecxz
jns
int
das
mov
xchg
imul
cwtl
sub
and
mov
xchg
mov
hlt
mov
add
xchg
xor
add
fmull
int
popf
fmull
rcr
frstor
or
sbb
pop
jp
mov
out
xor
es
pop
xchg
ret
pop
sysexit
mov
mov
in
cwtl
cmp
inc
push
sbb
call
add
int
mov
ljmp
dec
push
ret
lret
xchg
ret
scas
fldcw
adc
xchg
pop
push
dec
xchg
dec
repz
in
pop
jg
xchg
sub
lea
fidivs
cmpsb
xor
and
rcl
in
mov
repnz
push
and
pushl
mov
test
lods
jnp
push
dec
pusha
cwtl
aam
push
popa
dec
test
pop
xor
out
lcall
xchg
mov
dec
jne
cmp
in
daa
add
sbb
shl
jo
inc
into
xor
repz
in
fsubp
mov
fwait
pop
adc
inc
add
out
mov
out
stos
or
sar
cwtl
lret
fstpt
lock
xchg
in
sub
iret
mov
jns
mov
or
jmp
add
lcall
sbb
jge
sbb
aaa
inc
sbb
cmp
aaa
iret
insl
add
test
pushf
xchg
imull
int
jno
repz
ljmp
ret
enter
xchg
add
add
jnp
rolb
push
ss
sub
int3
inc
cltd
xor
adc
dec
repnz
outsb
adc
lret
jmp
or
jle
jb
or
pop
mov
dec
les
xchg
repz
popa
dec
sub
fiadds
add
pushf
mov
shl
aaa
lock
xorl
fwait
dec
jnp
out
movsl
sbb
cld
xchg
test
orb
mov
inc
push
nop
inc
jb,pn
pop
mov
scas
jae
pop
sahf
popa
push
mov
mov
pushl
cmp
xlat
mov
hlt
int
and
ficoms
dec
inc
mov
push
scas
dec
push
jp
pop
sti
mov
xchg
dec
bound
jl
das
repnz
shrl
ja
rolb
xchg
and
iret
test
jb
insl
jmp
in
mov
add
add
icebp
adc
in
pop
lods
rcrb
jns
enter
push
pop
cmp
fneni(8087
fs
das
mov
mov
pushf
repz
ret
push
jb
jp
stos
push
cmp
int
inc
int3
lds
mov
jp
ja
pushf
jecxz
lret
jb
insl
push
lret
inc
xlat
fwait
movb
inc
push
mov
jecxz
mov
cmp
sbb
sbb
xchg
shl
add
loopne
and
mov
mov
mov
jne
push
nop
ror
rcrl
lea
dec
inc
fcom
nop
sub
sahf
jmp
ret
cmp
sub
inc
out
and
out
inc
push
out
in
sbb
loopne
dec
cmp
and
sub
je
loopne
and
adc
std
int3
sub
sub
sarl
inc
xor
and
fisubrs
filds
daa
iret
inc
fcoms
mov
mov
adc
fiaddl
sbb
jge
sub
xor
inc
pop
fstpl
xchg
inc
dec
xor
jp
cmp
out
xchg
les
xchg
rcrb
inc
and
adc
js
das
lret
push
push
xor
mov
and
cmp
arpl
or
scas
fists
push
scas
aam
xor
jns
or
adc
hlt
xor
sub
subl
mull
and
in
xor
cmp
xchg
out
and
xchg
popf
xchg
in
pusha
sti
scas
test
jbe
pushf
imul
cwtl
xchg
ljmp
loopne
push
fsts
and
mov
pop
jmp
movsl
push
adc
jns
mov
push
cmp
popf
adc
mov
push
sub
push
add
mov
cmc
mov
fidivrs
pop
mov
in
ret
test
ret
xor
mov
hlt
loope
xchg
aad
aad
loop
ret
lret
pop
sahf
xchg
adc
test
lds
or
mov
pextrw
cmp
sub
movsl
mov
adc
xor
sub
sti
scas
sbb
or
movups
cmpsb
ret
lock
jbe
sti
pop
mov
ja
jne
in
cmp
out
es
inc
mov
cmc
loop
cmp
add
mov
arpl
sub
mov
cmp
mov
cli
sbb
push
xor
fdivs
jb
mov
inc
test
jl
ror
cmpsl
mov
adc
inc
pushf
pop
xchg
xor
lds
push
cltd
rcrb
pop
sbbb
inc
pop
xchg
pop
mov
test
jo
push
scas
out
popf
dec
xchg
jp
loopne
add
jl
pop
call
and
mov
pop
pop
imul
shrl
and
aaa
fdivr
mov
lcall
push
push
insb
pop
stc
pop
mov
decl
mov
test
popa
push
inc
loope
cmc
cmp
mov
jle
ljmp
mov
mov
imul
out
mov
sbb
hlt
cld
inc
mov
add
cmp
sub
push
rcrl
repnz
mov
data16
cld
lahf
cmpb
movsb
faddp
or
jge
mov
shrl
xor
cmp
mov
sub
jmp
mov
mov
lret
adc
mov
test
ljmp
mov
cmp
mov
xchg
das
dec
imul
push
or
imul
xchg
idiv
or
mov
mov
pop
shl
dec
jmp
dec
nop
mov
dec
in
adc
mov
loopne
push
and
dec
push
repnz
sahf
push
mov
add
pop
lods
inc
mov
push
test
mov
cs
dec
add
daa
mov
xor
xorl
push
and
into
xchg
or
mov
cmp
cmp
sub
outsl
stc
mov
jecxz
mov
mov
outsl
pop
movsl
push
loop
sti
and
mov
mov
dec
dec
mov
pusha
js
or
stos
test
je
cli
push
dec
std
jbe
pop
mov
es
cmp
dec
fisttps
out
pop
outsl
or
cmpsb
sbb
ret
xchg
xchg
shrb
push
aam
ljmp
pop
lret
mov
cmp
jb
push
and
or
in
jo
add
dec
xchg
sbb
icebp
dec
jne
fisubl
sbb
pop
leave
out
and
xchg
sub
cmp
sbb
hlt
pop
sti
lods
inc
jne
int
adc
arpl
lret
into
jae
ficomps
xchg
ja
mov
or
pop
lods
in
add
aas
mov
sub
pushf
out
xchg
in
inc
mov
dec
mov
repz
cmc
clc
adc
pop
jmp
adc
cmp
daa
cmpsl
and
mov
lods
loope
je
divb
pop
fs
sahf
scas
sbb
data16
movsl
cmpsl
jl
pop
ror
adc
pop
in
cli
lock
aam
fnstcw
fmull
or
addr16
jecxz
sar
js
mov
xor
xchg
jl
clc
roll
inc
add
mov
jo
xchg
pop
jl
inc
adc
jg
cmp
les
inc
jnp
push
jno
je
movsb
push
imul
je
pop
fistps
jo
int
adc
dec
out
pop
cmp
lods
xor
and
push
inc
push
or
js
rolb
ja
ret
scas
popa
mov
jle
push
outsb
mov
xchg
xor
pop
aam
std
push
movsl
dec
xor
ficoms
mov
lds
pop
clc
int
into
or
jo
stos
rcll
mov
clc
push
adc
push
xchg
ret
mov
fists
ss
imull
je
mov
mov
mov
cmpsb
icebp
pop
sbb
adc
xor
or
cmp
mov
mov
ja
pop
jge
incb
pushfw
xchg
sti
cmp
push
filds
pop
add
iret
int
into
jno
out
xchg
and
insb
fsubr
mov
xor
jns
and
lahf
cs
pop
fwait
push
mov
in
dec
xor
mov
adc
add
xor
jb
test
roll
and
inc
orb
mov
mov
cltd
mov
mov
pop
xchg
lock
xor
mov
push
icebp
add
out
pop
xchg
add
adc
popf
add
pusha
xor
loopne
mov
jne
cmp
mov
aas
test
clc
out
push
mov
out
loope
and
push
adc
sub
mov
push
sub
mov
cs
movsb
pop
mov
cltd
xchg
ret
xor
inc
lock
in
cli
xchg
enter
test
rolb
mov
add
pop
jl
loope
xor
jne
sbbb
pop
inc
mov
jle
sub
xor
dec
addl
hlt
jl
shl
add
test
mov
pop
sbb
loopne
sbb
add
cmpb
mov
push
add
xlat
dec
sbb
mov
scas
aam
pusha
xchg
cmpsb
shl
cli
jmp
je
arpl
inc
dec
fists
aam
push
movsl
push
lds
sub
mov
rcll
push
mov
lods
out
mov
sbb
test
shll
test
dec
mov
outsb
cmpsl
push
add
gs
jb
addr16
xchg
test
mov
pop
mov
mov
lods
cmp
push
lods
testl
cmc
xchg
add
dec
adc
ja
movsl
call
jno
test
xchg
stc
mov
xlat
push
mov
pop
inc
mov
arpl
jmp
or
sub
flds
data16
fisubrl
arpl
lods
cbtw
jb
sti
sbb
hlt
push
mov
aas
popa
mov
cmp
fisttpl
lds
pushf
xchg
gs
push
in
or
lods
stos
repnz
fisubl
cwtl
fiadds
cli
jmp
in
paddusw
push
mov
jg
xorb
das
mov
nop
xchg
jg
stos
mov
push
mulb
cmp
jge
xchg
inc
in
mov
sub
mov
inc
pop
movsl
dec
pop
xchg
or
pop
emms
stos
cmp
arpl
xchg
rcrb
scas
jge
push
aaa
xlat
imull
mov
fidivs
xchg
and
es
mov
lods
ljmp
sbb
test
push
fisttpl
dec
pop
insb
clc
jg
loop
push
cmpsl
xlat
in
lods
mov
fistps
sub
stos
repz
enter
iret
lret
fcmovu
xchg
out
ds
cmpsb
repnz
aaa
in
stc
mov
stos
shl
and
call
mov
sub
pusha
inc
inc
cs
mov
jae
mov
das
push
mov
mov
jle
add
pop
ret
sub
hlt
sbb
or
or
cmp
jg
push
cs
int
sub
stos
jg
push
or
pop
es
repz
push
sub
sbb
push
add
out
dec
mov
lock
add
das
call
push
loop
mov
add
jb
scas
or
mov
pop
dec
scas
shlb
sarb
jg
sub
pop
movq
mov
lock
int3
jbe
pop
adc
cmp
cmpl
loopne
add
push
fsubp
or
outsl
lret
xor
mov
in
mov
adc
repnz
cmp
jno
or
dec
inc
push
push
aaa
cmpsl
jp
or
mov
jne
aas
enter
push
adc
mov
mov
lret
pop
jl
xchg
xor
sub
or
stos
stc
aas
mov
out
jmp
fstl
pop
adc
jl
pop
in
sarl
sbb
lret
cmp
rorb
test
xor
cs
jecxz
cmp
pushf
pop
dec
shll
add
dec
inc
sub
xchg
jae
or
into
insb
xchg
mov
lea
bound
push
cmp
cmp
bound
mov
iret
mov
jecxz
sahf
ja
fildll
and
mov
pop
fnstsw
inc
je
stos
push
addr16
in
push
stc
nop
dec
mov
jg
cs
mov
fisubrl
jmp
cwtl
shll
pushf
and
ja
sbb
pop
sbb
mov
int
lds
and
push
cmp
mov
test
cs
jp
hlt
and
or
test
xor
mov
cmpl
in
out
test
jb
dec
xchg
js
mov
neg
repnz
lret
pop
insb
or
fisubrl
mov
mov
dec
jle
ret
sbb
cmpsb
mov
inc
jns
negb
mov
push
push
dec
push
push
dec
jno
adc
rorl
flds
mov
fdivs
cmp
dec
xchg
jno
jns
add
mov
jge
inc
test
add
sbb
pop
push
and
xor
push
or
stc
je
dec
pusha
pop
js
cltd
jnp
lahf
imul
stos
or
in
jne
test
sub
jp
loope
xchg
js
pop
cld
lret
shl
ljmp
andb
push
rcrb
cmp
push
insb
xchg
pop
dec
stos
adc
xchg
and
and
sbb
lds
mov
stc
mov
cmp
outsl
bound
inc
adc
sbb
test
iret
insb
scas
ret
js
push
mov
add
insb
sub
push
test
loopne
cmp
add
jbe
jl
jp
jbe
or
shlb
ret
ret
dec
mov
mov
jo
mov
shlb
mov
sbb
and
push
rolb
inc
mov
fwait
jo
aad
jl
push
cmpsb
xor
bound
stos
xchg
xchg
push
fstpl
push
shll
inc
sub
out
push
pop
pushf
mov
jg
cld
mov
cmpsb
stos
add
enter
mov
pop
scas
daa
push
cltd
loop
fsincos
xor
inc
mov
or
stos
xchg
cmc
cmp
xchg
rorb
jl
dec
pop
movsb
adcl
mov
sbb
fwait
movsl
adc
std
scas
jae
mov
pop
leave
pop
hlt
dec
into
sbb
ret
mov
filds
push
mov
daa
loopne
mov
push
movsl
adc
dec
push
hlt
rcr
push
cmp
test
mov
mov
adc
ss
bnd
push
shlb
jge
inc
movsb
dec
out
and
xorb
push
xchg
and
dec
and
dec
cltd
out
lret
pusha
sbb
sahf
and
and
lods
mov
sbb
mov
dec
inc
xchg
mov
dec
dec
rcrl
push
in
inc
stos
and
pop
pop
sub
push
mov
push
pushw
push
pushf
sub
enter
ss
mov
cmc
sbb
fucomip
shlb
lds
stos
dec
cmpsl
ret
out
fwait
gs
bnd
inc
sbb
and
xor
sbb
pop
mov
xchg
gs
mov
enter
out
dec
aad
and
sbb
push
pop
or
jge
xchg
push
adc
jg
addb
jne
adc
ja
fsubl
enter
jne
inc
sub
imul
jnp
andl
fcomps
in
sti
subl
pop
mov
and
cmpsl
push
and
jae
add
es
sub
push
pop
cmp
mov
pop
fs
call
inc
clc
dec
xchg
mov
jle
sub
add
push
pop
iret
jmp
mov
pop
inc
add
mov
dec
pop
xchg
jno
jb
and
lds
sbb
inc
push
pop
xchg
das
mov
adc
mov
enter
cmp
xchg
ret
in
mov
faddl
dec
cwtl
pop
sub
xchg
adc
fnsave
in
stc
jbe
je
inc
push
lahf
lds
adc
fnstcw
les
add
stos
pop
dec
push
xchg
mov
into
repz
dec
xchg
sub
fcmove
enter
or
sbb
fxam
fsubrl
dec
in
daa
adcb
or
repz
mov
or
mov
pop
mov
push
pushl
dec
in
jl
mov
cs
adc
inc
inc
int
int3
cmp
iret
add
lods
gs
lahf
mov
ds
jnp
add
cmpsl
inc
stos
mov
push
daa
xchg
loop
xor
add
jp
dec
jbe
gs
xchg
mov
mov
andl
enter
cmp
imul
sub
and
stc
push
jns
xor
xor
mov
xor
push
sub
adc
arpl
ja
jp
xor
jbe
mov
addr16
jle
adc
mulb
pop
mov
pushf
fs
sub
adc
sub
jmp
inc
in
in
jle
sub
loop
mov
das
test
stc
pmulhw
outsl
mov
ss
xchg
inc
mov
rcll
insl
xchg
xchg
insb
xor
arpl
push
or
mov
stos
or
repz
ljmp
inc
xchg
insl
pop
jmp
stc
sub
in
cli
sub
lcall
outsl
push
imul
pop
jne
jnp
jp
notb
jg
mov
and
dec
je
test
lods
and
xchg
lcall
test
xor
mov
daa
dec
xchg
or
jnp
jnp
add
aaa
scas
es
and
mov
adc
inc
inc
inc
fstpt
xchg
xchg
sti
push
mov
sub
icebp
mov
ja
sarl
dec
mov
lods
movsb
clc
cmp
movsl
mov
sub
mov
fistl
outsb
ret
in
loope
cmpsb
inc
orl
rcrl
cmp
flds
out
inc
je
not
test
push
dec
pushf
loope
sub
push
adc
adc
mov
bound
fdivs
pusha
shlb
sbb
mov
xchg
cmpsl
out
push
xchg
dec
movsl
ds
jns
push
add
addr16
cli
and
mov
fcom
mov
pop
jb
cmpsb
pushf
movsb
mov
lahf
les
ljmp
repnz
mov
sub
xor
nop
icebp
xor
ja
pop
xchg
lock
cmp
mov
fs
ja
cmpsl
jmp
out
into
push
test
mov
inc
push
daa
xlat
int
je
dec
cld
mov
movsb
or
hlt
jnp
push
push
and
out
ror
jbe
roll
push
jo
bndstx
leave
imul
stos
outsl
jno
cmpsl
push
xchg
ljmp
add
lea
out
neg
xlat
jb
mov
push
pop
xchg
lods
sub
xor
gs
dec
enter
arpl
int
jb
xlat
test
xchg
mov
outsb
mov
rol
dec
repnz
test
aaa
or
xor
in
clc
bound
filds
cmpsl
mov
cmp
push
jg
fwait
mov
sbb
and
sub
dec
ljmp
mov
cmpsl
incl
lock
ds
xor
mov
xor
xor
push
repz
xor
push
inc
push
rclb
and
shl
test
clc
fs
testb
mov
jne
into
add
jae
test
pop
lock
imul
ljmp
mov
pop
mov
fadds
sub
imul
in
xor
imul
mov
mov
xor
sbb
push
or
mov
stos
bnd
lret
insl
lahf
aaa
cmp
leave
pusha
push
pop
inc
add
pop
mov
out
hlt
popa
jnp
cltd
insb
lret
dec
stos
les
mov
sub
sub
adc
sub
insb
std
dec
and
mov
mov
fmull
insb
or
mov
mov
sub
xchg
mov
sbb
push
loopnew
mov
add
fcomip
jmp
int
mov
lret
xlat
add
aas
pop
inc
lcall
adc
mov
inc
add
and
ljmp
hlt
mov
sbbl
xchg
ret
and
mov
inc
or
es
xchg
push
xchg
mov
xchg
xor
add
jns
fistpll
jle
repz
in
int
stos
sub
in
adc
out
ljmp
in
push
sub
jns
pop
jge
dec
pop
jl
jl
std
mov
sti
pop
sub
sar
es
inc
xchg
mov
jl
lock
xor
mov
pop
and
lret
lea
fs
leave
repz
out
cmpsb
mov
sbb
mov
mov
int3
adc
sti
push
sub
popa
adc
sarl
scas
rcrb
cmp
dec
adc
loope
xor
or
sub
fwait
add
int3
mov
cwtl
cltd
gs
xchg
pop
dec
cmp
test
js
mov
jo
daa
fwait
ret
lds
dec
push
repz
ja
pop
outsl
fimuls
outsb
sub
pop
cmp
inc
pop
aas
lret
jg
fimull
data16
call
dec
or
dec
xor
sub
push
fisttpll
aaa
les
inc
dec
and
out
sti
pop
mov
ljmp
pop
gs
push
or
test
test
xor
scas
dec
je
cmc
movb
cmovbe
xchg
lret
ficompl
mov
or
or
cmc
sub
sub
imul
jge
xchg
dec
inc
mov
mov
xchg
jae
insb
adc
daa
addr16
jns
xchg
lock
out
jne
push
sbb
mov
push
mov
push
jmp
sbb
fldt
jne
pop
cmp
ret
fs
in
mov
enter
mov
rolb
sbb
jle
or
jno
mov
rolb
aad
sarl
mov
inc
inc
dec
inc
pop
test
test
mov
inc
stos
lods
adc
in
lods
xchg
mov
rcrb
stos
scas
inc
xor
mov
out
enter
and
int3
lret
mov
cmp
lret
pop
cmp
es
adc
roll
inc
mov
insb
cs
insb
inc
adc
setnp
lcall
jnp
icebp
dec
fstps
sub
fadds
pop
movsb
fisubrl
mov
fmull
xchg
push
test
test
mov
dec
mov
test
shrb
or
out
mov
fsub
dec
or
cwtl
jmp
or
push
xor
mov
mov
or
aas
jmp
pop
xchg
jge
std
int3
mov
aad
imul
hlt
add
mov
test
mov
and
push
mov
ret
sti
in
jnp
lods
bound
frstor
and
mov
push
xchg
lods
and
clc
cmp
mov
xchg
sahf
and
xor
xchg
xchg
lahf
jl
repz
out
pusha
sub
sbb
pop
in
dec
std
fistl
enter
fs
push
cmp
add
xor
int3
cmp
sub
dec
ret
cmpsb
mov
xor
dec
bound
fwait
mov
pop
sub
sub
rcrl
iret
or
xor
and
xor
mov
mov
adc
jl
add
leave
or
pop
mov
push
sar
das
or
sub
adc
jbe
add
inc
lret
jno
dec
push
xchg
cmp
fiadds
repz
clc
mov
fstl
pop
mov
xchg
xchg
push
inc
mov
pop
sbb
sbb
inc
shlb
and
jno
sbb
xchg
dec
sbb
or
lcall
lret
sub
roll
mov
lods
or
lret
dec
pusha
outsl
dec
les
sub
mov
cmp
fnstcw
fstp
lods
lret
xor
sub
in
les
in
mov
sub
movsl
push
in
pop
pop
pop
xchg
hlt
or
and
call
fdiv
negb
fcoml
push
jae
cmp
fsubrs
cmpsl
xor
jbe
sub
dec
std
sub
mov
fs
scas
or
mov
sbb
je
lahf
aaa
mov
push
push
sbb
je
fsubl
add
icebp
and
mov
data16
int
xchg
in
cs
pop
repz
gs
mov
and
jle
pop
cmp
imul
xchg
inc
pop
fists
lea
pushf
add
push
push
jl
xchg
mov
jb
shlb
lods
xchg
inc
ret
mov
test
adc
or
xorl
inc
add
in
fs
push
sbb
es
mov
std
dec
out
pushf
sub
scas
inc
mov
mov
jns,pt
dec
or
mov
sbb
mov
sbb
test
mov
lods
pop
sub
adc
cmp
aam
fcoml
aas
pop
push
lret
fwait
cs
fnstenv
mov
or
out
dec
push
imul
out
sti
rol
xchg
and
jecxz
push
stc
stos
testb
sub
dec
pop
clc
shrl
or
mov
pushf
cmp
jae
push
and
stc
pop
push
cmp
push
cmpsl
stos
cli
insb
mov
fdiv
jns
inc
jl
stc
popa
shl
pop
mov
rcll
lret
dec
push
mov
cmp
pushl
dec
mov
cmp
mov
fs
mov
repnz
repz
dec
jbe
icebp
dec
into
aam
sbb
daa
popa
inc
dec
push
ds
jo
orl
insb
test
repnz
outsl
orb
repz
sub
shll
fcompl
add
insb
daa
and
movsl
push
jbe
insb
out
mov
jecxz
adc
ficoms
das
ja
lea
sarl
xchg
pop
out
stc
push
push
sub
push
mov
pushf
and
fucom
jmp
or
xchg
repz
xchg
mov
push
jmp
xchg
xchg
sub
frstor
adc
fistps
hlt
cld
imul
iret
mov
pop
das
mov
jl
push
aam
enter
push
jae
mov
mov
cmpsl
bound
adc
cwtl
iret
push
sti
push
push
mov
mov
movhps
test
sub
sbb
dec
dec
ret
lods
mov
sbb
rolb
adc
mov
std
pop
pop
aam
push
xlat
stos
dec
add
es
jle
cmpsb
push
repz
out
mov
cld
jp
or
leave
rorb
mov
fisubrl
fcmovne
in
adc
stos
xor
loop
push
add
sub
sbb
sbbl
sbb
loopne
jle
xchg
in
clc
insl
fdivrl
cltd
sub
rcll
jbe
jnp
pop
movsl
ja
xorb
push
daa
das
fcoms
cmc
add
jno
mov
xchg
push
movsl
or
pop
loop
stc
ret
jno
sbb
popa
cmp
dec
push
xor
loope
jo,pn
stos
mov
push
add
pop
mov
loopne
lret
sbb
repz
mov
pop
data16
jecxz
out
popa
cmp
movsl
out
scas
add
xchg
fsubs
add
inc
dec
mov
push
push
fisttpll
sbb
dec
xor
jno
and
cmpsl
and
and
sub
dec
dec
shr
mov
into
psubq
pop
outsl
adc
xlat
jne
popf
jmp
lret
sub
lret
adc
sbb
mov
xchg
mov
mov
repz
rorl
jns
inc
es
ss
sbbb
sub
mov
aaa
add
push
jnp
xor
sub
xchg
pop
xor
fsts
icebp
lds
mov
lcall
xchg
push
inc
sahf
dec
dec
addl
test
call
mov
xchg
or
xchg
cmpb
fnstsw
dec
mov
int3
mov
mov
fdivrs
mov
pop
adcb
and
dec
int3
or
and
xchg
cld
popl
cltd
and
xchg
sbbb
popa
stos
sub
xor
faddl
lret
jno
xchg
sub
lods
int3
ja
mov
rclb
shl
or
cmp
add
or
fwait
push
lods
mov
push
jecxz
sbb
cs
xlat
xchg
inc
add
mov
sub
data16
aad
push
cmpsl
outsb
cmpsb
stos
fdivl
jecxz
jb
out
popf
pop
mov
xchg
jnp
in
cltd
jl
jbe
inc
push
in
scas
add
test
cld
cmp
lret
sub
cltd
cld
dec
adc
std
std
fidivrl
sub
cmc
pop
jne
outsb
stos
sbb
imul
rcrb
or
xchg
cmp
mov
mov
mov
das
xchg
xchg
sub
out
sbb
aas
into
sbb
cmpsb
arpl
lret
pop
cmp
inc
daa
sbb
mov
fsubs
mov
mov
sub
enter
add
stos
adcb
rolb
cltd
xchg
jmp
dec
add
sub
sbb
mov
inc
stos
sub
push
popf
inc
nop
dec
jns
lock
xchg
pop
pop
adc
mov
cmp
dec
insl
or
sub
movsl
outsl
popa
out
cmp
data16
jno
mov
mov
adc
xchg
and
pop
mov
sub
inc
cmp
inc
lret
rclb
int3
les
lahf
or
arpl
fadds
lcall
loope
dec
pusha
mov
push
mov
jae
jecxz
xor
jns
add
pop
mov
mov
arpl
das
xchg
and
dec
xchg
call
flds
iret
insl
or
add
cmp
notb
add
cmpsb
sahf
and
pop
adc
cmp
loope
sahf
push
test
inc
int
je
sub
jns
xor
bound
sbb
pop
adc
jbe
shlb
push
js
andl
cmp
loope
mov
add
aad
sbb
ja
mov
in
sbb
into
push
lea
add
aam
xchg
inc
dec
adc
push
add
pop
lret
shr
incb
or
mov
std
jo
add
lret
jnp
ljmp
shl
xchg
dec
pop
jae
xchg
push
cmp
or
sub
loopne,pt
aas
adcl
out
mov
cmp
popa
insl
dec
cmp
xor
aas
adc
loopne
sbb
fs
mov
add
test
mov
stos
aaa
pause
mov
inc
mov
popa
fcmovbe
fmulp
mov
shll
clc
movsl
je
nop
jnp
adc
popa
out
pop
cmp
adc
movsb
mov
nop
imul
pop
pop
add
adc
imul
jbe
xor
or
xor
stc
dec
xor
sbbl
cmp
pop
or
andb
ds
xchg
sub
and
iret
jb
fldl
mov
xor
aad
xor
push
into
dec
sbb
aaa
fldl
into
shlb
mov
pop
out
aas
cmpsb
push
or
xlat
xchg
sub
dec
rcrb
addb
out
pop
cmp
mov
lods
add
fdivs
rcrb
push
repz
inc
lods
jns
add
xor
lret
mov
sbb
dec
and
jnp
movsl
jae
stos
aam
js
sbb
cltd
jp
lods
cmpsl
mov
cltd
hlt
mov
xchg
je
popa
sbb
jl
mov
mov
lret
arpl
outsl
lock
xchg
push
int3
les
cli
std
fucompp
cmp
inc
xor
xor
nop
add
adc
arpl
mov
ret
cmpsb
cmp
mov
pop
and
mov
sbb
jmp
cwtl
mov
pop
and
add
or
jo
adc
leave
and
jl
dec
aam
in
bound
jb
inc
fnstcw
cmp
cmp
mov
dec
or
mov
pop
aaa
pop
je
xchg
mov
or
or
test
pop
pop
jp
sbb
or
ljmp
and
adc
and
xchg
and
dec
dec
int
mov
jae
dec
ss
shll
into
lcall
inc
and
xchg
push
fldt
sub
das
loopne
pop
lock
or
imul
cmp
lcall
sub
push
xor
add
repz
adc
inc
or
pop
sbbb
loope,pn
clc
aam
push
call
les
loopne
cmpsb
adc
push
mov
cmp
jnp
push
mulb
dec
push
out
int
std
mov
rcrb
icebp
lods
or
push
pop
mov
and
js
std
addl
loop
jbe
mov
iret
ljmp
mov
test
into
movsl
decb
sbb
hlt
lds
xchg
or
sbb
inc
sarl
enter
lahf
sarb
push
ljmp
jmp
lahf
divb
push
loop
jns
adc
adc
and
je
les
test
scas
or
push
data16
jno
dec
roll
xchg
pop
insb
decb
int3
adc
push
pushf
mov
fnstsw
sti
into
push
xor
test
lea
push
dec
jo
aam
fildl
xor
ja
testl
push
cli
movsl
aam
les
xor
pop
test
jbe
pop
dec
mov
dec
inc
arpl
sbb
push
mov
dec
aas
pop
shl
nop
sar
sbb
jns
std
push
jl
mov
sahf
imul
jae
xchg
shlb
cltd
mov
push
mov
jl
and
xchg
and
inc
jo
xchg
inc
sbb
jle
sti
pusha
sub
xlat
add
sub
mov
aaa
sahf
jb
repz
in
push
xchg
mov
mov
mov
popfw
pop
mov
pop
imul
loope
out
fcomps
mov
out
sub
leave
divl
sbb
in
cmpsl
mov
sub
insb
xor
sub
inc
cmpsb
mov
out
mov
loope
cli
nop
lret
shrb
sahf
xor
fs
push
out
inc
test
in
lret
clc
jl
insb
pop
xor
mov
sbb
ds
ret
xor
pop
frstor
mov
push
pushl
imul
outsl
jns
xor
jge
mov
fcmovbe
rcrl
mov
push
out
mulb
jns
xchg
inc
gs
int3
stc
push
test
xor
jg
lock
ret
rcl
into
mov
pop
jmp
dec
test
xor
test
jmp
lock
fwait
push
cmc
inc
pop
inc
jno
mov
dec
movsl
dec
jns
scas
stos
sbb
scas
sbb
stc
fldl
out
ljmp
call
inc
mov
or
cmpl
or
shll
push
jp
add
mov
jae
push
pop
mov
or
das
sahf
pop
lret
aaa
xor
pop
pop
lock
dec
shll
jl
inc
sbb
jns
ds
shr
cmp
mov
imul
pop
ret
cld
addb
jo
insl
ret
jno
bound
jle
xor
out
cmp
cli
mov
fnsave
cwtl
and
lods
sub
shl
dec
cmovo
lret
pop
push
mov
fcmovnb
mov
scas
fadds
mov
push
add
sbb
sub
mov
push
mov
pushf
nop
adc
andb
mov
mov
cmp
dec
xor
jg
pop
xor
inc
fbld
cmp
repnz
notl
repz
inc
cmc
push
sub
xchg
adc
in
leave
mov
sbb
xor
gs
jge
jge
cld
rol
and
pop
test
enter
mov
mov
push
icebp
test
jbe
pop
out
mov
insb
cmp
sahf
inc
xor
je
add
in
iret
loop
cwtl
pusha
adc
dec
pop
sbb
in
pop
pop
dec
and
lcall
dec
add
cltd
aam
sbb
sub
xchg
les
test
push
enter
mov
dec
mov
mov
loope
inc
mov
mov
in
and
dec
dec
ds
mov
insb
lods
mov
and
cmp
scas
in
in
imull
push
adc
fcmovb
clc
aad
cmpsl
push
lcall
popf
inc
sub
fwait
xchg
outsl
es
jl
stc
aam
sub
xor
movsl
dec
sub
repz
mov
mov
loopne
inc
mov
xor
pop
adc
adc
and
push
cmpsl
adc
cld
or
xchg
int3
in
aam
std
repz
dec
or
test
mov
dec
mov
mov
insl
lds
out
adc
loope
scas
mov
push
jbe
sub
xchg
mov
fisttpll
push
jo
daa
fmul
add
cs
jb
mov
mov
sbb
inc
dec
lret
stos
add
popa
mov
sti
xorl
icebp
data16
xchg
jp
and
into
pusha
xchg
test
and
adc
mov
inc
test
aas
cmp
shlb
idiv
or
stos
scas
popf
jmp
mov
out
sbb
mov
jb
les
shr
imul
mov
or
jge
shrl
stc
hlt
cmpsl
orb
repz
nop
repnz
xor
out
xchg
outsl
cmp
sub
cmp
jg
sub
and
scas
shll
test
inc
cmp
imul
sbb
fwait
idiv
or
enter
cmp
fstpt
sti
insb
inc
fisubl
movsl
jl
xchg
ja
xchg
lea
add
mov
push
mull
fdivrl
andl
idivl
push
addr16
sbb
lock
pop
dec
scas
bnd
adc
pop
pop
push
xor
pop
test
push
cmp
mov
push
jle
jb
std
test
mov
ljmp
loope
mov
inc
repz
dec
inc
dec
movsb
jno
dec
in
xchg
push
and
mov
push
or
jb
call
aaa
je
addl
jae
and
in
mov
enter
sahf
sahf
pop
lds
std
lret
pop
mov
push
and
sti
mov
mov
jmp
insb
cmpsl
mov
mov
xorb
jecxz
xchg
and
adc
sbb
repz
mov
jecxz
shll
dec
xor
imul
pop
movsl
adc
inc
leave
push
out
inc
iret
negl
pop
jmp
mov
xchg
inc
adc
inc
dec
call
sub
sub
push
xchg
jnp
out
fildl
inc
inc
cmp
imul
or
add
inc
push
shlb
inc
push
std
scas
arpl
mov
repnz
movsb
xlat
pop
cmp
stos
xchg
xor
jnp
mov
xor
push
and
addr16
xor
push
jb
cmp
mov
ret
pop
add
xchg
dec
xor
arpl
and
and
addb
sub
loopne
loope
sub
xor
in
bound
xchg
adc
sub
in
mov
mov
lret
imul
lods
fcoms
push
ljmp
in
mov
mov
jmp
xchg
movsb
xchg
cld
ret
lcall
dec
outsl
push
cmpsl
dec
xchg
jo
js
daa
mov
daa
lret
jbe
jns
sub
jno
sti
out
int
adc
cmp
stos
inc
dec
out
int
test
insl
mov
xchg
leave
adc
push
mov
add
mov
cmpsb
jne
scas
es
js
push
pushf
adc
popa
jecxz
loope
mov
scas
jbe
ja,pn
test
rorl
scas
subl
sub
clc
sub
cmp
push
stos
dec
and
cmp
inc
push
enter
lret
addr16
add
popf
sbb
cmp
mov
jl
popf
mov
in
xor
mov
jb
stc
sbb
std
push
adc
ret
rol
and
mov
push
in
mov
fs
mov
or
out
and
xchg
pop
sub
lods
std
mov
sub
push
out
or
fcompl
jecxz
mov
xchg
in
icebp
sar
xchg
fnsave
js
adc
jecxz
add
dec
xor
jbe
xchg
stos
ljmp
and
pop
sbb
int3
pop
push
repnz
pushf
jecxz
add
fdivs
or
pushf
out
push
sub
fsts
inc
cs
cs
int3
mov
repnz
ret
frstor
cmpsl
push
dec
sbb
pop
jnp
cmpb
xchg
mov
inc
xorb
or
jg
and
mov
and
mov
ret
mov
fidivs
push
xor
incb
xchg
add
movsb
mov
mov
nop
cmp
les
pop
mov
add
dec
jnp
loop
xor
push
into
incb
pop
mov
mov
inc
push
out
xchg
mov
popf
pop
sti
add
pop
cmp
daa
sub
repz
sbb
mov
bound
fmulp
dec
push
mov
mov
aas
pop
inc
add
sti
mov
dec
loopne
adc
push
jns
jle
adc
fs
cmp
inc
and
xor
push
jle
mov
add
push
add
in
xor
pop
out
pushf
in
push
arpl
mov
bound
sbb
into
inc
subl
int3
int3
mov
mov
stos
push
stos
aaa
dec
cmp
je
into
loopne
push
jne
fs
shlb
add
pop
add
cltd
pop
sub
ss
leave
mov
lock
pop
imul
cltd
lahf
pop
xor
jnp
push
test
dec
sarb
pop
stos
add
sbb
xchg
mov
xrelease
repnz
xchg
popa
ds
mov
ret
sbb
cli
stos
mov
adc
or
mov
outsl
idivb
pop
xchg
stc
push
dec
aaa
in
pop
jle
pop
shlb
ds
scas
dec
xlat
aam
inc
jle
stos
lea
ljmp
dec
jno
in
pop
add
xor
mov
ret
in
cltd
imul
mov
xor
adc
xchg
stos
cmc
lea
scas
out
or
xor
out
fiadds
iret
int
and
popf
das
fiadds
in
sbb
aad
jo
and
dec
sbb
lods
mov
repz
xor
sub
add
or
inc
inc
mov
inc
mov
cli
shrb
call
jne
pop
jnp
push
mov
xor
inc
cmp
test
icebp
sbb
sbb
rorl
icebp
mov
rolb
inc
in
sbb
sbb
xchg
faddp
fcoml
test
add
add
push
rcrl
lahf
je
in
xchg
mov
dec
inc
jno
or
repz
mov
xlat
out
out
sti
xor
or
pop
xchg
mov
pop
inc
sbb
cmp
jbe
push
push
div
invd
cli
mov
cli
jl
inc
les
lret
inc
test
call
push
jns
pop
inc
scas
xor
jnp
loop
fwait
scas
xchg
pushf
cmp
inc
sub
stos
xchg
into
cmp
and
cmp
stos
xor
cmp
pusha
and
pop
dec
rcll
das
jg
push
mov
shl
aam
push
mov
call
or
bound
and
adc
fnstenv
and
mov
scas
dec
lock
out
daa
loop
xchg
mov
xchg
or
sahf
inc
push
cmpsl
dec
sbb
hlt
inc
pushf
mov
mov
push
xchg
push
nop
cld
push
jbe
jae
popa
loope
shl
jmp
imul
hlt
mov
mov
shl
cmp
push
dec
adc
stos
test
lret
sub
out
sbb
adc
mov
leave
add
push
and
add
and
fimuls
es
jl
or
lret
mov
stc
cs
xchg
jmp
into
push
aas
fs
and
lahf
mov
push
pushf
cmpsb
test
ljmp
xchg
call
and
aas
sbbl
push
add
and
ds
lcall
test
xchg
and
shrl
dec
add
enter
cs
mov
inc
cmpsb
cmp
cmpsb
and
movsl
test
and
adc
mov
push
ret
and
sub
test
adc
xchg
cmp
outsb
fistpl
sbb
cmc
lret
aas
stos
add
jns
mov
xor
or
xchg
lods
ljmp
insl
sub
sbb
cwtl
out
adc
aam
jne
sahf
rcrl
loope
push
enter
aaa
cltd
inc
sbb
push
push
xchg
push
sti
andl
mov
jp
lahf
out
and
mov
je
mov
aaa
sbb
pop
scas
sbb
pop
push
dec
cmp
mov
out
mov
jge
lcall
cmp
das
mov
push
lock
mov
insb
mov
fdivl
push
and
cmp
mov
mov
mov
enter
or
inc
inc
movl
jl
sbb
dec
stos
cwtl
jo
jmp
sub
lea
mov
mov
mov
jns
stc
lods
xor
cmpsl
pop
push
loopne
jp
das
bnd
nop
inc
fldenv
dec
ret
cmpsb
push
inc
push
push
es
je
mov
gs
lahf
aaa
lods
gs
imul
test
pop
ret
pop
mov
rorl
popf
xor
sti
inc
das
dec
daa
out
mov
stc
cmpsl
iret
insl
mov
push
aaa
jge
lahf
pop
xchg
sti
dec
aad
pop
outsb
loope
mov
xor
jle
roll
scas
inc
fldlg2
shl
push
mov
mov
aam
rcll
mov
push
fldenv
sub
aaa
cmp
icebp
push
pop
or
repz
xor
jbe
pop
jle
cld
jbe
loop
or
stc
outsb
cmp
push
sub
or
mov
call
out
sarb
cmp
sbbl
mov
sub
mov
adc
pusha
pop
xchg
lahf
push
sahf
call
in
cmp
ret
dec
cmp
fmull
dec
mov
mov
push
aam
aam
lea
xchg
popf
jge
bound
les
jge
mov
jecxz
jb
and
dec
lods
mov
repnz
out
sub
and
fisubl
inc
and
dec
cmpsl
addr16
addr16
stc
cmp
cmp
and
mov
inc
loopne
mov
ja
fstl
pushf
lret
xchg
cs
scas
dec
cli
or
push
mov
fwait
xor
movsl
xor
pop
je
add
shll
out
or
pop
je
lret
and
sub
cwtl
testl
sub
dec
pop
cmp
cmpb
xchg
dec
adc
movsl
shlb
jmp
divl
mov
aas
push
call
popf
xor
and
sbb
sbb
jnp
dec
test
movsb
daa
jp
xchg
mov
jbe
cmpsl
inc
xchg
push
inc
sbb
adc
mov
ss
repz
or
insb
jo
lahf
jecxz
pusha
adc
sbb
repnz
xor
in
jne
push
push
dec
mov
cltd
xchg
iret
out
adcb
fmuls
shrb
ja
adc
inc
xor
mov
cmc
mov
leave
jno
lods
xchg
cld
cmp
stos
in
cmpsb
loope
clc
sbbl
cmp
fmul
stc
jp
cmpsl
fstps
inc
je
insb
mov
insb
pop
in
clc
sbb
ja
jo
mov
mov
push
xchg
into
gs
adc
and
outsl
pushf
test
add
arpl
xchg
inc
loop
lds
stc
push
adcl
in
out
sbb
add
shrl
stos
mov
push
arpl
pop
aam
xor
mov
jbe
call
stos
lret
mov
aaa
xor
movb
aaa
cld
rcrb
push
jl
push
and
mov
loop
or
cmp
push
or
out
clc
or
lds
xchg
add
out
add
stos
popa
pop
stos
push
sbb
aam
repnz
or
call
sbb
cmp
cld
aas
xor
insl
jp
ds
jp
loop
pop
int
adc
pop
sbb
adc
iret
nop
gs
clc
jae
inc
add
dec
sub
js
cmpsb
cmpsb
xor
sti
dec
or
mov
dec
sbb
pop
jne
xor
xchg
sarb
ret
push
lcall
pop
push
out
in
les
cmc
imul
and
mov
jmp
in
fisubrl
xor
out
insl
loope
mov
push
popf
fimuls
dec
mov
sarl
mov
push
loope
pop
push
sub
cmp
xchg
or
push
das
xchg
stc
outsb
fbld
popf
int
shrb
and
sub
pusha
jnp
push
push
dec
or
mov
js
mov
push
fadds
mov
pop
xlat
mov
and
push
add
mov
cwtl
das
pop
sub
inc
adc
inc
push
cltd
mov
cli
mov
out
cmp
subl
mov
shll
push
pop
inc
out
adc
sbb
pop
int
and
pushf
pop
enter
and
add
jle
fcmovu
mov
sbb
push
mov
sahf
je
outsb
jg
and
xchg
out
js
push
sbb
xor
mov
xor
lds
sub
pop
outsl
dec
dec
push
je
popa
push
pushf
scas
mov
add
jae
pop
je
adc
sbb
sbb
sbb
pop
xor
enter
push
or
fidivl
in
sbb
mov
xchg
das
or
rclb
or
xchg
aad
aas
decb
inc
jno
push
rcr
sub
cltd
jae
sub
and
fldt
fcmovbe
push
inc
lods
jmp
xchg
jmp
and
mov
inc
pop
inc
int
jmp
push
push
adc
call
stos
mov
inc
mov
pusha
push
and
sbb
cmp
pop
addr16
or
shlb
or
lret
adcb
fwait
inc
pop
push
aam
pop
xorb
or
mov
xchg
jns
xchg
std
jp
test
shrl
int3
dec
jno
pop
add
mov
loop
cmp
push
movsb
repz
jo
fstpl
xlat
xor
lcall
jg
push
push
jbe
repz
mov
xor
add
test
xchg
inc
int
popa
xchg
cmp
dec
push
icebp
cmc
popa
and
jge
mov
inc
loop
mov
inc
inc
mov
sarl
push
frstor
rorl
mov
pop
gs
fdivs
mov
pop
lods
dec
jae
pop
mov
dec
test
in
xchg
icebp
xchg
pop
adc
pop
cmp
cmc
call
clc
fisttpl
repnz
mov
sbb
inc
mov
dec
dec
sub
rorb
push
xor
mov
mov
lea
inc
jmp
loop
dec
stos
and
jle
pop
enter
and
outsb
idivb
fistps
insl
jne
add
push
sbb
pop
add
lret
lret
inc
push
sbb
mov
ret
sub
xchg
fwait
push
movsl
decl
aam
aas
sarb
xchg
jae
inc
repz
xchg
mov
orb
nop
aaa
enter
cmpsb
fcoms
stos
mov
int3
pop
adc
sub
mov
sbb
dec
xlat
sub
jg
cmp
sub
fnstsw
cli
loope
jnp
mov
in
subl
shlb
fwait
sbb
in
sbb
es
loop
test
in
test
cwtl
das
popa
leave
jbe
jne
sbb
dec
push
movsb
pop
mov
xchg
push
inc
cmp
pop
clc
cmp
inc
and
and
stc
adc
outsl
mov
decl
mov
int3
mov
add
sub
push
subl
out
jecxz
mov
mov
les
lea
sti
ret
mov
add
xor
xchg
idivl
das
hlt
repnz
aad
fsts
mov
adc
adcb
cmc
movb
lret
push
mov
sti
pop
xor
jecxz
adc
inc
nop
mov
xchg
shlb
cld
xchg
jmp
aas
inc
in
lret
sub
mov
sbbl
repz
fwait
loop
mov
ss
ret
sub
mov
push
mov
add
and
cmp
jp
or
ja
dec
dec
xor
xor
hlt
testl
clc
stos
mov
mov
fldl
out
std
sbb
xchg
jmp
dec
in
or
out
fisubrs
cmp
cli
xlat
xlat
dec
push
in
ret
das
iret
fidivs
xchg
sti
call
mov
fnstcw
scas
sbb
adc
mov
fnsave
shl
mov
test
jge
dec
cmp
cld
jmp
ret
scas
or
test
rcr
test
mov
mov
fstps
or
pop
je
cmc
int3
and
dec
in
cmp
pop
js
dec
pop
lahf
xchg
into
push
mov
sbb
addr16
inc
xor
mov
mov
stos
jge
xchg
cmp
ss
or
pop
mov
pop
xor
repnz
clc
sub
std
lcall
js
adc
jl
cli
jge
pop
mov
cmpsb
adc
vmwrite
subl
mov
movsl
rcl
test
out
or
fistl
sarl
arpl
inc
sub
cwtl
pop
xchg
and
cwtl
cmp
cmpsb
dec
pusha
lods
fldl
pop
lret
push
pop
mov
xor
xor
les
std
sbb
pushf
fistpl
sbb
inc
js
lods
mov
lea
jb
lea
xor
mov
jecxz
and
mov
fs
fdiv
push
cld
fidivl
shll
outsb
shl
shrl
ja
mov
push
orl
pusha
rcl
and
pop
lds
dec
inc
push
in
inc
rcll
mov
xor
enter
addr16
iret
xorl
cmc
in
mov
or
and
nop
not
inc
ret
flds
bound
inc
mov
mov
mov
pop
and
sbb
repz
imul
and
test
sbb
push
pop
sti
sti
scas
sti
jg
jg
xchg
add
test
sub
jl
js
mov
cmp
aad
xchg
aad
adc
dec
scas
mov
xor
jnp
ret
popf
clc
sti
lret
pop
inc
jae
push
scas
je
jns
int3
test
or
jle
fs
rcrl
int
xchg
cmp
je
in
pop
and
in
jg
cwtl
mov
loopne
mov
loope
adc
lds
or
sub
jle
jbe
loopne
dec
inc
push
mov
adc
rorl
inc
icebp
mov
rolb
push
or
in
add
in
and
jne
decl
mov
inc
popa
stos
lods
dec
mov
and
dec
adc
push
and
imul
int
and
in
imul
sbb
xor
jnp
daa
inc
loope
sbb
mov
xor
ret
cmp
sub
mov
fiaddl
dec
xchg
scas
inc
stos
push
negl
adc
sub
add
stos
shl
cmp
nop
mov
jl
dec
push
xchg
fwait
push
fcmovb
mov
mov
mov
mov
mov
subb
mov
or
mov
sub
adc
pop
jl
stc
cwtl
shlb
pop
daa
sub
loop
outsl
imul
jns
mov
dec
and
pop
pop
mov
daa
cmp
pop
push
fwait
clc
mov
mov
push
leave
fsubrs
lock
push
idivl
mov
push
mov
ljmp
cmpsl
mov
test
mov
mov
fldl
mov
inc
lds
lcall
loope
sar
test
lds
enter
add
call
lods
imul
imul
jne
inc
das
popa
or
jle
ret
sub
insl
jp
jb
bound
xor
in
mov
faddl
and
cwtl
xor
mov
mov
sbb
dec
or
loope
das
inc
mov
and
test
in
mov
and
cmp
jbe
iret
and
ret
push
cli
jecxz
mov
push
mov
ret
adc
cmp
inc
aam
or
cli
xor
ss
fistpll
vaddsd
dec
sbb
cmp
sbb
fists
xchg
sbb
out
xchg
sti
xor
adc
inc
sbb
xchg
mov
out
jl
or
push
mov
std
mov
imul
mov
sbb
jne
dec
lcall
lcall
add
gs
rcrb
pop
fcoml
hlt
cmp
jno
xchg
dec
stc
jne
cmp
sub
and
and
mov
insb
mov
daa
out
jae
or
sbb
push
out
lods
cmp
cli
js
add
frstor
xor
cmp
and
jp
out
into
sahf
inc
xlat
dec
pushf
movsb
nop
or
xor
jne
pusha
loop
mov
or
push
adc
outsb
cmc
sbb
push
and
or
push
hlt
test
mov
ja
push
inc
inc
icebp
mov
pop
inc
push
adc
dec
mov
jbe
daa
push
imul
xchg
sub
leave
enter
lcall
mov
rcrb
scas
in
lcall
lret
jmp
mov
fdivs
popa
jne
push
dec
lahf
scas
mov
mov
cmp
mov
mov
sub
jno
out
stos
mov
gs
xor
push
xor
into
ds
or
and
cmova
les
inc
scas
int3
neg
dec
sbb
les
loopne,pt
ja
or
pop
and
lcall
jns
xchg
cmp
push
mov
dec
jns
mov
orb
ljmp
sub
dec
mov
sub
or
sti
aad
fcoms
jb
cmc
iret
scas
fcmovnu
insb
movsl
adc
pop
sbb
xor
js
ja
imul
dec
or
or
dec
pop
lods
pop
repnz
cmpsb
or
jmp
lds
scas
test
in
mov
addr16
xchg
aaa
mov
shr
repnz
sarl
fisubl
lock
mov
into
fisubrs
out
push
mov
sub
sarb
and
dec
mov
mov
lock
fistpl
fs
cmp
xchg
push
pop
xor
push
mov
push
push
sbb
lock
leave
push
mov
inc
inc
aas
cmp
cli
sarl
and
lahf
jge
push
cmc
mov
loop
lahf
pop
inc
push
push
mov
or
ss
xchg
jae
sub
das
js
cmc
pop
cmp
in
cmp
adc
repz
xlat
pushf
imul
mov
jp
and
mov
sub
mov
push
pushl
adc
fstp
push
and
push
incl
in
jmp
lods
movsl
xor
fs
leave
xchg
imul
in
fists
loope
xor
fcomi
in
jl
rcr
mov
js
fs
mov
repz
add
in
push
mov
inc
adc
mov
cmp
loope
in
popf
or
in
jno
pop
insl
test
cli
jne
xchg
push
xchg
sbb
pop
mov
out
or
pop
cmpsb
mov
cld
call
jno
sub
sar
jp
adc
into
adc
adc
shlb
adc
jb
sbb
stc
fsub
int3
mov
mov
xor
pop
inc
cmp
test
pop
xor
cmp
sbb
loop
out
iret
jb
mov
mov
jle
adc
jge
scas
inc
sub
adc
mov
lahf
mov
aaa
aad
mov
lret
fistpll
add
or
xor
mov
adc
leave
dec
or
mov
fcmovnu
out
push
dec
xchg
lahf
test
js
cld
imul
mov
xor
stc
rcll
mov
lcall
fcomps
mov
push
mov
ds
adc
lcall
clc
sbb
pop
enter
xor
popa
in
gs
shr
adc
add
xchg
scas
push
shll
fwait
cmp
sbb
sub
fcompl
aaa
jno
pop
add
insl
xchg
xor
ds
adcb
xlat
cmp
or
sahf
inc
mov
push
xor
scas
sub
add
mov
push
mov
stos
sbb
or
mov
into
mov
mov
mov
sbb
shl
ja
mov
sbb
mov
push
ja
aaa
jmp
shl
in
lock
dec
stos
ja
mov
fstpt
leave
push
or
cmp
imul
mov
test
jae
lahf
jmp
mov
movsb
stos
pop
inc
sub
inc
aam
lods
mov
pop
mov
rsm
cli
out
adc
lret
pop
popf
shrb
pop
dec
bound
sbb
cmpb
push
sub
dec
inc
in
jge
popa
aam
mov
inc
jle
int3
dec
mov
mov
aam
and
aaa
aas
mov
ffree
pop
div
enter
movsb
xor
mov
sti
jge
test
fdivrs
pop
inc
bound
fs
adc
shrl
out
xor
std
inc
mov
pop
negb
xor
loop
cltd
popf
and
dec
hlt
mov
iret
xor
cmp
bound
scas
dec
inc
loop
lods
mov
mov
xor
pusha
fs
xchg
push
mov
loop
sub
subl
push
pop
stc
mov
and
xor
test
xchg
inc
hlt
call
fcmovbe
lcall
cltd
ret
sbb
cmp
inc
mov
ja
and
adc
cmc
out
stc
add
test
adc
insb
jecxz
leave
outsb
fsubrl
sub
xchg
gs
rol
stos
fildl
xchg
mov
push
mov
cmp
lods
dec
insl
mov
pop
push
or
lret
loopne
aaa
push
add
sbb
jg
test
mov
mov
ret
xlat
imulb
stos
lods
mov
repnz
dec
testl
xor
stc
out
test
leave
sbb
inc
fs
icebp
xor
pop
sbb
les
mov
mov
aas
mov
xlat
dec
outsl
aas
add
push
cmp
mov
daa
jo
call
ret
aam
pop
sub
adcb
fstl
aaa
sub
push
xchg
sahf
and
cld
mov
dec
int3
jne
jae
scas
sub
daa
xchg
out
sbb
mov
mov
mov
lds
pusha
stos
dec
mov
dec
out
push
lea
clc
dec
les
scas
popf
ror
outsl
cli
and
filds
ljmp
xor
pop
sub
lds
push
ret
jle
pop
lret
rolb
mov
and
or
sbb
xchg
inc
xchg
cmp
mov
pop
icebp
xchg
or
sub
andl
stos
sti
cmp
pusha
cmp
ss
rcrw
fistpl
mov
subb
mov
cltd
daa
mov
or
jmp
pop
stos
enter
mov
rorb
dec
ret
jo
mov
pop
lea
inc
addl
dec
pop
pushf
sbb
jne
enter
cmc
stos
lahf
out
cld
jmp
pop
jl
lods
xor
movsl
lahf
push
mov
arpl
mov
fsubr
imul
leave
neg
xlat
cld
and
stos
sub
pop
mov
pop
pop
les
int3
cs
xchg
lds
mov
pushf
scas
mov
xchg
in
push
jecxz
cmp
fstpt
out
outsl
mov
mov
popf
in
inc
add
repz
es
stos
jbe
js
fdivrs
or
cmp
sbb
in
fwait
xor
push
jecxz
lret
pop
stos
popf
sti
addr16
arpl
pop
rorb
insb
sub
pop
sub
add
and
dec
and
xor
pushf
pop
lock
out
js
push
xchg
or
jmp
leave
adc
push
pop
leave
bound
pop
call
mov
insl
into
dec
jns
lea
imul
push
jb
stc
sbb
hlt
xor
mov
je
inc
lock
es
sahf
mov
enter
ljmp
mov
ret
clc
mov
rorl
pop
stos
call
mov
or
jg
adc
xor
pop
push
push
sbb
dec
or
mov
ja
sub
xchg
fisubrl
xchg
lds
xchg
adc
lods
addr16
push
inc
mov
inc
cmp
stc
inc
mov
adc
adc
mov
mov
or
xor
jle
out
dec
and
mov
ja
scas
dec
jo
stos
mov
xchg
stos
jnp
clc
sti
xchg
dec
and
imul
mov
fmull
insl
loope
loop
sbb
push
add
mov
pop
xchg
cwtl
sbb
dec
fadd
out
add
cmpsl
mov
jnp
imul
rclb
mov
xor
nop
mov
cmp
ss
icebp
and
cwtl
mov
mov
popf
int
subb
pop
add
test
filds
aad
rcll
lds
mov
push
aad
pop
fmuls
push
push
and
bound
cmc
add
out
dec
mull
adc
iret
jmp
hlt
mov
push
jmp
fwait
xor
subl
mov
imul
sbb
inc
int
fs
gs
and
sub
jnp
cmp
ljmp
mov
enter
mov
add
push
xor
push
or
std
sbb
adc
lock
jo
jae
push
imull
sbb
mov
pusha
sbb
mov
sbb
aam
retw
sub
add
jmp
push
inc
pop
pop
add
jg
out
and
nop
pop
mov
mov
pop
jmp
nop
and
xor
add
scas
repz
mov
sub
sub
cmpsb
stos
jo
cmp
ljmp
cmp
aas
adc
in
xchg
mov
stos
test
out
cmp
sub
mov
addr16
rcl
hlt
addb
sbb
sbb
xor
mov
sti
xor
and
jmp
aas
or
mov
ja
fwait
mov
mov
ret
xor
adc
fisubs
mov
pop
xor
shlb
jb
lock
popf
sbb
cmpsl
cwtl
outsb
mov
sub
mov
xchg
int3
lret
out
loop
popa
es
sbb
rclb
pop
inc
add
cmpsl
inc
mov
incl
inc
sub
negl
adc
mov
sbb
into
cmpsl
mov
imul
adc
or
sub
fcoms
fs
jae
rclb
lods
push
cld
dec
imul
mov
jae
aad
notb
or
daa
push
push
pop
notb
js
iret
sbb
repz
or
fbld
adc
add
push
sub
ljmp
loopne
ret
or
adc
lea
lds
test
ss
pushf
xor
pop
mov
cmpl
and
inc
pop
xchg
sbb
cmp
xor
ss
jecxz
mov
pusha
or
ret
jp
popf
xchg
arpl
push
cmp
jne
enter
add
mov
in
or
add
pop
aad
push
mov
mov
jb
cli
clc
inc
fisubrs
mov
hlt
cwtl
mov
sub
aad
lahf
xlat
pushf
stos
push
xchg
jae
movsb
mov
mov
movsb
out
xchg
jg
test
xor
test
fs
push
or
inc
lret
push
and
sar
movsb
fwait
aas
syscall
inc
mov
jge
sahf
add
scas
mov
pop
mov
jmp
je
sti
push
iret
jae
inc
push
popf
mov
lcall
out
xor
sbb
popa
stc
cwtl
xor
dec
stos
testl
aad
adc
pop
pop
mov
lds
mov
jns
jne
xchg
pop
test
or
int3
test
cs
les
mov
stc
push
mov
hlt
ret
jo
int3
pop
sarb
push
push
cld
push
mov
push
jg
sbb
or
in
pop
popf
jbe
hlt
leave
sbb
cs
mov
lret
jg
ljmp
inc
and
push
shrl
sbb
pop
cmpsb
mov
pop
outsb
daa
fdiv
xchg
xor
les
or
insb
dec
dec
cmp
push
or
shrb
dec
in
or
jb
jns
inc
push
jno
mov
cmpsl
push
xor
jae
dec
stos
mov
mov
addl
inc
shr
add
cwtl
pop
clc
fimull
ja
xchg
fnstcw
push
loop
xchg
popf
clc
insb
gs
hlt
adc
xor
or
adc
andl
mov
sub
mov
jmp
jle
sbb
and
cmp
outsl
add
jmp
fmull
or
les
dec
jmp
add
mov
xchg
sbb
add
fs
rorb
mov
xchg
jle
mov
push
cmc
or
mov
cmpsb
and
jmp
jge
int3
jns
int3
sub
loopne
test
idiv
cmp
imul
push
xor
mov
jns
inc
cmpsb
loope
dec
mov
xchg
cmpsl
cmp
sbb
mov
outsl
push
pop
out
adcl
arpl
jl
js
or
mov
fldt
cld
inc
dec
push
xchg
add
mov
movsl
add
flds
in
fcoml
loop
add
shrb
xorps
or
aam
pop
cmpsl
mov
je
fwait
shll
push
aam
fbstp
insl
int3
insl
adc
out
testb
repz
mov
push
fwait
inc
push
loop
jbe
xor
adc
pop
sti
ret
in
lret
add
fmull
lock
mov
and
or
fisttps
int3
mov
nop
add
jo
inc
mov
push
or
push
adc
outsb
and
dec
mov
pop
out
addl
lds
clc
in
subb
pop
pushf
test
xchg
xchg
lock
fbstp
aam
cmpsl
iret
lds
adc
decl
popa
out
add
or
mov
jo
xchg
cld
ret
icebp
push
mov
inc
daa
into
dec
or
mov
enter
xorb
pop
mov
leave
sub
les
cwtl
lock
iret
out
in
aas
es
inc
lods
jmp
adc
adc
ret
push
pop
shlb
inc
dec
pop
dec
inc
in
pop
ret
sbb
mov
xchg
rcrb
mov
xor
mov
ss
push
test
mov
dec
ds
mov
lcall
mov
cwtl
xchg
es
push
sbb
shrb
push
ret
push
pop
neg
pop
xchg
setl
sti
xchg
pop
lock
xlat
push
mov
add
loop
add
mov
and
or
ret
dec
or
pop
xchg
xor
mov
sti
jl
jb
lods
ja,pt
xchg
stos
adc
push
rcll
fisubrs
lret
mov
lahf
add
enter
push
jnp
dec
icebp
push
cs
mov
addr16
das
jae
jecxz
mov
pop
adc
adc
scas
sub
inc
insl
cs
js
aad
nop
add
out
sub
mov
cmp
popa
sti
fildl
aam
test
sub
inc
addb
scas
lods
shrb
shl
push
cmp
popf
leave
ljmp
jge
test
sbb
arpl
inc
sbb
shll
lds
mov
loop
push
xor
mov
pop
dec
arpl
lea
mov
and
or
push
outsl
mov
push
lods
rcrb
add
ss
popa
push
scas
in
inc
scas
cld
sbb
cltd
sbb
dec
jbe
in
lds
adc
cwtl
cmp
xchg
mov
pop
push
lea
movsb
je
lret
push
sbb
and
jle
idivl
pop
aas
aas
loope
nop
out
adc
sbb
push
cmp
lret
dec
sbb
mov
dec
inc
jl
push
jge
push
adc
adc
cwtl
stos
cmpsb
loope
and
mov
insl
dec
pop
pop
sbb
aaa
push
pop
sub
sbb
mov
jg
push
sub
pusha
ret
mov
or
enter
dec
pop
arpl
cmp
sub
mov
movsl
or
addr16
out
icebp
sbb
lods
jbe
dec
xor
call
jae
leave
jo
pop
adc
jmp
mov
out
testb
out
fnstcw
mov
pop
dec
push
test
jp
stos
or
loop
scas
pop
cwtl
xchg
sbb
cmc
andl
xor
mov
aam
out
lock
jo
popf
inc
xchg
fsubl
popf
jle
lahf
pop
ja
cmp
xor
or
icebp
cmpsl
cli
xchg
xchg
fwait
dec
sbb
nop
decb
xchg
adc
iret
aaa
flds
ss
sbb
clc
testb
sbb
push
clc
cmp
jp
cmp
jle
cmc
xchg
dec
xchg
xchg
movsb
cmpsb
cs
pop
das
call
js
sub
orl
sarb
loop
add
movsb
cmp
xchg
cli
push
fsubrs
mov
jno
jo
movsb
inc
loope
push
iret
sahf
mov
mov
fwait
idiv
and
scas
daa
aas
lahf
rorb
into
push
mov
popa
cmpsb
loopne
pop
es
lds
or
pusha
or
cmpsl
mov
xchg
xchg
mov
fs
pop
mov
jp
fidivrs
xchg
call
adc
outsb
fs
les
adc
into
and
mov
pop
push
xchg
jge
adc
xor
pop
pusha
dec
jmp
xlat
add
int3
jl
cmpsb
insl
aaa
data16
sbb
sub
pusha
sbb
scas
fsubs
inc
jecxz
mov
or
push
dec
xchg
out
xchg
inc
sbb
ret
dec
sbb
aaa
jmp
and
daa
push
in
dec
pushf
push
adc
ror
in
cmp
xchg
push
or
loope
mov
adc
enter
fsts
aam
push
ja
dec
sbb
cmp
adc
fstpl
enter
jno
push
stos
and
stc
outsb
sbb
leave
mov
pop
add
int
mov
les
mov
and
in
movsl
cwtl
jp
inc
mov
inc
xlat
mov
mov
jl
cmc
and
pop
aas
cmp
das
inc
sub
cltd
cs
test
stos
stc
jp
cmp
inc
icebp
loopne
inc
mov
add
mov
je
mov
xlat
inc
loop
or
lds
stc
je
das
sub
lea
xor
ja
repz
mov
repnz
out
adc
lds
lods
mov
inc
cmp
addr16
out
push
and
gs
xchg
push
insb
lahf
fldl
add
or
out
lods
test
xchg
dec
inc
popa
iret
out
jmp
push
dec
movlps
mov
mov
xchg
pushl
loop
add
sub
mov
sbb
insb
mov
add
cmp
jbe
jne
jae
mov
arpl
scas
in
loope
inc
call
adc
or
icebp
xchg
leave
dec
and
mov
leave
rorl
xchg
mov
int
inc
push
mov
dec
xor
mov
outsb
repnz
xchg
inc
mov
mov
cmp
add
daa
push
test
test
dec
cs
xchg
jp
mov
jnp
cltd
sub
arpl
xor
mov
dec
xchg
inc
fsubrl
test
imul
out
push
loope
clc
lock
and
sub
rclb
xchg
aaa
pop
fsubrs
inc
in
and
lret
mov
inc
cmp
fwait
cmp
xchg
mov
into
mov
pop
mov
in
jbe
dec
lahf
test
push
xchg
setne
movsb
fld
cs
outsb
jae
ja
jns
in
cwtl
div
cmp
inc
aaa
mov
pop
sbb
sub
addr16
cmc
push
shll
imul
mov
movsb
shlb
mov
or
adc
and
push
jo
jae
daa
test
aaa
push
stos
inc
cli
sarb
jb
lea
mov
stc
pop
adc
jb,pn
aad
and
mov
inc
stc
xchg
jns
pop
mov
pop
xchg
pop
xchg
inc
leave
add
ficoms
jge
or
dec
out
adc
cmp
mov
cmp
add
mov
sarb
dec
cmp
xchg
add
mov
xchg
jnp
inc
lods
or
add
in
push
xchg
out
gs
mov
mov
inc
push
es
xor
outsl
out
sub
daa
pushf
popa
mov
sub
lea
add
and
mov
lcall
fucomp
dec
pop
fbld
sub
mov
mov
imull
xchg
adc
sbb
sub
or
mov
mov
pop
dec
fildl
mov
int
in
push
push
push
cmp
cmp
rcr
mov
xchg
jnp
popa
data16
mov
push
add
ret
pop
rcll
pop
out
jmp
shlb
pusha
sbb
pushf
mov
imul
je
mov
jle
xchg
hlt
je
mov
hlt
xchg
cwtl
fldenv
into
dec
das
lock
mov
mov
and
mov
pop
ljmp
and
jecxz
cmpsl
jle
push
adc
in
inc
enter
sbb
mov
insb
dec
loopne
lods
in
sub
push
in
shll
adc
insl
mov
xor
cmp
mov
jge
xchg
jecxz
cmpsb
push
int
sbb
lods
lret
adc
into
sar
sahf
stos
idivl
push
or
leave
aaa
dec
jne
and
pop
in
pop
fdivr
cmpsb
clc
add
repnz
add
cmpxchg
jl
lret
dec
push
in
jge
js
adc
jno
insb
cmp
cvtps2pi
int
lret
test
mov
andl
and
fdivrs
pop
push
mov
pop
div
int3
mov
sbb
adc
push
mov
jb
out
pop
insb
int3
popf
rcll
test
push
sbbb
inc
fiadds
rclb
pop
add
pusha
push
push
jns
in
xchg
lret
sub
xchg
sub
lcall
scas
roll
das
mov
dec
jg
test
mov
ror
pop
mov
xor
pushf
enter
push
mov
es
xchg
divb
scas
inc
addb
in
mov
lock
rorl
xlat
in
iret
cmp
push
cmpsb
push
mov
mov
insb
push
add
lcall
lcall
stos
jmp
mov
in
or
mov
pinsrw
pusha
add
cli
cmc
arpl
push
pop
mov
push
mov
cmp
pop
xchg
jb
pop
ljmp
out
jns
adc
icebp
lock
sbb
pop
jns
jb
push
imul
test
xchg
and
dec
xor
pop
mov
xchg
xor
mov
dec
lock
lea
les
and
inc
insb
icebp
xlat
push
das
push
jmp
xchg
sahf
aaa
jmp
push
and
xchg
enter
mov
inc
mov
inc
js
push
dec
mov
dec
in
popf
ret
or
icebp
sti
nop
pop
cmpsl
fcmovbe
insb
xchg
sub
dec
or
sbb
dec
lcall
adc
stos
xchg
hlt
ss
mov
mov
adc
out
cld
mov
jp
fwait
sti
push
lcall
add
add
xchg
mov
loopne
sub
call
dec
sbb
cmp
imul
inc
and
cmp
lea
xor
pop
aam
jne
cmp
sub
or
sub
clc
neg
mov
xlat
data16
and
in
adc
inc
sub
mov
mov
clc
jo
test
xor
aas
inc
jne
ja
scas
pop
jno
fisttpll
adc
push
add
jecxz
mov
or
shrl
movsb
jnp
pop
repz
jp
data16
pop
add
rclb
imul
out
and
xor
jns
ds
shlb
in
jg
pop
sbb
imul
aam
push
cmp
push
mov
pop
mov
ss
sub
pop
inc
mov
call
push
sub
adc
gs
pop
das
mov
jmp
sub
xor
mov
pop
fcoms
push
aam
xor
jo
jnp
inc
sub
jne
inc
fisttpll
and
push
les
mov
lods
mov
pop
adc
leave
jle
adc
insl
cmp
inc
mov
inc
jns
xchg
jg
arpl
fidivrl
inc
pop
outsl
lods
dec
shll
fistps
ss
cwtl
cmpsb
xchg
sbb
inc
lods
test
push
mov
divl
rorb
shll
orb
or
pop
push
cmpb
jae
inc
test
inc
ljmp
adc
jle
imul
mov
jbe
push
cmpsl
push
cmp
xchg
mov
dec
std
ret
ja
rorb
mov
lahf
xor
fisubrs
test
mov
aad
mov
and
cli
mov
xlat
in
dec
loopne
xchg
hlt
adc
lds
pop
ret
pop
jae
leave
or
xor
dec
out
shlb
adc
stos
xor
ds
or
mov
rcll
adc
sahf
xchg
imul
sahf
ret
push
cmpsb
sbb
xchg
cmc
mov
out
adc
or
addr16
mov
je
es
inc
movsb
loop
loop
mov
adcl
repnz
push
jl
pop
mov
popf
or
push
cmpsb
jo
in
leave
les
addr16
out
jp
fwait
sti
scas
movsb
jnp
xchg
or
xchg
xchg
es
push
addb
scas
mov
and
mov
sub
or
mov
bound
test
fwait
into
sub
jb
mov
add
aad
lock
sarb
pop
insl
xor
sbb
jb
and
arpl
gs
test
mov
jmp
xchg
aam
push
sar
dec
scas
pop
lods
sbb
popf
je
decb
xor
xchg
sbb
loopne
xor
jecxz
call
in
inc
xchg
lods
dec
xlat
mov
mov
iret
pop
or
xbegin
mov
mov
xor
sub
mov
pop
and
into
mov
pop
or
adc
fidivrs
arpl
aas
jns
cmp
cli
stc
fldcw
imull
repz
int
cmp
push
adc
popa
pop
fdivrs
dec
scas
sbb
ret
leave
popa
and
push
sbb
mov
xor
aas
pop
push
cmp
repnz
jge
mov
jbe
fbld
mov
test
xor
out
xchg
out
jbe
sbb
out
xchg
pop
repnz
mov
push
mov
lcall
or
fwait
push
lret
jg
mulb
cs
ret
shlb
fcoml
jg,pt
xor
cmp
xchg
inc
outsl
imul
jl
iret
cmpsb
push
idiv
aas
sbb
pop
mov
imul
imul
movsb
dec
push
sbb
fnstenv
pop
aas
push
in
ss
push
sbb
push
movsb
test
push
push
aad
sbb
xchg
dec
es
cltd
in
sarb
dec
adc
sub
or
aaa
mov
jbe
mov
sbb
cltd
xor
mov
sbb
out
or
aad
insb
inc
stos
sbb
push
sbb
cmpsb
lods
cmp
mov
and
adcl
push
cld
cli
pop
loopne
imul
fidivs
and
roll
adc
loope
pop
mov
in
push
jle
mov
cmpb
inc
lret
arpl
popf
jmp
iret
cld
sbb
je
adc
jge
negb
loop
push
push
popa
cmp
hlt
adc
inc
je
pop
aam
fdiv
push
cmp
out
add
out
xchg
xor
add
sub
xchg
out
xchg
sbbb
jno
push
rcrb
lods
lods
inc
mov
les
addr16
xchg
mov
movsl
data16
rcrb
fists
inc
add
push
imul
scas
pop
test
popa
aaa
test
idivb
push
mov
dec
cmp
jg
fistpl
popa
pusha
fistps
push
out
test
nop
inc
scas
sbb
xor
or
sub
inc
pop
les
jecxz
cmp
mov
movsb
mov
sub
dec
loope
or
sub
inc
mov
lds
fs
bound
sub
adc
ds
std
xchg
lret
fs
inc
cmp
loop
fsts
sub
mov
mov
lcall
push
push
cmp
aam
pop
cltd
mov
mov
push
movsl
dec
and
imul
cmp
jo
pop
push
xor
xchg
aaa
mov
cs
push
inc
imul
and
jge
aad
mov
sub
stos
das
adc
push
inc
pusha
xchg
jle
and
nop
addb
sub
stos
xchg
out
cmp
or
xor
les
pop
pop
adc
cli
inc
add
add
add
add
scas
push
push
loopne
enter
xchg
mov
subb
ljmp
rep
and
ja
xchg
decl
mov
lcall
mov
sbb
mov
mov
loope
aad
inc
push
push
mov
bound
int3
aam
mov
lcall
mov
sahf
mov
xchg
pop
orb
sbb
adc
ret
cltd
adc
imul
mov
pop
mov
test
aad
dec
popa
xchg
xor
jle
popa
push
xchg
addr16
fistpll
adc
and
in
add
jle
lds
inc
jle
cmp
pop
and
xorb
aam
jb
mov
mov
fwait
cmp
popa
add
rcr
inc
jne
int
xor
shrb
les
cltd
xchg
push
jl
mov
mov
lret
inc
icebp
jmp
cmp
dec
mov
test
dec
ljmp
call
or
mov
push
pushf
xlat
cmp
pop
or
outsb
sub
dec
jle
xlat
sahf
in
cmc
das
adc
xor
mov
das
data16
aaa
push
jmp
sub
gs
lods
repnz
or
test
push
sub
loope
scas
mov
fdivs
mov
mov
scas
rcrb
lret
jae
fldenv
cmp
xlat
sahf
jo
inc
xchg
les
int
mov
test
mov
fnstsw
mov
mov
loop
mov
fwait
cmp
sbb
jae
push
pop
cmp
orl
aam
insb
add
sub
and
mov
nop
mov
xchg
jne
lahf
mov
xor
fimull
mov
pop
dec
push
out
mov
insl
in
cmp
xor
adc
dec
inc
xchg
xor
sti
jecxz
test
jge
cld
push
xchg
cmp
xor
push
rclb
mov
mov
daa
in
and
sbb
xchg
movsb
mov
cwtl
adc
sbb
cmp
cmp
mov
loope
js
or
daa
push
in
fisubl
ja
mov
push
jbe
andb
shrl
cmp
cld
out
stos
subl
jmp
jl
pop
xchg
sti
inc
clc
test
inc
dec
subb
mov
add
inc
stos
xchg
push
sbb
pop
dec
mov
mov
shrb
and
pop
xchg
movsb
imul
push
lahf
flds
cltd
pop
cmp
xor
test
push
pop
icebp
inc
scas
jne
pop
ficompl
movsl
test
testb
cmpsl
adc
push
out
mov
jno
out
cli
int3
push
std
sub
adc
xchg
mov
icebp
imul
and
adc
mov
mov
xlat
xor
leave
shrl
icebp
shll
adc
popa
dec
repnz
rclb
jecxz
std
imul
inc
pop
insl
xchg
xchg
inc
call
pop
inc
dec
or
jbe
and
lret
fadds
pop
ret
push
addb
stc
xlat
pop
pop
adc
jle
leave
fidivrs
es
std
bound
jp
outsb
cmp
jp
fmull
movsb
jae
inc
mov
push
dec
lods
inc
adc
into
jle
ja
ror
xor
pop
rolb
adc
jne
mov
jnp
and
push
jp
ljmp
push
push
mov
outsb
shrl
dec
and
sub
adc
loopne
or
add
mov
push
roll
shll
dec
int3
or
push
add
sahf
inc
gs
sti
adcb
pop
or
push
xor
out
dec
jmp
cmpsl
shll
or
mov
rolb
mov
xor
repz
loop
ret
pop
rclb
jl
inc
call
pop
imul
xchg
sarb
mov
xchg
loopne
push
ja
iret
sti
in
aam
adc
or
fistpll
mov
nop
test
jmp
int
or
stc
mov
mov
xchg
dec
pop
jl
mov
out
push
sbb
pushf
imulb
je
adc
test
pusha
xchg
jno
inc
jnp
jg
mov
in
inc
jmp
faddl
fidivrl
jg
das
fnstcw
push
lret
and
sub
sub
sbb
hlt
adc
cmpsl
out
sbb
outsl
daa
nop
mov
test
out
sub
test
push
mov
scas
jp
xchg
pop
mov
enter
push
sub
adc
xchg
aad
inc
rclb
in
jbe
add
lret
cltd
mov
lock
xchg
and
push
xor
inc
push
dec
jecxz
mov
sti
cli
mov
dec
fnstenv
jno
mov
imul
lcall
mov
mov
cmpb
pop
into
mov
xchg
aad
add
lcall
repz
inc
fs
xchg
repz
arpl
fisttpl
mov
xor
push
push
xchg
mov
into
sbb
ret
movsb
mov
shll
sbb
cmp
cltd
cmp
test
out
push
xor
and
cmp
or
pusha
mov
fdivrl
outsl
daa
loope
aam
movsw
push
dec
std
ss
mov
lahf
je
subl
mov
sbb
int
repnz
jne
fcmovne
je
mov
mov
add
repnz
test
lea
rclb
es
repz
jg
jbe
adc
js
dec
rclb
je
sbb
add
ficomps
push
cmp
jg
out
add
add
out
enter
sahf
insl
loopne
mov
filds
inc
pop
cwtl
sbbl
das
mov
push
mov
movb
and
dec
adc
pushaw
pop
mov
push
jecxz
or
imul
movsb
aaa
cs
add
cmpsb
stc
rcrl
cmp
and
std
jae
lea
into
add
sub
mov
pop
jmp
inc
in
dec
scas
pop
mov
jb
out
ljmp
divb
out
fnstcw
pop
inc
imul
sti
mov
jg
cwtl
pop
cmp
fcomps
fisttpl
in
popa
push
and
mov
add
enter
jb
lret
ljmp
adc
repz
pop
or
mov
in
ficomps
popa
mov
out
negl
mov
test
mov
adc
movsl
ret
repz
jl
nop
add
popa
sbb
adc
or
das
dec
mov
adc
ja
xchg
lea
orb
frstor
pop
sti
or
add
push
push
fwait
inc
lock
popf
imul
hlt
dec
lret
jg
pop
in
std
and
push
and
imul
dec
and
inc
stos
pmovmskb
push
sahf
pop
sub
xor
movsl
bound
add
inc
fbstp
ret
sbb
mov
popf
popa
pop
sub
push
ds
outsb
aaa
cmp
mull
inc
out
out
jo
push
inc
add
mov
cld
mov
jmp
das
sbbb
dec
mov
jb
jae
adc
jns
std
sahf
xchg
or
or
add
or
fldcw
das
ret
stos
lods
inc
adc
or
jg
mov
xor
sbb
add
dec
pop
stc
ds
cmpb
xchg
xchg
dec
lcall
aam
xorl
in
push
nop
adc
adc
mov
ret
push
aad
push
mov
cmp
rcll
pop
neg
pop
test
mov
sbb
scas
inc
or
pop
add
insb
mov
cmpsb
jae
xchg
inc
inc
add
sub
hlt
cmp
xchg
dec
aam
lret
push
mov
les
and
jo
mov
sub
cmpsb
stos
push
in
add
lods
mov
popf
push
in
shll
aas
or
loopne
cmp
xchg
test
xor
std
sub
repnz
pop
insl
cli
std
into
lret
std
mov
add
int
push
mov
lahf
adc
xchg
inc
loop
push
daa
cltd
mov
adc
gs
rorl
lods
shrl
cwtl
or
imulb
rcr
movsl
or
pop
pop
mov
mov
out
out
mov
inc
cmc
mov
arpl
testb
adc
push
jbe
mov
data16
push
mov
xchg
jmp
sbb
arpl
icebp
mov
add
mov
clc
mov
push
ljmp
mov
pop
xchg
pop
insb
jp
cmp
repnz
fnsave
jl
pop
sbb
icebp
rclb
test
push
push
lock
and
inc
adc
popa
das
rorl
aam
aas
adc
push
or
scas
pop
push
cmp
pop
sbb
push
xchg
call
mov
inc
cwtl
jge
fnstenv
add
xchg
jae
sbb
loopne
divl
push
inc
mov
mov
and
rorl
stos
or
jo
jb
mov
movsl
push
test
mov
inc
lahf
lahf
xchg
sbb
rep
int
outsb
jae
or
lea
xor
dec
sub
daa
pop
mov
stos
jmp
fdivrl
int3
sti
mov
cmp
xchg
repz
or
fnstenv
pop
pusha
sahf
or
add
mov
imul
push
andb
pop
dec
fisubl
idivb
xchg
call
and
fisttps
dec
or
dec
mov
dec
cmp
mov
or
mov
inc
xchg
sbb
or
lods
fdivrs
mov
cs
pop
push
xor
repz
shll
subl
loop
ljmp
dec
cmp
imul
xchg
int3
cld
out
push
scas
das
hlt
fiaddl
and
incb
xchg
outsl
jl
or
lods
mov
movsb
insb
adc
xchg
mov
add
xor
mul
outsl
clc
sar
jbe
pop
mov
pusha
cmc
xor
jno
lcall
push
jp
mov
jp
ret
mov
into
mov
pop
and
mov
sbb
push
in
push
mov
xor
mov
mov
gs
repnz
pop
fisubrl
scas
stos
repz
adcl
pop
push
ss
mov
pusha
out
and
sbbl
adc
or
push
lea
adc
mov
lea
mov
and
int
ljmp
cmp
data16
jle
pop
ficoml
aas
fwait
mov
int3
push
es
pushf
aam
adcl
movsl
adc
fwait
mov
jecxz
cmp
cli
mov
pop
pop
jno
push
mov
pop
stos
push
fistl
jae
stc
pop
arpl
sbb
fwait
int
mov
or
jnp
adc
out
xor
stc
hlt
pop
lods
test
jns
or
repnz
sbb
fsts
jecxz
jns
inc
movsl
outsb
sbb
mov
sbb
lret
inc
sbb
mov
nop
push
in
or
jmp
dec
and
push
or
pop
push
adc
mov
repnz
aas
lds
loopne
ds
jg
mov
lods
pop
pop
cs
push
mov
jbe
int3
jno
mov
mov
dec
mov
nop
lret
pushl
cmp
nop
xlat
cs
lret
subb
xchg
or
jnp
jbe
in
or
or
int3
scas
popa
cmpsb
adc
aad
or
adc
repz
mov
gs
push
notb
push
popa
xor
xchg
xor
test
jg
and
cmpsb
sub
loopne
aam
ss
ss
retw
repz
out
test
jns
popf
mov
sub
xchg
sbb
imul
inc
pushf
pop
add
fidivrl
rorb
sub
adc
loope
jb
jne
mov
ret
add
in
call
xor
mov
jno
add
adc
jb
insl
fld
jbe
insl
inc
add
lcall
mov
or
add
inc
mov
ficoms
or
imul
push
iret
imulb
movsb
sub
scas
aaa
lea
mov
push
loop
sub
and
nop
aas
xor
mov
loopne
adc
cmp
push
dec
orb
pop
mov
loope
push
aad
xor
rcl
cmp
jge
or
push
sbb
roll
test
movsb
mov
js
jnp
mov
pop
movsb
inc
lods
jp
roll
mov
ljmp
and
in
adc
std
std
mov
push
dec
jno
mov
cmc
fsts
xor
or
push
daa
into
jmp
cmc
adcb
dec
ljmp
lahf
sub
pop
cmp
adc
cmp
aad
dec
jmp
test
jp
sub
in
push
pop
or
inc
mov
ds
outsl
cmp
xchg
or
or
sub
xchg
js
sbb
imul
mov
inc
das
jecxz
cmp
push
fsubl
rorl
inc
add
sub
lret
lea
shrb
sbb
outsl
xchg
xchg
jno
fs
lods
mov
mov
aam
andb
lds
roll
mov
sti
dec
fdivrs
pop
fadd
mov
fwait
or
icebp
adc
in
rcrb
js
movsb
lock
sbb
push
dec
adc
daa
into
addr16
cwtl
pop
nop
das
jno
xchg
outsl
pop
or
pop
push
aaa
imul
lret
and
dec
cmp
subb
mov
pusha
movsl
xchg
push
ret
adc
movsb
cmc
ret
push
mov
xor
int
xor
popf
fistpl
lods
lds
jne
mov
jnp
mov
out
lods
adc
loope
out
dec
imul
xchg
popf
adc
aam
hlt
in
sub
adc
addb
out
mov
cmpsl
sarl
sbb
mov
icebp
mov
or
mov
ja
push
maskmovq
negl
test
lock
push
inc
add
mov
pop
ret
xchg
xchg
loopne
jae
aaa
xor
stos
insl
es
nop
call
cli
shrb
sbb
adc
xchg
inc
js
jecxz
into
xor
hlt
dec
xorps
jnp
inc
movsb
or
sti
or
push
int
inc
ret
cli
fimull
mov
mov
call
lods
jge
outsb
je
fbstp
or
ljmp
inc
movsl
andl
fst
and
fucomip
mov
aad
mov
xchg
cmp
mov
scas
rcr
test
outsb
inc
mov
push
jo
pop
add
adc
xchg
xchg
in
stc
out
enter
mov
jo
lret
jbe
ret
mov
inc
inc
xchg
cmpsb
or
loope
jne
sahf
mov
inc
scas
jge
or
mov
xlat
aam
int3
cwtl
and
jbe
test
mov
mov
and
lock
xchg
popfw
pop
sarb
rcrl
cmc
xor
cmp
pop
xor
push
mov
sbb
push
fwait
cli
mov
cmpsb
stos
cmpsb
lods
xchg
pop
std
lcall
inc
int3
mov
in
stos
and
pop
jp
pop
push
xor
and
xchg
mov
cmc
mov
iret
clc
jns
sbb
lret
jmp
or
xchg
or
xchg
mov
dec
jmp
inc
aam
nop
outsb
sub
pop
sti
ss
daa
xor
mov
in
ds
out
testb
shl
xor
cmp
or
push
and
mov
sti
arpl
add
sub
xchg
xchg
sub
sarb
mov
imul
mov
cmp
loope
push
loopne
xchg
inc
inc
add
lcall
push
push
xor
push
mov
nop
xor
mov
or
subb
movsl
jnp
pop
cmpsb
mov
adc
insb
cmpsl
icebp
loope
insl
test
es
inc
jl
sbb
ljmp
push
mov
adc
insl
and
jmp
mov
jb
imulb
and
mov
cmp
cmp
in
mov
push
aas
ror
adc
out
cwtl
jo
add
mov
pop
sbb
stos
xchg
push
push
cmova
inc
push
bound
ret
xlat
sub
dec
data16
cmpsl
cwtl
sti
jmp
je
or
jp
cmp
jge
jb
clc
faddp
mov
mov
push
push
lods
dec
addr16
fiaddl
mov
sub
loopne
push
push
insb
xchg
mov
mov
pop
lock
xchg
sbb
add
mov
cmp
mov
sar
cmp
test
push
fs
xor
leave
fiaddl
lahf
sti
daa
fcomps
mov
fcomp
cld
xchg
loopne
inc
adc
icebp
jl
pop
push
xor
pop
jl
jne
fisttps
mov
loope
into
call
das
sub
jb
icebp
aas
test
ret
test
enter
fwait
mov
notl
cwtl
xchg
jl
add
push
adc
mov
xchg
aaa
cwtl
jecxz
pop
xchg
dec
dec
add
lcall
sub
out
push
loop
ds
inc
cmpb
lds
mov
scas
mov
push
in
add
and
arpl
xchg
aad
fwait
sbb
pop
and
lahf
lret
jl
pop
jns
pop
loope
mov
stos
pushf
adc
insl
inc
adc
xchg
es
sbb
sub
jne
pop
negl
xorl
test
sub
lea
adc
fimull
jne
mov
nop
les
iret
add
xchg
sbb
or
xor
js
push
xor
jo
fdiv
int
add
out
mov
dec
dec
sbb
push
fucomp
sub
pop
out
adc
xor
sarb
outsb
int
insb
arpl
es
movsl
rorb
call
ret
add
and
inc
inc
lret
push
sub
mov
jg
aas
es
popa
or
in
jb
es
int3
hlt
loop
enter
push
les
and
ret
xor
push
mov
xor
out
aad
fadds
xor
imul
adc
test
popa
dec
jle
add
and
daa
mov
adc
mov
dec
or
mov
pop
adc
pop
movntq
out
lods
inc
in
cs
cltd
test
shlb
cmp
je
cmpsb
pusha
adc
xchg
das
lock
jmp
mov
popf
iret
pop
std
out
sahf
adc
xchg
jnp
call
push
jle
je
xor
jb
mov
jns
lahf
mov
es
popa
pop
xor
or
bound
cwtl
add
enter
mul
jae
xor
test
push
xlat
out
or
xor
ret
jne
clc
arpl
mov
dec
xor
rcll
sbb
xchg
push
xchg
mov
xlat
jbe
hlt
or
mov
loope
adc
xor
dec
out
icebp
adc
lods
pop
fnstsw
js
fwait
inc
hlt
shll
fistpl
rclb
out
std
sub
jp
bound
push
pop
ljmp
mov
xchg
data16
rolb
js
cltd
push
cmp
xor
cltd
daa
dec
stos
loope
hlt
mov
gs
inc
mulb
jnp
cmpsl
pop
scas
sbb
and
push
xchg
xor
mov
dec
int
pop
xchg
gs
pop
dec
es
movsl
aas
mov
aam
push
mov
mov
sbb
dec
movsb
sti
imul
pushf
icebp
jne
inc
ret
sub
in
or
idivl
fsubl
adc
push
lahf
xor
rcrl
pop
cmp
out
lock
sbb
gs
cmp
xor
pop
pop
mov
sub
adc
xor
aaa
mov
pop
dec
stc
jmp
cmc
rolb
lahf
dec
xchg
mov
mov
add
push
pop
dec
mov
pop
dec
aaa
mov
frstor
jge
test
adc
xor
or
sub
mov
sahf
fdivrs
cmp
pop
lahf
inc
out
mov
loop
dec
push
lods
or
leave
addr16
enter
popa
sbb
mov
call
sbbb
scas
lea
es
dec
mov
jecxz
jp
push
adc
xor
pop
fimuls
pop
cmc
mov
je
push
sbbb
adc
lcall
scas
push
jmp
jge
pop
push
or
pop
aas
or
out
shlb
inc
sahf
mov
pusha
pop
pop
jns
pop
mov
mov
lods
push
cmp
pushf
es
jl
and
push
mov
adc
xchg
xor
in
jge
xchg
movsl
adc
out
clts
out
fildll
lahf
stos
xchg
xor
insb
in
loop
mov
push
rorb
in
xlat
sahf
or
mov
mov
push
ja
loop
nop
mov
js
xchg
repz
dec
cmc
es
mov
or
lds
xchg
dec
push
ss
popf
daa
popa
loope
iret
jbe
shr
arpl
loopne
lods
mov
inc
aam
icebp
adc
popf
aam
xchg
shrb
scas
pop
jo
or
fst
xchg
and
fcom
idivb
inc
xchg
and
dec
test
adc
movsl
dec
lret
adc
pop
dec
cli
in
aas
dec
aam
popf
dec
xchg
push
es
jmp
sarb
loop
or
mov
xor
sub
lods
lods
scas
xchg
dec
add
data16
les
lods
adc
into
decl
das
xor
sub
scas
mov
push
cmp
int3
mov
or
xchg
dec
nop
xchg
push
call
je
negl
sahf
pop
add
int
jae
xchg
jbe
data16
fstps
pmaxsw
hlt
xchg
push
popf
shlb
jns
rcrb
mov
hlt
cmp
insl
cmp
jp
js
xor
inc
cmp
shrb
xor
lcall
lock
notb
fdivl
push
mov
ss
push
jmp
pop
push
lahf
or
and
xor
pop
cmp
mov
mov
push
sbb
les
inc
sarl
mov
push
shr
and
in
jp
xchg
fidivs
cld
push
push
dec
lods
dec
dec
pminsw
stc
xor
push
mov
lea
loopne
call
es
addl
mov
mov
sarb
pop
nop
dec
pop
mov
lds
es
xchg
inc
insb
inc
test
pop
xchg
xor
jecxz
mov
cld
xchg
dec
faddl
cwtl
sub
lock
int
scas
aam
jge
test
pusha
mov
and
ljmp
scas
mov
or
or
or
sub
dec
lret
push
fidivrs
pop
mov
and
ja
data16
mul
shll
pop
sbb
out
pop
mov
divb
insb
sub
loop
movsb
test
jnp
push
enter
xchg
cmc
inc
hlt
pushf
add
fcmovnu
fbld
fldl
out
push
rolb
mov
cmpsl
dec
fidivl
xchg
pushf
addr16
stos
xor
ja
mov
in
push
cmc
lds
ds
pusha
sub
mov
addl
ja
jp
sbb
mov
cmp
rolb
outsb
into
orb
adc
cmp
xor
test
out
test
arpl
bound
mov
pop
movsb
inc
sub
int3
lahf
adc
stos
inc
mov
lods
out
lea
adc
sub
out
mov
in
mov
jmp
sbb
jle
repz
add
mov
jg
imul
mov
sub
mov
cld
mov
ficomps
roll
sti
into
push
cli
mov
cmp
xor
inc
or
cld
outsb
cmp
mov
xor
aaa
inc
shll
lret
fwait
enter
sbb
xor
xlat
mov
push
sahf
push
jl
or
mov
xchg
data16
inc
inc
loop
rcrb
stos
inc
les
test
call
icebp
fwait
push
test
test
pop
dec
call
pop
lds
xor
xor
sarl
hlt
mov
and
push
ja
add
push
xchg
stos
sbb
pop
or
out
subb
inc
loopne
lods
pop
jne
jp
dec
out
inc
add
or
or
mov
std
aas
push
mov
jae
bound
pop
pop
daa
out
ficoml
jge
inc
jecxz
dec
jo
out
lods
push
scas
sub
imul
shl
call
add
test
movsb
es
dec
mov
stos
mov
mov
ljmp
aas
ds
and
push
aaa
es
mov
outsl
in
push
sbb
or
icebp
push
imull
cmc
cmp
push
sahf
iret
adc
outsl
and
fbld
mov
das
incb
xchg
sbb
in
jae
mov
xor
cmp
outsb
mov
add
add
xchg
add
jns
xchg
jne
add
mov
and
xchg
pop
mov
rcrl
insb
mov
aas
fstl
inc
fcompl
mov
push
cmc
or
gs
cmpsl
and
pop
dec
int
mov
in
negl
fildl
dec
cltd
lods
mov
pushf
inc
mov
outsb
push
pop
jb
or
sub
pop
adc
outsb
cmp
movsl
push
fwait
dec
pushf
orb
xchg
dec
lds
adc
push
xor
adc
fdivrl
mov
mov
lea
and
xchg
fadds
cs
cli
push
cmp
aas
mov
sahf
sub
decb
mov
mov
sub
mov
dec
outsb
push
fbld
push
pop
mov
lods
adc
insb
das
adc
dec
dec
mov
iret
icebp
xchg
jmp
cmc
imul
loop
sbb
loope
jo
leave
and
push
jecxz
ja
arpl
pop
jl
pusha
sbb
out
jp
mov
push
pop
jmp
lcall
mov
push
lea
mov
mov
dec
push
dec
inc
cmpsb
adc
pop
push
xor
inc
mov
and
cmp
or
push
in
push
jno
adc
pop
dec
imul
push
fucomip
inc
mov
mov
scas
mov
push
outsb
ja
int
fwait
mul
pop
mov
rcrb
fldlg2
cmpsb
adc
cld
add
xlat
adc
xchg
or
lods
push
inc
insb
push
into
cwtl
and
subb
mov
dec
pop
std
pop
xchg
xchg
xchg
xor
test
sbb
cmp
cmp
xor
clc
fisubs
mov
dec
mov
clc
mov
cmpb
pop
cmpsl
cmp
rclb
add
or
clc
inc
mov
sti
ret
or
cmp
adc
into
in
cli
cmp
and
inc
or
pop
push
rcrb
xor
mov
sub
orl
xchg
sarb
fmull
jecxz
fwait
repnz
and
ljmp
jp
fnstenv
pop
cmp
mov
scas
sub
cld
pop
xchg
aas
mov
sbb
fildl
dec
cmpsl
fcompl
cmp
fwait
scas
xchg
imul
push
stos
xor
sbb
das
cmc
cld
push
shlb
jecxz
iret
cmpb
cli
pop
add
lods
cmc
jecxz
dec
or
mov
testl
stos
orb
into
cmc
pop
iret
jo
sub
mov
add
leave
push
into
jno
mov
sti
test
bound
ret
mov
dec
lods
mov
jg
dec
pop
cmp
sub
push
mov
adc
xor
lret
inc
test
stc
add
nop
adc
outsl
push
mov
fidivrl
mov
jge
xchg
add
cmp
and
addr16
hlt
inc
lret
pop
sub
not
adc
movsb
dec
ja
xchg
test
std
xor
mov
sbb
iret
dec
aam
daa
gs
push
inc
call
jge
hlt
sbb
repnz
and
popf
adc
imul
out
roll
sbb
adc
in
sbb
imul
cmpsl
jae
int3
fildl
sub
add
outsb
lea
and
xchg
or
pushl
or
push
cwtl
mov
sbb
sub
xchg
dec
in
dec
scas
fs
iret
mov
stos
pop
mov
loop
iret
insb
push
aas
fldt
gs
fwait
int
mov
push
mov
mov
aad
in
mov
xor
inc
jle
lds
or
pop
pop
scas
dec
lods
adc
fwait
pusha
loopne
addb
cmpsb
cmpsl
xchg
xchg
inc
movsb
mov
popf
inc
loope
or
adc
call
andl
xor
dec
jmp
ret
push
sarl
popa
mov
xor
shll
repz
mov
lret
enter
outsl
stos
mov
cmp
fmulp
fidivs
and
cltd
pop
bound
sbb
xchg
pop
sbb
push
outsb
mov
lret
fwait
leave
jecxz
aas
and
popf
ja
daa
mov
xor
cwtl
xchg
xchg
mov
pop
or
ds
pop
dec
fistpll
outsb
dec
xor
cli
dec
shlb
adc
dec
jecxz
fildll
mov
nop
bound
gs
jne
dec
xchg
inc
stc
int
jb
sbb
aas
ljmp
pop
enter
dec
shr
ret
dec
shlb
test
mov
test
ret
and
inc
hlt
bound
ljmp
mov
cmp
popa
push
and
add
sbb
mov
data16
jge
adc
and
adc
orl
daa
test
out
pop
int
shll
push
out
mov
adc
dec
sub
sti
and
and
mov
pop
stc
movsl
xchg
test
fcmovnu
inc
pushf
fs
jb
push
ja
divb
inc
aad
xlat
sub
je
xchg
cltd
insb
mov
pop
push
aam
iret
pop
cs
push
mov
cmpsl
in
dec
and
scas
jg
stos
adcl
aaa
or
add
sbbb
adc
pop
pop
mov
add
xlat
lock
hlt
das
push
or
inc
adc
cmp
inc
movaps
icebp
mov
sub
jl
or
push
dec
shrb
jecxz
decb
fldenv
pushf
stos
add
std
test
stos
fcoms
mov
xor
jle
fldenv
in
add
fdivl
cmp
push
push
jl
stos
imul
ss
pushf
shll
idivb
adcb
lods
sub
pusha
test
fwait
js
js
cli
cmp
iret
sub
pop
loope
and
imul
lods
xor
adc
mov
push
add
lret
rclb
mov
mov
add
adc
daa
add
fwait
xchg
adc
xchg
testl
sbb
jge
btrl
fidivs
fwait
xchg
cmp
int
mov
decl
dec
mov
jp
jge
std
outsl
movsl
es
movsb
mov
push
repnz
in
push
int3
leave
int3
rolb
xchg
out
and
and
cltd
rcll
jbe
out
push
in
loopne
ret
in
or
imul
push
insb
mov
sub
add
push
cmp
xchg
mov
out
dec
xchg
push
mov
dec
popf
xchg
mov
addr16
jmp
xor
fldt
xor
sarl
sarb
hlt
inc
sahf
sub
fwait
mov
lea
movq
outsb
mov
aas
cmpsl
dec
loop
dec
bound
sarl
out
mov
fisttps
pop
jmp
loopne
inc
mov
xchg
sbb
rcll
repnz
dec
clc
mov
jl
and
jae
jae
lock
cmp
test
enter
lcall
ljmp
inc
insl
dec
xlat
pop
inc
mov
lds
imul
jecxz
inc
and
mov
or
push
or
out
xor
sbb
and
mov
add
jbe
pop
add
fs
pop
push
nop
push
mov
pushf
or
dec
sub
andl
push
fcmove
mov
mov
es
mov
add
scas
cmpb
hlt
push
rorl
test
mov
mov
cltd
lcall
enter
fcomi
loop
add
jle
cmpsb
adc
xchg
arpl
data16
inc
into
xchg
in
sbb
push
inc
cmpsb
sub
call
inc
push
mov
fdivrl
pushf
xor
cmp
jo
movsb
xorps
cli
pop
dec
in
fwait
inc
sahf
pusha
mov
mov
das
pop
xchg
xchg
pop
jae
and
loope
loop
add
int3
movsb
inc
jae
jle
push
ds
pop
cmpsb
push
loopne
and
fs
test
lret
push
je
fwait
add
daa
loope
lahf
mov
sahf
xchg
adc
cmp
xor
or
add
fsubl
loope
sbb
clc
js
sub
dec
int
fbld
iret
dec
or
pop
push
adc
mov
xor
jae
leave
lea
or
xchg
fiaddl
pop
lock
int
inc
leave
and
push
mov
in
cli
and
scas
sub
ffree
sarl
jae
loop
ss
inc
adc
mov
push
jmp
sub
push
xchg
lret
pop
into
push
xchg
rclb
xchg
pop
test
mov
mov
mov
les
inc
fcoml
and
pop
loop
fsubr
sbb
mov
mov
insl
clc
inc
dec
mov
pop
push
push
jo
jo
push
dec
loop
mul
outsl
mov
aaa
xor
or
sub
divl
and
rclb
stc
jg
lock
jns
test
xor
add
pop
and
mov
jno
sub
aam
lds
sub
fs
pop
mov
and
push
bswap
aad
lcall
pop
adc
sub
xor
cmpsb
lret
mov
or
test
stos
xor
or
sbb
pop
mov
push
cld
jne
lcall
ficomps
outsl
xor
es
loope
or
mov
scas
pop
xchg
dec
pop
sbb
cmpsl
data16
lahf
nop
fldl
sub
scas
scas
mov
mov
cmpsb
xorl
stos
cltd
mov
lods
pop
push
loop
jo
aam
jb
inc
add
imul
inc
xchg
repnz
test
mov
std
push
je
sbb
ret
cmp
pop
or
in
adc
xchg
inc
adc
sub
or
fidivl
inc
mov
push
mov
outsl
iret
iret
xlat
xorb
test
mov
out
int3
decb
push
mov
les
push
ds
add
cwtl
test
shr
stc
pop
aam
inc
xchg
mov
int
ss
push
pushf
arpl
mov
es
stc
sub
cmpb
insl
in
scas
pop
pop
arpl
adc
out
dec
jle
push
js
dec
into
js
sbb
mov
dec
fwait
xchg
cmp
sbb
push
lds
cmpsl
rorb
lods
lock
adc
lods
stos
fcoml
lret
xlat
cmc
cmc
mov
jne
pop
or
and
xor
outsb
subb
dec
mov
mov
ret
icebp
inc
xchg
cmp
call
pusha
out
cmpsb
and
xchg
cs
rclb
mov
hlt
icebp
and
mov
mov
add
ss
inc
cmpsl
mov
inc
into
sub
cmp
xchg
lahf
or
sub
sub
rorl
push
push
test
sub
cmp
push
mov
lds
scas
fimuls
and
in
popa
andb
les
jg
scas
mov
xor
and
imul
fisubrs
sbb
jb
movb
fisubs
shll
rcr
mov
enter
pop
int3
xor
sbb
in
inc
or
aam
add
js
into
mov
jl
popa
jo
fidivrl
divl
roll
lea
xchg
or
add
scas
pushl
lods
js
xchg
push
mov
in
mov
pop
dec
fidivl
ljmp
jbe
insl
push
push
icebp
ret
fwait
xchg
jno
dec
sub
cmc
lret
cmp
bound
fiaddl
jle
loope
add
cmp
mov
jmp
add
xor
jo
lds
add
test
out
or
sub
xlat
mov
mov
dec
jg
jo
xchg
jmp
hlt
or
lret
mov
and
ror
mov
fldcw
inc
stc
ds
enter
xor
rcll
push
in
lock
and
jg
loopne
cmpb
out
cmp
push
roll
ljmp
and
push
push
and
mov
ljmp
mov
xchg
dec
and
in
sbb
in
arpl
push
jbe
adc
pop
sub
mov
sub
inc
mov
and
fimuls
sbb
pop
adc
mov
jp,pn
mov
jbe
cli
adc
xor
sbb
and
cld
fs
pop
aas
js
mov
fmull
dec
movsb
into
pop
fdivp
and
lahf
cwtl
inc
lea
in
gs
clc
stc
lds
loop
or
add
dec
shll
jecxz
arpl
cli
sbb
or
adc
in
sarb
fs
xsaveopt
ds
push
jno
fsubrp
and
and
enter
push
mov
mov
out
hlt
sub
cli
ljmp
jl
out
popa
icebp
cmpsb
push
leave
mov
scas
xchg
insb
mov
mov
xchg
push
insb
pop
or
jbe
aas
sar
lahf
adc
mov
ljmp
cmp
adc
or
int3
push
aas
sub
insb
xchg
stc
or
stos
dec
dec
sarl
xchg
cmp
adc
das
jle
jo
jp
bound
negb
xor
int
cmpsl
fimuls
or
sbb
cmp
and
add
in
xchg
add
or
adcl
jp
int
test
int
add
orb
mov
sbb
jns
imul
arpl
outsl
or
out
loop
lods
jno
mov
sbb
pusha
cwtl
andb
and
xchg
popf
add
inc
push
lods
push
sub
in
shlb
pop
imul
lock
negb
or
dec
pop
fsubrs
push
dec
ja
push
push
in
or
sbb
jae
shlb
fiaddl
mov
jo
fsubr
push
push
pop
cs
hlt
pop
cwtl
add
sbb
fsubl
mov
jns
sub
dec
inc
loop
sbb
sbb
shl
xchg
popa
scas
sahf
or
and
test
loopne
mov
jg
jnp
xchg
int3
xchg
enter
lahf
pop
jae
inc
sarb
in
sub
jns
testl
or
lods
cwtl
sbb
jnp
sub
push
out
add
sub
lahf
cmp
cld
negl
data16
xchg
in
mov
add
pop
sub
dec
out
inc
rorb
ret
add
inc
mov
daa
sahf
mov
inc
cli
cs
mov
cmc
out
pushf
lods
mov
and
push
jle
push
test
fistpll
pushl
pop
out
sub
ret
popf
sub
scas
lods
fisttpll
sub
fildll
inc
sbb
in
sub
lods
into
push
mov
push
ficoml
rol
out
les
lea
sub
je
jo
and
jae
fistpl
test
out
sub
xlat
mov
ret
mov
sub
jg
fistpl
mov
or
inc
repnz
mov
lds
mov
inc
mov
fstps
stos
aas
mov
and
pmaxub
or
test
ss
sub
insb
inc
cmp
cwtl
scas
icebp
stc
sbb
es
cmp
lahf
pushaw
ret
xchg
call
lcall
repnz
out
lret
mov
pop
inc
adc
sbb
xchg
mov
int3
loop
hlt
and
inc
add
lret
icebp
jo
lods
xor
icebp
popa
jle
pop
call
mov
or
or
jbe
add
fistpll
dec
icebp
in
mov
test
add
hlt
push
loopne
xor
inc
jno
inc
stos
sbb
sbb
out
jae
and
xchg
sbb
cwtl
xchg
pop
mov
mov
cmp
stos
and
jle
nop
jp
mov
subl
xlat
push
mov
mov
lret
inc
or
cmc
neg
dec
rorl
xlat
es
shll
cld
mov
push
cli
xchg
sbb
add
mov
mov
psadbw
movsl
xchg
popa
sub
mov
dec
push
bnd
xor
jno
xchg
out
mov
adc
push
fs
or
out
or
push
fidivl
inc
std
movsb
fadds
fadds
cmp
cmpl
xor
mov
or
inc
xor
mov
dec
sbb
fimull
daa
cmp
cmp
mov
sub
cs
test
cmpsb
rorl
std
scas
cmp
inc
push
mov
loope
push
loopne
fcmovne
inc
push
push
sub
or
adc
int
mov
xchg
lcall
es
pop
out
cmp
lcall
scas
sar
dec
lds
pop
loopne
adcb
arpl
lret
pop
imul
in
or
ljmp
mov
mov
ret
dec
or
aaa
fwait
mov
jne
data16
scas
jnp
daa
jns
cmp
iret
aas
sub
fists
dec
out
pop
sar
aam
mov
cmpsl
or
xchg
xor
lea
out
push
add
mov
sub
bound
xlat
sahf
icebp
sti
in
cltd
std
ret
xchg
in
mov
adc
xor
inc
lods
test
xor
push
insl
fsubp
es
mov
dec
xor
aad
popf
xchg
sub
mov
jns
and
sbb
xchg
dec
rclb
sub
xchg
add
jg
dec
xor
hlt
icebp
adc
push
xchg
pusha
jbe
outsb
xor
rolb
xor
xchg
cs
jl
push
dec
imul
lods
xor
jo
xchg
pusha
jle
push
daa
stos
mov
xchg
std
pop
add
cmc
cmp
stc
in
daa
jb
lods
xchg
cmpsb
test
add
fxch
mov
mov
mov
inc
and
sub
inc
mov
or
imul
xchg
mov
fs
cmp
in
les
inc
inc
cmp
das
push
and
daa
push
inc
mov
add
or
xchg
out
pop
pop
push
xor
hlt
divl
stc
clc
and
mov
mov
in
push
test
data16
bound
pop
and
add
mov
lock
fadds
lcall
adc
movsl
mov
sub
mov
jl
push
xchg
pop
and
scas
push
xchg
insl
imull
mov
sbb
mov
cltd
cld
outsl
fwait
xchg
dec
pop
lcall
std
xlat
jo
outsl
fstpt
add
into
adc
out
mov
fcmovne
test
test
cmpsb
lock
add
call
repnz
lds
jnp
push
mov
dec
in
test
shr
add
lahf
cmpsb
pop
pop
idivl
mov
mov
xchg
xor
scas
punpckhbw
ret
test
iret
mov
cmp
xor
mov
hlt
adc
or
pop
lret
scas
cwtl
je
arpl
lds
xchg
lds
jns
rcrl
clc
adc
add
sub
stos
sbb
aam
mov
dec
ljmp
cmpsl
cmp
pop
call
fstl
outsl
mov
popf
out
push
out
cltd
mov
add
cli
popa
dec
popf
cmpb
mov
jbe
jl
or
fdivs
mov
mov
xchg
aam
inc
aad
or
dec
mov
push
adc
jne
push
push
mov
dec
popa
mov
cltd
push
sbb
inc
scas
das
mov
data16
mov
data16
imul
out
cltd
cli
xchg
fadds
imul
sarb
adc
addr16
push
inc
jmp
or
ja
jbe
scas
cmp
and
hlt
and
or
mov
lahf
rclb
jecxz
dec
pop
cmpsl
dec
mov
stc
ja
push
xor
dec
scas
mov
push
int3
pop
sbb
jmp
fstp
inc
cmp
loopne
test
mov
xchg
mov
push
out
mov
cmp
inc
jmp
mov
lcall
or
push
aam
popf
pop
mov
sbb
add
test
jo
pop
shlb
adc
push
inc
and
test
sub
pop
clc
lret
ds
ljmp
adc
jl
into
andb
das
and
mov
xchg
sbb
push
or
push
adc
sbb
inc
int
mov
std
add
fwait
test
adc
push
test
movsl
inc
xor
adc
enter
push
xchg
jcxz
inc
mov
push
xchg
cltd
daa
ja
dec
adc
out
or
mov
add
cmp
rorb
fstpt
scas
xchg
mov
mov
pop
hlt
add
lahf
cmp
mov
imul
arpl
xor
inc
cs
inc
and
cld
push
in
ja
ds
jp
shlb
pop
or
xchg
cltd
jecxz
shll
jne
ret
push
jp
adc
adc
loop
lods
and
xlat
mov
cmp
mov
mov
xchg
out
shlb
push
loop
jbe
xchg
push
jnp
inc
push
adc
fwait
cmp
stc
ja
mov
or
or
mov
xor
mov
iret
insb
cmp
dec
mov
xchg
mov
cmpsl
sub
xchg
mov
dec
popf
pop
xchg
or
repz
cs
xlat
fsubp
mov
mov
mov
or
sub
dec
sbbb
push
sub
int
scas
mov
jmp
jne
dec
dec
lcall
stos
push
add
inc
adc
cmp
cmp
fiadds
pusha
jbe
add
es
cmpsb
les
xor
dec
pop
ljmp
jne
aam
mov
movsl
or
flds
adc
popf
icebp
jno
push
pop
xor
iret
jo
icebp
jno
aam
pop
sbb
outsb
fistl
hlt
pushf
and
orw
scas
lods
aad
insb
addb
dec
clc
or
sub
or
cmp
sbb
dec
or
incl
call
pop
or
push
inc
icebp
push
mov
inc
jl
cltd
ret
cmpsl
daa
push
cmp
dec
push
lcall
cltd
rcr
xchg
arpl
jmp
mul
je
loop
in
push
stos
mov
push
push
jbe
push
mov
add
or
or
xor
ret
jl
mov
xchg
xchg
cld
xchg
out
sar
out
lea
icebp
cmpsl
xlat
push
jecxz
jo
mov
cs
inc
leave
stc
mov
bnd
sbbb
push
lret
repnz
in
sti
add
add
adc
push
data16
sbb
xorb
push
dec
lods
insb
fbstp
push
insl
xchg
xor
shl
pop
push
sbb
insb
je
mov
push
and
test
pop
and
dec
sbb
lods
xchg
mov
mov
mov
ds
popf
mov
and
leave
or
subl
stos
test
xchg
pushf
cmpsb
mov
fisubs
outsb
jnp
push
jge
or
jge
jnp
sahf
mov
rep
cmp
enter
or
cmp
mov
sbb
cmpsl
out
pop
outsl
push
outsb
inc
sub
jnp
and
pop
cmp
dec
sbb
in
fwait
sbb
pop
loop
icebp
mov
adc
jbe
fsubrl
push
aas
mov
stc
mov
inc
js
and
mov
repnz
add
jb
dec
lods
mov
xor
mov
cmp
add
push
dec
addr16
add
lret
jno
xchg
lret
loope
mov
sarb
xor
insl
out
push
sub
pop
sti
vandnpd
xchg
into
push
jo
cmpsl
or
sarb
mov
or
xor
dec
int
sahf
in
add
cmc
je
cmp
test
cmp
cmp
add
push
inc
push
xor
inc
mov
sahf
xchg
mov
sbb
fldl
inc
mov
movsb
xchg
in
xor
lcall
movsb
icebp
repz
addr16
push
insl
mov
jne
mov
cmp
out
xor
hlt
cmpsl
jbe
js
lock
inc
pop
and
push
das
add
xor
inc
sahf
or
mov
sbbb
inc
js
push
inc
cld
loopne
add
pop
cld
ja
cmp
pop
pop
jns
enter
mov
sbb
jne
cs
sbb
xchg
jne
jmp
add
in
adc
cwtl
sub
in
xor
addr16
xchg
push
dec
ret
mov
cmp
out
aaa
pop
or
xchg
mov
icebp
sar
fiaddl
jle
sbb
or
xchg
inc
iret
je
test
cmp
out
pop
jbe
shll
add
aad
push
cmp
in
add
inc
inc
mov
sbb
mov
iret
jge
das
xchg
cmpsl
sbb
adc
add
pop
iret
mov
test
or
adc
cmp
fwait
stc
test
test
sbb
inc
xchg
js
cmp
into
inc
pop
mov
mov
pop
inc
in
jns
dec
cmp
cmp
imul
or
adc
popa
mov
xor
ret
adc
pop
jg
fwait
dec
push
fbld
test
pop
add
lods
test
add
dec
std
or
ljmp
imul
mov
mov
jl
pop
xor
repz
or
data16
mov
lea
adcb
int3
add
jmp
test
and
push
jb
or
cmp
xchg
mov
and
mov
fs
pop
mov
flds
fdivrs
push
jecxz
mov
or
sarb
cs
andb
repnz
pusha
scas
mov
or
lret
out
mov
stos
jne
inc
xchg
push
add
shlb
mov
divb
cwtl
add
rcll
adc
cmpsb
shr
pop
dec
ja
cmp
sub
loop
andb
cwtl
jo
iret
sub
adcb
add
fbstp
fsub
mov
jp
cmp
or
xor
xor
dec
mov
cld
cmc
jo
adc
test
jne
xor
jb
and
sub
sub
cltd
out
fimull
fsubrs
ja
fistpll
loope
cmp
nop
pop
and
adc
push
shlb
inc
sub
loope
shll
mov
jmp
push
push
jne
fcomps
stos
push
imul
lcall
das
test
cli
ds
inc
cmp
and
and
mov
push
xor
fistpl
lods
mov
and
popl
repnz
mov
push
fists
mov
outsb
cmp
inc
subw
aas
sarb
sub
push
out
and
loop
mov
xor
in
mov
mov
pop
mov
pop
mov
ffree
dec
iret
mov
cmp
enter
in
xor
adc
xchg
and
ret
orl
xchg
push
sti
nop
inc
adc
aad
xor
int3
push
popa
fcom
push
mov
cmp
decl
sub
adc
insl
out
stos
cmp
mov
mov
out
int
xchg
cs
ret
pop
sbb
shlb
stc
ret
cltd
inc
cmp
pop
icebp
add
std
pop
fcoms
push
testl
mov
ljmp
lcall
and
rcll
xor
pop
test
call
out
pop
pop
hlt
jmp
jne
leave
pop
push
xor
xor
push
out
add
mov
pop
dec
push
lods
lock
inc
jp
hlt
jp
inc
mov
inc
ds
jb
ja
inc
xor
lret
xabort
pop
ret
jle
lods
std
mov
in
loopne
lock
cld
int
mov
add
sbb
and
mov
push
dec
mov
loopne
orb
in
stos
add
xor
jae
sahf
push
pop
pop
test
push
fldcw
add
mov
pop
dec
cmc
fdivrp
cmp
push
or
jge
hlt
pop
shll
cs
sub
out
xchg
scas
out
jns
gs
ret
stos
mov
cmp
ret
out
gs
xor
add
xchg
and
mull
adc
sbb
mov
sbb
push
mov
repnz
pop
xchg
pop
jle
shld
push
jns
mov
je
cmp
pop
arpl
push
fcomps
loop
xchg
pcmpgtb
xchg
stc
add
repnz
out
dec
pop
test
aam
loope
arpl
adc
mov
push
push
xor
and
std
je
test
test
hlt
repnz
adc
inc
pop
out
and
push
add
repz
add
add
xchg
push
push
jmp
jbe
push
dec
pop
jne
int3
adc
fsubrl
mov
push
mul
cmpsl
push
xchg
and
inc
lret
repz
cld
cmp
jne
out
push
sarb
stos
fiadds
jecxz
mov
push
push
daa
pusha
add
cmp
and
sbb
xchg
lahf
lret
mov
fildl
add
imul
mov
or
add
cmp
cmp
xchg
and
popl
add
shlb
pop
inc
sbb
and
daa
imull
xchg
xor
xchg
xchg
or
aad
push
inc
xchg
cmp
jns
jmp
and
in
jmp
mov
ljmp
mov
test
pop
jno
add
xor
inc
jbe
jmp
adc
or
scas
mov
ljmp
mov
insl
jae
sbb
jns
or
popa
enter
imul
and
push
mov
sti
cmp
les
lods
out
cmp
test
cmp
in
xor
je
and
dec
add
iret
xchg
cwtl
iret
insl
negl
outsb
daa
sub
or
and
mov
inc
mov
or
sbb
adc
adc
lcall
adc
mov
push
xlat
push
xchg
gs
lahf
sub
or
movsb
mov
cmp
cmp
aad
add
pop
xor
popf
adc
lea
and
push
jge
add
daa
bound
fmull
js
dec
pushl
push
inc
dec
lahf
sbb
jbe
push
leave
stos
pusha
fistpl
mov
mov
not
inc
leave
mov
pop
cltd
test
push
sbbl
cmpsl
repnz
sarl
test
add
jp
mov
popf
lods
daa
mov
sub
xchg
lock
mov
push
in
mov
leave
in
into
mov
pop
sbb
lret
jecxz
aam
mov
outsb
jecxz
scas
fisubrl
mov
dec
dec
scas
rcrl
fmuls
jmp
stc
mov
or
add
and
outsb
in
mov
pop
push
jo
dec
add
leave
pop
dec
dec
mov
cmc
and
dec
sbb
ds
stos
cmc
sub
test
mov
mov
sub
mov
loop
xchg
in
inc
dec
adc
fsubrs
inc
sub
jbe
icebp
xchg
xor
inc
mov
jmp
jp
adc
pushf
mov
ljmp
das
mov
clc
int3
int3
aam
jle
pop
pop
enter
icebp
dec
rorb
aad
in
cmpsl
jl
fidivrs
xchg
pop
mov
into
rorb
and
or
loop
les
pop
xchg
sbb
iret
xlat
leave
push
dec
loop
addl
lock
ret
fucomp
add
mov
out
push
jne
lahf
sahf
xchg
fsubrs
pushf
mov
xor
popf
fidivrl
out
std
pop
ja
dec
mov
addb
test
popf
pcmpeqw
push
ss
icebp
xchg
popf
hlt
dec
es
ss
aad
and
dec
or
fistps
lock
outsl
jmp
inc
test
xchg
mov
and
out
push
sti
inc
xor
pop
hlt
in
jns
test
xchg
ret
cmpl
mov
orb
mov
les
and
cmp
xor
pop
mov
sarb
mov
addr16
xchg
mov
daa
pop
xor
sbb
dec
iret
push
rcrb
gs
xchg
in
inc
jmp
sar
lea
pop
stos
push
mov
cmc
jae
push
int3
ficompl
xchg
pushf
mov
sbbb
faddl
inc
jb
push
push
dec
fcomi
sub
and
dec
cmp
sbb
int
in
or
in
int3
insl
xor
cltd
xchg
xchg
ja
push
cltd
movsb
cmp
mov
fstpt
mov
movsl
sbb
mov
add
pop
stos
jecxz
arpl
inc
daa
mul
cmp
movsl
jae
leave
mov
fnsave
sbb
adc
cmp
or
pop
or
xor
and
inc
fisubl
shll
cltd
lods
mov
xchg
inc
or
lock
cmp
dec
push
aas
hlt
dec
popf
mov
in
dec
sti
cltd
ret
imul
ja
dec
xor
cs
nop
and
xchg
cmp
fimull
call
pop
lret
mov
dec
xor
je
arpl
mov
push
iret
push
in
mov
mov
mov
roll
into
and
das
push
xchg
or
outsb
adc
lret
stos
imul
push
cmpsl
jbe
repz
push
push
jns
cmp
mov
mov
pop
push
test
cmp
vorps
xor
jb
pop
xor
ss
push
cltd
pop
pop
fldl2t
push
mov
xor
jg
dec
lds
rol
sti
in
pop
push
sub
mov
stos
fimull
push
fists
xor
in
or
repnz
dec
add
sti
fisubrl
xor
aad
sub
shlb
push
cmc
movsb
addr16
xchg
js
add
xchg
mov
in
xor
inc
sub
out
add
xor
lret
mov
cmc
pop
fs
jae
incb
and
leave
jmp
add
fbstp
ficoms
xor
push
dec
mov
nop
ret
loop
inc
test
jg
pop
dec
xchg
insl
cli
lahf
mov
cmp
or
push
push
inc
jns
sbb
ret
mov
in
fmull
es
dec
out
out
in
stos
push
test
adc
mov
push
or
mov
lea
aad
mov
xchg
pop
mov
jo
xor
clc
std
xchg
xorb
sub
adc
sbbb
xchg
jo
lock
xchg
lahf
jg
cmp
fidivrs
lret
std
gs
push
inc
daa
mov
mov
ss
sti
fucomp
inc
rcr
mov
inc
call
or
imul
xchg
adc
xchg
mov
dec
sbb
cmp
mov
mov
std
loope
das
js
jge
insl
mov
les
les
gs
dec
ja
pop
popa
jecxz
mov
je
cld
fnstcw
or
lret
testl
adc
dec
pop
add
leave
or
leave
jle
inc
jp
movsb
loop
std
sarl
das
push
cmp
pop
pop
ss
cmp
les
lds
pop
mov
scas
add
cmp
insl
test
mov
cmp
or
roll
std
imul
mov
jb
or
outsb
out
arpl
mov
std
mov
cld
popf
aas
das
int
es
loopne
jmp
cmp
fisubl
xor
add
aaa
mov
dec
or
xchg
stos
push
pop
adc
xchg
and
lret
xor
js
hlt
ret
negl
and
sarl
jno
daa
mov
les
fdivl
adc
adc
insl
inc
cmp
or
addl
je
sbb
sub
imul
pop
ret
push
out
pusha
mov
lret
mov
or
out
fcom
fistl
ja
sub
lds
pop
mov
mov
notl
aas
cli
sbb
mov
rolb
pop
mov
enter
ljmp
out
push
or
shrl
fsubrs
dec
cmp
stc
orl
push
shll
pop
xchg
pop
pushf
bound
or
adcl
test
xchg
addr16
add
or
mov
xorb
js
pop
sbb
sub
test
sti
xchg
dec
add
pop
cmp
in
std
dec
jnp
test
es
pop
xor
iret
jmp
aam
outsl
push
push
pusha
and
jle
loopne
push
mov
jo
adc
ror
mov
push
insb
arpl
mov
mov
aam
repz
or
movl
repz
xchg
insl
test
push
sub
in
and
pop
jecxz
or
int3
mov
jp
xchg
std
in
jno
out
fists
mov
adc
fbstp
pop
sub
or
mov
mov
cmpsb
inc
cld
in
mov
out
fnstcw
jno
sub
mov
jmp
or
fnclex
adc
shl
adc
adc
out
mull
cmc
jnp
cld
in
test
jl
das
sahf
sbb
rcrl
pop
mov
pop
adc
mov
jb
sub
movl
add
dec
insl
fsts
shll
dec
cmp
repz
and
mull
sahf
and
jno
scas
out
jg
mov
out
aaa
push
insb
or
pop
imul
mov
cmp
mov
sub
cmpsl
xlat
mov
cs
dec
inc
lds
arpl
mov
loop
out
addr16
fstpt
in
int3
lahf
mov
xor
adc
mov
push
xchg
cmpb
jae
cmp
dec
mov
in
and
dec
mov
jge
sub
adc
mulb
adc
pop
push
xchg
inc
sub
sub
mov
in
pop
sbbl
outsb
push
jecxz
push
ds
pop
push
jo
or
lahf
xchg
call
pop
sbb
les
das
outsb
movsl
push
mov
inc
sbb
sti
call
mov
in
cli
repz
fsubs
push
aad
adc
pushf
sbb
nop
fadd
lods
imull
xchg
pop
cmpsb
les
aas
insl
push
jecxz
xchg
enter
test
pop
aas
cmp
dec
push
sub
pop
rcr
stos
mov
push
or
dec
dec
lock
mov
push
jne
or
sbb
jns
jp
fsubrs
cmp
int3
dec
enter
movsl
negb
pusha
dec
cld
bound
jecxz
test
or
outsb
ret
das
xor
loope
cltd
dec
icebp
fwait
and
push
dec
xor
mov
faddl
ss
and
mov
repnz
xor
sub
hlt
push
in
mov
xchg
push
xor
mov
mov
addb
idiv
in
movsl
hlt
inc
jns
xchg
ret
cmp
and
fcmovb
cld
cmp
lret
leave
imul
jnp
rcl
aad
and
or
sub
ds
fisttps
adc
aam
ret
dec
pop
mov
sbb
or
push
add
jecxz
xlat
or
mov
in
fstpt
imul
ljmp
lahf
adc
mov
bound
ljmp
sub
and
sbb
cs
dec
jecxz
and
out
sbb
add
pop
or
in
mov
insb
xor
push
test
mov
mov
aaa
inc
daa
xchg
pop
das
push
jle
xchg
scas
xchg
lcall
movsl
es
mov
lds
aad
lods
cltd
or
jbe
lret
mov
out
or
popa
push
inc
push
sub
iret
xchg
mov
push
add
or
cmpsl
ret
xlat
sbb
push
sub
push
xchg
sbb
sub
testb
inc
jecxz
ret
mov
movsl
inc
mov
jbe
sub
push
add
mov
test
repz
xor
lahf
test
mov
mov
add
adc
es
push
ljmp
xor
or
cmc
leave
mov
pop
sarl
jl
fsubrl
into
lret
cmpsl
iret
mov
mov
add
mov
enter
ljmp
jg
ss
shl
popf
dec
pop
mov
xor
add
inc
sbb
iret
sub
pop
sub
subl
es
sti
popa
push
inc
xor
out
mov
sbb
push
inc
insb
add
mov
and
fwait
out
push
inc
lock
stos
andl
inc
push
lret
jecxz
cmp
xor
xor
pop
mov
adc
sbb
bound
and
lods
and
in
push
scas
mov
pop
push
add
test
in
jecxz
arpl
daa
lahf
sub
mov
dec
cmp
xchg
cmp
xor
pop
mov
and
mov
ds
and
mov
and
cmp
shlb
fsubrl
lret
sub
push
xchg
jmp
sbbl
imul
outsb
jnp
jb
out
mov
dec
loop
push
test
hlt
fcoms
xchg
popf
in
push
mov
cwtl
jmp
es
mov
std
mov
lods
fbstp
addr16
hlt
jbe
in
iret
out
mov
mov
pop
push
sub
mov
fnstenv
arpl
imul
jne
dec
subl
repnz
pop
inc
ds
jmp
lods
push
test
leave
pop
cltd
fs
fs
and
pop
stc
cmc
push
aaa
enter
popf
or
cld
lret
mov
scas
outsb
daa
ss
scas
pop
stos
dec
or
jns
fstpl
inc
pop
dec
dec
xor
sub
lahf
xor
push
clc
mov
adc
sub
inc
lcall
adc
sarl
mov
sbb
sbb
in
sub
push
ja
stos
pop
data16
int3
mov
stos
mov
repz
inc
pop
stc
rcl
mov
movl
pop
sub
push
jb
je
xchg
repz
pop
insl
ret
jno
and
add
cmc
xor
add
pop
imulb
enter
mov
in
sub
test
or
shl
mov
or
in
jo
and
fmul
mov
into
das
pop
inc
into
roll
sbb
ja
adc
loop
inc
es
lods
inc
clc
fucom
pushf
xor
push
push
cmp
das
int3
dec
pop
movsl
mov
xchg
cmp
jbe
jmp
pushw
cmp
xchg
fcmovnbe
clc
punpckhbw
mov
insb
dec
sbb
cs
xchg
inc
add
cs
ja
addr16
mov
insb
test
insb
xor
xchg
xor
cmc
jo
and
arpl
test
mov
mov
jle
sub
push
dec
and
fwait
jmp
lahf
in
add
popf
ret
mov
outsb
push
cwtl
sti
ds
add
pushf
aam
jbe
int
enter
movsb
std
add
ret
inc
decl
cmc
pop
scas
xchg
mov
mov
sbb
repnz
lock
jmp
ret
pop
xchg
sti
push
aad
mov
and
lock
rep
dec
xchg
xor
jae
push
jge
sbb
insl
inc
icebp
pop
shrb
pushf
mov
mov
xlat
lahf
mov
adc
or
test
mov
rclb
decb
test
mov
outsl
out
pop
xchg
add
scas
flds
add
cmp
xchg
and
mov
dec
or
insb
sarl
insl
sub
imul
popf
loop
xchg
fldenv
jle
arpl
fnsave
push
aaa
or
out
jmp
adc
push
stos
out
loop
jo
dec
arpl
fwait
jmp
lea
cmp
rep
repnz
test
cmp
stc
push
lock
sub
fisubs
inc
int3
js
push
cld
push
cmp
sbb
and
out
out
dec
inc
add
mov
test
pop
cmpsb
lret
arpl
push
stos
adc
xor
lock
clc
mov
bound
into
loopne
jnp
inc
dec
leave
popa
mov
out
mov
push
movsl
pop
test
push
push
pushf
in
lock
adc
dec
sub
daa
and
cmpsb
daa
out
lea
or
mov
mov
mov
test
jp
pushf
fs
adc
push
or
stc
add
lock
jnp
jns
imul
fistpl
cmp
fs
cmpsb
push
pusha
xor
inc
fisttpl
cmp
sahf
loope
push
orb
adc
aas
repnz
aas
xchg
dec
stos
and
out
dec
vaddps
aas
outsb
pop
les
sbb
add
setno
fimuls
shr
mov
jp,pt
mov
dec
lea
mov
addr16
mov
shrl
enter
arpl
imul
lds
xor
sarb
mov
popa
jge
mov
add
adc
leave
jge
mov
or
aaa
andb
out
cmp
js
sbb
adc
mov
pop
ret
aam
mov
cmp
std
data16
clc
push
add
push
push
or
mov
sarb
clc
ja
cmp
cmp
pop
movsb
sbb
sub
cld
push
popf
les
mov
rcr
mov
mov
lock
xor
mov
jg
lock
push
xor
popf
mov
popf
ljmp
xor
pop
cmp
lock
and
dec
insb
ss
in
repnz
lods
out
cltd
dec
dec
mov
testb
and
mov
sub
icebp
ficoms
fisubs
xchg
mov
xchg
add
mov
or
arpl
jb
xor
sbb
ljmp
ljmp
call
and
daa
jmp
xor
movsb
pop
or
lcall
gs
test
jecxz
dec
inc
scas
adc
lods
test
mov
roll
leave
out
mov
mov
pop
sub
inc
aas
loop
xor
mov
add
sbb
popf
in
pushfw
jl
cltd
push
fcomip
xchg
shlb
push
pop
push
xor
cmpsb
dec
xchg
out
cmp
jns
add
or
dec
adc
inc
sub
popf
popf
test
xor
xor
icebp
mov
cli
dec
cld
push
in
or
pop
fmull
inc
repz
add
mov
xchg
imul
jle
sub
xor
push
in
pop
and
jnp
adc
dec
jne
sbb
push
cmc
dec
lret
inc
shr
jge
mov
popa
or
subb
add
pop
cmp
lock
std
xchg
sub
fnstcw
inc
add
cmp
dec
call
cmpsl
xor
pop
push
lahf
leave
fwait
dec
mov
out
xchg
xor
subb
imul
pop
pop
inc
into
fstpl
jno
repnz
cmc
imul
popa
inc
movsl
ret
lahf
mov
mov
add
push
adcb
push
js
add
push
xchg
sahf
and
cmp
or
mov
movsl
jecxz
cmp
addr16
hlt
outsb
xchg
jne
xor
mov
push
adc
xchg
mov
add
scas
inc
sti
xchg
out
sti
stc
repnz
push
cmc
inc
mov
cmp
jb
xchg
push
push
xorb
in
std
lock
enter
and
cwtl
dec
jne
pop
insl
into
iret
shl
sar
adc
stos
jle
or
jmp
ds
adc
flds
lods
xor
sbb
add
popa
mov
leave
and
xor
fwait
xor
loop
jns
dec
scas
and
and
push
adc
cltd
dec
push
mov
nop
aam
into
subl
jnp
sbb
je
mov
add
jmp
cmp
cmp
and
lret
add
xor
inc
or
adc
pop
movsl
fs
fbstp
xchg
incb
jmp
popf
xor
push
scas
adc
or
mov
decb
in
mull
push
xchg
std
push
stc
jmp
lcall
js
mov
movsl
dec
add
xor
jmp
sbbl
xchg
jns
inc
mov
dec
xor
pushf
dec
jecxz
sub
xchg
push
jmp
xor
inc
movsl
xchg
loop
push
cld
pop
and
inc
sbb
or
mov
mov
sbb
jge
inc
jbe
mov
pop
shrb
adc
pop
sub
aam
test
mov
inc
imul
data16
cs
sub
and
jnp
add
cmpsb
jnp
repz
mov
rorb
mov
lcall
add
jp
sub
test
push
add
mov
jb
scas
push
insl
cmp
add
mov
xor
insb
fcmovbe
or
out
jbe
jmp
xchg
lret
inc
scas
push
sti
sub
ret
nop
leave
mov
pop
dec
sti
dec
jecxz
mov
sub
call
mov
cmp
xchg
mov
test
mov
push
and
jne
cmp
maskmovq
imull
add
leave
das
insb
pop
mov
out
loopne
add
test
loop
and
repnz
call
cmp
and
imul
pop
jmp
lcall
push
push
push
nop
pop
inc
pushf
dec
mov
popf
lock
into
sub
fnsave
xor
mov
sahf
push
cmp
or
sahf
outsl
inc
jmp
lret
push
cmpsl
push
fldl
test
lret
arpl
xor
mov
ljmp
sbb
lods
xchg
jmp
stos
jnp
inc
enter
xchg
imul
in
lcall
add
imul
xchg
divb
out
jecxz
pop
jno
sub
mov
push
mov
mov
add
scas
mov
jne
rclb
or
jp
lret
sub
fs
mov
jb
push
pusha
lea
nop
das
push
fbld
adcb
insl
inc
jp
loope
add
je
pop
shlb
dec
mov
adc
push
cmp
or
pop
adc
sti
jne
stos
in
insb
xor
cmp
mov
icebp
cwtl
out
movsl
sbb
pop
outsl
lds
sub
push
shrb
push
xlat
sub
push
lods
xchg
filds
imull
inc
icebp
push
cmp
add
aad
ja
int
js
loope
sub
lret
jle
mov
dec
push
jg
mov
sbbb
cmp
lret
sbb
inc
lds
pop
scas
std
push
cs
or
dec
jnp
mov
sub
or
inc
lock
fisttpll
xchg
stc
mov
aad
shrl
std
adc
xlat
mov
outsb
ss
jo
popf
add
insb
or
pop
cmp
pop
and
sub
inc
inc
iret
add
dec
clc
inc
in
imul
fsub
lock
adcb
jbe
dec
mov
bound
xchg
fwait
gs
xcrypt-ecb
cmpsl
int3
xchg
hlt
nop
or
es
adc
cmp
lahf
xchg
push
and
sbb
shr
jbe
xchg
test
add
insl
cmp
xchg
xchg
and
loopne
mov
mov
adc
sbb
imul
and
xor
or
sbb
clc
outsl
or
adcb
repz
pop
into
test
sbb
dec
icebp
mov
daa
mov
xor
fsubp
loope
in
into
imul
leave
dec
insb
jne
cltd
xor
jg,pn
mov
cmpsb
sub
adc
jl
jle
inc
jns
icebp
push
popa
mov
ja
das
lahf
setne
mov
sbb
push
das
mov
popf
push
jg
push
jnp
xor
rolb
sbb
mov
push
and
imul
out
mov
fcmove
shrb
xchg
pusha
add
test
push
sub
dec
lcall
mov
roll
ss
adc
mov
push
cli
mov
pop
dec
fisubs
roll
das
fimuls
push
aaa
mov
test
adc
icebp
testb
cmpsl
push
insb
pop
pushf
and
into
fs
es
mov
in
inc
fcoml
or
es
xchg
sbb
pop
lock
lahf
out
mov
pop
loopne
dec
shlb
ss
scas
cmp
sbb
mov
or
xchg
adc
test
aam
xor
popf
loopne
ja
cmp
xor
cltd
fisttpl
out
les
push
loop
pop
xchg
rcll
inc
jno
xor
jge
adc
add
loope
sbb
mov
lods
orb
cmp
call
sub
add
cmp
or
imul
xor
mov
arpl
movlps
insb
jo
mov
add
nop
in
enter
insl
out
or
outsb
inc
cs
mov
xchg
es
imul
js
xchg
jmp
loopne
lahf
sub
gs
lret
push
pop
movl
xlat
lds
repz
cli
ljmp
fistl
push
cmp
cmc
icebp
add
in
sbb
inc
test
fbld
lea
call
add
inc
loopne
pusha
mov
shll
inc
nop
popf
cltd
test
scas
cmpsb
cwtl
je
push
icebp
test
fistps
xchg
or
shll
dec
test
jmp
cmp
out
scas
mov
push
rorb
jne
faddl
ja
loopne
mov
fadd
icebp
mov
roll
or
fisubl
lahf
mov
leave
test
cmp
sub
pop
cmpsl
ljmp
rol
mov
or
fnstenv
data16
or
mov
fsubl
leave
xchg
lods
cmp
insb
stos
push
fimull
mov
inc
sbb
inc
test
dec
loop
lods
sub
jge
movsl
ss
xchg
lahf
inc
fiadds
and
pop
add
and
adc
das
push
fsubrl
scas
cmp
int
out
sahf
in
lret
push
mov
outsl
aam
mov
push
fiadds
sub
mov
inc
and
push
js
adc
es
mov
lret
or
dec
push
cmp
jge
jg
dec
test
imul
push
pop
xor
sar
mov
pop
sbb
and
xorl
xor
mov
into
pop
and
mov
mov
inc
xor
int3
data16
mov
outsb
jecxz
ljmp
xchg
leave
sbb
pop
sbb
lods
mov
sarl
test
iret
movb
pushf
xor
pop
in
add
xor
mov
rorb
add
imul
cmc
jg
out
inc
push
mov
popa
lret
adc
cmpsb
sub
sub
inc
or
adc
cmp
add
daa
mov
in
repz
mov
ffreep
repz
mov
hlt
dec
cli
xor
cmp
xor
pop
adc
fdivrs
loop
jno
dec
and
sbb
or
inc
outsl
xchg
push
pop
xor
pusha
inc
imul
rorl
adc
shl
pop
xchg
popa
xor
mov
inc
incl
ds
movsb
ss
mov
inc
mov
dec
js
loop
push
ja
div
jb
mov
or
sub
jge
xor
sub
xchg
cmp
popf
call
leave
faddl
or
cmp
inc
popa
faddl
adc
lret
add
adc
stos
movsb
push
fwait
in
or
fistpll
loope
lods
jl
xor
lock
or
aad
or
lea
pop
scas
aas
js
es
add
inc
icebp
test
loopne
loopne
mov
pop
dec
and
push
nop
loope
xor
or
mov
ret
cmp
jo
inc
adc
add
insb
fsubr
or
push
jae
into
gs
jae
cmpsb
xchg
inc
inc
jmp
mov
or
xchg
push
test
jo
cmc
cwtl
xchg
mov
push
idivb
mov
outsb
in
icebp
jnp
push
out
mov
ss
mull
pop
sub
popf
iret
lods
into
xchg
push
mov
inc
xchg
popa
fwait
stos
sub
sahf
daa
into
insb
mov
xor
xchg
xor
insl
and
adc
les
test
loop
mov
lcall
xor
hlt
push
inc
incl
scas
xchg
arpl
push
outsb
jno
jmp
push
pop
adc
stc
adc
je
jp
jmp
jmp
out
add
add
dec
clc
xor
mov
nop
inc
iret
sub
out
hlt
jae
popw
sub
jle
cld
mov
adc
pop
mov
les
push
mov
or
imul
xor
jge
jge
fldenv
bound
xor
icebp
and
and
mov
arpl
retw
adc
mov
mov
pop
cmp
and
in
jl
testl
aad
xor
ss
mov
rcll
add
movsl
ss
add
xor
cmp
push
fwait
int3
mov
loope
sahf
push
loope
into
cmp
xchg
xchg
roll
push
sub
outsb
mov
bound
push
addr16
xor
addr16
xlat
stc
lds
dec
sub
mov
cs
orb
mov
mov
xchg
adc
dec
insl
mov
enter
cmp
orb
aaa
push
imul
arpl
dec
mov
cwtl
lock
lock
jl
pushl
in
xchg
jmp
pop
fmuls
and
add
ljmp
test
in
sbb
test
imul
jmp
arpl
jl
mov
out
aam
leave
popa
xorb
sub
xchg
leave
out
push
pop
pop
jne
pop
cmc
cmp
daa
roll
mov
lret
scas
pop
out
or
out
pop
jo
test
cmp
jo
or
test
cmp
fwait
pop
div
rorb
aas
jno
ljmp
data16
and
inc
mov
ja
in
mov
xchg
fucomip
xchg
sub
rorb
mov
mov
cmpsl
shll
push
inc
es
sarb
lods
sarb
cmp
inc
lods
sbb
imulb
shlb
xor
lock
popa
fidivrl
mov
xchg
out
dec
mov
mov
cmpl
mov
pop
sbb
push
fcomi
daa
in
adc
inc
jge
iret
xlat
inc
xorb
nop
icebp
aad
cmpl
mov
sarb
or
outsl
bound
jns
scas
push
push
cmc
and
sbb
adc
sub
sahf
cltd
dec
xor
testb
xchg
push
or
jo
aaa
dec
sbb
xchg
movsb
lds
and
mov
cmp
out
dec
cmp
mov
fcoms
call
jnp
mov
rcrl
push
and
mov
lret
les
outsb
mov
sub
std
add
pusha
dec
fldt
sbb
mov
jmp
and
popl
and
mov
lret
inc
sub
adc
jmp
pop
xor
cld
js
push
xchg
jne
mov
jbe
cmp
jnp
push
inc
jecxz
adc
push
stos
lock
popf
icebp
dec
roll
sti
cmp
add
mov
dec
cltd
cmc
jo
sub
jae
loop
xchg
loop
sbb
add
add
out
jp
inc
mov
xor
mov
jbe
inc
sub
adc
sub
xor
jnp
inc
inc
mov
xchg
mov
xor
xor
sub
fimuls
ljmp
loope
add
fiaddl
ret
roll
les
stos
loope
clc
mov
sub
inc
push
adc
inc
jge
insl
xor
icebp
gs
nop
iret
pop
pop
inc
add
dec
test
jg
sbb
jecxz
cmp
cmc
fidivrs
arpl
test
test
push
and
cwtl
add
les
inc
jge
push
push
push
mov
ljmp
push
in
je
xchg
aam
ja
or
sbb
pop
test
jmp
gs
in
mov
les
jmp
sub
mov
inc
mov
jle
or
push
lods
cmc
repz
add
ljmp
loopne
sbb
popl
mov
mov
test
sub
jne
inc
fidivrs
ret
sti
and
jnp
fcomip
mov
mov
ds
outsb
adc
pop
cmpsl
push
xchg
popa
jle
adc
and
mov
xor
fsubrs
adc
dec
out
into
xchg
icebp
cs
mov
insl
and
jo
inc
pop
push
mov
outsb
lret
in
add
jmp
repnz
or
jge
push
xchg
and
stos
filds
addr16
sbb
push
aam
into
mov
mov
mov
clc
jg
inc
in
mov
cmp
test
add
push
jnp
pop
xlat
jnp
mov
loop
pop
mov
lds
sbb
or
xchg
into
clc
mov
pop
iret
xchg
stc
insb
fidivrl
fisttpl
pop
xchg
test
pusha
dec
push
cmp
xchg
xchg
cmpb
mov
inc
in
insl
push
ret
loop
popf
mov
mov
dec
in
fs
cwtl
shr
mov
movsb
andl
mov
std
ds
jb
mov
xchg
dec
cmpsl
pop
sub
pop
ja
mov
mov
test
mov
xor
or
mov
jnp
test
test
sarl
lods
insl
pop
mov
or
aaa
push
inc
add
aas
cmc
in
dec
jge
push
pop
stc
cmp
mov
inc
faddl
mov
mov
loope
rcr
nop
jmp
push
jns
fisttps
jmp
push
lds
cmpb
test
in
aas
sti
mov
ror
jno
xchg
into
imulb
pop
mov
cmp
push
or
mov
test
mov
push
lds
xchg
xor
ret
sub
sub
aad
sti
rorl
sub
push
xor
xlat
add
cs
ljmp
push
add
mov
scas
mov
ljmp
sub
and
and
adc
pop
int3
pop
ds
cmpsb
roll
dec
loopne
pop
push
sbb
xchg
add
imul
js
es
sub
outsl
lret
lods
test
mov
jno
add
in
inc
inc
add
jbe
in
jl
das
adc
xchg
cmp
mov
imul
mov
test
cmc
insl
dec
popf
lea
in
add
outsl
cmp
mov
and
fs
mov
sbb
mov
xchg
arpl
js
sub
lock
add
imul
test
jns
scas
mov
inc
push
inc
adc
sub
popa
popa
xor
pop
mov
and
cs
shr
lahf
pop
add
out
xchg
mov
stos
insl
test
mov
data16
sbb
je
cmpsb
cmp
push
add
cmp
xchg
aas
js
mov
fidivrl
pop
add
cmpsl
icebp
cld
lea
push
or
adc
dec
cmc
push
dec
test
popf
push
fdivrs
stc
mull
fwait
insl
lods
and
mov
and
rorb
adc
dec
daa
jge
or
mov
mov
test
repnz
decl
mov
sbb
cmp
int3
push
in
jbe
xchg
std
fists
outsl
push
or
mov
mov
xor
pop
fcmovu
daa
push
mov
aas
or
shrl
jae
insl
dec
xor
push
mov
cltd
into
push
mov
pop
movsl
push
and
inc
enter
clc
je
loope
call
addr16
ss
mov
dec
sub
nop
in
mov
mov
ljmp
add
jo
jbe
lods
cmp
testl
das
movsl
inc
add
jecxz
cmpsl
add
push
cmp
mov
lods
mov
mov
add
test
jl
fs
jns
adc
and
jg
sysexit
aad
inc
or
jmp
movsl
add
je
push
mov
and
mov
jmp
lcall
mov
mov
jp
push
cmp
gs
cli
iret
adc
adc
inc
add
add
repz
push
cmpsb
stos
xchg
rorb
adc
jb
sahf
inc
jb
inc
dec
push
aam
movsl
jmp
movsl
lret
mov
dec
xchg
bound
addr16
or
int
pop
inc
test
jl,pt
ja
mov
fwait
or
test
jb
and
dec
movsb
dec
cmpsb
leave
outsl
xchg
inc
mov
inc
maxps
fimull
sub
cmp
xor
mov
push
mov
xchg
mov
pop
movsl
pop
sbb
cld
xor
lds
sub
fcoms
cmp
nop
lea
cmp
cmp
and
jns
fstpl
sub
xchg
imul
push
mov
add
loopne
jmp
add
and
js
push
push
jb
lock
or
test
fiaddl
test
and
hlt
das
pop
cmp
push
mov
call
or
xchg
aaa
add
shll
int
sbb
mov
sub
xor
sub
xchg
jle
xor
sbb
mov
cmpsb
je
pop
cs
mov
xchg
rorl
mov
pop
dec
addr16
dec
mull
pop
andb
leave
lock
sbb
mov
and
inc
xchg
test
pop
mov
inc
lret
pop
sub
jge
sbb
xlat
in
mov
test
mov
xor
cld
sbb
adcb
push
cs
outsl
mov
pop
add
cs
xor
imul
stos
add
rol
push
xlat
jle
fnstenv
adc
mov
inc
dec
lods
jge
call
mov
std
sub
mov
loop
aam
incb
inc
mov
add
inc
nop
shll
insb
mov
mov
and
movsb
addr16
and
popa
outsb
fwait
into
scas
inc
adc
insl
mov
and
xor
shl
in
les
jecxz
outsl
aad
cs
or
sub
je
repnz
inc
push
dec
push
mov
call
sbb
addr16
js
pop
mov
jl
cmp
add
call
pop
inc
out
xor
and
in
push
and
fstpl
in
push
test
mov
leave
mov
sub
push
xor
fwait
cwtl
mov
add
sub
test
test
test
fistpl
dec
cltd
in
aaa
mov
pop
ds
lock
adc
mov
xchg
lcall
rcrb
xchg
jo
or
jne
ja
call
xor
push
bound
cmp
xlat
dec
popf
xor
loope
shll
mov
cmpsl
call
enter
addr16
cmp
mulb
testl
sbb
cmpl
pop
enter
push
cwtl
xchg
lahf
lret
cmpsb
rcrb
push
jmp
leave
push
adc
and
int
pop
fidivrl
call
cmp
pop
mov
into
and
jo
sub
aaa
cmpsb
ja
out
call
lahf
mov
mov
movsl
push
pop
push
mov
outsb
pop
clc
xchg
adc
xchg
ret
lret
aam
mov
inc
inc
jl
mov
push
cwtl
movb
iret
mov
aas
adc
and
cmp
adc
sar
int
les
or
add
lret
xchg
dec
adc
std
sbb
incl
in
les
jmp
or
sub
out
sub
pushf
dec
lods
add
pop
test
shll
stos
or
enter
inc
mov
cmp
adc
pusha
cwtl
push
push
ficoml
mov
fstl
inc
stos
cmpsl
aaa
push
loop
sub
sarb
cmp
cmpsb
cmpsb
xor
ffreep
pushl
cmp
out
jbe
nop
jg
mov
xchg
dec
mov
inc
xor
sub
imul
pop
push
mov
jb
jae
sti
fs
jle
mov
mov
lcall
push
into
test
jae
lods
mov
and
or
aaa
inc
js
push
cmp
jnp
inc
adc
jae
outsb
test
pop
push
mov
arpl
push
lret
in
and
mov
andl
cmp
and
push
shlb
cmc
dec
cs
fnstenv
movsl
aam
ljmp
cli
test
xchg
adc
mov
jnp
push
adc
dec
cltd
add
scas
call
push
add
xchg
push
inc
es
cmc
gs
cmp
ja
or
lods
shrl
repz
pop
add
mov
repz
xlat
mov
mov
je
std
push
hlt
cltd
inc
xor
faddp
lar
orl
mov
cmp
sbb
cmp
jl
enter
jge
mov
pop
scas
bound
inc
add
popa
lcall
iret
sti
dec
shl
sarl
dec
mull
fwait
add
test
mov
in
test
mov
push
ja
pusha
jnp
inc
push
push
das
jne
ja
jl
addr16
cwtl
stc
pop
mov
hlt
js
or
and
pop
jecxz
scas
fbld
add
jo
mov
nop
aaa
js
and
add
insl
lret
gs
leave
ds
cmp
mov
cmpsb
out
stc
jne
pop
mov
test
out
out
shlb
enter
adc
xorl
fdivrl
xchg
pop
out
pop
pop
in
pop
aam
mov
mov
ss
jbe
ljmp
mov
pop
dec
cmpsl
inc
scas
movsl
and
adc
jae
jle
pop
jno
xchg
mov
mov
ja
push
scas
add
lds
out
cltd
push
xor
and
movsl
enter
lock
loopne
out
adc
push
and
leave
test
jns
xor
in
outsl
rorl
sub
dec
rcrb
or
xor
repnz
push
imul
xor
arpl
xor
mov
xor
insl
adc
iret
cmp
incl
rcr
das
lahf
cmp
repz
stc
xchg
loop
sti
jmp
push
jle
test
sti
pop
ret
xchg
sti
clc
xor
lea
data16
rcrb
imul
addr16
mov
push
imul
dec
cmp
rolb
jbe
sahf
pusha
ds
inc
leave
add
sarb
lods
sti
sbb
xchg
mov
push
out
popf
pop
adc
int3
test
subl
loopne
mov
jno
cmp
xor
pop
cmpsb
lock
push
push
mov
shl
adc
dec
insl
jmp
mov
fists
inc
jbe
sbb
inc
in
push
jnp
bound
imul
jp
sbb
sub
mov
fst
sahf
jo
in
faddl
lods
adcl
mov
adcb
ljmp
mov
ljmp
mov
outsl
jg
ja
pop
fmul
cld
xor
es
std
filds
test
lds
out
cmp
das
inc
mov
lret
gs
lret
pop
test
sbb
and
outsl
addl
je
dec
dec
or
jae
mov
movntq
out
nop
xchg
imul
add
xchg
test
or
lahf
pop
sbb
rcl
mov
add
mov
push
push
xor
imulb
adcb
sub
xlat
in
in
jg
xor
push
sti
pop
mov
fistps
mov
pop
jbe
fimull
les
mov
test
dec
pop
shrl
mov
ss
and
add
sbb
mov
and
lret
inc
enter
push
insb
xor
outsl
lret
test
dec
bound
fmuls
mov
inc
xor
xorb
fsubrl
add
pop
out
cs
test
push
push
mov
dec
mov
sub
ljmp
inc
ljmp
push
push
mov
icebp
filds
inc
cld
fimull
cmpsl
les
das
int3
mov
lea
inc
mov
mov
repz
mov
cmp
iret
mov
movsl
mov
dec
push
test
jo
and
pop
loopne
rolb
inc
cmpsb
movsb
pop
out
pusha
data16
xchg
mov
mov
mov
adc
icebp
push
dec
pop
add
dec
jns
sbb
pop
jmp
inc
fisttpl
jne
mov
jmp
shrb
add
scas
xchg
or
leave
fdivs
mov
repnz
and
fimull
bound
add
sahf
xor
jle
inc
jns
add
add
arpl
hlt
push
push
cs
test
xchg
roll
mov
mov
popf
fs
sbb
inc
fstpl
sbb
dec
das
lret
repz
clc
sub
xchg
leave
inc
xlat
jae
das
sahf
sti
test
out
stc
shl
jle
es
push
gs
sub
and
mov
loop
xchg
jge
push
ficompl
jle
inc
add
or
add
gs
mov
dec
lret
jl
adc
nop
push
sub
int3
outsb
xchg
rcll
pop
sbb
mov
ja
mov
outsl
cwtl
mov
sub
jge
xorb
out
out
dec
jle
mov
int3
dec
sub
xchg
mov
scas
pop
xor
fwait
cmpl
pop
mov
sub
push
add
lcall
in
add
ud0
sbbb
aaa
push
adc
mov
jl
insb
out
enter
hlt
rcll
cmp
add
cmp
adc
xchg
xlat
notb
xchg
and
cmp
es
cmp
inc
cmpsl
mov
or
sub
clc
inc
xchg
mov
or
inc
test
fcomip
frstor
in
in
or
fildll
aam
rcll
cmp
hlt
pusha
push
out
sbb
loopne
fldcw
jb
shl
mov
pop
cli
mov
repz
scas
leave
adc
dec
into
push
and
jns
mov
out
imul
cmovbe
fwait
test
out
xor
pop
jns
pop
test
dec
jne
push
adc
dec
loope
mov
mov
mov
lds
mov
sti
cmpb
stos
test
iret
cmpsl
pop
popa
je
dec
popa
andb
in
and
adc
xchg
repz
cmp
loop
repz
mov
lcall
or
lahf
jo
add
xorb
xlat
inc
pusha
cmpsb
add
fwait
scas
or
mov
cs
fistpll
add
cmp
insl
adc
or
xor
sub
jl
inc
sbb
mov
jae
and
rol
jecxz
jae
stos
xchg
cmc
xchg
out
leave
or
fdivrp
jmp
mov
imul
sub
push
mov
add
in
jnp
or
jge
inc
and
imul
pop
or
data16
sbb
in
mov
enter
push
and
xorb
sahf
mov
fldcw
and
leave
in
jno
xchg
push
lcall
mov
cmc
xlat
jp
xor
pop
and
filds
and
movsb
pop
cmp
pop
aas
fs
je
jp
in
and
mov
sbb
mov
cmp
cli
dec
daa
cs
push
mov
pop
jno
push
fs
cmpsl
data16
lret
dec
or
cmp
int
lock
inc
mov
cmp
outsb
test
leave
jle
adc
sub
jg
je
movsb
cmpsl
dec
test
pop
sub
lods
cmp
push
aad
dec
ljmp
adc
jbe
into
and
or
inc
add
xor
loopne
and
jno
jg
mov
lock
ret
jmp
out
xchg
mulb
jns
clc
push
xor
fwait
sbbb
xchg
addr16
sub
test
mov
popf
call
dec
in
xchg
push
shll
testl
adc
mov
ret
test
int
loop
fists
jp
jl
pushf
insl
xor
mov
test
repz
mov
movsb
add
scas
push
jecxz
or
leave
xchg
push
adc
repz
inc
in
test
xor
push
mov
bound
push
push
lods
or
adc
jecxz
ja
cwtl
scas
xchg
cmp
jb
cmp
inc
dec
mov
hlt
es
call
in
xor
bt
xor
mov
lret
push
lods
dec
mov
push
jb
into
into
push
and
mov
ret
gs
and
loopne
xchg
movb
das
std
push
add
aam
pop
mov
ss
sub
xor
xor
add
in
js
or
faddl
jmp
movl
jge
xor
inc
fucomip
cmp
push
sub
lahf
mov
jbe
pop
and
push
or
negb
jmp
test
inc
cld
in
dec
mov
push
push
lods
hlt
dec
int3
popa
pop
cli
and
push
stos
aaa
lods
push
clc
popa
out
mov
inc
das
daa
std
stos
hlt
sti
pop
mov
imul
mov
pop
push
div
jae
fcompl
lds
dec
aam
clc
jne
pop
repz
jno
push
adc
cmp
pop
or
in
in
dec
jmp
jmp
and
jecxz
insb
push
jae
add
push
outsl
out
je
or
mov
jae
adc
sbb
dec
ret
xchg
lds
lret
xchg
nop
adc
xor
pop
xchg
mov
jg
mov
jl
push
mov
add
mov
and
mov
jmp
add
sbb
adc
pop
adc
out
enter
icebp
cmp
push
in
dec
mov
scas
or
hlt
aam
pop
rol
imul
jne
mov
push
outsb
insl
gs
and
ret
lds
lds
push
aaa
adc
not
sub
cmp
jno
add
jns
rcrl
scas
jg
pop
dec
aam
fadds
int
mov
sub
sbb
js
dec
cmpsb
lods
or
jbe
mov
or
cld
adc
ret
loop
adc
out
push
int3
mov
sub
ror
rcl
movsb
in
out
aad
stos
sbb
jg
je
popa
dec
push
lretw
loope
add
cmp
push
cmp
add
rorb
lock
cmp
mov
data16
js
push
xchg
xlat
mov
xor
jne
fstpl
or
or
jmp
jns
dec
shll
add
sbb
xlat
lret
scas
xchg
mov
push
in
sbb
ret
xor
sbb
js
pop
and
mov
in
mul
scas
add
pop
sarl
cvtps2pi
je
std
inc
adc
js
push
out
into
inc
xchg
faddp
add
aaa
mov
out
sbb
test
leave
inc
inc
pop
subl
fs
lds
xor
shl
jnp
and
adc
dec
cmc
jl
int3
int3
jp
pushf
xor
aam
and
push
int3
cmp
push
and
mov
add
pusha
sub
imul
adc
xchg
cmp
pop
jg
cmc
pop
mov
xor
jg
pop
sbb
les
ss
in
and
adc
ficomps
and
je
push
incb
sbb
ss
fwait
add
mov
or
and
mov
in
xchg
popf
nop
rcll
movsl
cmp
mov
sbb
xchg
movsb
push
jecxz
push
adc
popa
rorl
mov
mov
mov
dec
sub
and
mov
mov
lret
popa
int
and
out
ljmp
lret
into
pop
inc
mov
push
xor
mov
js
lcall
ss
jno
xchg
mov
rorb
adc
cwtl
je
mov
or
mov
cmp
jbe
out
ficomps
adc
stos
imul
and
adc
dec
mov
lock
jg
shl
or
inc
mov
xchg
in
push
roll
jge
push
push
popa
movsl
repz
fsubrs
les
ret
pushf
jl
jp
xchg
into
fcmovbe
leave
jns
xchg
jg
hlt
and
cmp
aaa
aam
call
rclb
xor
fstpl
mov
in
ffreep
int
fs
sub
fdivs
pop
test
imul
cmp
jnp
out
mov
ret
and
insl
mov
mov
xchg
mov
mov
dec
ds
lea
cltd
inc
cmp
scas
xor
movsl
lcall
cmpsb
clc
and
pop
adc
xchg
loop
xchg
dec
pop
adc
lret
add
outsl
and
pop
icebp
dec
fwait
mov
nop
inc
push
sub
fwait
mov
andb
aaa
les
adc
add
sbb
gs
and
jo
lods
push
adc
mov
jl,pn
xchg
repz
out
push
out
scas
mov
mov
lock
hlt
push
and
fsubl
adc
sbb
shlb
cld
push
and
jbe
clc
jae
and
mov
insl
daa
test
fs
sub
mov
add
mov
or
fsubp
repnz
stos
jns
cs
mov
ret
loope
daa
and
faddp
or
pop
mov
jg
push
cmp
popa
cmp
inc
xchg
or
stc
cld
pop
mov
push
je
cmp
push
sahf
pop
jne
popa
xor
hlt
push
adc
loop
cmp
mov
cwtl
idiv
scas
push
mov
addr16
js
mov
mov
dec
dec
sahf
sbb
je
mov
lock
ret
push
sub
sbb
shll
mov
push
sub
rcrb
push
xchg
mov
mov
addb
sub
repz
pushf
cmp
dec
mov
rclb
adc
rcrb
jbe
add
inc
out
fwait
ret
inc
notl
lea
push
ret
leave
push
in
xchg
push
pop
or
aam
fs
dec
std
xchg
in
leave
repz
cmp
imull
daa
fwait
stc
loopne
mov
and
dec
mov
pusha
xchg
daa
sbb
pop
add
shlb
ljmp
xchg
pop
sahf
push
xor
fstpt
push
mov
mulb
pushf
adcb
push
mov
cmpsb
imul
inc
pop
jo
loopne
cld
fcompl
or
xor
lock
adc
jno
inc
inc
mov
mov
loop
sbb
in
enter
xchg
lret
test
cmp
popf
addr16
xor
es
clc
mov
bound
sahf
mov
outsl
sahf
adc
daa
cmpb
aas
xchg
sbb
das
add
xchg
jge
cmp
cwtl
jecxz
adcb
xchg
mov
lds
or
ss
subl
pop
pop
lret
dec
repz
mov
add
insl
sub
aam
jle
outsb
pop
outsl
rol
or
xor
rcrb
dec
insb
xchg
mov
mov
ss
and
inc
xchg
pop
jae
out
sub
int3
cmp
sti
add
daa
lock
xchg
jae
test
mov
cld
fwait
testl
sbb
clc
adc
mov
sbb
ja
lahf
scas
sahf
out
xor
aas
jecxz
or
cmpsb
pusha
popf
adc
xchg
push
jge
andb
xor
cld
adc
dec
mov
pop
or
mov
cmp
dec
pop
jmp
or
test
mov
push
jo
inc
inc
rep
out
sub
adc
adc
lret
pop
dec
cmpsb
mov
cmp
enter
dec
dec
xor
xchg
ds
pop
dec
into
mov
sbb
push
ss
pop
mov
fbld
lahf
adc
sub
add
scas
xchg
out
lret
ds
lods
hlt
sub
jl
inc
repnz
imul
push
popf
xchg
cmp
and
ja
out
js
mov
fcomi
divl
repnz
inc
cltd
movsb
inc
sub
add
repnz
add
frstor
dec
lcall
sub
pop
nop
daa
xor
pop
leave
jbe
ficompl
cmpb
test
hlt
and
mov
mov
cmc
cmc
jmp
lds
movsb
cmp
lcall
adc
cmp
adc
sbb
adc
lcall
push
es
pop
fsubs
ret
stos
rcl
xor
les
scas
in
shll
mov
pop
inc
xchg
dec
loope
lret
lret
jns
sti
mov
jg
shll
jg
fadds
lahf
add
dec
and
fisttpll
sbb
jecxz
pop
dec
cld
sub
in
jl
adc
test
ret
sub
dec
inc
jb
pop
push
imul
loope
jno
fldenv
adc
pop
cmpsb
xor
mov
pushw
sbb
ds
jp
mov
adc
arpl
mov
in
int
push
mov
pusha
fcmovbe
adc
sbb
in
arpl
nop
xchg
jmp
jle
scas
push
mov
stos
sarb
aam
cmp
ja
push
lds
sbb
or
push
push
enter
mov
daa
fwait
iret
mov
or
mov
movsl
incl
out
decl
push
adc
out
dec
aad
xor
sbb
clc
test
sbb
inc
popa
xor
add
xor
jle
repnz
cmpsl
cmp
xchg
dec
imul
into
cs
rorb
or
pop
ror
int3
cltd
mov
pop
into
ljmp
ret
jno
mov
scas
out
pop
xchg
ret
std
dec
lahf
fsubr
jnp
outsl
dec
out
adc
xchg
inc
insl
xor
andl
pop
int3
lcall
jbe
jge
cmp
pop
rolb
lock
cwtl
xor
out
imul
push
fisubs
jg
test
cmpsl
jns
inc
fisubrs
mov
fsubrl
lcall
pop
fcmovne
mov
or
loopne
xor
inc
dec
outsb
rolb
jae
mov
das
popa
and
loop
mov
push
lock
mov
mov
and
js
mov
insb
mov
adcl
and
mov
jne
mov
sub
ficomps
js
mov
sbb
mov
lds
nop
sub
jmp
pop
imul
jle
cld
add
cmp
orb
or
and
aaa
outsb
add
jnp
mov
and
fistps
xchg
pusha
add
sti
mov
lods
xor
fisubs
and
stc
pop
sti
dec
push
mov
hlt
mov
int
ret
bound
loopne
dec
jo
lods
jo
addl
push
into
or
jne
mov
mov
pop
mov
xchg
push
pushf
push
push
out
arpl
cmp
aad
push
adc
mov
fdivrs
adc
test
sbbl
les
cmp
enter
pop
fadds
lret
aam
daa
mov
add
repnz
sbb
cmp
mov
push
scas
jae
sahf
fstpt
std
or
stos
fcompl
sub
int3
add
push
push
add
idivl
movsl
test
push
outsl
fdivrl
int
adc
adc
and
cld
outsb
popf
stos
dec
mov
hlt
sub
mov
pop
outsb
shr
mov
sarb
pop
and
dec
aam
mov
mov
mov
xorb
push
test
aam
ja
cwtl
xor
push
xor
ret
dec
aad
out
push
in
dec
faddl
icebp
sub
pop
push
imul
sub
cmp
sub
mov
mov
xor
inc
add
or
leave
sub
adc
cmp
adc
repnz
lock
loope
pop
ret
cli
bound
mov
pop
mov
sbb
jbe
jns
stos
pop
dec
psubq
ds
cmp
pop
mov
or
mov
jns
xor
push
inc
mov
fdivl
mov
push
jmp
aas
jne
sarb
outsb
dec
inc
xchg
dec
mov
cli
xchg
jo
jecxz
dec
pop
dec
je
sbb
cmp
out
push
pop
pop
jae
nop
insb
mov
cwtl
sbb
in
rcll
cwtl
movsb
out
jmp
jo
lahf
push
cld
std
pop
pop
ja
cli
sbb
xchg
and
shlb
out
xchg
insb
repz
sub
inc
cmpl
sahf
push
inc
aam
pop
mov
ficoml
pop
fcomp
cmp
sti
icebp
repnz
stc
pop
out
adc
add
testl
lds
aad
cmc
pop
xor
inc
adc
sub
add
popf
sub
cmpsb
je
popf
cmpsl
sbb
cmp
lcall
js
ret
hlt
aaa
sbb
inc
repnz
outsb
pop
push
mov
xlat
xchg
rorl
call
cmp
mov
and
shrl
mov
mov
fisubs
pop
xchg
mov
or
test
adc
mov
shll
pop
or
inc
inc
fidivl
daa
push
daa
jae
inc
pushf
scas
xor
dec
decb
fstpt
pop
cmp
popf
jle
xchg
jne
xchg
nop
mov
and
outsb
ficoms
int3
stos
cwtl
aaa
mov
and
and
and
test
sub
mov
mov
inc
arpl
push
jle
lret
xlat
stos
jb
mov
pop
cmc
jnp
outsb
cmpsb
cmpsb
sbbl
or
sub
xchg
mov
push
xor
inc
out
dec
and
sbb
shlb
fcompl
push
test
mov
jmp
pushf
sbb
rcrl
jae,pn
inc
mov
repz
jns
push
sbb
push
lea
addr16
adc
insb
das
subb
push
sarl
stos
xchg
pop
in
jle
ss
cltd
insb
in
lock
jge
mov
push
xchg
sbb
out
xor
lret
in
dec
xlat
dec
cwtl
mov
push
mov
inc
fs
outsl
xchg
cmc
aas
popa
and
push
add
in
out
push
jp
xor
mov
or
aad
lds
mov
xchg
fiadds
fdivl
addr16
ret
or
pop
push
imul
adc
test
jg
lock
int3
pop
pop
lret
les
mov
testl
push
ja
jno
push
arpl
andl
mov
jg
cmp
xlat
cmc
in
jmp
test
inc
dec
dec
repnz
js
fildll
xchg
stos
jb
test
imul
inc
popf
mov
lds
jae
pop
xchg
mov
scas
lock
sahf
jmp
fldenv
das
dec
repz
stc
addb
jp
scas
insl
jle
jg
jbe
cld
sub
cld
out
jecxz
add
cmpsl
ljmp
or
push
addr16
xor
fcmovne
adc
or
sarb
mov
xchg
lea
shr
lods
nop
aas
or
jmp
xchg
and
and
es
and
icebp
test
mov
ret
aam
pop
dec
in
xchg
int
fimuls
xchg
stos
shrb
or
adcb
push
mov
jno
in
push
push
pop
mov
sbb
jg
pop
pop
dec
xchg
mov
es
test
or
and
out
mov
mov
sbb
and
stos
inc
mov
pusha
aam
xchg
sub
and
adc
shrl
xchg
jg
shrl
ss
and
jl
rolb
xchg
mov
out
aas
aam
cli
push
push
shl
leave
push
orb
ja
arpl
ret
std
push
jg
mov
fdivs
push
xchg
sbb
add
and
leave
out
fsubl
popa
std
loop
mov
aaa
enter
cmpsb
xor
fsubrl
lcall
mov
rorl
lds
in
stos
push
ret
inc
lahf
inc
jecxz
mov
cmp
xchg
lock
lods
xchg
sarl
lods
push
xchg
xor
pop
jnp
push
outsb
cmp
mov
jecxz
push
aas
or
mov
movsl
and
xor
mov
push
push
or
movsl
mov
sbb
ljmp
dec
fnstsw
enter
leave
fs
mov
pop
addr16
pushf
jnp
jno
movsb
mov
push
cmp
push
mov
dec
loope
and
dec
iret
fwait
mov
mov
fdivs
or
mov
aam
fiadds
icebp
jp
add
cmp
cmp
mov
cmpsb
mov
adc
jmp
adc
fbld
andl
inc
inc
sbb
shr
mov
inc
sub
push
test
pop
les
xlat
mov
imul
inc
lea
mov
idivl
idiv
or
mov
test
mov
mov
lods
push
cld
pop
mov
cmpsl
push
cwtl
push
loope
iret
addr16
push
pop
mov
xchg
icebp
inc
fistl
fildl
movsb
repnz
addr16
arpl
movsl
movsb
pop
mov
lods
daa
xor
or
dec
dec
jo
xor
xchg
sti
lea
adcb
stc
xchg
pop
jp
into
cmp
fst
add
insb
dec
sub
xchg
mov
cmpsb
jge
ret
mov
into
imul
shrl
dec
inc
jle
push
mov
mov
iret
outsb
xchg
add
push
mov
xor
nop
push
loopne
pop
aad
paddb
pop
rcrl
or
call
mov
shrb
push
adc
xchg
or
movsb
movsl
in
mov
arpl
arpl
lret
xor
pop
add
and
mov
repnz
mov
and
or
pushf
cwtl
and
fcomi
rclb
xor
popa
aaa
jbe
inc
cmpsb
adc
pop
popa
ret
dec
push
sub
jne
popl
ret
hlt
push
cmpsl
cltd
dec
and
jno
lret
pop
jmp
xchg
jae
inc
fadd
push
push
pop
cmpl
clc
inc
lahf
lret
movsl
into
lea
je
push
and
xor
mov
cmp
vsqrtss
test
clc
cmp
addb
dec
fcoml
and
aad
sbb
or
jb
inc
or
mov
inc
ret
stos
xor
in
popa
sub
adc
mov
ret
push
out
jnp
push
lret
bound
xchg
pop
adc
dec
out
mov
ljmp
movsb
mov
xorb
cwtl
jmp
inc
cwtl
rclb
inc
insl
pushf
sub
stos
cld
mov
push
or
xchg
sub
pop
pop
jns
sbb
bound
add
fistpl
lea
test
stc
xor
push
inc
adc
xor
push
ja
inc
sbb
inc
cld
cmpl
ds
dec
push
mov
inc
call
adc
or
and
in
sbb
in
mov
fdivrl
adc
jp
mov
xchg
push
out
push
add
jmp
repz
shll
nop
test
inc
or
mov
mov
jge
mov
pushf
xor
xchg
dec
push
inc
jb
inc
test
adc
popa
popf
ljmp
arpl
dec
pushf
fsqrt
sti
sbb
and
push
mov
mov
popf
clc
cwtl
push
xchg
pusha
shll
mov
in
mov
xor
lcall
stos
lea
dec
iret
je
inc
xchg
mov
lret
test
push
dec
fisubs
stos
movsl
in
xchg
dec
ror
ja
lret
movsl
mov
add
sub
fs
aas
shl
dec
enter
inc
mov
iret
stos
test
iret
gs
das
lods
or
dec
pop
in
dec
adc
jle
leave
in
int3
inc
mov
jmp
mov
ja
dec
cmp
outsl
popf
ljmp
xchg
inc
jp
stos
mov
push
and
movsb
jno
orb
divb
fcomi
xchg
sbb
mov
clc
pop
inc
daa
js
jne
mov
xchg
sbb
jb
mov
adc
mov
mov
inc
xor
mov
xchg
aad
iret
je
xlat
lock
or
cmpsb
mov
aad
mov
jmp
adc
pop
inc
add
mov
stc
mov
es
testl
lods
jle
pop
adc
int
inc
push
xor
inc
pop
or
mov
cmp
jo
adc
imul
fcmovbe
shll
dec
cmp
mov
fdiv
nop
ljmp
dec
jp
push
sbb
shll
js
ret
xor
sbb
xor
push
or
mov
aam
outsb
or
xor
inc
fs
adcb
mov
push
xor
cmp
sub
lds
add
cmp
mov
jne
mov
jg
push
je
inc
mov
inc
cld
sbb
fdivs
cmpsl
enter
repnz
stos
push
inc
pusha
inc
insl
jae
mov
push
lock
mov
inc
test
sbb
push
cmp
lea
add
cmp
aas
lcall
addr16
mov
scas
mov
lods
mov
lret
in
mov
adc
push
pushf
test
mov
les
stos
mov
and
pop
add
xchg
lcall
imul
out
divl
aam
mov
shl
leave
mov
lds
jo
daa
vcvtpd2psy
cltd
bound
add
outsb
fwait
imul
movsl
in
int
fsubrp
mov
adc
inc
xor
daa
cld
mov
imul
daa
scas
mov
lret
ds
adc
pop
pop
in
xchg
sbb
mov
cmpb
xchg
lret
adc
inc
jmp
iret
adc
call
cmp
mov
inc
push
push
fld
mov
sub
sar
mov
and
pop
sbb
data16
push
rorl
out
inc
pushf
mov
jmp
out
push
lcall
ficoml
cmp
ret
pop
out
aam
loope
stc
push
aaa
cld
xor
daa
cmpsl
daa
inc
xchg
xor
out
mov
jns
int3
pop
xor
push
cld
cmp
lods
pop
and
jp
pop
jb
push
and
mov
in
cmp
aad
out
rolb
sub
pop
or
xor
popa
jno
mov
add
outsb
xor
fs
and
aad
lret
je
dec
xchg
pop
or
pop
mov
inc
mov
mov
xchg
sbb
push
jmp
ds
sbb
cld
cmp
xchg
stc
adc
les
je
rclb
test
mov
and
push
jb
in
orb
lret
lods
xchg
dec
loop
mov
dec
cld
cmp
xchg
jp
movsl
jle
xorl
pop
add
les
mov
jnp
dec
dec
es
add
sub
inc
movl
sub
cltd
mov
push
fcoms
add
sbb
outsb
shrb
lahf
call
pop
hlt
fldl
mov
nop
jae
add
ljmp
popa
mov
ss
fsubs
xor
ja
and
int3
xchg
jmp
clc
movsl
and
and
or
fimuls
fistpll
mov
mov
jl
sub
cmpsl
loop
leave
call
dec
or
int3
loop
stos
daa
jae
xor
mov
jmp
mov
pop
xor
push
lcall
xchg
outsb
sbb
cmpsb
aas
hlt
push
jecxz
fiadds
js
mov
fcmovne
push
xor
and
xor
repz
push
adcb
pop
dec
pop
cmpsl
cmc
push
repz
adc
mov
popa
addl
mov
sub
sub
adc
xchg
mov
aad
into
and
mov
cmp
test
push
out
jl
cmpsl
add
fcoms
mov
cs
xor
test
sti
leave
or
xchg
mov
jge
and
push
and
in
sub
xchg
inc
lahf
add
cmpsb
dec
aad
mov
cld
pop
xchg
sub
sbb
xor
js
push
aam
or
inc
xchg
or
push
pop
xchg
enter
dec
mov
mov
sti
push
cld
nop
data16
jo
dec
out
outsb
sbb
ficoml
mul
lret
movups
int3
sbb
fisttps
pop
cmpsb
pop
sti
sbb
test
adc
adcb
lcall
mov
mov
jbe
iret
adc
dec
insl
sub
mov
iret
ds
inc
enter
sub
pushf
leave
or
mov
cwtl
sahf
into
inc
aas
sub
rcrb
xchg
add
mov
sbb
add
mov
and
pop
rol
mov
jg
stc
or
and
jp
and
pop
arpl
mov
out
lods
xor
add
push
sbb
lods
inc
mov
xor
push
pop
cltd
shrb
stos
test
mov
xchg
loopne
jp
xchg
ljmp
and
in
pushf
mov
testb
cld
xor
inc
inc
xchg
jecxz
lea
mov
adc
sbb
arpl
jae
inc
inc
and
rcl
roll
cli
pop
cmp
sbb
test
iret
mov
mov
dec
and
sahf
push
mov
xor
add
rcrb
sbb
inc
pop
gs
xor
xchg
adc
loopne
mov
shrb
and
add
cld
in
lcall
idivb
adc
dec
or
pop
push
dec
fucompp
adc
movsl
pop
xlat
mov
mov
stc
sbb
and
adcl
pop
cmc
push
fistps
cmp
push
bnd
xor
sbb
mov
pop
push
test
out
lcall
insl
cltd
das
shll
in
sbb
adc
test
bound
enter
adc
xor
in
andl
sbb
jmp
inc
aam
dec
iret
mov
sub
adc
xor
das
icebp
rcll
push
mov
add
adc
int
cmp
mov
aad
rolb
fwait
out
test
lret
or
dec
adc
cwtl
imul
lds
cld
cmpsl
mov
cmp
repnz
cmp
mov
stos
pop
xchg
rolb
cmp
cmp
and
outsl
aaa
and
adc
cmp
sub
sbb
pusha
dec
addl
dec
shll
mov
outsb
inc
sub
dec
sbb
vpmaxsw
scas
mov
xchg
in
jp
mov
and
inc
popa
and
das
cwtl
or
rclb
mov
push
lahf
xchg
mov
pop
jle
push
loopne
inc
inc
ffreep
loop
stos
or
loopne
in
add
mov
inc
xchg
sbb
xchg
xchg
movsl
jmp
in
call
sbb
dec
addr16
and
xchg
cmp
leave
jno
mov
out
sbb
imul
cmp
pop
mov
addr16
ljmp
mov
xor
mov
out
in
pop
mov
sbb
mov
push
mov
push
or
sub
mov
loop
mov
test
int3
cmp
adc
cmp
rep
xor
loope
push
xor
fcomp
mov
dec
mov
outsb
imul
std
movsl
sub
inc
dec
cmp
mov
xchg
movsb
or
dec
outsb
xor
movsb
add
shrb
and
jp
out
cmpsb
in
pushf
test
mov
adc
outsb
insl
rcrb
mov
cmpsb
cmp
ss
push
out
adc
xchg
cmp
xchg
mov
xlat
lods
push
mov
adc
jge
lods
ljmp
sbb
xchg
and
sub
dec
scas
push
pop
into
jmp
cmp
es
cli
push
daa
pop
cmp
lret
push
fsubp
out
stos
xor
cltd
das
cmp
push
int3
dec
inc
and
roll
jl
fisttps
add
ljmp
lahf
cmpsb
xchg
lahf
ret
fisubrl
mov
mov
push
in
sbb
xchg
dec
and
xor
pop
daa
push
div
fsubl
jns
mov
cmp
push
movsl
xor
jne
rcr
adc
add
lds
loop
cwtl
rorb
sbb
mov
pop
adc
xchg
cmp
popf
aas
cmp
inc
fcomip
cmp
shlb
push
leave
rolb
xchg
arpl
cmp
out
call
loope
or
in
repz
dec
pop
rclb
and
incb
add
mov
push
in
dec
outsl
jmp
dec
movsl
add
subb
mov
jecxz
cmp
call
ljmp
dec
insl
andl
or
in
out
imul
movl
mov
cs
xchg
or
leave
scas
add
dec
mov
push
cmp
mov
pop
repnz
lahf
cmp
pop
push
data16
or
cmc
nop
and
cs
mov
aad
insb
dec
mov
cmpsb
loop
cmpsb
cwtd
push
das
jmp
xor
cld
mov
push
sub
lret
add
frstor
xor
and
sbb
xor
add
fimuls
mov
add
jb
fs
jle
aad
out
xor
add
andb
push
add
fs
add
and
sub
lods
int3
and
sub
sbb
jmp
cmp
idivb
mov
movsb
add
xchg
push
movsl
test
sbb
test
lds
mov
xchg
xor
push
jbe
sti
int
add
jns
loop
loop
ror
xchg
cwtl
ljmp
mov
std
out
xchg
out
adcb
xlat
dec
cmp
or
sbb
out
insb
mov
outsl
out
mov
shll
xchg
sarb
je
stc
test
lods
dec
aas
insb
ds
cli
pop
imul
xchg
mov
inc
loop
dec
jno
cltd
ja
sub
mov
sub
outsb
mov
push
lcall
pushf
pop
in
xchg
je
in
out
push
cwtl
cli
push
pop
mov
popf
test
pop
das
int
xchg
adc
sbb
test
mov
pop
insb
xchg
cmp
lahf
xor
cmp
lds
push
bound
sub
mov
imul
xchg
push
sbb
mov
xor
lods
addr16
movsb
neg
testl
fdivrl
repz
stc
push
cwtl
mov
das
rorb
mov
lret
repnz
jmp
test
cs
and
movsl
fs
daa
stc
and
inc
inc
repz
push
es
jg
pop
jnp
es
out
or
jne
mov
jo
adc
sbb
sbb
adc
xchg
mov
rcr
sbbb
or
in
add
push
mov
mov
into
fcmovbe
ror
mov
sbb
adc
add
dec
xor
sub
sub
arpl
scas
xor
xor
and
adc
add
es
mov
mov
cmpsl
push
jl
adc
pop
repnz
rcll
push
shlb
jge
ret
or
das
adc
mov
jbe
pop
inc
dec
mov
stos
cwtl
inc
out
jae
push
adc
cmp
jae
les
aaa
test
pop
xchg
hlt
fcmovne
out
ds
sahf
mov
and
push
xor
std
into
aaa
int3
xor
mov
in
mov
movsl
mov
jle
push
pop
in
shrb
fimuls
popf
mov
jno
sbb
adc
in
or
sti
cmpsl
scas
stos
mov
call
shll
pop
fwait
andb
mov
out
or
mov
jo
call
loopw
ss
sub
cld
pop
xchg
and
dec
das
imul
mov
add
sbb
adc
jne
aas
mov
pop
mov
mov
and
xor
fcmovnu
mov
push
movsb
xchg
inc
mov
or
movsb
sbb
cld
outsb
int
and
mov
loopne
push
adc
sahf
aas
clc
xchg
call
daa
cli
rcl
inc
add
jp
ret
mov
inc
aas
dec
pop
sub
jg
daa
pop
inc
iret
inc
xchg
push
mov
pop
push
dec
jg
das
ljmp
and
das
loop
ret
and
push
sbb
adc
in
xchg
repz
xor
push
inc
fidivl
icebp
inc
mov
sbb
jbe
arpl
insb
xor
fs
mov
lret
xor
arpl
pusha
mov
ret
rcr
xlat
adc
in
mov
ficoml
fiaddl
addr16
in
insb
mov
inc
push
jmp
cmp
pop
mov
loope
and
testb
jmp
movsb
sbb
cmp
pop
cmp
or
mov
inc
dec
pop
jecxz
mov
mov
add
push
jne
and
ss
push
pop
daa
mov
xchg
jp
in
push
rclb
add
and
repnz
pop
xor
jo
cli
sahf
inc
mov
ret
sahf
imul
push
dec
cmpsb
lock
mov
fldl
rol
mov
fmul
pop
dec
int3
or
imul
call
xchg
out
add
test
mov
sbb
jle
jmp
orl
popa
push
fcomp
cmp
inc
or
sbb
out
sbb
sub
pop
mov
push
mov
lds
push
and
cmp
fistpll
push
mov
adc
push
mov
scas
addr16
adc
fwait
push
push
movsl
push
fstpt
stos
push
xor
mov
sub
ror
mov
sub
mov
movsb
int3
xchg
lret
push
push
sahf
call
inc
or
fidivl
mov
sbb
and
pop
mov
adc
xchg
inc
sbb
xchg
out
int3
pop
imul
lcall
ja
fsubrl
push
pop
sub
adc
inc
testl
aam
dec
fnsetpm(287
mov
daa
push
je
mov
les
inc
xchg
or
fwait
lods
das
lods
push
pop
push
nop
xlat
ss
cltd
inc
adc
repnz
dec
mov
adc
push
jmp
sbb
add
out
and
mov
inc
fsubl
inc
fidivrs
xchg
mov
imul
stc
lea
mov
fsubr
test
jae
and
aas
lds
mov
shl
adc
sub
sahf
pop
and
mov
mov
jb
adc
cmp
and
call
push
jmp
fldenv
or
icebp
xchg
jo
fisubrl
rcr
scas
movsl
xchg
leave
pop
sub
xchg
dec
dec
call
movsl
pop
test
aas
push
jb
xchg
shll
pop
jmp
aad
jnp
andl
mov
incb
xor
scas
cld
add
sub
pop
mov
adc
cmp
inc
push
inc
jp
push
test
loop
mov
xlat
bswap
insb
mov
adc
cmp
hlt
fwait
xor
in
fs
fildll
shll
mov
jl
mov
push
add
cmp
idiv
jne
sub
add
lds
mov
sub
cli
sahf
xchg
add
or
adc
add
jecxz
into
add
aam
sbb
sbb
mov
cld
push
js
mov
mov
adc
cmp
jo
or
xor
or
push
jne
sti
shll
pusha
inc
xchg
into
aad
mov
cmp
jecxz
jl
ljmp
stc
push
addr16
popa
loopne
push
adc
push
sub
ja
dec
shlb
push
aaa
das
pop
scas
mov
std
dec
mov
popa
and
sbb
mov
mov
ljmp
dec
repnz
xchg
xor
or
sbb
xchg
mov
adc
mov
mov
test
ss
fwait
mull
sub
ficomps
jle
xchg
dec
mov
push
in
dec
stos
mul
or
push
pushl
jno
xorl
inc
push
sbb
insl
into
push
dec
loope
adcb
sub
mov
sbb
pop
bound
sub
push
xorl
loopne
xchg
pop
lods
add
push
push
mov
or
sub
jae
mov
push
fimull
test
je
and
fnstcw
popa
and
sbbb
adc
xor
addr16
test
push
lahf
lods
int
fimuls
repz
aas
fistpl
aaa
in
inc
testb
stos
sub
sub
sub
lods
movsl
push
or
sbb
adc
or
dec
sub
fcomi
xchg
dec
gs
lret
jb
negl
inc
mov
fisubrl
push
sub
mov
jb
shl
fildl
add
sahf
xchg
xchg
adc
mov
sub
aad
popf
push
or
cmp
pop
popf
shlb
cs
bound
stc
bound
cmpsl
adc
inc
jae
stos
dec
dec
lahf
arpl
sub
rcrl
or
test
int3
add
fists
ljmp
sbb
int3
sub
jge
dec
and
rorl
loopne
lret
mov
cmc
jmp
fists
jb
mov
push
les
cmpsl
into
dec
inc
mov
lret
stos
aad
lods
add
pop
push
pop
enter
inc
xor
push
repnz
bound
mov
inc
adc
dec
icebp
push
push
out
lods
popf
adc
mov
add
inc
pop
cmp
out
adc
outsb
inc
ffree
lds
orl
inc
pusha
paddusw
in
jae
leave
aas
shlb
aaa
push
xchg
pop
xchg
pop
mov
jecxz
test
mov
jp
ret
fnstcw
push
in
mov
xor
mov
das
jo
pop
and
mov
cwtl
dec
xor
mov
std
stc
js
xor
sub
sbb
aad
popf
sbb
cld
pop
lret
mov
lods
sbb
je
jmp
pop
mov
rcrb
fwait
inc
cmp
xchg
es
inc
das
jmp
inc
outsl
sub
test
pop
jmp
push
fstpl
out
push
inc
jle
push
dec
lret
popf
lds
cmp
pop
nop
iret
pop
cmp
repz
sbb
or
pop
jge
out
dec
data16
in
pop
mov
jg
push
adc
mov
sbb
inc
pop
sbb
outsb
pop
fisttpl
je
jp
xorb
pop
sbb
and
and
out
cwtl
push
adc
or
in
clc
mov
outsl
push
aas
nop
pop
out
adc
enter
cmp
mov
decl
jb
xor
sar
nop
inc
out
mov
pop
push
andb
fdivs
sub
mov
std
int3
dec
push
lea
in
push
add
xchg
rol
orb
dec
aam
cwtl
dec
sub
fucomp
lods
movsl
jns
cmp
aaa
lock
pop
nop
loopne
mov
mov
pop
xchg
push
mov
xchg
addr16
repz
aaa
mov
sub
daa
add
adc
dec
popa
lret
xchg
inc
push
enter
sub
mov
and
lea
mov
lds
loopne
sarb
lsl
jno
mov
stos
mov
mov
out
sbb
dec
sbb
pop
in
out
js
sub
cwtl
xchg
jo
ret
mov
mov
arpl
in
imul
mov
mov
xchg
xor
mov
xor
jb
push
push
push
push
dec
push
mov
popaw
jle
adc
pop
mov
rcrb
mov
stos
pop
inc
xor
pop
or
outsb
js
leave
cmp
sbb
and
xlat
dec
sbb
call
cs
xor
mov
pop
mov
vpunpcklwd
pusha
sahf
push
loop
push
jno
lret
in
sti
cmp
xor
aam
out
jbe
add
aas
aaa
fisttpll
xorb
mov
cmc
dec
jae
pop
insl
pop
mov
lcall
xor
mov
xlat
cwtl
push
stc
dec
addl
sbb
pop
jae
test
mov
pop
and
cmc
sub
movsl
jne
popf
dec
les
out
xor
sub
cmp
inc
mov
stos
or
dec
and
cli
or
sahf
dec
sbb
std
addr16
push
fucom
xor
out
leave
popf
push
mov
repnz
fisttpll
in
pop
jl
out
cltd
add
cli
cltd
xor
push
lret
jnp
or
in
or
inc
test
inc
bound
sub
add
lods
or
mov
mov
movsl
cmp
leave
xlat
xchg
out
pop
in
mov
div
std
push
lods
in
out
sbb
push
sbb
fdiv
push
and
xor
push
fs
ret
dec
cmc
adc
or
push
inc
aam
in
jmp
imul
mov
fmull
cmp
rorb
or
fiadds
jb
loop
rcrb
lods
inc
cwtl
testl
movsl
ds
add
gs
cs
out
pop
imulb
pop
data16
roll
push
push
insl
leave
cld
push
lods
stos
lahf
or
int3
lret
mov
cmp
mov
mov
jb
mov
sub
sub
lds
mov
xor
icebp
and
push
sub
rorl
into
in
and
cwtl
jl
fs
and
mov
xchg
shr
xchg
sub
pop
jne
fsts
jecxz
gs
inc
pop
xor
insb
out
mov
jl
lds
repnz
cs
ljmp
ds
dec
xchg
mov
xor
enter
clc
jl
stos
sub
das
xchg
subb
frstor
cmp
xchg
addr16
sarb
push
dec
popa
jmp
and
sub
repnz
push
xor
adc
mov
sbb
out
inc
cmpsb
in
into
ret
fcmovb
lahf
in
pop
sbb
movsb
xchg
shr
jge
fisttps
ds
jno
out
xor
ret
xor
mov
mov
jne
push
xor
clc
mov
xchg
cpuid
dec
test
insb
clc
nop
jmp
imul
jmp
out
xorl
mov
into
jno,pn
outsb
push
jbe
pushf
pop
jnp
and
mov
lcall
xlat
ds
xor
ret
jle
or
pop
sbb
cmpsb
and
scas
dec
xchg
loopne
and
ds
push
lock
pop
sub
std
cmp
and
inc
in
mov
out
add
repz
jg
cmp
push
popf
adc
decl
inc
in
mov
lcall
sub
ret
ljmp
fstl
dec
xor
insl
fldt
bound
add
or
icebp
add
scas
aam
inc
mov
mov
dec
pusha
int
gs
xor
pop
aas
shll
pop
addr16
adc
aad
mov
test
add
pop
adc
out
push
jle
cmpl
aas
fiadds
icebp
adc
push
data16
popf
mov
pop
mov
add
stos
loopne
cltd
adc
test
jo
std
ljmpw
jg
aam
sarb
shll
mov
data16
mov
push
pop
sub
cmpsb
stos
sbb
inc
xchg
sbb
sbb
jnp
cmc
adcl
aas
adc
mov
pop
in
fsubs
cli
loop
push
xchg
xchg
pop
cs
movsb
call
xlat
aad
pop
xchg
call
cmp
aaa
ljmp
push
xchg
mov
push
enter
dec
and
dec
mov
stc
push
insl
pop
mov
sbb
je
adc
int3
lret
push
inc
out
cmc
jg
fldl
test
neg
pop
aam
and
push
ds
and
push
sbb
and
adcl
jmp
xor
adc
cmp
int3
sbb
cmovg
sbb
adcl
lds
bound
inc
push
aad
sbb
rcrl
jnp
mov
out
out
in
mov
push
jnp
fcmovbe
negl
jecxz
shlb
inc
insb
add
scas
test
add
mov
ret
and
jle
xor
cmc
dec
femms
pusha
ret
xchg
dec
xor
jne
add
or
test
pop
xor
mov
adc
cmc
gs
lahf
pop
movsb
push
xor
sarb
repnz
add
decb
adc
pop
fidivrl
mov
xchg
mov
and
cmpsb
cld
fwait
call
mov
push
adc
arpl
add
xor
push
sbb
adc
push
loope
test
lret
jle
shlb
aaa
or
daa
out
sub
xchg
rol
pop
xchg
fldl
lret
cld
pushf
fildl
fisubl
loope
push
stos
data16
subps
leave
lock
adc
pop
ja
mov
xchg
notb
xor
sub
das
and
adc
cld
int
lahf
shll
fs
into
jnp
mov
push
mov
xor
inc
mov
cmp
inc
add
xchg
pop
popf
ret
data16
xchg
addr16
je
and
jae
dec
xlat
add
jle
and
pop
adc
add
push
and
pop
inc
push
lods
pushl
dec
addr16
push
popf
outsl
pop
adc
fsubrs
lcall
mov
into
addb
imul
mov
ret
cmp
xchg
mov
sbb
cmp
mov
or
add
xchg
ret
enter
pop
int
insb
sub
sbb
fbstp
adc
jmp
ja
ret
and
xor
and
xor
scas
xor
in
ja
sbb
aam
sbb
inc
xor
imul
add
rcl
pop
and
ja
xchg
jb
into
jle
sub
pop
sbb
mov
adc
sbb
adc
cmpsl
out
pop
ret
lea
fistl
movsb
and
iret
mov
ja
pop
dec
mov
jne
adc
aaa
fnstenv
adc
pop
sbb
lea
push
iret
jne
add
lret
notb
add
xchg
cmpsl
pushf
mov
orb
xor
sbb
jmp
ficompl
out
test
cmp
ffreep
and
mov
and
fdivr
jge
outsb
shr
mov
xchg
push
movsl
mov
popa
push
sbb
mov
pop
sbb
push
es
lods
lcall
cwtl
mov
mov
cli
mov
cmp
fnstsw
jge
add
lds
fdivl
in
jno
aad
int3
nop
loop
inc
enter
bound
cmpsl
lret
lcall
pop
outsb
out
pop
sbb
mov
adc
in
cmp
int3
ds
pop
fldcw
dec
mov
xor
leave
pop
rcrb
clc
pop
fidivrs
cltd
lods
pop
dec
mov
push
push
sub
adc
or
and
inc
xchg
fistl
jmp
sub
fadd
les
subb
movsb
xchg
pop
and
ja
xchg
cmpsl
or
cmpsl
dec
scas
mov
mov
jecxz
cmp
cwtl
adc
xchg
inc
cmp
pop
jnp
sarl
cli
lret
repz
loop
ja
out
clc
jl
sbb
scas
nop
dec
jmp
cmpsl
aaa
pushf
clc
pop
lods
and
insl
pushl
int
pop
fsubr
xlat
jo
dec
loop
out
and
push
stc
cmp
or
hlt
ret
movsl
outsb
hlt
push
cli
call
jo
and
jle
pop
xlat
dec
jo
out
int3
cmpsb
jl
mov
inc
call
sar
push
and
push
ljmp
jns
dec
jmp
aas
pushf
aaa
sub
and
fdivrs
pop
push
dec
xor
outsb
push
jae
adc
mov
jne
std
push
mov
xlat
in
jle
mov
imul
divb
xchg
jns
cli
fnstsw
iret
int
loopne
adc
cmpsb
dec
incb
pop
sbb
jmp
push
adc
adc
xchg
sub
xor
loopne
mov
cmpsb
xchg
mov
fmull
dec
jge
mov
dec
out
or
sub
rcrb
lods
mov
pand
sub
pop
scas
mov
mov
clc
push
lret
pop
cmpsb
mov
or
inc
cmp
sub
lock
mov
push
mov
xor
sti
jp
enter
lcall
and
push
mov
inc
adc
arpl
nop
push
sub
std
bound
push
xchg
and
cmp
pushf
xor
bound
mov
int3
or
jno
cmp
aam
lods
aam
push
fldenv
mov
inc
sub
inc
and
xchg
sub
clc
stos
pop
dec
in
jns
cmp
outsl
inc
dec
sub
cmpb
daa
out
and
xchg
lahf
lods
fcoml
lcall
pop
xchg
and
loope
mov
xchg
addr16
dec
in
push
adc
loope
sahf
testl
mov
cmp
and
sub
lret
push
mov
repz
push
ret
pop
movsb
xchg
push
push
xchg
pop
fwait
cwtl
mov
out
mov
test
es
ret
lret
nop
scas
stos
mov
mov
jmp
popf
cld
bound
inc
push
pop
jp
mov
sbb
lea
ret
clc
repz
outsl
inc
int
in
fs
sub
jae
popa
mov
or
mov
rclb
imulb
test
ret
adc
jmp
rclb
or
mov
mov
sbb
cld
push
mov
insw
or
je
cmp
ja
xor
push
outsb
lods
das
lds
test
xorl
lret
jno
cmp
sbb
pusha
aaa
adcl
popa
imul
fildl
cmpsb
inc
iret
lret
scas
mov
lea
push
jmp
adc
xor
add
sbb
repnz
xchg
jmp
cmc
jp
cmp
lods
fimull
jno
mov
gs
call
clc
inc
or
ret
leave
or
aaa
cmp
fmull
jmp
loopne
mov
sub
cmp
sub
sarb
and
stos
repnz
pop
xchg
pop
sbb
cmp
test
cmp
or
pop
orl
sbbl
mov
out
inc
outsl
iret
data16
loopne
push
lcall
sub
lret
in
push
icebp
inc
ds
pop
xchg
jl
pop
outsb
lods
fstpt
sahf
hlt
aad
popa
pusha
out
xor
outsl
cmp
mov
cmp
lods
popf
repz
cmp
movsb
test
daa
sbb
lock
cli
cmp
arpl
xchg
mov
mov
fs
push
rcll
mov
xor
dec
jnp
inc
lahf
cmp
push
or
test
leave
fstpt
and
xchg
push
sbb
jo
sbb
por
add
mov
popf
cmp
ljmp
rorb
or
dec
mov
mov
lahf
push
clc
inc
or
test
mov
inc
shll
lods
sub
fmull
pop
xchg
shr
add
icebp
inc
jne
mov
pop
cwtl
bound
xlat
arpl
xlat
sarb
add
and
loope
dec
lods
data16
mov
idivl
sbb
out
mov
jbe
in
jmp
sbb
jl
sti
out
mov
sbb
push
fisubs
xor
mov
push
cmp
std
addr16
pop
mov
movsl
cmp
popa
lods
test
mov
mov
lods
js
test
cltd
add
imul
dec
ljmp
push
popf
mov
pushl
in
mov
test
addr16
push
mov
ret
mov
mov
mov
or
stos
add
pop
pop
gs
pop
jle
ds
aas
ficomps
push
xor
xor
pushf
fstpt
mov
mov
mov
push
fildll
push
sbb
pop
sbb
adc
loop
mov
cmpb
idivb
lret
inc
push
popa
outsl
sub
into
mov
shr
add
xchg
das
dec
sbb
cmc
lret
call
mov
std
dec
add
and
jmp
enter
rcr
pop
add
insl
sahf
das
lret
test
inc
notl
mov
mov
jle
inc
adc
lock
and
or
mov
stc
dec
mov
add
insb
cs
ljmp
jmp
mov
push
in
imul
xor
pushf
xchg
imul
sbb
mov
or
movsl
mov
loop
fildll
pop
cmp
cmp
dec
push
mov
xchg
test
xor
cmpsb
push
shll
iret
xchg
jg
mov
mov
pop
bound
leave
push
mov
sub
push
pushf
jl
cli
ds
inc
xchg
lods
loop
dec
mov
sbb
lock
mov
aam
dec
fsubl
xchg
es
jno
dec
mov
cmc
sbb
push
into
cmp
jl
dec
test
orl
cld
inc
lcall
movsb
loopne
pushf
gs
mov
clc
sub
cltd
fwait
cmpsl
loopne
fwait
adc
int3
push
xor
mov
fld
daa
mov
lret
repnz
je
push
push
pop
fs
xchg
loope
pop
std
imul
cwtl
mov
jae
rcrl
stos
inc
dec
jecxz
mov
jo
outsb
aaa
xchg
fbld
in
fstl
mov
inc
ds
int
cmp
sub
popa
outsl
xchg
sbb
insb
or
repnz
mov
mov
adc
jno
movsb
aam
mov
lds
jge
orl
jno
add
and
cmp
cs
jmp
lea
decb
fcmovbe
andb
push
sub
mov
cmp
mov
stc
pop
and
add
insl
jns
fbld
inc
jo
mov
mov
sbb
push
and
mov
or
ficompl
orb
mov
lds
lahf
pop
int3
test
mov
pop
xchg
adc
loop
dec
aaa
dec
inc
daa
pop
addr16
mov
test
hlt
lea
clc
mov
pop
lret
ja
mov
and
jg
inc
jns
andb
lret
scas
mov
outsb
mov
negb
movsl
cs
lahf
imul
inc
ljmp
add
in
ret
test
add
mov
fists
idivb
inc
cwtl
out
sbb
movl
cmpsl
negl
add
orb
pop
xor
in
sarb
push
mov
mov
jno
dec
ljmp
int
xchg
das
xor
mov
in
inc
jg
fwait
jae
xchg
adc
lahf
stc
or
dec
push
cmpsb
dec
fidivl
gs
lods
cwtl
push
lahf
push
aam
adc
inc
mov
rolb
aaa
movsl
mov
pop
mov
or
pop
test
jle
xchg
lds
and
dec
es
xchg
ljmp
dec
aam
lahf
cld
pop
test
add
inc
call
clc
out
jl
shrl
rclb
inc
hlt
out
inc
bound
add
and
das
cmp
dec
jg
mov
arpl
mov
mov
fisttpll
mov
push
jnp
dec
scas
cmc
or
fstpt
in
and
aam
shll
addl
das
lods
popa
or
adc
or
in
mov
mov
dec
test
push
inc
popf
mov
pop
imul
loop
test
lods
mov
popa
rsm
jb
adc
sbb
or
cmp
sub
je
orb
cs
lds
and
or
je
lds
test
jle
arpl
xchg
jge
clc
and
mov
inc
pop
jmp
mov
push
fnsave
add
in
dec
xchg
dec
in
imulb
iret
imul
mov
pop
pop
or
push
mov
cmc
imul
out
outsb
ss
push
mov
fmulp
mov
cli
jecxz
mov
pusha
les
cmpsl
cmp
and
stc
dec
adc
push
cmpsl
nop
jle
lods
gs
int3
xor
lcall
repnz
sbb
pusha
mov
icebp
dec
clc
es
add
push
cmp
dec
addl
sbb
and
add
inc
outsb
aam
xchg
jle,pt
jp
outsb
bound
out
dec
loopne
stc
loope
das
jae
lcall
stc
mov
or
ret
jecxz
cmp
push
mov
insb
inc
xchg
or
cmp
rcrb
xchg
movsb
subl
mov
pop
xchg
mov
popl
scas
push
andl
bound
fwait
lahf
mov
fcomps
sbb
sbb
sub
jge
mov
fwait
jnp
push
sub
pop
xchg
leave
jbe
mov
mov
mov
xchg
cmpsb
xchg
in
test
bound
rcll
sub
dec
dec
sub
jle
test
add
lds
jle
pop
mov
xor
call
xor
jae,pt
out
rolb
out
js
test
aad
loope
cmp
sbb
mov
aad
cmc
add
es
jp
jnp
xor
daa
daa
adc
out
outsb
or
jns
sub
pop
shlb
xor
mov
movsl
addps
mov
loopne
xor
jecxz
not
pop
in
mov
sbb
xchg
fiadds
sub
jb
jp
push
je
mov
aad
loope
sbb
or
dec
add
sbb
mov
test
inc
pop
xchg
lea
cmp
sub
jge
fcmovbe
frstor
sub
sbb
imul
cmc
add
mov
cmpsb
popf
mov
mov
mov
test
cmp
pop
mov
jns
xor
inc
jb
cltd
loop
mov
lds
jae
pusha
aad
xchg
adc
pop
nop
lock
xlat
dec
or
xchg
sbb
ds
cli
stc
cmc
and
pop
adc
ljmp
xchg
adc
ret
push
xchg
rcrl
jle
scas
loopne
pushf
icebp
jle
ss
jo
lret
xchg
dec
out
mov
or
stc
xchg
jno
jl
movsb
pop
pushf
sahf
xor
inc
rorb
jae
or
lock
mov
sub
inc
adc
or
pop
pop
mov
fmul
and
mov
or
inc
inc
jb
mov
lock
and
cld
cwtl
mov
cmc
inc
insl
repnz
pop
mov
mov
mov
jae,pt
mov
scas
jne
adc
adc
mov
ljmp
push
pop
dec
push
fbld
cmp
lret
xor
cmp
stc
ds
fxam
cmp
add
push
out
cmp
push
ret
sbb
push
stos
mov
das
jle
mov
out
ss
cs
xor
jge
aas
push
lods
ffreep
insb
into
popf
loop
imul
mov
sbb
adc
mov
leave
out
popf
push
cwtl
push
adc
jb
mov
mov
sbb
pushf
stos
pop
jnp
ss
pop
mov
es
incl
les
insb
xchg
jmp
dec
or
xlat
inc
lods
loop
mov
in
test
mov
sub
testb
aad
sub
push
call
pushf
inc
jne
cmp
mov
push
and
aam
fsubrp
pushf
pop
mov
fistl
adc
add
adc
pinsrw
dec
xorl
lea
fsubrp
int
lahf
sahf
jp
cmp
push
lret
push
test
pop
in
jae
pop
adc
stc
xchg
loopne
mov
inc
mov
jb
int3
imul
call
popa
fs
push
mov
out
xchg
fucom
xchg
pop
nop
mov
mull
inc
cwtl
push
mov
rorb
imul
mov
mov
sbb
inc
mov
sbb
test
icebp
xchg
ret
and
punpcklwd
dec
fcoml
bound
jbe
sbb
sub
orl
sbb
in
pop
mov
dec
dec
cld
push
fiadds
cwtl
cmpsb
cld
insb
mov
mov
outsb
mov
mov
fwait
xor
adc
jg
jno
lock
xchg
cmp
or
faddp
mov
fwait
rorb
shl
aam
jno
jg
dec
pop
mov
stc
lock
orb
sbb
test
inc
shlb
adc
out
push
sarl
rcrl
adc
jbe
jp
fucom
push
leave
cmp
das
hlt
in
ds
enter
arpl
call
push
sub
lock
arpl
sub
test
arpl
mov
negb
cmpsb
outsl
cmp
test
lret
popa
stos
addl
xchg
jae
xor
xchg
pop
push
les
or
jge
mov
arpl
cmp
push
cmp
dec
js
jne
repz
adc
stos
inc
sub
xchg
jge
cld
cs
movsb
lcall
pop
aaa
xchg
xor
aam
lea
rol
imul
sarb
rcrb
movsb
arpl
test
jnp
mov
jmp
mov
rclb
pushf
xchg
fisubl
cwtl
out
sub
and
lods
lods
push
xor
decb
imul
int
mov
faddl
aaa
les
dec
adc
cld
divb
push
cmp
loop
jle
dec
das
mov
scas
push
sbb
dec
call
int
or
enter
stc
cwtl
adc
sub
and
sub
lahf
fldenv
femms
push
jg
mov
rcl
pop
popf
or
int3
loope
add
imul
xchg
insb
push
jbe
vsqrtss
and
mov
and
pushf
jbe
inc
and
mov
arpl
or
imul
scas
mov
vpcomb
enter
daa
pop
inc
or
in
mov
les
cmpsb
pop
or
loopne
mov
pop
test
push
iret
adc
test
sub
sbb
mov
addl
iret
jmp
lods
out
enter
and
pop
loope
aas
ret
outsl
sbb
inc
mov
jmp
jp
hlt
in
mov
inc
xchg
mov
cltd
movsb
jle
clc
or
push
insl
ret
mov
adc
sarl
cmp
outsl
test
std
divl
out
mov
mov
push
das
insb
or
adc
adc
shl
jmp
sbb
dec
jo
xchg
xor
pop
push
xlat
cld
add
sub
push
ss
out
fsubr
repz
and
rorb
push
mov
stos
sahf
add
mov
mov
insb
fisubl
rcr
repz
jmp
insb
push
dec
jge
sahf
cmp
cmpsb
cmpl
add
mov
rcrl
xchg
add
in
hlt
pop
aas
or
adc
push
popf
lcall
lds
stc
xchg
mov
lods
push
aaa
ja
fimull
loop
repnz
lods
jecxz
dec
pop
or
jmp
jns
sub
sbb
mov
xor
cmp
push
xlat
mov
in
std
aam
lcall
xchg
dec
insb
jge
xchg
cmpsl
xchg
jne
xor
lret
pushf
mov
mov
mov
bound
into
int3
fcmovnbe
test
pusha
xchg
xor
loop
in
inc
add
jbe
lods
sub
fdivp
in
out
adc
mov
sbb
push
sbb
cmc
xor
xchg
xchg
pop
dec
or
in
dec
cli
xchg
mov
insl
dec
mov
xchg
imul
ja
xchg
jecxz
ds
cmp
int3
ss
addr16
pop
repnz
adc
gs
mov
inc
leave
and
cmp
lret
mov
jecxz
mov
mov
or
sub
addl
dec
adc
cmp
cld
je
aad
jmp
and
jae
jnp
lods
or
jno
pushf
dec
jge
push
adc
pop
push
movsl
push
cmp
dec
dec
std
push
mov
dec
cltd
pop
sbb
adc
adc
xorb
cmp
pop
xchg
repz
push
mov
bound
fstp
jae
push
dec
call
repz
rcrl
cltd
lds
clc
sbb
or
daa
push
iret
push
push
dec
inc
pop
mov
dec
roll
cmpsb
aaa
inc
incb
pushf
shlb
imul
cmc
movlps
mov
lahf
jle
jo
mov
adc
cmp
inc
sub
or
and
mov
xor
pusha
inc
and
mov
add
inc
nop
jo
inc
xlat
loop
mov
mov
sbb
pop
cmp
cwtl
inc
and
loopne
adc
lods
les
fldt
cwtl
scas
cmpsb
movsl
loop
adc
lea
lods
js
fisubrl
xchg
fs
push
popa
xor
mov
mov
mov
mov
rcrl
fldln2
mov
mov
out
jp
push
add
sbb
pop
add
sbb
xchg
jo
pop
push
rorb
dec
adc
xor
pop
ror
sub
rcr
das
xchg
notb
inc
jbe
fstps
sahf
sub
dec
mov
jg
aad
sbb
adcl
mov
sub
adc
pop
out
dec
imul
add
and
in
xchg
mov
daa
jb
ss
xchg
dec
or
mov
jmp
pop
mov
dec
pop
add
mov
addr16
push
test
iret
push
repz
mov
repz
icebp
test
xchg
cs
pop
or
sub
mov
pop
popa
es
mov
addr16
inc
mov
pop
xlat
cmp
popa
pop
out
test
adc
daa
pop
adc
loope
xchg
daa
lcall
fstpl
dec
xor
push
movb
stos
daa
cmpsl
hlt
test
mov
ja
xchg
rcr
mov
adc
subl
fcoms
adc
mov
push
xchg
ss
mov
adc
insb
mov
cmc
jmp
test
andl
push
fstpl
cmpsb
push
insl
insb
push
enterw
sub
push
dec
mov
xchg
pusha
lret
inc
nop
adc
mov
jl
cmp
cmp
aas
jmp
jle
push
idivb
cs
into
leave
ret
push
lahf
inc
mov
dec
and
shr
xchg
iret
cmpsb
cld
dec
out
arpl
push
jno
xchg
dec
push
adc
hlt
nop
je
push
xorb
jg
xchg
mov
aas
jp
lcall
aas
insb
sbb
stos
lds
mov
mov
add
mov
push
repz
gs
ud0
fwait
xor
xor
xchg
lea
lock
mov
and
pop
nop
imul
push
sbb
cmp
sub
mov
cmpb
push
add
add
and
inc
int
pusha
call
jae
addl
adc
push
fidivs
stc
or
cwtl
dec
inc
lcall
outsb
mov
rorl
rcrb
ds
jns
mov
imulb
inc
inc
adc
data16
testb
repnz
jge
lock
dec
sarl
mov
je
jp
jns
xor
dec
xchg
jno
mov
cmp
es
test
stc
cld
push
mov
push
dec
and
insb
inc
or
and
add
test
in
adc
xchg
push
loopne
add
xchg
les
mov
inc
lock
mov
in
loopne
call
cmpsl
push
inc
enter
iret
popa
lods
lods
lret
jg
jbe
xchg
cmp
jno
dec
in
lock
fcoms
pop
push
xlat
add
jo
mov
outsl
sbb
xchg
mov
xchg
out
or
fwait
xchg
and
subb
or
sti
scas
dec
xchg
outsb
mov
in
jecxz
cld
adc
cwtl
inc
sarl
shlb
mov
xlat
pop
mov
or
pop
aaa
cmp
bound
xchg
pop
popa
loope
lods
xor
mov
stc
mov
callw
adc
jae
lock
inc
gs
jmp
icebp
mull
pop
les
mov
cmp
and
dec
nop
mov
adc
and
jl
test
push
pop
dec
orps
sbb
faddl
xchg
mov
jb
in
mov
pop
xchg
add
and
cmp
pop
sbb
mov
mov
cmp
cli
or
sub
test
mov
aas
pop
add
mov
push
add
xor
in
mov
out
in
or
lcall
jb
in
test
shrl
gs
daa
sahf
test
and
jp
sub
dec
sub
je
pop
pop
les
popa
rcll
push
cmpsl
lods
sti
stc
popa
add
cmpsl
mov
enter
jg
mov
in
sbbl
sti
push
add
pop
pop
fisttpll
pop
jnp
addr16
push
into
inc
dec
lods
sbb
cmp
xor
loop
mov
xor
mov
and
mov
adc
dec
mov
int3
leave
sub
inc
cltd
in
push
ret
stos
mov
mov
jecxz
pop
mov
mov
scas
cli
arpl
mov
or
out
cwtl
cwtl
sahf
lret
push
mov
pop
jmp
loop
lock
test
sub
xchg
xchg
xor
rol
xchg
mov
movsb
push
mov
inc
push
arpl
clc
pop
sbb
xor
xchg
hlt
insb
mov
xor
aam
call
cmp
popl
in
push
jno
pop
xor
int3
jbe
scas
sbb
movb
sub
adc
iret
push
xor
call
pop
imul
dec
insl
or
mov
stc
add
sub
outsl
mov
xchg
xor
negl
jae
sub
inc
mov
or
cli
mov
ljmp
sbbl
repnz
lods
jbe
clc
sub
call
add
xor
and
or
jecxz
mov
jl
jecxz
and
fdivr
sahf
out
in
outsb
add
je
aaa
shrb
icebp
jle
mov
add
fildl
insb
icebp
mov
cmpsb
arpl
sarb
arpl
jle
std
and
arpl
cmc
subl
xchg
pop
pop
ss
add
test
sbb
push
dec
lods
lods
sub
jl
xchg
lods
ret
jle
rorb
inc
outsl
jae
sub
jbe
dec
je
sub
xor
in
inc
ja
jge
push
mov
rcrb
adc
cltd
and
in
sbb
or
sarb
sbb
cmpsl
mov
out
leave
jge
jl
push
mov
push
out
fs
inc
loopne
mov
repz
xchg
or
add
jno
add
sbb
dec
enter
ja
xchg
inc
add
arpl
dec
mov
subl
fdivrp
add
fwait
and
hlt
out
add
cmp
xor
hlt
mov
filds
inc
addr16
xchg
test
pushf
jge
pop
xor
or
inc
lret
fwait
adc
stos
fs
enter
fimull
inc
add
dec
jecxz
pop
sub
jmp
push
sub
ja
lods
repz
bound
pop
mov
les
sbb
iret
mov
xor
push
ret
mov
and
stos
push
ret
inc
xor
leave
push
mov
je
mov
inc
sahf
cs
test
imull
push
int3
popa
push
add
xor
and
pop
int3
iret
js
daa
popa
ret
gs
or
xor
and
push
dec
cmp
je
push
lret
les
aad
sub
sti
roll
hlt
lcall
aad
mov
xor
or
sbb
xchg
mov
out
lahf
mov
stos
jb
pop
enter
std
inc
dec
aaa
xchg
xor
lods
fcmovne
mov
sbb
sbb
ret
or
and
inc
inc
movsb
insb
cmp
push
into
push
lret
std
inc
ljmp
cmp
mov
incb
fisttpll
out
icebp
adc
jmp
cmpb
adc
jo
lret
mov
inc
popa
jnp
adc
cmp
sub
sbb
jae
movb
xchg
push
pop
inc
inc
lock
dec
and
cmpb
out
mov
cli
and
icebp
mov
xlat
mov
xchg
jne
mov
jmp
rclb
fstl
movsb
ret
rcrb
sbbl
lcall
xor
aam
adc
jmp
push
dec
pop
adc
xor
sbb
jne
ficompl
sub
adc
jmp
or
fnstcw
popl
xchg
cmp
push
push
and
adc
addr16
jmp
inc
add
fwait
aas
scas
and
movsb
cltd
dec
add
mov
test
mov
enter
mov
bound
inc
sbb
les
jp
rclb
push
mov
scas
push
sub
xchg
idivb
cmp
push
dec
nop
out
and
outsb
push
out
dec
add
rol
sbb
or
movnti
mov
jne
mov
sub
sub
test
lahf
xor
out
inc
mov
out
adc
subl
arpl
push
push
int
xchg
or
and
mov
test
jp
icebp
aad
daa
stc
xchg
jp
jge
ret
inc
and
setp
mov
dec
les
adc
les
fwait
push
fs
ror
mov
aaa
push
push
movl
sub
in
ljmp
cltd
mov
out
icebp
xchg
xor
dec
addr16
pusha
mov
xchg
iret
mov
aas
cmp
cmp
iret
xchg
mov
insl
pop
adc
lods
xchg
sub
ficoms
loope
fsubrs
dec
xor
jp
pop
pop
lret
insb
push
add
sub
cltd
in
mov
or
cmpsl
daa
sbb
or
nop
jg
inc
dec
addr16
testb
das
or
push
dec
sub
push
sub
xchg
int3
fdivs
in
mov
iret
mov
cmp
pop
repz
std
inc
and
or
mov
popa
popa
mov
pop
mov
add
movsb
cmpsb
fnstsw
fsubrs
jbe
jg
xchg
fisttpl
pop
repnz
jns
xor
jmp
sub
jae
xlat
iret
pop
mov
and
adc
loope
dec
xlat
add
hlt
adc
call
mov
stos
shl
outsl
push
out
and
cmp
icebp
cs
inc
fwait
add
push
and
inc
jg
std
dec
or
lahf
mov
iret
xor
mov
sbb
and
rolb
and
or
inc
pop
psrad
push
pop
into
paddsw
rcrb
icebp
inc
lcall
sbb
mov
mov
ss
aad
ret
sbb
lahf
lock
movsb
pop
mov
pop
loope
inc
xlat
daa
or
sub
sbb
notl
dec
jno
jecxz
cmp
mov
sbb
jl
movsb
iret
clc
lcall
mov
cli
dec
cmp
stos
aas
fisttpll
filds
cmp
mov
fmull
ret
outsb
insb
jmp
inc
imull
xor
jg
leave
mov
or
hlt
test
cmp
fs
jb
cmc
mov
and
sbb
scas
inc
mov
jp
lahf
inc
sub
hlt
adc
add
or
les
mov
lds
rcll
in
jne
mov
mov
jbe
xchg
out
xchg
inc
adc
mov
in
xchg
bound
or
es
imul
icebp
adc
xchg
fsts
gs
int3
mov
nop
pusha
lret
pop
cmpsb
movsl
imul
xchg
lock
mov
inc
adc
dec
int
mov
stos
mov
mov
mov
rcll
inc
adc
sbb
cmp
jmp
in
lcall
arpl
test
lods
cwtl
or
jmp
pop
add
into
push
filds
pop
mov
sbb
sbb
pop
repnz
leave
lds
dec
loop
and
jle
out
pop
push
in
push
cltd
aad
pop
mov
arpl
outsb
ret
inc
stc
jmp
pop
ja
dec
cs
scas
imul
jb
adc
add
clc
fsubp
in
push
andl
insl
call
iret
test
pop
orl
mov
cs
sub
rclb
mov
push
ja
xor
mov
push
adc
dec
sti
push
push
icebp
sbb
and
imul
push
dec
rcrl
push
add
fnstcw
fidivrl
imul
clc
hlt
xchg
cmpsl
sbb
inc
push
xchg
aad
xor
aad
cmp
je
icebp
jae
orl
push
nop
stos
dec
mov
sub
push
rcrl
pop
mov
and
dec
and
or
in
mov
ficoml
lods
mov
fistl
daa
in
sbb
mov
mov
or
fcos
mov
in
js
and
leave
mov
ret
cmpsb
iret
xor
mov
lods
rcrl
shrl
out
fiaddl
push
pop
loopne
dec
loopne
dec
dec
fildl
mov
xchg
ss
dec
neg
int3
pop
add
std
lds
pop
jne
dec
loope
gs
daa
popf
sahf
adc
add
or
fwait
push
lcall
and
mov
jbe
add
add
out
xor
out
jg
ds
add
dec
sub
adc
addr16
pop
xchg
jne
addl
ret
ljmp
test
jmp
push
cmp
cmp
sub
fisubrs
mov
dec
movsb
pop
hlt
mov
cmc
loope
dec
jmp
out
popf
inc
and
ja
jmp
xchg
ficompl
je
adc
in
and
sub
mov
das
or
mov
mov
and
inc
lock
mov
mov
out
and
mov
xor
and
stos
cld
movsb
or
popf
mov
jp
ficoml
adc
ljmp
mov
pop
xor
pop
aas
jl
push
loop
gs
popa
jbe
cmp
mov
and
add
jae
cmp
mov
leave
and
inc
mov
cmpsl
cmpsl
mov
push
jno
lds
lret
xchg
jno
loop
popf
mov
inc
pop
jl
pop
ds
lret
xchg
mov
outsb
sbb
icebp
mov
in
sarb
add
test
outsb
sub
mov
insl
sbb
sbb
mov
les
ss
sub
dec
and
xor
push
lea
idivl
into
sbb
sub
and
cmc
test
inc
inc
cmp
fdivl
add
xor
insl
mov
ret
mov
aam
iret
mov
pop
ja
das
sbb
ljmp
push
mov
push
aam
mov
scas
add
xchg
or
dec
insb
flds
push
sbb
dec
cmp
push
ret
stos
mov
shlb
push
loop
mov
pop
mov
or
inc
pushl
push
push
out
mov
push
lock
iret
jo
add
clc
test
cmp
jne
movsb
sbb
mov
and
mov
mov
xor
cwtl
pop
dec
mov
adc
mov
pop
scas
or
adc
inc
aaa
jb
mov
push
sub
stos
xchg
xchg
inc
and
daa
adc
xor
jmp
rcrb
lcall
lea
in
mov
aad
jmp
nopl
adc
loop
outsb
mov
idivl
mov
gs
sub
pop
rorl
test
sub
push
fsubrs
ret
lcall
push
mov
arpl
adc
adc
out
jne
jnp
test
adc
cmp
and
mov
leave
pushf
adc
or
xchg
and
int
aas
and
ss
mov
pop
push
stos
out
fsubl
aad
sub
dec
cli
sbb
xchg
sbb
inc
jbe
stc
sub
inc
test
sbb
lcall
rorb
xor
or
movsb
loopne
xchg
mov
fimuls
daa
and
add
xor
adc
jmp
xchg
dec
divb
out
and
aas
daa
test
lds
movsb
and
inc
mov
ss
ljmp
dec
and
cltd
xor
inc
outsl
mov
jo
mov
inc
cmc
sbb
mov
mov
fisubrs
pcmpeqw
scas
inc
push
cmp
push
out
pop
lret
mov
movswl
loop
sbbl
imul
popa
mov
pop
fbstp
xchg
push
in
rcr
mov
popf
lret
les
test
xchg
ficompl
jne
aad
inc
mov
mov
inc
xorl
or
ss
mov
inc
add
sbb
sbb
mov
test
mov
dec
stc
in
lods
add
jnp
push
pop
js
lods
clc
imul
out
enter
inc
add
fwait
lret
dec
add
sbb
lods
adc
and
lea
dec
inc
adc
out
mov
fwait
std
shll
cmc
enter
mov
cmpsl
xchg
psrlw
push
add
jl
dec
lods
leave
fidivrl
sub
fiaddl
sub
das
sbb
jnp
xchg
sbb
mov
jl
jge
movsb
push
mov
jmp
add
add
negl
aad
ret
and
cld
cwtl
push
out
dec
lahf
mov
push
ljmp
add
pusha
mov
push
push
or
imul
sbb
aaa
lods
faddp
cmpsl
jge
push
mov
ror
cmc
out
faddl
lods
jb
or
in
xchg
test
adc
push
adc
fistl
add
and
inc
imulb
push
mov
dec
scas
lret
xor
or
lcall
cmpsl
les
jno
mov
xchg
sub
mov
mov
ja
push
movsl
outsb
push
and
test
sub
xor
lret
arpl
jbe
xor
jle
mov
push
xchg
and
stc
push
jno
jmp
add
cltd
dec
jae
leave
cli
adc
pop
inc
fidivs
push
and
sbb
lcall
in
out
dec
mov
mov
rcrl
push
cmc
outsl
push
movsl
sub
repz
bound
enter
lods
dec
xchg
mov
aad
adc
jne
cli
jns
cmp
jg
xchg
dec
stos
cltd
fimull
int
movl
enter
pop
fimuls
test
xchg
out
push
ret
push
imul
mov
xor
pop
fldt
sbb
in
in
sbb
rcrb
pop
cld
push
loope
out
dec
aad
into
add
imul
push
out
cwtl
aam
add
lret
jmp
sbb
fwait
sqrtps
ljmp
out
aam
and
cli
ret
test
aaa
clc
mov
ss
in
std
ss
mov
xor
nop
data16
mov
and
orl
inc
push
xor
xchg
lea
rclb
lea
ror
mov
jle
mov
popf
mov
jo
aaa
sub
cld
inc
pop
mov
sbb
dec
inc
dec
lods
outsl
arpl
icebp
dec
add
dec
testb
into
cs
out
lds
cmpsb
mov
dec
out
dec
jmp
or
xor
and
or
in
mov
pushf
xchg
cld
out
pop
mov
and
cmc
push
aaa
push
jb
out
imul
inc
stc
push
or
ljmp
scas
jo
scas
cmc
jg
lret
inc
shrl
jp
sub
outsl
jmp
or
cmp
inc
insl
and
adcl
mov
cmc
mov
and
push
push
call
fcos
cld
fdiv
ret
add
xor
push
loopne
jnp
cmpsb
stc
ja
push
or
aaa
fimuls
iret
pop
inc
decl
jb
into
jb
xlat
inc
xlat
jg
cmp
pop
pop
cmp
inc
jnp
ret
xor
inc
in
ficomps
subb
lret
and
jmp
repz
test
xchg
mov
lods
gs
aaa
in
inc
inc
cmp
pusha
fwait
or
repz
pop
jecxz
int
ret
push
lea
arpl
movsb
cmp
pop
sub
inc
pop
mov
popf
jb
xchg
mov
out
push
or
movb
mov
pop
pushf
pop
out
mov
inc
cmpsb
mov
sbb
push
iret
cli
testl
jb
mov
jae
subl
xor
lret
push
push
push
and
dec
add
mov
scas
mov
ret
fbld
ja
pop
and
rorl
push
xchg
sarl
loope
in
ret
scas
jne
adcl
shl
aad
call
ds
jno
pop
jge
ficomps
loope
fidivl
mov
add
add
jns
jecxz
fwait
cwtl
push
inc
mov
cmp
or
or
lahf
and
xor
movsb
cmp
shl
cld
loope,pt
jnp
stos
mov
dec
sub
bound
xchg
inc
incl
push
sbb
jg
jmp
mov
dec
je
int3
cmpsb
daa
repz
dec
xor
leave
leave
or
leave
stos
ljmp
sbb
in
push
test
test
popf
arpl
and
outsl
ljmp
inc
push
or
lret
jae
and
cmpsl
jno
stc
sbb
add
into
out
jns
dec
enter
out
mov
pushl
mov
add
pop
mov
cld
cmpsb
je
addr16
mov
mov
sub
xchg
xchg
sbb
sbb
push
xchg
mov
mov
adc
pop
ds
sbb
icebp
sbb
push
mov
imul
mov
insl
xchg
insl
sbb
sbb
add
insb
ficoml
and
cmc
test
leave
xlat
daa
adc
mov
cltd
lods
adc
push
and
adc
arpl
loope
adc
mov
push
dec
jnp
test
pop
loop
pop
jo
add
xchg
jge
inc
sbb
jo
stc
std
imul
pop
clc
nop
pop
add
cld
inc
push
repnz
cmp
bound
mov
and
ljmp
ret
adc
movb
es
imul
ret
and
andb
outsl
test
inc
jp
stc
adc
push
fcmovnu
jns
push
pop
scas
mov
jo
arpl
sbb
or
lods
sbb
pusha
adc
push
jb
lcall
or
ja
mov
aas
movsl
pushl
cmp
ss
mov
out
movsl
cltd
pushf
rorl
lods
sbb
and
sub
sub
adc
enter
testb
xor
ds
jp
dec
xchg
and
incb
fisubrl
fcmovb
repz
in
stos
insb
cld
ljmp
jl
test
es
xor
mov
inc
test
mov
xchg
shr
add
jo
ret
ret
sbb
ja
addl
in
fadd
push
fildll
jbe
adc
clc
das
out
nop
rcrl
fistpll
ret
ja
jmp
xchg
insb
aaa
jmp
adc
int3
push
insb
mov
daa
test
adc
out
pop
loope
rcr
push
fwait
out
jmp
push
cmp
cmp
mov
in
stos
ds
push
scas
pop
dec
sbb
fldt
mov
mov
pusha
ljmp
mov
repnz
insb
div
lcall
ret
add
jnp
inc
sub
inc
xchg
mov
repz
cltd
xchg
adc
add
bound
lret
dec
leave
loop
pop
mov
es
mov
gs
cmp
xor
enter
push
cmpb
xor
add
int3
and
push
fisttps
pop
fwait
dec
mov
rcrl
push
push
mov
jge
cmc
loop,pn
sbb
jo
mov
add
ret
int3
add
outsb
push
mov
mov
js
push
jmp
inc
xchg
jns
imul
imul
mov
fiadds
in
lahf
or
xor
bound
fnstcw
jbe
mov
add
mov
fcompl
mov
xor
shrb
xchg
mov
inc
lahf
mov
jne
lret
fildll
adc
out
push
jle
vpxor
or
xor
std
das
pop
imul
mov
nop
je
sub
xor
push
ret
bound
xchg
cmp
out
ds
mov
fstpl
movl
rcrl
push
ret
aaa
sub
cs
ret
ljmp
fs
ficoms
cltd
xor
cmp
or
mov
push
imul
into
je
or
into
mov
in
push
sub
hlt
push
fwait
sbb
std
test
add
fstl
clc
push
sbb
sub
imul
add
jmp
pop
out
mov
dec
div
popf
pop
addr16
test
arpl
lcall
or
jmp
jns
ficoml
fistpl
outsl
in
cs
adc
out
ja
adc
xchg
dec
out
adc
daa
xchg
test
in
adc
adc
xchg
and
mov
out
mov
or
imul
xchg
sbb
ret
clc
mov
xchg
imul
mov
mov
loop
cld
lods
inc
insl
inc
push
jne
cmpsb
push
roll
sbb
cmpsl
daa
fidivl
aaa
xor
arpl
sub
cwtl
jg
pop
xor
ret
daa
and
mov
pop
je
xchg
xchg
pop
cmp
mov
leave
insb
pop
iret
mov
ds
jb
inc
xchg
cs
add
push
mov
fmull
jg
sbb
dec
test
loop
ljmp
pop
in
lods
out
jo
ret
pusha
and
mov
push
or
stos
mov
push
in
add
aas
cmc
jo
out
sbb
aas
gs
les
xor
loopne
nop
pushf
inc
lods
xlat
xor
jns
cwtl
pop
enter
leave
cmp
sarl
dec
jg
loop
and
push
xchg
test
and
clc
sbb
and
aam
ljmp
jle
sub
cltd
arpl
cmpsb
repnz
pop
into
ficoml
mov
cld
outsb
adc
or
jg
add
faddl
nop
inc
pop
loopne
movsl
popf
jb
mov
sbb
xchg
dec
fidivrs
jno
push
cmc
pusha
mov
repz
xchg
push
jg
data16
fldl
clc
push
sub
mov
mov
pop
test
bound
and
sahf
iret
jo
mov
xchg
push
pop
lods
dec
mov
in
and
out
adc
xchg
sub
aam
push
xchg
in
xchg
les
mov
xchg
pop
jne
out
pop
js
mov
clc
frndint
sub
out
call
jae
xchg
dec
push
rep
in
fs
movsb
fcmovnbe
sub
and
cmp
pop
cmpb
movsl
outsb
cmpsb
mov
or
lcall
movsl
imul
mov
lcall
mov
lret
addr16
cmp
pusha
mov
xchg
jne
outsb
mov
in
das
mull
stc
cmpl
pop
jne
imul
popf
loop
fidivl
mov
jle
push
push
test
fsubrs
jbe
push
mov
xchg
add
sub
or
lds
cmc
adc
push
mov
out
sti
pop
popf
ret
fsubl
sahf
inc
xchg
scas
add
xor
mov
mov
and
jo
clc
mov
sarb
push
jle
or
and
adc
mov
fwait
jmp
pop
fistpll
inc
popf
xchg
add
imul
xchg
fistpl
xor
xor
sahf
xchg
mov
lret
jo
sub
out
sbb
pushf
cmpsb
adc
xorl
sbb
mov
jns
jle
push
sub
in
mov
pop
and
data16
outsb
inc
mov
popa
jle
or
pop
test
jbe
out
rorl
testl
or
scas
and
ljmp
xlat
inc
in
xor
adc
xchg
mov
jne
sbbl
loopne
insl
dec
inc
inc
dec
pop
adc
bound
rcrl
scas
xchg
pushf
mov
pop
xchg
cs
mov
aaa
jns
mov
xor
nop
std
cld
jnp
sbb
mov
adc
cwtl
js
sarb
jbe
stos
jne
dec
mov
inc
call
pop
jmp
test
ret
pop
out
push
add
lods
xchg
out
or
mov
mov
cmp
fdivp
xchg
fnsave
push
push
fcom
pop
push
or
inc
pop
ret
pop
adc
push
xchg
cs
mov
mov
sub
insl
push
push
sub
mov
mov
jne
stos
push
sub
push
fistpll
nop
cmp
aas
and
fistps
jecxz
xor
fwait
test
out
je
ljmp
scas
aad
push
lahf
pop
in
loope
and
mov
adc
mov
nop
jno
sbb
popf
fldl
jp
rclb
popf
bnd
and
or
lret
adc
loopne
mov
pop
stos
cmpsl
xor
dec
scas
pop
cs
mov
mov
pop
test
mov
dec
stos
testb
mov
mulb
out
int
sub
inc
fdivp
es
adc
or
push
cmp
clc
es
pop
test
cli
shll
sahf
add
mov
jae
sbb
ficomps
sbb
push
adc
test
cmc
sbb
hlt
ljmp
mov
and
or
dec
iret
jecxz
fnsave
rolb
outsl
int
mov
sahf
pushf
lahf
jbe
out
fisttps
leave
test
mov
aas
mov
addl
shl
popa
pop
lock
sub
in
inc
mov
mov
push
outsl
pop
xor
ror
jle
and
sub
push
mov
cmpsb
add
push
jne
mov
fsubrs
add
call
cmp
ja
fwait
cmpsb
push
int
mov
xchg
fcoms
mov
mov
add
aaa
fmuls
or
push
iret
cmpsb
pop
adc
or
ret
and
sbb
lret
stos
inc
out
inc
adc
shll
hlt
jle
mov
mov
incb
test
inc
adc
sub
jne
dec
insl
adc
adc
pop
jge
push
inc
inc
bnd
sbb
ljmp
push
inc
aad
xchg
inc
pushl
xor
and
adc
pop
xchg
loop
xor
imul
iret
sti
push
xlat
aam
sti
mov
dec
or
rcrl
sbb
jnp
out
dec
dec
or
push
xchg
mov
push
xor
enter
cmp
xchg
mov
int3
ficomps
xor
xchg
das
cmc
jp
int
or
es
sub
ja
and
mov
mov
xchg
int
icebp
sahf
ljmp
jl
push
rorb
cmp
fidivl
xchg
push
and
sarb
sub
mov
cld
iret
gs
clc
add
dec
cltd
jno
xchg
rcl
icebp
pop
ja
enter
dec
mov
ljmp
inc
sbb
sbb
pop
int
pushf
pusha
dec
add
jmp
pop
subb
xchg
repnz
lods
fs
insl
and
arpl
lock
shl
fcomi
mov
lret
mov
pop
dec
jg
lahf
insb
mov
mov
sub
arpl
rcrb
das
xchg
cmp
inc
dec
enter
xchg
cmp
mov
sbb
mov
mov
ss
xchg
sbb
dec
incl
mov
popf
leave
call
jnp
lods
rcll
push
ja
jne
mov
lds
out
sti
mov
daa
ljmp
imul
mov
int
arpl
inc
shl
push
mov
pop
aas
cli
jl
jge
push
push
fiaddl
xchg
scas
lahf
imul
movsb
mov
lahf
add
sbb
sub
mov
lds
sbb
arpl
push
aam
test
sbb
push
outsb
jnp
and
xchg
mov
cwtl
dec
nop
push
sub
aaa
fisttpll
inc
int3
xchg
cmc
mov
xor
jnp
xor
push
stc
add
adc
mov
dec
push
mov
adc
mov
inc
sub
mov
aam
jns
ret
data16
sub
icebp
mov
jp,pn
dec
dec
cltd
scas
cmpsb
adc
and
je
mov
movsl
dec
es
stc
mov
push
test
and
inc
and
fstpt
imul
sti
pop
xor
out
sub
or
adc
addr16
cmp
push
ffree
rcrl
fs
mov
outsl
xorb
mov
or
add
js
sub
jl
push
adc
xlat
dec
in
fistpll
mov
push
inc
dec
mov
dec
jmp
xor
xor
sbb
jae
rcll
xchg
mov
cli
cmp
es
icebp
mov
pop
pop
sbb
mov
div
pop
icebp
icebp
es
add
ret
daa
pop
enter
jns
aas
sub
xchg
dec
mov
fbstp
test
stos
addr16
pop
inc
fwait
ds
mov
mov
push
cmp
aas
sub
fcmovne
std
movsl
cmp
and
ret
cmc
addr16
ljmp
inc
enter
out
sbb
mov
imul
adcl
push
jp
mov
adc
push
lods
dec
adc
fisubs
arpl
nop
pop
mov
jp
aad
jne
test
add
sub
shrl
or
push
mov
jecxz
insb
mov
sub
or
fcoml
xchg
les
xlat
scas
frstor
jp
push
int
jnp
mov
jne
repnz
andl
scas
fs
xor
push
sbbl
fbld
cwtl
mov
es
in
or
das
mov
fldl
pushf
orl
in
lock
mov
ds
jecxz
sbb
imul
sbbb
repnz
cmp
inc
pop
mov
jecxz
cmpsb
jp
data16
mov
push
pop
scas
mov
and
outsl
lret
rolb
loope
jge
mov
and
jno
lds
aad
mov
lea
lods
xchg
rorb
lea
mov
lret
dec
dec
pop
pop
xchg
or
in
imul
sbb
sbb
cltd
lea
js
mov
sub
push
enter
mov
sahf
insl
pusha
push
mov
or
mov
cmp
mov
xchg
or
mov
xchg
shll
call
mov
lds
mov
ss
loop
adc
test
addr16
clc
das
mov
xor
fisttps
pop
lock
movb
cld
mul
adc
sbb
sbb
mov
aas
stc
ret
push
push
test
popf
xor
and
lods
cmp
xchg
cmp
lret
pop
adc
movsb
push
pop
cmpsl
xchg
xchg
pop
add
jo
js
jno
and
mov
push
xor
fdivl
test
mov
out
mov
jne
bound
add
mov
mov
sub
mov
call
movb
mov
or
mov
movsb
pop
das
dec
into
cmc
or
push
xor
out
mov
and
add
mov
jg
add
xor
mov
mov
fimull
sub
mov
outsb
or
or
andb
cmp
inc
ljmp
sub
adc
and
dec
xor
push
test
popa
bound
fsubs
jno
push
cmp
jmp
test
fcmovb
aas
stos
jne
ss
int3
mov
sub
xchg
or
data16
mov
lods
mov
pop
pop
shl
adc
cmc
inc
push
jbe
ss
pop
sbb
repz
fsubl
dec
mov
addb
jmp
int3
pop
xor
xor
pop
stc
cmc
pop
in
cmpsl
negb
cmc
pop
dec
es
push
jle
popf
test
sbb
xor
aad
push
sbbb
incb
dec
adc
loope
pushw
arpl
imul
or
mov
out
xchg
outsl
ljmp
cmpsl
pop
bound
xlat
call
jl
clc
test
je
addb
lcall
xchg
adc
cli
mov
stos
orl
sub
ret
daa
lahf
pop
out
xchg
xchg
cmp
or
cmp
clc
mov
xchg
insl
or
sub
xchg
pop
mov
lods
push
push
sbb
lods
push
pop
js
loopne
or
lds
imul
test
push
and
add
leave
cmpsl
dec
cmp
fildll
std
int3
adc
test
out
imul
pop
sub
lahf
ret
mov
cli
pop
fsubrs
jmp
ja
or
sbb
xchg
fs
mov
xor
lea
xlat
cwtl
out
dec
sub
das
ja
leave
mov
xchg
insb
popl
aaa
add
dec
dec
jne
btcl
pop
std
pop
lret
push
xor
sub
pop
sahf
jl
lret
mov
int
mov
mov
mov
xchg
and
inc
add
iret
adc
es
aaa
outsl
sarl
cmc
and
mov
push
cmp
mov
mov
mov
lea
push
mov
xchg
inc
lods
int
jecxz
xor
stc
xchg
ret
test
mov
cmpsb
in
jb
mov
aam
inc
cmc
pop
call
in
and
adc
int
stc
inc
inc
adc
inc
inc
cld
popa
sbb
inc
lcall
les
into
sahf
imull
jle
fcomi
sbb
sub
adc
fildl
lock
scas
add
jo
data16
into
outsl
dec
lret
dec
pop
xchg
ret
cmp
jge
cs
test
pop
sti
and
sahf
ljmp
stos
js
nop
sub
into
je
icebp
testl
pop
cltd
pop
xor
movsb
ja
xchg
mov
sbb
xor
inc
xchg
adc
inc
stos
xchg
push
cli
imul
push
in
rcll
pushf
lahf
jne
ret
leave
cltd
sbb
pusha
fs
scas
movsl
dec
sbb
insl
scas
stos
or
sti
cmp
in
inc
pop
pusha
inc
pop
loop
jbe
push
xor
sub
push
adc
imul
inc
dec
mov
jne
xchg
jmp
mov
outsb
pop
test
sub
ds
mov
loopne
fisubrs
adc
pushf
pop
push
dec
ret
jg
subb
int3
fcomps
arpl
repz
xor
mov
leave
fstpt
mov
pop
faddl
push
add
loopne
inc
xchg
inc
jcxz
push
sbb
incl
insb
lahf
mov
inc
leave
dec
loope
jecxz
stos
les
mov
jb
dec
add
or
fstps
dec
idivb
std
cwtl
gs
jbe
das
push
in
rorb
cmp
inc
sub
shlb
jne
out
out
push
add
ja
sub
scas
mov
sbb
popf
mov
dec
push
xchg
xchg
les
fwait
outsb
cmp
test
std
sbb
and
push
roll
loopne
rol
loopne
pusha
shlb
push
insb
xlat
xchg
movsl
mov
mov
cltd
ffree
mov
popf
das
pop
mov
es
mov
push
mov
dec
es
add
imul
outsl
loopne
ljmp
inc
dec
fsub
pop
or
outsb
movlps
jb
addb
push
jns
jmp
in
sub
fwait
xor
mov
adc
sbb
hlt
nop
divb
hlt
mov
fidivs
rcrl
adc
iret
jl
pushf
push
scas
cmpsl
mov
or
pop
inc
push
test
call
xor
lods
call
pop
sub
dec
sub
cmp
mov
inc
cld
mov
jg
out
inc
sub
add
jp
mov
mov
popa
dec
mov
mov
xor
add
fistl
push
out
inc
mov
adc
jecxz
shll
or
push
sbb
pop
scas
pop
lret
inc
mov
push
cmpsb
jo
adc
mov
sahf
xchg
jne
ror
add
les
stos
lods
mov
add
sbb
aad
jnp
test
icebp
mov
scas
insl
xchg
mov
jp
mov
icebp
or
clc
les
pusha
addl
mov
and
cmpsl
lods
mov
push
sub
xchg
pusha
loop
in
pop
insb
pusha
and
imul
lods
adc
push
mov
iret
nop
mov
inc
rcll
jnp
int
nop
mov
and
xchg
mov
or
dec
pusha
cmc
flds
cltd
std
idiv
cltd
pop
sbbl
dec
orb
ds
sahf
mov
mov
push
popf
or
stos
cmp
test
dec
sub
pusha
insl
push
lahf
xchg
cmp
push
xor
lods
xor
out
flds
cmpsb
mov
push
push
add
mov
xchg
addr16
jle
stc
jl
mov
iret
cmp
adc
ljmp
mov
fdiv
or
fstpl
xor
dec
fwait
mov
fnstcw
jmp
inc
mov
cmc
xor
pop
shlb
sbb
aaa
mov
clc
xchg
loop
lea
rcrl
loope
mov
or
inc
dec
sub
mov
pop
sti
cltd
je
xchg
in
or
test
rdtsc
push
jbe
rolb
lds
dec
and
jmp
push
mov
xchg
jecxz
cmp
movb
popa
jge
movsb
inc
jle
xchg
aad
shrl
add
hlt
inc
xchg
push
loop
or
and
scas
add
testb
inc
push
push
orl
lret
mov
mov
bound
pop
add
stos
movsl
pop
push
dec
inc
and
mov
cmp
mov
inc
adc
int
cmp
mov
aam
and
dec
outsl
dec
sbb
and
out
or
fstps
or
cltd
test
push
scas
push
mov
hlt
cltd
add
sub
mov
aad
dec
pop
cmp
mov
dec
xor
xchg
scas
aas
rol
xor
push
mov
andb
push
movsb
gs
push
clc
ret
sub
cmp
sti
aam
inc
jb
mov
out
imul
add
cmp
inc
lods
mov
sub
fxch
jno
mov
dec
push
loopne
lods
jb
dec
out
mov
test
fs
dec
sub
add
fwait
sub
mov
xchg
pop
cmp
and
mov
push
jmp
popf
mov
adc
out
dec
mov
stc
mov
aaa
inc
mov
push
dec
sub
lock
mov
jns
fisttpll
xor
shlb
arpl
sbb
insb
ljmp
cmp
jo
fldenv
adc
dec
mov
data16
daa
into
xchg
or
stos
push
inc
rol
and
add
loope
enter
bound
lea
andl
adc
mov
loopne
cmp
add
inc
in
arpl
pop
sarl
xor
lcall
ja
inc
loop
je
popf
add
insb
xchg
imul
mov
outsb
dec
lods
xchg
gs
cs
test
aaa
aas
popf
rcll
mov
call
xchg
or
inc
cli
testb
sbb
ja
cmpsb
jo
aad
xchg
aas
add
fisttpll
lds
fldcw
push
fwait
dec
aad
arpl
mov
mov
in
outsl
out
sbb
xor
dec
test
xor
out
pusha
push
xchg
mov
jne
cmp
sub
iret
mov
mov
adcb
push
popa
bound
fadds
add
aad
mov
push
cwtl
popf
mov
out
inc
dec
add
add
fildll
sti
jns
scas
in
mov
push
cltd
inc
in
sbb
incl
test
adc
or
js
andb
inc
in
xor
testl
mov
jno
dec
cmpsl
mov
pop
shl
sub
push
arpl
and
scas
popa
lahf
jbe
xchg
cld
or
lods
fdivl
sub
cmc
int
js
addb
frstpm(287
loope
mov
add
push
mov
fnstsw
les
popf
fdivrl
shll
push
sub
test
imul
pop
ret
mov
xchg
push
lods
push
fs
cld
sub
rcl
nop
or
mov
push
out
xchg
ret
inc
jno
push
lock
and
into
inc
insl
dec
xchg
xlat
push
jmp
cmp
repz
dec
data16
add
insl
stos
pop
mov
fisttpll
sbb
outsl
aas
lock
mov
and
icebp
add
cmpb
push
sbb
pop
out
jmp
sub
or
and
daa
jge
cmpsl
shlb
imul
mov
frstor
es
pop
inc
es
sahf
pop
and
mov
jae
push
ljmp
ja
in
mov
cwtl
fwait
xchg
lret
shlb
or
add
outsb
cmc
mov
and
mov
jecxz
sub
add
mov
push
jb
mov
lods
in
into
xor
pop
lock
sbb
pop
pop
pop
mov
sahf
add
clc
lds
add
cld
cmp
dec
cmp
or
out
sahf
outsl
push
adc
pushf
stos
mov
out
stos
mov
lds
repnz
fnstcw
jmp
pop
icebp
sub
repz
push
rcrb
stos
repz
add
aam
lods
push
adc
rclb
or
lahf
movsb
sub
xchg
sarb
enter
push
fwait
xor
pop
sub
push
lods
lock
and
and
xor
add
fimuls
cmpsb
pop
aas
cwtl
shrl
loope
mov
mov
sub
mov
jbe
xchg
pop
push
inc
rorl
test
xlat
or
das
dec
fs
inc
adc
push
mov
les
addr16
pop
add
fsubrl
enter
xchg
add
push
pop
xchg
fwait
jle
xor
mov
lcall
scas
sub
rorl
mov
mov
cld
jb
addr16
subb
xchg
bound
sysret
pusha
pop
push
jae
mov
dec
cld
insb
xor
pop
enter
mov
in
ljmp
pop
pop
iret
mov
pop
pop
cltd
cmp
push
mov
push
or
cli
and
test
rcrl
rolb
mov
daa
inc
and
in
inc
nop
adc
add
xchg
hlt
sti
clc
inc
mov
mov
rorl
xchg
lods
test
sub
repz
add
dec
into
enter
or
inc
xor
inc
adc
test
jno
bound
mov
rorb
xchg
pop
push
jle
mov
imul
sub
push
add
dec
or
bndldx
test
sahf
mov
dec
daa
cltd
jp
lods
jmp
mov
cmp
or
mov
cmp
xor
mov
outsl
das
xchg
movsb
sub
sbb
mov
mov
xor
mov
test
scas
sub
jecxz
out
adc
sti
xchg
fs
lods
dec
cmp
imul
and
cmp
xor
or
fcmovne
nop
lahf
adc
in
dec
inc
sahf
push
add
cmp
sub
pop
ljmp
mov
lahf
xchg
movsb
jg
enter
es
addb
push
push
fs
adc
pop
outsb
insb
outsb
aam
popf
out
shl
jbe
jmp
adc
xor
insl
jnp
sbb
shlb
pop
lea
add
mov
sub
mov
pop
mov
aas
mov
push
sbb
shrl
push
rcl
jl
iret
jno
popf
fisubrl
jae
mov
or
sbb
cmp
fs
repz
cli
or
sbb
xchg
mov
mov
scas
ret
and
mov
dec
das
and
jae
js
mov
fucomi
lahf
aad
mov
cmp
ljmp
sbb
dec
push
jge
inc
cltd
pop
xchg
sbb
lret
cmp
fwait
ret
incb
mov
dec
in
push
jg
mov
enter
stos
int3
dec
scas
mov
cli
xor
outsl
jge
mov
out
lret
mov
and
pushf
arpl
sahf
xor
je
shll
ds
std
sub
stc
shlb
sub
out
sti
dec
sbb
test
push
pop
fcmovu
inc
jnp
and
push
dec
cmpsb
jb
add
daa
icebp
inc
in
iret
xchg
mov
icebp
cld
push
pusha
xchg
xchg
add
fldl
in
ret
sbb
xor
adc
xchg
das
cs
loope
lds
pop
sti
jp
xchg
js
jl
out
addr16
sbb
jmp
dec
roll
dec
add
mov
in
lods
lret
mov
hlt
adc
das
and
mov
mov
cld
jg
scas
xchg
fwait
xchg
add
jne
jb
pop
shl
sbb
fdivrp
jge
cmc
pop
jecxz
sbb
js
stos
jne
lret
sbb
jle
testl
outsb
xor
inc
adc
in
sbb
push
and
addl
daa
addr16
stos
std
andl
push
sub
xchg
js
enter
mov
daa
repz
or
mov
jbe
mov
popl
aad
mov
inc
and
cld
push
pop
pop
cltd
jl
aad
cmp
popf
cmp
shrb
mov
xchg
cmp
xor
mov
cwtl
push
icebp
mov
xorb
loop
mov
insb
add
shll
ret
js
adc
add
add
sbb
mov
jp
jmp
push
and
sbb
int
lret
adc
sub
mov
bound
pop
xchg
xorb
mov
mov
jb
add
or
dec
push
xor
mov
mov
mov
in
and
sub
rol
lahf
or
cmp
daa
mov
xchg
shr
rclb
outsl
xchg
jnp
xor
xchg
imul
adc
jne
mov
xor
imul
push
loope
cli
out
push
mov
or
xchg
push
mov
sub
sbb
jle
or
mov
dec
je
out
lret
cld
pop
mov
xchg
dec
jg
inc
lods
mov
pop
movsl
dec
mov
mov
xchg
push
fdivrs
mov
es
cmp
call
cld
daa
or
pop
les
hlt
out
orl
repnz
sbb
add
sbb
dec
fs
mov
fbld
repz
inc
out
testb
mov
adc
add
mov
mov
addr16
xor
frstor
mov
cmovae
divb
jns
sub
jmp
lods
and
xchg
mov
test
insb
push
movsb
ficoms
cmp
aaa
inc
or
into
aam
nop
xor
leave
imul
decl
ss
loop
dec
adc
out
adc
inc
scas
loopne
push
jecxz
jg
sahf
insl
lret
movsb
xor
ljmp
inc
das
pop
or
ret
test
es
roll
inc
cmpsl
dec
movsb
repnz
xchg
sbb
push
ja
jo
loopne
ja
sbbl
mov
sar
test
xchg
jo
pop
jp
repnz
leave
dec
repz
and
xor
out
push
mov
test
sub
lods
sbb
movsb
wrmsr
ret
pop
cmpsb
xor
pop
sbb
pop
push
or
mov
out
std
popf
call
cmp
and
mov
insb
mov
lret
xchg
adc
pop
insl
jno
dec
xchg
orl
mov
dec
sbb
fidivrs
dec
js
add
cmpsb
icebp
testl
enter
cmpsl
pop
popa
and
cmp
addl
mov
adc
aaa
push
dec
test
mov
mov
push
add
add
pop
sbb
xorl
rorb
insl
in
xlat
xchg
aam
aaa
dec
sbb
in
push
sub
xor
sbb
mov
pop
push
fisubs
je
pop
xor
xchg
xor
sub
test
push
xchg
or
sbb
icebp
xor
push
cld
dec
mov
ljmp
dec
and
repz
cli
sbb
arpl
sbb
sarb
iret
mov
mov
outsb
pusha
mov
in
mov
sub
push
xchg
sti
xchg
fmul
cmpsl
lds
sub
in
ret
ret
inc
xchg
jecxz
repnz
mov
xchg
into
mov
test
imul
mov
inc
and
orb
adc
mov
loop
ret
je
fmuls
insb
pop
jp
leave
fwait
sub
gs
stos
xchg
in
rorl
mov
jo
mov
jmp
pop
inc
es
xchg
add
insb
mov
ja
outsl
rcrl
call
jo
out
rolb
popf
cmp
arpl
out
std
mov
xor
mov
add
or
cmp
sub
xchg
aam
adc
scas
loopne
mov
repnz
sub
xchg
repz
xor
loopne
hlt
push
push
mov
call
pop
cmc
loopne
add
push
mov
out
inc
idivb
sbb
jnp
and
test
movb
cmp
addr16
mov
cmp
movsl
jmp
les
in
mov
shrb
es
mov
cli
xor
fsubl
push
cmp
mov
stc
mov
or
aad
cld
adc
sbb
sub
mov
inc
into
out
inc
in
fwait
push
mov
push
cmp
cltd
ret
adc
jno
push
or
mov
fcomps
test
push
cmp
mov
mov
mov
mov
in
inc
std
sub
mov
push
add
dec
pop
mov
pop
into
cwtl
xchg
cmp
and
jo
nop
add
fwait
inc
pop
aaa
fcomps
hlt
sbb
aaa
dec
xchg
leave
jmp
mov
outsl
sbb
sub
sub
das
sbb
mov
outsb
xlat
sub
sbb
incb
data16
lret
leave
dec
ret
les
sub
cs
push
mov
adc
pop
testb
sahf
cld
push
je
inc
xchg
jge
add
adc
xlat
xchg
sbb
mov
xlat
xor
bound
fsubl
sub
mov
fstpt
add
jne
push
push
jns
loope
sbb
cmpsb
in
jmp
scas
aaa
mov
pushf
push
pop
les
inc
mov
jns
adc
xchg
push
mov
loopne
push
jno
in
cmp
jns
loopne
add
ret
xor
shll
cmp
repz
ret
add
cmp
dec
movsb
mov
dec
dec
adc
or
adc
incb
push
push
jge
mov
cli
cmp
test
jl
fisubs
jge
clc
sub
in
add
cmp
addr16
or
popf
lods
pop
push
and
pop
adc
and
adc
dec
jp
inc
sbbl
pop
cmp
and
rcrl
cs
pushf
iret
loope
test
ret
or
lcall
js
mov
lret
popf
addr16
jne
pushf
frstor
scas
lcall
dec
mov
dec
sub
outsl
into
mov
sti
xor
push
dec
mov
xor
jns
imul
popf
scas
orb
lock
outsl
mov
inc
dec
cmp
es
and
lods
aas
add
rcrb
fs
inc
inc
repnz
subb
adc
push
stos
adc
loope
pop
stc
lahf
sti
mov
jnp
xchg
jmp
jg
add
sti
jp
int
cld
xorl
cmp
push
hlt
mov
dec
and
adc
xor
imul
aad
inc
sub
daa
mov
mov
dec
subb
dec
into
adc
imul
jne
adc
out
push
jae
xchg
std
scas
out
ja
xchg
stc
push
arpl
out
jle
ficoms
mov
cmpsb
and
test
xor
aaa
sub
fstpl
out
lret
mov
test
cmp
testl
cmp
mov
pop
xor
adc
cmc
out
pop
mov
imul
rcrl
jmp
incl
jae
inc
sti
mov
pop
sub
inc
xor
popf
jp
pop
stos
mov
mov
lods
ret
pop
aas
cmp
popa
stc
loop
pop
cmp
rcll
cmp
push
xchg
add
cmpsb
lret
pusha
ljmp
or
mov
out
inc
xor
int3
inc
adc
aad
clc
push
sbb
int
inc
addr16
lea
dec
andl
mov
xchg
jecxz
xchg
push
xor
outsl
insl
push
loope
cmpsl
repnz
sub
imul
cs
sahf
data16
js
mov
adc
add
leave
xchg
dec
fs
push
or
shr
test
jg
fstpl
mov
mov
push
cs
inc
rorb
mov
jbe
lcall
xor
push
lods
push
xchg
mov
sbb
push
data16
dec
into
xchg
out
cmp
neg
mov
push
and
jecxz
adc
dec
movsb
mov
jmp
cmp
push
fstl
sub
dec
incb
faddl
push
ds
pop
adc
imul
sub
sti
pop
sbbb
repz
outsb
loopne
sub
repnz
xchg
js
xor
test
mov
int
cmpsb
out
adc
inc
push
inc
or
and
mov
jl
adc
data16
add
leave
jbe
and
cmp
std
sbb
lahf
sub
das
adc
mov
jmp
and
insl
cmp
aam
add
xchg
fmull
in
sub
out
mov
dec
leave
sbb
mov
jo
xchg
cwtl
adcb
push
xor
ss
popl
lock
push
das
divb
leave
push
jne
cld
mov
and
outsb
hlt
das
in
popa
mov
jl
jnp
es
pop
shll
jmp
pop
push
fsubrs
ror
into
push
xchg
cmp
stos
dec
fimull
rol
clc
cltd
int
inc
and
fucom
paddusw
repnz
dec
xchg
sbb
mov
jne
sub
jmp
pop
cs
sbb
jl
pushf
cmp
push
push
push
dec
test
repz
adc
cs
popa
sti
dec
add
dec
fisubrl
adc
cmpl
mov
js
mov
je
loop
add
dec
adc
movsb
xor
aaa
jmp
xchg
shlb
mov
sbb
xor
and
and
xor
cld
scas
call
or
mov
stc
and
dec
mov
push
sbb
push
addr16
push
ds
add
idivl
fidivl
insb
inc
dec
stos
cmp
cltd
sbb
es
ret
je
dec
cmp
aaa
std
mov
sbb
adc
mov
aad
push
or
scas
mov
fisubrl
or
sub
inc
aam
das
sahf
addb
lcall
dec
gs
out
iret
mov
cmp
sbb
inc
fldt
popa
jmp
lods
call
adc
sub
and
cmpb
imul
jecxz
lea
mov
and
sub
inc
xchg
call
inc
inc
push
xlat
inc
mov
xor
adc
dec
leave
mov
pushf
xchg
lods
pop
push
push
jmp
insb
clc
xchg
fidivrl
ds
out
push
and
inc
into
sbb
jne
mov
cmpsl
xchg
push
in
sub
jae
ds
repz
sub
jnp
pop
mov
push
mov
xor
ret
push
push
adcl
out
mov
cmp
or
pop
dec
stos
xchg
cli
popf
mov
pop
add
xchg
test
out
mulb
and
push
xor
or
aad
push
mov
cmp
push
pop
mov
cltd
pop
xchg
decb
out
ffree
lcall
sub
adc
cmp
cmp
arpl
jno
scas
pusha
cmp
ds
xchg
mov
data16
fisubrl
outsl
call
jb
sti
lock
pop
and
adc
jne
int3
ljmp
jl
sahf
dec
outsl
mov
addl
out
inc
mov
in
mov
or
and
jb
push
enter
pop
lret
jo
pop
inc
cmpsb
mov
adc
dec
mov
addr16
scas
sub
rcr
les
cmpsb
cmpsb
pushf
mov
inc
in
das
dec
xor
lahf
adc
jno
fdivrl
inc
leave
cmpsl
popa
repnz
out
sbb
cwtl
xchg
into
mov
fcoms
adc
fst
sbb
or
mov
movsl
mov
cltd
mov
jns
mov
out
fwait
mov
or
jo
cmpsl
jns
in
xor
aaa
cwtl
lret
andl
stc
sub
add
jno
mov
fstpl
fildll
xchg
adc
std
mov
cmp
clc
lret
cmp
xor
fidivl
xlat
jl
inc
jecxz
adc
in
dec
aad
xchg
insb
scas
jge
mov
imul
xor
cmp
in
popf
or
out
dec
dec
aad
push
xchg
sbb
mov
inc
out
lock
mov
enter
adc
fldenv
xchg
orl
stos
hlt
dec
adc
mov
dec
cltd
je
mov
mov
mov
addl
mov
insb
sbb
adc
andb
ret
and
push
jp
mov
fistps
pop
cmp
iret
out
fstpl
jmp
fdivl
cs
js
push
ret
pusha
fidivrs
dec
adc
in
enter
xor
imul
aaa
ja
popa
stc
pusha
fldenv
add
dec
jnp
xor
mov
mov
stc
sub
sbb
lds
stos
das
movsl
mov
dec
or
mov
lods
lret
pusha
dec
mov
mov
jb
cmpsb
cld
ss
mov
divb
add
mov
pop
cld
movsl
inc
cmp
mov
loope
mov
sub
mov
sub
add
pop
in
mov
push
imul
sub
adc
and
push
out
xor
adc
mov
sbb
push
imul
scas
js
rorl
lret
mov
dec
mov
shlb
dec
sub
xchg
out
sar
mov
jp
je
jnp
popa
lock
xor
outsb
jbe
pop
mov
xchg
gs
repnz
and
inc
push
pushf
jge
xchg
scas
hlt
push
jg
inc
pop
out
xchg
sbb
add
sbb
jae
lock
mov
cmp
xor
xorl
js
mov
cld
insl
push
dec
scas
lock
test
fs
mov
sbb
movsl
in
ljmp
add
mov
shrb
movsl
adc
movsl
in
into
clc
jp
sbb
push
in
or
hlt
call
jae
mov
loope
es
push
and
and
adc
mov
jle
rorb
mov
dec
jge
in
mov
ficompl
add
sub
out
jo
aas
testl
dec
mov
sarl
stos
lahf
inc
cmp
cmc
gs
dec
mov
popf
pop
ja
jp
push
std
pop
add
repz
in
stos
inc
sub
or
push
icebp
mov
popf
push
mov
jnp
inc
cmpl
arpl
and
push
push
mov
sti
inc
add
fwait
or
mov
cmp
push
fistps
adc
inc
test
mov
rol
mov
adc
push
scas
into
sub
inc
mov
inc
enter
lea
and
int3
push
add
lret
enter
andb
das
bound
cmp
jbe
push
add
push
es
push
dec
jb
jecxz
or
nop
fildll
mov
cs
sbb
cmp
mov
adc
stc
add
hlt
adc
or
in
lahf
aad
cmp
das
je
fwait
xchg
jbe
inc
scas
and
les
xchg
xor
pop
cmp
movsl
imul
or
cmp
lahf
push
push
push
mov
imul
mov
jno
stc
sbb
icebp
stc
add
lock
es
adc
stos
lods
add
add
pusha
pop
dec
lea
hlt
out
insb
add
cmp
out
and
mov
mov
call
repz
bound
sub
mov
jp
ret
in
cmp
out
cmp
pop
outsb
sub
jmp
mov
push
inc
movsb
sub
push
subl
hlt
test
inc
adc
movsb
sbb
rolb
push
les
xor
pop
or
cmp
fnstcw
jo
pop
loope
lea
xor
lock
pop
gs
push
call
jbe
pop
mov
jmp
cli
xor
cld
and
mov
push
dec
push
xchg
shrb
cmp
mov
dec
mov
dec
mov
in
xor
test
outsb
mov
dec
mov
sahf
jnp
aas
ret
push
clc
xchg
or
call
test
out
cli
push
pop
jl
jp
imul
xor
std
daa
sub
mov
hlt
imul
xchg
xchg
scas
lods
pushl
jge
dec
xchg
lret
add
or
loope
out
rorb
mov
add
pop
aad
hlt
inc
xchg
mov
aaa
nop
cmc
int3
xchg
ss
shl
scas
ret
out
aam
or
cmpsb
cs
pop
je
pop
cmc
jg
outsl
out
mov
je
sub
aaa
dec
adc
xchg
in
loope
outsl
hlt
or
jg
add
mov
ja
mov
mov
mov
aaa
test
add
nop
or
popa
adc
fmulp
or
cld
flds
cmpsl
je
or
adc
imul
sbb
xchg
nop
xor
pop
pop
inc
mov
fwait
clc
jmp
dec
fwait
push
push
test
ret
lods
filds
jg
pop
mov
lods
mov
lret
mov
nop
rcrl
jno
xlat
and
or
add
sbb
xor
cld
fdivs
add
jmp
dec
lods
inc
aas
pop
sub
jne
xchg
xor
je
leave
or
popl
jecxz
shlb
in
inc
pop
mov
lret
push
stc
jns
push
push
jo
push
loopne
insb
in
mov
push
pusha
aad
hlt
stos
xchg
mov
mov
pop
in
daa
pop
out
mov
jno
sbb
inc
sti
inc
dec
stc
hlt
xchg
cmpb
jl
add
xor
outsl
and
sbb
sub
jl
shl
insb
lahf
mov
cmpsl
sbb
fisttpl
std
mov
mov
icebp
icebp
xchg
outsb
mul
pop
jl
fsubs
add
stos
test
test
and
jne
inc
push
popa
lods
outsl
fldl
lcall
adc
add
jb
pop
negl
sbb
subb
cmpsb
cmp
lods
xlat
xor
ljmp
popf
outsb
and
push
inc
add
nop
sahf
adc
dec
or
mov
cmp
and
lret
jp
add
out
test
movsb
dec
mov
push
clc
pop
pop
enter
fidivl
add
mov
into
adc
aad
imul
mov
jmp
and
mov
mov
pop
bound
lahf
add
or
dec
arpl
sub
mov
push
add
nop
scas
imul
or
and
out
jb
xlat
mov
and
mov
icebp
fwait
leave
scas
popf
sbb
loop
pop
jge
sbb
out
mov
fdivrp
mov
out
pop
enter
gs
sub
loopne
push
sbb
xor
mov
fbld
adcb
stc
pusha
jae
adc
insb
pop
inc
mov
popl
mov
mov
sbb
mov
jg
js
pop
push
data16
jbe
outsl
cmp
pushf
xchg
and
stos
addr16
pusha
sub
dec
xorb
leave
nop
lods
sub
adc
in
imul
cmp
and
mov
xchg
sahf
clc
jmp
xlat
test
push
jl
je
pusha
or
addl
out
mov
fsubrl
dec
and
outsl
pop
jmp
jne
leave
mov
scas
arpl
mov
fs
loop
in
push
pop
jae
cmp
add
test
jbe
mov
dec
cmp
nop
or
push
xor
int3
push
mov
scas
push
mov
lahf
mov
mov
push
notb
sub
push
sahf
int
pop
xchg
je
hlt
notb
enter
lret
aad
xchg
xor
or
sti
adc
dec
push
sbb
push
xchg
stos
inc
sbb
push
sub
addb
jns
cmpb
jmp
arpl
bound
push
xor
adc
or
push
fdivrl
sub
pop
cwtl
or
sub
or
cld
imul
ret
out
mov
mov
lret
hlt
repz
loope
sbb
xchg
pop
jb
mov
and
lret
test
and
in
inc
jl
jnp
test
shl
add
adc
sub
jne
fisttps
xchg
into
adc
push
xchg
mov
lret
mov
xchg
xor
roll
jbe
aam
lret
or
adc
sahf
pop
adc
pop
dec
mov
out
and
dec
push
xorb
repnz
mov
lret
sub
inc
outsl
jne
out
mov
je
mov
mov
mov
aas
add
aam
sbb
adc
pop
into
test
pop
xorb
dec
jg
push
stos
mov
scas
jge
ret
fiadds
xor
subb
or
rclb
jle
cltd
xor
mov
ficoml
outsb
jne
jl
mov
enter
or
mov
addr16
inc
adc
jbe
pop
add
out
cmp
in
insb
mov
andl
or
faddl
icebp
fisubrs
imul
adc
fdivrs
insl
xor
out
lds
lods
and
fdivrs
jno
shlb
cmc
pop
dec
xor
mov
mov
loop
outsl
sbb
push
cmp
pop
pusha
mov
enter
cmpsb
mov
es
jl
jge
or
mov
mov
ret
dec
out
and
dec
push
sti
cmp
dec
arpl
jle
mov
cmp
jno
cli
sub
rcll
rorl
fimull
stc
sub
or
mov
insb
xor
fdivrl
mov
loopne
mov
mov
fmulp
jbe
pop
pop
daa
jbe
ss
xchg
js
imul
les
into
xor
sbb
or
ret
mov
and
mov
inc
sarl
sub
mov
adc
sub
mov
je
lcall
aad
nop
inc
xchg
mov
es
xor
add
mov
mov
fcom
sbb
flds
aaa
out
fcomps
frstor
pop
cld
or
enter
into
mov
mov
jno
xchg
int
pop
sti
mov
stos
stc
mov
fs
push
jl
and
inc
fsubr
enter
shlb
adc
xchg
xchg
sub
push
dec
mov
lret
jg
inc
xchg
inc
and
clc
dec
aam
mov
in
jo
in
pushl
dec
pop
mov
inc
es
cmp
sahf
adc
int3
lock
cmp
test
dec
ss
sbb
ret
enter
inc
iret
jge
ret
negl
arpl
push
inc
sbb
xor
enter
es
fbld
data16
test
pop
xor
and
sub
mov
sub
push
push
push
hlt
add
pop
pop
sub
fists
jbe
rcrb
das
dec
bound
pop
jo
or
test
push
fildll
cmp
movsb
addr16
xor
xchg
ljmp
cld
cmpsb
shlb
mov
call
out
inc
mov
push
shl
xchg
addl
cmp
push
loop
add
gs
das
ret
inc
push
shrl
and
test
mov
dec
dec
movsb
dec
pop
mov
stos
pop
xchg
inc
sahf
pop
stc
xor
sbb
xchg
mov
lock
push
or
and
and
hlt
or
ret
xlat
mov
out
pop
jno
mov
jge
sti
fmul
sar
into
pop
insl
insl
and
stos
cmp
pop
mov
pop
fstps
sahf
jno
loope
push
inc
jae
adc
xor
dec
push
ret
leave
sub
mov
aam
dec
push
or
pop
and
dec
in
inc
fdivp
and
imul
dec
sbb
sub
jecxz
jp
inc
repz
aaa
mov
pusha
push
jno
out
lahf
sbb
mov
inc
test
mov
xor
in
jmp
sahf
ficoms
shrl
mov
int
jbe
mov
push
fstps
or
dec
pop
cmpsl
les
js
dec
test
in
std
cwtl
jne
adc
xchg
iret
and
mov
pop
dec
dec
and
or
lock
and
test
in
les
dec
into
lods
mov
cmp
ja
mov
jg
dec
fs
adc
int3
dec
push
add
jns
pop
mov
push
out
pop
imul
xorb
xchg
outsb
mov
dec
xchg
xor
call
lds
jbe
inc
xor
pushf
xchg
sub
xor
out
mov
out
xor
mov
pop
lret
outsb
xchg
in
pop
or
push
int
or
loop
dec
sub
jno
into
fcoms
xor
push
mov
adc
push
es
lds
lcall
mov
sbb
out
bnd
in
adc
lock
repz
out
adcl
pop
jmp
sbb
cli
cmpsl
imul
push
lahf
mov
xor
dec
mov
scas
inc
or
adc
ljmp
push
or
stos
popa
int
add
ss
mov
add
pushf
loop
lcall
fnstsw
pop
call
scas
repnz
into
jp
dec
adc
add
test
push
iret
mov
testw
mov
cmpsl
adcl
adc
test
push
in
je
lcall
loop
adc
push
das
mov
in
loop
xchg
fsts
popa
xor
sbb
fbld
jns
sub
stos
pop
pop
pop
int3
shll
sbbl
shlb
js
push
orb
dec
xchg
enter
mov
adc
mov
popa
addr16
adc
enter
test
es
push
in
xor
insb
xchg
and
cmp
fs
icebp
add
and
adc
add
cmp
es
stos
jae
shll
lahf
push
sub
lret
repz
in
hlt
pop
mov
push
dec
pop
call
ret
movsb
jp
xor
xchg
push
lcall
ja
jne
mov
call
mov
push
out
pop
fldl
jno
jae
es
mov
cltd
push
inc
mov
imul
add
lret
pop
in
pop
and
or
add
cmp
cmp
dec
nop
sub
cmpsl
jge
mov
xor
xchg
jp
jl
cmp
sub
fwait
fwait
and
xor
test
pop
ffree
aaa
test
or
pop
iret
int3
sub
mov
push
inc
jecxz
mov
subl
scas
jo
popa
lods
cmp
xor
jge
pop
pmaddwd
sbb
fstpl
fstp
cltd
xor
mov
pop
mov
pop
icebp
enter
jmp
stc
mov
les
icebp
mov
bound
inc
test
cmp
add
adc
enter
mov
aam
jg
mov
pop
test
push
fiaddl
pushf
icebp
wbinvd
in
xor
dec
xor
fiaddl
add
and
inc
pop
cmp
jmp
addl
sbb
add
sbb
pop
aad
sahf
xchg
jl
clc
push
and
jo
inc
movsl
adc
sub
int
cmp
cltd
in
cld
pushf
jns
sahf
pop
mov
stos
pusha
xchg
and
in
cld
or
jbe
cli
pop
inc
jmp
sub
mov
call
adc
mov
jbe
mov
jnp
inc
cltd
dec
fidivrs
stos
push
jnp
jbe
pop
sub
push
ret
outsl
add
xchg
dec
mov
xchg
std
and
push
jg
cmp
or
mov
lahf
test
inc
insl
xor
and
adc
xchg
in
shrl
dec
inc
out
sub
clc
cmc
icebp
fwait
pop
pop
jno
adc
shlb
loop
sub
jge
int
jecxz
jbe
mov
dec
sti
push
jnp
lahf
fsubl
xchg
ljmp
pop
sub
or
inc
inc
mov
add
mov
das
iret
cmpsb
inc
pop
mov
int3
inc
popa
mov
sbb
dec
mov
sbb
imul
rcrl
inc
mov
inc
clc
shl
out
or
stc
cmc
jb
sbb
inc
shlb
push
arpl
xchg
ret
add
loop
lret
sti
cmp
jecxz
clc
jbe
inc
popa
or
fisttpl
mov
sbb
mov
pop
and
lods
mov
cltd
sub
into
cwtl
sbb
mov
jle
push
pop
push
roll
daa
inc
pop
cmc
push
mov
dec
mov
clc
lcall
fstpl
pop
popf
pop
mov
out
jmp
push
in
or
repnz
je
fmull
cmp
or
xor
sahf
sub
shll
jecxz
inc
dec
pop
mov
inc
pop
mov
cmp
repz
xlat
add
les
dec
and
and
repz
aas
add
jecxz
test
imulb
dec
adc
sbb
ja
ss
cmp
pop
imul
mov
scas
push
push
inc
xchg
jmp
je
xor
push
push
sti
aam
imul
mov
jns
idiv
push
adc
cs
rolb
mov
js
vmovdqu
push
mov
daa
sarb
mov
jae
test
adc
cltd
or
shl
or
adc
mov
mov
daa
xchg
or
divl
mov
jo
cmpsl
loopne
sub
movb
adc
push
fidivl
push
pusha
test
adc
in
xchg
add
out
cli
pop
in
mov
mov
mov
clc
sub
push
xor
test
push
sub
aam
mov
push
imul
stos
xchg
mov
loop
mov
jb
dec
outsl
mov
fnstsw
sub
jbe
or
mov
mov
cltd
add
xor
and
push
cwtl
pushl
iret
std
pushl
and
int
in
in
fistpl
fcoms
test
test
xor
sub
test
push
jb
dec
adcb
pop
fucomp
lret
sbb
mov
cmp
jnp
and
add
js
bswap
repnz
rcrb
rolb
pop
cltd
lods
ljmp
cmp
je
mov
pop
fcom
mov
insl
jp
add
jmp
mov
fxch
xor
addr16
js
inc
jg
scas
ljmp
leave
push
or
sbb
iret
in
popf
cmpsb
xor
cwtl
pop
push
sbb
icebp
jne
xchg
jb
inc
imul
adc
loop
push
enter
nop
insb
xor
int
mov
sub
rcrb
pop
and
aad
dec
jne
std
mov
sbb
mov
sub
adcl
repnz
les
inc
xchg
add
pop
mov
push
pop
sub
push
clc
into
das
cli
xchg
pop
hlt
xor
dec
mov
into
pop
and
aad
mov
push
cmp
sub
xor
pusha
cmpsb
mov
push
pop
dec
add
outsl
xlat
jl
decb
imul
lds
xlat
loop
ss
push
jns
lret
mov
xor
enter
mov
hlt
add
lods
neg
repz
jo
push
mov
ret
mull
jle
in
outsb
adc
rol
imul
addb
jge
repnz
icebp
mov
sub
inc
sarl
and
xchg
and
xlat
inc
or
push
pushf
jge
nop
ret
rcr
shlb
cmp
inc
sub
mov
insb
sbb
repz
lds
std
pop
inc
mov
lock
test
mov
out
dec
mov
aaa
fstpt
repz
xchg
hlt
gs
cmovg
jae
sahf
and
int3
leave
sbb
xlat
movsb
rcrb
add
pop
fisubrs
popa
cld
xor
and
jae
push
ss
lea
roll
ret
sti
repz
stc
insb
jbe
xchg
cmp
jnp
push
add
lds
into
add
fwait
ja
imul
add
push
mov
jmp
jg
int
movsb
cmovs
cmp
inc
test
or
in
data16
add
inc
movsl
sbb
out
int
je
mov
mov
cmp
ljmp
and
stos
cltd
popf
mov
pop
test
aaa
fcoms
lock
in
test
pop
inc
insb
add
aas
jno
mov
cli
xchg
xlat
aad
shrb
push
mov
sbb
add
and
sbb
mov
dec
scas
cli
add
sub
and
dec
push
cmc
cltd
push
pop
cmc
adc
dec
outsl
sub
add
int
add
jne
push
fcomps
xchg
push
ja
adc
je
push
jb
mov
rorl
xor
iret
dec
cmp
and
sub
xor
adcb
das
mov
aad
mov
cmc
mov
jle
mov
data16
push
repz
add
insb
js
adc
loopne
in
das
rcr
jp
inc
shlb
jae
push
movsl
lahf
rcll
ja
fcoms
pop
add
cs
sub
sti
jne
in
jbe
inc
hlt
in
inc
nop
mov
or
cld
push
std
adc
inc
dec
pop
test
insl
fldcw
jnp
outsb
mov
cmp
lahf
add
inc
jno
cmp
bnd
add
lea
and
pop
sti
pop
adc
movsb
xor
cmp
sub
mov
sarb
jp
jg
jne
into
mov
les
mov
das
adc
lret
stc
adc
jns
cmp
clc
inc
test
jmp
push
push
into
es
lcall
xchg
fisubl
xor
and
fmulp
dec
xor
jecxz
push
dec
mov
imul
aaa
add
jmp
adc
xor
xchg
mov
arpl
into
adc
and
in
jo
push
cltd
dec
stc
sbb
adcl
and
jp
fistpll
jne
jns
xchg
push
push
sub
mov
add
aam
js
fmuls
loope
subb
jb
sbb
in
movsl
testl
mov
pushf
push
mov
mov
push
adc
xchg
faddl
xchg
lock
pop
xlat
adc
decb
aam
fidivrs
test
pop
mov
mov
std
or
or
push
dec
push
out
loop
xchg
jo
and
dec
movsb
repz
not
std
pop
pushf
sbb
mov
pop
pop
mov
dec
cmp
sbb
insb
shll
pusha
and
xchg
test
lods
ljmp
in
xor
xor
mov
dec
imul
rolb
mov
scas
pushf
adc
xor
push
gs
pop
and
push
dec
or
loope
xor
push
mov
or
or
xor
shlb
sarl
mov
lcall
dec
or
ret
mov
out
ss
push
mov
mov
cwtl
or
sub
sub
mov
ss
pop
lock
push
fs
testb
cmpsl
add
ret
or
sub
imul
pop
jl
and
lret
add
pop
jmp
cld
dec
xchg
repnz
lret
xor
xchg
shll
hlt
dec
dec
aas
das
out
pop
sbb
scas
lds
pop
stos
cmp
pop
mov
bound
lods
xlat
js
mov
fsubl
xor
jmp
mov
mov
pop
dec
inc
ret
out
and
repnz
lret
fbstp
sbb
gs
lahf
movsl
xlat
popf
pop
mov
pop
iret
vhaddpd
cwtl
roll
jne
sbb
imul
adc
add
test
push
push
pop
dec
ds
ljmp
test
xlat
cmp
shl
inc
sub
mov
arpl
aam
cmpsb
jbe
or
aad
xchg
pop
mov
push
dec
or
and
xchg
popf
or
daa
mov
andps
movsl
or
cs
push
pop
repz
or
sbb
imul
pop
add
das
in
arpl
sbb
iret
call
pop
adc
mov
enter
fucomip
inc
sub
sti
je
xchg
mov
sahf
xor
pop
hlt
lret
inc
addl
ljmp
add
add
insb
imul
cmpsl
jle
std
popa
or
add
and
in
inc
mov
sub
das
mov
loopne
clc
push
lret
pop
mov
xchg
and
mov
mov
push
mov
ss
and
mov
aam
aas
inc
aaa
cltd
imul
sbb
or
cmp
jne
out
outsl
enter
push
pop
cmp
mov
push
movsl
nop
push
stos
xchg
pmuludq
repnz
cmpl
insb
fidivl
adc
pop
out
aam
push
ljmp
cmpsb
add
jp
pop
sahf
std
lcall
mov
pop
adc
cmpsl
sbb
add
add
cmp
int3
fnstsw
xor
xor
add
xor
sub
add
xchg
lahf
mov
aas
stc
int
mov
xchg
outsl
leave
mov
jp
mov
aam
filds
mov
into
mov
lods
mov
cltd
dec
adc
pop
sar
xchg
ss
clc
cli
mov
pop
cmp
or
enter
into
adc
pop
lret
scas
das
jp
xchg
sub
loope
jbe
push
dec
popa
fidivl
xchg
add
fistpl
sbb
jl
arpl
int
cmpb
into
mov
mov
cmp
arpl
pop
lea
inc
call
jg
fadds
imul
sbb
shll
stos
mov
xchg
mov
cmpsl
cld
lds
or
mov
mov
inc
orl
dec
adc
das
call
xor
inc
fs
sbb
cmpsb
mov
nop
push
iret
popf
fcomps
or
jne
dec
test
or
cmp
push
es
sub
fldt
test
sbb
daa
movsl
sbb
mov
inc
stos
jmp
sub
add
inc
loope
add
pop
mov
sbb
jbe
lods
jle
sbb
inc
sbb
mov
pop
and
mov
push
adc
stos
das
inc
adc
xchg
out
xor
sub
or
cs
movsl
jo
addl
lahf
je
aad
movsb
lahf
inc
roll
push
push
inc
std
bswap
jle
imul
or
xchg
push
test
sub
mov
shll
cmp
in
in
out
sub
sbbb
movb
shl
arpl
pop
in
cmc
ljmp
inc
and
arpl
iret
xchg
adc
cmp
lock
std
lods
mov
dec
out
pop
push
mov
lds
out
inc
sti
xor
xor
lods
cmpsb
test
out
dec
mov
addl
sbb
jnp
xchg
or
push
fnsave
cmc
fadd
mov
pop
xor
inc
sbb
mov
or
inc
dec
mov
stos
repz
js
fs
mov
pop
cltd
push
test
sbb
popf
xor
gs
cmp
ljmp
fildll
adc
loope
out
pop
or
fs
add
mov
dec
pushf
lret
add
fsubr
add
rcr
fs
movsl
jne
cmp
xchg
or
sbbb
add
jge
dec
shlb
test
andl
mov
inc
lock
pop
jg
insb
pop
mov
cwtl
enter
dec
pop
addr16
notb
fiaddl
mov
icebp
out
xor
repz
dec
out
cltd
rorl
jnp
popa
xlat
arpl
addb
xor
jnp
push
aas
sahf
inc
sbb
lea
and
in
and
pop
cmc
in
iret
sub
jecxz
xor
pop
aas
sbb
movsb
jbe
xor
and
dec
jl
dec
pop
sub
lret
pusha
cmp
fidivrl
roll
sub
xor
push
xchg
mov
mov
inc
ret
mov
das
sahf
dec
inc
sbb
push
imul
scas
dec
jne
aad
shll
lea
jo
repz
jecxz
xchg
or
mov
sub
scas
lds
popf
sbb
mov
jmp
mov
xchg
push
cmp
push
and
sahf
cmp
clc
sahf
sub
insl
in
lods
xor
cmp
add
in
xchg
sub
sahf
and
mov
mov
or
nop
in
test
idivl
adc
push
jnp
sub
popa
out
push
rep
cmp
mov
jl
inc
jae
push
cwtl
mov
cs
data16
adc
sub
scas
cld
pop
jmp
sub
cwtl
and
inc
nop
loopne
int
std
in
lcall
aaa
out
das
sub
xchg
adc
and
cs
pop
push
push
mov
push
add
add
cltd
jb
and
movsb
mov
cmp
movsl
scas
pop
xlat
mov
mov
jg
mov
cmpsl
sub
movsl
push
push
cmp
inc
cmp
push
dec
inc
lret
ret
cld
sbb
daa
ret
push
insb
pop
and
add
lea
lret
insb
sub
ret
mov
cmpsb
or
mov
jne
pop
mov
idivb
dec
bound
mov
inc
push
add
scas
jno
and
and
or
jbe
adc
popa
mov
pop
movsb
jmp
pop
push
mov
fdivrs
sub
mov
sahf
in
pusha
and
jecxz
sub
or
pop
and
xchg
or
or
sub
bound
std
rcll
mov
xor
cs
mov
stos
cmp
loop
scas
inc
pop
mov
or
mov
out
iret
dec
inc
jmp
push
mov
push
shlb
clc
xor
add
in
ljmp
xorb
sub
xor
into
adc
cmpsl
ficomps
push
inc
xchg
and
xchg
aaa
push
rcr
inc
sar
push
mov
bound
pop
dec
test
cmp
mov
jbe
pop
pop
and
fcompl
adc
mov
xlat
pusha
adc
mov
mov
orb
and
idivb
rolb
dec
xor
xchg
or
mov
mov
cmp
movsb
into
sti
adc
cli
rolb
adc
mov
fisubl
sti
jmp
inc
cmp
scas
mov
push
sbb
loop
adcb
hlt
clc
scas
in
cmp
out
inc
mov
pop
sub
f2xm1
enter
stos
add
jle
pop
and
fiaddl
sarl
out
jle
dec
jl
lcall
hlt
popa
fstp
mov
pop
add
fisubl
cmp
xor
scas
or
nop
xchg
in
shl
push
cmpsb
addr16
test
test
out
mov
jns
cs
insl
loope
call
das
push
xchg
pop
cmp
mov
int
mov
ljmp
ret
xor
cmp
pop
lock
lds
pop
inc
or
push
jecxz
or
lods
jns
xchg
mov
push
xor
mov
sbb
test
cmp
pop
out
cmp
jl
pushf
push
sub
dec
add
lret
mov
test
test
dec
xor
or
clc
jl
sub
add
add
inc
xorb
jb
dec
inc
lods
mov
xor
scas
ja
inc
lods
sub
fisubrl
jl
sub
pushf
or
pop
jmp
pop
gs
cmp
lock
xor
mov
push
xchg
out
push
fmul
jecxz
push
or
or
jmp
pushaw
push
mov
cmc
push
les
and
mov
jle
or
loop
stc
inc
fs
jl
daa
jge
cwtl
ret
sbb
pop
pop
jbe
mov
nopl
repnz
dec
imul
shl
sbb
jge
rcrl
sub
insb
test
gs
das
rclb
cmc
sbb
test
sbb
jno
and
fisubrs
cmp
fs
lods
sbb
push
test
cs
push
imul
push
test
ret
jecxz
inc
and
pop
stos
cmpb
inc
js
add
movsl
aaa
je
imul
jge
clc
divl
test
jne
shl
mov
and
loopne
lret
leave
rcll
xchg
stc
retw
push
jp
pop
pop
mov
add
cmp
lock
cmpsb
xor
pop
mov
mov
popf
sub
in
push
adc
adc
dec
sysexit
add
fstpt
sub
inc
xchg
dec
push
push
mov
lds
inc
sarl
and
and
lods
out
xchg
jg
sub
mov
cltd
aam
push
jo
int3
pop
pop
movsl
insb
icebp
iret
call
in
addb
sub
dec
fwait
gs
sahf
xor
xor
inc
mov
cs
mov
mov
inc
or
mov
mov
pop
ror
mov
lods
enter
xchg
xchg
fiaddl
lods
int
pop
lock
repnz
scas
test
add
jecxz
ret
enter
sub
mov
sbb
andl
lock
das
sbb
and
push
adc
scas
push
popl
test
outsl
push
cmpb
cmpsb
pop
icebp
rol
inc
shrl
out
push
cmc
or
lahf
mov
pop
mov
repz
cld
and
add
filds
hlt
sub
inc
and
sarl
or
push
das
cwtl
sahf
inc
repnz
pop
leave
les
aas
imul
xchg
jae
pop
loop
mov
subb
lods
adc
cmp
push
jno
xchg
je
mov
test
dec
xor
cwtl
pusha
lods
inc
push
jmp
adc
dec
in
inc
xchg
mov
and
inc
repz
or
add
test
pop
mov
outsb
addr16
mov
sti
xorl
pop
idivb
pop
loopne
lcall
into
sbb
mov
or
mov
scas
les
add
jmp
inc
ljmp
data16
cmpsl
out
push
call
insl
pop
xchg
out
in
mov
jne
pusha
cmp
imul
jae
sar
cmpsb
cmp
pop
xor
dec
fnstsw
sbb
nop
mov
cmp
fdivrp
adc
ja
sahf
adc
add
jp
out
xor
mov
fmull
in
repz
inc
clc
xchg
dec
jge
rcll
xor
cld
mov
jmp
outsl
xchg
and
sbb
inc
pop
sub
xor
cwtl
outsb
adc
xor
pushf
clc
and
shrb
mov
test
jmp
adc
out
add
arpl
ficoms
fsubl
loope
inc
jp
add
in
scas
adc
lock
xchg
dec
push
mov
xor
scas
les
ret
ss
jae
stos
ds
lret
lods
ljmp
pop
jl
adc
xchg
mov
and
lea
insb
lds
mov
push
mov
into
lsl
scas
pop
mov
sub
dec
and
jb
xorl
mov
daa
xchg
jmp
jbe
mov
dec
push
rclb
dec
mov
sub
dec
dec
jno
aad
jge
xor
call
std
outsl
insb
sbb
jo
jmp
xor
lock
sbb
into
iret
repz
xchg
rcr
mov
mov
stos
xor
mov
fldcw
cwtl
and
inc
xchg
pop
movl
xchg
outsl
movsl
adc
leave
xchg
jb
mov
loope
inc
scas
stos
cmpsl
and
fwait
or
push
adc
cmp
in
into
outsb
or
push
lahf
push
aad
fimuls
jbe
dec
mov
scas
aaa
cli
mov
test
add
mov
xchg
roll
mov
jmp
push
das
or
cs
adc
push
xor
rol
jns
mov
and
ss
ja
pop
jmp
mov
arpl
in
sub
popa
sbbl
lods
sbbl
mov
popa
rorl
lcall
jecxz
lahf
aas
push
ss
adc
pop
jmp
lods
fdivp
dec
push
data16
ret
push
stos
add
jge
dec
je
lea
pushf
repnz
lods
pusha
sub
call
inc
xor
mov
dec
data16
in
push
inc
call
icebp
or
sub
mov
arpl
mov
fisubl
mov
dec
mov
ret
das
orl
pushf
inc
cmp
movsl
jp
icebp
stos
cwtl
and
jmp
add
and
movb
lods
mov
insl
jecxz
lock
sub
lret
outsl
push
jnp
test
xchg
outsb
mov
in
out
and
popaw
dec
push
inc
fldl
mov
sub
sub
aad
adc
mov
dec
lret
jle
subb
jbe
push
adc
repz
ret
in
and
xchg
aas
mov
loop
incb
mov
dec
lods
ret
xor
xchg
xor
aas
cmp
gs
add
mov
movsb
arpl
in
sbb
mov
int
loopw
cmpsl
pop
lret
ja
addr16
mov
mov
or
sbb
sbb
out
mov
mov
test
jg
repz
cmc
es
scas
add
mov
mov
dec
scas
jbe
out
pop
fldt
mov
testl
int3
ja
mov
ret
jnp,pt
dec
adc
pop
mov
mov
icebp
adc
ret
mov
jnp
insl
inc
pop
xchg
cmpsb
ds
xchg
pop
in
push
mov
sbb
mov
data16
xchg
rolb
loopne
push
xchg
fimuls
call
jl
and
mov
xchg
icebp
int3
aam
sub
shrb
push
jg
orl
mov
aam
je
ja
stos
addr16
das
add
repnz
ljmp
pop
repz
dec
cmp
jmp
cmp
gs
ljmp
dec
add
fsubp
jp
idivb
cli
jbe
or
and
adc
sbb
shl
cs
or
or
clc
lret
xchg
dec
xchg
or
mov
add
cmp
sub
mov
xor
jne
pop
push
xor
popf
repnz
dec
loope
xor
and
daa
icebp
repnz
pop
jnp
ficomps
test
and
push
inc
dec
repz
or
movsl
int3
test
push
iret
mov
and
mov
int
pop
ficoml
push
orl
sbbb
leave
and
shlb
ret
pop
call
cwtl
in
and
inc
jb
mov
call
pop
mov
push
cmp
adc
popf
xor
and
add
xchg
scas
aad
icebp
xchg
lods
repnz
scas
add
cmp
loopne
mov
iret
in
addr16
jecxz
repz
lods
jg
test
loopne
sub
pusha
xchg
mov
call
loop
pop
popf
jmp
jbe
pop
add
mov
jne
ds
pop
es
dec
loop
and
das
lds
pop
adc
xchg
mov
sub
dec
mov
jb
and
testl
dec
fnstcw
addr16
iret
mov
sbb
jecxz
in
and
xchg
inc
call
les
das
xchg
push
sti
cmp
mov
fwait
jge
sbb
je
cmp
je
jae
ret
push
pop
roll
shr
sar
repz
sbb
add
pop
push
lock
or
cmp
xchg
popa
scas
cmp
mov
shll
mov
arpl
aaa
lea
shll
adc
shr
xchg
aam
cmpb
int
or
jp
wrmsr
xchg
xchg
in
cmp
sar
mov
fdivrl
push
and
adc
shrb
mov
inc
add
in
xchg
mov
add
sbb
test
add
cmpb
cmp
cmp
pusha
jmp
and
xlat
adc
adc
pop
rcrl
jbe
fwait
xor
aam
jb
lea
lret
dec
ja
scas
dec
notl
loope
loopne
push
scas
pop
out
jno
mov
ror
mov
in
aaa
iret
pop
sar
loope
add
jo
sahf
into
or
sbb
xchg
shrl
push
jbe
mov
into
mov
clc
add
jg
stc
cmp
add
fdivr
outsl
cld
mov
data16
scas
jae
test
lods
movsb
mov
xchg
adc
and
or
push
adc
cmpsb
dec
sar
xchg
shll
insb
fldt
or
lret
addb
mov
hlt
adc
cmp
cltd
and
mov
sahf
out
push
push
int
mov
inc
fnstsw
mov
mov
xlat
out
inc
dec
push
pop
pusha
lods
xchg
push
mov
stos
sub
mov
cmpl
maxps
mov
pop
dec
sbb
pushf
sbb
adc
scas
xor
and
add
mov
pop
cmp
xchg
sub
mov
shlb
mov
mov
or
xor
push
xor
sub
in
scas
jge
dec
mov
xchg
je
sti
add
out
in
mov
pop
jg
aad
pop
imul
and
cwtl
lret
inc
push
mov
pop
sbb
cmpsb
push
or
frstor
mov
push
mov
into
xchg
outsl
int
mov
adc
mov
pminub
das
or
test
mov
into
lods
movsb
je
test
cwtl
and
cwtl
and
aad
pop
adc
jp,pn
adc
or
je
xchg
in
add
nop
aad
scas
mov
daa
in
nop
loop
or
xor
mov
dec
cwtl
xchg
dec
push
or
rcrl
mov
inc
add
mov
cmp
dec
pusha
mov
add
repz
enter
or
sahf
je
xchg
sub
and
das
fs
push
or
aas
dec
pop
jecxz
sub
and
push
ss
aam
mov
lods
enter
mov
jb
xchg
cmp
loopne
or
in
daa
imul
loop
imul
add
pop
sub
add
lahf
push
int
xchg
fimuls
add
cltd
adc
es
cmp
mov
and
add
lret
mov
ljmp
jle
inc
cmc
pop
sbb
popf
movsl
and
xchg
sub
mov
dec
xor
or
int3
pop
das
mov
sbb
ljmp
and
sbb
daa
scas
aas
mov
imul
fwait
mov
icebp
jno
stos
jb
cmp
jle
leave
pop
sbb
add
aad
lods
jb
lahf
dec
mov
call
arpl
pushf
mov
aas
mov
scas
lret
out
in
sub
dec
adc
scas
mov
lcall
sahf
das
jbe
adc
in
dec
add
stc
mov
mov
and
scas
std
movsl
jge
outsb
loope
pop
outsb
lods
and
imull
inc
inc
dec
lret
jmp
icebp
xorl
pop
cld
js
cmp
stos
mov
sbbl
fistpl
ret
jno
cmp
lea
adc
and
or
mov
jg
test
adcb
jg
lahf
test
notb
mov
cmp
add
cmp
sahf
cmp
xchg
arpl
out
fstp
dec
cltd
pop
cs
je
loop
pop
lock
jo
push
insl
jo
push
sbbb
jge
adc
or
jmp
popa
xchg
or
les
mov
push
je
cwtl
and
out
mov
call
mov
ret
or
jns
pushf
inc
and
pop
ret
jle
mov
cli
and
std
jl
mov
fistps
fcoml
lods
stos
pushf
repz
pop
pop
in
imul
rcrl
pop
outsb
and
fldl
dec
inc
jbe
in
inc
or
sbb
dec
lcall
xchg
xlat
xor
fs
or
lods
loopne
add
lods
xor
lds
lea
pop
pop
xchg
mov
or
movsb
dec
js
movsb
pop
inc
mov
mov
lahf
rcrb
repz
xor
dec
bnd
enter
out
sbb
sbb
and
call
cmp
movsb
aam
in
pop
sub
stc
fcmovu
rcrl
jnp
sbb
xor
cmp
dec
mov
sub
jge
xchg
divl
mov
sbb
mov
and
jge
cwtl
cmc
inc
inc
test
inc
mov
jecxz
dec
inc
dec
adcl
pop
scas
pop
js
add
mov
pop
cli
mov
fmull
xchg
in
cmp
push
aaa
lret
inc
leave
imul
push
stos
push
stos
movsb
mov
imul
insb
mov
dec
jp
adc
adc
fistps
cli
popa
daa
mov
icebp
jo
lret
jo
loope
in
imul
dec
mov
cld
dec
jle
mov
xor
movsl
jb
xor
jge
mov
cmpsb
in
lahf
push
iret
push
mov
jmp
cmp
fdivrl
jmp
int
mov
dec
push
sub
insb
and
mov
and
cs
imull
je
or
fs
jmp
xor
add
push
cmc
out
mov
push
out
into
imul
movsl
lcall
ficomps
mov
popa
jbe
lock
sbb
fstps
imul
mov
lock
push
jae
add
sbb
stos
mov
cmp
sub
insb
ficoml
inc
repnz
into
out
mov
testb
in
xchg
and
push
sti
push
in
pushf
mov
and
or
add
lds
inc
sbb
addr16
imul
mov
fadds
mov
xor
daa
xchg
push
lods
jle
lcall
stos
inc
xchg
mov
pop
adc
ror
xlat
jecxz
add
dec
or
push
mov
inc
or
mov
jp
dec
arpl
fucomp
pop
mov
cmpsb
mov
sbb
mov
add
xlat
xor
jo
adc
push
and
add
sbb
cmp
jnp
daa
xchg
sbb
in
push
push
mov
mov
dec
or
cmpsb
sub
cmp
jbe
mov
fwait
jge
sub
sub
pop
push
aas
mov
aas
pushf
repnz
sub
sub
pop
and
push
fisubrs
add
sti
jle
cmp
mov
rcrl
and
cltd
test
rep
and
testl
loope
je
repz
and
outsb
mov
stos
xchg
mov
jmp
aas
mov
out
shl
lock
pop
cltd
add
dec
push
mov
pop
dec
jp
into
jle
pop
xchg
dec
push
push
fcmove
inc
and
push
ds
mov
lock
add
mov
fildl
jg
js
ret
pop
pop
jp
loop
xor
addr16
rclb
push
mov
inc
sarb
sti
mov
rcll
pop
jecxz
test
dec
pop
xchg
jge
repz
mov
cltd
fscale
xchg
enter
popf
sbb
xchg
sub
sub
sbb
xchg
in
andl
fistpll
push
popa
xchg
sub
fldenv
dec
fs
stc
lods
fadds
sti
or
mov
test
imul
in
cmc
pusha
das
add
scas
jnp
jecxz
and
push
hlt
imul
les
shl
jg
and
jbe
sub
fidivs
sub
int3
scas
std
std
pushf
add
je
xchg
add
sub
cmp
mov
lods
loopne
arpl
or
mov
xor
test
cmpsb
or
push
adc
fsubrs
aad
out
dec
lret
dec
adcl
fsubs
jl
xchg
test
xchg
ljmp
pop
push
push
in
test
ds
push
xlat
xchg
cmpl
pop
cmpsb
mov
jl
push
test
push
in
or
xor
adc
mov
mov
in
rclb
xchg
leave
flds
pop
imul
fistpll
adc
add
dec
rorl
mov
xchg
mov
xlat
xchg
ret
jbe
jae
fstpl
out
sahf
stos
lods
add
aam
jmp
mov
xor
sub
xor
call
lods
push
pop
out
xchg
push
pusha
jns
jae
mov
inc
adc
imul
repnz
push
mov
mov
pop
in
adc
mov
aam
cli
sbb
divl
cli
not
jb
dec
or
scas
ret
jo
mov
popa
xchg
sbb
test
int
lock
push
xchg
or
jg
ret
stos
cmp
inc
shrl
shrb
loopne
adc
or
leave
mov
pop
cmpsb
test
mov
or
test
lret
cmp
lahf
fistpl
int
mov
pushf
mov
scas
jg
mov
adc
pop
cmpb
sub
xchg
sahf
push
std
fsubrp
mulb
xor
cmc
mov
idivb
int
shrl
mov
pop
push
insb
and
dec
cmp
xchg
xor
sbb
fwait
push
dec
fistpll
xor
cwtl
jns
hlt
pushf
movsl
insl
pop
fsubl
mov
sub
testb
push
shlb
cmp
in
sbb
aas
dec
insb
out
dec
jmp
in
loope
int3
lcall
pusha
or
mov
jmp
pop
repz
jge
stos
scas
es
and
pop
or
cmp
pop
lods
dec
movsl
int3
rcrb
xor
in
ret
aaa
mov
adc
cs
stos
xchg
mov
inc
xchg
pusha
jbe
mov
adc
bound
inc
push
into
jecxz
mov
mov
fiadds
aam
out
xor
call
lds
out
cltd
int
jns
loope
ljmp
mov
popf
push
call
adc
outsb
cltd
pop
sbb
test
stos
orb
das
jae
bound
dec
iret
and
mov
int3
arpl
sub
sahf
push
decb
mov
movsl
mov
add
popf
jmp
shl
sahf
test
lods
add
xor
loopne
clc
stos
mov
mov
and
jno
jne
stos
lock
sbb
or
jp
movsl
stc
movsb
add
mov
add
mov
sbb
out
jnp
ret
sub
mov
pushf
lret
jb
fisubrl
jb
fcompl
jae
cmp
adc
out
aad
in
mov
lods
into
push
sub
enter
xor
xor
lcall
cmc
push
call
and
adc
dec
mov
pop
jne
aaa
jnp
ret
pop
xor
iret
mov
fldenv
mov
insb
iret
rcrl
xchg
in
rcrb
cli
jae
jbe
cmp
mov
jne
lds
jg
addr16
iret
mov
sahf
fidivl
push
ret
xor
les
sahf
cmpsl
mov
mov
sbb
sub
in
cmc
adc
in
loope
int
push
dec
in
xchg
inc
cwtl
scas
ret
and
sub
mov
ss
cmp
dec
adc
push
pop
cmp
jno
aaa
enter
popf
cwtl
push
adc
dec
stos
incl
mov
addb
fwait
sub
add
in
sub
outsb
jecxz
insl
nop
or
cs
mov
push
mov
adc
adc
sbb
insb
and
pop
stc
in
mov
aam
popa
or
stos
push
pop
nop
adc
mov
movsl
cs
push
iret
jno
sbb
pop
sahf
es
mov
in
ds
js
mov
dec
ds
insb
out
nop
stos
sub
xlat
lret
loop
ret
insl
fsubr
test
inc
xlat
mov
jns
push
call
inc
cmpsb
sti
xchg
xchg
and
adc
rcll
adc
dec
into
jae
hlt
mov
fs
int
adc
xchg
push
daa
aam
jl
jmp
jmp
xor
mov
aad
out
or
sbbl
icebp
adc
cmp
sar
mov
mov
je
outsb
jo
push
add
and
xor
and
aam
or
jp
into
rorb
out
cmp
adc
add
xchg
and
enter
cltd
outsl
sbb
add
fnstsw
data16
lock
push
jns
xlat
lahf
pop
pop
jmp
pop
cmpsl
inc
push
push
mov
movsl
cmp
inc
dec
and
push
xchg
pusha
movsl
lcall
ss
adc
in
imull
scas
sahf
dec
add
stos
pop
ror
adc
mov
xchg
jns
mov
xor
aaa
js
ret
inc
and
jp
add
stc
xorb
ret
popw
mov
pop
sub
pop
xchg
mov
push
popa
mov
sbb
pop
cmp
lods
mov
push
mov
jne
mov
mov
xchg
fwait
fwait
inc
pop
and
fdivs
lods
repz
sub
lret
lahf
inc
data16
sbb
lea
jnp
xchg
adc
int3
cmp
lock
push
repz
mov
es
aam
xor
rorl
pop
stos
lahf
loopne
push
mov
mov
jne
scas
loopne
mov
pusha
idivl
adc
lea
mov
lcall
scas
add
push
decl
inc
sbb
test
stos
into
cmp
push
test
mov
mov
jo
pop
sub
inc
mov
filds
arpl
ss
out
pop
cmp
psubd
adc
sbb
push
push
jmp
pop
sbb
dec
movsb
xor
mov
push
cltd
pushl
mov
mov
sbb
lea
cmp
icebp
popa
add
adc
dec
rcll
sbb
rolb
in
in
xor
push
lea
sbb
rcll
push
xlat
inc
mov
xchg
nopl
mov
loope
jno
jp
sub
mov
sarb
pop
mov
cmp
test
jle
movsl
push
adc
test
call
pop
push
repz
xchg
cmp
pop
inc
jbe
mov
addb
lds
pop
xor
addl
inc
ja
xor
adc
inc
sbb
pop
fwait
add
or
add
repz
ljmp
lock
pusha
fsub
sbb
or
movsl
aad
ror
push
push
sti
repz
out
js
enter
lcall
mov
cmp
loopne
sti
aam
enter
or
and
mov
data16
xchg
mov
adc
jmp
jl
pand
lret
int
jbe
ret
outsb
out
cltd
inc
jmp
push
aam
aam
lret
mov
jge
push
pushw
xchg
movsb
cmc
mov
lahf
and
mov
jns
inc
mov
aam
add
mov
sub
mov
add
in
jnp
mov
das
pop
adc
cmpb
xor
mov
add
mov
jnp
in
mov
idivb
dec
dec
xchg
popf
loop,pn
mov
pop
arpl
push
pop
or
mov
rolb
or
out
pop
icebp
fs
je
and
scas
mov
mov
jns
sbb
xchg
icebp
dec
loope
aad
cmp
imul
add
incl
sarb
out
into
vpmaxub
jg
lea
or
xchg
xor
pusha
mov
jmp
data16
fwait
pop
aaa
sub
dec
push
fiadds
jbe
sbb
lea
movsb
adc
add
orl
repnz
mov
push
sub
push
and
lods
mov
into
stc
ret
fwait
popa
sti
sub
aam
nop
mov
cmp
in
je
repz
and
fnstcw
insb
lods
loop
sub
adc
mov
fnstcw
andb
lock
das
sbb
xchg
cmpb
arpl
ljmp
mov
int3
insl
rolb
je
mov
pop
jmp
mov
sbb
sub
sbb
dec
scas
adc
testl
rol
fiaddl
xor
bound
xor
inc
enter
jge
lods
jbe
aas
inc
out
pop
cmpsl
dec
inc
xor
imul
dec
cltd
stos
push
lret
fs
jnp
mov
sub
pop
stc
js
dec
out
fnsave
in
out
sub
push
rcrb
outsl
outsl
xchg
push
mov
imul
data16
int
sub
ja
cmp
mov
push
mov
mov
inc
loope
jns
add
sub
lock
push
and
push
movsb
adc
es
inc
push
mov
mov
out
add
repnz
aad
shlb
pop
repz
repnz
jno
cmpsl
jo
mov
lods
or
mov
mov
aaa
movsl
push
sub
sbb
lea
mov
jns
stc
sub
addr16
sub
aam
dec
std
daa
jns
test
mov
push
shlb
je
ljmp
xchg
pop
popf
jp
pop
mov
fildll
cwtl
jne
decb
xchg
test
cs
roll
in
mov
dec
mov
dec
test
add
xchg
in
mov
pop
jl
fisttpll
in
adc
add
leave
and
daa
adc
stos
cwtl
into
mov
jae
inc
fistps
push
lcall
xor
mov
movsb
or
mov
fs
movsb
push
pop
inc
jle
push
es
sub
and
repz
out
insb
mov
cs
push
aad
jbe
fcompl
jge
dec
shll
stos
out
daa
and
imul
outsb
xchg
pop
mov
inc
sub
sbb
sub
das
mov
push
sahf
ds
adc
adc
mov
ret
cmc
clc
mov
stc
mov
lret
data16
cmp
push
push
xchg
adc
xchg
adc
mov
push
fwait
xor
repz
mov
rclb
in
scas
cmp
rcrb
int
out
enter
fs
jne
cmp
clc
mov
test
mov
sarl
lahf
repz
pop
sub
add
negl
sarb
in
inc
mov
pop
jge
jmp
sub
popa
cmp
xor
jle
rcr
push
andl
xchg
inc
push
sub
sbb
fstl
aad
mov
adc
xchg
adc
pop
jmp
into
xor
lea
jmp
mov
lods
xor
cwtl
push
or
loope
pop
fs
mov
fmul
out
jbe
inc
stos
insb
and
mov
and
fcomp
mov
shrb
out
dec
mov
adc
lret
inc
push
mov
pop
sub
lahf
cld
ret
gs
sbb
imul
lea
push
into
pop
or
mov
and
jne
inc
repz
xlat
pop
addr16
or
scas
xchg
xor
sbb
adc
xor
add
and
jmp
mov
dec
sbb
sub
addr16
mov
pop
sub
mov
sarl
stos
pop
mov
cmp
idivb
mov
or
sbb
and
out
and
mov
adc
addb
ret
mov
xor
outsb
xchg
cs
and
or
stc
and
mov
jae
std
ja
and
inc
das
into
cs
add
add
cwtl
dec
dec
bnd
xor
adc
cmc
adc
sbb
int
dec
cmp
push
rorl
mov
jmp
lret
fstpt
xor
push
jmp
insl
je
sahf
sti
stos
xor
xor
in
out
jmp
outsb
insb
xchg
sbb
lock
cltd
sarb
or
xchg
movsl
in
jge
popa
test
sub
insb
imul
dec
or
sarb
pop
leave
mov
outsb
adc
fadds
pop
and
mov
repnz
mov
sbb
ficoms
xor
push
mov
add
push
dec
lods
loop
mov
push
xor
pop
mov
in
test
mov
into
add
or
pop
imulb
and
cmp
jne
push
or
clc
aaa
jnp
push
or
mov
dec
fstps
in
f2xm1
aad
adc
cmp
mov
cmpsb
push
decb
mov
cli
imul
cmp
and
push
arpl
sbb
leave
loop
inc
addb
pop
movsb
shrl
dec
fstl
ret
adc
mov
jbe
pop
data16
xchg
je
arpl
mov
test
rep
jmp
jp
mov
mov
rorb
mov
scas
mov
aad
jmp
xor
lahf
pop
pop
cmp
repnz
test
adc
fldl
shl
mov
mov
das
pop
lock
push
mov
sbb
and
mov
clc
aaa
dec
mov
outsb
jl
jne
mov
push
mov
dec
sbb
cmp
adc
push
fldt
out
or
mov
aaa
cwtl
adc
fisttpl
cmp
add
fdivl
arpl
movsl
inc
inc
dec
add
push
or
iret
sbb
into
adc
dec
mov
sbb
adcb
inc
push
les
sti
and
fistps
xchg
pop
fcompl
ljmp
sbb
cld
inc
enter
mov
adc
lods
ljmp
inc
jp
push
ljmp
jns
das
add
mov
push
push
push
xchg
mov
or
jns
mov
arpl
movsb
addr16
mov
push
sub
call
loopw,pt
bound
jae
imul
jle
lret
dec
mov
cmp
push
mov
add
inc
mov
das
sbb
dec
jg
sbb
push
dec
jb
call
inc
bound
test
sub
enter
xor
inc
cmpsl
cmp
xchg
mov
test
add
jle
cmp
dec
add
ret
add
inc
repz
inc
mov
scas
sub
jg
inc
xlat
mov
xchg
mov
andl
inc
xchg
push
xor
and
in
lods
std
dec
addr16
jno
jne
pushf
inc
test
in
jno
jb
mov
sbb
pushf
repz
or
push
or
xor
int3
and
shlb
movsb
movsl
jecxz
mov
lods
mov
lret
sub
repnz
inc
push
add
cmp
inc
xor
pop
stos
faddl
shll
xchg
imul
insb
aad
mov
filds
sub
cmpsl
push
ja
insb
in
insb
test
cmp
imulb
or
xchg
imul
jmp
xchg
mov
mov
mov
mov
sti
xor
adc
test
aad
pop
ds
jno
enter
cmp
popf
mov
add
into
jno
xlat
scas
popf
cmp
call
cmp
adc
mov
fwait
icebp
pop
lock
push
stc
mov
adc
cs
adc
pusha
mov
lret
fstpt
jnp
cltd
xor
pop
xor
sub
mov
fadds
sbb
pop
sbb
pop
pop
aam
push
pop
inc
sub
mov
je
clc
adc
jp
mov
pop
inc
xchg
test
or
mov
xchg
cmpsb
and
lret
ds
cmp
mov
mov
rorb
push
aad
mov
dec
cmpsl
fstpl
loope
ja
jl
movsb
xor
xchg
sbbl
lock
lret
push
sub
fsubs
jmp
repnz
mov
mov
add
movsl
out
xchg
mov
pop
test
insb
fidivs
jae
mov
and
mov
sti
call
or
ja
dec
sub
in
add
sbb
cmp
out
and
cld
pop
or
test
or
jge
sbb
test
stos
in
in
rorb
mov
lea
pop
fisubrs
mov
mov
pop
scas
dec
add
int
or
arpl
fnstcw
inc
mov
nop
ss
lcall
pop
nop
shlb
pop
enter
mov
inc
xchg
rclb
mov
loope
and
cmpsl
or
and
gs
arpl
inc
cs
jp,pn
std
mov
cmpsb
and
pop
adc
imul
cmc
into
cwtl
stos
movsb
add
cmc
push
mov
dec
jb
js
cmp
or
or
xor
aas
adc
bound
jmp
daa
and
psrad
addr16
leave
rorl
clc
mov
filds
adcl
das
test
xor
and
shrb
jae
popf
add
clc
sub
inc
jbe
les
lea
xor
aas
dec
popf
xchg
mov
in
and
fdivrs
inc
in
fistps
dec
cs
fwait
xchg
adc
mov
sub
fs
jg
outsl
mov
pop
pop
jg
or
inc
lret
push
dec
dec
fimull
lahf
fwait
pop
mov
loope
mov
dec
cmp
push
out
dec
xor
fwait
addr16
push
cld
frstor
mov
dec
sbb
jmp
adc
xor
add
js
mov
jns
push
sub
sbb
int3
mov
pop
jo
pop
imul
repnz
test
dec
lret
push
fnsave
dec
std
push
das
popf
outsb
ja
or
mov
sarl
fisttpll
dec
lods
out
pop
stos
mov
inc
jp
jp
stc
pop
mov
into
and
call
scas
mov
inc
aam
dec
or
pop
out
sub
push
cmp
hlt
or
dec
icebp
and
mov
or
inc
jl
stos
mov
inc
mov
aad
and
dec
dec
lret
cmpsb
enter
int3
in
mov
pop
inc
jnp
xchg
fbld
out
sub
into
arpl
inc
mov
popa
xor
frstor
fistps
pusha
aam
push
adc
cltd
aas
addr16
xchg
adc
fiaddl
push
mov
hlt
pop
mov
fisttpll
dec
adc
fs
push
out
push
arpl
cmp
clc
cmpb
mov
adc
popa
cwtl
mov
outsl
and
jg
pop
dec
js
or
shlb
mov
cltd
jnp
std
xlat
sbbb
push
movsb
push
insl
enter
ficompl
sbb
mov
cmp
divl
aad
mov
lcall
call
test
fmull
sub
lret
mov
andl
ret
je
xchg
xor
fistpl
neg
push
xor
mov
jl
push
xchg
sbb
in
push
cmp
push
adc
fcmovnu
add
enter
lock
ss
adc
dec
in
mov
push
stc
push
cmp
gs
in
xor
push
iret
mov
fdivrl
sbb
hlt
mov
adc
pop
cmpsb
inc
shll
imul
pop
jle
push
cli
fidivs
jp
test
mov
mov
jp
out
cmc
sub
dec
push
mov
or
pop
fcomps
pop
mov
pop
ficoms
dec
inc
inc
push
add
pop
fimull
lea
and
add
cmp
imul
mov
cli
rorb
push
daa
sahf
xchg
cmpsb
lods
jns
cmp
dec
pop
and
jge
sbb
test
inc
pop
rcrb
jecxz
cwtl
adc
sub
arpl
les
mov
jbe
jmp
loopne
call
xchg
hlt
jle
es
data16
fsts
mov
fnstsw
add
jecxz
clc
ret
mov
mov
cmc
mov
mov
xorb
in
pushf
andb
push
cmc
jnp
jnp
or
jne
add
push
cmp
lods
jbe
or
das
in
or
andl
call
mov
push
movsl
xchg
jecxz
push
adc
fsubs
push
fwait
pop
cmp
test
daa
adc
push
lret
push
pop
subl
mov
and
daa
jnp
rclb
jbe
jns
lret
jmp
mov
cmp
mov
cld
push
xchg
mov
add
cmp
jo
adc
lahf
sti
pop
rcr
lret
sbb
stos
out
sahf
pop
ffree
inc
push
rcll
cmp
mov
repz
clc
dec
inc
rorl
mov
mov
addr16
cmp
outsl
xchg
subl
pop
flds
push
fcoml
ret
popa
loope
ljmp
inc
test
mov
test
fisubrl
or
aad
ror
sahf
into
decl
shll
jo
cltd
inc
das
pop
out
je
jge
or
dec
mov
sbb
fsubl
push
stc
gs
mov
inc
insb
pusha
iret
cwtl
xor
cmp
gs
loop
scas
daa
mov
psubsb
mov
push
lds
xor
and
test
cmp
test
shl
xor
shr
in
adcb
jae
xor
dec
mov
mov
pop
lcall
fisubs
mov
dec
mov
test
or
pop
pushf
aad
xor
add
jnp
sub
cmp
xchg
pop
push
iret
adcl
shr
inc
pop
fisubrs
xor
outsb
pop
lds
push
mov
xchg
outsb
pop
add
add
nop
mov
dec
cmp
jmp
push
jp
add
jge
and
sbb
inc
pop
and
fidivl
pop
cltd
test
inc
cmpsl
xchg
popf
sar
or
pop
mov
mov
mov
jns
cmpsl
mov
into
or
inc
into
arpl
int3
mov
lock
addl
mov
and
test
scas
dec
pop
neg
sub
cmc
in
insb
lods
and
or
sbb
jle
adc
cmp
icebp
xchg
lea
cmp
mov
or
mov
sahf
pop
std
ret
xchg
insb
ds
sub
aam
sub
ljmp
push
cmp
adcl
or
pop
mov
mov
shll
frstor
call
ficompl
xor
inc
sti
fwait
pop
mov
xchg
enter
lods
cltd
loope
dec
or
or
shl
sbb
dec
or
fnstcw
adc
scas
and
mov
dec
daa
mov
and
mov
mov
mov
cmp
jae
xor
sub
fsts
pop
push
mov
insb
loopne
sub
hlt
mov
imul
adc
mov
icebp
lods
jle
lret
lea
mov
xor
xor
aaa
imul
data16
test
aas
clc
nop
mov
sbb
or
fs
aam
lds
push
lock
dec
inc
mov
popf
fsubs
adc
sbb
inc
push
mov
int3
pushf
inc
mov
rorl
pop
dec
in
shlb
stc
fcoml
mov
push
fisubs
popf
pop
cmpb
outsl
in
push
and
inc
cmp
jne
pop
lds
out
mov
push
stc
shll
into
push
mov
push
jg
xor
jg
outsl
mov
inc
mov
jmp
push
mov
cltd
xlat
pop
sbb
scas
cmpsb
iret
xchg
jnp
gs
test
mov
ret
xchg
js
mov
add
iret
adc
dec
mov
jg
xchg
jecxz
or
jne
or
sarb
mov
ret
jge
scas
mov
fsubrl
jmp
movsb
and
pop
push
or
xchg
fdivrs
incl
mov
xchg
sti
mov
push
lcall
dec
adc
sub
arpl
cmc
mov
adc
mov
jb
outsl
notb
loopne
add
sub
lds
int
mov
or
cmc
lods
es
popa
or
mov
cs
es
cwtl
test
aas
cli
or
push
sub
dec
das
cld
mov
dec
out
aas
in
hlt
mov
std
std
xchg
out
pop
push
mov
movsl
iret
mov
xor
push
jnp
fdivrl
jns
dec
lret
repnz
jecxz
mov
sti
mov
add
enter
adc
popl
pop
mov
add
sbb
mov
test
adc
add
mov
pop
into
push
mov
sbb
clc
push
xlat
mov
push
js
xor
sub
imul
adc
imul
imul
push
dec
fildl
and
pop
iret
xchg
push
mov
rorl
mov
pushf
jo
test
leave
inc
xor
pop
xchg
cmp
subl
jns
ss
xor
jl
aam
test
jge
lret
xchg
add
arpl
mov
leave
and
pusha
outsl
pop
sti
nop
push
fs
divb
out
aam
push
inc
pushf
imul
mov
dec
int3
inc
sahf
sbbb
es
mov
add
lret
imul
out
adcb
or
push
push
int3
dec
rorb
cmpsl
insl
mov
jbe
sbbl
adc
shl
rcll
pop
xchg
pop
test
cmp
ficoms
stos
sub
dec
xchg
pop
add
dec
cmc
and
lods
inc
cmpsb
es
xchg
loope
fbld
adc
or
clc
xor
stos
jne
add
into
fstpt
sbb
pop
jae
loopne
xchg
mov
sete
and
or
std
repz
gs
jae
sbb
xor
or
sbb
sbbw
es
adc
leave
mov
fimuls
dec
into
aam
mov
pop
mov
xor
and
mov
dec
cmp
cwtl
and
adc
sub
inc
scas
int3
int3
stc
mov
fistpl
pop
aas
adc
jns
inc
inc
dec
sbb
mov
dec
cmp
mov
or
call
or
lods
jmp
call
jmp
aas
xor
test
sub
dec
pop
xor
mov
test
mov
in
loopne
in
lret
ds
sub
sub
inc
movsl
addl
sbb
lea
sbb
scas
sbb
xor
popf
dec
icebp
push
ret
jle
into
scas
mov
les
inc
xchg
fsubrs
push
and
mov
mov
xlat
xchg
mov
rol
mov
mov
mov
jbe
xchg
jge
sub
mov
sub
lahf
jmp
sahf
arpl
out
repnz
push
loopne
push
mov
lahf
movsl
test
cld
lret
jmp
jns
mov
aas
or
and
xor
mov
mov
and
and
fidivrl
andb
sarl
rolb
jo
aad
sub
inc
push
cmpsl
xchg
dec
sub
mov
sub
pop
and
jns
rcrb
or
cmpsl
fwait
bound
pop
push
iret
xor
sub
mov
sub
cmpb
xchg
cmp
ficompl
or
mov
repnz
sahf
jle
lahf
int3
mov
add
xor
pop
adcl
mov
cmp
sub
jmp
xchg
fsubrl
adc
loopne
lcall
addb
push
lret
orb
ret
jmp
nop
imul
mov
orl
xor
aaa
xchg
sbb
hlt
pop
inc
xchg
sbb
decb
dec
and
push
daa
out
xchg
add
in
shll
cmp
inc
int
jb
ds
cwtl
sub
mov
xor
mov
sub
ss
xorl
xor
int3
mov
jno
add
xchg
xlat
test
mov
xchg
int3
lret
aaa
aam
int
in
adc
mov
cmp
lods
fwait
adc
add
cltd
jno
pop
insb
fdivs
xor
les
pop
out
rcll
andb
jbe
inc
sti
xor
dec
mulb
aad
sub
lods
push
and
outsl
rdtsc
mov
push
lods
xchg
nop
out
cli
push
out
ljmp
mov
sub
mov
add
aam
rcll
dec
lods
dec
jecxz
push
out
mov
call
pop
mov
in
add
dec
inc
inc
loopne
addr16
pop
dec
sahf
les
arpl
push
decl
mov
push
test
repz
add
sub
jbe
pop
xor
mov
push
call
dec
mov
pop
dec
cmpsl
lahf
scas
popf
jne
add
or
adc
mov
dec
push
leave
xchg
or
mov
bound
js
ss
scas
iret
add
or
pop
inc
js
add
ss
popa
rcrb
dec
mov
repnz
jb
int
inc
icebp
dec
fs
mov
xor
sbb
mov
clc
sbb
adc
dec
cmp
pop
out
scas
lock
stc
loope
sbb
movsb
pop
aaa
xchg
in
dec
pop
sbb
jnp
mov
out
aas
shlb
jmp
inc
cmpsb
pusha
call
ljmp
ror
inc
push
dec
cwtl
aaa
sbb
int3
mov
cmp
inc
sub
dec
idivb
pop
fwait
enter
rcrl
lahf
js
out
inc
cmp
cmp
dec
dec
lea
cmp
cmpb
sbb
mov
out
pop
sti
pop
movb
fidivrs
lods
sahf
ret
test
xor
pop
or
cmc
xchg
push
cwtl
xor
lahf
fnstsw
inc
outsl
sbb
adc
push
shr
aam
dec
les
lret
jb
xchg
pop
aam
int3
jno
pop
sbb
mov
fldcw
jg
add
add
jno
call
rorb
scas
cmp
sti
xor
jns
shll
pop
xchg
and
popf
and
xchg
leave
xor
orb
cli
in
mov
jb
int
sub
daa
mov
lahf
mov
loop
bound
loopne
mov
pcmpeqw
sbb
int
sub
in
call
test
dec
in
jecxz
sub
icebp
push
ljmp
mov
mov
jbe
int3
sub
mov
std
add
pushl
daa
ret
xor
xlat
pushf
or
mov
scas
add
push
cmp
in
int
sbb
and
iret
sbb
lods
pop
addr16
cltd
sub
mov
jnp
mov
adc
cmpsb
test
mov
adc
mov
ret
ljmp
mov
adc
cmpsl
dec
add
stos
stc
xchg
inc
cwtl
roll
fidivrl
cmpb
pop
jge
int
mov
cmp
or
scas
lret
mov
inc
out
loop
popa
cs
test
inc
dec
ss
dec
cmpsb
loope
xor
cltd
jle
xor
cmp
pop
je
xchg
lahf
and
mov
cmp
out
stos
in
pop
in
jle
jl
dec
jmp
cmpsl
mov
fadd
and
outsl
push
daa
cmpsl
lods
mov
mov
mov
shll
aas
inc
and
lock
mov
dec
or
in
popl
mov
pushf
into
cmp
push
pop
mov
jne
and
ret
popf
xchg
adc
pop
sbbb
or
rol
sahf
cmpsl
xor
mov
mov
daa
mov
push
dec
push
mov
in
dec
test
rcr
jae
sbb
jns
push
inc
lahf
push
cmp
orl
lcall
jmp
xor
add
jge
pop
into
mov
or
inc
cmp
add
and
fisubrl
inc
sub
add
push
inc
pop
lods
adc
enter
daa
pop
jge
add
xlat
loope
sbb
ret
mov
xor
into
ret
imul
adc
aam
add
in
push
arpl
test
xchg
xlat
lea
mov
mov
xchg
inc
pusha
cld
cmp
push
sbb
fdivrs
and
add
jmp
jbe
mov
lds
adc
call
fmuls
test
icebp
and
std
push
xor
sbb
sbbl
push
inc
cwtl
sbb
pushf
cltd
and
fadds
add
push
adc
mov
das
sbb
pop
mov
sbb
iret
cltd
mov
or
pop
inc
cs
loop
push
and
xchg
mov
pusha
mov
into
cs
inc
inc
fisttps
aad
aas
or
adc
ret
mov
jge
je
in
sbb
lods
cmp
mov
jo
andl
push
data16
ret
xlat
jle
cmp
in
into
es
adc
dec
mov
mov
jno
xor
xchg
cltd
xor
mov
add
loope
cwtl
adc
rcl
sbb
mov
fidivl
inc
xor
lods
daa
dec
xchg
inc
cmp
lret
cmp
fwait
dec
sarl
repz
xchg
inc
ficompl
aad
pop
or
loopne
jo
ret
push
fbstp
bound
in
add
insl
push
out
jns
fnsave
rclb
das
lret
push
pop
icebp
daa
pop
ret
adc
mov
sub
fs
std
xchg
outsl
rcr
mov
clc
ja
inc
movsl
sbb
mov
and
out
and
int
clc
shl
sub
loope
fmuls
cmc
clc
xor
xor
lcall
mov
mov
or
mov
xor
mov
ret
fstps
addr16
les
movsb
jp
pop
push
pop
loop
mov
inc
xchg
sub
test
or
pop
popa
adc
sbb
jp
sub
jb
out
in
ficoml
inc
ss
push
ja
aaa
mov
outsb
inc
pop
mov
jl
cmp
lods
pop
ljmp
aas
dec
inc
pop
clc
dec
add
movsb
lcall
cmp
pop
in
and
inc
stos
xor
testl
cltd
ja
lea
fs
and
adc
int
or
adcb
aas
push
add
outsb
popf
bound
and
push
pushf
push
xchg
shlb
dec
lds
mov
jle
xor
lret
inc
adc
mov
ret
fdivr
push
and
lea
data16
add
lock
xchg
jbe
mov
adc
sbb
sbb
xchg
xchg
movsl
inc
cmp
xor
xor
imul
int3
add
xchg
mov
mov
mov
and
sti
ret
dec
notl
lea
stc
mov
pop
addb
fnstenv
std
inc
les
and
mov
pop
dec
fistl
std
dec
pop
roll
xchg
outsl
scas
add
mov
and
js
fcoml
jmp
add
insb
js
adc
xchg
icebp
int3
sbb
fstpl
xchg
push
repnz
mov
mov
addb
inc
lahf
jno
xor
adc
add
arpl
push
rcll
or
jbe
lock
sbb
sbb
cmp
add
xlat
and
mov
ja
lock
jg
daa
out
rcrl
stc
cli
imul
mov
push
clc
ficoml
fwait
shll
jmp
and
inc
sbb
or
clc
inc
xor
sub
mov
fnsetpm(287
icebp
add
das
adc
push
mov
stos
xorb
sub
and
jle
and
mov
jo
jb
aas
add
jbe
in
xlat
mov
jg
into
mov
xchg
cli
and
cmp
orb
xchg
inc
xchg
imul
adc
xor
rolb
push
les
loope
int3
cmp
icebp
sub
mov
and
jne
push
rolb
mov
cvtpi2ps
push
inc
negl
dec
std
iret
hlt
mov
fs
clc
or
loop
adc
push
add
aaa
leave
test
mov
xchg
and
mov
inc
and
int
ja
add
dec
jl
mov
push
cmp
or
ret
xchg
mov
in
fstpl
enter
jg
lcall
fisubl
fwait
fwait
sbb
xchg
push
push
rcll
sbb
movsl
arpl
test
stos
mov
mov
sbb
xchg
ds
out
add
adc
mov
call
and
cmpsl
imul
test
pop
adc
jmp
outsb
xorl
inc
mov
mov
mov
jns
pushf
mov
ja
das
sub
and
xchg
fucom
outsb
sar
jno
jns
out
insb
lret
inc
pop
or
pop
or
jo
pop
xlat
jne
rol
push
aas
xor
outsb
scas
jmp
sbb
xchg
aad
loope
or
mov
mov
bound
add
lret
enter
in
jne
dec
jb
adc
pop
mov
aaa
roll
pop
repz
jmp
out
mov
mov
mov
pop
in
cmc
imulb
push
test
shrb
add
in
sahf
rol
xchg
xor
ljmp
int
iret
mov
stc
mov
aaa
int
movsl
mov
je
and
xchg
es
sarb
popa
push
das
mov
repz
push
push
push
sbbl
movsl
jo
xchg
jmp
scas
add
mov
add
push
push
aas
loopne
mov
addr16
xchg
sub
wrmsr
pop
xchg
fldenv
arpl
loop
scas
dec
push
mov
add
sub
xor
stos
mov
mov
sub
mov
mov
mov
pop
nop
push
addr16
add
incl
lock
daa
push
mov
popa
xchg
sub
sub
fwait
xchg
lock
sub
xchg
jmp
push
xor
xchg
xor
ljmp
push
loope
addr16
subl
and
ret
sub
aam
cli
out
mov
pusha
push
jns
dec
leave
int3
dec
mov
push
clc
nop
mov
inc
inc
sub
xchg
cli
xchg
test
cmpsl
push
ret
sub
pop
daa
pop
fstpl
loope
sbb
jg
jnp
scas
in
xchg
jnp
sbb
mov
push
adc
adc
pop
movsb
test
inc
cmovl
mov
in
xchg
mov
pop
or
add
and
lahf
cli
ucomiss
sti
adc
xchg
sti
outsl
dec
aad
xor
popf
inc
mov
mov
or
cmp
shrl
mov
dec
das
ja
jbe
out
cli
jge
mov
test
pusha
xor
repz
mov
xor
inc
ficompl
pop
mov
and
out
jmp
out
gs
or
mov
pop
mov
test
cltd
js
lock
mov
pop
movsl
inc
pop
sbb
mov
jae
fcmovu
cwtl
add
pop
fiaddl
daa
das
cmc
jno
icebp
rclb
ja
mov
xor
or
fisttpll
sbb
imul
ret
fldcw
insb
sar
call
cmp
pusha
fwait
xchg
lahf
rorl
mov
ficompl
inc
push
mov
inc
adc
xchg
mov
pushf
loop
add
push
jnp
and
push
dec
cmp
dec
dec
push
incb
test
stos
cmp
or
test
clc
jmp
push
rorl
in
cmp
es
mov
jge
in
std
pop
outsb
lea
push
pop
push
mov
aaa
sub
adc
cmc
dec
sub
xchg
dec
push
mov
jecxz
cmp
je
in
call
inc
aam
lret
mov
cwtl
mov
jne
mov
mov
inc
mov
mov
cmp
jns
mov
jle
and
sbb
cmp
movb
mov
and
int
aad
mov
inc
out
nop
jbe
pushf
sbb
out
mov
xchg
notl
aaa
scas
dec
xchg
push
lcall
lahf
adc
dec
cmp
xor
data16
sub
inc
push
add
cmc
leave
arpl
in
and
adc
or
jo
mov
push
pop
rorl
pop
jg
mov
inc
leave
mov
pop
outsl
fmulp
shll
adc
xchg
mov
xorb
push
inc
in
sbb
xor
cli
loope
xor
jge
int
sahf
push
fldcw
jmp
adc
into
imulb
notl
xchg
dec
add
xor
insb
in
fdivrs
aam
jne
mov
iret
push
outsb
fnstsw
inc
movsl
mov
shl
xchg
popf
sahf
and
xchg
and
fdivr
lcall
out
enter
out
mov
jecxz
out
pop
add
mov
inc
repnz
mov
xchg
dec
popa
sbb
dec
dec
popa
dec
pop
inc
mov
xor
stc
fwait
add
adc
enter
cmovp
jge
pusha
dec
mov
outsl
aas
add
pop
jns
shr
jl
int3
out
or
cmp
xchg
mov
xlat
fadds
jecxz
leave
mov
jmp
mov
loopne
popf
mov
dec
int3
jae
xchg
popf
inc
call
in
and
negb
stos
jecxz
jno
lea
dec
push
int3
loope
loopne
fs
xor
fs
js
dec
mov
rcr
inc
cld
adc
push
das
inc
add
sbb
mov
adc
push
sbb
popf
shll
inc
ret
inc
push
test
std
or
pop
jg
push
sbb
sbb
sbb
xchg
test
xor
pusha
pop
xlat
popa
sub
aaa
mov
pop
pop
test
mov
xor
aam
jno
mov
cmpsl
ja
jne
dec
lcall
scas
cmc
arpl
dec
sbb
cld
lods
xchg
nop
and
mov
mov
aaa
int3
xchg
ja
mov
subl
mov
xor
xchg
in
sub
fmul
xor
pop
dec
rol
sub
mov
xchg
ret
daa
imul
out
imul
outsl
push
dec
mov
xor
arpl
imulb
pop
add
mov
imul
sarl
repz
sahf
xchg
mov
inc
imul
cmp
aas
sbb
push
ret
call
bnd
sub
mov
loope
out
cmpsb
or
mov
xor
mov
and
pop
mov
ss
insl
dec
sub
mov
dec
int3
xchg
std
out
adc
leave
adc
fidivl
inc
pop
mov
xorb
imul
in
add
xchg
aaa
inc
sbb
shl
jp
stos
or
pop
adc
cwtl
ret
add
cmpsb
sbb
xchg
stc
lea
in
fbstp
mov
pop
test
inc
jne
cmp
inc
sahf
sub
movhps
jne
dec
out
xor
mov
inc
out
into
jo
and
mov
test
movsb
mov
dec
pop
cmp
xchg
hlt
xor
dec
imul
movsl
lret
int3
push
dec
mov
lahf
and
inc
sahf
xchg
xor
out
lods
jno
sbb
aaa
icebp
adc
test
aaa
ja,pn
add
pusha
nop
sub
sbb
fs
jge
enter
in
mov
roll
pop
pop
mov
test
xchg
cltd
inc
out
test
outsb
pop
lret
stos
cmpsb
adc
pop
add
pxor
jnp
pop
loope
or
xchg
dec
into
xchg
fnsave
and
inc
loop
out
outsl
xor
push
mov
subl
add
add
gs
out
pop
stos
test
push
sarb
pop
sub
add
mov
mov
pop
lock
push
or
sbb
scas
out
inc
out
ss
pop
pop
js
je
movsb
lahf
sub
sub
mov
jae
adc
std
in
dec
adc
das
mov
leave
or
aam
ret
addb
outsl
mov
sbb
cmp
adc
add
pop
xchg
ret
out
jo
test
ret
call
pop
adc
test
hlt
jge
push
mov
scas
and
std
mov
push
push
or
and
in
nop
test
mov
sahf
ret
pusha
stc
push
sbb
mov
in
push
pop
stc
rcrl
enter
in
jne
inc
jmp
or
scas
sbbb
sub
gs
out
insl
ss
jle
cmp
in
sub
ror
sbb
mov
dec
jge
inc
hlt
xchg
fucomip
into
daa
mov
aas
add
popf
les
int
sub
je
enter
or
idivb
mov
cmp
data16
jle
cmpsb
idivb
pushf
ss
ret
add
xor
or
hlt
sahf
pop
out
mov
dec
xchg
lods
cmp
mov
or
mov
cmpb
shrl
les
lods
inc
push
dec
pop
xchg
jb
cmp
pop
push
pop
push
test
xor
cmpsb
bound
inc
inc
inc
js
sub
out
add
mov
out
mov
and
mov
sbb
mov
js
notb
and
mov
pop
cld
rcrb
and
mov
hlt
push
test
enter
bnd
sarl
xchg
xchg
mov
stc
xlat
sub
adc
cmp
cltd
scas
xchg
sub
dec
inc
jns
je
jae
sub
xchg
mov
xchg
sbb
dec
test
mov
dec
xor
adc
mov
or
lock
test
sbb
sub
jno
aad
ss
aaa
popa
scas
cwtl
repz
test
sub
subb
xor
aad
stos
fisubs
daa
ljmp
add
dec
js
mov
jmp
xchg
cmp
cltd
sub
jge
cmpl
sub
std
int3
mov
inc
pop
xor
sti
dec
dec
xchg
out
aad
rol
push
inc
dec
sub
jle
dec
icebp
mov
std
xor
sub
xlat
pop
outsb
outsl
jg
add
ss
sub
addl
sub
add
xor
popa
in
test
push
jae
mov
jns
sbb
mov
shl
gs
push
scas
movntps
clc
cmc
test
mov
sbbb
cmp
test
imul
dec
jo
jnp
sarl
cltd
faddl
ljmp
pop
lahf
iret
lods
cmp
sub
imul
pushl
jecxz
jne
adc
das
or
and
jmp
fidivs
pop
shrb
outsl
loope
push
jmp
jge
inc
push
loop
int
jb
or
int3
ficoml
insl
mov
ret
fstl
ret
xchg
cmp
mov
lcall
iret
in
sbbb
roll
mov
jb
clc
push
into
dec
testb
in
add
pop
xor
ja
iret
imul
repnz
cwtl
ret
xchg
sub
mov
into
pop
cwtl
fwait
scas
push
pusha
lcall
lahf
aam
jecxz
sub
xchg
js,pt
aas
push
icebp
jecxz,pn
lret
mov
cmpsb
mov
divb
sub
mov
rcrl
cld
stos
pop
ja
into
loop
cltd
and
and
xchg
std
adc
dec
es
mov
in
pop
mov
cltd
push
cmp
xor
add
jnp
dec
fimuls
pop
mov
insb
pop
mov
sbb
loopne
xchg
mov
pop
pop
dec
adc
sti
loope
mov
int3
daa
cld
dec
lret
xchg
push
push
pop
add
ss
repnz
push
jnp
mov
test
push
fwait
xor
aas
lock
xor
aad
das
scas
pop
xor
insb
and
mov
pushf
daa
sahf
cmp
sub
lock
aad
andb
shlb
ja
arpl
add
imul
cmp
gs
mov
pusha
mov
mov
pop
insl
sarl
iret
je
icebp
pop
jle
scas
sub
xchg
repnz
rolb
push
dec
rcll
lret
pop
push
mov
push
in
int
fsubs
aam
dec
dec
js
inc
add
jbe
mov
imul
dec
cmp
sbb
or
jbe
mov
push
add
xchg
cltd
xchg
inc
jecxz
aam
cmpsl
test
fmul
leave
or
cmc
cmc
jno
rorb
cmp
jmp
sub
adc
xor
mov
xchg
scas
shll
mov
outsl
lret
shl
loop
xchg
jecxz
pusha
jmp
insb
repnz
inc
stos
jecxz
jl
inc
mov
mov
jns
pop
push
xor
cwtl
jnp
cld
mov
jno
mov
add
jmp
lods
lods
mov
add
fisttpll
jne
and
push
fwait
inc
pop
fxch
lret
mov
ret
popf
scas
adc
sarb
ss
incl
jecxz
sbb
cmp
repz
movsl
and
add
sub
aas
push
imul
mov
push
adcb
bound
jbe
xor
and
dec
data16
xchg
jp
mov
movsb
add
xor
aam
in
outsb
test
cwtl
std
stc
leave
nop
scas
mov
out
pop
daa
push
in
xchg
and
repz
xchg
std
insl
xchg
inc
inc
int
jp
push
jmp
int
cltd
push
movsl
adc
push
add
cld
rcrb
mov
jmp
mov
or
xchg
sbb
pop
scas
dec
pop
out
jg
cmp
pop
lds
pop
sub
enter
movsb
aad
icebp
xor
dec
addr16
jecxz
dec
push
repz
jne
movsb
and
jno
int
mov
out
mov
dec
xchg
jnp
test
mov
stos
rcrl
mov
gs
and
fstl
add
adc
stos
push
test
add
xchg
gs
insl
sbb
setg
jae
data16
pop
mov
rolb
lcall
push
xchg
mov
jns
shll
ss
scas
xor
xchg
loop
push
lods
shr
andb
fistpl
cmp
arpl
fisttps
test
movb
mov
push
jl
adc
repz
sbb
jmp
xchg
dec
rclb
push
dec
popf
jp
xchg
aam
arpl
sbb
or
cs
dec
jo
test
xor
popf
and
icebp
out
leave
jae
and
movsb
pop
lahf
and
cmpsl
mov
inc
leave
pop
mov
jne
push
imul
in
xor
jo
cmp
add
out
ja
ds
ficompl
xlat
lahf
out
loop
data16
jnp
or
cmp
mov
xor
inc
jae
aam
lods
or
outsb
jo
pop
cmpsb
fistpl
sbb
lahf
cmpsl
inc
push
xchg
inc
lret
pop
push
out
jmp
insb
dec
aam
add
loopne
repnz
cmp
js
mov
push
int3
and
int3
out
xchg
sbbl
inc
jg
xchg
hlt
push
gs
sub
mov
js
lds
push
icebp
inc
mov
les
xchg
xchg
dec
sbb
adc
into
rolb
addr16
fisttps
and
call
jno
xchg
data16
push
sti
pop
jns
fdivl
fisttpl
movsl
and
mov
push
leave
sti
jb
subb
lahf
loope
pushf
dec
repnz
or
mov
mov
ss
jne
shlb
fmuls
imul
jg
jae
xor
lds
aam
jnp
lods
leave
add
mov
outsb
sbb
mov
mov
enter
xchg
paddb
insb
rcrl
jl
lea
pop
test
mov
add
pop
scas
or
pop
dec
cwtl
not
sub
call
inc
and
mov
hlt
sub
scas
fimull
enter
and
adc
jns
mov
pop
fs
bound
out
add
mov
cmpsb
dec
fwait
xor
cmp
sti
in
push
cmp
pop
jnp
sub
pop
or
cmp
rcll
popf
mov
inc
test
dec
pop
and
sbb
out
iret
enter
iret
add
mov
cld
shll
push
cmp
xchg
mov
fs
pop
pop
mov
aad
xchg
sbb
add
test
adc
mulb
pop
cmpsl
scas
and
les
fisubrl
cld
call
insl
xchg
cmp
dec
cmp
imul
mov
test
sbb
pop
addb
inc
add
pop
outsb
and
cmc
jle
sub
into
fmuls
mov
outsb
mov
fdivrp
mov
jo
ret
jle
cltd
pop
xchg
push
cmp
sub
stc
in
inc
add
in
pop
adc
mov
cltd
push
jns
filds
mov
push
js
popa
pushf
lods
xorl
jns
stc
sbb
cmpsb
dec
xor
outsl
testb
pop
push
insl
xorl
lods
incl
push
std
sysexit
sbb
ror
rcl
adc
jbe
mov
cmp
xchg
jp
lds
cmc
in
fmuls
add
push
add
dec
in
xchg
test
mov
scas
enter
test
push
js
dec
mov
mov
push
mov
pop
sbb
in
mov
or
dec
mov
mov
adc
stos
xor
jge
add
mov
jnp
lcall
cmp
lret
mov
fs
iret
push
xor
daa
sbb
adc
and
push
mov
shrb
mov
push
inc
sti
cmc
shrl
es
clc
sub
jno
fstpl
pop
stos
mov
push
cmp
mov
insb
or
cmp
sbb
push
into
or
push
mov
sub
loope
loopne
dec
dec
rep
insl
xchg
pop
cmc
out
jbe
jl
sbb
jecxz
test
sub
push
lahf
jae
aaa
les
cmp
cmp
les
dec
dec
push
rcll
mov
adc
push
jmp
cmpsb
mov
scas
imul
shl
cmp
out
cmp
and
call
outsl
arpl
fcmovu
adc
cmp
test
sahf
movsl
dec
xchg
sbbl
push
push
imul
mov
jne
test
jecxz
movsl
and
sbb
adc
test
cli
adc
inc
imul
push
in
and
ficoms
xlat
adcl
in
bnd
test
lahf
inc
mov
jb
sbb
loope
dec
sub
fbld
mov
int3
jne
sarb
addr16
adc
leave
ds
xchg
push
mov
ja
orps
xor
dec
adc
dec
in
jno
cmp
push
outsb
cmp
in
push
aaa
jl
ja
mov
enter
xchg
popa
pop
cmp
cmpsb
add
subb
in
pusha
stc
inc
push
jne
sub
mov
lods
mov
jge
iret
cld
test
or
cmpsl
mov
add
fidivrl
dec
push
adc
outsl
dec
adc
mov
je
std
int3
push
mov
popf
add
out
test
ljmp
imul
cmp
inc
mov
mov
push
das
push
leave
mov
xlat
cltd
push
sbb
jb
mov
and
xchg
push
push
fsubr
subl
mov
dec
lret
in
sub
or
lahf
cmp
icebp
sbb
addl
mov
push
mov
cs
mov
sbb
cmp
jg
add
jle
lock
adc
and
notb
fwait
or
repz
xchg
test
mov
test
pop
mov
inc
push
or
adc
push
xchg
ret
lret
jns
test
mov
data16
inc
mov
lret
jnp
lock
stc
mov
cmp
pop
or
sbb
sbb
ret
scas
mov
push
ret
jmp
or
bound
jge
hlt
mov
push
xor
std
jo
call
fcom
lahf
inc
push
dec
mov
dec
in
mov
xchg
lea
les
and
fst
loope
pop
pop
inc
add
icebp
add
pop
sub
popa
inc
xor
mov
shr
jns
fwait
inc
lods
mov
scas
lock
mov
cld
roll
cmp
xor
call
dec
popf
cmp
rcl
pop
wrmsr
imul
ret
outsl
pop
jg
xor
xchg
test
dec
jno
out
jmp
xchg
mov
mov
stos
loop
lret
mov
fisubs
mov
shlb
push
mov
jb
pushf
scas
aad
push
aam
fsubrs
jle
and
push
sub
fs
bound
mov
and
lahf
fsubs
cli
shlb
mov
push
popf
out
mov
loope
mov
add
jmp
fildl
imul
add
inc
fstpt
push
out
jbe
imul
stos
mov
test
xor
jg
jmp
cmpsb
jp
cwtl
loop
pop
mov
sub
fidivrl
sarl
sbb
mov
inc
andb
clc
sbb
inc
pusha
adc
cmp
gs
sub
loope
jg
cmp
sbb
xor
clc
ret
xor
sub
mov
outsl
lds
mov
in
dec
fsts
xchg
es
int
pop
sbb
sbb
in
push
leave
repnz
dec
inc
sub
cmp
sti
inc
push
adc
shll
call
add
notl
pop
icebp
outsb
aad
test
test
mov
iret
inc
scas
enter
inc
cs
les
notb
push
add
cmp
mov
mov
call
shrb
inc
xor
sbb
out
cld
in
enter
adc
dec
sahf
mov
and
test
lea
jmp
call
mov
mov
jae
push
pop
xchg
mov
lock
add
ret
lods
xchg
fidivs
das
incb
ja
mov
out
gs
inc
adc
or
cmovne
and
and
dec
cmp
push
sbb
movsl
and
iret
rcr
and
push
pop
sbb
xor
es
adc
hlt
lock
outsb
jle
mov
pop
pop
adc
sahf
pop
sbb
xchg
cli
dec
sub
jno
xor
push
jne
and
test
sahf
adc
ss
and
cmpsb
hlt
cmpsb
mov
mov
add
jecxz,pn
xchg
push
add
pop
fsubp
testb
mov
and
fcompl
out
mov
aaa
imul
insl
in
dec
mov
cmpsb
std
mov
and
push
sbb
add
push
pusha
jg
psrld
test
mov
mov
cmpsb
mov
cli
popf
fs
or
mov
sbb
into
repz
sbb
aas
sbb
push
mov
xchg
jmp
aam
jnp
outsb
inc
dec
adc
into
cmp
arpl
cli
aas
adc
rclb
inc
jl
icebp
pop
in
orb
pop
test
jmp
fs
repz
cmpsl
mov
aaa
sti
dec
inc
mov
es
push
je
push
jle
mov
add
cmp
scas
push
scas
lret
lods
gs
lahf
cs
sbbb
jp
cmpsl
js
push
sub
xchg
dec
or
cmpneqps
popf
inc
insl
lret
lock
shlb
xor
pop
add
ud1
push
mov
lea
push
cmc
mov
mov
mov
xor
jns
fidivrs
sub
cmp
inc
in
shr
lea
cmp
cmp
bound
jns
jle
mov
inc
jp
fistps
cmp
sbb
pop
sbb
daa
in
arpl
fnstenv
jae
popf
xor
sbb
and
xor
xlat
lret
jb
fstpl
dec
cwtl
lahf
je
add
outsb
add
or
leave
pop
rorb
pusha
aad
xchg
mov
dec
pusha
loope
jecxz
jmp
je
pop
xor
dec
and
pop
jl
fnstcw
xor
call
xor
test
sbb
pop
enter
pop
ret
jp
jmp
mov
sbb
or
pop
popa
mov
filds
adc
insb
jno
push
dec
add
fucomi
dec
out
push
out
in
into
cmpsb
fimull
pop
gs
ja
fisubl
dec
out
das
rcrb
adc
aas
pop
cwtl
movsb
push
aaa
push
iret
insl
jle
inc
sub
js
fwait
ljmp
lret
ds
push
ffreep
or
push
out
pop
ret
std
scas
or
sbbl
mov
add
or
loope
xor
mov
xchg
jnp
and
jge
nop
sarl
push
and
popf
ljmp
add
inc
add
jns
xchg
lcall
ljmp
addr16
dec
mov
add
fsubl
enter
jnp
mov
loope
shrl
mov
stos
xor
into
clc
pop
sbb
pop
test
pusha
mov
test
movsl
jo
sahf
jb
bound
xlat
ljmp
sahf
dec
rcl
cltd
shll
loopne
mov
mov
ror
add
iret
test
int
outsb
push
cmp
ret
rcl
ret
adc
ljmp
xchg
in
fiaddl
mov
rcrl
cld
call
fbstp
les
scas
xor
in
and
and
test
and
loopne
xor
sub
scas
jl
xchg
push
mov
lret
cmp
jle
jns
ljmp
jmp
scas
sbbl
push
stc
test
mov
int
data16
repz
ljmp
sbb
stc
icebp
inc
mov
and
push
mov
lods
cwtl
and
and
lods
sub
roll
add
bound
roll
insb
cmp
dec
imul
xchg
fwait
add
je
mov
ror
lock
sahf
lahf
repnz
loop
cmp
xlat
scas
sahf
mov
push
call
in
xchg
fidivrl
pop
gs
push
mov
jae
pop
fldcw
push
fdivrl
mov
or
mov
jle
jle
cmp
sbb
jle
test
negb
cld
and
test
mov
cmp
jnp
lock
jge
call
leave
mov
cmp
mov
scas
mov
in
sub
inc
jp
push
inc
shlb
xchg
fdivrs
mov
in
add
push
stos
lahf
pop
in
pop
pusha
hlt
rcll
nop
fildll
stos
cmp
inc
aas
xchg
loope
jle
cmp
ljmp
cmp
scas
mov
addb
push
push
ror
lret
xor
sub
cld
push
mov
pop
dec
push
add
in
xchg
xor
insb
pop
nop
ljmp
inc
pushf
pop
inc
ljmp
adc
push
lcall
into
push
sar
test
xorl
loope
negl
xor
das
in
imul
sub
repz
or
push
je
clc
dec
adc
fisttps
dec
test
jb
stos
dec
jb
xchg
movsl
in
fisubrl
dec
jg
inc
push
cltd
mov
scas
jl
ficomps
jno
push
push
stos
xor
jb
sub
std
in
cmc
das
push
fwait
pop
sbb
incl
outsb
int3
jmp
outsb
mov
fiadds
inc
push
scas
gs
cmp
in
inc
mov
and
test
mov
unpcklps
clc
hlt
inc
int3
mov
push
and
xor
dec
sti
int
dec
sub
mov
cmp
pop
rcr
sti
or
push
pop
bound
lods
in
mov
inc
subl
sbb
mov
mov
outsl
lcall
push
out
jge
mov
insl
dec
or
aaa
rolb
lds
dec
xor
sub
aas
jnp
popa
aas
sbb
inc
imul
dec
cmpsb
sbb
cs
push
adc
adc
mov
sub
cld
adc
sub
xor
repz
sbb
push
xor
ret
iret
outsb
add
flds
aas
stos
stos
shlb
pop
loop
subl
orl
jbe
popa
mov
popa
popf
mov
pop
popf
dec
push
xchg
pop
stos
sbb
fwait
sbb
cwtl
cmc
adc
cs
jl
xor
imul
into
pop
loop
shll
iret
mov
fsubrl
cmpl
int
lcall
mov
nop
insb
and
leave
scas
rolb
adc
cmpsb
loop
jecxz
pop
cwtl
add
inc
or
inc
inc
dec
jno
ja
jl
popaw
and
aad
vsqrtss
enter
ficomps
sti
sar
and
cld
or
popa
enter
outsl
ja
shll
jns
sti
sub
and
lods
addr16
mov
imul
stc
or
cmpsb
stos
or
and
and
outsb
aam
xor
xor
es
adc
dec
mov
sbb
mov
or
sbb
mov
adc
mov
pop
clc
adcb
popf
cmpsb
rcr
xlat
out
dec
sbb
loope
ljmp
sub
fiadds
mov
iret
xchg
lods
gs
sbb
lds
hlt
add
mov
hlt
mov
pop
enter
bound
mov
stos
mov
push
lret
andb
push
int3
shlb
daa
dec
jg
jb
lret
jmp
stos
test
cmpb
test
pop
pop
fs
mov
stos
ret
dec
lods
push
inc
lahf
jnp
pop
jmp
jbe
mov
insl
or
push
push
fdivrs
cli
notb
into
jae
xchg
xchg
mov
and
sub
xor
das
enter
pop
or
cmp
ret
movb
adc
movsl
xchg
mov
fists
imul
push
test
rcr
pusha
mov
jle
xchg
fisubs
test
add
imul
das
dec
sbb
pop
and
add
stc
and
insb
jmp
xor
testl
adc
arpl
inc
or
enter
xchg
out
ljmp
adc
xor
pusha
in
shl
dec
pop
mov
inc
data16
lahf
call
pop
xchg
xor
aam
addl
das
icebp
in
repnz
push
dec
sbb
push
inc
push
and
xchg
pushf
nop
shlb
rolb
movsb
cwtl
xchg
nop
daa
outsl
les
add
jmp
mov
sbb
adc
mov
out
lock
xchg
lds
or
sarl
dec
inc
fistpl
imul
fisubs
jo
cmpsl
dec
arpl
mov
mov
jge
popa
lret
stc
inc
out
lods
out
subb
data16
pop
in
inc
dec
repnz
movsl
lock
inc
les
and
fwait
add
add
roll
cmpsb
imul
mov
arpl
dec
rol
mov
sub
push
out
xor
outsl
sbb
in
jnp
mov
clc
pop
jnp
rcll
out
and
insl
jge
test
sahf
fstpt
jecxz
lahf
lods
or
pop
mov
jp
xor
cli
test
icebp
outsb
fnsave
sub
aas
mov
sub
lds
and
xorl
fidivrs
iret
imul
pop
out
mov
aas
cwtl
jge
loopne
int3
mov
pop
inc
adc
fildl
cmp
adc
cld
popa
pop
xchg
insl
mov
jno
dec
movsb
cwtl
xlat
or
push
sbb
popf
push
ficomps
jg
mov
mov
outsb
rorb
pushf
faddl
and
int3
xchg
stos
in
add
scas
push
mov
out
testb
pop
inc
push
and
lret
fisttpll
test
scas
insb
cmp
xor
jnp
stos
bound
cmc
xchg
aad
mov
inc
mov
xchg
sub
xchg
pop
or
mov
sub
adc
adc
aaa
mov
lods
or
pusha
sbb
lea
pop
imul
js
jmp
sbb
inc
clc
jle
adc
testb
mov
cmc
or
pusha
test
mov
sbb
addl
inc
dec
addr16
es
jecxz
and
scas
rcrl
pop
sahf
mov
aaa
dec
mov
stos
ss
mov
call
ljmp
pop
mov
out
cld
adc
stos
iret
adcl
in
ja
fsubl
outsb
cmp
iret
adc
out
mov
fiadds
mov
sub
jbe
xchg
xchg
inc
inc
sbb
sub
es
and
lock
out
in
std
push
notb
shrb
mov
mov
cmc
pop
push
sub
hlt
scas
pop
in
out
aad
ficompl
xor
xor
or
aad
jns
sbb
pop
sbb
push
adc
xchg
ljmp
jne
stos
inc
sbb
js
pop
insl
mov
cmp
adc
lock
xchg
dec
stc
mov
pop
fisubrl
fiadds
ss
in
dec
testl
in
adc
jp
jle
dec
popf
push
cmp
cmp
stc
fsubrs
adc
dec
jns
mov
std
pop
jae
std
push
out
dec
sub
jle
shrl
inc
xchg
es
mov
push
lods
jo
push
mov
mov
fs
cs
shr
and
mov
mov
xchg
push
repnz
sbb
sub
xlat
and
popa
and
sub
cmp
js
cli
js
aad
frstor
notb
and
gs
adc
bound
push
addr16
mov
hlt
jmp
jmp
stos
push
lret
mov
aas
clc
sbb
ret
jle
pop
xchg
sub
pop
imul
dec
mov
sbb
sbb
xlat
mov
mov
andl
in
xchg
in
inc
push
imul
jb
imul
xchg
rcrb
mov
adc
jp
sbb
stos
xor
imul
mov
out
jo
inc
push
push
loope
outsl
lret
inc
sbb
popf
sbb
orl
dec
sbb
sbb
cmp
sub
xor
dec
repz
outsl
cmp
arpl
xchg
mov
cli
scas
loopne
sub
cmp
subb
push
imul
clc
mov
mov
decl
mov
daa
fbstp
inc
cmpsl
mov
lret
aas
cmp
dec
xor
lods
push
adc
xor
lret
xchg
daa
imul
xchg
ret
inc
fmuls
popa
dec
add
mov
pop
sub
insl
ljmp
mov
push
inc
adc
and
mov
mov
out
push
add
jecxz
sbb
cmp
dec
arpl
cmpsl
and
lret
and
xchg
push
or
xchg
pop
je
mov
push
jmp
lret
dec
fstps
add
mov
movsb
imul
in
je
dec
mov
mov
add
rol
orb
icebp
pop
pushl
xlat
out
mov
test
daa
mov
sbb
cld
out
int
mov
loope
scas
mov
add
push
xchg
xchg
idiv
and
cs
cmp
cmpl
dec
pop
and
xchg
mov
push
out
sub
dec
enter
lea
sub
repnz
fnsave
lods
jl
adc
mov
addb
pop
sahf
stos
mov
fbstp
in
mov
dec
mov
pusha
sbb
pop
fstpt
stos
lea
test
inc
dec
xchg
push
mov
shll
in
add
mov
test
xorl
dec
dec
pop
mov
mov
sarl
das
inc
xchg
popa
inc
inc
ja
scas
arpl
hlt
mov
rcrb
ja
mov
add
notl
or
xorb
adc
das
shll
cli
cmc
xchg
mov
andb
add
ljmp
cmpsl
shlb
jp
cmp
xchg
ss
ds
pop
or
bound
in
xchg
pop
in
or
in
dec
adc
or
inc
pop
cwtl
or
pop
enter
jnp
push
jo
cmp
gs
push
dec
cld
xchg
bound
or
or
sbbl
push
inc
push
push
adc
mov
scas
push
inc
fists
ja
cltd
sbb
fildll
ljmp
mov
sub
divl
popa
test
mov
test
pusha
cmpsl
pop
dec
mov
stos
xchg
inc
mov
xor
pop
push
mov
sbb
leave
in
divb
insb
add
xlat
xchg
mov
sysret
xorl
and
jo
dec
or
push
mov
out
pop
xchg
xchg
fdiv
popf
mov
hlt
xor
adc
adc
xor
jne
insb
lea
push
cld
mov
jns
mov
test
fcoms
daa
stos
lret
imul
jo
inc
rolb
add
ljmp
pop
dec
mov
cmp
and
inc
push
ret
mov
subb
jg
sarb
pusha
nop
inc
fwait
mov
mov
jp
insb
insb
popa
jecxz
xor
jp
fnstcw
aad
jle
test
xor
dec
pop
mov
push
inc
insl
pop
shlb
xchg
xchg
enter
xchg
int
inc
jo
pop
sahf
repz
push
mull
rolb
cmpsb
mov
addr16
inc
repz
adc
pop
rol
jns
fnstcw
mov
jge
mov
mov
mov
sub
negb
roll
mov
aam
sbb
fwait
jecxz
pop
push
movsb
stos
mov
or
jns
cmpsb
andb
scas
fdivl
mov
xchg
filds
xchg
jecxz
push
dec
dec
outsb
ja
scas
loopne
push
fnsave
mov
cwtl
jmp
cmpsb
mov
mov
push
pop
adc
out
sub
jl
sbb
push
dec
out
jge
dec
les
push
ss
lret
pop
dec
addb
fildll
ret
cwtl
adc
add
or
mov
pop
les
into
inc
lahf
pop
dec
shlb
call
push
or
jnp
and
call
ret
xor
sbb
mov
icebp
shll
scas
mov
dec
cmp
inc
sub
mov
cmp
dec
jmp
sti
cmp
dec
leave
sub
jnp
cmp
fwait
jmp
mov
icebp
jae
imul
js
ret
push
cmp
sbb
leave
andb
std
sahf
ss
dec
cmp
test
cmp
inc
cmc
dec
or
call
xchg
das
outsb
mov
stc
shl
sahf
cmp
in
ds
xchg
loop
mov
or
xor
push
or
jmp
popa
fldcw
pop
and
lret
xchg
out
lret
xchg
add
fwait
sbb
stc
mov
mov
or
push
or
cmp
scas
sub
lcall
xchg
outsb
inc
jmp
and
out
xchg
push
push
iret
inc
xor
pop
adc
int3
iret
sbb
scas
incl
xchg
fcmovne
cltd
ret
call
push
mov
push
test
loop
push
or
xchg
mov
and
shll
das
scas
pop
xchg
mov
mov
jnp
add
sbb
add
fisubs
xor
push
lahf
inc
std
sbb
cmp
or
or
mov
jge
push
push
jb
scas
push
out
push
push
or
or
imul
jne
outsl
adc
dec
cmc
cmc
sbb
add
mov
mov
mov
call
clc
fsts
adc
int
xlat
jmp
xor
ret
mov
ds
pop
lret
inc
pop
mov
loopne
xor
movsl
ja
and
pop
ret
mov
bswap
cltd
sbb
clc
push
imul
pop
inc
popf
xor
cli
jns
jno
pop
adc
std
cld
fadds
insb
xchg
mov
shll
and
add
mov
jns
dec
dec
in
or
adc
in
xchg
jo
test
jb
mov
ds
hlt
or
xchg
xchg
out
pavgb
inc
cmpsb
fld1
mov
mov
or
xor
jne
cmp
daa
add
mov
insl
adc
stos
ret
ss
and
addr16
arpl
popf
shl
shrb
sarl
shll
test
imul
push
int
or
jae
cmpsl
fisubrs
adc
insb
add
ret
dec
divb
cmp
popf
mov
sbb
cmp
mov
jg
or
fdiv
fnstenv
movl
int3
mov
aam
push
or
mov
adc
je
repz
and
xor
jecxz
jb
je
fiadds
ret
adc
push
test
mov
shll
or
ds
cwtl
movsl
jo
int
mov
rcll
adc
xchg
mov
insl
add
int
jmp
js
jmp
leave
sti
inc
inc
jbe
flds
fs
mov
out
adc
bound
or
in
mov
lods
inc
inc
loope
ja
jns
jg
fucomp
push
ret
xor
daa
into
jb
mov
and
mov
rcrb
movsl
fsts
in
mov
inc
mov
and
shr
push
rclb
mov
or
popa
sahf
xchg
imul
jbe
adc
and
xor
xor
es
fwait
cmpps
lds
mov
scas
sbb
pushl
pop
push
pop
and
adc
data16
mov
lock
add
mov
mov
sarb
sub
pop
inc
push
mov
mov
sbb
inc
push
xchg
and
and
insl
movsl
out
dec
inc
adc
jb
jae,pt
pop
pushf
or
mov
xchg
shll
jl
test
shll
add
push
xor
insb
iret
sbb
out
mov
mov
das
and
pop
dec
mov
mov
push
sbb
mov
imul
pop
int
je
inc
call
lcall
mov
aad
lods
popf
pop
mov
rcrb
xchg
jp
push
std
adc
jnp
insb
mov
sbb
sbb
fs
and
fidivrl
popa
adc
xchg
aam
xchg
mov
aaa
sbb
dec
xchg
ror
cmp
jmp
mov
xchg
bound
jmp
mov
lret
into
pushf
inc
out
push
adc
imul
jno
pusha
dec
cld
or
xchg
mov
jecxz
lret
jne
pop
xchg
push
jbe
mov
mov
or
repnz
icebp
pop
int3
insb
call
outsb
and
pop
mov
xchg
and
mov
shr
andl
mov
inc
sti
lock
mul
adc
inc
outsb
aam
inc
sar
fwait
or
cmp
xor
sbb
add
or
je
mov
js
mov
xorl
icebp
lcall
fadd
mov
mov
mov
in
jle
frstor
add
les
movsl
ret
cltd
gs
daa
push
xchg
dec
data16
in
push
sbb
jge
sti
fndisi(8087
push
push
adc
outsl
popa
sarb
mov
dec
dec
cli
sbb
into
sub
or
jmp
cs
stc
cmpsb
cmp
mov
dec
push
push
or
mov
adc
xchg
cmp
in
cmpsb
xor
icebp
adc
push
mov
cmp
mov
inc
lret
xor
dec
or
fdiv
shrb
hlt
inc
icebp
mov
and
push
nopl
adc
push
jge
and
mov
stc
or
xorb
pop
mov
pop
and
jnp
pop
out
add
and
ficompl
loope
andb
imul
push
sub
outsb
cmp
fstl
ss
ss
stos
in
imul
addr16
roll
movsl
add
sbb
lahf
push
xchg
ja
and
mov
stos
xor
shll
xlat
add
add
test
sbb
xorb
dec
sub
lds
or
lea
inc
fs
sub
rol
fidivrl
and
loope
xchg
cwtl
rol
push
orb
shrl
ja
es
aaa
mov
filds
or
mov
or
loopne
mov
scas
lock
lret
inc
jb
inc
adc
cmp
stos
sub
outsl
lret
sarb
and
andl
scas
add
ljmp
leave
adc
cmp
pop
pop
std
sub
or
mov
frstor
out
xchg
jb
imul
dec
jg
mov
daa
popa
cmp
enter
adc
jb
mov
add
cmp
and
fiadds
mov
nop
nop
sbb
cmp
pop
test
sub
rorb
add
sar
mov
pop
ljmp
and
out
ret
repnz
packssdw
and
shl
sub
arpl
out
clc
xorb
sub
insl
pop
aaa
outsb
jae
test
hlt
cmp
das
adc
push
subl
xor
adc
mov
dec
lahf
cmpsl
jno
sub
cmc
cmp
jecxz
xchg
fdivl
or
or
int3
or
pusha
scas
cmp
out
cmp
into
sub
out
jae
mov
andb
xchg
insl
outsl
fsubl
mov
xchg
push
in
sub
push
fcmovu
je
mov
mov
and
jno
rorl
xchg
push
outsl
cli
es
sahf
jne
sahf
mov
test
push
push
and
mov
cs
jb
nop
inc
test
aas
pop
cmc
add
xchg
insb
dec
mov
lahf
or
repnz
cmp
or
push
jl
scas
pop
add
mov
mov
fidivl
or
inc
xchg
inc
scas
je
fdiv
out
xor
ret
dec
fsubrs
lret
xor
shlb
in
mov
dec
int3
iret
imul
xchg
jb
cmp
and
lret
xchg
dec
dec
add
pop
and
xor
inc
fs
data16
push
jmp
test
adc
xchg
jbe
xchg
mov
mov
push
sbb
bound
xorps
dec
push
fldl
notb
fimuls
rcrb
les
cmp
mov
out
and
pop
jae
mov
mov
dec
cld
dec
fisubrl
adc
sub
xchg
test
sub
xor
xor
das
mov
xchg
and
int
out
xchg
add
sbb
xchg
js
aad
sub
loop
push
ljmp
jle
pop
adc
xchg
xchg
ret
cltd
jmp
or
iret
push
dec
sbb
sbb
sbb
or
pop
cmp
fistpl
sub
divl
aad
cltd
add
jle
or
or
loop
notb
and
xlat
pop
rcll
out
lods
inc
shrb
es
mov
jmp
mov
mov
outsb
movsl
les
mov
in
aas
pop
xchg
leave
mov
pop
sub
pop
and
and
xor
je
fs
ljmp
clc
loope
iret
xchg
lds
dec
inc
test
mov
xchg
dec
jl
pushf
aam
sbb
cmc
or
push
stos
jmp
clc
sbb
jns
rolb
sti
sub
inc
mov
adc
pop
xor
in
pop
dec
jecxz
stos
test
cmpsb
push
insl
push
call
testl
push
fistpl
push
into
fbstp
roll
sub
cmc
insb
dec
icebp
sbb
mov
mov
fidivs
mov
outsb
fimuls
ja
xor
icebp
popa
aaa
pop
and
dec
in
mov
cmp
mov
adc
xor
insb
in
lea
mov
mov
fisttpl
movsb
mov
push
in
iret
icebp
int
pop
aad
sub
pop
mov
add
mov
shl
ljmp
test
mov
jl
push
jg
neg
lahf
jbe
shrl
adc
sbb
rorb
rorl
pop
or
mov
cwtl
mov
lods
xchg
pop
aaa
and
inc
jb
add
test
xchg
fistpll
jg
ret
sbb
pusha
clc
cmc
loop
add
dec
sbb
mov
imul
cmp
or
in
and
gs
or
lcall
xor
sti
pop
pop
pop
jl
xor
loop
ljmp
cmpsl
xchg
cmp
jmp
lcall
add
int3
add
mov
insb
push
mov
pop
popa
les
fnstcw
push
sbb
adc
mov
jo
clc
movsbl
ret
and
sbb
inc
pop
test
out
test
push
fisttpll
sub
js
loope
sub
outsl
jbe
aam
lcall
fsubrs
jo
cli
cmp
pushf
inc
mov
pop
xchg
add
outsl
inc
addr16
je
mov
push
mov
notl
or
iret
out
push
dec
sub
test
out
xor
loope
aaa
cmp
push
mov
int
xor
push
js
dec
andl
stos
sbb
cmp
add
jge
xor
pop
xor
inc
jle
jb
aas
sahf
push
outsl
das
jl
int
or
cmp
push
adc
ss
jb
test
shlb
mulb
ljmp
xchg
cmp
pop
push
xchg
and
leave
xor
in
add
in
mov
shl
jecxz
not
loopne
lahf
daa
ss
xor
in
xchg
in
and
insb
int
cmpsb
sbb
mov
jle
mov
mov
jno
inc
std
push
outsb
dec
arpl
dec
xor
xlat
repnz
mov
aad
jno
pop
adc
push
and
in
sbb
pop
aas
ficomps
cmp
repz
and
out
pushf
inc
inc
loopne
lret
sub
mov
inc
daa
fs
add
inc
stos
addl
rorb
jle
lcall
outsb
mov
add
mov
add
adc
hlt
ja
push
fimull
lods
push
pop
mov
aas
jle
xchg
mov
cmp
add
adc
arpl
sti
sbb
in
pop
fcmovnbe
mov
ss
shlb
movl
ds
inc
pop
negb
cmpsl
sub
rcrl
faddl
psrld
push
aaa
jle
shrb
jae
shrl
adc
dec
and
fcomp
and
xor
mov
lods
or
int
dec
sahf
scas
inc
adc
xor
mov
outsl
lret
mov
sub
dec
lret
xor
ss
jl
pusha
and
je
gs
xchg
cmpsb
in
hlt
sub
xor
imul
xor
arpl
lahf
dec
adc
or
stos
and
out
cwtl
and
cs
dec
fimull
stc
std
fs
call
jae
scas
jbe
sub
rclb
insl
int3
pop
stos
sbb
inc
mov
idivb
addr16
or
js
jnp
mov
dec
mov
jb
pop
daa
and
dec
dec
adc
push
enter
cld
sub
cs
es
addr16
pop
jbe
cmpsl
pop
leavew
inc
clc
int3
into
sti
ret
sub
push
ffree
imul
push
or
js
stos
mov
sub
mov
push
sbb
push
hlt
and
andb
dec
fiadds
adc
cmpsb
sub
mov
and
ficoml
pop
mov
add
and
sub
ret
addr16
stc
mov
xchg
or
add
jne
stc
pop
loopne
push
inc
fs
push
faddl
xor
es
push
sbb
mov
iret
or
push
and
xor
pop
inc
rol
cs
pusha
cmp
popa
sbb
mov
mov
jae
pop
xchg
sbb
mov
fsts
sbb
mov
mov
pushf
sub
push
ja
ljmp
out
aad
andb
fwait
mov
mov
iret
daa
add
or
dec
dec
gs
mov
sub
sbb
andb
lds
inc
cmp
mov
movsl
or
jae
cmc
stos
scas
les
repz
insb
movsl
sbb
scas
aam
sti
sub
add
sub
lock
sub
sarb
xchg
cs
stc
pop
sbb
cmp
pop
mov
out
je
mov
xor
and
fwait
adc
mov
cmpb
adc
cltd
lock
push
mov
or
sub
sti
aaa
xchg
xor
mov
lret
fnsave
xor
test
push
jnp
jnp
in
adc
mov
popf
sbb
adc
xchg
mov
push
xor
sbb
xor
inc
push
dec
sahf
add
iret
outsl
leave
dec
inc
jbe
test
shrl
and
das
jmp
mov
loope
mov
andl
sbb
mov
inc
mov
test
xlat
pop
xor
xor
inc
lds
test
cmpsl
cmp
pop
jmp
push
pop
pop
adc
inc
andl
ffree
daa
out
fiaddl
rorl
and
xor
sti
fwait
pop
mov
jo
lock
je
cmp
lods
cmc
mov
adc
std
cmpsb
hlt
ret
adc
lahf
dec
sarb
jp
mov
cltd
popf
xchg
arpl
inc
je
inc
jno
dec
xor
pop
data16
lds
push
cmp
mov
cmp
inc
jp
scas
push
fiadds
fs
and
sbb
jp
jecxz
dec
addr16
fld
and
fnstenv
push
push
add
xor
dec
inc
test
push
test
dec
test
test
ror
ja
ljmp
mov
lret
fwait
addb
xchg
cmp
inc
mov
and
gs
sbb
outsb
fnstenv
in
out
int
xchg
add
xlat
notb
jo
add
pop
push
in
sbb
add
push
mov
iret
andb
rcrl
inc
hlt
mov
fcoms
cmpsb
rcl
test
pop
loope
jle
xchg
lret
lret
xor
les
mov
xor
aaa
add
mov
fneni(8087
sbb
mov
int
xchg
sbb
orl
sti
andb
or
insb
inc
cs
pop
les
inc
imul
or
xchg
es
loopne
gs
sub
ds
mov
sbb
or
lods
movsb
pushf
sbb
lods
xor
add
out
push
sahf
dec
leave
pop
mov
push
in
mov
jb
test
pop
mov
jg
dec
outsl
mov
or
cmpsb
sub
fstl
inc
ljmp
push
icebp
cli
xchg
push
jne
aaa
sub
das
inc
mov
adc
rclb
cmc
or
or
xor
mov
dec
loopne
movsb
sbb
jl
int
adc
cmc
test
add
sbb
stos
mov
mov
push
ficoml
and
and
push
cli
stos
add
mov
stos
call
popf
movsb
sbb
jae
fnstsw
and
ja
xor
push
out
jecxz
jae
mov
jbe
in
lods
aam
pop
popa
pop
scas
adc
push
pop
jne
and
mov
aam
pop
lahf
mov
shlb
mov
xor
lfs
mov
pop
pop
mov
stos
and
dec
fwait
jbe
jbe
outsb
pop
in
dec
outsb
mov
jmp
ja
out
sbb
pop
enter
loope
icebp
jo
ds
movsl
in
pop
xchg
sbb
dec
lock
imul
adc
and
jg
andb
out
sbb
dec
fsubs
mov
shll
mov
pop
inc
mov
or
mov
imul
sarb
adc
mov
imul
adcl
popf
inc
mov
pop
mov
mov
dec
add
jno
icebp
bnd
pop
icebp
pop
mov
shrb
push
sub
sbb
mov
jae
inc
mov
jns
gs
test
mov
pop
or
fs
cmp
or
movl
adc
fdivrl
mov
outsb
mov
ds
rorb
jp
cld
cwtl
loopne
mov
stc
push
pop
clc
inc
sub
mov
lcall
inc
xchg
or
sub
jl
or
negb
mov
mov
pop
add
or
xchg
cmpsl
dec
loopne
in
icebp
xor
pop
mov
rcrl
sbb
xchg
mov
mov
jge
inc
jns
ret
push
adc
mov
int
cwtl
cmp
mov
xchg
mov
sbb
mov
test
inc
jp
jb
int
in
push
xor
jns
sub
mov
jg
in
and
cmp
ret
mov
test
mov
push
rolb
mov
int
mov
mov
fst
xor
das
movsl
push
push
lods
scas
lock
lahf
dec
popa
arpl
sahf
shrb
insb
sbb
negb
cmpsl
nop
repnz
popf
sub
lahf
cmp
inc
mov
pop
ret
mov
arpl
orb
and
mov
scas
xchg
mov
pop
xor
mov
out
xor
iret
pop
dec
add
xchg
push
mov
popa
cmp
jns
xor
shrl
and
xorl
dec
sbb
mov
mov
push
fsubr
push
cmp
mov
lods
in
pop
ss
xlat
movl
lcall
out
push
fistpl
mov
add
cltd
and
cmp
enter
xor
and
fisubrl
ret
lahf
and
cmpl
pop
mov
ffree
jnp
aaa
sarl
mov
cmpsb
vpsubb
mov
loope
push
outsb
push
add
mov
xchg
mov
sbb
subl
test
pusha
fs
stc
lds
xor
mov
popa
jnp
add
cmp
ss
xchg
jno
mov
add
icebp
sbb
enter
inc
lods
jae
mov
push
sbb
aas
mov
add
dec
ja
dec
pop
push
int3
iret
aas
pop
inc
nop
fs
stos
jo
inc
mov
xor
lock
xchg
js
push
sbb
jnp
fs
lahf
xchg
ja
cmp
movsl
int
jge
push
lds
jmp
xchg
dec
repz
cmpsl
cmc
fildl
in
mov
pusha
fwait
sahf
push
push
rorb
pop
divps
or
loope
cmp
jns
lea
mov
push
or
mov
adc
mov
dec
iret
jb
mov
in
xchg
test
xchg
mov
arpl
sub
inc
rcll
insb
fstpl
mov
psadbw
jo
add
jge
mov
add
sbb
dec
dec
ds
jae
in
xchg
mov
xor
mov
inc
into
mov
pop
mov
cmp
mov
xchg
addb
les
insl
sub
inc
test
mov
lret
out
mov
movsb
ds
mov
pop
lahf
inc
mov
dec
xchg
jmp
mov
push
insl
and
nop
mov
pop
mov
sarb
pop
repz
data16
scas
jne
mov
arpl
js
icebp
and
xchg
adcl
xchg
inc
mov
jp
add
imul
mov
cld
xor
sbb
sub
pop
xchg
lcall
mov
jecxz
out
int3
add
pushl
fisubrs
or
sbb
mov
das
int3
out
pop
push
sub
mov
popf
outsl
icebp
mov
mov
aas
jge
sbb
and
inc
mov
push
stc
sti
sahf
fsubp
data16
outsb
and
lods
out
movsl
cmp
rorb
pop
lcall
cmp
in
sti
sbb
xchg
xlat
inc
arpl
rorb
sahf
lock
sahf
test
xchg
nop
hlt
fsubrl
xor
daa
sar
inc
cmpsl
jbe
mov
inc
insb
cmp
jl
pop
dec
sbb
pop
sbb
nop
or
cmp
lock
adc
pop
pop
and
cmp
fs
jb
pop
leave
ror
mov
jo
xchg
jle
sbbl
adc
inc
in
rorb
mov
mov
test
dec
mov
out
sub
pop
xor
jl
xchg
iret
cmp
out
aam
enter
loop
mov
pushf
mov
or
mov
and
ret
jle
sti
and
adc
push
movsb
divl
mov
mov
rep
inc
fisubrl
scas
mov
add
ret
scas
mov
mov
outsl
hlt
inc
sbb
xor
test
jge
xchg
or
jle
repz
jg
lea
imulb
jo
shr
cmpsb
xlat
push
ss
ficoml
ficoms
push
outsl
loopne
xchg
dec
fsubp
xchg
mov
push
in
push
xor
imul
inc
movsb
out
cli
cmp
sub
jecxz
mov
lods
jmp
loopne
sub
push
ficoml
movsb
sub
push
mov
xor
out
aas
mov
jp
push
cmp
arpl
cmpsb
and
jae
shrb
js
and
add
fisubl
lds
jns
in
dec
mov
xchg
jo
adc
gs
rorb
mov
ret
in
ds
cmp
jg
pushw
out
lahf
fldcw
or
stos
push
pop
lahf
inc
xlat
into
jnp
daa
add
mov
fadd
jle
push
clc
aad
sbb
xorb
pusha
sbbb
insb
or
aas
jbe
ja
lret
stos
push
jg
cmp
shlb
xor
ret
pop
rcll
adc
xor
push
loope
bound
cmpsb
push
mov
cltd
xor
cld
iret
loopne
mov
aad
xor
xor
loop
std
nop
inc
cli
or
mov
stc
mov
out
or
loope
pop
push
jle
mov
push
xchg
xchg
mov
mov
mov
adc
test
sbb
mov
mov
aaa
lcall
aaa
pop
imul
out
add
pop
xor
mov
push
pop
inc
cmc
aas
lea
push
scas
jb
test
jo
icebp
sbb
decb
in
add
test
je
int3
lock
ds
mov
aad
jmp
stos
lcall
and
pop
mov
pushf
lods
cmp
sti
fidivs
xchg
pusha
mov
pop
pusha
or
mov
ret
out
fwait
and
sahf
pop
inc
hlt
and
inc
dec
mov
mov
stos
push
jne
lret
or
cmp
dec
xlat
outsl
push
mov
daa
mov
movsl
fists
or
jg
fsubrl
jp
pop
lret
mov
imul
sbb
xchg
add
in
push
fs
mov
push
mov
in
sbb
mov
sahf
and
lock
push
inc
lret
dec
xchg
into
fldt
pop
pop
je
jge
rol
xor
stos
out
pusha
cmpsl
cmp
xchg
leave
or
mov
shl
mov
fs
jge
mov
adc
jecxz
pop
sbb
subl
in
into
xor
mov
mov
cmp
sub
xor
loop
adc
roll
idivl
sbb
jo
scas
and
cmpsl
push
cmp
cmp
inc
scas
add
cli
pop
icebp
je
dec
push
fiaddl
aas
push
pop
mov
ljmp
adcb
xchg
dec
push
mov
pop
jno
and
ret
sub
shl
adcl
sahf
fnstcw
pop
aad
orl
add
lock
sub
inc
pop
mov
in
daa
push
xchg
cmpsl
pop
fucomi
pop
lea
mov
xor
xorb
xorl
std
mov
aad
lahf
cld
pusha
lcall
mov
fisubrl
lahf
movsl
push
xor
fstl
rorb
jecxz
cltd
jmp
mov
jnp
fildll
xchg
in
aad
sub
cld
xchg
mov
ret
stc
xchg
out
xchg
jg
pop
repz
test
out
push
mov
jb
or
mov
sub
stos
inc
imul
push
shll
in
jp
push
jmp
pop
test
arpl
icebp
mov
inc
pop
rolb
rcrb
std
popa
mov
inc
icebp
jp
out
js
sub
jnp
pop
lret
sub
lcall
cmpsb
in
sbb
in
push
mov
fsts
leave
mov
imul
iret
push
jb
and
les
das
pusha
or
ud0
lock
call
xor
sub
jbe
jae
addl
stos
andl
pop
insb
sub
leave
mov
fiaddl
jne
jnp
sahf
xchg
mov
daa
outsb
jo
ds
push
andl
cmc
sarl
outsb
sub
sub
add
shll
in
or
push
repnz
test
mov
xor
jne
lahf
arpl
or
jle
push
pop
aas
ret
insl
mov
sahf
mov
jo
xor
insl
lahf
xor
adc
lahf
xchg
imul
faddl
repnz
data16
aas
and
adc
inc
shl
aaa
flds
pop
jae
imul
btr
mov
xchg
mov
pop
pop
push
divl
dec
addr16
out
mov
es
and
dec
add
shll
pop
mov
aaa
mov
pop
sub
cmp
in
ret
push
addr16
mov
xchg
jno
cmp
ret
leave
inc
adc
or
fst
pop
mov
dec
das
xchg
sbb
or
jo
and
ret
xchg
jns
or
std
pushl
cltd
call
jmp
mov
or
xchg
orl
pop
inc
cmpsb
or
ljmp
lock
and
sar
inc
or
xor
add
pop
ss
iret
out
lret
aas
add
js
rcrb
lret
sti
push
dec
jns
mov
sbb
sbb
mov
jns
and
scas
fdivrl
lods
mov
imul
xor
lcall
push
std
pop
lahf
mov
pop
into
and
mov
pop
mov
insl
aas
pop
or
pop
jbe
cli
xor
in
or
mov
or
lahf
stos
jecxz
jg
nop
add
mov
xor
mov
cmc
movsl
shr
push
jno
mov
xor
push
push
mov
mov
loopne
test
loopne
cmp
and
sub
jb
mov
addr16
out
and
mov
push
push
into
xor
loopne
nop
xchg
dec
fsubrs
mov
aad
inc
dec
sub
inc
mov
xor
and
das
mov
pop
int
and
jno
push
add
mov
pop
inc
inc
out
cmp
and
sub
push
mov
jnp
add
push
outsb
fsubl
dec
inc
es
push
mov
imull
cmp
push
sbb
fbld
mov
arpl
or
push
lods
push
xor
pop
and
test
mov
mov
mov
enter
mov
or
test
ss
enter
push
dec
imull
ret
push
scas
mov
mov
sahf
or
mov
jno
xor
inc
stc
fldt
imul
stos
imul
lret
xor
pop
ja
dec
push
mov
dec
shl
in
ljmp
test
and
mov
mov
ret
mov
jnp,pt
push
out
mov
xor
cmp
jle
sbb
xor
fistl
addr16
adc
push
imul
xorb
pop
mov
jnp
insl
lcall
sbb
ret
xor
cmp
cmp
call
sbb
fisubs
sbb
mov
xor
mov
sbb
jl
test
and
pop
xchg
jg
mov
adc
ljmp
fists
hlt
loope
inc
insb
mov
xlat
jno
adc
or
mov
int
insl
loopne
adc
push
dec
ljmp
add
xchg
lea
push
mov
adc
enter
push
push
pop
repz
push
adc
dec
shll
aas
fstps
in
pop
push
fbld
out
and
adc
push
outsl
pop
mov
cmp
xchg
push
jns
dec
dec
push
xchg
sbb
mov
fdivs
inc
das
testl
arpl
sub
dec
dec
mov
jb
scas
mov
and
and
add
lods
int3
ss
mov
inc
adc
or
lret
ljmp
cwtl
mov
inc
stos
pushf
aad
mov
aas
xor
jae
sub
dec
push
inc
push
lret
stos
loop
inc
mov
jns
push
push
jmp
pop
insb
inc
dec
faddl
mov
les
fmull
mov
lcall
push
cwtl
mov
add
cmp
adc
push
andl
push
std
mov
xor
xchg
dec
lds
loope
lea
push
or
inc
sbb
inc
imul
adc
dec
test
mov
xchg
push
inc
inc
jmp
enter
jae
cld
aas
fimull
cwtl
jno
and
movsl
sbb
adc
dec
or
imul
cmp
mov
outsb
shl
ds
or
jg
inc
and
sub
and
pop
or
pop
xor
lds
popf
rolb
subb
mov
movsb
dec
outsl
out
idiv
dec
stc
pop
sbbl
testb
mov
mov
add
mov
jg
loope
sub
and
fs
repz
sbb
ret
sti
inc
lret
mov
lcall
sub
sbb
shll
mov
arpl
lods
in
addr16
adc
mov
mov
mov
jno
lcall
in
scas
shlb
pop
iret
mov
hlt
jns
push
mov
xchg
mov
pop
fsts
ds
pop
add
dec
out
icebp
or
fildll
mov
lahf
in
mov
fists
mov
mov
jge
inc
or
mov
adc
mov
mov
icebp
push
mov
inc
xchg
cs
push
fucom
pushf
push
jp
out
push
sahf
lea
jns
daa
jge
sbb
int3
and
negb
inc
xchg
outsb
adc
fisubrl
pop
mov
inc
rcll
fcomp
fs
mov
repnz
dec
jo
mov
pop
xchg
push
cmpsl
ljmp
push
in
dec
xchg
push
add
mov
sub
ret
mov
xchg
mov
mov
movsl
pop
fsub
sub
fs
push
stos
call
lret
push
sub
sbb
fstpl
loopne
or
fwait
divl
mov
and
jbe
sbb
sbb
daa
popa
mov
inc
sbb
cmpsb
rol
inc
xchg
pop
sbb
addr16
stos
scas
jmp
pop
ficompl
mov
xchg
out
in
cmp
popf
repz
sub
stc
push
add
cld
sub
shrb
lret
or
lret
mov
add
push
std
lret
stos
xchg
cmc
or
and
loope
lcall
jle
cmp
pop
call
insl
outsb
xchg
inc
shrb
add
sbb
ljmp
dec
dec
sbb
inc
inc
testl
dec
pushf
mov
dec
jecxz
jo
sbb
popa
sub
mov
notl
shl
cmc
out
dec
xchg
lods
loop
out
jb
sahf
mov
aad
push
jge
fwait
stos
add
lds
jne
jle
sbb
xchg
cmp
divl
adc
mov
mov
js
lods
imul
in
scas
mov
out
testb
pusha
push
das
popf
ret
mov
adc
mov
fidivrs
int3
jae
cwtl
and
aam
out
add
sub
lock
lds
ljmp
hlt
roll
jbe
jns
xor
xchg
movsb
cmp
out
pop
adc
idivl
bound
insb
lea
add
mov
int3
mov
addr16
jg
es
sub
test
fucomi
outsb
inc
mov
adcb
xor
cs
inc
idiv
cli
dec
outsl
sbb
es
and
enter
sub
jae
in
testb
fidivl
xchg
and
fistpll
fwait
test
clc
push
stc
push
jle
leave
imul
sub
ljmp
jmp
in
pop
sub
mov
fs
inc
cmpsb
jmp
pop
addr16
int
imul
mov
sub
hlt
mov
jge
lock
insl
addr16
or
sub
and
int
adc
and
mov
jnp
sbb
mov
je
loopne
subps
in
mov
mulb
repnz
orb
js
mov
fists
xchg
testb
insl
dec
dec
fstpl
ss
mov
lcall
sbb
pop
cmp
in
cmp
shlb
sub
fldenv
cmp
mov
pushf
dec
pop
notb
add
fs
cmovp
leave
scas
sub
pop
outsb
mov
jbe
push
bound
mov
flds
sbbl
pusha
pop
das
mov
push
addr16
or
pop
lret
adc
hlt
sbb
dec
rcl
adc
add
cwtl
push
push
xchg
sub
ret
cmp
inc
scas
jp
in
jp
jne
push
test
std
enter
daa
and
cmp
test
in
jmp
js
mov
jb
fs
dec
inc
movsl
pop
or
or
mov
inc
mov
std
sbb
shll
push
jnp
frstor
jbe
cwtl
adc
push
inc
push
or
lock
je
mov
rcrb
mov
cwtl
insl
int
cmovs
and
jp
sub
arpl
jle
cmpsl
inc
xor
dec
pop
loopne
dec
mov
cmpsb
and
orl
xor
stos
sbb
pop
sbbb
insl
sbb
xchg
lods
das
adc
add
jge
jae
cmp
movb
jnp
out
cmp
decl
push
cmp
out
cld
std
addl
jl
add
sub
inc
enter
mov
stos
fwait
pusha
sbb
int3
loope
cmp
jo
inc
xchg
fs
mov
das
stos
imul
pop
jnp
mov
dec
rcll
ljmp
sbb
fsubrl
jae
into
std
call
jp
mov
mov
adc
pop
adc
ds
or
inc
jo
out
fsubl
aad
and
cmp
xchg
push
cmp
fbld
pop
and
push
sti
mov
dec
or
scas
icebp
xor
push
xchg
cs
mov
ss
lods
cs
push
add
cmp
lods
out
mov
out
testl
sub
gs
in
and
sbb
and
xchg
in
mov
xchg
jnp
mov
mov
ror
out
add
sub
adc
dec
cwtl
xor
and
mov
and
aas
jae
or
jo
mov
push
aas
jle
push
stos
roll
cmpsl
xchg
cmc
jle
int3
inc
notb
nop
push
adc
pop
stos
cmc
nop
out
xor
push
stc
sbb
cmp
ss
in
je
shll
xlat
jecxz
jne
cmpsl
fidivrl
jge
cs
les
call
or
shlb
or
jle
jge
and
xor
xchg
inc
inc
and
jns
test
sti
fs
std
and
lock
jecxz
clc
stos
hlt
pop
lods
fisttps
cmpsl
cli
inc
movsb
fadds
push
lea
and
xor
jo
jp
lea
dec
leave
fcomps
insb
stos
sub
sbb
ja
out
inc
push
mov
dec
dec
xchg
lds
insb
int
push
enter
sub
and
jl
sub
jno
daa
mov
call
or
jno
divb
xor
pop
repnz
jle
jae
daa
mov
pop
inc
or
mov
frstor
xor
xchg
loopne
mov
push
push
mov
leave
mov
dec
stos
ficomps
mov
xor
xlat
les
mov
fadds
xchg
push
notl
push
dec
movsl
popf
into
jp
imul
mov
jae
sahf
mov
ds
test
ret
insl
arpl
mov
pop
jle
out
adc
xchg
stos
fsubl
xor
and
push
sbb
adc
cmp
in
xor
fdivs
sub
jl
xchg
xchg
roll
leave
push
je
cmp
push
mov
data16
cmc
or
jb
xchg
pop
pop
ret
and
jb
sti
add
loope
nop
aad
sahf
outsb
inc
lds
mov
mov
dec
jbe
mov
cmp
lret
xor
rorb
addl
in
dec
and
out
mov
rcll
sub
mov
rcll
inc
jle
push
stc
jle
aad
ljmp
in
cmc
xor
xchg
or
ret
xchg
or
mov
cltd
les
add
test
jle
push
leave
fidivrs
icebp
or
jns
scas
mov
mov
jmp
stos
loop
or
imulb
add
popf
popf
cmp
arpl
sbb
aad
pop
in
lock
jo
xchg
ljmp
daa
pop
dec
cmp
mov
adc
push
mov
loope
lahf
push
add
push
xor
in
mov
loopne
inc
and
shl
push
sub
lock
mov
sahf
or
pop
aaa
fwait
enter
in
sete
scas
push
clc
adc
dec
mov
fdivr
jbe
out
push
cli
adc
add
xchg
frstor
out
inc
in
rcr
jnp
sub
in
xchg
mov
ret
pop
mov
cmp
inc
aad
xchg
and
adc
sub
and
xchg
popa
testl
jmp
inc
repz
cmp
dec
int
stos
scas
in
out
dec
dec
push
fs
nop
sub
adc
xchg
pop
xchg
outsb
pop
scas
jnp
mov
mov
inc
dec
xchg
sbb
inc
cs
cltd
inc
dec
cmc
movsb
fs
test
inc
js
sbb
jl
cmpsb
sbb
call
inc
ss
mov
out
es
jne
pop
cmp
outsl
fwait
and
insb
adc
inc
insb
shl
jg
int
arpl
sub
pop
mov
fisubs
sub
fwait
jge
sar
mov
ss
add
fldcw
push
inc
push
adc
mov
fadd
fsub
daa
mov
scas
jnp
xchg
inc
mov
in
mov
ja
inc
cmp
sbb
add
inc
sbb
mov
shlb
in
in
fidivrl
test
add
in
stos
negl
pop
inc
ds
or
sbb
mov
inc
lahf
cmp
mov
stc
and
or
test
mov
repnz
xchg
jns
pop
lods
int
sbb
cmp
add
jle
sub
jg
sbb
ficoml
adc
jl
aad
les
test
mov
xchg
cmp
push
js
icebp
mov
fcmovb
scas
sub
sub
xchg
ljmp
lahf
pop
stos
fsubrs
pop
pop
popa
cmp
mov
push
cmp
insl
mov
sub
xchg
cmp
test
dec
stos
je
dec
data16
pop
mov
sub
dec
shrl
fs
out
fs
adc
js
xor
sub
rolb
dec
xchg
subl
fcmove
mov
lahf
pop
icebp
mov
cs
out
jns
aam
push
sbb
cli
scas
or
arpl
jnp
mov
adc
imul
xchg
shr
xchg
es
inc
cmpsb
push
sbb
pop
jp
push
hlt
inc
mov
lahf
sbb
sbb
out
and
mov
push
inc
pop
push
dec
sbb
data16
push
lock
mov
xor
popf
insl
dec
jae
pop
popa
fisttpll
incb
not
repnz
adc
rclb
mov
xor
rcl
out
cmc
mov
repz
cmp
cwtl
pop
sbb
push
add
push
test
roll
mov
mov
or
pushf
push
rorb
movsb
add
push
rorb
jmp
jle
and
cmp
jp
in
jbe
jl
hlt
aaa
jle
push
jo
inc
dec
dec
pop
lds
jecxz
push
outsl
out
repz
xchg
lods
movsb
jbe
leave
mov
stos
inc
das
xchg
sub
add
cs
aad
pop
add
mov
sub
hlt
aas
jnp
push
sub
mov
stc
or
inc
push
lods
dec
lds
adc
xor
inc
lods
sti
fimull
mov
or
sbb
fstpt
pushf
mov
pop
or
jnp
cmpsb
jnp
mov
mov
mov
arpl
mov
xchg
inc
adc
out
cmp
shr
pushf
xor
xchg
fwait
adcl
mov
jle
cmpsl
repnz
pusha
sbb
and
leave
arpl
jg
stc
xchg
and
fwait
jnp
std
pop
mov
lcall
dec
cmp
pop
cmp
push
jg
nop
aad
loope
inc
add
subl
push
jmp
in
ds
and
mov
cmc
movsb
inc
pushf
push
jae
incb
ret
lahf
push
push
outsl
in
sti
mov
and
pusha
outsl
adc
insl
push
dec
cmp
pop
and
imul
insb
les
int
icebp
xchg
and
dec
or
repz
enter
divb
ja
or
sub
ljmp
stos
push
dec
mov
insl
inc
sti
xor
cmp
push
pop
push
dec
mov
xor
fwait
pop
fs
out
mov
mov
lahf
mov
dec
mov
rcll
cmp
imull
out
into
xor
inc
movsl
cmpsl
xchg
inc
lret
and
sub
insb
icebp
decl
imul
filds
inc
dec
pmullw
stos
lock
cmpsb
push
scas
dec
inc
nop
push
aas
icebp
xchg
sbb
push
sub
mov
enter
shl
negb
testb
leave
in
xor
mov
lods
divl
outsb
loop
mov
cmpsb
mov
mov
cltd
dec
add
out
jbe
std
shlb
pop
sahf
aam
lahf
push
add
lret
in
add
push
fcoms
scas
xor
fsub
cli
aaa
xchg
imul
sbb
pop
mov
jno
pop
aas
ds
add
xchg
jb
test
es
mov
imul
adc
pop
adc
out
outsl
jno
mov
dec
mov
jmp
mov
shrl
negb
nop
mov
and
mov
pop
mov
xor
add
mov
pop
jae
cli
ret
lret
out
pop
icebp
mov
jbe
arpl
aas
repz
out
and
xchg
cmpsb
push
mov
and
mov
jno
xlat
rorb
cmpsb
es
lds
lahf
pushl
lahf
xchg
xor
dec
jno
inc
sbb
add
pushf
jne
mov
push
cmp
cmp
andl
imul
pop
jp
pop
push
es
lret
inc
push
cli
scas
push
add
mov
call
test
js
jle
mov
mov
sahf
sahf
and
push
dec
xor
outsb
sahf
daa
rcr
inc
mov
bound
adc
ficoml
enter
dec
push
outsl
cmp
cmpsl
loop,pn
movsl
mov
movsl
pop
add
hlt
adc
roll
pop
mov
lds
std
movsb
movsb
jg
shll
dec
outsl
mov
mov
or
jp
add
push
outsb
xchg
int3
clc
ret
popf
test
imul
data16
xlat
outsl
bound
pop
jae
xor
outsl
add
out
jp
outsb
fldt
sbb
mov
or
pop
sti
push
add
mov
cs
adc
shlb
das
or
xchg
inc
int3
push
mov
fcmovnbe
cmp
jb
fidivrs
int3
adc
mov
dec
data16
pop
mov
hlt
stos
xchg
push
mov
mov
sub
lods
fdivl
bound
sub
ss
ret
popf
dec
pop
nop
sahf
xlat
popf
jge
popf
je
stos
inc
xlat
xor
xor
mov
cmc
into
and
lods
and
and
dec
mov
movsl
das
xor
xchg
cmpsl
and
pushf
outsb
push
cmp
xchg
push
xor
inc
add
or
std
lcall
inc
push
add
repz
inc
add
mov
in
inc
loope
dec
enter
je
rorl
mov
dec
or
lods
sbb
arpl
cli
nop
pop
mov
inc
pop
jb
sbb
loope
jnp
dec
sbb
fdivrl
stc
mov
add
lret
sbb
xchg
imul
sbb
inc
icebp
mov
ffree
sub
cli
xor
in
push
ljmp
jle
pushl
mov
jg
inc
xchg
mov
lcall
cmpsb
out
popf
int3
pop
fdivr
xchg
test
ljmp
gs
mov
cld
rclb
xor
mov
ss
in
jmp
repnz
int3
dec
daa
inc
insb
and
nop
sti
sub
fwait
pushf
mov
int3
xchg
mov
xor
aam
negb
mov
inc
fistps
aam
xor
gs
mov
sub
ljmp
or
push
mov
xchg
adc
xchg
xchg
cmp
jb
dec
iret
test
dec
push
fistpl
xchg
mov
or
sub
and
insl
ja
xchg
cmc
mov
and
add
jp
cltd
sbb
testl
xchg
xor
aaa
jmp
insl
fistl
mov
mov
inc
mov
add
in
mov
in
cmc
push
ret
in
loop
ja
and
inc
push
mov
shrb
out
sub
mov
mov
add
dec
js
pop
xchg
rep
test
sub
cli
out
andb
dec
jo
push
xchg
lret
orb
push
mov
push
shl
cmc
addl
mov
sub
adc
add
cmc
cmc
mov
mov
iret
inc
out
loop
fidivs
ret
push
sub
jno
or
cld
repnz
sar
sahf
inc
pusha
sbb
jmp
mov
fadds
ds
lret
popf
cmp
les
push
repnz
mov
cltd
jb
pop
sub
cmpsb
sbb
repz
ljmp
popa
dec
fisttps
roll
add
push
jmp
pop
adc
mov
and
imul
lock
push
in
or
movsb
fwait
sub
pop
xchg
aas
ret
in
adc
scas
cwtl
mov
test
mov
jne
sbb
dec
call
add
inc
cmpsb
js
insl
lea
inc
lret
popa
addb
jecxz
jl
inc
inc
mov
dec
pop
inc
insb
out
inc
mov
pop
inc
mov
je
jecxz
mov
addb
test
imulb
cmp
adc
and
add
lock
mov
mov
cwtl
push
sarb
cs
pop
pop
xor
cmpsl
push
clflush
popa
mov
gs
sahf
mov
negb
adc
pop
lret
xor
cmp
mov
pop
aam
cmpsb
and
xchg
cmp
js
test
sbb
mov
xchg
cs
jo
mov
mov
hlt
xchg
mov
jne
leave
aaa
xor
xchg
add
imul
mov
negb
outsl
cmp
jle
xchg
icebp
iret
or
push
pop
leave
push
int3
out
sbb
shl
push
fidivl
push
cmp
cli
add
iret
jg
or
loop
ja
cld
inc
ljmp
xchg
push
call
movsb
repz
aaa
inc
push
rolb
rcr
mov
outsb
sub
imul
push
cmc
insb
adc
aad
sbb
dec
dec
pop
aaa
add
fisubl
daa
repz
int
and
or
loopne
dec
push
pop
in
in
stos
std
jmp
dec
inc
add
push
loope
sbb
ret
orb
jb
inc
inc
inc
ja
dec
mov
fildl
dec
stos
icebp
mov
mov
cmpsl
push
xor
add
dec
fdivrs
into
fcmovnu
divl
mov
sbb
cs
negl
mov
jbe
mov
das
or
and
xor
arpl
out
mov
dec
imul
pop
xchg
sub
mov
imul
out
into
jg
jmp
inc
pop
xchg
pop
add
je
xchg
sbb
or
fdivrs
mov
clc
or
mov
xchg
jle
or
out
xchg
sti
popf
in
call
push
add
xor
repz
add
lahf
stos
mov
sub
jecxz
and
addr16
push
scas
push
out
into
mov
lock
movsl
mov
jae
pop
call
and
mov
ds
or
out
jns
jp
jb
xchg
in
add
and
cmp
mov
lret
cmpsl
insl
sub
movsl
in
dec
mov
int3
cmpsb
dec
leave
or
add
fiaddl
xlat
xor
xchg
aas
outsb
push
push
mov
xchg
shl
and
ss
dec
test
imul
or
ja
lock
mov
icebp
hlt
xchg
or
fmuls
decb
or
pop
xorl
adc
aam
hlt
in
pop
movsb
and
lcall
inc
xchg
xor
and
cld
cmpl
xchg
jb
pop
je
popf
dec
loopne
notb
je
dec
push
lcall
mov
xchg
push
stc
lret
faddp
mov
mov
inc
mov
jge
mov
iret
inc
inc
shlb
movsb
xchg
adc
scas
into
les
outsl
sub
pusha
sbb
outsl
ret
cs
push
push
pop
push
mov
mov
mov
xor
xor
jnp
aas
out
mov
fsubs
or
pop
fstl
adc
or
fdivr
add
fdivrp
inc
lret
roll
xchg
dec
in
nop
popf
and
in
mov
and
xor
filds
clc
int
dec
iret
jmp
sbb
mov
dec
adc
dec
out
xchg
clc
push
sahf
fisttpl
xchg
pop
push
stos
cwtl
sbb
int
xchg
mov
jnp
pop
xchg
jmp
cmpsl
mul
jmp
adc
scas
cld
xor
cli
or
jnp
clc
cmp
push
sbb
repnz
xchg
pop
pop
cmp
test
push
mov
ret
sbbb
push
into
jecxz
sbb
std
push
sbb
ja
dec
add
pop
loop
mov
cmp
xchg
and
aas
jl
cli
pop
pop
xchg
xor
mov
adc
in
lcall
mov
cmp
lock
out
add
cmc
push
mov
xchg
xor
bound
sub
out
push
stos
xchg
mov
js
clc
mov
fwait
repz
adc
loope
fdivl
pop
outsb
in
fwait
outsb
into
imul
fisubrl
insl
add
sti
ret
mov
mov
dec
pop
sbb
mov
pushf
xor
scas
adc
mov
inc
sub
arpl
or
jno
add
pop
test
jg
fwait
add
cmpb
add
pop
sub
add
push
add
fsubr
shrb
jg
idivl
cmp
je
add
nop
mov
sub
mov
shr
push
sarb
cmp
mov
cmpsb
cs
cmpb
cmp
push
aas
mov
das
jp
mov
enter
adcb
xor
and
mov
faddl
in
call
sub
outsl
cmp
xchg
ljmp
call
push
lea
stos
aad
repnz
mov
clc
imul
push
mov
mov
insl
shll
aam
jle
adc
and
mov
cmp
adc
sbb
mov
popa
sti
loop
lods
sub
adcb
sub
jb
cwtl
ret
fstpl
mov
paddw
insb
arpl
sub
stos
pushf
mov
add
jne
js
out
and
and
sbb
sahf
xor
rorl
sub
jle
mov
sbb
xchg
enter
and
cmpsb
mov
mov
fwait
push
mov
fucom
mov
arpl
lods
mov
ljmp
pop
mov
in
test
mov
popf
xchg
je
bound
rcrl
dec
pop
cwtl
clc
add
stc
pop
daa
cmp
mov
pop
std
inc
jle
inc
adc
or
int
ds
inc
cli
push
cld
dec
push
sarb
dec
sbb
cmpsb
cld
push
sahf
push
inc
std
and
jb
push
xchg
sub
not
aas
in
xor
dec
mov
dec
aam
xchg
adc
arpl
dec
mov
out
or
mov
push
xor
int3
rorb
into
mov
sbb
hlt
xchg
test
push
fcomps
pop
xor
dec
pop
inc
fsubl
stos
pushf
hlt
loopne
mov
xchg
push
xchg
scas
insb
in
add
add
cmpsb
in
movsb
add
sti
int
lds
mov
push
clc
scas
jle
dec
rolb
jne
pop
jno
mov
add
ret
cwtl
jmp
inc
xchg
and
mov
stos
and
push
push
cmp
gs
cmp
mov
stc
sbb
out
bound
icebp
pop
rorl
ja
popf
push
jp
sub
fldenv
mov
add
mov
int3
mov
fstpl
rcl
mov
aaa
jg
repz
jae
sbb
push
push
jns
xor
ja
cmpsb
mov
sti
das
call
enter
test
cmp
xor
sbb
lods
mov
xchg
movsb
aad
inc
xchg
pop
inc
test
dec
xchg
fidivl
push
mov
mov
mov
clc
fisubl
sbb
mov
sub
ret
pop
dec
push
pop
in
hlt
sbb
inc
mov
cmpsb
movsl
mov
in
jnp
js
pop
or
pop
cmpsb
adc
add
adc
or
push
ss
adc
or
mov
mov
arpl
ret
cmp
incb
push
aam
push
sub
repnz
xchg
cmp
out
addr16
cmp
movsl
mov
push
mov
outsb
jp
pop
jp
test
xor
cmp
lret
sbb
mov
add
dec
cmp
or
les
data16
xor
test
ficomps
pop
pop
dec
pop
dec
iret
outsl
icebp
pop
lret
xchg
aad
dec
and
push
movsb
xchg
test
jl
loope
and
sbb
dec
push
dec
iret
dec
lods
push
ffree
xor
je
pop
and
push
mov
lea
xor
sub
fistl
xor
adc
or
mov
fnstenv
xor
cli
mov
sub
gs
movsb
or
push
in
push
mov
push
xchg
jmp
jle
rclb
sti
add
test
jmp
cmove
je
inc
cmpsl
sbb
mov
lea
jecxz
cmp
enter
loope
lcall
lds
pop
dec
ljmp
xchg
rcll
icebp
subl
jge
clc
lret
mov
push
jecxz
cwtl
add
cmp
lods
or
rcr
xchg
out
fmul
loope
mov
xchg
sub
in
jge
jge
xchg
fwait
daa
mov
pushf
mov
stc
xchg
mov
jl
jbe
adc
ljmp
iret
loopne
pop
xchg
addb
cmpl
push
adc
mov
scas
push
shlb
int3
aad
jne
mov
push
mov
cvtpi2ps
sbb
movsb
std
push
inc
mov
cmp
mov
dec
jb
scas
jns
adc
xchg
nop
jbe
sub
mov
gs
shr
or
sub
sbb
pop
into
cmp
dec
sti
mov
pop
lcall
les
aam
mov
sub
pop
xchg
fdivl
inc
cmp
loopne
movsl
dec
jg
js
or
mov
pop
sbb
lea
insb
aam
mov
dec
push
add
push
or
push
push
clc
or
and
or
pop
or
mov
push
popa
gs
and
xor
mov
xlat
outsl
mov
xor
dec
test
bound
cmc
clc
push
xor
outsl
std
scas
mov
pop
push
jp
out
mov
xor
cmp
cmc
pop
sbb
in
ret
aas
shl
cmc
xor
mov
jg
push
int3
pop
dec
orl
or
cli
fstpl
roll
dec
xchg
ds
in
int3
push
aas
leave
push
imul
test
cmp
jmp
in
pop
outsl
fs
cmc
movsb
jbe
mov
dec
les
fildll
jmp
xchg
add
outsl
in
sbb
les
pop
and
add
aam
sub
in
rclb
imul
mov
ljmp
in
notl
insb
xchg
lods
std
xchg
and
jge
pusha
movsl
jns
das
inc
gs
scas
cmp
sub
stos
pushf
sahf
lcall
popf
mov
cmp
popa
clc
sbb
dec
shll
mov
outsl
mov
mov
jno
cmp
scas
push
test
jb
pop
rcrl
adc
ret
lret
lahf
ds
cld
mov
sub
fisubl
sbb
pop
and
push
lds
rol
mov
les
repnz
and
xchg
stc
xor
inc
lea
xchg
gs
push
jle
mov
movsb
push
sahf
add
mov
andl
adc
dec
jbe
mov
sbb
and
imul
iret
popa
dec
push
push
scas
mov
insl
push
pop
mov
std
and
xchg
loope
inc
lock
mov
outsl
mov
arpl
or
cmp
adc
mov
or
push
pop
jb
add
lret
mov
sbb
and
icebp
loopne
dec
xorl
mov
pop
pusha
mov
sub
mov
mov
das
test
mov
mov
pop
jno
push
popa
cmc
push
outsb
ss
popf
pop
dec
xchg
dec
xor
xor
fsubr
insb
xchg
mov
repz
movsl
and
les
push
pushf
pop
or
cltd
insl
xchg
sub
loop
sbb
and
iret
sbb
stc
je
mov
fsts
ret
gs
jg
sub
pop
and
ja
lods
pusha
mov
je
adc
adc
mov
xchg
jle,pt
aad
dec
rolb
and
ret
pop
fs
scas
push
test
popl
xchg
enter
inc
mov
push
adc
testl
push
push
ljmp
sti
pop
ja
cmpsl
sub
sub
add
inc
mov
or
rorb
fidivrl
cltd
sbb
adc
popa
sub
mov
lret
in
pop
xchg
mov
inc
mov
data16
ficomps
out
pusha
sbb
jae
mov
jp
and
pop
mov
mov
shll
push
mov
xlat
inc
inc
clc
pop
imul
aaa
xor
insl
in
iret
loop
cwtl
jb
pop
push
sbb
scas
out
stos
std
cmp
leave
xchg
int
mov
adc
outsl
sbb
jle
sti
or
clc
and
loopne
je
mov
dec
ret
test
inc
ret
and
cld
add
aaa
mov
dec
sbb
jbe
outsb
hlt
int3
inc
jno
adcb
sbb
and
adc
dec
mov
pusha
xchg
cs
mov
dec
xchg
inc
lret
and
and
in
sub
incb
cli
fmuls
out
lea
dec
scas
jecxz
sub
sub
jecxz
or
sub
jo
lret
out
dec
cmpsl
xchg
outsb
and
test
loop
sahf
xor
inc
xor
pop
icebp
inc
loopne
sub
inc
push
mov
xchg
push
jg
push
leave
xchg
loopne
xor
xlat
hlt
jecxz
int
js
jbe
sbb
cmpsb
imul
popf
pop
pusha
aad
cli
jo
cmc
fisubs
sbb
inc
stc
insb
push
xchg
mov
pop
cmp
bound
xlat
fcomp
cmpsl
jmp
and
push
add
lcall
roll
mov
adc
sbb
in
inc
cwtl
pop
dec
cmp
test
mov
outsb
popa
cmpsb
in
cmp
dec
loope
mov
stc
jg
loope
in
lds
sub
loopw
das
sub
cmp
or
aas
in
mov
addl
xlat
xchg
jge
sub
dec
mov
dec
sub
fwait
push
dec
sub
fwait
jle
cltd
adcl
dec
movsb
jbe
ret
movsb
repnz
cmp
cmp
aaa
out
xor
test
lock
xor
xor
iret
jl
sarl
push
sub
insl
and
or
ljmp
xorl
es
cmp
lcall
mov
pop
sub
sbb
or
mov
and
adc
mov
repz
pop
and
lods
xchg
jnp
fidivrl
imul
stos
jl
or
mov
mov
test
add
outsb
xchg
sbb
loope
pop
jnp
je
pop
mov
imul
insl
add
and
mov
pop
add
sbb
shrb
push
jno
and
stc
cld
data16
mov
es
mov
call
icebp
jle
hlt
adc
orl
int
insb
scas
pop
cwtl
jmp
xchg
into
pop
out
bound
mov
adc
mov
es
adc
or
mov
rorb
stc
fisttps
mov
neg
jb
xchg
dec
clc
pop
xor
lds
lret
repnz
xchg
push
outsl
mov
mov
in
mov
xlat
cmp
fmuls
ss
mov
add
mov
sahf
pop
xchg
sahf
and
shrb
or
pop
jb
shl
mov
xorl
popa
pop
pop
and
xlat
mov
dec
or
imul
dec
cli
loopne
mov
cwtl
call
pop
mov
xchg
dec
add
out
repnz
movsl
mov
ret
adc
cmpsl
popa
pop
out
xor
aam
mov
data16
jo
mov
or
adc
xorl
xchg
shlb
in
cmc
out
and
jl
mov
out
lahf
gs
sbb
aas
nop
cmp
jmp
xchg
lock
dec
mov
pop
xor
filds
ret
aam
aas
jl
add
movsb
in
pop
and
inc
push
outsl
sbb
mov
mov
testl
pop
dec
cmp
add
cmc
repz
ret
ret
imul
xchg
stc
lods
and
jbe
jno
and
shl
cmpsb
push
xchg
stos
adc
enter
mov
pop
jno
mov
mov
pop
jle
xor
sahf
mov
push
aas
xchg
dec
add
xor
dec
icebp
push
inc
sbb
subl
xchg
inc
inc
sub
cmp
inc
jecxz
cmp
pop
sbb
mov
add
or
pushf
fstl
ja
outsb
sbb
mov
lret
cmp
adc
jp
xor
inc
sub
dec
add
dec
jo
icebp
movsb
jmp
sbb
mov
lret
jae
imul
pushfw
xor
incb
enter
or
mov
inc
shll
add
mov
or
orb
and
xchg
adc
mov
mov
fildl
jl
pop
test
pop
scas
cld
nop
push
jmp
lods
push
std
add
pop
sahf
divl
decb
fimull
and
mov
sti
xchg
aad
int3
je
adc
sub
mov
sub
cmp
cmc
repnz
cltd
imul
jns
push
mov
loopne
jg
scas
mov
mov
rcll
pop
leave
cmp
ret
push
adc
shlb
inc
popf
pusha
aas
insb
mov
das
les
mov
or
in
inc
push
push
test
jo
fcomi
lret
push
in
pop
jge
mov
pop
xchg
out
add
pop
lds
fdivl
jge
and
xchg
lea
jl
dec
daa
repnz
dec
pop
dec
lret
sub
add
mov
enter
xchg
and
lods
outsb
cmp
out
popf
mov
jnp
pop
pop
test
xchg
and
or
cmp
cltd
nop
jg
arpl
dec
dec
ret
mov
push
cmp
xchg
and
daa
adcb
repz
pusha
mov
nop
repz
arpl
cmpsl
sub
adc
out
push
add
mov
mov
sbb
or
rolb
pop
inc
sbb
dec
push
cltd
xor
push
cmp
xchg
ret
mov
adc
inc
jo
pop
xor
sub
sub
movsl
inc
adc
cmp
dec
xchg
pop
int
pop
adc
sub
fcomps
shll
out
fildl
mov
lods
in
jo
test
sub
inc
mov
outsb
and
push
cwtl
inc
sub
pop
ds
dec
adc
pop
jbe
loopne
mov
jnp,pn
cmpsb
pushf
pop
pop
lods
lods
and
sub
xchg
pop
mov
in
dec
mov
dec
notb
ret
mov
push
into
add
clc
fbstp
stos
andb
lods
bound
adc
loopne
shrb
addb
stos
addr16
sbb
rolb
shlb
lcall
sbbl
xor
push
dec
rolb
xlat
sbb
push
push
je
add
inc
and
sbb
out
call
cmp
or
addr16
xchg
clc
int3
adc
ja
call
sbb
loope
icebp
mov
sbb
xchg
jge
adc
xchg
jne
add
call
mov
repnz
pop
aad
mov
xchg
push
jb
jnp
jge
aad
aam
xchg
sub
add
cld
movsb
inc
push
dec
pushf
movsb
movsb
mov
inc
inc
add
inc
mov
popa
push
xor
cmpsb
inc
out
inc
imul
pop
stos
loopne
shlb
sub
xchg
mov
pop
xlat
mov
call
xchg
push
mov
jge
lods
shll
ss
cmp
sub
cmp
fimuls
xchg
fldt
mov
scas
loope
dec
rorb
jge
movsb
mov
cmpsb
stos
inc
lock
mov
sar
daa
and
cmp
mov
insl
in
inc
loope
xor
mov
or
inc
fsts
stos
daa
pop
or
and
popa
leave
clc
clc
inc
sub
xchg
out
std
sub
cmp
sbb
outsl
sbb
fildll
push
mov
js
stos
xchg
sbb
in
dec
mov
fcomps
sbb
jge
xchg
jbe
mov
jae
jne
loop
pop
hlt
jne
mov
jb
push
xchg
mov
and
lods
insb
sbb
in
in
mov
xchg
orl
je
xchg
pop
mov
pop
jmp
cwtl
adc
mov
lods
pop
cmp
and
out
stos
das
loopne
xor
clc
mov
pop
ss
lods
push
and
jge
daa
mov
mov
aad
sub
dec
shll
dec
xchg
cltd
jns
stc
mov
fcmovnbe
cmp
fmul
mov
mov
mov
stos
pop
push
dec
cwtl
lea
je
mov
push
fdivl
mov
jmp
xchg
jae
add
mov
es
adc
add
sbb
out
dec
add
jmp
sbb
xchg
mov
mov
out
adc
jae
lods
and
icebp
xor
cmovl
add
inc
shll
add
inc
xor
iret
iret
pop
mov
out
sbb
push
add
jno
sbb
lock
into
xchg
movsb
pop
loope
sub
mov
in
imul
lea
dec
movnti
jp
loop
inc
insb
loop
or
xor
and
jb
aad
loope
in
cmpsb
jmp
sub
or
mov
cmp
cwtl
lods
push
les
out
imul
lea
pushf
femms
xchg
or
push
inc
jns
jb
mov
xchg
add
loope
mov
icebp
hlt
add
sarl
into
addr16
sbb
xchg
jns
enter
jns
and
shrl
jmp
or
cmp
sbb
daa
cmp
or
sub
mov
pop
mov
jbe
sbb
lahf
dec
inc
push
add
stos
pusha
dec
das
xor
loope
sbb
enter
loope
pop
mov
push
adc
loope
ror
mov
add
cmp
int
ret
fsubs
cmp
adc
imul
sbb
xchg
cld
jmp
adc
cmp
fists
dec
lock
cmpsb
mov
ja
pop
sbb
cmc
dec
arpl
ljmp
push
popa
jg
scas
test
aam
and
std
pop
mov
cmp
ja
jb
add
movsbl
repnz
lcall
lds
sti
dec
or
testb
push
mov
andb
fiadds
stos
pop
clc
jl
movsl
movsl
cli
jb
pop
pusha
frstor
cwtl
push
scas
leave
js
in
test
aam
mov
shlb
inc
aas
mov
dec
mov
cmp
nop
nop
cltd
pushf
sbb
enter
dec
jne
mov
mov
inc
dec
cmpl
in
mov
pmaxub
lea
sub
in
add
cmp
and
mov
pop
pop
inc
int3
sub
add
int3
sub
lret
jle
mov
and
fwait
mov
leave
sub
push
push
cmp
mov
lods
mov
insb
shlb
data16
in
xor
pop
xchg
mov
sbbb
cmp
addl
pop
repnz
loope
dec
addl
mov
in
mov
movsb
cmpsl
sahf
xor
jecxz
xchg
lahf
or
sbb
enter
ret
mov
pop
ret
xor
fisubs
js
xor
out
ja
pop
lods
out
mov
mov
incb
mov
xor
lods
ds
xor
je
test
test
bound
xor
add
jmp
and
fisttpll
imul
outsl
das
popa
outsl
lret
inc
shl
ljmp
jmp
jp
jno
fimull
xor
insb
dec
xlat
cmc
xchg
insb
pop
les
movsb
jge
enter
ret
fistpll
xchg
pushf
aam
jno
and
loope
insb
stos
test
in
test
adc
add
sbb
sahf
cwtl
or
adc
mov
iret
adc
sub
add
sahf
and
das
or
inc
mov
cld
lahf
pop
push
xchg
xchg
lahf
loopne
or
stos
aas
aas
pop
aad
xchg
lea
xchg
xchg
xchg
push
test
outsl
cmpsb
int3
xor
jnp
pushf
jle
mov
pop
pop
mov
out
mov
add
cmpsb
jno
icebp
xor
fwait
test
iret
inc
pusha
jo
push
fisubrs
push
imulb
jb
scas
inc
cmp
or
mov
mov
push
cmp
mov
ficoms
into
xchg
rcr
xor
ja
pop
pop
ret
xor
dec
mov
fstpl
sub
es
lods
and
cmp
fistpl
dec
jb
imul
push
cmp
popa
insb
movsl
sbb
adc
mov
shll
pop
mov
sub
fsubrl
inc
out
xchg
cwtl
xor
ds
sub
inc
inc
jecxz
add
leave
out
lret
pop
cli
imul
add
pop
stc
out
and
bound
jge
dec
and
jle
pop
jle
setge
sbb
xor
outsb
rcll
jl
push
cmpl
jne
js
aad
xchg
inc
xor
inc
mov
add
cmp
lea
mov
inc
int
xor
dec
aad
cld
pop
lock
xor
loope
sub
cmp
mov
sbb
sbb
and
push
adc
mov
out
jns
mov
test
dec
stos
cmp
aas
push
out
popf
icebp
fdivrp
ja
popf
sbb
out
mull
pusha
inc
push
pop
test
rorb
test
inc
ror
popf
sub
loop
sahf
insl
pop
mov
mov
int
inc
mov
mov
jno
test
push
mov
push
jg
push
leave
mov
inc
popf
mov
into
fwait
rol
jb
jne
cmp
adc
xor
enter
mov
mov
repnz
jmp
push
mov
xchg
fbld
xchg
xchg
cmpsb
iret
test
adc
repnz
jb
xor
push
ja
jp
xchg
jle
add
cmp
scas
pop
mov
fsubl
in
into
push
mov
cmc
fistpll
and
orl
push
cwtl
xor
push
inc
cmpsl
mov
fwait
movsb
xor
dec
mov
sbb
lret
jno
sbb
jl
rclb
imul
and
mov
jno
jbe
cmpl
dec
mov
pop
out
aaa
add
and
add
jbe
push
and
push
push
mov
inc
jne
dec
mov
push
dec
jnp
jmp
cmp
cmpsb
aas
xchg
incb
es
outsb
pop
pop
lahf
ja
out
dec
push
fwait
ret
jle
aaa
shl
inc
mov
ljmp
cmp
and
add
xor
xchg
sub
push
sbb
into
sbbb
repz
clc
scas
push
loope
jne
or
push
mov
faddl
ja
movb
fsubs
pop
daa
test
scas
pusha
jg
scas
add
out
inc
sbbb
repnz
dec
cmovb
sub
push
cmp
repz
scas
mov
in
aam
mov
lahf
pop
sub
sub
es
fisttpll
repnz
movsl
lods
loop
push
or
inc
aad
sarb
mov
inc
jae
sub
jecxz
mov
stc
sub
negl
mov
pop
aas
out
or
loop
popa
inc
adc
dec
lret
ss
leave
xchg
mov
mov
les
std
adc
es
daa
push
int
in
xor
cmp
adc
popf
or
push
daa
negb
mov
pop
push
xchg
cmpsl
lods
or
movl
arpl
mov
repz
xor
push
mov
mov
xlat
xchg
lods
cmc
out
outsb
xor
sbb
cmpsl
sub
roll
dec
dec
push
xor
ds
mov
xchg
int3
xchg
adc
pop
jg
add
movl
xchg
mov
mov
fwait
imul
ja
cmp
cmpsl
push
das
xchg
mov
jno
xchg
jns
ret
pop
js
stos
inc
in
ja
adc
ja
pop
js
movsb
mov
add
cwtl
ret
fs
push
test
dec
outsb
xchg
sti
ficoms
cmp
rclb
or
xchg
fs
mov
filds
mov
inc
push
hlt
xor
into
mov
push
nop
push
fadds
cmp
out
push
mov
divl
in
add
scas
mov
pop
out
inc
push
sti
lret
mov
loope
mov
int
jbe
inc
fdivrl
outsl
outsl
std
mov
ret
leave
push
dec
mov
lret
add
out
out
addr16
sbb
ja
pop
out
and
pusha
sub
ja
leave
sti
mov
xlat
jle
repnz
in
jbe
cli
jle
cwtl
out
rclb
faddl
and
ss
dec
mov
push
les
push
sahf
jbe
sbb
mov
in
pop
adc
mov
pop
adc
sbb
popa
icebp
ret
dec
mov
jae
and
mov
jo
cmpsb
icebp
jb
sub
inc
push
out
xor
cmp
jecxz
push
add
jl
mov
xchg
bound
inc
push
cltd
adc
outsb
mov
out
decl
rolb
jne
into
add
test
xor
mov
std
mov
mov
mov
aas
cvttps2pi
repz
out
in
add
mov
pop
leave
cmp
test
push
shll
push
cmc
loope
enter
std
rep
out
ja
fwait
jecxz
push
icebp
out
mov
sub
sahf
lret
and
outsb
cli
call
pop
cmpb
sbb
mov
mov
leave
loopne
mov
addr16
push
rorb
mov
sarl
fsub
cmp
repz
ss
cwtl
cmp
repz
mov
adc
mov
pop
mov
stc
test
shrl
and
inc
lahf
jge
adc
or
shrl
or
mov
test
jmp
sahf
push
icebp
jb
cmpsb
mov
fidivl
mov
out
aaa
cmp
mov
nop
mov
and
xchg
pop
dec
les
adc
add
dec
pop
inc
pop
or
push
xlat
hlt
sub
or
cli
cld
in
xchg
xchg
lods
inc
pop
out
mov
jb
rcrb
ss
fistl
xchg
jne
jp
repz
std
sbb
pop
pop
imul
repz
mov
pop
les
dec
ljmp
out
or
in
movsl
call
inc
movsl
sbb
das
je
add
jbe
es
xchg
int3
mov
mov
jb
vmwrite
pop
das
mov
sbb
pop
cs
in
sbb
xchg
xchg
xor
fwait
test
add
bnd
sub
ds
mov
out
sub
fnstenv
push
int
mov
lods
stos
mov
stos
xor
je
adcl
xchg
mov
inc
mov
sub
lds
int
fwait
mov
sbb
jmp
cli
pop
jbe
jo
push
cwtl
xchg
lods
push
inc
push
jne
adc
xor
es
in
test
xor
lds
add
add
popa
bound
add
sbb
icebp
movsl
clc
dec
test
das
sub
inc
popf
addr16
int3
dec
shlb
sbb
adc
pop
adc
repnz
pop
xchg
or
or
dec
ret
shrl
add
xchg
and
lock
jle
testb
jecxz
adc
mov
and
adcb
pop
in
call
cltd
xchg
or
ja
lcall
adc
fists
and
jg
mov
adc
dec
jmp
jg
mov
dec
sub
sbbb
mov
std
pusha
scas
movsb
int
xor
mov
pop
in
fisubrs
inc
xchg
inc
cmp
xor
pop
pop
and
cmpb
pop
pop
push
pushf
cld
jbe
rorl
roll
je
xchg
into
mov
jl
xchg
lcall
sbb
jg
push
push
arpl
and
dec
fprem
shr
push
jne
mov
dec
addb
popa
mov
loop
es
outsl
cmpsb
fmull
sub
adc
cmp
add
div
add
jb
push
mov
and
out
adc
push
mov
call
push
xchg
das
push
lret
test
addr16
andl
mov
and
inc
push
mov
pop
mov
jg
jb
insb
movsb
adc
std
jb
mov
xchg
icebp
mov
cmp
mov
sbbl
jne
mov
mov
mov
and
loope
test
lea
jmp
sbb
test
in
in
fsts
and
fwait
aaa
mov
dec
shll
xchg
aas
shlb
cs
push
mov
mov
mov
int
dec
ret
and
xchg
ljmp
mov
jbe
mov
xorb
push
icebp
mov
movsl
shl
mull
inc
mov
leave
mov
sbb
sub
mov
aam
in
hlt
cmp
int3
leavew
sarl
sahf
cmp
cmp
adcb
loopne
mov
cmp
push
outsl
adcb
sub
adc
jge
and
pop
daa
mov
or
adc
outsl
xor
rcl
jmp
jb
not
xor
roll
ljmp
add
shll
and
imul
add
xchg
rcrb
icebp
js
ljmp
jl
jnp
dec
int3
mov
xor
cmpsb
cmp
mov
scas
xor
rolb
sahf
adc
and
adcb
dec
xchg
jo
xor
xor
inc
pop
stc
sbb
adc
mov
ret
movsb
fnstsw
push
into
and
and
sub
les
in
aam
jle
xor
push
cmpsl
pop
and
cltd
into
aaa
mov
addr16
ja
insb
idiv
loop
pop
into
repnz
movsb
dec
cli
fwait
lret
dec
js
gs
lea
mov
movsl
sbb
out
lds
mov
mov
cmp
fiaddl
fsubrp
jle
xchg
movsl
sbb
in
inc
mov
shl
mov
lret
aad
cli
or
scas
adc
gs
and
scas
add
jae
xchg
movsl
and
mov
jb
jge
in
adc
repnz
lods
dec
pop
adc
push
lret
pop
and
adc
xchg
or
or
inc
in
cmc
xor
lock
sub
ret
dec
aas
cwtl
bound
nop
stc
pop
loope
push
cmc
das
add
mov
icebp
mov
mov
fldl
icebp
xchg
adc
push
lea
daa
in
push
fstpt
push
shll
je
add
mov
xlat
xor
jle
jecxz
mov
xor
sub
or
mov
aam
out
mov
outsb
mov
pop
mov
loopne
mov
mov
xchg
addr16
std
add
jl
pop
lahf
cltd
xor
xrelease
sub
pop
jecxz
mov
jecxz
mov
stc
imul
and
xlat
jae
test
jge
or
xor
out
aaa
icebp
pushf
les
dec
test
dec
pop
aam
imul
or
adc
sub
lahf
jl
mov
mov
popf
aam
mov
pop
cltd
outsb
pop
mov
lcall
push
fildll
mov
sub
popa
ss
pop
mov
loope
loope
out
and
int3
nop
push
nop
sbb
std
lds
mov
mov
adc
pop
mov
stos
cmp
outsl
cmp
xlat
mov
jbe
ja
ss
inc
or
mov
out
mov
and
jp
dec
adc
or
xor
dec
xor
dec
gs
pusha
xor
das
add
popf
int3
imul
mov
movsb
push
lret
dec
jl
and
mov
mov
jle
xor
mov
cmc
adc
mov
leave
or
shll
gs
jp
popa
jmp
cmc
aad
or
data16
divl
cmp
and
dec
jnp
mov
aam
xor
out
xchg
mov
stos
sbb
addr16
inc
sbb
shrb
stc
and
bound
repnz
hlt
inc
mov
push
xchg
mov
sub
xor
pop
xchg
shr
jg
out
or
mov
shlb
les
js
sub
jl
test
popa
xchg
imul
loop,pt
in
cmpsl
push
nop
icebp
xchg
xchg
in
testw
pop
aam
push
lcallw
sbb
arpl
scas
pop
xor
cmpsl
xchg
imulb
xchg
hlt
add
dec
ss
push
xor
or
outsb
rorl
ret
je
xchg
mull
xchg
dec
dec
adc
mov
lods
lcall
lea
xchg
clts
mov
jecxz
or
das
jl
pop
sbb
stc
inc
bnd
dec
xchg
jnp
fbstp
leave
lret
inc
xchg
shll
orb
sahf
inc
cltd
fsub
jp
mov
mov
popf
fbstp
imul
rorl
jbe
bound
shrb
cmp
loop
hlt
jmp
or
inc
movsb
ss
ds
xchg
adc
mov
lret
add
dec
adc
dec
inc
cmp
popa
sbb
xchg
sbb
add
mov
repz
mov
iret
decb
in
xor
inc
add
cmp
test
or
outsl
stos
and
jmp
data16
fs
ret
xor
test
leave
mov
or
aam
movntq
cmc
sti
outsb
xor
lock
push
pop
stos
addb
lods
dec
cltd
in
pop
inc
scas
loop
mov
cmpsl
jae
rep
sbb
cmp
cwtl
inc
aaa
std
add
ret
insb
push
ljmp
jo
or
xchg
adc
fdivrs
mov
sub
push
and
ja
and
inc
lcall
imul
fstps
les
fs
dec
jecxz
shlb
mov
inc
cmp
ljmp
stos
aaa
push
fwait
pop
jecxz,pn
and
sbb
mov
mov
mov
pop
or
jnp
popf
adc
loope
pop
fcomps
psubusw
fcom
xchg
sbb
sbb
jl
cmp
test
test
sbbb
fs
add
adc
cmp
stos
jmp
imull
xchg
inc
cld
and
push
push
inc
stos
add
jmp
test
imul
cmp
xchg
cltd
arpl
push
xchg
ret
aam
sbb
mov
int
and
fstpt
dec
test
sub
rorb
scas
decl
sub
add
pop
inc
add
cli
mov
sbb
in
fisubrl
xor
fisttpll
inc
push
in
adc
jns
mov
stc
inc
es
pop
add
rorb
leave
or
push
ret
mov
imul
in
mov
stos
cmp
dec
dec
scas
cmp
sarb
ljmp
xorl
add
xlat
jle
stos
add
adc
mov
and
xor
daa
movsl
les
cli
xchg
xor
xor
repz
pop
lock
sbb
mov
fdivl
jmp
jle
xchg
sbb
sbbb
sarb
sbb
push
mov
lret
lea
out
aas
cmc
mov
add
insl
xor
jae
pop
test
popf
inc
inc
pop
ret
clc
xor
loopne
ror
cmp
outsl
mov
nop
sub
or
stos
js
mov
popf
mov
cwtl
cmpsb
popf
int
xor
jbe
outsl
add
pop
cwtl
mov
and
mov
enter
lahf
inc
add
jb
call
sbb
jl
mov
xchg
stc
mov
mov
add
pop
shll
mov
inc
add
jge
fildl
scas
pop
and
mov
outsl
pop
orb
cld
leave
sbb
wrmsr
dec
rcll
shll
mov
arpl
sub
push
add
inc
les
jns
pop
xor
mov
into
adc
pop
iret
sub
lock
jns
and
push
xorl
cmp
fidivl
mov
stc
add
lock
or
add
mov
adc
mov
jle
in
std
test
inc
cmpsl
inc
int3
mov
mov
mov
nop
push
sub
mov
xchg
mov
adc
xchg
add
push
push
cmp
insl
pop
mov
xchg
mov
adc
inc
in
sbb
push
sub
xchg
pop
arpl
dec
imul
repnz
cwtl
aas
clc
or
mov
pusha
jecxz
enter
push
rorl
dec
cmp
jnp
xchg
mov
inc
in
jb
fisttpll
gs
fisubrs
dec
movsl
jnp
adc
imul
gs
and
stc
jb
call
or
out
enter
or
mov
xchg
test
xchg
mov
pop
pop
fldt
divb
call
pop
ret
ret
arpl
leave
daa
pop
out
rorl
and
faddl
sbb
sub
or
inc
xchg
push
jp
adc
ss
pop
or
mov
iret
push
lods
mov
outsb
pop
outsb
sahf
jl
xchg
inc
mov
pop
ret
insl
sub
jo
into
adc
cmp
inc
sbb
push
jbe
sarb
shrl
test
mov
push
mov
cmp
lods
fbld
jbe
or
fldl
adc
in
cltd
mov
loope
dec
das
shrb
push
xchg
push
scas
xchg
dec
dec
movsb
cli
test
add
or
adc
mov
sbb
lods
scas
fcmovb
and
lods
lods
leave
dec
cli
cltd
push
or
dec
pop
inc
pop
sub
int3
insb
sbb
mov
jnp
jb
test
call
pushf
jge
cmp
movsb
pop
add
frstor
xchg
sub
outsl
mov
push
xchg
add
int3
int
sti
movsl
inc
in
loop
sbb
or
push
je
pop
mov
call
rcl
xchg
cli
xchg
xor
icebp
lret
in
adc
fisttps
sub
lds
das
jge
jno
aaa
add
aad
sti
mov
std
pop
add
xor
adc
mov
mov
dec
mov
sub
dec
pop
mov
xchg
fisttpl
mov
push
stos
insb
gs
xchg
enter
adcl
dec
loopne
insl
jmp
or
xchg
adc
pop
test
xchg
xchg
sbb
push
inc
mov
add
adc
cmpsl
adc
mov
shlb
sbb
xchg
je
out
lds
test
and
loopne
jecxz
push
lret
loope
int
lods
in
and
xchg
mov
push
cltd
or
movsl
sub
mov
pop
mov
bnd
jae
lret
repnz
or
iret
jno
mov
repnz
imul
and
jns
mov
mov
es
repnz
stos
xchg
jge
aad
shlb
dec
and
xor
imul
movsl
in
pop
icebp
push
mov
cmp
les
inc
mov
aaa
and
inc
jg
push
shll
cwtl
cmpsl
xchg
ficoml
mov
xor
cmc
or
sub
ficoms
sti
xchg
jl
insb
sub
loop
incl
xchg
jl
or
bound
xchg
jns
jae
lret
or
xchg
jle
dec
lds
inc
cwtl
mov
mov
mov
cwtl
std
insl
sti
or
xchg
sub
dec
mov
je
push
add
cmp
gs
push
add
aam
pusha
scas
jae
and
mov
and
add
jne
mov
xor
repz
fimull
mov
notb
test
mov
lcall
loopne
pop
jecxz
ret
mov
fbld
repz
and
adc
sarb
jl
add
ffree
lret
dec
mov
add
hlt
adc
mov
in
sbb
inc
jge
cmc
jne
xor
popl
jbe
mov
xchg
jp
jns
into
int
sub
push
pop
cmp
xchg
sub
or
hlt
arpl
pop
decl
test
jg
or
enter
out
daa
xchg
and
add
mov
jg
testl
mov
xor
orb
sub
pop
subb
cmp
lock
push
jmp
test
inc
dec
nop
mov
cmp
sbb
sbb
or
sub
dec
jno
fistpll
stc
lret
iret
mov
pop
push
cmp
push
nop
leave
jg
mov
lret
cwtl
fwait
lahf
inc
fistl
in
adc
jbe
cmp
fwait
dec
or
nop
cltd
adc
push
mov
xchg
lods
loope
and
pop
repz
dec
fld
add
in
loopne
mov
push
pop
sub
or
push
push
call
call
push
out
cltd
test
mov
jns
xchg
cmc
enter
test
popa
dec
lods
or
jge
lock
pop
add
mov
dec
fcompl
lea
mov
into
rcll
adc
leave
inc
dec
dec
mov
sub
daa
xchg
mov
xchg
sub
stos
ret
mov
shlb
rol
sti
or
les
push
adc
lods
dec
fbld
repz
adc
shrl
mov
aad
movsl
sub
das
shlb
pop
cmp
jecxz
popl
mov
mov
push
sub
in
lret
add
xor
inc
iret
cmp
aaa
repnz
cs
cli
popa
mov
cs
pop
out
adc
xor
jp
iret
clc
aam
sub
ss
stc
stc
shlb
test
inc
jbe
push
or
sti
cwtl
add
ret
cli
data16
test
mov
mov
sub
in
mov
jns
mov
cmp
aaa
aad
and
outsl
or
pushf
inc
adc
movsl
in
cmp
call
leave
fnstcw
jecxz
cmp
int
pop
mov
sbb
cli
dec
mov
push
scas
jecxz
adc
pop
inc
inc
dec
inc
outsb
push
sbb
outsl
dec
adc
jno,pt
lods
leave
sub
mov
sub
cld
push
dec
sbb
divl
jns
test
jbe
pop
jbe
call
sbb
and
iret
jbe
and
cmp
xchg
idivl
xchg
dec
push
mov
test
shlb
sub
pushf
popa
fninit
addr16
ret
addr16
cmp
mov
andb
lock
pusha
sub
arpl
xchg
loopne
ret
imul
inc
pop
movsb
sub
adc
jl
pop
mov
add
fidivrs
aad
frstor
mov
jbe
and
xor
xchg
mov
add
jns
sbb
push
ret
inc
jbe
xchg
stc
mov
jb
lret
inc
and
mov
xchg
arpl
xchg
enter
adc
int
jmp
sbb
rolb
cmc
sbb
sub
cwtl
sub
and
pop
xchg
out
xor
pop
shll
sub
lret
pop
insb
lret
cmp
xlat
mov
mov
shl
mov
daa
mov
xchg
mov
std
mov
mov
pushf
adc
jo
xor
lcall
mov
call
icebp
dec
out
jecxz
xor
sub
xchg
jb
xchg
pop
jnp
int3
mov
cwtl
sbb
xchg
dec
jne
stc
rcrl
andl
mov
scas
clc
dec
mov
or
scas
popf
test
jecxz
cmpsb
int3
or
pop
mov
aam
popa
out
and
jb
or
notl
mov
xor
dec
daa
adc
addr16
xchg
inc
adc
cs
and
pop
add
xor
rol
sbb
repz
sbb
and
inc
pushf
mov
mov
testl
outsl
divb
ja
push
add
mov
pop
xchg
xlat
in
pop
or
adc
mov
push
dec
fnstenv
xor
mov
push
jnp
push
test
mov
cmp
imul
into
ss
push
inc
mov
jo
lock
add
add
dec
cmp
cli
mov
jns
js
std
dec
adc
fmuls
or
fs
lods
inc
lret
ja
imul
push
push
mov
rolb
ret
xchg
xchg
adc
jo
or
outsl
loope
inc
push
mov
mov
xchg
test
sbb
mov
add
daa
insl
mov
mov
aam
and
sub
aaa
push
or
and
jp
dec
xor
fistps
push
pop
sbb
or
xbegin
mov
mov
sub
mov
rcrl
sub
xchg
ret
daa
test
or
mov
orl
ret
or
jne
jns
sub
cli
mov
mov
mov
shlb
push
mov
testb
and
fs
xor
adc
orl
mov
add
inc
out
lods
lahf
fwait
mov
and
xor
adc
movsl
pop
sub
cld
mov
inc
jp
test
outsb
or
out
jo
les
pop
dec
call
push
push
mov
shll
enter
outsb
orl
mov
inc
cmpsb
mov
mov
and
sub
rclb
dec
push
pop
in
inc
test
jecxz
ja
inc
shrl
idivl
in
push
int3
dec
sbb
imul
jbe
je
aam
lcall
ljmp
xchg
jne
icebp
data16
mov
lods
push
cmp
test
add
scas
push
mov
insb
xchg
ljmp
lret
cmp
clc
push
test
sti
sub
mov
add
or
ds
imul
dec
cli
and
nop
push
xor
in
dec
fldenv
addr16
cmp
addl
inc
mov
add
imul
adc
mov
jne
mov
cmp
ret
fidivl
mov
insb
xchg
iret
ljmp
jnp
aad
mov
push
les
xlat
pop
daa
push
mov
sub
fmull
test
mov
pop
fcompl
jmp
imul
sub
push
cmp
gs
pusha
mov
dec
and
ret
mov
gs
inc
xchg
cltd
mov
pop
dec
jg
pop
pop
dec
sub
inc
cmc
pop
andl
int
add
test
lods
and
sar
in
scas
or
imul
out
cltd
jbe
mov
xchg
and
enter
ret
ds
rcl
cmc
pop
aaa
icebp
lds
test
jne
lock
decl
push
xlat
aaa
dec
jmp
mov
push
sub
lea
fdivrs
xor
cmp
cld
imulb
lds
in
aam
or
and
push
xchg
fcomi
jle
lods
es
in
aad
imul
fisubl
fmuls
idivl
repnz
stos
and
mov
xchg
fmull
adc
dec
icebp
add
lret
data16
push
movsb
ds
das
push
cwtl
adc
and
add
cli
lds
sub
test
outsb
movsb
out
call
sti
cmp
and
fcom
es
popf
and
or
adc
dec
mov
add
ret
popa
ja
pushf
aad
subl
cmpsl
inc
cli
sub
mov
xor
adc
push
xchg
pop
lahf
mov
clc
sti
mov
cmp
sbb
ss
aad
inc
sbb
es
sbb
cs
fidivrs
sbb
and
pop
out
loop
fstpl
cmpsl
std
in
mov
outsl
insb
aaa
lret
and
sbb
cs
fwait
sbb
mov
mov
mov
adc
push
scas
mov
aam
cli
cs
cmc
sbbl
xor
jnp
adc
sgdtl
outsb
cmp
add
loopne
pop
sub
xchg
cld
cwtl
sbb
out
aam
cmp
or
jne
xchg
xchg
insb
jmp
add
pop
mov
mov
add
addl
and
adc
popf
dec
leave
sub
push
lret
mov
insl
cmp
iret
mov
imul
add
mov
add
jnp
sbbb
mov
push
xor
in
inc
push
pop
dec
inc
add
lods
dec
imul
stc
in
xor
les
sbb
xlat
xor
addl
inc
sbb
cltd
pop
ss
test
sbb
repnz
lcall
ss
fidivs
and
incb
add
jle
test
and
fldl
mov
inc
mov
xchg
rcrl
inc
fidivrl
pop
sub
mov
xor
je
nop
iret
sub
testl
pop
mov
ss
dec
mov
lcall
adc
inc
call
jae
iret
push
push
sahf
mov
pop
sbbl
cli
icebp
out
mov
jge
subl
outsl
push
xchg
sbb
push
push
mov
std
inc
mov
or
cmp
xchg
or
mov
shl
mov
gs
push
dec
add
int3
addb
pop
fisttpll
enter
daa
add
dec
aaa
sbb
ja
ret
cwtl
sub
cmp
out
lock
pop
or
mov
push
fistps
stos
sbb
xchg
add
cmpsb
in
inc
mov
ss
lds
inc
push
clc
call
jle
vhsubpd
mov
inc
lcall
stc
fld
inc
jns
lods
orl
js
jge
inc
mov
xor
sti
mov
fldenv
inc
shlb
outsb
int3
hlt
jb
sbb
movsb
push
aam
push
out
es
dec
inc
movsl
xchg
ud0
movsb
sub
shlb
or
sub
pop
scas
mov
inc
mov
sub
jno
cmp
sahf
out
dec
push
mov
cli
or
shlb
cmp
ret
fwait
push
not
push
sbb
jns
jmp
aam
jno
mov
mov
jno
dec
test
sbb
mov
movsb
cmc
xchg
sbb
popf
pop
sub
loop
enter
cmp
fmull
aam
popf
hlt
cwtl
cmp
push
adc
ret
pop
adc
lret
mov
mov
jae
mov
das
push
out
nop
lods
pushf
xchg
add
sbb
andb
lds
or
and
andb
mov
mov
jp
and
mov
hlt
test
aaa
add
xchg
scas
test
mov
mov
adc
shrb
dec
leave
mov
pop
shl
pushf
mov
pushl
icebp
lock
aam
movzwl
lahf
sub
mov
fadd
mov
adc
insb
cmp
sbb
push
jl
cmpsl
popa
pop
push
ss
dec
mov
adc
lret
pop
loop
filds
loopne
in
lret
or
int3
inc
inc
out
lods
xchg
sbb
pop
fsubp
cmpsb
into
xchg
fcos
cmpsb
bound
dec
shll
adc
and
das
pop
jno
mov
clc
pop
and
xchg
add
pop
pop
fsubrs
sbb
xchg
dec
xchg
fmul
daa
mov
test
push
mov
sub
dec
xchg
enter
ljmp
sbb
adc
mov
and
inc
push
mov
out
das
jnp
mov
aam
xchg
nop
int3
cmpsb
pop
jne
rolb
leave
sub
or
pop
push
pop
or
jmp
shrl
mov
adc
loopne
sbb
dec
jae
fcompl
or
mov
cld
stc
aas
cmp
out
sub
das
mov
aaa
andb
fs
in
stc
jo
fs
leave
ret
cmp
sbb
and
nop
push
mov
add
cli
mov
mov
pop
movsb
fimull
popa
pop
mov
sub
punpckhwd
xchg
imul
cmp
adc
jnp
leave
int
push
or
movsb
pop
cmp
jge
pop
ret
mov
js
nop
lret
sbb
mov
and
lret
xchg
xchg
lock
ficomps
xor
je
loopne
dec
cwtl
cmp
pop
popa
inc
jmp
mov
lret
lock
lret
mov
mov
add
push
pop
cmpb
int3
stos
and
dec
push
jle
cwtl
and
xchg
xor
in
lahf
stos
push
test
inc
std
push
ds
mov
add
xor
fistl
or
jo
mov
iret
dec
xchg
and
inc
mov
call
mov
fdivrs
push
xchg
dec
add
inc
into
sub
or
bound
mov
fistps
add
cs
inc
xchg
mov
pop
sub
rcl
or
cmpsb
lock
adc
aas
scas
aas
jg
je
popa
and
mov
shlb
je
push
sbb
ja
cmpsb
add
jb
lds
je
lahf
xchg
js
nop
scas
sub
subb
jmp
sahf
mov
push
mov
inc
sub
sysret
mov
jge
pop
sub
inc
test
fstpt
out
ja
loop
lds
sbb
ja
test
adc
push
add
or
or
lahf
inc
dec
mov
or
mov
jo
lahf
jge
dec
rorb
or
add
fistpll
lds
cmp
arpl
ljmp
shrl
arpl
cmp
xor
jle
push
cmp
insb
lret
lods
scas
icebp
push
xchg
leave
enter
mov
je
mov
dec
sub
pop
in
fistl
scas
ds
pop
inc
jns
sbb
sub
subl
sub
gs
imul
inc
enter
sub
rcrb
shrb
daa
fbstp
nop
dec
js
adc
xchg
test
inc
jmp
fisttpll
ss
push
test
adc
dec
xor
into
imul
jns
cld
rolb
incb
dec
inc
dec
sub
lahf
cmp
shlb
outsl
sbb
sub
xorl
dec
ljmp
adc
cmp
mov
mov
adc
jnp
negb
addr16
ret
ss
shlb
js
cltd
in
mov
sbbb
ret
pusha
loop
stos
xchg
stos
into
cwtl
inc
push
adc
push
insl
dec
shlb
rorl
sbbl
out
inc
xor
cmp
pop
loopne
mov
push
outsb
pop
push
lea
xchg
fxch
fcmovnbe
pop
repnz
fidivl
inc
mov
stos
push
jns
xor
dec
lret
jecxz
push
ja
jg
in
loope
mov
stos
jbe
mov
fucom
mov
and
int3
fs
cltd
int3
cmp
and
lahf
int
cmp
push
xchg
mulb
pusha
xchg
jmp
insl
sbbl
and
or
push
and
pop
stos
aad
mov
sahf
movsl
and
cmp
sub
pop
pop
mov
jge
sbbl
push
pop
div
xchg
into
xor
loopne
enter
daa
lret
inc
push
or
rorl
das
and
cmpb
aam
lahf
add
add
adc
and
int
fwait
cld
outsb
jae
je
mov
adc
leave
inc
add
pop
popa
divl
push
pop
and
mov
fldl2t
xchg
push
out
push
fistl
das
shlb
adc
mov
push
inc
dec
mov
je
pushf
jae
jns
cltd
cmc
or
leave
cltd
mov
jg
insb
cwtl
call
subl
add
push
mov
je
jns
mov
jne
stos
jmp
mov
sbb
pop
push
out
xchg
ret
icebp
idivl
sbb
dec
lods
xor
adcb
subb
mov
out
rorl
dec
add
lods
xor
rorl
push
inc
scas
sub
or
push
mov
inc
push
rcl
sub
enter
cmp
sub
push
lret
jl
loopne
or
popl
arpl
fpatan
adc
ljmp
add
mov
lds
xor
repnz
mov
sub
push
loopne
pop
lret
bswap
mov
adc
test
aad
mov
adc
push
inc
popa
rcrb
xor
jp
adcb
sub
clc
adc
push
ret
or
cmp
mov
adc
in
cmc
repz
adc
cmp
mov
inc
mov
lahf
aam
dec
xor
pop
das
xor
xchg
jne
ljmp
dec
fdiv
sbb
leave
iret
xor
sub
cli
pushf
popa
cmp
and
subb
ret
cmp
sbb
ret
pushf
inc
out
mov
push
jae
xchg
mov
xor
xchg
pop
cmpsb
sbbb
ja
ret
out
dec
mov
sarl
loop
mov
jo
add
pop
mov
cmp
ss
inc
adc
and
pop
sahf
imulb
xlat
adcb
pop
push
inc
adc
scas
xchg
es
std
mov
ja
sub
shlb
in
or
or
sbb
mov
add
and
xchg
std
iret
mov
pop
xorl
xor
and
mov
jnp
fwait
aad
movsb
lods
popl
mov
cmp
adcl
add
adc
das
gs
jl
stc
stc
pop
sbb
jne
mov
testl
xchg
aam
in
bnd
adc
aaa
sarl
bound
xlat
data16
or
fwait
jle
xchg
and
mov
cld
jg
sub
insl
jb
inc
leave
jp
hlt
in
jnp
in
dec
and
rcll
or
cmp
sub
mov
jp
loopne
in
sarl
mov
xchg
fs
inc
outsl
mov
jmp
addb
ret
mov
jb
es
mov
dec
mov
jmp
lahf
jecxz
imul
jno
add
cmp
js
xchg
sti
outsl
push
aaa
leave
incl
data16
mov
enter
ljmp
dec
jne
dec
pop
dec
push
fimuls
fidivrs
xchg
decb
insb
cmpsb
pop
push
popf
pop
mov
cld
fistps
outsl
dec
imul
pushf
xchg
fdivl
lret
fildll
divb
mov
adc
cmpsb
jle
mov
mov
jbe
mov
push
mov
arpl
repz
pop
cs
and
stos
add
adcb
call
sti
in
push
test
jl
aam
shll
xlat
adc
shll
cltd
jbe
dec
movsl
push
add
gs
test
sbb
jns
mov
iret
mov
or
in
lret
and
icebp
cltd
hlt
add
pushf
cmp
pop
test
stos
ret
rolb
add
jno
mov
pop
jg
sahf
js
push
cmc
ret
ret
push
jge
push
subb
scas
out
sub
cli
repnz
mov
push
adc
push
mov
hlt
lcall
rol
in
push
lods
insb
repz
push
jg
and
or
and
mov
cmp
js
shll
mov
shlb
gs
cmp
cmp
daa
xchg
mov
xchg
es
test
lret
cmp
mov
mov
dec
xor
mov
pop
stos
sbb
popa
push
fs
pop
cmp
cs
in
mov
imul
mov
jno
insl
movsb
mov
shlb
push
ss
or
pop
lods
ss
jno
jb
xorl
or
xlat
jmp
push
mov
add
sbb
inc
insl
es
lock
cmp
lahf
sub
push
and
jns
mov
sbb
xchg
add
xchg
dec
dec
outsb
jecxz
int
pop
popf
int
dec
popa
mov
in
addr16
xor
pop
jle
jp
js
enter
andl
ljmp
push
icebp
dec
cwtl
or
sub
dec
js
lods
dec
jb
add
push
pusha
pop
roll
movsl
sbb
cmpb
movsl
inc
call
jg
dec
cltd
sub
aad
nop
mov
sbb
jno
mov
shll
and
adc
dec
cli
xchg
inc
xor
add
lods
out
mov
sbb
jnp,pt
cmp
mov
sub
jmp
inc
push
xlat
scas
cmc
xchg
xor
jl
mov
xor
add
std
int
enter
sbb
mov
rcll
repz
sbb
in
sti
xchg
cmovo
bound
xorb
inc
xor
loopne
decb
xor
jno
cmpsl
data16
pushf
mulb
pop
inc
mov
or
ror
ja
bound
mov
add
mov
imul
mov
pshufw
dec
pusha
xorl
fsubl
pop
mov
jecxz
jecxz
fdivp
add
mov
mov
jbe
addr16
into
loope
popf
dec
sub
iret
xchg
xchg
into
stos
mov
adc
sbb
enter
sub
mov
bound
icebp
xchg
aaa
stc
rclb
jecxz
mov
push
mov
movsl
pop
arpl
lret
out
loop
ljmp
adc
dec
idiv
ljmp
dec
pusha
rorl
and
lret
adc
mov
out
leave
out
shrb
adc
mov
fcompl
mov
or
cmc
les
sbb
ret
cmpsb
push
sbb
mov
pusha
cltd
in
cld
jg
sbb
addl
fcomps
cmp
mov
les
inc
insl
aad
aad
xor
test
lahf
rcl
xchg
mov
sbb
sub
sbb
ja
lahf
xor
aaa
jl
ss
cmp
cs
out
test
popf
mov
xor
js
xchg
aas
imul
or
lcall
cmp
rorl
xchg
es
movl
imul
mov
add
test
iret
stc
mov
pop
movsl
xchg
sub
outsb
lods
insl
call
fimuls
stos
fcmovnu
jb
pop
scas
sub
and
pop
iret
xor
lcall
pusha
cmp
out
outsb
ret
xor
bnd
dec
mov
xchg
lahf
icebp
mov
icebp
push
xor
aad
data16
out
pop
jg
mov
xchg
shrl
inc
xchg
jnp
ret
push
xor
inc
cld
push
lret
cltd
pop
dec
sub
ja
das
pmaddwd
cmpb
sub
cltd
push
ljmp
int
ja
dec
jb
adc
cld
mov
sub
xchg
imul
bound
xlat
lret
incl
aam
jge
adc
push
cmp
pop
fucomp
fucomi
fisttps
mov
dec
mov
std
fucomip
cmp
lcall
jb
aad
inc
sbb
cmp
or
daa
push
subl
aad
fwait
sti
inc
adc
jge
fnstcw
jecxz
sar
lods
bound
push
aaa
mov
mov
pop
mov
xchg
cmp
mov
push
jbe
stos
dec
push
int
add
mov
hlt
mov
mov
hlt
mov
fcompl
insb
pop
push
mov
cwtl
fistpll
js
in
lock
repnz
jle
add
cmp
push
dec
std
inc
aas
popa
test
gs
mov
ror
fsts
add
inc
and
push
pop
daa
jb
pop
sub
adc
lret
mov
cmp
xchg
adc
hlt
pop
mov
data16
test
mov
lds
iret
push
imul
or
daa
or
add
push
stc
icebp
push
outsb
xchg
jnp
popf
or
mov
sbb
test
xor
fs
aas
pushf
js
push
es
dec
push
enter
xchg
ss
xchg
out
jns
outsb
hlt
mov
shll
in
cmc
test
add
inc
inc
push
mov
inc
push
lea
test
imul
test
push
jne
lods
test
dec
out
add
adc
lea
les
add
jno
push
in
dec
inc
jne
xchg
out
adc
jne
pop
mov
mov
lods
cli
je
iret
mov
loope
dec
inc
fs
cmp
adc
lds
pop
jle
xchg
sub
orl
popl
adc
jbe
xor
mov
idivl
jmp
hlt
xlat
dec
xchg
dec
mov
sbbl
dec
sub
pop
dec
call
orb
pop
icebp
ficoms
stos
mov
pop
add
imul
aaa
sub
loopne
in
stos
sub
sarb
insl
sub
nop
pusha
push
pop
mov
xlat
mov
div
int3
inc
cmpsb
xor
imull
ds
rorl
and
and
jo
mov
fld
sahf
pop
dec
sbb
jp
lahf
add
pop
imul
icebp
jl
clc
into
lods
sarl
mov
jle
mov
mov
mov
das
fdivr
or
iret
xlat
pop
in
dec
stos
xor
loopne
mov
push
bound
push
dec
lret
sbb
dec
in
add
int3
bound
pop
inc
push
dec
in
rorl
lock
and
mov
addr16
fcomps
fbstp
and
mov
or
fpatan
pop
xor
rcrb
cmpsl
jbe
mov
mov
jae
and
mov
mov
xor
inc
movb
push
or
nop
jle
push
dec
ja
dec
mov
mov
xor
fisttpl
enter
xchg
scas
and
sbb
ljmp
fwait
xchg
cmc
xor
pop
gs
and
mov
adc
cmp
aam
movsb
lahf
stos
pop
lret
xchg
jbe
ss
add
cld
xchg
aad
pop
or
inc
adc
mov
and
pop
scas
cmp
xor
jb
mov
cwtl
mov
lods
and
jo
and
sbb
push
shll
cs
in
aaa
cmp
clc
mov
in
bound
push
jns
nop
mov
add
jo
mov
pop
jge
pushl
mov
test
jl
sahf
fisubrs
add
jmp
std
in
push
or
shr
mov
mov
aam
push
movsb
mov
aas
push
ljmp
dec
aaa
pop
das
insl
jl
jo
xchg
mov
inc
xor
ror
insb
xchg
lea
push
jl
add
loopne
in
jp
insl
mov
xchg
inc
push
nop
ljmp
jl
idivl
test
inc
cmp
sbb
or
loope
sbb
inc
stos
out
jl
xor
ss
jg
push
push
addb
lock
lods
scas
inc
jge
push
cmpsb
push
sub
popf
jb
in
cwtl
push
xor
movl
xor
inc
jp
fcmovbe
cld
push
iret
or
cmp
leave
icebp
lods
add
arpl
mov
jne
push
iret
imul
jg
dec
mov
pop
cwtl
cwtl
push
mov
mov
bnd
arpl
clc
mov
mov
sbb
mov
int3
push
dec
cmpsl
ret
mov
scas
cs
add
loop
test
and
add
xor
inc
cld
mov
pop
pop
add
outsl
arpl
lret
jo
cmpl
stos
add
clc
dec
xchg
or
inc
pop
mov
xchg
sbb
push
push
outsl
sub
insb
xchg
mov
push
mov
arpl
sbbb
ret
xor
enter
call
lret
sbb
popa
inc
mov
mov
pop
inc
lret
aam
adc
push
pop
cmc
fimuls
adc
insb
jl
push
jg
add
add
or
push
imul
mov
mov
int
pop
std
cwtl
hlt
mov
xchg
aas
lods
or
icebp
sbb
jnp
or
in
cs
jae
sbb
inc
xchg
fisubs
pop
in
and
xor
lods
pop
sbb
pop
mov
xchg
aaa
aaa
lods
adc
push
push
add
pop
and
sbb
ss
mov
adc
and
or
sahf
sti
push
ret
push
lahf
scas
movsb
xchg
dec
sbb
mov
sbb
jg
loope
loope
repz
test
push
xlat
sub
inc
mov
adc
sub
lods
push
subb
test
lret
jmp
sti
repnz
xchg
addb
cli
sub
call
push
adc
push
enter
inc
and
into
cli
lret
test
dec
or
imulb
and
xlat
mov
les
js
lret
fsubrs
lods
test
jne,pn
sti
adc
loopne
adc
loopne
arpl
push
add
dec
or
loopne
rorb
mov
mov
arpl
push
cmp
ficomps
vfrczps
sti
xchg
imul
sbb
in
fdivrl
cltd
inc
mov
xchg
fwait
lahf
stos
mov
sbb
add
pop
into
or
add
pop
mov
fimull
xchg
jnp,pt
sbbb
inc
rorl
jbe
mov
aam
add
ret
inc
shlb
leavew
xchg
lret
movsl
leave
loop
jmp
xor
cmp
dec
cmp
lods
lret
repz
pushf
pop
cmp
in
cmpsl
or
lea
push
loope
mov
xor
push
lret
xchg
lret
insb
pop
mov
push
xchg
lods
leave
sti
adc
mov
inc
xchg
jmp
es
or
aad
pop
rcr
pop
sti
rclb
mov
cmpsl
sbb
mov
and
dec
jnp
or
sub
push
leave
fs
fwait
add
into
aaa
sub
imul
push
and
adc
notl
push
mov
add
inc
bound
xchg
or
push
subl
imul
fistpl
dec
scas
xor
xor
enter
pushf
and
and
dec
mov
jb
adc
xor
mov
sti
inc
jns
push
loope
lock
arpl
test
inc
inc
ljmp
outsb
pop
push
mov
pop
fnstenv
pushf
add
inc
stos
or
jmp
xchg
push
pop
arpl
scas
sub
jo
mov
pop
pushf
stos
pmaxsw
or
cli
pop
pop
dec
sbb
xchg
push
test
scas
mov
xorl
cmp
cwtl
sub
dec
fst
rcr
dec
xchg
xor
movsb
ljmp
pop
je
lret
jae
jl
and
mov
mov
inc
pop
add
nop
and
add
dec
arpl
xor
imul
fdivrs
addr16
adc
aaa
mov
push
idivl
dec
sub
neg
jecxz
jecxz
aam
adc
jecxz
outsl
xor
outsb
dec
sub
cmp
xchg
pop
test
insb
mov
cmp
sbb
dec
push
inc
imulb
mov
mov
mov
push
mov
in
push
pop
pop
cmpsl
mov
clc
ja
aam
or
mov
mov
dec
mov
push
jmp
cltd
stos
lahf
push
push
mov
int3
out
daa
pop
xorl
out
loope
lcall
mov
icebp
jp
sbbl
fwait
dec
enter
mov
loope
mov
das
enter
cmp
mov
pop
mov
pop
in
or
mov
add
scas
push
mov
in
or
inc
mov
sbb
jne
arpl
jmp
fst
adc
jno
mov
sbbb
aam
inc
jno
dec
std
ffreep
and
fimuls
mov
fs
cld
inc
ja
pop
jecxz
push
ret
rorb
mov
es
aaa
sbb
cmp
xor
add
lock
sub
iret
lcall
fildll
dec
jne
mov
ljmp
mov
popf
mov
mov
sbb
push
psubsb
lret
test
fisubs
mov
or
ret
inc
outsl
xor
cmp
mov
mov
std
push
mov
call
mov
adc
or
ja
ret
loop
fsubs
mov
mov
fsubrs
pop
dec
and
pop
mov
jg
int3
push
jmp
das
mov
ret
scas
pop
xchg
or
divb
bound
sub
dec
loop
lret
inc
in
out
mov
ds
cs
loopne
dec
inc
jb
mov
pop
dec
out
icebp
pop
stos
dec
fs
add
jno
frstor
lahf
jno
out
stc
xchg
and
inc
stc
out
dec
and
push
dec
jns
lret
mov
incb
xchg
or
std
and
and
hlt
cld
adc
dec
or
out
sahf
lea
imul
mov
mov
inc
lods
sbb
jle
cmp
jecxz
mov
in
sub
jae
dec
xlat
jp
mov
sub
or
lds
ja
adc
testl
dec
and
or
stos
mov
in
jns
push
js
loope
xor
sub
mov
in
mov
dec
lds
xor
pop
stos
xchg
hlt
scas
mov
mov
aaa
fs
arpl
les
push
sub
push
cmp
push
xchg
dec
xchg
jge
dec
xor
je
int
add
and
movsl
or
or
ds
ds
enter
imul
mov
loopne
rclb
push
xchg
inc
mov
sbb
hlt
in
adc
movsb
pop
in
enter
xchg
pop
or
xor
dec
sarb
add
mov
xor
loopne
loope
or
aad
sub
mov
lock
adc
pop
sbb
push
push
dec
pop
loope
and
adc
dec
adc
test
enter
ficoml
stc
mov
movsl
imul
into
jo
dec
add
push
cmp
loope
fsubr
and
mov
add
movsl
insl
dec
jg
lods
aam
rcl
xor
push
fwait
incl
movsb
push
sarb
orb
or
mov
call
xor
insl
dec
dec
outsb
sub
mov
fnstcw
cmc
and
jne
test
push
xor
ds
or
jp
pusha
in
and
mov
pop
push
mov
int
enter
aam
xchg
mov
cld
pop
jp
or
xchg
push
push
cmp
cmp
aam
pop
loop
popf
mov
icebp
push
push
xbegin
scas
pop
insl
jns
inc
test
data16
icebp
cmpsl
push
jecxz
test
das
imull
clc
imul
adc
jl
inc
inc
mov
rorb
pop
push
ljmp
lock
mov
or
pop
je
test
push
cmpsl
adc
pop
mov
repz
sub
rcll
jo
shl
outsl
incb
daa
push
lods
dec
popf
mov
push
sbb
dec
imull
int3
adc
mov
loop
clc
loop
fcom
mov
jnp
in
jb
lods
cmpsb
cmp
in
push
push
cmc
xor
popf
xor
out
out
rorl
jb
xchg
inc
or
jnp
jnp
dec
lret
cmp
lods
inc
jne
lret
sub
cmp
mov
test
mov
mov
pop
insl
arpl
fs
fs
push
repnz
xchg
mov
mov
into
jecxz
mov
sub
jle
rcll
loopne
cmp
cmp
fs
lret
xchg
scas
hlt
add
inc
shll
rorl
mov
and
jecxz
inc
pop
cmp
imul
cli
jb
mov
mov
into
bound
inc
ss
adc
insb
cmc
sbb
mov
icebp
test
or
ja
pop
jb
fsubrl
aad
pop
jo
jl
jnp
mov
cli
cld
cmp
stos
push
in
movsl
cmpsb
fldenv
mov
jp
push
popa
call
xor
mov
mov
mov
jne
out
pusha
rcr
pop
add
loop
shlb
or
addl
mov
dec
movsl
sub
push
icebp
dec
lods
jbe
xchg
lock
jle
pop
lods
push
data16
pushw
ljmp
pop
pusha
ret
pop
or
insl
fsubl
xchg
popa
jne
stos
aaa
xchg
add
push
add
mov
lds
sub
sub
jge
mov
adc
dec
push
mov
stos
cld
nop
xchg
fisubrl
mov
cmp
or
call
loop
jno
mov
xchg
push
or
mov
data16
jp
rcll
cmpsb
fisubrs
js
push
mov
pop
test
xchg
int3
outsl
sbbb
ret
cli
mov
push
pop
cmp
pop
sub
mov
cmpsl
and
ds
mov
adc
stos
in
push
call
ljmp
out
add
popa
test
fbstp
sbb
cmp
out
mov
je
xor
adc
out
cmc
out
cmpsb
sub
out
repnz
mov
xor
in
adc
sbb
imul
and
xchg
push
dec
das
cmp
sahf
mov
rcrb
jb
push
xor
fcoms
leave
mov
jp
xor
inc
mov
rclb
or
lock
bound
xchg
fists
roll
stos
add
loope
pop
jg
imul
xchg
cld
test
cmp
cmp
sub
es
jecxz
dec
dec
lret
andl
into
outsb
jno
hlt
data16
das
jmp
in
cmp
and
repnz
cltd
mov
xor
insb
push
outsb
push
and
test
mov
add
outsl
repz
clc
pop
mov
shll
add
xchg
pop
jne
stc
inc
cmp
fsubrs
loope
cmc
pop
dec
mov
jb
in
jns
xchg
es
imul
js
imul
insl
adc
incl
lock
das
add
pusha
mov
sbb
ss
rorl
dec
aaa
icebp
xor
jnp
out
xchg
sarb
cwtl
pop
cmp
icebp
inc
fs
inc
dec
fwait
loope
fcmovnb
cmc
pop
inc
loope
fisubl
jge
xor
test
test
and
jmp
inc
arpl
addr16
mov
and
push
jo
push
rorb
arpl
int3
cwtl
int3
rolb
xchg
push
cmpsl
mov
push
xor
lea
lret
and
and
mov
fisubrl
jl
imul
sub
xor
andb
sti
and
xchg
push
push
test
lcall
xlat
out
insb
ss
mov
ret
xchg
dec
and
mov
mov
or
inc
lods
test
sarl
xlat
sbb
cmpsl
mov
xor
sbb
mov
xor
clts
mov
out
aaa
push
pop
push
pop
pop
cs
xor
xorb
mov
and
inc
adc
jns
test
cmp
aad
or
scas
fwait
shll
mov
xor
sbb
xor
jmp
insb
cmp
scas
lea
std
pusha
xchg
push
inc
adc
mov
mov
clc
ficoml
and
cmpsb
jne
jmp
cmp
xchg
cld
adc
sub
xor
inc
pop
arpl
addr16
mov
gs
dec
mov
rcll
dec
daa
jp
mov
shrb
cld
arpl
pusha
pop
and
sbb
movsl
insb
pop
pop
out
xchg
push
adc
fnsave
push
inc
xor
iret
jge
mov
ds
mov
inc
and
adc
es
cltd
add
xor
jl
aas
dec
test
adc
roll
aad
push
ja
pusha
fidivrs
xchg
hlt
pop
and
orb
jp
or
jne
fiadds
sbb
lcall
ficoml
jns
push
loopne
jl
cld
sub
xor
cmp
cwtl
xor
push
xor
push
dec
push
cmpl
loope
insb
lods
xor
mov
out
mov
pop
sbb
xor
sahf
fstps
add
adc
push
or
mov
mov
vpsubsb
lods
insl
inc
cmp
stc
pop
cmp
fcom
mov
addr16
scas
out
sbb
dec
fldcw
inc
sub
ss
xor
adc
in
or
adc
test
adc
aad
es
mov
mov
xor
bound
popa
and
lcall
xchg
or
sbb
or
mov
addr16
dec
fisttpl
pop
and
and
lret
and
lods
lret
mov
dec
clc
jmp
filds
shlb
sub
int
fisubrl
jmp
fistps
mov
testb
lea
sahf
imul
adc
xor
pop
leave
arpl
lods
pushf
fnsave
rcll
xor
movb
push
mov
imul
pop
sub
cwtl
fptan
push
ror
and
shll
jnp
fisttpll
adc
dec
out
dec
test
xchg
sbb
inc
jl
lods
out
scas
ret
lret
mov
sub
xor
mov
mov
nop
inc
push
pop
out
pop
out
std
fisubrs
packuswb
incb
leave
enter
sub
sbb
nop
cmp
aaa
mov
fmuls
cmp
mov
cmpsb
or
and
jnp
inc
lods
pop
add
iret
movsb
cmp
sbb
pop
test
pop
add
jae
mov
lret
xchg
sahf
inc
imul
mov
jmp
cwtl
test
xchg
lea
pop
nop
jge
nop
mov
push
sbb
cmp
fwait
jae
and
jg
push
test
out
pop
jno
adc
xor
orl
data16
dec
mov
fstps
fidivrl
sub
sub
mov
notb
fistpll
or
add
dec
mov
cmpsl
notb
and
mov
imul
shr
cmp
mov
andb
outsl
loope
rorl
pop
testl
or
aam
pop
es
movsb
push
rcrl
mov
and
insb
sbb
fsub
data16
add
scas
mov
dec
iret
xlat
fldl
push
leave
ret
mov
lock
sub
dec
cmp
xor
imul
pop
push
mov
outsb
stc
mov
bnd
mov
pop
dec
pusha
mov
es
lret
inc
divl
outsb
outsl
jb
test
xor
push
jo
jnp
and
icebp
jne
inc
push
aas
mov
push
mov
pop
pushf
inc
inc
ljmp
sbb
cli
mov
imul
pushf
inc
or
sbb
shll
jne
xlat
sbb
xchg
push
arpl
mov
xchg
sahf
adc
stc
cmp
test
dec
cld
stc
loope
cmp
push
xor
bound
psubq
ret
dec
push
outsl
xchg
rcrb
sbb
add
sub
and
and
les
lahf
jg
aaa
gs
inc
stos
cmpsb
push
lahf
adc
daa
add
lds
or
mov
mov
ret
jno
daa
psrad
push
mov
outsl
push
data16
mov
and
loopne
jl
xor
mov
sub
mov
popa
pop
insb
scas
mov
mov
xchg
fiadds
add
pop
pop
inc
sbb
and
repnz
rcrl
mov
or
dec
add
addl
pushf
scas
aad
sub
adc
or
xchg
cltd
iret
mov
and
imul
outsb
mov
fnstsw
arpl
cli
or
nop
outsl
inc
repz
sbb
mov
into
fidivrl
add
in
sbb
xchg
into
fs
dec
sub
icebp
nop
sub
mov
xor
jge
bound
inc
rolb
sbb
xor
push
cmp
fs
scas
adc
add
shrl
fsubs
out
and
or
add
xor
ss
fnstcw
inc
mov
cmp
hlt
mov
lret
in
push
lds
pusha
sbb
imul
cli
adc
mov
ljmp
xchg
lods
push
popf
push
mov
adc
cmp
mov
das
repz
mov
push
push
dec
adc
fmuls
inc
fistps
loopne
xor
push
mov
out
sub
inc
xchg
pop
sub
aad
fwait
loopne
idivl
lcall
in
push
fidivl
inc
pushl
jg
fistps
mov
loope
loopne
fistpll
lock
cmp
xor
fwait
and
jl
add
cmpl
fstpl
pop
mov
ret
sbb
mov
aaa
bound
cmp
popf
mov
add
lods
jg
jp
jg
jmp
cmp
es
icebp
rol
mov
jns
mov
les
inc
aam
sbb
gs
add
out
lods
or
cs
mov
aad
xor
add
add
ror
andb
lds
out
dec
or
iret
cmp
sbb
jp
push
push
adc
call
lds
call
pop
mov
aam
mov
sbb
mov
fwait
subb
cmp
mov
cli
ror
mov
jmp
mov
icebp
xor
xor
ret
jl
cmc
cld
lahf
clc
jle
pusha
xlat
insl
mov
icebp
jne
push
repz
lock
push
shr
inc
sub
ljmp
imul
xchg
stos
ret
movsl
hlt
push
nop
jo
pop
arpl
mov
mov
ffree
fsubs
lds
add
out
dec
jecxz
pop
and
fdiv
or
jecxz
xor
push
test
arpl
sub
sub
push
arpl
adc
mov
pushl
fimuls
test
push
mov
mov
loop
sbb
jge
pop
fnstcw
clc
rcll
and
aam
inc
out
imul
aas
js
jne
xchg
mov
aas
mov
int
and
push
cli
pop
pop
lods
popa
jle
dec
shll
lds
lods
dec
push
int3
nop
loop
dec
popf
mov
jl
inc
test
arpl
clc
cmp
cmp
push
out
call
ret
mov
xor
pop
fisttpll
xchg
lea
pushf
mov
adc
es
insb
test
int
dec
sub
sahf
aaa
xor
mov
add
lret
cmp
mov
mov
iret
mov
push
cmc
mov
scas
stos
fsts
dec
enter
add
jl
adc
mov
nop
mov
rcrb
mov
mov
cmpsl
mov
mov
and
xchg
ret
or
sarl
cs
jnp
push
dec
cli
pop
push
aad
fcmovnu
push
xor
mov
mov
mov
scas
test
out
fsubrs
popf
mov
pushl
sbb
aas
insl
mov
xchg
push
lret
sub
or
rcll
xchg
sbb
clc
xchg
cld
test
cltd
aaa
adc
and
or
xchg
int
sti
call
mov
lods
pop
sbb
sub
stos
mov
in
lcall
ljmp
imul
pusha
or
adc
sub
inc
inc
daa
or
mov
xor
xor
inc
mov
es
jns
es
andl
in
sub
push
bound
ja
adc
mov
adc
jb
fdiv
rol
mov
psubsw
cmc
xchg
mov
cmp
sub
pop
cli
push
cmpsl
adc
xor
xor
rcll
jge
jg
xchg
inc
mov
or
out
outsb
mov
inc
dec
dec
fisubs
notb
or
test
loope
into
and
mov
xchg
xchg
pop
lret
cmpsl
stos
push
popa
jno
jg
pop
jae
sahf
sahf
or
into
cld
fs
mov
jp
cld
shlb
pop
adc
mov
xchg
mov
loopne
or
fs
pop
mov
movsl
aam
inc
sbb
cltd
rcr
mov
hlt
ficomps
movsl
es
mov
repnz
ljmp
repz
stc
xchg
pop
fstpl
adc
lds
cmpsb
xor
cmc
sbbb
ljmp
xlat
dec
pop
add
jo
inc
pop
rcll
mov
push
xor
mov
pop
fcoms
mov
xor
push
pop
or
sbb
and
sbb
inc
push
sarb
imulb
jns
test
jle
xchg
ret
xchg
out
mov
divl
data16
push
pop
or
fisubrl
ss
sub
push
arpl
or
jae
into
jp
push
in
inc
xchg
sub
lods
lock
and
arpl
test
pop
jmp
xor
dec
lahf
sar
imul
call
mov
and
outsb
cmc
jmp
out
leave
ss
daa
data16
fstpt
jge
stc
sbb
sbb
cmp
lock
in
mov
sbb
mov
mov
xchg
jbe
cs
in
sbb
lret
rcll
cwtl
and
scas
xor
gs
dec
mov
inc
lods
mov
push
and
call
sar
jnp
out
std
outsl
jmp
ljmp
and
adc
shll
and
mov
mov
addb
cmp
mov
or
adc
jp
test
andb
ljmp
test
lret
pop
xchg
adc
mov
cmpsb
pop
add
add
test
mov
aaa
or
mov
mov
lahf
mov
pushl
pop
sub
ficompl
lret
sub
sbb
mov
add
cmp
mov
push
jle
xchg
cld
dec
xchg
lea
sbb
push
dec
or
clc
sbb
jns,pt
xchg
ret
mov
inc
mov
ljmp
sub
icebp
sub
mov
dec
push
push
pusha
add
out
cmp
dec
sbb
sbb
and
mov
cmpsb
xchg
jb
cmp
shlb
sub
js
call
mov
jnp
test
lcall
pop
repz
dec
nop
mov
xor
stc
or
push
add
cwtl
or
bnd
fistps
xchg
addl
xchg
ds
mov
pop
scas
stos
jl
add
repnz
pusha
lods
movb
jmp
mov
mov
sub
es
insl
jbe
out
nop
pop
push
or
int3
adc
and
jnp
aad
js
es
int3
and
insl
or
fs
xor
push
dec
imul
sbb
add
lods
les
add
sti
push
mov
in
shlb
hlt
xor
push
lods
jnp
stc
andl
pop
push
fldt
scas
xor
xchg
pushf
add
rolb
dec
mov
mov
imul
or
in
int
inc
push
insb
rorb
adc
xor
xchg
pop
mov
hlt
sbb
stc
pop
arpl
aam
outsb
in
into
stos
les
stc
gs
fiaddl
out
or
mov
sbb
aam
lds
push
movsb
xor
fisubs
sub
jne
aas
or
xor
cmp
movsb
mov
pop
test
fcompl
mov
dec
shl
jo
jnp
jae
mulb
cwtl
psllq
or
cwtl
divb
int
maxps
je
ja
inc
leave
mov
sbb
mov
xchg
sub
addr16
mov
bound
repz
sbb
in
mov
adc
jle
push
test
daa
sub
push
daa
cmpsb
xlat
xor
sub
dec
int3
cwtl
jge
rorb
pop
lods
std
xchg
aas
imul
mov
rorl
cmp
push
adc
pop
div
ds
xor
ss
jle
into
jmp
stos
hlt
call
inc
jecxz
adc
pop
or
sbb
lahf
add
mov
dec
mov
div
add
emms
dec
dec
push
clc
test
and
data16
aaa
xchg
mov
movsb
pop
int3
incl
mov
sub
shlb
xor
lods
cli
test
cmp
in
lret
xchg
lret
mull
xchg
cmpsl
pop
ficoml
push
outsl
in
pop
int
and
sarl
mov
adc
add
in
sub
pop
mov
jne
fdivl
xchg
idivb
in
iret
push
mov
int
mov
jmp
cld
adc
dec
es
lods
out
cmp
pushf
pushf
fwait
out
daa
in
pop
pop
push
lods
mov
cld
mov
dec
xchg
dec
packssdw
pop
cmp
xorl
add
or
sub
fisttps
out
cs
faddl
dec
pusha
xlat
or
pop
stos
xchg
mov
cmpsl
lock
cld
fwait
cmp
pop
mov
in
stos
push
jmp
cwtl
inc
and
bound
pop
frstor
xchg
loopne
fs
aaa
mov
mov
pop
inc
or
lahf
jmp
pop
mov
cmpb
shlb
or
sarb
enter
scas
repnz
adc
adc
mov
scas
mov
nop
xchg
out
adc
mov
xchg
jl
add
mov
mov
leave
je
test
sub
in
mov
loop
incl
and
out
inc
cli
lods
and
in
push
fcoml
ss
in
scas
pop
insl
test
fdiv
adc
xor
ret
lahf
jmp
adc
mov
cwtl
fimull
mov
outsl
sbb
xor
decb
orb
push
fprem1
std
clc
pushf
jae
adc
push
aam
xor
mov
and
das
jge
fdivrl
popf
add
push
lock
add
cld
int3
or
pop
sub
aad
fcmovb
scas
imul
sbb
xchg
add
xchg
insb
push
xchg
xchg
xor
je
inc
or
mov
and
xchg
push
push
cmp
negl
cmpsl
into
sub
inc
pop
or
movsb
mov
leave
nop
out
pop
pop
jb
scas
outsb
scas
movl
xlat
test
push
ja
outsl
scas
mov
add
lahf
sub
sahf
stc
sbb
in
shr
xchg
push
mov
dec
cmp
push
sub
pop
cld
pop
xchg
inc
xchg
jp
scas
fcoml
xchg
jae
xchg
mov
mov
iret
pop
movsb
push
adc
mov
xchg
push
mov
jne
les
test
out
cmpsb
xor
jnp
ds
or
pop
pop
xor
pop
test
adc
mov
pusha
push
ja
fimuls
and
xor
cmp
in
outsl
and
int
repz
mov
sarb
call
sub
cmp
sbb
cmp
add
sub
dec
dec
into
scas
sbb
stos
test
dec
sbb
imul
repnz
jne
lret
fildll
sub
cltd
dec
jo
outsb
fnstsw
add
je
xchg
sub
mov
lcall
jns
cmp
pushf
push
inc
dec
dec
dec
jne
imul
shr
cmp
xor
in
mov
test
add
push
jp
push
add
call
fwait
mov
jecxz
cmp
adc
inc
ret
cmp
pop
scas
int3
dec
movb
imul
sub
sbb
decl
or
lret
jecxz
decb
push
std
pusha
out
fildll
std
shll
sbb
mov
sbb
nop
mov
jno
mov
mov
mov
dec
xchg
icebp
in
out
xor
add
push
xchg
in
sbb
loopne
or
es
xchg
jns
mov
mov
test
mov
arpl
jp
mov
cmp
loop
and
mov
outsb
or
cwtl
mov
jl
stos
es
les
sbb
sub
icebp
je
clc
adc
xchg
arpl
sbb
push
push
pop
cmpsl
xchg
ds
lcall
sbb
mov
lahf
sub
stos
dec
aaa
pop
xchg
sub
dec
je
adc
outsb
mov
mov
shlb
cmpps
xchg
jmp
pushf
fstpl
sub
call
fsts
ljmp
ja
movsl
xor
loopne
repz
sbb
pxor
into
mov
and
add
lea
mov
or
inc
and
addb
adc
sbb
jecxz
es
jmp
xor
fistpl
xchg
sub
aaa
mov
fiaddl
into
sub
sub
pop
and
sbb
mov
daa
lahf
or
xchg
sub
pushf
ljmp
incb
jbe
aas
mov
and
cmpsb
call
dec
ss
push
sub
dec
fcmovnu
cwtl
shlb
jl
sub
dec
mov
mov
repnz
test
rolb
xor
add
packssdw
add
sub
sub
sbb
pushf
sub
pop
aad
add
sub
add
mov
sbb
add
add
iret
xor
lret
jno
jmpw
arpl
loop
fildll
movsb
imul
adc
scas
pop
andl
push
xchg
fcoml
pop
mov
aas
es
add
sbb
pop
dec
push
and
mov
mull
adc
dec
ret
arpl
jae
sbb
add
jae
xor
or
bound
lods
orl
jb
ret
aas
dec
pmulhw
and
popf
mov
sbb
shll
push
and
std
pop
cmc
ret
push
mov
push
jns
data16
mov
testl
pop
enter
mov
cmpsb
rolb
imul
rolb
test
movsb
fisubrl
dec
push
imul
ret
xor
cwtl
mov
jg
mov
jl
cmp
ret
bound
iret
fwait
cmpsb
add
sub
pop
rolb
or
dec
cmp
cwtl
std
cmp
mov
sti
sbb
ficoms
push
sarl
mov
fdivrs
mov
inc
mov
cmp
std
or
movq
xchg
cmp
ss
jo
lret
mov
out
add
mov
dec
aas
mov
mov
ss
addb
ret
jns
icebp
cmp
iret
addr16
pop
es
ret
daa
xchg
out
mov
enter
out
ja
inc
mov
pop
mov
xchg
insl
rol
cmp
inc
sub
and
xor
inc
dec
inc
aas
mov
jae
pop
jl,pn
repz
sti
pop
pop
cmp
jg
mov
icebp
sub
mov
ret
test
inc
data16
sub
dec
scas
lret
dec
jbe
loopne
adc
push
jl
mov
idivl
push
cmp
arpl
jne
cltd
xor
sbbl
ds
push
add
mov
pushf
xor
sarb
sbb
out
add
movsb
mov
pop
aam
hlt
lods
cmp
test
mov
rclb
sbb
xchg
cld
stos
out
jmp
stos
paddw
daa
lea
lock
cmp
xor
je
or
cmp
addr16
icebp
adc
int
jp
push
cmpsb
fdivrl
dec
pop
mov
sub
jbe
shlb
xor
shrl
jae
xor
jnp
mov
fstpt
test
movsl
jae
adc
shll
notl
and
stos
xchg
test
mov
sub
loopne
pushf
sbb
push
sub
idiv
sbb
dec
rclb
jg
addr16
sbb
mov
mov
inc
cmpsb
repnz
sub
xorb
xchg
jb
rcrl
jbe
jns
out
test
mov
jecxz
xor
push
ficoms
jno
jl
pop
mov
inc
adcl
sbb
je
mov
xchg
cmc
mov
xor
dec
inc
sub
cwtl
cmp
mov
lds
or
in
fs
pop
pop
data16
mul
idivl
repz
mov
pop
jmp
data16
jmp
sub
ss
and
addl
out
cld
int
scas
stc
inc
orb
test
mov
push
enter
dec
push
shll
cmpl
push
mov
push
adc
push
addl
push
and
add
sarb
mov
cli
cmp
mov
shrb
into
sbb
test
dec
mov
jo
jecxz
popa
push
mov
cmp
stos
ljmp
xchg
xor
mov
cmp
sti
sub
jbe
xor
lcall
and
cmp
or
xor
ret
lret
lods
jbe
ss
out
pop
fcomp
cmp
xchg
aad
lds
cmp
xchg
cli
stc
test
cmp
out
cmpsb
mov
cmp
loopne
dec
or
and
std
adc
pop
sub
ret
pop
movsb
push
lahf
sbb
mov
jnp
pop
mov
jle
adc
test
mov
xchg
jmp
sbb
cmc
mov
and
or
jnp
mov
enter
fmull
mov
adc
test
mov
sahf
sbb
cmp
movsl
jns
out
les
and
mov
out
ja
pop
xor
dec
xor
add
insl
enter
in
loop
fwait
in
or
test
adc
ret
jns
hlt
mov
mov
pop
pop
iret
int3
xchg
orb
sbb
aas
cmc
frstor
xchg
xchg
sub
fs
xorb
leave
notl
fcomps
and
fincstp
and
shlb
dec
fwait
mov
mov
dec
ss
mov
int
insl
mov
push
sub
pop
movsb
test
mov
inc
cltd
lods
cmpsl
or
jno
jbe
out
aam
in
out
pop
jge
das
cli
jecxz
imul
add
mov
mov
dec
ss
sti
xor
lods
lret
mov
imul
adc
sbbb
test
mov
add
adcl
mov
repnz
aas
xor
std
push
push
cmp
inc
fs
lds
and
dec
add
sbb
mov
scas
jge
inc
repnz
dec
test
jg
leave
cmp
mov
pushf
sbb
fsubl
out
xor
push
loop
pop
mov
mov
cmc
pop
mov
pop
adc
xchg
test
inc
repz
mov
pop
dec
mov
dec
xchg
fld
imul
aam
mov
rclb
mov
push
test
inc
adc
cmp
xlat
addl
jmp
mov
mov
add
lret
daa
sbb
push
fidivrs
je
jle
call
in
inc
mov
repnz
adc
jecxz
adc
insb
sub
or
rcr
scas
out
iret
or
sbb
push
pop
testl
push
xor
dec
sbbb
cld
imulb
cmpsb
loope
pop
xchg
xchg
xchg
hlt
in
cmp
inc
shl
add
xor
adc
dec
jp
js
je
xchg
push
jmp
lret
lcall
leave
fsubrl
dec
das
pop
ljmp
jbe
push
in
or
mov
push
mov
repnz
cmpsb
mov
push
push
inc
gs
push
fs
in
add
jecxz
lret
mov
addl
pop
dec
cld
xor
out
xchg
xor
mov
inc
jmp
cltd
jne
mov
daa
test
push
xor
adc
jnp
pop
outsl
push
sbb
cmp
adc
addr16
inc
or
icebp
test
and
nop
dec
out
dec
pushf
sbb
jp
roll
scas
ja
adc
adc
addr16
adcb
mov
jb
fs
dec
pop
jl
push
aam
cs
fistps
or
inc
cwtl
clc
ds
sbb
in
push
xlat
adc
mov
add
push
movsl
jae
mov
sub
loop
sahf
cwtl
mov
cmp
int
jl
js
inc
mov
inc
out
push
lcall
ja
pop
pop
pop
push
lods
inc
fsin
scas
mov
mov
aad
sub
pop
mov
jp
pop
sbb
pop
jle
bound
aaa
mov
in
push
jg
movsl
dec
shlb
ret
lea
mov
push
inc
dec
out
lock
outsb
cwtl
nopl
mov
mov
insb
aad
push
xor
xlat
cmc
inc
inc
loopne
lahf
push
dec
out
ss
mov
out
add
loope
sti
xor
dec
push
inc
pop
and
dec
or
loop
pop
dec
cltd
cld
pushf
sub
dec
in
shl
in
mov
divb
pop
outsl
ljmp
jbe
xor
cmp
adc
sbb
enter
lret
out
and
push
mov
notl
adc
mov
add
in
sub
adc
mov
jbe
dec
cmc
xor
adc
pusha
loop
add
loopne
std
enter
xor
lcall
xor
lahf
xor
fld
and
insb
addr16
in
xchg
add
push
adc
fcmovnu
lea
inc
pop
or
sub
dec
into
mov
adc
aaa
pusha
mov
aad
iret
push
call
jmp
dec
xor
fmull
pusha
inc
xchg
mov
addr16
or
add
das
xchg
fstpl
adc
xchg
cld
scas
fstpt
xchg
es
add
cwtl
out
pop
jo
pop
add
sbb
add
jne
cmp
push
inc
iret
dec
sbb
fmull
push
stc
sbb
mov
cwtl
mov
fsubrl
jns
test
push
pop
mov
pop
add
mov
out
jp
das
mov
xor
add
lds
fs
mov
sbb
adc
roll
das
xor
push
push
or
lds
scas
filds
out
mov
sbb
sarl
syscall
clc
mov
lcall
js
lret
push
mov
insb
mov
xchg
addl
mov
clc
mov
sbb
outsb
aam
rcrl
ja
movsl
add
and
fnstcw
dec
leave
or
pop
loop
pusha
paddw
inc
das
stc
inc
mov
push
enter
enter
repnz
jns
imul
pop
and
ss
dec
das
out
into
mov
in
fiaddl
scas
cwtl
sti
adc
fdivp
xchg
xchg
out
popa
adcb
push
loope
add
lods
push
ret
stc
or
xchg
mov
mov
xchg
rolb
push
xor
add
push
enter
out
repnz
mov
mov
mov
jg
dec
push
mov
outsl
loope
int3
ja
aas
out
sub
outsl
cmp
and
int3
subl
movsb
xchg
lcall
sbb
dec
or
push
out
push
dec
jp
repnz
jb
xor
outsl
adcl
stos
xchg
xor
pushl
sub
and
pop
lret
stos
pop
mov
lret
inc
dec
pop
test
xchg
daa
mov
loope
data16
addl
fs
push
sub
ja
adc
sbb
roll
enter
cmp
sub
xor
nop
adc
pop
test
pop
cld
fisttps
pusha
fsts
jmp
xor
shrl
xchg
adcb
test
rclb
outsl
imull
cmpsb
popf
fs
add
out
jo
sti
hlt
xor
jo
mov
xor
dec
repnz
jns
add
cmp
xor
cltd
cmp
inc
push
js
sbb
dec
pop
sahf
jo
push
out
lea
dec
jl
add
sub
iret
mov
xor
push
push
mov
std
scas
getsec
ds
sub
cmc
stos
test
pusha
cli
add
mov
fs
push
scas
out
xchg
jnp
arpl
and
jnp
rol
imulb
shlb
in
nop
lahf
mov
jp
shrl
sbb
out
ret
fdivs
sarb
jecxz
jb
ret
pop
lret
es
mov
out
shll
dec
pop
sbb
mov
ljmp
lahf
rorb
jno,pn
cmp
test
bound
jge
add
and
xchg
xchg
dec
mov
jge
stos
push
fabs
call
inc
inc
into
mov
mov
jg
push
lea
mov
xor
fnstcw
loope
sarb
mov
fs
mov
js
rcrl
cs
out
cmp
mov
cmp
jb
mov
jne
xchg
mov
repz
imul
test
add
push
jns
push
rcrb
mov
inc
divl
loopne
inc
lds
call
xchg
xchg
jo
cmp
fdivrl
ljmp
mov
pop
xor
mov
dec
lock
xchg
outsb
push
pop
je
mov
ljmp
iret
pushf
adc
outsb
dec
add
sub
jno
pop
gs
mov
xchg
cmp
or
insl
cmp
and
das
ret
add
mov
add
jle
rorl
mov
mov
cwtl
jg
pop
test
cmp
mov
cmp
sti
fsubl
inc
sahf
and
mov
mov
xchg
add
jno
rclb
stos
pushf
dec
or
jecxz
loop
popf
clc
and
adc
sbb
jle
rolb
sbb
loopne
ffreep
ret
outsl
sbb
jg
out
outsl
xchg
pop
xchg
sbb
cvtps2pi
xchg
or
mov
cmpsl
loope
lret
bound
aaa
cwtl
imul
outsb
push
outsb
inc
cmc
pop
shrl
loopne
jno
pop
test
cmp
push
pop
push
repnz
popf
ss
cmpsl
sbb
mov
call
xchg
scas
jne
sub
cmp
lea
fstpl
pop
sbb
mov
stos
push
aad
pop
call
and
cmpsb
out
bound
ret
clc
and
xchg
pop
lret
push
in
add
jnp
xor
mov
into
mov
cmp
cmp
mov
pop
dec
pop
xchg
pcmpgtw
fildl
adc
xor
sbb
imul
int
and
mov
xchg
imul
ds
jo
sbb
mov
cmp
dec
shlb
ds
mov
jge
xlat
mov
std
out
sub
dec
icebp
mov
push
adc
jp
jg
xchg
adc
scas
and
sub
adc
cmp
xor
imul
pop
fildl
sub
lods
pop
pop
decb
cmp
sub
lret
jl
jno
pop
sbb
ja
cmpsl
or
outsl
sbb
outsl
ljmp
xchg
xchg
xor
push
dec
out
adc
lods
pop
andl
push
out
ds
mov
arpl
inc
out
xchg
hlt
imul
xchg
insl
pop
push
push
xchg
add
inc
add
inc
clc
pop
sub
or
subb
popa
adc
fsub
xorb
in
ljmp
jge
popf
adc
push
loope
fwait
rcr
scas
lea
mov
cmp
in
out
sub
cs
xchg
in
lahf
jo
sub
jle
xchg
stc
repz
out
sub
mov
sub
ud1
adc
dec
mov
pop
xchg
sub
sub
sub
push
dec
shrb
mov
cmpsl
mov
sub
adc
das
stos
lea
or
lods
stos
fs
flds
or
xchg
fadd
testl
dec
out
add
cmp
jbe
sub
sub
dec
in
mov
xchg
mov
inc
ljmp
fisubrl
mov
imul
xor
and
adc
or
xor
andl
jns
pop
mov
dec
xchg
dec
cmp
mov
sbb
loop
mov
loopne
mov
xlat
call
mov
push
repz
ret
lcall
xchg
lea
outsl
lock
out
ljmp
imul
xchg
jnp
testb
add
add
dec
sahf
sbb
sub
fsubp
mov
arpl
in
mov
push
outsb
adc
sbbl
imul
movsb
jmp
mov
dec
lret
rclb
push
cli
loope
or
pop
shlb
add
sbb
sub
shlb
pop
stos
fmull
sti
inc
clc
xchg
cmpsl
adc
mov
pop
inc
loope
cmc
inc
and
or
ficomps
imul
insl
inc
aas
mov
add
mov
mov
and
xor
inc
rorb
subb
and
dec
or
mov
add
ljmp
and
test
cld
fwait
in
sahf
scas
xchg
sbb
dec
repz
sbbl
lock
addr16
fdivl
cmpsb
out
xchg
sub
pop
cmpsb
popa
jbe
rcrb
out
clc
sbb
cli
push
cmp
in
orl
int
push
notl
loope
arpl
enter
jo
arpl
sbb
inc
clc
stos
testl
outsb
push
cli
fisttps
mov
jle
xchg
sbb
add
iret
adc
push
fisubs
xchg
das
xchg
xor
xchg
scas
add
stos
mov
fsubrs
insb
jp
pop
imulb
cmp
mov
insl
int
pop
lcall
out
lret
xlat
xchg
push
in
lea
push
mov
xor
mov
xchg
cltd
test
test
test
jo
mov
fwait
sbb
jmp
pop
cmp
cmpb
jge
scas
insl
and
inc
adc
dec
scas
xor
adc
mov
sub
lds
aaa
int3
adc
dec
jae
adc
es
jg
scas
lds
xchg
mov
pop
cmp
lret
sub
andb
or
shll
jp
and
clc
pop
nop
mov
jo
xchg
dec
lahf
push
fldl
push
jmp
mov
mov
iret
add
xchg
mov
and
dec
movsb
dec
mov
jae
mov
sub
xor
mulb
push
movsb
cmp
mov
mov
fwait
mov
or
dec
mov
mov
mov
pop
hlt
fisttps
popa
hlt
insb
mov
fsubr
xchg
push
add
std
out
adc
cmp
pop
vpmulhw
xchg
push
sbb
adc
and
cmp
dec
adc
push
xor
outsb
jcxz
cmp
cmp
ljmp
or
inc
outsl
inc
int3
cmpsl
mov
mov
xor
mov
daa
sbb
lret
pop
mov
and
adc
dec
mov
arpl
ret
pop
and
movl
xor
cmp
xor
ja
adc
repz
dec
test
loopne
bound
in
push
cmp
fnstenv
or
push
andps
negl
lret
stos
sar
cmp
fisubl
pop
push
add
into
push
stos
std
jge
std
ljmp
ret
jp
arpl
cmp
scas
es
jle
out
xchg
nop
int3
xchg
xchg
push
jp
pop
adc
and
aam
cmp
shlb
mov
popf
iret
aaa
sub
test
sbb
mov
xchg
loope
daa
gs
inc
cli
dec
mov
pop
sti
imul
es
cmpsb
lock
aas
jle
pop
sub
dec
ljmp
xor
stc
and
cltd
aas
push
mov
mov
lds
cmp
pop
xor
cld
sub
push
jae
inc
sub
mov
aam
loope
scas
mov
in
adc
sub
add
popa
das
clc
dec
push
push
mov
cmc
testb
dec
adc
lret
inc
sbb
pop
lret
xor
repnz
data16
push
add
bound
jl
shrb
rcl
sbb
shr
ja
mov
cmpsb
cmp
mov
and
les
jno
mov
insb
les
fs
insb
mov
pop
fstl
sbb
jl
pop
dec
dec
stc
scas
pop
and
rcr
loop
xor
push
push
ja
int
clc
ja
rolb
shl
xchg
pop
push
xor
dec
jae
repz
lret
sarl
fisttpl
out
fcmovne
inc
imull
incb
imul
sbb
cmc
call
lret
lods
lcall
mov
sub
stos
mov
add
into
jp
mov
mov
push
jae
push
lds
bound
test
fwait
ret
loope
in
inc
xchg
insl
ret
testl
jnp
xchg
adc
sahf
fcom
lock
mov
stos
enter
push
jns
xchg
int
addl
xchg
aam
or
inc
lret
xchg
in
daa
mov
pop
pushf
or
add
cmp
cld
push
stc
mov
cli
push
inc
test
xor
outsb
mov
mov
notb
stc
daa
xor
into
notl
push
pop
sbb
lds
popf
ljmp
mov
lods
lods
addr16
stos
sub
or
lods
jne
cwtl
jge
rol
jecxz
inc
mov
rolb
inc
xchg
sub
push
push
push
push
cmp
call
jl
add
mov
in
nop
sbb
add
sbbl
xor
ja
mov
push
mov
daa
jnp
adc
aaa
cmp
popa
mov
loop
ja
sti
int3
out
les
adc
jmp
jb
push
incl
sub
call
shll
fucomi
xadd
pop
rorb
push
adc
cmc
sbb
js
adc
push
clc
dec
out
mov
bound
sbb
pop
test
mov
enter
and
in
xor
push
aam
push
xchg
xor
outsb
and
or
jae
dec
stos
pop
movsl
pop
mov
or
sbb
lea
fldenv
mov
mov
fs
pop
daa
xor
pop
movsl
jae
ret
ss
int
push
hlt
pop
inc
insb
shll
cmp
or
xchg
fisubrl
pop
loop
dec
call
leave
mov
jmp
xchg
enter
mov
or
lret
jecxz
add
lcall
pushf
pop
lea
sti
gs
arpl
cs
jge
leave
stc
dec
data16
shrb
idiv
fwait
shrb
insb
xor
fstps
dec
xchg
aam
inc
xchg
dec
xor
out
lds
push
mov
jg
mov
ja
repz
or
cld
sbb
xor
or
inc
pushl
sub
adc
rcrl
pop
in
cwtl
inc
les
push
fsubr
ds
popf
out
push
loopne
adcb
adcl
cmp
loop
in
xchg
shlb
scas
aam
mov
sbb
imul
std
push
fdivrs
aam
rcl
xor
shrb
in
pop
loope
repz
cmp
je
mulb
mov
fs
lcall
jecxz
xchg
dec
push
ret
mov
cmp
push
push
movsb
aam
mov
jno
imul
xlat
gs
ds
dec
out
ds
je
inc
loope
mov
shl
pop
inc
mov
stc
rcll
cli
cmpsb
mov
push
and
push
mov
mov
xlat
jl
jno
scas
jbe
sbb
and
fildll
cmp
jnp
sub
test
dec
jb
xor
arpl
loopne
jns
call
hlt
sbb
inc
inc
mov
adc
in
loopew
sub
mov
cltd
pop
arpl
mov
inc
xor
inc
mov
shrb
mov
and
mov
into
and
jl
dec
popf
sbb
fwait
push
or
cs
int3
imul
aam
cmpsl
sbb
ljmp
inc
add
add
cld
xchg
mov
cmp
and
dec
jg
rcrb
fsubr
addb
scas
in
mov
dec
cmp
mov
mov
jp
or
sub
rol
adc
daa
enter
lds
and
cmp
lret
push
add
sub
mov
outsl
insl
lret
fucomip
arpl
divb
cmp
adc
mov
cmp
cltd
add
iret
sub
sarb
sub
xchg
or
in
add
push
mov
dec
cmp
dec
and
xlat
xlat
jl
sbb
ss
out
jp
gs
lahf
nop
jge
inc
aam
pop
sbb
vmovq
shrl
xor
addr16
jae
pop
inc
popa
test
gs
adc
or
xchg
call
std
sbb
xchg
popf
sti
and
push
adc
sbb
outsl
sbbb
sbb
int3
aas
lock
movb
xchg
inc
jnp
sbb
std
push
or
jp
cmp
loop
into
add
in
mov
xchg
lret
xchg
mull
mov
fs
ss
ss
mov
mov
push
push
mov
sbb
sub
xchg
xchg
xor
mov
std
decl
ret
or
test
nop
sub
movb
lret
fstp
out
repz
test
mov
call
aas
push
cs
lahf
mov
xchg
mov
adc
or
ret
xor
jmp
sub
pop
push
data16
cli
or
push
test
or
cmp
mov
cmp
enter
loop
mov
adc
push
cmp
and
push
pop
mov
mov
loope
jno
cltd
xor
sbb
or
loopne
hlt
scas
adc
pop
jecxz
mov
popf
js
inc
or
movsb
xor
pop
ss
add
or
cmp
outsl
push
jg
or
adc
jne
js
aas
xor
mov
jae
icebp
sbb
xor
adc
hlt
les
data16
inc
enter
ljmp
mov
xor
cmpsb
xchg
fidivrs
arpl
xor
inc
push
das
in
cmpl
cmc
jge
sbb
imul
fiadds
movsb
imul
sub
test
insl
popf
push
inc
or
jmp
sub
jb
and
xlat
xor
sbb
cld
rclb
lods
inc
data16
cmp
jnp
jb
hlt
jns
pop
fbld
xchg
lods
push
or
mov
jno
inc
into
popf
add
shlb
adcb
mov
add
int
cmc
push
jecxz
jl
adc
rclb
insb
cmc
cmpl
jmp
cmp
sahf
lret
cmp
cmc
pop
sbb
icebp
push
pop
adc
rcll
insb
dec
xor
xor
mov
and
push
cmp
cmp
xchg
shrb
cs
aad
adc
push
outsl
leave
test
jp
pop
and
fldenv
dec
aas
mov
rclb
xchg
cmpsb
aad
adc
test
clc
and
and
mov
jae
inc
and
aam
mov
and
std
test
mov
mov
push
mov
jo
cmpsb
lods
sub
cs
int3
orb
je
aas
cmp
mov
enter
pop
add
cmp
cmp
lcall
popa
add
lahf
cmpsb
jmp
fcmovne
es
das
jge
lds
inc
repz
jmp
loop
mov
scas
dec
add
les
imul
fistpll
sbb
pushf
inc
lcall
push
js
cmp
xchg
cmp
push
out
pop
cmp
or
xchg
add
iret
int3
inc
mov
les
fidivl
lret
arpl
aam
arpl
sbb
dec
xor
orl
mov
sub
dec
repnz
imul
nopl
or
dec
adc
test
push
mov
subb
rcr
mov
enter
cmp
je
dec
or
inc
xorb
lock
movsb
adc
add
rorl
stc
inc
inc
movsl
int
mov
sbb
jecxz
pop
adc
std
push
iret
pushf
pop
mov
sbb
clc
fwait
stos
mov
adc
dec
sahf
mov
jae
mov
rclb
mov
addr16
inc
outsl
ret
js
pushf
cltd
aam
lea
jmp
imul
mov
ficoml
mov
rorb
mov
in
mov
adc
lea
dec
insl
inc
cmp
jle
loopne
add
inc
cmp
cmp
bound
out
add
inc
rcrb
clc
outsb
int
loope
imul
negl
and
call
lahf
loopne
mov
push
andl
or
aam
add
subb
pop
or
jp
push
sbb
add
adc
aam
lock
fnstsw
ds
aam
pop
fwait
jle
fistpll
lahf
xchg
push
xchg
aas
sahf
mov
add
out
xchg
imulb
xor
or
in
stos
popf
xchg
lea
xchg
push
mov
inc
fdivrs
push
gs
movsl
fmull
jns
inc
lock
mov
push
ficoml
mov
sar
rol
sub
das
adc
mov
add
test
fldenv
roll
sub
insb
in
sbb
xchg
test
push
or
cld
cmpsb
call
decl
push
adc
enter
insl
jle
cmpsb
js
and
pop
push
mov
and
ss
aas
xchg
loope
fs
fs
mov
mov
push
pop
xor
cmp
jb
xchg
into
mov
ljmp
insb
nop
dec
mov
push
dec
adc
sbb
cld
loope
xor
mov
hlt
sahf
bnd
add
push
push
dec
xor
pop
jne
mov
pop
push
stos
pop
push
jb
inc
xor
data16
push
dec
add
popa
in
out
loopne
adc
mov
mov
inc
mov
rclb
mov
lea
lret
cmp
adc
addl
loope
or
jb
or
mov
xchg
jae
dec
scas
loop
jae
in
dec
inc
pop
lcall
shrb
pusha
inc
cmp
aad
fistpl
sub
or
mov
adc
xlat
pop
push
mov
mov
sbb
ss
arpl
mov
repz
orb
mov
cli
mov
xchg
cmp
cmc
lock
and
lcall
scas
mov
notl
inc
in
mov
fs
shll
jmp
enter
sbb
in
dec
mov
xchg
ja
stc
xor
pop
dec
mov
orb
imul
popa
sub
enter
xor
lret
ss
cmp
push
mov
sbb
test
xor
push
mov
ret
jbe
imul
push
pop
mov
adc
addr16
in
stos
scas
inc
and
mov
out
mov
fstl
mov
mov
dec
mov
fisttps
mov
xor
jg
cmp
std
lock
adc
push
mov
ds
ds
sbb
xchg
iret
out
movsb
or
cwtl
sub
dec
int
mov
inc
mov
cmp
fists
sbb
cmp
jg
out
mov
mov
mov
add
es
sbb
jecxz
out
jp
inc
inc
scas
cmpsb
sub
inc
xor
rolb
in
lea
push
mov
jo
fwait
pushf
dec
outsl
push
xchg
mov
jo
ljmp
and
inc
mov
fisttps
ljmp
ds
add
xchg
add
stc
outsl
fldcw
push
faddl
jmp
les
mov
sti
daa
xorb
mov
shrb
sahf
stos
push
mov
popfw
mov
int3
push
out
cmpsl
fsubp
inc
in
dec
sbb
subb
xor
and
fmuls
jo
in
jnp
ljmp
sbb
mov
ds
jbe
nop
push
or
xchg
pop
push
cmc
dec
jl
push
xchg
xchg
stos
cmpsb
cld
hlt
push
aaa
sbb
sub
loope
rol
jle
cmp
push
mov
or
aaa
adc
adc
sti
xchg
sti
dec
add
jmp
mov
das
in
sub
xor
movsb
push
scas
jmp
xchg
fbld
fisubs
adc
cmp
mov
xor
and
pop
pop
pop
test
jge
stc
xchg
mov
fdivrs
fcom
fcmovne
jne
ret
lea
aas
out
dec
es
cwtl
andl
rcr
jmp
push
and
sbb
cmpsl
mov
pop
mov
and
jne
mov
pop
rcll
shlb
rcll
scas
lds
stos
mov
mov
pop
icebp
adc
js
push
fcmovbe
xchg
loope
xor
and
pop
and
mov
aad
xchg
jne
fidivrs
repz
pop
lret
jns
insl
gs
pop
adc
cmp
xorb
xorb
dec
jg
lret
push
lock
cmp
mov
imul
test
sbb
push
testl
test
mov
sbb
sbb
push
mov
and
jge
int
xorb
daa
push
lret
icebp
imul
sub
and
xchg
sbb
dec
dec
imul
ret
rorb
inc
int
sbb
push
imul
fstpl
jl
mov
or
jbe
filds
pop
mov
or
fs
cmp
mov
push
jmp
and
sub
cmp
add
in
popf
and
fistps
pop
test
mov
repnz
out
repnz
xor
in
lea
cmp
es
arpl
inc
mov
inc
lods
sbb
xor
inc
test
and
pop
cmpl
cli
or
pushf
jo
nop
mov
gs
arpl
call
mov
push
pusha
test
test
inc
dec
rclb
inc
jge
xlat
clc
xor
aas
fistpl
xchg
and
xorb
fists
or
test
test
sbb
and
stos
bndldx
aaa
sub
or
mov
jge
or
cmp
sub
jno
ljmp
divl
jne
jle
adc
jge
jns
fdiv
mov
adc
fimuls
fcomi
mov
aaa
mov
xor
ss
inc
cmp
adc
add
std
adc
sti
in
mov
sub
stc
sbb
out
cmpb
addr16
test
cmp
lds
lea
push
movsb
test
out
test
addb
pushf
or
dec
and
pop
pop
push
movsl
shl
aam
xchg
push
cmp
test
pop
mov
mulb
cli
sub
push
stc
jo
xchg
push
mov
xchg
ret
dec
out
je
jae
pusha
or
jb
or
popa
sub
dec
cmp
pop
jno
test
xchg
xor
vpshlb
cmpsb
sbb
sbb
fdivrl
push
inc
mov
push
test
jecxz
dec
cld
aas
lods
in
inc
cmp
jo
mov
dec
mov
ja
cs
mov
int
jmp
xchg
sbb
mov
push
adc
pop
adc
push
sahf
xchg
loope
adc
jmp
mov
std
cs
or
and
mov
mov
loope
jp
cli
into
mov
aas
pop
mov
daa
xchg
int3
and
add
mov
outsl
lret
sbb
cmc
pop
inc
push
inc
and
adc
subb
test
push
js
jns
push
push
flds
sbb
adc
pop
ss
lods
es
or
iret
ficompl
unpckhps
dec
adc
or
xchg
add
ss
cmpb
jo
leave
movsb
in
xchg
jl
add
cli
sbb
sbb
mov
lock
push
pushf
lods
pop
repnz
push
sub
mov
repnz
mov
or
push
aad
movsb
ret
stc
dec
sub
frstor
inc
jg
jmp
or
inc
pop
fwait
mov
mov
ss
dec
jno
inc
pop
jecxz
pop
push
aam
pop
jle
ds
loope
cmpsb
adc
sbb
push
push
mov
rcl
jnp
mov
clc
fsubs
pop
shl
xlat
xchg
in
push
jb
mul
jae
rorb
rcrl
xor
sub
aaa
mov
cmp
inc
or
fldt
mov
shrb
dec
popf
xor
jbe
add
imulb
iret
cli
mov
push
into
xor
dec
xchg
fcoml
dec
outsb
pop
popf
subl
cwtl
aad
stc
mov
adc
and
mov
fstps
xchg
and
mov
testb
adc
adc
ja
ret
jb
inc
into
sub
inc
push
sub
or
xor
lcall
leave
inc
stos
sbb
loopne
dec
nop
adc
mov
int3
orl
dec
or
rorl
pop
lcall
xchg
fcmovb
mov
jb
inc
fidivrl
rcrl
icebp
sarb
pop
sar
mov
mov
scas
xor
adc
cwtl
sbb
lret
das
inc
lds
mov
pop
xor
in
pop
cwtl
aas
out
aad
gs
loope
sbb
cmp
xor
add
test
dec
in
test
das
inc
sub
rorl
pop
fldt
xor
xor
mov
inc
mov
inc
push
ret
pop
lods
sub
lea
dec
push
ljmp
test
mov
fistpll
push
in
stos
test
ficomps
push
lea
mov
iret
sbb
rorl
nop
bound
cmp
push
icebp
repz
xor
mov
mov
dec
enter
fsubrp
inc
push
adc
cmpsl
cmp
lcall
push
mov
pop
repz
push
cmp
jo
pop
pop
sbb
xchg
mov
loop
test
clc
pop
dec
mov
arpl
xor
ucomiss
mov
pop
xchg
cmp
pop
fldt
insb
dec
imul
arpl
cmp
ret
jmp
adc
cmpsb
cwtl
mov
pusha
icebp
xor
loope
cs
or
cmc
es
dec
sbb
sbb
test
cmpsb
outsb
pop
repz
test
mov
into
nop
test
repz
xchg
fcmovnb
mov
adcl
jbe
xchg
inc
dec
popa
or
test
xchg
xchg
insb
rcr
sbb
jns
loop
lods
mov
jo
push
fucomi
jl
fmull
jns
icebp
scas
ret
xchg
lods
rclb
pop
jnp
test
push
jne
sub
test
loop
shll
sbb
das
mov
lcall
or
jecxz
inc
pop
addr16
lret
push
push
sbb
push
dec
push
call
dec
js
dec
cmpsl
test
dec
mov
xorb
ljmp
insl
dec
cmc
dec
int
insb
subl
mov
add
jb
imul
adc
and
aas
and
decl
add
fbld
mov
repz
imul
cli
ror
idivl
shlb
pusha
ljmp
iret
aaa
out
subb
mov
xchg
jmp
xchg
test
jecxz
hlt
adc
cwtl
nop
xorb
adc
jmp
sarb
out
call
jo
mov
cmc
mov
sarb
fdivrp
ret
sti
mov
rolb
scas
cld
and
add
cltd
and
sarl
aam
sub
cmp
leave
popf
dec
mov
sahf
negb
fstl
iret
xor
push
in
hlt
ret
mov
adc
sti
ret
sub
daa
lea
pop
mov
sub
push
stc
inc
popa
mov
adc
dec
in
or
lcall
xchg
pop
xor
xchg
mov
dec
sbb
clc
xor
mov
jmp
mov
jg
lds
lcall
je
inc
mov
shlb
iret
and
popf
dec
gs
cmp
xchg
jb
int3
mov
xlat
pop
add
mov
sub
or
pop
loop
xor
sbb
push
pop
sahf
lock
or
xchg
mov
jno
add
cld
shlb
jecxz
add
sub
iret
inc
push
dec
sbb
std
xchg
cmpsl
mov
lret
jne
and
leave
mov
mov
sahf
dec
pusha
stos
cmp
sahf
jbe
cs
sbb
cs
xchg
add
mov
cmp
mov
jb
pop
xor
inc
fstpl
xchg
push
inc
mov
push
cmp
sahf
popf
leave
push
ljmp
dec
sub
sahf
int
and
mov
ffree
movsl
call
adc
jp
or
and
fists
mov
or
ret
push
ja
mov
sbb
out
mov
aas
popf
sbb
mov
aaa
xor
out
add
outsl
mov
xchg
sbb
pop
cmpsl
add
scas
pop
jg
cmp
ret
lcall
xor
mov
andb
mov
inc
scas
mov
push
sarb
movsb
dec
hlt
leave
in
out
shlb
imul
or
roll
std
movb
nop
xchg
cld
iret
mov
dec
push
push
clc
and
je
ret
xor
mov
and
out
push
scas
arpl
xor
in
mov
xchg
jns
sti
ss
adc
cmp
push
jecxz
mov
sbb
xchg
fisttps
loope
xchg
pop
pop
hlt
jne
jo
ds
or
pop
mov
repz
cs
and
sub
xchg
sbb
je
pusha
in
sub
sub
lret
xor
sbb
adc
or
pop
or
lods
push
repz
fnstenv
mov
mov
pop
mov
das
fnstenv
xorb
mov
mov
xchg
xor
daa
in
movsl
or
push
or
cltd
andl
jg
les
xlat
stos
xlat
nop
repnz
jb
push
pop
mov
inc
outsl
pop
es
sbb
in
dec
mov
test
inc
repnz
pushf
movsb
sub
mov
mov
sbb
movsb
mov
push
mov
push
xchg
adc
jge
addr16
test
sub
inc
pop
popf
aad
pop
rcrl
xchg
outsb
pusha
pop
jb
ret
inc
mov
das
negl
cmp
lods
aad
ljmp
add
cltd
xchg
test
sub
push
dec
out
sbb
xchg
in
jle
push
cld
xchg
inc
mov
sub
imul
sub
cmp
cmp
pusha
adc
mov
insl
inc
iret
fidivs
fidivl
leave
pop
dec
jge
mov
xchg
push
mov
inc
xchg
adcb
fwait
add
cli
repnz
pop
add
mov
jae
jge
adc
fwait
mov
mov
sar
ror
loope
cwtl
jnp
cmp
xchg
jle
pop
mulb
loope
mov
out
aad
and
jp
xchg
adc
lahf
pop
gs
faddp
dec
test
sbb
push
push
imul
jecxz
inc
cmp
lods
mov
int
sbb
bound
lods
in
std
xchg
adc
leave
mov
iret
jmp
and
or
movsb
mov
xor
push
das
imul
hlt
mov
ljmp
mov
jl
test
xchg
clc
sbbl
insl
incb
sub
push
cmp
add
lea
mov
in
popa
ss
xchg
das
aaa
mov
inc
mov
dec
lods
cmp
xor
fldt
rcll
sbb
dec
addps
lea
leave
inc
stos
test
xor
cmp
shrl
das
and
frstor
pusha
sub
rcll
fists
mov
pop
push
and
shl
aad
lea
xlat
adc
jg
lea
xchg
lods
mov
xor
add
fcoms
popa
sahf
add
mov
ja
test
inc
push
mov
pop
inc
jne
cmp
into
cmpb
and
stos
push
push
mov
add
xor
pop
int
xchg
inc
push
daa
outsl
fnsave
pop
inc
jns
fstpt
adc
jb
adc
into
mov
jecxz
cmpb
loopne
cmp
sbb
fwait
lods
sub
imul
lock
aas
add
xor
mov
cmpsl
adc
cld
cmp
into
xchg
testl
push
fs
add
pop
mov
aas
jl
or
inc
lret
jne
xchg
stos
push
mov
pop
cmpsb
jge
aad
repz
mov
ja
inc
dec
xor
rcl
in
push
les
mov
les
push
aam
mov
fnstsw
nop
mov
xchg
mov
std
cs
shr
jl
int3
std
push
xchg
push
aam
imul
lods
push
dec
sub
insl
adc
incb
xor
mov
mov
addb
and
mov
decb
rolw
xchg
cli
and
faddl
dec
or
push
jl
data16
xchg
pop
movsb
push
xor
in
stos
rcrl
push
dec
and
in
sub
js
aad
add
repz
pop
cmp
lcall
lods
idiv
aam
in
cmp
mov
scas
pop
cmpsb
sahf
aaa
hlt
adc
loopne
push
or
in
inc
adc
outsl
mov
cs
inc
insl
in
daa
jmp
or
les
popf
aaa
dec
pop
test
push
mov
maskmovq
notl
sbb
call
jns
fidivl
xchg
jmp
ds
inc
mov
push
xchg
jae
scas
mov
or
pop
adcb
insl
in
ret
aam
cmp
rorb
push
clc
lcall
std
xor
in
loopne
scas
mov
push
pop
add
fbstp
mov
pop
int
push
pop
cwtl
das
stos
xor
inc
pop
push
lds
push
mov
int
loope
jae
xchg
ret
jnp
fidivl
cmp
cmp
fiaddl
dec
xor
mov
cltd
add
loope
and
xlat
int3
cmp
or
and
inc
outsb
outsb
addl
mov
es
adc
and
movsl
arpl
in
mov
dec
add
sbb
push
pop
xor
addr16
jnp
and
sbb
xchg
test
arpl
stos
add
cltd
push
lret
arpl
dec
cmp
xlat
movsl
and
hlt
sub
mov
filds
adc
sbb
movsl
loopne
mov
adc
aad
stos
je
mov
inc
std
ffree
subb
or
dec
cmp
mov
arpl
add
xchg
test
gs
mul
jge
in
les
dec
cld
test
xchg
jge
andb
std
xchg
hlt
sub
adcb
xchg
jle
in
push
or
mov
popf
xor
mov
gs
cmp
test
xchg
xor
mov
pop
add
inc
ja
cli
xlat
fstpl
dec
int3
mov
mov
xchg
or
or
enter
jne
mov
cmpl
ds
xchg
pop
mov
adc
mov
subb
stos
in
andl
inc
in
inc
push
ds
mov
mov
mov
xor
addl
cmpb
xchg
mov
inc
pop
jmp
insl
cmp
add
or
sub
mov
pushf
push
jb
sahf
sti
add
push
cmp
cwtl
and
pand
jns
cld
int3
xchg
rorl
mov
inc
xchg
sarb
popf
subb
arpl
iret
mov
insl
aam
dec
pop
jnp
daa
mov
inc
and
dec
inc
sbb
fcomi
lret
sub
sti
roll
jge
movsb
mov
mov
add
pop
sbb
test
sub
cmpsb
sti
or
lods
int3
js
pop
push
or
ja
pusha
ret
popa
dec
je
mov
cmc
in
pop
pop
jmp
in
xor
idiv
cmc
lahf
addb
adc
adc
mov
mov
and
sbb
ret
add
je
xor
dec
mov
add
mov
inc
or
enter
movsb
or
and
frstor
dec
push
xor
hlt
lods
fisttpl
xchg
sbb
sbb
cmp
xor
pushf
fst
inc
sub
stos
or
jmp
jo
sahf
xchg
mov
cmp
push
mov
inc
xor
out
cmp
mov
dec
jo
lcall
sbb
insl
xchg
jge
cli
sub
dec
aaa
fimull
arpl
ss
iret
and
mov
xchg
mov
xchg
mov
jl
dec
xor
ljmp
faddl
pop
xchg
sub
pop
out
sbb
sbb
add
pushf
scas
out
sbbb
cmp
cmp
pop
aaa
sub
xchg
int3
jle
loope
mov
xchg
ljmp
cmp
push
orb
stos
push
repz
xchg
movsl
pop
sub
mov
pop
push
push
dec
es
xchg
fisttpll
pop
clc
out
dec
sti
push
xor
or
or
jmp
outsl
dec
in
mov
outsb
lock
sbb
lret
dec
inc
pop
scas
push
dec
mov
xor
cld
mov
inc
mov
jnp
jmp
adc
aad
and
mov
addr16
cmp
outsl
gs
leave
add
movsl
fwait
ret
imul
hlt
popa
xchg
inc
jmp
jecxz
or
int
inc
popf
fwait
push
dec
mov
cld
les
xchg
xchg
inc
or
aas
cmp
fabs
insl
add
add
xlat
dec
sub
and
aam
lcall
lcall
imul
and
aad
add
xchg
dec
cmc
mov
aaa
lods
pop
lahf
mov
jo
mov
xor
ds
ds
sbb
push
mov
out
out
mov
lahf
jo
sbb
mov
cmpsb
es
adc
jne
mov
pushf
ja
inc
divl
cmp
addr16
add
out
jg
push
cld
imul
ljmp
mov
xchg
mov
inc
daa
pop
and
hlt
sahf
mov
push
lret
dec
sbb
outsl
stos
sub
push
push
bound
aad
adc
in
test
jge
jbe
int3
mov
dec
dec
push
in
mov
fistpll
pop
roll
and
out
adc
outsl
imul
and
fsts
mov
test
pop
pop
xor
inc
pusha
testl
daa
jbe
int
mov
jae
xor
stos
cld
push
inc
mov
or
aam
out
lahf
xchg
adc
lahf
jl
rcll
add
push
cmp
es
or
shlb
sbb
in
daa
mov
mov
movsl
mov
mov
sub
xor
dec
pop
lock
sub
or
sbb
dec
lcall
aad
cmp
in
ss
decb
adc
je
loope
in
xchg
pop
xorl
stos
shlb
into
mov
je
sbb
cld
mov
mov
or
and
lea
lock
sbb
orb
aas
neg
cmp
or
mov
xchg
inc
ja
jle
add
fists
stos
sub
test
adc
aam
testl
hlt
insb
leave
push
arpl
sti
or
and
cmp
pop
lea
xor
add
dec
aad
cmp
dec
sub
int3
push
jb
sti
xchg
mov
sub
or
into
mov
out
test
pusha
mov
inc
xchg
jecxz
cmp
ds
fcmovu
shlb
jb
mov
adc
mov
dec
loope
jle
sub
mov
inc
fcoms
mov
ret
lea
inc
mov
or
aas
lahf
jmp
dec
xchg
out
ret
in
rcll
xchg
into
shrb
add
repz
wbinvd
sub
add
mov
push
dec
rcll
jl
nop
add
les
ss
jge
cld
cmp
mov
mov
hlt
lock
xor
jbe
cmp
xchg
xchg
lds
pushf
mov
cmpsl
or
sbb
dec
int3
cmc
dec
dec
mov
push
lahf
pop
jb
pop
sarb
fistps
out
inc
xchg
mov
data16
and
add
loop
add
stc
cmp
sbb
inc
ja
xchg
cmp
pop
aas
or
fstps
cmpsl
daa
mov
ret
ret
adc
je
adc
inc
movsl
das
aad
fists
inc
std
adc
xor
push
cmpsl
and
aas
aad
lcall
pop
push
adc
or
add
push
sti
xor
addr16
cli
jg
mov
mov
inc
lea
fldenv
insb
dec
cmc
push
neg
push
rclb
adc
xchg
testl
hlt
frstpm(287
sbb
inc
add
out
sbb
mov
mov
out
dec
and
dec
out
and
scas
inc
popl
cli
mov
popa
jno
loope
lea
fcomps
sub
inc
in
scas
pusha
sarl
loop
mov
sbbb
jne
push
sbb
push
sub
dec
sbbl
or
fidivrs
sar
mov
inc
xor
inc
sub
xchg
jne
aad
push
pop
out
inc
hlt
mov
jg
imul
cmp
and
shrb
xor
jnp
cmp
add
fistl
cmpsb
ja
cmc
mov
mov
sbb
aas
adcl
xchg
outsb
ja
pushl
cmp
bound
lcall
and
adc
call
into
xchg
and
pop
cmc
cmpsl
stc
adc
movsl
or
test
mov
es
das
dec
insl
or
cmc
sub
mov
push
cmc
or
push
xchg
out
aas
insl
inc
dec
fstpl
push
icebp
test
xchg
stos
out
lret
xor
pop
out
cld
cmp
jge
dec
jne
cld
jge
mov
xchg
lret
sbb
add
pop
push
inc
add
ret
jge
inc
mov
xchg
ror
hlt
add
cmp
hlt
sbb
fwait
dec
mov
adc
lock
sub
icebp
clc
sub
mov
xor
imul
jae
xlat
icebp
mov
jo
add
or
bound
cmpsb
out
lcall
mov
sbb
fadds
fs
sbb
push
add
jmp
mov
xchg
fwait
outsb
out
loop
lret
cmp
cli
dec
mov
push
and
cmp
add
bsf
movsb
pusha
cmp
iret
lods
pop
jno
dec
cmc
xor
jbe
loopne
inc
je
cmp
data16
push
adc
fsubrs
or
hlt
inc
push
cmpsb
fs
mov
rcrb
iret
jne
sub
pop
cmp
mov
lock
in
and
jle
insl
xor
ds
sub
iret
outsl
sbb
out
je
pop
sub
xchg
mov
jo
or
adc
jns
push
fucomi
insl
fsub
out
fcmovnu
sahf
sbb
inc
cmp
jp
es
sbb
inc
fldt
fsubl
or
repnz
jg
mov
movsb
jmp
jmp
cmc
rcrb
imul
loope
cmpsb
xor
jb
jnp
popa
mov
movb
xor
jae
popf
or
push
push
xor
add
pusha
pop
outsl
xlat
xor
ss
dec
imul
push
hlt
lahf
cmp
mov
add
lods
clc
mov
ret
jo
jbe
imulb
out
xchg
std
cmp
add
clc
sbbb
js
in
sti
xchg
dec
dec
ss
adc
jnp
jns
test
scas
xchg
cld
pop
xchg
or
cmp
jae
jle
or
test
mov
xor
lahf
dec
and
ret
fcoml
imul
jae
add
xor
mov
mov
jns
out
dec
out
sub
dec
push
fldenv
test
fs
dec
aam
outsb
or
cs
cs
add
cmp
test
fistpll
mull
out
mov
mov
test
push
test
sub
jle
pusha
pop
cmp
shll
aas
call
inc
roll
mov
dec
fstl
jns
xchg
icebp
ret
int
adc
test
cmpsl
aas
and
xor
scas
inc
jno
out
sub
pusha
fimuls
sub
mov
lahf
mov
ret
add
stos
and
das
pop
jne
fistps
test
leave
sarb
push
into
sub
xor
mov
jns
enter
push
push
imul
daa
and
lods
rcrb
mov
push
imul
cmp
mov
cmp
sar
inc
and
sbb
mov
ds
ljmp
mov
ljmp
xchg
adc
popf
scas
mov
mov
jle
jae
cmp
push
sbbl
out
lret
outsb
je
mov
ja
pop
mov
fs
sub
call
rcrl
jae
loop
jo
inc
xchg
jmp
adc
fmuls
or
sub
push
mov
clc
sbb
lret
lods
call
xchg
cltd
dec
jb
pop
in
mov
ja
and
xor
or
data16
jmp
dec
test
sub
popa
pop
outsb
mov
lret
repnz
repz
pop
xchg
push
dec
stc
xchg
sti
ljmp
imul
js
mov
test
mov
xchg
fstl
imul
jne
push
mov
pop
adcb
add
xor
mov
shl
std
movsb
dec
fidivrs
jo
xchg
test
xchg
mov
jnp
out
dec
leave
stos
aad
mov
ja
lds
push
aaa
sbb
or
push
push
xchg
mov
mov
aad
pop
add
inc
xchg
and
movsl
cmp
inc
addr16
out
in
out
inc
ret
aam
lahf
sbb
pop
inc
aas
movsl
test
outsb
loop
jbe
lret
das
stos
les
add
lods
xchg
mov
daa
cmpsl
xchg
or
aas
loop
push
dec
jmp
mov
and
mov
mov
mov
popa
stos
or
je
sbb
mov
aam
mov
push
sbb
pop
cmp
add
sbb
pop
cmp
adc
imul
push
ja
rcrb
insl
push
jmp
lock
mov
add
inc
jnp
jbe
popa
test
int
out
cmp
sti
faddp
jmp
or
imul
cli
cmpl
inc
add
mov
cmp
dec
mov
jnp
pop
push
pop
jmp
push
or
pop
xchg
iret
xchg
pop
dec
cmp
enter
jmp
jl
jmp
decb
jo
jle
fnstcw
push
sub
ret
inc
cwtl
mov
ja
mov
pushf
nop
mov
jmp
lods
rolb
xor
ret
rclb
hlt
pusha
js
decl
jbe
mov
in
mov
xchg
repnz
lret
fcom
dec
or
or
imul
push
imul
fs
lret
pop
xchg
fs
cmp
shr
dec
das
xor
xchg
or
cwtl
cwtl
push
and
push
lock
shlb
addr16
lds
push
fadd
pushf
or
xor
enter
pop
cmp
xor
inc
popa
dec
pop
mov
dec
cmp
push
pop
sbb
cmc
or
and
cmpsb
mov
stc
loop
mov
fiaddl
arpl
in
das
push
out
div
add
es
push
dec
cmp
imul
rorl
sbb
push
decl
and
pop
xchg
adc
add
jne
std
inc
les
xor
jae
sbb
and
push
jl
push
pop
jle
lods
lods
pop
jne
pop
jecxz
les
push
pop
ljmp
addr16
fbstp
add
pop
imul
movsl
pusha
hlt
in
inc
add
clc
xor
adc
xor
pop
push
sahf
pop
or
arpl
mov
pop
pushf
cmp
xor
shlb
cmc
rcll
pop
rcl
lret
scas
pushf
jg
aas
xor
jle
add
and
mov
in
dec
cmp
imull
dec
nop
cmp
fsts
add
ds
jns
outsb
mov
dec
adc
loope
and
loope
aaa
outsb
shrl
jae
xchg
sbb
or
xchg
test
push
jmp
xchg
xchg
insl
xchg
mov
push
mov
xor
lret
add
dec
jnp
mov
insl
cs
insb
mov
xor
xlat
mov
pop
ja
cmpb
lea
push
outsb
xlat
fsubrl
andl
adc
adc
rol
lods
xor
sbb
mov
add
ljmp
cmp
xchg
jo
out
std
incb
inc
sub
mov
xor
outsb
lcall
stc
adc
push
adc
hlt
mov
aad
clc
and
xchg
mov
das
outsb
imul
adc
rorb
jmp
aaa
js
or
cmp
and
sub
mov
in
jmp
rcll
icebp
mov
mov
test
call
dec
pop
dec
sbb
arpl
dec
ret
mov
adcl
shlb
fisubs
test
cmpsb
add
gs
pop
inc
ja
jb
cmpsl
pop
pushf
sub
mov
mov
mov
daa
cmpsb
arpl
test
das
sub
or
lcall
lock
sbb
jae
in
stos
aad
pushf
aad
or
xchg
mov
lods
xor
xchg
adc
shlb
andl
out
xor
cmp
push
iret
jnp
out
dec
stos
je
xor
in
stc
imul
imul
sbb
sub
into
into
leave
cmp
fnstenv
sar
or
test
loop
push
outsl
imul
xchg
ds
jne
out
je
gs
sub
sub
dec
push
and
cmp
les
push
in
sbb
push
sti
mov
push
mov
test
scas
lahf
pusha
icebp
mov
nop
rclb
cmc
icebp
shlb
cmp
xchg
sbb
adc
inc
sti
test
out
pop
push
lods
cmpsb
dec
roll
mov
out
rcll
cltd
pop
in
int3
and
mov
ljmp
nop
loop
movsb
std
pushf
notb
mov
repz
jmp
lea
xchg
add
loope
out
lods
inc
test
shll
inc
lret
mov
out
add
inc
xor
shl
loope
cmp
cs
arpl
sbb
or
test
mov
lret
adc
cwtl
add
xchg
and
mov
arpl
sbbl
cmp
fnstenv
mov
push
mov
lock
xor
imul
mov
lock
test
pushf
adc
sbb
stc
adc
loope
xlat
mov
sbb
inc
sbb
cli
push
mov
outsb
xchg
repz
jmp
movsb
add
mov
jbe
scas
shr
dec
std
jo
lods
sbb
loop
outsl
mov
mov
or
lahf
inc
xor
jns
dec
fsubrs
fmuls
orb
loop
scas
mov
int
loopne
mov
inc
jg
dec
mov
je
int
jl
add
lds
xchg
arpl
aam
mov
lret
aaa
push
imul
sbb
jae
int3
push
xchg
inc
xchg
fwait
and
movsb
rcrb
bound
sbb
lock
or
dec
inc
mov
cld
test
ss
pop
dec
push
ret
adc
mov
adcb
lcall
inc
push
add
shrl
lret
mov
in
lods
add
fcompl
adc
movsl
rorl
cmp
push
xchg
mov
adc
addr16
inc
shl
mov
int3
push
mov
test
pop
inc
xor
incb
jne
divb
add
mov
adcl
pop
arpl
div
outsl
cmp
add
mov
pusha
insl
pop
push
mov
aam
jmp
icebp
jecxz
stc
jecxz
movsl
clc
cmp
out
pop
mov
arpl
sub
aam
lret
popf
mov
mov
pop
xchg
pop
fbstp
ficoms
jbe
shl
inc
in
mov
adc
mov
xchg
add
jg
enter
sbb
push
enter
or
movsl
cwtl
jb
stos
jae
mov
xchg
xor
leave
pop
mov
aam
dec
pop
arpl
mov
push
xchg
in
hlt
cwtl
pop
jg
and
gs
mov
hlt
lret
das
and
push
mov
jecxz
arpl
addb
inc
jne
popf
xchg
cmpb
sar
lds
mov
and
xor
xchg
push
dec
xor
push
mov
sbb
scas
in
addr16
cltd
or
roll
or
test
sbbb
flds
inc
or
sbb
and
mov
sarb
mov
cwtl
pop
fmulp
mov
xor
ljmp
sbb
cmc
int3
pop
add
ljmp
test
push
inc
daa
mov
iret
inc
xor
xor
fwait
mov
mov
dec
inc
or
fisubrl
xor
sbbb
inc
es
jbe
inc
pop
jae
xor
sub
sahf
mov
pop
jne
sbb
push
inc
jb
pop
cwtl
test
jbe
cwtl
into
mov
jae
or
and
dec
pop
cmp
pop
leave
mov
cmp
mov
or
lcall
push
nop
sub
outsb
scas
into
movsb
jnp
es
or
outsb
ret
loope
insl
jb
leave
pop
mov
pop
jb
testl
xchg
cltd
dec
aas
push
ss
hlt
inc
in
lock
test
push
rolb
dec
xor
sub
add
push
push
mov
inc
xor
movsl
sbb
pop
mov
test
add
ret
sub
pop
sbb
arpl
mov
xchg
jns
cmp
in
movsb
mov
outsl
imul
add
inc
cmpl
pinsrw
scas
repnz
addr16
outsl
imul
imulb
xor
in
adc
mov
sti
into
sbbl
adc
sbb
pop
push
inc
and
cmp
sub
outsb
roll
fbstp
sub
lods
clc
mov
in
cli
add
test
push
cmp
xor
push
xor
mov
push
rcll
in
cltd
inc
sbb
test
jae
mov
shl
xchg
cld
jne
in
cmp
mov
call
jmp
and
call
test
xchg
popa
cmpl
shr
cwtl
scas
out
sub
push
xchg
sub
and
jbe
pop
leave
mov
aad
xor
lds
dec
scas
dec
dec
xor
pop
push
sub
dec
pop
mov
mov
dec
lods
push
jg
jl
mov
es
mov
sub
call
mov
xor
ja
je
pop
shll
xchg
mov
xor
mov
add
pop
mov
mov
xor
cmc
aam
xchg
inc
jbe
bswap
mov
mov
mov
shll
fisttps
stos
pop
mov
xor
jmp
popa
mov
push
jns
loop
jle
jl
push
add
xor
xchg
negb
add
jbe
cld
sub
pusha
lcall
pusha
cltd
lcall
jo
pushl
mov
movb
push
sbb
sub
inc
mov
push
fsubrs
fwait
cli
cmp
movsb
movsl
cmc
mov
andl
das
lcall
mov
ret
jb
xor
lret
nop
js
push
bound
imul
int3
jge
mov
sub
icebp
pop
mov
insb
fwait
mov
push
mov
cmp
icebp
and
mov
jbe
cmc
enter
aad
aas
shll
and
movsb
jle
xchg
mov
mov
push
sarb
jmp
negb
mov
inc
push
push
mov
scas
jl
jmp
daa
inc
dec
lea
ss
mov
or
cld
or
jbe
stos
push
jp
dec
xlat
xchg
dec
into
test
nop
jl
sbb
xchg
mov
imul
or
int
lods
xlat
dec
imul
addb
sbb
mov
mov
cmp
dec
inc
stos
mul
mov
or
sub
sbb
pop
jg
jl
add
sub
nop
pop
repnz
loop
fnsave
es
and
popf
add
sbb
mov
mov
and
fs
sti
jb
push
ret
pop
sahf
sbbb
pop
icebp
add
sbb
aas
loop
inc
je
dec
iret
test
aas
lds
jno
out
ret
gs
mov
pop
mov
push
sub
jbe
jne
ja
add
mov
inc
jb
rorl
pop
sub
jo
dec
mov
cltd
js
in
add
mov
ficoms
xor
fwait
dec
divl
icebp
xchg
stos
cwtl
enter
call
push
cmp
xor
out
lret
movsb
inc
imul
sbb
push
dec
pop
and
inc
cmc
icebp
imul
pop
add
mov
fs
shlb
xor
sbb
aam
jp
adc
nop
stos
sbb
je
stos
jbe
inc
xorb
cmp
int
mov
subl
in
lea
filds
pop
lock
mov
loope
ja
cmp
jle
fldlg2
jg
in
push
cmpsl
jg
addb
imul
imul
sub
gs
mov
in
sub
loop
fidivl
and
sbb
lret
hlt
jg
push
mov
lods
xchg
ret
lret
insl
lret
sbb
inc
loope
sbb
dec
pop
popa
mov
ror
push
cmp
hlt
loope
aad
pushf
inc
inc
imul
lahf
add
mov
lahf
mov
mov
push
adc
outsl
out
es
filds
fxch
mov
mov
push
push
pop
jmp
xchg
mov
inc
push
mov
mov
outsb
pop
vmread
push
iret
je
adc
dec
jmp
test
sub
ds
lcall
push
jnp
sbb
mov
xlat
mov
fnsave
scas
cli
jnp
pushf
adc
cmpb
out
xchg
pop
jge
loop
hlt
or
pop
mov
dec
xorl
leave
movsb
mov
es
data16
cmp
xlat
adc
jmp
cmpsb
fcoms
js
sbb
decl
mov
pop
sub
xor
scas
test
fidivl
imul
adc
or
push
outsl
sti
cmpsb
aam
and
andl
or
loop
inc
aaa
pushf
xchg
sbb
mov
arpl
pop
aas
mov
mov
mov
pop
aaa
rcrl
stc
arpl
ljmp
cmp
jg
jo
je
mov
les
aaa
mov
mov
in
std
mov
and
enter
dec
in
xor
sbb
arpl
sub
mov
xor
dec
std
xchg
push
xor
xchg
inc
in
add
aas
add
or
push
scas
mov
mov
aas
mov
in
cmp
cmp
int3
loope
adc
outsl
mov
sbb
mov
jge
jae
rcrb
dec
mov
or
in
xor
out
xchg
dec
mov
pop
pushf
mov
or
pop
pop
lret
ret
sub
test
div
mov
jl
pushf
fidivl
int3
inc
mov
fwait
int
pop
shl
and
lcall
jnp
sahf
cmp
add
xor
adc
test
xor
shlb
leave
in
vpshufhw
mov
pop
and
lahf
add
ds
mov
imul
pop
dec
xor
pop
lods
js
push
mov
sbb
sbb
push
add
or
sahf
enter
clc
sbb
mov
scas
movsb
xchg
sbb
aas
dec
push
andl
fisubs
cmp
push
and
rorl
arpl
or
gs
push
xor
je
add
leave
adc
popf
adc
or
repz
movsl
sti
ret
subb
cmpsb
loop
bound
and
fwait
sar
cmc
fimuls
dec
ljmp
lock
mov
cmp
inc
in
sbb
rorl
sti
cmpb
pop
dec
movsb
ds
rcll
add
inc
scas
pop
movsl
lahf
mov
pushf
xor
jle
outsl
xchg
sbb
dec
xor
add
cmc
push
lock
mov
testb
call
ret
dec
and
clc
cmp
jbe
inc
push
test
mov
lahf
iret
push
stc
add
inc
adc
mov
out
sbb
lods
sarl
fs
jae
jno
pop
xor
in
sub
enter
cltd
jmp
shll
dec
lods
xchg
aaa
jb
sbb
push
mov
inc
adc
lret
pusha
addr16
or
adc
movzbl
jno
in
inc
nop
add
mov
fld
int3
xchg
mov
aaa
inc
add
xor
inc
push
ljmp
ret
lcall
test
jne
inc
sbb
imul
ficoms
mov
js
inc
insl
pushl
gs
cmpsb
sbb
lods
cmc
xchg
inc
and
adcl
fmull
dec
xchg
imul
mov
data16
mov
js
xor
std
in
mov
push
mov
pop
and
and
out
repnz
pop
testl
shrb
dec
lret
and
adc
lahf
hlt
cwtl
mov
mov
adc
mov
sti
adcl
ljmp
cltd
shl
cwtl
in
int3
jge
sbb
inc
dec
mov
pop
sbbl
shll
and
mov
pop
mov
sub
push
sub
insl
test
pop
movl
lea
rorb
jle
lret
lods
xchg
pop
sub
add
inc
std
add
push
hlt
arpl
das
in
cld
or
call
or
iret
int
fdivl
jo
popa
in
push
pop
xlat
pop
sub
ret
out
cmp
dec
lret
fldenv
iret
push
xor
data16
push
imul
mov
sbb
dec
jge
push
int3
mov
insb
popf
int
lds
push
pop
out
sbb
mov
xor
lds
pop
mov
hlt
icebp
jbe
cli
jb
cs
pop
add
inc
outsb
cwtl
cmpsl
in
jle
mov
punpcklwd
rcrl
push
pop
in
fwait
rolb
push
adc
sub
pop
sbb
outsb
pusha
shrl
sbbb
cmp
sub
push
mov
adc
xchg
stos
and
push
and
lcall
mov
adcb
leave
ret
dec
lahf
push
xchg
shl
push
int3
push
mov
loope
cmc
jmp
icebp
cli
comiss
pop
cmpsb
jle
ljmp
add
and
loopne
xor
xchg
jno
dec
mov
mov
push
dec
loopne
mov
jbe
adc
or
adc
stos
fcmovbe
inc
aad
pop
sbb
inc
imul
cli
test
inc
dec
push
pop
jl
mov
jns
jnp
pop
jl
loopne
add
ucomiss
ret
xchg
divb
fidivl
dec
adc
add
cmc
mov
int3
daa
ret
ljmp
push
pop
popf
lahf
pop
push
cmp
dec
or
mov
in
out
pop
cmp
push
lods
adc
pop
stos
pusha
in
cmp
add
push
xlat
xchg
icebp
cmpsl
cltd
push
jae
xchg
sbb
leave
xor
lret
jae
in
xchg
rclb
mov
fstps
inc
test
dec
mov
jp
push
lcall
inc
add
int3
xchg
or
add
fucom
fisttpl
fwait
pop
jge
inc
fistpll
xlat
cmp
out
lds
cmpsl
mov
into
dec
test
cwtl
push
mov
mov
inc
arpl
mov
lahf
sub
les
jnp
test
cltd
lods
rorb
mov
push
inc
into
sub
pop
loopne
movsb
adc
and
scas
jns
std
pop
fmuls
testb
mov
mov
roll
lods
push
xor
sbb
cmpsl
mov
lods
orb
mov
jg
jl
mov
pop
cli
and
stos
mov
jg
xlat
test
xchg
ret
testl
sbbb
push
shrl
scas
mov
shll
popa
ja
fwait
push
aas
aad
ret
inc
test
stos
out
cltd
cmpsb
add
ja
xchg
cmpl
cltd
jge
push
mulb
imul
sti
xor
stc
movsl
aaa
sti
ss
in
jo
shlb
loop
mov
ret
pop
dec
cmpsl
int
inc
add
cmc
daa
inc
mov
rorl
fsubrl
std
dec
mov
test
subb
and
push
cld
test
addr16
cmc
pop
add
stos
aas
fs
sbb
fsubl
clc
cltd
fwait
repz
mov
loope
cmp
in
pop
or
arpl
lods
cltd
jl
pop
stc
inc
inc
testl
and
dec
les
pop
mov
mov
inc
mov
mov
xor
ja
mov
imul
adc
and
pop
stos
sbb
shl
mov
repz
aaa
scas
mov
pop
pop
stc
mov
fidivrs
in
gs
pop
mov
add
pop
andl
or
sbb
push
out
filds
jp
mov
addr16
rcrl
adc
ficoms
pextrw
js
add
mov
xchg
shlb
insb
sbb
push
xchg
loope
add
push
add
loope
stos
imul
pop
fwait
or
push
add
adc
add
jb
inc
push
xchg
sub
xlat
fs
push
cld
fnsave
mov
dec
icebp
inc
enter
es
add
sbb
paddsw
jg
mov
test
or
jnp
rcrl
mov
ljmp
mov
cmp
xchg
ret
mov
sbb
sub
sbb
jge
sub
test
add
sbb
pop
out
xor
pop
cs
dec
jle
ss
in
dec
aas
call
mov
cmpsl
inc
jecxz
test
add
push
adc
jae
call
or
rol
jns
cmpsb
sti
push
lods
mov
push
aaa
daa
mov
call
xor
ss
and
call
jb
add
loop
leave
mov
ss
jb
lds
dec
dec
push
adc
stos
into
xor
pavgb
or
pop
and
push
int
jecxz
push
xlat
pop
adc
xchg
pop
cmpsb
in
or
xchg
je
sbb
cmp
sub
sub
xchg
outsl
push
xlat
aam
mov
push
cltd
pop
adc
ljmp
or
or
jg
mov
pop
popa
mov
jg
hlt
mov
scas
ds
arpl
ficoms
in
insb
es
stos
test
test
cmp
pop
sbb
and
xor
mov
lret
movsb
mov
cmp
outsb
sbb
test
jl
add
imul
aad
daa
and
addr16
adc
adc
scas
lds
adc
in
test
cmc
cltd
dec
push
xorb
clc
ds
and
outsl
imul
test
fistps
aaa
push
subl
mov
sbb
push
xchg
sub
dec
push
insb
sti
dec
insb
sub
arpl
cltd
or
sahf
pop
lret
mov
mov
sub
cmp
add
adc
adc
pop
roll
fsubs
xchg
push
mov
add
cld
popf
dec
imul
test
cmp
dec
sbb
xor
out
ja
pop
mov
scas
mov
mov
push
mov
sbbl
sti
mov
jo
mov
test
inc
mov
pop
push
mov
sti
sbb
fsubr
pop
out
push
sbb
fs
xchg
sub
pop
out
cmc
aaa
dec
fs
mov
push
lods
popf
and
pop
xchg
or
pop
dec
push
jle
lahf
cs
int
loop
stos
out
cmpb
int
cmpsl
adc
mov
and
or
push
icebp
into
jnp
adcl
pusha
mov
fstpt
push
pop
dec
outsl
aaa
mov
sub
decl
mov
pop
xor
ja
mov
lock
or
imul
add
xchg
push
push
jae
fnstsw
adc
or
push
xchg
imul
xor
dec
mov
aaa
cld
mov
or
pop
mov
imul
sub
cld
nop
cmc
xchg
jb
cmp
mov
adc
mov
sahf
mov
mov
fs
scas
mov
lods
out
icebp
mov
in
insb
ficoms
test
outsl
adc
pop
lcall
xor
int
cmpsb
xlat
imul
jmp
and
hlt
xchg
cmp
cmpsl
xchg
push
outsl
xchg
and
ret
orb
mov
jne
lahf
loop
call
fldl
mov
mov
cmc
pop
icebp
sub
mov
jmp
cmp
insb
fwait
lods
or
jo
xchg
fistpll
cmp
pop
mov
pop
fs
push
lret
add
cmp
mov
jp
jae
iret
cmp
shll
xchg
aad
mov
pop
push
or
bound
mov
sti
push
lret
add
out
mov
or
add
mov
gs
aaa
jns
push
inc
and
dec
mov
jnp
and
dec
jecxz
sub
sar
and
sbb
cltd
cmp
aaa
ss
movsb
xor
ds
push
addr16
xlat
inc
lods
push
xchg
iret
cmpb
pop
gs
pop
mov
xchg
in
cmp
xor
pop
adc
cwtl
cmp
or
insl
jbe
dec
ljmp
ret
lods
insl
mov
stos
repz
rorb
and
xchg
rcll
adc
lea
push
in
xchg
js
js
pushf
cmpsl
mov
popf
dec
push
add
xchg
imul
sub
div
inc
mov
mov
je
les
movsb
sbb
push
mov
mov
cmp
rcll
adc
mov
jns
mov
adc
cmp
rorb
mov
xchg
ret
inc
mov
lods
adc
pop
popf
int3
loope
popa
dec
lds
sbb
cs
mov
ss
aas
sub
cli
push
in
popf
push
jae
add
inc
rcrb
sahf
mov
data16
mov
pusha
mov
sbb
lret
adc
imul
inc
sti
jae
and
out
and
jbe
daa
mov
insl
nop
addr16
sub
movl
fwait
je
mov
mov
dec
outsl
xchg
pop
mov
add
stos
cmp
ret
push
daa
or
fs
push
icebp
daa
dec
mov
aam
daa
sub
jle
sub
lahf
sbb
repnz
aad
das
js
shrl
push
jmp
push
mov
adc
sub
stos
push
add
jbe
inc
xor
mov
je
outsl
fadd
lods
sbb
add
sub
fucom
out
cmpsb
test
lods
shrl
testl
jb
and
mov
or
sbb
pop
cltd
imul
mov
and
cld
dec
jmp
mov
inc
test
adc
fildll
iret
ss
mov
xlat
xchg
enter
test
sbb
push
lcall
test
popa
mov
rorb
inc
sub
or
cmp
jle
shll
mov
sahf
lods
sbb
xor
out
icebp
aaa
in
pop
jmp
jge
loop
mov
sbb
push
fldcw
cmp
sub
cmpsl
inc
imul
leave
repz
or
ljmp
fiadds
aas
lahf
insl
loope
cmc
mov
cmp
push
popf
jg
jle
enter
cmpsl
xchg
xchg
dec
adc
jbe
dec
fisubrl
jno
mov
xchg
out
push
pop
and
cmp
icebp
dec
insl
sti
call
jns
xchg
mov
and
bound
sahf
in
and
xchg
mov
iret
cld
js
xor
ja
repnz
lret
aas
push
subb
jo
js
js
outsl
jp
addr16
rorb
inc
or
icebp
mov
pop
xchg
cs
mov
ja
push
mov
mov
pop
sub
xor
push
xchg
cs
cmp
test
adc
mov
mov
xor
cvtps2pd
and
daa
in
aas
xor
xor
mov
movsb
sub
jbe
mov
or
repnz
add
fistl
cmp
mov
in
cmp
sahf
pop
in
fwait
sahf
pop
pop
aaa
popa
jns
fidivl
push
mov
rorb
stc
call
inc
lret
mov
daa
aaa
dec
or
loop
enter
lret
dec
subb
cmp
verw
sbb
add
sbbb
pusha
lret
in
imul
push
adc
scas
faddl
aad
and
fwait
mov
push
or
jmp
pop
mov
or
lods
mov
rol
imul
mov
cltd
jne
outsb
xlat
out
inc
mov
xchg
push
mov
je
jbe
jmp
mov
loop
cmc
testl
out
sub
inc
out
inc
xor
sub
pop
lahf
lds
jo
jecxz
mov
inc
call
neg
fldl
fwait
mov
adc
add
mov
sbb
sarl
mov
sbbl
or
mov
pop
test
jo
stos
mov
daa
rclb
aam
and
sub
ds
push
mov
enter
cmp
out
or
lea
pop
cli
daa
sub
idivb
scas
pop
ss
lods
cwtl
jp
mov
mov
cmpsb
insl
loope
incl
or
dec
xchg
add
add
rorl
dec
shlb
ror
repz
sbb
jle
adc
xor
dec
jnp
xor
cmp
add
dec
mov
fsubrs
mov
out
mov
pushf
cli
jns
fdivrl
gs
testl
lret
xor
fstpl
xor
cli
hlt
loopne
mov
or
sub
adc
dec
and
push
dec
push
sbb
add
test
mov
movsb
xor
jnp
and
imul
ret
out
jnp
mov
dec
mov
jmp
dec
mov
push
dec
ret
inc
jecxz
pop
js
fwait
lret
fcmovnb
int
push
jns
mov
xchg
add
ds
je
rclb
xor
jne
mov
xchg
lret
adc
out
or
lea
ljmp
pop
shl
adc
xor
inc
jmp
sbb
and
xor
mov
test
int
sub
pop
sub
clc
lret
and
popf
inc
leave
adc
jnp
and
jecxz
mov
stos
enter
daa
pusha
psubsw
mov
sarb
stos
mov
sbb
jg
roll
icebp
xchg
ret
lock
mov
inc
lret
icebp
hlt
cmc
mov
xlat
add
pusha
sbb
sub
adc
add
call
adc
add
test
in
sub
clc
aad
aaa
mov
ret
gs
inc
fwait
popf
bound
push
sub
push
xor
std
adc
addps
mov
inc
pop
mov
mov
cwtl
fidivrl
push
xchg
in
mov
pop
repnz
enter
add
mov
cmp
out
shl
inc
push
or
add
negb
sahf
add
std
sbb
mov
scas
cmpsb
fsubs
sbb
nop
mov
cwtl
test
orl
and
cmp
adc
add
sub
mov
xchg
pop
ror
xor
add
fildll
xor
mov
xlat
loope
shlb
aaa
leave
sbb
or
lods
jno
xor
ret
cmp
aas
mov
popa
push
mov
repnz
inc
out
inc
mov
repnz
jmp
add
lret
aas
and
mov
sahf
dec
push
xchg
mov
int3
adc
inc
sarl
popa
and
aaa
cmp
cmp
adc
adc
out
mov
sub
mov
adc
outsl
dec
mov
sar
pop
lock
divl
sub
pusha
add
pop
pushf
push
pop
mov
loope
pop
mov
xchg
push
leave
jnp
les
push
mov
mov
pop
jmp
push
cs
cwtl
fisttpl
sbb
inc
add
mov
jno
xchg
xchg
les
jnp
pop
xchg
mov
add
pmulhuw
xchg
inc
jp
or
add
sbb
jne
lret
push
ss
cmp
pop
mov
pushf
lret
push
movsl
mov
mov
ret
testl
inc
jb,pn
xor
mov
push
mov
jo
cwtl
jnp
loop
les
push
dec
sbb
xchg
pop
mov
adcb
sbb
jmp
pushf
pusha
daa
push
pop
push
pop
and
neg
push
pushl
jae
pop
xchg
cmc
out
iret
loopne
arpl
fptan
inc
cwtl
xchg
or
add
je
adc
mov
std
jmp
stos
inc
jns
popa
in
push
inc
push
mov
xchg
fiaddl
std
fildll
sahf
adc
fcompl
lea
outsb
rcll
pop
mov
fsubs
dec
or
popa
shrb
push
and
cs
subl
sub
shlb
loope
and
mov
mov
inc
cmc
shlb
hlt
push
ds
xchg
xor
sti
adc
out
movsb
xchg
scas
mov
mov
leave
lahf
pusha
sub
movsb
lret
inc
ret
jle
cmc
push
in
mov
inc
mov
pop
in
xchg
loop
data16
scas
ja
insb
pop
jl
lea
aas
or
in
rcll
dec
pop
xlat
jg
pop
repnz
mov
data16
xor
mov
mov
mov
in
adc
or
inc
loop
bound
xor
mov
shlb
inc
fbstp
dec
mov
push
mov
push
sarb
dec
leave
mov
daa
ja
inc
cmpsb
or
sub
xor
mov
inc
test
in
ds
in
xchg
cmc
cmp
dec
fwait
pop
mov
sahf
push
test
fadds
cmp
mov
xor
xor
cmp
out
push
sbb
leave
adc
ret
shrl
inc
pushf
mov
push
bnd
fimuls
xchg
mov
mov
mov
movsl
cltd
xchg
int
push
fistpll
fcmovne
dec
test
loopne
in
cmp
int3
pushf
inc
in
or
xchg
cmp
mov
jl
ret
inc
es
test
test
jmp
imul
mov
and
xor
jmp
jns
mov
ja
add
test
lock
sub
out
pusha
cmpsb
out
inc
dec
mov
push
mov
xlat
or
hlt
cmp
in
xchg
xlat
sbb
call
and
int
mov
fisubrs
inc
adc
add
mov
pop
pop
hlt
fwait
lock
lret
dec
movsb
das
movsb
mov
jl
xor
into
test
out
stos
or
cmp
push
mov
aam
pop
scas
mov
push
mov
jne
adc
jb
cli
ret
adc
jbe
lods
pcmpeqb
lcall
bound
sbb
sbb
sbb
cmpsb
or
xorl
mov
into
loope
jecxz
sub
xchg
andb
push
jns
sbb
mov
test
fbld
cmc
jl
inc
dec
push
or
fcmovbe
out
pop
popf
lods
jb
or
push
je
xchg
aad
jno
lret
mov
lret
icebp
sti
or
mov
test
jnp
mov
ljmp
pop
push
xor
push
out
dec
mov
push
xchg
ret
insl
fwait
imul
xor
addr16
sub
stos
pop
in
mov
mov
cltd
in
pusha
popa
pop
dec
push
into
dec
cwtl
popa
pop
loop
imul
cmp
pextrw
xor
jbe
xchg
imul
mov
dec
and
or
inc
pop
dec
pcmpgtd
pop
jl
daa
jno
inc
ja
ljmp
xchg
fwait
jo
jle
pop
repnz
add
pop
mov
mov
cmp
and
arpl
in
xlat
in
sbb
sub
and
test
cmpsb
cltd
inc
test
jg
jle
push
xchg
addr16
dec
sahf
in
das
mov
add
sti
cmpsb
and
push
in
rorb
stos
test
cmp
cmpsl
add
or
pop
and
mov
testl
sbb
lds
test
mov
push
add
and
out
into
push
leave
mov
adc
inc
dec
mov
jo
mov
fisubrl
add
pop
adc
dec
dec
cwtl
pop
mov
mov
pop
xchg
or
in
subl
or
ficoms
les
ss
xchg
lcall
xor
cwtl
faddp
sbb
lock
cmp
fxch
push
loopne
lock
adcb
ret
test
into
push
mov
inc
cmp
mov
push
sahf
push
xor
mov
in
daa
jp
imulb
mull
hlt
rol
mov
pop
xchg
shr
mov
and
out
out
rolb
inc
cltd
xor
insb
add
lcall
xchg
lea
es
jmp
fistpll
dec
mov
or
adc
xlat
mov
nop
loope
gs
fcmovnu
sahf
jmp
mov
adc
and
xlat
dec
or
push
mov
push
sahf
sahf
xorl
mov
in
xchg
adc
bound
xor
pmaxsw
xor
incb
push
leave
into
nop
aaa
cmc
mov
aas
and
mov
pusha
loopne
xchg
mov
jp
sbb
pop
ror
test
inc
rol
fstps
sbb
jmp
push
mov
rcll
sbb
cmp
stos
dec
call
mov
ja
stos
shrl
sahf
fldenv
notl
push
es
pop
xor
cmpsb
in
add
mov
inc
cmc
hlt
push
xor
push
push
sub
adc
pop
movsl
jb
or
sub
or
movsb
fwait
cwtl
push
popf
fsubrl
into
xchg
int3
stc
push
sti
dec
out
lahf
xbegin
cwtl
je
push
lods
xor
loope
mov
jae
jnp
sbb
push
int
jno
pop
sbb
jmp
inc
lods
pop
stc
lcall
push
cltd
dec
sub
cmpsl
add
mov
fstp
mov
or
test
scas
adc
jg
dec
pop
or
jecxz
imul
stos
fistpl
cmp
adc
add
bswap
out
lods
mov
jnp
popa
aas
in
out
cmp
mov
and
jb
inc
sbb
aad
sti
bswap
in
into
hlt
push
mov
jns
sbb
cmpsb
or
cmp
sbb
push
out
shll
dec
cmpl
cmp
insl
fmuls
loopne
fwait
daa
xor
lret
test
icebp
mov
mov
inc
add
iret
sbbb
pop
bnd
push
jo
or
test
hlt
adc
mov
inc
ret
aad
in
mov
and
mov
sub
inc
out
mov
push
dec
push
or
push
push
loopne
lods
test
inc
cmp
pop
xchg
push
mov
adc
test
adc
and
xchg
push
jnp
lods
or
xchg
jo
add
pop
rcl
or
aas
cld
ljmp
mov
loop
push
js
add
daa
mov
lahf
pop
roll
fnstenv
pop
mov
xchg
ret
pop
out
cmp
mov
mov
push
aad
in
mov
jb
xorl
and
sbb
fwait
push
incl
sbb
add
push
xorl
xchg
xchg
push
and
mov
lcall
pop
test
imul
xchg
dec
loopne
and
push
xchg
int
push
push
lahf
fcoms
push
dec
sub
or
lret
sahf
mov
mov
ss
mov
xchg
sbb
mov
xchg
sub
notl
ljmp
scas
aas
fldpi
mov
lods
add
pop
xchg
dec
pop
mov
das
int
add
or
dec
dec
daa
mov
xchg
call
pop
or
push
jmp
fildll
xchg
lods
jge
out
and
in
xchg
mov
in
mov
daa
fdivrl
jnp
leave
inc
out
mov
aad
insb
or
mov
pop
shrl
pop
out
roll
imul
loope
mov
cwtl
sahf
jb
sahf
inc
inc
mov
jg
adc
daa
int
ss
xchg
cmc
mov
test
test
and
mov
cltd
inc
insb
test
imul
lret
lock
pop
xor
fldl
ljmp
cmp
stc
push
push
xchg
mov
stc
in
adc
js
mov
pop
cwtl
sbb
sbb
sub
jns
mov
loope
pop
xchg
inc
sahf
push
jmp
dec
xchg
leave
bnd
mov
add
dec
cmp
sbb
clc
sub
ds
outsb
mov
ss
test
out
cli
scas
cmp
jne
mov
jmp
dec
add
in
cmp
xchg
movsl
jge
pop
in
push
sbb
cli
jmp
inc
test
sbb
mov
insl
aad
and
hlt
cmp
test
lret
lret
and
inc
and
add
mov
enter
popa
sub
inc
adc
and
out
cmp
xlat
fistl
lock
pop
rcrb
or
push
mov
loop
cmp
bt
mov
loope
push
sub
push
es
dec
loope
mov
mov
cld
cld
rcrb
dec
sbb
es
pop
inc
mov
push
pushf
and
push
inc
pusha
das
sub
movsl
jb
inc
adc
into
adc
pop
stos
pop
add
cli
jg
leave
dec
hlt
movsb
xlat
shr
addr16
sarl
mov
clc
test
sbb
xchg
inc
pop
add
sub
frstor
insl
cmp
mov
xchg
xchg
aaa
and
cs
and
outsl
push
jo
gs
mov
jl
or
daa
nop
pop
out
bound
push
pop
popf
arpl
popf
adc
ret
sbb
jae
cmp
shl
push
dec
or
adc
lods
mov
jno
jg
mov
lcall
sub
mov
inc
mov
inc
sbb
jno
mov
xchg
sub
push
add
dec
insb
std
out
jg
xlat
int
mov
lds
lret
mov
adc
das
in
sahf
sbb
pop
push
xorb
nop
in
and
filds
inc
stc
jno
ss
hlt
jp
push
or
jns
pop
dec
add
pop
inc
xlat
sbb
insl
adc
loope
xor
das
and
nop
mov
and
mov
test
pop
pop
rcll
xchg
dec
mov
adc
dec
test
cmpsl
dec
jl
lock
sbb
fwait
repz
cmp
cmp
fildl
pop
xor
repnz
das
jae
popf
xchg
mov
or
aam
daa
push
xor
push
movsl
jno
pop
ljmp
xchg
mov
pop
cmp
add
jno
push
scas
aam
lods
aas
mov
mov
and
imul
and
dec
pop
idiv
into
outsb
arpl
shlb
mov
dec
lcall
insl
fstl
outsl
outsl
pop
inc
cltd
mov
arpl
test
out
sub
fsubrs
xchg
jl
aam
les
and
mov
inc
ds
pop
fidivs
hlt
add
cmc
and
dec
imul
mov
dec
mov
andb
xor
sti
mov
push
mov
cmp
iret
xor
fisubrs
add
dec
mov
popf
cs
daa
popa
adc
lods
outsb
push
pushf
push
and
clc
xchg
fs
pop
lcall
ror
cmp
scas
pop
jle
arpl
or
stos
in
add
lahf
test
ljmp
push
xchg
push
jno
dec
popf
lock
loopne
cmpsl
outsl
pop
adc
loope
ja
mov
or
xchg
push
pop
push
enter
aad
jb
aas
inc
ss
pop
outsl
sub
jae
push
mov
fildll
sbbl
in
stos
mov
cmp
xchg
std
mov
cmp
and
test
mov
jle
dec
mov
out
jmp
ret
mov
cltd
pop
adc
xchg
jle
mov
inc
push
lods
andl
aas
adc
leave
std
nop
jo
sar
call
sahf
push
fdivl
or
vsubss
push
inc
pop
pop
stos
xor
out
lea
and
mov
xor
inc
test
mov
sti
and
inc
mov
pusha
stos
push
adc
push
dec
cs
xchg
orb
scas
jmp
mov
jmp
push
scas
dec
mov
pop
and
dec
mov
mov
xchg
push
ficompl
jbe
sub
cmc
jmp
mov
aaa
ss
push
lret
mov
rorb
or
add
loop
pop
dec
mov
inc
loopne
jns
jne
arpl
stos
cs
repz
add
orl
add
stos
lcall
sbb
adc
jp
jecxz
add
push
mov
repnz
out
pop
mov
adc
in
clc
mov
stos
mov
xchg
sub
xor
sub
and
shrb
xchg
stc
or
daa
nop
mov
or
popa
rorb
sub
cwtl
xchg
fdivr
inc
data16
pop
push
pushl
lock
shl
pop
lods
jl
mov
mov
jmp
sub
imul
pop
and
repnz
jl
in
inc
dec
fidivl
dec
arpl
jl
pop
mov
outsb
push
jne
adc
add
icebp
inc
ss
inc
enter
aam
sub
push
inc
cmc
data16
outsl
xlat
scas
jg
scas
clc
inc
outsb
mov
out
frstor
xchg
sub
push
loopne
mov
ror
pop
daa
ds
rorb
cmp
jg
and
sbb
ja
xor
lock
fadds
add
push
adc
lcall
or
or
fisttpl
andb
sub
pop
jae
jg
sub
mov
add
xchg
gs
mov
test
je
test
iret
adc
stc
and
xchg
inc
dec
or
scas
out
fcom
add
pop
mov
je
ret
outsb
xchg
mov
xchg
scas
mov
pop
mov
rolb
and
nop
mov
push
arpl
cmc
movsl
jmp
sub
mov
cwtl
test
aaa
pushf
jl
rolb
fdivs
out
fsubr
jmp
xor
mov
mov
lods
out
rclb
dec
push
clc
push
loope
mov
rcr
add
fwait
loope
je
testl
fstpl
lods
cmc
stc
and
js
ret
adc
lcall
les
mov
inc
inc
xchg
jno
push
je
sub
push
lods
je
shll
aam
jns
sbb
roll
xor
lock
cs
push
or
bound
in
add
pop
rorb
push
mov
aas
adc
and
aas
xchg
adc
repnz
sbb
adc
pop
mov
cmc
fdivl
push
mov
xchg
insl
or
jb
popa
shl
and
loopne
push
fyl2x
and
mov
mov
xchg
xlat
out
sub
ljmp
add
sub
xor
mov
in
ljmp
mov
xor
mov
enter
fdivrl
gs
mov
dec
dec
icebp
push
hlt
aad
fwait
sub
mov
mov
ret
iret
leave
out
f2xm1
pop
test
and
push
clc
xor
mov
std
cli
push
loopne
jae
dec
add
movsb
push
adc
and
xchg
mov
dec
push
mov
mov
mov
push
test
dec
dec
and
cmp
loop
out
jns
xchg
or
jp
out
lods
xchg
imul
icebp
out
cmpsl
jns
adc
xor
pop
clc
xor
hlt
aas
ret
pop
pop
sbb
test
enter
cmp
inc
dec
adc
push
jnp
pop
sahf
lods
push
mov
adc
and
mov
xlat
andl
jp
push
call
ss
pop
sub
stc
arpl
or
rcll
cmp
fdivs
notl
dec
sti
sub
pop
lcall
int3
fsub
sub
jecxz
stos
ljmp
dec
xchg
mov
inc
les
xchg
aas
lret
sbb
fsubrp
mov
cwtl
decb
shrl
les
enter
icebp
cmp
push
dec
xor
push
ss
les
pop
jae
mov
scas
mov
in
lods
rolb
lcall
xchg
imul
lea
mov
shrb
cmpb
dec
mov
cmpsl
ret
je
pop
out
rol
or
repz
xlat
mov
mov
add
jnp
and
dec
sahf
push
cltd
xor
or
shl
xor
fs
or
mov
dec
aad
mov
mov
es
push
and
add
jge
inc
inc
sub
mov
push
orl
shll
cmp
or
jo
jbe
shlb
xchg
cmp
xchg
imul
and
sbb
push
push
sahf
out
test
mov
or
bound
or
insl
gs
fistpl
ficoms
bound
xchg
inc
repnz
inc
cs
push
inc
jne
inc
mov
dec
and
popf
popa
mov
sub
sub
and
dec
sbb
scas
jae
int3
or
inc
nop
gs
jmp
xchg
and
pop
add
shrl
mov
loop
das
rcll
jle
sub
push
cmpsl
test
dec
xchg
imul
sub
int3
shrl
jecxz
adc
mov
sub
or
pop
pusha
jo,pn
sahf
sbb
add
adc
push
loope
int3
call
popa
jo
int3
lds
mov
cmp
call
xchg
mov
movsl
test
ljmp
vpunpckhwd
push
or
stc
push
mov
mov
fists
insl
scas
icebp
clc
and
jle
cs
mov
lahf
dec
hlt
jnp
or
scas
pop
xchg
stos
loopne
add
mov
push
push
popa
push
sbb
push
addl
ss
test
sahf
push
xchg
cli
mov
es
jb
push
daa
pop
sbb
mov
or
sar
scas
mov
add
rorb
test
lret
inc
pop
fs
dec
dec
mov
rcl
mov
push
aaa
and
out
cmp
lea
mov
insl
adc
sub
inc
inc
fnstcw
inc
mov
xor
or
push
dec
pop
stos
pop
jmp
jne
fildl
out
push
push
or
xchg
jecxz
push
jle
sub
popa
inc
mov
imul
adc
jns
pop
imul
mov
ja
fwait
add
push
mov
lock
bound
adc
jbe
in
xchg
pushf
mov
or
repz
sub
mov
mov
and
pushf
jb
das
pop
add
rcrl
insl
mov
repz
ret
aam
fildl
xlat
inc
xchg
jbe
and
and
or
xorb
repnz
movl
pop
add
xor
loop
mov
sahf
shl
clc
cmp
icebp
movsl
and
in
cmpb
icebp
cmp
pop
xor
or
stc
popa
into
jne
lock
jl
mov
rcll
jl
jnp
test
cmp
adc
addl
sbb
jl
in
mov
push
or
popf
xchg
in
lods
outsl
fwait
lret
lahf
sbb
lods
push
push
int
clc
jb
lods
ljmp
cmp
jg
push
mov
cltd
out
push
and
xorb
push
push
pop
mov
push
fdivs
push
out
inc
ficompl
xchg
jl
jae
pop
fisttpll
dec
or
ret
push
aas
inc
loope
das
xor
in
stos
pop
push
jmp
or
pop
fldt
fdivrs
add
adc
add
fidivrs
popf
add
push
push
inc
sub
inc
scas
adc
adc
int3
inc
cmpsb
push
jmp
out
dec
jl
rclb
cld
xor
mov
fcmovb
sbb
or
add
xlat
clc
pusha
pusha
sub
dec
int
sub
mov
outsl
xchg
dec
repz
movsb
dec
nop
cmp
jb
add
outsl
cmp
cmp
pop
mov
sbb
or
inc
mov
ficompl
insl
ret
je,pt
cmp
push
inc
scas
push
jno
les
rcl
lds
pop
ret
xchg
mov
call
push
lock
xchg
adc
out
sbb
sub
movsb
psubusw
mov
pop
nop
ds
sbb
mov
push
call
scas
sub
sub
testl
adc
inc
adc
pop
test
repz
lret
cmpsl
popf
adc
ljmp
dec
lahf
sbb
mov
mov
cmpsb
sbb
and
mov
pop
aad
mov
inc
adc
xchg
outsl
leave
sbb
adc
xchg
icebp
add
loopne
stos
stos
jge
lock
outsl
ficomps
dec
pop
sbb
mov
mov
mov
shl
push
dec
cmp
push
stos
icebp
mov
add
pop
rcrl
fsub
push
lret
cmc
stos
aad
xchg
cmp
and
lock
pop
cmp
xchg
and
jbe
jmp
js
pop
dec
aam
push
adc
jmp
cmpsl
inc
movsl
pop
shll
mov
sbb
in
or
add
mov
movsl
dec
add
cmc
insl
pushf
insb
cli
cmpsb
adc
movsl
jl
push
mov
in
or
cmc
jnp
mov
out
std
mov
imul
cmpsb
mov
xchg
sub
jno
push
popf
adc
jne
mov
cmpsl
clc
push
jecxz
loop
hlt
daa
push
test
mov
cmp
adc
out
popf
ret
aas
xchg
outsb
push
or
loop
sbb
pusha
daa
jo
jo
pop
test
icebp
je
push
dec
stos
push
inc
test
cmp
subb
dec
insb
lea
out
sahf
inc
stos
cmpb
scas
outsb
imul
pop
lds
std
inc
sbbb
dec
cltd
and
push
rorl
bound
sub
or
mov
ljmp
push
xchg
sub
sbb
sbb
shrb
imul
stc
xchg
xor
sbb
mov
sbb
in
xor
xchg
mov
test
xchg
or
pop
shl
mov
sub
xchg
jecxz
rorb
and
call
imul
aas
loopne
dec
dec
pushf
mov
dec
bound
mov
jecxz
inc
xchg
lods
loope
inc
int3
mov
das
ljmp
cmp
enter
push
es
loopne
enter
cld
fst
xor
pop
f2xm1
sbb
push
xor
minps
rorl
push
orl
out
ja
pop
push
fisubrl
mov
js
jnp
adc
or
pop
repz
test
pop
sub
cltd
insl
jbe
xlat
mov
bound
mov
or
mov
lea
sarb
ljmp
call
fisubl
cwtl
movsb
jns
faddl
cwtl
das
mov
fsubl
sti
bound
imul
inc
mov
repz
xlat
cs
test
rol
add
dec
jmp
xchg
std
test
in
popl
inc
push
lahf
cmpb
mov
or
ret
pop
jp
mov
pop
xchg
jb
sarb
lea
xor
rcr
push
andb
enter
popa
dec
mov
shrb
pop
mov
xor
push
mov
pushf
or
inc
xor
sbb
sbb
push
subl
loop
in
push
sahf
ja
pop
imul
sub
mov
jmp
dec
arpl
pop
mov
mov
inc
dec
mov
and
xor
dec
or
cmp
ja
aad
cmp
ffreep
cld
std
sbb
jg
mov
push
sbb
cmp
mov
pop
push
or
inc
ret
or
iret
cmpsb
mov
mov
mov
ret
and
mov
add
cmpsb
xchg
inc
and
push
dec
jmp
cmp
sbb
xchg
push
pop
pop
inc
mov
mov
out
jmp
jbe
cmp
xor
and
inc
push
xchg
cmpsb
in
fildll
sbb
xchg
bound
stc
add
ja
mov
ret
fisttpl
enter
cwtl
push
cmp
jnp
cmp
ljmp
sarl
jo
xlat
mov
mov
mov
dec
aad
out
loopne
dec
std
imul
rclb
pop
fisttpll
xchg
and
sbb
xor
pop
mov
or
stc
push
daa
loope
push
dec
stos
jmp
lods
cmp
leave
push
xchg
jle
ss
add
mov
movsl
cli
lcall
xlat
test
mov
mov
and
mov
ljmp
addr16
mov
fcomps
or
mov
ja
pusha
xchg
xor
mov
sbb
jns
and
push
xlat
call
lds
lods
push
orl
ret
test
mov
sbb
pop
out
imul
test
mov
roll
push
mov
cmp
cli
int
mov
xor
add
mov
pop
cmpsb
shlb
add
movsl
ret
fldenv
ss
sub
les
push
jb
inc
popf
cmp
xor
movsb
dec
sbb
in
sahf
sub
aad
mov
in
push
movsb
cmpsl
mov
inc
ja
out
add
ss
sbbl
sarl
idivb
leave
test
pop
subl
cmp
dec
fcomps
xchg
cmp
cwtl
and
inc
pop
outsb
lret
test
xchg
test
jb
stos
push
pop
dec
xor
popf
jg
stc
enter
pop
push
jge
fimuls
sbbl
sub
movsl
jns,pn
jmp
jae
xchg
mov
or
test
push
out
mov
fldcw
lds
mov
ljmp
arpl
imul
lods
sub
sbb
jno
nop
sbb
in
push
sbb
xlat
dec
pop
push
sub
mov
mov
cmpsb
add
test
dec
call
out
mov
jne
jg
shll
push
push
insl
mov
sbb
mov
fsubl
popl
ja
and
adc
jg
std
fwait
jl,pn
pop
push
idivb
mov
sbb
mov
lock
add
scas
sbb
popa
push
enter
int3
sbb
and
add
inc
out
les
cmpb
inc
cmp
mov
stos
dec
dec
out
adc
sbb
out
lods
cmpsb
mov
cmp
mov
xorl
mov
pop
out
jmp
push
jp
mov
dec
jmp
lds
mov
pop
or
adc
clc
nop
mov
xor
jg
adc
lret
out
dec
inc
pop
jecxz
fcmovbe
ret
and
rcrb
mov
addr16
lret
adc
clc
test
mov
adcl
sub
sub
lds
inc
out
sbb
inc
stos
adc
cmp
mov
or
mov
stos
nop
jno
xor
xorb
mov
imul
into
fimuls
in
jbe
loopne
in
jo
push
mov
ss
outsl
pop
scas
std
loop
jmp
xor
sub
dec
jb
jmp
inc
pop
daa
and
stos
out
arpl
daa
in
mov
fsubrl
dec
inc
mov
lahf
es
mov
mov
ret
push
jns
pop
das
movsb
lret
sbb
sub
fisttps
lods
mov
fidivs
imul
xchg
mov
pop
inc
cs
pop
cwtl
fwait
mov
jecxz
arpl
movsl
cltd
jl
push
mov
xchg
pop
mov
in
cmp
jp
mov
stos
rcl
jmp
push
adc
std
inc
inc
js
jecxz
pop
push
subl
or
das
xor
movsb
dec
cltd
xor
pop
lcall
std
adc
push
dec
adc
fwait
ds
xchg
jo
xchg
mov
out
add
imul
pop
xchg
nop
inc
or
jns
cmpsl
mov
loopne
add
popa
or
mov
add
adc
cmp
adc
movsb
mov
dec
inc
xchg
je
push
int
mov
loopne
lret
fxch
xor
push
iret
data16
xchg
popf
aas
or
adcb
xchg
mov
int3
push
stos
inc
add
pop
adc
outsl
cwtl
fisubs
sbb
cwtl
mov
cmp
push
cmpsb
sbb
dec
arpl
movsb
mov
scas
cmpl
or
dec
xchg
xor
shll
xchg
call
push
nop
cld
and
push
sbb
cmp
scas
sbb
sbb
daa
cmpsb
lods
ret
stc
dec
sub
pop
or
imul
arpl
inc
mov
dec
push
aad
pop
sbb
pusha
pop
imul
insl
mov
pop
inc
insl
pusha
je
cs
int3
or
push
jne
shr
cmp
rcll
mov
insb
loop
dec
pop
or
insb
fdivl
sahf
ss
mov
add
lahf
pop
cmpsb
sub
mov
inc
movsb
std
out
les
lock
je
fs
jl
and
add
loopne
jl
xor
decb
int
xor
push
pusha
adc
adc
lods
leave
mov
lods
cmc
insl
pop
aad
fldl
and
js
fisttpl
pop
push
cmp
adc
dec
je
lahf
jle
call
xchg
xchg
pop
push
push
inc
pushf
lock
stc
ret
insl
aam
dec
insb
lock
scas
roll
cwtl
mov
stos
inc
out
inc
in
inc
int3
pusha
jmp
mov
lcall
cmp
lret
xchg
ret
mov
pop
xlat
cmc
pop
adc
sub
mov
mov
pop
cmp
jo
sbb
mov
je
mov
sbb
jp
pop
fidivs
sbb
xor
jge
andb
std
pop
rol
cmc
xchg
pop
fistpl
mov
mov
outsl
xchg
subb
and
and
lret
lds
mov
and
push
lahf
mov
sbb
and
add
ret
push
in
rorl
push
shrl
pop
cmp
daa
sbb
ljmp
addb
hlt
adc
cmc
sbb
cmp
adc
pop
mov
mov
je
or
and
cld
bt
movsb
inc
mov
insb
dec
dec
jb
ficoms
xchg
jp
xchg
cwtl
daa
push
mov
in
roll
dec
xchg
pop
jp
cltd
js
aas
out
lods
stos
pop
xor
add
es
lret
sbb
inc
into
sbb
dec
push
xchg
jmp
mov
push
int3
mov
cmp
jmp
jle
jmp
jno
jmp
dec
aaa
or
imul
adc
mov
pop
mov
lcall
cltd
mov
out
mov
pop
mov
cmp
sbb
xlat
push
fcmovbe
jns
xor
stc
dec
inc
adc
ja
push
scas
sbb
mov
in
adc
in
mov
in
fnsave
cmp
and
xchg
push
rol
clc
or
jecxz
popf
add
adc
dec
scas
in
pop
cli
aad
into
push
or
fisubrs
clc
aas
jne
dec
push
sub
loope
and
pop
and
adc
fldcw
mov
dec
jae
lea
or
pusha
push
cmp
dec
pop
and
gs
icebp
arpl
sbb
aaa
and
mov
insl
add
int
lods
mov
sbb
cld
call
hlt
pop
insl
es
push
filds
adc
enter
int
and
sub
cmp
out
mov
or
jne
daa
adc
imul
fwait
sub
push
sbb
jp
xor
mov
adc
xor
ljmp
pop
adc
cmpsl
ficoml
fsubrl
pop
dec
inc
in
push
cmpb
inc
sbbl
repnz
je
repz
stc
stc
cmp
xchg
repnz
pushf
push
pop
jae
sub
sbb
mov
mov
dec
adc
sahf
and
arpl
cli
mov
pop
mov
and
adc
add
pop
ja
cmp
inc
cmpsb
adc
sbbb
bound
subl
sbb
mov
cwtl
or
ljmp
jmp
sbb
jo
lea
or
dec
inc
sbb
gs
jnp
sahf
push
pop
push
icebp
cmp
shll
in
add
rcrl
adc
pop
inc
test
or
lret
mov
jmp
daa
xchg
or
inc
adc
in
mov
mov
in
mov
int3
fs
jle
outsb
pop
pop
in
out
adc
cmp
pop
push
out
mov
sbb
dec
sbb
inc
pop
test
dec
jl
xchg
repnz
xchg
hlt
das
mov
shll
lea
inc
or
aam
fidivl
jae
icebp
inc
cmp
test
or
mov
out
aaa
jno
mov
iret
mov
aad
mov
scas
lea
pop
das
arpl
sahf
ret
jae
xchg
push
int3
out
std
xlat
out
xchg
dec
inc
xchg
outsb
xchg
scas
cs
push
lods
push
xchg
loope
jecxz
mov
ljmp
jne
xor
mov
std
sub
push
iret
add
sbb
jecxz
bound
jae
pushf
out
pop
mov
fildl
sub
inc
out
jg
sti
jge
sub
mov
fwait
test
cmp
roll
data16
push
jge
adc
add
mov
into
add
adc
adc
shll
mov
mov
pop
test
lods
decb
sti
pop
xchg
mov
lcall
cmp
into
pop
pusha
fucomi
mov
scas
xchg
imul
rorl
xor
push
jl
mov
aaa
add
lock
xor
or
orl
xchg
imul
cs
jl
fstpt
stos
iret
stos
add
in
lock
inc
mov
fcomps
subb
js
push
fmull
data16
mov
mov
lret
fwait
jbe
pop
or
out
mov
inc
ja
arpl
adc
pushf
xchg
pop
movsl
mov
jne
fnstsw
ja
cli
in
cwtl
push
or
adc
jl
push
jno
lahf
jo
outsl
repz
mov
mov
lahf
ss
and
mov
pop
flds
lea
mov
adc
cmp
in
jno
in
mov
inc
pop
add
int3
repz
inc
sbbl
push
mov
and
cmp
sar
roll
das
and
fbstp
xchg
mov
notb
or
cmpsb
cmp
push
jecxz
bound
lcall
sbb
xchg
pushf
push
cmpb
push
xchg
loope
and
dec
mov
icebp
dec
fstps
jae
outsb
mov
inc
js
sbb
mov
loopne
pop
in
enter
pop
stos
jbe
sub
xchg
rorb
mov
pop
pop
out
je
les
cltd
out
lcall
inc
dec
or
mov
ljmp
cmpsb
aaa
enter
cmc
inc
pop
jnp
lar
fcoml
fnstcw
mov
xorl
mov
cld
xchg
pop
iret
nop
in
mov
es
cmp
imul
popa
jmp
fisubs
jge
loopne
xor
loopne
mov
pop
enter
cli
imul
sahf
mov
imul
sub
std
je
addr16
jle
dec
ficoms
dec
out
pop
enter
pop
movl
cmp
mov
stos
int
mov
xchg
xor
xchg
sar
mov
stos
sti
imul
sbb
xchg
int3
inc
sub
aam
inc
rcrb
and
dec
sahf
mov
jge
movsl
stc
data16
test
jno
stos
sbb
lds
insl
mov
lods
cltd
outsb
lret
popa
shlb
stos
rcll
dec
dec
xchg
outsb
jae
dec
xchg
out
jno
dec
ror
cltd
mov
out
ljmp
add
mov
fucom
adc
xchg
inc
sub
cmpsb
mov
ret
es
out
je
cmp
push
fidivl
and
lods
cli
jl
push
nop
clc
add
wrmsr
jae
pop
mov
int3
or
adc
sbb
shlb
add
iret
or
xchg
out
xor
mov
xchg
inc
in
popf
repz
repnz
mov
das
daa
mov
inc
cmp
mov
fildll
jne
ret
movsb
or
popf
std
dec
fsubs
jmp
push
mov
shl
jge
hlt
mov
lods
addr16
xchg
lds
and
sbb
jle
inc
pop
fwait
adc
mov
rolb
add
mov
jmp
add
out
js
lret
loopw
adc
jae
jo
loopne
cltd
push
push
xor
push
adc
cmp
jb
sarl
mov
into
jle
mov
inc
xchg
cmpb
add
pop
add
stos
mov
rcll
addl
aad
and
and
xor
dec
mov
mov
cmp
cmp
and
dec
jnp
test
jae
dec
xor
fwait
in
xor
xor
dec
cmp
out
and
mov
mov
mov
aam
mov
ja
rcr
fs
imul
jb
ret
dec
addr16
ror
push
mov
rcrb
mov
mov
xor
lahf
movsb
inc
test
add
shlb
jp
dec
iret
cmp
mov
lock
shl
sbb
aas
or
insl
jb
cmp
pop
sbb
mov
mov
mov
fs
out
gs
call
jno
ljmp
dec
sub
lret
mov
xchg
outsb
cli
out
in
pusha
mov
js
int3
addr16
mov
jge
mov
insb
adc
lret
cmp
sbb
sub
mov
inc
test
fnstcw
scas
sub
leave
jp
push
push
pop
pop
loopnew
out
sub
sub
aam
xchg
mov
insb
adcb
pop
pop
mov
jecxz
pusha
xor
cmp
mov
mov
mov
push
lahf
inc
xchg
into
sub
sti
in
dec
mov
stos
rcll
outsl
sub
sub
popf
pop
movsl
call
xchg
movsb
pop
call
mov
push
ret
imul
popf
pop
add
and
pop
jl
cmp
sbb
stc
pop
inc
js
repz
data16
mov
jmp
sub
add
stc
in
je
adc
scas
xchg
or
jmp
xchg
mov
pop
call
xchg
or
push
mov
out
pop
roll
push
inc
repz
adc
out
icebp
filds
es
sbb
out
fcomi
jne
pop
jge
fadds
mov
daa
and
fnstcw
inc
lret
sub
lret
xchg
xchg
pop
sub
or
fs
outsb
icebp
mov
icebp
stc
inc
sub
push
fs
dec
mov
icebp
loop
ret
push
push
stc
xchg
jbe
out
shl
sub
imul
scas
xor
pop
hlt
fidivrl
stos
push
xchg
in
imulb
sub
mov
mov
pusha
insb
iret
mov
mov
imul
addr16
adc
inc
mov
fld1
or
push
adc
xor
and
ret
mov
lret
push
mov
push
cwtl
aam
xchg
inc
push
aam
xchg
jmp
add
loop
sbb
pop
dec
xor
leave
jae
and
inc
xor
cmp
inc
stos
jae
insl
push
ds
cmp
sub
pushf
sbb
dec
gs
adc
xor
pop
sbb
dec
ds
mov
negl
idivb
mov
loope
and
xchg
icebp
enter
out
pop
pop
mov
add
xorb
aaa
rclb
nop
hlt
adc
test
ljmp
in
jno
arpl
lds
shl
imul
add
std
cmpsl
push
or
jge
test
sub
sub
movsl
pop
xchg
cli
addr16
or
jb
setl
popf
jnp
mov
sti
mul
mov
cmpsl
aam
inc
pcmpgtd
fstl
xor
adc
sub
dec
jbe
jle
sub
adc
mov
jl
push
xor
lret
lcall
sub
daa
mov
cmp
iret
mov
jns
adc
outsl
lcall
cltd
cmpb
aas
add
repz
fdivl
ret
jbe
sub
inc
lret
jbe
cwtl
scas
pop
sub
and
and
jnp
adc
xchg
or
add
lods
push
pop
jl
pop
out
dec
xchg
push
ljmp
les
fnstsw
dec
test
cmp
mov
repz
enter
jle
lds
sub
or
lahf
pop
insl
sarl
repnz
das
test
push
je
ja
hlt
ret
bound
xor
dec
or
into
xor
pop
jg
sbb
pop
sbb
lods
lret
pop
ljmp
aas
fcmovnu
cmp
pop
add
test
jp
sbb
xchg
or
je
sbb
call
inc
xchg
mov
sbb
and
mov
push
add
and
push
jb
scas
addr16
cwtl
inc
jle
adc
jb
sub
cltd
mov
loopne
xor
mov
xchg
jg
inc
dec
cmp
dec
mov
sbb
jle
push
dec
dec
push
inc
mov
xchg
sbb
rcrl
pop
repz
xchg
es
add
bound
lea
mov
add
push
test
mov
sub
popf
bound
xchg
jb
mov
int
mov
stc
call
mov
push
sarl
push
jbe
clc
add
mov
dec
insb
mov
mov
adc
aad
dec
push
pushl
jg
adc
sbb
loopne
xchg
pop
pop
cld
mov
push
push
mov
roll
fnstsw
mov
fisubl
iret
cmp
inc
out
cmp
inc
dec
shlb
push
or
mov
in
lea
mov
push
inc
adc
push
xchg
daa
js
xchg
loope
pop
sti
sbb
dec
pop
int3
test
sbb
mov
fstl
pop
adc
push
cmp
pusha
into
pop
fsubrl
or
insl
mov
bound
mov
jo
and
adc
add
sahf
xor
adc
xchg
xchg
sbb
mov
mov
cmc
jmp
pushf
sahf
test
sbb
dec
inc
sub
sbb
popa
mov
iret
pop
or
jp
add
jg
xchg
bound
mov
mov
add
cld
dec
pop
add
inc
insl
lahf
jmp
mov
add
mov
shrl
insl
ret
fstl
mov
pand
sahf
aaa
mov
cwtl
popa
xorl
add
out
adc
sbb
xchg
cs
xlat
dec
lcall
lret
adc
cwtl
sahf
mov
lods
adc
xchg
mov
add
fcompl
jno
fsubr
or
and
dec
xchg
lret
dec
fs
xchg
cmp
xchg
ds
mov
out
or
xchg
and
xchg
push
insb
mov
mov
mov
mov
pusha
xchg
rol
dec
arpl
xor
add
leave
aaa
sbb
stc
add
popf
loop
mov
cli
xchg
mov
insb
or
cmp
pop
pop
inc
xchg
scas
cmpsb
adc
out
fmull
pusha
inc
mov
push
push
adc
add
jo
sbb
xchg
mov
dec
popf
mov
sbbl
adc
cmp
flds
je
push
gs
subb
push
adc
xor
xchg
fisubs
fsubs
xchg
mov
or
pop
imul
lret
pusha
pop
mov
jle
test
and
movsl
divb
lret
pop
or
adc
xor
test
out
jno
mov
xchg
sub
cmp
test
decl
xor
inc
push
adc
das
pop
jns
xchg
jnp
cmp
cld
xor
fcompl
mov
or
pop
mov
incl
jmp
loop
ja
out
iret
jecxz
jl
jae
sbb
loope
stc
push
mov
sbb
add
adc
sbb
mov
popa
push
loopne
in
dec
mov
mov
cmp
frstor
jge
cmc
bound
cld
jbe
mov
pop
push
cld
stos
popf
pop
shll
out
lcall
enter
fs
outsb
mov
push
aad
mov
mov
add
or
mov
into
sub
scas
add
jmp
lock
xchg
pusha
sub
jno
aaa
fsubrl
dec
std
sbb
iret
js
imul
mov
pusha
mov
testb
ljmp
das
fistps
shl
mov
mov
cmp
addr16
std
ret
adc
sbb
mov
mov
adc
stos
nop
fcmovnu
jecxz
jbe
mov
mov
pop
arpl
xchg
dec
pop
aad
pop
or
mov
mov
sub
jge
sbb
cltd
addr16
dec
iret
mov
addr16
stos
lea
mov
or
jo
push
jmp
ror
xor
fisubrs
inc
popl
push
and
adc
jo
or
in
sti
les
pop
dec
fs
mov
push
stc
pop
cmc
int3
add
pop
insb
dec
rcrl
add
ss
in
mov
jmp
mov
mov
dec
mov
rolb
or
test
fdivrs
iret
push
ud2
icebp
scas
xchg
jge
sbb
imul
pop
shr
stos
mov
scas
sti
jle
mov
stc
out
je
mov
sbb
and
add
inc
pop
and
mov
pop
inc
and
mov
call
popa
sub
xchg
cmp
inc
clc
stc
xchg
add
add
lods
adc
dec
ljmp
jbe
jmp
mov
inc
sahf
push
xchg
addr16
push
add
aam
jg
movb
int
add
push
out
test
jle
js
stos
out
jl
cmp
es
jge
jl
push
xchg
ror
pop
mov
jle
inc
inc
ret
ret
imul
jo
jbe
dec
push
rcrb
subl
stos
jge
mov
push
sbb
hlt
cmpsb
bound
bnd
movsb
mov
lock
ret
pushf
ja
aas
sub
jle
sbb
jb
iret
loop
in
xor
mov
mov
or
sub
adc
nop
aaa
and
cli
sbb
adc
mov
in
mov
lret
push
jecxz
in
aam
data16
xchg
imul
lret
outsl
repz
lock
mov
int3
pop
or
imul
mov
leave
mov
int
scas
pushf
sbbl
mov
pop
or
push
mov
je
loope
aas
insl
rcrb
jno
or
mov
adc
js
push
in
aaa
dec
jle
in
push
sbb
aaa
arpl
cmp
sbb
push
mov
pop
sub
pushf
mov
out
inc
jae
inc
xchg
add
mov
mov
sbb
jae
sub
mov
xchg
fistps
pop
ret
outsl
lahf
into
cmpsb
ja
adc
jo
cmpsb
mov
mov
mov
test
inc
int3
fadds
lds
push
jge
dec
ja
int
xor
push
jecxz
jecxz
movl
out
cmp
jno
jo,pt
cs
cmpsl
mov
jno
jge
dec
leave
scas
sub
xchg
loopne
jae
xchg
xor
fs
sbb
cmp
repz
cmp
shlb
inc
adc
xor
lret
bound
inc
out
cld
jbe
push
mov
adc
jbe
fwait
adc
movsb
add
bound
mov
inc
jae
fs
cmc
ds
lds
dec
xchg
dec
cmp
mov
jno
sub
pusha
dec
pop
sahf
sti
lods
add
and
andb
mov
jl
lret
stos
fidivrl
inc
xchg
sbb
cld
dec
enter
fnstcw
sub
aad
cli
cmpsl
int
pop
rclb
and
xor
pop
lcall
xlat
sub
aad
cmpl
cmpsl
dec
ljmp
or
enter
jbe
xor
mov
mov
shll
xchg
inc
test
es
loope
lahf
sub
cmp
fildl
adc
sbb
add
and
in
sarb
imul
outsb
inc
addr16
clc
push
jmp
cmpsl
repz
cmpsl
sub
movsl
mov
outsb
xor
or
mov
push
lcall
mov
pop
enter
cmp
push
mov
jae
rcrb
lret
pop
mov
dec
mov
cmpl
cmpsl
push
ficoml
lods
movsb
fistpl
out
mov
inc
dec
movsb
and
inc
jae,pn
sbbl
xchg
fsts
lcall
cltd
fdivr
aam
lahf
hlt
popa
cmp
xchg
repz
cmp
dec
mov
loop
xor
xor
aam
adc
fidivrl
stos
pop
and
scas
push
loop
out
cwtl
mov
bound
lods
adc
sub
and
stos
mov
mov
popa
daa
push
push
jmp
dec
dec
cmpb
out
push
outsb
popf
jecxz
jp,pn
xor
sbb
xchg
cmp
adc
hlt
jae
adc
andl
sbb
xor
inc
push
xor
in
mov
punpckhdq
xchg
sub
cmp
pop
jb
and
sub
mov
lea
jbe
outsl
mov
clc
push
pop
cmp
mov
fdivl
pop
add
jnp
icebp
xchg
push
xor
outsb
shlb
repz
ror
dec
mov
inc
dec
aad
mov
cltd
cmp
cmpsb
sub
adc
jno
xor
add
daa
gs
mov
pushf
xor
cmp
rol
aaa
fisubrs
sbb
aam
sub
fidivrl
and
sub
push
out
notl
mov
or
mov
enter
xchg
pop
sbb
test
ja
shrl
in
xchg
xchg
cmpsb
mov
or
das
mov
ljmp
mov
fcmovnu
push
mov
inc
aas
addl
nop
sub
ds
or
fistpl
adc
sbb
inc
addr16
jge
pop
sbbl
mov
add
push
dec
popa
push
lock
push
jecxz
ret
sbb
sub
mov
std
sub
bnd
testl
cmpsl
popa
mov
adc
push
aas
int3
js
in
xlat
xor
mov
enter
pop
clc
enter
cwtl
sbb
scas
add
inc
shll
in
adc
mov
or
add
test
loopne
int
test
cli
add
mov
mov
and
sub
pushf
inc
shlb
bound
xlat
scas
pop
pop
stc
mov
lods
mov
xchg
pop
roll
lcall
dec
xchg
sbbb
mov
xchg
pusha
aad
cmpsl
push
sbb
xor
jg
cli
pusha
mov
ja
fstl
jno
xchg
lret
adc
arpl
outsl
mov
roll
push
push
jb
cmc
addl
pop
je
and
pop
xor
cmpl
jmp
pop
les
bound
cmp
aad
ljmp
jle
in
jns
pusha
sub
pop
cwtl
inc
test
cmpsl
notl
testb
test
aad
aaa
xor
dec
fdivrs
pop
test
or
lahf
push
jbe
decl
sbb
push
loopne
filds
sarl
hlt
inc
cmc
inc
addr16
aaa
inc
inc
pop
adc
rclb
mov
aas
iret
rcll
adc
wbinvd
pop
mov
fcomp
jbe
jecxz
popf
xor
sub
fstl
jb
lods
jb
mov
pop
push
xor
fimull
add
fs
lret
mov
int
idivb
mov
shlb
std
ss
into
scas
push
jp
push
push
jbe
xchg
inc
push
int
mov
xchg
insb
or
or
inc
cmp
das
push
mov
pop
scas
pop
shl
jecxz
test
xor
add
xchg
out
popf
pop
sbbl
push
aad
inc
mov
out
pop
jmp
lcall
xor
mov
dec
jb
stos
jmp
adc
mov
ficoml
add
inc
xchg
add
mov
pushf
ja
mov
add
sub
int3
sub
sbb
push
mov
pop
xor
pop
xchg
push
sub
rcrb
push
jg
pop
inc
fcompl
inc
push
rorl
inc
stos
inc
or
push
mov
mov
cwtl
outsb
and
fimull
lahf
dec
dec
cmp
dec
add
sub
push
pop
mov
js
iret
fisubl
das
xchg
cmpsb
inc
push
xlat
cmpsl
dec
mov
mov
pop
lahf
xchg
sub
ja
inc
icebp
fdivl
cld
out
imul
cwtl
push
imul
mov
xor
mov
xor
int
std
nop
mov
sarb
cmp
jecxz
enter
jle
mov
imul
jmp
idiv
nop
cmp
hlt
and
pop
loop
adc
orl
sub
xchg
repz
push
dec
testl
push
clc
fcomps
xchg
sub
int
popa
dec
hlt
stos
mov
je
cmp
push
test
cmp
pop
incl
pop
mov
loop
aaa
inc
inc
pusha
aas
xchg
aad
mov
mov
les
mov
test
push
test
ss
repnz
pop
pop
sub
cltd
out
add
xchg
xor
aas
insb
pop
cmp
dec
rcll
rclb
mov
sbb
pop
cwtl
lods
cld
movsb
add
xchg
stos
mov
dec
cmp
ret
cwtl
shrl
cltd
enter
push
adc
hlt
divl
gs
pop
in
shr
mov
xchg
pop
outsb
rclb
aam
test
push
stos
mov
pusha
aaa
mov
fs
test
add
fisubrl
rol
sti
pushf
push
pop
dec
scas
cmp
add
and
push
rcrb
xchg
leave
xlat
add
frstor
ds
adc
lahf
xlat
xchg
mov
dec
sbb
push
mov
std
dec
insl
mov
xchg
adc
push
pop
loop
mov
lods
mov
fcmovu
fcoms
lock
xlat
stos
addr16
mov
fsubr
push
jecxz
add
mov
mov
push
adc
inc
inc
roll
aad
jg
fwait
push
out
nop
xor
add
hlt
jno
stos
cmp
jge
bound
ret
aam
xchg
das
fnsave
stos
mov
push
pushf
popf
clc
std
xor
mov
pushf
mov
mov
test
addr16
sub
inc
iret
shrl
ficompl
xchg
add
push
xor
dec
aad
scas
lahf
lds
movsb
out
cli
dec
ljmp
inc
adc
loope
add
ror
jo
arpl
adc
hlt
jp
insb
inc
addr16
stc
lock
inc
jmp
mov
vmovd
fbstp
imul
adc
sbb
adc
test
fidivs
movsl
adc
mov
imul
add
add
mov
sbb
adc
sahf
inc
movsb
sub
push
pushf
lods
dec
or
scas
pmulhw
leave
imul
out
sub
mov
add
mov
outsb
cmc
out
mov
lahf
mov
sub
adc
xchg
aad
cmpsl
loope
jecxz
stos
mov
cli
xchg
ja
mov
ljmp
iret
add
xchg
dec
aas
lcall
sbb
lahf
push
mov
lods
mov
data16
adcl
mov
into
sub
leave
test
in
push
jmp
xorb
jo
das
dec
lods
jle
fildll
repnz
and
aam
mov
sbb
scas
dec
daa
insb
in
push
std
pushf
repz
add
jne
jle
sub
aas
movsl
in
insb
subb
sub
fistps
sub
movsl
fnstcw
in
or
cmp
outsl
push
push
incb
leave
push
mov
loopne
add
gs
scas
push
and
jae
cmpsl
call
sub
sbb
pop
dec
mov
jge
adc
in
pop
rcrb
ja
or
int3
inc
xchg
jb
fldl
daa
xor
jno
iret
jbe
dec
mov
rcll
sub
sti
arpl
push
jbe
call
mov
leave
aaa
push
xchg
pop
cwtl
enter
sbb
and
sar
xchg
fnstcw
dec
add
sbb
cmp
out
push
lods
nop
or
addr16
inc
or
xor
lcall
jmp
xchg
add
mov
pushf
dec
rcrl
add
loope
pop
out
mov
iret
movsl
mov
or
push
lret
sub
cwtl
add
fwait
hlt
lahf
lods
fdivl
sbb
jnp
cmc
dec
scas
or
dec
aam
cwtl
sub
int3
cld
jmp
filds
sub
mov
xadd
jno
sub
icebp
int
insb
repnz
sub
imul
rcrb
mov
cmp
idivb
inc
shll
lods
lds
stos
push
aad
shll
wrmsr
sbb
shld
fwait
jg
mov
cmp
gs
mulb
aas
inc
leave
movsb
jno
mov
adcl
mov
pop
orb
mov
test
sti
pop
jmp
inc
sub
pushf
fdivl
scas
cmpsb
pop
xor
jmp
xchg
in
dec
out
push
imul
jnp
sub
cmpl
sar
inc
add
push
dec
decl
pop
fcoml
cmpsb
je
mov
sub
xchg
daa
mov
mov
iret
dec
icebp
inc
jp
mov
test
movsl
dec
in
inc
mov
test
xchg
sub
sub
cli
clc
jnp
das
mov
xchg
xchg
test
sub
adcl
mov
rcl
cmp
jecxz
cmp
loop
nop
int3
xlat
or
and
ret
jb
xor
mov
mov
mov
xor
xchg
ret
stc
push
rclb
push
cmp
dec
jo
cmp
addr16
ds
pop
cmp
popf
inc
xchg
mov
clc
xchg
push
cmpsl
mov
addl
mov
pop
mov
pop
xchg
in
mov
push
jmp
clc
add
stc
faddl
nop
add
xor
jp
movsb
add
push
rcrl
rcrb
jp
test
dec
int
push
xlat
imul
fisttpll
xchg
daa
fcomi
cmpsl
dec
and
xchg
mov
sub
or
cli
ss
pop
ljmp
jle
xor
xor
lret
jmp
push
je
push
addr16
fstps
jae
notl
data16
lret
std
adc
jns
fwait
xlat
adc
movsb
pop
mov
inc
dec
daa
lods
hlt
dec
sbb
testb
push
add
lea
sub
outsb
push
sub
lcall
and
dec
dec
outsb
popf
decl
push
xor
dec
das
mov
push
mov
cwtl
xchg
push
int3
sub
push
adc
xor
int3
mov
inc
nop
lock
push
sbb
pop
xor
pop
sub
in
fdivrl
pop
ret
add
imul
mov
jl
mov
mov
sbb
lds
sbb
rol
mov
or
ss
mov
push
sub
mov
lods
xchg
cmp
lds
and
shlb
xchg
movsl
jne
fcompl
mov
es
out
shrb
ret
aad
mov
sub
mov
mov
mov
add
scas
divb
shl
xchg
je
push
push
cld
scas
and
adcl
sbb
xchg
lods
cld
sbb
int
mov
adc
je
jp
roll
pop
lret
jle
cwtl
sarb
mov
push
js
adc
and
mov
dec
mov
lcall
ficoms
and
out
mov
daa
sub
or
gs
add
inc
xchg
and
cmp
jp
in
xchg
mov
jmp
ficoms
mov
adc
insl
sarb
insl
cmp
out
lret
xor
mov
add
mov
jge
xor
pop
imul
xor
aam
nop
mov
and
test
sar
dec
sbb
sbb
xchg
popa
pop
xor
mov
pop
jl
leave
push
es
xchg
mov
pop
cmp
fldcw
das
mov
jle
xchg
popa
jp
and
rcrb
loope
cmp
mov
mov
mov
sub
cmp
in
icebp
add
stos
pop
lret
adc
aam
add
hlt
sub
in
add
in
ds
fdivs
fldcw
ret
cmp
cmp
jbe
mov
lods
popa
popf
cltd
scas
stos
andl
adcl
jb
cmp
push
ds
mov
aaa
dec
cli
sahf
jbe
push
in
ret
xabort
sbb
popa
stos
in
mov
jno
cmp
arpl
imul
jg
std
lods
in
mov
call
daa
imul
test
add
and
mov
or
pop
out
xor
lock
add
xlat
mov
sub
cltd
jmp
push
mov
lods
dec
jp
cmpsl
in
pop
cmc
mov
scas
adc
aam
pop
or
test
out
mov
loopne
cmc
lods
jmp
mulb
out
or
jp
sbb
push
lret
std
or
push
dec
clc
xor
jb,pn
mov
cwtl
jl
pop
cmp
jnp
aad
ret
jb
movsl
enter
xor
out
add
push
pop
dec
jl
add
orl
jae
bound
loope
pop
vpaddb
jl
aam
jge
push
mov
les
ret
or
adc
je
sbb
mov
mov
cli
mov
push
xchg
mov
fsubrs
push
aad
add
popf
shlb
add
jge
outsl
adc
loope
mov
push
sub
pop
add
repnz
loope
lock
adc
fstl
pop
adc
in
adc
jp
ficoms
mov
or
in
fldcw
leave
jmp
les
clc
or
xchg
adc
xlat
push
ds
dec
jp
scas
out
imul
mov
subl
mov
sub
and
nop
fmull
inc
dec
add
jne
scas
inc
sbb
popf
jle
popa
lahf
jne
sbb
incb
sahf
mov
sbb
and
std
or
sbb
xor
or
cmp
mov
mov
dec
adc
scas
iret
adc
cmpsb
and
jg
dec
int3
fcomip
xor
inc
cmp
rorl
repnz
ss
mov
mov
call
loop
inc
nop
dec
iret
sahf
popf
lods
jmp
cli
jae
mov
xchg
jl
call
fnstcw
sbb
sub
das
pushf
xchg
fidivrs
xchg
sahf
stc
xor
and
push
sbb
adc
sub
jb
cmp
int
jo
dec
fstpt
sub
dec
fisttpll
push
xor
jb
xchg
xor
jp
insl
aaa
xor
xchg
movsl
and
sbb
or
push
pop
dec
jo
xchg
rorb
jae
stos
mov
jmp
jle
int
and
lret
mov
mov
mov
mov
jecxz
out
les
push
xor
pusha
adc
test
xchg
cld
xor
mov
mov
or
clc
cmp
mov
add
repz
test
mov
cs
aam
fwait
insl
jp
and
push
mov
mov
in
add
cmp
push
push
inc
orb
rep
lret
mov
fs
pop
sbb
rorl
stos
in
test
pop
jns
add
mov
xor
add
data16
cmp
mov
dec
repz
xchg
pusha
ja
mov
aaa
mov
insl
out
inc
sbb
xchg
out
arpl
les
mov
scas
mov
xchg
lahf
popf
push
hlt
pop
xchg
imul
call
sub
push
add
shlb
xlat
aam
xor
movsb
mov
fnstcw
bound
pop
hlt
int
js
sbb
sti
xchg
mov
popf
fyl2xp1
rcll
cwtl
mov
leave
cwtl
lret
sahf
or
cmp
sub
jle
in
adc
out
mov
leave
pop
int3
mov
or
dec
dec
mov
gs
repnz
dec
cmp
mov
mov
and
xchg
pop
scas
jl
inc
xor
cwtl
lret
inc
mov
sub
incb
mov
jge
adc
lret
pop
pop
jl
data16
das
aam
inc
cmp
sti
test
sbb
push
and
pop
test
mov
jle
jo
cmpsb
leave
shll
popa
cmc
mov
test
mov
or
sub
inc
mov
mov
add
sub
xchg
add
sub
clc
push
xor
js
stos
loop
rcrb
mov
push
movsl
repz
call
xchg
mov
mov
lret
dec
pusha
push
dec
imull
mov
popa
mov
xlat
mov
daa
xchg
adc
cmp
fs
sub
sti
and
std
add
cmpsb
and
xchg
popa
out
pop
adc
lods
subl
push
mov
add
gs
jb
mov
jno
pop
push
adc
mov
movsl
add
cmp
cmp
add
popf
outsl
das
insb
push
aad
mov
int
mov
roll
add
out
push
or
bound
push
iret
mov
push
mov
ficompl
insl
das
jbe
mov
adc
icebp
inc
mov
jmp
jg
cmc
rcrl
mov
cld
mov
rsqrtps
ja
adc
in
sub
ljmp
lahf
jnp
das
xchg
int
aas
sbb
out
outsb
sahf
clc
icebp
gs
mov
mov
repnz
movsl
push
rcr
outsl
sbb
xor
or
icebp
icebp
push
insb
jge
jns
add
or
xchg
mov
insl
mov
adc
insb
cmovl
jp
pop
daa
adc
adc
imul
sbb
add
and
add
data16
shl
add
enter
mov
xor
mov
repz
rorl
std
adc
fisubs
out
jae
pop
call
mov
adc
rorb
xchg
das
add
popf
sbb
cmp
push
xor
shll
adc
daa
xchg
add
jae
or
and
jo
xlat
add
xor
outsl
in
mov
dec
mov
mov
fs
movsl
cmp
add
outsl
pop
push
mov
or
iret
sub
jno
xlat
push
cs
sbb
stos
push
add
sub
mov
inc
lods
pop
inc
fidivrl
data16
fwait
insl
inc
test
cwtl
cli
jmp
enter
jno
lock
cmp
scas
pop
xchg
dec
loopne
idiv
cmpsl
pop
adcb
jp
inc
push
out
fadd
jnp
lea
dec
cmp
loop
mov
lods
in
dec
inc
xchg
daa
jmp
enter
adc
add
js
fstpl
jno
sbb
push
lret
mov
and
call
lahf
pop
cmp
repz
faddl
jo
shll
fiaddl
xchg
xchg
out
push
mov
outsl
mov
or
loop
add
cmp
lods
daa
and
lods
test
mov
mov
test
test
gs
dec
xor
xchg
xchg
into
scas
sbb
js
mov
push
pop
pop
popf
out
imulb
mov
mov
mov
daa
dec
and
repz
imul
mov
imull
jo
test
loopne
fadd
test
mov
sub
add
repz
add
mov
ljmp
movsl
jle
mov
jle
ss
adc
mov
jge
das
cmp
aaa
lods
mov
pop
push
cmp
loope
mov
cwtl
xchg
jle
pop
repnz
and
test
dec
sbb
pop
mov
xchg
push
das
sbb
xlat
inc
pop
lods
or
jp
xor
dec
and
jae
pop
lods
adc
mov
add
mov
addr16
mull
insb
idivb
dec
or
cmp
sub
cs
cld
orb
jnp
fcmovbe
aaa
hlt
inc
pusha
mov
imul
cmpsb
push
or
cltd
sub
addr16
mov
mov
fwait
test
jmp
cld
lcall
into
je
pop
ss
gs
mov
lcall
cmp
inc
out
jb
mov
cwtl
mov
adc
or
dec
stos
rcll
sub
mov
out
jns
jne
repnz
mov
inc
cmpsb
addr16
cwtl
xchg
out
daa
aad
inc
in
mov
xor
adc
dec
loop
or
mov
movsl
popa
sub
cmp
mov
cmp
cmp
xchg
fsubl
ja
or
lods
xchg
add
dec
mov
inc
fidivrl
xchg
outsb
xchg
mov
push
xor
inc
mov
insl
sub
imul
int
andl
aaa
mov
mov
ljmp
or
sub
xchg
sarl
inc
daa
jmp
repnz
xchg
jae
push
jle
xchg
cld
nop
testl
cmp
sti
aaa
orl
jl
and
scas
aas
inc
mov
dec
and
nop
mov
ret
xor
lcall
or
pop
mov
or
leave
mov
pop
jo
sahf
bound
outsl
cmpsl
sub
mov
dec
mov
mov
js
cmp
sub
push
adc
fisubl
test
dec
adc
test
adc
mov
mov
outsl
cmpsl
aas
rclb
ret
sahf
or
mov
mov
ss
xchg
or
cmpsb
xchg
and
in
sbb
mov
scas
int
lods
or
push
repnz
xchg
dec
sub
pop
leave
ficoml
jnp
mov
cld
adc
xchg
ret
popa
jl
or
mov
mov
pop
or
pop
repnz
mov
sbb
jb
rolb
je
cwtl
out
or
data16
push
push
or
cmpsl
xchg
shl
xchg
pop
test
les
adc
das
test
sbb
bound
stos
notb
leave
subl
lcall
xor
cmp
mov
mov
inc
lods
mov
sbb
mov
aaa
mov
mov
jge
mov
and
jge
sti
aam
sbb
ljmp
or
mov
jl
or
sbb
clc
sub
xchg
adc
dec
movsb
mov
sbb
jg
hlt
sarl
cmp
inc
jnp
rclb
in
std
stos
or
fimuls
push
or
mov
clc
popa
aaa
push
pop
mov
pop
jae
adc
out
in
adc
lods
sbb
in
pusha
loope
lahf
insl
mov
adc
repnz
adc
push
or
js
shlb
mov
mov
orb
out
icebp
out
outsl
out
pop
lock
jmp
inc
mov
int3
sarl
pop
xchg
push
mov
mov
jb
repnz
int
stos
dec
popf
mov
lahf
imul
fstl
mov
sbb
rcr
pop
test
call
push
mov
mov
pushf
imul
cld
cmpsb
stos
lds
sub
mov
hlt
fldt
and
inc
addl
jecxz
xor
push
jecxz
popa
inc
leave
add
imul
inc
sub
jp
inc
and
cs
stc
pop
sub
push
cltd
mov
js
adc
mov
adc
xor
sub
jbe
neg
lock
add
sub
mov
add
arpl
xchg
xor
inc
mov
lahf
mov
mov
jnp
adc
ja
inc
scas
andb
out
dec
stc
add
push
into
sbb
pop
jmp
sub
rcrl
sbb
mov
decb
sub
es
imul
aad
inc
push
pop
mov
add
enter
jecxz
xor
mov
outsb
arpl
dec
dec
cmpsb
imul
dec
dec
xlat
pop
rep
fldcw
pop
or
in
lret
mov
addl
in
neg
fnsave
adc
cmpsb
dec
js
xchg
fiadds
or
call
mov
andl
inc
jp
xchg
xor
jns
arpl
sahf
pop
inc
out
push
dec
stos
xchg
mov
out
outsl
jbe
pushf
xor
add
jno
addb
xchg
ss
inc
push
cmp
pushf
mov
xorl
or
int3
cmp
fildll
mov
movsl
and
mov
mov
pop
push
dec
out
pop
sub
adc
mov
and
adc
cwtl
push
or
sbb
in
mov
xor
and
jmp
repnz
jbe
clc
fdivr
sub
xchg
inc
roll
out
imull
pop
into
xor
push
mov
ret
mov
mov
push
call
sub
fistpll
sbb
cmp
lahf
mov
jp
rcrb
loopne
pushf
stos
adc
or
into
jns
negb
sbb
repnz
and
xchg
shll
fs
es
shlb
cmp
jno
mov
aam
sbb
sbb
fwait
push
shrl
xchg
movsl
ds
icebp
mov
pop
js
mov
cld
mov
cmp
movq
insb
add
push
xor
xor
cmp
xchg
add
xchg
lods
ljmp
sbb
popf
sti
mov
rorb
dec
mov
neg
adc
pop
aas
pop
popf
movsbl
push
out
imul
inc
lret
sbb
inc
sbb
mov
stos
lcall
aad
xchg
sahf
imul
mov
pop
cs
jne
scas
add
movsl
insb
hlt
pop
cmpsl
jl
xchg
scas
sbb
xchg
in
mov
inc
sbb
dec
cld
out
dec
dec
das
xchg
sti
dec
fdivl
popf
jmp
pop
and
inc
or
in
in
jns
loope
sub
mov
jae
ja
das
test
in
add
and
mov
sbb
std
ror
jns
bound
or
xchg
cli
sbb
pop
in
xchg
lds
jg
enter
data16
push
sahf
pop
fiadds
or
fisttpl
pop
in
inc
or
stos
xor
and
pop
cmpb
in
add
jl
stos
sbb
push
mov
inc
loopne
xor
fcoms
jae
mov
and
scas
xchg
enter
adc
adc
push
fmull
shrl
mov
into
adc
cmpsl
loopne
aam
add
push
ja
fsubl
jno
leave
push
mov
xchg
push
dec
jle,pt
rcll
adc
pop
fcmovne
push
mov
fildll
sahf
movsb
jp
push
lock
push
test
pop
into
sbb
pushw
cwtl
or
mov
test
inc
outsl
sub
cmpsl
adcb
or
sar
or
aaa
pop
data16
or
pop
inc
sub
ret
daa
inc
xchg
cmp
aam
and
fdivl
shll
pop
jl
xchg
jo
mov
lock
clc
xorb
popf
fidivs
hlt
loop
enter
sahf
jl
repz
popa
inc
imull
je
leave
sub
xor
fwait
adc
dec
jl
adc
sbb
mov
sbb
xlat
jno
data16
lret
call
push
jno
cld
loopne
repz
adc
sti
lds
push
mov
xchg
into
mov
lcall
xor
je
add
push
and
in
jge
mov
jcxz
ret
or
mov
ffree
pop
push
cmp
adc
loope
jle
lea
xchg
ret
ljmp
shlb
les
lret
xor
mov
andb
gs
xchg
enter
dec
xor
sbb
aad
imul
xor
rorb
imul
nop
xor
mov
lret
cmp
cmp
fdiv
pop
frstor
lahf
pop
adc
mov
or
xor
test
xor
xchg
lcall
lock
sbb
and
sub
or
push
stos
dec
rcrb
sbb
sbbb
xchg
inc
mov
mov
insb
xor
in
imul
pop
aam
lahf
faddl
cmp
jb
add
rcrb
lea
xor
mov
adc
test
lea
xorb
cld
dec
pop
pop
jnp
repnz
es
in
mov
bound
sti
sub
mov
dec
movsl
mov
xchg
inc
loopne
lret
out
sbbb
loopne
lcall
mov
out
add
mov
xlat
lock
cmpsl
mov
xchg
mov
imul
or
and
enter
negl
test
cmp
sbb
ja
mov
push
push
hlt
xchg
jg
cmp
in
mov
sahf
cmc
leave
subl
stos
cmpsl
jns
cld
xor
adc
push
xchg
push
out
pop
loop
dec
lock
lds
cmp
push
scas
sti
jne
filds
pusha
in
int3
fsubs
sbb
fcmovb
sub
fmull
jae
xor
icebp
xchg
mulb
nop
mov
aas
mov
ftst
fistl
loopne
mov
adc
int
add
jle
pop
ds
rorl
jbe
xor
mov
mov
jnp
lea
mov
decl
cmp
cld
imulb
jmp
dec
fisttpll
shr
sahf
pop
movsl
jno
inc
out
xchg
sub
in
mull
push
jae
scas
fdiv
popa
dec
mov
xchg
ret
stos
adcb
push
nop
jo
cltd
fcomps
aam
insl
jmp
add
add
push
ljmp
pop
fimuls
mov
adc
movsl
test
jbe
test
mov
and
sub
imul
mov
mov
inc
shr
lret
sarl
mov
xchg
push
js
dec
andl
fwait
mov
and
jne
mov
test
outsl
pop
adc
inc
hlt
cmp
in
jns
orb
jne
stos
ss
hlt
das
mov
adc
insl
xchg
xchg
dec
push
dec
out
cmpsb
scas
test
pushf
sbb
stc
mov
jo
cmp
sbb
imul
and
push
in
add
adc
and
addl
sarb
les
mov
jl
mov
adc
mov
dec
xor
xor
cmpsl
in
popa
icebp
add
cmp
ja
add
pop
int3
inc
rolb
out
lret
pop
cmp
sub
xchg
dec
and
mov
mov
mov
gs
push
lods
sbb
sub
sahf
or
or
dec
test
and
sub
out
std
sub
mov
and
sahf
les
ss
stc
jle
pop
in
fcomps
sub
cmp
mov
adcb
sahf
cli
xchg
mov
adc
mov
cmp
mov
xchg
push
push
xchg
mov
shrl
cs
cmp
sti
push
mov
inc
sti
add
or
jge
and
sub
jbe
daa
les
xor
fsub
stos
pop
popf
adc
stos
jne
fldl
ret
mov
nop
fs
pop
mov
xlat
loop
jbe
cmp
lods
cld
testl
outsb
and
push
iret
call
push
pop
mov
adc
pushf
jp
lock
sub
in
sarb
loop
mov
das
xchg
lret
shrb
mov
sbb
mov
enter
daa
add
push
mov
add
jne
mov
loop
loope
scas
icebp
dec
lods
xor
jb
xchg
cmpsb
xchg
fdivrs
jg
icebp
call
movsl
adc
or
dec
aaa
test
mov
stos
mov
xchg
mov
insb
pshufw
sbb
movsb
fsubp
mov
sbb
call
mov
mov
gs
mov
scas
mov
movsb
pop
loope
jne
aas
cmp
jp
sti
jmp
sbb
xchg
in
sub
mov
loope
lods
dec
sarl
jne
mov
shrl
add
inc
aad
add
lret
pop
movsb
jbe
lret
push
jne
mov
inc
pop
or
lods
test
push
das
mov
lcall
dec
into
jl
mov
sbb
ret
sti
xchg
inc
pop
and
data16
xchg
xchg
in
push
sbb
lods
mov
and
inc
pop
mov
inc
cld
std
cwtl
or
inc
lret
inc
mov
mov
loope
mov
sahf
cmp
test
xor
shrb
mov
gs
dec
aad
jl
and
enter
rorb
dec
stos
inc
push
jo
or
mulb
scas
push
fcmove
mov
jnp
jle
dec
or
pop
mov
pop
and
out
lods
stos
pop
dec
imul
mov
pop
lds
mov
out
cs
out
xor
mov
fcmovbe
or
stc
mov
push
stos
and
std
ljmp
mov
or
cmpb
sub
imul
ljmp
and
mov
leave
test
dec
mov
adc
inc
mov
mov
and
push
test
mov
std
iret
and
sbb
inc
pop
and
pop
cmp
jg
lcall
aas
push
imul
xchg
js
and
inc
das
out
clc
add
mov
mov
xchg
jp
push
fnstsw
rcl
and
mov
inc
mov
inc
push
pop
or
in
clc
and
mov
enter
fdivrl
xlat
push
inc
dec
aaa
mov
and
mov
out
sbb
dec
in
outsl
adc
arpl
dec
in
sub
andl
ljmp
arpl
and
movsb
enter
pop
gs
sub
mov
jae
push
adc
loope
mov
push
and
jecxz
push
dec
rorl
es
in
arpl
cmp
dec
push
xchg
test
mov
xchg
inc
mov
xorb
or
sub
in
lahf
sub
jge
add
fmulp
notb
and
xor
mov
fistpll
int
fidivrs
xchg
mov
jg
xchg
xor
mov
lret
imulb
rcr
mov
cmpsl
push
sbb
sub
and
add
sbb
mov
jo
sbb
cmc
xor
icebp
pushf
xchg
lds
lea
or
in
mov
or
pop
stos
lods
mov
dec
jg
xchg
or
push
gs
imul
lock
sti
pusha
idiv
adc
mov
xor
in
insl
sbb
std
push
loope
lock
mov
or
mov
push
cmp
fistpl
popa
xchg
inc
fisubrl
fwait
int3
call
and
into
mov
rorl
mov
push
rcll
mov
mov
add
cmp
sbb
aas
stos
lock
in
sub
pop
jb
out
divl
push
das
inc
add
mov
xor
shll
lcall
ret
pop
shlb
push
add
rol
or
jg
cmp
jmp
and
mov
sbb
jl
hlt
cmpsb
popl
xor
adc
fisttpll
jecxz
push
clc
stos
das
jb
repz
cmp
mov
ret
inc
jl
lods
int3
inc
mov
sub
mov
mov
pop
test
bound
xchg
push
mov
je
orl
nop
out
rcrb
adc
push
push
sub
push
xchg
xchg
sbb
and
push
cld
cmp
lods
rcrb
aaa
dec
call
dec
mov
mov
mov
jae
or
movsl
into
cmpsb
idivl
push
dec
scas
mov
cli
mov
std
fnsave
ret
rorl
lret
lods
les
lds
xchg
push
stos
lea
push
and
repz
pop
dec
mov
mov
xor
jbe
cli
mov
test
cli
fs
mov
mov
scas
push
xorl
mov
add
aaa
dec
pop
in
sbb
mov
jb
inc
push
in
fsubr
cmp
xor
fidivrs
rol
xchg
imul
adc
icebp
xor
stos
pop
mov
std
lcall
adc
into
pop
mov
pop
mov
insb
outsl
cmp
mov
push
cmp
push
lret
xor
fs
lock
stos
aaa
push
stc
mov
mov
push
push
arpl
mov
inc
inc
lret
icebp
inc
sub
icebp
push
dec
insl
int
pop
mov
xchg
fiaddl
stc
and
out
les
adc
jge
fcoml
test
mov
lds
cld
pop
jecxz
arpl
cmp
lret
stos
iret
fisttps
imul
movsl
cmpsb
cmpsb
cli
push
lods
repnz
jp
insb
icebp
mov
xor
sbb
out
ficoml
out
mov
mov
adc
popa
sti
pop
cmp
or
dec
loop
mov
inc
jne
movsl
mov
aad
bound
dec
shll
std
jg
xor
std
dec
add
ss
mov
fisubl
loope
aad
jno
ja
jge
out
push
jmp
mov
idivl
in
mov
sub
inc
lods
pusha
stc
test
xor
push
mov
cmpsb
xchg
add
sahf
adc
out
lcall
out
pop
inc
rorl
push
push
and
xchg
sbb
int
adc
mov
adc
testb
inc
cmp
push
mov
in
icebp
dec
sub
ret
mov
and
push
in
sub
xchg
les
push
scas
dec
out
jo
pusha
data16
in
call
push
insl
mov
sub
sti
jno
leave
mov
pop
lds
ficoml
xor
aas
inc
pop
push
fwait
lahf
insl
icebp
adc
add
les
adc
and
outsb
mov
mov
popa
mov
fwait
sub
aas
jmp
mov
push
repnz
jge
es
lahf
mov
aaa
fs
inc
mov
mov
insb
or
add
lock
inc
adc
cmc
mov
mov
dec
adc
jo
fldenv
dec
xchg
daa
mov
leave
xor
call
jp
sub
jno
mov
mov
idivl
int
push
dec
fwait
aam
outsl
cmp
mov
xchg
shlb
fsubs
push
pop
xlat
fs
lret
into
jae
mov
dec
sbb
movsb
or
in
push
xchg
push
jge
mov
xorb
test
fdivl
mov
loope
pushf
adcl
push
mov
mov
xchg
aas
aam
ret
lea
mov
mov
push
loop
jnp
out
xchg
jmp
popa
orl
and
je
inc
inc
pushf
pop
jae
out
cli
lds
insl
push
orl
ficoms
outsb
push
mov
enter
inc
mov
xchg
xor
and
mov
aam
mov
lret
out
std
stos
fadds
imul
fists
mov
mov
jmp
ljmp
sbb
fidivrs
lret
scas
dec
and
mov
das
mov
dec
dec
int
dec
std
test
push
mov
jl
pop
inc
xchg
jmp
not
sbb
and
inc
inc
jne
cmpl
lcall
lea
leave
push
sbb
sbb
fidivl
push
or
xchg
cld
jecxz
adc
lods
jno
imul
call
cmp
xchg
mov
ljmp
jns
xchg
add
jb
jge
xchg
cmp
sbb
stc
rorb
xchg
bound
clc
data16
or
xor
or
mov
cmp
lods
das
mov
test
cmp
lods
stos
lock
lea
pop
sbb
std
inc
popf
cmp
aad
imul
gs
insl
inc
js
inc
jns
lcall
cmp
sub
lods
xlat
xchg
mov
in
inc
test
orl
inc
sbb
mov
cmp
sub
add
cltd
or
call
sbbl
jnp
mov
cmp
sbbl
add
fwait
adc
dec
mov
xchg
jne
jp
mov
inc
push
int
enter
inc
jmp
popa
imul
adc
mov
jecxz
xor
jns
mov
stos
dec
mov
sbb
xor
pushf
push
lods
jo
inc
std
xchg
dec
jbe
fimuls
sarl
aas
cmpsl
jnp
ja
push
ljmp
mov
int
inc
cmp
cmpsl
xor
inc
test
cld
dec
in
insb
xor
inc
jecxz
and
adc
or
sbb
pop
mov
pop
addr16
push
xlat
push
mov
adc
aaa
les
imul
cmp
icebp
ljmp
adc
sbb
lret
imul
add
jge
dec
pop
fmull
jnp
bound
cmp
data16
imul
dec
adc
pop
scas
test
fsincos
xchg
adc
jecxz
sbb
addr16
sub
xor
mov
stc
iret
jnp
addr16
outsl
add
mov
adc
fisubrl
lock
adc
jecxz
sbb
out
out
xor
imul
jl
adc
push
xchg
or
xor
shrb
mov
test
loopne
add
push
imul
bound
insb
sarl
je
int3
rorb
cmp
or
int3
cmpsb
adc
hlt
ljmp
add
cltd
lea
test
xor
cltd
sbb
imul
clc
frstor
test
xor
gs
push
cmp
sbb
loop
dec
mov
pop
jnp
sbbb
sbb
mov
xchg
dec
adc
sbb
sub
out
cltd
lret
arpl
lock
jo
and
cmpsl
lcall
hlt
mov
and
add
sub
cmp
mov
lcall
adc
cmc
leave
jmp
adc
fistps
or
cmp
flds
pop
aad
sti
shr
das
jmp
lea
testl
fstpt
in
js
jmp
mov
sub
pop
or
test
lea
mov
fwait
loopne
insb
cmc
arpl
and
or
out
xor
movsl
mov
adc
cmpsl
lret
sbb
repz
int
pop
xchg
sub
insb
ljmp
stc
leave
test
inc
clc
icebp
mov
mov
xlat
popf
mov
lods
xchg
popf
loopne
aad
sbb
outsl
loop
clc
mov
sub
repz
jo
and
xchg
fidivs
xchg
sti
inc
fdivrp
clc
loopne
call
cs
or
rclb
inc
and
or
inc
std
mov
in
mov
mov
add
dec
mov
xchg
mov
arpl
push
lret
cmpsb
inc
jl
test
das
pop
jnp
test
orb
sub
imul
aas
mov
mov
add
jb
call
adcb
insb
fmull
insl
repz
push
ljmp
lahf
insb
sar
into
movsb
js
jno
out
push
xchg
int3
rcl
mov
sti
clc
mov
sub
mov
insl
nop
mov
add
pop
popa
testl
xorb
xor
shr
or
xchg
out
push
rorb
mov
mov
mov
adc
push
lcall
ffreep
jge
sbb
out
push
fisttps
mov
adc
loope
mov
and
daa
or
mov
xor
jecxz
mov
jg
jae
xchg
inc
inc
fcoml
sbb
or
fbstp
jmp
popa
xor
xchg
mov
inc
xor
cld
inc
cmc
jb
popf
ret
out
cltd
imul
xchg
pop
imulb
dec
loop
or
and
movsb
lds
test
adc
dec
mov
popa
mov
shll
adc
sbb
fstl
hlt
rcr
inc
xor
or
lret
aas
xor
in
mov
shll
jg
push
or
and
sub
cmp
add
adc
pop
aam
fnsave
adc
lcall
mov
sub
cmp
into
adc
jp
xchg
mov
cs
ljmp
idiv
xchg
shrl
jns
test
cltd
cmp
push
push
or
fwait
idivl
into
and
add
xchg
mov
mov
pop
mov
fs
lea
cmc
jecxz
sarl
xchg
outsl
movsb
mov
daa
sub
and
mov
sub
test
jne
mov
add
dec
xchg
jecxz
ret
xor
xor
pop
add
andl
xor
in
cmpsl
clc
ljmp
andl
cmp
ds
sub
jbe
clc
inc
mov
mov
sarl
lock
les
pusha
shlb
imul
cmp
sub
add
sub
mov
mov
bound
mov
ss
sub
jp
and
movsl
movsb
add
aaa
ret
test
movsl
cmp
mov
push
xchg
pusha
xchg
xchg
hlt
pusha
subb
or
in
cmpsb
das
stc
lcall
popf
popa
cmp
pop
inc
dec
mov
mov
scas
ds
mov
nop
sarl
insl
push
sarb
adc
mov
dec
xchg
ljmp
cmp
sbb
xor
add
pop
sahf
movsb
cmp
jbe
lea
mov
clc
aam
loope
and
insb
js
mov
imul
jp
and
adc
add
sbb
inc
lods
enter
dec
sar
into
cli
data16
adc
sbb
dec
xchg
sub
xchg
pop
outsb
xchg
cmpsb
lea
mov
loope
aam
lahf
mov
and
cmpsl
es
jp
xor
sub
ret
leave
repnz
and
pusha
sub
aaa
and
cs
jp
cmp
add
in
sbbb
adc
inc
jns
nop
sti
sbb
lea
jmp
mov
gs
fnsave
mov
inc
mov
fs
mov
and
les
jl
cmp
push
mov
push
adc
sub
inc
jo
mov
inc
jp
das
es
jp
leave
nop
arpl
push
sub
pop
std
sub
fdivs
notb
nop
cltd
test
adc
xor
cmc
insb
xor
dec
mov
add
push
cmp
jge
xor
sahf
movl
mov
fldt
popa
xor
inc
jo
push
mov
cmp
ja
scas
mov
jl
adc
push
adc
mov
call
pop
arpl
mov
ror
jg
icebp
push
fcoml
or
adcb
push
rcr
in
push
and
push
or
cld
call
subb
sti
adc
cmc
or
xchg
mov
mov
mov
repz
cmpsb
notl
xor
das
lods
adc
and
add
mov
mov
cmp
pop
jp
jae
lock
cmc
outsb
gs
adc
add
mov
nop
adc
or
add
and
cmp
in
fldt
jnp
mov
pop
cltd
shlb
fmull
fistl
jg
inc
jecxz
or
mov
xchg
mov
fsub
repz
add
call
ficoml
sbb
in
push
fstpl
in
sub
mov
popf
mov
mov
sbb
rcll
in
sub
mov
xor
insl
sarl
push
clc
inc
popa
aam
popa
out
rorl
loop
jle
adc
stos
pop
filds
mov
cmpl
incl
stc
fdivr
adc
push
call
popa
fwait
nop
and
flds
test
and
mov
js
mov
es
pop
jmpw
mov
test
pop
imul
das
xchg
cli
sub
ljmp
inc
dec
add
and
cwtl
subb
fsubs
mov
pop
add
insb
pop
popa
insb
insb
xchg
push
mov
shll
xchg
push
inc
scas
in
push
data16
push
jbe
nop
cmc
jmp
lret
and
ficomps
and
add
mov
idivb
push
push
imul
sti
stos
xchg
xor
push
into
push
lods
sbb
jnp
mov
push
xchg
outsb
mov
fisubs
cmp
pop
push
ljmp
jnp
jne
call
pusha
push
xlat
imul
pop
int3
and
push
jo
push
sbb
imul
pop
int
jbe
dec
and
mov
ljmp
fdivr
mov
es
mov
movsl
sti
jmp
ret
movsl
enter
xchg
adc
adc
adc
test
xchg
inc
mov
sbb
push
mov
test
inc
fnsave
call
sahf
xor
aad
mov
dec
rorb
psubsb
inc
xchg
adc
test
push
clc
lret
xchg
mov
sbb
pop
push
in
sahf
sub
lea
sub
inc
data16
stos
push
into
fwait
add
xchg
aam
inc
arpl
idiv
inc
add
jbe
std
mov
mov
adc
cmp
pop
and
popf
push
inc
stos
jnp
inc
test
xor
jmp
add
sub
xor
mov
cmp
cmpsl
cmp
in
leave
leave
pop
aas
in
in
pushf
and
test
cwtl
mov
cli
dec
cs
xlat
adc
pop
js
push
in
inc
clc
fsubrs
mov
xor
imul
jne
sbb
adc
push
lock
push
jle
jg
fcomi
insl
icebp
cmc
inc
outsb
imul
mov
xor
and
fisttpll
ret
push
dec
sbb
push
aaa
mov
sbb
sub
or
in
add
ja
cmp
in
pop
mov
fs
and
add
dec
cmc
rclb
pop
rcl
pop
test
pop
mov
add
mulb
inc
stos
dec
cmc
mov
inc
insl
insl
mov
ja
pop
jo
fsts
and
pop
push
push
adc
outsl
ret
jns
jp
insl
pushf
mov
xor
cmp
mov
push
ret
aaa
jg
inc
je
popa
sbb
cmp
rcr
cmp
push
pushf
jne
sar
leave
inc
inc
push
pop
ds
into
imulb
faddl
out
lea
fdivl
cmp
sbb
in
inc
sbb
mov
push
and
jns
pop
cltd
shll
jnp
or
call
fsts
adc
mov
sub
adc
imul
mov
mov
sbb
lds
adc
dec
jecxz
xchg
inc
and
loopne
pop
jnp
jle
enter
xchg
pop
jb
sub
mov
mov
xor
adc
dec
cltd
es
cmp
fbstp
pushf
ss
mov
pop
xor
fcmovb
adc
pop
roll
adc
out
inc
xor
jge
lret
in
adc
out
fiadds
in
push
cmc
push
outsl
and
rorb
popf
out
or
sub
pop
and
sub
push
es
mov
xor
popa
mov
popa
and
add
aas
fiaddl
lods
sub
mov
xor
clc
and
push
sahf
mov
jle
leave
pushf
incl
xchg
jg
je
jecxz
cmp
cmp
mov
loope
mov
xchg
mov
inc
push
pop
mov
mov
sar
int3
add
ljmp
mov
out
sbb
insl
cmp
mov
test
div
shll
std
lock
cmpsl
xor
xor
jnp
dec
push
leave
in
push
pop
lret
leave
loope
cmp
psubd
adc
movsb
lret
push
repz
jnp
sahf
xor
addr16
inc
jg,pn
shrb
dec
dec
lods
mov
jmp
es
fsubrl
cmp
or
lret
movb
aad
lods
adc
ret
or
sbb
inc
jbe
dec
sbb
jo
pop
xor
lret
push
sbb
lcall
movsb
or
outsb
mov
scas
add
jge
xor
imul
push
mov
jl
lret
xor
sub
push
jo
sbb
pop
push
fldt
sbb
sub
rorl
fmuls
mov
lock
repz
outsl
pop
sahf
repnz
mov
inc
jns
sub
add
or
push
mov
fisttps
inc
into
lock
pop
lods
dec
xor
xlat
lret
cltd
loopne
sub
fsubs
sbb
sti
xchg
cmp
ss
ds
test
cltd
shrl
test
pop
fsubrl
xchg
mov
add
daa
push
xchg
outsl
jno
dec
repnz
mulb
lcall
int3
orb
pop
mov
add
mov
push
call
fisubs
mov
add
pop
aam
loop
xchg
jl
inc
xchg
imul
lods
scas
insl
mov
xchg
mov
ss
idivb
out
mov
dec
cli
fisubrs
aam
daa
jbe
aad
mov
inc
fisubrl
mov
mov
mov
pop
push
daa
inc
or
and
ret
xchg
pop
push
cmp
pushf
xorl
add
xchg
mov
sub
sarb
fdiv
add
cwtl
enter
xor
mov
add
addr16
sub
jl
cmp
push
ds
out
mov
das
xchg
mov
test
mov
sbb
lods
mov
mov
sub
cli
mov
scas
sub
adc
jp
cwtl
es
fmul
sbbl
or
or
dec
fdivl
out
dec
xchg
cmp
movsb
cwtl
fstp
sub
in
aad
pop
aad
jnp
outsl
outsb
mov
lcall
xchg
ret
sub
and
lcall
xor
addr16
add
push
push
xor
jno
dec
fcoms
or
clts
or
cli
inc
out
jecxz
lock
jns
pop
ret
aaa
sub
pop
movsl
xor
ljmp
push
pop
or
sbb
cltd
fwait
insl
adc
inc
lock
xor
pop
inc
dec
cli
in
cld
dec
outsl
dec
imul
push
dec
push
xchg
gs
jns
lahf
imul
sub
mov
popa
loopne
jle
dec
mov
stos
jecxz
mov
fdivrp
cmp
push
mov
xchg
mov
sub
stos
cmp
lcall
hlt
cmp
xor
mov
testl
mull
xor
test
notb
cld
test
mov
lods
mov
inc
cmp
sub
jl
hlt
inc
mov
sti
gs
pop
ds
arpl
or
sbb
dec
loopne
xor
lret
sahf
leave
les
insl
pop
into
fildll
clc
cli
and
nop
inc
sub
xor
stos
out
inc
and
xor
addr16
cmp
cmp
lods
lock
mov
jmp
or
popf
jmp
imul
and
add
mov
push
das
push
cltd
mov
add
xor
lods
cmp
or
imul
jne
xor
mov
andb
dec
sub
gs
mov
stc
loopne
inc
cmp
daa
sarl
repnz
je
sub
incb
jno
test
cld
mov
aad
shll
into
fs
stc
cmpsb
mov
mov
sbb
mov
sub
cmp
mov
mov
enter
insl
fdivrs
lods
data16
mov
std
mov
stc
dec
loope
mov
shrb
es
bnd
cli
mov
jns
ja
stc
insb
test
adcb
push
inc
je
pop
adc
mov
cmpsl
push
stos
push
test
inc
repz
mov
dec
mov
add
jae
and
imul
mov
stos
setne
fsubrl
js
sub
adc
xor
add
push
sbb
dec
test
call
xor
cmp
xchg
mov
mov
popf
movl
fucomp
bound
cltd
jae
mov
mov
into
pop
call
mov
fs
xlat
test
sbb
test
rcr
pop
mov
ss
aaa
out
push
xor
inc
and
arpl
fs
fs
bnd
int
jns
dec
xor
leave
inc
cmp
inc
dec
sub
into
pop
scas
mov
es
rcrl
pop
mov
jae
xchg
dec
dec
mov
lcall
adc
xor
mov
in
sub
fbstp
leave
call
push
xor
int3
mov
adc
pop
or
sub
adc
fdivr
in
jmp
enter
stc
pop
out
mov
sbb
xchg
push
dec
inc
pushf
push
push
sarb
lods
pop
lcall
inc
and
mov
ljmp
dec
mov
aam
jns
xor
xor
push
fcomps
shl
push
iret
add
lods
sbb
sub
and
jg
popa
outsl
xchg
pop
mov
pop
int3
adc
xor
pop
inc
push
push
test
enter
or
sub
jg
popf
sbb
sbb
movsl
pop
cmp
jbe
or
jnp
or
test
or
xchg
mov
xor
scas
cmpsb
or
bound
cmpsb
sub
mov
stos
add
inc
mov
ficoml
cmc
pop
scas
popl
sub
test
insb
jmp
daa
shrl
fiaddl
roll
mov
subb
pop
inc
adc
mov
push
into
cmpsb
dec
adc
add
push
icebp
stos
mov
and
mov
jbe
dec
mov
push
inc
repnz
or
xchg
cmp
xor
fisubrs
roll
xor
sbb
popa
xchg
or
repz
pop
cmp
cli
scas
movsl
xor
out
shll
jnp
fiaddl
cmpsl
ret
xchg
lahf
xor
add
mov
or
push
xor
push
jb
cs
in
add
dec
push
cmc
push
and
mov
test
fidivrs
push
mov
adc
jle
pop
ss
add
pop
fs
xor
adc
out
popa
pop
mov
sti
lahf
popf
sbb
call
cmp
mov
adc
inc
subl
adc
mov
push
sti
mov
or
jb
nop
mov
cmpsl
dec
cmp
adc
jl
mov
jmp
push
and
or
xlat
ja
xchg
jg
xchg
pop
push
or
or
fsubs
nop
lods
ds
push
pop
in
lea
jl
int
cmpsb
or
cmp
dec
fucomp
mov
push
and
xor
out
cs
int3
inc
or
sbb
mov
sbb
push
inc
lss
cmp
lret
add
sbb
inc
rcll
sbb
sbb
jg
loop
xchg
add
ljmp
push
sub
aas
les
loopne
and
adcl
mov
inc
shlb
cmp
dec
inc
dec
pop
xchg
dec
pop
fs
gs
adc
mov
ja
pop
shrl
mov
aaa
lods
sarb
pop
lds
xor
mov
xor
aam
sub
loop
imul
xor
hlt
insl
xor
mov
jge
and
mov
in
inc
dec
jmp
sbb
pop
xchg
mov
xor
fimuls
or
popf
xor
out
div
and
lods
fwait
icebp
fdivl
lock
popa
hlt
adc
mov
rcrl
je
out
push
or
mov
test
popf
ret
rclb
jnp
jmp
popa
bound
jno
in
sub
xor
push
pop
jbe
shll
js
inc
imul
cmpsl
in
into
cwtl
and
out
aad
out
icebp
mov
aas
icebp
pushl
clc
wbinvd
imul
shll
cmp
lods
push
test
push
jne
mov
dec
insl
jae
pushf
sbbb
jmp
fistl
aam
std
fsubs
add
adc
pop
out
cmp
push
repnz
dec
sbb
sbb
adc
out
aam
fs
insb
jnp
mov
mov
loope
aaa
imul
xchg
push
adc
flds
pop
in
mov
mov
out
inc
pushf
std
mov
pushf
arpl
fistpll
in
inc
ja
mov
mov
push
push
cmp
inc
pop
mov
cmp
add
leave
cmp
mov
pop
sbb
out
cmp
jg
sub
pop
add
push
push
push
push
sbb
jmp
ljmp
cmpb
cwtl
fwait
xchg
lds
cmpsb
xchg
xor
mov
orl
push
add
mov
xchg
and
or
stc
xchg
xor
fcomp
mov
mov
std
insb
add
pop
push
sbb
repnz
cltd
lcall
and
pushf
ret
jmp
sub
loope
dec
movsl
je
lret
jle
and
aam
dec
ds
jg
movsl
loopne
push
ja
leave
data16
lock
rcl
lods
inc
fistpl
stc
push
cmp
lods
xlat
cmp
dec
dec
inc
cmp
or
fs
test
jne
hlt
out
xchg
fildll
cmp
push
fwait
dec
stc
and
add
out
mov
cs
xchg
filds
jnp
fmull
push
in
sbb
mov
mov
scas
jge
push
jno
test
cmp
ret
sub
xor
insl
jb
cmp
sahf
mov
adc
and
jp
dec
inc
cmp
cmp
jp
outsl
and
popf
dec
or
dec
mov
dec
xchg
adc
js
mov
pop
fadd
push
daa
cmp
mov
jb
mov
cmp
rcll
push
mov
mov
jge
hlt
jle
sbb
mov
inc
adc
mov
pop
insl
rcrb
or
xchg
jp
inc
out
les
lret
push
clc
dec
add
decl
in
stos
jno
dec
fbld
push
sbb
addr16
push
bound
inc
loop
inc
jg
adc
xchg
testb
mov
add
leave
loope
add
fimuls
and
cmp
pop
mov
mov
clc
push
pop
sub
enter
sbb
pop
xor
sub
sub
popa
dec
loope
js
pop
and
pop
out
and
leave
rcll
sbb
aam
scas
fimull
out
mov
pop
in
cli
mov
or
ljmp
enter
mov
inc
les
jb
xchg
push
push
xchg
inc
test
lea
jg
lret
out
pop
xchg
jg
dec
push
jle
push
mov
xchg
lahf
popf
popa
or
jp
dec
testb
test
gs
fsts
nop
sub
gs
mov
popa
xchg
das
xchg
imull
in
cld
sarl
pop
js
ja
lods
nop
std
stc
dec
xor
inc
inc
dec
loopne
adc
mov
rep
jne
push
sub
push
add
sarl
mov
mov
dec
loop
das
gs
mov
cmp
jecxz
loopne
mov
sub
decb
push
fwait
adc
or
pop
add
dec
jg
xor
outsb
pop
and
mov
shll
shr
jle
mov
scas
js
add
or
or
ret
fimuls
mov
adc
iret
push
dec
ret
or
sbb
clc
mov
into
mov
adc
dec
fdiv
dec
xor
in
call
push
push
enter
cmp
loope
mov
xchg
inc
add
rcr
mov
xchg
xor
sub
sub
movsb
xchg
dec
cmp
pop
gs
fistpll
shrb
jno
adc
push
pop
mov
sbb
call
js
dec
aas
cmp
enter
mov
out
xchg
popa
sbb
jae
xchg
outsl
push
repz
cwtl
js
out
sub
fwait
push
data16
shrl
clc
les
inc
gs
push
push
xchg
sub
insl
arpl
fadd
std
push
xchg
xchg
jp
gs
ficoml
jbe
fsubs
ficoml
push
sbb
jns
push
out
add
leave
inc
inc
dec
adc
lcall
fistps
fnstcw
adc
xor
ficoml
mov
sub
mov
push
cli
test
push
in
cmp
jo
inc
sbb
nop
out
loope
shll
push
push
xor
in
outsl
or
mov
or
aaa
add
push
cmp
movsl
dec
movsl
xchg
pop
mov
orl
add
test
push
lds
pop
ss
mov
dec
mov
bound
sbb
sarl
jnp
add
sub
dec
scas
push
sbb
out
scas
loop
es
imul
and
dec
adc
std
ds
daa
mov
leave
mov
call
je
or
inc
xchg
call
test
je
jb
lcall
mov
ds
rcrl
push
mov
cmp
roll
pop
movsl
ljmp
cmpsb
jle
insb
gs
es
xchg
pop
xchg
sbb
roll
sub
add
inc
iret
arpl
jmp
add
sub
mov
push
xor
in
dec
pushf
cmpsl
mov
outsb
mov
xlat
adc
mov
clc
xor
pushf
aaa
sbb
loopne
ljmp
xor
sahf
in
aaa
or
ret
push
enter
sahf
adc
push
dec
add
shr
fisubrl
mov
adc
sti
mov
jns
insl
fdivrl
stc
push
pop
xor
mov
jg
fwait
dec
test
xchg
sbb
mov
xchg
adc
mov
mov
mov
std
mov
nop
dec
sbb
dec
jle
std
leave
addb
hlt
das
movl
mov
andb
mov
pop
es
xor
fs
and
popa
ds
mov
loop
mov
push
dec
cmp
add
test
idivl
aad
xchg
sbb
loop
push
out
lds
leave
mov
mov
test
aam
jg
inc
or
add
cmp
pop
clc
jmp
aaa
std
iret
shl
mov
cmpsb
adc
movsl
icebp
lds
sarl
sbb
and
xor
push
jnp
in
leave
inc
sub
insl
das
bndstx
test
cmp
sahf
shll
shll
sbbl
add
popa
lahf
ud2
fwait
cmp
dec
je
call
mov
xchg
dec
out
cs
pop
std
ljmp
icebp
sbb
and
mov
and
js
and
arpl
lods
dec
test
in
jge
push
rcrb
setbe
jne
and
add
aas
push
dec
xchg
mov
cmpsb
fwait
loope
int3
popf
setbe
and
int
lret
push
adc
lcall
sub
paddq
mov
cltd
jge
outsb
cmp
xor
lcall
lahf
in
loopne
clc
shrb
or
add
nop
xchg
in
push
jb
je
aam
cmpsl
pop
fsubrp
mov
dec
xchg
test
xchg
pop
adc
mov
pop
mov
cmp
sub
pop
out
lcall
imul
mov
aaa
mov
outsb
fwait
mov
jne
fmul
mov
rcrb
jne
jnp
pop
mov
push
mov
push
in
clc
mov
call
mov
lods
push
clc
push
jl
sbb
mov
lret
shll
jecxz
and
ja
pop
push
xchg
imul
pop
dec
popf
shlb
push
test
cmp
addr16
mov
ret
shrb
push
out
mov
nop
push
cmp
pushf
out
and
mov
push
jns
divb
mov
push
xchg
cld
sub
addb
imul
stos
and
mov
push
fistl
ret
test
push
fdiv
fnop
push
dec
in
mov
iret
jbe
test
pop
push
push
data16
inc
mov
xchg
jae
inc
push
xchg
aad
dec
arpl
mov
stos
cltd
jg
dec
icebp
outsl
lea
push
ret
and
sub
mov
adc
notb
xor
adc
js
add
jl
sub
xchg
cmp
shll
sbb
lcall
mov
pop
cmp
xchg
outsb
jae
lcall
xchg
aad
jb
sahf
imul
xor
jge
jmp
add
stos
mov
daa
rclb
add
mov
xlat
pushf
xchg
cmp
mov
stos
cwtl
iret
lret
sar
adc
loope
das
add
lcall
out
lods
jl
jae
xlat
fbstp
pop
jmp
mov
and
xor
outsl
sub
stc
and
outsl
popf
ds
fldt
aam
mov
xor
sbb
jno
mov
imul
out
mov
lods
xor
xchg
div
loopne
ficoms
lock
add
add
rorb
leave
cmpb
push
sub
push
xor
xchg
es
scas
mov
dec
and
sarl
sub
jg
jg
decl
or
mov
lods
test
push
dec
fstps
rorl
pop
push
pop
adc
fucom
mov
inc
jns
mov
cmp
lret
notrack
divl
lock
adc
dec
jbe
push
into
xchg
out
hlt
xchg
movsb
jmp
out
jp
mov
sti
out
sub
andb
inc
inc
jecxz
inc
sub
int3
lea
je
jne
sahf
in
sti
pushf
push
mov
xchg
sahf
pop
sahf
jns
mov
dec
addl
test
lahf
loope
mov
enter
inc
cli
xor
lods
jnp
cmc
ret
adc
aas
xchg
xor
sbb
mov
push
mov
push
andb
shlb
or
insl
jl
mov
mov
and
mov
shrl
stc
cmp
jae
xlat
cmpsl
pushf
cwtl
or
push
jns
repnz
pop
push
fldl
push
xchg
fidivrs
fstpl
mov
in
sbb
jns
or
repnz
pusha
pop
insb
and
cs
testb
adc
test
std
sbb
push
rolb
faddp
cmpsb
jle
jno
and
insb
data16
dec
lret
mov
repnz
pop
nop
inc
dec
sub
sub
shll
inc
or
stc
lahf
sbb
dec
xor
sub
xchg
jmp
stc
adc
mov
stos
pushf
aad
int3
cmpb
xor
dec
sub
mov
je
shrl
pop
pop
xorb
jns
adc
sub
dec
cmp
arpl
pop
shrb
or
fs
adc
dec
adc
shll
xor
jg
or
push
adc
inc
daa
std
mov
and
call
rol
popa
or
ret
pop
push
decl
mov
ds
cmp
notl
loope
ret
mov
push
pop
dec
jae
adc
push
imul
cmpsl
cmp
sub
insl
hlt
fisttpll
mov
sbb
ljmp
inc
cli
jae
pop
ss
push
pop
xor
stos
adc
push
pop
js
jle
jo
clc
out
adc
xor
cmp
pop
mov
es
xchg
jp
and
fwait
add
jb
fcmovnu
sahf
xchg
dec
shll
dec
in
mov
push
jns
dec
iret
shl
daa
fisttps
cli
or
xor
fbld
pop
fwait
mov
fs
jmp
push
js
jno
jno
sbb
mov
sbb
movsb
loopne
loopne
ja
and
jg
ret
lahf
cwtl
xchg
and
mov
or
jg
jnp
cltd
out
and
xor
call
xor
stos
cld
jmp
stos
mov
add
jge
lret
adc
mov
ret
dec
andl
loopne
and
cmp
loopne
mov
mov
test
cld
cmc
out
push
adcl
mov
mov
imul
jmp
test
sbb
lcall
xchg
aas
andb
xchg
jo
push
les
test
sbb
scas
pop
fsubrs
sbb
jl
or
push
dec
sub
push
sbb
xlat
stos
fisubs
and
jae
fbstp
out
js
daa
mov
xchg
push
pushf
sub
test
adc
in
out
pop
jp
mov
popa
inc
mov
iret
or
mov
xor
pop
mov
dec
push
xor
test
and
test
mov
jg
arpl
pop
xchg
pushf
out
out
or
jl
adc
inc
jmp
xlat
enter
push
mov
ljmp
shll
and
dec
pop
mov
jns
std
cmpsl
push
pop
cmp
mov
repz
jns
test
mov
cwtl
in
add
ja
sub
pop
lds
pop
hlt
ja
jmp
push
arpl
mov
ret
pop
bound
pop
adc
cwtl
pop
mov
ficoms
mov
leave
cs
movsb
add
pop
int
daa
sub
mov
popa
sbb
lfs
ds
and
jmp
rcrb
adcb
pushf
push
insb
push
push
or
sub
sub
adc
in
jecxz
dec
in
shll
xchg
lock
mov
xchg
mov
test
mov
push
push
jl
addr16
adc
sub
loopne
ds
out
add
movsl
in
daa
jbe
cmp
fiadds
jb
clc
sub
pop
dec
lods
int
dec
bound
je
movsl
xchg
movl
das
jo
movsl
rcrl
sbb
pop
push
dec
add
loope
icebp
paddq
mov
mov
jnp
xchg
mov
test
imul
jo
lret
cmp
mov
popf
dec
push
mov
adc
push
in
mov
push
mov
dec
out
and
xor
les
neg
xchg
mov
xor
push
jmp
jg
xor
lods
add
mov
pusha
test
push
mov
je
adc
mov
or
in
movsb
cli
sbb
addr16
imul
sbb
insb
and
xlat
pusha
mov
xchg
jmp
stos
loopne
push
fbld
enter
inc
fstpl
dec
inc
sbb
aad
in
fsubp
popl
push
mov
or
cmpsb
test
insl
aad
jl
xchg
test
test
ret
cmc
lea
pop
xchg
mov
cmc
push
mull
subl
pop
les
mov
outsl
jbe
jle
push
ja
lret
xor
lcall
ret
mov
or
xchg
cltd
movsb
jnp
xor
adc
xchg
gs
lods
mov
dec
jae
bound
fwait
mov
dec
iret
scas
andb
aad
jbe
xchg
lahf
cltd
mov
or
jmp
leave
xchg
arpl
jne
cmc
or
push
lret
jl
loopne
inc
movsb
stos
xor
xor
cltd
cmp
xchg
jbe
and
and
ja
cmp
pop
inc
ret
add
lret
nop
enter
push
insl
mov
cld
cwtl
and
aas
and
push
inc
xchg
xchg
fsubl
cwtl
cmp
mov
in
inc
xlat
sahf
addr16
mov
in
lock
out
lea
cmp
cmp
sbbl
mov
xchg
jne
jge
inc
daa
jae
cwtl
or
mov
rclb
lret
add
lds
mov
inc
push
adc
inc
cli
jb
in
dec
mov
cmpsl
or
aad
int3
jo
sahf
dec
inc
fisttpll
pop
cli
xchg
cmpb
mov
and
and
inc
xor
je
outsb
fisttpl
push
adc
sub
mov
fimuls
arpl
daa
in
xor
int3
push
or
xlat
pusha
aam
icebp
pushf
and
jle
pop
ljmp
cmc
and
test
aas
sbb
call
mov
je
shlb
pop
push
call
jbe
shll
popa
andl
or
nop
cmpsb
sti
sbb
outsb
mov
adc
or
add
add
loop
pop
pop
sub
pop
arpl
popa
ret
jp
or
pushf
pop
int
cmp
cmc
sub
add
push
pop
outsl
imul
adc
sbb
mov
lret
int3
cs
or
repnz
sub
out
ds
lds
sub
stc
push
test
dec
rcrb
cmp
test
fwait
mov
ljmp
test
scas
sub
xor
cmpsb
lock
mov
dec
mov
xchg
dec
xor
js
int
pop
mov
sbb
xchg
mov
das
push
push
sbb
jnp
ret
sbb
dec
ja
call
sbb
jbe
call
cmpb
rorb
fldt
pop
push
pop
test
aaa
jb
mov
adc
int3
bnd
cmpsb
mov
int
call
pop
xchg
cmpsl
sbb
inc
mov
adc
data16
nop
push
dec
movsl
rol
add
push
jo
out
fs
je
mov
gs
int3
xchg
imul
adcl
push
movlps
out
mov
lahf
xchg
push
mov
mov
test
sub
ss
arpl
push
sub
mov
insl
enter
mov
stos
cmpb
das
imul
movsb
mov
adc
mov
aaa
insb
ret
push
test
sub
out
fdivs
add
roll
addr16
pusha
pushf
and
push
pop
rcr
aad
cmp
lcall
mov
push
sar
xor
mov
xor
hlt
cmp
out
pop
push
mov
movb
dec
fcomps
or
xchg
hlt
lret
inc
aam
lahf
and
js
iret
push
jecxz
add
sbb
mov
adc
push
bound
mov
aad
pop
repz
push
dec
repz
iret
mov
fs
fwait
jnp
jmp
xchg
gs
imul
pop
shl
and
xchg
adc
push
mov
and
stos
mov
or
xchg
add
cltd
popa
jle
inc
call
cmpb
pushf
xchg
sub
dec
jp
out
push
inc
mov
nop
cwtl
inc
mov
dec
inc
add
lods
inc
push
sbb
push
push
pop
dec
iret
test
mov
lock
aam
movsl
mov
pop
pop
aaa
pop
mov
out
mov
cltd
xorl
pop
insb
idivb
pop
push
mov
leave
shl
aad
xor
cli
push
pusha
movsl
pop
jbe
mov
rcr
inc
enter
or
mov
push
cwtl
ret
rcll
fs
xor
je
dec
lock
jb
roll
push
mov
dec
mov
dec
mov
or
mov
out
cmpsl
shll
imul
xor
mov
and
cld
int
push
std
lds
repnz
js
cmp
xor
out
sub
out
pop
or
adc
lds
or
pop
push
jl
std
cmpsl
adc
xchg
pop
jns
arpl
int
and
stos
cli
mov
sub
cmpsb
jno
jp
out
hlt
cld
mov
data16
dec
pop
aas
inc
lea
inc
mov
gs
mov
lods
ljmp
xchg
sub
dec
cmp
push
les
cmp
in
dec
add
or
push
or
pop
test
sub
lahf
cmp
jge
hlt
sahf
aam
cmpsb
adc
imul
adc
lods
push
aad
mov
hlt
dec
dec
lea
arpl
test
hlt
and
leave
sub
idivl
loop
dec
std
add
or
sti
imul
pop
sbb
imul
sbb
add
xchg
sbb
loope
fildl
mov
outsb
cwtl
jnp
testb
fmul
popf
scas
mov
lods
push
data16
mov
loope
xor
icebp
bound
push
fildll
mov
mov
idiv
shrb
adc
outsb
bnd
popa
ljmp
leave
mov
push
gs
cmp
out
and
mov
addl
inc
je
mov
add
orl
popf
lods
sbb
out
out
cmp
sbbl
cmp
icebp
pop
adc
out
mov
fs
aas
loopne
orl
daa
mov
ja
fidivrs
adc
push
imul
icebp
or
cltd
sub
popf
mov
mov
mov
in
arpl
pop
and
xchg
inc
test
int
int
ja
xchg
cmp
imul
test
dec
dec
lea
xlat
inc
and
mov
cli
mov
jae
nop
or
imul
test
mov
add
imul
cmp
or
and
daa
add
pop
xlat
out
shll
sub
mov
add
xchg
test
dec
loopne
mov
push
add
mov
testl
test
sbb
imul
pop
scas
cmp
rcl
push
out
adc
notb
faddl
sbb
ret
push
mov
jge
sbb
lods
pop
pushf
xorb
inc
mov
es
sub
inc
in
negl
aaa
xor
push
jle
ret
loope
cmp
out
cmp
das
loopne
xchg
or
dec
push
push
adc
shll
mov
aad
enter
cmc
enter
mov
mov
aad
divl
in
jo
ficoml
add
mov
or
xchg
lret
cmp
test
ja
mov
nop
and
xchg
scas
icebp
je
sub
lcall
test
xlat
les
cwtl
dec
mov
insb
in
or
icebp
pushf
fidivrl
out
cld
dec
mov
mov
xchg
xchg
aam
shl
mov
popa
pusha
xchg
push
enter
and
and
into
je
icebp
adc
mov
xchg
pusha
lods
pop
scas
lds
inc
out
mov
or
cmc
lret
push
xchg
and
out
jle
cwtl
adc
pop
daa
push
pop
lahf
or
popf
testb
ficomps
jo
or
xchg
not
inc
ja
xor
bound
pushf
je
loope
jg
xor
add
mov
shrb
push
pshufw
pop
pusha
imul
aaa
mov
repz
bound
test
leave
inc
in
ss
pop
push
jne
jp
xchg
stc
xchg
ret
out
sub
and
push
inc
lret
aad
mov
lock
mov
mov
inc
sahf
adc
or
mov
fsubrs
adc
fildl
stos
icebp
jmp
sti
xor
pop
push
inc
test
add
mov
aas
and
pop
in
add
push
add
loope
add
jno
addr16
mov
sahf
xor
arpl
fs
fs
sub
arpl
repz
xor
hlt
pop
jno
mov
dec
lret
or
dec
movsl
xor
bound
hlt
shll
shll
push
out
outsl
push
bound
jo
scas
popa
arpl
lods
stos
mov
cmp
punpcklwd
in
push
bound
and
xchg
movsb
pop
sub
mov
dec
mov
xchg
mov
stc
lahf
clc
lret
mov
mov
cwtl
dec
or
out
push
dec
adc
mov
lret
xchg
cltd
inc
sub
add
sbb
dec
cmpsl
mov
in
cmp
or
mov
adc
jne
mov
sub
push
imul
pop
mov
sbb
int
inc
into
mov
adc
push
aam
cmp
push
xlat
shrb
mov
lcall
les
or
daa
daa
add
xchg
sbb
mov
mov
pop
lcall
cmpb
hlt
outsb
cs
jnp
es
sbb
ja
push
push
dec
inc
ja
sbb
fwait
je
jne
popw
dec
cmp
and
mov
mov
xchg
leave
jp
hlt
mov
in
test
adc
cmpsb
imul
xor
push
std
popf
mov
movsb
sbb
push
andl
dec
or
pop
cmp
cmp
mov
jg
xchg
push
push
inc
popf
or
cmp
test
imul
loopne
cmp
mov
push
stos
dec
loope
pop
jle
adc
inc
mov
popfw
das
xor
lret
notl
push
push
sbb
test
dec
lret
iret
add
stc
mov
iret
jae
or
cltd
scas
mov
inc
xchg
out
mov
cmpsb
xchg
mov
pop
xor
testl
outsl
jnp
adcb
and
cmpsl
dec
mov
cmp
in
sub
es
xchg
jb
loopne
imul
dec
push
mov
cmp
repz
mov
mov
out
add
sahf
mov
loope
mov
mov
repnz
pop
ret
cmp
pop
add
bound
xchg
daa
dec
push
cmp
shrl
push
mov
pop
imul
and
mov
mov
mov
jg
les
pop
xor
jnp
push
lods
xor
sub
push
xor
data16
aad
adc
mov
sarl
adc
arpl
jl
mov
cmp
das
mov
mov
loop
xchg
mov
outsl
cmpsl
fwait
loopne
jmp
pop
sub
cmc
and
das
lea
out
push
inc
pop
mov
and
arpl
or
scas
out
and
movsb
es
jle
or
pop
into
push
mov
jne
pop
pop
inc
jg
ja
add
sar
xchg
addr16
rorl
sarb
xor
subl
mov
push
xor
dec
pop
sbb
arpl
adc
scas
mov
mov
mov
outsl
or
pop
in
mov
mov
jl
adc
pop
mov
push
fidivs
fistps
sbb
je
mov
jg
mov
sub
add
into
adc
xchg
sbb
pop
xchg
or
div
pop
jp
in
pop
daa
or
mov
xchg
sbb
add
cmc
mov
and
xor
jge
stc
incb
nop
enter
pushf
mulb
push
enter
shll
shl
and
adc
mov
in
add
mov
dec
mov
les
loop
fidivrs
cmp
neg
es
cmc
inc
jl
fs
lcall
adc
xchg
int3
outsb
xor
mov
stos
mov
mov
jo
bound
add
inc
dec
inc
dec
jge
in
mov
fadd
mov
jle
adc
jge
xchg
and
or
sub
out
dec
data16
mov
xchg
jmp
lock
arpl
movsl
ret
out
xorl
adc
sarl
and
jno
inc
adc
jg
pop
or
xor
jmp
fnstsw
xchg
inc
lret
sbbl
not
imul
mov
pop
jnp
fdivrl
popa
dec
outsb
aad
enter
fld
cmpsb
xor
and
sbb
xchg
sub
in
leave
cltd
and
xor
dec
repnz
jg
xor
inc
hlt
cmc
divb
sbb
inc
into
stos
inc
add
xchg
cwtl
xchg
push
out
xchg
adc
adc
dec
in
inc
loop
fistps
lea
xchg
sbb
sbb
int
inc
inc
mov
ds
iret
rcr
icebp
std
testb
shl
int
ja
push
stc
or
inc
aad
dec
insb
adc
inc
pop
nop
cmp
shrb
mov
popa
popf
into
adc
push
lods
adc
mov
fcoms
test
fcompl
adc
sbb
test
clc
jnp
xchg
test
push
leave
dec
cli
xchg
sbb
icebp
pop
lods
sbb
icebp
cltd
mov
jnp
iret
pop
jle
lcall
pop
ja
adc
adc
sahf
inc
or
mov
pop
push
push
out
and
jge
sub
push
mov
jmp
push
sub
xchg
adc
push
sbb
stos
push
std
and
mov
inc
cmpsb
dec
fcmovne
outsb
mov
pop
add
mov
mov
mov
jge
jge
std
fldt
pop
inc
cltd
mov
sbb
stos
mov
mov
mov
or
pop
sub
push
adc
xchg
pop
lods
dec
jnp
popf
dec
cwtl
in
or
push
sbb
rclb
xchg
xor
push
add
lds
xor
mov
mov
add
lock
adc
sti
stc
popf
mov
xor
adc
add
mov
fisubl
adc
xchg
inc
testl
jmp
jle
sub
adc
int3
aam
sub
jecxz
cmc
mov
sti
mov
push
js
loope
dec
adc
jecxz
sahf
push
jno
push
add
sbb
dec
sub
adc
xor
movl
cltd
mov
lcall
add
les
fnsave
xchg
or
sub
ds
mov
or
sub
outsb
sub
mov
inc
dec
jmp
cmp
jno
out
stos
jge
pop
or
lea
add
ds
sbb
inc
dec
pslld
lret
psllq
lcall
jecxz
cld
in
adc
fwait
lcall
nop
dec
insb
stc
jl
test
adc
push
dec
mov
adc
inc
fxch
or
xor
mov
mov
loope
and
je
xchg
insl
stos
cld
dec
fxch
xchg
test
jecxz
push
dec
inc
adc
fwait
push
push
mov
or
inc
rcl
add
je
jb
test
mov
or
ss
iret
pop
fcoms
pop
push
push
in
fs
fsubp
mov
xchg
mov
push
jl
dec
das
push
sbb
enter
scas
outsb
je
sbb
fiaddl
pop
outsb
in
in
lods
in
inc
stos
rcrl
dec
cmp
mov
sarl
js
cmpsb
adcb
ss
jle
std
push
inc
aas
push
hlt
mov
pusha
popa
mov
mov
and
push
ret
mov
lcall
or
and
or
mov
ljmp
sti
ret
dec
scas
pop
cmp
sub
cmc
je
cmp
pusha
test
pavgw
push
inc
inc
bound
lods
lcall
adcl
xor
xor
in
je
inc
in
popf
pushf
das
hlt
lock
push
mov
inc
cmp
cmp
dec
test
mov
test
jl
cmp
jl
test
xor
jno
fnsave
xchg
arpl
shl
jg
push
mov
movsl
pop
mov
dec
push
push
lret
or
lds
and
ffree
or
jne
js
xchg
push
lcall
jne
mov
ss
test
loopne
cld
pusha
sbb
ror
insl
je
sbb
in
mov
push
xchg
xor
test
shrl
mov
xor
gs
mov
sbb
in
cmp
ss
adc
shlb
inc
sub
dec
nop
pop
in
cmp
addb
test
notl
pextrw
xlat
cmp
cmp
jp
aaa
mov
push
xor
sub
imul
and
insb
mov
jle
cmp
xorl
lods
and
sub
dec
jecxz
push
push
icebp
inc
les
cwtl
adc
jb
pop
dec
jle
jne
pop
mov
cmp
shlb
adcb
out
pop
mov
xchg
cwtl
cmp
mov
add
fisubrs
arpl
push
fcoml
insl
in
sbb
pop
pop
or
sub
jo
jo
lahf
pusha
xchg
mov
jmp
xchg
xchg
xchg
stc
mov
jp
adc
insb
adc
inc
sti
add
fwait
xchg
cld
sub
sub
dec
sbb
test
loopne
inc
fs
movsl
pop
fisttps
jp
lock
inc
imul
adc
fdivp
ret
das
xor
jp
cmpsl
mov
jmp
das
add
bnd
fildll
data16
int3
mov
mov
aad
mov
adc
adc
jp
stos
sbb
xchg
mov
mov
inc
imul
lret
movsb
sub
shlb
push
mov
pop
dec
std
enter
sub
adc
ds
and
cmp
lcall
push
sbb
sub
jno
popfw
aas
loope
fwait
popf
or
sub
push
mov
push
sub
jmp
rcrb
idivb
jge
fyl2xp1
fidivrl
lea
jnp
dec
sbb
aaa
loope
enter
xchg
aam
movsb
iret
or
mov
xchg
rcrl
imul
mov
icebp
mov
out
rcrl
push
inc
lcall
pop
jnp
in
fdivrl
push
sbb
mul
sbb
push
adc
jge
add
movsl
popf
mov
mov
jnp
add
int
jae
adc
movsl
jae
shlb
push
cmovbe
and
sysexit
push
xchg
aam
xchg
out
xchg
int3
je
sar
lcall
pop
dec
imul
sub
xchg
fldl
loopne
in
stc
sbb
inc
lds
push
push
popf
xchg
ret
arpl
movsb
sti
xor
call
fwait
incw
leave
mov
pop
xor
mov
jl
mov
inc
aas
or
test
mov
xor
nop
dec
in
add
insl
movsb
pusha
ds
out
int3
lea
rorb
sub
insb
call
add
jbe
push
popf
rcr
cmp
pop
add
lock
push
mov
fsubr
jno
sbb
mov
mov
xlat
std
repnz
push
pop
test
addr16
mov
dec
repnz
stos
jle
out
enter
fcmovbe
das
and
xor
flds
lock
repz
adc
mov
xchg
nop
vmwrite
xor
push
fs
xor
call
ss
pop
xchg
in
and
dec
pop
pop
lcall
mov
lret
adc
pop
mov
inc
sub
mov
mov
or
push
sub
aad
lcall
test
mov
adc
jecxz
das
aas
jae
lods
jne
icebp
mov
push
loop
popa
imul
xchg
aam
fsts
faddp
cmp
push
adc
ljmp
sub
mov
popa
xor
iret
outsb
enter
xchg
sahf
cmp
xchg
imul
loopne
or
test
roll
into
jle
mov
repnz
mov
shrb
and
adc
arpl
lods
movsb
xchg
adc
ds
paddb
insl
mov
pop
js
cmp
jo
add
lret
mov
mov
mov
adc
adc
stc
pop
arpl
pushf
xchg
mov
pushf
into
rol
shlb
adc
xchg
ds
sti
jmp
fwait
push
dec
cmp
lret
cmp
lret
das
push
cmp
xchg
in
orl
out
cbtw
pusha
testb
dec
idivb
icebp
add
xor
dec
shlb
hlt
iret
aas
repz
in
dec
push
or
fimull
adc
stos
addr16
mov
cltd
mov
fdivrs
or
insl
repz
clc
pushf
iret
jecxz
dec
pop
in
insl
sub
icebp
lahf
cltd
fucomi
sbb
add
sub
push
stos
or
aam
or
leave
enter
and
aas
pushl
jecxz
mov
sub
xchg
mov
sub
mov
cmp
mov
add
mov
cli
aaa
xor
xchg
lahf
jmp
dec
call
repz
and
or
mov
je
aas
mov
fisttps
in
adc
push
orl
ds
imul
jo
test
out
test
adcb
icebp
jne
in
hlt
outsl
cld
add
fcomp
and
cmp
dec
rorb
out
iret
xor
pop
aam
cmp
adc
popa
loope
movsb
mov
jbe
adc
mov
testl
inc
jge
pop
pop
lods
lods
push
mov
add
ljmp
call
add
xor
dec
push
xchg
push
ljmp
fs
mov
mov
xlat
stc
test
movsb
sub
in
popa
cmp
mov
imul
push
dec
lods
xor
mov
cmp
ret
test
data16
aam
aaa
add
enter
jns
xor
jno
in
int
mov
addl
add
scas
jmp
lods
scas
outsl
jle
adc
scas
dec
jl
and
jae
lock
shlb
fistl
fistpl
aam
inc
nop
es
fstps
ljmp
sbb
xlat
xor
insl
std
lcall
mov
int3
mov
add
subl
popa
xor
inc
or
in
jl
push
pop
add
inc
movsb
xchg
dec
jmp
cs
and
jecxz
movsb
insl
fldz
int
jecxz
mov
and
mov
lahf
mov
mov
push
or
out
adc
loope
fs
sbb
cmp
mov
jb
mov
and
lret
add
cld
xor
sub
in
leave
jo
stos
pmulhuw
std
dec
cmp
mov
jbe
popa
lahf
and
mov
stos
xchg
js
fucomp
out
ficomps
push
mov
cmp
mov
mov
cmpsb
mov
push
test
cmp
xor
cs
push
mov
xchg
dec
ljmp
pop
push
dec
inc
cmp
dec
xchg
push
jp
pop
push
sub
fs
arpl
into
xor
jmp
xchg
outsl
xchg
and
inc
cmpsl
insb
mov
scas
add
or
xchg
cmpsb
leave
mov
mov
inc
dec
dec
xchg
into
movsb
push
aad
mov
pop
out
popa
sbb
add
add
pmuludq
sti
cltd
fidivs
or
movsl
roll
mov
pop
repz
call
test
or
add
mov
stos
cltd
xchg
cmp
xchg
adc
popa
lea
or
mov
or
pop
sbb
int3
fwait
je
psubusb
mov
cltd
rol
and
mov
test
dec
scas
inc
outsl
and
clc
push
shl
cs
sar
jle
jo
bound
sbbl
push
bound
xchg
inc
mov
outsb
mov
cmp
fnstcw
sbb
daa
jp
fmul
jl
fwait
sub
or
sub
xor
jnp
lea
cltd
pop
pop
in
mov
jecxz
leave
sbb
pop
inc
orb
adc
popa
mov
jns
testb
and
mov
cmp
push
push
push
fcmovu
jb
or
cwtl
aaa
sbb
sub
jle
in
popf
mov
sti
sbb
pop
fs
lock
push
data16
mov
call
adc
adcl
add
test
popf
push
test
sub
mov
sbb
xchg
stc
shlb
insw
dec
aad
or
cmp
push
test
divb
jns
jge
add
and
mov
fs
arpl
out
push
popf
lcall
pushf
int
dec
fiaddl
sti
inc
lret
dec
cmp
repnz
test
loop
fs
xor
add
dec
jo
push
inc
int3
les
dec
or
pop
and
shrl
xchg
imul
fbld
jno
add
lods
dec
xlat
fsubp
loop
sbb
test
fmull
rcll
cmp
js
loop
sub
add
or
or
sub
sub
add
pop
dec
mov
rcrb
jg
push
and
inc
into
lea
ret
xor
fidivs
cmp
sbb
int3
out
push
insb
cmp
in
ret
andl
sbb
sub
scas
xchg
xchg
nop
mov
pop
cmpsl
cmc
jg
xchg
cmp
push
add
in
cmpsl
or
cltd
pop
push
mov
xchg
xor
lcall
testb
lods
int
jne
jo
push
add
push
aam
cmp
cmp
cli
mov
jp
inc
mov
mov
stos
or
in
jmp
cli
mov
xchg
jecxz
stc
or
lods
jmp
cli
lods
test
arpl
inc
fs
leave
out
push
cwtl
sbb
sti
fcoms
jae
iret
dec
or
add
push
mov
dec
add
ret
shlb
jg
and
cli
push
cmp
pop
movb
inc
ss
mov
jns
lahf
ds
add
xchg
add
out
pop
test
pusha
ljmp
adc
jl
push
cmp
xor
xchg
into
fwait
out
das
jle
mov
xor
push
dec
adc
test
mov
lock
xchg
cmpsl
cmp
cmp
dec
cli
stos
xchg
int3
pushw
inc
xchg
daa
pushf
mov
jmp
inc
inc
xchg
jne
je
sub
rolb
mov
adc
push
jecxz
mov
or
adc
or
cmp
jnp
inc
rolb
repnz
lea
sbb
pop
je
add
xor
pop
pop
push
aaa
add
mov
adc
loop
pop
cs
movsb
mov
and
jbe
rcrb
nop
mov
or
dec
sti
enter
sbbl
sub
sbb
stos
or
mov
dec
inc
je
arpl
mov
and
inc
inc
push
xchg
aas
out
popf
push
mov
addb
mov
ret
sub
mov
addr16
dec
push
add
lahf
nop
insb
mov
andb
push
or
mov
pop
pop
loop
or
sub
adc
or
adc
xchg
gs
jno
and
or
and
sub
xchg
push
cmp
push
push
push
arpl
ds
cmp
into
ljmp
push
in
in
js
aad
fnsave
jo
and
cmpsb
jl
pop
fs
rolb
clc
daa
jnp
xlat
push
inc
push
sbb
and
xchg
jmp
mov
popf
and
lock
rclb
loop
pop
in
mov
ret
cwtl
out
lcall
xchg
mov
push
roll
mov
ljmp
and
hlt
fidivl
adc
imul
mov
adc
add
fsts
test
mov
and
nop
pop
jg
jno
icebp
dec
gs
inc
mov
xchg
jns
cmp
pop
aaa
enter
cmp
xchg
mov
ja
lahf
push
test
popf
adc
rcr
add
cmp
out
mov
loopne
xlat
stos
addr16
scas
in
mov
scas
mov
cmpsb
in
or
loop
aaa
std
fdivs
fcmovne
repnz
jb
loope
and
pop
dec
xchg
jg
inc
mov
leave
mov
call
ljmp
sbb
iret
sub
inc
xlat
cmp
rol
scas
pop
or
std
sbb
jl
mov
ss
mov
xchg
dec
dec
pop
add
test
sar
dec
outsl
in
mov
dec
imul
cld
jg
push
insl
lret
sarl
fwait
sahf
xchg
leave
out
cwtl
gs
push
mov
leave
jno
leave
out
testl
pop
std
addr16
gs
push
pop
lret
mov
jo
stos
mov
cmp
loopne
daa
test
mov
adc
cmp
cs
sub
jne
or
jmp
icebp
jle
dec
addr16
icebp
enter
dec
cmp
jmp
mov
lahf
xchg
adc
lods
into
popl
fimuls
cmp
out
cs
and
daa
push
sub
insl
data16
fwait
lea
inc
insb
mov
and
aaa
sbb
dec
dec
and
cld
jg
jns
out
xor
xchg
adc
lods
dec
shl
ret
aaa
mov
lea
xor
add
insl
es
das
lcall
xorl
enter
mov
stos
cltd
sbb
nop
aad
in
jns
adc
cwtl
xchg
xlat
pop
lret
aad
arpl
aaa
insb
adc
roll
dec
sbb
vucomiss
inc
mov
push
mov
push
loope
jae
push
cmp
sti
dec
jle
xor
gs
mov
insb
cwtl
or
cmp
test
insb
sar
and
insb
popa
rcl
jb
stc
clc
lret
jecxz
inc
mov
dec
shlb
jmp
and
sbb
out
and
sub
adc
dec
pop
push
mov
lahf
xchg
push
push
cwtl
mov
lcall
imul
xorb
cmp
arpl
stos
push
dec
sbb
inc
out
lods
clc
pushf
sbb
push
inc
sbb
sahf
sbb
test
aaa
inc
aam
or
stos
addr16
inc
mov
cmpsl
pop
inc
mov
mov
cmp
pop
sbb
and
lods
scas
add
mov
cmp
cmp
notl
pop
sbb
les
test
ret
mov
cli
cmpsb
mov
call
pop
lret
fimuls
mov
enter
data16
jmp
leave
push
subb
in
lds
mov
inc
push
sub
add
test
dec
jns
jle
xchg
xor
inc
pop
ret
sbb
aad
push
adc
jg
xor
sub
imul
test
fcmovnu
jg
test
or
mov
gs
leave
int3
popa
nop
aam
fnsave
jmp
and
add
xor
cwtl
repz
cmpsl
das
mov
fnstcw
cmp
in
mov
and
js
les
jg
push
fnstsw
mov
push
outsb
cmp
mov
xlat
jne
inc
call
cmc
mov
aam
in
or
mov
push
cmpsl
add
xchg
dec
xor
int
mov
xchg
lods
shll
mov
js
dec
inc
sbbl
xor
sahf
in
inc
cmp
aas
lret
mov
xchg
repz
sbb
stos
xor
ret
gs
jb
sahf
add
pop
in
scas
mov
insb
mov
inc
out
sub
test
push
adc
mov
gs
ss
mov
xor
push
mov
mov
xor
jecxz
and
sbb
inc
cmp
jo
add
adc
jg
cmp
addr16
mov
cmp
cs
mov
cwtl
and
push
lcall
mov
iret
xchg
push
mov
sahf
call
xchg
pop
cli
mov
mov
shrl
or
push
jnp
cld
push
xchg
add
leave
out
bound
inc
or
mov
cld
cmp
inc
imul
adc
int
jno
mov
cmp
flds
in
and
push
inc
jle
test
xor
sub
cmp
dec
shrb
rcrl
push
and
cmp
jge
cmpsb
jmp
iret
sub
lods
enter
cmp
jg
mov
and
fwait
test
adc
push
fs
call
out
cld
jae
mov
mov
pop
xchg
ljmp
cmpl
sbb
fdivp
dec
xor
cmpsl
cli
leave
inc
test
mov
adc
hlt
jno
pop
or
push
pop
inc
mov
dec
sahf
inc
mov
push
das
aad
inc
jle
jo
jg
jle
and
aad
cmp
xchg
push
stos
pop
cli
xor
inc
dec
pop
mov
dec
call
loopne
inc
sbb
xlat
ret
call
xchg
or
clc
cmpsb
out
shll
test
fndisi(8087
sub
or
jo
outsb
push
inc
ret
scas
mov
or
lock
pop
lods
adc
sub
lods
daa
outsl
into
out
pop
aaa
fistl
int3
popf
mov
mov
mov
dec
sbb
sahf
testl
pop
xchg
add
out
jbe
mov
aad
jmp
leave
mov
dec
fidivs
repnz
pop
mov
test
xchg
mov
and
or
adc
aam
cmp
sbb
ret
scas
mov
ja
cmp
cmp
mov
adc
inc
and
outsl
xor
lods
inc
cmp
adc
jp
lret
dec
jbe
jnp
movsl
push
imul
fistps
fbld
fisubs
aaa
je
mov
popf
push
scas
push
mov
lds
mov
pop
xor
sarl
inc
ljmp
movsl
js
mov
push
add
lds
and
scas
sbb
hlt
icebp
loope
lods
clc
arpl
jns
inc
cli
call
push
push
ja
in
cltd
cld
pop
testl
cmp
inc
cmpsb
pushl
adc
push
in
cld
xchg
cmp
mov
add
adc
nop
filds
push
aas
cmp
mov
and
std
push
mov
int3
or
in
xlat
loop
gs
sbb
adc
icebp
push
lods
adc
mov
int3
in
inc
inc
cli
mov
add
fisubs
outsb
cmp
shll
xor
push
cld
or
std
and
mov
cld
dec
cwtl
mov
sbb
xor
pop
in
stc
mov
push
aas
pop
adc
mov
fwait
xchg
push
pushf
jmp
adc
test
out
cmp
je
dec
add
pop
aam
xchg
pop
testl
and
leave
addr16
stos
push
daa
sub
and
mov
or
cmp
lods
lcall
fstl
dec
jb
adc
ljmp
mov
ljmp
stos
fiadds
dec
push
mov
leave
jns
add
inc
decb
jle
mov
xchg
dec
sbb
scas
add
inc
aam
push
jbe
stc
stos
loopne
add
mov
fcmovne
lods
jecxz
jae
xchg
xor
jp
cmp
iret
aad
repz
call
push
out
movsb
fbstp
cmp
push
dec
out
or
mov
mov
cltd
mov
push
mov
mov
and
push
test
insl
mov
into
out
inc
pop
stos
push
mov
pop
jo
imul
mov
xchg
f2xm1
insb
bound
rorl
mov
mov
stos
pushf
or
fisttpll
jae
mov
jmp
stos
or
outsl
adc
imul
ret
jg,pn
cmpsl
xor
add
rol
and
lods
dec
lret
in
xchg
mov
out
daa
stos
fs
int3
xor
das
andl
jae
ret
xchg
pusha
mov
mov
push
xor
xor
mov
mov
lahf
out
mov
fcmove
imulb
test
stc
push
lea
add
scas
rcr
xchg
sarl
push
inc
xchg
add
cmpsl
sbb
or
xor
jge
scas
iret
in
mov
ja
mov
in
mov
cmp
cwtl
push
scas
jg
xchg
adc
or
mov
rcl
mov
js
dec
imul
jo
pop
sbb
inc
and
nop
xchg
xlat
mov
pop
call
jl
push
add
dec
adc
jb
subb
mov
test
imul
add
sub
push
shrb
jo
cwtl
aad
push
pop
inc
idiv
xlat
lea
in
add
dec
int3
ficoms
and
push
ret
mov
and
mov
repz
int
test
shlb
nop
push
xchg
jo
dec
adc
popf
insl
lahf
and
ret
mov
or
jecxz
aam
inc
and
in
nop
push
mov
hlt
scas
and
cmp
aad
and
bound
pop
dec
pop
mov
ss
xor
dec
and
int3
and
mov
mov
dec
mov
mov
mov
adc
sub
int
lods
out
fs
lods
rcrl
mov
popa
sahf
add
xchg
and
icebp
and
lcall
bnd
dec
and
cwtl
and
push
xchg
pop
flds
pushf
mov
dec
lret
push
xchg
aad
insb
mov
pop
push
dec
test
sbb
push
out
test
mov
mov
or
movsb
insb
test
cld
pop
cs
rclb
addr16
mov
pushf
pop
mov
mov
push
inc
jg
rolb
xchg
sbb
mov
orl
dec
jae
shll
data16
fmull
int3
mov
jle
loopne
inc
lret
mov
jb
mov
push
adc
les
cmp
cwtl
cmc
xor
mov
adc
adc
cmpsb
xchg
cs
aam
dec
sub
loope
loop
lods
add
jno
push
mov
arpl
xor
dec
popa
sbb
adc
ljmp
subb
fnsave
inc
fsubr
mov
mov
mov
rcrb
mov
jle
int
push
mov
cwtl
sub
es
nop
jb
dec
and
lret
repnz
jnp
repz
push
fiaddl
rcl
xor
int
inc
pop
popa
lret
jecxz
rcl
fists
aaa
sub
mov
mov
jns
pop
insb
jno
or
inc
fwait
push
cwtl
mov
jbe
fs
cmp
sub
mov
dec
out
xchg
cs
dec
rsqrtps
shll
jge
incb
addr16
sti
ja
mov
lcall
jnp
fadd
jo
or
aaa
and
xchg
cli
mov
sbb
xchg
add
mov
sahf
movsb
push
cli
es
aam
xchg
inc
data16
cmp
shll
xor
xchg
insl
pop
aas
jmp
xchg
cmp
and
cmp
aad
cli
call
in
and
sub
fbld
lods
lret
adcl
adc
dec
dec
mov
pop
cmpsl
pop
adc
in
ljmp
jne
js
xor
insb
mov
adc
ja
cltd
push
adcb
bound
hlt
xchg
arpl
divl
and
push
bound
pop
fucomi
daa
cmp
mov
and
gs
xchg
adc
rcrb
and
imul
push
dec
push
lods
icebp
and
cmp
pop
xor
cwtl
sbb
arpl
enter
icebp
std
addl
call
lds
icebp
loope
pusha
fildl
loop
in
or
lcall
and
test
jmp
or
out
sahf
dec
mov
adc
push
xchg
sub
xchg
cmpl
lahf
mov
xor
loop
push
lret
imul
enter
mov
mov
enter
insb
jns
mulb
jmp
bnd
dec
mov
gs
adc
je
cmc
fsubl
int3
lds
lcall
sbb
mov
xlat
dec
addl
xchg
mov
cmpsl
sbbb
sbb
bound
xchg
inc
fbstp
xor
sahf
cld
cmpb
add
insl
pop
lods
inc
xchg
xchg
shl
push
pop
mov
arpl
cltd
inc
adc
cmpsb
bsr
hlt
in
add
ror
jo
sti
dec
aaa
inc
mov
cmc
push
or
fwait
dec
mov
cmp
addr16
adc
cmpsb
loopne
and
or
lret
mov
rcrb
mov
ret
lods
xor
mov
fdivrl
xchg
test
xor
test
xchg
and
fcoms
das
insb
popa
int3
movsb
jle
jb
push
out
inc
test
cs
call
js
js
cmp
mov
jae
lret
and
shll
orl
shrl
mov
sub
clc
das
rol
jbe
outsb
push
call
pop
repnz
jmp
dec
jecxz
push
dec
pop
dec
push
andb
dec
push
inc
hlt
pop
adc
mov
push
rcrb
loopne
scas
mov
inc
popa
ja
out
insl
inc
and
mov
jne
movsl
sbb
inc
in
sbb
push
push
sbb
cmp
pusha
lret
inc
jmp
lret
or
pop
inc
dec
jmp
repnz
dec
mov
add
jecxz
ljmp
cmp
jo
into
sbb
int3
cmp
mov
stos
jnp
int
enter
inc
in
jnp
insb
jp
in
mov
ljmp
push
and
ds
enter
jno
orb
mov
loopne
mov
mov
out
or
imul
cs
pop
adc
lea
or
xchg
fimull
adc
insl
mov
jbe
out
xchg
imul
sub
enter
pop
sbbl
mul
xchg
mov
les
mov
xor
ror
in
aam
sbb
js
sbb
or
add
mov
lods
clc
pusha
in
arpl
ja
mov
mov
or
sbb
push
dec
xchg
dec
xorb
test
mov
inc
xor
test
jge
sub
and
mov
xchg
stc
cmpsb
fsts
insb
inc
je
mov
mov
mov
iret
mov
xchg
mov
mov
and
push
pop
ja
outsl
cmc
divl
mul
daa
nop
and
sar
dec
mov
pop
int3
mov
adc
xchg
mov
or
push
test
add
repnz
ret
pusha
add
stos
jmp
or
int3
or
cmp
insb
inc
aad
mov
xor
xchg
rcrl
pop
ret
les
or
sub
nop
dec
push
mov
add
cli
push
inc
jbe
in
and
mov
movsb
xorb
sub
xchg
or
daa
cmp
movsl
fs
repz
arpl
mov
jmp
call
cld
mov
nop
pop
cli
sbb
adc
les
xchg
test
pop
int
scas
lods
push
int3
lods
push
mov
sub
mov
rclb
or
and
push
dec
scas
arpl
inc
arpl
xlat
les
xor
in
fxch
fwait
clc
xchg
jle
adc
fistpl
sbb
lods
add
push
or
imul
dec
adc
bound
rcr
shll
mov
repz
mov
cltd
push
aam
mov
jo
popf
inc
in
add
dec
xor
ss
mov
outsb
lahf
cltd
inc
xchg
lock
fs
add
loopne
fcomi
scas
rcr
lds
into
rcl
pop
stos
lcall
add
fdivrp
stos
dec
jns
jb
outsb
jne
push
mov
clc
push
insb
mull
mov
repnz
aam
scas
dec
sub
fidivs
cld
clc
pop
jp
popf
idivl
sub
sub
sub
nop
fldcw
and
cmp
dec
pop
inc
sbb
cmp
ljmp
out
dec
into
lret
cmp
sarl
movsb
incl
fstpl
incb
test
fsts
sti
jo
push
mov
push
mov
cli
dec
xchg
xchg
or
jmp
loop
inc
data16
test
mov
and
jae
mov
fcomi
cmpsl
jb
cmpsl
dec
ja
sbb
cs
ds
pop
cmpsb
mov
cmp
dec
lods
pop
mov
xor
pop
sti
xor
add
or
cli
out
sbb
xchg
cli
inc
popf
sbb
imulb
les
adc
inc
jno
xchg
or
push
sub
sub
sbb
rcrl
insl
in
mov
aas
fimull
lds
sahf
xchg
ret
pop
aas
cli
repz
aam
std
out
xchg
loope
dec
push
hlt
sbb
nop
pop
adc
fsubr
subb
popa
cltd
mov
sub
mov
inc
cmpb
cmpsb
clc
lds
fists
push
pop
stc
pushf
jecxz
pushf
fs
pusha
xchg
xor
cmpsl
dec
fwait
dec
dec
push
adc
mov
cmpsb
ret
out
adc
jl
adc
rcrb
cmpsb
pop
out
dec
mov
insb
push
sub
aam
xchg
ret
mov
cmp
adc
cs
aas
xor
fisttpll
fldt
adc
jno
sahf
pop
mov
outsb
lods
movsl
jecxz
lret
repnz
aad
ss
push
aam
xchg
pop
enter
imul
lods
or
cmp
lock
stos
add
and
cltd
ljmp
mov
daa
pop
rcr
xor
push
scas
js
cmp
mov
sbb
add
add
sbb
or
pop
test
and
cltd
fs
jl
pushf
mov
stc
sbb
cmpsb
jecxz
int
scas
mov
mov
mov
das
lea
xchg
cwtl
fnsave
jl
test
mov
clc
cwtl
frndint
cmc
lds
mov
xchg
sbb
mov
xchg
jb
imul
and
bound
shrb
stos
jnp
sbb
ficomps
flds
lods
inc
into
sbb
movsl
jle
inc
add
aaa
add
jmp
and
cwtl
cld
lahf
je
enter
mov
mov
mov
push
jnp
idiv
jmp
fdivl
ds
aas
fwait
or
hlt
mov
mov
cwtl
adc
mov
fprem
lock
mov
repnz
ljmp
push
add
outsl
push
ficomps
fsubrp
sub
mov
stc
push
test
fistl
enter
pop
test
and
es
jle
and
fsts
pop
adc
jno
xchg
sub
mov
xor
push
andb
mov
ss
xchg
push
ds
fadds
cmp
dec
xor
sbb
inc
stc
idivb
push
pusha
xor
mov
ss
jg
and
pop
and
pop
xchg
push
dec
mull
sbb
add
aam
push
aas
cmpsl
sahf
mov
fsubs
inc
nop
mov
cmpsl
in
mov
les
pop
incb
test
shlb
mov
jl
test
ja
xor
mov
push
into
mov
icebp
inc
push
stc
sbb
push
cmp
stos
mov
mov
lods
push
xchg
xor
loope
mov
push
add
dec
mov
or
and
or
inc
xor
nop
cmp
mov
dec
cmp
nop
pop
mov
dec
inc
shrb
out
aas
dec
xchg
idiv
xchg
outsb
cwtl
ljmp
xchg
idivl
jge
cwtl
sbb
js
mov
lcall
ret
outsb
mov
nop
xchg
outsb
test
xor
dec
xor
aam
jb
inc
sub
clc
sub
jl
movsl
add
test
inc
loope
arpl
dec
in
lea
xchg
icebp
cli
fdivl
dec
mov
cmp
dec
iret
in
fistpl
in
testb
fnstcw
sub
arpl
xchg
push
or
adc
inc
dec
lods
mov
cmp
add
adc
mov
push
popa
movsb
add
ret
jb
ljmp
xchg
addl
stos
jae
cli
mov
leave
fidivs
call
ffreep
and
notb
fwait
xor
or
sahf
adc
and
in
and
test
movsl
fisubs
and
ret
cmpsl
sbb
clc
mov
lcall
or
cmpsl
or
int3
ds
fwait
xchg
ljmp
adc
das
mov
push
aad
cmpsl
jg
push
out
popa
mov
loope
or
jne
xor
mov
pop
nop
pop
mov
xchg
inc
sarl
xor
cmp
cli
xor
xchg
adcl
gs
jns
shl
add
fwait
xor
rcrb
test
cmc
nop
push
sbb
inc
inc
es
mov
loope
xor
in
leave
add
jmp
jl
das
into
pop
xor
or
pop
jle
add
push
je
movsl
int
mov
gs
out
jge
test
movl
ds
arpl
fisttps
movsl
jo
fldl
daa
cmp
mov
cwtl
incl
aam
mov
test
js
sbb
and
ret
loopne
cmpl
pop
xlat
jnp
fdivrs
repnz
xchg
notb
adc
mov
sti
popf
fwait
mov
scas
mov
bound
mov
lods
rclb
xchg
outsb
cmp
push
repz
cld
pop
jns
push
or
call
rorb
nop
mov
aad
aas
or
jb
outsl
mov
inc
scas
xchg
jb
push
pextrw
clc
cmp
sti
xor
push
out
pop
out
lret
cmp
adcb
cvtdq2ps
mov
fisttps
add
dec
enter
mov
cmp
repz
lds
cmp
out
dec
cmp
ljmp
sub
ja
in
bound
daa
test
mov
insl
cmpsl
jnp
adc
jmp
imul
in
shlb
mov
xchg
cmp
dec
pop
out
repz
bound
push
xchg
and
dec
inc
subb
mov
lea
inc
std
pop
cmpsl
les
movsb
xor
popf
cmpsb
and
cmp
pusha
xchg
cwtl
loop
and
inc
lods
dec
mov
jns
repz
in
cmp
cltd
and
mov
lods
mov
add
imul
repnz
cmpsb
ss
jl
lods
jo
and
dec
popf
pop
pop
dec
pop
mov
lret
or
iret
clc
movsl
into
nop
xchg
pusha
mov
sub
jl
mov
or
clc
push
push
lret
mov
mov
push
cwtl
jne
lahf
add
jns
add
or
push
jnp
inc
js
adc
xchg
into
dec
and
out
pop
jecxz
lret
mov
push
rcrl
add
lahf
adc
test
fisttpl
jno
dec
or
out
lcall
sti
mov
push
in
jecxz
inc
dec
loope
insb
inc
pop
dec
adc
xchg
cmp
call
xor
mov
mov
mov
mov
push
cmp
xor
adc
subl
adc
mov
adc
xchg
shr
lods
imul
xchg
out
jl
test
adc
add
mov
imul
mov
pop
mov
pop
mov
jno
mov
xchg
mov
lret
loop
push
mov
push
push
cmpsb
cwtl
push
and
push
cmp
cmp
add
or
inc
in
jno
push
dec
jo
or
mov
imul
push
or
adc
mov
je
mov
jmp
cmp
call
fs
xchg
dec
mov
adc
dec
adc
pop
inc
aad
dec
movsb
int
add
movsl
sbb
test
sarb
jae
sti
insb
xor
mov
mov
sti
inc
mov
push
xchg
pop
clc
mov
pop
mov
pop
fadds
out
aaa
scas
xchg
xchg
jo
in
mov
push
push
loopne
out
jo
mov
fstpt
popa
mov
stos
jg
popa
push
fstl
jnp
jge
jecxz
ds
stc
movsb
cmpsb
jl
or
jmp
dec
sub
mov
jb
xchg
clc
adc
cmp
sbb
shll
imul
jp
shr
loop
test
das
insb
mov
mov
jecxz
aad
push
ret
outsl
pop
call
cmp
int3
jmp
jle
mov
popf
jmp
dec
push
cld
fildll
jmp
add
pop
cld
outsb
cwtl
push
push
enter
mov
fstpt
sti
imul
aaa
pusha
push
cmp
dec
cltd
dec
sbb
cwtl
arpl
sub
jg
loope
in
loopne
xor
imul
sbb
xchg
pop
in
movl
mov
xchg
lods
and
xor
test
xchg
mov
xor
sub
push
mov
inc
gs
scas
xor
mov
push
sbb
fs
cwtl
xchg
mov
in
movsb
rcrl
stos
sub
dec
in
scas
or
loope
xchg
inc
into
pop
xor
sub
js
data16
imull
adc
pop
andb
push
and
aam
jmp
lock
in
xchg
dec
mov
fsubrs
mov
add
or
insl
bound
adc
mov
pop
subl
shlb
dec
push
ret
lds
into
jmp
out
dec
cli
xchg
ljmp
xchg
jl
enter
imul
inc
frstor
mov
sub
test
sbb
adc
cmc
lcall
test
xchg
and
sbb
cltd
outsl
sub
add
icebp
nop
orl
movsb
pop
cmp
ret
cli
insl
int
cmp
jecxz
xor
adc
das
test
in
shl
adc
popf
push
dec
shll
mov
cmp
xchg
std
les
push
cmp
repnz
jmp
daa
repnz
mov
inc
adc
cmp
cmc
stc
loopne
ja
cltd
int
and
enter
xlat
movsb
mov
and
test
pop
stos
stc
inc
ljmp
fildll
insl
out
inc
sub
aaa
nop
sub
and
mov
sub
sub
mov
mov
cmp
aaa
push
xchg
mov
push
and
sub
mov
pusha
or
and
mov
push
loop
cli
imul
and
cwtl
shrl
pop
pop
enter
mov
lcall
inc
adc
jno
xor
pusha
idiv
push
popa
mov
les
push
push
xor
jge
lods
fwait
mov
adc
mov
xchg
push
xchg
gs
lock
xchg
insl
call
add
jmp
insb
fcomps
xor
mov
out
and
push
bnd
sub
push
sub
push
and
and
hlt
or
gs
imul
out
or
mov
mov
lods
push
or
jge
xor
les
push
and
or
lcall
dec
xor
fcomps
xlat
mov
sub
jp
ret
hlt
scas
lcall
mov
xchg
jbe
mov
stos
int3
rcrb
cltd
stos
mov
xchg
in
or
xor
cmp
fdivs
and
cmp
scas
mov
js
movsl
push
and
or
call
insl
or
movsb
roll
jb
mov
lock
or
or
filds
sub
jp
fcoms
repz
mov
and
jmp
cmc
push
mov
das
sbb
inc
sub
push
xchg
inc
adc
in
mov
xchg
dec
outsl
and
push
mov
cmp
test
dec
lea
test
push
fwait
or
inc
pop
cmp
and
xor
adc
pop
jno
lret
push
jns
adc
inc
int
push
sbb
ljmp
pop
dec
ja
and
test
cmp
ret
mov
pop
lcall
out
es
in
jg
mov
inc
pop
outsb
dec
clc
push
inc
bound
call
iret
xchg
push
sub
dec
loopne
mov
inc
loopne
rolb
dec
sub
xorl
dec
lds
or
and
cltd
out
sbb
push
add
out
cmc
xchg
xor
add
loopne
dec
mov
rcr
lea
pop
dec
mov
dec
jecxz
shll
push
or
sahf
or
cmpsb
pop
jle
movsb
lret
dec
popf
insl
push
adc
cmp
cmp
push
mov
lds
adc
in
mov
adc
int3
scas
sub
mov
sub
test
cmp
int
xchg
sub
aaa
sub
fists
inc
push
mov
push
aad
imull
bound
hlt
cmp
inc
stos
ret
pop
rcrb
inc
add
repz
ret
scas
xchg
movsb
iret
outsb
or
les
pop
adc
push
push
jp
mov
cwtl
or
xor
lret
in
add
dec
fistpl
push
lock
leave
imul
sub
mov
push
fbstp
mov
test
int
aam
test
cmp
jnp
rorb
pop
push
mov
sub
out
push
pop
ret
rclb
or
test
es
push
fmuls
rcrb
aam
push
mov
addr16
loop
outsb
lcall
xchg
cli
xchg
jnp
pop
add
jno
fstpt
movsb
lods
orl
jno
mov
or
and
leave
mov
push
pushf
out
cmp
lods
sub
xchg
jecxz
xchg
fsubrl
arpl
shlb
int
mov
and
les
add
and
popa
xchg
pop
pop
jo
test
sub
pop
out
les
cmp
or
cmp
cwtl
out
xlat
jmp
xor
in
xchg
sbb
out
mov
imul
xchg
xor
lea
jo
pop
fcoms
popf
rol
sbb
cmp
loop
mov
ljmp
and
dec
xor
lcall
fcoms
sbb
inc
add
gs
loope
xchg
ss
lock
xchg
xor
in
popf
inc
or
push
mov
aad
pop
imul
xor
in
jl
gs
int
and
xor
inc
sub
mov
dec
push
inc
sub
push
outsb
clc
sbb
adcl
cmpsl
fnstcw
cld
loopne
push
dec
and
pop
jbe
aad
andb
cmpsl
and
inc
aas
push
sbb
sub
inc
fistpll
xchg
pushf
push
push
jp
pop
mov
jne
std
jbe
mov
ja
fdivrs
xchg
int
dec
pop
pushf
fnstsw
cld
sub
test
outsl
sub
xor
sbb
xlat
push
icebp
mov
sahf
xor
jge
leave
xchg
xchg
xchg
sbb
dec
sbb
xchg
dec
rol
out
daa
xchg
pop
adc
add
and
sbb
stc
in
adc
jg
gs
shll
stos
xchg
fidivrl
cmp
loope
jecxz
cmp
or
xlat
push
in
popf
test
es
add
arpl
jnp
xchg
sti
cs
dec
je
fistps
add
lods
jnp
cli
xchg
dec
sti
movsl
jnp
test
mov
inc
loope
cmpsb
ds
rolb
jns
jbe
adc
jl
test
push
int3
lods
push
jbe
daa
mov
mov
inc
jae
cmp
adc
push
dec
into
jb
int
xchg
fisubs
dec
ret
cmpsl
add
mov
adc
pop
xchg
ret
fucomip
out
call
xchg
sbb
mov
leave
arpl
adc
mov
sub
jle
addr16
ljmp
imul
jbe
mov
sub
push
sbb
gs
mov
lock
jecxz
dec
pop
jne
out
imul
jo
sbb
add
dec
pop
loopew
lock
or
arpl
movl
fisubs
int3
sbb
lcall
xorl
mov
adc
sbb
inc
or
push
aam
adc
push
daa
xchg
or
arpl
fadds
repz
sbb
sahf
jmp
sbb
jp
mov
xchg
sbb
inc
ret
push
loope
mov
maskmovq
negl
mov
loop
lret
fildl
gs
fwait
and
ret
push
and
lcall
add
xchg
sbb
cmp
daa
shlb
or
and
int3
scas
mov
mov
decb
pusha
cmc
in
mov
cmpsl
jnp
mov
jl
xlat
data16
push
mov
pushf
add
cmp
cmp
lret
xchg
shl
push
imul
stos
jmp
movsb
jg
sbb
js
std
std
gs
xchg
shll
adc
mov
cli
or
push
fcompl
push
jl
imul
mov
dec
shlb
popa
adc
xor
cli
jne
lret
lret
and
andl
push
mov
inc
pop
fdivrs
mov
cmp
push
lret
mov
mov
push
adc
arpl
mov
test
mulb
xor
mov
fimull
sbb
inc
enter
adc
movsb
xchg
imul
shll
sbb
push
pop
loop
mov
cld
push
les
and
lahf
fidivrs
jmp
mov
gs
fcoml
jo
lahf
std
scas
or
lcall
xchg
dec
cli
sbb
inc
xchg
addr16
dec
sbb
mov
xchg
mov
jge
mov
cmp
push
add
mov
repnz
push
mov
xor
xlat
and
mov
xchg
pop
mov
adc
pop
sbb
and
or
stos
inc
aad
in
pushf
mov
mov
mov
pop
arpl
jecxz
push
push
xor
jmp
imul
lret
das
daa
push
call
xor
jne
pop
lods
xchg
sbb
addb
cmp
cmc
aam
mov
xchg
ljmp
fidivrs
in
out
mov
mov
aad
sub
stc
es
lock
sub
int
inc
sub
orl
and
into
mov
outsl
add
icebp
ret
movsb
dec
in
pop
in
xor
mov
sbb
sti
jp
push
cmp
rol
inc
les
call
lds
stos
mov
mov
push
lods
jle
push
mov
or
mov
xchg
jecxz
lock
ret
shrb
aaa
ret
sbb
pop
jmp
adc
push
mov
and
outsl
std
dec
enter
test
mov
push
icebp
icebp
arpl
mov
imul
xchg
jmp
popa
insb
pop
mov
icebp
pushf
jns
aad
xchg
mov
mov
aad
mov
or
xor
adc
pop
inc
or
cld
movsl
out
dec
jecxz
mov
sub
cmp
test
js
mov
out
or
pusha
and
fldt
jnp
sbbl
inc
and
fnstenv
pop
pcmpgtb
data16
pusha
dec
loopne
negb
std
cltd
push
jb
shlb
add
leave
inc
or
loop
stos
add
sub
outsb
push
push
ljmp
gs
out
fnstsw
pushf
push
pop
add
int3
push
add
cli
xchg
aam
roll
fwait
leave
pop
cmp
sti
xor
out
push
dec
cwtl
push
dec
inc
pop
inc
adc
mov
dec
stos
jmp
jno
pushf
lock
xor
xchg
sbb
scas
mov
xor
dec
mov
dec
sbbl
sbb
int3
std
decb
jns
xor
mov
mov
popf
jmp
jb
pop
mov
or
sar
call
jmp
fs
pushf
cltd
jmp
mov
cld
or
jl
out
ljmp
add
int
sbb
cmc
fwait
es
xchg
mov
imul
roll
stos
sbb
into
stos
rorl
adc
pushf
push
outsl
ljmp
dec
dec
push
stos
jg
or
add
lret
out
enter
jg
sbb
adc
out
mov
lret
cmpsl
cmp
outsb
in
loop
ja
shll
push
cmc
in
iret
or
xchg
sub
jo
adc
out
std
mov
adc
mov
cs
clc
sarb
dec
inc
mov
je
and
adc
jecxz
lea
cs
cmpsl
push
push
sti
addb
negl
cld
jno
ret
cmp
dec
sub
jbe
aas
jbe
adc
out
mov
jle
sub
imul
xor
popf
test
notb
outsb
fcmovnb
fistpll
pop
inc
in
pop
mov
xor
das
shlb
sarb
pop
outsl
adc
push
shrb
out
mov
pop
mov
jnp
and
mov
fsubrs
fst
adc
dec
lcall
mov
jl
adc
mov
shlb
xchg
or
pop
push
popa
xchg
fwait
je
push
push
sub
mov
mov
push
test
or
cmp
sbb
lcall
sahf
mov
xor
or
inc
rorl
sub
shrl
pop
mov
cmpsl
cwtl
test
fst
mov
insl
mov
nopl
add
icebp
insl
jns
mov
and
jge
ja
rcl
outsl
std
stc
inc
pop
enter
lods
mov
mov
ret
adc
adc
push
jo
clc
f2xm1
insb
xor
in
cmpsl
mov
hlt
fldt
mov
lods
out
push
xchg
cmc
rorl
inc
sbb
or
aas
in
jp
xlat
sbb
cli
popl
jmp
bound
push
movsb
adc
fdivrs
xchg
or
cmp
leave
xlat
sbb
popa
jbe
jge
and
mov
or
sti
dec
mov
and
sub
cs
in
dec
add
xchg
sub
mov
out
cltd
sahf
jo
int
loop
jge
mov
sbb
mov
jmp
jge
mov
mov
stos
lahf
jno
or
dec
subl
divl
cli
push
mov
adc
daa
fmulp
mov
lcall
sub
dec
cmpsl
inc
loope
stos
mov
ja
sbb
sbb
or
dec
sbb
fcmove
aam
movsb
mov
mov
ss
dec
mov
adc
lods
pop
push
mov
aas
cmp
movsl
imul
test
dec
push
movsb
jp
dec
lods
adc
arpl
cmp
jbe
lcall
arpl
jns
push
rolb
sbb
mov
inc
jne
add
xor
cmp
lock
cwtl
push
gs
out
jle
dec
dec
push
shlb
mov
pop
cmc
cmp
fisubrs
je
mov
jecxz
pop
pop
sbb
add
cwtl
test
sahf
push
mov
xchg
popa
pop
test
and
sbb
pop
fidivrl
pop
rolb
faddl
into
clc
das
or
movsb
nop
xor
jns
aam
adc
fwait
sbb
xchg
cmp
inc
or
sarb
pop
or
leave
ja
xchg
push
cwtl
lret
or
add
and
jmp
push
pop
add
pop
adc
push
cmc
pop
xchg
enter
and
mov
cltd
ja
mov
jle
mov
repnz
out
adc
mov
push
jno
inc
add
out
inc
addr16
adcl
push
add
dec
inc
lahf
repz
sub
std
lret
test
cmpsl
xchg
mov
add
mov
xor
push
bound
push
adc
rcl
sbbl
mov
leave
sbb
inc
xchg
pop
jnp
inc
adc
cwtl
aam
jae
push
fs
mov
sbb
adc
push
loope
fldenv
jb
push
inc
jle
inc
imul
xchg
push
out
push
mov
adc
fcompl
mov
cli
mulb
xor
mov
lds
dec
sahf
pop
xchg
fnstenv
dec
in
push
mov
hlt
sbb
add
mov
mov
testl
xor
mov
inc
add
es
outsb
outsl
mov
lret
mov
sar
inc
insl
xchg
fisttpll
icebp
xchg
es
int3
push
add
adc
loop
test
mov
jge
push
call
das
clc
xor
jne
insl
out
cmp
mov
fsts
sti
mov
outsl
pusha
mov
xchg
pop
popf
pop
and
in
lret
jmp
das
cmp
cwtl
sub
jns
cld
xchg
xor
pusha
cmp
inc
pusha
in
fs
xor
adc
sahf
pop
or
mov
std
in
nop
inc
icebp
or
jns
test
sbb
mov
pop
mov
pop
fwait
mov
adc
adc
subps
js
mull
jle
test
jne,pn
test
xchg
adc
cmp
scas
xchg
fcompl
mov
iret
lods
aaa
push
popa
lods
out
mov
xchg
lock
jae
dec
sub
add
adc
out
xlat
imul
in
enter
in
push
sbb
mov
gs
jp
loopne
bound
stos
sub
add
movsl
jle
in
shrd
loope
pop
nop
pop
mov
jbe
xchg
fsubrs
filds
stos
enter
mov
mov
sub
fisttps
and
inc
aam
mov
xor
cmpsl
fidivrl
out
fbld
cmp
jb
mov
les
std
sti
sbb
jmp
add
xchg
sbb
loope
orl
test
or
or
push
fdiv
jo
push
pop
loop
cld
int3
and
jmp
cmp
push
cmpl
mov
pop
insb
cmpsl
test
inc
cmpsl
push
cmp
bound
lea
jbe
cld
cli
xchg
adc
mov
cmp
sbb
dec
shrb
mov
sahf
add
std
in
outsl
int
push
or
dec
sti
lds
aaa
repnz
mov
leave
testl
sbb
les
into
push
pop
lods
add
push
test
mov
lret
pop
push
xchg
call
lcall
int
arpl
adc
sti
stos
and
repz
sbb
xor
push
pop
fmuls
test
sub
push
or
bound
int3
lds
daa
les
add
dec
mov
xchg
push
add
cmpl
pop
cmpsl
call
cmp
mov
mov
cmp
pushf
mov
mov
scas
icebp
inc
or
xlat
pusha
xchg
cmpsb
outsb
pop
pop
jl
insb
aam
loop
or
les
lods
subb
aas
leave
ljmp
sub
mov
inc
aaa
fisttps
sahf
out
cmp
enter
jecxz
xor
mov
sub
in
sbb
mov
xchg
out
cmp
cmp
dec
push
shrb
push
jno
out
or
dec
popf
inc
insl
jno
repz
lret
adc
mov
dec
test
mov
stos
adc
xchg
ret
xchg
adc
test
lock
add
test
jne
fistl
mov
nop
sbb
cwtl
adc
jl
xchg
xchg
mov
popf
popa
jnp
adc
js
out
sbb
pop
and
push
cli
adc
mov
inc
push
into
out
cmp
dec
popf
inc
xchg
inc
aas
or
jge
jge
mov
loop
jecxz
in
outsl
pop
pop
mov
fdivl
push
and
aad
or
add
sub
adc
cmc
and
sbb
push
push
pop
xchg
xchg
insb
cltd
mov
sti
mov
js
jmp
sub
mov
and
sub
add
or
scas
dec
mov
push
testb
in
in
ret
mov
enter
and
in
xor
fildl
mov
cmp
test
insb
mov
xor
inc
icebp
add
sahf
mov
mov
out
sub
pop
je
inc
call
arpl
imul
ret
jne
lock
push
push
push
sub
in
dec
dec
and
adc
test
inc
pop
mov
mov
adc
push
repz
add
push
stos
imul
mov
push
dec
mov
xor
fstpl
jle
in
icebp
es
lds
inc
imul
pop
es
aaa
in
or
sbb
icebp
mov
subb
in
xor
cmpsl
aas
mov
ret
sub
mov
imul
jb
push
xor
mov
sbb
mov
cld
movsb
ret
ja
insb
fsubs
jmp
sub
cmp
adc
cmc
mov
sub
rcrl
scas
inc
dec
pushf
dec
sahf
insb
call
shrb
xor
fimull
xchg
fcmovnb
and
cmp
inc
adc
int3
inc
xchg
mov
push
popa
xor
xor
sub
in
stos
sub
cmpsb
lock
jg
xchg
xor
pop
int
sbb
jle
mov
jb
gs
sbb
jmp
ror
out
lods
cli
pop
sub
xor
daa
lahf
mov
add
call
ja
test
fdivl
adc
push
inc
mov
mov
pop
lret
fcompl
mov
loope
stc
loop
rclb
jns
xor
nop
and
mov
lds
fisttpll
cmp
pushf
dec
int
lret
cmpsl
pop
pop
jne
or
aas
mov
fidivrs
nop
and
push
cmp
pusha
loopne
out
call
lret
sbbl
inc
or
push
adc
rorb
mov
lret
test
add
xchg
aam
fistpll
push
cmpsb
jnp
cmpsb
test
pop
adc
andl
jle
in
pusha
out
push
mov
dec
sbb
jno
out
inc
fldl
xor
dec
out
push
mov
sbb
and
int3
das
push
push
outsb
loope
sub
pop
xor
fmull
xchg
popf
ss
stc
and
dec
cmp
popfw
jae
push
pop
dec
xlat
xlat
cld
pop
xchg
lods
inc
mov
les
push
push
jge
std
in
mov
mov
xchg
or
xor
insb
add
jge
pcmpgtb
lds
push
and
and
lds
pushf
adc
jae
cli
sub
xchg
out
fcompl
mov
pop
out
sbb
fwait
inc
push
push
mov
xchg
nop
test
add
push
cmp
jb
xor
pushf
pop
icebp
popa
int3
gs
sbbl
andl
pop
fs
scas
adc
pop
daa
inc
adc
shl
add
paddsb
adc
mov
outsb
test
mov
insl
std
out
and
and
mov
fldt
push
push
repnz
add
scas
rolb
dec
lret
or
stos
movsl
incb
push
mov
add
rolb
dec
mov
out
sub
sub
mov
cld
vcomisd
movsl
xchg
lret
push
cmp
sbb
pop
jg
mov
lock
jns
add
jmp
test
sbb
and
lahf
push
mov
and
fldln2
cli
lds
adc
and
jnp
in
jg
mov
es
sbb
test
xor
ret
scas
dec
adc
pop
mov
clc
pop
in
cmpsl
lcall
and
pusha
outsb
cmp
cwtl
outsb
fisubl
mov
fists
mov
xchg
in
sub
add
mov
cmpsb
jne
pop
adc
fcoml
inc
shrl
add
cs
mov
or
cmp
lods
jo
sub
dec
xor
ds
mov
iret
aaa
push
mov
test
out
shll
insl
mov
cmpsl
ds
cmp
adc
fsts
cmp
and
xchg
inc
sbb
cmpsb
cld
cltd
arpl
sub
test
insl
loop
cld
scas
push
inc
stos
pop
inc
push
lock
add
lcall
fimuls
pop
dec
mov
pusha
sub
pop
dec
add
mov
adc
jne
inc
icebp
or
lahf
cwtl
push
aas
shlb
in
dec
xor
and
out
rorb
shr
icebp
daa
lahf
js
push
movl
sub
scas
pusha
int3
xchg
jnp
sbb
outsb
popa
fmul
xchg
or
add
jl
daa
faddp
mov
sub
cmp
push
cmp
lods
out
call
mov
jle
lcall
test
mov
mul
lods
aam
xchg
xchg
push
inc
into
popf
sub
and
xchg
xor
movsl
mov
andnps
jge
pop
in
out
loope
iret
jo
cld
mov
xchg
inc
movsl
sub
nop
fsubrl
push
dec
xchg
jle
cmp
mov
jmp
sub
pop
mov
mov
jnp
push
inc
mov
jae
lret
shlb
fildl
push
or
popa
enter
lahf
enter
ficomps
lea
mov
cmp
sbb
jnp
or
jg
data16
xlat
int
or
adc
inc
mov
mov
repz
into
cmc
pop
shrl
sub
sti
stos
mov
push
dec
mov
adc
push
dec
ficoms
mov
inc
mov
out
lea
adcl
pushf
sbb
inc
dec
addr16
out
inc
repnz
aaa
sub
or
loop
aam
aad
xchg
xchg
repnz
mov
mov
cmp
xor
aaa
inc
jecxz
hlt
fstps
cmpsl
xchg
push
pop
jle
sbb
mov
call
shlb
sbb
cmpsb
aad
lcall
in
mov
lretw
mov
xchg
lds
jge
mov
sbb
das
xor
ljmp
mov
jmp
push
movsl
pop
cmp
jno
cwtl
rolb
roll
push
inc
mov
fldt
jb
cmpsb
addr16
inc
movsl
lods
or
cs
inc
out
push
fildl
arpl
dec
lret
mov
push
pop
jne
cmp
mov
loop
les
daa
jl
into
mov
cmpsl
aad
push
cwtl
clc
lret
mov
cmp
ds
pop
adc
mov
xor
push
or
fstl
push
mov
ds
adc
push
cmp
inc
cs
cmp
movsl
cli
and
pop
dec
xchg
push
sbb
sub
dec
or
out
shlb
dec
ja
push
mov
in
scas
test
pop
out
jb
lret
cmpsl
pushl
ffreep
pushf
lret
xchg
mov
mov
sahf
ds
mov
out
or
into
out
xchg
xor
sub
mov
cmpsb
mov
jnp
outsl
test
lcall
insl
inc
out
fcmovnb
push
mov
aam
je
xchg
xchg
int
inc
cmpsl
xlat
ja
outsl
ja
in
int
add
incl
outsb
subb
das
shr
add
mov
paddsb
sarl
js
cmpsb
mov
jne
scas
cmp
mov
repnz
xchg
enter
clc
dec
mov
arpl
adc
jecxz
iret
jo
lahf
cmc
cli
sub
or
mov
mov
out
push
sbb
jno
xor
neg
arpl
cld
mov
cmp
push
push
push
jns
pop
mov
dec
das
cmp
jmp
int
adc
movsb
mov
xlat
sti
bound
mov
and
sbb
dec
pop
insb
and
inc
mov
negl
pop
out
sbb
addb
pop
std
icebp
les
push
insl
jmp
int
or
or
ret
push
xchg
inc
mov
xchg
xor
fcmovne
aas
inc
mov
jbe
push
nop
push
ja
stos
or
mov
sub
ss
popf
pushf
add
xor
loope
sbb
mov
enter
sti
and
mulb
mov
add
rcl
popl
fsubl
lock
push
inc
shll
pop
and
pop
addl
je
jecxz
mov
lret
shl
mov
pop
ret
xor
in
out
ljmp
sub
or
push
push
or
jge,pt
lcall
and
cs
insb
cmc
sub
push
inc
sbb
xchg
push
imul
ret
xor
int3
sub
out
and
jo
movsb
movsl
or
jmp
lea
mov
jmp
stos
push
scas
loopne
lods
jge
add
push
or
std
mov
sbb
pop
sbb
xchg
mov
cmp
popf
adc
jp
inc
cmp
push
das
xor
inc
filds
gs
rorl
test
pop
mov
sbb
cmp
sti
xor
loopne
fnstenv
add
fstps
mov
cli
mov
mov
sub
es
fcoms
es
ss
mov
aam
xchg
cmp
pop
jmp
jg
cld
test
loopne
mov
pushf
fisttpl
xchg
jns
lea
xchg
push
cld
pop
icebp
jne
dec
repnz
mov
js
fisubs
and
mov
inc
push
test
jbe
movsl
lock
dec
inc
hlt
or
xchg
inc
sub
insl
fdivl
into
dec
push
jle
mov
mov
jo
sarb
push
pushf
add
inc
adc
push
pop
lods
lods
push
aaa
aas
push
cmpsl
movsl
add
and
xlat
fmuls
pop
or
addr16
and
jp
fildl
mov
enter
ljmp
test
cmpb
xchg
jle
popf
push
sbb
xchg
push
and
fs
leave
in
in
stos
xchg
jge
and
mov
mov
dec
push
or
sbb
and
ret
push
pop
ss
test
mov
adc
mov
dec
adc
mov
pop
loop
cmp
out
cwtl
xor
jle
insb
xchg
icebp
aas
adc
jae
test
aas
xor
leave
stos
test
je
rcll
jp
mov
mov
cmc
addr16
push
push
jge
and
sbb
mov
loope
loope
mov
mov
out
dec
jg
xchg
sub
cmp
pop
ret
daa
pop
pop
push
mov
lcall
loopne
xor
fdivr
or
sbb
jns
inc
sbb
push
push
sub
sub
repnz
sub
iret
sbb
out
lea
mov
in
cmp
test
lods
push
pusha
mov
lcall
loopne
scas
clc
loope
ljmp
xor
aas
test
mov
leave
inc
call
pop
xchg
stos
stos
into
or
cmpsb
cmpsl
in
push
xlat
jbe
cmp
inc
push
movsb
xchg
fadds
out
fwait
sar
mov
mov
push
push
inc
xor
mov
mov
jbe
cmpsl
xorb
and
adc
icebp
sbb
xor
add
adc
shll
int
sub
add
call
add
xchg
push
mov
stos
mov
or
xchg
adc
push
aaa
jmp
inc
xor
dec
sahf
cld
sbb
ja
arpl
in
cmpb
outsl
lcall
mov
xor
test
push
out
fnstsw
adc
jl
mov
cmp
out
push
nop
pop
je
push
outsl
ss
add
jecxz
ja
ss
fld1
out
fldl
mov
jmp
xchg
or
es
mov
fistpl
lods
add
mov
jno
push
and
iret
gs
cmp
ds
jnp
mov
lret
mov
outsl
cmp
mov
adc
pop
aaa
dec
scas
sbb
fdivs
stc
xchg
mov
sbb
cmc
mov
pushf
or
jns
push
nop
xchg
test
and
xor
xchg
lret
ljmp
cmp
jne
sub
adc
iret
mov
adc
cltd
add
sbb
or
sbb
lock
adc
std
pop
cwtl
std
out
push
insl
mov
out
sub
out
hlt
lret
push
mov
mov
in
inc
mov
inc
testl
jbe
aas
adc
or
subl
test
mov
notb
push
inc
insl
cmp
sbb
sbb
cmp
arpl
and
out
dec
les
adc
xchg
flds
lahf
sahf
js
sbb
insl
into
enter
push
cmc
cmc
jbe
lcall
jp
mov
push
pop
pusha
or
rcl
mov
fcomip
adc
enter
out
sbb
daa
stc
mov
sub
cmp
xorl
lea
cmc
mov
xchg
ljmp
jecxz
xchg
mov
iret
sub
or
push
xchg
cmp
sub
sub
push
push
mov
add
ja
mov
aad
sub
fdivl
and
imul
or
cmp
or
leave
and
jno
or
sub
xor
adc
jge
scas
jb
mov
sub
ljmp
push
ja
mov
dec
xlat
mov
pop
pop
addps
jae
out
loopne
push
lcall
nop
or
dec
push
leave
push
data16
and
xchg
test
int3
in
jmp
push
cs
or
inc
nop
xchg
dec
cmp
and
leave
pop
mov
and
cmpsb
sub
sbb
pushf
xor
sbb
lds
sahf
cs
fbstp
aas
outsl
daa
pop
icebp
sbbl
test
mov
xor
jmp
xchg
sub
mov
test
int
repnz
in
inc
mov
int
jno
mov
or
loope
movsb
jne
aaa
push
inc
and
sbb
loop
cmp
ss
int
popf
test
fs
mov
push
xchg
or
je
and
adc
addl
mov
cmpsb
pop
and
push
popa
mov
cmp
ss
loope
cs
lcall
inc
cld
enter
push
and
mov
test
mov
adc
jns
cmp
lods
lods
xor
iret
push
cmp
mov
xor
adc
loope
push
mov
xchg
cmp
js
and
lods
xlat
and
in
int3
les
ds
int
pop
dec
mov
adc
or
sub
stc
push
xlat
insl
pop
cmc
popa
jp
rorb
push
lret
iret
clc
orl
incb
or
lods
jo
add
jmp
sub
pop
sbb
sub
sbb
sub
and
fsubrp
lret
inc
ljmp
push
dec
cmp
inc
add
loopne
stc
jmp
sub
push
pop
xchg
enter
mov
test
imul
mov
jbe
outsb
sub
jge
imul
cld
out
xchg
pop
repnz
sbbl
fwait
lret
and
jo
cmpsb
jns
shrb
outsl
addb
lahf
mov
pusha
outsb
dec
adc
scas
pop
pop
insb
and
and
adc
movsb
pop
xor
xlat
fmull
push
hlt
leave
gs
aaa
or
stos
adc
inc
mov
jnp
lret
repz
cwtl
and
mov
jp
lds
cmpsl
xchg
inc
inc
dec
add
sub
or
loop
xchg
es
xor
sub
mov
or
lock
iret
or
imul
push
repnz
repz
int3
push
dec
call
push
call
sbb
lret
out
pop
pusha
ss
jo
std
pop
push
orl
aad
adc
fwait
aad
mov
lds
dec
ret
repz
insl
jmp
push
fcoml
xchg
idivl
jg
int
jecxz
popa
mov
adc
xor
dec
pop
jo
mov
jle
and
dec
mov
mov
xchg
js
adc
xor
or
loope
in
pop
je
inc
pop
mulb
cld
pop
pusha
call
clc
lret
insb
addl
mov
mov
mov
adc
mov
adc
enter
aas
adc
jne
push
ja
mov
push
pushf
sub
sub
frstor
mov
sub
in
cli
stc
fistps
sbb
pop
xlat
shrl
mov
push
leave
js
mov
imulb
lcall
xor
movsl
xor
or
out
sbb
out
jmp
mov
adc
sbb
mov
pusha
in
sub
aas
cltd
xchg
cmp
loope
jno
push
hlt
add
stos
fs
call
out
stos
gs
jp
adc
xchg
ror
xchg
rolb
inc
clc
jne
fiadds
out
pushl
mov
sbb
push
jnp
inc
scas
out
sub
add
cmp
lods
loop
xchg
cmpsl
in
in
mov
fwait
xor
fprem1
sbb
dec
out
test
jge
test
imul
test
pop
call
dec
push
aam
mov
mov
fidivs
dec
aaa
sbb
cmp
repz
rcll
pop
adc
mov
or
sti
test
lods
push
mov
jp
jbe
bound
aas
test
add
jae
push
xchg
cli
xor
adc
mov
std
test
lea
mov
push
jae
movsl
add
mul
sbb
imul
sti
sub
ljmp
lds
jo
outsl
std
pop
pop
lods
inc
cs
add
add
imul
push
push
out
aaa
inc
jecxz
dec
stc
pop
dec
test
popf
lock
orl
adc
push
xor
inc
sahf
xchg
ljmp
push
dec
push
xchg
insl
pop
dec
mov
insb
pop
dec
rcrl
sub
scas
sbb
mov
mov
inc
inc
cmp
lret
and
roll
fdivrp
ret
or
sti
pop
or
ja
std
pushf
xor
or
dec
or
loopne
cmp
and
inc
lods
sbb
outsl
out
pop
sub
cmp
fdivl
aaa
aas
iret
dec
mov
xlat
and
movsb
fidivl
imul
cs
ja
dec
mov
jge
inc
sbb
pop
inc
movsl
sub
xchg
loopne
push
fwait
int
sbbl
sub
mov
cmp
xlat
inc
scas
out
pop
testb
mov
mov
stc
jns
mov
repnz
imul
adc
ljmp
adc
xchg
outsb
ja
je
ret
fistl
outsl
push
cltd
adc
push
ja
out
out
push
jnp
xchg
outsl
je
and
arpl
jg
dec
dec
cltd
shrb
movsl
mov
movsl
pop
aas
mov
icebp
xor
push
stos
inc
cmp
cmpsl
xchg
inc
inc
jnp
sbb
ss
in
data16
int3
jae
je
mov
aaa
call
sub
jne
hlt
inc
push
ret
shll
jecxz
pop
and
sub
adc
adc
ret
sbb
movlps
sub
mov
popf
das
jecxz
outsl
sbb
add
inc
xor
out
mov
jns
jns
mov
or
push
repnz
add
sub
jne
add
pop
sbb
xor
mov
fadd
mov
icebp
ljmp
test
cld
or
jno
sub
pushf
lret
inc
jmp
push
mov
insl
pop
pushf
inc
icebp
sub
call
mov
pop
test
adc
rorb
fisttps
lds
fiadds
fistpll
push
mov
pusha
and
push
dec
inc
or
or
adc
stos
rclb
inc
rdpmc
push
outsb
ss
sbb
mov
repz
push
pop
sub
ljmp
cmp
mov
and
mov
adc
fwait
rcr
inc
mov
or
mov
lcall
jo
rorl
sbb
insb
stos
dec
stos
mov
xchg
add
mov
jbe
add
fmuls
add
ret
fucom
mov
add
lret
outsb
sbb
test
cs
lret
loope
rsm
xchg
jbe
shlb
hlt
mov
and
cmpsl
les
enter
lret
inc
mov
and
inc
jg
jl
js
dec
rcr
jo
cmp
inc
into
mov
xchg
jle
pushf
cmc
push
inc
addr16
rcrl
testb
sbb
inc
inc
in
mov
cmp
je
lcall
sub
or
nop
scas
push
or
mov
jg
dec
cmp
movb
hlt
sbb
sbb
in
push
mov
ret
xchg
push
lock
pusha
cmp
dec
inc
ja
hlt
mov
or
push
or
mov
call
in
push
cmp
add
imul
jle
cmp
xacquire
loopne
in
cltd
call
icebp
push
inc
dec
and
jge
movsl
mov
add
fidivrl
imulb
jp
push
jmp
repz
aad
test
inc
jp
repz
loope
mov
repz
inc
scas
mov
in
cmp
or
cmp
pop
lods
inc
stos
ljmp
mov
jmp
adc
pop
out
pop
sub
dec
xchg
aas
lods
rcll
sub
or
clc
cmpsl
ja
adc
lahf
adc
shll
adc
jo
pop
testl
adc
cmp
ret
out
dec
pop
jl
test
inc
jp
push
clc
pop
ret
pop
loope
push
movsb
mov
push
adc
add
ds
push
xor
sbb
mov
mov
push
sbb
jg
adc
clc
pop
jb
rcll
mov
cwtl
fdivrs
or
cmp
and
call
or
or
add
das
repz
scas
jg
jae
xor
adc
mov
cmp
fwait
pop
pop
inc
sti
pop
inc
movsb
xor
add
pusha
aad
cmovo
jo
pop
pxor
adc
ds
lods
sbb
cmp
insl
jl
cli
pop
lcall
jne
add
mov
imul
push
pop
jecxz
adc
imul
mov
xor
das
loop
ret
jmp
loop
jecxz
inc
or
push
adc
and
movsb
shrb
or
lcall
mov
test
mov
pop
cmp
jle
stos
aam
testl
sbb
sbb
movsl
in
arpl
dec
rcll
adc
add
pop
or
mov
out
leave
mov
jne
mov
popf
dec
fsubs
fsubs
je
aam
push
ljmp
pop
jo
xlat
push
and
push
shll
sub
fstpl
jp
lcall
insb
xchg
arpl
lea
xchg
mov
dec
adc
test
mov
daa
scas
or
mov
add
daa
xchg
ja
scas
rorl
std
enter
cltd
push
xchg
cmp
pop
inc
mov
fmul
popa
add
das
xor
push
sbb
add
xchg
xor
push
out
or
mov
ja
xchg
lds
testb
loopne
ja
add
bound
dec
inc
xor
cmp
mov
lahf
les
stc
cltd
mov
icebp
testl
repnz
xchg
mov
adc
pop
pop
jge
int3
mov
arpl
xchg
loope
xchg
push
xlat
les
out
add
in
sub
push
cli
das
dec
sub
arpl
jl
pop
mov
mull
mov
leave
fsubrl
pop
mov
add
pushf
clc
sub
push
mov
jae
sbb
daa
push
xchg
or
negb
cwtl
sbb
jns
into
add
mov
adc
mov
incb
fwait
shrl
and
adc
movsl
mov
dec
jg
sysret
mov
loopne
in
mov
push
repz
inc
mov
mov
inc
mov
ss
jecxz
sbb
test
pop
push
out
sub
imul
jl
iret
push
je
pop
pop
dec
cltd
mov
sbb
imul
iret
pop
mov
mov
sbb
mov
movb
jmp
pop
pop
fsts
pop
push
mov
neg
mov
test
imul
dec
je
clc
mov
inc
dec
lock
mov
insb
mov
xor
adc
bound
subl
call
push
push
rorb
in
bound
add
xchg
pushf
xlat
pop
out
jbe
daa
and
pop
scas
dec
and
scas
dec
mov
or
mov
and
or
iret
dec
add
jnp
idivb
jecxz
push
subb
sbb
arpl
inc
mov
fsubrs
out
xchg
cltd
test
pop
lds
xchg
fnstcw
cmc
cmp
pusha
sbb
cmp
pop
sub
popa
sub
scas
pusha
xor
ret
adc
fstl
mov
into
stos
pop
roll
popa
aam
xchg
fptan
lea
mov
sbb
pop
lods
dec
xchg
mov
lret
dec
lods
dec
popa
call
push
rorl
test
mov
cld
jbe
imul
lds
xchg
mov
jmp
mov
jle
inc
mov
xor
jp
outsb
mov
aam
jb
bound
add
push
nop
jne
cmp
or
pop
shll
movsb
inc
and
mov
jp
or
cmp
cmp
adc
inc
push
xchg
mov
mov
and
stc
dec
paddusb
and
pop
scas
lahf
outsb
pop
sub
and
lea
repz
mov
data16
cmp
mov
xchg
ret
repz
gs
xlat
popa
lret
pop
mov
insl
add
jno
cmp
std
xchg
das
loopne
sub
or
push
xchg
jg
dec
mov
jl
or
cmp
lahf
xchg
xchg
sub
ljmp
sbb
cmp
fwait
inc
xor
adc
loope
lock
mov
jbe
mov
cltd
cmpsl
sbb
sbb
arpl
pop
mov
std
xor
in
mov
pop
aaa
mov
nop
mulb
arpl
pop
stos
xor
in
push
in
cmc
cmp
call
arpl
cltd
jg
test
and
xor
sub
push
jge
sbb
add
imulb
xchg
lcall
jecxz
xchg
lcall
cld
push
rorb
jae
gs
data16
dec
mov
int3
mov
nop
sbb
and
mov
rcrl
orb
jle
stc
out
ret
jbe
cmpsb
mov
mov
es
push
rclb
outsl
fwait
and
loopne
int3
scas
push
sahf
shrb
dec
jno
repnz
mov
jg
addr16
push
test
pop
repnz
mov
ss
inc
sub
jp
inc
push
sub
mov
mov
add
arpl
xor
mov
imul
jmp
imul
cmp
xor
aad
xor
popf
fmul
into
outsb
add
add
mov
jns
cs
push
dec
pop
xor
mov
inc
in
cmc
push
or
lods
xor
sub
shlb
divl
sub
mov
mov
roll
popf
mov
outsl
jo
je
das
lea
jge
xor
in
mov
enter
out
test
pusha
cld
imul
mov
stos
pop
insl
dec
and
push
shl
push
in
xchg
sbb
mov
inc
inc
addr16
mov
jo
inc
sbb
mov
push
test
push
mov
jne
iret
mov
sbb
loop
ljmp
mov
clc
mov
add
cmp
mov
cmp
test
lods
mov
ficoml
mov
mov
xchg
inc
mov
mov
rcll
adc
adc
shrl
xchg
fstp
mov
sub
gs
cmc
insb
add
push
insb
stos
in
sbb
xor
cltd
push
fdivl
push
fisubl
fwait
sub
xchg
sti
and
std
repnz
lahf
jecxz
push
jae
insb
dec
jbe
mov
aam
notb
in
popf
mov
pop
cmp
adc
not
das
mov
out
add
and
int
pushf
jl
bound
divl
mov
adc
sub
xor
imul
sub
mov
sbb
jg
fsubrs
push
cmp
cwtl
sbb
sub
push
jge
out
mov
dec
mov
mov
xor
dec
mov
and
cmpsl
pop
pusha
cmpsl
sahf
outsb
lods
in
jne
clc
inc
std
xor
mov
mov
mov
cmp
js
inc
insb
inc
or
cmp
in
dec
jno
into
sub
divl
les
fldcw
mov
jge
pop
inc
mov
sub
mov
lods
sti
pop
popa
seta
xchg
jecxz
jmp
adc
jbe
push
pop
mov
out
mov
sbb
jbe
out
adc
out
imul
dec
shrb
cmpsb
gs
and
test
push
push
mov
sbb
mov
xlat
pop
das
jg
push
mov
ret
jns
lods
gs
sbb
adc
jno
test
add
mov
cmp
daa
stos
push
idivb
std
inc
stc
pop
cmp
mov
xchg
insb
fnstenv
inc
testl
or
or
insl
rcl
orb
fisubrs
dec
in
scas
mov
lods
adc
ss
and
insl
adc
int3
ret
push
inc
add
dec
in
and
mov
stc
push
xadd
add
mov
xchg
mov
add
inc
inc
jp
out
outsb
xchg
push
mov
dec
icebp
movsl
clc
sar
inc
adc
fistl
xor
testb
and
pop
and
mov
aas
out
mov
iret
jnp
lret
fildl
push
and
pusha
cmp
sbb
xchg
lahf
mov
lods
idivl
adc
icebp
jo
pop
or
notb
cmpsl
mov
mov
fildl
push
cwtl
aas
mov
lods
pop
fwait
mov
jne
bound
sbb
mov
int
push
loop
xor
std
jbe
mov
jo
mov
xchg
mov
stos
arpl
pop
pop
fistps
lods
mov
push
pop
js
or
sub
divb
enter
add
test
dec
sub
push
mov
shll
dec
pushw
dec
vxorps
fidivs
cmpsl
dec
ljmp
jns
push
out
add
cmp
je
loop
mov
test
xchg
mov
mov
lea
add
sub
data16
xor
ret
jae
insl
sub
jnp
adc
cmp
clc
sub
adc
inc
dec
sub
cmpsl
push
push
call
lahf
lcall
ss
test
shl
jns
loope
in
imul
lock
cmp
push
pop
outsb
push
addr16
int3
in
call
push
cmpsl
fwait
adc
enter
hlt
les
push
hlt
xchg
add
mov
sti
and
fdiv
mov
stc
xlat
and
push
popf
cmp
insb
cltd
or
mov
sarl
mov
pop
mov
inc
cmpsl
inc
xchg
icebp
mov
xchg
jle
and
adc
xlat
xchg
or
xchg
pop
andb
mov
mov
lds
push
push
out
int3
in
andb
sbb
cmp
sbb
sub
frstor
mov
pusha
jge
cmp
data16
stos
mov
xchg
incb
pop
pop
ret
fidivl
sti
mov
int
in
jmp
cld
pop
shrl
inc
popf
xor
repz
inc
inc
jns
mov
jecxz
mov
xor
jae
das
subb
pop
cmp
int3
fnstsw
in
inc
sbb
or
sahf
stc
mov
mov
ds
cmpsl
clc
out
ret
sub
stos
pushl
in
sub
cwtl
dec
insl
out
or
mov
scas
cmc
mov
cmp
dec
dec
popf
xchg
movhps
cmp
sub
bsr
mov
lods
xchg
rclb
xchg
stc
pop
xor
pop
xlat
cltd
int3
test
inc
sar
ss
leave
pop
fwait
push
push
add
cmp
inc
ja
add
xor
add
pop
mov
xor
jnp
pop
and
pop
fimuls
xor
cmpsb
xchg
out
shl
andb
xchg
ficomps
in
push
lock
dec
mov
rorl
xchg
int3
popf
mov
jne
popa
push
cmpsb
sub
inc
fld
sub
sti
adc
and
loope
pop
test
dec
into
stos
sti
xor
es
jne
jmp
int
xlat
dec
into
pop
xchg
adc
push
int
push
aad
and
xor
shll
test
mov
mov
and
enter
push
xorl
add
or
push
data16
inc
out
xchg
cwtl
push
add
fcoml
xchg
cmp
popl
add
sbb
push
fwait
xor
gs
mov
adc
les
mov
cmp
sahf
inc
outsl
outsb
mov
pop
mov
mov
mov
lods
sub
loopne
stos
or
pop
mov
jmp
mov
adc
sub
lds
push
cmp
inc
mov
fldcw
sbb
fcomp
gs
fidivrs
iret
cli
xchg
out
jg
pop
jno
test
popa
or
pop
scas
stc
adc
rorl
jns
inc
xor
sti
jle
lcall
lret
add
push
negl
push
add
sbb
cmp
push
das
int3
gs
test
imul
sbb
pop
sahf
test
mov
inc
add
push
cmp
leave
jecxz
das
addr16
cmp
cli
bound
adc
mov
js
repz
xchg
xchg
add
adc
dec
jbe
pop
sub
in
xchg
aas
es
jne
cmp
dec
add
mov
jnp
ret
pop
mov
loop
fiaddl
jne
jne
ret
jecxz
nop
sub
cs
mov
in
cmp
dec
notl
push
aad
loope
faddl
js
hlt
push
add
pop
inc
dec
sub
jnp
adc
lock
insl
into
sbb
adc
mov
sbb
inc
sbb
adc
cmpsl
out
cmc
test
mull
sub
push
in
cld
pop
jg
mov
mov
repz
fstpl
cli
mov
add
cmpsl
orb
loopne
sub
or
jge
out
cmp
ret
es
test
int
leave
imul
xchg
push
cmc
lock
adc
mov
jmp
cltd
push
cmp
clc
in
fistpll
pop
sbb
popf
int3
add
test
and
mov
dec
cmc
sti
ret
int3
mov
in
pop
push
pop
aad
das
and
jp
jecxz
popf
mov
jne
mov
dec
out
mulb
push
rorl
jno
xchg
cmc
rorb
rclb
inc
pop
lds
out
mov
dec
xchg
xchg
aas
add
jg
icebp
clc
faddl
pop
fisubl
and
jmp
loopne
cmp
xchg
mov
add
mov
mov
xor
or
pushl
nop
std
int3
xchg
dec
fisttps
mov
lcall
or
int
inc
mov
mov
dec
hlt
out
mov
push
mov
shrb
lret
addr16
call
fbstp
pop
push
add
mov
mov
rorb
popa
ds
setle
insb
fsubs
xor
outsb
popw
fcoms
push
jl
outsb
test
aas
jno
push
in
inc
pop
pop
sti
repnz
add
sub
in
fidivrl
loopne
pop
outsb
imul
mov
dec
adcl
roll
dec
ja
dec
ret
test
sub
orl
pushf
mov
popf
sbb
push
sbb
in
xchg
cmpsb
pop
jge
adc
jmp
or
push
test
pop
sbb
fnstenv
cmpsb
xor
loop
sub
mov
mov
fdivs
push
sbb
pop
icebp
sub
jge
stos
mov
push
mov
cmp
cmp
push
pop
sub
and
or
mov
add
dec
mov
sub
sbb
loope
fiadds
lea
jae
xchg
pop
fwait
cmpsb
cli
aad
outsl
mov
jne
lock
jnp
out
adc
xchg
push
shl
cmpsb
xchg
pop
mov
add
push
notl
lods
mov
pusha
dec
mov
xchg
outsl
mov
xchg
lea
lods
lods
sub
fchs
aaa
test
pop
lcall
test
stc
mov
push
stos
mov
movsb
jmp
xchg
mov
cmp
je
addr16
stos
data16
outsl
pop
or
stos
in
push
stos
mov
loopne
mov
cmc
mov
and
aad
xor
inc
xor
shl
js
jmp
or
cmp
pop
xchg
cmp
das
sub
sub
sbb
mov
push
pop
fsubs
xor
fisubrl
add
lea
sub
ds
cmc
xchg
insb
fwait
mov
movsl
fistl
sbb
fimuls
inc
lcall
xchg
sbb
cmp
sbb
jbe
add
pop
test
cmp
lret
bound
dec
daa
adc
push
mov
mov
int3
lock
mov
outsl
addb
jge
in
scas
lods
push
fbld
push
ror
xchg
data16
push
push
xchg
test
add
ret
jp
out
pop
sub
mov
mov
test
mov
push
pop
aaa
cld
sbb
shll
push
ficoms
cmpsl
sub
sti
sahf
call
loopne
push
aaa
icebp
das
sbb
cmp
mov
pop
rolb
ss
lcall
ret
nop
mov
sbb
add
stos
cmc
inc
ret
add
out
mov
lcall
xchg
pop
push
int
fwait
ret
push
and
xchg
mov
adcl
pop
pushf
scas
lcall
sub
ljmp
fldcw
das
shlb
cmp
call
inc
insb
cld
mov
in
or
lea
sbbb
push
xchg
out
mov
xchg
jg
lret
stc
arpl
inc
pop
insl
sub
pop
mov
xlat
negl
mov
push
mov
bswap
or
cmp
lahf
or
inc
mov
ror
imul
or
push
stc
repz
or
xchg
push
push
std
sahf
stos
sarb
movsb
sbb
in
insb
dec
xchg
push
or
cli
int
sbb
imul
movsb
insb
movsb
scas
xchg
das
adc
push
jmp
in
test
ljmp
jg
push
dec
or
data16
ljmp
jbe
fcoms
push
lret
imul
repnz
vunpckhps
push
loop
xlat
push
movsb
cmp
sarb
and
xchg
pop
or
shl
aam
mov
xchg
sbb
mov
popf
mov
dec
jg
inc
fisttpll
repz
movsl
inc
mov
das
cmpsb
or
pop
push
rorl
iret
adc
arpl
mov
outsb
lret
xchg
mov
adc
mov
push
mov
pushf
loop
sub
rclb
adc
scas
cwtl
sub
in
stc
repnz
dec
inc
push
loopne
adc
push
std
or
dec
iret
lret
pop
jge
out
jne
cmp
clc
mov
scas
pop
mov
jg
rcrl
add
xchg
scas
mov
ds
movsl
fldcw
push
and
call
xchg
ljmp
sbb
out
mov
and
sar
push
test
lods
pop
push
pop
mov
xchg
leave
add
into
mov
inc
into
fidivl
sub
cmp
jb
xor
push
lcall
test
jmp
rclb
cld
js
and
cmp
jbe
pop
mov
in
stos
jp
xchg
push
inc
dec
movsl
jno
mov
adc
mov
mov
xor
jp
sub
cmpsb
or
daa
aad
lods
and
sub
mov
cmp
mov
push
jns
push
or
getsec
jae
inc
rcll
jl
cmpsl
xor
rclb
or
lcall
jo
popa
ja
or
aam
adc
inc
in
ret
repz
add
cmp
das
mov
inc
dec
xor
hlt
nop
outsb
loope
cmp
push
inc
es
cmpsb
out
cmc
adc
es
jecxz
or
jne
jg
enter
or
lret
add
push
in
test
test
or
int
xchg
jl
cltd
icebp
sti
lret
or
movsl
rclb
shll
test
sbb
mov
or
pop
adc
add
daa
repz
hlt
loope
adcl
xor
cmpsb
mov
orb
daa
mov
stc
loope
xlat
mov
ss
movsl
jg
mov
dec
pop
pusha
cltd
inc
jne
jne
into
cmpsb
lds
int3
cmpl
add
dec
stos
dec
jns
and
cmp
imul
cmpsb
push
and
ja
pop
inc
into
sub
mov
repnz
les
icebp
mov
cmc
or
pop
or
imul
icebp
push
outsl
inc
lods
insl
push
adc
into
dec
test
popfw
add
push
dec
mov
icebp
jns
fidivl
test
lret
jmp
mov
ljmp
andl
mov
mov
data16
mov
push
inc
xor
add
pop
shlb
inc
icebp
fs
xchg
adc
movsl
xchg
cmp
lret
inc
mov
dec
mov
fsubr
test
xor
xchg
stos
into
stos
jo
adc
pop
cwtl
push
or
and
ficomps
scas
xchg
mov
fs
pop
int3
add
push
insl
out
sti
jb
inc
sub
mov
js
daa
push
sub
imulb
aad
xor
push
loopne
test
sub
mov
jp
xor
imul
sub
pop
popa
xchg
mov
fcoml
ja
addr16
icebp
mov
jg
test
xchg
dec
mov
stos
xchg
sahf
or
sub
pop
rcr
mov
outsb
mov
imul
in
in
nop
test
sti
clc
ret
cmp
jns
and
pop
nop
stc
xor
dec
push
psubw
adc
mov
adc
xor
ja
call
jae
xchg
dec
lea
and
test
pop
mov
into
sbb
mov
mov
sbb
sbb
popf
add
lahf
or
mov
push
out
inc
subl
nop
cmpsb
pop
cmpsl
fldenv
or
mov
gs
test
pop
outsb
xor
sub
rolb
aaa
in
shrl
outsl
imul
xchg
inc
movsb
sub
add
roll
push
out
into
push
cmp
adc
shlb
lock
popa
or
icebp
jns
cmc
pop
aaa
mov
insb
mov
xorb
cmp
mov
inc
pop
ret
iret
cmc
mov
shlb
aaa
fcomps
shlb
jns
in
push
cmp
decl
sub
push
adc
mov
cmp
push
pop
mov
in
mov
push
scas
jle
lcall
insl
dec
pop
pop
or
or
mov
loopne
sub
ljmp
in
iret
add
shlb
push
mov
add
pop
in
ds
mov
into
or
lret
pop
stos
vcvttss2si
fisttps
mov
mov
xchg
loop
outsl
retw
push
and
enter
add
enter
imul
popa
pop
add
pop
dec
pop
rcrb
or
cmp
insb
insl
or
popa
and
mov
loop
mov
add
xor
shlb
adc
out
inc
mov
or
dec
lahf
sbb
cmp
pop
nop
testl
subl
pop
adc
cs
sti
ljmp
fistl
ds
imul
push
fcmove
pop
repnz
aad
aam
mov
xchg
dec
and
fucomi
mov
shlb
sarl
fsubl
pop
leave
or
int
pop
and
cmp
pushf
fiadds
hlt
or
orl
inc
push
cmp
cli
mov
cmpsb
sbb
mov
ret
in
loope
adc
add
cmpsb
fwait
xchg
addr16
test
or
adc
movsl
movsb
fs
mov
in
sub
push
cmpsl
mov
and
stc
push
ds
xor
pop
into
push
pop
push
fxch
movsl
insb
mov
cmc
sub
pop
xchg
dec
push
pop
lock
sub
add
mov
mov
shl
mov
xchg
into
adc
adc
lds
ret
mov
loop
leave
outsl
and
or
jo
sbb
or
sub
jns
fldt
dec
cmp
sbb
pop
push
pusha
pop
jno
lds
in
adc
add
popa
ret
je
adc
imul
addl
push
mov
mov
jns
pop
or
fidivl
sbb
add
dec
add
repnz
xor
enter
imul
mov
nop
sahf
scas
icebp
ds
adcb
xchg
out
xlat
insb
pop
cltd
psadbw
or
repz
ljmp
mov
lods
loop
jl
add
jmp
cmpsb
sub
dec
mov
mov
cmpsb
ss
jo
xor
lahf
sub
clc
sub
adc
outsl
ret
scas
xchg
cli
pop
push
add
lea
add
cmpsb
mov
add
push
sub
imul
lret
cmpsb
sbb
rorb
loopne
inc
push
sbb
jno
dec
push
jne
add
pop
jge
and
sbb
enter
cld
sahf
popf
cltd
jp
jae
or
popf
adc
iret
inc
xchg
adc
xchg
bound
aam
sbb
and
sbbb
pop
push
inc
fdivr
fmuls
push
stos
fadd
sbbb
stos
cmp
or
pushf
stos
pusha
in
pushf
stos
int3
stos
push
push
sub
fcoml
rcl
movsb
xchg
sbb
sbb
movsl
addr16
test
adc
or
dec
jbe
bndldx
out
movsl
xchg
leave
mov
mov
in
jne
lock
mov
add
push
leave
hlt
xor
push
in
mov
bsf
mov
and
push
pop
sub
test
clts
xchg
or
sub
sbb
pop
mov
sub
mov
mov
inc
cmp
xchg
nop
stos
jb
add
cmp
out
inc
cli
sub
shlb
outsb
or
mov
das
popf
adc
repnz
stos
test
bound
push
imul
stos
dec
sub
cs
ret
sbb
mov
repnz
das
rcl
stc
adc
jmp
jp
imul
shl
jmp
aam
jns
mov
adc
sbb
mov
rorl
sub
push
js
icebp
loopne
jo
into
adc
punpcklbw
mov
xor
sbb
cmp
mov
fbstp
aaa
mov
std
dec
js
call
cltd
rcrb
and
incl
out
xchg
cmp
lea
add
iret
inc
fadds
sub
pop
nop
out
arpl
cmp
divb
sub
ljmp
mov
push
dec
fdivrl
push
je
adc
xchg
cltd
jns
jnp
jae
int
jecxz
jle
loop
stc
jmp
push
cltd
scas
addr16
int3
pop
or
insl
cvtps2pd
sarb
cli
jb
subb
fiadds
push
in
mov
sbb
popl
pop
and
scas
sbb
stos
mov
stc
cmpsl
xlat
mov
and
push
sahf
sahf
jnp
dec
jno
add
pop
sbb
dec
test
or
inc
ss
inc
mov
in
out
pop
xchg
cmp
jp
xor
neg
pop
jbe
lret
dec
xor
lret
ffreep
jmp
paddq
movsl
insb
shll
sbb
push
dec
mov
out
jecxz
mov
or
pop
sti
bound
sarl
xchg
xchg
sub
out
ljmp
jbe
outsb
rcll
in
or
mov
sub
fidivl
jo
push
lahf
sbb
jecxz
cmp
xchg
fstpt
push
xlat
loop
enter
lret
sub
test
fs
jmp
mov
dec
int
cmp
cmp
xchg
xor
stos
inc
push
mov
jo
or
cli
movsl
in
shlb
out
icebp
test
cmp
adc
bound
and
push
int
das
xorl
loop
rcrl
sub
lock
mov
clc
push
popa
ljmp
sub
add
int
jmp
leave
fldl
and
lock
jecxz
and
iret
or
mov
add
add
adc
lods
stos
xchg
cmpsl
jnp
xchg
inc
pop
enter
mov
in
fs
jge
cmpsb
mov
enter
ror
fsubr
pop
arpl
push
xor
lret
sub
loopne
sbb
xor
testb
pop
jns
das
mov
pop
push
scas
add
mov
imul
push
push
and
cmp
stos
fsubrs
mov
jge
cmc
in
mov
addr16
mov
pop
roll
rcrl
xchg
outsb
shl
push
push
cs
cwtl
sub
jecxz
cmp
mov
clc
pop
js
out
dec
jns
add
xchg
rolb
lds
hlt
aad
jecxz
clc
xorb
sub
divb
mov
out
xor
fld
and
jg
cmpsb
xor
adc
and
pusha
mov
pop
dec
add
push
das
sub
mov
adc
shll
push
stos
iret
lret
vcvtsd2ss
arpl
mov
xchg
xchg
sub
stc
cltd
out
mov
xor
mov
imul
clc
mov
xor
xlat
ss
lock
cmpsb
adc
cmp
and
imul
call
loopne
mov
jnp
mov
adc
lret
in
and
std
ficompl
bound
test
mov
xchg
sbbl
and
inc
cmpsl
pop
lds
aaa
cmpb
shll
inc
out
sbb
lock
jne
and
fdivrs
in
in
lcall
test
xor
push
pop
mov
pop
xchg
rolb
sub
sbb
xchg
pushf
not
xor
popa
adc
mov
dec
cmp
test
mov
test
sub
pop
jge
lahf
loop
imul
add
cmp
stos
add
dec
stos
add
pop
mov
mov
cld
cmp
shr
adc
in
xchg
sub
xor
cmpb
fiadds
or
roll
push
push
push
jecxz
into
popa
jae
das
mov
mov
mov
push
mov
lea
cli
in
daa
jae
mov
aas
mov
and
pop
mov
add
out
pop
pop
mov
cmp
and
adcl
jle
sti
pop
lods
subl
insl
sub
bnd
mov
push
jle
sub
mov
cmp
lock
fmull
push
add
xor
and
mov
xchg
jnp
mov
cmp
jge
movsb
enter
cltd
jno
in
sub
fisttps
fcmovnbe
sub
lret
mov
and
pop
dec
adc
inc
push
sahf
mov
std
int3
xor
pop
dec
loopne
and
rclb
test
ret
dec
sub
dec
jmp
fadds
sbb
idivl
mov
sub
add
xchg
fsubrs
mov
mov
insb
ja
pop
lcall
repnz
xor
test
int
and
jp
pop
fcmovnb
loop
push
cmp
out
inc
push
cmp
inc
cmp
arpl
sti
das
or
cmp
daa
in
mov
xor
and
inc
sub
lods
sahf
cmpsb
fbld
push
xchg
mov
adc
inc
pop
mov
daa
jle
add
xor
icebp
adc
neg
fstpt
mov
lcall
fmuls
je
jp
cli
xlat
ja
xchg
and
movsl
pop
cmp
test
addr16
xor
mov
inc
xchg
fisttps
dec
movsl
inc
dec
pop
jg
mov
jns
fldcw
mov
or
sub
push
cmc
sbb
leave
jle
mov
inc
mov
mov
cs
stos
ja
iret
jne
add
mov
data16
fsubrl
push
sbb
add
add
inc
lret
mov
fisttps
lea
pushf
push
sub
and
sbb
loop
push
jge
xlat
ljmp
push
loop
sti
fldt
lods
flds
test
aam
and
loope
mov
or
sub
sar
dec
movsl
mov
mov
lods
add
int
sbb
add
cmp
dec
jmp
jo
rcl
or
and
aam
lcall
fwait
sahf
fs
orl
cmpl
incl
xor
ss
call
jae
mov
fucomi
out
push
cmp
test
jne
lret
movsb
hlt
dec
push
or
bound
push
cmpsl
or
sti
pop
xchg
xor
in
push
lock
cmp
roll
mov
movsl
iret
pop
and
test
push
cmp
add
and
xor
push
xchg
cmp
rclb
movsb
test
mov
or
xor
cmp
cmpsl
pop
cmp
stc
es
lahf
sarl
mov
enter
xlat
or
std
imul
aad
nop
lods
movsb
fisubrl
arpl
xor
lds
fsub
fcmovnu
mov
xchg
fiadds
sbbl
test
add
shrl
pushf
sub
xchg
xchg
xchg
outsb
sub
mov
shlb
adc
push
xchg
andb
cmp
frstor
in
xor
jl
fisttpll
push
out
stos
cmp
inc
jbe
std
and
dec
adc
sbb
stos
dec
vpaddb
pop
xor
aas
push
ja,pt
stc
std
cmp
movsl
popf
adc
jp
inc
mov
ret
add
mov
sbb
mov
xchg
repz
popf
pop
inc
es
sbb
fs
xchg
xor
fldl
ret
jae
dec
jl
push
arpl
out
mov
aaa
xlat
ret
movsb
dec
aaa
cmp
mov
movsb
lods
je
sbb
jge
sbb
and
dec
lods
imul
mov
imul
jbe
clc
pop
cmpsl
in
lds
fiaddl
jecxz
mov
lock
mov
xchg
or
dec
xchg
cmp
xchg
pusha
push
inc
cli
jle
in
xchg
mov
adc
std
in
hlt
pop
add
xor
push
jle
addps
int3
fstl
scas
dec
test
xchg
cmp
mov
xor
mov
jne
push
push
mov
lea
cmc
aad
mov
xchg
jbe
les
cmp
faddp
dec
push
roll
pushf
pop
dec
fcompl
sbb
jecxz
push
inc
daa
mov
add
jp
xor
xchg
push
push
dec
in
ljmp
xchg
adc
xor
fimull
nop
pop
mov
push
inc
and
push
and
lds
add
iret
out
out
dec
fs
pop
adc
hlt
add
bound
jne
loop
push
pop
pop
movsl
arpl
jle
jmp
imul
arpl
sbb
in
inc
dec
out
out
in
das
sbb
pusha
add
pop
les
mov
ret
mov
cmpb
test
mov
out
sbb
mov
mov
test
mov
into
xchg
sbb
mov
cmp
sub
pusha
mov
add
and
mov
or
inc
lods
loopne
aas
frstor
insb
out
stc
xor
in
leave
movsl
lock
cmp
loopne
and
outsl
or
cmpsb
inc
stos
ljmp
add
lods
popa
xchg
xchg
xchg
sbb
outsl
movsb
push
cmp
mov
cmp
adc
and
leave
xchg
xchg
cwtl
and
mov
fmull
fnsave
jle
lods
push
scas
out
jp
cmp
pop
cmp
sarl
and
adc
cmp
popa
subl
in
add
sub
xchg
jl
pusha
mov
jge
stos
xchg
or
imul
adc
out
xchg
insl
ficoml
xor
mov
inc
shll
fidivl
dec
enter
jns
dec
movsl
inc
adc
xchg
xchg
pop
dec
int3
aam
test
in
and
fsubl
pop
inc
ja
xchg
icebp
inc
inc
gs
xor
jb
pusha
push
fdivrs
stos
mov
lcall
decb
in
popa
pop
jns
cwtl
clc
insb
pusha
pushf
inc
sub
and
and
mov
decb
insl
hlt
ljmp
aas
and
les
mov
pushf
dec
imull
pop
lods
arpl
adc
inc
aam
in
aaa
pop
out
mov
faddp
and
push
sub
add
insb
fwait
daa
movsb
xchg
test
mov
fisttpll
adc
lea
push
bound
mov
adc
xchg
stos
jbe
je
sbb
test
add
pushf
dec
add
mov
adc
nop
sub
divb
jmp
inc
inc
lods
push
test
pop
cltd
cwtl
in
add
mov
lock
fimuls
xor
xchg
movsl
jmp
sbb
inc
jns
ljmp
cmp
or
enter
pusha
ljmp
and
fdivs
pushf
add
mull
or
jg
sbb
rol
es
cmp
sbb
xchg
xor
mov
std
add
sbb
inc
hlt
fsubl
cmp
test
mov
sub
inc
inc
pop
cmp
in
xlat
or
cmpb
out
addl
icebp
xor
bswap
andl
mov
adc
adc
insl
mov
jmp
shll
lahf
add
pop
fsubrs
aam
or
adc
test
adc
pop
movsb
pop
cmp
pop
xchg
lds
add
lret
adc
xchg
mov
lcall
into
lcall
scas
jns
add
xchg
mov
in
xorl
adc
mov
incl
shl
push
fwait
and
out
popf
lds
test
sbb
cltd
aas
stos
pop
popf
add
fcoml
sbb
add
mov
sti
ret
xchg
jno
xchg
lret
mov
xchg
sub
jb
and
pop
add
cmp
cmp
mov
inc
sar
sub
lea
repnz
xor
js
and
mov
jle
pop
mov
ds
cmp
negl
push
xchg
xchg
pushf
dec
jns
andl
lcall
inc
into
test
scas
call
mov
add
ljmp
mov
adc
aad
lods
fistpl
and
cld
jecxz
out
xchg
lahf
shrl
sub
push
jmp
push
cmp
ret
push
xchg
js
sub
xor
push
icebp
sti
mov
jns
pop
pop
fldcw
add
xor
in
adc
or
push
fwait
icebp
data16
cmp
jno
scas
inc
sub
aaa
rcrl
addr16
mov
outsl
xchg
fistpl
cmp
xor
outsb
adc
sbb
flds
frstor
pusha
mov
neg
pop
movsl
jne
push
or
cld
lcall
xor
mov
pop
and
insb
push
jp
test
jnp
push
adc
xchg
int
dec
dec
xchg
jno
rcl
jle
dec
cmp
dec
lahf
push
xor
mov
cmp
xor
dec
pushf
js
xchg
sub
cwtl
inc
and
scas
xor
push
lods
pop
mov
data16
loop
fidivs
test
mov
jbe
sub
jnp
icebp
mov
mov
push
cmp
push
out
fildl
test
push
dec
push
std
pop
inc
jns
fsubs
add
rcrb
sbb
xchg
jg
mov
xchg
jle
ficompl
adc
xchg
mov
add
sbb
mov
lcall
mov
dec
les
mov
ret
xchg
sub
mov
fldenv
jg
mov
jl
cmp
sahf
outsl
ss
dec
into
cmp
or
xchg
ret
insl
repz
ljmp
loopne
adc
or
push
leave
pop
and
je
ja
push
push
mov
shrb
cmp
aam
cmp
push
xor
jmp
in
cmc
xor
lcall
data16
fistpl
mov
dec
dec
push
sub
mov
test
dec
inc
xchg
push
or
xor
cmpsb
dec
pop
mov
jne
mov
lds
xor
aad
js
xor
push
mov
int
std
es
adc
loop
fistpl
jne
inc
mov
pop
adc
or
or
or
out
push
or
jmp
lock
jmp
sub
shlb
pcmpeqw
add
dec
ss
jp
outsb
cmp
imul
cmp
sbb
cs
add
mov
mov
adc
mov
jbe
sbb
cmp
mov
pusha
mov
push
sbb
xchg
mov
iret
sbb
pop
xchg
cmp
and
rcpps
mov
adc
pop
gs
test
adc
inc
push
lret
and
lret
jnp
pop
mov
pop
sbb
cld
sbb
iret
sub
dec
push
outsb
jle
xchg
jae
mov
arpl
out
pop
pop
xchg
cmp
popf
xor
and
insb
fmuls
stos
or
rorb
cld
jno
add
cmp
mov
int3
or
fdivr
or
jb
lret
in
pop
fadd
jle
in
adc
mov
imul
ret
mov
cmp
pop
jmp
mov
adc
lcall
fs
ja
or
mov
jle
xchg
in
sahf
cmp
jo
stos
xor
les
push
cmp
and
pop
cmp
ret
shl
popa
mov
lds
or
in
cmp
sbb
inc
jbe
mov
pop
aad
fadds
or
daa
xchg
das
mov
pop
xabort
mov
out
stos
push
fimuls
mov
cwtl
inc
movsl
inc
into
inc
subl
xchg
lret
or
sbb
dec
cld
pop
xchg
mov
jmp
in
hlt
jmp
xchg
hlt
dec
push
sbbl
or
cmp
xchg
cmpsl
jmp
add
push
les
xchg
pusha
lcall
mov
push
dec
push
outsl
xchg
hlt
inc
adc
stc
fwait
sub
fadd
jo
iret
shrb
jns
pop
loope
aam
jecxz
add
shlb
dec
stos
adc
dec
mov
loope
scas
or
mov
pop
cltd
inc
xchg
xcrypt-cbc
cmpsl
rcrl
mov
enter
xor
sub
mov
mov
xchg
push
hlt
add
clc
pop
mov
test
cwtl
movsb
mov
outsb
sahf
fwait
mov
data16
mov
adc
rorb
cmp
cld
sub
lea
cltd
in
jnp
cmpsl
movsb
outsb
adc
pop
scas
out
popa
sub
jmp
gs
idivb
lea
jmp
in
or
push
outsb
gs
addl
pushf
dec
inc
pop
imul
testl
out
mov
imul
imulb
mov
pop
cmp
xchg
fsubs
test
sbb
lahf
mov
pop
out
repz
hlt
sub
and
out
lret
dec
jbe
fucom
adc
mov
and
fadd
in
testb
mov
xchg
or
outsb
test
jp
sahf
adc
push
aas
lds
push
sbb
pop
das
mov
xchg
mov
mov
leave
xchg
neg
add
fcomps
xor
push
sbb
out
push
push
add
imul
loope
into
dec
daa
testl
shlb
out
daa
inc
sub
xchg
das
js
cld
xchg
in
xor
cmp
out
fst
jns
clc
cmp
addr16
add
mov
leave
mov
cmc
inc
mov
jae
clc
jo
fsubrp
pop
xor
movsl
inc
push
inc
jbe
rolb
inc
jecxz
xor
xor
pop
cmpsb
sarb
or
icebp
xchg
inc
cmp
pop
mov
imul
je
fcmove
in
adc
addr16
xchg
cmp
pop
jmp
imul
mov
push
subb
ja
imul
sbb
sub
stc
call
std
icebp
jbe
mov
or
mov
jns
mov
dec
sub
mov
jge
push
jmp
mov
mov
sbb
fistpl
jmp
sbb
xchg
jo
fwait
jmp
scas
push
jl
push
enter
adc
lds
jns
fs
out
jo
jge
push
push
sub
push
push
andb
xor
enter
repnz
lds
fmull
lahf
jg
cmp
rolb
popa
mov
inc
scas
arpl
lea
inc
fcmovnbe
sub
mov
sbb
movl
lea
das
cmpsb
shlb
dec
sbb
jge
xchg
adc
and
pop
or
cwtl
xor
enter
loope
cmc
pop
mov
mov
out
adc
aad
mov
outsl
xchg
enter
stos
inc
aas
loope
jle
mov
fisubrs
xchg
add
sub
dec
mov
in
loop
imul
push
push
push
add
pop
cli
xchg
fcompl
xor
sbb
add
fdivrl
sub
inc
and
mov
sarb
into
push
xchg
out
fmuls
mov
inc
out
xor
add
or
sub
jmp
xchg
in
jl
aad
mov
je
or
inc
xlat
std
cmpb
pushf
cmp
push
mov
std
dec
jl
add
sahf
jg
bound
cld
add
popf
testl
fisttpl
jbe
shll
leave
sahf
pop
lret
daa
sbb
jbe
incb
and
popa
xchg
add
dec
dec
loope
loop
dec
sahf
inc
dec
out
pusha
push
inc
pop
jo
sarl
fwait
adc
cmp
fisubs
adc
jbe
add
pop
jo
outsb
cli
mov
and
das
push
dec
aad
and
cmp
push
dec
out
pop
pop
ds
pop
xchg
fildl
popa
daa
inc
mov
dec
loopne
push
iret
or
add
mov
cmp
stos
dec
push
rcrl
test
xor
mov
pop
out
pop
inc
jg
ror
pop
aas
adc
adc
jg
lret
loop
scas
fstps
mov
mov
rcr
cld
ficomps
jbe
xor
mov
or
les
vcvtss2si
or
stos
aaa
test
mov
addr16
imul
inc
outsb
mov
pop
int3
sbb
paddw
in
jmp
sarb
push
or
pop
xor
or
fidivrl
lret
scas
cmp
int
jecxz
push
roll
in
add
push
cli
cmp
push
add
clc
movsl
dec
jns
and
test
sbb
xchg
pop
sbb
jg
pop
push
test
gs
mov
scas
out
mov
mov
int
mov
ljmp
adc
ss
push
pop
imul
filds
cs
xchg
stos
imul
xchg
sbb
icebp
stc
in
sub
test
sub
movsb
frstor
mov
call
and
adc
out
imul
fistps
push
fs
dec
mov
lea
jmp
or
jg
idivb
mov
pop
lea
movsl
stos
cmp
jecxz
pop
cmp
out
sub
enter
movsb
testb
xor
mov
outsb
or
nop
addb
arpl
sub
lock
dec
sub
lock
cmp
pop
add
push
mov
into
in
mov
add
xchg
aad
dec
cmp
insl
push
cmp
ret
mov
repnz
push
es
adc
sarb
adc
in
add
bound
arpl
mov
pop
dec
mov
aaa
xchg
fisubl
in
add
movsl
or
mov
outsl
gs
push
test
jnp
dec
jp
cmp
outsl
cmpsb
orb
popa
sub
int3
lahf
adc
inc
adc
loop
cli
jg
enter
popf
stos
add
or
sub
fistpl
stos
inc
out
mov
push
shlb
sub
popa
lods
and
cs
xchg
sub
mov
jns
xor
and
dec
rcrl
bound
jle
and
and
inc
btcl
push
inc
push
fstpt
mov
push
cmp
pop
xchg
add
pusha
or
and
xor
ds
mov
aas
push
cltd
pop
mov
mov
cwtl
fwait
pop
jae
xor
xchg
stc
mov
pushf
int
js
jns
idivl
insb
pop
mov
stc
mov
mov
cld
mov
sub
add
arpl
std
pop
lret
andl
es
ljmp
dec
std
cmp
adc
or
xchg
sahf
enter
dec
lods
call
scas
gs
cli
mov
sbb
sub
je
mov
adc
jo
mov
lock
outsb
test
pop
and
ja
jl
jp
jge
punpckhwd
cmp
mov
ret
push
mov
push
xchg
mov
cwtl
push
out
and
lret
add
les
adc
push
aas
adc
inc
push
xchg
das
fildl
inc
jae
psrld
inc
in
pop
adc
add
mov
or
outsl
cmpsl
pop
pop
call
mov
lcall
cmp
jo
pop
mov
cs
dec
outsl
addr16
xor
loopne
outsl
sub
aas
popa
les
cwtl
outsl
dec
sub
mov
outsb
into
stc
dec
dec
mov
pop
lock
mov
fs
adcb
mov
loop
sbb
cmp
aas
ffree
loopne
sbb
and
nop
enter
addr16
lret
in
pop
loope
int
call
sub
movsb
add
xor
cmp
hlt
mov
aad
ffree
lret
cltd
inc
adc
add
loopne
fcomi
push
lods
lea
cmp
xchg
lret
xchg
rcll
lcall
leave
mov
arpl
idivl
jo
js
imul
cmp
or
mov
icebp
fdiv
ljmp
push
xor
cli
inc
dec
push
and
cmp
mov
jno
mov
roll
aas
out
inc
pop
in
aam
xchg
popf
mov
sbb
sbb
jl
xlat
push
add
int
test
adc
sahf
les
and
les
imul
inc
outsb
sbb
cmp
aaa
pop
mov
inc
xchg
in
dec
lock
movsl
into
cwtl
mov
push
scas
lret
pop
loop
jae
repz
and
test
js
call
cmp
insb
xorl
popf
and
popf
xchg
repz
dec
jge
mov
call
arpl
test
mov
lea
and
push
fiadds
es
fnstcw
pop
outsb
icebp
fcoml
sbb
cmc
mov
mov
push
outsl
jnp
jnp
les
sbbb
mov
pop
xor
hlt
xor
outsl
fcomip
out
aad
pop
xchg
fisttps
dec
cmp
scas
ss
testb
add
or
pop
jmp
mov
jl
push
inc
push
bound
mov
das
setg
fiaddl
into
jb
pop
das
mov
jge
pusha
lret
cli
icebp
cmp
inc
test
call
lds
test
xor
dec
cmpsl
mov
jno
scas
jp
pop
add
out
mov
pop
out
adc
sub
dec
fidivrl
les
sub
inc
adcl
icebp
jmp
movsb
xor
popa
jbe
adc
lods
sub
ret
mov
stc
and
sbb
pop
mov
arpl
sar
push
inc
movsl
xchg
cmp
lods
or
xor
inc
sbb
pop
push
je
push
pushf
jecxz
pop
xchg
sbb
stos
hlt
add
mov
std
inc
pop
adc
stc
sbb
lret
ss
pop
push
jnp
insb
stos
into
inc
xchg
lcall
push
fs
mov
inc
jg
in
and
pop
dec
cli
push
xlat
xchg
or
cli
ror
test
mov
addr16
mov
ljmp
test
dec
ret
pushf
cli
push
cmp
gs
shrl
das
out
mov
mov
dec
scas
sbb
mov
insb
lret
mov
imul
nop
das
mov
out
imul
pop
pop
mov
add
sbb
pop
adc
push
jae
sub
jb
imul
in
ficompl
sub
mov
ljmp
mov
enter
adc
out
lahf
orl
fiadds
inc
fsubrs
push
adc
sub
push
cmp
scas
sub
xlat
je
daa
mov
pusha
jp
cmpsb
push
out
mov
popf
sub
das
adc
mov
iret
jnp
xchg
add
dec
les
nop
movsl
mov
stos
mov
sub
add
or
push
lods
lea
fst
cmp
stos
push
dec
or
out
sbb
add
mov
bnd
nop
jge
ret
mov
mov
xor
adc
pop
add
sbb
inc
mov
loope
mov
mov
xchg
clc
or
std
or
nop
push
adc
jo
fucom
pusha
outsb
je
movsl
or
jle
pop
jno
mov
dec
mull
xchg
loope
repnz
fnstcw
pop
xor
or
fldl
jne
call
call
sub
pop
add
sbb
push
push
add
push
mov
adc
xchg
rcrl
push
or
add
xor
out
out
and
adc
pop
push
pop
push
xchg
cmp
cwtl
xchg
test
push
mov
mov
ret
push
mov
mov
xlat
stos
add
mov
imul
into
push
cltd
inc
adc
cmp
fildll
bound
cmpsb
jecxz
fsts
xchg
and
or
sbb
dec
xchg
inc
mov
mov
adc
pop
push
or
inc
pop
pop
cwtl
mov
xchg
outsl
roll
popa
inc
and
sarl
stos
jge
sldt
pop
scas
dec
and
jae
in
dec
xor
into
lds
sub
pop
xchg
adc
test
xchg
pop
sbb
call
add
sub
imul
mov
inc
iret
inc
pop
dec
xchg
add
divl
sbb
adc
cmp
imul
xchg
xlat
and
ja
and
lea
mov
and
rol
push
xor
ret
pop
pop
repz
test
jns
mov
inc
add
jge
stc
ja
sub
inc
nop
icebp
ljmp
insb
decl
fmulp
adc
gs
fstps
jecxz
mov
test
enter
dec
jle
push
testb
mov
mov
adc
pusha
mov
jp
xchg
xor
neg
inc
or
jg
movsl
ds
stos
mov
arpl
jo
xor
lret
scas
loop
mov
and
jno
jnp
leave
sbb
dec
jg
jle
push
clc
push
xor
or
push
movsb
sahf
xor
mov
mov
and
leave
cmp
movsl
loopne
les
dec
dec
lret
push
gs
push
ret
mov
das
ud2
push
bound
jo
inc
testl
push
inc
push
xchg
pop
es
sahf
test
pop
adc
mov
mov
pop
scas
data16
cmp
cltd
test
sbb
out
std
mov
aad
insb
cltd
ret
or
int
je
and
insb
cmp
pop
push
fnsave
lahf
inc
test
and
leave
pop
aam
and
in
pop
jp
sub
add
mov
imul
xchg
push
and
pop
out
pop
das
or
xor
dec
jl
jmp
shll
mov
out
fwait
ss
stc
nop
push
dec
bound
inc
hlt
adc
cmpsl
enter
push
adc
imul
push
and
or
add
shlb
or
dec
daa
jbe
jg
mov
mov
mov
inc
sti
push
add
cmp
fidivl
mov
jg
in
sti
rcrb
sbb
shll
sbb
dec
sahf
mov
xor
lock
sub
out
inc
cltd
gs
cmp
seta
or
pop
cltd
dec
pop
add
xchg
jg
adc
cmp
or
icebp
sbb
in
data16
sub
filds
cmpsb
mov
das
mov
sbb
adc
das
sub
jecxz
movsl
xlat
sbb
push
roll
mov
jp
inc
or
sbb
popa
push
and
or
clc
xor
movsb
jle
mov
add
jnp
fdivs
add
sbb
jo
popf
das
jns
vmovaps
arpl
outsb
movb
xor
roll
insb
jo
repnz
or
out
imul
int
sub
ljmp
cmp
into
outsb
rolb
nop
adc
flds
add
mov
or
and
jnp
mov
jle
out
xchg
pop
rorl
push
shr
stc
pop
jbe
or
push
sbb
push
jge
mov
std
xor
mov
add
pop
les
xor
or
mov
adc
inc
arpl
mov
int
sbb
add
sub
out
out
xlat
outsb
popf
lea
addr16
loopne
fisubs
inc
lods
mull
ret
xchg
adc
daa
mov
sub
and
dec
mov
rcl
ss
add
lods
and
sub
or
sub
mov
pop
push
addr16
mov
stos
push
and
push
cmp
jp
loope
jecxz
fwait
and
push
cmp
in
out
xchg
mov
leavew
dec
dec
mov
xlat
ret
lret
mov
sahf
jecxz
xchg
je
notb
jle
test
pushl
xchg
jl
out
add
xchg
push
jnp
call
jno
int
fldl
jmp
jbe
add
mov
das
out
gs
xchg
sbb
push
xchg
test
mov
aad
lods
and
dec
mov
daa
fwait
pop
wbinvd
imul
out
aas
sub
pcmpeqd
or
xor
pop
addr16
sub
fwait
mov
sahf
cmpsl
in
sbb
adc
cmpl
ficompl
xchg
jo
xchg
and
aaa
jl
inc
pop
jae
or
pop
lahf
hlt
add
and
adc
fsts
leave
subb
hlt
pop
jmp
or
jbe
loopne
fiadds
repz
pop
push
inc
lea
fstl
ds
jmp
ljmp
insl
xor
pop
ret
ds
int3
sbb
cmp
jmp
imul
fdivl
pop
inc
push
or
lcall
pop
pop
es
movsb
setae
mov
xor
push
push
cmpsl
push
sbb
xchg
push
jns
cli
and
sbb
push
push
pop
ss
loope
cwtl
das
adc
imul
pop
sub
inc
xchg
mov
call
jbe
clc
add
inc
sub
xor
stos
mov
out
cmp
into
push
imul
sahf
jg
ja
cmp
in
push
xor
ds
dec
cmpb
jle
ss
test
lret
push
and
inc
pushf
js
xchg
sbb
in
push
ljmp
hlt
dec
push
aas
jns
pop
cwtl
in
mov
mov
loopne
arpl
adc
sbb
fldt
aaa
lahf
inc
popf
inc
inc
push
pop
sub
or
dec
rorb
sbb
mov
jmp
adc
jnp
cwtl
or
or
adc
call
fisubrl
lret
jns
out
aaa
mov
jbe
jle
mov
imul
mov
or
adc
cmp
xchg
outsb
aad
int
out
inc
add
mov
jae
aas
push
cmp
xor
mov
loope
loop
loope
into
sub
dec
das
shlb
xchg
enter
dec
push
stos
outsl
adc
test
data16
or
jns
xor
inc
gs
adc
or
roll
push
cmc
xor
lcall
or
rcrb
or
and
inc
cltd
jge
icebp
jno
sub
sti
fists
sub
cmp
adc
int
shlb
pusha
dec
push
xor
sbb
js
cltd
filds
pop
lods
xor
sbb
emms
notl
enter
test
push
jae
out
pop
mov
push
scas
cmp
add
test
sti
jb
jge
mov
incb
scas
aad
mov
xchg
lods
and
adc
fisubrl
add
push
inc
int3
xchg
adc
xchg
mov
adc
je
mov
addr16
push
gs
hlt
mov
push
mov
flds
rcrl
inc
fnstcw
sub
xlat
pop
stos
fistpl
bound
mov
or
fstl
insb
into
mov
sbb
ljmp
arpl
subl
in
sbb
repnz
and
aad
inc
and
jmp
andl
dec
bound
fwait
rcl
pop
mov
fwait
daa
add
je
sbb
adc
dec
jp
rcrl
dec
ret
in
test
mov
xor
inc
pop
push
jle
jbe
inc
test
mov
sti
adc
sbbl
dec
adc
lahf
mov
and
push
fwait
mov
rcrl
mov
jmp
cli
js
imul
xchg
and
adc
andl
leave
aad
cli
je
ljmp
inc
sbb
sub
cld
data16
addr16
pop
pop
js
pop
push
cli
cltd
scas
sub
mov
xchg
hlt
add
aas
mov
or
fmull
outsl
mull
gs
mov
icebp
xchg
dec
push
push
sbb
bnd
cld
clc
leave
into
jo
pop
push
inc
cmp
dec
ljmp
fcompl
push
jae
push
dec
lea
xchg
xchg
xchg
es
xchg
pop
jb
dec
mov
call
fnstenv
xchg
arpl
xchg
test
sub
mov
xchg
imul
fcos
sti
insl
sub
xchg
leave
xchg
leave
inc
or
adc
mov
iret
xchg
adcl
jmp
mov
jae
sub
out
cmp
or
in
repz
pushf
jge
and
jb
sbb
repz
outsl
into
mov
xchg
xchg
push
cltd
push
icebp
test
push
js
sub
xchg
xchg
inc
jle
mov
test
in
xchg
int3
out
sarb
sbb
loop
fsubrl
ret
sub
mov
stos
mov
push
frstor
pop
sub
xor
std
das
divb
js
dec
push
cmp
add
xchg
inc
pop
add
test
or
push
nop
mov
mov
fldenv
das
inc
popf
xor
inc
insl
je
xor
aas
push
or
mov
movsl
lahf
pop
xor
dec
sbb
fwait
and
mov
jns
jmp
and
adc
dec
push
pop
lock
mov
push
iret
fidivrl
mov
lret
stc
cmpsb
dec
outsl
leave
dec
xchg
push
jmp
gs
aam
iret
movsb
in
hlt
cmpsb
xchg
and
inc
ret
shrb
add
xor
test
inc
xor
pop
cmp
xchg
mov
iret
aam
mov
or
inc
inc
lds
inc
jl
sbb
dec
std
insb
mov
pop
std
or
sub
shlb
icebp
aas
clc
pop
lret
xor
shlb
push
inc
ret
dec
insb
add
out
packsswb
xchg
out
mov
mov
and
push
cld
icebp
xchg
bound
movsb
iret
xor
sahf
jno
xchg
xor
sbb
lock
sub
ret
push
xor
push
inc
push
sbb
imul
cmp
xor
ret
orl
mov
cmp
pop
lret
les
cld
aad
inc
xchg
les
push
jbe
mov
out
mov
je
test
xchg
cli
or
lock
in
inc
dec
pop
cmp
fwait
sbb
lock
add
or
push
dec
shll
jno
sbb
addb
push
xchg
fcoml
mov
xor
mov
stc
pop
mov
pop
insl
and
sbb
push
jmp
sub
jo
jbe
test
test
mov
shrb
mov
pop
jl
hlt
movups
addr16
ja
adc
das
lods
or
insb
or
adc
inc
lea
je
push
aaa
add
xchg
js
adc
sbbl
adc
push
sahf
xchg
cmpb
cmp
sub
lds
inc
aad
xor
les
je
movsb
sahf
sbb
out
xchg
jno
mul
sahf
jmp
gs
cs
push
stc
stc
mov
jl
in
bound
push
loopne
add
xchg
add
je
push
jge
jl
add
xchg
and
dec
ret
cmc
pusha
test
movsl
loope
pusha
stc
mov
push
mov
push
jns
cmc
inc
mov
insl
mov
add
add
jp
lock
outsl
lock
int3
out
imull
push
jg
inc
test
rorl
xrelease
mov
mov
cld
adc
imul
test
mov
lahf
lret
mov
std
ret
adc
jae
mov
std
iret
mov
mov
fwait
mov
fildll
push
xchg
mov
movsl
pushf
mov
xorl
stc
jl
js
adc
inc
stos
lret
out
popf
loope
inc
fisttpl
out
fdivs
movl
push
adc
xchg
xchg
daa
mov
jg
test
in
adc
cmc
ds
rcrb
xchg
sbb
jo
dec
nop
inc
subb
adc
sub
sub
inc
pop
xchg
ss
in
jge
push
jmp
icebp
jle
mul
or
loop
scas
arpl
fimull
ja
pop
mov
inc
mov
lahf
mov
pop
fwait
pusha
mov
in
je
push
inc
dec
inc
and
dec
mov
jg
lea
mov
scas
fwait
xor
mov
je
mov
sub
stc
rorl
rorb
jecxz
jbe
jbe
push
jp
ds
lcall
arpl
repnz
fdivl
jns
xor
sar
addb
cmp
popf
into
bound
mov
insb
shll
negb
mov
mov
leave
push
and
adc
pop
or
adc
lds
fwait
mov
inc
shll
cli
mov
adc
inc
arpl
cvtdq2ps
and
push
pop
jo
aas
call
cmp
mov
repz
mov
mov
inc
call
jge
ret
inc
mov
push
jne
shlb
sti
dec
lahf
shll
hlt
push
rorb
xor
cmp
push
dec
sbb
int
repnz
out
add
push
pop
jae
data16
in
loope
outsb
jne
and
inc
jg
mov
adc
aas
jb
popf
xchg
sbb
mov
insb
xchg
cmp
lea
jne
push
add
test
rcll
mov
orl
test
xchg
int
out
mov
xor
inc
pop
sbb
and
or
xor
add
cmp
sbbl
mov
movsl
and
sahf
int
jmp
mov
popa
xchg
js
sub
mov
mov
bound
or
les
push
int3
testb
mov
mov
adc
or
jge
mov
lret
call
mov
in
aaa
clc
loopne
not
pop
cmp
imul
das
adc
inc
cmp
and
cmp
adc
roll
or
mov
xchg
into
cwtl
mov
popf
aaa
loop
nop
mov
test
jmp
shlb
pushf
pop
dec
pop
mov
mov
sar
jo
sti
mov
add
js
fidivs
add
outsl
sub
and
cmpsl
adc
push
shl
sbb
fildll
and
xor
std
mov
nop
mov
xchg
pop
lahf
jmp
mov
sbb
mov
sbb
inc
rcr
fcmovnbe
ret
jno
bound
mov
testl
mov
pushf
icebp
pushf
mov
mov
jg
aaa
incb
and
jno
aad
flds
pop
aad
xlat
xchg
pop
pop
mov
pop
loope
mov
insb
mov
dec
jl
cli
push
mov
js
in
sahf
ss
inc
ret
add
inc
orb
in
sub
mov
sub
aam
jle
push
jl
pop
push
rorl
xor
mov
push
jmp
lods
mov
nop
sub
fs
cwtl
mov
test
sarw
shrl
mov
sub
stc
jle
iret
popa
mov
shr
fldcw
mov
dec
pop
mov
cmp
fdivr
and
movsl
xchg
pop
jp
mov
ljmp
jo
jle
orb
sub
mov
mov
popf
adc
out
mov
add
notb
sti
fsubl
mov
mov
add
sbb
out
and
add
mov
add
lods
and
sbb
adc
pop
sbb
inc
cmp
fdiv
es
jl
lahf
jae
xchg
sub
fnstsw
add
add
out
mov
and
aaa
jno
repz
xor
mov
cwtl
dec
and
insb
mov
xchg
push
dec
faddl
add
mov
notb
mov
arpl
addl
xor
add
add
addr16
xchg
imulb
hlt
es
mov
push
fwait
movsl
out
xchg
or
sti
popl
es
push
cmp
and
movups
stos
push
cmp
inc
jmp
adc
rclb
leave
dec
xchg
aad
aaa
jle
shll
lods
fdivr
jae
mov
ljmp
nop
xchg
mov
sub
daa
mov
test
sub
adc
mov
or
daa
sub
daa
insb
sbb
dec
xchg
aad
mov
std
dec
andl
dec
out
sbb
mov
int3
mov
stos
jns
mov
mov
rolb
movsl
ljmp
push
jmp
push
lea
lea
cmp
stos
les
mov
jns
jns
mov
lock
add
ds
hlt
xchg
mov
repnz
mov
jbe
pop
cmp
pop
cld
mulb
mov
and
outsb
test
test
hlt
xor
fcmovnu
pop
push
in
mov
movsl
lods
das
mov
pop
test
push
mov
adcl
sbb
data16
ja
cmp
bound
sahf
decl
sahf
mov
cmpb
sti
insb
and
cmp
jge
clc
mov
jg
xor
mov
je
pop
bound
ja
xchg
ljmp
or
mov
jmp
lret
lret
sbb
pop
cltd
andl
mov
les
push
or
lods
test
test
pusha
loope
sub
pop
ss
ds
xchg
mov
lcall
loopne
stos
cmpxchg
lret
test
jmp
or
out
out
lcall
ret
sub
cmp
xor
cmp
ficomps
test
mov
cltd
ret
cmp
xchg
fidivrl
xchg
es
arpl
jb
pop
scas
arpl
js
fsubrs
jmp
mov
cmp
dec
and
cmp
je
rorl
in
push
and
pop
jecxz
or
cli
add
into
pop
testl
mov
popf
push
pop
ficoms
mov
cld
dec
mov
pop
mov
dec
mov
sbb
test
ret
cmp
jge
ret
in
cmp
cmp
dec
push
inc
xchg
cmp
mov
or
adc
mov
push
out
repz
sub
push
pop
clc
xor
es
push
enter
dec
cmp
push
test
xlat
div
inc
xor
inc
stos
sub
cmp
xor
stc
ljmp
pop
andl
jmp
dec
fbld
mov
cmpsl
divps
jb
mov
mov
popf
imull
iret
ret
cwtl
movsb
lods
je
cmp
sub
rcrb
pop
inc
push
pop
mov
gs
leave
xchg
dec
bound
jns
pop
mov
pop
push
cmp
clc
dec
inc
stc
orl
sub
bound
sub
aad
in
fsts
test
push
pop
fwait
push
fs
popa
mov
js
call
lahf
mov
bound
rcrl
addl
cmc
out
sbb
push
inc
push
pop
les
imul
push
and
movsl
or
clc
clc
push
icebp
mov
mov
adc
pop
stos
jmp
rclb
jno
pop
stos
mov
imul
scas
pushf
int3
mov
mov
test
int3
enter
mov
pop
js
xchg
movsb
mov
or
lcall
xor
movsl
aaa
adc
add
mov
adc
jecxz
adc
faddl
mov
stc
and
rcll
add
adc
push
jno
repnz
popa
stc
xor
ret
xor
adc
rorl
cmp
xchg
mov
hlt
fidivrl
sbb
mov
sbb
xchg
add
inc
mov
loopne
add
sbb
fcoms
daa
scas
data16
aas
test
test
pop
pop
es
adc
xor
mov
mov
sbb
fcoms
dec
cwtl
popf
pushf
out
jmp
xor
enter
mov
pusha
scas
sbb
cli
insb
outsb
les
push
pop
pop
lahf
aaa
bound
jmp
sbb
dec
cmpsb
nop
adc
mov
jne
or
pop
dec
pop
and
subb
lock
in
cli
xchg
lods
mov
jg
jbe
sub
fisubl
test
test
add
pushf
out
jg
dec
jbe
push
xor
fmull
int
mov
in
ficompl
push
mov
das
mov
or
int
icebp
aam
pop
mov
test
lahf
push
sbbl
repz
into
fiaddl
push
mov
jle
sbb
sbb
movsb
inc
fdivs
lahf
mov
cs
pop
inc
into
sbbl
or
out
roll
icebp
xchg
mov
test
sub
cmp
ret
les
or
lds
insb
imul
sbb
dec
xor
inc
std
push
fnstsw
push
adc
subb
or
shrl
jp
sarl
es
jmp
aam
dec
mov
adc
xor
cltd
je
inc
xchg
sti
add
lea
xor
jl
inc
mov
mov
mov
mov
lcall
mov
shl
clc
pusha
adc
pop
cld
stc
mov
fldcw
xchg
xor
in
jg
repnz
arpl
daa
cld
xchg
xchg
popf
sbb
les
or
std
emms
mov
push
inc
je
push
icebp
xor
add
in
data16
dec
cmpsb
dec
in
jbe
in
sbb
sbb
aas
and
inc
lods
scas
inc
in
dec
and
add
xchg
insb
mov
sub
sbb
jbe
cmp
mov
mov
imul
xlat
ret
testb
xlat
lds
fdiv
cwtl
dec
je
insb
pop
push
shrl
mov
cwtl
mov
orb
fs
push
lea
mov
sub
dec
inc
mov
and
gs
lods
repnz
or
cmp
popa
lcall
sub
xlat
mov
imul
push
xchg
out
mov
add
sub
add
mov
stos
mov
in
dec
insl
push
xchg
push
xchg
add
dec
dec
cmc
out
rorb
pushf
jbe
jns
loopne
insb
mov
flds
sbb
sbbl
mov
aaa
std
xor
jp
arpl
int
push
inc
sub
mov
ja
inc
sub
pop
xorl
cmc
inc
sub
lods
nop
orb
jae
jo
mov
sbb
hlt
jno
bound
add
les
mov
mov
popf
xor
in
imul
inc
das
fbstp
gs
pop
cli
xchg
cmovnp
xor
out
icebp
mov
daa
sarb
sbb
stc
scas
jmp
mov
cltd
das
pushf
cmp
and
ss
ret
adc
lahf
mov
cmp
cmpsl
adc
ja
dec
add
cmc
sbb
and
pop
push
cmp
inc
ljmp
test
loope
bound
add
push
mov
sbb
cmp
fdivs
sbb
xor
fisttpl
pop
jmp
mov
jae
dec
pusha
push
movsb
repnz
xchg
xchg
mull
in
inc
xchg
out
sbb
jns
push
or
xor
out
enter
adc
xor
jbe
pop
sub
pop
icebp
mov
xchg
rolb
dec
shl
stc
pop
jns
insl
or
test
dec
fimuls
cli
cmp
mov
ficomps
fldt
pop
jecxz
mov
hlt
aad
pop
nop
nop
jge
or
mov
fwait
sbb
cmp
out
push
out
mov
pop
mov
dec
adc
mov
mov
cld
movsb
popa
lods
ret
loope
and
pop
stos
aad
mov
leave
and
mull
jne
inc
cmpb
jnp
push
fistps
xchg
and
and
xor
das
ds
or
sahf
sub
addps
jle
pop
cmp
mov
add
cmp
stos
xchg
jg
ds
push
jl
clc
or
fs
in
js
jno
insl
or
aas
mov
lahf
clc
sbb
mov
clc
sub
cmpsl
jmp
scas
sub
loope
dec
mov
fs
pop
cltd
shr
mov
out
or
lock
addr16
inc
cmc
leave
dec
push
outsl
movsb
loope
or
cmp
ret
xor
inc
inc
pop
fsts
insl
push
cmpsl
clc
add
enter
rcll
orl
push
mov
jg
pop
mov
cld
hlt
arpl
jae
aaa
cmp
sub
movsbl
xlat
testb
insb
les
in
divb
in
nop
xchg
dec
sbb
jmp
fucomi
nop
sub
in
mov
sub
pop
xchg
dec
je
add
push
in
pminsw
inc
loop
ds
push
lahf
outsb
and
out
mov
inc
hlt
or
adc
xorl
jmp
loope
inc
jne
ss
mov
mov
outsb
mov
sub
cmc
mov
add
jb
mov
jp
iret
fistpl
push
filds
cld
nop
sub
adc
popf
inc
adc
push
fxch
and
in
rcrb
dec
pop
jnp
repz
push
insl
fisubl
cmp
popa
gs
xor
xor
sub
adc
cmp
mov
push
mov
sbb
dec
push
lea
jno
push
je
and
dec
fsubrp
in
sbb
adc
sahf
das
adc
out
xchg
cmp
into
mov
push
cmp
insl
pop
int
addr16
sbb
iret
imul
jne
dec
jb
sub
hlt
push
subb
xlat
cmp
mov
push
subb
cmp
and
dec
int
lock
jne
mov
lock
vzeroupper
sub
jg
cmc
adc
roll
out
add
cmp
fisttpl
out
push
sbb
into
lock
push
movsl
inc
cld
xchg
sub
fwait
bound
or
mov
jecxz
pop
int3
cld
iret
or
push
and
and
lcall
adc
mov
in
les
cmp
test
int3
gs
adc
jge
push
or
aaa
outsb
call
jmp
cmc
fwait
mov
xchg
xor
adc
insb
stos
sbb
aas
push
js
xor
fisttpll
bound
push
xor
fnstsw
xchg
cwtl
pop
xchg
adc
ret
pop
gs
mov
push
jb
sub
fidivl
push
out
sub
out
mov
mov
sub
xchg
sbb
or
pop
push
xor
lcall
inc
and
in
inc
shr
sbb
xchg
movsl
cmpsl
test
dec
sbb
popa
sub
inc
push
sahf
icebp
xor
aam
xchg
adc
cmp
dec
lahf
xor
xchg
repnz
fnstcw
cmp
inc
lods
std
or
dec
jnp
and
outsl
enter
dec
inc
es
cmpsb
adc
push
and
and
insb
dec
insl
stos
out
outsl
push
mov
cmc
cmp
ret
xor
adc
incb
or
inc
xchg
pusha
popa
imul
and
out
repnz
push
loopne
cmp
cmp
pop
add
pop
pop
clc
xor
test
dec
xchg
cmp
data16
out
or
push
push
push
cmp
mov
imul
ljmp
test
addl
roll
xor
das
inc
sub
mov
movsb
movsb
sbb
lock
and
sub
mov
and
scas
sbb
or
notb
mov
or
pop
jns
push
addr16
add
inc
sbb
lcall
xor
mov
cmpsl
add
jl
or
jne
mov
mov
push
xchg
imul
mov
inc
adc
daa
adc
divb
add
sarb
add
fwait
cmp
mov
push
ror
dec
mov
add
push
loope
lahf
jmp
outsb
out
sbb
addr16
ret
xor
mov
pop
push
test
cld
pusha
jecxz
dec
mov
adc
cmp
cmpsl
fwait
push
shr
sbbl
into
add
cmp
sbb
sbb
inc
push
inc
and
gs
insb
das
dec
cmp
sub
cs
hlt
jmp
in
and
fnstenv
shl
stos
mov
lock
mov
in
mov
inc
pop
inc
shrb
add
imul
inc
jmp
or
pop
daa
int
cmp
scas
lahf
and
mov
pop
pop
pop
cmpsb
cmc
xchg
imul
mov
arpl
data16
mov
add
jg
jno
lret
sub
inc
adcl
pusha
test
pop
in
or
sub
mov
dec
int
popf
daa
repz
xchg
ret
shrl
add
sahf
jmp
push
pop
test
xchg
add
ret
enter
cli
mov
push
mov
sbb
lret
sbb
mov
xchg
inc
jnp
ret
nop
pop
inc
jg
jae
or
inc
divl
ret
pop
or
cmp
jecxz
and
lret
and
daa
jg
sbb
outsb
mov
scas
mov
nop
lea
jb
ljmp
pop
dec
test
scas
sub
pop
mov
and
cs
out
cmp
xor
mov
dec
fisttpll
sahf
popa
mov
sub
fs
push
dec
jae
pop
add
outsl
test
xchg
inc
lcall
ret
xchg
imulb
clc
cli
shrl
jo
cmpsl
fwait
lret
js
arpl
movsl
lret
hlt
outsl
aaa
sbb
stos
clc
pop
pop
xchg
hlt
push
sbb
and
xor
xor
stos
aad
pop
xor
mov
cmp
stos
int
and
cltd
xor
dec
mov
mov
cmp
loopne
ljmp
stos
mov
fsubrl
leave
push
mov
lea
adc
inc
mov
pop
jle
lods
shrl
mov
shrl
cmp
lea
movsb
fwait
push
mov
ret
xlat
and
pop
in
jp
psubq
dec
xlat
dec
mov
popf
sbb
mov
adc
pusha
std
ds
sub
inc
inc
cmpsl
cmc
test
es
pop
mov
pushf
jp
ss
mov
outsl
pop
stos
mov
sub
ret
loopne
xor
mov
fucom
pop
es
fsubrp
aas
push
sti
dec
pop
shll
mov
daa
pop
push
lret
xchg
push
std
insb
and
insb
es
test
jae
pop
jp
dec
mov
lea
pop
or
or
mov
adc
loopne
xchg
insb
clc
imul
pop
pop
push
cmp
mov
dec
repnz
sbb
out
and
cmpsb
sbb
adc
add
or
or
inc
jb
mov
mov
lods
or
mov
cmp
mov
out
imul
std
xchg
mov
arpl
add
fstpl
inc
filds
sub
cmpl
test
mov
cmp
or
dec
icebp
ljmp
push
sub
into
and
push
jmp
dec
pop
movsl
int
add
ljmp
nop
out
mov
das
pop
sub
das
lcall
ss
ret
inc
mov
xor
dec
sbb
icebp
cmp
push
jle
lea
pushf
cli
push
ret
inc
pop
scas
mov
fnop
mov
mov
popf
outsb
mov
xchg
mov
and
jbe
pop
inc
call
inc
ror
pop
mov
hlt
int
adc
xor
push
lods
or
rol
xchg
jmp
shrl
imul
cmpsl
loopne
stos
daa
popa
sarb
mov
pop
pop
out
les
adc
cld
xorl
jb
loopne
insl
jp
loop
pop
fwait
pusha
dec
xchg
clc
aad
and
jo,pn
int3
adcl
jo
mov
fsubrl
test
jo
fbld
stos
pushf
jmp
push
mov
inc
push
mov
jg
sahf
icebp
out
lret
cmpsl
arpl
cmp
jno
and
out
sbb
adc
out
lahf
fs
or
rclb
and
push
int
outsb
jo
icebp
cmp
or
ja
in
pop
cld
sub
inc
data16
sbb
std
repnz
jle
push
inc
inc
movsb
push
lret
shl
iret
dec
mov
and
sbb
bound
sbb
pop
lea
dec
loop
lret
mov
incl
orps
and
test
clc
pop
hlt
aas
lahf
jae
insb
scas
fs
fbstp
mov
mov
repz
xchg
add
add
popf
in
adc
mov
andb
lcall
dec
cmpsb
mov
adc
call
cltd
mov
push
adc
rclb
jns
or
jg
mov
ror
sbb
or
outsb
dec
mov
nop
mov
int3
inc
dec
sub
ret
cmpsl
ficoms
enter
dec
es
dec
and
and
dec
sub
in
sbb
jp
jae
push
jb
cmp
int3
jge
daa
subl
sub
cmp
jle
incb
repnz
movsb
pop
sbb
dec
push
out
imul
push
dec
cmp
mov
push
sub
adcl
sub
dec
cmp
push
jne
shl
lcall
jnp
dec
push
pop
xchg
push
mov
add
jns
popa
add
pop
aam
mov
sbb
push
mov
sbb
xchg
das
fldenv
xchg
enter
pxor
inc
std
inc
lcall
mov
imul
add
inc
inc
or
adc
sbbl
aaa
pop
jecxz
lods
inc
mov
dec
sar
jle
iret
xchg
ds
mov
xchg
add
xchg
loopne
loope
xchg
mov
push
lret
into
dec
roll
and
push
jmp
sbb
jbe
in
inc
lds
dec
fsubrl
das
mov
mov
pop
pop
mov
and
push
imul
lods
lahf
bound
xchg
jns
mov
andb
hlt
sti
push
or
sub
xlat
shrb
int3
dec
fwait
insb
inc
shlb
gs
or
shlb
js
sbb
cli
in
xchg
notb
int3
fmul
mov
negl
jecxz
lret
loopne
adc
bound
adc
xor
sbbb
cmpsl
imul
dec
mov
and
push
or
or
mov
xchg
and
sub
inc
mov
pusha
mov
ljmp
xor
or
or
cltd
jbe
test
mov
or
lea
repz
lock
les
fisttpl
aad
xchg
jge
std
fistpll
adc
scas
mov
cmp
fnstenv
lret
es
sbb
sbb
sbb
ficompl
loopne
js
ja
cmpl
pop
into
mov
repnz
nop
jae
inc
cwtl
sbb
or
or
xor
add
aas
cmp
dec
xchg
adc
jecxz
pop
pop
or
nop
pop
daa
cmp
add
orb
int3
fldl
mov
fs
cwtl
push
mov
cmp
push
push
and
aaa
lods
jmp
loopne
arpl
pop
fisubrs
mov
or
inc
xchg
sub
sarb
or
add
mov
inc
cs
add
in
ds
jmp
mov
mov
pop
sbb
lahf
outsl
flds
not
sub
rolb
mov
add
mov
inc
jp
icebp
mov
sahf
iret
shrl
bnd
adc
jb
cmpsb
sub
pop
xor
inc
push
sahf
je
mov
in
aam
mov
cmp
sti
xchg
cwtl
lock
push
nop
lock
in
and
mov
out
cmp
xor
bound
xchg
les
aam
dec
out
sahf
mov
mov
out
stos
and
inc
push
rcll
movsl
pop
jp
out
sbb
adc
dec
xchg
mov
mov
mov
or
shll
lcall
pushf
xchg
jg
int3
sub
imul
adc
mov
inc
or
idivb
push
push
ljmp
aaa
gs
sarl
mov
sbb
incb
in
std
mov
adc
pushf
mov
mov
inc
nop
int3
push
test
repz
mov
sub
pop
mov
jb
xchg
loop
and
insb
loopne
or
out
popf
aaa
push
mov
and
aaa
divb
frstor
cmp
insb
inc
js
or
xor
int
mov
xchg
jno
popf
mov
lds
push
sti
mov
stc
icebp
ret
andl
or
test
inc
pop
data16
sub
rcr
inc
hlt
xchg
popf
add
or
jb
pop
out
pop
xor
jae
push
cmp
push
xlat
movsl
loop
and
imul
hlt
and
lcall
adc
pushf
push
call
inc
test
pop
stos
pop
xchg
or
adc
out
lcall
sbb
movd
stc
jp
cmpsb
aaa
subb
incl
cmp
nop
int3
sbb
jne
mov
sbb
inc
fstpt
push
fisubrl
xor
mov
sbb
or
in
jo
push
stos
jo
cld
xchg
stos
jne
andl
dec
pushf
jmp
and
or
imul
and
test
frstor
ret
and
add
movsb
jno
clc
adc
ss
dec
cmp
sub
dec
inc
jb
inc
sete
inc
mov
fwait
pusha
lods
clc
fld1
int3
imul
loope
in
les
mov
sbb
push
sub
ljmp
insl
out
lret
mov
sbb
add
mov
cmpsb
sbb
xor
mov
outsl
xor
and
rcrb
inc
push
cmp
aam
cmc
mov
pop
icebp
arpl
mov
incl
mov
mov
lock
cltd
sti
pop
jle
cmp
int
fsubs
lcall
std
xlat
mov
or
sub
or
xchg
stos
data16
mov
push
mov
push
mov
jnp
and
mov
test
and
or
ficoms
out
adc
jb
inc
aas
pop
inc
jne
call
xchg
iret
jne
imul
lds
pop
xchg
lea
fwait
dec
pusha
mov
call
leave
std
adc
test
ret
mov
sbb
in
push
sbbl
clc
loope
arpl
adc
xchg
gs
xor
push
arpl
or
dec
mov
sub
dec
xchg
pop
mov
test
ljmp
dec
xchg
mov
push
fs
adc
adc
mov
xor
popa
stos
stos
jnp
sbb
add
mov
pop
or
pop
pushf
inc
test
dec
in
pop
addl
int
mov
cs
cwtl
sub
or
xor
xor
stos
adc
jle
add
xor
js
xorl
adc
sub
adc
cmp
enter
push
jge
shlb
aam
aaa
push
decl
in
push
rcll
ret
daa
mov
sbb
fistpl
call
in
sarb
sbb
ja
cli
xor
aas
lock
sub
scas
out
xor
dec
insl
into
push
and
mov
push
jnp
adc
dec
mov
jbe
flds
xlat
xchg
fistpll
cmp
in
sahf
pushf
lret
pop
mov
out
js
popa
cmp
hlt
adc
int
xchg
shl
xchg
inc
dec
imul
and
lds
stos
fldenv
mov
repnz
std
hlt
push
popf
aas
nop
in
fldenv
inc
mov
and
or
mov
xchg
scas
jno
repnz
sbb
add
sub
inc
mov
stos
sub
mov
inc
in
xor
mov
cmpsb
insb
iret
mov
sub
push
ds
mov
mov
bound
mov
movsb
mov
lods
cmp
sub
ret
shll
push
lds
add
push
mov
inc
test
fdiv
adc
pusha
shrb
daa
outsl
jp
jns
pop
das
mov
xor
sub
pusha
and
add
lcall
dec
push
inc
loopne
inc
stos
test
jae
mov
push
push
xor
pop
push
lret
mov
ljmp
jle
mov
nop
push
test
xchg
mov
pop
mov
mov
xor
into
dec
hlt
add
jl
cmpsl
push
inc
or
sub
jp
jl
cli
rcrb
jg
jmp
pop
movsb
or
out
mov
cmp
ljmp
loope
testb
cs
dec
xchg
inc
mov
roll
and
add
pop
fsts
out
inc
les
aam
or
cmpsl
jae
fsubrl
adc
push
adc
ret
mov
mov
out
dec
and
jg
xor
mov
cmc
in
and
sub
fidivl
rdtsc
sub
lods
arpl
aam
sahf
pop
lock
pop
leave
push
push
xchg
or
fcmovbe
add
sahf
nop
sbb
jmp
pop
mov
cmp
jmp
xchg
mov
xor
push
inc
or
dec
fists
cmc
sbb
push
xchg
repz
push
inc
push
in
mov
jnp
movsl
fnstsw
pop
out
or
dec
gs
mov
lods
aam
and
sub
rcr
cltd
cmpsl
inc
iret
jge
stos
and
loop
fdiv
add
arpl
add
xchg
mov
adc
push
enter
xchg
mov
push
pop
jmp
or
repz
jne
sub
bnd
jno
xchg
cmp
mov
adc
mov
lar
jmp
sub
in
lret
push
cs
dec
mov
sti
icebp
test
dec
xor
add
stos
icebp
out
ja
out
cmc
xor
sbb
je
inc
insb
xchg
xor
inc
pop
pop
dec
outsb
outsb
repz
sahf
fidivrs
ds
dec
cmp
and
shr
fsubl
je
add
into
in
fwait
cwtl
test
ret
sbb
and
cmp
pop
add
sbb
mov
int3
jns
and
clc
mov
pop
dec
fsubrp
lret
mov
arpl
sbb
jb
pop
xchg
sub
inc
fdivl
push
cmc
dec
repz
lea
adc
daa
in
lds
fidivl
shrb
es
xchg
jo
xchg
jne
sub
outsl
and
mov
adc
jg
xchg
cli
xor
and
mov
inc
ret
out
call
mov
jp
xchg
dec
lcall
js
mov
xor
xchg
push
xor
push
mov
sub
jae
mov
lcall
cmp
pop
fwait
push
or
jno
add
xor
cmp
xchg
ja
jne
inc
inc
lret
or
test
sbb
mov
xor
ret
loop
and
lods
out
les
dec
rorl
push
aam
cwtl
fimull
int3
imul
in
ja
test
fadds
movsb
ret
out
stos
xor
xchg
scas
mov
ret
inc
inc
inc
push
outsl
add
xor
mov
in
mov
dec
add
inc
ljmp
lcall
in
push
jne
out
lock
dec
mov
lret
mov
xchg
cmp
jno
into
xchg
xchg
sub
dec
aaa
sub
pop
and
cltd
movsl
pop
xchg
ffree
pop
loope
scas
xchg
push
insl
mov
call
repz
dec
scas
pop
sub
lods
mov
into
mov
jae
dec
shrl
cmpsl
pop
jg
add
pop
bound
pop
outsl
and
cmp
mov
aad
sub
push
popf
mov
or
sbb
sub
js
scas
addr16
or
pop
cmp
xchg
lcall
ret
pop
xchg
outsb
into
push
jge
aad
je
ret
lcall
stc
xchg
add
pop
insl
add
pop
cmp
sarl
dec
pop
dec
sub
mov
mov
xchg
inc
in
arpl
std
sti
fisttpll
jne
movsl
mov
test
pop
pop
clc
lods
cmp
xor
mov
and
push
dec
imul
cwtl
hlt
ret
cmp
jp
or
andl
sub
sbb
xchg
shlb
pop
rolb
sub
jo
in
push
xchg
mov
pushf
shrb
pop
mov
dec
pusha
cmp
add
xor
scas
inc
mov
in
cmpsl
fwait
dec
dec
lds
push
roll
push
iret
sub
scas
movsl
stc
push
adc
cmp
and
dec
andb
xor
inc
test
fsubs
sbb
jae
pop
jecxz
shrb
dec
jg
xchg
in
mov
aam
mov
inc
pop
aad
dec
je
xchg
mov
fstpl
adc
mov
mov
cld
fiadds
pop
repz
ficoms
test
cmpsl
sar
sub
xor
fwait
cmpsl
dec
cmp
inc
jg
mov
sbb
pop
sbb
push
sbb
mull
rcrl
adc
test
mov
hlt
lods
ljmp
fbstp
je
data16
sbb
aad
leave
xorl
je
call
xor
cld
imul
mov
sbbb
mov
jecxz
or
or
xlat
call
inc
call
mov
jmp
cmp
mov
bound
mov
cmc
xchg
inc
adc
sub
and
mov
repz
bound
fisubl
jle
and
add
ret
xchg
dec
das
int3
cmp
adc
stc
sbb
push
mov
scas
and
clc
insb
aaa
cmpsl
inc
mov
mov
jp
shl
push
dec
jg
pop
pop
sbb
jne
mov
lock
mov
stc
icebp
xchg
mov
pop
push
insb
pop
mov
scas
pop
cmp
inc
out
sahf
cwtl
and
mov
aaa
dec
jge
pop
loopne
dec
les
or
cltd
les
add
je
es
xor
jns
xchg
in
loop
lds
xor
sbb
and
jecxz
push
loop
leave
xor
xchg
mov
enter
or
adc
mov
fcomip
xchg
mov
pushf
into
dec
xor
shll
cwtl
or
lret
mov
ret
cmp
loope
mov
mov
icebp
popl
sub
outsl
in
mov
push
dec
pop
jo
test
mov
into
leave
mov
push
lock
call
out
push
stos
mov
inc
pop
pop
mov
mov
ljmp
pop
rcl
cmp
shlb
add
lret
aam
sub
xrelease
cmp
es
fwait
xlat
mov
cmovbe
mov
adc
sarl
jge
sahf
popf
iret
ss
xchg
jo
punpckhwd
and
fstl
movsl
xchg
outsb
inc
pushf
inc
leave
pushf
sub
jno
cmp
ja
test
mov
mov
scas
and
fbstp
pop
hlt
sti
into
sbb
mov
xorb
imul
and
inc
mov
dec
or
andl
je
cmp
mov
arpl
mov
push
sbb
pop
cmp
ja
xor
inc
push
call
sahf
call
inc
repz
std
dec
dec
cmp
mov
xchg
sub
inc
push
icebp
icebp
adcb
insl
dec
or
test
dec
clc
mov
outsb
mov
ss
mulb
jge
push
hlt
jb
dec
push
arpl
mov
jb
push
xor
mov
ljmp
es
call
gs
mov
popa
xchg
mov
inc
mov
shl
mov
aaa
mov
inc
cmpsl
sub
scas
mov
lds
jecxz
jne
daa
adc
dec
mov
mov
arpl
insl
xor
rcll
in
xchg
sub
sub
aaa
xor
jecxz
pop
xor
fisubl
jno
and
adc
ja
in
inc
js
mov
in
lock
push
xlat
out
or
mov
into
adc
dec
out
ret
cli
nop
mov
sub
xor
mov
dec
sbb
fistpl
sub
in
mov
pusha
ds
inc
adc
mov
movsl
mov
xor
pop
lcall
sti
repz
push
cld
ficompl
or
in
sbb
cmpb
fdivs
jmp
push
adc
dec
jl
dec
out
xor
fstpl
sbb
push
mov
cmp
jg
movsl
bound
jl
popa
jo
rorl
stos
pop
sbb
rclb
inc
sub
or
scas
mov
das
pop
cmp
jmp
jbe
push
sbb
sbb
dec
mov
out
dec
popa
mov
xchg
pusha
add
mov
cmp
dec
scas
mov
in
addb
jb
ds
cmp
xchg
jo
xorb
in
notl
jnp
clc
andl
adc
jge
popa
mov
and
ficoms
mov
push
push
repnz
xchg
mov
mov
addr16
jae
push
or
lret
inc
in
movsl
js
dec
addr16
fldcw
pop
sahf
and
lods
pop
push
adc
dec
insb
lods
out
pop
mov
out
aam
jb
imul
cltd
shrb
popf
mov
rorb
sahf
mov
cmp
or
out
xchg
in
leave
in
xchg
add
mov
mov
jp
adc
dec
sbb
push
mov
cmc
test
mov
popf
mov
inc
push
mov
pushl
xor
ficoml
push
nop
mov
out
js
xchg
pop
pop
out
xor
ds
jmp
add
jns
sub
daa
mov
addl
pop
add
xor
adc
orl
test
sub
inc
clc
xlat
jecxz
sbb
inc
mov
fdivl
dec
outsb
adc
mov
push
inc
mov
jb
iret
addr16
popa
insl
cld
pop
adc
pop
push
or
sbb
mov
sub
stos
push
stc
xchg
into
add
xor
data16
out
in
mov
enter
push
shl
stos
cltd
int
add
imul
pop
mov
push
lods
mov
sub
leave
dec
push
outsl
fimull
lret
dec
pushf
lea
movsb
jae
add
and
in
fstpt
test
aad
jge
fistpll
scas
loop
jle
pop
mov
and
lcall
fnsave
or
add
adc
adc
mov
sbb
hlt
pop
popf
pop
je
clc
hlt
aas
mov
mov
idivb
out
rcrl
jp
aam
imulb
sarb
push
jp
vfrczpd
mov
in
push
push
sub
in
cmp
sbb
push
sub
mov
push
jecxz
out
jecxz
ljmp
adc
subb
sub
push
int
outsl
mov
in
sub
arpl
popf
push
ret
int
push
xlat
mov
rcr
movsl
dec
mov
jecxz
lcall
sbb
insl
xor
push
int
gs
push
call
dec
and
push
out
cwtl
cmp
mov
adc
jl
inc
mov
dec
add
sbb
xchg
enter
inc
push
cmp
repz
jmp
inc
pop
and
or
or
jmp
cmc
sbb
repnz
jmp
pop
sti
repnz
xor
out
and
mov
pop
and
rolb
sub
rep
outsb
xchg
jae
mov
popaw
ss
mov
mov
cld
arpl
xor
mov
or
jne
jp
cmp
pusha
mov
push
and
repz
mov
daa
inc
cmp
jle
outsb
ds
pop
xor
lahf
dec
mov
and
sub
and
dec
jb
mov
out
pop
data16
test
rcr
mov
popf
adc
jmp
mov
push
imul
sarl
push
sub
xchg
mov
aas
test
mov
push
insb
loopne
or
mov
lds
sarl
push
loope
push
jmp
mov
push
cmp
testb
clc
in
xor
jp
mov
xchg
inc
sub
dec
and
sub
jp
pusha
inc
movsl
cld
cmpsb
pop
jno
mov
aad
mov
mov
subb
daa
outsl
xchg
cmpb
or
mov
and
mov
push
into
popa
pop
into
xchg
das
loop
pop
add
aad
inc
leave
ja
rol
scas
dec
xchg
mov
addr16
xor
sti
push
inc
mov
fdivrl
sub
lret
mov
mov
or
mov
pop
imul
outsl
aaa
adc
in
out
fsubs
add
mov
dec
in
daa
adc
imul
sahf
xchg
cwtl
adc
in
shl
int
in
jno
jmp
ret
sbb
mov
ja
dec
mov
add
sarb
jle
mov
sub
sahf
add
pop
xor
xchg
and
in
rclb
xor
rcr
stos
bound
and
sbb
fisttpl
cli
jo
jno
loopne
shrl
negb
sbb
jmp
cmp
iret
lods
mov
stos
roll
call
fldl
inc
and
jl
insb
outsb
push
or
mov
out
gs
mov
repnz
xchg
loop
imul
add
xor
ret
test
scas
les
lock
xor
test
sub
cmp
ljmp
push
adc
mov
insb
clc
inc
outsb
movsb
add
sbb
jb
shrl
push
test
mov
dec
adc
pop
enter
cli
imul
add
and
ljmp
add
in
fdivl
jge
sub
push
iret
cmp
push
movsb
cltd
fcmovbe
push
lret
inc
andl
xchg
xchg
int
addr16
adc
pop
mov
add
pusha
cmp
jg
pusha
inc
mov
lret
push
mov
xchg
add
faddl
fisubrs
mov
add
and
and
sbb
cltd
xor
xchg
movsl
adc
adc
jle
inc
pop
loop
mov
mov
aam
mov
inc
push
adc
add
ss
or
ret
cwtl
ficompl
ret
adc
pushf
or
add
jecxz
push
mov
sub
push
stos
pop
and
mov
adc
loopne
shll
pusha
shlb
idivl
and
loopne
inc
lods
ljmp
mov
in
fstl
sbb
lods
jno
xor
adc
inc
push
subl
jne
adc
push
sub
pop
loop
in
lock
cmp
sbb
icebp
pop
repz
cwtl
out
cmp
pop
lock
mov
jne
mov
xchg
daa
shlb
std
inc
push
pop
xlat
in
xchg
clc
imul
push
sbbl
sbb
adc
pop
cmp
dec
pop
sub
jmp
shlb
jge
sub
fwait
xchg
out
or
fstp
aad
pop
dec
push
jmp
sbb
test
fistpl
ja
pause
fstl
mov
xchg
repz
out
mov
idivl
imul
cmp
outsl
xchg
xlat
movsb
inc
adc
xchg
movsb
iret
mov
xor
imul
sarb
mov
shl
test
and
cmp
xchg
lahf
iret
cmp
or
pop
lcall
sbb
jecxz
mov
and
sbb
mov
sbb
popa
imul
cs
outsb
add
inc
mov
and
mov
inc
insl
test
popa
arpl
adc
pop
pop
mov
cmpsb
orl
jno
mov
adc
pusha
rol
or
scas
mov
mov
movsb
pop
sub
test
dec
leave
dec
dec
xchg
shrb
popa
call
mov
sbb
dec
push
jge
pop
outsl
sub
nop
and
setae
mov
in
ljmp
lock
adc
mov
test
xchg
push
push
jnp
lock
push
jno
mov
flds
mov
in
mov
mov
dec
pop
clc
fwait
insb
movsl
add
xchg
stc
out
inc
lcall
jnp
pop
cltd
push
shll
sub
test
fistpll
fnsave
inc
test
adc
rcrl
push
shr
scas
js
mov
adc
cmp
or
and
push
bnd
jge
les
xchg
fs
mov
and
sbb
lret
xadd
xor
sbb
ja
pop
jo
push
adc
xchg
mov
shlb
and
cmp
mov
jge
push
rorl
imul
or
pop
add
push
mov
mov
mov
clc
add
or
fcmovu
cld
mov
mov
shll
loop
lret
cmc
mov
fidivrs
ljmp
cmp
push
add
mov
jmp
outsb
pop
mov
xchg
adc
adc
data16
jge
addr16
fimuls
push
fucomi
out
cmc
push
pop
cmp
and
stos
inc
popf
stos
lret
mov
out
incl
mov
fucomip
lea
cmc
mov
jl
addr16
gs
push
hlt
inc
sbb
mov
jae
lcall
arpl
pop
pop
mov
mov
jp
cmpsl
fildll
out
std
leave
lods
ret
into
loope
int
adc
xor
push
je
add
fbld
xor
dec
cs
inc
jp
rclb
xchg
dec
cmp
out
pop
xchg
ret
popf
das
shl
mov
jbe
push
clc
pop
outsb
mov
imul
es
add
subb
push
sub
aas
push
sub
outsb
insl
xchg
xor
cli
xor
movb
stos
mov
push
and
and
mov
test
decl
adc
out
push
push
mov
xchg
dec
jl
out
sbb
jmp
negl
nop
and
leave
div
mov
or
xor
push
out
les
leave
and
stc
mov
mull
iret
inc
aas
leave
sub
inc
repnz
test
fcoml
rclb
call
addb
xor
bound
aam
or
lods
adc
inc
pop
pop
addb
lret
mov
mov
pop
stos
adc
or
shlb
and
inc
addr16
in
lahf
push
arpl
inc
fistps
cmc
add
sarb
xchg
popf
xchg
dec
jg
pop
mov
daa
dec
jae
mov
imul
sub
lcall
das
xchg
pop
ficompl
ret
xchg
lahf
int3
sar
jae
jmp
pushf
arpl
hlt
adc
push
jle
negl
out
hlt
xchg
lods
cmpsb
inc
aam
enter
jp
cmc
rcll
xchg
cmp
sbb
fiaddl
lods
loopne
insb
xchg
out
rcl
lcall
rolb
jle
lock
mov
shr
cmpsb
pop
xlat
push
or
xorb
in
jbe
jno
or
jne
movsb
dec
lret
fdivl
pop
rcrl
jo
in
or
or
rcr
mov
push
add
lahf
sub
les
ret
pop
push
lahf
dec
mov
out
bound
subl
mov
shll
sarb
push
sbbb
out
xchg
add
addr16
mov
xchg
lea
lret
sti
shrl
in
and
pop
movsl
add
shr
push
push
sbb
shlb
and
mov
push
or
mov
jnp
fmull
mov
fsubl
sub
fidivrl
sahf
cld
push
loope
or
clc
bnd
lahf
out
inc
mov
dec
jle
and
pop
lcall
aaa
lds
push
inc
mov
jecxz
mov
dec
jle
rorl
popa
pushf
ljmp
enter
jns
and
push
inc
dec
push
movsb
push
sub
jnp
jmp
sub
mov
inc
aas
lcall
xor
cli
lock
sub
cld
push
mov
xchg
adc
dec
inc
or
in
leave
bound
scas
inc
ja
mov
xor
js
aaa
lea
xchg
rep
mov
push
insb
adc
or
sarb
add
cmc
adc
pop
cltd
outsl
lods
lcall
mov
mov
inc
pop
pop
cmp
add
mov
dec
push
mov
sbb
xor
and
insb
jmp
leave
lcall
inc
inc
je
xchg
divb
shll
dec
in
jae
and
ds
repz
fucomip
sbb
and
in
cmc
push
scas
lahf
add
dec
sub
notb
movsb
lods
repnz
data16
shll
push
push
fwait
popa
aad
jp
js
icebp
cmp
jecxz
filds
cmpl
pop
adc
aam
icebp
fucom
dec
shrl
les
mov
pop
lahf
sub
inc
mov
sbb
js
jecxz
mov
adc
xor
pop
or
push
inc
xchg
pop
sbb
jbe
inc
push
loop
pop
movsl
jbe
jno
pop
in
push
xchg
mov
pushf
cmp
xchg
xchg
arpl
mov
rcrb
xor
cmp
shl
or
mov
cmpsl
jb
mov
fstpl
std
jl
inc
mov
cmpsb
pop
xchg
shrb
dec
add
inc
outsl
insb
and
std
ljmp
push
loopne
lds
in
push
fnstsw
data16
inc
insb
add
out
inc
out
dec
lret
mov
in
testb
mov
in
scas
or
pop
outsb
cwtl
ret
xchg
data16
push
jns
inc
sbb
push
xchg
dec
in
pop
pop
mov
xchg
outsb
push
imul
cmp
data16
roll
ret
mov
mov
es
out
icebp
push
je
mov
int3
shlb
and
sub
pop
mov
je
xor
pop
add
subb
jo
mov
cwtl
or
mov
sub
popf
inc
jb
outsb
or
xchg
mov
sbb
sub
mov
pusha
hlt
mov
adc
push
clc
mov
jecxz
mov
adc
mov
test
test
fwait
aas
dec
mov
jmp
out
jl,pn
sub
hlt
ficoml
dec
adc
ja
into
push
stos
jae
push
push
in
add
test
jecxz
sti
inc
imul
lret
imul
aad
add
mov
mov
cs
cltd
loopne
outsb
mov
out
test
fcom
lods
xchg
sub
lret
push
push
jno
cmp
pop
sbb
ret
fildl
mov
data16
mov
push
cmc
push
aam
scas
mov
push
mov
mov
jge
inc
scas
add
jecxz
lods
cmp
and
push
adc
outsl
add
mov
lods
mov
shlb
mov
push
mov
idiv
jmp
adc
mov
jmp
out
test
mov
cmp
mov
sub
pop
jns
mov
es
aas
push
and
imul
pop
pop
xchg
incl
into
aam
jno
inc
imul
fnstenv
aaa
push
lods
insl
and
inc
inc
out
jnp
cmc
insl
divl
gs
sbb
adc
mov
cmc
mov
jge
push
inc
js
imulb
in
out
mov
xchg
pop
mov
repnz
test
sub
cmpsl
insb
imul
movsl
and
adc
xchg
and
in
leave
cmp
or
sahf
ss
fninit
dec
orb
js
lret
test
dec
arpl
idivl
mov
mov
and
cwtl
pop
leave
adc
cwtl
std
repnz
pop
cmp
test
cmp
and
pushf
fucom
int
push
stos
fcmovu
cld
and
aam
and
sbb
jb
push
repnz
shr
adc
out
push
push
dec
xchg
xchg
lea
jp
and
and
inc
add
sahf
gs
sub
sub
mov
adc
or
xor
push
and
sub
loop
adc
xor
xchg
and
lahf
xchg
or
test
sub
mov
cmpsb
lock
dec
mov
cltd
pop
push
daa
xchg
lds
dec
movsl
sub
das
xchg
pop
scas
loop
ja
les
mov
xor
push
arpl
jnp
mov
stos
into
dec
rorb
outsl
jns
out
leave
inc
je
mov
adc
aad
adc
std
mov
pop
std
dec
cmp
aad
mov
dec
fld
sub
bound
dec
jnp
dec
jg
cmpl
mov
cmc
and
lea
hlt
push
mov
dec
pop
rclb
pop
repz
lahf
ja
je
mulb
push
xchg
inc
jb
test
stc
fsubrl
int
push
das
xchg
nop
jne
xor
inc
popf
mov
sub
fmull
jne
jp
sbb
jo
lds
sbb
sub
shll
adc
inc
mov
sahf
aas
xchg
jns
or
sub
out
repnz
mov
dec
and
divb
mov
test
mov
xor
mov
arpl
jo
mov
mov
les
jg
jne
cmp
sahf
add
in
pusha
lods
lds
pop
pop
addl
fwait
adc
inc
dec
mov
repz
loop
cld
mov
and
jb
daa
push
push
mov
mov
or
adc
das
lods
sti
sti
xchg
inc
insb
cld
sub
les
das
dec
movsl
lret
iret
jge
dec
pusha
scas
test
loopne
mov
pop
sub
sub
mov
andl
xor
mov
and
stc
mov
sbb
sbb
imul
call
xorl
aas
inc
scas
mov
icebp
inc
mov
mov
lahf
sub
pop
and
jno
push
push
jbe
lret
or
arpl
pop
ja
shr
sbb
mov
inc
jbe
mov
mov
sarl
cmc
fdivr
adc
les
jno
mov
mov
sbb
insl
out
mov
fistpl
lahf
or
cmp
adc
and
out
jge
add
das
mov
into
pop
stos
pop
cmp
mov
sti
sub
loope
mov
ja
xor
test
jne
xchg
aas
lahf
mov
popf
bound
cli
adc
sub
data16
mov
js
pop
shl
xor
xchg
in
enter
xor
aaa
xchg
adc
mov
mov
push
xlat
push
sbb
push
mov
adc
jb
or
les
lock
push
push
sub
test
mov
push
pop
jnp
rcrl
call
cli
aad
jns
cmp
jp
rorb
pop
xor
xor
cmp
add
mov
rcrb
inc
and
xchg
lret
sbb
mov
mov
dec
aam
lahf
xchg
mov
add
cmp
push
adc
pop
push
sub
jg
jae
push
gs
loope
scas
insb
inc
clc
andb
jae
fldenv
or
roll
bound
or
jecxz
add
cli
sti
push
inc
inc
popf
sub
rcll
mov
sahf
leave
mov
ljmp
arpl
mov
add
dec
jge
lret
cs
or
inc
lahf
in
mov
out
fistps
xor
push
idivb
pop
cs
adc
xchg
push
jmp
mov
imul
adc
popf
mov
je
sbb
loopne
pop
fldcw
mov
mov
push
dec
mov
adc
push
rcrb
roll
addr16
and
div
mov
push
xchg
jle
testb
dec
sub
sahf
test
jp
lcall
cmp
movsl
fisttps
sub
mov
jae
mov
or
pop
popa
sbb
daa
adc
mov
cli
inc
ja
xchg
xchg
adc
stc
pop
jmp
int3
lret
fwait
dec
sub
push
cld
loopne
xor
in
ljmp
lcall
pop
aam
fisubs
cmp
mov
cltd
jnp
int
mov
aad
aam
mov
icebp
adc
leave
lcall
stos
inc
lcall
mov
mov
in
sbb
mov
jp
fnstenv
pop
sbb
icebp
cmp
xchg
xor
out
cmp
rclb
andb
push
jo
pop
xchg
insb
sub
mov
mov
pop
dec
and
testb
int3
xchg
xchg
sub
mov
scas
inc
test
or
inc
flds
ficomps
pop
stc
arpl
sbb
loope
in
xor
testl
fstpl
dec
push
rcr
mov
inc
pop
repnz
push
lods
sbb
pop
lret
mov
fwait
aad
fiadds
jb
add
daa
push
xchg
test
insb
ds
fwait
push
movsb
arpl
pop
scas
loop
mov
push
rolb
mov
cmp
and
ja
xor
aad
or
adc
loope
inc
imul
mov
fidivrl
xorl
adc
add
sub
push
adcl
mov
mov
xchg
add
pop
ljmp
pusha
adc
mov
lds
push
add
pop
and
movsl
ja
in
imul
nop
push
sbb
mov
dec
pop
push
mov
cmp
add
ds
xor
and
out
loopne
sarl
fidivl
outsb
int3
mov
cmpsb
mov
fidivl
mov
andl
jb
cmp
scas
inc
sbb
cmpsl
adc
dec
mov
xlat
sbb
adc
xchg
mov
mov
loop
mov
dec
fidivs
xor
pop
mov
xor
sbb
insl
iret
jg
mov
jne
lock
shrb
test
cmp
fwait
mov
and
jnp
test
scas
jno
mov
cmp
fidivs
dec
push
mov
sub
cmc
pop
dec
rcl
sti
push
cmpsl
lods
mov
fdivs
adc
repz
add
repnz
cmpsl
loopne
or
sub
jne
lahf
cs
aad
mov
mov
cltd
jnp
fucom
data16
push
xchg
outsl
add
dec
push
fwait
aam
mov
or
sub
add
call
jne
dec
jp
mov
js
sarb
outsb
adc
mov
dec
xchg
push
inc
not
inc
sarl
lock
xchg
xor
cmpsl
sub
push
cmc
push
dec
data16
imul
out
lret
clc
stos
repz
call
or
sti
push
arpl
push
xor
stc
stos
fldcw
jle
mov
push
out
mov
add
jmp
adc
lcall
or
pop
mov
inc
in
xchg
subl
leave
jnp
in
clc
mov
dec
dec
mov
or
dec
push
int
into
js
xlat
ja
popa
ds
loopne
int
neg
scas
adc
push
cmp
ljmp
xor
xor
insb
pop
push
mov
das
sub
test
lret
cmp
mov
sbb
jg
cmpb
in
sbbb
rcrl
mov
in
mov
adc
rcr
sub
jle
lea
push
sbb
push
sub
jp
idivb
fdivrl
push
lock
xchg
dec
and
mov
pop
jne
adc
mov
jle
aad
shr
scas
outsl
loope
shl
daa
xchg
fcompl
mov
ds
imul
cli
out
jbe
into
add
mov
daa
cs
cltd
cltd
test
test
pop
rclb
je
xchg
repnz
sbb
cltd
mov
xchg
call
int3
orl
pop
inc
mov
or
jp
xchg
fsubrs
pop
inc
nop
cmp
mov
mov
mov
mov
jnp
mov
pop
dec
aaa
adc
je
stos
or
push
jno
std
cbtw
ja
insb
inc
or
cmp
jo
lret
or
leave
shl
push
push
mov
cmp
pop
jns
ds
mov
shlb
fildll
pop
js
fwait
das
mov
xchg
push
lods
std
sbb
ljmp
xchg
inc
mov
sub
gs
jle
mov
pop
xchg
hlt
repz
push
les
cmp
test
sbb
mov
cli
or
fdiv
lods
idiv
and
jmp
sbb
cld
nop
pop
stos
ret
mov
xlat
cmp
and
xchg
mov
jbe
pushf
and
cmpsl
mov
or
std
gs
cltd
lahf
mov
dec
shlb
mov
clc
add
add
push
push
push
aas
adc
mov
adc
xchg
lret
mov
pop
mov
dec
shl
adc
cmp
pop
imul
xor
fmul
mov
adc
inc
mov
or
shll
insb
popf
in
xchg
movsb
addr16
in
out
xor
fildll
out
in
cmp
movsb
jb
push
out
push
dec
inc
cmp
dec
xchg
insl
dec
fldt
push
out
cs
sub
rorb
fcompl
xchg
or
jecxz
out
bound
das
in
or
loope
push
loope
sahf
sbb
sbb
shll
push
or
iret
add
testb
mov
push
out
mov
inc
and
cmp
test
movsl
and
inc
fildll
xchg
les
movsl
mov
ret
pushf
xchg
and
or
lock
test
xchg
pop
cs
icebp
stos
xchg
mov
fsubrs
adcl
inc
jns
xchg
jae
test
gs
fcoms
orb
pop
push
dec
cli
addr16
sub
fnstenv
daa
movsl
sbb
shlb
cmp
adc
inc
mov
xor
pop
sub
sti
lods
push
mov
jae
mov
mov
aas
rclb
push
pop
outsb
aad
loop
adc
rcr
or
mov
mov
icebp
add
stos
inc
xor
xor
fisttps
jecxz
mov
add
jg
lods
jle
test
fidivs
and
aad
lret
outsl
pushf
jle,pn
in
loop
insl
les
push
in
inc
adc
pop
inc
mov
enter
popf
outsb
stos
xchg
loopne
sub
outsb
adc
jecxz
fwait
enter
inc
mov
mov
add
push
xchg
testl
push
sbb
push
les
sub
dec
pop
xor
xor
shll
dec
into
xchg
jns
outsb
bound
lods
enter
mov
sbb
stos
cmp
cli
orl
ja
xorl
lods
jo
fdivrs
inc
adc
insb
sbb
mov
ret
or
pop
flds
or
jmp
and
loope
inc
add
adc
mov
ret
data16
lret
xchg
js
mov
stos
dec
pop
aam
popa
push
and
inc
and
jb
lret
or
xor
pusha
push
mov
inc
adc
outsb
popa
cmp
add
ljmp
bound
idivb
shl
popa
sbbl
jae
jns
adc
push
adc
fisubl
jle
subb
rcrl
add
ror
xlat
insl
push
mov
push
sbb
xor
test
mov
sbb
dec
scas
push
sbb
dec
daa
cmp
cmp
dec
pop
sarl
xchg
xchg
sub
push
xchg
icebp
pop
mov
lea
mov
mov
xchg
mov
pop
xchg
jle
popa
loopne
test
adc
das
into
cmp
xchg
imul
xchg
bound
sub
adc
xor
fsub
incl
inc
in
daa
pop
add
lods
or
sub
data16
or
jmp
orb
lret
dec
and
mov
mov
and
test
mov
cwtl
jbe
loop
imul
adc
xchg
or
mov
fiadds
shrb
adc
mov
mov
stc
pusha
jge
cmc
or
inc
dec
xchg
fsubrp
or
test
cmpsb
xchg
inc
add
dec
jle
push
lret
popf
inc
pop
cmpb
cmpsl
mov
pop
push
mov
xchg
mov
out
push
jecxz
inc
dec
scas
mov
pop
repz
adc
roll
xor
pop
testb
pop
out
andb
xchg
adc
push
test
fadd
repnz
xor
dec
cmp
sbb
push
inc
push
inc
flds
nop
cmpsl
sub
dec
inc
lds
ret
stc
scas
mov
cmp
ja
out
xchg
xchg
ficomps
test
leave
ss
loopne
pop
sbb
inc
xchg
into
xchg
xchg
or
cltd
imul
iret
mov
sub
in
sbb
xor
jnp
repnz
push
add
adc
cmpsb
cmp
repz
or
jns
in
cmp
jne
pop
jle
xor
and
in
push
mov
mov
sub
sarb
inc
sbb
mov
xor
cmp
xor
cltd
and
cmp
ret
or
inc
sbb
push
sbb
enter
pop
jmp
pop
pop
sbb
mov
and
mov
dec
adc
adc
cs
push
daa
xchg
sub
cs
adc
lods
pop
xchg
push
pop
sbb
cmp
sbb
imulb
iret
bound
push
jno
sbb
jo
or
aas
shlb
xor
ret
jl
jno
cmpsl
fistpll
mov
lods
lods
nop
lods
add
push
nop
insl
or
add
fcomps
scas
shlb
push
clc
loopne
inc
inc
sbb
addb
fnstcw
adc
andb
js
xchg
stos
sub
xchg
mov
dec
movsb
push
je
imul
cmp
rol
mov
adc
movsb
sbb
leave
sub
int3
jg
adc
call
jl
sarl
sti
std
push
mov
scas
jb
xchg
or
jge
loop
insb
test
arpl
jle
cmp
pop
jo
mov
loope
add
enter
les
mov
push
addr16
sub
inc
aad
cmpsb
jae
ds
mov
xor
jl
jge
inc
gs
cmpsl
popa
jmp
add
repnz
jle
dec
and
add
mov
mov
cmp
in
fsubl
dec
sahf
loope
push
mov
ss
dec
shrb
cld
out
mov
repnz
outsl
jns
jg
and
aad
adc
push
and
adc
iret
xchg
mov
xor
jmp
add
les
lock
mov
clc
dec
out
xchg
cmp
and
popf
mov
ret
push
cld
push
add
mov
inc
sub
inc
sub
icebp
repnz
enter
lahf
dec
lock
ja
repz
and
test
adc
jge
fbld
jb
into
jecxz
outsb
rol
out
mov
lcall
cmp
iret
test
xor
add
lret
fwait
popa
jmp
sub
inc
xchg
jne,pt
sbb
mov
iret
scas
inc
loopne
cmpsb
jae
or
sbb
in
std
mov
fldcw
jns
test
and
out
or
andl
inc
aaa
mov
cmpsb
xorl
mov
pop
test
pop
ret
test
cltd
cmp
xchg
mov
cld
jl
and
test
mov
popf
repnz
lock
enter
js
jb,pn
push
pop
sbb
out
sar
add
out
lds
cmp
mov
fimull
sub
adc
ret
push
fiaddl
leave
out
les
lcall
sbb
fcmovb
pushf
xlat
or
mov
in
out
iret
insb
imul
out
xchg
jmp
das
cld
sbb
add
aam
inc
inc
mov
insb
mov
pop
push
adc
pop
jmp
jge
cmpsl
jg
mov
insl
rolb
data16
shl
aam
lods
nop
stc
dec
psubd
imul
jne
movsb
or
orb
cmpsb
adc
xor
aad
dec
mov
bound
jno
add
flds
push
movsl
mov
jae
test
jae
pop
adc
lret
repnz
mov
lock
mov
out
test
loope
in
scas
aas
in
push
aas
mov
mov
sti
bound
push
stos
std
pop
shlb
pop
into
sbb
mov
lods
adc
mov
lret
ret
out
sub
pop
iret
and
mov
jmp
ret
sub
js
and
add
mov
les
adc
cltd
je
daa
mov
cmpsb
mov
xchg
add
leave
cmc
test
int3
sub
out
call
add
mov
add
popf
lcall
ret
jle
xchg
popa
mov
xchg
in
sub
stos
sbb
cmc
or
and
imul
cmp
je
dec
cmc
cmc
xor
push
jbe
pop
daa
js
mov
stos
out
push
mov
stc
fucom
in
jl
mov
cmpsb
xchg
dec
jnp
fs
loopne
mov
je
in
push
jge
dec
sbbl
andb
daa
in
and
xchg
clc
icebp
in
cltd
jecxz
gs
mov
or
xchg
fldt
lcall
sbb
mov
push
lock
bound
dec
cs
out
push
sbb
inc
push
fdivr
lahf
in
xlat
push
sbb
push
add
mov
and
in
popf
jbe
pop
adc
dec
pop
ljmp
out
dec
and
mov
jo
shrb
push
sbb
sbb
cmp
jbe
xor
cmp
push
xorl
pop
jo
lret
in
cmp
popf
outsb
je
add
sub
test
jmp
jecxz
mov
pusha
inc
testl
jns
into
lcall
lds
cld
insl
sbb
add
fmull
aaa
out
int3
mov
jb
xchg
flds
push
push
pop
repz
cmp
movsb
jnp
inc
loop
or
mov
xchg
jmp
stos
push
inc
cmp
xor
ficoml
inc
sbb
fwait
adc
cmp
imul
pop
sub
packssdw
mov
andb
xchg
push
sub
les
outsb
and
xor
pop
fucom
in
or
addr16
cld
lcall
sub
hlt
rolb
push
es
sbb
cmpsl
movsb
or
lea
pop
jae
sti
adc
jl
dec
popa
lock
pop
push
in
adc
xchg
inc
sub
and
cmpsb
icebp
adc
pop
xchg
jns
xchg
inc
dec
int3
pop
push
imul
jmp
pushw
gs
adcl
ret
pop
stos
dec
int
call
aas
mov
js
fidivl
pop
lock
xchg
fucomi
mov
popf
mov
scas
js
sub
stos
std
mov
iret
pop
decb
add
call
xchg
cld
mov
mull
fs
cmp
inc
xor
mov
sbb
jne
inc
mov
cmpsl
sub
adc
mov
iret
xchg
stc
inc
hlt
pop
bound
xlat
sbb
lock
movl
dec
or
push
cmpsb
lcall
test
xor
leave
gs
leave
adc
fisttps
lods
into
push
push
add
adc
arpl
fisubs
dec
push
out
sbb
sbb
sbb
mov
pop
pop
stos
xchg
pushf
scas
mov
scas
mov
stos
xlat
dec
mov
jecxz
in
dec
or
adc
scas
mov
xchg
lods
jns
push
bnd
rcrl
pop
mov
push
cs
daa
in
add
loopne
and
inc
sbb
xor
jns
sahf
or
insb
pop
stos
pop
mov
inc
in
mov
sub
inc
movb
push
dec
fs
add
xchg
shl
lods
pop
inc
test
dec
or
clc
test
xchg
adc
xchg
pop
sbb
adc
cmpsb
int
jno
insb
mov
jecxz
mov
dec
subb
aad
push
aad
gs
adc
sub
imul
ja
mov
sub
andb
and
inc
xchg
add
or
movsb
lcall
addb
mov
xor
adcb
mov
roll
les
loopne
mov
jo
or
insb
lret
push
jmp
and
ds
int3
test
mov
lods
popa
mov
test
pop
sti
scas
jmp
clc
les
push
cmpsb
jle
mov
xchg
xlat
roll
sub
mov
jae
ss
popa
out
push
aad
mov
fidivl
ret
mov
subb
sub
adc
ljmp
aam
xor
adc
shrb
mov
adc
lret
mov
mov
xchg
and
mov
cmpb
dec
xchg
mov
stos
xor
mov
jg
movsb
rcll
sbb
aas
dec
mov
mov
ds
push
add
pop
xor
pop
gs
and
into
sarb
in
fmull
das
call
cld
leave
mov
mov
movb
lahf
push
add
and
sub
sahf
jnp
push
push
aas
movsl
adc
dec
pop
pop
aas
push
or
inc
pushf
lods
shr
loop
ds
nop
mov
mov
add
pop
je
lods
lods
imul
push
fisttpl
mov
out
mov
test
or
loopne
mov
cld
fidivrs
sbb
xchg
sub
sbb
push
inc
stc
push
hlt
push
pushf
jle
cmp
jmp
lods
mov
add
pop
mov
and
jns
xchg
push
lods
adc
incb
lret
out
sub
or
adc
ficomps
sub
xchg
or
imul
jns
cld
fisubrl
lahf
push
bound
sbb
imul
mov
pop
js
daa
loop
test
std
mov
adc
js
gs
and
orl
or
popa
aaa
push
mov
mov
divl
jbe
pop
rcr
pop
rcl
aaa
mov
push
shr
pop
mov
dec
jae
pop
movsl
sub
cmc
lock
lcall
arpl
inc
test
lcall
mov
int
inc
scas
sub
xchg
fwait
and
cmpl
mov
fwait
dec
jnp
fucom
inc
push
pop
cld
adc
in
mov
push
outsb
push
in
mov
cmp
sbb
jg
lods
loopne
ds
bound
sub
insb
neg
inc
rcll
cmpb
push
sbb
dec
popf
mov
dec
push
es
jno
inc
and
pop
sbb
out
and
lret
mov
lods
sub
cwtl
ja
pop
xchg
cmp
lahf
push
push
insl
jno
aad
jns
cwtl
dec
iret
cmp
push
frstor
cmpsl
mov
cmc
push
push
xlat
daa
fndisi(8087
cmp
dec
jae
rcll
jp
mov
nop
rcl
push
cmp
sub
xor
out
jl
add
dec
mov
push
dec
movb
hlt
mov
insb
cltd
jge
lods
xchg
sub
ss
shlb
scas
or
out
xchg
pop
sub
test
sahf
cmp
jno
mov
xor
mov
out
jno
push
shll
negl
mov
fwait
add
lahf
push
add
dec
cld
push
nop
test
xor
add
xlat
and
jns
inc
outsb
sbb
stc
stc
in
jno
jge
inc
sarl
sub
in
icebp
and
ret
ret
cltd
mov
std
mov
sbb
sti
push
leave
or
sbb
push
xor
ret
cmp
cld
lods
out
stos
fdivrl
push
ret
dec
pop
or
cmp
sub
xchg
dec
add
and
jae
and
jno
and
js
jmp
test
mov
lea
lods
lcall
xchg
lock
dec
ret
jno
or
fidivl
cwtl
cmpsl
iret
cli
sahf
pop
sbb
or
inc
push
push
cmc
or
jnp
jmp
mov
test
iret
inc
mov
loop
jge
sbb
in
ror
push
mov
arpl
cmp
sub
nop
les
shll
pusha
mov
ret
iret
mov
mov
and
inc
cs
mov
insl
loope
mov
pusha
xor
pop
js
xor
int
add
add
js
adc
xor
lcall
nop
xchg
and
jge
adc
cltd
cmp
pop
lret
sbb
mov
push
xor
adc
jae
xchg
pushf
insl
in
rorl
mov
movsl
js
je
and
aaa
dec
jle
cwtl
stos
xchg
mov
rcrl
jo
adc
jae
cmp
aad
push
insb
push
xor
lods
xor
fmulp
aaa
push
xchg
lcall
push
push
or
cwtl
ret
test
stos
shlb
in
sub
mov
and
scas
test
or
jmp
icebp
cld
sbb
les
stos
cmp
test
cmp
std
add
mov
sahf
rcr
jae
inc
xchg
pop
lock
push
ljmp
fdivrl
mov
repnz
aas
popa
call
fimuls
adc
icebp
stos
fistl
or
xchg
xchg
cltd
dec
ljmp
sbb
xchg
sub
xchg
ret
arpl
scas
jmp
jecxz
idivl
xor
cwtl
inc
cltd
icebp
fldt
cmpsb
jno
jp
popa
lea
addr16
ss
pop
fwait
mov
xor
mov
jle
cmp
or
test
fbstp
xor
sbb
sub
jae
out
push
in
or
bound
lock
cwtl
test
movsb
sbbl
movsb
mov
gs
jnp
movsb
clc
pop
popa
jae
and
xchg
pop
sbb
data16
pop
or
sbb
push
cmp
push
jnp
faddl
pushf
aam
mov
cmpsb
repz
add
mov
inc
scas
adc
pusha
dec
mulb
xchg
adc
xor
xchg
xchg
cmp
shlb
hlt
fldenv
enter
rol
push
xor
inc
mov
mov
nop
ficomps
in
in
mov
out
aam
js
dec
stos
jno
xor
mov
movsb
mov
adcb
lock
xchg
pop
dec
lahf
mov
pusha
jae
insb
fs
std
pop
pop
push
lret
nop
std
inc
sbb
or
xor
adc
mov
cltd
bound
aam
rolb
jae
xchg
mov
mov
cmpsb
inc
pop
int3
leave
cltd
fwait
out
xor
pop
jg
mov
or
movsl
loope
mov
cmc
outsb
push
adc
xchg
lret
mov
daa
cmpb
sub
jl
not
add
pushf
push
ja
sub
dec
mov
jl
cmp
daa
gs
inc
jns
adc
loope
cmp
dec
sarb
shrb
mov
mov
out
pop
jno
and
outsl
add
aam
or
pop
push
test
pop
int3
mov
cmp
subb
icebp
lret
test
pop
push
cmp
inc
das
in
inc
nop
fs
rcr
inc
mov
lock
mov
fidivrl
sub
loope
les
pop
shlb
repnz
out
cmp
add
add
pop
dec
push
and
mov
cmp
mov
fucomp
testl
push
cmp
sbb
flds
mov
outsl
lcall
ret
adc
andl
and
jne
pop
pushf
cmp
lahf
arpl
mov
arpl
mov
sbb
sub
cli
or
cmc
inc
xchg
pop
mov
dec
sahf
clc
xchg
lsl
int3
rclb
mov
in
imul
xlat
lds
push
lods
icebp
pop
xorb
shlb
data16
fildl
icebp
rorl
aas
cmpb
cmp
cltd
push
mov
aad
fmul
popf
adc
push
popf
jae
dec
je
cltd
imul
pop
fwait
pop
insb
dec
adc
roll
adc
xor
add
and
xchg
jne
mov
sub
mov
jnp
fimuls
jns
xchg
dec
dec
filds
or
sub
mov
sbbb
adc
in
lret
mov
xchg
pushf
mov
jno
mov
subl
cwtl
pop
xchg
xchg
mov
adc
out
pop
xor
and
pusha
jge
or
in
ljmp
jmp
adc
inc
je
xchg
mov
jae
xchg
mov
mov
mov
or
mov
lret
aas
test
mov
xlat
cmp
jg
loopne
iret
xchg
in
sbb
pop
pop
sbb
mov
hlt
enter
ss
jg
int
fs
into
leave
xchg
addr16
or
lea
mov
push
nop
xchg
or
dec
adc
push
sub
adc
sbb
in
movsl
sub
xchg
data16
ficoml
hlt
stos
cli
xchg
pop
enter
xor
xor
mov
xor
lahf
add
es
in
add
pop
pop
jmp
or
in
push
sbb
cmp
cwtl
out
je
loope
je
jbe
outsl
inc
and
shlb
mov
push
sbb
subb
lods
pop
sub
pop
jmp
gs
out
cmpsb
movsl
adc
shrl
pop
test
sti
test
dec
push
push
adc
dec
ror
mov
cmp
popf
xor
inc
imul
pop
xchg
push
shll
repz
dec
das
sahf
add
inc
ds
sti
cmp
xor
mov
push
mov
and
mov
add
nop
scas
call
in
mov
por
rclb
orb
dec
mov
sub
pop
movsl
and
test
xchg
cmp
into
jns
xchg
gs
ret
insl
adc
mov
lahf
xchg
mov
fcomip
fwait
push
je
out
movsb
cs
xor
outsb
xlat
mov
mov
mov
inc
push
pop
lcall
in
mov
sahf
jae
call
xchg
add
lods
ljmp
or
icebp
jo
movl
cmp
mov
adc
movsl
add
jp
push
pop
addl
call
pop
fiaddl
and
add
and
repnz
loopne
fimuls
imul
cmp
cmpl
push
pop
lret
into
shll
mov
repz
pop
rcrl
cmp
loop
lahf
stos
xor
fldcw
lcall
cld
inc
pop
out
decb
testl
dec
push
test
aas
dec
pop
jns
xchg
xchg
mov
jmp
xchg
add
add
cwtl
dec
and
and
cs
popf
popf
xchg
cli
cli
std
adc
sbb
fcmovne
mov
jp
push
mov
ret
stos
mov
mov
push
mov
dec
imul
or
in
stc
sbb
cmpsb
or
dec
cmp
test
cmp
pop
pop
add
hlt
lock
pop
nop
mov
jne
sbb
addr16
ret
push
cld
xor
aad
sub
cmp
incb
mov
fnstenv
xor
mov
jne
icebp
cmp
mov
mov
jle
aad
dec
cmp
popa
sub
push
cmp
xor
mov
in
and
daa
leave
stos
mov
rorl
mov
xchg
mov
pop
cmc
sub
xchg
xchg
iret
in
and
std
push
push
add
adc
adc
in
mov
push
sub
mov
push
inc
in
inc
in
fnstsw
imul
cmp
jno
data16
push
dec
push
sbb
test
xchg
into
pop
sub
xchg
dec
jg
inc
inc
lcall
add
cld
mov
insb
jno
sti
popa
push
popf
pusha
arpl
or
dec
and
daa
jmp
les
test
mov
mov
dec
test
test
arpl
cmp
outsl
xor
xor
icebp
ret
xchg
fidivs
mov
shll
push
shll
jno
jmp
int3
fwait
movl
sbb
addr16
adc
repz
fwait
sbb
adc
dec
mov
out
adc
xchg
push
icebp
aad
cmp
lcall
fwait
packssdw
shl
enter
arpl
inc
jbe
aad
mov
fdivs
sbb
add
or
xchg
std
pminsw
loop
rorl
nop
addl
jne
inc
pushf
repz
mov
inc
cmp
inc
fsubrl
jae
imulb
rorl
mov
push
cmpsb
cmp
push
repz
sub
jle
push
push
mov
jne
xchg
xor
or
ja
fs
dec
ret
scas
sbb
fsubrl
adc
xor
jno
ljmp
xchg
push
bound
lretw
lret
into
push
out
std
mov
inc
adc
xchg
shll
mov
mov
fsubrs
rolb
add
out
dec
or
sub
in
push
mov
test
jns
mov
in
pop
xor
loopne
ja
xchg
lds
lcall
jo
in
sar
inc
inc
iretw
fisubrs
pop
jbe
mov
jg
stc
insb
ret
or
and
das
lods
or
sarl
inc
inc
fidivs
xchg
jl
mov
inc
rorb
sub
je
xchg
mov
lods
adc
dec
aas
push
dec
xor
mov
and
cwtl
cld
jnp
movsl
mov
pop
pop
loope
add
hlt
inc
xlat
dec
push
inc
ja
and
sbb
push
mov
cmp
pop
je
push
mov
jp
outsb
fdivrs
sahf
loope
xor
fdiv
iret
into
test
imul
not
fwait
jmp
sbb
dec
cmp
test
push
pop
mov
pop
in
les
jno
xchg
cwtl
pop
mov
pop
add
lcall
sbb
aaa
push
mov
and
xchg
mov
dec
pop
mov
pusha
lods
xchg
out
add
scas
mov
pop
call
pop
push
aad
loopne
jle
stos
xlat
jno
jo
je
or
les
sub
js
mov
arpl
and
or
repnz
inc
cwtl
ljmp
cwtl
jle
ljmp
daa
dec
push
push
dec
dec
fistps
loope
fwait
sbb
xchg
push
outsl
gs
pop
jmp
sbb
in
iret
inc
inc
std
scas
xchg
push
es
rcrb
loop
xchg
inc
cld
shrb
mov
int3
pop
pusha
sub
arpl
loop
int3
add
sub
pop
out
dec
in
mov
stos
movsb
out
push
jle
jne
mov
xor
dec
pop
es
lahf
ret
aas
fs
mov
xchg
adc
pop
mov
sub
and
iret
sbb
out
lock
push
and
outsb
or
lahf
je
push
fcmovu
in
mov
fmul
arpl
or
or
cmpl
mov
xlat
mov
push
in
addr16
pop
push
mov
sbb
orb
jnp
cmp
sbb
mov
inc
test
add
pop
popf
dec
out
fscale
push
sbb
mov
xchg
mov
fldl2e
push
dec
cmpsb
mov
mov
sahf
pop
sub
and
or
scas
out
bound
sbb
flds
pop
pop
lret
addb
imull
mov
mov
in
sub
fildl
adc
popf
nop
mov
pop
scas
loop
stc
aam
fcomps
test
pushf
dec
or
les
in
xor
iret
fcoml
das
mov
mov
test
adc
outsb
push
pusha
mov
lahf
add
xchg
lret
pushl
jno
adc
pop
lods
cmp
jp
adc
push
jg
push
shr
add
inc
fsubrl
mov
movsb
cld
hlt
pop
pop
idiv
lret
cli
pop
jmp
pop
mov
cmp
insl
pop
imul
fwait
or
out
dec
test
mov
push
into
imul
in
push
dec
mov
pushf
mov
or
mov
out
dec
popf
xchg
lods
mov
adc
add
or
subb
xchg
sahf
xchg
jle
mov
loope
mov
stos
sub
std
loopne
gs
inc
aam
adc
mov
out
and
xchg
cld
test
pop
test
xor
xchg
lods
aas
dec
leave
xor
mov
mov
push
sub
icebp
or
mov
sub
cli
lcall
add
outsl
das
shlb
cmp
leave
fninit
push
in
push
and
mov
push
mov
test
inc
clc
mov
mov
adc
test
lods
ss
fwait
pop
xlat
pop
aas
cwtl
iret
mov
dec
sub
pop
mov
lods
fwait
lret
sbb
leave
lea
jl
xchg
sub
icebp
mov
mov
cli
call
outsb
jb
mov
orl
adc
gs
add
jns
mov
cmpl
xchg
icebp
cmp
movsb
mov
shr
mov
xchg
fwait
lods
push
pop
push
push
pop
push
sbb
fcomps
lret
in
fldt
dec
jnp
lret
adc
ror
pop
jge
movsl
lea
pop
adc
sahf
mov
daa
in
imul
sub
lret
jmp
mov
push
test
mov
pop
aaa
and
push
nop
fistpll
frstor
mov
pop
fildll
add
pop
mov
add
jne
cld
cld
fcomps
xchg
gs
mov
rcrl
jl
xchg
je
es
push
mov
mov
test
call
xchg
mov
push
flds
push
mov
lret
test
repnz
mov
jbe
inc
push
enter
pusha
cmpsl
std
call
loop
jp
jbe
xorb
cmpsb
shlb
xchg
gs
cld
inc
loope
mov
jns
or
sti
push
movsb
in
pop
call
and
add
xchg
xor
dec
or
repnz
aaa
push
xchg
lret
push
sbb
mov
stos
push
pop
dec
push
push
mov
xor
push
testl
mov
imul
scas
mov
cmp
add
stos
iret
xchg
xchg
jp
and
int
hlt
adc
test
mov
or
cwtl
cli
lcall
push
daa
pop
sahf
xchg
jnp
movsb
and
inc
in
xchg
xchg
fwait
xchg
jnp
into
mov
clc
mov
xor
mov
adc
ljmp
inc
repz
dec
mov
dec
push
sub
jo
jae
pop
cld
repz
repnz
cli
ficompl
mov
out
mov
sbb
add
mov
test
testb
xor
notb
out
adc
sahf
adc
jne
outsl
les
dec
xchg
xor
jmp
fs
loope
test
jge
mov
cmc
mov
push
jmp
rcl
stos
push
or
shr
data16
andl
add
movsl
out
lret
fimuls
call
push
loopne
add
xchg
push
in
jns
pop
pop
pop
hlt
scas
mov
mov
in
inc
xchg
and
rolb
jo
cwtl
das
dec
jne
mov
or
dec
rcrl
xchg
inc
popf
pop
xor
mov
js
imul
mov
cmp
fs
movsl
dec
icebp
push
sub
mov
dec
and
jb
pop
xchg
out
in
jb
pop
or
add
cmp
mov
loope
aam
loopne
dec
add
js
adc
xchg
xor
movsl
mov
mov
or
xor
repz
dec
inc
movsb
sbb
popa
iret
aaa
pushf
sub
push
push
xchg
in
outsb
js
pop
cltd
push
pop
cmpsb
cmp
jge
jmp
pop
jb
scas
push
push
inc
push
xchg
and
mov
fisttps
repz
mov
xchg
or
push
je
jl
stc
hlt
fmul
sbb
hlt
pop
inc
cwtl
stos
or
in
pusha
jne
cmpsb
imul
adc
xchg
movsb
lock
loopne
out
mov
adc
push
mov
cmp
addr16
dec
jp
lds
jmp
idivl
ds
push
outsb
sahf
add
fiaddl
xchg
jne
xchg
jne
xchg
movsb
call
adc
test
icebp
cmp
insl
add
gs
add
fwait
jecxz
add
ja
js
pop
lcall
ficomps
aas
xor
fnstenv
push
aaa
js
clc
cmp
jmp
or
ret
and
cli
ss
out
mov
loop
aad
rcl
out
and
adc
xchg
sarl
stos
fnstcw
cmpsl
flds
addb
hlt
mov
mov
inc
pop
jb
movb
push
outsb
sbb
nop
sbb
jne
push
sub
xchg
adc
sub
dec
mov
mov
pop
mov
idivl
out
icebp
xchg
ds
aaa
sub
pop
iret
ret
mov
fisttps
sub
jne
sar
dec
aad
push
xchg
popf
int
cmpsb
filds
xlat
xor
xchg
add
xchg
mov
lcall
lds
or
or
fistpll
cwtl
imul
sub
pop
mov
xor
faddl
bound
lds
or
xchg
les
and
mov
inc
pushf
repz
jae
mov
xchg
adc
loopne
movswl
imul
push
hlt
mov
clc
in
or
stc
pop
jb
or
shr
sbb
mov
mov
iret
data16
ret
mov
cmpsb
push
mov
sbbb
xchg
dec
push
call
xchg
push
push
push
ljmp
push
pop
mov
arpl
inc
sub
jns
pop
pop
inc
arpl
in
lcall
fs
dec
jb
pop
daa
aas
sbb
jl
mov
jg
fcoml
js
out
popa
jae
popf
push
fists
or
mov
mov
jnp
cs
nop
pushf
sbb
stc
je
mov
jno
and
sub
push
call
fstps
pop
sahf
lods
dec
pop
fsubr
sbb
xchg
fstps
or
adc
repz
test
out
cmp
push
mov
sbb
insl
pop
mov
fcmove
inc
mov
add
test
pop
sbb
sub
int
jge
dec
jae
shrb
ljmp
sub
xchg
mov
push
jp
mov
scas
jb
xor
xchg
pop
mov
mov
push
out
ja
fsubrs
jae
jmp
rcll
add
sahf
out
sbb
jl
xchg
je
push
sub
sub
int
xchg
sub
xor
test
movups
xchg
insl
stc
jno
lea
pop
add
mov
sub
gs
xchg
fcmovnu
lods
mov
sub
stc
popf
clc
jle,pn
imul
fstpl
inc
leave
adc
ret
xor
pop
cmp
push
int
cld
dec
cs
movsl
jb
scas
dec
cwtl
push
cwtl
jnp
out
repnz
aad
cmp
test
pop
in
pop
mov
mov
std
xchg
shll
mov
out
pop
in
psrad
cmp
xchg
mov
aad
cmc
repnz
push
cltd
dec
jl
mov
hlt
cltd
stos
xchg
mov
js
xorl
popa
aam
and
das
out
mov
mov
outsb
jnp
cld
cmp
iret
jp
inc
jo
add
inc
push
cs
or
cmp
cld
mov
mov
sbb
outsb
repnz
dec
sbb
cmp
sbb
js
mov
pop
enter
or
xchg
hlt
pop
dec
enter
mov
mov
daa
mov
add
gs
aam
daa
rclb
xchg
mov
push
outsl
xchg
adc
int3
push
cwtl
mov
and
jae
shlb
fsubrs
push
mov
call
ds
push
fwait
jno
popa
popf
addr16
data16
imul
cmp
jo
mov
and
out
cli
xchg
ret
mov
in
mov
lret
sbb
test
jge
popf
mov
dec
das
shrl
pushf
add
sbb
testb
pop
pop
ljmp
frstor
movsb
pop
push
loop
in
pop
sbb
xor
dec
ljmp
popf
pop
push
clc
in
inc
jno
and
ret
xor
data16
inc
sub
insl
iret
test
lcall
dec
cmp
or
pushf
push
mov
iret
sub
push
jg
out
addb
mov
add
xchg
push
popf
scas
push
or
out
push
sub
dec
fsubrl
or
pop
aas
mov
ja
vmwrite
out
fistps
push
mov
insl
inc
xchg
and
sarb
push
jbe
clc
sarl
dec
into
fistpll
and
and
lock
es
add
adc
push
jno
cs
fists
push
outsb
adc
mov
fldz
fiadds
mov
popa
push
xor
adc
push
xchg
daa
out
lock
aad
or
push
orl
add
add
mov
outsl
xor
scas
pusha
xchg
hlt
xorb
stc
in
mov
mov
das
stc
fnstsw
pop
js
out
les
test
or
xchg
idivl
add
mov
cmpl
cmp
jae
xor
cmp
repnz
imul
jno
adc
dec
mov
cmp
jecxz
or
call
push
sarl
mov
adc
add
add
repnz
ja
mov
ret
ss
mov
adc
cmp
push
push
xchg
lahf
cmpl
mov
sbb
not
push
mov
jo
cmc
jbe
and
push
mov
popa
popf
push
jmp
insl
int3
mov
mov
adc
xchg
nop
sbb
imul
dec
xor
js
adc
jp
mov
je
and
pop
or
adc
stc
or
xor
shlb
push
mov
add
adcl
scas
xor
mov
repz
paddd
sbb
fcomip
enter
in
out
in
jo
out
jp
lret
inc
or
and
push
cs
fs
in
int
or
ss
sub
outsl
mov
mov
iret
incb
adc
test
fs
add
cld
add
dec
in
or
push
rorl
dec
rcrl
and
push
xlat
jnp
xchg
scas
adcb
pop
sub
mov
fs
pop
dec
inc
inc
jno
gs
adc
ja
jl
mov
addr16
mov
sbb
mov
scas
cmc
fdivs
push
or
pop
jge
mov
fcmovbe
pop
imul
jl
or
adcb
nop
outsl
movsb
mov
icebp
int
popf
jp
mov
in
jle
jne
sbbb
inc
std
popf
lret
pop
adc
mov
cmpsl
cli
cmp
xchg
and
fwait
stos
jnp
pop
aad
clc
rclb
dec
jg
xor
mov
push
test
sarl
sub
lds
sbb
aaa
fidivs
ljmp
test
xor
and
push
push
mov
inc
std
aas
pop
jge
dec
cmp
xchg
sbb
jnp
xor
xor
xlat
pop
dec
dec
mov
mov
xchg
cmp
lea
lock
and
loop
add
inc
aas
fnsave
or
fwait
sub
sbb
jl
in
arpl
add
test
in
mov
adc
dec
mov
xor
ret
jae
cmp
cmp
adc
xchg
push
lds
lret
sub
or
add
lcall
push
adc
test
shrb
loop
imul
mov
xor
and
test
movsl
inc
or
lretw
and
in
test
mov
and
sti
dec
push
pop
mov
dec
popf
mov
pusha
xchg
fidivs
aaa
outsb
fwait
cmp
xchg
push
adc
jbe
popa
and
dec
mov
clc
lea
adc
or
inc
sub
lods
mov
cmpsl
mov
inc
out
fwait
mov
or
je
and
adc
cld
lock
leave
pop
xchg
mov
jnp
jnp
dec
jecxz
mov
fnstcw
stc
in
add
stc
pop
sarl
inc
xchg
cmp
pop
mov
shl
mov
pop
leave
mov
sub
cmp
ljmp
fs
insb
mov
leave
or
jl
int
ds
js
lock
div
xchg
fwait
xor
fistps
andl
mov
imul
fistpl
imul
idiv
sub
int
shlb
sbb
mov
mov
adc
lods
addr16
sahf
mov
and
mov
and
mov
aas
xorl
mov
or
xor
in
dec
sub
jns
cmp
fildl
jmp
cmp
mov
lods
fwait
add
jne
adc
cs
icebp
jp
imul
adc
imul
or
jnp
adc
adc
push
cltd
insb
ja
mov
out
mov
out
xchg
jp
mov
sub
call
cmp
xchg
and
mov
cmpsl
das
dec
and
je
pop
in
mov
xor
out
adc
movsl
pushf
cmp
or
lds
enter
cmp
test
test
sbb
add
or
inc
xchg
lcall
lods
cmp
jle
or
inc
push
pushf
cli
xchg
mov
jns
push
subl
jne
or
push
andw
fsubrp
into
and
roll
jp
cmp
loop
adcb
sbb
or
xchg
sbb
cmp
mov
call
mov
add
in
loopne
mov
cld
adc
or
or
mov
std
inc
add
xchg
inc
add
repnz
push
sbb
inc
and
inc
push
mov
stos
sbb
xchg
push
dec
shl
into
mov
dec
mov
sarl
adcb
cmp
sti
add
sub
dec
nop
xchg
cmp
hlt
out
sub
mov
repnz
js
loope
jp
lock
out
push
stos
aad
xchg
repnz
les
arpl
xchg
ret
es
out
dec
or
scas
stc
pusha
cld
fucomip
jle
stc
fisubs
js
loopne
es
xchg
xchg
icebp
cmp
scas
push
dec
sub
pop
jns
pop
mov
adc
in
mov
popa
mov
mull
pop
insl
cmp
jno
fildl
sub
icebp
scas
push
xor
push
mov
xchg
mov
mov
loopne
add
mov
in
push
xchg
jp
push
testl
aad
push
insl
dec
sti
out
jmp
iret
pop
cmp
gs
stc
push
in
push
pop
popf
cmp
sar
shrl
mov
pop
cmp
mov
dec
inc
and
xchg
fiaddl
jge
stos
cmp
divb
add
bound
sbb
arpl
and
or
outsb
mov
jae
mov
xchg
call
or
pop
ret
sbb
hlt
ret
jp
aam
cltd
ja
repz
or
aaa
in
fs
loope
xchg
iret
xor
xchg
mov
lea
mov
js
push
lds
lret
in
dec
jl
imul
and
movd
pop
je
gs
mov
inc
subb
xchg
sbb
js
movsb
push
xor
movsl
outsl
jns
lods
sbb
add
ret
ret
or
jae
xorb
sahf
movl
lds
push
fmuls
and
loopne
push
adc
dec
mov
cld
xlat
jmp
test
out
cmpsl
clc
dec
add
jo
pop
mov
xchg
imul
ljmp
sub
cmp
adcb
xchg
lods
dec
jl
icebp
mov
and
ret
sbb
test
push
loope
mov
test
xchg
lahf
cmc
repz
cmp
inc
iret
loope
jbe
jne
or
jne
jge
sbb
jns
cmpl
jno
xor
inc
inc
inc
in
dec
push
mov
push
loopne
push
orl
pop
enter
nop
test
jl
sub
out
dec
inc
or
rcll
imul
movsl
ret
loope
adc
dec
aam
in
mov
test
fcoms
faddl
mov
sbb
fmull
pop
ret
sbb
nop
sub
mov
call
scas
in
gs
out
mov
fwait
scas
stos
enter
mov
in
lret
popf
fwait
adc
movb
repz
insb
sahf
and
inc
cmp
lcall
xor
or
in
pop
sub
lahf
sbb
add
xor
pop
xchg
mov
or
push
lock
inc
aaa
inc
decb
cs
sbb
jmp
pop
fwait
cltd
loopne
inc
pop
iret
test
sbb
or
xchg
int3
icebp
xchg
fisttpl
pop
outsb
popf
jle
sbb
gs
xchg
inc
cmp
push
inc
scas
fsubl
ret
fyl2xp1
gs
sub
notl
sbb
ss
cmc
or
cmpsb
mov
jecxz
idivl
lahf
mov
xchg
pushf
test
jge
push
movsb
ds
cmpsb
cli
aaa
out
mov
pop
inc
push
lea
inc
xchg
pop
pop
mov
pop
sub
xor
push
adc
mov
mov
sti
bound
mov
dec
mov
inc
and
repz
mov
dec
out
add
movsl
aam
jbe
jnp
jo
sub
dec
mov
xor
dec
fdivrl
test
or
lret
cmp
ljmp
stos
mov
mov
cwtl
push
xor
mov
mov
movsb
or
in
movsb
outsb
xchg
adc
sbb
rcrb
xchg
adc
out
push
std
cltd
mov
lock
sub
loopne
mov
xchg
lahf
fcmovne
outsb
adc
ds
insb
xchg
and
mov
sub
mov
rcrl
pminsw
popf
mov
mov
stc
lahf
inc
mov
mov
mov
jb
mov
xor
inc
rcrb
int
cs
push
cmp
or
sbbb
in
mov
loop
dec
push
out
inc
in
mov
cltd
mov
ud0
dec
mov
fisubrl
xchg
test
mov
mov
xchg
xchg
lcall
jae
cmpsb
bound
gs
and
or
xchg
adc
lcall
pop
adc
fisubrl
inc
orb
cmpsl
jns
add
inc
mov
lret
aaa
add
shl
psrld
mov
and
in
cmp
loope
bound
stos
cmp
inc
iret
test
add
int
jnp
add
ds
push
ret
int3
das
jmp
mov
mull
xchg
into
adc
cmp
mov
adc
inc
xor
xchg
add
lds
pushf
fbld
sbb
inc
or
sbb
mov
stos
lret
jmp
cmp
lds
pushf
lds
xor
push
sub
jmp
bound
xchg
lods
jmp
mov
xchg
hlt
mov
dec
movsl
insl
and
cltd
sub
adc
xor
fsubl
aam
cltd
es
cmpsb
inc
adc
pop
and
xlat
lret
push
inc
sbb
addr16
fs
adc
test
dec
push
mov
cs
insb
jno
insb
jp
std
stos
rclb
inc
pop
pop
xchg
mov
enter
clc
push
jmp
es
js
cwtl
in
sbb
cmpsl
inc
mov
stos
sbb
sbb
cmp
sbb
jns
outsb
pop
mov
nop
sar
push
lret
jge
int
addl
sbb
fsts
and
das
cltd
dec
mov
adc
movd
or
shrl
push
xor
idivb
scas
pop
stc
cmpsb
aaa
adc
lock
mov
mov
js
or
scas
arpl
cwtl
pop
lea
dec
xor
mov
lock
xchg
mov
sub
push
sub
mov
pop
mov
lods
push
or
fdiv
pop
jl
mov
ret
pop
mov
in
cmp
pop
cmp
lds
cmp
cmp
sahf
addr16
sub
mov
inc
mov
andb
inc
loopne
ja
xlat
push
pop
ljmp
push
inc
or
or
popa
mov
xchg
mov
sbb
test
out
sti
add
lcall
or
cli
xchg
xor
jo
lock
les
and
lcall
jg
mov
test
adcb
in
and
loop
jecxz
mov
sahf
push
orl
mov
pop
jge
xchg
imul
pushf
rclb
cmp
ret
mov
std
lcall
pop
arpl
fimuls
cmp
inc
xchg
arpl
leave
test
or
jecxz
push
mov
mov
mov
ficoms
dec
aaa
into
cmpsl
jmp
sub
icebp
nop
mov
push
arpl
aaa
or
iret
pop
jp
loop
dec
add
jne
mov
into
out
add
test
xor
add
push
xchg
nop
out
push
pushf
cmp
push
add
push
es
mov
rcrb
xchg
mov
adc
mov
inc
push
inc
mov
popf
push
xchg
iret
lods
mov
sbbb
popa
mov
jecxz
repz
lahf
loopne
or
int3
aam
pop
pop
cs
rep
out
cmp
xchg
leave
xchg
add
outsb
mov
sbbl
xchg
sub
mov
rolb
mov
sbb
xchg
dec
push
pushf
test
test
jg
data16
inc
and
mov
xor
add
out
js
jae
adc
mov
xchg
jge
mov
lret
ss
aad
add
add
inc
jb
adc
rcr
jl
push
aaa
movsl
add
mov
and
test
mov
jb
push
jmp
inc
movsl
pop
sbb
jbe
jg
das
pop
push
jb
sub
pop
les
xor
lods
push
mov
dec
loopne
push
call
xchg
xor
loopne
sar
xchg
popa
jns
pop
mov
mov
jmp
les
arpl
add
ds
pop
repnz
push
xchg
push
jecxz
xchg
mov
pop
or
std
mov
mov
test
pop
adc
xchg
push
jne
cltd
xor
fwait
add
cltd
dec
fstl
stc
out
cmp
stc
popa
push
mov
cmp
add
test
lea
je
and
rolb
and
fdivl
fsin
cmc
rcll
ss
pop
push
popf
lcall
sub
int
imul
push
add
mov
mov
imul
xchg
testb
or
xor
inc
pop
jo
lods
or
jae
jno
lock
in
mov
aam
stc
loope
in
stos
mov
icebp
or
int
push
fdiv
ret
xor
jle
pop
sbb
sub
cmp
dec
jne
dec
push
jp
lret
lds
cld
lret
jo
mov
adc
and
hlt
jecxz
sub
outsl
int
or
dec
inc
mov
outsl
enter
xor
aas
insb
jb
out
add
mov
pop
iret
fidivrs
icebp
lcall
xlat
aad
mov
jno
cmp
xor
ja
mov
lock
stc
xor
mov
sub
jb
data16
shl
mov
in
inc
push
sbb
gs
jle
out
ficoms
mov
aad
push
cltd
or
inc
pop
mov
fwait
orb
or
jge
lods
sub
test
addr16
xor
dec
cli
mov
sub
jp
negl
adc
rolb
mov
xlat
push
fs
inc
inc
enter
dec
test
inc
ret
pop
and
mov
stos
mov
stc
and
add
outsl
adc
hlt
inc
push
pop
inc
cmp
add
lea
ds
lds
sbb
dec
xor
out
xchg
dec
cld
mov
add
pusha
sahf
out
outsb
into
or
pop
mov
mov
adc
ret
sbb
clc
inc
cmp
dec
lods
scas
rorb
lods
ret
test
loopne
movsl
xor
addr16
vdivsd
cmp
xchg
inc
jo
cli
adc
pop
sbb
iret
jo
fs
shrb
jg
cmp
inc
sub
pop
mov
lretw
test
pop
inc
mov
xchg
lods
adc
add
sbb
pop
addl
lds
fsts
out
fnstcw
xchg
jge
cmp
test
js
push
daa
sahf
popf
cmpsb
xor
push
add
out
pop
push
jg
in
outsl
jne
jge
loopne
insl
mulb
in
lcall
loope
jb
imul
pop
cmp
mov
or
out
push
out
sbb
std
mov
fwait
icebp
and
and
jbe
push
in
add
cmp
lea
add
mov
sbb
push
cmp
outsb
cli
bound
fs
sbb
in
xchg
mov
mov
cmp
jp
fadd
inc
pop
adc
enter
sbb
inc
pop
mov
movsl
test
in
sub
lods
push
prefetcht1
mov
stos
gs
cmpsl
jecxz
dec
cmp
adc
int3
adc
rol
dec
mov
int
mov
enter
or
inc
xchg
push
jl
add
xchg
mov
daa
xor
adc
jle
std
xor
mov
out
dec
dec
mov
adc
push
jecxz
jle
or
insb
or
sub
movsl
pop
mov
dec
insl
mov
testb
repnz
fisubrl
and
pop
lcall
cli
test
xchg
dec
fstpt
loope
mov
adc
mov
push
les
jmp
ljmp
push
sar
xor
or
mov
and
mov
push
sub
dec
hlt
push
pusha
add
clc
inc
add
xchg
push
das
push
mov
clc
sarb
jb
pop
js
dec
popf
jno
in
jbe
jne
inc
icebp
stc
pushf
cmp
pusha
adcl
dec
pop
mov
in
mov
addr16
jns
lods
scas
mov
jge
sarb
jns
icebp
mov
jge
or
js
ss
xor
clc
push
imul
dec
dec
pop
andb
into
std
popa
nop
test
aam
lods
mov
xor
insb
sub
jge
mov
and
into
pop
rorb
and
out
clc
fisttpll
mov
dec
cmc
jmp
clc
lahf
pop
rcrb
push
aad
test
mov
js
lods
mov
fcomps
xor
xorl
shrb
mov
and
add
out
nop
push
popf
mov
sub
sub
jae
into
push
test
mulb
mov
pushw
pop
shl
mov
clc
lods
lods
inc
test
mov
pop
pusha
xor
cwtl
sub
add
out
cs
push
in
mov
aam
outsl
lcall
cmp
popa
and
cmp
inc
fidivrs
imull
negb
jle
inc
ja
sbb
mov
push
gs
sub
dec
xchg
bound
inc
popf
cmc
add
int
loop
mov
mov
repnz
pop
scas
out
fbld
pop
shrb
rcll
dec
in
mov
push
pop
stos
mov
add
push
fisttps
pusha
ret
or
cmc
rcrb
fs
fidivrl
fnstcw
test
dec
inc
mov
adc
sub
fdivs
push
lea
int3
mov
cmpsl
sub
mov
sti
sti
jo
test
jo
and
inc
subl
xchg
repnz
mov
fbstp
push
push
clc
repz
in
or
ja,pn
lret
call
add
fwait
jns
loop
pushf
jg
jmp
loopne
aam
sbb
aam
mov
addr16
mov
inc
cmp
mov
cmp
fsubl
and
loopne
adc
pop
enter
mov
movsb
test
cs
mov
int
xor
push
mov
or
in
lret
les
je
std
push
mov
dec
das
mov
inc
stc
bnd
ja
es
push
or
or
ret
test
scas
iret
jge
ja
and
aad
dec
ret
ret
fucomp
mov
inc
jg
xor
fdiv
xchg
test
popa
scas
lret
aas
cmp
mov
jg
fcomps
sub
out
test
pop
or
jmp
push
sub
cmpsl
adc
cwtl
int
aad
daa
cmp
mov
push
sub
ret
adc
data16
inc
xor
xlat
lods
into
cwtl
pop
cld
leave
mov
xchg
push
jbe
dec
and
enter
das
ja
popf
lock
hlt
imull
in
xor
roll
pop
dec
sub
add
inc
cltd
mov
mov
push
xor
inc
dec
bound
xchg
push
and
pop
xchg
lea
bound
lods
dec
sub
mov
xchg
xchg
out
scas
daa
in
ret
lret
cmpsl
and
fxam
xor
iret
rcr
mov
stos
inc
int
clc
test
sbb
mov
mov
xlat
addb
pop
scas
sbb
pop
mov
inc
sub
loopne
popa
js
push
ss
pop
and
pop
pop
dec
fs
xchg
jb
cmp
fdiv
and
cmp
mov
mov
nop
dec
cmc
sub
or
ds
mov
cwtl
xchg
int3
push
mov
test
xor
mov
push
jge
pushf
sti
test
movsb
pusha
out
aas
stc
sub
mov
lds
das
push
jmp
sbb
pusha
stc
mov
ds
pop
push
pop
loop
jge
mov
xchg
and
xchg
data16
xor
adc
imul
mov
sahf
xchg
stos
loopne
cmp
push
aaa
xor
stos
jne
jecxz
jecxz
pop
mov
mov
sbb
mov
insl
es
je
jle
mov
into
xor
ret
insl
sub
xchg
and
sarb
dec
into
aas
xchg
ret
test
fs
pop
xorb
mov
xchg
xchg
call
push
scas
in
jp
pop
inc
mov
fists
idivl
sbb
mov
cltd
inc
push
mov
lods
and
rcr
jnp
sahf
bts
dec
daa
mov
dec
mov
adc
jnp
test
aad
pop
mov
cmc
or
mov
adc
sbb
aam
xchg
sub
nop
cmp
cmp
cli
fmul
cmp
and
xchg
dec
or
adc
rcll
nop
test
and
jecxz
mov
xor
pop
dec
daa
leave
inc
lahf
xlat
popf
mov
fmul
xlat
ret
dec
mov
sti
lea
leave
adc
push
cwtl
lcall
sbb
jbe
mov
movl
sti
aas
arpl
xchg
jp
jp
inc
int
test
call
sbb
push
sarb
iret
mov
cld
lret
xchg
mov
add
je
sbb
pusha
les
popa
out
jo
xor
fdivl
sub
inc
adc
cmp
icebp
lds
sub
insl
add
rorb
dec
lock
xchg
push
stos
jns
jne
lock
pushf
sub
aam
sub
or
jb
adcb
iret
pop
xor
and
data16
outsl
xchg
cmp
pop
repnz
inc
sub
out
hlt
mov
jecxz
xor
add
sub
ret
pop
sahf
mov
adc
hlt
aaa
pop
js
std
pop
xor
bound
les
push
outsl
cld
jne
hlt
dec
outsl
lds
imul
imul
push
mov
push
repz
les
sbb
jp
push
fistpl
push
jg
addr16
or
bound
call
loop
and
mov
mov
daa
jle
rorb
mov
inc
dec
cmpsl
or
xchg
sbb
dec
cltd
pop
cld
jp
jbe
test
push
cmp
inc
std
dec
loop
mov
pop
lock
aas
jne
je
fstl
mulb
fldt
jnp
lcall
or
mov
inc
movsb
adc
jle
lahf
push
sbb
cmp
xor
imul
jne
adc
fucomp
cmp
std
inc
imul
leave
imul
push
iret
movntps
clc
jle
stos
popa
push
popa
adc
test
xchg
xchg
push
nop
jg
flds
xchg
xorl
sub
jg
jp
cmpsl
mov
mov
negl
data16
cmc
mov
or
imul
std
scas
pop
lods
repnz
jecxz
push
cmp
cmp
mov
jmp
daa
lcall
cmp
mov
xlat
lahf
add
or
in
icebp
lea
into
jle
mov
aad
mov
pop
popf
lock
mov
test
addr16
negl
cltd
add
and
imul
orl
mov
push
rcrb
aas
jg
je
push
icebp
adc
call
dec
add
sbb
leave
notl
push
cmpsl
push
dec
cmpb
mov
push
into
and
adc
xor
outsb
or
mov
push
sbb
lods
inc
cmc
mov
adc
ss
cmp
loopne
mov
mov
and
mov
insl
and
icebp
push
lret
add
jmp
into
sub
insb
add
inc
sbb
ljmp
dec
adc
leave
push
cltd
mov
xor
jp
je
stos
dec
push
arpl
cmp
lret
leave
mov
push
sbb
sti
mov
mov
pop
scas
inc
mov
add
data16
or
loop
outsb
rolb
mov
adc
cmp
adc
stos
fwait
leave
inc
shlb
pop
mov
inc
push
or
imul
sbb
popf
cmpsl
das
jl
sti
push
mov
ljmp
cwtl
jmp
or
jecxz
jle
cmpsl
popa
ret
rorl
xor
mov
mov
pop
aaa
aad
fucomp
int3
add
jae
adc
test
fisubs
push
add
iret
shr
xchg
adc
ds
mov
shufps
test
in
mov
movsl
mov
lcall
mov
jnp
call
icebp
test
shl
jp
dec
repnz
shr
and
sub
icebp
jge
ds
xor
pop
sub
jmp
aad
push
in
pop
xchg
mov
mov
int
add
mov
dec
shl
nop
movsl
out
add
push
fimull
shlb
xorl
mov
mov
pop
mov
bound
outsb
cmp
scas
nop
dec
push
mov
nop
pop
cld
shlb
xchg
cmp
arpl
pushf
ljmp
movsl
mov
enter
rorb
repnz
fs
imul
inc
cvtps2pi
les
sub
add
addr16
rcrb
pushf
dec
cmc
int
jo
push
sbb
ror
mov
adc
ds
aas
push
push
movsl
adcl
adc
je
pusha
cwtl
arpl
xchg
add
test
push
sub
idivl
shll
mov
leave
jnp
lods
inc
sub
fcoml
dec
cwtl
push
jge
addl
popl
div
jg
lock
pop
mov
pop
outsb
fisttpll
and
in
mov
insb
cltd
jecxz
stos
xor
pop
std
pop
insb
push
push
dec
pop
addl
aad
test
movsb
cs
adc
xor
sbb
adc
sub
xchg
outsl
sub
movsb
dec
das
mov
cmpsb
fiadds
cltd
loop
call
jne
cmp
fiaddl
cs
xor
lods
fildl
mov
mov
sar
cmpsb
lock
push
ret
and
std
cmc
and
cmp
fdivl
ljmp
leave
mov
mov
sub
loopne
dec
add
pop
lods
mov
fwait
sbb
cmp
xchg
jae
dec
fwait
mov
dec
push
ret
jmp
adc
cld
pop
testb
sahf
add
adc
imulb
stc
cwtl
insl
sub
mov
loopne
sub
xor
hlt
cltd
push
fcompl
fimuls
sub
mov
sbb
cmp
adc
add
rol
filds
push
ret
sbb
dec
leave
in
and
in
xchg
pop
mov
std
push
xchg
cmpsb
das
loopne
mov
imul
inc
jmp
xchg
sub
sbb
es
inc
fildl
loopne
add
inc
mov
or
adc
mov
jp
cmp
out
pop
jb
inc
lahf
lcall
mov
out
imul
std
es
lods
push
sub
rcll
in
dec
xor
add
je
aam
xorb
imul
or
arpl
stos
rcll
lods
mov
xlat
in
jns
add
imul
dec
rcll
push
jno
inc
mov
ja
inc
cmpsl
in
scas
imul
or
lahf
push
fsubrs
into
sbb
add
loopne
les
lods
jmp
push
sbb
ja
jae
jmpw
rorl
jo
mov
or
ja
push
stc
cmp
xor
movsl
sbb
adc
mov
adc
sbb
mov
cltd
jg
sub
in
adc
arpl
inc
mov
pop
int
les
lock
inc
mov
push
mov
mov
ret
cmpsb
push
addr16
imul
rorb
out
scas
les
lods
adc
call
add
mov
mov
xchg
js
mov
mov
ljmp
or
fdivrl
xchg
and
pop
jge
jp
cmp
add
fnstenv
aaa
mov
lea
imul
and
add
inc
adc
mov
addr16
mov
out
lea
stc
in
cmp
push
nop
aas
mov
jbe
or
pop
mov
lock
in
sub
pop
stc
jb
mov
dec
dec
insb
sti
scas
stos
int3
loope
push
sbb
cld
mov
or
cmc
mov
cmpsl
clc
iret
xor
push
imul
mov
in
out
jbe
and
ljmp
sbb
jo
outsl
insb
iret
fidivrl
xor
mov
mov
leave
xchg
aam
lahf
pusha
xchg
pushf
sbb
mov
repz
rcl
js
ret
adc
data16
popf
mov
jb
jns
xlat
stc
mov
sub
mov
andb
sahf
add
scas
in
xor
mov
mov
loopne
xlat
popa
pop
mov
daa
and
sub
ret
hlt
push
jb
dec
mov
and
jnp
mov
xor
mov
mov
ret
dec
cli
inc
xchg
and
mov
or
lods
fldl
sub
cltd
push
es
push
arpl
imul
inc
aaa
into
jg
dec
mov
std
add
and
push
lret
xchg
cs
loope
xor
mov
test
xchg
ja
mov
mov
aam
hlt
or
mov
dec
or
jl
jae
mov
xchg
sbbl
loop
sbb
fwait
lds
or
cmp
nop
mov
out
sbb
pop
sarl
icebp
test
test
fcomi
cmpsl
xchg
ss
add
push
sbbl
divb
sbbl
dec
mov
push
sub
in
es
mov
jb
push
sbb
fidivl
popf
pop
add
orb
pop
sbb
cmpsl
sbb
cmp
sub
jecxz
sarl
xchg
mov
pop
lcall
add
dec
loop
mov
popf
repz
rcrb
push
adcb
lahf
insb
add
push
leave
xchg
mov
sarb
inc
mov
xchg
xor
mov
lea
adc
fildll
dec
outsb
cwtl
jb
stc
repnz
das
lods
in
mov
pop
push
int
icebp
stos
jle
push
mov
mov
dec
xor
mov
fnstsw
cmp
or
cld
aas
jle
xor
insb
mov
lahf
jbe
into
mov
adc
pushf
out
adc
insl
test
iret
outsl
mov
das
sbb
fsubl
cmc
lret
cmpb
roll
mov
cmp
mov
outsl
cltd
jno,pt
jge
out
jns
loop
ja
xor
push
sbb
mov
mov
arpl
fdivrp
in
cmp
orl
leave
push
push
xchg
std
jno
jmp
push
jns
rcr
jge
inc
adc
sti
inc
push
xchg
int3
dec
jl
pop
sub
xor
pop
sahf
test
mov
fisttps
adc
xor
push
es
sahf
repnz
xor
outsl
outsl
jnp
sub
jle
mov
or
and
les
push
and
cmc
push
daa
xchg
cmpb
cmp
mov
into
mov
aad
data16
mov
loope
movsb
lret
adc
ljmp
lea
loope
mov
addb
mov
push
sub
ret
push
popf
imul
daa
and
mov
dec
inc
mov
arpl
or
adc
jns
les
je
es
aad
add
add
lret
leave
sub
insb
jnp
mov
mov
aad
daa
mov
mov
xor
cltd
dec
push
orl
or
xor
out
cwtl
sti
lret
mov
cmp
xor
out
jb
pop
xchg
xchg
data16
ljmp
lahf
and
pop
les
pop
pop
xor
test
or
mov
sub
cmp
call
mov
pusha
adc
dec
mov
out
mov
sub
inc
sub
cmp
loope
fsincos
xchg
movsl
adc
test
rorl
js
pop
jo
pop
xchg
and
fisubrl
adc
pop
sub
in
fcoms
pop
and
add
xchg
cmp
test
popf
repz
pushf
cmp
ret
outsb
loop
adc
das
and
and
outsb
jb
cwtl
ficomps
push
jo
mov
xor
sti
jae
mov
pop
and
sbb
mov
mov
mov
mov
decl
fs
aad
insl
and
lret
mov
shl
mov
cltd
and
lcall
xor
popf
stos
pop
in
popa
fiaddl
lret
leave
aad
sti
aam
sahf
popf
xlat
adc
hlt
adc
jmp
out
xlat
repz
nop
jp
xor
mov
test
mov
ds
js
mov
ja
hlt
or
repz
call
sbb
sarb
inc
pop
inc
mov
icebp
xlat
push
mulb
leave
cs
mov
and
int
sub
mov
sbb
imul
jle
imul
repnz
rcll
movsb
fstps
fnsave
rcrb
fidivrs
mov
rclb
dec
test
add
push
mov
bound
pusha
notl
dec
fcompl
dec
xchg
subb
jb
lahf
pop
xor
movsb
inc
add
lea
fmul
add
pop
xchg
adc
mov
dec
xchg
gs
and
adc
or
jb
cmp
mov
push
inc
mov
sbb
pop
adc
and
mov
fdivs
or
mov
mov
leave
push
and
sbb
in
mov
fdivrp
mull
add
mov
pop
sub
dec
aas
jp
cmc
sub
vhsubps
in
jmp
dec
cmp
push
inc
aaa
push
cs
bnd
lock
int
inc
mulps
xchg
mov
cltd
mov
in
mov
add
out
cltd
xorl
jl
and
or
push
dec
ds
xchg
add
push
shlb
fucomip
in
sbb
pop
cmp
mov
cmpsl
daa
sub
filds
out
lcall
mov
lods
les
sub
dec
sti
in
andl
adc
sbb
fidivl
sbb
shll
ja
dec
mov
movsl
or
add
ret
or
insb
adc
lods
nop
ljmp
lret
add
hlt
mov
ret
push
xchg
pop
out
pop
sub
dec
outsl
jb
lds
pop
lock
dec
cmc
cmc
iret
and
push
icebp
inc
sti
repnz
and
push
stos
in
fistpll
test
adc
je
jno
mov
or
movsl
les
ss
xor
lock
xchg
addr16
jno
fs
pop
imul
mov
jne
pop
hlt
push
dec
xchg
cmp
push
rorb
pop
pop
sahf
xor
xor
ljmp
lock
mov
dec
pop
lods
into
mov
cmp
adc
jge
inc
arpl
imul
and
popa
xchg
jg
std
mov
xor
mov
jmp
mov
lods
gs
iret
not
xchg
push
stos
rcll
jnp
pop
in
adc
mov
dec
into
push
pop
fdivrs
xchg
pop
fincstp
ffree
gs
mov
xchg
in
loopne
rolb
sub
cmp
sub
jno
ds
out
pop
int3
nop
icebp
ljmp
push
ja
js
add
sbb
xor
sbb
fdiv
mov
js
jecxz
jmp
aad
xor
pop
add
mov
imul
testb
lret
pop
mov
inc
mov
push
clc
mov
mov
test
mov
mov
and
lock
in
pop
mov
fmuls
lahf
pop
mov
cmc
pop
out
dec
cmp
mov
or
add
cld
out
adc
pusha
sbb
imulb
dec
hlt
adc
and
in
cmpsb
jmp
sbb
loop
xor
mov
cmp
dec
cld
rorl
push
inc
shl
mov
cmpsb
sbb
divb
sub
test
sbb
loope
xlat
xchg
dec
mov
sub
dec
icebp
scas
dec
insb
mov
xchg
sahf
sbb
mov
je
jecxz
pop
xchg
enter
push
dec
adc
mov
js
and
ds
sbb
or
sub
jb
pop
add
adc
fwait
inc
pop
push
jae
repnz
dec
hlt
std
or
test
xchg
push
adc
inc
jns
cmp
sbb
movsb
adc
inc
push
mov
call
dec
push
data16
and
ljmp
gs
mov
mov
dec
xor
rcll
sub
loop
jno
sbb
jp
push
scas
jge
cmp
dec
xchg
aaa
jge
in
and
stos
jmp
cld
jmp
xor
rclb
inc
sahf
hlt
cmc
mov
dec
fnstenv
pushw
and
in
pop
mov
cmp
enter
leave
inc
dec
lret
aas
push
cmp
sahf
subb
jg
xor
push
xchg
mov
shr
inc
inc
xor
pop
mov
add
xor
jge
xlat
sub
adc
mov
rolb
adcl
lods
rorb
das
cmp
lods
xchg
or
mov
lds
inc
cmpsl
xor
mov
sbb
push
cwtl
int3
push
lcall
cli
mov
mov
xorb
cmp
dec
outsb
les
and
leave
xorb
jae
jo
add
pop
jno
subb
push
inc
imul
aaa
ror
ja
cmpsl
pop
lcall
mov
xchg
ds
sti
imul
data16
je
cmp
pop
cmpsb
lock
mov
mov
outsl
call
push
jne
lods
and
adc
xchg
fdivr
in
push
shrb
push
xchg
sbb
fbstp
iret
addl
das
sbb
xchg
mov
xchg
lea
insb
sarl
testl
push
int
adc
jecxz
mov
repnz
cmpsl
stos
jg
mov
fcoml
adc
adc
cwtl
dec
add
pop
mov
movsl
xor
mov
rolb
pop
cmc
clc
into
idiv
mov
loopne
dec
adc
sbb
fwait
repz
test
sbb
inc
sbb
insl
xor
out
add
nop
push
xor
add
mov
jmp
cmp
cltd
push
xchg
xchg
push
xchg
test
aaa
mov
dec
sbb
rorl
inc
popf
push
xor
loopne
arpl
add
and
and
mov
cli
loopne
fnstsw
fistl
out
adc
inc
xor
faddl
and
push
sub
jp
lock
push
push
jnp
and
cmpsl
mov
or
out
shlb
test
movsl
movsb
andl
mov
adc
dec
push
popf
jg
shr
mov
inc
mov
jp
call
arpl
mov
push
jp
sub
nop
jmp
sub
insb
pop
les
test
mov
or
push
or
or
adc
sarl
cmpsl
adc
xor
rclb
stc
out
mov
stc
xchg
iret
ds
push
mov
out
or
pop
jmp
or
xchg
add
test
shl
push
sar
add
cli
push
xchg
or
sbb
add
ss
inc
test
pop
xor
repnz
pop
or
ds
or
jmp
fcoms
push
sub
and
jecxz
add
test
mov
enter
sub
pop
mov
cmpsb
and
jb
adc
jge
je
push
popf
xlat
cmp
jmp
fs
cmp
pop
xchg
sbb
and
in
dec
xorl
cmp
mov
adc
data16
mov
mov
jbe
cmp
mov
fdivp
daa
out
push
movsl
dec
mov
out
inc
adc
pop
cli
pop
scas
pop
mov
cmp
fbstp
push
adc
xchg
add
push
mov
or
loope
out
int3
push
lret
scas
push
out
inc
inc
pop
loope
test
bound
or
std
push
push
icebp
fmul
stc
ds
jb,pt
or
jmp
mov
inc
imul
aam
add
sbb
test
cmp
mov
jl
cli
aam
inc
stos
and
gs
gs
aam
pop
popa
or
cmpsb
in
loop
pushf
shrl
push
jle
inc
mov
std
dec
pop
mov
cmp
push
testl
sbb
mov
rorl
pusha
mov
sarb
je
mov
pop
sub
mov
cli
imull
into
dec
cmpsl
mov
movsl
test
popa
in
outsl
subl
in
pop
mov
aas
mov
push
ljmp
jl,pn
cmpsb
cs
out
cmp
mov
pop
adc
int
shl
cltd
cmp
jl
leave
xor
jg
sub
fidivs
sbb
push
iret
mov
mov
mov
inc
or
shlb
in
insb
cmp
push
lock
inc
inc
sar
or
repz
jne
or
dec
mov
stos
xchg
xor
in
push
jne
aas
pop
mov
cld
adc
xchg
arpl
mov
sbb
enter
push
push
lods
and
mov
movsl
push
or
and
fisttps
test
addb
cs
push
push
aam
xor
loope
addl
cld
xor
inc
adc
pop
pop
cmp
pop
inc
jno
lods
mov
lret
inc
sbb
mov
fldcw
pusha
jle
dec
xchg
xlat
xchg
mov
rorb
out
outsb
loop
in
lods
cltd
int3
icebp
inc
enter
jmp
push
rcl
and
inc
adc
cmp
jne
cld
dec
xchg
iret
outsl
xor
mov
mov
mov
or
jge
shlb
shlb
pop
xlat
sti
and
cmp
loope
aas
lret
fmuls
mov
sahf
mov
mov
es
pop
add
mov
sti
dec
xor
lock
jo
jecxz
jl
push
or
jns
and
insl
test
idivb
scas
add
fstpl
mov
movsl
rorl
xor
dec
insl
inc
add
sbb
sarb
inc
cmp
lret
inc
sbb
and
out
je
cli
inc
mov
out
lahf
aaa
inc
mov
mov
adcl
or
addr16
pop
inc
movsb
imul
add
nop
xchg
aad
lock
jle
jmp
xor
xor
cmp
stos
mov
jnp
mov
out
lds
mov
cmp
in
adcl
stos
and
xor
adc
lock
addr16
fiadds
rcll
jae
addr16
dec
dec
shlb
cltd
imul
xchg
scas
mov
es
mov
ret
loope
push
fsubrs
dec
bound
in
xor
dec
cmp
hlt
inc
enter
stc
sbb
push
enter
sub
xchg
and
push
rcll
fs
out
sbb
loop
push
cltd
sahf
mov
xor
sarb
jne
aas
sarl
cwtl
mov
out
sub
jno
movsb
jge
push
sub
cmc
movsl
push
jmp
rol
jl
push
push
jmp
mov
sbb
leave
mov
sub
add
adc
jecxz
fdivrs
arpl
push
jb
cmpsb
mov
xchg
mov
sub
nopl
fidivrs
daa
mov
inc
xor
decb
enter
push
notb
popf
jbe
pushf
or
mov
outsl
mov
inc
sahf
aad
mov
lock
mov
jmp
xchg
je
roll
shl
xor
or
push
mov
cmp
mov
mov
ja
stc
lcall
and
add
loope
lret
adc
dec
fbstp
lock
ror
or
and
lods
fsubl
cltd
loopne
je
jmp
je
jge
out
mov
in
enter
pusha
icebp
inc
jle
mov
lods
jo
mov
lret
jns
mov
stc
xor
ficompl
or
ljmp
pop
popa
in
sahf
xor
mov
or
loopne
mov
daa
sub
lods
dec
mov
mov
pop
xchg
jae
loopne
out
fistps
pop
fimuls
pop
push
push
dec
sahf
sbb
out
arpl
mov
fwait
popa
rcr
sahf
int3
popa
fstpl
lock
lods
scas
mov
mov
jbe
xlat
int
fnstsw
sbb
cmp
jmp
add
or
mov
push
subl
mov
in
adc
mov
xor
aad
out
jmp
pop
push
add
mov
mov
and
sub
inc
pop
test
inc
xchg
push
and
aaa
xchg
fs
dec
fstpt
clc
js
stc
jg
daa
fldt
and
cmpb
data16
cmp
push
cld
hlt
in
inc
mov
mov
cmpsl
xchg
mov
in
push
mov
pop
aas
or
jecxz
pop
mov
movsb
xchg
test
xchg
add
test
idiv
push
sahf
sub
movsl
jge
mov
mov
sbb
inc
cmp
js
sub
lret
gs
dec
movsb
pop
sti
ret
inc
cmpb
pop
cld
cwtl
hlt
jg
mov
sbb
pop
fcmovne
xlat
popf
or
push
xchg
xor
inc
hlt
dec
addr16
rcll
inc
ret
jmp
mov
inc
pushf
cmp
cmpsb
pop
in
adc
pop
cmpl
jecxz
ljmp
push
pop
jp
and
cmp
into
inc
loope
adc
int3
lret
push
mov
pop
stos
xchg
inc
sarl
jae
loop
xchg
lret
jg
push
add
mov
cmp
movsb
ljmp
push
lea
imul
outsl
fdivs
pushf
inc
or
lds
stos
fists
ret
adc
mov
xor
jne
test
stos
addr16
push
mov
shrl
insb
add
cmpsl
fnsave
into
push
sub
pop
movsb
fbstp
ret
les
std
leave
pop
jge
jbe
mov
in
fstps
pusha
jmp
rcrl
dec
jecxz
cmp
push
and
xor
inc
mov
andb
push
dec
cmp
adc
pop
push
inc
and
negb
cmp
test
js
sub
addr16
lock
test
mov
inc
sbb
jmp
popa
sub
in
imul
inc
imul
add
inc
add
loope
fsubs
jecxz
rclb
rcll
mov
fdivrs
test
cmpsb
cmp
mov
add
mov
add
or
nop
jmp
sbb
jp
in
jp
xchg
add
xchg
es
cmp
popa
sarb
fcompl
es
cltd
dec
hlt
or
jbe
icebp
shrb
push
xchg
movsl
inc
cmp
les
lock
add
add
lods
cmp
push
dec
sbb
in
ss
and
mov
cmp
add
sarl
imul
add
inc
pop
mov
inc
add
out
lds
call
clc
gs
stos
dec
sbb
pop
rorl
mov
dec
mov
mov
shll
rolb
or
hlt
cmpb
sub
or
xchg
stc
sbb
aaa
lret
sub
std
js
in
subb
dec
fisubs
loop
lret
lock
jl
xchg
in
fimull
adc
mov
es
lods
mov
fildll
and
adc
adc
jbe
xchg
outsb
jp
out
leave
out
mov
push
insl
xchg
add
in
out
in
idivl
push
inc
lds
ss
cmp
dec
rol
sbb
sti
loop
iret
fiaddl
sbb
rcll
xor
and
lret
push
dec
fcomi
or
jb
pop
or
pop
or
lcall
sub
and
push
outsl
cmc
rorb
scas
stos
adc
add
mov
frstor
jmp
sub
int3
push
fisubrs
in
sbbl
xlat
pinsrw
fs
addr16
mov
jg
mov
inc
fwait
int3
daa
lods
sbb
les
sbb
push
inc
push
mov
in
loop
mov
jge
out
arpl
xchg
mov
push
xorl
imul
sub
movsl
call
and
shrb
fistl
jbe
dec
sbb
inc
lcall
idivl
sub
frstor
cmp
and
cmpsb
repnz
int
jecxz
inc
sbb
fstps
dec
test
mov
cmp
ss
inc
sub
in
push
in
das
jle
ja
sbb
mov
leave
xchg
test
jmp
mov
cmpsb
fidivl
fsub
xor
and
mov
inc
js
stos
shlb
mov
xor
adc
test
nop
movsl
orb
pop
imul
sub
aas
cltd
adc
in
push
jno
push
pop
sub
out
fiadds
jmp
out
leave
mov
inc
les
xor
pop
ss
xor
fistpl
stos
push
in
jle
out
fwait
mov
movsb
adc
pushl
sbb
in
movsl
enter
scas
mov
cli
ret
aam
lods
adc
mov
insl
cwtl
cmp
add
lods
hlt
fstp
mov
call
lret
add
cmpb
aas
dec
mov
mov
ja
xor
ret
mov
add
imul
xchg
pop
sti
push
dec
jne
in
out
imulb
push
fdiv
test
mov
inc
rcrl
int
call
push
divl
xchg
add
iret
fstpt
dec
and
xchg
mov
test
inc
shrb
mov
negl
mov
hlt
adc
js
jmp
std
shl
pop
fldt
imul
mov
sahf
in
pop
repz
mov
xor
push
pop
dec
xor
pop
loope
sub
add
in
sbb
imul
and
rcll
sbb
xchg
pop
xor
jbe
icebp
pop
push
xor
lret
lds
xlat
jle
lret
fsubs
or
xchg
dec
lea
dec
scas
jecxz
sbb
mov
jge
cmp
cmp
lcall
xchg
and
fdivrs
push
cmpsl
xchg
dec
mov
les
or
fnstcw
cld
mov
ja
lret
inc
push
movsb
fdiv
dec
in
fucomip
xchg
xchg
adc
stos
je
dec
std
movsl
enter
imul
fnstsw
cmp
sbb
xor
push
lret
aaa
adc
and
stos
cmp
mov
mov
mov
ficompl
jno
dec
pop
popa
outsl
into
or
stos
aad
sbb
pop
fisubl
or
bound
and
cltd
into
cmp
sbb
repz
pushf
cwtl
call
pushf
mov
add
loope
jns
loope
mov
enter
dec
mov
hlt
dec
pop
sbb
orl
pop
pop
mov
das
outsl
fcompl
inc
or
cmp
dec
std
in
add
scas
push
xor
dec
pop
jne
xchg
addr16
cmpsl
test
jo
mov
icebp
sbb
fwait
pushf
clc
popf
sub
push
jns,pn
test
adc
adc
mov
sub
mov
push
push
cmp
push
push
sbb
dec
push
pop
sbb
or
imul
fs
jnp
lahf
and
and
xlat
push
xor
mov
add
add
fwait
and
cwtl
lret
loopne
mov
xor
sub
pop
add
movsl
mov
add
mov
or
push
push
call
iret
in
icebp
pop
add
sub
rcl
xchg
mov
pop
lahf
ret
orb
out
xor
fidivrl
fucom
imul
mov
rcll
mov
pushf
dec
or
adc
push
stos
cwtl
adc
push
test
xor
testb
sbb
enter
xchg
add
inc
inc
mov
pop
inc
mov
mov
mov
dec
cmpsl
sbb
call
inc
or
popf
mov
cwtl
jo
fdivl
insb
out
stc
aas
mov
adc
inc
stos
cmpsb
push
jb
repnz
mov
aam
and
je
sarl
stc
movsb
mov
mov
imul
lods
inc
imul
enter
insb
mov
jp
outsl
cmp
xor
and
inc
add
jmp
loopne
loope
push
shlb
or
cld
sub
sub
inc
cli
lods
mov
fidivl
mov
pop
adc
fisubrl
sub
pop
xchg
mov
adcb
mov
push
rol
inc
inc
clc
sbb
adc
stos
pop
gs
cmp
xchg
xchg
jle
iret
pop
cmpsl
xchg
in
jp
pop
add
push
fwait
pop
inc
pop
cmp
popf
mov
cmp
outsb
xrelease
rcrl
xchg
mov
adc
push
sbb
mov
xor
icebp
xchg
clc
sarl
mov
leave
js
push
mov
mov
pop
nop
jno
pop
repnz
sbb
cmp
fdivl
inc
js
rcrb
xchg
cmpsl
mov
cs
lret
add
int3
sub
push
addr16
xor
inc
lods
adc
cmc
cmc
push
lret
pop
popa
sbb
push
popl
xchg
push
xchg
jno
adc
stc
aad
outsb
sti
jo
cmp
xchg
mov
pushf
cmp
sub
push
jns
ret
gs
incb
push
lea
push
ret
jbe
sub
mov
nop
or
ficomps
xor
repnz
dec
mov
rcrl
adc
mov
neg
dec
jmp
icebp
jp
adc
mov
ja
call
in
xor
sub
add
into
clc
jns
xchg
jge
into
inc
addr16
sub
ja
inc
xchg
test
or
mov
test
mov
lsl
jl
fsubrs
js
sbb
leave
insl
fdivrl
push
xchg
push
pop
icebp
mov
in
xchg
ljmp
in
xchg
mov
inc
je
jbe
cltd
xor
fcmovb
mov
outsl
xor
and
fidivrs
dec
stc
je
sub
jno,pn
dec
mov
fbstp
scas
aad
push
ss
adc
inc
xlat
sbb
inc
and
sbb
mov
mov
int
mov
fbstp
cwtl
inc
shlb
sub
xchg
inc
les
imul
mov
mov
in
jg
std
test
dec
or
adc
outsb
ds
xor
add
es
shlb
adc
call
jns
loopw
or
stos
sbb
les
adc
cmp
or
or
xchg
int3
dec
fidivrs
sbb
call
adc
xor
loop
sarl
mov
jns
lods
or
and
push
sbb
push
sbb
cmp
cmp
shrb
mov
push
adc
sub
insl
into
sub
dec
xchg
sub
sbb
daa
jb
fdivrl
gs
xor
xor
add
dec
jg
inc
and
cmp
jl
pop
addr16
or
fwait
mov
jmp
imul
lds
mov
test
lret
cld
ret
cmpsl
shr
dec
hlt
in
xchg
mov
cld
shll
pusha
or
xchg
sti
popl
lahf
xor
add
mov
mov
popa
cmpb
mov
dec
ljmp
sbb
incb
les
int
xchg
lods
sbb
aaa
leave
ret
lea
mov
cs
pop
cmpsl
mov
mov
xlat
scas
fwait
aam
sbb
or
dec
into
leave
das
mov
test
mov
or
shr
and
cltd
pop
add
mov
pop
cs
fldl
call
adc
or
inc
xchg
xchg
adc
rcr
nop
rclb
outsb
frstor
in
scas
pop
shll
sbb
xchg
or
imul
je
dec
lods
xor
cltd
and
int3
mov
je
mov
sbb
mov
lods
dec
rorl
push
bound
inc
fldenv
mov
cs
cs
pop
push
ja
push
mov
adc
and
das
push
xchg
call
aad
dec
fs
sbb
mov
dec
add
loop
pop
pop
xchg
add
mov
rol
and
in
mov
dec
xchg
fwait
dec
ret
sbb
pop
lret
fs
xlat
loopne
dec
sub
ficoms
inc
mov
xchg
mov
jmp
mov
xchg
shrl
xchg
inc
js
in
pop
mov
lods
jg
sbb
daa
adc
mov
cmp
pop
jne
xchg
dec
int3
jns
ds
sbb
in
mov
adc
pop
jbe
stc
mov
testb
push
mov
cmc
push
fcom
cwtl
jbe
or
das
sbb
dec
mov
dec
and
lret
outsl
stos
push
sub
sbb
cmpsl
divl
repnz
dec
adc
js
test
xor
push
push
pop
es
nop
cltd
insl
pop
or
lods
lds
xor
dec
push
xor
repz
stc
and
or
jge
cmpsb
arpl
push
test
leave
ret
push
in
push
popf
jnp
std
jge
adc
xchg
pop
push
stc
push
add
sbb
mov
pop
mov
int
scas
cli
add
sbb
ja
push
inc
jo
cmp
js
dec
gs
push
xchg
mov
aas
cmpsl
cli
loope
cmpsl
xchg
and
inc
pop
push
push
lods
lret
inc
sub
or
out
gs
inc
out
lahf
not
loopne
xor
in
mov
jnp
inc
jnp
and
push
jge
int3
push
cmovbe
push
dec
stc
inc
fisttps
popa
int3
fsubrl
test
pop
add
hlt
add
out
scas
jmp
out
jl
add
movsb
cmp
xchg
jno
dec
sahf
in
dec
out
add
inc
dec
and
push
pop
cltd
repnz
int
sbbb
push
inc
mov
negb
in
mov
pop
dec
xchg
clc
imul
loopne
into
test
iret
aas
jns
mov
mov
movsb
lods
pop
fsubl
out
adc
xor
add
jb
insb
and
iret
ret
test
enter
jecxz
xlat
xchg
xor
fwait
cwtl
mov
imul
rcrl
enter
xchg
xor
jb
mov
lahf
mov
ja
adc
add
cwtl
stc
mov
in
rcrl
push
loop
or
loope
push
dec
loop
outsl
sbb
mov
mov
push
xorb
stos
inc
mov
inc
xchg
pop
call
or
cmp
test
pop
push
lret
fxch
out
pop
insl
inc
jb
mov
sbb
mov
xchg
cmp
test
aas
xchg
cs
sub
add
jg
mov
jecxz
dec
rcl
cmp
subb
push
daa
fcompl
dec
sbb
xor
in
out
jae
shlb
daa
orl
ja
and
ret
add
xchg
sbb
stc
xchg
mov
dec
in
loope
sub
rol
stos
aas
or
xchg
pop
cmp
out
pop
sub
lea
jnp
mov
xchg
outsb
sbb
in
dec
cmp
call
dec
nop
aam
insb
mov
push
insb
dec
push
xor
xchg
mov
xchg
sub
pop
pop
sbb
inc
push
jl
ljmp
stos
and
cmpsb
sub
jp
idiv
testb
xchg
sub
mov
jb
or
jno
sbb
arpl
dec
mov
fcoms
jnp
div
test
lods
ret
and
cltd
sbb
into
imul
cmpsl
jbe
push
lods
jecxz
and
cld
inc
pop
inc
sti
repnz
outsl
aam
push
lret
push
dec
movsb
mov
sub
xchg
test
jmp
lcall
jecxz
shr
mov
imul
lcall
jle
cmc
mov
adc
jae
leave
jp
addb
aad
fldl
insb
nop
xor
imul
fs
mov
repnz
xor
leave
fidivrl
cmc
and
adcl
or
clc
adc
icebp
lods
and
dec
mov
dec
xchg
popa
xor
xchg
popf
out
cltd
jno
and
mov
mov
fstpl
xlat
inc
test
mov
mov
or
lods
and
jl,pt
mov
cmp
insb
xor
xchg
bound
sbb
sti
into
dec
icebp
enter
loop
mov
addb
fisubl
push
inc
xchg
loop
test
insb
push
adc
xor
in
mov
jo
pmulhuw
jns
inc
mov
cmpsl
dec
insl
push
int3
mov
pushf
and
lods
and
add
lcall
fdivs
lods
inc
pop
rorl
push
test
lods
testb
scas
cmc
adc
and
jle
adc
inc
lret
scas
push
jecxz
mov
repnz
jb
sbb
inc
js
leave
xor
mov
pop
out
sub
test
mov
pushf
dec
sbb
loope
jae
jo
scas
movsb
push
sbb
imul
add
inc
mov
xchg
add
es
inc
fcomi
loope
pop
mov
mov
sub
add
dec
xor
lea
mov
enter
mov
jecxz
mov
enter
jp
imul
ds
dec
sahf
push
pop
das
lret
sahf
mov
sahf
and
cltd
pop
mov
fldenv
jb
hlt
push
cli
dec
pop
adc
ds
mov
mov
sub
jecxz
jge
jnp
xchg
cmc
push
or
lds
cmp
inc
stos
out
andb
adc
sarb
mov
xchg
mov
mov
popa
enter
mov
and
into
sub
add
lret
arpl
cmp
imul
cld
loope
push
das
pushf
mov
aad
add
push
pop
mov
jecxz
nop
mov
out
repz
sarl
cmp
out
xchg
sbb
cmp
ja
scas
xor
sub
dec
orb
or
pop
in
pop
cs
or
nop
jnp
xor
psraw
pop
adc
push
xlat
xlat
rorb
cmc
jecxz
lahf
cli
sti
jge
pop
ret
sub
push
sub
xor
xlat
divl
out
or
fdivrs
and
faddl
xor
es
mov
sub
xor
loopne
nop
out
out
mov
lock
xchg
fsubrl
adc
popf
mov
cmp
and
lret
std
imul
push
popf
out
leave
fadd
mov
push
test
jge
add
pushf
jg
jecxz
call
imul
cmp
movsb
ficoms
jne
inc
xor
mov
add
push
fiadds
mov
mov
add
loope
push
mov
mov
enter
or
push
adc
sarl
mov
gs
fldl
adc
adcl
lret
lock
out
outsb
xchg
scas
stos
lds
sub
loopne
fisttpll
pushf
xor
inc
jbe
lcall
add
movsl
or
in
push
les
js
xchg
push
jns
call
int
cmp
add
test
cmp
lret
sub
ljmp
lods
push
mov
sub
idivl
cmc
adc
inc
ret
ret
popa
adc
and
or
sub
repnz
jmp
push
bound
loope
sbbb
int3
int3
test
gs
jp
mov
adc
xchg
insl
loope
aaa
push
scas
pusha
fidivrs
mov
popl
xchg
push
aas
lret
mov
mov
cltd
insb
mov
mov
mov
dec
bound
jo
lret
pop
insb
das
fs
mov
scas
mov
sub
pop
int3
cmp
arpl
or
sbb
pop
push
aam
ds
cld
inc
iret
cmp
adc
jle
mov
loope
fadds
insb
andl
int3
dec
out
rep
sub
dec
adc
add
popa
inc
outsb
pop
and
xchg
sbb
cmp
push
fxch
push
mov
xchg
xor
xchg
mov
dec
xchg
sbb
js
ret
mov
dec
xlat
or
dec
rcl
lcall
mov
fsubp
sub
aad
outsb
int
cli
xchg
fistps
cmp
mov
sub
dec
sbb
addr16
fsubrs
pushf
es
xor
pop
pop
xchg
xchg
jno
dec
hlt
cmp
mov
lahf
xchg
pop
or
mov
outsl
ret
inc
leave
pop
add
jp
and
pop
push
leave
jg
nop
add
lahf
jb
cltd
mov
aam
cmp
sbb
jno,pt
mov
jmp
out
mov
in
js
push
les
xchg
dec
and
push
jge
or
xchg
fldt
pop
mov
std
stos
andl
in
and
xchg
sar
js
xchg
test
dec
jge
cmp
arpl
dec
pop
aas
ret
and
xlat
gs
mov
xor
push
test
push
repz
movsl
mov
mov
mov
xchg
fldt
sbb
pop
mov
mov
out
push
push
insb
cmc
mov
jb
aad
cltd
loope
and
cmpl
xor
sub
stos
sub
pushf
test
aaa
mov
pop
dec
jo
adc
lret
xor
ret
sbb
arpl
popf
cmp
mov
dec
jecxz
dec
je
pop
dec
insl
jno
mov
dec
sti
lret
cmp
fildl
out
jl
pop
xchg
mov
out
pop
test
mov
mov
mov
mov
notb
push
leave
cmp
push
insl
test
mulb
cwtl
lock
test
test
cmpsb
mov
dec
ljmp
dec
xchg
cltd
adc
xchg
mov
dec
aas
data16
sbb
push
xchg
jb
jge
std
mov
xchg
jmp
xchg
xor
fimuls
and
mov
cmp
sub
in
into
push
xchg
jne
or
andl
shll
sub
ret
adc
adc
sbb
in
adc
jl
xchg
call
sbb
adc
xchg
loopne
or
rcll
cmpsb
pushf
jo
iret
mov
or
stos
movsb
cmpsb
mov
mov
orl
enter
push
jge
xor
push
sub
push
xor
ret
mov
xchg
mov
jne
mov
pop
pop
aas
subb
std
mov
stos
lods
repz
sub
cmp
and
jne
jle
mov
pop
push
jecxz
dec
psrld
fbstp
ljmp
lahf
into
imul
pop
aad
loopne
cmc
das
push
adc
lret
cltd
ja
insl
jnp
pop
mov
mov
arpl
mov
arpl
push
lret
mov
xchg
movsl
push
rcrl
sbb
adc
jp
jecxz
jb
mov
stos
insl
mov
fnstcw
mov
xor
imul
fwait
outsl
jb
jl
cmp
cmpsb
pop
cmp
mov
lods
dec
out
sub
jno
jp
test
shll
mov
sarb
test
test
stc
test
lea
insl
adc
inc
mov
sbb
sub
dec
mov
dec
aas
mov
call
or
ss
and
xchg
pop
aaa
aas
ss
mov
popf
pop
lods
mov
call
aad
ljmp
mov
xor
repnz
jg
push
roll
insl
mov
pop
cld
jl
mov
call
xchg
insb
daa
ds
pop
push
scas
aam
in
sarb
decb
push
cmp
mov
inc
dec
fdiv
xchg
lea
cmp
fnsave
cli
or
sub
jp
push
enter
bound
ja
fnsaves
push
shrl
cmovg
xor
jne
mov
cmp
fs
sbb
mov
aas
lea
ficoml
pop
inc
mov
mov
test
cmp
sbb
xchg
add
mov
jns
push
gs
mov
xchg
fstpt
jne
sub
mov
daa
push
icebp
or
int
mov
sub
add
je
sar
xor
pusha
mov
dec
call
sub
stc
aad
cmp
sub
mov
sbb
push
icebp
cmp
mov
sahf
and
bound
lahf
aas
mov
xor
loop
cmpsl
lods
mov
fimull
sbb
movsb
pop
sar
dec
pop
rolb
inc
sub
mov
mov
mov
lods
cmp
int3
push
enter
dec
fwait
jnp
lcall
testl
push
xchg
push
push
push
loope
outsl
test
insb
push
xchg
xor
jecxz
pusha
jge
daa
cmp
mov
inc
sbb
pop
or
test
mov
lcall
xchg
jnp
cltd
dec
jle
dec
daa
xor
pop
ret
dec
sbb
cmpsl
xchg
add
movsl
cltd
pop
movsl
in
rcl
mov
dec
in
mov
inc
jmp
cmpsb
inc
mov
add
les
add
dec
xor
cwtl
jle
pop
inc
pop
hlt
xchg
movsl
adc
add
push
push
popl
leave
and
xchg
jo
test
xchg
out
gs
pushf
push
sub
inc
lods
pushf
divb
xor
sub
sbb
mov
mov
push
mov
outsl
rcrl
jbe
push
cltd
pop
sbb
pop
sbb
pushf
test
jb
sbb
loope
mov
dec
std
xor
mov
push
or
inc
pushf
out
adc
push
stc
out
cmp
out
add
mov
loop
outsl
pushl
adc
out
dec
negb
insl
lock
pop
popa
or
adc
repz
mov
jle
push
inc
std
subb
dec
movsl
cmp
stc
adc
or
pop
cmpsb
filds
or
jo
add
mov
inc
in
sbb
loope
adc
sub
aad
mov
fstpt
add
and
push
arpl
jle
jl
icebp
mov
xchg
mov
cmpsl
jle
pop
xor
mov
xchg
cltd
jge
dec
repnz
mov
cwtl
pop
ss
aam
or
mov
lock
stos
jg
push
add
mov
adc
dec
in
fnstsw
cmp
mov
mulb
lahf
and
pop
pop
inc
test
push
test
jae
jnp
xchg
iret
mov
loop
sub
push
dec
push
dec
push
daa
aam
and
mov
hlt
out
jl
ret
inc
push
mov
fnstsw
push
cmp
ja
aad
xor
cltd
mov
push
push
lock
push
data16
pop
jb
xor
mov
in
dec
mov
aam
scas
cmp
push
add
cmp
fdivrl
cmpsl
je
iret
xchg
in
sub
cmp
enter
jne
jg
es
cmp
roll
pushf
stos
pop
mov
xchg
push
shlb
xchg
mov
push
shrl
ljmp
ljmp
xor
xchg
sub
mov
mov
mov
sbb
orb
jge
mov
sbb
sar
mov
icebp
pop
lcall
sub
adc
lret
adc
dec
cmpb
int3
shrl
pusha
lods
sti
popa
sub
pop
mov
loope
mov
adc
inc
out
dec
fldt
inc
pop
lods
cmpsl
and
xchg
arpl
push
jb
cwtl
repnz
dec
push
out
data16
insb
push
int
mov
rcl
dec
in
mov
aas
mov
in
lock
mov
pop
ret
dec
xor
sbb
stc
pop
cli
or
and
movsb
fidivl
aaa
and
js
xchg
roll
mov
subl
pop
lods
adc
cmp
movsb
pop
je
dec
mov
mul
in
cli
sub
mov
push
xor
pusha
test
sbb
addl
and
fistpl
clc
out
sbb
mov
push
push
outsl
adc
cmpsl
in
aas
ljmp
stc
popf
cltd
xadd
sub
push
jnp
add
add
push
or
push
addl
mov
daa
add
sub
arpl
scas
jo
scas
mov
or
stc
add
add
lock
mov
inc
movsl
sub
xor
loop
pop
in
movswl
sbb
xchg
repz
jecxz
pop
push
pushf
xchg
mov
jb
enter
lods
sub
jle
jo
popa
or
pop
xor
sub
adc
sbb
xor
in
inc
ds
xor
lret
scas
imul
mov
adc
mov
xchg
ret
push
and
aaa
je
sti
shrb
das
fcmovne
lds
jbe
out
xor
mov
push
cmp
sub
pop
jecxz
pop
movsb
sbb
inc
leave
mov
mov
sub
pop
out
repz
sub
imulb
xlat
mov
sti
add
push
aas
stos
aad
mov
jge
lcall
sub
outsl
jp
add
fmull
dec
sbb
push
imul
cmp
in
movsl
mov
lods
adc
push
add
ja
cwtl
xchg
inc
pop
pop
in
push
push
into
or
out
add
xor
aam
lea
je
out
xor
xor
xchg
add
into
subb
cmp
pop
push
xor
cs
bnd
push
out
add
test
and
push
inc
or
mov
cmp
sub
subl
pop
sub
jmp
pop
lock
nop
jle
and
out
paddsw
inc
dec
pop
push
xchg
xor
mov
inc
pop
mov
jne
cmc
movsl
mov
jb
pop
sub
movsb
insb
push
cmpsb
fsubr
push
and
or
push
mov
jmp
lcall
cltd
sub
icebp
les
fisttpll
mov
stos
xchg
push
iret
data16
jmp
mov
call
loop
jp
add
sbb
lret
ja
popf
cmp
out
push
and
pushf
fisubrl
adcb
mov
test
mov
sub
mov
mov
lods
dec
mov
shlb
out
push
dec
dec
mov
pop
cli
xchg
movsl
adc
loop
dec
xor
inc
daa
sbb
arpl
cmp
push
adc
je
pop
jnp
test
jmp
dec
imulb
mov
mov
stos
xchg
push
in
fdivrs
or
dec
pop
fildl
scas
shlb
test
sbb
mov
cmp
mov
scas
test
shr
aas
movsb
push
pop
testl
insb
add
insl
mov
frstor
call
sub
adc
pushf
sbb
shlb
loopne
aaa
mov
pusha
cwtl
in
jae
cmc
sub
movsl
adc
aas
adc
shl
aaa
xor
sub
shr
or
jb
push
ljmp
cmpsl
imul
jmp
fidivrl
mov
cltd
dec
iret
les
repz
or
push
pop
and
sbb
lret
sarb
or
push
or
pop
sub
jnp
insl
sub
ss
out
mov
mov
in
icebp
bndstx
cmpsb
aaa
data16
iret
or
adc
jnp
repz
orl
sbb
lock
loopne
sbb
in
xchg
insb
mov
mov
and
cmp
rcrb
pop
xchg
adc
out
stos
idivl
je
cmp
scas
out
inc
inc
pop
sbb
nop
jb
jo
in
adc
cmpsb
clc
call
lcall
inc
add
test
nop
pop
inc
cmpsl
addr16
stos
mov
cmc
lea
sub
cmp
push
cltd
jp
movsb
andb
push
loopne
add
aad
inc
cmpsb
mov
push
hlt
decb
cltd
lds
sti
pop
ds
add
mov
dec
cwtl
iret
lret
dec
or
mov
sub
cmp
icebp
lods
insb
fdivp
or
jl
xchg
jae
insb
xchg
loop
sub
adc
add
imul
sub
mov
inc
shrl
in
jg
sbb
test
or
adc
popf
jp
inc
outsb
js
dec
jne
or
mov
mov
xchg
into
or
jp
rorb
adc
pop
sahf
sbb
popa
aad
sub
cmp
jae
jne
stos
sbb
ret
xchg
rorl
adc
lcall
mov
and
sarb
sbb
and
test
push
pop
mov
out
xchg
cmp
iret
daa
shlb
lods
stos
stos
xchg
jae
mov
jbe
mov
pushf
mov
stos
push
add
call
cmpsb
test
rol
dec
cmp
ja
shrb
push
jl
xchg
push
add
movsb
xchg
cwtl
sbb
or
jp
mov
mov
mov
adc
insb
jae
repnz
data16
jmp
mov
inc
sub
daa
and
lds
mov
sti
mov
shlb
dec
loop
push
jl
int
addr16
fcomps
fnsave
clc
cmpsl
out
iret
in
dec
fwait
pop
pop
mov
repz
adc
pop
or
adc
add
adc
mov
popa
adc
loopne
lods
lds
scas
push
jne
movsl
ret
shrb
xchg
lods
imul
mov
sbb
and
sbb
imul
and
xchg
jp
fidivs
sbb
fdivl
dec
sub
bound
ja
cmp
mov
mov
dec
adc
das
xchg
out
in
mov
jno
push
movsb
mov
sbb
aam
test
sub
and
pop
jns
stc
dec
jge
or
mov
pop
fcomi
xchg
fistpll
loope
xor
das
test
jnp
push
es
iret
adc
fsubrl
xchg
jo
es
lock
popf
repz
pop
cmp
add
mov
stos
pop
inc
ss
inc
test
cld
fidivrl
adc
iret
mov
xchg
jmp
adc
mov
out
jae
mov
push
mov
out
mov
sahf
and
inc
dec
int3
test
enter
int
das
ljmp
scas
xor
mov
pop
sbb
lods
jmp
sub
dec
jle
sub
sar
mov
gs
cmp
cmp
xchg
out
test
lea
lahf
adc
movsl
mov
cmp
pop
aas
adc
cltd
cmp
enter
push
dec
nop
inc
xchg
imul
mov
pop
rcr
fsubrs
pop
popf
sbb
or
repz
dec
push
aas
mov
xchg
out
add
icebp
push
out
vpavgb
fstpt
leave
adc
mov
out
jp
out
in
jnp
dec
push
pop
or
xchg
mov
push
lret
scas
lret
out
out
xchg
popf
inc
cld
js
jge
lret
jmp
push
lods
mov
xchg
xor
loope
mov
xor
or
enter
inc
cmc
arpl
not
push
pushf
fs
add
and
xchg
aaa
adc
shl
xchg
lea
adc
repnz
or
xor
sub
and
xor
cmp
pop
jg
mov
cmp
mov
in
inc
mov
xchg
mov
sbb
in
test
fmulp
test
decb
nop
insl
mov
sbb
xor
xchg
jne
cmp
sub
mov
out
mov
xor
inc
xchg
push
lods
dec
mov
sbb
shrb
jae
push
mov
or
or
xor
repz
push
icebp
lods
add
repnz
mov
icebp
ja
sbb
sarl
and
outsl
cmpsb
pop
cmpsl
push
mov
cs
out
mov
les
cmp
loope
mov
mov
fdivl
stos
add
xor
xchg
cli
mov
xchg
outsb
xchg
dec
insl
jecxz
jae
scas
sub
icebp
cmpsb
dec
pop
daa
fs
cmp
es
mov
push
fwait
sub
mov
iret
cmp
movsb
lea
loope
dec
add
mov
inc
cltd
push
in
lret
or
cmp
fldcw
pop
pop
vpor
jbe
rorb
and
xor
inc
pop
outsb
clc
cmp
push
push
dec
and
icebp
daa
xor
adc
jl
mov
sub
push
mov
out
roll
xorl
pop
push
das
sbb
or
pop
jg
das
jg
cwtl
es
mov
jne
cmp
mov
adc
jb
push
nop
push
jae
mov
fmull
in
mov
dec
adc
pop
jg
shrb
das
scas
pushf
adcl
lret
cmpsl
pushf
scas
aad
push
fildll
out
imul
ret
pushf
jmp
add
cmpl
gs
xchg
test
cmp
stos
inc
out
add
xchg
pop
sub
int3
sub
fwait
pop
aad
inc
fldt
sub
mov
xor
jns
stos
pop
sbb
out
adc
movsb
aad
jle
xchg
cmp
popl
add
mov
andl
int
xor
xlat
cmpl
mov
scas
adc
in
pop
push
xchg
mov
cmpsl
xor
mov
insb
mov
fistpl
sub
lret
sub
notb
inc
or
mov
pop
nop
mov
sbb
jno
stc
iret
or
sub
dec
outsl
sub
push
pop
jmp
adc
xor
test
test
dec
or
mov
pop
mov
or
data16
loope
shlb
rcrb
push
inc
push
loope
loope
enter
push
lret
sbb
cs
int
mov
je
test
js
pop
repz
mov
sbb
xchg
rorl
fsts
out
lods
outsl
jl
mov
aaa
xchg
ss
jnp
popf
pop
mov
mov
std
fnsave
inc
add
in
mov
xchg
sub
mov
or
notl
mov
setbe
mov
or
inc
es
shr
fsub
or
in
adc
lret
shlb
xchg
sbb
ret
or
adc
mov
outsl
adc
and
xchg
mov
repz
enter
or
dec
shlb
repz
ljmp
mov
jns
imul
insb
push
in
sarb
mov
popf
out
push
test
andl
ficoml
pop
mov
cmpsb
cltd
push
sbb
mov
subl
mov
adc
cwtl
repnz
mov
mov
outsb
lcall
push
jmp
rolb
movsb
loopne
and
je
pop
dec
push
mov
or
ret
fmull
mov
lods
push
in
pop
outsb
adc
xchg
loope
cmpsb
sub
fbstp
outsl
popf
out
push
xor
stos
xor
xchg
clc
test
dec
insb
adcl
dec
fucom
xchg
imul
enter
mov
rcl
shr
adc
jne
stos
imul
xchg
ss
je
sub
repz
out
jne
xchg
test
cltd
movsb
jb
sub
mov
and
cmpsl
xlat
push
push
shrb
xor
pop
lahf
jno
xlat
pop
adc
in
adc
jmp
or
adc
test
arpl
fcmovne
and
stos
push
dec
sbb
out
adc
das
pop
int
lret
dec
sbbb
out
pop
aas
add
mov
add
cmp
push
cmpsl
adc
pop
clc
mov
mov
shll
and
pop
push
pop
xchg
xchg
movsb
jno
lahf
mov
and
jp
cmp
adc
addr16
push
push
xor
cmp
sub
stos
lahf
or
in
jge
dec
pop
lahf
inc
push
jge
fdivl
xchg
ss
orb
jmp
lods
push
push
lahf
cld
lret
dec
cmp
icebp
or
sti
mov
mov
pusha
je
jne
and
cmpsb
stc
mov
gs
add
mov
test
mov
leave
subb
sub
xor
mov
aad
xchg
xchg
push
mov
int3
add
movsb
ja
adc
pop
lret
jno
jle
pop
pop
add
movsb
adc
mov
aam
pushf
cli
xchg
pop
in
test
mov
pop
xorb
rolb
popa
fcoml
jnp
mov
sti
in
cmp
mov
mov
pop
mov
scas
mov
movsb
into
inc
enter
xchg
int
xchg
pop
fiaddl
or
add
cmpsb
xchg
aaa
or
sbb
out
cltd
sti
push
stos
fistpll
repz
jb
bound
movsl
jp
sbb
cmc
inc
imul
orb
cli
cmp
adc
and
inc
mov
push
dec
getsec
daa
adc
mov
das
addb
hlt
popa
and
inc
jmp
scas
loopne
sbb
ficomps
mov
pop
shrb
inc
or
jno
push
movsl
fsincos
addb
mov
movsl
test
shlb
and
movsb
add
outsb
adc
jno
mov
jnp
push
outsb
mov
mov
mov
cmpb
xor
sbb
mov
add
fistl
mov
xorl
out
xor
iret
adc
sbb
or
lahf
flds
ret
pop
into
mov
fcmovnbe
fdivrl
dec
jge
adcb
jecxz
jg
mov
lds
add
jle
push
sub
push
jg,pt
push
adc
dec
scas
mov
sub
fldt
or
adc
mov
pop
pop
add
adc
in
sbb
mov
cmp
test
fildl
mov
loopne
sbb
insb
data16
movsl
fisttpll
fbld
lcall
test
push
test
mov
not
cmp
xor
fbld
xchg
mov
jle
mov
mov
dec
sbb
jecxz
faddl
cmpsb
rclb
stos
shrb
sbb
mov
jg
scas
clc
push
aaa
hlt
inc
or
cmp
mov
fwait
outsb
and
je
jbe
sbb
js
push
mov
fwait
cli
push
add
arpl
pop
push
or
arpl
insb
pop
xchg
stc
mov
inc
into
cmp
stos
sti
shll
loope
cmp
xor
imul
sub
loop
or
mov
jnp
ficomps
hlt
xchg
add
fldl
mov
sarl
imul
ss
dec
cmpsl
in
mov
test
stos
call
stc
lahf
cmp
pop
adcb
mov
movsb
jmp
jp
fs
pop
adc
xchg
mov
cmpsl
and
icebp
fldenv
and
sbb
add
addr16
dec
or
cmpsl
adc
aam
or
push
adc
pop
sub
in
xchg
scas
add
lock
decb
jnp
fdivl
xchg
daa
jns
andb
xor
cli
pop
stos
insb
push
ret
push
ljmp
sar
outsl
idiv
int3
dec
insb
fwait
mov
out
aas
add
loop
ss
aaa
dec
adc
jno
pop
aas
adc
jno
and
int3
loopne
orl
lret
sub
test
popa
jg
dec
add
mov
movsb
and
sub
enter
adc
fs
xchg
adc
sahf
and
pop
dec
rcrl
mov
scas
shlb
movsb
dec
cmp
inc
dec
xor
cs
mov
les
fwait
sbb
lret
hlt
xor
jo
and
or
sub
xchg
cmp
mov
je
cwtl
out
call
lcall
xchg
jmp
scas
or
test
and
ljmp
test
push
gs
push
clc
inc
pop
mov
mov
xor
mov
sti
loop
xor
mov
mov
sbb
stos
jne
mov
xchg
jnp
pop
add
and
push
jno
faddl
loope
dec
jno
pop
xchg
and
in
xor
in
lds
repz
rolb
jecxz,pn
andl
lock
dec
xchg
xlat
mov
call
es
mov
inc
popf
mov
andl
jl
cld
mov
push
andl
outsl
add
adc
mov
jne
cmp
pop
gs
jne
rorb
popf
std
sbb
push
adc
xchg
or
push
loopne
cld
pushf
pop
push
xor
push
sbb
and
push
jg
into
lahf
xor
mov
scas
test
imul
fs
xchg
cmpsl
jecxz
imul
int3
push
out
cmpsb
insl
out
sbb
lret
rolb
test
mov
stos
repnz
enter
js
mov
mov
dec
xchg
jo
aas
xor
inc
sarb
mov
dec
mov
and
cmp
popa
cli
add
rcrb
jb
setns
pop
mov
jo
in
xchg
or
cmp
adc
outsl
int3
sbb
movsl
inc
add
jnp
pop
test
or
inc
push
mov
dec
inc
jne
cli
std
nop
popa
xchg
mov
add
repz
pushf
bound
sbb
jnp
hlt
xchg
xor
cmp
or
rorb
jge
stc
outsb
jbe
sbb
mov
jb
ja
mov
cld
rolb
decl
xor
adc
lods
addr16
adc
je
inc
je
addr16
repz
pop
rep
sbb
mov
adc
lock
push
pop
pop
js
adc
pop
mov
adc
insl
jl
sbb
jne
out
ljmp
test
push
rolb
mov
mov
mov
pop
test
aas
xlat
in
mov
push
imul
mov
push
pop
mov
jle
sbbb
push
xchg
mull
mov
push
cmp
lods
jb
xchg
xor
sub
test
sbb
jmp
mov
movsl
stos
jmp
adc
dec
orb
inc
push
popf
mov
mov
stos
aas
jg
movsl
jmp
jge
sub
movsb
push
popa
mov
ret
mov
dec
in
or
dec
lock
in
arpl
icebp
testl
scas
in
sub
jno
les
jb
int
std
in
dec
add
jmp
out
andl
sbb
lods
pop
jecxz
into
fdivs
mov
pop
mov
movsl
adc
lcall
lcall
testl
jg
outsl
mov
pop
fldenv
loope
outsl
pusha
fnsave
adc
xor
cmp
dec
ret
add
push
mov
inc
adc
stos
mov
loop
cmc
cmp
lahf
pusha
ret
cmc
mov
xor
lret
sahf
push
jl
jae
icebp
xchg
mov
jo
pop
outsl
and
cmp
sbb
push
dec
gs
in
push
jmp
aam
int3
dec
push
bound
je
add
imul
fs
pop
outsl
divl
fwait
addb
xchg
popf
xlat
cwtl
iret
pop
ja
sub
adc
int
sbb
inc
int3
mov
pop
out
xlat
add
pop
loope
push
or
xor
test
mov
xorb
cmp
xchg
cwtl
sub
xchg
mov
mov
mov
pop
push
orl
cli
loop
add
cmp
xor
clc
and
in
pushf
test
in
pop
cmc
out
clc
add
dec
fisubrs
pop
xchg
push
rcrb
fsubrp
cmp
into
daa
xchg
daa
xor
ja
dec
mov
adcl
rorb
shll
adc
sbb
call
into
fstl
ljmp
icebp
lods
push
test
push
subb
sbbl
inc
sub
lock
mov
ror
sbb
mov
push
dec
pushf
hlt
hlt
insl
cmp
jp
shlb
lahf
add
movsl
push
lods
inc
fxch
fldcw
mov
in
insb
daa
push
sbb
movsl
mov
sub
movsl
adc
fsub
stos
dec
add
out
mov
push
stos
pop
mov
out
add
loopne
mov
int3
lret
gs
lret
test
xchg
shl
push
cmp
enter
jno
and
push
sbb
push
xchg
test
arpl
or
xchg
das
das
rcl
hlt
lods
iret
mov
dec
int3
or
into
cmpsl
cmc
mov
add
cld
inc
stos
mov
outsb
call
insl
inc
push
or
adc
pop
fimull
pop
cmp
sub
add
mov
jecxz
jb
mov
mov
dec
xor
faddl
mov
notl
push
cli
cld
imul
test
mov
jo
and
pop
idiv
cmc
call
sarl
mov
xchg
xchg
mov
push
adc
inc
or
in
ret
lea
sbb
sti
adc
imul
xchg
and
outsl
xor
push
mov
icebp
in
jns
in
push
push
pop
jp
pop
scas
aas
mov
push
dec
int
mov
popa
sbb
jne
in
insb
push
movsl
aaa
jo
pop
cmpsl
es
pop
and
sarb
stos
stos
cmp
sahf
jbe
sbb
shl
jbe
sub
mov
sub
test
lods
cmp
into
hlt
jge
jg
jns
xchg
jp
ljmp
push
shlb
fs
sub
dec
mov
pop
in
jns
jae
dec
cmp
in
add
cwtl
stos
inc
cmc
clc
xlat
pusha
out
sub
push
movsb
or
inc
push
daa
inc
fucom
pop
popa
mov
bound
arpl
addl
inc
xchg
mov
jae
xchg
cmp
shlb
adc
or
sti
std
cltd
pop
aas
mov
adc
adc
inc
lret
lea
in
cli
mov
in
push
pop
rolb
push
mov
scas
ficoms
jp
sub
aaa
sub
sbb
and
sbbb
ljmp
std
xchg
sarl
dec
in
add
stc
or
repz
test
and
stc
xchg
movsl
mov
inc
push
pop
loop
sbb
jmp
jae
ret
mov
dec
mov
ret
loop
mov
cltd
xchg
cs
mov
shl
mov
je
and
fsts
stc
xor
enter
pushf
inc
push
push
jae
dec
push
lock
cltd
into
aas
cmpsl
fst
xchg
cmp
xchg
mov
es
and
fwait
mov
insb
add
orb
aam
mov
xor
ds
dec
push
sbb
je
loope
jno
sub
mov
mov
mov
jb
jp
adc
mov
insl
jnp
int
dec
fisttpl
push
inc
inc
pop
and
sub
cli
or
mov
or
sub
inc
and
jno
call
lods
push
pusha
fcompl
arpl
enter
add
push
cmp
push
btr
bound
repnz
sub
movsb
pop
fs
jp
or
xor
adc
clc
stc
mov
movsl
das
call
mov
dec
popa
sarl
lods
dec
jmp
cmp
xchg
mov
iret
repnz
push
lods
fcompl
es
hlt
cwtl
inc
int3
repz
or
loop
or
or
adc
addl
cs
dec
movsb
dec
mov
lock
jecxz
inc
adc
dec
mov
ficompl
xchg
push
mov
in
dec
sarb
pop
pop
lock
or
scas
dec
movl
mov
sbb
enter
mov
jle
fbld
mov
mov
mov
jmp
test
mov
push
xor
movsl
push
mov
push
cmp
test
sub
sbb
mov
xchg
dec
out
inc
addr16
ss
inc
or
cli
loop
loopne
and
fisubl
xchg
jg
mov
jbe
xor
imul
lcall
jge
mov
push
add
outsb
daa
pop
rcll
cmp
cmp
mov
ss
bound
pop
test
push
rep
lock
sahf
push
dec
arpl
dec
xchg
xor
mov
pop
pushf
cmp
dec
into
aam
lcall
adc
loopne
cmp
lret
addl
mov
push
adc
sbb
jns
adc
dec
and
xchg
sarl
lret
jnp
mov
sbb
inc
test
pop
push
and
push
ja
dec
jae
xchg
pop
adc
adc
mov
leave
mov
cmpsb
cld
sub
movsl
stos
testb
mov
sub
jle
rol
sub
pop
sbb
test
aaa
mov
les
shll
fadd
lods
mov
mov
mov
adc
mov
pushf
es
test
test
sbb
in
pop
out
cmp
jo
jmp
mov
and
mov
sti
cltd
xor
add
and
fnstenv
shll
add
dec
or
xor
or
int
cmpsl
inc
jmp
loop
sbb
testb
inc
and
mov
dec
dec
daa
xchg
adc
xor
scas
addr16
insl
dec
mov
test
jg
xchg
arpl
sarl
ds
lea
cmpsl
sahf
outsl
fbld
xor
push
popa
mov
sbb
and
loop
int3
mov
leave
jmp
add
mov
cltd
popa
movsb
cltd
push
cmp
jb
sbb
push
cmc
inc
dec
add
in
shl
movsl
loopne
xchg
sar
cli
cli
fcoml
push
inc
adc
cltd
inc
xchg
dec
cltd
sar
insl
scas
lahf
fs
sbb
xor
movsb
imulb
add
add
cmp
mov
lds
repnz
jl
push
arpl
mov
ret
ds
mov
repnz
scas
adc
mov
lahf
adc
lods
inc
pop
adc
std
lret
add
pushf
outsb
ret
add
divl
xchg
lds
inc
jbe
lahf
int
sbb
ja
and
sbb
faddl
jb
xor
adc
loopne
xlat
ds
add
jae
shrl
lds
mov
test
mov
cmp
arpl
aad
xor
shlb
ficomps
out
mov
sub
sub
stos
test
jns
mov
jmp
xor
and
mov
jb
mov
xchg
mov
pop
loopne
frstor
pop
enter
and
push
lds
fldenv
fprem
or
sbb
popa
push
mov
xor
pop
add
cmp
mov
mov
ret
mov
mov
adc
icebp
test
sarl
lret
mov
jbe
cli
jbe
lods
lods
sti
or
and
sub
push
cmp
adc
sbb
idivb
pop
and
add
sbb
pop
stc
idivl
orl
xchg
xchg
mov
push
pop
outsb
out
jo
cmp
jl
sub
jne
mov
out
mov
mov
mov
pop
clc
rcrl
adc
cmp
hlt
repz
adc
scas
pop
dec
jb
js
ficoms
jmp
sahf
push
adc
daa
adc
sbb
lret
loopne
clc
dec
jp
mov
adc
bound
in
data16
aaa
jmp
dec
fcomi
test
cmpsb
mov
data16
xchg
imul
or
mov
cmp
aas
iret
sub
pop
xor
dec
in
repnz
fistpll
test
dec
outsb
cltd
xchg
mov
cs
sbb
adc
enter
pop
mov
jb
pop
add
sub
test
or
xor
cmpsb
imul
sub
ret
add
data16
mov
add
or
fstps
rcrb
adc
bound
sub
in
out
cmp
dec
pop
scas
lea
jge
pusha
push
xor
pop
jbe
fsts
aaa
and
mov
push
nop
xchg
jno
or
test
sub
jae
push
sbb
push
out
jno
repnz
xor
or
out
sbb
das
out
rcrl
mov
aad
out
fdivrs
nop
cld
out
jg
test
jle
into
xor
pusha
imul
stc
jmp
inc
leave
mov
sbb
mov
stc
adc
jge
or
aam
sub
in
inc
fwait
push
push
push
insl
movl
cli
lock
or
xor
orl
out
imul
and
rcll
rcll
dec
push
fs
mov
aaa
xor
mov
jg
insb
hlt
mov
adc
sti
add
fyl2x
mov
cmp
xchg
sbb
push
mov
mov
in
adc
mov
in
pop
pop
movsl
rorl
js
sbb
les
xchg
jle
fildl
ror
push
fwait
ss
mov
mov
jne
mov
dec
lods
or
push
and
and
jge
fwait
jl
scas
idivl
int3
mov
cmpl
cmp
cmpsb
xchg
adc
add
jns
out
and
and
pop
mov
pop
lds
push
aas
mov
mov
jae
pop
fldl
incb
aaa
or
test
or
jg
mov
and
lock
push
je
jo
je
gs
scas
sub
dec
mov
in
lahf
cmp
bswap
out
mov
iret
push
bound
or
je
cmp
or
int
iret
rolb
and
jne
outsl
ret
xchg
leave
sub
pop
add
enter
push
mov
ds
sub
sahf
jl
andb
add
into
cmpsl
push
xor
sub
stos
push
lds
push
test
add
icebp
sbb
div
mov
adc
and
add
pop
xor
les
dec
mov
inc
cmp
dec
add
aam
or
jge
insb
aas
and
jbe
mov
stc
or
push
xor
mov
mov
xchg
or
mov
xchg
jne
mov
out
or
leave
cmp
outsl
aam
cmp
and
push
mov
push
add
loop
xor
push
xchg
out
mov
push
popf
pop
jbe
enter
std
out
add
icebp
add
or
mov
jp
push
out
fadd
sbb
pop
aaa
mov
std
mov
aad
outsl
add
sbb
rorl
lahf
push
lds
in
sti
push
sbb
or
test
int
fcomps
jno
sub
les
stos
out
xchg
push
adc
jne
pop
rcrb
call
add
mov
dec
pop
cmc
idivb
lea
out
out
xchg
lahf
lret
fistl
xorl
leave
pop
addr16
aas
adc
or
push
cmpsb
in
xlat
xor
pop
cmp
jno
sub
or
pop
pop
jl
cmp
int3
out
dec
daa
in
jmp
cld
fucom
ficompl
xorb
icebp
xchg
test
mov
out
push
sub
in
xchg
jecxz
cmp
pop
shr
outsl
sub
sbb
xor
jecxz
out
pusha
inc
xchg
and
xchg
mov
hlt
popa
push
int
das
lock
loopne
dec
or
mov
jle
jno
aam
sbbb
dec
test
push
roll
xchg
mov
pop
inc
dec
mov
aas
sub
sbb
dec
bound
fs
stos
cwtl
cmp
xchg
and
jns
imul
add
ja
mov
jo
sub
add
mov
sarl
arpl
xlat
pop
adc
xchg
mov
mov
mov
cmpb
jg
or
push
rcrb
cwtl
rclb
outsl
insb
push
adc
outsb
and
arpl
and
pusha
addb
incb
cli
dec
lahf
in
aaa
test
sbb
outsb
jo
out
push
cld
aam
jle
lock
out
mov
mov
sbb
and
out
jecxz
mov
xchg
jae
pop
push
int
mov
mov
incl
sbb
inc
repz
stos
movsb
insl
inc
cmc
int3
mov
lds
mov
push
cmp
xchg
ret
insb
mov
xor
mov
int
lea
stc
mov
jmp
push
in
stos
and
pop
clc
in
cwtl
cs
ror
das
or
sbb
fwait
sbb
xor
popa
push
cwtl
das
xchg
xchg
mov
movl
test
es
xor
mov
stos
xor
xor
cmp
sbb
fmuls
mov
adc
xchg
dec
mov
dec
pushf
push
mov
cwtl
and
add
pushf
iret
js
inc
dec
push
sbbl
fisubrs
xor
sub
movsl
push
pop
mov
scas
or
movb
adc
rolb
insl
mov
sbbl
sbb
ja
outsb
cltd
es
movsb
icebp
addr16
loope
fistpl
push
mov
dec
xchg
inc
stc
imull
xlat
insb
push
lds
test
cmpsl
sahf
jae
cwtl
imul
lret
dec
fsubr
jnp
and
ljmp
int3
mov
cltd
mov
pop
pop
lds
xchg
add
adc
or
cmp
fimull
cmp
mov
pop
loop
push
nop
sub
dec
dec
push
and
idivb
jns
imull
imul
push
movsb
add
and
push
fistps
jns
xchg
push
cmpsb
int3
bound
mov
push
mov
xchg
mov
aas
ret
imul
loop
mov
or
sub
cltd
adc
addl
inc
aad
stos
jo
jg
shlb
cltd
sub
pop
test
adc
jb
mov
popa
hlt
mov
mov
insl
mov
sbb
icebp
ds
sbb
repz
mov
lret
dec
pop
out
popf
inc
mov
jnp
mov
pop
mov
fwait
adc
pop
pop
mov
lcall
lcall
xlat
mov
add
xor
mov
out
cli
add
pop
arpl
rep
xchg
nop
sbb
cmp
xor
adc
outsb
xorl
inc
jne
sarl
cmp
or
cld
rcll
movb
std
jnp
sarl
cmpsl
sub
cmp
addl
test
mov
ret
sub
rcll
xor
pop
mov
imul
inc
stos
jo
mov
xor
push
outsl
test
inc
push
cmp
fmuls
movsl
sti
sub
sbb
rcrb
cwtl
xchg
xor
jb
push
and
or
jns
rorl
and
cli
cmp
push
fbld
into
subb
add
fmull
jo
dec
rcrl
push
inc
xchg
xchg
xchg
sub
push
push
loope
sbb
adc
cmpsb
inc
pop
mov
sti
lds
sti
mov
test
adc
pusha
xchg
aas
mov
push
push
mov
adc
fs
shl
or
shll
xchg
cmp
insb
dec
jne
sub
jg
xchg
loope
sbb
in
mov
inc
sub
fwait
nop
xchg
cmpsb
in
imul
ljmp
in
test
push
pop
xchg
mov
add
mov
imul
test
into
jno
xor
xchg
pop
call
movsl
popf
cmp
enter
and
mov
in
mov
inc
sti
lcall
mov
or
sub
adc
sbb
ss
jecxz
loop
cmp
std
pop
sub
push
roll
loope
jg
stos
es
jo
or
in
in
xchg
movsb
fidivs
mov
lea
pop
push
jo
mov
das
fisubrs
test
stos
and
mov
rcll
mov
lcall
push
pop
loopne
jne
cmp
dec
inc
mov
sub
sub
dec
arpl
mov
popf
into
xchg
xor
add
mov
or
pusha
sub
int
ds
insb
ljmp
jae
add
pusha
pop
fs
out
sub
cwtl
mov
lcall
stos
adc
dec
fildll
imul
lock
xchg
inc
cmp
mov
mov
fnsave
mov
mov
popf
lret
scas
mov
dec
cmp
in
inc
xor
int3
mov
push
or
push
int
decb
adc
push
adc
mov
aaa
xchg
push
daa
je
and
fldl
jae
adc
mov
mov
push
roll
in
lods
cmpsb
in
stos
cwtl
jb
sbb
data16
loopne
mov
jns
cmp
aas
sti
jae
mov
pop
loop
push
lret
pop
in
sbb
aam
ja
rcl
or
push
out
cmc
ds
xor
sbb
aaa
arpl
sub
adc
scas
shll
cmp
add
pusha
scas
in
iret
mov
movsl
xchg
sti
into
adc
loopne
inc
popa
daa
loope
mov
dec
call
xlat
aaa
lret
mov
sti
xor
out
arpl
mov
out
fidivs
test
mov
mov
cmp
stos
push
leave
bound
ljmp
sbbl
xchg
mov
xchg
ja
lahf
rol
les
clc
sbbl
mov
sbb
scas
push
scas
add
cltd
in
lcall
sub
dec
add
push
scas
push
xor
fbld
push
clc
lods
inc
inc
fnsave
js
lods
popa
pop
cld
inc
stos
clc
mov
outsb
dec
rcr
testl
cs
inc
mov
jbe
sbb
iret
cmpsb
loope
xchg
int
imul
cmp
icebp
test
dec
sbb
fld
sarl
movsb
aam
push
std
pop
cmp
sub
addr16
lods
adc
aas
call
cmp
inc
sub
lds
xchg
cmpsl
repz
pop
sti
jo
mov
lock
mov
ja
js
repz
sbb
cmp
pop
cmp
cld
xchg
aam
mov
push
loope
pop
jne
push
pop
xchg
push
sti
pushf
jo
inc
jp
push
mov
or
daa
push
or
inc
sub
test
and
jecxz
negb
dec
mov
jmp
and
gs
outsb
test
mov
xor
ljmp
dec
mov
test
subl
cmp
pop
movsb
xor
push
fwait
xchg
cld
cwtl
imull
in
jns
mov
sbb
mull
mov
push
pop
sti
out
shlb
sbb
mov
lods
mov
leave
xor
push
mov
mov
int
in
mov
outsb
dec
pop
sbb
sbb
jp
ljmp
out
std
rorb
push
lods
mov
cld
insb
mov
mov
lods
dec
or
repz
jo
in
xchg
lret
sbb
dec
data16
dec
or
push
sub
dec
insl
jge
mov
push
sbb
out
push
mull
aad
add
jno
add
popf
mov
loopne
xchg
test
mov
xorb
int
cmp
movsb
push
int3
xchg
mov
xor
sub
jmp
je
add
faddp
jae
pop
rclb
mov
pop
cltd
lods
leave
and
dec
and
or
push
cwtl
pop
xor
xor
ror
pop
xchg
subl
test
xor
sbb
insl
pop
add
inc
push
ljmp
in
pop
addb
imul
test
dec
sbb
ds
xlat
fwait
pop
scas
xor
cmp
dec
ja
cltd
scas
jge
pop
hlt
cs
mov
ret
dec
jno
aaa
mov
cmp
addr16
pop
mov
fs
cmp
aam
les
shll
mov
push
push
data16
out
adc
jle
jae
lods
insb
rclb
jp
stos
stos
je
stc
inc
dec
push
push
fs
add
aas
fiaddl
sub
test
inc
cwtl
fdivl
and
inc
movsb
fwait
xchg
pop
mov
rolb
popf
loope
repz
xchg
cmp
faddl
loope
sbb
or
cmpsl
xor
and
scas
and
gs
das
jg
pusha
add
xchg
bound
fwait
ret
mov
popf
loopne
test
cmp
mov
aaa
pushf
xchg
repz
stos
or
testb
xchg
pop
jg
pop
cmc
jmp
out
movsb
pop
xchg
cmp
xchg
pop
out
adcb
cmc
call
sbb
fwait
imul
push
mov
mov
adc
xchg
fsubs
add
cmp
arpl
mov
mov
lahf
in
or
jb
ljmp
xchg
dec
push
lret
xor
addr16
ss
fsubrl
repnz
das
xchg
adc
add
jbe
mov
cld
lahf
and
int
in
jp
sub
lods
cmp
dec
pop
mov
jae,pn
test
testb
insb
loope
xor
sbb
and
or
fstps
cwtl
shll
push
mov
popf
adc
or
lret
addb
popf
shll
inc
inc
pusha
loope
cmp
sbb
nop
clc
xchg
pop
pop
pop
ljmp
push
mov
push
sbb
insb
scas
rorb
add
xchg
fstps
fwait
outsb
inc
push
popa
shrl
adc
int
cmp
inc
cs
push
add
sub
push
loopne
adc
jecxz
idivb
jbe
xchg
fnstenv
dec
jb
cmpl
cs
xor
je
gs
cmp
out
sbb
xor
push
int
cmp
adc
rcll
rorl
or
shlb
and
in
ficompl
fcomps
xlat
xchg
scas
arpl
xchg
iret
mov
mov
icebp
sub
fisubrs
mov
fs
gs
dec
popa
lahf
pusha
into
xor
push
insl
cwtl
ljmp
je
es
arpl
and
dec
xor
pop
pop
stc
loop
lock
jno
test
mov
jp
notb
adc
push
jl
int3
je
aad
dec
jg
pusha
xor
lods
shlb
jb
xchg
cmpsl
adc
addr16
inc
or
xor
es
cld
sti
and
sub
clc
or
sahf
ret
jo
lahf
bound
jnp
ss
mov
cli
pop
xchg
insb
mov
iret
leave
lods
pop
push
add
xor
cs
mov
stc
stos
sub
xor
fs
fdivl
jno
movsb
add
xor
push
sbb
in
cwtd
dec
dec
pop
out
sbb
test
add
pop
roll
mov
aad
inc
adc
jnp
test
push
dec
data16
mov
stc
inc
mov
je
push
pop
sub
fsubr
int3
call
pop
in
dec
xor
pop
leave
push
or
mov
mulb
xor
test
push
faddl
enter
stc
es
add
pop
mov
add
pop
xchg
and
adc
lea
sub
jnp
call
or
out
mov
js
std
jmp
cmp
cltd
fldt
leave
movsl
out
aaa
bound
or
push
js
shrl
mov
jne
out
xchg
pusha
and
imul
or
inc
pop
push
mov
jno
mov
xchg
mov
out
sub
mov
movsb
jg
lret
test
jg
inc
movsl
adc
lret
mov
ss
shll
or
adc
mov
add
rcr
ffreep
int
or
shlb
cmp
popa
popa
adc
repz
inc
cmp
adc
jmp
add
jmp
xor
in
insl
leave
leave
sarl
pop
sbb
xchg
push
mov
jnp
mov
xorl
sbb
popl
pop
daa
jp
ret
xor
cmc
jecxz,pt
adc
fscale
pop
adc
repz
or
pop
test
push
xchg
dec
imul
mull
insb
aas
mov
sbb
inc
dec
jnp
xchg
pop
xchg
or
je
ljmp
aad
fs
mov
and
lcall
fidivrl
gs
daa
ret
jo
test
jp
dec
pop
xchg
out
jge
push
cvtps2pi
lahf
inc
mov
cli
outsb
dec
and
insl
test
mov
mov
js
les
mov
adc
inc
mov
data16
repnz
roll
hlt
jns
shrb
lahf
scas
aas
pop
mov
imul
cmp
and
cmpsl
push
imul
inc
je
push
and
mov
inc
cs
jnp
lret
inc
fsubl
sarl
pop
mov
adc
pop
leave
mov
cmp
lahf
data16
rorb
push
std
lds
pop
sub
pop
popa
ljmp
add
jae
pop
mov
xchg
mov
xor
shl
jp
mov
xchg
popf
sbb
bound
imul
mov
adc
test
out
cmc
loope
ret
sti
fnsave
push
or
jg
or
lret
arpl
xor
mov
popf
fidivs
imul
pop
adcb
rolb
cmp
pop
daa
inc
in
xchg
bnd
push
ja
scas
cmc
sbb
mov
stos
iret
cltd
add
mov
cmp
out
or
sahf
incb
mov
add
and
pop
add
push
aam
ud1
pop
inc
js
add
inc
jmp
mov
out
cmp
rcrb
add
ljmp
test
jl
loopne
in
sub
adc
decb
xchg
sti
dec
jmp
test
xor
push
pop
cmp
cmpsl
movsb
bound
jns
into
test
arpl
mov
repz
out
cmp
mov
aad
aad
mov
sbb
dec
gs
pop
jecxz
out
cmp
sub
cs
pusha
mov
ds
cmpsb
les
mov
jle
inc
mov
fldt
aas
add
lods
xor
lcall
and
jl
adc
jno
push
mov
dec
jns
sub
addr16
xor
xchg
push
add
mov
sbb
loope
and
pop
call
cmc
or
mov
dec
adc
lods
out
insb
xchg
aam
jbe
test
cwtl
sbb
push
sub
inc
sbb
add
push
pushf
mov
push
sbb
mov
sbb
fsubs
pop
lods
fnstcw
pop
stc
mov
addr16
mov
dec
insb
insl
mov
push
mov
push
in
jnp
iret
aas
xor
jecxz
imul
inc
pushf
in
dec
aaa
jne
cs
dec
out
xchg
lods
loope
jecxz
ljmp
cli
mov
pop
and
or
rolb
fs
sbb
dec
pop
inc
or
and
mov
xor
movsb
out
mov
mov
popf
sbb
adc
push
jo
mov
and
pushf
jno
leave
cwtl
dec
es
xor
int
pop
loop
jnp
pop
and
out
push
pop
ljmp
aas
imulb
adc
scas
cmpsb
sahf
rcrb
inc
or
test
lret
lret
ret
jp
sbb
cmp
add
shrl
outsl
kxnorw
into
outsl
shlb
ret
push
in
pop
faddp
sub
jae
pop
inc
jb
callw
ljmp
jmp
lret
repz
sub
mov
jne
cwtl
fadds
ljmp
add
mov
cmp
fiadds
sbb
and
sbb
push
push
inc
mov
sbb
and
repz
leave
xor
lret
mov
leave
cmp
push
add
and
cs
cmp
and
notb
dec
sbb
add
fdivl
jp
xchg
aaa
cvtdq2ps
mov
test
fsub
xchg
movl
bound
andl
test
inc
test
mov
js
add
in
in
popa
add
mov
aas
test
mov
fs
cmovo
shr
rorl
daa
fldl2e
insb
lea
lcall
ret
lahf
loopne
pop
stc
fxrstor
push
xor
inc
add
cmpsb
and
nop
loop
fdiv
inc
lods
dec
call
repnz
xchg
push
xchg
in
fwait
xchg
int3
es
fldl
jg
aas
xchg
xchg
cmp
icebp
shl
push
sub
inc
outsl
pop
stos
mov
xor
and
rolb
sub
ret
dec
idivl
pop
in
mov
cmpsl
dec
jae
jbe
cmp
pusha
les
inc
sarb
fistl
imul
inc
mov
push
out
icebp
mov
add
push
push
ljmp
xlat
adcb
or
cmp
not
out
or
cmp
ficoml
or
inc
xchg
mov
lds
and
jne
mov
lahf
mov
xchg
std
dec
mov
sbb
repz
or
push
lea
out
dec
mov
pop
outsl
cmp
out
lods
or
cmp
and
mov
mov
ds
mov
jo
lods
xlat
insl
sarb
pop
aad
fsub
in
mov
mov
dec
jns
pop
popa
ficoms
inc
sar
mov
fs
xor
les
test
out
es
ret
and
outsl
xchg
rcrb
sbb
insl
cmp
xchg
and
out
jmp
push
imul
push
rorb
iret
aas
lds
jecxz
repnz
jmp
loopne
cmp
lahf
scas
cmp
cmp
loope
je
and
das
xor
and
adc
sbb
sbbb
cmp
out
aaa
mov
stc
cmp
enter
imul
fidivrs
dec
xchg
jp
cmc
mov
pop
dec
in
dec
pushf
stc
fs
pop
out
inc
loopne
pop
xor
inc
cli
fs
flds
xchg
sbb
push
xchg
push
jbe
lret
sbb
scas
bswap
mov
test
push
lock
xor
insb
and
push
sub
incb
inc
std
js
test
shl
xor
popf
or
outsb
xchg
outsb
and
ret
fisttpll
adc
inc
jo
inc
sbb
imul
adc
int
and
pminsw
sub
cmp
mov
pop
and
rorb
dec
sti
out
push
inc
movsl
sti
out
adc
addb
cld
das
sbb
nop
pop
jl
in
shll
imul
xchg
push
pop
pop
push
ljmp
pushf
dec
dec
dec
jae
mull
jmp
and
jno
pop
lods
mov
xor
syscall
ret
shlb
sbb
push
repnz
call
ljmp
hlt
xchg
mov
pop
xchg
filds
sub
rorl
dec
jae
fchs
aas
and
loop
cmp
jle
test
mov
enter
aam
popa
pop
fdiv
inc
and
sub
cmp
push
push
in
repnz
jmp
popa
bound
fwait
scas
stc
mov
mov
in
push
sbb
cmp
jl
ss
add
add
push
fsubs
mov
sbb
cwtl
int
pop
push
shll
sbb
sbb
repnz
xor
mov
mov
popf
lea
ljmp
inc
push
inc
mov
shl
pushf
popa
cmp
or
movsb
push
insb
ljmp
mov
das
push
shlb
or
in
test
fisubl
xchg
inc
jecxz
mov
cmp
mov
addl
lahf
popf
xor
pop
cmpsl
call
sub
cmp
out
dec
or
in
and
loop
popf
mov
dec
cli
pop
xchg
dec
andb
xor
out
xor
loope
mov
idivb
hlt
xor
pop
lret
lret
out
bound
push
cltd
test
mov
int3
insl
das
xchg
fsubrp
or
add
xchg
in
or
mov
popa
cltd
hlt
test
aam
xchg
test
cmp
and
jb
imul
pop
dec
rol
sti
mov
call
lds
xor
xchg
mov
dec
jae
je
pop
mov
and
fists
pop
push
movsb
loope
fmuls
push
lcall
ss
cmc
inc
pop
pusha
movsb
aam
data16
mov
jmp
fs
mov
add
mov
popf
add
movsb
jl
adc
push
push
xchg
fistpll
sbb
cltd
iret
loope
dec
pop
push
push
and
jle
xchg
cwtl
stc
sub
in
push
outsl
add
js
dec
xchg
pop
sbb
lock
pop
out
sahf
test
jecxz
or
xor
fwait
jbe
adc
cmp
cmp
push
nop
fmulp
in
mov
call
mov
in
sahf
add
ret
dec
jecxz
in
mov
xor
pop
add
shl
in
push
and
ds
inc
lea
xor
cmpsl
fs
sbb
das
fisubl
mov
xchg
cwtl
test
dec
mov
call
jbe
orb
imul
or
cmpsb
xchg
xchg
cld
cmc
sbb
xor
xchg
sbb
lcall
mov
push
dec
stos
sbb
sti
and
cmp
dec
in
fmul
jnp
push
lcall
insb
loope
popf
or
sub
das
movsl
dec
and
mov
lret
movsl
jno
fwait
sahf
jmp
jnp
dec
ret
out
fwait
jmp
test
addr16
test
inc
push
imul
push
or
inc
sub
cmp
and
movsb
mov
dec
cli
mov
push
cli
cmpb
xchg
ljmp
dec
push
test
mov
sub
jae
imul
push
cmp
mov
mov
jle
and
push
jl
std
popf
push
sbb
sti
mov
mov
je
mov
pop
neg
mov
in
les
xchg
cmc
cmp
cld
fnstcw
mov
push
stc
outsl
gs
dec
ja
cmpsb
add
jmp
cmpsb
xor
ficomps
sbb
inc
jge
cs
push
rcll
cmc
jl
call
mov
loop
lret
test
push
in
dec
stc
cli
clc
mov
mov
inc
push
jl
pop
ljmp
mov
rcrl
dec
pop
mov
mov
add
adc
jmp
cwtl
shll
cmc
sarb
cmp
pop
mov
jp
in
pusha
ret
mov
adc
sbb
loop
fsubrs
sub
pop
or
mov
sub
out
cld
dec
out
fsts
inc
dec
and
filds
push
imul
lret
in
outsl
add
mov
pop
pusha
or
outsb
mov
js
das
push
pop
push
xchg
push
aaa
mov
push
inc
pop
inc
adc
cmp
in
or
call
inc
decl
pop
sub
xor
adc
pop
fisubl
mov
mov
xlat
add
inc
outsb
or
int3
mov
scas
shrl
insl
mov
scas
out
cli
xor
enter
mov
pop
cmp
push
mulb
icebp
fdivr
mov
lret
jmp
adc
or
call
ds
addb
push
add
js
je
popf
gs
push
xchg
mov
je
es
push
ret
aas
push
xor
lock
push
mov
hlt
lea
cmp
data16
addl
push
jnp
mov
in
push
nop
push
mov
xchg
push
stos
std
xor
pop
jno
xchg
adc
push
xor
adc
and
sub
xchg
and
mov
or
int3
imul
xor
add
rcl
out
xchg
push
jp
ljmp
mov
push
push
shll
adc
mov
fst
jns
sti
mov
xchg
out
je
mov
in
add
mov
sub
icebp
loop
call
out
xchg
aad
mov
lock
xor
ror
fsubs
xchg
and
adc
fcoml
sahf
cmpsb
mov
pop
loop
mov
pop
les
jp
sub
mov
lods
cmc
or
adc
or
cltd
in
cmp
adc
fnstenv
sbb
in
or
mov
imul
gs
add
pushf
stc
sbb
xor
into
je
push
sub
jbe
adc
test
bnd
xchg
subb
icebp
into
loope
dec
lret
mov
sti
sti
sti
aaa
jle
mov
push
or
aas
sub
inc
dec
mov
xor
sbb
ljmp
das
mov
mov
js
lret
jg
mov
fmull
dec
mov
outsb
and
adc
daa
add
dec
cwtl
test
inc
jno
ja,pn
dec
not
pop
sub
xchg
in
sub
shlb
pusha
loope
stos
add
sbb
cwtl
xor
sbb
popa
sbb
test
in
xor
inc
sub
insl
iret
add
adc
inc
leave
cwtl
push
addr16
fidivl
mov
xchg
mov
call
movsl
xchg
aam
pusha
add
ret
jle
dec
inc
push
fbld
pop
push
adc
daa
push
inc
pop
mov
and
jmp
pop
sti
das
roll
mov
pop
das
mov
inc
pop
sbb
mov
rcrl
sahf
call
jmp
fmuls
and
ds
cli
into
jg
lcall
ss
dec
mov
and
xchg
cmp
xor
add
jecxz
or
inc
shll
push
cmc
inc
cli
mov
andb
xorb
xchg
movsb
fildll
icebp
sbbl
call
aaa
aad
push
scas
idivb
ret
loopne
cmp
lea
sbb
dec
scas
mov
mov
jo
gs
ja
clc
pop
and
lock
scas
or
out
fimull
iret
push
icebp
lea
fidivrl
testb
outsl
pop
sub
or
push
arpl
nop
pop
xorb
imul
loope
mov
out
ss
mov
pushf
lock
pop
inc
mov
out
out
jo
and
roll
bnd
stc
mov
inc
pop
add
sub
sar
mov
faddl
push
inc
sbb
addr16
loope
jb
or
test
sbbl
shl
fstps
adc
scas
mov
and
or
and
dec
pusha
jb
daa
cld
scas
add
inc
in
mov
mov
cmc
cmp
push
outsl
shrb
xchg
push
out
mov
cmp
inc
cmp
lahf
dec
movsl
loop
enter
jbe
js
inc
insl
cmpsl
int3
adc
stos
cmp
jg
push
lret
mov
push
xchg
andb
jg
in
cmpsl
inc
cmpsb
loope
adc
sub
movsl
xchg
fistpll
pop
pop
inc
mov
or
iret
sbb
das
pop
push
jl
and
in
dec
push
jae
mov
movb
inc
fcomip
imul
sar
imul
ret
sub
leave
mov
xor
int3
add
inc
jge
subl
aas
jmp
mov
addr16
lret
rol
lods
or
pop
adc
int3
adc
dec
xchg
cmovne
cmp
mov
stos
xchg
cmp
inc
jmp
mov
inc
jmp
aad
and
push
or
je
call
js
loop
int3
mov
insl
pop
scas
lret
in
aam
ds
popa
daa
ja,pt
add
popa
aad
push
add
push
jns
cmp
add
vaddps
sbb
pop
aad
and
insb
movsl
cmp
loope
fisubrl
sarl
sbb
add
push
ds
sbb
dec
int3
xchg
push
jns
lahf
ret
push
andb
sub
cmc
sbb
loopne
leave
push
xor
jmp
mov
push
fldcw
pusha
sbb
sub
insl
inc
imul
xor
leave
mov
lods
in
add
adc
mov
push
add
or
ljmp
int
fisubrs
repnz
sub
push
mov
xchg
divb
jnp
push
and
push
mov
shll
xor
jp
mov
std
fs
clc
std
inc
mov
or
inc
loop
sbb
test
and
mov
aam
push
push
and
lock
push
das
add
fldcw
aad
mov
or
imul
mov
xor
sub
jns
add
test
movsb
pop
cs
mov
cmp
xchg
insl
es
push
rorl
mov
or
scas
lcall
mov
clc
inc
xchg
sub
inc
pop
in
xorb
fsts
sub
call
push
sbb
adc
sbb
enter
enter
cmp
or
cmc
inc
leave
dec
repz
into
cmp
xlat
lock
fimull
cmp
mov
andl
scas
mov
cmp
aad
mov
sar
mov
movsb
dec
inc
rol
lcall
mov
xchg
add
addr16
dec
hlt
dec
sbb
mov
inc
outsb
mov
and
push
add
lret
mov
jae
es
and
push
les
add
cld
inc
testb
add
lock
inc
sub
mov
aam
xor
xchg
in
shll
js
sbb
clc
inc
cmp
fildl
loopne
std
add
add
subl
jecxz
ss
ja
jg
inc
jb
xchg
fildl
add
jae
push
mov
cs
shlb
cmp
sub
stc
mov
xor
aaa
push
daa
je
jmp
inc
mov
sub
adc
dec
lods
scas
iret
scas
push
dec
pusha
imul
inc
push
add
popa
push
pop
mov
mov
mov
imul
dec
aad
cmpsb
rorl
push
pop
movsl
and
push
pop
jmpw
mov
jg
fwait
roll
pop
fmuls
sti
pop
test
daa
das
scas
enter
sbb
mov
jns
jno
xchg
shl
sti
add
sbb
push
cli
mov
inc
push
xor
cmp
mov
sub
cmp
pop
rclb
add
sub
adc
outsb
je
pop
xor
or
sahf
sahf
into
cmp
pop
mov
int
and
stos
fwait
push
pop
aas
xor
add
insl
cmp
fs
sbb
je
shrb
aaa
dec
cmp
adc
out
cltd
ljmp
rcll
xchg
sbb
or
cmpsb
leave
rorl
xor
and
icebp
push
mov
ljmp
loopne
rcr
mov
in
loopne
ss
push
jp
repz
into
divl
sub
or
lret
int
xorw
inc
push
testl
mov
cmp
das
dec
jle
sbb
ljmp
into
or
push
fcompl
cltd
cmp
addb
popa
idivl
loope
mov
pop
mov
iret
rorl
aad
push
jecxz
pop
and
inc
or
das
jns
push
sahf
pop
push
or
into
lock
les
adc
push
add
jg
and
lret
lods
xor
stc
outsb
jl
decl
add
fucomi
test
jne
insl
es
and
stos
xchg
add
and
cwtl
inc
inc
bswap
add
dec
inc
cmp
adc
mov
in
jge
inc
shll
outsb
or
call
loope
movsb
enter
aas
iret
jb
popf
mov
test
leave
cmpsb
addr16
pop
jo
mov
inc
inc
or
push
mov
sub
xchg
addr16
xchg
jge
imul
push
lahf
or
cwtl
insb
and
out
aam
push
dec
xlat
insl
jmp
loope
ret
inc
adc
xchg
bound
repnz
xor
clc
shrb
js
movsl
push
or
out
scas
xchg
cmpsb
cmp
sbb
loope
es
jge
inc
xchg
sahf
movsb
je
adc
rcll
jmp
fdivl
loopw
push
fadds
notb
xchg
sbb
ret
adc
mov
and
cs
fstpl
popa
ja
xchg
push
leave
mov
stos
incb
movsb
flds
xchg
mov
stos
ficompl
mov
nop
jne
or
and
dec
and
mov
jno
repnz
push
xchg
movsl
aad
dec
dec
mov
xchg
sbb
dec
cmpl
add
pop
xor
fyl2xp1
mov
jmp
pop
popa
imul
scas
xchg
cltd
pop
push
dec
dec
sub
lret
lahf
add
adc
jae
sub
jne
stc
push
mov
sub
push
cmp
xor
or
jns
stc
push
repz
cmp
inc
xchg
in
sbb
and
test
or
stos
pop
pop
dec
sub
ret
dec
cwtl
mov
lods
mov
mov
dec
daa
adc
add
or
push
stc
mov
push
daa
in
add
mov
idivl
cld
std
cmp
pop
push
push
sub
push
xor
sub
xor
push
inc
push
xchg
dec
or
inc
xor
out
aad
sbb
outsl
repnz
gs
inc
sub
mov
cmp
imul
push
cmp
dec
fildl
mov
fcomps
gs
enter
ljmp
add
iret
and
jmp
push
inc
xlat
mov
ret
jmp
dec
jge
insb
mov
jne
cmc
sbb
leave
and
mov
xchg
shll
pop
lds
inc
push
pop
xor
psubusw
cli
test
cltd
ret
cmp
mov
rcr
into
out
lds
dec
and
cmpsl
insb
repz
mov
icebp
add
sti
push
pop
mov
insl
and
into
xchg
mov
lock
sbb
push
dec
in
loop
outsb
cli
into
xchg
inc
add
xchg
sbb
mov
movl
add
xor
sbb
sbb
inc
jne
mov
roll
mov
pop
mov
and
pop
std
jp
imul
cwtl
movsb
fwait
or
movsl
sbb
mov
sarl
dec
cmp
add
ss
ds
mwait
jno
mov
mov
jecxz
add
outsl
mov
movsb
dec
mov
int
pop
sub
cmc
xchg
loopne
dec
sti
loope
js
xchg
mov
mov
fwait
push
mov
pop
sub
fcoms
mov
repz
faddp
mov
fdivl
stos
mov
into
add
mov
inc
push
ret
pop
add
mov
dec
imul
inc
fidivrs
fdivs
sahf
mov
and
dec
mov
in
fisttpl
xorl
je
leave
push
stos
push
loope
xchg
push
inc
inc
out
cs
dec
pop
jne
mov
je
loop
popf
add
dec
ss
xor
mov
xchg
in
ja
into
sub
rcll
lods
adc
aad
mov
aaa
inc
popa
jg
ds
cmpsb
into
insb
pop
mov
mov
out
in
shrl
add
mov
enter
cmpsl
into
je
mov
dec
sub
lock
inc
dec
out
pop
and
dec
xrelease
lret
cmp
rorl
push
mov
int3
popf
xlat
pop
daa
and
setp
cmc
jae
mov
mov
push
ljmp
mov
popa
sub
mov
push
add
rcrb
pop
lahf
mov
int3
push
adc
popf
cmp
adc
jp
sbb
pop
pop
movsl
shl
shll
xor
push
loope
push
cmp
mov
lret
jmp
into
clc
in
and
mov
imul
mov
repnz
push
rol
popa
das
cld
sbb
mov
push
int3
shlb
mov
aas
jno
iret
loope
fnstsw
jns
add
xor
inc
and
ja
into
cmc
jb
mov
fwait
ds
adc
scas
sub
fwait
imul
pop
jl
insb
sub
stos
adc
adc
insb
out
adc
popa
add
test
repnz
or
push
xchg
imul
repz
cmpsl
mov
push
dec
jecxz
inc
bound
pop
mov
ficoml
inc
lret
pop
and
sub
js
fadds
mov
jb
dec
xchg
dec
outsl
cmp
ljmp
inc
push
and
inc
mov
mov
xchg
arpl
mov
aas
xlat
jle
popf
insb
xchg
das
gs
and
xor
mov
lods
dec
ss
xor
lods
sbb
je
aaa
mov
lods
popa
push
xor
dec
xor
rorl
out
xor
test
fsts
cmp
lds
sarl
stos
xor
push
inc
shl
cmp
fbld
adc
sysret
and
mov
and
mov
movsl
mov
setns
shlb
mov
inc
fst
jmp
cltd
dec
sub
lret
cs
dec
rorb
stos
fcom
pop
out
std
insb
push
mov
add
xor
add
cmpsl
xor
mov
push
cmpsb
sbb
ljmp
inc
pop
inc
stos
adc
shrl
ja
or
stos
mov
subl
aam
mov
lahf
jge
mov
stos
ret
cs
inc
loopne
arpl
xor
ss
jl
popa
mov
jae
out
in
icebp
pop
arpl
inc
jb
mov
push
mov
pop
loop
arpl
xor
fnstcw
scas
dec
jno
ja
roll
dec
icebp
adc
aam
sbb
xchg
scas
ret
dec
jbe
mov
std
cmp
sbb
sahf
test
test
div
in
fstps
adc
shl
jecxz
pop
cmpsl
sub
cwtl
out
testb
jmp
pop
aam
add
mov
loop
cwtl
mov
aad
popa
and
cwtl
sbb
xchg
sub
dec
push
pop
roll
adc
stc
in
sbb
test
aas
jbe
ret
pop
subl
mov
pop
mov
bound
sub
roll
xchg
jmp
xchg
jl
xchg
mov
pop
ror
xlat
lock
cs
push
out
push
orb
inc
in
jecxz
mov
ss
repz
jecxz
mov
cltd
bound
sub
test
cs
dec
out
popa
shrl
xor
cmp
js
nop
xor
xchg
int
ljmp
push
out
lea
aaa
push
xchg
outsb
inc
sub
sbb
push
outsl
cmp
add
push
pushl
in
jg
push
mov
mov
xor
jo
fldt
mov
dec
push
das
pop
jg
dec
movsl
cmp
cltd
arpl
add
out
add
adc
dec
sub
pop
stos
pop
jo
sahf
or
mov
add
cmp
jno
stos
mov
push
fnstcw
push
xchg
aaa
sahf
xor
dec
push
or
sub
xchg
xchg
push
mov
out
adc
cmc
and
imul
fistl
adc
or
int3
lret
mov
adc
cmovge
inc
movb
mov
mov
cmc
fdivrs
test
rcrb
dec
js
lods
test
inc
nop
pop
insl
or
xor
xchg
inc
dec
add
cmp
hlt
mov
stos
mov
mov
mov
lods
movsb
push
adc
jl
xor
or
insl
add
filds
rcrl
imul
das
and
xor
rcll
pusha
jns
ja
outsb
notb
sbb
lock
mov
sahf
dec
pusha
std
shrl
test
inc
mov
lcall
pop
imul
jg
xor
dec
andb
lods
sti
add
push
pop
bound
adc
cmp
sub
mov
cmp
test
sub
popf
gs
pop
pop
xor
das
or
jecxz
xchg
int
sbb
xchg
imulb
cs
je
aad
test
popf
ret
sbb
cs
inc
mov
cmc
in
fidivs
inc
imul
jns
jle
js
add
and
cmp
add
fwait
call
call
mov
dec
or
add
arpl
sub
jb
adc
mov
xchg
aaa
movsb
xchg
sub
mov
outsb
xor
roll
pop
cli
xor
adc
jp
fisttps
xchg
ds
xchg
sbb
jle
insb
lret
stos
add
adc
call
or
inc
jae
cs
mov
xchg
push
xchg
sub
inc
lahf
out
push
dec
push
push
iret
and
inc
or
into
call
pushf
jno
notl
enter
into
loopne
dec
inc
jns
xchg
or
jb
add
xorl
int3
aas
pop
enter
mulb
out
loope
xchg
fcoms
vdivss
std
push
mov
adc
xor
pop
dec
sti
sbb
lods
scas
mov
aas
lcall
jmp
pusha
loop
jns
shr
inc
jle
cltd
and
xchg
push
inc
jnp
call
inc
sbb
ret
pushf
scas
mov
add
mov
lret
fcoml
imul
jne
xlat
out
addr16
loope
nop
dec
mov
and
cld
fistps
loop
and
bound
add
mov
movsb
inc
cmp
push
push
mov
pop
add
test
push
xor
cmp
out
mov
mov
add
dec
or
jge
testb
ss
cli
add
insl
xadd
test
adc
jge
mov
xor
fildl
xor
mov
test
jmp
sbbb
stos
lcall
adc
bound
inc
push
add
daa
fldl
dec
mov
loope
rolb
inc
dec
mov
push
cmp
jne
movsl
insb
xchg
push
ljmp
clc
es
jne
inc
fsubrl
out
mov
inc
add
inc
test
xor
gs
out
aas
stos
mov
cmpl
icebp
lock
lods
dec
sub
xchg
jno
aas
dec
push
mov
push
sub
or
cmp
mov
and
lret
jmp
jbe
test
add
add
dec
cmp
xor
jno
or
fstl
push
add
rcl
les
push
out
cmp
inc
dec
jmp
repz
incb
pop
shl
mov
addr16
mov
mov
jns
jmp
arpl
pop
divb
shl
loopne
into
int3
add
cmp
xor
inc
in
dec
pop
xchg
mov
sbb
enter
mov
push
fstpl
or
lcall
xchg
mov
push
xor
mov
cli
sub
ds
leave
jmp
in
sub
ret
xor
xchg
dec
mov
mov
movsl
test
adc
addr16
ds
sub
push
jb
adc
jp
jns
and
jmp
mov
outsb
test
jne
mov
jae
xchg
mov
inc
sbb
xchg
lds
int3
xchg
fmuls
xchg
fs
pop
out
dec
sub
xchg
fcompl
or
test
inc
ret
lret
loopne
pop
test
repz
cmp
adcb
mov
std
std
xor
push
sahf
les
xorl
pusha
add
dec
test
pusha
lahf
andl
inc
xchg
outsb
inc
jno
fiaddl
mulb
sub
insb
daa
ficoms
arpl
lea
rcl
cmp
fsubl
aam
cmp
addr16
out
imul
or
xor
ja
ds
adc
imul
add
test
pop
ret
repnz
imulb
push
adc
imul
pop
push
sbb
push
push
jo
icebp
fnstsw
loopne
pusha
ret
sub
mov
pop
add
sub
inc
lea
xchg
mov
fsubrs
mov
aad
cli
arpl
push
xchg
and
stos
cmp
test
pop
cli
das
int
lret
push
shlb
test
lds
dec
int
cmp
xor
adc
in
shll
hlt
add
lods
adc
pop
fildll
repnz
or
inc
and
adc
sub
add
popa
push
cli
gs
fsubs
mov
in
lock
fbstp
mov
xchg
fdivp
sub
xchg
pop
sbb
in
das
lods
mov
divb
lret
add
sub
or
fisubl
pop
xchg
push
push
movsl
pop
push
push
dec
subb
inc
test
xor
pop
jns
xchg
inc
or
or
xor
ljmp
shll
and
mov
push
je
jns
pushf
sbb
sub
mov
or
and
in
test
add
xchg
mov
or
mov
outsl
pop
xchg
xor
std
push
leave
lods
xchg
arpl
sub
stc
mov
mov
js
int
push
fimull
mov
das
fs
cmp
lcall
pushf
sti
push
mov
push
pop
lahf
jmp
jnp
xchg
mov
shl
push
les
sbb
xchg
push
dec
dec
xchg
xor
cmpsl
xchg
mov
push
in
in
xchg
adc
xor
xor
gs
lds
push
sbb
inc
cmpsl
inc
cmp
nop
mov
in
push
adc
jne
fstl
mov
xor
fstl
sbb
shrl
test
inc
int3
ja
inc
cmp
lock
lods
push
sbb
cmp
mov
cmpsl
push
xchg
mov
stos
push
rorl
in
xor
xor
dec
stc
dec
mov
dec
jg
push
roll
dec
inc
out
xorl
adc
in
or
or
ljmp
mov
insb
push
je
pop
push
push
outsl
stos
int
nop
jecxz
das
ss
ljmp
pop
jo
lods
les
pop
sub
pop
sbb
push
inc
add
enter
arpl
sub
xchg
fsubl
cmp
insl
mov
mov
lods
js
inc
dec
sub
ljmp
lret
sub
out
cmp
les
popa
int3
pop
mov
popa
dec
adc
ret
std
enter
mov
push
scas
mov
mov
popa
fdivs
and
nop
ss
shrl
mov
or
mov
fcmovu
pusha
jle
inc
out
std
jg
and
insl
fistl
lea
test
jae
pop
push
pusha
push
call
aam
sbb
rcll
jne
mov
loope
cld
insl
mov
fldenv
movsl
dec
jmp
xlat
aas
sbb
shr
jmp
cmp
sbb
adc
inc
mov
cmp
test
push
sbb
push
mov
mov
push
testb
add
mov
ret
loope
mov
inc
std
roll
inc
fwait
cmp
add
fimuls
fwait
cmp
ja
xor
in
dec
cmpl
lock
int3
mov
fsubs
dec
les
pop
pop
test
and
lret
pop
aad
mov
xchg
scas
fiadds
bound
insl
aam
out
out
adc
nop
or
iret
movsl
inc
lret
mov
test
mov
sub
jg
test
lods
jne
fcmovbe
ret
cld
das
subb
push
push
push
dec
push
add
mov
sbb
mov
or
xchg
or
fistpl
imul
jne
cmp
hlt
out
sbb
jge
ljmp
mov
popf
xchg
out
aad
mov
xor
and
xor
mov
jns
and
rcl
loop
jmp
adc
in
sbb
ss
out
mov
fwait
arpl
push
iret
movsl
xchg
stos
lock
add
sbb
and
imul
ds
pop
std
push
loope
inc
call
insb
addr16
fcom
inc
sub
cltd
add
add
mov
subl
cmpb
rcrb
sahf
hlt
cli
popf
imul
mov
cmpsl
ds
push
imull
pop
jl
inc
mov
jno
push
cmp
jae
je
adc
jg
ficoml
mov
decb
out
popa
sub
fisttps
test
mov
ss
pop
xchg
repnz
sub
xlat
or
fisttps
push
sarb
jns
mov
jmp
push
test
sub
jne
mov
lret
dec
aas
xor
fistpll
push
gs
repnz
shr
pop
mov
mov
xchg
call
push
ret
clc
pop
negl
mov
sub
lahf
nop
mov
stc
lods
lcall
dec
icebp
pop
push
stos
sbb
pop
sub
aam
pop
xor
rorl
xchg
pop
cmp
xor
push
cmpl
sbb
in
in
cmpsb
xchg
out
jne
sub
push
cmp
sub
jmp
push
cmp
mov
mov
push
jmp
push
jae
inc
push
jo
and
aad
push
rolb
movsl
fsqrt
into
jmp
outsl
scas
dec
testl
das
clc
dec
call
cmc
push
mov
mov
adc
data16
jle
and
divb
cwtl
sbb
fcmovu
dec
jb
mov
jg
clc
out
pop
je
outsb
mov
inc
and
or
aas
in
int
push
sub
mov
test
and
lahf
cmpsl
xchg
rcll
dec
or
lret
and
mov
out
jp
add
mov
xor
js
rolb
lea
mov
fidivs
adc
idivl
adc
sti
lcall
mov
pop
xor
mov
or
test
add
add
xchg
pop
call
add
and
fisubl
test
xchg
cld
or
mov
insl
into
sbb
fsubr
dec
pop
push
dec
lret
bound
mov
loope
jge
mov
xlat
cmp
std
fsts
jg
inc
inc
or
stc
jnp
push
xor
xchg
mov
adc
jb
mov
sbb
hlt
xchg
push
jno
adc
movsl
lock
xlat
sti
xchg
imull
pop
bound
pop
jl
dec
or
subb
insb
xchg
add
mov
fldl
ret
test
mov
iret
or
jp
add
xchg
outsb
jge
cmpsb
jl
insb
lahf
in
push
xchg
das
xchg
test
jl
sbb
das
cmp
push
mov
popf
dec
jl
in
outsb
or
pop
mov
or
xor
enter
jbe
cmp
adc
addl
xchg
inc
ret
ljmp
inc
mov
pop
rol
inc
ja
xchg
cmp
jnp
adc
in
fisttpll
xchg
fs
sub
repnz
aas
push
stos
pop
aad
roll
fbstp
out
lcall
xchg
cltd
outsb
leave
and
adc
jmp
inc
dec
xlat
lods
or
push
and
popf
cwtl
cmp
call
cmc
dec
mov
pop
sub
pop
mov
lods
mov
jnp
ret
jbe
pop
clc
mov
lds
lods
add
or
push
mov
xchg
lods
add
pusha
das
fucomi
inc
jmp
pop
movsb
sub
in
fdivrs
sbb
into
fstps
vpmullw
mov
ja
mulb
loopne
jmp
ret
push
cwtl
ret
mov
push
js
mov
test
aaa
mov
xor
fidivs
dec
in
xchg
aad
ret
lahf
xor
int
push
jmp
xchg
push
mov
and
shlb
jnp
xor
mov
mov
adc
xchg
daa
mov
nop
cmc
push
rclb
outsb
loope
mov
lock
push
mov
mov
cs
popa
loop
jno
adc
outsl
addr16
sbb
jp
mov
sbb
loope
jle
cli
jno
add
mov
xor
mov
loop
es
dec
mov
fdivrs
mov
sub
jnp
pop
sub
outsl
shl
jge
adc
jae
sbb
out
repnz
lcall
hlt
or
mov
pop
popf
pop
inc
xchg
out
aas
pop
loopne
out
xchg
test
cltd
out
ja
repnz
int
test
or
in
inc
and
add
in
imul
js
std
sbb
or
mov
aad
mov
arpl
sub
arpl
fnstcw
add
mov
std
daa
pop
cltd
mov
or
in
mov
das
pop
xchg
xor
mov
cmpb
push
jae
testb
je
sub
jae
mov
mov
mov
stos
push
cli
xor
nop
leave
ss
pushf
pop
xchg
decl
push
mov
xchg
sahf
xchg
pop
insb
orl
sub
fidivrs
and
pop
into
push
xchg
dec
adc
jmp
jne
daa
idivl
and
ds
or
popf
scas
les
lock
iret
and
insb
push
rorb
in
call
lahf
sub
sbb
aaa
popa
cmp
pop
pop
sahf
outsl
mov
insb
adc
push
fwait
cs
cmp
or
fisttpl
into
daa
test
ja
push
mov
xor
cmpsl
in
test
mov
cltd
inc
test
xor
and
in
mov
inc
mov
cmp
scas
rol
cmp
cmp
andb
pop
movswl
push
roll
sbb
mov
xchg
push
into
jnp
insl
xor
inc
push
cmc
mov
jns
xor
xorl
inc
pop
popf
fistpl
sbb
mov
adc
and
sbb
jo
mov
and
xor
mov
mov
pop
std
sbb
and
sbb
ja
mov
lahf
imul
iret
stos
mov
jp
push
ss
cmc
std
test
mov
jne
and
jno
mov
mov
pop
adc
xor
pusha
ljmp
in
cwtl
notb
mov
inc
mov
dec
in
push
inc
or
mov
cs
lods
push
dec
xor
jmp
std
hlt
bound
lds
sbb
es
or
jae
sbb
sbb
out
pop
imul
nopl
fwait
jo,pt
repnz
icebp
sub
fcoml
push
cli
xor
scas
call
inc
adc
shll
loop
mov
inc
int
subl
add
and
dec
sahf
dec
mov
std
in
pop
add
ret
fwait
scas
mov
fadds
mov
sbbb
push
add
mov
icebp
adc
and
dec
push
pushf
in
and
inc
pusha
imul
mov
cltd
or
pop
mov
jl
icebp
inc
fisttps
cmp
xor
xlat
leave
iret
sub
scas
sbb
in
ljmp
ljmp
fisubl
repz
ljmp
xchg
int3
and
popa
mov
je
mov
pop
push
or
jne
scas
dec
pop
sbbb
and
sbb
pop
dec
ds
sbb
add
div
inc
pop
cwtl
in
pop
or
add
push
pop
mov
jbe
cmp
and
addb
sti
stos
mov
add
int
scas
movsb
inc
decb
push
dec
cmp
mov
jno
arpl
call
fimull
mov
push
orl
shlb
rorl
jg
mov
pop
jg
repz
ficompl
sbb
dec
pushf
cli
in
repnz
mov
cmp
fmull
mov
call
push
addb
inc
insb
into
push
jl
rorl
movsl
inc
pusha
inc
push
movsb
push
adc
dec
cmp
cmpsl
icebp
mov
cmp
repnz
cltd
loope
leave
push
add
insb
mov
fiaddl
in
push
cli
lret
or
dec
out
int
mov
xchg
jb
cmpsl
and
dec
insb
jnp
sbb
xchg
jmp
out
cmp
pop
push
stos
add
fnsave
lods
adc
or
mov
lahf
jmp
popa
jl
push
les
out
push
sarl
and
sahf
inc
call
lds
xor
call
out
les
mov
mov
loop
daa
mov
add
or
test
sub
xlat
pop
mov
xchg
pusha
iret
loope
addr16
push
mov
ja
mov
sub
adc
fsubrl
push
repz
mov
push
movsl
xlat
loop
mov
ret
jno
outsb
xchg
loope
or
lock
mov
push
in
inc
mov
mov
pop
test
push
and
xor
popf
pop
shr
xchg
loopne
adc
sub
inc
adc
ds
test
inc
push
push
pop
jno
outsb
movsl
mov
push
sarl
push
sbb
cli
pushf
pop
xlat
sahf
and
scas
adc
sbb
out
jg
dec
sbb
sbb
icebp
inc
inc
adc
add
push
inc
inc
jbe
dec
mov
pop
adcb
xchg
rolb
in
mov
outsb
dec
or
fisttpll
icebp
stos
lahf
push
xchg
jg
out
cmpb
addr16
popa
push
jno
ret
cld
movb
pop
fs
out
enter
filds
push
dec
xorb
imul
xor
shl
sahf
lret
xlat
sbb
cmp
xor
mov
fs
jmp
sub
dec
pop
setge
sbb
jo
stc
cmpb
aaa
into
adc
cs
insl
outsl
push
mov
xchg
xchg
xor
orl
push
push
ss
and
mov
pop
ret
xchg
jl
or
cmp
jmp
test
loope
pop
push
mov
js
div
pop
dec
outsb
mov
test
hlt
je
insl
stc
xor
cmpsb
aad
repnz
cmp
push
call
jp
cmp
dec
in
ss
pop
fwait
push
stc
movsb
sbb
mov
mov
jno
je
lcall
jge
cmp
outsb
sbb
cli
adc
sbb
imul
sub
xchg
gs
aam
insb
stos
mov
rcrl
xor
push
xor
add
pop
push
push
les
clc
and
loope
cwtl
popf
in
mov
ficoml
adc
jle
xchg
ss
clc
rolb
hlt
aas
mov
movsl
cmp
cwtl
xchg
enter
mov
xchg
out
mov
add
ljmp
jecxz
pusha
sahf
sti
mov
ds
cmp
or
or
pusha
fs
and
mov
out
xor
lock
ret
gs
fstpt
shll
dec
xchg
outsb
popf
cmp
mov
mov
push
popa
xchg
cmpsb
push
or
hlt
cld
out
xchg
and
pushf
or
out
jae
faddl
mov
jne
decl
jnp
push
dec
mov
daa
in
es
add
xor
rcl
mov
adc
and
sub
movsl
test
cmpsb
cltd
dec
test
jl
lock
les
ja
cmp
in
mov
inc
mov
xor
scas
dec
mov
jl
inc
sarl
jno
int3
int3
inc
mov
movb
loope,pn
pop
jo
push
sub
sub
xchg
xchg
cmp
int
mulb
movsb
sahf
out
mov
pop
and
mov
xor
mov
push
mov
mov
roll
int
scas
dec
mov
mov
mov
leave
js
jno
lock
push
cmc
shrb
jns
mull
enter
inc
lret
pop
mov
mov
imul
mov
or
enter
dec
mov
mov
mov
pop
pop
jmp
push
pop
cmpsb
int3
mov
cmpsb
call
ja
imul
repnz
mov
call
jecxz
dec
fwait
jb
push
push
loopne
sub
mov
and
insl
adc
dec
xchg
ja
stos
negb
adc
and
jns
sbb
jnp
outsl
mov
mov
cmovbe
pop
push
inc
pop
pop
ret
and
jge
cld
fwait
add
mov
add
mov
adc
in
push
and
push
jl
loop
in
xchg
fnstenv
clc
testl
dec
lret
cmpl
outsl
push
aad
aad
es
je
add
outsb
mov
cmp
xchg
movsl
enter
std
or
test
cmpsl
jecxz
push
insl
add
xlat
addr16
cs
sub
lds
inc
sbb
lods
xor
fpatan
mov
fistl
inc
add
ja
xlat
or
sub
sub
stos
cmp
lret
dec
adc
int3
into
xchg
inc
rcrl
insb
mov
sbb
xor
aad
sub
clc
or
xor
push
aaa
pushf
pushf
adc
cmp
xlat
and
sub
nopl
or
pop
daa
mov
xor
sub
push
push
xor
push
pop
call
push
cwtl
push
enter
xchg
jmp
push
dec
mov
ds
enter
and
data16
arpl
aas
or
decl
push
pop
repnz
imul
and
ja
shll
popa
aad
xlat
js
jo
cmp
push
les
mov
push
mov
mov
hlt
inc
mov
imul
aad
in
frstor
mov
push
adc
mov
pushf
push
pop
pop
jge
movsl
cld
loop
mov
lahf
lret
bound
fwait
decl
arpl
mov
mov
cld
cmp
mov
jne
ss
dec
aaa
pop
mov
mov
mov
inc
or
jge
sub
pop
mov
jmp
ljmp
movsb
ljmp
clc
push
cmp
cmp
scas
mov
jae
orb
call
xlat
iret
in
test
or
fistps
loopne
sbb
jo
sub
pop
mov
es
mov
push
xchg
aaa
adc
lahf
dec
jmp
movsl
out
cmp
mov
xchg
xchg
cli
pop
loop
inc
lret
add
dec
ja
lret
push
test
ret
pop
imul
fstpl
bound
xchg
cmp
inc
sbb
dec
pop
sub
sub
mov
adc
dec
or
fbld
movsb
inc
roll
xor
mov
add
sub
subl
stc
sbb
out
adc
inc
popa
mov
subb
das
test
inc
add
push
dec
into
dec
xchg
sub
jo
cmp
icebp
xchg
xchg
sub
inc
sbb
sahf
out
jge
aam
or
es
stc
outsb
push
jle
lcall
aam
pshufw
loope
jnp
sbb
jns
xlat
cmp
mov
js
rcl
mov
mov
fnsave
ret
aam
mov
or
pop
mov
jmp
mov
or
cmp
mov
sbb
push
inc
xchg
sbb
fnstcw
sbb
insb
fsubrl
popa
cmp
test
lahf
repz
aas
stos
call
dec
fsubs
or
add
out
in
mov
ds
ljmp
out
xor
inc
repnz
shrl
push
inc
leave
bound
inc
fiadds
cmp
adc
sbb
inc
es
cmpsl
and
mov
or
popa
jp
or
inc
jl
jecxz
insl
jp
xchg
loope
cmp
inc
inc
mov
sbb
imul
mov
aaa
gs
pop
mov
add
movsb
out
aas
inc
aas
imul
das
arpl
xor
movsb
push
repnz
std
pop
scas
lods
mov
daa
into
dec
pop
js
inc
lock
bound
dec
stc
test
cld
testl
in
insl
test
jge
insl
push
pop
rcll
adc
sbb
les
sub
inc
outsb
sti
das
cmpsb
pop
push
mov
sub
out
inc
push
das
hlt
ja
add
and
aad
clc
sbb
es
push
rolb
xlat
xor
cmp
outsl
outsb
dec
push
sbb
arpl
pop
arpl
xor
out
xor
cmpsb
push
xchg
fs
pop
pop
iret
mull
imul
lahf
repnz
xchg
addb
jle
and
and
jecxz
aam
pop
push
into
add
icebp
mov
sub
jecxz
insl
jp
and
adc
jmp
cmc
fidivs
jg
xchg
sub
xor
scas
inc
add
xor
test
cmp
adc
cmp
pcmpeqw
cld
bound
dec
dec
push
lret
imul
icebp
sbb
adc
add
outsb
int3
scas
test
push
mov
inc
leave
arpl
inc
push
sbb
testb
mov
outsb
jge
pop
mov
mov
sub
pop
or
or
lods
call
pop
xor
sub
cmpsl
pop
das
ljmp
test
rcrl
cmc
loope
inc
jp
pop
jne
cmp
insb
fmuls
data16
es
or
enter
test
dec
jmp
mov
mov
pop
or
or
je
adc
dec
setle
mov
push
sub
out
jmp
pop
sbb
mov
out
sbb
adc
cwtl
mov
adc
xchg
sbb
daa
jbe
ror
mov
into
adc
push
sbb
xor
jno
jns
mov
jge
lods
inc
sub
pop
mov
ljmp
and
xchg
mov
je
ret
hlt
negb
aam
je
mov
jmp
loop
dec
mov
xorb
lock
out
arpl
sti
out
loope
inc
notb
mov
in
xchg
sub
or
push
mov
popf
sbb
xchg
pusha
mov
leave
call
outsl
jecxz
lcall
xor
je
xor
ds
int
add
dec
inc
filds
mov
pop
mov
loope
lock
xchg
mov
pop
jae
push
vhsubpd
aam
imul
and
bound
fdivrs
shll
adc
test
lods
sbb
es
das
shl
movl
pop
bnd
std
ds
dec
sahf
add
jg
rcll
pop
sub
ds
and
in
sub
imul
xchg
and
test
cmp
es
push
cmp
test
iret
xor
bound
and
pop
inc
pop
sub
xchg
pop
and
stos
xor
loope
add
cmp
cmp
pop
push
dec
rcl
inc
mulb
imul
fwait
adc
push
mov
push
push
jbe
loopne
fcoml
dec
pop
sti
imul
or
sti
adc
cmpsl
jge
js
or
inc
pop
pop
in
shll
stos
pushl
xlat
ret
lock
inc
mov
or
cmpsl
lea
aas
xchg
jne
sub
dec
shrl
cmpsl
or
imul
mov
imul
sahf
imul
sti
jecxz
xchg
test
pop
cwtl
out
sti
and
lds
testb
and
pop
push
mov
sub
jp
negb
movsl
shl
scas
lret
lret
sahf
mov
and
shlb
xchg
mov
ss
aas
out
test
or
sub
in
stc
adc
insl
fldl
push
fdivl
icebp
dec
vcvttss2si
cmpsb
adc
sub
pop
cmp
mov
mov
xor
jmp
hlt
aad
out
adc
inc
dec
sarb
adc
xchg
inc
fninit
inc
roll
jmp
pop
inc
jmp
xchg
dec
mov
or
dec
in
mov
fwait
adc
mov
orb
add
and
mov
int
adc
sub
mov
cmc
js
push
push
pop
push
cmp
dec
pop
xor
mov
inc
hlt
lret
jg
sub
cld
add
sahf
lret
fs
les
sbb
mov
jnp
nop
push
int3
inc
xchg
xchg
movsl
sbb
xchg
cltd
ret
xor
xchg
xchg
out
dec
inc
add
orl
std
popa
pop
and
les
cmp
scas
pop
adc
fwait
popf
gs
cmc
bound
jo
in
jno
sbb
dec
push
ret
or
xchg
add
sbb
xlat
into
jnp
xchg
pop
test
xor
or
sub
mov
movsb
loopne
adc
sub
or
jno
mov
inc
or
nop
sub
fdecstp
push
fistpl
mov
pop
les
les
lods
inc
mov
rcr
add
mov
cli
mov
lret
jns
sbb
test
xchg
lock
sbb
pop
pop
inc
mov
xchg
insl
js
adc
jno
addr16
sbb
dec
sbb
loope
xchg
mov
call
mov
test
push
push
and
inc
xchg
inc
repnz
or
sbb
pop
or
std
lock
int3
push
outsb
mov
add
cwtl
sbb
cmp
dec
ret
imul
out
dec
or
imul
mov
shld
jmp
add
mov
jle
les
insb
sub
sub
subl
dec
int3
cmp
sbbb
cmovl
cmpsl
js
dec
jge
add
stos
in
jmp
movb
xchg
add
dec
adc
iret
mov
dec
clc
dec
mov
int
out
movsl
mov
inc
add
or
arpl
mov
fnstcw
insl
aad
xchg
arpl
inc
and
pop
loopne
lret
imul
pop
push
jecxz
and
jge
xchg
sub
jge
cli
jo
inc
xor
sub
cld
movsb
mov
adc
mov
or
jecxz
sub
lcall
popa
jg
cmp
dec
std
outsb
fmull
daa
in
xchg
popa
std
imul
arpl
mov
xchg
cmp
sahf
cmp
clc
out
shll
mov
cltd
pop
enter
outsl
cmp
push
sti
adc
lret
push
or
dec
and
aaa
repnz
popf
inc
mov
pop
sarb
jecxz
push
ja
outsl
stos
enter
pop
sbb
stos
lods
jnp
stc
test
dec
push
data16
into
out
push
aaa
data16
aaa
mov
stos
std
cmp
jl
ljmp
push
xorb
sahf
pop
aaa
cmp
mov
lds
outsb
inc
into
xchg
sub
sbb
repz
cwtl
les
negb
or
insb
xchg
data16
push
push
divb
xchg
and
outsb
stos
jle
adc
adc
dec
fldt
repz
sub
add
mov
mov
pop
lock
cwtl
nop
sbb
mov
adc
cmp
push
add
cmp
icebp
ljmp
movsb
scas
pushf
xchg
out
inc
xor
les
sti
xchg
mov
roll
mov
xchg
add
fbld
or
test
jo
ja
pop
mov
into
ficoml
or
cmp
imul
mov
fcomp
jb
and
pop
sub
icebp
lahf
cmp
mov
les
jns
cmpsl
mov
ficoml
jl
and
sbb
sbb
push
adc
bound
jp
aad
movsl
or
aas
pusha
int
ror
fcomp
cmp
jno
pop
fmuls
flds
les
movsl
xchg
pusha
cmp
xor
in
pop
jle
mov
scas
stc
iret
push
aad
adc
imull
ret
adc
sti
pop
or
cmpsl
cmc
fcomps
in
ret
fists
xchg
stos
xor
stc
push
jge
sarb
ljmp
je
add
or
sbbl
fmulp
push
cmc
push
push
pop
stos
lock
xor
mov
fdivr
dec
out
cs
stc
sarb
outsb
mov
jp
hlt
ja
mov
andb
fwait
jge
xorl
push
test
mov
test
stos
inc
rolb
fmull
int3
shlb
sti
cmp
pop
push
scas
jae
xor
pop
mov
sub
fildll
in
push
daa
xchg
sbb
push
adc
ret
popf
or
and
movsb
pop
mov
mov
xchg
lods
cmp
xorb
add
loop
outsb
push
cltd
sbbb
and
stos
icebp
in
add
push
pop
jno
mov
sub
xchg
xchg
mov
xchg
pop
out
mov
fs
das
cmpsl
aad
fwait
icebp
lcall
sbbb
imulb
jecxz
daa
in
mov
pop
test
sub
pop
popa
js
pop
jge
sbb
in
xor
scas
mov
push
pop
hlt
insl
es
inc
daa
fcomps
cwtl
lock
push
inc
sub
mov
icebp
adc
and
xchg
jp
xor
rorb
popa
mov
out
push
inc
aaa
and
in
adc
or
jmp
rorb
jecxz
cmc
adc
xchg
sub
test
mov
inc
fs
in
push
sbb
jg
or
and
push
inc
pop
inc
or
sub
jne
dec
jns
push
lock
push
cmp
neg
sub
dec
lret
push
imul
and
cmp
jecxz
dec
adc
inc
sub
ja
pop
sbb
es
xchg
inc
in
inc
or
sub
scas
repnz
mov
and
idivb
rol
push
jae
inc
sub
cmc
mov
xchg
ror
dec
dec
pop
adc
jb
push
popa
aas
and
jb
inc
inc
je
in
pop
adc
jbe
movb
mov
inc
mov
jbe
repnz
daa
xchg
jo
mov
out
mov
fistpl
cmp
ljmp
inc
test
adc
add
shll
sub
repnz
push
icebp
dec
in
cmpsl
jmp
rol
dec
mov
jno
scas
icebp
push
mov
jbe
ds
cli
out
insb
hlt
es
jmp
in
imul
add
pop
rcl
imul
xchg
jp
cmp
and
arpl
aaa
mov
shlb
xchg
rorl
jnp
jne
in
stc
dec
mov
test
loope
dec
lret
ja
or
enter
push
push
mov
mov
cmp
mov
ds
xchg
xor
popa
lods
pop
dec
mov
nop
inc
sbb
mov
outsl
int
sbb
cmp
mov
es
sbb
mov
push
add
loopne
jmp
imull
sub
mov
mov
mov
adc
cmpsl
pop
iret
mov
jnp
pop
cmp
dec
and
cmpsb
inc
xchg
out
aaa
add
dec
test
subb
lods
mov
hlt
mov
addb
jb
fsubrs
mov
stos
push
lock
test
lret
adc
stos
out
push
shll
jnp
xor
jnp
xor
mov
cltd
rolb
adc
cmpsl
push
inc
shrb
hlt
adc
inc
xchg
outsl
sarl
cwtl
test
sbb
call
ja
frstor
mov
add
mov
xor
aad
sbb
or
adc
add
dec
fmuls
or
push
jmp
addl
mov
cmpsl
call
movsb
popa
pop
adc
aaa
test
in
pop
adcb
and
and
or
xor
pop
imul
push
push
push
push
mov
pop
cs
in
jmp
xchg
mov
or
loop
into
out
push
or
xor
cld
cmp
xchg
movsb
push
cli
xchg
add
shl
mov
inc
sbbl
test
adc
inc
pushf
scas
mov
mov
pushf
es
mov
aam
xchg
shr
aaa
push
mov
movsl
and
push
jp
push
xchg
aad
addr16
adc
cmp
aas
or
jg
sbb
inc
cmpsl
push
mov
mov
xchg
in
leave
xchg
cmp
jnp
aas
mov
mov
cmpsb
mov
inc
sbb
dec
xchg
and
and
aas
pop
mov
scas
idivl
pop
shll
mov
dec
mov
adc
and
fnclex
std
cli
aad
mov
pop
enter
cmpsb
gs
fcmovne
out
sbb
pop
and
insl
mov
filds
ret
aam
fisubs
jns,pt
or
jmp
icebp
push
pop
and
jne
pop
cld
jg
push
dec
out
andb
pushf
arpl
jae
mov
jecxz
es
clc
mov
les
pop
test
sbb
jmp
cmpsl
jle
cmpsb
cmpsb
jg
sub
test
test
je
inc
scas
dec
hlt
cmp
rcrb
je
insb
fs
fiadds
cs
test
mov
push
adc
fldenv
inc
hlt
lods
xor
lock
xchg
data16
shll
ljmp
mov
rolb
repz
jbe
pushf
je
cmp
pusha
xorb
mov
dec
shlb
addb
in
mov
notb
cmp
xchg
jno
mov
push
mov
in
lods
stc
and
jecxz
jae
imul
adc
pushf
sbb
adc
and
cmp
divl
or
in
clc
sub
pop
fildll
mov
sbb
jmp
mov
push
push
jecxz
mov
outsb
andl
add
xchg
push
mov
imull
push
inc
shl
int3
push
pusha
outsl
popa
mov
pop
in
ds
int
sub
pop
rcrl
addb
xor
add
ficompl
jns
repnz
mov
in
xchg
jg
inc
mov
jo
or
enter
cli
ds
pusha
idivb
xor
sub
lods
fsubrl
in
jnp
cld
xchg
mov
roll
or
jno
pop
sbbw
xor
shr
pop
sub
shlb
xor
push
xor
adc
pop
dec
loope
jmp
xor
jo
mov
loope
js
iret
shlb
add
pop
sub
dec
mov
add
or
addl
pop
mov
cwtl
je
mov
mov
popf
outsl
add
in
jnp
pushf
repz
lret
fnsave
or
xor
lds
test
mov
inc
mov
add
or
inc
pushw
rsqrtps
test
aas
or
dec
and
mov
xor
mov
ret
cwtl
cli
add
sub
loopne
loope
shr
sub
cli
popf
loope
cmpsb
push
push
cmp
aaa
insl
cltd
out
lods
lods
or
fists
xor
lret
bound
xor
and
out
cmp
inc
cmp
scas
mov
in
sub
xor
aam
leave
movsl
push
and
pop
xlat
pop
fnstsw
xchg
in
mov
movsb
xchg
scas
iret
shrb
inc
mov
cmp
cmp
popa
popa
addr16
fwait
imul
mov
out
in
add
mov
stos
mov
call
cld
pop
mov
hlt
pop
sub
loope
pushf
andl
mov
xchg
mov
push
and
sub
cwtl
xchg
in
fbstp
push
or
add
insb
mov
fldl
pop
cmp
daa
mov
shrl
jecxz
loop
cltd
sbb
fnstsw
xor
push
or
pop
dec
xchg
adc
mov
cmc
mov
push
jmp
insb
xlat
inc
xchg
inc
test
stos
mov
rol
push
test
dec
mov
mov
sub
dec
out
ret
adc
hlt
js
popf
aam
push
adc
dec
xchg
push
lds
pushf
andl
aam
jg
test
mov
in
inc
nop
ret
loope
xor
rcl
mov
add
data16
push
cli
mov
mov
psrad
mov
pop
out
mov
shll
mov
push
adc
jg
icebp
mov
sbb
fs
fsts
mov
loope
bound
out
add
lcall
les
lock
jno
or
xchg
add
push
orb
daa
jbe
xchg
ficoml
ret
rcrl
jl
dec
inc
fisttpll
push
xchg
sub
js
dec
mov
call
cld
sbb
mov
fsubp
xchg
cmp
gs
sbb
push
dec
mov
lret
fs
hlt
cmpsb
rol
or
loope
in
ret
or
cwtl
ss
push
fnstsw
shll
test
lcall
push
and
stos
and
fwait
dec
leave
leave
jecxz
sub
cmp
fs
xchg
testl
call
fstpt
stos
sbb
sbb
and
stos
test
push
inc
outsl
pop
and
jge
cmc
int
mov
push
pop
jns
jp
pop
pop
aaa
inc
sahf
pop
sub
cmp
and
inc
sub
adc
sarl
out
out
out
push
mov
sbb
cmp
mov
and
sbb
push
mov
xor
and
jne
mov
fsubrs
xlat
pop
cmc
sbbb
sbb
or
jp
cmpsl
pop
outsl
stc
cmp
in
and
std
add
loope
adc
outsb
arpl
aam
xchg
cmc
jmp
and
mov
xor
icebp
cmpsl
mov
push
pop
inc
adc
out
inc
jmp
ja
inc
sarb
rorb
sbb
dec
push
sbbl
or
mov
das
test
cmp
mov
test
stos
jae
pushf
in
pop
inc
or
add
inc
inc
jae
or
gs
js
mov
push
sbb
aad
and
and
jns
mov
add
dec
mov
fsubrl
mov
cmp
mov
shlb
dec
pop
scas
mov
lret
nop
mov
xchg
adc
jbe
jae
stc
das
inc
add
ds
pop
int3
lahf
sub
mov
lods
sbb
mov
inc
lret
jb
std
cs
push
ljmp
xlat
or
adc
dec
mov
js
fdivr
xor
notl
pop
vunpckhps
add
pop
inc
fdivrl
sub
and
mov
mov
stos
push
adc
jne
jnp
ja
xchg
imul
mov
out
cli
test
inc
stos
jle
mov
ja
out
stos
pop
push
mov
jle
xor
xlat
dec
xor
jo
data16
divl
cs
xchg
xor
jbe
ret
shr
sbb
lea
add
cwtl
loopne
mov
mov
out
pop
aaa
push
inc
sbb
enter
or
and
jp
mov
mov
popf
mov
inc
ja
insb
push
push
fnstcw
in
inc
insl
add
inc
push
inc
or
jmp
fsubrs
pop
lea
mov
mov
mov
or
and
aas
mov
int3
cmp
test
add
es
sub
js
cmp
dec
leave
or
or
lods
jne
fnsave
outsb
mov
cmovle
nop
inc
lahf
das
mov
push
test
inc
iret
mov
movsl
lahf
mov
sub
pusha
jp
or
popf
cmp
adc
and
mov
lea
aas
fucomip
outsb
add
pop
fwait
xor
es
and
mov
aaa
jle
jo
lret
scas
inc
sbb
in
push
mov
and
mov
xchg
stos
and
xor
stos
fndisi(8087
inc
lock
pop
cmp
sahf
or
fildll
jnp
cs
cmpsb
cli
ljmp
pushf
ret
xchg
dec
ror
pop
dec
xlat
clc
pop
dec
iret
pop
pop
roll
out
mov
out
and
popa
xor
mul
pop
xor
lods
and
pop
jp
mov
vfnmsub132sd
inc
loope
mov
into
pop
sti
inc
xchg
jmp
lret
jl
lahf
ds
fildl
sbb
clc
xchg
lock
insb
mov
xchg
test
lcallw
sti
push
je
ficomps
adc
inc
fidivl
lods
je
or
test
pushf
aam
sub
xchg
mov
test
es
push
or
mov
loop
mulb
mov
loope
icebp
mov
push
arpl
or
mov
outsl
and
rorl
arpl
arpl
sub
add
pop
inc
scas
push
loopne
inc
pushf
hlt
into
cmpsb
movsl
inc
iret
mov
sbb
push
add
jp
or
cmpsl
popa
and
ja
xor
push
shll
loope
loope
lret
mov
lea
in
cltd
rorb
adc
mov
mov
mov
dec
pop
dec
sahf
outsb
push
inc
std
aaa
mov
rolb
rol
outsl
je
push
sub
jo
and
xor
adc
jne
subl
mov
int3
and
and
mov
adc
fwait
into
ret
movsl
fxch
and
imul
fwait
mov
mov
cmpsl
mov
movsl
jb
or
push
ljmp
cmp
scas
cltd
out
outsb
push
adc
sub
js
xchg
cltd
dec
sbb
cld
leave
je
jae
in
inc
hlt
fidivrs
lss
mov
and
cmpl
rsqrtps
aad
adc
in
fdiv
or
lret
jge
xchg
cld
jmp
scas
push
imul
or
mov
test
shll
cmp
lea
push
adc
xor
sarl
adc
dec
cmp
dec
or
lods
shlb
out
pop
pop
repz
push
cmp
push
jmp
cmpsl
in
add
mov
iret
cmc
xor
out
std
adc
and
shl
dec
leave
inc
dec
and
cmpsb
lods
inc
repz
in
stos
and
jnp
stc
mov
outsl
in
push
outsl
aaa
cs
call
movsb
xchg
sbb
push
inc
loope
mov
cmpsb
ret
jbe
push
shll
pop
mov
dec
fsubrl
jno
loop
scas
rorl
imul
stos
xchg
adc
jge
movsb
cmpsb
dec
mov
xor
je
pop
arpl
out
dec
lret
and
dec
rcrl
fstps
shl
xlat
mov
outsb
mov
push
rcr
or
inc
sub
jmp
in
xor
jbe
sub
pusha
and
dec
dec
fldenv
in
scas
stc
mov
and
add
ljmp
inc
adcl
and
mov
xchg
pop
nop
inc
push
push
dec
cmp
mov
adc
xlat
inc
stc
fwait
lods
xchg
popa
mov
ljmp
loope
icebp
ret
in
hlt
dec
nop
ds
daa
dec
jae
xchg
faddl
lods
sar
addr16
adc
add
lret
iret
sub
sub
stc
jmp
hlt
xchg
jecxz
dec
test
insb
and
sub
lods
mov
add
mov
jge
jmp
idiv
push
sbb
shrl
xor
jl
mov
icebp
bound
or
xchg
dec
inc
mov
and
lods
jle
out
sti
lret
inc
scas
pop
mov
fistpll
adc
fs
roll
jl
fwait
pop
out
es
scas
ds
lret
sub
nop
cmp
nop
push
adc
scas
cmp
xor
movsw
inc
sub
add
adc
mov
inc
pusha
das
cmp
dec
daa
subl
inc
test
adc
xor
stos
pop
mov
push
out
in
sarb
imul
push
ds
xlat
mov
inc
inc
imul
jmp
dec
mov
test
xor
cmp
cmpsl
scas
fbld
dec
adc
popa
outsb
cmc
sub
adc
add
bound
adc
xchg
pop
mov
call
inc
or
push
test
int3
jl
pop
aad
repz
dec
mov
test
notl
add
sub
loope
dec
pop
inc
push
xchg
stos
sbb
adc
add
xor
or
mov
add
lret
ficoml
xor
cmpl
leave
push
pop
mov
sbb
clc
incl
rcrl
mov
ficoms
push
sbb
mov
loop
stos
pop
jmp
pop
mov
out
and
mov
test
data16
imul
into
cmp
lretw
repnz
mov
add
sub
test
dec
sbb
stos
sahf
dec
push
cmp
mov
mov
xchg
mov
jle
insb
rcrl
subb
lea
sub
and
mov
and
out
fisubl
clc
aam
cmp
cmp
push
fadds
pop
jp
cmp
pusha
loope
aam
and
cltd
mov
xchg
lret
jo
in
mov
das
mov
mov
xor
mov
test
lods
jbe
in
je
cmp
fnstsw
push
xchg
push
xor
and
inc
sbb
sbb
add
fwait
inc
cmp
dec
xor
mov
jnp
push
icebp
movsb
sub
inc
mov
nop
inc
iret
outsl
or
mov
test
and
xchg
mov
loop
sti
and
dec
inc
cmp
mov
sbb
mov
loop
inc
test
js
dec
insl
in
mov
sahf
filds
pop
or
rcrl
dec
hlt
outsl
in
mov
pushf
or
inc
push
aas
pop
imul
push
push
les
xchg
outsl
pushf
inc
aaa
inc
lea
xchg
insl
int
add
lahf
test
lods
xchg
add
enter
xor
xor
aaa
sbb
mov
adcl
sbb
loop
movsb
mov
mov
loopne
pop
hlt
stos
repz
sub
or
scas
leave
js
ja
shl
mov
cmp
sub
in
or
jl
jge
stos
sub
jo
push
adc
xchg
pop
cltd
mov
add
push
add
js
adc
out
fbld
outsb
rolb
jnp
jns
push
dec
into
clc
je
in
fsubs
enter
pop
jne
and
xchg
or
pop
pop
and
stos
notrack
adcl
add
test
sub
push
cmc
cmp
mov
arpl
rcrb
cmpsl
loopne
aas
popa
jno
ja
push
in
rclb
push
jmp
mov
fwait
loopne
insl
arpl
mov
mov
fs
mov
out
imul
dec
push
and
stos
test
sub
shll
add
xchg
dec
ret
mov
lret
into
pop
pop
adc
mov
lds
imul
push
sub
mov
addr16
push
cmp
nop
imul
xor
mov
and
add
inc
addr16
dec
mov
sub
loop
mov
cld
xor
insl
in
inc
dec
sti
push
subl
push
push
mov
cmpsl
imul
aam
xchg
jnp
aam
mov
jno
or
pop
in
aas
jp
jle
push
sbb
sbb
jae
sbb
push
inc
sub
lahf
mov
out
xor
pop
scas
lea
shll
imul
sub
jg
mov
stc
cmpsl
lds
jnp
stc
std
xchg
sbb
push
mov
ljmp
aam
sahf
vmovntps
mov
push
idiv
sahf
cmc
clc
xchg
dec
inc
sub
and
stos
imul
adc
fmulp
jl
lods
cmp
ret
loope
xlat
adc
add
push
cld
pop
sbb
push
adc
mov
out
lcall
andl
lds
jecxz
test
outsb
jle
push
or
clc
outsl
std
inc
mov
dec
setb
add
xchg
mov
inc
stc
mov
mov
andl
add
fcoml
mov
jnp
xor
movl
mov
lret
mov
push
ret
cmc
cmpsb
lahf
add
inc
test
mov
pop
bound
sti
aas
in
or
cmp
mov
lods
push
mov
mov
and
push
jp
jo
mov
sbb
adc
or
xchg
cwtl
inc
adc
pop
sbbb
stc
xchg
call
scas
inc
cld
xor
aas
into
imul
jnp
jg
xor
cmp
je
mov
mov
nop
jb
sbb
mov
jo
popl
mov
shl
into
add
xor
ret
stos
or
xchg
rcrl
mov
cmpsb
jle
movsb
mov
pop
jae
stos
cmp
dec
push
lds
jp
inc
shl
jae
shll
push
xchg
pop
int
out
xor
shlb
push
lcall
xchg
lods
mov
sbb
lcall
sub
jl
or
in
lock
lods
mov
call
add
dec
adc
cmp
push
arpl
shlb
push
and
sub
out
mov
mov
push
dec
loopne
lret
or
fs
int3
push
loopne
jae
test
imul
or
mov
mov
xchg
in
clc
in
add
iret
cmp
out
xchg
cmpsb
jne
es
insl
mov
arpl
shlb
and
cmpsb
aad
test
repz
out
or
mov
lret
pop
mov
push
jp
pop
pop
push
add
dec
out
test
pop
mov
pusha
push
mov
dec
mov
pop
test
das
xor
mov
jg
fisubrl
fs
sub
dec
stc
cmp
and
sub
mov
jle
int
pop
ss
jb
cld
punpckhdq
push
sub
jp
jns
jmp
jge
popa
insl
jbe
or
cmc
iret
test
xchg
mov
push
test
mov
add
and
push
out
inc
push
idiv
leave
lods
pop
fidivrl
inc
stos
mov
or
push
mov
sbb
insl
jg
sbbl
ja
scas
pushf
outsl
push
cmp
rorl
popa
jge
xchg
movsb
sub
sbb
add
push
fdivs
sub
lahf
mov
cmp
test
orl
push
int3
pop
xchg
mov
push
mov
enter
jl
dec
sti
add
loope
mov
mov
testb
fwait
adcb
pop
adc
push
mov
xchg
dec
xor
es
or
sahf
xchg
or
mov
lret
subl
adc
lcall
cmp
mov
mov
xchg
push
push
mov
repnz
iret
call
jo
hlt
push
mov
mov
outsl
push
ljmp
cmp
scas
fcmovnu
adc
pop
hlt
sub
mov
mov
aas
jmp
or
add
inc
outsl
shll
xor
movsb
mov
jecxz
sbb
cltd
dec
pop
sub
leave
out
inc
inc
mov
push
pop
pusha
xlat
mov
mov
mov
mul
sub
lds
lahf
sub
mov
lock
dec
dec
out
pop
in
push
inc
dec
cmp
xchg
adc
cs
push
test
or
int3
xor
xchg
adc
sbb
insb
jmp
out
insb
orl
mov
sub
dec
aad
dec
mov
rclb
sahf
xchg
and
and
daa
jne
movsb
cmpsb
push
pop
xchg
fwait
pop
push
in
cmp
inc
xchg
ret
fnstcw
fadds
insl
inc
push
orb
push
sub
sti
jb
adc
dec
test
imul
dec
and
outsb
cmp
inc
and
outsl
js
iret
xor
loop
jnp
orl
adc
ds
push
imul
xchg
xchg
ljmp
push
dec
inc
fnclex
gs
into
mov
out
leave
mov
add
dec
fstl
jo
dec
insb
gs
pop
notl
sub
fwait
out
dec
mov
outsl
outsl
xchg
or
push
mov
jl
xor
push
xlat
les
and
divl
pop
or
fsubrs
icebp
xor
or
pop
add
xorb
adc
leave
dec
cs
push
inc
add
in
lahf
scas
cs
push
jnp
cmp
shrl
std
test
lret
mov
xchg
add
sahf
mov
cmp
divb
gs
pop
add
in
xchg
repz
jb
mov
mov
and
cs
clc
add
lock
scas
test
mov
mov
rclb
stc
orb
jecxz
jg
push
push
lea
sub
ljmp
popa
fldl
mov
stos
and
orb
out
hlt
cmc
test
inc
jp
mov
jne
xor
push
mov
pop
call
icebp
mov
push
stos
sbb
das
les
fnop
inc
xchg
mov
push
movsl
cmpsl
jmp
xor
adc
mov
in
mov
mov
push
xchg
out
sahf
lock
inc
lods
loop
mov
push
sub
or
icebp
fistps
and
pusha
cld
xor
mov
das
nop
hlt
pop
push
jb
insl
push
mov
mov
jmp
mov
mov
mov
push
mov
inc
pop
sub
nop
in
fldcw
cmp
into
popa
cmc
mov
cmpsl
push
ficompl
mov
pop
mov
or
daa
aad
dec
data16
cmp
and
cmpsl
data16
das
jecxz
xor
fadd
out
sub
xchg
sub
test
jp
xchg
in
arpl
in
xor
jae
jmp
mov
das
test
adc
aas
scas
out
sub
pusha
clc
inc
stos
jg
fildll
fcomip
loop
inc
xor
dec
out
xor
sub
xor
mov
mov
shlb
add
xor
mov
rcl
jo
or
mov
dec
xchg
adc
mov
mov
mov
pusha
xchg
out
lcall
cmp
adc
mov
shll
xor
clc
xor
es
mov
push
dec
push
lods
mov
mov
inc
push
jne
mov
mov
cli
sub
push
cltd
mov
mov
cld
iret
xor
jbe
xor
jns
dec
xchg
or
and
aad
dec
scas
sbb
jmp
hlt
and
mov
fstps
sub
pop
cmpsb
dec
hlt
stc
pop
jo
negb
hlt
jg
mov
sub
lea
jnp
pop
lahf
sahf
mov
dec
mov
jbe
mov
into
inc
xchg
push
pop
mov
frstor
adcb
mul
adc
call
pop
xchg
xchg
jp
outsb
xchg
movsl
dec
push
xchg
fwait
cmpsl
loop
push
movsb
jp
fneni(8087
sub
cmp
mov
aas
int3
dec
adc
lcall
imul
jae
stc
cld
jl
push
leave
inc
rcll
xchg
fcoms
mov
push
sbb
iret
pusha
dec
inc
cltd
fcomps
and
add
out
and
les
leave
cmpsb
sti
cli
mov
inc
mov
jae
sbb
sub
fucom
jbe
repz
ja
cmp
jnp
dec
xchg
outsb
out
stos
mov
jnp
cs
xor
cmp
sti
mov
inc
lea
or
loop
mov
pop
cmp
in
xchg
popa
xor
push
leave
aas
testl
aaa
mov
das
mov
cmpsb
mov
pusha
or
mov
lcall
sti
stos
stos
cs
shlb
test
js
mov
add
sbb
push
in
xlat
push
iret
xchg
lock
xlat
ret
loopne
jb
stc
jb
dec
sbb
or
inc
xor
push
mov
cmp
rcr
fldt
and
int3
pop
push
mov
mov
push
pop
pop
push
in
xchg
inc
jp
jno
mov
add
test
dec
rorl
into
adc
mov
push
fwait
pop
dec
or
shl
popf
in
mov
orl
pop
scas
fcmovnb
scas
shlb
jecxz
inc
pop
xor
loopne
pop
mov
in
clc
idivb
dec
cmp
xchg
clc
ret
push
push
jl
xor
out
aaa
pop
insl
lahf
data16
xor
inc
mov
and
scas
add
out
or
pop
fs
jbe
rcrb
sbb
adc
add
incl
and
cli
and
cmpsl
dec
mov
iret
mov
sbb
jl
sbb
mov
sbb
dec
jns
imul
in
xor
or
pop
cmp
imul
cmp
lahf
push
sbb
pop
jp
xor
sub
push
movsl
pop
sbb
cvtps2pd
iret
xchg
push
jl
dec
cwtl
pop
inc
inc
idivl
pushf
add
sarl
ret
push
mov
sub
cmp
jb
outsb
pop
rcrb
add
out
cmp
or
das
and
ficomps
mov
xchg
mov
inc
cs
mov
sbb
nop
mov
add
pusha
sbb
or
cmp
aam
fnstcw
ljmp
test
push
add
and
stos
mov
cltd
hlt
sbb
lahf
sbb
jns
hlt
scas
or
ds
xor
cli
cmp
push
lcall
dec
inc
aad
dec
unpckhps
mov
fabs
movsl
and
rcrb
test
cmpsb
adc
call
lret
insb
pop
cmpsl
inc
jg
mov
daa
insb
mov
sbb
cmp
sbb
cli
sar
push
dec
mov
mov
lock
loope
push
pop
cltd
or
sub
xchg
divl
pop
push
incl
cmpsb
adc
sub
dec
mov
outsl
mov
pop
pop
add
mov
aas
dec
mov
dec
cmpsb
push
push
pusha
shll
cs
push
lahf
decb
dec
xchg
xchg
mov
jae
xorl
mov
pop
adc
and
out
je
iret
scas
loopne
mov
shll
push
jp
fidivrs
arpl
popf
shlb
sbb
push
pop
out
pop
sub
push
xchg
leave
add
xchg
fwait
jno
mov
pop
adc
mov
dec
cmp
notb
fs
mov
fmull
sub
ja
push
or
test
mov
and
inc
jl
loope
push
imul
in
inc
call
cmp
xchg
pop
mov
dec
jb
jo
pushf
jecxz
sbb
xchg
mov
add
and
mov
js
sbb
outsl
sub
dec
out
es
mov
test
mov
fs
insl
mov
sub
push
ret
jle
lret
adc
push
xchg
jae
xchg
jmp
fisttpl
imul
out
enter
push
sahf
fdivs
in
aam
test
jns
jg
or
lods
add
scas
mov
inc
hlt
or
adc
and
cs
negl
add
es
repz
jnp
jns
cld
loopne
call
cmp
xchg
repnz
mov
cs
test
jns
sbb
mov
mov
je
adc
outsb
or
inc
fstp
pushf
dec
or
push
cmp
ljmp
les
jmp
mov
push
enter
loop
and
jp
add
inc
mov
xor
mov
cltd
test
cmp
aad
jmp
mov
jmp
dec
add
les
scas
mov
mov
gs
dec
jp
imul
xchg
and
push
cmc
and
mov
cli
into
dec
sbb
jb
cs
xlat
and
leave
xchg
pusha
iret
loop
cmp
popa
and
stos
sbb
mov
adc
push
insl
lahf
xchg
movsl
sar
add
popa
jmp
cmp
and
mov
hlt
push
es
out
sbb
push
jo
push
adc
fdivrp
inc
sti
insb
xor
stos
pop
jmp
outsl
outsb
mov
in
jecxz
jae
lods
movsb
cwtl
in
push
xchg
fldl
shrl
fildl
mov
xorl
sbb
cmp
mov
pushf
ds
outsl
movsb
pop
add
pop
jb
cli
pop
xsave
sbb
sbb
mov
sbb
mov
push
mov
cmp
push
jmp
scas
pop
sub
cmp
mov
push
mov
movsb
js
in
popf
push
xchg
or
inc
and
int
xchg
rolb
push
cmp
lret
out
fists
push
sub
sbb
mov
fs
pop
or
adc
mov
test
loope
lcall
shl
jecxz
mov
std
lret
xlat
adc
dec
pop
cmp
aam
aam
sbb
mov
ja
test
mov
cld
sbb
cmp
jns
mov
adc
mov
or
cli
and
add
test
push
cmp
mov
pop
sub
ret
mov
in
in
inc
sub
bound
adc
mov
mov
cwtl
lods
xchg
mov
mov
mov
test
sarl
idivb
call
xorb
sbb
jno
sub
fdivp
sbb
lea
jmp
inc
add
cmp
xor
movsb
mov
jle
clc
add
dec
dec
and
mov
push
jmp
xchg
jnp
jae
mov
xchg
dec
fsubp
jno
xchg
push
pop
sub
popa
xchg
push
cwtl
ds
bnd
push
adc
add
ficompl
pop
push
mov
xchg
lahf
inc
or
xchg
lret
push
xor
pop
inc
sub
cmp
mov
pop
outsl
xchg
je
cmp
stos
outsl
jmp
jae
xor
imul
xor
xor
call
adc
push
dec
aas
pop
mov
pop
add
xlat
jmp
push
add
xor
mov
add
sbb
jge
and
call
dec
addb
int
sub
cmp
xor
sbb
adc
and
aaa
pop
mov
mov
mov
sahf
cs
std
inc
dec
aaa
mov
or
es
loop
or
rcr
cmpsb
je
in
in
mov
inc
mov
mov
ret
sarb
inc
mov
call
call
cltd
cmp
mov
pusha
xchg
xacquire
and
lret
stos
pop
sub
int3
fidivrs
pop
sbb
popf
pop
addb
aaa
lea
lds
std
ret
jb
sahf
fstps
call
sbb
daa
sub
aam
clc
scas
jl
sbb
pop
popa
mov
push
aad
test
int3
neg
mov
inc
sarb
aas
cltd
inc
hlt
leave
push
mov
pop
xor
ss
fldcw
std
add
cwtl
fidivl
mov
dec
fimull
imul
fisttps
mov
ror
xor
loop
mov
pop
jle
fwait
outsb
mov
cmc
aad
sbb
jmp
xchg
aas
popf
test
and
mov
or
xchg
adc
stos
aas
push
shll
mov
aad
aad
std
or
sub
out
lcall
inc
roll
inc
ljmp
movsb
dec
rolb
pop
jb
pop
pop
cmpsb
ret
adc
rcrb
es
das
mov
test
mov
mov
and
or
jge
adc
ljmp
push
lret
xchg
stos
mov
mov
jae
pmulhuw
cmpb
arpl
and
mov
bound
xchg
mov
filds
push
in
mov
dec
imul
add
mov
mov
leave
pop
mov
mov
pop
and
add
pop
sbb
mov
sbb
shr
aam
je
inc
add
and
pop
jmp
fdivrl
movsb
xchg
dec
mov
movsb
mov
shrb
push
inc
adc
pusha
dec
out
jo
adc
pop
mov
cmpl
lods
vcvtsi2sd
pop
sbb
dec
fucom
sbb
imul
in
mov
xor
jae
jge
call
dec
inc
out
loopne
addl
cs
pop
div
xor
icebp
xor
sub
or
es
adc
mov
cmp
loop
movsl
or
cwtl
out
or
cmp
jne
fsubl
repnz
mov
pop
sub
enter
je
sbb
sti
popf
mov
and
fwait
inc
push
jbe
or
int
jb
mov
jne
or
incl
pop
rclb
xchg
jge
stos
rorl
cmp
mov
mov
arpl
dec
adc
sbb
xchg
add
cmp
xchg
sub
cli
inc
lods
fiaddl
sbb
xchg
push
ljmp
std
shll
shrb
mov
lods
pop
aaa
sahf
sbb
sub
push
lock
inc
fdivr
xchg
negl
cmc
cmp
in
arpl
mov
fisttpl
inc
pop
jbe
and
mov
lea
mov
or
aad
int
push
lods
jecxz
loopne
inc
push
sbb
fimull
jae
sub
sub
cmp
cs
sub
clc
fs
or
pop
mov
push
dec
mov
mov
push
sbb
push
or
int3
jb
xchg
cmc
cmp
jne
push
jnp
pop
daa
xchg
scas
int3
leave
push
inc
jle
sar
inc
push
into
adc
fxam
movsb
ret
cmp
jmp
mov
mul
int
xor
sbb
fstpl
mov
mov
fmull
sub
test
push
push
sub
mov
test
fists
loopne
push
add
out
das
cltd
jmp
popa
jbe
test
enter
push
mov
cwtl
cli
je
adc
daa
mov
push
and
xchg
loopne
dec
addr16
movsb
sbb
in
aas
pop
mov
add
jle
test
push
xlat
or
push
inc
sub
mov
mov
aam
adc
adc
pop
add
push
das
shll
mov
jge
inc
pop
ficoml
dec
test
sbb
mov
fldl
das
fdivrl
daa
mov
sar
jns
mov
addr16
mov
push
push
in
sbb
add
cmp
enter
mov
mov
inc
jo
movsl
call
js
sub
push
pop
push
shrl
lea
nop
inc
insb
and
jge
and
xchg
adc
daa
and
es
mov
pop
jno
xor
add
outsl
or
aad
andl
loopne
aam
cmpsl
dec
jb
add
ja
jecxz
out
insl
loop
je
inc
adc
scas
dec
push
jecxz
push
mov
flds
insb
out
pop
cmp
js
rorb
inc
ret
repz
iret
or
jmp
jbe
cltd
out
inc
sbb
mov
mov
sbb
fists
insl
pop
addr16
aam
scas
push
xor
in
mov
lock
int
ds
and
decl
pop
add
mov
inc
test
in
push
jg
add
pop
in
outsl
test
add
pop
out
sarl
push
arpl
int
jg
xchg
jae
fidivrs
xchg
cmp
movsb
pop
dec
scas
inc
dec
movsb
call
imul
mov
push
lahf
cmp
leave
fsubs
adc
cmpsl
jle
pop
ss
sub
jge
xchg
dec
add
shlb
push
jecxz
daa
fsubs
push
xchg
sbb
dec
jl
mov
call
inc
jecxz
jg
mov
dec
arpl
and
push
mov
mov
pop
mov
insl
xor
inc
mov
mov
sbb
dec
jmp
lret
dec
sahf
push
cmp
mov
sahf
mov
dec
fdivrs
js
jge
stos
rolb
xchg
sub
lret
lock
jmp
sub
push
cmp
neg
daa
xchg
pop
mov
hlt
pop
push
xor
loop
imul
cmp
cwtl
pusha
sbb
out
and
mov
daa
add
imul
nop
inc
jl
push
adc
and
pop
jle
daa
pop
pop
test
shl
scas
cmp
sub
fcoms
mov
pop
jnp
mov
xchg
mov
out
jle
pushf
jno
dec
sbb
ret
nop
mov
xor
repz
hlt
je
jbe
jne
fsubs
sbb
adc
mov
xchg
cmpsl
enter
outsb
mov
mov
xor
cmp
outsb
sub
cli
push
pop
mov
shlb
xlat
inc
cli
xchg
cmp
sbb
in
insl
repnz
inc
ss
lock
jmp
mov
nop
ret
decl
pop
xor
hlt
aas
lods
fs
out
xor
cmp
add
shrb
mov
pop
dec
lds
mov
adc
scas
pop
cld
sbbb
fsubl
push
cmp
repz
je
add
loop
sbb
fdivr
stc
pop
and
scas
inc
sub
rol
lods
mov
pop
mov
outsl
fstpl
stos
xchg
dec
test
out
into
adc
add
mov
rcrl
add
movsb
notb
ss
xorb
daa
shr
shrb
xchg
popa
inc
cmpsl
mov
sbb
lods
fmulp
dec
sbb
popf
cmc
nop
push
adc
mov
sub
dec
icebp
or
je
jnp
mov
mov
movsb
shrb
in
add
test
jg
xlat
push
mov
jmp
adc
dec
and
int
and
xchg
outsb
jno
dec
data16
ss
dec
jno
fcoms
je
outsl
arpl
add
stos
mov
mov
xor
rol
mull
in
sti
mov
adcb
cmp
lods
and
mov
popa
xor
jge
mov
sbb
inc
mov
je
jno
je
mov
mov
sbb
sbb
xchg
cmp
idiv
mov
rolb
sub
mov
pusha
and
int
xor
mov
xchg
dec
lea
in
movsl
mov
dec
clc
add
enter
sbb
or
lret
sti
or
leave
xor
lret
pop
sti
std
add
fistl
das
leave
fwait
loopne
xchg
xor
sahf
xor
lods
adc
xor
add
lret
cld
fiaddl
push
into
stos
les
adc
cmpsb
push
jnp
add
xchg
and
xorl
scas
xchg
dec
movsb
adc
pushf
push
das
insl
into
clc
ja
popf
pop
daa
dec
sahf
pop
stos
xor
lock
cs
or
lret
ds
xorb
leave
loope
imul
mov
stos
mov
ja
cmp
into
ret
jns
xchg
inc
je
dec
gs
pop
aas
cmp
sub
out
cmp
aam
in
addb
lods
stos
jae
inc
xor
cli
push
rcr
out
cs
inc
test
or
cmp
xchg
iret
pop
call
mov
ret
cmp
mov
or
loop
sbb
and
mov
sarb
jne
mov
dec
dec
in
sbb
pop
pop
in
sti
and
sub
mov
repnz
add
adc
xor
ja
shlb
test
testl
stos
ss
aam
es
call
sarl
dec
add
out
fcoms
inc
std
jns
das
enter
mov
mov
scas
push
or
adc
shll
fistl
add
push
aaa
xchg
xor
pop
jne
repnz
lods
push
loop
mov
sbb
int
push
xchg
mov
xlat
xor
pop
pop
dec
pop
mov
inc
cmpsb
je
repnz
jmp
mov
lds
addl
xchg
dec
xor
push
cltd
add
dec
sub
into
sbb
int3
and
sub
push
clc
or
outsl
xorl
popf
pop
lahf
sbb
rolb
mov
aaa
sub
out
and
push
mov
dec
add
mov
arpl
test
ret
pop
mov
and
dec
jb
add
xor
leave
sbb
sbb
pop
jl
and
pushf
js
lods
aaa
shlb
out
xchg
cmpsl
mov
mov
push
dec
cmpsb
inc
mov
repz
jge
cmp
inc
fsubs
dec
and
fcomip
xchg
int3
sub
xor
jge
cmpsb
mov
mov
out
and
data16
pop
and
ds
dec
imul
mov
sub
fs
fcoml
es
stos
test
unpckhps
sti
test
jno
or
adc
mov
pop
cli
decl
hlt
orb
push
mov
fldcw
pop
push
mov
mov
inc
sub
jne
bound
rorl
adc
mov
jbe
movsl
mov
and
ljmp
pushf
repz
imul
clc
sbb
sbb
mov
pop
adc
aam
std
and
rcr
cs
in
ja
in
in
in
sbbb
mov
dec
mov
out
sub
inc
adc
addr16
sub
and
insl
lds
pushf
into
xor
adc
pop
daa
mov
movsl
jo
inc
pop
mov
and
xchg
sub
sub
sub
sbb
mov
stc
call
out
mov
jnp
popf
and
imul
mov
inc
jmp
inc
shrb
es
sub
add
cmpsb
xor
cmp
adc
lret
cmpsb
es
mov
ss
aaa
pop
or
mov
mov
les
xchg
fstl
mov
lret
xor
pushf
cli
into
push
and
fdivl
push
xchg
xlat
ljmp
xchg
mov
xor
adcl
cs
jnp
test
push
push
add
mov
das
fdivl
mov
push
jbe
push
jp
jo
cld
outsb
xchg
add
add
or
lea
cmpsw
ljmp
dec
int
mov
rcrl
and
mov
or
mov
int
jno
inc
xchg
xchg
xchg
insl
pop
sbb
push
mov
leave
pop
xchg
in
movsl
imul
lods
add
sti
mov
ret
into
xlat
es
das
mov
pop
inc
add
lds
stc
in
js
enter
pop
mov
mov
fdivl
cmp
in
and
mov
push
test
or
xlat
inc
pop
repz
inc
jno
cwtl
mov
movsb
xchg
int3
dec
jecxz
test
jno
xor
jmp
pop
inc
pushf
push
inc
roll
jl
mov
push
jnp
fistps
stc
test
xor
mov
push
pop
cmc
pusha
scas
dec
inc
jns
mov
iret
roll
mov
and
mov
hlt
mov
jae
jne
adc
xchg
fstpt
add
loop
sarb
add
adc
fmulp
dec
stos
dec
pushf
xchg
xor
sub
push
mov
lea
xor
push
call
aam
xlat
sbbb
cmp
xor
add
cmp
mov
insl
xchg
jno
testb
outsl
int
mov
mov
jle
sbb
fisttpl
cltd
bound
aaa
ret
fwait
push
fsub
add
scas
cwtl
or
push
cmp
mov
in
push
xchg
mov
push
and
jmp
jl
push
inc
hlt
adcb
test
sbb
push
mov
dec
pop
xchg
push
int3
stos
inc
fs
jl
cmp
ds
cmpsl
loop
cld
addl
pop
daa
lds
cmp
stos
jne
pusha
dec
dec
jp
ds
out
scas
xor
test
test
mov
mov
cmp
cmp
sbb
jbe
xchg
stos
mov
dec
jmp
cmc
in
out
inc
cmpsl
cmpl
cli
jno
jmp
sbb
popa
mov
add
xor
inc
add
imul
cmp
inc
cltd
pop
rep
fmuls
shll
cmp
cmp
pop
imul
test
insb
pop
repz
lahf
cmpsl
ret
fcmovb
aad
inc
ljmp
cmp
xchg
push
in
xor
add
mov
sahf
in
pop
pop
out
push
dec
mov
push
inc
sub
push
cmpsb
push
adc
clc
xorl
mov
cli
dec
negb
lods
fdivrl
mov
std
xorb
jo
sbb
push
into
inc
lahf
cmp
ja
cwtl
jp
adc
push
roll
xor
pop
addb
mov
mov
fimuls
fisttpl
aam
jbe
push
add
dec
xor
adc
fmuls
or
outsb
or
fwait
jb
push
inc
movsl
push
das
inc
mov
popf
in
sbb
subb
sbb
mov
test
aad
or
int3
add
jne
outsl
das
test
sbb
stos
lock
fsubrs
sub
lock
imul
jg
fnstenv
add
or
lock
jo
dec
adc
outsb
push
and
ret
sub
fstl
popf
xchg
add
hlt
clc
test
jnp
mov
jg
ret
sub
aam
jl
jnp
imul
mov
add
test
cmp
lods
jb
xchg
inc
and
mov
arpl
out
jle
fsubs
mov
push
ret
fwait
movsl
mov
lcall
dec
loope
push
sub
mov
shr
out
daa
pop
or
mov
call
cmp
gs
shlb
mov
addr16
das
lret
les
lods
cmc
fs
adc
pusha
mov
inc
dec
add
jecxz
incl
dec
aam
ljmp
icebp
das
cwtl
pushf
aas
adc
or
inc
xchg
or
jecxz
ljmp
push
or
decb
sbb
and
xor
lds
or
mov
mov
call
ret
enter
sarl
dec
shl
fiadds
dec
lcall
and
jae
fidivs
cmp
xchg
xor
leave
push
adc
push
mov
fcompl
or
fwait
adc
in
jbe
jl
popa
movsb
adc
fnstsw
fs
stos
cltd
fs
pop
shr
imul
jmp
push
imul
sbb
ss
out
out
add
repz
mov
popa
hlt
lahf
arpl
les
jns
icebp
call
pop
mov
adc
shlb
sub
inc
int3
adc
cli
cmp
or
in
ret
movsl
xchg
or
and
jnp
xor
fsubrl
jnp
call
ret
ja
rcrl
dec
xor
shlb
sbb
ret
sahf
aam
sbb
lret
mov
xor
mov
cmp
sbb
in
loop
dec
in
insb
cmp
or
push
or
ja
sti
and
repz
dec
fs
pop
xor
enter
data16
cmp
push
imul
jecxz
in
pop
lea
and
jg
adc
jg
inc
jb
cmp
adc
sub
mov
orb
loop
lods
xor
inc
sub
jmp
cmpl
push
inc
aam
cmpsw
inc
inc
dec
shrb
sub
lahf
pop
cli
push
lcall
mov
add
xchg
js
cs
adc
xlat
idivl
xchg
xor
add
test
sti
fiaddl
ficomps
xchg
aad
cmpsl
aad
jae
push
call
cmp
popf
xor
add
mov
push
in
mov
sbb
dec
mov
je
adc
lcall
arpl
cs
clc
mov
bnd
jg
push
push
push
and
cmp
jle
iret
fcoml
insb
pop
dec
or
jns
add
adc
inc
lods
stos
imul
lock
int
xor
in
bound
jns
popa
gs
lahf
push
or
mov
in
into
pushf
popf
cmc
stos
cmp
mov
outsl
sbb
jb,pt
and
jo
sbb
mov
cmp
stos
ret
or
int3
lgs
adc
add
mov
xor
pop
mov
mov
inc
dec
dec
sbb
repz
mov
push
mov
std
icebp
jl
cmp
mov
mov
lahf
adc
jb
push
mov
sbb
dec
and
mov
das
jb
into
or
dec
cwtl
push
jge
je
lods
fistps
pop
sbb
add
lds
sbb
imul
inc
mov
lret
mov
or
xor
pop
adcl
push
push
jmp
pop
jmp
in
pop
jecxz
clc
pop
sub
fisubs
data16
or
mov
testl
ret
mov
ss
adc
ret
pop
jb
cmovs
outsl
std
jae
aad
cmp
test
ret
mov
outsb
jl
es
in
sbb
or
stos
add
dec
push
cmp
lods
mov
ret
fs
adc
xchg
xchg
mov
jle
movsl
jne
inc
sub
mov
mov
or
push
xchg
out
mov
push
push
aaa
cwtl
stc
stos
mov
je
jo
dec
mov
inc
push
push
test
mov
aad
mov
fadd
sub
rcll
fwait
cld
add
pop
sub
int3
xchg
imul
add
add
dec
jl
insl
jo
add
push
jmp
fsts
mov
int3
cld
xchg
inc
ja
leave
xor
xor
xchg
scas
jg
mov
arpl
ror
ret
sbb
sub
mov
sbb
pop
mov
and
imul
fwait
call
lock
inc
fs
xchg
stc
in
mov
add
mov
xchg
sbb
inc
test
in
push
jno
dec
xor
lret
js
je
dec
push
fisubrs
add
pop
and
mov
movsl
pop
jge
movsb
jnp
fxch
push
in
lret
dec
fimuls
push
push
push
mov
imul
cmpsb
cmovae
imul
cmpsl
xchg
test
mov
push
test
mov
pop
movsb
iret
mov
mov
addr16
jne
fcmovne
mov
inc
subb
mov
and
fs
mov
cs
cmovb
test
outsb
adc
add
es
loop
stc
jno
scas
jb
fs
or
and
mov
stc
clc
jge
adc
adc
xor
push
stos
or
adc
sbb
rorb
ds
and
mov
ss
push
mov
cmp
jmp
in
pop
mov
sbb
repnz
es
imul
and
xchg
es
sub
push
rcrl
jge
rol
pop
xchg
insl
jns
pusha
and
addr16
adc
xor
fwait
repnz
and
out
inc
sahf
shr
filds
in
mov
mov
push
cltd
loopne
cmc
mov
inc
sti
scas
inc
adc
int3
push
inc
and
arpl
lcall
mov
rorl
mov
dec
dec
jmp
notl
je
ret
jmp
nop
gs
mov
jnp
mov
sub
cmc
fmuls
in
sub
clc
push
cmp
movsb
scas
mov
sti
and
test
jbe
jbe
pop
mov
push
and
gs
out
repz
out
dec
into
repz
repz
addr16
das
mov
dec
cmp
and
mov
or
sub
pop
pop
lahf
pop
call
popf
lcall
sub
dec
mov
call
ret
or
add
cwtl
lods
push
insb
rorl
insb
stos
xchg
add
out
xor
push
mov
xchg
rep
lea
mov
inc
lcall
shlb
cwtl
loopne,pn
push
fwait
sbb
movsb
mov
es
cltd
andb
mov
jo
cltd
cmp
mov
stos
or
push
ficompl
lahf
scas
data16
cld
fldl
cmp
insb
rorl
mov
add
pop
dec
in
pop
outsb
jge
out
mov
lretw
sub
jg
pop
repz
and
iret
jle
call
jb
sub
sub
les
imul
and
sbb
xchg
pop
dec
mov
int3
insb
jecxz
rcrl
mov
test
aam
dec
enter
mov
loopne
push
outsl
push
mov
xor
push
add
call
mov
inc
fists
mov
lret
movsb
mov
imul
pop
add
mov
jl
nop
adcl
xor
insb
scas
xor
xor
test
xorl
notl
andl
jnp
push
bound
push
jle
nop
in
cmpsl
nop
popa
test
sbb
sbb
repnz
dec
xchg
int
clc
fists
mov
push
das
cmp
loope
sbb
enter
es
push
jnp
iret
add
mov
sub
les
fucomip
sbb
imul
scas
mov
ss
addr16
scas
sahf
xchg
sub
inc
movsl
pop
rorb
dec
incl
lods
mov
xor
mov
pop
jecxz
and
pop
sub
cmp
sbb
or
mov
adc
lods
xor
stos
cmpsb
lods
out
and
fbld
aaa
mov
lret
leave
pop
mov
out
inc
or
movb
dec
adc
sbb
test
mov
nop
pop
mov
hlt
leave
outsb
mov
lds
jne
pop
push
je
mov
push
aaa
inc
imul
lahf
scas
mov
sahf
call
cmc
sahf
mov
lea
inc
in
inc
ret
xor
pop
dec
repz
test
or
popa
push
subb
mov
daa
lods
jae
inc
ljmp
int3
imul
add
push
add
or
xchg
sbbl
sbb
mov
lea
addr16
push
aas
xchg
into
pop
and
repnz
inc
xor
and
jbe
push
rcrb
jae
push
ds
push
les
sub
xor
ss
ret
dec
inc
ss
xor
or
stos
jnp
push
pop
pop
cmp
hlt
imul
adc
vmovups
ds
push
or
or
or
pusha
and
add
xor
shl
out
dec
add
add
clc
push
jmp
in
or
stc
mov
rcrb
aas
or
pop
adc
xchg
mov
out
loop
pushf
rol
imul
cmpl
mov
xchg
pop
sti
mov
fsubl
xor
lcall
adc
dec
ss
push
sahf
leave
nop
and
int
jbe
jnp
shrl
cmp
dec
movsl
push
and
enter
sub
xchg
sbb
pop
icebp
outsb
cmpsl
mov
aam
add
jmp
fcmovnu
out
jl
ss
pop
mov
xchg
cmpsb
cs
shr
sub
mov
enter
cmp
pusha
pop
push
fwait
or
pop
and
push
add
xor
movsb
into
jbe
dec
mov
inc
pop
push
ret
xorl
ret
mov
inc
dec
aad
and
jns
fcomps
add
mov
add
shrb
or
cli
orb
sbb
push
xchg
rclb
mov
xor
cmpsl
test
dec
cmp
stos
shlb
pop
sbb
inc
mov
mov
cmp
sub
and
xchg
pop
cli
mov
lds
sub
pop
pop
in
es
sub
outsl
in
nop
pop
mov
in
out
insb
jo
dec
cmp
rcll
pop
or
hlt
sbb
dec
xor
into
sahf
call
dec
repnz
sbb
inc
pusha
adc
jns
icebp
cmpsb
push
loop
ret
pop
rcrl
inc
jg
and
jb
xchg
jl
xor
inc
xchg
test
inc
in
mov
jl
mov
sub
sbb
mov
xchg
rclb
out
dec
xlat
and
or
inc
jo
and
jbe
test
out
xchg
icebp
in
cmp
es
shlb
or
xchg
adc
add
xor
mov
int
rorl
jbe
xor
fs
bound
mov
fidivs
pop
xorl
sub
ficoml
int3
adc
or
sbb
add
and
in
dec
jmp
mov
jle
leave
lahf
cmp
xchg
pushf
inc
mov
cmp
mov
and
in
popf
jg
mov
aam
jne
push
fnstsw
out
pop
fisubl
dec
mov
adcl
pushf
jle
and
sub
lret
bound
cmpsb
xor
mov
insl
cltd
lds
jo
ret
movsb
cmp
sbb
mov
pop
cmp
push
outsl
jecxz
cwtl
daa
xchg
loopne
in
aaa
cmp
cld
and
test
not
hlt
in
clc
adc
cli
or
test
mov
lret
inc
lret
fidivrs
jmp
in
mov
int
pop
add
daa
ss
xor
mov
or
add
and
js
sbb
imul
push
dec
push
stos
or
sar
lret
lahf
add
das
xchg
or
dec
pop
add
lods
xor
popf
xor
sbb
add
pop
rcrl
xor
mov
lods
jg
es
int
leave
or
or
insb
std
mov
sbb
xchg
jne
add
jg
clc
jae
sti
jbe
push
or
adcb
pop
jne
aas
jns
inc
jmp
in
nop
js
repnz
dec
mov
jnp
mov
push
je
outsl
addb
pop
xchg
aam
jbe
test
cmp
adc
jp,pn
xlat
hlt
pusha
pop
mov
sahf
ja,pt
mov
icebp
push
and
call
pusha
mov
cmc
out
sahf
and
jecxz
or
and
lods
outsb
xor
test
pop
pop
cmp
movsb
pop
nop
sub
repnz
cmp
loopne
sarl
add
push
xchg
inc
iret
ss
out
and
and
add
jae
xchg
jle
or
lods
psubsw
mov
lret
xor
xlat
push
or
sbb
lds
adc
mov
stos
pop
xchg
sahf
orl
cmp
aam
xor
jnp
loop
jne
or
mov
xchg
or
divl
fisubl
sub
sub
sbb
add
mov
add
test
out
fsubs
sahf
flds
or
adc
and
nop
pop
mov
int
push
sbb
cmp
jne
test
lods
les
pop
fucomi
adc
jns
adc
add
push
xorl
push
dec
ret
push
mov
arpl
test
cltd
cli
jle
mov
mov
test
mov
sti
xor
adc
pop
dec
insb
xchg
aas
repz
les
xchg
frstor
cmp
mov
cmpsl
aas
push
pop
in
sbb
arpl
push
scas
dec
popf
cmc
leave
sub
outsl
pop
les
cld
sbbb
inc
mov
out
icebp
jns
push
pop
fs
and
jg
sub
dec
sti
sbb
lods
insb
cmp
mov
pop
or
jmp
mov
and
test
jnp
or
imull
push
cwtl
inc
cwtl
shrl
or
aaa
mov
jmp
xchg
in
ret
cltd
aas
jbe
inc
mov
push
fidivs
rorl
cltd
sbb
outsl
sub
adc
stc
or
mov
sbb
test
sbb
xor
aam
sbb
dec
mov
mov
mov
ljmp
mov
xor
cwtl
mov
scas
add
xchg
add
mov
popf
and
stos
mov
rorb
insl
lcall
loope
add
mov
jne
sub
add
or
inc
inc
cld
out
and
ficompl
xor
and
inc
mov
sar
and
popf
or
sub
dec
xor
cld
inc
ret
aaa
sti
xlat
stc
insl
fs
sub
aam
push
enter
push
or
xchg
sahf
jae
push
push
ficomps
inc
pop
int3
or
inc
out
add
mov
in
sbb
popf
out
push
outsb
jo
push
cmp
mov
lods
add
dec
es
je
cmp
ret
xor
and
es
mov
pop
pop
dec
pop
popf
push
std
jae
push
jno
lahf
leave
mov
jno
push
jp
les
inc
les
push
or
jp
add
dec
inc
shrb
mov
inc
jnp
and
gs
xor
testb
es
ss
int3
sbb
fldenv
scas
mov
sbbb
and
aad
mov
add
or
ret
jge
ja
jo
mov
pop
test
jbe
test
pop
ljmp
out
gs
jb
or
out
add
dec
dec
frstor
pop
out
aas
mov
dec
mov
xchg
inc
add
mov
leave
jg
xchg
adc
popa
xchg
add
inc
fidivl
out
and
inc
adc
mov
inc
push
inc
lret
pop
sbb
fadd
sbb
dec
xchg
cmp
cld
imul
pushf
std
dec
sti
test
inc
in
pop
mov
fst
xchg
jae
and
mov
xor
adc
fisubrl
cmp
bound
insb
and
std
adc
pop
test
cltd
repz
loop
mov
and
mov
nop
clc
lock
call
mov
jno
mov
inc
movsb
fcompl
xor
jae
push
in
push
mov
insl
sbb
scas
ljmp
mov
dec
inc
aas
pop
jbe
jno
inc
pop
adc
xlat
hlt
icebp
xor
in
sub
lret
std
sar
incb
adc
out
pop
lret
mov
fdivrp
mov
cmp
lea
mov
fmul
filds
sub
pop
cmp
jno
rol
lret
sbb
clc
jmp
jno
mov
jnp
xor
mov
fwait
pop
sub
mov
int3
enter
rcll
test
js
lret
inc
pop
jmp
test
movsb
sub
enter
push
loopne
and
jnp
xchg
call
mov
sub
jb
cmp
out
or
cmp
xor
stos
push
adc
dec
mov
daa
xor
int
jae
push
out
add
inc
test
adc
stc
push
dec
dec
jge
add
insl
imul
push
dec
and
mov
shr
fstl
adc
ds
cltd
outsl
jns
ds
movsb
xchg
inc
pusha
jb
mov
pop
jle
cmp
adcl
ljmp
arpl
imul
fidivs
xlat
les
jp
arpl
stos
clc
es
sbb
cwtl
jmp
dec
rclb
pop
dec
clc
pop
jns
test
push
mov
ret
mov
stos
hlt
outsl
cmc
jl
out
jbe
hlt
decb
dec
enter
mov
fsubrs
push
bound
icebp
out
hlt
les
lods
fwait
adc
and
dec
cwtl
pop
ds
pop
std
std
dec
inc
mov
cwtl
test
ja
xchg
xchg
adc
pop
fneni(8087
fidivrl
sbbl
bound
adc
mov
fsubrp
sub
xchg
les
stos
push
enter
jecxz
sbb
dec
pop
fisubl
sub
xor
cmc
data16
push
cmpsb
jg
mov
hlt
lea
push
icebp
hlt
enterw
jg
dec
mov
gs
jne
push
test
add
lret
cmpsb
inc
sar
mov
sub
sub
pop
lds
std
mov
clc
cmp
lods
aad
mov
in
daa
loopne
lods
jmp
adc
xchg
orl
sbb
inc
cmp
add
test
jo
sbb
test
arpl
sahf
out
cmp
pop
outsl
pop
out
stos
or
inc
test
mov
mov
fiaddl
inc
lock
stos
mov
cmp
fcompl
scas
lods
pop
fwait
cltd
imul
nop
push
sub
inc
xor
xchg
movsb
add
jae
push
loop
push
jle
dec
push
cltd
sub
out
fiadds
jo
xchg
icebp
sbb
cmpsb
pop
or
jp
dec
data16
jb
mov
imul
nop
inc
jns
shr
pop
push
pop
je
std
fisttps
rorl
mov
cwtl
xchg
push
es
repz
mov
sbb
xor
fiaddl
into
imul
mov
or
insb
sub
cltd
push
sbb
inc
mov
sti
frstor
xor
pop
lock
or
movsl
mov
cld
ret
xchg
je
pushf
ljmp
sub
xor
jnp
xor
into
and
lds
popf
cwtl
test
mov
popf
inc
int
dec
mov
clc
imul
or
adc
or
pop
iret
sbb
gs
es
mov
sbb
mov
mov
into
jle
test
dec
jg
jmp
inc
daa
inc
imul
push
scas
xor
mov
stc
das
in
pop
ret
adc
stos
das
pop
push
xchg
sbb
loope
xchg
loope
shll
aam
rcr
test
clc
aas
outsl
or
pop
cld
adc
adc
inc
lret
push
push
arpl
jp
or
mov
ret
lahf
jno
push
cltd
jle
jns
mov
cli
jne
mov
pop
jnp
popf
stc
push
loop
mov
jecxz
add
sbb
aas
call
mov
or
and
jns
mov
or
sbb
lds
xor
mov
leave
jl
mov
jp
dec
mov
shl
add
xor
rcr
adc
inc
mov
enter
dec
cmp
in
icebp
pop
out
push
cmp
fprem1
test
xor
or
loop
push
scas
stc
jo
mov
jae
xchg
mov
lea
mov
xchg
or
sub
dec
push
push
das
dec
and
jb
icebp
insb
lret
cmp
mov
scas
lods
mov
inc
daa
sub
out
and
insl
or
and
mov
inc
jo
xchg
fdivl
hlt
push
or
add
das
addr16
inc
mov
dec
jge
lcall
mov
adc
xor
out
bound
inc
mov
jne
jns
sub
mov
repz
fcoml
arpl
imul
jb
mov
lock
add
inc
or
stos
jo
sbbl
aas
inc
scas
adcl
push
mov
je
and
xlat
xchg
ss
jp
mov
out
pusha
and
jnp
cmp
out
int3
mov
mov
push
andl
xor
in
jo
imul
leave
mov
xchg
adc
dec
js
push
fwait
sbb
lods
fdivrs
and
fldl
mov
cmp
jb
sbb
stc
lods
push
pop
xchg
fnclex
nop
daa
xchg
iret
push
data16
outsb
inc
push
test
in
push
push
inc
xchg
xchg
pop
mov
daa
stos
outsb
enter
jae
lods
sahf
push
iret
lods
scas
cmp
jg
les
hlt
adc
cmp
outsb
rcl
push
push
adc
xchg
push
push
leave
outsl
ja
arpl
jecxz
sub
push
es
mov
xchg
cli
add
add
mov
fmul
pusha
out
pop
xchg
cmp
bound
xchg
iret
adc
jae
pop
adc
repnz
mov
mov
stos
clc
pop
stos
scas
mov
push
imul
jl
in
lods
mov
cwtl
jnp
xchg
mov
ds
inc
jno
stc
push
push
pop
pop
mov
hlt
inc
adc
mov
in
test
fnstcw
ret
pop
or
pop
ds
xchg
popf
nop
mov
inc
xchg
xchg
inc
insl
insb
ja
xchg
push
lret
mov
mov
sub
testb
jae
add
sub
rol
cmpsl
sti
popf
push
jb
fdivl
inc
fwait
cli
ja
gs
mov
jl
mov
icebp
pop
daa
popa
pop
pop
aas
out
mov
bndldx
dec
sbb
inc
loope
adc
sbb
lods
push
jmp
sbb
fadd
lock
les
mov
fld1
lahf
jge
fisubrs
xor
lcall
aas
popf
mov
or
adc
arpl
mov
call
fdivrl
inc
jle
in
lcall
xor
sub
bound
dec
mov
loope
jmp
mov
xchg
sub
shll
out
pop
popf
fiadds
sub
mov
int3
and
pop
jne
ljmp
cmp
pusha
sub
adcb
push
cs
jl
neg
add
mov
or
in
xchg
sub
lods
mov
js
imul
scas
mov
pop
mov
fwait
lcall
push
add
push
in
iret
shr
xlat
jl
xchg
pop
mov
out
push
lods
add
xor
add
adc
inc
mov
push
loope
push
sbb
or
sahf
mov
cmp
lahf
sub
mov
sahf
mov
sbb
shlb
stc
jnp
lcall
cs
cwtl
xlat
jae
cs
js
lock
loop
xchg
add
nop
mov
mov
xchg
push
orb
sbbl
das
fbld
test
pushf
dec
adc
sub
leave
shl
repnz
xchg
xor
daa
bound
aaa
aas
fwait
xchg
jge
pop
aam
hlt
xor
sub
ja
lret
pop
mov
push
lds
daa
jno
push
dec
sub
pop
and
cmp
fdivp
repnz
incl
aas
pop
pop
dec
push
cmc
xor
dec
mov
sub
add
jbe
je
sti
mov
js
mov
lds
insb
clc
mov
mov
adc
sub
push
xor
fcomps
mov
fwait
xor
and
imul
test
leave
sub
insb
cmp
lea
jmp
insb
inc
ja
adcl
mov
push
sub
aaa
add
out
cmpsl
add
lahf
movsb
out
imul
dec
in
out
icebp
mov
mov
mov
add
push
in
stc
mov
out
andl
mov
adc
and
test
dec
fnstcw
jb
sbb
int
and
push
push
hlt
stos
mov
repz
xchg
leave
fsubrl
cmpsl
mov
mov
jmp
lds
lcall
dec
mov
jo
mov
xchg
test
scas
mov
xor
jb
or
push
cmpsb
cmp
ficompl
xor
mov
jp
push
ss
mov
call
sub
xchg
sbb
mov
xchg
aas
mov
in
pop
lea
xchg
rcrl
cli
or
mov
jecxz
push
mov
fs
jg
sub
cmp
mov
icebp
adc
out
lods
insl
jp
shll
and
cmc
pop
in
add
xor
mov
pop
cli
or
mov
imul
sbb
fldenv
mov
insb
cmc
ret
mov
popf
aam
dec
sbb
mov
lahf
adc
xchg
and
js
arpl
add
lods
mov
es
nop
mov
int
dec
pop
jb
stos
sbb
outsb
enter
dec
mov
or
ficompl
push
arpl
daa
inc
xorb
testb
sub
ret
push
sbb
cli
lock
fsubl
jns
lret
nop
or
push
pusha
jecxz
sahf
rcll
cmp
pop
mov
out
push
hlt
loopne
imul
in
pop
mov
call
jp
inc
out
adc
xchg
mov
dec
or
or
shll
or
sub
ds
xlat
into
sbbl
imul
in
lock
addl
scas
mov
sbb
fnstenv
cmp
or
jne
xchg
or
sbb
loope
call
int3
cmpsb
ret
xchg
rclb
pop
jo
sbb
inc
jns
inc
scas
or
xor
fcmovu
lock
dec
test
adc
and
and
in
or
shl
cmpsl
jle
sub
lahf
sub
fmull
sbb
mov
xchg
mov
adc
mov
pop
jb
test
pop
icebp
out
push
rcll
mov
andl
dec
negl
push
das
testb
mov
sahf
scas
push
and
xchg
testl
jecxz
outsl
xor
adc
notb
outsl
sub
sub
lods
test
pusha
mov
or
adc
sub
mov
mov
loopne
xchg
jg
xchg
scas
out
xchg
divl
pop
jle
cmp
xchg
in
lret
movlps
cmp
call
sub
xchg
loop
ficompl
push
xchg
jp
ds
aad
call
cmc
xchg
jnp
mov
lock
shlb
ret
cmpl
inc
subl
push
in
ficomps
pop
sub
add
push
stos
js
aas
or
adc
decb
bound
inc
mov
mov
sarb
bound
pop
insl
out
jle
shr
push
lret
mov
jmp
xchg
mov
out
iret
lahf
xchg
nop
in
mov
je
pop
push
cltd
out
fsubrl
dec
cld
imulb
repz
jmp
push
mov
movsb
mov
mov
cmpsb
xor
out
or
xor
ret
adc
shll
jno
xchg
pop
loope
out
pusha
lock
hlt
mov
push
je
adc
arpl
sub
cmp
jmp
cmc
pop
lahf
int3
jae
mov
cmc
outsl
lds
mov
pusha
sub
js
cmp
adc
mov
pushf
inc
adc
mov
xlat
dec
fdivr
gs
stc
cld
in
add
jl
push
stos
jb
pushf
ss
cmp
xor
cltd
jns
aad
dec
lret
fdivrl
ljmp
xchg
mov
sbb
fldl
jmp
leave
jb
inc
cmc
jmp
xor
mov
out
mov
nop
mov
fcomp
fwait
push
kandw
mov
mov
enter
jl
daa
in
jae
sbbb
xchg
mov
push
rclb
aad
in
test
imul
sbb
xchg
xor
xor
adc
jp
push
dec
mov
or
jmp
test
push
or
sub
inc
ss
xchg
dec
subl
mov
xor
jp
enter
push
push
adc
dec
loope
cmp
adc
add
outsl
mov
data16
jmp
jo
out
fidivs
popf
notl
inc
sub
sbbb
int
das
inc
dec
int
or
xlat
in
in
lods
into
add
push
leave
push
dec
and
mov
cmpsb
scas
mov
scas
data16
mov
cmp
sbb
sub
dec
fs
loope
clc
jl
in
xor
js
divb
pop
jb
popa
add
inc
jne
adc
cmp
insl
mov
and
push
int
sarb
lret
xor
inc
das
cmp
pop
and
pop
mov
inc
pop
mov
loope
and
jmp
pushf
cmp
mov
rcr
lret
push
rcr
call
iret
lret
xchg
data16
fwait
xchg
or
sbb
lods
lock
cmpsl
cltd
cmc
fistpll
fs
cmp
cmp
rclb
in
pop
aam
and
push
push
sbb
out
sub
inc
nop
push
es
xor
ds
push
xchg
pusha
xchg
pop
pushf
ja
addr16
jae
sbb
jns
push
lods
or
test
sbb
int3
or
mov
lods
sbb
jmp
cmpsl
lods
int3
incb
mov
pop
and
ret
es
cs
mov
lock
mov
cmp
pop
push
push
into
stos
dec
lret
pop
adc
out
and
adc
mov
add
jge
test
nop
add
lock
adc
xchg
dec
loope
imul
rcrl
or
clc
out
or
adc
enter
xchg
push
jle
arpl
test
xlat
mov
ljmp
pop
and
test
and
mov
pop
cmp
lcall
or
shrb
adc
cmp
or
lea
pusha
xchg
xor
push
imul
hlt
shr
jne
adc
fcmovne
sub
push
mov
push
std
pushf
pop
out
sti
dec
ret
mov
mov
and
jnp
aas
push
fistps
push
test
or
cld
add
ror
gs
mov
jne
jno
leave
jne
js
xor
pop
sbb
movsb
add
jmp
je
shrl
imul
sub
int
and
cmp
mov
jne
rcrl
lahf
jecxz
xchg
jg
leave
xchg
cmpb
data16
and
mov
outsb
jg
shl
test
xlat
jno
dec
arpl
xor
sti
hlt
or
xchg
lock
cmpsb
pop
xchg
jns
sbb
cmpsb
pop
scas
aas
mov
cmp
sub
ret
filds
int3
sbb
and
adc
fsts
sub
sahf
inc
cmpsl
scas
lods
out
mov
cmpsb
adc
and
jns
xor
out
pop
loop
or
jb
xchg
pop
icebp
xchg
das
fsubrs
daa
pop
lock
dec
cmp
and
or
xor
mov
shll
push
call
shr
cmp
aam
out
icebp
outsl
ljmp
pop
push
mov
or
add
stc
cmp
jmp
cmp
xchg
incl
popaw
or
jp
dec
xor
inc
inc
xor
xchg
add
lret
sbb
movq
dec
rcrb
out
test
xorl
mov
sub
out
mov
int
or
ds
sbb
pop
loopne
popa
sbb
lcall
xchg
dec
lret
adc
sub
or
shr
loopne
mov
les
xchg
aad
lock
mov
scas
jnp
adc
mov
or
fsts
jbe
and
and
sahf
out
test
insl
fadds
sub
icebp
mov
mov
ljmp
ss
lock
mov
jle
mov
sub
xchg
push
movsl
inc
je
movsb
cltd
add
jbe
mov
cmpsb
loop
aad
jno
imul
scas
ljmp
pop
jmp
ds
xor
popf
sub
mov
pusha
adc
jo
imul
lods
cmpl
push
dec
std
mov
xchg
dec
xor
mov
insb
cmp
add
and
gs
fistpll
repz
pop
popa
movsb
hlt
rorb
cmp
mov
inc
mov
inc
cltd
popa
scas
jmp
xor
add
dec
ja
jo
or
sub
pop
pop
push
and
dec
sub
repnz
bound
push
mov
iret
jecxz
xchg
ss
outsl
sahf
nop
std
loopne
jmp
scas
push
lods
loopne
adc
outsl
dec
movsl
insb
sbb
in
mov
movsb
push
pop
sbb
cmpl
adc
xor
nop
mov
add
push
clc
sbb
jp
or
sbb
jae
or
add
push
lods
ret
mov
sbbl
mov
xchg
lock
dec
or
mov
or
cmp
mov
int
xor
jmp
repnz
into
or
xor
into
adc
aaa
pop
in
jo
pop
adc
outsl
cmc
mov
ret
outsb
aaa
xor
repz
xchg
mov
data16
outsl
xchg
mov
push
jbe
or
sbb
mov
lods
test
jns
push
fwait
dec
or
mov
pusha
inc
into
push
adc
mov
sti
fcomp
cmp
jnp
add
loope
cwtl
dec
cmp
gs
fstl
and
mov
rclb
call
and
sub
push
cli
jle
mov
cmp
add
popl
aam
xor
jmp
cld
ss
cli
cmp
in
repnz
mov
jno
sub
mul
or
pop
fwait
cli
ja
push
cmpsb
lods
push
mov
ds
cmc
xchg
icebp
fisttpl
inc
inc
pop
in
jg
cmpsl
mov
and
cmc
mov
pusha
jl
push
jge
mov
arpl
rcrb
cwtl
jno
in
cmpsl
in
inc
out
outsb
stos
daa
in
arpl
sub
jae
cwtl
push
insl
inc
mov
and
mov
mov
inc
popf
shrl
xchg
mov
sub
dec
mov
addr16
out
insb
mov
push
imul
daa
xor
loope
test
adc
dec
jle
fcmovu
lods
insb
cmpsb
shlb
fnsave
push
inc
mov
clc
das
stc
out
outsb
in
mov
adc
fiadds
stos
jge
les
cmp
js
mov
sahf
inc
into
dec
pop
push
mov
out
or
or
cld
mov
add
call
ret
icebp
cmp
add
mov
sar
pop
int
fwait
ret
pop
adc
out
xchg
inc
mov
fsubrl
jge
inc
and
gs
inc
adc
cmp
call
xor
cwtl
cltd
insb
js
sbb
xorb
dec
push
pop
imul
subl
sub
mov
xchg
outsl
dec
pop
das
rcrb
pop
or
cld
xchg
out
inc
jle
push
push
push
mov
pop
adc
mov
jbe
addb
push
cltd
xchg
into
int3
jecxz
in
and
mov
mov
loopne
sub
shrb
pop
lcall
pop
ret
leave
sub
inc
mov
imul
push
pop
fwait
mov
out
jne
in
sahf
inc
push
ja
mov
xchg
in
push
mov
mov
or
dec
dec
adc
cld
lds
enter
cmp
rclb
imul
mov
push
jg
gs
or
popf
cmp
stc
aas
xchg
cmp
call
test
pop
loope
pop
inc
pop
pop
loope
and
stc
dec
shl
sbb
mov
mov
outsl
jo
xor
repnz
movsl
shr
push
enter
xlat
lods
popa
xchg
adcl
sub
loopne
repnz
insl
xor
add
push
lock
adc
jns
inc
adc
xchg
xor
and
or
and
push
push
addr16
mov
cmpsl
inc
test
icebp
lea
out
jne
popf
pop
out
inc
mov
fistpll
cmc
lock
pushf
test
mov
dec
push
cli
push
mov
mov
or
les
mov
sub
mov
sub
leave
fiaddl
mov
push
test
sub
rolb
mov
aam
jb
add
test
mov
adc
mov
shr
psubd
pop
mov
ret
sahf
rcl
and
mov
push
es
insb
mov
inc
mov
shl
dec
mov
ljmp
popf
cs
pusha
jg
mov
xor
mov
scas
sbb
sub
cmp
pop
ja
fcmovnbe
in
and
insl
cmpsb
out
pop
roll
lods
xchg
cmp
hlt
mov
das
scas
pop
outsl
jge
jle
test
add
andl
push
ret
jo
cli
mull
nop
mov
and
out
mov
leave
ficompl
test
mov
jbe
push
inc
xor
outsb
or
out
lock
shlb
loop
cmpsb
push
xor
lret
mov
jne
in
adc
push
fiadds
push
aas
jae
out
out
pop
pop
or
push
lods
push
sti
mov
pop
cmp
test
fnstcw
sbb
imul
mov
or
je
jo
out
push
out
adc
push
in
dec
mov
or
in
pop
ja
cli
inc
or
xchg
aad
cli
fs
mov
es
test
rclb
scas
out
fstps
leave
or
jns
push
xor
and
ret
cld
pushf
mov
lds
push
ficoml
jnp
jne
rclb
sbb
jae
lds
je
xor
out
outsl
icebp
es
fdivrs
sub
cmp
call
mov
cmp
jae
inc
fmull
mov
int
dec
idivl
and
mov
pop
cmp
mov
insb
fwait
xor
push
mov
cmp
sub
mov
mov
stos
push
sub
and
fldl
adc
push
cmpsb
inc
or
push
dec
adc
popa
outsl
inc
cmp
dec
sti
sub
pop
cli
hlt
lds
lods
jbe
popa
inc
dec
incb
jns
repnz
sub
dec
dec
cmpsb
add
mov
ror
fnstsw
test
mov
fwait
sub
sbb
add
add
lock
ret
pop
cmc
xchg
into
iretw
jb
fs
loop
sbb
outsl
nop
mov
xlat
adc
insb
add
in
call
jecxz
push
cmc
imull
xlat
lret
and
int
mov
push
cmpsl
outsl
or
jae
movsl
sbb
jmp
inc
cwtl
lret
push
jg
jge
daa
int
sub
out
push
fs
pmaddwd
dec
adc
jb
icebp
cltd
xchg
mov
add
xchg
pop
testl
movsl
mov
iret
call
push
and
stos
pop
pushf
jp
jae
mov
ret
out
dec
jbe
cmp
cmp
divb
mov
mov
std
jo
push
dec
sbb
add
jp
cmp
rol
cwtl
lahf
push
lea
ret
and
aaa
in
sbb
arpl
inc
mov
mov
fstpl
inc
loop
push
mov
dec
sub
fdivr
mov
ds
out
cli
in
dec
mov
fxch
xchg
cld
dec
xor
mov
fldl
cmc
push
inc
mov
push
cwtl
in
adc
subb
jnp
mov
mov
cmp
or
scas
imul
jmp
divl
imul
les
mov
jecxz
add
lcall
push
mov
cli
sbb
testb
ljmp
push
and
pop
dec
shll
clc
jnp
or
leave
enter
jp
out
jp
and
sbb
jg
push
xor
xchg
sahf
icebp
xchg
xchg
je
mov
or
dec
sbb
or
cmp
dec
pop
test
ljmp
jae
mov
out
sar
add
mov
mov
stos
popf
adc
iret
ss
enter
and
mov
test
or
inc
mov
cmpsb
lea
dec
test
xchg
mov
jns
fmuls
and
mov
dec
cmp
push
push
fidivl
jmp
push
mov
xlat
mul
pop
sti
dec
je
aaa
ror
mov
das
ljmp
roll
pop
adc
cmpsl
push
scas
dec
jge
dec
mov
lret
pop
mov
leave
ret
notb
sahf
outsl
into
inc
outsb
stos
decl
add
mov
jge
dec
mov
and
cmp
cli
sbb
fninit
inc
mov
dec
jbe
dec
mov
xchg
mov
arpl
aaa
into
sbb
test
cld
ljmp
jns
ret
cmp
ds
mov
pusha
loop
jnp
cmpsl
pop
outsb
mov
xchg
into
push
into
cs
in
sbb
fidivrs
aad
imulb
les
ja
pop
pop
add
dec
shll
jne
pop
pop
sbb
adc
mov
pop
fisubl
outsb
lcall
push
mov
xor
sbb
mov
mov
lock
rcll
xor
inc
in
sbb
mov
pop
lahf
and
pop
push
gs
push
adc
aaa
jb
pushf
push
cld
in
adc
and
xlat
bound
mov
jg
repz
push
lret
mov
fwait
xchg
jns
arpl
cmp
jne
iret
fsts
lods
inc
cli
aam
or
mov
cld
jno
test
ljmp
in
or
jnp
les
mov
push
mov
decb
push
xor
xchg
push
dec
mov
mov
je
popa
sbb
mov
cmp
clc
sbb
adc
sbb
fnsave
cmp
push
sub
jl
push
leave
dec
in
movsb
lcall
int
das
and
in
sbb
in
jns
push
pop
sarb
repnz
out
mov
jg
test
imul
test
andb
stos
clc
mov
call
cmp
cmc
sbb
out
xor
stos
cmp
dec
mov
xor
mov
adcl
jecxz
int
sub
bnd
xor
in
leave
icebp
xor
outsl
and
arpl
push
rcrb
cmp
xchg
jg
jbe
push
fwait
ds
mov
sbb
sub
jnp
adc
iret
fisttps
adc
mov
sbb
in
mov
xchg
std
or
jmp
sbb
mov
repnz
insb
push
pop
into
push
into
movsl
lahf
repz
mov
je
mov
or
test
shrb
mov
xor
lods
fldl
mov
test
mov
loope
sub
mov
es
inc
inc
adc
outsl
mov
shrb
push
into
cmc
cmp
dec
dec
pushf
add
adc
jle
sbb
jp
cwtl
addr16
jmp
mov
push
mov
test
xor
shl
aad
and
mov
jns
stos
cmp
push
repz
loop
mov
std
xchg
filds
repnz
outsb
cmp
push
push
ret
out
add
into
push
lods
mov
and
repz
and
out
jo
or
into
jno
les
mov
adc
mov
ret
or
mov
pop
push
cltd
xchg
adcb
push
in
stc
daa
sbb
mov
mov
gs
and
mov
ficompl
leave
mov
and
rclb
mov
bound
cmp
inc
arpl
addr16
xchg
sbb
or
jns
xor
xchg
fisubl
out
addl
inc
add
and
mov
add
and
ficompl
push
and
cld
adc
cwtl
inc
cmpsl
cli
mov
repnz
ss
cli
pop
sbb
xchg
stos
push
dec
popf
mov
bound
out
bound
and
shrb
dec
and
xchg
adc
mov
pop
aas
xchg
jge
push
in
and
lods
gs
fisttpll
cmpsl
rorl
aas
xor
sub
stos
popf
sbb
xchg
les
xor
xor
or
jbe
jg
jb
mov
mov
add
mov
popa
pop
sti
dec
push
sbb
stos
mov
loopne
outsl
sbb
test
cmp
fisttpll
push
mov
and
cs
popf
inc
movsbl
pushf
add
cld
gs
imul
lahf
jb
mov
ljmp
mov
sahf
ljmp
xor
mov
shrl
movsl
cmp
shll
aad
adc
pop
sahf
pop
pop
mov
sub
sti
jmp
sub
daa
jnp
push
push
sub
outsb
loope
ss
fistpl
push
scas
xchg
sahf
push
pop
shr
sub
scas
add
pop
jno
addr16
orl
mov
rolb
xlat
xlat
lret
cmp
shlb
xor
sbb
jmp
leave
daa
lret
push
sbb
insl
xor
popa
cmp
jno
popa
pop
pop
add
cmp
hlt
mov
jge
fimuls
das
push
mov
addr16
push
lea
loope
fwait
cs
and
jmp
jae
out
fstl
lahf
mov
lcall
fisubs
cmovle
jns
sbb
loop
add
dec
in
ds
daa
pop
sbb
sbb
fists
pusha
xor
jnp
mov
jp
insb
mov
repnz
mov
dec
shlb
xlat
mov
mov
popf
ja
nop
mov
sub
push
jl
push
stos
ljmp
or
inc
mov
scas
mov
stos
adcb
in
ljmp
cmp
lock
frstor
add
scas
test
xchg
lods
xor
pop
sbb
sbb
enter
loope
in
fcoms
enter
ret
pop
xchg
scas
test
dec
jno
pop
lea
arpl
pop
int
stos
mov
sub
addl
or
cmc
cmp
icebp
xchg
lret
pop
add
mov
iret
adc
fs
lret
or
xor
out
or
andl
xchg
push
xor
mov
nop
rclb
jne
lods
sbb
lea
outsb
and
das
xchg
sbb
xor
cs
in
shrl
imull
andps
mov
sbb
movsb
sub
sub
fxch
jl
test
imul
xchg
xchg
adc
mov
xorl
leave
mov
mov
pop
and
sti
xchg
out
aam
mov
jbe
lock
jge
push
mov
pop
data16
dec
aas
push
test
cmpsl
mov
mov
jne
pop
cli
je
sbb
add
mov
sub
jnp
pop
jge
mov
pop
js
subb
pop
or
mov
bound
cmc
jl
ds
imul
cwtl
scas
nop
jne
data16
cmp
stos
mov
leave
xchg
out
aam
jb
adc
call
aaa
insb
pop
rcrb
inc
inc
mov
in
fdivrl
mov
mov
or
adc
mov
fdivl
push
enter
or
mov
push
js
and
sti
jmp
jmp
mov
test
cmpsl
sub
jge
push
rorl
mov
out
leave
mov
xor
orb
clc
and
mov
mov
fs
pop
data16
addl
sbb
jmp
idivb
je
fildl
jl
inc
pop
rcrb
jne
mov
jno
pop
aam
lahf
jl
shr
adc
pop
out
sbb
xchg
sub
lds
cltd
mov
std
pop
loop
add
sbb
movsb
push
jo,pt
pop
sbb
jns
add
sub
lret
cmpsb
aam
shll
adc
pop
ret
lods
xorl
sarl
mov
ror
outsl
mov
xchg
sbb
xor
cmp
ret
rolb
push
add
sahf
ja
and
int
pushf
inc
mov
jmp
ret
adc
pop
cmp
xor
call
jge
leave
addl
adc
shlb
aam
fildl
int3
sub
xchg
sub
repnz
shll
xor
dec
fdivrs
lea
xchg
cmpb
xor
fs
popf
ljmp
es
jnp
fistl
out
aaa
xchg
add
iret
ffree
add
xchg
das
scas
push
test
lods
pop
cld
add
outsb
mov
notl
add
daa
scas
pop
xor
int
cwtl
push
sub
adc
dec
xor
mov
fs
fistpll
xchg
int3
aas
inc
xchg
arpl
cmp
push
fisttps
jle
ds
lods
adc
push
push
je
aas
outsl
in
enter
xcrypt-ecb
cmpsl
or
push
and
mov
hlt
aas
mov
inc
add
lahf
mov
aam
adc
push
mov
pop
sbb
jae
in
addl
aam
adc
push
xor
mov
clc
adc
sub
movsb
fs
fsubr
mov
sbb
dec
xchg
mov
push
sbb
movsb
dec
fwait
add
adc
mov
jmp
ret
mov
insl
mov
mov
jno
inc
cmc
inc
jp
and
aas
clc
mov
add
out
pop
add
jmp
aas
cmp
mov
sbb
sbb
unpcklps
add
lock
xorb
mov
fistps
ret
mov
sub
xchg
aaa
push
shlb
stos
cmpsb
vmovups
and
call
cmp
adc
movsb
fs
js
fstl
jbe
adc
push
andb
sarl
in
jae
mov
ret
pop
sarb
cld
loop
xchg
int
loopne
not
jo
inc
es
jmp
test
aas
mov
cltd
and
mov
jecxz
pop
xchg
sarl
jg
jmp
or
push
dec
repnz
push
sbb
rcrl
neg
mov
out
pop
xor
mov
mov
dec
xchg
mov
les
outsl
pop
sbb
mov
repnz
adc
xchg
or
lcall
xchg
aas
push
cmp
cmpsb
lds
in
incl
cmp
mov
cld
shrl
arpl
xor
loopne
cld
dec
lret
inc
mov
lods
sub
add
jbe,pn
jns
stc
out
lahf
es
ret
arpl
xchg
push
ficomps
add
imul
ficoml
jmp
bound
jne
adc
aas
lret
test
sbb
and
or
pop
mov
dec
inc
pop
inc
xchg
fmulp
imul
add
lret
and
pop
sbb
mov
xchg
push
add
cmp
aad
loop
push
jnp
repz
psubusb
xlat
mov
arpl
testb
cmc
aam
inc
pop
jmp
jg
push
cmp
pushf
negl
cli
lret
je
cs
push
icebp
clc
stos
add
fdivr
aad
push
std
in
int3
pop
and
mov
test
loope
or
lock
rcll
dec
inc
loop
iret
lret
rol
adc
adc
mov
cltd
call
out
cmp
xor
push
add
adcb
mov
rorl
or
and
mov
inc
cltd
lret
cmp
jno
adc
sbbb
mov
dec
xor
fnstsw
clc
xchg
leave
movsb
dec
inc
xchg
or
pop
xchg
mov
fs
xor
push
dec
adc
icebp
sbb
imul
jl
jle
mov
add
lcall
adc
adc
mov
test
cmpsl
sti
mov
mov
loop
add
mov
add
cmpsl
inc
push
mull
shr
jnp
xchg
dec
add
addb
sbb
add
mov
js
into
shlb
mov
pop
dec
bnd
jno
ds
test
jg
dec
adc
or
out
mov
pop
mov
mov
test
pop
or
inc
clc
ret
sub
jecxz
sbb
inc
mov
mov
sub
or
popf
lret
stos
jmp
scas
les
cmp
mov
test
push
and
sbbb
leave
gs
outsl
mov
call
out
andb
stc
xor
add
xchg
add
imull
punpckhbw
cmc
or
pusha
cmc
les
cmp
dec
test
jecxz
stc
xchg
add
into
cmp
add
clc
repnz
arpl
test
jge
aad
xchg
adc
popf
push
xchg
and
push
xchg
sub
pusha
push
and
inc
aad
add
imul
outsl
loopne
pop
cmp
insb
and
jl
in
movsl
ret
stc
jecxz
fs
dec
mov
inc
fndisi(8087
xchg
mov
arpl
imul
ljmp
popf
mov
xchg
aad
and
mov
jns
js
out
test
js
sbb
cmp
fwait
pop
outsl
mov
call
dec
jl
int3
sbb
inc
adc
mov
xchg
jne
xor
es
xorb
repz
mov
xor
pop
add
xor
in
push
es
xchg
test
jns
das
ret
xor
jno
inc
js
sub
push
ds
ljmp
xor
dec
inc
mov
bound
pop
sbb
xchg
and
push
js
lea
sbbl
aaa
xchg
and
jbe
sbbb
mov
das
dec
push
xchg
or
fxch
arpl
clc
jno
addr16
dec
sub
mov
fdivs
test
lret
or
jb
cmp
mov
cmp
push
or
test
std
arpl
rcrb
mov
test
mov
and
mov
cli
into
push
addr16
outsl
push
inc
les
xor
jge
repz
ret
xchg
and
cmpsl
stc
and
or
inc
addl
and
dec
test
test
arpl
dec
push
sub
shl
mov
pop
dec
dec
xor
dec
mov
bound
jmp
ja
sbb
mov
lcall
popa
stc
push
hlt
jp
sbb
xchg
cwtl
adc
cmc
outsl
pop
adc
dec
push
das
xorl
add
ds
in
mov
xor
pop
cmpsb
pop
and
imul
lret
and
dec
adcl
idivb
push
push
pusha
adc
mov
adc
xchg
movl
xchg
push
push
rclb
sbb
mov
addr16
icebp
mov
or
ds
insl
add
inc
jge
push
jno
cmp
mov
std
cmpsl
cmp
scas
ja
push
jns
pop
xor
packssdw
inc
push
push
into
out
int
xchg
sbb
imul
outsl
movsb
nop
sbb
fwait
jno
pop
jg
xchg
inc
sub
out
xchg
daa
mov
pop
lcall
sbb
bound
loope
iret
push
push
mov
lds
mov
sbb
xchg
inc
loopne
mov
dec
aam
jp
cmp
sahf
mov
mov
dec
adc
push
inc
cmc
add
out
sti
fnstcw
sti
popa
or
cmpsl
js
imul
leave
pop
add
add
mov
jo
inc
in
cmp
int3
out
lahf
sbb
fists
arpl
xor
or
xor
jmp
mov
and
lahf
ja
cmp
fimuls
clc
mov
scas
frstor
adc
push
lock
mov
adc
leave
add
fcmovnbe
mov
xchg
sub
adc
mov
out
xor
ss
pop
mov
inc
test
mov
icebp
dec
xchg
mov
jb
shlb
stos
dec
sbb
mov
aad
pop
mov
in
test
leave
mov
dec
cli
push
inc
push
test
and
jg
jp
xor
int3
push
aas
fs
mov
add
xlat
jmp
test
xchg
mov
gs
pop
jne
aaa
adc
push
cmp
pop
push
cmp
ljmp
xchg
daa
xchg
mov
ret
push
je
fildl
outsl
adcb
es
stos
or
loop
leave
jmp
in
ficompl
dec
adcb
stc
pop
popf
stos
and
jmp
pop
sub
xchg
scas
js
fs
fnstsw
sbb
xor
xor
inc
aam
stos
insl
cmp
sbbl
jle
jnp
push
insl
fld
adc
push
inc
push
loope
jno
push
stos
dec
push
sti
jbe
scas
sub
fistpl
test
jl
sub
cld
xchg
inc
leave
xor
push
ljmp
cli
dec
pop
negl
dec
test
mov
and
sub
sbb
divl
lock
pop
out
inc
fldl
sti
mov
pop
push
inc
out
cmpsl
jno
ds
dec
sbb
fwait
mov
xchg
push
sub
scas
and
out
in
mov
lcall
lcall
lea
pop
pop
pusha
xchg
or
jge
cmpsb
fisttpll
push
mov
mul
faddl
repz
out
rcr
sbb
repnz
inc
dec
loope
aam
xor
test
call
jge
mov
add
mov
push
mov
and
add
cmpsb
data16
mov
test
mov
push
or
xchg
loopne
ds
aaa
sbb
push
mov
sub
mov
in
mov
inc
cmpsl
loopne
sbb
pop
fildll
xor
pop
lods
js
shll
pop
imul
rorb
inc
xor
sbb
and
mov
push
popf
shll
inc
iret
or
pop
jmp
mov
cmc
rorl
inc
jns
lcall
stc
loopne
jae
xchg
hlt
jne
jno
mov
outsl
xchg
push
lret
or
pop
adc
mov
and
incl
push
fidivrs
add
addr16
std
and
cmp
jg
popa
call
or
pop
addr16
movb
and
pusha
xor
in
sbb
adc
dec
movsl
pusha
fbld
push
cmpsb
cmp
sbb
in
inc
js
adc
jl
ss
sub
sbb
cmp
dec
xchg
jns
lret
addb
lea
into
cmp
jnp
imul
iret
add
sbb
mov
bswap
cmp
popa
push
push
shlb
xchg
dec
xchg
xor
pop
push
jmp
mov
mov
int3
inc
pushf
mov
mov
push
xor
push
orb
inc
sbb
mov
mov
sub
js
cltd
dec
jns
push
ret
ffreep
ret
xchg
sbb
push
ret
sbb
xor
fsubrl
popf
call
mov
xchg
inc
stos
stos
movsl
add
mov
sbb
sbb
dec
pusha
push
lds
inc
shlb
sbb
dec
xchg
int3
jne
rolb
jno
push
pop
ret
orb
scas
xchg
mov
xchg
movsb
jo
orl
arpl
pop
int3
int
xlat
outsb
adc
in
in
movsl
popa
into
es
pop
outsl
jecxz
repnz
push
test
mov
test
sub
jns
xchg
repz
daa
push
adc
or
adc
mov
push
cmpsb
xor
cmp
and
add
push
xchg
add
push
loope
mov
inc
jmp
jno,pn
jle
test
movsb
into
sub
mov
or
adc
push
cmpb
je
adc
sbb
hlt
sub
lahf
push
pop
xchg
jl
and
mov
xchg
fdivrs
mov
ret
clc
pop
ds
std
mov
stos
or
mov
call
xor
ljmp
int3
in
ss
sub
scas
pop
inc
fimuls
push
inc
imul
jle
out
mulb
lods
mov
cmp
rolb
jnp
and
aaa
ror
mov
xchg
out
and
leave
cmp
sahf
add
movsb
adc
dec
sahf
pop
repz
jmp
mov
pop
lea
xor
movsb
jnp
sub
dec
mov
or
cmpl
inc
inc
add
inc
cmp
jg
lret
mov
push
xchg
jmp
stos
into
add
ja
pop
jne
enter
idivl
nop
cli
out
xor
inc
or
into
mov
cwtl
push
lahf
fs
mov
inc
mov
xchg
stc
mov
sub
fisubrs
lock
adc
sub
adcl
xchg
ret
decl
out
fildl
xor
test
js
jl
xchg
sub
jg
push
data16
jb
fstps
and
dec
std
jp
cwtl
out
or
ja
ss
or
sub
roll
xchg
inc
mov
jbe
xor
pusha
ljmp
jecxz
mov
fimull
sbb
xchg
dec
out
ret
and
inc
jne
jmp
cmp
stos
fsubs
xor
mov
sbb
cmpsb
icebp
mov
out
pop
lods
mov
fistps
mov
cltd
pop
cli
pushf
xchg
addb
jb
cmp
andb
adc
aas
bound
test
sarl
test
add
xor
push
gs
mov
or
je
addr16
jmp
ficoms
clc
and
mov
sbb
fcomi
push
into
fidivrs
dec
pusha
loop
jg
daa
sub
loopne
jo
pop
ja,pn
cmpsl
and
shlb
and
mov
das
mov
fwait
sbb
fsin
push
lock
imul
pop
push
mov
jl
sarl
in
je
adc
sbb
push
adc
mov
inc
xchg
insl
dec
das
popf
mov
jecxz
test
or
out
cmp
stos
mov
test
test
or
jnp
je
sub
fisttps
dec
call
mov
cltd
jp
mov
gs
jge
fdivrp
repz
out
push
sahf
movsb
bound
push
popf
adc
dec
cmp
sub
cmovae
lahf
iret
pop
movsl
aad
mov
sub
filds
sub
fwait
or
adc
movsl
jmp
jg
inc
or
xchg
nop
int
out
adc
out
cmp
and
push
add
leave
add
mov
jg
scas
pop
sbb
fdivrp
in
jns
in
dec
inc
push
icebp
ss
sub
and
xchg
mov
in
fidivrs
xchg
and
inc
jg
jmp
inc
pop
mov
sub
inc
push
add
insb
out
mov
mov
jmp
ja
inc
bt
jle
clc
mov
mov
lds
stos
outsb
xor
xor
mov
stc
dec
mov
push
gs
jl
aaa
mov
mov
sub
sbb
imul
mov
rolb
add
icebp
shl
and
popf
call
cmp
cld
cmp
sub
add
adc
in
and
and
filds
imul
aaa
mov
xchg
cli
sahf
mov
cmp
mov
ds
mov
inc
jg
jecxz
movsb
hlt
lods
mov
aas
cli
mov
and
push
cmp
dec
sbb
xchg
add
lret
mov
ljmp
cmp
sti
fcmove
or
aas
xchg
xor
aad
jecxz
cmp
or
push
mov
enter
and
test
aas
insb
jae
lcall
lods
fcomps
jmp
jb
divl
xchg
es
add
inc
outsb
iret
jno
push
popa
xor
in
cmp
insb
lahf
fistpll
mov
lods
pop
testb
push
mov
jmp
scas
adc
lcall
les
xchg
cmp
aas
cmpsl
pop
jmp
and
aad
lods
jnp
cmpsb
aas
stos
mov
ret
sub
das
aaa
or
int3
adc
loop
int3
int
xchg
ljmp
jmp
sbb
icebp
xor
in
push
in
or
fs
inc
loopne
icebp
mov
int3
mov
fwait
in
hlt
jns
popf
dec
push
sti
dec
jg
ja
in
mov
lods
test
mov
and
loop
jmp
inc
sbb
adc
cwtl
pop
and
pop
fstl
mov
loopne
jno
or
adcb
and
fmuls
repz
sub
pop
pop
jnp
xor
in
jnp
mov
insl
xchg
clc
mov
sub
and
push
cmpsl
push
nop
fiadds
push
popa
repnz
adc
xor
cli
lret
ljmp
push
lods
mov
xchg
lods
sub
popa
xchg
or
stos
es
xchg
aam
fsubr
cmc
sub
inc
into
mov
loope
outsb
mov
or
js
jmp
shr
and
xchg
inc
sub
out
jg
insl
xchg
movsb
push
pop
adc
or
xor
enter
dec
aas
pop
lahf
push
mov
sbb
inc
jns
adc
rcrb
mov
sub
ret
outsl
stos
and
jle
jne
popa
add
shll
repnz
mov
and
push
inc
neg
lret
mov
and
idiv
incb
scas
push
dec
jmp
repz
adc
fdivrp
leave
jne
lods
push
pushl
fucomp
jb
xor
adc
insb
cmp
call
jge
sbb
lret
add
push
hlt
xor
cs
mov
pop
mov
in
jb
daa
mov
xor
and
lret
loope
pop
xor
lods
xchg
jg
mov
push
mov
dec
fcmovne
rcll
sub
enter
add
fwait
jb
mov
int
pop
dec
lds
add
mov
mov
xorl
xor
pop
jge
jg
and
xor
fimuls
jae
mov
push
test
sub
dec
movl
push
jns
sub
addr16
adc
cld
mov
inc
inc
xchg
push
std
adc
lds
movl
bound
repnz
scas
sub
xor
out
and
and
xchg
xchg
sarl
subps
and
popf
pop
pop
or
lds
sub
push
xlat
ja
repnz
lcall
es
push
lock
xchg
into
adc
xchg
jnp
nop
and
imul
mov
jl
shrb
xor
shl
push
mov
or
imul
pop
aam
sbb
lds
ret
dec
and
adc
inc
out
aas
lds
push
jg
cmp
outsb
adc
lock
sahf
mov
adc
ret
mov
jae
call
adc
sbb
bound
adc
testl
fs
fmul
inc
pop
fwait
movsl
xchg
mov
push
adc
aam
mov
jp
arpl
fisubrl
inc
jae
inc
sub
xor
mov
inc
jecxz
pop
popf
or
mov
push
cs
or
lcall
cmp
jae
in
add
cld
or
les
and
popl
ss
test
dec
imul
cmp
leave
pop
xchg
ja
test
mov
sti
movsl
mov
sub
out
cmp
scas
insb
jnp
sub
data16
fsts
xor
xchg
rcr
je
and
aad
inc
jmp
xchg
rcll
loope
cld
test
inc
ljmp
xchg
sbb
push
sub
scas
aam
adc
cmp
mov
rdmsr
inc
mov
xlat
pop
xlat
jno
mov
xchg
mov
jb
std
hlt
les
rcrb
pop
xchg
push
pop
mov
test
push
addr16
cld
jo
repnz
gs
fsubl
iret
testb
les
lcall
pop
loop
pop
jne
pushf
jle
pop
frstor
jge
mov
mov
mov
pop
ret
shr
das
andps
or
cmc
xchg
rcl
cld
in
dec
incb
icebp
push
js
inc
loopne
jge
push
push
push
push
sahf
dec
lret
mov
aas
xor
pop
mov
aad
dec
aad
add
push
popa
xchg
inc
sbb
mov
pop
lock
and
fs
loop
das
xor
sub
cld
inc
mov
xor
aaa
cmp
notb
insb
cmpsb
shlb
sbb
and
pop
cmc
int
not
fcomip
cmpb
xchg
or
or
mov
shrb
add
mov
mov
fsubs
xor
inc
int
je
sbb
fsub
sarl
jb
sbb
pushf
mov
orb
sti
fiadds
ds
sbb
pop
mov
xchg
cmp
aas
add
mov
out
push
aaa
inc
pop
and
inc
nop
ret
loop
jle
mov
mov
sbb
xchg
sub
dec
add
test
jmp
test
xchg
mov
fldt
sti
fyl2x
sub
fmulp
les
push
sar
add
mov
mov
sarl
pop
jb
lds
sub
test
jb
mov
pop
out
adc
test
dec
repz
mov
jle
mov
dec
in
out
jle
add
xchg
shll
outsl
mov
notb
cli
mov
repnz
call
arpl
xchg
rcrb
cmc
mov
inc
push
out
or
loopne
imul
decl
jecxz
icebp
push
mov
dec
aaa
or
and
insl
data16
lret
or
daa
sbb
xchg
add
sub
jp
push
cmp
mov
mov
push
pushf
loope
lahf
cmp
add
scas
sbb
lods
adc
xchg
mov
push
push
jl
fwait
mov
mov
sahf
and
mov
mov
xchg
in
mov
mov
and
es
jo
jno
mov
pop
pop
adcl
shr
pop
mov
movsl
pop
or
insb
into
push
in
mov
sahf
sahf
rcll
push
je
sbb
and
cwtl
bound
shl
aam
dec
bnd
mov
push
mov
push
mov
iret
imul
in
lea
mov
ret
adc
push
dec
lods
aad
dec
xor
mov
lods
mov
mov
xchg
mov
int
les
push
cs
jae
add
pop
jmp
pop
sbb
mov
out
jne
cmp
or
mov
pop
xor
xlat
je
test
bswap
mov
push
adc
cmpsb
sbb
pop
fmul
aas
lock
addr16
jl
push
jg
xchg
xchg
fiaddl
fldt
cmp
xlat
mov
and
mov
rorb
lahf
xchg
mov
and
lcall
mov
std
popa
cmp
lds
add
sbb
cmp
jns
lods
mov
test
bnd
negb
iret
fwait
sti
lods
mov
jmp
xchg
and
xchg
xor
popa
out
lcall
cmp
clc
jl
arpl
movsl
mov
jg
fnsave
mov
or
mov
shrl
adc
data16
stc
xchg
in
jl
ret
cmp
std
sub
iret
mov
std
leave
iret
movsl
daa
push
dec
sarl
fcmove
ficompl
sbb
push
mov
or
aaa
es
js
ljmp
dec
ljmp
scas
mov
xchg
xchg
or
ljmp
ds
push
leave
xchg
sti
icebp
rcrb
cmp
mov
pop
in
jl
push
loop
xor
faddp
push
adc
adc
imul
adc
adc
dec
data16
cltd
fisubrl
fcomp
sbb
xor
cwtl
or
mov
add
into
push
test
push
mov
mov
pusha
or
sti
dec
xchg
pop
daa
mov
jle
es
inc
dec
lods
mov
and
icebp
sub
add
dec
sahf
add
xor
rcrl
or
mov
sub
jno
fsubrs
mov
xor
daa
push
mov
movsb
dec
in
or
add
mov
insb
loopne
mov
xor
cltd
lods
sbb
and
sbb
push
xchg
pushf
cmp
hlt
insl
lret
mov
stc
insb
cli
xor
pop
loopne
daa
mov
addr16
ficomps
push
ficompl
bound
sahf
push
stc
lret
jo
insl
rcrl
mov
stc
idivl
dec
ret
xchg
or
push
push
les
mov
int
dec
xor
jmp
xchg
roll
divps
sbb
adcb
int3
or
inc
addr16
pop
xor
subb
iret
pop
call
or
xchg
movsb
dec
sub
adc
push
popf
fstps
test
scas
mov
cmpsl
and
mov
fimuls
mov
lea
stc
addb
push
add
neg
inc
mov
cli
stos
mov
xor
xor
inc
fisttpll
sub
jl
pop
xor
sbb
lret
jne
cmpsl
fwait
pop
shrl
push
dec
pusha
les
jae
aas
and
xchg
fistpl
repz
dec
sqrtps
loopne
aaa
jb
or
push
and
sbb
out
adc
add
dec
dec
stos
rclb
test
mov
orl
divl
sub
les
jmp
sbb
pop
inc
mov
xchg
aas
dec
mov
push
mov
hlt
cmp
scas
or
shl
hlt
jno
je
in
mov
ret
push
pop
mov
pop
orl
test
mov
cmpsl
jbe
and
sti
inc
test
jp
or
mov
lds
cs
fidivs
pop
sbb
jmp
mov
in
pop
orl
outsb
cmpb
aad
or
mov
pop
jne
and
repz
lret
loopne
dec
es
inc
out
in
xchg
mov
pusha
jne
aam
insb
push
xchg
scas
mov
sbb
xchg
mov
mov
inc
xchg
aaa
push
mov
out
mov
dec
repz
lds
stc
imul
out
mov
adc
push
repz
or
nop
insb
fmull
push
insl
pushf
dec
mov
call
orl
movsb
adc
or
dec
xor
mov
loop
in
les
or
scas
iret
call
lea
sbb
pop
gs
sti
negb
loopne
xor
sub
sbb
movsb
mov
mov
pop
jb
or
fs
sub
inc
sbb
movsl
js
mov
cmp
inc
mulb
sti
jle
and
fcompl
mov
lcall
push
rorl
mov
orb
sar
adc
out
stos
out
scas
sbb
leave
mov
bound
int
std
and
pusha
imul
xchg
js
nop
lds
mov
insb
cmp
sbb
int3
jle
push
sub
or
test
cli
loop
push
ss
jge
lcall
jno
ja
ficompl
xchg
push
xchg
ret
pop
fists
adc
gs
insl
push
and
clc
pop
jno
add
and
in
ret
inc
dec
sub
dec
mov
cs
int
push
dec
out
test
mov
rorb
cmp
iret
inc
in
sbb
loop
fisubrl
xchg
stos
cli
mull
lret
xor
lods
dec
mov
dec
out
cld
sahf
jp
cmp
adc
test
mov
out
jp
sub
cmp
push
jbe
sahf
dec
jb
das
mov
or
push
adc
sub
pop
pop
sti
pushf
add
mov
add
mov
sbb
xor
adc
into
or
sbb
jmp
inc
mov
fcomi
sbb
test
push
add
andb
lock
mov
dec
mov
ja
inc
daa
adc
out
jbe
mov
adc
rol
imul
cmp
mov
jno
and
push
push
gs
sarb
inc
iret
push
xor
insl
mov
mov
fcomps
cwtl
xor
sbb
das
ja
stos
mov
cli
test
xchg
push
cmpsb
mov
or
xor
and
push
in
push
mov
cld
sub
cwtl
xlat
lods
ja
sub
and
popa
push
mov
fimuls
scas
or
mov
or
xchg
mov
adc
add
push
xchg
or
repnz
lret
pusha
add
sbb
insl
fmul
loop
das
push
test
aas
std
stc
cmp
lret
jl
aaa
out
jge
add
mov
jmp
xor
insl
cmp
test
stc
add
insl
mov
sbb
pusha
repnz
pop
push
mov
out
and
idivb
outsb
jl
or
or
dec
je
ret
xchg
fcoms
sti
faddl
push
mov
test
push
xorl
fcomip
jb
mov
push
jmp
rcrb
fwait
cs
adc
outsl
sub
push
icebp
cltd
aam
cmp
movsl
repz
xchg
cld
dec
fdivrl
pop
sbb
inc
pop
mov
mov
ss
cmp
cltd
jne
inc
inc
stos
jo
icebp
imul
stos
mov
mov
retw
rorb
out
outsb
jecxz
or
mov
mov
jo
mov
ljmp
xlat
jmp
sub
test
in
sbb
iret
xor
or
iret
mov
cmp
xchg
cs
cmpsl
imull
adc
fldl
outsl
mov
gs
ja
add
daa
dec
jmp
xchg
mov
sbb
arpl
xchg
movsl
mov
out
pop
add
sbb
cmpsb
sub
push
or
and
cltd
mov
loopne
jb
popf
repz
inc
fldcw
dec
sahf
pop
cmpsb
pop
insb
loopne
cli
mov
jecxz
sub
shlb
jp
popa
xchg
pusha
and
mov
nop
xchg
fidivrl
shl
pop
lea
jb
insb
bound
stos
arpl
cmp
xchg
sub
imul
dec
xor
mov
sbb
orb
test
adc
aad
xchg
insb
fs
cltd
insb
or
test
cmp
dec
adc
rcll
das
add
cmp
movsl
stos
sub
cwtl
xchg
loop
or
cmp
push
dec
pop
repz
fisubrs
testb
into
add
cli
das
not
into
cmp
cmpsl
push
or
xchg
xchg
push
push
aad
mov
mov
sub
mov
jg
xchg
je
jnp
or
dec
mov
insb
sahf
push
mov
and
bound
loopne
lret
pop
inc
hlt
mov
jp
loop
adc
stc
ss
out
inc
push
mov
xchg
jecxz
cmp
ja
lock
mov
sbb
mov
add
mov
mov
add
cltd
in
pop
enter
sarb
mov
push
and
sbbl
movsb
lea
in
lods
test
pusha
lret
add
jl
jae
imul
add
mov
xor
es
mov
pop
rcll
flds
inc
push
dec
or
dec
xor
rolb
lods
imul
loope
push
lcall
int3
jb
call
mov
pushf
aas
clc
mov
adc
push
and
sub
scas
rorb
sub
xor
movsb
js
xchg
inc
fsubrs
cmpsb
psrlw
mov
adcb
lock
arpl
pop
xor
and
fistl
sub
repz
loopne
jns
dec
or
mov
dec
addr16
pop
clc
ja
call
lds
mov
xchg
add
dec
jmp
pop
mov
mov
fsubr
mov
arpl
cmp
js
les
or
fs
mov
das
mov
push
mov
in
add
mov
pop
xchg
sbb
xchg
push
xchg
and
fadds
cmpsl
stc
sub
inc
lods
scas
cmp
xchg
or
ljmp
loope
jp
add
xchg
or
test
mov
adcl
andb
push
int
daa
cmp
push
out
int
out
xchg
enter
xor
popa
push
lret
xchg
clc
push
imul
jge
loopne
mov
sub
adcl
loope
jg
mov
mov
inc
shlb
cwtl
or
test
fmull
fstpl
jecxz
jmp
mov
je
jns
lret
ds
cmp
je
test
mov
and
add
mov
add
mov
pop
iret
ja
bound
test
xchg
dec
adc
push
aaa
push
scas
xor
add
adc
or
adc
ja
in
lret
insb
lea
or
xchg
jnp
fs
add
and
roll
or
rcrb
adc
or
xlat
int3
sbb
xchg
mov
xchg
divl
or
loop
inc
push
sahf
mov
xor
xchg
push
sahf
in
adc
pop
jmp
push
pop
xor
pop
add
mov
pop
lret
jle
jb
jecxz
ja
xchg
adc
dec
test
mov
sub
ret
dec
sub
cmp
int
rorl
push
adc
inc
outsl
pop
ljmp
ds
dec
fisttpl
mov
in
push
sub
lret
gs
and
mov
inc
sbb
jle
notl
es
xchg
pop
ret
loopne
xor
mov
out
xor
int
into
jmp
rorb
jp
call
add
inc
adc
sbb
sub
aam
ja
addr16
outsl
leave
popa
cmpsl
sti
test
inc
imul
push
pop
sbb
loopne
pop
dec
xchg
sbb
in
sbb
dec
cld
ds
stos
ret
daa
or
aas
lods
push
adc
push
push
fadd
mov
clc
inc
aas
xor
mov
pop
stos
aad
fistpl
lret
xchg
popf
loopne
mov
mov
inc
aam
aad
repnz
mov
icebp
push
stos
xchg
ss
loope
imul
in
push
pop
shrl
and
call
shr
loop
mov
jmp
adc
minps
pop
mov
roll
xchg
mov
add
push
mov
mov
and
mov
push
mov
push
mov
cmp
sub
and
cmpsl
mov
dec
inc
xor
insb
xorl
mov
lret
dec
repz
cltd
into
adc
xchg
sbb
mov
mov
push
and
in
cmp
inc
or
lds
pop
add
fists
cmp
popf
inc
push
ret
push
int
push
or
pop
cld
cmc
sbb
cmp
std
mov
mov
and
stc
xchg
pop
mov
test
loopne
pop
xchg
scas
mov
add
fisttpll
leave
pop
xchg
xor
xor
xor
xor
mov
addr16
popa
sti
jne
pusha
int
sahf
adc
mov
jne
outsb
jmp
jnp
nop
xor
scas
loop
stos
xchg
mov
nop
lods
dec
daa
dec
xchg
movsl
xchg
jl
jne
mov
jne
mov
push
cmpsb
in
std
cmp
test
adc
or
pushf
pop
pop
divb
xchg
pushf
xchg
sub
cmpsb
stos
sub
fwait
ret
add
sub
mov
push
out
arpl
cmp
in
lods
roll
addr16
mov
dec
cmp
movsb
cli
ljmp
leave
test
pop
and
add
repz
lret
pop
jbe
push
out
sbb
xchg
mov
sub
mov
cmp
push
dec
fistps
aad
ja
sub
test
ja
mov
inc
rclb
push
inc
pushf
daa
adc
int3
rcll
or
call
test
ss
inc
sub
or
pop
or
jl
movb
fwait
enter
jae
data16
gs
inc
fiadds
xchg
xchg
lds
xor
xchg
jg
sbb
xchg
test
je
sarl
push
popa
fnstenv
dec
jmp
push
clc
jno
out
popa
insl
inc
in
xchg
scas
cmp
jne
xchg
push
pop
pop
out
test
mov
dec
mov
mov
das
call
repz
shlb
push
insl
pusha
sar
inc
mov
cmp
lods
pop
std
int
dec
repz
enter
cli
cmc
dec
lock
adc
shll
dec
push
add
xorl
mov
fadds
outsl
pop
rorl
mov
sahf
or
or
push
leave
xchg
out
adc
inc
add
push
xor
mov
lods
inc
lds
add
testl
daa
add
pusha
mov
sbb
cmpsl
jecxz
imul
addb
pop
cli
cli
pop
aaa
out
cmpsl
jno
lock
fwait
mov
add
push
fisttpll
flds
insb
outsl
sbb
adc
mov
cmpsl
test
fisttpl
mov
int3
mov
pop
data16
rorb
arpl
pusha
lgs
sub
icebp
pop
dec
dec
scas
and
stos
or
push
aas
push
mov
cwtl
mov
loopne
icebp
push
jo
sbb
sub
je
xlat
out
js
adc
sbb
lds
cli
pop
dec
jnp
xchg
cmp
ja
fstps
lock
cmc
fcomi
int
stos
mov
jo
mov
pop
sbb
pop
adc
sbb
and
pop
rcrl
xor
dec
inc
cld
fwait
lcall
xor
sahf
cmp
cs
add
mull
into
lret
jmp
cmp
popa
scas
daa
pop
dec
enter
rolb
cmc
call
aas
dec
sub
call
inc
adc
lock
in
mov
mov
leave
outsl
mov
fcompl
xor
xor
xor
lret
and
shl
add
lds
xor
cwtl
sbb
ljmp
fcmovu
and
add
sbb
gs
cmp
repz
add
loop
xchg
loopne
out
dec
pop
jo
jmp
push
xchg
shrl
ja
lcall
movsl
xor
pop
pop
dec
push
mov
inc
sub
xlat
mov
lods
add
xchg
mov
aas
add
sub
sbb
and
clc
ja
jecxz
imul
inc
pop
mov
cmp
push
mov
movsl
and
cmpsb
lahf
loop
dec
loop
fwait
lret
jg
stos
test
cmpsl
sbb
pushf
adc
pop
xchg
dec
enter
das
in
insl
adc
fnstcw
sti
les
insl
cld
dec
xor
cmc
push
call
push
xchg
mov
inc
dec
add
in
in
pushf
rcrl
js
lret
xorl
sub
xor
mov
sub
jns
adc
mov
inc
push
mov
push
arpl
into
cmp
idivl
ja
sub
inc
jae
cli
xor
or
mov
imul
addl
xor
shr
aad
nop
rcrl
rolb
pop
cmp
outsl
outsb
loope
movsb
jmp
les
dec
mov
adc
out
aas
imul
in
fmull
out
data16
add
sub
push
jne
ja
mov
aam
mov
pop
movsl
addr16
popf
and
or
cli
mov
pop
das
lahf
cld
jg
xlat
mov
cmp
ss
fnstcw
in
xchg
xor
lret
shll
rcrl
pop
fisubl
push
push
je
pop
jae
iret
je
mov
in
fdivrs
push
roll
jge
xor
scas
xor
push
add
shrl
mov
outsb
cmc
sub
and
jo
cmpsb
xchg
data16
push
inc
and
dec
xor
push
inc
push
insl
adc
mov
insb
push
push
icebp
xchg
mov
or
roll
movsb
movsl
test
add
shll
andl
dec
jno
jle
fsubl
inc
repnz
in
inc
imul
dec
mov
sti
les
push
cmp
and
aas
dec
dec
lods
enter
out
cmp
push
lret
in
hlt
push
pop
mov
call
insb
or
jmp
sahf
out
xchg
out
and
xor
cli
adc
xor
jo
cmpsl
mov
add
sbb
mov
dec
lods
pop
add
push
insb
pop
fidivrl
aas
imul
ss
mov
mov
in
stos
gs
sbb
js
lret
mov
jl
xor
clc
mov
push
in
scas
clc
push
sti
sbb
fsts
fidivrs
dec
aad
xchg
andb
rorb
ret
in
xchg
and
lret
mov
push
cmp
mov
addr16
outsb
jb
inc
mov
fstpt
and
push
int
clc
in
xchg
adc
dec
sarl
sub
sbb
mov
iret
and
push
cmpsb
ret
idiv
int3
or
jle
adc
xchg
movsb
adc
clc
mov
fisttpll
hlt
rclb
pop
mov
mov
cmp
adc
push
add
pusha
ljmp
in
push
fsts
mov
xor
shr
dec
das
bound
inc
in
mov
jbe
xchg
enter
test
in
outsl
jg
push
ret
test
inc
rclb
add
std
jg
sbb
sbb
lds
push
inc
mov
ret
cmp
lea
mov
mov
add
xor
mov
jg
fnsave
xchg
cmp
jae
mov
mov
sub
in
cmc
jae
xor
push
jo
inc
dec
fwait
jecxz
add
dec
xor
jae
out
flds
xchg
or
out
lahf
inc
add
addl
push
sub
sahf
push
mov
insl
jg
xchg
pop
icebp
mov
fdivs
add
mov
int3
pusha
add
cwtl
jne
enter
fmull
push
mov
imul
fwait
inc
xchg
adc
mulb
aad
and
jbe
sbb
bound
pushf
cli
shll
cmp
cwtl
add
mov
in
ds
sub
adc
mov
addr16
jb
mov
mov
mov
xchg
aaa
cmpsl
imul
loopne
and
in
lock
mov
stc
pusha
or
inc
fldl
imul
adc
cltd
cltd
xchg
int3
xchg
icebp
or
add
mov
clc
adc
clc
stos
xor
dec
out
sub
imul
pop
sub
cmp
cwtl
pop
out
negb
scas
outsl
stos
enter
xchg
out
shlb
rcl
out
and
add
mov
add
popa
orl
fcmovbe
jg
ret
hlt
pop
ret
or
xor
cmp
sub
xor
xor
xchg
dec
mov
dec
jl
sub
ficoms
inc
daa
cmp
in
das
jge
mov
push
pop
cmp
cli
scas
stos
push
lret
xchg
das
in
jmp
icebp
pop
icebp
cs
sub
pop
xchg
out
push
xchg
call
shlb
jge
adc
ror
repnz
mov
pop
fstps
stos
out
ret
aad
out
mov
insb
cwtl
imul
scas
add
fs
mov
ret
push
loope
in
jmp
sub
loope
lret
add
aad
data16
cmp
inc
push
es
ss
jbe
or
mov
jecxz
add
outsl
mov
push
mov
out
pop
out
mov
push
adc
lock
je
or
mov
mov
popf
sbb
dec
cmp
adc
add
and
inc
sub
cmp
cmpsb
xlat
sbb
fwait
rcr
adc
iret
jl
fdivr
mov
jns
cmp
adc
jbe
sti
jae
ljmp
cmp
sub
dec
add
jnp
push
pop
pop
enter
shll
adc
out
push
dec
lret
adc
pop
pushf
cmpsb
insl
mov
add
out
mov
xor
sub
call
rorb
into
push
mov
jg
cmp
mov
adc
xor
into
rolb
inc
cmc
xchg
mul
fcoml
mov
xchg
movb
cmp
cmp
clc
xor
out
cmc
aad
nop
fs
icebp
or
inc
push
and
xor
in
test
inc
cmp
inc
loopne
orb
out
es
inc
push
pop
push
jge
fldt
xchg
or
xchg
mov
inc
pop
test
fstl
mov
mov
xor
outsb
xchg
cmp
inc
push
adc
xor
and
and
out
add
inc
or
xor
dec
and
and
aad
xor
mov
mov
jne
les
mov
push
add
pop
sbb
jl
popf
ss
adc
mov
popa
out
sub
xor
add
jno
mov
sbb
rcl
lock
out
cmp
cs
mov
push
cmp
sahf
lret
pop
dec
divb
jne
clc
loopne
es
xchg
mov
orl
dec
jbe
xchg
cmc
dec
ret
jae
jg
cli
in
xchg
add
fbld
pop
cmpsl
insl
mov
xor
mov
in
lret
lfs
mov
mov
inc
jle
clc
fs
sbb
jp
dec
mov
data16
rcr
cmp
jl
pop
pop
adc
imul
aaa
lods
push
sbb
fcomi
aaa
pop
jae
mov
xor
std
mov
xchg
mov
sbb
inc
mov
je
lret
push
xor
push
dec
jmp
xlat
inc
push
sub
add
hlt
popa
pushf
mov
xor
mov
lods
xchg
cli
mov
in
in
insl
sarl
jae
dec
mov
sbb
les
mov
scas
push
ret
jbe
mov
and
add
push
mov
fisttpll
pop
cmp
pop
inc
mov
dec
inc
dec
mov
jno
enter
sbb
mov
lods
test
xorb
sti
imul
fmuls
and
mov
stos
push
jg
gs
push
in
and
loop
cmpl
lods
xchg
sbb
outsb
scas
push
ror
outsb
pop
jne
cs
xlat
mov
int
or
jno
mov
sbb
inc
insb
sub
sub
cld
movsl
sbb
je
mov
dec
movsl
and
test
xor
push
sti
jge
mov
in
pop
jae
lock
ret
std
sbb
cs
inc
ja
iret
test
jecxz
cmpsb
out
arpl
mov
cmovp
sahf
popl
enter
clc
mov
mov
and
and
inc
dec
loope
lret
outsb
dec
in
ss
xor
lret
mov
movsl
ss
ret
jmp
ret
jmp
sarb
pop
std
shll
pop
sub
xchg
pop
xor
daa
fistl
jecxz
pop
inc
dec
lock
mov
test
clc
ficomps
and
lods
hlt
dec
xchg
test
push
sub
popa
jl
in
daa
loop
hlt
jae
lea
add
insl
stc
fwait
add
inc
icebp
adc
pop
sub
and
cmpsb
xchg
ss
ljmp
pop
fisttps
notl
push
sbb
sub
rorl
sub
fucom
aam
hlt
mov
pop
mov
idivb
mov
sbb
gs
in
je
shrl
or
popf
push
cli
adc
lcall
inc
call
dec
adc
rcr
call
and
mov
lds
hlt
lcall
cld
jbe
stos
pop
test
push
nop
andnps
pop
in
fdivl
dec
mov
pinsrw
divl
mov
lcall
pop
insb
nop
dec
popa
push
aam
popl
fisubrl
and
push
sbb
cmp
cmc
inc
roll
sahf
and
push
mov
mov
adc
sub
in
bound
pop
das
aam
xor
lcall
jno
add
sti
in
push
dec
adc
mov
jae
int3
lds
ljmp
sub
sahf
sbb
out
ret
xchg
stos
xchg
adc
inc
dec
mov
lods
icebp
add
cmp
dec
jno
cli
js
mov
lcall
mov
pop
and
cltd
pop
movsl
mov
inc
aad
je
jo
xor
sub
stc
stos
or
jae
cmpsl
daa
mov
dec
sarb
adc
inc
lods
dec
mov
mov
or
push
jnp
cmpb
nop
mov
je
int3
test
mov
sbb
loopne
fwait
push
stc
mov
negb
or
enter
lods
inc
sbb
mov
jp
loopne
ds
adc
lcall
push
cmp
mov
dec
mov
stos
jno
pop
shrb
inc
add
icebp
inc
mov
ficoml
pop
hlt
rcll
subb
mull
jno
sub
arpl
cltd
sbb
jbe
mov
sbb
or
cmp
pop
sub
xchg
cmpsb
int
sub
orb
mov
in
fisubl
dec
dec
mov
pop
aad
sbb
mov
pop
mov
lock
popf
sti
pop
push
mov
jg
and
fstps
fiadds
data16
into
loop
mov
movsb
mov
push
lret
push
adc
adc
rcl
leave
lods
xor
aas
jecxz
sub
adc
jb
jle
iret
lahf
cmp
xchg
cmp
mov
into
cwtl
fimull
movsw
or
dec
lahf
mov
mov
loop
push
cmpsb
and
adc
test
aam
testb
stos
hlt
dec
xchg
sarl
push
cmpsl
inc
inc
shll
xchg
dec
ds
push
mov
xchg
leave
push
xchg
mov
jge
adc
push
fwait
push
add
insl
lods
in
nop
mov
lock
mov
cmp
push
stc
and
sub
or
jg
sbb
jnp
rcrb
jge
sar
mov
sbb
cmp
jo
pop
sbb
inc
jbe
add
pop
dec
pop
cmp
mov
xor
xchg
xor
mov
sbb
mov
imul
std
sbb
inc
in
test
cmp
dec
inc
pop
xchg
nop
xor
cmpsl
xchg
fcmovu
xor
mov
fcmovbe
mov
dec
xchg
xor
mov
mov
aad
cs
aas
mov
std
out
imul
jge
jne
mov
in
jl
f2xm1
cli
call
inc
sbb
push
adc
scas
dec
pop
adc
cmp
and
test
in
mov
push
stos
jg
fidivrl
or
fiadds
push
in
pop
mov
rorl
jae
sub
out
sub
sbbl
cmp
push
fcmovnb
movsb
fwait
lods
or
pop
out
jno
popf
test
and
repnz
and
mov
lcall
dec
sbb
movb
insb
ficomps
cmp
xor
int
insb
out
add
dec
push
rol
mov
gs
jg
mov
loope
lcall
icebp
rorl
test
pop
imul
mov
cmp
xchg
xorl
dec
mov
xor
mov
sub
xchg
lret
adc
adc
jmp
sbb
sti
insb
sbb
or
sbb
inc
mov
jno
and
pop
out
or
mov
mov
iret
mov
adc
mov
add
xchg
inc
push
fdivs
mov
stos
lods
icebp
add
sbb
cwtl
cs
pop
dec
sahf
jg
cld
inc
movsl
popf
das
cli
lret
jns
lret
test
clc
mov
or
jnp
cmc
jge
sbb
and
push
jae
cltd
or
push
fwait
jle
fisubrl
push
and
adc
roll
andl
out
adc
jl
mov
data16
int
pop
jle
mov
xchg
sti
mov
xor
xchg
inc
aad
and
xchg
xchg
inc
sub
in
mov
fmuls
push
aad
fwait
movsb
and
lods
inc
xor
fistl
in
add
mov
addb
inc
sub
mov
icebp
ss
or
pop
fs
sti
cli
adc
shll
into
gs
mov
dec
or
test
xor
cmp
nop
shr
and
in
sub
cmpsl
add
push
fnstenv
shl
mov
in
pop
mov
ja
mov
pop
shlb
dec
lods
addl
loope
and
ret
inc
sbb
push
mov
pop
mov
out
xor
das
dec
movsl
std
orb
imul
aas
jo
inc
leave
and
fs
cltd
sbb
push
call
addb
add
arpl
bound
lcall
jbe
mov
iret
cwtl
hlt
push
xor
popf
adc
loope
test
lods
xor
inc
fdivs
push
stos
inc
lock
xchg
adc
adc
cmp
sarl
cmpsb
ror
jmp
scas
dec
lcall
xor
loope
mov
cmp
imul
mov
sub
jb
mov
adc
subl
faddp
push
movsl
aas
push
test
movb
inc
ffree
xor
or
and
jge
ljmp
or
bound
nop
adc
stc
lret
iret
lahf
lahf
mov
outsb
je
push
in
adc
cmp
in
lret
je
push
fcmovnb
repnz
inc
ds
jno
aam
or
dec
dec
cmc
mov
lods
rcrb
pop
and
addr16
pop
mov
and
test
stc
mov
cmp
push
push
and
and
fmuls
push
xor
push
cmpsb
cmp
scas
mov
cmp
inc
mov
pop
outsb
icebp
popf
and
mov
in
lahf
sub
clc
jbe
outsb
mov
mov
out
movsb
imul
daa
mov
add
mov
subl
xchg
and
xchg
adc
inc
icebp
inc
das
les
inc
mov
or
out
mov
mov
imul
sbb
cmp
in
pop
int
jo
mov
inc
push
idivl
jbe,pn
push
addr16
xchg
inc
xchg
adc
inc
push
jg
mov
inc
or
scas
or
push
xorb
push
and
lock
inc
fiadds
mov
loopne
fcmovnbe
stos
lock
adc
mov
cmp
push
adc
and
xchg
xchg
mov
andb
fwait
adc
pop
mov
add
sbbb
repnz
je
xchg
lods
mov
cli
out
adc
sub
addr16
push
nop
lret
push
movsb
mov
dec
and
fnsave
or
fnsave
aam
iret
fisubs
test
push
dec
aas
mov
lods
cmp
dec
ljmp
orb
test
sbb
pop
mov
fildll
loopne
mov
jge
out
imull
rcrl
push
push
pop
testb
xor
sbb
jmp
addl
aam
xor
ja
repz
es
xchg
inc
xchg
rclb
scas
cld
or
inc
pop
lret
add
cmp
xor
cwtl
out
gs
loopne
adc
cmpsb
fcomp
movsb
out
jg
cmp
xchg
lods
adc
bound
sub
cmc
jns
frstor
daa
xor
lds
add
jne
jge
cli
inc
imul
jae
out
repnz
jp
mov
cmpsb
int
fwait
mov
cmp
cld
xor
arpl
shlb
dec
mov
sub
nop
inc
lcall
inc
dec
or
js
sub
inc
and
or
and
sbb
fmuls
imul
mov
cmpsb
iret
xlat
das
gs
mov
xchg
das
incb
xchg
mov
xchg
dec
cmp
add
cmp
loope
mov
and
pop
js
sbb
stc
out
es
mov
sar
movsl
in
pop
test
out
aaa
ror
out
in
pop
xchg
icebp
push
pop
lock
ret
xor
or
insb
repz
sub
pop
hlt
test
add
popa
in
xchg
loop
aad
es
shll
xor
push
cmc
mov
sub
lds
jecxz
sti
movsb
xor
cmpsl
cmp
out
adc
inc
out
or
inc
pop
xchg
adc
pop
push
adc
icebp
xchg
adc
cmp
popa
es
cli
jp
ja
lret
and
ss
lods
inc
test
xchg
cld
sbb
repnz
dec
in
sub
lret
lret
aas
mov
push
cmp
pop
into
loope
lods
sbb
repnz
inc
xlat
xchg
js
add
or
dec
cmp
xor
add
mull
inc
or
inc
xor
fmuls
mov
jo
repnz
fucomip
stos
repnz
sub
or
push
adc
pop
lea
movsb
icebp
lea
mov
stos
out
das
shll
mov
pop
rcl
mov
dec
and
lcall
or
add
dec
push
mov
cmp
cli
xor
test
das
mov
xchg
in
xor
push
pop
andl
cmpsb
and
mov
sub
sub
adc
inc
mov
aad
call
push
push
ljmp
adc
xor
js
dec
mov
shll
movsb
adc
xor
rcrl
sbb
inc
cli
mov
or
pop
jbe
pop
lock
mov
ret
pop
ljmp
inc
push
and
push
shll
push
test
pop
rol
mov
xchg
movsl
movsl
jns
jecxz
xor
push
and
lret
popa
push
inc
test
xchg
adc
sbb
pop
ficoml
mov
test
sti
bound
aas
inc
jmp
sub
jle
and
call
sub
xchg
add
arpl
imul
or
inc
test
sub
in
xchg
imul
xchg
rorl
dec
bound
outsb
sbbl
xchg
movsb
es
xor
les
subl
jae
dec
sti
jl
rsqrtps
clc
push
and
jmp
subb
mov
pop
fcompl
sahf
loopne
mov
dec
pop
cmpsb
and
add
sahf
dec
add
adc
out
jmp
clc
fdivs
add
stos
inc
add
test
testb
inc
xor
add
dec
into
loop
xlat
xor
push
ljmp
ret
cmp
pop
in
insb
push
mov
cmp
or
xor
cmpsl
inc
xor
mov
xchg
cmp
daa
imul
push
lahf
dec
stos
sbb
test
fcmovu
dec
imul
dec
rcr
incb
xchg
xor
cmc
xlat
adc
addb
xor
pushf
sub
pop
loop
mov
es
nop
mov
push
mov
stc
and
pop
and
mov
or
or
sub
or
iret
movsb
pop
jo
mov
sbb
inc
sbb
and
and
iret
mov
sbb
xchg
outsl
sub
adc
nop
ds
mov
sub
mov
mov
call
mov
pop
or
in
jge
xchg
push
inc
sub
sbb
jae
cli
xor
cld
push
push
test
mov
xor
adc
push
lret
loop
inc
mov
iret
popl
lcall
adc
mov
aaa
loop
cmpsb
xor
jge
or
dec
jge
fiadds
pop
pop
sub
cmp
movsl
nop
xor
mov
cli
pop
sbb
sti
out
or
dec
jle
jb
loop
adc
subb
das
mov
divb
mov
jmp
push
test
clc
sbb
idiv
xlat
pop
add
xchg
jle
mov
mov
loopne
movsl
fimuls
inc
xor
cmp
push
rclb
test
fistpll
lods
fdivrs
gs
das
out
or
push
notb
repz
xorb
inc
mov
add
adc
pop
mov
mov
mov
shl
mov
ds
mov
insl
xchg
ljmp
jno
push
push
mov
loopne
xchg
icebp
pop
inc
and
push
stos
pop
roll
sahf
faddl
jb
lods
push
xor
into
negl
xor
into
jmp
adc
inc
or
stc
loopne
mov
and
or
lcall
jno
adc
mov
xlat
hlt
mov
xor
jmp
xor
std
sbb
and
dec
jmp
inc
mov
xchg
cmp
aaa
lcall
mov
pop
pop
pop
leave
lods
xchg
mov
testl
and
sahf
mov
test
imulb
push
push
dec
rcrl
stc
fistl
dec
xchg
xchg
lea
sbb
inc
and
fs
pop
shll
clc
std
test
or
xchg
imul
aas
fldcw
mov
xchg
adc
ret
dec
xchg
pushf
enter
mov
enter
outsl
mov
idiv
setno
lahf
jmp
mov
push
push
ds
mov
lods
cmp
dec
test
and
xchg
sub
xor
or
mov
sbb
push
mov
pop
mov
lods
push
dec
jae
mov
add
cmp
inc
pop
jp
fs
and
icebp
aad
pop
std
lahf
jmp
xor
pop
testl
push
repnz
js
inc
mov
pushf
mov
sbb
out
cs
outsl
jae
mov
insl
test
ffreep
mov
daa
pop
pop
dec
and
cs
lods
out
lret
jbe
sti
cmc
cvtps2pd
sbb
pop
outsl
call
pop
cmp
inc
ficompl
adc
shrb
inc
movsl
mov
jo
shll
inc
push
je
jbe
scas
cmp
jbe
fxch
push
leave
scas
mov
dec
ja
cs
jge
outsl
inc
cmp
adc
pop
sub
popf
adc
stc
add
cmpsl
push
jg
jbe
stc
or
or
lahf
inc
mov
int3
enter
subb
ret
loopne
imul
jae
add
jo
test
xor
adc
pop
out
dec
xlat
call
mov
test
cmp
fldt
push
mov
andl
cwtl
shrb
xor
les
xchg
shl
test
loope
sub
mov
or
fwait
jmp
or
cmpsl
mov
in
xor
shl
lock
incl
cmpsb
adc
sti
arpl
pop
daa
hlt
pop
xor
sti
cmp
sub
jbe
dec
fs
lds
out
push
adc
hlt
mov
std
or
fldenv
out
fnstcw
inc
sti
mov
dec
sub
and
push
pop
sbb
stos
sti
pusha
out
divl
fdivr
ret
test
pop
js
sbb
push
sbbl
add
jge
or
pop
sbbl
and
inc
push
rcll
clc
jle
pop
and
pop
lock
and
inc
fistpl
add
lcall
cmp
pushf
jecxz
adc
jmp
mov
mov
mov
lcall
ds
fcoms
mov
dec
sub
xlat
push
rcl
ljmp
pop
jmp
lods
and
add
mov
or
les
cmpsl
iret
std
scas
mov
jg
pop
std
xchg
dec
jno
pop
mov
cmp
push
add
sub
sbb
inc
lahf
jae
sahf
or
cmp
pop
data16
push
cwtl
pop
jns
pop
jae
frstor
push
xchg
mov
out
cmp
imulb
add
mov
or
mov
xchg
test
popa
insb
test
neg
mov
mov
filds
push
loope
dec
jmp
sbb
lods
adc
int3
cs
outsb
shll
mov
push
add
mov
hlt
sbb
popa
xlat
push
xor
add
push
sbb
int
aam
mov
fimuls
fmull
addr16
pop
and
adc
mov
fwait
pop
sbb
data16
rclb
cli
adc
xchg
inc
sub
inc
loopne
test
sbb
xcrypt-cfb
cmpsl
pusha
xor
cmp
xchg
xchg
mov
mov
shll
adc
adcb
dec
popa
sub
push
aad
call
inc
adc
in
pushf
inc
testb
mov
shl
aas
mov
arpl
cs
xchg
sub
out
fistpl
mov
or
rcrb
out
lcall
imulb
push
mov
pop
imul
out
xchg
daa
jns
ficompl
es
jl
lock
test
mov
mov
ja
lea
nop
push
loopne
mov
xlat
out
or
pop
movsb
sub
test
and
xor
test
or
sbb
xor
or
iret
cmpsb
or
orb
mov
jns
imul
adc
pop
aas
sti
out
mov
push
test
arpl
xchg
pop
cmp
rorl
out
sub
popa
add
push
xor
or
cmpsb
ror
jmp
cmp
inc
mov
pop
aas
cwtl
scas
add
movsb
inc
dec
mov
fistps
jbe
pop
rclb
ljmp
pop
sub
mov
jle
std
adc
ljmp
cltd
fidivrl
xchg
xlat
or
sub
in
outsl
push
call
nop
mov
inc
outsl
jae
inc
jmp
jno
sub
mov
mov
mov
cmp
push
and
popa
push
pushf
rcrl
cmpsl
lods
push
outsl
cmpsb
jmp
call
xlat
push
addb
ret
mov
bound
jp
rcrl
sbb
jnp
sahf
mov
scas
or
add
cmc
fldenv
dec
xor
fnstcw
aad
adc
addr16
dec
popa
sbbb
mov
aaa
lahf
gs
push
or
inc
andl
pop
ret
shl
pop
mov
adc
sbb
push
pop
sbb
mov
cmpsb
jae
dec
lcall
mov
pusha
mov
cli
mov
in
mov
jno
mov
dec
mov
mov
fsts
out
pusha
xchg
test
sub
xchg
repz
adc
movsl
mov
ja
push
mov
rcrb
pop
dec
arpl
cld
pop
ficoml
arpl
loop
mov
xchg
sub
call
dec
lods
test
xchg
mov
movsb
out
pop
shll
fbld
mov
fcoms
sbb
and
popa
jp
mov
cmc
pop
dec
pop
pushf
and
cli
xor
sbb
sub
into
sbb
out
decb
add
call
push
outsl
xor
xchg
adc
and
mov
xlat
mov
or
cwtl
mov
push
scas
cwtl
stc
adc
jb
pusha
push
das
mov
jp
xor
mov
mov
aaa
pushf
push
pushf
mov
push
sarl
sarl
dec
jbe
cmp
pop
icebp
int3
push
push
mov
arpl
pusha
add
pop
xchg
mov
mov
add
mov
sub
push
fmulp
repz
and
dec
mov
lret
cwtl
cmp
rcrl
sbb
adc
sti
inc
mov
movsl
out
sti
cmc
xor
mov
jne
jnp
xor
xchg
fcmovnbe
out
and
les
out
repz
ret
fisubs
mov
jg
repz
push
mov
and
adc
push
and
mov
in
test
int
sbb
jno
mov
mov
jnp
xlat
imulb
nop
jl
nop
out
jge
pop
mov
or
cmp
pushw
mov
in
test
add
dec
insl
xor
ss
jl
dec
mov
jge
mov
dec
mov
mov
aad
jbe
loopne
xor
or
mov
mov
insl
bound
outsl
mov
imul
mov
and
movsl
aam
dec
icebp
xor
addr16
int3
mov
xor
call
pop
insb
push
nop
add
cmc
pop
mov
andb
fwait
push
stos
sti
lods
arpl
inc
sbb
scas
imul
mov
clc
aas
test
ljmp
fnstsw
stos
mov
mov
lret
movsb
inc
jg
mov
mov
imull
ret
or
rolb
fcmovnb
outsl
jle
cld
pop
lret
mov
jecxz
add
js
mov
pop
addb
pop
cmpsl
push
ss
pop
fs
jno
scas
mov
xor
sbb
lret
add
mov
mov
js
and
icebp
add
sub
into
jb
adc
fdivs
rorb
xchg
mov
and
lcall
int3
dec
sbb
add
push
aam
stc
adc
jns
out
mov
pmulhw
push
test
sbb
fimull
ljmp
xlat
pop
xchg
stos
enter
ret
ljmp
dec
nop
mov
out
mov
add
mov
pusha
xor
push
jp
fldt
data16
mov
dec
repnz
cmc
and
mov
lahf
sub
xor
or
jp
rcll
leave
jbe
in
test
sbb
dec
cmpsl
adc
adc
jb
int3
mov
mov
rcrl
mov
pop
imul
and
sbbb
push
idivb
mov
pusha
jle
mov
ljmp
clc
stc
ret
push
movsb
lods
movsb
enter
mov
fwait
push
movsl
outsl
xchg
push
cltd
dec
push
mov
bnd
sbb
sub
mov
insb
aam
aad
idivl
test
push
and
inc
pop
or
insl
stos
out
dec
cmp
add
popa
sbb
xchg
scas
sub
ss
sarl
int
mov
popa
imul
sub
pop
sub
pushf
push
xchg
movsb
adc
mov
pop
xchg
pop
shr
adc
pop
es
ret
xor
mov
mov
cwtl
fmull
push
clc
pop
aaa
xchg
and
cmc
je
ffreep
cli
mov
cs
loope
scas
pop
lds
lret
in
test
push
fcmovu
aaa
inc
aad
shl
out
cmp
hlt
sbb
andb
push
ljmp
lds
pop
push
xchg
pop
xchg
inc
leave
sub
sbb
jns
mov
mov
subb
add
jl
loop
js
lea
dec
dec
in
mov
adc
or
push
jns
and
leave
mov
cld
sbb
mov
push
mov
fdiv
fidivl
inc
jb
inc
xorl
xlat
mov
or
std
cmp
shrb
jge
js
mov
les
adc
fwait
dec
ret
jl
pusha
ret
xor
insl
decb
orl
pop
cmpsb
pop
outsl
jp,pn
inc
shl
je
mov
inc
jae
inc
inc
xchg
push
in
not
sub
pop
inc
jmp
xchg
mov
fxch
imul
sub
aas
dec
fdivrp
pop
xchg
fidivrs
sbb
adc
leave
mov
lods
dec
mov
loope
aam
das
loope
repz
ds
repnz
cld
cltd
or
fs
add
jbe
add
das
out
dec
gs
push
imul
mov
adc
xor
mov
fs
ljmp
mov
leave
or
dec
enter
push
cmc
push
movsb
mov
outsb
cmp
mov
lcall
mov
sub
dec
xchg
pop
sbb
leave
gs
push
pushl
mov
jbe
push
add
mov
mov
pop
push
shll
push
pop
pop
lret
pop
dec
fisubrl
jl
leave
or
inc
cld
ljmp
mov
mov
movsl
in
xlat
ret
jnp
jnp
pop
outsl
sti
sub
sti
mov
dec
jns
popa
mov
test
pusha
and
outsl
repz
sti
jmp
add
imul
into
pushf
jecxz
ss
lods
jbe
loop
imul
xor
aad
mov
xor
out
cmp
ss
leave
mov
jle
jns
sbb
push
pop
push
or
and
out
jg
shl
adc
jo
jmp
pop
sbb
leave
dec
stos
jnp
jne
push
cmp
popf
pop
movsb
imul
xchg
mov
pop
inc
addr16
and
aad
cli
pop
add
mov
sbb
push
mov
add
insl
pop
in
sub
adc
test
jns
int3
xchg
mov
mov
sub
rdpmc
mov
shl
sub
dec
mov
or
xchg
lret
outsb
sbb
fistl
dec
push
sbbb
aad
adcl
clc
push
or
pop
push
sbb
imull
outsb
mov
xchg
js
stos
jne
adc
mov
jns
js
sub
clc
mov
rcll
je
cmc
loop
sub
mov
push
stos
mov
pop
movsl
in
loope
mov
idivl
and
in
arpl
gs
clc
jle
lret
and
xchg
mov
jg
lret
inc
fsubp
sti
cmpsb
ret
pop
ficompl
fsubl
fwait
push
into
or
or
lret
movsb
leave
mov
enter
out
cmp
sbb
pop
outsl
mov
sub
pop
sub
addb
sub
int
fwait
cli
iret
sbb
sti
and
or
pushf
jmp
jbe
inc
imul
cmp
pop
jecxz
and
lcall
and
jp
fcmovnb
mov
movsl
dec
movsl
lea
addr16
pop
js
or
lods
das
xchg
xchg
movsb
je
fwait
jmp
aad
testb
add
mov
or
iret
out
sarb
and
fdivrl
into
sub
or
add
xor
scas
and
outsl
pusha
cmp
inc
mov
sub
mov
dec
scas
xchg
cmp
mov
ss
loopne
pop
sub
insb
add
or
mov
test
or
imul
pop
jmp
xchg
lahf
popa
mov
jb
xlat
lods
es
push
and
dec
jle
pop
outsl
mov
repnz
xor
xchg
xlat
push
fdivrs
je
loop
and
mov
in
loop
les
fs
aad
dec
cmpsb
lcall
shll
pop
lret
repnz
repz
enter
mov
and
cmpb
add
inc
jno
cmp
popa
mov
jns
adc
push
in
test
movsl
insb
mov
mov
cmpl
inc
xchg
xor
rcll
test
and
lods
fidivl
pop
aas
dec
js
push
aas
jg
xchg
cmpl
sti
aaa
stc
mov
add
ret
leave
lea
and
icebp
daa
icebp
push
jge
fildl
mov
rcrb
xchg
test
mov
rorl
push
jle
outsl
sbb
sbb
mov
push
mov
cmp
lret
sete
cmc
test
mov
adc
jae
aad
movsl
das
push
pop
mov
repnz
dec
shll
pop
inc
insl
rolb
jo
cmc
aas
pop
fadds
in
cmp
pop
addr16
jno
dec
clc
mov
or
cltd
scas
xlat
push
inc
xor
push
fcmovne
rorb
clc
pop
pop
sahf
jb
jbe
ljmp
mov
cmp
mov
dec
xchg
sbb
lock
cli
pop
add
loopne
inc
push
cltd
inc
pop
push
fidivrs
rorb
push
outsb
adcb
add
shlb
mov
push
xor
mov
and
fiadds
add
mov
jb
popf
das
repz
paddq
out
jno
imul
dec
adc
adcl
push
pop
sti
xorb
clc
sbb
mov
outsl
fldlg2
mov
xchg
sbb
and
in
jmp
ja
add
stos
dec
hlt
dec
arpl
mov
in
push
adc
idivl
test
in
or
into
sub
out
push
pop
dec
add
imul
jle
add
mov
mov
mov
push
cld
scas
outsb
sbb
adc
add
movsb
mov
xor
out
ja
mov
in
mov
arpl
mov
lahf
push
push
jne
sti
arpl
cmp
fwait
pop
in
sub
cmp
cmp
mov
xchg
in
pushw
mov
pop
mov
ror
outsb
xchg
push
add
fwait
out
and
insb
out
out
xchg
cmpsb
jl
inc
mov
mov
cmc
and
pop
inc
adc
jnp
lods
lock
bound
pop
push
mov
mov
ja
ret
xchg
ret
jmp
mov
sub
mov
aad
cmovb
inc
lods
jno
mov
inc
call
pop
mov
cltd
sti
pop
dec
icebp
push
in
sbb
mov
imul
out
or
add
mov
xchg
outsl
cs
push
in
and
add
lods
sahf
jge
and
ret
fwait
mov
addb
inc
mov
adc
inc
cmp
pushf
sub
adc
cmpsb
repz
outsl
popf
mov
icebp
pop
movsl
push
dec
mov
jb
aam
pusha
faddp
mov
mov
xor
rorb
lahf
sahf
mov
cmp
inc
test
out
or
int3
int3
inc
popf
mov
mov
leave
inc
sub
mov
loope
sub
mov
push
es
int
addr16
aas
ja
dec
lods
call
xchg
stos
sub
mov
sub
xchg
jge
hlt
sahf
dec
shlb
mov
das
sahf
inc
sbb
mov
adc
not
jmp
jg
sbb
jns
pop
jae
fwait
jecxz
lret
xor
ret
push
pop
int3
xchg
ficomps
mov
mov
insl
mov
fwait
ds
xchg
lahf
mov
cld
movsb
xchg
xchg
int3
sbb
xchg
adc
fwait
push
pushf
adc
jp
jl
pushf
std
jg
fsts
xchg
mov
mov
daa
or
and
jns
jmp
repz
jmp
or
add
xlat
ja
lods
enter
pop
push
pop
fcmovnu
pop
mov
fwait
mov
xor
movb
push
push
lea
and
aaa
dec
data16
inc
push
xor
or
mov
sbb
mov
jge
pop
adc
out
mov
test
cmp
push
aad
or
hlt
stos
int3
sbb
loop
push
jae
mov
nop
outsb
pushf
or
nop
loope
ret
inc
fbld
aad
cmp
shll
dec
jl
imul
sub
and
mov
outsl
jb
div
daa
lods
ret
mov
data16
push
xor
push
add
mov
icebp
mov
jg
jg
dec
xchg
dec
cmp
ret
mov
mov
xor
and
xchg
dec
jo,pt
xor
push
insb
jne
aaa
cmp
sti
jbe
mov
push
xchg
dec
adc
or
je
sub
mov
or
mov
jnp
or
pop
movsb
mov
lret
mov
pop
int
fidivrl
scas
pop
dec
lahf
test
mov
adc
stos
dec
flds
aam
xchg
pop
cmp
cmp
in
or
xchg
xor
in
sub
cli
test
ds
cmp
sbb
lock
stos
repz
imul
mov
daa
pop
sbb
pop
in
mov
ret
pop
fsubrs
lret
lea
add
in
test
mov
push
dec
xor
js
add
rclb
cwtl
inc
mov
fsubl
lret
ret
lock
popl
mov
sub
aad
outsb
push
lods
cmp
sti
add
femms
mov
cmpsb
inc
subb
mov
icebp
cmp
mov
shl
testb
in
sub
ret
dec
mov
jmp
inc
rcl
xlat
ret
mov
mov
popa
movsl
movsl
aaa
cmc
cmpsb
mov
lea
or
sarb
cmp
iret
cwtl
call
pop
jmp
jg
int3
sbb
adc
fwait
shl
mov
lock
xchg
xchg
jp
sbb
pop
xor
and
mov
xchg
inc
and
out
pop
adc
int3
push
sbb
rol
rcr
dec
fnstsw
mov
faddl
add
les
ja
or
add
imul
pop
std
push
jp
into
clc
test
test
adcb
or
lea
mov
int3
out
out
mov
xchg
sbb
lds
mov
in
addl
test
test
sbb
mov
adc
aam
push
dec
out
lcall
xlat
xor
stos
mov
repz
jecxz
xchg
std
out
ret
lods
xchg
test
loopne
das
dec
and
jecxz
iret
fbld
jecxz
dec
or
ljmp
pop
insb
dec
jbe
sti
jnp
jne
jb
adc
mov
mov
test
cmc
scas
js
jbe
xorl
pop
loop
sbb
fcoml
mov
sub
xchg
cli
dec
lea
inc
cmp
je
clc
add
add
dec
inc
push
stos
in
in
sub
mov
ret
xor
inc
inc
pop
pusha
out
ja
mov
and
loop
mov
or
sub
out
xchg
adc
sub
adc
fdivrl
popf
not
int3
push
push
jle
ret
add
cmp
aas
ss
scas
loope
fists
push
pusha
sbb
and
jp
pop
push
push
jnp
mov
cmp
ds
lods
inc
scas
mov
aad
mov
xchg
jnp
sti
ljmp
adc
fcomi
loope
into
lods
mov
iret
mov
leave
mov
sbb
jecxz
sub
jecxz
repz
pop
xchg
scas
sbb
inc
ds
adc
inc
xlat
sahf
cli
aam
mov
jmp
sahf
pop
out
xor
out
out
sub
cmp
mov
jp
mov
add
xchg
inc
testb
push
cmp
push
test
pushf
inc
add
daa
jge
mul
inc
insb
scas
std
aas
mov
xlat
jne
mov
jne
shll
out
mov
out
cwtl
and
pop
xor
popf
insl
add
fistpl
adc
stc
inc
arpl
xor
mov
fmulp
cmpsl
cmovo
jl
add
mov
cltd
inc
or
xchg
lret
xor
xor
pop
notl
sub
push
fcompl
cmpb
out
pusha
fwait
mov
cwtl
mov
pop
inc
stos
sbb
or
add
mov
pop
jmp
inc
xor
fistps
cwtl
ss
lds
mov
push
mov
stos
cli
or
inc
movsb
aaa
add
push
jns
push
dec
out
push
sbb
mov
loopne
insb
dec
pushf
xor
mov
sbbl
mov
icebp
and
inc
sub
sub
in
or
mov
jl
push
movsl
daa
xor
dec
shrl
cld
cmp
repnz
popf
jno
inc
and
mov
pop
mov
rclb
mov
lea
movsb
inc
mov
xchg
cmpsl
scas
inc
xchg
fmulp
movsb
xchg
mov
add
mov
sub
lret
in
xchg
loopne
or
lret
or
adc
arpl
cld
pop
lcall
stos
lcall
cltd
lea
out
cmp
lahf
cmp
push
or
loopne
icebp
mov
pop
push
xlat
inc
xor
fdiv
push
mov
and
fildl
test
inc
sub
push
push
punpckldq
mov
inc
inc
fisubrl
sub
sbb
orl
sbbb
jge
push
jmp
mov
mov
test
lcall
push
cld
cmp
dec
stos
add
or
and
jp
mov
add
mov
pop
inc
sti
jge
cltd
pop
and
sbb
mov
rolb
inc
sub
inc
fwait
adc
mov
call
inc
stc
lcall
lods
repnz
jmp
adc
adc
mov
mov
repz
jmp
or
inc
popf
movsb
les
or
test
js
repnz
pop
or
mov
and
inc
loopne
pop
loopne
daa
mov
ret
add
add
pop
cmc
mov
xor
roll
fsts
pop
sbb
jecxz
pop
rcrl
jns
andl
addl
sbb
jns
push
cmp
scas
inc
mov
jg
and
jae
sub
lods
rcl
push
cmp
xchg
shlb
in
or
and
jae
xchg
outsb
push
lods
jle
pop
mov
enter
aaa
rclb
ljmp
mov
pop
adc
test
addb
int3
arpl
inc
push
popf
jb
jns
dec
sbb
xor
out
mov
test
cmpsb
jmp
xor
lcall
call
pop
and
in
pop
lods
pop
jae
pop
xchg
ret
mov
mov
push
lret
xchg
inc
stos
div
fs
dec
cmp
scas
cli
fdivrs
push
hlt
jb
pop
and
fsts
fmull
inc
loop
scas
push
xchg
rcrb
xlat
xchg
jle
or
sub
test
mov
fistpl
hlt
mov
xor
stos
fxam
mov
lret
jbe
inc
pusha
lret
sub
data16
out
fldcw
orl
mov
test
adc
pop
push
enter
dec
xchg
icebp
push
or
lock
add
cs
mov
or
arpl
stos
xchg
pop
insb
ja
fincstp
aas
pop
xchg
outsl
es
xlat
fcmovu
orb
mov
cmp
in
data16
pop
pop
shlb
push
dec
fldenv
scas
sbb
mov
or
sub
add
repnz
mov
popf
sbb
hlt
or
cmp
sub
mov
ret
fs
adc
pop
dec
mov
push
loope
jbe
lret
fs
inc
fists
out
mov
lods
xor
jbe
aam
xchg
cmp
arpl
pop
xchg
icebp
cmpxchg
mov
ficoml
mov
jnp
lret
fnsave
insb
rcll
jle
xor
mov
adc
loopne
gs
sahf
pop
pop
out
inc
lcall
or
sbb
fadd
sub
js
stos
and
mov
push
mov
pop
imul
and
ds
add
and
xchg
std
repnz
dec
adc
or
jge
cwtl
int
push
movsb
andl
clc
pop
cmc
loopne
fs
into
in
dec
pop
into
in
jno
push
mov
or
mov
pushf
in
jns
inc
inc
mov
xchg
inc
mov
das
call
mov
cmp
adc
movsl
lods
rclb
sahf
add
xlat
out
test
pop
mov
add
xor
mov
xorps
xchg
mov
sahf
adc
pop
sub
dec
or
in
mov
push
cli
sahf
pop
pop
mov
aaa
and
dec
mov
cmp
ret
xchg
or
ds
rorl
push
jecxz
into
cli
sub
mov
or
jmp
mov
cmc
lock
mov
cbtw
xchg
enter
cmpl
mov
pushf
popa
test
mov
stos
mov
out
jo
js
jno
rorb
sub
or
aam
xlat
push
fnstsw
fidivrs
std
ret
inc
mov
mov
adc
cmpsb
and
daa
fstpt
sbb
adc
add
lahf
shl
xchg
lahf
daa
shll
cmp
jg
subl
sbb
xchg
fwait
lods
and
repz
mov
mov
or
xchg
and
pop
call
mov
inc
xor
ret
xor
outsl
into
pop
xchg
movsl
or
jp
pop
aaa
add
pop
xchg
outsl
xor
je
data16
jo
in
xchg
insl
lcall
push
jge
mov
dec
xchg
imul
cmp
jecxz
and
addl
nop
popf
add
orb
adc
rorb
lods
dec
lods
or
push
hlt
icebp
repnz
test
pop
xor
sub
cmp
mov
push
push
mov
sbb
mov
lds
testb
adc
loop
mov
pusha
aas
addr16
and
out
stc
mov
je
mov
test
nop
inc
adc
or
pop
stc
pop
stos
fwait
ds
mov
pop
mov
in
xchg
in
setns
pop
xchg
pop
mov
and
dec
adc
jmp
push
mov
aaa
je
das
cmp
fs
sti
fmuls
lret
inc
pop
cwtl
shl
push
xchg
cs
leave
lret
sbb
xlat
ja
mov
add
aam
notb
cmp
cmpsb
sub
jle
sarb
rcll
outsl
push
mov
jno
sahf
fwait
sbb
lods
dec
cmpsl
push
and
into
mov
push
pop
sub
push
mov
orl
icebp
loope
push
pop
jge
xchg
bnd
fwait
inc
mov
scas
rclb
mov
imul
adc
adc
leave
jg
xor
fmull
shlb
push
mov
jecxz
xchg
in
or
mov
lock
je
hlt
cmp
add
hlt
mov
sub
dec
cmp
xchg
and
in
and
cwtl
push
or
mulb
dec
xlat
cmovno
jg
test
dec
dec
into
xor
pusha
sbb
not
cmp
ds
loope
shlb
jmp
rorb
push
mov
dec
cmp
shr
xor
add
mov
jne
insb
jnp
test
aad
or
add
les
xor
adc
fwait
mov
inc
xor
movb
dec
mov
lds
call
mov
mov
jecxz
sti
push
scas
cs
sbb
and
das
cmpb
jecxz
fildl
insb
push
mov
test
and
push
jmp
cltd
cmpb
ss
mov
inc
shrl
mov
mov
or
xor
in
xchg
xor
and
daa
subb
xchg
sti
adc
xchg
xchg
lods
or
jo
hlt
ds
fs
jge
stc
in
bswap
outsl
dec
mov
hlt
xor
mov
mov
cmc
sbb
sub
pushl
inc
sahf
outsb
jl
sub
pushf
jbe
push
jmp
les
sti
add
jl
mov
push
scas
mov
mov
dec
sub
aas
cld
scas
in
enter
fisubrl
imul
data16
cmove
mov
cmp
sbb
in
dec
push
nop
decb
xchg
cli
mov
sub
mov
stos
jl
push
test
cmp
and
cmp
cmp
in
pop
fwait
inc
ret
xchg
sahf
std
inc
inc
pop
and
in
inc
ljmp
test
sub
push
cmc
add
movsl
mov
mov
push
ds
xor
cmpb
ret
xor
outsl
stos
mov
mov
push
jge
in
mov
xchg
adc
jae
sub
call
add
sarb
loope
adc
ja
mov
mov
lds
jb
stos
lods
outsb
test
stc
push
or
retw
rolb
mov
push
int3
push
dec
pop
dec
inc
stos
lds
ja
rolb
dec
shll
aaa
mov
pop
inc
pop
addr16
or
or
sub
gs
xor
mov
adc
pushf
mov
test
icebp
cwtl
jnp
sub
ret
mov
fistl
cmc
in
adc
mov
add
sbb
xor
mov
and
fbld
push
fimuls
adc
out
iret
sub
cmpsl
pop
push
ja
in
insb
mov
jne
out
inc
shr
scas
push
pusha
mov
or
adc
pop
dec
or
or
cmc
and
fwait
and
loopne
xor
std
dec
mov
repnz
xlat
cmp
sub
xchg
lods
test
cmpl
jmp
dec
sti
or
lods
jb
cmp
xchg
mov
xor
add
xchg
or
rorl
cmpsb
movsb
or
pop
in
int
leave
pushf
ja
jnp
sbb
xchg
into
pushf
lock
jne
xor
xlat
repz
xor
mov
adc
test
inc
inc
dec
dec
adc
fldt
movsl
icebp
sbb
jl
mov
mov
pop
lret
outsb
dec
mov
lcall
sub
xor
jp
test
ja
lds
and
adc
enter
testl
inc
inc
push
adc
out
dec
pop
or
sub
hlt
mov
mov
mov
mov
shl
jbe
mov
sti
in
cmp
ret
jp
inc
sub
sub
inc
push
test
imul
cmpsl
jl
sarl
movsb
cmp
faddl
mov
fmul
out
jo
and
shl
shl
cmp
xchg
add
cwtl
push
xor
leave
insl
arpl
add
sbb
in
mov
cwtl
lea
push
nop
stc
cwtl
mov
out
fs
pusha
imul
mov
ja
clc
call
add
or
push
push
mov
pop
imul
xchg
scas
adcb
and
in
test
das
jecxz
sub
int3
and
popa
mov
movsl
inc
sub
and
sbb
sahf
aad
mov
xchg
mov
or
sti
imull
mov
mov
sbb
stos
dec
xchg
fs
movsl
aas
cwtl
shl
js
orb
test
bound
cs
xchg
pop
addr16
cmp
ret
movq
mov
orps
insb
sbb
xchg
pusha
pop
fists
cmpsb
loop
je
aam
lret
in
nop
pop
xchg
arpl
push
add
cmpsl
stc
roll
push
or
ss
adc
inc
inc
popf
decl
cmp
fs
cmp
pop
test
cmp
sub
fdiv
jbe
dec
push
xchg
out
mov
outsb
std
and
shll
pop
aas
mov
and
mov
aaa
jle
div
call
push
insl
adc
data16
icebp
lcall
les
mov
pop
adcb
iret
out
push
movsl
mov
pop
out
pop
rorb
insl
mov
push
cltd
inc
xor
aam
xlat
and
pop
sub
dec
add
jnp
inc
out
sub
in
cmp
cmp
cmp
mov
mov
xchg
insb
fsubrp
sbb
lock
pop
push
push
orl
outsl
xchg
ds
adc
test
and
xchg
jo
loope
xchg
or
rcrb
js
xor
cmp
mov
mov
xor
mov
gs
push
pop
inc
imul
add
and
sbb
outsl
leave
inc
js
lret
dec
pop
add
imul
sub
outsl
loop
lcall
xor
ret
jle
pop
push
cmp
cmpsl
mov
jb
push
pop
sbb
lret
mov
imul
divb
fdivl
ret
pushf
imul
jbe
xor
xchg
pop
aas
and
push
lods
out
jmp
push
add
fidivrs
cmp
ss
jmp
call
jl
lahf
ret
mov
pop
outsb
or
fildl
cltd
subl
mov
fstps
test
pop
push
push
push
cwtl
mov
outsl
sbb
xchg
lds
imul
mov
jmp
ja
lea
fcmovbe
mov
fs
push
mov
stc
subb
xchg
roll
fisubl
movsb
aad
mov
mov
add
scas
cmp
pop
inc
lods
fmull
mov
repz
decl
fiaddl
and
mov
into
clc
adc
enter
add
in
imul
negl
lods
xchg
inc
xor
insb
mov
sub
subl
and
stc
les
mov
sar
jl
fcoml
xchg
dec
das
fbld
fisubl
and
fisubl
nop
jmp
sub
out
pop
ja
xchg
pop
adc
es
push
or
dec
mov
jae
mov
mov
lea
shlb
into
jg
shlb
or
out
int
sbb
mov
cmp
mov
outsb
scas
inc
mov
sbb
jp
jnp
xor
adc
insb
pop
icebp
xor
scas
mov
push
pop
aas
je
rcrb
dec
xor
and
sub
or
test
fistps
xorl
decb
mov
add
into
mov
add
mov
sub
sub
call
movw
cwtl
loop
pop
insl
int
sti
cmp
push
popf
scas
mov
mov
loope
mov
sbb
mov
mov
mov
pop
rolb
mov
and
imul
bnd
iret
add
mov
fldcw
inc
lods
inc
cli
adc
mov
xor
dec
add
int3
or
xchg
or
pop
cmp
into
aad
pop
xor
mov
add
test
das
and
push
testb
and
mov
loopne
mov
fcoms
adcl
decl
mov
ljmp
mov
sbb
into
pop
nop
rcrb
cmp
mov
xchg
fnstcw
mov
test
iret
jl
mov
inc
xor
add
test
imul
or
mov
xchg
pop
push
pop
push
jmp
clc
out
ret
aad
aaa
dec
jbe
negl
inc
or
shlb
aad
lcall
movsb
push
fs
mov
sti
lahf
xchg
push
test
cmc
call
mov
fistpl
fwait
inc
and
inc
insl
int
test
inc
xchg
sub
aam
mov
cs
in
out
sbb
jg
lock
mov
dec
rorl
inc
out
xlat
jo
lock
fadd
xchg
sub
inc
cld
les
arpl
dec
mov
fwait
lcall
rcrb
xchg
insb
cmp
inc
stos
ljmp
aad
enter
test
popa
imulb
std
psubusw
mov
pushf
imul
xchg
dec
aaa
lods
sbb
cmc
or
push
push
mov
rep
fwait
sbb
hlt
loope
cmp
and
repz
or
movsb
xor
or
add
pop
inc
sub
add
add
lods
push
shr
ja
xchg
sub
or
leave
rcll
mov
jbe
js
or
or
jo
mov
in
fnstcw
jl
popf
popf
inc
mov
popa
or
pop
ljmp
push
gs
mov
inc
mov
outsl
insl
lahf
mov
aad
and
lret
cmpsl
stos
cmpsb
jbe
adc
mov
ljmp
cmp
mov
jne
push
mov
out
xchg
rcrb
test
rcrl
push
inc
sbb
stc
mov
mov
push
jbe
mov
lret
and
xchg
aad
and
ret
cmpsl
or
cmp
and
jno
add
jae
sub
movsb
leave
adc
add
imul
in
push
shl
addr16
sbb
pushl
std
push
fldt
push
sbb
mov
stc
mull
int3
es
cmp
pop
cmp
adc
mov
rcl
insl
cs
rclb
pop
iret
dec
jg
mov
ret
mov
shlb
push
stc
xchg
and
into
scas
and
je
pop
dec
mov
dec
movsl
dec
inc
rclb
imull
pop
outsl
jns
mov
imulb
mov
jnp
jo
dec
jno
filds
aad
and
push
cmp
jnp
sub
mov
mov
fwait
daa
inc
jmp
inc
add
cmp
fdiv
test
dec
push
push
ds
aad
mov
mov
cmc
shll
movl
pop
sub
jmp
add
xorb
inc
xchg
pusha
sub
orb
jbe
pop
jle
mov
push
stos
and
xchg
fsubrs
pushf
test
or
repnz
ja
les
enter
pop
jae
subl
les
imul
pop
fadds
pusha
hlt
iret
cmp
push
inc
add
mov
lahf
mov
add
pushf
mov
pop
test
test
scas
xlat
mov
rorb
cmp
imul
mov
addl
int3
lret
daa
and
mov
or
jno
cmp
add
sbb
lcall
mov
xchg
push
inc
es
jp
pop
hlt
mov
pushf
in
xor
push
enter
and
jmp
int3
outsb
in
push
fisubrs
es
dec
in
xlat
jo
adc
in
push
jl
cmc
add
cmc
xchg
mov
insb
dec
pop
push
ja
add
sub
add
pop
movsl
pop
push
or
ds
fdivs
jo
pop
xchg
stc
and
repnz
inc
lods
add
ret
mov
sub
mov
jp
popf
adc
popa
dec
arpl
stos
push
jns
xor
mov
repz
xchg
fdivrl
dec
loop
inc
pop
jle
mov
mov
add
stc
movsl
cmc
cmpsl
repnz
sbb
inc
or
ja
ja
shlb
mov
adc
jb
idivb
ret
xchg
cmc
adc
sub
rorl
call
outsb
stc
mov
std
in
dec
repnz
sti
scas
dec
rorb
xor
pop
push
xchg
adc
push
test
into
add
dec
push
leave
xchg
movb
dec
inc
icebp
push
insb
in
jecxz
test
mov
rcrl
xchg
xor
gs
nop
pop
sbb
pop
xor
mov
ja
or
packssdw
mov
movsb
outsl
pop
les
rcrb
and
xor
inc
mov
outsl
cmpsb
call
adc
add
inc
mov
sbbb
arpl
inc
lods
mov
push
jecxz
inc
fidivrl
push
dec
leave
lcall
ret
mov
inc
stos
pop
out
scas
pushf
fbstp
xor
pop
sbb
or
mov
pop
inc
or
clc
movsl
imul
outsl
hlt
mov
mov
je
jge
lods
lret
outsb
stos
pop
cvtps2pd
nop
cmpsb
dec
es
ss
adc
mov
fwait
cmp
or
xor
into
in
mov
or
roll
imul
mov
inc
inc
cmc
loop
and
cwtl
xor
add
lds
dec
sahf
adc
and
adc
daa
cmp
dec
aaa
and
mov
mov
mov
cmp
movsl
and
rcrl
lcall
xchg
cwtl
cmp
push
dec
hlt
xchg
bound
xor
lret
ss
insb
pusha
xchg
in
adc
popa
mov
mov
jb
mov
mov
xor
ss
add
subl
inc
shrb
push
shll
loop
cmpsl
xchg
mov
repz
pop
cmp
mov
jge
addr16
lret
xor
insl
dec
lods
fwait
loope
pop
push
lret
dec
lahf
pop
test
jg
xchg
cmc
cli
stc
add
out
inc
clc
rcr
mov
test
or
mov
mov
fmull
dec
in
sti
inc
shr
mov
jo
pop
add
ror
sbb
mov
xchg
roll
pop
sub
jg
pusha
sub
scas
leave
ss
fstl
mov
gs
xor
and
ljmp
ljmp
push
lret
pop
lcall
cmp
jae
data16
fwait
das
aad
mov
cmp
mov
insb
iret
das
jp
mov
pop
ficoms
scas
neg
mov
mov
mov
mov
jp
jl
cmc
and
jmp
scas
sub
inc
dec
or
xchg
xchg
push
daa
lea
jle
fwait
jmp
xchg
daa
jns
add
daa
mov
out
idivb
push
int3
aam
shlb
jbe
add
cmp
shll
jno
jecxz
fldt
mov
pop
iret
cmp
dec
sahf
ss
into
gs
leave
lods
jmp
movsb
pop
cmp
mov
icebp
stos
repnz
mov
insl
pop
in
test
cwtl
push
rol
jne
int
or
cmp
xor
mov
mov
nop
pushf
pop
mov
inc
nop
pop
mov
dec
add
add
in
inc
jg
push
pop
xchg
out
sti
pop
ds
xchg
sbb
adc
subl
add
mul
stos
cmp
mov
jp
test
mov
sti
mov
push
mov
push
push
das
xor
data16
jb
push
ja
cld
int
and
inc
hlt
bound
or
insb
pop
in
out
notb
pop
stc
push
xor
dec
imul
dec
pop
cs
or
or
popf
or
pop
cmp
push
mov
mov
mov
cmp
mov
inc
addr16
pop
popf
inc
jb
outsb
mov
push
nop
mul
shlb
insw
mov
sbb
mov
ret
pop
dec
sub
xchg
std
push
bound
nop
sub
cli
ljmp
aaa
cmp
and
or
cmp
loope
cmpl
stc
inc
inc
in
cmc
test
adc
xor
mov
sub
pop
gs
push
push
dec
push
push
pop
bound
and
mov
mov
mov
mov
lods
ret
mov
sbb
mov
jle
and
cs
repnz
mov
fmull
imul
adc
sbb
mov
test
push
dec
sub
in
daa
lods
jne
mov
fists
mov
inc
mov
lock
stos
int
fdivp
aas
stos
cmp
xchg
ja
stos
inc
xchg
pusha
loop
cld
scas
lods
fs
out
ljmp
xchg
cld
stc
sbb
xor
bound
dec
ds
aas
cwtl
jmp
sub
fists
cmc
inc
popf
es
loopne
pop
fwait
in
push
data16
adc
cmpsb
inc
jge
icebp
rorl
pop
mov
icebp
pop
icebp
enter
scas
fldl2e
add
fnstenv
test
lods
aaa
add
mov
cs
inc
lahf
pop
scas
pusha
add
cmp
xchg
jne
xorb
sbb
pusha
mov
rcrl
mov
sahf
mov
loopne
dec
or
push
push
cli
repnz
inc
pop
sub
add
or
movsl
adc
jno
mov
adc
ljmp
or
pushf
xor
sbb
out
test
cmp
jbe
dec
enter
outsl
dec
or
adc
mov
add
les
ret
or
ret
mov
dec
cmp
sub
loopne
insb
loope
lret
add
shlb
enter
sbb
mov
call
inc
mov
mov
loop
xchg
out
addr16
adc
roll
jb
sarb
ret
dec
sbb
push
outsb
aas
push
ljmp
sbb
mov
sar
outsb
mov
push
lcall
and
mov
repz
loope
jmp
adc
insl
mov
jecxz
aaa
cmp
ja
fcoms
push
sti
fsub
jmp
and
add
lret
jmp
sbb
inc
aad
mov
popa
and
pop
loop
call
cmp
push
xlat
mov
and
addr16
pushf
ljmp
mov
push
nop
jmp
jbe
jmp
div
dec
call
dec
dec
dec
adcl
in
push
fcompl
xchg
dec
pop
mov
insl
jns
dec
pop
iret
add
and
cmc
out
dec
imul
xchg
sub
rclb
fistps
mov
in
adc
cmp
dec
xchg
xlat
les
mov
movsl
pop
std
call
cmp
aad
fldln2
iret
sbbl
or
iret
inc
sbb
mov
lods
loop
es
xchg
xor
data16
sub
das
push
pop
cmp
xor
push
ffreep
mov
das
xchg
mov
jae
mov
mov
mov
aad
mov
inc
clc
lock
insl
int3
lret
dec
lahf
fbld
inc
je
inc
movsl
in
sahf
fmull
xor
xorb
xchg
mov
push
add
lds
push
lds
add
faddl
add
outsb
cmp
cwtl
push
adc
fisttpl
push
xchg
ret
cmp
jge
into
inc
test
cmp
dec
jg
pushf
xchg
fdiv
cwtl
pop
or
mov
sbb
push
sub
xchg
xchg
out
push
dec
xchg
add
mov
enter
mov
cltd
mov
ds
dec
nop
inc
stc
pop
addr16
add
push
mov
xchg
mov
mov
push
sbb
les
add
push
add
xchg
fildl
add
jg
jnp
push
lds
xchg
inc
into
icebp
aaa
aad
pop
lods
push
lods
aas
lret
pop
outsl
sahf
ret
add
xchg
xchg
mov
lds
mov
xor
adc
in
xor
push
sbb
or
or
repz
sti
sub
push
sub
daa
xlat
lods
add
das
push
imul
push
int3
sarl
sbb
push
popa
pop
mov
adc
inc
jno
inc
ret
cmp
xchg
mov
dec
cmp
int
stos
imul
dec
xor
in
sbb
push
mov
imul
shl
jp,pt
push
push
js
pop
fwait
rcrb
in
jmp
mov
mov
movsl
mov
rcll
adc
stc
lods
inc
daa
mov
push
jg
jl
arpl
pop
mov
cs
test
push
popa
sbb
out
push
sahf
mov
fcoml
mov
sbb
jl
loope
test
mov
and
lahf
adc
out
or
ljmp
push
xchg
cmpl
pop
sub
aas
inc
pcmpgtb
lret
lahf
test
cmpl
aaa
aas
ret
pop
xor
xchg
icebp
mov
pushf
adc
sarb
and
jb
hlt
aaa
xchg
ss
repz
fistl
push
aas
jmp
add
inc
in
scas
xchg
jg
pop
jo
scas
dec
cli
xor
pop
inc
aad
jno
pusha
imul
data16
inc
bound
popf
out
pushw
aad
inc
add
adc
add
mov
out
push
pusha
fisttpll
fcmovnbe
js
movswl
xchg
imul
xor
test
xchg
and
pop
jge
dec
sbb
add
test
or
shl
scas
sub
pop
push
xorl
fistpll
aam
mov
test
loopne
pushf
aaa
xor
shl
sti
repz
into
call
sbb
mov
outsl
sti
test
and
sahf
ret
js
pop
sub
punpcklbw
out
push
jb
cmp
pop
mov
add
or
mov
and
jp
and
je
int
xor
jnp
add
cmp
jne
mov
dec
xchg
dec
mov
rcrb
adc
cltd
lods
shlb
cmp
push
lods
popf
stc
jo
mov
dec
mov
adcl
negb
adcb
shll
orl
jno
cs
ffreep
das
dec
outsl
mov
das
jbe
cmp
inc
and
push
or
inc
xchg
bnd
dec
ret
mov
cmp
and
sti
fwait
clc
mov
or
inc
cmp
mov
mov
mov
xchg
fisttpll
pop
orb
cltd
shll
mov
sub
or
add
sub
inc
or
push
add
jo
or
sub
and
lds
pop
data16
jo
inc
push
sahf
orb
arpl
push
cmp
sahf
mov
dec
xchg
out
test
cmc
sete
inc
push
std
mov
inc
lods
cmovp
xchg
fildl
mov
push
sbb
xchg
stc
pop
fldcw
mov
lds
jmp
jns
inc
jbe
jle
ja
fisttps
mov
add
adc
jl
in
fisubrl
arpl
and
and
push
or
sub
xor
sub
js
ror
adc
es
mov
dec
bound
orb
imul
jge
pusha
push
and
mov
movsb
jl
pop
dec
shrl
mov
je
pop
movsl
idivb
jge
ljmp
iret
popf
adc
std
aaa
fsubrs
lret
jle
jl
daa
fdivs
mov
pop
and
scas
cmpsl
outsb
lds
sbb
jo
les
adc
or
out
mov
fnsave
cmp
dec
roll
add
and
imul
add
in
mov
dec
fistl
jne
sub
mov
lods
cltd
jl
cmc
add
insb
xor
cmpsb
rorl
lods
add
adc
mov
push
stc
ja
xchg
push
or
cmp
xor
lods
push
jle
aad
sub
push
mov
call
jp
sub
push
push
dec
leave
or
les
mov
xor
sbb
and
push
push
shrd
mov
out
imul
mov
mov
cmp
add
outsl
jge
mov
cli
ss
fs
es
push
adc
fwait
jne
out
mov
jne
into
dec
subl
and
mov
and
aaa
scas
das
fistpl
adc
in
sbb
mov
lods
pusha
sarl
scas
rol
mov
push
pusha
fisubrl
pop
or
clc
or
or
nop
or
sbb
call
dec
es
jge
xchg
adc
cli
leave
mov
xchg
mov
in
fimuls
push
xor
sub
lods
imul
arpl
mov
push
mov
lods
cmp
xchg
dec
test
rcll
mov
out
stos
ja
mov
adc
lret
scas
loope
in
lret
pop
out
mov
push
cmpsl
xchg
mov
and
jl
cld
or
jge
pushf
or
xchg
dec
jo
xchg
dec
mov
cmp
and
ljmp
cmp
jnp
jns
sub
lea
mov
cmp
jbe
in
jg
mov
pop
cmp
xor
xchg
lret
sbb
test
leave
add
jne
sbb
jno
sub
stc
pop
ja
adc
pop
dec
insb
xchg
std
ljmp
xchg
sub
out
add
pop
stc
mov
popf
pushf
orl
adcl
xchg
aad
stos
stc
jmp
lods
or
stos
mov
dec
dec
mov
insl
inc
rcll
into
mov
cmp
push
ret
cmpsb
arpl
dec
invpcid
cmp
sub
sub
repz
inc
add
pop
mov
push
outsl
push
lea
jnp
sub
js
jge
jp
in
inc
cmpb
aad
gs
adcb
or
inc
xchg
mov
shll
or
scas
imul
mov
ret
push
xchg
loop
lds
xor
fcoms
repz
cwtl
mov
enter
dec
dec
out
jle
jns
scas
hlt
cmpsb
ret
clc
lds
frstor
test
cmpsb
dec
cmp
in
and
daa
jmp
mov
dec
insl
dec
mov
mov
xchg
fcomi
pop
mov
sti
push
xor
xor
fsubrs
or
popf
mov
call
imul
sbb
insb
jae
push
cmp
jns
dec
ret
mov
aaa
push
repz
mov
dec
dec
testb
daa
mov
das
ja
dec
shr
jle
movsl
enter
xor
lock
testw
dec
and
or
movl
add
lret
stos
int
mulb
jo
shrd
push
pop
stos
pop
xor
popf
jmp
sbb
gs
adc
push
mov
jo
cmpsl
movsb
dec
dec
dec
cltd
clc
int
push
add
adc
das
out
das
ljmp
mov
mov
repz
add
or
mov
mov
or
pop
repz
lds
and
xor
addr16
jle
in
push
add
inc
in
and
pusha
fimuls
cld
mov
js
and
stos
je
mov
scas
sbbl
or
js
pusha
out
dec
jecxz
add
pusha
xor
xchg
icebp
push
subl
out
loopne
ret
mov
sub
daa
sbb
lret
lea
orb
rclb
sbb
es
mov
jmp
arpl
dec
mov
jae
mov
or
fisttps
xchg
sub
fcmove
shll
mov
xchg
dec
insb
out
push
fcomi
movl
scas
xchg
xor
pop
lahf
and
ja
imulb
xchg
pop
iret
insb
inc
or
push
outsl
dec
lret
xor
cmp
dec
js
jne
rorl
or
xor
dec
sub
add
xor
push
and
and
pop
or
ret
push
loop
jmp
stc
adc
scas
loop
rcrl
jo
ret
testl
loope
loopne
xchg
test
inc
inc
es
dec
mov
xlat
lcall
xlat
and
lahf
dec
pop
lcall
je
pop
stos
xor
dec
inc
int
cmp
out
add
sub
push
fldt
int3
mov
bound
cmc
and
and
aas
outsb
ds
mov
xchg
fs
lock
addr16
fists
lea
sub
pop
sbb
mov
fwait
dec
pop
test
inc
pop
pop
lcall
in
ss
xchg
es
inc
mov
cmc
mov
sti
aam
scas
stos
jmp
outsb
or
clc
jo
aam
sahf
and
insl
add
jnp
lea
or
lods
pop
imul
mov
or
cmp
loopne
dec
les
mov
sub
out
cs
push
push
mull
hlt
mov
inc
cli
jl
stos
sbb
imul
bound
mov
daa
out
fs
jge
je
jno
cmp
mov
xor
mov
inc
jbe
mov
movsl
xor
xchg
in
xor
push
mov
sahf
ret
lods
lods
lahf
scas
sub
xchg
fsubrl
aas
mov
aaa
sbb
sbb
dec
sbb
sub
fldenv
dec
insl
push
sub
lods
sahf
dec
add
icebp
aas
negb
fisubl
push
dec
xchg
dec
adc
aaa
cmp
adc
add
pop
dec
iret
dec
mov
cmpsl
pusha
inc
sub
or
lret
add
popa
and
jmp
es
xchg
xchg
out
mov
imul
and
add
dec
lods
xor
or
shlb
xor
out
mov
xchg
jle
out
stos
scas
daa
adc
cmp
repnz
or
shrl
cmpsb
and
mov
fnstsw
cs
and
lds
push
sub
lods
inc
cld
ret
push
inc
xchg
xor
or
test
mov
insl
mov
bound
aam
fiadds
lods
push
loope
xor
jp
dec
xchg
sbb
or
adc
pop
dec
mov
pop
xchg
pop
sbb
imul
inc
lret
fwait
lret
mov
or
imulb
test
xor
sbb
mov
and
in
popa
cmp
aas
push
icebp
push
les
cmp
and
mov
mov
int3
ljmp
dec
pop
dec
lcall
adc
loopne
aam
imul
clc
popf
outsl
pop
lret
mov
xor
xor
sbb
cmpsl
push
mov
push
je
pop
aad
lea
mov
mov
dec
mov
fs
aam
cltd
rorb
imul
and
xchg
test
or
or
rolb
das
jnp
popf
lods
addr16
push
imul
aaa
dec
loope
aas
fnsave
fnstcw
pop
das
mov
mov
sub
imul
cmc
call
dec
and
stc
in
and
or
pop
push
cmp
or
rcrl
mov
aas
repnz
pop
jns
int3
pop
cld
insb
cmp
mov
cld
sub
push
adc
fwait
gs
icebp
loop
push
push
add
fxch
jne
xchg
imul
xchg
lods
enter
adc
repz
mov
lods
cs
daa
pop
mov
inc
cld
and
cmpb
fstl
mov
xchg
out
loope
jl
lcall
mov
xor
lret
outsl
rolb
sbb
jp
mov
xor
mov
repnz
cmp
lods
std
add
out
scas
fimull
pop
les
out
pop
into
dec
cld
sbb
add
ds
sahf
mov
push
inc
adc
jno
rcr
incl
adc
icebp
das
push
xchg
cmc
inc
mov
out
sbb
lea
xor
dec
negb
push
sbbl
movl
adc
adc
rcrb
mov
in
insl
incb
adc
scas
dec
dec
mov
dec
sbb
dec
or
ffreep
push
or
xchg
pusha
out
aaa
xchg
nop
lods
js
xchg
daa
outsl
mov
push
adc
adc
sbb
or
xchg
movsl
fcomp
out
loopne
mov
stc
xor
sub
in
pop
rcrl
pop
cmpsl
aam
test
jb
pop
jne
xchg
cmp
out
mov
mov
xor
jb
sti
loope
jle
inc
call
popa
or
adc
add
push
loope
sarl
shlb
jmp
cmpsl
shlb
sub
pushf
xchg
xchg
add
ja
xor
add
xor
cs
mov
adcb
rcr
xchg
leave
test
jae
subl
push
add
es
xorb
aaa
js
repz
out
aas
movsl
movsl
pushl
insb
loope
pushf
hlt
and
dec
sbb
jo
add
fisubl
dec
jns
pusha
dec
and
xor
mov
mov
jo
xchg
xlat
inc
in
aas
lods
inc
sub
loop
mov
or
in
pop
int
jno
adc
fisubl
cld
mov
adc
add
aas
lret
negb
sahf
aas
addb
adc
pop
inc
outsb
insl
movsb
pushf
inc
fadds
xchg
ret
and
bnd
sbb
fnsave
jno
js
dec
ljmp
mov
int
mov
es
fdivrl
cmp
push
adc
sub
push
pop
mov
fstl
fistpl
sbb
mov
cwtl
mov
xchg
xlat
inc
mov
outsb
mov
cmp
xor
xchg
daa
je
push
out
or
xorb
cmp
and
xor
dec
add
fidivs
pop
lea
imul
int
aaa
cmc
pop
jbe
adc
cmp
hlt
stos
cwtl
mov
mov
rcll
leave
ret
or
push
ficomps
add
sahf
aad
data16
nop
aad
adc
jecxz
loope
iret
push
jnp
xchg
in
ss
outsb
lods
scas
sub
mov
das
jns
rclb
sbb
lock
sahf
push
sbb
sti
xchg
mov
sub
sbb
cmp
xchg
add
mov
sub
jo
jmp
jo
aas
push
mov
mov
inc
adc
scas
sti
jne
inc
mov
cmp
push
mov
mov
popa
les
sub
std
jb
xchg
or
fistpll
dec
cmp
xchg
pop
xchg
mov
test
sbb
inc
xorl
push
icebp
xchg
in
and
jmp
sarl
push
and
jne
adc
aam
arpl
pop
and
es
mov
xlat
sub
fbld
xor
imul
data16
xor
mov
add
add
sbb
in
jmp
xchg
dec
test
testl
xchg
mov
scas
cltd
aam
std
pop
cwtl
pop
inc
int
fmulp
push
rcl
scas
adc
test
mov
sahf
sub
setnp
sub
push
inc
mov
cmpsl
enter
inc
mov
pop
sbb
call
pop
bound
sub
les
fnsave
jmp
push
shll
xorb
je
dec
mov
jp
or
dec
jg
out
xor
fmull
sub
dec
sub
cmpsl
cmpb
and
enter
aad
sub
and
adc
jne
and
inc
int
repnz
cmp
xor
or
dec
arpl
outsb
ja
xchg
adc
or
enter
mov
xor
pop
add
dec
mov
jo
lock
imul
adc
jae
test
orl
fs
add
xchg
rcl
jg
aad
or
pop
inc
call
mov
and
aam
out
dec
mov
jp
lods
mov
test
insl
push
outsl
jnp
sbb
imul
mov
push
loopne
ss
xchg
mov
test
xchg
sbb
pusha
cld
lcall
xchg
int3
push
shrb
adc
cmp
cs
fsubs
ret
jno
sarl
iret
in
cmp
movsl
in
inc
in
add
out
js
jecxz
jae
jb
mov
and
and
xor
or
mov
push
xchg
push
xor
jl
dec
test
daa
adc
leave
xchg
movsl
jl
xchg
xchg
repnz
iret
les
iret
pop
pop
rcrb
add
mov
outsl
ja
loopne
pop
clc
dec
sub
test
xchg
clc
stos
mov
xchg
ja
aam
xor
pop
sarb
pop
lahf
insb
jbe
shlb
sbb
mov
sti
xor
jo
sar
jbe
or
sub
push
test
sbb
or
jmp
or
cmp
add
mov
or
sub
enter
pop
mov
ja
xor
in
in
sbb
pop
bound
mov
push
outsb
out
cltd
jmp
enter
sub
jns
jle
ds
mov
loope
mov
popa
jnp
in
out
and
ljmp
shl
push
xchg
xchg
lret
arpl
jmp
mov
daa
or
jl,pn
in
add
pop
lock
xor
hlt
or
lock
mov
dec
daa
cmp
mov
jbe
add
jmp
xchg
dec
dec
inc
jge
push
xor
xor
inc
lcall
repz
nop
pop
fdiv
xor
aas
xchg
xor
daa
test
test
aaa
cmpsb
loope
push
arpl
jmp
mov
push
lds
push
and
pushl
mov
pop
push
lods
jecxz
and
push
inc
cli
fcoml
stc
test
pop
imul
xchg
push
je
int3
add
push
inc
aaa
sbb
xor
sub
push
sbb
xor
jg
lods
and
pslld
jp
fs
add
pop
into
and
push
das
mov
or
sbb
sarb
stc
fbld
bound
imul
stc
push
inc
mov
dec
addr16
jns
imul
jae
stos
ss
or
add
sbb
xor
push
aam
dec
inc
and
sahf
xlat
adc
call
hlt
mov
or
pushf
out
inc
mov
and
out
adc
mov
mov
jle
lahf
orl
jnp
in
push
push
push
in
fadd
outsl
scas
mov
shrb
xor
icebp
pop
or
adc
movsl
push
ja
mov
std
jle
hlt
fildll
je
mov
push
pop
add
out
lods
pusha
std
adc
pop
les
cmp
out
adc
ret
je
subl
pop
orl
push
lret
or
lods
push
dec
std
call
add
ret
mov
subl
jmp
cmp
rolb
jo
adc
push
mov
mov
in
mov
je
fistps
pop
shl
sub
decb
mov
mov
rorl
jno
add
dec
push
popf
jl
imul
jg
add
lret
bound
pop
inc
hlt
rorb
sbb
pop
scas
and
test
sub
mov
leave
sub
jo
pop
pop
dec
xlat
mov
addr16
pop
dec
in
inc
push
sti
jno
mov
jl
repnz
rolb
adc
lea
test
mov
xchg
push
xor
sub
cmp
loopne
inc
sbb
adc
out
int
jnp
mov
jecxz
je
subb
mov
push
mov
les
das
cmp
test
nop
das
call
mov
pop
cmp
cmc
out
ss
pusha
popl
arpl
mov
add
pop
inc
enterw
je
adc
xchg
and
cs
jnp
mov
push
pop
xchg
daa
cmpl
incl
jecxz
inc
push
push
movsb
or
adc
xor
repnz
mov
ja
inc
sub
lahf
repnz
dec
sub
lcall
inc
lds
add
xchg
sub
push
std
data16
push
aam
pop
jae
in
add
hlt
not
jge
sbb
jbe
testl
mov
in
call
mov
mov
add
sbb
mov
and
mov
pop
test
dec
bound
inc
add
cli
fdiv
subb
jp
pop
xchg
mov
pushf
sbb
or
sahf
pminsw
sbb
ds
pop
fcmovb
mov
in
sub
lods
or
lock
loop
adc
hlt
movsl
add
loope
push
hlt
sbbl
xchg
popf
cmp
xchg
push
aas
xchg
jecxz
cmp
xchg
cmpsl
je
std
mov
jnp
pop
push
rorb
int
and
cwtl
xor
sub
out
fwait
repnz
cmpsl
std
pop
push
sub
jne
fists
sbb
test
mov
jge
das
rcll
stos
xchg
aas
aam
push
cmp
adc
fistps
test
mov
xchg
xor
test
inc
idiv
mov
add
repz
sbb
stc
and
decl
rcrb
enter
fwait
sti
das
les
and
out
cmc
mov
enter
jl
sti
hlt
lret
fists
pop
mov
xor
pop
sub
test
pop
xchg
push
les
push
or
sub
mov
sbb
repz
mov
push
and
lock
adc
lcall
cmp
movsl
incl
call
dec
fdivrs
add
mov
or
push
mov
es
sub
xchg
pop
insb
inc
mov
test
ret
pop
dec
cmpsb
js
adc
xor
maskmovq
negl
push
mov
or
sub
cmp
loope
lock
sbb
push
movsb
je
subb
cmpb
mov
mov
frstor
lods
je
imul
sbb
cmp
dec
jbe
xchg
add
jno
inc
dec
xor
arpl
cltd
push
jnp
stos
sub
iret
mov
adc
lret
ja
dec
add
push
and
stos
push
bound
push
in
jge
push
mov
addr16
adc
push
fdivrl
int3
lea
xchg
jo
jne
jnp
sub
xchg
adc
test
mov
xchg
xor
jl
jns
sbb
sub
cmp
adc
pop
adc
movsl
mov
out
mov
sbb
shr
jno
jg,pt
or
ret
add
in
arpl
xchg
out
andl
mov
repnz
push
int3
leave
push
push
sub
add
push
movsb
cmp
add
sahf
rcrl
jl
push
data16
cmp
mov
dec
mov
fstl
stos
xlat
popl
inc
xchg
adc
sub
mov
aaa
adc
idivl
push
pop
jmp
dec
aas
push
js
cwtl
dec
fisttpll
sbb
cmp
push
push
xor
pop
pusha
adc
adc
jmp
or
aad
bound
fnsave
out
rclb
dec
cli
fprem
sub
sub
imul
dec
les
and
nop
jae
leave
call
xlat
or
hlt
and
xor
ficoml
mov
mov
xchg
jb
or
les
in
mov
xor
mov
in
icebp
stos
cvtps2pd
push
inc
lods
mov
mov
gs
push
push
das
push
ja
pop
push
arpl
xor
cmpsl
sub
ja
aas
xorb
cmp
inc
mov
scas
push
push
inc
repnz
jg
data16
int
movsb
out
iret
loope
push
pop
negl
mov
aas
aam
vunpckhps
scas
out
xchg
lcall
mov
icebp
xchg
inc
fisubs
js
xchg
inc
movsb
mov
mov
es
cmp
and
subl
int3
shll
ret
arpl
outsb
outsb
clc
sub
xchg
and
pop
adc
test
push
or
js
loop
icebp
and
addr16
lcall
push
mov
in
lcall
shrl
callw
cltd
xchg
iret
cmpsb
stos
mov
mov
fidivrl
nop
xor
ja
cmpsb
jl
xchg
test
or
sbb
add
fdivl
push
sbb
rclb
stos
out
repnz
bound
ja
mov
nop
repz
jle
push
pop
outsb
ljmp
xor
mov
cmc
mov
mov
les
push
ret
mov
push
out
dec
or
inc
push
cmpsl
push
andb
cmp
cmp
js
xchg
daa
cmp
test
outsb
push
jbe
sub
outsl
mov
das
push
sti
mov
xlat
sub
aas
cmc
add
or
xchg
lret
cmpl
cmp
sbb
xchg
mov
xchg
jno
xlat
xor
add
push
dec
xor
push
fstpl
sub
rolb
add
cld
dec
lds
outsb
xor
push
push
dec
jb
push
mov
addps
mov
fscale
rorb
mov
mov
test
ficoml
mov
pop
int
xchg
xlat
insb
mov
in
negb
mov
scas
mov
xor
xchg
cmp
or
jmp
pop
sbb
fs
ret
cmp
insl
shll
inc
and
loop
sub
add
fs
mov
or
mov
fwait
inc
jo
xchg
jo
add
lret
xchg
and
xor
xor
je
scas
daa
xchg
in
test
movb
movsl
inc
mov
mov
sub
int3
lahf
push
xchg
imul
mov
xchg
sub
orb
xor
dec
mov
sub
sub
push
xchg
cli
lcall
fidivs
insb
add
scas
pop
pop
push
daa
loope
inc
leave
xor
or
movsb
mov
ljmp
test
shl
scas
pusha
xlat
not
xchg
lods
sbb
fmull
xor
adc
shrl
adc
cmp
mov
adc
inc
loopne
add
cmp
sahf
enter
icebp
ja
loope
xchg
pop
sbb
lcall
adc
roll
xchg
pop
fistl
xor
gs
xor
jle
pop
cmp
xlat
loop
dec
xor
xor
xchg
loop
jbe
mov
test
cli
mov
mov
pop
add
or
sbb
nop
dec
sub
add
lods
pusha
xchg
xchg
std
xor
rcrb
lret
sub
push
ja
pop
add
aad
pop
mov
test
or
imul
imul
cmp
add
outsb
leave
lahf
fs
sbbb
negl
daa
and
push
sbbb
mov
insl
adc
iret
and
xor
sbb
ret
lock
push
xor
pop
movsl
cld
xor
lock
pop
sahf
clc
xlat
mov
add
jnp
das
test
dec
and
shlb
add
cmp
dec
mov
call
jl
pop
adc
pop
shlb
stos
fwait
mov
inc
push
and
rcrb
cmp
inc
loopne
jp
push
xor
rcll
mov
pop
out
pop
dec
or
gs
xchg
add
aas
or
pop
test
xor
and
movsb
and
push
enter
mov
add
xor
loope
sub
mov
stos
pop
xor
cltd
xor
loopne
adc
mov
inc
dec
popf
cmp
mov
pop
push
imul
mov
rcrb
jl
push
or
sahf
add
xchg
mov
imul
and
pop
mov
pop
adc
popf
fiadds
cwtl
dec
cli
cmp
es
mov
fadd
dec
ret
mov
scas
pop
or
pushf
jmp
lahf
je
aas
loope
mov
jo
into
mov
and
cli
inc
pop
push
cmpsl
cs
pop
movsl
scas
pusha
jns
mov
in
push
mov
mov
pop
xor
aad
leave
cmp
and
inc
dec
xor
mov
dec
mov
aam
jae
out
pop
in
pop
or
adc
push
xor
xlat
add
mov
mov
xor
mov
cli
sbb
push
pop
movsb
jle
or
sub
stos
inc
jmp
or
loope
iret
jmp
sbb
mov
mov
pusha
ret
cmp
or
add
xor
or
ficompl
cmp
scas
orb
dec
lcall
mov
stos
jno
cwtl
mov
loope
scas
inc
xchg
cltd
jge
adc
fpatan
push
sbb
sub
ficoms
mov
inc
xlat
mov
out
jns
inc
es
lock
stc
inc
outsb
xor
fldcw
pop
sbb
cmp
jmp
enter
hlt
lock
loopne
pop
inc
sarl
xchg
repz
shl
jbe
imul
mov
cltd
xor
jg
orb
and
lcall
outsl
dec
mov
or
push
lods
int3
sbb
stc
pop
xor
inc
movaps
push
mov
jge
jae
mov
repnz
dec
mov
pop
fbld
test
adc
dec
mov
adc
mov
mov
lcall
cmpsl
inc
lods
nop
es
lahf
sub
test
fdivs
aaa
adc
add
sahf
or
movsl
dec
les
mov
out
pop
xchg
or
daa
mov
aas
not
mov
push
sar
push
jne
pop
mov
sub
jb
or
jb
test
add
jge
lds
andb
sbb
mov
scas
mul
je
cs
test
or
mov
xor
push
lock
jg
cmp
jmp
jp
mov
pushf
mov
loopne
fbld
into
pop
adc
push
push
leave
inc
enter
in
aam
stos
out
enter
test
leave
sub
or
movsb
dec
int
loop
inc
xor
testb
jmp
inc
pop
inc
addr16
cmp
shll
into
inc
cltd
repz
outsl
cmc
daa
pop
jne
movl
shlb
ret
lods
jbe
aad
das
sub
mov
dec
add
int
mov
arpl
pop
sbb
rolb
ret
cmp
adc
fucom
test
sub
pop
xchg
sbb
push
rcrb
xchg
cmpsb
cmp
pop
dec
clc
outsl
in
inc
mov
push
repnz
test
push
add
cmp
mov
push
or
and
gs
cmp
jge
sarb
and
mov
push
sub
pop
daa
mov
add
dec
xor
jne
call
xor
leave
rol
xorl
and
adc
in
ficoml
or
lcall
gs
imul
pushf
adc
jns
pop
stos
pop
mov
ds
push
incb
rcrl
mov
jp
aaa
ja
push
cmp
adc
out
or
pusha
sub
arpl
mov
out
enter
pop
test
andl
dec
cmc
sub
loopne
inc
ja
ljmp
jno
stc
xorb
test
jg
lods
xor
add
scas
pop
sbb
int
icebp
lock
mov
popa
adc
flds
jnp
in
jle
pop
insl
inc
stos
and
mov
push
out
rcll
push
lcall
cwtl
push
sub
pop
out
aaa
adc
cmp
mov
lods
pushf
pop
fldenv
mov
enter
sub
inc
xchg
fwait
int
cmp
xchg
and
dec
out
xchg
cmpsl
out
xchg
cmp
mov
xor
or
xchg
paddd
push
cmp
mov
pop
daa
sub
and
cmp
clc
push
cmp
sbb
lret
or
arpl
iret
or
in
iret
or
das
call
loope
mov
ja
push
leave
jne
sbb
daa
add
fstpt
pop
push
sbb
mov
xchg
jmp
orb
mov
lods
pop
jo
mov
push
movsl
arpl
push
sbb
xchg
pop
popa
sahf
fimull
jecxz
push
adc
rcl
insb
push
dec
jp
mov
xchg
repnz
fcoml
and
scas
mov
cmp
in
pop
adc
cwtl
lret
inc
push
test
jb
jmp
lret
fisubs
aad
xor
js
sub
pop
push
xchg
stos
add
outsb
mov
sbb
clc
shr
shl
xor
cli
dec
sub
imul
inc
inc
push
pop
pop
mov
xchg
setl
arpl
imulb
in
les
or
add
ja
hlt
lock
cmp
pop
mov
dec
leave
pop
pushaw
test
es
sub
xor
mov
test
adc
cmp
cmp
les
cltd
fisubrl
scas
xchg
jne
bound
or
jns
xchg
dec
js
jae
movsl
inc
mov
out
insl
je
fdivs
iret
inc
cmp
pop
bswap
and
ret
out
in
sub
mov
js
aas
add
in
out
movsb
adcl
push
lea
mov
pop
mov
pop
jle
mov
mov
pop
pmulhuw
and
jmp
add
rclb
jbe
pop
xchg
fildll
lea
cmp
lods
mov
lahf
dec
imull
cli
or
or
ja
pop
push
ja
add
or
inc
imul
dec
iret
xchg
and
loopne
jmp
mov
mov
in
sbb
inc
sbb
movsb
jmp
mov
xor
ss
data16
cmpsb
jg
xor
cmpsl
adc
pop
add
inc
sub
push
add
imul
inc
inc
fisttps
mov
loope
lock
maxps
les
cmc
sub
cmp
dec
icebp
ret
pop
inc
mov
ja
pop
or
xchg
xor
or
fs
pop
sub
dec
lcall
faddl
sub
inc
cwtl
sbb
dec
pop
popa
mov
rol
mov
arpl
fimull
push
mov
inc
push
repnz
int3
mov
in
add
adc
clc
sbbb
repnz
xor
mov
push
fnstsw
inc
jmp
ficomps
jge,pt
cmc
into
dec
jl
aas
stos
sahf
fdivs
adc
hlt
sub
cmc
mov
xchg
inc
mov
icebp
or
jge
xchg
adc
cltd
and
add
mov
in
dec
out
or
out
stc
mov
fs
xchg
inc
xchg
jecxz
mulb
or
sub
insl
jge
dec
xchg
ljmp
sub
inc
es
mov
and
mov
inc
dec
adc
out
pop
add
lods
addb
test
fdiv
and
notl
cmpsb
out
or
inc
and
icebp
mov
inc
jmp
inc
jmp
pop
cmp
jg
mov
enter
aam
insb
in
push
shrl
xchg
fwait
in
fidivrs
push
test
mov
inc
xchg
or
scas
std
stos
std
push
push
adc
and
out
and
pop
or
loop
pop
adc
jnp
jmp
push
adc
lret
jbe
mov
subb
sub
sbb
xchg
iret
adc
dec
cwtl
xchg
imul
jl
lcall
push
ljmp
sub
dec
daa
adc
inc
loop
cs
icebp
dec
scas
cltd
inc
or
sub
int
or
cmp
jnp
fwait
loopne
in
shll
scas
jmp
aaa
lret
cmp
jb
ret
int
adcl
call
rcr
dec
ret
pop
mov
pop
js
inc
pushf
cli
pop
xchg
sub
stc
pop
pop
sahf
cmp
or
xor
retw
fdiv
aam
push
push
jns
or
dec
aam
mov
cli
movsb
sbb
pop
adc
add
jge
mov
ret
jbe
sub
orl
push
sub
ss
pushf
fstl
add
pop
bswap
or
std
jb
dec
scas
stos
push
cmp
fcoml
test
or
mov
cmpsl
dec
mov
mov
pop
clc
mov
lods
sahf
mov
xchg
dec
mov
push
and
dec
dec
dec
add
push
and
mov
into
aad
sahf
mov
adc
pop
mov
sbb
nop
mov
mov
inc
pop
enter
sub
movsl
repz
iret
rcrb
dec
sbb
scas
inc
or
mov
push
inc
cmc
sbb
pop
and
adc
inc
jmp
and
mov
cmp
push
jg
test
std
ret
iret
xchg
stc
int3
dec
push
rclb
inc
push
loop
je
popl
movsb
scas
fstp
fs
pusha
push
pop
add
xchg
lahf
das
inc
scas
scas
sbb
mov
mov
xlat
pop
ret
mov
add
pop
adc
lods
jmp
or
adc
fcmovb
and
cmp
scas
out
adc
mov
mov
loop
popf
xor
test
and
fs
push
aaa
je
movb
mull
aaa
lea
sub
or
inc
popa
ficoml
xor
sub
pop
cli
or
into
push
mov
mov
lret
lret
xchg
out
sbb
jp
rclb
int3
xlat
test
sub
pusha
mov
cld
mov
addr16
ret
dec
mov
movsb
sti
in
lods
adc
mov
sbb
cmp
pop
push
pusha
ret
jg
mov
je
push
daa
cmpsb
mov
hlt
addr16
fs
fs
xchg
and
inc
push
repz
pop
stos
sbb
inc
xchg
inc
fiaddl
xor
fidivrl
xor
xchg
jge
int
int
pop
fbstp
mov
xor
mov
mov
stos
dec
jo
mov
xchg
mov
inc
inc
or
aam
popa
call
sub
push
stc
pushf
scas
add
ret
pop
add
scas
rcrb
adc
push
pop
add
ss
fidivl
pushf
fisttps
cmpsl
mov
int
fcmovb
sub
stos
add
orb
add
shll
and
cmp
dec
pushf
lret
push
out
mov
bound
jp
divb
popa
in
mov
out
mov
xor
pop
xchg
push
inc
mov
arpl
push
setg
into
sbb
es
add
sti
xlat
push
pop
and
out
pop
cmpl
jg
jle
out
push
adc
jmp
mov
cli
xorl
mov
imul
imul
sub
pop
inc
loope
into
xor
scas
jnp
scas
mov
loope
xlat
in
stos
pop
fisubl
push
sbb
jo
cmpsb
or
push
adc
fs
inc
add
inc
mov
test
cmpsl
test
repnz
xor
push
insb
lahf
and
movsb
sahf
clc
js
aas
repnz
add
mov
aad
sbb
stc
and
lods
push
pop
shr
ds
jae
jl
xor
mov
pop
mov
lret
sbb
xor
pop
xchg
out
popf
fcomi
cli
cmp
jmp
mov
xchg
dec
push
sub
jbe
mov
xchg
jmp
cs
rcr
xchg
rcrl
lea
iret
jb
sub
mov
mov
jne
push
pop
dec
imull
std
les
push
cmp
pushf
fdivl
rol
sub
fiaddl
das
bnd
xchg
loope
mov
push
and
jle
inc
or
lock
cmp
stos
enter
xchg
or
loop
loopne
xor
mov
sub
into
mov
rorb
push
imul
test
xchg
das
je
sub
notb
pop
dec
jb
ret
cmp
push
sub
cmp
int
jae
test
sub
adc
sti
pop
mov
aad
mov
in
ljmp
pop
in
dec
pop
xchg
adc
pop
roll
call
negl
jns
pop
std
sub
aaa
test
jbe
xor
data16
and
push
gs
aad
cld
aaa
mov
and
inc
lds
outsb
dec
ds
push
mov
icebp
arpl
les
inc
ret
cmp
jae
nop
fldcw
dec
cs
mov
int
sarb
or
jmp
sbb
sbb
js
push
sti
mov
xchg
push
pop
mov
adc
dec
sahf
mov
cli
fdivrs
push
pop
aad
repnz
jmp
aaa
out
hlt
jmp
dec
data16
mov
cmp
xchg
jle
cmp
lods
mov
lret
js
dec
in
pop
movsb
mov
aas
repnz
lahf
mov
ret
jg
mov
dec
loopne
sbb
sub
bound
cli
sbb
and
jecxz
fsubrs
mov
stos
xchg
andnps
daa
iret
shl
pop
scas
mov
adc
aas
xor
enter
mov
xor
lods
rol
dec
and
es
xor
xchg
or
add
and
mov
inc
sub
jns
xchg
pop
dec
xchg
test
sub
dec
movsl
lahf
pop
mov
xor
jg
jg
xlat
jg
inc
xchg
pushw
mov
push
sub
jo
mov
mov
pop
jecxz
ja
jns
cmp
and
shrb
inc
sub
dec
add
pop
and
push
in
or
stos
adc
cmp
xchg
lock
data16
movsb
lds
dec
cmpb
mov
lods
jmp
jns
daa
xchg
call
test
inc
pop
iret
jo
les
mov
les
daa
mov
icebp
and
mov
pop
cmp
and
in
cli
dec
cs
into
cmp
repnz
mov
addr16
dec
rclb
pop
daa
sbb
jae
xor
add
xor
fcomps
jno
cld
movsb
adc
pop
cmpsb
in
out
stc
lock
xor
into
push
aaa
xchg
subl
sbb
sbb
imul
testl
or
xor
sbb
xchg
cltd
out
sub
ljmp
scas
xchg
xchg
pop
ja
ja
cs
sbb
test
call
add
jns
mov
mov
outsl
fsubrp
ret
insb
dec
fisubs
icebp
dec
sbb
addr16
movsb
lds
cli
mov
and
cltd
mov
or
test
lods
fwait
movsl
rcrb
xchg
or
mov
cli
jbe
fstpt
cmpsl
cmp
inc
inc
and
sahf
xor
adc
nop
leave
stos
loopne
jmp
dec
mov
and
push
xchg
add
dec
push
ficoml
scas
pusha
fiadds
ss
mov
insl
test
out
sbb
sbbb
push
xor
loope
cltd
in
scas
test
or
je
js
lcall
cmp
xorl
add
cli
js
mov
jecxz
cs
push
lods
or
jmp
leave
or
mov
sahf
mov
adc
push
mov
jno
das
dec
inc
fs
and
add
loop
jns
dec
mov
mov
mov
mov
mov
mov
cmp
push
sbb
insl
adc
rclb
fsubs
ljmp
outsb
imul
stos
out
mov
ljmp
or
lcall
mov
adc
mov
ds
sbb
xor
jecxz
jle
mov
adc
cmc
loope
sub
icebp
cmp
sub
pop
cmp
cmp
and
pushf
aaa
nop
in
test
adc
fsubp
mov
or
scas
push
rclb
xchg
test
xor
cwtl
mov
jmp
adc
ja
clc
or
or
lods
add
and
ret
sbb
and
xlat
je
stos
aam
notl
jno
and
sub
inc
xchg
andl
pop
mov
sahf
mov
icebp
inc
rcll
aam
out
jno
adc
daa
push
cmp
test
test
test
arpl
ja
loop
and
sub
sub
xor
and
mov
loop
pop
mov
jne
xchg
cmp
clc
mov
mov
in
loop
in
mov
adc
pop
mulb
int3
adc
insb
repnz
cld
mov
iret
call
cmp
ja
mov
into
xchg
out
rclb
jmp
lret
mov
mov
fdivs
pop
pop
ljmp
cltd
movsb
pop
lods
in
outsb
mov
xor
inc
divb
adc
test
test
sbb
daa
jp
or
rcpps
pop
fs
in
xchg
cmc
lea
cmp
push
sbb
mov
shl
aaa
sbb
pop
jmp
in
mov
mov
inc
xor
cmp
jnp
sbb
dec
lahf
scas
loope
adc
test
jge
ja
and
adc
pop
ret
sti
push
xchg
inc
in
loopne
xchg
jecxz
xchg
cld
xchg
push
mov
mov
clc
adc
push
imul
mov
xchg
fnsave
nop
pop
sahf
js
icebp
ret
cmpsl
imul
adc
dec
int3
adc
mov
mov
dec
mov
aam
xlat
adc
out
or
or
mov
fldl2e
int3
xlat
or
in
push
xchg
fdivs
push
push
cli
test
ret
jl
jno
push
add
rcll
add
xchg
xchg
and
fs
repz
and
cmp
push
gs
roll
in
into
into
stc
xchg
pop
pusha
std
outsl
pop
xor
mov
lock
pop
or
lods
jp
negb
stos
push
aad
and
lcall
push
faddl
mov
rolb
adc
sbb
xlat
adc
mov
fcoms
cwtl
xchg
sub
jecxz
jmp
call
pushf
dec
out
inc
out
rcll
mov
mov
adc
sub
inc
pop
ss
sub
sti
out
mov
sub
test
inc
jmp
add
jo
lock
hlt
rcr
insl
into
and
stos
cmc
cmp
pop
icebp
mov
pop
add
cld
in
or
push
pop
insb
movsl
test
or
add
fistps
fidivs
mov
clc
aaa
dec
aas
xor
xor
out
iret
pop
orb
push
jnp
adc
add
popa
icebp
cltd
sbb
cmpsl
sti
jl
iret
imul
ljmp
aaa
mov
xchg
clc
test
je
pop
adc
xchg
inc
addr16
mov
test
mov
cmp
xchg
out
negb
lahf
push
sbb
idivl
fisubs
adc
into
mov
popf
inc
call
mov
sbb
jnp
or
es
hlt
xor
sbb
jg
add
out
push
js
mov
leave
int3
pushf
push
aam
cmp
xchg
push
fdivrl
stos
mov
inc
jb
jb
mov
movsb
pop
pop
je
push
andl
pop
rep
jl
adc
rolb
sbb
fisubs
pop
scas
sub
pop
mov
mov
outsb
int
add
outsb
fwait
cmovb
pop
cmpsb
lea
call
and
mov
cwtl
mov
mov
jg
pusha
sub
out
test
pusha
lock
sti
mov
jmp
sub
and
out
or
decl
cmp
ds
sbb
fisttps
idiv
sbb
pop
clc
push
push
out
dec
pop
sub
inc
in
fcoml
fldenv
in
adc
into
decb
bound
sahf
and
sub
or
jp
xlat
xchg
mov
imul
cmp
sbb
rorl
push
ds
lret
lret
cmc
lods
xchg
jmp
adc
pop
add
stc
sub
inc
mov
ds
iret
xchg
adc
faddl
sahf
into
pop
mov
and
sarb
nop
dec
jp
rcll
mov
out
mov
stos
inc
adc
add
push
repnz
mov
fucom
xor
mov
fcomps
lock
mov
imul
cmp
ljmp
ljmp
gs
decl
jge
cltd
ljmp
xor
sarl
cmp
adc
scas
and
mov
out
inc
lahf
fisttpll
movsb
sbb
adc
stos
sub
scas
cmpsl
xchg
lods
repz
pop
scas
push
adc
cmpsl
ja
add
stc
sbb
or
and
adc
lds
sbb
lahf
mov
dec
inc
cmp
or
std
mov
in
jae
cltd
into
fstps
xchg
lods
pop
fneni(8087
inc
push
addr16
das
sub
mov
loope
loop
jmp
jae
stos
add
push
xor
pop
push
mov
add
lea
xchg
lds
rcrb
aaa
pop
out
scas
sbb
xor
repnz
jle
xchg
dec
adc
mov
aaa
mov
std
insb
rcrl
das
inc
mov
adcl
pop
adc
inc
lds
inc
out
orb
mov
inc
inc
mov
lods
lret
lahf
movsb
mov
xchg
jo
cmp
in
pop
addr16
mov
ss
xorl
xchg
mull
pop
mov
stos
jbe
shlb
xchg
pop
arpl
aad
gs
dec
pop
and
aas
sub
fcoms
inc
push
push
xor
xchg
stc
shll
xor
adc
xchg
and
in
push
add
mov
bound
out
bound
push
adc
rcll
fprem1
and
js
dec
sub
pop
add
shl
mov
and
push
movsl
mov
jmp
mov
hlt
cmp
jnp
sub
and
loop
outsl
dec
stos
xchg
jo
pop
inc
lcall
push
cmpsb
jmp
fidivl
lea
sbb
dec
push
or
and
mov
aaa
iret
enter
xchg
xchg
cmp
push
mov
xor
cmp
jno
jne
sub
xchg
xor
jge
iret
adc
pusha
sahf
std
jg
popf
dec
shrl
inc
enter
mov
loop
mov
xlat
adc
pop
mov
sbb
repnz
mov
cmpl
inc
add
mulb
xor
add
loop
xor
sarl
mov
sub
fsubr
ret
pop
sbb
inc
sbb
mov
xchg
pop
xorl
jo
loop
xchg
adc
push
xchg
inc
leave
sti
inc
add
lods
orb
push
testb
aam
mov
xor
jno
pop
inc
push
xchg
cmp
lret
fdivrs
arpl
xor
sti
push
cld
and
cli
sub
adc
orl
inc
add
movsb
pop
icebp
ja
repz
mov
arpl
mov
adc
aam
mov
cmpsb
rclb
ja
mov
flds
xchg
sbb
lds
or
or
or
jnp
in
sbb
xor
mov
pushf
popf
jo
mov
xor
gs
repnz
add
rcrl
cmpsb
pop
das
lcall
in
sub
xchg
jmp
sahf
dec
jp
mov
daa
pop
and
or
cmp
dec
fidivrl
xor
inc
negb
sub
rolb
sbb
outsb
or
jl
test
js
jno
cli
pusha
lea
xchg
sarb
mov
sub
lahf
mov
ds
sbb
mov
adc
ret
test
lahf
dec
jle
sub
dec
xor
popa
push
fsubrs
or
mov
mov
and
mov
movsb
push
aad
push
iret
mov
sbb
push
je
mov
sbb
and
std
icebp
jmp
fisubl
pop
cmpsb
and
and
enter
lcall
stos
sbb
push
mov
sarl
or
and
mov
es
in
daa
cmp
es
add
lcall
xor
and
or
das
aad
not
push
inc
sbb
scas
andl
test
daa
sarl
dec
jae
add
in
push
dec
mov
addr16
lahf
fdivrs
addr16
stos
dec
push
cmpsl
cmpsl
cli
jnp
xchg
mov
test
xor
stos
shlb
or
es
add
popf
mov
pop
bound
outsl
push
or
and
xlat
inc
mov
xchg
sbb
fs
imul
je
call
xchg
push
lahf
hlt
push
loope
lret
dec
adc
xchg
outsl
cmp
test
pop
jne
dec
sub
data16
mov
sbb
adc
pushf
xor
mov
fdivl
hlt
shrl
cmp
mov
xor
mov
add
xchg
add
or
xchg
in
sarl
or
sti
sub
fadds
add
add
repnz
and
cmpsb
jae
mov
push
xchg
in
or
inc
inc
scas
lret
ja
shll
xor
pop
lea
pop
fidivs
in
insb
ljmp
lock
lcall
fisubrs
sub
jnp
js
jo
cltd
lods
out
call
jo
push
or
mov
das
cmp
xor
inc
cld
rorl
or
lds
sbb
and
adcb
movsb
popa
loope
inc
clc
sub
les
mov
cmp
jo
adc
les
in
enter
fadds
fdivrl
jge
pop
mov
sub
in
add
mov
dec
push
cmpsl
push
iret
aad
jecxz
pop
fiaddl
movsb
punpckldq
push
dec
push
pop
sbb
icebp
mov
push
notb
in
mov
cli
stc
cmpsl
addb
repz
xchg
in
push
xchg
dec
sbb
cwtl
inc
xor
rolb
pop
xor
out
xor
mov
push
push
mov
es
inc
dec
add
rcll
pusha
push
in
mov
jno
dec
popa
into
daa
popa
push
xor
mov
std
jb
sbb
enter
gs
test
jbe
or
add
fneni(8087
ja
movl
push
xor
stos
fidivs
loopne
dec
cmpsl
sub
into
mov
fdivs
push
sbb
inc
add
out
or
mov
xchg
lock
call
stos
inc
xchg
mov
mull
push
dec
mov
sbb
testb
mov
mov
lds
mov
addr16
popf
add
outsl
and
or
adc
jg
cmp
push
push
ret
sub
lods
dec
fidivrl
xor
mov
mov
add
push
fwait
or
or
clc
push
scas
push
mov
lahf
cmp
inc
xlat
fcom
sbb
out
out
fldcw
lret
pusha
mov
push
sub
addr16
pop
insb
sbb
shrl
push
scas
cmp
test
mov
out
or
ret
shr
push
dec
add
xchg
dec
je
in
call
leave
lahf
sahf
sub
mov
push
out
and
imul
pop
mov
loopne
xor
jb
add
pop
aaa
sub
rorl
pop
loope
mov
mov
push
sbb
push
or
xchg
adcb
fldcw
aad
adc
or
scas
or
repz
lret
mov
es
jns
fmull
and
popa
das
pop
rolb
push
push
jns
imul
fiaddl
jmp
scas
add
outsb
in
jg
mov
mov
jmp
pop
inc
mov
int
scas
adc
sbb
mov
xor
scas
dec
pusha
xchg
jg
jae
adc
dec
in
jo
icebp
pop
scas
popa
dec
or
je
and
adc
xchg
and
aam
pop
xchg
mov
fidivl
push
out
mov
pop
mul
rorl
in
insl
pop
cmpl
adc
mov
pop
mov
test
pop
aam
sbb
cmpsb
dec
push
adc
call
stc
popa
mov
sti
push
fs
imul
cltd
mov
mov
mov
adc
out
push
movsl
rcrl
mov
add
jle
stc
dec
push
xchg
push
pop
pop
leave
out
pop
adc
push
cmp
and
mov
ret
mov
jno
sub
outsl
xchg
jne
add
add
lods
sub
mov
push
int
mov
and
xor
rcrl
pop
mov
mov
stos
dec
mov
xchg
mov
sbb
scas
sar
out
adc
mov
mov
repz
fisubrs
cmp
cmp
mov
stos
adcb
xchg
out
or
jbe
nop
add
mov
jge
jbe
es
inc
inc
popa
jo
stc
rorb
sub
dec
sub
fwait
stos
fistps
jmp
in
outsl
hlt
jmp
xchg
lret
ficoml
test
dec
shlb
mulb
push
xchg
inc
dec
aaa
cmp
adc
les
dec
addr16
hlt
hlt
xor
stos
mov
and
add
jg
mov
fiaddl
lcall
outsl
in
fwait
imull
mov
leave
movsl
jnp
or
dec
cld
push
inc
cltd
mov
cmp
push
popf
jbe
in
daa
jae
cmp
jmp
fstpt
xorb
les
xorb
aaa
jae
mov
mov
xor
ja
leave
push
mov
sub
pop
pushf
inc
add
loop,pn
push
test
push
pop
imul
jne
rolb
or
fcomp
inc
jnp
clc
or
sub
sbb
loopne
imulb
scas
insb
shll
xor
cmp
pop
imul
pusha
sbb
gs
mov
fisubrl
dec
and
dec
and
and
xchg
mov
pusha
xor
sub
fimuls
out
sub
mov
nop
adc
sti
out
push
push
imul
inc
ret
jle
in
sub
adc
xor
adc
dec
pop
shr
mov
xchg
inc
cwtl
dec
push
cld
daa
leave
rclb
lock
and
dec
test
mov
pushl
jge
sbb
divl
fs
in
xchg
out
filds
leave
int
lret
pop
popa
cli
inc
mov
leave
ficoml
pop
lea
arpl
ds
xchg
xor
pop
and
out
cmp
dec
pop
cmc
add
mov
mov
pop
lods
mov
adcb
sub
sbb
sbb
repnz
add
and
stos
repnz
jecxz
jne
xchg
xchg
rcll
aam
andl
imul
inc
ljmp
dec
or
inc
inc
pusha
add
inc
or
in
mov
jne
pop
sysenter
sbb
cli
dec
fldl
inc
leave
sahf
jge
ficomps
daa
lahf
inc
add
inc
sbb
and
cli
jns
mov
mov
adc
fldcw
and
les
and
jns
imul
xor
mov
aam
cmp
push
stc
sbb
or
in
subl
sbb
xor
sub
je
add
sti
leave
mov
sbb
repnz
xlat
filds
test
sub
inc
arpl
mov
pusha
or
sbb
inc
inc
mov
add
xchg
lds
mov
in
shlb
xor
or
jl
add
out
popa
imul
rorb
int3
dec
push
nop
in
mov
sub
outsl
loopne
arpl
lea
xor
les
dec
inc
xchg
loope
testl
pop
jne
add
xor
mov
orl
ficoml
xor
and
divl
insb
leave
mov
out
out
xlat
add
push
ffreep
cmp
and
loopne
shll
fwait
xchg
and
loopne
push
mov
xchg
jns
test
sbb
sub
inc
pop
addr16
dec
or
out
loop
cmp
fldenv
add
fdivl
mov
mov
push
or
mov
clc
and
or
sub
js
sar
inc
sbb
cmp
xchg
sbb
cmc
addr16
fdiv
push
cs
test
lods
loope
push
dec
mov
jne
push
out
mov
lock
cmp
mov
lods
mov
xchg
popa
cmpsl
push
cld
pop
imul
adc
jno
push
mov
sbb
test
lock
sbb
adc
mov
mov
in
lods
and
push
inc
ljmp
pop
dec
cmp
fistpll
mov
pop
xchg
jne,pn
dec
cs
cmpsl
les
dec
ret
inc
xchg
dec
jle
xor
push
lods
les
lret
call
cmpsb
in
imul
out
push
cmp
mov
mov
scas
dec
xchg
loopne
rcll
out
or
xchg
add
sub
mov
cwtl
cmpsl
std
gs
pop
fldl2t
insb
shr
arpl
clc
xchg
dec
in
inc
negl
outsl
xchg
lds
mov
lock
and
sub
add
dec
mov
shl
xor
pop
mov
cmp
test
mov
inc
sbb
adc
cltd
stos
jo
mov
sub
mov
xchg
mov
je
mov
add
pop
inc
xor
out
xor
or
inc
add
loope
mov
jecxz
lods
loope
das
mull
push
mov
scas
mov
int
mov
pop
fldl2e
push
cmp
shll
fistpl
popa
lcall
out
scas
push
fs
orl
les
outsl
test
xor
xor
bound
xchg
jmp
imul
cmp
adc
push
jbe
adc
jecxz
inc
sbb
mov
xchg
mov
mov
inc
jge
std
jo
inc
pop
xor
fmul
shlb
sbb
push
pop
das
jnp
mov
fst
push
std
movsl
shlb
inc
dec
inc
call
in
mov
cltd
imul
pusha
stc
or
aam
fistpll
leave
xchg
pusha
xchg
jge
sbb
push
xchg
cmp
das
dec
mov
add
outsl
sbb
int
push
inc
sahf
leave
mov
dec
push
and
clc
and
test
xor
jmp
and
add
mov
testl
popa
push
mov
std
push
add
ldmxcsr
into
cmp
aaa
mov
clc
mov
in
cmp
adc
iret
insb
xchg
or
xor
insl
xchg
dec
popa
fnstsw
or
sbb
insl
pop
or
sbb
mov
inc
fildl
call
dec
lods
xor
jb
sub
jmp
adc
test
lea
arpl
cmc
add
cmp
inc
stc
mov
push
addl
dec
pop
dec
mov
sti
pop
icebp
pop
in
in
aad
add
pop
les
push
mov
adc
jb
loop
cmp
push
sbb
repz
in
xchg
adc
pop
aam
pop
roll
call
and
or
lods
jns
iret
jp
fcomps
iret
cmp
scas
add
aaa
xor
fsts
cmpsl
jge
sub
adc
mov
test
loopne
hlt
push
add
or
enter
sub
out
js
or
loop
in
push
lahf
cmc
adc
loope
sqrtps
scas
xor
pop
dec
mov
mov
adc
hlt
stos
jnp
cli
jnp
mov
ds
add
jecxz
stos
xor
lret
jbe
inc
sub
sub
mov
pop
sahf
sarb
or
call
jmp
mov
mov
hlt
loop
jnp
subb
push
pop
adc
add
loopne
mov
hlt
and
mov
dec
outsb
jno
enter
and
or
xchg
lods
out
mov
xchg
inc
mov
sbb
outsb
in
imul
push
lods
cmp
ja
fsubs
dec
int
loopne
test
movsb
pushf
ds
scas
mov
in
rcrb
mov
and
les
or
ljmp
cmp
fdivl
cld
add
mov
jl
ja
jo
int
jae
xlat
jle
ljmp
push
iret
cltd
xchg
cmp
inc
push
pop
pop
pop
sbb
sub
cwtl
in
xor
loop
repnz
ret
mov
sbb
lock
mov
ljmp
adc
lcall
dec
insb
mov
ret
inc
jge
nop
xor
pause
repz
loopne
pusha
imul
sub
inc
out
cwtl
sbb
push
repz
mov
lea
sub
xchg
and
mov
icebp
pop
std
data16
enter
dec
mov
roll
int
or
jl
inc
push
ljmp
dec
push
fdivs
addr16
out
out
loopne
xchg
jecxz
push
andb
or
adc
mov
ret
mov
subl
int
cmp
daa
jmp
jmp
std
and
pushf
xchg
mov
mov
jb
push
stos
cmpb
cmpsl
xlat
sub
xchg
push
cmp
pusha
mov
xchg
mov
sub
jmp
inc
popf
pop
push
mov
data16
and
cmp
mov
push
inc
movsl
mov
stos
nop
lock
mov
xchg
xchg
lahf
loop
lock
mov
sub
pop
xor
jmp
in
adc
leave
adc
sub
das
dec
imul
xlat
push
cmpsb
and
into
ret
mov
or
pop
push
cmpsb
fsub
ja
int3
and
lods
lock
fldl
in
js
and
or
mov
dec
sbb
sub
mov
sbb
aaa
fistpl
xor
mov
cli
mov
sub
in
jb
iret
pop
jmp
nop
cld
jb
pop
xchg
hlt
dec
shrl
mov
iret
cltd
rclb
sbb
sub
test
cld
or
mov
sbb
mov
pop
xchg
add
das
mov
ja
xor
pusha
sbbb
nop
mov
mov
je
fdiv
mov
add
push
pusha
inc
mov
sub
xchg
jmp
ja
push
icebp
loope
mov
or
mov
sub
inc
testb
fcoms
xchg
jp
pop
adc
jmp
push
pop
mov
dec
jp
dec
std
jl
aam
sub
jl
push
jge
in
int3
sbbl
lcall
popl
test
sub
aas
dec
push
jae
notb
fdivr
cmp
adc
jge
mov
inc
pushf
xchg
pop
push
std
pop
sub
outsl
shr
sbbb
mov
loop
mov
or
xor
mov
lret
mov
movsb
sub
sbb
lret
push
scas
lods
jne
loop
lret
fcmovnbe
xchg
adc
add
dec
mov
pop
fsub
jecxz
xor
mov
dec
stc
push
rcrl
out
test
vaddps
enter
int3
jge
push
jno
sub
mov
cwtl
cwtl
pop
and
xlat
push
aam
loope
pop
popf
lea
scas
cltd
adc
xlat
lcall
mov
adc
xchg
add
mov
push
xlat
mov
movsl
inc
idivb
push
lea
jmp
inc
popa
pop
movsb
ret
sarb
bound
push
cmp
add
mov
pop
leave
fcmovnb
pop
pushl
mov
sub
addr16
or
jge
add
mov
push
mov
mov
push
mov
fsubrs
enter
dec
sub
jp
es
iret
mov
push
cmpsl
ret
pop
pop
push
jl
addl
test
xchg
dec
pusha
mov
push
add
and
out
stos
add
sahf
ja
pushf
int
fiadds
mov
insb
mov
out
pop
adc
enter
sub
test
cli
ja
xchg
iret
fsubl
mov
adc
aam
repnz
push
std
fwait
inc
adc
cmpsl
mulps
imul
js
in
sbb
sub
dec
cmp
mov
lods
aad
mov
cmp
aas
xchg
fisubs
out
xchg
stos
jne
add
sub
mov
cmp
sbb
adc
mov
cmpb
cmp
daa
xor
xorb
in
jle
push
cmpsl
in
cmp
icebp
cmp
cltd
add
call
push
jmp
push
shlb
or
push
imull
push
jmp
dec
pushf
ret
scas
fistpll
pop
pop
mov
mov
inc
out
filds
add
mov
daa
or
ja
push
xchg
rcl
fwait
pop
xor
popf
pop
inc
popf
fists
stos
xor
inc
dec
ja
push
push
std
ja
jg
ror
jns
inc
shr
cmpsl
push
clc
scas
cltd
mov
adcb
aas
mov
out
pop
or
fwait
and
or
and
add
das
xlat
xchg
jae
mov
dec
sbb
movsl
loop
jbe
out
es
repz
sbb
imul
cmp
xchg
ljmp
push
inc
push
push
xor
adc
jo
jge
lahf
out
pop
pushf
cmp
fistpll
mov
adc
add
push
jo
into
mov
lcall
mov
inc
and
push
jmp
clc
sbb
jne
add
ljmp
rorl
mov
pop
mov
adc
mov
cwtl
daa
ja
dec
xor
adc
insb
xor
push
cmp
and
push
push
stos
push
scas
xchg
jne
dec
clc
icebp
adc
or
data16
movsl
adc
push
or
cmc
lds
scas
test
scas
in
shrb
cmpsl
fldcw
pop
push
pushf
dec
cmpsl
jne
sub
sbb
pop
xor
flds
cwtl
cltd
inc
into
jg
sbb
dec
inc
push
pop
cs
jge
mov
dec
les
xor
pop
pop
xor
jno
popf
push
mov
ss
shrl
and
cmp
es
and
leave
sub
push
ja
mov
icebp
int3
push
aas
insl
jmp
outsl
lds
xchg
ret
scas
lahf
mov
mov
mov
pusha
or
push
jmp
into
jg
xchg
test
lods
mov
or
xor
int3
test
scas
mov
and
mov
pop
gs
outsb
inc
inc
ljmp
out
adc
jne
test
sbb
jg
pop
jne
sub
call
movsl
pop
mov
divl
sub
fmull
rorl
xchg
push
loope
or
add
jb
adc
xchg
mov
sub
dec
push
mov
bound
fsubl
dec
mov
mov
jge
jp
popa
jl
nop
je
int
xor
xchg
scas
pop
test
repnz
aam
or
lea
out
xlat
adc
or
and
and
lret
inc
pop
xor
mov
pop
divb
sbb
in
xchg
outsl
or
sbb
sbb
aaa
aad
ds
cld
in
popf
add
shrl
into
jo
fwait
loopne
fnstcw
lods
pop
push
cmp
neg
sbbl
decl
dec
imull
jae
mov
mov
in
cmc
test
adc
and
sbb
in
sub
std
sub
xchg
ss
lds
xor
dec
push
push
push
inc
pop
pusha
push
push
test
in
scas
pop
test
jle
add
in
or
test
jp
lea
sub
dec
mov
push
dec
cmp
inc
pop
mov
mov
in
imulb
idiv
add
sar
ds
fstpl
stc
jle
add
push
cmp
or
cltd
out
pushf
mov
add
mov
sti
push
mov
rep
and
or
add
pusha
xor
dec
sub
push
mov
je
sbb
test
pop
insb
adc
repz
push
cld
pop
or
cmpsb
lahf
push
jp
das
cmpb
mov
and
sahf
pop
mov
add
cmp
mov
xlat
cmpl
pop
xchg
xor
test
fidivrs
pop
mull
mov
adc
out
push
arpl
int
lds
mov
in
outsl
movsl
mov
dec
sbb
and
fistl
bound
sub
movsl
and
iret
sbb
add
cld
fbstp
mov
push
stos
stos
xor
mov
xchg
jge
inc
push
add
jne
sbb
test
xchg
imul
ffreep
pop
fnstenv
cs
scas
shrb
outsb
sbb
leave
fsubrl
rorl
fwait
push
in
lcall
or
cmc
loopne
sub
imul
jns
nop
lds
pop
push
ja
sub
adc
mov
mov
mov
stos
les
mov
mov
outsl
add
sub
xchg
inc
pop
fldcw
mov
xchg
mov
data16
jmp
mov
test
or
test
sub
lret
mov
ja
scas
mov
cltd
cmp
adc
mov
rcll
dec
aad
or
and
ret
js
inc
push
fwait
push
jno
xchg
jecxz
pop
sar
cmp
fnsave
sbb
mov
mov
psllw
mov
sub
mov
fs
mov
ret
jo
sti
push
mov
jmp
mov
icebp
inc
dec
mov
inc
je
cmc
testl
dec
stos
jp
cmp
sub
mov
cmc
ret
add
scas
outsb
shlb
test
mov
out
ficoms
lea
sub
sbbb
sub
xchg
fidivrl
loop
lds
cmp
fs
lds
pusha
jae
xchg
fucomp
mov
stc
shll
cmp
inc
insl
cmp
xlat
xchg
dec
loopne
rol
aam
adc
andl
aam
jo
cs
inc
cmp
icebp
idivl
popf
adc
jl
out
fistpl
add
int
push
cmp
adc
push
and
push
mov
and
insl
ret
pop
aaa
fbstp
xor
xor
or
jae
push
int
xchg
and
mov
in
movsl
pop
shlb
popf
aas
xor
sar
push
and
sbb
mov
je
shll
pop
pop
mov
push
test
jne
inc
insb
fisubrs
pop
mov
adc
leave
lea
mul
mov
sti
sub
ss
mov
into
adc
cli
nop
int3
mov
mov
dec
lods
mov
fldl
roll
gs
clc
pop
sub
dec
or
jbe
xor
sub
aaa
pop
enter
hlt
push
add
xor
inc
int3
fcomps
repz
pop
adc
loope
roll
mov
test
jae
lcall
xor
pusha
lret
push
and
adc
add
cmpsb
js
sbb
repnz
popa
xchg
dec
and
adc
mov
idivb
inc
pusha
cs
mov
jo
push
sub
push
mov
sbb
mov
sbb
dec
add
or
add
lcall
and
test
fucomi
in
pop
nop
pop
shl
xchg
mov
lds
sub
roll
jo
or
jbe
je
dec
orb
cmp
test
adc
icebp
lea
jo
pop
mov
call
sub
sbb
jb
mov
fisubrl
sbb
in
inc
popf
mov
ficoml
cmp
pop
add
sahf
mov
mov
ds
xchg
arpl
jge
mov
jb
cmp
cli
ficoml
mov
mov
mov
xchg
test
add
jno
aad
xchg
push
cmp
loopne
fnstenv
add
adc
sbb
addr16
or
mov
or
popf
mov
mov
pop
dec
cmp
xchg
jecxz
loop
xchg
adc
lahf
jp
loope
fmul
pop
repz
adc
int3
nop
or
pop
loopne
shll
and
arpl
jg
inc
inc
mov
test
inc
or
test
arpl
dec
mov
push
popa
sti
stc
es
xchg
int
call
idivl
imulb
scas
adc
sub
out
sub
out
leave
lds
jp
cwtl
insb
xchg
fcmovu
popf
mov
test
inc
cwtl
scas
add
sub
je
pop
push
mov
mov
fidivs
dec
mov
sbb
jne
repnz
popf
mov
scas
inc
out
lea
sub
cmp
jns
dec
push
sahf
mov
or
lret
mov
cld
aaa
xor
mov
xchg
adc
add
bound
add
enter
or
mov
xchg
xchg
push
dec
mov
fcmovbe
sti
pop
in
stos
rcrb
dec
and
pop
cmp
add
ret
nop
sub
or
sub
cli
data16
pop
pop
nop
and
xor
enter
call
mov
push
push
pop
mov
loop
xchg
cwtl
or
clc
or
out
inc
orb
mov
lock
jl
mov
clc
pop
std
repnz
mov
leave
aaa
inc
pop
or
or
pop
mov
mov
cmp
insb
sbb
cmpsb
jge
daa
jnp
or
es
lret
pop
sub
inc
fists
dec
adc
mov
loopne
loope
pop
lea
ds
mov
cmc
sbb
decb
sbb
mov
dec
shlb
movsl
xchg
xor
scas
andl
les
movsb
push
sbb
add
adc
push
jae
mov
and
sub
iret
xor
inc
daa
int3
xchg
mov
inc
sbb
cli
inc
add
repnz
iret
jge
add
cmp
mov
add
cli
jecxz
pop
jp
push
pushf
scas
adc
mov
jmp
pop
inc
adc
pop
adc
popf
jae
das
loope
rep
mov
mov
scas
xchg
decb
push
jl
inc
xor
xchg
xor
sti
cld
or
cmp
sbb
lods
pop
mov
mov
clc
push
jne
fisubl
fbld
xor
sub
sub
shl
in
test
outsb
sbb
lock
jbe
pop
in
mov
push
iret
in
clc
jo
popa
cmp
add
gs
or
ja
sbb
mov
popf
mov
mov
or
adc
inc
pop
les
stos
mov
bound
fwait
ds
xor
mov
sbb
movsl
xchg
mov
mov
pop
fistps
aas
push
adc
adc
mov
inc
mov
xchg
jno
sbb
pusha
jbe
loopne
inc
cmp
and
shrb
dec
add
enter
rolb
inc
xchg
cltd
sub
movsl
adc
add
or
outsl
pop
jne
push
mov
mov
or
sbb
push
fidivrs
les
lret
xor
fadds
push
ss
adc
inc
push
in
cmc
popf
xchg
jl
xchg
sub
shrb
cld
sub
mov
xlat
inc
jno
cwtl
das
test
push
sub
fs
jae
add
fidivrl
mov
mov
cmp
dec
rol
pusha
mov
lods
mov
jmp
dec
push
mov
sbb
push
cmp
es
xor
daa
mov
or
test
lds
test
ror
xchg
xor
or
stos
push
rcr
fcompl
lock
jg
in
xchg
cmp
jl
cmp
shrb
sub
frstor
cmpsl
adc
iret
cmp
out
test
fucomip
or
jp
add
lock
int3
js
addr16
ljmp
sbb
and
mov
adc
or
sbb
jecxz
rcrl
push
jecxz
fisubrl
repnz
sub
rclb
ficompl
sub
and
mov
repnz
adc
cmpsb
pop
pop
jle
xchg
sbb
pop
cmp
notb
fwait
and
mov
cmp
xor
jp
xor
repnz
inc
mov
and
lahf
sti
dec
jmp
push
je
iret
adc
lock
movsb
data16
jle,pt
mov
sti
sti
dec
faddl
inc
jo
mov
jle
out
jp
push
xchg
cmp
repz
push
xchg
dec
pop
jl
sbb
cmp
add
push
mov
pop
dec
imul
divl
mov
inc
xlat
mov
add
mov
nop
out
add
jle
test
inc
inc
push
int
bound
jle
xchg
movsb
sub
jg
lods
fmull
sbbb
cmp
jecxz
push
inc
fs
ret
rcll
icebp
sbbl
inc
adc
hlt
add
add
xor
je
xor
int
mov
add
push
stos
into
mov
dec
inc
aas
mov
mov
lds
imul
push
fistps
pop
dec
push
fmulp
repz
jno
inc
out
call
jne
cmp
jae
or
popa
leave
fwait
or
arpl
cmp
add
imull
or
repz
push
sahf
mov
or
sub
mov
repnz
push
mov
clc
out
dec
pop
push
cmpsl
lahf
pop
shll
jne
rcr
mov
sub
xchg
mov
lea
sbb
iret
inc
sbb
movl
push
sub
dec
test
inc
adcb
sahf
mov
sub
and
clc
and
rcll
mov
roll
dec
add
xchg
loopne
cli
jmp
shlb
insb
inc
call
adcb
andl
in
jge
cmp
mov
mov
xor
xchg
out
or
into
aam
xchg
mov
dec
stos
sti
lods
mov
pop
in
decb
enter
popl
ja
in
daa
movsb
daa
or
subl
enter
fwait
les
mov
dec
in
cwtl
and
rorb
and
mov
fidivs
repnz
lcall
cmc
out
cmpsl
iret
jae
repz
mov
adc
mov
lods
mov
dec
pusha
cmp
cmp
loopne,pn
out
frstor
sub
and
push
push
inc
mov
xor
xor
pushf
xchg
stos
dec
adc
push
mov
xchg
cmpsl
push
ret
scas
jb
ret
ret
aad
test
or
jp
lahf
dec
and
dec
cmp
gs
dec
add
cmc
xchg
fsubr
push
push
das
data16
mov
cmp
mov
adc
cmpsl
pop
and
push
fisubrs
imul
jae
arpl
dec
lds
imulb
dec
jg
aaa
mov
into
jb
mov
sbb
mov
in
mov
push
iret
iret
mov
inc
inc
inc
pop
xchg
mov
xor
insl
out
and
out
lock
lcall
in
mov
ja
stc
adc
stos
movsb
or
aad
insb
sar
jb
adc
sbb
xchg
lret
dec
jg
loop
std
mov
xchg
add
in
lds
adc
dec
and
xchg
xorb
inc
lock
cmp
mov
aaa
mov
xor
lods
lcall
and
repnz
sub
xchg
mov
or
xchg
mov
ror
es
shl
stc
mov
jo
mov
and
mov
in
pop
cs
pop
movsb
shrl
imul
out
test
push
lret
cli
xchg
cmp
xor
adc
mov
jbe
add
inc
addr16
sbb
clc
loope
pop
cli
loope
test
and
aad
xchg
popf
push
inc
dec
hlt
cmpsb
mov
rorl
or
xchg
push
insb
cmp
out
pop
fwait
loope
getsec
sub
int3
mov
mov
cs
jl
mov
mov
cmpsl
cmpsb
mov
shlb
clc
in
jns
sbb
push
push
push
imul
aam
or
mov
push
adc
fwait
inc
pop
cld
sub
cmp
insb
orl
mov
pop
sub
xor
mov
ret
mov
aaa
clc
push
int
stos
std
lea
test
cmpb
xchg
rcr
lret
shl
in
mov
sub
ljmp
lcall
or
dec
adc
pop
das
inc
icebp
cs
les
jge
mov
cltd
xor
sbb
fwait
lahf
dec
loope
gs
pop
mov
add
subl
jp
sahf
xchg
sahf
fildl
cmp
xchg
dec
outsl
mov
sbb
push
xchg
push
in
arpl
xor
mov
aas
nop
sub
imul
mov
leave
adc
push
stos
cmp
lods
leave
into
pop
adc
dec
push
iret
push
and
push
pusha
scas
adc
mov
dec
jmp
loope
or
pop
divb
jbe
pop
push
das
xlat
add
enter
pop
mov
addr16
rorb
imulb
in
outsb
lock
cmp
jnp
test
jns
sbb
xorl
mov
sub
lods
iret
mov
add
push
adc
adcb
into
push
mov
xor
push
and
fdiv
jge
inc
push
std
movsl
cli
adc
imul
in
mov
push
aad
repz
add
sbb
adc
dec
test
aaa
out
dec
and
fwait
jns
pop
cld
push
jmp
sti
das
mov
cmp
pushf
mov
iret
inc
in
or
mov
std
fcomps
mov
testb
xchg
daa
add
cwtl
data16
sbb
fcoml
mov
lcall
xchg
xor
mov
cmp
cmp
cmp
je
xor
mov
fldl
shl
xchg
shr
cmp
cmpsb
enter
cmp
hlt
jmp
loopne
in
sub
fistpll
adc
dec
cmp
movsl
fiaddl
jne
jl
loope
decl
mov
pop
fldcw
cmp
jbe
mov
push
fstl
mov
into
xor
push
pop
bound
shl
int
lret
push
nop
pop
jbe
sbb
cmovge
scas
repz
mov
cmpsl
stos
neg
adc
xchg
int
inc
xor
dec
or
clc
ljmp
stos
or
popa
mov
inc
mov
test
cmc
dec
push
mov
mov
out
outsb
cld
push
cld
mov
xor
add
push
or
std
scas
lods
jns
cmp
sub
out
mov
push
movsb
sub
add
mov
dec
out
add
lods
pop
test
std
out
addr16
repnz
out
iret
dec
in
mov
sub
sbb
arpl
mov
loop
loop
sbb
adc
adc
jecxz
xor
push
jne
insb
cmc
mov
pop
xor
adc
push
popa
cmp
or
mov
push
mov
mov
add
push
call
out
sub
xchg
push
pop
add
std
push
jecxz
movsb
adc
mov
mov
ficoml
xor
mov
xchg
xor
xlat
mov
out
subl
add
adc
dec
xchg
ss
inc
dec
dec
in
outsl
inc
or
add
loopne
aam
xlat
aam
jne
out
inc
fadd
iret
sbb
rcrl
sbb
xchg
push
out
pop
xchg
dec
imul
mov
loopne
mov
or
xchg
adc
push
sbb
cmp
jb
push
jl
xchg
dec
sbb
and
pop
outsb
addl
jl
mov
pop
push
jmp
push
pop
mov
mov
out
pop
ljmp
cmc
adc
jbe
cmp
or
test
sbb
add
jecxz
cmp
int
pop
fldt
push
xchg
xchg
mov
fdivrs
imul
push
and
cld
and
idivb
lock
and
clc
inc
mov
clc
rclb
inc
add
into
pop
jne
mov
jmp
test
imul
and
jle
cmp
mov
and
lock
clc
sahf
rolb
imull
push
das
cltd
int3
es
mov
push
mov
pusha
lock
insb
lock
pop
mov
cmc
hlt
stc
js
xor
jg
cmp
dec
and
or
push
cld
pop
sarb
mov
mov
mov
pushf
popf
push
mov
adc
inc
push
mov
mov
adc
fwait
and
clc
hlt
dec
adc
push
push
xchg
adc
mov
cwtl
mov
ficompl
mov
sarb
and
loope
jp
shll
add
repnz
jmp
xchg
or
fs
dec
shlb
mov
sahf
lods
outsl
shlb
mov
mov
mov
loope
sub
sbb
clc
es
ljmp
xchg
es
adcb
addl
dec
stc
and
dec
repnz
inc
pop
stc
jns
pop
xor
or
aas
int3
xor
sbb
mov
inc
xchg
xchg
std
xchg
in
add
dec
in
test
jo
mov
popf
rorb
sub
pop
roll
adc
mov
addb
out
mov
test
inc
jp
loop
ret
dec
mov
je
mov
mov
adc
mov
adc
dec
int
push
xchg
mov
jae
daa
ficoml
mov
add
test
in
jge
jne
mov
ljmp
xchg
fwait
imul
xchg
arpl
xchg
negb
inc
xchg
pusha
fs
pop
out
stos
fidivrs
xlat
test
je
push
pop
ret
push
jl
pop
loope
in
aas
out
cmp
pop
orl
cltd
in
sub
push
insl
xorl
sbb
sub
insl
into
mov
hlt
inc
inc
mov
outsl
mov
mov
add
sbb
insl
dec
sub
movsl
subb
and
sbb
std
cmp
mov
lock
add
ret
push
adc
pop
mov
push
clc
push
xlat
imul
cld
int3
pop
shrl
xlat
ret
test
movsb
fnstsw
xchg
daa
mov
das
pop
popf
in
lret
loop
test
and
xor
and
and
xor
add
iret
xchg
adc
push
pop
xchg
mov
adc
push
mov
addb
mov
loopne
mov
sub
sarl
jmp
xchg
out
out
mov
mov
push
mov
movq
inc
fsubs
fistps
inc
jle
iret
mov
xchg
pop
rorb
jnp
xchg
mov
cmp
incb
sub
dec
xchg
and
cmp
je
movsl
and
push
cmp
xchg
xor
or
lcall
jnp
ror
sbb
stos
jb
inc
andb
pop
and
sub
add
inc
mov
or
xchg
push
pop
or
dec
xor
jo
pop
orl
xor
pusha
in
fcompl
adc
sahf
xor
mov
mov
hlt
add
sahf
mov
ja
push
xor
fldt
stos
in
fistpll
lds
mov
jmp
jne
enter
adc
adc
dec
cmp
scas
popf
and
inc
push
cmp
xchg
hlt
lcall
and
inc
jle
cld
xor
cmpsl
and
cli
outsl
jmp
jo
cmp
cld
mov
pusha
test
push
call
xchg
ret
xchg
adc
fwait
dec
pusha
addb
std
jge
imul
test
mov
push
mov
fmuls
cmpsb
mov
xor
xor
sub
xchg
in
adc
pop
icebp
mov
outsl
lret
les
jo
inc
fcmovnbe
fcompl
popa
loopne
inc
xchg
loope
jge
cs
fstp
movsb
imul
scas
ss
arpl
daa
stos
add
div
mov
testl
xchg
mov
repnz
and
fwait
sub
mov
cmp
pop
lods
ljmp
aas
lahf
sbb
jp
cmp
rcl
lcall
int3
into
jg
push
mov
add
mov
xlat
mov
cltd
lds
enter
fs
dec
mov
jmp
ljmp
push
fmuls
popf
in
rorl
adc
or
and
sbb
out
sti
push
mov
pop
or
out
shlb
clc
lea
add
dec
jnp
sub
out
mov
mov
sbb
cmp
stos
xchg
add
daa
sbb
jnp
imul
and
sub
add
ret
sbb
and
jmp
popf
pusha
mov
das
push
fs
and
mov
fstpt
mov
cli
or
test
cmp
aad
dec
outsl
jnp
xor
sub
sub
inc
fdivrl
das
lret
sub
xchg
push
dec
add
xlat
xor
call
and
ja
inc
fsubl
mov
mov
xchg
add
sar
jns
test
stos
lcall
mov
out
jmp
mov
test
cmpl
mov
negb
xchg
pop
js
cltd
insl
shll
rcrb
jns
mov
loop
sbb
xlat
cmp
xchg
std
fists
aas
mov
popf
adcb
push
lods
xchg
std
sbb
int3
xchg
in
mov
adc
dec
or
or
jbe
repz
xor
imul
repnz
bound
sbb
out
pop
xchg
push
icebp
dec
adc
or
enter
sub
dec
dec
xchg
xchg
lretw
jne
stos
dec
lahf
ds
out
and
shlb
add
or
repz
loope
cld
fs
addr16
mov
add
dec
shll
ret
mov
mov
adc
mov
jnp
inc
arpl
pop
xor
inc
push
mov
push
testb
pop
dec
jmp
pop
jp
call
inc
sub
daa
cmp
lock
jo
filds
inc
jecxz
mov
add
js
je
rolb
imul
cmpsb
xchg
leave
or
mov
sbb
mov
imul
and
ds
pop
mov
mov
lods
xchg
mulb
scas
push
popf
shlb
test
jnp
loop
and
jo
pop
mov
or
fmull
pushf
in
not
push
sarb
cli
mov
mov
and
das
push
sbb
mov
xchg
push
inc
dec
pop
jmp
cmpsb
inc
movsb
cmp
mov
sbb
xor
imul
jg
mov
lcall
add
insb
cmp
rclb
sbb
fcmovu
lock
add
mov
jmp
jp
lcall
push
out
je
jle
aaa
xlat
cmpl
mov
mov
xor
fbstp
adc
jne
sbb
mov
icebp
ret
adc
jge
cli
hlt
cwtl
pop
and
lret
and
lds
cwtl
out
sub
aam
or
idivb
not
pusha
cmp
pop
cmp
add
int
inc
pop
dec
orb
jae
mov
je
pop
mov
mov
mov
sbb
les
fldcw
xchg
ljmp
inc
ds
loop
fidivrs
das
dec
jne
test
push
sbb
mov
mov
in
rolb
pushl
fxch
pop
and
shlw
xor
mov
js
insl
test
inc
pop
pop
lods
icebp
test
ljmp
jne
xchg
dec
or
ja
dec
mov
xor
xor
sub
push
daa
push
fbstp
or
hlt
lds
sub
xchg
sbbb
mov
jns
fbld
mov
xor
mov
ret
in
ficompl
ss
adc
add
cmc
xorb
stc
mov
cwtl
jb
js
mov
sti
cld
mov
inc
rcrb
sub
pop
sub
pusha
out
imul
lret
jmp
xor
stos
pushl
or
mov
pop
jo
xchg
pop
inc
adc
jae,pt
xor
ficoml
icebp
push
jmp
xor
push
scas
xchg
jge
das
or
mov
push
mov
pop
jp
add
mov
cmpsb
mov
sub
packssdw
xchg
xor
lcall
repnz
or
jle
lahf
sbb
lea
sbb
test
test
jnp
decl
shll
dec
fs
xor
sub
insb
and
jge
mov
insl
loopne
push
mov
mov
pop
inc
dec
test
xor
into
sarl
sbb
loope
aaa
lret
mov
ficompl
sub
inc
adc
sbb
popl
cmp
mov
cli
or
je
xchg
or
xchg
scas
lods
sti
add
xor
mov
push
mov
stos
scas
repnz
mov
stc
or
repnz
xchg
sbb
xchg
push
int3
xchg
fsubs
les
popf
add
adc
and
push
cmc
mov
mov
shl
adc
ret
in
faddl
daa
jp
iret
or
fisttps
adc
mov
lret
xchg
outsl
adc
fcomi
test
ljmp
jo
arpl
fmuls
jg
stos
mov
xor
push
xor
pushf
push
in
mov
imul
inc
inc
or
pushf
call
push
rol
into
add
cwtl
bound
mov
dec
or
int3
test
pop
push
jl
mov
cmp
fcmovnb
outsl
dec
add
jge
loopne
and
mov
repnz
out
add
fildll
cmp
int3
add
inc
mov
in
iret
mov
dec
pop
push
or
nop
dec
call
jmp
xchg
xchg
adc
cmp
mov
or
mov
rcrb
sub
bnd
pop
in
and
cmp
mov
cmp
jb
xor
and
lods
loopne
xor
movsb
aas
gs
cmp
jmp
rorb
sub
adc
imul
test
addb
popa
cmp
popa
iret
cwtl
sub
aad
fcoms
sbb
inc
xchg
insb
fmuls
lock
sbb
inc
fnsave
jb
test
xor
cmp
push
dec
in
mov
mov
pop
ljmp
mov
sub
add
imul
stos
das
lea
cmp
dec
mov
addb
jle
push
push
and
xchg
dec
dec
sub
or
arpl
insl
add
cs
add
popf
pop
iret
sub
out
div
jp
aam
cs
sbb
mov
outsl
rcrl
fcmovnu
test
or
jbe
push
mov
ret
cli
cmc
inc
aad
xorl
mov
xor
mov
mov
sub
cmp
aad
mov
push
inc
inc
dec
in
movsl
inc
popf
push
xor
repz
pop
sub
mov
js
fnstenv
cltd
or
aad
popf
cmp
cltd
fistps
mov
fstpt
push
lea
and
mov
int3
cmovae
push
sbb
and
mov
mov
mov
cmp
sbbl
cwtl
dec
sub
or
or
mov
icebp
lea
repnz
xorl
lock
lret
cmpl
add
jecxz
mov
inc
xor
nop
add
sub
cmp
daa
lock
xchg
mov
data16
int
test
xor
inc
mov
nop
daa
or
rolb
add
xchg
xchg
mov
push
mov
add
loop
cmpsb
xchg
xchg
mov
add
xchg
mov
and
fsubs
loopne
mov
inc
adc
add
es
imul
xor
mov
jle
test
sbb
test
cltd
sbb
or
pop
lods
pop
dec
fsubs
cld
lahf
cmpl
and
pop
push
adc
icebp
cmp
cs
dec
fildll
adc
ret
cs
mov
add
sbb
mov
add
sbb
xlat
cmp
mov
test
and
cwtl
out
adc
xchg
orb
out
sbb
push
mov
jg
add
repz
push
adc
icebp
push
ret
mov
cmp
fstpt
nop
iret
ret
out
mov
int
jg
jecxz
sbb
sbb
push
sub
add
mov
mov
pop
out
clc
inc
mov
jp
fcoms
stos
push
leave
cmp
push
bound
leave
out
inc
movsb
shl
pusha
mov
mov
xor
sti
cmp
or
and
mov
sub
ss
jl
xor
cwtl
test
xchg
add
out
add
mov
sahf
loopne
in
dec
xchg
fnsave
ss
sub
jp
mov
loope
push
ficoml
rclb
out
sahf
loope,pn
divl
mov
fwait
and
mov
or
pop
lret
fisubl
mov
cwtl
outsl
push
fcomps
add
jnp
stc
shl
mov
xchg
pop
call
add
cmpsb
mov
jno
rcll
xor
out
int3
push
sbb
xchg
call
fstpl
cmpsl
enter
sar
adc
sub
shll
mov
cmpsb
roll
imul
adcb
in
mov
fldt
mov
dec
xor
jne
les
xchg
inc
test
fcoml
sub
pop
test
lcall
shll
mov
pop
dec
sti
jl
lods
fs
and
xchg
popf
fisubs
pop
in
push
cmp
fldenv
jge
loop
sub
mov
mov
pushl
or
jo
nop
xor
loopne
pop
sbb
add
iret
fistl
add
dec
pop
sbb
les
mov
test
adc
mov
xchg
rcll
and
in
addr16
shll
lods
sub
in
xchg
fsub
dec
cld
dec
imul
push
loope
or
out
test
sbb
iret
int3
lock
xchg
sub
dec
add
ja
mov
repz
xchg
fisubrs
mov
and
mov
sti
xor
cmp
outsl
into
mov
xor
jle
dec
xchg
push
mov
ja
pop
add
xor
adc
add
test
mov
push
dec
pop
push
jb
mov
negb
cmp
idivl
into
xchg
sbb
jo
pop
ret
jnp
and
or
cmp
push
repz
or
add
mov
xor
inc
inc
xor
lretw
jmp
repnz
gs
xchg
ljmp
pop
lods
int3
mov
sub
mov
xchg
cmp
lods
push
aad
xchg
dec
xchg
cmc
pop
arpl
loopne
cmc
sahf
div
pop
fs
add
add
sbbl
lcall
and
adc
mov
inc
xchg
insl
xor
sbb
jge
mov
rolb
aas
push
rcll
mov
ds
add
es
cmpsb
dec
bnd
inc
and
test
jle
mov
and
mov
ja
jge
lahf
loop
dec
lcall
dec
or
ret
nop
loope
orb
iret
inc
lret
rolb
cmp
mov
or
mov
xchg
rcl
mov
cmp
mov
dec
testl
adc
test
mov
jl
adc
pop
rorb
pop
mov
imul
mov
out
xor
sbb
jnp
cmp
les
pop
pop
mov
dec
pop
lcall
ljmp
nop
push
fsubrl
adc
daa
pusha
or
lds
dec
fwait
sbb
jb
jne
pushf
pop
lock
xor
and
movl
out
cmp
inc
subl
adc
aam
mov
xchg
mov
jle
in
ljmp
pop
inc
jp
pushf
push
mov
mov
inc
xchg
ret
add
xchg
movsb
xor
mov
pop
or
nop
imul
aam
leave
push
inc
in
jl
jae
push
jb
cmpl
out
out
aad
mov
xor
aad
aam
lods
mov
arpl
jae
mov
and
or
mov
jecxz
push
add
outsl
cmc
xchg
xchg
shrl
inc
jmp
xchg
xor
loopne
dec
mov
add
mov
roll
subb
dec
xchg
lcall
mov
cmp
cmp
cld
mov
mov
add
jle
icebp
mov
add
outsb
lds
and
mov
push
movl
jae
test
iret
jp
stos
stos
pushf
mov
mov
or
mov
push
adc
fnstenv
jl
pop
mov
push
faddl
fcoml
testl
fs
sbb
fdivrs
mov
xor
push
jne
and
loope
adc
push
xchg
and
setne
arpl
je
push
daa
inc
iret
movsl
lcall
sti
in
jg
pusha
sarl
jns
mov
adc
in
js
test
cmp
mov
xchg
adc
mov
and
insl
sub
out
xchg
mov
mov
xor
faddl
mov
fmuls
push
and
xchg
add
into
scas
push
lret
push
dec
adc
roll
sbb
push
fnstcw
xchg
outsl
xor
frstor
rorl
push
mov
dec
iret
inc
ja
mov
pop
fisubrs
sbb
hlt
or
popa
add
or
jge
inc
push
stc
push
ljmp
pusha
fnstsw
je
jmp
pop
sbb
fnstcw
jp
stos
fisttpll
out
mov
adc
mov
gs
nop
push
mov
ret
sahf
push
adc
mov
cld
pop
popa
in
mov
testl
xor
in
cld
add
sub
lret
add
inc
push
jne
mov
pushf
push
aam
es
push
imul
mov
pop
out
xlat
stc
mov
imul
mov
fwait
xor
pushf
scas
mov
lds
fldl
data16
cmp
and
fwait
movsb
push
and
jns
or
push
jecxz
rcrb
dec
xor
xor
mov
lea
mov
test
cli
nop
in
ss
dec
push
lret
es
insb
jecxz
mov
adc
leave
xor
std
ja
int
cltd
dec
push
pop
mov
mov
fiadds
mov
and
das
dec
repnz
in
xlat
lret
xor
push
xor
imul
lcall
mov
loop
loop
nop
arpl
mov
mov
daa
fisubrl
mov
hlt
xor
jb
jle
loop
fdiv
sbb
aaa
mov
push
dec
insb
xchg
imul
mov
aad
push
decb
ret
scas
xor
adc
in
push
mov
inc
aam
cwtl
mov
inc
xchg
mov
and
or
and
repz
idivb
rolb
xchg
adc
add
push
enter
jno
ljmp
pop
jns
cmp
ret
dec
xor
mov
pop
js
adc
mov
xchg
mov
mov
sti
insl
data16
mov
mov
cmp
enter
out
xchg
mov
inc
aas
sub
push
shlb
jbe
dec
mov
jge
dec
inc
imul
popa
test
std
pop
push
pusha
imul
fcmovbe
imul
in
out
sub
xchg
cmp
mov
out
lea
adc
xor
inc
subl
fimuls
movsl
shll
or
xor
mov
in
push
in
adc
out
mov
fs
dec
ss
les
adc
and
not
push
push
or
sti
cld
gs
stos
enter
test
add
xchg
mov
or
sbb
addb
push
xor
out
add
hlt
ret
shrb
jb
xchg
cwtl
sarb
xor
hlt
pop
idivl
in
gs
mov
nop
jae
insb
repz
push
movsb
icebp
sbb
and
or
out
roll
aad
outsl
xor
jg
shrl
pop
adc
and
mulb
cmp
lret
fisubrl
nop
fs
pusha
adc
mov
clc
jmp
or
fisubs
add
pop
sbb
aaa
nop
imul
cmp
imul
ret
aad
add
scas
ret
gs
aad
push
popa
hlt
mov
push
fwait
lods
pop
and
int
out
rclb
add
sbb
cli
sti
in
jecxz
daa
lods
popa
stos
dec
int3
int3
inc
push
stos
inc
adc
mov
jnp
push
popf
out
scas
shlb
ljmp
mov
or
mov
ror
stos
sub
lahf
cmpsl
mov
mov
aas
in
mov
or
or
sub
shl
mov
mov
mul
jbe
xor
jns
loope
mov
cmpb
inc
shll
push
inc
xlat
pop
ljmp
push
jmp
lcall
pop
dec
ljmp
dec
ja
shlb
out
mov
add
or
fisttpll
xchg
aam
mov
int3
in
divl
fldl
and
stc
idivb
jno
pop
fmull
adc
sbb
sub
and
mov
mov
xchg
test
orb
sbb
dec
mov
lods
nop
aas
mov
xor
shr
outsb
mov
sbb
mov
pop
cltd
in
pop
inc
aas
inc
jns
mov
jb
sbb
jl
addr16
or
aam
fcomps
test
or
insl
jle
lret
daa
je
or
leave
outsb
xchg
stos
cmp
push
inc
fnsave
mov
stc
fcoml
jnp
dec
mov
pop
mov
mov
testl
sub
or
out
inc
pushf
fsubrs
sbb
add
cmp
or
shrl
jb
popa
jmp
out
mov
mov
das
inc
push
std
imul
cmp
mov
and
dec
repz
push
pop
inc
fldt
mov
jae
fdivrp
adc
mov
add
jecxz
push
jno
pop
mov
inc
mov
inc
lea
mov
sub
cs
in
sub
ret
test
out
outsb
ds
aaa
xchg
sub
push
int
add
stc
test
sbb
xor
mov
negl
add
and
push
xchg
out
sub
pop
xor
sahf
cvttps2pi
sub
incl
mov
repz
dec
repz
or
js
ret
push
xor
lret
jo
cmp
test
cmove
dec
lret
int
sub
movsb
rol
xor
mov
or
push
add
sub
xlat
mov
inc
cwtl
out
xorb
out
jbe
mov
in
sbb
pop
test
adc
test
out
les
adc
les
dec
dec
fdivr
sbb
cltd
popa
scas
push
jns
rclb
mov
ret
jmp
ret
xchg
pop
test
lods
scas
in
pop
mov
push
pop
mov
jecxz
movb
or
and
cld
mov
jecxz
adc
mov
notl
rcll
xchg
jl
sub
icebp
adc
dec
inc
mov
leave
push
icebp
repnz
cli
jnp
fmull
lods
mov
inc
inc
out
dec
adc
sbb
jge
mov
push
cmp
leave
xchg
arpl
shrb
int3
xchg
mov
leave
add
shrb
pushf
loope
out
aad
mov
sbb
iret
jl
mov
push
enter
aad
push
dec
loop
pop
adc
lcall
sub
mov
and
mov
jg
out
pushf
add
mov
lahf
sbb
bswap
push
pop
nop
stos
rcrb
xor
adc
adc
inc
mov
jmp
decb
dec
scas
imul
pop
pop
xchg
jecxz
xchg
sub
stos
fs
dec
lahf
sbb
push
inc
in
fbstp
popl
js
inc
push
fsubl
orl
lods
sbb
lea
lret
cld
cmp
jmp
mov
pop
pop
sarl
push
pop
xor
aaa
scas
stos
shll
hlt
sbb
jp
out
xlat
test
jno
fwait
pop
pusha
pop
or
push
movsb
loopne
dec
jg
dec
or
rorl
mov
scas
stos
jne
dec
pop
outsl
push
mov
mov
xchg
mov
test
lahf
stos
adc
sahf
repz
push
jg
mov
push
mov
scas
push
inc
sbb
mov
xor
hlt
pop
pop
movl
lahf
mov
or
in
cmp
sbb
mov
popf
or
je
movsb
fdiv
out
cmp
cmp
push
mov
lock
adc
iret
test
inc
or
dec
movsl
clc
int
loopne
dec
add
faddl
add
xchg
mull
jae
dec
jo
ret
jo
mov
mov
sub
clc
add
add
and
or
fidivrl
and
mov
cmp
cmp
add
dec
inc
out
aas
jg
pop
arpl
in
push
pop
and
rcll
scas
lds
mov
dec
mov
int
or
add
add
xor
push
add
push
ds
popf
mov
add
sbb
pop
xor
jbe
adc
and
test
mov
mov
pop
push
jno
das
out
ficompl
mov
mov
sbb
push
pushf
and
jbe
mov
mov
adc
fwait
jns
add
add
add
add
adc
xchg
test
mov
je
ja
es
jecxz
sub
ljmp
pop
daa
ds
mov
stos
or
jbe
sub
xchg
jo
jae
adc
testl
jle
outsb
inc
and
and
xchg
pusha
cmovge
mov
insb
xchg
fimull
scas
lods
adc
inc
add
jmp
ss
lret
enter
pop
xchg
arpl
adcl
jg
cltd
sbb
test
aas
sub
mov
push
in
cs
xor
xor
cltd
push
cmp
int3
mov
lret
sbb
rolb
lret
cs
push
out
adc
fdivrs
aam
out
les
dec
cmp
jmp
scas
fs
test
ds
into
jno
movsb
add
dec
xor
sub
orb
jle
addr16
sbb
mov
xor
mov
add
sub
jecxz
add
mov
jl
scas
mov
mov
fwait
xchg
sbb
and
and
test
inc
sub
lret
xlat
jo
aam
jnp
inc
push
mov
stos
ja
int3
xchg
or
rcrl
cmpsb
inc
jae
mov
mov
push
dec
jae
orb
dec
jge
call
xor
nop
sbb
fldenv
scas
dec
cwtl
inc
sbb
mov
sar
mov
xchg
leave
xchg
test
inc
push
insb
ja
xchg
mov
inc
mov
arpl
inc
and
lahf
push
dec
daa
cld
and
jl
shll
pop
sub
jp
mov
adc
fsubs
push
sbb
or
je
popa
int3
pop
inc
iret
xchg
jb
ret
int
shll
in
cwtl
in
lea
xor
arpl
cmp
mov
addr16
xchg
mov
subl
int3
pop
xor
aaa
das
lret
dec
mov
loope
fiadds
sub
scas
or
cmc
mov
in
xlat
scas
test
ds
push
mov
inc
push
stos
loop
inc
mov
or
push
jbe
push
sahf
sahf
mov
dec
cltd
sub
dec
jno
lods
shl
jecxz
mov
jg
out
dec
mov
xchg
addr16
push
xchg
push
adc
testb
add
cli
pop
or
addr16
cs
lea
ss
cltd
mov
sar
or
jns
mov
out
add
add
lret
xor
pusha
xor
idivb
out
sahf
loopne
mov
nop
cmp
pop
test
adc
mov
dec
lret
lret
xchg
and
sahf
es
cld
int
push
or
daa
out
xor
cmp
add
jmp
dec
inc
lock
dec
fstpt
push
lahf
sub
jmp
add
pop
loopne
push
mov
rcrl
stc
loope
inc
xchg
push
sbb
sub
leave
jne
testb
or
xchg
xchg
fisubrl
fsubrp
mov
and
adc
jno
or
jl
push
mov
cmpsl
fisttpll
adc
imul
rcl
data16
adc
test
shll
mov
mov
xlat
cmpsl
cmp
jb
cli
daa
iret
cltd
push
roll
fsubrl
jnp
xor
jo
cmpb
ds
jecxz
push
int
ljmp
push
std
jne
shll
ja
pop
jmp
xchg
sar
cld
insl
mov
scas
pop
and
mov
lea
fdiv
fst
insl
enter
mov
adc
rcr
movb
or
sti
ss
lcall
dec
rcr
aam
inc
repnz
cmc
mov
mov
mov
jns
das
mull
jle
or
mov
sub
dec
adc
cs
ljmp
cmp
push
jle
mov
push
jbe
mov
jb
pop
or
int3
aam
jmp
mov
aaa
loope
push
dec
jle
push
push
mov
aam
or
mov
ja
bound
testb
jmp
andb
cwtl
daa
orl
and
das
pop
scas
cmpsb
and
jb
adc
dec
xor
iret
fwait
div
mov
sbb
jmp
push
mov
mov
adc
in
mov
scas
stos
mov
adc
in
mov
scas
add
push
cmpsl
xchg
add
loope
test
ds
fyl2x
cmpsl
jno
mov
sub
in
or
lret
push
mov
fs
pop
insl
out
xlat
inc
push
xor
inc
push
xchg
mov
sub
les
ret
pop
xor
jns
xchg
jl
sbb
jp
mov
fsub
mov
fsubrl
adc
adc
cmp
cmp
leave
adc
xlat
mov
stos
sbb
push
mov
gs
jp
pop
mov
orb
gs
addr16
ja
mov
pop
fcmove
fcomps
xchg
adc
xchg
mov
dec
loopne
ljmp
inc
sub
cli
jns
and
cmp
aam
add
dec
rol
in
push
ljmp
jle
xchg
jne
adc
fidivs
dec
je
aaa
push
mov
pop
xor
jbe
cmp
lds
cmp
hlt
mov
and
mov
adc
adc
mov
aas
adc
push
xchg
test
cmp
sub
pop
push
mov
cmpsl
bound
pop
add
movsb
push
mov
aad
sbb
cmp
push
cld
lret
testl
aaa
sub
icebp
jge
xchg
leave
push
aad
dec
dec
ljmp
push
sub
jecxz
jecxz
inc
push
repnz
sbbb
enter
sub
mov
jbe
mov
test
outsb
scas
sbbl
sub
cmc
pop
cmpsb
scas
add
and
or
int
cmp
xchg
popf
lahf
mov
inc
clc
cmpsb
jecxz
add
sub
cmp
addr16
or
and
adc
inc
or
inc
inc
dec
cmp
and
or
aad
mov
fcmovnbe
mov
or
sbb
adc
scas
mov
add
testb
lds
inc
clc
rcrb
int3
ret
push
sbb
int
ficoms
mov
insl
mov
out
sub
inc
into
mov
test
mov
push
lea
enter
pop
jo
cli
leave
sbb
test
cmpsl
lock
mov
sbb
data16
loope
aaa
sbb
and
pop
and
shl
sbb
or
cmp
jbe
push
and
outsb
fcmovnb
or
rcll
pop
icebp
outsw
mov
sarb
fidivs
cmc
jecxz
ja
lret
arpl
inc
negl
push
dec
add
stos
mov
aas
imul
pop
adc
sbb
outsl
mov
push
mov
sti
imul
pop
outsl
push
or
cmp
push
mov
cmp
sub
loopne
shlb
mov
or
sub
mov
out
add
cmp
test
daa
adc
xchg
jg
mov
roll
xchg
dec
lods
xor
push
cld
mov
mov
std
inc
mov
push
ficompl
mov
mov
mov
cli
jbe
cli
jl
mov
lret
repnz
ja
push
subl
cmp
in
jns
xchg
push
call
jge
cmp
lahf
ss
icebp
mov
pop
sbbl
mov
inc
xchg
popa
insl
insl
dec
pop
into
daa
adc
sbb
cli
jg
in
fnstcw
out
inc
xor
inc
test
out
rorb
fs
mov
mov
ljmp
xchg
push
inc
inc
out
iret
sti
mov
fsubr
imul
add
mov
mov
pop
call
int
jae
and
lahf
xchg
inc
jmp
into
xchg
pop
mov
pop
push
jbe
imul
mov
stos
xor
jl
je
lods
xor
mov
push
insw
cmpsb
jnp
sti
or
inc
mov
out
pop
jo
ret
push
mov
mov
xor
xor
push
sarl
inc
mov
pop
out
adc
aas
jecxz
inc
imul
adc
adcb
aam
repz
cmpsl
ja
dec
pop
icebp
mov
xchg
lods
jb
jmp
mov
in
sarb
in
pusha
and
mov
adc
jecxz
lock
out
movsb
lds
repz
or
push
sub
popa
add
dec
push
cmp
out
repz
sbb
or
addr16
jmp
xchg
outsl
stc
insb
push
cltd
lahf
push
out
pop
xor
xchg
filds
jne
and
mov
cs
fsub
rcll
ret
in
fldcw
push
aad
jnp
fs
gs
call
push
scas
mulb
pusha
xchg
repnz
or
mov
adc
inc
loopne
into
scas
adc
dec
mov
bound
adcl
mov
or
je
shrl
int
and
pushf
popa
pop
fs
movsl
movsb
addr16
leave
call
jmp
mov
or
push
rorl
enter
jae
dec
pop
fnstsw
cmp
orb
inc
pop
ror
add
inc
pop
loope
push
daa
cld
lcall
dec
repnz
sahf
pop
loope
jmp
push
sbb
pop
mov
cmp
and
rdmsr
loope
add
ljmp
xorl
pop
movsl
arpl
pop
xor
js
jmp
hlt
jae
and
lds
cmpsb
sbb
cli
in
shlb
fidivs
or
pop
jbe
insl
imul
jmp
orb
loop
mov
loopne
jne
in
mov
lods
adc
jne
xchg
cli
cltd
mov
dec
test
aam
lret
sub
cli
out
fwait
mov
jnp
mov
xchg
mov
xor
cwtl
pusha
mov
add
outsl
or
jo
out
xchg
cmp
stos
jb
call
roll
dec
addr16
sub
sbb
jge
add
aad
dec
mov
mov
mov
aaa
inc
or
inc
adc
shl
incl
cmpsb
int3
movsb
ficompl
iret
out
pop
lret
inc
push
jmp
jmp
sub
pop
or
in
xchg
xor
loop
sub
xlat
outsb
pop
mov
push
out
lock
xlat
pop
out
adc
pop
sub
out
jl
push
inc
push
test
insb
fsubrl
add
in
xchg
sub
mov
xor
mov
sbb
dec
insl
adc
push
rclb
xchg
mov
push
jb
test
ss
mov
pop
jne
scas
lahf
pop
in
mov
fcoml
dec
test
inc
mov
inc
lret
std
mov
stos
lcall
fadds
movsb
data16
std
push
outsb
add
xchg
mov
sti
jl
movsb
xchg
cmp
ret
in
loope
into
mov
outsb
add
loope
push
stos
push
pop
insl
jnp
sahf
xchg
loop
jge
pop
and
lods
sbb
popa
xchg
mov
mov
call
adc
imul
jmp
mov
mov
jnp
mov
outsl
xor
out
cmp
xor
ds
rorl
loopne
pop
mov
out
insb
ss
adc
pusha
pop
mov
inc
test
xor
pop
aaa
fcmove
mov
cmpl
lret
bound
enter
add
int
insl
adc
sub
cmp
dec
mov
pop
ja
xchg
enter
out
lahf
mov
dec
js
pop
push
fidivrl
mov
out
cmp
push
outsl
popa
nop
xchg
ja
jecxz
nop
das
cmp
fiadds
cmpsb
std
popl
mov
insl
int3
iret
and
out
leave
ja
push
sbb
incb
andl
pop
frstor
cmpsb
mov
xchg
popf
jp
outsb
add
jle
jns
cmp
xchg
fistps
jbe
sbb
cmp
popa
out
push
popf
mov
cmp
inc
cmc
mov
jbe
or
dec
popa
outsl
in
jge
scas
dec
lret
cmpb
inc
rclb
stc
ret
cs
ret
push
cmpsb
aaa
push
jge
fnstcw
fists
fwait
insl
push
dec
rcrl
jae
add
jp
pushf
cmp
adc
rol
idivl
or
push
add
xor
sahf
repnz
xlat
filds
clc
cmp
push
xor
add
fistl
push
or
xchg
push
pop
mov
push
pop
jnp
fiaddl
mov
jno
repz
in
fucomip
dec
pop
cmp
andl
es
out
mov
sub
xor
push
popf
test
mov
fldz
cmp
push
cmp
and
jg
adc
jmp
inc
push
dec
lcall
imull
std
pop
arpl
aad
cwtl
jbe
xlat
divb
push
test
mov
in
sbb
das
inc
mov
mov
push
and
divb
or
fsts
cltd
lea
add
push
cmpsl
push
mov
dec
rorl
int
inc
pusha
aas
cmpsb
fldenv
mov
aad
cmpsb
jl
std
or
imul
cld
int
loopne
mov
mov
dec
xchg
push
jno
outsl
imul
add
adc
arpl
fwait
in
hlt
push
cwtl
push
sub
mov
insl
mov
adc
aam
in
xchg
sbb
xchg
cld
cmp
fldcw
ret
xor
popf
test
dec
push
cmp
sarb
mov
lds
cltd
in
add
sub
cs
loopne
aad
sub
and
cmp
jno
cmp
out
inc
fldt
pop
jmp
jge
sti
in
cltd
jns
jnp
icebp
mov
dec
hlt
and
cmp
sbb
mov
shl
leave
es
gs
xchg
rorl
or
pop
mov
jecxz
aad
sub
xor
jbe
xor
loop
insl
out
sbbl
jge
inc
sahf
mov
test
fmull
pop
push
cs
inc
test
adc
cmp
in
lret
daa
ss
imul
bound
sub
sbb
mov
jb
ret
dec
cltd
mov
adc
rorb
sahf
pop
xor
addr16
out
push
subb
fmuls
fidivrl
add
xor
subl
cwtl
sbb
xchg
out
fdivr
ja
stc
scas
sbb
in
test
mov
hlt
xor
push
out
xlat
jae
inc
and
jle
scas
mov
mov
inc
in
call
jnp
dec
pop
fcomi
push
jle
lock
insl
popa
sbb
push
loop
pop
into
mov
hlt
ret
into
fdivl
neg
lea
inc
mov
and
insb
roll
xchg
leave
xchg
cmp
test
pushf
ds
ror
fwait
jmp
out
mov
cmp
mov
movsb
cmp
faddp
fdivrl
cltd
and
jle
je
shrb
xor
mov
pop
adcl
std
push
mov
dec
push
pop
pop
dec
pop
pop
dec
sub
aad
jns
dec
sbb
je
or
stos
xchg
cmc
int3
jnp
push
imul
mov
fs
pop
or
fyl2x
pushf
dec
jmp
cltd
sbb
imul
and
fdivrp
add
push
fadds
addr16
faddl
iret
ljmp
test
pop
sub
das
pop
xor
out
dec
out
mov
inc
aad
inc
leave
loope
gs
cmp
icebp
xchg
loopne
rcl
pop
clc
sbb
jg
xchg
or
insl
pop
or
int3
xor
dec
fidivrs
mov
fwait
or
outsl
movsb
mov
in
sahf
or
loope
aad
sub
mov
xor
leave
outsl
inc
pusha
lock
fidivl
jecxz
int3
push
aas
clc
fcom
icebp
enter
pusha
push
mov
divl
cs
outsb
sbb
jge
aam
add
orl
jne
pop
mov
pop
sbb
jg
das
call
je
fidivl
movsl
xchg
aam
fs
mov
add
and
dec
rorl
inc
cld
imul
xchg
mov
mov
lods
jg
test
stc
out
dec
bound
leave
out
mov
nop
dec
fs
mov
add
and
ret
pop
mov
test
dec
ljmp
xchg
into
dec
out
jno
sub
test
fisttpl
jmp
movsb
add
inc
loope,pt
cmovs
loopne
cmp
pop
push
jle
in
loopne
imul
push
cli
incl
iret
lods
mov
pop
mov
repz
rcrb
repz
xchg
divl
push
inc
fxch
lahf
test
sub
dec
imul
cmp
push
leave
and
push
adc
out
mov
dec
mov
add
sub
xchg
pop
mov
pusha
mov
std
pop
test
xchg
mov
inc
stos
or
and
or
mov
call
loopne
xor
pushl
sbb
sub
mov
push
dec
negl
outsl
scas
lret
mov
das
aam
fisttps
sbb
in
dec
mov
or
add
cmp
inc
jmp
pop
sub
sub
repnz
and
jno
leave
imull
fistl
inc
mov
fwait
add
push
rorl
or
lods
inc
ds
dec
push
and
cmp
icebp
pop
xchg
mov
jnp
mov
mov
xchg
jbe
nop
mov
stos
mov
pop
or
lds
add
in
add
in
xchg
popa
lcall
mov
daa
or
subb
jg
and
bnd
dec
bound
or
test
mov
inc
push
repnz
into
test
and
adc
repnz
xor
mov
icebp
inc
out
sti
mov
mov
std
cmp
mov
pop
pusha
cs
inc
mov
stos
jp
jg
cmp
inc
frstor
les
aad
ja
cmp
out
push
call
mov
mov
scas
push
adc
push
aad
sbb
les
cmp
jno
mov
ss
push
sbbl
aam
dec
inc
aaa
pop
test
fstp
mov
out
jbe
leave
lcall
scas
pop
cmpb
cmpsb
aad
mov
stos
inc
pop
mov
dec
pop
int3
mov
jo
leave
in
or
out
lahf
pop
inc
sub
inc
sbb
lods
lcall
divl
jno
popf
adc
add
negb
adc
das
shl
pop
inc
cmp
ljmp
call
int
loop
push
addb
lock
inc
push
scas
into
and
sub
mov
dec
sub
popf
cmpsw
adc
lds
or
outsb
out
loop
mov
mov
int
xchg
iret
inc
xchg
jnp
lcall
stos
movsl
sbb
es
mov
js
pusha
in
mov
push
in
fnsave
pop
hlt
into
mov
sbb
shrb
stos
in
xor
mov
rorl
dec
dec
dec
xchg
in
and
js
movsl
ljmp
stos
sub
pusha
pop
xchg
outsb
scas
add
outsl
sub
cmp
dec
mov
fists
ret
bound
ror
addr16
cmp
push
lds
add
xor
sbbl
aas
mov
loope
gs
push
shll
push
sub
outsb
add
ds
pop
xchg
in
aas
mov
and
call
jecxz
lea
call
add
pop
lods
dec
loopne
fsubrs
outsl
stos
xchg
adc
xchg
aam
mov
push
sub
std
sub
xchg
loope
shlb
or
sub
jmp
and
push
push
jnp
addr16
ds
sbb
inc
fcoml
pop
adc
mov
mov
jbe
xchg
mov
mov
xor
adc
push
mov
mov
jb
clc
pop
ja
out
sub
ja
jne
enter
fistl
std
hlt
repnz
jnp
add
test
lcall
jno
mov
lahf
inc
cli
lahf
popa
xor
sahf
bound
insl
sbb
xchg
inc
js
jg
scas
xchg
sahf
inc
dec
push
xor
push
mov
call
and
dec
test
pop
push
out
lahf
aas
cmp
dec
pop
pop
test
out
es
xor
mov
jle
pop
mov
push
xchg
cmp
das
jno
loope
scas
iret
and
in
cli
xlat
dec
mov
cli
mov
clc
mov
mov
arpl
shrb
xchg
adc
lcall
push
xchg
inc
mov
test
out
mov
dec
mov
and
mov
jp
ret
xlat
push
sbbb
jo
xchg
sub
loop
mov
roll
out
xchg
mov
insl
testb
jo
add
inc
adc
stc
xchg
pop
mov
clc
sbb
movsb
call
ljmp
inc
adc
jmp
pushf
shl
xchg
dec
push
ja
or
js
lcall
jle
and
mov
push
imulb
scas
dec
pop
push
out
fmull
scas
mov
outsl
fstl
scas
jecxz
outsl
jne
jae
xor
pusha
in
and
aam
or
sub
pop
cld
jno
push
int3
popa
inc
fadds
aaa
ljmp
lods
xchg
xlat
sbb
add
jp
push
leave
mov
movsl
jge
dec
iret
jmp
imul
mov
add
xchg
pop
xchg
out
push
jne
xchg
lea
add
xlat
mov
push
enter
sub
jg
ds
sbb
xor
test
xchg
stos
adcb
inc
jnp
jbe
jae
sub
xor
xor
out
mov
fdivrs
inc
sub
movsl
pop
pop
cltd
xor
rolb
jnp
push
fucomp
and
xor
popa
out
xchg
pop
or
notb
sbb
lock
clc
cmpsl
and
ljmp
pusha
ret
popa
lret
and
adc
outsb
mov
ljmp
loope
outsl
rol
dec
in
push
mov
jae
cmp
nop
jge
fsubl
lahf
out
icebp
inc
and
lea
fstl
sub
xchg
ror
mov
push
sub
mov
test
cltd
push
inc
int3
sub
daa
rolb
out
les
movsl
movsb
adc
js
push
mov
test
loope
mov
mov
into
xchg
dec
mov
dec
sub
inc
sbb
insl
iret
nop
xor
scas
test
push
aad
out
jg
and
out
mov
inc
repnz
jecxz
and
mov
stc
repnz
cmpsl
mov
push
loop
mov
xor
cwtl
and
cmpsb
adc
mov
mov
lock
push
mov
push
jmp
out
adc
int3
cmpsb
sarb
jg
mov
adc
mov
cmp
loope
add
or
lods
sbb
push
mov
fstl
das
pop
in
loop
cmpsb
test
jbe
das
jp
outsb
shlb
mov
dec
mov
xlat
ja
in
dec
test
adc
mov
push
adc
adc
pop
mov
adc
mov
andl
ret
in
dec
cmp
xlat
out
fisttpl
push
push
cmp
adc
lock
mov
push
inc
repz
pop
cli
add
outsl
ja
in
sbb
ret
jle
sar
pop
xchg
js
xchg
leave
xchg
and
adcl
mov
adc
dec
push
or
sbb
loope
add
lcall
pop
sub
pop
xchg
imul
aaa
cld
sub
mov
sub
jbe
in
ret
cmpsb
ret
int
out
les
nop
jle
pushf
mov
js
out
test
enter
and
fwait
push
xlat
mov
fwait
jns
jecxz
xchg
in
xor
jmp
ja
mov
iret
cld
inc
imul
inc
dec
push
imul
shll
mov
divl
xchg
mov
test
mov
dec
orb
sbb
fchs
insl
test
jno
in
mov
mov
mov
jl
cmpsb
inc
adc
cs
stos
dec
cwtl
push
inc
cmp
dec
xchg
cmp
repz
ret
and
adc
xchg
adc
pop
jecxz
or
xchg
loop
bound
dec
decb
lock
cwtl
pop
push
insb
sub
test
push
sahf
dec
dec
fisubl
jmp
insl
les
and
test
inc
sub
sbb
jb
dec
xor
adc
mov
cmp
std
jmp
mul
adc
and
mov
movsb
push
rcrl
insl
adc
loopne
push
lret
sti
cmp
sub
jp
cmp
bswap
xchg
xchg
add
pop
adc
enter
and
frstor
je
dec
icebp
sbb
lods
mov
ljmp
insl
insb
jp
mov
cmp
ja
int
out
data16
fisttpl
rclb
sbb
lds
and
stos
je
shr
cmp
mov
inc
iret
add
ret
adcb
mov
inc
pop
add
cwtl
cld
push
ss
cltd
pop
xchg
sub
push
das
add
mov
sub
mov
in
icebp
push
pop
or
inc
xor
dec
add
orb
ss
cld
into
and
shlb
xchg
les
lret
sbb
fwait
sahf
adc
mov
jne
cmp
jnp
xchg
das
daa
xchg
aaa
inc
mov
inc
jne
pop
test
pop
cmp
cld
popa
dec
or
sbb
cmpsb
jb
pusha
cltd
add
push
fcoms
push
ret
dec
jae
in
lret
xorb
test
pop
shll
lea
imul
lcall
rcll
pop
jge
outsl
js
dec
pop
shlb
iret
stos
cld
xchg
xchg
bnd
jo
jle
iret
and
pop
addr16
or
fidivl
cmpl
push
pop
mov
cld
inc
shll
std
adc
inc
cld
jnp
aam
das
push
mov
loop
stc
inc
mov
cli
lret
push
adc
cs
pop
or
rcl
pop
push
movsb
in
fsub
clc
push
fisubrs
fisubrl
repz
mov
lods
sub
sub
cmp
aam
mov
arpl
dec
xadd
outsb
aas
push
gs
movsb
cwtl
fldt
cmp
loop
adc
pushf
cwtl
pop
sbb
cmp
xlat
dec
ss
pusha
test
mov
sub
test
pushf
lods
mov
adc
or
lret
sbb
pop
fucomi
lock
push
les
int
mov
lcall
in
xor
push
aad
lods
hlt
popf
jb
out
insb
inc
xchg
xchg
gs
cmp
aam
mov
add
mov
les
sub
mov
leave
add
cmp
insb
pop
xor
shrb
cli
xchg
mov
inc
push
mov
ljmp
addl
dec
out
pop
stc
fisubl
xor
xchg
je
pop
pop
fcoml
jecxz
ljmpw
or
cmp
cltd
cmpsl
rcl
jge
xlat
pop
fnsave
xchg
jle
jmp
loopne
cmpsb
pop
sbbl
sub
movb
jmp
imul
jmp
sub
dec
xchg
xchg
test
decb
and
gs
outsl
stos
fs
push
sub
xor
mov
fimuls
leave
add
test
das
and
dec
outsb
mov
xor
pop
pop
jbe
pop
mov
add
sbb
sahf
mov
mov
clc
and
shl
mov
outsb
sub
inc
mov
xor
sub
xchg
pop
push
push
test
je
push
cmpb
jg
dec
sbb
push
arpl
int
jae
test
ja
mov
add
lds
dec
cmpsl
xchg
lahf
mov
cltd
jl
mov
jl
pop
add
cmpsl
push
push
cmp
adc
lock
or
cwtl
sub
jb
dec
lock
inc
aam
addb
sbb
cwtl
pop
divb
addr16
rorb
xchg
lock
xchg
das
notb
loopne
cmp
sahf
adc
cwtl
mov
enter
pop
and
sub
mov
ja
in
jg
cmp
insb
adc
aad
push
or
sub
or
xor
es
sbb
pop
rorl
gs
sbb
jo
test
aas
and
jne
cmp
xor
sbb
shr
sarl
xchg
sahf
test
es
ja
push
mov
das
data16
sub
and
aam
cmp
cmp
pop
stos
fs
faddl
sbb
adc
sbb
mov
pop
mov
sbb
sub
xor
and
es
jp
pusha
jge
lock
jne
ljmp
xchg
jnp
into
mov
push
sub
push
add
add
mov
sbb
pusha
std
jmp
iret
fdivrs
cwtl
stos
ds
mov
mov
mov
xor
jb
aaa
icebp
mov
xchg
add
into
fisubrl
lods
dec
das
ror
and
hlt
into
mov
mov
scas
xlat
pop
fsubl
mov
jmp
rol
js
cmp
in
xlat
sbb
lods
popa
fcomip
sub
popa
jne
es
cmp
add
xchg
push
iret
push
push
fstpl
int
std
cmp
lahf
insl
stc
test
add
xchg
fisttpl
in
fbld
push
inc
cmpsl
xchg
mov
pop
adc
enter
pop
outsl
jle
or
push
cmp
and
jl
clc
daa
stc
mov
dec
js
gs
sahf
xchg
add
xlat
or
sbb
xchg
outsb
pop
jae
stos
fwait
lret
jge
and
mov
rcr
jo
in
push
push
js
xor
inc
xchg
or
inc
pop
out
jne
loope
xor
jmp
pop
sub
mov
push
arpl
insb
sarl
cltd
test
mov
jl
dec
mov
shrb
or
sar
add
ljmp
iret
je
mov
test
out
pop
adc
jp
dec
test
pop
stos
push
jecxz
mov
xchg
in
mov
pop
repz
push
push
jne
mov
adc
jns
mov
mov
mov
lahf
sbb
cmpsb
add
arpl
xchg
jo
stos
and
xchg
mov
cltd
xorb
pop
xchg
xor
movsl
enter
inc
pop
jns
shll
stos
adc
xchg
mov
xchg
and
mov
dec
push
and
xlat
cld
mov
in
mov
mov
mov
test
cs
and
icebp
lods
incl
xor
test
mov
repz
push
cmp
faddp
cmp
inc
pop
push
xor
xchg
xchg
stos
mov
aam
sbb
mov
enter
xchg
jmp
push
mov
idivb
cmpsl
cmp
in
push
lods
enter
in
adc
aas
je
lods
pop
enter
mov
xchg
jecxz
das
test
sbb
mov
pop
adc
jae
test
pusha
mov
hlt
sbb
push
dec
push
in
daa
adc
or
push
test
fadd
pop
fmul
lods
iret
mov
gs
jns
and
mov
ds
bound
ja
dec
or
not
aas
jle
stc
icebp
mov
imul
into
stc
aas
jl
adc
aaa
ds
pop
pushf
scas
sub
repnz
jl
xor
xchg
rclb
inc
dec
xor
mov
movb
into
push
pushf
ret
jnp
pop
stos
xchg
out
push
out
lahf
stc
out
pop
pop
cmpsl
lods
push
jmp
push
mov
lock
repnz
iret
cmp
bound
mov
jecxz
arpl
mov
fistpl
lods
sbb
insb
lock
cmp
fidivrl
cmc
pop
pop
popa
push
push
push
cmp
adc
sub
mov
stos
sub
ss
dec
add
insb
int3
adc
and
inc
out
iret
and
sbb
movsb
inc
inc
rcr
loope
push
mov
into
cmpsl
dec
lcall
push
and
ljmp
add
insb
mov
sbb
inc
pop
xor
push
testl
fisubl
test
data16
inc
hlt
leave
push
mov
adc
lcall
rcrl
mov
iret
imul
fldenv
ljmp
xchg
cmp
loop
popa
mov
sub
push
stos
test
jae
in
out
mov
sbb
fsubp
stos
mov
inc
adc
and
and
xchg
stos
imul
pop
out
lods
rolb
or
mov
xor
dec
jbe
js
inc
xchg
nop
lret
pop
mov
jnp
leave
and
jno
cmc
fwait
xor
inc
jg
loopne
jae
test
mov
ret
decl
cs
lods
movsb
dec
scas
sbb
in
dec
pop
adc
xchg
add
push
lock
jmp
out
sub
stos
jo
push
sarl
test
test
mov
xor
pop
ss
and
add
leave
pop
cmpsl
inc
and
lcall
inc
cmp
push
and
je
xchg
adc
push
ret
idivl
movsl
je
jae
test
fsubr
aas
in
adc
inc
imul
mov
out
push
in
nop
ss
push
mov
loop
push
mov
insl
inc
jb
jg
push
xchg
daa
shlb
cmp
repnz
mov
sahf
dec
ret
mov
and
adc
pop
sub
adc
dec
xor
cmpb
pushf
nop
stos
scas
add
sahf
dec
jecxz
cmp
nop
aas
jns
gs
arpl
push
xor
bnd
or
js
inc
fildll
fs
jnp
push
pop
ret
stc
sbbb
and
ficoml
mov
mov
scas
scas
les
fwait
push
hlt
pop
ja
inc
fs
lcall
push
add
push
test
mov
out
out
jne
es
xor
icebp
in
dec
or
test
sub
repz
push
push
mov
arpl
sub
cs
mov
and
rclb
lods
pop
push
jg
jge,pt
int
push
pop
and
testb
das
jb
pop
and
les
sub
pop
andl
in
mov
ss
aad
fs
rcrl
and
test
nop
mov
dec
mov
test
and
xor
scas
test
cmp
clc
insb
outsb
fidivrl
pop
and
jbe
cmc
push
mov
out
mov
jmp
adc
pop
or
test
pop
mov
int3
fwait
xor
mov
iret
les
test
dec
dec
sbb
push
scas
adc
insl
jmp
movb
cwtl
xchg
lcall
inc
mov
ljmp
clc
cmp
mov
pop
sbb
mov
pop
mov
sbb
mov
cmp
cld
inc
fldl
mov
mov
mov
adc
adc
push
adc
push
pushf
push
pop
mov
jecxz
test
iret
adc
ret
fwait
icebp
je
mov
cmpsb
and
mov
jmp
fidivrs
xlat
sbb
enter
sbb
jne
jg
test
mov
lods
push
sub
mov
mov
mov
outsl
js
imul
movsl
popf
sarb
wbinvd
and
mov
mov
repz
or
ja
mov
xor
push
test
xchg
add
in
cwtl
into
es
aad
iret
inc
call
imul
jp
mov
out
mov
call
scas
imul
jno
mov
jno
imul
sahf
inc
cld
jp
xchg
scas
mov
or
cmpsb
les
jle
jle
insb
repnz
loope
int3
popf
int3
or
sahf
xchg
push
adc
cmp
add
jp
xor
mov
or
xchg
stos
daa
push
ljmp
int
jmp
out
and
inc
nop
or
push
out
add
pop
ss
and
bound
jmp
lcall
je
mov
push
jg
cmp
jnp
inc
testl
pop
std
popa
jle
xchg
sbb
into
dec
pop
push
mov
xchg
and
add
ss
push
call
jge
aad
pop
lcall
dec
add
sub
js
mov
fbld
fiadds
sub
jg
cltd
push
insl
out
sbb
cmc
imul
nop
enter
adc
aas
xchg
fstpl
stos
lods
mov
fwait
repz
xchg
stos
inc
sbb
mov
cmp
je
mov
push
adc
test
sub
or
loope
sbb
mov
mov
pop
stos
rclb
aaa
xchg
in
dec
test
mov
je
or
mov
test
fisubs
lret
adc
mov
mov
fildll
mov
jg
jmp
pop
stc
mov
test
push
and
mov
stos
jo
inc
out
hlt
nop
pusha
cltd
pusha
mov
outsl
mov
mov
lea
fisttps
jne
fsubs
sti
test
pop
xchg
adc
or
aad
rcrl
aam
leave
xor
out
cmp
cltd
or
scas
in
sbb
xor
loopne
lods
fiaddl
daa
xor
ljmp
lcall
filds
dec
int
add
out
fisubs
jmp
xor
and
adc
sbb
lea
popa
fimuls
sti
clc
leave
dec
sbb
cmp
jle
ret
dec
or
aam
sub
add
test
pop
jl
add
je
jbe
or
push
movsl
xchg
dec
cltd
dec
mov
pop
dec
jbe
lods
mov
xchg
push
mov
mov
cmp
cmpsb
insl
or
in
das
or
mov
in
add
and
adc
call
ret
mov
or
jbe
cmp
ljmp
sti
jae
adc
adcb
cli
pushf
push
jg
sub
xchg
jl
and
dec
adc
stos
mov
dec
mov
jmp
das
add
sub
jb
cltd
xchg
inc
xor
mov
imul
pop
xchg
scas
mov
sbb
xchg
movsb
push
pop
xchg
mov
mov
xchg
jge
cmp
inc
test
jno
daa
mov
or
fisttps
mov
mov
add
and
or
add
and
xchg
sbb
sub
dec
or
push
out
mov
pushf
xchg
sbb
cmp
sbb
and
sub
mov
loope
pop
out
icebp
push
sub
lea
sbb
js
mov
out
xchg
pop
mov
or
fdivl
aad
mov
lret
dec
xchg
sti
push
dec
push
push
sub
adc
xor
in
pop
jae
adc
sarb
ss
push
xor
pop
cmp
cmc
or
cmpsl
mov
sub
push
int3
fsts
into
das
mov
in
add
je
sti
push
test
in
es
bndstx
sub
adc
aas
mov
inc
repz
fnstcw
and
or
mov
lcall
mov
push
jge
jns
xorb
add
stc
in
cmpsb
adc
jne
adc
add
mov
divl
add
mov
iret
xor
jbe
loop
hlt
ljmp
fstpl
mov
cmp
ljmp
ret
mov
xchg
sub
jo
lods
imul
test
jle
lds
mov
in
je
sti
imul
icebp
xchg
fidivs
lret
jle
or
lods
xchg
fildll
scas
insl
jne
adc
cmp
and
adc
push
adc
ljmp
scas
add
pop
hlt
adcb
jl
ror
sbb
adc
loopne
cmp
fiaddl
decb
mov
jae
jb
sbb
sbb
add
add
push
aaa
mov
push
int
and
popf
sub
xchg
mov
inc
cmp
jo
xlat
out
sbb
outsl
mov
inc
push
push
repnz
pushf
fs
or
adc
sahf
push
insb
out
xchg
push
xorb
out
dec
insb
push
cmp
xor
jbe
cld
mov
nop
sbb
and
ror
jmp
fldt
cmp
fildll
icebp
cwtl
repz
ss
inc
ror
push
sbb
cmpsb
stc
ja
cmp
push
jp
ja
jmp
scas
aad
lcall
les
jb
dec
repz
or
push
pushf
in
or
sub
bound
xor
jmp
stos
push
loope
imul
cmp
push
stos
inc
push
mov
repz
sub
xchg
add
pop
push
test
scas
xchg
nop
dec
mov
mov
mov
scas
in
scas
gs
mov
xchg
pop
repnz
xor
adc
and
rcrb
dec
add
loopne
stos
and
scas
pop
lods
repz
xlat
insb
mov
sub
inc
cmp
nop
xor
call
push
jno
gs
inc
shlb
outsb
jl
cmp
out
dec
jo
test
pop
cmp
mov
lret
push
frstor
mov
and
xchg
ficoml
sbb
and
sbb
imul
lds
addb
inc
shll
insb
loop
inc
mov
loopne
jbe
mov
idivb
inc
or
jb
mov
push
shrb
jl
jl
sub
mov
mov
leave
pop
dec
and
rolb
adc
push
jns
nop
xchg
pop
pop
clc
jge
leave
dec
lods
cmp
out
lret
xor
xchg
hlt
js
pop
push
pop
loop
xor
or
mov
jb
aaa
and
insl
push
sbb
mov
mov
and
pop
mov
pop
lds
push
bound
sahf
pushf
xor
add
lea
add
xchg
call
lcall
adc
aam
xchg
jae
and
inc
in
fldl
jmp
stos
bound
icebp
push
scas
xor
inc
adcb
or
cli
mov
int3
mov
inc
mov
pusha
hlt
dec
and
ret
ss
gs
int3
adc
adc
xchg
ja
lea
movsl
in
pop
xchg
in
mov
sbb
test
jno
ror
rcl
sub
sbb
or
mov
dec
push
in
ljmp
lock
pop
ret
loope
inc
test
jbe
xchg
ffree
push
push
xchg
add
xchg
jmp
fistpll
jmp
mov
and
pop
xchg
mov
aaa
lret
imul
fs
adc
and
jb
pusha
push
sub
in
cli
xchg
into
out
push
mov
xchg
pop
inc
push
loop
stos
push
pop
sahf
in
imul
out
inc
out
dec
mov
jp
pop
cmc
sub
cmp
pop
xor
das
cmp
jns
adc
sarl
or
std
jns
adcl
add
leave
mov
shll
mov
scas
jmp
or
mov
mov
jl
jns
fisttpl
mov
adc
xchg
cmp
and
sub
add
push
and
mov
jb
mov
cmp
dec
sbb
outsl
rcll
sahf
orb
xchg
cmpsb
test
xchg
dec
int3
push
fwait
jecxz
iret
jp
loope
icebp
inc
fdivrp
sbb
jb
xor
add
adc
add
adc
dec
mov
or
mov
cld
loope
mov
loopne
cmc
push
aam
pop
and
in
aaa
mov
jle
add
and
jnp
mov
movsl
push
jecxz
cmp
xor
push
nop
scas
and
decl
mov
lods
push
daa
dec
ja
mov
jmp
mov
push
test
aaa
and
sbb
pop
nop
sub
faddl
mov
out
in
shl
movsb
pop
dec
hlt
popf
ss
test
mov
xchg
adc
ds
outsb
mov
roll
push
dec
jb
cmp
lcall
or
dec
fisttpll
and
pushf
cld
cmp
hlt
push
pop
iret
adc
add
push
test
xchg
mov
clc
sub
jbe
rcll
decl
jne
cltd
xor
sub
cmp
or
xchg
jo
loope
fdivr
inc
cmp
cmpb
iretw
sub
sbb
push
dec
fstpt
dec
or
mov
mov
sahf
inc
jmp
enter
sbb
xor
inc
sub
cwtl
inc
jbe
pop
in
mov
lahf
aas
push
xchg
lds
lcall
fcompl
imul
rolb
adc
dec
adc
movsl
xchg
outsl
mov
jecxz
mov
shl
inc
mov
outsl
cmp
call
jmp
and
cwtl
sub
or
shl
sub
mov
test
data16
fs
mov
shll
cmpl
popf
mov
pusha
das
test
mov
ret
test
sbb
cs
stos
sub
aas
fists
pop
pop
mov
push
mov
sbb
hlt
ret
addr16
push
mov
push
add
sahf
inc
ljmp
je
push
pop
scas
mov
js
mov
lock
or
mov
cmc
adc
daa
std
mov
repnz
xchg
mov
pop
push
scas
push
push
mov
stos
push
in
ja
loopne
mov
pop
jle
xor
call
and
or
push
lahf
pop
cs
jg
jecxz
fadds
std
jnp
sbb
mov
pop
lret
inc
inc
sarl
test
hlt
mov
lods
shlw
dec
repz
push
out
movsl
push
or
mov
adc
cmpsl
mov
test
or
jnp
xchg
jbe
mov
inc
stos
push
sbb
stos
arpl
adc
iret
or
nop
add
loopne
push
cld
ret
cmp
push
test
mov
lds
testl
imul
mov
xorl
mov
push
inc
lock
mov
or
lret
xor
sub
cmp
cmp
out
jge
dec
inc
mov
enter
cmpsb
ss
xchg
xchg
stos
aad
adc
je
pop
pop
aam
jne
cltd
inc
push
rorl
int
in
dec
outsb
cwtl
sbb
cmp
mov
mov
mov
in
mov
repz
push
bound
dec
in
jmp
je
pop
dec
cmpsb
mov
cmc
repz
test
aam
and
cmpsb
push
cmpsl
mov
sti
inc
mov
dec
push
inc
sbb
fs
jmp
xchg
dec
adc
mov
bound
jae
test
rcll
pop
push
pusha
mov
sbb
cmp
shll
inc
dec
jmp
xchg
aas
add
ja
cmc
nop
xchg
adc
xchg
cs
push
push
test
and
push
ds
jbe
jne
adc
movsb
sarb
adc
out
mov
into
xchg
jns
shrl
adc
movsl
scas
adcl
pusha
outsb
cltd
sbb
mov
lcall
sub
incb
adc
test
sbb
or
and
ljmp
xchg
adc
push
adc
mov
hlt
inc
adc
push
cmp
xor
xor
lea
mov
dec
aaa
xchg
sub
movsb
pop
fdivr
aas
stc
adc
and
push
push
jecxz
ret
call
movsb
mov
fsubrs
push
jo
daa
add
jecxz
pop
mov
sbbl
cli
insl
filds
outsb
fsubrl
fwait
jae
xor
add
mov
in
iret
ror
and
insb
out
sub
push
jne
ljmp
bound
pushf
inc
adc
cmp
stos
and
mov
pop
add
push
daa
movsl
dec
in
sbb
dec
cmpsl
mov
lock
mov
xor
movsl
and
xor
dec
test
push
and
and
aas
mov
adc
push
imul
sarl
mov
and
cmpsl
pop
add
mov
mov
push
mov
cmp
adc
jno
iret
sub
jmp
and
shrl
movsl
cmp
das
sbb
repnz
xchg
out
sahf
aam
xchg
add
xchg
jae
sub
cmp
mov
aas
cmpsl
rcl
out
and
ja
cmpb
jns
mov
inc
repnz
mov
sbbl
dec
xor
aaa
js,pt
add
jecxz
adcb
lods
and
mov
jl
jg
stos
add
hlt
js
mov
cmp
cld
or
or
call
enter
loope
leave
daa
pop
js
inc
ss
sub
in
outsb
andl
xor
or
jae
stc
push
push
in
sub
addr16
lret
flds
popf
xor
repnz
xor
hlt
mov
ds
iret
sarl
clc
mov
mov
push
test
clc
scas
stos
test
push
sub
push
push
push
xchg
out
adc
or
js
je
inc
scas
xor
shll
inc
mov
sub
dec
jbe
lds
int3
fucomp
js
mov
cmp
push
outsb
into
inc
adc
xor
stc
popa
idivb
mov
adc
xchg
and
sar
adc
lcall
sub
jecxz
sub
sub
mov
lods
dec
incl
addr16
lret
adc
pop
mov
imul
popl
out
andb
repnz
je
loopne
loopne
xchg
sbb
pop
xchg
push
out
loop
lods
jp
ds
sbb
pusha
inc
and
mov
mov
aad
repz
mov
inc
inc
or
outsl
scas
popa
and
std
popa
scas
inc
sbb
aam
lcall
push
andb
shr
jns
adc
lcall
fwait
popa
dec
add
clc
xchg
mov
mov
push
daa
outsb
mov
push
stc
cmc
out
adc
stc
mov
cmp
dec
adc
inc
icebp
push
cmp
es
ljmp
mov
pop
mov
dec
ret
repnz
inc
mov
add
ds
ficoms
mov
xor
lea
test
loopne
call
bound
es
popa
into
sbb
push
push
mov
fwait
dec
and
imul
dec
jp
sbb
xchg
sub
xchg
or
fildl
mov
loop
adc
lds
mov
into
js
lds
inc
push
mov
pop
loope
testb
jne
shlb
dec
and
dec
ja
les
sub
jecxz
hlt
push
aad
mov
cmp
jae
mov
inc
sarl
dec
xchg
push
psubsw
pop
push
int3
add
pop
std
dec
cmp
icebp
in
jge
push
adc
ret
inc
pop
cmpsb
adc
mov
jmp
jnp
jns
int3
and
inc
icebp
int
inc
sbb
shlb
ret
sti
mov
aad
nop
xchg
daa
aam
fs
lahf
jl
mov
int
sbb
add
jo
inc
hlt
mov
jbe
pop
push
loop
cli
add
rolb
test
xchg
mov
cmpsl
sti
xor
xor
or
xchg
es
push
jg
es
outsl
mov
sub
mov
sbb
mov
mov
cwtl
mov
or
cs
je
xchg
and
ficomps
adc
fsubs
add
xor
or
ljmp
inc
push
loop
enter
dec
or
adc
add
addr16
aad
sbb
ds
outsb
jle
lods
jp
jmp
mov
mov
inc
movsl
in
call
aam
aas
loope
pop
fnstenv
ret
push
pusha
ljmp
push
xor
andl
lods
scas
pop
out
inc
imul
insb
sarl
clc
fistps
sbb
cmp
sub
dec
jl
insb
cltd
xor
add
xor
push
stc
add
mov
push
cltd
pop
mov
enter
cwtl
pop
pusha
xchg
clc
cmpsl
scas
repz
pop
in
cltd
mov
lods
mov
jno
xchg
cmpsb
sbb
mov
in
push
insl
test
push
or
dec
pop
fidivrs
mov
test
or
and
rcr
sbb
int3
test
data16
xchg
out
aam
cmp
push
jecxz
or
call
pop
and
mov
xchg
sbb
xor
into
mov
cmpsl
push
test
fisttpll
mov
call
mov
sub
and
push
inc
add
pop
jecxz
mov
insb
mov
lret
push
je
cld
push
push
xor
fdivl
mov
inc
adc
out
repz
cmp
sub
int3
lcall
xlat
pop
and
xor
sbb
int3
scas
mov
stc
push
xor
sbb
pop
mov
cmp
out
pushf
add
mov
xlat
push
shlb
cltd
dec
stos
and
cwtl
inc
outsb
testl
mov
rcrl
jns
lret
lds
add
sub
sub
push
inc
cmc
xor
popa
repnz
adc
adc
ds
inc
shrl
or
jbe
cltd
add
fildl
mov
cs
ret
loope
pop
dec
sub
xor
js
sbbb
add
lret
xor
mov
mov
fsubrl
jl
outsb
bound
aam
xor
pop
enter
or
in
gs
cmc
filds
mov
push
in
add
and
dec
xor
loop
in
push
stos
sub
inc
fwait
cwtl
adc
adc
and
jl
push
mov
aam
jg
xchg
xor
test
and
sbb
jmp
and
scas
push
mov
js
insl
mov
mov
pop
fldenv
mov
cmpsb
fcmovu
test
outsl
subb
call
xchg
ret
sbb
aam
pop
push
inc
stos
jl
add
fldenv
jmp
xchg
add
jne
xor
dec
mov
xchg
sub
jg
mov
pop
mov
push
gs
xlat
addb
popl
aas
pusha
jg
test
pushf
push
or
jecxz
test
mov
or
lds
sti
pop
imul
jl
jae
divl
mov
jno
out
nop
add
mov
mov
mov
push
and
hlt
dec
les
in
inc
and
push
jecxz
push
out
jl
rol
icebp
ds
aam
inc
sub
clc
cmpsb
fsubl
fwait
pop
lods
jl
jo
dec
sub
or
mov
xor
cli
sti
data16
imull
sbb
jno
aad
cmpsb
mov
iret
lds
nop
push
js
push
std
push
add
push
sbb
push
push
mov
addr16
mov
jmp
sahf
flds
jns
fnstenv
test
push
mov
xchg
jae
je
sbb
pop
scas
jnp
pop
sbb
sbb
and
aas
and
push
push
cmpsl
sub
ds
add
jbe
out
loope
aaa
sahf
fs
pushf
arpl
dec
fidivl
out
xchg
push
or
mov
shrb
dec
or
ret
jmp
sub
daa
or
insb
dec
mov
mov
fwait
xlat
movsl
repnz
rorb
popf
dec
int3
mov
mov
cmp
and
imul
mov
xchg
jb
lret
inc
add
scas
adc
xor
push
les
cmp
aas
fstpl
in
dec
mov
stc
dec
scas
dec
add
out
or
es
mov
cmpsb
and
xorl
int3
pop
gs
mov
sbb
mov
push
mov
dec
add
sub
inc
fisubl
dec
push
inc
loopne
fdiv
int
daa
sub
pop
in
mov
pop
inc
adc
lods
test
fld
fsubl
xor
mov
fstpt
push
addr16
inc
lret
xor
loopne
sbb
scas
mov
lods
cmp
stos
cs
lods
jne
data16
dec
push
push
cmp
test
mov
nop
sub
sub
adc
jecxz
sbb
and
cltd
fisttpll
imul
lods
mov
mov
xchg
fisttpl
out
cmp
insl
jecxz
pop
xchg
out
bound
hlt
cmp
outsl
aad
loope
mov
or
clc
inc
xchg
push
adc
fwait
add
mov
dec
sub
hlt
movsb
or
in
cmp
or
data16
outsl
fadd
les
lea
mov
pop
xor
lahf
ffreep
mov
scas
add
mov
sbbl
mov
mov
push
cmp
jo
lea
js
pop
cmp
scas
and
push
iret
or
or
lods
jle
cmp
sub
push
mov
repnz
hlt
mov
shrb
and
into
xchg
push
sbb
dec
push
dec
xor
repnz
jb
adc
pop
scas
das
push
in
ret
and
xlat
std
sub
sbb
jnp
cmpsb
jnp
leave
add
out
cmp
into
or
outsb
cs
incb
inc
std
into
pusha
push
sub
out
daa
andb
mov
addr16
sbb
lds
xchg
lahf
ss
jg
sti
xchg
adcl
stos
pop
xor
sub
mov
ret
mov
cmp
loop
sub
call
push
and
shrb
pop
xchg
mov
inc
test
mov
or
or
call
cmc
in
xor
fxch
out
hlt
lret
jb
gs
shlb
leave
lret
jno
mov
mov
test
outsb
not
mov
insl
stos
cmpb
iret
jl
fadds
aaa
fs
adc
ljmp
lret
repz
subb
xor
pop
enter
aam
lods
inc
dec
add
into
sbb
push
psubsw
arpl
adc
movsl
lret
lcall
sub
in
and
ss
jp
adc
imul
pop
jle
jo
xchg
pop
ret
xchg
ret
inc
or
fsts
inc
repnz
add
mov
aam
sub
call
mov
pop
fsubs
mov
out
xorb
out
dec
mov
insb
or
jnp
ds
pusha
mov
mov
jns
aaa
sbb
xchg
popa
or
aas
mov
inc
clc
inc
jmp
cmpsb
into
push
cmp
aam
pop
or
or
stos
mov
xor
rcrb
mov
xlat
add
loope
mov
clc
in
popa
inc
sbb
movsl
mov
cli
rorb
push
rorl
sbb
push
mov
push
call
dec
pushf
rcrl
out
mov
dec
pop
sub
in
fwait
add
push
scas
lea
mov
mov
and
dec
pop
and
push
xchg
mov
jle
pop
xchg
mov
iret
add
push
js
inc
in
movsl
xchg
dec
push
bound
aam
dec
adc
inc
les
xchg
adc
cmp
xchg
aam
pusha
fldt
shll
xchg
shlb
mov
or
fmul
adc
aam
cmp
daa
pop
mov
rcl
scas
dec
pusha
cli
jnp
adc
out
mov
into
jne
repz
cmpsb
std
sarl
push
mov
sbb
gs
mov
out
in
sub
cwtl
cmp
cmp
cmp
jne
data16
rolw
in
in
pop
rclb
sub
cltd
push
push
jae
rorb
jge
movsb
cmpsb
sub
call
lds
fistl
std
in
jl
iret
fidivl
movsb
bound
lret
test
daa
cld
out
int
loop
xchg
orb
jecxz
mov
sbb
inc
stos
pop
sbb
push
fs
lea
popf
pop
orl
mov
jp
stos
dec
test
pop
and
ret
int
jnp
inc
mov
jecxz
nop
add
mov
and
xor
xor
pop
push
in
lods
inc
sbb
push
cmp
pop
test
push
flds
add
das
xor
icebp
stc
or
jle
nop
mov
int
cmp
insl
adc
inc
adc
mov
inc
inc
push
arpl
adcl
out
fsub
inc
pcmpgtd
out
pop
adc
sub
bound
and
mov
gs
movsb
pop
jb
and
jle
xchg
cmp
insb
fstp
jl
pop
push
inc
pushf
aas
jbe
pop
pop
jae
in
add
or
cli
or
add
add
xor
jno
sbb
popa
jnp
adc
mov
adc
cmpsb
imul
sahf
xor
mov
mov
mov
mov
lret
mov
jecxz
cmp
cmpsl
outsb
movsl
xor
xchg
xor
cmpsl
mov
pop
cmp
add
sti
add
push
mov
das
enter
push
pop
movsl
jae
cmp
pop
sub
push
in
add
cmc
jg
in
out
pop
dec
imul
lods
cwtl
add
fwait
mov
dec
mov
push
mov
xchg
mov
notl
pop
das
ljmp
les
dec
mov
xor
or
ja
shlb
inc
or
daa
dec
icebp
fnsave
pop
out
pop
jne
pusha
mov
dec
and
add
mov
inc
xchg
dec
jns
mov
lcall
out
cmp
jbe
pushf
imul
das
lcall
imul
xchg
jae
fcmovnu
int
hlt
decl
cmp
int
xor
hlt
push
push
fwait
mov
jle
mov
mov
popa
mov
xor
into
mov
mov
pop
mov
mov
cs
add
jnp
or
xor
movsl
mov
pop
add
sahf
pushw
pop
mov
sbb
sbb
enter
das
jl
cmp
dec
push
mov
xchg
mov
lods
pop
fcomip
mov
sbb
cmp
jge
in
in
xor
cltd
jb
das
in
mov
outsb
fnstcw
insb
push
jg
sub
jp
and
into
andb
call
and
enter
xchg
xchg
mov
mov
vmwrite
in
je
push
addb
mov
jl
xchg
dec
sti
and
pop
jnp
into
or
jecxz
addr16
jnp
lret
ret
jmp
add
mov
pop
xchg
xor
lcall
jno
imull
ljmp
xor
test
cli
and
pop
in
cmc
sar
jae
cmpl
dec
mov
xlat
jmp
push
pop
lock
dec
aad
cmpsb
jae
inc
mov
rorb
ret
mov
rep
rorb
mov
dec
add
inc
imul
jo
jno
popa
lcall
shr
mov
cmpsb
shll
daa
pusha
movsl
pop
sbb
out
jmp
sbb
call
push
xchg
orb
hlt
mov
cmc
mov
push
je
dec
pop
add
xchg
test
test
jnp
pop
and
lods
outsl
mov
scas
pop
fst
dec
sbb
sub
mov
test
pop
dec
jg
pop
jo
lock
sbb
adc
mov
lea
sub
inc
stc
sbb
icebp
fwait
xchg
jp
ds
sarl
or
mov
xor
cmp
and
push
push
ljmp
inc
mov
lods
fists
adc
cmp
test
gs
lret
push
pop
mov
fldt
ret
xchg
imul
cmpsl
ja
test
adc
xchg
push
mov
popa
cmp
stc
dec
sub
or
add
or
mov
or
xchg
push
cld
scas
cmc
add
cmp
out
mov
shll
mov
loope
jbe
push
sub
int3
jo
add
int
out
pop
mov
testl
imul
xchg
jge
jns
std
xor
jle
popf
call
xorb
mov
mov
cmp
lods
mov
adcb
dec
cwtl
push
popf
xorl
dec
cmp
cld
nopl
cmp
jnp
jmp
dec
add
or
rcrb
cmp
add
mov
sbb
das
xchg
pop
pop
mov
int3
inc
mov
repz
adc
dec
sub
ret
aad
movb
enter
and
decl
mov
push
js
or
mov
inc
sub
push
push
mov
xchg
jnp
int
imul
inc
dec
xchg
movsb
fildll
dec
fildll
das
sti
cmp
test
xor
adc
mov
lods
daa
out
sub
lret
ret
xor
out
outsl
mov
mov
cld
iret
mov
xor
mov
mov
inc
xchg
dec
lea
dec
cmp
faddl
out
movsb
push
pop
in
aad
sub
mov
sub
push
mov
inc
xchg
adc
movsl
ret
into
stos
sbb
and
fidivrs
inc
mov
xor
pushf
sub
xchg
lret
ret
ret
adc
punpckldq
pop
inc
ret
xchg
popf
insb
pushw
shlb
shrl
jae
adc
pop
pop
aaa
xor
fdiv
pop
push
ds
sbbb
and
data16
loopne
leave
mov
jl
pop
pop
mov
sbb
hlt
push
push
or
into
sbb
cmpsl
outsl
dec
mov
push
fsubrl
sar
clc
pop
movsl
imul
pminsw
test
call
pop
imull
sub
fucomp
dec
cld
inc
mov
adc
popf
int3
adc
lds
or
sub
pop
ja
mov
imul
pop
sub
jo
xlat
dec
push
into
push
int3
inc
dec
dec
pop
xchg
mov
mov
xor
push
test
xor
pop
icebp
mov
sub
xor
sbb
sarl
pop
arpl
dec
bound
lods
cld
jmp
xchg
ret
cwtl
mov
iret
outsb
lahf
jp
test
xchg
iret
mov
cltd
cmpsb
pop
adc
mov
cmp
and
xor
adc
sbb
or
and
adc
cmp
into
pop
ljmp
aas
cwtl
push
aam
jle
or
nop
in
in
mov
lea
xor
or
sbb
inc
add
in
ret
scas
adc
pop
fwait
roll
movups
ret
adc
xor
mov
fwait
popl
mov
push
pop
xor
push
fdivrl
lods
mov
test
in
xchg
insb
rorb
push
mov
inc
arpl
sbb
mov
mov
push
jbe
inc
xor
cmp
lcall
loope
mov
inc
mull
outsb
ds
mov
je
and
xchg
lret
fs
dec
sti
xchg
sbb
mov
mov
mov
subb
fisubrl
or
imul
dec
mov
adc
stc
cmp
xorl
popf
push
push
ja
pop
push
mov
mov
sub
xor
inc
enter
negb
mov
pusha
push
rcll
popa
jmp
pushf
lahf
push
push
addr16
pop
call
push
lahf
movsb
gs
cwtl
jns
inc
xor
xchg
push
cli
pushaw
into
sub
dec
mov
or
jp
lea
adcl
inc
cs
outsl
dec
shl
sub
movsb
mov
push
stc
cmc
push
into
and
adc
filds
mov
cmpsl
cmp
mov
mov
inc
xchg
mov
rcrb
int
cmpsb
cltd
mov
xchg
push
adc
push
movsl
push
shlb
xor
mov
mov
scas
dec
sbb
add
fidivl
push
mov
add
xor
aad
js
jae
jns
adc
push
test
sub
jg
adc
outsb
adc
into
pusha
mov
cs
add
test
and
stos
subl
jo
div
lea
add
pop
jecxz
jmp
or
out
aam
xor
jecxz
test
jp
mov
mov
mov
lods
jecxz
xchg
push
xchg
pusha
push
scas
imul
std
bound
cs
imul
adc
add
and
dec
jg
xchg
adc
or
outsb
cltd
push
adc
les
in
push
mov
dec
jns
cmp
sahf
icebp
cwtl
mov
xor
mov
leave
div
dec
xchg
dec
insb
xchg
push
mov
sbbl
mov
pop
jmp
mov
cmp
test
ret
sub
insl
iret
popf
arpl
aam
fnop
push
jo
call
dec
cmp
cmp
fsubs
lds
mov
sub
fildll
sbb
pop
push
cwtl
jl
cmp
jne
mov
loop
or
and
ret
add
dec
xchg
xacquire
rorl
fstps
mov
mov
adc
test
push
pop
add
fldcw
and
mov
mov
ret
push
cmpsb
sub
and
insl
jae
push
add
inc
cmp
ljmp
cmp
outsb
lahf
notb
dec
shrl
push
sub
popf
mov
push
jo
and
cmp
jo
into
jge
mov
adc
mov
push
int
or
mov
addr16
mov
jbe
inc
loopne
daa
or
add
cmp
mov
sub
inc
mov
pop
scas
jns
mov
out
fsubrl
xlat
lods
pop
mov
test
cmpsl
pop
in
pushl
add
sbb
repz
shrl
mov
insb
in
ret
aam
dec
and
add
mov
enter
aas
lret
push
pop
sbb
das
xchg
push
jnp
test
ss
cmpsb
pop
cmp
hlt
or
and
dec
push
sub
jmp
push
int3
lcall
inc
jns
imul
xchg
jge
fs
pusha
test
push
ds
adc
jecxz
nop
outsb
int
repnz
shrb
repnz
or
and
inc
dec
test
xchg
loopne
push
lea
push
jle
mov
push
fdiv
pusha
cmp
cmp
insb
mov
cmpb
pusha
xorb
jmp
adc
dec
rorl
adcb
push
xor
hlt
or
inc
fcmovbe
push
insb
je
push
dec
nop
adc
test
mov
int3
push
fwait
out
mov
dec
mov
xchg
mov
je
int
bound
mov
pop
aam
psllq
lds
inc
and
repnz
push
mov
lret
fst
adc
xchg
outsl
jne
jmp
xor
testl
fwait
imul
push
lock
pusha
dec
add
dec
imul
sahf
in
mov
adc
push
lahf
sbb
cmp
jp
jb
js
movsl
pushf
jp
int3
ficoml
jmp
mov
pop
mov
cmp
sub
jl
lcall
xchg
cwtl
mov
insl
sbb
in
mov
imul
jl
lret
mov
adc
inc
adc
dec
add
and
sub
jecxz
stos
popa
push
sbb
les
mov
xchg
call
fwait
rol
out
xchg
jne
mov
xchg
adc
and
pop
fildll
xor
add
dec
sub
in
in
pop
add
mov
lock
or
test
sub
inc
push
xchg
ja
xchg
out
icebp
xor
fcoms
mov
hlt
scas
add
mov
adc
jl
mov
sbbb
add
or
adc
xor
add
sub
iret
and
fsubl
pop
or
ds
mov
cwtl
mov
test
push
xchg
or
xchg
push
cmc
cmc
jle
shlb
cli
mov
dec
jmp
lods
pushf
mov
pop
mov
ret
jbe
adc
lret
lcall
loop
pop
adc
push
in
inc
inc
out
outsl
repnz
sbb
pop
xchg
adc
hlt
and
imul
js
mov
cmpsb
pop
dec
test
test
shl
sbb
insb
fidivrl
pushf
cmp
stos
notl
test
in
sbb
neg
out
xor
movsb
fsub
ja
cmpsb
fsubr
nop
push
mov
dec
das
mov
xor
dec
pusha
pop
mov
mov
xor
adc
lods
out
aas
pop
sub
dec
xchg
add
flds
mov
xor
mov
loopne
mov
lods
and
flds
sub
jge
jmp
xor
sbb
les
sbb
movsb
fs
cltd
xchg
aaa
xchg
out
rclb
and
sbb
ret
jbe
data16
push
sub
out
jecxz
cmc
es
sub
sub
mov
push
or
sar
lds
jl
sub
fnsave
push
addr16
ljmp
push
dec
iret
add
cmp
mov
out
sbb
push
out
xchg
cmc
ds
test
call
xchg
sbb
xchg
push
ret
cli
adc
jp
xchg
outsl
mov
cmp
push
dec
mov
sub
add
xchg
dec
in
or
aad
xor
fisubl
pop
out
clc
das
sub
jne
push
adc
sahf
xchg
push
sarl
mov
shl
mov
or
testb
call
jbe
mov
fmul
int3
shll
pushf
push
pop
push
orb
inc
add
sbb
xor
sbb
and
pcmpeqd
cwtl
leave
inc
shll
clc
int3
dec
or
pop
popf
popa
or
ret
xchg
adc
xchg
jg
aam
dec
push
jae
sti
cs
adc
mov
icebp
push
sub
adc
sub
push
mov
mov
testb
icebp
adc
fcoms
lods
push
add
mov
cmp
jp
dec
cmpb
push
push
ret
sbb
pop
pop
pop
outsl
mov
sub
loop
push
jae
ret
je
or
repnz
arpl
cvtps2pi
and
push
cmp
pop
ret
rolb
jmp
jb
inc
inc
push
hlt
sub
pop
mov
cmp
outsl
fimuls
std
addl
or
in
inc
aam
in
negl
out
faddl
jp
pop
icebp
je
mov
pop
lahf
mov
nop
ror
sti
jbe
repz
popa
imul
dec
popa
lcall
and
cld
jle
mov
pop
int
test
scas
iret
xorl
std
icebp
cli
inc
movswl
stc
pop
imul
dec
cmovnp
mov
and
loop
inc
daa
clc
sti
xor
popa
rcrl
mov
inc
add
dec
inc
mov
jne
inc
movb
inc
xor
jl
cltd
adc
test
out
and
test
xchg
sarb
adc
imul
pop
out
popf
dec
jb
cltd
sub
call
cltd
xchg
out
mov
mov
scas
mov
pop
imul
inc
sub
or
leave
call
das
jnp
in
in
jg
push
int3
call
xor
add
adc
movsl
rorb
imul
cmp
shl
jnp
pop
lds
cmpsb
xchg
adcl
adc
dec
and
pushf
scas
inc
lds
outsl
scas
cmp
mov
add
in
iret
stos
stos
jno
or
xchg
sub
test
jg
fdivr
push
hlt
sbb
fisttpl
insb
adcb
mov
int
lret
sbb
in
ja
shll
cwtl
push
dec
ds
xor
jl
aad
rcrb
cmp
stc
pushf
outsb
movsb
pop
add
jno
or
out
adc
xchg
adc
mov
ret
rol
mov
lods
jge
arpl
mov
xchg
bound
cmp
loop
addb
pop
push
in
pop
or
and
std
lods
pop
movsb
xor
lods
inc
pop
adc
or
gs
mov
xor
add
push
add
mov
jne
lods
lock
xchg
xchg
mov
cmc
filds
dec
jle
lea
xor
mov
adc
xchg
imul
mov
loopne
subb
imul
or
cmp
mov
adc
out
and
fsubrs
outsb
mov
mov
divl
insb
sub
stc
adc
add
testl
sbb
lahf
test
sub
cmp
test
sub
jns
push
sub
sub
adcb
gs
cltd
shrl
adc
and
adc
pop
stc
scas
es
leave
sub
jne
jbe
cwtl
fidivrs
rclb
sbb
push
aam
push
cld
mov
push
mov
pop
dec
pop
xor
add
mov
jo
cmp
or
ret
jno
mov
imul
pop
mov
xchg
test
test
pusha
aas
pop
andb
pop
add
and
adc
shl
aad
movsb
lahf
sbb
adcb
aaa
push
cmp
or
les
inc
fdivrs
in
adc
push
leave
push
push
mov
add
fdivrp
insl
push
add
cmpb
flds
ret
adc
loope
fs
in
mov
adc
sbb
jae
pop
xchg
or
in
or
lds
push
inc
iret
add
sub
aad
jbe
or
rorb
leave
call
lcall
jle
cmp
jmp
push
xor
jmp
dec
lcall
or
xor
loope
and
dec
or
xchg
jle
push
mulb
fwait
cs
int3
jle
cmp
ret
jne
mov
dec
scas
mov
jmp
aam
pop
mull
cmp
lahf
loop
insl
es
pusha
out
mov
adc
mov
cmp
cld
movsb
fists
jns
cmp
add
int3
mov
push
sbb
jge
mov
and
lock
xor
xchg
adc
inc
outsl
orl
shlb
cmp
aam
mov
cmpb
jp
xchg
lds
adc
push
or
sahf
sbb
xor
aaa
cli
into
pop
lds
xor
add
sub
movsl
jp
push
iret
mov
or
pop
mov
pusha
stos
popf
push
adc
pop
or
mov
sub
or
adc
sarb
insl
xchg
test
or
subl
inc
in
daa
movsl
and
fwait
nop
inc
cmp
mov
outsb
pop
jecxz
lcall
sbb
loopne
pop
dec
dec
loop
popa
arpl
cwtl
mov
je
cmp
dec
test
cmp
dec
lcall
xlat
out
outsb
mov
xchg
mov
jb
mov
int
mov
pop
mov
sbb
testb
jp
dec
jno
inc
jecxz
mov
jl
cltd
popl
stos
and
sbb
fmul
pushf
fsubr
mov
aad
mov
xchg
dec
std
or
fisubs
cli
push
jg
fimuls
sbb
jl
sbb
push
ss
inc
and
mov
xchg
sar
fwait
scas
cmp
fstl
mov
adc
add
loopne
sbb
sub
add
push
fs
cltd
and
std
inc
cli
rcrb
pop
dec
out
fbstp
sbb
pusha
add
mov
cmpsb
xchg
out
mov
mov
imul
jno
popl
xor
fsubs
int3
adc
and
sub
add
imul
and
jg
int3
mov
out
push
testl
aas
add
sub
inc
es
clc
int3
sub
dec
aam
addr16
in
idivb
imul
iret
out
sahf
dec
and
mov
shlb
cmpsl
fwait
xlat
fmuls
pop
inc
mov
mov
movl
add
cwtl
push
xchg
mov
and
mov
fisubrs
xchg
add
popf
and
bnd
dec
scas
ja
dec
sub
test
pop
movsb
adc
adc
stc
jbe
or
mov
mov
pusha
lods
mov
and
xlat
jmp
push
pop
gs
lods
mov
mov
inc
insb
sti
rcll
xchg
mov
cmpsb
ret
sub
mov
push
mov
push
pop
jmp
jbe
dec
mov
fidivrs
cld
fsubl
add
pusha
sub
jno
mov
xchg
aad
ljmp
push
cmp
dec
ficoms
pop
aam
mov
lea
sub
fdivrl
jecxz
std
rolb
roll
jg
pop
sti
mov
sbb
dec
sub
jno
or
cmp
subb
dec
jl
or
loope
push
xor
pop
cli
ret
outsl
jg
imul
or
xchg
xchg
cltd
pop
jae
rcrl
scas
cmp
int3
outsb
xchg
mov
fucom
push
sub
mov
movsb
pop
xlat
movsl
pop
pop
xchg
fisubs
push
cli
jae
repz
jae
divb
repz
sahf
popf
lret
or
dec
ljmp
ret
je
jp
lret
adc
pop
jns
push
cli
jle
sti
ljmp
sbb
cmp
pop
mov
adc
outsb
jnp
fisubl
adc
adc
lods
lret
pop
test
cli
sub
pop
clc
aas
adc
lods
xchg
icebp
jge
cmp
and
xor
pushf
mov
fsubs
imul
test
fidivs
mov
loopne
popa
and
mov
fmul
ror
push
xchg
outsb
repnz
mov
add
or
in
or
adc
shrb
and
sbb
fmuls
test
mov
ficoms
pop
in
sub
mov
push
mov
bnd
pop
xchg
int3
out
popa
mov
js
mov
and
jl
and
sub
ss
filds
into
sbb
sub
sar
scas
out
ds
popl
xchg
nop
mov
pop
ss
xchg
jmp
mov
push
mulb
lret
movsb
cwtl
inc
or
xchg
std
movsl
repz
jl
dec
test
cwtl
inc
or
push
or
push
scas
loop
aam
push
pop
stc
adcl
pop
sub
sub
mov
mov
add
add
xchg
aas
cltd
xchg
sbb
aad
and
mov
sbb
mov
popf
sbb
mov
or
jbe
scas
test
xchg
dec
pop
or
and
arpl
cmp
pop
inc
mov
sti
push
lock
xchg
xchg
sub
inc
dec
push
iret
aad
out
idivb
pop
sbb
xchg
shlb
outsb
iret
jae
xorl
test
mov
iret
fimuls
push
cmp
fwait
cmp
shrb
inc
or
scas
adc
aaa
add
movsl
ss
fisubrs
push
dec
out
mov
jecxz
lcall
lret
mov
mov
out
pop
jb
mov
dec
add
xchg
adc
or
mov
shlb
test
scas
dec
or
sahf
mov
cmp
cmp
cwtl
mov
and
xchg
mov
scas
out
js
cld
fdivr
adcb
mov
roll
mov
dec
inc
loopne
rclb
adc
mov
and
xor
pop
adcb
and
movsl
cmp
int3
sub
pushf
and
aam
cmp
jmp
enter
mov
mov
addr16
je
xor
mov
std
repz
jmp
stos
add
mov
sbb
dec
add
rol
xor
mov
add
fdivrl
add
xchg
sub
hlt
sbb
sbb
pop
pop
imul
mov
mov
push
cmpsb
roll
negb
add
vpavgb
xlat
xorl
pusha
stos
sub
or
ret
and
jl
lcall
and
xor
dec
cmp
std
test
clc
sub
or
pusha
out
testl
xchg
pushl
rcr
jnp
push
sbb
mov
lahf
scas
scas
jle
pop
jb
aad
mov
outsl
xor
shr
inc
test
loop
sahf
punpcklbw
cmpsb
mov
aad
add
mov
ret
scas
subb
and
inc
mov
or
mov
aas
addr16
add
rcrl
adc
jns
das
xlat
jb
pop
out
pushf
fdivrl
loop
lods
popf
loopne
mov
mov
sahf
fsts
mov
fwait
pop
jg
int
ret
or
incl
sbb
xchg
ljmp
test
adc
in
sbb
adc
mov
cmp
sub
divb
push
mov
repz
roll
or
xchg
sub
enter
enter
test
scas
cmpsl
pop
sub
fs
cmp
pop
sub
or
xor
imul
xor
scas
mov
jnp
mov
lahf
adc
push
ret
call
rclb
adc
jge
mov
test
jge
mov
retw
jne
dec
mov
push
in
test
ljmp
pop
repnz
loope
mov
add
js
lcall
enter
mov
lds
test
in
push
hlt
or
push
cld
cs
insb
mov
cld
fidivs
sub
and
mov
adcl
mull
popa
cmc
adc
sahf
mov
push
inc
mov
xor
lods
or
and
or
sbb
imul
push
inc
jg
mov
jns
jl
outsl
xor
push
xor
iret
cvtpi2pd
jmp
adcl
push
das
stc
rcrl
mov
lcall
inc
mov
cmpsb
mov
data16
loopne
sahf
test
mov
cli
lods
out
sahf
adc
cmpsb
pop
adc
fldcw
jnp
ret
mov
mov
std
or
std
aam
stc
mov
jne
and
fidivl
jns
enter
and
shlb
addr16
mov
lods
push
rolb
js
pop
into
stos
xor
or
jne
ljmp
sbbl
insb
mov
sahf
mov
shll
cmpsl
gs
mov
xchg
rcr
or
icebp
sbb
cmp
push
imul
lcall
orb
sbb
outsb
adc
mov
xor
dec
inc
add
js
decb
testl
in
insb
addr16
xchg
shr
xchg
xlat
sbb
cmp
in
adc
push
mulb
int3
and
out
andb
nopl
jnp
mov
xchg
fs
push
sbb
xchg
jno
or
pushl
ret
mov
ljmp
inc
push
ret
fisttpl
pusha
add
cmpsl
addb
fsubp
mov
mov
pushf
jp
mov
jo
roll
leave
sarl
jns
outsb
sub
xlat
dec
push
mov
scas
fwait
scas
inc
aas
dec
ja
push
adc
pop
iret
loopne
repnz
push
ja
and
test
and
push
pop
shlb
push
add
iret
cli
into
cmp
mov
push
pop
sbb
and
aaa
das
xchg
fbld
sbb
inc
scas
sbb
insl
adc
loope
and
pop
lret
ficompl
sbb
dec
pop
stos
sbb
pop
lahf
inc
popa
lahf
mov
iret
jbe
sub
cmp
lods
loop
in
or
pushl
pop
popl
sbb
fiadds
cmpb
cmpsl
mov
rcrb
or
lods
xchg
bound
add
shlb
xchg
mov
into
mov
jecxz
std
insl
xchg
imul
sub
pushf
std
jnp
aad
inc
and
add
bound
xchg
test
movsl
sbb
add
in
lea
in
push
cmpsl
loop
mov
push
pop
das
jecxz
lods
dec
mov
mov
pop
mov
push
test
jo
sbb
or
jbe
cmp
ret
pop
sub
mov
xchg
fisubrl
jle
fcoms
xor
mov
sub
mov
mov
lods
pop
in
fwait
dec
jne
sbb
adc
inc
jmp
mov
ljmp
sub
mov
dec
pop
mov
out
inc
cmpsb
mov
and
pop
xchg
cmp
sub
pop
test
fcompl
xchg
sarl
push
pop
push
cmp
jg
or
cs
push
out
inc
pop
adc
test
or
mov
push
jmp
movsb
and
js
mov
aam
mov
jmp
call
mov
sub
cs
pop
out
mov
out
ds
jns
push
adc
or
je
and
shrl
sub
sub
push
pop
scas
test
push
ret
mov
fdivrp
inc
das
out
xchg
mov
ret
push
dec
insl
fidivl
inc
das
xchg
jmp
addr16
inc
sarl
into
imul
dec
ficomps
pop
fcompl
popa
mov
mov
inc
inc
mov
jno
lods
insb
sahf
lods
pop
push
shrb
adc
nop
popl
fwait
cli
mov
jmp
or
dec
dec
dec
mov
xchg
cmpb
mov
adc
push
dec
fs
sbb
jno
jae
adc
cltd
push
jp
and
sbb
jbe
mov
ljmp
decb
out
aaa
lods
movsb
ffree
fs
xchg
test
lret
movsb
adc
iret
xchg
outsb
int
mov
push
daa
arpl
dec
das
testl
lds
cmp
lcall
jge
dec
ret
xchg
out
inc
js
ljmp
sub
mov
cmp
and
sub
add
testb
or
out
iret
pop
push
scas
rcrb
ffree
inc
insl
cld
out
sub
jbe
fildll
into
mov
das
addr16
loope
mov
mov
stos
adc
inc
lret
idivl
xor
fdivs
cmpsl
jae
cmp
rorb
repz
inc
mov
stos
add
psubd
pusha
push
sbb
pop
jo
dec
mov
and
jo
in
pop
lret
inc
nop
ret
cmc
es
lock
aaa
dec
mov
testl
add
jnp
and
out
lods
int3
adc
add
or
mov
dec
les
movsl
pop
repnz
fmull
inc
inc
push
and
daa
dec
scas
mov
mov
test
sub
sahf
les
sub
and
lds
or
sub
aaa
test
jl
inc
and
sub
mov
in
fiadds
xor
fstps
cmp
jle
pop
push
push
xchg
dec
push
or
jecxz
andb
test
movsb
daa
jl
cs
jmp
jae
and
ljmp
jl
outsb
mov
dec
loop
das
shll
fs
lret
fdivl
aam
cmp
xor
fidivrl
nop
add
jnp
in
pop
test
lret
push
sub
in
inc
scas
aas
nop
aam
mov
add
jl
mov
cli
inc
push
lcall
movsl
sbb
pop
lret
fwait
or
rcrb
push
sbb
sahf
xor
insb
xchg
lock
mov
sbb
inc
sub
or
fbld
jmp
rclw
sub
push
jp
shr
hlt
pop
pop
jle
test
pop
popa
sub
sbb
pop
inc
data16
sbbl
mov
push
add
test
lods
sbb
mov
movsb
pop
pop
or
xchg
mov
jl
test
daa
dec
imul
les
jge
popf
das
mov
sub
cwtl
in
filds
test
in
pusha
sub
push
xchg
insb
std
pusha
cmc
jno
mov
loopne
rorl
int3
inc
outsb
pushl
pop
dec
mov
shlw
push
lock
jns
insb
sub
fidivl
insb
lcall
mov
pop
sbbl
addr16
repnz
cmpsl
xor
mov
stos
lret
js
cmp
or
aaa
hlt
in
pop
mov
push
lret
arpl
inc
into
sbb
clc
lods
pop
popf
in
sub
int3
scas
dec
int3
and
stos
or
and
pop
test
loopne
or
push
jl
mov
inc
mov
pop
ja
icebp
sbb
stos
aad
and
cmp
cmc
hlt
add
pushf
aaa
insl
xchg
adc
scas
push
std
movl
test
mov
pop
enter
xor
mov
inc
mov
and
jge
out
test
shlb
mov
ja
lods
jl
mov
clc
test
imul
sbb
outsb
repnz
xchg
lahf
mov
lahf
xor
sub
std
outsl
mov
enter
push
outsl
dec
hlt
jbe
inc
dec
lea
cwtl
incb
addl
aam
push
push
test
lret
pop
gs
lret
stos
popa
and
inc
fwait
outsl
jp
jp
loopne
ds
mov
jae
ja
aas
lret
pop
negb
and
pop
sub
test
insl
dec
mov
sbb
mov
mov
push
push
push
fisubrl
xchg
fsub
mov
sbb
xlat
cltd
outsl
mov
js
cmp
pop
mov
stos
lret
std
xchg
xlat
rorb
je
sarb
stos
inc
jo
sub
sub
cmp
and
stos
xor
inc
mov
outsl
loope
bound
and
jge
shr
cmp
inc
pop
pushf
mov
and
pusha
sbb
sub
add
xor
int3
mov
mov
subb
push
ret
or
jp
or
push
movsb
or
jp
in
adc
icebp
arpl
dec
repnz
repnz
imul
jge
or
or
push
dec
or
cmp
gs
pop
mov
xchg
pop
sbb
test
aas
jo
adc
push
scas
nop
fstl
and
pop
add
jmp
adc
ret
andl
add
sbb
sbb
arpl
jle
scas
inc
jno
cmpsb
nop
sbb
cmp
jne
cmp
nop
or
mov
inc
les
test
aam
divb
jb
inc
mov
mov
rcrl
mov
xlat
repz
dec
mov
aad
icebp
mov
insb
push
out
mov
cmp
xchg
ds
insl
mov
lcall
dec
sahf
mulb
lods
cmp
push
aaa
lds
mov
enter
nop
ficoml
mov
lods
mov
and
imul
jp
rcrl
in
pop
push
bnd
daa
sbb
mov
pushl
sub
in
xor
push
sbb
xlat
dec
mov
jge
jg
pusha
bound
push
inc
dec
xor
loopne
jl
data16
movsb
and
int
lret
lahf
out
mov
mov
mov
lret
add
xlat
inc
leave
stos
faddl
mov
cltd
in
pop
cs
shlb
das
push
rorb
mov
pushf
mov
jmp
popl
mov
incb
rcll
outsl
data16
adc
mov
and
add
loop
cs
lea
inc
lods
dec
in
popa
mov
push
adcl
xorb
lods
subb
cmp
fildl
add
inc
sbb
shr
out
inc
pushf
fs
mov
or
flds
jmp
xchg
push
daa
mov
push
add
xchg
add
mov
insb
push
pop
jge
sub
and
add
fiaddl
xor
lahf
jo
jmp
leave
in
cmpsl
sar
jmp
xchg
mov
jnp
adcb
sbb
int3
out
subl
inc
xchg
adc
jae
mov
iret
into
sbb
daa
sub
ficomps
pop
sahf
xlat
shlb
pop
mov
lds
fsubrl
aaa
mov
hlt
push
mov
inc
mov
scas
in
adc
mov
sub
fimull
bnd
and
int3
mov
lahf
in
lea
inc
arpl
notl
ss
xchg
dec
push
outsl
leave
or
rcll
and
cmpsl
test
pop
je
xor
xor
in
mov
adc
lret
test
mov
add
aad
xor
aam
xchg
fwait
jns
dec
adc
xchg
addr16
and
cltd
in
into
fldl2e
cmc
insb
pop
dec
mov
in
xchg
lahf
mov
les
in
stos
cwtl
icebp
mov
push
mov
call
xchg
adc
lret
xor
imul
ret
inc
arpl
mov
fs
in
insl
shlb
cmc
imul
js
test
and
add
inc
incb
enter
mov
inc
imul
mov
lods
lahf
in
out
fsub
pushl
pop
mov
outsl
divl
repz
sarl
stos
mov
mov
dec
sbb
stos
push
jecxz
ja
dec
outsb
out
push
stos
and
sub
xchg
mov
xchg
imul
cmpb
gs
mov
sub
repnz
push
jns
jo
jae
cmp
loopne
popf
or
mov
fisttpll
lcall
push
jecxz
add
insb
push
push
mov
aas
je
mov
pop
xor
xchg
insl
adc
sbb
xchg
cltd
popa
mov
fdivrl
add
rorl
inc
and
in
sar
lods
aas
dec
arpl
mov
call
stos
insl
pusha
aam
pop
mov
or
or
add
lret
mov
dec
mov
push
ss
das
mov
test
out
xchg
lcall
mov
mov
pop
jno
orl
xor
sub
daa
or
rorb
xchg
jecxz
je
push
pop
pop
aam
imul
lret
jb
dec
insb
popa
xor
mov
out
les
fdivl
push
xchg
cmp
test
nop
and
lcall
sub
hlt
adc
or
adc
xchg
gs
or
lods
fneni(8087
or
lcall
rcrb
mov
xor
sub
jp
mov
mov
stos
outsl
xor
xor
inc
push
enter
mov
out
dec
push
push
xor
aam
adc
call
or
cmp
pop
mov
cmpsl
bnd
popf
test
or
mov
test
pop
and
or
or
mov
add
ret
stc
leave
rolb
jo
fwait
ss
arpl
jmp
mov
sub
sbb
mov
push
movsb
out
adc
stos
fmul
pop
fistl
roll
shrl
cli
jle
je
dec
push
leave
enter
push
push
stos
add
adc
inc
mov
pusha
dec
dec
mov
jne
jl
push
gs
dec
cmp
std
and
bsf
fwait
loope
unpckhps
js
and
mov
fidivs
es
adc
push
fwait
lods
dec
test
das
or
mov
push
mov
and
cmpsb
add
aas
flds
add
adc
jbe
dec
out
iret
sarl
bnd
out
mov
xchg
xchg
push
mov
pop
lods
stos
push
aas
mov
and
lods
add
out
dec
nop
pop
pop
sub
in
pop
aam
in
nop
xor
mov
aaa
test
xchg
test
test
cmc
incb
inc
dec
scas
je
cmpsl
incb
dec
lret
insb
xor
shlb
call
sub
adc
mov
das
ret
movsl
mov
mov
gs
aas
mov
sbb
aam
or
movsl
mov
loopne
cltd
jo
dec
cld
fcompl
inc
mov
lods
jp
in
add
test
inc
mov
jl
mov
jl
pop
or
mov
into
adc
lods
pop
andl
push
or
outsl
jno
jne
popa
mov
test
push
out
inc
add
je
in
stos
rclb
addr16
cld
in
mov
cld
mov
inc
sahf
mov
xor
sub
pop
mov
call
fisubl
jecxz
jecxz
gs
push
stos
in
inc
push
inc
adc
adc
popf
movsb
jb
push
repnz
jno
loop
push
mov
enter
inc
inc
or
or
stos
jl
rep
das
xchg
sub
fbstp
sub
push
jl
inc
push
mov
and
out
cmp
mov
jae
push
mov
cmp
sub
sbb
mov
ret
fiaddl
mov
mov
jmp
imul
push
rcl
mov
dec
je
lahf
rcrl
pop
outsb
lret
bound
scas
mov
pop
fcmovbe
iret
scas
or
mov
cmp
xchg
out
fsubrl
push
mov
push
js
push
dec
call
std
sub
mov
jle
add
in
inc
push
in
sbb
mov
mov
inc
add
or
jmp
push
pop
mov
dec
out
fdivrl
push
test
aas
mov
jae
fs
pusha
mov
pushf
or
jbe
movsl
push
sahf
leave
cmp
icebp
xchg
xchg
pop
sbb
xchg
xchg
gs
shrl
dec
jmp
xchg
mov
loop
lret
movsl
add
and
pop
inc
iret
push
or
je
mov
and
aaa
int
lret
arpl
int3
sahf
jns
ret
mov
out
dec
xor
sbb
or
outsl
xchg
mov
mov
shlb
popa
mov
in
movsl
sarl
insl
xchg
sti
movsb
ret
into
jmp
push
dec
int3
cmc
cmpsl
orl
inc
push
dec
mov
sub
cmpsb
cld
fs
cmp
movsl
fsub
scas
stos
loop
inc
out
clc
cmpsb
ret
or
imul
fucomip
sbbb
je
cmp
rcll
out
cmp
jle
repnz
xchg
stos
inc
add
mov
push
jnp
push
ffreep
sarb
mov
insb
push
mov
orl
stos
pop
mov
cltd
pop
outsl
add
add
mov
sbb
ljmp
xor
push
ret
outsl
mov
jg
out
scas
jg
pop
cmp
xchg
popa
mov
inc
mov
mov
stos
mov
pop
jp
aad
pop
retw
dec
or
ljmp
loopne
enter
sarb
cmpsb
adc
inc
lea
pop
jno
xchg
xchg
outsb
lea
xor
jge
popa
push
cmpl
mov
inc
push
stc
cli
xchg
cmpsb
popa
arpl
cmp
stc
out
jecxz
popf
addl
sti
inc
rcrl
rorl
mov
rclb
push
sbb
push
loope
imul
jge
xlat
xchg
fmuls
push
cmp
imul
lret
fsubs
sub
push
cmp
fst
mov
outsl
sti
idivl
xchg
hlt
push
push
movsl
xor
jge
inc
pop
push
arpl
sbb
adc
in
mov
jg
or
rcl
out
lds
data16
popa
fcmove
sbb
push
xchg
lods
dec
addr16
sub
popa
fcmovb
inc
mov
jnp
mov
or
loop
fimull
iret
sbb
dec
popa
cld
test
scas
js
and
mov
add
inc
mov
imul
insl
lods
adc
cmpl
lret
out
leave
cmp
fcomip
jge
cmp
adc
sbb
imul
les
insl
sbb
jae
push
sbb
scas
test
mov
pop
or
push
lcall
movl
xor
dec
inc
mov
popl
out
add
push
outsl
mov
xchg
enter
aam
push
addr16
imul
lret
fdivl
cmc
and
jns
xor
jmp
pusha
pop
in
loopne
dec
jecxz
jge
sahf
fdivrs
inc
jge
jmp
fs
cmp
mov
movsl
in
sub
jbe
cmpsl
mov
and
stos
pop
inc
cmp
jecxz
dec
fnstcw
jae
sbb
out
add
sub
insb
xchg
push
sub
cmpsl
mov
addr16
lcall
test
lods
pop
dec
leave
pop
ljmp
cmp
rcll
fisubs
mov
push
sbb
dec
or
dec
testl
mov
icebp
lahf
sbb
test
push
es
lock
fnsave
fildl
push
jbe
add
jmp
popa
cli
mov
addl
clc
push
pop
cli
add
jl
shll
push
jl
and
mov
orb
push
iret
in
loope
mov
popf
notl
je,pn
pop
or
aam
and
pop
gs
xchg
lret
aaa
sub
cmc
xor
js
mov
inc
das
cmp
notb
mov
out
push
loop
inc
push
and
iret
mov
push
pop
scas
aad
sbb
or
dec
mov
pushf
loop
ret
aas
outsl
daa
ficoms
jnp
and
xchg
xchg
xchg
xchg
push
sbb
and
mov
scas
mov
xor
daa
stos
jg
dec
dec
xchg
add
pop
hlt
mov
or
mov
fldenv
ja
aas
push
pop
mov
dec
pop
pop
or
inc
fistpl
sub
ret
in
sub
mov
cmp
xor
in
ret
aas
sti
pop
cmp
ljmp
shlb
sub
cmp
add
cmp
hlt
pop
jo
pop
lcall
nop
repnz
xor
call
xchg
sub
jmp
insl
rorl
in
sub
and
or
xor
lds
xor
shrl
cmp
or
imul
mov
push
or
stos
and
sti
xchg
test
ja
dec
test
lods
filds
sub
movsb
mov
jnp
mov
int3
ss
push
negl
test
stos
cmp
or
shlb
loopne,pn
mov
and
add
push
mov
nop
sub
shr
imul
and
das
xor
fldl
movsl
jnp
into
dec
jp
cmp
notb
mov
aam
stc
sbb
mov
mov
or
adc
movsb
daa
lret
shll
push
inc
movsl
frstor
lret
stc
mov
sbb
jp
pusha
outsl
aaa
test
stos
cwtl
inc
or
sbb
sub
addr16
sbb
js
icebp
ficoms
out
ficoms
push
and
dec
mov
push
xchg
pusha
iret
and
ljmp
jo
imul
pop
add
ret
xor
stc
stc
imul
adc
out
jmp
aaa
and
inc
dec
inc
stc
andl
sub
cmp
push
and
xchg
adc
fimull
pop
jg
and
pop
xor
dec
mov
inc
and
hlt
movsl
sbbb
nop
fidivrl
scas
in
mov
push
in
xchg
std
pop
and
fsubrs
mov
pop
xchg
mov
xor
andb
fistps
lahf
jno
cli
xor
clc
into
cs
leave
ds
jnp
rcll
scas
and
jne
cmp
out
pop
pusha
xchg
outsl
and
or
std
lods
clc
out
push
cmc
lods
dec
sub
add
fisttpl
lret
imul
pusha
and
xchg
fstps
lahf
mov
je
jnp
imul
pushf
xor
add
and
cmp
rcrb
ja
lret
subb
sbb
arpl
adc
test
inc
xor
popa
jle
jge
repz
adc
pop
sub
jg
xchg
loop
sub
into
cmp
aaa
mov
dec
cwtl
adc
outsb
pop
and
cmpsl
mov
adc
stc
sbbl
aam
xchg
mov
pop
xchg
add
push
inc
arpl
adc
push
sub
loopne
pusha
mov
mov
mov
jno
cmc
arpl
ficoms
mov
inc
and
sub
dec
mov
dec
pop
ret
push
pop
neg
xchg
mov
and
add
jmp
jp
or
aaa
bound
add
xor
mov
repz
sti
pushf
fdivrs
pusha
sub
andl
inc
push
mov
lock
lahf
notb
insl
cmp
rcrb
jne
nop
mov
xorps
or
mov
mov
adc
cmp
adc
aad
shl
aas
push
sbb
fwait
ss
fldcw
test
cmp
shll
int3
add
in
inc
add
out
popa
mov
add
les
rorl
sbb
insl
cmp
movb
mov
push
push
sti
sbb
jg
sub
das
popa
adc
iret
sbb
xchg
iret
insl
lods
mov
fisubrs
jo
inc
cmp
test
pushf
cmpsb
dec
push
mov
dec
in
int3
fdivp
cmp
add
scas
mov
int3
addr16
in
push
mov
or
out
ficoms
fcoml
pop
jp
adc
in
jne
ret
hlt
and
mov
xchg
push
mov
lcall
les
fiadds
ds
or
cmp
xchg
enter
fists
jae
gs
das
xchg
stc
fiaddl
and
push
scas
test
ss
rcrl
and
out
out
stc
jo
mov
adc
fdiv
jbe
test
outsl
cmp
int
mov
inc
mov
xor
mov
pushf
rcrl
add
rcrb
lods
pop
adc
shl
push
out
bound
dec
dec
iret
jns
je
scas
sbb
inc
cmpl
mov
xrelease
daa
inc
lods
movsl
adc
push
into
mov
cmpsb
adc
or
pushf
repz
xchg
and
lods
mov
mov
mov
cltd
mov
lea
and
js
js
push
dec
lret
or
xchg
out
fistps
xchg
rclb
outsl
sub
es
pusha
in
mov
xchg
lods
loopne
test
dec
fldl
mov
or
mov
lret
mov
movsl
repnz
and
out
dec
jge
mov
mov
push
das
cmp
pop
push
fs
jecxz
jns
add
aas
jle
xlat
adc
ss
icebp
adc
dec
mov
in
jmp
cmpsb
in
fildll
or
mov
pop
fwait
or
push
add
inc
xor
pop
popf
pop
sbb
fldl2t
int3
push
dec
cli
jmp
das
jns
mov
sub
mov
out
or
dec
ret
out
pop
enter
cmp
mov
clc
scas
lods
ja
aad
push
xor
aad
scas
cmc
sarl
iret
fcmovb
out
dec
loop
jo
mov
mov
xor
xchg
jns
adc
xchg
dec
inc
roll
xchg
cmp
into
in
cmp
jnp
movsb
addr16
aad
jle
gs
cltd
cmp
inc
pop
mov
stos
and
movsl
pop
or
in
bound
mov
xchg
adc
push
int3
cmp
push
xchg
pop
push
xor
stos
sti
mov
add
or
cli
dec
pusha
dec
out
mov
jle
ficoml
cs
jl
test
sbb
mov
test
out
or
mov
je
sbb
push
sarb
push
mov
insb
mov
mov
jp
hlt
push
ds
sbb
mov
fldl
nop
xchg
iret
or
out
adc
arpl
and
fwait
inc
mov
les
mov
ret
push
jle
pop
dec
push
or
leave
pusha
fiadds
jmp
pop
fdivs
cmp
out
or
subb
shrl
cli
sub
cmp
popa
stc
inc
jecxz
es
shlb
push
inc
xchg
gs
push
and
iret
das
sti
daa
dec
lds
mov
mov
and
mov
add
mov
mov
push
sarl
push
ficomps
sub
lds
stos
sbb
loope
xchg
mov
sbb
add
lea
push
nop
mov
arpl
mov
test
mov
and
xcrypt-cbc
cmpsl
aad
jmp
inc
inc
mov
jp
call
add
movsb
xor
mov
orl
loope
lods
sbb
jle
sub
jns
inc
pop
xor
mov
insl
push
outsl
push
ss
insb
inc
jle
jmp
mov
adc
cmp
xchg
in
cmc
fldl
daa
xchg
fisubrs
data16
into
cld
pop
sbb
jae
sarl
adc
and
push
nop
lods
jne
jnp
das
add
aaa
mov
cltd
in
xchg
xchg
insb
xor
in
inc
loop
mov
jb
pop
adc
and
js
movsl
cmp
add
mov
bound
mov
mov
iret
ja
xchg
or
push
add
push
popf
das
insl
pop
lods
insl
pop
xor
xchg
pusha
outsb
cmp
jecxz
push
cmp
dec
cmpsl
adc
mov
pop
xor
dec
je
cld
jl
fcmovnb
adc
xchg
pop
cwtl
clc
enter
cmp
sbb
insl
hlt
xlat
add
cmp
push
push
adc
jnp
insl
mov
ret
sub
idivl
leave
push
add
mov
adc
adc
mov
mov
jne
je
xor
fnsave
imul
or
push
xor
arpl
rcl
out
pop
rorl
sub
or
clc
lret
movsl
cmc
in
sbb
fimuls
mov
roll
ret
rolb
xor
xlat
xor
in
call
js
mov
push
add
pop
js
inc
push
cli
xchg
les
xchg
push
popa
sbb
stos
push
inc
pop
pusha
jle
cmpsb
adc
pop
jae
int
test
inc
or
fwait
jb
mov
cwtl
mov
stos
rcll
sub
push
fbstp
pop
fisttpll
pop
jo
fwait
xor
push
mov
sarb
loopne
adcb
imul
call
sub
pop
ljmp
cmp
jg
jne
sub
aam
repz
out
imul
out
fcomi
push
push
pop
cmc
out
cmp
lret
lea
xor
in
fdivrs
stos
jb
into
shrl
lcall
jbe
cmp
insb
sbbb
and
push
loope
xlat
imul
xchg
xchg
out
stos
aad
andl
dec
pop
push
xchg
pop
jp
out
xchg
sbb
adc
xchg
aas
test
push
or
testl
adc
fs
es
lea
cmp
inc
add
cmp
les
xchg
testb
xorl
add
int3
sarb
mov
imul
jl
mov
mov
stos
sti
lods
rcr
mov
mov
call
dec
push
pop
inc
fstpl
sub
pop
pop
sub
les
pop
inc
test
pusha
add
popa
or
scas
lcall
mov
pop
sub
dec
mov
dec
call
xchg
push
or
mov
pop
scas
fmull
out
push
mull
xchg
jb
in
hlt
lahf
int3
jmp
or
jb
mov
jge
in
pop
jno
pop
and
enter
inc
lods
lcall
jnp
ss
cwtl
sbb
mov
arpl
cltd
fstl
pop
rcll
cmpsl
jmp
xchg
push
stos
jae
cld
insb
cmpsb
and
in
aam
jecxz
adc
cmp
sub
fwait
push
or
rorl
sub
push
adc
inc
or
xchg
push
es
pop
lea
dec
arpl
xchg
or
lock
es
push
adc
and
shr
insl
repz
insb
mov
call
fsubs
mov
aam
cs
stc
mov
cwtl
push
lods
imul
or
movsb
pop
ja
mov
mov
or
and
and
test
aaa
jp
outsl
inc
jb
imul
sbb
mov
or
ficomps
nop
dec
dec
cs
gs
xor
arpl
jbe
sahf
pop
adcl
cmp
mov
in
and
mul
xor
sub
mov
dec
dec
scas
xor
popl
mov
push
sar
adcb
jl
in
or
dec
pop
jp
inc
cli
xor
lods
std
jp
fwait
test
adc
cmp
scas
loopne
cs
sarl
mov
adcl
mov
ja
imul
test
arpl
mov
xor
fcoms
mov
push
inc
repz
or
adc
xor
bound
enter
scas
adc
je
inc
jle
lds
loopne
mov
xchg
icebp
popf
jl
mov
stc
gs
scas
outsl
lahf
call
cmp
push
cmpsb
fcompl
dec
lret
outsl
xchg
xchg
sub
dec
shl
rcrb
aaa
xor
lock
jns
dec
daa
out
loope
push
sbb
add
xchg
push
sbb
outsb
subl
push
ljmp
mov
ja
lods
repnz
dec
aas
or
daa
negl
xor
imul
jb
sbb
and
lret
cld
in
lds
scas
arpl
jbe
lcall
in
addr16
arpl
test
sbb
cmp
in
jge
jo
testl
bnd
mov
scas
xchg
gs
repz
pop
push
addr16
insb
sbb
divl
imul
in
subl
cmp
xor
sbb
shrl
mov
outsl
jmp
pop
add
push
mov
add
popf
mov
shll
mov
cli
sub
add
or
cmp
add
std
push
test
dec
fldl
dec
push
mov
pusha
mov
cmp
arpl
bound
das
ljmp
ds
rcrb
adc
pop
out
neg
out
xchg
lcall
pop
jecxz
cld
mov
in
movsb
fstl
push
jno
cmp
bnd
pop
jno
nop
sarl
aas
stos
hlt
mov
xor
mov
cmp
test
sbb
shlb
dec
mov
stos
outsb
push
jb
out
lods
js
xchg
jb
mov
flds
inc
jle
xchg
inc
xchg
jae
rcr
rcll
adc
and
fcmovb
mull
push
push
test
leave
repnz
jae
push
bound
lcall
mov
cmpsb
data16
pop
out
xchg
out
sbb
jb
push
mov
repz
inc
cmp
sbb
mov
fstpl
mov
or
std
in
push
push
clc
jmp
jnp
fs
scas
jp
inc
dec
insl
pop
aas
mov
pop
outsl
dec
mov
mov
push
jge
push
xchg
sahf
fwait
jo
loopne
inc
out
push
in
xor
aad
movsb
jo
outsl
xor
das
cmc
push
mov
test
xlat
xor
and
sahf
es
call
bound
push
bound
sbb
dec
jmp
imul
mov
pop
ret
push
daa
out
push
mov
jb
call
clc
loope
cmp
xor
fucomp
mov
std
mov
lds
cmp
in
mov
enter
sub
test
inc
inc
cmp
mov
cmp
jno
arpl
stos
sub
fwait
push
int3
repz
lock
mov
out
add
fldenv
aad
cmp
nop
pop
push
lods
imulb
add
add
cmp
pop
lret
cmpsl
and
dec
push
pop
dec
je
adc
xchg
sbb
movlps
jne
xchg
pop
aam
lods
or
rcl
leave
xchg
xor
dec
sbb
test
adc
mov
push
sub
fs
mov
cs
clc
aam
lahf
pop
in
mov
jecxz
loopne
xchg
aaa
xchg
jne
xor
lret
jp
sbb
sub
jbe,pn
sbb
jmp
sub
pop
dec
cmpsb
dec
aaa
cmp
sub
inc
mov
arpl
or
mov
dec
roll
xorb
and
ss
mov
cmp
sub
das
push
jb
stc
cmp
cwtl
xchg
ret
daa
or
xchg
push
ret
rcll
gs
pop
insl
mov
pop
xchg
daa
jmp
sbb
mov
int3
stos
mov
daa
fs
pop
rorb
in
sub
fsubs
xor
jnp
scas
mov
add
jnp
jns
mov
push
imul
push
imul
mov
cmc
push
into
dec
bound
pop
jge
lds
mov
lret
out
push
bound
rol
adc
pop
dec
xchg
sbb
inc
inc
mov
call
ja
mov
leave
mov
cmc
xchg
xchg
jns
jae
cmp
cli
mov
inc
cmp
adc
mov
xchg
dec
idiv
dec
loop
addr16
lret
push
cmpsl
mov
call
jmp
dec
hlt
fidivrl
mov
mov
scas
sbb
cmpb
jl
cmp
jae
xlat
mov
dec
or
jnp
sbb
imul
jbe
cmp
mov
add
fs
adc
sub
add
mov
lret
sbb
or
dec
adcl
jecxz
or
and
shll
cmp
or
push
inc
and
je
and
dec
cmove
sbb
addl
add
add
movsl
sarb
arpl
outsl
push
inc
inc
jbe
and
inc
xor
js
or
divb
sub
stos
setle
inc
pop
bound
xchg
nop
rep
sbb
mov
xchg
aas
mov
sbb
fwait
stc
add
jl
mov
pop
js
js
cmp
ret
add
andb
je
sub
pop
shll
push
push
enter
mov
jb
pop
push
jns
cmp
jecxz
fistl
mov
mov
call
imul
les
cmp
ss
arpl
sahf
rorl
or
fisttpl
test
xor
and
cmp
push
daa
sub
mov
roll
hlt
addr16
fstpt
arpl
lods
rcr
es
lret
push
xor
mov
push
enter
cmc
mov
sbb
negb
ja
fcomi
clc
fisttps
out
sub
and
or
jg
lret
leave
jle
movsb
pop
dec
data16
inc
aam
data16
adc
ret
mov
inc
jg
jmp
jecxz
or
fnsave
push
jnp
addr16
loop
xchg
clc
xchg
pop
dec
inc
aas
mov
mov
cmp
int3
sarl
cmp
stos
push
rorb
jle
push
pop
fiaddl
mov
mov
or
ror
in
sub
out
arpl
pop
imul
lea
sbb
cmp
mov
dec
inc
mov
push
lods
pusha
and
out
cmp
and
pop
enter
in
pop
les
xchg
shrl
nop
mov
dec
lret
les
sti
outsb
sbb
movsb
mov
lock
cmpsb
pop
outsb
rcl
sbb
jmp
mov
in
push
lahf
jbe
clc
insl
sbb
cmc
xchg
fs
ljmp
ret
mov
cmp
je
fwait
cmp
or
cmc
mov
push
push
jmp
and
mov
push
or
loope
inc
in
push
mov
push
aad
gs
addl
addl
adc
xor
loope
in
xor
adc
mov
mov
les
push
pop
fidivs
lcall
push
scas
xchg
aaa
jbe
cmp
outsb
ror
pushf
loop
xchg
and
pushf
aas
and
push
movsb
inc
in
sub
fidivrl
cmp
cmp
ret
clc
xlat
inc
and
or
or
cmpsb
adc
add
cmp
jp
scas
test
movsb
or
ficompl
xor
inc
clc
sbb
xlat
shrl
dec
pop
cli
mov
bound
imul
stos
xor
cmp
sub
push
jl
aaa
jecxz
cmp
pop
jp
xchg
in
fdivl
or
inc
and
cmp
and
ds
sbb
mov
mov
sbb
pop
nop
aad
cmp
adcl
scas
movsl
inc
test
movsl
or
dec
xchg
mov
cmp
xor
jle
aas
outsb
xor
arpl
xchg
sub
mov
inc
cmpb
xchg
mov
jp
les
in
sbb
xor
std
dec
pop
or
xchg
aam
xchg
sub
loop
pop
fsubrl
scas
leave
rol
push
lret
jl
rclb
out
hlt
loopne
lret
xor
and
aam
add
int
mov
cmp
push
push
arpl
jbe
xor
jl
cwtl
adc
mov
iret
sub
add
add
jl
icebp
xchg
dec
fimuls
xor
add
rolb
push
es
jmp
mov
mov
mov
je
jge
push
into
addr16
cmpsl
insl
lock
mov
movsb
repz
push
dec
push
jle
cld
push
sti
int3
adc
xchg
cmp
inc
sbb
pop
in
mov
fidivrl
xchg
lcall
lcall
xor
leave
sub
imul
loop
or
and
xchg
add
test
aaa
fcomip
fwait
out
jmp
test
into
fstl
cmp
stos
icebp
idivl
dec
das
in
jbe,pn
subl
imul
in
clc
xor
push
shlb
stc
or
test
into
jno
mov
jle
mov
imul
dec
es
adc
mov
arpl
push
idivb
shl
flds
mov
test
jb
test
es
pop
sub
out
lea
sub
sub
adc
ficomps
sbb
mov
jecxz
neg
leave
pusha
pop
dec
pop
push
movl
icebp
xchg
fs
dec
pushl
scas
movsb
xor
mov
into
loopne
inc
cwtl
test
inc
cltd
sarl
fmull
jle
lret
jns
pop
cmp
sbb
mov
mov
divb
das
aas
push
popa
int3
in
test
mov
push
mov
in
cwtl
es
hlt
mov
gs
cmp
pop
cmpsl
mov
cmpsl
adc
mov
pop
fisubrl
pop
lret
or
pop
jg
mov
adc
push
inc
add
mov
xchg
loopne
enter
xor
mov
mov
mov
mov
loop
pop
mov
mov
mov
fildl
mov
cltd
int
push
jg
insl
dec
push
add
fisttpll
jp
nop
adc
mov
and
jb
dec
vcvtsd2ss
sub
lcall
std
loop
sub
add
xlat
jmp
jl
stos
fadds
xchg
jne
fsubl
in
lods
test
cmp
lcall
in
es
call
push
sar
imul
dec
das
xor
ret
enter
sub
lcall
mov
adc
iret
enter
shlb
stos
push
mov
std
rcr
jle
or
jnp
xchg
pop
movsb
testl
lret
xchg
repz
adc
fdivrs
mov
scas
aaa
pop
pusha
int3
aad
in
imul
out
icebp
xchg
fwait
inc
adc
int
aaa
xchg
aam
ljmp
jbe
fldenv
push
xchg
into
test
add
xchg
in
in
xor
lea
or
test
pop
movsb
push
scas
sahf
clc
ja
imul
xchg
mov
adcl
lods
adc
mov
jecxz
movsl
stos
add
adc
mov
insb
and
fs
fists
or
adc
pop
mov
dec
cmpsl
iret
lcall
lea
stc
inc
fs
mov
data16
mov
iret
cld
flds
mov
ja
push
dec
dec
int
sahf
pop
in
pop
lods
lods
jp
xchg
leave
stos
mov
add
js
sti
jae
jns
cmp
mov
insb
stc
xchg
sbb
or
into
sbb
mov
pop
or
clc
sbb
or
push
mov
scas
push
inc
bound
shrb
mov
adc
icebp
jle
push
push
popf
adc
loope
sub
or
shll
or
sbb
ds
arpl
mov
insb
mov
cld
inc
xchg
or
dec
mov
leave
adcl
test
lret
aam
inc
xor
arpl
cmp
icebp
cmp
shlb
leave
in
sbb
or
pop
and
pop
cmp
cld
aad
xor
cmp
add
sar
ljmp
inc
mov
leave
mov
cli
pop
test
jecxz
lods
dec
inc
shl
pop
adc
add
xchg
mov
mov
and
dec
push
adc
and
fistps
loope
lret
cmpsb
imul
call
jo
dec
xor
mov
cmp
enter
aas
and
mov
xchg
jge
out
shll
adc
pop
cmp
daa
add
dec
mov
jmp
push
or
push
inc
adc
aad
cmp
dec
mov
mov
loop
jb
push
out
jmp
push
push
sub
cld
inc
cmp
cld
stos
ja
sub
pop
cmp
sarb
sub
or
xor
pop
sub
push
repz
lret
icebp
pop
mov
shll
lcall
dec
into
sbb
nop
xor
mov
xor
push
imul
jge
call
mov
call
sub
ret
and
add
mov
push
test
test
lods
adc
sbb
stos
lds
clc
sahf
rorl
jge
xchg
add
xchg
xor
sub
mov
out
ds
loope
sub
ss
jp
mov
daa
cmovs
outsb
je
mov
into
ja
push
fisttpll
push
xchg
mov
outsl
lock
fidivrl
sti
ljmp
ret
xchg
mov
sub
cs
and
out
add
lods
push
xor
mov
sub
pushf
add
cmp
and
lock
scas
pop
jmp
das
cmp
push
loopne
and
push
mov
mov
or
in
jo
ds
inc
push
mov
ror
mov
or
je
sti
push
cld
sub
mov
jb
in
stc
pushf
out
xor
xor
lcall
lcall
and
lcall
sbb
pop
adc
xchg
pop
bound
sbb
inc
ret
mov
orb
mov
stos
imul
push
mov
aaa
and
push
imul
pusha
test
push
xor
mov
add
sbb
cmp
clc
or
shlb
inc
out
in
push
pop
fisubrs
cmpl
add
xchg
test
lahf
lock
add
mov
loope
incl
nop
ficomps
xchg
enter
adc
lret
mov
pusha
add
repnz
mov
inc
roll
and
adc
mov
jecxz
mov
push
dec
cwtl
jmp
push
jb
gs
flds
sbb
mov
test
sbb
lock
mov
jne
movsl
push
loope
add
xchg
cmp
icebp
sub
sbbl
hlt
hlt
mov
mov
jae
cmp
sbb
daa
shlb
leave
push
or
repz
hlt
adc
dec
in
sbb
cltd
fs
cmc
enter
jge
xchg
push
js
not
adc
scas
daa
lds
pushf
fnstsw
mov
repnz
dec
lret
mov
mov
sahf
and
jecxz
or
adc
lds
dec
cmp
insl
xchg
mov
ret
push
push
add
fisubrs
xor
lcall
pusha
xor
icebp
mov
adc
or
mov
push
or
stos
lods
iret
jne
push
pop
mov
std
adc
push
push
jns
out
pop
fwait
jo
pop
int3
cwtl
lods
xor
xor
data16
sub
inc
ljmp
test
ss
pop
outsb
push
jb
mov
jecxz
add
lcall
mov
movsb
shrb
scas
add
pop
xchg
xchg
fistl
sbb
popa
stos
gs
lods
xor
dec
cmc
add
sub
or
mov
inc
cmc
repnz
jbe
cmp
add
push
into
stos
cs
cmpb
test
cltd
jno
jnp
fisubs
sub
call
insb
lcall
mov
ret
icebp
fmuls
jae
mov
orb
into
sub
sbb
xor
mov
rcrb
inc
xchg
push
adc
cmp
mov
rorl
jmp
mov
aaa
loope
daa
sbb
adc
cmp
test
iret
lock
sarb
xchg
cld
add
jbe
aad
cld
xor
mov
iret
sbb
daa
add
jnp
mov
mov
or
add
pop
pop
sub
stos
xlat
in
lret
hlt
sbb
dec
loop
ds
adc
sbb
sub
ja
or
mov
add
subl
addr16
sbb
cs
inc
mov
les
int3
mov
fnstcw
das
loopne
movsl
sub
fs
pop
cltd
sbb
enter
shrl
jle
xchg
ds
xchg
mov
sti
push
mov
stos
pop
add
stos
cltd
lahf
cmpl
movsl
fcomps
mov
bound
push
pop
and
imul
push
push
dec
jl
outsb
sbb
fildl
xchg
mov
jno
mov
outsl
pop
xchg
arpl
inc
aad
mov
rcpps
lahf
and
std
sbb
mul
rcrb
jns
test
pushf
cli
les
and
inc
imul
fdivp
add
sbb
mov
int
dec
dec
imul
jp
pop
mov
jg
stc
orl
cltd
push
mov
or
lahf
cli
jne
bound
lds
ljmp
pop
rcll
lods
lock
or
sbb
js
addb
jnp
pop
nop
push
call
stos
repz
or
in
popa
pop
jns
je
or
out
dec
outsl
les
call
loope
aas
fstps
ljmp
and
sarb
pop
fstps
push
jl
stos
ljmp
sub
subl
xor
jge
adc
jns
sbb
cs
outsl
mov
insb
sbb
dec
cltd
imul
and
mov
push
or
adcl
add
adc
xor
and
sub
push
adc
nop
add
insb
sti
sub
mul
loop
mov
into
pushf
sahf
pop
lret
ja
mov
loop
fdiv
xor
or
inc
sti
mov
dec
mov
inc
lods
decl
sub
lcall
js
inc
stos
jno
sbb
mov
out
add
leave
jge
mov
outsl
jle
stos
add
test
mov
cmp
test
bound
movsb
xchg
sbb
sbb
xchg
and
xor
add
dec
aaa
rorb
push
sbbl
insb
stos
sub
rcrb
xchg
ret
in
dec
loope
sub
stos
cs
pop
push
fsubl
ja
insb
mov
imul
scas
enter
sub
mov
fistl
sub
js
jp
cmp
cmpsl
ret
movsl
test
ljmp
jle
clc
cmp
shr
push
paddw
mov
loopne
and
icebp
in
lahf
sahf
cmp
dec
adc
std
lods
lea
icebp
adc
xchg
push
pushf
push
push
shlb
inc
call
addr16
repz
pop
dec
mov
subb
enter
jl
es
dec
sub
mov
cmp
dec
iret
stos
inc
lcall
lods
sub
or
push
addr16
push
mov
cmpb
mov
nop
mov
add
cld
xor
pop
out
push
pusha
or
inc
bound
xchg
jg
mov
in
and
stc
fists
cmpsl
xor
cmp
stc
sbb
mov
cli
std
js
jb
std
cmp
stos
mull
ret
lret
xchg
movsb
addl
cmp
das
lret
add
adc
ret
nop
jg
int
pop
out
sub
hlt
das
adcb
popa
shrl
das
mov
mov
jp
rcll
int3
cmc
daa
sarl
adc
loopne
mov
out
add
loope
jg
adc
fisubrl
pop
and
lods
es
sub
lahf
aas
jne
jb
sub
hlt
pop
and
dec
sbb
sbb
nop
jp
cmp
jns
icebp
xlat
sub
and
negb
lods
outsl
or
and
xchg
dec
pushf
jae
dec
and
int3
sbb
add
sbb
pop
xchg
insb
adc
int
fidivrs
cmp
dec
mov
mov
cmpsl
shrb
adcl
jle
movsl
lock
popf
daa
ds
or
test
pop
loopne
or
inc
cmp
test
dec
pop
lock
int3
movsl
mov
adc
lods
pop
jecxz
adc
mov
inc
inc
mov
sbb
enter
lock
mov
or
mov
pop
imul
dec
test
sbb
je
adc
iret
jmp
ficoms
fwait
sbb
test
push
andb
movsb
mov
cli
outsl
xlat
push
adc
jp
int
mov
in
pop
outsl
jae
xchg
sbb
push
aad
dec
and
dec
clc
in
ljmp
js
mov
lods
js
adc
push
cmc
loopne
jb
and
imul
movsb
cmp
sub
pop
in
jns
out
add
mov
cmp
shrb
xchg
iret
scas
sbb
xchg
je
pop
enter
mov
adc
push
jbe
in
mov
jbe
imul
cmpsl
sub
and
mov
and
jmp
sahf
dec
stos
inc
pop
jae
sti
inc
dec
in
cmp
or
mov
dec
sti
shll
test
mov
mov
addr16
jp
popf
lds
cli
test
pushf
into
mov
das
sub
xor
xor
mov
in
push
roll
lret
lock
cmpsl
inc
xlat
cmp
push
stos
movsl
les
pop
or
add
cmp
test
add
pushf
fisubrl
bound
fwait
ja
pop
xchg
pop
adc
lret
mov
sbb
lds
ds
and
push
flds
iret
sub
flds
lret
cmp
or
xchg
xchg
mov
pop
sub
roll
loopne
mov
and
dec
pop
inc
sub
sub
hlt
mov
xor
push
mov
jl
adc
dec
addr16
jne
inc
fidivl
xor
lods
mov
add
out
nop
into
loopne
pop
mov
in
xor
lods
iret
mov
inc
mov
sbb
ret
ja
je
incl
sbb
pop
pop
jl
andl
pop
les
das
test
ds
daa
cltd
xchg
cmp
sbb
lahf
je
jb
aam
dec
ret
jle
lcall
das
xlat
popf
add
jns
adc
dec
jl
inc
rolb
sbb
mov
or
loop
mov
addb
sub
arpl
and
sahf
mov
or
dec
adc
insb
push
jae
sbb
scas
popa
jne
cmp
sbb
cwtd
bound
cltd
push
mov
ret
sub
xchg
push
sti
jle
cmp
roll
push
std
lods
std
or
pop
cmp
shll
scas
dec
jne
dec
mov
call
mov
dec
into
xchg
inc
mov
sub
mov
pop
movsb
pop
push
xchg
mov
xlat
dec
pop
or
push
pop
jg
divl
out
dec
inc
lret
shlb
pop
std
pop
adc
and
sub
push
sbb
sub
mov
inc
stos
jbe
push
inc
push
shrb
push
push
pusha
scas
xchg
mov
andb
sbb
xchg
inc
adc
into
pop
call
imul
jns
xor
sbb
sub
xchg
ror
sarb
xor
or
push
mov
mov
scas
fstl
jne
jbe
or
mov
jp
repz
lret
je
sbb
xchg
add
and
lahf
mov
orl
data16
fsts
mov
imul
inc
int
push
das
aam
es
int
fwait
push
add
adc
fwait
push
mov
insb
imul
popa
lds
pop
jmp
cmp
imul
daa
mov
pop
add
mov
sahf
mov
out
add
lock
mov
lcall
push
jnp
data16
push
rcrb
loope
testb
xor
aam
rolb
mov
adc
mov
insb
mov
dec
sti
pop
out
roll
imul
jecxz
mov
add
push
clc
scas
fwait
jne
push
xor
cmpsl
adc
outsb
packssdw
cs
mov
jp
mov
cld
shrl
lret
fbld
fbld
xor
dec
pop
cmp
ljmp
inc
insb
xor
loopne
xor
mov
std
fidivl
push
ja
fs
mov
or
into
cmova
pop
push
jecxz
cmpsb
mov
add
adcb
in
push
jecxz
sbb
mov
int3
cmp
pop
inc
pop
pop
mov
in
push
mov
mov
inc
cmp
sti
push
enter
cli
rcrl
les
push
jp
jl
pop
and
arpl
xchg
cli
into
push
add
dec
cmpsb
sub
in
arpl
cmp
jge
fidivrs
adc
xchg
pop
in
xlat
mov
push
jp
aam
minps
mov
test
jb
add
mov
pop
dec
or
sub
jbe
cli
pop
dec
mov
inc
pop
jbe
pop
mov
popa
lret
das
mov
fstpl
gs
ss
aaa
test
push
stos
adc
fs
xchg
sarb
jnp
or
rclb
cmpsb
cmp
sub
mov
inc
add
clc
xor
add
cld
adc
divl
push
popf
pop
and
pop
test
dec
dec
adc
mov
cmp
shr
pop
pop
add
inc
out
lret
and
mov
mov
leave
pop
jne
mov
cmp
cmp
es
test
mov
pushf
inc
and
ja
sbb
and
pop
mov
clc
or
imul
in
scas
and
push
pop
inc
sub
mov
repz
xor
lock
pop
sbb
jecxz
mov
xor
ljmp
ss
pop
push
xchg
xor
xchg
or
cmp
xor
stc
aaa
jnp
and
mov
in
xchg
shr
popa
add
pop
icebp
addr16
into
fcompl
test
cwtl
lret
sahf
mov
dec
out
dec
shll
push
repnz
and
cmp
out
lock
pop
fldenv
mov
pop
pushf
addl
test
test
fxch
push
daa
test
sub
mov
imul
cmpsb
std
stos
scas
mov
jns
pop
les
cmp
inc
mov
pop
adc
or
jae
out
out
and
push
roll
add
xchg
es
loop
ret
xor
push
and
lods
je
add
out
fnstsw
out
popf
mov
arpl
inc
addb
add
test
mov
adc
and
in
cld
lds
pop
push
cmc
sub
push
mov
add
lods
sbb
add
jmp
sub
frstor
dec
xor
lock
cld
or
sub
mov
repnz
jecxz
jmp
or
ret
push
out
scas
inc
inc
fcoms
dec
cmp
cmpsl
insb
and
mov
ljmp
inc
adc
fnstcw
leave
xchg
mov
in
mov
cmovne
xchg
jle
int
arpl
test
push
je
add
push
push
ror
push
aas
movsl
jno
dec
iret
pop
pop
subl
or
xchg
das
subb
fnstenv
ss
pushf
or
push
xchg
mov
sub
pop
pop
aaa
add
and
inc
ljmp
jno
sub
ja
fistl
lahf
mov
mov
test
xor
pusha
jp
and
mov
or
nop
sbb
adc
and
call
mov
dec
ss
mov
lea
add
sub
mov
xchg
inc
jnp
insl
jnp
sub
mov
lcall
out
jo
or
sub
push
popf
sub
jg
imul
or
fdivl
enter
cmpsl
in
mov
push
int3
test
lcall
lcall
lds
xor
mov
and
addr16
jb
dec
in
or
icebp
lds
pusha
cmp
rolb
shll
repz
fsts
icebp
nop
das
inc
or
lahf
and
xchg
lds
adc
cmp
inc
inc
mov
stc
idivb
dec
test
jns
iret
xor
jecxz
mov
jne
popa
jnp
adc
jbe
mov
jmp
pop
les
cmp
scas
pop
xchg
imul
fdivrs
ljmp
adc
xor
clc
cli
sahf
jmp
inc
out
cld
add
jle
mov
push
iret
and
out
xchg
insl
shlb
or
pop
movsb
jns
sub
inc
data16
jle
clc
and
mov
push
jmp
jge
sub
add
addr16
xor
add
test
pop
andb
int3
mov
adc
mov
in
xchg
add
mov
in
fwait
rorb
or
mov
mov
daa
jb
dec
jnp
ljmp
pusha
dec
jnp
inc
insl
insb
inc
leave
out
pushl
ret
sub
js
aam
mov
xor
mov
sub
add
int
push
ss
xchg
sbb
and
push
jns
push
mov
and
pop
sub
inc
mov
sti
mov
inc
pop
rorb
aas
adc
mov
movsl
mov
mov
scas
movsb
xchg
mov
outsb
and
data16
enter
or
add
sti
add
jmp
movsl
in
pop
sbb
dec
lods
push
inc
jl
inc
xor
push
inc
jg
aas
sub
add
stc
inc
jo
sub
or
mov
add
inc
outsl
rclb
jmp
in
mov
mov
inc
aam
adc
mov
or
aad
push
sub
lret
pop
mov
ljmp
push
inc
shr
cld
fistl
lods
mov
sbb
or
push
mov
sbb
sti
inc
cmpsb
mov
xchg
arpl
rcrb
add
outsl
jle
fimuls
in
inc
imul
jb
cmp
imul
dec
ja
addb
dec
and
jo
aad
mov
lock
and
cmp
xor
clc
stos
push
push
push
movsl
imul
dec
aad
or
mov
pop
push
lock
dec
cmp
cmp
stos
adc
xchg
mov
fldt
fsubs
cmpsb
pop
and
in
xchg
movlhps
jo
xlat
dec
mov
push
add
mov
loop
cs
push
neg
mov
push
cmp
mov
inc
test
mov
inc
leave
cmp
or
lods
pop
ja
icebp
cmpsb
dec
pop
add
sub
aaa
xchg
fistpll
pop
jns
das
pop
dec
mov
push
sarb
jo
pop
xor
cmpsl
sbb
aaa
xchg
hlt
add
jl
pushf
mov
jne
mov
dec
icebp
iret
adc
jno
les
invd
sti
adc
sub
sarl
push
inc
sub
loopne
xchg
test
test
sub
out
js
sbb
add
push
fdivl
les
and
popf
push
cmpsb
cmp
outsb
test
xchg
mov
lods
iret
fistps
cmp
stos
and
adc
or
sbb
pop
in
inc
fsubl
lret
sbb
pusha
cmpsl
out
dec
lret
shrl
stc
or
cmp
push
lds
in
mov
int
and
lahf
les
adc
cwtl
repnz
inc
adc
shlb
and
inc
imul
rorl
push
inc
cmc
bound
mov
test
mov
jbe
pop
movsl
sub
cmp
mov
ss
or
popa
adc
test
push
xchg
cmp
test
jg
xlat
int
jl
lock
dec
cmp
insb
push
push
push
jb
or
adc
inc
push
dec
pop
cltd
lret
push
sub
cmp
data16
inc
dec
add
fsubl
or
loop
rcll
xchg
adc
jecxz
dec
and
outsb
js
cltd
repz
leave
mov
jno
jle
sub
hlt
fwait
test
dec
adc
fsubr
daa
inc
fstpt
in
ljmp
or
inc
fwait
jp
push
iret
in
mov
je
jo
fcoms
pushf
or
sub
mov
or
dec
adc
mov
shll
push
sbb
dec
popa
mov
mov
xchg
fcoml
arpl
xchg
mov
and
bound
pop
cmpl
adc
cmp
call
dec
ret
adc
push
sbb
xor
dec
cmpsb
loope
jns
cltd
sti
adc
sarb
push
inc
test
mov
dec
out
xchg
idiv
or
push
adc
jno
jne
add
sub
movsl
fstpl
shll
and
inc
fimull
cwtl
or
dec
mov
sahf
icebp
push
xor
clc
rclb
lahf
mov
rcl
mov
test
or
leave
test
mov
movsl
and
shr
mov
sahf
aaa
icebp
popa
clc
pop
aam
test
cld
sti
adc
outsl
bndldx
into
xchg
adc
push
and
cmp
ret
mov
test
xchg
adc
mov
cs
adc
pusha
dec
add
testb
faddp
icebp
mov
sbb
and
fsubl
xor
jo
adc
lods
jnp
sub
rcrl
lea
cwtl
sub
jae
in
out
push
pop
xor
xchg
mov
xor
push
inc
mov
xorb
pop
mov
ret
xor
mov
mulb
mov
popf
mov
int
xchg
scas
sbb
mov
mov
xchg
mov
push
add
js
or
mov
daa
push
stos
push
shl
push
daa
outsb
jns
mov
adc
cs
mov
push
fndisi(8087
fldl
and
das
shl
insl
push
pop
aaa
sub
dec
rcr
lds
lretw
lret
aad
and
inc
test
mov
jno
loopne
aas
push
inc
lahf
and
mov
ss
clc
clc
popa
and
xchg
inc
loopne
or
popl
mov
push
leave
and
add
cs
mov
je
stc
cmp
mov
mov
sub
das
xchg
pop
stos
mov
addr16
xchg
sahf
xchg
dec
mov
and
cld
lods
mov
inc
movsb
inc
rcll
cmpsb
nop
sbb
jo
add
shlb
jo
aam
adcb
lods
js
xchg
mov
in
dec
jge
sarb
leave
incl
mov
push
sub
mov
pop
dec
scas
pop
cli
stos
inc
test
push
test
lret
ss
or
gs
pop
xlat
push
sub
sti
fwait
ljmp
jns
push
xchg
cmpsb
add
and
jmp
xor
sub
gs
mov
sbb
lret
add
or
outsb
mov
pushf
xor
jo
mov
sbb
rclb
jecxz
xlat
adc
xor
scas
neg
imul
jb
fsubrs
push
add
fmul
loopne,pn
jb
inc
xchg
into
mov
pop
sub
std
or
lock
hlt
mov
fstpl
mov
ds
add
mov
lock
enter
out
adc
test
test
sbb
sarl
pop
push
jnp
notl
andb
sub
dec
push
pop
xchg
adc
andl
mov
in
sahf
aas
stc
jmp
and
shll
cmc
stos
dec
lock
push
xchg
lds
fsubrs
test
mov
insl
mov
push
ss
push
adcl
test
cmp
les
sbb
mov
dec
jmp
daa
movsl
adc
insb
in
popf
sarl
scas
adc
ficoms
testb
jnp
xor
inc
int
push
add
or
dec
xchg
subb
pusha
shrl
mov
xchg
movsl
ffreep
out
out
fwait
inc
adc
add
mov
stos
mov
out
xlat
into
add
cmp
mov
pop
scas
push
into
aaa
dec
push
jmp
mov
or
xor
xor
sub
inc
inc
ds
or
sbb
cmp
jecxz
fnstcw
jge
addr16
and
outsl
into
xchg
das
popf
popa
movsb
stc
pop
cmc
push
adc
lods
mov
xchg
sahf
out
mov
jge
mov
cmp
fwait
dec
enter
test
inc
ljmp
jmp
cmp
sub
gs
sbbb
loope
sub
xchg
jns
leave
mov
lods
shrb
fdivs
out
jno
lahf
fcmovbe
js
or
sub
and
mov
shl
movsb
dec
insb
push
out
in
jmp
push
push
cmpsb
pextrw
hlt
pop
mov
adc
inc
imul
ror
pop
sub
in
cmp
jecxz
jo
jmp
jg
pop
aad
mov
popf
imul
jecxz
adc
lds
lcall
lods
icebp
pop
bound
adc
inc
lods
pop
sbbb
push
inc
repnz
lods
scas
and
fmull
add
dec
lds
sbb
imul
sbb
adc
push
cs
out
xor
mov
sahf
mov
sti
sub
add
xchg
aaa
xor
xchg
push
mov
push
xchg
ljmp
jp
dec
inc
test
les
xchg
popa
dec
test
and
cmpb
push
std
cmp
mov
shl
loope
inc
insb
inc
push
mov
and
mov
jnp
xchg
push
dec
in
aaa
xor
fcoms
scas
int
test
orb
mov
push
cmp
mov
inc
lcall
and
xchg
mov
mov
dec
out
pop
pop
jg
dec
cltd
daa
lret
das
pop
cmpsl
pop
xor
insl
xchg
sti
pop
sbb
pop
cmpsb
pop
mov
ja
aas
adc
shll
fwait
cmp
stc
mov
xor
push
fsubrl
mov
xchg
stos
mov
dec
mov
fisubl
pop
dec
mov
shrl
hlt
adc
sub
out
test
pop
popf
sti
jnp
lea
mov
add
addr16
out
fbstp
stos
xchg
mov
stos
repnz
pop
sti
mov
sahf
cmpsb
xor
sarl
ret
add
xor
jne
dec
jnp
mov
inc
mov
idivb
mov
pop
dec
fs
or
cmc
pop
inc
pop
push
and
mov
mov
inc
fwait
std
notb
popf
add
inc
outsl
pop
xchg
sub
into
cmpsl
mul
cmpsl
and
popf
loop
xor
push
out
stos
jp
jae
adc
in
add
push
cli
mov
cmp
sub
test
adc
lock
xchg
enter
pop
push
push
pushl
lcall
dec
jo
sbb
fsubs
sbb
mov
arpl
mov
leave
dec
fwait
out
lods
adc
cmpsl
mov
fsts
in
push
repnz
sub
dec
repz
divb
xchg
xor
popa
xchg
add
jge
pop
ja
rolb
insl
inc
addr16
inc
aam
sahf
aaa
lods
jl
scas
sub
sbb
inc
fildl
dec
sbb
pusha
enter
jl
adc
inc
fstps
testl
cmp
mov
out
jnp
mov
loop
pop
sub
fs
adc
push
push
leave
cmp
jp
ljmp
lcall
adc
push
in
fsubrl
add
popa
mov
stc
push
push
inc
ret
nop
cltd
aam
movsb
lret
mov
dec
xchg
faddl
jne
cmpsb
xchg
scas
ss
sub
fs
mov
add
inc
inc
jne
subl
sub
xchg
xchg
jae
dec
es
jns
sub
loope
push
jp
icebp
adc
cmp
push
insl
cmp
ret
cmpsb
loopne
mov
adc
cli
jmp
mov
xor
mov
bound
lods
insb
pop
pop
bound
mov
repz
shrl
lock
push
call
sbb
paddusw
aas
movsl
xchg
out
jne
xchg
mov
mov
imul
sub
es
mov
hlt
xor
jle
in
cltd
mov
and
xor
mov
int
les
ret
sbb
call
shlb
inc
cwtl
sub
pop
es
push
cwtl
call
in
lea
nop
mov
push
notl
or
lcall
dec
add
inc
jae
test
inc
xor
iret
dec
cld
test
sub
xchg
inc
daa
jecxz
scas
insb
movsb
clc
push
or
cltd
sub
out
xchg
dec
push
xchg
aaa
fnsave
dec
test
imul
shlb
dec
mov
mov
push
or
std
add
or
aad
std
dec
mov
ljmp
cmc
imul
subl
inc
insl
pop
je
mov
jae
cli
in
sti
ja
jmp
xchg
xchg
std
popf
mov
into
mov
ja
mov
add
jl
addr16
push
sbb
jecxz,pt
mov
add
mov
sti
sbb
xchg
mov
test
aad
iret
es
jg
inc
sbb
cwtl
mov
nop
outsl
jecxz
lock
push
and
sub
fs
add
inc
mov
xor
or
incb
in
in
adc
jnp
cwtl
dec
and
dec
cmp
xor
sub
sbb
add
jb
cmp
repz
lods
sbb
cmp
rolb
xchg
lock
sub
sbb
rcrl
test
jg
sbb
cmp
jg
sub
scas
dec
icebp
fcomps
mov
sbbb
loope
jecxz
nop
adc
mov
mov
aad
or
aad
cmpsl
pop
scas
xchg
fcoml
inc
mov
repz
jecxz
xchg
dec
xorl
add
shlb
adc
xchg
ja
imul
bound
dec
out
or
sbbb
and
push
mov
iret
inc
push
mov
lahf
pop
in
cmp
xor
testl
in
test
scas
es
and
test
xor
std
ss
inc
jmp
jge
into
stc
jmp
subl
or
add
decl
repz
pop
test
xor
pop
stos
aad
icebp
popa
mov
dec
gs
rclb
lea
cltd
cmp
or
mul
xchg
pop
cmp
adc
dec
mov
mov
enter
sbb
outsl
inc
jp
clc
jmp
xchg
pop
xchg
std
adc
dec
lea
les
addr16
call
mov
jmp
lret
lods
jle
rcll
mov
and
and
sbb
out
jbe
fidivs
insl
mov
in
xchg
jmp
dec
sbb
jle
sbb
out
mov
pop
incl
movsl
dec
gs
pop
aas
mov
fs
mov
or
xor
xchg
sbb
mov
rorl
adc
add
enter
sub
jnp
in
mov
enter
rcll
mov
addl
pop
xchg
mov
shr
jno
dec
inc
push
ret
jp
cmc
or
mov
shll
jns
cmp
pop
ss
lds
test
aad
insl
cmpb
xchg
loope
xchg
and
mov
xor
cmp
sub
test
aas
pop
iret
mov
mov
dec
xchg
xchg
aas
xor
xchg
mov
inc
mov
inc
mov
sbb
push
iret
jbe
imul
mov
arpl
pop
sarl
xchg
bound
mov
mov
movsb
in
lret
mov
jno
movsl
loope
jmp
mov
rolb
sbb
inc
mov
or
and
or
or
sub
repz
lds
inc
add
stos
or
pop
addr16
or
mov
mov
js
sbb
lahf
mov
mov
xchg
add
out
fcoms
fadds
aad
fdivrl
outsb
push
jmp
mov
ljmp
and
shll
repz
lock
mov
add
out
test
jnp
push
je
fstpt
dec
adcl
and
outsl
mov
pop
les
out
out
xchg
cmpsl
sbb
push
add
aam
test
stos
insb
inc
mov
mov
int3
test
iret
push
stos
push
pop
pop
xchg
shrb
push
xor
les
aad
jg
cmpsb
or
imul
xchg
push
mov
push
fcompl
jmp
push
lcall
sbb
pop
sti
jge
mov
ss
adc
mov
stos
xchg
lods
add
lods
mov
and
and
mov
mov
mov
f2xm1
fisttpll
in
fwait
sub
add
cmpsl
loop
push
test
jno
jns
sub
sbb
out
fdivl
cli
jmp
xor
pop
or
pop
rol
pop
xorl
movsb
imul
dec
je
sti
push
xor
add
cmpl
sub
jl
cwtl
sub
fidivl
and
sbb
out
aad
push
or
push
fstl
unpckhps
jno
in
out
jns
jbe
sbb
pop
inc
test
movsb
sahf
int3
or
in
xor
or
call
jp
mov
mov
cltd
loope
leave
pushf
xchg
and
daa
mov
test
lcall
icebp
dec
fs
ret
cmp
mov
or
rorb
ljmp
mov
push
mov
hlt
pop
frstor
xchg
fstpl
mov
xor
sub
add
pavgb
xor
jecxz
lahf
gs
fiadds
mov
cmp
push
in
lods
js
imul
movsb
mov
inc
mov
ss
xor
xor
out
stc
inc
int
mov
and
pop
ljmp
add
clc
jbe
lods
mov
mov
enter
cmp
jg
pop
push
push
outsl
les
sbb
das
fsubrl
jle
jno
std
push
fidivl
and
xchg
scas
mov
push
cmpsb
dec
outsl
test
pop
ficompl
mov
lahf
sub
jmp
test
push
mov
shrb
in
or
mov
es
dec
daa
xchg
pop
xchg
test
cmpsl
outsb
pop
outsb
xchg
push
mov
jge
pop
inc
stos
and
push
jnp
fwait
jne
cmp
sub
jl
pusha
jl
cmp
outsl
or
vpcmpgtw
lret
mull
loop
daa
and
mov
xchg
loopne
mov
loope
movsb
jmp
pop
shl
stos
xor
fistps
mov
ret
aam
das
mov
movsl
mov
stc
add
stc
jmp
fcompl
mov
imul
and
xor
push
sbb
idiv
or
das
int
jl
pop
movb
adc
stc
xlat
ffreep
stos
test
push
ss
shrb
fdivs
repnz
mov
pop
push
sti
arpl
imul
inc
scas
add
leave
inc
add
xchg
jp
das
out
jne
xor
rcl
cs
xor
lods
jl
or
cs
jmp
adc
sbb
stc
xchg
push
popf
mov
xchg
xlat
or
push
cmp
cmpl
pop
add
popf
aam
test
sbb
add
fstl
add
popw
cltd
lock
call
in
clc
mov
pop
out
aad
inc
imul
sub
in
jmp
lods
fcoml
sub
lea
movsb
push
mov
jg
adc
jno
rdtsc
icebp
test
or
cli
and
ret
xchg
inc
inc
mov
out
sbb
nop
test
out
jecxz
pop
add
aam
mov
clc
inc
adc
sub
add
jle
adc
jg
mov
inc
addr16
rcr
int3
xchg
out
cltd
in
or
cmpsb
dec
jnp
mov
stos
outsl
in
xlat
movsb
xchg
adc
mov
dec
push
inc
mov
cmp
nop
xor
xor
or
adc
or
mov
cmpsl
jp
inc
push
insl
scas
in
das
pusha
mov
popf
dec
mov
mov
push
sbb
lea
sbb
cs
rcll
push
loopne
push
push
xchg
shll
sti
negl
repz
ja
ss
subl
xor
in
xor
frstor
loopne
fists
sahf
add
stos
xor
test
xchg
xchg
arpl
jl
adc
xchg
test
enter
loope
jle
mov
push
scas
mov
xor
dec
mov
mov
push
jl
jae
dec
mov
mov
dec
mov
xchg
inc
out
test
adc
push
inc
or
popf
enter
cs
popa
loope
xor
insb
cld
lret
sub
mov
push
clc
jnp
test
and
mov
fs
xchg
and
fwait
mov
or
outsl
push
cmp
lock
adc
push
sub
sti
pop
insb
lret
jge
data16
jne
shll
in
inc
mov
add
push
pushf
loopne
mov
shrl
add
hlt
fdivr
gs
lods
test
mov
push
mov
stc
xor
xchg
push
js
push
mov
mov
mov
inc
xchg
mov
pop
sub
dec
lods
dec
xchg
jnp
jmp
lods
mov
pop
jb
xor
or
repnz
aas
dec
sub
xchg
mov
adc
aaa
ret
xor
mov
mov
jle
incb
mov
mov
inc
loopne
dec
pop
fiaddl
inc
xor
xchg
sbb
mov
pop
cltd
pop
scas
pop
dec
lock
scas
cmp
call
inc
lods
iret
xchg
jecxz
xchg
mov
clc
pop
jnp
jl
or
cmp
imul
pop
call
cmp
into
lock
std
mov
gs
pop
adc
add
mov
out
into
sbb
loopne
jg
pop
adc
or
fdivr
andb
call
dec
jb
cwtl
in
adc
xor
sub
xchg
jns
pop
imull
and
lock
inc
loop
sbb
mov
pop
jnp
psraw
sub
test
jno
jge
lahf
xor
fisubl
fbstp
lcall
data16
pop
cmpsb
and
insb
and
mov
lea
mov
cmpsb
test
popf
mov
and
pop
in
xor
push
mov
cmp
fimull
xor
mov
lcall
mov
lock
mov
push
dec
sbb
daa
xor
fisubrs
pop
out
js
sbb
cli
xchg
or
repz
scas
xchg
jge
lds
jbe
mov
aad
ret
cmp
push
dec
inc
cwtl
or
and
mov
mov
jl
xor
xor
xchg
ds
pop
xchg
popf
rorl
out
jg
mov
leave
jecxz
insl
jno
mov
out
pop
inc
push
out
lock
enter
xchg
inc
movsb
cmp
dec
test
sarl
bound
mov
dec
in
sarb
mov
fnsetpm(287
cmp
sbb
xor
and
sub
dec
mov
daa
mov
inc
adc
mov
ret
imul
xor
push
jecxz
popf
psubd
jbe
pop
js
sahf
xchg
mov
orl
fdivrs
fildl
test
jg
mov
jb
lods
sbb
insb
cmp
sub
clc
das
mov
inc
loopne
jmp
popa
lods
aas
shlb
mov
push
cmp
cmp
pop
out
and
mov
inc
mov
add
test
jno
xchg
into
jmp
xchg
wrmsr
mov
fistl
test
dec
mov
cmp
cld
xchg
push
push
fadds
dec
mov
xchg
add
mov
mov
pop
jmp
repz
jl
dec
mov
out
add
aas
cmp
xchg
jne
lds
imul
inc
add
xchg
bound
daa
loop
aas
ret
jo
call
jmp
fldt
dec
pop
jo
cmc
fnstsw
mov
push
in
mov
stos
popf
add
adc
jmp
jp
cmpsb
push
add
xorb
mov
jne
and
int3
xchg
mov
out
mov
sarb
dec
sbb
fistps
push
mov
inc
adc
das
sbb
mov
mov
and
int3
cmovnp
pusha
xor
add
push
push
xchg
loop
mov
pop
shlb
sahf
cmp
inc
lea
imul
inc
popa
xchg
xchg
xchg
sub
dec
pop
ret
pop
xchg
mov
jno
push
add
pop
and
fcmovne
mov
loope
rolb
cwtl
fidivl
pop
adc
sahf
or
mov
jbe
fs
clc
adc
rol
sub
pop
xchg
jo
push
testb
hlt
dec
sahf
sbb
fwait
mov
mov
in
dec
je
sub
stos
inc
cld
jmp
and
pop
daa
mov
test
jae
sbb
fcomip
dec
mov
cmp
sbb
popf
outsl
cwtl
scas
ja
ljmp
mov
and
icebp
out
shll
inc
sbb
push
jmp
pop
adc
sbb
ret
pop
cmp
and
pop
mov
test
xchg
pop
mov
inc
adc
lcall
xor
adc
js
ret
dec
xchg
lods
gs
rclb
lds
aas
cmp
push
adc
aam
pusha
call
cmp
mov
jbe
movsb
push
and
xor
sbb
aam
sub
push
mov
ficompl
xor
aas
and
and
xchg
fnsave
stos
mov
inc
sahf
subl
insl
lret
xchg
lret
cwtl
lods
ljmp
enter
mov
mov
fdiv
mov
imul
mov
push
aad
adc
mov
mov
mov
and
cld
pop
sbb
dec
sbb
jge
xchg
or
inc
in
cld
mov
jg
jle
pop
fs
xchg
or
sbb
pop
dec
pop
fs
jns
mov
mov
jo
jecxz
enter
sub
xchg
xchg
mov
loop
xchg
mov
cmpsb
cmp
cmpsl
cmp
push
rolb
leave
test
adc
cwtl
ds
mov
nop
mov
leave
sahf
je
adc
cmpsl
aam
lret
jo
mov
and
out
popf
dec
and
sub
mov
cmp
dec
xchg
mov
data16
jno
scas
popa
cld
adc
xchg
popf
ds
pop
cld
xor
cltd
push
inc
shlb
les
inc
nop
adc
mov
push
shll
xor
clc
repz
jne
aas
mov
cmp
push
loop
inc
xor
push
leave
pop
push
mov
fidivl
fldl
xchg
orl
gs
xchg
lods
add
pop
adc
test
cmp
pop
jg
pop
inc
and
icebp
mov
jl
push
in
add
push
inc
fmul
or
aam
fcoms
push
mov
mov
sbb
arpl
pop
sbb
ja
push
ds
inc
repnz
xor
add
or
out
jb
lock
inc
xchg
cmp
addr16
or
mov
xor
and
cmp
jo
add
dec
dec
mov
push
test
sbb
iret
insb
xchg
and
sahf
ret
mov
in
rcll
push
push
fimull
mov
mov
ficoms
cmp
addl
sub
fadds
push
fwait
mov
ret
sub
sub
dec
xchg
pop
adc
out
xchg
jbe
push
mov
mov
ja
lahf
lahf
dec
rorl
popf
addr16
pop
fidivrl
stc
ret
scas
bound
fs
sbb
mov
xor
push
decb
or
inc
jecxz
adc
stc
mov
mov
jae
rcl
add
sub
cmp
cmp
or
pop
andl
ja
mov
ljmp
das
sti
movq
aad
cmp
inc
imul
push
and
outsb
mov
sarb
or
adc
fldenv
mov
arpl
push
addr16
and
push
and
fisttpll
outsl
fmull
mov
pop
stc
je
aaa
and
xlat
mov
jb
xchg
sub
dec
push
xchg
fcmove
pop
out
sub
jge
sti
shll
or
outsb
cmpsl
add
icebp
and
movsl
mov
or
rolb
xchg
clc
mov
insl
aad
mov
call
xlat
adc
sbbl
mov
ficompl
pushf
cwtl
imull
mov
sbb
cmp
gs
out
scas
je
sub
mov
adc
push
fsubrs
mov
test
mov
pop
jge
xor
push
adc
movsb
popf
jmp
jmp
mov
in
scas
jle
in
cmpsb
xchg
ret
ss
inc
adc
nop
inc
dec
dec
insb
xorl
stc
outsl
or
xchg
xchg
sbb
aad
lods
imul
adc
dec
loope
push
pop
mov
mov
mov
push
shlb
jo
dec
adc
adc
sbb
pop
push
movsl
inc
fs
clc
inc
inc
dec
hlt
loop
clc
addr16
pop
subl
mov
inc
andl
pop
mov
or
outsl
loope
decb
dec
lock
loop
xchg
push
sub
scas
hlt
mov
fldt
pop
sub
adc
adc
xchg
push
enter
or
insb
fildl
push
xchg
lds
into
loope
inc
mov
ja
in
ljmp
sbb
mov
sahf
pop
idivb
bound
xchg
insl
mov
mov
bndstx
out
roll
rolb
sub
outsb
mov
js
dec
mov
insb
lock
sti
out
sub
push
nop
xor
push
cmp
or
ss
sbb
pop
and
jp
or
adc
out
pushf
pop
adc
insl
push
incl
mov
or
fs
inc
or
shrl
inc
mov
call
mov
test
arpl
mov
adc
jo
mov
jbe
decl
andl
dec
inc
out
and
das
mov
notl
add
dec
add
pop
cld
sahf
jg
jl
pop
mov
jb
or
loopne
xor
xor
jp
repz
mov
add
scas
imul
shll
cmp
mov
loope
ffreep
xor
jmp
pushf
pop
dec
outsb
ret
sbb
ss
xchg
mov
jnp
add
mov
mov
inc
mov
aad
rolb
jmp
jp
xor
out
fwait
ljmp
xchg
adc
mov
aaa
orl
ja
repnz
js
lock
mov
dec
test
fstl
lods
xchg
sbbb
mov
add
std
js
push
cld
mov
sub
iret
popf
pop
dec
or
jge
push
mov
rorb
and
loop
inc
movsl
movsb
cwtl
cmpsl
mov
pop
pushf
inc
mov
xor
shrb
cmp
cmp
xchg
mov
inc
popa
sbb
inc
nop
xchg
sub
loop
stos
jecxz
out
out
out
sbb
ret
add
mov
mov
loope
mov
mov
cmp
adc
testl
adc
xchg
jge
or
sbb
or
int3
scas
mov
fdivrs
fcompl
sbb
jecxz
xor
pushf
and
xor
int3
or
fistl
cwtl
mov
pushf
inc
jo
push
and
and
sbb
mov
jle
lods
cld
ja
idivb
adc
mov
dec
xor
inc
push
ficompl
xorl
lods
pop
je
push
xlat
loopne
mov
mov
pop
test
xchg
repnz
fcmovnu
mov
mov
fsubrp
jbe
mov
leave
inc
jmp
scas
mov
jb
jmp
push
push
jne
cmp
xor
mov
xchg
pushf
mov
test
jp
xchg
adc
sub
shlb
ds
jo
repz
lcall
xchg
jb
xacquire
pusha
or
sub
cmp
pop
das
decl
pop
movups
push
add
fisubl
test
clc
mov
and
inc
or
dec
lock
jo
sbb
inc
icebp
fadd
pushf
loopne
jns
stos
fmuls
cmp
rolb
xor
xor
pop
adc
sub
jo
rcr
lret
inc
out
aaa
sub
ficomps
mov
loop
jns
std
clc
lock
cmp
mov
jbe
push
gs
stos
jp
fldenv
imul
push
stos
lds
cmp
movsl
int3
dec
repz
sbb
test
inc
ror
clc
div
mov
dec
popf
and
and
pusha
and
dec
shrl
das
mov
imul
inc
mov
and
test
mov
and
pop
mov
adc
add
insb
rcrw
data16
pop
adc
shlb
and
mov
inc
and
jb
cld
sub
xchg
lret
les
das
loope
and
jge
xor
pop
movsb
loop
out
inc
pop
sbb
aas
insl
mov
int3
stos
shlb
sub
jb
mov
mov
icebp
adc
push
add
dec
in
ffree
mov
notl
xchg
jmp
sahf
mov
xchg
dec
data16
sar
call
rorb
cmp
sbb
cli
push
stc
imul
repnz
jle
divb
xor
push
imul
icebp
cmpb
iret
xor
sub
sbb
mov
test
dec
aaa
mov
dec
mov
frstor
js
out
mov
aas
inc
mov
mov
inc
xchg
mov
jno
sbb
sub
fcmovu
and
es
in
jae
in
stos
xabort
mov
mov
jmp
outsl
fistl
sbb
repz
out
insb
popa
mov
dec
repnz
sbb
cmpl
push
pop
sti
jle
mov
adcl
ss
pop
in
nop
iret
mov
mov
mov
lods
mov
jg
imul
push
sub
jp
lcall
in
dec
push
scas
xor
icebp
push
ja
insl
prefetch
push
in
push
in
lcall
fmul
clc
ss
sbb
inc
sahf
jne
push
pushl
xlat
pushf
insb
add
stos
mov
adc
pop
sub
lea
xchg
push
xchg
sarb
ljmp
mov
sti
jnp
mov
pop
pop
mov
push
cmp
pusha
inc
cli
mov
jge
add
jns
hlt
shrb
popf
mov
jl
push
lret
mov
or
dec
mov
aad
daa
pop
outsl
pop
shl
push
out
add
in
or
in
add
rcr
cld
or
mov
lds
cmp
add
inc
push
test
cmp
ja
mov
jmp
sti
push
jb
test
clc
dec
insb
mov
cmpsb
cli
arpl
je
int
scas
popa
push
or
mov
cld
jbe
xorb
lock
fsubr
xor
leave
cmpsb
add
inc
mov
jp
out
rcl
mov
out
popa
add
imul
cld
sub
push
or
adc
pop
adc
push
test
popf
mov
cmp
movsl
mov
call
or
jbe
icebp
mov
pop
dec
fwait
mov
pop
push
test
jnp
ret
das
cmp
in
add
or
je
imul
adc
inc
adc
fiaddl
shrb
xlat
mov
mov
aaa
fcomi
jo
rol
adc
and
xor
pushl
cs
dec
and
push
lods
movb
push
subl
test
stc
fnstenv
mov
pop
sub
rcrl
test
lret
rcll
push
ret
ret
adc
dec
enter
pop
cmp
dec
mov
jnp
pop
dec
mov
push
in
movsb
add
out
xchg
push
lret
mov
repz
mov
jo
or
mov
add
imul
es
movsb
lods
sub
ljmp
imul
mov
jg
xchg
out
adc
sub
int3
ja
js
dec
xchg
insl
mov
cmpsl
stos
xchg
and
jae
xchg
mov
jg
insl
or
lods
mov
mov
add
stos
sti
sbb
sbb
mov
es
loope
xchg
lods
pushf
push
cmp
inc
cmpsb
pusha
mov
fstp
or
into
jno
jae
jo
cld
jbe
gs
add
or
aas
sahf
adc
inc
mov
lds
addr16
jmp
aas
shll
fldl
adc
imul
nop
orl
mov
stos
mov
loope
push
ss
js
xchg
fdivrl
push
les
xlat
daa
clc
aad
fadds
js
stc
stos
sbb
jl
test
test
mov
rcrb
movsl
inc
cltd
icebp
rcrl
lock
pop
sbb
js
adc
pop
stos
cmp
jle
cltd
outsl
lcall
jbe
dec
ja
shrl
push
insb
popa
jl
and
dec
mov
fldz
add
jnp
xor
add
mov
jge
pop
fwait
enter
js
jl
int3
aam
sbb
push
mov
lods
sahf
xor
xor
xchg
sbb
cmpsl
ds
or
mov
push
dec
in
ds
dec
push
les
test
xorb
push
push
ja
sub
nop
idiv
mov
sub
adc
mov
jmp
dec
bound
cltd
mov
clc
or
fsts
jo
shrb
fimuls
nop
mov
mov
adc
jae
sahf
cmp
lds
jmp
and
mov
scas
les
push
mov
andl
ljmp
pop
mov
mov
enter
add
or
sbb
outsb
in
add
mov
outsl
sti
insl
js
cltd
outsl
rcl
pusha
sbb
adc
les
movsb
lcall
jmp
mov
sahf
sti
mov
test
add
push
dec
ds
xchg
or
outsb
aam
or
and
pop
push
or
adc
gs
scas
mov
data16
fsts
jbe,pn
xchg
fdivs
ds
adc
and
imul
iret
lret
push
das
ret
aaa
xor
fdivrl
lret
pop
fmull
sbb
xor
inc
add
cmp
iret
sete
lods
shll
dec
mov
imul
pop
xor
xchg
mov
mov
mov
daa
loope
jp
cmp
jle
call
in
inc
cmp
dec
aaa
xor
or
stos
cmp
and
cmp
adc
sbb
sti
mov
aas
sub
xchg
lock
testb
sbb
inc
lret
pop
stc
lock
stos
pusha
ja
and
cmp
movl
icebp
bndstx
mov
in
jp
pop
push
stc
scas
xchg
out
pop
jg
xlat
mov
sbb
inc
push
loope
das
cld
ljmp
xchg
cmpsl
xorl
jb
dec
dec
loopne
mov
inc
pushf
inc
in
adc
in
ret
outsb
cmp
xchg
out
movsb
inc
sbb
add
xchg
and
insl
mov
or
int3
insb
and
add
and
cs
lcall
xor
pop
cmp
inc
sub
int
cmp
das
xchg
xor
mov
dec
xchg
dec
jmp
aas
push
mov
inc
push
insb
aad
mov
mov
lea
and
test
mov
and
mov
sub
mov
call
aaa
ret
inc
push
daa
mov
loope
or
or
pop
and
sbb
sub
adc
dec
shr
outsb
xor
mov
in
lea
out
lds
enter
mov
mov
loop
arpl
add
ja
jmp
dec
je
dec
add
ljmp
leave
pop
fldt
loop
lcall
sub
addr16
stos
cs
push
outsl
jns
push
jmp
pop
bnd
out
inc
gs
dec
add
inc
repz
lcall
std
mov
outsb
xchg
cmp
jmp
sub
cmp
ljmp
xor
or
fstpl
push
out
jnp
add
xchg
adc
into
mov
mov
lret
add
out
xchg
lea
cmp
imul
lods
decb
xor
dec
movsb
pusha
add
in
xor
js
aas
pop
test
lahf
fnsave
mov
int3
lods
dec
push
cmc
jmp
sbb
int
push
mov
jg
mov
repnz
das
mov
sub
ret
adc
shlb
test
sub
dec
gs
sub
mov
mov
inc
in
das
rcrl
and
lea
outsl
call
ss
push
int3
nop
test
clc
ljmp
add
push
fsubl
ss
jno
lahf
rcrb
imul
adc
xor
xlat
pop
out
addr16
push
dec
fwait
pop
pushf
and
jg
inc
test
mov
repz
inc
inc
in
les
mov
pop
or
mov
add
xchg
lock
mov
sbb
imul
sub
fimuls
dec
push
jmp
jae
dec
fcmovbe
push
movsb
adc
or
xor
sub
lcall
in
jae
mov
lods
ret
push
fidivrs
dec
adc
out
push
ljmp
icebp
das
cmp
in
das
inc
pop
jae
pop
data16
mov
cld
rcr
sarl
nop
clc
sbb
pusha
xor
lahf
jge
xchg
or
and
mov
push
pop
add
jge
jle
mov
ret
cmp
add
fs
mov
cmp
sub
or
jp
and
fwait
push
subb
push
xor
push
popf
jmp
arpl
out
pop
ret
sbb
arpl
sbb
mov
sti
push
push
inc
daa
enter
push
cmp
test
mov
mov
aaa
lret
fs
pop
and
cmp
and
dec
repz
jg
stc
enter
int
push
fwait
inc
xchg
fidivs
lods
pop
sbb
adc
insl
xlat
loope
movsl
mov
inc
and
and
push
fs
cmpsb
and
gs
xchg
lock
add
out
mov
aas
mov
leave
aad
pop
push
sbb
rclb
imul
out
stos
loope
imul
adc
scas
dec
pop
jp
enter
sbb
push
test
mov
inc
jns
pop
or
lret
stos
dec
cli
sub
cld
iret
leave
sbb
sbb
cmpsb
fwait
in
fistpll
je
adc
and
adc
jl
push
pop
mov
mov
leave
flds
ss
aaa
ret
and
lcall
or
rcr
mov
sub
std
push
imul
sub
jbe
out
mov
or
jbe,pt
je
adc
and
stos
push
push
add
push
aaa
xchg
sbb
insl
ljmp
inc
xchg
call
mov
repz
inc
int3
mov
push
imul
cmp
pop
in
push
and
popf
sbb
jge,pt
ss
pop
aas
in
fdivrp
push
mov
cwtl
push
adc
lahf
gs
or
jle
push
dec
and
hlt
pop
movsb
mov
jle
lret
cmpsb
jl
nop
push
jns
outsl
scas
bound
or
xchg
dec
fwait
jmp
call
into
movsb
pop
js
aas
lds
repz
cmpsb
loop
xor
cmp
fldl
mov
fstps
or
sar
mov
sub
cmp
mov
jecxz
cmp
insb
cmc
pop
jnp
bound
inc
shlb
aaa
jge
out
aad
add
mov
ds
pop
in
mov
jb
fwait
lock
dec
pop
dec
add
pop
cmp
adc
fildll
mov
inc
cmc
lds
jb
repz
and
cmc
sahf
inc
ss
inc
cmc
push
mov
adc
ret
jge
xor
mov
aas
lds
lcall
mov
pusha
mov
xchg
in
and
xchg
xor
sahf
lcall
sti
clc
stos
adc
and
add
cmpb
divb
sarl
out
push
ss
adc
xor
fmull
fisttpl
movl
or
and
jae
cmp
in
mov
repnz
cmp
xlat
stos
fwait
es
test
aaa
xchg
mov
lds
popa
stos
pop
aas
pop
rcr
std
pop
sub
pop
jecxz
aas
outsb
and
aam
lods
stos
std
sbb
cmpsb
pop
repz
or
adc
and
in
mov
sub
push
inc
and
push
andl
mov
adc
test
fsubs
mov
test
or
loopne
sbb
push
call
mov
out
sti
ret
stc
cld
outsl
cmp
push
jb
mov
pop
fistpl
jg
loop
aaa
push
fucomi
lds
fimull
mov
repz
andb
jl
aaa
lret
pusha
mov
roll
iret
sti
mov
mov
int
in
lahf
push
sahf
frstor
mov
push
call
jmp
push
bound
pop
ja
shlb
bnd
mov
popl
pop
xchg
test
test
clc
ljmp
data16
sbb
test
jg
push
dec
fldenv
xchg
mov
xor
aad
std
pop
ret
dec
iret
mov
int3
inc
jns
int3
jbe
mov
push
or
inc
test
sti
and
mov
sub
mov
inc
dec
dec
ja
jo
inc
xor
add
cmp
es
cmp
pop
fstpt
xchg
and
sbb
shrl
roll
aas
lods
xchg
adc
in
sub
jmp
jno
or
lock
sar
jbe
call
andl
mov
mov
cmp
and
xor
imul
je
rorb
sbb
inc
cwtl
jo
addr16
shrl
icebp
movsl
push
cmp
fwait
out
clc
adc
pop
or
das
lock
enter
add
stos
cwtl
adc
and
movsb
outsb
push
scas
repz
repz
mov
aam
push
sbb
mov
test
ja
mov
leave
push
lds
mov
shr
scas
mov
fs
and
push
adc
in
std
add
mov
mov
cmp
rcrl
nop
idivb
mov
dec
test
imul
mov
pop
mov
adc
sub
fmull
lret
cmc
mov
pushf
rcrb
pop
xchg
sti
xchg
sarl
es
pop
push
xor
clc
outsb
push
mov
fimull
gs
cli
aas
sbb
fs
insl
popl
rol
and
test
fs
out
adc
xor
pusha
shl
outsl
inc
sbb
outsl
and
jp
das
enter
xchg
mov
hlt
mov
jbe
add
push
push
std
stos
out
sbb
adc
cmp
jo
mov
lea
es
sub
add
jg
dec
xchg
adc
mov
stos
popa
outsl
sbb
ror
xchg
pusha
xor
sahf
add
outsl
adc
xchg
sti
mov
movq
dec
mov
adc
test
mov
push
mov
pushl
or
inc
dec
xor
ljmp
cli
xchg
mov
add
cmp
add
sub
add
divl
jb
roll
mul
inc
push
adc
xchg
lock
push
loope
into
and
push
fs
std
cmp
mov
aam
out
cmp
testl
pop
ds
jb
sub
jp
mov
dec
pop
adc
insl
and
xor
out
sbb
dec
mov
mov
push
stos
dec
adc
ret
arpl
js
into
icebp
daa
pop
mov
pop
scas
inc
cmpsl
mov
mov
sbb
xchg
test
and
out
push
fimuls
popa
fsub
popf
cmp
arpl
xchg
lds
out
sbb
xchg
adc
cmpsl
lods
mov
into
movsl
aad
mov
add
sti
lds
loop
int
add
inc
mov
sti
in
sbb
aam
icebp
jne
inc
decb
ret
mov
cmp
fistpll
xchg
pop
arpl
outsl
loopne
lahf
xchg
mov
sub
outsb
shl
divb
xchg
mov
pop
daa
ss
das
xor
sbb
inc
imul
testb
mov
add
scas
mov
or
outsb
or
imul
dec
jbe
rcll
xor
cmp
mov
fsubrs
or
mov
sub
or
gs
popa
pop
in
stc
inc
mov
daa
mov
daa
js
sbb
xchg
push
aaa
sbb
rorl
int3
mov
js
xor
enter
xorb
lea
mov
pusha
into
dec
push
sbb
adc
enter
mov
scas
add
mov
sbb
xor
inc
std
fmuls
and
das
adc
mov
jb
jle
imul
clc
es
mov
in
ret
sarb
sbb
imul
cs
repnz
mov
xor
xchg
xchg
jnp
test
pop
add
push
roll
jnp
mov
test
jge
pop
flds
mov
push
adcl
cwtl
int
xor
lret
sbb
divb
adc
fcmovnb
aaa
xor
xor
dec
test
xlat
xor
repnz
cmp
hlt
mov
xchg
mov
std
fisubrl
xchg
icebp
dec
push
daa
in
fcompl
cmp
and
mov
push
mov
cmp
leave
xchg
loope
test
inc
mov
mov
mov
loop
jae
ja
adc
add
push
xlat
cmp
fldcw
pop
pop
clc
cwtl
inc
bound
add
push
push
push
cmp
mov
bound
ret
push
adc
mov
fidivs
lock
call
arpl
mov
imul
aam
jl
pop
pop
mov
cmp
dec
sub
mov
shrl
imul
dec
decl
fstpl
rclb
cli
sar
test
adc
lock
mov
add
mov
inc
jl
jge
into
pop
jnp
frstor
adc
in
push
loop
iret
xor
stos
jne
push
xchg
jne
fbstp
and
arpl
mov
repnz
out
cli
call
mov
add
cmp
mov
inc
pusha
add
cli
xlat
xor
out
insb
fs
mov
push
fistl
lods
and
push
or
dec
jp
cmpl
insb
adc
fldcw
adc
unpcklps
cmc
idivb
adc
lea
mov
sbb
lods
nop
scas
push
sbb
push
jo
xchg
inc
lods
loopne
and
push
mov
jo
push
iret
and
adc
xchg
push
insb
mov
rcrl
xor
mov
das
mov
repz
jle
push
xchg
in
push
fnsave
int
xchg
xor
adc
clc
aaa
ja
mov
mov
faddl
push
ja
neg
jl
gs
push
out
mov
add
pushf
ss
fwait
jg
movsb
dec
shrb
inc
ret
fst
leave
sub
and
xchg
sbb
inc
popa
test
aas
fisubl
and
xchg
push
and
or
fists
cwtl
dec
mov
shl
push
fwait
push
lahf
ret
fwait
int3
xchg
ret
ficoms
push
pop
add
hlt
ljmp
mov
out
scas
mov
loopne
fstpt
sbb
sbb
cmp
sbb
add
nop
in
push
in
imul
aad
ljmp
pop
inc
xchg
movsl
rcl
dec
data16
inc
push
cmp
xlat
push
lahf
pop
loope
pop
pop
adc
adc
fwait
add
sbb
ljmp
adc
and
and
jecxz
xchg
lcall
bound
pop
repnz
push
test
mov
xor
std
push
sbb
xchg
push
xchg
xchg
push
mov
dec
xor
jb
xor
punpcklbw
jae
lock
in
in
dec
cs
inc
cltd
or
ss
or
lret
inc
mov
fisubl
or
js
sar
sbb
xor
push
aaa
cltd
fsts
mov
fists
sbb
test
inc
or
pop
cmp
bound
mov
mov
ret
ret
fwait
leave
inc
dec
jl
imul
rclb
and
and
dec
seta
aam
xchg
test
scas
cmpsb
inc
pop
call
iret
xor
mov
adc
mov
ds
or
sub
dec
and
mov
inc
stos
cmp
cli
fdivs
rclb
fildll
pop
mov
rclb
cs
pop
fdivs
pop
add
cmp
mov
sbb
push
scas
xchg
inc
xor
add
mov
notl
les
pop
sbb
and
fadds
shl
add
test
lock
xchg
sub
inc
les
sahf
sub
cmp
cmp
jg
imul
ret
scas
dec
aam
ss
xchg
into
adc
pop
fidivrl
mov
inc
add
mov
jl
outsb
sbb
cmp
xorb
mov
rcrl
insl
mov
mov
cltd
je
loop
mov
mov
and
add
xor
lock
jo
xor
jmp
scas
cmpl
dec
lahf
faddl
dec
stos
addr16
sti
mov
jno
inc
pop
mov
rol
pop
sub
pop
jbe
mov
popf
sub
xlat
sub
cld
and
xchg
mov
sbb
stc
xchg
loop
leave
cmpsl
pop
mov
mov
xor
dec
cmpsl
movsl
mov
imul
mov
mov
mov
xchg
xchg
cmp
push
mov
pop
leave
lods
mov
pop
dec
add
call
xchg
in
jae
mov
lods
negb
mov
out
rorb
scas
mov
xchg
lcall
xchg
or
inc
sbb
pop
imul
inc
cmc
rclb
ss
fdivrs
xlat
insl
pusha
jb
outsl
inc
cmp
cs
hlt
and
mov
in
aam
test
lcall
ja
jne
repz
pop
push
sbb
aad
xor
ljmp
mov
xchg
dec
ror
xchg
mov
scas
stc
mov
mov
mov
mov
xor
iret
jl
mov
mov
sub
inc
notb
faddl
rorl
xchg
into
jle
addr16
push
out
test
enter
ljmp
push
mov
out
int3
mov
adc
insl
push
rclb
mov
xlat
lret
or
popf
int3
popa
imul
cmp
repz
loopne
in
inc
decb
sbb
scas
jno
shl
ja
cli
sub
mov
pop
push
pop
push
shll
sti
mov
xchg
sub
fsubs
pushf
ljmp
jg
cwtl
xchg
jne
mov
lock
inc
fcmovne
pop
mov
aaa
fisubl
mov
jge
jge
pop
pop
fildl
fcmovu
scas
mov
rorb
fwait
scas
sbb
xchg
seto
rclb
mov
and
and
and
xorl
xchg
enter
jge
jl
test
out
sub
adc
and
loop
mull
aam
cmp
fmull
out
ficomps
jmp
add
xor
sti
je
popa
subl
mov
cmp
add
lcall
mov
and
aad
cltd
jp
push
mov
sub
test
popf
or
stos
fdivrp
xor
nop
pushf
repnz
push
js
sbb
imul
inc
xor
mov
imul
push
sub
leave
mov
nop
insb
cmp
or
fcomip
jb
call
jae
pusha
and
fs
sti
movsl
shl
flds
insb
jmp
test
cmp
cltd
loop
test
cmp
out
lods
shlb
cli
pusha
ds
sbb
cmp
mov
jb
call
ja
push
rcl
stos
inc
in
ss
or
daa
inc
mov
fstps
punpckhdq
es
ljmp
mov
stos
sbb
ficoml
cmp
push
fsubr
int3
mov
stos
bswap
scas
fidivrs
aas
push
fcomp
lcall
push
fstl
repnz
subl
shlb
ret
jno
rcrl
mov
pop
cltd
mov
les
lods
lods
insb
xlat
js
adc
icebp
mov
orl
out
int3
and
push
fs
push
es
pop
mov
daa
and
dec
xchg
xor
mov
jbe
enter
jns
add
testb
jmp
push
push
sbb
mov
pop
or
or
mov
mov
jp
test
dec
addl
add
call
jge
jmp
mov
out
sahf
push
adc
mov
mov
fdivl
inc
cmp
inc
sbb
in
and
inc
idivl
adc
xchg
xor
xchg
sub
test
andb
adc
cmc
mov
fisttps
mov
add
mov
push
push
mov
insb
inc
jle
jecxz
mov
dec
jmp
jae
movb
ds
fsts
shll
mov
xchg
xor
adc
lret
or
fsubp
xor
jmp
sub
mov
cmp
rclb
lcall
mov
mov
xchg
adc
jl
lds
adc
push
xchg
gs
sub
lahf
les
and
cltd
nop
add
cmp
push
sub
popl
mov
imul
xor
push
lahf
sbb
add
sub
mov
add
jo
adc
out
dec
and
mov
or
scas
jae
rcrl
adc
jns
xorb
push
sbb
push
xchg
pop
push
and
mov
xor
pop
ja
mov
pop
jge
fnstcw
inc
jmp
rcl
dec
dec
mov
sub
cld
push
jmp
pop
mov
xlat
inc
fcomps
dec
mulb
test
in
mov
adc
hlt
push
cmp
push
repz
fcoml
dec
scas
imul
pushf
scas
jge
inc
push
xor
cmp
dec
and
sub
and
fs
xor
cld
ret
nop
icebp
sub
and
pop
sti
adcl
shl
push
aam
jg
push
imul
lcall
nop
dec
push
fildll
arpl
lret
pop
xchg
stc
leave
popa
or
loopne
dec
mov
dec
mov
das
test
pop
or
sbb
or
sub
dec
push
sarl
lret
mov
push
add
sbb
loop
inc
and
jmp
adc
or
push
lods
sarb
cwtl
adc
call
xchg
push
js
fwait
mov
popf
out
lds
insl
xor
and
pandn
in
rorl
fisttpl
testl
push
fcomi
push
fbld
aas
jo
inc
pop
enter
pop
fistps
imul
jmp
movsb
out
sti
jmp
xchg
icebp
movsb
lds
jg
stos
movsb
in
ret
outsb
aaa
fdivrl
sbb
sub
sub
jbe
cld
rorl
mov
sbb
out
jae
lcall
popf
inc
dec
adc
sbb
dec
test
fbld
sbb
mov
dec
clc
leave
mov
dec
rolb
stc
mov
pop
inc
cmp
out
es
fistpl
push
and
lock
pop
push
mov
mov
ljmp
cmpsl
subl
outsl
pop
in
xor
int
sbb
cmp
imul
cmpsl
add
ret
ss
fucomp
test
pusha
inc
loopne
jno
pop
sbb
imul
and
cmpsb
arpl
dec
xchg
mov
push
cmp
pop
inc
test
ljmp
push
lcall
sub
jmp
insl
push
mov
xchg
js
pop
dec
ja
movsl
adc
inc
loopne
daa
cli
test
data16
leave
in
arpl
pop
mov
iret
pop
hlt
lret
push
sarl
repz
push
or
mov
lock
negl
pop
jbe
hlt
imul
scas
pop
lcall
jge
sub
xchg
jl
je
aam
inc
xor
xor
je
pop
mov
js
pop
dec
xchg
jle
add
js
out
adc
sub
sub
mov
sbb
nop
mov
lods
add
pop
mov
sub
daa
and
cmp
rcll
addr16
js
dec
mov
outsl
bound
andl
adc
mov
les
roll
test
pushf
and
mov
ja
push
sbbl
es
pop
jae
pushf
dec
lret
and
mov
lahf
fdivs
sbb
mov
sbb
xchg
and
test
xchg
jne
mov
sahf
shll
movsb
scas
push
insb
sub
inc
lock
scas
xchg
lea
jne
xor
push
ja
aas
call
cld
dec
pop
out
lcall
dec
test
push
cmpsl
shrl
xlat
lret
jne
cmc
mov
jmp
and
jg
bound
div
dec
leave
test
and
jmp
mov
insb
pop
mov
mov
mov
addb
mov
jp
or
push
gs
sub
xor
xchg
mov
popa
ja
aad
fs
cmpxchg8b
jmp
ret
sub
and
divl
dec
out
jge
cs
es
inc
push
or
sub
cli
xchg
sbb
mov
imul
imul
xchg
out
pop
mov
insl
pushf
int
fidivs
test
mov
or
cmp
jno
jno
pushf
pushf
mov
dec
and
jne
jmp
mov
dec
pavgb
cs
xchg
mov
ror
out
outsl
mov
iret
pop
mov
lds
dec
mov
popf
or
mov
shld
push
cmp
iret
ficomps
xor
lock
xorl
xor
inc
fildl
popa
das
aad
testb
stos
stc
push
sahf
push
lcall
adcl
or
popf
inc
mov
inc
lret
pushf
clc
push
cltd
aaa
mov
pop
mov
movaps
lahf
subb
mov
loope
sub
push
jno
mov
sbb
insl
fs
icebp
xchg
pop
pushf
adc
repnz
dec
repnz
push
rolb
inc
adc
adc
insl
cmpsl
inc
sahf
mov
pop
xchg
jle
lea
ja
xchg
scas
icebp
mov
adc
xchg
ja
adc
movsl
dec
mov
or
roll
cs
jb
add
pop
and
ja
xchg
addr16
orl
inc
mov
mov
mov
stos
add
daa
sbb
or
push
lea
jns
or
out
sub
dec
sahf
inc
pushf
repnz
mov
sbb
jmp
rcrl
jno
add
lods
jmp
into
cmp
sbb
push
sbb
es
sahf
int3
lds
cmp
pop
pushf
ja
xchg
in
jge
data16
and
sub
jae
pushl
push
lahf
nop
cmpl
jle
mov
call
xchg
mov
sub
cld
lock
aaa
aaa
dec
push
dec
add
mov
lock
pop
dec
xor
or
out
fwait
sti
jecxz
or
movsl
push
sub
dec
adc
dec
call
mov
cld
inc
out
cmpsb
test
loop
sbb
dec
sub
cmpsl
loope
loopne
pop
push
jae
xchg
jne
test
or
pop
inc
lods
data16
movsb
mov
add
in
mov
pop
jl
push
sbb
adc
jbe
mov
js
gs
fsubrs
lret
cmp
sarb
pop
daa
mov
lahf
xor
adc
pop
add
jmp
jo
scas
sub
add
je
cmp
jmp
add
out
stos
inc
push
pop
mov
popa
pop
cmp
mov
in
sbb
and
mov
xrstor
scas
enter
in
xor
add
enter
mov
mov
scas
mov
insb
push
out
xor
pop
fcompl
and
es
mov
mov
jne
sub
in
fsts
fiaddl
xor
ja
sti
or
outsb
and
inc
mov
sub
or
add
jge
mov
out
add
sub
jno
mov
add
or
fiaddl
stc
ret
stc
mov
xchg
fisubrs
pop
jl
mov
adc
stos
inc
mov
jb
cmp
push
push
test
xor
fdivl
mov
mov
repz
xchg
les
sti
pop
jbe
and
lret
aam
loop
into
lret
mov
fldenv
rcl
cwtl
aad
jmp
xchg
xor
pop
daa
pusha
or
mov
adcl
mov
popa
or
rcrl
cmp
mov
push
pusha
dec
adc
sarl
divb
inc
mov
pop
iret
mov
addr16
popa
fnstenv
and
pop
push
mov
xlat
daa
popa
mov
loope
dec
test
les
ljmp
pop
stc
popf
push
pop
jg
cmpb
mov
loop
sbbb
mov
add
jmp
push
inc
mov
push
sub
mov
imul
cmp
fldl
cwtl
jmp
arpl
jmp
popa
dec
pushf
mov
and
fmull
and
xor
push
sbb
pop
add
pop
cmpsl
mov
mov
xchg
xlat
repz
push
sub
pop
cmp
pushf
fs
call
jne
push
js
sub
cmc
lret
into
enter
icebp
arpl
sub
mov
xchg
pop
imul
cmp
jl
popf
mov
mov
jne
jge
mov
out
out
jg
loop
stc
dec
jne
inc
push
pop
cld
xchg
loope
ja
aam
inc
sbbb
into
movsb
pop
cwtl
xchg
sub
dec
ret
fldln2
jnp
xor
add
jge
push
jno
sub
push
popa
push
sahf
sub
or
rolb
inc
cmp
mov
push
sbb
dec
xlat
adc
mov
xchg
ret
push
out
test
or
sbb
add
jg
xchg
jbe
ja
es
pop
sahf
adc
ret
shlb
pushf
stos
int
lcall
mov
out
mov
es
add
cmpsb
add
adc
push
cmpsb
or
and
push
mov
shrl
inc
lods
and
into
dec
inc
rol
lock
xchg
gs
mov
leave
popf
pop
into
daa
jne
dec
fcmovnb
cmp
incl
fnsave
pop
xchg
mov
mov
add
das
sbb
mov
ficompl
aaa
add
mov
cli
xchg
pop
cmpsb
or
aas
jne
ds
sub
pop
ret
push
cmp
push
dec
push
or
pop
in
xor
arpl
repz
add
dec
pop
les
test
mov
add
orl
lock
sti
fistps
pop
jp
out
mov
or
push
mov
cwtl
mov
or
jns
out
push
enter
lds
cltd
mov
push
jae
sbb
push
ljmp
out
testb
popf
lods
out
adc
cmc
mov
lock
mov
mov
inc
call
inc
xor
mov
jae
or
jmp
mov
inc
mov
add
into
pop
dec
push
pusha
popa
add
lret
xchg
xchg
xor
out
mov
je
jnp
pop
pusha
popf
push
dec
out
pop
add
fbld
mov
lcall
lret
lods
in
sub
sbb
pop
lds
loopne
repz
lds
and
repz
adcl
mov
lock
push
jecxz
outsl
mov
popf
sub
mov
rcrb
aaa
rol
push
int3
ds
or
push
in
pop
dec
in
fistl
imul
push
inc
popf
lret
dec
sbb
rclb
movsb
fs
inc
xor
mov
mov
out
mov
jl
sbb
jp
imul
pop
jns
jp
jp
mov
cmp
clc
cmp
or
push
fs
out
adc
sbb
cmp
xor
xor
lock
mov
add
dec
das
xchg
and
push
push
push
nop
mov
aam
cltd
mov
dec
pusha
lea
aad
out
shlb
pop
call
jbe
loopne
adc
ficomps
sarl
lret
sbb
mov
movl
lahf
or
mov
xor
mov
nop
fidivs
lea
test
cmpsl
mov
pop
jne
dec
sbb
stc
cmpsb
push
rorl
adc
arpl
fucom
or
mov
ss
rcll
lcall
mov
out
adc
inc
cmpsl
and
loopne
mov
js
and
jne
push
js
and
sbb
sbb
inc
add
adc
pop
xchg
fs
test
fwait
pop
movsb
shll
ret
jmp
dec
in
cmp
aad
push
fcom
faddl
fincstp
xchg
fisubs
and
popa
inc
loop
daa
repz
pop
lret
adcb
js
jp
inc
out
bswap
dec
loop
lds
lock
pop
xchg
cs
leave
jmp
xor
and
sub
inc
push
mov
inc
repnz
push
je
and
icebp
mov
in
inc
jge
mov
mov
xchg
aam
testb
popf
mov
adc
loop
jecxz
movsb
pop
repnz
and
cli
aaa
or
mov
insb
mov
push
mov
adc
jg
xor
int3
ja
adc
inc
hlt
sbb
jmp
repz
daa
jnp
je
test
in
push
test
sub
mov
test
out
dec
push
test
lahf
jecxz
jae
adc
ss
fs
sbb
dec
cmp
js
xor
mov
sti
pop
int
aam
mov
xor
and
mov
or
icebp
push
or
nop
test
bound
mov
inc
xor
mov
jno
inc
out
and
hlt
jg
xor
ds
mov
mov
mov
mov
push
aad
jge
outsb
mov
dec
or
xor
cld
xor
xchg
ss
fnsave
cltd
lret
test
cmp
or
jl
jb
add
pop
fcmovbe
mov
and
add
jae
lahf
mov
lds
dec
dec
lock
test
lods
dec
sub
loopne
push
push
addb
mov
sti
test
es
frstor
inc
pop
cmovbe
insl
jmp
pop
ror
imul
and
out
cwtl
jle
out
inc
jae
add
mov
inc
subl
imul
insb
scas
add
out
andl
insl
and
nop
xor
fisubrs
and
insl
mov
push
into
stc
push
and
lcall
add
mov
sub
sub
jbe
and
outsb
xchg
inc
sbb
jge
pop
in
sbb
xchg
inc
ja
pushf
fxch
cwtl
out
add
adc
mov
push
fadd
and
cmp
mov
dec
jp
movsb
scas
imul
cmp
cmp
fsubl
inc
sbb
lods
adc
jo
mov
loope
xchg
test
push
sti
loopne
or
outsl
cwtl
testl
mov
pop
push
push
mov
and
push
cltd
imul
inc
and
pop
jne
andb
jge
fs
jb
aad
inc
imulb
dec
mov
fadd
ret
es
push
mov
sbb
sti
xor
xchg
xor
sti
shr
adc
mov
lea
mov
addr16
pusha
pop
shl
test
js
aas
outsl
cmpsb
sub
sbb
mov
push
inc
idivl
stos
add
mov
jnp
inc
lret
jecxz
insl
shll
push
repz
shlb
cmp
push
clc
pop
movsb
jbe
call
mov
cmp
xor
inc
mov
out
mov
stc
xchg
push
xchg
in
mov
and
push
mov
xor
loope
sub
notl
in
cmp
xlat
addr16
xchg
jbe
push
sub
or
insb
mov
outsb
sbb
mov
addr16
xchg
and
jns
mov
in
jge
push
pop
imul
mov
sbb
mov
sub
push
mov
imul
shl
imul
jle
loope
arpl
push
add
das
pop
data16
mov
pop
fwait
stos
mov
jle
mov
inc
and
popa
aad
xchg
xchg
pop
out
adc
xchg
es
jne
add
mov
xor
stos
push
adc
xchg
pop
fwait
pop
add
mov
mov
mov
pop
push
xchg
sahf
xchg
fbstp
lods
or
pop
or
popf
lods
cmpsl
mov
ds
loope
dec
sbb
mov
movsb
mov
std
adc
lds
sbb
loope
jge
mov
mov
decl
imulb
and
clc
jg
loope
rep
pop
xchg
xchg
inc
adc
mov
in
add
dec
out
lret
pop
adc
mov
fs
mov
out
xchg
mov
scas
aas
out
mov
jge
adcb
je
or
pop
adc
out
sub
sbb
sub
lods
imul
lods
mov
xchg
int
mov
push
cmc
addr16
fcmovu
sahf
jle
push
in
int
test
lret
xor
fwait
sbb
cmp
mov
mov
fs
cs
inc
inc
cmpsb
cmp
jecxz
fisubs
xor
cmc
lret
inc
sbbb
imul
push
push
stos
mov
cmp
xchg
jns
lret
sub
aad
and
pop
fmull
fcmovbe
jge
inc
int3
xchg
repz
xchg
js
xchg
and
sbb
push
test
jg
jmp
aad
sbb
in
bound
outsl
outsb
clc
imul
pusha
inc
sub
push
jb
adc
movb
scas
hlt
dec
pop
sti
outsl
test
adc
cmp
cs
data16
arpl
sahf
push
xchg
xchg
inc
sarb
and
mov
and
mov
pop
mov
mov
mov
es
cmp
scas
mov
stos
add
mov
mov
sbb
aad
sub
and
cltd
mov
call
dec
insl
loop
push
in
push
arpl
stc
fwait
xor
mov
js
or
ljmp
and
xchg
ret
clc
push
mov
lret
cwtl
fcoms
fldt
pop
mov
sub
mov
push
or
fists
les
mov
std
xchg
adc
incb
jge
aas
sub
sub
or
jecxz
add
push
xor
jb
cmp
add
shrl
faddl
mov
int
fwait
les
cmp
cmpsb
aad
lea
dec
xchg
int3
mov
sbb
aad
int
cmp
data16
daa
inc
sub
jne
js
push
push
fnstsw
push
outsb
push
pop
fs
mov
out
sub
pusha
jmp
out
xchg
mov
sbb
enter
in
mov
adc
in
es
jecxz
mov
or
loope
mov
xchg
mov
out
mov
call
loopne
and
dec
enter
ds
sub
fistpll
inc
cmp
fiadds
adc
jmp
cmp
mov
sti
inc
call
shrl
push
push
arpl
xor
or
dec
pusha
cmp
lods
mov
je
ljmp
push
pop
popa
movsl
pusha
arpl
movsb
inc
loope
popa
adc
and
bnd
sbb
xchg
inc
mov
and
es
mov
rcrb
mov
pop
or
cli
xchg
mov
sub
and
xchg
sbb
sbb
xchg
push
mov
or
das
add
inc
mov
sub
mov
mov
mov
nop
jno
pop
and
into
scas
shrl
pop
mov
push
mov
or
and
cmp
bound
ss
lret
and
shlb
in
loopne
repz
inc
jl
sti
inc
push
jmp
outsl
push
ljmp
enter
xor
dec
bound
loope
mov
sbb
test
out
das
mov
cmp
mov
push
nop
mov
or
iret
sub
lea
hlt
dec
cmc
aam
stc
pop
ret
dec
jns
push
sbb
mov
jg
sbb
inc
int
jge
mov
inc
loope
insb
xlat
sub
cmpsl
pop
sub
pop
dec
adc
jo
sub
push
lds
and
je
xor
data16
pop
arpl
mov
push
outsb
sbb
out
mov
push
mov
pop
lret
loopne
add
inc
mov
add
scas
cmp
mov
pop
bound
xchg
dec
xor
stc
insl
xchg
aas
jne
shrl
pop
and
add
xor
pop
ljmp
jmp
sarl
ret
insb
movsl
imull
movsb
lcall
test
jle
dec
mov
push
addr16
cmp
std
and
pop
data16
mov
clc
cld
shrb
add
jge
xchg
lods
test
or
scas
mov
sub
pusha
adc
pop
sub
and
inc
rorl
mov
pop
and
imul
cmpsl
mov
or
mov
int3
mov
add
and
movsb
cmpsl
arpl
xor
cmp
fwait
scas
adc
and
or
cli
mov
mov
nop
in
or
adc
cmc
jecxz
cli
mov
mov
pushw
das
and
or
mov
arpl
mov
out
inc
negb
bnd
mov
mov
in
mov
or
adc
mov
stos
mov
inc
mov
movsl
add
aas
cmp
mov
jmp
subl
gs
negb
lcall
fcoml
xor
divb
fwait
and
movsl
push
sbb
lock
or
pop
pop
sahf
sub
mov
pop
jecxz
popa
sbb
cmp
pcmpeqw
and
push
add
mov
mov
push
or
jle
jge
mov
cmc
add
lfs
push
cli
cs
fists
push
pop
mov
in
loop
inc
push
std
sub
pop
fadds
mov
int3
add
cmpl
test
lods
push
test
mulb
mov
dec
push
mov
repnz
push
push
insb
adc
sbbb
add
lea
lahf
cltd
sbb
stc
pop
and
adc
dec
mov
adc
jge
pop
out
in
pusha
pushf
xor
xchg
mov
xlat
jmp
fcoml
sbb
push
sbb
xor
and
idivb
test
dec
mov
imulb
test
push
pop
add
jo
sti
pop
mov
scas
loop
xor
sbb
inc
jns
xor
push
mov
inc
test
repz
popa
mov
stc
loope
jb
add
fucomp
sub
push
cli
clc
pop
mov
js
lcall
mov
sti
xchg
jge
bnd
arpl
dec
add
inc
pop
dec
jge
mov
mov
adcb
mov
sbb
lahf
and
fcompl
push
cmpsb
push
stc
sub
fabs
mov
sub
mov
in
xorb
xchg
pop
js
and
push
adc
sbb
xchg
pop
push
dec
adc
push
in
cmp
je
mov
or
xchg
lods
adc
in
fdivrl
xor
mov
mov
and
fwait
scas
popa
mov
loopne
sbb
repz
add
stos
jg
roll
cs
mov
push
imul
data16
daa
arpl
mov
fwait
push
jmp
push
jns
pop
mov
sti
cmp
mov
les
movsl
jmp
lods
bound
cli
popl
sub
cmp
or
je
inc
add
mov
out
lds
dec
xchg
sub
andl
mov
in
adcl
cmpsb
pusha
leave
cs
imul
mov
jno
outsl
or
jl
sbb
add
push
insl
jge
inc
lret
out
push
ror
out
js
fsubs
mov
pop
mov
out
incl
sbb
xor
dec
out
inc
ret
ror
in
cmpsb
mov
adc
mov
dec
pop
shll
bound
mov
addl
mov
mov
test
fs
mov
sar
leave
jne
out
sbb
in
pusha
arpl
ss
mov
rolb
in
xchg
cmp
lret
test
pop
mov
push
cli
dec
push
push
mov
adc
out
rclb
xchg
adc
ja
je
push
rorl
xchg
cmp
jecxz
sbb
sbb
pop
xchg
xor
xor
push
and
jge
insb
out
pop
popf
sub
insl
lods
sarb
adc
adc
cmp
in
pop
test
push
jbe
aas
popa
mov
sbb
xchg
pusha
out
inc
mov
pop
sahf
sbb
lods
jbe
and
and
and
in
sahf
repz
jne
push
adc
inc
mov
js
jle
xchg
cmp
xchg
xor
jb
fldcw
lcall
pop
out
ret
rcrl
or
popa
ret
idiv
mov
sbb
mov
out
cs
std
arpl
test
inc
mov
insb
stos
outsl
sub
xlat
fistpll
and
jmp
push
cli
ja
fs
inc
inc
pusha
push
out
mov
loop
xchg
in
hlt
icebp
jmp
mov
rcrl
or
dec
iret
cmp
pop
xor
xor
shl
xorb
out
notb
cmp
xor
je
daa
mov
jno
xchg
sub
lods
inc
movsb
js
cltd
pop
xchg
movb
pop
popa
jle
addr16
xor
out
jns
aas
add
ret
xchg
insb
insl
and
in
stc
push
dec
in
dec
fwait
arpl
insb
shld
push
push
fstps
hlt
and
iret
jo
test
adc
add
mov
hlt
arpl
sbb
ret
inc
inc
out
sub
je
adc
hlt
fdiv
fwait
push
addr16
sahf
ds
mov
inc
aam
stc
rol
push
loopne
imul
mov
add
jmp
ss
mov
mov
loopne
dec
loope
clc
pop
ss
out
mov
dec
test
mov
push
pop
fisttpl
lret
mov
dec
inc
pop
and
popa
int
adc
adc
mov
mov
call
fistpll
mov
pop
push
dec
cmpsb
dec
or
xor
shll
jle
mov
bound
ds
xchg
cmp
cli
cmc
cs
cmpb
push
ss
repnz
out
ljmp
mov
and
call
enter
ljmp
mov
outsl
ret
jnp
xor
sub
clc
arpl
lock
divb
dec
movsl
mov
decl
lods
jecxz
pop
loopne
lea
inc
in
fnstenv
pop
push
push
ret
imul
imul
pop
lds
xor
push
rclb
dec
xchg
ret
pop
fisubs
mov
iret
ss
popf
mov
sub
lcall
cmc
lods
sarl
cwtl
in
sbb
test
orb
aas
push
lock
dec
mov
rcrl
mov
repnz
xchg
pusha
loopne
pop
xor
push
or
jl
cmc
lock
aad
push
mov
jmp
out
cmp
enter
cwtl
shrl
push
pop
int3
loop
in
in
test
sbb
sbb
jmp
and
jge
fstpt
hlt
fildll
scas
and
push
popa
pop
cmp
jl
lods
enter
pop
sbbl
pop
sub
cmp
lcall
adc
add
sarl
addb
push
xchg
and
lret
and
jae
sub
push
lock
adc
mov
dec
xchg
icebp
mov
in
add
test
pop
lods
addb
lret
dec
mov
mov
fcomp
or
or
cli
out
into
hlt
sub
dec
or
ret
pop
push
lret
push
inc
xchg
fisttps
xor
ret
sub
aam
pop
lods
push
and
add
pop
mov
mov
dec
lcall
push
lret
lahf
push
jnp
repnz
push
data16
push
jecxz
jmp
or
add
mov
aas
xchg
test
aas
jle
dec
aam
or
jns
out
dec
sbb
and
jmp
rcrb
pop
scas
lahf
dec
insb
or
xor
data16
imul
imul
cs
popa
int
inc
shlb
jb
cmp
dec
fsubr
xchg
xchg
xchg
pop
add
ret
and
fwait
inc
leave
pop
andb
int3
add
xlat
les
push
idivl
mov
pop
mov
dec
popa
pop
stos
in
cmp
leave
pop
dec
adc
push
cwtl
fcmovnbe
lock
mov
lret
call
jg
das
stc
loope
fiadds
and
pop
std
and
mov
dec
in
iret
nop
jnp
xchg
mov
inc
pop
pop
xor
scas
add
dec
pop
mov
cmp
popf
mov
xchg
lea
scas
imul
movsb
and
icebp
enter
adc
jg
add
sub
sub
xlat
dec
inc
xlat
idivb
pusha
lret
add
rcll
inc
push
push
inc
jmp
fwait
repz
leave
adcb
add
ret
push
insb
add
test
sub
movsb
fwait
scas
clc
fmull
loope
cmp
mov
jecxz
hlt
dec
fisubs
mov
xor
jne
pop
aad
mov
out
fidivs
je
sbb
dec
push
imul
sti
xor
push
leave
pop
outsl
scas
xchg
mov
fmulp
jge
inc
xchg
mov
mov
inc
mov
pop
mov
out
mov
sbb
cmp
jmp
rcrb
pop
test
aaa
sub
aas
xor
add
mov
pop
xchg
adcl
mov
add
add
gs
dec
pop
xchg
xchg
add
pop
mov
jecxz
adc
ljmp
dec
push
in
jp
ja
iret
notl
mov
mov
enter
pop
sub
xchg
in
in
push
xchg
inc
repz
mov
and
inc
push
js
sbb
popa
ljmp
fidivrs
loope
inc
mov
xchg
dec
loopne
call
popa
int3
mov
cmp
std
inc
sbb
cmp
ss
test
js
mov
push
jno
jge
stc
adc
mov
jnp
pop
cli
mov
out
pop
add
std
or
insl
hlt
sbb
loop
lahf
popa
dec
stos
push
test
mov
cmp
insl
fcoml
sahf
dec
sbb
enter
das
jno
mov
mov
lock
jge
pop
mov
cld
iret
or
push
fidivrl
jae
adcb
xor
sbb
mov
xchg
das
mov
pop
pop
fidivrs
jle
sub
std
imul
cmp
mov
push
pop
jae
ret
leave
push
pop
jl
dec
pop
cmp
jmp
fstps
and
notl
xor
cmp
lock
dec
adc
mov
lcall
movb
sbb
ja
insb
adc
in
lahf
xchg
fistps
addr16
jmp
mov
aas
leave
mov
lahf
cmp
nop
imul
adc
ret
inc
push
dec
sub
imul
lcall
jmp
aad
xor
xchg
loop
lret
xchg
jl
adc
mov
aam
mov
fldt
or
int3
repnz
pop
cmp
pop
iret
scas
inc
and
addr16
jo
dec
jno
add
cmp
inc
movsb
mov
mov
sbb
push
adc
rcl
outsb
in
push
mov
mov
sar
mov
mov
xchg
pop
inc
aad
mov
dec
scas
or
add
sbb
and
jp
jne
psubusw
cmp
btc
jne
pop
cmp
enter
mov
ficoms
in
cltd
les
in
ret
jb
inc
movsb
lret
dec
lds
jmp
mov
sub
es
imul
out
mov
mov
and
lcall
or
add
jo
sahf
decb
ret
dec
dec
push
inc
dec
pop
adc
fcompl
js
sub
mov
jl
dec
inc
xchg
in
mov
dec
mov
inc
test
sbb
push
push
ljmp
inc
xchg
mov
rcrb
cmp
cld
pop
repz
pop
cmpsb
mov
mov
loope
mov
fucomp
pusha
jge
icebp
ljmp
xor
in
mov
es
imulb
dec
sbb
sub
pop
xor
scas
mov
and
test
mov
fucompp
cmp
mov
xchg
sub
imul
lods
pop
inc
jnp
mov
daa
aad
imul
inc
lods
inc
jp
aas
out
and
jae
rcrl
stos
pop
dec
lock
movsl
inc
sub
sub
xor
or
dec
inc
push
and
push
jnp
add
cmp
inc
lret
jmp
imul
fadd
dec
mov
mov
data16
and
mov
mov
or
adc
ret
mov
mov
and
cwtl
js
add
mov
xor
fldt
fs
mov
lds
insb
and
xchg
push
or
mull
lret
test
mov
stc
sbb
gs
dec
iret
ds
add
das
mov
push
aaa
pop
repz
and
dec
or
push
inc
and
movsl
mov
rclb
icebp
std
push
cmpsb
icebp
dec
loop
push
in
sbb
cmc
inc
push
mov
aas
add
xor
pop
shl
repnz
jb
fwait
lcall
jp
mov
fwait
fwait
dec
stc
xchg
movzbl
mov
jbe
adc
mov
or
sbb
ret
hlt
addr16
test
mov
adc
lock
mov
out
inc
inc
sub
cltd
dec
push
mov
xchg
mov
adc
sub
dec
xor
out
mov
std
xor
mov
adc
ljmp
or
lock
push
sub
stc
mov
insl
cmp
push
sub
mov
ss
and
push
mov
fmul
or
shl
mov
repz
xor
sub
rcll
cmp
mov
adc
mov
imul
sbb
adc
stc
lea
mov
jl
and
shlb
lahf
xor
mov
pop
adc
push
icebp
push
mov
shrl
cli
es
sbb
mov
lods
mov
mov
pextrw
mov
pop
add
xlat
push
pop
jae
fistps
sbb
jp
mov
add
inc
insb
lock
call
xchg
mov
insl
cmp
es
imul
in
adc
lcall
xlat
jecxz
mov
test
pop
mov
ljmp
pop
mov
fmull
stos
subl
xor
jne
lret
fdivrp
adc
pop
adc
cs
sbbb
scas
dec
jmp
xchg
mov
jo
mov
popa
mov
fildll
jbe
testl
je
ficoml
mov
xchg
ror
sbbl
call
mov
push
mov
bswap
push
fistl
aad
jbe
add
mov
mov
cmp
xorl
ljmp
xor
add
pop
add
fcmovbe
out
mov
adc
fstl
jae
push
aaa
mov
enter
mov
aam
or
cmp
hlt
pop
ljmp
mov
adc
or
fimull
jge
lahf
sub
out
ret
shrl
mov
mov
xchg
add
inc
fmull
or
cli
in
jbe
pop
mov
jae
dec
insl
insb
xchg
jecxz
repnz
mov
sbb
cmp
insb
movsb
cmp
into
or
mov
xchg
inc
lret
out
cmp
add
ret
sbb
push
jo
es
jns
adc
add
or
popa
inc
icebp
push
pop
cmpsb
pop
xchg
sbb
repnz
aaa
aam
inc
pushf
data16
jg
ret
aas
mov
hlt
cmpsb
popa
nop
cli
cmp
ret
aas
xchg
sbb
push
dec
mov
cld
lcall
pop
fwait
push
adc
mov
fwait
mov
ds
jnp
fs
or
sub
jg
xor
ficoms
sbb
loop
push
addb
mov
in
sbb
push
mull
pop
outsl
notb
jl
mov
cvtps2pd
and
lods
ds
int
ret
cmc
ror
jnp
pusha
mov
push
loop
cmp
xor
push
or
jnp
daa
dec
hlt
dec
fcomps
mov
popf
add
xor
cltd
mov
mov
bound
sbb
pop
sti
fs
fildll
jb,pt
dec
mov
xlat
jae
inc
repnz
xchg
inc
sbb
mov
out
push
mov
push
flds
sub
push
jmp
jl
xchg
xchg
leave
xor
mov
jne
in
cmp
or
jns
cmp
loop
insl
test
xchg
dec
ret
int3
cli
rorb
jg
imul
fstl
cmp
out
and
xchg
cmp
inc
jbe
stos
cmpsl
xchg
dec
ds
scas
gs
push
cmp
and
fildl
dec
fsubr
popf
popf
loop
jp
std
add
arpl
loope
mov
push
lret
in
mov
add
xchg
mov
ljmp
sub
les
imul
adc
lret
lahf
pop
icebp
dec
and
repnz
aam
jbe
sbb
mov
sbb
push
es
dec
jb
dec
jl
or
dec
xchg
inc
dec
adc
xchg
mov
mov
js
call
push
insl
and
xchg
xor
mov
cmp
cwtl
leave
out
shrb
mov
adc
mov
aaa
cmp
cld
out
pop
fstl
sbb
pop
fwait
cmp
fs
mov
nop
imul
ficoml
testl
and
aad
adc
ficomps
out
dec
sub
loope
push
mov
es
or
pop
cs
cld
push
push
into
test
push
jbe
jp
lcall
or
mov
pop
loope
mov
in
adc
push
fs
dec
push
sti
addr16
pop
daa
imul
ljmp
rcr
and
subl
cltd
aas
out
cmp
adc
xchg
shlb
inc
stos
andl
fildl
or
or
push
push
xor
dec
aas
pop
push
or
fwait
subl
push
or
and
push
leave
sub
andl
dec
ljmp
out
loopne
cltd
aaa
lea
dec
mov
mov
xor
mov
push
shrb
popa
mov
leave
mov
sbb
xor
sub
adc
ja
ljmp
jno
or
je
dec
pop
pop
loope
push
sbb
xor
cmpsl
adc
add
out
inc
xor
pop
loope
jmp
jo
mov
clc
js
xchg
add
jl
cmc
pop
cmp
stos
in
push
cmp
ret
mov
std
mov
cmp
sub
fildl
mov
shll
fldt
xchg
dec
xchg
les
pop
or
je
imul
cli
push
mov
out
mov
incl
cs
jge
jno
mov
call
cmpsl
mov
or
pop
add
js
mov
dec
and
repnz
inc
les
push
dec
or
out
cmpsl
sti
dec
xor
scas
mov
push
push
add
pop
inc
xchg
xchg
fildll
mov
jmp
sub
lods
mov
rclb
fadds
in
push
mov
shlb
adc
dec
push
lahf
jmp
pop
xchg
incl
mov
xor
add
rcr
cmp
jmp
out
xor
xchg
mov
clc
xchg
test
jge
pop
cmpsb
mov
jecxz
xchg
jge
popl
push
add
sbb
xchg
pop
cmp
push
mov
cmpsb
sub
and
in
mov
ffree
insl
js
sbb
cmp
cmp
mov
adc
pop
jmp
cmp
mov
cmpsb
adc
sbb
mov
pop
xchg
movsb
decb
or
stc
movsb
cmp
push
hlt
push
inc
mov
sub
sahf
clc
add
lds
dec
sbb
arpl
mov
loope
iret
pop
push
xchg
xor
bnd
popf
mov
scas
lret
rolb
scas
dec
sub
stos
pop
xor
inc
or
adcb
cli
mov
popf
jne
adc
pop
or
pop
je
xor
imul
pop
xchg
aam
lea
or
std
jp
push
or
jne
cmpsl
dec
iret
mov
adc
jle
popa
mov
shr
out
add
arpl
lret
dec
mov
rcr
inc
mov
call
stos
cmp
lods
inc
outsb
xlat
imul
ds
inc
adc
mov
ss
push
shl
and
sub
lods
out
aam
addr16
stos
aas
mov
leave
xchg
shll
sarb
sbb
fisttps
popa
push
jo
or
fisttps
in
rcr
jne
popf
mov
pop
sbb
repz
std
mov
insl
and
xchg
jns
mov
fs
lcall
sbb
mov
push
cmpsb
mov
ret
adc
mov
xchg
movsb
cmp
data16
xor
div
es
mov
shll
lret
mov
ds
aas
in
fbstp
mov
and
mov
pop
jmp
add
jae
mov
sahf
jno
xchg
std
jmp
repnz
andb
cmp
out
push
add
sub
mov
mov
out
dec
xor
popf
cld
stc
or
sbb
mov
out
inc
roll
es
aas
dec
inc
shlb
movsl
cmc
sub
in
dec
aas
daa
jge
or
leave
imul
xor
dec
stc
sbb
sbb
jl
cmpsl
push
out
pop
ds
inc
loop
enter
and
and
icebp
insl
push
mov
jl
aam
insb
cltd
rolb
stos
sarb
sarb
and
je
rorl
or
outsl
adcl
xchg
int
cli
aaa
lret
push
repz
mov
push
shlb
pop
pop
or
gs
cmp
aas
inc
push
std
sbb
cmovo
add
daa
fnstcw
adc
xlat
adc
sbb
pop
pop
xor
mov
lods
out
push
pop
int3
cmp
addr16
sub
mov
mov
cmp
call
jnp
es
mov
fucomi
out
sub
testb
aas
das
fsubrs
mov
xor
lret
enter
pusha
or
stos
mov
jp
sub
add
lcall
rcrb
and
ljmp
xor
and
pop
lods
loopne
or
push
cmp
clc
in
push
jl
push
adc
lahf
cmp
mov
insl
loopne
dec
xchg
lock
mov
std
xor
cmp
in
or
pop
mov
in
mov
jae
jle
lret
jns
mov
adc
mov
jmp
es
addr16
mov
xchg
adc
lods
rsm
mov
jmp
lods
and
dec
jge
and
jg
out
push
sbb
mov
ret
or
and
inc
les
lret
leave
pop
mov
imul
stos
int3
cmp
fcmovnbe
pop
sbb
sbb
outsb
xor
and
cli
test
and
sub
mov
sti
aaa
outsl
test
arpl
adc
and
cmp
cmp
mov
dec
and
mov
enter
or
sub
fisubs
cmp
cmp
sbb
lods
sahf
ret
or
test
cli
mov
ds
xlat
dec
mov
push
mov
hlt
mov
pop
lret
mov
xchg
xchg
inc
push
add
lods
sar
jge
cmp
add
mov
add
or
sbb
or
decl
mov
sub
xchg
cmc
ficoml
jmp
call
sub
ja
adc
push
push
ret
adc
sbb
rcl
mov
push
movsb
fldcw
shrl
sbb
sbb
adc
cli
jmp
jne
pop
sub
test
dec
lea
sub
loop
inc
push
notl
in
inc
mov
fwait
xchg
xchg
jecxz
out
mov
inc
into
add
addl
loope
les
mov
cmp
mov
jb
icebp
mov
fsubrs
mov
push
stos
jmp
push
ja
and
lret
adc
xor
mov
prefetcht0
fsubs
sub
sub
scas
out
cmpsl
ds
lahf
and
rorl
inc
fdivs
mov
jne
pop
push
pop
jns
push
hlt
add
in
jbe
xchg
aaa
mov
icebp
dec
repnz
sub
cmp
ror
cmc
mov
and
cli
inc
in
cwtl
or
mov
insb
mov
and
mov
test
lods
cmc
fwait
add
pop
cld
pop
mull
push
aam
pop
push
add
dec
shlb
pop
push
xchg
addr16
cltd
loop
jno
scas
insl
adc
fnsave
xchg
mov
pop
add
mov
outsl
test
fdivr
in
leave
jl
adc
xor
cmp
jle
in
pop
je
and
mul
es
out
push
test
adc
ret
jg
inc
scas
push
cmp
test
lcall
push
mov
or
rorl
fdivrl
xchg
inc
sbb
inc
jmp
lret
out
ss
shr
shlb
cmp
push
xchg
hlt
jne
push
xlat
dec
jno
fs
adc
adc
ret
cmp
ret
mov
enter
mov
add
ret
add
cld
push
cmpsb
outsl
cmp
add
and
jne
lcall
cmp
cmpsl
les
arpl
mov
mov
lahf
imul
adc
adc
adc
imul
aad
stc
pop
add
nop
push
into
cwtl
dec
adc
xor
jg
and
push
xlat
idivb
cmpsb
inc
cs
fxch
jns
mov
cmpsb
adc
mov
cmpsl
cwtl
in
popf
nop
xor
lods
out
inc
sbb
test
jmp
xor
icebp
fistpl
popf
jnp
outsl
sbb
push
mov
inc
mov
adc
ret
movsl
push
xchg
mov
jne
mov
jno
in
xor
fistpll
sub
jno
add
and
into
imul
dec
mov
pop
mov
inc
sub
fimull
test
popf
into
mov
addr16
in
inc
popa
mov
jge
dec
inc
push
dec
andb
cmc
xchg
inc
mov
cmc
cmp
mov
enter
imul
mov
push
pslld
jno
ss
cmp
arpl
cs
push
add
repz
dec
cmc
xchg
icebp
int3
mov
notb
mull
pop
dec
sbb
clc
dec
jg
test
xor
cli
mov
push
cmpsb
push
jp
in
dec
or
and
scas
fidivl
test
dec
stos
int
cmp
test
loop
mov
mov
dec
into
lcall
add
bnd
arpl
sbbb
jp
push
push
add
insb
arpl
out
insl
cltd
xlat
pop
mov
test
jb
scas
cmp
xor
popf
movsl
inc
xlat
pushf
lods
movsl
cmpsb
movl
out
ljmp
rcll
hlt
shl
daa
cs
mov
sub
xor
pop
add
mov
out
ret
out
mov
cmp
or
mov
cmpsb
ss
lods
movsb
cs
xlat
mov
jno
sbbb
mov
inc
mov
jmp
pusha
push
pop
out
mov
or
ror
mov
mov
sbb
or
pop
dec
test
out
inc
in
arpl
dec
pop
mov
hlt
int3
cmp
jecxz
mov
jno
pop
adc
push
in
lods
mov
in
inc
loope
out
cmp
ja
rolb
daa
and
cmp
ds
mov
mov
dec
stos
adc
xchg
dec
and
cltd
mov
sbb
mov
sbb
jecxz
in
sub
mov
cmpb
sub
stos
popf
repnz
nop
mov
add
loop
daa
dec
loopne
mov
xor
pop
xchg
jo
inc
jno
out
lea
sub
rorb
stc
in
xchg
divb
nop
sbb
sbb
jae
lock
dec
xor
xorb
jecxz
nop
mov
arpl
xchg
aaa
cmp
push
addr16
sbb
add
int
mov
fidivl
add
fmul
or
xor
daa
push
push
pop
outsl
or
pop
mov
pop
xlat
add
jb
out
lods
pop
pop
mov
test
pushf
adc
enter
dec
les
lcall
lahf
inc
loope
mov
pop
aad
jbe
push
and
xchg
cmp
xor
mov
mov
into
js
add
inc
rcrb
lcall
outsb
push
sub
loop
mov
mov
add
push
mov
and
ja
leave
mov
testl
push
sbb
add
jecxz
mov
adc
jmp
xchg
shll
mov
or
insl
pop
mov
adc
aas
ds
out
push
and
inc
inc
outsb
cli
sub
pop
in
sbb
sub
dec
scas
or
ret
inc
add
jbe
xor
sbb
sub
jne
ds
push
push
and
sub
mov
negb
in
jne
lods
gs
dec
add
mov
fwait
mov
jae
movsl
adc
push
push
pop
inc
mov
stos
pop
mov
add
jno
icebp
loopne
xor
nop
push
scas
setp
mov
movsb
sbb
xor
mov
mov
push
cs
inc
jg
push
in
movsl
sti
iret
jo
mov
xchg
test
pop
leave
jbe
sahf
pop
push
paddsw
pop
repnz
jne
icebp
cs
xor
xchg
ret
mov
or
mov
mul
xorb
test
das
outsl
add
cmp
add
iret
ror
mov
adc
push
sub
stc
push
loope
mov
mov
aas
push
sub
out
jno
cmp
clc
mov
inc
or
sbb
aam
cwtl
leave
insb
add
sub
add
mov
cmpsl
sub
fidivl
and
pop
data16
movsl
sti
test
iret
lahf
dec
sbb
push
rcl
rcll
inc
aam
adc
shl
sub
out
iret
cmc
pop
sub
mov
arpl
add
jne
inc
push
pop
inc
jg
cmp
sti
iret
scas
sbb
sarb
lds
arpl
stos
popa
loope
sub
push
out
push
sahf
mov
mov
mov
lret
inc
arpl
push
jmp
lods
mov
imul
cmp
inc
lods
add
pop
jg
movsl
jp
fildl
push
shrb
cwtl
jecxz
jmp
cmpsl
push
fsubrs
cltd
addr16
adc
sub
jecxz
push
sti
sbb
inc
jg
andb
or
pop
mov
in
lock
in
fisttpl
lods
movsl
ret
and
adc
or
mov
push
or
jns
jbe
aam
push
aaa
hlt
ficomps
or
mov
fists
and
mov
stc
sar
jb
cmp
repz
cs
into
movsb
lret
mov
mov
xchg
mov
push
and
xchg
push
test
and
add
cs
sbb
or
dec
jg
push
or
pop
mov
mov
lahf
out
adc
fnstsw
test
vcomisd
pusha
push
jo
cltd
jge
out
mov
adc
aaa
jp
call
xchg
push
and
xor
sbb
sub
fadds
test
popl
xor
outsb
fadd
push
fisubl
push
fcoms
lcall
mov
mov
mov
jge
or
pop
sbb
pop
sub
aad
cmp
inc
jl
pop
push
hlt
out
loopne
ljmp
mov
outsl
scas
pushf
sub
in
jl
xchg
lods
shrb
fucom
mov
popa
sbb
mov
jo
loopew
add
push
xchg
mov
sub
fimuls
mov
xchg
aas
cs
fisubrs
sbb
inc
push
shlb
mov
aam
mov
mov
dec
push
jne
push
mov
dec
scas
je
pop
movsl
outsb
inc
and
popf
rclb
mov
jle
loope
pop
mov
push
lea
and
mov
lock
xchg
sub
lods
jmp
ret
fstps
fwait
inc
and
iret
dec
mov
xor
cmpl
in
imul
ljmp
cli
icebp
aaa
ljmp
sbb
xor
mov
cmp
adc
sbb
insb
mov
popf
push
add
xchg
inc
dec
push
sub
pop
dec
and
pop
ljmp
arpl
sti
pop
inc
out
mov
mov
testb
dec
mov
xor
fwait
cmpsb
or
jle,pt
test
dec
fstpt
icebp
movb
stos
jae
aad
cwtl
add
mov
cmp
inc
ljmp
fbld
test
mov
stos
xchg
aad
sub
out
sub
cmp
lock
cmp
mov
jae
outsl
pop
repz
push
pop
push
mov
ret
scas
lcall
icebp
mov
lea
dec
add
lret
push
sub
xchg
sub
cli
cmp
mov
add
hlt
jno
leave
sbb
hlt
jecxz
std
mov
outsl
mov
divb
rolb
mov
shl
cmc
cmpsl
fisttps
loope
and
cmp
in
movl
out
dec
mov
inc
mov
or
mov
das
mov
loopne
fcompl
inc
jge
imul
stos
iret
xor
sbb
lcall
mov
xor
cmp
xchg
out
cmp
fistps
xchg
out
pop
aam
and
mov
mov
xchg
lahf
sbb
adcl
sahf
sub
in
cmp
jae
dec
aaa
mov
je
or
into
aam
popl
cmpb
test
mov
jle
mov
ds
out
ljmp
xchg
pop
gs
cmp
xor
and
leave
sub
fs
scas
dec
sub
in
popf
into
and
xchg
mov
rorb
lods
cmpsl
outsl
adcl
mov
je
jne
lahf
add
adcb
sbb
sbbb
sahf
pop
jmp
sahf
push
mov
clc
sub
ljmp
andb
sbb
scas
inc
push
and
aad
shlb
fisubrl
testl
xchg
movsl
xchg
jb
or
lods
inc
loope
inc
push
jnp
sahf
and
adc
jg
jl
nop
clc
add
jecxz
adc
loope
push
rcr
mov
adc
jno
test
mov
pop
dec
test
idivb
out
push
aaa
mov
pop
shll
cld
cmpsb
popa
jecxz
sbb
lods
cltd
push
icebp
out
test
xor
insl
stos
test
lea
sub
lret
sub
push
lahf
fadds
mov
mov
jecxz,pn
into
insb
testb
and
mov
int
and
dec
sub
sbb
mov
stc
scas
xchg
outsb
icebp
mov
hlt
mov
sahf
bound
push
xchg
cmp
fs
out
ljmp
pop
sbb
push
ret
lods
cmp
sub
dec
mov
mov
mov
mov
fstpt
sub
pushf
jb
les
jl
rcrl
mov
push
pop
cmp
jg
sub
jecxz
add
mov
aaa
push
cmp
sub
and
js
dec
push
pop
sub
dec
test
mov
in
inc
pop
out
jb
add
arpl
inc
pop
pop
mov
and
orb
adc
insb
cld
testl
int
shr
adc
xlat
lods
gs
push
add
lcall
dec
popa
mov
adc
xchg
xchg
int3
cmp
pop
es
cmc
insb
lds
bound
add
ret
gs
adc
mov
lret
dec
mov
sub
pop
mov
sub
scas
lahf
xchg
pop
lret
xor
insl
mov
push
insb
adc
sbb
sub
lret
repz
in
mov
das
push
or
sbb
sub
int3
leave
mov
or
inc
ljmp
xchg
movsb
fdivr
imul
inc
daa
jbe
inc
jle
addr16
scas
movsb
sar
out
pusha
sub
rcrb
cmp
sub
inc
sarl
push
stc
sbb
imul
and
stc
das
sub
add
push
mov
loope
inc
mov
mov
leave
cmp
cli
insl
in
mov
pop
and
ret
call
dec
inc
fwait
test
repz
cmp
pusha
cmp
and
pop
push
mov
pop
push
ret
out
movsb
inc
scas
push
rol
stos
pop
pushf
mov
add
stos
cli
or
mov
stos
mov
shlb
pop
or
sbb
jo
scas
xor
int
jmp
in
xchg
loope
pop
fldl
and
push
pop
aam
xor
sub
popf
lret
nop
lock
dec
lods
cltd
mov
addr16
and
mov
mov
xchg
push
addr16
pop
ljmp
std
xchg
push
xchg
dec
or
cltd
cmp
aad
shll
mov
clc
loope
jl
inc
or
mov
fwait
or
or
fmuls
pusha
add
gs
rclb
jne
adcb
movsl
xor
bts
jl
xchg
push
and
sqrtps
push
adc
outsl
mov
jbe
push
clc
mov
jo
inc
sub
loopne
and
and
push
push
adc
rcrl
les
ret
ljmp
fldpi
xchg
pop
push
les
jg
outsb
loop
jno
subl
add
mov
aad
cmc
dec
sub
outsb
or
shll
lds
mov
push
jp
sbb
push
adc
stos
pop
mov
mov
push
das
adc
push
or
xchg
test
dec
add
int
xchg
scas
aaa
adc
xor
and
pop
sbb
or
xchg
movsl
fstps
mov
mov
aam
xchg
push
gs
push
outsl
test
repnz
cmpsb
aam
cmp
imul
pop
sub
mov
cmpsb
and
icebp
pop
in
insb
mov
pushl
adc
cmpsb
mov
jno
sti
lret
inc
pop
xchg
pop
out
sbb
das
sbb
fisttpll
lods
mov
out
fildl
mov
loope
jle
fstpt
inc
enter
daa
call
icebp
add
mov
insb
mov
in
lock
sbb
inc
aad
sahf
rorl
mov
xchg
movsb
ret
rorl
fstpt
sub
pop
dec
xchg
or
xchg
mov
dec
jno
out
lods
jne
or
cmp
imul
cmpsl
xor
push
mov
mov
std
jp
imul
or
dec
fisttpll
inc
and
sub
es
cmp
or
je
or
jp
xor
loopne
jno
push
mov
mov
mov
xor
xchg
pop
pusha
cmpl
jle
xor
fists
int
mov
outsl
int3
sahf
adc
ret
sarb
iret
push
push
loopne
sub
jns
pop
insl
or
cmp
loope
mov
adc
mov
jae
pop
dec
icebp
mov
in
je
out
leave
sbb
lods
push
adc
dec
out
cmp
popa
fs
jne
add
pushf
gs
lds
pusha
out
lods
cmpsl
js
add
fldt
fbstp
push
into
ds
in
xchg
cmp
scas
lods
inc
mov
jle
cmp
lods
int
mov
int
push
sbb
and
jmp
movsb
mov
sarb
dec
and
push
cmp
mov
in
sub
lret
out
pop
dec
xchg
push
mov
fwait
dec
fcoml
xchg
stc
pushf
imul
fisttpll
nop
inc
bound
int
out
mov
cmp
lahf
aas
dec
ficompl
add
shl
adc
or
sbb
arpl
mov
in
in
push
cmp
push
aam
inc
loop
push
sub
pop
fsubrp
push
test
lret
fwait
mov
iret
popa
pusha
add
popf
fidivs
add
fwait
pop
outsl
mov
ds
dec
pop
stc
jns
cmp
and
stos
push
inc
insl
imul
stc
push
rclb
cs
int
aam
dec
and
enter
iret
hlt
pop
xchg
lds
xor
fstpl
add
stos
js
fildl
rorb
pop
pop
jns
les
cmpsl
fwait
mov
nop
xchg
hlt
icebp
adc
inc
out
pop
xchg
arpl
cmp
jle
mov
inc
mov
mov
aam
dec
les
push
ss
mov
test
cmp
mov
jle
rclb
push
inc
mov
call
adc
push
ret
lods
xchg
push
adc
inc
lahf
mov
cmc
push
push
mov
sbb
popf
cld
sub
mov
adc
push
mov
faddp
mul
add
push
pop
xor
cltd
not
mov
into
jns
sub
mov
into
push
sub
in
ljmp
insl
cli
push
pop
icebp
sbb
dec
mov
xchg
mov
cmpb
fadds
xchg
dec
sbb
jmp
or
cmp
out
test
jmp
test
lret
push
mov
leave
pusha
push
add
xor
fcmovne
xor
sbb
mov
cmp
mov
add
arpl
push
popf
insb
fmulp
nop
pop
push
aaa
mov
dec
xor
add
dec
jg
cmp
pop
jns
icebp
jo
dec
sbb
sbb
add
sub
icebp
push
mov
push
pop
movsl
js
out
popaw
cmp
push
xchg
ret
adc
xor
stos
sub
ret
mov
push
lea
mov
into
add
cwtl
jecxz
outsl
iret
adc
add
in
pushf
pop
push
cmp
int
out
jbe
std
mov
scas
aaa
pop
notb
stos
mov
sbb
dec
and
int
adc
dec
xor
outsb
jmp
adc
dec
stos
bound
outsb
mov
je
imul
loop
cld
pop
jo
xchg
fiaddl
ds
dec
push
out
outsb
movsl
sub
sub
fcoms
inc
jmp
pop
lret
out
insl
sub
inc
jb
shrb
jle
addl
aaa
scas
add
mov
cmp
jb
pop
jb
leave
rcrb
inc
mov
cmp
xor
jecxz
xor
rol
cltd
xchg
push
push
inc
fdiv
in
add
ljmp
outsb
or
std
dec
mov
ret
mov
sbb
pop
jecxz
cmc
push
iret
cltd
push
or
cpuid
mov
cmp
ja
out
scas
insb
in
popl
out
push
xchg
jle
imul
adc
adc
stc
iret
repnz
fsubs
repnz
xchg
or
mov
or
xor
mov
adc
movsb
int
mov
mov
lock
jp
fsubrp
out
gs
push
and
and
pop
int3
sbb
dec
mov
sbb
movsl
sub
pop
stos
xchg
sbbb
dec
stos
dec
or
mov
xchg
mov
stc
sbb
ror
jae
jmp
jo
faddl
ja
fdivrl
lods
ror
inc
leave
fisubrl
xor
jbe
xor
into
call
or
aaa
lods
xor
scas
js
loopne
xchg
fs
cltd
fldl
xchg
xor
pop
lahf
rorl
and
fucomi
jnp
add
mov
aas
jno
jns
aam
lret
enter
mov
xor
jne
test
add
test
out
xor
mov
test
push
jnp
scas
lret
mov
pop
fiadds
imul
mov
ja
sbb
mov
jmp
adc
or
xchg
sbb
ljmp
cmp
scas
pavgw
loopne
pop
inc
in
loop
popa
xchg
or
stos
outsl
lret
jmp
rorl
jbe
movsl
inc
cmp
fwait
push
xchg
push
test
notb
int
test
stos
enter
xchg
dec
into
bound
pop
jo
push
getsec
mov
ljmp
insl
outsl
rcl
rcr
outsl
inc
addb
out
scas
aaa
mov
push
add
inc
inc
loop
add
pop
jb
xchg
and
shl
jae
inc
inc
mov
jg
dec
sbb
ret
mov
sbb
fld
fldl
testb
adc
sub
sbb
and
jg
test
jne
mov
cmp
jecxz
dec
dec
mov
lods
mov
jno
sbb
inc
dec
inc
pushf
lods
inc
fcomps
fcmovnbe
sub
dec
fdivrl
clc
outsl
je
int
jne
into
pop
scas
xlat
aas
pop
add
cmp
pop
mov
fimuls
flds
dec
sub
call
rolb
js
loop
ja
xchg
pop
call
out
pop
pushf
cmp
inc
mulb
sarl
mov
insl
lret
push
into
inc
sahf
sub
aad
mov
in
fwait
sbb
xor
outsb
ds
mov
fs
push
inc
shlb
aad
mov
cmpsb
dec
adc
sub
xor
sbb
fstl
sub
dec
loope
out
jp
aas
cld
inc
add
dec
dec
idiv
inc
loopne
push
push
lds
flds
sbb
xchg
push
xor
test
stos
es
xchg
mov
repnz
xlat
fwait
movsl
adc
insb
mov
inc
and
jae
mov
pop
shl
xchg
jnp
shrl
int3
ss
adc
lods
call
fcompl
ds
push
jp
mov
adc
jb
in
push
test
sbb
imul
rclb
add
xchg
fisubs
lahf
sti
iret
sbb
mov
loop
sub
add
push
xlat
loop
push
lcall
or
jnp
adc
cmp
sahf
das
push
inc
mov
sbb
inc
or
fbstp
fcmove
cmp
arpl
push
pusha
jno
lea
pusha
xchg
cmp
xchg
add
xorb
jmp
mov
xor
inc
dec
mov
loopne
mov
and
stc
fildll
pop
cmpsl
lock
iret
inc
xor
sub
push
jo
std
xlat
rcll
jae
test
leave
je
sbb
sub
add
shrb
xor
fcompl
sbb
outsb
insl
add
enter
into
pop
push
pushf
fdiv
push
daa
mov
jmp
popa
divb
xchg
mov
test
sahf
sti
ret
adc
xor
decl
mov
fidivrl
inc
inc
xlat
out
xor
mov
aam
xor
push
into
shrb
add
gs
sbb
mov
fdivr
shrl
xorb
je
dec
xor
mov
std
out
jo
xchg
pusha
jle
adc
clc
cmp
mov
insb
imulb
jge
addr16
mov
and
loop
ret
push
out
aad
jge
pop
pop
sarb
inc
cmp
push
jns
loopne
pop
mov
sahf
sbb
cs
or
rorl
mov
outsl
or
int3
xchg
xor
or
and
pop
xchg
pop
xlat
xor
adc
mov
orl
push
jnp
pop
outsl
in
dec
scas
iret
fsubs
jecxz
jno
or
scas
push
mov
pop
pop
aas
push
call
sahf
adc
or
xchg
out
shll
addb
xchg
or
and
sub
nop
in
sub
xchg
ret
ret
add
inc
or
inc
cmpsl
fnstsw
fistpl
rcr
roll
test
mov
stos
adc
outsl
into
aad
inc
int3
jns
mov
cwtl
jnp
pop
daa
cmp
push
cltd
ss
xchg
jo
insl
jge
pop
mov
out
outsb
outsl
mov
popa
pop
test
clc
in
xchg
mov
pop
insl
jle
xchg
fdiv
sub
push
sub
xor
xor
inc
inc
dec
fstpl
adc
std
repnz
std
sbb
js
xchg
ja
pop
stos
jne
icebp
pushf
jmp
mov
cmp
xchg
int
sbb
mov
ljmp
mov
mov
mov
pop
jp
jmp
dec
daa
stos
lahf
xor
sub
push
rorb
xchg
hlt
sbb
adc
lcall
cmpsl
mov
adc
dec
loop
cmp
lea
push
lods
sub
pop
sbb
pop
sbb
add
movntq
sar
stc
adc
lret
push
jp
aaa
mov
popa
or
test
cmc
scas
or
popf
gs
into
addr16
xor
pop
test
sub
sub
xchg
popf
or
push
push
cld
andl
and
stos
aaa
shll
stos
push
call
popa
das
jmp
sahf
rcr
in
xchg
inc
inc
pop
sbb
xchg
cmp
shrl
aam
inc
clc
lret
mov
pushf
out
jae
pop
push
lret
cmp
push
cmc
cmp
and
jns
or
add
adcb
mov
add
arpl
les
mov
out
outsl
shl
push
cs
test
inc
dec
lods
mov
lcall
imul
xchg
add
xchg
xor
mov
cmp
arpl
test
shl
inc
jmp
faddl
or
add
inc
outsb
dec
jg
and
push
es
mov
mov
addr16
std
add
add
cmp
into
fsubs
mov
lods
imul
dec
movsb
js
mov
icebp
sbb
rol
cmp
jmp
les
daa
jl
std
out
les
add
movsb
adc
mov
and
test
bound
dec
sbb
adc
push
mov
mov
insl
arpl
imul
dec
notb
cmp
pop
jnp
xchg
sbb
les
sti
jno
aaa
jmp
imul
mov
xor
push
clc
sbb
mov
insb
adc
loop
mov
and
lret
pop
inc
sbb
push
jp
and
jmp
push
and
push
pop
icebp
or
js
inc
xchg
add
xchg
notl
xor
cmp
icebp
jbe
xchg
cs
push
dec
push
mov
adc
addl
lcall
out
pop
adc
mov
test
cwtl
ljmp
insb
adc
pop
fildll
mov
pop
push
pop
and
cmp
add
jg
aaa
inc
jg
call
int3
push
rcr
rcrl
jnp
int3
cld
sub
xchg
dec
add
repnz
insl
je
sbb
sahf
xchg
mov
mov
flds
fisttps
fildl
push
ljmp
imul
sbb
sbb
ljmp
into
or
push
cli
filds
fstl
test
pop
jge
cwtl
xchg
sti
fbstp
jns
mov
cmp
sub
loop
sti
out
stos
dec
sbb
int3
push
in
mov
scas
or
mov
dec
xchg
add
xchg
sbb
jmp
fldl
jecxz
add
ja
mov
pop
imul
dec
mov
mov
adc
jmp
inc
inc
dec
rcrl
pop
inc
sbb
push
sub
roll
push
ds
jno
in
ret
inc
mov
or
add
imul
mov
mov
lods
test
dec
add
test
cmc
lret
jecxz
jmp
add
and
pop
imul
mov
fwait
cmp
pop
sahf
repnz
nop
jbe
mov
xorl
sbb
ja
cmp
push
xor
push
cwtl
dec
jge
sbb
arpl
scas
mov
push
out
push
mov
pop
xchg
push
adcl
mov
sti
xor
push
mov
mov
push
cltd
pop
xchg
jmp
out
add
cmp
popf
jne,pt
and
push
das
or
notb
adc
mov
loope
add
cmpsl
and
dec
in
dec
je
xor
loopne
dec
dec
jae
mov
std
dec
ret
mov
ljmp
push
xor
inc
fisubs
cmp
cwtl
jne,pn
push
outsl
adc
pushf
cmp
adc
mov
sti
adc
sub
sub
repz
jmp
ret
fcomp
std
push
add
sbb
jno
aas
push
xchg
fprem
mov
mov
mov
lret
hlt
cmpsl
pop
push
sub
and
cmp
mov
push
je
xor
shll
pop
lahf
insl
in
jo
outsl
fbstp
lahf
xlat
xchg
mov
scas
lock
pop
push
popf
jmp
pop
jge
out
fidivs
addb
and
out
call
mov
mov
int3
sbb
pop
push
imul
mov
repnz
pop
lret
mov
jl
sub
fists
gs
cli
outsl
fwait
mov
fucomi
pop
jmp
dec
mov
ret
or
das
pop
jmp
js
mov
test
xchg
cmp
int3
mov
add
push
in
fdivrs
pop
xor
add
dec
imul
jl
mov
out
pop
test
cmp
lods
mov
cmp
std
mov
cmpsl
cmp
pushf
sbb
mov
lds
test
xor
pop
adc
mov
scas
xlat
sbb
xor
pop
pop
ss
pop
or
jecxz
outsb
sbb
repnz
add
sbb
jbe
push
cmp
decl
mov
sbb
ficoms
adc
mov
xor
mov
mov
cmp
xchg
outsb
sub
jne
push
pusha
shlb
mov
push
andl
stos
sbbl
int3
xchg
inc
sub
nop
cmp
mov
incb
or
push
in
jne
enter
cs
xor
add
test
mov
out
jno
sbb
std
lret
mov
cmp
xor
in
adc
mov
test
mov
cmp
loope
adc
pop
rcll
add
jge
stc
add
adc
push
or
scas
mov
jg
push
dec
ror
jnp
push
ffree
jl
and
dec
mov
test
pop
push
movq
imul
jno
jmp
mov
jns
mov
mov
or
cmc
mov
jbe
mov
mov
mov
add
pop
and
fnstcw
sub
das
loop
and
test
je
out
pop
nop
bound
int
stos
lods
gs
adcl
in
jp
cmp
jo
sub
cmp
jo
das
test
cltd
loopne
out
and
push
test
mov
inc
sub
cs
cmp
push
add
dec
and
nop
insl
add
and
rcll
push
sub
sbb
mov
ja
jno
xor
mov
jb
mov
dec
mov
fldt
cltd
out
iret
sbb
in
and
ljmp
out
adc
movsb
int
jnp
out
pop
xchg
jmp
jp
inc
out
ret
movups
loope
fidivrl
cli
jne
pop
add
cmp
mov
dec
es
fisubs
jmp
jg
xor
xchg
cmp
mov
xchg
xor
fsubrl
std
les
add
movb
enter
mov
add
pop
das
inc
call
xchg
stc
dec
pushf
jnp
fistl
mov
scas
jp
lds
jb
dec
jnp
fwait
jnp
insl
idivb
push
stos
push
mov
clc
out
bound
je
mov
dec
ret
in
sub
sub
icebp
add
in
mov
adc
xchg
xorl
andb
jp
dec
jecxz
mov
mov
and
popa
cltd
dec
xchg
int3
adc
ja
divb
push
hlt
push
fs
cld
mov
or
push
pop
cmp
xor
sti
mov
push
sbb
js
dec
sbb
ret
mov
outsl
loope
gs
jnp
pop
xor
mov
xor
ret
push
jne
and
or
lock
jne
push
xchg
mov
dec
int3
cwtl
imul
frndint
les
in
ljmp
call
fwait
ss
sub
push
dec
iret
movsl
pop
ja
mov
and
aaa
test
pop
cmpsl
ret
fdivrs
es
mov
call
xchg
hlt
mov
sub
dec
mov
add
mov
xor
mov
add
in
fwait
int
add
jbe
fsubr
out
mov
test
inc
lods
inc
mov
jne
or
push
pusha
push
out
jne
cmp
and
xor
outsb
fxch
filds
mov
add
mov
mov
push
mov
pop
dec
cmp
int3
daa
sahf
mov
sbb
sub
adc
sub
xor
add
cmpsb
aam
xor
or
add
rdtscp
fwait
jns
mov
inc
nop
sbb
insb
pop
jbe
icebp
cmp
push
push
aad
fld
sub
shl
adc
add
and
xchg
xchg
push
sarl
out
out
xchg
daa
sbb
out
push
icebp
add
ret
mov
add
lods
jg
icebp
sbb
fwait
jg
xchg
lock
mov
in
xor
mov
mov
out
les
int
jle
mov
xlat
std
outsl
mov
mov
int3
lahf
cmp
inc
and
lret
add
inc
xchg
and
mov
stos
sub
push
jb
xchg
cmp
and
dec
fcomip
int3
imul
je
dec
daa
pop
mov
mov
sarl
sbb
push
adc
loope
dec
movsb
setno
cmp
push
test
imul
lret
ss
lods
cmp
add
xor
mov
pushf
sub
xchg
test
mov
dec
inc
lods
xor
in
fldcw
cmp
ret
xor
mov
adc
je
mov
push
filds
mov
mov
lcall
in
add
stos
and
and
fldenv
shll
sub
xchg
mov
pop
xchg
inc
imul
sbb
or
mov
lret
or
stos
sarl
sub
pop
pop
loopne
idivb
add
adc
push
sbb
hlt
jne
push
fstpl
ja
and
cwtl
push
ret
scas
ljmp
sahf
cmpsb
mov
insb
xchg
or
mov
test
sbb
xor
test
enter
jbe
fisubl
pop
repnz
bound
andl
sbb
test
in
inc
cmp
repz
pusha
mov
add
push
cmp
stc
leave
add
lahf
ljmp
loop
clc
mov
scas
js
or
clc
daa
and
leave
outsb
or
sbb
cmp
sarb
sbb
xchg
faddp
mov
lret
cltd
mov
xchg
jb
mov
and
pmulhw
mov
in
dec
in
nop
push
stos
xor
jno
sti
jg
add
mov
xorw
in
je
sbb
inc
loopne
adc
bound
fisubs
std
xchg
cmp
and
xor
jno
pop
push
js
ds
enter
popa
jge
cld
push
mov
jne
adc
push
test
mov
ffree
je
outsb
lcall
out
or
jo
dec
sbb
mov
and
adc
movb
scas
negb
cmp
add
jmp
fbstp
sti
jge
mov
jmp
sub
std
dec
cs
aaa
out
mov
out
mov
mov
sub
and
out
lock
sub
lods
leave
pop
mov
dec
rolb
sahf
jb
push
icebp
mov
cmp
fadd
inc
xchg
add
mov
cmc
push
mov
mov
jne
inc
sahf
xchg
stos
ret
mov
mov
fstl
loope
cmp
fidivrs
test
mov
xchg
cmp
in
cli
fistpll
pop
pop
test
pop
pop
and
sbb
cwtl
sbb
mov
out
iret
jne
nop
mov
mov
int
mov
or
scas
out
out
addr16
jg
sub
aas
xchg
mov
rorb
clc
shrl
test
fwait
js
inc
leave
sub
mov
jg
fdivrs
cs
in
rcrb
decb
xchg
int3
in
mov
mov
in
mov
cmp
add
icebp
loop
sub
loop
out
push
mov
dec
push
push
aaa
addr16
jmp
sub
fistps
xchg
icebp
mov
fdiv
mov
ss
dec
aaa
mov
cmpl
or
in
mov
test
mov
fmull
jecxz
xchg
xchg
xchg
dec
out
or
bound
lock
orb
leave
lods
push
roll
aas
mov
sub
sub
loope
out
fcmovu
sbb
sub
sahf
sub
xor
mov
adc
and
or
cld
call
jo
loop
fldenv
adc
xchg
xchg
xor
cmp
in
or
dec
xor
dec
adc
adc
sti
pusha
into
bound
xchg
push
inc
roll
inc
ror
imul
ljmp
notl
cwtl
mov
cltd
add
cmp
aad
daa
sub
mov
xchg
mov
xor
push
jbe
cli
icebp
cmc
std
push
add
pop
adc
test
iret
mov
jb
and
mov
outsb
push
mov
xchg
xchg
insb
loopne
jb
push
jne
or
sti
cs
in
inc
imul
or
mov
push
add
mov
dec
mov
add
out
lea
pop
mov
xchg
add
cs
add
inc
push
sbb
lods
xchg
jne
jle
xchg
fwait
arpl
in
mov
out
inc
mov
jb
adc
push
cmp
mov
xchg
add
mov
sti
dec
or
lret
cmp
dec
mov
jo
xor
adc
jae
pop
adc
je
cmpsb
push
js
ss
jno
push
jge
rcr
rol
in
sbb
jl
lods
fidivl
js
xchg
outsl
repnz
xchg
cmp
ja
adc
dec
out
or
aam
adc
jbe
clc
iret
cmpsb
repnz
subl
fsubl
out
repz
xchg
aad
or
aad
dec
daa
dec
dec
xor
jae
mov
pusha
sbb
sub
add
push
fdivr
adc
aad
mov
jmp
test
cmp
incl
push
inc
lods
push
add
push
xor
xor
enter
xchg
repnz
mov
jl
jl
sub
mov
sub
pusha
mov
pop
daa
mov
mov
mov
js
shlb
out
leave
in
cmp
fbld
pop
dec
pop
pop
mov
loopne
pop
jl
ljmp
stc
imul
int
mov
xchg
mov
jbe
cwtl
mov
inc
xor
and
mov
shr
paddq
ds
sub
pop
icebp
mov
or
test
jo
jecxz
into
aaa
cmpsb
adcl
mov
and
stos
inc
and
inc
pop
sub
xchg
stos
std
stos
push
mov
pushf
addr16
addl
push
inc
lods
mov
add
mov
sbb
fidivs
negb
outsl
push
add
xchg
scas
ss
mov
inc
or
stc
mov
mov
enter
in
mov
jno
mov
xchg
jnp,pn
mov
xor
cld
dec
ffree
inc
adc
out
mov
mov
xchg
and
pop
mov
xor
lret
xor
or
jnp
mov
adc
sbb
les
daa
js
and
sarb
std
rol
ja
cmpsb
das
cmp
jo
jns
scas
sbb
dec
arpl
cmp
int3
dec
mov
jno
jb
int3
xor
xor
int3
scas
fstpt
std
cmpb
in
push
arpl
xchg
cltd
push
xchg
push
mov
mov
mov
mov
xor
sbb
inc
lret
mov
mov
div
xchg
cmpsb
push
jp
sbb
repnz
xor
sbb
push
or
je
jne
sub
adc
in
iret
mov
imul
pop
push
cltd
test
inc
lods
jl
mov
sub
or
mov
jne
mov
xchg
pop
jae
push
pop
loopne
and
rorb
loopne
adc
sub
rol
sbb
add
inc
leave
pusha
sub
bound
aaa
mov
cmpl
or
movsb
sub
jb
mov
xchg
sbb
popf
and
into
pusha
xchg
mov
dec
test
jns
mov
aaa
mov
jno
lahf
mov
movsl
mov
pop
jl
mov
xor
outsb
daa
pop
cmp
sub
in
xchg
push
jmp
jg
xchg
xchg
fldt
mov
dec
popa
sbb
stos
and
or
dec
dec
jecxz
ret
jnp
jns
cmp
xor
arpl
pop
loopne
cmp
mov
inc
mov
cmp
loop
mov
in
mov
in
jmp
sbb
pop
imul
and
in
cmc
fnstenv
push
jmp
bound
xor
roll
inc
fnstcw
mov
movb
arpl
sub
push
mov
lcall
lods
xor
ja
jno
jl
adc
mov
popf
fcomps
out
and
inc
out
clc
cmpsb
mov
fisttpll
icebp
nop
or
out
insl
aam
bound
xchg
notb
jo
or
jg
lea
cmp
insb
das
ja
fld
xchg
sbb
out
pop
fnstenv
aad
int3
dec
add
mov
or
in
pop
xor
lods
fdivrl
shlb
es
sub
pop
ss
mov
or
xchg
mov
stc
imul
roll
idivb
fwait
bound
push
shlb
in
inc
push
aas
adc
repnz
xor
pop
test
loopne
popf
or
loop
cmp
movsl
xchg
add
jne
push
pop
pop
in
js
mov
and
pop
adcb
fsubs
bound
orb
mov
lock
mov
test
sub
int
or
jbe
arpl
jbe
ds
rorl
mov
movsb
cmp
pop
jns
test
fs
jb
lea
adc
sub
xor
test
mov
sub
jge
mov
repnz
inc
daa
into
xchg
dec
pop
cwtl
inc
sbb
cli
test
out
and
cmp
cmpsb
lahf
jg
dec
loop
aad
ret
xchg
imul
test
jge
imul
loope
push
or
popf
and
sbb
mov
xlat
outsl
les
outsb
mov
movsl
sti
jb,pt
clc
lods
in
xchg
pop
inc
test
lret
adc
xchg
push
and
scas
ljmp
xchg
xchg
icebp
or
addr16
pop
dec
lods
adc
xor
xor
sub
cmp
inc
aam
xchg
and
cmp
std
adc
pusha
and
inc
out
cltd
xchg
mov
hlt
in
jecxz
pusha
imul
cmp
sub
push
sub
mov
and
imull
movsl
push
daa
jnp
mov
ficomps
push
sbbl
mov
fcmovnb
push
imul
add
pop
pop
jmp
inc
cmpsl
push
and
fs
shll
loope
jnp
push
data16
mov
jbe
mov
inc
sub
jle
jle
cmp
addr16
dec
adc
xchg
scas
inc
xchg
scas
movsb
das
mov
loop
imul
mov
cmp
jl
fdivl
dec
dec
test
jb
mov
xchg
jbe
stos
popa
add
add
std
and
imul
and
inc
xchg
sar
mov
sub
sub
cmp
inc
movsb
pop
andl
jae
lret
out
mov
cmpsb
movsl
fdivr
adc
mov
scas
dec
jmp
movsb
leave
jnp
add
psrlq
push
mov
das
jns
scas
mov
shl
push
or
aad
lret
inc
add
arpl
adc
push
jnp
cmp
shrl
das
das
cmpsl
movsl
mov
cmp
mov
or
xor
mov
lret
stc
scas
and
lods
mov
inc
shr
inc
shll
shlb
xlat
adc
out
pop
flds
mov
and
ja
jp
lcall
mov
repz
push
movsb
cs
shll
cli
rcr
das
xor
dec
cwtl
loop
pop
insl
or
sub
ret
adc
test
inc
fadd
bound
add
fisttps
push
ljmp
frstor
in
mov
and
in
test
xchg
jmp
ret
faddl
outsl
xor
std
jo
mov
imul
popf
in
mov
add
add
add
es
es
pop
xor
xchg
in
outsl
mov
xor
fldl
fwait
mov
adc
xchg
dec
shll
lea
add
sbb
lret
movsldup
roll
aas
in
dec
cltd
pop
std
fscale
cli
dec
call
stos
pop
aam
lcall
mov
shrl
push
hlt
insl
test
mov
pop
fidivs
cli
popf
pop
mov
lea
pushf
xchg
jnp
aaa
outsb
pushf
mov
insb
insb
movsl
xor
cmp
xor
cli
sahf
and
xor
in
sub
repz
sub
jae
int3
lods
adc
mov
rcrb
lret
add
mov
mov
enter
xchg
add
sbb
gs
stc
test
loop
ds
fstpt
mov
jge
mov
iret
mov
popa
mov
cmp
jecxz
icebp
xchg
xchg
xor
roll
pop
enter
lock
stos
loop
inc
xchg
scas
dec
cmpsb
mov
dec
mov
divb
ss
sbb
pop
push
mov
hlt
xchg
loopne
and
cltd
loopne
ss
in
jmp
inc
mov
test
mov
and
or
cld
add
shl
inc
adc
push
inc
mov
add
adc
sbb
rolb
inc
rorb
stos
pop
hlt
or
pop
hlt
jae
mov
lods
sti
add
xchg
ficoml
dec
mov
add
aad
mov
sarl
or
mov
lock
or
rclb
sub
lahf
addr16
dec
mov
pop
adc
sub
pushf
cld
add
jae
dec
in
xchg
lret
jns
fbstp
mov
jl
jnp
jo
push
dec
or
pop
mov
xchg
sub
adc
out
jl
cmpsb
lcall
inc
aaa
out
mov
in
cmp
lahf
cmp
pop
push
xchg
and
cmp
or
jb
pop
xchg
stc
push
cli
sti
dec
jecxz
sbb
and
jecxz
or
jns
cwtl
cmpsb
jno
fdiv
sub
and
out
arpl
scas
das
in
cltd
add
shll
cmp
lret
pop
mov
push
pop
sbb
push
xchg
imul
add
pop
pop
dec
xor
inc
dec
lcall
loop
test
ss
xchg
enter
sti
mov
lret
and
movsb
repz
pop
leave
roll
aaa
mov
pop
enter
in
hlt
add
dec
mov
add
scas
add
aad
aad
pushf
bound
dec
mov
jns
mov
dec
cmpl
sbb
lods
ds
orb
fistl
sbbl
in
inc
rol
sub
mov
cmp
xor
add
lret
dec
pusha
popf
ljmp
cmp
lods
push
dec
mov
xlat
mov
add
scas
xchg
pusha
lds
jbe
test
push
shrb
sub
mov
mov
aaa
dec
xor
xchg
rclb
inc
pop
push
sbbl
test
repz
in
mov
add
divl
mov
imul
cli
fwait
inc
adcb
int3
shl
es
jle
insl
stc
or
sti
sub
imul
mov
mov
and
call
cmp
sbbl
inc
adc
call
hlt
cmp
lcall
stc
into
add
lcall
shlb
cmpps
lea
xchg
push
jp
cwtl
daa
call
popf
mov
push
mov
push
mov
sbb
cs
mov
adc
lods
mov
sub
pop
jnp
jb
mov
aas
xor
adc
pop
mull
pusha
push
push
dec
aas
pop
push
sbb
out
sbb
in
mov
inc
cmp
sbb
out
das
fwait
mov
mov
push
icebp
sar
cltd
pop
pop
and
int
dec
mov
mov
in
lcall
cs
adc
inc
push
sub
push
xor
cmpsl
cltd
fildl
repz
cmp
daa
mov
adc
aaa
loop
push
cmp
xchg
arpl
iret
cmp
je
jl
sub
mul
fs
std
ljmp
dec
bound
test
jne
imul
mov
adc
pop
dec
jl
inc
push
mov
lds
sbb
lds
shll
repnz
sbb
test
mov
icebp
fisubl
mov
push
adc
jg
mov
xchg
pop
xchg
sahf
mov
clc
add
insb
sbb
sub
enter
out
dec
pop
sti
adc
jno
xchg
popa
xchg
stos
loop
xchg
decl
cmpsb
xchg
ret
stos
fsubrs
lods
mov
pop
fiaddl
gs
imul
push
lods
mov
and
push
adc
rcrl
jae
shrl
xor
or
mov
xchg
dec
arpl
fs
mov
scas
mov
cmpsb
in
orb
fs
mov
push
push
sub
ret
filds
and
cli
lods
pop
in
dec
xchg
or
ja
lods
push
jp
scas
mov
repnz
lods
cli
inc
jmp
repnz
add
sbb
sub
push
sbb
pushf
xchg
inc
inc
mov
fptan
push
mov
push
cmpsb
cld
subl
add
or
and
cmpsl
lds
sbb
popf
and
out
daa
dec
xor
xor
add
sbb
xor
int
dec
rcll
fcoml
lret
in
fsubs
push
dec
aaa
test
jae
sti
or
mov
addb
sbb
jp
insl
cli
mov
mov
adc
out
cmpsb
loopne
pushf
sub
xchg
jle
lds
mov
mov
inc
out
push
sub
pop
in
fsubrl
imul
adcb
into
lea
out
xor
or
fisttpl
out
xor
xor
aad
xor
inc
ret
xchg
inc
lods
insl
mov
dec
push
mov
push
addr16
fidivl
sarl
adc
in
stos
mov
push
icebp
leave
lea
cmc
mov
add
or
mov
and
xchg
hlt
test
ljmp
test
addr16
aad
inc
hlt
dec
outsl
adc
pop
push
daa
mov
clc
mov
in
push
out
mov
movsb
idivb
sarl
sbb
mov
loop
dec
adc
cmp
jb
pop
repz
daa
inc
fcompl
aad
ljmp
or
into
in
aas
sbb
and
xor
cmc
es
into
adc
test
fsubrl
testl
mov
inc
push
dec
dec
out
inc
add
insl
mov
or
pop
cmp
outsb
shl
test
loopne
aam
nop
out
fyl2xp1
aam
xlat
adc
pop
adc
adc
int3
jns
sbb
add
mov
loopne
mov
mov
add
insb
cmpsb
out
imul
xchg
ja
inc
addb
aaa
push
lret
mov
repnz
ss
add
pop
fisubl
mov
enter
out
fsubl
xorl
jge
jbe
or
stc
test
inc
or
rcrb
push
andl
lea
jbe
adcl
add
mov
dec
mov
pop
push
adc
je
lds
dec
jns
jno
or
ja
inc
mov
and
and
ljmp
testl
sbb
xchg
sbb
outsl
dec
inc
rcll
std
or
fwait
xchg
lods
xchg
shlb
dec
dec
in
adc
leave
loop
inc
mov
sti
adcb
mov
add
sti
xor
pop
jns
xchg
or
push
mov
mov
fidivs
stos
pop
test
lahf
sbb
or
ret
sbb
mov
js
inc
subb
dec
cmc
leave
ror
fwait
add
sub
test
lcall
adc
icebp
mov
ss
ret
inc
xchg
in
jmp
cs
lcall
cmp
push
das
and
mov
leave
fs
into
jecxz
and
inc
fidivs
dec
push
push
push
jne
out
dec
shlb
jmp
or
jno
xchg
scas
pop
scas
mov
add
test
jne
mov
ljmp
out
icebp
aas
cmp
fs
adc
or
xor
decl
cmc
pop
icebp
dec
mull
add
imul
cmp
aas
outsl
lea
fcmovbe
fmulp
push
jl
mov
xchg
push
fcoml
into
subb
dec
insl
sti
stos
sub
or
ret
sbb
push
shll
or
cs
roll
push
out
xchg
addl
ja
pop
xor
jp
fisubl
test
xchg
inc
inc
and
and
cmpl
outsl
test
jno
push
lahf
movsl
mov
fistps
sbb
xor
and
lods
inc
out
sbb
inc
call
xchg
push
pusha
sbb
lcall
mov
pop
xchg
mov
sti
dec
repnz
je
in
jns
imul
scas
in
shll
xlat
jle
jnp
mov
lods
pusha
popa
lret
repnz
mov
jnp
test
js
jbe
mov
lods
call
sbb
pop
aam
mov
xor
xor
pop
in
sbbl
mov
shll
jae
cmpsb
jne
leave
int
and
dec
repz
enter
push
xor
pop
push
add
mov
or
cltd
dec
jbe
je
scas
loop
outsl
jp
jns
pop
and
mov
inc
pop
add
adc
sarl
inc
mov
jb
or
test
jmp
ljmp
fisttps
movsl
mov
lea
pop
push
inc
mov
pop
mov
dec
idivl
nop
filds
push
test
icebp
xchg
pop
sbb
cmp
mov
iret
sub
mov
pushl
cmpsb
into
mov
mov
stos
xchg
cmc
mov
ss
lock
cs
arpl
or
out
add
das
int3
rcrl
loop
pop
stos
lahf
pop
jns
sbb
test
gs
fadd
push
push
xchg
outsl
jbe
imul
bound
or
aaa
or
cmpsb
cli
ljmp
add
stos
into
lds
aaa
xchg
in
mov
push
dec
cmp
nop
push
gs
inc
xchg
fcoml
icebp
or
add
fs
dec
or
pop
xchg
jp
and
ds
inc
dec
sbb
rclb
orb
push
jns
out
inc
xor
dec
sti
lcall
mov
push
ret
lret
or
mov
jo
pop
dec
dec
nop
sti
and
lahf
ror
in
mov
jae
insb
add
in
fisttpll
std
sub
ljmp
test
das
test
es
mov
push
cld
movsb
int
jmp
in
cltd
mov
test
icebp
adc
fcmovb
mov
mov
push
lea
and
lods
sub
mov
leave
scas
push
popa
xchg
sub
jns
fimull
arpl
mov
adc
clc
dec
das
fists
lret
or
in
mov
jno
mov
xchg
and
mov
add
fstpl
push
lods
in
sub
and
pop
mov
push
es
fldl
or
dec
or
mov
push
testb
ja
add
sbb
mov
mov
xor
dec
test
mov
pop
mov
hlt
pop
insl
notl
jp
stc
popf
jb
cmp
arpl
pop
lahf
sub
clc
ss
inc
pop
fcoml
outsl
sub
insl
push
jp
sbb
xor
imul
mov
lahf
dec
div
stc
xor
dec
mov
lahf
repnz
or
xchg
fcompl
lret
aam
inc
dec
fsubrs
shl
call
orb
add
xchg
dec
cld
aaa
mov
mov
adc
fdivs
stos
mov
pop
and
lret
lret
jmp
popf
cwtl
pop
sub
or
es
and
adc
sbb
and
cmp
mov
in
out
repz
fwait
dec
and
adc
inc
out
in
lret
shll
movsl
dec
cmpsb
fisubrl
fisttpl
movb
jecxz
jne
sbb
fimuls
xorl
push
cmp
dec
inc
push
mov
mov
cmc
xchg
outsb
xchg
lea
adc
cltd
movsb
sbb
add
jae
sahf
sub
insb
inc
xchg
mov
mov
out
ret
mov
cltd
pushf
or
cmc
ds
outsl
sbb
cmc
sub
mov
inc
jae
lcall
adc
outsl
add
pop
mov
add
call
dec
mov
scas
jg
popa
push
cmp
add
fcmovnbe
xor
aaa
push
pop
cli
aam
arpl
mov
rol
movq
xchg
pop
pop
out
add
lret
movsl
les
into
add
in
aad
sub
insb
pop
sub
sub
or
jb
xorl
jno
clc
push
mov
pop
jg
pushf
xchg
jnp
fildll
jns
and
cmc
or
push
arpl
mov
add
sbbb
xchg
add
iret
stos
pop
adc
pop
arpl
xchg
fldl
push
sub
out
add
outsb
sub
sarl
pop
xor
push
and
test
xlat
cmp
mov
xchg
or
add
ss
inc
int
popf
mov
cmp
or
cwtl
mov
fstl
pop
mov
clc
inc
cmp
or
in
movsl
jl
and
sub
and
mov
pop
push
mov
push
pusha
jae
jge
and
fwait
push
cmp
xchg
push
or
repz
xchg
or
fdivs
push
pop
jp
xor
out
jge
out
enter
xchg
das
call
adc
pop
sbb
repz
sti
mov
fistpl
fisttpll
mov
mov
inc
add
pop
testb
push
cli
clc
jbe
or
ret
adc
cltd
add
in
repz
xchg
les
clc
lahf
lods
inc
add
in
inc
pop
dec
inc
jno
adc
nop
sbb
push
popa
hlt
in
inc
add
or
and
into
inc
cmp
dec
mov
adc
sbb
std
sub
xor
pop
add
cwtl
div
mov
lret
xor
insb
dec
push
sub
sbb
jle
xorl
jae
stc
xor
push
pop
stc
js
aad
add
xchg
cmp
push
push
in
jo
or
mov
sbb
aaa
sub
and
jae
fdivl
push
je
push
jns
adc
imul
cmp
out
ljmp
xor
add
subb
fs
add
push
hlt
xchg
xchg
sbb
jecxz
aad
jo
sahf
aaa
nop
mov
es
pop
js
std
clc
jo
cmp
jne
js
cmc
mov
cmp
rcrl
stos
push
cmpsl
mov
cs
pushf
pop
inc
mov
push
mov
es
shr
mov
out
cmp
sbbb
ret
jb
daa
jno
inc
lods
or
stos
dec
jne
jecxz
iret
xor
pushf
pop
lcall
jnp
sti
addr16
pop
inc
sahf
mov
cmp
shll
pop
repnz
mov
sbb
mov
xchg
test
dec
sub
imul
das
cltd
cld
ss
lret
mov
iret
pop
mov
sub
xchg
ds
mov
aas
fldcw
pop
sub
mov
test
adc
dec
adc
or
js
addl
mov
jge
dec
jecxz
incb
add
cmp
inc
std
enter
inc
stos
aad
aad
xchg
mov
dec
and
rolb
mov
mov
xor
inc
addr16
mov
pusha
mov
push
sahf
data16
xlat
push
and
mov
pusha
flds
mov
cmp
jl
push
testb
outsl
or
jnp
mov
sub
incb
dec
into
ds
push
mov
inc
sub
push
ds
dec
sbb
enter
call
ret
xchg
pusha
fiadds
mov
vcomiss
xchg
ret
dec
pusha
lods
xor
jns
scas
or
aad
and
mov
push
sar
lahf
sbb
jmp
imul
loop
or
mov
add
pop
lock
cmp
lret
ret
jg
or
dec
or
ljmp
pop
xor
test
int
leave
mov
fadds
cltd
push
mov
mov
stc
mov
aad
fcmove
xor
shll
mov
movsl
dec
inc
push
pop
fadds
mov
lods
jbe
sub
js
pop
jle
mov
adc
push
cwtl
ret
rcrl
mov
sti
xor
movsb
lea
lcall
gs
xchg
in
mov
mov
inc
rcrb
in
or
and
cmc
or
mov
mov
fbstp
icebp
movsl
jmp
subl
and
inc
and
or
adc
mov
imul
testl
ds
pop
jg
loopne
cmpsb
daa
js
xor
in
shrl
cmp
inc
lcall
jae
xor
subl
das
jge
dec
or
hlt
je
add
push
popa
fists
rorl
xchg
int3
es
test
push
xor
das
popa
movsb
pop
push
call
dec
inc
dec
mov
mov
xchg
jno
test
mov
out
sub
mov
inc
sbb
ficomps
pop
inc
xor
rcll
pusha
in
and
stos
mov
out
loope
scas
ss
adc
add
fidivl
add
mov
cmp
mov
jecxz
jecxz
jne
push
or
xor
fimuls
negl
cs
jb
fs
jecxz
into
xchg
dec
dec
jbe
pop
pop
xchg
pop
pop
or
outsb
sub
xchg
cmp
xor
xor
jge
in
jo
xorl
jne
lret
int
test
mov
daa
rclb
mov
pop
lock
in
mov
push
jno
jo
xchg
mov
push
or
fwait
outsl
mov
aaa
in
hlt
sub
mov
mov
push
xchg
dec
test
push
fmull
test
sub
shr
and
ret
mov
sbb
idivb
aad
mov
xchg
shlb
jb
cs
jne
jmp
shrl
ret
scas
inc
imul
rcl
xchg
cld
inc
fldt
enter
out
stc
dec
xchg
jge
mov
pushf
or
dec
loopne
les
lcall
out
adc
dec
ret
std
in
imul
cmpsb
mov
and
in
jbe
outsb
std
ljmp
mov
enter
inc
out
jae
xor
lret
add
ljmp
mov
pop
dec
shll
call
incl
xchg
cwtl
cmp
xor
jae
loop
mov
movb
pop
sub
add
and
cmc
popl
xchg
pop
cwtl
inc
out
dec
cltd
ss
xor
xchg
loopne
in
jg
or
aad
insb
stos
push
int3
jp
inc
sub
pop
stc
int3
jo
ja
add
stos
ljmp
mov
dec
sub
in
lods
mov
in
aad
dec
adc
lock
jmp
xchg
push
or
out
or
clc
mov
roll
mov
repnz
shll
int3
mov
sbb
ficomps
mov
xchg
xchg
mov
inc
cmpsb
push
in
es
mov
push
sub
add
shl
mov
jnp
je
inc
push
xlat
stos
sub
and
dec
push
dec
mov
xchg
jae
sub
sbb
inc
pop
int
add
cmp
xorl
jge
lcall
loope
sbb
repnz
xchg
bound
imul
iret
xchg
aam
lods
insl
jp
jns
mov
sub
xor
mov
rorb
xchg
mov
xchg
mov
mov
mov
jnp
std
xchg
cmp
cmp
in
ds
lret
paddusw
xchg
enter
sub
adc
inc
push
fistps
jl
jnp
add
or
cmp
adc
movsl
push
mov
push
pop
into
test
cld
cmp
insb
cmp
call
sub
mov
pop
les
dec
iret
icebp
mov
adc
jecxz
push
lret
mov
js
outsb
inc
int
cli
xchg
imul
xchg
or
stc
outsb
movsb
or
cmp
enter
psadbw
inc
pusha
test
adc
push
cmp
xchg
pop
xor
or
mov
jbe
int3
cli
hlt
shl
jne
jo
inc
stos
inc
dec
movsb
movsb
inc
cmp
iret
rol
adc
fstps
cmpsb
pop
repz
xchg
clc
mov
scas
addr16
or
and
pop
mov
jns
cmpsl
mov
inc
sub
pop
sbb
cmp
jecxz
cld
jbe
push
scas
out
jge
pop
lret
fstpt
lret
mov
fsubs
sub
ret
bound
jp
lahf
nop
xchg
pop
cmp
lds
hlt
ds
les
push
sar
cmp
aaa
push
inc
xlat
mov
bound
dec
mov
bound
or
mov
es
test
leave
xor
xchg
aam
cwtl
scas
es
je
mov
out
nop
mov
mov
roll
xorb
and
fstps
cmpsb
jmp
add
lods
mov
frstor
or
movsl
cmp
add
roll
jne
sbb
mov
mov
and
add
push
push
shlb
mov
mov
lock
sbb
pop
push
xchg
ds
fnsave
int3
mov
aaa
push
cld
mov
inc
into
jnp
fxch
and
out
js
dec
rol
lea
test
mov
shlb
lcall
fwait
mov
daa
fdivrl
jp
or
cltd
cmp
jge
add
addr16
out
rorb
push
pop
test
xchg
daa
sbb
dec
lret
push
inc
jae
sbb
mov
sbb
je
mov
push
inc
or
lea
jecxz
and
push
shlb
test
fs
or
cmp
ret
xchg
inc
fldl
and
in
mov
daa
cmc
xchg
stos
jl
je
sahf
dec
jmp
aas
hlt
mov
jle
mov
or
jge
push
in
fldl
sub
or
lret
std
xorb
xor
mov
das
sub
outsl
jae
ja
pop
add
xlat
fs
fcompl
jne
dec
jns
jno
and
pop
outsl
mov
test
outsl
mov
aad
imul
mov
add
dec
rcrl
xchg
loopne
out
and
clc
cmp
std
imul
pop
jns
sbbl
fidivl
adc
inc
in
adc
stos
mov
mov
decb
in
xchg
fdivrl
sub
inc
mov
fwait
inc
mov
imul
inc
out
add
hlt
ret
in
mov
sbb
lea
int
or
stos
popf
orb
dec
rcl
pop
data16
xchg
fsubl
jne
mov
lea
stc
jo
jp
aam
fwait
movsb
jg
mov
xor
sarl
cmp
cmp
ret
out
xor
or
cmpsb
add
cmp
arpl
mov
cmp
out
sub
mov
cmc
lods
pop
xchg
testl
fsub
ds
das
js
mov
int
std
dec
mov
fiaddl
repnz
fsubp
sub
pop
pop
jmp
jne
test
xchg
nop
mov
xchg
dec
push
xor
loop
push
and
inc
in
xchg
hlt
add
xchg
pop
into
push
aad
in
aad
cmp
das
enter
shlb
pop
loopne
push
sbb
inc
jl
inc
inc
insl
adc
mov
jmp
stc
cmp
or
jge
bound
pop
dec
cmp
aaa
pop
sub
xor
fildll
test
setb
dec
adc
ljmp
inc
adc
jecxz
mov
xor
sub
dec
pop
enter
xchg
adc
mov
fdivrl
imul
sub
sbbb
mov
hlt
sub
jo
jnp
jp
and
xorl
push
fiadds
sti
sbbb
stos
cs
roll
adc
andb
push
fnstsw
gs
mov
mov
rolb
push
aam
inc
loop
aam
and
lcall
mov
dec
or
lods
push
or
and
or
jne
xchg
pop
add
push
loop
dec
push
add
mov
cmp
mov
push
sbb
push
mov
jmp
dec
sub
scas
out
roll
jmp
scas
outsb
dec
jne
cmc
es
jp
inc
lds
add
and
sub
push
fstpt
lcall
lock
es
aaa
cmp
and
arpl
call
xor
or
maxps
fcmovu
mov
push
add
repz
and
pop
ja
or
sub
mov
cwtl
andb
dec
jb
cmp
out
je
sub
rolb
xchg
ret
push
imul
or
sbbl
adc
loopne
push
cmp
pop
or
aaa
xor
push
negl
je
jns
xlat
sbb
fiaddl
repz
fwait
cli
adc
popf
cmpsl
mov
xor
sahf
jg
cmc
imul
mov
arpl
cmc
dec
inc
outsl
mov
ja
inc
sbb
negb
or
frstor
inc
sbb
push
sub
sub
mov
cmp
lds
insb
aad
test
fwait
and
xor
jg
jnp
scas
lods
dec
add
sub
xor
int
inc
int
mov
cli
jl
insb
arpl
sarb
mov
ljmp
js
pop
sub
mov
stc
nop
mov
push
mov
xlat
mov
sbb
mov
xor
add
fildll
js
icebp
mov
loopne
ss
xchg
fisubl
insl
fwait
adc
mov
test
rcr
jle
cs
cwtl
mov
add
das
mov
jb
lcall
ret
out
add
or
dec
mov
dec
imul
dec
lahf
jl
mov
mov
adc
loop
sbb
lock
xchg
out
sbb
add
pop
hlt
push
pop
push
jl
cs
pop
rol
adc
mov
jmp
fld
int
push
push
pcmpgtb
adc
insb
dec
sti
pushf
cmp
cmc
fidivs
cmp
sbb
in
mov
mov
cli
rorl
xlat
cmp
cmp
xor
or
mov
cli
test
xor
out
mov
movhps
xchg
movsb
scas
std
lods
cmc
flds
lock
sbbb
sbb
cli
xor
outsb
in
or
movsl
add
fcomip
out
ret
sbb
leave
inc
or
stos
pop
sbb
rcrb
jb
ja
mov
movsl
pop
pushf
push
stc
sbb
and
loope
mov
xchg
cmp
mov
in
ja
arpl
and
xchg
cmp
lret
mov
test
cmp
pushf
jnp
pop
pop
cwtl
mov
fdivp
mov
push
mov
pop
xchg
or
fistpl
rolb
dec
fisttpl
pop
push
pop
jle
push
sub
ret
and
dec
int
icebp
loop
call
xor
shlb
add
pop
pop
ja
mov
xlat
daa
rcrb
out
pop
fists
lahf
push
out
mov
pop
fdivs
sbb
push
jbe
cs
popa
lods
xlat
in
fldt
enter
add
jne
addr16
and
lcall
xor
outsl
xor
jle
outsb
add
shll
rorl
xchg
adc
mov
movl
aas
lahf
inc
xchg
fsubrl
and
xlat
ret
fimuls
negb
fcoms
xchg
mov
data16
test
loope
out
jae
push
mov
sti
sub
and
mov
aam
stos
stc
aaa
call
aad
xchg
adc
pop
fbld
xchg
lcall
lahf
sub
stos
cld
and
into
and
scas
scas
cmp
xlat
lret
cmpb
push
daa
gs
test
pop
call
sbb
adc
aas
pop
and
or
sbb
pop
mov
ffree
cmp
or
pop
jne
cmp
loop
or
sub
push
push
dec
mov
mov
mov
jno
mov
dec
cmp
outsl
sbb
imul
jnp
mov
add
arpl
jg
fmuls
mov
adc
xchg
les
pop
mov
or
in
inc
imul
push
mov
cmp
in
rcll
push
movsl
cltd
push
or
mov
out
iret
jns
push
popl
sbb
cld
and
dec
xor
cltd
daa
xchg
dec
iret
call
aad
add
mov
fyl2x
mov
push
es
aam
ss
mov
mov
jne
xchg
ficoml
aad
movsl
sub
pop
push
movsb
sub
fdivr
out
or
push
out
movsl
enter
sub
mov
cs
jmp
jg
div
mov
mov
bound
or
ret
icebp
or
clc
gs
push
inc
in
sbb
int
xchg
push
je
jle
in
push
mov
mov
lcall
push
orl
stc
repnz
add
and
sub
mov
sbb
xchg
dec
jl
fwait
mov
xor
xor
mov
pop
sub
call
inc
je
xor
jae
jae
ret
jle
inc
xor
insl
rclb
cmp
pop
insb
cmpsl
mov
scas
push
xchg
sub
repnz
sub
sar
sbb
mov
mov
stos
xchg
mov
and
sbb
addb
out
mov
lcall
dec
js
ret
xorb
cmp
and
cwtl
mov
faddl
cmp
fwait
cmpsb
ret
inc
or
mov
mov
jne
hlt
pop
push
add
fistps
out
mov
dec
pop
out
push
imul
cmp
fisubrs
dec
out
pusha
jge
ja
testl
lret
add
adc
mov
popa
dec
divl
jns
lods
lds
or
cld
or
push
sti
movsl
int
outsb
push
scas
int
mov
cmp
outsl
cmp
cmp
and
or
xchg
ja
push
aas
loope
mov
push
jb
or
mov
stos
shrb
and
adc
scas
cwtl
insb
mov
scas
je
cmp
sub
add
xchg
sub
push
mov
sar
pop
xor
bound
xchg
and
jnp
pop
and
insb
xorl
aad
imul
dec
movl
or
leave
or
jmp
inc
lcall
push
stos
popf
call
mov
jae
stc
or
sub
adc
out
out
mov
add
fstp
pop
jge
mov
adc
jnp
mov
xchg
mov
dec
test
sub
lock
push
push
int
push
jge
out
and
lret
pop
notb
xchg
inc
in
leave
adc
insb
lahf
aaa
fs
push
imul
leave
imul
xchg
in
enter
mov
fadds
mov
mov
pusha
mov
inc
cmp
xchg
out
jb
movsl
sahf
or
iret
add
imul
cmp
icebp
stos
or
popa
xor
fwait
fs
cs
in
pop
repz
mov
add
push
sub
mov
int
outsl
push
add
shlb
popf
push
ljmp
shlb
loop
inc
push
repnz
test
cmpsl
push
add
stos
js
or
jp
cwtl
repz
xchg
push
fisttpl
fnstenv
insl
mov
dec
add
jg
js
cld
fisttps
orb
aaa
bound
rolb
cmpsl
cmp
icebp
cmpsl
xchg
mov
loop
sub
or
sbb
push
aas
mov
xor
push
rcl
xor
and
js
bound
jnp
fucomi
cmp
rolb
adc
mov
mov
outsl
push
push
sub
jmp
dec
imul
mov
push
cs
cmpsl
push
lret
mov
stc
rclb
adc
ficompl
xchg
and
outsl
push
xor
ljmp
fwait
dec
pop
mov
subl
pop
cmp
pop
cli
xchg
mov
push
push
gs
fldenv
and
push
in
adc
je
add
xchg
movsb
sub
pop
cmc
push
out
mov
loop,pt
cmc
lret
pop
inc
roll
test
mov
movsb
mov
sub
or
mov
movsl
stos
repnz
das
jecxz
adc
stos
pop
jb
out
into
cmpl
ret
data16
std
roll
lea
loopne
add
pop
out
jge
sub
lock
arpl
mov
mov
loope
sbb
and
popf
inc
pop
add
mov
dec
cmp
inc
out
in
lea
xchg
push
es
inc
add
jno
push
pop
push
sbb
popf
shll
fcomp
leave
movsb
aad
mov
cmp
mov
mov
test
mov
out
and
and
lcall
call
or
les
xor
lcall
or
push
mov
push
or
stos
sub
push
fdivs
sti
inc
mov
insb
dec
sbb
sbb
adc
adc
frstor
repz
imul
mov
inc
sub
mov
popa
cmp
add
das
das
adc
and
mov
movsl
out
dec
mov
push
in
roll
lods
cmpsb
inc
insl
cmp
cmp
xlat
inc
mov
and
js
jp
pop
pop
mov
cltd
loop
or
ds
xor
lret
lret
jg
outsb
cmpsb
pop
lea
dec
and
sub
scas
mov
in
cmp
mov
clc
sbb
cld
sahf
pop
shlb
repz
adc
pop
xchg
push
in
das
push
mov
add
lods
leave
fcmovne
push
xchg
enter
pop
mov
nop
pop
or
add
stos
sub
dec
xor
insb
cli
sub
repnz
xchg
sahf
or
adc
xor
push
int3
jge
mov
int3
loope
mov
xchg
dec
rorb
jmp
and
dec
mov
fldl
jb
sub
mov
incl
cmpsb
aaa
inc
mov
adc
jge
xchg
and
std
cmp
loopne
ffree
adc
pop
push
sahf
cmp
inc
inc
jbe
cmp
outsb
rorb
jmp
aaa
xchg
push
mov
cmpsl
dec
pop
cmp
mov
mov
xchg
pusha
xchg
and
push
mov
rcll
pop
adc
cltd
addr16
enter
leave
orl
xor
fidivrs
push
push
lret
into
scas
jle
fstpl
stos
dec
out
data16
cmp
call
and
mov
cmp
fldt
or
and
stc
test
sbb
fldenv
dec
repnz
fnstsw
push
int
xor
imul
call
jo
in
push
dec
inc
adc
ds
cli
leave
pop
ss
bound
push
inc
or
fstpl
or
inc
pop
inc
mov
dec
sub
mov
xchg
in
xor
addl
push
inc
js
mov
cmc
push
jp
out
jge
inc
andb
mov
jl
aad
or
int
outsb
add
pop
aaa
aaa
fdivl
and
mov
or
scas
sahf
pop
arpl
shll
cmp
xchg
cmp
xor
mov
cmp
and
inc
jns
movsb
icebp
push
pop
adc
scas
test
pop
sub
and
mov
les
and
or
pusha
out
cmpsb
daa
stc
fwait
pop
or
repz
push
fmull
fsub
bound
inc
and
jle
cltd
in
jnp
lock
cmp
fs
adc
push
pop
or
mov
mov
or
negl
and
stos
xor
cmpsb
shrl
mov
jno
adc
xchg
fwait
lret
cwtl
xchg
mov
jl
push
cmpsl
inc
rcll
fldenv
mov
xor
loop
jae
jle
mov
sbb
pop
add
xchg
call
pushw
pop
xchg
mov
fs
lret
adc
testb
pop
sub
lret
pushf
cmpsl
push
mov
add
int
cs
adc
jecxz
cs
orb
lret
pop
fs
lret
push
xchg
fidivl
mov
inc
jecxz
add
xor
out
fs
mov
mov
cmpsl
mov
imul
mov
inc
jg
xchg
movsl
mov
in
dec
xor
mov
add
scas
pop
loopne
mov
repz
cmp
mov
xor
aam
lret
test
adc
xchg
aaa
mov
xchg
jae
lea
sub
jmp
mov
repz
mov
mov
mov
fsts
cmp
push
pop
incl
push
push
dec
movl
test
jnp
movsb
pop
lods
inc
loop
test
cli
and
inc
out
inc
es
scas
lahf
jae
mov
push
jnp
hlt
mov
push
jno
sub
pop
sti
mov
call
mov
mov
xchg
int
or
and
jne
test
das
aam
fisttpl
mov
xor
or
fists
xor
mov
je
jge
or
cmpsl
pop
leave
ret
stc
mov
insw
out
movsl
int3
cltd
outsb
sbb
mov
or
notl
and
sbb
cmp
fwait
mov
mov
pop
sub
jge
jb
stos
mov
vpunpckhbw
inc
push
int
test
inc
bound
scas
inc
or
xchg
into
xor
andb
call
pop
dec
insb
js
push
inc
nop
aas
lds
call
mov
ret
popa
add
mov
int3
sti
outsl
add
adc
fldenv
xor
adc
xor
or
sbb
and
lea
xor
imul
out
cmp
andl
repnz
dec
pushf
movsb
call
sbb
xor
jp
aaa
push
in
jle
fs
cltd
rclb
cltd
mov
lods
dec
mov
sbb
lret
add
enter
jno
daa
jns
in
imul
mov
cmp
sbb
dec
andb
xor
ret
orb
adc
out
xor
outsl
pop
cmp
les
mov
fcomi
aad
push
cld
aad
mov
and
cmpb
or
popf
pushf
sub
and
sahf
mov
stos
xor
pop
sub
cwtl
imul
inc
sbb
mov
or
push
sti
scas
jae
in
rclb
fucom
fcmovnbe
push
dec
cmc
adc
add
push
push
adc
xor
pushf
pop
movsl
inc
inc
out
or
cmp
stos
pop
loop
inc
cld
insb
sbb
inc
and
outsl
pop
lea
push
jo
movsb
dec
fwait
pusha
sbb
aas
sahf
test
pop
fistpl
aas
or
ss
xchg
int3
sub
dec
mov
mov
mov
addr16
cmc
mov
outsb
cmc
sahf
xor
popf
dec
mov
xchg
test
mov
or
sub
pmuludq
iret
fbld
stos
dec
mov
ja
inc
daa
rcrb
pop
cmp
pop
orb
rclb
daa
inc
or
lock
pop
and
jnp
loop
mov
jnp
ret
xchg
mov
sub
lods
sbb
dec
enter
jnp
hlt
outsb
sub
xchg
or
roll
adc
xor
out
add
cs
mov
aas
push
aas
mov
test
cmp
test
jnp
popa
adc
push
mov
and
stos
sbb
and
cmp
adc
mov
push
orb
into
pop
and
or
push
mov
xchg
les
cmp
mov
jo
aad
push
jp
aad
cmp
das
jb
xchg
icebp
fnstcw
lods
pop
sbb
andl
sahf
sbb
or
or
xchg
and
aam
sbb
clc
ficomps
xor
mov
push
in
xchg
out
fidivl
dec
out
cmc
pusha
out
and
mov
xor
addl
fs
fisttpl
ljmp
xchg
mov
push
adc
lret
fstps
and
loop
in
cmp
clc
push
cmp
sbb
in
push
dec
shl
dec
roll
and
fstps
stos
xor
jge
or
prefetch
or
xchg
cmp
cs
es
stos
into
xchg
out
pop
push
add
jns
jecxz
sbb
test
cmp
aam
bound
aad
mov
xchg
aam
mov
add
stos
or
stos
ja,pt
push
ljmp
or
sub
xor
mov
jae
in
xor
dec
pushf
mov
test
pop
xchg
pusha
or
mov
mov
sbb
or
or
push
mov
or
and
lods
ss
inc
push
push
incb
movsb
leave
mov
cmp
add
xchg
pusha
stos
sub
or
mov
js
add
sarb
push
cmp
add
inc
pop
shlb
mov
daa
xchg
push
cmp
cmp
sti
and
mov
dec
cmpsl
adc
mov
arpl
pop
or
imul
inc
jge
imul
jae
dec
xchg
xor
insb
xchg
xor
daa
js
adc
pushf
jno
mov
outsl
ds
mov
addr16
lahf
shlb
sbb
jle
pop
xchg
fcoms
sub
loop
loope
mov
mov
push
sbb
jb
xlat
ror
mov
inc
data16
call
nop
inc
popf
adc
inc
push
std
xor
lods
aad
and
adc
jmp
fcmovbe
sbb
out
cmpsl
mov
dec
cld
adc
sbbb
lahf
or
xchg
cmp
aam
or
pop
inc
test
xchg
call
stc
orl
push
mov
or
shlb
and
inc
into
cwtl
and
sti
enter
mov
ret
aad
rcr
pop
js
insl
push
jne
loopne
jbe
int3
or
jnp
shlb
repnz
cmp
inc
ja
lea
mov
mov
fldt
repnz
pop
aaa
add
lcall
adc
pop
xlat
pop
pop
repnz
test
dec
cmp
push
call
dec
jp
sti
or
xchg
loop
dec
outsb
fst
fisttpll
scas
icebp
fs
jae
lcall
xlat
hlt
pop
push
mov
aad
lea
loop
adc
cmp
stos
nop
mov
repz
shlb
or
rcrb
cmp
inc
fs
cmp
cmp
mov
inc
or
testl
dec
int3
push
leave
inc
inc
aad
mov
jb
mov
mov
adc
sbb
and
cltd
jns
xchg
dec
mov
popf
in
or
mov
outsb
jge
loop
push
cld
cmp
testb
popf
add
jp
inc
add
leave
mov
add
hlt
mov
push
shl
popf
shl
mov
sbb
out
xor
lcall
add
and
scas
dec
cmp
adc
and
int3
mov
add
xchg
int3
jle
cmpsb
xchg
fnstcw
hlt
mov
dec
mov
pop
bound
rol
pop
mov
or
jb
outsb
xchg
stc
imul
fnsave
adc
into
mov
shll
into
push
mov
xor
imul
mov
add
ror
outsb
xchg
push
imul
mov
jno
outsb
fimuls
add
cmp
sbb
int3
or
jg
push
mov
push
cmp
ss
xlat
fists
mov
pop
pop
aas
nop
rcll
push
clc
jae
fsubl
out
sub
add
imul
push
mov
pop
scas
fwait
xchg
popf
fwait
mov
xchg
xlat
or
sbb
add
push
clc
gs
repnz
jecxz
pop
fcmovb
aaa
or
pusha
test
sbb
cmp
negb
and
mov
inc
pop
mov
rcrl
sbb
xchg
cmp
cli
jnp
pop
pop
xor
dec
cmp
xchg
push
mov
jns
bnd
into
ret
cli
mov
negl
mov
outsl
xlat
in
sub
stos
push
and
and
cwtl
test
cmpsb
xchg
and
test
loop
jne
fs
sarb
push
push
add
mov
mov
fimuls
push
sub
xchg
jmp
mov
fwait
mov
mov
adc
mov
push
in
pop
outsl
fdivs
cs
fmuls
fidivl
icebp
xor
xchg
loop
mov
mov
test
fmul
push
das
rorl
sbb
pop
movsb
pop
stos
test
mov
xlat
push
mov
mov
push
sub
push
xor
lods
and
lret
leave
test
jmp
addl
sub
add
xor
pop
repnz
inc
aas
push
inc
cmp
shll
push
jmp
loopne
fisubrs
leave
insl
mov
or
cmpsl
out
rdpmc
sbb
dec
mov
mov
mov
divl
test
sbb
cwtl
sarl
adc
xor
inc
push
dec
xor
lock
std
subb
int3
xchg
adc
pushf
dec
outsb
fidivrs
xor
sub
dec
test
out
push
mov
inc
or
inc
mov
ja,pt
fwait
test
das
push
push
sahf
inc
or
mov
js
mov
cmp
out
push
push
std
xchg
sub
bound
jg
or
and
cmc
ret
mov
push
adc
cwtl
inc
mov
test
cmc
and
push
adc
push
popa
push
mov
mov
xchg
mov
or
stc
ffree
mov
mov
jno
inc
popf
dec
and
out
das
fistps
pop
lods
ds
bound
xlat
sbbl
gs
add
or
or
mov
popa
xchg
mov
jmp
mov
mulb
inc
mov
cmp
jle
imul
sahf
sbb
pop
in
cmpsl
sbb
hlt
popf
or
popa
add
add
movl
movsl
fbstp
xchg
jmp
adc
pushf
popf
ljmp
je
scas
movsb
xor
aas
sbb
mov
sbb
xchg
sbb
aas
xor
push
mov
subb
sub
daa
dec
outsl
mov
mov
push
adc
lds
mov
mov
js
in
in
lcall
lret
enter
cld
js
sub
stos
dec
out
mov
jp
out
out
add
enter
sub
repz
je
mov
mov
rcrl
fs
dec
adc
stos
shlb
jmp
inc
sti
add
add
mov
cmc
pop
shlb
js
je
inc
insb
xchg
push
lds
jmp
cli
and
sbb
sub
ds
in
fimuls
scas
xor
fcomp
loop
add
lock
cmpsl
xchg
xchg
cmp
pop
int3
mov
scas
push
sbb
push
and
arpl
cmp
test
sub
cwtl
lret
popa
mov
xor
sub
cli
repz
pop
movsb
cmp
scas
mov
out
inc
inc
out
inc
movsb
cmpsb
cwtl
fdiv
adcl
loope
ud2
xchg
or
mov
shlb
outsb
mov
out
add
adcb
bound
aad
push
pop
push
and
sub
dec
repnz
stos
imul
push
xchg
dec
lahf
xchg
fsts
pop
push
popa
int3
daa
jge
cmp
mov
shl
push
push
cwtl
add
jl
js
scas
mov
mov
mov
cmp
and
inc
jo
test
mov
inc
sub
pop
repnz
test
rcrl
add
nop
mov
out
sbb
xchg
in
loopne
call
add
adc
mov
mov
xchg
push
xor
cmp
dec
scas
out
sahf
imul
xchg
xor
loopne
add
fs
or
mov
push
xlat
xchg
inc
scas
xor
xchg
fnsave
push
das
dec
sub
pop
pop
test
mov
cmp
push
scas
popa
ret
sub
das
mov
ja
add
pop
insl
ret
and
cltd
mov
outsl
fs
fcoml
push
loopne
sub
push
dec
or
mulb
dec
addr16
mov
movsl
test
xchg
mov
inc
out
loope
sub
dec
sbb
push
sub
popa
stos
scas
nop
xor
jbe
lods
insb
ss
fimull
adc
fdivr
sbb
cltd
jle
icebp
ds
dec
int3
das
cmp
loopne
mov
mov
inc
imul
adc
mov
inc
mov
jmp
mov
pop
test
out
xor
out
imulb
or
clc
sub
xor
dec
aad
mov
imul
jle
push
sbb
popf
test
lods
cmc
mov
jbe
adcl
pop
mov
sahf
inc
cmp
subb
xor
aad
adc
out
jge
in
andl
sti
mov
std
das
xor
stos
cmpsl
mov
pop
addb
mov
sub
mov
cltd
loop
int
aas
and
jae
insl
mov
mov
xchg
mov
fimull
adc
shr
test
mov
mov
ljmp
int3
xchg
lcall
enter
cmp
pop
pop
out
inc
mov
test
into
mov
adc
sub
mov
test
adcl
popa
jbe
or
ljmp
cmpsb
cmpb
inc
jecxz
mov
mov
pop
out
jb
or
xor
push
mov
adc
popf
popf
jp
test
int3
xchg
movsb
imul
lds
sub
iret
mov
pop
nop
adc
xchg
add
jbe
add
dec
call
add
lea
js
hlt
sub
mov
hlt
mov
lods
xchg
mov
sub
leave
popa
fsubrs
cmp
ja
sbb
lea
enter
inc
daa
add
mov
out
push
add
subb
out
rolb
pushf
xor
mov
add
adc
cmp
and
sub
pop
mov
js
mov
cmpsl
xchg
les
fildl
pop
pop
jnp
xchg
add
jb
jg
cld
test
ss
lds
ja
fwait
adc
and
sbb
stos
lods
mov
mov
outsl
cld
sub
scas
loopne
imul
or
mov
aam
int3
insb
pop
popa
mov
out
sbb
in
jg
jmp
cmp
popf
sub
pop
outsb
mov
sbb
jecxz
or
xor
lea
sub
cmpb
outsb
pop
adc
push
sub
xchg
mov
jg
shll
fldl
daa
sub
push
sub
rcrl
mov
stos
push
repnz
jns
into
mov
jp
ret
loop
dec
shll
fidivl
xchg
shll
push
adc
jle
jae
jns
jp
xchg
scas
sub
cmpsb
fwait
adc
xor
aaa
dec
mov
sub
imul
aaa
aas
fdivs
aam
mov
inc
fs
in
aaa
addr16
pop
fdivs
stc
lods
jbe
inc
xchg
mov
sub
scas
sub
aam
add
fs
fyl2xp1
sbb
adc
dec
add
dec
cmp
lods
loope
inc
mov
lret
rorb
pop
bound
rcrb
test
add
adc
mov
jmp
cmp
push
adc
outsl
jne
xchg
jg
leave
movsl
xorl
sbb
pop
loop
rcrl
std
inc
adc
adc
loop
fsubrl
jecxz
test
adc
out
int
jg
sub
or
xchg
mov
pushf
rorb
push
xlat
add
hlt
in
inc
add
cmp
fldcw
inc
adc
insb
aas
mov
ja
sub
jno
fidivs
cs
gs
xor
jge
cmp
in
movsb
je
jge
sbb
pop
jns
jl
push
sub
mov
mov
das
pushf
dec
mov
sbb
lock
lock
gs
push
push
sub
jecxz
sub
fidivl
pop
xchg
ljmp
or
das
lea
push
and
xchg
movsb
push
xchg
sub
daa
pop
jg
cmp
mov
sub
lea
fistps
push
stc
loope
mov
daa
inc
push
push
int
mov
call
in
and
mov
mov
sbb
push
cmpsl
jo
loopne
push
pop
mov
rcll
aas
mov
es
jne
or
pop
inc
js
mov
inc
dec
dec
sbb
mov
jb
mov
dec
xor
int3
enter
sbb
loope
push
xor
fldenv
in
pop
je
adc
das
cltd
pop
pop
sub
jle
adc
insl
fwait
repnz
std
ja
cs
insb
push
inc
out
out
rolb
jle
or
jns
in
jmp
ret
jp
xchg
inc
loopne
mov
push
cs
xor
pop
imul
jl
xor
cmc
add
xor
filds
leave
fisubl
mov
cmpsb
sbb
pop
icebp
jo
ficoms
sub
xchg
rcll
in
and
fsub
inc
fmuls
pop
jo
int
mov
test
pop
sbb
or
stos
loop
cltd
dec
out
push
imul
je
mov
sub
mov
lds
lret
sbb
cmpsb
xchg
int3
imul
dec
jmp
loop
add
test
out
add
xchg
jnp
pop
inc
test
rolb
data16
lcall
mov
pushf
jnp
pop
in
push
jge
sub
jae
shrb
mov
jp
mov
loopne
adc
imul
sub
add
iret
sub
loope
mov
ljmp
out
fwait
inc
sbb
pop
and
dec
sbb
push
lret
jns
or
cwtl
outsl
push
mov
scas
mov
fst
adc
cmp
icebp
js
repz
sbb
mov
ja
aam
imul
es
mov
sbb
cmp
sub
mov
rclb
xor
scas
mov
lods
mov
loope
mov
adc
mov
jnp
rolb
lcall
sahf
xor
cwtl
mov
aad
and
xchg
cmp
popa
cmp
cld
jbe
in
mov
clc
sbb
call
sbb
cmp
cmc
sbb
xchg
xchg
clc
divb
dec
add
shrl
mov
mov
in
push
or
push
movsl
push
test
sub
mov
test
gs
dec
push
mov
fisttps
mov
stc
and
inc
scas
inc
lahf
dec
push
push
arpl
adcb
test
sub
scas
roll
or
ljmp
xor
mov
andl
jl
add
popa
lds
mov
mov
lcall
mov
and
pop
dec
mov
rcll
out
in
stos
jb
aad
inc
std
push
mov
ret
dec
add
ss
cmp
and
and
cmc
cmpsb
data16
cmp
icebp
adc
xchg
andb
lea
xchg
adc
addb
adc
leave
int
cmp
dec
inc
sahf
push
mov
lock
out
sbb
jmp
xlat
xor
and
into
xor
mov
xchg
mov
stos
aaa
movsl
out
dec
jp
jmp
cltd
clc
movsw
das
mov
hlt
mov
movsl
in
sbb
mov
xlat
out
bound
xchg
inc
and
adc
xchg
jl
shlw
arpl
add
int
push
mov
ds
mov
jmp
outsb
jle
and
mov
xor
int3
jle
test
fmuls
push
cmp
sbb
movsb
test
push
mov
je
cmp
dec
mov
scas
jbe
lret
out
or
clc
xchg
inc
adc
push
sbb
ror
mov
cld
jecxz
cmp
into
push
sub
insb
mov
jae
mov
xor
lods
out
xlat
loop
xchg
add
xchg
xchg
das
rcr
push
shlb
xchg
sub
shlb
mov
lea
pushl
les
enter
flds
lcall
pop
mov
mov
mov
sbb
xchg
sub
test
test
pop
jae
sbb
xchg
pop
out
lds
add
or
mov
push
inc
jbe
aaa
lods
add
lds
mov
mov
loopne
imul
in
roll
cli
in
lret
cld
add
mov
mov
or
call
sub
fists
in
push
fdivl
xor
or
add
stos
push
jo
mov
out
mov
pushf
in
fisttpl
shrl
adc
mov
sti
mov
ja
loopne
mov
fdivrs
jle
and
and
ds
hlt
loop
test
ficompl
and
push
sbb
pop
push
xchg
fistps
dec
or
int
xor
cmp
lock
aas
fnstenv
pop
mov
std
shlb
jge
mov
pop
mov
dec
dec
into
in
inc
sbb
cmp
mov
es
das
jb
movsl
adc
adc
jbe
cmp
shr
dec
stos
mov
shll
mov
or
lcall
jb
mov
jle
in
fsubrs
jns
sbb
pop
mov
addr16
xor
movsl
and
or
mov
outsb
ret
and
push
mov
mov
das
push
je
in
pop
mov
sbb
pop
sbb
pop
lcall
xchg
inc
mov
ds
xchg
fldl2e
popa
out
js
adc
mov
fwait
or
iret
cmc
xorb
mov
adc
call
insb
lret
pop
into
pop
js
xchg
add
cmp
jno
pushf
ds
in
inc
ljmp
lock
adc
and
push
xchg
into
push
sub
cmp
loope
jmp
int
stos
int
mov
xchg
rolb
jns
xor
imul
cld
mov
and
out
jmp
inc
jb
push
inc
jmp
xor
mov
cmp
outsb
add
jle
adc
popa
fnsave
stos
out
sahf
fbstp
test
repz
roll
icebp
fisubrl
fisttps
inc
cmpsl
into
andb
jmp
repnz
pop
aam
mov
and
jle
insl
pop
fisubrl
xchg
sub
ret
xchg
lea
rcl
xchg
into
mov
mov
dec
jmp
xor
and
das
unpckhps
imul
xor
dec
dec
adc
jmp
daa
xor
mov
jbe
xchg
push
mov
pusha
xor
or
int
push
mov
out
dec
sbb
mov
roll
jae
cmp
lret
jmp
pop
or
add
pop
push
jne
movsb
call
mov
loop
popf
fwait
sarl
inc
cltd
ss
push
cmp
enter
sub
pop
ret
pop
repnz
sbb
mov
mov
sbb
mov
jle
imul
mov
inc
jae
sti
cmp
je
add
imul
out
sbb
push
dec
lret
xor
in
adcb
and
mov
mov
pop
sbb
jbe
call
pop
loope
lret
pushf
ja
jae
mov
mov
ret
xor
push
jns
jmp
int3
pop
pop
xchg
mov
push
jns
push
lods
inc
and
sbb
xchg
xchg
loope
inc
sub
and
dec
cmpsl
xchg
or
pop
jmp
xchg
xchg
ss
addr16
ss
idivb
mov
xchg
repz
cmp
add
mov
jmpw
test
add
sbb
fildll
jmp
addb
cmp
add
and
cmp
imul
dec
ret
sub
cltd
call
popa
mov
inc
int
xor
ds
shl
adc
inc
lret
mov
mov
imul
sbb
lock
push
sti
cmp
lcall
cmpsl
push
push
mov
or
add
cmpsb
pusha
mov
or
push
sub
xchg
add
mov
fwait
out
adc
fsts
cmpsl
jne
or
mov
into
dec
aaa
test
push
dec
adc
xor
mov
adc
test
cli
data16
outsl
test
popf
or
xchg
repnz
outsb
mov
in
dec
or
dec
push
adc
ret
pop
insb
xor
mov
xchg
ds
das
sbb
cltd
movsl
xor
into
adc
addr16
cmpsl
sbb
rorb
inc
jmp
xor
fcmovnb
dec
mov
fcompl
pusha
and
pop
jg
mov
imul
pop
mov
pop
clc
sbb
add
out
jl
orb
mov
cmpsl
inc
mov
jns
sub
xor
gs
clc
xor
incb
aad
lcall
aaa
call
push
mov
push
arpl
std
out
es
mov
fidivrs
sti
mov
or
or
xchg
ret
movsl
testb
push
jg
mov
subl
ss
mov
shll
fisttps
mov
cmp
mov
inc
xchg
xor
vcmpngtsd
enter
push
jo
daa
incl
inc
cmp
mov
icebp
fstpt
mov
adc
and
test
mov
cmp
jb
mov
pushf
movsl
roll
adc
dec
or
stos
dec
or
or
push
bound
shlb
or
shll
mov
repnz
xor
mov
iret
xchg
loope
xor
mov
add
imul
mov
ljmp
cmpsb
adc
dec
push
and
bound
insl
fsubl
pop
in
and
adc
cwtl
sahf
pop
pop
push
or
jg
lret
aas
les
shlb
xchg
and
shrl
mov
cli
rcll
sti
mov
xchg
ret
lods
bound
sub
jp
adc
rclb
movsl
cld
shlb
and
adc
nop
adc
and
int
sub
shlb
inc
icebp
pop
pop
sub
or
cmp
jno
and
mov
daa
sahf
sahf
mov
mov
in
inc
orl
lahf
jae
call
in
cmp
fwait
pop
sahf
enter
sbb
and
std
mov
add
daa
in
gs
jg
jbe
xor
sub
add
mov
mov
sub
mov
ds
xlat
pop
ds
push
test
cld
mov
pop
mov
push
or
pop
es
mov
lcall
xorl
sub
aaa
adc
mov
mov
or
jo
add
inc
fs
fcmovu
mov
mov
iret
decl
mov
andl
divb
into
push
stc
or
das
inc
mov
daa
push
mov
push
dec
push
jae
cs
movsb
inc
lcall
pop
stos
shl
mov
jecxz
jge
cld
xchg
repz
xorl
inc
les
push
dec
iret
outsl
pop
dec
rcrb
push
fisttpl
mov
or
mov
fldcw
scas
or
pop
dec
leave
daa
mov
cmp
dec
ljmp
stos
aas
add
aam
mov
cmp
inc
xchg
dec
or
sub
mov
push
pop
dec
in
xchg
cli
dec
jp
out
inc
add
pop
int3
sbb
jns
xlat
pop
sbbl
inc
loop
sub
int
sbb
loop
repz
mov
mov
lea
popf
outsb
cli
je
lahf
rclb
mov
cmp
shrb
bound
push
mov
rcll
popa
mov
out
sbb
inc
mov
jle
jp
mov
adc
adc
int
push
cmpsl
inc
call
test
sbb
aad
mov
movsl
mov
adc
mov
sbbb
sub
cmp
cmp
dec
push
add
xchg
sbb
xlat
pop
mov
mov
sahf
daa
push
lahf
fnstenv
fistps
jo
arpl
fwait
xchg
add
mov
inc
imul
rclb
inc
das
mov
addb
shlb
ret
add
dec
repz
sbb
enter
iret
fchs
mov
jp
imul
inc
mov
test
es
or
sbb
jge
add
pop
ds
sub
inc
jl
xchg
movsl
pop
hlt
sbb
loopne
pop
push
mov
lods
gs
cmp
dec
mov
out
dec
adc
xchg
loopne
shl
push
int
ret
hlt
popa
aas
cs
insb
sbb
jle
fisubs
sbb
xchg
jmp
push
lret
mov
dec
fs
push
jmp
je
pop
xor
stos
daa
push
dec
mov
dec
sbb
rcrl
sbb
outsl
adcb
push
push
and
out
les
imul
push
cmp
sarl
test
mov
inc
iret
sub
std
push
sbb
xchg
lcall
loope
rcll
adc
ss
inc
and
daa
cmpsb
adc
dec
pop
xchg
mov
in
imull
mov
outsl
pop
scas
inc
sbb
into
out
jecxz
jl
loop
daa
adc
pop
inc
rol
out
fsubrs
decl
jl
jo
js
ja
dec
shll
adc
jno
shl
pop
xor
mov
cmp
dec
lea
fiaddl
push
sub
adc
scas
xchg
rcll
mov
ljmp
cmp
pop
xchg
inc
mov
mov
dec
stos
call
xchg
jle
lret
pop
outsl
rcl
pop
outsl
or
sub
idivl
adc
iret
cs
aas
call
add
push
dec
rclb
rsqrtps
imul
sti
sahf
and
xor
mov
cmp
sub
push
inc
mov
xor
mov
mov
fdivs
ja
dec
pushl
pop
push
mov
add
pushf
stc
into
inc
and
add
and
call
dec
mov
xchg
inc
inc
loopne
das
cwtl
dec
mov
lods
push
stos
push
shl
rcll
push
dec
aad
add
xsha256
cmpsb
aam
in
push
jno
in
jge
int3
test
test
push
loope
lods
push
lahf
adc
out
popaw
adc
mov
or
xchg
bound
xlat
js
mov
adc
jg
cmp
cltd
mov
ficoms
in
rolb
movsl
or
sub
adc
mov
add
or
test
iret
mov
subl
or
jb
pop
inc
cmpl
imul
vmovupd
inc
jo
pop
fldt
nop
xchg
into
outsl
dec
outsl
mov
call
jno
call
outsb
push
pop
adcb
bswap
out
sbbb
pop
dec
or
cli
hlt
xchg
aaa
or
cmp
sbb
test
scas
cs
mov
adc
add
xchg
mov
mov
or
push
ret
cmp
sbb
imul
mov
ljmp
aad
pop
mov
pop
fstp
mov
shll
dec
mov
pop
jns
fnclex
add
adc
rol
test
mov
adc
les
mov
and
adcb
sub
ret
lret
cli
cmp
adc
cs
mov
repz
movsl
sub
xchg
sbb
inc
lcall
adc
icebp
adc
loop
lcall
add
fiadds
or
roll
dec
shrl
cmc
xor
push
lcall
pusha
imul
xchg
sub
sub
cli
and
adc
xchg
jl
pushf
imul
lcall
hlt
icebp
jbe
mov
lahf
mov
xor
push
inc
add
pop
dec
sbb
adc
rorb
xchg
loop
sbb
mulb
int
push
aaa
je
push
imul
mov
int3
outsb
stos
into
xor
inc
sbb
dec
movsb
lret
sub
jne
icebp
cli
in
push
push
xchg
stc
inc
mov
shr
fcmovu
xchg
dec
insb
sub
cs
ret
ss
arpl
inc
mov
xchg
aam
push
cli
mov
ret
insb
popf
adc
sbb
movsb
xchg
lds
inc
aas
mov
push
enter
inc
mov
jae
leave
mov
add
and
je
daa
adc
dec
dec
stc
dec
jae
iret
push
sub
lock
cmovl
push
cmp
sub
adc
mov
decl
sbb
out
xchg
in
subl
fdivrl
dec
cltd
sbb
daa
mov
fdivs
xor
negl
mov
sub
ja
into
out
mov
shll
mov
iret
popf
and
mov
inc
mov
pop
es
inc
sub
out
dec
cld
in
fcomps
push
add
push
push
addr16
inc
push
push
loopne
mov
sbb
mov
sbb
cmp
jbe
mov
ficoml
movsl
roll
in
adc
loop
cld
in
fwait
xchg
add
or
js
in
rcl
es
incl
dec
jne
in
fdivl
push
pop
stc
sub
or
push
xor
sbb
xchg
stos
inc
iret
aam
mov
pop
mov
mov
pop
add
pop
into
out
jnp
testb
fyl2xp1
nop
ss
stos
ficomps
in
xchg
xlat
mov
mov
xchg
fdiv
aam
push
inc
pop
dec
mov
outsl
sub
push
std
and
das
sub
data16
mov
daa
sbb
add
fadds
in
pop
adc
sub
mov
mov
dec
pop
push
mov
cmc
in
push
cmp
leave
movsb
pop
popa
ja
cmp
inc
ss
popf
push
data16
repz
fildl
xchg
cli
cmpsb
push
pop
and
mov
jmp
les
lea
pop
adcb
cmp
adc
cwtl
sub
dec
cmp
xchg
lcall
jp
mov
mov
push
add
push
mov
xor
cmp
cmpsl
jbe
test
cwtl
dec
push
push
mov
adc
ret
pop
xchg
inc
es
enter
stos
lods
fnstenv
inc
mov
sub
sub
std
decb
pop
push
mov
xchg
and
popf
fwait
mov
cli
data16
jae
lds
xchg
dec
test
jl
push
stos
add
nop
mov
cwtl
adc
movd
sub
ss
or
jne
push
stc
sets
add
iret
push
mov
sub
sub
das
inc
js
push
lret
ret
sbb
mov
int
aaa
cmp
or
inc
nop
and
enter
in
fdivl
inc
sbb
inc
xor
and
lea
sbb
push
test
imul
xchg
pop
arpl
mov
repnz
and
xchg
bound
out
popa
shll
mov
std
in
lret
loop
iret
mov
imul
jnp
rorl
mov
in
les
adcb
sub
dec
sti
jl
mov
cmp
hlt
sbb
jnp
dec
sub
dec
push
rcl
test
mov
pop
sub
ret
int
and
add
sub
les
sbb
lcall
test
xorl
sbb
decb
jne
xor
dec
test
jnp
xchg
movsb
dec
outsb
outsl
xchg
mov
sbb
mov
dec
mov
lret
xor
test
adc
mov
sbb
fs
and
mov
dec
xchg
loopne
mov
or
scas
sub
mov
stos
shlb
dec
xchg
mov
lea
aaa
lods
pop
inc
repz
jnp
mov
sub
movsb
push
jae
xchg
jp
jns
push
std
sub
fistl
mov
cmp
rcr
mov
pop
bound
mov
push
sbb
imul
jns
mov
sub
cmc
testb
mov
lea
jle
loopne
orl
mov
rclb
and
fbstp
or
in
pop
jbe
or
fsubrl
jae
loop
pop
cli
push
gs
hlt
or
lods
xchg
rcrl
and
pop
dec
add
out
or
dec
pop
fldenv
jno
imul
out
andl
mov
fcmove
cli
dec
lods
xchg
sub
movsl
lock
and
int
add
push
shll
xor
xor
popa
clc
outsb
cwtl
pop
lods
cmp
mov
mov
scas
int3
icebp
shrl
xchg
fsubrs
lret
mov
jb
arpl
inc
and
pop
jo
inc
xor
rclb
mov
lcall
mov
aas
popa
pop
inc
or
loopne
stos
std
addr16
cld
xchg
shrb
stc
cmpsl
dec
mov
cmc
add
ja
and
shr
les
out
mov
inc
adc
movsb
clc
movsl
shlb
movsl
push
ljmp
adc
pop
and
mov
ljmp
ss
adc
pop
xchg
rorb
std
popf
mov
push
mov
hlt
sub
outsl
adc
inc
addb
inc
das
out
adc
into
sub
inc
int3
or
sub
mov
or
mov
rcrl
push
xor
add
sub
mov
add
lock
gs
sbb
mov
nop
stos
ljmp
ffreep
pop
fiadds
bswap
mov
sub
scas
jecxz
xor
xlat
dec
xor
push
mov
mov
movsb
fisubl
sti
cmp
cmpsl
cmp
sub
in
pusha
out
pop
and
or
dec
call
push
stos
add
or
das
adc
test
fcomps
je
insl
jg
cli
scas
cmp
les
fiaddl
je
shll
or
stos
in
test
mov
dec
ljmp
xlat
pop
cltd
dec
cmpsl
lods
and
add
cmp
or
dec
shr
sahf
xchg
mov
std
push
or
sub
mov
xor
and
wbinvd
xchg
arpl
sub
test
xor
xchg
xor
mov
cmpsb
out
mov
movsl
loope
sbb
cmp
repz
sub
arpl
push
cmp
mov
std
insl
loope
push
rorl
mov
mov
shr
repnz
mov
push
or
lea
mov
and
ja
outsl
cmp
sbb
dec
clc
or
lods
test
dec
out
mov
sbb
mov
mov
sub
mov
push
mov
dec
add
add
sbb
adc
dec
jmp
jecxz
sub
jb
sbb
jge
cmpl
push
mov
js
fdiv
fwait
pop
test
lds
mov
test
popf
push
push
jmp
xor
lods
insl
test
xchg
inc
test
inc
jae
mov
dec
mov
mov
jmp
sub
fidivrs
scas
and
mov
es
mov
inc
dec
sbb
mov
orps
mov
sbb
xchg
test
lods
add
movsl
test
scas
gs
mov
fs
ret
sub
outsl
ljmp
push
loop
dec
repz
js
ret
xor
iret
xchg
cmp
mov
mov
pusha
loop
mov
test
jno
push
adc
gs
pop
jecxz
mov
xor
mov
scas
jl
mulb
out
jns
mov
sbb
outsl
inc
xchg
xlat
mov
rcrb
sbb
mov
outsb
pop
fwait
loopne
shll
shlb
scas
lods
je
dec
add
pop
in
jp
xchg
dec
cmp
scas
cmp
xor
hlt
sub
mov
insb
daa
push
xchg
bound
jnp
frstor
jae
fnclex
mov
das
xchg
stos
cmp
fldenv
xor
test
outsl
out
mov
xlat
mov
rolb
out
iret
inc
insb
js
mov
hlt
mov
and
push
jle
clc
mov
push
out
popl
inc
sub
push
xor
loopne
mov
mov
cmp
mov
pop
jle
outsl
sarl
popf
dec
mov
insl
fdivrs
outsb
filds
push
cmp
sbb
push
int
ret
or
jp
push
in
push
orl
adc
or
test
imul
inc
stos
ja
add
loop
jmp
push
sbb
aad
xchg
adc
xor
cmp
or
fwait
pusha
or
lahf
xor
scas
das
int
xchg
push
mov
push
lds
add
ret
outsl
mov
xor
loop
xor
dec
push
and
jnp
cmp
test
mov
mov
sbb
mov
js
stos
mov
mov
mov
addr16
mov
sahf
jecxz
add
icebp
iret
adc
sub
pop
loop
or
in
incl
arpl
enter
dec
add
sub
pop
xchg
push
addl
dec
cli
push
aam
sub
add
lods
neg
test
into
orb
js
or
scas
add
cltd
adc
mov
cwtl
mov
pop
mov
mov
scas
stos
bound
dec
popa
jo
push
js
aas
mov
push
and
pop
rcr
jns
dec
sub
xchg
jmp
call
in
sbb
add
mov
sub
and
and
fsubr
add
xchg
add
ja
pop
movsl
mov
dec
xor
xchg
add
xor
shlb
mov
test
jns
dec
mov
int
sbb
cmp
mov
add
ret
pop
mov
and
xchg
mov
insb
mov
xor
mov
pop
pop
jb
push
inc
fimull
das
into
lods
cli
sub
sbb
cmp
sbb
enter
push
imul
push
pushf
cmp
dec
sub
fcomi
xlat
dec
popf
test
and
jb
jnp
mov
inc
mov
xor
and
dec
daa
mov
rcll
mov
loop
fisttps
leave
mov
int
fcmovbe
fdivrs
popa
xor
enter
out
pop
shrl
scas
cmp
sub
test
sub
sub
clc
mov
ljmp
cld
test
jae
out
xor
popa
aad
cmpb
push
jge
or
pop
dec
dec
cmp
mov
nop
iret
ljmp
add
push
outsl
movsb
push
dec
sahf
lcall
lret
pusha
stos
rolb
adcb
xchg
aaa
loope
call
jle
cmp
adc
out
push
pop
xchg
std
cmp
out
leave
xchg
dec
mov
push
or
sub
or
or
dec
fistps
xchg
andb
data16
ja
scas
out
lahf
repnz
xorb
mov
pop
sub
or
dec
push
inc
and
out
jae
pushf
ljmp
dec
test
sbb
xor
cwtl
adc
and
mov
dec
xchg
add
stc
xchg
pop
sub
jnp
inc
adc
out
mov
push
pop
repnz
jmp
sbb
sbb
int
insl
jne
ret
xchg
ljmp
add
ljmp
icebp
sbb
jno
jb
mull
pop
test
or
dec
icebp
out
out
mov
es
setb
jecxz
insl
pop
lea
insb
add
push
mov
xor
pop
dec
push
push
jmp
bound
pop
imul
mov
mov
push
pusha
pop
fwait
dec
fwait
ds
ljmp
dec
sub
lock
xchg
in
addr16
pop
xchg
jb
outsb
loopne,pn
cmp
fs
repz
int
out
sbb
lods
into
test
int
sub
pop
dec
lahf
push
inc
and
cmp
xor
jg
jne
xchg
mov
push
incl
fstps
and
andb
inc
rclb
inc
mov
cmp
xor
in
dec
dec
mov
push
adc
jb
jne
push
std
repz
sbb
xchg
jecxz
push
and
mov
add
cmp
push
dec
sub
insb
mov
pop
rorb
pop
inc
dec
and
mov
mov
pushf
xchg
shll
movsb
std
xchg
fldln2
jle
push
or
mov
and
fcompl
push
dec
pushl
mov
xchg
movsl
in
and
test
xor
jp
mov
mull
push
fstps
les
inc
rorb
insl
test
leave
mov
repz
in
cmp
pop
mov
jae
ret
jp
inc
jle
jb
dec
shll
push
popf
dec
cld
insl
stos
sub
int
dec
sbb
add
mov
imul
xchg
cmp
and
dec
mov
ret
test
repz
ret
ja
imulb
and
fdivr
dec
fcoml
push
ffree
mov
push
fs
jecxz
or
outsb
ss
cld
mov
jecxz
mov
daa
in
cs
xor
cmp
loopne
xor
add
clc
icebp
jl
ret
lret
xchg
sahf
pop
cmp
add
in
sahf
fwait
jg
iret
leave
pop
add
lea
test
mov
jle
or
stc
xor
insb
insl
pop
lahf
lahf
faddp
addr16
movsl
jp
fdivrs
adc
testl
add
cli
pop
psubb
jns
aam
push
sahf
fcoms
push
loop
push
aaa
lock
lods
orl
add
xor
mov
jne
sub
iret
pop
mov
push
out
aam
push
sbb
pusha
sarl
cld
iret
or
mov
je
push
scas
or
inc
adc
lcall
xor
pusha
jmp
sub
sbb
cmpsb
daa
lret
jbe
xchg
es
stc
add
mov
or
dec
push
addr16
mov
decl
pushf
dec
mov
xor
repz
jae
int
scas
jecxz
shrl
ds
xchg
xorl
ss
pop
xchg
jl
mov
loope
sub
insl
fisttpl
jp
push
andb
aaa
sub
ljmp
lret
pop
imulb
fmull
fsubrp
stos
adc
sbb
adc
mov
aad
mov
jecxz
and
fxch
lods
fs
ljmp
fistpl
test
popf
mov
pop
ret
xorl
mov
add
icebp
stos
and
mov
bound
ss
or
lods
int3
or
popa
jbe
hlt
aaa
sarl
push
outsl
jge
jne
mov
in
add
and
out
sbb
push
fnsave
jo
jmp
es
flds
sbb
jae
push
jp
jl
sub
mov
lea
jle
jbe
shrd
jne
inc
pop
sub
scas
mov
add
xchg
sbb
jle
mov
sub
insb
cpuid
in
aas
push
inc
movsb
sti
dec
pop
cmpsl
jb
xchg
clc
orb
push
jmp
sub
push
stos
lock
add
cmpl
mov
ja,pn
arpl
mov
sub
sub
push
lret
fisttpll
call
add
nop
xchg
inc
dec
test
fmuls
sbb
ja
je
mul
pushf
scas
pop
in
pop
out
cmc
push
sub
outsb
cmp
mov
mov
test
cltd
pop
pop
imul
fists
gs
cmp
dec
fiadds
add
outsl
jb
popf
mov
pop
xchg
cmp
pmullw
arpl
xchg
mov
dec
fdivrs
jle
in
int3
cltd
mov
mov
lret
adc
into
bound
mov
imul
cli
int3
shll
sub
rcrl
mov
test
xor
ja
pop
adc
aam
sbb
xor
adc
xor
push
stos
adc
fstps
rolb
lcall
in
lahf
fwait
mov
sub
add
push
or
pop
push
and
loopne
inc
jb
xchg
mov
fisubrs
fldl
cmp
cmc
sahf
fwait
sub
pusha
clc
sub
sub
cmp
icebp
in
hlt
dec
out
inc
pushl
lock
addr16
adc
pop
js
ljmp
xor
jp
add
mov
mov
iret
xchg
and
dec
in
push
cmpsl
push
cmp
inc
jae
or
insl
xor
xchg
xor
mov
out
ds
les
mov
xchg
sbb
call
sbb
cmp
call
cli
mov
adc
cmpsb
pop
push
sbb
clc
out
into
popa
movsl
bound
or
cwtl
cmp
xchg
inc
push
fildll
jle
icebp
push
movsl
ss
and
and
adc
xchg
mov
ds
add
push
push
pop
jp
cmp
mov
outsl
ficoml
lcall
andl
push
mov
mov
int
fcmovnb
push
jnp,pn
hlt
mov
and
lods
stos
popf
sbb
add
dec
addb
cmp
cwtl
stc
hlt
gs
shll
xchg
adcb
jnp
mov
inc
or
int
imul
mov
pop
rcrb
push
pop
xchg
adc
clc
in
loopne
leave
sbb
mov
or
or
mov
cs
mov
pop
jmp
pop
adc
je
mov
xchg
cmpb
testl
xchg
dec
or
mov
js
cs
mov
mov
xor
mov
daa
lock
dec
jmp
rorb
push
push
fildl
jecxz
sbb
sahf
cmp
adc
fiaddl
ror
jne
stos
rcll
mov
out
dec
stos
adc
add
cmp
imul
bound
repz
push
inc
andb
aas
ss
cmp
scas
jle
ljmp
jge
mov
loopne
aas
inc
je
inc
pop
xor
add
mov
push
int3
fnstenv
or
into
test
mov
idivb
test
sbb
fmuls
into
daa
pop
or
lret
out
sub
push
lods
insl
push
test
sub
pop
frstor
js
ret
push
out
add
call
outsl
xchg
xchg
jbe
in
bound
inc
imul
mov
pop
mov
mov
adc
mov
inc
dec
xchg
jnp
jg
dec
mov
sbb
or
jae
sar
pop
inc
fisttpll
jo
inc
imul
imul
dec
cld
out
int
jbe
jle
push
fs
push
inc
mov
ret
repnz
rcrb
add
pop
add
jmp
movsb
pop
and
mov
lret
adc
int
stc
data16
jl
xchg
jg
xchg
sahf
dec
ds
jnp
jmp
mov
xchg
sbb
or
xchg
cli
pop
pushf
fsub
cmp
ljmp
mov
mov
aas
aad
adc
mov
loop,pn
daa
or
out
sub
hlt
inc
in
mov
popf
leave
adc
decb
scas
pushf
fstl
js
xchg
loope
pop
inc
adc
ret
or
and
aad
jb
jl
testl
add
outsb
mov
int3
enter
pop
cwtl
jl
mov
cmpsb
stos
sarb
xor
push
push
adc
mov
into
add
adc
into
aad
dec
mov
jp
fisttps
or
aaa
adc
cmpsb
movsb
pusha
adc
dec
mov
mov
sub
dec
mov
dec
dec
sub
jno
aad
in
fs
and
loop
sar
jp
adc
push
cmpsl
xchg
hlt
cmp
and
mov
mov
repnz
hlt
sbb
sbb
jbe
pop
pop
mov
lock
dec
cmpsl
clc
into
sub
sarb
aam
cmp
pushf
jle
mov
jbe
lret
xlat
mov
lahf
aaa
fdivrs
push
dec
lods
bound
dec
nop
xor
mov
and
pop
push
ja
test
mov
js
in
mov
mov
push
xchg
adc
inc
cmp
pop
mov
add
sarl
xchg
cld
js
mov
mov
cltd
ficoml
mov
ja
rcll
out
cmc
rclb
xchg
pop
mov
sub
testb
orl
in
xlat
and
sub
xchg
xor
fsubl
fisubrl
out
outsb
lahf
dec
mov
ret
push
sub
clc
cmp
test
cmp
jnp
add
int
xor
jp
xor
mov
sbb
incb
xorb
xor
in
cmp
lods
fldenv
cmp
jnp
push
pushl
movsl
mov
mov
fwait
cltd
popf
pop
imul
subb
inc
xor
into
sqrtps
fisubrs
fbstp
sub
out
jo
fdivrl
mov
lea
sti
test
push
push
test
sbb
push
adc
cmp
inc
enter
mov
adc
pop
jo
dec
and
sub
sbb
mov
loopne
loop
leave
dec
pop
in
incl
inc
xchg
xor
fstl
xchg
scas
cmp
mov
je
icebp
addr16
cmc
scas
xchg
add
pop
call
mov
scas
pop
stos
sub
repz
and
push
outsb
insb
test
jb
cwtl
int
xchg
lahf
jp
lahf
mov
iret
mov
stos
addl
in
pop
inc
pop
lds
mov
mov
clc
outsl
mov
and
rcrb
cwtl
mov
lret
cmp
cltd
jge
out
lret
pusha
call
jmp
mov
push
add
subl
xchg
stos
bound
sub
fisubrl
imul
mov
cmp
je
push
jmp
jge
cmp
push
std
ds
push
inc
jns
jle
outsb
adc
jle
out
mov
mov
jp
or
fstl
pushf
jbe
lcall
int
out
xor
inc
pop
mov
mov
jbe
cmpsl
mov
ret
js
lods
and
scas
rcll
lock
mov
sbb
mov
arpl
sub
mov
mov
add
mov
pop
mov
mov
jecxz
divb
or
in
mov
mov
add
pop
cld
adc
mov
movl
sahf
pop
addl
and
ds
shr
adc
jno
push
push
xor
cmpsb
cmp
sbb
jns
sbb
jge
jo
and
xchg
push
imul
adc
mov
xor
xchg
dec
sub
cli
gs
or
outsl
imul
fdivrl
addb
jns
loope
xor
jg
fnstenv
js
insl
mov
push
movsl
add
gs
movq
mov
aam
nop
push
xchg
xlat
enter
mov
push
dec
push
insb
aam
sar
xorl
jae
mov
repz
int3
repz
push
imul
ja
push
mov
outsb
arpl
mov
loop
adc
inc
bound
shr
cmp
mov
rolb
int3
pop
into
cmp
push
pop
sahf
fisttpl
mov
cmpsl
lahf
cmp
lret
stc
and
loope
or
add
jl
popf
jbe
lock
jo
rcll
sahf
test
loopne
jns
and
or
mov
js
jmp
jbe
cmp
mov
add
into
adc
clc
call
adc
or
shll
mov
popf
cmpb
jno
ret
mov
movlps
data16
dec
and
test
stos
iret
les
jae
or
ljmp
sub
aaa
mov
movsb
aam
xchg
pop
dec
jnp
and
xor
sub
sbb
xchg
jns
jg
push
mov
test
lahf
add
idiv
test
test
mov
sbb
pop
popa
lret
test
pop
outsl
dec
jl
add
mov
push
xor
sbb
jge
pop
xchg
jg
jo
xor
mov
mov
sub
mov
pop
mov
in
js
push
test
popf
mov
sub
inc
js
shlb
add
inc
mov
pop
icebp
insl
pop
lret
fmuls
sar
sbb
pop
test
xor
jae
mov
xchg
cwtl
mov
cmp
inc
mov
mov
push
lods
mov
push
xor
mov
aad
pop
adc
cli
pop
imul
mov
aaa
aam
insl
pop
test
push
std
push
rcr
sbb
push
test
jb
je
ret
pop
and
dec
and
insl
ret
mov
dec
mov
enter
lret
je
push
les
sbb
dec
add
adc
sbb
insl
cmpsb
mov
sahf
mov
bound
cld
shlb
xor
test
into
push
push
test
push
sbb
iret
stos
dec
jo
xor
je
xchg
xchg
jae
pusha
test
loop
cs
push
xor
sti
inc
imul
sub
jnp
mov
sbb
or
sub
mov
push
leave
jmp
add
pop
mov
pushf
add
hlt
pop
sbb
fiaddl
xchg
pop
mov
sahf
repnz
jmp
ja
lods
andl
movsl
scas
cmpsl
lcall
cmpsl
hlt
ds
cmp
mov
into
cmpsb
xchg
out
adc
aad
rolb
fisttpll
mov
ficoml
fcoms
jecxz
rolb
jae
lahf
icebp
sbb
sub
hlt
add
cmp
adc
pop
mov
and
fsubr
mov
mov
sub
enter
out
jne
xor
lcall
call
mov
mov
pop
popf
pop
push
xor
imul
inc
or
das
push
xchg
dec
lds
movsl
push
imul
cli
push
outsl
aad
inc
sbb
xchg
rcll
add
imulb
mov
fwait
push
push
pop
cmp
xchg
mov
xchg
ljmp
arpl
push
dec
lret
ljmp
pop
fcoml
ret
fcoml
dec
xchg
mov
pop
xor
jmp
ret
dec
mov
push
mov
and
addr16
adc
add
pop
xor
sub
lea
dec
shl
sbb
adc
sbb
scas
pop
pop
mov
inc
sbb
push
out
push
sbb
jl
mov
dec
test
mov
sbb
cmp
into
popl
cmp
dec
sbb
add
aam
jno
adc
sub
rorb
cmpsl
sete
xchg
sti
out
push
lea
test
pop
pop
lahf
xor
stos
sub
into
ficompl
scas
idivb
xchg
incb
pushf
out
movsb
test
call
sbb
fadds
add
jg
add
mov
sub
fdivr
cmpsl
mov
dec
lock
push
mov
mov
icebp
mov
in
sub
push
lret
mov
jae
enter
es
mov
or
rorb
int3
movl
cld
mov
subb
mov
pop
dec
imul
adc
jecxz
and
lcall
sub
xchg
fcompl
scas
pop
mov
stos
test
xchg
sbb
xchg
in
cmp
pop
sahf
test
jae
dec
sbb
or
out
mov
adc
out
mov
in
lods
or
adc
push
xchg
xchg
or
mov
in
mov
outsl
lret
imul
sbbl
sti
mov
dec
fwait
mov
and
mov
insb
test
mov
dec
sbb
jmp
pusha
enter
cmpsb
adc
int3
aaa
lcall
lret
inc
and
or
and
mov
mov
ret
add
mov
mov
pop
jle,pn
jns
xor
fisubl
ljmp
sbb
lods
rorb
in
fiadds
jo
les
dec
rcrl
and
ja
test
stos
icebp
ret
int
std
out
int
sub
dec
push
xchg
mov
pop
addr16
mov
cmpsl
test
jecxz
icebp
push
mov
sub
dec
xor
stos
call
cmp
dec
loop
rcll
int3
in
dec
mov
push
mov
jns
int
xchg
je
cmp
mov
inc
pop
bound
push
outsb
es
rol
orl
or
adc
sti
sbb
inc
jl
xor
ja
xor
xchg
sti
or
cmovp
and
jge
inc
adcl
loope
add
dec
das
push
push
inc
mov
stc
inc
sbb
fistps
pop
xlat
xchg
cltd
mov
xchg
push
outsb
lods
into
push
inc
and
mov
add
mov
push
mov
aam
int
or
and
lock
pop
xchg
or
sub
aas
push
call
out
addl
lcall
mov
mov
push
cwtl
pop
mov
push
mov
add
xor
or
mov
xchg
jne
sbb
xlat
mov
icebp
loope
and
adc
or
pop
push
fdivs
cltd
ss
das
ss
xlat
mov
mov
push
and
in
repnz
jne
pop
jp
mov
daa
pushf
inc
or
fisubrl
jmp
dec
out
sub
imul
aam
roll
inc
jne
mov
or
lahf
pusha
or
aad
xor
mov
xchg
push
orl
scas
lea
popf
sbb
subb
xchg
add
pop
inc
nop
or
adc
pop
popa
xchg
push
scas
cli
cld
movsb
out
dec
and
mov
rol
add
int3
pop
jle
push
mov
call
loop
mov
das
xchg
clc
int
or
mov
mov
adc
insl
scas
xor
enter
out
jne
dec
lcall
rolb
ja
std
fwait
sahf
mov
fistpl
imul
mov
mov
ss
inc
test
cmc
dec
mov
adc
sbb
or
inc
jle
add
xchg
jns
cmp
mov
cli
faddp
imul
push
int
sbb
aas
jns
adc
inc
call
cmpsb
xchg
shrb
jae
int3
sbb
mov
sub
cmp
push
repz
mov
ret
les
jb
insl
mov
mov
jmp
mov
dec
push
xchg
adc
int3
loope
mov
adc
insb
dec
stc
sti
sub
nop
ret
and
ror
rclb
xor
faddp
js
mov
mov
inc
roll
popf
push
and
daa
mov
adc
sbb
push
insb
jne
rcrb
push
fistpll
jns
add
mov
inc
and
dec
push
jecxz
jb
sub
test
loopne
test
push
fs
shlb
adc
in
jg
cmc
lcall
dec
inc
jmp
arpl
leave
push
inc
cmpsb
hlt
pop
jl
push
mov
sbb
jne
das
and
shrl
test
lods
hlt
xor
push
xor
push
inc
cmp
stos
arpl
add
iret
jg
push
dec
jmp
imul
test
nop
inc
and
int3
push
lret
das
fsub
lock
sub
xchg
fbstp
pop
xor
jns
cmp
mov
xlat
lods
iret
add
loopne
mov
test
loopne
cmp
fwait
xor
mov
cmp
les
lahf
and
jnp
jl
adc
clc
push
mov
pop
cmp
frstor
push
divb
inc
add
jne
andl
xchg
test
stc
and
pop
sbb
scas
sub
and
dec
push
push
imul
lods
addl
cmp
pop
adc
inc
mov
clc
mov
pop
mov
jecxz
popa
mov
aad
mov
repnz
dec
push
in
mov
mov
fstp
fcoms
push
fwait
jb
mov
idivb
sahf
subl
xor
test
ss
and
int
fs
mov
inc
lea
loope
and
ret
in
ss
sahf
scas
fs
dec
jns
gs
push
adc
and
or
aaa
jl
jb
jnp
test
sbb
jecxz
popf
scas
lods
popa
addr16
sahf
cmp
dec
pop
mov
lods
mov
or
lods
jp
dec
push
and
lods
mov
sub
js
mov
cld
adc
les
cmp
iret
and
jl
aas
cmpb
rclb
pop
divb
sub
addr16
push
cmp
mov
insl
sbb
mov
loope
xlat
push
std
outsl
sarl
lods
or
pop
mov
dec
pop
and
lock
sahf
stos
test
xchg
in
imul
roll
mov
je
clc
mov
push
dec
out
push
loopne
push
pop
inc
ret
pop
inc
adcb
cld
popl
mov
mov
cmp
iret
sahf
cld
shlb
jae
addl
pop
pop
movsl
or
push
shl
sub
ret
es
sbb
shll
cltd
mov
lds
lcall
push
or
test
adc
loopne
jmp
fs
inc
int3
imul
in
dec
pusha
out
pop
adc
xor
or
jp
jae
inc
frstor
rorl
lret
sub
into
xchg
in
test
movsl
mov
out
fwait
xchg
and
push
out
mov
xchg
lret
mov
addr16
in
mov
add
mov
sbb
icebp
roll
push
cli
mov
aas
add
cmpl
mov
jecxz
in
pop
sbb
push
or
adc
int
dec
das
dec
sti
mov
inc
fstl
pop
enter
cli
and
cmpsb
dec
adc
lret
mov
sbb
dec
rolb
xchg
jl
mov
cmp
mov
cmp
push
jb
mov
movsb
adc
imul
push
jl
jl
mov
fisubs
leave
cmp
and
popf
psrld
jg
adc
cmp
xor
push
test
xor
mov
out
mov
xor
push
sbb
jb
sbb
dec
rorl
pop
test
insl
dec
inc
mov
ds
scas
inc
lock
and
jmp
and
cwtl
outsb
in
scas
das
xor
and
dec
jns
push
or
pop
mov
cmp
push
call
ret
xchg
mov
call
in
or
dec
fsubrl
mov
mov
inc
mov
cs
xor
andl
insb
fldenv
cld
jp
jae
push
shrb
push
or
fldt
mov
std
push
push
stos
sahf
in
and
mov
cmpsb
pushf
das
jmp
dec
dec
xor
xor
into
int3
out
mov
mov
push
dec
jnp
mov
mov
fstpt
cwtl
xchg
pusha
pop
nop
out
or
pop
ficoml
mov
lock
imul
and
xchg
dec
dec
mov
movsl
test
bound
xchg
or
insb
sbb
push
movsl
loope
outsb
sbb
and
xchg
or
aam
xchg
jg
push
xchg
pop
test
jmp
mov
in
xor
hlt
movsl
ja
addr16
xor
ret
fildll
das
in
adcl
mov
fiaddl
inc
pop
enter
jg
ss
imul
xchg
xchg
pop
ds
sbb
add
dec
cmc
mov
xlat
lock
sub
jmp
mov
cmp
stc
push
sar
or
jo
mul
leave
lock
mov
lahf
jno
jbe
fisubrs
xor
pushf
mov
mov
iret
sub
das
pop
leave
pop
cli
gs
jbe
mov
into
call
adcb
mov
sub
or
scas
pop
xchg
push
sbb
cld
mov
in
push
adc
jecxz
mov
mov
or
jg
rol
jae
icebp
lds
sub
stos
int3
fwait
inc
scas
add
out
mov
rcll
jp
into
xor
in
out
js
mov
mov
mov
xchg
mov
xor
sub
movb
cmp
icebp
ds
add
js
mov
rolb
inc
repz
mov
sbbb
xchg
cli
subl
push
push
in
adc
sbb
pusha
fmulp
shrb
cmc
loope
sbb
ss
ds
cwtl
xor
adc
push
and
push
adc
rolb
xor
lahf
mov
xor
push
mov
dec
stos
loop
or
xor
cwtl
mov
aam
push
ljmp
loope
sbb
mov
je
mov
sub
fcmovne
mov
ret
pop
imul
push
daa
bnd
into
push
je
mov
jl
pop
lret
test
adc
add
and
sahf
xchg
in
loopne
in
insl
jno
cmc
test
pusha
movsb
inc
pop
ds
lret
sbb
rorb
pop
jbe
int3
inc
mov
clc
int
loopne
inc
in
stos
je
sarb
ljmp
lret
xchg
cmp
or
push
fbstp
inc
cli
js
in
inc
int3
sbb
and
and
dec
push
xchg
mov
sub
pop
pop
ja
sub
pop
xlat
and
shufps
mov
loopne
adc
xchg
cmp
adc
mov
outsb
icebp
mov
or
jnp
push
outsl
ljmp
int3
mov
fdivrs
mov
pop
mov
pop
nop
test
cmp
aam
js
mov
and
aad
or
mov
mov
lea
in
shlb
add
rcrb
in
andb
sbb
jp
fs
rcrl
mov
jae
lods
shlb
popf
in
pop
jmp
sbb
int3
jb
ret
inc
mov
sti
jnp
adc
add
sahf
xlat
loop
cli
cmp
mov
fisubl
mov
fwait
lods
test
mov
cmp
iret
and
sub
push
dec
push
mov
cmp
stc
mov
std
ja
dec
adc
pop
into
cmp
lret
out
call
jns
cld
add
ret
cli
mov
push
pop
shrb
dec
in
ja
notl
and
daa
or
sub
pop
mov
scas
or
scas
divb
sbb
sub
cmp
out
jge
test
into
fcmovnb
adc
mov
clc
cmp
cmp
les
add
clc
or
in
addl
fdivrl
xchg
jne
sub
out
push
sbb
cmp
int
inc
and
dec
addb
push
pop
imul
stos
stc
inc
dec
mov
nop
adc
clc
adc
cmp
pop
icebp
push
sub
aas
xchg
dec
imul
sarl
jge
lods
inc
dec
push
in
mov
popa
lret
add
stos
rorb
mov
sub
repz
xchg
outsb
cltd
int3
sar
negb
lods
mov
fisubl
pop
push
jae
adc
or
movsb
stos
inc
es
jmp
divl
ret
pop
cmp
dec
imul
fld
adcl
inc
movl
xchg
or
aam
inc
idivl
add
dec
sub
lahf
ret
imul
pop
adc
xchg
insl
pushf
adc
or
mov
jl
outsl
xchg
subb
stos
mov
bound
rorl
rcll
stos
ret
insb
or
lret
dec
push
adc
and
movsb
adc
not
xor
jg
jecxz
inc
sbb
adc
lea
out
ret
push
jecxz
mov
sub
cmpb
xor
jno
mov
add
push
pop
ficoml
bound
scas
leave
add
push
xchg
ljmp
and
xchg
inc
jecxz
jb
dec
sbb
outsl
pop
push
out
clc
xchg
xlat
std
sbb
rcll
cld
cmp
cmpsb
sti
xchg
cmp
mov
or
jmp
adc
jecxz
lret
xor
and
inc
fwait
nop
jle
mov
test
pop
testl
and
outsb
xor
loopne
pop
cs
lahf
jae
jns
push
xor
mov
sub
xchg
cmp
xchg
add
imul
cmc
mov
xchg
leave
in
adc
cmp
out
jnp
xor
cld
fisubs
shll
cmpsl
imul
pop
sarb
subl
xchg
xchg
es
adc
push
cmp
ljmp
ret
and
pop
dec
sbb
jae
inc
and
mov
sub
push
xor
loopne
push
mov
sbb
sub
aad
add
pop
shrl
stc
mov
scas
scas
push
fucom
fwait
jecxz
sbb
ljmp
sahf
test
jg
xchg
mov
inc
testb
jns
xor
dec
push
js
push
sub
ljmp
fcoms
mov
xchg
adc
iret
pop
lret
icebp
icebp
icebp
mov
mov
in
out
sahf
pop
pop
xor
pop
push
clc
jae
loopne
jmp
or
fbld
inc
mov
and
pop
jp
push
push
pop
adc
xor
mov
fwait
addb
dec
aad
push
and
and
push
decb
mov
xchg
pop
insb
popf
stc
jnp
dec
mov
xchg
ficoml
hlt
test
das
dec
xchg
adc
jae
into
insl
xchg
push
jno
sbb
out
or
cwtl
mov
inc
or
iret
inc
inc
push
xor
add
rcll
mov
pop
cs
xchg
xor
dec
add
mov
xor
inc
mov
push
pushl
clc
xchg
add
push
fwait
adc
jl
xacquire
push
pushf
push
push
repz
mov
inc
lahf
jne
or
mov
je
decb
inc
movsl
mov
mov
or
inc
test
mov
daa
push
pop
sarl
mov
lea
mov
add
jb
xchg
inc
pop
fisttpl
mov
add
mov
dec
lret
enter
inc
sub
out
rcrb
mov
xor
adc
mov
ss
imul
sbb
dec
iret
mov
mov
fldcw
dec
pop
and
test
dec
data16
jnp
mov
int3
xor
gs
pop
mov
scas
sbb
idivl
xor
and
sub
mov
sub
sbbb
pop
mov
popl
fwait
cmp
mov
das
and
push
xchg
adc
xchg
stos
inc
cwtl
rolb
in
xorb
cmp
pusha
and
mov
inc
pop
das
es
cmp
shr
test
je
sub
movsl
ljmp
and
and
xor
lods
test
out
mov
int3
xor
or
enter
insb
shll
negb
xlat
inc
jmp
dec
pop
sub
sbbb
jg
xor
das
push
adcb
int
int
adcl
in
cs
call
push
pop
lea
into
in
xor
dec
lds
push
mov
outsl
pop
mov
sbb
andb
inc
xchg
xchg
insb
and
sub
fdivl
adc
push
lods
scas
jno
or
mov
adc
xor
xor
jle
sub
inc
repz
mov
lcall
fistpll
add
stc
fstpt
lret
jmp
pop
sbb
push
mov
test
aas
inc
sahf
xchg
xchg
or
mov
hlt
push
xchg
aam
push
shll
ret
cwtl
je
out
xchg
jno
das
idiv
sti
inc
push
lret
gs
pop
addr16
xchg
cmp
push
inc
shlb
int
xchg
rcrl
insb
xor
fsubr
adc
out
icebp
loope
gs
mov
push
addb
out
jae
rclb
js
mov
dec
repnz
fildl
call
ret
rorb
xor
xchg
cmp
jb
pushf
add
push
daa
in
mov
dec
js
cmp
inc
test
pop
and
jno
adc
data16
int3
cli
add
iret
dec
cmp
mov
mov
hlt
mov
gs
mov
in
lock
xor
lahf
jns,pt
mov
outsb
inc
clc
mov
popa
repnz
mov
mov
jl
fdivl
add
cmp
inc
cmp
dec
test
in
jno
aaa
outsl
mov
push
sbb
cmp
mov
cmp
outsl
test
xchg
and
out
push
sbb
insl
nop
add
cmpsb
dec
out
push
sarb
clc
or
sbb
or
test
lods
in
sbb
dec
js
in
mov
and
out
mov
jns
scas
mov
scas
inc
jg
repnz
stc
sbb
popa
add
push
inc
sub
push
int
and
inc
mov
popa
mov
and
ret
test
insb
cwtl
or
xchg
call
rorl
lds
fimuls
dec
mov
mov
jae
gs
or
and
rorb
mov
push
or
mov
and
jo
loopne
fldl
xchg
mov
pusha
mov
dec
fiadds
rclb
sbb
xlat
sub
jb
mov
push
dec
hlt
and
shr
inc
mov
and
cmpsl
adc
and
out
pop
pop
inc
jnp
je
mov
ds
sbb
add
inc
pop
dec
jl
das
mov
adcb
xor
fdivp
loope
dec
lcall
mov
mov
sub
repz
cs
inc
fisttpll
bound
sti
testl
sbb
fadds
cli
cmp
or
push
lret
pop
addr16
pop
sub
inc
mov
pushaw
mov
dec
push
ret
add
mov
cmp
cltd
or
sarb
into
imul
inc
jmp
adc
fs
testb
lcall
and
daa
test
jnp
jge
es
adc
cmp
mov
lds
mov
push
add
lcall
inc
out
std
stos
push
or
test
addr16
aam
add
rorl
xchg
cmp
leave
sti
cmp
cwtl
push
inc
gs
mov
hlt
xor
call
fisubl
jle
popa
jmp
shlb
popf
nop
inc
sbb
jmp
mov
inc
lods
nop
dec
cmpsb
inc
out
out
loope
inc
dec
and
pop
pop
shl
jnp
bound
adc
xor
aad
lcall
jle
mov
push
fsubrl
or
mov
mov
ficoms
int3
mov
jmp
outsl
cmp
out
pop
dec
jns
lcall
or
subl
mov
dec
fiaddl
out
into
test
inc
add
loopne
xchg
imull
cltd
nop
in
std
ret
dec
es
insb
pop
xor
lods
push
xchg
pop
or
rol
mov
mov
push
fnstsw
pop
mov
sub
into
xorl
insb
cwtl
xlat
mov
cltd
and
fdivr
sub
cwtl
cmp
push
xlat
xchg
and
xchg
scas
mov
js
sbbb
fiadds
push
mov
or
sub
fiadds
ds
test
subb
sahf
push
dec
mov
into
daa
adc
sub
lcall
add
dec
imul
loop
fucomp
push
mov
cmp
outsb
mov
cltd
sub
jmp
and
sahf
sahf
adc
mov
jns
pop
es
iret
pushf
inc
stc
push
js
lret
jp
test
pusha
mov
pop
int3
inc
xchg
jg
xchg
fs
les
jle
filds
jo
popa
sub
ljmp
xor
cwtl
sub
add
in
je
je
repz
lock
dec
mov
mov
cmpsb
pop
leave
subl
pop
sar
fs
pop
test
mov
inc
mov
fdivrp
xchg
push
mov
icebp
cli
popa
add
and
jmp
cmc
aas
mov
push
push
cmp
fwait
push
adc
sub
filds
ror
mov
dec
iret
in
hlt
mov
dec
or
cwtl
push
fimuls
and
and
push
pushf
add
out
push
lcall
loopne
clc
aas
cld
push
rcrb
pop
imul
dec
movsl
lahf
inc
mov
cmpsl
out
sub
addr16
arpl
mov
shll
push
inc
movq
movsb
mov
dec
imul
cmp
dec
jecxz
push
jb
mov
push
inc
imul
lcall
xor
sub
push
lock
fwait
daa
inc
add
int
mov
pop
inc
xchg
data16
rorl
or
inc
xor
xacquire
mov
enter
adc
sbb
fsubl
subl
jnp
jb
outsb
and
imul
int
push
test
or
out
mov
testl
lret
ret
jecxz
mov
jb
setle
sarb
stos
xchg
mov
test
xchg
addr16
jb
imul
mov
push
jo
lret
inc
push
nop
or
mov
inc
das
jno
rorb
mov
imull
mov
push
and
mov
xchg
dec
sbb
cmpsl
sahf
out
mov
xor
stc
sub
enter
jmp
cmp
pop
sub
lea
testl
adc
xchg
cmp
ss
sub
mov
loop
xchg
roll
ja
lock
ret
mov
dec
add
rcll
add
bound
and
mov
pop
ds
pusha
add
sub
stos
lcall
mov
in
or
sub
inc
clc
out
out
cli
jo
outsl
stos
popf
lods
pop
jge
out
rolb
mov
fwait
and
fnstsw
cmp
and
dec
lods
and
std
fucomip
cmp
pop
adc
sub
nop
rorl
xchg
es
lods
mov
sahf
mov
lret
sbb
aad
xchg
xchg
push
xor
int3
or
rcr
xlat
imul
jp
xchg
push
jae
sahf
mov
inc
lret
insl
inc
xchg
and
xor
push
out
ret
cli
jl
leave
and
sbb
insb
lahf
pushf
adc
and
mov
mov
add
xchg
jp
out
sti
test
push
fucomip
or
inc
sub
sbb
xchg
js
mov
cwtl
divb
ficompl
pop
aaa
dec
mov
adc
leave
xor
mov
add
mov
stc
lret
sarb
pop
mov
xor
repz
pop
sbb
pop
dec
push
fdivs
movsb
jmp
out
sti
or
rcl
xorb
sbbb
fbstp
fcmovu
bound
jae
cli
sub
or
or
arpl
dec
xchg
in
sbb
aad
xor
cmp
popf
and
cmp
cmpsl
into
mov
jle
adcb
sbb
in
cmc
mov
cld
imul
xchg
test
jg
sbb
dec
xchg
or
arpl
inc
icebp
fidivrs
adc
aad
in
sti
push
pusha
and
jno
cmpsl
fiadds
xchg
xor
mov
int
jb
fiadds
push
cmp
fstps
rolb
dec
push
jmp
mov
add
push
je
add
ret
cltd
clc
or
dec
movl
xchg
in
sub
inc
pop
push
mov
call
orb
out
test
aas
mov
or
sub
push
pop
bound
cwtl
andl
lods
hlt
movsb
int
rcrl
cmp
sub
repz
cmp
loop
sbb
xor
loope
popf
test
pop
jbe
fsubs
int
pop
jno
sub
mov
push
outsl
in
adc
fwait
add
cmp
xchg
pusha
mov
rolb
daa
rolb
push
fsubrl
je
fbstp
ret
gs
inc
pop
jl
sub
dec
inc
imull
scas
xor
inc
into
imul
sub
scas
ss
vfmsub213ss
jecxz
jnp
jno
push
adc
into
cld
inc
xor
xlat
repnz
inc
popa
or
leave
jmp
push
cld
push
jnp
pop
mov
mov
out
in
sbb
clc
sbb
or
in
loopne
mov
inc
jl
in
push
fcoml
or
add
stos
mov
pusha
orb
pop
out
loopne
in
xchg
fildl
lret
pop
fnstenv
out
sbb
sbb
fdivl
in
cmp
or
sti
daa
add
mov
jge
test
mov
lds
xor
mov
xchg
das
pop
loop
sahf
test
jne
jns
rcll
out
iret
orl
sahf
fsubl
mov
repz
mov
jo
ret
mov
mov
insl
gs
cmp
gs
out
jge
test
xchg
lea
mov
add
leave
add
ja
push
lods
mov
mov
add
pop
jp
lea
test
push
mov
das
data16
fnstcw
sahf
or
inc
je
jmp
xor
leave
enter
or
add
pop
fldpi
sub
clc
inc
daa
inc
pop
inc
jb
adc
adcl
out
jae
cli
js
sub
add
add
inc
xchg
mov
xor
mov
lahf
and
inc
add
idivl
adc
pop
sub
stos
ret
xlat
out
shrb
sbb
pushf
or
push
or
mov
cmp
xor
mov
ljmp
lods
jecxz
cmp
push
sti
adc
sub
and
cmp
fs
arpl
mov
rorl
dec
mov
dec
sub
push
xor
in
icebp
mov
out
pop
clc
flds
shlb
push
out
stc
inc
je
inc
mov
lahf
in
sub
cmp
add
fdivrl
add
cmp
push
in
loope
adc
lahf
mov
pop
fcoml
sahf
dec
add
pop
mov
cmova
test
mov
inc
xor
push
and
fbstp
and
fisubs
dec
and
xor
cmpb
dec
sub
loop
fcoml
lods
outsl
xchg
cmc
add
jno
in
push
add
cmp
scas
add
cmc
cmc
js
jae
or
fwait
sahf
rcr
mov
cwtl
idivb
mov
xchg
jp
popf
sub
mov
push
lret
sti
lods
iret
sub
inc
push
dec
sbb
adc
pushf
sbb
int3
mov
jo
push
mov
inc
das
aam
pop
popa
lret
mov
mov
repnz
xchg
sahf
pop
cmp
push
xchg
cmp
pop
cltd
in
mov
addl
rcrb
xor
jbe
test
and
lret
cltd
test
cmc
jmp
fs
mov
dec
cmp
ss
sti
jp
mov
data16
std
adc
xchg
pushf
stos
push
jp
in
mov
and
jp
pusha
xchg
jl
fistpl
and
xor
cmpl
push
push
jo
jnp
jnp
and
sub
enter
mov
jmp
in
aam
das
out
jnp
inc
lock
out
outsb
fwait
pop
pop
pop
sub
dec
pop
sub
push
mov
mov
xchg
sub
xor
add
scas
xor
cwtl
ds
mov
daa
mov
test
addr16
ljmp
jnp
jo
in
xchg
aam
int
imul
scas
icebp
dec
inc
xchg
decb
cli
jbe
sbb
pop
pop
insl
dec
int3
xor
in
leave
pop
mov
mov
rclb
cmp
mov
add
mov
cli
fdivr
xor
and
xchg
sub
and
lds
mov
dec
iret
lret
test
mov
add
gs
mov
mov
stc
das
popa
sbb
cmp
cmpsl
xor
sub
insl
jae
movsl
out
mov
and
push
lods
int
ret
repnz
movsl
mov
lahf
dec
dec
shll
mov
pop
test
mov
mov
push
xchg
push
or
sti
repz
inc
xor
out
lcall
sbb
pop
decb
scas
cwtl
jmp
fdivrs
jns
mov
iret
mov
mov
es
daa
lret
js
cli
int3
add
cld
mov
mov
mov
pop
shl
popa
mov
xchg
jnp
repnz
mov
jl
test
pop
in
aam
pop
shrl
stos
jae
push
fwait
insl
or
mov
int
mov
pop
sahf
push
inc
cld
jg
xchg
xchg
add
and
fdivrp
pop
add
dec
adc
lods
icebp
mov
test
clc
mov
cmp
imulb
frstor
popa
cmp
sub
adc
leave
jp
xchg
icebp
aam
or
push
sub
idivb
and
cmp
pop
iret
xchg
push
xchg
gs
fnsave
mov
in
mov
pop
shrb
in
cltd
fninit
push
pop
lahf
shr
adc
pop
and
mov
add
in
fistps
clc
fwait
jns
jmp
js
scas
xor
in
and
mov
dec
stos
pop
xchg
fcomp
mov
mov
es
rcll
mov
sahf
push
mov
dec
and
xor
movsl
in
sub
leave
dec
fsubr
adc
pop
pop
push
js
mov
xor
dec
xor
mov
enter
bound
jo
test
jmp
loop
mov
das
fmuls
add
pushf
add
hlt
add
mov
les
mov
add
mov
or
inc
iret
fsubr
mov
jns
inc
xchg
out
fldl
test
sub
jnp
xchg
popl
adc
xchg
repz
cmp
sbb
stos
dec
out
xor
xchg
mov
cmp
push
push
pop
push
addr16
mov
les
mov
adc
mov
inc
xchg
mov
or
jge
mov
pop
dec
lret
call
out
bound
adc
mov
or
inc
in
jno
or
inc
out
outsb
imul
xchg
mov
sahf
iret
cmp
dec
scas
sahf
sbb
xchg
loopne
mov
jle
fstl
sbb
fs
xchg
int
xchg
mov
dec
fldl
add
pop
aam
mov
push
or
aam
loopne
mov
inc
sub
dec
mov
std
outsb
lock
es
sbb
push
loop
sbb
cmp
sub
divb
inc
insb
xchg
pop
or
inc
out
ljmp
rorb
inc
sbb
cmc
fcomps
ss
xorl
inc
push
inc
ja
sbb
add
sub
dec
ss
mov
mov
mov
decb
js
push
movsb
adc
sbb
movsl
push
dec
pop
mov
jne
mov
add
fcmovbe
je
sar
mov
out
xchg
push
in
sub
add
inc
popf
mov
dec
add
or
pop
cmpsb
or
jmp
mov
or
sbb
pop
pop
test
aaa
addr16
pop
sarb
sbb
mov
scas
lret
lret
mov
addr16
iret
mov
adc
dec
mov
test
test
mov
leave
or
jnp
pop
rolb
loope
and
pop
cmp
cmpsl
fdivrl
insl
mov
cld
mov
ficoms
daa
nop
push
fcompl
stc
sahf
sbb
adc
push
ja
dec
aaa
mov
inc
xchg
sbb
test
pop
jl
cmp
jl
lods
ja
repnz
cmp
scas
xchg
jecxz
lret
pop
push
sbb
frstor
inc
or
fdivr
aaa
push
testb
push
test
filds
add
in
in
push
pop
mov
inc
or
jb
pop
test
cwtl
inc
jo
cmpsb
movsb
stos
outsb
dec
test
push
dec
sbb
adc
movsl
std
ret
dec
xor
mov
mov
pop
daa
fucomip
imulb
test
sub
lret
xchg
mov
repnz
aas
adc
mov
inc
lea
addr16
mov
scas
inc
data16
idivl
out
test
mulb
cld
cmp
xchg
mov
jmp
lret
jg
mov
fxch
fcmovb
jecxz
xchg
sub
cmp
shll
shll
cwtl
ret
js
pusha
xchg
sti
xchg
xor
sub
push
cmp
hlt
fsubs
dec
pop
hlt
adc
in
cmc
scas
push
sbb
adc
mov
scas
ret
int
cmp
fsubrs
aaa
push
sbbb
std
fldenv
clc
and
lret
popf
cmp
leave
dec
dec
fadds
jge
mov
nop
xlat
ds
lock
fists
mov
pop
popf
lcall
pop
nop
jno
movsb
sub
mov
cmpsl
mov
jmp
int3
test
adc
sub
add
or
mov
ret
int
xor
cmp
mov
sahf
repz
inc
mov
push
lret
add
in
mov
mov
int3
popf
mov
push
sub
cld
pushf
cmp
mov
test
adc
add
sbb
inc
sub
popa
cld
sub
sub
mov
nop
jmp
jno
adc
xchg
in
xchg
jns
pop
jecxz
in
mov
cmp
and
inc
call
adc
cwtl
or
dec
jno
stos
ljmp
and
outsl
mov
lods
call
fiadds
mov
add
repz
scas
and
lcall
add
push
push
stc
xor
pop
mov
scas
xor
stos
fstpt
lods
icebp
inc
jecxz
iret
or
mov
sbbl
mov
cltd
push
lahf
inc
fisubrs
scas
leave
xor
lods
nop
mov
push
lret
loope
pop
add
cmp
es
fldl
mov
fistps
clc
fisubl
or
pushf
out
sti
repnz
mov
adc
sti
aad
lds
loop
int3
mov
sahf
aaa
fadds
cltd
xchg
mov
or
jno
xchg
rclb
loop
lret
in
and
mov
mov
mov
stos
cltd
xchg
cs
xchg
mov
or
iret
ljmp
xor
push
adc
xor
xchg
out
idivl
test
lahf
mov
ja
adc
scas
lds
push
rcrb
test
aas
frstor
xchg
les
or
xor
fcoml
mov
mov
das
adc
add
push
aad
addb
mov
jo
pop
iret
or
repz
aaa
push
add
lahf
mov
iret
mov
stos
cmp
addb
add
jecxz
mov
arpl
jnp
lret
mov
sbb
sub
inc
adc
dec
add
outsl
sub
xor
test
test
sahf
lahf
push
dec
jb
gs
xchg
out
jb
filds
scas
fnstenv
ds
inc
or
pusha
mov
cmpl
lods
push
mov
sub
mov
dec
or
pop
inc
inc
mov
mov
jnp
stos
add
mov
jb
mov
xor
fnstsw
das
loop
lret
cmp
and
inc
movsb
inc
in
sub
fucomi
add
loop
hlt
ret
js
lret
cmp
push
inc
dec
int
test
push
xchg
and
jnp
adc
or
push
or
mov
mov
adc
int3
adc
cmpsl
add
icebp
movsb
subb
imul
ljmp
arpl
into
pop
iret
inc
repnz
insl
es
push
sbb
data16
inc
mov
cmpsb
fbld
sub
or
cmp
mov
sbb
add
push
inc
jb
and
cwtl
out
popf
sub
xor
js
rorl
or
sub
sbb
inc
repnz
cmpsb
cld
rorb
and
dec
ja
pop
ds
push
mov
std
jno
sbb
inc
jo
repnz
xchg
lds
push
popa
mov
out
imul
ja
push
mov
push
frstor
jg
scas
outsb
repnz
inc
dec
mov
push
arpl
add
shlb
pop
cmp
lret
aas
in
ljmp
out
cmp
mov
xor
cwtl
jb
test
fistpl
mov
sub
pusha
outsb
push
jb
pop
inc
shlb
add
mov
ret
dec
negl
arpl
stos
das
aaa
mov
ficoml
pop
sub
add
mov
sub
jp
push
and
cmpsl
rol
bswap
lods
dec
add
adc
popa
sub
jae
add
std
in
aam
or
fisttpl
dec
xrstor
stc
push
out
insb
call
loope
pop
dec
pushf
mov
jmp
mov
lcall
cmpsl
cmpl
pop
sbb
mov
and
add
mov
outsl
aam
jp
cmp
jp
xchg
dec
mov
aam
mov
mov
repz
pop
dec
shll
ret
mov
push
sub
in
pop
aaa
inc
pop
add
push
insl
sbb
jae
mov
jbe
sub
lret
push
sarb
in
mov
and
mov
mov
mov
jg
dec
out
jle
dec
gs
push
dec
pop
mov
aas
lea
movsb
pop
cvtdq2ps
mov
pop
and
daa
movb
lret
loopne
dec
mov
orl
pop
inc
inc
pop
test
or
loop
test
rcrl
inc
in
xlat
jp
dec
sbb
cmp
push
sbb
add
mov
pop
xchg
out
jl
push
push
and
cmp
inc
cmpsb
imul
adc
adc
out
sub
push
push
push
inc
int3
jno
lds
pushf
ret
in
arpl
mov
xor
pushf
cltd
mov
xor
lahf
mov
adc
out
mov
sub
cmova
dec
sbb
aas
adc
sbb
scas
rorl
rclb
fdivrs
imul
popa
iret
xlat
out
sbb
pop
push
out
or
xor
jbe
or
sub
std
js
test
push
push
movsl
loop
int3
mov
xorl
mov
movsb
xor
and
jecxz
lcall
out
movsb
xorl
sbb
and
icebp
inc
lock
adc
push
daa
push
inc
jb
iret
pop
lock
test
push
and
and
lret
push
or
ljmp
sbb
stc
cmp
xchg
and
pmulhuw
mov
rcrb
mov
ffree
rol
xchg
push
in
and
mov
push
add
jno
sahf
mov
cwtl
arpl
fldl
pop
mov
mov
aaa
in
jmp
outsb
ret
and
leave
int
sbb
mov
pusha
sub
dec
decl
loop
add
mov
cld
movsl
in
mov
mov
rol
and
adc
scas
pop
pop
pop
sbb
xchg
inc
push
das
sbb
xor
movsb
cld
jg
dec
mov
out
dec
or
push
push
ds
cmp
inc
mov
mull
and
mov
aaa
aas
mov
sahf
leave
pop
aad
jmp
sbb
adc
ficomps
or
ds
lods
adc
mov
mov
in
fistps
stos
call
hlt
pop
inc
int3
push
loop
inc
into
pop
jecxz
dec
in
jae
adc
xchg
mov
push
iret
push
xchg
pop
mov
dec
xchg
sbb
push
int
xlat
fstpt
xchg
dec
cld
inc
sbb
push
jecxz
add
popf
enter
ficompl
lods
adc
xor
ror
sarb
inc
daa
fsub
out
in
mov
sti
or
sbb
sub
push
int3
xchg
fnstsw
jecxz
xor
daa
xchg
faddp
not
loop
mov
adc
xchg
das
push
sti
int
decb
sbb
cltd
stos
and
inc
push
enter
into
cmpsb
mulb
push
sti
fldl
dec
jbe
cmp
iret
xor
stos
lret
add
call
cmc
movsl
ljmp
rcl
and
aad
cmp
add
sbb
sbb
repnz
sbb
test
xor
std
fiadds
push
dec
inc
xchg
sub
gs
add
cwtl
xor
jle
fs
das
jno
mov
es
loopne
sbb
daa
dec
pop
and
insl
imul
jns
jge
fisttps
jmp
fmul
sbb
jle
pop
jns
xchg
cmp
cmp
push
push
fs
cmp
adc
lahf
std
les
clc
mov
inc
out
pusha
outsl
adc
inc
xchg
jp
cmp
out
aas
adc
test
mov
mov
adc
enter
inc
dec
jo
adc
lahf
sbb
push
stos
sub
adc
out
push
pop
stos
mov
xchg
adc
xchg
dec
ljmp
lods
movsl
sub
das
fsts
hlt
push
mov
xor
imul
out
sbb
pop
cmpsl
mov
gs
in
xor
call
ret
mov
push
pop
lret
int3
iret
and
xchg
pop
mov
dec
es
push
ret
hlt
psllq
lods
shrl
jl
ret
pushf
inc
jns
jmp
mov
es
stos
mov
cmp
loopne
cltd
dec
popa
dec
rep
push
add
push
xchg
cmpsl
pop
bound
jg
mov
and
push
loopne
jp
xor
ret
push
inc
jbe
mov
xor
xchg
cld
es
movsb
iret
sarb
aaa
xchg
out
dec
daa
pop
shl
sbbb
pusha
jns
dec
into
out
movsb
dec
xchg
adc
daa
idiv
inc
and
add
notb
testl
jp
mov
and
mov
add
add
mov
push
hlt
pop
jno
popa
and
add
xchg
adc
mov
dec
clc
ja
add
sub
aaa
clc
mov
ja
push
jg
cs
faddp
xor
aam
and
inc
pop
fisubs
in
xchg
add
mov
mov
dec
add
popf
lcall
ds
xchg
movsl
test
mov
push
arpl
add
push
loopne
xor
ljmp
sub
adc
mov
or
lods
adc
push
lret
add
sub
test
inc
adc
cmp
mul
repnz
push
sarl
mov
sbb
cmp
adc
mov
pop
mov
repnz
out
add
dec
pop
push
mov
das
int
je
fsts
adc
cli
loop
mov
mov
stc
fstl
mov
push
fwait
sub
push
gs
xchg
or
push
insl
pop
push
mov
aaa
or
aam
fs
dec
les
cld
inc
jmp
pop
mov
gs
shrb
jo
les
ret
or
les
push
in
pushf
jbe
psubd
popa
shl
push
stos
xor
pop
test
aam
xchg
pop
mov
pop
xor
ss
dec
loopne
lods
sti
fwait
pop
jb
dec
jecxz
lods
arpl
sbb
cmp
cld
push
ljmp
mov
push
divb
sbb
repnz
pusha
sbb
fadds
clc
inc
cmpb
jne
dec
cmc
call
lcall
mov
pushf
stos
mov
adc
cmpb
enter
push
lds
mov
pop
rcl
dec
fisubs
in
dec
adc
iret
lock
fcomp
test
stc
cmp
fs
mov
add
js
loope
lahf
rclb
lds
jle
xchg
xor
xlat
cmc
cmp
jb
dec
sar
andl
daa
mov
ror
enter
mov
stc
push
xor
insb
fiadds
andb
lahf
lods
mov
gs
sbb
shlb
mov
sub
mov
mov
int
mov
jbe
xor
test
rcll
inc
jnp
addb
mov
call
sti
dec
jg
mov
dec
out
xor
mov
sbb
aam
shrl
and
lahf
and
and
sbb
fnstsw
cmp
lock
out
cmpl
out
mov
xor
push
cmp
push
cs
xchg
ja
lds
jnp
inc
mov
mov
add
test
mov
call
aas
in
xchg
and
jecxz
pop
repz
cs
mov
mov
adc
cmp
sbb
sbb
inc
gs
data16
xchg
daa
in
push
cmp
push
sbb
call
push
mov
pop
mov
sar
and
mov
negb
insb
mov
mov
aaa
lahf
lahf
sub
or
add
mov
or
adc
mov
loopne
fld
dec
out
scas
les
lahf
push
and
xlat
adc
call
rorl
add
cs
adc
inc
das
fidivl
in
mov
sub
or
cmp
cmpsl
fmulp
test
fistpll
mov
xor
jbe
jecxz
scas
hlt
or
xor
ja
pop
pop
mov
adc
adc
inc
aad
pusha
test
test
jmp
lcall
idivb
test
jbe
pop
mov
ficoml
clc
icebp
les
and
insl
xchg
mulb
or
xor
xor
sub
xchg
pop
rcrl
mov
popa
cmpsl
mov
stc
adc
cmc
dec
movsb
sub
mov
adcl
fisttpll
ljmp
xchg
xchg
or
xor
test
cmpsb
pushf
sub
subl
cmp
shr
sbb
xchg
scas
lds
cwtl
adc
rcl
xor
je
or
sub
iret
les
fs
cmpsl
sarb
out
dec
das
and
adc
push
inc
inc
rorl
cs
cmpsl
in
lahf
xchg
test
jle
dec
lahf
cmp
mov
hlt
loopne
mull
rol
std
xchg
push
ja
gs
daa
jmp
jecxz
adc
mov
repnz
and
inc
gs
je
adcb
sarb
mov
jnp
mov
mov
inc
push
fldl
cmp
xlat
setnp
test
mov
lods
jl
and
lods
dec
cmp
push
push
jne
test
mov
sub
jns
push
lea
repz
rcrb
xchg
enter
cltd
add
inc
xchg
test
xchg
mov
mov
out
pop
out
add
cmc
xchg
push
sub
addr16
je
imul
cmp
adc
sti
adc
jo
scas
adc
mov
sbb
test
lret
push
sub
xor
push
mov
inc
mov
push
fadd
mov
out
sub
fwait
or
fldenv
adc
ja
dec
xchg
int
fs
insl
sub
in
lea
xchg
mov
jo
js
xchg
sbbb
inc
xchg
repnz
loope
jmp
loope
pushf
out
call
dec
jnp
aaa
cld
mov
xor
rclb
xor
stos
mov
sub
insb
out
sbb
popa
aas
or
popa
out
aam
cmp
icebp
and
jge
fs
and
cmp
xlat
cmp
fistpll
and
or
ja
inc
sub
outsb
gs
mov
fwait
aas
imul
filds
adc
and
pop
pusha
jmp
mov
dec
ret
pop
xor
into
repz
and
lods
push
adc
shll
mov
jae
jo
dec
pushf
pushf
push
or
jmp
aaa
hlt
mov
push
subps
cwtl
mull
push
xchg
ret
sub
jmp
icebp
jg
cld
negl
dec
in
cltd
mov
pop
pop
dec
stc
loopne
std
xchg
popf
cmp
xchg
notl
loopne
dec
xchg
jo
cmp
rclb
mov
and
je
cmp
aas
scas
and
pushf
test
jo
in
fisubrl
xorb
in
and
loop
pop
mov
push
or
addr16
or
xchg
push
aam
or
or
test
add
decb
add
nop
decl
inc
cmp
pop
ljmp
outsb
or
push
cmpsb
mov
lods
pushf
daa
cmpsb
push
aam
imul
add
adc
cli
push
mov
dec
cli
pop
gs
pop
adc
cmpsl
sbb
mov
xor
mov
mov
call
add
sbb
cmp
repnz
imul
pop
inc
push
adc
sub
je
or
sbb
inc
out
mov
adc
jmp
cli
xor
sbb
and
adc
push
jmp
out
push
mov
out
push
fnsetpm(287
cmp
mov
imul
std
mov
dec
ss
pop
stc
xchg
mov
dec
sub
iret
rcl
shlb
mov
fld1
mov
xchg
sarl
vcvttpd2dqx
push
je
int
or
mov
or
sti
push
fbstp
loope
or
popf
sbb
mov
test
cmp
shll
imul
loope
cli
adcl
and
pop
data16
inc
mov
adc
xchg
ret
jae
icebp
or
scas
dec
std
insl
mov
mov
sahf
popa
aaa
jge
mov
pusha
add
aaa
test
cmp
dec
popf
pusha
ljmp
xchg
add
out
dec
shl
add
iret
add
mov
dec
wrmsr
mov
lahf
xchg
push
stos
cwtl
jmp
out
dec
cmp
je
mov
inc
fcomp
pop
outsb
push
mov
dec
mov
es
rolb
test
pop
stos
jb
aaa
jecxz
into
inc
inc
cltd
push
in
out
cmpsl
mov
pop
in
cmp
stos
sub
push
mov
popa
clc
jb
sbb
int3
adc
xchg
icebp
dec
mov
jne
inc
jmp
or
test
or
xorb
dec
cmp
inc
cli
dec
aad
aaa
ror
pusha
aas
or
add
mov
insb
xor
xchg
ret
inc
out
push
inc
mov
mov
jae
cmpsb
jp
shrb
jno
push
lahf
adc
dec
dec
pop
push
add
xor
ss
cmpsb
adc
xor
push
add
mov
add
test
add
pop
mov
movsb
cld
xchg
pop
bound
scas
inc
jns
dec
pushf
cwtl
xor
movsb
xor
ret
and
subl
adc
int
loope
dec
testl
insb
idivb
cli
mov
aad
loop
dec
mov
scas
cmp
push
mov
movsb
mov
lahf
pop
jg
arpl
jns
leave
jb
loop
adc
mov
push
movsl
jae
push
jecxz
and
jge
mov
adc
sbb
setnp
pop
out
xor
pop
jmp
test
pop
push
jae
fbld
outsb
scas
out
mov
pusha
dec
imul
pop
test
sbb
pop
add
and
pop
ficompl
push
mov
sbb
mov
xchg
or
out
lahf
repnz
fisubrs
arpl
fwait
or
push
lods
mov
adc
aad
push
pop
leave
jge
push
and
in
fimull
sbb
sbb
inc
sub
mov
les
add
cmpsl
pop
js
lcall
sbb
popa
in
daa
and
sahf
aad
fs
cmp
popa
arpl
ds
or
push
aas
fidivrl
out
and
imulb
insl
sub
hlt
movsb
xchg
rcr
sarl
hlt
push
repz
dec
pop
aad
or
sub
sub
js
dec
sub
fsubrp
sub
stos
rclb
cltd
jg
mov
push
and
outsb
cmp
repnz
fcomi
push
add
icebp
in
negl
lds
repz
mov
sbb
xlat
xchg
popa
jne
scas
mov
mov
test
shll
xor
push
sub
bound
neg
enter
mov
fdivrs
xchg
dec
lahf
js
or
call
js
sub
xchg
cld
aam
arpl
add
loopne
icebp
out
test
dec
mov
dec
jns
add
testb
push
cmpl
dec
scas
xlat
cmp
mov
cli
push
mov
push
push
push
outsl
and
push
sub
adc
into
mov
mov
cmp
jl
loope
aas
mov
jl
jl
adc
lds
mov
test
orl
mov
out
and
dec
mov
jne
push
test
add
icebp
cmc
lret
jno
out
mov
into
adc
es
pushf
xor
fisubrs
pavgw
or
mov
pop
cmp
jo
pop
test
and
gs
shr
int
rorl
enter
andl
sub
out
idivl
push
xor
adc
xchg
mov
int
inc
jno
xchg
icebp
aam
jle
or
mov
xchg
iret
mov
jmp
jle
xchg
pop
aad
or
test
jo
push
pop
add
push
cmp
xchg
xchg
inc
add
or
cmpsl
jle
mov
rolb
jns
jl
jg
mov
xchg
push
cmp
repnz
cmp
stos
out
jns
daa
ret
adc
loope
clc
in
push
repnz
sarb
loopne
test
fsubs
sti
mov
movsb
dec
or
cs
pusha
arpl
mov
push
rolb
mov
sub
movsb
add
sbb
mov
push
xchg
mov
dec
mov
out
icebp
outsb
lret
jge
adcl
jb
sbb
dec
aam
pop
or
fcom
fisubrs
push
cmp
bound
inc
mov
mov
push
adc
shrb
mov
dec
test
mov
mov
push
or
int
cmp
jns
ret
fcompl
sbbl
dec
mov
pop
test
jp
sti
xor
stos
hlt
fdivrl
cmpsb
call
or
lahf
cmp
das
loope,pn
ljmp
and
sbb
inc
jae
lods
mov
lret
and
and
cltd
inc
push
pop
push
mov
xchg
pop
xchg
outsb
adc
dec
fidivs
cmpsl
mov
out
pop
sub
xor
jg
pop
leave
mov
push
jne
cwtl
das
and
dec
les
dec
inc
fists
in
insb
mov
mov
int3
inc
leave
pop
fstl
mov
aam
dec
faddp
xlat
cmpsl
and
imul
stos
aaa
lods
mov
test
aaa
inc
lea
cmp
lds
leave
pop
hlt
cmp
jne
jp
imul
packuswb
fsub
fadds
mov
jmp
dec
cli
shlb
loope
dec
test
out
popa
add
into
aam
rcr
mov
jnp
stos
ljmp
repz
rorb
lds
fcompl
iret
pop
or
call
mov
popf
lahf
and
or
loope
out
dec
rcrb
stos
mov
jmp
dec
mov
in
jmp
out
nop
xor
push
shr
shrl
xlat
pop
pop
jae
sarl
lcall
das
outsb
out
popf
jo
sub
pop
fstpl
sti
fld
daa
subb
xchg
sbb
out
pop
test
jp
adc
test
inc
mov
mulb
movsl
mov
fidivl
xor
sub
leave
lcall
pop
lods
pop
xor
stos
mov
or
es
pusha
aaa
lret
and
rcrl
test
dec
sbb
scas
arpl
sub
push
cld
push
mov
mov
int
lea
xor
int3
test
arpl
imul
sub
scas
sbb
out
cli
inc
push
push
xchg
mov
in
xchg
xor
inc
dec
mov
xor
ret
stos
repz
add
in
ja
xor
xor
or
jmp
ret
or
das
ret
outsl
lods
cld
push
adc
sahf
inc
fs
int
pop
int
adc
out
jne
cld
or
sahf
stos
or
lcall
sub
lea
xchg
daa
jle
xor
jb
ss
mov
pop
mov
mov
scas
fnstcw
cmc
lret
jnp
mov
bound
mov
dec
popf
add
xchg
nop
inc
add
or
mov
iret
mov
mov
xchg
or
cmp
jl
nop
cmp
or
push
movsl
sub
and
fadd
mov
xchg
mov
fsubr
scas
and
lea
mov
jnp
sbb
add
outsl
fmul
xor
inc
icebp
inc
sahf
loope
mov
outsl
pop
loopne
xor
movsb
or
popf
inc
sarl
leave
movsl
cmp
sbb
je
lods
inc
icebp
jmp
dec
xor
lret
push
ficoms
lods
pushw
push
sub
data16
cs
sbb
ficoml
dec
rolb
int
mov
stos
mov
push
add
mov
shlb
sub
cmp
sub
imul
sbb
mov
inc
adc
lods
stc
test
loope
pop
xchg
mov
scas
mov
jno
and
ljmp
xchg
aam
jne
add
shl
cmc
jns
inc
inc
push
icebp
popa
stos
jno
stos
and
sbb
ret
xor
nop
roll
dec
xor
test
cli
ret
and
pushl
fs
lret
les
out
outsb
or
add
outsl
sub
into
xor
pop
inc
lcall
mov
jns
xor
jns
inc
push
fwait
push
jno
pop
sbb
jnp
js
addr16
and
sti
lcall
pop
dec
xchg
icebp
ljmp
dec
inc
mov
push
xchg
daa
push
add
adc
cmp
or
cmp
roll
hlt
sub
subb
pop
xchg
push
and
sbb
mov
mov
sbb
popa
jle
push
xor
lea
aaa
inc
mov
pop
adc
aad
jge
push
imull
jge
xor
test
repz
push
leave
inc
lret
sbb
outsl
mov
sub
shlb
xor
and
cmp
das
out
loope
aam
imul
pop
push
mov
cli
pushl
rcrb
int
gs
xor
inc
aam
mov
jge
je
inc
mov
mov
add
leave
mov
cltd
std
mov
je
sbb
mov
mov
add
out
int3
jp
cltd
jo
inc
scas
mov
cmp
sbb
insl
nop
in
repz
inc
xchg
lret
cwtl
es
jo
mov
sarl
sub
lea
out
mov
movb
lret
pop
xorb
push
sub
in
mov
ja
push
test
pusha
test
js
dec
xchg
mov
mov
lret
or
adc
lock
push
cmpsb
adc
shlb
sbb
xchg
push
adcl
lds
hlt
inc
mov
ret
xor
sub
xor
cld
pop
push
dec
xor
jg
movl
rcll
and
add
mov
pop
add
testl
jbe
shrl
sti
icebp
lret
pop
mov
mov
sub
or
and
js
fistpl
out
inc
jecxz
enter
xor
and
push
lods
cmp
mov
aam
imul
pop
adc
je
sub
inc
xor
adc
xchg
jne
sti
stos
std
pop
scas
outsb
rcll
dec
das
xor
rorb
aas
cmp
mov
xchg
stc
add
testb
pop
es
out
xchg
dec
nop
pop
outsb
jle
ss
fdivs
sub
xchg
pop
pop
inc
jae
pop
push
flds
nop
jmp
movsl
xorb
mov
and
lods
enter
jns
decl
inc
leave
mov
mov
push
movsl
call
lcall
mov
inc
icebp
xchg
pop
insb
add
xchg
adc
inc
lods
ret
and
ljmp
mov
scas
lahf
mov
adc
sbb
add
jg
sbb
rolb
les
jno
mov
dec
loop
orl
xchg
push
aad
jne
cmp
enter
data16
or
cli
jge
push
jge
std
test
lea
and
xorb
or
or
incb
fnstenv
test
sbb
ja
mov
ss
sub
aas
mov
into
rclb
sahf
aaa
jnp
mov
or
push
mov
pop
add
mov
mov
test
mov
push
xchg
aad
mov
pushl
subl
mov
xchg
cmp
pop
inc
mov
lret
insb
cmp
push
in
mov
xor
in
adc
pop
and
imul
cltd
push
xchg
pop
rorb
insb
insb
xchg
addr16
repz
scas
je
repnz
inc
aaa
or
bnd
sbb
fisttps
repnz
jmp
pop
dec
inc
or
sub
mov
jae
outsl
sti
lods
mov
adc
imul
cmp
cmp
mov
aas
les
ds
xor
lods
jle
cltd
fimull
sarb
add
stc
icebp
movsl
testb
xor
hlt
out
iret
mov
add
movsb
or
push
in
mov
mov
aad
sub
movsl
xor
jecxz
cmp
dec
mov
divl
push
and
ret
fisttpl
adc
push
insl
loope
mov
out
pop
xor
lea
in
aas
dec
dec
jmp
int
int3
js
dec
shrl
mov
dec
stos
test
add
testl
inc
and
fildll
adc
pop
cwtl
shlb
popa
or
and
out
cmp
cmp
mov
lret
mov
push
pop
insl
lods
hlt
out
push
ss
push
sbb
inc
mov
arpl
iret
jb
cmp
add
or
sbb
jo
into
mov
loop
adc
sub
push
add
sarl
lret
negl
out
pop
cmp
stc
cmp
testl
ss
movsl
in
push
shll
mov
jae
push
cltd
lret
xchg
pop
pop
jns
rcr
sbb
loopne
lds
jp
and
sub
xor
popa
mov
inc
push
aaa
shl
jno
jne
cmp
das
pop
xor
mov
cld
fadd
int
loope
mov
sub
push
fcompl
fwait
pop
sub
mov
ds
xchg
iret
aad
movsl
fwait
iret
ss
bnd
xor
ss
adc
aam
rcrl
adc
jne
xor
jno
jno
push
jnp
sbbl
xlat
hlt
aas
pop
pusha
inc
pop
cld
repz
cmp
out
in
int3
inc
icebp
test
loopne
in
imul
xor
mov
lret
imull
je
add
cmpsb
popa
sbb
jno
lahf
lock
adc
mov
clc
cmp
pop
pop
push
jo
mov
repnz
cmc
gs
fcomps
xchg
rolb
push
lods
stos
xor
adc
rclb
fisubl
jp
push
enter
sbb
ret
js,pt
lea
pop
mov
lahf
popf
sub
sti
add
fbld
out
sahf
xlat
dec
mov
mov
das
loope
inc
push
fildl
in
loopne
cmp
shr
xchg
into
repnz
jnp
nop
clc
mov
jb
scas
cwtl
cli
fwait
mov
lods
adc
dec
jns
lret
pop
lcall
aaa
aam
xchg
xchg
into
adc
jmp
dec
sbb
rol
pop
mov
ja
and
mov
hlt
das
scas
ret
pop
pop
nop
rclb
rol
dec
das
lcall
testb
push
rcr
mov
pop
lcall
inc
sahf
mov
dec
jno
mov
push
xchg
and
jae
pop
imul
dec
adc
je
xchg
mov
lret
mov
push
inc
xor
pop
cmp
movsl
pop
pop
cmp
sub
xchg
or
xor
inc
push
leave
mov
repnz
fadds
adc
iret
test
aam
xor
lret
adc
inc
scas
mov
lods
dec
aas
or
and
mov
or
xchg
mov
outsb
cmp
pushf
test
adcl
stos
gs
push
adc
xchg
xchg
movsl
aas
lret
fs
push
sub
mov
inc
fcompl
or
nop
out
push
scas
mov
mov
and
sub
cld
mov
push
or
jmp
mov
aas
sub
aam
jno
call
xchg
lods
movsb
fistpll
jge
stos
pop
jne
mov
leave
ror
pusha
das
in
xor
pushf
repz
ret
jb
cld
adc
or
xchg
push
mov
ljmp
xor
inc
pop
adc
in
mov
xchg
sahf
leave
add
add
loope
mov
fsubrs
jns
rolb
push
ss
or
repnz
sub
adc
cmp
jns
add
rorl
cmp
int
xor
mulb
jne
inc
mov
shl
pop
mov
adc
jnp
add
insl
inc
pusha
int
pop
stc
cmp
std
nop
pop
popf
test
inc
in
and
add
push
out
iret
fimuls
out
mov
pop
jo
pop
adc
inc
lcall
cwtl
pop
ljmp
mov
pop
imul
ret
out
dec
dec
adc
mov
sbb
sbb
dec
xlat
mov
fwait
pop
jno
aaa
jb
aam
aam
jb
lea
cmp
cmp
loopne
les
arpl
cmpsb
mov
push
cwtl
mov
in
enter
adc
push
aam
and
xchg
push
pop
xchg
outsl
fmuls
add
inc
out
add
loopne
sbb
or
dec
sbb
ja
aas
jnp
pop
sbb
je
pop
mov
imul
fsubrl
dec
nop
push
imul
jge
ret
mulb
cmp
roll
xchg
setne
loopne
adc
cmp
loopne
xchg
test
fwait
ud1
jo
scas
cltd
push
lret
leave
ret
jecxz
sbb
fsubl
insl
add
add
add
shrl
add
mov
addb
mov
mov
mov
mov
jne
es
mov
sbb
mov
xchg
mov
push
jmp
fmull
mov
jecxz
testb
xor
add
mov
lods
mov
adc
outsl
adc
jge
jmp
aam
and
xchg
pop
sub
data16
add
rorb
dec
bound
sub
cltd
jno
pop
adc
inc
push
and
inc
jo
outsl
mov
js
imul
cmpsb
push
adc
xchg
adc
xor
xor
out
mov
push
aaa
adc
fldt
lret
sub
clc
mov
or
push
jbe
ret
stos
ds
xor
jno
push
shlb
fcoms
pop
jle
mov
inc
jl
lret
inc
enter
dec
call
mov
push
je
subl
xchg
imul
add
mov
xchg
test
add
lods
xor
dec
mov
mov
sub
leave
xchg
add
int
in
fs
jb
insl
adc
pop
scas
ret
pop
rorl
pop
insb
fldl
add
inc
mov
adc
bound
imul
adc
inc
popa
push
cmp
jp
aam
lret
cmc
or
xchg
mov
xchg
ss
dec
push
ja
add
dec
loop
dec
or
xor
pop
call
out
mov
jb
lods
mov
mov
mov
decb
mov
mov
inc
clc
jg
rcrb
pop
jl
dec
and
lret
data16
lock
icebp
cmp
es
pop
icebp
cmpl
and
mov
mov
pop
pop
sbb
push
mov
lods
mov
mov
mov
mov
hlt
nop
test
mov
imul
jo
cmp
test
push
cmpsl
xor
mov
daa
stc
sbb
pop
arpl
pushf
push
aas
cmpsb
or
clc
sbb
or
mov
rcrb
ret
cmpsb
lods
cmpl
jno
frstor
dec
cli
nop
ficompl
xor
mov
outsb
push
pop
outsb
nop
shrb
mov
mov
jbe
jae
aas
and
aas
int
jle
pop
scas
or
das
xchg
cmpsl
push
incb
sub
test
ja
pop
mov
xchg
xchg
add
sbb
cwtl
jmp
mov
movsl
scas
ret
fwait
lods
inc
imul
loope
int3
aaa
push
pop
outsl
pop
sbb
ret
rclb
cli
das
inc
jb
sbb
jb
fcmove
pop
int
inc
cmpsl
mov
hlt
jno
in
out
xor
arpl
lock
mov
cmp
cmp
push
loopne
fdivrp
jge
pop
push
loopne
ljmp
rcll
add
adc
adc
cmpsb
or
inc
nop
jge
fisubs
call
fstps
clc
adc
cli
push
mov
fs
neg
add
sbb
jl
mov
cwtl
andb
push
lahf
xor
add
movl
push
mov
pop
loope
shlb
cmp
cmc
aas
insl
loopne
loope
movsl
jp
push
dec
inc
push
dec
test
std
leave
bound
fs
or
xchg
pop
cmp
sbb
out
stos
sbb
mov
push
xchg
jb
dec
sbb
dec
sti
cmp
adc
and
push
dec
push
fwait
cli
ja
daa
add
cmc
sbb
enter
dec
xchg
aas
cwtl
push
cmpsl
push
xlat
mov
pop
xor
mov
xchg
arpl
jb
push
sti
cs
cmp
cli
fwait
pop
mov
jns
xchg
or
push
arpl
adc
fistpll
add
xor
inc
scas
fucom
cld
mov
fldcw
jb
or
push
push
xor
dec
push
xor
push
ljmp
jp
jbe
jecxz
add
xor
inc
sti
mov
lods
bnd
fstps
or
out
out
mov
adc
mov
or
jmp
xchg
mov
add
pop
cmpsl
pop
and
mov
add
inc
sbb
sahf
ficoms
lock
ret
xor
movsb
sar
pop
push
rorl
dec
mov
cmp
sub
mov
and
mov
ds
mov
push
insb
in
inc
cmp
fldcw
mov
adc
int
mov
push
jg
pop
fmuls
cmpsl
dec
push
cmc
xchg
lock
rep
and
sub
fimull
rorb
xchg
in
call
mov
push
scas
shll
dec
cli
dec
push
int
or
add
push
pop
pop
mov
cld
fsubl
loop
sbbb
dec
add
lods
out
cmp
push
sub
test
insl
push
pushf
sahf
push
mov
imul
pop
addb
jnp
mov
push
xor
aas
mov
fidivrl
inc
data16
cltd
or
arpl
loope
xchg
cli
js
in
out
inc
mov
sub
jae
dec
pop
dec
pop
lret
sbb
aad
inc
dec
ret
push
sub
lret
add
inc
rcl
fiaddl
inc
js
mov
push
jbe
or
cwtl
mov
xor
shl
in
mov
int
rorl
je
mov
mov
out
cmpsb
inc
xor
jb
or
fiadds
stc
in
mov
jmp
lods
pusha
clc
or
xor
inc
pop
sbb
pop
shll
lock
fisubs
inc
scas
jecxz
lret
inc
xor
addr16
test
mov
sub
lcall
sti
repnz
pop
xchg
out
clc
cs
int
loope
roll
mov
add
dec
mov
pop
cmpsb
pushf
orl
xchg
popa
push
mov
cwtl
xor
sahf
test
or
lds
push
mov
aas
rcr
rcl
outsb
out
sbb
sbb
dec
jo
add
sub
mov
inc
test
inc
or
movsb
filds
aam
lods
outsb
into
fwait
mov
xor
cld
fidivrs
jecxz
xchg
in
sbb
jae
cmpsl
dec
cmp
pop
repz
es
adc
pushf
inc
clc
ja
mov
icebp
cld
dec
xlat
push
sbb
pop
dec
mov
jle
inc
inc
and
xor
ja
mov
jbe
das
bound
jmp
pushw
imul
and
icebp
xor
lahf
dec
test
push
icebp
jo
ds
scas
fwait
pop
pop
int3
sbbb
fidivrs
xchg
mov
das
lcall
mov
es
outsl
cld
paddq
pop
mov
mov
jne
and
clc
outsb
lea
lock
jl
xchg
sub
jo
out
mov
or
in
xchg
addb
mov
add
dec
xchg
popf
insb
jg
loop
je
sarb
jnp
dec
add
jp
in
jp
adc
ret
mov
pusha
xor
cli
and
jge
cmp
inc
adc
psubusw
pop
jb
hlt
push
clc
or
hlt
add
jae
aad
jbe
mov
sarb
stc
loope
mov
inc
hlt
adc
cltd
adc
repnz
lds
rol
out
cmpsb
and
fidivs
insl
add
or
xor
jo
mov
pop
adc
sub
and
cmc
int
adc
out
sahf
ss
fsubs
out
call
jnp
jecxz
test
pop
push
popa
jmp
push
dec
js
dec
dec
jb
cld
loope
add
add
mov
cmp
popl
les
lahf
xchg
xchg
jb
ret
inc
ss
js
mov
mov
insb
lea
out
add
xchg
mov
ret
ja
jns
mov
push
lcall
test
gs
sti
pop
inc
cmp
fdivrl
and
ja
sub
es
aam
cmpsb
push
test
cmp
fs
push
imul
adc
push
mov
or
rolb
das
icebp
nop
test
ret
lds
mov
dec
out
cvttps2pi
mov
adc
movsb
xchg
clc
sub
mov
mov
push
pop
push
fs
xor
cwtl
mov
mov
fcmovnu
sbb
sbbl
cwtl
add
pop
push
xchg
xchg
jle
xchg
jmp
int3
jo
mov
xor
xor
mov
push
dec
or
pushf
push
fscale
scas
inc
fdivl
mov
mov
mov
imul
mov
and
stc
add
add
jae
sub
add
ds
mov
push
push
sbb
cmp
inc
fnstsw
into
mov
lods
pop
movsl
push
ficomps
leave
mov
dec
int
dec
mov
or
js
mov
dec
les
mov
in
fisubrs
pop
lods
stos
mov
leave
fimuls
cmc
or
sti
shlb
pop
mov
and
fiaddl
sbb
add
ret
add
cwtl
ja
insl
cmp
pop
adc
jo
or
sub
test
jmp
xor
data16
roll
jbe,pn
cmp
inc
rcr
sub
mov
mov
nop
jmp
pop
mov
repz
js
jnp
xor
sub
pop
add
fs
into
sarb
fwait
xchg
leave
and
daa
xchg
dec
pop
lcall
out
repnz
in
shl
insl
test
repnz
add
std
shlb
jg
add
inc
inc
mov
pop
scas
xorb
jecxz
pop
mov
les
fcomip
into
push
mov
mov
movsb
sti
push
jmp
or
shlb
xor
xor
mov
hlt
or
jmp
xchg
hlt
sbb
addr16
imul
pop
insl
imull
adc
lods
ds
test
aam
jo
outsl
cwtl
ljmp
cs
dec
sub
mov
fdiv
leave
xchg
cld
clc
leave
shll
add
cmp
in
cli
stc
out
in
mov
or
pop
mov
jno
xor
jg
dec
aad
push
inc
and
jg
add
inc
jge
adc
fcmovu
cmpsb
les
push
mov
sbb
dec
lcall
sar
lods
mov
in
sahf
xlat
clc
jecxz
sub
rolb
add
cmp
cmp
mov
cmpsb
push
ficompl
mov
mov
addr16
clc
int3
aad
stc
shlb
in
scas
scas
sar
mov
bound
jbe
push
pop
in
aas
mov
dec
pop
push
sub
jg
jle
leave
ljmp
sbb
push
inc
in
mov
clc
cmpsl
sub
xor
vmread
std
jle,pn
in
sub
insb
xchg
test
lcall
mov
or
dec
and
mov
mov
push
ljmp
pop
rol
add
lret
jnp
in
rcrl
mov
fstps
jae
xchg
jge
adc
aaa
push
jg
xchg
xchg
arpl
outsb
arpl
mov
mov
and
dec
dec
das
aaa
fisttpll
and
or
mov
rcll
call
and
gs
imul
fs
std
or
jle
mov
iret
loope
mov
jns
test
insb
xchg
in
cmp
sbb
adc
lds
stos
fsubrl
mov
mov
pop
jmp
ljmp
mov
sbb
sub
idivb
data16
jle
mov
pop
aad
push
popf
jno
leave
out
mov
ja
divb
lahf
sbb
mov
or
call
mov
repnz
arpl
jae
outsl
ds
sbb
sbb
push
xchg
sar
xor
cmpps
mov
xchg
inc
and
nop
stos
rolb
push
fimull
push
dec
push
mov
ljmp
enter
push
cmp
lods
iret
aas
push
arpl
jl
cmc
ds
or
cwtl
inc
or
and
iret
mov
xchg
loope
xchg
jae
cmovne
insl
xchg
mov
lea
test
nop
scas
xor
mov
mov
mov
dec
mov
aaa
xor
cmp
push
pop
mov
inc
fucomp
sub
and
xchg
jecxz
pop
add
sub
dec
call
sub
or
cmp
push
aad
addr16
rolb
jg
aad
or
xchg
jns
xchg
pop
xchg
cmpsb
popf
rcrb
scas
jb
sbb
add
sbb
out
test
add
les
imull
cmp
add
out
lds
sahf
mov
cmpsl
rolb
mov
and
ret
sbb
jg
and
mov
adc
cld
fs
movsb
jecxz
mov
xor
loopne
jg
and
and
pop
push
stc
jge
loop
cmp
fdivp
cmp
push
mov
inc
cs
inc
sub
adc
fldl
xchg
push
adc
mov
inc
cmp
jl
add
daa
scas
jo
push
cmp
lahf
sbb
lods
jo
jg
pop
jg
cmp
ds
sub
dec
daa
mov
jno
xor
sub
mov
push
pop
popa
mov
loop
mov
pushw
lahf
xlat
sti
adc
ret
mov
filds
fstp
test
dec
inc
sti
sub
mov
lret
or
fsts
shlb
aas
xor
xchg
mov
pop
dec
pop
inc
jns
sbb
leave
pop
mov
lret
mov
push
ljmp
sub
xchg
adc
pop
push
pusha
xchg
mov
cli
xchg
jl
inc
insb
negl
inc
clc
mov
dec
cwtl
push
lahf
push
int
jle
sahf
loopne
adc
cmp
adc
cmp
sbb
mov
jo
into
in
pop
or
dec
sahf
push
push
clc
xor
pop
fs
repz
lods
adc
xchg
add
das
loope
fs
push
pop
cmp
cltd
mov
xchg
fs
mov
push
mov
mov
lret
pop
push
jmp
jo
cmp
xlat
pop
cmp
jp
cmpsb
xlat
fwait
dec
outsl
add
mov
push
mov
fwait
sub
push
lret
jb
arpl
add
test
sahf
add
pop
push
pop
jb
lods
jbe
or
xor
adc
mov
mov
cli
das
shl
in
mov
enter
inc
add
scas
cmp
adc
in
and
sub
xchg
scas
sbb
inc
fucom
jg,pt
xorb
push
test
adc
sub
sahf
stos
gs
fbstp
pop
cmpsb
mov
movb
pop
push
push
push
pop
mov
or
xchg
mov
addr16
iret
or
cmc
jae
cmp
adc
addr16
add
adc
jmp
popa
js
dec
shl
add
mov
add
jecxz
and
insb
je
test
mov
stc
jb
shll
jg
ljmp
add
push
lcall
xchg
roll
mov
cmpsb
xchg
push
dec
mov
add
mov
mull
pop
mov
push
jp
inc
jne
push
xor
xchg
jne
mul
mov
roll
mov
mov
push
dec
int
adc
movsl
pop
push
sub
shl
movsl
push
das
add
sbb
add
mov
in
stc
testb
insb
leave
mov
and
test
aaa
sti
sub
shl
pop
sbb
lds
xor
push
jne
mov
cwtl
jle
sbb
sahf
int3
xchg
mov
sarb
fmuls
cs
xchg
mov
jns
test
cmp
es
sbb
push
mov
jnp
mov
push
outsl
loop
pop
adc
sbb
mov
or
lea
mov
ss
mov
decl
sbb
pusha
stc
sbb
pusha
mov
xlat
sub
or
and
fwait
jmp
push
jns
add
in
iret
ljmp
sbb
and
hlt
les
or
cmp
mov
in
sbb
out
fwait
xchg
cmp
cmp
and
call
mov
add
daa
mov
inc
movsb
push
adcl
xor
popa
test
subl
inc
push
inc
or
mov
lds
jecxz
xor
mov
mov
sub
lahf
pop
stos
sub
sbb
pop
mov
out
mov
mov
push
and
icebp
pop
lahf
cmc
mov
out
loopne
pop
rcll
dec
adc
sbb
iret
dec
jg
xchg
pop
stos
shl
test
mov
sub
scas
cltd
rolb
icebp
cltd
lock
xchg
lea
fcomps
sahf
in
pusha
mov
sbb
ljmp
mov
sahf
xor
outsl
mov
xchg
pop
loop
xorb
shl
and
stc
imul
cmpsb
cmp
out
pusha
add
movsl
xchg
sub
rcrb
ror
fisttpl
mov
push
movsl
neg
cmp
cwtl
aas
inc
pop
loope
in
lods
xor
enter
mov
ss
jbe
jnp
mov
cli
fdivrl
add
sub
inc
lods
nop
cmp
shll
push
sahf
xchg
mov
pushf
add
mov
insb
sbb
push
sahf
sbb
mov
test
add
lcall
dec
outsl
and
xlat
arpl
repnz
shll
xchg
jno
out
pop
insl
daa
and
xchg
ficoml
fdiv
lods
fwait
add
cli
lahf
pop
lds
dec
pop
mov
inc
lcall
lods
shll
pop
add
sti
mov
mov
xor
shr
arpl
add
sub
gs
jns
sub
fs
shll
das
test
sbb
cmp
bound
aaa
cld
lret
mulb
das
js
push
testb
push
mov
frstor
jo
out
fs
mov
shlb
mov
inc
fidivl
pop
leave
inc
sti
nop
and
fimull
mov
dec
sub
les
inc
sub
xchg
mov
jle
mov
add
pop
lret
fmuls
neg
jne
imul
mov
push
pop
int3
sbb
and
icebp
sbbb
test
and
cmp
mov
movntq
push
mov
icebp
xor
sub
call
dec
xchg
mov
xlat
xchg
jle
push
call
sbb
shrl
mov
bound
and
loope
inc
mov
dec
xor
shrb
pop
aas
rcrl
ds
sti
mov
pop
repnz
adc
inc
ret
ds
int
jle
push
xchg
sub
push
pop
or
mov
icebp
push
cltd
xchg
lret
jb
mov
push
xchg
dec
out
jbe
sar
or
jle
xchg
scas
mov
fstpt
mov
mov
push
es
xchg
andl
test
movsl
es
ljmp
pop
xchg
or
fs
das
jl
push
sub
adc
and
cmpsb
pop
clc
lret
cmp
outsl
cli
mov
add
mov
imul
add
xor
cmp
testb
dec
mov
movsb
push
mov
fwait
lds
inc
push
loope
xchg
cmc
inc
aam
inc
shrb
adc
and
outsb
mov
ds
xor
xchg
mov
push
push
or
mov
xor
iret
repnz
ret
sahf
sub
mov
inc
sub
sub
and
push
repz
js
nop
dec
pxor
out
jnp
out
pop
fxch
mov
xchg
cmp
mov
inc
push
les
not
sbb
pop
test
cmp
shll
mov
pop
enter
arpl
add
ret
outsb
add
mov
aas
in
in
cmp
sub
mov
inc
mov
or
faddl
idiv
sar
mov
inc
add
loope
add
fdivr
pop
inc
jmp
jno
jle
mov
adc
adc
data16
sti
hlt
mov
xor
cmp
test
pop
scas
jmp
push
orb
repnz
adc
or
dec
ljmp
adc
clc
mulps
setbe
mov
pop
xor
inc
fadds
insb
sub
and
inc
loop
mov
dec
ljmp
xchg
and
pop
adc
push
ds
mov
push
xor
arpl
xlat
enter
mov
outsb
adcl
std
pusha
outsb
jg
and
and
in
mov
int
lret
test
push
or
pop
ja
outsb
dec
adc
sbb
push
and
arpl
and
cmc
adc
push
stos
xchg
and
jmp
sub
or
test
push
outsb
cmp
inc
add
aaa
fwait
xor
mov
add
or
inc
stos
pop
inc
mov
out
hlt
mov
mov
pop
into
add
mov
lret
xchg
push
or
ss
sarb
mov
test
les
push
repz
loope
flds
push
xchg
cmp
stc
jle
mov
out
in
adcl
cmp
mov
push
sahf
das
or
out
cmp
cmpl
add
cmp
cmp
inc
mov
ret
lds
sub
mov
adc
sub
fidivl
lret
lcall
pop
dec
xor
jo
ret
lods
in
imul
testb
in
test
or
xchg
push
jnp
into
and
cmp
and
mov
inc
mov
loopne
mov
mov
jno
test
xchg
adc
or
neg
inc
pop
jo
pop
bound
push
lea
ds
and
call
arpl
dec
jl
dec
add
ja
test
mov
cwtl
ret
sbb
aam
cmp
flds
sbb
es
mov
addl
mov
or
adc
fldcw
dec
and
clc
cltd
mov
push
nop
in
shl
stos
sub
leave
pop
lds
add
cld
sub
imul
xchg
add
or
mov
daa
ss
jbe
in
jae
sub
call
cmpsb
test
mov
in
add
cmp
pop
mov
xchg
lds
aaa
mov
sti
insl
nop
outsb
cmpsl
std
dec
jle
ds
sbb
sub
dec
divb
mov
out
sub
mov
imul
cmpsl
add
fstpt
xchg
push
test
sti
xchg
xchg
cltd
jl
mov
push
jg
push
in
je
xlat
orl
cwtl
fdivl
dec
mov
or
push
cmp
lcall
mov
jp
in
mov
mov
mov
movl
aad
inc
into
cltd
push
nop
jl
pop
test
mov
push
movsb
mov
add
test
lcall
cmp
jb
in
sub
and
in
push
pop
cmp
mov
cmp
mov
xor
rorl
fs
addr16
dec
out
movsl
push
push
xor
aad
stc
push
fs
jg
sbb
sti
mov
clc
hlt
loopne
add
lret
outsb
cmp
ret
fistl
dec
xchg
lods
insb
jns
jp
mov
push
std
mov
mov
inc
cmc
pop
mov
jae
and
adc
gs
sti
shll
adc
imul
push
and
xchg
das
push
and
lcall
pop
pop
arpl
ds
xchg
lods
cmp
mov
xchg
addr16
add
lret
xlat
mov
mov
movsl
scas
gs
and
mov
xor
mov
fdivp
lds
add
cmovge
xchg
shlb
jne
jo
mov
fwait
push
inc
or
fstpl
sbb
mov
int3
repz
hlt
mov
leave
adc
cli
jle
out
loope
mov
icebp
aam
mov
lcall
push
fsubs
cli
enter
sbb
stos
outsl
jno
cld
dec
cmpsl
icebp
sbb
cmp
ja
pop
ret
push
les
push
shl
push
pushf
int3
sub
jge
or
jo
leave
bound
inc
dec
out
xchg
pop
sbbl
divb
pop
iret
test
stos
xor
bound
pop
pop
or
arpl
lcall
cld
dec
xchg
pop
or
jle
or
inc
mov
jle
iret
adcl
icebp
push
inc
dec
stc
ffreep
dec
xchg
icebp
mov
sub
mov
ja
test
aas
cltd
jae
and
out
xchg
out
notl
inc
sbb
in
movsb
jnp
sub
shlb
sub
roll
sbbl
sub
mov
into
mov
lahf
gs
jbe
push
pop
jae
pop
fwait
pop
and
test
ror
mov
cmp
push
repz
pop
les
sbb
out
stc
push
mov
data16
push
and
jb
xchg
cmp
push
sahf
imul
sbb
xchg
or
je
cmpsl
popa
inc
das
push
jno
mov
mov
jae
gs
test
jp
mov
mov
sbb
jp
inc
clc
sbb
and
stos
ficoml
mov
mov
pop
stos
xchg
movl
adc
push
shl
push
sbb
sbb
xchg
addb
xchg
loopne
pop
sbb
lods
dec
push
cs
fidivs
fwait
adc
mov
add
mov
mov
push
mov
xor
hlt
push
aaa
push
sub
jbe
pushf
orb
inc
sti
cmc
dec
in
jp
loopne
sbb
cltd
leave
dec
push
lahf
fs
xchg
and
in
xchg
inc
out
mov
pop
adc
push
cmc
adc
sbb
push
aad
sub
mov
jo
fcoms
xorl
push
mov
sbb
nop
mov
call
jbe
daa
in
inc
mov
pushf
mov
stos
into
sub
test
mov
jle
fldt
fsubrs
out
js
push
mov
cmp
ljmp
lret
adc
pop
into
xchg
add
je
xchg
addb
sbb
push
jge
dec
mov
test
repz
loope
push
mov
je
pop
scas
ret
mov
xchg
pop
arpl
shl
sbb
stc
jecxz
jnp
and
adcb
pop
adc
cmp
xchg
pushf
pop
lock
mov
fwait
aaa
jnp
and
inc
push
jo
xlat
mov
dec
int3
leave
ret
mov
data16
lret
ss
cvtps2pd
mov
cmp
mov
insb
imul
hlt
jecxz
pop
xchg
push
sub
dec
popf
sti
sbb
sahf
lret
mov
jmp
push
fs
sbb
divl
gs
cld
push
lret
hlt
sub
push
outsl
hlt
ss
xlat
sti
xor
sarb
roll
fsubs
ret
rolb
sub
test
jecxz
xchg
fildll
js
lea
or
mov
pop
scas
out
push
add
cmp
jnp
int3
and
imul
mov
aad
fsubrl
mov
push
push
push
and
pusha
in
mov
mov
stos
pop
add
popa
mov
arpl
mov
mov
jnp
filds
add
movsb
mov
neg
lock
in
popf
cmpb
adc
sarb
push
sbb
fwait
or
aaa
fsubl
jo
xchg
push
sub
out
xor
dec
pop
ja
cmp
pop
enter
flds
mov
je
xchg
push
hlt
fwait
adc
sarb
into
pop
and
mov
lret
bound
fwait
in
outsb
fnstenv
mov
shll
stc
mov
mov
data16
push
cmp
push
idivb
insl
pop
inc
stos
xchg
lock
adc
in
loope
jo
outsl
pop
cmpb
es
dec
scas
sbb
mov
lods
subl
enter
jmp
and
adc
pop
jg
repnz
xchg
lods
mov
fsubl
pop
or
xorb
mov
imul
pop
ds
inc
jle
xchg
faddl
adc
or
and
ret
int
mov
inc
loope
ret
mov
popl
sub
in
dec
dec
aaa
mov
mov
sbb
sbb
dec
and
xchg
push
inc
or
stos
out
inc
call
andl
rcl
orl
cs
std
mov
ds
fwait
xchg
lods
jmp
dec
push
call
cmp
cmp
aaa
fmull
cli
mov
sbb
cmp
mov
or
mov
mov
jecxz
sub
outsb
daa
out
push
cltd
sbb
jle
cmpsl
jo
mov
and
cwtl
sti
aad
jo
push
pop
pop
jl
mov
fmul
int3
repnz
or
sbb
add
pop
dec
push
mov
mov
jge
pop
mov
insl
outsb
jnp
dec
cmp
mov
inc
and
imull
fidivl
imul
and
adc
idivl
daa
push
sub
mov
loop
cmp
js
testb
mov
das
dec
push
stc
or
cmp
sub
push
jge
les
popa
test
xchg
sub
xlat
sbb
push
mov
xor
cmpb
sarl
rorb
xlat
sbb
notb
sbbl
inc
int
add
push
mov
sub
jns
repz
outsl
push
pop
frstor
or
mov
xchg
mov
sub
popf
adc
mov
adc
dec
adc
scas
fwait
cmp
xorl
seta
sbb
and
sub
pop
lock
or
or
jle
cwtl
jmp
rclb
mov
inc
pushf
cli
push
aad
scas
fs
clc
add
addb
idivb
outsb
mov
rclb
fwait
add
adc
addl
enter
scas
inc
loop
sbb
push
adc
cmp
push
sbb
cltd
nop
dec
mov
inc
inc
push
imul
sarb
mov
addr16
loope
movsl
mov
leave
mov
notl
imul
in
push
repnz
push
into
jge
jnp
mov
cltd
pushf
movsl
ret
mov
mov
sbb
or
adc
outsb
ret
cwtl
sbb
lahf
inc
add
or
jne
and
sbb
lret
loope
push
ficoml
inc
mov
add
and
jb
insl
jno
inc
lret
and
xor
add
push
shrl
mov
pop
aam
add
mov
stc
pop
or
dec
jecxz
dec
or
test
and
cmp
dec
sti
je
mov
in
cmp
dec
jl
scas
jns
push
test
insb
pushf
lods
sbb
fdivl
mov
and
jl
jl
cmp
mov
cmp
fstpt
fnstsw
pop
mov
xor
out
bound
sub
into
test
inc
pop
xor
pop
lahf
loop
lahf
mov
test
xor
ret
jp
sbbb
out
adc
mov
cmp
xchg
ds
xchg
adc
sarl
out
repz
bswap
jecxz
and
lods
cmp
pop
ljmp
push
pop
repnz
inc
cmp
lock
cmpsl
push
pop
fninit
mov
cmp
rolb
mov
xchg
aaa
mov
fwait
cs
mov
or
hlt
addr16
nop
jne
out
andl
mov
inc
in
hlt
inc
fnstenv
test
int
cmp
stos
mov
aas
xor
inc
dec
push
repz
fisttpll
dec
cmc
pop
rorb
scas
jle
xor
xchg
cmp
xchg
and
sahf
adc
cmp
lcall
pop
sub
pop
scas
lods
aaa
adcb
rclb
sbb
int
dec
or
mov
iret
sub
push
daa
jp
fldt
add
xchg
and
dec
cwtl
les
scas
pop
lret
push
lea
add
iret
jmp
xchg
test
mov
push
adc
xchg
jl
xor
outsb
or
pop
mov
or
pop
jb
cmp
push
sbb
and
iret
adc
pop
cltd
leave
mov
sbb
dec
mov
bound
mov
testl
mov
add
or
rorb
or
outsb
mov
mov
add
mov
adc
fimuls
ret
imul
inc
dec
push
inc
sub
push
xlat
jecxz
hlt
add
test
mov
rol
out
pop
sub
mov
repnz
push
mov
cmpw
or
cltd
or
mov
inc
mov
stos
inc
cli
jmp
inc
bound
adc
push
mov
fadds
push
pushf
mov
movsb
scas
lahf
mov
inc
push
pop
aam
adc
mov
mov
stc
lods
insb
dec
mov
xchg
push
cltd
popa
dec
inc
or
out
in
call
and
fdivs
pop
test
fldt
fs
pop
in
fldenvs
push
pop
pop
or
arpl
or
iret
xchg
cli
imulb
lods
mov
movsb
mov
aad
xchg
pop
gs
push
iret
or
adc
rol
clc
jbe
incl
loope
sbb
and
xchg
nop
cwtl
sub
cld
mov
add
push
aas
fnstsw
xchg
mov
cwtl
push
je
inc
xor
adc
dec
repz
jecxz
ljmp
out
adc
xchg
or
inc
test
add
in
jns
bound
adc
lret
outsb
add
es
push
lahf
inc
mov
loop
in
popa
push
dec
insl
nopl
cmpsb
sbb
nop
push
push
xchg
andb
cli
mov
inc
int
ja
orl
aaa
stc
imul
jb
lock
insb
mov
fs
sub
out
fmul
sbb
fiadds
clc
push
inc
stc
mov
jae
push
movaps
loopne
mov
xor
sti
add
xchg
bound
jo
xchg
adc
inc
sub
fdivrl
lcall
mov
pop
arpl
inc
aam
out
mov
sbb
fisttpll
jge
mov
lahf
dec
inc
xor
mov
test
gs
dec
add
outsb
sahf
add
cltd
mov
push
lds
dec
pop
in
xchg
push
andl
daa
shlb
adc
ds
dec
mov
cmp
adc
mov
test
inc
clc
es
jbe
fwait
loope
test
fwait
inc
sub
xor
and
in
push
cmp
dec
mov
cmp
aas
out
mov
push
cmpsb
in
js
movsl
imul
xchg
pop
inc
dec
xor
outsb
mov
lret
scas
loope
mov
pop
inc
rcrb
mov
mov
push
inc
mov
mov
xchg
mov
xchg
jno
sub
mov
jl
add
outsl
test
aaa
lods
loope
movsl
add
sub
or
and
lods
aam
push
add
stos
pushf
jl
bound
dec
cmp
xor
jg
push
ja
and
jbe
jne
or
movsb
inc
loope
sub
rolb
addl
imul
int
dec
mov
cmpsl
or
push
fcom
xchg
mov
test
test
es
out
adc
ficompl
sub
cmpsl
loop
lods
mov
and
and
cs
stc
inc
rolb
xorb
lock
xchg
adcb
mov
fnclex
mov
cmp
xchg
dec
pop
rcrb
lret
and
imul
repnz
adc
mov
std
in
loopne
jns
cmovl
repnz
mov
movsb
and
scas
lret
repnz
xor
sbb
iret
and
push
outsb
jno
mov
imul
push
adc
shlb
mov
icebp
popf
jne
xchg
bound
ret
pop
repz
adc
jmp
and
pusha
push
lret
fxch
aam
in
inc
popa
cmp
or
xchg
enter
xchg
bound
and
cmp
push
xchg
sub
sbb
mov
pop
aas
bound
inc
cmpsl
push
mov
or
push
inc
mov
lea
cwtl
andl
xor
xor
addr16
ds
jbe
data16
adc
loop
lahf
lods
pop
int
push
test
cmp
insb
adc
pop
adc
sti
out
leave
ds
movsb
popa
and
lret
in
xor
sbb
fldt
jmp
test
dec
sub
in
jp
movsl
mov
cmp
imul
aas
push
mov
xchg
jno
add
push
xor
out
arpl
mov
sub
and
xchg
cmp
test
in
into
inc
testl
mov
mov
push
xchg
mov
js
xchg
clc
shlb
jne
out
push
dec
xchg
and
dec
sbb
arpl
cltd
adc
in
xor
lahf
mov
into
cltd
and
sub
cmp
and
push
in
sub
out
rolb
and
out
xchg
mov
xchg
imulb
int3
insb
daa
cmp
testl
dec
fdivrs
cmp
jmp
popf
test
jne
inc
aaa
inc
ljmp
insb
lea
test
sub
and
inc
push
mov
fldt
dec
stc
sbbb
pop
aas
imulb
inc
in
loop
nop
jg
push
mov
clc
mov
and
sub
push
mov
xchg
mov
xchg
das
divl
jecxz
xchg
dec
or
mov
int3
popa
fstps
test
cmpsb
jno
mov
fisttps
iret
cmp
lods
xor
inc
into
pop
sbb
fwait
hlt
call
int3
shl
or
mov
cmp
and
mov
fisubs
adc
pusha
mov
std
in
sbb
or
out
jmp
into
jnp
adc
xchg
pop
mov
fsubl
mov
fisttps
pop
pop
gs
out
sbb
sub
mov
negb
mov
loopne
flds
icebp
stos
mov
cwtl
sti
inc
xchg
xlat
and
sbb
arpl
xchg
aad
add
jg
or
ret
xchg
sub
idivl
imulb
add
mov
adc
jmp
test
jnp
adc
pop
ljmp
push
subl
aas
jmp
mov
mov
test
xchg
inc
insb
bound
loopne
loope
popa
xor
stc
pushl
cmp
xchg
test
push
test
ja
pop
rcrl
subl
pop
mov
rclb
cmpsb
push
and
std
lcall
popa
hlt
sbb
enter
mov
adc
lcall
cmp
or
arpl
lret
fwait
mov
cmp
jnp
leave
pop
sub
inc
pop
adc
pop
xor
repnz
xchg
jg
sub
icebp
fs
jno
in
jge
sti
dec
xchg
pusha
xchg
cmpsb
sbb
dec
cmpsl
hlt
mov
scas
pop
adc
push
stos
pop
mov
jae
or
pop
inc
fdivr
mov
andb
mov
jne
pop
gs
ss
xor
inc
pop
lea
cmp
xor
add
insl
cmpsl
mov
xchg
loope
xchg
ret
movsb
lods
std
insl
jns
out
clc
incl
mov
push
arpl
jmp
pop
fwait
push
fimull
and
ds
xchg
and
mov
stc
dec
outsb
add
aad
mov
mov
std
xchg
jge
loop
insb
ret
adc
andb
clc
jae
leave
dec
fst
out
test
and
jae
xchg
out
inc
dec
pop
xor
adc
and
test
repnz
sbb
cwtl
mov
jmp
push
gs
pop
xor
call
pop
and
push
aaa
enter
add
jno
mov
xchg
test
mov
int
push
mul
out
and
popa
mov
cmp
notb
and
addl
stos
addb
lret
dec
lret
rcrl
in
pop
inc
shll
gs
sbb
sahf
bnd
mov
test
outsl
test
pop
fsub
or
and
negl
pop
mov
mov
stos
in
out
push
pop
pop
add
cmp
hlt
outsl
ss
xor
hlt
cmp
adc
xchg
jmp
inc
mov
jb
inc
dec
adc
and
nop
xchg
gs
mov
sti
imul
aam
loope
pushf
addl
daa
xchg
ret
xchg
daa
enter
cmp
add
mov
mov
or
or
cmp
aas
les
pop
mov
adc
gs
dec
and
scas
idivb
mov
popf
daa
mov
fldl
out
mov
adc
mov
lea
cltd
mov
xchg
sub
jns
cmp
addb
mov
pop
pop
jno
inc
adc
lea
mov
xor
std
mov
shlb
inc
popf
jno
dec
xchg
mov
inc
xchg
dec
mov
xor
jmp
xchg
jo
inc
insb
mov
jns
subb
push
je
aas
cmpsb
mov
dec
cwtl
fistps
pop
mov
or
mov
pop
pop
fs
cmp
insb
push
pusha
jp
pop
lret
push
xchg
lods
and
mov
jnp
in
shr
movsb
and
divl
lcall
push
push
popf
jmp
pusha
sbb
mov
adcb
pop
idiv
inc
lret
test
in
sarl
roll
push
cwtl
aam
adc
mov
push
pop
call
pop
dec
ljmp
lods
pop
call
mov
fsub
hlt
adc
jmp
cld
clc
push
mov
push
sbb
push
adc
icebp
jmp
push
dec
les
jae
outsl
inc
inc
xchg
xchg
divb
xchg
or
call
inc
or
mov
jmp
in
mov
sbb
dec
and
leave
push
roll
jmp
lcall
inc
sub
push
insl
mov
repz
jge
mov
mov
mov
jns
jle
mov
inc
mov
loope
jecxz
add
cmp
sbb
and
add
sbb
sbb
and
xor
xor
push
pop
mov
xor
push
cli
andb
sub
popa
dec
add
push
jge
jle
xchg
adc
in
push
out
loop
repz
sub
sbb
fnstenv
push
add
cmp
xchg
jmp
cs
lock
cmpl
in
cs
add
push
inc
jae
dec
sub
xchg
jge
mov
out
scas
adc
call
dec
gs
jo
mov
arpl
sbb
test
fisubrs
and
iret
cltd
xchg
inc
inc
dec
lcall
ds
lods
repnz
lea
icebp
mov
je
inc
sub
es
add
rol
clc
push
pop
lret
rorl
xor
aam
sub
cmp
xlat
adc
mov
jg
repz
mov
mov
js
mov
jmp
scas
pop
std
xchg
or
sahf
mov
lods
out
or
stc
jle
lods
xor
inc
int3
mov
jl
es
cmpsb
test
inc
ficomps
xchg
cmp
pop
movaps
test
ret
push
fiaddl
clc
roll
mov
ret
ret
push
test
fwait
pop
xorb
in
sarl
out
xchg
pop
push
pop
xor
inc
xchg
pop
fistl
mov
xlat
mov
sub
mov
insb
push
pop
stos
out
lahf
fimuls
push
popa
icebp
sarb
lahf
iret
mov
movsl
and
and
push
and
xchg
and
mov
mov
push
sti
stc
mov
ror
enter
pop
cli
mov
xor
inc
lret
or
mov
repnz
cmp
cmpsl
cmpsb
dec
xor
int3
call
in
adc
lret
xor
ja
fiadds
sub
sahf
lods
push
inc
scas
out
clc
dec
roll
mov
clc
push
mov
jne
subb
mov
ss
xor
outsl
inc
adc
test
iret
mov
scas
sbb
mov
call
mov
int3
pop
jg
arpl
lret
movsl
pop
in
rclb
xor
in
jne
cmpsb
in
xchg
bound
dec
repnz
gs
ret
aam
jl
push
mov
mov
mov
fnstcw
lret
mov
xchg
and
daa
ljmp
femms
adc
sub
sub
sti
out
ret
mov
faddl
sbb
pusha
adc
mov
jp
pusha
dec
outsb
aad
test
popa
xlat
pop
iret
mov
or
pop
pop
inc
xchg
insl
add
lahf
cltd
mov
das
jbe
pop
sub
fstpl
loop
adc
dec
imul
ds
mov
sub
jbe
call
aas
aaa
cmpsb
bound
mov
inc
in
dec
mov
push
add
gs
or
xor
in
movsb
hlt
sub
mov
cmp
pop
lret
lahf
testl
or
adc
mov
cmp
in
repnz
xor
xchg
mov
mov
xor
mov
ret
xor
lods
mov
and
sub
testl
dec
into
outsl
out
sub
cmp
into
mov
inc
xchg
mov
push
ds
int
mov
adcl
mov
pop
push
ja
jo
add
mov
sbb
pop
push
jnp
out
leave
fmuls
mov
add
cmc
ja
mov
inc
aam
add
inc
xchg
lds
mov
push
lcall
lret
inc
sbb
call
insb
out
inc
add
mov
lahf
push
dec
sbb
mov
pop
cmp
add
in
add
addr16
inc
sub
pop
jmp
mov
sahf
inc
inc
sbb
lods
cmc
or
inc
cmp
outsl
add
neg
test
into
jne
adc
push
fwait
mov
jbe
call
aad
or
popa
push
adc
sub
and
in
dec
lock
push
test
mov
adc
dec
movsb
xor
je
scas
mov
call
incb
add
dec
push
mov
mov
sbb
add
push
stos
mov
stos
cmp
idiv
xor
insb
aaa
mov
jno
std
nop
mov
inc
jge
or
sub
ss
jge
xchg
inc
arpl
mov
jbe
jle
call
mov
aas
push
fbstp
inc
jns
out
lahf
mov
data16
sub
push
fildll
scas
jne
adc
sbb
adc
xor
mov
enter
cmp
les
imul
lcall
stos
sub
xchg
pop
inc
imul
xchg
jp
ds
xchg
jb
mov
mov
sarb
arpl
cmp
sub
push
pop
sub
sbb
incl
into
push
pop
mov
mov
loope
scas
xor
cmp
cmp
ja
jp
push
kmovb
xlat
cwtl
mov
loope
adc
jnp
aam
loope
mov
add
inc
mov
fidivrl
sub
mov
pop
je
icebp
call
dec
mov
push
mov
mov
shrl
cmp
lods
dec
push
aas
movsl
mov
sbb
dec
pop
pushl
pop
push
add
mov
filds
sahf
mov
cltd
mov
dec
mov
lds
cmpsl
imul
mov
ffree
push
cmp
rcr
into
jl
test
insb
into
cld
insb
add
loopne
cltd
cmp
inc
fmull
xrelease
lret
push
sbb
mov
push
push
decl
testl
dec
xor
or
and
sub
xor
gs
push
mov
dec
mov
mov
mov
outsl
or
aam
dec
rcrb
cmpsl
and
lods
addr16
dec
xchg
dec
xor
push
fs
loope
out
push
ds
dec
sbb
adc
call
decb
dec
std
push
pop
cltd
sbb
mov
jle
jmp
jbe
aaa
imul
mov
sbb
loopne
fs
jo
mov
sbb
lahf
in
mov
in
mov
mov
fwait
lret
jge
fcomps
pop
push
and
ds
cmp
cmpsl
fs
imul
fucomip
sub
cld
cld
pop
xchg
sti
pop
xor
js
push
movsl
dec
xlat
mov
popa
and
popa
out
pop
imul
ljmp
pop
out
fucomip
bound
lods
in
mov
je
icebp
cmp
add
loope
mov
dec
shlb
scas
roll
inc
cmp
test
je
xchg
movsl
repz
mov
jno
clc
push
push
stos
mov
push
scas
sbb
cmp
enter
xor
sahf
pop
xchg
sbb
sahf
leave
imulb
xor
std
addr16
fldcw
pop
adc
jns
test
pop
inc
push
in
adc
movsl
dec
out
sbb
inc
icebp
cmp
lock
and
sbb
mov
jge
lods
jae
shlb
and
pushf
xchg
push
inc
fbld
popf
pop
sub
out
xchg
mov
lahf
xchg
aaa
xchg
ret
xor
sub
mov
test
mov
iret
out
test
inc
iret
gs
adc
adc
out
xchg
ja
fwait
pop
sbb
dec
xor
sbb
icebp
imul
loop
sti
in
jo
out
es
adcl
daa
lret
test
inc
pop
scas
loop
aad
out
xchg
mov
jl
std
xchg
ds
test
cwtl
js
mov
cmp
push
fs
push
push
sbb
push
inc
rcll
hlt
mov
adc
sbb
mov
gs
cmp
mov
lcall
lock
mov
in
xlat
aam
add
bound
mov
call
fwait
push
add
in
sbb
or
xchg
out
imul
cltd
mov
bound
mov
repnz
leave
out
jg
loope
mov
jge
pop
sbb
add
mov
or
stos
repz
mov
movsb
cmp
cmpsl
repnz
pushf
add
sub
test
ja
leave
pop
or
xchg
jnp
mov
jnp
lcall
pushf
xchg
ja
fimull
xchg
sub
clc
mov
mov
inc
ficoml
add
ja
push
repz
sti
in
dec
jmp
pop
xor
movsl
xchg
adc
cs
sahf
loope
jge
rcrl
movsl
fcmovb
scas
push
addb
rcrb
sbb
cs
push
xor
sub
dec
mov
cld
add
inc
out
adc
cli
in
jae
addr16
xlat
push
rclb
aaa
sub
jl
lcall
push
dec
mov
xor
inc
pop
enter
pop
aas
hlt
imull
add
jle
sbb
jle
jne
or
jbe
addr16
xor
in
or
pop
push
mov
sub
xlat
mov
loopne
and
xchg
fstps
fimull
imul
stos
inc
mov
jns
sti
mov
xchg
add
jnp
ja
mov
out
pop
int3
adc
out
ja
dec
jne
fwait
or
inc
daa
jae
dec
mov
xchg
sbb
mov
addr16
cld
adcl
ss
out
sbb
inc
cmc
jo
into
push
nop
push
inc
pop
jg
sbb
dec
lcall
mov
out
dec
ja
lret
shl
outsb
cmpsb
pop
cld
dec
and
cmpsl
push
sbb
push
dec
inc
testb
mov
mov
fs
fstl
jne
jnp
push
xchg
lret
insb
aam
int3
inc
jle
push
xor
xchg
repz
or
fwait
cmpb
mov
pop
fs
sbb
jg
ret
lcall
sbb
and
xor
mov
xchg
iret
xchg
das
stos
adc
lret
sbb
imul
sbb
sti
ljmp
cmp
xchg
iret
pop
lea
faddl
loope
xchg
dec
repnz
jne
dec
sbb
cli
xchg
mov
data16
sub
bound
and
sub
xchg
dec
adc
loop
xor
adc
out
sbb
data16
hlt
aaa
clc
outsl
cmc
jb
add
imul
out
xchg
xor
mov
test
lds
and
xor
mov
sub
nop
jo
or
mov
dec
ds
std
dec
dec
xchg
push
rclb
cmpsb
mov
lea
movsb
lock
or
mov
xchg
mov
ds
cltd
adc
add
jl
or
push
sbb
cmp
and
ljmp
mov
aaa
xchg
popl
sbb
jae
rol
jo
pop
int
test
out
ljmp
leave
pop
pop
inc
nop
mov
int3
cmp
mov
dec
faddp
sub
ss
nop
pop
jne
or
sub
ficoms
xor
jno
div
jbe
gs
call
mov
pop
popf
pop
nop
ret
dec
pop
mov
in
in
push
decl
sbb
mov
ljmp
pop
jno
popa
dec
cli
fs
pop
and
push
xchg
lea
inc
je
lcall
loop
in
xor
mov
out
nop
add
xchg
aas
in
and
cli
insl
movsl
mov
sarl
or
mov
fcomi
jae
in
jg
mov
add
test
jnp
cld
test
outsb
mov
cmc
add
xor
stos
ret
fcomps
push
xor
jno
pop
push
sbb
cmp
inc
aas
mov
out
loop
int
movsb
popf
pushf
rolb
jb
negb
inc
sbb
and
rcl
mov
loopne
push
rorl
cli
sahf
mov
aas
loop
push
jae
shll
mov
pusha
loopne
jno
sbb
das
scas
cmp
gs
icebp
inc
stc
mov
cld
testl
and
ds
les
mov
push
xlat
imul
andl
das
fildll
gs
loope
and
jl
and
pop
and
mov
inc
das
mov
jne
in
fcoml
sahf
xor
inc
and
dec
movsb
psubd
vpmuludq
cmp
xchg
or
adc
pop
push
jae
addr16
jne
cmp
icebp
and
movsl
dec
idiv
pop
daa
jl
int
sbb
cmp
jle
fbstp
or
mov
fisttpll
js
test
ret
mov
pop
jp
mov
andb
aaa
out
push
mov
andb
jp
ljmp
clc
mov
mov
push
xchg
movsb
pop
fsubr
inc
popf
test
and
aaa
jns
or
mov
ljmp
dec
shrl
inc
aad
sub
cmp
mov
std
jmp
sbb
or
test
pusha
ss
push
loopne
orl
ret
sub
repz
cmp
ret
pop
aas
inc
lods
cld
call
mov
cmc
repz
sbb
dec
adc
test
lock
mov
push
and
je
mov
les
xchg
mov
jecxz
dec
sahf
inc
mov
sub
iret
sub
test
movsl
imul
xchg
cli
push
mov
int3
push
mov
fstpt
fstps
ret
add
pop
sarl
sub
inc
fmul
xchg
movsl
sub
fwait
shl
pop
enter
jl
jno
xchg
pop
stos
fsts
pop
add
xor
push
fstl
std
dec
ljmp
imul
add
sub
cmp
rclb
and
loope
std
add
jne
jl
or
lds
push
or
mov
cmp
jg
dec
in
adc
inc
pop
cli
mov
pop
add
testl
or
mov
add
rcll
and
ret
ljmp
rclb
or
jno
ret
loopnew
pop
imul
mov
lods
stc
inc
rep
iret
in
dec
pop
push
push
clc
jnp
test
cmp
rclb
mov
pop
inc
xor
arpl
lock
shlb
dec
scas
pushf
scas
xchg
dec
fs
icebp
cmp
sub
testb
cli
mov
stos
jnp
push
add
scas
cmp
or
pop
in
pusha
lods
imul
std
xor
or
mov
or
add
aad
pop
add
pop
repnz
pushf
mov
rorl
sbb
rcrb
lcall
fdivs
ss
fmull
jae
sub
scas
pop
jecxz
shlb
jecxz
mov
rcll
mov
in
mov
pop
repnz
and
fmuls
or
jecxz
cmp
add
cmp
jo
adc
std
shl
or
sub
sub
jl
or
sub
loopne
and
jns
aad
scas
and
pop
in
gs
inc
rcrb
cmp
sub
sbb
jl
jge
ret
sbb
test
push
xchg
lods
les
lret
aas
push
filds
sbb
xor
jg
int
or
cmpsb
cmc
add
mov
arpl
fwait
insb
popf
jns
xchg
mov
pop
push
insb
aad
pop
mov
rcr
repnz
xchg
stc
push
mov
fbstp
rcrl
ret
stos
sub
lret
aas
es
daa
fisttps
daa
inc
pop
in
clc
fs
dec
pop
or
mov
mov
jne
sbb
fiaddl
xor
mov
cmpsb
js
fucom
mov
shl
xchg
sahf
xor
aas
push
inc
xchg
fldt
scas
inc
mov
adc
cmp
mov
lahf
cmp
ja
into
jl
sbb
cmp
mov
mov
mov
sti
insb
adcb
cmp
xchg
mov
insl
xchg
mov
or
jno
adc
shll
mov
push
mov
fcom
sbbb
in
inc
fldt
pop
lahf
push
jmp
sub
adc
jl
aaa
out
xbegin
scas
xor
pop
jge
test
dec
shlb
movb
push
loopne
lods
mov
cwtl
clc
rclb
testb
push
imul
xor
mov
es
xor
daa
out
pop
push
lcall
pusha
pop
dec
in
pusha
adc
pusha
adc
push
cmpsb
loope
xchg
lret
ds
popf
call
rcl
addr16
mov
xchg
push
mov
mov
add
das
cmp
test
ret
outsb
jb
shl
sub
push
mov
stos
dec
sub
jp
lret
int
and
das
aaa
cmpb
add
cli
test
shlb
xchg
mov
or
scas
lret
lods
or
or
pop
fmulp
imul
inc
mov
scas
mov
xlat
adc
adc
lcall
inc
loop
mov
scas
sbb
fmull
ret
sub
jg
iret
stos
aas
push
xchg
ret
dec
lods
mov
jmp
mov
cmp
pusha
and
addr16
ret
dec
into
mov
jb
ret
jg
pop
pop
sub
sub
mov
test
inc
push
cmovg
les
jmp
sbb
push
dec
mov
data16
inc
pop
inc
fidivrl
or
adc
mov
call
xchg
dec
jle
dec
cmp
xchg
mov
xchg
in
jne
aas
xchg
mov
push
scas
push
mov
and
sbb
xchg
fistpll
and
rorb
pop
jmp
adc
rclb
mov
inc
push
mov
cld
xor
fsub
mov
dec
fadd
or
add
xchg
add
les
push
pop
hlt
mov
or
adc
sub
fidivs
les
clc
dec
mov
mov
aad
ss
mov
push
dec
cmpsl
gs
aas
repz
cmpsb
les
mov
aam
out
inc
xchg
clc
adc
dec
mov
mov
cmp
fmull
sbb
dec
scas
dec
loope
mov
inc
imul
pushf
push
sub
jno
les
mov
movsl
fidivrs
push
rclb
imul
movl
jbe
insl
lret
and
mov
popa
cli
push
popf
test
and
subb
inc
or
adc
int
cwtl
testl
sarl
xor
js
sub
adcl
and
lret
repz
call
xlat
aam
and
imul
mov
insb
sbb
mov
jae
pop
push
mov
out
insb
xchg
std
xchg
sbb
gs
mov
cmc
dec
ret
xlat
addl
test
mov
add
pop
push
loop
aam
jb
add
pop
mov
push
mov
pop
sub
das
loope
push
nop
pushf
ss
add
scas
lds
mov
inc
mov
cmp
inc
cld
cltd
or
jp
cmpsb
xchg
adc
imul
stc
loope
xor
xlat
sbb
xchg
jge
push
push
sbb
in
outsl
fsubrs
sub
xchg
movsl
vpackssdw
adc
sbb
xchg
rcrl
adc
xor
pushf
sub
xchg
test
cmpl
mov
aaa
mov
fsubl
shlb
push
ja
sahf
push
or
bndstx
mov
sub
pushf
mov
mov
jns
sti
mov
lcall
insb
rcr
dec
dec
pushl
mov
outsb
movsl
and
mov
loop
mov
repz
std
push
int3
arpl
scas
jp
cltd
cmp
lret
ss
jb
dec
addl
aaa
test
dec
or
fsubrp
rcll
fldt
push
aad
pop
push
sub
sub
push
mov
jb
outsb
fchs
pop
or
or
loop
test
loope
ret
jns
bound
mov
data16
nop
repnz
roll
imul
fs
mov
loopne
mov
or
popf
push
mov
aas
int
jnp
mov
jmp
jo
movsl
shl
pop
scas
sbb
in
shll
pop
in
fcompl
pop
jmp
in
ss
inc
int
xchg
loope
in
mov
ret
sub
sub
stos
and
push
mov
shl
and
xor
jbe
lahf
push
in
add
cld
mov
nop
dec
dec
loop
or
faddl
outsl
push
dec
sti
dec
cwtl
dec
pop
pop
pushf
les
or
sub
cmpl
cmp
pop
lods
dec
jae
ja
shlb
aad
movsl
movsb
ret
in
and
mov
scas
dec
xchg
pop
loopne
aam
adc
pop
xchg
mov
adc
lret
and
cmpsl
xor
mov
xchg
imull
icebp
or
pop
jecxz
das
cld
push
sahf
fcompl
out
push
nop
in
mov
aaa
in
xor
sahf
sahf
sub
ret
dec
pop
sar
loopne
pop
sbb
cmp
or
add
shr
pop
dec
xor
or
jae
or
sub
scas
out
stos
sub
mov
icebp
pop
shll
jp
adc
sbb
test
or
orb
movsl
out
mov
mov
out
add
jecxz
sbb
rorb
jb
fistl
outsl
sub
mov
movsl
xchg
divps
test
xor
dec
adc
jns
dec
popa
cs
aam
sbb
ret
cmc
mov
or
sbb
fdiv
pop
add
and
dec
xor
xor
out
mov
jns
mov
mov
xchg
add
inc
push
pop
jp
jmp
lock
rcr
ja
sub
cmp
or
xor
push
out
xchg
xor
mov
aaa
mov
jp
ss
cs
jecxz
lahf
jnp
pop
test
jb
push
loope
pop
cmpsb
xchg
pop
stos
enter
adc
mov
pop
push
fisubrl
inc
ret
shrb
pop
fwait
loope
fwait
pusha
sub
cmp
lea
jo
mov
push
inc
decb
mov
fwait
adc
xchg
ficoml
int3
iret
mov
jecxz
cmc
or
ljmp
test
jmp
aaa
mov
clc
push
iret
lcall
aad
adc
mov
pusha
sbb
sub
inc
sahf
mov
push
push
addr16
outsb
pusha
mov
cmc
aas
jae
rorb
sub
xor
movsl
aad
xchg
imul
mov
int3
daa
or
sbb
pusha
cmp
cmp
insl
cmc
aad
dec
add
sub
cmp
bound
pop
and
push
cmp
or
jge
fisttps
pop
pavgb
in
js
stos
out
add
dec
loope
jp
and
or
stc
call
out
dec
fimuls
push
jmp
add
jne
pop
mov
jnp
movsb
imul
inc
xchg
popf
sbb
cwtl
ds
mov
pushf
repz
mov
fisubrs
in
mov
testb
fcom
add
std
or
adc
mov
popf
mov
sub
mov
lock
xchg
mov
fwait
add
dec
jnp
push
test
adc
and
push
aaa
dec
xchg
divb
ds
fstpl
pushf
xchg
cmpsb
test
mov
jp
lret
mov
mov
mov
idiv
pop
cmc
cmpsl
out
adc
push
loope
outsb
xor
or
mov
xchg
loop
sarb
jmp
mov
mov
push
mov
mov
mov
pop
dec
outsl
inc
mov
pop
add
and
dec
dec
cs
mov
push
push
lret
mov
addr16
movsl
add
sbb
or
nop
sbb
pop
aad
pop
xor
adc
mov
pop
out
hlt
push
pop
sarb
loop
mov
leave
lds
add
xor
dec
in
jb
mov
sbb
jge
sub
test
sbb
inc
xchg
sahf
outsl
push
dec
pop
xlat
mov
cmpl
call
xor
adc
xchg
out
mov
std
push
push
out
and
ret
fbstp
adcl
rcrb
adc
jno
ljmpw
loope
push
and
aaa
mov
icebp
fidivl
mov
shl
int3
jmp
mov
sti
jo
cmp
or
mov
add
sar
into
das
sub
sub
adc
mov
pop
add
aas
mov
pop
push
hlt
dec
lahf
adc
push
xchg
and
xorb
pop
clc
sub
lahf
or
push
add
outsb
loopne
daa
cwtl
je
ljmp
imul
idivb
adc
mov
jecxz
dec
fcoms
mov
push
bound
gs
sub
mov
jne
sbb
xor
sub
mov
imull
adc
inc
xchg
pop
push
insl
arpl
xchg
sbb
xchg
addr16
pusha
fidivrl
repz
pop
pushf
xor
or
xchg
sbb
dec
lret
or
mov
jno
sub
push
add
xor
lock
xchg
test
and
sub
fsts
sbb
lret
dec
jge
fiaddl
shlb
mov
fcoml
test
xor
mov
and
or
cli
push
push
jb
lods
mov
mov
mov
pop
sub
dec
andb
push
cmpsl
mov
pop
add
sti
jl
inc
imul
adc
out
es
cmp
test
jae
out
push
out
in
jo
inc
push
addr16
div
dec
pop
xor
stos
mov
cli
or
push
adc
popa
cld
lahf
jg
mov
iret
or
test
push
or
sbb
inc
movsl
fcmovnbe
adc
hlt
add
mov
enter
test
fcomip
mov
test
iret
fldl
out
dec
ja
cmpsb
fcoms
mov
cmp
inc
mov
lret
push
or
mov
add
cmp
inc
mov
add
sub
repz
cli
add
sbb
out
cmp
aad
sub
aad
jns
in
mov
loop
jnp
pushf
scas
push
adc
push
test
dec
cwtl
ret
es
cmpsl
and
dec
shlb
test
lcall
in
aad
adc
mov
shl
test
push
jo
xchg
lock
iret
xchg
mov
or
test
fsts
movq
jmp
cmp
sbb
icebp
pop
insl
lock
mov
test
ss
ret
aad
add
add
and
xor
std
pop
dec
movsb
mov
adc
inc
sbb
jle
out
cwtl
sub
loopne
fcmove
div
inc
ret
push
hlt
sbb
push
mov
pop
mov
cwtl
outsb
inc
shll
push
xchg
mov
ret
lcall
mov
jl
daa
add
mov
inc
jg
inc
add
add
test
push
or
fimull
or
xor
clc
add
fidivs
push
sub
cld
movsb
lcall
andl
push
and
jl
test
dec
mov
lods
and
xchg
popa
push
push
xor
xlat
mov
scas
xor
arpl
xor
pop
add
std
jmp
xor
loop
mov
mov
cmp
stos
and
cld
mov
jns
mov
pop
cmpb
das
jle
sub
stos
outsb
fstpt
lret
cmpsl
mov
jno
or
dec
fimuls
lret
mov
std
sbb
push
pop
xchg
sub
mov
je
jnp
call
lcall
xor
mov
nop
lock
repz
dec
add
test
dec
xchg
fsubp
sub
sub
enter
addr16
cmc
jmp
adc
adc
js
mov
addr16
dec
jg
lret
pop
mov
repnz
ljmp
aaa
jg
adc
aad
lods
lret
dec
sub
outsl
imul
sub
mov
cmp
outsl
pusha
dec
mov
pop
mov
test
and
xchg
rclb
gs
pop
mov
jp
ret
mov
mov
lea
dec
push
mov
insb
call
fdivrp
pop
movsl
in
leave
mov
xor
hlt
adc
pop
mov
pushf
fdivs
dec
sub
pushf
sub
imulb
mov
sub
sub
dec
push
loop
rorl
push
push
sbb
jb
sub
mov
adc
push
pop
mov
pop
push
dec
xorl
add
inc
push
pop
sub
pop
rcll
sbb
mov
inc
int
sbb
imulb
pop
repz
sbb
mov
int3
call
pop
mov
test
addr16
xchg
push
cli
xchg
mov
in
lahf
gs
imul
bound
ja
bsr
add
bnd
push
add
push
jg
sbb
pop
js
add
inc
in
dec
xchg
and
mov
fs
scas
mov
mov
sbb
mov
cmpsb
mov
jle
add
sbb
mov
out
mov
add
cs
in
inc
lcall
std
jo
fs
sbb
dec
cli
adcb
fistps
mov
xchg
xor
cmpsb
mov
push
add
outsl
inc
dec
out
jmp
pop
xor
outsb
arpl
cmpsl
jp
mov
sahf
xchg
loopne
lods
sub
jns
mov
add
pop
mov
jp
out
outsl
xlat
jno
push
jl
fcompl
fisttpl
push
daa
inc
stc
push
fdivs
mov
js
pusha
pusha
rolb
std
enter
jnp
hlt
mov
add
sbb
sti
ret
cltd
sbb
mov
or
cs
cld
mov
jb
sub
jge
data16
aad
jae
out
jnp
popa
scas
jae
out
aam
mov
int
lods
mov
and
mov
lahf
bound
inc
and
daa
xchg
inc
out
xor
sub
jecxz
nop
mov
mov
add
pusha
mov
add
outsb
and
pop
mov
imul
test
rolb
xor
cmc
adc
sbb
adc
cmp
mov
pop
in
js
jecxz
pop
cmp
pop
dec
lds
xlat
inc
pusha
mov
jle
inc
mov
lds
jmp
stc
test
xchg
push
push
ret
or
adc
or
sti
mov
jmp
jmp
mov
pop
test
mov
test
add
or
xchg
fdivrl
pop
and
add
inc
add
dec
stc
cmp
cmp
sub
pop
cld
cld
cmp
roll
sub
fcomps
je
bound
jbe
and
xchg
sahf
repnz
mov
stos
ja
out
test
cltd
mov
or
dec
cmpsl
dec
mov
pop
mov
xchg
cs
or
adc
sub
adc
xor
push
xchg
add
and
cmpsb
loop
popa
out
sub
mov
inc
mov
mov
fst
mov
dec
icebp
jmp
pop
pop
push
pop
pushf
aas
outsb
in
mov
or
and
xor
loop
loope
sub
cli
daa
cs
fs
jle
jmp
lahf
aaa
sbb
scas
or
jmp
pop
fwait
or
sub
sub
and
int3
les
mov
adc
cmc
or
cmp
dec
mov
or
inc
mov
int3
decb
adc
jnp
cmc
shll
xchg
or
lret
ds
jge
pop
fistps
jmp
pop
mov
pushf
add
test
mov
adc
pop
pop
ret
test
jo
mov
mov
push
repnz
subl
data16
aas
push
mov
jle
mov
push
hlt
xor
outsl
out
scas
lds
pop
xchg
xor
mov
adc
jo
sub
pop
inc
xor
xchg
mov
fcomip
dec
cmp
dec
push
rorl
and
rorl
stos
sub
push
popf
adc
test
test
pop
push
inc
mov
cmp
sti
inc
xlat
sub
cmp
das
cmp
test
stc
out
jle
and
daa
dec
inc
lret
add
addr16
ja
push
stos
inc
mov
fistps
xchg
pop
push
ljmp
loop
dec
pop
fimull
rclb
cmp
adc
jmp
sahf
push
mov
dec
xlat
and
add
push
xor
xchg
rolb
and
xor
std
scas
inc
jecxz
mov
pop
lcall
test
loopne
or
adc
sbb
bound
and
mov
jg
xchg
lcall
shl
jp,pt
pop
push
fidivrs
add
pop
rclb
add
cli
dec
mov
add
arpl
stos
das
or
jb
test
fldt
fs
adc
scas
cld
add
dec
lds
pop
mov
lcall
jb
jl
mov
xchg
out
dec
xorb
leave
mov
ja
iret
into
testl
pushl
dec
cmp
inc
out
movsw
cmp
fdivl
int3
mov
repz
adc
adc
testl
out
cwtl
mov
imul
jb
int3
loopne
out
cltd
sbb
std
ljmp
xor
pusha
out
add
clc
jg
push
pop
lods
dec
dec
lock
or
push
sbb
and
xchg
dec
loope
push
outsl
das
or
mov
lret
mov
jnp
dec
sahf
or
into
out
xlat
jge
push
push
aaa
push
out
push
lret
lock
jae
mov
es
int3
adc
dec
jecxz
sbb
lcall
jp
dec
pop
clc
fwait
jno
mov
stos
push
jecxz
sti
sbb
lock
push
es
aas
scas
pop
pusha
cmp
loope
mov
xchg
push
xor
mov
pushf
and
add
sar
or
mov
inc
leave
pop
add
cli
pop
or
aad
cs
dec
das
pop
rorb
pop
cmp
mov
out
add
pop
inc
sbb
lods
push
push
nop
call
jmp
mov
cmp
xchg
jmp
push
sbb
inc
push
dec
sub
xchg
inc
mov
ja
inc
jne
mov
sub
jge
scas
pop
cmc
idivb
jmp
lea
jp
pop
int3
movsl
stos
pop
lret
and
xor
sbb
mov
push
fwait
sbb
push
push
inc
ds
adc
pop
jo
ss
sbb
ret
xor
cmp
cmp
ret
add
xchg
sahf
xchg
xlat
scas
dec
pop
pop
and
scas
mov
das
test
xor
les
lods
xor
push
cmp
pop
and
movl
jbe
dec
mov
push
mov
and
jle
shrb
xlat
dec
dec
divb
fsubp
aad
aam
ret
in
mov
movsl
in
pusha
cwtl
add
jge
into
sbb
inc
lret
imul
pop
push
sarl
data16
xor
daa
aas
sub
mov
jno
rcrl
jle
sub
aaa
xorl
mov
mov
xchg
call
cmp
xor
stc
stc
leave
int3
shrl
pop
add
leave
mov
jne
jg
lahf
jl
test
dec
xchg
jb
shll
mov
daa
sub
dec
clc
push
cld
push
insb
xchg
xchg
sub
lods
ficomps
cltd
stc
xchg
push
adc
and
dec
pop
cwtl
lcall
cmp
out
in
dec
sbb
jg
mov
push
push
push
popf
shl
lods
clc
jbe
mov
mov
fwait
jnp
add
pop
mov
mov
pop
inc
popa
cmp
out
aaa
inc
les
setno
rorl
inc
inc
xor
aam
xchg
ja
jge
xchg
loopne
mov
jb
rcll
repnz
in
push
adcl
xor
in
pop
push
and
xor
sub
sbb
inc
nop
xor
xchg
jo
loopne
sahf
add
push
out
lahf
int
in
movsb
shlb
clc
lcall
rol
and
int3
sbb
pop
test
fiadds
dec
inc
pop
fcmovu
imul
outsb
repz
frstor
push
mov
push
xor
inc
lahf
subl
xor
ljmp
clc
js
into
adc
inc
and
sbb
xchg
pop
mov
adc
xor
pop
and
inc
das
arpl
pop
aad
mov
mov
mov
jl
stos
fs
js
mov
and
test
clc
xchg
jp
mov
inc
imul
push
repnz
jmp
cmp
ljmp
lock
mov
xlat
or
jns
sti
daa
inc
cmpl
fld1
or
sti
andb
mov
jo
data16
mov
push
jno
or
fsub
jo
fnsave
xchg
fbld
fisubrs
xor
adc
pop
inc
sbb
cmpsb
mov
arpl
cmp
mov
mov
loopne
imul
xchg
xchg
sbb
xor
test
pop
xorl
pop
sub
mov
test
nop
rol
mov
or
pop
jle
cmp
cld
cmp
mov
jnp
aas
mov
bound
jo
gs
pop
clc
mov
ss
in
pop
mov
and
push
pop
cld
xor
mov
mov
jle
hlt
adc
pop
xchg
adc
stos
setnp
push
addr16
lea
push
dec
add
outsb
push
inc
cld
cli
cmpsl
mov
xor
mov
xor
cmpsl
test
xlat
inc
push
push
adc
mov
xchg
mov
xor
xor
mov
xchg
pop
sub
mov
adc
sub
ss
pop
sub
xchg
scas
test
ljmp
jmp
movsb
push
mov
push
test
in
jg
hlt
loop
hlt
test
mov
imul
sbb
mov
mov
rorl
popf
scas
mov
cld
test
or
add
pushl
jg
fisttpll
add
pop
sub
addr16
in
iret
inc
sbb
mov
and
dec
mov
bound
sub
movsb
or
lods
bound
out
fwait
jo
inc
shll
mov
bound
into
nop
ficomps
push
and
cmc
ja
mov
clc
mov
ds
sbbl
pushf
adc
xor
loopw,pn
jmp
dec
addb
inc
fs
mov
in
test
stos
fcmovnu
in
pop
jbe
cmp
jo
adc
mov
inc
lahf
imul
mov
mov
push
cltd
das
out
repnz
xchg
add
rol
dec
outsb
test
not
push
add
psllq
dec
add
or
daa
in
daa
fidivrl
out
in
inc
or
repnz
out
bound
xor
pushf
mov
xor
and
and
and
sbb
rorb
leave
cwtl
inc
outsl
loop
subb
outsl
jno
xchg
mov
aas
inc
arpl
cld
out
jg
jle
inc
xor
xlat
test
std
cld
pop
xchg
loopne
cwtl
add
mov
repnz
out
and
cmpsl
and
mov
lret
sbb
inc
out
pop
ds
add
shlb
add
popf
out
sub
mov
pop
cli
vorps
icebp
xchg
sub
pop
add
pushf
pop
or
test
push
adc
fsubr
or
sbb
ret
popa
and
and
mov
inc
loop
clc
xor
and
xor
dec
jnp
xchg
xor
adc
mov
pop
cs
sahf
imul
data16
jmp
inc
push
jnp
in
rolb
xchg
fisubrl
clc
inc
in
fs
and
jns
mov
cltd
jmp
fcmovnb
int
retw
mov
test
mov
inc
mov
add
cli
sub
stos
sub
and
sbb
adc
push
xchg
arpl
add
mov
cltd
xchg
in
scas
push
mov
adc
ret
mov
scas
les
mov
daa
jl
xor
adc
outsb
sub
sub
icebp
mov
ja
mov
mov
adc
stc
pop
pop
and
inc
mov
cmpb
movsl
and
jo
xlat
jae
push
pop
or
sbb
movd
addl
xchg
xchg
repz
int
int3
push
inc
push
aas
sub
and
inc
inc
lods
ret
test
cmp
in
mov
mov
or
pop
xor
fstl
add
in
fsubl
fcoms
popa
inc
imulb
pop
js
shl
mov
inc
cs
hlt
push
add
std
lock
adc
in
adc
lock
addb
jp
cmc
pop
enter
push
ret
lret
xchg
cwtl
mov
scas
stos
mov
nop
sbbl
aam
test
cmp
adc
hlt
je
arpl
daa
dec
into
push
les
repz
mov
cmp
dec
xor
sti
inc
int
es
adc
imul
lea
popa
daa
push
mov
cmc
jg
fnstenv
jg
fcmovnbe
dec
or
xor
lds
and
ljmp
in
jno
mov
dec
push
imul
push
cs
push
loop
into
je
sbb
xor
and
cs
bound
pop
lods
pop
rol
movsb
jmp
in
dec
rol
das
aaa
mov
mov
rorl
jmp
xchg
mov
xchg
addr16
mov
xor
mov
push
outsl
insb
push
jg
and
add
xlat
xor
icebp
sbb
jl
popa
mov
push
out
cli
jne
cmp
jbe
cmpsl
sbb
aam
inc
pop
iret
mov
mov
divl
push
jmp
sahf
fchs
jl
ja
mov
pop
push
xchg
mov
mov
jg
jp
mov
fadds
ljmp
lret
sahf
loopne
push
mov
and
xor
popa
jl
jo
add
dec
adc
into
pinsrw
int3
mov
jge
popf
pop
sub
shlb
cwtl
dec
rorl
test
adc
mov
sbb
xchg
jle
lea
test
xor
lods
inc
push
lods
mov
mov
andb
xchg
testl
out
cs
aam
xchg
les
jmp
cmpsl
push
rolb
clc
movsb
push
add
push
pushf
push
mov
cmpsb
loopne
cmp
pop
dec
fwait
sti
sbb
adc
jg
pop
hlt
loop
jbe
xchg
jnp
pop
dec
pop
pop
dec
xor
lahf
decb
jmp
testb
dec
xor
jp
pop
hlt
jg
inc
jp
lea
mov
jecxz
fsubs
out
pop
mov
jmp
aas
mov
mov
test
jg
inc
adc
jnp
xor
lcall
out
cmp
mov
cltd
sub
lea
pop
in
in
push
in
ljmp
inc
movsb
aad
cmp
mov
rcrl
xor
and
js
push
cmp
push
push
out
mov
mov
mov
mov
int
gs
cmpsl
mov
outsl
mov
mov
jmp
imul
rolb
mov
lahf
in
cmp
mov
xor
mov
fidivl
faddl
notb
or
mov
mov
jno
push
cli
imul
cwtl
mov
rcrl
int
out
movsb
gs
xor
dec
loop
inc
and
les
mov
je
xchg
gs
dec
sub
aas
push
add
rorl
mov
popa
mov
push
add
nop
lret
daa
lods
into
out
xchg
daa
rcll
clc
sbb
jl
aam
push
movsb
jl
xor
add
fs
aas
out
int
dec
shr
stc
mov
mov
jecxz
arpl
daa
xor
xor
aaa
mov
fisttpl
push
rcrl
outsb
mov
scas
mov
out
outsb
inc
clc
imul
dec
cmc
frstor
pop
bound
pop
orl
jns
andl
jge
pop
mov
pop
in
les
pop
xchg
in
into
xor
or
mov
loop
pop
xchg
inc
lea
insl
or
daa
or
imul
and
inc
pop
cmp
push
push
arpl
xchg
cli
testl
jl
xor
or
mov
aad
mov
scas
fisttpl
mov
jae
cltd
push
notb
inc
nop
and
dec
data16
aas
push
adc
ret
mov
adcb
lods
jg
add
clc
shll
cvtps2pd
dec
pusha
push
jo
daa
movaps
pop
cmc
xchg
out
fidivrs
stos
fildl
xor
dec
mov
js
pop
dec
inc
js
stos
scas
dec
lahf
shl
jnp
das
insb
addr16
mov
pop
inc
mov
push
dec
int3
and
lret
or
adc
mov
xchg
or
inc
xchg
cmp
arpl
repnz
scas
andb
in
xlat
dec
push
sti
gs
add
mov
addr16
add
mov
pop
out
mov
mov
push
cs
xor
and
fisubrs
lea
push
outsb
cmpsl
lret
shrb
arpl
add
mov
push
jnp
xor
inc
scas
shll
lods
icebp
cmpsb
cmpsb
cmp
sub
arpl
jp
or
ss
xor
inc
inc
jb
xor
rolb
loope
xchg
out
xchg
xor
cmc
sbb
je
push
mov
cmpsb
adc
or
cld
and
and
je
cmpsb
rcll
leave
cmp
or
aad
iret
mov
xchg
cmp
xor
push
setg
adc
mov
lret
add
mov
pushf
rorb
test
mov
in
pop
movq
push
sub
add
pop
hlt
mov
loopne
rolb
out
dec
stos
push
inc
and
outsb
jnp
jge
mov
adc
xor
dec
inc
mov
subb
jmp
mov
ret
lods
lock
sti
sti
sbb
pop
mov
pop
adc
arpl
in
sbb
sbb
popf
jp
leave
inc
hlt
or
dec
gs
pusha
push
popa
hlt
or
xor
adc
xchg
shl
std
loope
dec
popf
jmp
pushf
jbe
push
mov
adc
ret
jnp
jns
dec
test
leave
aaa
sub
stc
jge
mov
movsb
push
cwtl
inc
lods
push
rcll
cltd
mov
int
cmovl
stc
test
lods
dec
popf
fldcw
add
sbb
sarl
push
fidivrs
xor
loop
das
loop
mov
mov
jbe
cmpsl
sbb
decl
addr16
popa
test
push
ljmp
addl
jmp
jae
adc
movl
cwtl
add
in
pop
fs
ficompl
jl
fwait
lahf
push
mov
rorb
test
jmp
push
shrl
jne
bound
inc
xor
adc
sub
shll
pop
jg
insl
and
pop
jmp
dec
test
pop
sub
into
shr
pop
ja
add
std
fisubs
dec
jge
push
xlat
lret
mov
pushl
jae
cld
add
pop
push
lahf
mov
fnsave
loop
pop
daa
sbb
and
shll
mov
pop
shlb
fildl
push
orb
sbb
pop
xchg
cmp
dec
adc
inc
mov
mov
jge,pn
adc
push
xchg
pop
mov
sbb
or
call
jb
cmpb
imul
and
mov
int
ja
fwait
jbe
jnp
lock
ret
push
orl
xlat
in
cmp
imull
leave
fists
mov
int3
adc
add
cltd
jge
push
cld
sbb
sub
sbb
mov
inc
jns
pop
jne
mov
insl
jnp
cltd
sbb
lods
shll
inc
lret
ds
jecxz
xchg
pop
fildl
std
in
or
popf
subb
pushf
push
push
adc
sbb
icebp
lds
xchg
outsb
mov
fsubl
mov
inc
ds
ss
or
mov
inc
dec
insb
add
jecxz
out
sub
or
adc
cmp
shr
xlat
int
in
outsl
jmp
pop
jae
adc
cmpsl
xor
push
xchg
push
and
in
dec
push
insb
call
fldenv
or
sub
test
lea
push
or
mov
dec
and
testb
dec
mov
push
jecxz
cmpsb
push
sahf
or
out
aam
inc
cmpsl
sbb
xchg
mov
jb
es
jp
pop
and
movsb
mov
out
jg
shll
not
cltd
or
mov
dec
mov
jge
xchg
mov
pop
pop
pop
out
inc
in
mov
jns
aaa
jg
xchg
mov
mov
push
jge
and
out
imul
divl
fildl
inc
daa
dec
inc
mov
rclb
out
fs
mov
fcmovb
dec
push
sbb
ret
repnz
mov
int3
mov
sub
push
stc
push
cld
xlat
dec
push
pop
inc
sub
mov
hlt
mov
hlt
sbb
scas
fwait
xchg
les
in
and
mov
pushf
ljmp
int
int3
mov
cmp
dec
dec
mov
jno
dec
dec
fisubrl
test
pop
sub
and
mov
aad
addr16
mov
cmp
xchg
jp
and
lods
subb
fdivs
lret
sar
or
insb
popa
and
fdivr
out
jecxz
xchg
push
jge
movsb
mov
pop
icebp
pop
or
aas
mov
popa
dec
mov
push
in
shll
fst
push
stos
aam
pop
rcrb
and
lret
add
push
shlb
movsb
xor
adc
out
and
nop
pop
int
jns
out
sbb
pop
loopne
xor
sub
sarl
mov
in
mov
bound
mov
movsb
cmp
pop
shl
mov
nop
xor
jb
movsb
ja
popa
idivl
cmp
notl
mov
pop
push
cmpsl
loopne
hlt
or
lea
cmp
jns
jno
mov
xor
dec
lea
cmp
jnp,pn
lahf
xor
dec
lret
or
sbb
push
imulb
not
fucomp
mulb
bound
or
pop
add
xor
push
shrl
dec
popa
ljmp
in
xchg
leave
adc
out
inc
in
and
jo
shlb
iret
aam
add
rolb
dec
notl
push
adc
arpl
loope
icebp
movsb
imul
inc
daa
shll
fistpl
clc
adc
loope
jge
push
dec
fcmovnb
es
adc
scas
test
daa
frstor
pop
lret
rorb
stos
arpl
js
in
or
fs
int
xor
call
ds
sbbb
lcall
jle
and
or
or
xchg
clc
int3
mov
add
je
outsb
sub
in
movsl
xchg
jnp
sbbb
out
adc
cmp
pop
into
pop
nop
lods
lock
pop
in
dec
std
arpl
xchg
popa
jmp
inc
movsb
loop
mov
in
int
dec
lret
sub
or
push
mulb
fcompl
or
and
mov
jmp
outsl
dec
test
sub
dec
pop
xor
sbb
xchg
jmp
ss
aad
fprem1
push
pop
inc
ja
cmp
and
add
in
outsb
xor
ja
jb
push
mov
pop
fnsave
test
pop
inc
xor
stos
rclb
add
sti
lds
push
lret
loope
cmp
mov
push
addr16
inc
sbb
pop
xchg
lcall
add
adcl
push
mov
popf
test
push
iret
rol
mov
js
inc
or
and
daa
arpl
aad
leave
loope
inc
sbb
xor
pop
push
cmp
xor
or
adc
push
cld
mov
cmp
jecxz
lret
push
dec
in
or
pop
scas
pusha
pop
cmpsb
push
add
imul
inc
test
inc
xchg
lds
sbb
scas
xchg
cmp
stos
mov
jl
jne
xchg
imul
sub
fdiv
mov
mov
imul
arpl
scas
repnz
popa
push
lds
icebp
xchg
imul
inc
or
in
mov
mov
sub
enter
mov
pop
inc
and
mov
sbb
jae
mov
iret
push
cltd
add
mov
push
repnz
inc
pop
scas
add
cmpsl
in
pop
mov
aam
shlb
jge
sbb
int
mov
cmpsl
cs
fcoms
cmp
divb
daa
xor
jnp
pop
pop
daa
push
into
stos
out
fucom
or
pop
mov
pop
lds
add
pop
add
aaa
cmp
sbb
adc
frstor
inc
xorl
leave
cmp
addr16
sub
dec
pop
test
loopne
add
sarb
sub
jns
dec
adc
pushf
imul
ja
cmp
test
lcall
push
lea
inc
imul
call
das
std
nopl
add
inc
pop
sti
lds
and
sub
hlt
dec
xor
mov
fnstcw
pop
je
cltd
jle
jmp
or
notl
iret
xchg
mov
test
mov
push
cmp
xchg
sub
fsubrs
shl
aas
adc
xchg
mov
stc
cmp
imul
sarb
xlat
inc
lea
std
sti
mov
pop
les
lods
cmpsb
push
inc
repz
jno
push
mov
inc
clc
push
and
cmc
xlat
js
xlat
cmp
bound
jle
push
sub
xchg
xor
pop
xchg
mov
xchg
cmp
or
jo
gs
dec
mov
cmpsb
outsl
scas
and
mov
int3
xchg
adc
fildl
and
mov
insl
int
xchg
jmp
icebp
or
stos
pop
out
jbe
scas
in
cli
dec
sti
std
jb
sarb
adc
notb
and
dec
mov
dec
push
cmc
leave
clc
scas
jbe
bnd
jns
jg
mov
je
mov
outsl
in
lock
and
xchg
or
cmp
andl
cmp
cmpsb
scas
mov
sub
xor
es
pop
mov
dec
es
mov
sbb
sahf
lret
inc
xchg
scas
rep
shrl
mov
popa
mov
daa
mov
mov
mov
pop
je
sub
loop
insl
scas
mov
out
lret
mov
out
mov
je
mov
imul
or
dec
cltd
lods
mov
shlb
sub
out
mov
je
sti
mov
bound
ficomps
fbld
ja
xchg
scas
xlat
add
in
mov
jecxz
push
inc
jg
aaa
dec
cmpsl
jb
aaa
fistpl
pop
xchg
addr16
xor
stos
or
mov
xchg
in
pop
movsl
fistpl
sbb
flds
cwtl
xor
sbb
jp
dec
bsf
cmc
std
pop
daa
testb
cmp
mov
mov
popf
xchg
sub
sub
lret
cmp
dec
ret
xchg
pop
adc
outsl
cmp
cmp
mov
push
mov
subl
sbb
or
out
stc
jp
xor
ljmp
mov
ds
pop
cli
adc
mov
xor
or
mov
mov
adc
jb
cmp
sar
adc
jle
rclb
fs
and
jo
lret
lret
pop
cmp
sbb
cmp
sti
mov
push
lea
clc
shr
enter
pop
jnp
out
enter
imul
je
jmp
add
js
xchg
xchg
pop
cs
shlb
outsl
movsb
daa
stos
dec
sahf
inc
aam
call
loope
dec
movsb
aam
out
sub
xchg
sbb
xchg
push
cmp
es
jbe
mov
mov
mov
mull
mov
push
outsl
jg
pop
outsl
out
dec
pop
cmp
dec
xchg
in
mov
lock
jecxz
add
aas
mov
shr
ret
nop
mov
and
jo
lods
pusha
jbe
add
cmpsl
fbld
sti
push
xchg
int3
xlat
lahf
jmp
popa
sub
push
fwait
xor
in
ds
sar
pop
dec
sbb
clc
imul
ljmp
pop
arpl
jg
xchg
add
jge
xchg
test
jnp
adcl
xchg
mov
lret
mov
call
movsb
jmp
xchg
icebp
pop
sar
push
fst
loop
stc
adc
rcrl
call
data16
push
outsl
xchg
cmpsl
mov
push
shrb
add
mov
xlat
push
out
subl
nop
inc
push
loope
jle
mov
jbe
push
xor
test
daa
sti
and
adcb
inc
pop
inc
and
mov
xchg
int
fmuls
popf
ficoms
lcall
ficompl
sbb
or
dec
jmp
pop
pop
xor
mov
xchg
sub
dec
out
ss
es
aas
dec
mov
mov
xor
and
jl
stos
or
jle
jge
push
or
pushf
push
push
out
mov
nop
push
and
mov
in
nop
ret
pop
aam
lahf
fildl
add
or
sahf
daa
sbb
mov
lea
sti
testb
test
jb
dec
mov
and
jne
leave
fs
cli
add
pop
lods
push
bound
xor
int
push
pop
mov
aaa
enter
aam
pop
leave
fs
jno
and
movl
insb
inc
mov
sbb
out
cmp
mov
dec
out
icebp
pop
xor
adc
pop
pop
mov
mov
jmp
or
lret
cltd
add
cmpsl
cli
pusha
daa
inc
xchg
sub
shl
jle
xchg
pop
jmp
cmp
adc
loopne
and
les
cld
ja
mov
push
daa
sbb
jg
lret
sbb
outsl
push
inc
xorl
jmp
ljmp
test
xchg
cmpsl
push
jmp
dec
iret
test
fwait
sub
pushf
dec
js
jecxz
push
push
pop
sbb
dec
pushf
mov
ret
or
hlt
jmp
jb
push
xchg
mov
lea
int
ret
arpl
push
jns
mov
push
mov
xchg
out
or
lret
mov
and
mov
mov
inc
stos
push
mov
js
or
lock
sahf
enter
popf
pop
or
and
pop
imul
fwait
xchg
cwtl
aad
lret
rorb
xor
cmc
mov
cmpsb
aad
fdivs
jg
pop
adc
push
cmp
xchg
mov
pop
jp
sub
rol
repz
pop
mov
les
push
push
leave
jne
insl
xor
jae
adc
mov
out
imul
mov
jle
and
bound
push
adc
cwtl
gs
fsubr
push
or
repz
pop
cmpsb
daa
ret
fs
mov
scas
out
xchg
mov
push
mov
jp
insb
pop
addb
out
iret
xchg
sar
dec
lods
jbe
adc
inc
lret
pop
shrb
ret
push
orl
in
pop
test
cmp
and
lret
shr
fimull
repz
cmc
loope
adc
push
aas
sub
insl
icebp
xchg
psrad
in
cmc
mov
adc
or
movb
fiaddl
dec
ret
cmp
hlt
fldl
aaa
inc
sub
jl
cmpsb
jp
push
loope
into
pushf
fadds
inc
out
or
jmp
mov
xlat
fsubr
outsb
ficomps
aaa
fists
mov
cli
pop
ss
or
lcall
mov
scas
and
push
out
mov
mov
pop
inc
push
push
cmc
jb
and
scas
rcll
aas
dec
fnstenv
jnp
sti
sahf
sti
mov
adc
bound
pop
data16
xchg
std
inc
dec
out
ljmp
or
dec
and
and
jae,pn
push
cmp
in
jmp
mov
xchg
aaa
push
sbb
push
fiadds
out
leave
outsl
leave
out
mov
gs
dec
xchg
ja
test
sbb
jb
test
xchg
lods
xchg
pop
add
adc
add
pop
pop
cmp
adcb
jae
push
add
out
pop
stc
inc
inc
jl
jo
fwait
mov
inc
adc
sti
les
xchg
pop
mov
jg
jl
fimuls
mov
add
jle
cmp
sub
js
movsl
movsb
adc
and
push
stos
xor
addl
fildll
mov
sahf
xchg
out
adc
inc
imul
xor
add
mov
mov
stos
dec
out
cmpsb
push
inc
xchg
dec
push
inc
outsb
rcll
add
jo
sub
dec
jb
push
out
mov
push
or
mov
push
xor
gs
xor
inc
mov
mov
cmpsb
jecxz
cwtl
dec
jl
aad
xchg
daa
xchg
pop
push
hlt
mulb
es
mov
jo
jbe
push
push
xchg
hlt
push
es
pusha
fldenv
jb
mov
cmc
cltd
lea
adc
mov
pop
dec
std
sub
sbb
sbb
shlb
add
sbb
mov
into
call
ljmp
out
mov
inc
inc
sbb
in
into
mov
xchg
xor
sahf
mov
cmp
xor
std
fld
push
dec
rcl
cmp
pop
rolb
arpl
push
movsb
lret
push
mov
iret
imul
xor
push
xor
addr16
pop
xchg
aas
sahf
or
push
sti
jge
and
mov
mov
loope
inc
dec
push
jns
add
push
nop
clc
sbb
and
mov
adc
push
inc
outsb
in
ret
cmp
nop
or
dec
and
test
jb
mov
and
ds
sub
xlat
rolb
lea
fwait
jg
lock
mov
xor
repz
test
jmp
mov
push
xor
sub
xchg
es
ds
add
or
add
pop
push
es
xor
jno
and
in
out
cld
cltd
scas
mov
nop
sar
fsubrl
rorb
ficompl
insl
inc
ret
in
icebp
jnp
ds
mov
cli
inc
mov
mov
or
das
push
loop
les
call
pushf
dec
loope
xor
push
xchg
adc
out
pop
popa
and
mov
imul
setbe
mov
fiaddl
fsub
cld
push
mov
stos
mov
bound
daa
cmp
inc
in
lea
and
int3
sahf
enter
aam
xchg
pop
out
jp
sti
sub
mov
lods
in
pop
jo
test
daa
inc
xchg
and
cmp
mov
dec
pop
sub
pop
out
jne
pop
push
pop
std
repz
or
jbe
in
scas
sbb
mov
pop
add
cmp
xor
pop
enter
cmp
cs
sbb
mov
add
movb
lcall
pushf
pop
dec
loop
xchg
adc
pusha
mov
flds
inc
aaa
sub
jl
cltd
ja
dec
mov
ja
sarl
lea
dec
sub
mov
cmp
mov
dec
fdivl
fldl
aas
and
xchg
pop
outsl
ds
pop
ds
push
stos
or
xchg
inc
addb
std
xchg
repnz
mov
mov
enter
pop
pop
pop
push
subl
outsb
loope
mov
jae
mov
cmc
sub
inc
and
mov
rcll
scas
xchg
jmp
dec
push
jmp
mov
jb
outsb
and
test
dec
nop
fcoms
adc
mov
xor
push
xor
js
push
pop
cmp
scas
push
jo
dec
inc
mov
inc
fsubrs
cmpsl
scas
fcomps
xchg
ss
mov
and
orl
xor
push
push
push
xchg
mov
xchg
sub
lret
mov
push
jmp
xchg
mov
fnstcw
loop
pop
imul
clc
gs
aas
or
pop
scas
or
insb
jns
mov
pop
add
call
jo
clc
roll
xabort
aaa
scas
or
mov
mov
sub
std
mov
or
push
insl
cld
popa
jae
fwait
pop
sub
lret
clc
jp
jmp
jge
lret
xchg
adc
dec
dec
pop
inc
cmpsb
lcall
push
stos
lea
ljmp
xchg
push
pushf
push
scas
sub
lretw
in
and
ds
sub
inc
xchg
addb
xchg
xchg
cs
enter
jbe
jmp
inc
push
dec
add
cli
mov
add
sub
xchg
pusha
subb
jl
sbb
and
pop
out
mov
mov
jle
lea
push
mov
adc
jnp
sub
xchg
scas
lods
iret
fcoms
iret
fwait
cli
mov
mov
xor
jno
fsubrs
add
adc
or
ljmp
inc
outsl
and
and
lods
lcall
call
mov
outsb
ljmp
arpl
jl
xor
push
rol
sub
mov
in
stos
jmp
movsb
pop
imul
lret
pop
jnp
fwait
cmp
shrb
cmp
loope
xchg
int
cmp
es
xchg
jge
pop
pusha
out
loopne
cld
jp
movsb
popf
mov
or
test
jb
movsl
incb
xchg
fs
xchg
xor
dec
add
xor
sbb
pop
stc
pop
push
mov
scas
mov
rolb
mov
xchg
jae
sbb
and
les
ret
mov
out
stos
dec
ljmp
xchg
pop
es
popa
imulb
inc
into
push
fsubrs
cmpsb
lods
sbb
mov
repnz
scas
sbb
pop
cmp
xlat
inc
pop
push
loope
add
loopne
rolb
fadds
add
sbb
dec
decb
repnz
jle
fnsave
mov
int
jne
in
jge
xor
daa
xor
in
mov
sub
push
ret
push
rcrb
push
out
loopne
jbe
mov
pop
cmpsl
test
sbb
sub
push
add
mov
sbb
test
mov
fs
add
cwtl
mov
les
lods
jne
stc
cmpsl
lea
jno
xor
xchg
xor
mov
xchg
aas
xor
pop
adcb
gs
call
ret
lahf
js
jns
add
addr16
dec
sbb
loopne
jecxz
xchg
stos
cmpsb
inc
call
out
fimull
popa
mov
jle
mov
pop
out
int3
sahf
push
xchg
push
mov
cmp
pusha
loop
insl
flds
je
cmp
cwtl
mov
xor
int
mov
loop
in
ja
loope
imul
and
or
das
push
pop
je
dec
mov
test
push
inc
and
adc
mov
adc
insl
cmp
xchg
cld
inc
dec
mov
mov
inc
xlat
int3
sahf
pop
mov
icebp
push
sbb
jge
into
jmp
pop
mov
je
out
inc
mov
call
std
out
sub
sub
das
mov
lock
fidivrs
dec
xor
std
jmp
jg
adc
xchg
cmp
pop
jge
into
clc
decl
je
xor
push
mov
int
sti
leave
pop
stos
aad
mov
bswap
xchg
cmc
xlat
adc
push
dec
adc
lods
pop
sub
popf
pop
and
nop
xchg
sbb
mov
push
call
adc
and
xchg
push
cmp
or
xor
cmpsl
stos
inc
jno
sti
dec
adc
sbb
fwait
mov
in
gs
int
andl
popa
mov
xor
iret
push
add
adc
or
clc
dec
sbb
sub
mov
scas
mov
jne
adcl
pushf
icebp
mov
cmp
sub
pop
jbe
imul
jb
fbld
push
pop
pop
push
and
pop
or
sub
mov
lds
xchg
fwait
lds
xor
xchg
xchg
xor
sbb
adc
push
cmp
inc
sbb
sub
mov
aaa
std
push
andl
push
sub
std
xchg
cmp
add
aaa
es
lods
addr16
push
test
inc
mov
dec
push
mov
inc
in
dec
loop
and
lahf
test
jo
jp
mov
jae
sub
cmp
fdivs
mov
mov
jno
pop
dec
adc
add
push
rcll
xchg
ret
mov
push
add
jle
xor
rcll
lods
pop
xchg
ret
test
sbb
mov
and
sbb
cmp
cmpsb
std
movsl
repnz
iret
mov
dec
repnz
mov
popf
mov
dec
push
addr16
data16
add
push
int3
sbb
jl
and
or
in
pop
enter
jo
shll
repz
cmp
pop
xor
or
jecxz
or
push
fxam
pushl
cmp
outsl
jae
cmp
push
inc
fcoms
pop
in
jge
push
in
cmpsl
cmp
jp
icebp
xor
cmp
addb
push
jbe
and
aad
bound
negb
rorb
push
lcall
push
xchg
sbb
lahf
mov
pop
sbb
add
xlat
les
adc
insl
mov
mov
mov
lea
cwtl
inc
cmp
jl
push
sub
adc
mov
icebp
jp
mov
xchg
jb
cli
dec
iret
cmp
ret
pop
out
push
imul
aam
add
sub
roll
jg
xor
dec
test
push
mov
inc
out
pop
adc
push
push
imull
test
push
mov
repz
fidivl
dec
jno
add
arpl
rol
sub
mov
out
rclb
sub
xor
insl
sahf
mov
leave
mov
js
sub
test
jnp
insl
inc
add
pop
cmp
into
icebp
test
mov
inc
inc
pop
mov
bound
push
mov
xor
inc
punpckhwd
outsl
xor
movsb
in
push
or
mov
mov
push
daa
sub
mov
das
lret
outsb
into
push
test
iret
popf
sub
adc
add
outsl
shl
mov
adc
cld
xchg
mov
aad
mov
xchg
mov
dec
je
sbb
loope
mov
push
inc
or
push
push
aaa
cmp
add
pop
mov
xor
mov
mov
mov
negb
out
sub
mov
movb
push
mov
test
xchg
push
xchg
repnz
fldcw
test
stos
or
cld
mov
push
mov
stos
cltd
sub
pushf
cltd
shlb
xchg
ret
pop
pop
xchg
push
pop
hlt
orb
lock
test
sub
fistl
fnstcw
adc
out
mull
mov
addr16
mov
aam
dec
pop
and
sbb
mov
jg
mov
pop
mov
inc
sbb
inc
push
ds
pop
add
mov
ret
aad
add
notb
movsl
mov
push
mov
adc
btc
add
cmpsb
and
inc
jbe
push
dec
stos
in
push
fwait
mov
fs
pop
loopne
jno
rorl
in
arpl
or
cmpsl
cmc
cld
or
lods
pop
mov
adc
fistl
jb
push
out
out
movsl
icebp
pop
dec
pop
cmpsl
sub
pop
gs
aam
pop
js
stos
push
sarw
lds
hlt
lahf
fsubrl
push
insl
in
out
mov
sbb
fistpl
xor
jmp
imul
xchg
divl
push
mov
lods
and
lock
test
adc
inc
js
testl
cwtl
lcall
xchg
mov
sti
inc
fdivs
in
das
aaa
xor
sub
mov
lods
jnp
hlt
gs
sbb
mov
push
lds
sti
xchg
aad
insb
mov
push
sbb
hlt
sbb
scas
imul
cmp
mov
mov
mov
mov
negl
aas
bound
inc
pop
shll
and
mov
push
pop
pop
xchg
sub
xchg
int
pop
adc
push
shlb
imul
movsl
jae
rcll
rcrl
jbe
pop
out
or
push
shlb
adc
in
inc
mov
in
cmpsl
adc
pop
push
jns
sub
jns
rorl
mov
dec
loop
rcll
inc
add
lret
jae
push
mov
shl
cmp
decb
mov
in
pop
lahf
rclb
insb
fdivrl
test
mov
jae
push
icebp
inc
pop
xchg
jne
xor
test
test
xor
xor
push
adc
lcall
aas
ljmp
sbb
push
add
jbe
sub
pop
cwtl
aaa
inc
mov
stos
hlt
ljmp
xor
inc
sbb
stos
cmc
sub
jnp
push
adc
test
adc
rorl
jns
xchg
xor
std
jecxz
dec
in
xchg
das
xor
clc
arpl
xchg
jne
gs
es
jmp
and
lret
out
les
push
jg
mov
pop
sbbw
sahf
and
sbb
push
cmp
sub
mov
lock
push
sahf
daa
lds
push
xchg
fstl
jg
jecxz
jns
bound
sub
int3
loopne
repz
in
and
fimuls
test
aad
push
or
sub
sub
push
in
cmc
cmp
incb
imul
ds
sti
imul
lods
mov
dec
arpl
dec
scas
je
in
cmp
mov
push
fisttpl
hlt
dec
cwtl
cmp
iret
dec
mov
ret
jl
cmp
lds
inc
stos
mov
sbb
inc
stc
sub
test
push
or
into
lods
mov
pop
iret
or
jmp
push
scas
outsb
or
jl
mov
cld
sbb
cwtl
sub
sbb
pop
cwtl
xchg
sbb
nop
mov
mov
mov
ficomps
lds
out
subl
in
dec
and
lahf
pop
push
test
jmp
out
mov
clc
fcmovne
mov
cmpsl
sbb
cmp
sub
inc
adc
sbb
lock
pop
push
testl
cli
jns
cmp
fcmovbe
adc
xor
clc
movsb
adc
push
in
push
into
test
cmp
nop
fiadds
movl
test
dec
sahf
push
shll
enter
aam
pop
fidivrl
xchg
popa
add
add
lods
and
fdivs
push
mov
xor
pop
jbe
add
mov
jo
scas
mulb
and
mov
dec
inc
pushl
outsl
stc
inc
adc
in
xchg
dec
cmp
mov
loop
ds
mov
dec
icebp
mov
imul
clc
dec
dec
and
mov
sub
mov
insl
or
cmp
dec
sub
jp
sbb
cmp
sub
mov
xchg
mov
int
cmpb
push
scas
rolb
shlb
dec
in
inc
adc
xchg
dec
push
in
xchg
push
fistpl
aaa
repz
mov
sahf
sahf
rcll
lods
shll
adc
dec
inc
xlat
aam
mov
xchg
xchg
add
fs
inc
insb
arpl
xlat
test
add
push
aad
jge
xchg
pop
or
gs
test
popf
stos
adc
push
test
adc
fsubrp
pop
mull
cmp
popa
shrl
out
lods
adc
inc
inc
and
adc
xor
loop
shll
adc
js
pop
in
sub
sti
hlt
sahf
dec
xchg
fistl
jecxz
out
dec
jne
inc
push
push
jecxz
cmp
cmp
fwait
xor
cld
inc
test
mov
call
mov
push
mov
sbb
orb
inc
adc
xor
inc
dec
call
pop
fnsave
sub
sub
push
shlb
xchg
cmp
aam
and
jg
gs
in
xchg
xchg
xor
fsts
mov
mov
jne
in
leave
mov
xchg
jo
inc
insb
inc
adc
mov
pop
mov
mov
test
icebp
xchg
in
je
fidivrs
cmpsb
push
mov
add
xor
aam
sub
rorb
mov
or
add
push
mov
push
scas
xor
loop
mov
mov
ljmp
sbb
sbb
bound
sbb
lcall
and
lahf
or
cmp
mov
xorb
mov
push
sbb
jp
sbb
cmpsl
xorl
mov
sbb
cmpsb
xchg
add
mov
jns
lods
outsb
push
and
fiaddl
pop
pop
xor
je
sbb
inc
addr16
arpl
mov
cwtl
roll
adc
call
aas
movsl
add
and
or
in
or
add
out
fs
mov
bound
ja
dec
adc
outsl
xor
mov
ljmp
les
push
les
fwait
and
fabs
ret
mov
push
mov
mov
mov
mov
add
sub
pop
insb
jp
sarb
sbb
jns
mov
js
mov
adc
inc
lret
cmp
negb
and
adc
ss
jns
sahf
push
adc
and
loop
xchg
and
jl
sahf
loopne
mov
dec
int
jl
mov
or
ret
cmpsl
jecxz
dec
xchg
mov
jns
inc
xor
cmp
ret
and
sbb
loope
cltd
jae
ds
sbb
mov
int
xchg
loope
call
pop
das
cmp
sbb
mov
adc
bound
stos
jnp
loopne
stc
mov
mov
mov
repnz
leave
outsb
ja
push
add
xchg
lods
or
scas
sub
cmp
aad
push
xchg
add
xchg
jmp
add
mov
fmul
sti
or
xchg
cmp
mov
outsb
sub
cwtl
out
dec
pop
sub
push
cmpsb
push
icebp
sbb
add
xor
out
mov
repnz
xor
mov
fsubrl
mov
outsl
jnp
sahf
ja
inc
mov
adc
push
and
lahf
ret
add
test
mov
dec
dec
mov
pusha
hlt
sti
push
out
into
mov
cwtl
dec
cli
daa
ret
test
mov
in
adc
leave
int3
outsb
push
xor
add
dec
or
stos
lods
inc
jg
xor
add
lock
iret
or
or
ret
fmulp
mov
xor
adc
pop
pusha
sbb
sbb
xchg
incb
pop
xor
into
fwait
cmc
test
mov
pusha
test
pop
je
mov
or
lods
add
loop
inc
nop
push
ffree
xchg
mov
jne
dec
push
xor
cs
mov
clc
test
jle
lea
inc
aas
movsb
movsb
dec
mov
pop
into
in
or
and
adc
cmpl
clc
push
cltd
jb
shll
outsl
sbb
lcall
sbb
lahf
cmpsb
xchg
in
ficompl
mov
ficomps
cwtl
mov
sbb
in
mov
imul
orl
push
cmpsb
outsl
lcall
sbb
inc
push
pop
mov
cmpsl
jns
xchg
pop
mov
or
pop
mov
test
pop
pop
stc
lret
push
push
jp
daa
dec
sbb
movsb
nop
orb
and
ret
push
cs
cli
icebp
xchg
push
cmpsb
inc
lahf
jl
dec
loop
repnz
push
push
inc
or
add
ljmp
inc
adc
dec
mov
push
lahf
sbb
imul
jmp
imul
lds
repz
enter
jl
push
fucomp
loop
pop
std
cmpsl
jg
in
jp
cmc
inc
or
les
push
bswap
and
or
mov
dec
repnz
or
add
inc
push
jb
loope
xchg
sub
and
mov
ss
dec
cld
leave
shlb
sbb
xor
inc
adc
sahf
pop
repz
sbb
mov
mov
sub
test
inc
aam
inc
stc
in
mov
dec
pop
pop
push
pop
cmp
push
ret
repz
adc
mov
out
into
jb
push
fldcw
test
inc
outsl
sbb
sbb
in
pop
jno
call
stos
iret
sub
shlb
dec
pop
movsl
aam
daa
int3
pusha
repnz
mov
push
cmp
inc
pushl
and
hlt
cmpsb
push
xor
pusha
shll
fisubrl
insb
sbb
mov
and
sub
scas
pop
insb
jno
lods
mov
cmp
push
pop
sub
adc
sub
test
insl
repz
xchg
shll
ret
sub
cmpsb
jmp
mov
xor
adc
mov
push
jnp
es
add
aam
xchg
daa
out
pop
xlat
jbe
in
decb
add
gs
sahf
push
mov
pop
jns
mov
test
aad
mov
imul
or
pop
pop
loope
inc
mov
xor
int3
pop
and
shll
xchg
mov
jg
sub
stos
rorb
cwtl
or
jmp
jb
loopne
add
mov
das
mov
clc
mov
cltd
push
lods
pop
pop
pop
mov
mov
inc
mov
out
jae
and
lea
pop
cmp
jg
push
hlt
mov
scas
add
aam
mov
adcl
and
fwait
mov
mov
or
and
dec
idivl
add
mov
aas
cmp
cmc
out
pop
mov
enter
adc
pop
add
cltd
clc
push
shr
les
xor
pop
add
pop
lds
dec
jae
xchg
jge
and
roll
mov
stc
adc
push
pavgb
cmp
daa
mov
jo
inc
lods
ret
mov
ds
xchg
lods
or
xchg
repnz
fs
ss
sbb
rolb
fisttps
jb
mov
xchg
fnstcw
pop
ja
movsb
add
inc
adc
cmpsb
out
inc
je
mov
adc
lds
hlt
rolb
inc
mov
inc
loopne
in
jmp
cmp
or
adc
pushf
int3
lcall
sti
nop
mov
mov
in
or
bound
sub
int3
out
inc
mov
and
fwait
call
pop
hlt
mov
or
adc
ror
movsb
pop
or
enter
mov
jmp
aas
lahf
sbb
dec
xchg
xor
xrelease
scas
pop
push
pop
cmp
mov
add
xor
pop
aam
inc
cmp
jno
int
mov
insb
lcall
adc
cmp
xchg
ss
inc
int
mov
lahf
mov
outsb
xor
push
push
icebp
cwtl
call
and
mov
xlat
pop
sbb
xchg
das
adcl
mov
inc
jbe
out
fldt
add
mov
sbb
pop
push
popf
negb
cmp
aad
ja
cmpsb
push
inc
pop
mov
in
mov
adc
das
cs
jno
dec
or
cmp
jne
xchg
push
das
sbb
arpl
adc
xchg
inc
pop
clc
inc
ljmp
shll
mov
das
xchg
inc
mov
ret
mov
sbb
icebp
lea
fwait
insl
mov
sbb
jne
loop
xchg
lock
jp
ret
test
push
push
into
sahf
dec
cmc
cmp
cltd
lret
mulb
jo
sbb
cmpsb
push
jle
mov
div
stc
cmpsb
mov
mov
in
mov
in
and
push
adc
mov
adc
jae
cmp
cmpsb
cmpsb
xor
jecxz
cli
stos
pop
jecxz
imul
out
dec
pop
push
xor
gs
mov
jo
cmp
pop
loopne
pop
js
pop
cmp
movsl
notl
dec
pop
mov
cmp
push
push
mov
pop
and
bound
push
xlat
sbb
enter
addps
inc
out
ds
cmp
rolb
repz
loop
adc
add
sub
out
icebp
adc
xchg
lea
test
adc
out
add
pop
repz
clc
push
pmaxub
and
dec
mov
push
in
sub
popa
add
push
xchg
cmp
push
push
lcall
add
daa
cmpsb
mov
cli
pop
and
sub
xor
pushf
imulb
jmp
xchg
push
mov
jb
or
cmp
push
leave
cmp
add
or
loop
pop
jo,pt
inc
in
lods
push
jle
pop
jno
or
fsubrs
repz
sbb
fisubs
rol
sarb
shll
decb
mov
dec
mov
xor
cmc
dec
out
sbb
nop
dec
out
lods
mov
mov
dec
and
pusha
xor
mov
out
aam
mov
pusha
jecxz
fimull
shlb
ljmp
pop
nop
sub
sbb
mov
dec
jp
and
js
cld
sbb
mov
dec
popf
pushf
cmp
inc
pop
add
adc
pushf
dec
push
add
jo
jecxz
cltd
inc
movsl
or
test
cmpsb
mov
dec
pmaxsw
ret
jmp
cmpsb
pop
daa
mov
mov
pop
push
lcall
lods
lret
sbb
push
cmp
push
stos
dec
repz
sti
test
jb
fildll
pop
and
push
sahf
jb
loop
das
mov
insl
mov
sbb
sbb
push
sbb
shll
out
cmpsl
pusha
bound
mov
jl
push
ffreep
mov
xchg
jg
mov
sbb
aas
add
jmp
mov
sub
sub
stos
mov
lea
out
jecxz
movsl
dec
movsb
push
mov
pop
adc
push
adc
enter
push
lret
bound
add
cmc
sub
jb
sub
add
clc
lock
pop
sbb
outsb
mov
icebp
out
cmc
or
int3
loope
daa
ja
mov
jae
pop
add
pop
cwtl
arpl
jns
inc
pusha
shrb
xchg
inc
lods
mov
push
ljmp
sub
std
ljmp
aas
add
icebp
scas
cli
lea
loopne
xchg
repz
out
jge
mov
inc
xchg
mov
rcl
xchg
mov
or
enter
mov
dec
dec
std
jnp
jne
cld
inc
jg
add
shll
fmull
out
lea
xchg
pushf
pusha
jle,pn
insl
icebp
arpl
clc
sbb
pop
lods
add
and
push
mov
jo,pn
roll
mov
lret
xchg
fsubrl
jg
dec
adc
shlb
jno
inc
xor
insl
loop
aam
inc
sub
mov
push
sub
cmp
addb
xor
daa
inc
dec
push
inc
aas
movsb
lods
mov
mov
xor
insl
loope
aas
nop
cmp
in
out
jns
je
fadds
push
pop
sbb
icebp
mov
insb
sbb
pusha
xlat
or
add
and
cmp
lods
and
mov
test
les
or
xlat
mov
cmpl
sarl
aaa
das
sbb
adc
lahf
in
out
mov
scas
mov
mov
pop
in
std
sbb
xor
pop
and
sub
lahf
aaa
rcll
or
movl
pop
xlat
out
mov
dec
mov
mov
cmp
enter
jp
and
fdivs
pop
call
xchg
pop
xchg
je
nop
lret
push
or
push
mov
pusha
or
loope
ds
out
dec
lret
sbb
inc
inc
mov
mov
dec
mov
mov
or
or
je
data16
lahf
in
ljmp
daa
fsub
gs
std
mov
add
push
xchg
inc
das
xlat
arpl
leave
sub
mov
aas
ljmp
out
test
idivb
imul
fstpt
sbb
jmp
pop
mov
shlb
dec
pop
jmp
stos
lods
shrl
lahf
xchg
xor
inc
mov
or
cs
ss
sarb
inc
jno
cmp
sub
pop
and
jae
cmc
andb
icebp
push
aas
hlt
imul
sbb
ret
or
xor
fdivs
add
fnstsw
cmp
pop
and
and
push
pop
pop
adc
sub
dec
mov
shrl
repz
xor
mov
cwtl
push
xor
sbb
and
sbb
push
stos
cwtl
jns
in
xor
rcl
jg
imul
mov
das
xchg
pusha
push
pop
adc
mov
or
mov
sub
stos
jl
outsl
sti
inc
call
lock
out
sahf
xchg
popa
sub
sub
cmp
scas
cmp
or
fists
jge
mov
pop
adc
pop
or
rorb
or
ret
xchg
daa
lock
xchg
mov
ret
mov
ss
inc
sbb
lods
movsl
cltd
jge
inc
mov
push
dec
add
pop
mov
pop
mov
cmp
out
sub
xchg
mov
push
cmc
shlb
mov
xor
mov
enter
xchg
pushf
inc
ror
aam
sub
enter
lret
sysenter
jae
cmp
and
adc
push
pop
or
push
rorb
mov
jns
xor
movsb
mov
mov
cwtl
fsubr
push
nop
push
inc
or
fistl
mov
dec
jae
jecxz
sbb
mov
stos
sti
jb
rclb
push
arpl
pop
jns
xchg
fbstp
and
ja
aam
fsubs
cli
jnp
sub
lea
push
loopne
jns
popf
in
jecxz
sbb
test
stos
loop
push
mov
mov
loopne
es
iret
jb
aaa
cmp
inc
mov
fidivrs
cmc
lret
popf
or
fwait
cmp
xchg
mov
jle
mov
mov
andb
fiaddl
xchg
cmp
xor
sti
xchg
rcl
cmp
sahf
cmc
ret
outsb
mov
xor
pop
jle
mov
sti
sbb
ret
jmp
adc
or
int
loop
push
add
pop
or
btc
loopne
ret
mov
decl
push
enter
clc
push
cmp
and
cmp
ljmp
mov
fldz
jbe
jl
stos
insl
jp
into
jg
pusha
arpl
nop
mov
test
lods
rol
lods
les
hlt
push
add
in
pop
push
fnstcw
cmpsl
mov
pusha
mov
decl
lods
push
orl
pop
lcall
insl
cmpsl
xor
pushfw
dec
dec
stc
movb
mov
push
out
movsb
out
mov
sysret
outsb
sbb
fidivl
adc
cli
pop
cmp
mov
and
cld
cmp
pop
cmp
sbb
mov
jne
aad
cmp
loope
mov
mov
daa
es
or
movsl
dec
mov
movsb
fimuls
jecxz
sbbl
cmp
fldt
sarl
xor
js
xlat
fidivl
or
mov
adc
push
adc
in
pop
pusha
out
mov
fcmove
xor
xor
ret
and
pushf
fisubrl
stos
pop
mov
int3
shlb
aas
sbb
add
repnz
fucompp
test
test
or
dec
cli
cmp
pushf
or
push
out
sbb
nop
dec
xchg
lods
adc
add
dec
mov
xchg
inc
xchg
addr16
push
ljmp
push
jns
sarb
pop
sbb
int3
repnz
lea
cs
rol
jnp
test
push
out
insl
sub
add
or
push
fnstenv
jmp
jmp
pop
mov
or
mov
insb
jge
aad
mov
aad
in
jne
sarl
imul
es
frstor
out
mov
ret
jno
adc
sub
scas
test
out
stos
in
add
xchg
dec
lock
cwtl
ljmp
xor
adc
mov
mov
mov
enter
scas
pop
adc
xor
mov
or
mov
outsb
add
jmp
clc
pop
popf
pop
scas
and
es
les
xchg
xor
movsb
lret
xchg
lds
leave
mov
or
cld
and
add
out
jbe
cmp
data16
inc
addr16
sbb
enter
nop
mov
mov
mov
xchg
test
inc
jp
sub
or
iret
mov
pop
in
xor
mov
jo
aaa
fnsave
push
push
imul
addr16
iret
mov
repnz
aaa
pop
mov
subb
das
popa
pop
pop
sbb
shlb
fsub
pop
and
mov
fidivl
add
repz
sub
jmp
stos
fnsetpm(287
int3
push
bound
movsl
call
adc
aaa
mov
clc
stc
idivl
mov
lods
sbb
mov
push
mov
xchg
mov
sbb
push
sbb
push
mov
rorl
test
push
into
or
fwait
mov
leave
enter
fwait
push
pushf
subb
clc
push
or
mov
fadds
cmp
and
lret
ficoml
xchg
push
in
aad
stos
rcrl
push
jle
jbe
cs
popa
push
mov
xchg
ja
ja
mov
xor
mov
lret
call
mov
adc
sbb
pusha
data16
aaa
test
sub
add
cmp
cmp
cmp
imul
lahf
shl
or
cmc
aas
adc
movsb
mov
pop
mov
jne
std
mov
popf
int
sub
bound
ljmp
fimull
sub
jl
and
popa
into
dec
jo
mov
out
add
lds
pop
sub
test
movsb
aas
inc
cmp
int3
scas
jp
sbb
add
xchg
pushf
fbstp
pop
pop
shr
rorb
aaa
std
sub
push
les
in
andl
subb
aaa
jae
mov
dec
jo
lods
fbld
popa
mov
mov
in
jecxz
lahf
push
in
and
pushf
in
leave
xchg
inc
stos
jbe,pt
dec
add
and
test
int
cwtl
sub
add
dec
pop
fdivl
jb
inc
fldenv
mov
cmpsl
push
mov
mov
sub
sbb
aam
xor
mov
cli
sarb
ss
xor
and
mov
cli
cmpsl
sub
or
mov
xorb
dec
pop
lods
mov
inc
ljmp
pop
pop
andb
testl
mov
jecxz
sti
loope
adc
mov
test
and
testb
push
test
ss
pop
js
mov
adcl
jno
jo
adc
fnstsw
repz
in
pop
iret
shl
imul
gs
xchg
or
loope
xor
push
outsb
sbb
dec
test
xchg
out
pop
mov
loop
int
int
add
outsl
mov
cltd
xor
cltd
pop
dec
into
or
movsb
xchg
sbb
movaps
xchg
movb
imul
mov
xchg
jge
mov
hlt
cmp
add
mov
mov
call
stos
pop
leave
int
jno
lcall
outsl
sahf
sub
cmp
fdivrs
mov
int3
jns
add
flds
jecxz
adc
mov
push
adc
icebp
imul
dec
xor
mov
mov
sub
push
fwait
aam
xor
lret
push
sub
add
sub
arpl
mov
sti
iret
stc
dec
in
fistpl
mov
repz
sti
cld
insl
mov
mov
push
sub
and
lret
pop
mov
mov
icebp
sarb
dec
mov
imul
sbb
xchg
enter
shrl
lock
jb
icebp
mov
gs
push
mov
push
cmp
cmc
dec
mov
xchg
imul
loope
xorl
jns
add
xchg
add
int
es
mov
jg
rcrl
and
pop
jo
in
xorps
in
ss
pop
mov
cmpsb
jb
xorb
cmp
or
mov
lret
repz
sbb
pop
dec
pop
popa
cld
lock
aam
inc
movsl
lock
jge
cli
xchg
ds
data16
out
outsl
fnstcw
scas
cmp
ret
mov
lods
mov
ja
ss
jl
mov
jnp
insb
or
dec
sub
in
xor
and
xchg
pop
jno
jge
movsl
xor
push
and
movsb
in
nop
inc
stos
test
je
sti
xchg
int3
cmp
out
outsl
mov
int
mov
push
inc
push
mov
in
loop
mov
mov
cmpb
pop
add
ret
pop
mov
adc
insl
cmp
divb
push
les
ficoml
cld
mov
cmp
repz
fdivs
mov
cmpsb
jge
fldcw
pop
or
inc
or
pop
gs
inc
je,pt
xor
aaa
repz
pusha
mov
adc
add
sbb
mov
jbe
mov
jo
mov
push
mov
cmp
jns
mov
adc
rcll
mov
inc
mov
lret
jecxz
addr16
push
lret
repnz
out
mov
xchg
std
jb
mov
mov
je
lods
pop
dec
paddsb
xor
cmpsl
push
jg
cld
xchg
adc
mov
sbb
jns
stc
repz
cmc
jno
sbb
or
push
loop
add
and
push
mov
fcmovu
out
sbb
mov
int3
ljmp
sbbb
shlb
dec
negl
mov
cmp
sbb
mov
ficoms
and
cs
mov
test
pop
data16
aad
mov
xor
mov
pop
mov
test
or
std
out
mov
add
sub
pop
adc
xchg
std
stos
fdivs
xchg
mov
ljmp
dec
jne
dec
sub
ja
add
jmp
out
lock
fldcw
subb
popa
test
xchg
into
ret
mov
mov
ret
repz
loop
cltd
jnp
mov
flds
push
fdivl
jle
repz
insb
pop
out
jg
or
notb
ret
ss
jbe
and
aas
push
clc
ret
mov
xchg
dec
xchg
imul
jb
cmp
lret
mov
into
mov
out
cmp
or
outsl
subb
addr16
loope
or
mov
clc
xor
popa
push
push
cwtl
mov
jae
ficoml
pop
lds
jmp
outsl
shrl
push
or
mov
les
sub
jns
mov
mulps
sub
insb
js
mov
pop
fldenv
inc
and
cmpsl
mov
adc
mov
das
in
fdivrs
jbe
repnz
push
xchg
inc
mov
push
lahf
fidivs
repnz
movsl
repnz
inc
mov
and
push
sbb
xchg
mov
jno
jle
pop
mov
std
mov
pop
repz
pop
arpl
call
in
mov
subl
mov
xor
fwait
movsb
add
inc
imul
adc
xchg
ds
and
cmp
pop
inc
push
dec
repnz
data16
push
ret
jo
inc
std
loope
fbld
lods
pop
jecxz
adc
int
add
mov
sti
and
or
scas
dec
sbb
push
cwtl
es
hlt
dec
pop
lcall
ret
mov
cmp
push
mov
aas
mov
fs
imul
xor
xlat
add
adc
inc
not
jae
jmp
jge
adc
scas
add
int3
enter
push
cli
adc
mov
push
aas
lahf
inc
and
into
add
addr16
sbb
cmc
xor
enter
xchg
mov
mov
pop
ret
clc
outsb
cmp
pop
mov
or
sbb
dec
mov
ror
cmc
mov
mov
mov
push
dec
shll
sbb
mov
pop
movsl
mov
mov
jle
jp
push
in
out
sub
es
adcl
inc
fistpl
insl
adc
push
and
jnp
or
pop
mov
pop
jge
in
jmp
outsb
imul
pop
outsl
les
mul
dec
lds
mov
les
dec
and
or
out
and
push
push
jnp
pop
lock
cmc
cmp
adc
ficoml
pop
insl
push
shlb
push
mov
push
pop
lds
shrl
out
push
jl
sub
mov
jae,pt
pushf
xlat
mov
mov
out
ds
xor
les
xchg
xor
xor
xchg
mov
das
jae
mov
popa
jecxz
push
push
mov
jmp
gs
nop
scas
and
lcall
sar
ss
outsb
stos
es
dec
cmp
pop
lcall
cmpsb
addr16
adc
and
jge
les
add
orb
hlt
push
jl
xchg
ja
stc
js
pop
adc
xor
jnp
movsb
clc
sub
jbe
xor
lods
cli
or
and
cmp
loopne
sahf
push
cwtl
imul
add
push
cld
call
xchg
into
enter
loop
fisubs
sub
lcall
pop
push
clc
add
adc
fisubrl
jb
mov
std
cmp
xor
mov
test
mov
dec
repz
xchg
jbe
imul
call
es
cltd
pop
jb
std
ss
out
aaa
gs
paddd
add
cmp
out
fs
sub
jp
lret
xor
es
movsl
ljmp
out
aam
mov
loop
stos
ljmp
addr16
adc
cmp
push
sub
mov
pop
pop
pusha
add
outsl
lds
pop
sbb
sahf
xor
xor
sti
and
imul
ds
daa
daa
test
and
sub
add
ja
aad
icebp
movl
test
push
lea
cmp
cmp
mov
sbb
shll
cmp
negl
push
jae
adc
iret
sbb
pop
cs
jp
xor
add
aad
repz
jnp
lods
pop
adc
sbb
inc
stos
ficoms
int
sub
fmull
add
in
xor
lahf
cmp
sbb
cmpsl
dec
inc
lret
sub
dec
mov
mov
aad
movsl
jo
ss
push
sti
or
or
call
and
out
adc
in
pop
loopne
or
outsb
push
ficoml
mov
pop
mov
push
xchg
push
jg
and
fs
add
sub
vaddss
push
and
sub
mov
push
addr16
dec
out
pop
adc
scas
gs
xchg
cmp
sub
jp
cmp
and
ret
leave
pop
push
int
rcll
insb
dec
or
sub
push
xchg
fdivrs
sub
aas
dec
jo
cmpsl
add
cmpsl
xchg
jecxz
loopne
inc
push
arpl
jb
int
mov
in
push
inc
mov
or
push
fstpl
cmp
mov
outsl
mov
roll
lret
add
cmp
xchg
lods
in
lahf
mov
sub
push
stos
xor
aam
push
mov
mov
or
jb
cli
mov
sub
out
sub
and
dec
dec
in
pop
pop
icebp
xor
ds
lret
hlt
jnp
add
push
pop
sarb
xor
lret
imul
jle,pt
push
js
arpl
bound
in
call
mov
inc
sub
and
popf
stos
jo
cmp
adc
fsts
mov
jg
into
inc
and
out
add
mov
lock
data16
enter
mov
ds
cmp
mov
mov
inc
mov
and
sub
inc
fdivs
pop
hlt
leave
cmp
ja
lods
lods
pop
arpl
dec
sbb
js
lret
dec
inc
pop
xchg
push
scas
dec
cld
xchg
jno
stc
lahf
adcb
lret
push
push
jmp
aas
lret
sbb
sbb
pop
shrb
add
push
jo
push
mov
das
adc
lods
ljmp
icebp
adcl
rol
push
mov
xchg
arpl
and
subb
bound
lods
lods
rcr
popf
jae
sbb
mov
cld
xchg
out
cmc
loop
add
aaa
in
adc
test
test
sbb
stos
cmc
sbb
xchg
and
xor
ljmp
xchg
in
xor
and
mov
bound
in
cltd
dec
mov
scas
inc
sbb
inc
dec
idiv
cmp
sarb
loopne
loop
movsl
push
sub
mov
and
cli
test
mov
and
mov
xchg
call
rclb
hlt
movsb
adc
daa
xchg
data16
sub
xchg
adc
mov
or
or
enter
jns
sarl
aad
stc
cmp
inc
stc
jno,pn
fists
inc
mov
mov
lods
xchg
jecxz
ss
adc
in
out
incl
daa
mov
mov
push
test
xchg
iret
inc
xchg
xor
and
inc
pop
scas
int3
xor
jl
sbb
and
shlb
outsb
xor
mov
jl
lcall
jno
mov
push
cmp
dec
pop
outsl
pop
inc
xchg
mov
push
sub
jp
cmp
jno
pop
mov
inc
pop
xchg
lret
adc
out
inc
leave
fmul
jbe
lret
decb
stos
fldcw
push
fmul
imul
push
sub
jle
lret
add
das
out
out
icebp
add
add
mov
jle
lret
loopne
push
mov
xchg
cmp
push
seta
sub
jb
aad
pop
mov
shl
cmp
dec
sarl
jo
cmpsl
rclb
mov
mov
ret
xor
adc
mov
rolb
loope
ljmp
out
scas
in
stc
jp
enter
mov
push
dec
add
mov
jno
loop
adc
test
js
cmp
mov
and
inc
out
scas
pop
pop
out
add
mov
test
repnz
inc
roll
lea
pop
imul
ficoms
test
mov
mov
stos
push
jb
test
dec
mov
sub
xchg
roll
mov
sbb
scas
adc
stc
sti
cmc
loopne
jns
push
or
arpl
popa
pop
out
repnz
adc
outsl
jl
in
jne
sub
mov
mov
lea
jae
in
xor
add
cld
imul
pop
cmc
mov
add
sahf
cli
idivb
stc
jmp
dec
pop
mov
sbb
jb
push
popf
test
insl
imul
xor
jae
pop
into
js
lods
pop
fwait
add
dec
in
stos
sub
mov
int3
addr16
cli
aaa
mov
inc
xor
fistpl
xor
xor
in
ds
stc
mov
or
sarb
jecxz
shll
jecxz
mov
ficomps
jmp
jae
sub
mov
das
jge
pushf
and
outsl
lods
in
or
mov
cmp
and
leave
jle
test
hlt
sbb
dec
jmp
int3
jb
stos
pop
push
mov
ja
sbb
xchg
movsl
std
mov
scas
dec
test
add
cld
daa
repz
cltd
add
lcall
imul
and
pop
dec
xchg
or
outsl
xchg
sub
test
mov
pop
andb
adc
adc
ret
jne
push
mov
push
pushf
in
out
ret
pop
push
add
lock
add
cli
cmp
lods
lock
shrl
scas
fdivl
adc
xor
push
xor
fnstsw
push
les
push
loopne
icebp
add
mov
cmp
hlt
cmp
dec
iret
negl
std
daa
pop
dec
inc
push
fisttpl
lcall
popa
jge
pop
int3
xchg
stc
subb
xor
ret
jle
stos
adc
addr16
insl
jecxz
mov
cmp
sub
or
xor
dec
fcmovu
in
add
mov
arpl
mov
scas
push
sbb
int
mov
lods
ret
repnz
repnz
xlat
mov
or
roll
push
mov
add
push
test
mov
out
add
sbbb
push
push
xor
jns
adc
sub
ds
add
mov
xor
sahf
mov
jmp
fsubl
mov
xchg
adc
xchg
aam
out
sub
repz
jp
mov
movsb
push
scas
test
or
mov
jecxz
repz
mull
pop
lahf
inc
dec
lahf
ljmp
dec
sub
jp
and
xchg
test
fs
mov
mov
jecxz
loopne
and
sahf
mov
xchg
jne
xor
add
in
test
and
dec
lock
xchg
mov
add
pop
push
lret
xor
jo
mov
call
mov
pushf
dec
nop
xchg
lahf
mov
ret
jnp
hlt
stc
addr16
mov
mov
jo
lods
adc
jg
loopne
mov
stos
xor
arpl
pop
pop
cmp
addr16
movsb
add
dec
enter
push
fdivrl
cmpsb
out
dec
pop
xchg
pusha
push
mov
inc
fwait
notl
ror
lcall
das
inc
fisttps
pop
jbe
ljmp
and
mov
pop
in
xlat
lret
cmpsl
rorb
cmpsl
cmp
test
mov
in
or
test
xlat
mov
push
inc
or
insb
mov
shlb
daa
popf
cmpsb
sub
sbb
sbb
inc
gs
insl
jl
mov
jne
sar
cltd
loopne
je
rolb
or
mov
inc
push
mov
mov
xor
aas
inc
jmp
and
sbb
push
mov
mov
cmp
loop
mov
or
test
and
pop
push
mov
sbb
mov
lock
inc
aas
in
mov
xor
xlat
mov
test
push
mov
rorb
mov
repnz
sub
lods
int3
outsb
stos
cmc
arpl
sub
dec
add
jecxz
cmpsl
and
xchg
adc
dec
mov
sub
add
jb
inc
push
inc
sub
leave
out
int3
push
dec
xchg
ficoms
or
lret
mov
int
test
inc
ds
mov
frstor
aad
scas
les
test
stc
pop
pop
jo
movsb
popf
insb
sub
mov
into
xor
jnp
cld
xor
lcall
mov
icebp
imul
test
cmpsb
pop
daa
loope
ss
inc
jmp
pushf
into
inc
jb
pop
or
aad
jmp
xchg
or
and
jnp
push
cmp
jp
mov
push
mov
insb
jle
pop
xor
xlat
lahf
xor
xchg
ljmp
mov
aaa
xor
xor
push
mov
pop
adc
call
sub
jmp
outsl
sub
sbb
and
jl
push
sahf
cmp
shlb
mov
stos
sub
rolb
xchg
jge
test
inc
stos
shr
inc
jo
dec
out
sub
test
sub
call
xchg
cmc
test
cmpsl
enter
fsubs
inc
jg
in
or
pop
fwait
pop
sbb
cmp
push
mov
sub
mov
mov
sbb
xchg
cli
mov
nop
xor
enter
dec
arpl
push
inc
cwtl
mov
pop
or
mov
cmpsl
popf
ret
cmc
add
std
test
pop
daa
mov
mov
shll
xchg
in
xor
lret
pop
int
cwtl
mov
xor
or
mov
imul
jle
out
and
dec
jg
mov
loop
sub
in
mov
add
call
cwtl
flds
fcoms
or
lahf
call
es
jnp
mov
fs
adc
mov
mov
das
jno
or
jb
std
daa
add
push
dec
je
testl
insl
add
inc
ret
into
test
xchg
cmp
cs
pop
and
test
add
ss
add
in
imul
xchg
aas
ret
pop
js
pop
aad
sahf
pop
xor
or
adc
mov
lahf
pop
imul
or
addr16
nop
jnp
mov
xchg
pop
xor
popa
sub
inc
inc
test
lods
xchg
push
cwtl
dec
mov
mov
pop
sub
enter
in
cmp
aam
fwait
das
lahf
mov
dec
xlat
pop
inc
jecxz
xchg
movhps
or
dec
subl
add
fwait
pop
jl,pn
std
es
in
sti
ret
push
sbb
movsl
mov
data16
loopne
fwait
push
mov
pop
outsl
insb
add
push
jp
scas
pushf
call
xchg
inc
pusha
and
sub
mov
movsb
push
fistl
push
out
stc
inc
and
stos
pop
adc
cmpsl
test
hlt
sub
ss
pop
gs
imul
adc
adc
mov
lret
shrl
cmp
or
xchg
cmp
mov
fdivp
lret
jg
pop
mov
jb
rorl
sbb
cli
pop
mov
pop
xchg
adc
cmpsl
sub
mov
daa
xor
sbb
xchg
and
aam
inc
test
imul
push
js
pushl
shlb
and
xor
xorl
dec
test
jle
xor
sub
ds
lea
cli
arpl
movsl
mov
and
push
sbb
mov
mov
sub
sbb
arpl
jne
mov
aam
mov
pop
add
dec
cmp
daa
sbb
adc
xchg
inc
lds
push
mov
sub
fstpt
and
push
pop
cmc
test
imull
or
loopne
add
lahf
pop
sub
fsubl
insb
xor
fwait
mov
ret
xorl
cmp
inc
sbb
lock
outsl
push
cltd
lods
jns
dec
cmp
sbb
iret
mov
sti
pop
repnz
shl
xor
loop
push
lock
mov
adc
movsb
push
pop
jp
fcmovbe
sub
xchg
cmc
andl
ffree
icebp
sub
or
pushw
popf
jmp
xor
mov
sub
aas
cli
push
out
adc
inc
push
xchg
mov
mov
popa
jae
es
daa
int
jbe
aas
js
call
cld
inc
aas
scas
nop
ret
cmp
mov
jecxz
into
dec
and
jle
cmp
ds
cs
rcrb
xorb
xchg
cmp
and
cli
sbb
aad
mov
adc
jb
in
jl
loop
push
xor
or
xor
and
mov
pop
aas
mov
pop
fiadds
popa
sub
xchg
add
inc
mov
shlb
mov
insl
mov
pop
mov
push
or
jnp
pop
mov
enter
mov
and
inc
xor
shll
mov
mov
inc
cwtl
cmc
xor
add
mov
mov
stos
xchg
test
add
mov
scas
mov
inc
xor
ret
jne
loope
lcall
push
jge
xor
aaa
cmp
movsl
pop
stc
scas
insb
mov
jmp
stos
push
rclb
xor
rorl
dec
dec
xor
fldenv
dec
mov
cmp
inc
sbb
jmp
jp
sub
inc
loope
pop
mov
jae
fiaddl
jbe
in
out
jb
cmpsb
sbb
mov
push
xchg
adc
push
cmpsl
out
cli
xchg
sahf
pop
shr
and
adc
je
orl
pop
add
sbb
cmpsb
aam
pop
into
or
lahf
sbb
mov
xchg
nop
add
xchg
xchg
test
lret
test
push
mov
popa
das
test
mul
fistpl
dec
out
dec
loope
xchg
roll
mov
insl
mov
dec
mov
push
lret
sbb
dec
xchg
por
add
imul
pop
pushf
inc
test
subl
and
gs
scas
test
sahf
imul
imul
mov
xchg
arpl
loopne
leave
lahf
cmpsb
inc
sbbl
lcall
into
and
ret
xchg
mov
mov
mov
lahf
inc
nop
test
loop
in
sbbb
and
xor
cmp
stos
fs
pop
adc
stc
sub
jne
in
xor
cmp
arpl
fisttpll
je
sbb
jmp
push
out
mov
clc
jo
inc
adc
hlt
and
movsl
mov
insl
out
rorb
pusha
sbb
flds
inc
ja
sbb
lods
jle
adc
popf
sub
outsb
dec
adcl
jne
sbb
testb
ficompl
xor
hlt
mov
and
lods
inc
loope
aas
sbb
push
fwait
out
and
mov
mov
test
mov
dec
mov
add
js
sbb
and
ret
mov
popa
mov
mov
mov
in
leave
notb
mov
out
pusha
leave
int
lret
mov
rcrb
dec
dec
and
les
jo
popf
repz
aam
pop
gs
sbb
out
and
inc
icebp
pushf
orl
push
xor
mov
mov
pushf
push
xchg
bound
das
mov
push
jb
fbld
mov
stc
mov
fiadds
int3
into
push
icebp
sub
out
mov
or
xchg
pusha
pushl
scas
jne
in
add
cmpsb
incb
adc
pop
gs
aaa
mov
xchg
lds
lea
in
push
out
imul
lods
dec
in
scas
xchg
or
gs
jae
dec
mov
test
insb
addr16
sbb
jmp
icebp
lods
jecxz
or
mov
fisttpll
andb
stos
ror
xchg
stos
fbstp
fsts
movsb
xor
xlat
clc
mov
push
imull
mov
in
xor
add
arpl
push
sbb
jecxz
pop
jo
xchg
out
arpl
filds
imul
divl
jbe
push
je
xchg
and
int3
fidivrl
cmp
pop
fisubl
shl
test
cmpsl
inc
std
mov
pop
test
ror
hlt
int3
xchg
imul
stc
in
icebp
leave
leave
push
or
xchg
imul
mov
mov
add
outsl
jb
mov
xchg
push
mov
pop
stos
mov
adc
dec
mov
xchg
mov
das
jecxz
sub
movsl
int
mov
cmp
sbbl
pop
sbb
out
mov
call
fsts
xor
pop
cltd
mov
xchg
lock
adc
push
out
roll
add
dec
pop
mov
or
aad
frstor
pusha
mov
in
loope
cmp
mov
or
sbb
nop
jle
outsl
aaa
test
je
bound
sbb
daa
sub
xchg
test
orl
sbb
pushf
outsb
repz
mov
mov
arpl
pop
insb
jo
pop
inc
push
push
lds
xchg
movsl
xchg
adc
adc
pusha
adc
dec
imul
push
mov
shrd
push
repz
xor
sbb
sub
mov
xor
sub
adc
xchg
inc
add
mov
data16
xor
in
mov
jnp
das
dec
inc
rorb
and
mov
sbb
jne
cmp
jmp
psubsw
pusha
xor
out
xchg
or
dec
dec
push
dec
push
out
rcll
hlt
into
lahf
adc
push
cwtl
ss
nop
lods
jle
arpl
xor
push
aam
dec
cwtl
gs
dec
into
das
mov
int
pop
fisubl
sarb
xor
movsl
paddusb
inc
lcall
pop
sub
mov
sahf
cmpsl
push
les
das
cltd
adc
xchg
cmp
mov
or
add
shl
aaa
test
or
fidivs
mov
faddp
pop
mov
pop
pop
inc
test
fcmovnbe
and
mov
lahf
jg
push
pop
inc
enter
cmpb
mov
or
mov
push
add
cmp
or
testl
and
mov
pop
lret
sub
popf
mov
idivb
aam
dec
out
push
xchg
cmp
cltd
jo
inc
xor
loope
sar
push
lds
adc
scas
xorl
jp
mov
or
push
lret
sbb
arpl
sar
pop
inc
add
clc
inc
xor
loope
sub
pop
inc
fiaddl
test
mov
ret
lret
pop
xchg
xchg
jno
imul
add
adc
insb
mov
pusha
xlat
popa
fcoms
and
jb
outsl
pop
cmp
jp
xchg
sbb
dec
rclb
out
or
add
mov
mov
and
push
jbe
xchg
jp
in
push
ljmp
inc
out
incl
jo
arpl
pop
adc
repnz
cltd
push
fucomp
outsb
xchg
sbb
adc
adc
mov
mov
movsl
push
stc
lahf
addr16
test
cmp
sbb
inc
mov
mov
gs
fnstcw
ja
inc
in
sti
movsb
popa
or
adc
mov
sub
pop
cs
push
jl
push
shrb
mov
xor
mov
xor
inc
ja
push
mov
cmp
ja
push
in
adc
push
sarb
pop
clc
inc
shrb
pop
repz
pop
lods
mov
jg
push
aaa
push
out
lcall
stos
inc
testb
inc
lea
psraw
mov
inc
mov
adc
gs
shll
stos
scas
idivl
jmp
mov
jno
fdivrp
mov
pop
mov
dec
stc
add
insl
mov
xor
mov
jp
stc
jmp
pop
mov
cmp
jb
xchg
out
xchg
xchg
data16
sahf
mov
push
add
or
aam
xor
mov
add
or
jg
dec
dec
pop
xor
mov
push
fs
dec
xor
pop
add
jecxz
ds
xchg
sarb
in
sub
and
lcall
add
cmp
xor
mov
rorb
dec
punpckhbw
rcrb
sahf
push
xor
js
cmp
mov
xor
repnz
stc
stc
xorb
sti
adc
test
lret
cmp
lgs
pop
add
pop
jg
xor
add
dec
xchg
sub
cmpsl
int3
insb
lock
movb
dec
jp
mov
jo
sbb
movsl
mov
mov
jg
adc
sbb
imull
cmpl
sahf
aad
cmp
mov
mov
add
sub
movsb
push
xor
cmp
fisubrs
loope
push
jb
lret
and
mov
add
xchg
pushf
nop
pop
xchg
mov
mov
loopne
push
mov
cli
sahf
jg
lcall
dec
in
pop
cmova
loop
daa
xchg
jns
icebp
aas
mov
ret
or
je
inc
sub
hlt
aas
push
sti
pop
or
lds
bound
dec
stos
popa
ljmp
pop
movsl
xchg
adc
incb
push
xlat
rol
das
sub
sub
aad
add
mov
mov
fwait
and
jno
xchg
stos
xchg
jne
stos
mov
int
xor
leave
mov
jp
movsl
inc
call
and
or
icebp
sbb
aas
in
stos
add
aad
mov
cmc
aas
adc
rorb
jmp
sbb
dec
ds
into
hlt
scas
shll
idivb
aam
jp
in
bound
cmp
adc
les
pop
adc
pop
insl
inc
out
das
cmp
cli
mov
xchg
xor
xor
cmpsb
mov
push
pop
or
vpshuflw
xlat
adc
ljmp
jl
xchg
popa
push
mov
lock
xchg
mov
addr16
outsl
loope
cmp
test
push
arpl
cmc
data16
aam
or
mov
fdivl
hlt
cld
jne
lcall
xor
arpl
out
sub
outsl
add
pop
mov
es
add
aad
push
or
pop
jb
rorb
and
hlt
inc
push
sub
jb
mov
hlt
adc
jmp
mov
cli
fiadds
adc
test
or
push
lret
mov
jle
addb
sub
stos
push
out
sub
mov
addr16
dec
push
mov
pusha
test
xor
movsl
adc
popf
ret
pop
ljmp
cmpsl
in
mov
leave
sub
adc
stos
loopne
test
sub
test
pop
mov
imul
mov
in
fs
xchg
icebp
jo
mov
add
stc
lds
fs
and
bound
fs
jp
cmp
dec
ret
mov
fs
inc
and
xchg
dec
inc
jge
sub
and
inc
aaa
xchg
ljmp
out
psubb
push
push
pop
shll
loope
or
clc
ret
mov
leave
xchg
cmpl
inc
and
add
lock
iret
cmc
cmp
hlt
xorl
ret
mov
ret
jp
ficoms
mov
out
jns
adc
mov
hlt
cmp
inc
add
lods
mov
shll
mov
data16
lock
lea
xchg
popa
in
out
outsb
jb
daa
mov
cmp
outsl
pop
mov
add
push
or
pop
adc
test
pop
popf
imul
pop
cmp
imul
xchg
sub
dec
fistpl
cmp
addr16
fdivrl
test
mov
outsl
or
repz
add
and
lods
jle
fcompl
ficompl
js
fwait
sub
test
mov
jo
inc
shr
adc
int
addr16
cmp
add
movsb
xchg
push
mov
popf
push
daa
xor
mov
cmp
xchg
lea
insl
jae
fstps
movsb
cmp
int
in
cltd
aam
sti
cs
mov
xor
scas
mov
push
cmp
push
lret
mov
cmp
push
mov
loopne
es
js
loope
cmp
dec
adc
cmp
sub
xor
push
mov
mov
adc
and
leave
mov
mov
ja
call
je
fucomp
arpl
inc
adc
cs
xor
test
arpl
mov
xor
and
mov
das
lret
popf
dec
xor
cmp
ss
lret
rclb
push
cwtl
xchg
pop
insl
add
mov
ss
xor
fdivrl
sub
popa
fstps
insb
scas
popf
inc
mov
pop
out
fwait
shlb
outsb
call
ret
leave
sbb
jae
xor
shll
mov
jbe
cmp
dec
xchg
add
pop
icebp
push
pushf
push
outsb
pavgb
mov
sub
pop
cmp
mov
clc
out
adc
xor
fnsave
mov
dec
mov
and
lcall
stos
sbb
and
jb
outsb
lock
or
xchg
dec
sti
lods
les
aas
mov
fisttps
inc
dec
cmp
test
xor
adc
xchg
mov
xchg
xchg
outsl
cmp
in
icebp
mov
jae
out
add
jge
ja
mov
mov
dec
ret
aas
jmp
fadd
out
jmp
test
xor
pop
repz
lods
jmp
dec
clc
push
or
dec
dec
cmc
jno
fldcw
sub
rolb
add
adc
adc
sub
sub
out
cmpsb
mov
lcall
or
cmpsl
pushl
and
cli
pop
outsb
ret
dec
or
cmpsb
test
add
out
stc
xor
push
sub
mov
push
rorl
shrb
insb
mov
sti
mov
inc
or
imul
mov
inc
dec
stos
sbb
jge
bound
mov
cmp
or
dec
mov
loopne
bound
xor
add
mov
ficompl
xor
mov
ret
xchg
aam
daa
shll
out
aam
jg
mov
jp
jno
gs
imul
dec
mov
loopne
ljmp
push
xchg
cmp
mov
inc
mov
push
negb
push
or
inc
ror
repz
js
fiaddl
mov
je
xchg
mov
outsl
or
lahf
push
andb
mov
mov
push
test
mov
xor
fdiv
cli
mov
jge
daa
cld
push
insb
mov
cld
mov
or
andb
jl
xor
xor
inc
ss
sbb
sbb
mov
stos
jge
inc
sahf
xchg
call
add
inc
orb
clc
adc
in
mov
mov
and
sbb
invd
stc
xchg
test
sti
lahf
jns
sarb
fdivrl
sbb
faddl
xchg
sbb
mov
loopne
or
mov
inc
inc
mov
cmc
push
movsb
sahf
test
insl
loope
jecxz
sahf
lea
sarl
and
mov
nop
sbb
xchg
push
and
mov
outsb
sub
mov
mov
stos
sahf
popf
sbb
xor
out
rorb
pop
jge
push
add
mov
es
fwait
inc
in
adc
negb
scas
mov
mov
cwtl
inc
fnstcw
add
mov
stc
dec
loop
pop
cmp
int3
pop
cmp
dec
leave
mov
jmp
jg
dec
xchg
mov
mov
jb
bound
popa
add
or
jmp
inc
test
and
push
mov
outsl
into
xor
inc
xor
cmp
pop
out
mov
xor
cmp
jl
movsl
sbb
cmp
cmpsb
into
xor
sbb
sbb
sub
into
jnp
mov
loope
lods
ds
sbb
mov
fistl
daa
ja
icebp
sbb
xor
js
fwait
mov
jno
cmp
int
and
rsm
ret
xor
sahf
jp
loop
add
pop
cmpsl
je
jns
cmp
dec
cld
lahf
mov
lods
cmp
out
cmp
cwtl
jecxz
xor
popf
inc
jecxz
notl
hlt
hlt
jge
push
dec
pop
out
shrb
pop
hlt
rcll
outsl
scas
cmp
repz
sbb
sub
xor
popa
mov
push
test
cli
jp
pop
cmpsl
dec
shrb
dec
stos
sub
xor
mov
xchg
rcll
mov
sbb
and
xorl
sti
mov
enter
lret
push
loopne
mov
adc
or
pop
sbb
jg
aad
and
sub
xor
loopne
push
addr16
aas
mov
dec
pop
cmc
loop
mov
xchg
mov
or
xor
push
in
mov
pop
out
test
or
loop
sub
cld
fwait
xchg
out
xchg
or
popa
add
push
sub
test
pop
adc
mov
lods
mov
inc
scas
add
movsb
movsl
repz
mov
shrl
mov
aas
imul
xlat
xor
faddl
arpl
xchg
call
es
mov
dec
push
adc
push
mov
repnz
fldcw
sbb
loop
sub
adc
ds
jg
rorb
inc
mov
jnp
pop
fistl
insl
and
inc
inc
cld
dec
push
jl
jo
mov
ljmpw
push
test
fistl
int
push
cmp
ficompl
lret
push
jo
cli
lret
aas
in
lods
loope
cmpsl
repnz
or
ret
xchg
movsl
je
mov
ret
xor
cld
aam
push
fildl
xchg
xor
cmpsl
pop
sbb
sub
or
aas
pushw
pushf
movsl
and
scas
popf
jmp
sbb
jmp
lods
mov
sbb
subb
sub
cli
sahf
sbb
ret
orl
fwait
test
xor
verr
aad
push
dec
dec
cmp
popa
testb
int3
push
mov
lock
and
in
pop
cmp
push
loopne
sub
lds
push
xchg
or
ja
add
shrb
and
cmp
sbb
mov
pop
mov
add
out
cli
cmp
xchg
daa
aaa
aaa
add
rcll
jb
lret
mov
out
enter
bound
mov
pop
ret
movsl
jecxz
push
push
pop
fimull
cltd
leave
jnp
pop
and
pushf
test
nop
in
xchg
lods
dec
hlt
xor
aaa
imul
icebp
and
dec
or
or
movsb
lcall
xor
je
mov
adc
lods
fs
adc
xor
lods
or
inc
mov
cmp
popa
or
jbe
inc
lret
mov
in
xchg
adc
loopne
or
or
sbb
mov
imul
cwtl
lret
rorb
or
inc
imul
mov
jmp
ja
mov
xchg
es
adc
out
cmp
out
jge
dec
inc
pop
repz
sub
es
nop
mov
jp
fisttps
jns
jg
pop
sub
lcall
xchg
hlt
jg
hlt
push
and
movsb
in
fsubr
mov
in
addr16
fisttps
mov
rorl
nop
pop
mov
cs
push
add
loopne
ret
clc
repnz
mov
mov
lret
mov
data16
dec
mov
test
jnp
dec
push
inc
pop
test
loop
aam
test
jb
stos
adc
clc
sbb
test
sarb
pop
cmp
xchg
push
mov
das
dec
dec
sbb
lcall
pop
cli
bound
ret
cmpsl
loopne
loop
dec
es
imul
js
in
out
adc
aaa
inc
enter
popa
lcall
bnd
lods
imul
sti
rcrl
pop
pusha
xor
arpl
dec
xor
icebp
sub
std
or
aaa
mov
daa
dec
mov
pop
xlat
test
add
push
sarl
call
ja
shlb
andl
mov
daa
cli
aam
mov
push
jbe
inc
cmc
sbb
or
loope
imul
cmp
inc
inc
fimuls
fisttpl
pop
sbb
sahf
sbb
out
dec
test
and
xor
or
outsb
out
and
ret
xor
mov
push
pop
cld
xchg
and
jb
js
push
sub
addr16
cmp
fisttps
jecxz
dec
shrb
xchg
outsl
xchg
jg
cltd
orb
xchg
inc
push
in
add
xchg
adc
dec
scas
pushf
out
inc
jae
adc
jne
cmpsl
dec
insb
fistpl
jo
dec
or
pop
push
mov
dec
cwtl
pop
jl
xchg
push
lock
pusha
push
push
pop
fistpl
mov
jbe
lret
lds
xor
mov
and
into
sbb
aas
rclb
push
mov
pusha
rcll
mov
mov
mov
add
gs
mov
out
or
insl
pusha
pop
gs
js
scas
mov
out
mov
arpl
je
jmp
cli
in
int3
ljmp
rcr
stos
push
lcall
mov
xchg
fiaddl
mov
pop
or
add
fadd
rcrb
mov
je,pt
mov
decb
clc
icebp
cmp
fldl
ffree
and
xadd
sub
inc
mov
and
push
adc
xchg
hlt
stos
fcmove
push
stos
push
rcrl
xorb
or
mov
repnz
scas
iret
ficomps
fiadds
iret
push
loop
jl
push
xchg
xlat
ss
cmp
mov
ret
push
xchg
sbb
pushl
adc
mov
jb
jo
into
negl
jno
ljmp
daa
push
cmp
sbb
fs
push
loope
dec
subl
es
les
gs
mov
mov
scas
mov
cmpsb
cmp
xchg
dec
cwtl
push
jle
xlat
aad
mov
dec
cmp
add
outsb
scas
fdivrs
push
sahf
and
scas
or
std
sahf
dec
fstpl
sub
or
test
add
das
add
mov
jle
mov
lds
std
push
or
sbb
icebp
lea
sarb
push
addl
or
outsb
divl
jo
cwtl
gs
lret
xor
cltd
adc
jge
and
das
adc
cmp
stos
stos
ljmp
dec
add
orl
push
ret
repz
repz
sub
dec
fmul
shlb
cli
inc
jmp
fcompl
mov
lret
clc
xchg
lcall
jno
push
lret
scas
jge
je
pop
fwait
cmp
out
loopne
test
mov
mov
fsts
cmp
inc
lods
outsb
or
sbb
pop
pop
test
sub
dec
fcmovnu
lret
sahf
iret
dec
lahf
cmp
cmpsb
jnp
mov
ja
xchg
int3
dec
rorl
jae
mov
in
inc
cmp
dec
pushf
push
std
dec
mov
sbb
adc
iret
ret
insl
inc
sahf
xchg
xchg
sbb
pop
jmp
mov
ds
lret
test
retw
inc
and
jge
insb
loope
int3
jns
mov
cmp
jns
ret
or
mov
jnp
pop
cmpsb
mov
xchg
adc
daa
mov
cmpsl
ds
xorb
pop
cmpb
sbb
mov
sbb
cmp
or
insl
es
lods
dec
dec
and
and
dec
cltd
insl
in
inc
pop
xor
cmp
or
ret
scas
repnz
adcl
loope
lahf
mov
icebp
in
xchg
repz
pusha
and
shrl
jg
pusha
jns
adc
jno
mov
scas
push
nop
mov
push
popf
testl
outsl
into
or
and
or
in
jl
jnp
out
jecxz
leave
lahf
add
xchg
mov
popf
shlb
ficomps
and
imul
cmp
ss
push
xchg
imul
mov
xchg
sub
outsb
push
jge
xchg
cmp
std
adc
dec
inc
mov
aas
inc
jo
fsubs
push
jle
xchg
cmp
es
dec
loop
imul
adc
out
mov
sbb
or
jno
mov
xor
adc
cmpsl
insb
stc
mov
mov
cmp
icebp
push
or
mov
fwait
out
addl
movsb
dec
push
mov
pop
rcrb
in
sti
leave
pop
inc
push
pop
push
mov
mov
cmpsl
xchg
andl
pop
push
jp
stos
inc
std
xlat
sbb
dec
roll
adc
mov
or
adc
push
rcrl
mov
add
fbstp
fistps
add
inc
inc
adc
ret
mov
mov
and
xor
cmp
sub
jmp
jo
adc
fsubs
jno
mov
xchg
xor
es
imul
fwait
aam
adc
popl
inc
inc
dec
fstpt
lds
mov
scas
dec
aad
push
fincstp
pop
lea
in
inc
lock
push
adc
jno,pn
and
mov
addl
test
mov
adc
mov
add
jo
cmp
fwait
mov
push
add
adc
mov
out
mov
inc
mov
push
lcall
pop
sub
push
jmp
xchg
test
mov
sub
cmp
sub
and
xchg
adc
or
inc
adc
cmc
xlat
cltd
mov
xchg
outsb
jp
in
int
mov
cmp
pop
ljmp
test
loope
xor
sub
and
or
test
xchg
loop
movsl
push
fwait
dec
call
mov
pop
test
mov
or
loope
push
mov
int
shlb
xlat
pop
jnp
pop
dec
add
push
add
call
dec
mov
enter
scas
jle
cmpsl
call
lret
sarl
dec
jnp
lock
inc
cmp
pushf
stc
xor
lret
xchg
mov
add
pop
adc
popa
loopne
cmp
or
ljmp
mov
pop
rcll
push
in
or
jbe
pop
js
xchg
out
mov
mov
fwait
lret
inc
aad
cmp
es
push
jo
inc
test
push
gs
movb
or
imulb
mov
loope
pop
mov
mov
mov
aam
daa
adc
popa
aas
int
aaa
mov
inc
pop
jl
call
pop
adc
test
aas
push
jnp
jp
fnstsw
sbb
and
insl
loop
cmp
mov
fmull
addb
rcrb
aad
mov
and
fistpl
mov
mov
mov
loopne
scas
andb
and
fcomp
or
repnz
insl
dec
xor
stc
out
fisubrl
jnp
rcll
mov
sub
mov
or
mov
repnz
pop
sub
add
out
jns
xor
loope
shll
inc
aad
lcall
adc
and
push
or
xchg
arpl
sbbl
jo
sub
sub
imul
negw
rcrb
hlt
lret
lods
jbe
fsubrs
outsb
lods
cmpsl
push
fldenv
sbb
out
add
je
mov
pop
push
lcall
loope
jb
mov
pop
push
mov
aaa
jge
mov
pusha
sarl
iret
stos
dec
or
mov
and
jl
sub
cmpsl
outsl
pop
push
jns
daa
or
xchg
or
dec
add
sarb
out
cmpb
lds
dec
pushf
dec
test
pop
nop
imull
push
xor
nop
inc
push
aaa
enter
data16
repz
les
xchg
pop
mov
inc
sub
inc
div
mov
xchg
or
in
adc
fcmovb
flds
mov
sub
mov
jg
lods
or
roll
pop
pop
fwait
inc
mov
sub
xchg
mov
cli
fcmovbe
mov
test
lods
jb
dec
dec
scas
int3
test
insb
push
mov
es
mov
and
ja
xor
ja
or
adc
jbe
xor
xchg
aaa
test
ja,pn
sub
or
out
xchg
and
or
sbb
cmpsl
jo
imul
adc
xor
stc
pop
pop
idivb
aaa
pusha
lea
enter
int3
mov
mov
or
or
aas
and
es
jo
cltd
sbb
mov
jg
ret
adc
sbb
jns
adc
mov
and
incl
arpl
lock
scas
adc
push
add
push
fwait
dec
es
sbbb
mov
add
dec
add
dec
lods
inc
out
xlat
mov
and
js
adc
xchg
adc
lods
decb
hlt
fs
mov
pop
out
sbb
mov
and
mov
inc
add
add
pop
adc
add
fucomip
dec
je
test
outsb
shll
cmpsb
mov
arpl
push
filds
cmp
movsb
mov
es
lock
imul
ljmp
mov
pop
add
xchg
stc
sbb
popf
jl
rclb
inc
and
push
cmc
ret
pop
add
mov
and
pop
push
sbb
cli
pusha
call
mov
add
xorb
in
push
cwtl
andl
jmp
pop
lcall
movsl
xor
leave
lods
sub
in
imul
push
sub
push
pop
outsl
mov
mov
cmp
cs
leave
jp
aam
mov
in
daa
rclb
cmp
cmp
inc
adc
adc
cmp
jmp
aaa
fs
push
mov
mov
fsubrl
lcall
xchg
adc
push
push
mov
repnz
ret
andl
add
dec
xchg
movsl
pop
test
jge
lds
jnp
into
push
js
jbe
xor
xor
sub
push
ljmp
push
std
xchg
iret
es
mov
mov
mov
xchg
mov
mov
sub
mov
movlps
das
mov
and
lods
ljmp
xchg
iret
sbb
insl
xchg
and
cmp
jbe
dec
or
lahf
pop
or
mov
adc
mov
repz
xlat
mov
clc
es
loop
jbe
js
cld
dec
movsldup
sub
call
insb
icebp
fsubrs
loope
fwait
and
cmpsb
push
in
fwait
add
js
add
jbe
jg
push
shlb
adc
mov
outsb
add
xchg
cwtl
dec
out
dec
xchg
adc
mov
mov
cmp
aas
dec
xchg
mov
xchg
lea
subb
aad
popf
data16
mov
sub
and
fldcw
mov
aam
lret
mov
mov
mov
lds
aad
or
cmp
repnz
xchg
dec
das
enter
ja
cli
jae
loopne
adc
pop
shrb
out
sub
xchg
mov
xchg
vmovsd
arpl
ja
outsl
or
arpl
push
dec
testl
cmp
pop
xor
push
dec
out
outsl
ss
leave
imul
inc
or
dec
adc
test
add
iret
inc
or
das
cmp
or
mov
dec
les
out
mov
mov
cmp
adcl
addr16
sbb
inc
pop
ret
sub
cmp
adc
imul
test
adc
ja
pop
sbb
jno
add
sahf
sbb
xor
and
push
fstpt
popa
and
sbb
cmp
outsl
push
add
xchg
xor
cmp
and
pop
xor
clc
mov
aaa
test
pop
add
in
adc
and
loopne
mov
loopne
fucomip
lock
or
mov
les
jg
mov
lret
std
addr16
addb
out
xchg
inc
pop
xchg
out
cmpb
imul
es
cltd
mov
repnz
mov
out
dec
mov
xchg
lds
push
sbb
cmovge
rcl
addr16
cli
mov
jns
mov
pop
test
sti
inc
mov
push
sbb
dec
loopne,pt
xchg
inc
jg
dec
push
data16
imul
push
divb
or
inc
pushf
sub
stc
imul
inc
frstor
mov
das
add
jo
into
push
jle
mov
aaa
xchg
das
out
cmp
xor
addl
cmc
sub
cmpsb
jle
fwait
addr16
pop
xchg
xor
xor
xor
lds
cmc
fldenv
call
dec
or
ljmp
fcompl
cmpsl
jb
stos
sbb
mov
push
pop
pop
movsb
ss
mov
inc
push
xchg
push
inc
decl
push
in
sub
jle
insb
in
lods
sbb
jle
add
jp
mov
ret
add
pop
test
arpl
inc
xor
jmp
mov
inc
jle
pop
push
xlat
mov
stos
popf
inc
daa
pop
jl
in
clc
jp
mov
mov
dec
arpl
jle
xchg
sub
jns
mov
and
sbb
fdivs
lea
in
test
ficompl
stc
mov
aam
aaa
faddl
mov
jbe
mull
mov
or
aam
sbb
sbb
sahf
jg
sbb
cwtl
fmull
mov
add
das
imul
int
or
inc
sbb
sahf
test
leave
sti
mov
repnz
inc
push
out
mov
jne
adc
hlt
cmp
push
in
xchg
mov
std
adc
movsb
in
pop
or
mov
mov
sub
adc
inc
sub
xchg
cmp
push
int3
int
xor
loop
fimuls
adc
dec
xchg
and
cmc
sti
rcrl
and
scas
mov
pop
xchg
pushf
mov
and
mov
cmp
lea
jae
ja
mov
shll
test
hlt
dec
sub
lret
xor
sub
or
das
mov
dec
sbb
xchg
cmp
add
les
ffreep
mov
add
call
ffree
push
iret
cwtl
mov
dec
pop
jae
or
enter
dec
fisttpll
cmp
leave
movsl
pushf
ret
cmp
cwtl
push
fsub
popa
shlb
xchg
rcrb
fnstsw
mov
mov
pop
dec
rcr
fwait
ret
sub
lcall
add
iret
cmp
movsl
fs
adc
fldt
je
or
aam
hlt
add
bound
mov
test
testl
inc
and
insb
dec
fsubs
repz
cmc
mov
inc
push
repnz
decb
mov
pushf
ficoms
aam
out
cmp
jmp
and
lock
pop
jp
mov
outsl
roll
adc
push
aam
into
sahf
xchg
mov
imul
data16
ficomps
adc
sahf
jns
push
push
mov
xor
or
xor
add
mov
jecxz
push
cwtl
mov
add
inc
movsb
adc
xchg
repnz
dec
adc
jo
lods
pop
push
cmp
inc
push
pop
cmp
push
orl
push
ffree
iret
roll
xchg
sub
inc
mov
std
and
addr16
jo
pop
stos
loope
setne
mov
adc
mov
in
std
frstors
imul
rol
aam
iret
js
sub
jb
pop
jmp
add
mov
push
mov
outsb
in
jns
sbb
clc
gs
jp
jae
pop
mov
addl
aaa
xor
mov
out
xor
cmp
dec
outsb
enter
adc
ljmp
inc
sbb
mov
ret
sahf
inc
add
je
sahf
inc
repnz
mov
imull
aam
fs
lock
ret
mov
fwait
sbb
jg
jecxz
lret
adc
cmp
das
arpl
sbb
inc
les
jle
sub
movsl
inc
sub
inc
cmpl
mov
in
adc
daa
cmpsb
push
add
das
sub
push
popa
mov
inc
repz
mov
jle
imul
and
es
xchg
hlt
sub
mov
inc
dec
adc
out
cmp
into
add
and
mov
ret
ffreep
dec
mov
push
and
sub
enter
dec
and
push
inc
fs
inc
leave
and
mov
pop
out
jl
pop
stc
sbb
push
xor
aaa
dec
out
loopne
out
push
dec
push
cltd
jb
jno
enter
pop
sbb
jp
stc
and
fimull
fdivl
sub
dec
cs
add
stc
je
es
aaa
cwtl
jecxz
loopne
push
fmull
rolb
test
lods
or
jp
add
adc
pop
daa
or
fwait
stc
sub
gs
out
cmpsl
dec
repnz
xchg
push
xor
adc
pusha
pop
frstor
cmpsl
stos
push
inc
fisubrl
xchg
pop
mov
push
in
loopne
sbb
ficomps
fs
push
cli
lods
out
xor
sub
add
xchg
mov
xlat
fwait
test
mov
fcompl
dec
shlb
sbb
xchg
shlb
mov
add
or
flds
mov
cmp
jb
lods
push
test
dec
sub
sbb
idiv
sub
lret
imul
xor
stc
jne
mov
mov
nop
jbe
icebp
xchg
mov
ljmp
and
inc
cmp
cmovae
cld
jb
outsl
push
fs
fistpll
cmp
inc
sbb
rorl
leave
push
mov
mov
cmp
cmpl
mov
jecxz
or
push
loop
sub
xchg
mov
cmc
stos
jecxz
shll
js
sbb
jnp
sbb
and
inc
jne
repnz
sbb
lahf
sahf
jnp
mov
loop
mov
fdivp
cld
sub
mov
push
sub
mov
add
push
pop
mov
push
cltd
adc
and
orb
or
cmp
xor
and
mov
pop
push
sbb
pop
bound
sbb
dec
insb
or
icebp
js
imul
je
cmpsl
or
sub
mov
mov
imul
lret
xchg
wrmsr
nop
cmp
call
jge
out
pop
orb
clc
sub
lcall
mov
and
das
dec
aaa
push
sahf
sbb
daa
into
fwait
cli
scas
loope
cmp
repz
push
clc
cltd
xchg
pushf
call
push
push
arpl
mov
iret
adc
decl
pop
test
fwait
shlb
push
adc
icebp
cmp
fs
mov
aad
xchg
dec
cmp
jg
cmc
loop
movsb
mov
clc
sbb
xchg
lods
arpl
shrb
in
inc
bnd
insb
daa
loope
addr16
clc
lock
daa
mov
lret
and
xchg
in
stos
aam
mov
cmp
notl
mov
mov
je
pushf
sahf
out
inc
or
shll
or
cmpsl
test
push
aad
test
shrb
leave
in
jno
es
add
popa
sbb
ss
icebp
push
or
movl
stc
or
mov
sub
mov
bound
call
cmp
rolb
jecxz
insl
in
subb
je
adc
nop
dec
leave
outsb
mov
sbbb
cmpl
pop
fwait
enter
push
sub
orl
jns
dec
dec
sub
call
icebp
jnp
sahf
lahf
add
jb
dec
je
sub
inc
out
movsl
pop
lods
icebp
pop
adc
rcrl
xor
mov
cmp
or
sub
mov
dec
sbb
pop
gs
int
enter
popa
xchg
mov
scas
mov
push
dec
loopne
jb
sub
test
adc
cli
adc
loop
lahf
pop
out
das
push
cmp
je
jbe
imul
adc
sub
mov
inc
idivb
cld
add
sti
jbe
ficoms
dec
mov
mov
rcl
sbb
nop
push
adc
pushf
xor
add
repz
jnp
jg
and
mov
ja
xor
and
jbe
mov
mov
xor
xchg
pop
lahf
fs
or
pop
push
sbb
cmp
inc
dec
cmc
scas
clc
icebp
jne
scas
jno
lds
pop
xor
pop
shll
cmp
dec
dec
mov
dec
xchg
and
sbb
inc
and
push
movsb
outsl
stc
decb
sub
and
lds
frstor
sbb
mov
subb
xor
ror
sub
xchg
pop
mov
or
jns
jp
sbbb
imul
stos
clc
lds
xchg
mov
enter
add
xchg
cmpsb
xor
xor
sti
out
int3
cmp
popa
mov
clc
fistl
jmp
vpmovsxbd
and
ret
in
push
pop
adc
add
test
into
sbb
mov
scas
xor
std
mov
fs
out
mov
add
xchg
je
and
xchg
clc
cwtl
ret
in
xchg
sar
xor
sbb
scas
fisubrl
and
sub
fnstenv
in
lret
mov
add
icebp
adc
mov
call
pusha
mov
mov
scas
in
pop
popa
sbb
mov
les
repnz
lods
inc
addr16
push
dec
movsl
insl
addl
movsb
mov
ds
or
clc
ds
out
add
scas
movsb
enter
je
xchg
push
aad
inc
test
mov
xor
test
movsb
and
dec
cli
out
add
in
or
sbb
loopne
stos
insb
int
add
fbstp
jle
inc
sub
ficomps
int
jl
mov
mov
xchg
iret
push
jnp
jnp
popf
aad
push
fstpl
mov
in
pop
and
out
mov
mov
xchg
imul
daa
stos
cmp
mov
jno
push
pop
into
enter
stos
pop
adc
mov
push
fsubr
cmp
push
sub
mov
adc
xchg
inc
xlat
sbbl
xchg
and
adc
lahf
mov
rcrl
pop
add
mov
popl
pop
jae
insb
sti
mov
jmp
test
mov
mov
mov
je
jae
or
push
pop
push
xlat
aas
xlat
sub
iret
and
insb
in
ja
pop
xor
mov
lret
adc
cmp
jl
shlb
repnz
repz
mov
push
xor
inc
jg
aaa
mov
loop
ret
dec
mov
and
jmp
aas
daa
nop
lds
movl
pop
mov
and
mov
mov
aaa
test
cmpsb
pop
xchg
orl
in
push
in
cwtl
jne
mov
lock
lcall
pushf
in
mov
cmc
lods
imul
jge
ror
lods
mov
roll
and
pusha
dec
arpl
loop
repnz
mov
xor
cmp
adcl
scas
mov
jae
aas
arpl
orl
add
push
and
dec
inc
mov
jnp
lahf
jo
jae
shlb
fdivp
push
mov
jbe
pop
xor
push
xor
pop
pop
xor
push
fcomps
pop
std
sub
push
std
das
or
mov
aaa
jns
jns
cld
sbb
push
cmpsl
iret
jns
jp
inc
loope
pop
out
cwtl
in
mov
sbb
xchg
iret
jo
add
mov
xchg
lcall
sbb
mov
inc
jecxz
or
std
jecxz
dec
leave
cmpsl
inc
cmp
add
inc
outsl
or
push
jbe
dec
cmp
and
loope
or
sbb
mov
ja
pop
adc
xchg
jbe
imul
rcrb
inc
jg
pusha
inc
ret
jge
das
pushf
daa
jmp
pop
pop
pop
sub
add
in
jo
clc
das
pop
jae
sarb
mov
test
in
adc
mov
enter
inc
pop
gs
mov
ja
cmp
push
add
insl
lret
insb
jae
jno,pt
sbbb
xchg
add
mov
inc
shrb
xchg
cmc
and
and
jg
jno
mov
jb
and
inc
push
movsl
ljmp
test
outsl
scas
adc
fsubs
mov
xchg
rol
mov
ret
inc
mov
sbb
out
dec
leave
lcall
inc
iret
cmp
dec
adc
cmp
adc
in
xchg
xchg
or
or
sub
push
pushl
sbb
lock
mov
bound
mov
pushf
rclb
fwait
cmp
in
sti
mov
int3
subl
jg
flds
roll
ss
std
jnp
sub
xchg
jmp
into
pusha
xchg
mov
dec
movb
pop
dec
cwtl
jp
and
xor
dec
movsb
cltd
pop
in
cmp
mov
gs
fcomip
mov
aad
sbb
mov
xchg
mov
in
lcall
outsl
in
daa
lahf
inc
inc
scas
cli
aaa
lcall
sbb
inc
xlat
fcompl
xchg
jp
aas
inc
add
outsl
rcrb
mov
push
or
gs
popa
cmp
mov
xor
pop
loope
pop
lcall
pop
add
cltd
jle
loopne
leave
shrl
rorl
mov
addl
in
xchg
into
frstor
adc
push
add
sub
mov
pop
inc
iret
fndisi(8087
and
addb
sbb
incb
dec
sub
lods
mov
inc
add
dec
mov
mov
jg
stos
and
jo
sbb
adc
cmpl
xor
lahf
stc
leave
mov
in
clc
adc
cs
inc
dec
adc
lods
push
sarb
lods
cmp
or
dec
sbb
mov
mov
mov
xor
cmpl
add
enter
jb
xor
arpl
xchg
cmp
aad
addl
push
ljmp
fsub
cwtl
stos
call
in
das
leave
pop
dec
sub
jno
xlat
and
cmp
addl
sub
das
cli
icebp
xchg
cmp
leave
add
mov
push
xchg
pushf
jae
adc
nop
cmpsl
mov
mov
mov
cmp
adc
mov
or
jge
movsl
mov
xlat
mov
clc
or
dec
mov
xor
subl
rcrb
push
stos
addr16
addr16
or
mov
loop
lds
cwtl
mov
cmp
dec
out
orl
xchg
gs
xchg
sti
xchg
scas
mov
dec
cmp
sub
or
sbbl
mov
push
jl
xchg
lret
fisttps
lea
cmpsl
mov
aaa
loop
sub
add
call
mov
mov
or
aam
add
cmp
add
lea
mov
sub
sub
dec
insb
add
push
fidivl
je
faddl
pop
out
out
mov
loope
inc
jns
mov
mov
push
int3
lret
jg
xor
repz
cltd
or
xorl
add
xorl
and
arpl
xchg
lcall
sahf
subl
pop
dec
cmp
fsincos
lcall
insb
gs
pop
mov
insl
std
mov
push
cltd
add
adc
imul
in
pop
cmp
sbb
sbb
add
xchg
fildl
out
pop
test
inc
test
adc
ljmp
add
jo
aaa
jno
xchg
inc
js
cmp
mov
mov
out
cmp
sbb
dec
lods
and
insl
movsb
jae
mov
and
push
pop
outsb
pop
jb
push
addl
lds
lds
or
int3
dec
mov
cmp
or
push
lock
bound
and
outsl
loope
mov
ja
jmp
mov
gs
xor
jo
add
leave
or
addb
jg
jo
jns
jb
nop
sub
cmc
loope
adc
jns
dec
mov
fdivl
jns
push
aad
lcall
pop
push
or
jecxz
mov
subl
pop
cmc
fcoml
sub
push
mov
stos
loop
dec
or
inc
pop
rcr
divl
lock
adc
out
xor
cltd
mov
and
test
inc
xchg
outsl
arpl
or
sub
cmpl
add
out
scas
cld
mov
popf
into
aad
fstl
sbb
cmp
push
cmp
popf
in
fwait
mov
xchg
add
pop
and
lret
into
icebp
inc
sub
fwait
jns
loopne
pop
pop
adc
ljmp
hlt
sbb
nop
xchg
mov
inc
mov
popf
addl
lock
mov
pop
outsl
pop
pop
ss
movsb
pop
xchg
cmp
stos
or
jnp
mov
mov
jns
pushf
mov
cld
xchg
cmp
inc
pop
mov
sbb
mov
out
mov
and
sahf
and
pop
dec
push
pop
push
lcall
adcl
or
cmp
fwait
xor
cmp
add
xchg
cmp
mov
push
hlt
mov
fwait
test
mov
fimull
adc
imul
and
cmc
mov
fwait
inc
insl
loopne
push
jle
xchg
out
mov
mov
es
enter
add
pushf
push
mov
roll
mov
ljmp
mov
dec
mov
cmp
xor
aas
aaa
inc
or
dec
sub
mov
sub
pop
xor
cmpsb
sub
rolb
jbe
test
in
out
lret
mov
mov
xchg
lods
dec
or
xchg
or
out
or
mov
lret
pop
mov
push
push
jae
xchg
lret
mov
jns
daa
adc
push
repnz
jle
in
mov
in
mov
cmpsl
add
push
test
push
daa
mov
ds
push
popl
xchg
and
dec
aas
cmp
fldt
pop
and
push
pop
lahf
mov
mov
xor
mov
stos
inc
sbb
mov
mov
or
imul
test
pushl
icebp
sbb
ss
pop
loope
ret
sbb
add
cmp
test
lods
sbbl
das
push
mov
imul
adc
push
std
ret
iret
std
imul
xchg
stos
daa
inc
add
data16
lds
jb
test
les
jge
lret
sbb
aad
sarl
sbb
mov
arpl
sbb
enter
add
dec
ss
out
inc
sbb
push
loop
or
fisttpl
aas
sbb
fs
xchg
lods
dec
call
cli
mov
mov
in
cltd
add
xchg
aaa
cld
test
lods
out
inc
xchg
push
test
inc
dec
cwtl
sub
inc
out
and
cmpsl
int
fiaddl
stos
pop
or
cwtl
stos
mov
cmpsl
xchg
or
cmp
mov
push
pop
pop
mov
fwait
mov
dec
clc
in
push
fisttpll
cmp
hlt
jecxz
in
clc
cmp
les
movb
jle
dec
sbb
iret
xchg
pushl
jmp
push
lods
js
jo
mov
mov
push
push
insl
push
push
and
sub
mov
shll
push
adc
push
mov
mov
add
ja
cltd
ja
push
mov
xor
ret
pop
in
inc
mov
les
shlb
mov
fistl
aas
fwait
xchg
arpl
mov
fiaddl
push
loop
push
int
jbe
faddl
into
lcall
rcrb
fwait
mov
out
xchg
stos
outsl
sbb
cmpsl
js
fistpll
cmp
repnz
jns
mov
mov
shlb
dec
mov
mov
daa
jno
lock
and
pop
in
sbb
stos
or
dec
fistl
adc
stc
adc
mov
push
dec
mov
mov
ljmpw
ror
fdivp
pop
jnp
or
and
push
movsl
test
push
mov
mov
mov
outsb
xor
or
cli
pop
sub
in
push
out
int3
ja
push
in
into
or
push
fs
push
sub
xchg
sarl
int
icebp
xchg
xorl
sub
out
sub
daa
add
cwtl
lahf
in
shrl
fwait
adc
bound
cltd
dec
mov
cmp
mov
nop
dec
mov
test
arpl
lcall
push
push
addl
pop
pop
xor
into
xor
ficompl
adc
test
hlt
push
test
scas
cltd
aam
mov
std
hlt
test
push
inc
fistl
fimuls
adc
mov
pop
sbb
sbb
sbb
popf
movsl
xor
in
lock
and
mov
lods
adc
sbb
shlb
push
jae
push
jnp
jns
in
xor
addl
xorl
jp
adc
jp
sbbb
cmp
push
pop
stos
icebp
xchg
mov
lods
jp
jnp
rclb
js
hlt
mov
in
test
xchg
pop
mov
shlb
xchg
xchg
cltd
scas
bound
and
out
test
and
icebp
lea
jp
dec
pop
andl
cmpsl
jmp
mov
add
dec
pop
fs
repnz
add
push
push
cmp
jne
mov
dec
roll
xchg
lods
test
das
enter
push
push
aaa
nop
ds
mov
sub
in
cmc
mov
push
pop
femms
imul
fcmovnb
jae
sbb
jmp
outsb
repz
mov
in
cmp
shlb
pushl
mov
lods
mov
call
hlt
fsubl
leave
jg
jg
push
mov
pop
fwait
and
and
mov
jl
jmp
push
inc
pop
cwtl
notb
out
les
sub
xor
andnps
fs
mov
pop
dec
jo
mov
dec
adc
fidivs
mov
and
jo
sbb
sbb
iret
sub
xchg
imul
pop
aam
mov
pop
pop
xlat
mov
pop
mov
aad
sbb
jne
add
outsl
add
sahf
fiadds
sbb
adc
or
pop
insb
fcompp
imul
scas
mov
dec
insb
pop
jo
mov
sub
sbb
xor
adc
push
pop
inc
mov
push
fisubl
jo
lahf
xchg
rorb
sti
call
adc
in
imul
test
pop
je
jnp
scas
je
mov
scas
or
mov
mov
inc
stos
push
test
and
sub
in
out
lods
test
mov
fcoml
xchg
pushf
xlat
jo
sub
lahf
mov
in
orl
stos
sub
xchg
xchg
xor
pop
xor
add
test
add
mov
cltd
es
adc
cmp
cmp
std
sub
inc
and
cwtl
sbb
fidivs
mov
gs
int
mov
outsl
out
push
jmp
hlt
jmp
aad
sub
mov
lods
xchg
sar
lahf
fstl
rcll
lock
cmp
in
jmp
mov
pop
sbb
jb
test
daa
mov
jmp
in
push
inc
dec
out
lahf
mov
xor
mov
sub
adc
or
jmp
mov
jno
fwait
push
mov
jb
movsl
lods
imul
push
popa
dec
fs
daa
push
lret
and
sbb
test
stos
inc
add
mov
stos
xchg
lods
aam
mov
mov
sbb
inc
pop
mov
sbb
shlb
rorl
shrl
dec
int
scas
mov
mov
ja
rcll
xor
mov
fcmovne
pop
andl
stc
test
movsb
push
aas
jle
aam
mov
fucomip
arpl
lea
jbe
xchg
pop
or
push
inc
xchg
mov
mov
inc
jae
leave
jecxz
or
fmull
inc
popa
adc
imul
sbb
cmp
scas
push
or
mov
cld
mov
sahf
rcrl
mov
movl
sbb
and
cmp
gs
dec
xor
or
out
shlb
push
fistpl
pop
xchg
enter
mov
mov
out
mov
sahf
pop
push
xor
popf
aad
xchg
push
push
or
repz
mov
jo
dec
pop
push
jp
decb
push
jbe
jg
fsubs
in
stos
nop
xor
adc
xor
mov
sbbb
sbb
das
int3
add
and
in
sub
shr
add
lcall
bound
jne
in
les
scas
pop
imul
adc
es
and
nop
push
out
jle
stos
xchg
push
push
mov
andl
push
jp
mov
xor
aam
jb
push
jbe
adc
push
fldt
mov
insl
cli
lods
adc
sar
jge
cmpsb
sti
int
imul
mov
pop
inc
mov
mov
aas
repnz
sbb
dec
mov
aas
jle
xchg
fisubrl
clc
into
mov
clc
push
jl
inc
sbb
adcb
push
mov
xchg
aas
mov
popf
pop
and
push
pop
fs
dec
pop
pop
stos
push
pop
jg
sbb
adc
movsb
inc
cmp
push
pop
push
xchg
mov
mov
std
inc
pusha
xor
or
mov
jb
insb
movsl
or
jo
sbb
mov
mov
mov
and
lock
add
imul
lea
out
xchg
adc
ret
and
fists
or
xor
rcrb
dec
popl
lahf
sub
scas
dec
fisubl
xor
xchg
mov
iret
mov
cmpsb
mov
lods
sahf
lea
jnp
sbb
in
mov
or
mov
in
adc
and
add
add
in
pushf
or
or
fldt
outsb
xchg
js
lcall
push
add
sbb
cmc
jecxz
push
and
sbb
jnp
or
fsubrs
xor
lahf
dec
xor
je
cmp
popf
mov
push
push
lret
jnp
rep
jge
mov
insb
lock
shll
inc
imul
add
push
inc
ficompl
scas
add
mov
cmp
pusha
divb
sub
jb
mov
pusha
fnstenv
mov
jae
stc
and
nop
lds
cli
mov
jno
loop
push
add
sbb
into
mov
push
sbb
jnp
pop
xchg
mov
cmp
test
cmpsl
mov
dec
movb
pop
scas
push
stos
jl
inc
jmp
adc
mov
mov
xor
aad
fiadds
scas
sahf
rcl
out
fsts
mov
sbb
xchg
sbb
xchg
mov
add
nop
xchg
imul
leave
adc
pop
push
cmp
pop
xchg
adc
push
scas
sub
cs
xchg
push
frstor
cmp
mov
push
mov
dec
or
xor
pop
and
sti
push
jne
pop
and
addr16
or
adc
jle
sub
aam
js
nop
int3
add
ja
xor
xchg
xor
lock
inc
in
popa
lcall
pop
sbb
sbb
fcoms
pop
clc
adc
arpl
sbb
aaa
fnclex
dec
fdivrs
inc
xlat
pop
xor
push
add
jmp
and
xchg
adc
sbb
cmp
push
lret
sub
fimuls
outsb
divl
cmp
adc
sbb
in
add
movsb
add
lods
cmpsb
push
dec
xchg
cwtl
jg
adc
pop
xor
inc
cmp
ja
stos
mov
sbb
xor
mov
cmc
jno
sbb
cmp
adc
arpl
dec
pop
cltd
pop
mov
and
and
push
enter
mov
mov
lds
popf
xchg
jo
cmp
mov
push
mov
cmpsl
stos
adc
push
sti
dec
fcmovbe
and
out
insb
int3
outsb
stos
mov
fwait
sub
ds
andb
decb
cmp
xchg
aam
popf
jmp
xlat
push
fidivs
mov
mov
andl
out
gs
dec
jbe
and
pop
mov
adc
adc
push
jae
inc
add
jns
movsl
insb
cltd
sbb
push
fwait
mov
call
int3
sbb
sub
xor
cld
push
pop
adc
cmp
adc
or
or
jbe
pushf
cmp
lods
jmp
in
test
popf
dec
mov
imul
push
fwait
cmc
xchg
mov
test
sub
or
cmp
xor
dec
mov
call
sbb
adc
pop
jb
arpl
jmp
pop
outsl
ficompl
adc
or
mov
jmp
push
lea
add
loopne
sarb
push
dec
push
insl
and
or
stc
dec
pop
repnz
or
sbb
iret
inc
clc
insl
sub
movsl
clc
mov
arpl
mov
jmp
loope
inc
popa
jle
gs
push
ret
pop
popa
add
les
addr16
xchg
lock
pop
sahf
mov
inc
jno
js
xchg
xchg
dec
rolb
es
sbb
mov
std
inc
or
and
or
orb
rcrl
mov
adc
cmp
imul
pushf
cld
mov
fldcw
ret
mov
dec
adc
mov
cmp
pop
inc
pop
popa
loope
fs
xor
fstl
aaa
push
or
lahf
push
sarb
mov
and
lods
dec
cmp
adc
pusha
int3
insb
cmp
movsl
dec
ret
test
in
clc
scas
mov
dec
sahf
lds
cwtl
stos
jle
outsb
and
adc
jle
lds
clc
mov
mov
dec
loopne
test
cltd
mov
push
test
scas
and
sub
mov
push
dec
shll
sub
or
adc
dec
addl
and
jne
movsb
sub
jns
add
fisttpl
lcall
lret
scas
ds
push
into
sub
cmp
cmpl
inc
pop
add
pop
add
push
xor
sti
hlt
int3
sti
inc
sbb
arpl
mov
mov
jp
int
int
or
xchg
and
mov
pop
in
sbbb
sbb
into
pop
outsl
or
push
mov
cmp
sbb
push
jge
ljmp
xchg
notb
adc
xor
outsl
in
out
mov
sub
push
sub
movsb
and
pop
mov
popa
lret
stos
enter
jo
insb
arpl
sub
push
and
cmc
lods
aad
dec
jg
rclb
gs
rorl
lds
outsl
sub
mov
inc
push
and
jle
sbb
subl
stos
test
fisubrs
fdivl
fstl
cmc
inc
adc
inc
ret
hlt
push
xchg
mov
out
inc
in
xchg
mov
dec
cltd
ja
push
add
mov
fdivrs
jbe
outsb
ret
add
xlat
icebp
cwtl
ss
or
jns
xlat
pop
jl
mov
jb
mov
mov
xchg
pop
lea
loopne
es
sub
stc
dec
push
test
sbb
outsb
inc
mov
mov
sbb
pop
adc
or
adc
xchg
mov
ret
in
push
sahf
push
fildll
test
pop
push
imul
pop
out
mov
push
sub
mov
dec
jae
lahf
mov
add
rcr
dec
dec
add
cmp
inc
lcall
out
dec
shlb
cmp
mov
dec
and
outsl
imul
and
int3
mov
test
xor
xor
sbb
push
loopne
xchg
push
xchg
xor
movb
jno
sub
cld
ja
xchg
add
aad
loope
sahf
pop
pop
pop
dec
adc
outsl
push
scas
adc
outsb
mov
call
jbe
xor
adc
adc
lods
mov
xor
inc
sbb
push
bound
jnp
aas
mov
mov
push
and
popa
dec
js
movsl
inc
test
jne,pn
icebp
cwtl
mov
insl
lea
andb
pop
stos
idiv
add
push
push
push
rol
jle
aaa
nop
cwtl
movsl
int
scas
pop
loop
sbb
lcall
stos
mov
cmc
dec
aas
mov
loopne
xchg
sbbb
clc
add
pop
out
pushf
pusha
lret
sub
pop
dec
pop
and
xor
sbb
popf
iret
xchg
cltd
ret
fcmovu
add
out
mov
cmc
cmpsl
arpl
adc
cltd
cltd
rcr
sbb
mov
push
and
dec
xchg
or
mov
and
xor
lret
push
add
daa
cmpsl
pop
mov
and
icebp
push
std
sub
int
pop
mov
xor
sub
fldcw
addr16
jmp
xor
imul
movsb
cmp
inc
icebp
lods
cmp
gs
push
scas
xchg
add
push
inc
jb
repz
ret
xchg
mov
roll
and
int
adc
mov
adc
or
fucomp
mov
mov
dec
jb
dec
nop
cmpsl
mov
nop
notl
or
mov
xchg
mov
mov
cmp
in
into
xchg
lret
mov
and
sub
sti
mov
cmp
fsubrl
ljmp
and
xchg
fnstenv
push
sbbl
fcmovb
dec
cld
mov
lret
bound
lahf
xor
arpl
test
pop
aad
inc
jb
fs
lcall
inc
mov
out
hlt
fsubp
push
adc
inc
or
popf
jno
lods
mov
lahf
adc
fstpt
les
push
jo
mov
sbb
lods
cmpb
addr16
aas
aaa
push
int3
scas
mov
add
lret
add
in
dec
mov
cltd
push
je
jg
push
jp
pmullw
xlat
dec
or
lcall
jg
mov
jns
add
out
dec
and
shl
lret
jnp
cld
shrb
out
cmp
sbb
mov
push
popf
lods
sbb
popa
mov
pushf
stos
lea
mov
dec
and
int3
pop
stos
ja
ja
jg
jne
mov
pop
ljmp
add
pop
jns
inc
les
lods
in
xor
sti
inc
sti
sar
fwait
mov
adc
mov
mov
frstor
inc
push
pop
das
stos
xchg
add
pop
aad
enter
jmp
sahf
lea
jg
adc
daa
imul
in
push
lcall
adc
sbb
jae
loopne
sbb
lahf
mov
push
add
jmp
dec
scas
add
sub
dec
mov
lahf
jp
xchg
pushf
dec
les
inc
pop
cmp
aad
jnp
shlb
mov
imull
cmp
imul
in
js
js
and
lsl
loop
packsswb
mov
enter
or
push
xor
int3
jbe
lahf
sub
fyl2x
mov
sub
ljmp
push
push
push
stos
ja
test
xchg
mov
test
pop
loope
mov
push
scas
jmp
inc
aad
sbb
xor
fwait
andb
lods
dec
add
movl
inc
pop
outsb
imul
mov
rorl
push
in
outsb
push
ficoml
cltd
jle
js
int
pop
sahf
jae
xchg
mov
cmp
sahf
sbb
in
adc
inc
and
jae
shrb
fs
outsb
pop
or
andl
icebp
lds
push
adc
rcrl
scas
fwait
jno
loopne
cli
jle
insb
adc
add
pop
jp
or
xchg
pop
dec
dec
ss
dec
ljmp
fists
outsl
push
adc
and
xchg
movq
jae
dec
and
mov
or
cwtl
dec
push
adc
sub
neg
cmpsl
jge,pn
mov
pop
sbb
sub
repz
xor
call
push
or
outsb
daa
roll
push
xchg
pushf
mov
inc
fs
lds
push
jns
in
mov
jo
sbb
stos
cmp
out
inc
and
adc
push
mov
sbb
mov
and
and
jbe
cld
push
ljmp
pop
call
leave
movsl
aam
add
mov
cmpsl
cli
fdivs
and
out
aas
xor
dec
lods
in
out
push
adcb
xchg
push
xchg
sbb
aad
lods
jle
icebp
push
cmp
std
shlb
xchg
pop
nop
loop
jle
cltd
dec
ljmp
add
ret
stos
sub
out
cmp
into
adc
mov
push
sub
sbb
dec
idivl
fmulp
mov
cld
insb
push
and
jge
pop
stos
adc
jae
cmp
shll
lock
lea
imul
mov
and
clc
push
idivb
jmp
gs
lock
call
std
dec
dec
lcall
ficoms
add
lods
sub
xlat
jmp
mov
dec
divl
and
ud0
popf
push
push
inc
mov
sub
adc
sbb
into
loop
incb
insb
inc
sub
ret
sbb
xchg
dec
or
xchg
or
xor
inc
push
xor
ret
adc
jge
pop
lcall
in
rcrl
push
or
lea
mov
mov
iret
sub
jnp
and
dec
fs
jg
lock
repz
push
xor
mov
loope
lds
cmp
lock
add
pop
int
mov
jb
pusha
mov
jnp
xchg
imul
inc
mov
pushf
addr16
je
add
gs
cli
xor
add
or
subl
cmp
fldl
stc
xor
inc
and
lods
mov
cmpsl
sub
xchg
in
push
imul
cmp
lret
mov
in
int3
adc
orl
pop
push
shrl
rcr
fmuls
popf
add
cmp
out
enter
loopne
adc
adcl
mov
mov
jge
mov
daa
cs
hlt
call
xchg
and
push
arpl
jecxz
sub
lock
ret
aaa
push
inc
and
mov
xor
push
pop
cli
jp
es
sbb
jns
xor
inc
xchg
fsts
jg
ss
and
ret
shrb
in
push
js
cmpsb
push
leave
aam
lret
cmp
push
scas
mov
pop
sub
jne
mov
int3
jp
sahf
jmp
dec
in
testl
fstpl
add
lret
inc
cld
sub
mov
push
sbb
imul
into
gs
les
pop
jl
outsl
xchg
ljmp
push
invd
push
mov
xchg
mov
mov
negb
mov
inc
movsb
adc
pop
and
or
inc
dec
fiaddl
shr
push
fdivs
and
adc
push
sbb
mov
dec
sbb
mov
push
cwtl
lods
es
push
cmp
or
push
js
pop
pop
inc
loopne
push
fisttpl
adc
pop
jno
test
mov
sub
inc
popf
js
inc
rcl
push
add
push
pop
mov
dec
and
out
sti
pop
push
movsb
rcll
shll
loope
push
leave
push
cld
movsl
xchg
frstor
out
icebp
pop
push
clc
faddp
dec
xchg
jg
movsl
and
mov
addb
int
pop
insb
mov
jae
lahf
imul
mov
mov
add
sbb
jge
ljmp
jecxz
cmpsl
xchg
adc
and
aam
push
ret
dec
pop
mov
mov
adc
lods
cmc
mov
sbb
gs
jl
sub
adc
mov
mov
addr16
test
jb
cld
xchg
imul
sub
das
jns
pop
nop
mov
fiaddl
mov
aas
mov
pusha
movsb
ficoms
xchg
sub
out
in
std
xchg
dec
testl
adc
rorl
cli
inc
inc
mov
outsb
stos
aam
push
out
jp
mov
insb
lock
sub
ret
mov
jecxz
xchg
mov
cmp
push
stos
mov
outsl
mov
xor
imul
vmovss
add
dec
mov
add
subl
mov
scas
lret
inc
or
or
adc
stos
out
sub
outsb
sbb
push
inc
xor
cmp
loope
int
adc
orb
je
inc
lret
push
int
inc
and
imull
sub
add
mov
sbb
test
in
scas
mov
push
add
xor
and
jge
es
lock
mov
sub
push
lods
jge
mov
jnp
js
or
xlat
imul
mov
repz
adc
mov
orb
lcall
fildl
repnz
or
cmp
add
mov
dec
daa
cmpsl
js
adc
sbb
outsb
shlb
add
fmull
rol
push
mov
inc
xor
outsl
rorb
push
stos
dec
int
xor
mov
pop
adc
cmp
addb
mov
popf
xchg
mov
in
jl
imul
lods
mov
mov
mov
xchg
cmpsb
adc
dec
cs
inc
mov
or
hlt
jnp
xchg
jmp
movsb
xchg
or
cmp
ror
mov
pusha
inc
ret
or
loop
inc
cs
push
pop
das
jl
mov
pop
les
push
dec
clc
mov
mov
imul
leave
daa
push
xchg
sbb
adc
cmpsb
in
push
int
cld
out
jbe
inc
mov
shr
dec
adc
pop
repnz
arpl
inc
clc
dec
jo
clc
out
sbb
push
mov
mov
inc
rorb
pop
mov
mov
sbb
fidivrs
loop
jl
fidivrl
and
sub
daa
xchg
jnp
and
mov
sub
shrb
push
cmp
mov
subl
inc
pop
flds
aad
bound
push
cli
int
movsl
loopne
and
adc
pop
add
lret
das
in
icebp
inc
loope
jge
jae
cmp
aaa
xor
imul
mov
mull
dec
push
pop
lret
pusha
adc
xor
sbb
jb
std
jp
jmp
adc
outsb
jle
out
xor
mov
mov
sbb
fnstsw
das
cltd
inc
test
pop
pushf
push
pop
inc
into
mov
test
in
lahf
mov
sub
jecxz
cmp
test
mov
mov
popl
ss
dec
out
mov
pop
xchg
inc
fiaddl
loope
cmpsb
js
lea
xchg
xlat
sub
mov
aad
jge
ja
enter
lods
jnp
in
bound
in
cld
xchg
movsb
ljmp
jno
xor
sub
stc
mov
pop
dec
or
addr16
out
sub
sub
mov
jg
mov
out
mov
fmul
jl
ret
sub
push
int
add
popf
push
jno
fwait
adc
imul
shll
das
xchg
hlt
pop
xchg
jnp
jge
cmpsl
and
sahf
fiadds
dec
xchg
shll
jnp
push
or
out
mov
fsubl
mov
in
and
cmp
sbb
leave
fsts
adc
in
xchg
cmpsl
es
mov
inc
or
mov
jmp
xchg
scas
sub
leave
cmpsl
sub
add
push
sbb
cmp
push
push
enter
add
inc
int3
je
fwait
xchg
mov
in
push
jae
addl
inc
jp
cmp
push
cmp
pop
and
sbb
stos
inc
stc
aas
and
addr16
into
andnps
psubsw
enter
and
sahf
ficoml
xor
cmp
fbstp
mov
inc
lcall
imul
test
int3
mov
add
ja
push
daa
xchg
mov
mov
jg
add
sbb
sbb
fcomip
popf
or
rorl
mov
loope
or
mov
xor
or
loope
gs
mov
daa
and
or
pop
out
pop
xor
adc
cmpsl
sub
jns
fistps
pop
pusha
xlat
push
int
lahf
jb
fs
push
insl
inc
mov
cld
shlb
fiadds
bound
sti
inc
xchg
mov
sub
jp
inc
push
add
pop
out
xlat
cwtl
aas
mov
in
lock
ret
mov
ds
push
loopne
adc
mov
jno
dec
xchg
mov
in
or
arpl
adc
sub
inc
cmc
and
shrb
cltd
arpl
push
mov
xchg
sbb
xchg
sahf
shrl
gs
sarl
cmp
inc
popa
pop
or
hlt
lea
or
mov
mov
cwtl
test
adc
sub
daa
xchg
pop
loop
hlt
lcall
mov
pop
cmp
enter
fiaddl
in
xchg
dec
pop
and
or
or
mov
lds
push
stos
mov
sahf
cmp
loope
adc
cmpsb
push
fisubrl
or
adc
mov
lods
pop
outsl
stos
subb
test
xchg
pop
xchg
mov
int
add
pop
push
add
addr16
cmp
dec
mov
mov
mov
outsl
mov
mov
inc
outsl
cmc
dec
inc
inc
test
pop
xchg
pop
sbb
mov
stos
inc
stc
cmpsb
hlt
mov
cwtl
xor
pop
adc
xchg
mov
fs
sub
or
xchg
sarb
sbb
scas
xor
cmp
std
adc
sbb
mov
xlat
pusha
out
push
mov
cmpsb
add
pop
fistpll
or
ljmp
aam
les
mov
xlat
mov
lahf
sarl
cli
add
arpl
es
ss
pop
or
in
fimull
xor
sub
fcoms
pop
push
cmp
loopne
enter
mov
incl
sbb
into
test
push
je
imul
cltd
jno
cmp
dec
sahf
sbb
cmp
sbbb
cwtl
es
jg
and
dec
jne
jmp
lock
xor
aam
repnz
jae
mov
lahf
orb
mov
add
shrl
in
dec
in
clc
aas
adc
or
lods
jg
dec
push
ret
scas
or
imul
and
lods
cld
cs
dec
js
vphaddudq
arpl
cmpsb
in
and
push
gs
xor
dec
roll
lret
repnz
enter
call
pop
arpl
or
dec
out
sub
gs
popa
stos
out
mov
mov
adc
push
fdivr
jl
mov
and
cmpsb
and
or
push
aad
cmp
mov
mov
jp
cltd
xchg
popa
xor
pop
jmp
scas
xchg
sbb
push
lea
fs
cmp
push
scas
das
inc
and
cmp
dec
dec
mov
loop
dec
cmp
push
mov
push
aaa
lods
rolb
out
repnz
adc
add
outsb
setns
sub
mov
adc
jg
out
call
sub
inc
xchg
dec
add
int
sbbl
push
in
cmp
pushf
and
push
mov
ss
nop
xor
stc
or
adcb
lahf
popf
jmp
adc
push
pop
jo
dec
stos
adc
and
inc
xor
add
sbb
fs
cmpsb
push
jae
pusha
mov
adc
push
push
dec
cmp
lods
jns
lods
pushf
pop
push
push
outsl
mov
daa
mov
and
mov
push
sbb
sub
adc
adc
sbb
ds
loop
lea
ljmp
adc
lret
popa
adc
mov
adc
cmpsl
repnz
clc
es
and
leave
xchg
adc
rcll
in
jp
mov
aad
push
das
xor
pushf
sar
ror
shl
mov
std
sub
imul
into
xchg
int
lret
ljmp
xor
jns
pop
popf
pop
popf
gs
xlat
sti
fiadds
and
outsb
mov
data16
xor
adc
adc
mov
jbe
push
xchg
xchg
jge
addr16
test
push
int
mov
push
out
jo,pt
xchg
jno
sbb
pop
imul
enter
movsb
xor
lcall
clc
lret
pop
fwait
testl
call
push
stc
fadds
push
mov
repnz
mov
popa
outsl
sub
popf
dec
inc
jle
adc
inc
std
push
pop
adcl
xchg
adc
repnz
push
mov
mov
repnz
and
fldenv
xlat
mov
mov
and
dec
scas
push
subl
sbb
add
adc
xlat
pop
jb
sub
sbb
std
push
add
jg
xchg
xor
xchg
insl
aad
xchg
inc
in
fcomps
push
cmovno
sub
out
cwtl
jecxz
xchg
rcrb
into
sbb
cmp
cli
lods
jb
cltd
adc
dec
rclb
add
sub
jbe
cmc
scas
les
lods
or
sti
scas
mov
and
cli
std
hlt
xor
jp
jb
test
int
jns
insl
hlt
nop
movsb
cmpb
pop
xor
cwtl
inc
jp
fldl
inc
push
push
out
repz
and
push
leave
imul
pushf
mov
lods
mov
shrl
cmp
dec
mov
adc
push
mov
aaa
mov
jnp
lret
xchg
inc
inc
add
and
add
or
jnp
outsl
loopew
shll
in
scas
add
push
arpl
enter
lock
aas
add
mov
dec
mov
jg
ljmp
jl
lds
mov
mov
fcompl
sub
mov
movsb
mov
mov
jg
jp
stos
gs
subl
jmp
test
je
and
stc
repnz
mov
or
aam
jg
adc
shlb
in
test
pop
mov
sbb
dec
xchg
test
pop
dec
xor
movsb
insb
mov
popf
sbb
ds
insb
js
fwait
test
pop
sbb
insl
and
or
sbb
cmp
jg
hlt
mov
and
out
dec
mov
jnp
sbbl
or
int3
mov
popf
in
sti
and
mov
movsb
lret
repz
in
ss
andl
inc
xchg
lods
test
jmp
lcall
cld
mov
out
mov
mov
sub
stc
ds
jecxz
push
mov
xchg
cmp
ficoms
sbb
imul
mov
cmc
negb
mov
dec
lret
jmp
jle
sahf
inc
push
shlb
insl
xlat
gs
push
insb
jne
and
sub
scas
pop
fisubrs
int3
dec
lods
xor
or
add
push
fidivl
cmc
outsl
adc
arpl
movsl
cmpsb
add
das
imul
or
arpl
jmp
mov
dec
push
test
leave
push
es
test
jnp
mov
adcb
ja
clc
cmp
subb
fs
adc
xchg
or
jae
and
push
clc
sti
sti
decb
add
cmp
popf
xlat
in
fstpl
into
and
mov
add
pop
outsb
addb
mov
imul
mov
rcl
cmp
cmp
fidivs
mov
int3
fisubl
xor
dec
mov
stos
sub
and
push
xchg
or
roll
sub
mov
and
bound
mov
fdivl
outsb
popf
ficoms
xchg
push
adc
dec
je
jns
mov
pop
dec
dec
jecxz
jecxz
stc
or
pop
mov
or
pop
cmp
lahf
test
in
push
test
fiaddl
xchg
cmpl
inc
mov
and
jne
or
aaa
sub
pop
imul
xor
xchg
fwait
cmp
icebp
push
mov
movsl
adc
push
xor
test
mov
inc
gs
inc
dec
mov
das
push
ss
cmc
mov
pop
xor
ficoms
in
pop
jmp
cmp
stos
mov
sub
into
jecxz
adc
es
pop
sbb
rcl
mov
dec
iret
stos
notb
or
inc
inc
sub
inc
lock
xor
cmp
push
vpcomb
pop
pop
fldcw
jecxz
add
mov
inc
repnz
push
xor
adc
dec
inc
pop
test
test
das
push
outsb
jo
cmp
lds
dec
popf
pop
je
mov
mov
jo
push
xchg
addr16
sub
mov
jp
push
jecxz
rclb
or
test
push
lret
or
lds
sbb
mov
mov
cmp
push
mov
mov
pop
mov
aad
lods
fcoml
leave
cwtl
cmpsl
ffreep
mov
mov
mov
mov
push
das
fs
pop
das
rcr
andb
lods
imul
xchg
jle
inc
xchg
inc
stc
mov
dec
inc
pop
mov
movl
test
pop
cmp
in
fs
out
mov
clc
je
shlb
in
arpl
xchg
int
mov
or
ret
subl
stos
fildl
roll
xchg
xor
hlt
cmpl
jbe
enter
icebp
pop
mov
ret
cmp
push
xlat
popa
sub
idivb
test
fstpl
lret
sub
shr
ss
push
pop
fnstsw
xlat
mov
pushf
mov
nop
push
xchg
mov
shlb
push
dec
mov
pop
faddp
addb
add
inc
pusha
stos
mov
icebp
lock
xor
sub
dec
mov
mov
inc
call
mov
mov
mov
scas
pop
shlb
xchg
or
pop
mov
cmpsb
jne
pop
insl
dec
popa
pop
xchg
test
fs
addr16
orb
mov
lock
sahf
outsl
or
cmp
push
outsb
xchg
xor
mov
push
loope
push
push
shl
sub
mov
mul
leave
cld
adc
shll
cmp
jecxz
push
inc
insb
cmc
jge
enter
aas
pusha
std
sub
xchg
add
jecxz
aas
sbb
int
sarl
pop
push
pop
xchg
jno
sbb
out
pop
jle
adc
jecxz
out
inc
aam
ja
lcall
outsl
and
stc
fsubrs
mov
sti
xchg
lock
mov
push
mov
pop
mov
pop
push
pop
add
pushf
add
mov
mov
inc
mov
sarl
sub
filds
fldl
add
jns
fcoms
sbb
xchg
pop
in
std
lods
xor
xchg
dec
add
and
xor
dec
or
adc
loop
outsl
scas
adc
or
orb
sub
icebp
ds
or
push
push
inc
imul
cltd
mov
mov
push
or
mov
shll
leave
rcl
pop
lret
sbb
dec
addr16
das
jl
loope
outsb
jecxz
sbb
sti
jle
sbbl
les
es
push
sub
dec
popf
addl
xor
stc
lods
dec
std
stos
mov
sbb
fisubl
sbb
jb
int3
sbb
cmp
inc
notb
ja
add
add
nop
popf
pop
lret
test
fcompl
and
mov
cltd
inc
sbb
pop
mov
cmp
ljmp
push
imulb
nop
mov
test
insb
nop
ds
int
dec
mov
mov
add
add
add
ds
popa
notb
xchg
or
ja
cmp
mov
jg
fwait
setns
les
imul
add
ret
mov
aaa
xor
int
dec
push
inc
mov
lods
fnstcw
xchg
sub
fidivrs
adc
in
popa
and
test
adc
xor
push
cltd
inc
int3
push
jmp
or
adc
imul
cmp
stc
lods
jl
xchg
fs
sub
bound
jbe
jp
popf
push
jae
lcall
es
movsl
cli
negb
and
mov
add
cmp
daa
out
fidivrl
imul
inc
xor
cli
ss
cmp
ret
jl
pop
and
jg
push
loop
daa
xchg
adc
add
mov
mov
lcall
int3
hlt
xchg
xlat
xor
lock
mov
leave
mov
xchg
mov
sahf
jg
ret
pushf
pop
ds
nop
lods
out
in
or
lods
movsl
adc
add
sti
dec
mov
sub
sub
adc
sbb
imul
jbe
xor
jns
xor
push
neg
les
cmp
sar
fbld
fstpt
mov
call
mov
pusha
stos
shlb
add
in
mov
cmpsb
arpl
popf
mov
stos
push
push
rorl
out
mov
imul
lcall
mov
aaa
inc
insl
out
or
lock
es
movsb
adc
push
fsubrl
mov
and
jmp
insb
jo
mov
fidivrs
push
rclb
fcoml
loope
idiv
cmpsl
adc
add
in
test
mov
je
in
cmp
imul
inc
xor
cltd
in
ds
jb
aaa
into
jne
decb
stc
xorl
pop
movsl
sub
dec
cmpsl
mov
xchg
jecxz
faddp
es
std
popf
add
dec
mov
jmp
pop
nop
scas
ret
dec
adc
xor
lcall
push
xchg
jg
pusha
ja
add
mov
jbe
scas
and
icebp
in
push
scas
cmpsl
aad
subl
jns
push
and
aas
sub
movb
cmc
xchg
pop
test
sbb
inc
rcll
adc
adc
int
add
add
scas
cmp
mov
dec
inc
push
bts
aam
xchg
pop
push
pop
mov
leave
repnz
jo
enter
test
jg
cmc
cmpsl
xor
xchg
or
adc
scas
sbb
mov
push
adc
jo
cmp
push
pop
lcall
sub
mov
nop
data16
mov
mov
pop
lea
mov
push
mov
test
add
jge
jl
jns
in
cmp
bound
jmp
repnz
mov
lds
push
cs
out
mov
sbb
mov
andl
pop
mov
and
loopne
inc
lods
addr16
aas
loop
lock
stos
movsb
hlt
dec
das
jge
imul
lods
lods
pop
xchg
imull
mov
mov
sub
subb
push
dec
fidivl
cmovbe
out
dec
arpl
or
and
nop
ds
subl
sbb
push
jg
icebp
pop
pop
shr
pop
add
xchg
test
aam
sahf
xchg
inc
sbb
xlat
cli
aad
nop
sbb
pop
insl
ret
push
fiaddl
addr16
fnstenv
cld
mov
sbbl
add
mov
or
push
int
fistps
jno
jne
fwait
dec
rorb
out
or
ss
mov
lahf
cmpsl
push
xchg
or
movsl
jne
mov
jo
or
pop
popa
fisttps
ret
sbb
int
loope
inc
mov
dec
push
fmuls
cmp
add
xlat
push
orl
or
pop
sub
ljmp
outsl
xor
xor
add
adc
or
int
in
dec
pop
mov
pop
push
out
cmc
and
or
movsb
lea
mov
or
pop
mov
div
pop
movsl
mov
mov
jbe
mov
and
in
pop
jno
outsb
jecxz
insb
push
xchg
mov
lods
dec
cmp
mov
pop
mull
dec
pop
dec
cltd
add
int3
into
xor
addb
insl
xorb
es
jp
imul
xchg
add
mov
arpl
lea
jae
inc
and
push
jge
ret
or
xor
pop
or
push
jp
shll
or
scas
je
std
xchg
fwait
imul
or
and
imul
mov
fsts
cli
imul
push
fnstsw
inc
adc
scas
inc
repz
fwait
imul
push
push
out
mov
cwtl
in
js
fwait
shlb
xchg
cmp
mov
aaa
dec
call
mov
imul
cmp
and
movsl
sahf
gs
push
dec
push
mov
mov
outsb
cmovp
xchg
push
jbe
mov
cmp
in
inc
popf
andl
fcompl
daa
lods
xchg
fidivrl
jns
jmp
ljmp
push
outsl
mov
fwait
mov
xor
outsb
jmp
push
pop
inc
xchg
pop
into
xor
fistpl
pop
adc
mov
pop
inc
mov
lcall
push
mov
mov
idivl
cmp
imul
xor
lahf
push
xchg
fdivrl
inc
mov
xchg
dec
sahf
push
cs
outsb
dec
imul
movsb
fs
call
out
jo
out
movsb
shl
out
ss
mov
stos
in
ror
inc
repz
popl
xor
insb
loop
lds
xchg
jle
or
int3
or
outsl
xchg
xchg
push
arpl
sbb
ss
adc
cltd
stc
mov
mov
sbb
jae
pop
dec
add
adc
pop
popa
test
xorb
xor
and
in
pushf
cmc
es
mov
in
dec
into
ret
xchg
cld
ret
in
lea
cmp
or
popf
push
lds
addr16
push
jl
je
leave
mov
das
js
mov
cmc
add
dec
push
scas
insl
lea
inc
adc
dec
lret
jne
insl
ja
push
mov
push
jns
jg
in
xlat
sbbb
xchg
cwtl
push
xor
addr16
and
outsl
jo
rorb
sub
inc
pop
cmp
stos
add
or
addr16
and
mov
int
push
jmp
jmp
push
mov
cmc
enter
fstl
mov
leave
dec
jb
cwtl
jl
aam
popf
out
cmp
add
push
pop
sbb
push
js
rcr
xabort
fldl
out
fisubrs
aam
cmp
xor
loope
xlat
arpl
add
arpl
push
mov
ss
loop
lods
cmp
rcl
inc
das
ret
and
xchg
xlat
cmp
test
cmp
mov
or
out
add
repz
test
movsl
push
add
pop
cmp
daa
pop
out
sub
or
inc
rorl
xor
dec
pushf
testl
aad
aas
fwait
inc
xor
jno
add
xchg
stc
push
mov
fisttpll
addr16
in
pop
mov
inc
cwtl
insb
or
pushf
or
lods
out
std
pusha
push
cltd
and
xchg
cld
cmp
fcomp
mov
bnd
jno
lret
jo
push
in
or
push
inc
push
lahf
lds
sbb
or
sbbl
sarb
cmpb
adc
xchg
add
xlat
jno
push
enter
in
scas
in
punpcklwd
inc
movzbl
push
and
adc
loopne
dec
or
jnp
jno
test
aad
je
pop
lea
pop
jp
or
sahf
insl
add
inc
sbb
push
mov
lret
xchg
mov
cli
ja
int
sarb
cltd
mov
int3
mov
xchg
pop
scas
mov
xor
pop
jl
movsl
push
js
mov
jl
cli
cmpsl
mov
xor
rolb
push
insb
pusha
mov
inc
repz
xchg
ds
stos
pop
test
loope
test
cmp
popa
fldcw
add
sti
andb
ds
pop
or
faddp
in
test
adc
imul
or
inc
outsl
daa
clc
icebp
push
cmp
jnp
stc
les
in
fs
out
test
arpl
das
aas
mov
shlb
gs
mov
push
inc
push
aaa
inc
sbb
lods
ljmp
pop
mov
mov
adc
shl
mov
push
inc
jmp
push
pushf
sbb
outsl
adc
hlt
adc
push
mov
shl
shl
push
mov
lret
stc
pop
mov
into
push
add
adc
out
in
and
push
incl
movsl
imul
cmc
adc
push
ret
lock
dec
clc
mov
xchg
or
addr16
xor
adc
lahf
pop
xor
sbb
sbbb
int
js
xchg
xchg
sub
ret
xor
les
hlt
rclb
insb
repz
mov
fwait
movsl
pusha
imul
repnz
mov
mov
jo
out
hlt
nop
jne
push
repz
cmp
inc
inc
adc
test
pop
leave
pop
xchg
lcall
push
iret
fstpt
xchg
in
sbb
xor
sbb
push
xchg
inc
ret
cmp
sti
cld
aas
sbb
push
popl
test
out
enter
fs
xor
in
and
ds
repnz
sub
ja
xchg
fistl
lcall
movsb
xchg
test
negl
sarb
mov
and
add
into
loopne
mov
pop
mov
fdivr
sbb
push
testl
jo
sbb
outsb
fiaddl
inc
adc
inc
adc
mov
je
incl
sub
sub
cwtl
pusha
cmp
repnz
hlt
mov
insl
add
imul
jge
test
pop
mov
pop
adc
inc
clc
mov
mov
out
cmpsl
cmpsl
ret
fwait
jno
xchg
dec
or
ds
hlt
add
mov
incl
mov
add
xchg
aaa
adc
fbstp
out
fs
lahf
mov
in
test
mov
mov
js
call
and
fwait
xor
fnstsw
mov
mov
jl
add
mov
lds
or
cmp
in
or
rol
and
inc
sub
or
sarb
cmpsb
sahf
and
fisttps
adc
roll
hlt
dec
pop
in
sub
mov
pop
jecxz
lcall
inc
xor
jmp
in
test
cmpsl
sahf
lret
mov
and
outsb
xchg
ja
and
jae
jne
les
lods
scas
sub
mov
jnp
xor
xchg
inc
adc
ss
lahf
ds
sarl
mov
outsl
mov
add
jg
sti
and
mov
add
sbb
out
push
pusha
add
mov
mov
xor
inc
xor
add
cmc
push
cmp
out
leave
popa
xor
adc
mov
sahf
xchg
aad
mov
addr16
pop
and
add
jbe
test
add
mov
xor
ds
insb
xor
enter
subl
push
jae
mov
cld
mov
jne
cld
xor
mov
jmp
jnp
sbb
mov
cmp
add
fadds
inc
pushf
or
pop
dec
mov
sub
repz
add
cmp
lods
lret
lods
test
js
ret
mov
mov
mov
jb
mov
mov
repz
lret
jne
and
sbb
sbb
rol
loopne
ljmp
jne
jo
mov
movb
fsubp
mov
mov
add
pushf
out
jo
sti
leave
xchg
xorl
add
fnstenv
fstps
jno
in
loopne
fwait
sbb
xor
das
cmp
jo
rcrl
es
jno
jnp
dec
jp
je,pt
sahf
js
mov
ficoml
aaa
push
push
xor
and
pusha
mov
push
loop
fsubl
fldl
sahf
mull
and
jge
lods
das
mov
sarb
dec
in
sbb
pop
mov
inc
adc
push
push
dec
fsts
repz
movsb
data16
push
ret
into
cmp
sub
pop
roll
stc
movsb
push
lcall
sti
add
shl
lods
dec
sarl
dec
mov
rcrl
ss
sub
mov
aam
in
ret
jne
push
mov
lcall
aad
jno
jae
repz
imul
int3
or
mov
jg
add
loop
xor
shl
or
xchg
mov
mov
sbb
lcall
push
lea
inc
or
xchg
cs
cmpsb
fs
enter
in
mov
lahf
dec
sub
es
sbb
xchg
test
xor
lods
xchg
mov
inc
test
jne
arpl
and
insb
dec
stos
jecxz
inc
cmp
std
icebp
push
sub
cmpsb
push
or
dec
fwait
decl
jecxz
mov
xchg
sbbb
daa
bound
rclb
xlat
scas
xchg
in
fimuls
mov
pop
loopne
test
push
lcall
mov
and
mov
daa
and
push
mov
into
sub
jno
xchg
in
enter
ret
mov
fidivrl
push
insl
icebp
int3
shlb
test
aam
jnp
and
mov
in
xchg
pop
adc
enter
frstor
mov
cwtl
enter
lret
hlt
int
sti
xor
push
xor
adc
mov
cmpsl
sub
dec
dec
add
and
paddusb
cmp
cmp
dec
push
loopne
jne
xorl
int3
lea
mov
sub
in
daa
insl
aas
lds
int3
push
nop
jecxz
mov
push
jl
insb
adc
insb
fstl
icebp
pop
and
add
clc
adc
cmp
sahf
jbe
inc
rorl
or
lcall
dec
mov
dec
mov
and
or
movsb
cmp
dec
cmp
popa
jno
push
in
rcl
mov
jmp
jge
jge
imul
lahf
roll
rorb
in
nop
test
add
and
test
fldz
dec
xlat
rcl
adc
popl
or
clc
adc
fwait
mov
add
pop
addl
mov
in
mov
fs
jnp
inc
jl
mov
mov
std
imul
cmc
sarl
xor
mov
adc
sbb
mov
mov
jl
out
mov
into
xchg
fbld
mov
mov
lods
pushf
lods
mov
dec
lock
ljmp
mov
jmp
lods
sub
lods
mov
jle
daa
cmp
push
push
icebp
fsubrs
jno
jmp
out
jecxz
dec
add
add
rcll
cld
nop
dec
adc
jecxz
out
scas
inc
pop
pop
and
or
cmc
sub
sbb
jl
fcoms
insl
insb
test
iret
lret
lds
scas
cmp
out
sbb
out
fadds
jb
in
iret
ss
inc
inc
test
pop
mov
mov
sub
cmp
sub
jno
mov
lock
mov
sbbl
rcll
das
shrb
push
mov
xchg
push
imul
sbb
popa
enter
scas
aad
xor
push
ja
add
jns
or
inc
hlt
cmp
and
fidivrs
fcoms
pop
ljmp
pop
imul
adc
in
shlb
xchg
pop
sub
xor
testl
rolb
rcr
testl
loop
nop
imul
and
je
adc
dec
xor
pop
mov
add
dec
imul
push
mov
or
dec
xchg
lahf
clc
jmp
insb
lret
jb
mov
and
outsl
jb
pop
scas
add
pushl
cmpsb
icebp
mov
stos
push
fimull
fcomp
adc
mov
sub
jg
fsubrl
cmpsb
aas
in
fisttpll
loope
push
clc
hlt
cwtl
ss
or
cli
xor
xor
popa
rorb
push
inc
adc
sub
sbb
call
lcall
xchg
sahf
loope
lcall
add
sub
cmp
xor
sub
mov
mov
xor
add
test
dec
in
xchg
sbb
filds
rolb
xchg
xchg
clc
aam
inc
mov
mov
stc
push
inc
xor
lcall
push
cmp
outsb
mov
xorb
adc
enter
pop
push
jo
mov
stc
jmp
cmp
cmp
in
xchg
aad
push
clc
mov
push
xchg
enter
and
xor
fnstsw
cmp
test
dec
loop
sbb
mov
mov
rorb
cmp
push
inc
sbb
js
insb
lret
jl
mov
mov
imul
cli
mov
push
pusha
icebp
mov
outsb
push
xor
or
out
push
push
aad
pop
int3
repnz
pop
cmp
movsb
sar
jge
lods
push
insb
pop
test
movsb
cmpsb
movsl
subl
mov
jno
fs
or
outsl
xor
xchg
pop
cmpsb
hlt
xor
mov
fnsave
cmp
cmpsl
push
jb
add
lret
inc
or
cmp
outsb
cmpsl
test
push
pop
mov
fwait
mov
cmc
push
sbb
sub
inc
std
shlb
xlat
es
and
dec
ljmp
xchg
adc
sub
mov
push
lds
mov
jmp
and
cli
ret
mov
pop
and
push
aam
mov
sti
rcl
fs
outsb
dec
jns
mov
aaa
fldcw
sub
add
mov
mov
jg
aam
jp
xchg
loop
movsl
inc
lcall
sbb
jnp
pop
and
inc
adc
cmp
outsb
jb
lret
xchg
adc
icebp
in
ret
dec
xchg
pop
lods
enter
frstor
xchg
in
stos
push
mov
arpl
jmp
arpl
pop
gs
mov
je
xchg
add
lods
clc
xor
outsl
std
ljmp
mov
mov
aam
rclb
ret
popf
cmp
sbb
pushf
out
fsubrs
mov
jo
push
mov
enter
lods
mov
imull
mov
decb
add
mov
lods
movlps
jns
cmpxchg
cmp
or
inc
adc
push
fldenv
stos
pop
jmp
div
add
orb
int3
clc
xchg
adc
decb
mov
sub
mov
and
mov
out
dec
lahf
or
fisttps
push
in
repz
cli
sbb
jnp
lret
jge
jp
pop
xchg
mov
push
mov
lahf
or
lret
ja
fstl
push
sahf
mov
pushf
scas
jmp
pop
ret
test
addl
loope,pt
pop
sbb
in
roll
dec
mov
ret
pop
xor
stos
mov
imul
sarl
rolb
mov
fidivl
push
ds
icebp
repz
and
cmpsl
xor
sub
mov
dec
les
mov
jp
scas
cmp
stos
imul
loopne
lcall
mov
pop
test
adc
test
push
jne
lahf
push
add
das
jns
pinsrw
sarb
mov
int
cmp
inc
fistpl
jle
dec
mov
or
addb
test
or
test
aaa
fcmovnb
lahf
adc
mov
fidivrl
jns
sub
jo
cmpsl
push
pop
xor
icebp
pop
and
shll
fdivl
aad
push
rolb
lret
dec
mov
add
pop
stos
aad
cmp
cwtl
mov
add
nop
and
sarl
test
daa
pop
cmpsb
out
inc
xchg
xchg
call
and
fs
mov
int3
add
cli
pop
xor
inc
pusha
pop
andb
xchg
sbb
adc
test
out
push
ret
inc
repnz
ds
push
mov
bnd
push
mov
sub
inc
push
aam
das
cld
out
push
std
adc
push
fimull
add
and
outsb
jle
roll
lds
fs
mov
addr16
lea
pop
fsubs
jbe
dec
andb
pop
pop
movsb
inc
ret
sbb
push
jl
movsl
not
fisttpl
fisubl
adc
div
jb
lods
aas
add
pushf
xchg
mov
jecxz
pop
sub
xor
and
inc
pop
cld
testl
into
cmp
out
lds
pop
or
shll
rcr
add
int3
repz
dec
stos
sub
dec
jmp
mov
fimull
mov
mov
xchg
inc
jbe
aam
xchg
sbb
dec
pop
xchg
mul
mov
movsl
pop
cmp
pop
icebp
xchg
iret
mov
dec
dec
jbe
pop
jecxz
push
jge
inc
sbb
push
mov
iret
sub
inc
out
arpl
add
pop
or
pop
jno
out
insb
push
mov
dec
jle
je
xchg
pop
loop
fistps
ret
jp
push
and
hlt
cwtl
pop
out
pusha
mov
mov
sbb
mov
dec
dec
gs
jecxz
xchg
pop
adcb
loope
in
scas
pop
jl
adcl
jmp
jle
jmp
dec
mov
jo
incb
ds
mov
fiadds
in
and
ror
inc
xorb
cmp
out
sbb
test
mov
mov
es
push
addr16
cmp
dec
pusha
pop
jo
and
movb
iret
aaa
sub
dec
xchg
popa
dec
int3
ds
jae
sub
sbb
aaa
pusha
pop
add
mov
jp
stc
xchg
data16
xor
jns
fisubs
ss
popa
fiaddl
xor
mov
jp
clc
cmpl
out
inc
and
cmp
xchg
dec
pop
adc
pop
cmp
loope
das
dec
mov
into
js
cmp
movsl
fwait
shrd
sahf
sahf
fsubp
popf
fwait
aaa
push
arpl
faddl
sub
lret
jno
add
lret
push
pop
leave
jno
filds
dec
int
jmp
jge
xchg
xor
adc
arpl
bound
ficoms
xorl
repz
dec
popf
push
jns
and
push
jge
sub
jnp
mov
add
lret
shr
cltd
mov
sahf
out
inc
sarb
shr
adc
pusha
loop
push
cmp
dec
dec
jmp
cmp
test
in
icebp
ljmp
xchg
push
ret
mov
cltd
movsb
push
ja
xor
push
pop
push
jnp
fadds
sub
cmp
sbb
into
pushf
pop
aam
add
dec
cmc
les
sbb
mov
fcmovne
std
pop
cwtl
scas
stos
sbb
add
jns
add
pop
repz
mov
out
pop
fcompl
xor
mov
adc
std
fildl
jge
pop
out
loope
inc
dec
push
sbb
cmp
lods
sub
dec
lret
fwait
shll
push
pop
sbb
or
cmpsb
aad
mov
scas
in
into
push
or
jecxz
es
mov
sti
adc
dec
movsl
cmp
mov
push
in
call
stos
add
outsl
out
pop
xchg
iret
push
out
jns
mov
mov
mov
jecxz
test
inc
dec
jg
pop
adc
dec
jns
insb
mov
lahf
push
xor
and
mov
push
leave
mov
mov
sti
sti
sbb
pop
je
jnp
nop
add
jecxz
jno
and
into
aaa
pushf
jne
push
sbb
lahf
xlat
dec
sbb
outsb
mov
repz
jg
bound
jne
shlb
jl
mov
jmp
mov
mov
cwtl
mov
cmp
test
shl
mov
nop
shlb
xor
lahf
lds
psubw
xlat
jmp
and
dec
or
stc
pop
pushf
push
or
or
mov
lret
jge
fistl
fdivr
sahf
xor
roll
imul
out
adc
or
movsb
inc
rcrl
orb
mov
adc
or
movsl
repz
dec
add
mov
sti
fistl
test
nop
push
mov
push
outsl
into
popf
pop
pop
ss
movsb
cmp
xchg
outsb
dec
xor
mov
adc
sub
enter
add
ds
int3
in
daa
imul
mov
pop
inc
jb
aam
jge
add
or
mov
mov
add
jbe
aaa
push
adc
dec
dec
and
cmpsl
ret
inc
cmpsl
inc
call
xchg
out
std
pop
xor
stc
insb
add
push
mov
mov
orb
lea
ret
mov
loopne
les
fidivrl
fcoms
cmp
jecxz
mov
test
mov
ror
adc
mov
in
cltd
mov
pusha
xor
ret
mov
in
push
fwait
adc
dec
rcl
fwait
aaa
call
ds
fsts
adc
push
ja
call
out
xor
jecxz
aas
or
jae
hlt
dec
sti
or
xor
negl
ljmp
call
gs
inc
addl
cmp
popf
mov
xor
mov
repz
pop
xchg
in
push
jno
dec
dec
sub
test
or
in
loop
cmp
cmpb
jae
mov
pop
xchg
incw
inc
test
and
fistps
and
es
ficompl
cmc
out
add
ja
sbb
int3
or
dec
les
lods
jns
lds
dec
in
test
jnp
lods
js
sub
push
add
xor
shlb
clc
outsb
jbe
les
sbb
add
shll
arpl
jp
sbb
xor
inc
xor
subb
lds
sbb
mov
cs
sub
cmp
mov
pop
sub
mov
mov
loop
sub
aas
push
clc
mov
ljmp
mov
mov
les
push
mov
add
data16
js
loopne
and
mov
les
out
sbb
inc
call
fs
cmp
je
xchg
mov
ja
repnz
loopnew
push
fisttpl
mov
add
xchg
mov
mov
repz
jb
cmp
bound
es
movsb
dec
pop
jmp
sbb
popf
pop
dec
sbb
nop
lcall
mov
ret
fnsave
cmp
push
loope
nop
out
xor
daa
insl
mov
push
add
dec
mov
sti
dec
push
inc
cmp
and
rcrl
sbb
daa
xchg
fisubrl
cli
add
cmp
fcompl
mov
jg
fstpt
fnsave
cmp
cs
dec
dec
inc
ss
mov
jne
je
xchg
dec
adc
jbe
jns
cmpsl
loop
sbb
int3
imul
xchg
sub
fwait
lret
adc
inc
fldt
ja
jmp
out
jae
mov
insb
mov
add
incl
cmp
mov
mov
dec
add
arpl
daa
movlhps
xor
jp
std
inc
xchg
push
std
inc
js
repnz
cmp
out
dec
shrb
lret
add
dec
sahf
cmpsl
push
cli
jl
imul
adc
cmpl
mov
sub
daa
mov
dec
adc
xor
inc
or
fstps
push
cmpsl
adc
pop
mov
pop
mov
fidivrl
js
sub
lret
mov
lods
jmp
in
testb
leave
add
clc
mov
arpl
leave
xchg
mov
addr16
int
and
pop
mov
fstl
xor
jns
lret
dec
lret
in
std
cmp
popf
mov
imulb
lods
lahf
jae
in
aam
and
sarl
push
inc
push
mov
movsl
ss
fwait
inc
xchg
ds
iret
div
mov
pusha
test
push
and
adc
cmpl
aad
xchg
cltd
lahf
adcl
mov
push
dec
enter
repz
pushf
mov
cmc
or
xlat
pusha
les
xchg
jnp
xchg
or
ljmp
jb
mov
and
mov
xchg
leave
and
ss
mov
pop
push
adcb
xlat
mov
push
push
into
mov
sahf
andb
mov
test
dec
imul
aaa
mov
dec
hlt
lods
insb
jno
cli
jmp
pop
xor
gs
bound
je
pop
lcall
iret
fisttpl
sub
sbb
les
jnp
into
push
icebp
pop
test
dec
sbb
lahf
movsb
or
xchg
lahf
fimull
and
xchg
dec
dec
mov
jb
mov
cmp
mov
iret
movsb
imul
sub
pop
sbb
leave
punpckldq
ror
lods
call
sti
jne
cmp
or
mov
aad
inc
leave
inc
stos
push
mov
dec
pushf
mov
imull
orl
rcl
jecxz
stos
bound
cwtl
lcall
addl
sbb
cmpsb
sub
addr16
mov
jmp
movsb
add
cmp
or
sahf
and
or
add
sti
in
iret
in
stc
pop
push
mov
loopne,pt
dec
cmp
mov
push
add
cmp
mov
cmp
das
shr
xchg
clc
in
movsb
cmp
frstor
into
xchg
pop
mov
scas
adc
cmp
cwtl
scas
popa
xchg
lahf
les
arpl
data16
inc
and
insb
repz
jmp
loope
aam
jecxz
movb
sub
ljmp
mov
fsubr
es
hlt
loope
push
in
lods
insl
jl
push
in
push
imul
xor
add
sub
pusha
mov
inc
dec
cmp
lods
iret
push
hlt
cmpsb
popf
dec
repnz
mov
add
dec
outsb
push
push
repnz
pop
sub
jecxz
xchg
aaa
inc
lahf
jbe
sbb
dec
xlat
fxsave
addb
adc
add
mov
pusha
js
in
mov
loopne
gs
mov
cmpsl
dec
je
fimull
imul
aam
xchg
bound
stos
dec
push
lahf
pop
mov
js
cmp
mov
add
or
das
das
bnd
ds
sbb
in
or
cwtl
in
mov
jp
mov
xchg
jmp
cmpsb
jbe
dec
test
xor
and
popf
out
inc
xor
incl
mov
sub
cmp
xchg
aaa
mov
out
in
and
in
inc
dec
jmp
sub
je
xorl
push
scas
arpl
jg
icebp
notb
jbe
lods
dec
mov
in
xchg
int3
sahf
ret
rcrb
mov
push
sar
je
mov
cmp
sub
sahf
aaa
xlat
imul
shlb
cmp
add
std
xor
mov
pop
push
loopne
aaa
es
inc
in
aas
sbb
lret
xchg
mov
pop
and
test
xor
clc
movsl
int
xchg
cli
or
lcall
in
flds
ret
in
sub
sub
loopne
and
sbb
call
sbbb
dec
mov
mov
adc
loop
out
fs
or
dec
xchg
es
add
cmp
xchg
sbb
or
mov
icebp
mov
or
mov
jmp
stos
ficompl
xchg
sub
xchg
xor
in
loope
stc
sub
sub
mov
xchg
mov
clc
push
ljmp
jp
and
outsb
push
lods
sbb
call
push
je
test
push
add
inc
das
out
mov
repz
movsb
aad
xchg
sub
idivb
cmp
das
mov
mov
testl
adc
and
ss
aaa
aam
movsl
inc
mov
fdivr
and
xchg
out
jge
test
jg
push
mov
cmp
pop
mov
js
push
int
dec
pop
inc
sbb
lar
int3
lret
outsl
push
sbb
and
notb
xchg
xor
sub
andb
call
xchg
cmp
and
inc
pusha
jmp
das
ret
push
push
insb
addr16
aad
rcrl
cmpsb
out
hlt
cmovnp
rcl
call
push
push
pushf
and
mov
push
sub
lahf
adc
jmp
fwait
xor
cmp
jb
sbb
jno
stos
pushw
outsl
cmp
cmp
dec
mov
ds
lds
push
inc
fmulp
push
jns
shll
scas
and
push
out
mov
pop
sub
jle
jmp
mov
sti
sbb
cmp
mov
pop
gs
mov
in
cltd
mov
adc
mov
mov
fcomps
stos
jne
loope
insb
repz
xorb
movsb
lods
divb
daa
jl
fildl
adc
test
mov
data16
ljmp
add
cmp
mov
out
insl
cmp
jle
dec
jg
out
pop
int
ds
cs
push
out
xchg
test
add
adc
mov
inc
or
push
mov
push
push
lock
iret
daa
pop
sar
and
pop
xor
jp
loop
fdivs
sbb
push
push
mov
enter
mov
add
pop
mov
mov
pop
inc
stos
xchg
insl
repnz
xor
mov
push
mov
lret
enter
adc
rcrb
fstpt
xor
adc
fcmovne
pop
repz
out
inc
xchg
aad
or
sahf
push
imul
adc
jp
xlat
stos
sbb
xchg
lret
fdivrs
mov
xchg
ds
sbb
dec
out
inc
inc
loope
mov
push
cmpsb
and
push
add
cwtl
jecxz
aas
xor
xchg
or
cmc
xor
loop
or
cmpsb
push
jns
loopne
xor
mov
addr16
adc
int3
xchg
mov
mov
mov
std
les
idivl
stos
fcmovne
scas
popf
cmp
mov
mov
fs
addr16
stos
pop
push
gs
imul
setae
stos
mov
and
inc
ljmp
mov
ficomps
ret
lahf
repnz
push
lret
xlat
sbb
push
je
cwtl
adc
xor
mov
stc
pop
hlt
inc
idiv
fwait
pop
sbb
loopne
jecxz
mov
mov
pop
jbe
stc
push
push
fstp
xchg
mov
sub
adc
adc
gs
add
push
adc
xchg
in
xchg
sub
xchg
scas
fildl
fucomip
lods
inc
mov
or
shlb
add
xchg
in
out
insb
dec
sub
inc
mov
inc
cwtl
std
pop
mov
sub
push
leave
jno
xor
dec
mulb
int3
cmp
jle
push
or
mov
mov
cmp
adc
in
ret
dec
int
add
mov
mov
shl
mov
iret
mov
cmp
scas
test
imul
or
mov
cld
and
fisttpl
subb
mov
or
sti
jnp
or
mov
and
test
fs
xor
adc
popf
mov
and
mov
ffree
pop
xor
movsl
outsb
sbbb
sub
scas
nop
mov
cli
aad
inc
xchg
flds
xchg
inc
lods
adc
adc
popaw
inc
jno
xor
dec
int3
fcompl
adc
sub
insb
call
sub
add
sub
xchg
imul
ret
and
jbe
les
cltd
add
dec
lock
push
mov
insb
icebp
rcr
addr16
and
out
fnsave
mov
in
cld
imul
movsb
testb
test
nop
cmp
pop
xchg
sahf
mov
add
inc
mov
enter
gs
es
pop
adc
imul
popa
push
imulb
jns
out
cmp
lods
or
pop
pop
sbb
mov
imul
jnp
mov
add
sbb
mov
popf
lret
repz
testb
jge,pn
push
add
push
xor
fildl
sub
mov
jl
sbb
pop
sbbb
aad
ljmp
aas
mov
cs
mov
mov
mov
push
adc
push
and
xlat
fsubrl
adc
or
imul
mov
sarl
mov
pop
bound
int
dec
enter
pop
fimull
inc
lcall
cmp
aas
add
test
in
jnp
aaa
sub
pop
fistl
sub
adc
mov
xor
fistl
int
xchg
stos
std
repz
in
mov
jne
jb
pop
and
repz
cmpsb
inc
das
sahf
into
out
lahf
in
nop
lock
dec
testb
jnp
scas
inc
icebp
lods
xchg
mov
mov
mov
fidivrs
cmp
pop
lock
pop
mov
inc
fcmove
cmpsl
add
adc
movsb
mov
jnp
loop
ja
idivb
jns
xchg
jae
cmpsl
loop
jmp
sbb
sbb
mov
adc
loop
or
push
xchg
dec
out
adc
repnz
test
jb
jle
jg
aas
adc
loopne
sti
fsubl
test
sub
jne
xchg
push
mov
sub
jnp
mov
or
mov
je
sbb
fmull
enter
sub
negl
mov
add
sub
repz
pop
movsb
incb
adcb
jecxz
sbb
cmp
mov
lds
out
inc
inc
cwtl
out
data16
inc
xor
fucomi
dec
pop
es
cwtl
inc
lods
dec
stos
mov
mov
pop
push
syscall
mov
inc
push
xor
push
imul
mov
jne
mov
mov
jbe
dec
dec
sar
mov
xchg
rclb
push
xchg
sub
ret
cmp
repz
in
std
das
aas
xchg
test
jo
sub
test
add
aad
sbb
inc
sahf
adc
push
iret
adc
adcl
sar
xor
xor
shll
sub
sub
int3
xchg
mov
jnp
pop
push
aaa
cmp
scas
shrb
or
aaa
lock
dec
pop
dec
cli
lahf
or
xorl
mov
ficoms
push
lock
jmp
lahf
jns
ret
hlt
cltd
clc
pop
mov
push
xor
and
mov
adc
mov
mov
scas
mov
imul
sbb
fs
sbb
mov
sub
add
outsb
inc
adc
pop
sbb
and
divl
je
xchg
jge
and
test
cs
lods
mov
or
es
push
hlt
mov
bnd
dec
fnsave
stos
adc
fisttpl
pavgw
dec
inc
mov
mov
cmpsb
adc
shrb
mov
cmp
jo
jo
or
jp
dec
fsubrp
and
clc
repnz
lods
push
in
shrb
mov
cld
pop
jg
int3
sub
repnz
inc
pushf
out
jge
cltd
aaa
rcr
mov
pop
jae
or
icebp
std
add
mov
or
add
xor
jge
shll
jge
iret
clc
dec
adc
dec
testb
add
aaa
jle
out
aaa
mov
pop
xchg
sahf
lcall
push
pusha
cmp
jns
sub
cld
in
sub
fcoml
mov
push
imul
push
fistl
xor
cs
cmp
xor
push
lock
mov
cmp
mov
addb
in
mov
xor
popf
cmp
andb
stc
cmp
push
dec
add
in
dec
outsl
iret
jmp
or
xlat
push
outsb
movsb
in
xchg
pop
out
rorb
addl
addps
xchg
push
or
int
push
lahf
insb
ss
fimuls
jge
fs
adc
or
in
cmp
lock
xchg
pusha
movsb
scas
imul
out
xor
ljmp
fs
bound
mov
adc
xchg
push
sbb
xchg
cmc
je
int3
ljmp
jno
jns
insb
out
push
xchg
or
and
jle
pop
jno
das
aaa
sbb
push
jg
out
pop
outsl
xor
jae
xchg
push
add
xchg
mov
jg
gs
xor
sbbb
repnz
or
test
inc
pop
push
adc
add
push
pop
pop
pop
loop
fbstp
push
test
push
or
sbb
sub
jo
fwait
sbbb
dec
sub
inc
cltd
add
push
negb
nop
mov
ds
or
push
es
lock
cmc
outsb
cli
scas
aad
mov
fst
push
into
scas
adc
mov
and
mov
test
cmpsb
stos
ja
or
jmp
push
loop
cmpl
pop
stos
jp
inc
pop
cmpsb
pop
les
or
sbbl
lea
and
les
ret
gs
cmp
add
loopne
lcall
int
test
fcompp
xchg
popa
push
mov
dec
cmc
rol
sahf
bound
mul
sbb
jo
push
sub
xor
sbb
decb
js
push
stos
scas
xchg
mov
xchg
mov
sub
iret
imul
ret
cmp
hlt
jne
orb
loopne
je
push
or
outsw
loop
pop
sub
fldl
mov
imul
mov
pop
int3
imul
push
xor
fstps
stc
mov
xchg
dec
push
sbb
sub
leave
or
pop
xor
std
es
ss
or
loopne
je
fnstcw
mov
outsb
imul
es
out
jge
jns
ret
adc
loop
or
xchg
push
call
int3
lods
adc
fst
add
scas
jp
sub
ds
movsb
fcoml
popa
stos
adc
inc
mov
add
cmp
aas
xchg
push
insb
mov
mov
mov
mov
add
cld
mov
mov
inc
mov
push
adc
cmc
sbb
xor
das
test
xchg
mov
xchg
insb
mov
dec
xorl
jae
bound
push
addr16
cmpsb
mov
sub
dec
dec
pushf
pushl
jbe
test
aaa
fnstcw
icebp
push
mov
outsl
sbb
cs
scas
pop
push
jl
shll
xchg
fldcw
fwait
rorl
aaa
lahf
add
loop
out
pop
fs
and
gs
cwtl
inc
sub
stos
xchg
cmp
sbb
es
ljmp
pop
mov
dec
flds
pop
dec
sub
inc
mov
outsb
imull
cmpsl
clc
xchg
addl
mov
adc
dec
in
add
mov
pop
jle
dec
pop
sti
xlat
lods
ja
jmp
mov
mov
jno
cmp
popa
enter
fisttpll
or
fs
mov
add
movsb
pop
cli
hlt
push
in
inc
sbb
stos
xlat
call
sbb
mov
or
mov
loope
dec
jle
js
cmp
imul
and
ss
loop
bound
dec
cmp
dec
add
fstpt
xor
mov
xchg
aad
push
jnp
sti
inc
popa
cmpsb
add
mov
push
pushl
cltd
stos
pop
mov
ss
push
sbb
or
insb
dec
das
lods
mov
mov
adc
cmp
mov
inc
stos
add
inc
loopne
jmp
cmc
push
mov
dec
enter
sub
pusha
ljmp
pop
jo
lahf
cmc
jg
ror
cmpsb
or
enter
shll
lock
mov
adc
or
sbb
xlat
fiaddl
cmc
arpl
cmpb
fcmovnbe
popf
cmp
and
pop
jnp
push
dec
add
in
xchg
cmpsb
and
fisttps
pcmpeqw
adc
jnp
push
adc
mov
in
ret
pop
adc
sub
and
or
mov
xchg
das
gs
sahf
daa
inc
cmpsb
testb
cltd
fstpl
dec
ss
test
ret
push
push
shll
fs
rorl
ljmp
xchg
fstps
repnz
cwtl
or
arpl
scas
pop
dec
xor
cmp
push
lret
into
mov
cmp
xchg
sbb
pop
gs
sub
cltd
imul
lcall
xchg
or
imul
test
mov
lret
jl
or
xchg
jge
xchg
inc
in
fwait
xor
xchg
adc
mov
inc
xor
or
lret
add
jae
and
outsl
add
imul
ja
ds
out
movsb
jmp
jb
dec
cs
push
in
mov
mov
inc
ss
inc
push
jg
cwtl
adc
js
jle
mov
call
into
cmpsb
xor
dec
xchg
outsb
and
cmc
inc
shl
sub
add
fistps
xor
incb
or
mov
jno
mov
mov
aad
cwtl
dec
int3
enter
imul
test
and
popa
out
popa
push
orl
idivb
mov
fwait
add
mov
pop
mov
cmp
pop
icebp
test
scas
xor
cli
pop
sbb
jge
push
or
pop
cwtl
xor
fwait
in
sar
adc
jnp
daa
xor
mov
je
and
decl
roll
xor
pop
loope
aad
push
les
fldcw
jmp
pop
out
jbe
sti
mov
push
pop
aaa
mov
stos
sub
fwait
add
bound
punpckhbw
inc
add
xor
cmp
pushl
pop
sbb
mov
and
add
adc
inc
add
lea
js
fistpl
imul
movsl
pusha
xchg
scas
aaa
es
je
lods
mov
adc
enter
dec
cs
in
or
inc
daa
and
pop
mov
xor
sbb
outsl
arpl
jb
inc
test
shlb
add
aas
jg
enter
or
call
mov
negl
imul
loop
or
idivl
rcrl
ljmp
mov
inc
into
js
stos
insl
cmpsl
xlat
enter
aaa
or
pop
out
push
push
xchg
popf
push
or
rolb
mov
out
std
je
add
xor
pop
mov
adc
sbb
movsb
movsb
imul
mov
dec
or
mov
push
mov
add
mov
cmc
and
dec
call
andl
enter
in
mov
into
cmp
jo
jo
xchg
xorl
jp
lds
sub
and
xchg
mov
nop
mov
inc
jae
add
cltd
xlat
adc
add
repz
fwait
std
dec
lods
cmp
xor
mov
je
mov
cmp
mov
lahf
sub
out
pop
inc
dec
pop
lcall
aas
cmpsb
push
jg
add
outsb
adc
jns
movsb
sbb
sbb
decb
mov
jns
mov
lret
xchg
test
mov
mov
lds
and
jae
in
mov
xchg
adc
movsb
repnz
loopne
xor
xor
mov
pop
jp
mov
xchg
std
call
inc
pop
sbb
push
add
loopne
mov
lret
in
mov
add
sbb
roll
cmp
mov
adc
arpl
icebp
cli
loop
in
out
in
lds
sbb
cmpsl
xlat
movsb
push
popa
js
lock
dec
bound
pop
dec
add
dec
fdivrl
icebp
xor
mov
fdivs
divb
subl
mov
xchg
stos
dec
pop
stos
lods
push
or
test
loop
and
insb
repnz
lods
push
mov
ss
movsb
mov
dec
cld
in
idivb
jmp
dec
adc
inc
cli
sbb
cwtl
xor
pop
in
cmp
add
jle
sub
test
add
mov
jns
std
or
js
adc
adc
dec
sbb
xchg
fs
xchg
cltd
fcoms
fidivrs
cmpsl
bound
inc
xchg
rorb
pop
out
ds
aad
je
sbb
adc
mov
add
test
and
mov
scas
iret
fwait
push
sti
sub
push
adc
cmp
xor
push
jg
xorl
lret
sahf
jle
fmulp
jbe
repnz
or
sbb
cli
fmuls
jp
in
addr16
fwait
push
adc
call
mov
js
xchg
sbb
jmp
add
iret
sti
dec
idiv
mov
sbb
sub
mov
mov
xor
push
icebp
jge
hlt
in
mov
add
mov
cmp
stc
arpl
sarb
xor
mov
cld
jg
sub
out
adc
dec
pop
adc
imul
cld
bound
sahf
in
xorb
mov
rcrl
jl
scas
iret
inc
mov
jae
adc
mov
cwtl
mov
fucomip
aam
outsl
fdivrs
mov
mov
scas
or
mov
dec
inc
pop
ss
ja
fs
dec
test
test
ret
sbb
pusha
lahf
ja
dec
mov
push
adc
cmp
insb
xchg
mov
fucomi
lea
dec
jne
cwtl
jo
cltd
mov
imul
sub
push
aad
push
outsl
icebp
rcrl
xchg
mov
and
aam
sti
xchg
mov
mov
ds
xor
inc
push
add
movsl
mov
cwtl
add
inc
jne
adc
mov
pop
sar
js
addr16
sub
cmpsl
out
loope
repz
jae
jle
shll
mov
dec
push
push
fisubrl
clc
cmp
pop
jmp
in
pop
fimuls
mov
mov
andl
sahf
bound
movsb
loop
push
sbb
mov
pop
aad
loopne
push
mov
pop
loop
and
xchg
rolb
aas
jg
jecxz
cmpb
cli
mov
or
xchg
aaa
or
fmuls
test
adc
push
inc
stos
add
pop
in
jecxz
mov
jl
pop
enter
fwait
dec
and
dec
loope
xor
inc
sbb
lods
jl
mov
movl
cwtl
push
mov
jns
jmp
xchg
mov
jmp
sbb
dec
pushf
pop
xchg
dec
lds
fndisi(8087
outsb
outsb
push
or
dec
jle
test
xor
iret
imul
in
test
test
mov
mov
inc
leave
add
push
aaa
xor
and
adc
jno
outsl
fnsave
adc
mov
sub
fcom
jg
int
je
mov
dec
cmpsl
fwait
pop
stos
mov
out
xor
cs
or
jmp
adcl
push
xor
pushf
cmpl
jmp
cli
hlt
int3
pusha
inc
jnp
outsb
ljmp
sub
leave
je
clc
jp
cmp
sbb
jg
mov
aam
iret
push
loope
xor
cmp
daa
sbb
ja
inc
mov
in
in
mov
dec
xchg
push
imul
inc
sbb
pusha
movsl
push
mov
clc
shr
add
and
push
mov
sbb
cmp
mov
dec
mul
ds
out
aam
in
mov
cmpsb
arpl
and
jmp
lods
or
aas
or
stos
pop
and
mov
and
or
mov
jbe
jo
mov
nop
adc
jl
xchg
push
ss
stos
mov
shlb
or
in
xor
xchg
cmp
insb
jg
lods
mov
mov
and
and
in
call
mov
sahf
adc
fwait
jbe
xor
popf
mov
add
mov
les
imulb
movsl
jmp
das
scas
sub
ret
add
jns
adc
sub
frstor
sbb
fstpl
jp
and
pop
pop
outsb
xchg
test
dec
mov
stos
rorb
cmp
and
mov
outsl
mov
out
test
inc
cltd
adc
adc
hlt
loopne
in
mov
mov
sbb
sarl
rcr
cmp
adc
out
pop
mull
fcmove
mov
pop
stos
mov
push
mov
int3
cmc
xchg
and
xor
pushfw
hlt
sbb
xor
shl
or
stos
jno
cwtl
mov
cmp
and
add
lret
test
es
insl
add
call
mulb
out
mov
xor
xor
es
aam
xchg
mov
inc
in
ljmp
push
gs
icebp
pop
mov
fistps
pop
mov
sti
cmp
ljmp
and
lods
push
inc
jl
cmp
pop
sbb
sbb
lods
push
sub
shufps
push
cmp
mov
sbb
ret
arpl
dec
idivb
sbb
push
in
inc
stos
jnp
cwtl
bound
xchg
mov
push
in
lea
lret
mov
enter
movsl
or
mov
lea
mov
jno
add
inc
xchg
outsl
mov
lods
int3
xlat
ljmp
popa
add
push
or
cmpsb
jle
mov
add
stos
stc
pop
gs
lahf
pop
addb
out
xchg
lar
cmpsl
fdiv
jo
push
aam
js
xor
aaa
sub
xchg
mov
pop
mov
sub
loope
inc
push
icebp
adc
pop
push
jnp
sub
cld
or
xor
pop
loope
push
test
sub
mov
lock
hlt
test
in
pop
jmp
arpl
pusha
push
inc
adc
jmp
xor
cmp
dec
pop
jno
in
lahf
push
adc
mov
xor
mov
pop
jmp
cld
pop
jl
mov
loopne
fs
pop
leave
shr
loopne
and
adc
xorl
pop
jbe
enter
lea
sahf
and
adc
js
fdivrp
and
out
push
jbe
dec
mov
mov
loopne
mov
mov
dec
fdivrp
gs
adc
test
mov
dec
inc
int
jmp
shlb
aaa
sbb
cmp
out
xchg
dec
push
pop
lods
loop
sbb
xor
dec
lcall
shl
jge
jb
sti
cli
icebp
scas
repnz
or
push
js
xor
repnz
pushl
pusha
cs
sub
jecxz
lret
and
mov
stos
cmp
push
cld
or
xor
mov
dec
mov
iret
inc
insb
in
out
fs
and
add
xchg
dec
and
xor
push
mov
adc
adc
inc
push
and
push
stc
pop
addr16
inc
jo
push
cmc
mov
xchg
xor
std
cmp
sbb
push
add
test
fstps
aaa
jmp
mov
lret
mov
xor
rcrb
movsl
adc
mov
cld
popa
jp
and
mov
jne
fstpt
lods
clc
orb
loope
mov
and
push
std
jmp
into
shrl
mov
ljmp
mov
repz
push
add
ja
push
ljmp
mov
testl
ljmp
push
sub
xor
push
loope
in
sbb
ljmp
jno
dec
sbb
mov
add
lock
pop
scas
jmp
mov
adc
pop
rorb
aaa
ljmp
sarl
adc
add
inc
sbb
mov
inc
add
loopne
out
js
pushl
popf
cmp
stos
jle
dec
cmpsl
es
sbb
push
push
xor
jnp
inc
push
xchg
aaa
sarl
lcall
imull
popa
jle
mov
pop
imul
xor
add
pop
fisttpl
das
iret
inc
call
js
hlt
sbb
mov
cmpsw
in
ljmp
test
xchg
jnp
fcomps
insl
xor
pushf
jecxz
jne
jb
jle
dec
xor
fstpt
aas
inc
outsb
xchg
xchg
adc
fwait
mov
and
int
loop
add
cwtl
jno
repnz
mov
sbbb
adc
and
jg
push
iret
cmp
jno
int3
scas
fistpll
and
fildll
or
mov
aad
neg
mov
dec
jp
scas
jmp
dec
xor
mov
and
and
dec
pop
and
sbb
nop
imul
xchg
add
sbb
sahf
sbb
out
xor
jge
fstl
arpl
lahf
in
ds
sub
dec
sti
add
daa
push
xor
lcall
sub
pop
dec
xor
movsb
shl
inc
popf
cltd
insl
test
icebp
test
imul
lea
ret
cs
cmp
xchg
stc
push
ja
jl
mov
in
push
pop
scas
xchg
sbb
rcrl
cmp
xor
ljmp
pop
push
fs
stos
test
stos
dec
or
adc
mov
pop
stos
cltd
xchg
and
rcrb
jbe
pop
adc
or
pusha
push
aam
fcoms
negb
xchg
mov
stc
in
into
test
push
xchg
hlt
xchg
pop
out
stc
sub
cmp
inc
mov
xor
sti
rcrl
call
pop
sbb
pop
mov
and
mov
mov
xor
fs
xchg
loop
aaa
mov
dec
xor
lretw
pushf
xlat
jns
addb
mov
call
dec
or
movsb
test
int
sub
jmp
mov
mov
mov
pop
sub
idivb
pop
inc
pop
scas
pop
xchg
enter
nop
aam
fisubrs
pop
cli
popf
scas
je,pt
mov
std
sub
inc
mov
cli
ds
faddl
sbb
lret
sub
stos
ss
mov
out
sub
push
mov
sti
lea
jne
mov
pop
sub
rep
imul
xlat
ljmp
pop
dec
cmp
lret
test
lods
push
js
xchg
loopne
inc
lds
test
xchg
and
sub
cld
push
inc
ljmp
int3
iret
or
cmpl
mov
arpl
jge
xchg
adc
or
push
or
jns
pushaw
adc
jbe
xchg
rol
movsb
out
add
loop
jle
cmp
fwait
mov
push
sbb
roll
sub
insb
pop
addr16
addb
sbb
clc
lods
test
mov
jnp
xchg
subl
push
or
push
jae
clc
or
repz
push
dec
push
aad
xor
pop
aas
mov
int3
sbb
lods
pop
hlt
and
sti
lods
insb
test
mov
xchg
sub
lret
jns
jb
lret
mov
mov
lods
andb
adc
into
repz
fsubs
popf
add
call
dec
sbb
sub
enter
pop
in
popf
jo
jp
stos
add
adc
cmp
xchg
ret
xchg
mov
lret
int
dec
inc
inc
orb
pushf
arpl
cli
mov
xchg
fdivrp
aaa
into
imul
sahf
or
int3
repz
mov
stc
int
sub
push
mov
pop
cld
mov
mov
cmp
mov
subl
rcl
push
dec
out
mov
in
mov
and
sahf
dec
outsl
mov
inc
mov
and
idivb
out
sahf
mov
fcoml
leave
dec
pop
jbe
frstor
ja
mov
or
mov
jbe
cmp
jne
ret
mov
add
pop
shlb
pop
repz
cli
ds
jne
and
sar
notb
aam
movsl
xchg
fwait
pop
in
pop
push
ret
out
testl
fisubs
inc
and
add
fidivrs
mov
cmp
enter
in
in
cmp
xor
es
pop
sbb
pop
xchg
data16
pop
adc
ss
cltd
lock
inc
test
enter
call
or
cmpsb
leave
dec
imul
repz
xor
pop
mov
das
jg
cmp
aad
cli
inc
cld
aad
lret
jge
lcall
adc
dec
mov
sbb
cmp
xor
and
xchg
icebp
jg
sub
xor
push
jno
cwtl
cmp
mov
pop
jle
xor
sub
les
adc
mov
shlb
mov
jns
test
sub
mov
dec
aad
inc
push
insl
movsb
int3
xchg
mov
imul
dec
xchg
xchg
lods
repnz
pop
adc
push
push
int3
jb
pop
test
xor
lds
shlb
aad
addr16
das
xchg
jle
xor
insl
xchg
or
je
and
and
adc
pop
and
fstps
je
push
mov
leave
andl
fsts
or
pop
mov
xor
pop
repz
or
and
je
and
sub
ficoms
test
mov
ljmp
lret
int
jmp
gs
and
loopne
loope
inc
pusha
je
test
fists
or
pop
aam
adc
or
rclb
lds
clc
outsl
xchg
outsl
xchg
mov
xchg
xchg
int
sbb
mov
mov
xor
xchg
adc
iret
in
imul
mov
stos
int3
outsb
out
hlt
cmp
stos
jbe
fiaddl
shll
dec
pop
jle
out
dec
push
mov
sbb
lcall
push
add
ret
jbe
int3
xlat
lock
xchg
repnz
enterw
jge
jnp
inc
popf
ja
fcmove
cmp
or
mov
jns
movsb
insb
clc
jmp
repnz
gs
push
andl
arpl
shlb
bound
inc
aam
mov
pop
pop
inc
loopne
xor
bswap
lcall
pop
dec
sub
sub
lcall
adc
pop
movsl
ds
out
jne
sbb
cmp
iret
ret
ret
or
stc
jecxz
in
pop
mov
xchg
xchg
push
xchg
insb
add
pushf
and
aaa
jae
lods
mov
dec
cmp
push
adc
js
mov
ss
int
pop
jmp
rcl
jo
mov
aaa
or
std
fsubs
mov
inc
dec
mov
and
popf
push
int
xchg
dec
mov
ret
test
jmp
sbb
mov
pushf
cwtl
sbb
lds
inc
shll
mov
push
enter
inc
in
shlb
push
sbb
xchg
divb
cmp
add
lcall
and
into
arpl
js
pop
imul
inc
flds
iret
lret
pop
pop
ret
sbb
dec
gs
sbb
sbb
fmull
sbb
xor
xchg
fwait
icebp
insb
cmpsl
xor
add
test
test
mov
shll
push
jl
cld
and
mov
hlt
xchg
call
cmp
fsubr
mov
jb
adc
pop
lock
xchg
ret
mov
ds
fcompl
repz
push
xchg
add
fbstp
out
out
popf
fisubl
mov
jb
or
aam
testl
bound
inc
scas
push
ds
inc
cmp
jb
or
outsl
das
or
adc
and
sbb
mov
add
out
inc
movsl
outsl
and
sahf
inc
pop
ss
scas
xchg
das
sub
cmp
ja
jns
add
in
xor
inc
mov
mov
inc
pop
aas
das
sbb
mov
adc
cmp
loopne,pn
jne
sbb
jl
xor
js
frstor
addl
and
popa
dec
push
ret
fsubrp
mov
lcall
or
add
jns
lahf
nop
nop
movsl
imull
inc
adc
add
cmp
pop
cvtps2pi
inc
and
mov
ret
repnz
xor
pop
dec
enter
dec
aaa
mov
mov
cltd
lcall
into
adc
add
imul
adcl
setae
ja
mov
ljmp
add
fldt
js
arpl
jg
outsb
add
mov
loopne
vpaddusw
xchg
test
mov
bound
inc
xchg
iret
pop
mov
cmp
sbb
mov
mov
int
fdivrs
cmpsb
aas
popa
dec
pop
clc
sub
in
js
jg
stc
mov
cmp
test
xor
in
and
add
inc
sbb
xor
mov
mov
jmp
pop
aas
mov
sti
scas
rcrl
xchg
je
sbb
enter
fs
xchg
rolb
fbld
jge
inc
dec
in
lcall
lahf
mov
add
lea
jno
fnstcw
xlat
add
ret
inc
sub
inc
bound
jge
shl
jmp
mov
mov
sarb
popf
sub
imul
pop
add
jo
xor
scas
mov
dec
imul
data16
inc
adc
and
push
pushf
call
jo
adc
ds
ds
les
dec
imul
cmp
cwtl
adc
or
pop
inc
jne
cmpb
add
add
sbb
rolb
ljmp
sbb
stos
loopne
das
lret
test
sti
cltd
pop
and
mov
lret
jl
lret
xchg
push
jnp
xchg
xor
scas
xor
adc
jg
sbb
dec
ds
add
sbb
jge
xor
js
lahf
movsb
ja
pop
sub
xchg
xor
jmp
cld
movsl
shlb
push
cmpsl
ja
cmpsb
fcoms
arpl
cmp
ja
add
jo
test
dec
dec
mov
sub
add
mov
and
lds
lahf
push
in
mov
or
aaa
mov
int
jo
or
ret
lods
daa
les
test
adcb
sub
push
cli
sbb
xchg
pop
adc
gs
mov
cmp
dec
adc
fdivrl
and
lret
nop
adc
inc
dec
mov
popa
sti
loopne
ret
orb
mov
stc
push
xchg
mov
lcall
int
call
fistps
sbb
adcl
and
jno
rep
jp
pop
rcrb
mov
mov
call
leave
aam
push
pop
fimull
inc
mov
test
shlb
mov
and
jle
dec
out
add
test
add
in
dec
stos
fcom
ror
shlb
or
rclb
ss
mov
aam
test
movl
shr
fisubs
push
insl
pushf
sub
outsl
jl
iret
adc
lahf
sub
dec
push
cmpsb
mov
inc
cmp
xor
lock
aas
out
rolb
hlt
mov
cmpsb
xorl
adcb
test
sub
mov
xchg
insb
dec
mov
mov
add
mov
mov
stos
cs
das
pop
repnz
jl
test
repz
fstpt
push
dec
xchg
dec
insb
push
pop
adc
push
sub
push
neg
sbb
xchg
addr16
fcmovnb
jmp
and
fcmovu
lods
fcmovnbe
lret
mov
ss
jnp
mov
hlt
out
loopne
test
push
aad
pop
jno
mov
adc
xchg
es
lods
adc
aaa
ret
lahf
rcr
aam
xor
aaa
jns
jnp
aaa
dec
or
mov
mov
sub
push
cmp
xchg
inc
scas
sbb
call
add
shlb
jp
mov
sti
je
imull
pop
cs
inc
push
and
pop
or
pop
outsl
stos
loopne
push
pop
aaa
pusha
imul
loope
pop
test
mov
adc
dec
jl
or
pop
enter
arpl
mov
jecxz
stos
sahf
or
add
cmpsb
xchg
mov
cli
sub
mov
mov
ret
mov
cmpsb
sti
into
out
call
lock
add
jnp
jle
add
pop
dec
xchg
mov
sub
xlat
mov
xor
test
sbb
mov
mov
sbb
hlt
pop
xchg
clc
xlat
outsl
adc
mov
mov
dec
sbb
cmp
dec
push
pop
lahf
in
or
icebp
stc
mov
or
inc
shrl
addl
enter
test
lods
gs
adc
movb
sub
lret
pop
or
lcall
pop
jp
lea
and
mov
ss
mov
jp
stos
pop
sbb
mov
inc
add
sahf
rep
pop
aam
js
lock
pop
jbe
jb
jns
into
test
dec
test
std
lret
jge
inc
or
shll
pop
dec
pop
xor
push
push
stc
sti
xor
inc
pop
pop
cwtl
enter
sub
ss
fcmovne
loope
dec
pop
loop
lahf
loopne
push
lret
es
push
or
repnz
and
add
call
push
imul
rorl
xchg
dec
adc
bswap
inc
push
jns
in
test
sbb
stos
sti
mov
jo
xor
pushf
movsl
jns
in
add
leave
adc
sbb
rorl
pushf
xchg
clc
inc
ja
xor
rclb
cmpsl
stos
pop
rcrl
jns
mov
jns
out
inc
cld
pushf
lret
mov
mov
pusha
lods
dec
mov
lcall
jg
xchg
mov
sbb
out
frstor
lret
rcr
sbb
and
adc
insb
mov
mov
add
xor
fcompl
xchg
jne
ret
and
mov
xor
pop
pushf
std
add
mov
and
cmp
sbb
mov
fnstsw
fcoms
or
subl
out
mov
arpl
push
xor
fwait
popa
dec
xchg
sahf
sbb
call
inc
or
gs
ret
pop
xchg
insb
rcrb
adcb
push
pop
mov
enter
ds
pop
sub
andb
jnp
leave
pop
lods
and
cmpsl
push
xchg
xchg
add
or
mov
vmovdqa
rcrb
stos
ljmp
jb
daa
mov
and
lds
loopne
lds
mov
int3
dec
or
and
enter
scas
xchg
adc
fdivs
or
ja
mov
jg
or
xchg
adc
or
push
adc
pusha
pop
pop
sbb
and
cmp
in
aas
sbb
jns
mov
lea
fwait
cmp
dec
cmp
mov
ljmp
adc
xchg
mov
jae
fwait
push
icebp
cmovne
jge
rcll
lret
add
mov
cmc
jnp
ljmp
mov
pop
aas
lods
mov
inc
fidivl
stos
xchg
dec
jno
lea
frstor
xor
popl
cmc
in
icebp
adc
fldcw
loopne
int
popf
xor
fisubl
rcr
sarl
push
xor
inc
fisttpll
add
inc
and
jmp
jecxz
test
ret
pop
data16
pop
pop
and
mov
fisubl
mov
movsl
call
mov
out
jbe
cmp
pop
xchg
sbb
idivl
mov
sarl
push
mov
sub
push
aad
enter
mov
mov
out
xchg
fdivrl
jb
pop
icebp
pop
xchg
or
mov
sahf
push
in
bound
mov
lds
push
ja
bnd
add
inc
pop
ds
orb
fildll
mov
adc
ja
pop
pusha
out
arpl
popa
jae
cmp
xchg
test
or
popf
stos
adc
inc
jecxz
rcll
shlb
push
inc
mov
out
adc
or
rcll
cmp
into
dec
xchg
add
lods
fidivrl
mov
rclb
jbe
jmp
int
fwait
int3
pusha
cmp
lret
stos
inc
mov
adc
pop
mov
insb
mov
add
sub
sub
dec
pop
mov
add
push
xchg
fldenv
aaa
adc
mov
dec
std
add
xor
lret
pop
mov
ret
les
dec
testb
add
fs
add
ljmp
or
mov
mov
mov
nop
xchg
and
mov
inc
adc
dec
adc
pop
cmp
and
leave
adc
test
adc
sti
ja
popa
sbb
mov
js
push
fists
xchg
cmp
stos
xchg
popa
call
es
mov
subl
sar
mov
sub
push
aaa
and
add
cmpsb
adc
jns
jle
clc
ficompl
loopne
fistpll
ja
add
xor
jp
sbb
mov
lock
xor
pop
and
out
dec
inc
clc
cwtl
ficoms
sbb
xchg
das
cmpsl
lock
dec
mov
iret
repnz
adc
leave
rolb
push
pop
jns
int3
and
pop
mov
sub
sub
loop
popf
jb
je
outsb
out
inc
gs
mov
pop
jae
fisubrs
jns
add
loope
sub
js
cmp
xor
jecxz
out
cli
sub
jecxz
add
mov
ja
xor
addr16
xchg
push
pop
outsl
mov
jno
pop
fcmovnb
pushf
cwtl
int3
aam
or
pop
push
push
inc
jnp
jns
jns
cli
arpl
jbe
or
inc
imul
cmpsb
stos
push
inc
lds
hlt
sub
ljmp
std
shrb
lea
inc
adc
cmp
lock
shl
nop
sub
repz
mov
ret
mov
lods
in
fsubs
mov
xchg
pusha
iret
mov
inc
push
add
cmp
pop
mov
sub
jge
mov
pop
xchg
pop
ds
pop
inc
sub
shr
sub
inc
stos
mov
xchg
push
cmp
movsb
sub
mov
and
push
ficoml
add
or
or
dec
mov
les
xchg
sti
cmp
cmp
es
pusha
or
daa
insb
mov
adc
add
rclb
flds
jecxz
pop
dec
mov
scas
jle
and
pusha
popf
push
jl
decb
movsb
cmp
inc
fs
fidivl
ret
enter
xor
mov
nop
mov
and
and
loope
outsl
add
cmp
jp
xchg
call
xlat
imul
pusha
pop
mov
adc
mov
and
pop
cmp
icebp
or
loop
lret
movsl
test
in
adc
pop
inc
das
xlat
mov
shlb
andl
xor
ja
addr16
psrlw
arpl
xchg
lods
iret
pop
dec
lret
sub
pop
dec
aas
push
dec
fstl
mov
hlt
sbb
xor
addr16
insl
dec
xchg
add
push
stc
sub
jns
loope
or
sbb
sbb
push
xchg
push
push
push
dec
jle
cmpl
or
or
movsb
shl
sub
mov
into
jmp
add
les
xchg
dec
aam
add
dec
sbbb
rol
lods
mov
test
xchg
out
shl
inc
ds
das
iret
push
in
dec
push
int3
mov
jle
rcr
idivl
frstor
push
in
or
cmp
jno
inc
mov
and
inc
decl
hlt
cmc
sbb
xor
js
dec
sahf
push
rorb
add
adc
mov
sub
mov
mov
cmpsb
add
jno
cmp
xchg
mov
loope
cmpsb
jne
lock
dec
movsb
insb
cmp
mov
or
shrb
lock
cmc
jg
mov
mov
ret
out
leave
cltd
xorb
or
sbb
sub
outsl
adc
lret
ljmp
push
and
push
je
pop
cltd
leave
cmp
xor
stos
mov
xchg
ret
pop
cmp
sbb
pop
pusha
jge
and
xor
es
stos
mov
xchg
stos
testb
and
mov
jnp
movsl
pop
mov
push
dec
xor
and
inc
lds
push
and
std
jle
push
mov
pop
xor
cwtl
or
in
repz
scas
sbb
lahf
mov
cmp
xor
ret
xchg
pushf
data16
xor
adc
aaa
test
int3
or
popf
pop
pop
xor
mov
icebp
fcmovnbe
xchg
add
mov
and
sub
idivb
xor
push
pop
add
filds
add
inc
je
inc
push
ret
pop
lods
add
push
pop
cmp
fidivrs
pushf
inc
inc
xchg
andb
stos
inc
or
push
test
mov
enter
inc
and
repz
insl
cltd
das
sti
sub
dec
sti
fldcw
cmp
xchg
lock
int
fdivrl
hlt
scas
dec
and
cmp
jecxz
mov
push
lods
cld
or
push
xchg
popf
cs
repz
dec
dec
cmp
ror
inc
adc
les
into
mov
ret
mov
inc
and
sbb
or
mov
and
adc
cmp
mov
call
ficomps
leave
fcoms
pop
xor
cmp
adc
out
outsl
dec
mov
fs
emms
lods
cmp
and
and
pushf
push
fldcw
pop
inc
jbe
mov
push
fcmovnb
sub
jp
sahf
fiaddl
mov
mov
xchg
mov
clc
add
call
adc
ljmp
adc
and
sbb
aas
sbb
dec
xchg
pop
jl
imul
jnp
leave
pop
sbb
shld
in
dec
data16
imull
lods
mov
test
js
mov
out
mov
leave
fildll
jb
pushf
iret
push
pop
sub
nop
push
adc
nop
pop
arpl
shll
xor
add
sub
xor
add
aad
inc
dec
inc
outsl
xchg
pushf
stos
icebp
sub
and
mov
xor
adc
add
mov
jge
push
scas
test
scas
fbstp
cli
dec
test
sub
in
sub
mov
adc
jp
sbb
xchg
and
pushf
loop
ret
repz
or
and
cmp
xchg
add
shrb
mov
hlt
jae
cmpsb
lea
add
or
popl
add
insb
cmp
xor
insl
pop
loop
fldcw
out
bnd
xchg
mov
adc
lcall
enter
cmp
fistpll
dec
std
in
sahf
sbb
sbb
push
addr16
cld
jge
push
xchg
xchg
pop
leave
enter
sub
pop
cmc
jbe
inc
pop
mov
and
jbe
stos
sub
inc
adc
aam
cmp
mov
daa
punpckhdq
add
push
ret
imul
or
mov
je
and
mov
jecxz
jo
or
sub
in
jne
push
mov
pop
stc
push
add
push
push
nop
scas
push
add
shr
push
in
cmp
fisubrs
mov
cmp
fs
jbe
push
cmp
pusha
pop
mov
sbb
push
test
aas
cld
and
mov
jb
xchg
jmp
jl
inc
sub
sarb
daa
sahf
mov
pop
daa
inc
hlt
mull
mov
add
fdivs
fsubrl
mov
jle
jl
divb
add
popa
xchg
add
mov
xchg
push
negb
xorl
repz
test
or
rolb
clc
leave
push
sub
inc
inc
and
jge
pop
lds
lods
test
xor
mov
sub
jle
lret
mov
pop
movb
fwait
push
fidivrl
and
mov
out
pop
sti
test
push
scas
sbb
inc
mov
push
xorb
mull
jecxz
insb
aaa
or
mov
mov
and
dec
sarb
add
stc
adc
loopew
arpl
adc
int
sbb
xchg
adcb
cmp
and
out
add
sbb
and
and
xorl
aaa
mov
and
out
ret
mov
and
filds
adc
lcall
daa
pushf
push
ljmp
jl
in
cwtl
repz
mov
jl
nop
lret
mov
mov
pop
pop
pop
inc
mov
or
lock
fldt
fimull
push
mov
ds
push
sbb
fwait
or
cltd
ret
cmovle
cmp
lods
pop
lret
dec
rorl
mov
aaa
mov
lods
arpl
popf
adc
ror
xchg
sbb
lods
scas
inc
ret
and
cmpsb
fsubrl
faddl
jge
and
mov
push
dec
dec
push
in
push
in
add
mov
insl
out
lds
jp
in
mov
lods
push
mov
fucomi
and
and
mov
mov
jp
out
fisubrs
mov
aam
sub
pause
pop
sbb
out
es
fidivrs
push
xor
add
pop
stos
hlt
out
pushf
gs
cmp
mov
cli
lahf
jmp
stos
mov
outsb
or
jg
xchg
pop
inc
sbb
mov
sub
jle
xor
leave
inc
ja
lahf
push
repnz
das
lods
ss
xlat
dec
outsb
push
scas
pusha
adc
xchg
clc
in
mov
das
loope
inc
and
xlat
add
hlt
out
cmp
std
cli
xchg
jmp
lret
loop
int
mov
mov
xchg
fisttpl
sbb
inc
xor
cmp
sub
call
movsl
ret
xchg
push
ds
inc
jge
popa
test
rorl
test
jg
fisubrs
sbb
mov
mov
jbe
mov
into
adc
cmpb
jno
insl
movsb
in
std
adc
push
nop
dec
xchg
inc
xlat
inc
or
mov
call
or
lea
scas
sbb
jbe
imull
imul
fdivrs
notl
dec
or
add
pop
push
faddl
sbbb
sbb
dec
lret
mov
jb
fwait
sub
inc
sub
pop
subb
adc
scas
cmp
push
jnp
and
dec
call
inc
aas
js
adc
xchg
fcoml
xchg
push
and
nop
ds
out
lods
ss
add
xchg
dec
shll
lds
cltd
sbb
push
adc
sub
outsl
test
xchg
lods
ss
and
pop
repnz
lret
jo
mov
jge,pt
push
sub
mov
inc
push
pop
iret
pop
xchg
scas
push
add
or
mov
and
mov
ret
sub
nop
push
xor
daa
inc
inc
pop
cld
pop
dec
xchg
dec
xchg
and
outsl
jg
inc
cmp
ljmp
pop
aam
pop
push
mov
xchg
adc
movsb
mov
mov
pop
jo
jno
out
adc
mov
xchg
roll
clc
into
lahf
int
nop
push
mov
lea
cs
mov
popa
hlt
loopne
inc
pushf
ret
dec
dec
inc
mov
dec
or
xchg
rol
mov
push
mov
test
sbb
push
pop
les
ret
xchg
sahf
cwtl
and
dec
sbb
xchg
out
sti
sbb
stc
nop
add
jecxz
es
cmp
mov
and
and
in
out
addb
sbb
mov
jg
scas
aam
subb
inc
das
xor
repz
adc
mov
adc
into
xlat
push
ss
jmp
imul
pop
mov
insb
mov
xor
lods
pop
mov
and
ret
mov
jmp
adc
jge
push
lods
xchg
cmc
mov
in
andb
icebp
sub
gs
lods
xor
stos
push
add
imul
push
sbb
pop
mov
fcoms
stos
pushf
pop
sbb
pop
test
add
orb
xor
clc
sub
inc
shll
shll
jae,pt
inc
mov
sbb
push
mov
into
std
sub
and
ret
sbb
fstpt
xchg
add
movsl
jns
adc
xchg
sub
mov
inc
dec
push
leave
ss
mov
imul
shrb
xlat
push
jo
aaa
mov
pop
xor
jnp
stos
test
cmp
mov
inc
in
out
enter
mov
fcoml
xchg
sub
int
dec
sbb
stc
sbb
clc
adc
ret
in
cltd
pop
ret
in
cmpsb
nop
clc
cltd
int3
dec
mov
enter
loop
dec
pop
sbb
cmp
jmp
mov
insl
nop
fxch
mov
cltd
dec
cli
dec
arpl
xchg
leave
pushf
xchg
add
add
repz
or
cmp
cmp
enter
dec
jnp
xor
popa
mov
push
ficoml
scas
inc
out
push
mov
xor
hlt
addr16
fsubrp
loop
js
pop
cld
les
and
push
aaa
inc
and
cltd
mov
mov
mov
and
mov
xchg
stc
nop
movsl
fistpl
adc
lea
push
adc
mov
sub
aaa
sub
das
popa
outsl
sbb
scas
pop
mov
sub
jmp
leave
dec
rol
cwtl
pop
sti
push
gs
sub
test
cmp
and
pushf
sahf
jno
adc
setl
inc
mov
xchg
dec
or
mov
cltd
outsb
cmpb
pop
jnp
pop
out
dec
bound
mov
in
outsl
sahf
cmp
pop
test
xchg
aam
jnp
xorb
sub
in
lea
lds
hlt
or
cmp
dec
jle
fnstenv
andl
ljmp
dec
xor
adc
mov
jo
adcl
sub
int3
add
push
sti
mov
lds
mov
in
insb
lods
mov
ds
dec
insl
insl
sub
mov
lods
inc
jg
roll
push
sbbb
inc
cli
dec
icebp
lcall
lods
minps
rclb
push
inc
int3
subl
mov
ja
nop
mov
lds
hlt
enter
enter
js
loope
jnp
lea
stos
and
xchg
jae
push
dec
mov
popa
lahf
lock
lret
mov
lcall
repnz
and
push
sub
xchg
jge
vmread
mov
jns
push
push
add
fldt
out
cltd
inc
xchg
cmp
xchg
cmp
mov
sbb
call
dec
xlat
lods
hlt
sbb
lret
lret
in
xor
in
push
loopne
cmp
lods
mov
add
es
roll
mov
lock
insb
mov
test
xchg
jecxz
ret
mov
dec
push
xchg
test
jmp
mov
pop
addr16
sub
pop
jnp
das
or
xor
arpl
ficomps
pop
faddl
xor
call
push
add
push
sub
or
mov
movsb
nop
clc
mov
xlat
inc
cmp
add
lods
ret
or
xchg
push
or
add
sub
xchg
cmp
rcpps
or
in
cmp
and
sbb
dec
pop
mov
repz
dec
mov
jg
mov
stos
xchg
and
adc
pop
xchg
mov
adc
rorb
pop
cmp
ja
insb
orl
sub
xchg
mov
inc
inc
jp
pop
mov
xor
loop
sbb
jge
mov
insl
sarb
jle
insl
jbe
or
out
lods
sarb
in
mov
add
scas
or
add
ret
mov
test
psubw
cmp
sbb
scas
or
ret
loopne
insb
mov
push
sub
adc
movsl
xchg
or
mov
mov
stos
leave
mov
cmpsl
mov
jb
ds
fwait
push
add
in
imul
or
sti
add
inc
mov
pop
cmpsl
pop
test
stos
loopne
xchg
and
mov
add
int3
and
inc
xor
xchg
fsub
inc
mov
cltd
adc
xor
jge
fsubrl
movb
xchg
jmp
or
xlat
pusha
aad
xor
mov
jmp
push
pop
mov
cs
rclb
sub
inc
sbbl
movsl
leave
in
movsb
int
xlat
stos
add
or
jne
add
dec
and
movsb
jle
push
sbb
mov
shlb
jmp
movsl
push
bswap
mov
dec
test
mov
and
mov
xor
jnp
pop
jg
xchg
and
dec
add
pop
add
arpl
sub
int3
fwait
mov
movsl
dec
xchg
add
jno
cmpsl
dec
test
sub
cld
daa
xor
cmpsb
fwait
dec
dec
xchg
push
les
roll
cmpsl
pop
cltd
psubusw
pop
dec
cmp
xchg
ja
clc
push
mov
cmp
jae
jo
dec
or
lret
push
jmp
in
dec
push
orb
das
pop
sbb
ljmpw
xor
jmp
push
lods
inc
sbb
fbld
iret
pop
dec
inc
or
ret
xchg
out
int
andb
loope
pop
ds
jnp
popa
ficompl
add
adc
xchg
pop
dec
lods
sub
testb
popa
cltd
xor
nop
xchg
inc
cmp
mov
inc
mov
lret
notl
arpl
testb
pusha
mov
mov
add
in
mov
orb
pop
jo
cld
insb
out
jg
or
push
sahf
jp
and
lcall
test
int3
mov
lcall
add
inc
jns
pushf
mov
mov
mov
lds
smsw
out
sub
jo
add
mov
push
add
js
lea
cmc
adc
shrl
lret
push
lcall
jb
scas
pop
stc
dec
out
out
scas
out
std
repz
jno
mov
lcall
or
scas
cwtl
dec
mov
sti
pop
dec
mov
stos
xchg
out
out
cmp
xlat
jnp
mov
or
jbe
push
jl
mov
sbb
and
imul
ljmp
mov
cmp
inc
dec
bound
dec
fwait
mov
pop
pop
std
sub
imul
popf
add
cmp
scas
fisttps
mov
mulb
push
mov
inc
in
and
cmpl
jmp
lret
sbb
sub
and
in
sub
xor
pop
addr16
icebp
and
xchg
lea
and
jnp
loop
icebp
jno
inc
push
jge
cmp
arpl
es
jle
inc
pop
sbb
mov
xor
jns
inc
dec
and
mov
dec
add
pop
cmp
jo
ds
aad
mov
outsb
cmp
test
sub
cltd
daa
xchg
cld
inc
jge
testb
cmp
dec
xor
push
ret
sbb
scas
pop
or
pusha
sbb
add
imul
and
int3
jbe
lods
mov
xor
xor
ljmp
jbe
fwait
pop
push
aam
stc
scas
cmp
pop
and
int3
pop
ret
add
test
das
mov
mov
cmp
xor
pop
push
push
gs
pop
mov
adc
lcall
inc
jns
add
xchg
jmp
push
cli
ret
jb
xchg
lahf
ljmp
stos
mov
sub
xchg
test
addr16
cmp
lret
mov
pop
mov
fistl
and
xor
imul
xor
dec
daa
sbb
cmc
cmpsb
push
aad
pushf
add
add
stos
and
adc
fcomi
rcr
jg
in
pop
cmpsl
sarb
sub
push
mov
and
arpl
xchg
sbb
inc
add
cs
or
fmul
mov
aad
negl
inc
cs
and
pop
dec
mov
cmp
adc
xor
xchg
std
mov
arpl
dec
inc
push
mov
or
pop
mov
sbb
or
pop
mov
lods
push
bound
xchg
ret
xchg
cli
xchg
ror
idiv
dec
pop
clc
cmp
test
inc
je
iret
aam
sbb
iret
cmp
xorb
dec
sub
inc
sbb
scas
out
rol
sti
mov
scas
arpl
jmp
or
dec
or
jno
xor
sub
pop
daa
negl
rorl
mov
cmpsl
int3
lahf
ja
clc
movsl
ljmp
imul
fisubs
pop
jno
adc
or
mov
jp
jle
mov
jmp
das
and
frstor
stos
jl
js
pop
movsb
clc
loope
pop
pop
fistl
xor
fisttps
sbb
stos
inc
or
sub
pushf
test
imul
adc
cwtl
inc
loopne
sti
in
pop
stc
xor
testb
outsb
xchg
outsl
mov
ja
ret
add
xor
cli
sahf
in
cld
mov
lahf
inc
mov
pop
outsb
test
xchg
mov
cmp
inc
out
addr16
mov
push
and
pop
pop
lcall
xchg
lock
xor
sub
cmc
aaa
arpl
out
cmp
pop
adc
sub
add
ss
insl
mov
bound
cwtl
pop
fisubl
cltd
inc
jno
jb
or
mov
pop
jge
pusha
cs
inc
enter
mov
mov
out
jb
jge
jns
stos
movsb
sub
addr16
fimuls
xor
jns
jp
pop
sub
outsb
mov
jp
xor
and
hlt
push
aas
std
cwtl
adc
jmp
orb
and
leave
aam
jmp
sbb
xchg
add
mov
sub
mov
or
pop
fsts
xor
enter
jl
int
mov
jno
aaa
outsb
ficomps
lret
or
dec
sar
xchg
pop
aam
inc
xchg
adc
stos
mov
stos
outsb
xor
scas
mov
es
cmp
sub
les
xchg
mov
pop
dec
orb
mov
mov
je
loopne
mov
mov
jl
sar
dec
cs
fsts
les
add
jae
rcr
stc
xchg
jmp
int
inc
sbb
pop
pop
xchg
test
mov
cmp
lock
out
ja
sub
push
adc
or
mov
mov
xor
daa
jge
jp
enter
xor
sbb
aam
fdivs
call
and
fsubrs
test
shlb
ss
mov
aaa
pop
outsl
daa
inc
stc
inc
ret
dec
xor
push
aam
jbe
dec
mov
dec
fidivs
arpl
adc
sbb
test
add
cmpb
mov
adc
shlb
inc
lock
incb
scas
test
in
fcmovu
clc
sbb
mov
pop
sbb
or
lret
jns
xor
rcrb
or
std
jnp
xor
sti
loopne
call
arpl
mov
insb
mov
mov
push
or
stc
call
add
mov
movsb
sbb
sub
mov
repz
lcall
bound
and
mov
popf
push
push
dec
fsubrl
enter
in
sarb
lahf
in
dec
cs
cli
fcomps
ja
add
or
in
dec
inc
imul
jge
cld
lret
outsb
push
lcall
inc
dec
sbb
lcall
push
les
dec
push
loope
mov
xchg
cld
scas
data16
mov
fcomps
xchg
xchg
fimuls
sub
scas
cltd
push
or
nop
sbb
fcmovnbe
outsl
insl
pop
out
mov
or
xorl
pop
sbb
xchg
push
xchg
into
stos
mov
fidivl
gs
cmp
push
inc
mov
icebp
and
jno
cmc
stos
call
shlb
jp
sbb
or
call
out
mov
xlat
pushf
vpshufhw
mov
ret
push
repz
je
adc
jnp
fsubrp
imul
lahf
cmc
push
andb
aaa
xor
ds
ljmp
aas
mov
mov
dec
mov
mov
je
mov
out
scas
xchg
je
jle
or
popa
int
push
mov
push
xor
out
jge
stos
jecxz
adc
and
jns
bound
ret
out
xchg
rcll
xor
aam
adc
xchg
inc
fisubrs
mov
lret
mov
and
loop
aaa
clc
sub
data16
adc
push
or
ss
inc
mov
js
js
sti
and
mov
and
scas
add
dec
clc
sti
or
cli
push
popa
or
popf
jmp
mov
mulb
dec
mov
adcb
push
lock
fs
ja
mov
adc
icebp
sub
or
jne
fxch
lods
sbb
adc
adc
insb
inc
jp
xchg
mov
in
movsl
sub
xchg
ret
xchg
shl
push
daa
mov
lods
inc
sbb
arpl
mov
mov
cld
ret
dec
test
ret
mov
mov
lds
add
in
push
inc
addl
jg
lods
xchg
xor
push
jg
imul
push
sbb
jle
dec
loope
inc
decl
inc
sub
out
inc
ret
stc
sbb
in
mov
test
addr16
xor
outsl
imulb
sarb
and
pop
rcll
iret
movl
addr16
ja
cmpb
xlat
test
push
pop
cmp
add
lock
mov
lock
xchg
lret
hlt
lods
xlat
xor
pushf
inc
sub
clc
cltd
ja
push
aad
ret
js
dec
mov
sbb
repz
push
fwait
fwait
test
xor
sbb
data16
jp
in
mov
mov
in
imul
inc
loope,pn
lret
lods
jp
and
mov
test
aad
and
and
fsubs
jp
je
aaa
sbb
jge
pop
sub
arpl
fnstenv
mov
mov
test
sarl
ds
dec
fwait
lods
and
clc
pop
xchg
adc
lahf
push
push
test
icebp
into
pusha
xchg
clc
pop
push
adc
and
psubq
or
push
xchg
mov
stos
je
jge
das
lock
daa
bnd
addr16
or
cmp
out
out
mov
dec
outsb
xor
js
mov
stc
in
repz
std
pop
jmp
scas
daa
dec
sbb
popa
and
or
arpl
lods
pop
mov
cmp
repnz
xor
out
dec
inc
xor
inc
cmp
mov
adc
out
xchg
inc
clc
out
imul
xor
aam
pop
repz
sbb
shrb
cmp
xchg
pop
adc
shll
pop
jne
mov
push
cmpsb
imul
sub
add
mov
cmp
push
addr16
push
leave
sub
lock
push
mov
int
jnp
scas
xor
movsl
inc
fmul
cmp
push
sub
dec
xchg
ret
push
xchg
mov
lods
hlt
pop
cmpsb
fiadds
hlt
rorb
stc
dec
ljmp
mov
jl
into
mov
add
lahf
pop
push
out
adc
int3
das
ret
fidivs
sahf
sbbb
mov
scas
dec
jmp
sub
sub
dec
out
mov
mov
mov
adc
mov
xor
push
sti
dec
fidivl
insb
dec
jns
xchg
push
popa
lcall
dec
scas
leave
sub
mov
ret
arpl
sub
or
inc
sbb
rorl
adc
rorl
repnz
push
movsb
pop
ficoms
mov
jecxz
push
mov
ss
stos
icebp
jge
mov
ja
dec
stc
pop
adc
jg
dec
mov
mov
dec
push
and
aam
hlt
sbb
inc
scas
pop
dec
movsb
movb
and
dec
push
scas
sbb
mov
sar
test
sub
inc
lret
ret
lret
push
andb
outsl
aad
and
or
jl
loope
cld
call
cmpsl
ds
jp
add
gs
mov
loope
adc
xchg
fsubrl
or
mov
shll
out
movsl
dec
enter
and
dec
fcoml
rorl
fidivrs
push
stc
xchg
subb
mov
push
aam
call
cmc
jae
dec
sahf
ret
loope
insb
cmc
ja
push
sbb
scas
adc
mov
cmc
cmpsl
out
mov
ficomps
loopne
mov
test
adc
sbb
outsl
das
insl
adc
sbb
xchg
inc
push
sbb
jle
gs
shlb
fcomip
cwtl
jno
into
leave
jmp
dec
stos
lret
cwtl
inc
out
cmp
mov
hlt
aas
adc
or
fldl
fnstcw
test
fisttpl
test
push
sbb
dec
dec
jp
mov
filds
ret
es
push
fdiv
sub
mov
jbe
test
mov
test
add
or
sub
mov
sbb
add
jb
or
adc
popf
in
dec
popf
pop
lret
out
fiaddl
inc
mov
cs
xor
jle
sub
xlat
and
mov
sbb
push
pop
es
bound
mov
scas
push
js
divl
mov
rcr
insl
inc
int3
icebp
mov
and
push
push
loopne
jnp
outsb
inc
es
xchg
out
xor
testb
sbb
mov
pop
jg
cmp
nop
push
pop
dec
sbbb
adc
test
stc
std
ror
outsb
mov
jp
repnz
sarl
cmpsl
inc
imul
jge
and
sbb
push
jne
rep
push
cmp
jmp
ficoml
dec
int3
jb
cmp
xor
xchg
cs
bound
cld
or
xor
mov
mov
cmp
cmp
test
mov
and
mov
cmp
iret
pop
xor
fisttpl
in
int3
xchg
pop
loope
adc
cmp
cli
stos
xchg
call
pop
ljmp
lods
mov
test
add
lods
inc
push
xor
in
pusha
push
std
movsl
cltd
call
mov
pop
iret
cwtl
cmpsl
rcrb
xchg
push
or
int
mov
out
fdivrl
inc
cmp
xchg
scas
xor
and
xor
int
sbb
sbb
mov
popf
lods
scas
xor
push
std
add
pop
add
aad
mov
fwait
movsb
imul
xor
test
add
inc
or
icebp
dec
jb
jp
cmpsb
pop
inc
in
rclb
pop
fbstp
scas
jne
movsb
ds
inc
xchg
loope
imul
mov
xor
adcb
movd
mov
loopne
xchg
popa
xchg
mov
dec
mov
sbb
out
pop
cmp
cwtl
hlt
jmp
sti
mov
out
std
mov
jno
out
push
add
pop
fstpt
aam
ret
sub
mov
test
pop
test
icebp
out
call
verw
push
and
cmp
xlat
push
hlt
mov
push
pusha
icebp
bound
mov
push
jnp
sbb
add
pop
ja
cmp
in
push
add
sahf
mov
push
sub
mov
pop
and
adc
lret
push
jp
pop
xlat
out
inc
dec
push
nop
xchg
dec
fmul
fdivrs
and
or
es
sbb
mov
js
out
sarl
or
push
mov
aad
addr16
pop
sub
xchg
sahf
int
das
mov
jns
dec
mov
inc
lcall
or
xor
ja
cltd
cmp
inc
dec
stc
out
and
sti
jb
or
icebp
nop
mov
add
shl
popf
cld
ss
dec
or
push
fcompl
loopne
sbb
in
shll
sub
ror
out
fs
sbb
push
adc
leave
les
es
push
jl
sub
dec
and
js
ffreep
pop
loop
int3
iret
stc
imul
mov
clc
xchg
les
lahf
shl
ljmp
xchg
daa
add
jbe
mov
rcrb
fldcw
testb
sub
orl
and
push
js
or
pusha
jno
ds
mov
jge
notb
call
cmp
xchg
add
inc
xorl
out
and
aaa
clc
dec
and
fs
fsts
and
movsl
and
push
std
or
push
and
mov
sub
pop
mov
das
aam
in
jo
call
inc
js
or
in
pop
pusha
fwait
sti
ljmp
fildl
dec
adc
sbb
and
sbb
int
dec
cld
xchg
jmp
ret
test
cmp
mov
sbb
out
stos
pushf
inc
add
inc
cltd
nop
xchg
mov
jg
xchg
xor
cltd
mov
pop
ja
pop
ja
fsts
jl
std
jle
ffreep
arpl
mov
fisttps
in
push
pop
xchg
mov
push
xchg
sbb
lcall
loop
sbb
dec
test
mov
or
push
dec
jle
jl
push
insb
jbe
jl
and
sbb
in
pop
fmull
das
ret
push
gs
pop
inc
dec
insl
pop
je
or
jmp
fs
dec
andb
cmp
fwait
or
push
jo
fistl
mov
cwtl
sub
push
aas
jecxz
cmpsb
fdivrs
push
outsl
mov
add
mov
pusha
in
aad
sti
push
nop
ljmp
adc
push
xor
jns
fwait
or
cmp
xor
into
and
push
mov
xchg
jnp
and
cmp
inc
pusha
sbb
popf
jle
xchg
fwait
hlt
cmp
lret
jecxz
rcr
jae
addr16
ret
mov
fstp
fdivl
mov
inc
mov
xchg
imul
or
dec
adc
pusha
jecxz
jle
imul
cmp
aad
ret
bnd
mov
test
lahf
xchg
adcl
and
lods
cmp
das
repz
pop
aas
sub
fidivrs
sub
adc
lock
jns
pop
jbe
sbb
aaa
lret
ss
inc
xor
mov
inc
add
cmp
cmp
jl
push
dec
neg
cli
popf
std
and
rolb
or
rolb
xchg
dec
pushf
arpl
fistpll
adcl
push
je
jge
ds
mov
pop
cpuid
jno
mov
xlat
scas
jmp
xchg
pop
aad
stos
imul
sarl
mov
pop
and
push
repnz
shlb
or
out
mov
insb
lret
mov
adc
frndint
mov
mov
sbb
test
mov
gs
fs
jg
xor
sbb
sub
outsb
lds
mov
leave
sbb
loope
test
jecxz
cmp
xchg
add
jns
nop
addl
loop
stos
or
push
push
addr16
sub
aad
jle
inc
mov
push
jl
cmp
pushf
cmc
jp
ja
adc
xchg
cwtl
pop
lds
push
push
dec
pop
jecxz
mov
in
ja
es
fldl
pop
dec
xor
ds
int3
cmpsb
add
mov
xor
sbb
inc
mov
cwtl
mov
jae
pop
loopne
or
xchg
jmp
sbb
leave
push
mov
jecxz
mov
loop
jae
sbb
sbb
cmp
xor
ja
xchg
into
cmp
push
leave
cmp
imul
pop
ret
mov
jge
out
push
subl
mov
adcl
cmp
std
je
sysexit
fisubl
mov
cmp
xor
movsl
std
lock
adc
sub
test
and
sti
mov
leave
imul
mov
xchg
mov
or
aas
ja
adc
jb
scas
add
lret
mov
sbb
aas
int3
xchg
dec
pop
test
mov
jg
lods
pop
push
jno
js
cmp
leave
or
js,pt
sub
std
aad
test
xchg
hlt
mov
or
je
push
dec
mov
js
jge
xor
pop
mov
add
dec
ss
and
in
dec
jb
fs
loop
dec
jnp
stos
sub
dec
mov
int3
push
jb
inc
imul
xor
or
sarl
add
aam
dec
mov
push
push
adc
imul
mov
jbe
xchg
enter
das
dec
jecxz
push
mov
or
imul
pop
adc
enter
jg
cmp
fs
movsb
mov
popa
jp
and
into
add
les
repz
dec
mov
cmp
add
fcompp
mov
and
daa
rorl
imul
cld
xchg
or
xor
ret
push
pmulhw
in
je
add
xlat
sub
xchg
leave
and
push
cmp
add
and
mov
jb
sarl
sti
mov
jge
arpl
sahf
shrl
popa
ret
cmp
sbb
lret
iret
mov
and
push
hlt
xchg
adc
lret
dec
mov
push
or
jno
insb
into
ficoml
mov
sbb
pop
stc
aam
lds
push
xchg
xor
hlt
stc
test
scas
dec
je
push
int3
rcll
mov
add
inc
ss
out
dec
jns
xchg
cmpsl
jecxz
loope
popa
adcb
or
adc
call
clc
js
mov
test
adc
cwtl
jp
ljmp
out
and
xchg
push
or
cmp
xor
popf
mov
and
jl
pop
and
and
fldln2
xor
rcrl
stc
dec
hlt
ds
or
sahf
mov
not
lahf
lock
cmpsl
cltd
jne
mov
test
and
call
lock
fcompl
jns
pop
push
xor
sub
or
dec
insb
in
aam
in
dec
stc
pop
push
xor
stos
adc
push
pop
xor
sbb
outsl
mov
lret
push
pop
mov
or
inc
push
mov
outsb
stos
sbb
insl
xchg
subb
out
add
xlat
subl
cmpb
movsl
pushf
push
jbe
push
fwait
cmpl
mov
jmp
mov
lods
cmpsl
push
int3
push
loope
rorb
rclb
adc
cwtl
cmpsl
dec
pop
adc
fistps
addb
les
mov
xchg
popf
mov
inc
cltd
sbb
outsb
sahf
lock
inc
mov
inc
or
push
sbb
adc
ret
xchg
std
mov
cli
pop
inc
add
adc
icebp
dec
rolb
mov
popa
mov
lods
stc
and
test
lock
vcvtpd2dqy
mov
cld
es
gs
or
movl
or
fisubrl
leave
int
mov
add
enter
shl
fdivs
addr16
pop
dec
adc
cmpsb
and
xchg
fwait
add
push
push
dec
mov
gs
add
arpl
aam
rolb
sbb
cmp
clc
sub
push
loop
daa
repz
and
pop
imul
loope
test
icebp
jb
std
lods
push
insb
mov
push
push
test
test
hlt
cmpsb
movsb
fs
adc
sub
xor
fsts
sub
fidivrs
mov
shld
or
cltd
lea
outsb
mov
sbb
ret
add
push
push
sbbb
pop
inc
nop
ror
cmp
fcomps
test
jb
add
hlt
shrb
push
mov
push
push
nop
push
mov
aad
std
sbb
xchg
lods
pop
mov
shlb
jnp
out
push
lds
cmp
mov
and
imul
mov
rcll
lahf
daa
pop
jmp
jge
dec
jp
ret
ja
inc
mov
gs
pushf
xor
icebp
cmp
int
add
push
lea
sti
insb
pop
xchg
ljmp
dec
pop
sub
in
loop
rcl
in
sub
push
inc
cwtl
xchg
sub
pop
ficoms
aam
mov
jns
test
shl
mov
push
js
mov
xchg
sbb
inc
push
mov
js
mov
xor
mov
sbb
rol
push
mov
adc
sti
in
lea
xchg
leave
cld
add
lret
xchg
adc
inc
daa
sahf
rol
sbb
adcb
pop
mov
adc
and
mov
pop
out
mov
imul
out
sbb
pop
int
dec
pop
inc
pmuludq
and
mov
je
test
loope
pop
rclb
pop
and
cmp
push
imul
xchg
rcr
mov
add
in
inc
adc
inc
mov
and
cwtl
data16
and
hlt
imul
mov
icebp
lcall
cmp
push
shr
out
mov
pushf
test
aad
cli
stos
xor
icebp
xor
and
arpl
xor
scas
das
das
frstpm(287
lahf
in
pop
push
push
mov
xchg
out
sti
pop
inc
shlb
pushf
mov
fldt
insl
scas
ficompl
ljmp
test
push
ret
push
mov
stos
ret
inc
outsl
inc
mov
mov
shlb
pop
mov
fisubs
add
jge
popa
dec
popa
mov
jns
mov
or
testb
enter
popa
fcmovu
xor
shrl
add
mov
jge
fdiv
adc
in
sbb
std
sub
sahf
push
outsb
or
pushf
cmp
dec
pop
into
insb
repz
mov
scas
subb
xchg
adc
sahf
notl
or
fs
mov
mov
sbb
or
in
call
push
xlat
xor
repz
push
sbb
outsb
mov
cmpsb
int
or
movsb
mov
mov
iret
cmp
mov
inc
fisttps
push
test
insb
je
ds
xor
push
or
mov
adc
cltd
cmpsl
cmp
add
movsl
inc
nop
inc
mov
inc
and
gs
mov
xchg
sub
pop
lods
mov
call
jge
mov
loop
lcall
push
rol
dec
fcmovb
dec
dec
movsl
test
push
jle
cmpsb
sub
inc
xor
popa
sub
and
xlat
mov
xchg
xor
add
icebp
pop
ficompl
add
mov
pop
aam
js
sahf
stc
dec
or
add
push
and
mov
sbb
popa
sub
inc
mov
mov
mov
dec
cmpsl
cltd
sbb
vmovntps
push
sub
std
jbe
pop
int3
and
mov
mov
aas
addr16
sbb
dec
cmpl
pop
xchg
mov
shrb
jg
loop
xchg
pop
xchg
xor
xchg
push
mov
sub
int3
pop
pop
icebp
and
mov
fcoml
adc
enter
scas
mov
add
cmpsl
adc
arpl
adcb
inc
xor
mov
cwtl
dec
enter
mov
testl
mov
pop
loope
add
xor
cmp
mov
jbe
xchg
lahf
jo
xchg
leave
xor
dec
in
pop
pop
aaa
push
inc
ret
adc
imulb
dec
mov
je
push
insl
outsb
push
in
dec
cmc
or
call
jnp
sub
cwtl
push
dec
mov
cmp
or
addb
cmp
mov
nop
rcll
fwait
sub
xor
mov
or
jns
xchg
mov
pop
ja
mov
push
pop
lods
pop
in
mov
adc
and
lds
dec
out
lea
inc
dec
inc
push
pop
mov
mov
add
ret
scas
dec
lea
shlb
cmp
or
fidivl
clc
push
adc
mov
pop
xor
loopne
adc
cmp
out
stos
push
shll
stos
pushf
js
sbb
pop
or
repz
nop
xchg
roll
xor
jmp
cld
sub
gs
mov
lock
pop
push
stc
cmp
pop
gs
jne
or
xor
lods
in
mov
repz
pop
push
sub
mov
nop
jp
or
data16
xchg
xor
nop
gs
push
lock
fsubrp
inc
mov
pusha
mov
out
or
jns
je
push
or
push
testl
sbb
pop
stos
pop
inc
test
mov
leave
pop
iret
out
mov
scas
xor
add
mov
jg
adc
xchg
js
and
imulb
xchg
or
xchg
movsl
cli
ret
addr16
mov
xor
fsubrp
sbb
iret
fisttpll
xchg
jecxz
mov
adc
mov
addr16
popa
outsb
push
or
dec
stos
sbb
popf
cmp
int
cmp
push
adc
mov
test
stc
insb
or
sub
mov
cmp
xor
jle
out
mov
dec
fldlg2
push
ss
enter
fmuls
ret
out
dec
push
mov
pop
sub
cli
and
inc
das
cmovns
les
bts
and
in
ret
dec
pop
lds
dec
and
cmp
cmpsl
adc
sbb
and
push
cwtl
sbb
arpl
fidivrl
push
cwtl
sbb
push
sbb
jecxz
in
nop
pop
xor
out
pop
rcll
sub
das
xchg
xor
jo
inc
js
ret
pop
sub
and
sbb
jmp
roll
xchg
subl
divl
pop
pop
imul
push
push
fidivrs
out
jg
cmp
adc
adc
cmp
xor
lea
rcrb
aas
inc
push
add
jge
dec
dec
add
fcmovne
loop
adc
add
sub
scas
movsl
jl
movsl
pop
fcomps
lea
popa
inc
sub
out
dec
cli
pop
loop
insl
mov
dec
enter
cmp
aam
adc
notl
push
cs
inc
jecxz
sarl
xchg
imul
add
mov
aas
loopne
add
inc
dec
test
ja
insl
jbe
adc
hlt
pop
iret
test
fsubr
jg
inc
mov
popf
pop
mov
xor
or
sbb
fs
repnz
adc
add
fstl
mov
sbb
xchg
jmp
push
xor
dec
and
in
and
xchg
mov
add
mov
das
push
add
in
sbb
push
mov
mov
xor
fwait
mov
movsb
jmp
and
cmpb
mov
add
scas
int3
rclb
das
in
out
adc
mov
cmp
stos
test
cmp
adc
fistpl
daa
stos
cwtl
cmpsb
fsubs
bnd
xor
dec
shrb
adc
jle
js
jne
fisttps
push
mov
and
mov
mov
cmp
pop
add
iret
xor
and
ret
lret
mov
cmp
add
mov
sub
pop
cmc
hlt
jns
mov
in
je
cmp
mov
scas
mov
lret
scas
sbb
dec
mov
adcb
cltd
sti
dec
jge
test
sbb
pop
in
dec
sahf
cs
mov
xor
sub
es
lea
adc
adc
adc
pop
dec
mov
jne
shll
das
shl
addr16
mov
mov
cltd
das
aaa
test
imul
shlb
ljmp
test
push
pop
cli
and
in
and
ljmp
cs
nop
int3
jl
incl
and
mov
sub
jae
inc
push
lcall
add
test
pop
in
xchg
cmove
cwtl
sti
test
push
loope
mov
mull
add
adc
addr16
or
aam
adcb
push
mov
lods
and
sbb
push
in
dec
pusha
hlt
fdivrs
sub
or
arpl
pop
in
stos
testl
xor
aam
inc
flds
dec
mov
cmpsb
push
adc
subb
push
and
add
inc
movsb
rcrb
mov
mov
fldlg2
enter
jno
loopne
outsb
ljmp
xchg
aas
and
call
loope
ret
call
push
push
xchg
mov
in
lcall
inc
adc
das
inc
xor
xchg
pop
aad
fisttpll
or
mov
loopne
stos
push
jnp
sarl
movsb
push
pop
leave
or
les
sub
inc
pop
repz
ds
mov
pushf
icebp
mov
stos
push
mov
popa
pop
add
lcall
push
jo
xor
mov
mull
ror
cmp
push
sub
adc
mov
pop
mov
outsb
dec
jg
add
out
jge
xor
xor
xorl
jns
mov
shl
test
jo
int
pushf
test
shll
pop
fildl
cmc
flds
mov
and
loope
aas
loopne
xchg
stos
gs
sbb
xlat
or
pop
adc
mov
cmc
push
pop
stos
outsb
cltd
and
jecxz
add
mov
shll
enter
lcall
inc
popf
ds
jne
jbe
arpl
sahf
into
mov
in
adc
icebp
paddsw
push
add
fldenv
adc
int3
aam
cmp
test
std
jg
adc
add
mov
stos
pop
push
test
push
lcall
xor
pusha
xchg
fwait
rol
push
jbe
xchg
mov
lock
push
xchg
dec
rcll
sbb
lret
xchg
add
sbb
stc
cmp
push
decl
inc
mov
or
call
pusha
aaa
pop
daa
test
dec
call
rcl
in
push
mov
inc
mov
add
add
test
jbe
push
loop
jle
sub
insl
push
or
out
xor
xor
cmp
xor
fs
in
pop
int
push
xor
outsb
fmuls
and
aam
mov
fcoms
push
adc
mov
push
adc
out
lahf
mov
jge
jmp
mov
jg
incb
pop
je
and
adc
jle
aaa
lock
rorb
xorb
into
xchg
pop
jae
push
push
fsubl
xlat
cmc
pop
jp
rcrb
mov
push
ret
mov
add
int
in
iret
ja
or
jno
cwtl
xchg
add
jp
dec
push
test
mov
xchg
imul
bts
pusha
lods
ficoml
mov
stc
sub
insl
push
int3
cwtl
mov
push
cmp
sbb
cmp
stos
lods
fstpl
cmpsl
sub
mov
sbb
adc
int
pop
jg
xchg
dec
mov
dec
mov
sub
cmc
ret
push
es
out
ljmp
sub
adc
dec
pop
ja
cld
jge
xchg
and
sbb
es
adc
sar
xchg
pop
cmp
adc
sub
lret
mov
cli
stos
xlat
pop
dec
add
pop
leave
scas
pop
scas
lds
or
jbe
inc
stos
push
xor
mov
test
adc
dec
push
dec
jns
nop
and
mov
adc
movsl
dec
jno
dec
xchg
adc
fs
divl
inc
xchg
cmc
xor
imul
das
xchg
shll
mov
js
jp
add
lahf
push
arpl
and
sbb
mov
fisubl
ljmp
sbb
enter
jmp
push
push
push
in
jns
jmp
push
jnp
fdivs
jmp
sbb
cmp
xorl
cli
add
ret
push
sbb
dec
arpl
fwait
lock
mov
mov
mov
mov
xor
fcmovnbe
sub
pusha
cli
inc
xchg
sbb
jo
jne
sub
jno
jmp
jecxz
in
stc
sbb
xchg
sub
inc
out
in
inc
jb
inc
es
icebp
std
int
test
insl
pop
into
stos
jmp
repnz
push
sti
js
mov
xorb
jecxz
mov
mov
test
jne
lret
fsubrs
std
or
jnp
movsb
add
call
xor
ret
adc
mov
cmpsb
mov
pop
enter
or
lods
push
int
cld
or
call
ret
out
jp
xor
fnstenv
nop
lcall
push
filds
rol
xchg
mov
xchg
push
xor
or
cld
push
in
cmpsb
mov
jecxz
ret
xchg
or
cld
ficompl
xchg
cmp
hlt
orb
sub
jg
jbe
mov
cmp
push
sub
stos
xor
pop
test
rcll
in
jge
sub
add
cmpsb
jno
rolb
es
lods
dec
daa
scas
sahf
mov
lods
and
sbb
outsb
mov
dec
push
mov
movsl
cmc
xor
mov
cmp
inc
cmpsl
dec
fwait
xor
mov
adc
mov
enter
sahf
jle
sub
pop
decl
int3
and
jecxz
xorb
std
pop
int3
test
and
pop
ljmp
push
addl
cmc
sub
dec
insb
add
xchg
iret
je
decb
jg
shlb
int
cmp
bound
test
stc
ret
lock
lret
cwtl
mov
pop
js
es
js
and
lret
lods
scas
or
data16
adc
push
popf
repz
cmc
inc
sbb
cltd
out
mov
lea
test
stos
mov
lahf
out
xchg
inc
sub
jb
leave
popf
pop
in
adc
hlt
int3
lods
mov
xor
sahf
fiadds
or
dec
push
gs
add
mov
mov
adcb
adc
adc
push
jp
test
or
addb
or
push
pop
mov
adc
inc
sub
adc
shll
xchg
enter
movsl
sub
and
xchg
jl
pop
lea
out
and
jo
fs
std
mov
xor
rol
ja
dec
push
sbb
lock
outsl
mov
cwtl
mov
cs
jmp
fstl
fwait
data16
jb
jge
cwtl
movsb
and
push
adc
push
and
mov
roll
cmp
add
movsb
mov
pop
imul
lods
dec
jg
aam
test
scas
pusha
sub
mov
jmp
push
iret
lahf
mov
ds
es
lea
lock
sub
mov
dec
adc
hlt
fistpl
adc
jmp
pop
iret
push
stos
imull
sbb
jl
arpl
xchg
mov
mov
sbb
call
mov
and
lahf
adc
sbb
ficompl
addr16
push
clc
stos
cmp
addr16
ret
daa
cmp
in
xchg
push
mov
fbld
cmp
sub
and
and
rcrl
jge
into
pop
and
xchg
fnstsw
or
ljmp
pop
mov
adc
cltd
aad
sbb
dec
insb
sahf
pusha
push
cs
mov
ds
fcom
dec
mov
sbb
jne
and
lods
add
bound
int
cmpsl
xchg
lods
add
cmp
mov
repz
outsb
jle
loope
push
dec
cmp
push
aaa
pop
out
cmp
pop
and
sbb
and
xchg
pop
repnz
push
cld
add
or
dec
xor
mov
mov
mov
loop
js
or
cmp
sub
sub
divl
test
hlt
push
or
out
mov
xchg
mov
cmp
loopne
dec
in
das
sub
xchg
test
jae
hlt
ret
cmp
sbb
call
jl
xor
lds
scas
pop
mov
lcall
pushf
cmp
decb
mov
pop
jne
movsl
repnz
xor
popa
xchg
test
loop
pop
and
xchg
into
xor
inc
cld
popf
mov
inc
mov
fs
pop
sub
pushl
pop
jecxz
push
subb
cmp
jbe
mov
inc
xorps
arpl
stc
jmp
insb
push
pop
rol
inc
xchg
push
jno
outsl
or
inc
cmp
jmp
loopne
adc
inc
ret
shll
add
aaa
mov
or
xchg
out
aam
test
nop
add
leave
sbb
repnz
mov
cmp
ja
mov
cmp
scas
sub
stc
neg
mov
and
sti
les
cwtl
pop
add
stc
or
mov
pop
rcrl
shlb
push
push
inc
xchg
leave
outsl
int3
mov
mov
ret
cmp
repnz
add
sti
jecxz
xchg
push
jo
sar
pop
push
dec
pop
jo
and
add
pop
lret
clc
cmpsb
xchg
mull
jnp
sub
repz
sbb
mov
cld
lock
xchg
nop
scas
push
adc
mov
cwtl
rol
mov
lods
xor
arpl
out
pop
pop
shl
js
les
cmpsb
add
add
lret
push
or
fsts
pop
push
je
inc
call
fdivrs
push
jmp
scas
xlat
xchg
dec
stos
daa
lods
daa
push
popa
inc
das
or
jmp
ficomps
in
cmp
push
dec
mov
or
add
jge
ror
and
xchg
aam
push
cs
and
sub
scas
jnp
jnp
dec
sti
adc
pop
lcall
movb
clc
jae
mov
jl
or
sub
fcoms
or
mov
rep
pusha
das
pop
xor
add
stos
repz
in
lea
and
mov
xchg
xor
jl
and
cltd
mov
call
inc
push
xchg
pop
adc
cmpsb
mov
jb
hlt
or
cmp
xchg
jno
dec
xor
xchg
hlt
inc
inc
dec
and
inc
test
xchg
imul
push
sbb
repz
loop
mov
lds
daa
cmp
sbb
sbb
sahf
mov
sbbl
xchg
dec
adc
dec
mov
ficompl
jmp
sbb
cmp
mov
lret
inc
inc
jl
or
pop
jo
jmp
shl
lds
cmc
xchg
loop
dec
or
loopne
ljmp
bound
lods
int
jae
mov
insl
test
call
xorl
push
imul
mov
mov
test
icebp
movsb
jecxz
rorl
pushf
mov
inc
xchg
pop
jne
mov
fistps
nop
mov
imul
aam
iret
and
jae
movsl
scas
imul
lcall
fsubl
mov
inc
sub
clc
cld
push
jo
mov
pop
rcl
xor
iret
je
xchg
mov
fsubp
push
xchg
jecxz
fnstenv
int
or
mov
dec
and
insl
cmc
ficompl
js
cmp
inc
jo
jb
sub
andb
inc
loope
ficoms
aam
mov
lods
testb
es
adc
ss
fisubs
mov
imul
xor
cmp
dec
mov
hlt
mov
push
mov
in
scas
out
fisttpl
jb
and
jae
cltd
std
xchg
pop
jg
mov
inc
movsb
dec
sub
lret
addb
and
cmp
mov
adc
leave
or
push
mov
pop
jo
xchg
push
cmp
push
add
sub
jbe
jo
rol
shrb
cmp
jle
push
lods
mov
adc
in
lret
or
ficoml
rorl
jne
clc
jmp
dec
xor
leave
cmpsl
and
in
shrl
mov
rclb
push
dec
inc
es
xchg
jns
pushl
jno
std
dec
je
rorb
add
data16
imul
adc
in
pop
loop
dec
or
sub
cmp
pop
mov
cmp
sbb
cli
push
rolb
add
idivl
push
fcmovnbe
sub
jmp
popa
test
push
sti
mov
es
cmp
lock
lret
ss
outsb
xor
pop
jb
std
mov
arpl
mov
lods
cmp
adc
or
out
fisubrs
les
jo
add
sbb
jo
sub
popa
and
rcrl
sub
or
sub
mov
lock
sbb
cmp
jg
sub
xlat
lods
loop
lahf
fisubrl
or
adc
sbb
mov
adc
std
mov
leave
imul
add
imul
shlb
push
xchg
ja
xchg
dec
pop
shr
mov
push
push
cld
mov
ja
addl
xchg
sbb
ds
add
push
fstps
add
test
dec
fimull
loop
and
mov
and
decb
cmp
push
xchg
pop
add
mov
into
adc
xor
jb
ljmp
xchg
push
push
add
ja,pt
aad
and
lret
nop
xchg
xchg
and
jnp
add
dec
out
sub
xor
sbb
xchg
and
insb
jne
jb
jg
or
add
mov
fsubrs
and
xchg
mov
push
rolb
and
std
out
int3
adc
movsl
hlt
int
pop
and
mov
pop
call
or
dec
les
lret
into
ljmp
xor
into
cmc
mov
leave
cmp
mov
sbb
jl
les
push
cmpsl
jp
sbb
mov
int
jmp
ss
out
dec
stos
aaa
mov
xchg
xor
movb
add
ss
cmc
pop
mov
lock
xchg
or
pop
cmp
xor
mov
repz
adc
out
cmpsb
mov
neg
pop
addr16
cs
cmp
xchg
push
outsb
inc
mov
fnsave
pop
xchg
mov
mov
fcompl
out
mov
inc
sub
inc
je
in
stos
loop
fidivrl
xor
sub
das
sbb
xor
pop
add
mov
out
scas
mov
sahf
and
fisubrs
dec
mov
dec
mov
lds
mov
call
and
movsb
xchg
pop
sub
rol
arpl
sub
dec
outsl
push
scas
jmp
test
aas
imul
sub
fld
mov
cmp
adc
movsl
adc
out
push
and
repnz
push
aad
push
popf
stos
jmp
popf
mov
mov
outsb
gs
xor
mov
subb
jg
sti
push
es
push
dec
test
pop
mov
mov
les
xlat
mov
sti
and
inc
in
sub
push
std
pop
add
push
pop
mov
or
fnstsw
in
out
dec
mov
push
sbb
sbb
out
and
mov
push
sbb
push
popf
lock
jmp
andl
push
xor
mov
push
xor
ss
das
mov
jae
fidivrs
scas
and
shlb
mov
xchg
loopne
out
mov
lds
repnz
mov
orb
xor
jmp
inc
jl
iret
mov
lock
xor
jmp
or
jbe
mov
xor
push
xor
out
push
add
push
xchg
fcomip
ret
push
inc
sub
pop
lods
xchg
popa
in
xor
call
push
pop
add
inc
cmp
adc
push
xchg
loope
add
scas
psubd
out
call
mov
imul
mov
xor
sarb
mov
sbb
fs
stos
xchg
dec
int3
stos
dec
dec
fdivrl
jbe
sub
jge
mov
daa
jo
ljmp
xor
nop
mov
test
shll
mov
popf
sub
addb
in
or
fists
shll
mov
xchg
fisubrs
or
adc
mov
cs
aas
or
adc
out
leave
repz
push
cmpsb
rep
dec
sbb
cmp
inc
push
insl
test
in
lods
mov
and
jne
loopne
add
ljmp
push
stos
bound
xchg
adc
neg
test
pop
adc
arpl
jmp
aam
mov
pushf
push
testb
or
sbb
inc
sub
icebp
jae
insb
and
pushf
push
ds
imul
stc
xchg
out
aaa
sbb
test
mov
movsb
xchg
les
adc
push
leave
loope
in
pop
cmp
lock
rcl
stos
adc
cwtl
or
test
fistl
into
xchg
jns
mov
lods
mov
jge
pop
loope
inc
sub
dec
add
mov
pop
insb
xchg
and
fldenv
mov
nop
sub
fistps
roll
adc
aad
lret
out
and
sti
dec
sub
shll
mov
fdivrl
dec
ss
pusha
xchg
popf
fnsave
jecxz
js
inc
lea
pop
inc
lahf
push
pop
or
xor
inc
inc
cmpsl
adc
dec
xchg
xor
add
cmp
dec
jns
repz
push
jne
adc
mov
jge
mov
mov
mov
mov
mov
pop
mov
inc
cmpsl
xor
loop
lret
mov
push
call
xchg
adcl
pop
cld
sub
getsec
mov
lcall
das
repz
push
pushf
fwait
outsl
mov
stos
or
xor
jno
mov
ds
mov
call
shlb
mov
sub
inc
inc
fsubrl
je
outsb
or
push
es
nop
lods
pop
push
fcos
jmp
hlt
xor
jb
mov
lods
dec
dec
xor
cmp
mov
inc
add
jl
pushf
loop
lret
or
movsb
and
adcl
push
sub
dec
movsb
lahf
movsl
dec
ficomps
mov
cld
andl
pop
add
cmp
int3
rcrb
xor
mov
mov
in
sub
sbb
cltd
mov
loopne
into
inc
jne
mov
jl
fmulp
scas
popf
mov
xchg
mov
cmp
mov
fiaddl
call
in
sbb
inc
cmp
sub
adc
xlat
mov
xorl
lret
test
inc
cmpsl
in
jb
cmc
ss
pop
adc
adc
ret
lcall
and
es
ljmp
push
mov
test
and
cmp
into
xchg
mov
dec
aas
test
inc
sub
and
icebp
insl
pop
int3
loope
dec
aas
mov
out
sar
mov
rorb
push
and
das
sbb
outsl
dec
rclb
push
arpl
ja
scas
xor
jle
adc
inc
cli
and
mov
shll
scas
adc
adc
mov
fiaddl
pop
scas
in
test
dec
push
xchg
cmpsb
sti
dec
movsl
aas
aas
inc
lock
xchg
xorb
push
and
add
enter
xor
out
fbld
pushf
jg
icebp
cmpsb
outsl
jbe
push
push
clc
or
dec
in
cmc
imul
and
mov
sahf
sub
sbb
xchg
stc
into
insb
mov
test
shr
add
pusha
insl
out
mov
loop
jge
loope
out
ret
sub
lcall
lret
and
mov
cli
fstpl
aam
pop
stos
inc
arpl
orb
sub
pop
pop
repz
movq
mov
cs
mov
adc
enter
rol
adc
push
insl
jg
enter
cld
xor
or
sub
jo
fists
xchg
inc
xchg
sub
out
sbb
push
jae
xchg
fstpl
mov
push
cmpsb
out
xchg
sar
and
push
xorb
clc
adc
arpl
jge
mov
imul
add
push
jl
mov
jno
aas
cmp
mov
nop
lret
insb
xchg
pop
scas
js
bswap
add
push
sbb
push
pop
inc
and
xor
or
pusha
dec
mov
inc
fmul
adc
orb
movsb
sub
push
push
aas
adc
adc
inc
inc
mov
push
inc
xchg
lret
js
test
adc
push
test
dec
mov
lds
dec
jge
jg
arpl
push
es
push
stos
fcomps
subb
add
dec
sub
je
mov
fcmove
test
mov
add
pop
inc
in
pop
orb
jne
jbe
pop
jmp
push
dec
xor
mov
push
lahf
jmp
jne
xchg
das
mov
in
dec
rol
adc
mov
jns
clc
jae
push
xor
push
ljmp
in
dec
lea
test
jg
js
imul
add
fidivrs
cli
test
pop
mov
jne
jl
mov
daa
imul
or
add
and
push
cli
jmp
xchg
lcall
bound
or
mov
sbb
push
dec
push
or
mov
int3
insb
dec
loopne
mov
pop
pop
jl
fildll
inc
popf
mov
mov
dec
repnz
cmp
add
std
sbb
sbb
cli
fdivr
inc
imul
loopne
add
adc
mov
dec
insl
pop
lock
add
push
add
jns
sbb
leave
imul
aad
mov
scas
and
mov
mov
repz
dec
add
jbe
gs
test
xchg
push
pop
or
xchg
sub
push
lahf
movsb
adc
lret
xor
movsb
jns
and
sub
pop
loopne
inc
ljmp
pushf
pop
or
xor
mov
mov
cmp
mov
xor
cltd
xchg
fsubs
push
stc
add
test
push
jns
insl
push
imul
pop
jge
pusha
cmp
sub
add
popa
mov
push
and
imul
ljmp
mov
loope
push
pop
ljmp
out
int
roll
jno
ds
popf
test
cld
in
dec
xchg
icebp
mov
dec
and
sub
cmp
sbb
xchg
ret
daa
imul
jecxz,pn
adc
push
jl
push
lock
inc
aam
and
call
xlat
in
jl
adc
lods
mov
fsin
cs
adc
int3
dec
pop
mov
sbb
sub
into
xchg
cmp
repz
cmc
imull
jo
fwait
push
and
mov
jo
mov
lods
enter
ds
push
mov
or
adcl
inc
dec
xchg
push
and
movsb
add
add
scas
xlat
outsl
out
xor
mov
popf
adc
rolb
push
xchg
js
push
add
je
push
jecxz
pop
cmc
test
sti
cmp
js
xor
or
xor
hlt
ret
jo
xor
faddl
ss
iret
loopne
popa
ds
pop
daa
out
ja
out
loopne
mov
mov
clc
mov
mov
das
gs
shlb
and
shrl
loopne
cmp
in
adc
add
out
cwtl
push
cmp
ds
jl
xchg
sub
daa
outsb
stc
test
and
ret
inc
test
sbb
pop
roll
inc
or
mov
inc
mov
cmp
jb
push
lock
adc
adc
rorl
add
pusha
aam
iret
testl
out
jns
push
xor
dec
or
jle
push
push
movsl
js
stos
pop
mov
add
int
push
push
push
jae
jno
dec
outsb
int
sbb
inc
pop
cmp
push
cltd
orb
jno
or
xchg
xchg
outsb
fcomps
mov
les
sbb
inc
sbb
insb
adc
and
dec
mov
ret
data16
mov
add
mov
mov
jp
bound
dec
inc
fstpl
cmp
push
cmpsl
push
cwtl
lahf
pop
movsl
stos
ficomps
mov
mov
xchg
fcmovne
push
sti
lahf
mov
or
shr
sub
and
dec
jbe
push
test
jmp
or
lds
cmp
pop
addr16
arpl
es
inc
mov
jecxz
mov
add
roll
sbb
mov
lret
cmc
and
leave
mov
xor
stos
inc
mov
repz
fildl
out
and
mov
lds
pop
in
adc
adc
cmp
sbb
mov
sub
mov
popf
mov
add
inc
pop
sbb
adc
xor
push
mov
mov
sti
outsl
mov
mov
fcmovne
fcompl
fstl
push
cmp
cwtl
bound
leave
add
dec
outsl
sbb
fcom
push
mov
cmp
and
xor
dec
cmp
and
dec
hlt
cmp
cmp
fs
jecxz
add
push
scas
and
dec
push
cmp
adc
mov
enter
xor
cmp
ds
sbb
mov
or
xor
mov
cs
mov
xchg
or
call
sub
mov
dec
mov
mov
xlat
pop
out
cmp
jno
int
popa
xor
gs
cmp
adc
enter
push
adc
popa
and
xor
movsb
clc
cltd
aam
orb
test
xor
inc
pushf
pop
sub
lahf
pop
gs
or
adcb
mov
aas
inc
inc
cmp
andl
fmull
dec
loope
sbb
xchg
outsb
clc
jo
out
add
ret
mov
sub
pop
fcomp
cwtl
test
add
outsl
inc
out
pop
outsl
fmul
push
inc
push
mov
push
je
inc
cmp
aam
cmc
rcrb
scas
test
adc
aam
xchg
fdivl
push
sbb
js
inc
mov
sub
push
adc
ficompl
xchg
cmc
sub
hlt
rorb
gs
lods
mov
push
out
jae
repz
imul
mov
xor
xchg
cli
xchg
fldl
mov
add
xchg
pop
xchg
xchg
mov
je
xor
cld
cld
xchg
cmpsb
ret
in
clc
idivb
dec
popa
mov
stos
insl
or
negl
cmp
and
push
lahf
xchg
xchg
pushf
cmp
test
int3
pop
outsl
cmp
scas
add
and
cltd
sub
push
loop
sub
dec
mov
adc
sqrtps
sbb
cmp
fdiv
fs
imul
mov
lahf
mov
jae
cmc
mov
pop
out
and
jg
sub
das
xchg
pop
add
inc
jno
lock
outsb
add
adc
loopne
aam
fbstp
out
mov
xchg
popl
xchg
loop
into
les
push
mov
jge
and
jno
fmulp
dec
lods
adc
xchg
scas
cmp
dec
pop
addr16
lods
out
cmc
les
inc
scas
cmpsb
jnp
fidivl
cs
mov
jo
scas
adc
jecxz
mov
sarb
add
pop
test
andl
jo
lock
jmp
mov
pop
cmp
xor
xor
and
push
movsl
pop
lock
xchg
js
lock
xchg
mov
pop
jecxz
sub
mov
push
call
mov
test
cli
loope,pn
fldl
das
pusha
or
popa
mov
inc
cmp
icebp
cmp
jp
push
cld
pop
nop
push
aam
pusha
xor
loope
fists
inc
xor
jbe
ds
adc
aaa
shl
push
lahf
loope
pop
push
fsub
and
mov
mov
mov
push
dec
in
dec
repnz
jg
sbb
xor
es
sbb
push
pop
push
movsb
iret
sbb
mov
leave
cmp
add
shl
jae
xchg
push
scas
dec
sub
inc
mov
popa
idivl
jae
mov
les
mov
sub
mov
add
mov
mov
jmp
loop
aas
sbb
cmp
cmc
push
sub
rcll
lea
mov
jnp
jecxz
and
push
lcall
pop
insl
mov
outsb
and
inc
mov
out
jg
cmp
aas
sahf
push
cmp
in
xchg
mov
scas
or
mov
lea
mov
inc
scas
mov
iret
popf
xchg
and
leave
ja
mov
mov
pop
outsb
fnstenv
leave
jecxz
jl
jg
adcb
fs
dec
dec
xor
pop
jl
mov
in
and
fstl
das
dec
fldcw
outsl
cmpsl
movsb
arpl
sbb
push
mov
add
repz
xor
add
xor
inc
movsb
mov
adc
ss
call
insb
ss
or
es
sbb
test
xchg
ljmp
rorl
sub
or
ds
sub
lret
pop
stos
xchg
xchg
and
push
fmull
mov
jge,pt
sbb
lock
pop
ret
lcall
sub
inc
inc
aaa
std
push
ljmp
in
push
jge
out
and
in
or
out
cmpsl
add
cmp
adc
mov
hlt
dec
divb
inc
addr16
mov
xchg
push
sahf
idivb
ds
in
lock
mov
push
mov
loope
imul
xor
lret
push
dec
adc
call
xchg
push
cmpsb
jle
xchg
mov
xchg
push
movsl
js
aas
outsl
or
inc
stos
inc
in
jge
popf
in
push
enter
cmp
fcoms
shll
fwait
jle
xchg
pop
adc
and
fmull
jno
scas
sahf
push
sbb
nop
mov
or
xchg
lcall
mov
mov
out
cs
push
ret
aas
xor
test
xchg
inc
test
jmp
test
test
pop
cmp
dec
lret
test
sub
test
sbb
aad
mov
or
aam
or
test
push
bound
insl
mov
out
enter
out
lahf
fisubs
pop
add
sub
loope
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
jnp
pop
ret
or
mov
mov
xchg
pop
shlb
lock
es
or
hlt
out
rolb
jge
into
xor
mov
out
or
xlat
mov
bound
int
or
jne
pop
and
push
cmp
movsb
mov
push
jmp
stos
rorb
repnz
andb
cmc
cmp
std
xchg
rol
orl
jmp
jae
cmp
ds
or
mov
mov
jmp
xor
or
in
mov
pop
and
or
scas
lock
push
push
leave
or
sbb
push
adc
push
lds
or
mov
imul
cwtl
jno
cld
loope
xor
cltd
add
pop
call
loopne
jl
xchg
pop
jo
stos
fwait
push
repnz
movsb
cltd
je
mov
push
sti
call
sub
in
sbb
pop
orl
xchg
lods
les
or
sub
mov
ficomps
test
add
imul
daa
jno
sahf
cwtl
sahf
repz
or
aad
out
inc
bound
and
mov
push
fwait
cmp
mov
add
add
dec
dec
es
mov
sbb
jmp
and
or
xor
or
ds
arpl
xor
xor
aam
lret
adc
fdivr
fildl
mov
je,pn
dec
sti
push
add
and
jg
out
sbb
sub
xchg
inc
mov
xchg
insb
fidivl
jl
mov
sub
push
mov
inc
call
lds
aaa
pop
daa
ljmp
sbb
and
xor
jne
dec
gs
into
stos
sbb
push
sub
dec
lcall
mov
sub
xor
jbe
xor
dec
mov
lret
sti
push
mov
pusha
aas
xor
ss
adcl
cli
sahf
popf
pop
movsb
push
mov
sub
adc
gs
icebp
hlt
cwtl
mov
lretw
in
pop
fwait
clc
mov
data16
rcrl
cmp
dec
roll
test
cmp
pusha
pushf
fsubrs
addr16
add
sbb
in
mov
leave
stos
push
std
push
movsl
sbb
add
push
inc
sahf
pop
adc
push
push
mov
inc
xor
insb
xacquire
test
and
xchg
ds
push
stos
push
int3
lods
or
leave
pop
test
popf
sub
adc
mov
es
jmp
in
and
dec
mov
lods
es
fwait
jns
lret
mov
mov
repnz
sbb
out
gs
and
adc
push
inc
dec
stos
jno
loop
and
inc
and
sarb
sti
outsb
daa
pop
stc
xlat
lods
mov
sub
mov
mov
enter
pop
jb
mov
sti
int3
addl
ljmp
jns
into
rdpmc
add
mov
int3
mov
pop
sbb
iret
dec
sti
inc
adc
lea
push
mov
fnstenv
mov
jge
push
jns
sbb
pop
test
mov
cli
ret
orl
or
add
mov
inc
and
sahf
fildl
pop
xor
pop
negl
xchg
ficoml
pusha
test
xlat
je
lock
das
xor
mov
inc
xor
daa
aaa
and
adc
and
repz
inc
int3
roll
sub
ds
test
pop
mov
and
inc
cmp
aaa
fldt
lods
les
int3
lock
pop
pop
and
push
arpl
out
fwait
push
jnp
push
lahf
je
loop
or
lock
out
adc
das
inc
daa
dec
or
xchg
aaa
adc
xor
xorb
push
addr16
sbb
adc
lahf
int3
call
movsb
sbb
adc
push
mov
loopne
fdivrl
aas
jecxz
outsb
sub
inc
cld
ror
stos
dec
movsl
aam
dec
pop
push
jb
jno
je
xor
push
test
sahf
dec
push
mov
out
repz
clc
add
dec
repz
repnz
mov
cmp
insl
cmp
loopne
add
mov
sub
add
push
mov
xor
lock
cltd
jne
mov
scas
mov
nop
push
shrl
add
add
cmp
je
out
pop
jno
sub
mov
lcall
test
pop
fimull
call
push
jmp
outsb
push
xchg
jl
stos
mov
cmp
cmp
test
xchg
push
movsl
iret
pop
xchg
into
into
out
xchg
in
xorb
mov
cmp
out
push
bound
or
sub
call
sbb
test
sub
fsubl
sbb
jbe
inc
or
mov
inc
clc
sub
fistl
jnp
outsb
negl
mov
insl
jg
pop
add
scas
mov
or
mov
and
mov
pushf
gs
pop
inc
daa
dec
mov
out
mov
in
mov
mov
loop
insl
arpl
dec
mov
xor
pop
mov
mov
pop
fistpll
orl
push
lods
ljmp
lret
sbb
bsf
mov
sbb
xchg
filds
xor
adc
es
test
fwait
push
icebp
push
test
pop
or
pmaxub
test
iret
je
lea
push
bound
nop
test
sti
push
je
movsl
faddl
ret
dec
jae
insl
loop
mov
cmp
or
cmp
push
ror
lret
dec
roll
call
ds
jle
out
jge
inc
fwait
iret
lcall
mov
stos
push
mov
call
inc
imul
dec
and
inc
sti
or
dec
xor
xchg
add
adc
cmp
jge
cmpsb
and
fisubl
push
sub
pop
mov
adc
pop
movsl
push
xor
aaa
fcompl
push
gs
in
cmpsb
dec
testl
push
push
mov
add
adc
mov
push
sub
test
cmp
dec
ffree
pop
fucomi
dec
jp
jno
mov
repnz
das
jno
mov
out
push
push
push
xor
mov
jg
mov
add
add
out
cs
js
xchg
add
mov
cltd
in
jne
das
or
enter
pop
jl
dec
jae
xchg
ret
negb
cltd
or
mov
ds
push
aad
lahf
test
repz
test
cmp
sbb
add
pushf
repnz
sub
pop
adc
mov
test
mov
sahf
insl
in
sbb
inc
mov
sub
jb
mov
popf
popa
inc
cmp
cmp
mov
pop
jge
hlt
fs
xor
imul
pop
or
or
cwtl
js
icebp
lea
out
jns
out
pop
adc
inc
jmp
mov
cmp
and
adc
pop
push
mov
mov
insl
repz
out
daa
cltd
pop
mov
xchg
xchg
push
push
or
push
ds
adcl
pop
xchg
popa
pop
sub
gs
dec
or
push
pop
fstpl
fs
push
adc
mov
cmp
dec
clc
enter
mov
jnp
mov
or
xor
xchg
pop
xchg
mov
orb
and
dec
nop
dec
push
adc
out
adc
add
test
mov
fcoml
or
pop
adc
or
repnz
out
int
mov
lahf
cmp
shll
ret
movsl
mov
mov
sbb
adc
in
xchg
arpl
mov
fdivrp
dec
lret
incb
push
jmp
mov
jle
aam
jmp
imul
mov
mov
popf
cmp
mov
or
push
mov
cli
into
mov
cmp
jg
scas
mov
fisubs
bound
adc
sbb
lcall
mov
push
push
fs
pusha
in
in
xor
mov
pop
pop
mov
push
jbe
lock
daa
das
hlt
leave
cwtl
push
call
add
fdivs
dec
je
outsl
rcll
xchg
das
jne
std
mov
lahf
insb
stos
pop
or
out
std
pushf
inc
hlt
push
stos
mov
imul
or
cmp
xchg
clc
push
xchg
out
adc
mov
xchg
repnz
and
sub
sbb
out
sub
rorl
fstpl
xlat
xchg
jo
adc
xchg
push
xor
lods
and
dec
cwtl
pop
aad
ficoms
fisubs
mov
fnstenv
and
fwait
in
fwait
adc
cmp
bound
inc
cwtl
daa
sbb
dec
adc
fwait
mov
push
clc
mov
rcrl
imul
arpl
or
fiaddl
fwait
and
ret
sar
aam
addr16
push
fisubrs
cmc
mov
stos
mov
movsl
or
loope
pop
fstpt
into
cmp
push
out
orl
jg
adc
add
xchg
repz
and
cmc
jae
mov
push
imul
mov
mov
inc
imul
or
dec
mov
ret
adc
lock
imul
sahf
pop
fcmovnu
jmp
js
insb
push
repz
mov
mov
repz
mov
rcr
inc
cmp
adc
mov
aas
mov
cmpl
ds
ret
orb
loope
test
imul
stc
lods
test
call
sub
leave
flds
ret
outsb
and
or
pop
cmpsl
or
inc
xor
test
mov
sbb
insb
add
fidivl
cmp
aam
sub
mov
adc
loopne
sub
test
call
movsb
cmpb
sub
mov
jp
cld
leave
loope
imul
cmp
lahf
stc
jno
cmp
or
pop
addr16
sbbb
or
dec
mov
or
jmp
mov
insb
ss
lock
sub
in
fsubs
lcall
push
mov
test
dec
inc
and
or
in
pop
pop
or
add
sbb
imul
or
movl
fsub
clc
lahf
add
mov
into
cmp
mov
test
in
test
mov
das
xchg
scas
cwtl
shll
hlt
cmp
pop
aad
cmp
dec
dec
mov
pop
iret
sbb
jg
insl
sub
push
cwtl
stos
andl
mov
adc
adc
lods
out
mov
xchg
cld
rdpmc
jmp
fnstsw
orl
cmp
outsb
enter
fists
out
movsb
sti
jle
pop
sub
loope
out
fsubp
outsl
dec
ss
mov
pop
into
mov
fmuls
je
sub
aas
cmc
pop
mov
out
sub
or
sbb
fs
stc
loopne
idivl
xchg
ss
insl
or
push
adc
in
dec
push
jns
cs
mov
leave
push
xchg
fstps
push
dec
icebp
call
and
into
arpl
imul
fcomps
xchg
xchg
inc
stos
jecxz
ja
jl
mov
sbb
adc
std
sub
adcl
loop
push
sbb
inc
repz
mov
fcmovnb
jecxz
dec
and
push
adc
in
dec
add
push
inc
insb
popf
mov
aam
fdiv
outsb
loope
mov
sub
mov
mov
in
jne
dec
or
mov
roll
adc
push
ss
add
insl
fimuls
subb
mov
dec
or
sti
vmaxsd
lret
lods
add
mov
push
out
inc
pop
mov
ror
xchg
call
stos
scas
roll
lcall
push
outsb
push
sbb
push
pop
std
adc
pop
cmp
add
icebp
jecxz
imul
icebp
mov
inc
andb
sub
daa
push
js
sub
addr16
pushf
inc
sbb
and
sub
lock
sub
pop
sahf
mov
sarl
jns
ret
adc
imul
aas
out
outsl
xchg
iret
mov
inc
cmpsb
or
out
insb
and
lahf
movb
push
and
jbe
sbb
mov
and
lock
xor
push
aad
xchg
loopne
es
iret
and
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
mov
add
mov
