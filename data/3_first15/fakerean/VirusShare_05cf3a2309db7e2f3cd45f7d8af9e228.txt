sbb
add
mov
div
and
push
fistpl
bound
in
inc
insl
push
lods
dec
fwait
add
xlat
jecxz
pop
pop
add
xchg
fiaddl
inc
pushf
xchg
jecxz
pop
cmc
enter
vxorps
fsubl
stc
add
lds
rcr
scas
and
push
or
push
scas
jno
pop
push
mov
shr
pop
pushf
jp
xor
in
jg
xor
jecxz
loopne
jl
icebp
add
sub
mov
sahf
scas
inc
xor
pusha
sbb
out
dec
sub
arpl
and
ret
dec
add
sti
cmp
pop
cmp
out
and
mov
sub
add
sub
jo
pop
cli
mov
inc
lods
je
std
mov
push
loop
call
test
std
rcl
pop
rol
mov
dec
addr16
push
xor
xchg
inc
inc
mov
aaa
insb
pop
add
or
mov
leave
sbb
call
insb
mov
lods
or
mov
mov
iret
loopne
jecxz
mov
cmp
aaa
xor
fadds
mov
add
push
pop
pop
dec
xor
into
aam
mov
das
push
add
cmc
outsl
inc
dec
shll
inc
pop
inc
and
push
xor
xor
push
int
inc
fmuls
scas
cltd
add
enter
cli
cmp
ret
xor
aad
scas
push
xchg
hlt
mov
jo
xchg
scas
dec
sub
xor
dec
jl
adc
sub
int
push
sbb
repz
repz
out
cmpsb
popa
inc
loop
mov
dec
cmp
add
pop
popf
or
shlb
mov
int3
mov
jae
das
add
xorb
xchg
lods
repz
sub
in
adc
inc
cltd
sbb
pop
repnz
fs
jns
xorb
iret
in
add
inc
jns
jmp
lods
enter
es
xchg
or
sub
mov
sbb
divl
push
fs
adc
idivb
xchg
push
sbb
ljmp
ds
mov
mov
cs
inc
inc
test
dec
jp
aas
sti
jmp
jg
dec
push
push
xor
xor
sbb
repz
into
lret
rorl
movsb
adc
or
ja
or
adc
sahf
push
push
mov
adc
mov
xchg
lret
mov
shlb
jp
fsubr
add
and
sbb
mov
mov
inc
popf
subb
iret
decb
lret
and
or
xor
push
adc
imul
pop
inc
stos
and
and
fnstsw
mov
push
mov
sbb
mov
aad
fimuls
int3
gs
jae
dec
pop
dec
xor
test
pop
mov
sbb
xchg
push
outsb
cltd
repnz
mov
mov
lret
lret
test
rclb
imul
ja
mov
sbb
mov
cmp
ret
or
mov
lret
int3
dec
pop
sub
jmp
data16
mov
in
cmp
enter
pop
mov
mov
pop
mov
or
ret
sub
adc
gs
lret
sbb
pusha
mov
dec
xor
adcb
sub
in
sub
aaa
stos
inc
das
fwait
stos
and
xor
out
pushf
add
lcall
sub
ja
loope
inc
inc
inc
bound
and
or
cs
es
movsl
xchg
sbbb
js
sarb
cmp
cmp
cli
mov
mov
xchg
sbb
or
icebp
pop
in
test
nop
movsl
xchg
inc
adc
lea
push
jo
mov
cmpsl
loopne
lea
inc
sti
inc
mov
fldenv
push
cmp
jno
fwait
movsb
test
xchg
shrb
or
mov
les
popf
or
sbb
scas
cmp
ror
sbb
es
scas
pushf
cmp
sbb
inc
aam
xor
sbb
pop
call
push
push
movsb
mov
push
adc
clc
call
dec
insb
pop
outsb
xchg
jl
lds
mov
ret
aaa
add
divb
ljmp
stc
xchg
add
xchg
subb
push
stos
xchg
or
pop
add
cmp
loope
je
movsl
inc
outsl
mov
sahf
mov
pushf
mov
pop
scas
nop
push
hlt
pop
iret
sbb
sbbl
sub
mov
je
jle
lret
addr16
imul
cld
jl
sub
lret
pop
sub
cwtd
inc
clc
popa
pop
dec
push
cmp
ljmp
adc
push
sti
and
cmp
mov
pop
mov
movsb
push
push
push
xor
add
xchg
out
xor
add
and
movsb
test
stc
inc
hlt
jns
fists
sarl
in
xchg
push
xor
popa
std
outsb
sahf
mov
and
out
sbb
jp
jp
sub
push
dec
mov
test
mov
aam
test
fs
insb
in
shlb
roll
jg
jb
lods
sub
inc
pop
dec
cltd
dec
xchg
roll
call
cwtl
sub
cmp
movsl
sbb
movsl
lock
int
cmp
sub
sbb
add
jnp
lret
test
gs
or
fldcw
or
inc
ds
xchg
push
mov
dec
xchg
hlt
mov
xchg
js
jno
pop
cmp
js
loop
xor
jbe
pushf
mov
out
or
test
dec
xor
mov
ret
and
cmp
add
outsb
and
out
push
movsl
rol
lock
and
es
sub
xor
and
inc
fmul
add
adc
mov
popa
adc
subb
push
mov
aas
cltd
jns
push
icebp
pusha
divb
testl
xchg
mov
in
add
push
sahf
dec
xor
sub
adc
fisttps
push
jecxz
sbb
jle
push
lods
loop
sarl
rcrl
or
imul
lock
std
ljmp
inc
add
xor
xlat
dec
mov
push
adc
push
shll
jge
dec
loopne
or
es
push
cmp
iret
inc
xlat
test
sbb
cmpsb
pop
dec
and
in
dec
jp
imul
mov
xor
lret
xor
lds
adc
in
sub
gs
push
inc
jg
pop
add
and
inc
xchg
xchg
je
sti
dec
mov
shlb
cld
cmp
arpl
mov
enter
xchg
cmp
popa
push
mov
mov
bound
push
mov
test
hlt
xor
dec
insb
imul
fdiv
jge
shll
push
leave
lcall
lea
pop
inc
mov
dec
inc
pop
inc
arpl
rcrb
jg
xchg
mov
cs
or
cmp
mov
sub
or
les
dec
and
popf
les
cmp
dec
add
jmp
into
pop
jbe
push
stos
outsl
out
lods
pop
sbb
push
mov
mov
notb
adc
scas
pop
test
and
cmpsb
jae
xchg
adc
mov
sbb
and
lea
lahf
mov
inc
push
sbb
adc
sub
int3
es
or
mov
mov
xor
sub
xchg
jp
mov
lea
enter
aaa
das
cli
adc
jmp
jg
push
into
mov
inc
pop
mov
in
pop
inc
add
mov
addr16
sbb
cli
pop
cmp
sbb
mov
xor
das
cmpsb
mov
pop
inc
hlt
jmp
dec
and
cmp
xchg
pop
int
mov
inc
and
repz
cmp
cmp
add
pop
adc
leave
sahf
fnstcw
push
js
xor
pusha
je
jns
aaa
fs
cld
cmpsl
dec
pop
sub
fidivrs
cmpsl
shll
pop
test
clc
sbb
shl
cmp
sub
aam
pop
jmp
wbinvd
cs
push
imul
sub
jne
push
and
or
jnp
les
xchg
lods
dec
call
dec
adc
xor
and
mov
pop
adc
out
sub
in
jmp
pusha
xor
or
cld
loopne
xor
dec
mov
or
xchg
fs
rol
pop
pop
jp
pop
or
or
add
sti
lods
test
jmp
ficoms
outsb
dec
cmp
shl
and
repnz
adc
push
int
out
xchg
arpl
cmp
popf
popa
jle
fidivl
add
loop
js
enter
sub
fimuls
inc
pop
jbe
bound
xchg
jge
jg
cmpsl
mov
fisubl
inc
inc
ret
sbb
mov
sbb
lret
sbb
arpl
adc
cmpsb
mov
push
or
push
add
fists
lahf
in
mov
xchg
hlt
rclb
xor
and
in
insb
les
les
cmpsb
repz
popa
ss
push
mov
inc
stos
mov
mov
sbb
std
hlt
or
fistps
add
and
repz
push
or
cmp
pop
push
mov
and
mov
sbb
imul
inc
push
lret
insl
xor
push
push
jle
mov
dec
xchg
sub
cmp
fdivrl
mov
bound
mov
popf
xor
jo
mov
or
test
stc
dec
or
jbe
mov
pop
xor
testb
lcall
fistl
fildl
jg
int3
jb
ret
cmp
jg
mov
cmpsl
sarl
insl
filds
test
data16
cmpsb
fsubs
mov
mov
fisubl
jg
shl
loope
mov
and
loop
lods
in
lods
jne
cs
push
and
pop
inc
cltd
jl
nop
xor
dec
shl
adcb
shl
jnp
pop
lock
dec
test
orl
decb
pop
shrl
movsb
in
pop
fcomi
sub
adc
fbld
inc
test
jae
push
lock
nop
test
cwtl
aaa
movb
ret
push
and
add
cmp
js
fcoml
jo
pop
loop
mov
pop
test
push
je
and
fdivrs
gs
mov
push
rclb
jmp
pop
xchg
insb
mov
mov
push
jnp
cvttps2pi
sbb
pop
aad
push
and
rolb
inc
ret
mov
test
lahf
and
scas
mov
arpl
pop
jne
dec
int3
mov
pushf
lcall
dec
insb
ljmp
sbb
mov
adc
cmp
and
fildll
stos
mov
mov
inc
add
inc
mov
aas
inc
nop
insl
cmc
sbb
je
daa
jl
stc
mov
movsl
popa
pop
mov
sub
cmp
xor
dec
add
jle
orb
ljmp
dec
dec
pop
sub
push
xchg
add
test
rcrl
xor
add
add
jmp
ja
and
stc
mov
pop
pop
in
js
mov
xchg
call
orl
sub
fnsave
aas
mov
jge
inc
pop
aaa
or
lret
js
hlt
mov
rcrb
mov
popf
inc
dec
jno
xorb
cmp
lock
out
in
in
fnstsw
dec
mov
cmpsl
call
mov
pop
stc
mov
movsl
pop
sub
and
jne
fsubrl
jae
leave
fdivrl
push
pop
aad
mov
test
mov
fmuls
das
lods
ficomps
aam
into
aam
fwait
jle
aad
sti
mov
andnps
stc
sti
fidivs
je
xchg
add
dec
test
cmp
push
cmp
and
fmuls
sub
xlat
hlt
and
sub
jae
aas
xor
sahf
push
mov
jecxz
lock
rclb
icebp
mov
icebp
lahf
sbb
in
or
mov
int3
add
add
cli
mov
inc
and
mov
or
rcrl
in
add
xchg
jae
in
push
mov
je
mov
sbb
int
xchg
and
nop
nop
inc
or
imul
outsb
movsb
clc
bound
imul
cmp
in
push
pop
mov
adc
movsl
lcall
sbb
sub
jns
in
test
pop
adc
dec
push
shlb
mov
or
inc
inc
sbb
stos
test
xlat
rclb
addr16
pusha
shll
mov
lahf
das
insl
jmp
rorb
pop
lods
es
mov
mov
cmp
sbb
mov
pusha
push
inc
imul
mov
aam
jmp
mov
arpl
xlat
int3
mov
cs
repnz
incl
push
out
lret
sarl
sub
pushl
orl
addr16
lea
xor
in
test
cmp
mov
leave
xchg
jle
inc
jg
hlt
dec
ljmp
push
cmpsl
mov
mov
test
jo
outsl
lds
add
mov
mov
outsb
nop
iret
mov
push
fcmovnu
loopne
insl
inc
pop
fistpll
sub
xor
outsb
push
enterw
test
jle
xchg
dec
mov
orb
dec
fcoms
aad
stc
out
daa
dec
or
and
fmul
imul
out
test
in
dec
jnp
test
mov
sbb
push
test
push
pop
pop
repnz
gs
outsb
xor
jbe
insl
shrl
loope
mov
push
xor
cmc
mov
push
cmp
pop
cmpsl
mov
xchg
fisttpll
mov
push
xor
mov
xor
pop
lret
sbb
mov
adc
cmp
pop
ljmp
fldl
mov
push
mov
leave
pop
lret
mov
popf
into
fnstcw
xor
sub
sbb
mov
push
cmp
xor
cmc
cmc
in
stc
sbb
pushf
out
sarl
push
fcmove
sbb
mov
test
pop
mov
add
test
lahf
lcall
stos
sbb
lods
jecxz
xchg
scas
es
mov
jg
pop
push
jl
inc
outsl
enter
jns
mov
int3
or
sub
in
inc
inc
fstpl
sar
push
jecxz
inc
dec
mov
lods
int
inc
out
xchg
test
push
and
add
sub
and
xchg
lahf
jbe
jno
clc
and
or
lret
and
aaa
pop
arpl
cmp
pop
jmp
lea
mov
mov
sub
xor
int
ror
mov
push
orl
ljmp
sbb
and
fdivr
jg
loop
leave
int
mov
cmp
filds
mov
jbe
leave
out
xchg
inc
pop
mov
cmp
mov
cmc
cmp
fsubrs
aas
or
dec
mov
push
stos
xchg
cld
xchg
pop
pop
inc
aaa
insb
jnp
repnz
sbb
mov
jae
movsl
pop
jno
imul
cmp
inc
out
push
add
dec
mov
push
in
sbb
mov
sub
mov
scas
mov
adc
push
out
mov
adc
test
std
loopne
pusha
bound
cmp
xchg
leave
add
cwtl
btr
xchg
icebp
and
add
mov
push
cld
xlat
aas
pop
xor
mov
rclb
push
xlat
cmp
add
xor
popf
pop
sub
loopne
xor
mov
xchg
mov
push
dec
jle
and
adc
fs
inc
sbbb
xor
xorl
pop
and
jnp
push
sbb
jmp
add
out
scas
aam
lock
aaa
das
sbb
mov
jne
or
dec
sbb
maskmovq
divl
mov
popa
out
mov
hlt
int
mov
dec
sub
cltd
sar
rcll
aaa
jns
call
std
repz
mov
sub
enter
stos
cmp
mov
inc
and
mov
ljmp
pop
add
test
or
aas
sub
inc
adc
imul
std
mov
dec
mov
fnstcw
cli
mov
test
lock
jns
dec
push
leave
or
push
jo
aad
test
xchg
ds
movsl
popf
shlb
inc
movb
sbb
mov
sbb
push
jae
mov
and
leave
sbb
stc
insb
out
jbe
jle
cmp
fimull
xchg
push
fdivrs
xchg
dec
xchg
mov
out
pop
dec
mov
mov
jp
pop
sub
addb
xchg
and
ds
and
scas
popf
das
sarb
push
fistpll
adc
dec
push
outsl
test
xor
inc
push
sub
fildll
xchg
rorl
add
or
and
pop
xor
xor
xchg
add
jbe
pop
add
sub
and
jno
push
rorl
test
push
ret
in
in
fistl
sub
push
mov
lret
mov
mov
out
sbb
push
repnz
fistpl
or
mov
push
adc
mov
lea
rorb
lods
inc
xchg
mov
adc
negb
repnz
and
inc
cmp
add
and
popa
mov
adc
imul
inc
mov
add
repz
rol
or
out
addps
sbb
xchg
or
sub
push
add
fs
cld
dec
imul
push
or
mov
xchg
enter
mov
xchg
jo
int
or
jp
xor
stos
js
fcomps
pop
cld
pop
xchg
fisubrs
ficomps
popa
out
xor
push
in
hlt
mov
pop
xlat
and
push
jo
fists
pop
and
fprem1
cmp
fcmove
push
push
das
sub
aad
idivb
mov
int
sbbb
mov
add
mov
mov
mov
pushf
xchg
aad
and
aaa
bound
movsb
adc
push
pop
cwtl
cld
inc
add
adc
cmp
aam
adc
dec
lea
mov
jecxz
rdpmc
cmpsb
andl
push
jo
jp
xor
nop
je
sub
or
mov
xchg
push
fisubs
mov
aas
ficoml
sub
negl
bound
rcrb
lea
add
xor
loope
enter
mov
ss
sarb
cmp
ljmp
mov
xchg
fcmovnb
xchg
add
mov
push
jp
xchg
add
out
mov
sar
cld
jbe
push
push
cltd
ss
pusha
sbbl
cli
adc
das
scas
mov
pop
sbb
test
push
push
add
mov
mov
mov
xchg
jnp
in
or
mov
or
and
sbb
stc
imul
cmp
adc
inc
std
scas
ss
mov
push
push
call
mov
mov
jno
mov
or
dec
lods
jns
aad
aam
inc
pop
je
clc
dec
ds
scas
scas
sub
pop
mov
arpl
add
and
icebp
in
or
pop
pop
mov
mov
mov
lret
push
jmp
ret
jne
cmc
int
sbb
or
and
out
or
sub
jmp
xor
fildl
push
int3
pop
jno
stc
shr
aaa
pop
imul
rol
mov
push
in
inc
test
mov
mov
cmp
test
movsb
push
int
xlat
or
shrb
test
pushf
xor
scas
xchg
stos
dec
push
pop
shrb
int3
loope
shl
inc
out
cmpsl
jl
push
int
repnz
data16
arpl
stos
sbb
add
daa
add
jp
das
jmp
and
addr16
push
inc
jns
aas
jle
or
mov
rolb
lea
cmp
pop
fsubrs
dec
and
lret
inc
pop
out
xchg
std
imul
mov
and
ja
int3
mov
imul
clc
jne
aaa
cmp
mov
test
or
fs
sbb
inc
push
add
sub
xchg
jmp
pop
xchg
and
fs
jno
push
js
cmc
sbb
aas
roll
sbb
daa
daa
ret
mov
xchg
mov
test
inc
adc
mov
jmp
fsts
jne
scas
mov
push
push
bnd
aad
sar
mov
cld
ret
insl
push
not
mov
nop
idivl
mov
std
and
in
sub
inc
repz
sbb
add
nop
idivb
andb
movsb
imulb
idivb
jb
push
or
int
jno
pushfw
and
scas
inc
repnz
sbb
mov
fsubr
mulb
jge
inc
jle
inc
xchg
and
insb
cmp
mov
add
shrb
popf
ds
fiadds
adc
pushf
int3
push
or
sbb
in
xor
mov
outsb
sarl
jecxz
add
dec
int3
xor
shlb
shrl
mov
test
mov
sbb
jne
fwait
cmpsl
xchg
xor
lcall
mov
adc
sbb
xchg
xchg
imul
cmp
mov
mov
addr16
lahf
sbb
or
cltd
negb
mov
mov
int
scas
pop
nop
push
mov
mov
shl
loop
sti
dec
cmp
cmp
dec
add
xlat
dec
push
mov
sbb
jb
testb
out
xor
xor
jmp
pop
sbb
andb
imul
cmp
dec
jmp
sbb
fldt
jae
xchg
and
les
std
dec
jge
lods
js
sbb
inc
pop
xor
lods
sbb
fisubs
pushf
pushf
mov
cmp
test
and
test
or
imul
call
stc
sbb
sbb
dec
mov
nop
adc
fimuls
out
jns
lcall
mov
and
push
xchg
push
or
jp
mov
bound
jbe
loop
arpl
into
icebp
int3
sub
mov
test
aas
or
mov
mov
cmp
rclb
fxch
loope
imul
dec
mov
imul
add
mov
xorb
pop
add
xchg
shlb
sub
dec
jnp
xor
orl
ss
cmc
sbb
in
loop
cmp
mov
dec
mov
adc
mov
jne
mov
push
push
mov
aam
cli
fdivr
inc
push
push
mov
xchg
pushf
test
adc
dec
push
sbb
icebp
dec
mov
aaa
insb
mov
stos
xor
mov
xor
pmaddwd
clc
mulb
or
ret
sub
sbb
pop
adc
repnz
jno
stos
imul
adc
adc
jne
mov
jbe
stc
lods
pop
mov
xlat
repz
jae
push
and
ja
or
mov
ljmp
test
mov
mov
jae
inc
inc
addl
add
xchg
and
jecxz
mov
push
push
add
push
mov
jmp
popf
jle
sub
xor
pop
adc
mov
xchg
leave
hlt
pop
adc
out
mov
sbb
dec
jecxz
jne
gs
pop
pop
insl
es
roll
add
lock
fidivs
out
jnp
test
fidivrs
orb
mov
pop
inc
sbb
xchg
mov
jb
call
mov
cltd
test
insl
outsl
ret
pop
fldenv
sbb
call
cltd
push
clc
mov
mov
inc
cmpsb
les
push
mov
pop
cli
or
fsubrl
xor
cwtl
lods
rcrl
cs
mov
jle
nop
insb
insb
mov
sbb
lahf
dec
jmp
daa
xlat
add
dec
movsb
push
adc
pop
test
jg
sbb
ret
lcall
mov
cld
push
pop
xchg
add
add
in
mov
or
pop
push
pop
adc
push
dec
cmp
sti
jnp
popa
mov
sub
das
mov
into
or
sub
jnp
xchg
js
idivl
into
xchg
xchg
xor
mov
hlt
fnstenv
in
dec
loopne,pt
jmp
je
push
arpl
inc
push
sub
dec
xorl
inc
fcompl
xchg
mov
lcall
scas
imul
push
cmp
das
xlat
cs
subl
sbb
jb
fsubs
stos
sub
add
cmp
push
aad
shll
cmp
std
ret
into
add
sbb
pop
jbe
jo
jns
sbb
or
cmpsl
cmp
jg
xchg
pusha
xchg
in
mov
mov
rcr
int
insb
orl
xor
jns
jl
mov
aaa
mov
mov
loope
ficoml
idivl
dec
push
jne
sahf
adc
inc
iret
bound
pop
and
dec
fstpt
mov
push
xor
inc
aaa
sub
adc
loop
push
test
out
xor
mov
add
cmp
outsl
add
ja
aam
pop
xchg
test
push
cmp
in
mov
fucomi
fnstcw
push
data16
mov
xchg
jno
outsb
fisttpl
cli
mov
testb
or
jl
mov
jecxz
push
push
movsl
fldenv
lcall
sbb
cmp
xchg
movl
jp
outsb
hlt
sbb
adc
push
jbe
jns
cmc
xchg
lret
stos
cld
mov
and
cmp
jbe
js
clc
loop
aas
loope
jne
sahf
xor
fldenv
ret
iret
mov
jl
popa
cmp
ret
lods
leave
out
imul
push
and
aaa
xor
lahf
lret
jne
lahf
and
add
cmp
jle
pushf
cmp
mov
mov
arpl
cmpsl
mov
xchg
js
nop
test
jl
and
call
sbb
aas
addl
inc
out
arpl
pop
and
aaa
cmpsb
loopne
dec
push
mov
mov
ret
sub
dec
arpl
and
push
mov
add
or
mov
xor
sbbl
and
dec
movsl
sarb
add
xchg
push
inc
fs
decl
popf
mov
pop
add
and
jp
mov
mov
add
call
sbb
mov
dec
xchg
push
clc
dec
mov
or
sbb
push
and
mov
sub
fistpll
mull
inc
fstl
rcll
sti
roll
sahf
sub
arpl
pop
ljmp
add
ss
aad
jmp
xor
mov
aam
in
imul
cmp
cmpsl
sub
pop
add
inc
nop
enter
les
test
or
mov
std
xchg
std
and
adc
lahf
mov
rep
outsb
movsl
inc
cld
cmp
add
jne
subb
fadd
hlt
mov
fisttps
fs
in
dec
mov
cmc
addr16
out
sub
adc
sbb
pusha
lods
or
sbb
push
adc
jge
mov
push
lret
js
jns
fiaddl
adc
fcoml
sbb
ret
lock
pop
btr
sbb
dec
cli
mov
pushf
call
push
insl
pushf
lret
stos
sbb
sub
ret
dec
jnp
dec
sbb
mov
dec
xlat
push
jo
jecxz
sar
lret
lahf
pushf
out
xor
dec
pop
mov
sub
xchg
es
inc
addr16
fbld
adc
xchg
xor
es
mov
adc
pop
xor
stc
shlb
xchg
imul
inc
mov
aad
jbe
sub
xor
or
adc
movsl
inc
pop
stos
call
pop
inc
and
arpl
pop
lods
add
sub
sbb
adc
enter
mov
cltd
jecxz
movsb
sti
cmp
adc
in
pop
dec
jmp
fcmovu
scas
clc
leave
sbb
sbb
jp
aas
stos
mov
add
inc
pop
jo
arpl
dec
call
imul
inc
scas
pop
jno
cmp
inc
push
xchg
pop
sbb
les
sub
or
scas
and
out
lret
imul
je
popa
pop
push
mov
jecxz
sarb
cwtl
push
fisttpl
sub
cmp
cmp
fnstenv
in
stos
ljmp
xchg
xchg
xor
add
filds
xor
xorb
inc
scas
fadds
hlt
xchg
popf
or
xchg
mov
jns
lret
mov
xor
rcl
inc
aad
jmp
adc
or
orb
pop
jno
clc
dec
sysexit
xor
idiv
pop
inc
push
and
add
mov
mov
mov
xor
mov
gs
jge
xlat
cli
dec
sub
xchg
mov
jb
fistpl
je
cmp
test
test
call
and
pop
stos
rcrb
scas
test
je
bound
push
inc
mov
xor
and
rcr
dec
cmp
cmpsl
insb
pop
std
addr16
popa
insl
cmp
cld
inc
std
lret
xor
mov
mov
or
and
fwait
dec
push
inc
add
adc
ficompl
ret
ja
cmpsb
insb
ds
call
aas
rclb
lcall
ss
xor
mov
jp
js
test
stos
xchg
push
jg
insl
adc
mov
dec
push
cmc
inc
lahf
jno
in
cmp
xchg
xchg
incl
and
mov
inc
push
push
pop
and
jno
cwtl
jbe
ret
or
rdtsc
dec
sahf
aam
add
fldcw
icebp
mov
daa
clc
lahf
popf
aad
mov
xor
ret
int3
stos
dec
aas
sbb
test
mov
arpl
insb
sbb
int
jge
and
cwtl
sbb
dec
and
imul
cmp
mov
ret
ret
push
fistps
addb
loopne
adc
push
insb
adc
shr
shll
jno
loope
push
cwtl
jne
dec
pop
ss
push
jbe,pt
mov
mov
in
loopne
aaa
jae
sbb
fadds
out
and
in
test
sub
add
jl
aas
xor
xor
push
fnstsw
scas
sbb
sub
adc
outsb
sbb
cmp
mov
cltd
fst
mov
roll
andl
pop
cmp
mov
jmp
mov
clc
inc
mov
addb
mov
jns
mov
daa
loopne
xor
cmpsb
cld
lods
pushf
dec
into
adcl
fistl
movsl
push
mov
inc
div
int3
outsb
cwtl
fildll
idivb
pop
xchg
setae
insl
mov
daa
push
test
lock
dec
pushf
cs
es
es
out
or
scas
cwtl
inc
mov
pop
xor
add
fcomi
xchg
fmuls
mov
mov
add
nop
les
mov
adcl
sub
insl
mov
data16
sub
stos
push
loop
mov
es
dec
lods
mov
divb
mov
popf
fdiv
mov
xor
outsb
jmp
std
loop
jne
mov
sbb
sti
adc
testl
daa
mov
mov
insb
pop
js
inc
xor
jo
mov
jg
nop
bound
fstps
cmp
loopne
sub
jecxz
mov
pop
outsb
pop
popf
sub
mov
mov
gs
repnz
mov
rorl
in
or
aad
daa
outsl
add
pop
jo
mov
mov
mov
rorl
aam
dec
push
cli
loope
or
dec
jge
sub
pusha
es
jecxz,pn
in
cmp
add
mov
rcl
push
scas
inc
jp
add
mov
clc
hlt
sbb
dec
out
repnz
dec
mov
push
enter
movsl
mov
addr16
iret
cmpsl
or
mov
cld
jae
inc
push
aad
pop
out
push
adc
out
outsw
push
mov
xchg
imul
xlat
mov
mov
cmp
sub
adc
dec
aad
mov
clc
inc
std
jns
adcl
pop
inc
popf
jle
into
mov
jecxz
popa
adc
cmp
data16
dec
and
dec
pop
pop
repnz
shll
jbe
out
push
adc
mov
sbb
push
mov
cmpsb
or
push
rcr
mov
mov
mov
mov
fwait
aas
outsb
mov
movsl
std
clc
mov
mov
or
jno
push
jmp
pop
inc
push
xor
sti
test
movsl
js
clc
nop
aas
inc
dec
mov
inc
leave
adc
scas
lahf
mov
ds
and
cmp
mov
insl
aaa
loop
mov
mov
mov
push
jmp
mov
call
inc
pop
mov
negl
fidivrs
jns
data16
shlb
iret
add
pop
lds
push
nop
adc
fistps
pop
pop
add
mov
movsl
repz
notl
imul
dec
xchg
sub
out
fprem1
xorb
hlt
icebp
ret
xorl
adc
mov
pop
dec
ficoms
hlt
sbb
dec
pop
and
loop
fstpt
dec
inc
data16
sbb
lret
xchg
mov
sub
xlat
mov
into
or
je
call
mov
shlb
or
sbb
rcr
cmp
out
popl
jbe
sub
in
pop
gs
xchg
nop
or
stc
lahf
das
vphaddbw
mov
in
jmp
ret
mov
mov
fs
cmp
push
mov
scas
aaa
sbb
add
xor
push
push
jp
repz
loope
mov
pop
mov
mov
mov
sbb
and
xchg
loope
mov
inc
push
xchg
aas
mov
sub
subb
ffree
sub
lahf
dec
in
cmpsb
pusha
add
adc
leave
dec
pusha
jge
stos
lret
gs
jno
imul
and
mov
fsubl
daa
add
mov
or
stos
xlat
call
pop
orl
mov
jnp
fdivrs
dec
jo
xchg
dec
or
in
loope
xor
shlb
add
adc
jbe
int
cmp
sar
adcl
mov
or
ds
pop
and
sbb
out
pop
pop
push
aam
insl
or
outsb
push
bound
cmp
orl
xor
test
icebp
xor
mov
inc
hlt
mov
push
mov
rorl
pop
out
sbb
jbe
push
dec
cmpsl
ret
mov
adcl
les
fstl
mov
add
push
dec
inc
sbbb
data16
cmp
jae
icebp
inc
cmpsb
and
stc
sbb
mov
out
outsb
lock
cmc
sahf
cs
ret
popa
add
fwait
test
clc
xor
stos
mov
movsb
mov
push
sbb
nop
cld
stc
pop
mov
sbb
adc
xor
jo
sub
scas
xor
xchg
inc
test
clc
push
jg
xor
test
aad
int
out
pop
call
mov
std
movsb
shrb
cmp
dec
rorl
xor
popa
notb
int
xchg
inc
mov
sarb
dec
add
add
mov
ret
mov
jp
shlb
gs
jo
loopne
jo
lock
jns
adc
ds
mov
pop
push
idivl
stos
adc
dec
lock
jo
pop
shr
andl
pusha
out
movsb
cld
fistpll
jge
rolb
inc
aaa
jno
cmp
mov
mov
scas
lods
sbb
test
ja
clc
mov
iret
loope
ret
jnp
xor
lods
fisttpl
mov
add
insb
xchg
dec
sbbl
jns
ret
fsubs
mov
jge
ret
rcll
bnd
jae
ja
xor
lea
and
cmp
mov
mov
pushl
es
adc
lods
jbe
insl
addr16
fsubrs
pusha
icebp
xchg
sbb
andb
pop
repz
push
push
jp
pop
into
rorb
loope
stos
xor
sub
ds
mov
nop
jle
dec
cmp
or
fs
mov
and
out
int
jb
and
imul
jae
and
cli
rclb
cmp
sahf
imul
mov
cmp
test
adc
fcoms
movsl
out
jne
lds
out
push
dec
adc
mov
xor
and
testl
les
dec
adc
jp
daa
xchg
std
aad
jae
sbb
pop
pop
mov
inc
stos
add
push
dec
icebp
sbb
adc
stos
pop
out
inc
mov
mov
sbb
pushf
push
ds
sub
es
sbb
adc
inc
xchg
fisubl
push
or
jg
nop
fadds
lret
dec
jle
push
jmp
fsubl
pop
add
outsl
mov
fmull
dec
jns
dec
lret
ret
popf
pop
pop
mov
sti
jb
mov
shrl
jae
sub
lods
sbb
sti
mov
jmp
loopne
int
bound
xchg
add
shll
je
cmp
filds
push
pop
sbb
xlat
jnp
sub
or
inc
inc
daa
xor
addr16
mov
and
and
inc
into
aaa
data16
sbb
aam
mov
push
mov
icebp
jge
pop
fwait
loop
or
add
test
xchg
pop
sar
push
add
add
test
notb
stos
ficompl
or
lret
dec
push
mov
aas
mov
or
popa
mov
cld
mov
movsb
add
push
pop
int3
imul
int
fcomip
mov
loopne
or
push
lret
adcb
ljmp
add
lea
ret
fidivrs
add
movswl
cwtl
inc
cmc
loop
aam
call
mov
sti
add
cmp
mov
icebp
mov
add
insb
hlt
xor
pop
es
pop
fiadds
test
stc
dec
jge
jg
add
dec
repnz
or
xor
dec
imul
js
bound
fistpll
jl
daa
mov
psadbw
inc
xor
lea
ret
and
mov
jae
rcrb
aaa
mov
fnstsw
divl
test
add
movsl
cmp
fidivl
or
je
inc
cmp
shll
adc
add
xor
dec
outsb
sbb
push
test
adc
cltd
je
movsl
sub
pop
in
leave
daa
repz
and
iret
int
ja
test
inc
aam
push
mov
cmpsl
fistl
mov
mov
mov
iret
cld
fimull
testb
push
pusha
push
stos
call
sub
stc
call
mov
aad
test
jmp
sub
and
xchg
add
and
out
lret
stos
fs
mov
call
push
repz
xlat
jne
imul
adc
test
test
out
movsb
mov
icebp
sbb
lret
insb
fisttpll
adc
xchg
mov
in
or
flds
adc
and
enter
push
push
inc
pop
sbb
add
scas
adc
jae
inc
lahf
aad
imul
cwtl
iret
push
push
shrl
sub
fcmovu
movsl
pusha
xchg
test
pushf
lods
rcrb
push
arpl
jle
push
sbb
cltd
push
push
out
jmp
loope
das
jb
xor
jne
pop
push
cmp
mov
mov
fwait
mov
pop
je
mov
in
ret
adc
pop
mov
out
out
xlat
xor
sbb
pop
xchg
sub
stc
or
and
clc
mov
and
clc
aad
rorb
mov
ss
lock
test
push
xchg
mov
inc
clc
out
psrld
pop
add
jecxz
enter
subl
imul
lds
mov
mov
cmp
dec
sar
xor
sbb
ljmp
icebp
sub
sbb
xchg
push
push
cli
push
and
jo
lods
cmp
dec
outsl
mov
and
or
call
lcall
sbb
add
orl
imul
je
in
out
sub
mov
mov
jae
es
mov
dec
daa
and
lock
ret
xor
int
push
shlb
jecxz
mov
ret
add
xchg
inc
mov
int3
push
ret
cmp
xchg
pop
jno
repnz
imul
add
or
icebp
gs
jns
addl
cltd
call
std
lods
lds
std
xor
jecxz
stos
sahf
fsub
jl
mov
dec
xor
bound
adc
sbb
cmpsb
fnsave
ljmp
add
jecxz
ds
jge
imul
cltd
sub
mov
int
repz
fnstcw
xchg
jb
lods
mov
loope
leave
jae
pusha
jge
cld
inc
push
jmp
cmp
xchg
adc
or
pop
cmp
and
mov
ret
dec
test
cmpsb
jp
insl
jbe
stos
pop
jg
inc
orl
es
imul
dec
scas
pop
in
and
dec
pop
mov
inc
xor
xchg
pop
sbb
addb
add
mov
lea
pop
popf
pushf
inc
es
fnsave
clc
push
sub
add
sbb
xor
out
xchg
arpl
inc
mov
in
adc
cmpsb
mov
mov
pop
dec
pushf
out
sti
arpl
sub
movsb
jo
daa
lcall
sbb
or
pop
jns,pn
dec
mov
lods
cld
cmp
lahf
lods
cmp
stc
arpl
inc
pop
xor
inc
mov
mov
cmp
pop
ret
mov
test
iret
ror
mov
sarb
andl
jge
jge
call
mov
dec
adc
mov
pop
mov
pop
xchg
mov
fdivr
iret
fsubrs
dec
cwtl
push
shrl
pop
add
jne
sbbl
or
sbb
mov
mov
test
push
not
faddl
gs
and
mov
sub
scas
jno
enter
mov
adc
movups
mov
pusha
mov
fstps
push
dec
rorb
jg
and
fidivs
xchg
jp
dec
push
repz
loopne
dec
mulb
mov
ret
mov
adc
sbb
mov
bound
lds
pop
jmp
adc
push
mov
pop
xor
aaa
and
fwait
in
push
mov
pop
push
imul
arpl
xor
add
repnz
sbb
xchg
int
rcrb
ja
xor
lea
adc
or
ficomps
aaa
cmp
hlt
mov
stos
xchg
pushf
xchg
test
icebp
inc
ficomps
inc
pop
fs
arpl
push
std
pop
pop
adc
fisubrl
ljmp
push
imul
mov
fldcw
cmp
mov
add
adc
or
sbb
or
sub
mov
dec
push
sti
inc
add
repz
sub
pop
testl
sub
sub
jne
mov
add
cwtl
inc
push
cwtl
pop
xchg
xor
mov
out
add
leave
test
lods
addl
ficomps
pop
inc
mov
xlat
outsb
stc
pop
test
into
in
pop
arpl
xor
sub
ss
jge
pop
mov
inc
add
dec
or
leave
dec
cmp
call
inc
add
call
rcrl
xchg
lahf
fadd
andb
sub
in
cmp
dec
jbe
push
adc
movsb
jae
test
aas
mov
stos
push
mov
add
loop
sahf
mov
gs
push
add
popa
jbe
mov
mov
cmp
and
and
je
or
mov
adc
insl
adc
jmp
inc
test
pop
lea
outsb
mov
loop
sub
jnp
insl
test
ret
dec
xor
pop
or
cltd
mov
or
cmp
xchg
fimuls
sbb
test
sub
mov
adc
mov
xor
or
and
add
push
xchg
arpl
jo
dec
andl
adc
fwait
push
cmp
out
jne
mov
cmp
nop
jo
pop
enter
jg
and
lcall
nop
or
pushf
cs
daa
sub
flds
sub
mov
sub
stc
mov
jmp
mov
pop
mov
mov
jnp
sub
fbld
aas
mov
adc
cld
inc
mov
ret
cmpsl
sar
movsl
add
jbe
fnstenv
daa
std
lahf
loopne
sub
pop
cmpsl
mov
test
jns
fs
pusha
call
pop
orl
adc
sti
in
inc
popa
sub
xor
xchg
and
push
and
imul
mov
sahf
imul
mov
dec
mov
ja
daa
xchg
ret
xchg
mov
push
ret
or
inc
aam
sub
dec
push
dec
addb
ret
push
aam
mov
gs
arpl
fildll
aam
invd
out
cli
or
jb
adc
pop
add
push
dec
fnstenv
je
add
daa
jg
lea
dec
repz
std
addr16
adc
mov
mov
inc
mov
push
dec
push
icebp
scas
jecxz
lock
cld
lods
jb
cs
adc
mov
ret
mov
in
mov
insl
repnz
pop
mov
and
xor
jge
mov
mov
mov
stc
js
mov
pushf
mov
push
inc
popa
cltd
sbb
jg
or
xchg
cmpb
daa
loopne
or
mov
jmp
js
and
mov
rolb
jns
cmp
xchg
ficompl
aaa
leave
jp
popf
push
or
mov
xor
mov
inc
mov
hlt
int3
clc
dec
fwait
movsb
cmp
pop
jle
call
xchg
test
mov
imul
and
mov
stos
inc
adc
inc
es
xchg
add
lret
fsubl
add
stos
inc
or
lret
imul
sbb
hlt
popf
dec
push
nop
xlat
sub
sub
fwait
sahf
ret
dec
cmp
cltd
jmp
xchg
cmp
cmp
xchg
xchg
and
pop
addr16
pop
aas
test
adc
lods
dec
out
sub
scas
cmpsl
xor
jp
test
mov
ss
jno
stos
push
loop
push
or
and
movsl
scas
cld
inc
mov
popa
adc
out
sub
add
hlt
orb
popf
xor
lret
cmp
jnp
shll
rcl
mov
cmp
cwtl
mov
jo
ljmp
shll
arpl
outsb
clc
hlt
sti
mov
jp
cmpsl
int
or
daa
and
addr16
add
bound
clc
sbb
stc
jmp
mov
xor
mov
in
cvtdq2ps
add
popa
push
xlat
mov
fpatan
dec
push
iret
pushf
insb
jp
inc
scas
sub
loope
test
sub
dec
aam
test
cmp
fcmovnb
inc
ss
addb
jmp
mov
add
cld
jmp
leave
pop
or
lahf
jp
sbb
sbb
dec
pop
fwait
xor
andl
jnp
lea
fld
lret
into
sub
or
inc
sbb
mov
add
imul
dec
test
and
cmp
scas
les
lret
push
rol
cmpsb
adc
push
popa
insb
scas
mov
xchg
jne
xor
dec
adc
push
or
pop
jp
xchg
cmp
fwait
xchg
pop
inc
mov
adc
mov
fisttpll
imul
in
fisubrl
pushf
pop
sbb
nop
xchg
test
jl
pop
int3
loopne
mov
jmp
icebp
cli
sub
lods
and
test
ljmp
fisttps
sti
sarl
xchg
dec
or
enter
mov
inc
jp
fwait
mov
insl
xchg
ret
js
dec
dec
push
add
pusha
xchg
push
std
fst
push
xor
iret
scas
aad
in
pop
push
clc
cld
loop
mov
jge
lock
enter
leave
in
and
bound
sbb
sahf
inc
test
and
iret
xor
icebp
mov
or
fldenv
xchg
int
test
shlb
aas
dec
test
mov
rcll
iret
pushf
or
push
lahf
jmp
inc
loopne
stc
xor
and
and
dec
enter
dec
out
sbb
gs
cli
nop
xchg
and
lcall
sbb
enter
sbb
xor
sbb
je
stos
idivl
jg
jne
xor
out
movsb
idivl
xor
jecxz
loope
nop
mov
add
push
pop
cmp
lods
and
mov
or
addr16
loope
push
out
add
adc
in
lods
popl
inc
jnp
adcb
cmpsl
inc
pusha
pop
fcompl
sub
or
sbb
loopne
test
ret
into
dec
mov
test
pop
bound
ds
mov
xor
xor
jmp
dec
fstl
jge
jo
inc
xchg
sub
and
mov
int
pop
leave
fisubs
nop
jp
call
push
jno
mov
sbbb
xor
roll
repnz
sbb
ds
outsb
adc
cmp
mov
call
dec
xchg
sub
in
pop
push
mov
cwtl
fstpl
mov
cmp
mov
das
xor
inc
sub
and
mov
jo
sub
adc
xor
cmp
inc
mov
mov
insl
mov
push
and
or
aaa
push
repz
icebp
cmpsb
pop
mov
inc
mov
subl
mov
sti
scas
sti
cmpb
rol
adc
jbe
mov
outsb
or
lcall
mov
xchg
je
or
jge
pop
mov
std
dec
icebp
rcl
mov
mov
xor
push
xor
fwait
and
mov
aaa
dec
jmp
call
std
ds
adc
adc
aaa
popf
out
ljmp
popa
fnstcw
stos
fnstenv
inc
sbbb
shll
jbe
lods
ret
xor
fnstsw
cld
push
outsl
cmpsb
int
push
jbe
dec
dec
mov
bound
or
stos
inc
into
test
ds
std
fcomi
js
cmp
in
movsb
add
mov
xchg
lock
imul
inc
js
mov
sub
ja
mov
faddp
pop
movsb
fwait
arpl
sahf
cmp
aaa
add
xchg
lea
jae
std
inc
cli
cs
imul
and
jne
imul
mov
into
pop
add
cli
push
shll
in
test
daa
mov
mov
or
dec
pop
out
inc
jg
popf
cmp
xor
mov
jo
dec
pop
out
cmp
adc
pop
out
popf
mov
mov
test
lahf
cmp
jp
or
andb
lods
xchg
jb
pop
mov
mov
inc
jb
mov
int
jnp
fsubl
push
jg
int3
dec
loope
or
cmp
jb
or
cs
aas
scas
inc
push
dec
insb
mov
jns
mov
jbe
rcrb
test
mov
and
ja
mov
imul
mov
das
push
cmc
mov
arpl
sub
pusha
xor
fiadds
pop
test
imul
shrb
shl
ror
xchg
rolb
ret
sub
push
lods
mov
arpl
imul
fiaddl
or
fsts
std
sbb
pop
scas
mov
dec
pop
mov
enter
mov
inc
repz
inc
ret
xchg
dec
test
paddq
pushf
push
or
nop
or
stos
shlb
xchg
cld
arpl
mov
inc
adc
sub
add
test
add
unpcklps
insb
fildl
sbb
lds
adc
andb
pusha
arpl
and
cwtl
stos
cwtl
mov
mov
pop
dec
je
stos
test
rol
mov
sbb
mov
bound
jmp
pop
pop
xlat
subb
jae
sbb
dec
pop
pushf
xchg
shl
add
test
add
jmp
inc
addl
and
outsb
fidivl
jns
inc
and
dec
push
xchg
aas
ss
mov
xor
mov
cmp
pop
adc
mov
in
mov
nop
add
mov
jl
enter
ss
jg
pop
cmp
add
aaa
js
xchg
ss
or
mov
mov
dec
stos
data16
adc
sbb
fldcw
xchg
jb
ss
jne
in
adc
movsb
xor
repnz
repz
dec
imul
mov
loop
pop
daa
mov
out
andl
jg
jl
data16
ja
call
lods
aas
inc
push
xchg
jo
je
or
mov
lcall
jecxz
push
jecxz
push
inc
or
xor
mov
aad
js
shrl
scas
enter
jmp
repnz
lret
ljmp
add
jge
push
pop
mov
jnp
fs
fisubrs
data16
jl
and
cmpsb
int3
subps
or
incl
sub
sarl
cmp
sub
daa
xchg
xlat
pop
jp
jne
popa
or
dec
jecxz
mov
mov
push
pop
mov
inc
pop
sub
popa
push
push
bound
das
lret
lret
je
cmp
adc
movsb
lds
mov
or
cltd
jns
gs
jns
outsl
lods
jo
xchg
cmpsb
iret
jno
test
aad
mov
nop
or
push
test
xor
dec
test
xchg
adc
scas
out
sub
fisttpll
daa
icebp
lods
pop
ret
or
mov
ja
jmp
das
cmp
iret
lds
pop
add
dec
sub
and
adc
mov
pop
mov
popf
sub
pop
je
mov
pop
je
ja
sahf
mov
mov
inc
push
cmp
int3
inc
push
jb
fxtract
hlt
jp
lret
hlt
inc
add
iret
adc
pop
mov
ret
jp
hlt
jle
data16
jge
push
adc
dec
mov
jbe
in
movsb
inc
cmp
fnsave
into
shlb
rolb
js
out
mov
ljmp
out
aad
out
and
lods
jecxz
pusha
andl
dec
xor
or
sub
jno
mov
out
rol
jae
mov
cwtl
movsb
sub
je
loopne
orb
test
push
idivb
push
pushf
jl
mov
pop
xchg
push
sub
in
or
and
loopne
jmp
popa
fisubl
xor
dec
or
mov
fs
dec
fisubrs
in
bsr
loope
mov
mov
leave
adc
scas
clc
test
push
out
shrl
and
mov
xor
dec
push
inc
sbb
jb
jnp
insb
dec
int3
cmpsb
jne
ds
loop
shrl
cld
xor
jb
shlb
push
fcmovnu
or
or
push
repz
into
shrb
pop
in
daa
jge
lock
iret
mov
imul
jge
movsl
mov
adc
or
and
jp
int
mov
inc
lds
mov
arpl
jg
xchg
cmpsb
lods
xchg
mov
mov
pop
lea
push
test
pop
in
pop
push
fistpll
jmp
jp
lahf
rcll
add
cltd
adc
test
and
test
mov
decb
ret
mov
pop
lahf
cmpsb
xor
insb
sbbl
pop
popa
xchg
aam
jp
or
sahf
scas
punpckhbw
and
jg
sahf
mov
ss
repnz
sub
cmp
inc
xor
add
xchg
jnp
and
pop
arpl
leave
rcrl
sbb
push
rep
or
sub
xchg
push
sub
jne
xor
pop
dec
addr16
test
adc
imul
lea
ja
mov
jg
inc
xchg
xchg
sbb
je
int
adc
inc
inc
popa
loopne
pop
xor
mov
insl
mov
fistl
jne
lds
psrlq
pxor
pop
jmp
push
inc
mov
jg
adc
ret
cltd
lds
movsl
aad
movsl
stos
jnp
jns
shll
and
mov
or
or
mov
inc
not
pop
fs
movsl
iret
mov
and
mov
aas
outsl
nop
jae
ficompl
je
xor
int
mov
in
mov
dec
xor
push
xchg
retw
pop
adc
mov
mov
stos
or
push
ficoms
xchg
cmp
hlt
in
cmp
xchg
lods
sub
mov
or
imul
push
xor
gs
mull
adc
insl
xor
sub
mov
inc
repnz
fistl
loope
ss
pop
lcall
dec
idiv
dec
jge
add
rcrb
gs
xor
pushf
dec
mov
stos
cmp
push
test
inc
fdivs
lock
adc
pop
mov
aam
sub
add
imul
stos
xchg
rclb
decl
fbld
clc
in
fs
cmp
xchg
push
mov
andl
outsl
and
scas
add
xchg
ret
repz
add
cmpsb
lret
pop
out
mov
and
mov
and
aas
inc
int3
lret
inc
sub
dec
or
cmp
shrb
and
outsb
jge
add
jns
jbe
pop
cmc
push
cmp
add
loop
inc
mov
mov
add
loope
es
push
dec
lds
add
mov
cld
stos
das
imul
jo
je
pop
xchg
mov
or
inc
mov
hlt
das
cmp
lahf
mov
fbld
inc
sbb
shlb
push
mov
les
add
das
test
popf
jge
adc
in
sub
mov
ss
arpl
in
cs
test
mov
inc
xchg
ret
dec
sbb
xchg
pop
sti
pushw
scas
fnop
out
sbb
pop
xchg
fisubs
daa
sub
add
cmp
pushf
test
stos
cmp
outsb
push
adc
inc
pop
or
out
aas
mov
adc
popa
mov
adc
or
and
adc
add
loope
pop
leave
mov
mov
jnp
loopne
adcl
nop
or
scas
adc
call
fsubrp
rcl
scas
call
mov
xchg
js
ja
out
in
loop
xor
xchg
cmp
cld
pop
out
xor
inc
mov
jb
hlt
std
out
pop
cli
xlat
loop
xchg
mov
iret
lahf
lods
add
std
dec
mov
outsl
push
mov
jae
cltd
or
or
jbe
adcb
leave
mov
inc
icebp
jo
cld
jne
pop
cmp
xchg
mov
mov
inc
mov
insl
rcll
or
les
aam
or
mov
adc
lea
pop
mov
mov
pop
pop
push
mov
mov
stos
fldt
inc
rcrb
sahf
mov
insl
push
and
jae
adc
and
xchg
fldenv
inc
loope
mov
mov
fidivrs
stos
rolb
jo
loop
arpl
fidivrs
mov
jecxz
mov
pop
sub
jmp
xor
jmp
fcmovnb
lahf
pop
or
popf
sahf
mov
dec
dec
or
mov
push
gs
movswl
loop
neg
aas
push
xor
arpl
rcll
dec
pushf
push
nop
sti
lods
cwtl
addr16
push
mov
mov
lret
jnp
das
sub
jb
push
or
mov
xor
cmp
leave
sub
and
mov
add
sub
lcall
int3
mov
in
cltd
lds
lahf
mov
xadd
mov
xlat
inc
or
addr16
lcall
pop
std
pop
cltd
into
jb
or
das
loopne
sbb
jmp
xor
pop
jae
faddp
cmp
xchg
ss
mov
sbb
sahf
rol
xchg
sbb
xchg
outsb
mov
je
or
aad
ja
stos
lds
or
jo
add
insl
sub
fldl
test
test
xchg
lahf
dec
pop
sbb
int3
cmpsb
out
mov
jecxz
dec
std
adc
outsb
pop
lret
pushl
mov
popa
adc
cmpsb
das
dec
movsl
test
mov
sahf
ja
bound
das
dec
add
jp
xchg
fs
xchg
loop
aas
xchg
ret
sbb
pop
xor
jl
cmp
into
stc
sbb
insl
jbe
mov
inc
add
mov
mov
mov
jne
das
sar
push
adc
jbe
mov
iret
das
sti
xor
add
push
clc
pop
insl
jnp
mov
xchg
or
mov
insl
ret
fmul
dec
mov
cmp
lcall
jmp
sub
test
jne
jnp
adc
inc
in
in
movsl
pop
mov
adc
sub
adc
insb
lds
xor
test
inc
testb
mov
in
mov
jg
push
loopne
jp
mov
repz
mov
push
mov
xor
xchg
fwait
insb
mov
cmp
std
insl
cwtl
nop
aas
and
cmp
and
std
cmp
pop
mov
dec
imul
movsb
push
and
jo
xchg
and
xchg
adc
loopne
mov
and
sbb
scas
jmp
xlat
sar
cmp
hlt
icebp
fucom
sbb
sti
test
out
add
push
xchg
sub
lds
fldt
outsl
cmp
sarb
into
test
inc
lahf
dec
push
push
pop
in
xor
shll
inc
mov
icebp
jbe
xchg
xchg
movsb
cltd
das
mov
popa
xchg
aam
test
int
bound
idiv
mov
data16
aas
outsl
loope
mov
push
xor
pop
pop
sub
jge
dec
pop
inc
dec
movsl
jmp
in
vmwrite
fwait
xor
fistl
aam
push
add
mov
repnz
imul
dec
mov
adc
jmp
jno
xchg
pop
adc
push
dec
mov
fs
mov
push
stc
xor
ljmp
push
pushf
xchg
pop
pop
cmp
mov
aam
inc
adc
outsb
xchg
and
xchg
das
or
ds
stos
lret
cmp
loopne
xor
mov
adc
ja
lods
shl
dec
and
test
js
cmp
insb
lcall
loopne
scas
pop
test
jg
shl
into
std
out
sbb
ss
aam
mov
outsl
push
add
lods
pop
scas
test
or
mov
dec
enter
cmp
mov
xor
ror
xor
sub
aas
subb
mov
push
incb
mov
jns
mov
sbb
sti
mov
loop
lea
or
faddl
cli
rolb
arpl
xor
jge
jbe
push
dec
call
sub
xchg
mov
lret
aaa
dec
sti
mov
mov
xlat
sub
xor
xor
mov
or
dec
mov
in
sbbb
dec
sub
mov
push
add
jp
mov
dec
cmpsb
mov
ret
daa
jmp
shll
and
xor
and
sbb
mov
mov
adc
jbe
enter
mov
sub
and
xor
sbb
mov
clc
mov
scas
mov
addr16
mov
faddl
xchg
iret
pop
jle
loope
addl
fs
xor
out
movsl
pop
jmp
outsl
leave
sub
js
repz
jmp
lahf
push
sbb
icebp
add
icebp
mov
xor
sub
sub
add
out
aas
sub
xlat
inc
sarl
lock
cs
and
push
xor
scas
xor
stc
pop
ss
bound
outsb
das
faddl
mov
mov
sbb
rorb
xchg
jno
mov
in
push
cltd
and
testl
lods
jmp
arpl
mov
or
mov
cmp
insb
dec
repz
xchg
or
mov
mov
cli
aaa
leave
mov
push
negl
cmp
fstps
iret
push
shrl
loope
addl
fs
bound
movsb
xlat
push
fisttpll
xor
fdivs
inc
mov
int3
and
mov
jp
push
push
aas
lods
xrelease
xlat
xor
xor
mov
fstps
pop
jg
xchg
mov
xchg
lcall
push
pop
jns
xchg
clc
mov
lods
outsl
mov
test
mov
decl
aad
cmpb
out
mov
jae
xchg
jl
mov
mov
cli
cmpb
stc
mov
hlt
mov
call
xor
sub
popa
ficoms
pop
data16
and
ret
cmp
mul
mov
jecxz
xchg
mov
rclb
sub
loop
or
inc
cwtl
cmpsb
imul
loopne
sbb
mov
ja
iret
cmp
shrb
xchg
push
jmp
sub
movsl
fwait
mov
scas
mov
fdiv
pop
loopne
test
push
dec
sbb
mov
push
mov
dec
and
push
mov
aaa
jl
sarb
fmuls
mov
or
sub
popa
sub
shr
push
mov
mov
push
or
xor
ficomps
popa
mov
cmpb
dec
jae
test
scas
in
sbb
repnz
rcrl
sbb
sub
and
cmp
pop
cmp
aad
inc
mov
lret
out
popf
addb
inc
pop
inc
fcmove
push
lahf
mov
mull
mov
push
mov
sub
push
fucomp
cld
mov
mov
sub
jge
pop
ret
cmc
push
sbb
jle
dec
or
pop
shrb
push
cmpsb
roll
mov
mov
scas
cwtl
fwait
shll
cwtl
fildll
shrl
sbb
cmp
rcr
sub
add
mov
aas
inc
sarb
jns
and
mov
push
cli
testb
orb
imul
push
aaa
mov
push
hlt
inc
repnz
mov
loop
icebp
stc
aad
shrb
imull
outsb
fmull
xor
xor
cmp
fmuls
sti
or
sbb
and
jb
popf
adc
rcrb
sbb
in
stc
push
dec
xorl
pop
dec
dec
cmp
jae
repz
rol
fwait
cmc
dec
cmp
clc
dec
call
push
add
inc
jle
mov
mov
mov
divb
dec
std
xchg
aas
and
and
sub
fisttpl
mov
shl
xchg
addb
add
jl
mov
loope
mov
adc
xchg
test
int
sbb
orb
inc
cmp
add
sub
and
push
cs
fildl
loopne
cmpl
xor
loop
das
ja
add
pushf
mov
aam
add
mov
ja
fsubp
fidivl
out
jo
jl
push
push
popl
cld
push
ja
lea
cmp
sub
inc
shrl
sbb
add
sbb
cmp
xchg
outsb
fstpl
lock
mov
fisubrs
iret
add
jo
outsb
add
push
cmp
mov
xor
adcl
pop
inc
jge
inc
imul
pop
push
pop
outsb
lods
out
mov
in
lea
dec
push
add
dec
jmp
icebp
int3
leave
pop
mov
mov
cmp
mov
mov
mov
lret
test
pusha
mov
es
push
arpl
or
sbb
push
push
fstpl
cltd
cmp
fimull
dec
je
lds
jne
cmp
push
addl
movsl
or
movsb
outsb
mov
pop
push
inc
jp
adc
fwait
adc
jg
sub
sub
pop
dec
scas
loop
ror
adc
xor
mov
cmpsl
imul
and
jmp
adc
jmp
or
lods
fistl
jne
call
sub
loop
mov
ss
shl
mov
jmp
jbe
in
xchg
sub
movl
mov
pop
aam
imul
adc
fcoml
push
das
ret
push
inc
fstpt
xchg
sub
mov
pop
inc
pushf
fdiv
imulb
popa
xchg
lcall
jg
lahf
cmp
idiv
stos
mov
mov
adc
sub
sbb
sbb
outsl
push
mov
xchg
xor
cmp
aam
and
pop
mov
popfw
sub
xchg
and
negl
add
dec
pop
imul
xor
mov
adc
daa
sbb
enter
loop
mov
add
xlat
outsl
fcom
push
jo
xchg
pop
pop
fsubr
and
mov
in
push
xchg
mov
jg
jbe
fists
mov
mov
jg
adcb
hlt
pop
jbe
sbb
adc
xchg
insb
lidtl
inc
cmp
das
xor
inc
scas
mov
adc
xchg
push
adc
filds
mov
inc
adc
and
mov
jg
add
idivb
xor
outsl
shl
mov
mov
add
repnz
imul
mov
mov
adc
mov
push
jl
pop
arpl
cmpsb
ljmp
xor
mov
loop
into
cmp
loopne
adc
clc
xchg
sub
jecxz
push
adc
or
pop
add
stos
aaa
jecxz
jnp
roll
lods
ret
add
fadd
ljmp
push
add
out
leave
mov
dec
lahf
pop
aaa
enter
ss
ljmp
sahf
movsb
xchg
sbb
jmp
inc
ret
sub
xchg
mov
test
repnz
inc
arpl
int3
cmp
pop
frstor
std
cli
mov
push
adc
mov
fdivs
xchg
add
dec
jmp
cwtl
fiaddl
lahf
jb
call
int
mov
xchg
lcall
ret
outsb
adc
ss
pop
xor
push
fadd
push
push
imul
or
lea
stos
and
in
or
fnstcw
mov
popf
xchg
faddl
int
adc
ror
jl
jnp
cmp
lods
outsb
stos
aaa
push
xchg
ret
push
jbe
and
xchg
dec
and
add
mov
pop
scas
ret
adc
sahf
xchg
dec
aas
xchg
mov
xor
jo
xchg
push
clc
in
adc
imull
sub
xchg
gs
sub
mov
popf
je
repnz
leave
dec
sahf
cmp
xorb
mov
and
fbstp
insb
popf
mov
mov
xchg
mov
dec
out
pop
or
shrb
xchg
pop
nop
jg
cli
cmp
mov
or
jg
jmp
pop
scas
push
mov
jmp
sub
mov
dec
divb
push
ds
mov
pop
xor
xor
pop
test
add
clc
sub
dec
and
cmp
adc
push
inc
mov
loope
push
mov
dec
or
mov
xchg
xchg
fdivs
sahf
pop
and
jl
sub
push
push
ljmp
push
es
sbb
imul
mov
and
popa
push
dec
cmp
test
inc
mov
sahf
stos
xchg
mov
mov
dec
pusha
mov
pop
mov
fdivr
dec
lds
bound
inc
pop
out
mov
cltd
out
in
loopne
data16
pop
add
addr16
loop
mov
or
int3
nop
in
stos
mov
xchg
jg
fs
dec
insb
insl
adc
cli
jb
aaa
icebp
inc
push
gs
aas
inc
stos
test
xlat
inc
add
jns
sub
lahf
mov
js
adc
dec
mov
lret
pop
mov
xchg
mov
jne
jns
inc
stos
mov
std
dec
push
xchg
hlt
dec
test
mov
out
adc
sbb
shll
jmp
fnstsw
arpl
fs
push
cmp
push
mov
mov
movl
cwtl
mov
xchg
pop
push
add
in
jp
jb
stos
jns
addr16
dec
mov
dec
repz
fimull
fsts
faddp
scas
add
pop
ret
jnp
inc
int3
or
push
pop
xchg
mov
fldenv
and
or
and
ret
iret
inc
mov
xchg
int3
adc
mov
and
xlat
ficomps
int3
scas
xchg
xchg
idivb
push
lcall
jo
pop
mov
lods
mov
pop
dec
xchg
mov
mov
dec
popf
mov
pop
cld
and
and
outsb
mov
mov
xor
dec
push
mov
fldt
jle
sti
out
rcrl
pop
mov
cmc
mov
loope
nop
pop
adc
push
mov
les
movsl
imul
daa
scas
and
nop
push
pusha
loopne
mov
fsubl
inc
insl
add
or
nop
add
shll
pop
dec
daa
jle
pop
jne
xchg
outsb
fs
jne
sub
bound
lea
imul
out
scas
shll
jmp
lcall
jns
ret
pop
sub
lret
leave
push
repz
inc
dec
cmp
sahf
sahf
aad
sbb
shr
in
jo
mov
pop
outsl
jle
jl
int
sbbb
or
ffreep
xchg
mov
jns
mov
adc
in
ds
jns
gs
adc
aam
push
jg
sub
test
out
xor
lods
sub
sbb
stos
out
mov
addr16
dec
sub
inc
xlat
mov
into
adc
mov
icebp
sbb
and
mov
aaa
das
dec
cwtl
push
stos
xchg
enter
push
xchg
mov
fwait
in
int3
sbb
xor
mov
movsl
lcall
adc
push
push
adc
mov
lods
mov
lock
sub
or
dec
cli
adc
test
add
dec
push
xchg
adc
mov
loope
pusha
xchg
jmp
push
push
dec
repz
sbb
mov
arpl
sbb
cmp
push
cmp
faddl
cmp
mov
jg
test
cmp
mov
scas
rdpmc
ds
movsl
fiadds
add
sub
jo
mov
cmp
pop
sbb
push
stc
sbbb
mov
in
gs
mov
sbb
les
pop
lret
loop
or
mov
out
adc
addl
js
xor
sub
push
inc
xchg
scas
repz
mov
ret
push
add
mov
lret
call
in
in
dec
insb
rcrb
push
xchg
out
adc
pop
dec
cltd
js
sub
mov
mov
cmp
dec
cwtl
pop
mov
lods
mov
hlt
xchg
js
xor
jnp
jns
movl
popf
jp
or
mov
mov
mov
cmp
sbb
add
es
pop
xor
lock
mov
ret
adc
popf
loopne
rcll
aaa
nop
pushf
in
push
lcall
and
cld
rolb
sbb
and
mov
xorb
test
mov
xchg
or
ret
idivl
push
push
hlt
stos
call
daa
pop
pop
repz
ds
testb
mov
xor
aas
mov
and
js
inc
into
fisttpl
cmp
xor
and
add
mov
push
lahf
and
push
lds
adc
inc
cmp
sahf
outsb
orb
mov
outsb
sti
mov
xchg
inc
scas
lret
fbstp
xor
pop
dec
cli
test
rol
xor
or
inc
fidivrs
adc
pop
ficoms
and
mov
sbb
push
mov
mov
pop
pop
mov
lcall
lret
addr16
ss
pop
iret
push
jl
mov
sti
push
sarb
out
lock
dec
mov
mov
push
or
add
int3
inc
cmp
sub
mov
adc
mov
sbb
cmp
or
jbe
sahf
mov
push
cmp
shll
arpl
inc
and
stos
iret
xor
mov
cmpsw
in
and
out
lods
enter
loope
inc
cmp
push
stc
lret
push
cld
push
push
push
neg
push
xor
mov
jbe
xchg
add
ficoml
js
xor
roll
dec
leave
adcb
fwait
pop
sub
aas
in
in
fsubr
pop
mov
sbb
adc
jo
iret
sahf
add
sbb
xchg
out
sbb
xor
xchg
sub
test
mov
add
frstor
xchg
stos
xchg
call
sbb
and
pop
inc
jno
mov
and
push
inc
dec
aas
bound
enter
xchg
cmp
aaa
iret
test
sti
or
or
mov
scas
jb
add
sub
cmc
cli
fisubs
push
leave
inc
ds
lret
aam
test
mov
push
call
sbb
mov
leave
cmp
ror
popa
add
add
jmp
outsb
insl
gs
call
stos
mov
call
adc
fnstcw
incl
mov
mov
sub
test
aam
loopne
aaa
repnz
fadds
push
sub
xchg
inc
adc
dec
cs
cmp
or
mov
icebp
jl
cmp
jae
jae
fwait
xchg
add
jp
or
int3
pop
js
add
mov
adc
jb
or
popa
cwtl
jb
and
flds
inc
sarl
pop
jae
mov
jnp
jle
xor
jns
cmp
test
out
ljmp
sbb
mov
aaa
inc
roll
popf
rcrb
push
xlat
stc
mov
aas
mov
inc
and
sbb
dec
mov
subl
xchg
push
cmp
sbb
jmp
push
cmpsb
pop
adc
mov
push
inc
out
lahf
js
mov
jnp
sbb
mov
lret
sbb
in
pop
mov
fsub
jmp
xchg
lock
sub
bnd
push
cmp
add
data16
jmp
and
rol
add
cmp
or
ljmp
and
cmp
xchg
cmp
jmp
and
cmp
xorl
ss
mov
inc
loopne
pop
add
cmp
inc
mov
push
adc
sbb
push
movsb
fistpll
insb
xor
sti
jmp
mov
sub
sub
test
cld
xlat
aas
and
adc
insl
xchg
push
inc
cli
rorb
pop
repnz
and
mov
insl
das
push
xchg
xchg
test
loope
out
add
pushf
movsl
les
cmp
xchg
dec
shll
mov
nop
add
std
or
std
sbb
lock
or
push
inc
inc
aaa
out
ret
std
idivl
mov
inc
jl
xchg
push
jo
sub
dec
sti
fsubr
cwtl
push
xor
mov
cld
mov
std
mov
adc
pop
mov
sub
xlat
repz
std
sbb
mov
sarl
leave
ficompl
aas
xchg
adc
cld
dec
jo
dec
jp
pop
sbb
in
scas
outsl
push
imul
xchg
mov
mov
imul
lds
inc
mov
xchg
mov
pop
shrb
fldenv
cmp
xchg
mov
mov
enter
imul
cwtl
pop
test
std
cmp
add
out
lods
addb
jle
lcall
mov
fnstcw
shll
xlat
xchg
xor
mov
and
movsl
sbb
fisubs
pop
subb
imul
lods
inc
rcr
sar
mov
int
ret
fmuls
and
pusha
adc
out
insb
sub
lcall
cmp
cmpsb
loope
xchg
adc
push
cmp
mov
data16
sub
mov
add
cmc
addr16
mov
or
sti
aas
push
adc
arpl
jmp
mov
pop
pop
rclb
pop
stc
and
jae
mov
sbb
pop
ret
push
test
xor
inc
cmp
les
inc
sar
and
int
aas
mov
outsl
lcall
aad
pop
fisubrs
test
pop
pop
in
jbe
nop
test
xchg
push
shll
in
push
arpl
pop
mov
dec
gs
popf
popa
pop
jp
pop
xor
jg
mov
inc
stos
adc
insb
loope
mov
xchg
push
xchg
xchg
pop
clc
icebp
pushf
subl
mov
andl
mov
lret
mov
adc
jne
pop
int
std
dec
clc
push
movsl
sarb
cmpsb
adc
add
fdivr
mov
dec
mov
mov
or
mov
decb
mov
mov
in
leave
bound
pop
pop
ficoms
shrl
cmp
scas
aas
cmp
fsubs
leave
nop
pop
test
inc
mov
jl
into
mov
je
cmpsb
pusha
or
push
dec
dec
hlt
imul
mov
mov
ret
push
xor
lds
test
mov
movsl
xor
and
mov
cmp
in
hlt
leave
popa
dec
mov
and
loope
inc
outsb
fmull
mov
lret
stos
and
adc
push
popa
repz
orb
add
arpl
and
sti
addl
xchg
mov
xorl
mov
aas
jg
arpl
sbb
loopne
testb
xchg
inc
mov
shr
xchg
add
fisubrs
lcall
add
mov
lea
cltd
dec
lea
inc
adc
inc
shlb
jge
aam
out
fwait
mov
rol
sub
push
shr
js
jmp
sbb
sub
push
cmpsl
pushf
add
fiaddl
sub
xorb
fisttps
mov
inc
lea
jb
pop
jl
mov
push
test
xchg
pop
stos
out
xchg
adc
or
xor
inc
outsb
cld
push
nop
nop
fcoms
lods
push
mov
cmp
cmp
or
stos
mov
xor
xchg
into
fmuls
loop
stc
inc
or
and
imul
xor
jbe
push
pop
push
or
sbb
jo
push
pop
shll
out
in
dec
cmp
fwait
mov
mov
rcrb
pop
dec
jns
in
inc
lret
pop
or
lcall
test
mov
fwait
pusha
inc
std
push
inc
adc
fsubr
cmp
xchg
pop
in
addb
sub
mov
lahf
jb
outsl
push
test
jnp
movsb
or
cmp
xchg
jno
repz
sub
cmpsb
lods
pop
pop
mov
push
or
mov
mov
sbb
mov
imul
jbe
push
lret
cmp
xchg
test
lret
cmpsl
insl
mov
cs
push
cmpsb
daa
mov
or
xor
lahf
pop
inc
addl
inc
or
call
dec
lcall
arpl
mov
or
jbe
push
sub
ds
popf
mov
push
jle
sbb
ret
sbb
les
xchg
push
aad
jl
xlat
mov
ja
daa
in
pop
or
out
aad
iret
or
push
lahf
stos
jae
dec
insl
in
int3
ss
inc
clc
call
imul
dec
jo
call
jg
fisubrl
andb
pop
push
pop
icebp
sarb
inc
or
int3
or
sbb
testl
push
call
insb
and
ficoml
in
scas
stos
into
inc
les
shlb
lods
js
outsb
std
inc
ret
jne
cmpsl
jnp
fistpll
outsl
xchg
divb
jmp
push
cmp
jmp
push
pop
pop
cld
xchg
outsb
test
sub
add
pop
enter
xor
cmpsb
push
sbbl
enter
repnz
pop
fisubs
xlat
in
xlat
sbb
fincstp
inc
mov
xor
loopne
mov
enter
mov
aad
fildll
jns
fldenv
dec
and
inc
xchg
add
and
pop
adc
addr16
incl
test
adc
scas
xchg
shr
mov
sub
xor
js
dec
xchg
lock
lea
faddl
loopne
fcmovne
jmp
and
imul
out
push
int3
les
jge
cmc
xor
jae
sub
add
ljmp
stos
and
popf
or
insl
aaa
es
inc
call
cli
les
scas
lock
rorl
mov
jno
mov
icebp
in
rcll
or
adc
sar
sahf
mov
pop
push
call
inc
push
mov
pop
push
outsb
aas
sbb
adc
mov
test
leave
lock
adc
hlt
jge
incb
shrl
cli
push
add
std
mov
push
cmc
mov
push
ret
adc
test
in
add
xchg
xor
add
adc
pop
jp
insl
mov
sub
aaa
lods
test
push
inc
sub
mov
sbb
sub
sbb
xor
mov
fisttps
push
xlat
fwait
hlt
mov
and
mov
lret
xchg
pop
int3
sbb
mov
testb
mov
mov
xchg
sbb
jbe
daa
jecxz
pop
popa
jo
cmp
xor
mov
jge
ljmp
cli
fwait
inc
dec
pop
iret
movsl
je
add
adc
outsl
pop
bnd
aad
stos
add
sub
test
mov
sbb
lret
les
dec
ss
out
loopne
int3
mov
xor
mov
sub
push
sub
in
add
int
push
ficomps
sbb
gs
jne
mov
inc
pop
lods
push
stos
data16
mov
xchg
jg
lods
mov
mov
mov
xchg
push
fidivl
push
cltd
ret
jne
push
jb
xchg
lock
cmp
pop
arpl
xchg
xor
pushf
loopne
pop
pop
and
or
jo
test
mov
aaa
iret
fidivrl
or
or
cld
pop
imul
nop
xchg
ss
rclb
and
lahf
stos
dec
or
xor
ficoms
leave
fildll
and
mov
adc
jl
sub
test
out
pop
add
push
mov
arpl
pop
divl
pop
or
sub
jmp
mov
inc
lock
mov
les
outsb
scas
lods
xor
jmp
pop
push
pop
mov
mov
cmp
mov
repnz
rclb
push
lea
add
enter
popf
mov
rcrl
inc
fsubs
insb
cmp
leave
cmpsb
out
dec
roll
xchg
jnp
lcall
ret
adc
adc
cltd
pop
sti
adc
pushf
femms
mov
xlat
push
push
add
lcall
pop
stos
sbb
adc
rolb
push
lahf
shlb
fnstenv
lahf
or
mov
ret
sbb
incb
xor
outsl
cmc
lds
repnz
mov
fimuls
ret
cwtl
insl
loopne
pusha
adc
xor
pop
cs
push
cmp
xor
int
cmpsl
stos
mov
and
xor
imul
jge
pop
out
insl
and
or
nop
rolb
push
ja
arpl
pop
inc
jmp
shll
mov
add
pushf
push
sub
xchg
or
aas
sbb
adc
ret
lret
hlt
sahf
jp
les
push
jno
mov
imul
jle
cli
push
stc
cmp
aad
and
std
int3
push
push
dec
adc
jle
leave
xchg
sti
lds
mov
xchg
or
mov
mov
inc
fdivl
aad
test
gs
xor
paddsw
lret
es
aam
out
je
sub
push
inc
jmp
lcall
jnp
lahf
andl
or
les
test
loope
inc
cwtl
push
sub
fs
cli
push
lods
push
out
xchg
fimull
dec
xor
adc
inc
fwait
jns
stos
inc
add
movsl
imul
jnp
mov
fidivs
or
daa
shll
fildl
out
fdivs
add
inc
in
or
inc
int3
cwtl
mov
negl
xchg
clc
sbb
and
pop
mov
test
rcr
insb
inc
or
jnp
daa
jmp
hlt
and
sub
int3
sub
scas
lret
cmp
rolb
xchg
in
cmp
lret
dec
sahf
or
rcrl
sbb
xchg
mov
mov
and
xchg
or
jbe
jge
mov
fadds
clc
imul
mov
popl
test
xchg
daa
loop
push
insl
aad
mov
mov
xchg
add
and
and
jl
or
mov
inc
icebp
mov
inc
ss
adc
dec
mov
dec
in
test
and
insb
pop
les
into
jp
call
icebp
mov
lahf
sti
cmpb
inc
pop
fsts
stc
mov
sub
imul
adc
ss
mov
into
sub
cmp
mov
xor
shl
iret
cmp
shrl
push
mov
pop
pop
movb
push
pop
enter
sbb
mov
or
es
fwait
scas
xor
lods
mov
test
mov
arpl
insb
inc
inc
lahf
movsl
in
jno
js
hlt
xchg
sub
cld
push
insl
hlt
arpl
or
hlt
out
call
test
cs
sbb
push
jecxz
lea
lcall
dec
movsl
jge
mov
dec
lds
cwtl
mov
sub
add
pop
or
and
lds
mov
jnp
xor
add
popa
or
lret
jo
and
or
cmp
sub
rolb
push
cwtl
xchg
or
imul
cmp
mov
mov
data16
in
stos
outsb
add
dec
and
cs
pop
mov
sub
mov
sub
push
es
cmp
mov
adcb
sbb
bound
push
dec
fiaddl
loopne
mov
push
push
or
xchg
mov
pop
sub
xor
insl
push
lods
cmpsl
stos
jmp
mov
sbb
inc
mov
mov
mov
push
mov
pop
loope
arpl
sar
push
jae
out
xchg
mov
loope
sub
sub
xchg
sub
icebp
and
insl
cmp
mov
cs
pop
and
scas
jle
jns
sub
pop
and
shrl
inc
jg
add
adc
cmpb
sub
mov
les
ds
cmp
mov
jo
faddp
mov
js,pt
data16
movsl
fldenv
adc
cmp
testb
mov
sti
xor
xor
aad
out
dec
cmp
test
mov
scas
jecxz
stc
or
or
sarl
inc
bound
clc
addl
lcall
push
push
scas
mov
sti
sub
lret
sahf
xor
and
les
pop
mov
mov
dec
mov
or
and
stos
xchg
jnp
cmp
mov
mov
addb
xchg
mov
inc
cltd
cmp
sub
push
xchg
mov
dec
jge
jp
lret
dec
xor
rcll
pop
aad
test
ds
sub
fldt
aam
add
in
inc
cmpb
js
or
mov
test
jbe
into
aaa
sar
dec
int3
sub
inc
test
pop
mov
sbb
pop
xchg
mov
inc
or
and
adc
or
lcall
xchg
aaa
mov
imul
das
mov
xor
jmp
xchg
jo
pop
or
jmp
sub
push
test
pop
into
xor
ficoml
mov
bound
fcoml
rcll
daa
fcomip
lahf
sub
sbb
jnp
out
arpl
add
xchg
push
rorl
sub
sahf
ficomps
push
fnstcw
popa
mov
sbb
xor
mov
loopne
aas
orl
cmp
inc
jecxz
jo
pop
inc
jl
or
test
mov
mov
inc
mov
std
pop
test
push
pop
cmp
add
mov
and
xor
push
in
je
andb
add
xor
jge
sub
ss
inc
data16
pop
cmp
adc
xchg
inc
add
jmp
scas
lcall
insb
push
cmp
add
jb
cmp
xchg
fidivrl
dec
sub
mov
testb
insb
test
sahf
adc
cmp
push
inc
lds
aas
loop
fs
push
jmp
xchg
cmp
fisubrs
jo
das
clc
push
adc
insl
mov
and
aas
add
cmc
pushf
adc
test
adc
arpl
xor
lds
inc
mov
call
lock
imul
cmp
lret
xchg
repnz
mov
adc
lock
outsb
inc
jmp
or
sbb
stc
dec
ret
in
pop
or
or
daa
clc
adc
nop
jne
sbb
in
jbe
icebp
jmp
add
arpl
nop
hlt
ja
enter
mov
pop
into
or
jnp,pn
ss
inc
xchg
inc
fsubp
cwtl
xchg
sub
mov
add
or
xchg
jmp
adc
mov
arpl
iret
inc
dec
cmp
inc
cld
popf
xchg
ds
xchg
imul
inc
and
sahf
or
or
push
push
inc
jge
pop
sarl
in
adc
push
in
imul
shr
daa
pop
xchg
and
jno
cwtl
sub
push
fildll
icebp
lcall
movsl
std
ja
adc
insb
pop
adc
bound
xlat
repnz
pop
test
adc
and
ret
outsb
sbb
pushf
mov
mov
gs
lea
adc
jecxz
addl
lret
cmp
xlat
dec
pop
lret
jl
call
icebp
pop
imul
clc
sti
stos
xchg
mov
and
into
inc
mov
lret
cmp
inc
xor
movsl
popf
fisubrs
loop
xor
ja
imul
out
leave
and
pop
dec
jae
sub
jle
or
mov
dec
repz
fcoml
test
cmpsb
cmp
stc
push
es
shll
shr
in
mov
add
push
mov
enter
or
daa
popa
inc
int
cmpsb
cmp
xchg
pop
mov
fwait
insl
push
jno
sub
sub
adc
sarb
jge
xchg
ja
sub
mov
or
pushf
rcr
cmp
ljmp
call
shll
jg
out
call
stos
stos
outsb
je
shrl
repz
or
mov
sub
rcrb
pop
mov
mov
xor
mov
inc
dec
shr
fimuls
push
sahf
pop
sti
cltd
inc
jecxz
pop
lret
cwtl
pop
fisttpl
dec
sbb
aam
loop
xchg
xchg
xor
ret
test
and
sti
out
add
inc
xchg
ljmp
mov
xlat
enter
outsb
cli
cmpl
pop
popf
mov
mov
mov
and
mov
pop
xlat
xchg
pop
pop
enter
xlat
shll
cmp
movsb
js
sbb
dec
dec
test
cmp
dec
lcall
sub
fmul
or
pop
leave
loope
cmp
hlt
jg
jno
push
inc
sbb
jp
fcompl
sti
inc
pop
mov
mov
enter
inc
cmp
pushf
mov
mov
shl
cmp
inc
mov
adc
mov
sub
jb
repnz
mov
add
int
push
scas
xchg
jg
cltd
push
mov
xchg
stos
mov
inc
and
mov
fisubrl
mov
ret
or
stos
scas
sub
out
loop
pushf
arpl
xor
loop
sarl
sub
sub
cmp
or
ja
call
add
mov
fadd
gs
push
scas
sti
arpl
jmp
dec
pop
mov
adc
xor
jp
test
test
jg
sbb
out
out
scas
jge
in
sbb
les
sbb
jno
add
sbb
mov
xchg
xorl
xchg
pop
inc
jecxz
ja
sbb
add
pushf
stc
js
sbb
lcall
mov
mov
dec
pop
cmpsl
xchg
sarb
push
fistpl
sbb
lcall
push
out
sbbb
xchg
sbb
popa
std
push
push
ret
adc
jnp
inc
jle
jmp
and
mov
fwait
or
xchg
lret
rcl
iret
lods
adc
hlt
pop
and
loope
addl
pop
fwait
daa
aam
rcrb
xor
addr16
ds
jb
ficomps
cmp
or
pop
js
mov
jge
pop
jmp
test
cmp
jae
dec
xchg
pop
jno
or
adc
mov
and
loop
cmp
mov
sbb
sub
mov
jecxz
mov
cmp
cli
ret
enter
pop
xchg
xchg
iret
pop
mov
ds
sbb
rcrb
add
xor
mov
mov
mov
cli
lods
cmc
leave
push
out
push
xor
gs
sbb
inc
in
ret
push
ret
sbb
call
popa
or
shrb
mov
xchg
icebp
dec
xchg
into
cwtl
shrb
push
mov
push
mov
stc
dec
cmp
mov
mov
add
lea
rclb
in
test
out
sbb
and
inc
scas
fistpll
cmp
aas
cmp
cld
je
sbb
nop
ret
push
push
cli
inc
inc
or
xchg
int
add
adc
andl
mov
xchg
gs
mov
fs
fisttps
inc
adc
jae
insl
inc
push
inc
out
inc
mov
imul
ss
cmpsb
testl
xchg
add
lods
gs
push
or
xchg
iret
je
jb
add
jne
lods
jge
sbb
xchg
lds
pop
xchg
cli
jp
insb
mov
outsb
adc
sahf
mov
sarl
out
sub
andl
mov
mov
insb
mov
icebp
test
rolb
sbb
sahf
andl
in
inc
int
in
shll
jecxz
and
mov
add
rcr
cmp
aam
imul
pop
ja
cmpsl
xchg
sbb
mov
insl
std
cld
jge
and
pop
je
and
mov
inc
mov
shrb
popf
xorw
btsl
movsb
mov
jbe
aam
sbb
mov
outsb
loop
cmp
or
add
dec
cld
adc
mov
dec
jnp
sbb
mov
xchg
mov
cmp
in
dec
sub
das
push
fyl2x
xor
subl
pushf
pop
sub
fistpl
xchg
mov
inc
fwait
push
je
stos
mov
pushf
jecxz
ljmp
push
sbb
add
or
pop
inc
mov
sbb
add
dec
mov
loopne
ja
pushf
sbb
mov
stos
inc
dec
add
inc
data16
cmpl
and
lret
dec
outsb
mov
test
and
movsl
imulb
arpl
xchg
loop
out
or
fwait
mov
imul
pop
ss
outsl
pop
sub
push
pop
inc
or
je
cmp
or
jbe
in
mov
in
ror
rclb
fwait
jbe
icebp
inc
aas
xchg
fbld
mov
jp
or
inc
and
fwait
loop
inc
xchg
into
jae
fcomp
std
sbb
push
cs
jns
int
icebp
push
xor
mov
fldl
mov
jne
aas
xchg
loop
imul
or
movsb
dec
fistpl
icebp
imul
jl
adc
lret
lcall
ja
ja
repnz
mov
mov
xchg
sbb
mov
popa
mov
xchg
hlt
push
popf
xchg
and
lods
inc
ret
int3
aam
sti
mov
outsb
stos
xchg
xchg
adc
pop
fildl
or
pop
ljmp
jp
int
out
in
adc
stos
sub
cs
mov
fists
pop
inc
dec
adc
ja
mov
sbb
in
adc
xor
fstpl
jge
add
jle
fsubrl
or
repz
push
jecxz
fwait
sbb
xlat
hlt
fwait
push
nop
es
and
sub
icebp
or
data16
add
aaa
sbb
and
push
sub
add
rorb
testl
ret
test
jmp
adc
sar
xlat
inc
xchg
xchg
xchg
scas
gs
outsb
fcomip
or
incb
dec
jge
dec
mov
and
bound
mov
div
push
jae
ljmp
mov
enter
testb
pop
jp
jmp
int3
data16
and
popf
inc
inc
xchg
testb
loope
cmp
aaa
mov
insb
and
insl
rolb
clc
shll
aas
xor
mov
cmpsb
mov
sbb
testl
mov
scas
xchg
addr16
shlb
pop
fs
ja
cs
je
add
aaa
inc
loope
test
lret
fisttps
cmpsb
push
add
mov
lret
ljmp
lcall
ficomps
fidivs
in
and
adc
xor
fists
orl
gs
push
jno
and
cmp
mov
ja
clc
out
rcrl
fistpll
loopne
shlb
ret
arpl
inc
and
xchg
inc
outsb
xchg
mov
sub
push
mov
pop
mov
mov
aam
sti
pop
and
inc
pop
pop
das
jmp
xchg
mov
mov
sbb
lcall
or
lock
and
xchg
mov
in
nopl
in
pop
inc
outsl
sbb
aam
xor
cltd
stos
push
sbb
xchg
in
shl
xchg
int3
test
stc
fwait
dec
xor
mov
mov
inc
sub
mov
mov
cmpb
repz
and
or
inc
incb
mov
jle
imull
xorl
imul
iret
movsl
shlb
or
outsl
pushf
mov
and
fdivs
imul
in
mov
push
sbb
pop
cltd
subb
shrb
push
jnp
push
mov
dec
inc
mov
addr16
cwtl
frndint
jae
jle
dec
shlb
sbb
pop
xchg
push
in
ret
nop
pop
add
sub
cmp
cmp
add
xchg
mov
lock
sbb
cs
jmp
add
add
lret
cld
pop
pushf
mov
dec
fstpl
outsl
push
lods
cmc
or
sbb
push
pop
rclb
and
push
stos
fbstp
iret
jnp
rol
xchg
jne
fdiv
sti
push
jne
insl
mov
add
add
jg
es
inc
mov
adc
jge
mov
leave
mov
outsb
rolb
sub
jno
dec
cwtl
mov
cmp
and
xor
aam
xor
jmp
push
sub
out
mov
stos
push
xor
pusha
xchg
mov
mov
in
imul
dec
movsb
repnz
enter
lds
pop
in
cmp
dec
sbbb
xor
cmpb
sbb
sti
insb
xchg
hlt
sbb
sub
pop
inc
sbbl
pop
mov
das
mov
pop
adc
mov
sub
mulb
repnz
add
sbb
rorl
mov
ficoml
dec
outsb
in
jecxz
subl
sub
mov
add
imul
jge
pop
and
inc
mov
out
addr16
orl
ret
test
stc
push
mull
push
enter
dec
adc
jo
jmp
push
rolb
push
xor
sub
sbbl
lods
or
add
hlt
add
in
jl
push
push
mov
push
cmp
cmpb
ret
aam
adc
stos
mov
jge
xchg
push
cli
push
cli
in
movsl
lcall
and
lds
pushf
sub
xlat
xor
push
add
je
outsb
mov
aad
mov
popf
lret
add
mov
icebp
cwtl
push
jmp
jbe
incb
ss
cmp
pop
jno
jl
and
pusha
orl
loope
and
xor
ret
mov
xor
push
dec
nop
xor
mov
lcall
lea
jb
and
shll
aam
xlat
mov
cmp
jns
mov
push
xchg
cltd
sub
stos
inc
dec
mov
test
lds
cs
fcompl
cmp
enter
jo
push
cmp
outsl
test
lds
mov
shrb
rcrb
inc
data16
cli
or
fsubl
xchg
mov
inc
in
pop
ja
and
fcomi
jg
icebp
out
insl
mov
add
stos
dec
js
inc
jbe
daa
mov
or
push
jae
scas
sbb
inc
sub
out
dec
sub
jae
int
inc
outsl
pop
mov
out
lds
pop
mov
fisttpl
jg
pop
fsub
mov
fisubl
js
xchg
mov
sbb
dec
mov
cwtl
es
test
jecxz
mov
int
stc
out
lcall
movsb
fidivrl
andb
sub
xchg
loop
das
push
loopne
icebp
mov
in
outsb
adc
ds
inc
add
movsl
outsb
std
repnz
sub
xor
or
sub
dec
pusha
data16
jae
mov
adc
hlt
jae
mov
xchg
fdivs
mov
bswap
enter
int3
inc
or
jg
movsl
adc
rolb
ss
mov
push
das
jmp
mov
push
test
ljmp
aam
outsl
mov
std
stc
popa
lahf
fistpl
mov
bound
cld
popa
or
in
cmp
outsl
mov
dec
push
xchg
aaa
test
and
jg
rorl
mov
sub
sbb
or
cs
ret
sub
cld
movsb
cs
popf
xor
mov
mov
in
enter
inc
out
testl
or
incb
sbb
and
mov
add
gs
and
clc
or
out
leave
ljmp
push
xlat
and
testl
mov
repz
push
pop
in
xor
imul
es
rcr
sub
jmp
or
je
cld
push
push
mov
jnp
outsl
mov
pop
fiadds
jmp
popa
pop
sub
jecxz
xor
dec
and
cli
xchg
jno
jg
movsl
jne
mov
mov
pop
jae
test
jne
sti
pop
pushf
mov
popa
dec
cmp
ljmp
aam
ljmp
jp
test
sub
lret
adc
cli
xchg
ror
sti
ss
push
add
push
call
adc
push
xor
pop
inc
hlt
popf
icebp
push
add
mov
cltd
iret
add
dec
aad
int
xorb
pop
cltd
les
add
push
mov
jo
rcrl
fbld
scas
das
es
es
pop
inc
dec
push
andl
int3
xor
std
adc
imul
shll
push
ret
xchg
mov
mov
imul
add
jmp
sub
adc
movsl
in
pusha
shr
aam
ss
adc
mov
dec
cwtl
xchg
dec
pop
pop
in
insl
sar
and
fimull
mov
lcall
out
out
mov
mov
inc
icebp
jbe
popf
or
adc
mov
imul
push
icebp
js
cmpsb
jge
pop
out
insl
xlat
aad
out
and
jg
cmpsl
and
stos
pop
sahf
decb
lock
pop
jp
aam
inc
stos
or
push
and
fisubs
xor
cli
sbb
add
cmpsl
movsb
outsl
mov
and
sbb
fstl
jmp
push
push
icebp
sahf
add
push
sub
ds
sbb
lods
in
inc
mov
mov
sub
aaa
cmp
dec
jnp
pop
into
out
ja
in
nop
add
or
sub
popa
fadd
int
outsl
scas
enter
in
in
js
mov
mov
ds
dec
jp
sbb
lock
jp
daa
push
scas
shlb
cmp
ja
inc
fcmovnbe
movsb
lcall
aas
lods
mov
popf
aaa
movsb
xlat
int
movsl
cmpsl
inc
fidivrl
mov
jns
sbb
sub
pop
je
pop
pop
mov
pop
cmp
push
dec
test
test
in
push
sbb
adc
lret
push
jb
arpl
pop
imul
lock
clc
or
push
scas
push
outsb
arpl
sub
push
pushw
out
push
outsl
dec
lock
in
testl
sub
imul
loopne
loopne
push
cmp
cmp
ljmp
adc
lea
icebp
or
shrl
pop
ret
cld
pop
aad
jge
lcall
insb
add
fistps
je
in
mov
das
sub
test
ds
in
jb
jg
inc
xor
jbe
dec
mov
ljmp
add
mov
ss
push
iret
sbb
jno
ja
pop
movl
scas
in
push
pop
jb
sub
add
or
int
mov
rolb
mov
xchg
push
or
sbb
inc
push
push
adc
sub
dec
sti
les
cmpsb
rcrl
jecxz
mov
fwait
and
push
add
in
xchg
sub
rorb
jmp
sub
sarl
inc
rcrb
dec
fisttpll
mov
sbbl
fisttps
divb
or
xor
dec
pop
lcall
sbb
dec
and
leave
push
adc
jmp
out
fldcw
popa
mov
cmp
mov
mov
cmp
ljmp
in
dec
jnp
addr16
xor
inc
pop
out
nop
mov
mov
jb
push
scas
mov
cmc
sti
mov
out
mov
and
imul
test
gs
je
mov
push
cmp
sbb
cs
clc
std
xchg
jg
mov
clc
adc
push
or
cltd
push
cmp
imul
sbb
push
lcall
cld
mov
jge
lods
push
daa
push
push
cltd
adc
pop
movsb
stos
icebp
popf
or
cmp
dec
cmp
xchg
mov
sbb
cmpsb
ds
and
movsb
fwait
movsb
push
cwtl
out
mov
xchg
push
pop
xchg
mov
loopne
cmp
lcall
dec
xchg
in
icebp
mov
ret
dec
enter
sbb
imul
mov
ss
cmp
sub
out
mov
sub
clc
ss
sub
imul
push
imul
dec
mov
rclb
cld
lock
repz
sub
push
or
or
pop
xor
pop
jle
call
sub
std
push
daa
dec
stos
insl
data16
cli
sbb
mov
push
inc
jle
call
sarb
inc
pop
cld
or
into
xor
cmc
xor
jne
or
adc
in
pushf
and
jne
xchg
scas
es
mov
add
add
and
out
mov
inc
test
aas
stc
inc
and
mov
cltd
inc
inc
lret
lds
mov
lahf
int
push
or
stos
xchg
lret
inc
or
add
pop
jl
adc
sbb
xchg
shl
jmp
aas
push
sub
or
test
dec
imul
cmp
ljmp
mov
xchg
dec
es
out
sub
cwtl
xor
fs
cld
adc
das
push
int
inc
mov
jl
arpl
add
mulb
in
and
fisubrl
xchg
xchg
ss
movd
popa
mov
push
jns
push
and
test
aam
dec
sahf
lahf
jns
pop
movsb
imul
push
jl
push
adc
mov
sbb
sub
adc
out
sbb
jge
push
or
fwait
and
cmp
jecxz
addr16
push
movb
and
cld
lcall
pop
sbb
repz
mov
ss
cmc
cmpsl
int
push
movsb
or
shlb
out
push
in
pop
jb
nop
pop
scas
adc
xchg
cwtl
icebp
xchg
iret
dec
mov
push
mov
cmp
jge
jmp
add
and
sbbb
cli
scas
repz
add
jmp
dec
xchg
xchg
mov
and
cld
sbb
adc
jle
xchg
fdivl
push
mov
or
and
scas
mov
cli
fcmovne
push
lcall
out
cmp
mov
insb
fldl
or
pop
data16
nop
es
cld
xlat
addl
pop
in
sarb
orl
xor
repnz
mov
ljmp
xchg
push
adc
test
cmc
push
and
add
fbld
into
add
or
fucom
rol
pop
lcall
sbb
and
ret
push
pop
add
jp
jecxz
push
xchg
popf
testl
stc
jne
hlt
mov
mov
fdivrs
push
xchg
inc
iret
jmp
pop
movsb
adc
pusha
cmp
inc
lock
push
mov
add
mov
icebp
nop
sbb
mov
jae
jno
decl
shl
push
repz
or
dec
scas
stos
sub
sub
sbb
cs
inc
mov
jae
sub
mov
sub
fwait
jmp
ss
mov
inc
mov
sbb
leave
cmp
mov
mov
iret
mov
dec
cli
mov
cmp
and
xchg
leave
mov
push
into
cltd
cmc
jmp
and
dec
sub
adc
cmp
mov
jmp
mov
lcall
and
cmp
cmc
adc
and
jno
inc
shlb
arpl
out
out
xlat
popf
in
es
jno
sub
xor
aam
cmp
notl
mov
fsts
pushf
mov
jae
push
jge
mov
arpl
cld
in
cmp
ljmp
dec
push
jecxz
dec
subb
std
ret
cmp
addr16
cmp
and
cmpsl
js
dec
ss
sbb
inc
adc
divb
xlat
fcmovnb
adc
cmp
or
loopne
jg
ficoml
pop
aas
mov
xlat
mov
dec
fcoml
jmp
adc
test
sbb
cld
ja
fidivrs
roll
pop
int
add
loop
insb
fmull
and
and
outsb
out
clc
mov
xchg
loop
cmp
dec
lock
popf
fcmovne
sbb
lods
dec
imul
outsl
loope
aaa
jp
push
mov
pop
and
mov
mov
movsb
gs
adc
mov
mov
test
jne
cltd
add
lods
stc
jno
cmpsl
xor
add
mov
shll
es
test
push
fadd
scas
xor
stos
push
cmpsb
stos
lret
subl
add
xchg
adc
test
push
add
cmp
add
lods
adc
ret
test
inc
nop
lock
repz
loopne
mov
mov
out
xor
ficoml
sti
add
cmpsl
pop
aad
aas
add
nop
xchg
mov
mov
sub
int
mov
lea
mov
inc
ret
inc
dec
dec
and
dec
out
divl
xor
xchg
add
hlt
lret
imul
pop
cmp
stos
pop
inc
popl
jle
xchg
fisubl
and
mov
leave
faddl
dec
out
sbb
jle
das
or
push
std
mov
rorl
add
jo
push
push
sbb
fadd
and
adc
mov
jge
mov
repnz
mov
add
icebp
pop
lahf
xlat
loop
mov
lret
sbb
push
in
xor
pop
cltd
mov
sbb
cld
xor
imul
push
mov
dec
cwtl
outsb
sbb
sbb
movsl
cmpsb
mov
and
sub
out
jns
xlat
pop
push
jmp
jmp
xor
loopne
test
or
mov
lret
je
add
hlt
sub
xor
and
pushf
sub
jmp
lret
mov
jne
fwait
xor
inc
push
mov
leave
rcrb
test
add
xchg
or
inc
stc
imul
lcall
pop
adc
test
loopne
push
addr16
test
lock
mov
xor
dec
push
xor
lock
add
inc
call
add
dec
imul
cmpsl
push
test
shrb
push
push
xchg
and
sbb
add
xor
in
js
and
decl
aad
pavgw
pop
imul
inc
push
mov
arpl
pusha
fiaddl
ljmp
xchg
mov
out
sub
cmpsl
stc
ljmp
add
mov
cli
idiv
mov
cmpsb
or
mov
fwait
sub
jnp
push
cmc
jecxz
das
xchg
push
icebp
lods
fildll
fiadds
sub
lods
and
sti
jnp
call
sub
pushf
sbb
jne
add
hlt
roll
aaa
fldenv
cmpw
imul
dec
fdiv
cmpsl
js
mov
mov
lock
xchg
jecxz
jmp
or
jle
mov
jmp
inc
sub
outsl
add
cmpsb
pop
dec
nop
dec
popa
out
dec
adc
test
adc
sarb
out
jb
xchg
movsb
ja
sbb
aam
jbe
cld
cld
in
adc
xchg
outsb
test
sarb
push
in
je
fdiv
lods
push
xor
add
pop
mov
pop
dec
sbb
js
pop
push
out
sahf
pop
inc
mov
adc
and
and
ss
je
ret
pop
jbe
inc
fs
inc
hlt
das
jge
std
fistps
xchg
loop
and
aas
mov
les
sbb
sub
shll
dec
push
cmpsb
sbb
jns
or
addr16
xchg
mov
jge
or
push
xchg
sbb
inc
les
push
xchg
xchg
movsb
inc
idiv
lcall
mov
enter
fisttpll
repnz
xchg
fadd
push
test
lahf
cmp
in
in
and
and
rcr
push
es
dec
inc
dec
ja
ja
inc
subl
mov
sti
mov
adc
insl
sahf
adc
movd
xchg
fwait
sbb
mov
mov
test
fistl
mov
push
pop
dec
sti
test
cmp
out
rcrl
insb
pop
add
xor
jbe
call
scas
mov
pushf
mov
sub
add
lods
jno
outsb
mov
rorb
test
das
xor
adc
out
or
xor
push
ljmp
dec
clc
stos
icebp
out
xchg
pop
movntq
out
push
or
ds
sbb
cmc
mov
mov
in
or
jecxz
jb
nop
dec
and
dec
push
test
icebp
inc
jge
divl
iret
dec
inc
fs
loopne
jo
sar
icebp
xchg
icebp
mov
shlb
dec
pop
dec
push
rolb
movsb
mov
xchg
add
add
int3
sbb
mov
ret
aam
inc
int
xor
pop
fsubs
dec
and
mov
cmp
scas
inc
cmp
and
mov
dec
sbb
push
jmp
xlat
roll
leave
sbb
mov
or
adc
jmp
adc
lds
fwait
xchg
add
sti
loope
xchg
cmpsb
jns
imul
js
sbb
leave
fwait
stc
add
movsb
gs
dec
adc
cmpsb
jbe
jecxz
dec
sbb
movsl
loopne
scas
jns
lcall
sti
lcall
fidivs
sbb
int
loope
inc
jle
push
fcoms
xor
and
std
inc
xor
dec
mov
sti
ret
cmova
or
popa
xchg
lret
scas
push
jnp
add
push
xchg
test
fimuls
cld
aaa
or
xlat
inc
cmp
in
adc
sahf
lcall
pop
scas
cmp
jbe
shl
loopne
jno
into
sub
lea
adc
js
pop
gs
lahf
pop
xchg
cmc
cmp
add
jle
sub
loop
scas
cmp
pop
gs
leave
dec
cmpl
test
and
std
sar
push
into
mov
inc
ds
decl
jne
ret
push
fcomps
in
mov
sub
xchg
icebp
push
mov
insb
lea
add
dec
xchg
mov
pushf
inc
and
adc
or
mov
mov
xchg
xchg
dec
loopne
incb
orb
fmuls
dec
and
movsb
xchg
mulb
mov
jecxz
jne
mov
xchg
adc
push
es
adc
inc
inc
loop
pop
mov
movsb
xor
and
enter
imull
sahf
sub
inc
outsl
cmc
dec
sub
scas
insl
jnp
mov
es
clc
cs
mov
add
stc
lods
jg
out
jo
sbbl
sub
or
stc
xchg
sti
movb
inc
push
xor
dec
out
test
mov
bound
hlt
aad
and
xchg
xchg
fsubrs
inc
or
dec
test
cwtl
je
fbstp
das
outsb
aas
mov
ss
sbb
outsl
dec
icebp
sub
xchg
sub
mov
mov
xchg
rol
negb
jnp
jne
cmc
sub
ljmp
cld
cmpsb
add
mov
inc
push
add
jmp
lods
xor
push
xchg
imul
dec
icebp
xlat
cwtl
jl
imul
into
pop
mov
adc
hlt
sysexit
btsl
or
push
int3
sub
or
dec
call
pop
dec
loopne
daa
ds
arpl
sub
xlat
dec
lods
sub
jbe
xchg
lock
cwtl
pusha
clc
subl
adc
add
fsubrl
xor
popf
out
jae
repnz
add
rolb
cltd
cmpsl
inc
cmp
cmp
test
pushl
int
add
push
xchg
bound
into
imul
mov
push
xchg
xor
pop
sub
xchg
pop
popa
push
and
xor
and
fsubrp
into
adc
insb
jge
int
push
jns
lret
pushf
and
enter
pop
pop
popa
in
pushf
jle
fadds
sub
jg
sbb
jle
and
in
pop
iret
and
div
jle
mov
rorl
mov
pop
int3
mov
mov
aas
test
xor
mov
loopne
insb
mov
jg
fidivl
adc
mov
sbb
fistl
in
adc
andb
and
jmp
and
ja
test
ds
mov
ret
inc
and
repnz
pushl
popf
loopne
cmpsl
dec
lods
pushf
pushl
or
push
cmp
outsl
sub
clc
push
movsl
inc
test
cmc
xorb
fimull
pop
mov
mov
insl
mov
xor
xchg
dec
jns
lret
push
sbb
es
and
imul
loop
out
out
inc
jne
int
and
cld
test
arpl
in
imul
mov
xchg
lods
sbb
mov
and
aas
leave
push
notl
sbb
adc
inc
ljmp
arpl
pop
sbb
pop
push
and
adc
jecxz
mov
jne
and
aam
jle
ljmp
les
mov
cwtl
ds
push
pop
pop
push
lret
inc
mov
sbb
into
jp
mov
imul
jno
popf
in
push
nop
das
xlat
push
movsl
mov
fdiv
jg
fists
adc
ljmp
mov
xorl
dec
jmp
pop
mov
in
xchg
fldt
mov
add
jl
lock
and
lret
mov
sbb
sbbb
movsl
pusha
imul
xor
mov
push
inc
in
stos
movsb
inc
dec
rcr
xor
mov
stos
push
roll
mov
ljmp
ljmp
mulb
call
fisttps
pop
sti
and
in
add
pop
lcall
xlat
insl
mov
gs
cs
cmp
xchg
add
hlt
fdivrs
mov
cmc
rcr
enter
pop
add
push
bound
adc
movsl
push
cwtl
and
mov
jle
mov
cmpsb
popa
sbb
icebp
fcoml
jge
jp
ret
and
mov
sbb
jg
mov
xor
movsb
sub
jb
xor
mov
xchg
add
pop
sbb
sub
popl
jmp
dec
ficompl
mov
testb
mov
xor
mov
xchg
shr
cmp
inc
or
add
or
les
mov
into
xor
push
ds
ja
mov
vmovaps
imul
cli
out
imul
mov
jge
movl
in
push
testl
push
dec
adc
jmp
cmp
and
pop
push
add
cmp
cmp
mov
movsb
cmp
int
xor
icebp
fs
imul
cli
mov
subl
dec
dec
js
and
mov
push
mov
mov
sbb
or
inc
movsl
std
sbb
jne
xor
jb
push
add
cmp
push
mov
pushf
xchg
mull
mov
call
jbe
mov
rcrb
push
push
sub
js
dec
into
cmp
add
push
xor
je
jbe,pn
mov
imul
adc
or
out
hlt
push
adc
nop
push
bound
inc
fstpl
aam
mov
popf
or
push
xchg
add
push
fwait
negl
xorb
idivl
loope
adc
or
inc
stos
cwtl
cmpsl
adc
clc
adc
cmp
pop
jp
ret
mov
jle
popa
pop
std
cmp
call
jecxz
xchg
gs
xchg
sub
jnp
jmp
sti
lea
jge
ja
cwtl
lcall
fidivl
mov
dec
insl
test
pop
push
mov
cs
insb
push
dec
cwtl
test
jmp
lods
fwait
pop
cmp
repnz
xchg
les
fstpt
pop
fs
imul
clc
jecxz
enter
cmp
mov
sub
xor
pop
pop
xchg
sbb
xchg
mov
dec
das
fisubrs
arpl
stc
push
es
ficompl
fisttps
push
repz
mov
negb
push
stos
mov
sbb
jns
test
push
xlat
popf
rcr
into
cmc
mov
xchg
xchg
notb
neg
bound
jle
dec
pop
jge
xor
mov
lret
sub
or
bound
js
clc
out
xor
addb
cld
js
jmp
jb
mov
lahf
push
fwait
shl
adc
adc
pop
lret
insb
shll
xchg
or
xchg
inc
mov
jo
fmul
pop
dec
out
mov
test
out
in
and
repnz
xchg
mov
ljmp
fidivl
jecxz
mov
jo
lock
mov
or
cmpsb
mov
jns
and
mov
lcall
dec
mov
jg
push
clc
mov
insl
test
ds
dec
int3
popf
sbb
shll
pop
repz
inc
inc
jmp
jae
sub
jge
dec
rolb
repnz
jae
sbb
iret
ja
push
sbb
int
movsb
pusha
lahf
mov
push
push
sbb
stc
cmpsl
or
sahf
sbb
ss
fdivrl
pop
andl
dec
xor
out
push
std
push
popf
imul
ljmp
add
scas
and
mov
clc
dec
es
loop
int
andl
outsb
ret
mov
mov
test
loopne
jle
sbb
leave
insl
fnstcw
out
sbb
push
mov
xchg
lahf
mov
jl
xchg
fmul
sar
xchg
lods
repnz
pushf
cs
xor
cwtl
or
mov
int3
jmp
in
sbb
leave
int
fistpll
out
xchg
andb
mov
in
sub
pop
lcall
cmpsb
aad
out
dec
pop
pusha
shrl
inc
addr16
mov
sub
fisubrs
adc
or
lods
jmp
push
cmp
cmp
fisttps
jb
xchg
inc
jge
and
add
and
ret
cwtl
jge
sbb
out
es
mov
push
int3
pop
xor
scas
in
jle
dec
fnstcw
sub
sahf
and
sbb
bound
jmp
inc
dec
fnsave
loop
arpl
lret
push
xlat
lock
negl
add
push
scas
out
mov
pop
repnz
testb
aad
incb
mov
cmpsl
out
and
jno
xor
xor
repnz
cmp
outsb
je
inc
add
adc
cmp
cwtl
cltd
push
and
fisubs
lock
dec
sbb
pop
and
xor
in
in
js
inc
jp
xlat
xchg
mov
cs
mov
mov
decl
cmp
jnp
pop
mov
aam
loope
rol
jge
push
cmp
jmp
jl
add
bound
mov
fs
or
adc
aaa
and
adc
lcall
addb
out
dec
pusha
mov
sar
aam
mov
xchg
insl
sti
mov
lret
loop
in
mov
cmpsl
adc
push
outsb
fprem1
push
and
movsl
push
imul
push
pop
cmp
in
jmp
and
out
push
stos
jae
mov
dec
cltd
mov
jo
dec
ja
in
pusha
xchg
shll
sub
pop
sub
cwtl
movsl
xchg
je
pop
xchg
mov
popa
pop
jb
push
sub
inc
mov
mov
push
push
cltd
pop
pop
dec
xadd
shlb
add
ss
jns
push
inc
jge
lcall
push
pop
mov
bound
sbbb
into
jmp
push
repz
push
js
sub
jl
testb
adc
add
jp
jg
test
mov
mov
or
repz
in
test
lcall
rorl
rolb
inc
mov
inc
lahf
enter
sub
jno
daa
push
push
pop
in
lock
dec
das
sbb
fistl
jl
in
hlt
mov
aad
sub
xchg
lea
rep
xchg
lret
xor
mov
adc
xchg
sti
mov
adc
cmc
js
dec
xchg
cmp
pop
xchg
or
sub
add
das
test
push
sti
sub
and
mov
fisubs
push
dec
jae
jecxz
test
or
leave
aas
mov
imul
pusha
cmp
aas
and
or
xor
in
add
sar
cmp
sbb
mov
dec
mov
sub
inc
sub
loop
mov
fidivrl
pop
int3
push
add
cmp
nop
in
pop
cmp
pushf
inc
adc
jle
xor
movsl
jno
mov
and
or
gs
adc
lock
nop
or
test
cmp
in
dec
scas
daa
mov
icebp
fnstsw
loopne
jae
cmp
mov
and
das
cmpsb
mov
jle
lret
das
jp
xchg
sbbb
sub
jge
ficomps
add
cmp
cwtl
std
mov
mulb
pop
or
adc
mov
adc
sarb
lock
into
mov
xor
popf
pushf
jmp
in
lods
mov
out
sarl
dec
int
jle
jl
push
stos
sub
scas
push
dec
cmp
push
in
inc
mov
add
lret
mov
leave
fidivs
inc
mov
shrb
scas
jae
rcll
xor
cmp
cmc
insb
push
jb
test
inc
xorl
jno
clc
adc
inc
jns
xchg
jo
mov
fisttpll
js
adc
pop
es
add
mov
cli
cmc
jl
pop
fsts
push
push
popa
sub
std
setle
adc
fwait
jmp
aaa
pop
or
xor
fstpt
shll
scas
das
ja
daa
jb
fsubrs
in
imul
add
sub
cmp
sbb
push
push
imul
pushf
mov
xchg
sub
mov
jns
out
sbb
xchg
sub
shll
out
movsb
jne
sbb
int3
mov
mov
push
das
outsb
cld
ret
or
dec
cmpsl
incb
aad
imul
fnstsw
xor
in
loop
and
inc
aad
pop
push
sbb
divl
sub
push
jmp
pop
fimuls
popf
in
mov
hlt
popf
inc
adc
push
and
push
or
add
add
xchg
adc
push
cld
cmp
out
pop
and
sub
pop
jns
bound
mov
repz
jl
outsb
mov
mov
mov
xchg
and
mov
and
shlb
scas
aad
sbb
cmc
inc
lea
loope
mov
idivl
mov
setns
sub
jo
or
xchg
movsl
cmp
xchg
in
stos
or
xor
xor
fdivp
loop
jp
sub
sbb
xchg
mov
push
cli
dec
shll
add
dec
or
fsubrl
fnstcw
in
and
lret
mov
adc
imull
imul
nop
imul
adc
or
push
xor
cmp
lcall
movsl
jo
test
pop
mov
dec
adc
dec
push
xchg
fstpl
stc
and
std
sti
pop
pop
dec
fnsave
mov
adc
sbb
dec
dec
dec
repnz
arpl
xchg
jg
xor
and
loopne
mov
mov
add
aaa
rclb
int
mov
int3
inc
jg
leave
and
shlb
daa
aas
push
loope
pop
mov
jns
xlat
push
insl
adc
xchg
cmpsb
int3
aad
sub
jne
js
xor
and
aas
fisttps
or
outsb
jns
xchg
lea
xchg
and
insl
pop
sub
insb
xor
mov
stos
pop
cmpsl
add
and
ljmp
xchg
into
add
mov
mov
insl
rorb
cmpsb
sbb
aas
and
mov
ret
call
ror
lcall
fdivs
movsb
lds
jmp
lock
imull
je
cmpsb
cmc
in
test
dec
into
insb
insl
mov
push
jmp
imul
arpl
les
out
cld
xchg
xor
pop
adc
mov
cmpsb
roll
xlat
cmc
jne
or
mov
adc
sub
dec
or
leave
or
push
flds
add
ss
adc
cmp
pop
lea
mov
inc
inc
xor
add
es
sbb
rcrb
inc
mov
fmull
push
dec
fadd
inc
mov
movsb
or
sbb
xorl
push
lods
xchg
fdivr
ret
mov
and
jbe
sub
fwait
adc
and
mov
jne
xchg
pop
sarb
mov
mov
iret
xor
mov
jno,pn
lock
incb
bound
js
stc
cmp
mov
add
enter
mov
and
les
inc
fisttps
fs
icebp
push
pop
cs
ljmp
fstps
inc
hlt
lret
call
add
jbe
loop
loopne
push
cmp
mov
lods
mov
add
cs
dec
outsb
shlb
pushf
jmp
lret
mov
jnp
dec
cmpsb
jl
incb
pop
jb
or
dec
xchg
pop
ja
mov
mov
inc
adc
push
shr
subl
sbb
clc
je
enter
cmp
inc
sub
lea
jecxz
and
iret
outsl
push
pop
xchg
sti
or
into
stos
inc
xor
add
and
push
loope
in
inc
dec
jns
arpl
jp
add
push
cmc
inc
sbb
cmp
call
and
mov
jge
push
mov
cld
xchg
das
sbb
and
lock
clc
xor
pop
adc
test
aad
frstor
nop
pop
jle
sbb
test
sti
imul
adc
aad
mov
or
sbb
das
push
packssdw
dec
rclb
adc
mov
lea
push
adc
setl
ja
addr16
lret
or
lock
in
jp
faddl
fs
dec
mov
popf
jae
xchg
or
mov
hlt
mov
lcall
outsb
inc
sub
sub
cmp
ss
inc
call
sbb
lret
out
mov
jl
mov
aam
das
mov
push
outsl
add
loope
mov
pop
insb
jns
pop
mov
test
rcrb
sbb
push
lock
jbe
push
xor
push
rorb
push
inc
jmp
adc
daa
adc
dec
push
xchg
mull
fistps
addr16
xor
sub
nop
insl
scas
pop
leave
rcrb
jecxz
pop
pop
fwait
jge
std
sub
in
xchg
sbb
cwtl
mov
rcll
stos
inc
and
xchg
or
pop
mov
test
push
fdivs
and
push
cld
dec
or
mov
jecxz
xor
dec
pop
in
push
in
cmp
pushf
pop
cmp
xchg
jns
xchg
mov
dec
and
lock
stos
filds
lds
sub
add
test
cmpsl
scas
adc
adc
out
and
inc
pop
je
call
fdivl
test
sub
test
arpl
cwtl
or
inc
inc
sarb
push
jne
push
pushf
dec
inc
enter
or
or
addl
inc
ds
mov
in
mov
sbb
jg
mov
call
cmpsl
je
add
addr16
data16
cmp
decb
jp
jo
mov
mov
out
dec
test
jne
adc
inc
cmpsb
enter
in
ret
push
ja
pop
mov
push
cmp
sub
xchg
fdivl
cmpsb
mov
cwtl
pop
and
and
sbb
mov
xor
mov
add
fstpt
cmp
gs
mov
inc
jle
repnz
or
hlt
cli
mov
inc
mov
sahf
pop
inc
adc
ror
pop
shl
or
ret
sub
mov
add
sahf
mov
mov
mov
pop
data16
jo
sub
lret
cmc
mov
pop
dec
and
pop
ja
sahf
sub
or
mov
xchg
cmp
out
pop
add
inc
pop
cmp
push
mov
flds
data16
push
sub
mov
scas
cwtl
mov
jmp
cltd
mov
inc
mov
or
and
out
imul
stc
imull
movsb
lods
lret
jne
xor
push
sbb
aas
shlb
push
out
xor
lret
xor
movsb
clc
stos
daa
push
pop
and
movsb
outsb
lret
jmp
js
mov
cmp
popa
xchg
fadds
addr16
cmp
cmp
jne
jns
pop
cmc
sbb
in
rol
add
lret
mov
fbstp
out
sahf
push
mov
xchg
mov
mov
orl
jne
inc
xchg
jo
mov
ds
mov
jmp
dec
cmpsl
pop
cmp
add
xchg
and
test
aaa
gs
push
and
jle
jmp
or
mov
adc
outsl
rcrl
mov
cmp
and
push
jne
inc
nop
sahf
mov
xchg
lahf
aam
or
push
dec
in
xchg
int3
out
fcmovb
test
les
daa
cmp
add
pop
and
inc
pop
cmp
fimuls
fdivs
out
sbb
lret
sbb
pop
pop
push
and
and
idivl
add
sub
push
cmc
dec
and
cmpsb
add
ret
add
xor
sbb
jne
lret
enter
cmp
jae
push
sbb
fcomp
jnp
dec
pop
dec
pop
pop
xchg
push
dec
aaa
scas
jmp
in
sub
loope
mov
pusha
ret
ret
add
fwait
cmp
mov
in
pop
in
int
push
pushf
popf
cli
mov
sbbl
mov
cmp
aas
test
stos
inc
jmp
mov
inc
sti
mov
cmp
and
sahf
or
pop
hlt
push
push
cmc
imul
insl
inc
jp
pushf
popl
xorl
aad
aad
ror
jae
hlt
sbb
xor
cmc
loopne
dec
or
mov
subl
cmpb
outsb
loop
add
hlt
pop
dec
sbb
sahf
or
pop
rorl
clc
shlb
test
pop
arpl
mov
jg
xor
lahf
popw
popf
inc
sbb
xor
dec
cmp
shlb
jnp
repz
jo
dec
fs
loopne
lds
lods
in
sti
bswap
movsb
mov
xchg
push
sub
sbb
aam
outsl
nop
andb
adcb
hlt
push
or
loope
sub
mov
out
idiv
rorl
jecxz
fists
aam
pop
inc
jne
stc
push
sahf
icebp
mov
sbb
sbb
jl
dec
mov
sbbl
stc
test
mov
mov
dec
mov
add
or
insl
push
ja
mov
add
cmp
bound
cmp
sbb
aam
adc
and
fmul
js
fwait
or
ret
push
nop
adc
std
xor
mov
arpl
push
push
xor
daa
mov
imul
orb
xlat
stc
mov
test
shlb
je
movsb
pavgb
iret
je
int3
orb
xchg
sub
gs
loopne
call
ret
inc
in
sub
outsl
lahf
shl
cmp
mov
jae
imul
inc
inc
and
adc
and
push
xchg
cwtl
mov
loopne
mov
xchg
sub
push
popf
pop
or
rolb
mov
gs
jb
inc
fwait
ja
and
test
lret
int
data16
xchg
dec
cmc
shll
sbb
and
std
pop
jbe
lahf
push
hlt
inc
xchg
aaa
nop
and
loopne
test
movsl
addr16
pop
test
jg
add
lea
xor
fnstcw
call
push
mov
mov
cmp
mov
mov
int
stc
movsl
lahf
lods
mov
cmpsl
cmpb
xor
or
xchg
push
rorb
int
ret
in
es
mov
sahf
dec
divl
mov
pop
in
icebp
enter
or
mov
cmp
pop
and
pop
pop
mov
sbbl
xor
shlb
xor
xor
cmpsl
push
adc
imul
das
push
pop
mov
mov
jno
or
sub
les
scas
jne
inc
mov
popf
xor
cmp
xor
adc
mov
aam
mov
mov
addl
sub
int
push
push
jbe
cmp
addb
in
xchg
call
and
in
ret
push
arpl
lea
out
dec
sub
sti
mov
sub
dec
or
push
fdivrl
sarl
mov
dec
push
sbb
rorl
mov
aad
dec
add
xchg
arpl
mov
loopne
push
mov
and
fsubs
sahf
insb
mov
or
popa
inc
and
or
xor
popa
and
test
mov
add
push
outsl
aam
push
inc
lret
mov
test
sbb
pop
xchg
dec
pop
pushf
jmp
xor
out
scas
push
out
cmp
mov
jmp
inc
pop
in
mov
mov
fs
cmc
sbb
add
out
ret
adc
lock
xor
dec
sti
cmp
sbb
mov
jo
sbb
ja
xchg
out
out
mov
push
add
mov
cmpsb
sahf
jno
pop
jle
cmpsl
fcoml
roll
sbb
ds
mov
pop
inc
fldt
es
push
sti
xor
lcall
pop
adc
adc
int3
bound
pop
ljmp
fiaddl
jle
mov
and
sbb
test
push
push
and
or
cmp
pop
notl
mov
xchg
pop
popf
fdivs
loope
xchg
andb
pop
cmp
into
mov
rcrb
and
jecxz
test
ljmp
jb
sbb
xor
sbb
into
add
das
add
es
pop
add
sti
test
je
push
mov
in
push
rcr
jnp
adc
or
into
hlt
xchg
sarl
rolb
mov
mov
push
mov
mov
out
aaa
xor
mov
jp
adc
sbb
jae
test
sbb
adc
lds
in
mov
push
or
pop
and
je
and
jmp
insl
stc
scas
push
insl
leave
rorb
jno
or
xor
or
addl
pop
inc
call
push
xor
insb
sti
cmp
xchg
test
and
push
sbb
aas
fucomp
pop
and
add
pushf
jecxz
ljmp
es
pop
add
rorb
sbb
mov
push
lcall
mov
jnp
xchg
sub
jo
lahf
dec
or
pop
xchg
and
aaa
jbe
imul
sahf
add
and
insl
inc
cld
jne
adcb
mov
jle
outsb
xor
xchg
cmc
or
insl
or
push
insl
push
dec
outsb
rorl
dec
mov
sub
lods
sub
cmp
iret
outsl
mov
aas
std
mov
ja
push
jnp
lret
push
xchg
cmpsb
in
push
mov
adc
lods
das
dec
aas
pop
xchg
jne
xchg
mov
ret
aam
dec
and
aam
daa
and
fcmovnbe
pop
xor
outsl
adc
clc
fdivrs
sub
push
xlat
jl
aas
aas
xor
push
sbb
cld
and
xchg
mov
sub
addr16
pop
mov
jbe
das
es
xchg
sar
shrl
and
and
popa
out
sbb
cmpsb
jnp
pop
clc
and
fwait
test
or
int3
pop
xor
xchg
push
imul
add
fsts
test
test
sbb
das
cmp
mov
ss
xchg
xor
les
cmp
lock
jle
cmpb
out
fimuls
imul
fwait
add
ljmp
dec
fisubs
add
mov
mov
out
pusha
cmc
jg
outsl
mov
jno
inc
cmp
test
push
push
ljmp
loopne
push
xchg
jecxz
sub
sti
or
roll
insl
mov
test
inc
ds
xchg
in
cmp
mov
push
and
jmp
jno
mov
push
or
ret
lods
hlt
in
lods
push
fisttpll
push
pushf
or
fnstenv
inc
add
fsubrl
imulb
inc
mov
mov
xchg
outsl
and
jl
mov
pop
arpl
fstpl
mov
pop
cmp
mov
test
adc
and
hlt
xchg
xchg
push
sub
pop
lea
popa
pusha
adc
xchg
cmc
and
out
inc
dec
mov
bound
mov
add
divb
cmp
inc
lahf
test
push
loopne
cmp
pop
inc
push
mov
push
jp
xchg
decl
ja
lahf
insl
fisttpll
jo
jl
xchg
cltd
cmp
cltd
bound
adc
adc
movsl
addr16
inc
sub
sub
inc
mov
mov
dec
xchg
repnz
cmpl
sbb
repnz
inc
jl
bound
mov
pop
xchg
jnp
daa
aaa
jg
push
mov
fldcw
jecxz
outsb
xor
int3
in
or
ss
pop
inc
pushf
repz
xor
les
mov
push
mov
sub
cmp
jecxz
mov
js
inc
pop
mov
cmp
stc
jbe
ja
xchg
ja
sub
mov
je
insb
sti
sub
repnz
repnz
imul
sbb
inc
xor
inc
out
push
xor
movq
cmp
xor
pop
dec
sub
mov
cmp
sahf
inc
xchg
pop
mov
push
mov
cmpl
out
js
xchg
lret
xchg
lret
ret
int3
lahf
dec
pushf
mov
cli
xor
lods
inc
test
test
mov
sbb
cs
pop
pop
xchg
aad
lds
and
adc
mov
scas
mov
insb
dec
mov
xor
mov
dec
into
jg
pop
fsts
fs
ret
inc
in
cwtl
and
mov
mov
add
in
incl
and
pop
jle
scas
inc
mov
xor
inc
mov
jecxz
ret
jne
shlb
push
or
inc
jle
dec
dec
cmp
fnstenv
and
push
push
test
cmpsb
mov
push
jp
xchg
xor
and
rcll
adc
arpl
and
pop
ss
mov
dec
inc
adc
out
cld
sbb
pop
mull
push
dec
les
adc
aas
test
mov
jnp
sbb
sub
stos
or
std
mov
scas
mov
popa
icebp
repz
push
int3
xor
fbstp
test
sar
filds
pushf
daa
jae
repz
push
jp
fists
adc
fninit
out
cmc
cs
fdivr
imul
jle
fisubl
ja
add
sub
or
lods
cmp
cmp
ficoml
jne
cltd
aas
mov
add
xchg
mov
inc
push
jno
stos
ret
frstpm(287
cwtl
and
mov
imul
mulb
mov
pushf
jne
mov
and
popa
add
ret
insb
dec
dec
jbe
jae
pusha
jb
aas
es
rorl
sti
cs
imul
mov
fs
mov
mov
lods
jle
mov
mov
mov
xor
repnz
cmc
mov
lcall
jge
out
xor
fs
inc
mov
adc
cmp
scas
loope
cmc
sbbb
sub
jge
jne
imul
pop
dec
pop
sub
and
repz
mov
int
add
popa
dec
fwait
xchg
cmpsl
or
roll
subl
cwtl
jmp
sar
cli
loope
xchg
std
jge
push
xchg
int
popf
cmpsl
loope
push
mov
loopne
std
and
testl
mull
dec
ss
and
add
sub
aad
push
fxch
pop
inc
les
inc
jae
insb
dec
out
loope
imul
es
mov
test
push
push
add
adc
scas
aas
mov
fiaddl
inc
or
pop
adc
push
adc
adcl
add
ss
pop
push
loopne
jne
pop
dec
or
andl
xor
stos
out
mov
jns
hlt
fsubp
cmpsl
mull
cltd
add
int
aam
inc
xchg
push
pop
test
xor
popa
mov
xchg
pop
stos
loope
pusha
test
packsswb
dec
cmp
outsb
cmpsl
ljmp
mov
and
aad
insl
sub
scas
or
xor
daa
sub
mov
jmp
sarl
inc
mov
inc
push
mov
inc
xor
aam
fidivrs
xor
mov
decb
les
dec
xor
dec
test
sbbb
lods
scas
aas
pop
test
xor
cmpsb
pop
adcb
push
adcb
sbb
xchg
rolb
xor
push
push
and
pusha
inc
mov
mov
sbb
popf
pop
bound
popf
adc
shr
dec
dec
imul
sbb
push
xchg
sbb
cmpsb
mov
psllw
mov
xor
lds
jns
mov
mov
fsubs
xor
push
xchg
push
sub
cmpb
leave
push
inc
add
push
loope
lds
xchg
add
scas
in
or
cmp
clc
arpl
adc
dec
xchg
insb
fdivrl
fwait
subl
mov
sti
iret
add
xchg
and
outsl
jl
out
inc
fs
pop
inc
movsb
pusha
inc
mov
in
test
inc
daa
out
inc
notb
inc
clc
jno
cmpsl
cld
add
cld
cmc
shrb
into
in
js
mov
sub
sub
mov
jo
aam
jbe
dec
int3
and
lcall
sub
pop
pop
inc
mov
add
inc
in
xchg
xchg
dec
sar
mov
sub
add
mov
add
cmp
icebp
push
aad
push
push
xchg
jno
cmpl
ret
and
rol
loope
aas
scas
notl
test
pop
leave
dec
jbe
push
js
cwtl
jmp
sbb
dec
pop
test
lock
out
arpl
dec
sbb
xchg
push
call
pop
nop
push
lret
and
xor
scas
flds
int3
pop
stc
push
pop
mov
ret
mov
xchg
jb
and
adc
push
jo
mov
mov
push
in
sub
pop
test
sub
fcompl
cli
mov
mov
dec
push
jmp
insb
adc
push
xchg
push
test
popa
divb
mov
into
push
movswl
fabs
xchg
and
sti
inc
sbb
repz
int3
dec
sbb
xchg
lods
sbb
sbb
mov
push
cmp
sbb
sbb
mov
xchg
lahf
sub
gs
push
repz
add
adc
lds
dec
or
dec
jg
pop
jle
pusha
mov
sbb
and
mov
mov
lahf
mov
cmp
xchg
roll
pusha
xor
dec
push
mov
rep
xchg
pop
inc
xchg
push
adc
push
stos
push
in
or
adc
arpl
fs
and
push
out
ljmp
aam
xchg
orb
std
xchg
jge
sub
cmc
lret
sbb
enter
rclb
mov
and
addr16
xchg
popa
and
push
mov
or
adc
push
in
jecxz
mov
and
lahf
push
or
hlt
std
inc
lcall
arpl
in
ret
add
cli
movsl
cld
push
xchg
ja
test
mov
enter
ja
add
mulb
movsb
mov
xor
jb
sub
test
aaa
loopne
jmp
push
cmp
mov
add
cmc
pop
mov
aad
push
mov
mov
adc
xchg
jmp
xor
cmpsb
push
and
scas
sbb
dec
les
inc
pushl
mov
adc
lea
jbe
xchg
in
imul
out
rcrl
and
notl
pop
ja
fcmovnb
insb
mov
adc
push
mov
sti
xchg
roll
sub
push
inc
leave
add
push
jp
cs
loopne
xlat
cmp
xor
xor
pop
mov
mov
mov
jp
rclb
icebp
push
xchg
jecxz
sbb
sub
movsl
fsubs
gs
push
inc
testb
shl
cli
sarl
xor
cwtl
mov
mov
dec
iret
mov
pop
or
imul
test
adc
ljmp
xlat
cmp
inc
mov
mov
or
inc
leave
in
push
scas
xchg
loopne
sub
or
or
dec
sbb
enter
jg
sub
das
ret
shl
mov
dec
pop
rorl
and
cltd
mov
aam
xor
outsl
int
adc
push
inc
shlb
sbb
scas
fstp
lahf
mov
loopne
std
fbld
test
mov
mov
addl
loop
loope
sub
bound
adc
stc
imul
test
cmp
leave
xor
jnp
dec
addb
inc
dec
sbb
in
cmp
shr
loopne
add
loop
pop
pop
sbb
mov
jle
cs
cmp
sub
or
lret
inc
pop
inc
cmp
fprem
maskmovq
pusha
sti
mov
jo
ret
in
xchg
or
push
xchg
sub
jno
add
pop
imul
xchg
or
ret
jmp
xor
pop
outsb
iret
sub
push
dec
test
mov
jmp
leave
inc
lock
fistl
mov
iret
pusha
cli
cmp
pop
inc
cmc
mov
cmp
jbe
or
inc
idiv
ljmp
xchg
add
rolb
jns
dec
push
js
mov
mov
clc
dec
lds
mov
push
xor
jg
add
mov
pop
pop
xor
pop
jp
cli
sub
enter
fpatan
fisubrs
stc
loopne
movsb
ret
pop
lret
pop
mov
mov
pop
mov
dec
les
out
repz
xor
push
cmp
cs
cmp
xor
push
aad
std
sub
aam
popl
dec
sbb
ret
outsb
movsl
jo
mov
xor
jge
scas
xor
or
data16
mov
mov
je
insl
addb
fs
mov
jp
or
test
aad
loop
insb
data16
xchg
sbb
addb
sbb
or
xchg
fwait
inc
adc
xlat
ror
cmpsl
dec
les
pusha
loopne
andl
and
mulb
mov
mov
inc
aad
mov
cmpsl
in
xlat
adc
cs
int
test
push
or
imul
xor
je
int
or
xor
pop
inc
push
lds
arpl
movsl
in
js
pop
push
sub
ss
lahf
imul
rol
mov
dec
add
pop
sbb
adc
or
aad
adc
jnp
and
out
pop
mov
lea
dec
inc
and
jmp
jno
std
cld
or
lret
into
xchg
fnstcw
or
sub
orb
sub
xchg
iret
adc
or
pop
and
sti
out
rorb
push
xchg
stos
fstpl
and
test
into
jne
sbb
aaa
mov
mov
or
dec
dec
cltd
xor
out
cld
xorl
add
popa
mov
lret
std
pop
cmovns
movsl
sub
pop
or
mov
lahf
inc
pop
push
mov
xchg
fmuls
mov
sub
or
cmp
lret
mov
sub
cmpsl
ret
inc
cmp
lock
shll
stos
test
fistpl
xchg
push
and
stos
jo
xor
add
je
addr16
dec
or
fldln2
pop
cmp
dec
aad
ds
mov
push
add
and
ret
mov
cmp
jmp
sub
hlt
test
mov
jl
ljmp
push
sahf
fwait
sbb
xor
flds
les
jecxz
inc
jae
test
or
xchg
push
or
sbb
pop
movsb
stc
mov
sub
fs
fldl
xchg
fisubrs
mov
addr16
dec
mov
ja
jae,pt
xchg
iretw
inc
call
inc
sahf
lds
push
addl
shll
mull
inc
movsb
popf
shrl
fs
out
into
mov
jp
add
or
sbb
xor
enter
and
sti
imul
xchg
pop
fbstp
call
adc
in
mov
xchg
jb
movsl
mov
dec
mov
add
jp
lds
mov
and
fistpl
xchg
cld
pusha
rcr
cltd
or
mov
test
mov
sub
push
adc
xor
daa
mov
mov
adc
mov
lds
and
adc
mov
xchg
mov
andl
jl
pushl
mov
pusha
mov
cmpsb
and
adc
xchg
adc
adc
andb
inc
jle
loop
mov
std
js
out
lret
xchg
popa
adc
ja
and
repnz
mov
aas
hlt
jmp
cmp
jl
xor
test
mov
jle
fdivrs
mov
std
push
adc
sbbb
jbe
inc
cmp
mov
outsl
cmp
cmp
stos
jecxz
mov
sub
adc
jbe
imul
push
das
adc
stos
inc
sub
cmpsb
iret
insb
aas
lods
pop
or
aad
inc
imul
lock
test
xor
orl
test
inc
or
insl
sbb
push
dec
dec
adc
push
push
imul
fdivs
daa
push
push
insb
or
fisttps
pop
pop
cmpsb
test
pop
aaa
mov
xchg
and
cmp
jge
inc
inc
enter
mov
sahf
shrl
popf
xchg
or
out
sbb
mov
push
fdivl
scas
aas
insl
mov
ss
mov
cmpb
dec
xchg
xor
push
inc
subb
pop
iret
aas
je
and
mov
into
in
inc
dec
and
outsl
jbe
outsl
ja
mov
xor
cmp
aaa
not
jle
xchg
call
mov
fnstenv
pop
mov
sub
sar
cld
cmp
mov
mov
sub
adc
mov
cld
sbb
dec
jns
mov
xor
lret
adc
fstps
cmp
sbb
addr16
movsb
xchg
nop
dec
add
xchg
mov
jge
cmp
pop
inc
dec
and
loop
ret
push
flds
imul
mov
mov
ret
add
xchg
push
dec
insl
cli
sub
bound
push
push
cld
movl
jp
xor
ljmp
xchg
fisubl
and
cmpsl
popf
adc
xor
test
mov
jge
push
and
insb
ret
imul
xor
in
dec
in
or
loope
push
sub
mov
inc
and
or
push
inc
shlb
or
adc
cmp
inc
xchg
pop
or
stos
xor
adc
ds
imul
lret
pop
out
push
mov
shl
dec
iret
loopne
std
inc
xchg
mov
jno
xchg
mov
pop
cmpsb
andb
jecxz
dec
push
imul
dec
pusha
into
dec
mov
iret
or
pop
mov
clc
add
mov
ss
jp
dec
fstpt
mov
dec
cmp
xlat
call
mov
add
shr
cmpsl
add
adc
lods
cmp
scas
testl
enter
push
pop
pop
mov
out
sbb
xchg
test
call
ficoml
cmp
cmp
or
cmp
sbb
dec
or
cwtl
push
adc
stc
rorb
outsb
sarl
mov
or
cmp
xchg
hlt
xchg
push
sub
inc
psubsb
xor
aad
push
loope
enter
sub
movsl
insl
cmp
shlb
std
fiadds
mov
iret
cmpsl
jl
cwtl
xchg
in
adc
or
pusha
mov
jmp
mov
add
xchg
xchg
add
sbb
xor
rcl
es
inc
lea
hlt
and
or
xor
pop
fidivrs
arpl
sub
out
inc
stos
popf
lods
inc
adc
icebp
repnz
adc
add
cmp
inc
sbb
shr
inc
inc
subb
out
fistl
pop
xor
out
rol
push
xor
int
add
cld
pop
sbb
stos
push
sbb
jne
adcl
lret
dec
outsb
mov
adc
or
imul
xor
push
insl
sbb
pop
in
fsubrs
mov
in
loopne
test
cmp
pop
int3
xchg
sub
jl
or
push
je
iret
sbbb
xor
je
sbb
cli
mov
or
and
loopne
lock
xor
in
push
add
imul
or
adc
fdivs
shrb
and
push
mov
sbb
ret
insl
cmp
incb
push
mov
mov
fcoml
pusha
subl
cmp
insb
cmpsl
or
xchg
jmp
cli
mov
jmp
sbb
add
stc
loope
popf
cmp
push
xor
in
mov
ss
je
jge
js
daa
out
pop
scas
cmp
sahf
or
je
call
cmp
ret
xchg
lea
cmp
pop
dec
or
stos
fs
test
scas
xor
sub
in
sbb
cmp
fildl
xor
cmpsl
pop
lret
xchg
cmp
mov
aam
adc
rcll
sbb
mov
pop
nop
aaa
inc
add
sub
lock
adc
js
lods
add
out
jnp
cmp
mov
shrl
ficompl
scas
into
cmp
into
test
cmp
push
jo
pop
mov
add
je
leave
aam
xlat
in
aam
sar
xchg
push
outsb
pop
mov
and
das
das
sbb
and
inc
fidivrs
rorl
pop
pushf
push
data16
pop
sbb
aad
je
dec
int
mov
call
add
fucomp
push
js
mov
push
and
rcl
pop
and
call
fimull
inc
dec
test
mov
pusha
jmp
add
jmp
mov
and
popa
outsl
test
adc
push
inc
movsb
push
xor
imul
dec
add
or
lock
sbb
xchg
or
xor
je
loop
sub
sarb
jg
and
ljmp
sarl
sahf
cltd
ds
and
push
fidivs
xor
jmp
dec
push
lods
mov
fucomip
adc
push
add
jbe
div
repnz
cltd
mov
stos
and
sbb
loope
out
ret
push
cmp
mov
dec
jmp
daa
faddl
and
fcompl
je
pop
das
out
adc
pusha
and
outsl
insl
aas
push
pop
adc
or
inc
push
sbb
sarb
ja
in
xor
pop
imul
pop
jno
lret
jl
mov
push
jae
mov
sbb
outsb
inc
mov
dec
dec
rorl
ja
out
cltd
mov
ljmp
into
fucomi
sbb
out
call
or
xchg
inc
sarb
add
push
ret
mov
adcl
sbb
in
cmp
test
imul
popf
sub
dec
pop
jo
pop
mov
stos
pop
lret
les
loopne
sti
mov
into
in
pop
push
loopne
add
sbb
ret
or
xchg
enter
push
adc
adc
cmp
dec
and
push
cli
movsb
scas
roll
mov
jle
negb
cli
std
jae
cmp
adc
inc
push
imul
xchg
insl
jl
sahf
aas
ret
push
daa
adc
lcall
mov
repz
xchg
lea
pop
pop
mov
sub
add
ret
out
cmc
jae
fcomps
pop
shrl
mov
mov
inc
and
outsb
jns
cvtdq2ps
push
cmp
mov
mov
into
lds
gs
icebp
xchg
xchg
and
push
sbb
mov
pushf
jne
push
sarl
dec
imul
fistpl
fst
and
js
sbb
xor
js
push
call
inc
or
sbb
popa
add
or
sbb
cmp
gs
mov
xorl
push
shll
dec
mov
leave
sbb
imul
push
sbb
sbb
bound
scas
sub
mov
add
push
test
in
mov
add
push
jle
inc
push
rcll
mov
mov
or
sti
push
cmp
inc
in
sbb
mov
ret
ret
cld
mov
xor
sarb
fbstp
call
mov
cmp
or
pushf
xchg
mov
je
xor
mov
pop
sbb
pop
pop
jno
cmp
jecxz
and
xlat
pop
bound
xorb
lahf
xor
sub
mov
std
mov
and
sub
sbb
test
sub
push
imul
xchg
xchg
in
arpl
xor
adc
or
push
jge
bnd
fcmovne
movsl
in
ffree
xchg
andb
jbe
popf
add
pop
imul
xor
xchg
test
lret
bound
orb
imul
call
ret
adc
or
push
leave
mov
clc
or
mov
aas
xor
mov
fbld
push
lods
les
test
mov
paddd
jae
mov
cmp
cld
fwait
dec
jp
and
xor
jp
xor
sub
jmp
popf
outsb
sbb
dec
js
rol
es
bound
les
jg
mov
cmpsl
and
xchg
iret
mov
ret
leave
imul
xchg
out
jle
pop
add
xlat
jnp
pop
sub
in
hlt
stos
mov
and
test
out
aaa
mov
or
test
mov
pushw
cmp
cs
push
jae
lret
pop
xchg
sbb
lock
sarb
shlb
psrlq
pop
fcoml
fcomps
lahf
shl
mov
xchg
mov
cmpsl
movsb
sahf
cmp
inc
scas
cld
mov
sbb
or
add
xchg
sahf
aas
test
addr16
outsb
sahf
sub
loopne
pop
repz
pop
into
mov
in
inc
add
mov
inc
cmp
aad
bound
mov
xchg
xchg
push
or
adc
xchg
pop
scas
push
jno
and
and
test
negl
loopne
in
das
cs
nop
mov
out
insl
loop
cld
stos
or
movsl
xorl
pop
ljmp
aad
and
movsb
jnp
jmp
imul
push
xchg
xchg
and
in
inc
enter
push
mov
cmc
inc
cmpl
out
nop
enter
in
cmpsb
cmpsb
dec
roll
cltd
sbb
andb
cmp
cwtl
jl
mov
or
out
or
imul
repz
scas
xchg
sbb
in
pushf
xlat
popa
sbb
or
xor
xchg
aam
add
or
data16
lahf
insb
xor
sbb
mov
out
mov
and
inc
dec
fucomp
jns
jp
adc
add
dec
xchg
jle
roll
mov
out
cmp
out
into
int3
push
and
shll
jae
out
xchg
push
stos
jae
dec
dec
je
sarl
in
jae
cmpb
imul
sub
jno
mov
icebp
sahf
sub
sti
movsb
pop
xor
dec
xor
add
fwait
adc
popf
adc
dec
cmp
scas
push
mov
roll
das
loop
rol
sbb
lods
jmp
sbb
outsl
shlb
jmp
jmp
mov
rcrb
push
out
push
loopne
dec
push
pusha
dec
js
out
arpl
insl
jecxz
std
lret
mov
dec
jecxz
je
mov
mov
test
mov
stc
pop
pop
outsl
cli
cmc
push
jecxz
sahf
stos
xchg
fwait
xchg
neg
cmovl
sub
cmp
dec
push
sub
das
mov
inc
in
pop
inc
fbstp
imul
push
pop
adc
adc
movsb
mov
loop
les
in
sbb
dec
imul
mov
in
in
mov
mov
mov
stos
mov
xchg
in
mov
sbb
fisttpll
pop
xor
mov
fs
stos
add
xchg
sub
xor
cmp
call
dec
mov
popf
xor
fstl
and
mov
jecxz
xchg
and
mov
push
dec
inc
cli
mov
sbb
or
pop
sub
in
outsl
push
push
dec
jmp
sbb
xchg
out
jg
fs
xor
lds
pusha
xchg
pop
sub
mov
jno
mov
pop
mov
imul
sub
repz
jl
aas
xchg
out
in
cmp
adc
xchg
movsb
hlt
sub
mov
inc
cmp
daa
lea
push
and
fdivrl
cmp
movb
ss
pop
into
mov
jns
stos
jns
fisttpll
jl
aas
lods
push
sub
mov
cmc
adc
fmuls
mov
cltd
arpl
je
cmpsb
fmull
mov
or
jle
popf
inc
xchg
outsb
mov
cmp
mov
xlat
loope
sub
call
cmpsb
out
sub
aas
xchg
iret
inc
rorb
push
pop
out
mov
imul
lods
dec
dec
cmp
sub
mov
xchg
jnp
out
dec
ljmp
adc
clc
pop
cmp
dec
mov
incl
ja,pn
mov
cmc
xchg
cli
sub
les
daa
xchg
mov
loop,pn
dec
pop
mov
repnz
int
outsl
inc
xchg
push
or
mov
mov
sub
push
jnp
lcall
adcl
fdivl
inc
push
ja
test
sub
dec
fdivr
fistpll
lret
outsl
pop
stos
add
or
jg
repz
adc
lret
fmuls
aaa
push
and
jae
out
adc
fistpl
push
mov
sub
nop
push
cmp
cmpxchg
add
cli
jbe
and
loopne
xchg
cmp
inc
imul
cmp
pop
or
sub
pop
ret
out
mov
ljmp
push
jne
or
aaa
lock
in
cmpsb
xor
fdivl
lods
clc
cmpsl
mov
or
inc
mov
mov
sub
jp
cs
nop
lret
mov
xchg
xor
cwtl
cmp
enter
and
inc
imul
cmp
sbb
test
daa
icebp
daa
pop
clc
push
cs
sub
jno
addl
pop
gs
add
or
pop
loopne
mov
push
andb
shrl
aaa
mov
pop
add
pop
sti
dec
sbb
lea
mov
or
mov
adc
inc
into
jns
outsl
push
aaa
outsl
mov
movsl
leave
sbb
xchg
inc
adc
scas
and
call
lods
popf
rcr
cmpsl
sbb
fidivrs
jne
jo,pn
or
aaa
cmc
out
mov
clc
dec
jecxz
pushf
fs
imul
dec
and
fidivs
mov
push
subb
rcll
jg
out
lcall
jle
imul
or
lods
push
aad
sub
add
daa
adc
fmuls
adc
and
adc
aaa
xchg
cltd
mov
rcl
dec
xchg
pop
mov
xlat
loop
add
and
scas
stc
or
rcll
sbb
dec
int
sahf
das
aas
push
inc
andb
mov
notb
and
mov
jne
in
fs
loope
jl
in
mov
std
adc
cs
ret
xor
xor
dec
inc
mov
and
je
xor
cltd
xor
inc
test
jg
jbe
jl
lods
rorb
pop
test
loop
adc
mov
dec
or
pop
xchg
ret
pop
lock
xor
mov
inc
fs
inc
pusha
xor
xchg
add
or
ss
jle
scas
adc
sbb
dec
push
insl
adc
loope
jb
shl
repnz
jnp
mov
dec
jo
stc
mov
xor
in
xor
or
scas
mov
or
flds
popa
mov
xor
or
sbb
mov
push
add
pop
mov
insb
xlat
jbe
fistps
or
std
cltd
inc
lret
insb
std
aad
pop
clc
into
inc
and
incb
int3
jg
inc
lods
add
mov
stc
push
mov
jb
hlt
test
xor
insb
inc
cmp
jl
lret
pop
adc
test
cmp
sub
push
mov
xchg
and
and
xor
sbb
ss
dec
add
cmpb
jo
cltd
stc
pop
and
movsl
add
inc
xor
mov
out
mov
nop
inc
sbb
pop
cmc
lahf
mov
rcrl
sub
scas
pop
mov
xlat
inc
add
mov
popw
cmp
sub
dec
push
mov
lods
jecxz
xchg
scas
pop
fld
negl
mov
sbb
repnz
pushf
or
dec
iret
sti
enter
add
into
dec
or
add
xchg
scas
cld
imul
std
ss
or
notb
adc
repnz
gs
mov
adcl
in
add
mov
ja
call
test
ss
cli
sbb
rolb
popf
push
test
sbb
loopne
jl
xchg
or
ror
add
and
jns
mov
or
or
aaa
les
mov
xor
pop
cmp
cltd
loopne
adc
lcall
xchg
cmp
add
fadd
pusha
push
pop
subb
mov
jge
cmp
bound
fwait
jae
xchg
push
call
subl
inc
jg
mov
lods
pop
push
popf
lds
cltd
inc
fidivrs
movsl
sbb
adc
stos
sub
lcall
jle
jle
daa
sahf
icebp
frstor
mov
inc
mov
sbb
adc
push
inc
stos
dec
inc
nop
das
aas
scas
in
frstor
pop
or
or
push
mov
adc
jge
xchg
xor
mov
mov
mov
mov
mov
mov
cld
add
in
leave
add
daa
xor
dec
gs
pop
push
xchg
stc
dec
aaa
int
push
in
or
mov
repnz
pop
adc
fistpl
jecxz
rorb
mov
aad
icebp
mov
inc
fcmovbe
aad
stos
insl
divl
inc
loope
ljmp
xchg
inc
out
inc
mov
fwait
gs
pop
mov
cli
cli
call
mov
xor
sub
sub
stc
aad
xchg
pop
jecxz
imul
mov
xor
in
pusha
mov
push
popa
sub
sub
out
pop
push
pop
sub
popa
mov
lcall
xor
mov
cmpsl
and
and
lahf
out
sub
js
adc
fbld
pop
call
cmc
subps
in
js
push
sahf
pop
pop
ljmp
and
mov
pushf
cmp
xor
or
jo
mov
xor
arpl
ret
cmpsb
lret
popa
sub
push
mov
add
or
notl
mov
sub
in
fildll
mov
notl
testl
push
ficompl
cmp
push
cmp
insl
adc
gs
bound
xlat
loopne
jg
and
das
sub
out
repnz
loopne
rol
sbb
lds
pop
push
xlat
les
sti
cmpsl
pop
sti
xchg
pop
int3
sub
mov
mov
scas
jp
mov
or
and
mov
testl
mov
lods
sbb
inc
outsb
add
lahf
add
cmp
and
stos
xor
movl
jae
xchg
fimull
xor
in
leave
sbb
icebp
in
leave
into
mov
push
imul
in
xor
cmc
jnp
std
and
int3
sbb
pop
xor
adcb
dec
in
cld
jb
imul
insb
scas
and
stos
cmp
imull
xchg
mov
js
fidivl
out
or
aam
mov
cmc
loop
jmp
not
iret
inc
stos
subl
mov
ror
rcll
sbb
popa
aad
pop
add
mov
xor
mov
jne
jns
loope
repz
in
push
sub
and
lock
and
adc
leave
call
jmp
and
fldcw
rorb
loope
dec
jne
outsb
and
mov
nop
das
nop
out
int3
iret
mov
arpl
mov
shlb
int
loopne
shll
jle
bound
xchg
das
or
cmp
add
cmp
sub
ret
mov
addr16
imull
ret
dec
sub
cmp
insb
adc
popa
shrb
pusha
rclb
test
movhps
imull
mov
xlat
dec
daa
add
scas
cli
les
mov
nop
jnp
and
push
lahf
push
call
stos
mov
inc
push
pusha
sbb
pop
cmp
ret
aaa
insb
jecxz
push
and
and
in
shlb
or
mov
fldl
add
loopne
push
dec
out
push
mov
inc
scas
xchg
xor
imul
mov
mov
sub
or
clc
aaa
sar
push
loope
xor
jle
outsb
pop
mov
jns
ljmp
lahf
xchg
notb
lea
inc
inc
insl
dec
fmulp
inc
ljmp
jno
cmp
pushf
and
jo
cltd
ss
inc
hlt
popw
mov
imul
lcall
nop
cmpsl
lods
fisubl
mov
mov
testl
sub
sbb
mov
lret
fwait
add
pop
iret
sbb
gs
fistl
mov
enter
icebp
sub
pusha
inc
mov
arpl
adc
add
sub
adc
cwtl
cmc
shrb
out
xchg
popf
mov
mov
cwtl
addl
rcll
fistps
pop
shlb
stos
and
bnd
in
js
es
sbb
xchg
push
mov
ds
cmp
and
push
icebp
push
test
imul
lahf
movsb
mov
pop
stos
stos
xchg
push
mov
and
hlt
mov
ljmp
mov
adcb
popa
or
push
pop
dec
sbb
aam
fsubrs
lahf
adc
test
cmc
xor
outsl
fstpl
sub
xor
add
repnz
and
adc
inc
fistps
lea
cmp
gs
adc
out
repz
push
test
fs
icebp
jmp
add
in
adc
arpl
jg
iret
xor
je
test
cwtl
pusha
inc
jns
sub
fstps
dec
push
cmp
add
mov
mov
pop
or
scas
out
jno
or
stos
jg
std
jge
aad
jbe
dec
xorb
xchg
mov
popf
dec
push
dec
or
jb
push
fnstsw
mov
mov
ja
adc
iret
jge
outsb
cwtl
movsl
push
mov
js
inc
fsubrs
xor
fists
add
lock
lea
sbb
dec
pop
pushf
push
push
das
outsl
sub
repz
xchg
and
ljmp
or
and
bound
fidivrs
xchg
bnd
dec
xor
daa
or
or
hlt
dec
add
and
lock
push
mov
inc
adc
xor
fsub
hlt
repnz
out
div
jg
and
cmp
test
push
dec
jl
data16
test
popa
mov
push
mov
ss
fnstsw
xchg
fsubr
dec
push
std
cmp
sub
jb
sahf
sub
pop
test
dec
fdivrs
aad
aad
and
jno
es
pusha
add
sub
int
or
adc
aad
xchg
or
popa
dec
push
aaa
jno
xor
mov
mov
lret
or
aaa
mov
scas
outsl
push
dec
push
in
sbb
mov
sbb
lcall
lock
sti
lret
push
test
fsubrs
arpl
es
rcrl
es
loope
mov
dec
add
cmp
pop
cwtl
or
dec
xor
mov
cmp
and
jno
dec
icebp
push
jl
stos
cmc
rcll
jmp
add
pop
fs
dec
xchg
das
lret
and
add
sub
popf
frstor
cld
popf
mov
mov
sti
cmp
sub
test
lret
icebp
sub
scas
ret
aam
push
mov
outsl
sbb
add
lret
add
cmc
mov
ljmp
jb
sub
jle
cmp
mov
push
imul
jnp
ror
in
fimuls
add
sub
push
outsl
mov
inc
sbb
push
mov
adc
repz
mov
dec
div
push
les
mov
jg
xchg
dec
jl
imul
xchg
inc
fnstsw
xchg
mov
jmp
sub
cmp
repnz
sub
aam
orb
ret
xchg
aas
int
ret
imul
push
cmp
xchg
cwtl
lock
lahf
mov
inc
mov
and
cmp
mov
push
pop
aas
jmp
bound
in
fwait
push
sbb
jg
mov
or
daa
jns
dec
lret
scas
jno
jb
adc
incb
popa
mov
mov
adcl
cmp
push
icebp
out
outsl
adc
xchg
dec
mov
jge
push
leave
jp
cmp
jne
mov
mov
stc
mov
sub
cmp
mov
jg
mov
cmp
cmpsb
xchg
and
or
out
mov
mulb
sbb
out
jo
ljmp
inc
inc
jns
lret
int
test
push
mov
and
in
dec
cwtl
fidivl
int3
mov
mov
aam
mov
mov
xor
jnp
mov
mov
out
xor
scas
mov
jb
lcall
or
nop
stos
xchg
sub
jns
adc
out
mov
scas
add
dec
sti
test
int
xchg
sbbl
aas
jns
pop
daa
or
dec
jbe
inc
jmp
xchg
or
cld
push
mov
and
test
xor
adc
xor
fwait
pop
test
pop
mov
divb
lret
jbe
scas
mov
es
shll
subl
repz
mov
movsb
adc
cld
test
rorb
hlt
push
cmp
push
jmp
jno,pt
push
sbb
js
aad
std
icebp
cmp
divb
mov
sbb
rcrl
faddl
xchg
cmc
fwait
xchg
xor
pop
pop
mov
stc
or
lds
fbstp
pop
add
inc
mov
fisubrl
push
std
sub
ja
inc
aaa
xor
xchg
pop
and
fdivrs
push
cwtl
imul
fs
mov
lret
cmp
dec
std
data16
xor
push
cwtl
push
cmp
roll
add
and
push
out
fildll
push
inc
mov
fisttps
cmp
ljmp
sub
sbb
mov
gs
xchg
and
bound
mov
dec
xor
cs
sub
fcompl
push
loop
shlb
test
add
int
notl
inc
inc
sub
jae
or
pushf
in
in
arpl
and
or
mov
popf
pop
jle
xor
std
stc
iret
test
fstp
sti
mov
sbb
cmp
aad
test
je
inc
shll
dec
mov
push
outsl
xor
mov
dec
mov
das
imul
ficoml
ja
sahf
jbe
lcall
out
out
rclb
cwtl
arpl
pop
sbb
cmp
cmp
cli
and
and
adc
arpl
adc
cmp
add
std
xchg
lds
sbb
jge
cwtl
je
xor
mov
ret
jl
sbb
cmp
push
icebp
sbb
fidivl
lahf
cmpsl
cmp
mov
shr
out
cmp
lock
sbb
outsl
push
leave
lods
and
push
dec
mov
repnz
xchg
xchg
enter
jne
inc
mov
push
mov
jo
cwtl
fdivrs
mov
pushf
std
ror
daa
lahf
movsb
jle
jmp
dec
js
push
cs
or
fs
inc
das
sbb
dec
sub
mov
int3
lods
mov
add
shl
pop
mov
outsb
lock
test
cmc
fs
je
scas
in
inc
dec
lock
cmp
ss
mov
enter
jge
mov
nop
in
push
and
jmp
sar
push
pop
ljmp
pop
movsl
jle
mov
add
bound
mov
xchg
mov
sub
bound
rorb
add
pop
lds
lock
add
adc
movsl
out
push
xchg
jns
shl
movsl
inc
outsl
popa
push
and
out
pop
push
loope
imul
cmpsb
inc
xor
inc
pushf
dec
popa
jbe
sbb
mov
repz
in
stc
cld
cmp
cmp
cmp
mulb
jo
ss
sub
outsl
sbb
inc
and
icebp
fprem
and
dec
jmp
inc
dec
fstpt
fsts
pop
test
mov
loopne
push
dec
lcall
dec
dec
pop
shr
in
stos
mov
cmp
sbb
add
push
mov
jo
inc
xor
or
or
pop
dec
das
aad
xlat
pop
adc
mov
imull
out
addb
pop
inc
xchg
arpl
aam
arpl
cmp
imulb
inc
shrb
pop
cmp
jl
mov
stos
pusha
xlat
int
mov
mov
dec
inc
xchg
fwait
mov
mov
xchg
nop
adc
inc
add
outsb
push
subb
add
jb
pop
sub
repnz
mov
push
cmp
je
push
test
sbb
out
ficomps
lret
push
and
push
cmp
movsl
lds
setne
je
push
loop
and
jae
gs
mov
cmp
lcall
in
push
mov
inc
ret
scas
pop
add
jnp
div
or
add
std
sbb
leave
mov
push
cli
push
dec
or
lret
pop
pop
pop
cmp
dec
xor
pop
clc
mov
mov
xchg
sbb
mov
cmc
std
jb
pusha
and
mov
pop
mov
repz
sbbl
cmpb
xchg
int3
pushf
sahf
lret
pop
jb
pushf
int3
dec
xor
stos
xchg
jg
addr16
int
sbb
inc
jmp
adc
pop
fxtract
sub
xor
addl
sbb
sbb
mov
insb
dec
jne
push
mov
ds
sbb
std
push
inc
outsb
cwtl
xchg
dec
stos
ljmp
adc
stc
cmp
out
cmpsl
xchg
lds
int3
xor
out
or
sub
arpl
push
lods
jle
fldenv
adc
out
inc
mov
jo
dec
es
aas
sbb
pop
jecxz
jmp
or
pushf
and
out
dec
outsl
shl
inc
jbe
push
adc
cmp
inc
out
iret
jge
sub
shrl
push
cmpsl
xchg
pop
enter
jo
jnp
add
mov
sti
ja
cmp
pop
dec
pop
jp
cmp
pop
icebp
lahf
xchg
ljmp
cwtl
test
sub
sahf
js
ret
cwtl
pushf
add
out
in
test
imul
or
xor
dec
lods
sbb
and
imul
or
cmp
mov
loopne
lds
lcall
cmpsb
rcll
popf
aam
test
push
mov
movb
mov
subb
pop
add
or
and
xchg
loope
fmul
pop
xor
addr16
lahf
xor
jno
notb
jne
pop
into
sar
pop
sbb
add
jae
lods
scas
lahf
jge
sbb
adc
aam
data16
inc
xor
ret
pop
mov
int
test
sbbb
nop
loope
mov
mov
leave
mov
mov
pop
clc
es
sbb
xor
adc
dec
mov
je
scas
cmp
and
fstl
xchg
jmp
popa
ja
cli
cmp
dec
cli
xor
ficoml
iret
loope
inc
sbb
out
aam
sti
sbb
jg
mov
jnp
outsl
xchg
leave
stos
inc
push
test
adc
pop
jl
and
dec
mov
sahf
and
jecxz
cltd
jae
push
mov
test
xchg
ficoms
add
jns
or
loope
dec
xor
movsb
xacquire
jp
push
cmp
and
ds
icebp
imul
mov
ss
mov
push
ret
mov
add
rclb
cmp
inc
cmp
mov
enter
cld
xor
sub
adc
mov
es
dec
xchg
adc
ja
add
xor
mov
jle
push
jo
cli
aaa
arpl
cli
xchg
mov
decb
jo
int3
fnstsw
out
cmp
sar
daa
add
inc
stos
stos
xchg
jnp
test
add
pop
sub
scas
and
outsb
sub
sbb
repnz
cmp
jbe
sbb
cmp
or
lock
mov
mov
sub
adc
mov
loopne
sub
xchg
ret
out
sub
pop
jp
cltd
or
jb
xlat
stos
in
jmp
sub
sahf
aam
dec
sub
out
cmp
dec
pop
aam
fldcw
sbb
sysret
shll
pop
cmp
xorl
xchg
test
ret
push
push
subl
and
repnz
sub
add
ljmp
xor
movsl
inc
sub
cltd
int
jl
enter
and
sbb
rorl
pop
imul
jo
add
adc
bound
lcall
dec
ja
js
or
pushf
adc
mov
rclb
sub
lock
lods
aaa
lock
sti
pop
mov
cmp
rorl
jp
adc
push
push
xchg
cmp
into
mov
repz
bound
dec
mov
add
pop
adc
lahf
sbb
add
ja
cmpsb
movsb
inc
mov
popf
mov
mov
in
arpl
pop
sub
mov
sub
and
xchg
jb
popf
ret
mov
xor
push
pop
jg
sbb
js
xchg
in
cwtl
fwait
dec
mov
mov
and
sbb
push
pop
pop
daa
add
push
mov
popa
adcb
mov
movsl
aas
xor
das
inc
inc
enter
pop
push
inc
inc
and
stos
jns
dec
icebp
int3
and
test
call
loopne
mov
add
leave
aam
stc
in
mov
mov
cmp
scas
jae
fisttpll
mov
jbe
jb
pop
hlt
mov
mov
push
outsb
call
and
jne
cli
pushf
sub
popf
data16
sub
movsb
xchg
mov
cli
pop
push
es
mov
push
pop
js
mov
push
pop
sarb
stc
mov
jbe
jbe
or
loope
sbb
mov
lret
sub
adc
xchg
loopne
cmp
insl
dec
fmuls
ss
pop
xor
xor
sub
sub
mov
pop
fwait
xchg
call
adc
clc
add
and
ss
fsubrs
mov
pop
cmpsb
loope
xchg
out
popf
add
pushf
aaa
add
push
lcall
insw
add
std
mov
xchg
or
xlat
fs
ret
adc
adc
cmp
cmp
in
inc
mov
shrl
xchg
stc
stos
jae
rclb
iret
mov
clc
xchg
dec
xchg
loopne
mov
repnz
pusha
outsb
mov
inc
pop
rol
int3
and
mov
add
mov
out
mov
neg
jmp
jp
pop
pushf
xchg
jo
andb
sub
bound
div
mov
inc
xchg
dec
movsb
mov
sbb
inc
sub
adc
mov
jmp
mov
cli
mov
mov
push
xchg
int
ljmp
movsb
push
mov
sub
pusha
out
lock
jmp
cmp
pop
cld
pop
mov
sub
inc
loopne
leave
and
int
scas
xchg
push
pop
mov
dec
rcll
in
jmp
jecxz
out
xor
xchg
ljmp
fcmovu
sub
int3
shl
mov
loope
aam
xchg
lds
aad
fdivrs
in
sbb
lea
xchg
cwtl
outsb
scas
std
mov
sub
gs
push
and
xor
mov
push
cmp
dec
mov
mov
mov
xor
movsb
test
push
pop
icebp
daa
ret
jecxz
xor
push
xor
jp
popf
fcompl
and
jns
into
repnz
pop
fdivr
jp
cmp
xchg
pushf
mov
lea
adc
sub
jge
rorl
daa
mov
push
xchg
adc
dec
inc
mov
inc
cmp
push
sub
or
and
scas
in
fsubrs
movsb
dec
xor
jle
fistpl
sub
add
pop
sub
jne
cmp
adc
fmul
inc
mov
push
cs
popa
daa
arpl
fisttps
lds
sahf
jle
popa
loopne
lods
jbe
pop
call
push
scas
je
push
insl
lods
es
test
incl
inc
xchg
xchg
scas
inc
sub
mov
add
or
add
cltd
cmc
push
pusha
cmp
jp
xor
jl
jbe
in
lods
stos
pop
les
imul
sbb
xor
jns
das
subb
mov
sbb
cltd
pop
or
mov
and
lcall
or
add
je
loopne
dec
or
stos
cli
pushf
mov
dec
adc
mov
cmpsb
fidivrl
jecxz
sub
fdivl
mov
imul
loope
pop
mov
fsts
sbb
or
hlt
insl
sub
aad
int3
mov
jne
aas
mov
mov
xchg
data16
mov
aad
xor
shl
and
mov
sbb
mull
mov
xchg
aad
mov
nop
subl
out
arpl
mov
cmpb
push
xlat
cs
cmpsl
movsl
jne
jne
jmp
inc
and
push
cmp
dec
or
arpl
data16
fwait
aad
repz
jl
and
stos
push
pop
cmp
arpl
clc
in
pop
inc
inc
and
je
xlat
ljmp
push
add
enter
jae
xchg
hlt
lret
or
xor
adc
bound
scas
pop
push
fs
daa
and
pop
jno
sub
fimuls
sub
lret
stos
xor
add
test
or
pop
jle
pmaddwd
jb
sbb
sbb
cld
lret
inc
xlat
imul
shlb
cmp
shlb
popa
inc
cld
shll
xor
out
cltd
jmp
popa
hlt
mov
sbb
or
hlt
test
std
fcomi
pop
stc
out
xchg
shll
cmpsl
push
popa
and
outsl
jb
mov
add
andb
add
es
sbb
outsb
jne
movsl
dec
decl
cmc
xchg
daa
lcall
push
test
mov
inc
sub
adc
dec
and
mov
js
push
jg
out
jecxz
inc
pop
enter
mov
mov
and
mov
push
push
stos
out
fcoml
hlt
das
in
dec
in
jg
popa
lret
movl
xchg
scas
mov
icebp
test
in
xor
pop
mov
movb
add
adc
or
xor
push
xor
imul
loopne
cmc
cmc
lret
mov
push
icebp
testb
sub
int
in
fwait
push
xchg
mov
jl
imul
push
jo
cltd
mov
enter
sahf
or
dec
mov
lds
pop
ds
fstl
fs
mov
dec
cld
lods
inc
sbb
pushf
cmp
or
mov
mov
xor
push
enter
cmp
fcmovnu
sarl
lds
aad
aam
xchg
sub
popf
mov
popa
cmp
adc
add
jp
arpl
arpl
shrl
xor
fisttps
sub
int
cmp
push
inc
or
pop
cmc
test
jmp
push
cmc
jne
cmp
mov
or
or
dec
add
aas
push
sub
ret
ss
sub
je
dec
jns
adc
cmpsl
jb
aad
pop
faddl
mov
xor
jne
popa
aaa
mov
mov
add
adc
xor
hlt
dec
scas
add
test
popf
ror
or
outsb
loopne
aas
mov
out
pushf
les
adc
repz
cmc
leave
repnz
mov
mov
jno
in
push
jb
pop
lea
inc
std
push
mov
int3
lahf
push
outsb
sbb
push
pop
les
call
pop
fcompl
dec
scas
arpl
mov
mov
pusha
jb
pop
or
sbb
or
out
lcall
xchg
dec
push
push
mov
dec
pop
pop
push
dec
rol
mov
inc
out
nop
mov
cmp
push
pop
adc
sub
movsl
in
sarl
shrl
aad
lret
inc
pop
mov
icebp
mov
imul
xor
or
push
pop
ja
cmpsl
cmp
push
or
bnd
mov
xor
pop
shlb
pop
jno
adc
and
jmp
arpl
pop
and
adc
jl
inc
xlat
test
pushf
inc
ret
enter
pop
jmp
std
test
inc
es
cmp
push
jp
jp
cmp
out
inc
push
ds
mov
lea
adc
inc
xor
cmp
mov
pop
lock
mov
xchg
cmpsb
scas
jmp
ret
comiss
daa
fisttps
mov
or
xor
sub
or
xchg
scas
mov
inc
mov
sarl
fsub
dec
jne
dec
push
mov
adcl
bound
sbb
dec
addl
clc
xor
cmp
stc
jl
sbb
cmp
adc
xchg
test
int
or
lcall
call
jl
cmp
aam
sahf
rsqrtps
cmc
test
stc
sub
xor
ja
xchg
mov
mov
addr16
add
je
xadd
sbb
pop
adc
push
cwtl
mov
int
adc
xor
pop
loopne
push
inc
std
sbb
xchg
adc
or
and
mov
mov
loop
cmp
and
test
xchg
dec
add
loop
data16
mov
adc
sub
test
adc
lods
jmp
xor
push
subl
and
sub
or
in
je
jg
stos
push
enter
mov
gs
mov
mov
nop
xor
sub
dec
cmp
mov
iret
adc
aam
cmp
aaa
push
stc
mov
sbb
pop
fistps
push
aam
je
rol
pop
xchg
inc
push
aad
pop
mov
orb
sahf
cmp
pop
in
mov
jne
inc
pop
imul
dec
add
ljmp
movsb
loop
dec
push
dec
arpl
xchg
mov
scas
sti
jl
pop
push
ret
out
out
nop
add
dec
imul
sti
sbb
jle
push
and
xlat
outsb
cmp
shrl
call
jae
xchg
adc
jp
sar
lret
nop
rorl
mov
outsb
inc
sbb
adc
and
ret
lods
cmp
jmp
pop
pop
push
test
ss
mov
fists
outsl
hlt
adc
data16
pop
ds
xchg
test
xor
adc
nop
sub
pop
lahf
inc
aam
sub
or
stos
pushf
cmp
dec
mov
mov
xchg
popa
pop
dec
call
andb
inc
adc
push
inc
test
mov
loop
cmp
scas
mov
dec
fnstsw
sbb
pop
insb
and
mov
dec
cmpsl
pop
inc
push
sbb
adc
stos
xchg
inc
sbb
xchg
xchg
sub
xchg
mov
jmp
cmp
xlat
subb
decb
mov
out
pop
imul
or
call
and
mov
test
mov
sub
ret
sbb
arpl
insb
insl
sub
mov
sbb
xor
ja
call
dec
push
aaa
push
bound
pop
sbb
das
mov
mov
pusha
jg
mov
jle
mov
jne
pop
dec
int3
sbb
test
xchg
jno
jmp
xor
mov
xchg
call
in
ljmp
out
pop
je
cld
inc
jnp
jmp
push
daa
imulb
mov
and
or
gs
xor
cs
jp
push
xchg
dec
mov
addl
push
xchg
xchg
mov
push
jae
mov
inc
pop
mov
negl
adc
bnd
out
xchg
loop
push
adc
aas
mov
adcb
jae
push
mov
mov
and
stos
loopne
jne
mov
cwtl
test
daa
jge
xchg
push
dec
or
dec
test
sub
xchg
in
or
scas
and
cld
mov
adc
push
mov
pop
mov
in
pop
mov
xchg
cmpsl
sub
into
add
xchg
es
sar
mov
in
inc
or
inc
inc
movl
xchg
shlb
fsubs
bound
push
cmc
test
mov
fcmovb
pop
dec
mov
xchg
pusha
mov
cmc
mov
xchg
into
sub
outsl
add
ret
aaa
fsubrl
sbb
adc
call
jno
lock
imul
adc
pop
push
push
push
mov
mov
sahf
jl
std
push
bound
test
out
outsb
push
test
inc
arpl
mov
out
lcall
sahf
mov
sub
call
popf
xchg
in
pop
movsl
out
cmp
test
into
mov
cs
adc
dec
or
mov
mov
jo
aaa
pop
mov
mov
sti
or
loopew
push
and
jb
add
outsb
and
push
aas
sub
xchg
and
inc
inc
testl
arpl
int
lahf
sbb
mov
inc
cmp
stc
jg
cmp
inc
divl
dec
dec
into
out
mov
mov
mov
cs
call
das
fdivs
or
cmpsl
mov
in
sub
pop
lods
adc
fwait
adc
aad
je
dec
adc
popa
adc
pop
mov
sub
jle
sbb
sub
test
push
mov
repz
fnstenv
dec
nop
push
ret
dec
int
out
mov
imul
sub
jle
or
cmpsl
jb
popf
scas
je
das
daa
adc
and
xlat
inc
test
add
into
sbb
push
imul
xor
jle
mov
flds
jmp
pop
loopne
daa
mov
imul
lret
std
xchg
mov
adc
push
test
and
nop
xchg
sub
addb
insb
cli
xorb
aad
push
loop
dec
mov
shlb
jbe
loopne
jge
rorl
js
push
and
arpl
clts
xchg
cmp
dec
rolb
pusha
jnp
mov
jbe
mov
dec
pop
sub
aad
lret
xchg
xlat
xchg
lea
push
xchg
negb
int
adc
add
mov
repnz
les
push
mov
iret
test
out
scas
ja
cmpsl
pop
adc
leave
out
push
lret
outsb
lock
mov
xor
clc
notl
add
movsl
rcrb
lock
mov
xchg
push
in
jbe
mov
adc
ret
aad
push
xor
test
jne
int
lds
sbb
pop
cmp
inc
pop
int3
pop
dec
xor
jne
dec
dec
mov
aam
call
in
js
add
jne
sbb
mov
fcompl
stc
pushf
mov
js
inc
lea
fstp
int3
sbbl
loope
sbb
cmp
xor
mov
rcrl
push
aam
sub
inc
sub
icebp
jg
sub
pop
cmc
shrl
mov
sbb
dec
jl
mov
in
stc
in
xchg
shl
sbb
mov
int3
jmp
and
stos
int
call
daa
loope
and
cmpsb
jae
sti
mov
imul
lea
push
mov
sti
aad
outsb
lahf
mov
movsl
insb
insb
sbb
sahf
in
loopne
pop
movsl
or
pushf
inc
sbb
stos
addr16
sbb
test
mov
fdivs
xchg
pop
adc
lods
jbe
movsb
dec
mov
dec
outsb
shr
mov
push
add
lods
jmp
jl
mov
adc
fiaddl
dec
out
cmp
enter
mov
lea
gs
mov
pop
push
insb
cmp
vphaddbq
cmp
jnp
rclb
ret
je
push
test
pop
mov
adc
add
or
dec
and
sbb
push
push
adc
mov
sbb
pop
aaa
xchg
lahf
fwait
mov
pop
mov
jecxz
in
xchg
sub
dec
push
ds
push
loopne
insb
leave
xchg
jmp
into
add
int3
pop
push
jg
les
mov
test
mov
enter
das
divb
dec
dec
inc
mov
bound
dec
es
mov
dec
and
into
sub
xor
popa
inc
mov
clc
outsb
jbe
sub
ljmp
xor
mov
mov
fbld
int3
std
movsb
inc
arpl
mov
mov
xchg
inc
dec
adc
sub
xchg
cmp
adc
fcmovne
orb
pop
push
mov
testl
bound
test
lea
stos
test
dec
lret
mov
jo
stos
bound
lods
push
lcall
xorb
clc
js
into
push
fistl
subb
cmc
xor
pop
pop
dec
sahf
dec
sub
shl
add
adcl
sub
mov
and
jbe
lods
mov
pop
imul
push
xchg
adcb
es
cmp
sbb
aad
dec
mov
testl
in
adc
inc
cld
lock
call
add
ja
sbb
je
adc
hlt
dec
cmpl
pop
xor
fcomi
or
xchg
sub
xor
mov
and
scas
and
dec
lea
jns
fiaddl
and
push
ds
int3
aaa
sbb
loop
mov
sbb
cmp
xchg
add
leave
xchg
cmp
pop
mov
loop
test
or
jnp
das
cmc
push
lret
in
sub
out
cmp
xchg
es
hlt
cld
shrl
push
out
push
mov
mov
pop
ficoml
je
xor
lea
pop
jmp
out
mov
sub
and
and
movsb
or
sahf
mov
cmove
mov
xlat
das
ret
pop
lods
sub
lahf
cmp
adc
movsb
xchg
or
inc
aas
pusha
push
int
mov
outsb
stc
sbb
dec
aaa
mov
dec
cmp
jecxz
mov
mov
and
sub
xchg
jbe
jmp
cli
rcl
or
push
loope
out
inc
cmpsb
push
arpl
sbb
cmp
lahf
inc
dec
push
jbe
add
add
push
rolb
add
out
cmp
mov
outsb
js
into
imul
cmc
dec
movsb
mov
rcrb
popf
das
add
inc
cmp
cmpl
repz
jo
mov
jmp
push
inc
int
or
loop
mov
es
mov
lret
cmc
scas
pop
jmp
jge
sub
lds
push
call
out
mov
jge
push
pop
sub
subl
push
test
inc
adc
inc
jmp
jge
sbb
je
sub
sub
and
or
cld
mov
cltd
outsb
xchg
cwtl
test
xchg
sub
mov
push
mov
sub
pop
lahf
jg
push
xchg
push
int
je
addr16
rol
insb
mov
mov
inc
sub
sub
nop
push
and
xor
out
or
mov
or
insl
mov
pop
and
lods
push
lods
cld
enter
sar
xchg
cltd
fwait
mov
or
mov
mov
out
repnz
cltd
lret
fcompl
add
popa
ja
shlb
mov
cmp
pusha
adc
les
mov
pop
xor
add
jge
inc
mov
dec
push
in
adc
int3
ret
scas
stos
out
jae
pop
stos
test
xchg
mov
sbb
inc
cli
cmp
lds
ljmp
jnp
jmp
nop
out
push
and
push
ret
mov
loope
scas
pop
les
mov
aas
dec
mov
pop
shl
jo
lea
mov
mov
negb
and
faddl
mov
cmc
and
sub
repz
aam
lahf
push
jnp
js
test
dec
xchg
dec
test
das
mov
negb
and
shrb
mov
xor
ljmp
lcall
push
and
in
mov
setnp
jp
imul
sub
test
fsubr
xor
cmc
sahf
cmc
jbe
shr
shrb
cmpsb
pop
cltd
and
lds
adc
add
jecxz
mov
scas
and
pop
in
mov
mov
lea
dec
dec
xlat
addr16
cli
test
add
push
or
push
cmp
sahf
sarb
js
lret
pop
push
ss
loope
dec
sub
in
mov
out
or
xchg
sbbl
imul
mov
mov
test
sub
xchg
mov
jmp
out
push
pop
loop
cwtl
or
adc
and
sbb
dec
jle
fstpt
cmp
inc
xchg
sbb
push
les
cmc
bt
lods
xchg
lea
jl
lods
sti
sub
icebp
mov
ret
mov
test
icebp
push
stos
pusha
jg
adc
cmpsl
cwtl
xchg
mov
cmp
or
cmc
xchg
sub
xor
or
jbe
mov
and
jb
or
or
jnp
in
loope
cli
lods
aam
cltd
hlt
in
sub
mov
stc
fldl
addb
bound
stos
scas
bound
mov
or
jns
push
fistpl
pop
lds
mov
lods
aaa
fsubrl
mov
iret
inc
in
cli
xor
out
aas
aad
jmp
mov
sbb
pop
and
fdivs
and
test
icebp
pusha
jae
jp
jae
div
andl
inc
ret
xchg
pushf
jge
dec
or
arpl
outsl
decb
cmp
not
jl
xlat
popa
dec
ja
xor
ret
in
cld
insl
scas
mov
xchg
call
mov
sub
cmp
inc
pop
call
xor
scas
int3
jmp
daa
insb
xor
in
jnp
dec
orb
lea
fisubrs
push
ret
xchg
testl
sbb
popa
popf
sub
dec
mov
enter
mov
mov
sbb
jmp
int3
pop
xchg
jg
leave
xlat
dec
cmp
xchg
mov
sbb
loope
and
out
cld
sub
cli
pop
dec
add
fucomp
cmp
lods
mov
push
pop
cmp
sti
pop
cmp
outsl
jmp
xor
cmp
enter
gs
jmp
fsubs
mov
adc
mov
dec
rcr
fcmove
jb
sub
xor
aad
sub
test
mov
ror
lds
jnp
pmulhuw
lret
sub
mov
bound
mov
mov
jmp
lods
push
push
dec
cld
sub
iret
cmp
lea
adcl
push
cs
ja
loop
pusha
mov
ja
insb
cmpsl
add
mov
fcoml
cmp
xchg
jecxz
call
xor
movsl
mov
sahf
cmp
mov
push
jo
cmpsb
jne
imul
pop
leave
add
or
mov
bnd
shll
loop
jae
adc
hlt
daa
fiaddl
mov
push
fs
mov
pusha
dec
lret
shll
leave
cmpb
dec
stos
mov
jns
lds
push
pop
loope
lret
out
inc
loopne
les
andb
jno
and
adc
mov
scas
shl
test
ret
mov
lret
mov
cwtl
cmpsb
or
mov
lea
clc
aam
mov
pop
lahf
push
icebp
mov
mov
mov
jp
xor
dec
pusha
cmp
fbstp
pop
adc
scas
popf
pushf
or
mov
popf
mov
jb
xchg
inc
stos
ret
dec
pop
sbb
pusha
jae
jne
ficoml
mov
mov
aad
cmp
imul
insb
imul
pop
les
insb
mov
lcall
nop
int
mov
xchg
mov
pop
cltd
mov
jae
mov
fxtract
xor
out
xchg
cmp
sub
mov
add
outsb
ja
popa
add
add
dec
lock
mov
stos
sub
cmp
adc
mov
addb
cli
xchg
bound
movsb
lds
insb
inc
leave
inc
arpl
lahf
push
testb
mov
push
pop
mov
arpl
bound
push
mov
cmc
mov
andl
jge
insb
mov
imul
int
push
cmpsl
xchg
scas
pop
pop
pop
add
nop
cwtl
sbb
cld
pop
jl
lea
popa
xchg
ret
into
sub
jo
cmp
mov
rorl
dec
mov
mov
incb
push
xchg
into
stc
cmpsl
cmp
aaa
in
or
lret
xor
bound
fsub
lahf
imull
fiadds
cmp
mov
jp
add
lret
ss
jbe
sub
pop
jge
stc
dec
dec
pop
lods
mov
mov
cmp
mov
and
movsl
dec
push
sub
cmp
xor
outsl
iret
mov
scas
pop
or
mov
mov
sti
xchg
in
lea
clc
xchg
pusha
sahf
insl
into
inc
xor
aas
inc
mov
arpl
xor
cli
and
clc
mov
adc
push
mov
push
popf
out
scas
std
das
leave
int3
fcomi
and
mov
jmp
jo
mov
push
movsl
loope
nop
cwtl
rcll
jo
or
push
cmp
mov
sbb
ret
cmp
xchg
stos
in
sbb
mov
xchg
ret
in
add
ja
adc
cld
sti
and
xchg
movsb
popa
jle
nop
in
sbbl
sub
fisttpll
xchg
sbb
mov
and
push
inc
cmp
mov
fwait
xchg
mov
es
dec
jnp
or
jle
in
outsl
jl
sbb
mov
cmpsl
sti
inc
out
ret
dec
xchg
clc
mov
faddl
push
pop
inc
inc
movsb
jg
sbb
jns
inc
popf
fwait
or
or
inc
js
sti
jae,pt
dec
inc
mov
imul
mov
in
sub
add
scas
pop
mov
pop
sub
push
loopne
imul
lds
rclb
cwtl
cmpsb
mov
mov
xor
push
movsb
push
mov
lcall
xchg
call
addr16
sub
lods
pop
out
xchg
outsl
mov
sahf
lret
jl
lods
or
cmpsb
incl
pop
outsl
jbe
hlt
int3
les
xor
fbstp
sar
mov
pop
xor
mov
inc
add
adc
mov
leave
cmp
push
add
scas
jp
dec
sti
jl
pop
jae
pop
pop
scas
push
sub
sti
movsl
ljmp
pop
mull
or
repz
aam
mov
pop
cmpsb
sti
insl
dec
es
ret
cmp
in
adc
mov
mov
cmp
shlb
xchg
fsubl
add
clc
xor
xchg
xor
not
xorl
inc
or
inc
sbbl
pushf
arpl
sub
jecxz
pop
int
test
stos
imul
hlt
cmp
pop
or
or
adc
popa
fwait
inc
out
pop
pusha
jne
js
int3
inc
xor
pop
das
je
fwait
sub
loope
in
aaa
movsb
loope
mov
mov
push
sub
xor
add
adc
xor
jge
icebp
pop
sbb
idivl
stos
fxam
nop
fstpt
fs
dec
enter
hlt
enter
xor
and
mov
sbb
jle
mul
xor
addr16
stc
jbe
lret
movsl
mov
out
mov
les
movsb
push
call
ret
push
pop
inc
xchg
jle
leave
in
cmpsb
in
and
subl
xlat
mov
mov
inc
xchg
sub
push
andb
or
test
xor
xchg
in
xor
add
aam
int3
jmp
fs
xor
fs
loopne
dec
and
and
sahf
jge
push
popf
mov
push
es
test
push
and
adc
movsl
call
cmp
insl
hlt
ficomps
xchg
push
imul
mov
test
adc
jne
add
pop
xchg
push
das
mov
popa
sbb
push
adc
push
cld
cmpsl
outsl
xchg
nop
pop
xor
cmc
outsb
cld
dec
hlt
movsl
and
out
jmp
ret
pop
pop
mov
sbb
and
xor
cmp
in
out
sbb
fbstp
leave
aad
loop
mov
andb
mov
xchg
psubw
mov
or
or
cmp
or
adc
add
cmpsb
cmp
jbe
scas
lret
fisubl
sahf
adc
addb
or
jns
jns
mov
scas
and
cmp
imull
inc
mov
sbb
or
in
jge
mov
js
sbb
les
add
push
pop
loopne
mov
call
adc
jg
sub
xchg
push
ret
sub
into
imul
sbb
fstpl
push
sbb
mov
xchg
sbbl
cmp
hlt
add
int3
and
stc
leave
push
or
jge
sub
pop
or
call
gs
lret
pop
dec
loop
jl
insl
fcoml
daa
pop
inc
sbb
and
push
in
xchg
gs
inc
outsb
lods
stos
cmp
mov
xlat
jl
mov
sbb
sub
fiadds
adc
int
xorb
mov
and
jbe
test
inc
fidivs
lahf
add
adc
push
inc
dec
jg
and
ds
pop
dec
ljmp
mov
mov
xchg
andl
or
pop
jne
enter
jecxz
jnp
xor
pop
xchg
mov
icebp
inc
xchg
cltd
inc
pop
sub
xorl
inc
jb
cmpsl
rcl
mov
pop
addr16
jg
inc
test
mov
xchg
aam
or
xor
test
rcr
orb
jb
sti
stos
sbb
inc
jp
in
idivl
adc
fs
add
mov
cmp
addb
in
aam
dec
loopne
pushf
test
dec
loop
pop
clc
jecxz
add
test
adc
xchg
insl
arpl
shl
pop
bound
mov
enter
repz
xlat
aaa
push
sbb
test
sbb
cmpsl
inc
lea
int
or
sti
inc
inc
hlt
mov
aas
ficompl
sbb
push
stos
in
mov
push
clc
and
in
sub
or
push
dec
movsb
xorl
mov
insb
jg
mov
push
rcr
add
clc
pop
xor
into
mov
lcall
cmpsb
enter
pop
or
push
rcl
call
aad
insb
adc
imul
shr
mov
test
sbb
mov
inc
dec
pop
push
mov
fcompl
mov
aad
push
sahf
dec
mov
out
and
daa
push
inc
lahf
loope
mov
arpl
dec
add
frstor
movsb
sbb
add
sbb
enter
loop
jge
imul
or
mov
ret
fwait
mov
std
gs
sbb
scas
push
mov
ljmp
fmuls
cmpsl
sub
jp
lea
add
push
imul
repnz
dec
fs
movsb
inc
mov
xor
rcl
fists
xlat
sub
inc
mov
push
stc
inc
adc
cmp
lds
shll
xchg
adc
es
push
rcr
pop
push
aad
lea
nop
call
enter
lcall
mov
stc
mov
xor
jnp
gs
mov
repz
or
xor
outsb
pop
add
mov
movsl
call
aas
xchg
pop
add
aam
out
add
cld
cmp
sub
sarl
jl
mov
xor
iret
fadds
cwtl
push
out
ljmp
push
mov
cmp
xor
mov
inc
jae
pop
dec
shll
and
mov
js
int
fistl
mov
sbb
mov
add
cwtl
dec
inc
stc
mov
or
cltd
adc
push
push
add
jae
jo
pop
insl
aad
je
popf
push
xchg
rcrl
fisttps
and
cmpsb
and
notl
mov
mov
leave
pop
lcall
push
cs
adc
pusha
push
jbe
push
jnp
mov
xchg
cmp
pop
sbbl
ljmp
insb
mov
pop
popf
and
ret
lods
mov
adc
xchg
daa
ja
imul
push
lahf
push
push
cmpb
hlt
and
test
andb
and
and
push
dec
sub
push
pop
sub
mov
fwait
dec
cmp
js
test
push
and
sti
mov
ds
pop
inc
add
add
dec
je
js
sbb
jno
sti
push
call
aaa
pop
cmpsl
clc
rorb
mov
enter
push
popf
and
pushf
testb
pusha
insb
add
test
roll
inc
xchg
mov
jl
fildl
in
mov
mov
outsb
int
jl
mov
js
xor
adc
push
repz
mov
pop
push
fadds
mov
add
sar
loope
mov
and
shrl
scas
in
insl
call
js
xchg
sahf
movsl
int
adc
outsl
insl
fcmovbe
xchg
clc
js
test
lea
int3
xchg
add
std
inc
rcl
cmp
push
jno
sbb
fisubl
mov
leave
inc
fmul
xchg
out
dec
les
in
and
sub
inc
clc
or
mov
outsb
inc
iret
sub
cwtl
repz
in
lcall
fwait
lret
mov
xchg
push
filds
fists
clc
dec
fs
mov
mov
sub
adc
lods
jmp
lret
aam
jnp
es
ljmp
ja
in
mov
jmp
mov
gs
xchg
cltd
jp
mov
sbb
push
mov
ds
stc
jl
sti
add
hlt
fsts
or
cmp
mov
jb
mov
cli
pop
mov
ficoml
sbbl
out
jle
push
fildl
js
cli
ds
cli
dec
faddl
je
movsb
stos
leave
dec
popa
inc
aaa
xchg
enter
sbb
insl
xor
add
jns
in
in
push
xchg
sbb
cwtl
pushf
sub
hlt
cmp
cmc
push
lret
loopne
fstpl
test
je
ret
jg
fistl
push
inc
movsl
push
dec
jecxz
test
sbb
test
shufps
dec
dec
cmp
xorb
pop
inc
adc
or
xlat
test
es
jno
jnp
lods
jne
mov
mov
in
sahf
loopne
dec
push
shrl
rol
inc
push
xor
add
push
dec
cwtl
push
jae
push
pop
cmp
std
int3
fcomi
fwait
mov
sbb
mov
mov
inc
push
push
inc
out
jge
mov
xor
lods
jle
sbb
int3
stos
inc
mov
add
inc
dec
lds
jle
mov
and
mov
dec
cmp
shl
mov
sub
in
lods
pop
shrb
add
loopne
repz
mov
jns
xlat
pop
xor
sub
lret
add
mov
sub
cld
mov
int3
jbe
inc
mov
xlat
jmp
dec
push
adcl
xor
mov
sub
xchg
loop
les
leave
dec
mov
adc
xlat
jmp
mov
popa
fisubs
in
or
mov
mov
pushf
sbb
addr16
pop
mov
sbb
cmpsb
add
lods
or
mov
sub
insb
mov
mov
cmp
out
pop
push
jae
and
dec
test
xorb
mov
sub
lcall
push
jmp
jae
addr16
imul
or
jp
fsubrl
mov
pushf
loop
loop
sbb
push
and
pop
mov
test
loopne
cmp
xchg
ja
cmpsb
cltd
les
hlt
pop
lret
jp
xlat
adc
stc
add
xchg
addr16
aam
sub
les
dec
test
test
push
sbb
hlt
dec
add
clc
xchg
mov
mov
fisubrl
inc
aad
add
push
adc
fbstp
hlt
cmp
inc
push
adc
and
xchg
jno
push
cs
mov
xorl
pop
jb
movsl
push
inc
daa
in
adc
bound
mov
movsl
subl
xchg
roll
sbbb
insb
dec
dec
push
sub
sbb
jle
lock
jmp
popf
daa
imul
ja
out
ja
scas
push
aam
xchg
sub
lret
jno
jnp
pop
aaa
orb
push
inc
fidivl
cmp
mov
in
inc
fsubs
fildl
push
fisubl
pushl
push
or
addr16
je
enter
scas
push
aam
adc
xchg
xchg
adc
xchg
dec
jg
adc
sub
aaa
fisubrs
inc
and
pop
roll
insl
xchg
aam
mov
ljmp
fucomp
fisttpll
dec
push
inc
rclb
repz
mov
pushf
jnp
xchg
test
and
sub
xor
mov
add
insb
aaa
sbb
in
out
jno
and
dec
add
imul
pop
mov
pushw
punpckhdq
loop
cld
mov
in
jl
repnz
push
sbb
push
push
in
push
xchg
cwtl
or
sti
ror
push
lret
out
xlat
call
and
push
xchg
push
and
cmpl
jae
js
jg
add
dec
and
lds
dec
sbb
dec
add
xor
pusha
das
add
add
lahf
lds
and
std
subb
inc
cmp
cmp
sbb
jg
aad
jno
mov
or
fildl
ljmp
repz
mov
adc
sbb
mov
lds
and
push
sbb
fs
pop
lret
dec
pop
imul
test
mov
inc
pop
les
ret
sti
adc
mov
cwtl
push
xor
je
push
jns
push
scas
dec
cmp
mov
mov
sub
add
fisubrs
mov
xchg
les
out
xchg
ss
scas
pop
add
adc
pop
jbe
repnz
jl
sub
or
xor
xor
insb
jp
push
xor
in
jecxz
dec
fs
inc
dec
cmp
bound
es
repnz
push
and
in
fwait
push
imul
fcomi
jne
push
xor
addr16
stos
fdiv
fldt
xor
test
cmp
jo
faddl
pop
inc
mov
das
or
mov
outsl
shll
add
setp
incl
sub
test
jns
std
or
arpl
lcall
adc
jnp
rorl
pop
or
mov
aam
lods
mov
inc
mov
mov
mov
sbb
adc
loope
add
int
test
out
les
insb
jmp
loop
adc
pushf
push
or
orl
adc
std
stc
xchg
sbb
repz
add
sbb
js
mov
in
int3
rcl
mov
push
inc
sbb
xchg
pop
jo
cmp
mov
push
insb
push
pop
fidivs
scas
les
je
jae
lcall
xor
data16
data16
jl
inc
jp
mov
pop
ret
dec
or
popa
jb
enter
scas
jmp
ja
data16
fildll
dec
mov
mov
out
xbegin
outsl
and
in
lret
pushl
jecxz
and
sub
pop
sti
xchg
jmp
addr16
std
lods
xchg
jl
add
and
jl
loop
jo
push
pop
sub
mov
cmp
flds
dec
mov
loope
mov
mov
mov
loop
xchg
inc
pop
cld
or
clc
out
aad
fcomip
pop
add
mov
mov
bound
iret
dec
ss
cmc
jb
dec
stc
jecxz
lret
shrl
xchg
or
in
idiv
sbb
and
cwtl
aas
imul
out
push
jns
xchg
sbbb
inc
shrl
imulb
mov
dec
xor
xchg
inc
les
adc
xchg
jmp
in
push
xor
rclb
ljmp
outsl
cmpsl
xor
movsb
mov
lds
pop
mov
leave
out
sub
outsl
xor
add
cli
mov
sti
inc
dec
dec
repnz
mov
mov
bound
sub
fidivrl
loope
mov
push
mov
adc
push
cmp
test
add
cmp
xchg
cmpsb
sbb
stos
fadd
sbb
xlat
ss
std
adc
xlat
mov
xchg
or
mov
mov
imul
xchg
inc
movsb
fadd
inc
repz
lahf
cmpsb
or
and
loope
dec
fld
and
adc
cmp
push
es
jg
mov
mov
sbb
cmp
or
xchg
pop
insl
xor
rolb
insb
mov
out
dec
xchg
xchg
and
adc
pop
gs
fnstenv
and
jmp
pop
mov
inc
sbb
mov
aas
orl
loop
out
imul
fstpt
jmp
gs
fstpl
popa
xchg
test
or
dec
dec
es
outsl
std
fsub
movsb
add
xchg
push
popa
and
je
sbb
ds
mov
mov
mov
push
xor
or
pop
sub
mov
push
adc
mov
ret
and
sbb
andl
push
sbb
faddl
jmp
jp
sub
mov
pop
adc
pop
push
cltd
jne
jo
mov
mov
inc
clc
cli
adc
int3
ds
dec
jb
call
jbe
adc
cltd
bound
mov
arpl
lds
fisubl
pop
push
mov
cli
cltd
cmp
ficoms
jle
sahf
push
mov
or
pop
jo
pop
pop
nop
stos
cmp
out
mov
pop
insl
sbb
push
sbb
adc
or
test
stos
xor
xor
lret
fmull
clc
in
mov
fstpt
mov
idivb
inc
insl
or
xchg
push
dec
shll
repz
nop
shll
push
pop
inc
adc
dec
adc
lods
outsl
push
loopne
orl
mov
mov
cld
bt
int
mov
mov
lock
loopne
jp
inc
mov
pop
lahf
nop
fdivs
inc
movsl
test
mov
pop
add
push
push
pop
divl
or
lea
out
daa
repz
mov
jo
lods
out
or
imul
in
jno
mov
jmp
mov
faddl
push
outsb
lods
inc
les
pop
mov
inc
rcll
fadd
std
add
push
pusha
mov
xlat
push
add
cmp
sbb
repz
jb
jb
xor
xor
xor
lock
dec
mov
repnz
lea
flds
xrelease
sbb
cmp
jle
cltd
pop
sbb
icebp
jecxz
xor
bound
dec
cmpsl
mov
xor
xor
js
add
xor
xor
popa
mov
sahf
imul
dec
call
inc
cmpsl
cs
icebp
mov
mov
in
shrb
jmp
xorb
mov
into
loopne
inc
xor
das
cmpsl
xchg
cmp
or
in
inc
dec
sub
cmp
add
xchg
cmpsl
or
je
clc
push
mov
xor
push
jno
pop
daa
cmp
mov
cs
sub
xchg
xor
inc
fstpt
les
xlat
xchg
add
adc
adc
dec
loop
lock
and
xchg
push
or
mov
shrl
jo
mov
mov
fwait
test
mov
ljmp
clc
or
mov
xchg
rolb
imul
scas
dec
or
adc
pop
jmp
mov
dec
xchg
ret
pushf
leave
xor
cld
cli
cmp
push
movsb
jge
mov
mov
popa
neg
into
inc
sbb
aam
and
sub
movsl
aas
stos
cmp
mov
mov
lret
mov
jl
add
mov
add
ret
lret
push
pushl
xor
lcall
out
or
in
dec
and
sahf
dec
push
dec
fisttpl
push
pop
imul
mov
leave
pop
mov
mov
shr
in
pop
adc
and
dec
mov
inc
sbb
or
mov
test
pinsrw
pop
hlt
lcall
xchg
sub
jae
in
fwait
mov
push
add
test
testb
add
mov
and
dec
jae
in
dec
leave
dec
jne
pop
int3
push
push
cmp
cmp
and
insl
push
cmp
leave
adc
xorl
and
mov
sbb
call
sbb
pusha
sbb
lcall
cli
jae
int
insb
hlt
sub
lret
loope
adc
fucom
arpl
mov
cmp
mov
adc
out
mov
leave
in
int
mov
aaa
mov
pop
insl
push
outsb
and
sbb
mov
or
cltd
inc
dec
adc
add
ss
pusha
jge
dec
and
jl
push
mov
push
dec
xor
sbb
adc
dec
sarb
int3
inc
ja
xchg
sub
mov
sbb
and
adc
xchg
dec
ja
mov
adc
jmp
in
sbb
mov
xchg
inc
repnz
popa
cli
push
dec
movl
leave
mov
mov
stos
lret
rcl
jbe
and
xor
dec
mov
jg
outsl
adc
sti
arpl
push
cmc
cmp
ficoml
in
hlt
or
pop
adc
and
and
dec
inc
inc
fcomps
sbbb
mov
in
add
or
push
mov
push
pop
test
dec
loope
repz
enter
pop
out
mov
leave
hlt
pop
xchg
xor
cltd
xchg
lock
mov
dec
sbb
fildll
sahf
sbb
or
sbb
es
xor
sbb
fildl
jns
pop
add
in
js
jnp
sbb
daa
in
jae
sbb
loopne
popf
xchg
arpl
jl
dec
mov
daa
cli
dec
cli
xchg
and
in
cmc
dec
dec
mov
inc
popf
push
call
mov
xor
push
aaa
and
cli
pop
push
sbb
adcb
or
sti
xchg
push
imul
das
mov
mov
mov
leave
outsl
fisttps
mov
xor
cmovno
repz
add
pop
dec
in
jle
iret
pusha
jg
adc
pop
popf
fdivs
and
mov
or
in
sahf
shlb
cwtl
mov
cld
aam
out
push
mov
cmp
dec
loop
mov
pop
adc
jp
jecxz
mov
push
movsl
mov
nop
outsl
repnz
repnz
jp
stos
mov
mov
push
xchg
xor
cmpsl
mov
jae
jo
aam
push
jg
mov
mov
clc
and
ljmp
lret
ret
out
mov
insl
fnstenv
jno
mov
jb
jnp
jb
shl
mov
pop
dec
and
xor
nop
xor
inc
sub
add
adc
lods
in
dec
outsl
aaa
pop
fiaddl
shlb
jp
es
icebp
test
dec
jl
and
imul
mov
mov
in
pop
loop,pn
int
cmpsl
cmpb
mov
inc
popf
jnp
mov
shll
pop
enter
or
jl
cmp
imul
addr16
mov
dec
cmpsl
cmp
pop
movsl
gs
mov
dec
bound
dec
test
xchg
lret
out
in
jle
aam
and
xor
or
inc
mov
jl
dec
test
pusha
imul
jb
sti
popf
mov
loopne
fldcw
sahf
pop
or
movsl
lret
and
out
scas
mov
jle
adc
adc
in
popa
ret
sbb
jae
cmp
ficompl
insl
and
and
cmp
rcrl
mov
and
stc
test
dec
add
insl
fistpll
cmpl
push
test
imul
stos
mov
dec
lcall
pop
sbb
repnz
loopne
xchg
pop
fsubrs
call
dec
jne
xorl
mov
adc
shl
inc
cmp
rol
into
addr16
out
shll
cld
sbb
enter
sub
out
fnsave
lahf
int
stos
aaa
stos
pop
aam
fwait
aam
inc
xchg
addl
adc
daa
mov
push
mov
mov
dec
jno
loopne
jge
pop
jae
ficompl
mov
jmp
call
push
movsb
roll
push
in
jno
cmc
xor
adc
int
fcompl
repz
or
out
out
jl
fldenv
lcall
lcall
outsb
insl
xor
mov
jp
push
push
out
jno
or
sub
jmp
ljmp
or
inc
push
pushf
aad
sahf
iret
std
in
add
shrl
push
push
dec
scas
sbb
test
je
pop
movsb
fisttpll
scas
aad
adc
or
fcmovnbe
xchg
or
or
scas
mov
dec
sti
push
cmp
mov
ret
jmp
inc
inc
pop
icebp
sub
cli
mov
ret
push
jae
mov
push
sarl
adc
loop
pop
outsb
idiv
fsubrs
cs
mov
jo
dec
dec
xor
push
mov
jb
push
pop
push
push
add
xchg
push
cmc
xor
pop
jbe
inc
jae
scas
jno
xchg
add
arpl
pop
mov
push
in
mov
cwtl
lcall
test
sub
jle
cmp
mov
mov
lahf
gs
into
cltd
out
dec
adc
ja
stos
cmpb
mov
mov
int
cmp
sub
aas
adc
mov
insl
cmp
xlat
pop
enter
pop
cld
fnsave
xchg
int3
pop
push
xor
and
aam
cs
mov
lcall
dec
cmp
dec
dec
fsubrs
pusha
int
out
leave
ljmp
push
mov
pop
outsl
mov
lahf
jecxz
aad
pop
lock
decl
jbe
adc
pop
int3
xor
xor
jne
pop
pop
lods
repnz
cld
adc
incb
out
jl
mov
pusha
or
jg
adc
cmp
imul
or
mov
sti
sbb
pusha
nop
mov
test
push
xchg
jae
out
xor
je
sti
cmp
inc
stos
lods
mov
shlb
xor
imul
fistps
push
ds
test
mov
push
or
jnp
jecxz
jmp
jmp
stos
shlb
pop
frstor
cmp
xchg
inc
sti
int3
xor
data16
pop
inc
fdivrl
xor
mov
fs
mov
or
scas
mov
dec
mov
sub
jge
pop
fcomip
clc
cmpsb
lahf
fistpl
bnd
jno
ss
lcall
mov
pop
lcall
lods
loop
ss
mov
cmp
push
testb
xor
mulb
shrb
mov
xor
pop
xchg
jbe
aas
dec
andl
sbb
out
cli
insl
jae
aaa
int
pop
inc
sbbl
bsf
fwait
mov
inc
jnp
hlt
push
mov
push
test
lock
add
test
and
jo
gs
xor
ja
pop
shlb
mov
scas
xchg
aaa
int
enter
out
or
pop
and
cmpsl
adc
jmp
inc
mov
dec
cli
jmp
inc
push
dec
cli
jle
sub
mov
xchg
mov
mov
cltd
lea
es
out
xchg
and
cmpsl
inc
out
loopne
and
dec
xor
jge
subb
inc
cs
mov
mov
and
scas
mov
add
and
rol
pop
sbbb
arpl
lods
cmpsb
lea
popa
ds
jb
sub
xor
sbb
gs
jl
mov
decl
push
jl
pop
xchg
jle
xchg
sti
jle
das
mov
enter
addr16
sahf
std
mov
jmp
mov
jg
sbb
aaa
inc
cmpsb
repz
push
test
es
push
push
dec
pop
insl
loopne
jbe
jno
fldenv
jg
mov
cli
mov
neg
clc
repnz
dec
or
cmpsl
mov
test
in
adc
and
xchg
ret
add
cwtl
lods
aad
sub
and
sbb
mov
outsl
mov
dec
push
cmp
fdivrl
jmp
insl
mov
std
gs
into
xor
adc
push
inc
imul
and
mov
xchg
loopne
lods
mov
daa
dec
notl
jbe
nop
div
arpl
lcall
or
jne
out
mov
xchg
aas
divb
sbb
push
ror
sub
or
out
stc
push
xor
xor
outsl
iret
cmpsl
mov
dec
gs
mov
dec
mov
dec
jmp
stos
add
test
and
xchg
sbb
add
cs
sbb
ljmp
pop
hlt
pop
fmulp
push
dec
lcall
mov
shrb
pop
inc
adc
clc
cmp
or
test
xor
pop
gs
out
fstpl
mov
mov
add
imul
sahf
cli
cmp
sarb
and
fisttpll
lods
shll
fistps
adc
mov
scas
dec
in
lret
xchg
sbb
xor
mov
aaa
cld
rolb
add
aaa
pop
out
inc
aam
enter
push
or
aam
jns
out
lret
test
imul
mov
test
outsl
cmp
fisttps
mov
into
jl
jb
cmpsb
fnstsw
and
push
jmp
mov
aam
lds
xchg
fwait
std
int3
test
ret
nop
inc
fwait
mov
inc
jp
aas
shr
push
jae
in
pusha
xchg
andl
inc
cmp
ja
ja
dec
cmp
int
rcll
iret
and
dec
adc
mul
gs
sbbl
ret
call
popf
xor
enter
and
push
inc
mov
inc
movsl
jb
pusha
push
fucomp
and
in
add
pushf
imul
and
xchg
mov
inc
xchg
dec
insl
imul
mov
lahf
cmp
test
cltd
pop
cmpsl
and
dec
jle
pop
cmp
push
outsl
and
mov
xchg
pop
cmp
popa
cmp
sub
mov
cmc
pop
clc
outsl
lret
mov
mov
lods
es
cli
cmp
rcrb
add
testl
pop
xor
mov
xor
enter
jge
push
in
call
xor
pushf
pop
mov
jp
lahf
outsb
lret
daa
test
mov
loope
out
cmpsl
push
mov
jmp
and
cmp
ja
pusha
pop
xchg
fdivrs
es
or
jbe
add
addr16
xchg
mov
inc
jno
in
shlb
pushf
icebp
in
inc
dec
lods
bnd
imul
push
xlat
out
push
jbe
xorl
mov
mov
pop
inc
fdivl
into
inc
rcrb
stos
sub
or
cli
jbe
arpl
and
aaa
adc
jecxz
fsubrs
nop
xchg
cmp
inc
out
adc
in
ror
call
cld
push
pop
test
mov
addr16
push
scas
xor
fstps
mov
or
out
scas
pushf
xchg
ret
dec
cmp
popa
jo
and
cmpsb
and
addr16
mov
rcrb
divb
int3
lahf
push
push
shlb
mov
add
lods
fsubrp
idiv
or
pusha
mov
lock
mov
push
jne
jae
ljmp
cmp
xchg
addl
mov
sbb
fdivl
ss
jp
rolb
incb
in
pop
xorb
cld
outsl
adc
mov
cmp
push
repnz
cmc
popa
rcll
mov
xchg
sub
mov
dec
jp
ja
push
ds
icebp
jg
iret
aam
or
cltd
ret
inc
push
mov
mov
push
inc
pop
ret
mov
jmp
mov
and
jmp
lret
insb
inc
leave
adc
jnp
sbb
enter
stos
movsb
cmp
cmp
in
dec
popaw
cs
into
xor
xorb
lret
lods
add
lods
and
mov
movsb
imul
xor
pop
push
or
mov
add
int3
and
outsl
sbb
dec
fwait
mov
xchg
lods
sub
push
int3
fnstcw
aam
push
sbb
cmp
pop
out
in
lea
mov
mov
fmuls
sub
loop
pushf
mov
push
push
scas
cmp
xor
popf
jle
cli
adc
xchg
push
xor
or
or
pop
push
les
xchg
data16
out
and
js
loop
sub
mov
pop
bound
mov
lds
lock
std
nop
push
xchg
fcomp
sbb
cmp
or
adc
pop
add
leave
mov
movsl
xchg
fwait
nop
loope
fdivl
pop
sbb
add
sti
jg
lret
jp
jo
out
sub
imul
cmpsb
outsb
jg
add
push
fcoml
mov
dec
in
adc
adc
mov
leave
xchg
out
mov
fs
sarl
jecxz
sbb
pop
aam
mov
pop
xchg
stc
int3
dec
jns
out
cmp
fs
test
clc
dec
test
ss
push
filds
mov
lods
js
shrl
pop
mov
in
test
add
jnp
sbb
cmp
stos
jnp
pop
ret
cs
pop
lret
fwait
xchg
loope
stos
sbb
jl
pop
mov
in
popa
das
mov
hlt
clc
clc
cwtl
sbb
sub
pop
in
addr16
gs
outsl
adc
push
inc
sarl
lods
jo
in
sbb
scas
push
inc
aam
add
pop
or
mov
and
movsb
push
lahf
aas
dec
test
fldl
add
lret
sub
out
jge
jge
outsb
leave
mov
enter
mov
daa
aas
mov
jg
xchg
out
sbb
push
push
shr
and
cmp
daa
push
cmp
icebp
daa
mov
cmp
fisttpll
popf
scas
mov
sub
cmp
lods
xchg
xchg
push
rclb
mov
sbb
es
push
test
push
lds
cli
ljmp
out
in
pop
cmc
pop
stos
jg
dec
and
pop
ret
mov
adc
push
jg
fidivrs
mov
cmpsb
mov
scas
cmc
hlt
dec
fidivs
xor
fldenv
dec
jo
sbb
in
mov
ret
call
pusha
cmpsb
das
in
ret
iret
aad
dec
fildll
mov
daa
je
sbb
mov
sbb
movsl
adc
pop
mov
ret
jne
scas
in
je
push
in
or
adc
add
inc
pop
mov
jno
faddp
pusha
jg
incl
std
sbb
xchg
inc
jecxz
push
fsubr
and
ficomps
xchg
cwtl
jnp
int3
loope
adc
and
in
adc
enter
inc
sub
cmp
sub
dec
pop
xor
xor
push
inc
call
dec
mov
cmp
xor
arpl
aas
loop
ret
mov
push
and
lock
roll
sbb
mov
vsqrtss
in
adc
clc
imul
xchg
jmp
or
jp
mov
pminsw
push
lods
xchg
test
pop
mov
stos
pop
xor
aam
test
out
mov
imul
pop
dec
test
mov
mov
ret
add
mov
into
ret
stos
daa
leave
iret
pop
xchg
subl
add
bound
shl
enter
push
push
in
fcoml
popa
inc
mov
in
xchg
cmovae
test
pop
sbbl
ds
add
ljmp
testb
sahf
jle
sub
jle
cmpsb
negb
mov
add
stc
cwtl
and
cmp
cmp
cli
xchg
cmp
jne
jbe
push
xchg
or
or
xchg
pop
int
or
push
shlb
and
loope
add
cli
push
push
jmp
add
push
push
test
mov
xchg
popa
scas
js
mov
mov
outsl
aad
gs
jns
jbe
xor
jecxz
addb
dec
cmp
lcall
divb
mov
and
jnp
xchg
jns
adc
fcmove
push
or
sbb
shll
loopne
jecxz
jo
das
mov
insl
lods
push
icebp
sahf
lds
outsb
xor
mov
outsl
aam
pushf
lret
cmp
pop
sub
sbb
loopne
mov
cmpsb
mov
hlt
pushf
sub
mov
push
pop
pop
in
sbb
xchg
mov
push
push
cld
cmc
xchg
sahf
mov
sub
iret
daa
shl
insb
lds
loop
adc
test
jno
nop
fiadds
pop
pop
jbe
jae
cld
mov
and
mov
ljmp
pop
and
outsb
stos
adc
xor
movsl
ds
pushf
jg
push
sbb
xor
nop
add
push
xchg
dec
cmp
xlat
stos
int
cmpsl
mov
into
mov
jle
inc
mov
js
scas
push
enter
cwtl
in
in
sub
xor
and
push
loopne
scas
or
imul
iret
sub
enter
push
xor
test
or
jns,pt
jbe
xor
jge
xor
add
rcl
xchg
rcrl
rcl
mov
ficomps
orb
xor
cmp
push
nop
sarl
ljmp
mov
sbb
hlt
pusha
xchg
mov
aam
cs
or
addl
xchg
pop
push
sub
out
arpl
mov
inc
adc
popa
mov
cmpsl
test
jne
pop
lods
pop
fs
push
ljmp
loope
xlat
adc
lahf
mov
gs
pushf
mov
push
mov
pop
lock
push
outsl
lahf
sub
ret
gs
pop
stos
xchg
xor
sar
cld
inc
dec
into
test
imul
stc
jne
data16
ds
fwait
pop
out
pop
fisttpll
out
mov
movsb
lock
loopne
outsb
cmp
pop
lods
cmpsl
iret
loop
call
popa
ret
neg
movsl
adc
rol
jmp
adcl
bnd
insb
les
pop
enter
mov
pop
loopne
dec
inc
loopne
and
out
pop
dec
loope
cmp
or
mov
mov
sub
cld
mov
insl
out
test
xorb
add
mov
mov
xchg
sub
cmp
stos
pop
ror
aaa
cmpb
nop
jbe
mov
xorb
cmpsl
pusha
cmp
and
add
clc
lahf
mov
sbb
stos
lahf
popa
lcall
inc
inc
xchg
shlb
xor
lods
sbb
mov
mov
jle
xor
icebp
mov
mov
ret
push
cmpsb
jnp
cmc
lods
jae
jns
push
xchg
cmp
fcoms
pop
ret
push
sub
dec
pusha
popf
mov
data16
mov
inc
mov
call
xchg
and
push
dec
mov
sti
pop
cmp
xor
in
cmpb
dec
imul
inc
push
aam
sub
pop
fdivl
dec
mov
dec
pop
aas
inc
test
xchg
lods
and
notl
adc
jae
in
and
loop
daa
adc
inc
pop
in
or
int
fldenv
xlat
fimuls
test
and
or
jecxz
pop
adc
jmp
nop
inc
push
mov
mov
jnp
push
and
add
nop
mov
aaa
push
jb
icebp
mov
fiaddl
adc
mov
pop
jb
adc
addr16
pminub
imul
ljmp
test
mov
adc
xchg
add
iret
mov
es
jae
lods
les
shrl
jb
bound
into
and
in
sub
push
clc
jbe
mov
test
movsb
movsb
sti
inc
stos
jae
repz
loopne
sbb
inc
push
jg
frstor
shrb
mov
jne
sub
pop
mov
sbbb
cmp
push
cld
cmp
shlb
aaa
add
push
test
in
lret
movsb
bound
mov
data16
jmp
test
orb
lret
mov
adc
std
mov
les
xchg
xchg
cmpsb
pop
ds
jle
cmc
add
imul
mov
imul
out
mov
jbe
add
std
or
fbld
outsl
jge
enter
js
sub
out
or
in
stc
push
shll
dec
cmp
dec
add
out
push
and
jnp
dec
out
nop
lods
cltd
les
lds
xchg
ss
outsl
mov
sbb
jo
sub
jno
inc
mov
rclb
jl
sbb
and
sub
jns
jns
and
test
pop
xchg
mov
mov
nop
mov
xchg
sub
sub
sub
sub
push
cmp
xor
pop
jecxz
xor
add
cmp
loop
mov
jo
jno
push
test
mov
mov
push
lret
dec
test
das
dec
push
jp
call
dec
and
sbb
scas
jmp
xchg
shll
in
xchg
scas
jge
fsubrs
hlt
dec
mov
mov
or
inc
imul
pop
sbb
test
push
push
pop
lock
add
ljmpw
shlb
sub
jnp,pn
test
xor
sarl
iret
mov
mov
cwtl
fdivrl
sub
pop
mov
jae
sbb
loopne
daa
outsb
je
push
jg
cs
jg
outsl
cmp
add
into
repz
adc
push
adc
pop
xchg
sbb
repnz
test
xor
adc
nop
cmpb
pop
enter
cli
arpl
dec
call
sbb
mov
inc
shll
add
imul
jp
enter
mov
in
pop
fwait
sbb
repz
in
dec
movb
mov
jno
jg
sbb
aas
push
inc
in
pop
andl
iret
out
je
rolb
pushf
lcall
subb
jbe
in
xchg
adc
pop
cmp
adc
jge
dec
inc
push
movsl
scas
jge
aad
pmulhw
sarb
fsubrs
mov
mov
dec
pop
fisubrs
xor
sbb
sub
addr16
push
sub
inc
popf
jnp
mov
repnz
gs
insl
scas
push
andb
pop
push
out
loopne
mov
insb
std
scas
or
pop
mov
or
ds
sar
inc
sahf
pop
test
pop
das
push
aaa
mov
mov
push
and
sub
jmp
jmp
push
xchg
mov
push
cmpsl
cmp
xchg
sti
out
xor
outsl
adcl
cmp
xlat
jno
sbb
mov
mov
mov
js
roll
xchg
out
push
dec
push
xchg
xor
cwtl
or
lahf
pop
adc
and
pushf
and
or
mov
add
sbb
rorl
test
inc
pushf
mov
jns
jl
xchg
in
dec
push
cmc
push
xor
fwait
bound
hlt
stos
popf
in
addr16
scas
ret
nop
in
mov
push
or
cmp
orl
push
gs
outsl
insl
aad
inc
sub
sub
dec
nop
imul
data16
xchg
test
outsl
scas
jns
jno
adc
jo
into
imul
inc
jo
imul
xchg
dec
ljmp
push
or
adc
dec
jl
dec
arpl
lcall
cld
cli
jle
pop
and
adc
jecxz
cltd
mov
rol
repz
mov
mov
pop
xor
or
or
lcall
mov
fisttpll
or
and
out
xchg
jp
mov
dec
imul
or
push
sbb
lock
and
mov
pop
test
ficoms
mov
pop
jl
in
mov
cpuid
mov
and
push
mov
adc
mov
fistpll
cwtl
shrl
mov
cld
adc
adc
or
pop
fwait
add
xchg
idiv
jne
fiadds
inc
test
mov
bnd
movl
xchg
mov
sub
adc
fidivrl
mov
jne
test
mov
sub
dec
mov
and
dec
mov
test
jns
mov
mov
sti
mov
shlb
js
cmp
mov
jns
ds
xor
jl
stc
push
call
jmp
add
imul
mov
ja
add
jnp
call
inc
dec
add
add
adc
xor
cmpsl
jns
and
xchg
orb
je
push
in
fdivl
push
push
dec
or
jecxz
mov
push
and
mov
xchg
sbb
neg
movsb
sub
pop
adc
stos
imul
jle
and
cmpsb
push
sbb
lea
int3
mov
sub
std
sarl
iret
fmuls
and
arpl
xor
xor
or
xchg
pop
addr16
cld
or
clc
lea
mov
pop
add
mov
jmp
test
add
insl
mov
and
and
jge
mov
adc
iret
inc
pop
xor
out
xor
pop
mov
scas
gs
test
test
lods
xchg
pop
pop
je
push
aam
mov
fidivrl
das
clc
mov
sbb
adc
aad
jecxz
cmp
adc
dec
lret
cmpl
fisubs
push
imul
xchg
in
jmp
adc
mov
push
test
outsl
outsl
dec
mov
imul
into
ror
ret
xor
dec
sahf
scas
jmp
xchg
xchg
out
cmpsl
push
or
cmp
add
into
sbb
or
dec
or
mov
or
fnstcw
jecxz
inc
adc
fiaddl
nop
sbb
lock
stos
shrl
adc
int
or
lret
mov
inc
pop
hlt
sbb
mov
inc
xor
pop
push
jecxz
insl
cs
jle
jmp
pop
dec
outsl
mov
jne
insb
mov
imul
adc
fs
lahf
fcomip
xchg
sub
dec
mov
mov
jecxz
divl
inc
mov
inc
sbb
jb
enter
loop
enter
push
sbb
mov
xor
push
dec
out
push
jnp
stos
ja
sub
stos
jecxz
arpl
xchg
mov
cmp
push
jns
adc
iret
out
xchg
sub
xchg
arpl
dec
lahf
inc
adc
insb
mov
push
adcb
and
lret
lret
test
pop
mov
ss
xchg
lds
jne
movsl
out
lretw
dec
cltd
xlat
dec
mov
push
cwtl
aam
popf
fmuls
add
xor
lods
cltd
mov
frstor
xchg
je
addb
jmp
in
roll
test
mov
sbb
loope
dec
pop
cli
in
mov
pop
in
imul
clc
movsb
pop
aad
mov
lea
and
xchg
push
subl
adc
lds
mov
dec
mov
sbb
sbb
pop
lahf
lret
lret
dec
mov
addr16
pop
data16
and
lret
add
sti
add
ret
dec
cmp
push
lcall
push
icebp
and
mov
add
adc
xlat
adc
in
dec
into
mov
insl
dec
ror
mov
xchg
push
ret
icebp
scas
sub
jle
scas
fldl
mov
push
adc
mov
daa
adc
cmp
ss
pop
cwtl
add
add
xchg
push
lods
popf
fstl
and
xor
inc
dec
sub
and
das
imul
push
lret
xchg
cmp
dec
xchg
mov
adcl
push
in
repnz
fnstcw
jns
out
gs
insb
das
popa
lret
sbb
mov
sub
pushf
arpl
and
ss
push
movsl
int3
faddp
xorl
sub
jecxz
jb
add
ja
out
sbb
test
addr16
cmpsb
xchg
add
sub
sub
mov
xchg
add
mov
pop
out
cmp
icebp
mov
pop
test
icebp
sbb
adc
decb
push
fbld
inc
fisubrl
or
jb
shll
pop
ds
push
pushf
inc
jb
inc
dec
xchg
rorl
push
call
out
testb
inc
lret
js
das
pop
loope
lret
cltd
test
jns
xchg
mov
enter
sub
mov
arpl
arpl
mov
xor
pop
addr16
mov
xor
mov
shll
or
push
cmp
sbb
dec
lea
jp
push
mov
dec
xlat
inc
mov
add
dec
adc
std
adc
paddb
and
cmpsb
stc
out
pop
xchg
inc
call
xor
xor
nop
mov
xchg
pop
daa
mov
ja
in
or
xor
dec
jae
aam
cwtl
cwtl
stos
shrl
cmp
jno
adc
mov
js
ja
mov
cmp
mov
jle
jb
and
xor
lds
fisttpl
jge
xrelease
adc
cli
iret
bound
in
add
xchg
jge
pop
popf
in
dec
xchg
or
js
push
jecxz
shll
jne
jmp
popf
cmp
push
push
mov
std
pop
cmp
mov
inc
adc
add
push
cltd
mov
pop
mov
push
divb
pop
sbb
addr16
jb
fcmovbe
sbbb
mov
bound
xchg
out
je
mov
mov
dec
push
shr
out
jge
dec
loop
xchg
fs
mov
sbb
cmp
aam
aas
sub
pop
push
cmpsl
adc
mov
xlat
stc
pop
xor
notl
cld
repz
fldcw
sub
jno
mov
xor
lret
push
daa
mov
xor
fnstenv
sti
pop
jns
mov
ljmp
dec
out
scas
int3
jno
fstps
sub
orb
into
dec
les
dec
xchg
int
mov
aaa
xlat
aam
inc
pop
icebp
lock
mov
test
das
in
cmp
pusha
dec
mov
push
call
ljmp
jbe
jecxz
fildl
pop
xchg
cmp
jmp
dec
xchg
sahf
jg
push
inc
cmc
mov
jne
fbstp
dec
loopne
xor
icebp
cs
cmp
jo
add
xchg
lret
xchg
adc
add
aam
fistl
ja
cmp
push
jle
mov
shlb
ss
mov
mov
nop
inc
pop
into
and
imul
inc
por
lods
push
and
dec
jns
inc
pop
in
inc
ja
cmp
jb
cli
punpckhwd
testl
test
in
call
test
imulb
inc
out
xchg
ss
sub
add
or
ficompl
and
pop
outsb
mov
cmp
mov
sahf
movsb
imul
push
dec
pushf
scas
add
movsl
fisubrs
adc
jo
out
aaa
mov
sbb
enter
mov
lret
xor
es
ss
out
out
sub
xchg
ss
leave
push
lret
jle
xchg
push
jno
sahf
inc
jp
or
pop
mov
cmpl
and
insl
movsl
pop
idivb
mov
sbb
sbb
ljmp
cmp
push
push
jg
pop
test
sub
mov
mov
cmp
cli
inc
sbb
jg
movsl
adc
sub
mov
push
add
adc
xor
mov
push
mov
inc
call
dec
mov
pusha
pmulhw
notl
push
sub
nop
pop
mov
adc
data16
mov
dec
xor
mov
sub
dec
leave
adc
arpl
mov
pop
js
out
push
cmpl
ljmp
scas
enter
inc
sub
fs
loope
fs
push
inc
or
cmp
mov
sbb
xor
subl
pusha
pop
scas
mov
cmc
js
test
fcomps
pop
lcall
sti
inc
sub
icebp
jno
iret
jnp
cmpsb
and
or
cmc
je
adc
pop
jbe
sub
hlt
mov
fimuls
in
mov
fadds
call
cli
pushf
shr
cmp
bound
cmp
repnz
mov
cmp
add
rcl
mov
les
push
gs
negb
mov
xor
std
mov
aam
mov
fwait
mov
mov
in
push
int3
cmpsb
push
pop
repnz
mov
sti
loop
or
shll
imul
and
and
imul
bound
bnd
and
es
and
xlat
mov
repnz
sbb
fsubl
test
jns
or
mov
rcr
mov
shr
les
sti
lds
test
pop
sbb
adc
push
mov
icebp
sti
pop
sub
insb
add
push
fwait
mov
mov
andb
push
mov
out
jb
adc
xchg
aaa
out
pop
push
push
in
inc
movsl
addr16
mov
fs
xchg
add
mov
dec
push
sarl
adc
movsb
mull
and
push
popa
fwait
sbb
inc
xor
int
push
int3
jl
sahf
notl
lods
aam
cmpsl
cmp
pop
sub
cs
icebp
jb
jg
les
pop
test
repz
out
sbb
xor
cmp
mov
fwait
sahf
push
stos
jbe
add
mov
mov
out
jle
imul
es
mov
jno
push
test
pushl
xorb
sub
ret
sbb
mov
pop
push
out
cmp
call
mov
jecxz
outsb
xchg
pop
xchg
test
pusha
pop
inc
in
dec
div
mov
jmp
ror
in
das
iret
sahf
sbb
and
and
mov
shl
sub
rcll
fisubrs
cmp
jge
push
outsl
xor
mov
pop
xchg
jge
pop
aad
inc
dec
sub
std
cld
and
jge
mov
test
out
pop
out
test
mov
rclb
mov
push
scas
jmp
test
das
xchg
cmpsb
fs
pop
testl
fcmovnb
movsb
andl
pop
xlat
mov
mov
hlt
jo
push
pop
lea
out
das
sarb
std
pop
inc
or
push
adc
ja
inc
adc
sub
add
dec
dec
movsl
add
pop
cmp
rorb
xchg
cmc
sub
pop
popf
outsb
mov
pop
fldenv
or
push
lea
xchg
push
and
sbb
push
es
add
pusha
imul
movsl
inc
xor
sti
addr16
cmp
pop
xor
and
jnp
ds
jl
popa
or
ljmp
xchg
enter
clc
mov
mov
inc
cli
jnp
popa
sub
movsl
mov
add
xlat
pushf
sub
test
daa
mov
movsb
and
adc
jo
push
xorl
cmp
test
mov
xor
cli
pop
inc
inc
mov
je
and
mov
mov
and
movsbl
cmpsb
mov
call
and
rol
and
sbb
shrb
add
sbb
cmp
sti
jge
mov
in
loopne
insl
imul
adc
jge
shrl
rclb
jecxz
pop
ret
lret
imul
dec
push
jb
add
popl
cmp
lcall
jb
sub
add
repz
cmpsb
inc
int
aas
in
insb
fadds
xchg
mov
add
dec
sub
mov
ret
lcall
dec
call
pop
push
xchg
aad
mov
mov
pop
mov
or
test
cmp
jp
xor
test
add
mov
sub
xor
dec
decb
andb
inc
push
inc
pushf
imul
mov
cli
xchg
dec
mov
jne
and
push
fsubrs
fldt
ja
stc
xor
mov
or
out
pop
add
pop
xchg
lock
test
bound
repnz
jg
adc
mov
lea
stos
insl
addr16
loopne
out
inc
enter
fdivrs
adc
icebp
cwtl
cmp
push
and
popa
stc
cmp
mov
sub
aaa
cmp
xchg
pop
sub
xchg
pop
das
loope
sti
in
mov
xlat
mov
mov
cmp
fnstenv
repnz
and
pop
mov
mov
das
xchg
out
pop
push
je
arpl
pop
into
push
xor
push
stos
mov
cmp
stos
leave
daa
sub
iret
or
into
mov
roll
test
push
ljmp
or
pop
mov
sbb
addr16
add
rcl
sbb
xchg
jge
outsb
gs
mov
fstps
daa
push
jae
fistps
dec
lret
cmc
xor
sbb
cmp
xlat
mov
inc
dec
mov
push
push
xchg
cmp
pop
mov
jne
mov
jns
dec
mov
jae
fimuls
dec
fstl
adc
lcall
lahf
iret
pop
mov
push
clc
mov
sbb
clc
mov
add
mov
sbb
sti
xor
scas
jl
enter
xchg
push
sahf
adc
jp
out
fmul
outsb
in
or
push
mov
pop
loopne
adc
xchg
mov
mov
sub
push
cmp
es
or
loopne
push
or
sub
loop
cld
push
jg
subb
fwait
mov
shll
mov
cli
pop
jns
bound
call
add
pop
je
cmp
jmp
cmpsb
lock
mov
arpl
int
inc
sbb
push
xchg
cltd
inc
or
rol
and
dec
xlat
inc
orl
jge
or
aad
stos
test
shrb
arpl
mov
mov
inc
fsts
mov
test
ljmp
outsb
sub
sub
fxch
push
dec
movsb
sbb
aam
add
cwtl
mov
cmp
imul
in
in
fucomip
xchg
test
cli
sbb
orb
lds
inc
test
jmp
int3
push
iret
pop
loop
imul
sub
mov
jno
dec
push
popl
insb
add
lcall
push
mov
add
sbb
xchg
xchg
daa
mov
call
dec
int3
xchg
and
idivl
sti
push
lahf
add
cmp
add
insb
jnp
xor
push
mov
std
andb
add
pop
dec
xchg
pop
out
fwait
and
push
push
xor
movsb
ss
and
lea
xchg
dec
into
test
mov
push
cmp
pop
jb
data16
push
insl
sub
pop
pop
imul
mov
stc
test
fadd
mov
and
or
inc
jl
in
pusha
push
shll
mov
push
sub
mov
shll
xchg
int3
lods
cltd
fldenv
jmp
lock
push
notl
mov
daa
mov
and
adc
add
cld
fldcw
std
dec
push
ret
addl
pushf
and
vcvttss2si
add
imul
insb
aad
xor
js
mov
cltd
in
insl
xchg
and
mov
pop
andl
pushf
push
loop
arpl
jb
dec
inc
pop
push
xchg
mov
pop
push
loopne
mov
in
adc
les
lds
add
jg
pushf
mov
dec
and
iret
xor
or
pop
mov
dec
lods
call
adcl
jnp
jmp
stos
xchg
mov
jne
mov
repz
bound
mov
lods
lea
cmp
jl
hlt
imul
ja
and
inc
repnz
add
jbe
mov
or
nop
dec
into
push
ds
testb
add
jne
aam
scas
mov
inc
cltd
mov
fbstp
cmpsb
jae
adc
movsb
cmpsl
outsb
stos
jmp
inc
jle
jbe
pop
addr16
pop
and
aad
add
or
ja
adc
leave
aaa
mov
movsb
push
adc
mov
pusha
cmp
nop
add
cwtl
mov
xchg
jl
mov
sbbb
fsubrs
and
fstpt
pusha
dec
push
ret
mov
add
test
mov
testl
test
das
arpl
inc
pop
jle
sbb
leave
fsubs
out
div
imul
das
mov
sbb
push
sbb
adc
add
test
lock
and
movsl
add
or
loop
aam
cmp
sub
imul
cmp
or
cmp
out
sbb
mov
lahf
jno
sbb
pop
arpl
dec
subb
mov
in
push
push
stc
jo
inc
dec
add
inc
movsl
cmp
dec
xchg
loopne
fdivrs
jle
cmp
mov
jnp
cmp
imul
mov
dec
jmp
dec
shrl
lret
sub
loop
pop
cli
adc
mov
imul
dec
movsl
jbe
fs
jb
push
ljmp
dec
sub
inc
mov
cmp
mov
sub
fidivrl
mov
scas
subl
sub
adc
and
push
stos
fistps
push
mov
xchg
loop
xor
adc
insb
or
fdivr
testb
popa
dec
add
aad
mov
pop
mov
imul
push
or
xor
leave
mov
addr16
push
sub
or
test
jmp
add
paddw
mov
mov
idivb
stos
cmp
adc
sbb
add
cld
popa
inc
push
pop
push
cmpsb
idivl
mov
aad
gs
and
addr16
jns
and
pushf
lods
cmp
mov
das
cmpsb
push
cmp
mov
ss
jmp
sti
int3
jg
add
movsb
sbb
sbb
and
stos
out
sub
jb
out
lcall
leave
xchg
dec
mov
loopne
push
pop
into
repnz
dec
push
push
icebp
push
pop
js
test
jbe
xor
pop
adc
jp
sar
pop
jnp
mov
inc
sub
push
loope
add
dec
iret
sbb
push
fimull
push
or
cs
shrl
mov
scas
loop
push
movsb
hlt
cli
and
popa
imul
inc
xlat
sahf
mov
mov
sbb
mov
jmp
insl
into
aam
popa
xchg
jmp
inc
out
sub
jp
lds
daa
shrb
in
stc
shlb
mov
push
sub
daa
push
jbe
outsb
outsl
sub
xor
inc
testb
cmp
aaa
es
lret
pop
ret
sbb
jae
push
pop
pusha
pop
daa
xchg
insb
fs
push
into
addb
mov
xchg
mov
scas
xchg
push
xchg
mov
insb
test
stos
shl
icebp
mov
pop
cmp
mov
rorl
movl
stc
xor
pushf
scas
arpl
lahf
mov
and
push
movl
test
outsb
adc
int
loopne
sahf
pcmpeqw
add
mov
add
mov
dec
repz
std
jmp
pop
xchg
adc
pop
das
in
scas
mov
inc
andb
pushf
aam
mov
add
jg,pn
sahf
adc
movsb
loop
inc
std
xchg
fs
and
inc
mov
lock
arpl
adc
in
aad
or
add
add
int3
jmp
out
dec
mov
std
mov
roll
dec
mov
pop
adc
cmp
push
dec
mov
fcmovbe
sub
mov
aaa
adc
add
mov
mov
mov
push
icebp
mov
or
xor
sub
mov
jnp
lahf
in
data16
jle
lahf
inc
imul
and
pop
pop
fs
sub
ds
imul
jmp
xor
cmp
movsl
sahf
repnz
mov
out
adc
mov
dec
cli
push
xorl
inc
xchg
xchg
inc
aaa
icebp
sub
jae
pop
pop
jmp
pop
lods
test
daa
xchg
add
pop
dec
aas
ret
jecxz
jmp
push
ljmp
cli
les
mov
lret
scas
rcrl
cmpsb
sbb
insl
or
mov
lods
sbb
push
add
push
filds
testl
test
insb
loopne
mov
push
mov
into
scas
mov
xor
andl
mov
mov
and
clc
mov
mov
aaa
push
mov
popf
aad
cmp
ss
pop
icebp
xchg
xchg
mov
xchg
add
pop
lea
jnp
sub
xlat
sub
add
pop
or
mov
sub
les
pusha
fdivl
push
hlt
test
mov
popf
cmp
outsl
fldcw
lcall
pand
fs
jb
push
cmp
mov
shlb
push
cmp
xor
dec
fdivrl
and
mov
les
cltd
decl
inc
or
repnz
cmp
cltd
dec
int
push
scas
adc
mov
inc
adc
addr16
out
or
fidivrs
inc
shrb
mov
or
pop
clc
dec
lret
adc
ret
js
shrd
imul
shll
aad
cld
lods
les
mov
loopne
mov
or
addr16
sub
shrb
mov
mov
out
test
cmp
mov
mov
xchg
sbbl
mov
push
push
test
push
pop
jecxz
pushf
aaa
or
or
jle
rcrb
rcrb
outsb
mov
loop
in
xor
inc
sbb
lods
dec
inc
cmpsl
enter
adc
stos
or
xchg
mov
jg
inc
mov
pop
jp
mov
inc
fdivrl
fcmovnbe
mov
std
or
mov
mov
sbb
inc
mov
mov
xchg
sub
cs
bound
cmp
add
cmp
mov
int3
loopne
push
stc
mov
je
mov
les
addr16
mov
fsubl
mov
jmp
mov
fwait
push
jns
push
lahf
ficoml
cs
mov
sbb
je
cmp
push
adc
jge
add
mov
ret
sub
pop
dec
push
dec
in
inc
bound
mov
or
mov
lcall
inc
push
pushf
incb
fadd
adc
add
ret
aam
popa
fmul
xor
int3
andb
das
and
bound
dec
bound
mov
mov
push
clc
test
inc
cmp
aaa
sbbl
xor
mov
std
mov
cmp
test
mov
dec
jle
in
aam
sub
sbb
push
iret
xchg
dec
test
in
xchg
outsl
jo
sub
xor
cmp
cmp
and
loope
ficompl
pop
jo
push
and
push
jmp
mov
movsl
cmp
xor
in
xchg
in
sbb
outsl
jmp
in
mov
jne
stos
mov
insl
push
fs
xchg
push
dec
xchg
add
push
and
jbe
shl
push
mov
mov
mov
repz
jne
fisubl
les
xchg
mov
xor
fld
xchg
xor
in
test
shrl
mov
outsb
push
sbb
mov
fdivrs
mov
mov
fstp
insb
xchg
fistpll
mov
and
dec
push
cmpsl
sub
mov
mov
stc
repnz
mov
xor
jg
sub
push
cmpsl
sti
adc
clc
mov
fcom
js
divb
and
lret
mov
call
jecxz
mov
in
add
cmp
push
xchg
inc
mov
jno
lret
add
adc
shlb
out
sbb
inc
or
out
das
mov
inc
lock
aam
std
add
enter
adc
outsl
dec
fwait
sarl
je
das
mov
sub
cltd
pop
cmovnp
xor
xor
jns
clc
loope
mov
sbb
stos
mov
ss
add
add
xlat
sbb
mov
in
sub
sbb
lds
cmp
mov
stos
inc
mov
sbb
popa
jge
pop
insl
xchg
mov
jo
dec
jmp
mov
mov
mov
ficoms
fnstcw
out
enter
fsts
adc
dec
fadd
data16
icebp
xchg
das
cmpb
aaa
jp
shlb
out
pop
push
orb
pop
idiv
mov
hlt
push
insb
cmp
loop
fldenv
test
lcall
cmp
mov
inc
jns
add
adc
popf
inc
xlat
pusha
outsl
sbb
jb
jmp
sbb
xor
mov
loop
push
subb
cmpsb
repz
lock
jb
inc
mov
sbb
out
add
jae
and
xchg
cwtl
xor
cmc
dec
and
pop
inc
push
pop
mov
les
or
jbe
xchg
adc
iret
cmp
rol
pop
pop
push
je
mov
out
pop
pop
push
hlt
ret
out
mov
sarb
push
into
or
fsubl
sbb
lods
std
or
cmc
imul
aad
hlt
loope
lods
mov
rcr
in
stos
inc
mov
dec
sbbb
out
iret
ret
shlb
push
jbe
and
mov
or
adc
mov
mov
jne
roll
mov
cli
sub
jae
jno
sub
daa
xor
push
inc
movb
das
jnp
fwait
inc
sub
lret
cs
mov
mov
pop
clc
mov
loop
mov
adc
sub
adc
out
aas
xor
mov
mov
and
push
cwtl
pop
push
lcall
adc
cltd
orb
or
cltd
mov
pop
xchg
mov
mov
adc
scas
out
mov
or
push
repnz
push
lods
xchg
dec
and
mov
lret
pop
and
insl
dec
mov
xor
sub
inc
lcall
out
stos
mov
jmp
xor
mov
and
push
adc
int3
nop
xlat
jge
push
nop
xlat
jne
push
lret
cmc
cltd
jle
cmpsl
push
lcall
mov
test
sbb
adc
push
hlt
add
icebp
pusha
xchg
pop
dec
fs
outsl
sbb
adc
cwtl
mov
rcrl
xchg
fwait
outsl
mov
cli
cmpsb
adc
js
lods
ret
sub
movsl
dec
dec
xor
mov
sbb
or
repnz
xor
pop
jne
push
pop
repz
icebp
push
sti
test
push
mov
shrb
mov
fadds
lcall
push
ror
add
daa
jae
adc
scas
les
cmp
inc
xchg
ret
pop
hlt
popa
cwtl
jns
icebp
add
out
dec
outsl
inc
lcall
push
cld
in
xchg
sahf
rorb
jb
cwtl
fdivp
jo
into
pop
pop
xor
xchg
fsubl
call
lods
test
push
mov
repz
and
xor
pop
mov
sbb
fstl
idivb
in
in
push
inc
stc
addl
loop
fsubrl
das
push
cli
es
daa
push
mov
and
in
mov
out
inc
dec
or
and
xchg
xor
inc
je
divl
xchg
in
popa
lret
and
dec
lret
js
cmp
sub
or
fs
jns
jb
mov
ljmp
jno
xchg
mov
sti
in
loop
sbb
jecxz
sub
cmp
cmp
in
popf
or
lret
mov
movsb
lahf
cmp
mov
outsl
mov
enter
mov
lock
testb
push
insb
lock
adc
or
mov
and
or
fsubrs
or
test
addl
xor
or
out
xchg
or
fdivrs
popa
push
xor
cmc
lret
jae
test
gs
xchg
and
xor
jge
aaa
jge
xor
cmp
ss
ret
packssdw
jno
jge
sar
jns
inc
sbb
imul
lcall
cmp
push
lds
iret
int
test
dec
stos
jne
sbb
imul
cmp
aaa
add
movsb
lcall
aam
xchg
sbb
in
in
js
iret
test
out
repnz
xchg
lcall
sbb
adc
fdivrl
fisubl
and
pop
dec
mov
dec
jns
fcom
out
rcll
nop
lret
movsl
push
mov
cmpsb
call
inc
mov
add
sarb
inc
sbb
add
pop
mov
fstpl
xchg
push
push
and
mov
fucomi
cmc
add
add
cmp
sub
scas
mov
lea
lret
fisubrl
popa
add
mov
mov
push
xor
mov
jge
adc
test
xor
cmp
push
cwtl
scas
filds
jb
mov
pop
jnp
adc
xchg
xor
mov
lods
gs
shl
ljmp
subb
fucom
dec
push
ret
mov
add
cwtl
adc
xchg
out
or
pop
add
ret
mov
data16
fisubl
aam
fsubs
inc
push
nop
mov
movsl
aas
dec
xor
pop
xchg
fcmovu
push
ret
mov
ret
dec
aad
enter
ret
lods
test
sub
pushf
mov
pushf
insb
sar
add
int
adc
mov
or
nop
mov
pusha
out
mov
adc
dec
imul
mov
pop
pop
xor
in
and
or
inc
xchg
lock
adc
dec
test
sahf
mulb
out
movsb
pop
cmp
ja
mov
mov
test
pop
mov
sub
sbb
mov
sbbl
not
shrl
rcl
mov
in
xor
stc
push
sub
mov
dec
jp
lods
sbb
arpl
cld
mov
cmp
mov
mov
cmp
pop
out
jg
inc
and
popa
inc
inc
pop
mov
or
sbb
out
arpl
inc
bound
out
lock
jbe
jne
movsl
sbb
xorb
dec
inc
or
pop
dec
lret
and
jo
sub
jg,pn
xchg
movsl
das
lcall
push
adc
roll
inc
mov
cld
jbe
lahf
mov
ljmp
and
add
pop
lahf
xlat
repnz
sarb
jns
or
in
inc
mov
push
popf
jg
and
cmpb
test
xchg
fidivrl
or
sbb
fadds
popa
inc
fdivrs
mov
xchg
arpl
push
js
mov
inc
jge
and
cmpsl
dec
jmp
inc
movsb
cltd
jne
xor
enter
sbb
jbe
cmp
and
mov
sbb
sbb
adc
sbb
mov
pop
testb
mov
push
inc
mov
jbe
aad
sbb
add
rcrb
add
sti
dec
mov
enter
das
ss
push
push
orl
jle
mov
jnp
shrl
rcrb
sub
in
adc
mov
xor
fsubrl
jle
pushf
cmp
and
nop
pop
jg
sbb
cmpsb
pop
popf
xchg
fstps
sbb
or
xchg
pushf
das
cmc
mov
insb
and
push
nop
andb
cmp
fidivl
sub
movb
mov
adc
lods
pop
or
mov
imul
loope
add
push
xor
mov
xor
mov
movsl
and
les
jp
nop
in
mov
mov
inc
sbb
pop
mov
insb
ret
aaa
inc
adc
and
sub
aas
nop
inc
inc
mov
jnp
jb
jb
adc
leave
jmp
imul
xor
push
sub
sbb
push
aad
sub
mov
daa
lret
add
stos
scas
outsb
fldln2
mov
xor
out
movsl
mov
scas
push
pop
js
rcrb
jns
xor
pop
sub
ljmp
shll
dec
mov
mov
icebp
test
dec
mov
popa
lods
dec
es
xor
push
mov
adc
enter
int
inc
loope
ds
stos
mov
pop
sub
xlat
bound
xor
mov
icebp
testb
jno
cmp
mull
es
cmp
adc
sbb
repnz
inc
das
xlat
jae
repz
int3
mov
jne
scas
mov
mov
daa
adc
dec
inc
pop
dec
ret
shlb
cmp
popa
fstpt
aam
inc
jno
scas
popf
das
jecxz
and
imul
pop
xchg
pop
jnp
notl
pop
and
in
jo
inc
jg
sti
xchg
movsl
idivb
mov
dec
scas
lods
pop
jb
test
inc
rcrb
test
out
daa
sub
pop
sbb
jge
xor
dec
mov
scas
inc
idivb
fcmovnb
xor
or
lret
inc
inc
arpl
jb
xlat
ss
jmp
cli
les
jmp
mov
incb
push
decl
fsubrl
in
clc
pop
stc
loop
icebp
stc
sub
jmp
mov
jns
mov
adc
cmpsl
pop
fs
mov
mov
push
insl
gs
loopne
insl
mov
faddl
loop
pop
pop
xor
and
inc
mov
es
jb
mov
or
xchg
mov
sarl
xchg
fcom
ljmp
sahf
pop
cmp
pop
mov
sbb
mov
push
enter
xor
pop
pop
arpl
std
cmpsb
pushf
jb
push
jne
adc
push
xchg
fstpl
dec
pop
inc
inc
xchg
inc
inc
js
movsb
cmp
xor
dec
and
mov
xor
add
mov
ljmp
fiaddl
mov
js
and
mov
adc
loopne
pusha
cmp
mov
add
xchg
adc
ss
lea
daa
dec
adc
cmp
ret
mov
in
rol
sbb
inc
lcall
pop
push
roll
insl
gs
imul
movsb
ds
or
out
cmpsl
jnp
adc
call
loope
cmp
imul
pop
xchg
mov
sub
lock
out
insl
leave
mov
mov
pop
dec
xchg
sub
cwtl
mov
sysenter
mov
or
fstpl
cmp
mov
iret
fsubrl
int3
push
pop
in
jns
jae
sahf
mov
addr16
inc
dec
mov
sbb
nop
xchg
lret
or
sbbl
inc
xor
sbb
subl
push
adc
dec
es
fdivp
jo
nop
ficoms
andb
jne
rclb
cltd
dec
mov
mov
imul
adc
loopne
push
add
pop
cltd
mov
shrb
stc
mov
sub
jg
pushf
icebp
adc
adc
push
inc
mov
jmp
cwtl
clc
push
es
sub
push
sahf
jl
imul
pushf
ds
xchg
mov
shl
xor
push
ja
inc
mov
xor
shlb
xor
shll
int3
aam
loopne
or
sub
jne
xchg
rcrb
inc
stc
das
push
inc
mov
pop
adc
dec
in
dec
popf
clc
stc
mov
fs
movsl
lds
push
mov
and
test
or
imul
cmpsb
dec
mov
cmp
xor
hlt
sub
mov
adc
nop
fcom
test
je
nop
repnz
test
adc
pop
jmp
cmc
aas
loopne
cmp
addl
mov
repnz
mov
aas
je
rclb
mov
sbbl
enter
fisubs
adc
mov
xchg
std
sbb
int3
lods
jg
mov
xchg
pop
xchg
addr16
xchg
les
roll
push
cmp
fnstenv
mov
movl
lcall
sub
pop
mov
stos
xchg
aad
aad
pop
xchg
test
jnp
lahf
xchg
icebp
sbb
cmp
sarb
inc
pop
and
jno
push
sub
stos
mov
push
add
insl
inc
shl
ror
mov
push
inc
pop
cmp
xor
or
mov
mov
push
sbb
mov
inc
data16
adc
pushf
std
mov
mov
sar
arpl
mov
mov
inc
pop
mov
std
pop
mov
xchg
scas
cmc
arpl
cs
sti
mov
lret
ds
inc
add
jnp
lcall
lret
xchg
cmpsl
leave
jge
pop
jbe
adc
mov
adc
push
sti
fucom
push
jb
in
push
movsl
xorb
mov
arpl
sbb
test
stos
lods
mov
scas
lock
js
out
ficomps
push
mov
push
sub
es
adc
out
inc
cli
push
dec
insl
jnp
clc
mov
push
mov
cmp
aas
xchg
sub
cmpsb
lret
jns
in
dec
cli
in
push
enter
mov
push
or
or
daa
aas
hlt
ror
shrl
iret
dec
test
in
dec
movl
outsl
ret
ficomps
stos
mov
pop
sub
pop
jmp
xor
cmp
mov
out
jl
and
push
dec
xchg
or
push
insl
sub
lahf
push
out
sahf
push
mov
pusha
lret
dec
loop
cmp
xchg
jno
pop
ljmp
mov
cli
outsb
js
leave
pusha
data16
cmp
stc
sbb
sahf
fdivp
or
data16
jge
loopne
and
adc
shrl
add
xor
aam
aaa
add
sbb
mov
push
inc
xchg
mov
loope
mov
sti
mov
in
addr16
pop
push
push
sub
sbb
xlat
call
mov
mov
mov
inc
or
fcos
xor
repz
outsl
xchg
jbe
mov
hlt
pushf
add
lcall
xchg
xor
cmp
mov
mov
sbb
add
inc
bound
imul
loop
ljmp
mov
into
sub
das
lea
in
push
lcall
sbb
xlat
mov
xchg
or
stc
test
mov
and
pop
mov
test
mov
cwtl
cwtl
icebp
pop
divps
and
js
cmp
cmc
adc
pushf
mov
outsb
mov
dec
cmpl
xor
nop
fwait
push
and
in
test
es
shrl
push
cmp
xor
leave
and
inc
pop
add
push
in
xchg
mov
aad
cmpsl
js
faddl
scas
ljmp
outsl
mov
mov
popa
stos
loope
mov
dec
mov
xor
xchg
ds
dec
mov
stos
pop
fcoms
cmpsb
jo
push
xchg
or
je
mov
mov
jns
cmp
dec
or
inc
pop
lock
lahf
mov
sub
sbb
les
outsl
xchg
pop
add
sti
sbb
jo
jne
and
insb
or
mov
mulb
and
nop
add
add
imul
adc
shlb
jg,pt
jbe
mov
inc
inc
fmul
repnz
rcll
adc
dec
cmp
or
xchg
pushf
jb
stos
adc
aaa
cli
push
xchg
cli
ss
test
inc
ret
mov
inc
mov
int
enter
repz
leave
xor
rolb
ror
sub
enter
in
cmp
dec
sbb
scas
in
add
xchg
jo
fsubrs
and
sub
xorl
loop
stos
pop
popf
push
sbb
or
imull
jmp
outsl
adc
cmpsb
jns
out
mull
daa
or
inc
sub
mov
push
jg
inc
icebp
ret
scas
cmp
andb
inc
pushf
xlat
dec
mov
mov
dec
sub
dec
and
xchg
xchg
pop
notb
pop
push
push
adcb
xchg
or
popf
shrl
add
inc
pop
ja
pop
aam
outsb
and
sub
loopne
dec
outsl
fistpll
and
mov
lods
add
aam
int3
push
push
aaa
jle
add
push
jae
jge
mov
and
mov
or
ljmp
sbb
mov
sub
lahf
hlt
fnstcw
dec
mov
pop
inc
xchg
insb
mov
add
jge
mov
les
or
mov
sbb
add
shr
lsl
jae
je
xor
mov
lret
ret
push
and
fists
cmp
sub
mov
adc
sarb
fistpll
add
push
call
rep
inc
pop
sub
pushf
out
cld
xchg
and
aaa
jnp
mov
stc
and
pop
out
test
pop
xchg
add
and
enter
add
or
or
aas
pop
sub
sbb
fwait
andb
xchg
movsl
mov
pop
dec
dec
sub
xchg
cwtl
dec
fiadds
pushf
jns
scas
sub
mov
sub
mov
clc
dec
scas
lret
aas
test
shrl
push
sub
cmp
fwait
inc
lock
test
lcall
adc
jp
gs
shrl
subb
cmp
das
adc
ja
lahf
xor
sub
pop
sbb
bound
rclb
cmp
add
mov
iret
test
pusha
push
pushf
sbb
jmp
add
repnz
fsubr
in
cltd
outsb
jecxz
pop
sahf
xor
jnp
mov
pop
icebp
popf
jg
call
mov
sbb
sub
or
popf
in
lcall
loopne
call
or
xchg
repz
xchg
fiaddl
filds
imul
ljmp
sub
jne
popf
dec
testb
fldcw
inc
xchg
stos
push
cltd
pusha
add
imul
icebp
lds
sbb
stc
add
xor
sub
ficomps
cmp
jecxz
cs
sarl
jbe
ds
jae
dec
cmp
jmp
add
xor
mov
push
lahf
push
push
add
popa
sub
mov
jg
jle
cmp
insb
insl
add
out
mov
psubd
cmp
pop
push
movsl
mov
rorb
fisttpll
mov
ss
int
shrb
int
xor
std
sub
add
dec
leave
dec
cmp
mov
leave
xor
gs
cld
icebp
data16
or
loope
popf
cltd
mov
lret
push
shrl
mov
xor
repz
outsl
arpl
inc
js
cmp
push
push
int3
xor
cli
cmpsb
jb
pop
mov
cmpsb
or
adc
loope
inc
cmp
in
stos
push
iret
addr16
aad
xchg
xchg
xor
and
int3
lods
inc
pop
ds
xchg
dec
dec
shrb
pop
sub
push
loopne
jl
insb
lret
rclb
push
outsb
stc
stos
or
lcall
stc
int
cmp
jecxz
or
jmp
and
or
xor
dec
add
test
std
push
imulb
addr16
sub
cmp
mov
xor
fbld
lods
inc
mov
lcall
or
mov
mul
fwait
cli
arpl
aad
or
mov
add
hlt
loopne
aaa
shrb
lahf
and
jne
aam
mov
stos
pop
leave
and
test
lea
loop
les
repz
shlb
std
inc
stos
repz
push
push
add
scas
out
mov
jl
cs
fsubs
jmp
cmp
cld
pop
jb
out
fldt
or
jecxz
add
jno
push
pop
in
ss
ljmp
jnp
push
xlat
pushf
out
cld
in
aaa
mov
in
xchg
pop
cmp
pop
jp
test
xor
ja
cmp
stos
mov
dec
cmpsl
dec
sbb
popa
pop
inc
dec
adc
jg
sbb
xchg
lods
inc
mov
inc
popa
pop
imul
mov
xchg
pop
das
push
andl
loop
jb
js
ret
push
js
ljmp
jmp
add
mov
dec
leave
cmp
fucomi
scas
enter
adc
data16
pop
popf
imul
lret
sbb
push
mov
cli
test
loop
lds
mov
ficoml
andl
pop
or
jno
xchg
aaa
loope
xchg
add
and
cmp
jg
jecxz
nop
sbb
mov
push
pop
pop
insb
loope
jb
stc
mov
mov
cltd
cs
fisubl
ja
xchg
jne
lret
mov
sub
xor
test
imul
cwtl
lock
adc
cwtl
fidivl
xchg
aad
sbb
inc
dec
jg
adc
test
hlt
inc
xchg
push
mov
inc
fiadds
inc
in
leave
jne
pop
mov
subb
rcrb
dec
daa
dec
dec
lcall
sti
in
shr
lret
sbb
and
cmp
push
inc
cmpsb
ljmp
cmp
test
pop
jb
jb
push
sub
test
enter
cltd
jnp
aam
jl
and
gs
cmp
in
dec
insb
out
lahf
cs
in
enter
insb
shlb
lret
testl
pop
lahf
mov
or
pop
xor
push
cld
or
repz
xor
out
pop
data16
enter
pop
in
es
clc
dec
push
mov
adc
jns
xchg
je
dec
fs
fwait
es
pop
pop
addr16
shrb
dec
push
pop
pop
fwait
xlat
xchg
jae
xor
or
bound
dec
dec
movsb
aas
scas
inc
inc
cld
or
repnz
ss
cmpsl
test
inc
xchg
mul
lcall
pop
and
mov
jl
mov
push
xchg
out
bound
enter
js
inc
cmp
cmp
fadds
mov
das
mov
push
loopne
push
dec
xchg
in
into
lret
pop
xor
stos
pop
mov
jno
push
iret
or
push
repz
or
cli
and
movsl
sbb
pop
mov
int
jb
loop
rclb
dec
jle
lret
or
inc
xor
sti
dec
dec
fstps
or
divl
out
inc
fimuls
stc
enter
idiv
loope
pop
je
hlt
xlat
testb
sbb
rclb
into
fwait
pop
jbe
inc
fadds
ret
aad
je
push
mov
cs
out
or
stc
je
push
cmc
sub
outsl
mov
subb
sub
loope
es
sub
iret
inc
cmp
jb
pop
into
pop
aas
ss
psubw
cmp
mov
arpl
push
add
rorb
cli
add
ds
out
push
repz
aas
mov
ffree
cli
mov
loop
or
mov
test
pop
mov
inc
lret
mov
push
cmp
xchg
cltd
push
inc
je
push
cs
movsl
mov
fwait
cmp
push
cmp
sbb
push
xor
or
std
mov
add
je
push
fstpl
push
xor
clc
and
inc
mov
mov
movsl
or
xchg
data16
jecxz
jns
out
fcoml
jmp
jae
mov
data16
inc
pushw
inc
lret
test
inc
xchg
jno
xlat
xchg
xchg
insb
mov
aas
dec
push
cmp
stos
mov
repz
iret
fimuls
aad
cmp
and
xor
ret
mov
sub
mov
add
push
sti
pop
out
jbe
das
mov
rcrl
push
cmpsl
mov
scas
fdivl
loope
cmp
or
enter
mov
jg
pop
xchg
mov
adc
mov
ret
push
in
pop
jmp
in
pop
adc
mov
cmp
scas
push
jo
fincstp
inc
int3
sub
daa
add
popf
test
cmp
add
fists
ret
pop
fwait
push
es
pop
push
ds
cmp
add
fwait
in
mov
arpl
sbb
inc
cltd
add
imul
hlt
shrb
mov
inc
sbb
imul
jge
cli
lock
pop
movsb
cmp
pop
out
and
icebp
cmpsl
pop
jp
hlt
push
xchg
jg
in
js
mov
sarb
mov
add
jmp
out
xor
imul
clc
lock
popa
ja
xlat
es
in
scas
mov
adc
scas
cmpsb
cmc
mov
mov
loopne
add
mov
leave
mov
shll
xor
cmp
sahf
or
ljmp
rcl
mov
daa
sub
cld
cld
pop
subb
cld
mov
or
or
fstpl
imul
xchg
lcall
mov
inc
push
negb
sbb
insl
jge
pop
lcall
xchg
mov
dec
out
aas
cmpsb
jge
jns
es
jno
cmp
mov
repnz
ret
mov
inc
or
sbb
test
xchg
sti
push
mov
in
pop
rol
xorb
ret
mov
lods
or
ja
push
movsl
push
cmp
cwtl
stos
mov
adc
fldenv
sarb
mov
xchg
in
push
and
dec
dec
stos
mov
outsb
mov
jne
mov
fstpl
pop
push
pusha
jle
mov
push
loopne
and
pushf
mov
or
into
push
fcoms
popf
lods
and
sti
sub
xchg
ljmp
cmp
idivb
and
daa
call
add
jmp
mov
rclb
sub
insb
sbb
inc
mov
lea
in
adc
test
or
cmp
loopne
insb
jbe
and
cli
shrl
jo
xor
movsl
inc
pop
daa
out
pusha
inc
hlt
pop
dec
jne
add
sbb
loop
xor
je
leave
add
outsl
aad
cmp
filds
es
data16
repz
es
adc
lahf
push
pop
dec
jbe
pop
int3
sti
cmpb
int
pusha
insl
subl
loop
rolb
dec
icebp
daa
std
popa
xor
mov
inc
adc
inc
and
dec
int
loope
lret
mov
sub
jmp
push
pop
lea
movsl
testb
in
and
xchg
clc
mov
mov
inc
jnp
pop
mov
call
or
jl
xor
jno
dec
mov
jnp
xchg
rol
out
mov
jne
xor
sub
mov
push
fcompl
xchg
jp
rolb
mov
push
stos
jns
imul
sbb
rorl
mov
repnz
push
sub
dec
ret
gs
popf
push
sbb
mov
ds
xchg
mov
leave
sbb
jae
jns
pop
clc
mov
push
add
out
dec
or
mov
iret
outsb
add
jecxz
mov
add
sub
aam
stos
add
imul
or
rcl
jecxz
test
mov
mov
dec
sbb
stc
fs
push
inc
or
movsl
test
add
pushf
xchg
add
xchg
xchg
xor
adc
aam
sbb
xor
cmp
lods
or
daa
je
dec
fimuls
stc
dec
inc
and
push
andl
jne
jbe
aam
fsubr
outsb
mov
ljmp
mov
cld
fs
mov
stos
add
mov
lock
mov
inc
scas
jmp
daa
int3
sahf
insl
popf
jl
adc
bound
icebp
test
push
cmpsb
cmc
retw
mov
xor
sbb
push
dec
mov
icebp
sahf
or
pushf
fstpl
mov
adc
call
fldt
pop
repz
movl
pop
fildll
std
hlt
dec
test
int3
cmp
ret
or
jnp
aad
push
push
or
push
arpl
or
xchg
call
mov
fisttpll
inc
out
xchg
or
jae
cmpsl
out
addr16
push
sub
add
cmpl
enter
add
push
xor
lock
cwtl
jp
aad
cltd
inc
mov
cmp
movsl
or
fidivl
enter
in
jg
push
lock
sbb
and
cmc
data16
stos
in
negl
lods
ret
jbe
add
filds
mov
movsl
ret
sbb
popf
add
arpl
pushf
fsts
cmpsl
mov
push
shlb
shlb
pop
idivl
rol
out
add
mov
xchg
mov
adc
popa
dec
rorl
fldcw
popf
sahf
std
gs
mov
cltd
dec
fprem
inc
jb
sub
fsubrs
addb
aam
dec
fldl
sub
lret
jbe
ja
in
rcrb
pop
int
jno
mov
xchg
sbb
lret
data16
lret
shrl
aad
mov
and
test
dec
inc
sarl
xchg
dec
and
or
mov
stos
inc
cmp
mov
mov
mov
iret
adc
dec
cmp
xchg
jle
idiv
in
scas
dec
xchg
je
shrl
fnstenv
xchg
mov
stos
push
jmp
xchg
cld
outsl
ljmp
loope
icebp
sahf
push
mov
sbb
xchg
outsb
ds
pop
fcoms
xchg
scas
push
cmp
inc
and
scas
or
outsb
insl
mov
ds
lods
inc
cmc
mov
inc
je
jb
dec
lahf
mov
movsb
lds
mov
lds
insb
fcmovnu
push
push
insl
xor
scas
mov
fcomps
xchg
cmp
stos
push
xchg
push
xchg
mov
scas
add
les
xchg
addr16
lahf
stc
lahf
stc
scas
jecxz
jg
movsl
cmp
jecxz
pop
push
xor
pusha
push
cmpsb
stos
lahf
sbbl
stos
mov
pop
fnstcw
and
lret
lcall
insb
push
mul
mov
outsl
mov
xchg
add
adc
repz
jg
cmp
ja
jbe
fistps
mov
repz
hlt
inc
lds
jo
push
cltd
fiaddl
sub
shll
add
mov
test
pop
push
not
nop
xor
outsb
cld
movsl
cmp
fsubl
jo
push
add
lods
add
es
lret
test
jmp
arpl
or
push
mov
mov
lods
adc
inc
mov
sub
fdivs
mov
mov
fwait
jl
sub
mov
push
xchg
lret
dec
sbbl
mov
push
std
lock
aam
jns
mov
jno
jp
pop
push
pop
inc
insl
mov
jne
jecxz
xchg
and
xchg
mov
cmc
icebp
sub
cmpsl
push
dec
xchg
xchg
cmp
fnstcw
jo
insl
inc
icebp
sbb
imul
shl
mov
inc
cmpl
xlat
cmpsb
aad
pusha
dec
add
in
loope
add
std
jge
mov
or
mov
adc
and
fdivrs
cmp
aam
xor
jge
fidivrl
push
movsl
orb
test
xlat
lock
mov
mov
sub
mov
jmp
xor
xor
pop
adc
and
adc
dec
out
xchg
jnp
xor
mov
vhsubps
sbb
inc
orl
imul
adc
fimuls
xchg
inc
push
repnz
push
cli
sub
add
pop
js
ret
cwtl
out
in
movsl
jb
aas
gs
cmpsl
add
cmp
out
lret
and
mov
add
shll
mov
sti
push
mov
xorl
loopne
movsb
jp
mov
mov
rolb
mov
int
xchg
cld
into
xchg
or
xchg
sbb
sub
pop
test
jno
outsl
pop
sarl
imull
or
lods
pop
iret
scas
mov
push
lods
mov
or
or
aam
leave
mov
push
push
pop
push
cmp
push
and
data16
fmuls
popf
mov
fdivl
xchg
jns
adc
leave
mov
mov
jle
fwait
pop
std
dec
push
xor
sbb
in
std
mov
pusha
jns
ret
popf
mov
and
mov
push
cwtl
mov
sub
sub
inc
or
mov
mov
es
js
mov
inc
pop
test
or
push
and
pusha
xchg
popa
xor
movsl
push
mov
lea
bound
fdiv
adc
lock
loopne
fimull
sahf
into
fisubrl
arpl
lret
xchg
cmpsb
cwtl
pop
jae
jns
fisubrs
fisubs
call
adc
pop
inc
lcall
xchg
jle
icebp
dec
mov
fwait
ljmp
ffreep
mov
mov
dec
in
les
mov
mov
pop
ss
fxch
es
rorb
shl
add
inc
push
jno
xchg
inc
jge
fst
movsl
lock
jmp
pop
lret
xchg
mov
mov
cmp
sbbl
dec
mov
mov
dec
adc
jmp
testl
xor
jmp
test
pop
sub
arpl
xor
shl
cmp
add
cmovno
mov
inc
idivl
lea
cmc
push
int3
sub
clc
aas
fdivrs
clc
dec
cmpsl
push
dec
sub
fxtract
out
add
xchg
arpl
subb
and
mov
testl
jp
aad
jbe
ficoms
fisubrs
push
and
into
push
stos
sbb
jp
push
out
mov
shrb
cmpsb
add
fisttpll
xchg
in
mov
mulb
in
stos
mov
mov
mov
sbb
sbb
or
insl
pop
push
mov
push
inc
mov
jle
mov
jl
add
imul
pusha
add
sbbl
cmp
sub
movsb
fidivrl
outsl
js
sub
sub
mov
pmulhuw
add
dec
jno
push
mov
and
pop
cmp
jo
scas
fsubrs
mov
dec
push
mov
outsb
cmp
in
push
shll
in
std
jmp
shrb
loope
jp
mov
sub
movsl
sahf
jno
mov
pop
pushf
jle
sub
lea
into
pop
sub
pop
mov
scas
mov
jmp
test
sbb
pushw
add
ds
jne
add
xor
imul
inc
mov
stos
inc
jmp
mov
mov
cmp
dec
mov
sbb
inc
and
mov
mov
arpl
inc
aad
popa
ret
mov
cmp
ds
fbld
cltd
pop
gs
mov
pop
sub
push
daa
dec
outsl
mov
loop
iret
lahf
push
dec
mov
test
sub
and
popa
adc
pop
sarl
rcr
les
cmp
aaa
jp
adc
daa
out
mov
outsb
fistpll
into
push
leave
dec
ljmp
mov
jg
inc
xchg
daa
std
je
push
inc
mov
cmp
std
cmp
xor
sub
ljmp
jbe
mov
xchg
je
push
lret
imul
xor
pop
bound
stos
inc
and
mov
mov
sub
xchg
popa
pop
and
ret
mov
dec
mov
add
xor
movsl
aad
and
cwtl
in
pop
in
movsl
push
hlt
sbb
rol
ss
repz
out
fcom
xchg
adc
cltd
loopne
test
jnp
nop
add
jnp
out
mov
loope
fs
sub
hlt
mov
repz
arpl
cmpsl
push
cmp
dec
cmp
popl
out
out
or
inc
aaa
cmp
rorb
rorl
shrb
in
sbb
jg
jecxz
xchg
cli
sbb
xlat
inc
mov
movb
sahf
or
stos
add
vpunpcklwd
adc
aam
outsb
loope
add
jle
cli
clc
push
sub
ljmp
pop
jmp
push
movl
cmp
sbb
mov
lods
mov
shrl
and
mov
mov
call
xor
mov
xchg
lds
push
or
fs
cmpsb
inc
xchg
popa
adc
scas
in
call
test
xor
repnz
cmp
sti
mov
movsl
push
inc
sar
fldcw
push
mov
ret
test
add
sbb
jg
sub
jmp
pusha
movsl
sarl
cli
lcall
jle
gs
pop
xor
pusha
outsb
popa
imul
jp
fmulp
les
nop
daa
cmp
xchg
jo
cmpxchg
outsl
push
xchg
aas
pop
cld
les
sbb
insl
mov
jnp
lods
sub
mov
int3
out
and
lock
add
add
mov
sbb
jl
pop
repz
jmp
rol
mov
stos
cmpl
push
loope
mov
mov
push
jnp
das
test
xchg
fcmove
sub
sub
push
outsb
or
setb
subb
shlb
sub
sti
sarb
push
jl
push
pop
ja
pusha
insb
adc
sti
inc
push
dec
in
repnz
dec
loope
xchg
mov
aas
std
mov
mov
jb
dec
dec
xchg
xor
pop
cmc
mov
sub
into
push
push
xchg
mov
sbb
out
jne
rcll
outsb
sub
mov
sti
mov
out
lock
fs
sub
pop
rcrb
xchg
outsb
xor
lcall
lods
add
xchg
jns
loope
scas
icebp
adc
mov
push
mov
iret
aad
fistpl
fisubl
or
xor
ja
data16
dec
jmp
fs
add
or
mov
jo
outsb
add
mov
inc
lods
lods
fsubr
sub
cmp
mov
jp
popf
sub
cmp
incl
popf
adc
push
fnstsw
subl
aaa
leave
mov
lock
and
sub
or
fsubs
pop
jnp
push
cmc
mov
xchg
mov
dec
fildl
and
imul
movsb
out
push
aam
addr16
pop
push
imul
push
inc
mov
into
cmpsb
daa
lahf
fldenv
addr16
lods
mov
jle
xor
adc
mov
popf
mov
sub
mov
mov
mov
adcl
jge
sahf
or
cmpsl
xor
sub
cmp
pop
jl
test
sub
xchg
nop
xchg
sub
insl
mov
arpl
fcomp
sub
movsb
add
imul
pop
cmpb
jle
xchg
mov
sub
cltd
add
loopne
lcall
pop
arpl
lods
or
inc
rorl
lret
in
test
sub
pop
lods
addr16
in
jns
fistpll
mov
push
xchg
lods
fcoms
cltd
mov
scas
or
pop
movsb
dec
in
fs
lods
enter
lods
push
mov
inc
movsb
mul
jle
fstpt
fmulp
mov
rol
and
shlb
sub
hlt
lock
ljmp
jo
enter
jns
or
jle
jbe
aad
test
mov
push
add
dec
xor
rolb
insb
add
push
mov
jns
or
insl
fs
in
andb
outsl
scas
or
xor
or
lock
stos
loopne
cmp
lret
fnstenv
in
mov
loope
xchg
popf
xchg
std
imul
aad
addr16
fs
mov
aas
iret
jo
jg
fs
into
rcrb
sbb
mov
out
int
and
vaddpd
sub
pop
mov
adc
push
fcompl
xchg
sub
adc
push
inc
mov
pop
movsb
popa
mov
and
lret
out
mov
push
outsl
inc
jae
pop
push
icebp
add
push
cmpsb
int3
mov
rclb
fcmovnbe
mov
cmp
test
sub
mov
xor
push
daa
dec
int3
pop
cmc
sbb
loopne
shrb
jge
mov
insb
or
pushf
mov
into
shlb
ljmp
fnstcw
lock
fldenv
and
es
enter
sub
push
xchg
cli
test
cmp
inc
dec
loopne
sbb
jg
mov
add
rolb
leave
cmpsl
arpl
jnp
adc
rorb
mov
mov
mov
pop
jae
sbb
idivl
xchg
mov
imul
ret
test
push
mov
frndint
or
loop
mov
ljmp
pop
pop
and
cmpsl
sub
jne
add
fidivs
divl
mov
jae
jg
test
sbb
ja
sub
test
roll
pushf
mov
and
arpl
xlat
mov
out
out
dec
cltd
test
jmpw
outsl
sub
std
jo
xor
not
xchg
pop
ss
fildll
pop
pop
in
xor
jb
or
lock
push
test
sbb
nop
fs
mov
aas
enter
fs
cltd
and
std
iret
clc
mov
lock
xchg
sbb
and
xchg
xor
lret
lods
int
jmp
ret
adc
outsl
adc
mov
popa
xor
xor
rcl
sbb
out
sbb
nop
adc
sub
inc
or
jmp
aad
out
les
rorb
or
and
dec
pop
jb
push
sub
pop
loopne
mov
data16
sahf
mov
imul
pushl
imul
xchg
lods
xor
adc
mov
pop
cli
dec
and
sets
aam
lahf
sar
xor
sbb
rolb
lret
dec
push
sbb
pop
mov
dec
les
mov
mov
dec
not
ffreep
or
push
sbb
lea
std
shlb
add
nop
xor
cmp
push
or
sub
mov
add
cld
test
xchg
jmp
or
hlt
and
sbb
pop
andl
aaa
pop
repz
xor
add
cli
aam
nop
push
xor
mov
lret
jmp
xchg
xchg
js
sti
inc
sub
imul
mov
push
mov
sub
lea
fdivrs
in
pop
xchg
adc
ja
pop
pop
cmp
fisttpll
les
dec
cmpsb
sub
imul
pop
pusha
cli
es
sarb
xor
mov
jnp
jp,pt
outsb
xor
dec
testl
jbe
push
arpl
or
aad
xor
mov
xor
and
sbb
test
xor
addr16
mov
sub
aas
js
push
push
jns
sub
push
movsb
adc
cmp
mov
inc
cli
outsl
sahf
je
add
adc
sub
call
loope
and
inc
leave
mov
orb
faddl
mov
movb
arpl
faddl
out
xchg
loop
mov
ljmp
fimuls
sub
test
mov
xchg
pop
inc
xlat
imul
mov
inc
add
inc
push
fildl
pusha
fstl
shr
xor
mov
test
cwtl
sbb
outsl
ficoml
movsb
sub
es
ds
loop
test
out
repnz
incb
adc
cmp
fcoml
loope
jg
aas
test
sbb
xchg
das
loope
jge
out
fildl
movd
inc
xchg
loope
cmp
daa
loopne
outsb
add
fsubl
leave
push
xor
push
fildl
jle
enter
out
sub
clc
lcall
popf
pop
and
rcl
add
jmp
fsubrl
xchg
fdivl
jl
mov
rcl
xchg
add
jl
xchg
lds
ljmp
xchg
loopne
dec
mov
dec
adc
xchg
and
lahf
stos
mov
addl
shr
cwtl
ja
int
sub
ss
sahf
mov
cmp
sbb
sub
in
inc
and
and
dec
pop
inc
out
dec
jnp
ja
xchg
add
jno
inc
mov
dec
cs
jnp
inc
mov
loopne
test
xchg
cmp
rorl
xchg
cmc
push
stos
fisubrl
rol
aaa
xchg
mov
into
gs
push
push
sub
rclb
int3
sbb
addb
pop
pop
sbb
jg
inc
mov
lcall
sbb
cli
test
mov
push
sub
decb
stos
xchg
call
sub
xor
fcoms
loop
push
xchg
andb
popf
repz
xchg
fadd
adc
push
ss
inc
sbb
imul
lods
add
pop
mov
das
ret
jl
mov
dec
cmp
rcr
sbb
out
jecxz
jbe
leave
inc
inc
mov
mov
mov
int3
pop
sbb
mov
imul
popf
out
inc
jecxz
nop
jnp
test
adc
xchg
rcr
sub
sarb
repnz
sub
add
xchg
test
lcall
sbb
adc
cmp
insl
into
xchg
ljmp
fldcw
addr16
mov
test
lret
inc
jbe
icebp
pop
arpl
push
xchg
mov
gs
inc
add
xchg
xor
push
call
fcompl
cmpsl
lods
and
daa
data16
mov
and
and
push
jns
jns
repz
xchg
mov
sub
jne
mov
and
mov
fwait
cmp
imul
jg
xchg
pop
out
sbb
add
mov
bound
iret
mov
in
and
repz
ljmp
sub
xchg
jl
sbb
and
into
icebp
mov
pop
mov
mov
add
and
pop
mov
or
mov
sub
xor
lods
pop
xor
xor
js
insb
fwait
cmp
cmpl
sbb
fstps
pop
mov
ret
cmc
add
cmp
ja
stos
in
and
in
mov
shl
push
cmp
mov
pop
add
xchg
jnp
adc
sbb
rclb
xlat
insl
inc
push
xchg
nop
andb
jo
inc
mov
mov
loope,pn
aas
jmp
jge
inc
es
push
cmc
add
xchg
cmpsb
add
push
push
xor
dec
push
sub
or
cmpsb
or
or
jne
arpl
stos
mov
sbb
addr16
inc
pop
or
out
lds
cmp
out
jmp
repnz
mov
repnz
inc
sahf
and
mov
xchg
inc
clc
xchg
stos
xchg
push
dec
pop
enter
mov
pop
sti
out
bts
sub
nop
cli
jle
lea
jae
lods
cmp
mov
paddsw
push
in
insl
add
xchg
mov
insb
pop
sub
push
fst
enter
mul
and
arpl
gs
jg
sbb
nop
fs
dec
test
das
dec
mov
std
test
ja
mov
test
jle
call
add
xor
popa
sub
je
in
or
jp
stos
pop
subb
nop
shrl
shr
push
out
lcall
call
mov
push
rcll
adc
jbe
shlb
pop
jno
mov
add
fistpl
add
in
lret
mov
mov
dec
cwtl
mov
lret
and
inc
inc
lahf
push
int
es
add
sbb
inc
push
jo
sbb
outsb
ret
xchg
mov
push
pop
inc
pop
cmc
pop
int
xchg
sub
push
mov
div
packssdw
add
mov
or
sbb
pop
add
scas
cmpb
or
cltd
jo
sub
add
in
mov
hlt
sbb
lea
push
sbb
pop
scas
lock
xchg
popf
mov
idiv
jb
adc
dec
inc
jp
insb
mov
mov
std
adc
sti
cmp
repz
jns
lods
stos
popf
or
add
lret
loop
fidivrl
xchg
fs
push
cmp
sbb
push
xor
cmp
je
cmp
xor
test
andb
daa
call
sbbb
pusha
push
push
adc
mov
stos
mov
insb
and
popf
sahf
subb
rolb
test
jnp
mov
mov
cltd
mov
jg
rol
pop
lods
add
sub
repnz
lcall
mov
fisubrl
adc
dec
jecxz,pt
inc
retw
inc
jp
xchg
push
adc
out
dec
pusha
scas
cmp
sbb
push
out
cmp
call
aaa
rorl
test
gs
pop
mov
xchg
ficoml
or
out
lock
sub
int3
dec
or
daa
orl
int3
fsts
fstl
testb
cs
dec
out
js
add
push
adc
or
fistl
push
sahf
sub
repz
rolb
dec
and
jae
dec
lret
outsb
pop
and
push
mulb
das
test
ss
add
xor
cmp
dec
fidivrs
push
cmpsb
test
arpl
jecxz
push
jns
jno
cs
jmp
xchg
arpl
in
ss
insb
adc
push
lods
mov
and
mov
cs
loopne
repz
test
sub
or
dec
repnz
pop
sub
nop
int
xor
xor
test
mov
sarl
jo
icebp
fsubl
and
gs
outsl
lret
mov
sbb
pusha
mov
stc
lds
sbb
and
daa
les
push
and
pop
cld
fwait
pop
adc
fsubs
repz
cmp
add
popf
push
inc
nop
outsl
rcl
sbb
lahf
shl
or
add
inc
pop
xchg
pop
into
lea
xor
testb
pop
sbb
push
test
das
adc
addb
scas
mov
out
int
dec
gs
mull
repz
jl
cmp
outsb
cwtl
lea
fsubl
mov
mov
push
push
pop
adc
aam
shrl
pop
jae
pop
sub
and
lods
gs
sbb
jg
pop
cmpsl
in
inc
stos
inc
ja
enter
into
lds
xchg
pop
or
jge
mov
cmp
push
mov
and
and
adc
pop
lock
push
sbb
or
cmp
add
jp
test
jle
scas
xchg
sbb
adc
test
negl
loopne
shrl
push
loopne
in
js
div
inc
negl
inc
lods
adc
jmp
mov
xor
ja,pn
lret
fbstp
push
loope
inc
mov
into
adc
mov
inc
sub
fdivrl
inc
dec
dec
jns
sti
inc
sar
int
cmc
cld
imul
out
clc
fs
push
inc
inc
aam
ret
cmpsb
out
push
cmp
dec
add
ds
inc
out
lds
out
or
mov
add
dec
int
pop
lods
add
inc
mov
or
roll
insb
ret
pop
cmp
jbe
push
test
sbb
lcall
ljmp
clc
xchg
in
xchg
outsb
adc
into
jbe
in
jmp
rolb
and
cmp
pop
or
imul
mov
sub
inc
jg
inc
fistpll
add
ficompl
fldt
das
daa
dec
cltd
jae
je
jno
xor
pop
adc
jmp
and
push
sti
daa
or
ret
push
add
jmp
or
mov
cmp
test
add
push
sbb
les
sahf
xor
inc
aad
inc
cwtl
cmp
ret
rcl
dec
pop
es
psubusw
jo
mov
jle
jo
lods
stos
jbe
dec
fucomi
push
pusha
push
repnz
stc
enter
fisubrs
jl
fcompl
push
pop
cmpsl
jl
pop
scas
loope
xchg
fsqrt
xor
push
pop
out
addr16
jecxz
scas
mov
ja
rcr
ret
fsubrl
jbe
pop
xor
daa
and
add
mov
mov
sbb
jo
shrl
jns
cltd
aad
pop
arpl
mov
bound
xchg
pop
mov
jg
mov
jo
dec
ficoms
mov
or
cmp
pop
lds
in
test
mov
sub
xchg
mov
or
push
add
pop
lock
loope
inc
mov
leave
mov
fimuls
in
xchg
mov
inc
pop
cld
or
and
inc
and
lods
cmpb
arpl
pop
dec
push
shrb
inc
or
cmp
mov
es
and
fdivs
and
js
rcrl
in
jle
cmc
push
repnz
lods
repz
push
push
jb
das
jnp
xor
imul
lock
push
xor
cmp
shl
dec
inc
sub
mov
outsl
divb
add
pop
sahf
iret
push
mov
sbb
cmp
pop
dec
add
imul
mov
or
aas
mov
cmp
cmpsl
xchg
dec
mov
gs
pop
ja
xchg
pop
pop
adc
xor
push
lods
mov
add
pushf
insl
rolb
jge
testl
xor
adc
lahf
daa
jb
aas
scas
mov
xchg
or
rcrl
lcall
inc
and
adc
adc
push
fcmovnbe
pop
mov
adc
inc
hlt
mov
test
in
pusha
push
push
xchg
pop
inc
pop
mov
push
mov
and
adc
xchg
testb
pop
push
fsubrl
into
shlb
sbb
scas
lret
dec
fistl
out
push
jecxz
dec
lods
ret
and
sbb
push
xchg
rclb
push
and
loopne
and
adc
and
outsb
or
orl
and
jge
mov
clc
jl
pop
popa
xchg
hlt
iret
cmpsl
inc
loop
mov
aad
sbbb
mov
aaa
sti
movsl
in
sub
popa
xor
lret
push
mov
cli
pop
stos
push
addb
stc
data16
mov
xchg
movnti
sub
repnz
popl
push
sbb
push
inc
jg
dec
sbb
jg
jnp
divl
pusha
adc
lock
cltd
pop
pcmpgtd
or
push
fists
aas
jle
mov
jbe
rorb
call
ja
icebp
daa
mov
mov
fistpll
mov
cwtl
sarl
loop
push
add
lock
cs
and
pusha
xor
mov
dec
pop
mov
mov
xchg
xchg
lahf
subl
pop
cmpsb
arpl
push
loopne
imul
cmp
fdivrl
jge
sbb
sbb
push
lahf
lcall
and
xor
lret
gs
mov
subb
and
inc
loope
mov
push
lret
xchg
fldenv
std
into
ss
ljmp
shll
movsl
std
mov
aas
lea
xchg
dec
jo
xchg
pop
in
pop
push
xor
adc
cmp
and
or
xor
arpl
pop
popf
gs
mov
and
into
shrb
sbb
push
flds
fcmovu
rol
jge
loop
mov
in
inc
dec
sbb
sti
mov
mov
outsl
mov
lretw
jbe
add
inc
ret
iret
pop
sti
nop
insb
cltd
mull
dec
push
cwtl
mov
cmp
lret
add
mov
mov
xchg
cld
cmc
popf
jl
mov
cwtl
and
in
lret
and
xor
adc
je
push
rcl
clc
aas
inc
pop
jns
aas
out
push
mov
and
ret
icebp
jge
rclb
mov
movsl
inc
cmovae
repnz
jp
movsl
xchg
cmp
adc
js
mov
add
repz
mov
xchg
outsl
pushf
bound
icebp
mov
or
sbb
es
mov
out
shlb
loope
cmc
dec
das
and
out
jg
xor
repz
in
sbb
xlat
push
xorl
fdiv
pop
nop
xor
cmp
xchg
negb
ljmp
es
lock
add
je
xchg
addr16
rorb
js
js
mov
outsb
jmp
sti
fidivl
mov
add
add
xor
cmp
cltd
adc
sub
jo
inc
outsl
sbb
jg
push
mov
push
sbb
insl
xor
dec
add
mov
xlat
scas
mov
vmwrite
scas
cmpsb
adc
shlb
imul
sbb
test
push
loopne
sbb
xchg
mov
test
sarb
fstpl
mov
jno
add
mov
ljmp
sub
ret
xor
stc
fistl
sbb
lods
xchg
das
and
cld
popa
mov
sub
or
gs
cltd
pop
cmp
inc
iret
mov
popf
push
mov
push
cld
mov
shl
fwait
jl
dec
arpl
ljmp
scas
inc
dec
xchg
dec
addr16
loopne
inc
pop
xorl
xchg
bound
mov
mov
daa
and
stos
out
loope
xor
mov
clc
fimuls
jp
and
sti
push
jae
mov
mov
sub
lret
push
xchg
push
addl
pop
xchg
push
sub
sarb
sub
sbb
rcrl
call
rcrl
adc
cmp
js
mov
pop
lock
test
push
sbb
cli
push
cltd
loope
out
xchg
sbb
sti
mov
call
cmp
pop
or
loopne
xor
add
fwait
js
cmpsb
bound
and
sub
mov
dec
xchg
inc
jmp
adc
dec
mov
mov
jb
stc
inc
mov
fsub
lret
shrb
ret
cmc
xchg
jno
std
mov
inc
mov
cwtl
mov
add
mov
mov
or
mov
cmc
inc
xor
outsl
sub
cld
cld
pop
repz
adc
aad
imul
adc
sbb
push
push
loopne
test
xchg
ljmp
add
ss
ret
mov
and
add
and
and
test
in
stc
dec
mov
mov
or
dec
fstpt
stos
pop
push
jg
clc
rorl
sbb
mov
sub
jge
jne
push
add
sub
adc
mov
inc
push
imul
inc
pop
bound
popf
ret
add
insb
xchg
jno
pop
jp
push
ret
mov
pushf
or
fs
sub
movb
jno
pop
pop
jle
push
cmp
mov
mov
mov
xor
fs
inc
out
adc
add
arpl
mov
mov
add
mov
fsub
pop
xchg
push
test
xchg
emms
aad
mov
repz
pusha
xchg
or
mov
xor
inc
pop
clc
push
inc
fisubs
addr16
cmp
add
dec
jb
inc
push
pop
inc
cmp
mov
fistl
inc
mov
or
pop
push
mov
shlb
xor
sbb
repz
mov
out
fcoms
pop
pop
mov
addr16
insl
inc
jbe
or
or
mov
and
dec
nop
aas
in
rclb
out
or
xor
cwtl
out
sub
mov
cld
lea
imul
lods
push
pushf
es
xchg
pop
xchg
rcrb
push
insl
xchg
or
popa
lea
das
in
pop
or
jge
movb
cmp
call
mov
pop
sbb
push
mov
test
and
xchg
std
fdivrl
mov
nop
lds
bound
je
cwtl
mov
cmp
dec
cmp
or
inc
cvtps2pi
les
push
xchg
jg
xor
test
call
bswap
sub
ja
daa
add
mov
sbb
cmc
test
or
mov
fwait
xchg
xchg
popl
xchg
pop
inc
pop
push
pushf
dec
mov
xchg
or
and
dec
xchg
adc
out
icebp
inc
pop
fcmovnu
cltd
mov
xor
aad
add
inc
jnp
jns
dec
sbb
mov
cmp
add
pop
pop
add
mov
and
inc
stc
mov
iret
insb
mov
pop
pop
xor
ficompl
inc
daa
fwait
push
pop
inc
cmpsb
cs
rcll
ja
adc
hlt
fstpl
jecxz
inc
mov
mov
in
mov
sarb
xchg
shll
sbb
dec
add
sbb
jbe
add
jle
imul
dec
or
ficoml
cmp
insl
movsb
cmc
jae
repz
sbb
gs
jmp
push
and
idivb
rclb
jmp
lcall
sbb
xor
cmpb
mov
in
jns
xor
sbbb
js
mov
shll
mov
push
enter
popa
pop
imull
out
xchg
stos
add
cmpsb
add
data16
lds
clc
xchg
xchg
popl
lds
jae
andb
add
aaa
mov
inc
fmul
lea
mov
cmpsb
stc
cmp
pushf
xchg
adc
inc
push
jne
push
cmp
scas
cmp
lcall
cwtl
in
fwait
xor
push
dec
cmp
mov
mov
push
scas
pop
and
mov
enter
nop
jg
mov
jae
push
jl
loop
jbe
lock
mov
ljmp
push
cli
jnp
leave
cld
xchg
lds
jne
lock
inc
mov
insl
cld
inc
add
push
push
xor
leave
xchg
lret
in
jo
sbb
inc
inc
hlt
in
loope
xor
xlat
and
sbbb
lret
xchg
mov
add
sub
movsb
jbe
xchg
call
rorb
add
call
push
into
les
ficomps
ljmp
sbb
push
loopne
inc
aaa
out
pop
pusha
xchg
leave
sti
or
call
xchg
adc
ss
sbb
pop
mov
mov
setg
into
mov
and
repnz
xor
loope
rcl
outsl
hlt
iret
movsl
lods
aad
in
lods
xchg
pop
fnstenv
fldenv
xchg
xchg
loop
lock
leave
cmp
call
and
insb
jl
mov
stos
insl
mov
sub
sub
cmp
add
stc
inc
mov
mov
jae
pop
mov
pop
dec
add
js
xchg
mov
imul
mov
xchg
and
pop
mov
ja
js
scas
popa
iret
push
loop
lock
je
xlat
out
in
mov
xchg
add
das
test
outsl
push
sbb
in
pusha
mov
sti
push
pop
in
cmp
mov
add
test
xchg
dec
cld
mov
jb
adcb
mov
push
das
roll
subl
xchg
and
lret
test
inc
movsl
lods
iret
push
out
xchg
adc
ret
test
gs
jnp
sbb
mov
inc
cmc
leave
cs
rcll
iret
das
arpl
out
lods
lcall
imul
jne
or
adc
cli
lahf
dec
je
in
inc
popa
pop
add
xor
and
sub
and
cmp
adc
jg
jb
pop
mov
inc
jl
inc
pop
mov
xchg
mov
xchg
das
cmp
jg
jbe
int
push
mov
aaa
lcall
les
ljmp
mov
mov
leave
cmp
in
mov
inc
lods
mov
lods
in
xchg
push
cmp
ja
movsl
sbb
in
jecxz
xor
xor
xchg
or
xor
je
out
mov
cli
int
stos
jae
adc
cwtl
sbb
mov
je
mov
mov
jl
cmp
es
lock
sub
cmpsb
lock
sbb
push
sbb
inc
shll
lods
int3
addr16
jle
mov
pop
jl
sbbb
les
mov
sbb
mov
and
sahf
dec
popa
loope
cmpsb
sbb
subl
jge
and
mov
lret
mov
fld
jecxz
cmpsl
gs
repz
imul
ljmp
in
push
cltd
fldenv
jae
fidivrl
push
jmp
sar
ss
scas
ret
aad
or
cmp
and
lds
outsb
fiadds
mov
jo
scas
mov
pop
lods
inc
inc
mov
sub
int
pop
aam
arpl
or
lods
mov
popa
fldt
dec
int
cbtw
shlb
cmpsb
stc
js
lret
mov
imul
and
lret
sarb
out
mov
sub
mov
aaa
aad
xchg
jle
stc
out
aad
mov
int
cmc
in
lret
jmp
add
dec
daa
cld
pop
fcomi
mov
fdivrs
pushf
dec
cmp
iret
jne
mov
jne
es
pop
nop
mov
mov
jbe
sub
int
sbbb
das
jo
movsl
inc
adc
js
imul
jle,pt
test
outsl
cmp
push
push
imul
int3
in
and
jno
pop
sub
and
or
pop
out
xchg
push
push
pop
inc
fdivs
dec
loop
inc
mov
sbb
js
jne
fnsave
js
lahf
fs
shr
out
inc
mov
push
push
dec
and
push
pop
shrl
mov
inc
les
std
adc
mov
add
pop
xchg
movsb
mov
jbe
inc
add
ret
inc
jns
jne
dec
loope
es
adc
sbb
xor
cmp
jns
inc
push
push
in
pop
jbe
jnp
sub
mov
out
cs
fdivr
mov
cmp
je
ds
or
or
std
xchg
mov
push
decb
pusha
mov
jl
and
addr16
xchg
xor
test
mov
fwait
or
jae
lods
sub
iret
aaa
stos
rep
push
mov
dec
or
out
cmp
or
loope
sbb
scas
mov
mov
adc
cmp
pusha
add
cltd
lret
cs
adc
gs
xor
mov
jge
xor
sbb
or
add
mov
pop
cs
adc
inc
into
add
movsl
lods
mov
add
cli
and
lahf
sbb
or
arpl
jo
pop
pop
imul
insb
inc
push
in
mov
dec
xchg
dec
stc
stc
icebp
xchg
jmp
xor
mov
pop
mov
test
add
lret
jg
xchg
dec
sub
sbb
push
xor
out
std
jl
js
mov
out
add
mov
or
sbb
or
mov
cmp
sbb
add
test
popf
push
dec
xor
adc
and
mov
add
pop
xchg
lock
clc
sbb
dec
push
lret
and
mov
rclb
fnstenv
cmc
loop
push
pusha
idivl
into
mov
daa
xor
push
mulb
sbb
push
jg
mov
add
sub
sbb
pop
adc
int
jmp
inc
pop
dec
test
jbe
lods
sbb
enter
adc
jg
cmc
pop
adc
adc
cmp
and
sub
push
sub
ljmp
and
adc
cld
and
dec
mov
outsl
mov
push
or
jno
sub
hlt
imul
fldcw
pop
mov
rcl
inc
lea
jb
push
jns
cmp
inc
xor
mov
sbb
lret
xchg
xchg
adc
mov
push
xchg
xchg
fistpll
mov
cmp
mov
pop
orb
rol
xlat
fwait
icebp
cltd
add
ds
pop
sbb
lods
lea
dec
add
into
sub
push
out
and
inc
pop
int
jle
dec
out
jmp
testl
out
pushf
adc
jne
lcall
hlt
push
outsb
adc
or
arpl
fdivs
adc
lret
aam
je
movsl
pop
sbb
insl
mov
push
xor
mov
out
sbb
mov
dec
push
dec
daa
lods
arpl
push
xor
into
push
btr
test
dec
jbe
push
call
lds
pop
sub
loope
jmp
scas
add
xor
int3
add
jl
bound
sbb
push
pop
subl
xchg
aad
bound
or
insl
push
inc
sub
jp
jbe
inc
dec
frstor
cmp
test
sub
sbb
aad
test
jbe
pop
fwait
mov
ficompl
pop
push
push
xchg
pusha
ficoml
add
loopne
xor
mov
fdiv
es
adc
xor
scas
loope
add
pop
call
cmp
fs
fwait
aaa
mov
shr
add
fmull
lods
ror
pop
shrb
aad
dec
push
mov
enter
adc
repnz
push
mov
cltd
add
and
cli
inc
push
outsb
xor
jmp
les
fnstenv
pop
pop
and
rorb
rolb
xchg
mov
add
aad
jecxz
test
out
inc
xlat
testb
ja
jp
stos
es
rdpmc
push
inc
mov
pop
loop
xchg
push
scas
xchg
add
jp
arpl
outsl
add
or
or
xor
bound
pop
mov
jo
jb
mov
dec
addr16
adc
popa
pop
fadds
pop
pop
dec
or
lahf
sbb
push
nop
insb
cmp
movsl
test
out
fists
xchg
push
cmpsb
iret
cli
dec
mov
mov
sahf
xlat
inc
sub
dec
adc
ja
in
in
and
mov
mov
stc
fwait
mov
xor
mov
out
mov
data16
mov
ljmp
mov
out
add
data16
pop
jp
aas
lods
adc
cmp
outsb
cmp
mov
jo
mov
fidivs
bnd
mov
sub
jnp
repz
pop
sub
mov
inc
int3
ja
aas
sbb
pop
call
and
aaa
popa
mov
xor
and
xor
arpl
adc
fimull
ds
or
and
fisubl
js
jo
mov
mov
push
lods
jmp
icebp
mov
or
adc
or
xchg
xchg
les
test
adc
inc
mov
filds
pop
push
pop
int
mov
call
mov
jl
mov
jne
or
cmp
sub
ret
repnz
clc
lahf
add
js
test
push
sbb
push
adc
cmp
and
sub
mov
jns
shrl
ds
lea
inc
push
mov
lret
sarl
xor
push
fcomps
mov
stos
jp
in
stos
xor
xor
mov
fsubr
rcrl
and
xchg
add
add
pop
daa
ljmp
ds
mull
adc
call
and
xchg
frstor
cwtl
clc
mov
test
stc
mov
scas
lret
fcompl
test
sub
sbb
push
xor
sbb
add
out
dec
cmp
push
mov
add
cmp
sub
fdivrl
xor
subb
jb
and
push
cmc
leave
inc
rcrb
rcl
push
push
cmp
xor
je
out
and
cmp
test
sbb
xchg
and
insb
xor
mov
sub
movsl
dec
cld
and
pop
out
int
fcoml
lods
mov
or
inc
imul
out
outsl
clc
loop
xchg
dec
sti
lea
aaa
mov
inc
in
sahf
test
dec
xchg
mov
lds
addl
jecxz
mov
xor
mov
loopne
mov
mov
mov
sbb
mov
lret
pop
shll
push
push
loopne
divb
push
flds
sub
cmp
pushf
cmpsb
sbb
out
ss
push
xor
icebp
ror
fmull
in
adc
stos
mov
std
and
dec
jns
xchg
sub
add
jno
jl
dec
shr
stos
dec
in
loope
daa
imul
jp
hlt
sbb
adc
cld
cltd
add
gs
loopne
mov
rol
mov
adc
pop
mov
push
and
mov
dec
xor
jb
mov
adc
loope
cmp
sub
repz
mov
cmp
aad
add
les
or
cli
icebp
adc
rcll
faddl
rorl
add
xor
test
sahf
jmp
inc
scas
sub
jbe
and
mov
cwtl
xchg
and
mov
sub
mov
sub
imul
dec
lret
loope
xor
test
scas
or
jg
and
jbe
filds
inc
mov
subl
xchg
and
sbb
cs
jg
xor
add
xchg
lock
mov
push
vmovdqu
xchg
lcall
comiss
clc
mov
sub
pop
cmp
xchg
mov
cld
cmp
aad
xchg
enter
mov
xlat
xchg
xchg
in
stos
cwtl
sbb
add
adc
sbb
mov
fistpll
repnz
je
fxch
aas
mov
idivb
cmpsb
mov
hlt
jb
sub
push
mov
mov
jb
mov
dec
and
xor
fiadds
xchg
add
and
adc
and
mov
test
pop
xor
lret
jecxz
sub
cwtl
dec
mov
sahf
lods
js
sub
or
mov
int3
out
arpl
mov
lds
or
sub
frstor
inc
leave
jno
jle
add
pop
sbb
jno
lret
sbb
mov
and
dec
lods
jle
pop
jo
jno
leave
push
push
jne
or
lret
inc
mov
in
sbb
fwait
in
xor
push
aam
push
ja
test
cmp
addl
lcall
adc
rcl
ja
mov
and
jo
ljmp
push
mov
inc
pop
loopne
push
jae
out
mov
mov
dec
cld
pushf
pop
repz
mov
std
cli
lcall
orl
adcb
mov
ret
mov
pop
adc
xchg
imul
lods
fidivrl
js
mov
shlb
add
pusha
pop
mov
lcall
or
dec
xchg
or
or
sti
out
adcl
in
sub
imul
sbb
sbb
shll
pop
stos
ljmp
js
cmc
cmpsb
cld
iret
adc
cmpb
mov
scas
mov
xor
or
push
fstpt
addr16
dec
dec
inc
xchg
jg
jne
in
dec
xor
xchg
into
sahf
adc
mov
in
mov
add
lcall
adcl
dec
xor
jecxz
xchg
push
and
inc
adc
dec
xor
push
adc
lock
mov
push
mov
jnp
out
xor
adc
shll
adc
loop
jne
jnp
adc
icebp
mov
scas
cmpsb
inc
mov
sti
out
inc
mov
jae
and
mov
aas
stos
rcll
popa
cmp
roll
sub
push
add
in
fsubrs
sbb
and
fisubl
mov
lret
shrb
and
mov
cmpsl
mov
push
aas
add
lea
pop
fwait
cmc
or
inc
inc
test
inc
pop
out
sbb
pop
xchg
mov
xor
and
cli
adc
adc
add
mov
repz
aam
mov
jle
in
fucomi
jbe
lds
outsl
xor
fstpl
sub
or
std
sub
xchg
insl
sbb
int3
jns
mov
inc
mov
lcall
adc
fwait
adc
cmp
pop
push
mov
ja
ret
sub
arpl
push
xchg
pusha
or
sbb
push
xor
mov
pop
mov
cli
and
shll
movsb
mov
out
mov
idivb
in
ret
cmpsb
add
inc
add
sub
jmp
stos
or
std
frstor
fdivrl
sbb
outsb
adc
int3
stos
inc
inc
jnp
mov
ds
xor
es
repz
sub
jg
movsb
pop
ljmp
ljmp
cmp
sub
arpl
sar
or
inc
or
in
jb
ja
in
xchg
stos
mov
nop
stos
cmc
jl
cmp
adc
mov
iret
gs
mov
fnstenv
enter
xchg
sub
adc
inc
loopne
inc
stos
fldenv
mov
xchg
call
jmp
rorl
jp
inc
mov
in
shl
xchg
fwait
insb
out
pop
into
mov
ret
mov
sahf
adc
mov
jge
dec
cli
insl
popl
int3
es
test
lock
xchg
sbb
inc
shlb
or
jg
jge
xor
das
mov
dec
sub
xchg
js
mov
lcall
xor
into
test
int3
adc
loopne
inc
inc
add
pop
je
inc
pop
lcall
hlt
jne
xor
test
mov
pop
ss
inc
aad
dec
cs
add
sbb
dec
fmuls
mov
call
xchg
and
pop
and
mov
cmpsb
ja
lea
sub
cmp
mov
pop
sbb
xlat
imul
pop
push
ror
pop
or
jle
insl
addl
or
subl
loopne
movsb
test
mov
mov
and
movsb
imull
ja
js
sbb
adc
mov
dec
sahf
jne
cmp
imul
imull
sbb
test
mov
shll
adc
or
out
sbb
into
sbb
scas
and
ja
mov
pop
add
inc
and
and
mov
xchg
xor
rcrb
dec
aam
iret
adc
dec
sbbb
mov
je
das
mov
mov
popa
popa
clc
shlb
push
imul
mov
push
mov
jecxz
insb
sub
mov
sbb
add
and
mov
outsb
mov
inc
mov
cmp
dec
cmp
dec
ret
test
daa
lret
cli
push
cmpl
ficoml
mov
adc
fiadds
cmpsl
cmpsl
hlt
jmp
nop
add
mov
mov
pusha
xor
call
cmp
push
aam
inc
dec
xlat
fisubl
add
cmpsb
ficompl
xchg
popl
enter
out
iret
push
dec
pop
jle
inc
out
je
cld
enter
ljmpw
add
ds
pushf
das
inc
xlat
pop
cli
mov
cmp
movl
in
mov
pop
adc
test
or
es
gs
imul
sub
sbb
xchg
and
mov
inc
sbb
stos
jb
jl
xchg
out
shll
cld
js
xchg
and
or
pop
xchg
push
fxch
inc
pop
add
xlat
mov
inc
add
stos
mov
pop
sub
push
or
dec
jl
push
pushf
adc
mov
in
inc
mov
push
or
adc
cld
mov
push
adc
mov
mov
jl
pop
cli
out
dec
pop
pcmpeqw
sub
pop
hlt
ss
outsb
cmpsb
sub
sti
sub
test
enter
outsl
xchg
inc
and
mov
in
insb
pusha
pop
in
aaa
jb
out
cmp
adc
daa
fwait
in
in
jge
xor
adc
mov
xchg
movsb
and
inc
in
fcmovnb
push
int
mov
add
loopne
dec
enter
xor
dec
and
or
add
ljmp
loope
pop
das
push
test
movb
sub
les
push
push
inc
ds
repnz
xchg
dec
pop
sarb
jnp
enter
jne
inc
mov
xor
pop
mov
add
jge
outsl
popl
mov
mov
out
add
loop
cmpsb
data16
sbb
sahf
jecxz
xchg
movsb
sbb
out
sub
ret
inc
test
mov
leave
push
cmpb
pop
jnp
je
inc
jbe
repz
mov
xor
ljmp
xlat
jnp
push
add
popa
sbb
fwait
out
mov
aad
mov
fwait
jp
ljmp
jge
test
or
and
cld
and
xor
cmpsl
cmp
xchg
pop
pop
pop
xor
cmc
popf
cld
out
add
mov
pushf
gs
ret
popf
sahf
push
lret
idivb
xor
xchg
xor
in
mull
pop
dec
cs
mov
test
xchg
mov
sub
mov
test
mov
and
mov
movsl
jl
lds
lea
fs
jp
rcr
insl
dec
nop
push
lea
xchg
adc
or
mov
cmc
enter
ljmp
adc
int
test
ja
inc
adcb
jl
dec
cs
mov
addb
inc
pop
cmpsb
push
ret
push
add
jno
mov
xchg
clc
je
jp
xchg
cmpsb
imul
int3
jbe
or
into
out
scas
mov
stc
inc
push
or
imul
dec
sti
fistl
repnz
jle
dec
cmpsl
adc
pop
or
adc
daa
sarb
jecxz
cmpl
sti
jecxz
add
ds
pusha
rcrl
cli
outsb
xchg
cmc
mov
pop
inc
sbb
cmp
push
jno
sub
and
xlat
movsb
fnstsw
das
adc
sbbl
scas
push
ds
inc
cltd
mov
jnp
push
push
sti
loopne
jl
loop
pop
add
dec
test
ror
out
fwait
insb
ljmp
cltd
sub
pop
pop
enter
cmp
mov
outsb
lret
xchg
mov
rorb
jne
ja
or
sbb
xchg
add
ret
push
cld
repz
das
and
aaa
jae
sub
sbb
push
pop
sarl
add
xchg
and
xor
lret
adc
scas
push
xor
jl
je
inc
xchg
xlat
inc
dec
ret
ja
push
fiaddl
xchg
inc
pop
xor
cmpsl
test
and
jnp
and
push
ficomps
clc
ds
test
xchg
lcall
xorb
push
cmp
add
cmp
scas
jl
ret
mov
xor
test
push
fnstsw
ret
mov
decl
nop
xchg
mov
jb
shrl
mov
fs
xor
push
into
jp
adc
jnp
in
push
std
lds
and
xor
inc
or
push
dec
adc
lret
and
dec
cmp
outsb
lret
mov
les
pop
sub
insb
test
and
imul
jecxz
pop
sbb
dec
popl
std
mov
imul
xor
iret
bound
ss
sbb
stos
mov
xchg
push
lods
outsl
jns
jp
jne
stc
adc
inc
movsl
and
stos
mov
jg
cli
push
lret
inc
cmp
repnz
lds
inc
mov
fdivl
add
push
popf
and
in
aas
or
pusha
arpl
in
mov
lret
rcrl
jo
stos
out
out
add
movsb
sahf
push
mov
sbb
sbb
add
mov
xchg
add
ret
pop
testb
push
xorb
sbb
fs
rcll
jae
mov
lret
pushf
pop
ror
ds
jp
mov
inc
push
mov
test
out
or
jae
sbb
nop
xor
dec
mov
cmp
std
test
xchg
cmp
jbe
lahf
arpl
mov
enter
pop
or
scas
sti
mov
shrb
dec
sbb
cmp
adc
adc
xchg
hlt
push
and
pop
xor
xchg
jbe
xchg
ret
dec
lahf
lds
cltd
add
mov
orb
movsb
mov
xchg
stc
loopne
addr16
add
push
sti
pushfw
mov
dec
push
sub
push
mov
ljmp
flds
mov
add
pushf
movsb
inc
inc
arpl
or
xlat
inc
arpl
enter
push
call
mov
cmpsb
lods
mov
out
dec
mov
sbb
cld
dec
push
stc
push
adc
mov
adc
jmp
loope
add
push
pop
dec
xchg
sbbb
out
inc
nop
sbb
stos
or
dec
pop
into
fucomp
repnz
jecxz
or
js
sub
vmwrite
jl
lock
mov
or
mov
xchg
les
push
insl
fistl
xorl
jecxz
sub
jae
icebp
sbb
sub
mov
push
cmc
add
adc
cli
pop
pop
inc
insb
loopne
xlat
pop
fiadds
mov
outsl
xchg
test
leave
xchg
neg
or
cmp
xor
mull
jno
pop
pop
imul
mov
xchg
push
rcl
data16
vaddsd
cmpsl
dec
jmp
inc
cmp
jae
fstps
movsl
ret
cmp
xchg
vpcmpgtd
out
enter
mov
and
xor
int
dec
sbb
jg
cmp
addr16
cld
into
outsb
mov
icebp
les
repz
jg
das
stos
dec
loope
test
call
fldt
lea
stos
push
test
xor
popf
jp
pop
cmp
dec
rclb
in
repnz
mov
pop
pusha
mov
push
shr
cwtl
sbb
inc
jmp
gs
frstor
push
mov
lret
dec
je
mov
push
repnz
pop
add
ljmp
popf
mov
das
mov
jbe
pop
lea
loop
sti
xchg
repz
rorb
add
push
stos
add
mov
test
andl
cmp
fmul
lea
mov
mov
sbbb
popf
mov
cmpsb
dec
inc
sbb
push
push
es
pop
cli
sub
xchg
notb
adc
jle
pushf
leave
adc
pop
or
sub
jo
dec
aaa
pop
out
lret
inc
pop
fisttpll
mov
sahf
pop
lret
aam
fisubrs
cmp
inc
jns
xor
jp
sbb
fadd
dec
sbb
xchg
mov
push
popa
mov
sub
bound
dec
pop
rorl
sub
jmp
mov
sub
movsb
andl
scas
cltd
in
into
fwait
and
cmp
outsb
pop
arpl
out
sbb
xchg
add
push
mov
into
outsl
mov
push
cmp
dec
add
repz
les
inc
das
icebp
int3
hlt
test
sub
in
ss
jl
or
das
jae
mov
test
sbb
dec
cmp
out
rolb
and
cmp
aad
cmpsl
dec
daa
pop
sahf
cmpl
mov
in
jnp
jge
mov
out
push
xchg
fnsave
adc
jmp
call
mov
adc
cld
jecxz
xchg
push
dec
dec
cmpsl
or
ljmp
sbb
cmp
lcall
into
jmp
mov
mov
adc
js
mov
cld
out
lret
repnz
mov
sbb
outsb
jp
pop
cld
pop
add
xlat
mov
cltd
ficoms
jmp
push
and
mov
add
jnp
jb
or
pop
imul
fldl
pop
xchg
lods
sbb
dec
outsl
xor
adc
fnstsw
pushf
outsb
gs
dec
clc
data16
xor
sub
int3
mov
mov
imul
sub
pop
mov
mov
push
inc
int
loopne
sub
add
xchg
sbb
xchg
les
pop
xor
cli
mov
mov
ror
xchg
or
xchg
rol
nop
and
mov
test
or
cmp
or
cld
sbb
mov
and
imul
test
xchg
sub
rcll
xor
hlt
das
pop
cmp
std
aam
lods
pop
sbb
clc
pop
xchg
lock
std
push
aas
lds
jae
jl
das
pop
xchg
es
mov
cmpsl
or
xchg
pop
or
pop
sbb
fs
pop
mov
pop
push
std
jnp
pop
daa
imul
lcall
loop
add
hlt
out
mov
or
mov
dec
arpl
insl
out
out
push
push
and
mov
cld
stos
mov
xchg
out
scas
pop
push
dec
jb
jb
les
pusha
jno
rorb
and
int3
mov
stos
dec
scas
ljmp
sbb
repz
jmp
mov
incl
adc
pop
mov
int3
hlt
push
fucomip
jns
loopne
fcmovne
lcall
movsb
cltd
sub
or
outsb
into
pop
scas
ds
cmp
add
push
popa
jb
fadds
out
push
adc
fdivrp
push
add
dec
xchg
lret
orb
sub
sub
xor
in
xchg
jo
outsb
or
sub
mov
fwait
mov
idivb
push
ss
mov
pop
lea
outsb
in
add
pop
push
ret
ljmp
jmp
loop
adc
sbbb
ds
mov
xor
add
or
cmpsl
test
mov
nop
jne
dec
outsl
fsubrl
sbbl
xorb
fwait
into
test
in
mov
repz
sti
and
jmp
and
fmull
or
iret
int
mov
adc
xchg
xor
in
scas
push
mov
int
insl
xor
lea
push
pop
xchg
push
lods
nop
mov
adc
inc
sahf
rorl
daa
cltd
das
jbe
je
or
outsl
push
nop
xchg
add
test
adc
jne
ds
outsb
je
inc
jmp
stos
xor
std
fisttpll
je
ret
mov
cs
lea
scas
les
adc
xchg
dec
sub
or
popf
jp
mov
push
pop
mov
jne
scas
and
repz
or
pop
mov
scas
rcl
mov
jge
clc
lods
into
fisttps
and
aas
or
cld
adc
sahf
call
scas
iret
fxch
pmuludq
es
pop
loop
pop
adc
mov
dec
sbb
and
jmp
or
in
cli
cmp
aaa
mov
scas
jecxz
push
lock
nop
pop
lds
scas
repnz
mov
mov
mov
mov
push
out
pop
addb
jge
mov
and
test
dec
mov
sub
les
iret
push
xchg
push
mov
repnz
rcll
shlb
mov
rolb
xorl
mov
push
sub
rol
xor
xchg
sub
shr
or
dec
jge
jb
int
pop
push
mov
add
mov
int3
gs
mov
cmpsb
cmpb
enter
shrl
push
lcall
sbb
mov
mov
imul
mov
test
repz
das
push
mov
sub
add
xor
adc
xor
nop
jbe
insl
xor
shrl
pop
rolb
stos
xchg
adc
jbe
cld
fs
insb
dec
into
je
daa
scas
jb
pushl
xchg
rorb
xor
mov
iret
mov
cmpsl
add
and
inc
fstpt
pop
push
icebp
leave
bound
mov
pop
jno
mov
or
jbe
mov
add
sbb
push
jns
daa
pop
negb
pop
shll
fiadds
pop
insl
adcb
xchg
dec
lea
sahf
dec
stos
mov
icebp
inc
xor
out
xor
xchg
pop
clc
out
jo
xlat
xchg
pop
mov
orl
push
pop
and
mov
addr16
inc
call
jg
stos
add
inc
shl
xor
out
mov
xchg
mov
pop
mov
std
jg
sbb
repnz
sub
iret
jmp
sbb
or
aam
mov
std
cli
or
mov
iret
shrb
jns
ds
push
xor
jbe
lcall
dec
dec
adc
imul
adc
and
dec
and
mov
out
jne
icebp
loope
test
or
into
dec
push
daa
idivb
cmp
xchg
sbb
outsl
mov
mov
dec
sti
pop
repnz
or
or
mov
jae
jbe
mov
adc
cmc
loopne
rorl
test
adc
aas
inc
push
and
bound
jecxz
adc
xchg
ret
mov
std
imul
stos
enter
fdivs
jp
dec
dec
insb
dec
push
and
mov
out
jmp
sub
das
sbb
cwtl
cmp
inc
mov
push
mov
popf
adc
cmp
cmp
mov
xchg
inc
xor
jp
sub
les
or
cmp
sarb
movsb
xorl
aam
or
loop
mov
sbb
gs
inc
pop
pop
ficompl
jb
in
flds
outsl
inc
js
cmp
mov
mov
popf
shll
and
jnp
adc
aad
push
into
popf
repnz
mov
or
into
sbb
mov
stos
imul
out
xchg
out
aam
adc
mov
cs
js
push
shlb
adc
in
sbb
mov
insb
pop
dec
stos
lods
mov
lret
movsb
cmp
ret
test
out
mov
cmpl
pop
cmc
shrl
test
and
add
jge
xorl
mov
mov
mov
cmp
xchg
adc
add
mov
rolb
mov
jg
cmc
roll
push
mov
movsb
outsb
push
xchg
je
popf
pop
sub
int3
fcoms
and
jmp
fs
movsl
fcmovb
in
call
jge
ret
bound
pop
push
mov
movsl
adc
jge
int3
adc
xchg
cmp
dec
dec
jns
cltd
ds
push
add
rcrb
add
orb
mov
jo
ret
cmpsl
cmp
pop
out
mov
rorb
mov
pop
scas
push
out
mov
push
mov
and
insl
cs
movsb
dec
fsts
adc
mov
xor
fbstp
arpl
xor
sbb
rorb
comiss
ljmp
mov
mov
ljmp
ficoml
out
in
pusha
addr16
jecxz
aad
add
test
idivb
lea
xchg
pop
jge
les
es
lds
pop
fstl
imul
test
add
jns
lods
in
jecxz
jnp
pop
andl
pushf
jno
adc
dec
imul
xchg
push
mov
xor
jmp
jmp
cmp
fsubrl
mov
sub
push
xchg
les
or
push
lds
xor
adc
pop
mov
inc
push
push
cmp
dec
shll
cld
in
sbb
call
shlb
out
cmp
or
inc
jns
adc
xor
ja
jno
or
xor
add
jle
push
mov
mov
scas
ja
xor
dec
scas
push
mov
sarb
mov
or
es
xor
daa
and
and
subb
clc
mov
test
mov
xor
mov
pop
inc
jo
xor
js
push
daa
xchg
jmp
jo
mov
rolb
insb
xchg
push
add
push
cmpsb
imul
mov
into
iret
mov
or
jae
xorb
imul
sub
je
dec
sbb
popf
inc
xor
stos
aad
mov
push
ficompl
and
movsl
test
dec
lock
cmc
jnp
lock
xchg
arpl
nop
out
stos
xlat
inc
push
push
or
cld
jmp
fs
es
int3
xchg
add
jecxz
inc
pop
outsb
cmc
jb
xchg
or
lret
ljmp
lcall
push
icebp
push
cmpsb
xor
lcall
sahf
out
sub
push
roll
add
mov
dec
jnp
cwtl
jne
xor
int3
fidivrl
and
and
jns
scas
cli
xor
ret
add
bound
sub
sub
xchg
jmp
or
adc
mov
pop
fwait
pushf
lock
cwtl
stos
and
fs
je
mov
fcoms
jns
into
fs
pusha
repnz
rorl
arpl
divl
mov
shll
jne
lock
lock
dec
mov
rcr
ret
outsl
fimuls
push
cmp
dec
sldt
push
mov
enter
inc
pop
cmp
addr16
aas
aad
sub
cmp
shrb
xchg
testb
mov
add
mov
lods
xchg
xlat
mov
jp
mov
push
inc
push
sahf
int
imul
cli
and
lods
imul
rcrl
enter
pusha
mov
or
movsb
or
out
sub
xor
ret
pop
dec
xor
xchg
and
push
aaa
cmp
adc
xor
test
xchg
arpl
mov
dec
out
push
inc
xor
fisttpl
cltd
sbb
mov
mov
mov
shl
dec
pop
sbb
in
pop
jl
xchg
pop
inc
sub
xchg
or
pop
clc
pusha
rcll
mov
aas
push
pop
rcrl
in
loopne
sbb
lods
cmp
dec
lods
fnstsw
cmp
adc
xchg
cld
push
cmc
adc
pop
ret
lret
cli
pop
jae
or
clc
inc
adc
pop
add
adc
in
aam
mov
ss
and
lret
dec
into
mov
pop
test
loopne
push
iret
cmp
adc
std
and
ret
add
leave
or
aas
mov
push
jns
adc
push
inc
adc
xor
and
mov
mov
cwtl
add
fcoml
outsl
mov
imul
std
sahf
in
sub
mov
int3
stos
xor
or
xchg
push
int3
aam
repz
fldenv
inc
les
mov
adc
inc
xchg
adc
cmp
mov
inc
nop
add
fsubr
push
inc
jmp
dec
sahf
pop
adc
cmpsb
mov
mov
loop
xchg
iret
mov
lahf
mov
fcompl
adc
add
xor
movsl
push
cld
repnz
lahf
flds
mov
jg
lock
pop
imul
stos
inc
in
fs
ret
xchg
insl
inc
mov
dec
lret
mov
aas
dec
aad
adc
insb
push
sub
lds
cmpsl
movsl
and
jbe
sub
cltd
add
adc
or
xlat
push
xor
test
mov
push
lods
jo
jo
dec
jae
mov
notl
sub
add
adc
test
pop
dec
mov
inc
and
jmp
push
xlat
inc
and
dec
adc
aaa
lea
shrb
daa
sub
dec
dec
aam
test
pop
mov
bound
jp
testl
popa
lret
ss
mov
dec
xchg
aam
add
mov
rol
addr16
lods
jle
mov
test
mov
out
push
ficomps
xor
clc
push
or
cwtl
xchg
rcrl
rcll
dec
dec
mov
ja
mov
lret
jg
stos
ss
inc
pop
rcrl
ds
fmuls
fwait
xor
in
pop
inc
push
cltd
push
mov
rcrl
mov
andb
jge
test
arpl
dec
cmp
popf
cmpsb
out
sub
repz
sarl
dec
imul
inc
push
mov
fistps
or
jle
fstl
arpl
lods
scas
rcrb
leave
not
jno
lcall
cmp
push
ja
jmp
rcll
test
mov
clc
pop
mov
das
icebp
push
sbb
inc
add
ret
push
hlt
test
inc
inc
mulb
test
orb
shl
xchg
lea
pop
add
add
scas
daa
imul
pop
sbb
fsubr
push
push
daa
out
mov
xchg
cltd
mov
or
or
int3
mov
or
push
pop
fdivr
loopne
mov
sti
mov
clc
mov
popf
cld
cmp
jb
sub
scas
mov
das
rorb
fdivrs
mov
outsb
daa
sub
cwtl
popf
cmp
lcall
push
fdivrl
test
xor
cltd
fdivrs
rol
mov
fwait
popf
pusha
fmull
xor
je
lods
movsl
adc
mov
ja
and
pop
inc
pop
lahf
clc
xchg
cli
jg
pop
add
or
fiaddl
push
scas
sbb
xor
sub
mov
pop
ds
sbb
and
sub
imul
jl
pop
rcl
cld
daa
push
sub
pushl
sub
mov
and
push
xor
imul
mov
rcll
es
jle
fisttpl
aaa
sbb
xchg
and
leave
fbld
lret
push
sub
dec
adc
ds
jmp
call
lret
sbb
mov
push
add
mov
jns
pop
xor
test
pop
mov
inc
mov
xorb
pop
arpl
push
mov
jae,pn
js
push
movsl
dec
clc
ret
gs
jo
scas
mov
xchg
jl
pusha
jns
sahf
mov
jb
cmp
lods
cmp
fsubp
xchg
or
rcl
rorl
sti
in
test
rorl
xchg
mov
in
inc
shlb
mov
sub
ss
dec
movsl
pop
pop
xor
push
jnp
fsubr
pop
pop
pushf
jno,pn
add
or
stos
add
mov
mov
popa
xchg
shlb
jge
scas
add
pushf
jno
dec
fmuls
out
ret
xchg
loope
sbbb
cwtl
inc
pop
jo
inc
push
and
push
add
and
jmp
cmpsl
pop
inc
add
adc
xchg
push
mov
or
cmp
xchg
imul
inc
imul
cmpsb
inc
jno
jmp
dec
xorb
sub
add
out
push
pop
icebp
jo
inc
stos
bound
pop
outsl
ss
sub
in
std
or
pop
in
cmpsl
loop
or
jne
cwtl
inc
loope
aam
adc
push
ret
cs
inc
mov
roll
or
pop
adc
mov
adc
movsl
insl
mov
dec
in
loop
or
dec
xchg
test
lret
push
xor
xchg
cmp
sub
cmc
adc
lds
aas
ficomps
nop
and
aam
mov
data16
xor
je
clc
arpl
iret
subl
orl
jmp
test
xbegin
ljmp
aad
mov
jo
leave
jmp
lods
cmp
std
mov
aad
sbb
or
mov
mov
insb
aad
mov
sub
out
dec
cmp
bswap
loope
mov
push
bound
out
rolb
mov
fldl
jnp,pt
loopne
add
sbb
cmpsb
scas
out
push
cmp
sbb
xchg
adc
add
mov
mov
imul
lret
aam
je
sub
cmp
jecxz
push
jns
pop
hlt
push
xor
mov
outsb
psadbw
jo
sbb
sti
mov
into
aas
fs
pop
call
in
inc
and
lods
cld
out
stos
adc
cmp
lcall
adc
notb
and
stc
cmc
loop
imul
addr16
sbb
lret
fs
shll
lret
fdivrs
je
pop
daa
mov
cmp
cmpsb
imul
jns
jge
jno
xchg
mov
mov
loopne
pop
jns
adc
jno
inc
push
cwtl
rorb
sub
xlat
jne
jno
iret
mov
movsl
push
test
lods
popa
out
movsb
das
sbb
les
cld
adc
sbb
mov
push
std
cmp
in
cmp
or
and
lds
or
sbb
adc
add
mov
aas
adc
stc
es
jo
fsubrs
add
mov
repnz
call
sub
mov
push
push
dec
and
jge
pop
xor
out
jmp
pop
adc
jae
jge
jmp
dec
repz
fdiv
ret
hlt
cmc
and
int3
adc
in
push
sub
ja
es
adc
sahf
cltd
scas
push
out
push
inc
pop
xchg
pop
xor
into
jle
xchg
into
inc
jle
cmp
in
loopne
xor
xor
mov
jne
xor
jmp
cmc
push
lret
inc
arpl
push
pushf
push
mov
cmp
sub
sbb
xchg
lods
mov
jmp
fwait
ret
mov
hlt
jmp
sbb
fldlg2
push
inc
add
clc
fs
xor
mov
jns
mov
pop
jb
sub
adc
dec
adc
mov
xor
xor
lret
lcall
inc
jbe
adcl
std
sub
int3
add
add
cmpsl
outsl
mov
mov
aam
mov
testb
inc
cmc
xor
xorl
subl
leave
pop
out
into
add
push
test
mov
and
mov
in
push
xor
jo
lods
cmpsb
fbstp
mov
ss
ljmp
mov
or
xorb
es
lcall
hlt
loop
mov
xor
dec
pop
jno
jmp
loope
test
sbb
lcall
jno
fcoml
lcall
in
shrb
cmp
add
sbb
cmpb
mov
jne
fadds
sbb
shlb
xchg
insl
imul
test
inc
sbb
dec
jbe
add
jb
push
jns
scas
pop
push
mov
push
push
repnz
stos
insb
iret
int3
pop
mov
es
stos
jl
adcl
xchg
xor
pusha
psubb
xor
sbb
aas
movsl
aaa
subb
popa
insl
cmc
adc
loopne
shlb
aaa
negb
mov
out
mov
test
bnd
lret
mov
inc
xlat
cmp
push
lret
ja
inc
sti
push
sahf
out
faddl
xor
cmp
sbb
inc
pop
sbb
scas
ds
fdivl
adc
test
bound
pop
sahf
xlat
repz
pop
rcll
std
cmp
lock
sbb
aaa
jo
jbe
mov
xor
add
mov
pushf
jmp
shrb
cmp
clc
xor
icebp
fsubs
fsubl
test
loope
pop
aas
in
lahf
adc
int3
or
sti
insl
jbe
das
out
inc
loope
push
push
push
lea
adc
xchg
orl
add
stc
scas
sub
mov
out
fwait
andl
mov
clc
test
adc
lahf
ja
ret
pop
rol
inc
ret
imul
cmp
popf
insb
pop
pushf
loop
cmp
jno
or
fsubp
js
lods
or
vmovsd
adc
hlt
xor
sub
sahf
popf
dec
inc
inc
sub
dec
jmp
ffreep
mov
add
and
mov
popf
and
mov
dec
xchg
push
pop
jmp
cmp
test
jmp
filds
fstpt
mov
add
je
nop
mov
in
push
jne
arpl
jp
add
repz
fcoms
data16
mov
imul
jle
cmp
pop
js
or
xchg
jo
inc
in
xor
cmp
pop
pop
lea
subb
shrl
sti
inc
enter
push
push
test
gs
ljmp
mov
js
daa
mov
dec
pusha
and
pop
mov
jb
jecxz
lret
mov
adc
xor
mov
ja
mov
addr16
pop
stc
push
sbb
xchg
jae
test
ljmp
add
cmc
test
movsb
xor
daa
adc
movsl
and
out
cmp
xor
test
jmp
inc
in
jne
cmp
sbb
mov
addr16
test
fcmovnbe
dec
aaa
lahf
inc
mov
push
shll
jecxz
lock
xor
cwtl
xlat
stc
sbb
mov
dec
jns
dec
mov
incb
xchg
scas
xchg
mov
lret
into
push
mov
pop
mov
mov
jo
inc
sub
push
imull
jnp
adc
mov
popf
dec
lods
xchg
pop
push
inc
add
test
cmc
jno
dec
mov
adc
mov
cwtl
mov
mov
das
push
sbb
cli
mov
pop
imul
xor
push
push
iret
sbb
repz
push
popf
jmp
jns
jbe
adc
jnp
stos
lret
xchg
dec
xor
jecxz
lcall
shrb
cmp
clc
subb
mov
cli
xor
xchg
cltd
xor
mov
movsb
pop
cmp
int
or
cmp
adc
ds
shr
movl
jge
dec
iret
loope
jecxz
xor
push
sar
lret
xchg
add
stos
push
pop
shr
hlt
test
nop
fists
imul
push
inc
icebp
test
add
pop
out
rorl
xchg
mov
adc
sbb
lds
dec
cmc
mov
or
das
repnz
lds
mov
mov
cltd
std
push
mov
add
jbe
adc
xchg
rcll
inc
sub
mov
pop
inc
pop
pop
insb
or
add
cwtl
sub
sbb
push
sub
add
pusha
jne
adc
xchg
and
leave
icebp
push
lret
xchg
cltd
shr
inc
cmp
push
mov
imul
test
icebp
gs
rorl
enter
jo
stc
adc
mov
ficompl
jo
out
fucom
daa
scas
mov
nop
push
or
or
adc
jbe
jo
jmp
add
adc
popa
mov
jne
mov
or
jle
sbb
or
lea
add
cmp
or
xchg
jmp
sbb
or
daa
arpl
xor
ljmp
and
push
pop
addr16
sub
xor
or
pop
xchg
xor
lahf
stc
xlat
add
dec
xchg
testb
and
sbb
jl
cs
notb
arpl
push
jb
mov
adc
dec
ret
inc
sbb
out
push
frstor
arpl
pushf
mov
cmc
cli
cmc
push
enter
roll
out
in
and
inc
sbb
imul
mov
idiv
mov
mov
xor
inc
out
call
mov
adc
in
out
mov
fidivrs
cmpsb
push
jle
outsl
jo
mov
add
notb
add
mov
mov
push
lods
add
cmp
sub
cmpsb
and
mov
add
and
cmc
mov
out
icebp
into
xor
ret
or
or
insl
or
inc
inc
push
sbb
subl
lds
adc
data16
mov
mov
or
faddl
mov
mov
xchg
and
call
jae
pop
mov
push
and
and
outsl
cmp
inc
bnd
inc
cli
fidivl
in
sti
popa
and
shll
je
xor
or
adc
inc
adc
dec
movsl
bound
or
outsl
sbb
test
mov
int
shrl
and
mov
jle
dec
mov
xor
je
mov
arpl
sub
call
adc
or
inc
lret
out
xchg
retw
and
out
jg
xor
sub
fidivrs
ret
mov
andl
enter
es
sub
xor
ja
jg
mov
cmp
adc
ss
pop
lods
cmp
les
cmp
lcall
sub
xchg
xchg
cltd
fnstcw
lret
clc
xor
cmp
fildl
repz
das
dec
scas
gs
xchg
pop
dec
sbb
outsb
les
mov
xchg
xor
lods
add
mov
push
dec
or
loopne
and
in
les
inc
or
mov
add
insl
or
jns
mov
and
rep
jmp
imul
cld
rorl
pop
inc
imul
addb
icebp
adc
or
push
data16
mov
mov
jmp
adc
add
repz
sahf
fcmovnu
aad
into
fldcw
nop
mov
lahf
leave
cltd
adc
inc
push
cltd
sub
andl
jle
scas
mov
cmpsb
lahf
dec
inc
in
or
xor
popf
sahf
pop
addr16
inc
sahf
and
aaa
insl
test
mov
dec
dec
add
add
jb
push
sbb
jp
push
xchg
outsl
mov
pushf
xchg
arpl
dec
nop
mov
push
xchg
repz
fnstenv
xchg
sub
and
lds
xor
adc
out
out
add
fdivrl
adc
mov
shrb
mov
sbb
fdivrs
lds
subb
dec
sahf
adc
lcall
mov
enter
fnstenv
lods
fmuls
pop
aad
push
cwtl
ds
xchg
sbb
mov
sbb
sbb
std
xchg
jp
daa
inc
lahf
push
pop
sbb
jmp
xchg
nop
sub
movsb
push
bound
xor
into
mov
insb
cmp
pop
outsb
in
lock
xchg
mov
popf
cltd
inc
call
pop
push
repz
mov
xchg
add
lods
and
add
scas
insl
lret
jge
adc
movsb
mov
cmp
inc
add
sbb
es
xchg
sub
out
inc
jb
movsl
subl
daa
andb
outsl
pop
pusha
repz
int3
mov
inc
xchg
push
inc
jl
push
data16
je
scas
outsb
sbb
mov
xchg
mov
rorb
cs
ret
and
push
ds
jne
mov
leave
into
cld
clc
xchg
dec
popf
movsb
out
lcall
pushf
add
dec
inc
dec
sbb
mov
or
jmp
pop
cmp
lret
mov
and
notl
sub
jns
out
in
pop
and
and
addr16
mov
cmc
imul
cmc
fwait
shll
xor
sub
mov
or
add
or
add
push
xor
scas
mov
jle
ja
stos
xchg
jb
mov
and
mov
dec
push
scas
negb
or
loop
stc
shlb
jp
sub
imul
dec
inc
aad
dec
push
int3
jmp
inc
inc
push
cmp
subb
imul
iret
data16
cmp
cmpsb
dec
enter
imul
mov
out
daa
bound
sahf
and
jl
lock
jle
mov
pop
xchg
mov
jnp
inc
sbb
pop
divl
xchg
inc
pop
cwtl
dec
out
addr16
mov
mov
mov
push
push
adc
push
mov
dec
xor
sbb
iret
in
lods
mov
adc
xchg
push
dec
sbb
push
insb
rorb
fsubrp
cmp
or
repz
and
test
jne
and
lahf
jne
add
cmpsl
or
xchg
and
sub
pop
adc
dec
add
aaa
ret
test
insb
xchg
stc
js
mov
pusha
dec
cwtl
add
mov
push
xor
je
dec
mov
in
je
fiadds
adc
sbb
jge
push
ds
adc
mov
jmp
inc
out
mov
imul
pop
xchg
or
jo
add
cwtl
mov
loopne
pop
std
sbb
and
cmpsl
jnp
scas
aaa
cs
test
push
mov
outsl
fbstp
adc
or
push
cs
dec
xchg
mov
mov
rorl
pop
hlt
adc
adc
fadds
into
mov
pop
lcall
add
inc
pop
sbb
and
ss
in
push
mov
sbb
int
adc
push
testb
ljmp
cwtl
jecxz
jp
sub
cmc
mov
insb
fcoml
mov
stos
xor
jl
sbb
movzbl
rorb
sahf
aaa
gs
shrb
mov
and
data16
cs
in
rorl
inc
or
outsb
push
sbb
xchg
sub
insb
je
test
mov
sbb
out
jl
out
jne
inc
faddp
adc
les
xchg
jl
pop
enter
inc
scas
xor
mov
dec
ds
mov
aad
cmp
lret
jo
mov
mov
sub
pmullw
push
loope
out
jg
lods
cmpsb
inc
push
js
sahf
repz
das
das
and
jp
mov
inc
lcall
ret
movsb
inc
mov
mov
push
sbb
cs
ja
xor
xor
sbb
inc
bound
cwtl
push
pop
lea
das
icebp
and
ficoml
fbld
ljmp
das
in
sub
mov
mov
or
dec
mov
orl
and
xchg
enter
aam
pop
negb
mov
mov
fs
add
adc
lea
cmc
test
mov
stos
mov
cmpsb
sub
xor
sbb
jb
test
data16
pop
test
fists
das
jnp
test
outsl
push
fcompl
mov
dec
jmp
push
inc
nop
push
dec
pusha
les
movsb
mov
pop
or
rclb
dec
jno
sbb
sbb
cmp
lcall
pushf
add
fstpl
cmpsb
ss
jp
jge
std
mov
repnz
icebp
add
shll
push
idiv
cmpsl
sbb
movsb
pop
xlat
xchg
jbe
test
clc
lret
xchg
xor
hlt
hlt
shl
jmp
ss
iret
xchg
cmp
jle
repz
sub
cmpsb
xchg
dec
jmp
mov
inc
jnp
aas
es
xlat
inc
test
dec
pop
and
fistpll
jge
loop
repz
pop
lret
fidivs
lret
aad
xchg
pop
scas
xchg
xor
pop
dec
xor
addr16
sbb
mov
sub
jo
movsb
xor
lret
jle
xchg
fdivrs
mov
nop
imul
inc
sbb
pop
push
xor
fnstcw
inc
lods
sarl
inc
rorb
cli
idivb
jae
std
fisttps
mov
ds
sbb
imul
data16
out
or
xchg
push
cmp
aaa
lods
push
les
mov
repnz
mov
sarb
pop
sub
adcb
andb
mov
push
popa
xchg
pushl
inc
xor
mov
cs
call
add
or
sbb
or
negb
leave
inc
cli
addr16
pop
mov
dec
cwtl
jno
insl
inc
in
sub
or
iret
dec
mov
cmp
xlat
enter
inc
lea
jle
pop
ja
push
jno
jnp
cltd
roll
mov
pop
scas
pop
mov
mov
cmp
rclb
clc
into
sbb
or
xor
outsl
in
mov
ja
popf
push
mov
lea
push
mov
inc
inc
push
mov
mov
int3
adcl
mov
into
js
push
js
cmpsb
lods
adc
pop
mov
fdivs
cmp
push
adc
push
cmp
pop
loope
testb
xchg
and
in
lcall
or
test
jae
lea
insb
lock
adc
or
jecxz
inc
pop
mov
aad
xchg
cli
out
psubq
mov
dec
shrl
clc
rcr
sbb
jle
pop
dec
cli
xorb
xlat
pop
mov
inc
insl
adc
imul
mov
fcoml
mov
xor
sub
sbb
pop
js
push
test
xchg
sub
loop
icebp
pop
lods
jb
mov
rolb
sbb
sahf
dec
fsubp
lea
outsb
cmc
sahf
pop
sbb
hlt
inc
jbe
mov
dec
leave
leave
outsb
jo
test
aas
clc
loope
fwait
jge
mov
out
jo
xor
ds
test
push
mov
mov
roll
subb
pusha
or
push
out
mov
sub
push
out
mov
fidivrs
pop
sub
push
mov
jl
mov
adc
xor
aad
sbbl
or
sahf
jmp
cmp
dec
into
dec
adc
int
fmull
sub
pop
into
je
adc
inc
mov
xor
loop
xchg
out
mov
out
pop
xor
or
jp
pushf
pop
mov
sahf
loopne
mov
push
pop
inc
pop
mov
push
jo
call
rcrl
loopne
jno
adc
mov
cmp
aas
mov
or
cmp
mov
jge
mov
loopne
xor
mov
in
add
dec
sub
mov
sbb
inc
hlt
mov
mov
cmpsb
jp
cmp
and
gs
adc
mov
or
icebp
arpl
rcll
add
mov
adc
mov
xor
lds
or
push
sti
lds
cld
roll
adc
push
leave
popf
and
xor
iret
and
xchg
pop
sbb
sbb
imul
outsb
xor
lret
ss
xchg
pop
push
mov
test
pop
pop
xchg
in
cmp
loope
in
arpl
and
outsb
sub
push
ficoms
xchg
loop
loopne
xor
xor
pop
push
arpl
or
sub
push
adc
jne
or
mov
xor
ret
nop
cli
out
fsubr
out
mov
sbb
imul
inc
add
pop
outsb
mov
dec
push
sub
or
pop
add
je
and
loopne
lock
hlt
pop
jge
stmxcsr
lret
pop
int
jle
aam
pusha
xor
fimull
xchg
mov
aad
xor
jo
push
jecxz
fistpl
mov
faddl
inc
mov
lcall
dec
nop
mov
mov
xor
fcoml
mov
fildll
jecxz
gs
cmc
ret
roll
mov
shl
ja
shrb
dec
shrb
dec
fs
jmp
xchg
mov
shl
call
rorb
fsubp
dec
leave
mov
mov
clc
xchg
notl
inc
inc
lds
inc
dec
lcall
adc
adc
sbb
imul
xchg
fs
aaa
std
mov
or
pop
out
add
sbb
xor
ds
xchg
pusha
mov
push
ljmp
jnp
jnp
xchg
lcall
cmp
lcall
xchg
sub
inc
hlt
dec
mov
cwtl
decb
mov
xchg
in
popa
mov
roll
adc
pop
pop
outsb
rcrb
inc
mov
jb
sub
jle
popf
and
and
add
push
pop
loopne
inc
dec
push
movsb
mov
outsb
mov
ficoms
ret
xchg
pop
sub
cs
lahf
xor
out
es
stc
jge
sbb
loopne
push
push
and
mov
add
jecxz
pop
jns
mov
pop
scas
fldenv
sbb
mov
in
sbb
push
setle
call
ret
cmc
dec
sbb
rep
lds
stos
out
xchg
inc
xchg
icebp
dec
outsl
ja
mov
or
xor
imul
mov
dec
mov
pop
mov
mov
in
sub
pushf
mov
call
xchg
insb
pop
aad
inc
push
inc
dec
dec
into
dec
out
ret
shl
jno
cli
loopne
mov
imul
push
pop
ret
lcall
inc
jns
ret
mov
sahf
mov
es
roll
gs
fs
jmp
pop
push
xlat
imul
mov
loope
mov
loopne
vorps
mov
pop
sbb
cmpsl
stos
out
mov
arpl
add
mov
mov
movsl
mov
sbb
mov
xor
dec
ljmp
adc
jae
jle
sub
pop
enter
or
sub
mov
es
push
out
rcrl
aam
push
int
cmpsl
hlt
lock
in
aaa
and
sbb
stos
push
xor
in
sub
xchg
js
inc
mov
mov
addl
ret
mov
pop
das
idivb
sbbl
mov
inc
ja
mov
lret
leave
xchg
xlat
xchg
dec
gs
lret
rorl
movsb
dec
pop
adc
inc
push
jns
cltd
or
xchg
xor
pop
or
mov
fiadds
subl
mov
xor
loopne
loopne
enter
xchg
in
xchg
mov
lods
pop
mov
mov
adc
cmp
pop
mov
rcr
in
push
jae
insb
pop
pop
out
lahf
mov
sbb
sbb
and
inc
inc
mov
leave
stos
or
sbb
xor
orl
and
or
shll
imul
sbb
or
fisttpll
daa
sub
jo
dec
jns
sti
jg
inc
jno
pop
jmp
pop
pushf
lcall
out
xor
jmp
neg
sbb
mov
xor
pop
sbb
sbb
mov
and
adc
add
int
loope
inc
loopne
fldl
adc
xchg
cmp
or
aad
mov
mov
mov
mov
mov
fsubs
sub
adc
dec
es
mov
xchg
icebp
mov
cmp
mov
add
sarl
push
push
sub
add
push
sti
pop
jnp
aaa
scas
mov
enter
fsts
jle
cltd
xchg
mov
dec
ds
xor
xchg
popa
int
mov
jnp
insl
cmp
jle
sub
inc
mov
aad
in
xchg
fnstenv
xchg
jg
mov
sub
in
xchg
mov
pop
div
and
sub
jae
jmp
insl
leave
jmp
test
hlt
std
dec
or
sbb
xor
mov
dec
sub
and
xlat
fsubs
scas
mov
rcll
out
enter
out
add
cmp
out
sub
mov
pop
ret
xchg
push
call
sub
pop
pop
dec
out
lods
in
xchg
je
lds
leave
test
pusha
mov
nop
mov
fmull
call
scas
fadd
es
arpl
lods
jb
loope
jle
daa
mov
ja
mov
cmpsb
mov
icebp
dec
and
sbbb
mov
mov
das
ja
enter
dec
inc
mov
lds
popl
nop
leave
ret
push
lods
adc
addr16
dec
mov
inc
repz
cmp
scas
mov
das
and
mov
jecxz
and
rcrl
inc
xlat
outsb
mov
pop
movl
pop
int3
or
outsl
or
xchg
mov
jg
rcrl
push
push
cmp
xor
shlb
bound
arpl
out
xchg
sub
mov
mull
or
jmp
decb
inc
out
lret
aam
cld
pop
andps
push
roll
gs
mov
fildll
pop
or
jns
add
arpl
mov
adc
dec
lea
mov
and
xorl
pop
nop
pop
cli
ja
call
aam
nop
cmpl
jge
xchg
cmp
aas
in
out
xor
sbb
pop
stc
adc
leave
lods
mov
mov
jo
xchg
in
lods
sbb
aaa
push
push
icebp
jle
cmpsl
xchg
into
jnp
sub
imul
dec
push
add
fldcw
xor
das
sbb
jecxz
xchg
lea
xchg
lea
fsubs
sahf
call
mov
loope
adc
insl
mov
insl
cwtl
xlat
ja
and
add
cmpsl
adc
sub
shl
mov
mov
lds
cmpsb
adc
dec
mov
sbb
mov
lods
fmul
or
insb
mov
cld
push
xchg
xchg
pop
inc
aas
in
loopne
shl
or
inc
push
or
pop
inc
jp
stc
mov
jbe
bound
sbb
clc
in
add
add
clc
jge
popa
adc
movsb
adc
mov
push
pop
insb
cmc
jbe
push
stc
inc
adc
es
loopne
imul
add
xor
adc
je
fwait
lods
add
ss
or
xlat
outsl
add
cli
pop
jo
pop
pop
fstl
jmp
lds
movsl
fisubrl
pop
push
or
ja
mov
sub
nop
ja
lods
mov
jae
int
sahf
cmpsb
imul
out
mov
cmp
mov
shrb
xor
fnstenv
sbb
mov
mov
repnz
pop
xchg
sti
addl
mov
pop
add
fdivr
call
and
adc
sub
fnstcw
cmc
test
lods
mov
popl
mov
iret
lret
test
or
ds
shll
jmp
xchg
and
xchg
dec
sbb
sti
sbb
sarl
pop
mov
cmp
add
fsub
mov
mov
lea
sub
dec
mov
ljmp
mov
pop
lds
xor
enter
and
jg
fdivl
or
fstpl
mov
test
push
gs
je
loope
pop
xor
repnz
mov
and
sbb
gs
sbb
out
sbbl
pop
pop
enter
icebp
jmp
cmp
sarb
add
insb
mov
imul
mov
fwait
push
pop
shrl
mov
add
dec
dec
mov
addr16
ret
sbb
cmpb
rcrl
rcll
push
arpl
cli
test
iret
je
hlt
cmc
jle
mov
icebp
xchg
push
mov
test
dec
add
cmp
int
fsubl
jb
jne
ret
cmp
adc
orl
cmpl
jne
add
std
and
jbe
cmpl
and
inc
pusha
pop
inc
dec
loope
test
xchg
jae
das
js
repnz
jle
mov
mov
ret
xchg
test
mov
rcr
sbb
das
mov
push
or
xchg
mov
mov
out
sub
xchg
fnstcw
cmp
mov
in
mov
mov
clc
pop
pop
push
push
or
loope
jmp
pop
mov
scas
fisubs
jnp
test
xchg
sbb
xchg
xchg
jno
imul
xor
xor
mov
in
jbe
sarb
mov
int
pusha
jo
jle
sbb
dec
std
mov
mov
lcall
pop
xor
mov
gs
in
mov
cltd
mov
es
testl
sub
sub
cltd
xchg
dec
sub
neg
pushf
inc
adc
cltd
std
add
pop
mov
cltd
les
sub
popf
jne
ret
or
push
xor
enter
xor
in
cmp
cli
fistpll
inc
cmp
orb
fnstenv
inc
into
aam
push
and
mov
jmp
sbb
pop
out
fs
fs
lahf
add
je
xor
adc
push
outsb
and
dec
in
mov
int3
add
repnz
aas
sub
into
dec
in
xchg
popf
cmc
cmp
jge
fdiv
and
pop
dec
add
loope
adc
je
sti
mov
aaa
cltd
lret
sub
adc
xor
xor
aas
aad
xlat
iret
xor
test
iret
sbb
mov
lret
mov
jg
out
scas
push
lock
std
std
sbb
repnz
jae
dec
inc
mov
xor
sbb
out
mov
fcomps
je
xor
js
lock
xor
push
pop
pop
mov
mov
pop
es
sbb
sub
pop
out
mov
cmp
inc
aam
fbstp
jmp
inc
aaa
inc
pusha
sub
or
iret
mov
jae
xchg
or
fst
jg
addr16
xchg
adc
mov
dec
push
lret
int3
adc
jne
imulb
sbb
stos
push
sahf
mov
xchg
popa
inc
outsl
loope
scas
std
std
inc
cld
es
movsl
sub
movsl
xchg
fisubrl
into
dec
out
incb
jb
or
stos
jecxz
data16
jne
and
jo
adc
xor
xchg
push
pop
pop
push
subb
jp
neg
insl
jle
scas
cmp
mov
out
cmpsl
addl
cli
sub
outsb
push
pop
and
cmp
mov
add
daa
mov
mov
bnd
xchg
cmc
sarb
jnp
sub
inc
dec
scas
pop
movsl
das
lock
and
pusha
mov
jnp
negb
xchg
inc
xor
aad
je
fwait
ja
push
repnz
push
and
lahf
clc
out
sbb
dec
scas
mov
ret
out
stos
xlat
scas
cmp
jge
jecxz
sbb
mov
adc
add
adc
idivb
add
shr
pop
cmp
dec
or
sub
add
imul
lods
jae
std
lds
call
popf
push
sbbb
adc
mov
test
or
ja
dec
xchg
mov
sub
mov
adcl
or
mov
or
imul
sti
pusha
pop
sbb
and
ljmp
push
jb
dec
clc
pop
mov
pop
jmp
cmp
push
pop
js
and
cmc
mov
dec
push
cli
mov
aaa
sti
or
jecxz
xor
sbb
fsubrs
xchg
cmp
jno
and
pop
add
icebp
push
call
sub
leave
mov
and
enter
test
lcall
xlat
lea
mov
jb
enter
test
movsb
div
mov
inc
out
ret
out
cmp
adc
or
jge
sub
mov
mov
xchg
dec
push
xchg
repz
inc
jae
adc
daa
pop
xchg
sub
mov
sbb
cmp
cmp
pop
cmpsl
jmp
jle
aad
aam
mov
leave
in
nop
xorb
sub
cmc
cmp
rcll
daa
mov
xor
or
sub
pop
pop
aaa
add
pusha
test
push
leave
lahf
push
ja
repz
xchg
js
xor
mov
lock
mov
push
jno
add
dec
sub
das
pop
pop
divl
inc
or
and
pop
lea
leave
fcompl
or
cltd
leave
mov
sti
andnps
xchg
jmp
dec
push
dec
enter
ja
lahf
xchg
ja
shlb
xchg
and
xor
dec
cld
inc
call
fstpt
xchg
push
hlt
mov
gs
int
or
dec
inc
or
sub
inc
lods
repnz
cmpsl
in
push
in
int
xor
cwtl
jg
push
movsb
sbb
xchg
pop
sahf
negl
shlb
cmp
in
int
imul
out
jne
sar
mov
pusha
jb
mov
je
xchg
xchg
inc
jecxz
xchg
outsl
pusha
pop
pushf
pop
aam
mov
push
js
inc
push
out
mov
jbe
test
or
lds
pop
mov
in
inc
mov
gs
pop
lods
in
sti
mov
push
add
push
call
out
ljmp
outsl
mov
lret
inc
dec
push
xchg
adc
lret
ror
shlb
in
aad
jmp
or
cmp
mov
inc
xor
popa
outsl
in
into
ljmp
adc
pop
jno
cwtl
fmul
inc
movsb
out
das
int
fidivs
xbegin
jns
aam
inc
xor
negb
mov
sub
fiaddl
adc
push
push
jl
rol
out
xor
sub
cs
jb
test
cmp
js
push
sbb
jnp
mov
sahf
mov
aam
repnz
ret
and
xchg
inc
in
nop
mov
stc
dec
inc
cmpsb
test
mov
sub
cld
sub
cs
pop
and
xchg
xchg
mov
inc
les
xor
or
or
mov
adcb
int3
push
lcall
dec
repz
cmpl
shr
bound
add
std
jecxz
inc
fsubr
fisttpl
mov
pop
shrl
rclb
shlb
fadds
xchg
cli
cld
xlat
and
stc
imul
outsl
ljmp
mov
test
dec
mov
pop
cmpsl
outsw
jnp
adc
test
push
xor
adc
repz
xor
jl
sti
and
lock
stc
pusha
dec
mov
jp
movsb
out
mov
frstor
fwait
call
adc
xor
inc
sbb
jge
mov
mov
or
testl
or
sbb
test
or
dec
mov
pushf
pop
pop
in
pop
fstps
cmpsl
outsl
xchg
call
stos
bound
xor
ds
inc
inc
das
add
xchg
subl
stc
jbe
insl
lods
jne
jno
imul
pop
movsb
jne
mov
out
test
lock
add
mov
popf
adc
insb
mov
pmullw
rcll
xchg
sbbb
lods
popf
sub
clc
push
pop
stos
mov
int3
push
mov
pop
incb
and
xchg
add
into
dec
test
mov
out
iret
insl
jmp
orl
sub
jp
movsl
int
orb
bound
rcll
push
xchg
inc
ja
adc
cwtl
mov
inc
movsl
cmpsl
sbb
sbb
cs
hlt
xchg
fisttpll
fildll
mov
or
jae,pn
in
pop
pop
cltd
add
sub
repz
jnp
jl
out
add
cld
loopne
xor
popa
jno
xlat
fs
lret
lods
adc
mov
sub
xor
push
iret
adc
in
or
loope
rorb
mov
mov
movsb
and
dec
inc
rcr
test
add
in
xchg
arpl
pop
fwait
sbb
jno
cmp
ret
sub
push
repnz
stos
stos
adc
mov
cmc
jnp
sub
sbb
dec
test
jns
mov
outsb
adcb
sti
cli
and
sub
aam
inc
data16
inc
iret
sar
out
jno
aam
pusha
pop
cmp
mov
cmpsb
cmp
mov
lcall
out
ficomps
mov
ds
leave
jmp
jecxz
les
add
mov
mov
lcall
jno
sbb
jle
scas
daa
mov
xchg
cmp
cli
data16
lcall
rcl
xor
mov
fildll
or
push
mov
js
icebp
add
pushf
jle
rorl
dec
jnp
pop
mov
sti
rolb
adc
mov
or
pop
add
into
jb
lods
add
pusha
push
sbb
pop
push
push
lods
push
add
insb
jge
xorl
xchg
filds
pop
test
mov
in
or
jp
push
or
sbb
imul
dec
rcrb
sbb
pop
pusha
sahf
leave
jp
fs
cmp
push
xchg
cmpsl
jo
call
push
aaa
out
into
out
xchg
and
in
data16
out
sub
inc
pop
sbb
imul
outsl
orl
dec
ret
out
or
xor
in
std
adc
lock
cmp
nop
out
into
mov
jbe
lret
outsb
or
pop
adc
cwtl
cmpb
mov
mov
or
shlb
mov
push
xor
repnz
subl
les
rclb
insb
mov
outsl
outsb
lahf
stc
popl
arpl
int3
loopne
jne
push
push
jno
mov
adc
or
jnp
sub
incl
leave
jmp
mov
or
fisttps
in
stos
xchg
adc
push
ficoms
mov
cmpsl
cs
and
addr16
pop
enter
xchg
add
fsub
adc
push
and
dec
lods
ret
push
xchg
adc
pushf
mov
add
mov
xchg
vaddsubps
test
popa
cmp
xchg
out
fisttps
add
out
rolb
int3
push
push
mov
rcll
mull
lret
dec
pushf
fdivrs
ja
sbb
test
mov
fsubs
sub
xchg
sbb
into
cmpl
pop
xchg
lods
mov
bound
test
mov
aam
fmull
adc
jge
xor
shr
ret
fldl
xor
or
leave
fwait
sbb
mov
mov
loope
rcll
xchg
idivb
divl
aam
push
inc
xchg
pop
mov
in
mov
je,pt
aad
loop
in
xor
push
aaa
outsb
dec
inc
inc
cmp
add
movsb
mov
jecxz
dec
push
jg
insb
aad
orl
mov
adc
xor
data16
xchg
dec
and
cld
jge
cmc
gs
inc
or
lods
shr
or
xchg
call
mov
call
mov
addb
pop
leave
stos
inc
push
es
mov
test
push
jmp
sbb
jo
fxch
loopne
lds
aas
lods
sbb
xor
sbb
add
dec
std
add
testb
add
sbb
jg
inc
leave
pop
xor
xchg
hlt
insl
push
or
pop
push
enter
or
push
xchg
sbbl
lret
push
lea
mov
out
jge
outsl
inc
or
sbb
out
popa
test
inc
mov
mov
js
cmpsb
fists
or
jl
dec
sbb
pusha
mov
or
adc
pop
xchg
or
inc
repz
adc
xchg
fmull
sbb
xor
out
outsb
sti
xor
arpl
cmpsb
jno
test
xor
push
and
js
jl
mov
xor
mov
out
in
cmpsb
inc
push
ljmp
fmull
les
icebp
jl
nop
pop
lods
push
fcmovb
in
inc
xor
ja
add
dec
or
and
push
mov
push
outsl
mov
lea
rorl
cs
sbb
loopne
stc
outsb
adc
js
test
stos
add
in
les
stc
xor
loope
adc
sub
jmp
push
pop
in
iret
xchg
dec
xor
hlt
js
subb
sbb
mov
xor
in
pop
xchg
sbb
sar
adc
mov
xchg
push
lahf
imul
fildl
xchg
mov
cmpsb
cld
sbb
rolb
lods
push
in
cmp
pop
fmul
push
cld
adc
lods
cs
dec
cmp
out
popf
scas
cmp
sub
test
and
stos
inc
xlat
pop
sarb
inc
clc
mov
push
cli
dec
call
xor
test
bswap
ror
fdivrl
add
mov
sub
sub
mov
adc
mov
insb
push
push
inc
adc
jmp
dec
sbb
push
adc
and
int3
icebp
lret
xor
hlt
out
push
lret
icebp
push
aam
sub
movsb
lretw
dec
les
pop
or
add
mov
cmpsb
test
enter
xlat
gs
bswap
xchg
push
jns
pop
popf
andb
ss
shll
xlat
mov
cli
subb
mov
movl
cmc
cmc
adc
push
mov
jno
xor
add
jo
pop
push
mov
add
jo
push
xor
out
stc
xchg
aam
mov
rorl
xchg
mov
inc
or
bound
lahf
jg
dec
in
add
cltd
xchg
push
testb
call
imul
mov
outsl
fimull
cwtl
ret
adc
push
icebp
inc
mov
lods
lods
add
add
add
aas
cli
dec
imul
pop
imull
and
pop
test
mov
out
out
jno
mov
push
lods
insb
mov
pop
mov
mov
dec
lods
es
repnz
inc
popf
scas
push
mov
and
xor
scas
xchg
pop
mov
or
lock
add
daa
leave
fisubl
fcomps
jmp
push
dec
or
inc
pop
mov
lods
aam
inc
sbb
jno
arpl
fcmovbe
and
inc
push
lods
adc
sbb
bound
mov
cmpb
pop
aas
in
sbb
push
pop
add
dec
mov
cwtl
mov
push
call
pop
sub
test
test
jl
pop
xchg
inc
in
in
sub
aad
mov
aas
inc
repz
mov
in
jb
fs
mov
push
pop
inc
ds
cmp
xchg
dec
scas
push
inc
leave
out
cmc
test
ret
mov
push
mov
and
and
inc
imul
sub
push
in
fsubrl
ficoml
lret
inc
push
or
or
ljmp
push
cwtl
and
or
fs
iret
bound
iret
cmp
test
xor
jge
test
andb
sti
mov
cwtl
ficompl
jae
movsb
cmp
pop
jnp
adc
inc
ret
xchg
and
add
add
int
and
repz
mov
loopne
lahf
adc
lock
fisubs
push
or
sub
push
push
push
sub
fwait
insl
push
ret
pop
cmc
xor
inc
lahf
dec
mov
inc
sbb
xor
mov
sub
in
jle
ja
in
pop
fistl
test
movsb
add
mov
iret
test
sbb
cltd
pop
mov
les
loope
int
mov
movsb
popa
or
pop
lret
in
add
jbe
daa
inc
xchg
mov
adc
arpl
nop
or
xchg
or
xor
arpl
das
adc
js
fidivrl
rcl
inc
and
jne
push
pop
subl
in
xor
leave
shll
xor
mov
xchg
mull
stos
adc
ret
push
ljmp
insb
repnz
stc
pop
int3
imul
jbe
jmp
pop
mov
add
outsb
scas
dec
roll
daa
add
out
sbb
imul
fildll
jle
pop
inc
shl
testb
mov
pop
rolb
mov
int3
stos
inc
add
sub
hlt
add
dec
xorb
mov
loopne
dec
pop
imul
pushf
scas
mov
or
rcrl
insb
ss
add
pop
mov
sub
mov
push
mov
cmpsb
push
or
xchg
inc
lods
fstpt
cmpsl
dec
add
mov
sub
out
mov
adc
in
mov
fbstp
mov
mov
or
xor
cli
and
pop
sbb
push
add
aad
pop
das
sbb
insl
add
xchg
pop
push
jb
add
and
in
into
cltd
and
jnp
push
push
stos
push
xor
jb
jb
icebp
or
int
sti
hlt
dec
imul
daa
xor
mov
out
add
or
cmp
mov
mov
fistpl
bound
pusha
insl
cs
out
add
mov
sbb
pop
test
fwait
das
jge
stos
cltd
subb
xor
and
inc
aas
pop
lock
imul
bound
divl
push
and
push
or
jl
add
sbb
jecxz
mov
jmp
pop
leave
sbb
or
cwtl
mulb
or
inc
imul
sbb
sbb
outsb
sbb
nop
pop
jbe
push
fstl
mov
cmc
mov
and
mov
es
dec
iret
out
mov
dec
inc
and
flds
fists
mov
sub
mov
in
sahf
sti
lret
dec
into
cmpsl
sub
ds
mov
aam
mov
xor
push
dec
lret
out
imul
nop
cli
or
sbb
loop
iret
out
rcrb
jle
popa
aad
rolb
test
inc
cmp
movsl
sbb
xor
adc
movsl
call
in
inc
jl
fs
subb
ja
jbe
sti
or
loope
daa
fs
iret
cmp
outsb
subl
shl
mov
sub
cmpsl
adc
jb
add
in
jno
stos
mov
lods
repnz
jno
ss
insb
xor
into
sarb
lea
cltd
cmp
daa
shlb
stos
stos
or
jle
mov
pop
roll
jnp
dec
lret
xchg
xor
xor
sub
je
into
jle
and
pop
divl
mov
pop
pop
dec
test
jle
push
gs
rol
repz
mov
test
pop
sub
sbb
xchg
repnz
popf
aam
cmc
pop
imul
test
sub
sub
subb
mov
pusha
outsb
jl
inc
push
ja
jae
and
cmpsb
bound
pop
push
mov
push
addr16
cmp
leave
fisttpll
ljmp
dec
pop
ficoms
iret
movsl
sub
fldt
or
mov
sub
jp
nop
cmp
sub
fimuls
jbe
lods
loope
out
outsb
sahf
sub
idivl
jno
and
cmp
and
push
sarb
js
scas
push
rcrl
fimuls
sub
mov
loopne
shll
push
fcomps
je
pop
sbb
fadd
cs
repnz
pushf
arpl
xchg
and
and
and
mov
adc
cmc
popa
gs
sbb
xor
pop
sub
fidivs
pusha
xchg
sbb
pushf
cwtl
mov
sbb
fwait
mov
cmc
lea
inc
xchg
adc
int
lret
sbb
xorl
insl
popf
cltd
imulb
adc
rcrl
imul
ja
xor
les
movsl
push
inc
jnp
cmp
test
xchg
int
or
xchg
xor
jp
sbb
insl
fadds
push
adc
fistps
inc
leave
out
sub
add
clc
icebp
mov
shrb
pop
outsb
gs
stc
dec
sbb
out
add
or
lods
lea
fstl
das
mov
sbb
mov
pop
in
xchg
pop
enter
adc
mov
mov
xchg
xor
jb
out
out
loopne
subb
mov
rolb
cli
add
cli
sbb
mov
ja
jl
fsin
imul
test
push
jg
lret
cmp
push
sub
lahf
sbb
pop
push
ja
clc
push
rolb
lret
mov
inc
std
rcr
push
and
pop
push
lret
dec
leave
ljmp
pop
rorb
rcrb
push
push
gs
outsl
sbb
test
push
fcmovnb
aas
adc
sbb
sar
aam
out
sbb
sub
in
add
and
jbe
movsl
lods
scas
or
jmp
iret
aas
adc
and
cmp
mov
lret
add
push
jno
pop
stos
cmp
mov
fistl
mov
push
xchg
add
mov
sub
out
pushf
std
inc
xor
test
sub
dec
loope
xor
jl
negl
dec
or
or
pop
push
jbe
xlat
or
mov
stos
sarb
dec
add
dec
dec
mov
cli
es
lock
in
inc
or
mov
shrl
mov
jmp
outsl
insl
lret
loopne
mov
adc
test
movb
add
add
dec
nop
push
or
cmc
idivl
scas
and
cltd
jg
int3
xchg
xor
fstl
sub
add
daa
mov
outsl
inc
arpl
insb
iret
mov
mov
sub
cmpsb
pushf
jl
mov
shlb
fidivrs
inc
shlb
loop
cld
std
or
xchg
xor
into
cltd
stos
adc
roll
cmc
pop
inc
outsb
decl
xor
xchg
xchg
fldl
scas
clc
aaa
adc
jnp
push
pop
cmp
pusha
dec
dec
mov
das
jmp
inc
loop
enter
dec
mov
cmpsb
jmp
xchg
fsubrp
popa
pop
xor
xor
mov
fs
push
test
sbb
repz
fbld
mov
cld
xchg
aaa
mov
repnz
xor
mov
bound
loop
xchg
xor
rcll
sbb
or
sbb
gs
int3
sti
mov
imul
mov
jne
lods
xchg
test
xchg
ret
mov
ljmp
mov
xchg
xor
jl
mov
addl
iret
jge
gs
mov
lods
mov
decb
cmp
push
adc
cltd
dec
cmp
push
jp
mov
jl
jb
ljmp
push
sar
mov
cli
dec
jae
mov
out
sarb
sub
cmpsl
lret
or
test
push
sbb
adc
jne
nop
push
xchg
push
aad
das
pop
xor
inc
push
dec
and
lods
sbb
into
jl
mov
push
loopne
loope
daa
inc
xchg
lret
pop
sbb
jle
jmp
cmp
pop
xchg
mov
or
and
xchg
mov
jae
sub
pop
add
jb
and
xor
add
stos
sbb
test
dec
loopne
clc
ret
loopne
xchg
add
xor
int3
fidivrl
popf
aas
adc
arpl
add
sub
dec
fdivrl
inc
invd
xchg
fiadds
insb
push
mov
pop
movsb
imul
movsb
mov
out
xchg
ja
aas
jg
inc
adc
int3
popl
pop
jb
lods
jnp
adc
cmp
loopne
outsl
jns
cmpsl
lahf
xor
lock
data16
pop
lret
pop
inc
fisubrs
adc
loopne
add
scas
aad
mov
sbb
xor
inc
enter
popf
cmp
cmp
popf
xchg
movsb
pop
loopne,pt
rcll
bound
lcall
out
push
fldl
mov
lcall
or
mov
bound
xchg
imul
aad
rcl
ja
xchg
inc
dec
pop
cld
hlt
mov
aad
popa
inc
imul
cmpsl
pop
addr16
xchg
sub
cmp
cld
or
add
iret
fs
loop
push
fsubrs
sarl
and
or
pop
sbb
stos
mov
inc
mov
fs
sub
popa
lcall
push
rcll
mov
push
ss
mov
incb
mov
dec
repnz
sbb
pushf
inc
add
enter
dec
out
mov
dec
mov
add
push
aas
xchg
cli
mov
xchg
dec
ror
pop
dec
mov
ret
jns
dec
lret
xor
mov
or
ss
jmp
inc
mov
les
add
out
fs
mov
jns
jge
inc
cmp
popa
and
inc
popf
cli
fucomp
jbe
aad
push
sbb
push
xchg
repnz
fld
xor
inc
cmp
cmp
lods
push
pop
jo
dec
add
mov
fsubl
das
sbb
inc
push
xor
jb
fildll
cmp
insl
sti
cmp
jns
adc
cmp
mov
mov
out
or
pop
push
xor
roll
mov
mov
dec
mov
imul
std
dec
ljmp
mov
pop
mov
xchg
mov
les
xor
jl
aas
and
aas
pushf
xchg
mov
adc
and
repnz
mov
cmp
fisubs
or
icebp
mov
sub
insl
push
vmovaps
mov
outsb
imul
dec
jmp
fwait
lret
pop
adc
stos
adc
pop
pop
pop
push
filds
nop
dec
ss
xchg
mov
sti
ja
cmp
loope
mov
je
movsb
push
xlat
dec
fmull
je
sbb
mov
xchg
pop
lret
mov
pop
xchg
xchg
mov
jbe
adc
pop
ret
mov
add
mov
roll
push
loope
xchg
sarl
cmp
mov
lret
inc
leave
das
mov
fisubs
shl
jg
test
stos
push
inc
ret
jo
sub
decl
pop
adc
or
pushf
ss
pop
popf
sti
pop
pop
and
icebp
pop
mov
push
and
clc
jne
adc
xor
ljmp
xchg
pop
repz
dec
mov
loope
fsubs
sbb
mov
ja
mov
sbb
mov
or
push
nop
mov
pop
xchg
cld
mov
insl
xor
cwtl
incl
imul
xchg
and
outsb
gs
stos
cmpsl
insl
jb
enter
dec
cli
aad
les
push
fistps
in
cmpsl
aas
jmp
push
stc
jg
outsb
jge
add
stos
and
sub
jg
add
les
es
pop
dec
and
cli
jno
inc
push
mov
stos
ret
xlat
xor
lahf
sbb
inc
jle
mov
push
lock
adc
sbb
leave
xchg
je
xchg
stos
inc
into
jmp
dec
in
loopne
outsb
dec
add
xor
sbb
sub
cmp
pop
dec
imul
std
fimuls
mov
jno
add
stos
sub
mov
push
xchg
jp
push
loop
data16
sbb
push
jae
jp
sbb
out
mov
test
frstor
push
test
sbb
add
push
inc
push
xorb
xorl
dec
cmp
jle
insb
out
add
xchg
cmp
dec
mov
lea
fwait
testl
cmp
inc
mov
push
push
fldenv
mov
rcl
xchg
add
lods
idivl
dec
outsb
out
shrb
xor
mov
lods
loopne
cli
adc
iret
jmp
int3
inc
mov
lret
outsb
or
hlt
mov
icebp
mov
mov
xchg
inc
jp
cmpsb
int3
and
clc
and
inc
cmpsb
mov
inc
bound
xor
fadd
sahf
shll
xchg
adc
sbb
mov
cmp
movsb
xchg
ja
mov
add
mov
cmp
jl
cmp
or
sbbb
stos
mov
cmp
xchg
fadd
xchg
inc
mov
dec
pop
xchg
push
jo
inc
mov
cmp
inc
frstor
scas
out
push
aaa
test
lcall
sub
mov
push
xchg
xchg
and
pop
aaa
mov
ds
cmp
aam
imul
pop
in
dec
pusha
jb
push
pop
adc
jp
pop
or
jecxz
test
popf
pop
iret
jns
scas
lods
mov
das
fbld
mov
xchg
sub
sub
pop
sbb
sub
jno
lods
jnp
adc
ja
jecxz
jmp
dec
jecxz
lret
pusha
leave
cltd
scas
cmpsl
addr16
in
movsl
mov
and
adc
fcomp
xchg
or
add
xor
mov
stos
pop
jb
test
dec
test
inc
inc
in
insl
push
pop
jle
mov
mov
addb
lret
jle
outsl
lret
sbb
inc
lret
xor
or
mov
xchg
adc
xchg
out
hlt
cli
inc
inc
cs
xor
mov
fisttps
cmc
push
lods
sub
xor
add
mov
or
push
cmp
in
xchg
fldcw
pop
jmp
dec
out
pop
or
sub
and
mov
bound
pop
cmp
movsb
add
jae
adcb
mov
jbe
cmp
cmpsl
mov
mov
lret
pop
adc
and
xchg
mov
mov
push
sbb
sub
sbb
lods
xor
mov
mov
shrb
and
ficompl
pusha
out
rcr
mov
push
scas
imul
inc
adc
rol
loopne
inc
jo
pushf
hlt
mov
test
cs
mov
repnz
minps
aad
and
scas
divl
sub
push
push
insl
enter
test
jo
test
xor
ret
repz
ljmp
pop
sbb
negl
cli
mov
jmp
or
out
jb
std
xchg
pop
stos
pop
ja
pusha
loope
cwtl
fidivl
orl
mov
ljmp
je
xor
fwait
movsl
pop
hlt
daa
or
pop
subb
dec
inc
cmp
dec
daa
adc
sub
vpaddd
cltd
ret
pop
test
faddl
movsl
frstor
icebp
inc
movsb
inc
decl
mov
push
ds
fists
or
movsb
gs
sarb
scas
pop
dec
jp
sbb
xchg
cmp
sbb
jge
mov
sub
mov
mov
movsl
pop
sbb
in
xchg
out
fisttpll
ja
das
mov
shrl
xchg
mov
inc
popf
pop
jmp
adc
popa
mov
xchg
lcall
pop
inc
push
mov
rolb
in
xchg
dec
inc
xlat
lock
or
xor
outsb
lahf
jge
xor
int
pushf
push
mov
push
aad
test
inc
xor
push
xchg
jle
ds
daa
add
les
add
pushf
test
ss
jmp
or
arpl
out
cmpsl
dec
cld
jge
lods
imul
or
jl
sub
out
scas
pop
cli
sub
or
inc
jno
sbb
mov
mov
xchg
mov
sbb
icebp
and
add
add
out
out
lea
test
mov
mov
push
lds
scas
cmpb
inc
sbb
adc
xchg
adc
gs
mov
or
sbb
jne
xor
jae
je
mov
addr16
jmp
add
mov
push
movsb
add
inc
repz
shrl
imul
jp
movsl
divl
dec
loope
adc
xor
sbb
add
inc
cmp
shll
sbb
ror
shll
rcrb
dec
jmp
xor
push
push
mov
dec
std
xlat
aas
xchg
addb
rcll
push
fildll
jp
je
pop
fisubrl
or
mull
jnp
pop
mov
fists
sbb
jle
shl
sbb
insl
test
lds
cs
mov
cmp
jne
movsl
jecxz
push
mov
ljmp
inc
xchg
in
xchg
out
jecxz
fcmovb
or
jnp
mov
cmc
xor
mov
jne
outsl
mov
jo
scas
mov
aas
enter
dec
insl
mov
rorb
ret
repnz
dec
mov
xchg
jg
inc
push
or
push
loope
jecxz
iret
call
jne
cmp
xchg
outsb
xchg
gs
jne
push
xchg
insb
xor
dec
test
ficompl
repnz
das
test
les
call
fsincos
push
dec
or
xchg
add
notb
jge
leave
std
es
jecxz
jbe
icebp
dec
lret
icebp
jl
jge
rorb
mov
mov
push
imul
int
dec
mov
pop
negb
stos
das
add
mov
inc
addr16
ss
imul
cli
push
sub
adc
mov
and
mov
add
fisttpl
jne
jne
xchg
aad
imul
mov
adc
pop
sub
inc
fcomi
call
ret
and
test
adc
ret
adc
loope
insb
xchg
push
aad
fnstsw
jl
dec
push
in
push
and
sbb
push
inc
xchg
test
test
xchg
xor
cmpsb
in
push
scas
add
mov
ljmp
arpl
or
clc
out
lahf
daa
pusha
imul
xchg
int3
or
or
jmp
sahf
mov
fdivrs
push
xchg
xor
je
xor
dec
cli
dec
jmp
fcompl
scas
loope
fildll
gs
pushf
stos
sub
test
stos
in
sahf
out
rclb
sbbl
fwait
lret
mov
clc
icebp
sti
jae
adc
fmulp
cmp
push
xlat
and
out
arpl
pop
repz
sti
and
jns
mov
lcall
mov
cwtl
das
xor
sbb
jb
push
rcr
arpl
int
daa
sbb
pop
or
out
outsb
xor
cmp
stos
pop
fs
push
movsl
xor
shrl
adc
scas
jmp
les
mov
adc
jecxz
inc
cmpsb
cmp
and
shrb
ljmp
jecxz
dec
stc
inc
shlb
pop
mov
icebp
loopne
dec
mov
inc
dec
mov
inc
hlt
pop
and
xchg
adc
push
jbe
ljmp
jecxz
jecxz
fnstsw
pushf
popf
pop
fcompl
xchg
call
or
je
dec
adc
push
pusha
clc
scas
sti
cmp
mov
xchg
xor
ljmp
pusha
sbb
mov
cmp
cs
pop
push
mov
cmp
push
push
cli
out
ret
popa
insl
in
fcoml
out
and
xlat
xchg
fdivrs
sbb
out
mov
xchg
incb
mov
sbb
sahf
or
jne
pushf
mov
movsb
dec
test
jmp
dec
dec
fs
xchg
push
xchg
jecxz
popf
ss
pusha
mov
int3
test
in
or
fmuls
jb
mov
inc
cli
mov
or
mov
shl
pop
xor
push
mov
mov
inc
mov
jmp
arpl
popf
mov
push
icebp
mov
mov
dec
pop
dec
rolb
and
lret
xor
notl
mov
dec
mov
lods
jle
add
mov
adc
pop
lods
or
popf
mov
add
and
sbb
mov
sbb
push
pop
pop
imul
ja
neg
xchg
ret
push
shlb
lods
lret
arpl
outsl
in
mov
fwait
sub
mov
mov
imul
push
fidivs
hlt
push
hlt
movsb
add
sub
mov
push
dec
bound
cmpsb
lods
add
ljmp
xchg
or
sub
push
fisubrl
cmp
imul
add
jae
mov
pop
sbb
or
cmc
dec
mov
mov
sub
imul
cmc
jg
add
addb
call
cltd
xor
repnz
jo
adc
movsb
mov
pop
stos
jg
mov
push
push
fwait
outsb
sub
cli
mov
lds
test
xlat
dec
bound
mov
push
cmpl
fnclex
mov
lods
imul
and
cwtl
cmpsl
pop
icebp
sbb
push
mov
test
and
hlt
push
movb
iret
lods
lock
pop
addr16
push
mov
lret
or
xor
jp
and
dec
sbb
sub
hlt
addl
ss
popa
xlat
or
test
lds
loopne
in
mov
lcall
mov
mov
popf
xor
out
sbb
sub
push
fistl
dec
push
int3
mov
jnp
out
stos
std
int3
mov
add
mov
stos
push
mov
movsb
pushf
mov
cmpsl
cmp
testb
or
dec
outsb
outsb
imul
es
fcomps
lret
mov
pop
aad
cmp
jno
lcall
mov
push
jbe
or
ljmp
xor
pusha
and
loope
cmpsb
test
adc
dec
sub
push
push
mov
mov
lods
xor
pop
xchg
jno
and
and
jne
fsubrs
lret
and
ja
jno
dec
push
outsb
mov
xor
xchg
out
sarl
into
cmp
adc
sbb
lods
jle
addr16
mov
xchg
movsb
lret
sub
rol
cltd
fwait
test
inc
or
jb
xchg
mov
adc
ret
mov
icebp
scas
call
mov
sub
sbb
js
jno
out
test
andl
leave
or
andb
popa
mov
or
pop
hlt
gs
push
popf
sub
es
jno
cmpsb
dec
es
or
dec
xchg
dec
mov
insl
bound
aad
push
pop
pop
and
aaa
cmp
mov
stos
fdiv
jno
adc
inc
ljmp
push
shlb
xlat
fnsave
scas
mov
xor
sbb
gs
fadds
dec
jle
out
cmp
es
dec
cs
outsb
into
in
pop
mov
pop
out
pop
cwtl
push
sti
icebp
jp
lret
adc
sbb
aam
or
inc
fucomi
aas
jp
mov
rcrb
sbb
frstor
jne
and
add
cli
mull
sub
push
sub
xchg
dec
and
dec
shr
sub
add
sbb
jl
rcrl
push
xor
xchg
imul
sub
scas
inc
push
jmp
out
popl
adc
push
cmp
fstpl
stos
ja
pop
repnz
add
add
or
insb
ficomps
or
jnp
pushw
mov
iret
or
cmpsb
pop
jo
dec
jnp
mov
nop
push
xor
js
lds
xor
add
dec
inc
lock
rcll
mov
test
test
mov
inc
das
lea
jle
sbb
lock
push
faddp
shll
mov
add
imul
outsl
xchg
jge
push
jne
in
mov
xchg
movsl
cmp
dec
mov
in
inc
or
lret
jmp
add
rcrl
cmp
mov
hlt
xor
add
jmp
and
cmpl
mov
test
leave
ret
or
in
or
add
add
fisubl
push
into
sbb
push
mov
push
aas
cmc
jecxz
jnp
insb
outsl
lea
push
lret
shll
mov
stos
xor
add
sbb
and
cli
loope
add
mov
mov
mov
into
lods
cmp
xchg
jg
dec
lock
push
or
cmpsl
cmp
rcrl
cli
mov
mov
or
jecxz
pop
push
lock
fmuls
dec
and
mov
cmpsl
int
jle
mov
add
xchg
or
xchg
popa
dec
add
test
sub
push
frstor
popf
in
xchg
sbb
shl
orb
dec
dec
jge
lock
mov
ja
pop
out
dec
or
loope
lret
inc
mov
pop
sbb
test
fsubrl
dec
lret
inc
cmp
push
loop
int
cmp
sti
gs
pop
pushf
mov
sub
pop
push
and
stos
repnz
jge
jmp
add
test
or
pop
add
adc
push
pusha
jecxz
sub
int3
adc
aas
cmc
jl
xor
stos
inc
lret
ljmp
jo
adc
int3
sarl
stos
adc
insl
jp
jb
jmp
adc
frstor
ror
and
and
ficomps
ret
jg
out
call
test
imul
bnd
mov
insl
sub
push
push
pop
iret
lret
leave
xchg
test
jmp
std
or
sub
mov
inc
subl
fwait
addb
lea
sbb
sub
lods
cmp
cwtl
lods
pop
inc
dec
lock
mul
pop
divb
mov
cmp
xor
daa
push
xchg
movsl
adc
adc
cs
pop
jle
js
jmp
push
lret
mov
or
mov
mov
jnp
js
xor
jle
std
mov
hlt
xchg
push
or
push
ds
inc
sub
xchg
cmpsl
jae
cmpsl
jno
push
mov
push
int
es
mov
jmp
call
add
mov
loope
mulb
adc
imul
push
push
f2xm1
insb
mov
push
or
sti
in
dec
cs
fisubrl
and
scas
ss
mov
out
or
mov
mov
stos
call
push
mov
shr
push
mov
pop
dec
lea
sub
add
sub
xchg
xchg
jmp
in
push
jae
fidivl
out
lcall
jnp
cmp
out
jmp
inc
jle
or
add
into
lock
dec
cmp
lds
ret
sbb
hlt
xor
fnstsw
les
jo
push
les
std
or
lock
test
pop
push
fwait
inc
xchg
pop
cmpsl
xchg
inc
ret
cmp
lahf
jecxz
push
jo
orl
mov
xchg
mov
aaa
inc
cmpsb
jecxz
cmc
xchg
jno
sub
mov
add
dec
push
adc
mov
aas
xor
iret
xor
fldt
cmp
fldcw
inc
jno
mov
pop
mov
push
fistl
mov
sub
pop
mov
or
mov
rorl
push
clc
daa
nop
mov
in
mov
push
out
add
jbe
ss
es
mov
dec
out
jo
and
pop
movsl
mov
cmp
mov
mov
or
xlat
sub
data16
jp
cwtl
add
call
cmp
jecxz
lea
shll
pop
push
xchg
mov
adc
stos
scas
fadds
xor
xchg
mov
aas
mov
mov
xchg
out
clc
and
lea
push
pop
mov
shrl
pop
andb
cltd
aaa
pmuludq
fldl
mov
lcall
mov
dec
ds
dec
jge
adc
ja
xchg
sub
stos
xor
sub
mov
fisubs
subb
gs
lods
mov
and
adc
push
inc
xchg
cmp
idivb
cmp
andl
mov
lods
gs
xor
addr16
mov
mov
into
sbb
pop
mov
frstor
loopne
mov
inc
xchg
adc
ret
push
xchg
fsubrl
cmp
lock
cmp
push
repnz
movsl
dec
outsb
jge
negb
mov
imul
or
sbb
xchg
xlat
mov
jg
xchg
mov
popf
jae
stos
push
and
dec
xchg
jmp
pop
mov
xchg
push
mov
dec
xor
inc
sbb
outsb
fs
mov
nop
repnz
dec
mov
loope
lret
test
xor
xor
sub
bound
fdivr
icebp
jmp
aas
dec
aad
and
mov
je
int3
dec
add
push
xor
jecxz
dec
sbb
xchg
test
stos
mov
mov
loopne
xchg
mov
repz
outsl
pop
pop
xchg
cmpsb
mov
std
jecxz
stos
adc
mov
pop
mov
arpl
pop
mov
aad
rcr
les
dec
mov
lods
loope
xchg
xor
pop
in
imul
push
jp
ficoms
dec
mov
mov
lahf
mov
das
xchg
cmpsb
mov
adc
cli
vaddpd
jb
das
mov
push
pop
jb
cmp
or
and
inc
jp
stos
leave
fstps
pusha
adc
push
lahf
jmp
movsl
rorb
ficoms
add
mov
xorb
outsl
in
mov
fcmovbe
leave
push
pop
mov
sahf
ljmp
mov
enter
xchg
push
push
adc
add
jecxz
pop
xchg
cmc
test
test
jl
xor
fcoml
jo
mov
mov
jp
cmp
or
push
mov
sahf
push
decb
or
in
adc
testb
aad
faddp
aaa
cmp
cmpsl
sbb
sub
push
jae
cmpsl
in
lock
in
mov
int3
mov
push
flds
xchg
mov
loop
rcrb
pop
fsqrt
out
cld
add
inc
addr16
jp
sti
mov
out
test
outsb
aas
pop
add
imul
jge
mov
out
dec
mov
movsb
push
daa
inc
lock
and
hlt
fs
xchg
dec
or
pop
sbb
or
jl
push
fsubl
test
hlt
push
inc
and
xchg
jne
dec
ret
clc
jne
fisubs
sbb
xlat
add
pop
cmp
insb
lock
jge
movsb
sub
movsl
pop
fcom
andb
cmpsl
mov
push
les
fwait
inc
push
imul
ret
paddusw
push
xchg
jno
cmp
inc
sar
dec
jl
test
push
js
or
fwait
nop
shl
push
into
lods
bnd
stos
adc
mov
fimuls
outsl
push
cmp
fildl
repz
dec
cmc
out
mov
dec
sbb
lahf
push
in
cmpl
push
or
push
lods
enter
push
push
xlat
test
shrb
insb
mov
std
mov
lret
mov
or
mov
jne
sti
mov
xchg
popf
lret
loop
stos
data16
js
push
cmp
std
pop
das
cmp
add
push
int3
xchg
xorl
jbe
dec
xlat
lret
inc
mov
add
icebp
bound
pop
push
dec
mov
inc
inc
jg
divb
mov
and
xchg
enter
ja
mov
xor
repnz
mov
insl
jae
add
pop
mov
dec
out
jbe
jnp
je
adc
push
fistpl
fisubrl
jae
scas
aas
mov
or
xchg
lea
test
ss
jmp
adc
push
xlat
ja
jae
jnp
aaa
push
push
mov
ret
and
insb
inc
es
mov
movsb
add
push
add
test
inc
xchg
xor
or
jnp
xor
and
sbb
lret
mov
test
and
loop
or
scas
jge
gs
ficoms
shlb
push
dec
xchg
sahf
sub
out
cld
jb
or
push
sub
stos
push
lcall
rorl
std
pop
ds
mov
ret
sbb
sbb
outsb
xchg
or
outsb
cmp
adc
in
rol
xchg
in
or
mov
mov
mov
xchg
test
push
or
pop
lret
mov
lds
and
fstps
sub
stc
repnz
jl
fistl
xor
push
push
add
xor
lret
test
mov
mov
out
scas
adc
xchg
enter
xor
cmp
in
notl
sub
fsubr
jbe
lea
gs
fwait
xlat
inc
or
in
inc
mov
pop
push
jbe
add
and
stc
shlb
addr16
sbb
and
test
inc
lret
rorl
jno
xor
mov
xchg
xchg
or
pop
mov
jns
xor
inc
dec
mov
leave
jl
ficoms
outsb
stc
call
shll
dec
jb
sti
aaa
push
notl
and
xchg
and
fcoms
jmp
pop
addr16
ficompl
push
mov
adc
call
pop
clc
sbb
movsl
lods
shll
rorb
scas
fdivrl
xor
std
clc
bound
outsl
enter
dec
enter
xor
or
testl
int3
mov
adc
lahf
arpl
and
mov
mov
aas
pop
pop
mov
test
jo
mov
xchg
add
inc
or
jge
lret
gs
adc
sahf
rcll
int3
add
fwait
xchg
fnstenv
push
xorb
es
hlt
sbb
data16
mov
into
jb
jmp
adcl
xchg
pop
pop
push
sub
sbb
mov
aam
nop
jb,pn
mov
daa
adc
or
mov
and
leave
push
cmc
cs
enter
dec
lea
jo
mov
pop
dec
adc
and
mov
cmc
in
xchg
add
and
test
adc
mov
cltd
xchg
jg
hlt
dec
out
lea
inc
and
les
and
pushf
push
mov
scas
jns
cmpsb
fidivs
cmp
test
cmp
call
adc
nop
and
and
mov
int3
mov
popa
jae
inc
sbbl
xchg
in
imul
inc
and
xchg
mov
mov
cmp
pop
popa
stos
lahf
jne
sbb
jmp
jmp
insb
ljmp
rorl
loop
sbb
gs
or
fsubr
test
add
xor
sbbl
jnp
mov
mov
add
fsts
test
icebp
clc
daa
xchg
stos
jl
fcoml
or
inc
fs
cmp
inc
ss
pop
add
push
cld
sbb
adc
push
inc
clc
xor
pushf
in
jecxz
and
popl
mov
imul
jmp
lea
mov
js
in
xchg
dec
push
mov
jbe
sbb
xchg
addl
negb
in
or
jge
imul
leave
outsl
xor
aam
xor
push
decl
test
ret
dec
rcrb
fimuls
push
sbb
lods
aas
or
dec
mov
nop
pop
fnstcw
or
lahf
jno
jg
fwait
cltd
in
loope
xor
add
xlat
pop
jmp
push
popa
bswap
out
push
and
into
shrl
or
leave
lods
enter
adcl
nop
and
pusha
das
das
in
cmpl
pop
cmp
adc
push
mov
pop
adc
xor
fdivrl
loop
pop
aam
ds
dec
xchg
push
mov
ljmp
xchg
or
add
mov
push
arpl
inc
rclb
sbb
jnp
xchg
mov
mov
adc
in
pop
call
xchg
ficoml
rcrl
dec
cld
inc
mov
ret
xor
mov
outsb
das
fists
arpl
add
or
adc
notl
mov
add
push
in
mov
bound
call
fdivs
leave
xchg
sub
inc
pop
insl
adc
xchg
pop
cli
je
pop
add
out
aas
repz
mov
xchg
dec
ret
out
popf
addr16
rcll
inc
push
adc
leave
rolb
inc
in
add
aaa
popf
and
rorb
and
loope
data16
test
dec
nop
and
arpl
mov
in
lcall
push
jge
and
fld
movl
into
mov
fs
sbb
leave
hlt
mov
push
pop
shrl
jnp
sti
ret
jmp
insb
push
push
imul
idivb
int
imul
test
std
or
fsts
fistpl
test
lret
push
imul
dec
orb
addr16
call
loop
enter
fsts
jl
das
mov
dec
addr16
pusha
test
push
cltd
stos
mov
push
jl
gs
mov
mov
add
push
jae
das
sahf
dec
adc
arpl
xor
push
popa
std
cmp
pop
aad
mov
xchg
pop
sub
adc
xchg
xor
mov
mov
push
and
pusha
mov
mov
stos
es
lahf
add
xchg
loope
mov
aam
aas
imul
mov
adc
xor
cmc
adc
fnstcw
sbbl
mov
or
iret
mov
lock
push
and
dec
fldenv
fs
sub
inc
cwtl
mov
dec
cmp
sbb
push
scas
inc
xchg
in
cmp
sti
in
cltd
sub
push
jl
push
in
jmp
aam
lret
xchg
arpl
add
push
fidivrl
shll
div
inc
cmpl
mov
or
js
scas
nop
sahf
mov
xchg
push
ret
xchg
out
or
loope
les
call
dec
loop
mov
je
pushf
int3
cmp
add
jge
fadds
mov
xor
push
imulb
cmp
pop
loop
imul
adc
xchg
xchg
mov
push
jmp
out
push
pop
sbb
pop
add
xchg
push
aam
inc
test
cmp
repz
clc
ja
int3
xchg
dec
popa
add
pop
jp
jno
jecxz
mov
adc
and
add
loope
sbbl
comiss
mov
gs
enter
jnp
mov
fwait
and
divb
jae
cltd
dec
jle
loope
or
xchg
insl
lret
dec
sbb
aaa
or
xchg
push
fs
mov
inc
imul
mov
lock
cld
mov
fisttpl
out
sbb
cmp
aaa
fdivl
push
clc
stos
dec
xor
aam
dec
or
lods
dec
sbb
mov
aam
xor
add
imul
lods
lcall
sub
out
call
call
sbb
lret
pop
out
mov
movsl
mov
xchg
dec
sbb
bound
xchg
ja
pop
mov
enter
push
fsubs
or
mov
lds
push
sahf
test
fcmovbe
fwait
repnz
movsl
add
daa
mov
lock
lods
mov
stos
sbb
scas
mov
bound
dec
mov
pop
insl
ret
and
xchg
mov
sub
rcrb
add
scas
outsl
mov
cmc
inc
sbb
into
shll
push
pop
add
adcl
ds
and
mov
fisubs
pop
pop
xchg
stc
inc
inc
pop
push
lret
push
adcl
les
fistl
in
xchg
mov
mov
sub
add
imulb
add
call
or
xchg
sub
mov
imul
fsubrs
sahf
add
divb
adc
mov
dec
mov
sub
xor
push
aaa
mov
jg
rol
lea
cltd
iret
push
das
cld
jnp
push
cld
call
cmp
lcall
in
stos
sbb
xor
push
lcall
imul
test
data16
mov
lahf
sbb
pop
iret
jg
mov
leave
dec
jg
push
jnp
dec
pusha
inc
jg
test
loope
dec
or
sbb
sub
test
adc
and
into
sub
ljmp
cmovno
jb
lds
popf
bound
scas
rclb
jno
testb
scas
aad
add
js
lret
ljmp
arpl
mov
jbe
into
sbb
ja
pop
loop
jmp
addl
cmp
js
shll
icebp
fisubl
imul
push
sub
cmp
test
movsl
pop
pushl
test
fs
dec
push
ljmp
jge
adc
in
test
add
cs
int3
push
dec
icebp
lods
aaa
inc
jo
jbe
pop
add
jmp
push
dec
inc
cmp
mov
jg,pn
flds
xchg
mov
idivb
cld
lods
clc
repnz
xchg
scas
push
add
push
jg
outsb
mov
add
aas
js
in
mov
mov
mov
fldl
or
jecxz
aaa
inc
xchg
lock
or
adc
cmpsb
adc
imul
sbb
push
cmp
js
bound
in
fldt
adcb
sub
pop
dec
or
sahf
out
imul
fnstenv
loopne
pop
adc
int3
mov
jl
lods
pop
mov
xchg
xchg
inc
cmp
mov
cmp
pop
push
out
cmp
in
imul
sbb
fidivl
adc
mov
sub
popf
inc
cmp
std
mov
sub
jmp
mov
in
mov
or
divb
xchg
lret
xchg
test
xchg
push
std
das
adc
mov
sub
repz
or
incl
pop
pusha
mov
cmp
incb
xor
cmc
fcmovb
lods
push
jb
pusha
ret
cmpsl
out
jbe
je
cwtl
clc
mov
shll
addr16
dec
add
hlt
ret
mov
pop
inc
pop
dec
fcmovnbe
add
xchg
adc
pop
adc
cli
jo
sbb
dec
mov
lahf
and
cmp
sti
mov
pushf
aaa
in
repz
aas
xor
lea
aam
inc
in
pop
inc
mov
lea
xchg
popf
mov
je
ret
adc
decl
xchg
mov
xchg
mov
sahf
mov
xchg
xor
pop
mov
imul
mov
nop
cltd
or
add
mov
pop
mov
jnp
jne
mov
adc
xchg
dec
loope
orb
push
adc
xchg
pop
fisubrs
enter
and
shlb
and
xor
pop
inc
fadds
scas
xor
leave
dec
andb
mov
int
xor
mov
outsl
ret
jg
gs
imul
cmp
call
mov
xchg
cmp
les
mov
jno
add
cmp
inc
cmp
jbe
mov
cmpsl
pop
pop
outsl
mov
sti
mov
hlt
inc
cmp
inc
push
xor
loop
fdivrs
lods
scas
push
das
xor
pop
jns
push
cld
inc
cmp
push
and
std
aaa
ret
xor
xchg
adc
inc
out
adc
jl
or
fisttps
ret
sbb
fiadds
into
sarl
jmp
pop
pop
gs
pop
clc
les
mov
rolb
pop
cmp
pop
das
pop
mov
mov
push
in
push
xchg
shll
mov
stos
scas
or
add
adc
lea
xor
sahf
pop
loopne
std
test
mov
cmp
mov
cmp
jp
xor
pop
or
add
out
push
dec
jnp
cmp
mov
xorb
popa
pusha
fistpl
sti
mov
sbb
insl
cmp
leave
xor
mov
mov
scas
lret
shl
or
mov
popa
jl
lds
mov
leave
ret
xor
inc
orb
xor
mov
sbb
xchg
mov
js
fistpl
fcoml
dec
lods
sub
push
lcall
xor
sti
fildll
addr16
and
stc
fwait
xor
push
cs
loope
mov
mov
loope
push
test
mov
imul
adc
xor
lea
inc
lock
daa
outsl
aam
loope
dec
cmc
pop
mov
sub
sbb
lea
push
movsb
add
scas
movsb
push
mov
enter
fsubrs
call
roll
xorl
out
sbb
movsl
mov
mov
aam
pusha
stc
jb
ret
push
popf
and
daa
dec
cmpl
mov
mov
loopne
adc
testb
in
mov
sbbl
test
mov
cmpsl
xchg
add
xchg
cmp
pop
shrb
rcl
xadd
adc
and
loopne
fldpi
sbb
add
mov
stc
in
clc
inc
pop
in
fwait
pop
das
and
mov
or
aaa
into
outsl
shlb
rclb
dec
or
xchg
pusha
jl
jmp
inc
mov
addr16
movsb
arpl
and
adc
loop
addr16
jecxz
jae
shrl
sub
in
pop
pop
fdivr
outsl
notl
and
jae
or
mov
xorl
push
scas
push
pop
cmp
call
mov
jmp
dec
fcmovne
push
test
or
xchg
bound
lret
sarl
aaa
lret
pop
iret
cld
mov
push
repnz
mov
inc
cmp
pop
xor
cmc
dec
enter
mov
arpl
int
test
ds
dec
xlat
add
ret
pop
mov
mov
shll
inc
mov
out
add
or
cmc
mov
lcall
ret
loop
cmp
inc
mov
mov
sbb
movsl
xchg
pop
adc
gs
aam
add
lods
test
aaa
mov
iret
mov
in
aad
sbb
fisttpl
icebp
test
int3
lds
xor
mov
dec
xchg
lea
jae
sbb
lret
mov
dec
push
sbb
out
push
not
jo
sbb
stos
cld
stc
ja
ds
ret
mov
mov
jnp
push
sbb
xchg
xor
jnp
movups
add
pushf
mov
xchg
popf
leave
xor
inc
jmp
xchg
and
jl
rolb
iret
lcall
pusha
xor
xor
je
or
mov
loopne
push
mov
cltd
push
rcll
xchg
jns
ja
push
cmp
lcall
popa
clc
or
push
jne
adc
rol
dec
pop
or
gs
inc
push
aam
inc
aad
std
int
pop
and
sti
shrl
dec
out
push
cmpsb
fs
mov
xchg
cmp
dec
xor
mov
loop
insb
inc
outsl
fcmovu
mov
icebp
sbb
lods
sbb
pop
push
pop
ss
push
jno
push
mov
fists
daa
rolb
fnstsw
push
mov
sub
add
mov
xchg
in
shlb
fldenv
test
adc
jmp
fsubp
dec
add
pop
out
mov
sbb
dec
pop
push
icebp
sarb
dec
mov
imul
jl
in
push
es
arpl
mov
mul
pop
sbb
sbb
leave
andl
and
and
inc
xor
add
leave
inc
mov
les
cmp
in
sbb
xchg
jns
pop
jno
popa
jbe
mov
mov
push
jnp
cmp
imul
loopne
fadds
fldcw
push
push
pop
cmovne
in
jno
ljmp
dec
push
jae
xor
cs
testb
mov
ret
aaa
ljmp
and
jmp
add
cmp
dec
xor
stos
or
das
test
add
dec
sbb
push
out
mov
std
bound
mov
cmc
es
test
cmc
sub
sub
dec
btr
push
cmc
lock
jno
mov
jge
adc
dec
jp
arpl
scas
adc
push
and
ret
sbb
mov
mov
dec
test
ljmp
ljmp
mov
push
mulb
in
add
sub
je
cmpsl
loopne
mov
daa
mov
push
xchg
iret
pop
in
sub
lret
aam
cmpsb
adc
dec
push
xchg
add
cmp
data16
sub
jmp
pop
xchg
adc
sub
pusha
cs
inc
mov
mov
sub
hlt
xor
push
xchg
jp
sbb
or
out
repz
lret
pop
inc
mov
mov
or
mov
repnz
test
push
leave
xchg
xchg
xchg
pop
sub
pushf
mov
mov
xor
mov
sub
pop
or
sub
shl
add
push
push
movsb
scas
cmp
push
dec
add
lods
into
pop
test
insb
sbb
inc
mov
mov
pop
mov
es
jg
mov
mov
fisttpll
xor
popa
lods
fisttpl
adc
inc
jp
or
jne
adc
mov
pop
movsl
dec
sbb
leave
sub
outsb
xor
int3
jb
mov
xchg
mov
xor
sti
lahf
sarb
xchg
push
in
imul
jnp
movsl
xor
or
mov
mov
in
mulb
pop
pop
mov
cmpsl
cld
das
cmp
adc
std
push
adcl
mov
sbb
sub
or
or
icebp
mov
pop
dec
jmp
xchg
sbb
iret
outsl
cmpsb
dec
ret
mov
add
mov
lahf
sub
cs
sbb
mov
lea
leave
cmp
out
dec
pop
or
lods
cmpsb
sub
fstpl
repnz
sbb
pop
or
ds
das
cli
clc
outsb
sbb
dec
lret
call
sti
push
hlt
sbb
ret
rolb
into
jl
stc
and
sbb
aam
jns
inc
jl
vmovntpd
es
pushf
push
rorb
jl
loope
imul
popa
pop
imul
test
push
add
out
jnp
xchg
jb
loope
loope
imul
xchg
sar
mov
or
adc
inc
ljmp
sbb
jae
cmpsl
and
clc
inc
inc
lret
roll
pusha
add
fnstenv
aam
ds
jbe
movsb
and
mov
jns
jno
rorl
in
jno
dec
rclb
or
push
pop
inc
sub
out
fdivl
imul
bnd
loopne
pop
jns
insl
rcll
push
sbb
pop
sbb
loop
imul
push
idiv
in
adc
inc
xchg
and
xchg
push
cmp
sbb
mov
ljmp
shrb
sub
leavew
loop
xorb
xor
add
pop
dec
stc
shlb
jno
mov
cmp
inc
js
cltd
xchg
inc
push
fdivrl
test
jle
ljmp
je
push
daa
enter
rorb
cmp
nop
pop
inc
mov
pavgb
dec
mov
xchg
ret
mov
jae
lahf
das
xchg
mov
jmp
stc
xchg
jge
idivb
sbb
outsl
rcl
fisubrl
stc
rclb
icebp
lock
ljmp
outsl
adc
or
loop
adc
testl
cli
les
es
loope
into
inc
stos
mov
rcr
push
pusha
stos
js
xchg
adc
stos
aaa
dec
lods
loopne
dec
test
inc
jo
or
inc
cmpsl
push
sub
jo
xchg
adc
sbbb
sti
out
pop
cmc
rorb
or
sub
adcb
cmpb
mov
test
mov
icebp
movsb
fisttps
in
sbb
cmc
int3
push
lea
outsl
jmp
mov
test
andl
daa
cmp
cld
sub
xchg
pop
mov
sbb
cwtl
dec
and
fmull
jns
aad
aad
sub
outsl
imul
fcmovnbe
into
ds
aaa
repz
outsb
dec
adc
push
and
loope
push
mov
push
ja
adc
mov
loopne
filds
xchg
ja
loopne
jo
mov
lahf
ss
fidivs
xchg
cltd
insb
in
ljmp
push
inc
cltd
in
dec
pop
add
divl
push
mov
pop
dec
mov
sub
mov
icebp
adc
test
mov
bound
cmpsb
add
jae
cmp
shlb
mov
imul
xchg
dec
popa
fists
test
popf
mov
or
loop
sbb
push
jo
mov
rclb
bnd
mov
inc
icebp
xchg
push
pop
in
addr16
int3
pop
push
xor
repnz
pop
lahf
xor
push
mov
ficomps
or
pop
loop
bound
mov
sbb
cli
mov
mov
popa
dec
cmp
mov
and
xorb
movsb
mov
fdiv
sbb
xchg
lahf
xchg
push
popa
inc
adc
stos
xchg
shr
adc
stos
scas
lods
fmull
lahf
jg
sahf
cmp
xor
mov
js
ja
pop
aam
and
push
cmp
je
jecxz
push
lahf
dec
leave
add
adc
test
add
cmpsl
xchg
push
inc
and
fidivrl
and
xchg
add
sti
and
into
imulb
mov
out
jb
or
mov
mov
cld
enter
incb
mov
push
dec
jg
inc
aad
mov
add
xchg
lds
cmp
mov
iret
jmp
or
pop
cli
jg
ret
inc
sub
mov
pop
pop
idivl
pusha
shrl
or
xchg
std
imul
xor
ja
loop
lods
xchg
dec
mov
imul
mov
enter
mov
orb
das
jne
xchg
mov
dec
pop
test
movsb
dec
and
xorb
xor
add
sbb
dec
iret
jl
push
inc
rclb
div
dec
sbbl
nop
nop
test
ret
adc
mull
imul
les
mov
popf
dec
or
cmpsl
or
pop
test
ret
sbb
mov
push
outsb
aam
sbb
cmp
mov
inc
pushf
push
les
fsubs
ljmp
in
sub
in
out
push
dec
mov
fmull
mov
sti
fs
add
inc
mov
push
loopne
repnz
fdivrl
in
out
rcll
mov
repz
fmuls
hlt
xor
js
mov
add
jp
and
inc
cli
aad
mov
pop
mov
pop
mov
testb
pop
and
push
enter
iret
movsl
cmpb
sub
xchg
in
clc
push
scas
xchg
js
add
jae
pop
jb
xchg
ja
ds
or
sbb
or
scas
js
jmp
and
pop
and
ss
add
xchg
add
mov
cwtl
call
xchg
sarl
and
mov
or
dec
fbstp
mov
js
mov
loopne
enter
xlat
jb
pop
movsl
or
mov
push
addb
push
mov
fs
jae,pn
cmpsl
xchg
shlb
or
sub
adc
mov
add
push
call
int3
mov
pop
sahf
inc
inc
xchg
jle
dec
and
popa
mov
adc
je
repnz
call
cld
cmpsb
adc
movl
jl
cltd
das
out
jl
add
cmpb
jae
sub
dec
sub
hlt
test
cmp
cmp
xor
jmp
and
pop
fs
jbe
push
xchg
mov
scas
jmp
push
outsb
xchg
mov
out
mov
mov
adc
loop
mov
in
ret
pop
or
enter
pop
movsb
dec
dec
bound
or
dec
sbb
je
leave
int
and
push
xchg
fwait
mov
pop
mov
sbbl
pop
jecxz
xchg
fidivrs
xlat
mov
ljmp
jp
push
stos
sub
stc
pop
mov
xor
xor
xchg
outsb
or
int3
fnstcw
dec
jmp
push
mov
ret
pop
imul
xor
sub
cmpsb
mov
dec
sar
xchg
inc
and
push
mov
cs
cli
dec
idivl
ljmp
inc
jge
cs
pop
push
cmpb
inc
scas
sub
data16
pop
pop
cmp
and
shlb
mov
clc
mov
outsl
jnp
mov
mov
cmp
les
gs
mov
adc
aaa
xchg
and
lock
out
out
dec
andl
jnp
fisttpl
mov
in
adc
js
je
fwait
leave
mov
scas
adcl
nop
xchg
inc
jecxz
mov
inc
mov
test
pop
cmc
xor
cs
popf
lcall
jp
dec
lcall
xchg
or
lcall
xor
cmp
pop
rorl
cmp
push
jg
into
push
data16
call
ud0
addr16
adc
push
cmp
push
inc
dec
add
push
mov
dec
nop
rcrb
mov
dec
lret
fucom
mov
xchg
and
jo
jae
dec
sbb
imul
push
fwait
sub
nop
or
push
and
mov
mov
jo
push
cltd
mov
insl
fildl
cmpsb
xchg
movsl
adc
mov
pusha
and
icebp
orb
push
jb
jne
xchg
test
adc
outsl
xchg
movl
insb
xchg
mov
ss
mov
pop
push
lret
rorw
mov
xchg
jbe
adc
daa
mov
aad
cli
sub
int
push
jle
xor
sub
insl
push
xor
das
clc
cmp
loope
xor
sbb
sbb
mov
add
jae
jl
idivl
mov
pop
adc
out
out
popf
fildl
sbbb
xchg
jne
fnsetpm(287
in
add
add
ret
mov
mov
mov
out
xor
pop
fwait
dec
cmp
sysret
push
sub
or
les
aad
aad
das
mov
or
scas
jbe
jb
or
mov
jbe
decb
insl
insb
push
jo
and
fstpt
daa
mov
and
adc
aad
test
jmp
and
and
lahf
pop
fwait
lds
jne
push
sahf
mov
xchg
pop
push
and
xor
pop
push
in
out
out
xchg
adc
mov
addr16
or
enter
fldl
lret
clc
loopne
dec
or
sbb
sbb
push
jnp
cwtl
imul
push
xchg
neg
popa
fildl
add
lea
push
jnp
imul
test
mov
sub
mov
enter
add
je
cwtl
xchg
xor
sti
adcb
mov
dec
mov
mov
enter
lods
stos
div
and
fisubrs
out
sub
mov
or
bound
insb
xchg
dec
lcall
lock
sbb
push
shlb
repz
bound
jo
loopne
stos
rcrb
sahf
arpl
fwait
xor
fwait
rclb
inc
fists
jbe
scas
pop
xor
lcall
xchg
push
pop
mov
push
ljmp
mov
insb
sbb
sbb
clts
pusha
enter
decb
and
adc
ds
int
jbe
and
jne
jns
or
sbb
icebp
push
mov
pop
mov
lret
pop
pop
add
mov
cmp
add
jl
dec
xchg
dec
mov
inc
jge
fistps
pop
xchg
mov
or
adc
outsb
aas
inc
std
cmp
stos
loope
inc
cmp
out
outsb
push
lea
lods
mov
jecxz
xor
inc
pop
fiadds
gs
xchg
jae
xchg
lea
dec
fisubs
sbb
mov
scas
cmc
or
mov
dec
arpl
dec
lahf
pushw
cli
jo
push
mov
dec
clc
or
in
clc
lahf
push
add
push
inc
stc
arpl
test
mov
add
push
icebp
sbb
enter
cmp
and
mov
lahf
call
arpl
cltd
sbb
mov
lret
inc
or
sub
mov
icebp
xor
jbe
mov
push
push
and
ja
sbb
xchg
jp
pop
jo
pop
aam
add
pop
fsts
or
inc
shrl
jno
lret
mov
add
add
mov
movsl
in
sub
das
inc
dec
dec
imull
mov
movsl
aad
sub
jg
lret
jo
inc
out
sub
arpl
std
ja
nop
out
sbb
pop
inc
jns
mov
lods
mov
push
fadds
jle
pop
pop
cwtl
mov
xchg
and
in
scas
pushf
enter
outsl
lahf
xor
pop
push
adc
xor
shrb
stos
xor
lret
mov
dec
daa
sbb
mov
sti
std
hlt
enter
xchg
mov
jmp
pop
mov
push
fwait
pop
mov
addb
outsb
pop
leave
inc
pop
in
repnz
outsb
mov
dec
mov
mov
mov
jb
pop
rorl
mov
dec
jbe
mov
push
push
push
or
cmp
jnp
or
mov
jae
scas
hlt
inc
mov
iret
clc
rcl
push
xchg
xchg
imul
mov
mov
lds
mov
call
sub
cs
lods
adc
lods
mov
movsl
push
or
jbe
jp
jg
sub
cwtl
xchg
jl
cmp
push
lock
or
add
pop
fs
test
popa
adc
fdivrp
out
inc
add
or
test
ja
sbb
popf
fiaddl
jns
mov
push
cltd
and
mov
pop
movups
jnp
cmpl
enter
mov
or
mov
mov
cwtl
jne
push
dec
dec
sub
sbb
sarl
imul
jae
les
es
shld
push
fadd
hlt
mov
adc
xchg
flds
imul
lock
mov
ljmp
and
sub
jg
dec
dec
aad
adc
leave
cld
inc
dec
pop
add
mov
or
fwait
push
in
mov
mov
push
lret
add
adc
outsb
cld
mov
stos
inc
cmc
sub
cwtl
or
mov
and
push
sahf
inc
or
or
idivl
dec
int3
mov
movsl
cmp
mov
fcoml
inc
and
xchg
xchg
or
jbe
pusha
pop
xchg
add
pop
mov
jge
lods
sahf
pop
jl
inc
repz
call
nop
push
or
int3
fs
loop
inc
sbb
cmp
popa
mov
mov
int3
push
xchg
sbb
jnp
sub
lods
negb
cs
gs
insb
pop
cltd
jb
dec
pop
sarb
sub
cltd
shlb
or
outsl
mov
mov
pop
mov
orb
push
loopne
xor
adc
imul
add
mov
popf
gs
mov
push
and
sahf
mov
xchg
sbb
popf
dec
in
xor
lea
pop
pop
add
push
imul
out
xchg
push
scas
mov
push
ret
bound
mov
je
shrb
in
adc
sub
sub
rorl
xlat
add
inc
lss
mov
fmull
push
cmpsb
fidivl
push
cltd
mov
sub
pushf
push
ret
movb
add
cmp
pop
add
fidivrs
in
pop
scas
test
call
cli
mov
cmpsb
jge
stc
out
fistpll
orl
cmp
cmp
push
fld
pop
ja
pop
incl
mov
cs
jbe
cli
jg
mov
data16
cmp
cmp
in
jmp
stos
negb
sub
cwtl
push
mov
lea
insb
push
push
repz
mov
dec
lahf
into
jns
out
out
jne
inc
mov
imul
inc
mov
sub
push
xchg
lret
mov
sub
dec
imul
cs
outsb
jp
aas
push
fcom
sbb
mov
mov
push
dec
push
cmp
sbb
mulb
jecxz
fcoml
int
jb
daa
lods
sbb
or
cs
adc
outsl
popl
pop
xchg
or
push
and
jecxz
jge
dec
fs
mov
fldl2e
jmp
movsb
pop
test
push
aad
push
in
stc
outsl
add
pop
lcall
xchg
jne
pop
xor
jge
loope
mov
dec
lock
inc
orl
pop
jl
out
arpl
push
sub
push
xchg
cmp
jp
jge
xor
repnz
jl
icebp
leave
lret
push
sahf
fiadds
cmp
scas
xchg
pop
into
addr16
pushf
cmp
aaa
fsqrt
cs
and
jmp
jg
xchg
mov
iret
aam
push
pop
push
outsb
outsb
push
sub
xchg
test
out
mov
fists
mov
push
loop
cmp
dec
enter
fwait
daa
dec
sub
aas
mov
insb
mov
xor
scas
jnp
xchg
xor
loope
mov
pop
data16
sub
mov
mov
dec
xor
mov
div
inc
sbb
mov
push
xorb
imul
pop
stos
or
and
out
icebp
push
mov
int3
sti
or
repnz
into
cmpsl
dec
mov
xlat
sahf
pushl
mov
jns
in
cmpsl
int3
push
nop
ds
jae
mov
sbb
aaa
nop
dec
jmp
xchg
fwait
lods
inc
jno
movsl
sub
daa
mov
shlb
pop
cwtl
loop
lods
adc
adc
cld
arpl
sbb
inc
repz
xor
ss
cli
movsb
leave
jg
sbb
js
mov
stos
aad
sbb
scas
jge
adc
or
push
negb
dec
push
repz
mov
mov
push
pop
cmp
adc
insb
add
loop
call
aaa
test
push
test
orl
add
aad
arpl
inc
icebp
fwait
push
mov
lods
mov
loopne
adc
cs
iret
and
cltd
sbb
loope
pop
outsl
push
pop
dec
dec
cmpsl
jl
xlat
incl
adc
dec
bound
fistpl
fnsave
lock
push
xchg
test
dec
mov
lcall
loop
in
xlat
push
lret
sub
lods
cs
adc
mov
idivb
lahf
dec
and
mov
call
nop
add
in
std
mov
clc
cmpsb
fwait
ret
mov
add
sub
iret
lret
fwait
push
mov
inc
push
sti
xchg
push
push
scas
adc
cmpsl
sub
movsb
xchg
inc
movsb
push
enter
scas
sahf
outsb
pop
add
cmp
mov
stos
scas
pop
xor
dec
mov
or
add
jae
push
mov
mov
test
mov
cmp
mov
cli
insb
fstp
adc
jge
and
mov
xchg
testl
imul
pop
into
sbb
stos
test
lea
out
or
jp
push
jp
inc
or
and
loope
stos
adc
icebp
divl
lcall
pop
mov
inc
mov
testb
out
add
mov
mov
out
add
stos
gs
cmp
dec
fwait
adc
mov
rcl
out
inc
in
mov
lret
jg
cmovns
cli
mov
jp
ds
cltd
add
daa
mov
cmpsl
mov
pop
cmpl
push
push
fwait
mov
mov
jns
jno
cmpsb
pop
mov
sar
bound
mov
add
push
cmp
xchg
xorb
lods
punpckldq
mov
sbb
or
in
shl
test
mov
outsb
repnz
mov
mov
sbb
in
mov
add
js
mov
stos
and
xchg
push
mov
pusha
jne
ret
mov
ficoml
cld
adc
add
sbb
fsubs
sbbl
inc
sbb
xor
add
icebp
inc
jo
stos
ds
pop
mov
lahf
pop
cmp
fadds
in
pop
xchg
cmp
orb
insb
lret
repz
dec
addl
cmp
scas
jle
inc
xor
rorb
push
add
popf
jmp
xchg
fildl
enter
in
in
jg
mov
cmpsb
pop
movsb
bound
leave
iret
pop
jl
sub
aaa
mov
lahf
inc
incb
adc
dec
inc
mov
jne
xchg
dec
rclb
jno
std
mov
xor
inc
push
stos
aas
cmpsl
sbb
aam
negb
enter
mov
lock
jp
pop
xchg
out
stc
mov
jbe
adc
xchg
push
xchg
pop
dec
pop
pop
push
add
scas
insl
and
mov
dec
sub
xchg
jo
xchg
stos
add
lret
xchg
xor
mov
fstl
int
shl
daa
in
mov
mov
scas
cs
mov
scas
push
lret
cmp
dec
cwtl
in
xor
idivl
cmp
mov
dec
int
or
or
inc
out
iret
jne
dec
cmpsb
loope
xchg
push
ret
fwait
sti
lea
xor
adc
bound
xor
pop
testl
fldl
adc
icebp
rclb
scas
add
aas
arpl
in
mov
jle
jne
push
inc
icebp
add
lret
cmp
hlt
push
nop
inc
insl
ret
in
add
int3
pop
shll
xlat
or
dec
mov
gs
sahf
lods
xchg
sub
leave
adc
pop
mov
aas
loopne
rcll
jb
ret
sub
pop
inc
adc
sub
sbb
jp
pop
add
add
sti
adcb
adc
xchg
mov
lcallw
call
jmp
inc
insl
inc
adc
clc
aaa
pop
push
out
in
pushf
add
jp
mov
jp
cmp
lds
jle
pop
adc
in
xchg
pop
mov
cmp
aad
lahf
mov
xlat
sbb
inc
outsl
popa
rep
push
xchg
leave
cs
xchg
mov
mov
nop
or
ficompl
dec
xchg
imul
call
push
push
push
sbbl
add
mov
adc
mov
xor
sub
in
mov
fyl2x
sahf
cmpb
jne
leave
fwait
or
xor
pop
insb
testl
add
sub
add
add
mov
pop
cmc
mov
pop
pop
ja
sub
jge
add
and
lahf
jnp
adc
pop
and
inc
out
cltd
pop
imulb
and
and
sti
in
cmp
out
in
pushf
add
and
mov
cs
mov
adc
cmpsl
and
or
ret
pushf
imul
fdivrs
pop
aaa
xchg
decl
ljmp
pop
push
mov
in
sahf
sbb
or
jnp
test
add
test
loop
fs
cmp
lods
cmp
push
addl
push
sbb
cmp
outsb
mov
pop
sub
sahf
jns
push
scas
dec
dec
mov
stos
lahf
mov
test
push
pop
xor
mov
mov
stos
mov
scas
sub
fisttps
mov
movsb
or
cli
cmpsb
cmpsb
inc
scas
cmp
andb
icebp
xor
pop
or
pop
lds
dec
mov
sbbl
mov
in
fs
in
scas
loope
mov
imul
xchg
adc
popa
mov
and
sub
fwait
sarb
adc
pavgw
cli
leave
xor
cltd
or
js
lret
mov
inc
jo
fucomi
fistps
fbstp
xor
fisubrs
ljmp
loopne
jnp
and
inc
fcmove
and
nop
arpl
push
mov
jbe
mov
aam
cmp
les
pop
jae
pop
dec
or
aaa
cmpsl
sti
insb
add
cltd
xor
mov
jmp
adc
mov
addr16
mov
je
mov
jnp
sti
xchg
add
aaa
negl
faddp
repz
shrl
push
andb
xchg
je
inc
sbb
mov
mov
push
add
mov
sbb
dec
jl
mov
bound
cmpxchg
cltd
outsl
inc
jmp
cmp
rcr
xchg
das
pop
out
decb
aaa
push
mov
in
jo
in
test
cmp
test
pusha
xchg
enter
mov
rorb
xor
and
fidivrs
int
cmpl
pop
pop
jne
xor
out
mov
cwtl
cs
repnz
inc
sbb
ljmp
cli
insl
inc
xor
ret
mov
lret
cmc
in
ret
or
xor
sbb
fdivrs
imul
push
ds
test
fiaddl
mov
mov
xor
repz
jge
ds
jge
lds
je
gs
pop
sbb
dec
mov
sub
inc
out
sahf
or
pop
or
stc
in
cwtl
jnp
push
insl
inc
sub
push
inc
pop
lret
adcl
pop
add
and
inc
inc
dec
mov
sub
mov
mov
mov
pop
lock
loope
movd
insb
fcoms
and
sub
mov
popa
popf
cmp
inc
adc
int3
mov
adc
idivl
insb
inc
add
pop
sub
sbb
out
fbld
sbb
ja
dec
pop
in
cmpsb
fscale
sbb
movsl
pop
xor
xlat
add
int
ljmp
leave
test
and
int
push
int3
ds
ds
ret
pop
sbb
mov
shlb
ja
fistps
das
fxrstor
ds
push
insb
ljmp
cmp
sub
sbb
cmc
xchg
push
mov
fmul
adc
adc
mov
mov
pusha
shlb
dec
cmp
popa
sub
dec
repz
cmc
sbb
push
ss
movsb
jmp
int3
or
mov
or
adc
xor
lahf
or
mov
mov
pop
mov
lret
mov
je
adc
xor
cmp
jne
push
cmpsl
fstps
dec
inc
popf
xorl
sub
cli
mov
es
push
jle
in
jle
dec
rcl
sub
stos
jge
xor
test
pop
mov
test
dec
cmpsb
xor
inc
test
lret
pop
sbb
xor
daa
sti
testl
stc
insl
xchg
mov
jge
je
push
call
cmp
jae
cmpb
sbb
xlat
fsubl
pop
fidivl
int
daa
and
adc
test
sub
rcll
sub
xor
lcall
lcall
and
mov
mov
js
xor
and
sbb
movsb
xchg
push
fists
mov
in
adc
test
cmpl
sahf
mov
rolb
popf
sub
mov
sub
fcomps
or
adc
pop
inc
in
push
add
out
add
add
test
fstl
imul
je
aam
cmp
push
mov
push
push
out
sti
loop
xor
xchg
ffree
lcall
adc
sahf
loop
loope
pop
and
pop
mov
jns
mov
and
mov
pop
or
loope
fmul
pop
jne
sbb
adc
xor
jnp
fs
xchg
andb
rep
out
lahf
pop
lea
fbld
jge
inc
xor
shll
cmc
add
dec
test
lods
mov
addb
fwait
rorb
lock
iret
add
dec
jne
gs
test
or
mov
mov
bnd
lock
xchg
and
fimull
lcall
sbb
lret
jl
lods
movsb
adc
lods
cmp
lret
jle
test
mov
stos
add
xor
jp
or
repnz
das
add
hlt
insl
mov
fdivs
arpl
into
cmp
sub
inc
xor
icebp
gs
aam
idiv
push
ja
xchg
dec
aad
jb
fidivl
cmpsl
sub
fsubs
and
dec
jne
cmpsl
fistl
xlat
enter
rcrl
es
lcall
scas
das
add
fdivl
movsl
xchg
daa
loope
pop
shlb
xchg
enter
ret
mov
jmp
test
addr16
insb
mov
stc
inc
in
lret
out
daa
or
idivl
divl
in
nop
lcall
ss
fidivl
loope
cmp
cmp
arpl
movsb
int3
hlt
jns
in
and
inc
sbb
lods
jg
loop
imul
jl
aaa
mov
inc
cmp
push
mov
fistpl
orl
dec
or
ds
cmp
lahf
inc
cmp
and
xchg
cltd
mov
dec
je
ja
mov
push
loop
add
hlt
dec
inc
out
mov
fs
sbb
shrb
inc
or
inc
jmp
movsl
jo
ret
cmp
xor
cwtl
sub
jl
xchg
sub
xchg
mov
jl
inc
std
add
push
cmc
les
dec
add
mov
jae
cmp
fmul
push
lods
fcoms
flds
pop
dec
mov
int
sub
mov
ljmp
pop
movsb
push
pop
incl
mov
inc
mov
and
out
dec
dec
in
pop
mov
icebp
pop
outsl
pop
push
mov
stos
xor
enter
push
scas
jle
cli
stos
and
sti
icebp
pushf
cmp
hlt
fs
adc
add
add
sub
loop
mov
ret
test
insb
cmc
jecxz
xchg
xchg
nop
ret
mov
push
add
je
pushf
cmp
mov
cmp
or
js
mov
mov
test
mov
loopne
out
cwtl
mov
adcl
jp
push
add
addr16
mov
nop
inc
ja
sti
push
call
scas
outsl
mov
cmp
cmpsb
fs
jl
sub
add
orl
mov
xor
push
dec
mov
shlb
scas
dec
adc
pop
shl
mov
inc
mov
push
gs
xchg
xlat
and
in
ret
and
jbe
mov
repnz
sub
pop
dec
loopne
std
subl
sub
lret
arpl
pop
das
xchg
xorl
sti
scas
fmuls
in
push
cld
cmpsb
nop
lods
and
in
repz
out
movsb
sbb
xor
vmovdqa
jno
mov
jne
sub
cmp
ljmp
test
test
push
adc
imul
outsb
lret
insb
mov
mov
ud1
xor
fldcw
cld
adc
enter
jge
push
jbe
or
testb
xor
insl
mov
nop
in
nop
pop
mov
mov
fstpl
nop
scas
imul
pop
dec
sbb
outsb
dec
das
mov
jne
push
cld
loope
mov
rcrl
sub
sub
orl
add
dec
jns
mov
push
movb
push
sbb
shlb
ss
std
jns
sarb
xchg
rcrl
xchg
nopl
insb
aam
sarl
dec
mov
ja
or
mov
pop
sbb
xlat
or
xor
push
add
bound
pop
int
xchg
sarb
add
mov
lret
iret
imul
cs
fwait
xchg
push
in
fldenv
pop
sbb
fsub
jge
pop
inc
test
jge
xchg
scas
xchg
push
mov
jp
frstor
lret
fnstcw
loop
nop
maxps
in
sbb
pop
stos
pop
ret
fwait
sub
jmp
push
adc
cmpsb
and
xor
xchg
mov
push
dec
in
adc
push
sti
in
pop
lcall
mull
rorl
xchg
add
mov
push
in
cwtl
pop
xor
xchg
sbb
push
sub
daa
jecxz
in
or
bound
arpl
out
lahf
pop
adc
pop
imul
push
negb
pop
cmc
jge
pushf
jb
insb
jge
or
insl
cmp
call
mov
fdivs
inc
ret
mov
cli
sub
sub
push
rcr
sahf
mov
xchg
jle
cmpsl
cmpb
ss
mov
stos
sbb
add
adc
repz
push
mov
out
fisubl
scas
lahf
scas
mov
ljmp
inc
shl
sbb
outsb
pop
lret
sbb
test
rcll
jnp
xchg
jo
mov
dec
mov
das
outsl
hlt
push
push
xchg
mov
movsl
jle
mov
movsb
or
testb
ret
mov
push
inc
jno
pop
xchg
xchg
jg
add
push
int
sti
loope
das
jle
lods
idivb
int3
lods
pop
pop
pop
and
adc
adc
in
mov
sbb
ret
repnz
or
pusha
sbb
dec
sub
push
push
and
adc
jo
sbb
pop
leave
lds
or
ror
mov
push
fwait
pusha
shlb
jo
push
pusha
movsl
xchg
popf
push
inc
dec
lcall
pop
cli
call
shll
bound
mov
cmc
xlat
mov
cld
push
or
ret
push
bound
xor
scas
cmp
xchg
cmp
mov
jae
xor
mov
inc
push
test
fstl
or
iret
in
xchg
stos
test
out
addb
ljmp
addr16
cmp
cmpsb
into
cli
mov
mov
pop
ds
movsb
mov
cmp
stc
roll
repz
jnp
movsb
lret
shll
mov
mov
popl
insl
fstl
mov
jp
mov
int
adc
mov
into
sbb
out
xchg
mov
push
sbb
cs
aaa
popa
leave
movhps
inc
xor
inc
test
loopne
stos
sub
arpl
movsb
int3
xlat
das
add
and
imul
ds
sub
popa
nop
cmpsl
sti
pop
inc
push
lret
and
sbb
xchg
push
xor
jecxz
or
push
gs
fwait
pop
cmp
lds
cmc
mov
mov
mov
xchg
cli
lret
ds
mov
sub
sub
mov
sbb
ret
int
setae
sbb
mov
outsb
push
push
adc
test
icebp
pop
data16
shll
dec
loope
int3
out
aam
cmpsb
sar
stos
dec
push
mov
dec
inc
mov
addr16
push
push
cmp
pop
xlat
out
or
movsb
mov
mov
jns
pop
push
divb
or
in
pop
loope
pop
shll
pop
mov
add
mov
push
aas
cmp
push
and
push
mov
pushf
lods
lock
xchg
lods
mov
dec
pop
enter
or
mov
insb
pop
or
das
lea
adc
mov
mov
push
cwtl
add
mov
fistl
ja
dec
or
inc
popf
dec
ret
ds
and
mov
sub
idivb
cs
xor
cs
fwait
mov
dec
pushf
stos
jge
cwtl
dec
cmpsl
scas
stos
iret
adc
aas
sbb
pop
adc
in
mov
sahf
mov
cld
xor
mov
test
add
push
jbe
or
in
pop
stos
mov
movsb
xchg
pop
insb
mov
enter
pop
ret
daa
orl
lock
mov
mov
pop
xor
cmpb
test
push
mov
xor
and
loopne
mov
fisubrl
push
jg
cli
push
mov
xchg
scas
stc
jmp
in
adc
lret
push
pop
cmpsl
jae
mov
and
in
cmp
or
out
jge
das
fadds
daa
mov
and
sub
mov
fistl
lret
lret
imul
and
xchg
hlt
push
lods
fldl
dec
or
mov
push
mov
sub
sub
sub
adc
fs
mov
push
shll
xchg
subl
add
push
in
shrb
stos
cmpsb
mov
push
dec
sahf
mov
stc
cmp
ret
repz
jmp
jmp
ljmp
ds
adc
mov
pop
pop
xchg
outsl
mul
mov
add
cmpsl
pop
mov
jae
pusha
mov
xchg
out
jmp
or
scas
lret
xor
std
mov
xchg
insb
test
mov
and
push
sub
jne
fistpll
pushf
lahf
pop
mov
xor
mov
cmp
out
xorb
push
xor
sub
lret
ljmp
leave
inc
xchg
out
xor
adcl
push
ret
lock
add
inc
in
cwtl
push
ret
jo
and
jb
lods
adc
dec
push
cmp
sub
popf
lahf
lods
daa
pmaxub
movl
inc
ss
cmp
stos
inc
mov
imul
and
adc
jb
push
push
xchg
imul
test
cmp
daa
pop
or
xor
jnp
xchg
loop
or
add
popf
fmuls
or
sub
movsb
dec
popa
adc
push
or
aad
test
ret
mov
movsb
jns
std
shll
push
sbb
ja
sbb
mov
or
mov
aad
push
jno
xlat
cmc
iret
dec
pop
subl
mov
hlt
movsb
pop
andl
pop
aas
jmp
scas
mov
sbb
outsb
mov
fucomi
and
mov
xchg
hlt
les
mov
pop
mov
lret
mov
inc
adc
sub
inc
mov
inc
test
out
fbld
mov
arpl
ds
sbb
andl
fisttps
push
pop
mov
insl
mov
inc
out
mov
jmp
jno
daa
arpl
popf
add
push
jae
mov
or
pop
lods
push
stos
test
sub
sbb
clc
test
insl
pop
xorb
std
mov
stos
cmpl
xor
cmp
cmp
mov
sbb
je
stc
ljmp
pop
clc
jge
xchg
rolb
jecxz
mov
xorl
mov
inc
mov
ss
sbb
xorl
xor
jns
hlt
add
int
inc
sbb
jle
test
fisubrl
xor
fistpll
xchg
mov
pop
inc
test
fdivs
xchg
je
add
imul
mov
jmp
jo
iret
jmp
inc
je
aad
inc
loope
hlt
pop
add
mov
hlt
outsb
imul
add
cmpsb
pop
mov
gs
mov
jmp
cld
or
inc
adc
pop
jge
or
cmp
dec
test
jae
mov
mov
xor
mov
sbb
lods
into
int3
lock
xchg
icebp
mov
xor
mov
fists
sub
xchg
jmp
dec
and
sbb
ja
pop
dec
adc
testl
out
and
pop
out
pop
lret
pop
insb
sub
ds
leave
sub
adc
adc
std
sbb
cmpsl
ret
sbb
xchg
mov
mov
cmp
inc
xchg
jg
andb
sti
xchg
xorb
xor
repz
fdivr
mov
mov
xchg
lret
dec
in
fsubrp
cwtl
mov
addr16
dec
ljmp
adc
jo
mov
es
loope
rorb
add
push
push
xchg
mov
cmpsl
inc
dec
add
or
inc
pop
ds
and
scas
mov
mov
jns
pop
ds
push
sub
push
dec
push
test
divl
ljmp
pop
adc
pop
jp
stc
bound
pop
push
adc
add
jl
out
inc
mov
subl
insl
ficomps
scas
pop
pushf
mov
je
add
sub
and
ret
xchg
cld
jo
lds
rcr
filds
movsl
pusha
or
sub
or
outsl
xchg
movsl
sti
mov
inc
sbb
cs
imul
push
iret
add
add
rcll
xor
enter
pop
das
jp
gs
push
cld
lea
mov
fsubr
lds
add
rorb
arpl
cli
xor
pop
push
aad
sbb
cmpsb
pushf
rolb
ja
push
inc
mov
in
loopne
inc
cmpb
pop
jmp
push
lods
lods
mov
xchg
xor
jae
rclb
xchg
or
pushf
push
int
inc
cmpsb
jmp
je
mov
sbb
xchg
mov
add
and
into
mov
mov
jecxz
in
mov
add
aam
mov
sbb
mov
inc
dec
or
aam
cmp
ljmp
gs
sub
push
aas
sub
sbb
jp
xchg
pop
arpl
sahf
jb
push
mov
pop
mov
mov
cmp
std
pushf
lock
and
loop
cmp
mov
and
je
mov
cmp
sbb
movsl
mov
push
or
adc
out
cld
pusha
fbld
mov
cs
push
in
pop
inc
sahf
jne
mov
mov
adc
mov
sti
pushl
nop
adc
pop
shlb
push
imul
xlat
cmp
xchg
ljmp
jae
ljmp
daa
mov
outsb
inc
out
pusha
push
sbbb
lahf
nop
jecxz
mov
aad
or
ljmp
test
cmp
int
mov
pop
xchg
inc
test
nop
and
scas
mov
std
ret
cld
lret
repz
mov
add
loope
mov
sbb
or
pop
or
add
mov
pop
sub
cli
sbb
pop
add
ja
gs
popa
mov
call
xchg
mov
cwtl
aas
add
xor
rcll
xchg
mov
shll
loopne
mov
mov
mov
scas
test
xchg
aas
fstpl
jns
gs
stc
cli
aad
imul
add
lret
jge
ss
pop
inc
in
leave
add
mov
loopne
or
cmc
push
inc
or
test
into
push
xor
sahf
leave
inc
mov
mov
jno
movsl
int
add
jns
das
mov
out
rep
mov
push
fs
mov
out
or
and
cmc
scas
test
call
lock
jl
mov
mov
dec
popa
lahf
push
fwait
call
add
shrb
jo
mulb
pop
lock
add
mov
pop
sbb
scas
nop
sub
lret
xchg
xlat
mov
sbb
push
pop
add
dec
adc
xor
data16
in
aad
add
aas
xor
inc
xchg
mov
and
les
aam
cli
in
adc
sub
rcrl
jns
ret
xorl
stos
mov
mov
ret
out
jge
jns
dec
xor
scas
dec
gs
xchg
or
jnp
mov
mov
lret
mov
mov
fmul
insl
iret
fmuls
pop
addr16
sbb
flds
movsb
push
fidivl
lret
inc
xor
and
push
cmc
std
mov
daa
mov
mov
inc
mov
add
push
dec
rcr
nop
fs
insl
jb
repz
push
sbb
pop
xchg
mov
imul
outsb
scas
mov
adc
add
popf
jg
and
mov
mov
xchg
test
sarl
rcll
dec
jg
fildl
add
inc
int3
push
lds
pop
pop
aam
sbb
xchg
in
das
jae
ds
sub
jle
in
or
pop
mov
in
push
test
pushf
adcl
out
jae
mov
mov
aas
cmp
jne
loopne
inc
push
ds
sbb
cmp
mov
test
jge
jmp
cmp
xchg
inc
mov
bnd
lods
jl
push
sbb
jmp
out
mov
cmp
fstp
daa
into
popf
xor
in
push
stc
xor
pop
loope
jl
mov
xchg
out
js
or
push
sbb
pop
int3
lcall
fisubs
icebp
push
in
inc
cld
mov
push
outsb
mov
xor
adc
std
fnstenv
adc
jg
fstps
rcrb
lea
inc
xchg
xchg
and
inc
xchg
arpl
xorb
cmp
adc
or
cs
ljmp
fnstsw
pop
push
loope
sub
or
repz
sbb
push
xchg
aaa
cmp
movsb
popa
fucomp
loopne
cmpsl
jo
mov
xchg
fs
fnstenv
leave
add
stos
inc
sub
insb
minps
stos
add
popa
cmp
mov
sbb
mov
dec
cmp
les
xlat
aam
push
lcall
adc
cmpsb
push
inc
shr
xlat
iret
out
sbb
jp
jo
daa
mov
adc
xchg
jno
cld
loope
jno
push
sbb
add
ds
cmpsb
jmp
mov
mov
inc
enter
ss
push
inc
jae
mov
jmp
xorl
dec
sub
or
xchg
clc
jle
fnstsw
cli
dec
dec
jb
lahf
cmpsl
addr16
add
aas
sbb
clc
scas
mov
mov
jb
sbb
push
fistpll
lods
jo
addl
xchg
bound
andb
fistpl
fs
aam
inc
cli
and
ja
arpl
ds
scas
adc
sahf
mov
xchg
cmp
filds
add
inc
mov
jb
mul
xor
sbb
lret
loopne
adc
andb
dec
dec
dec
cli
and
xor
and
in
scas
ret
sbb
xor
addr16
sbb
pop
mov
ljmp
xchg
xchg
out
lahf
pop
sub
mov
sbbl
inc
inc
outsb
mov
cs
aas
movsl
loop
loopw
lea
movsb
pop
subl
pusha
aad
insb
sbb
mov
jns
movsb
xor
arpl
insb
fisttpl
mov
mov
movsb
sbb
sub
ret
shl
cli
mov
lods
scas
cmp
cmpsb
cs
das
or
or
es
xchg
clc
mov
insb
data16
xor
cld
or
sbb
sbb
jo
push
or
out
jmp
cmp
scas
xor
inc
cmp
cmc
mov
popf
sbb
dec
push
and
mov
mov
shll
roll
sub
xchg
lret
xor
repnz
dec
outsb
mov
and
scas
fidivrs
fldcw
ljmp
xlat
div
enter
ljmp
sub
and
xor
mov
mov
mov
shr
cmp
loopne
lds
inc
sti
mov
shll
xchg
jg
aaa
movsl
pushf
add
mov
outsb
xor
lods
dec
cwtl
cld
fists
push
sbb
mov
mulb
jmp
push
pop
push
sub
fisubrs
cmp
jo
loop
nop
rol
fs
cmc
pop
movsb
int3
int
mov
and
add
pop
xchg
fcompl
aam
xchg
and
lds
fnstenv
out
inc
and
jl
cmp
or
xchg
repz
cmpsb
repz
mov
mov
scas
in
mov
test
push
cmpsb
mov
xchg
call
and
jae
inc
inc
cltd
cmp
ds
fwait
loop
int3
pop
mov
outsb
movl
push
cs
sub
mov
sub
shlb
mov
jecxz
ds
aaa
cmp
cmp
mov
and
sbb
pop
cmpsl
insl
and
sbb
push
cmp
cmp
jnp
xor
aas
dec
cmpsl
arpl
jnp
ret
mov
cmc
int
dec
hlt
mov
in
cmp
std
in
lock
xor
mov
jecxz
repnz
loop
mov
js
mov
or
fs
mov
ret
mov
cmc
mov
sbb
mov
fs
or
adc
dec
ss
addr16
cli
xchg
out
and
cmp
mov
push
push
adcb
inc
inc
test
cld
xchg
mov
iret
jecxz
movsl
testb
adc
jne
inc
add
jmp
imull
pushf
lods
push
sbb
pop
stos
sub
xor
in
je
mov
push
lods
sbb
sarl
push
sbb
and
xorl
arpl
je
inc
xchg
in
inc
icebp
adc
gs
xor
jae
aad
leave
pop
out
rolb
mov
fwait
test
pop
cmp
es
popa
ret
sbb
les
push
mov
sbb
fwait
sti
mov
mov
mov
pop
scas
jmp
jl
enter
xchg
xor
addr16
cmp
xchg
gs
add
push
jb
popf
pusha
mov
jb
xchg
or
pop
add
mov
repnz
cs
fwait
xchg
push
lds
aaa
jge
mov
dec
cmp
movsb
push
out
mov
rcrl
adcl
mov
int
out
dec
xor
stc
outsb
jno
sarb
push
inc
and
adc
repnz
jnp
jne
xchg
mov
push
fcomps
cmp
add
push
lret
dec
test
fisubs
and
nop
sarb
mov
jmp
and
mov
or
jl
or
jbe
cmc
lods
xchg
jg
ret
push
bound
pusha
sub
inc
clc
jmp
jnp
repnz
imul
xchg
inc
inc
adc
out
movsl
ficompl
inc
cmp
jge
ret
cmp
imul
adc
sahf
sbb
sub
scas
js
call
pop
xchg
dec
cld
inc
in
sub
aas
sar
push
push
faddl
fisubs
sarl
inc
mov
ja
pop
nop
out
mov
pop
and
add
imul
in
out
stos
ret
add
xor
xchg
stos
jg
scas
gs
or
imul
aaa
mov
xchg
sbb
clc
rclb
pop
fstpt
out
frstor
ja
cmp
push
lcall
dec
addr16
imul
gs
xor
or
rolb
mov
inc
xchg
xor
cs
bound
xchg
in
test
mov
push
lock
sbb
arpl
sub
mov
rcll
rcll
cs
jmp
scas
popf
fstps
cs
xor
cmc
jns
mov
push
xchg
or
lea
movsl
idiv
popa
xor
cld
movsb
aam
xchg
xor
shlb
mov
mov
dec
pop
das
sahf
data16
and
cmp
leave
movsb
in
mov
xchg
pop
jg
cmp
and
cmp
popa
repnz
lcall
stos
mov
arpl
shl
je
and
or
xchg
xchg
pop
or
shld
scas
out
movsl
and
jno
xor
cwtl
test
pop
stc
or
xorl
lds
jecxz
stos
pop
stos
std
rcrb
mov
adc
inc
shlb
imul
pushf
sub
fisubrs
pop
jae
adc
dec
aas
pop
outsl
jbe
in
jle
sbb
mov
mov
lahf
or
jne
out
push
or
dec
sbb
hlt
in
add
push
shl
dec
xchg
xchg
dec
movsl
repnz
cltd
rcrl
in
push
aad
xchg
push
push
sub
jne
mov
or
adc
xchg
xchg
repz
pop
pop
push
in
mov
xchg
fwait
bound
enter
out
inc
and
mov
mov
icebp
pop
cmp
pop
or
mov
jno
lods
sub
mov
pop
mov
aaa
pop
movsl
lret
xorb
loop
les
test
cmovg
sub
dec
ljmp
or
mov
push
mov
movsb
call
ficoms
mov
icebp
test
or
mov
add
imul
add
pop
nop
cmp
out
pop
imul
add
jmp
jae
sbb
aas
enter
fprem1
mov
xor
jg
push
add
add
jg
add
stc
in
dec
xchg
imulb
insl
mov
ret
mov
fstpl
int
mov
pop
je
adc
or
je
jle
push
lcall
mov
pop
inc
sub
fcompl
js
cmp
into
cmpsl
xchg
add
lcall
ret
cmp
add
imul
pop
pop
push
add
insb
pop
repz
xor
pop
or
cmp
icebp
fcomip
jbe
or
add
test
cmc
movsl
lea
cmpsl
adc
dec
cmp
sub
push
mov
loop
lret
bnd
inc
xor
ret
xchg
loopne
insl
int3
cmp
xchg
xchg
sub
lock
inc
jnp
cli
rclb
pop
xor
fisubrl
push
or
pop
or
adcl
call
lret
icebp
add
xchg
pop
cmp
and
das
xor
stos
jmp
jl
adcb
jg
lcall
lds
js
ljmp
outsb
sbb
jno
or
call
arpl
jmp
cmp
stos
push
jne
stc
inc
int3
shlb
lret
push
or
call
fs
xchg
aaa
icebp
mov
cmp
inc
xor
mov
dec
mov
add
sub
push
fwait
mov
xchg
stos
cwtl
ljmp
and
xchg
enter
xchg
jecxz
std
imul
repz
popf
jecxz
jno
mov
mov
jne
pushf
push
mov
sti
pop
je
xor
test
xchg
pop
or
outsb
pop
xor
xor
push
leave
cld
popa
push
dec
xchg
lcall
test
sbb
push
xor
or
fmull
xchg
iret
xchg
shlb
outsl
xchg
xchg
sarl
scas
adc
jmp
pop
aas
jmp
rcll
add
mov
push
cwtl
mov
std
add
mov
cmp
insb
xchg
lds
cmpl
xchg
dec
push
pop
aad
or
mov
push
dec
cmp
daa
push
int
adc
and
inc
scas
and
fcomps
lea
setns
mov
popa
clc
cmpxchg
call
jge
cmp
cmpsb
lock
mov
lahf
jg
popa
iret
inc
jg
cmp
xor
cmp
sub
idiv
cmp
stc
xchg
push
dec
pop
dec
push
jl
mov
je
sahf
or
push
sub
bound
clc
repnz
xchg
movsl
out
pop
fcmovnbe
dec
pop
mov
ret
inc
test
repz
adcl
lret
add
lret
fs
inc
jnp
sub
xchg
cmp
movsl
add
or
ret
push
dec
filds
mov
mov
cld
adc
push
xchg
sbb
add
mov
stos
mov
pop
cmpb
push
aad
pusha
mov
jge
cmpb
into
push
cmp
negl
jl
cmc
push
pushf
cmpsb
pop
jg
cli
push
dec
aas
mov
push
and
xor
rcr
jno
cmpsb
in
les
sbb
movsb
mov
pop
sub
or
pushf
mov
push
cmpsl
sub
ss
jae
mov
jle
lds
jno
loop
call
mov
lea
mov
xchg
cmp
xor
sbbl
das
repnz
scas
cltd
add
xchg
or
pop
push
ror
inc
pop
mov
or
mov
cmp
fldenv
aam
sub
sbb
cltd
adc
pop
rclb
mov
push
fs
sbbl
addr16
jns
add
and
cld
lret
imul
jmp
fwait
xchg
movsl
adc
jbe
pop
and
cmp
sbb
fnsave
push
jg
sbb
sub
jbe
xchg
mov
or
insb
rol
push
pop
push
ss
lahf
and
mov
stos
imul
imul
hlt
add
ror
and
cmp
repnz
fsubs
sbb
add
dec
adc
ret
push
adcb
inc
inc
and
push
aad
cli
ret
xchg
push
mov
sbb
or
cmp
rcll
cmp
lahf
jno
mov
shlb
lds
dec
xchg
ljmp
mov
lods
andb
mov
cmp
daa
jae
add
out
xor
cli
push
les
out
in
outsl
lret
int
push
fs
add
sbb
xchg
aam
insb
ss
je
out
add
repz
in
icebp
jle
add
fimuls
mov
pop
add
mov
jge
mov
xor
xchg
aas
jns
cmp
mov
movsl
loop
clc
or
or
sub
je
push
dec
jnp
or
add
test
xor
mov
movsb
stc
icebp
nop
aam
ss
adc
out
sti
or
xchg
aad
cltd
or
les
js
loopne
mov
movsl
add
xor
xor
fiaddl
mov
pop
addr16
mov
mov
shlb
and
call
jecxz
outsb
adc
mov
sbb
xlat
movsl
sbb
push
iret
mov
rorl
xchg
int3
cli
fs
xchg
push
pop
add
ja
daa
nop
out
inc
test
insl
bound
aam
add
sub
cmp
mov
call
push
call
fwait
push
fsubrl
decl
mov
ljmp
int
lea
movsl
xchg
adc
sbb
mov
cwtl
sahf
pop
adc
xchg
inc
std
movsb
cmpb
sub
push
adc
dec
ds
jecxz
xor
lahf
dec
push
js
cmpsl
and
mov
les
sub
push
lods
mov
ror
out
adc
push
mov
jae
decl
dec
int3
lods
pusha
mov
push
and
mov
daa
cmp
dec
subl
jb
aam
dec
into
xchg
mov
dec
xlat
pop
xor
dec
stc
cmpsb
jno
and
inc
mov
push
adc
pusha
or
jl
jns
dec
lret
insl
insl
imul
jns
rcrl
push
xorb
inc
dec
cmc
inc
cmpsl
jge
call
pop
push
fbld
jns
cmp
inc
push
vpsrlq
ljmp
mov
ja
cld
cmp
int3
daa
lea
sbb
leave
push
stc
lock
in
xchg
and
fwait
sbb
test
lods
iret
out
clc
and
sbb
inc
cli
xchg
loop
mov
rorb
inc
int3
popa
arpl
outsl
xlat
pop
lret
add
ret
fisubrl
xchg
je
jne
pop
popf
rorb
shl
mov
mov
shrl
add
movsb
pop
push
push
sub
aam
divl
scas
mov
fadd
popf
addb
jmp
sbb
xor
icebp
movsb
mov
lock
push
data16
call
and
sbb
xor
push
repnz
mov
fcoml
xchg
test
pushf
pop
jb
and
add
out
push
sub
decl
push
test
leave
and
mov
sahf
mov
mov
pop
sub
stos
mov
pop
xchg
lret
sbb
js
mov
push
js
cmc
jo
fwait
or
dec
cs
repz
add
test
pop
outsb
cli
jmp
frstor
shlb
dec
mov
mov
int
xor
insl
ret
imul
ja
adc
push
rorb
add
pop
cmp
in
jle
push
out
push
mov
lret
mov
fiaddl
mov
push
sub
daa
nop
mov
mov
push
push
cmp
jae
hlt
mov
mov
inc
pop
lahf
fsubs
jp
xchg
xchg
mov
jne
xchg
adc
pop
push
insl
out
arpl
sub
test
jno
dec
push
dec
hlt
cmp
mov
cmp
and
es
mov
mov
cld
inc
xlat
insl
push
outsl
bound
xor
and
dec
or
push
sahf
pop
sub
js
and
mov
int
sbb
ficompl
pop
mov
mov
js
sarb
mov
shl
es
sub
std
cmp
mov
das
daa
and
pop
xchg
test
imul
negb
lods
jo
push
fisubl
dec
jb
pop
lods
mov
test
in
cmp
arpl
dec
sbb
test
decl
push
push
movsl
cwtl
icebp
lds
out
xorb
mov
ljmp
fisubrs
adc
test
push
add
loopne
stc
sub
mov
ret
pop
sbb
stos
mov
bound
fiadds
or
or
sbb
mov
dec
nop
shr
mov
and
je
ds
repnz
gs
lret
lock
pop
push
jp
lret
fs
pop
pusha
mov
jl
aas
fbld
sbb
cli
push
pop
loopne
lcall
xchg
jns
imul
enter
mov
in
add
lock
xor
adcb
xchg
insl
cmpsl
nop
sub
iret
imul
es
adc
mov
cmpsb
or
lahf
pop
lret
cmp
cmp
ret
imul
scas
stc
xchg
add
iret
ret
pop
inc
xchg
movsb
mov
mov
mov
pusha
or
adc
sub
movsb
and
xchg
test
cmp
cld
addr16
pop
mov
inc
mov
daa
rclb
lods
push
add
outsb
leave
add
addr16
cmpb
fiaddl
fsubr
xchg
lods
movsl
or
add
xchg
mov
cmp
or
or
in
ja
es
pop
jle
add
cmp
pushf
in
arpl
mov
add
jl
lea
loopne
imul
mov
out
jne
push
rcrb
xchg
rol
jb
xchg
mov
push
push
xor
aad
int
sbb
andb
mov
rorb
fisttps
push
ret
xor
xor
das
rcr
jbe
xor
lret
inc
mov
lret
lret
pop
in
and
aam
inc
xchg
sti
add
call
lret
xchg
ror
xchg
mov
dec
sub
out
inc
xchg
mov
outsb
mov
cmp
inc
add
cmp
ret
pop
adc
or
push
dec
adc
cmp
xor
imul
shrb
mov
cmpsl
bound
icebp
inc
sub
in
mov
xor
ret
cltd
pop
dec
jne
sub
les
out
or
lea
inc
cmp
shl
arpl
push
inc
add
imul
cmc
data16
pop
scas
stos
jnp
mov
iret
sahf
scas
jb
stc
jno
jae
mov
push
fnsave
in
pop
outsl
imul
je
sub
sarl
cmp
and
adc
mov
mov
push
test
xchg
add
test
lods
rolb
sbb
adc
pop
int3
push
iret
test
mov
xchg
jno
out
enter
stc
or
lock
xor
xor
xchg
addr16
jmp
sbb
or
test
maxps
adc
push
adc
rcrl
clc
fisttpl
pop
and
lcall
or
fdivl
mov
adc
cmp
imul
or
imul
popf
jne
movsl
pop
jnp
jbe
test
jb
jne
xchg
movsl
mov
xchg
push
into
aas
jnp
sbb
cmp
xchg
int3
movsl
jmp
pop
pop
mov
cltd
lods
mov
inc
pop
pop
inc
or
or
lods
adc
mov
mov
xor
push
mov
pop
sub
mov
mov
mov
push
jp
push
jne
cmp
out
push
mov
out
jne
xchg
add
mov
ss
fucomip
adc
repnz
mov
jnp
rorb
iret
jp
mov
adc
pop
pop
sbb
lock
repnz
jnp
test
pop
in
fwait
or
lahf
adc
xchg
xor
jmp
shrb
dec
jmp
notb
call
pusha
bound
inc
cmp
lds
sti
inc
sub
push
pop
xchg
lods
lahf
out
mov
push
xor
add
cmp
js
gs
sar
lock
in
dec
xchg
outsb
pop
jge
adc
push
fstl
in
pop
xor
sbb
jb
mov
cmpsb
setns
sbb
push
sub
lret
lcall
cld
xor
inc
je
jle
mov
dec
pop
cmp
lret
jno
aas
aad
sub
add
cmp
and
fimull
pop
cli
xor
add
jno
pop
adc
mov
jmp
and
xchg
xchg
cmp
jns
mov
call
jecxz
add
cmpsb
mov
cmpsb
lea
and
add
cmp
dec
mov
mov
pushf
cmp
push
lcall
pop
movsl
mov
mov
lock
test
addr16
cmpsb
inc
cmp
jmp
xchg
jl
shrb
int
sub
push
adc
fnstsw
or
loopne
stos
push
shll
fs
mov
insb
mov
cs
sub
pop
xlat
subl
xor
in
arpl
dec
lahf
cmp
lds
jge
cmp
shrb
jp
sti
das
cwtl
sub
mov
mov
jno
or
xor
sahf
les
add
mov
js
ret
xchg
aas
mov
push
mov
and
and
mov
xor
ret
je
out
fnsave
rolb
mov
cmp
xor
fdiv
stos
xchg
pop
shlb
cmp
push
es
cwtl
jae
stos
pop
cmpsl
mov
popl
xchg
mov
jecxz
jg
pushf
pop
push
sti
mov
adc
pop
inc
mov
xor
rcr
ret
xor
cmp
enter
xor
mov
xchg
fdivl
data16
xchg
dec
add
add
subl
jl
ja
mov
pop
icebp
and
dec
jecxz
sbb
jg
fimull
lahf
inc
pop
adc
sahf
hlt
jl
push
mov
cld
push
mov
stos
sub
cmp
stos
dec
sub
cmpsl
sbb
adc
pushf
test
adc
dec
jge
sub
inc
ficompl
out
test
mov
sahf
sbb
cwtl
mov
push
push
mov
pop
and
mov
or
cwtl
rclb
sahf
mov
test
sbb
cli
push
pop
clc
jae
test
cmpb
insl
and
cmp
ss
ds
xchg
jns
jecxz
or
or
dec
push
pop
mov
pop
daa
dec
dec
lds
jge
jns
testb
cltd
jae
pop
cmp
lret
push
lods
lcall
pop
mov
push
popf
fs
scas
xor
insb
mov
stc
in
jecxz
adc
push
ret
bnd
adc
adc
lock
mov
push
fsubrl
call
or
sub
ret
mov
test
fisubrs
xchg
mov
mov
mov
mov
and
dec
cmp
adc
push
aam
xchg
push
lret
cmpsb
loop
pop
loop
inc
push
test
mov
jae
pop
lahf
leave
aas
inc
xor
lods
sahf
outsb
lret
rcll
shlb
stc
jno
into
loope
push
sbb
sbb
pusha
icebp
cmp
add
lds
or
jge
pop
iret
sub
xor
push
insb
test
lret
pushf
pusha
aas
jbe
addr16
notl
push
in
movsl
adc
insl
mov
mov
adc
int3
rcl
loopne
or
leave
loopw
mov
pop
popa
lret
pop
jae
mov
inc
jnp
jl
jb
jmp
shlb
rcr
mov
pop
daa
or
test
fisttps
loop
mov
movsb
out
out
or
js
inc
cmp
or
pop
testl
ret
gs
lods
out
dec
add
fucomi
pop
add
dec
mov
inc
adc
cmp
push
lock
pusha
in
fs
jb
outsl
mov
lea
sti
jmp
push
dec
repz
xchg
pushf
neg
dec
stos
std
ja
in
scas
nop
jbe
pusha
fiaddl
sub
jne
push
sub
clc
xchg
sti
xlat
xchg
mov
cmovs
push
out
in
and
test
add
push
jbe
lock
insb
cmpsl
push
lock
mov
imul
pop
inc
mov
pop
adc
clc
inc
jmp
lahf
pop
jne
mov
imul
pop
out
subb
and
or
mov
xchg
sbb
dec
sub
scas
test
jle
fmuls
adc
out
xchg
aas
inc
ret
xor
pop
popa
dec
mul
ljmp
mov
xchg
mov
push
pop
pushf
psrlq
fisubrl
mov
popa
lret
test
ljmp
fidivrs
xchg
lds
aad
loopne
xchg
or
jle
mov
pushl
mov
popa
inc
jecxz
out
xchg
dec
insb
xchg
jno
pop
mov
nop
and
notb
stc
mov
jne
enter
gs
mov
sbb
cltd
fcomp
fnstcw
icebp
shl
clc
addr16
jl
test
mov
inc
xchg
jbe
adc
and
ljmp
mov
push
inc
cwtl
into
mov
insl
jae
xchg
clc
pop
xchg
gs
popa
lret
shlb
xlat
ja
cmc
sub
addl
lea
xor
test
sub
arpl
sbb
jecxz
mov
sbb
popf
mov
push
test
cmp
mov
adc
stos
xchg
xor
push
xor
out
add
jne
rorb
ret
sbb
and
adc
sub
leave
mov
fiadds
sbb
int
mov
inc
jb
das
inc
jno
data16
notl
push
jecxz
mov
pop
fidivs
and
lahf
repz
fisttpll
push
sbbl
pop
jne
xchg
clc
test
jl
pop
test
cld
mov
fwait
mov
pop
and
sub
push
jp
sub
sti
adc
mov
movsb
and
mov
jecxz
out
gs
shll
mov
xchg
sub
push
es
sbb
shll
cmp
xchg
shll
jno
cmp
and
int
push
jnp
add
aaa
or
xor
sti
dec
jmp
or
or
ds
push
xchg
and
je
mov
loopne
in
mov
cmp
inc
lods
pop
icebp
mov
jg
push
sbb
push
pop
dec
fnstcw
test
inc
adc
adc
cmp
adc
into
out
push
fwait
movsb
adc
xchg
pop
add
add
xchg
lcall
xor
movsl
cmp
sbb
insl
negl
mov
add
dec
pusha
stos
data16
das
xchg
sub
jbe
pop
cmp
arpl
addr16
pop
ret
adc
scas
cld
xchg
sub
sbb
xor
or
mov
clc
lahf
cltd
mov
xchg
repz
pop
movzwl
int
mov
add
inc
int
push
adc
fdivrs
add
leave
rcl
jae
mov
lahf
cmp
cmp
movsb
mov
je
cmp
hlt
rcrl
test
cmp
adc
mov
addr16
jmp
outsb
pop
xchg
std
cld
enter
dec
mov
pop
out
insb
add
nop
mov
stos
xchg
dec
enter
rcl
popa
or
mov
iret
insb
aam
and
popf
push
std
add
or
test
or
ds
jns
js
jmp
mov
sub
pop
adc
adc
out
out
push
or
int3
jecxz
in
js
insb
iret
sub
mov
push
push
testl
imulb
outsl
pop
add
cmpsb
and
jb
and
jl
or
add
sub
jae
loopne
mov
rclb
loope
daa
or
sbb
test
aad
fcoml
dec
jno
repnz
nop
and
pop
jae
out
stos
sub
and
outsl
pusha
sub
scas
aas
dec
pop
pop
jle
mov
push
data16
jecxz
dec
push
loopne
pushf
fs
and
ficomps
lock
xchg
mov
sbb
repz
mov
mov
mov
xchg
add
loopne
add
mov
push
enter
scas
test
inc
mov
mov
enter
enter
repnz
dec
jb
dec
inc
cli
sbb
ja
mov
jp
stc
dec
es
mov
sti
mov
xor
sub
shrb
loope
ljmp
mov
imull
stos
mov
outsb
repz
mov
sub
inc
pop
xor
daa
cmp
fistpl
mov
cmp
outsb
xchg
je
sub
pop
cmpsb
adc
sub
add
adc
out
add
mov
aam
push
lods
sahf
mov
mov
sub
adc
sub
xchg
jns
jno
stc
lock
push
fcomps
stc
xlat
mov
shl
pop
pop
out
mov
arpl
movsl
adc
mov
lea
cs
push
jl
repnz
add
pop
pop
loop
subl
sbbb
adc
adc
adc
push
in
inc
inc
in
and
mov
clc
fbld
in
xchg
les
ss
adc
outsl
dec
mov
leave
mov
push
fwait
aas
shl
aam
xor
push
jae
push
popf
dec
adc
les
pop
in
loopne
test
or
aaa
outsl
sbb
xchg
push
clc
fsubrs
imul
xor
popf
cmpsb
insl
jp
mov
or
pop
shrl
adc
shrd
inc
movl
pop
dec
pop
push
add
hlt
sub
test
lcall
stos
loopne
enter
sub
or
je
and
int3
mov
pop
dec
mov
xchg
jl
mov
es
movsl
pop
flds
pop
out
push
add
out
jnp
adc
sti
mov
aas
sub
or
mov
andl
jecxz
popf
jp
and
enter
jg
rcrl
scas
jecxz
roll
push
fs
cmp
sbb
faddp
addr16
cmc
and
xor
or
pop
insl
pop
int3
and
fstpt
lea
mov
stc
iret
clc
fs
divl
aaa
subl
repnz
int3
add
repz
ss
pop
aam
scas
jne
hlt
sub
sub
adc
mov
int3
icebp
test
sahf
sti
sub
adc
xor
pop
sbb
cmp
push
mov
xor
jge
cwtl
data16
mov
xchg
sub
pop
outsl
push
xchg
push
in
mov
rcrl
imulb
push
outsl
lcall
add
js
mov
sbb
mov
inc
leave
push
call
ja
jbe
jne
sbb
icebp
lret
add
test
inc
fnsave
clc
in
pop
mov
cs
lods
inc
out
cltd
jp
rcll
jg
scas
pop
dec
sub
mov
repnz
mov
stc
add
lret
cmp
mov
shlb
cmp
loopne
jle
push
xor
dec
mov
and
cld
pop
cmpsb
xchg
jg
mov
xor
inc
rcl
pop
cmp
pop
or
bound
repz
subl
xor
mov
stos
pop
adc
lcall
in
and
int3
cmp
or
or
pop
out
mov
je
stos
sub
lods
test
or
mov
or
outsl
inc
jno
ljmp
popf
mov
jns
sbb
and
sahf
mov
and
jns
adc
pop
cmp
and
push
mov
scas
in
cmp
add
jp
imul
pop
jnp
out
push
mov
stos
pop
fldenv
push
movsb
push
shll
mov
stos
adc
lahf
lret
aaa
jno
fsubs
pop
fs
adcb
mov
inc
adc
aam
loop
or
xlat
cli
insb
test
mov
mov
sbb
adc
xor
repnz
das
and
ret
jbe
xchg
push
jecxz
xchg
jg
sub
into
sbb
mov
sub
ljmp
pop
popf
push
pop
enter
or
push
js
push
sub
xor
sub
or
adc
cwtl
xor
push
iret
mov
or
call
xor
test
aaa
adc
or
orl
repz
cmp
add
dec
fistpl
xchg
or
and
inc
push
mov
push
inc
jno
add
stos
ja
dec
inc
dec
test
pop
inc
adc
int
ljmp
int3
in
jmp
cmp
in
xlat
aam
jle
scas
arpl
cmp
jns
and
in
stc
xor
sbb
imul
ficoml
xchg
shll
mov
ja
pop
ret
add
clc
push
inc
or
sub
jns
jmp
sbb
pop
or
cs
orb
mov
rcrb
test
adc
pop
scas
dec
mov
sub
add
idivl
pop
pop
mov
out
jbe
jl
out
fmuls
push
movsb
mov
cmc
roll
fldcw
ja
push
xchg
xchg
mov
xor
adc
or
adc
mov
jmp
and
sbb
push
test
pop
push
inc
pusha
test
xor
sbb
push
push
sub
pop
les
rorb
mov
hlt
movsb
add
ret
and
subl
arpl
add
mov
mov
cmc
pushf
sub
rorl
lods
sbb
push
add
movsb
lret
sub
aad
jl
fbstp
loopne
stos
cwtl
sbb
mov
ljmp
adc
xor
out
arpl
out
push
push
cltd
mov
movsl
jo
mov
cmp
repnz
jo
jmp
mov
add
xor
movsb
cld
sub
adc
and
fwait
cmp
sbb
dec
ljmp
jecxz
stos
lods
shlb
dec
push
sub
xlat
xlat
fstpl
pop
pop
xor
xchg
popa
cmpsb
sbb
outsl
sub
pop
xchg
aam
iret
and
dec
rcrb
mov
pop
mov
inc
fisubl
sbb
pop
jg
clc
and
lahf
push
sarl
mov
leave
repnz
dec
ss
sbb
repnz
imul
xchg
add
imul
adc
dec
and
shlb
mov
stos
add
cmpsb
cmp
arpl
pop
stc
rclb
outsl
adc
into
out
outsl
inc
push
es
testl
mov
out
pushl
xchg
icebp
int
push
inc
std
int
lret
fistpll
loope
lods
mov
or
popa
pop
jle
cmpsb
jecxz
sbb
aas
and
mov
adc
leave
jge
out
iret
mov
repz
push
sbb
inc
mov
cmpsl
inc
cmp
dec
or
mov
dec
data16
in
mov
lds
and
cmc
push
outsl
push
xorb
or
out
cli
dec
xor
nop
mov
in
dec
pop
iret
sbb
push
xchg
push
mov
out
lahf
push
inc
cmpsl
pop
les
divl
insb
jne
and
xchg
mov
cmc
es
jae
or
out
loop
xor
push
sbb
add
jo
outsl
jb
fldenv
pop
mov
jo
in
mov
out
popa
mov
fidivrs
lds
cmp
out
iret
in
xchg
fnsave
xchg
jg
xchg
push
das
adc
stos
push
lock
sub
or
push
cltd
push
rolb
cltd
mov
sub
test
pop
mov
xorb
repz
jl
push
pushf
dec
jbe
insb
fldl
inc
inc
push
enter
iret
adc
mov
test
ret
xchg
add
add
add
scas
out
ret
sbb
dec
mov
sbb
ja
mov
in
scas
imul
and
fiaddl
xchg
cmp
xor
push
push
repnz
cmpb
aam
sub
cld
dec
out
ss
leave
adc
test
mov
stos
pop
loopne
cmp
mov
lahf
rcrl
ficomps
inc
add
out
loop
add
jae
or
push
xchg
sub
divb
ret
repnz
icebp
jne
aad
out
lret
jp
fucomi
mov
fwait
jmp
cmp
int3
add
idivl
test
push
jge
rcrb
cmp
popf
cmc
fisttpll
fimuls
jge
jmp
lods
loope
jl
push
ljmp
iret
sarl
call
out
pop
icebp
cltd
sbb
mov
mov
xchg
adc
sahf
inc
mov
xchg
xor
fistpll
mov
fmull
outsl
mov
add
aaa
adc
inc
test
xchg
sarb
fs
imul
xchg
jmp
dec
ret
pop
negl
popa
xchg
pop
inc
pop
lods
sub
dec
add
xchg
leave
pop
and
sbb
fxch
xor
gs
pop
add
cmpl
mov
cli
rorb
pop
cmpb
sahf
cli
out
adc
jmp
ret
xchg
repnz
mov
jno
dec
test
xor
sub
sarb
or
jns
stos
cmpsb
cmp
cmc
sub
or
adc
js
hlt
push
mov
sarl
arpl
push
xchg
ljmp
and
fidivs
pusha
jge
mov
dec
adc
jbe
scas
iret
push
sahf
fdivs
mov
scas
push
cld
mov
mov
mov
mov
or
dec
fcoml
mov
cmp
ud1
xor
sbb
int3
cmp
test
popf
pop
cmc
push
or
or
lods
inc
push
insl
incb
aam
out
adc
arpl
cmp
jo
enter
jle
test
fimull
sub
dec
stc
jle
pop
sbb
rcl
movsl
push
push
and
fnstcw
imul
inc
out
add
orb
sar
test
dec
mov
ljmp
or
sub
sbb
xlat
xor
fcmovnbe
inc
stos
bound
xchg
out
das
sarb
sub
push
loop
jnp
pop
and
in
jp
repz
stc
shlb
test
jg
push
movb
xchg
add
jo
inc
add
sahf
cmp
in
xchg
sub
ja
and
xchg
mov
mov
sub
xlat
sub
push
outsl
in
xor
in
jge
adc
cmc
sbb
push
mov
jg
jno
sbb
out
push
add
popa
mov
ret
test
xchg
rolb
fistpll
in
xlat
xor
lods
push
sbb
shrl
sahf
add
or
xor
insl
pop
cld
add
inc
push
mov
inc
xor
stos
je
pop
in
jecxz
sub
repz
scas
pop
cs
cli
xor
ficomps
orb
jmp
adc
jmp
enter
pop
inc
cmp
cmp
xlat
mov
cmpsl
mov
aas
aaa
cltd
dec
cmpb
aaa
gs
iret
sbb
sahf
in
inc
dec
jae
inc
sub
lret
cwtl
add
dec
in
or
aas
fnsave
add
sbb
cld
call
sbb
addr16
icebp
pop
adc
in
div
pop
ss
insl
and
andb
imul
sbb
stc
fldenv
xchg
sbb
scas
int3
outsl
and
mov
mov
lods
cmp
push
outsb
test
lcall
flds
jmp
pop
cmp
mov
push
repnz
cltd
std
pop
adc
test
inc
sub
xor
cmpsl
push
jo
sti
adc
fisttps
inc
dec
aas
insb
movsl
xor
hlt
adc
gs
int
or
data16
sbb
add
call
xor
mov
test
xlat
push
xor
mov
sarl
test
dec
stos
mov
xlat
int3
imul
into
mov
dec
ds
pop
test
xor
mov
test
jb
dec
or
mov
pop
xchg
pop
xlat
sbb
cld
aam
mov
sub
out
fcomps
lret
lds
jnp
test
stos
or
adc
lods
mov
enter
jp
xchg
fldenv
push
insl
pop
mov
gs
enter
xchg
nop
repnz
cs
adc
mov
adc
outsb
test
fcmovb
pop
push
inc
or
mov
dec
cmp
dec
sbb
cmp
inc
xor
jle
mov
in
das
imul
and
xchg
jne
call
imul
push
orb
mov
cli
mov
sub
mov
xchg
movsb
push
and
xor
mov
adc
repz
dec
jmp
and
jbe
cmc
sbb
std
cmc
adcb
cmp
movsb
fisubl
push
jbe
mov
xchg
data16
in
xor
ja
pop
daa
hlt
push
dec
jne
push
mov
pop
xchg
in
adc
mov
out
jmp
xchg
movsl
mov
cli
adc
icebp
dec
pop
cmp
cs
push
in
push
pop
repnz
fwait
xlat
push
dec
bound
fnstenvs
xor
fisubrs
pop
or
imul
sbb
xor
inc
add
sub
add
ljmp
xchg
add
pop
xor
stos
lret
cmp
mov
cmp
jne
sarl
aas
ja
sbb
movsl
pop
push
cmp
push
xor
dec
xchg
pop
scas
cmp
xor
jae
adc
outsb
mov
testb
cwtl
xchg
push
dec
in
add
ds
lea
fdivrs
adc
arpl
fadds
test
lods
sub
pop
mov
xchg
push
xchg
lock
hlt
xchg
lret
cli
dec
sub
in
jbe
mov
das
aas
stc
bnd
psubq
add
rcrb
xchg
in
pop
jnp
orl
sbb
inc
mov
cli
int
into
lods
out
rorb
mov
rcl
pop
jo
dec
jg
test
mov
and
je
lcall
push
adc
jo
jmp
adc
jne
cld
mov
call
shll
jecxz
push
inc
cmp
xor
push
xchg
push
frstor
fwait
jno
jne
clc
movsb
imul
aaa
or
and
addr16
or
pop
std
mov
shlb
adc
out
pushf
mov
jg
push
hlt
jns
test
and
mov
inc
pusha
sarl
frstor
jne
popf
pushf
ret
divb
loop
pop
cmp
dec
lret
test
jp
arpl
jmp
jo
imul
loop
repnz
aas
mov
xchg
bound
sub
add
push
mov
jns
fcmovb
shl
dec
push
jno
arpl
test
insb
mov
mov
fiadds
inc
iret
jne
add
aas
add
inc
fwait
ja
sub
push
mov
ret
mov
sub
cmp
jge
addr16
add
or
pop
pop
fistpll
out
aas
lcall
imul
add
and
int3
fisubl
cmpl
sbb
ja
sbb
push
push
inc
mov
jle
lods
fcmove
push
adc
or
fildl
xchg
ficoml
insl
repz
cmp
frstor
or
pop
mov
push
push
xorb
xchg
xlat
jecxz
cmpsb
sbb
aaa
pop
jl
xorl
repnz
adc
cmp
mov
jb
add
imul
pop
je
mov
inc
pop
dec
daa
adc
repz
push
adc
stos
xor
fdivr
das
pushf
xchg
jmp
stos
shll
and
shll
dec
mov
add
jno
iret
jnp
insl
sbb
dec
in
es
outsb
pop
mov
outsb
int3
in
fst
cmp
mov
imul
dec
pop
aas
inc
mov
fisttps
stos
sbb
and
mov
loope
lret
push
lahf
enter
mov
jo
test
pop
and
aas
cmp
mov
dec
ja
int3
out
lock
xchg
lea
mov
pop
fs
adc
imul
sti
popl
xchg
pop
ljmp
sbb
and
add
and
ret
xorl
sbb
push
xor
xchg
lock
ret
cmp
lock
add
sbb
push
inc
setns
int3
sbb
in
jmp
sub
andb
in
pop
xchg
add
jnp
xor
adc
int
sub
jmp
cmp
int
fistpl
pop
data16
insl
shll
dec
scas
cmp
call
cmpsl
inc
arpl
dec
in
shrd
and
sbb
dec
sub
mov
repnz
dec
int
push
cmp
cmpsb
mov
add
lods
stos
sub
pop
pop
push
pop
cmp
scas
adc
xchg
jnp
and
fsubrl
mov
imul
out
ret
fstl
in
pusha
sbb
ja
dec
imul
pop
pop
pop
test
xorb
cs
lret
mov
pusha
cmpsb
or
les
ljmp
push
outsl
in
jns
xlat
cld
jmp
int
in
mov
push
cmc
lock
dec
inc
inc
inc
lods
cmpsl
cmp
pushl
dec
divb
movsl
xor
mov
lret
into
xor
out
pop
shrl
imul
mov
pusha
jmp
es
pop
and
negl
lret
lcall
sbb
pop
daa
mov
add
jae
sub
dec
cld
das
pop
jae
sbb
inc
mov
inc
jns
pushf
ret
outsb
popa
js
push
ja
add
or
icebp
xor
sbb
insl
sti
adc
cmp
lcall
out
sub
in
les
xor
inc
sbb
outsl
in
mov
arpl
rorl
add
jmp
xchg
in
pop
aaa
ret
ret
add
and
loop
ljmp
sbb
stos
lcall
fistps
daa
jbe
dec
loopne
xor
data16
sub
sub
lret
push
jae
and
daa
mov
inc
sbb
int
out
dec
sub
div
dec
mov
mov
sub
insb
push
sahf
aad
and
insb
sbb
sbb
mov
inc
dec
lcall
pop
add
std
xlat
xchg
lds
dec
out
ficompl
mov
enter
loop
xor
push
in
cmpsb
mov
pop
or
xchg
es
iret
push
mov
mov
negl
movsl
lret
imul
int
icebp
jo
jp
movsb
jp
xchg
pop
lods
mov
aas
and
xchg
mov
mov
sub
pop
cld
push
dec
lock
insl
fmull
loop
sub
xchg
shl
push
xor
mov
cs
mov
add
dec
js
je
popfw
or
arpl
xchg
pop
xor
mov
xor
daa
sbbl
mov
cld
js
push
mov
xchg
cmp
xor
sbb
inc
ja
and
xor
popa
push
mull
xchg
aad
push
and
out
mov
fs
cmpsb
pop
mov
or
mov
pusha
lahf
push
dec
mov
mov
mov
sub
mov
mov
add
out
pop
outsl
mov
sbb
insl
bnd
xor
jb
jg
xor
push
mov
cmpsb
jne
push
dec
jle
pop
cmp
mov
push
xchg
ds
cmp
jp
lcall
jo
enter
scas
cwtl
incl
pusha
inc
add
adc
pop
mov
xlat
bnd
xchg
sbb
adc
inc
daa
pop
sarb
insb
loope
adc
mov
imul
iret
lods
aas
mov
mov
cmp
aas
lcall
das
bound
xchg
jno
jmp
sarb
and
mov
pop
inc
sub
pop
push
das
sbb
scas
lcall
lds
addl
pop
repz
xlat
jle
ret
std
lret
adc
jmp
dec
push
push
xchg
fistpll
sbb
jl
inc
aad
sti
ficomps
ret
arpl
mov
xchg
rcll
cmpsb
movsl
xchg
jns
mov
xor
bound
xor
out
into
or
mov
sbb
xor
lods
push
cwtl
sub
in
pusha
aaa
adc
rorb
xor
inc
push
sub
jns
mov
jge
pop
adc
loope
and
std
or
jbe
dec
rcr
add
jb
mov
push
jne
hlt
mov
cltd
jp
ficoms
loop
data16
loopne
shl
pop
pop
movsb
adc
xchg
enter
pop
mov
in
pop
dec
pop
mov
int
xchg
pusha
test
sbb
sbb
pop
xchg
ret
repnz
xor
sti
je
std
jecxz
mov
insl
aaa
push
adc
jbe
gs
xor
call
fstl
je
mov
into
lods
out
push
lds
xor
jno
sbb
xor
in
out
push
out
jl
inc
xchg
dec
les
stc
pop
adc
push
push
js
mov
je
mov
adc
aaa
dec
or
add
and
cmp
adc
sbb
mov
inc
sbb
xchg
repz
sbb
jo
sahf
ret
cwtl
inc
mov
dec
pop
pop
jmp
mov
rclb
jl
ljmp
jne
popa
inc
mov
push
sbb
mov
cmpb
mov
mov
shl
adc
lods
pop
pop
cwtl
lcall
repz
pop
dec
loopne
add
negl
decl
cmpsl
pushf
insl
ja
add
insb
sahf
mov
jne
jle
cli
scas
push
lods
fsubs
fadds
inc
popa
inc
jecxz
jae
pop
cld
fldcw
scas
cmp
into
repz
stc
lods
add
subb
jno
adc
in
adc
js
cmp
cli
pop
fistpl
mov
cmp
hlt
orl
stc
xchg
std
mov
negl
push
xor
mov
sbb
or
lods
fistpll
inc
push
jae
or
int3
dec
mov
outsl
pop
or
inc
into
insb
stos
shrb
cld
fdecstp
mov
dec
pop
mov
jg
inc
outsl
dec
addr16
lods
fcoml
enter
fcmovnu
adc
sbbb
mov
ljmp
in
mov
pusha
xor
mov
shll
bound
mov
push
scas
pushf
mov
fsts
nop
test
test
aas
div
or
sbb
sub
pop
cmp
dec
cmp
inc
outsb
adc
movsb
pop
sbb
cwtl
lcall
stos
fcmovu
push
and
jne
lahf
cmp
aas
ljmp
and
add
jmp
nop
fldenv
testl
dec
xchg
and
sbb
inc
sub
xchg
lcall
add
lock
pop
sbbl
pushf
inc
fcoml
int
fs
aaa
outsl
imul
and
and
add
divl
push
outsb
lret
and
inc
into
test
mov
or
and
je
clc
pop
xor
in
lret
int
test
mov
xchg
or
mov
cmpb
or
nop
jg
dec
data16
test
fldt
fisubs
stos
cmp
mov
gs
test
pop
lahf
scas
push
fsubr
call
aaa
push
pop
cmpsb
push
pop
jnp
lea
dec
ja
repz
xchg
dec
dec
sahf
or
cmp
out
js
sarb
out
and
mov
repnz
xor
or
lea
mov
divl
sbb
sbb
lahf
mov
sbb
xchg
lock
mov
sti
mov
xchg
xchg
sahf
jge
mov
cmpsl
insb
repnz
mov
mov
cmc
or
cmpsb
cld
daa
das
and
dec
int3
test
inc
cmovnp
test
js
dec
repnz
add
or
loopne
xor
xor
mov
in
loop
add
add
add
push
pop
icebp
cmp
add
dec
mov
pop
out
push
pop
pop
sbb
cltd
or
call
negb
jmp
pop
rcr
cltd
lret
xor
jmp
cmp
dec
and
test
push
xchg
xchg
pop
push
addb
stos
jae
mov
pop
xchg
fsts
pushf
insb
icebp
sub
jp
dec
ja
rclb
loop
adc
cmp
sub
xor
cmc
xor
mov
jg
clc
ljmp
stc
mov
sub
xchg
jbe
xor
rol
pop
outsl
jb
mov
pop
pop
jp
mov
fidivl
push
mov
fs
dec
cmpsb
jp
cmpsb
lea
popa
xchg
lret
sbb
imul
dec
testl
idiv
jns
mov
mov
insl
inc
jecxz
pop
pop
inc
out
mov
jmp
cmp
dec
mov
test
xor
or
pusha
loopne
movsl
mov
test
cmp
or
push
adc
mov
xchg
push
add
shrl
int3
dec
jno
lea
test
and
aas
sbb
stos
repnz
push
xor
in
aaa
xchg
rcr
in
js
ljmp
jbe
push
orb
mov
clc
xor
fdivrs
and
adc
lcall
sbb
xor
ss
sbb
loope
push
js
pop
in
mov
in
sbb
pusha
pop
and
ret
push
pop
cmpsl
es
fcoms
jns
sbb
flds
adc
inc
das
sbb
cltd
add
pop
add
inc
dec
movsb
dec
es
repnz
gs
mov
ds
xor
xchg
ret
fadd
iret
xchg
je
mov
stos
cli
pusha
mov
cmp
inc
push
cmpsl
and
push
ds
xor
cli
jnp
inc
adc
popa
int
imul
jno
add
and
push
cmc
aaa
test
test
pop
pop
or
sbb
jns
push
cmovp
jns
or
ret
js
iret
inc
ja
push
jb
rorl
sti
ret
aam
xor
xchg
jno
data16
mov
add
test
or
push
sbb
fdiv
sti
inc
jbe
movsb
movsb
pusha
sbb
xor
and
push
and
pop
cmpsb
cmp
fwait
test
in
sbb
xchg
and
outsl
inc
std
out
movsb
leave
test
push
inc
mov
sub
push
pop
cli
nop
mov
lret
lcall
dec
mov
aas
jecxz
and
adc
rcll
addr16
nop
mov
mov
lret
sub
ss
push
xchg
mov
mov
cmp
lea
inc
fwait
sti
add
inc
ret
adc
test
push
sub
mov
add
repz
and
mov
insb
movsb
lock
mov
add
mov
popa
adc
xor
or
xchg
test
push
aam
stos
je
out
hlt
gs
test
and
fld
insl
call
into
lret
jb
push
cmp
rcr
cltd
lcall
outsb
mov
jbe
cmc
pop
xor
xchg
and
sahf
xor
jno
loop
std
icebp
sbb
test
mov
pop
sbb
inc
adc
lret
jge
xchg
or
adc
or
mov
adc
mov
push
rol
and
clc
mov
sub
jecxz
and
push
xchg
mov
popf
pop
jge
xor
sar
popa
mov
inc
ret
pop
add
lcall
ja
dec
sbbl
cltd
and
jno
add
ss
ud0
sbb
adc
cli
xchg
mov
insb
int
mov
inc
lret
and
fmuls
clc
xchg
aam
lods
mov
cmp
ljmp
cmp
dec
dec
int3
inc
adc
xor
inc
std
inc
cmp
jb
les
mov
sahf
xchg
xchg
push
test
jno
cltd
mov
sub
mov
push
mov
inc
icebp
loopne
pop
inc
lods
jl
mulb
test
sub
insl
out
ljmp
xchg
xor
into
sub
shll
xchg
gs
aad
xchg
push
lret
out
dec
inc
pushf
pop
mov
cs
inc
push
cs
ret
sahf
iret
dec
lods
cltd
call
dec
and
or
test
add
ljmp
sbb
movsl
insb
mov
pop
test
aam
mov
arpl
adc
cs
xor
push
mov
mov
into
and
mov
pmuludq
nop
pushf
adc
push
add
pop
push
jmp
dec
mov
cmc
cmp
frstor
stos
or
shrl
pop
and
adc
shrl
jecxz
mov
jb
fs
xor
sub
jmp
fidivrl
pop
pop
ret
lods
mov
xchg
xor
loopne
dec
sub
sub
jge
int3
cltd
add
inc
cld
mov
push
and
fimull
xor
leave
mov
adc
mov
xchg
add
mov
add
mov
mov
mov
fdivrs
or
add
clc
int
and
mull
inc
lods
pop
cmp
inc
test
out
insl
mov
rcr
ds
push
rcll
out
pavgw
and
push
add
cmp
aam
push
sbb
filds
pop
mov
push
repnz
jo
dec
daa
push
sbb
cmp
push
ds
pop
fucomi
sti
mov
lahf
fimuls
dec
mov
das
fmuls
iret
xchg
shrb
aas
or
mov
pop
sbb
inc
cmp
inc
loopne
xor
adc
addr16
test
inc
sahf
cs
lea
push
pop
mov
ret
cmp
nop
jg
icebp
lahf
popf
jge,pn
in
or
cmpsl
pop
push
outsl
fisubs
subps
outsl
subb
shrl
imul
push
dec
adc
mov
pop
int3
loope
int3
mov
pop
inc
pop
inc
scas
cmovg
jae
stc
stos
sub
jb
icebp
ds
and
and
out
lock
nop
lds
out
movsb
dec
dec
shll
das
mov
lock
or
mov
out
fcomip
adcb
rcrb
and
xchg
jg
adc
sub
mov
mov
aam
push
sub
add
shrb
lods
pop
popl
fidivrs
dec
adc
pop
add
mov
and
fbld
inc
fildl
stos
jns
fwait
sbb
or
cli
dec
mov
outsb
xchg
cld
cltd
inc
cmpb
push
mov
sbb
sarl
fbstp
iret
jno
mov
cmp
push
mov
push
js
mov
adc
mov
dec
push
or
xor
jg
insl
scas
repz
lods
adc
and
jno
xchg
pop
xchg
mov
fldcw
pop
bound
dec
xchg
cs
or
and
mov
cmp
movsl
inc
and
cld
outsl
lods
jmp
test
mov
pop
mov
loope
xor
jg
test
cmpsb
xchg
jg
xor
je
pshufw
ljmp
dec
mov
push
inc
cmpsb
xor
lds
in
orl
arpl
mov
mov
mov
sub
push
push
std
sbb
cmovno
das
sarl
daa
sub
pop
loop
mov
jp
movsb
push
mov
insb
push
xchg
pop
xchg
sahf
jmp
repz
sub
jno
mov
adc
xor
cmpb
out
sub
xlat
imul
xor
and
mov
sub
aad
lea
stos
pop
repnz
lret
dec
pop
push
je
and
idiv
mov
push
fidivl
mov
fcompl
ret
into
clc
adc
xchg
pop
lahf
dec
dec
into
int3
in
stc
adc
outsb
or
out
sbb
push
aaa
fldenv
adc
jns
jae
inc
iret
cmp
cmp
rcrb
mov
xorb
js
jmp
sub
xchg
icebp
popf
jo
add
pop
sub
enter
ret
into
and
pop
pushf
imul
or
pop
addr16
pop
test
cmp
neg
andb
fnstsw
test
iret
sub
and
repnz
iret
jb
ss
xor
sub
fidivl
jmp
dec
adc
and
jmp
cmpsb
or
ret
xlat
fstpl
or
in
scas
lock
lods
add
aam
js
lea
movsl
inc
jns
test
jl
lods
push
int3
cmp
jbe
sbb
lcall
cmpsl
xchg
push
outsl
mov
pop
lret
in
pop
mov
jo
and
dec
hlt
xor
adc
mov
in
jg
inc
mov
mov
push
adc
pop
stc
cld
clc
inc
jnp
xor
jb
mov
xor
insl
nop
push
xor
leave
out
lret
arpl
nop
mov
mov
pop
movl
icebp
pop
shll
push
inc
lcall
aad
repz
mov
add
mov
sub
adc
fwait
lcall
push
jg
pop
cld
inc
loope
xchg
sahf
cmp
mov
sbb
lcall
sbb
aad
inc
aad
push
andb
inc
pop
sar
push
mov
xchg
fidivrs
mov
pop
push
jo
mov
sub
mov
jo
scas
shrb
int3
xchg
or
xor
scas
mov
decl
or
push
push
bts
gs
aam
push
fidivrl
test
push
dec
daa
jnp
mov
pop
or
aam
shll
add
add
enter
negl
or
ret
lock
cmp
das
gs
sub
mov
jge
xchg
cmp
cld
subl
mov
jge
cmp
xor
loopne
mov
jbe
mov
enter
adc
rclb
and
loopne
lret
jg
shrb
std
push
xchg
pusha
pop
xor
mov
inc
lods
fidivs
jb
pop
insl
inc
sbb
xor
mov
lds
je
xor
adc
xor
lds
leave
jle
xchg
ja
mov
insl
bound
scas
rcrl
das
push
subl
mull
xchg
cltd
cmc
adc
cmc
out
cmpsb
cli
mov
jb
idivl
add
imul
jge
adc
mov
jb
mov
nop
popl
ds
or
ja
ja
js
lock
cmp
lds
dec
imul
inc
loopne
shr
jmp
dec
sub
insl
sbb
inc
sub
fistpl
or
out
leave
rcll
adc
ljmp
push
cwtl
pop
jmp
in
jno
xor
mov
int
pop
sub
cs
lahf
mov
das
shrb
lods
jmp
dec
sub
adc
adc
sahf
cmpb
xchg
shl
xor
adc
mov
cli
in
sub
stc
xor
sub
mov
adc
les
or
xchg
mov
stos
movsb
rorb
insb
es
cs
jmp
mov
push
je
insl
ljmp
xchg
cmp
std
insl
adc
adc
shrb
outsl
xchg
jmp
xor
dec
pop
enter
enter
lods
test
ds
or
adc
hlt
sbb
mov
pusha
out
popa
lods
outsl
mov
sbb
jg
cwtl
add
pop
ljmp
fildll
enter
jl
clc
push
jl
lods
push
xor
inc
das
dec
add
das
aad
or
rcll
inc
lret
int3
sub
addl
pop
es
jnp
adc
into
mov
mov
xchg
repnz
cmp
bswap
dec
and
ja
stc
or
push
mov
or
mov
fnsave
inc
aad
dec
cltd
lcall
inc
xor
xchg
mov
outsl
xlat
insb
mov
inc
shlb
imul
ficomps
rcrb
les
in
adc
fsubrs
or
pop
inc
fimuls
andl
jae
test
and
les
and
and
and
xor
mov
stos
fisubrl
js
insb
jbe
insl
mov
hlt
push
jb
or
int3
test
fwait
lods
mov
inc
int
jl
shlb
mov
sbb
int
pushf
es
mov
mov
fidivs
xchg
pop
dec
xor
cmpsb
sbbb
addr16
mov
sbb
dec
xchg
inc
push
ficoml
mov
lods
int3
lock
sbb
rcrb
push
icebp
popa
xchg
into
jno
rolb
jb
mov
xchg
xchg
mov
cli
lock
pop
mov
lcall
pop
ret
mov
push
sub
add
adc
xchg
adc
ss
cmp
cld
icebp
cmp
and
lea
mov
test
push
xor
xchg
stos
js
enter
scas
mov
sub
rcr
icebp
sti
sbb
adc
shl
mov
xlat
pop
cmp
loop
xor
mov
aaa
aas
arpl
adc
es
pop
sbb
pop
aam
push
icebp
cmp
adc
into
mov
adc
cmp
lock
aam
mov
inc
nop
fwait
sub
mov
negb
push
sarb
test
fdivs
imul
xchg
add
and
xchg
out
sub
bound
lret
pop
ja
gs
sbb
test
aas
jmp
movsl
cltd
push
fistps
movsl
loop
and
pop
into
lret
pop
cmp
mov
leave
jle
and
sbb
push
push
mov
cli
xor
inc
ss
es
push
mov
push
push
jnp
lds
idivb
leave
outsl
add
imul
and
xchg
mov
jp
sbb
aas
xorb
pop
and
test
ss
in
jns
push
cmpsl
outsl
fldl
popa
cmpsl
mov
jns
adc
inc
jo
sbb
in
or
push
out
ret
out
addr16
xor
fiadds
jb
sbb
xchg
hlt
test
xor
rcr
divb
pop
int
mov
push
jge
dec
nop
lahf
sti
test
imull
xor
mov
add
pushf
cmp
sahf
inc
stos
mov
out
lahf
rcr
fists
test
sub
clc
fdivl
xchg
cs
inc
xchg
mov
jbe
hlt
pop
imul
adc
xchg
cmc
or
push
loopne
popf
add
minps
scas
push
fwait
popf
int
popf
shlb
pop
mov
xor
das
mov
mov
sub
movsl
enter
enter
push
mov
dec
mov
add
inc
jle
add
dec
aad
lret
xor
ret
addb
mov
stos
mov
into
add
aam
jp
sbb
add
nop
movsl
int3
fwait
mov
rolb
jecxz
aam
lock
cmpsb
ret
xchg
mov
loope
xchg
pop
out
push
inc
mov
repnz
sti
gs
xchg
cmp
imul
dec
xor
aad
stos
mov
stc
fcomi
push
iret
xchg
outsl
in
orl
push
scas
imul
pop
adc
lahf
jbe
gs
push
popf
inc
dec
and
pop
test
js
cmc
sti
lods
test
repnz
aam
mov
lea
and
daa
ud0
sahf
and
mov
test
inc
mov
jb
fstpt
aas
or
fdivrl
dec
cmc
out
mov
adc
xor
daa
mov
js
mov
xor
enter
cmp
xlat
add
push
pop
pop
cld
and
cmp
or
leave
mov
imul
push
lcall
jo
aaa
nop
xor
cmp
sahf
rcl
imul
iret
jbe
jb
mov
std
pop
push
clc
xchg
lahf
pushf
cmc
fdivs
data16
mov
xchg
scas
sbb
cmp
and
push
xlat
aas
and
adc
mov
xchg
dec
pop
in
xor
jl
push
xor
decl
mov
dec
dec
in
mov
cmp
pop
call
stos
lahf
in
fdivrs
ljmp
xor
pop
xchg
fldenv
fdivl
ja
roll
popa
mov
test
and
push
cs
xchg
fists
cmp
rcll
dec
and
imul
mov
scas
xchg
add
fistps
rclb
ret
jp
aad
pusha
pop
mov
adc
stc
aas
out
mov
xor
mov
icebp
xor
add
punpcklbw
xor
movsb
sbb
loop
cmpsb
mov
jb
push
cmpsb
pop
sbb
out
push
fsubs
outsb
add
scas
xor
adc
pushf
icebp
fcompl
scas
dec
mov
sbb
jnp
sarl
and
loop
scas
or
movsb
outsb
push
data16
xchg
jne
pop
push
les
sbb
ds
in
imul
lahf
push
mov
sbb
enter
mov
out
sub
push
ljmp
xchg
push
dec
inc
hlt
imul
aaa
cli
mov
jb
mov
mov
pop
push
test
out
movsb
jl
mov
dec
fidivs
adc
adc
scas
cltd
mov
push
jns
push
xor
je
pop
adc
ljmp
jmp
clc
pop
or
or
sub
add
inc
jmp
xchg
stos
movsb
push
lods
mov
std
pop
add
pusha
jnp
push
adc
jne
mov
mov
or
cli
mov
push
lret
mov
andl
pop
roll
sbb
lods
jmp
add
pop
sub
sub
xor
imul
imul
pop
jmp
lea
push
push
and
pop
ret
sahf
mov
dec
xchg
stos
xchg
iret
push
xchg
xchg
popf
ljmp
std
xchg
popf
in
stos
adc
stc
stos
aaa
sub
cmp
add
inc
loopne
out
inc
scas
sub
scas
or
pop
int
adc
add
push
sub
and
xor
out
rclb
jns
aam
jns
addl
cmpl
jnp
push
in
mov
popf
mov
and
scas
scas
rolb
xchg
pop
push
mov
pop
and
hlt
sbbb
cmp
push
adc
dec
cmp
push
or
and
add
cmpb
ret
cltd
fmull
test
cmpsl
scas
sar
pop
sub
pop
subb
xor
push
xchg
mov
mov
repnz
jnp
mov
dec
cld
sti
hlt
scas
push
xor
mov
subl
dec
xchg
iret
mov
les
cmc
mov
pop
jge
les
loopne
jb
xchg
cmp
pop
xchg
xchg
sbb
or
push
int3
out
test
imul
fs
sub
mov
not
sbb
jmp
and
pop
les
pushf
sub
and
sbb
push
push
sub
add
xchg
and
mov
xchg
cmp
dec
push
testb
movsl
lods
fstps
repz
jl
jl
sbb
mov
push
cltd
mov
cmp
mov
mov
push
inc
sbb
insb
popl
xchg
fsubrs
sub
adc
pinsrw
cmpsb
jo
loopne
out
jl
jg
loope
test
pushf
dec
fstpt
mov
fcomps
lea
pop
sarb
ret
add
cli
cltd
sti
addr16
push
std
xor
lds
fnstsw
push
mov
mov
push
and
cmp
cmp
add
inc
into
sti
inc
lods
jns
and
jmp
jb
mov
aas
jb
sti
pop
mov
movsb
or
shr
pop
ret
pop
and
in
in
imul
add
mov
sbb
das
sub
push
mov
call
ja
divb
inc
loop
inc
jmp
int
mov
push
xor
inc
repz
and
out
enter
test
and
filds
insl
mov
clc
hlt
inc
xor
dec
add
inc
fstl
sub
mov
test
out
out
mov
mov
xor
aam
out
push
and
ljmp
fdivs
xchg
push
jae
test
arpl
aam
outsl
js
pop
push
popa
loope
sub
xchg
mov
add
pop
add
movl
push
ja
shll
adc
sbb
sti
gs
test
push
jl
push
cmpsb
lds
out
hlt
imul
mov
push
cld
xor
ds
out
iret
mov
rcrl
nop
adc
add
movsb
or
stos
mov
pop
movsl
into
push
xchg
pop
aaa
jmp
xor
mov
jp
int
leave
ss
sahf
insb
cli
ja
cltd
jg
nop
sub
das
push
mov
cmp
inc
out
push
data16
jg
aad
xor
pop
add
pop
es
inc
jne
add
dec
dec
xchg
sub
icebp
mov
push
cs
test
das
imul
adc
sahf
push
inc
and
inc
pushf
mov
and
inc
sub
ja
les
mov
xor
jg
lds
add
xor
sarl
imul
jl
filds
scas
aas
lods
unpckhps
inc
push
pushf
repnz
shll
and
pop
sbb
loope
ss
sbb
jp
cmp
inc
je
add
xchg
mov
push
outsl
and
mov
cltd
rcrl
mov
inc
inc
sbbl
fldenv
lret
jb
cmp
jmp
addl
fisttpl
out
les
mov
lds
sub
mulb
jg
test
sbb
rcrl
cmp
out
imul
lods
dec
stos
into
jnp
outsl
flds
and
xor
lea
out
sarl
pop
lret
andb
xchg
xlat
xor
sub
into
pop
adc
jl
cmpb
cmc
pop
mov
xchg
insb
rcll
divb
pop
mov
and
ljmp
adc
roll
testl
loop
xchg
cmpsl
pusha
cwtl
push
xchg
fisubs
out
rcr
mov
or
test
lods
cmc
push
add
mov
inc
cltd
xchg
mov
dec
enter
jbe
iret
pop
push
outsl
or
insb
stc
push
cmc
adc
adc
lods
jmp
pop
rolb
clc
jb
sub
jb
leave
testb
scas
stc
aam
pop
decl
push
loope
ja
push
lcall
insb
int
jno
add
clc
adc
lahf
in
imul
mov
jl
dec
out
pop
xchg
out
pop
stos
fbld
mov
cmpsl
push
xchg
jne
push
xor
xchg
push
aam
popa
pop
dec
push
pop
stc
mov
repnz
lret
and
aam
xchg
push
adc
gs
adc
jl
cmp
fstl
cmp
leave
test
xor
jnp
mov
push
inc
lock
nop
pop
jp
sub
push
xor
fisubrl
iret
sbb
outsl
dec
pop
sbb
fs
fpatan
bound
das
sbb
mulb
sub
jb
mov
cld
std
sub
cs
mov
jnp
xchg
es
mull
jmp
mov
divl
in
addl
and
jl
sub
pop
mov
iret
lock
jmp
in
pop
xor
pop
lret
push
mov
dec
dec
rclb
dec
outsb
pop
mov
int
mov
mov
and
imul
mov
cmpsl
cmp
push
mov
data16
es
pop
sub
les
sub
xchg
and
mov
call
jnp
cmp
repnz
xor
sub
sti
push
dec
dec
lds
pop
adc
dec
scas
not
cmp
aam
sub
test
pop
sub
int3
cmp
test
mov
pop
and
mov
lock
loop
shrb
int
ret
mov
dec
test
sbb
or
inc
lret
out
imul
jg
hlt
out
dec
sub
mov
pusha
jge
je
or
pop
cld
rol
xchg
out
xchg
aas
jno
mov
pop
pop
mov
pop
in
dec
xchg
subb
pop
push
sub
pop
push
sub
scas
adc
pop
loop
int
adc
out
ret
outsl
sbb
adc
mov
xor
push
mov
jb
push
mov
inc
add
xor
xlat
cmp
dec
cld
js
test
push
pusha
je
sbb
or
sub
cmp
scas
sub
sahf
stos
pop
xor
sbb
pop
jbe
adcl
mov
lret
add
rcll
rorb
push
add
out
xor
and
mov
bound
lea
or
jecxz
lods
ret
mov
push
insl
ret
adc
mov
stc
repz
popa
bound
mov
in
adc
or
into
sub
cmpsl
cmp
test
xor
jo
dec
jp
stos
pushf
or
aaa
into
push
jbe
jae
popa
or
mov
daa
push
ljmp
icebp
mov
cmc
push
mov
push
shll
lds
dec
iret
inc
add
in
bound
je
lds
cld
int
imul
add
mov
gs
mov
adc
push
xor
mov
adc
adc
or
inc
push
test
or
push
cli
sahf
aam
pop
fcmovb
xchg
loopne
add
cmpsl
xor
sbb
pop
repnz
int3
cmpsb
rolb
mov
dec
mov
movsb
xchg
mov
jae
test
add
inc
ds
dec
xor
adc
push
or
and
xchg
mov
jl
xor
aam
je
and
mov
jmp
cmp
bound
push
lret
jne
loopne
mov
lahf
cmpsl
or
into
xor
dec
test
in
pop
out
lcall
cli
pop
aam
push
or
mov
xchg
or
imul
add
movsb
stc
push
mov
test
sub
cmp
imul
jno
jb
cmpsb
mov
jb
sti
pop
cmp
jnp
sti
add
and
ret
push
iret
orl
fmul
fisubrl
xchg
xrelease
sbb
fs
out
lods
js
movsl
imul
mov
mov
xchg
jecxz
fsubrs
es
ja
push
and
fs
sub
cmpsb
adc
cmp
sbb
jb
inc
addr16
mov
mov
jmp
test
jl
mov
test
xor
jmp
rorl
incl
repnz
pop
outsb
imul
ja
cmp
insl
ret
call
cwtl
push
ja
call
mov
push
cmp
test
mov
inc
pop
dec
mov
mov
cmpsl
jbe
pusha
addr16
mov
fnstsw
out
mov
pop
clc
je
das
jb
mov
mov
movsl
mov
aas
jns
insb
pop
inc
ja
sub
sub
loopne
mov
push
add
gs
sub
in
cld
in
or
fcomip
mov
cli
repnz
ljmp
call
scas
pushf
push
jl
insl
xor
icebp
into
repnz
inc
sub
rorb
adcb
or
ljmp
jne
outsl
jne
cmp
les
jmp
loop
into
sbb
add
enter
clc
dec
push
movsl
push
mov
fs
pop
mov
mov
and
mov
addl
mov
add
add
sub
int
add
sbb
xchg
pop
in
movsb
pop
cltd
xor
inc
mov
push
cmpsb
movsb
push
arpl
sub
fidivrl
push
push
les
pop
les
repz
pop
xchg
pop
inc
loop
test
fstpt
pop
in
add
mov
add
adc
pop
push
mov
fnsave
mov
pop
divps
xor
icebp
mov
test
mov
sar
lret
shll
popf
adc
shrb
pop
icebp
testb
xacquire
scas
dec
push
in
cmp
ror
pop
std
xor
xor
insl
xor
lret
in
mov
shll
shlb
and
and
and
add
dec
mov
and
scas
movl
inc
rcr
dec
pop
xor
mov
ja
rep
in
adc
mov
push
cmp
call
sbb
cmpb
outsl
bound
xlat
push
pop
jl
sub
add
adc
ret
dec
pandn
repnz
add
sbb
insl
push
test
in
aaa
mov
shr
andb
mov
cmp
fadds
jne
lret
mov
jbe
divb
loop
ljmp
push
jo,pt
mov
jo
mov
aam
sub
xor
dec
cmp
int
push
call
js
mov
push
mov
shr
adc
mov
movsl
mov
arpl
adc
lret
mov
pop
cli
js
insl
and
movsl
stos
push
mov
jmp
sbb
scas
lods
sti
xor
shlb
movsl
mov
mov
dec
jb
pop
sbb
add
cld
inc
cmp
js
and
and
lock
pop
or
sbb
mov
repnz
fwait
rorb
pop
mov
popf
out
lea
xor
push
cli
cmp
imul
adc
sbb
inc
add
xchg
push
insb
mov
gs
rorl
imul
imul
jo
jmp
pop
js
push
test
push
push
test
test
imul
push
adc
enter
mov
insb
pop
movsb
pop
sub
inc
xor
mov
lahf
xor
mov
test
in
fmull
mov
sub
jno
inc
xor
xlat
adc
ja
stc
mov
cli
pop
mov
popa
imul
rcll
lret
inc
add
inc
cmp
mov
rcr
popa
cltd
notl
test
dec
push
mov
arpl
ss
add
std
mov
xchg
outsl
ffreep
jmp
subb
mov
adc
cwtl
jge
cmp
pop
popf
adc
lret
pop
and
nop
icebp
push
fcomps
mov
inc
sub
mov
cmc
sub
repz
add
inc
xchg
inc
ja
add
outsb
jb
push
jmp
jg
pop
data16
fisttpll
pop
sub
xchg
xchg
or
mov
test
movsl
cld
push
int3
addr16
into
lods
mov
repz
sub
push
out
lock
fsub
pop
lret
sbbb
push
gs
dec
adc
outsb
rcrb
lock
push
or
mov
lcall
inc
ret
pop
adc
hlt
add
xchg
ljmp
ret
add
mov
fiadds
dec
adc
mov
daa
nop
push
cld
jl
icebp
add
sbb
mov
call
mov
les
and
cmp
push
std
inc
movsb
jmp
push
pop
mov
xor
test
xchg
lret
adc
in
shrb
stos
sbb
ds
fdivrl
mov
into
adc
ret
pop
inc
scas
lret
push
pop
popa
jmp
mov
jge
clc
xchg
cmpsb
sub
mov
js
pop
cs
in
loop
cmp
test
cli
push
and
cmp
popf
mov
or
add
jnp
popl
add
outsl
outsb
mov
es
sub
mov
mov
mov
test
push
add
aam
bnd
sbb
inc
mov
into
inc
sahf
jmp
inc
push
imul
dec
ljmp
cmpsl
outsl
lahf
loopne
push
xchg
decb
cwtl
pop
xchg
pop
mov
ja
mov
or
rolb
mov
or
insl
pop
daa
pop
xor
ror
lock
cmc
fs
jle
mov
sahf
mov
mov
cmp
insl
insb
jp
cmpsl
xor
out
jbe
inc
in
inc
popf
pushf
cmc
popa
sbb
inc
cli
addr16
dec
sub
push
fildl
add
mov
sahf
repnz
cmpsb
pop
test
mov
add
dec
enter
jns
in
lods
push
sbb
add
sub
fwait
jnp
popf
mov
fdivl
add
scas
jbe
mov
xchg
jg
pop
lcall
cmp
mov
or
enter
sahf
pusha
sub
andb
cmc
add
xor
adc
aam
arpl
xlat
cmp
mov
movsl
fsubl
sbb
add
mov
pop
lcall
cli
sbb
mov
dec
icebp
test
adc
add
sub
fisttpll
inc
popf
adc
out
push
xor
test
or
ja
leave
pop
cld
shlb
jmp
and
xchg
in
stc
stos
dec
xor
gs
fcmovbe
xchg
dec
add
sub
repz
cmp
and
shl
mov
inc
leave
arpl
pop
mov
imul
push
mov
sub
shlb
xchg
push
sti
jb
pop
popa
int
adc
sub
pop
xor
mov
int3
leave
ror
add
push
adc
xchg
repnz
xlat
hlt
sti
test
roll
add
add
push
ret
add
das
insb
xchg
xlat
mov
or
mov
inc
ss
ret
xor
lods
js
push
and
adc
cmp
inc
dec
stos
rcr
rcr
cmc
sbb
jnp
sbb
xlat
cld
sahf
mov
push
in
cmp
insb
in
mov
or
inc
bound
mov
xor
movsb
dec
pop
xchg
mov
mov
sub
mov
fistpll
and
sbb
cmp
sti
xchg
test
sbb
or
add
cmp
in
enter
mov
adc
add
cmp
and
fwait
jmp
lods
mov
mov
fmulp
xor
add
inc
mov
mov
andb
fsubrl
xor
inc
cmp
add
mov
mov
sbb
stc
sbb
loop
loope
pop
jg
adc
sbb
jne
mov
inc
out
andb
icebp
xchg
lea
fsubrs
je
pop
cmp
inc
dec
icebp
dec
frndint
cmc
in
test
push
imulb
int
shlb
loope
jl
fdivl
mov
mov
lds
iret
xchg
sub
int
outsl
mov
xchg
dec
push
xchg
test
into
jmp
jmp
and
mov
mov
int3
dec
fsts
xchg
dec
xchg
fucomp
add
iret
adc
jecxz
jo
aaa
lcall
stc
pushf
out
push
dec
out
jg
adc
imul
movsl
ja
jne
sahf
iret
jne
mov
cmp
adc
or
fstpl
jle
mov
or
jae
mov
nop
fstpl
mov
insb
popa
andb
push
pop
mov
mov
mov
fimuls
lret
push
hlt
pop
pop
xchg
test
lret
enter
addb
sbb
fisubrs
in
inc
mov
push
movsb
cmp
mov
jmp
inc
aaa
push
stos
dec
fcmovne
loop
jge
insl
ljmp
adc
fs
push
sbb
div
cmp
inc
mov
xchg
pop
and
or
mov
or
sbb
and
pop
cmp
xchg
and
xor
inc
scas
loop
shll
cmp
dec
std
add
push
or
addr16
xor
add
ret
dec
xor
sub
cli
in
lahf
out
dec
lret
mov
nop
jbe
lods
outsl
mov
addr16
add
cwtl
pop
loope
mov
cmp
mov
sarb
sti
mov
cwtl
mov
push
jnp
mov
mov
cmpsb
jnp
push
mov
stos
lock
mov
dec
into
outsb
inc
js
lds
cmpsb
clc
sub
mov
mov
sub
addr16
lds
cmp
bound
scas
mov
and
dec
push
rcrb
mov
xor
iret
pushf
out
loopne
add
and
in
mov
inc
rorb
ds
lcall
dec
nop
neg
dec
adc
adc
test
mov
andl
push
fildll
test
xor
cmc
ret
adc
pop
daa
cmpsb
pushf
int3
ret
sub
int
mov
lret
xchg
divl
push
jns
loopne
mov
xorl
aam
ja
lods
push
push
mov
sub
cmp
sub
xchg
xor
jno
fs
outsb
fwait
shr
shll
cmp
jno,pt
lods
mov
mov
bound
xchg
dec
loop
jl
hlt
or
xchg
cmp
fnstenv
mov
cmc
inc
pop
dec
out
fsub
out
outsl
rolb
sarl
iret
fldl
cwtl
je
jne
fidivl
and
stc
dec
je
cli
gs
ljmp
xchg
cmpsb
pop
push
or
popf
ret
imul
nop
jg
inc
xchg
mov
xlat
dec
sbb
sbb
in
inc
jb
xor
std
mov
bound
insl
fs
pop
cmpsl
adc
nop
mov
ds
cmp
les
nop
leave
pop
inc
lahf
pop
notl
pop
cmc
mov
ret
mov
push
xor
add
xchg
movsb
dec
sub
sub
in
xchg
mov
or
int3
jp
mov
adc
adc
mov
or
cmp
cmpsb
sbb
add
movsl
out
cmc
lret
push
sbb
lcall
rcl
cmp
sar
popl
dec
and
sbb
int3
arpl
xchg
sub
in
cli
push
icebp
fsubs
test
mov
int
insl
sbb
dec
mov
or
popa
aam
jb
fdivrl
pop
adcb
sbb
nop
rcll
ret
popf
mov
jbe
jbe
in
sti
in
test
push
mov
fwait
loopne
cmp
inc
mov
pop
mov
test
mov
imul
pusha
pop
jp
mov
and
push
scas
lret
mov
jno
ret
mov
sti
mov
divb
jb
and
arpl
push
pop
jnp
rclb
outsl
in
jo
aad
mov
sbb
clc
cmc
enter
xchg
push
lock
aad
mov
lret
mov
and
inc
sub
mov
sub
xchg
mov
cld
fiaddl
packssdw
cmp
jno
sub
mov
loopne
ret
add
jne
jg
fsts
mov
pop
test
mov
vpsubsw
mov
push
cltd
loopne
push
cwtl
xchg
inc
jb
jmp
mov
or
stos
jmp
daa
outsl
jae
mov
adc
inc
lret
hlt
daa
mov
dec
xor
push
enter
jno
outsl
test
rcrl
pop
test
loopne
popa
test
dec
mov
test
adc
mov
shr
in
cmp
push
mov
data16
imul
mov
data16
je
mov
inc
push
lret
addr16
inc
scas
rcrb
in
cmp
dec
adc
out
insl
aam
jae
fs
ret
jb
sbb
dec
sbb
pushf
or
cmpsl
lret
packsswb
mov
cmpsb
inc
ja
cmp
ljmp
push
in
test
add
push
in
inc
mov
idivb
into
sahf
in
mov
iret
test
xchg
dec
pop
pop
mov
sarl
jb
bts
pushf
jp
fnsave
addl
sbbl
push
jno
or
std
push
dec
cltd
sti
pop
test
test
mov
sub
insb
popf
sub
dec
sbb
inc
movsb
pop
dec
fisubrl
call
pcmpgtd
inc
repnz
enter
mov
push
es
xchg
jne
and
scas
adc
pop
pop
mov
test
mov
outsb
inc
mov
push
in
daa
jmp
lcall
push
xchg
sahf
mov
ret
or
push
dec
xchg
dec
xor
adc
lret
push
push
insb
fsubr
popf
dec
cli
xchg
or
xor
andb
jg
outsl
call
lea
inc
out
adc
shlb
inc
lods
call
dec
inc
call
mov
fldcw
pop
jg
push
enter
in
lods
lret
or
fldcw
jge
fisubrs
mov
mov
mov
xchg
mov
mov
mov
mov
mov
lret
icebp
ret
bound
fndisi(8087
inc
into
cs
add
ficoms
mov
and
in
mov
mov
mov
lds
cmp
lcall
fdiv
gs
cwtl
jo
mov
mov
insb
push
loop
xor
mov
or
enter
push
sbb
and
mov
idivb
mov
dec
fldenv
test
sbb
add
and
and
loope
xchg
andb
xlat
sub
push
pop
push
mov
sub
add
rcrl
repnz
insb
imul
shrl
inc
mov
pop
pop
mov
stos
inc
fsubrs
adc
dec
push
test
push
sub
movsb
aas
xchg
lret
jmp
sbb
fmull
fstl
hlt
call
lahf
mov
dec
or
pop
xchg
les
push
jle
mov
shll
mov
pop
add
loop
repnz
push
dec
inc
mov
adc
out
jp
sub
inc
and
mov
jbe
xorl
jbe
xchg
lcall
idivb
inc
adc
pop
fdivl
in
scas
push
test
push
scas
test
lock
sbb
jns
aas
loopne
repnz
cmp
xchg
out
inc
or
mov
outsl
mov
dec
mov
fwait
jge
loope
inc
addr16
loopne
movsb
mov
cmp
cmpl
test
repnz
and
repz
cmp
push
divl
jecxz
pop
cli
jmp
aaa
jp
int
sub
xor
inc
dec
fcomp
gs
in
imul
sbb
pop
cmc
xor
mov
mov
es
mov
enter
mov
loop
add
shlb
push
nop
inc
push
ljmp
in
xchg
aam
jb
lods
mov
inc
sub
inc
dec
stos
testb
cmp
ja
stos
rcrb
jb
mov
addr16
pusha
int
addb
xchg
out
out
loop
inc
xchg
cmp
arpl
lret
mov
lret
xlat
lds
jmp
jg
js
dec
dec
jmp
movsl
nop
xor
inc
add
push
loope
mov
xchg
mov
or
adc
aam
mov
adc
inc
pop
push
popf
lret
shlb
mov
cmp
fsubrl
sbb
pop
adc
mov
test
scas
rorl
aaa
movsb
xchg
mov
imul
xchg
jge
cli
and
push
repnz
loopne
lods
jge
fsubrs
ror
mov
dec
in
jnp
bound
lds
out
dec
add
dec
xor
out
pop
adc
and
cli
roll
ficompl
imul
inc
in
repz
mov
ss
pop
adc
push
popf
cmp
aas
lods
jbe
std
xor
fnstsw
sbb
pop
loop
dec
pusha
mov
jno
jno
xor
dec
dec
and
mov
xchg
sbb
shll
adc
inc
out
inc
repz
sub
xchg
or
fnstenv
rorl
aam
xor
mov
daa
xchg
movsl
daa
js
xor
and
inc
or
xchg
push
rorl
jg
push
test
aaa
xor
inc
dec
loopne
and
mov
shlb
sub
pop
nop
cmp
push
in
mov
mov
jmp
jecxz
xchg
test
jne
mov
and
sbb
daa
jl
das
out
out
push
push
and
inc
ja
jns
jb
enter
mov
mov
incb
addl
es
imul
or
dec
sahf
xchg
aas
push
es
mov
sar
ja
xchg
lds
sbb
pusha
sub
addr16
jae
push
cmp
jmp
cld
or
std
push
das
push
je
cli
xchg
xchg
aad
fimuls
xor
push
pushf
pop
addr16
out
mov
cltd
mov
or
cmpsb
dec
adcb
testl
inc
cld
lahf
ret
test
shlb
add
pop
in
mov
mov
sub
push
pop
cs
jnp
sahf
and
les
push
sub
popf
aaa
lahf
ret
pop
mov
inc
fwait
push
pop
ss
add
lock
jo
mov
sbbb
or
outsb
aad
rcl
xlat
jp
pop
sub
popa
cmpsl
mov
js
jge
xchg
xor
ret
xchg
repnz
jge
and
and
sti
push
fcmovne
xor
popa
inc
sbb
inc
inc
jmp
xor
js
adcb
stc
xchg
jmp
mov
add
or
push
test
xchg
das
cld
cmpb
add
scas
fildll
push
icebp
inc
xchg
mov
cld
sub
rcrl
mov
inc
sub
int3
and
shrb
jmp
mov
daa
sahf
xor
iret
cld
cmpsl
insb
cli
mov
orb
daa
jmp
mov
add
push
dec
push
bndstx
pop
pop
mov
lods
rcrb
fidivl
aas
sub
xor
inc
xchg
jmp
xchg
lret
mov
sub
data16
pop
sbb
pusha
jnp
xor
popf
ja
fst
cmc
xor
fimuls
rcrl
mov
dec
xchg
sbb
jge
fildl
add
ret
inc
jnp
xor
int3
iret
lret
lahf
mov
ficompl
les
test
mov
out
pop
aaa
in
inc
sub
inc
add
shr
inc
test
icebp
push
into
sbb
jae
loop
xchg
ret
jnp
inc
clc
xchg
mov
cwtl
mov
cltd
cmp
insl
addr16
in
add
pop
jmp
cwtl
lods
lret
lret
scas
rcl
mov
pop
imul
jmp
mov
inc
sub
add
out
fldcw
call
inc
or
fimuls
popf
popa
ret
sbb
lea
inc
push
or
pop
mov
jb
cmpsb
sbb
sbb
repz
stos
or
nop
pop
movsb
data16
lock
shll
mov
fldt
mov
mov
and
test
push
aaa
jmp
fildll
pop
push
jge
mov
lock
es
mov
test
fdivs
in
sbb
jo
int3
loop
cs
pop
cmovl
pop
test
sub
adc
mov
stos
jg
clc
dec
add
inc
fsts
icebp
lods
xor
xchg
mov
insb
ja
mov
dec
push
mov
les
push
and
add
movsb
ljmp
jg
xor
jnp
xor
cmp
pop
adc
std
lds
enter
cmpl
pop
inc
or
enter
ret
jle
mov
sbb
mov
int
push
loope
or
cmpl
ret
jno
fnstenv
bound
faddl
ja
xor
sub
push
pop
fwait
push
xlat
in
jne
loopne
ret
push
dec
cmp
rorb
sbb
dec
mov
call
incl
stc
mov
cmpsl
test
xchg
dec
pop
hlt
js
mov
sub
cld
sbb
inc
jle
jg
jo
jo
xchg
pop
inc
sbb
shlb
and
xchg
sahf
and
sub
pop
adc
inc
movsb
push
mov
mov
or
test
mov
mov
stc
mov
out
rcrb
jne
mov
pop
divl
mov
jno
adc
mov
mov
cwtl
push
fiaddl
pop
imul
jb
inc
int3
imul
mov
pop
mov
out
pop
inc
jb
push
xchg
push
inc
ds
shll
sbb
inc
in
cmp
in
imul
loope
mov
rcl
jbe
mov
xlat
sbb
das
cmp
les
sahf
popa
scas
ret
jb
fbstp
dec
xchg
and
push
adc
or
and
dec
cmp
xor
add
mov
push
dec
hlt
cli
scas
push
and
sar
out
dec
ss
mov
push
mov
clc
mov
rolb
orb
sub
outsl
fsubrs
enter
sub
das
or
in
xor
xchg
stos
push
clc
lods
dec
add
shrb
adc
insl
pusha
mov
pop
mov
loop
into
int3
insb
sub
fs
mov
into
pop
shlw
dec
sbb
jge
jecxz
cli
inc
rcrb
mov
jne
push
in
in
xchg
mov
jecxz
xchg
xchg
or
in
mov
int
inc
cmp
adc
pusha
mov
cmp
daa
mov
stc
out
cmp
mov
or
jmp
push
sub
or
sbb
mov
fildll
xor
inc
inc
leave
out
push
cs
push
jge
pusha
or
stc
das
jecxz
push
sarb
aam
out
mov
jb
dec
mov
mov
mov
fisubs
or
in
pop
cmp
mov
jns
repz
movsl
cmp
mov
insl
mov
decl
in
lods
mov
pop
fs
ficoms
movsl
scas
arpl
ret
cmp
push
push
aam
ret
lock
cmpsb
pop
jle
adc
in
pop
addl
rol
ljmp
mov
loop
xchg
setl
insl
dec
enter
xor
ja
cmpsl
aam
pop
sbb
mov
test
xchg
xchg
xor
xor
jnp
pop
push
scas
call
stos
sub
xchg
xchg
jbe
and
cmpsb
push
jmp
sbb
lret
cmp
jp
sub
pop
imul
stos
shll
jnp,pt
pop
lret
adc
push
fwait
sub
dec
sbb
hlt
inc
dec
or
adc
mov
int
mov
stos
movsb
aaa
xorb
pop
push
inc
cwtl
insl
mov
dec
data16
outsb
sub
push
xor
inc
jae
test
adc
frstor
push
jb
stos
imul
popa
mov
fistps
mov
mov
pop
lods
adc
fcmovnbe
sub
shlb
dec
out
scas
mov
xlat
push
lret
inc
sub
clc
or
add
xchg
push
push
cwtl
lea
cmp
out
scas
xchg
cmp
sub
inc
jmp
cmc
out
and
out
sbb
movsl
push
jnp
shlb
mov
mov
sbb
cli
sub
jp
and
fiadds
out
scas
add
ja
out
leave
push
mov
sbb
xchg
cltd
fsubrs
inc
cmp
push
in
scas
dec
repz
rcll
and
aaa
mov
arpl
sub
ret
pop
stc
inc
test
push
icebp
pushf
xor
add
cmp
mov
in
cmp
test
int3
cmpsl
mov
stos
inc
clc
jmp
enter
mov
and
cmp
mov
loop
pop
aam
pop
ret
mov
movsl
fsubrs
push
repz
lcall
into
lret
aaa
cmp
pop
movsb
jle
cmp
xchg
insl
ret
clc
lock
lock
insb
sbb
fcmovne
nop
dec
mov
lcall
addr16
ss
sbb
push
or
pop
sub
bound
add
xor
inc
mov
stos
aad
loop
sub
pop
cmp
in
sbb
mov
notl
mov
into
pop
fsub
push
mov
inc
mov
fmull
xchg
jae
flds
fisttpl
sub
xor
or
adc
mov
dec
xor
clc
mov
xor
jne
and
adc
pop
mov
jmp
rorb
shll
add
sbb
cmp
adc
andb
jg
sbb
ljmp
mov
les
xor
mov
notb
xor
jae
pop
es
rorb
push
sub
ret
int
mov
xchg
cmp
pop
movsb
xor
cmpsl
sahf
and
fimuls
mov
dec
inc
xorb
sub
and
pop
pop
or
into
lret
inc
cmp
rcll
mov
add
decl
pop
cmp
pop
jge
out
mov
dec
lret
push
lea
icebp
dec
mov
mov
fmull
out
lret
mov
adc
push
mov
sar
mov
iret
pop
jmp
lods
mov
insl
fnstenv
inc
sub
xchg
add
sub
mov
xor
adc
pop
pop
jb
push
dec
inc
subb
movsl
decb
mov
xchg
cwtl
pop
mov
mov
add
roll
lret
imul
in
into
movsb
push
pop
aam
pushf
push
ss
mov
dec
hlt
daa
sub
leave
mov
out
arpl
aam
add
and
arpl
inc
pop
xor
pop
pop
mov
sbb
hlt
adc
xchg
imul
aaa
mov
push
nop
sub
inc
jg
mov
cmpsb
lock
push
adc
push
xor
rcrl
sbb
ss
xor
xor
xchg
push
js
pop
mov
jbe
loope
sub
inc
ss
and
ret
pop
pop
cmp
cwtl
push
loop
inc
mov
mov
sub
xor
cs
jmp
add
mov
lds
clc
push
inc
xchg
sbb
aam
pop
je
xor
mov
aaa
adc
push
mov
mov
jge
cmp
mov
mov
ret
inc
test
mov
lods
inc
mov
sbb
sub
jmp
imul
popf
stos
jecxz
sbb
mov
repnz
xor
sub
aam
sti
notb
fiadds
repz
push
dec
jbe
rorb
js
xchg
add
jmp
xchg
jo
pop
jecxz
push
xchg
movsb
xor
cmpl
cmp
adc
test
xchg
std
icebp
insl
dec
fst
ret
inc
mov
lret
push
push
enter
or
jns
arpl
lret
push
pop
arpl
outsb
sub
jne
pop
aam
cmpb
in
cld
gs
leave
jl
sahf
or
cmpl
icebp
or
mov
dec
jne
addr16
out
repnz
mov
in
outsb
clc
pop
popl
fwait
loopne
gs
or
xor
stc
int3
aam
lods
sbb
sub
xchg
mov
mov
mov
or
call
sub
lods
jge
std
je
lcall
imul
push
dec
call
cltd
insl
addr16
addb
pop
mov
in
sub
add
mov
das
mov
std
aam
es
mov
fstp
lcall
sti
test
and
ss
or
fwait
test
data16
js
push
in
in
lods
ljmp
lock
cmpb
loope
pop
lea
fcomps
fimuls
jge
pop
inc
add
cld
xchg
leave
test
mov
lret
push
push
jnp
or
xor
nop
add
outsb
push
and
clc
mov
sub
aam
lea
insl
xlat
pop
stc
inc
mov
xor
mov
pusha
and
xor
icebp
out
std
add
aad
dec
and
out
repnz
push
lea
mov
cs
into
mov
cli
into
or
cmpsb
je
push
add
lds
mov
push
std
lret
fldl
test
dec
iret
or
mov
mov
or
divl
mov
sub
into
outsb
pop
ffreep
sbb
in
mov
enter
cmpsb
data16
ret
adc
std
push
aad
ss
repz
pop
add
dec
inc
push
mov
cli
loop
sub
notl
in
stc
cmc
jl
rorl
in
cmpsb
aas
or
or
push
call
pop
push
out
inc
mov
imul
mov
cld
adc
and
fstpt
test
pop
pop
mov
push
adc
xor
pop
xchg
loopne
and
jl
or
push
push
dec
addl
sbb
nop
loope
jb,pn
hlt
ljmp
add
mov
mov
sbb
incl
inc
xchg
push
loopne
cmp
mov
mov
ds
mov
jecxz
ja
ljmp
movsl
cmc
popa
shrl
jl
imul
cmpsb
xrelease
ja
sub
mov
popa
rep
sbb
mov
in
add
cs
xchg
scas
loopne
pushf
jbe
jae
shll
cmp
rol
cltd
test
mov
or
in
ret
mov
pop
roll
in
cmp
xor
adc
insl
add
xchg
jo
sbb
pop
dec
mov
fcoml
inc
sub
inc
std
or
inc
clc
cwtl
xchg
pop
sub
loope
ds
lods
jg
js
into
nop
test
test
sbb
sub
nop
imul
mov
adc
mov
ret
and
shl
lock
push
xor
and
decb
pop
into
in
sbb
mov
int
lret
addb
inc
pop
aas
jecxz
jg
cwtl
lahf
jo
pop
xchg
lock
or
fimull
ds
jl
xchg
sbb
gs
lods
push
xchg
push
int
mov
ja
dec
adc
cmp
mov
scas
jge,pt
or
cmc
push
mov
sbb
lcall
pushf
jne
adc
scas
or
ret
mov
fcomps
dec
jb
mov
sub
adc
fidivs
out
das
mov
xlat
cmpsb
push
jl
push
jno
loopne
shll
out
inc
xor
dec
mov
xchg
out
ret
pop
addr16
lods
xchg
pushf
js
jp
pop
lret
mov
aas
mov
lahf
jnp
mov
jg
jno
mov
nop
hlt
cmp
fsubrs
xorl
je
std
fwait
in
xchg
mov
incb
aas
decb
or
fucomi
adc
inc
push
cmp
shlb
es
inc
mov
in
outsb
sub
ret
add
popa
and
jp
out
movsl
or
adc
push
adc
dec
xor
fdivrs
and
xchg
add
mov
push
dec
jp
cmp
nop
jg
and
inc
ss
or
incb
xchg
testb
aaa
xlat
jge
pop
lods
pop
mov
movsb
test
jmp
dec
scas
jecxz
loopne
iret
addb
pop
inc
in
pop
cmp
jnp
or
call
movsl
cmpsb
add
mov
sub
dec
inc
mov
mov
cmp
add
sbbb
xchg
into
imul
xor
jg
orl
push
rol
es
movsb
sbb
jmp
in
icebp
arpl
push
shlb
and
out
and
xchg
rclb
std
lock
pop
xorb
adc
pop
push
sub
xchg
xchg
xchg
loop
cmp
mov
xchg
pop
and
nop
pop
fiadds
fwait
inc
pop
mov
push
fsubrl
repz
int3
imul
roll
subl
adc
loop
or
pop
repz
jo,pt
add
or
fadd
pop
jl
leave
mull
xchg
sub
sahf
in
mov
or
xor
out
mov
movsb
out
dec
jg
xor
addr16
loopne
es
stos
dec
push
lods
jp
dec
test
and
cmp
mov
mov
mov
fstps
xchg
mov
popl
enter
out
lds
and
adc
jecxz
or
inc
push
addr16
aaa
das
mov
mov
in
xchg
aaa
cli
pop
out
cltd
lret
mov
cwtl
mov
cmp
lret
in
inc
je
mov
sahf
fwait
into
mov
xchg
xor
adcl
loopne
adc
push
sar
nop
lcall
mov
test
jb
aas
mov
fs
mov
arpl
lret
pop
jmp
mov
jge
jp
pop
incl
data16
sub
cmp
mov
mov
popa
cmpsl
jns
and
add
mov
mov
dec
inc
ret
jne
pop
push
adc
ffree
popf
adc
dec
sahf
fisubrl
push
ljmp
inc
push
out
iret
mov
sub
orl
lcall
and
adc
shlb
push
push
inc
pop
cli
pushf
sbb
push
aad
call
xor
cmp
cmp
sub
inc
push
dec
andb
mov
pop
jne
repz
and
mov
imul
adc
sub
ret
cmovg
negb
lret
loop
arpl
xchg
push
ds
dec
daa
adc
ja
add
adc
das
xchg
sbb
jbe
or
test
push
jae
and
fwait
xor
aam
mov
and
cltd
sti
xchg
dec
stos
jno
push
xchg
shll
mov
mov
sti
add
ljmp
nop
or
adc
jnp
cli
in
push
popf
pop
add
popf
test
loop
jns
fstl
jmp
jecxz
aad
in
adc
mov
mov
js
mov
adc
fidivl
mov
lds
cmp
roll
add
push
adc
mov
mov
insb
lods
push
imul
or
dec
fisubl
stc
jmp
clc
mov
mov
outsl
mov
lods
jns
or
cwtl
mov
outsb
clc
clc
fiaddl
in
aam
jl
push
adc
popf
pop
dec
jle
dec
rorl
jne
in
pop
fidivrl
lahf
push
pushl
inc
cs
fwait
pop
adc
std
clc
xchg
lret
xchg
cli
jmp
push
das
fbld
fmul
and
icebp
jl
jbe
outsl
jns
bound
fbstp
ss
ret
dec
test
popl
sbb
and
push
xchg
pmaxsw
es
jge
mov
dec
inc
scas
inc
xor
ja
and
outsb
test
xor
xchg
adc
repnz
push
fisttps
dec
jo
mov
sbbl
mov
jmp
add
xor
mov
stc
inc
aad
das
outsb
mul
mov
cli
push
and
call
inc
add
inc
cmc
rorl
mov
cmp
mov
jmp
mov
and
cmp
cld
aam
cmp
sbb
rcll
push
dec
gs
mov
arpl
mov
adcl
dec
cmpsl
and
mov
jnp
push
sbb
aad
dec
pop
adc
icebp
push
mov
inc
sbb
mov
roll
jb
cmp
xchg
xor
mov
adc
leave
lret
mov
ret
inc
int
fdivl
inc
jp
mov
aaa
je
pop
pop
cmp
outsl
pop
jne
inc
sub
into
xchg
dec
or
shlb
cld
xor
adcb
fisubs
push
sbb
mov
or
jl
cmpsl
mov
lcall
inc
pop
cmpl
movsb
or
jns
xor
mov
aas
jno
cli
sub
sbb
not
xor
pusha
repnz
push
into
pusha
pop
aad
popa
bound
jle
mov
sbb
xchg
fmulp
and
repnz
xchg
call
inc
xchg
xor
and
and
cmp
xor
daa
push
flds
mov
test
cmpsl
mov
and
or
int3
fisttps
scas
push
jp
jo
jge
mov
pop
loop
mov
dec
jecxz
xchg
sbb
pop
push
aad
loop
xor
das
cmp
xor
or
mov
aaa
xor
arpl
adc
aam
cli
inc
or
cmc
orl
loop
dec
xor
mov
stos
mov
sub
sub
mov
lcall
push
mov
sbb
fstpl
jecxz
insb
lea
xor
add
push
repnz
js
mov
adc
xor
jne
mov
mov
getsec
jae
xor
scas
xchg
push
in
leave
lret
jno
call
in
lock
fs
inc
dec
xchg
push
mov
insb
clc
movsb
xchg
adcl
in
sub
pop
jae
cld
negb
mov
jne
fldenv
mov
and
dec
lods
jle
cmp
xchg
xchg
pop
sbb
ror
cmpsb
mov
sub
push
fdivl
addr16
mov
notl
or
pop
sub
dec
adc
pop
inc
pop
adc
xchg
fldcw
scas
gs
jns
mov
pop
push
popa
mov
dec
cwtl
sahf
mov
or
ret
inc
lret
aaa
pusha
sbb
push
or
inc
scas
test
pop
repnz
adc
jnp
sub
pop
int3
cmp
adc
jmp
es
mov
subl
jbe
push
or
mov
popa
mov
cmp
lahf
int
and
sub
add
sub
lock
cmp
push
test
cmp
ds
rorb
push
mov
pop
mov
xor
je
xchg
sub
lret
cli
lods
inc
sbb
decb
outsl
cltd
aad
fldl
xor
repz
lods
or
mov
fcmovu
cwtl
sbb
add
je
mov
dec
mov
mov
popl
scas
or
in
mov
fildl
push
fmulp
adc
inc
aad
dec
popf
or
mov
xor
add
imul
rcrb
adc
mov
push
xor
mov
fs
dec
mov
adc
popf
insl
and
aaa
mov
cmpl
rcrl
sub
cmp
ds
icebp
cltd
cmp
popf
gs
std
dec
dec
insl
test
xor
int3
pop
ja
lods
dec
or
sti
xchg
lods
mov
ss
pop
jecxz
jno
sbb
push
jge
bound
cmpsl
test
jecxz
ja
add
frstor
movsb
jmp
cwtl
stos
mov
cmp
fsub
lret
loop
stos
inc
and
es
inc
xorb
cmp
in
xor
push
ljmp
push
adcb
add
cli
add
inc
mov
fs
and
fdivl
jno
pop
rcll
cmove
add
cmp
outsb
mov
sbb
test
and
sbb
mov
xchg
pusha
push
inc
cs
mov
enter
xchg
pop
outsb
xor
jl
mov
pusha
inc
cmp
stos
lea
ljmp
jne
inc
sbb
pop
jo
xchg
inc
xchg
cmp
push
cwtl
addr16
dec
lods
out
push
imul
aad
xchg
aas
fistl
out
data16
imul
xorl
xor
cmp
xor
sbbl
pop
dec
popa
in
hlt
and
dec
inc
inc
mov
mov
and
cmp
pop
movsl
enter
xor
mov
xor
aam
or
sub
mov
push
loopne
lods
sub
cld
outsl
repnz
gs
comiss
or
mov
mov
andl
sbb
pop
stos
mov
jnp
icebp
iret
sub
push
pop
jbe
mov
push
lahf
and
xchg
add
les
jle
jg
in
mov
ret
add
xor
outsb
aaa
negl
ds
movl
inc
cvtps2pd
int
sbb
pop
and
icebp
jno
jp
adc
ja
mov
add
test
add
outsb
push
nop
popf
inc
out
pop
inc
fiadds
mov
sbb
mov
in
pop
push
jge
add
dec
jns
ljmp
xor
daa
push
jle
pop
clc
push
adc
sbb
scas
cmpsl
and
and
xor
sbb
divb
xchg
stc
ljmp
sub
out
pop
test
icebp
imul
push
scas
iret
lods
lods
inc
sbb
lods
rorb
jb
fstpt
push
xlat
sahf
push
xchg
sti
lret
jne
cli
shr
adc
addr16
jnp
pop
stos
pushf
or
scas
push
cmpsl
or
ja
cmp
xchg
mov
fidivl
sub
int3
rcl
sbb
jbe
data16
lock
mov
push
jle
pop
push
sbbl
nop
subb
cmpsl
cld
jae
bound
cmp
xor
bound
mov
push
and
rcrb
ja
xor
mov
ss
aaa
sub
or
and
test
sbbb
je
movl
mov
mov
mov
arpl
movsb
les
sbb
test
fwait
sbb
cmp
fisubs
les
cmc
mov
fistl
push
or
stos
adc
cmp
mov
add
cmp
jmp
jno
loop
xlat
fsubr
pop
hlt
setge
push
mov
scas
mov
push
cltd
ja
mov
mov
push
scas
mov
aam
dec
push
push
imul
mov
cwtl
cmc
push
xchg
rclb
xchg
inc
mov
js
arpl
xor
lret
xchg
mov
cld
ds
jbe
in
in
mov
and
out
sub
imul
inc
sbb
dec
shll
add
mov
out
mov
cltd
xchg
add
pop
insb
fnstcw
push
fmuls
addr16
mov
ja
push
sub
cmpl
cli
push
sbb
sarb
insb
xchg
divl
cmp
lock
cmp
add
in
movsl
xor
mov
jp
xor
add
ss
sbb
lret
pushf
sub
mov
mov
adc
mov
mov
out
imul
and
sbb
fs
xchg
and
dec
movsl
dec
rcll
les
mov
std
xorb
sub
fstpt
mov
jmp
in
fistpll
jb
pusha
sbb
add
mov
mov
in
das
inc
push
cmp
insb
adc
scas
or
out
or
divb
pop
lcall
dec
lods
sbb
in
sub
pop
or
js
cwtl
jnp
sbb
jo
inc
jle
stos
pop
add
add
fnstsw
mov
cmp
pusha
mov
push
add
xor
fnsave
xchg
ss
push
scas
xchg
into
das
mov
add
test
pop
lods
pop
push
push
sub
mov
imul
mov
insl
loopne
cld
dec
or
adc
pop
mov
imul
or
js
sub
add
mov
pop
fimuls
sbb
sub
sbb
or
jb
std
ja
inc
aas
test
jns
mov
push
dec
mov
mov
jo
xor
jne
lea
test
sbb
sahf
xchg
ret
cwtl
js
push
xor
and
incl
lds
sbb
fdivrs
xchg
push
add
jge
clc
adc
cmpsb
repnz
rolb
xchg
adc
in
sbb
and
rcrl
jl
xchg
sbb
fs
sahf
cwtl
jecxz
and
push
loop
pop
sti
nop
or
jae
dec
js
ljmp
push
or
or
ret
divb
push
push
clc
imul
add
loope
test
mov
mov
or
std
xchg
adc
push
leave
cltd
imul
imul
mov
xor
hlt
xor
je
ljmp
mov
ror
cmp
mov
cwtl
jp
mov
loope
icebp
call
les
xchg
les
xor
jle
call
addr16
mov
sub
mov
cmp
xchg
mov
jno
fisubl
call
sbb
jnp
subb
add
popa
dec
frstpm(287
xchg
cli
popa
jmp
testb
out
xor
in
ret
sub
adc
test
inc
icebp
mov
popf
sbb
clc
push
and
xor
xorl
push
andb
movsl
mov
cmp
lcall
and
test
push
pop
pop
mov
cmp
mov
jg
pop
jnp
pop
inc
push
dec
mov
cmpsl
pusha
out
mov
sbb
ds
xchg
sbb
hlt
fwait
pop
push
rorl
aam
cmpsb
sub
jg
inc
inc
or
inc
imul
xchg
pop
icebp
adc
icebp
adc
dec
cmp
mov
dec
inc
inc
xchg
or
add
fldenv
pop
inc
add
fadds
add
jg
stc
aaa
mov
lret
imul
outsl
lcall
call
fwait
add
popa
jl
jnp
cmp
inc
filds
and
in
inc
push
sub
sti
in
int3
pop
scas
es
dec
xchg
pop
or
xchg
sub
test
aaa
push
mov
add
sub
lret
es
dec
mov
or
sub
xchg
ljmp
in
movsb
or
mov
push
fildl
xchg
push
cmp
divl
jle
xor
pop
rcl
cmpsb
sub
lock
test
sbb
fisttpl
mov
je
pop
add
jb
loope
xor
fsub
mov
sub
addr16
scas
arpl
loope
insb
cmp
mov
sub
lcall
jnp
mov
xchg
xlat
testl
push
ds
repz
es
test
mov
cmpsl
mov
and
fwait
sbb
inc
xor
inc
inc
in
movsl
addr16
cld
jno
incb
adc
adc
pop
xor
fwait
mov
and
add
or
sub
mov
enter
xor
jb
sub
mov
test
fcoms
movsl
add
clc
iret
dec
sti
xor
movsb
cmpsl
push
inc
mov
fwait
mov
xor
hlt
push
lahf
popf
cmp
bound
sbb
ret
sbb
fstpt
sbb
or
int3
jecxz
sbb
adc
je
leave
xchg
xchg
dec
fiadds
adc
cmp
jnp
dec
imul
xchg
pop
inc
fsubrs
nop
stos
adc
repnz
call
cli
inc
cmc
pop
in
cs
xchg
scas
ret
popa
lahf
jle
rorb
sbb
xor
leave
add
push
scas
push
pop
jnp
dec
push
aad
and
xchg
cmp
cmp
inc
in
negb
push
xor
mov
mov
lock
mov
xchg
scas
int3
cmp
bound
dec
cmp
push
mov
vcomiss
or
aas
andl
sahf
lods
cmp
dec
add
fldt
popa
movsb
pop
ficompl
add
dec
jno
dec
jns
rcl
in
fdiv
pop
pop
xorb
addr16
imul
lods
xlat
jb
sahf
out
lahf
mov
push
imulb
ret
stos
add
out
imul
xchg
stc
leave
mov
nop
adc
mov
pop
loopne
push
shl
sarb
insb
push
pop
jbe
sbb
sti
mov
cmp
jl
cmp
dec
call
inc
cmp
push
mov
xor
decl
add
subb
ss
xor
xchg
imul
mov
test
cwtl
aam
pusha
or
lods
inc
mov
add
sub
ljmp
mov
inc
jle
mov
inc
or
adc
sarb
fidivl
js
es
inc
fcoml
divb
pop
mov
add
js
sub
subl
mov
ds
stos
fcoms
lahf
in
scas
out
mov
dec
add
xchg
or
int
xchg
stos
nop
mov
dec
xchg
in
mov
sti
sub
inc
push
jnp
dec
mov
pop
rcrl
add
shl
or
fisttpl
jp,pn
inc
sub
adc
shl
repz
and
xchg
aas
aad
sbb
xchg
les
dec
dec
and
jle
and
jmp
ss
sbbl
pop
shl
dec
sbb
xor
test
sbb
push
ljmp
sub
jecxz
call
cld
aad
iret
shlb
adc
shlb
sub
sbb
adcl
stc
cwtl
sbb
repnz
scas
push
jae
add
adc
dec
sub
pop
fisubl
aaa
jge
sti
cltd
mov
cmpsb
mov
push
push
or
incl
add
in
push
out
or
test
mov
les
mov
push
lock
xchg
dec
or
xchg
aad
jmp
adc
push
sub
flds
and
xchg
es
mov
aad
add
jmp
and
sahf
and
inc
rclb
dec
orl
int
push
push
int
add
mov
sub
ret
icebp
gs
clc
out
xchg
mov
jmp
add
push
adc
mov
test
or
dec
ds
dec
xchg
cltd
sbb
mov
add
xor
lods
imul
gs
mov
js
test
lods
push
arpl
jl
pop
push
sahf
lea
add
lea
mov
sar
push
mov
iret
dec
das
add
jnp
hlt
push
cs
xor
add
aam
fwait
jge
jmp
lods
insl
xchg
call
jg
and
xchg
test
cmp
jp
ja
inc
dec
mov
cmpsl
repnz
stc
cmp
xor
mov
jbe
mov
or
fidivrs
sbb
out
jnp
mov
and
int
adc
test
jmp
enter
cwtl
icebp
loope
rcrl
jecxz
je
pop
sbb
push
xor
xchg
pop
add
mov
inc
jo
les
test
inc
loop
inc
fucomi
fs
dec
xor
push
jbe
lcall
lds
mov
scas
push
addr16
pop
out
fisubrl
dec
aas
outsl
xchg
push
out
xchg
setne
push
push
dec
xchg
xchg
ret
adcb
pop
into
rcrl
pop
shll
mov
ss
negb
outsl
ljmp
lcall
repnz
int3
jo
in
sub
pusha
outsl
ret
movsl
jle
mov
pop
out
add
xchg
and
nop
xchg
pusha
sub
leave
cmp
mov
es
or
sub
sub
popf
add
push
movsb
sub
ss
and
test
or
mov
daa
inc
mov
out
xchg
cmpsb
addr16
push
imull
fisubrs
sbb
cmp
stc
adc
repnz
sub
ret
sub
insl
je
mov
pop
and
mov
aam
int
adc
and
inc
jne
jnp
jbe
cwtl
fildll
insl
into
add
jae
sti
dec
lret
adc
outsb
fs
stos
jnp
cmp
and
jae
iret
and
xchg
fnstenv
xor
push
mull
sbb
cs
fldlg2
clc
inc
push
sub
pop
and
mov
mov
dec
mov
js
dec
popf
and
les
pop
sbb
mov
fbld
add
mov
sbb
rcr
xchg
insl
imul
std
lret
clc
dec
or
push
push
lret
or
in
push
ljmp
jae
sub
repz
loopne
sub
stc
mov
or
jmp
push
mov
out
clc
add
xchg
fs
or
cmc
jle
push
lods
repz
inc
mov
pop
mov
adc
imul
cld
xor
into
je
xor
sbb
pop
mov
ret
repz
xchg
jnp
out
xchg
movsl
xchg
sbb
xchg
je
out
arpl
pop
stos
test
jecxz
xor
rclb
ss
xchg
stos
fs
mov
lea
imul
mov
das
stc
push
adc
movsb
sbb
push
jl
lods
mov
rorb
xchg
add
js
xchg
ss
mov
lea
push
or
or
xchg
pop
dec
decl
fs
les
push
push
inc
lcall
mov
jns
in
in
pop
lock
outsb
and
fwait
jb
sub
insl
push
pop
int3
cli
jnp
je
jo
das
pop
in
adc
mov
dec
mov
add
xchg
test
out
or
inc
jbe
cld
fnsave
xchg
inc
adc
mov
cmp
sbb
xchg
nop
lcall
arpl
movsl
sub
and
bound
mov
cmp
inc
sarb
imul
pop
push
or
mov
sub
addr16
lock
jbe
cld
push
fildl
scas
xorl
jbe
xor
and
cmp
dec
add
mov
fwait
sarb
icebp
fidivrs
and
outsl
rcrl
pop
cld
call
aad
or
test
inc
imulb
insb
insl
adc
sahf
sahf
aas
xlat
mov
mov
addr16
clc
mull
aam
aad
xor
mov
mov
insb
scas
push
lea
fpatan
call
leave
dec
fwait
scas
ret
imul
or
movsb
push
jae
fbld
popa
shl
or
ss
jns
dec
int3
scas
add
or
add
pop
and
push
popf
sub
and
mov
daa
or
movsb
cmp
dec
int3
mov
fnstsw
movsb
lea
xor
mov
xor
loop
adc
sub
loop
xor
lods
push
cld
jp
jge
pop
fisubrs
aas
aas
xor
jle
mov
aas
xchg
popf
add
push
popf
xor
sbb
jl
out
into
push
call
cmpsl
jne
xor
inc
adc
ja
das
or
out
data16
mov
in
arpl
push
pop
aaa
mov
jno
xchg
xlat
data16
pop
mov
clc
or
xchg
pop
mov
xchg
mov
fcoms
dec
testb
ljmp
sar
das
cmc
jns
pop
xchg
popa
pop
xchg
xchg
pusha
pop
push
imul
sub
push
and
dec
outsl
movsl
xchg
mov
int3
and
mov
pop
xchg
mov
dec
xchg
xor
mov
movsb
stc
xor
xchg
mov
xchg
shrl
fstpl
jg
mov
mov
inc
xor
adc
cmp
je
scas
cmpsl
pop
jns
xchg
stos
mov
ja
jno
int
sub
mov
scas
sub
ds
pop
out
mov
xor
or
xchg
push
cmp
xor
pop
popa
mov
popf
sbb
rorb
cmp
test
je
loop
pusha
fcoml
mov
push
push
cmp
hlt
sub
imul
mov
mov
movnti
push
ljmp
loop
pop
push
sbb
pop
cmp
cmc
aaa
repz
les
hlt
jno
sub
pop
or
dec
lods
mov
or
jb
inc
add
pop
stos
arpl
xchg
dec
xor
pop
aad
sbb
mov
clc
jno
mov
pusha
inc
or
add
loope
lock
repnz
lds
popl
rcll
movsl
cmpsl
sub
dec
mov
xor
pop
mov
sbb
adc
mov
data16
insl
sbb
fcoms
lcall
cmp
push
out
mov
rorb
clc
adc
dec
cltd
push
pop
bound
test
adc
fwait
mov
dec
pop
popf
push
outsl
js
add
sti
mov
pop
orl
fs
sub
inc
lea
pushf
lods
pop
sub
xor
enter
push
xchg
push
popa
rclb
repz
xchg
sub
or
push
push
test
stos
popa
fidivs
popa
es
push
inc
lds
lods
test
mov
mov
mov
dec
movsb
decl
mov
mov
icebp
push
popf
in
icebp
push
mov
mov
iret
lret
mov
test
xor
mov
adc
lcall
subl
cmp
mov
pop
ret
pop
and
cwtl
pop
or
icebp
sbb
std
lds
pop
lods
dec
mov
lock
test
fst
mov
scas
dec
push
sbb
imul
push
enter
adc
mov
add
add
aad
test
xchg
int
cmp
pusha
cltd
pop
stc
sbb
sbb
mov
out
inc
lcall
fcomi
sbbb
xor
faddl
stos
mov
enter
mov
jne
cmpsl
iret
jno
ss
ret
repnz
mov
mov
fdivr
cmp
xorl
fsubs
and
aas
movsl
ljmp
icebp
sahf
enter
cmp
loop
or
sti
loop
mov
subb
or
mov
add
into
movsb
xchg
sub
cld
in
out
andb
data16
out
movsl
inc
je
dec
stos
test
push
mov
sub
or
sbb
test
jae
les
stos
inc
neg
sub
xchg
mov
jl
leave
or
cmp
pop
xlat
mov
and
xchg
jne
mov
mov
jl
add
cmc
loopne
xchg
and
add
sub
fisubrl
movsl
inc
test
xchg
or
adc
fisubrl
pop
lret
arpl
test
rcl
mov
and
std
pop
cs
add
push
outsb
dec
pusha
arpl
jmp
hlt
mov
int
mov
nop
inc
shll
setle
xchg
jns
mov
add
cltd
outsb
or
push
cmp
and
fldl
xchg
mov
sbb
bound
push
into
js
xor
sub
sbb
inc
cmp
mov
mov
shl
test
jns
and
pop
mov
inc
int3
mov
dec
adc
in
sub
dec
pop
add
in
mov
xchg
mov
add
jae
push
insb
stos
in
xor
mov
sbb
test
es
lret
and
cli
cmp
sbb
add
daa
lahf
mov
and
pop
push
sahf
jae
or
call
fstpt
xor
cld
repz
and
mov
data16
mov
clc
ss
loopne
and
mov
in
inc
jl
xor
icebp
rorb
inc
mov
cmp
test
or
jne
dec
sbb
pop
dec
mov
adc
pop
dec
mov
insl
and
push
bound
lock
lea
nop
adc
xchg
arpl
movsb
pop
rcrl
sub
push
lret
aad
sub
not
jbe
mov
insb
adc
and
xchg
mov
push
push
push
test
imul
lahf
mulb
pop
dec
addb
mov
dec
inc
cwtl
aam
test
inc
or
test
inc
jnp
aad
ret
jmp
rorb
xor
lahf
pop
lds
and
pop
adc
sub
in
leave
adc
inc
push
test
loope
testb
adc
lds
sub
xor
jle
into
sbb
lcall
xor
lahf
xchg
inc
push
mov
rcrl
loop
repz
jg
stos
scas
mov
and
jg
mov
jbe
in
push
cmpl
mov
addl
lock
lods
mov
adc
jne
loope
push
leave
scas
ljmp
pop
in
add
inc
mov
or
push
mov
mov
mov
xchg
insl
pop
daa
fmull
test
orb
xor
call
inc
mov
adc
enter
mov
jp
int
and
or
cs
fmull
rorb
xor
sbb
icebp
ss
js
test
subl
or
mov
dec
mov
push
jno
jmp
sbb
push
jg
cmp
inc
mov
cld
sub
out
inc
jecxz
pop
es
cmc
adc
inc
int
scas
sarl
cltd
mov
mov
lahf
ljmp
cmp
fs
inc
cltd
pop
push
cmpl
mov
xor
lds
movsl
sub
and
jne
cmpsb
pop
into
push
es
jmp
mov
scas
fmull
cmp
adc
lods
frstor
lahf
arpl
sahf
aam
mov
lds
and
imul
cmp
inc
push
jnp
sub
test
sarb
push
repnz
inc
ret
jno
jbe
xchg
inc
mov
and
aam
int
push
loop
mov
pop
shrl
outsb
cld
dec
inc
loopne
fxtract
lea
cs
ljmp
dec
cmp
adc
movsb
fisttpl
sbb
mov
data16
inc
jo
mov
fdivl
lret
mov
in
movb
xchg
stc
lods
lods
xchg
push
jecxz
mov
fs
in
dec
mov
add
dec
fimuls
loopne
dec
in
shlb
cmpsb
inc
test
sbb
fwait
pop
push
inc
sbb
leave
add
xor
pop
in
ljmp
inc
pop
out
or
jne
outsl
enter
push
jns
sbb
dec
arpl
addr16
js
jnp
cmp
dec
loop
in
mov
int3
repnz
push
insl
cmpsb
xlat
divb
sub
insb
push
pushf
ret
inc
push
fadds
jecxz
or
sub
jmp
mov
clc
jbe
pop
stos
mov
mov
es
mov
mov
push
cmpsb
out
jae
cwtl
fdivrs
aaa
sub
movsl
sub
loop
popa
enter
out
add
jb
mov
les
cli
shr
cmc
fs
outsb
inc
sbb
jbe
xchg
shl
cmpsb
add
push
gs
call
and
cwtl
mov
mov
pop
cmpsl
jecxz
pop
mov
xor
cmp
cmpsb
jns
jae
out
mov
or
xlat
sub
clc
mov
lret
inc
mov
scas
cmp
fnsave
int3
jo
andb
sbb
or
int
rcrb
dec
and
xchg
dec
add
cmp
andb
xchg
sub
sbb
push
push
sub
in
xchg
adc
cmpsb
xchg
sti
faddl
rcl
mov
dec
dec
dec
xlat
sti
or
pop
jl
aad
iret
loopne
mov
outsb
push
mov
cmpsb
int3
int
aaa
jle
add
test
xchg
gs
push
mov
imul
lahf
xchg
push
cmp
push
je
rolb
daa
jl
xchg
jnp
mov
test
xchg
rcrb
sbbl
or
push
cmp
shlb
insl
inc
xor
jle
or
out
adc
je
sub
mov
ret
xchg
addb
outsb
push
je
stc
cmpsl
jecxz
jae
jmp
sbb
sbb
mov
mov
lahf
std
mov
cmpsl
int
icebp
hlt
push
xchg
rol
mov
and
insb
imul
and
mov
mov
dec
shl
add
rorb
test
lds
xchg
lods
icebp
loopne
iret
loop
cmpsb
inc
in
push
or
dec
scas
jnp
push
loope
jnp
ds
test
jb
test
sbb
lods
rcrl
cmp
stos
pop
sbb
sbb
add
das
push
lea
mov
loop
push
test
and
das
sub
lods
mov
hlt
mov
xor
cmpsl
hlt
jns
shlb
mov
push
outsl
and
mov
stos
ja
aas
int
and
add
add
adc
mov
or
mov
movzbl
xor
push
mov
cmp
push
mov
dec
nop
iret
and
fwait
repz
mov
insb
xchg
cmp
pop
adc
or
jmp
mov
jmp
sahf
popf
in
rcll
add
xor
mov
enter
mov
xorl
stc
pop
dec
hlt
mov
mov
xor
sbb
push
push
nop
flds
push
loope
cld
pop
fnstenv
dec
ja
loope
jns
cmp
xchg
in
xchg
shll
hlt
pop
dec
cwtl
pop
test
test
xchg
dec
js
xlat
fcmove
nop
int3
popa
mov
lahf
jb
sti
pop
lea
xor
xlat
sahf
xchg
cltd
jp
test
mov
jg
les
jge
in
mov
jmp
data16
std
inc
adc
mov
cmp
sbb
call
icebp
cmc
sub
lret
sbb
jle
sub
bound
scas
ja
mov
xchg
aas
pop
imul
imul
outsl
jnp
lock
mov
rcrb
adc
push
inc
inc
out
popf
cmp
cltd
dec
adc
dec
popf
fwait
call
xchg
clc
outsl
negb
jb
movb
ds
test
inc
aam
dec
in
movsl
add
dec
push
lods
xor
push
push
sti
push
loop
addb
mov
sub
push
push
mov
mov
repz
orb
xor
mov
lock
repnz
or
div
ds
sbb
out
cmp
adc
dec
add
xchg
xor
test
pop
mov
ja
mov
cmc
or
es
cmp
cwtl
mov
addr16
subb
lock
mov
je
adc
xor
shrl
mov
add
das
sarl
add
stos
inc
sbb
gs
and
sarb
jmp
mov
sahf
mov
push
aaa
stos
inc
sub
xor
lcall
int
das
xchg
je
aam
jg
sub
das
fstps
lods
ret
leave
sub
lods
fwait
cs
and
xor
add
mov
sbb
aaa
pop
ret
push
ss
xchg
sbb
in
cwtl
adc
mov
or
es
mov
in
dec
inc
push
int
mov
imul
int3
outsb
mov
push
je
mov
mov
or
lock
and
mov
fwait
xchg
jge
mov
lock
lcall
insl
jb
loopne
aaa
jp
jl
movsb
sbb
and
cmp
test
mov
jmp
data16
test
xchg
inc
or
xchg
sub
dec
cmpsb
cmpsb
inc
in
jo
inc
push
sahf
sub
fs
xor
add
mov
rclb
adc
out
daa
xchg
mov
shll
out
das
and
push
and
repz
inc
adc
addr16
fistl
sbb
in
sbb
addr16
addr16
insl
lds
lea
mov
dec
ficoml
popf
pop
movl
out
xchg
clc
out
and
push
mov
mov
int3
pusha
mov
add
stc
push
test
push
std
out
shlb
push
sbb
sbb
dec
push
dec
fs
mov
fildll
add
loope
ljmp
scas
popf
jl
push
push
or
and
popa
push
out
xchg
and
ret
mov
sbb
xor
addb
lods
mov
bound
ficomps
adc
cmpl
push
sbb
dec
and
enter
dec
xor
xchg
popf
dec
das
fistl
adc
fmul
in
leave
pop
cmp
movl
add
fwait
xlat
mov
in
inc
bound
fisttps
sahf
push
pop
fdivrs
inc
imul
pop
test
dec
nop
in
mov
popa
inc
rorb
or
dec
int3
cld
test
jmp
cmovnp
push
jae
or
outsl
jns
jle
push
inc
xchg
or
mov
jecxz
les
and
fstpl
pusha
mov
hlt
outsb
and
mov
scas
inc
out
pop
mov
imul
or
nop
mov
mov
xchg
pop
jo
inc
dec
int3
outsb
jns
stos
sbb
das
loope
mov
movzbl
ret
pop
mulb
addr16
flds
mov
enter
in
jae
dec
push
dec
shrl
or
cmp
pusha
inc
jmp
cmc
mov
cmpl
and
int
mov
das
ljmp
adc
adc
fbstp
sti
imul
arpl
pop
xchg
scas
mov
clc
mov
dec
popa
fbstp
xchg
mov
xchg
inc
fstps
daa
sub
jbe
inc
int
out
push
sub
jns
cli
sbb
fs
bound
mov
sub
insl
push
jmp
adc
sbb
push
xchg
cmp
mov
jnp,pt
in
stos
out
inc
pushf
pusha
test
mov
test
dec
add
xchg
rcr
xlat
and
rolb
ja
sbb
imul
out
insb
rol
and
mov
cmp
sub
mov
adc
inc
cwtl
jae
sub
stos
dec
push
sub
or
cli
pop
insb
les
xor
push
aas
xor
es
xor
lcall
dec
mov
and
es
mov
lcall
add
sar
push
lods
push
into
mov
push
fst
scas
imul
into
dec
push
push
arpl
test
shrl
stc
fwait
mov
dec
movsb
pop
lret
push
iret
int
push
xlat
fstp
cmp
int
and
loope
cmp
pop
ss
jo
pop
stc
dec
cli
add
or
or
pop
in
pop
in
inc
jl
ret
cld
push
outsl
int
sbb
and
fldcw
inc
add
push
ret
imul
cmpsl
stos
push
inc
ret
ja
mov
adc
fbld
int3
sti
xchg
dec
ret
das
mov
or
pop
in
and
fisttps
sub
jmp
jo
and
pushf
fimuls
mov
mov
pop
or
mov
in
fsubrl
inc
add
movsb
pop
pop
sbb
push
cmc
xchg
jle
dec
cmp
fidivrs
scas
andb
hlt
mov
dec
xchg
jno
mov
mov
mov
jp
jle
or
ret
test
dec
inc
or
inc
or
std
hlt
aam
fwait
pushf
neg
lret
dec
enter
xchg
popf
fstp
mov
mov
pop
leave
jmp
out
sbb
inc
movsb
movsb
pop
push
aaa
je
std
sbb
jnp
adc
ljmp
adc
in
scas
shll
cmp
clc
in
addr16
cmp
shlb
test
and
xchg
xchg
adc
in
jo
adc
lea
sub
xor
outsl
dec
push
and
cmp
cmp
and
inc
sbbl
xchg
push
sahf
insb
push
push
xchg
ljmp
cwtl
insb
cmp
std
lods
jo
mov
adc
lret
pushf
movsb
ret
lcall
push
mov
and
push
pop
adc
enter
mov
and
inc
rcrb
popa
xchg
inc
jp
inc
and
lea
xchg
aaa
add
push
test
pop
push
xchg
add
dec
xor
dec
inc
jmp
and
lock
sub
mov
shrl
push
adc
test
pop
sti
xchg
cmpsb
int3
or
imul
popa
push
adc
adc
push
pop
mov
int3
mov
or
xchg
or
cmp
mov
aam
icebp
clc
jg
movsl
jle
xchg
or
fildl
bound
fldpi
mov
rorl
stc
xchg
xor
add
pop
adc
popf
sub
or
jmp
cmp
cmp
fmull
xor
les
and
loop
stc
cmp
jl
test
sbb
fnstcw
mov
arpl
mov
jmp
pop
cli
insl
notb
cmc
xchg
in
out
or
and
in
adc
jno
js
insl
stc
rolb
aam
bound
ficompl
xchg
ftst
pop
jecxz
jmp
jge
jnp
std
lock
repz
lods
ss
cmpb
add
cmc
mov
jl
inc
idivl
popf
sahf
popa
fucomi
inc
pop
and
xor
xchg
movsl
mov
sbbb
mov
xlat
popf
sub
je
iret
cs
dec
out
enter
test
cs
paddsb
inc
stos
xlat
stos
push
aaa
pmulhw
popf
scas
mov
mov
stos
jecxz
add
push
in
mov
lret
mov
fiaddl
repz
xchg
xor
adc
out
unpckhps
push
idivb
sahf
pusha
addb
pop
push
movsb
mov
scas
enter
jg
int3
push
pop
aam
mov
pop
xor
and
lret
dec
adc
out
cmp
push
add
inc
mov
push
stos
fstl
pusha
cmpsb
pop
push
mov
rol
mov
xchg
pop
inc
sub
int
mov
repz
fnsave
faddl
rorl
cmp
mov
jns
jnp
jne
and
inc
clc
lods
sbb
mov
enter
xchg
xorl
mov
pop
cmp
dec
enter
mov
add
xchg
mov
and
into
xlat
sarl
ds
dec
xchg
xlat
pop
inc
mov
in
iret
and
jnp
test
and
pop
xchg
loope
ror
inc
lcall
cmpsl
or
xor
and
mov
jo
std
add
mov
pop
orb
adc
lcall
lds
xchg
fs
ss
aas
fsts
iret
addb
pushf
clc
push
into
jbe
or
nop
xchg
push
mov
add
mov
fisubrs
aaa
stos
or
jl
arpl
int
pop
cld
addr16
mov
test
into
mov
faddp
mov
push
imul
ret
ljmp
mov
cmp
mov
cmp
daa
fdivl
mov
mov
ljmp
mov
fdivp
scas
add
ret
mov
addr16
adc
push
or
icebp
push
test
stos
pusha
add
jo
fmuls
sub
mov
fiaddl
rcll
xchg
dec
call
lahf
daa
ror
jle
xor
scas
push
xlat
leave
es
adc
inc
fcoms
sub
out
mov
dec
shll
jb
lret
shll
cmp
rolb
push
dec
xlat
lcall
sub
testl
test
movsl
stc
movsb
ljmp
and
mov
scas
lcall
mov
cmp
aaa
mov
imul
mov
add
outsb
push
popa
fcomps
repnz
popa
jg
jne
roll
ror
pop
cmp
ja
mov
add
jb
pop
jnp
call
sbb
mov
sarl
xor
cmp
jb
inc
sarb
xchg
lock
loope
repz
repz
ret
imulb
icebp
inc
imul
cmp
bound
mov
in
cwtl
cmp
rorb
and
fistps
lock
and
push
daa
das
inc
xor
dec
cmp
push
cld
sub
and
push
scas
pushf
adc
js
mov
popa
sub
push
out
ss
in
stos
or
in
les
push
add
icebp
in
and
dec
fimull
xor
add
sub
mov
pop
add
out
or
pop
ljmp
cmp
mov
daa
fwait
adc
in
aam
jl
fwait
es
hlt
orb
ret
stc
or
jbe
movsb
mov
add
mov
scas
xor
pop
cmp
inc
xchg
cmp
stos
shl
leave
mov
jg
mov
lods
mov
xchg
daa
or
inc
push
loop
in
mov
xchg
sahf
xor
repnz
cmc
aas
ficompl
hlt
sub
sub
pop
cli
pop
mov
adc
push
mov
ds
sub
mov
mov
prefetch
or
es
jns
iret
inc
sub
jns
xchg
inc
jns
mov
lret
push
movsb
pop
xor
stos
shll
mov
addr16
pop
pop
inc
mov
xchg
mov
dec
dec
mov
add
mov
xchg
mov
inc
stc
and
cmp
xchg
jmp
jp
mov
mov
and
xorl
mov
pop
inc
fnstenv
sbb
dec
fs
push
cmpsb
insl
popf
imul
mov
xchg
iret
mov
inc
cmp
mov
pop
jmp
clc
cmc
sbb
mov
inc
pop
add
sub
daa
cmp
cmp
leave
imul
mov
jecxz
ja
jb
push
out
mov
xor
sbb
stc
jnp
jnp
lods
pop
jnp
sbb
jns
push
out
repnz
hlt
or
mov
rclb
cltd
gs
sti
xor
add
fsubl
sbb
std
cmp
mov
orb
in
fldenv
pop
mov
aam
lcall
test
rcrb
or
cltd
cmp
ss
pop
push
aam
mov
scas
adc
call
repnz
idiv
jns
popa
mov
xchg
dec
daa
adc
jae
cmp
jnp
lcall
fcompl
jl
cli
xlat
jecxz
or
mov
sub
test
dec
cmp
nop
cld
adc
in
ljmp
jg
mov
jae
mov
mulb
xlat
rcpps
aam
xor
mov
xchg
out
inc
fwait
push
or
mov
push
or
dec
loop
addl
cmp
push
int
add
rol
inc
xchg
mov
jo
sbb
test
andb
loop
roll
aam
loope
dec
cmc
rcrb
inc
sbb
outsl
stc
and
sahf
inc
in
clc
inc
je
xchg
jp
sarb
dec
stos
movsb
pop
cmp
lret
aad
jge
stos
popa
push
in
lahf
sbb
push
ds
jo
pop
in
sub
inc
dec
sbb
into
sub
cltd
cmc
inc
mov
mov
pusha
adc
fmuls
cmc
les
jp
inc
or
arpl
nop
hlt
and
xchg
or
sub
jmp
test
je
nop
mull
cld
xchg
fwait
stc
daa
mov
in
addr16
jo
adc
sti
clc
mov
xchg
mov
hlt
mov
sub
push
daa
push
mov
outsl
xchg
fcmovne
pop
mov
adc
xchg
push
shlb
stc
dec
mov
sahf
pushf
insb
daa
in
adc
push
adc
and
jg
mov
sub
in
add
sbb
xchg
sbb
clc
jae
sbb
repnz
filds
pop
or
fucomi
jge
sub
mov
dec
jo
push
pcmpgtw
dec
std
dec
pop
inc
hlt
jmp
popf
test
insb
fs
or
outsl
dec
mov
test
or
imul
dec
add
dec
fcoms
mov
arpl
shrb
lods
sbb
sub
push
loop
das
das
and
fisubl
je
rcrl
ds
fidivrl
insb
dec
push
mov
and
loope
sub
loopne
mov
popf
sti
xchg
in
lret
cmp
sbb
xor
fwait
cli
les
lods
aas
adc
in
adc
xchg
sub
ss
inc
in
xor
mov
shl
and
pusha
ret
loop
or
out
cmp
and
icebp
movsl
jbe
out
lods
stos
add
jae
pop
imull
enter
ja
std
sub
lods
cltd
dec
and
inc
loope
insb
sbb
hlt
adcb
dec
lahf
loop
jbe
cmpsl
sub
cmpsl
movsl
das
lcall
fwait
pop
and
inc
mov
fsts
jg
push
mov
push
sbbb
cld
je
sbbl
hlt
add
jae
mov
rcll
and
scas
add
xchg
std
mov
cmp
mov
inc
mov
adc
mov
out
jle
sbb
and
enter
mov
pop
dec
mov
out
cmp
mov
jp
notl
lds
sbb
pushf
pop
and
repz
sbb
add
fs
xchg
push
adc
in
ret
in
xor
mulb
mov
dec
jae
or
adc
sarb
add
mov
jge
add
jmp
cmp
cmp
and
xchg
push
mov
mov
mov
or
movsl
push
enter
jae
ljmp
idivb
icebp
ffreep
std
cmpsl
lret
pop
mov
cmpsb
sub
pop
out
xor
aas
lds
inc
pop
mov
and
imul
hlt
push
std
call
mov
pop
and
add
mov
cmc
lcall
inc
fsubp
mov
pop
sub
xor
dec
lea
insb
xorb
lret
loop
pusha
loope
xchg
mov
sub
pop
mov
int3
pop
push
fdivs
xchg
jp
shrb
fwait
das
and
stos
cmp
xor
dec
jp
mov
mov
inc
in
cmp
adc
fsubr
adc
fs
loop
or
or
push
inc
das
nop
sub
ds
bound
jb
jge
movl
jbe
push
cmp
cmp
pushf
les
scas
pushf
inc
stc
and
inc
call
in
shrb
in
sahf
inc
sub
adc
inc
push
pusha
cmpsl
addr16
rcl
add
lcall
jge
sub
call
jne
pop
xor
push
inc
movsb
push
dec
dec
mov
mov
sub
lods
pop
jb
iret
add
fdivl
roll
mov
and
pop
cmp
cltd
fcmove
mov
or
fcmove
jno
mov
mov
or
cmp
test
mov
xor
popa
jnp
gs
fs
jo
and
and
incb
loope
cld
negb
xchg
aam
push
fucomi
sbb
add
shll
fsubp
stos
incl
push
call
fcoml
xor
fistl
enter
in
mov
adc
stos
js
inc
aas
mov
mov
sub
in
dec
gs
mov
into
cmp
sub
dec
fcomps
inc
sub
mov
sbb
mov
jns
inc
mov
out
mov
lods
movsl
pop
imul
cmp
sub
fimuls
in
aad
sub
and
lods
inc
inc
add
addps
movsl
arpl
in
gs
into
dec
mov
negl
mov
subl
push
xor
cmp
push
lcall
pop
push
adc
sub
ja
hlt
lcall
xchg
std
frstor
inc
and
repnz
jmp
jne
lcall
mov
dec
fisttps
loopne
aam
sub
xchg
mov
stc
dec
mov
mov
xor
jno
out
ret
pop
dec
movsb
push
outsb
xchg
das
lcall
push
xor
adc
loop
enter
test
sbb
test
std
gs
cmp
sub
xchg
xchg
cmp
add
push
mov
mov
jae
push
add
jle
gs
push
out
add
xchg
lods
in
sub
mov
div
dec
lock
sbb
out
inc
adc
xchg
cmp
add
das
es
or
inc
jp
lock
pop
add
sub
imul
incl
stos
sahf
jl
outsb
push
jnp
jo
xchg
rcrl
push
into
stos
xor
mov
inc
xchg
add
aas
mov
ficomps
and
imul
push
mov
xchg
push
xchg
stos
mov
lods
mov
enter
enter
out
and
das
adc
into
jmp
mov
sarl
dec
rol
sbb
jb
test
fisubs
and
cmp
test
cmp
pop
sarl
clc
loope
sbb
mov
fistps
fdivr
sbb
dec
xchg
test
rclb
or
mov
pop
push
out
adc
sbb
sub
and
inc
mov
mov
adc
les
adc
jae
ret
mov
leave
pusha
sbb
fimuls
pop
push
mov
and
add
mov
jl
and
sub
or
inc
scas
adc
pusha
jecxz
lds
push
jl
frstor
in
dec
ljmp
or
xchg
push
les
push
pop
lods
jb
in
cmpsb
enter
push
addr16
in
lods
in
lock
and
rcrb
xchg
in
ss
in
inc
pop
mov
add
mov
jg
sub
sub
jcxz
or
pusha
jns
out
mov
aas
xchg
jmp
arpl
cmp
lret
lds
or
add
sbb
movsl
sbb
mov
movsb
add
fstpt
lds
test
ljmp
mov
rep
xchg
popa
cs
or
jp
aam
test
movsb
rcrl
mov
pushf
dec
sub
or
sub
sbb
mov
push
test
es
gs
fisttps
inc
sub
ss
mov
jl
movsb
mov
pop
or
arpl
xchg
adc
addr16
xchg
xor
rcrb
add
adc
mov
rolb
pop
mov
out
sbb
cmpsl
sub
in
leave
ffree
mov
jg
cmpsl
adc
call
jb
out
in
mov
testl
into
push
loopne
inc
cmpsl
push
into
lcall
or
push
inc
and
jmp
jnp
inc
pop
mov
dec
sbb
or
dec
jne
adc
rorb
rcr
outsl
cmp
das
dec
cmpsl
jge
dec
popf
pop
call
into
repz
pop
xchg
cmpsl
stos
and
mov
and
cmp
mov
mov
xchg
adc
xchg
movsb
cmc
std
cs
dec
xchg
cli
dec
sub
popf
adc
and
clc
add
cmp
int
xlat
jl
xchg
xchg
scas
insb
mov
dec
and
add
ja
cmpsl
mov
ljmp
mov
pop
mov
outsb
xlat
data16
insl
leave
sbb
mov
sub
xchg
mov
fimull
iret
adc
xchg
in
ret
je
xor
ficoms
ret
push
mov
arpl
jb
push
scas
push
ja
xchg
js
push
add
int
xrelease
mov
push
fiaddl
lock
jmp
movsl
lcall
cmp
add
out
test
adc
jae
es
xchg
imul
cwtl
imul
test
or
faddp
cmp
test
call
std
jno
xchg
sub
fidivs
mov
add
orb
cmp
adcb
nop
popf
subb
scas
sbb
mov
hlt
xor
cs
testb
icebp
jnp
cmpsl
ljmp
lahf
shrl
into
mov
mov
or
push
ficompl
leave
mov
pop
mov
mov
sahf
add
add
add
stos
xchg
jg
push
ret
out
adc
and
fidivrs
sub
outsl
rcll
push
shll
out
mov
xchg
jp
subb
cmp
push
nop
push
mov
rorb
inc
pop
mov
inc
dec
xor
aad
sub
movsl
sbb
push
cmc
adc
or
popa
inc
mov
mov
dec
xor
ret
mov
inc
insl
les
stos
lods
pop
add
insl
dec
loopne
push
fs
clc
jno
aas
fwait
xchg
sahf
sbb
pop
mov
faddl
xchg
ljmp
and
mov
push
lahf
mov
push
subl
lahf
push
repnz
xchg
or
pop
jmp
lods
push
ja
cmp
lods
imul
andb
clc
jae
fiaddl
pop
or
inc
repz
pop
mov
push
xchg
push
fmul
mov
lock
ret
lock
adc
jg
add
jbe
mov
dec
xchg
arpl
mov
stos
icebp
mov
icebp
dec
cmp
testl
mov
test
in
inc
addr16
mov
jb
shrb
lock
loop
addr16
cwtl
shr
adc
adc
es
out
incl
mov
fdivrs
xor
pushl
loope
xchg
xor
addb
jns
mov
or
orl
jne
outsb
xor
in
add
scas
and
cmp
jnp
shlb
mov
andl
ja
adc
insl
rolb
mov
and
cs
add
leave
pushf
iret
ret
push
cmp
in
xchg
fcmove
sbb
dec
sub
mov
ret
pop
popa
cmp
decb
inc
cmpsb
fidivs
ret
shll
rclb
or
scas
adc
xchg
movsl
jg
lods
dec
push
dec
xor
dec
arpl
adc
push
sbb
push
cmp
mov
ret
nop
jns
addr16
js
out
lahf
lea
jle
add
jmp
testl
sub
push
jl
popa
jno
xor
outsl
lret
dec
push
hlt
adc
inc
cmp
cmpsb
ljmp
mov
xor
add
in
and
inc
mov
loop
xor
dec
call
lcall
cmpsl
or
jae
outsb
pop
out
js
loopne
sub
or
and
xor
ret
or
les
rolb
sbb
std
or
and
jne
push
xchg
sub
mov
mov
cmp
cmc
fadds
pop
clc
push
lcall
sbb
lret
dec
mov
jae,pt
call
pop
in
pop
fldenv
cli
adc
xlat
jmp
cli
movsl
mov
das
mov
aam
fidivs
mov
loop
adc
mov
mov
lcall
sbb
ds
dec
loop
adc
fildl
cmpb
ret
mov
xor
in
out
cld
sbb
leave
int3
jbe
outsl
xchg
loope
sbbl
in
xor
out
dec
cmp
je
xchg
outsb
arpl
inc
xchg
subb
nop
push
fildll
cs
stc
fs
cli
push
leave
into
into
xchg
and
pop
les
push
mov
inc
fmuls
sbb
sahf
cmovl
dec
add
pop
jmp
cmp
jp
sbb
or
xchg
leave
out
jp
xor
cmp
dec
imul
out
sub
in
pop
sub
mov
xor
rcr
jbe
les
cmp
bound
sub
dec
insl
push
nop
cmp
icebp
nop
pusha
mov
cmp
adc
sub
outsb
xchg
lret
js
inc
cmp
push
sub
jge
add
push
or
push
xchg
dec
add
movsb
jno
pop
les
xor
jg
xor
xchg
sti
pop
clc
jne
and
mov
int
or
leave
mov
icebp
and
dec
stos
ja
add
inc
cmp
xchg
into
cmp
mov
inc
in
adc
mov
dec
out
xchg
aaa
adc
inc
xchg
enter
inc
int
jnp
jmp
mov
and
loopne
adc
ficomps
fldt
xchg
jl
sub
fsub
cld
outsb
int3
das
mov
inc
sbb
xchg
pop
xor
adc
mov
test
add
add
hlt
sub
mov
insb
enter
iret
insl
or
jl
nop
cltd
adc
mov
xchg
jo
jge
pop
out
adc
mov
repnz
sbbl
jb
jmp
imul
and
daa
cld
icebp
movsb
or
inc
daa
lock
out
movsb
fistps
pushf
xchg
inc
sahf
fnsave
cmpsl
push
ja
mov
inc
aaa
sbb
in
imul
jge
stos
sub
xor
adc
notb
lret
sahf
push
mov
repz
xorl
mov
cmp
and
adc
ret
fistpll
testb
cmp
push
cld
dec
repz
jecxz
popf
rorl
cli
popa
lcall
nop
ja
popf
es
jb
jnp
push
dec
push
int3
inc
pop
sub
jge
mov
sub
ds
mov
or
sbb
in
enter
into
negb
movsb
add
jmp
lds
xor
dec
sub
cmpsb
add
enter
scas
shll
xor
stc
cmpsb
fistpll
adc
mov
lds
push
push
fisttpll
out
stos
add
cmpsb
les
adc
jl
leave
inc
add
xchg
into
jno
dec
or
test
mov
and
sbb
cld
das
or
push
popa
mov
nop
xchg
xchg
aad
mov
mov
mov
adc
and
mov
fcomi
icebp
cmp
mov
repz
sbb
xorb
pop
es
gs
lret
mov
fnstenv
dec
inc
xorb
xor
pop
repnz
fdivr
out
xchg
sbb
scas
xchg
pop
xchg
jge
call
push
xchg
mov
cmpsb
jg
pop
pusha
das
sbb
xchg
xor
pop
out
aam
fildll
test
cmp
ret
stc
repz
inc
repz
imul
lods
testl
das
jmp
mov
enter
lds
je
dec
dec
inc
mov
mov
pop
inc
push
pusha
stos
add
popf
or
test
shll
or
lods
rorl
into
inc
and
adc
pop
hlt
cs
insb
jg
stos
xor
daa
fsubrp
bound
ret
mov
xchg
and
or
mov
mov
or
pop
dec
push
popl
mov
loopne
xor
mov
jge
rorl
imul
lods
gs
push
add
cmova
icebp
xor
xor
pop
xlat
sbb
scas
push
xchg
flds
or
imul
mov
dec
push
pop
shl
lea
pop
fisttpll
stc
daa
fsubr
js
icebp
push
pop
sbb
inc
fcmovbe
lods
pop
movzwl
js
sub
push
add
das
mov
mov
inc
adc
aaa
cld
inc
dec
cltd
jno
jmp
insb
addr16
sub
xor
into
aas
lcall
push
add
xor
fnstsw
es
push
stos
cmp
popf
icebp
jge
popa
out
jne
mov
jle
jmp
xchg
enter
sti
add
adc
xor
sub
sub
fisubrs
add
ficompl
dec
sub
dec
inc
mull
fdivrs
jecxz
xchg
dec
and
aad
or
push
lret
test
inc
pop
push
xlat
mov
push
mov
push
outsb
dec
mov
stos
data16
or
out
int
sub
lret
lods
mov
sbb
lea
xor
mov
inc
mov
fildl
cmp
mov
and
pop
push
ja
fbld
mov
pop
loop
imul
dec
cmpsl
push
dec
hlt
dec
lret
sar
jmp
and
adc
jo
lock
pop
cmp
mov
dec
push
cli
int3
popf
std
mov
stc
pusha
adc
xor
push
mov
int
push
ret
enterw
add
insl
pop
out
cmp
pop
lods
xchg
inc
jbe
ljmp
outsl
mov
mov
pop
and
mov
push
push
push
pop
addr16
dec
cmp
mov
add
decb
push
fcmovb
rcrl
dec
ds
ret
sbb
mov
and
dec
inc
shl
jbe
loop
out
jl
loopne
add
cmp
pop
cwtl
mov
shrb
adc
sbb
add
push
pop
xchg
sub
dec
push
sub
in
fs
outsl
adc
dec
icebp
jmp
cltd
sub
mov
xorl
mov
outsl
mov
data16
addr16
outsl
sub
xor
hlt
xor
dec
les
imul
imul
mov
in
inc
jnp
rcrl
adc
add
push
mov
mov
fistl
pop
rcll
test
xlat
aam
cli
fdivrl
xorb
rorl
repnz
mov
cmpsl
mov
push
mov
cmp
shl
ljmp
mov
pop
and
dec
and
adc
lahf
pop
lret
mulb
jo
add
ljmp
repnz
mov
gs
clc
incl
mov
daa
enter
push
sbbb
jae
aad
xchg
inc
mov
pop
push
mov
ficoml
xor
in
push
ds
push
add
adcb
shll
stos
mov
test
cmp
mov
or
pop
cmc
fistps
dec
cmpsb
xchg
outsb
fnstcw
push
daa
jns
jge
mov
mov
mov
leave
add
mov
daa
adc
mov
sbb
out
pusha
push
sub
adc
data16
stos
addr16
mov
mov
sbb
pop
lret
outsb
inc
pushf
adc
sub
sarb
mov
clc
loop
xchg
and
xchg
fiaddl
cmp
cs
dec
mov
push
fstl
dec
jmp
push
sub
mov
gs
mov
mov
xchg
push
rolb
pop
pusha
dec
neg
ja
mov
daa
sti
xchg
imul
mov
cltd
xorl
jo
andl
inc
xchg
insl
cltd
jle
lret
rorb
stos
adc
push
fwait
popf
or
ljmp
into
sub
push
insl
mov
pop
push
inc
outsb
andl
and
sbb
addr16
add
cmp
adc
std
and
call
mov
loopne
mov
sbb
sub
out
bound
or
ds
xchg
dec
aas
stos
aad
aam
push
dec
popa
mov
ret
lods
inc
sbb
fucomi
and
int
rolb
push
sahf
pop
js
out
sbb
push
test
dec
call
test
jne
ret
xchg
pop
stos
std
int3
int3
sbb
pop
jne
dec
call
jecxz
fildll
mov
repnz
jmp
mov
sbb
bound
pusha
jl
es
lcall
xor
iret
or
adc
cmp
ja
mov
dec
add
mov
shlb
pushf
shlb
xchg
aad
popf
mov
push
pop
lahf
ss
lcall
sub
mov
sub
nop
enter
jge
and
add
aaa
fmuls
shll
scas
jns,pn
mov
dec
lods
and
xchg
sarl
cmp
cmc
jp
push
call
mov
mov
stos
xlat
dec
pusha
or
mov
or
mov
cli
jle
push
jb
pop
roll
fldenv
js
and
and
push
cmpsb
popa
iret
fmuls
xchg
xchg
mov
mov
adc
idivl
or
push
popa
jmp
ss
mov
xorl
and
test
and
andb
lods
dec
iret
jno
mov
xorb
gs
xor
and
cmp
repnz
pop
inc
dec
shll
ffreep
repz
addr16
jb
pop
sub
cmp
shlb
hlt
sub
scas
mov
and
cmp
xchg
push
push
xor
fisubl
gs
sub
mov
lcall
xchg
inc
adc
out
daa
sub
das
xor
dec
sar
mov
movsl
mov
leave
mov
cs
lcall
xchg
shrb
aaa
mov
jg
mov
rol
dec
cmp
cmp
mov
jne
dec
push
jne
inc
pop
cmc
mov
jb
iret
sub
dec
lahf
sbb
inc
mov
int
loopne
cmp
mov
jl
repnz
cli
cld
dec
cmc
aad
xchg
movsl
sbb
inc
pop
xchg
pop
shll
sbb
xor
mov
xchg
adc
repnz
adc
xor
xlat
push
hlt
cmp
dec
lcall
mov
movsl
popa
das
xor
ljmp
cld
pusha
in
sbb
xchg
rcl
mov
pop
cltd
rcrl
add
dec
nop
outsb
jo
mov
mov
or
push
jne
or
nop
lcall
aaa
or
iret
inc
xchg
jmp
jb
in
cli
lock
push
stos
or
aam
loop
mov
rcl
ret
add
out
fwait
repz
imul
loopne
adc
shlb
dec
mov
or
dec
adc
and
mov
bound
fmuls
cmpsl
outsl
pop
lock
pop
insl
inc
in
dec
jmp
push
push
sbb
std
ss
outsb
in
xor
vpaddw
in
or
pop
and
or
add
les
insl
stos
outsl
mov
outsl
fiadds
ljmp
xchg
add
inc
daa
mov
and
pop
arpl
loopne
jl
push
cmp
mov
popa
add
and
pop
pop
dec
push
jmp
mull
pop
stos
into
xchg
xlat
cmp
loope
xchg
xchg
jl
push
test
movb
push
icebp
dec
push
fstpt
es
sbb
sbb
lcall
jecxz
inc
inc
cli
xchg
sub
push
cmp
fisttps
out
out
ret
push
jg
in
jns
mov
aam
jmp
push
xchg
into
jge
repz
and
xchg
pop
cmp
divl
test
or
mov
scas
push
cmp
inc
scas
or
dec
cmp
mov
mov
mov
je
or
stc
jnp
xchg
jb
push
add
push
daa
lods
loop
out
mov
lea
lods
inc
sub
cltd
sbb
popf
adc
fstps
adc
mov
stos
cmp
test
fmul
adc
out
sbb
cmc
lret
and
fnstcw
cmp
push
add
pusha
mov
mov
xlat
js
jl
sti
cmp
xor
out
inc
mov
fistl
test
aad
movsl
dec
fwait
out
mov
mov
push
inc
pop
stos
pop
xchg
jns
pop
in
push
pop
sti
jecxz
adc
mov
mov
jb
pop
cs
movsb
add
cmp
xchg
scas
cmp
notl
in
cs
je
insb
fwait
into
push
fcmovnu
add
jmp
pop
adc
dec
jl
cmp
stos
pop
mov
mov
hlt
imul
popa
scas
arpl
push
sbb
inc
push
jns
cvttps2pi
gs
das
loopne
arpl
in
mov
pop
jp
enter
sub
das
mov
lcall
mov
imul
mov
cli
into
ljmp
mov
out
je
mov
ret
popf
das
movl
hlt
cwtl
loope
sub
into
js
and
and
push
jp
xchg
sbb
push
loopne
or
cld
jecxz,pn
mov
fs
lock
pop
iret
dec
aas
aam
repz
mov
test
loope
addb
dec
mov
mov
sub
jae
js
out
or
mov
xor
or
mov
or
insl
add
adc
scas
pop
icebp
push
stos
push
popa
inc
ds
leave
xor
mov
xchg
fistps
jbe
push
sti
jl,pt
mov
jno
mov
push
pop
mov
sahf
sub
xchg
add
sub
mov
jge
in
jg
xchg
cli
push
sbb
outsb
mov
lock
insl
cmp
dec
push
xchg
orb
dec
dec
add
scas
fcoml
mov
push
xlat
mov
mov
icebp
addr16
cs
shrl
lods
or
mov
in
xor
lahf
mov
or
sbb
sarb
fstpl
sbb
inc
pusha
out
xor
pop
or
arpl
clc
loopne
cli
mov
inc
sub
insl
aas
int
lea
shlb
mov
cwtl
idiv
loopne
push
mov
add
mov
sbb
jecxz
popa
repz
push
or
fucom
decl
mov
roll
loopne
aad
lds
lahf
js
shll
dec
inc
push
jne
imul
aad
jge
mov
pop
xchg
pop
jl
lret
xchg
adc
xor
scas
mov
fcompl
push
int3
push
inc
loope
inc
mov
pop
enter
loop
and
push
test
mov
jmp
adcb
lods
jge
mov
imul
call
aad
pusha
sti
mov
rcll
cltd
xor
out
punpckhbw
popa
jns
int3
arpl
or
jecxz
subl
lret
mov
mov
dec
hlt
bound
xchg
sub
mov
enter
pop
dec
lods
int
iret
lods
cwtd
mov
jp
pop
shll
addr16
lds
cmp
sub
pop
aad
in
cmp
mov
out
imul
ret
arpl
scas
dec
add
add
dec
adc
xor
mov
dec
out
jns
jbe
fsubr
ljmp
roll
lods
lods
cmp
movsb
sbb
and
out
mov
mov
das
int
les
pop
adc
ret
pop
ss
push
xor
loop
xchg
nop
call
inc
mov
nop
jns
cmp
out
shll
js
inc
aad
das
xor
test
subb
jmp
gs
cwtl
cltd
cli
push
popf
mov
shlb
jae
jmp
adc
mov
testl
cmpl
push
hlt
jbe
in
fld
push
arpl
mov
idiv
lods
lods
and
push
mov
mov
inc
and
push
mov
dec
ret
push
outsl
adc
mov
shl
mov
popf
adc
dec
jne
aaa
fdivl
jbe
mov
mov
xor
or
mov
repz
out
jp
fidivrs
push
cltd
orb
in
xor
sar
fstl
aad
test
sub
sbb
sub
xor
loopne
xchg
push
cmp
push
xchg
into
dec
mov
sbb
and
mov
xchg
push
aad
dec
jno
popa
rorl
fdivrl
ss
fsubrl
inc
lea
adc
push
xor
jge
int3
lahf
stc
mov
xchg
adc
push
repz
cmpsb
push
les
lahf
dec
mov
lret
movsb
jno
movsl
sbb
mov
clc
mull
fbld
push
cwtl
and
rclb
fdiv
add
jb
roll
test
add
test
xchg
pop
insb
mov
mov
pop
adc
push
ret
xor
inc
loopne
js
or
jl
pop
imul
inc
rol
arpl
fs
gs
jne
dec
cmp
adc
mov
fbstp
gs
cmp
stc
cmpsb
inc
inc
xor
inc
or
sub
push
icebp
into
dec
inc
sbb
mov
int3
and
std
push
cmp
cmp
addps
adc
jo
loopne
jl
in
and
flds
sbbl
cmc
orb
push
stos
inc
sbb
fcmove
sub
out
hlt
mov
inc
adc
pop
jnp
xor
sti
sub
ja
das
add
adc
or
orb
jmp
es
and
fsubrs
or
xchg
mov
xor
enter
mov
inc
jns
xchg
call
add
xor
sti
shll
jno
adc
inc
pop
pop
lods
push
gs
mov
inc
loopne
and
je
rolb
les
sub
jb
sarb
and
cmp
cwtl
shrl
iret
and
popf
pop
int3
pop
dec
out
dec
push
mov
in
jecxz
push
mov
lahf
or
test
xchg
cltd
xlat
fdivr
cmp
cmp
movsb
xchg
xchg
sbb
or
pop
cmp
out
lret
cmpsl
mov
int3
hlt
int3
mov
movsl
dec
push
lcall
pusha
lds
scas
mov
sub
xor
xor
fwait
push
iret
sbb
aas
lret
and
lahf
sub
adc
out
mov
orb
mov
cltd
xchg
test
or
cmp
repnz
notb
or
push
fisttpll
out
xor
lds
sbb
notb
in
lahf
test
or
cmpsl
aas
add
repz
loopne
not
idiv
inc
sub
les
out
fidivrs
dec
pop
sub
aaa
jb
daa
cmpsb
mov
dec
test
mov
jb
and
jecxz
movsl
xchg
mov
jno
push
push
cmp
outsb
mov
and
dec
sti
sbb
aas
gs
xchg
fisubl
add
mov
mov
mov
sub
dec
dec
jp
jp
outsl
cmp
add
pop
xchg
fisttpl
cld
xchg
pop
outsb
outsl
cmpsb
mov
cmpl
jne
pushf
test
ss
adc
jg
jp
xor
mov
mov
cmpsb
mov
gs
cmpsb
xchg
stos
jle
ret
jb
adc
add
push
or
mov
pop
and
add
inc
int
inc
or
inc
mov
pop
fmul
inc
scas
fldcw
test
and
dec
lea
and
fwait
sbb
data16
cld
jo
sbb
sti
xchg
int
shrb
jle
dec
fwait
push
and
mov
enter
inc
out
bound
gs
pop
loope
iret
and
or
push
fnstenv
mov
aam
jmp
pop
jmp
dec
mov
stc
pop
aaa
fdivp
sbb
jecxz
out
in
xor
loope
jne,pn
or
add
or
call
je
int
popf
push
ljmp
adc
outsl
popf
cli
rclb
aas
inc
mov
dec
inc
popa
movsb
addl
pop
js
mov
aad
call
mov
mov
iret
xchg
sbb
icebp
enter
add
bound
adc
js
cmc
add
or
jns
subb
mov
fwait
mov
xchg
xor
jnp
mov
cltd
mov
pop
imul
xor
sub
mov
push
lods
out
push
pop
fwait
rclb
push
sub
mov
movsl
mov
push
decb
inc
insb
dec
dec
cltd
scas
cld
mov
fwait
push
xchg
aad
sbb
flds
outsl
jle
or
ret
sub
outsb
push
mov
bound
pop
movsl
adc
ret
mov
icebp
fldl
das
and
hlt
inc
cmpsb
ret
test
or
cmp
sub
out
outsl
data16
mov
or
ja
push
cmp
push
mov
in
xor
out
xor
inc
clc
jns
stc
mov
jbe
jp
ds
pop
mov
test
pusha
jmp
std
daa
sti
mov
sbb
rorl
or
lds
fimuls
cltd
ljmp
in
cmpsl
fadd
lret
mov
push
out
insl
cmc
xchg
ljmp
sahf
push
dec
jne
aaa
cmpsl
sbb
loope
or
push
leave
pop
or
sbb
xchg
arpl
data16
ret
imul
xor
gs
daa
repnz
pop
cmp
jmp
call
mov
or
sub
push
insl
sub
fistpl
mov
test
ja
sbb
sbb
int
ficomps
or
shrb
push
iret
out
pop
jge
les
xchg
and
push
dec
icebp
pop
stc
mov
or
lcall
sti
les
imul
stc
cmp
cmp
jecxz
jg
mov
xor
stc
and
cmpsb
jg
int3
fidivl
mov
or
insb
jg
sub
and
aas
pop
nop
hlt
dec
sahf
fs
js
or
leave
pop
dec
xor
repnz
pop
xor
add
pop
shrb
xchg
dec
nop
jge
pop
dec
and
and
and
add
dec
pop
mov
lret
mov
in
push
lods
test
andl
cmpsb
iret
jnp
jl,pt
mov
js
sbb
mov
ds
test
fdivrp
xor
stos
lahf
push
mov
cmp
or
rcll
jmp
push
push
sbb
arpl
mov
sbbl
lea
mulb
repnz
cmp
jne
mov
xor
fisubrl
fwait
lcall
adc
mov
lcall
aam
shlb
jp
std
shlb
push
mov
cmp
movl
mov
ss
xchg
xor
cmp
mov
cltd
xchg
fists
or
sbb
roll
adc
js
pop
xor
stos
and
pop
jne
sti
mov
enter
inc
lret
adc
call
lock
inc
or
sbb
fistpl
push
loopne
mov
adc
dec
mov
push
xor
and
ret
xchg
push
adc
xor
stc
shl
xchg
push
loope
aaa
fistpl
mov
dec
mov
sbbl
roll
divl
fiaddl
in
xor
ficompl
pop
sub
out
imul
push
arpl
bound
jbe
std
xor
or
and
xlat
filds
call
sub
stc
push
push
in
gs
mov
mov
xchg
inc
popa
push
mov
jb
adc
push
fwait
sub
jmp
loop
lcall
notl
sub
jg
and
outsb
pop
mov
mov
mul
and
add
aad
xchg
je
xchg
inc
mov
push
leave
js
scas
adc
xor
addr16
hlt
mov
test
sbb
loope
xor
xchg
pop
test
push
inc
fsubs
sbb
dec
add
add
js
pop
ret
jge
xchg
mov
out
jg
outsb
lahf
jo
and
and
inc
lcall
add
pop
and
jmp
or
data16
lret
push
cmp
sbb
mov
bound
stc
pop
xorb
pop
call
sbb
sub
dec
mov
ficompl
repz
repz
xlat
int
sbb
idiv
test
mov
clc
loopne
es
aad
mov
daa
call
mov
add
sbb
push
jl
jmp
push
mov
je
sbb
inc
jle
cs
pop
cmpsb
fisttpl
push
decb
fsubs
cmp
jle
imull
xchg
cmpsb
push
inc
out
xor
push
addb
xchg
cltd
mov
adc
lcall
inc
in
jo
xchg
add
and
shlb
pusha
scas
push
and
addr16
enter
fimuls
jecxz
xor
or
sbb
data16
pop
dec
rcr
out
pushf
shll
xchg
sbb
xchg
shlb
test
xor
add
dec
aas
jp
mov
jb
cwtl
dec
fstl
imul
push
repz
pop
insl
arpl
sub
fdivs
xchg
fldcw
test
fnstsw
sbbb
and
in
or
pushl
iret
rclb
int
ds
ljmp
push
inc
cli
rorl
and
stc
push
xchg
fcomip
dec
xchg
jl
or
test
jae
sbb
shrb
mov
add
daa
jnp
cmpsl
inc
lret
lods
daa
and
rcll
jmp
fstl
rorl
lret
data16
outsl
dec
ret
and
or
lcall
mov
and
cmp
in
sbb
sbb
int3
jmp
sbb
insb
sub
adc
pop
int3
cmpb
xchg
insb
je
andl
clc
lds
add
dec
cmc
call
inc
lret
cmpsl
inc
hlt
idivb
cs
mov
mov
xor
pop
push
cltd
jb
sbb
xchg
imul
test
mov
sahf
jg
in
cmc
out
rcrb
fstps
or
pop
xor
test
mov
lahf
leave
fdivrs
xor
pop
fadds
lds
lret
jnp
and
sub
pop
jmp
movsl
inc
adc
inc
mov
rorl
mov
les
nop
push
jns
add
or
pop
or
nop
fs
xchg
sti
out
ja
pop
dec
cmp
lods
lahf
into
add
xor
xchg
insb
lods
in
or
int3
in
cld
sub
mov
ja
xchg
or
out
push
adc
nop
out
outsb
inc
test
cmpsb
rol
cmp
push
dec
and
sub
js
cmpsb
cmp
pushf
or
fnstsw
inc
pop
xor
jg
push
pop
pop
cltd
pop
sub
out
pop
xchg
inc
inc
dec
lock
bound
pusha
mov
mov
mov
cli
enter
scas
fwait
mov
ret
test
dec
out
jne
ret
jns
gs
adc
adc
pop
les
imul
sbb
adc
idivb
fnstcw
sub
sbb
movsl
sahf
pop
lods
inc
cmp
movsl
adc
sbb
mov
pop
sbb
aad
xchg
clc
sbb
jg
inc
stos
mov
lock
neg
push
and
jnp
das
jp
cmpsl
jne
jp
push
jb
loop
ds
cmp
lahf
lahf
adc
inc
push
ljmp
lret
or
mov
rorb
test
sbb
xchg
jle
imul
out
sbb
sub
outsb
jno
enter
push
movl
or
adc
out
orl
cli
sub
sbb
adc
out
inc
xor
lret
rcrb
dec
mov
push
mov
jle
cmp
mov
or
sbb
push
les
inc
fistl
in
rorb
mov
mov
mov
cmp
loope
push
sbb
jno
and
pop
jp
sub
mov
mov
xlat
add
popa
fwait
sahf
ds
frstor
add
out
aad
xor
ss
mov
mov
movsb
or
popf
in
lds
int3
xor
lret
aam
icebp
jb
mov
sub
jmp
mov
in
jle
pcmpeqw
sbb
insl
and
push
mov
out
dec
pusha
sub
jg
sbb
mov
repnz
and
push
out
mov
dec
or
jne
inc
addl
add
aaa
cmp
ljmp
mov
aad
add
imulb
xor
ret
pop
aaa
jp
jge
sub
xor
dec
add
sbb
cmpsb
call
movsl
idiv
and
bound
push
sub
mov
push
jbe
outsl
mov
lcall
into
cmp
inc
jmp
adc
jnp
sbb
wrmsr
cs
daa
xchg
dec
sub
mov
cli
lahf
icebp
xor
vpaddd
mov
and
dec
mov
cmpsl
shrb
adc
loop
xor
jno
inc
das
adcb
es
mov
pop
xchg
mov
xor
pop
pop
test
ljmp
jecxz
and
lret
or
cmp
fimuls
mov
jnp
rcr
pop
roll
aas
xor
dec
fcmovne
sbb
sub
test
loopne
jl
bound
jp
mov
imul
popa
cmp
outsl
cmc
out
dec
rcll
pop
mov
mov
push
mov
cmp
xchg
or
cmpl
inc
popf
sbb
iret
insl
push
xor
mov
pusha
and
inc
cmpsl
or
cmp
out
loopne
or
dec
push
dec
fs
mov
shlb
out
call
ljmp
test
das
adcb
neg
or
mov
dec
adc
test
roll
sbb
and
sar
push
pop
cld
enter
push
les
rcrl
out
inc
push
mov
out
push
iret
icebp
jecxz
dec
push
pushf
sarl
jno
jmp
push
stc
repz
cmc
in
das
dec
sbb
push
xor
push
out
xchg
std
push
jl
or
mov
xor
xor
or
dec
cmpsb
fmuls
scas
jmp
in
push
add
add
sbb
jmp
inc
dec
inc
dec
dec
call
in
cmp
cmc
sbb
stc
push
push
adc
icebp
es
pusha
xor
je
cmp
arpl
jb
sub
xor
sar
daa
mov
ds
js
es
adc
adc
lret
and
pop
jae
test
data16
enter
inc
cmc
movb
mov
mov
sbb
push
rolb
mov
pop
mov
jmp
push
popa
xchg
cmpsb
xor
push
in
jb
ficoms
sub
jns
call
jg
test
dec
sub
jb
bound
mov
fnstenv
dec
mov
pop
and
sbb
aam
mov
filds
xor
jp
sysenter
ds
lds
push
jge
push
dec
stos
mov
nop
mov
in
orb
fbstp
jle
lcall
lret
test
xor
pop
test
add
adc
cmpsl
inc
add
inc
in
in
adc
adc
mov
push
jo
filds
and
sbb
jg
aad
xor
arpl
cwtl
sahf
push
mov
mov
sub
je
adc
push
mov
es
lds
push
and
adc
push
dec
pop
mov
fldl
loope
xor
cltd
or
mov
aad
dec
xchg
cmp
idivl
xlat
mov
and
mov
xchg
stos
cmp
fildl
dec
test
xor
cmp
dec
mov
push
mov
gs
imul
pop
fadd
rolb
mov
xlat
pusha
in
xor
icebp
sbb
addr16
mov
scas
xchg
ret
sub
mov
sub
mov
pop
stos
movsb
dec
xchg
dec
in
imul
xchg
or
repnz
mov
adc
adc
test
and
cmp
nopl
mov
pop
imul
pop
cmp
aam
outsb
out
inc
cltd
leave
out
adc
lea
cld
jb
adc
xchg
fcoms
in
xchg
push
mov
and
sbb
aam
imul
sti
and
mov
pop
sbb
lahf
xor
movsl
or
test
xchg
dec
add
pop
leave
inc
shrl
dec
inc
xor
mov
icebp
mov
dec
and
pop
and
iret
and
inc
out
xchg
fsts
lahf
idivl
cmpsl
cmc
dec
push
iret
pop
and
cmpb
mov
pop
loope
adc
add
arpl
cld
pop
jae
fisttps
adc
cmc
push
ret
scas
pop
movsb
fs
ja
adc
push
mov
push
pop
push
aas
cltd
jno
out
stos
cltd
out
xor
stos
xchg
cld
mov
fldl
bswap
fistl
into
add
and
jge
dec
in
inc
or
ds
pop
add
pop
mov
mov
int3
mov
pop
cmp
icebp
es
sti
jbe
gs
call
add
js
inc
jb
mov
mov
daa
ja
jle
or
gs
adc
inc
cmp
mov
mov
and
xor
jecxz
jmp
mov
sahf
push
inc
dec
adc
inc
inc
sub
inc
dec
hlt
mov
xchg
repnz
xchg
push
pop
cmpsb
popa
add
in
pop
pop
enter
adcl
xchg
xlat
call
fcompl
in
xor
clc
sub
stc
imul
arpl
movsb
cwtl
lock
dec
les
sub
add
jecxz
mov
dec
inc
lret
ret
xchg
push
cmp
push
xchg
addr16
test
outsb
xor
nop
cmp
add
movsl
jae
ja
outsb
pop
or
inc
sbb
mov
jo
xor
mov
adc
mov
xchg
out
jae
mov
push
ljmp
pop
sbb
fstps
pop
nop
cmpsl
andl
pop
jp
pop
mov
sub
decl
cmp
cmp
mov
add
mov
in
dec
xor
outsb
xor
lods
jb
pop
push
mov
xchg
loope
aad
mov
sti
mov
inc
mov
push
jo
fistps
sbb
add
cs
fcoms
sbb
shr
mov
push
rcr
dec
int3
push
cmp
pop
fdivr
subb
frstor
jp
pop
or
xchg
mov
pop
or
xor
mov
bsr
rorl
fs
add
jle
push
cmp
nop
push
mov
xchg
testl
push
adc
xor
xchg
aas
push
push
mov
call
mov
outsb
pop
enter
cli
sbb
mov
dec
in
into
ss
orl
bound
loopne
test
stc
add
repz
push
mov
mov
lds
cmp
and
jno
pop
loope
jmp
cli
daa
or
push
dec
adc
jg
int
fstl
push
pop
call
push
test
mov
xchg
enter
pop
gs
out
cmp
out
repnz
arpl
or
pop
dec
adc
fbld
mov
adc
daa
or
out
pop
arpl
adc
push
fstpt
push
mov
add
mov
fisubl
inc
add
call
fcmovnbe
cmp
adcl
repnz
imul
and
xchg
adc
cmp
aas
aad
sbb
cmp
mov
ljmp
enter
mov
push
mov
inc
mov
rcrb
cmp
cwtl
sbb
jo
jnp
insl
dec
stc
sub
imul
sbb
js
aas
daa
cmpsb
adc
popa
and
addb
popf
or
xchg
in
fisttpll
in
mov
jmp
sbb
push
movsl
movsl
fnstcw
xchg
mov
insl
xor
test
sbb
push
xor
aad
xor
imul
mov
sub
ret
mov
aas
addb
inc
inc
inc
cmp
push
iret
shlb
and
fucom
fisubrs
adc
add
stos
sub
jnp
jne
outsl
das
enter
or
push
sub
jp
and
adc
roll
push
movsl
out
mov
insl
mov
sub
shll
fdivl
adc
xchg
sub
xorb
jno
cmp
mov
test
out
lret
push
lret
je
xchg
xor
mov
pushf
sbb
fs
lcall
inc
xchg
xor
out
shr
push
lahf
andl
add
adc
in
xor
mov
pop
xchg
dec
mov
pop
mov
in
sarb
or
es
aaa
divl
inc
sub
pop
cltd
mov
test
test
add
pop
mov
push
nop
inc
pushf
in
mov
sbb
and
iret
pop
test
dec
adc
sbb
imul
xchg
xorps
sti
gs
sub
rolb
movl
aaa
movsl
jge
jbe
shl
fidivrs
mov
shll
xchg
push
imul
sbb
xlat
mov
mov
cli
mov
and
lahf
data16
sub
sub
aam
and
sbb
loop
out
jl
sub
in
push
fxch
dec
aas
js
xor
add
addb
pop
int3
call
mov
lcall
shl
jns
or
push
mov
aad
or
push
rcll
sbb
mov
clc
inc
inc
jge
stc
push
pop
and
lock
icebp
ret
leave
test
and
dec
int3
and
push
fldcw
mov
data16
push
mov
insl
ja
xor
cwtl
mov
sub
addr16
outsb
xchg
fistl
cwtl
sahf
icebp
shl
jbe
and
subl
push
outsl
jns
xlat
mov
data16
mov
outsl
into
xchg
mov
gs
in
cmp
int3
or
pop
aaa
mov
in
in
inc
ret
inc
gs
icebp
push
dec
push
ret
mov
sub
sahf
enter
adc
cld
pop
in
int3
xchg
pop
scas
xchg
dec
cmpsl
pop
cli
adc
xor
and
adc
push
or
mov
inc
sbb
add
aaa
mov
xor
sahf
loop
and
sub
sbb
test
pop
push
imul
cs
mov
mov
in
pusha
add
add
insl
loopne
inc
je
daa
lahf
add
lret
stos
in
sub
xor
or
sub
aam
push
xchg
sub
iret
pop
iret
into
gs
cmpb
ljmp
mov
daa
repz
push
and
sbb
sbb
xchg
adc
shl
pop
inc
inc
lock
nop
test
jl
aam
sub
enter
dec
mov
cmp
movsl
sub
daa
push
jl
shrb
push
or
clc
hlt
xor
test
jp
fdivrs
dec
inc
popf
jecxz
cmp
xchg
enter
push
scas
pop
loopne
push
rorl
push
hlt
pop
sbb
mov
fcmovnbe
icebp
jne
shrl
scas
push
xlat
xor
mov
dec
popa
sbb
jmp
fwait
lock
rcl
cs
out
adc
sub
mov
popf
das
xchg
sti
jb
cmp
loopne
and
int3
inc
or
sbb
jo
lret
jl
imul
mov
xchg
popa
test
cmp
inc
rol
inc
xchg
push
shl
lret
cmpsb
and
stos
pop
loopne
mov
sub
test
fs
mov
adc
or
test
and
jmp
xor
pop
pushf
mov
scas
gs
fmuls
mov
xor
push
jne
std
fimuls
arpl
xlat
aad
loopne
lods
pop
movsl
sub
popa
adc
dec
lcall
shlb
cmp
or
fstl
or
movsl
add
xor
inc
sub
push
xor
pop
arpl
add
bound
cmp
daa
mov
arpl
adc
loop
ljmp
pop
gs
cmp
jle
pop
stos
je
pop
in
aas
and
adc
fwait
aad
lret
xchg
inc
jae
bound
xor
pop
insb
aam
arpl
iret
dec
xor
call
sub
cmp
mov
inc
adc
sbb
sub
cmp
add
and
fdivrs
les
cmp
add
adc
loopne
mov
aas
adcb
test
pop
dec
mov
daa
sahf
in
sbb
ror
fs
xlat
test
pop
mov
testl
loopne
mov
pop
fimull
test
xchg
insl
xlat
iret
jo
dec
aad
inc
jb
and
push
shld
fistpll
ds
cmc
repnz
xlat
decl
repnz
in
xchg
dec
fxam
inc
adc
sbb
xchg
pusha
lret
and
xchg
push
lea
xor
add
add
sbb
jno
mov
xor
or
mov
les
lahf
push
ret
cli
adcb
cmc
pushf
add
xor
sbb
inc
xor
shll
pop
leave
nop
mov
test
jns
into
mov
mov
mov
jne
sub
pop
cmpsl
pop
cs
sbb
fdivrs
cmpsb
mov
jb
cmpsb
push
dec
pop
cmpsb
sbb
repz
push
xchg
push
push
fisttpl
push
dec
sbb
mov
adc
sbb
nop
pop
and
sti
dec
fsubl
ljmp
sub
enter
stos
inc
insb
jbe
ja
pop
sub
pop
xchg
pop
das
cmp
bound
xor
fs
pop
pop
mov
stos
cmp
xor
rol
daa
jmp
push
mov
xchg
mov
mov
cltd
push
lea
jge
sbb
mov
cmp
pushf
jo
insb
std
pop
clc
pop
mov
fdivl
roll
push
ljmp
inc
das
test
sti
imul
outsb
imul
fistpll
add
outsb
dec
dec
mov
push
insl
into
jg
sub
mov
mov
or
xor
xchg
mov
lods
out
pop
jecxz
pushl
movsl
mov
mov
push
in
in
sub
adcb
cmpsl
cs
mov
mov
loopne
faddl
ja
ds
jp
adc
push
outsb
mov
cmp
push
xor
sbb
xor
inc
cld
pusha
pop
push
sbb
cmp
mov
mov
add
and
test
or
xor
lods
pop
iret
movsl
xchg
loop
jne
dec
shlb
nop
push
and
les
add
imul
mov
fwait
mov
push
mov
xlat
aad
pop
movsb
pop
mov
fcompl
in
shlb
sub
mov
frstor
xor
mov
mov
xchg
xlat
cmp
sahf
mov
lcall
inc
cmpsb
insl
stc
ficoms
jecxz
cmpb
mov
jb
jae
sub
and
adc
dec
jbe
outsl
and
dec
sahf
pop
push
aas
je
ds
pop
push
cmp
or
mov
ret
jmp
rorb
inc
pop
loopne
rol
push
lods
dec
cmp
adc
test
outsb
mov
jmp
add
jb
in
cltd
sub
testl
insb
mov
jne
jb
aaa
scas
pop
xlat
imul
xchg
mov
and
push
mov
cmp
insl
ss
notrack
or
mov
sbb
xchg
lea
or
popf
pop
jge
imul
cmp
or
repnz
flds
pusha
or
and
sub
mov
je
jmp
adc
pop
shr
mov
xchg
sbb
sti
test
cmpsb
jecxz
sub
insl
xchg
mov
dec
push
inc
jmp
cmp
cmpsl
inc
fildl
pop
jg
xlat
pushf
pop
cli
pop
mov
pop
pop
dec
test
sbb
rolb
push
inc
mov
mov
push
shll
jae
dec
sbb
jno
pop
mov
fidivrl
jecxz
fdivp
pop
loopne
movsb
ret
cmp
cwtl
inc
and
jmp
les
outsb
xchg
lret
push
push
inc
jecxz
push
movsl
mov
dec
add
mov
adc
fs
cwtl
inc
in
inc
xchg
imul
mov
or
mov
inc
adc
lds
sbb
popa
and
ss
roll
fidivl
cmp
hlt
cld
push
arpl
xor
sbb
pop
icebp
jecxz
xchg
xor
mov
dec
sub
jge
cmp
sbb
mov
inc
inc
leave
add
int
scas
es
xchg
fsub
aas
jg
mov
mov
xchg
sub
and
sub
leave
mov
or
arpl
jmp
mov
fists
pop
cwtl
mov
out
lahf
fwait
push
sti
mov
dec
inc
cmp
das
mov
cs
leave
dec
push
cmp
sahf
lret
aam
addr16
jge
out
popf
jmp
fsubrs
and
pusha
popf
cmpsl
imul
xor
push
push
out
jns
or
sub
xor
cmp
cs
out
and
and
xchg
add
push
adc
in
sahf
inc
rcl
aaa
sarl
push
push
cli
icebp
or
ja
pop
outsl
mov
imul
lea
mov
mov
jno
nop
xor
outsb
inc
xchg
je
inc
nop
xlat
cmpsl
xchg
sbb
roll
sbbl
mov
mov
or
std
fstps
popa
jle
movsl
adc
adc
hlt
test
and
pop
dec
nop
jg
pop
xlat
movsl
pop
test
inc
testb
push
repz
cmp
sub
ljmp
mov
call
dec
ljmp
imulb
movsb
xlat
mov
inc
ficompl
movsl
adc
cltd
jnp
jle
sbb
xchg
arpl
call
stos
les
pop
inc
sub
mov
lret
and
inc
add
inc
fadd
in
xor
fld
mov
in
mov
movsl
icebp
imull
add
mov
in
push
sahf
push
mov
lds
pop
clc
sahf
scas
loop
pop
cwtl
or
xor
cmc
xchg
cmp
pop
mov
mov
xor
pop
adc
cs
adc
fldt
inc
into
jbe
push
push
adc
push
mov
hlt
mov
aam
mov
sub
stc
ret
sbb
add
xchg
sub
fimuls
mov
je
mul
pop
or
mov
shrl
mov
and
pusha
pop
push
jp
repz
call
ret
sub
inc
mov
add
and
and
aad
in
in
lahf
mov
xlat
pushf
sbb
xor
fsubr
pop
rcrl
mov
dec
enter
aas
arpl
mov
ja
std
int
out
popf
mov
js
popa
push
xchg
or
mov
out
lds
rcrb
dec
adc
mov
pop
into
call
loop
lods
mov
jns
inc
fxch
test
fbld
lcall
and
jg
and
int3
sub
inc
loopne
xor
mov
lcall
jmp
mov
pop
mov
push
and
addr16
fmuls
mov
lock
push
mov
add
push
fucomp
data16
pop
leave
jg
dec
mov
xorl
pop
inc
jmp
js
mov
stc
pop
cmp
inc
xchg
push
inc
dec
inc
add
push
cwtl
arpl
stc
notl
sarl
cmovs
xchg
ss
jbe
pop
xchg
mov
and
arpl
addr16
cmc
stc
jnp
ret
js
or
sbb
in
cmp
mov
rorl
test
cmp
aam
cmpsl
stos
push
cmpsl
insl
adc
das
mov
fadd
cmpsb
sbb
movb
mov
adc
ret
cmc
sub
adc
aaa
lods
ljmp
scas
xor
test
pop
pop
and
push
es
dec
inc
sbb
movsl
sbb
in
sub
mov
test
icebp
fndisi(8087
jno
scas
stos
fldl
lahf
mov
popf
xchg
jne
je
push
xor
mov
arpl
sbb
push
ds
ret
dec
pop
jmp
rorl
add
cmp
sub
dec
lods
xchg
push
mov
push
cmpsb
mov
cmp
cltd
cmc
and
adc
cwtl
mov
cmp
pop
repnz
jnp
lcall
sbb
add
sbb
lcall
add
xlat
mov
mov
sbb
outsb
and
push
pop
push
push
shrl
jno
push
mov
dec
push
scas
mov
cmp
cmp
enter
sub
dec
pop
cmp
pop
mov
add
into
lcall
add
cmp
jno
mov
fwait
pop
jmp
jno
mov
std
sti
mov
or
jg
insl
out
push
fs
mov
mov
lret
ljmp
push
push
cmp
loope
fwait
stos
or
sar
or
mov
mov
sbb
outsl
xor
daa
clc
cmp
lea
mov
mov
or
pop
sub
dec
sbb
nop
loope
imul
loopne
sub
mov
repnz
mov
lret
das
lock
or
lret
flds
jmp
cs
pushf
insb
cmpsb
loop
mov
xchg
cwtl
pop
dec
and
xor
pop
stos
sbb
ficoml
std
sbb
xor
cmp
or
mov
mov
mov
test
shlb
inc
inc
cmp
enter
jnp
cmp
dec
pop
push
in
in
cmc
sti
insb
daa
test
and
sub
inc
lahf
pop
daa
ficoms
clc
and
jno
push
add
or
hlt
pop
pop
ror
mov
adc
mov
sets
mov
nop
xchg
sbb
adc
inc
hlt
cltd
add
rcll
pop
ror
iret
jp
sub
mov
dec
mov
jg
pop
fcompl
addr16
cli
xor
test
decl
dec
inc
test
xor
mov
ds
pop
push
add
mov
mov
push
push
xchg
jb
sbb
loop
adc
pop
adc
fdivrs
push
std
jmp
and
xchg
mov
xchg
subl
xchg
subb
mov
mov
push
pop
cld
xchg
mov
pop
and
setae
fstpl
outsb
pushf
stos
dec
xor
nopl
dec
test
mov
xchg
mov
movsb
lods
xchg
or
mov
xor
add
xchg
ret
sbbb
loopne
adc
fstps
andb
inc
mov
lds
mov
loope
gs
sahf
scas
inc
push
js
jge
xchg
adc
cmpsb
loopne
pop
insb
test
inc
ja
push
pop
mov
sahf
subl
push
pushf
or
add
sahf
xchg
arpl
mov
enter
push
jmp
stc
gs
aas
or
dec
adc
std
pop
movsl
rcl
addr16
enter
aad
out
or
and
subl
push
jp
nop
or
push
mov
ljmp
mov
lods
cli
sub
push
mov
test
popf
insl
mov
dec
out
fisttps
xchg
mov
je
cltd
fnsave
and
hlt
adc
ret
mov
mov
or
mov
in
add
push
sbb
and
iret
pop
pop
xchg
lds
xchg
dec
or
adc
or
cmp
cmp
addb
cs
movsb
pop
dec
xor
test
push
lock
cmc
push
push
mov
pop
sbb
mov
push
mov
popf
dec
ret
addl
mov
imull
sbb
mov
test
into
dec
sub
or
jnp
adc
mov
and
icebp
mov
mov
loope
mov
xor
mov
ljmp
outsb
xchg
repz
sub
cmc
xchg
cwtl
pusha
aas
les
and
test
and
jbe
jl
out
fs
orl
pop
jp
ret
les
cmp
outsb
mov
flds
dec
lahf
inc
test
cmp
xchg
jp
fistpl
adcb
call
sbb
andb
dec
or
jae
pop
arpl
cmp
out
cs
dec
inc
jns
lock
fildll
fists
cli
add
or
dec
cmp
or
dec
mov
add
es
jg
cli
orb
add
aaa
sbb
shll
xor
popl
sub
or
and
xor
aaa
call
mov
ljmp
mov
pop
jp
jge
movsl
xchg
jmp
inc
or
add
or
mov
xor
movsl
rcll
add
dec
je
and
repz
inc
ljmp
dec
les
push
mov
cmp
sbb
cmp
push
xchg
cmp
test
adcl
cmpl
fidivs
sub
jno
rcrl
aaa
shr
sbb
fxam
sbb
int3
sbb
push
out
stc
add
mov
sahf
push
gs
pop
xchg
addr16
and
mov
loop
scas
js
xor
fistps
jo
dec
cs
push
repnz
fnsave
fdivr
sar
push
test
pop
pop
inc
jmp
pushf
std
aas
ljmp
jbe
mov
out
in
inc
mov
mov
lahf
or
insb
ds
sti
fbld
pushf
movsb
scas
xor
add
mulb
inc
mov
in
sub
je
adc
scas
fdivp
clc
pop
inc
push
imul
popa
jl
adc
jnp
sub
cmp
jne
pop
icebp
js
mov
pop
loopne
dec
fwait
and
add
cli
mov
pop
pop
icebp
stos
hlt
mov
pop
fisubs
lret
fimull
pop
je
cmp
loope
movsb
sub
add
adc
adc
rcrb
jg
call
sbb
ficoml
sbb
sbb
dec
lock
or
sub
push
repz
jnp
aaa
and
mov
xor
or
pop
or
inc
sbb
mov
adc
pop
out
pop
or
mov
lods
iret
xlat
lret
out
xchg
jl
lcall
arpl
pop
movsl
xor
or
or
adc
sbb
stc
popa
add
arpl
test
dec
dec
xchg
cs
adc
imul
rclb
in
pop
rorb
ljmp
mov
js
gs
dec
fisttpl
push
sub
add
pop
adc
stos
dec
lcall
xchg
in
stc
push
mov
lock
setp
rcrb
add
fists
movsb
sbb
or
mov
pop
mov
mov
and
pop
dec
sbb
xchg
addl
lret
pop
push
jp
xor
jle
stos
sub
fdivl
aad
lods
pop
inc
fdivs
mov
jle
pop
test
jl
xor
leave
enter
pop
pop
mov
into
xchg
pop
daa
xchg
xor
push
cmp
sub
jb
push
dec
add
mov
std
cli
inc
shlb
dec
and
fldl
pop
dec
rcl
push
cmpsb
pop
cmp
sbb
insl
shrl
cli
push
jge
fwait
mov
ss
mov
adcl
sub
loop
and
test
and
fs
das
xlat
enter
leave
jb
xor
stc
leave
mov
out
pop
loope
das
and
stos
add
mov
and
xchg
enter
in
insb
xlat
inc
pop
shll
push
cs
dec
mov
pop
mov
dec
xor
stos
lahf
movsb
shrl
sti
mov
jns
push
shll
in
and
xor
jmp
adc
out
push
clc
cmp
fildl
cmovs
xchg
dec
jmp
adc
and
jne
sbbb
adc
std
scas
push
inc
mov
xchg
popa
xchg
jne
or
dec
inc
js
clc
cs
dec
into
nop
andl
push
imul
bound
lahf
adc
ficompl
lahf
bound
inc
ret
mov
dec
pop
bound
inc
add
in
jbe
aas
push
dec
shll
dec
mov
loopne
cmp
mov
or
jge
mov
dec
pop
nop
jo
fucomp
dec
stc
mov
and
outsl
inc
xchg
mov
std
inc
or
xchg
call
dec
clc
xorl
xor
adc
repz
iret
xor
flds
or
icebp
xchg
and
popa
sbb
popf
xor
inc
lret
pusha
inc
pop
pop
fidivrs
inc
iret
xchg
xchg
int
adc
mov
mov
out
xchg
mov
adc
in
rclb
fs
cs
cmp
or
lea
arpl
mov
xchg
ret
fmuls
sbb
cwtl
aam
cvtps2pd
ret
out
add
mov
loop
mov
push
jb
push
fidivs
jl
dec
test
dec
cs
push
jmp
push
outsb
sbb
jle
int3
adc
icebp
cmp
inc
jge
fsts
iret
iret
sarb
aam
int3
adc
in
dec
pop
aas
into
shrb
ret
adc
push
mov
sbb
cmp
mov
dec
movsb
sahf
mov
movsb
call
std
cmp
rclb
push
sub
pop
xchg
pushf
mov
add
inc
mov
mov
push
push
jb
dec
arpl
and
lock
push
add
pop
je
aad
mov
push
add
inc
and
adc
sbbl
loopne
sub
adc
cltd
sti
mov
popa
clc
jmp
loop
bound
or
adc
xor
fildl
jns
pop
outsb
inc
pop
shr
inc
jne
xor
cs
outsl
out
jno
cmpsb
sub
pop
dec
or
ret
outsl
ret
addr16
les
jnp
mov
mov
lds
rcrl
je
jle
cmp
sbb
pop
aam
jmp
push
mov
addl
insb
adc
lret
inc
mov
and
adc
cltd
lds
xor
add
clc
test
into
popa
mov
jbe
cmp
xorb
call
ja
sub
inc
in
ret
repnz
xor
out
mov
es
mov
hlt
mov
sub
ljmp
mov
mov
fmull
nop
mov
dec
cltd
dec
jno
leave
mov
xor
xchg
rdpmc
sbb
xor
sub
inc
mov
mov
push
jg
jno
mov
je
test
mov
cmpsb
in
mov
cmpb
mov
sub
xchg
sub
inc
data16
sbb
mov
push
sahf
mov
xchg
add
das
cmp
push
adc
dec
fstpl
subl
cmp
jb
test
in
jbe
and
sub
shr
int
push
ror
push
sub
jl
cmp
test
insl
inc
cmp
lcall
xchg
sub
cmp
mov
inc
lods
jmp
andl
sbb
test
dec
dec
add
lods
pushl
mov
jp
mov
push
sar
in
dec
cmc
adc
mov
jo
sub
addr16
hlt
and
negb
and
sarl
mov
arpl
stos
pusha
sub
push
and
pushf
pop
mov
pop
jne
mov
add
pushf
sbb
int
adc
jp
push
push
enter
dec
das
push
dec
stos
lods
push
push
lahf
stos
push
xor
sub
loop
xchg
fsubs
push
mov
lock
cmp
loopne
cmc
add
pop
fistpll
jbe
decb
cld
fidivrs
aas
sbb
sub
negb
xchg
xor
push
mov
inc
dec
mov
cmpsb
lret
jb
xor
clc
mov
fwait
cmp
dec
in
mov
outsl
xchg
inc
imul
jp
clc
jp
push
sub
jo
js
fidivrl
stc
or
imul
xchg
orl
push
jp
and
and
pushf
mov
xchg
xor
js
and
data16
push
imul
cmpsl
int
stos
inc
mov
sti
jmp
pop
mov
sbb
mov
ret
xchg
bound
out
insb
push
adc
lcall
scas
push
or
cwtl
cmp
mov
imul
mov
pop
or
mov
jecxz
ret
cwtl
cmpsb
jne
sbb
mov
mov
outsl
sub
iret
mov
outsl
nop
mov
sar
lcall
stos
fidivl
pusha
jp
jne
mov
mov
jae
out
addr16
faddp
out
enter
fs
in
fcomps
pop
pop
pop
gs
push
nop
cld
out
cltd
mov
xor
fwait
pushf
jo
out
and
jno
ret
in
cwtl
mov
mov
sbb
or
cmp
inc
sub
cmp
mov
inc
xor
fwait
aad
mov
xchg
aas
mov
out
jb
rol
into
mov
out
xchg
hlt
mov
mov
xlat
xchg
mov
push
rcrb
add
dec
in
dec
jg
inc
inc
outsl
cs
fsubp
lcall
outsb
scas
test
adc
push
mov
int3
fwait
jns
pusha
adc
clc
cmp
mov
adc
mov
sahf
pop
cmc
icebp
mov
inc
repz
add
cmc
dec
mov
xor
shlb
mov
xchg
cmp
add
daa
cmp
jns
mov
push
xor
add
iret
jae
inc
pop
mov
push
dec
repnz
push
orl
push
lea
xchg
push
mov
or
stc
dec
jecxz
les
sarl
dec
lock
pop
adc
inc
push
sbb
loopne
movl
or
adc
xor
mov
pop
dec
fwait
daa
push
sub
sbb
lret
pop
loopne
adc
popf
push
sbb
ror
pop
in
outsl
mov
dec
nop
cmpsl
aad
cli
push
jo
andl
shll
je
int3
outsl
sbb
sbb
mov
inc
imul
scas
ret
sarl
fldcw
fdivp
leave
cs
push
push
ds
test
fs
add
jns
ret
icebp
pop
cmp
mov
adc
int
es
push
pushf
inc
cmp
inc
xchg
sbb
mov
je
dec
cmp
out
xchg
gs
mov
in
mov
lods
add
mov
lea
ffreep
mov
rcll
daa
arpl
std
cmp
push
inc
inc
sbb
mov
mov
dec
scas
out
aam
test
mov
inc
hlt
sub
pop
addr16
adc
mov
and
mov
sbb
push
outsl
xlat
mov
nop
cmc
jp
cli
aad
lods
and
and
jp
lret
and
push
cld
addr16
push
popa
repz
adc
pushf
idivb
sahf
sub
adc
jne
cltd
xchg
inc
iret
imul
or
jmp
jecxz
push
or
and
rcr
sbb
and
adc
xchg
ret
std
ret
lods
sahf
iret
iret
mov
inc
inc
or
sarb
xchg
fldt
pop
dec
jl
xchg
xchg
push
stos
lea
popf
mov
sub
sbb
cmc
adc
adc
dec
mov
loop
push
test
ret
in
mov
aad
sbb
out
testb
jbe
lahf
aad
test
adc
or
movsb
pusha
repz
or
imul
push
jo
jecxz
fcomps
or
repnz
add
cmp
mov
jns
jmp
icebp
inc
pushf
gs
xor
icebp
jbe
aad
lret
inc
sub
mov
xor
mov
loop
push
jmp
mov
push
or
clc
icebp
shrb
jle
cmp
in
xchg
or
mov
movsl
dec
push
jl
std
data16
jae
jb
lret
out
movsl
call
mov
inc
insb
incl
add
notb
prefetcht0
add
les
pop
xchg
xchg
insl
imul
cmp
pop
xor
pushf
xor
ss
adc
hlt
fistpl
dec
outsb
push
cmpsb
rclb
popf
cld
pop
mov
cmc
and
icebp
and
push
orl
adcl
xchg
pop
aas
aaa
add
fstp
shr
sbb
fmul
cwtl
jmp
mov
mov
mov
inc
adcl
rclb
popl
ss
adc
lret
inc
or
scas
out
lea
xor
fdiv
mov
fidivrl
push
out
cltd
mov
leave
loope
add
call
mov
ljmp
jg
scas
xlat
aas
pextrw
adc
pop
push
mov
mov
mov
call
rcl
aam
enter
sbb
dec
decl
pushf
and
jo
jnp
ret
shll
fs
dec
inc
xchg
mov
test
add
sub
lahf
mov
sahf
repnz
test
ljmp
cmpsl
push
jmp
jmp
adc
fnsave
inc
mov
cmpsl
mov
shrb
loopne
dec
add
mov
xchg
std
add
push
adc
int3
cmp
cmp
adc
adc
jns
xchg
add
pop
dec
out
gs
push
add
pop
rclb
scas
mov
mov
xchg
movsl
mov
push
sbb
ret
scas
call
stos
imul
push
xor
outsb
sti
jmp
or
inc
sarb
inc
mov
pop
lret
jbe
sub
cmp
or
loop
mov
xchg
sbb
jae
jmp
fs
add
ret
imul
movsl
lock
xor
xchg
mov
test
inc
out
int3
insl
fcomps
xor
jecxz
nop
jge
repz
lods
inc
stc
inc
mov
xchg
popa
sub
loop
pusha
pop
call
fcomps
dec
sbb
jmp
dec
and
mov
dec
les
lock
stos
test
or
lds
mov
xlat
mov
jne
mov
mov
es
mov
inc
sub
inc
jne
inc
lds
in
int3
xchg
pop
mov
sub
mov
jnp
adc
lods
pop
mov
mov
mov
mov
push
dec
data16
test
jl
pushf
sub
sub
insl
jnp
jp
dec
std
fildll
addr16
adc
loop
xor
pop
xlat
xchg
popf
mov
daa
mov
add
and
pop
mov
call
movsl
dec
pop
adc
push
out
mov
mov
insb
aad
mov
and
adc
pop
xor
out
inc
push
mov
dec
lret
mov
ret
insb
add
mov
sub
cmp
hlt
js
test
out
jl
in
es
scas
push
pushf
fcmovb
jecxz
pop
fs
or
sbb
pop
div
pusha
mov
xor
dec
std
je
iret
sub
and
lods
mov
mov
cmpsb
sbb
mov
fdivp
in
testb
dec
adc
jbe
inc
sbb
push
mov
cmp
in
cwtl
scas
popa
stc
dec
mov
out
sbb
sub
test
mov
shl
repnz
sbb
movsl
sbbb
mov
cwtl
jl
and
popf
cltd
xor
scas
jecxz
cmp
or
mov
cmp
jp
sub
dec
leave
in
ds
mov
cmpsb
jno
xlat
insl
in
push
lods
hlt
cmp
scas
xor
jge
stc
out
lahf
pop
lods
xor
and
mov
cli
imul
mov
cmp
cmp
ja
sbb
lods
stc
out
pop
andl
pop
inc
push
sbb
aas
es
shrb
in
push
sbb
pop
cmp
das
cmpsl
jbe
mov
xor
test
orl
clc
jb
inc
ss
inc
mov
inc
test
es
and
sub
ja
push
mov
popa
inc
test
jg
cmp
jnp
cmp
and
movsb
sti
imul
adc
add
add
mov
rorl
cmp
ret
dec
shll
je
cmp
stos
pop
push
shlb
xchg
jg
mov
test
push
add
shll
jp
jbe
push
fnsave
mov
fsub
and
test
mov
pusha
jne
jmp
rcrb
shll
mov
push
jle
ret
test
pop
mov
stos
push
daa
xor
jge
xchg
movsl
lret
cli
adc
sub
sbb
ret
gs
or
push
and
adc
push
leave
sbb
stos
mov
add
or
ja
cli
pop
add
mov
xlat
lods
dec
sub
iret
cmp
mov
outsl
popa
test
xchg
or
addr16
add
popa
out
mov
add
xor
jb
sub
xchg
test
insl
shrb
xor
sub
push
andl
inc
leave
push
and
idivl
add
cmovl
cmp
or
lds
push
ss
cli
mov
ficomps
adc
mov
cli
push
or
imul
mov
das
jmp
shl
lahf
cmp
push
inc
mov
push
or
jbe
fstl
cmp
fsubs
divb
mov
sub
push
push
shll
mov
jge
test
popa
xor
call
cld
mov
lahf
mov
enter
ljmp
je
lods
orl
pop
dec
aas
test
test
shrl
jle
imul
movsb
push
or
lock
push
add
ret
mov
test
jle
and
or
adc
and
sub
xor
jne
iret
lret
aaa
dec
repnz
incl
imul
gs
mull
and
into
nop
push
mov
push
push
xor
jnp
or
or
pop
icebp
jo
pop
or
loope
js
rcrl
xor
xchg
repz
shlb
jo
ljmp
add
cwtl
lret
hlt
lea
push
pop
mov
enter
jp
in
out
mov
mov
outsl
repnz
pop
cmpsb
jb
mov
adc
out
xor
mov
cmp
lcall
mov
hlt
dec
push
and
sub
cmp
inc
fldl
ljmp
int
adc
adc
push
ret
mov
outsb
cmp
bound
lea
popa
movsb
fcoms
in
out
fisubl
repz
jns
jmp
sub
add
adc
dec
movsb
mov
and
xor
xor
mov
stos
out
pushf
jo
push
mov
mov
iret
aam
sbb
pop
outsl
fs
pop
xor
mov
iret
out
adc
mov
das
cmp
scas
imul
rorl
add
pushf
jl
out
bound
fs
in
test
push
add
loop
mov
xor
out
xor
out
push
cmc
sub
add
pop
out
xchg
pop
insl
fwait
sub
rcll
nop
das
cs
js
inc
inc
cmc
cmp
jp
mov
sti
mov
sub
mov
jb
and
inc
jbe
xchg
xchg
push
and
popf
into
add
add
pop
adc
arpl
ret
cmp
in
pop
xor
add
or
adc
outsb
adc
xor
mov
test
pop
jne
or
xchg
xchg
dec
mov
cltd
push
in
xchg
fstpt
data16
pop
pop
pop
pop
push
push
add
loop
into
shl
ds
sti
scas
addr16
sub
sbb
cmp
or
iret
xchg
xchg
jg
mov
mov
repnz
xchg
sub
lds
mov
subl
pop
ljmp
jae
test
cmpsl
push
mov
arpl
add
xor
add
or
cmp
lods
mov
inc
mov
sahf
sbb
mov
xchg
lret
mov
repz
arpl
and
cmpsl
testl
push
or
leave
addb
and
gs
daa
push
jecxz
mov
loope
cmp
inc
cmp
push
test
test
int3
xchg
neg
mov
dec
std
cmpsb
sub
cmp
repnz
xor
icebp
cld
ret
out
testl
xor
fmulp
ja
pushf
inc
pop
sbb
test
mov
fucomi
ljmp
jge
push
out
dec
pop
outsl
into
ss
stos
sub
fs
ficompl
sbb
mov
push
les
xor
pop
test
movsb
ljmp
sbb
add
insb
out
mov
sti
and
cmp
xchg
inc
cmc
jmp
mov
dec
les
push
mov
or
xchg
push
mov
cld
or
xchg
pop
xchg
subl
jg
je
adc
xor
pop
hlt
lods
lods
mov
or
aaa
lock
add
mov
int
mov
push
mov
cmp
test
int
xlat
xchg
mov
sub
xchg
and
mov
mov
xchg
push
jmp
shrb
std
jb
mov
xchg
fs
adc
xlat
xor
sbb
aas
cmp
push
negb
and
adc
mov
in
or
fs
jno
mov
cmp
pusha
mov
and
inc
cmpl
sub
add
and
pop
fldcw
or
mov
sbb
mov
fwait
xchg
test
fidivs
sbb
and
push
sub
aas
cs
insl
mov
cltd
aad
std
cmp
add
bound
mov
sub
insb
sub
cmp
xor
in
ficomps
incl
out
and
out
ret
adc
int
xor
lea
push
adc
jmp
dec
mov
dec
jne
dec
or
dec
pop
int
popa
mov
fists
xchg
mov
iret
pop
cmp
adc
into
insl
faddp
pop
inc
mov
fstpt
adc
repnz
les
sbb
sbb
push
add
pop
or
mov
mov
popa
fwait
cmp
fimull
in
pusha
ds
jbe
ja
adc
push
sub
xor
fmuls
int
adc
test
push
inc
test
inc
cmp
jnp
movsb
ret
test
and
rclb
and
fcoml
sbb
xchg
xchg
imul
mov
bound
xchg
mov
cmpsl
shr
or
aam
xor
stc
outsb
ds
push
aam
outsb
xorb
cmp
push
rol
mov
sbb
mov
sbb
adc
test
pop
cmp
in
and
ja
icebp
popa
push
addr16
mov
or
outsl
xor
ds
pop
cmpsb
or
xchg
fsubs
jecxz
mov
xlat
mov
loop
mov
lods
add
xor
pop
fsubs
add
adc
mov
sbb
push
pushf
in
in
add
stos
aaa
jne
ljmp
jge
leave
mov
add
add
cmp
add
or
sub
and
inc
or
movsb
pop
pop
dec
and
and
add
sarb
rorl
ret
mov
mov
mov
mov
movsb
or
bound
push
adcl
sub
pop
add
push
pop
mov
mov
mov
cmp
or
mov
inc
clc
out
sub
std
pop
ja
shl
pop
movsl
mov
jle
fwait
sub
fwait
or
sbbl
lock
mov
repz
fstl
dec
fmuls
ret
lret
aaa
xor
scas
jge
js
xor
fs
das
push
push
push
stc
mov
shll
pop
add
call
orl
and
mov
add
pushf
imul
xchg
or
lock
sub
js
jbe
insl
call
out
popa
out
addr16
inc
mov
dec
and
mov
insb
sub
les
jg
pop
sub
mov
ds
cmp
lahf
mov
mov
rcrb
and
adc
sbb
pushf
sub
sets
mov
xchg
in
movb
mov
xor
int
inc
pushf
loop
shrb
sbb
jo
jge
xlat
and
mov
mov
aad
pop
mov
xchg
hlt
fmuls
fadd
inc
bnd
clc
inc
stc
enter
jmp
xchg
push
stos
mov
shrl
add
sbbb
lods
movsl
mov
call
fstps
lret
push
mov
add
xchg
rep
repz
bswap
xchg
mov
cwtl
inc
sbb
xor
test
popa
xor
stos
in
gs
jns
cmp
push
cld
daa
jo
push
inc
xor
mov
xchg
imul
testl
pop
mov
aas
mov
test
jno
push
js
andb
out
fs
nop
pop
sub
out
jecxz
adcl
sahf
les
or
cmp
ss
call
ret
les
adc
inc
cwtl
adc
cmpsb
inc
xchg
jbe
push
cmp
adc
cmp
lret
aaa
dec
lock
mov
lahf
enter
dec
mov
and
mov
fldl
xor
leave
out
in
inc
jnp
das
repnz
and
or
cmc
cld
xchg
lea
mov
shl
outsl
bound
pop
cli
jae
xchg
dec
or
std
mov
test
push
sbb
mov
push
scas
sbb
aas
xlat
cmp
ficompl
cltd
rorb
decb
dec
mov
jle
ss
inc
daa
jb
push
adc
mov
es
pop
lock
and
gs
sbb
jmp
xchg
mull
add
pop
stos
fs
dec
mov
sbb
orl
mov
adc
popa
jae
test
lret
push
sub
sti
add
jb
xlat
aas
fcmovnbe
lahf
int3
xchg
push
dec
sub
ss
movb
sbb
xchg
pop
stos
pop
in
inc
in
mov
out
xor
loope
in
pop
dec
inc
or
lods
push
inc
sbb
cmp
lods
push
outsb
push
test
ss
mov
outsb
sahf
mov
mov
mov
cmp
inc
adc
inc
iret
jmp
pop
and
pushf
cld
jmp
in
test
sbb
outsl
mov
bound
adc
in
in
fisttpll
mov
insl
insb
dec
pop
push
movsl
dec
add
push
shlb
xchg
mov
repnz
fsubl
cld
sbb
mov
mov
push
jg
iret
mov
idiv
in
sbb
mov
out
cmpsb
insl
push
dec
mov
cmp
mov
jg
xchg
enter
mov
out
loopne
ja
int
and
fnstsw
jnp
sbb
out
repz
jno
xor
lret
cltd
aad
jnp
mov
jg
dec
shrl
xor
push
jl
jmp
test
add
xchg
call
xchg
push
mov
je
jns
and
or
cli
pop
xchg
icebp
mov
sbb
pop
sbb
fstl
mov
mov
popf
sub
jp
xchg
inc
sub
sbb
cmp
inc
mov
jmp
mov
dec
fs
std
lods
orl
adc
and
mov
fwait
outsl
loopne
stos
jle
mov
push
stos
push
push
cs
or
adc
and
push
pop
mov
push
xchg
out
xchg
sub
lret
iret
xchg
pop
test
or
ret
jno
mov
inc
xor
pop
sub
xor
adc
sbb
int3
arpl
mov
cwtl
xchg
xchg
pop
sbb
sbb
enter
jb
cmp
xchg
cmp
jae
pop
push
pop
xchg
xor
bound
repz
inc
push
cmp
sub
js
std
pushf
mov
idivl
jns
pusha
pop
xor
sub
mov
xchg
aam
rorl
sbbl
push
aaa
orb
jo
mov
sahf
xor
adc
mov
sbb
repz
xchg
cmp
int
loope
add
enter
sbb
cld
jmp
sub
addb
or
hlt
into
cmp
sbb
scas
enter
aaa
adc
cltd
and
fisubl
jns
fwait
xlat
push
movlps
push
das
popf
fmul
repz
testl
pop
movsl
cwtl
jmp
pushf
and
mov
push
sbb
xchg
or
or
jno
std
movsl
inc
jb
mov
loopne
cmp
push
stc
aam
fnstcw
shll
jg
arpl
mov
rcrl
stc
xor
stos
into
sub
inc
rcll
in
sahf
fists
xchg
mov
xchg
inc
outsl
mov
pusha
dec
ja
fists
jge
aaa
inc
pop
out
sub
in
mov
lahf
in
clc
dec
enter
mov
sarb
sbb
pop
loopne
mov
xchg
jge
adc
lret
xchg
jo
int
pop
pushf
rcr
hlt
or
andl
mov
xchg
prefetchwt1
jno
hlt
sar
stc
aam
popa
and
and
sub
pop
sub
leave
outsb
cmp
outsl
hlt
aas
xchg
lret
clc
lea
sub
mov
dec
dec
mov
out
ret
sub
add
push
data16
clc
es
shll
lret
lea
pop
and
and
mov
or
insb
adc
and
mov
sti
or
lret
imul
fsubl
cltd
cmc
xchg
das
jl
cmc
leave
push
sub
mov
cld
lea
addr16
ss
lret
adcb
cmc
mov
leave
test
std
jmp
ss
aam
fildll
hlt
ja
pop
das
jge
xchg
dec
les
imul
cmc
pop
cmp
push
dec
ja
imul
cmc
push
scas
outsl
gs
and
fldcw
lods
dec
push
imul
cmp
xor
call
pushf
or
sbb
dec
push
jbe
and
fs
jno
xor
outsl
ret
std
pop
aas
mov
icebp
test
subb
decb
rclb
xchg
scas
imul
or
push
pop
xor
in
stc
and
or
mov
jecxz
ss
sahf
insb
in
orl
lock
xor
jb
push
cltd
lods
in
aas
lcall
and
aaa
adc
cltd
pop
jb
jecxz
add
cmp
into
sbb
add
xor
jmp
push
dec
cmp
paddusb
push
ja
rclb
add
shlb
cwtl
loop
inc
fists
in
xchg
nop
cwtl
jp
xchg
mov
aaa
or
fstps
imul
xor
cmpsl
shlb
mov
stc
lods
add
pop
mov
hlt
cmpsl
cmp
xlat
insl
jge
imul
push
dec
fnsave
arpl
stos
xlat
je
pop
out
sar
sbb
inc
and
loop
cmp
sub
add
pusha
addr16
pop
mov
add
ret
clc
subl
xlat
sbb
aas
popa
cld
sbb
add
jb
xchg
in
test
inc
mov
aam
dec
das
insl
adc
sub
inc
push
jo
xor
pop
cmpsl
pop
jbe
xlat
fucomi
inc
pop
cmp
icebp
fsubrs
xor
popf
sbb
jge
stos
and
ja
loop
sti
aas
popl
jo
je
pop
subb
popf
pop
mov
bound
sub
dec
cmp
lock
hlt
js
inc
out
fdivl
test
add
icebp
mov
cltd
enter
add
cwtl
xor
dec
push
std
pop
mov
adc
xlat
or
push
dec
dec
lahf
iret
cmp
loopne
ljmp
push
test
and
push
sbb
add
push
outsl
repz
sti
cld
mov
mov
sbb
mov
stc
hlt
int3
sub
xor
sub
xor
mov
push
test
adc
push
or
adc
push
rcrl
fidivrs
ret
or
pop
xor
aam
xor
lods
mov
push
sbb
test
push
or
std
gs
adc
in
mov
cmp
pop
xchg
inc
imul
xor
pop
insl
adc
or
aad
pop
mov
pop
sub
mov
inc
arpl
cmp
inc
mov
mov
and
sahf
out
jl
inc
rcr
xchg
pop
jb
into
jns
leave
mov
jns
jmp
cmp
push
aam
shll
fcoml
mov
aad
decb
call
in
dec
mov
out
cmpsb
rorb
call
jl
mov
xor
xchg
jp
jne
ret
test
xchg
sbb
out
add
sub
in
sarl
in
ljmp
fucom
ss
or
sub
jg
sub
in
faddl
hlt
sbb
nop
xchg
xchg
cmpsl
cmpsb
stos
cmp
mov
inc
movups
sbb
push
push
stos
push
scas
inc
loope
out
test
inc
lock
cwtl
mov
push
sub
or
sbb
cmp
insb
lcall
scas
jge
or
and
mov
pop
push
xchg
pop
rorb
lods
push
jg,pt
cmp
testb
jbe
ljmp
sbb
mov
adc
jno
jge
ja
dec
call
imul
repz
pop
repnz
or
xor
and
in
inc
push
in
xchg
std
cmp
xchg
push
or
adc
jecxz
mov
sahf
dec
mov
in
or
ret
mov
and
pop
xor
or
pop
fistpl
dec
int3
mov
xchg
xchg
sbb
cli
ljmp
cmc
ret
pushf
mov
xchg
out
fsubrs
mov
cli
mov
inc
nop
jb
sahf
inc
icebp
sbb
gs
mov
xchg
loope
sub
push
cmpsb
subl
gs
ret
fbstp
ljmp
ret
cli
daa
add
lahf
jge
dec
inc
fbstp
fstps
scas
push
popf
shll
pop
push
add
sub
je
adc
xchg
sarl
xchg
lea
pop
cltd
push
outsb
test
or
inc
and
push
xor
in
out
jb
outsl
push
inc
add
mov
inc
std
fistl
je
dec
dec
cmpsb
jnp
outsb
fmuls
icebp
dec
adc
mov
inc
in
pushf
mov
mov
push
cli
scas
adcl
ds
mov
popa
cmp
and
jmp
popf
pop
outsb
xchg
lcall
push
cwtl
arpl
icebp
mov
and
stos
adc
out
mov
sbb
mov
cmp
shlb
jae
stos
test
add
and
inc
push
push
sub
loope
fpatan
jbe
rorb
cmpsl
fidivs
std
xchg
out
dec
iret
lahf
les
ret
adc
test
mov
cs
gs
fisttpll
inc
outsl
inc
cmc
inc
sahf
adc
add
xor
push
add
push
or
repz
int
clc
mov
call
shll
mov
mov
es
scas
and
inc
lcall
aas
icebp
mov
jp
and
mov
addl
out
or
mov
pop
mov
out
cld
pop
bound
add
xor
ss
mov
cltd
xchg
pop
xchg
test
sbbb
ljmp
adc
xchg
adc
fildl
fidivs
inc
out
pop
dec
stos
push
movsb
inc
pusha
stos
test
scas
jbe
jo
ja
sub
dec
add
dec
dec
adc
cmc
push
pop
fcomip
scas
push
out
inc
cmp
jp
aas
xchg
outsl
sbb
pop
mov
incl
lea
push
mov
sbb
stc
add
mov
shl
loop
mov
push
inc
das
push
mov
xchg
xor
push
cwtl
pop
jge
xchg
or
cmp
pop
add
dec
insl
mov
pushf
inc
adc
xlat
clc
aas
jg
inc
iret
fbstp
std
lds
jo
lods
add
xor
add
push
call
aad
je
sti
mov
clc
push
xchg
sub
dec
je
mov
cltd
js
sub
lods
out
ret
inc
adc
xor
repz
cmp
push
jae
movl
sub
lock
pop
push
in
and
add
cltd
cwtl
jbe
push
ja
lcall
push
je
mov
push
push
push
inc
add
cmp
dec
inc
inc
out
or
sub
cltd
dec
loope
notl
out
inc
xchg
mov
frstor
les
daa
mov
mov
test
into
pop
stos
pop
test
gs
insl
adc
dec
mov
mov
shl
dec
divl
mov
ja
xchg
inc
nop
mov
mov
push
sub
int3
and
mov
in
loope
pop
lahf
xchg
scas
lahf
dec
stos
pop
in
inc
fcoms
test
pop
or
push
andl
cld
mov
mov
inc
lea
or
dec
inc
test
jnp
bound
push
aas
fdivp
cmpsl
jo
jge
add
int
push
clc
xor
pop
sub
or
enter
imul
movsb
inc
insb
and
or
iret
cmp
faddl
sbb
push
push
movsl
push
out
push
sbb
dec
push
and
xor
mov
mov
je
and
fdivl
addl
fiaddl
dec
sub
add
lret
jno
mov
xchg
xchg
dec
aaa
sub
and
cs
sub
add
mov
jg
pop
mov
xchg
pop
pop
push
mov
dec
push
popf
mov
inc
jo
rol
fwait
call
inc
mov
mov
ja
outsl
dec
or
movsb
lods
mov
jae
and
out
test
outsl
mov
std
mov
aas
scas
outsb
stc
mov
popf
push
add
hlt
sbb
ret
rorl
into
sbb
or
enter
roll
loopne
lods
or
clc
sbb
popa
push
jae
push
dec
push
out
mov
aad
ret
fwait
cli
xchg
aaa
jae
add
jb
movsb
sarb
data16
sbb
loop
add
push
aam
push
sub
adc
push
push
push
add
stc
int3
sub
das
pop
add
clc
inc
cltd
dec
mov
dec
pop
cmp
sub
popf
push
mov
sbb
lea
int3
cltd
sti
or
pushf
push
sub
subb
pop
add
movsbl
pop
xorl
lea
push
mov
lcall
pusha
mov
xchg
sub
sbb
inc
dec
add
shlb
test
cs
jb
xchg
mov
roll
iret
sbb
pop
aaa
filds
lret
xchg
inc
jns
xchg
int
in
xchg
jmp
mov
pop
mov
out
inc
and
fwait
mov
and
mov
pop
pusha
dec
mov
xor
std
ljmp
ja
sub
fcmovbe
sub
jo
cmp
sbb
ds
lods
push
adc
shlb
sub
mov
insb
sub
fwait
lods
pop
aad
scas
movsl
or
in
add
mov
ja
movsl
icebp
jnp
in
sub
outsl
pop
adc
stos
mov
push
call
jmp
mov
sub
or
mov
mov
in
dec
flds
and
ds
in
jbe
sub
xor
gs
mov
aaa
rcll
mov
adc
cmc
xor
ja
pop
cmpsb
xchg
rorl
pop
mov
push
and
out
pop
sbb
int
add
std
xchg
inc
out
or
and
xlat
push
mov
fsub
daa
call
loope
hlt
aaa
outsb
mov
sub
fistpll
ljmp
push
cmc
push
insb
mov
xor
lret
das
cld
je
mov
mov
jg
lds
xchg
xchg
or
cld
mov
icebp
add
test
or
ds
sbb
jg
or
stc
mov
push
or
clc
pop
mov
cmp
mov
pop
lods
ret
aam
int3
add
mov
loopne
test
out
lods
subl
mov
pop
fstpl
test
mov
repnz
roll
sbb
lock
and
sub
into
mov
pop
sub
es
jb
subb
gs
mov
jle
sub
sub
mov
pusha
hlt
insb
repz
cmp
mov
ss
xchg
test
pop
sub
in
push
cmp
xchg
mov
xchg
es
rcrl
mov
ds
jge
xchg
es
sbbl
push
addl
lods
ret
jge
mov
mov
pop
orl
leave
xor
mov
mov
nop
insl
add
jns
cwtl
cwtl
fstp
xchg
pop
outsb
sub
fs
dec
aaa
icebp
xor
mov
jae
inc
hlt
mov
jbe
xchg
mov
sbb
cmpsl
mov
in
push
inc
jp
mov
insb
inc
inc
push
jl
mov
rcl
aam
and
push
repz
inc
out
aad
pop
test
jae
into
dec
sti
faddl
cli
xchg
inc
mov
testb
cli
stos
inc
push
filds
shlb
adc
scas
inc
in
push
pop
push
pop
jne
xor
xlat
roll
imul
cltd
cmp
push
push
sbb
js
pop
sbb
jle
in
pop
mov
or
mov
shll
jae
into
insl
mov
jno
test
je
xchg
cmp
mov
sub
repnz
sub
xchg
dec
les
dec
sbb
inc
in
pop
shll
adc
xchg
daa
shl
idiv
outsl
or
pusha
rorl
or
mov
sub
ja
mov
push
enter
popf
out
ret
sub
sahf
pushf
je
xor
cmp
xor
out
sub
push
inc
push
popa
or
cmp
jb
jnp
jmp
out
rcrl
lds
cmp
cwtl
mov
mov
scas
leave
fwait
ljmp
andb
xchg
outsb
mov
sub
mov
lods
ret
sub
dec
push
jnp
sbb
fwait
andl
outsl
dec
scas
mov
xchg
jmp
or
inc
sub
mov
and
mov
jecxz
push
aas
xor
lock
xchg
loopne
inc
dec
das
pop
rclb
inc
jo
adc
xchg
mov
gs
mov
inc
push
push
add
in
xchg
js
inc
inc
ficoms
stc
jae
or
test
push
inc
es
jae
int3
mov
pop
sbb
enter
in
ss
test
popf
loop
je
xchg
cmpsb
and
addr16
enter
push
mov
adc
or
nop
jmp
fdivs
bound
push
mov
push
mov
push
xor
cmp
xor
or
dec
jle
mov
add
push
xlat
xor
push
inc
mov
ss
clc
in
mov
add
mov
mov
lods
das
mov
xchg
clc
sahf
jbe
jns
scas
enter
mov
das
subl
mov
add
pop
jl
test
jnp
outsb
aaa
mov
jmp
in
mov
ja
add
xchg
mov
xchg
int
or
add
xlat
mov
jmp
mov
insb
das
stos
into
movsb
pop
mov
loope
pusha
test
arpl
rorl
fwait
mov
xor
fistpll
test
ret
adc
scas
insl
fcoms
daa
inc
mov
mov
sbb
or
xchg
pop
ljmp
and
jg
cs
jl
push
push
dec
adc
jp
mov
push
dec
sarl
jp
imul
mov
flds
and
add
add
xor
or
pop
addr16
inc
fists
inc
popa
rolb
movsl
or
std
mov
jo
mov
sub
mov
push
ja
cld
pop
push
push
jae
mov
cmpb
ss
jae
fidivs
xchg
aam
push
nop
inc
xor
or
leave
push
and
dec
loop
mov
pop
or
xchg
xor
loop
cmp
sbb
cmp
test
dec
or
mov
pop
mov
mov
rcrb
ret
pop
not
jge
lret
sub
dec
adc
out
rcl
inc
jl
test
mov
leave
out
cs
cmp
icebp
lock
mov
xchg
inc
adc
lcall
aam
subl
or
imul
rcr
xchg
dec
mov
insb
enter
lcall
dec
inc
pop
jnp
xor
cld
mov
add
clc
mov
ja
and
ret
cli
jb
dec
add
jae
add
dec
jno
imul
sbb
xchg
iret
xorl
push
repz
jecxz
fsts
xor
icebp
or
out
fiaddl
sbb
nop
dec
mov
pop
testb
mov
in
outsb
jne
push
mov
test
mov
pop
sub
jne
inc
es
pop
adc
testb
fildll
mov
insb
icebp
fmuls
call
sbb
mov
ss
jle
dec
loope
lock
xor
push
mov
popf
xchg
mov
out
gs
loop
push
popa
dec
push
or
cmp
out
pop
daa
mov
inc
shrl
add
adc
or
test
mov
out
jbe
and
dec
rclb
jge
insl
adc
jnp
lret
js
scas
in
das
roll
jno
sub
mov
shr
daa
mov
incb
cli
mov
scas
add
inc
add
rol
stc
out
jl
cli
clc
xchg
test
in
jmp
push
ror
cmp
idivb
arpl
cwtl
out
and
arpl
ljmp
cmp
add
js
out
sub
inc
inc
or
mov
sarb
iret
inc
ss
cmp
divl
shlb
in
aaa
mov
ret
je
mov
lods
jno
xchg
popf
cwtl
shr
jmp
cmp
lret
imul
push
shrl
push
js
and
or
dec
jo
add
nop
in
sbb
pop
mov
push
pushf
lahf
cmp
in
inc
cmp
lock
pop
pushf
fmul
lret
ret
and
enter
cmpsl
stos
or
mov
inc
aad
scas
jae
in
sbb
sbb
divl
xlat
ja
test
adc
imul
call
ljmp
xor
push
dec
and
or
popf
lods
or
hlt
mov
jbe
ss
dec
mov
fisubs
push
leave
enter
cli
adc
mov
sbbl
insb
fcompl
push
push
xor
and
pusha
popf
adc
mov
in
jnp
data16
imul
or
gs
add
pushf
outsb
mov
lods
lret
jo
mov
push
and
mov
lock
push
in
in
mov
mov
pop
mov
idivl
test
std
out
dec
xor
mov
push
mov
xor
cmp
hlt
icebp
dec
add
xlat
sahf
xor
mov
push
lret
adc
popa
out
je
xlat
lock
fwait
push
scas
rorl
xor
sbb
popf
xchg
jbe
mov
in
and
push
test
mov
rorl
lds
mov
rcrb
jbe
add
inc
or
pop
jp
gs
lock
inc
scas
es
fs
subl
dec
adc
dec
in
xlat
mov
lret
xor
rcrb
inc
test
and
ud2
imul
jno
pop
dec
dec
pop
mov
push
mov
pop
jmp
cmpsb
sub
or
xor
push
or
xor
stos
das
mov
shlb
sub
ds
sti
jge
mov
imul
push
enter
enter
cmp
movsl
out
mov
dec
scas
sbb
mov
pop
mov
cmp
jns
ror
mov
clc
sub
pusha
popa
bound
and
repnz
cmp
xor
xchg
inc
iret
and
jecxz
jmp
pop
lds
bnd
imul
sub
jge,pt
in
sbb
push
mov
rclb
test
fmull
pop
cmc
xor
xlat
pop
push
push
mov
ret
add
ret
xor
push
cmp
jge
and
xor
inc
push
ret
mov
rcrl
sbb
xchg
hlt
dec
cmp
out
fnstsw
xor
push
mov
fldenv
loope
fmulp
push
insl
cmc
aas
sub
sub
adc
dec
pushf
jb
push
shl
ret
sarl
fsubs
inc
push
test
insl
rcll
sbb
mov
pop
cmp
sub
sbb
pop
mov
sub
stos
adc
mov
mov
push
hlt
jecxz
jle
mov
movsb
daa
subl
xor
dec
dec
jge
repnz
stos
xlat
mov
mov
repz
dec
lahf
dec
sub
pop
jne
mov
daa
les
inc
outsl
xor
lret
cltd
pop
je
int3
aaa
adc
pop
je
ds
outsb
xchg
add
popf
dec
lcall
je
cltd
cmc
and
dec
mov
movsl
out
sbb
lea
inc
inc
mov
adc
std
sub
mov
fs
rcrb
jno
imul
and
fwait
jecxz
pop
mov
xlat
pop
mov
scas
mov
inc
cmp
and
arpl
mov
adc
pop
dec
add
cmc
jae
popa
int3
dec
push
movsb
xchg
xor
out
add
xchg
jg
xchg
mov
sti
in
xlat
rolb
jecxz
mov
lahf
ds
in
fs
fwait
lret
cmp
je
shr
in
xor
sbb
js
data16
fists
test
jg
out
aaa
or
dec
movsb
jmp
xchg
popf
cli
and
addl
xor
sub
adc
mov
outsl
jae
jb
inc
inc
pusha
mov
mov
dec
push
leave
rcll
ret
push
movsl
aaa
in
or
dec
inc
pop
cld
repnz
das
pop
fldenv
rcl
dec
outsl
push
dec
sub
mov
pop
loope
cwtl
cli
sub
xor
imul
cld
lret
sbb
repnz
loope
mov
pop
push
in
push
lret
cld
jo
sub
xchg
sbb
lahf
mov
hlt
imul
fwait
mov
jb
or
pop
xor
aam
cli
int3
mov
mov
and
jae
leave
loope
imulb
sbb
cmp
bound
pusha
pop
movsb
add
fwait
es
mov
sbb
sbb
outsb
mov
cmpsl
out
lods
add
lcall
icebp
xchg
jbe
xlat
in
push
pop
sbb
shll
cmp
notl
out
das
ret
in
adc
xor
xchg
out
out
or
mov
fcoms
loope
mov
xchg
lahf
xor
jns
jle
lods
dec
leave
xor
and
stos
dec
mov
mov
adc
mov
xchg
es
sbb
mov
pop
insb
jecxz
push
ficompl
shlb
mov
cmpsb
jno
lods
dec
cmp
pop
jb
mov
sbb
jne
sub
movsb
cmp
out
mov
in
iret
repz
xchg
stos
inc
jo
test
es
hlt
pop
and
dec
call
lods
rorl
pop
and
lds
mov
dec
aam
mov
xchg
push
mov
xlat
int3
into
xor
xor
aaa
leave
sub
xchg
sahf
scas
cmp
decl
xacquire
not
data16
arpl
sub
js
inc
or
loopne
loop
and
and
imul
fistpll
mov
in
cmc
jb
sbb
xchg
cld
lahf
jge
lret
jae
scas
mov
sub
add
xchg
cld
pop
push
std
inc
test
xchg
lret
sub
mov
add
pushf
repnz
sbb
adc
xchg
repz
cmp
mov
sbb
inc
fdivs
idivb
push
ds
cmp
dec
sbb
pop
jns
push
repnz
cltd
lret
andl
mov
repz
add
popf
mov
dec
rcr
mov
adc
inc
xlat
jb
cwtl
pop
test
fisubl
out
add
mov
es
cwtl
stos
mov
mov
push
out
xchg
mov
out
xor
and
ret
ss
cmp
je
rclb
cld
adc
xchg
mov
repnz
fcmovnu
add
add
adc
mov
ret
fisubrl
out
ret
sbb
mov
hlt
mov
addr16
pop
out
or
add
cwtl
gs
xor
pop
inc
movsb
jp
mov
xorl
mov
stos
add
ja
sbb
fucomip
jno
mov
push
ljmp
outsb
xchg
cwtl
es
test
pop
stos
add
int3
ss
ss
fidivs
in
sbb
stc
sarl
cwtl
xor
cmp
xchg
or
mov
mul
fcmovne
cs
nop
xchg
js
pop
mov
xchg
push
fwait
in
popa
lods
mov
mov
insb
mov
add
lods
and
lock
xor
inc
cmp
cmpsl
mov
mov
push
gs
mov
insb
addr16
enter
lret
adc
sbb
jmp
mov
test
inc
cltd
shlb
leave
stos
mov
cmp
cmp
fidivl
repz
sahf
jmp
xor
mov
stos
fsub
popa
dec
inc
jp
ljmp
push
lock
cmp
xchg
aad
ja
pop
jne
dec
add
pop
sub
movsl
repz
cmpsb
stc
pop
pop
jbe
out
xor
add
insl
cmp
xchg
xor
insl
inc
xchg
in
sbb
mov
out
xchg
mov
xchg
jbe
add
and
or
mov
nop
mov
test
mov
nop
sbb
jae
inc
cmpsl
mov
int3
lea
and
push
dec
adc
xchg
jecxz
cmp
xchg
subl
and
sti
jbe
psrld
jae
xacquire
inc
cltd
inc
jb
lret
nop
jno
pop
xchg
fidivrl
add
jmp
enter
mov
pop
mov
repnz
pop
mov
inc
out
and
shll
out
movsl
in
add
push
lea
sbb
mov
call
fstpt
in
pop
fwait
dec
sub
jecxz
outsb
push
cmp
int3
cs
mov
shrb
pop
js
jp
xchg
movsl
xchg
icebp
adc
dec
out
mov
pop
dec
es
mov
sbb
inc
mov
subl
data16
imul
mov
call
pop
out
dec
cli
jb
cli
push
sub
mov
or
shlb
daa
imul
lods
or
mov
cmp
mov
adc
out
gs
cmpsl
pop
inc
xchg
mov
xor
inc
addr16
dec
pop
mov
add
xchg
jecxz
push
xlat
lret
push
inc
shl
nop
xchg
aad
mov
in
inc
stc
xor
cmp
lods
jae
pop
into
gs
shr
xchg
pushf
ljmp
dec
cld
mov
sti
jbe
sub
adc
in
lret
sub
imul
iret
jb
out
pusha
sub
int
test
cmc
fistpll
add
cmc
mov
pop
aaa
push
jo
pop
scas
push
inc
add
xlat
jnp
or
fsub
add
cmc
add
adcb
ljmp
repz
or
rclb
bnd
and
push
ds
cwtl
push
jg
xchg
mov
pop
mov
fnstsw
pop
push
pop
idiv
icebp
mov
decb
push
outsl
sbb
or
outsb
mov
mov
adc
sbb
fwait
sub
loopne
mov
idivb
fcoml
adc
popa
repz
sub
insl
pop
das
fistps
push
or
sub
push
call
add
pop
orb
adc
mov
inc
add
gs
xor
pop
jmp
jnp
xor
leave
divl
mov
or
daa
mov
jecxz
xchg
pop
fwait
and
mov
jne
ss
rcl
jb,pt
adc
dec
into
push
in
jb
add
shlb
pop
ror
in
shl
cmp
cs
mov
xchg
shrb
cmp
xor
adc
inc
rcrl
push
pop
mov
arpl
outsl
icebp
scas
inc
pop
ret
je
sbb
mov
adc
push
fcompl
cmp
inc
add
imul
mov
jo
mov
subl
into
xor
rcrb
add
sub
pop
pusha
into
outsb
lock
ret
add
addr16
int3
call
test
stos
mov
out
mov
je
scas
or
xor
dec
add
jbe
out
jecxz
lea
in
test
lock
repz
xor
push
fs
push
and
movsb
adc
inc
repz
pop
repz
cmp
pop
outsb
dec
jmp
hlt
xor
xor
shlb
fld
leave
scas
idivl
sub
daa
fndisi(8087
mov
outsl
jmp
push
mov
mov
mov
rcll
addr16
pop
xor
pop
insb
in
ljmp
inc
pop
cmc
je
in
iret
imul
das
addr16
jecxz
pop
ss
xchg
in
mov
and
sbb
jge
push
mov
test
add
mov
fists
inc
outsb
sub
xchg
int
lock
inc
lret
inc
shll
cmp
sub
cmp
in
push
inc
or
out
ds
rcll
test
sti
out
loope
mov
jecxz
mov
mov
insl
enter
sub
jge
adc
pop
fst
sub
or
data16
cs
stos
mov
mov
inc
mov
stc
enter
mov
push
mov
cltd
sarl
xor
and
cmp
dec
mov
dec
sahf
sar
scas
jnp
loop
int
es
subb
ficoml
mov
movsb
cld
iret
jno
and
sbb
mov
mov
dec
xor
inc
xrstors
mov
repnz
mov
lods
sub
xchg
pop
outsb
test
and
insb
rclb
call
pop
fisubrl
sbb
jecxz
ja
fbld
inc
out
push
clc
arpl
in
ja
dec
push
dec
inc
or
mov
mov
test
lahf
dec
add
add
xchg
jnp
xchg
pop
shrb
out
fwait
sbb
sub
sti
int3
add
inc
mov
scas
and
sub
adc
mov
jb
dec
subb
aas
icebp
or
jb
or
cs
mov
mov
jo
push
adcl
xor
pusha
testb
dec
mov
pop
xchg
xchg
inc
sahf
fcoms
add
cwtl
enter
cmp
pop
mov
out
sub
adc
adc
je
cmp
mov
mov
mov
fistps
rcll
mov
mov
jge
mov
push
sahf
mov
push
imul
xchg
push
mov
pop
inc
jg
push
sbb
sub
add
fdivl
jns
xchg
fstps
loop
push
mov
mov
xchg
sbb
rol
lahf
mov
xchg
lret
jnp
test
fcmovne
push
dec
dec
into
mov
lahf
mov
lock
and
femms
fists
imul
popa
mov
rorb
imul
in
and
mov
and
xor
ljmp
aam
mov
jp
dec
mov
pop
scas
repz
sbb
or
std
cmp
xchg
xchg
ret
rcll
jb
inc
jo
insl
cmp
xor
fnstsw
sti
inc
sub
test
inc
gs
cmc
add
dec
imul
test
mov
jecxz
cli
pop
in
imul
mov
icebp
inc
adc
cmp
add
pop
cltd
adc
dec
not
inc
or
dec
mov
push
and
dec
fs
dec
insb
jno
push
mov
mov
inc
push
push
push
cmp
pop
ret
repnz
insl
popf
repz
xchg
fwait
sub
fcomp
cmpl
icebp
dec
neg
sbb
arpl
pop
xchg
jae
fdivs
mov
adc
dec
push
lods
mov
imul
shll
jae
push
push
jl
xor
sbb
mov
jnp
movsb
inc
adc
push
xchg
mov
jmp
inc
leave
aaa
cmp
pop
sub
jb
mov
sahf
out
pop
je
xchg
hlt
outsl
push
loopne
xchg
movsl
fdivp
cmp
pop
fidivl
into
outsb
enter
pop
xor
pop
jns
xchg
ss
dec
out
mov
cli
inc
cmpsl
insb
xchg
imul
and
insl
outsl
repz
dec
cltd
add
sub
subb
out
cmp
stc
andb
ret
push
add
je
jne
es
add
pop
mov
adc
sbb
lret
sub
and
insb
jo
xor
cli
inc
dec
fistl
or
int
fidivs
pop
movsb
outsb
mov
insb
push
sub
sub
pop
mov
out
adc
xchg
push
stos
sub
cmc
and
stos
jmp
js
jns
add
jge
sub
aam
pop
add
push
int3
div
push
fcomps
lock
mov
push
mov
push
test
adc
int
data16
jg
xchg
imul
mov
mov
mov
lahf
mov
icebp
repnz
jl
iret
cli
imul
xor
add
xchg
addr16
fidivrl
in
push
xchg
mov
or
cld
rclb
out
mov
outsb
in
js
out
lret
and
ficompl
jns
daa
out
or
cltd
push
push
xchg
je
bound
repz
xor
mov
xchg
jecxz
repz
push
adc
out
pop
stc
mov
lea
jns
fst
push
ret
imul
mov
push
push
xor
sbb
adc
out
ss
jbe,pt
and
mov
call
imul
cmp
shl
in
mov
or
xor
lea
mov
idiv
bound
out
ret
xchg
jmp
jbe
pop
cmpl
mov
xor
dec
xchg
jo
adc
cwtl
fisttpll
xchg
mov
aaa
aaa
std
shrl
jle
jmp
sahf
ret
scas
xlat
je
test
sbb
mov
outsl
jecxz
lods
and
insl
xchg
imul
test
adc
adc
aad
insb
inc
sub
test
repz
xchg
xor
adc
cmp
sahf
popf
mov
jns
in
pop
cmc
je
inc
jne
mov
fwait
jecxz
adc
mov
and
inc
add
and
in
rcll
push
xchg
push
push
xchg
sbb
fidivrl
or
ret
cli
jle
mov
sbb
dec
bnd
push
icebp
mov
sarb
inc
mov
bound
dec
arpl
mov
data16
daa
mov
movsb
and
cmp
js
ljmp
in
add
decl
and
outsl
mov
in
jg
sbb
add
stos
pop
cmpl
xlat
cmp
pusha
inc
jo
movsl
or
jne
pop
mov
sbb
fnsave
sbb
decb
leave
cmpsl
sbb
xchg
xchg
aam
adc
sbb
in
popf
repnz
push
test
stc
mov
sbb
push
lcall
sbb
lock
add
mov
add
bound
inc
sub
pop
clc
mov
das
jecxz
jecxz
mov
jg
inc
sub
popf
cmp
test
test
lods
je
cli
data16
add
ja
mov
cld
xchg
std
xchg
push
and
adc
push
and
lahf
fnstenv
xchg
call
adc
jo
lock
mov
js
mov
sub
shl
push
push
movsb
fisttpll
orl
icebp
jge
xchg
call
mov
inc
imul
inc
lds
loopne
call
push
lret
fdiv
inc
jl
addb
in
mov
test
fdivrs
mov
lea
push
and
mov
lcall
cs
cwtl
iret
je
add
cmpsb
xor
insb
mov
roll
pop
jg
ret
mov
mov
pusha
rcr
loope
daa
sti
cmovp
mov
push
lea
loop
int
cld
pop
sbb
mov
xchg
sbb
xchg
cmp
push
fsubrs
insl
cmp
icebp
adc
mov
sub
clc
xor
push
jmp
xor
push
rcll
mov
sbbl
cmp
xchg
cmp
xor
push
ljmp
lret
xor
dec
mov
sbb
mov
in
mov
xor
inc
jecxz
flds
orb
ja
mov
push
push
lods
pop
or
mov
hlt
inc
cs
lods
ljmp
test
mov
popf
sahf
rclb
test
push
mov
rcll
jmp
cmp
xchg
and
ljmp
lock
addr16
in
mov
or
sbb
std
mov
dec
dec
jae
mov
into
jbe
in
mov
pop
insb
ret
popa
decl
xchg
inc
loopne
int3
mov
test
sub
daa
dec
out
lret
add
shrb
insl
insb
aad
xlat
mov
xlat
push
test
test
pop
shrd
sub
ja
cmpsb
data16
leave
dec
inc
jb
lods
fadd
dec
sbb
test
push
pushf
lahf
xor
stos
daa
add
jae
inc
outsb
adc
pop
nop
mov
or
sahf
sbb
inc
jbe
pop
lods
xor
int3
pop
test
fucomp
outsb
addr16
or
jno
outsl
pop
mov
pop
dec
mov
lods
add
xor
sub
add
faddl
lds
dec
jns
shl
adc
jmp
xchg
mov
lahf
out
jns
lcall
ror
scas
movsl
sbb
fwait
sbb
mov
ss
pop
sbb
lock
cs
pop
xor
push
data16
movsl
js
xchg
and
scas
std
les
lea
popa
iret
movsb
cmp
jle
mov
cmp
mov
push
fimuls
mov
pop
sub
aam
pop
lret
xor
popf
fildl
push
idivl
andnps
movsl
sbb
andl
cld
mov
dec
leave
cmp
call
jnp
pop
xchg
stos
test
ret
call
ljmp
adc
xchg
lcall
xorl
loopne
scas
push
jle
pop
adc
lcall
fmull
pop
fimull
inc
test
incl
in
outsb
fwait
lods
aad
icebp
inc
mov
data16
sub
cli
out
out
jne
xchg
mov
int
leave
pop
xor
pop
sub
mov
mov
fldenv
pop
pop
outsb
adc
fsubrs
insb
rclb
shll
lret
pop
nop
push
jmp
mov
fistl
mov
mov
into
xchg
out
gs
mov
xchg
sbb
es
mov
jmp
mov
or
scas
stos
push
xor
decb
xor
cltd
daa
lods
mov
dec
cmpsb
dec
aam
mov
jnp
xchg
xor
test
xchg
pushf
movsl
divb
inc
or
adc
lods
push
add
add
pushf
pop
js
xor
daa
and
push
pusha
or
xor
mull
cmp
mov
inc
cmp
movl
cli
pop
or
fisttpll
addr16
xor
or
pop
jne
scas
and
nop
mov
sbb
dec
ret
imul
adc
inc
out
cmp
cld
in
andl
sub
pop
addr16
xor
mov
and
in
cmp
outsb
push
and
dec
sbb
test
negb
and
mov
xor
jnp
lock
fimuls
mov
sub
pop
mov
outsl
cmp
mov
loopne
xchg
lea
test
xor
ljmp
scas
sahf
mov
mov
adc
push
repz
lcall
daa
jecxz
sub
rorl
or
insb
icebp
pop
cmpsb
pop
mov
iret
and
mov
add
mov
ret
das
enter
jmp
pop
addr16
cld
mov
jecxz
xor
mov
mov
xchg
inc
push
push
jo
fnstenv
inc
bnd
dec
in
jg
and
cmp
dec
lea
arpl
or
js
and
aam
shll
jg
notb
cli
cmc
pop
outsb
inc
cmpsb
xchg
xor
mov
pusha
rorl
push
lcall
push
int3
or
jno
test
xor
pop
loopne
mov
cwtl
xchg
inc
daa
sbb
rclb
cmc
arpl
adc
and
in
xchg
rcll
xchg
push
divl
mov
outsl
push
jmp
pop
cmpl
add
push
clc
jae
pop
ljmp
inc
leave
adc
xchg
sti
pop
cmpsb
pop
adc
testb
mov
xor
xchg
adc
cmp
cmpb
pop
mov
push
iret
out
mov
mov
popf
mov
mov
scas
into
pop
push
rclb
enter
ss
cmp
addr16
pop
push
mov
pop
notl
ficoml
fcoml
ljmp
addl
push
inc
mov
mov
std
repz
mov
sbb
inc
sahf
loop
or
lret
popf
div
sbb
add
inc
jo
fisubrs
popa
imul
sarb
jne
lds
mov
fucomi
shlb
push
fidivs
mov
pop
ret
rcrb
and
imul
insb
mov
fcoml
mov
adc
rcrl
orb
mov
jge
pushf
xchg
dec
fdivl
in
aam
in
and
push
and
in
das
pop
das
and
inc
xor
out
shlb
lods
add
test
mov
aad
push
jbe
mov
sbb
and
gs
inc
inc
jmp
leave
stos
sbb
ret
lods
leave
divb
sub
jbe
in
and
test
xor
orb
mov
aaa
jb
push
mov
orl
test
lcall
lock
subb
movsb
pop
jne
dec
mov
shlb
out
repz
cld
aaa
mov
jmp
jbe
ficoml
mov
insb
mov
xor
push
and
dec
push
das
xor
mov
pushf
mov
mov
add
push
aas
push
adc
pop
stos
pop
adc
push
mov
ljmp
imul
push
loopne
test
add
pop
leave
xor
flds
dec
in
xchg
pop
sbb
test
adcb
je
inc
imul
int
xor
cli
dec
inc
stos
lock
sub
or
cmpl
or
cwtl
xchg
ljmp
mov
add
inc
or
pop
push
sbb
imul
mov
stc
xchg
mov
ss
lea
notb
inc
xor
jl
lds
sti
lds
pop
pop
pop
shll
pop
sbb
rolb
or
sbb
or
addr16
cmp
cwtl
inc
test
fcmovu
jno
movsl
pop
lock
add
mov
mov
sub
je
xchg
ror
insb
pop
clc
daa
and
insb
push
imul
add
cld
add
call
xor
jg
xor
inc
mov
pop
inc
cmove
ss
negb
push
test
sub
pop
je
push
jp
sbb
int3
xor
cli
sti
les
lds
push
push
pop
ret
pop
adc
movsl
loop
push
ja
ds
lods
mov
loopne
inc
sarl
add
test
mov
faddl
enter
mov
sbb
cmp
fstpl
jno
sbb
insl
mov
mov
xor
dec
sbb
fcom
push
rorb
jmp
imul
pop
pop
mov
das
loope
ret
and
cmpsb
jmp
and
jno
mov
mov
sbb
mov
imul
sbb
and
cs
cmp
jne
push
add
push
ret
pop
xchg
lahf
fs
mov
inc
lock
sub
gs
ds
pusha
or
mov
out
andb
mov
sti
add
popa
mov
test
adc
stc
cltd
cmpsl
pop
ds
test
outsb
mov
dec
or
je
mov
pop
add
outsl
out
shrl
add
adc
or
and
int3
in
pop
lcall
jg
mov
push
add
jle
pop
sub
and
mov
sbb
movsb
sub
sbb
inc
inc
lret
or
add
pop
push
adc
jle
sti
sub
fcmovnu
lret
in
shll
cs
adc
xor
int3
lcall
push
cmp
cmp
or
dec
push
push
das
leave
lods
sbb
mov
dec
hlt
mov
xchg
xchg
mov
jg
pop
cmpsl
jmp
dec
push
lods
push
lcall
dec
pusha
lods
push
outsl
cld
sbb
sub
ljmp
cmp
push
pop
sub
dec
popf
and
mov
mov
imul
outsb
xchg
jmp
sbb
in
mov
mov
sub
push
or
jp
mov
adc
inc
dec
jnp
cmp
ljmp
sub
nop
popa
mov
rclb
hlt
scas
fsubr
xor
pusha
mov
cmp
cmpsl
ja
pop
aam
decb
adc
inc
hlt
mov
iret
pop
hlt
loopne
push
pushf
xor
mov
adc
shll
push
pop
in
stos
mov
mov
popa
cmp
and
addr16
int3
dec
jae
adc
bound
mov
sub
leave
addl
ja
or
xchg
fdivrl
xchg
push
mov
xchg
pop
cld
add
mov
dec
movsb
pushw
repz
push
add
add
dec
mov
xor
push
lods
push
lahf
push
cld
pop
cmp
pop
sbb
inc
pop
sub
and
mov
loop
pop
lock
jne
nop
sbb
mov
aam
daa
ja
imul
xchg
into
fildll
mov
ds
or
shrb
leave
lds
and
cmp
or
jne
mov
xor
in
aad
add
xchg
or
mov
pop
dec
addr16
je
aaa
in
mov
fnstcw
jb
scas
cmp
adc
idivb
arpl
mov
and
mov
scas
rcl
arpl
sbb
mov
fisttpll
inc
into
mov
inc
fisttps
jg
dec
or
ds
in
movsl
nop
iret
mov
mov
cmp
sbb
in
xor
fiaddl
lods
jnp
out
jecxz
sub
out
inc
clc
loopne
jb
mov
mov
xchg
sbb
fsubrs
sbb
jmp
aaa
xchg
imul
lret
xchg
and
sbb
cli
int3
mulb
js
mov
and
les
inc
mov
adc
mov
pop
dec
mov
xchg
je
sub
cmp
mov
or
xlat
xchg
sub
and
loope
out
ret
inc
mov
out
jns
add
inc
or
shlb
xchg
mov
lret
sbb
scas
imul
inc
js
lret
mov
pushf
jge
ror
or
xor
push
hlt
mov
mov
test
or
push
mov
jle
inc
mov
lret
movsb
mov
add
or
mov
cmp
movsb
fcmovnu
or
in
pop
inc
fdivrl
ret
mov
mov
ret
mov
ds
adc
cwtl
roll
xchg
xchg
loope
mov
xlat
sbb
xchg
add
popa
xor
inc
inc
pop
dec
inc
cli
xchg
inc
aas
fistl
lock
jbe
iret
les
int
and
mov
faddl
ja
push
sub
fisttpl
fs
xor
cmpsb
decb
mov
add
xor
mov
mov
icebp
fnstcw
adc
xor
iret
dec
pop
out
xorl
les
push
test
dec
cmp
out
pavgb
inc
xchg
sbb
pop
xchg
dec
fwait
cmp
in
pop
mov
shrb
mov
mov
js
fisttpl
sbb
cmovs
fsubrp
push
and
movsb
clc
push
les
dec
sub
pop
in
das
dec
enter
dec
or
xor
mov
cmp
arpl
scas
sbb
adcl
jnp
cli
cmp
lods
adc
cmp
imul
jge
jp
popa
push
lret
aad
xchg
popa
aaa
mov
pop
les
lcall
mov
icebp
jp
mov
arpl
xchg
sub
mov
sub
mov
sbb
jbe
movsl
je
sarb
add
or
movsl
fs
cmp
pop
jb
adc
ret
movsb
or
aas
repz
cwtl
in
jne
fstpt
inc
int
jmp
xchg
cmp
mov
insl
out
outsb
jl
insb
mov
cld
and
gs
and
jge
shl
add
push
cmp
ja
sub
je
pop
addb
loop
fs
testb
test
mov
jbe
out
mov
mov
faddl
stos
sub
setge
std
pop
dec
push
adc
jl
dec
stc
add
loop
xchg
inc
sub
mov
sub
js
push
loopne
push
subl
sbb
pop
pop
dec
dec
cs
add
dec
pop
aas
rcrl
adc
cmpl
mov
insb
push
xlat
inc
mov
push
lds
push
fisttpll
xchg
arpl
inc
inc
mov
outsb
adc
test
mov
outsb
call
in
mov
lahf
push
pop
pop
inc
test
lret
addr16
cmp
cwtl
jo
push
xchg
xchg
add
cmc
jb
das
pusha
add
or
dec
lahf
fsubl
aam
push
jl
fdivrl
push
xchg
cld
sbb
mov
mov
negb
dec
cmp
push
std
push
mov
fimull
insb
bswap
cltd
arpl
mov
arpl
lods
inc
cs
test
mov
lret
imulb
cld
push
sbb
cld
xchg
ret
pop
inc
out
lods
lods
inc
jecxz
push
mov
fs
mov
imul
xor
stos
aaa
mov
out
ss
mov
pushf
outsl
mov
jmp
xchg
or
fstl
insl
sahf
mov
push
cwtl
cmp
clc
icebp
mov
insl
mov
and
aad
jmp
rclb
add
xor
and
rolb
pop
int3
adc
xor
jecxz
subl
test
jbe
stc
dec
cwtl
jne
sarb
xchg
repz
inc
aad
push
mov
xchg
pushf
xchg
mov
adc
gs
ljmp
shr
scas
xor
mov
rorl
push
inc
xchg
inc
xchg
lret
jecxz
stc
or
pop
dec
mov
in
push
jl
lret
testl
popf
mov
adc
jbe
lret
cmp
xchg
je
cmp
dec
pop
pop
push
mov
rcr
out
jecxz
cld
imul
jns
add
fs
dec
daa
mov
ss
sbb
or
push
pop
aas
xor
push
lcall
push
cltd
es
mov
jge
je
ret
or
or
das
adc
hlt
ret
jno
mov
or
jae
outsb
jns
mov
xchg
stc
inc
mov
popf
xor
ret
scas
jmp
pop
xchg
sub
nop
mov
dec
and
jle
adc
sbb
nop
mov
ret
imul
sbbl
dec
adc
sbb
jae
add
shll
xchg
pop
std
lret
test
test
dec
sbb
cwtl
or
or
js
adc
mov
add
imul
sub
cmc
mov
inc
sub
in
ljmp
jmp
pop
push
lds
out
push
sbb
xchg
dec
push
mov
cmp
pop
or
leave
xchg
cmp
out
pop
nop
push
and
test
rcrl
js
lret
test
push
cmc
out
mov
or
push
movsb
shll
ljmp
adcb
iret
xchg
aaa
rorb
call
pushf
pop
push
fmul
int3
movsb
shll
aam
or
shlb
cmc
mov
sub
add
roll
in
pop
push
lock
mov
dec
sahf
push
add
push
call
das
in
jno
cmp
xor
roll
mov
mov
lock
mov
sbb
pop
and
mov
sub
cltd
in
inc
push
insb
cmp
in
lahf
xor
je
insl
xor
pop
repnz
data16
lcall
pop
cmp
xchg
push
imull
mov
xchg
jg
mov
mov
and
pop
or
push
sub
fdivl
inc
test
ds
clc
pop
icebp
stos
pop
or
movsl
cltd
xor
jb
mov
addr16
jns
psubusb
xor
mov
es
call
repz
imul
stos
mov
pushf
jl
xor
and
popf
pop
fsubrs
pop
repnz
popa
out
push
clc
or
xor
inc
lcall
hlt
and
cltd
xchg
movsb
adc
aaa
lea
add
arpl
push
cmovnp
push
outsb
mov
fs
push
ret
xor
lea
cmp
dec
xchg
repz
jle
cmp
rol
pushf
aam
xor
xchg
mulb
pop
xchg
xchg
push
and
jp
aam
cmpsb
test
scas
and
sbb
dec
pop
mov
daa
imul
lret
xchg
std
fbstp
add
and
push
push
lds
and
out
adc
cmc
push
repnz
dec
lahf
js
and
pushf
and
push
mov
jbe
lods
fisubrs
ret
push
test
hlt
cmpsb
in
fiaddl
push
pop
xchg
add
push
stos
xchg
aas
xchg
mov
and
nop
cs
cli
test
mov
or
xchg
or
sbb
push
jb
cmp
xor
xor
pop
outsl
fisttps
out
shll
es
jle
sbb
loop
das
jne
and
imul
push
fstl
mov
add
call
fs
int3
mov
or
xor
fdivs
jl
popa
lods
hlt
pop
fldcw
repz
loopne
out
pop
inc
sbb
cmp
lock
bound
inc
pop
sub
negb
xor
int
aaa
xchg
mov
jg
dec
pop
mov
sub
or
mov
mov
loope
icebp
je
inc
clc
or
iret
outsb
lret
orb
lods
ret
push
pusha
movsb
xchg
fnstsw
push
cmp
mov
test
push
jmp
fiaddl
add
divl
data16
push
and
mov
pop
mov
cmp
call
ret
sbb
and
inc
into
ficompl
scas
cmp
stos
xchg
sbb
mov
lods
xor
pop
sbb
gs
ret
dec
cmpsb
add
jae
cmp
lcall
adc
sbb
dec
es
push
imul
roll
jp
adc
cmp
stc
and
idivl
inc
iret
jmp
mov
xor
push
mov
jo
pop
imulb
add
subb
out
cltd
pop
add
lea
ja
outsl
js
ja
xchg
or
mov
and
sbbb
jbe
xorl
pop
xchg
pop
dec
test
mov
mov
movsb
ret
enter
jl
push
filds
dec
imul
ret
outsl
fcoms
inc
rcrb
mov
shrl
add
iret
jns
jno
outsl
jae
and
jmp
or
sub
xchg
pop
cmpsl
sbb
mov
mov
les
and
ss
mov
inc
orb
cmp
xchg
mov
mov
fcoml
ja
and
cs
mov
sbb
filds
add
loopne
mov
cmc
jb
clc
and
mov
test
push
mov
popf
daa
sahf
movsb
jecxz
xchg
mov
repz
mov
add
lds
mov
inc
jns
out
sbb
ficomps
imul
mov
inc
ret
xor
adc
pop
loop
outsb
pop
jg
mov
orb
sub
pusha
int3
lea
in
fbstp
inc
pop
jbe
clc
lahf
push
in
data16
inc
sbb
sahf
test
pop
xor
cmp
shl
push
mov
push
mov
lret
mov
cld
mov
or
sbb
test
hlt
or
dec
es
mov
es
inc
jae
xor
iret
arpl
or
ljmp
push
xor
push
adc
out
das
or
add
cs
cli
mov
xor
lahf
stc
push
dec
jg
cmp
push
sub
jp
into
push
mov
into
aad
or
aaa
repnz
jb
loope
xchg
or
xchg
cmp
mov
jae
outsb
xchg
mov
dec
sbb
xor
jbe
sbb
sbb
push
rcr
sub
xor
inc
add
add
test
out
mov
sbb
jbe
mov
stos
mov
pushf
or
push
insb
cltd
cmp
clc
popa
iret
hlt
and
push
pop
lret
sub
insl
test
lcall
ds
mov
scas
push
or
cmp
out
out
jne
aam
jns
fldcw
jl
cmp
mov
push
arpl
mov
mov
dec
jb
and
daa
sub
xchg
out
mov
stos
jne
je
inc
pop
dec
jg
xor
and
aas
lods
gs
mov
shlb
xchg
cmp
sbb
jne
scas
mov
dec
insb
push
ret
sbb
push
insb
or
adc
fld
clc
orl
jg
sbb
push
cmpb
fisttpl
adc
pop
popa
pop
xor
fistpll
stos
cmp
mov
repnz
pusha
arpl
out
fistl
jnp
inc
pop
aad
scas
test
sub
xlat
std
lods
mov
ss
sbb
lods
pop
push
loopne
push
hlt
cmc
cli
push
lret
fstps
cmp
xor
dec
xchg
push
jmp
ret
nop
mov
insb
inc
pop
stos
out
dec
loop
loopne
push
jmp
xchg
or
insl
push
loope
adc
cmpsb
stos
cmp
sbbl
stos
js
dec
fdivr
mov
out
dec
or
pushf
leave
testl
fidivs
mov
hlt
pop
aas
or
into
push
adc
shrl
push
pop
pop
push
add
push
push
lods
inc
cs
rorl
pop
jnp
xchg
mov
pop
cmpsb
hlt
testl
mov
inc
imul
fldl
or
pop
lret
sti
inc
cmp
shrb
xchg
xchg
cwtl
push
testl
lahf
xor
daa
mov
out
pop
cmc
sub
xchg
in
cwtl
into
jecxz
sbb
adc
test
push
mov
inc
xchg
or
add
dec
cltd
jle
ja
and
loop
xchg
faddl
mov
pop
sbbb
rcrl
xchg
jge
and
mov
fs
fnsave
mov
mov
clc
inc
pop
add
scas
scas
sub
dec
mov
repnz
iret
mov
fisubrl
addr16
cmp
xor
push
mov
cli
outsb
mov
inc
xor
lea
es
fimull
mov
or
aas
loop
stos
mov
daa
cs
pop
or
cmpb
cwtl
call
cs
fldcw
lret
insl
std
jp
xchg
leave
mov
xchg
xor
jbe
icebp
mov
and
mov
fcom
enter
jns
mov
jo
stc
mov
dec
pop
popa
aas
jle
stos
enter
pop
mov
xlat
mov
imul
cli
outsb
nop
imul
out
pop
out
or
movsl
in
test
imul
adc
in
cwtl
nop
mov
cltd
add
arpl
stos
data16
xchg
leave
mov
jmp
and
mov
insb
xlat
pop
fbstp
std
jae
flds
scas
jge
int
orl
mov
adc
mov
mov
sub
lret
les
in
jo
inc
mov
loopne
lods
sub
ds
jg
dec
sbb
and
xchg
push
rolb
lret
push
mov
loop
sbb
shlb
jnp
or
and
scas
cmpsl
add
cli
sti
push
xchg
pop
sbb
mov
call
fisttps
pop
cs
lds
scas
ljmp
imul
mov
lahf
std
adc
mov
sarb
pushf
cmp
pop
adc
es
mov
scas
out
sub
jo
xchg
aas
push
pushf
cmp
fwait
pop
or
add
xor
out
aad
punpcklwd
ss
sbb
inc
mov
test
add
int3
sbb
push
jns
sbb
rol
test
fisubrs
dec
arpl
sub
pop
inc
mov
adc
popa
mov
jb
or
sahf
subb
jbe
fisubrs
mov
or
pop
pusha
pop
dec
lret
fs
repnz
mov
je
jecxz
or
mov
jae
mov
adc
mov
jo
push
mov
jnp
ss
lretw
jne
mov
loop
mov
or
mov
adc
pusha
cmpsb
ljmp
mov
cmp
stc
scas
lret
pop
fimull
cmp
mov
sbb
mov
pop
xor
ss
or
fdivrl
enter
sub
popf
std
aam
adc
xor
sbb
rcrl
adc
and
xor
dec
mov
cmpsl
dec
mov
xchg
movsl
inc
adc
push
test
out
push
hlt
mov
les
push
mov
and
pop
dec
push
or
popa
les
adc
push
adc
jo
sbb
pusha
jp
clc
sbb
mov
dec
pop
sbb
sbb
pop
pop
rclb
push
out
dec
mov
xchg
adc
das
dec
lret
fadd
imul
test
ds
int3
scas
cmp
fptan
mov
gs
pop
decl
test
pop
xchg
jecxz
addr16
xlat
mov
push
call
popa
jae
call
dec
jle
jns
cmc
jl
in
scas
and
stos
dec
inc
lods
inc
lock
xchg
mov
cld
je
jbe
jmp
in
or
or
jb
mov
std
add
sub
rep
je
cmc
incl
aaa
ss
je
sahf
test
ja
add
xchg
add
push
pop
mov
mov
data16
pushf
or
mov
add
adc
pcmpgtw
push
decb
int
mov
sbb
add
push
rol
inc
sarb
dec
push
mov
and
out
cli
incb
iret
or
loop
dec
jmp
gs
sub
insl
out
jmp
xchg
pop
sti
test
stos
into
mov
in
xor
cwtl
movsb
jns
icebp
fstl
mov
stc
cmp
lahf
mov
dec
pop
test
bound
or
iret
mov
mov
pop
xchg
mov
mov
aas
arpl
push
loope
in
add
loope
push
in
daa
cmp
dec
jp
popa
movb
clc
aaa
lret
mov
push
sub
pop
pop
jns
sbb
or
adc
jns
and
sbb
jg
stos
sbb
mulb
xor
push
mov
test
test
mov
xchg
movsl
cmpsb
pop
push
ret
inc
jge
aam
pop
mov
pushf
sbb
sbb
dec
stos
and
push
stc
adc
imul
and
inc
addr16
lcall
clc
stos
or
add
or
loop
inc
test
sahf
pusha
gs
test
dec
sub
enter
sub
and
dec
leave
mov
xchg
pop
arpl
into
test
add
gs
outsl
daa
mov
dec
js
dec
clc
addr16
arpl
mov
mov
loopne
cmc
dec
fistpl
loope
stc
mov
sbb
inc
movsl
add
cmp
mov
pop
insl
inc
fstps
mov
rorb
cmp
mov
adcb
pop
fs
push
subb
add
pop
xor
das
xor
cmp
cmp
jns
inc
xchg
jecxz
push
lea
and
push
lret
int
and
cmp
daa
push
ljmp
test
sbbl
and
mov
or
fdivl
nop
sahf
icebp
cltd
test
shl
dec
aaa
iret
fmul
jae
int3
lods
std
fwait
stos
jno
rorl
jecxz
pop
pop
out
loope
sub
or
pop
inc
insl
jmp
in
cli
fisubrl
addr16
stos
cltd
icebp
push
pop
notl
cwtl
sbb
jnp
xchg
decb
xor
and
stos
popa
cli
xor
xchg
loop
pop
jecxz
stos
pop
dec
xchg
cli
fstpl
pop
fwait
push
sahf
fcoms
arpl
mov
and
sarl
xchg
cs
mov
mov
push
repnz
mov
loope
into
add
out
jnp
inc
movsb
repz
lds
in
sub
repnz
jp
sbb
jae
push
ficoms
lcall
icebp
hlt
xchg
push
add
lods
jae
test
mov
movsb
daa
fprem
xor
and
dec
xchg
cmp
sub
mov
adc
js
xor
xor
jae
xlat
loop
pop
sub
shr
std
sbb
imul
hlt
dec
inc
push
pop
jne
dec
push
divb
mov
cmpsl
enter
dec
pop
push
fsubs
mov
iret
scas
int3
in
inc
push
iret
dec
and
pusha
jnp
sti
sub
test
and
cli
pop
sti
sbb
aaa
lds
sahf
inc
push
push
iret
je
xor
daa
ja
orb
mov
cmc
das
mov
dec
nop
pop
sub
xor
add
pop
stos
mov
mov
mov
test
dec
movsl
cmpsb
lret
int3
fstl
subb
cltd
mov
pushf
int
mov
and
fbstp
push
pop
sub
mov
mov
pushf
mov
mov
push
loope
leave
fstpl
xlat
pop
testb
int3
xchg
xchg
and
fists
jg
sub
dec
sbb
pushf
lock
es
fmulp
xchg
pop
xorl
jmp
xchg
xchg
iret
les
sub
or
push
or
mov
arpl
xchg
and
mov
sbb
pop
xchg
lcall
xor
push
and
pop
cmp
outsl
xchg
scas
mov
clc
pop
addl
jge
testl
xor
pop
cltd
fdivrs
aam
adc
in
xchg
or
mov
cli
test
mov
out
adc
leave
dec
pop
dec
stos
push
inc
xchg
push
scas
rcrl
notb
push
jle
call
and
in
setno
pop
pop
sbb
pop
ss
ds
aas
sub
xchg
adc
ljmp
jl
cmp
xchg
addr16
sub
fisttpl
arpl
pop
push
leave
cmp
arpl
clc
cmpsl
xchg
xor
insl
jle
imul
xor
lea
aad
test
add
nop
popl
sub
fsubrl
test
ret
xor
mov
mov
add
xlat
adc
adc
pop
push
dec
fwait
notl
jne
out
leave
in
cwtl
loop
mov
xor
test
pop
and
clc
pop
fidivrs
inc
bound
movsl
jge
fadd
mov
loope
ja
mov
pushf
fdivs
shlb
mov
out
pop
fwait
jecxz
inc
dec
scas
add
pop
out
cmpsb
pusha
mov
and
pop
push
lds
cmp
stos
mov
jb
ret
movsb
jmp
fimull
adc
sub
pop
mov
mov
ja
jl
sarl
cmp
jl
mov
xor
cmpsl
inc
and
pop
or
or
and
lock
lock
sbb
clc
sub
or
testb
sub
fcoml
insl
stos
sub
insb
ret
lahf
ja
mov
gs
add
pop
add
test
or
out
iret
add
cs
sahf
mov
loop
mov
in
dec
add
insl
loope
rclb
inc
dec
or
test
xor
out
add
in
add
xchg
xchg
push
movsb
in
cmpsb
icebp
inc
jge
iret
add
add
and
adc
and
adc
clc
adc
cli
popf
cwtl
and
adc
sub
fdivs
loopne
cs
add
bound
cmp
dec
inc
mov
jns
sbb
and
mov
mov
xor
pop
sub
mov
faddp
in
or
add
hlt
roll
mov
pop
inc
dec
adc
insb
stc
cmp
ljmp
mov
and
fidivl
add
out
cs
addr16
imul
xchg
pop
adc
in
bound
sub
cmp
push
pop
ret
daa
pop
sti
loope
call
mov
adc
pushf
jecxz
lret
pop
and
mov
sub
pop
mov
mov
imul
les
das
repz
push
out
mov
mov
stc
dec
lahf
add
xor
out
inc
pop
cmpsb
arpl
popa
cmc
jno
and
sub
mov
xchg
movsl
push
jno
in
dec
cmp
fisubrl
ficomps
data16
lret
dec
cmpsb
in
or
lret
lock
mov
add
cmp
and
popf
sarb
test
int3
cmp
sbb
in
inc
pop
adc
or
adc
sbb
and
aas
and
inc
stos
xchg
adc
inc
ss
sbb
push
xor
fwait
jmp
push
or
lret
jecxz
popw
sbbl
and
inc
dec
ljmp
out
cmp
lods
pop
movsl
jmp
xor
mov
mov
jne
pop
cltd
gs
ss
jmp
popf
pop
loop
jnp
lock
mov
aaa
out
xlat
dec
cmp
lret
test
push
and
in
stc
imul
stc
push
xlat
outsl
fisttpll
jae
rclb
imul
fwait
add
add
push
call
stc
inc
rclb
filds
inc
loop
aad
and
insb
sbb
in
xchg
jb
and
xchg
jecxz
push
jmp
sbb
or
cmpsl
out
js
andl
out
jne
call
shrb
pusha
sub
aad
jbe
mov
sbb
mov
fmuls
mov
test
jmp
into
outsl
fcomip
mov
inc
sub
imul
lods
mov
int
xchg
pop
insl
mov
sbb
call
rcr
and
mov
addr16
mov
fisttpll
add
faddl
pushf
sub
jae
scas
sbb
mov
sub
push
repnz
mov
dec
pop
inc
rorb
enter
pop
imul
aad
into
dec
cmc
xchg
test
jl
leave
psubd
sbb
xor
fldenv
test
mov
jmp
int
dec
xor
sub
sbb
js
push
mov
imul
mov
lret
das
and
rorl
movsl
ja
lahf
xor
push
in
lds
fwait
repz
sti
enter
or
adc
add
jmp
repnz
mov
int3
xchg
sbb
stos
daa
xorb
dec
sub
pop
jecxz
int3
jno
jb
jg
mov
jno
test
xchg
mov
pop
mov
data16
sub
loope
int3
pop
je
in
or
push
mov
inc
sbb
pop
vmovntpd
push
in
lahf
fcoms
icebp
sbb
pop
cmc
mov
adc
xchg
fwait
and
inc
xorb
js
lea
gs
out
aas
call
scas
int
loopne
xchg
inc
dec
mov
mov
ds
les
cld
xor
sbb
push
jge
push
and
test
in
xchg
sub
negb
inc
pop
jl
push
and
stos
xchg
fwait
js
cld
jbe
inc
repz
or
adc
lret
adc
dec
cmp
into
xor
jb
xchg
cli
das
mov
sub
or
sbbb
push
bound
mov
cmp
test
test
and
out
dec
sbb
aad
mov
sub
ljmp
imul
xor
and
loope
mov
mov
insb
cmc
pusha
jbe
sub
adc
negb
faddl
das
mov
push
mov
mov
sub
shl
xor
test
inc
sarl
pop
mov
jo
flds
jo
les
cmpsl
dec
sti
and
sub
jmp
dec
mov
daa
lds
shrl
sbb
adc
icebp
sbb
jmp
mov
lods
sbb
in
cmp
js
mov
jg
aaa
shl
and
ja
ja
fisubs
and
stos
out
sbb
loopne
mov
push
std
test
lds
ret
mov
dec
pop
ja
lcall
sbb
push
dec
or
push
into
xchg
std
push
xchg
dec
in
cmp
mov
cs
cwtl
icebp
insb
addr16
xchg
dec
and
outsb
sar
iret
mov
mov
mov
mov
sbb
les
inc
jns
je
test
fistpl
pop
loope
das
jo
xchg
pop
mov
dec
jle
push
adc
add
sub
xor
inc
and
inc
inc
je
mov
mov
ja
mov
fsubrl
mov
add
mov
inc
add
adc
inc
daa
pop
push
mov
leave
js
add
test
inc
sub
out
pop
adc
sub
js
or
aam
push
aad
fisubrs
sbb
sub
scas
adc
cmpb
xor
mov
jb
adc
adc
lret
jb
push
dec
pop
jne
out
rclb
or
int3
aaa
lods
push
xor
daa
arpl
and
cmp
insl
pop
dec
mov
repnz
push
cld
rcrl
jae
mov
sti
shl
dec
pop
or
nop
ret
out
adc
popa
shrl
mov
xorb
dec
arpl
pop
pop
outsb
test
js
adc
gs
mov
mov
cs
cmp
daa
push
mov
in
push
push
jge
push
in
add
push
adc
cs
mov
icebp
in
in
add
xchg
aam
loop
int
mull
mov
int
rcr
or
xor
rclb
mov
fs
cmp
pop
mov
push
testb
xchg
ret
ds
ret
mov
gs
and
and
jae
mov
mov
sub
insb
stos
gs
or
jge
xchg
scas
in
sarl
push
nop
xor
insb
pop
push
rolb
push
xchg
xchg
sub
jmp
xchg
add
adc
push
ds
adc
es
lret
pop
clc
jmp
xchg
pop
or
mov
xorb
sub
jne
idivl
hlt
and
mov
add
cmpsl
pop
cmp
xchg
push
cwtl
or
cli
or
shll
in
push
lret
mov
push
imul
sub
in
and
xchg
pop
sahf
loop
add
sti
les
mov
bound
ss
mov
rorl
sbb
push
movsl
cmp
inc
rorb
push
inc
mov
outsb
and
mov
sarb
notb
mov
rolb
inc
or
xlat
push
fsubrs
stos
jp
pop
mov
push
ret
popf
das
sti
mov
imul
push
push
jbe
rclb
sub
mov
jns
cltd
jp
and
xor
mov
shrl
push
push
in
cmp
loop
or
in
rcll
pop
lods
imul
fiaddl
or
jp
cmp
in
adc
and
mov
push
sbb
pop
in
imul
sub
dec
mov
adc
ds
orl
shll
cmp
xchg
jbe
mov
adc
incb
sbb
cmpsl
enter
or
cmpsb
lock
mov
push
mov
mov
add
xor
ret
inc
jg
out
push
sbb
lret
rclb
or
adc
fdivrs
outsb
lods
lret
test
or
mov
sbb
push
into
ja
sbb
and
aas
mov
aaa
pop
outsl
and
jns
mov
and
xor
pop
lret
stos
mov
dec
xlat
and
xchg
jmp
repnz
mov
inc
insl
lds
outsb
arpl
or
inc
xlat
pop
sbb
xchg
pop
outsl
shr
cmp
add
or
aad
in
xchg
sub
push
scas
lds
arpl
andl
sahf
scas
jl
ret
aaa
movsb
lahf
icebp
andl
inc
icebp
ja
mov
mov
pop
xlat
push
add
negl
push
jb
cmpl
and
std
repnz
xchg
mov
gs
or
jbe
inc
add
ret
in
hlt
roll
out
pusha
fdivl
rcll
sbb
imul
xchg
xor
jl
inc
add
push
sbb
lea
dec
test
jecxz
and
fsub
int3
fidivrl
mov
mov
adc
rcl
sub
mov
test
sub
dec
sbb
frstor
mov
arpl
icebp
sub
cmp
mov
hlt
in
inc
lock
xchg
movsl
test
dec
int
test
mov
xor
test
std
inc
mov
pop
int3
fdivrs
sti
xchg
ja
dec
sar
aas
lock
shrb
and
xlat
push
xchg
jno
stc
insb
xchg
enter
cmp
cltd
jbe
jle
jbe
xchg
in
dec
push
gs
enter
orb
push
into
jle
nop
sub
jp
out
mov
inc
aaa
mov
mov
xor
sbb
aad
pusha
jmp
push
outsl
push
xlat
push
xor
xor
xor
out
dec
jo
pushf
cmp
repz
jne
cmp
sub
out
jle
mov
in
xor
repz
nop
xchg
mov
pop
jae
movsb
stos
call
scas
ljmp
shl
shrl
imul
repnz
xchg
push
lea
aas
jl
ficomps
xchg
pop
outsb
loope
or
rcr
jl
mov
imul
fdivrl
int3
ss
dec
repnz
pop
or
clc
add
jb
fcomps
es
jae
jns
movsb
dec
aam
mov
leave
shll
icebp
stc
dec
jae
cmp
loop
push
dec
icebp
xchg
mov
inc
dec
xchg
gs
pop
mov
fwait
test
xchg
sbb
or
inc
insb
sbb
jmp
mov
flds
jo
pop
loopne
loopne
sti
pop
lcall
jbe
in
das
fisubrs
cltd
pushf
mov
jno
in
xlat
fildll
lods
loope
mov
dec
outsl
loop
mov
xchg
sbb
lret
repnz
jb
jge
jp
push
imul
xchg
jecxz
xchg
je
fadds
test
push
out
aas
push
sub
andl
shll
jmp
popa
lock
sub
iret
push
sbb
addr16
mov
fwait
jno
ss
cmpsl
sub
out
je
jle
fcmovbe
outsb
jl
jecxz
xchg
insb
inc
cmp
push
stc
enter
addr16
ds
stos
shlb
inc
cmp
mov
lret
mov
jle
out
pushf
ja
cmp
arpl
aas
icebp
cmp
sbb
pop
xchg
jb
inc
fnstcw
es
bound
jp
push
mull
or
xchg
loop
int3
push
push
xchg
out
daa
mov
idivl
js
adc
fdivs
xchg
lret
scas
pusha
and
repnz
mov
pushf
fcmovne
idivl
fnstcw
dec
cmp
pop
fiaddl
dec
dec
mov
lock
mov
jno
shl
xor
jns
inc
rorb
cs
movsb
push
push
or
insb
mov
xchg
sub
sbb
movsl
mov
movhps
gs
int
xchg
addr16
sarb
test
fbld
frstor
orl
flds
loop
add
outsb
test
les
scas
push
xor
push
jno
out
jnp
inc
inc
movsb
adc
fmuls
add
mov
and
dec
push
ljmp
jmp
lods
mov
cmpsb
loopne
adc
push
mov
mov
decb
cs
cltd
add
std
mov
scas
mov
repnz
xchg
mov
push
jge
inc
mov
imul
push
lahf
dec
ret
or
cmp
stos
jb
sbb
jmp
fsincos
jge
stos
pop
aas
inc
packssdw
sbb
sahf
mov
fdivr
es
mov
nop
sub
mov
icebp
sarl
enter
fistpl
insl
sub
xor
scas
mov
addb
xor
out
inc
push
fsubrl
mov
lret
adc
into
scas
dec
sbb
jge
popf
into
repz
pop
fstpt
popa
shl
push
or
add
fimull
dec
or
rep
repz
xor
out
dec
or
shlb
or
and
mov
pop
push
fwait
jbe
mov
sahf
inc
push
stc
xchg
mov
aas
add
cmc
in
cld
sbb
dec
add
cmpb
sbb
addr16
clc
adc
int3
or
xchg
nop
int
cmpl
xchg
ror
ss
xlat
fwait
and
cmp
enter
jne
pop
add
test
test
or
and
mov
pop
sbb
mov
xchg
xchg
sbbb
push
std
ja
js
scas
or
dec
sar
pop
xchg
xchg
repnz
mov
sti
int3
stos
addl
dec
mov
xchg
or
into
pop
sub
icebp
add
mov
lahf
out
jne
aad
popa
mov
and
mov
push
sub
sbb
mov
jp
jle
dec
mov
arpl
xor
or
dec
pusha
lahf
adc
sahf
rorb
test
pop
cs
scas
pusha
mov
jle
add
lods
and
loopne
pop
pop
inc
add
pop
std
mov
mull
orl
inc
orl
dec
xor
insb
sahf
cmc
scas
sbb
inc
pop
shrb
or
push
into
xadd
push
insb
into
mov
jle
push
cs
push
mov
cmp
stc
mov
push
lea
add
cli
or
mov
int
repz
inc
fldt
pop
sub
popf
ja
xchg
insb
sahf
jl
loop
scas
std
xchg
out
pop
sub
movsb
idivb
std
push
repz
adc
dec
addb
bound
mov
mov
mov
sbb
mov
icebp
fucomip
fdivl
jnp
mov
lret
push
or
fldenv
fsubr
sub
jb
add
push
jne
aam
sti
add
iret
mov
xor
pusha
lahf
jp
cmpsl
push
jb
dec
pop
fldenv
test
add
gs
mov
jno
sub
test
mov
xor
push
loopne
push
push
rcrb
add
mov
pop
out
ljmp
xchg
mov
nopl
and
pop
int3
or
popl
and
int
aad
mov
or
inc
push
mov
ljmp
js
in
mov
lret
xchg
insl
ja
add
mov
and
je
ret
cmp
jbe
scas
sub
adc
vpsllw
arpl
in
movsb
inc
add
push
call
pop
divl
push
dec
jbe
xchg
cld
dec
les
inc
loop
pop
jmp
loope
xchg
orl
inc
and
mov
mov
mov
jge
stos
push
pusha
adc
fldl
fildll
lock
test
cmc
sarl
and
mov
mov
jmp
cmpsl
pop
cmp
mov
mov
test
dec
jno
jecxz
loopne
out
cmp
pop
jns
cli
fisubl
dec
dec
mov
test
lock
adc
popa
dec
fisttpll
add
push
shlb
push
or
pop
push
insb
xchg
push
movsl
lods
jb
sub
fmul
or
pop
movsl
inc
insl
cli
imul
cmp
or
ret
testl
into
lods
cli
or
les
mov
push
mov
cmp
test
popa
mov
xchg
pop
or
and
push
ficoms
cmp
add
adc
fisubs
shr
stc
cmp
mov
adc
push
jbe
sub
push
idivb
jmp
inc
sbb
sub
test
lock
test
inc
xor
xor
fiaddl
push
clc
loope
aad
not
in
xor
and
push
scas
lcall
jl
or
adc
test
xor
or
xor
cmpsb
inc
aam
sub
ret
cmpsl
pushf
mov
pushf
sbb
cltd
xor
mov
add
pop
and
popa
xchg
dec
pop
sbb
hlt
jecxz
mov
lret
dec
nop
popl
cmp
in
cmp
sbb
leave
xchg
pusha
shlb
jne
sub
push
sub
jne
scas
and
pop
jns
and
pusha
cli
inc
pop
lods
sbb
cmpsl
cmp
jnp
cmpsb
xchg
inc
push
jl
adc
lahf
jbe
mov
xchg
roll
cmp
addl
aaa
jnp
sahf
iret
ret
or
xchg
pop
cmc
pop
mov
pop
cmp
mov
jno
add
pop
in
subl
mov
lock
inc
sub
inc
in
cmc
stos
iret
ss
int
aaa
popf
lcall
addl
stos
dec
movsb
push
mov
repnz
enter
lcall
sti
lea
push
mov
and
xor
scas
pop
ffree
es
add
scas
lock
mov
std
aas
sbb
xchg
lahf
out
daa
repnz
aam
add
mov
cmp
push
jo
test
inc
adcl
xchg
fcmovu
xchg
sub
mov
in
ds
int
jnp
mov
jnp
xor
adc
shlb
push
out
push
mov
xchg
mov
sub
cli
fisttpl
mov
inc
sub
xchg
pusha
mov
cld
cmc
neg
fwait
adc
jmp
das
fbstp
and
pop
cmp
pop
call
ret
pop
popl
xchg
adc
test
test
sub
imul
fsts
mov
cmp
pop
xlat
mov
or
add
push
pop
inc
sbb
xchg
in
mov
mov
ss
adc
dec
push
and
leave
cwtl
or
pop
inc
rcll
cmp
adc
mov
pushf
mov
pop
int
out
sbb
mov
jno
roll
dec
daa
scas
xchg
or
stc
repz
lret
push
ret
loope
push
jne
cmp
movsl
lods
pop
push
cmp
sbb
daa
rcrb
jecxz
lahf
in
pop
insl
sub
push
mov
dec
push
dec
ret
insb
fsubrl
sub
jg
xor
enter
sub
push
pushf
out
adc
cli
or
fists
in
xchg
inc
and
push
inc
loope
and
sub
xor
jecxz
enter
dec
sbb
push
stos
shl
in
jl
mov
enter
aam
sub
adc
cld
cli
xchg
pop
jbe
add
cmp
cmp
in
mov
cli
cwtl
je
loop
xchg
repnz
outsb
repz
addl
insb
out
pop
jp
xor
mov
leave
out
xor
xchg
sti
js
sub
in
imul
dec
mov
xchg
inc
or
test
movsb
mov
push
data16
loopne
xchg
dec
push
js
xchg
pop
rcr
inc
out
mov
add
cmp
push
pop
adc
pop
inc
sub
sbb
loopne
shrb
and
cmpsl
jbe
mov
push
insb
ja
dec
cmpsb
test
in
fildl
js
mov
ret
enter
pop
imul
xor
daa
fwait
add
test
jmp
dec
cli
dec
jmp
pop
dec
mov
dec
jae
cmp
and
sub
pushf
dec
fs
lods
jo
cld
mov
fs
dec
cltd
out
cli
sub
mov
nop
cmpsl
mov
dec
mov
fstpl
sub
fwait
or
lock
xchg
cwtl
sti
jl
pushf
out
movsl
xor
cmp
into
sbbb
inc
outsb
cmc
push
sbb
lret
repnz
fwait
cwtl
xor
xor
push
mov
inc
insb
lock
sbb
test
ljmp
push
in
add
sbb
stos
xchg
mov
xor
cmp
adc
stc
dec
jbe
out
jg
mov
subl
stos
xchg
sbb
nop
jnp
mov
imul
stos
loopne
jg
inc
mov
jle
xorb
dec
sahf
sti
cs
push
sub
mov
out
js
neg
scas
dec
inc
xchg
push
daa
mov
pand
dec
fwait
cmovp
fcoml
movsl
jle
jmp
std
shrb
ret
hlt
jns
sbb
fistl
fildl
enter
xor
and
dec
test
loopne
push
sahf
aas
jl
pop
pop
dec
push
sub
jge
adc
jecxz
push
aam
addl
adc
cltd
sbb
push
daa
rcr
jmp
and
dec
orb
push
fisubrs
shll
pop
sub
sar
mov
leave
fidivrl
mov
cltd
push
test
fstp
cmpsl
fnstcw
push
dec
mov
push
xchg
ret
dec
or
sti
push
pop
loop
and
jp
xchg
ds
addr16
ljmp
pushf
in
test
add
sbb
xchg
pop
cmp
push
fsubrl
cmpsl
mov
xchg
adc
dec
xchg
sbb
aam
inc
subb
loope
ficoml
out
pop
xlat
mov
push
mov
sbb
or
rcrl
pop
dec
cld
sub
shrb
jle
popa
aas
add
aad
int
pop
sub
adc
jge
jns
inc
js
clc
push
faddp
hlt
lret
movsb
cli
push
push
das
stos
cmpsb
pop
inc
movsl
fistps
cmpsb
dec
or
or
push
outsb
mov
ljmp
arpl
or
setne
jl
and
cmpsb
mov
push
das
rcl
mov
hlt
dec
jp
outsw
pushf
call
push
in
pop
dec
inc
cld
jbe
sbb
popf
fwait
rcrb
mov
add
xor
addr16
insl
int
mov
iret
xchg
mulb
sbb
cmpsl
dec
stc
xor
mov
pop
push
mov
iret
mov
call
leave
dec
mov
cmpsl
icebp
ja
add
arpl
call
push
in
xchg
add
adc
bound
jecxz
xor
mov
in
push
or
jo
xchg
mov
hlt
pop
sbb
add
and
fwait
into
cmc
sub
inc
roll
dec
jge
mov
shl
shrl
mov
decb
ss
fs
dec
dec
das
xor
mov
pusha
in
enter
pop
loopne
xchg
mov
adc
insl
loopne
loopne
mov
movsb
lods
dec
lds
fisttps
cwtl
pop
jge
mov
loopne
js
sbb
mov
jp
aad
sub
in
add
ror
movsl
adc
pop
ss
sub
mov
adc
mov
sub
aad
sbb
aas
bound
testb
jo
pop
out
mov
jle
fdivl
cmp
add
or
stos
xchg
lcall
idiv
lds
dec
mov
sub
xchg
sub
cmpsl
dec
sub
repnz
test
and
adc
nop
or
sbb
dec
mov
ret
mov
clc
or
decb
push
xlat
or
les
in
movsb
inc
jle
mov
xor
or
mov
or
xor
lds
dec
xor
mov
int
lock
sub
sahf
cltd
pop
dec
outsl
icebp
out
outsl
add
sub
mov
lods
adc
mov
sub
cmp
ss
lods
mov
xlat
sub
shll
or
sub
lods
push
xchg
popf
xchg
ds
clc
int3
sub
negb
dec
xor
jns
loopne
and
jmp
xchg
push
stos
ss
mov
push
int3
add
dec
imul
dec
fildll
test
sub
xchg
cs
call
cmp
andb
sub
icebp
sbb
and
sbb
int3
fcomp
stos
add
inc
mov
jg
cmp
mov
jecxz
mov
xor
addb
sti
mov
mov
repz
xchg
popa
cmp
xlat
push
pop
pop
in
scas
outsl
int3
test
mov
dec
bound
ret
stos
rcrb
out
outsb
dec
inc
cmp
xchg
pop
movsb
lock
imul
and
ret
add
dec
pop
push
mov
jb,pn
sub
xchg
pop
leave
lret
loopne
mov
fwait
sti
jp
xor
stos
mov
xor
adc
xchg
movsl
add
xchg
std
test
popa
mov
jo
add
and
movsl
movsl
out
test
inc
aam
fwait
pop
and
xor
mov
les
leave
cmp
jns
lods
pop
xchg
add
mov
adc
stos
ror
mov
inc
push
push
cmp
psubb
jmp
roll
fimull
loop
inc
inc
pushf
mov
add
pop
aaa
jns
dec
pushf
aam
mov
adc
mov
test
dec
cmpsb
or
out
or
sbb
jae
bound
jge
data16
mov
sub
mov
call
add
loopne
ljmp
repz
jae
xchg
shlb
sti
ds
cmp
dec
out
or
jne
repz
je
or
sahf
sbb
leave
xchg
shlb
aad
aas
fwait
mov
inc
popf
test
push
xchg
or
nop
arpl
sti
jb
xor
mov
xorl
imul
jns
or
xchg
notb
out
cli
outsb
or
rol
sub
mov
popa
cmp
bound
sbb
jo
inc
jge
cld
shrl
popa
xchg
push
mov
adc
outsb
fdiv
test
dec
rcrl
xchg
or
movl
mov
hlt
push
cmc
pop
std
rcrb
sub
les
cmp
or
and
lahf
mov
adc
fcoms
jge
xor
sub
push
inc
mov
cli
int
stos
jle
sti
jle
lret
or
sub
xchg
mov
pop
int
add
mov
test
mov
int3
repz
mov
insl
aad
lret
insb
stos
jecxz
cli
outsb
fdivrs
jno
outsb
mov
add
sbb
test
pushf
cs
lahf
mov
in
popf
xchg
pop
xchg
sub
adc
imul
push
sbb
insb
xchg
movsb
add
pop
cmc
movsb
sub
movsl
mov
outsl
clc
sub
daa
mov
jae
ret
lcall
or
jne
ljmp
js
add
add
iret
fiaddl
or
mov
shll
push
and
jp
aas
push
pusha
adc
ret
negb
add
js
and
movsl
fwait
xchg
out
jmp
cmp
outsl
mov
je
sub
mov
icebp
loop
mov
jno
xchg
fistl
out
xchg
mov
dec
ja
hlt
nop
jae
in
mov
aas
scas
int3
or
mov
or
adc
inc
add
orl
stc
or
pushf
adcl
push
adc
std
mov
mov
lods
pop
mov
nop
jmp
jne
and
lahf
mov
ret
loop
ja
mov
data16
sbb
or
jmp
test
mov
mov
pop
cmc
mov
clc
std
xchg
jne
loop
ds
test
pushf
mov
xchg
mov
loopne,pt
lcall
es
cmpsb
lods
mov
imul
cli
mov
aad
push
test
sub
xchg
loope
xchg
inc
repnz
jecxz
data16
loope
loopne
mov
lret
test
cmp
arpl
or
inc
popa
ss
js
movsb
sbb
sbb
push
sahf
ss
jmp
aaa
inc
test
sbb
jo
fwait
xchg
mov
pop
insb
cli
iret
xchg
push
popf
pusha
dec
xchg
dec
or
imul
rorb
mov
aad
ss
gs
mov
add
mov
xchg
push
jnp
and
pop
xchg
in
pop
icebp
pop
pop
jo
aas
adc
sahf
clc
jns
in
jne
adc
in
mov
lcall
out
daa
sbb
mov
jp
push
dec
cmp
sbb
mov
mov
push
or
cltd
sbb
jecxz
xchg
xchg
inc
jmp
add
shl
jl
pop
fnstcw
jae
insb
cwtl
add
inc
cmp
loope
sub
or
xor
push
inc
jmp
adcl
add
mov
push
dec
jbe
lret
jno
push
scas
jnp
jp
pop
dec
ljmp
cmc
leave
lahf
nop
sbb
sbb
cmp
in
notb
sbb
sub
jns
pop
xchg
mov
adc
adc
fs
push
jns
lret
xor
shll
xor
xor
movb
or
mov
mov
xchg
fsub
jle
adc
and
sbb
mov
in
loope
nop
outsl
gs
rcll
cmp
aad
sub
lds
pop
lds
stos
jl
and
adcb
enter
ljmp
insb
in
out
adc
fwait
or
cmp
inc
test
fadds
std
popa
sbb
cmp
mov
push
jecxz
arpl
push
jno
cwtl
int3
lock
fcmovnu
je
mov
mov
loopne
sbb
out
adc
mov
test
push
fistps
xchg
push
pop
in
movsb
adc
sub
push
dec
adc
add
std
subl
fisttps
sub
or
xor
pop
pop
insl
xchg
andb
shrl
aad
ja
and
pop
insl
xor
test
add
lods
iret
ficompl
leave
icebp
mov
jecxz
inc
popa
dec
lds
nop
mov
decb
cmpsb
mov
imul
pop
adc
andb
push
pop
cli
repz
cwtl
pop
arpl
movsb
jmp
clc
xor
mov
mov
jge
lret
in
imulb
aas
sbb
xchg
mov
lea
fcoml
ja
add
cmp
mov
push
hlt
bound
in
cmp
jb
out
insl
aam
add
hlt
imul
pusha
mov
push
adc
test
jg
lock
movsl
dec
or
sub
call
mov
cwtl
adc
in
nop
and
push
push
xchg
dec
outsl
enter
aam
or
adc
shrb
sub
repz
mov
cmp
jl
arpl
into
adc
ret
xchg
mov
neg
cs
mov
cmp
mov
and
or
das
sub
divb
sbb
out
scas
or
stos
cmp
xor
pusha
jnp
ret
xchg
nop
xor
data16
int
in
xchg
xchg
pusha
rol
rcr
jp
inc
das
mov
and
subb
pop
xlat
jp
push
es
mov
out
xchg
imul
es
jg
js
xchg
leave
cmp
jmp
aas
fdivrl
rcrl
inc
push
int
pusha
or
repz
cmp
xchg
repz
or
jg
push
push
pop
sub
push
ja
popa
in
mov
mov
or
addr16
loope
jnp
fsubl
rolb
push
mov
ss
xchg
test
movsl
sbb
mov
sarl
mov
cwtl
fcomip
mov
clc
push
mov
jne
xor
lds
jae
inc
cli
outsb
pop
mov
lock
test
imul
imul
sbb
dec
clc
lcall
mov
or
imul
mov
loopne
jmp
inc
push
mov
mov
jne
mov
or
fnsave
loopne
cmp
fcomip
mov
cmp
or
lods
or
jecxz
test
fidivl
mov
pusha
bound
and
shr
loop
pop
mov
insb
in
push
adc
lret
mov
or
outsl
dec
dec
iret
outsb
cmp
pop
cltd
push
xchg
dec
jb
aas
popf
scas
mov
adc
dec
mov
add
lods
xor
cmp
or
sti
je
mov
in
xchg
lret
imul
ret
out
cmp
dec
adc
imul
test
cwtl
cmp
push
or
push
inc
stc
mov
gs
add
sub
fiaddl
outsl
xorps
dec
xchg
mov
jg
sub
mov
hlt
daa
pop
sbb
enter
xor
mov
cmp
stos
test
add
outsb
pop
insb
push
or
inc
loope
int3
lahf
xchg
cmp
push
in
scas
mov
dec
xlat
sbb
sbb
aad
sahf
cld
jl
cli
xchg
jns
and
das
pop
xor
mov
shll
fidivrl
sbb
pop
stos
add
mov
jo
xor
and
push
cmpb
cwtl
pop
sbb
or
jle
aad
int
pop
fcmovnb
sub
scas
xlat
add
add
dec
mov
sub
jnp
cmp
cmp
push
push
push
or
repnz
inc
mov
push
add
jmp
xchg
inc
inc
and
mov
dec
fistl
leave
push
out
in
jmp
arpl
loopne
adc
sub
jecxz
leave
nop
outsb
sbb
ret
ret
outsb
jb
mov
outsb
popf
xchg
les
cmp
aaa
mov
sub
add
lock
sub
pop
rcr
pop
lock
mov
lock
inc
xchg
fdivl
fcomp
xorb
stos
dec
mov
xchg
sbb
outsb
fmull
std
cmp
jle
icebp
pop
inc
in
dec
or
sub
dec
jmp
xchg
idiv
xchg
mov
out
fsubl
lds
push
mov
sub
ss
rorb
push
rol
imul
sbb
frstor
ficoms
aas
and
dec
ficoms
rol
es
int
roll
call
stos
aas
jle
sbb
lret
daa
sar
pop
cmp
adc
fidivrs
ret
mov
mov
rcrb
sti
outsb
ret
xchg
shrb
loopne
fucomip
lret
jg
cmc
dec
or
mov
int3
dec
jno
lcall
rorb
mov
xchg
mov
jg
mov
stc
leave
iret
sub
adc
mov
outsl
add
xor
mov
mov
outsb
xor
outsl
outsl
lea
sub
push
mov
stos
push
loope
repz
xor
mov
adc
stos
insb
sub
movsl
inc
xchg
mov
ret
add
mov
mov
imul
add
or
pop
pop
in
movsb
sbb
inc
fdiv
xor
pop
repz
cmc
filds
inc
inc
pop
leave
xor
jae
outsb
cwtl
fstpl
xor
dec
fsubl
dec
or
inc
pusha
mov
cmp
xchg
shrl
push
fstpt
jnp
sub
and
mov
and
jmp
xor
inc
jmp
pushf
outsb
pop
xchg
pop
ljmp
lds
ss
cmpsl
cs
dec
mov
cmp
dec
stos
lret
ljmp
mov
inc
and
out
mov
lret
push
sub
lods
idivl
popa
xor
ret
dec
pop
xor
mov
inc
cmpsl
pop
sub
xlat
jp
rol
adc
adc
lret
mov
xchg
cmc
lods
in
sub
es
insl
mov
in
ret
cli
mov
mov
dec
fdivrs
fisubrs
push
mov
into
lods
idivl
scas
mov
jne
lea
loope
rcll
pop
dec
cli
outsb
xor
popf
sbb
push
mov
and
sar
int3
inc
jecxz
insb
push
inc
mov
xchg
adc
xchg
inc
nop
push
cld
ss
mov
push
das
stc
dec
data16
dec
add
mov
aas
push
fsts
andl
mov
sahf
mov
push
out
inc
popfw
or
jge
dec
cmp
andl
jle
setae
popf
or
rolb
bound
jg
add
popf
mov
sub
lahf
shrl
imul
clc
les
and
popf
sbb
mov
fcoms
add
rorl
out
cmc
xor
pusha
ret
js
or
xor
pop
push
push
stc
dec
test
mov
ss
lret
fucomp
jl
loop
sbb
inc
out
add
xor
mov
pop
pop
or
adc
lods
dec
dec
je
or
jecxz
push
addb
ret
popf
mov
mov
insl
loopne
ret
shll
and
push
jl
xchg
aad
inc
sti
mov
pop
fcoml
test
rolb
adc
mov
adc
pop
sbb
sub
enter
hlt
call
push
jo
out
mov
and
xor
pop
and
stos
std
mov
or
dec
std
push
xchg
lock
fs
and
sbb
fnstcw
cmp
in
cli
xor
mov
fnstsw
push
push
jg
daa
test
dec
inc
xchg
adc
jb
sbb
ret
push
or
xchg
cli
dec
negb
jnp
and
push
xchg
ret
mov
cltd
jl
add
test
sbbb
mov
push
fnstenv
dec
mov
repz
mov
testl
mov
and
das
cmp
test
inc
pop
and
or
daa
pushf
jle
or
dec
lods
push
xchg
psubd
and
cmp
shrl
mov
mov
mov
loope
out
jmp
pop
lret
into
mov
adc
das
dec
rcr
mov
sbb
jl
add
andb
jecxz
movsb
inc
ss
sbb
add
data16
cmp
inc
pushf
jb
test
testb
gs
cmp
loope
cmc
and
mov
and
out
and
shll
jns
sti
dec
dec
fidivrs
repnz
icebp
sarl
mov
fs
gs
ja
js
mov
cmp
repnz
push
ds
add
mov
or
mov
push
iret
fiadds
loop
dec
jnp
sub
mov
or
jmp
add
mov
xor
loope
push
daa
add
in
shll
test
pop
push
loopne
repz
das
cwtl
vpmadcswd
shrb
shlb
xchg
dec
push
push
dec
jns
cmp
mov
jbe
inc
push
mov
and
call
dec
int
mov
repnz
push
testl
arpl
ret
roll
cwtl
dec
shl
pop
sub
push
adcb
ja
ret
stos
jecxz
add
push
mov
adcb
and
xchg
sbb
pop
aad
loopne
sar
movb
vmovss
mov
add
ret
movsl
push
fidivrs
pop
adc
push
jb
pop
add
es
gs
jmp
push
flds
cmpsl
int
xor
mov
or
mov
daa
sub
sbb
push
mov
cmc
or
push
jnp
xchg
push
aaa
or
iret
sub
test
nop
popf
imul
lret
cld
mov
ss
or
mov
aaa
mov
inc
dec
out
mov
repz
xchg
cli
sbb
out
icebp
repz
push
mov
mov
scas
xor
imul
xor
xchg
mov
lret
xor
out
imul
xchg
ljmp
jb
in
cmp
sub
sarl
pop
inc
mov
shlb
sub
cmp
lods
repz
fxch
test
scas
leave
xorl
outsb
inc
dec
add
sub
dec
mov
add
adc
xor
divb
adc
xchg
pop
repnz
sahf
push
jmp
ret
fwait
out
xor
data16
jo
pop
adc
mov
repz
mov
outsl
inc
repz
adc
adc
xor
or
and
loop
push
fmul
cmp
aad
fildl
mov
and
int3
es
cli
fndisi(8087
inc
xchg
dec
xor
aaa
jne
xchg
xchg
mov
test
push
movsb
ret
jbe
clc
xor
cli
call
subb
js
mov
or
xor
repnz
mov
cmp
mov
mov
jmp
addr16
movsl
or
test
fnsave
xlat
sbb
jge
jge
popl
frstor
mov
push
loopne
xor
and
fldcw
xlat
sbbb
sbbb
aaa
xlat
ret
mov
lahf
je
stos
cmp
jbe
jo
pop
jecxz
je
mov
sbb
sbb
lea
aad
mov
test
mov
cmp
aaa
push
xchg
sub
push
xchg
aas
outsb
add
mov
adc
inc
mov
ret
out
mov
out
outsl
add
ss
outsb
or
out
stc
push
adc
inc
les
cmp
hlt
cmp
cmp
mov
inc
jl
mov
and
xor
pop
sub
jle
fsubl
sub
sbb
incl
xchg
sbb
lds
adc
je
mov
roll
mov
popl
aas
nop
sub
lcall
das
ror
dec
xchg
lods
dec
ja
dec
insb
subl
pop
jne
pop
sarw
ret
push
dec
rorl
add
add
std
xchg
out
cmp
inc
out
push
adc
add
xor
mov
mov
xchg
cmpsl
mov
sbb
loope
cmp
mov
pop
lret
movb
dec
cmovp
jmp
add
jp
dec
sub
jns
pop
sbb
rorl
js
out
pushl
jns
add
icebp
sub
add
push
shlb
in
imul
inc
fstpl
leave
aaa
cmpsb
dec
or
xorb
clc
xorl
pushf
cld
test
sbb
push
scas
pop
mov
fiadds
lds
inc
adc
stos
push
leave
hlt
mov
rorb
out
jmp
lahf
arpl
dec
notb
fists
cltd
dec
or
int3
jno
pop
ffreep
sbb
push
pushf
imul
push
mov
pop
cmp
pop
addr16
xor
movsb
jbe
into
sub
jg
das
xor
adc
sub
push
xor
imul
xchg
repnz
stc
lods
jne
adc
cmp
dec
xchg
mov
mov
cmp
push
mov
dec
adc
inc
data16
fidivrs
sub
scas
dec
pop
ljmp
push
test
rolb
push
lret
pop
shrb
out
mov
loope
scas
faddl
adc
jbe
mov
ret
bound
icebp
je
pop
cmp
mov
mov
pushf
ljmp
gs
ffree
or
inc
pop
inc
sbb
icebp
pop
mov
fwait
jo
sbb
mov
jle
insb
mov
add
stc
mov
add
vpcomuw
inc
insb
roll
bound
jmp
dec
and
orl
and
xchg
add
std
mov
dec
inc
adc
adc
xchg
mov
pop
mov
loope
in
ja
and
mov
sahf
and
and
in
nop
insl
js
adc
or
icebp
ds
lock
popa
push
fildl
outsl
imul
in
adc
and
test
mov
push
inc
mov
pop
sar
jecxz
stos
mov
adc
cmp
lret
mov
call
sub
mov
push
bnd
cmp
nop
mov
call
push
and
ficompl
je
fcmovne
cmp
repz
and
icebp
mov
sub
inc
or
leave
mov
sti
mov
mov
jmp
dec
mov
adc
dec
cmc
aas
dec
rcrl
pop
andl
cltd
or
insl
xchg
mov
xchg
xchg
push
dec
mov
pop
lock
call
jnp
fnstcw
repz
shll
addr16
inc
lret
inc
inc
movsl
lcall
pop
xor
stos
sub
fimull
ljmp
mov
lahf
adc
fisttpll
rol
fisubrl
inc
mov
jbe
notl
lea
lds
fmuls
mov
sbbl
lods
push
jle
lods
jno
fstps
adc
insb
xor
pop
sub
mov
lret
jnp
xchg
dec
push
mov
xlat
lods
out
push
pop
std
out
jecxz
scas
cmp
jmp
and
xchg
cld
pop
push
mov
jp
mov
jge
lret
mov
cli
pop
mov
xchg
mov
jg
imul
push
je
in
adc
call
stos
mov
lods
jmp
push
int
mov
imul
ret
or
ret
arpl
aam
jle
mov
js
jmp
int
add
adc
jecxz
sbb
sub
fwait
les
aad
jecxz
push
push
push
dec
bound
mov
dec
in
outsl
int3
adc
imul
push
lea
fs
jl
loope
jle
adc
xor
loopne
jne
jge
dec
psadbw
sbb
sub
mov
dec
xlat
or
jecxz
jns
imul
adc
or
fs
mov
sub
inc
jae
cmc
xchg
sub
out
data16
rcll
xchg
sbb
in
stc
jae
fwait
adc
icebp
cmp
and
sar
test
test
fdivrs
lock
mov
bnd
test
add
out
mov
jl
mov
pop
push
cli
mov
in
iret
jmp
mov
fistl
faddl
data16
mov
test
call
mov
adc
push
lods
test
shrb
sbb
int
out
add
imul
mov
push
loop
std
repnz
cli
stos
clc
lock
push
xchg
mov
pop
out
repnz
cmpsb
mov
jge
xor
mov
jp
arpl
mov
into
movsl
dec
cltd
adcb
sub
sbb
adc
xor
clc
inc
decb
lock
aad
xchg
fdivrs
cmp
out
push
enter
xor
popa
rcr
pop
loop
xchg
mov
cmpsb
and
sub
orb
push
int3
popa
fisttps
mov
loopne
sbb
les
ljmp
nop
dec
pop
mov
xchg
ljmp
lret
std
add
in
popa
xchg
aas
stc
pop
pop
imul
jle
pop
mov
mov
insl
fadds
or
dec
popf
jns
aad
loope
es
test
mov
fidivs
or
mov
or
cmp
loop
cld
inc
stos
test
mov
cmc
mov
rorb
fstl
xchg
arpl
inc
shl
push
cmp
fstpl
adc
adc
mov
imul
aaa
out
sub
mov
jmp
sti
adc
sti
test
jbe
sub
std
rclb
frstor
xorl
jae
cmp
lahf
fcomi
mov
or
fdivrl
test
dec
stos
mov
fisttpl
or
scas
sti
in
xchg
rorb
push
sub
mov
fisttps
cmp
dec
fcoms
xchg
pop
push
sub
call
cmp
cld
jb
imul
mov
movsb
cwtl
fwait
cmc
ss
xchg
add
xor
sbb
aad
mov
xchg
push
inc
loopne
pop
mov
xlat
stc
ljmp
sub
mov
mov
pop
cmc
sarb
sbb
rorb
rcrl
lea
cmpsb
or
mov
movsl
ja
pop
or
dec
aaa
sbbl
loop
cmpsl
cmp
pop
sbb
rorb
inc
loope
scas
sti
aaa
rclb
int3
jae
cwtl
push
frstor
ret
sbb
daa
push
ds
jecxz
xor
cmpsl
fadds
jbe
cmp
movl
mov
cmp
pop
jae
sahf
dec
ffreep
jmp
iret
call
or
mov
leave
gs
jge
ss
lcall
sbb
and
jl
mov
sub
xchg
pushf
jg
or
shl
xorb
aaa
jg
addr16
out
cmpsl
jl
lods
xchg
rcrb
fwait
jge
incb
jmp
xor
ss
scas
jl
push
push
mov
cmpsb
mov
pop
mov
mov
and
test
push
mov
pop
sub
xchg
ss
daa
clc
mov
pop
mov
imul
outsl
ss
cli
pusha
mov
pusha
popl
mov
imul
pop
mov
inc
js
loopne
cmpsl
fists
iret
xchg
in
fcoml
cmp
sbb
insb
add
inc
jb
xchg
mov
adc
cmp
sbbb
jns
cli
sub
repz
push
in
push
mov
mov
bound
sub
inc
xlat
xlat
pop
xorb
push
inc
push
push
insb
aam
cmp
add
outsb
mov
jge
fsubrl
faddl
adc
sbb
sbb
cmp
ss
mov
scas
push
enter
jmp
cs
xorl
sub
fs
sbb
lcall
push
out
xor
xor
test
jno
or
popa
out
jle
push
sbb
lcall
cmp
jns
jle
aam
dec
push
mov
popa
inc
and
mov
pushf
insl
adc
into
popa
insb
and
enter
sarb
ss
test
int3
mov
outsb
push
sbb
mov
jo
mov
rcl
cmp
sbb
movsb
rorb
dec
push
xchg
lret
xchg
push
mov
daa
stos
xlat
and
mov
mov
movsl
test
add
je
jb
push
shlb
pop
sub
dec
outsb
mov
cmp
dec
cmp
cltd
add
push
mov
xchg
inc
sbbl
rorb
test
jmp
mov
cmp
out
add
jbe
mov
lock
push
mov
push
jg
stc
jno
mov
mov
sbb
es
jbe
inc
xchg
pop
jecxz
xchg
and
xchg
pop
aam
test
jns
popf
adc
ret
cmp
pop
orb
out
inc
xor
bound
mov
cmp
push
sub
xlat
mov
div
stos
aam
jbe
mov
inc
into
pop
outsl
imul
imul
sub
xchg
inc
out
adc
js
or
scas
out
in
xor
lcall
icebp
pop
lods
arpl
push
push
stos
aaa
gs
mov
xchg
cltd
dec
lret
test
sbb
jnp
sbb
mov
mov
and
and
mov
into
push
dec
xlat
jb
aaa
adc
loope
lods
or
mov
outsb
mov
shlb
insb
pop
ja
mov
cwtl
add
mov
pushf
arpl
cwtl
and
mov
xchg
aad
adc
movsl
loope
mov
xchg
add
scas
cmp
lahf
push
les
arpl
push
push
or
jp
loop
jbe
jp
jnp
jle
fcomps
sbb
push
cwtl
pop
jb
push
xlat
pop
shrl
inc
or
arpl
or
aad
jo
adc
mov
jmp
pop
rclb
and
fs
jecxz
fcompl
sub
dec
fxch
outsl
outsb
add
adc
cmpsb
pop
dec
dec
jbe
mov
xchg
push
hlt
cmp
mov
cmp
jmp
push
pop
pop
ljmp
push
mov
fisttps
dec
xchg
je
jge
icebp
mov
mov
adc
pusha
sbb
mov
xor
rol
lock
xchg
ljmp
jae
je
xor
fs
dec
mov
xchg
lock
js,pt
imul
fstpt
mov
call
imul
test
sub
dec
adc
add
pushf
scas
stc
and
push
in
in
data16
je
adcl
adc
out
orb
movsb
je
test
in
out
xchg
mov
es
lea
notl
daa
sahf
js
loope
inc
sbbb
and
push
out
xchg
xchg
xchg
jg
iret
mov
push
sbb
ficoms
cmc
mov
mov
jmp
out
xchg
pop
std
xchg
and
lods
sbb
mov
pop
xchg
cmp
shlb
xchg
dec
sub
jae
fiaddl
and
dec
mov
pushf
jp
pop
jecxz
push
lds
mov
cli
mov
pop
int3
cmc
mov
and
or
lds
ficomps
movsl
and
pop
push
sub
lret
and
inc
push
pusha
jae
mov
out
pop
sbb
inc
call
ss
mov
lcall
jnp
or
fwait
outsl
test
addr16
mov
xlat
lret
or
js
sub
loop
push
sti
nop
sbb
cmp
cmpsl
pusha
inc
subl
add
ja
imul
xor
fsubrl
outsb
clc
mov
not
lods
mov
push
sub
insb
pusha
sub
std
push
leave
add
inc
sub
cmc
mov
and
fnstsw
mov
jo
jbe
divl
jb
or
jg
sub
into
lea
and
mov
inc
insb
cli
icebp
push
push
mov
push
fstpt
push
mov
cld
in
daa
nop
stos
push
adc
xchg
jmp
push
repz
aas
into
imul
jbe
push
pushf
pop
mov
lret
mov
push
in
add
inc
mov
add
mov
push
dec
pop
pop
sub
jecxz
jecxz
cmp
je
mov
out
push
flds
sbb
cli
sub
idiv
stos
das
dec
daa
dec
mov
js
test
jmp
dec
mov
xchg
data16
sbb
fisttpl
cmpsb
inc
pop
jae
mov
pop
push
hlt
ficompl
in
sbb
or
fwait
adc
xchg
lock
or
sub
shlb
and
out
fadds
pop
pusha
pushf
lock
adc
jb
in
jne
fwait
adc
sub
mov
rolb
xor
adc
adc
jle
xor
mov
push
lods
out
pop
rclb
out
jno
fists
cltd
xor
jle
mov
es
aam
int3
cmp
adc
std
inc
repz
imul
adc
std
hlt
incl
addr16
xor
xchg
sub
fwait
stos
sahf
jno
xchg
cld
mov
jb
xor
dec
pop
and
movsb
mov
mov
push
jle
shl
je
inc
nop
jl
jecxz
push
and
xchg
pushf
adc
imul
test
push
push
lea
xchg
sub
cli
imul
jbe
inc
jmp
mov
test
inc
sbb
push
sbb
lds
cmp
pop
cmp
mov
rolb
push
mov
std
push
mov
lahf
dec
adc
sbbl
sub
mov
ret
fs
cmp
mov
fstpl
outsb
clc
jne
sub
fsts
icebp
aad
hlt
xor
jl
jmp
dec
and
outsl
xchg
stos
jb
lods
ficoms
subl
rcl
daa
push
mov
cltd
pop
dec
and
fisttps
push
lods
je
lods
test
stos
orl
push
sub
mov
xchg
mov
mov
or
idivb
cmp
mov
aas
pop
jl
mov
shll
dec
mov
std
lret
jg
incb
push
inc
daa
mov
add
repnz
shll
xor
push
decb
sub
add
and
sbb
or
es
xchg
inc
std
mov
or
jg
out
out
mov
cmp
in
dec
xchg
mov
sbb
repnz
sti
push
stos
loopne
xor
xor
in
out
fisubrl
push
sub
lock
xlat
xchg
pushf
cmpsl
insl
and
lret
push
xor
adc
sbb
sbb
in
pop
ret
or
jnp
orb
jmp
push
mov
shl
xor
xchg
fnsave
pop
movsl
popa
xlat
push
pop
push
or
sub
mov
sbb
fdivl
cmp
ja
jno
mov
out
pop
cld
les
inc
insl
subb
insl
clc
push
lea
not
sub
jnp
in
popa
sahf
mov
xchg
mov
cli
arpl
stos
fldpi
sub
stos
lret
icebp
xchg
cmc
in
imul
lcall
lahf
xchg
or
adc
enter
push
xor
lds
movsb
jl
mov
and
test
mov
add
insb
mov
pop
sub
mul
sbb
mov
pop
addr16
out
push
pusha
sbb
clc
sub
pop
and
cmpsb
or
sub
mov
mov
xchg
call
andb
push
out
ss
out
pop
movsl
mov
jno
sbb
mov
mulb
lret
inc
xchg
push
add
xchg
rcrl
adcl
ds
mov
pop
xchg
adc
jmp
mov
xchg
xacquire
sarb
ljmp
add
push
xlat
jl
ret
jne
xchg
xor
xchg
jbe
into
lahf
jge
xrelease
imul
iret
test
fs
lock
cmpsb
fcmovb
mov
push
pop
jne
xchg
jl
addr16
lret
dec
shl
imul
das
jg
setb
cmp
outsb
rolb
or
fnstenv
dec
xor
lret
and
nop
push
test
lods
leave
shrl
mov
or
lds
test
mov
cmpsb
cmp
mov
in
jo
push
gs
cmp
pop
fdiv
mov
push
aam
jno
std
pop
inc
aam
cmp
sub
rorl
and
sub
lea
or
jne
and
dec
inc
aas
push
jl
pop
sbb
cwtl
pop
add
stos
pop
jae
mov
test
stos
or
mov
mov
sbb
inc
lea
orb
in
mov
inc
lcall
push
scas
mov
mov
inc
mov
sbb
add
or
lcall
mov
outsb
xchg
out
dec
and
into
ffreep
lcall
mov
in
adcl
mov
adc
xchg
lret
cmp
cmp
cmc
dec
push
sub
sahf
clc
mov
xchg
imul
xchg
push
pop
stos
scas
jmp
fdivrp
xchg
enter
scas
mov
icebp
lahf
inc
rol
or
hlt
repz
pop
sub
shll
mov
add
or
daa
roll
aaa
xor
inc
mov
fidivrs
out
ljmp
pop
icebp
or
cs
jbe
rclb
fidivl
xchg
hlt
imul
jne
fadd
mov
inc
dec
sub
adc
pop
mov
adc
adc
rcr
inc
cs
and
filds
repz
inc
or
jl
popf
xor
imul
pop
xor
mov
insl
pop
pop
mov
pop
bound
add
in
int3
inc
adc
lods
inc
mov
pop
inc
jmp
jp
scas
je
sbb
neg
jecxz
push
jne
iret
inc
std
xchg
pop
mov
outsb
inc
mov
aaa
jmp
aas
frstor
sbb
movsb
movups
dec
cmc
or
jl
mov
sub
adc
mov
sub
add
xchg
pushf
mov
fisttps
movzbl
icebp
and
aad
push
add
in
jb
add
xchg
loop
js
movsb
add
lahf
adc
stos
and
aad
inc
mov
sahf
sub
add
ds
imul
add
dec
sub
fstl
xorl
push
pusha
jg
push
and
pushf
or
dec
sub
pop
adc
sbb
fsubp
lods
mov
hlt
inc
lods
lds
push
fnsave
mov
repz
aad
lcall
pop
popa
popa
fnstenv
adc
sub
sbb
aas
shlb
shrl
mov
cmp
push
xorb
lods
xchg
push
jo
and
ljmp
ds
out
rol
fld
out
pop
test
jmp
jno
je
aas
dec
aam
imul
mov
ljmp
cmp
int3
stos
popa
add
out
dec
fistpl
add
int3
fisttpll
sbb
test
inc
test
inc
imul
ja,pn
jge
cwtl
sbb
out
dec
or
lea
scas
adc
pusha
addl
xchg
lods
insb
nop
or
outsb
xor
jmp
mov
in
enter
mov
jae
bound
push
mov
or
insl
xchg
ljmp
mov
shl
clc
fwait
insl
mov
inc
pop
mov
fs
aas
dec
cmpsb
cmpsb
stos
or
adc
cmp
stos
cmp
arpl
sub
ffreep
mov
cmpsl
xor
sbb
pop
and
mov
inc
stc
xlat
mov
js
mov
ret
xchg
inc
sub
mov
cld
aas
or
mov
inc
cmpsb
sbb
cmp
sub
dec
mov
ljmp
sti
dec
das
add
out
xor
cmpsl
lret
dec
nop
xchg
mov
inc
cmpb
xchg
and
push
jbe
fs
gs
roll
ss
sub
loope
cwtl
push
sbb
lret
push
jmp
cmpl
mov
mov
push
into
test
lds
repnz
adc
xchg
mov
jge
in
dec
mov
cmp
pop
pop
mov
imul
cwtl
push
movsb
cs
pop
fldt
jp
xor
sahf
out
and
in
or
and
adc
lods
push
ficomps
xchg
gs
push
js
nop
and
mov
stc
and
inc
sub
ljmp
add
pop
int3
scas
adc
sahf
in
aam
xor
sub
inc
fidivl
jae
sub
repnz
loope
clc
int3
jecxz
ss
sahf
dec
je
in
nop
fcom
cmp
sbb
and
or
repnz
and
adc
pop
sub
cmpsl
or
loopne
cmp
lret
pop
and
pop
jecxz
pushf
jmp
cmp
inc
jo
mov
stc
in
andl
jnp
cmp
cs
mov
ss
jmp
jmp
bound
dec
or
mov
sbb
lret
jmp
sbb
inc
js
out
cli
popf
push
cmp
dec
and
mov
movsl
in
or
dec
xor
leave
mov
dec
jge
fildl
pop
jae
inc
inc
repz
jge
popa
imul
pop
mov
mov
enter
aas
add
push
push
mov
jge
sahf
mov
or
mov
dec
or
push
jb
inc
lcall
mov
shll
xor
stos
mov
loope
imul
pop
loope
fwait
pop
mov
xor
mov
aad
push
dec
mov
dec
xchg
pop
ss
pop
pop
cmc
ret
int
imul
add
jno
mov
sbb
pop
sti
pop
repz
fcoms
sub
add
sbb
dec
fwait
lahf
dec
push
sub
subl
and
enter
in
stos
out
cmp
lret
iret
xchg
cmpsl
mov
in
pushf
scas
out
and
jp
pop
push
in
mov
arpl
lahf
xchg
je
xchg
add
fwait
xchg
fbstp
ds
int
push
push
mov
xchg
push
into
adc
lret
xchg
sar
js
sub
push
inc
sbb
add
cld
into
pop
dec
fdivr
in
das
int
test
fstpt
loopne
repnz
rcr
es
and
rorl
loope
mov
or
popa
mov
sub
push
cmp
sbb
lods
shll
xor
scas
aaa
push
jge
sbb
test
test
or
cmp
pop
in
adc
add
sbb
orb
and
int
loop
push
bound
ret
aas
mov
pop
sub
mov
mov
add
mov
mov
jmp
pushf
sbb
in
push
xor
push
jmp
sahf
sbb
jo
or
add
or
jl
sti
push
lds
movsb
mov
lret
filds
pop
cltd
cld
leave
aam
lods
dec
ret
and
or
pop
and
pop
repz
and
dec
filds
shrb
mov
jl
jno
jl
clc
cmp
and
push
gs
imul
out
rol
add
and
imul
repz
in
cld
push
insb
sbb
xchg
xor
popa
mov
push
into
add
sbb
xchg
add
jo
xor
js
sub
push
cmp
push
jecxz
mov
rolb
aam
add
rcll
add
rclb
lret
aas
inc
aaa
mull
stc
bound
cmp
dec
pop
xor
aas
lahf
inc
popf
mov
and
push
push
jbe
vxorps
loope
fwait
dec
fidivrs
inc
or
dec
sbb
sbb
sti
pushf
hlt
lods
repz
push
cltd
push
adc
xchg
mov
repnz
or
in
cmpsl
xchg
adc
mov
push
ljmp
ja
int
inc
call
leave
inc
iret
pop
adc
add
cwtl
out
xchg
popa
xor
inc
addr16
lret
setge
test
add
insl
ja
pop
leave
pop
int
imul
and
fstps
pand
lret
cmp
mov
das
adc
dec
data16
add
movsl
pop
cs
mov
lret
hlt
add
cmpb
iret
push
nop
push
sbb
out
xor
push
sub
or
adc
decl
xor
xchg
arpl
mov
mov
push
pop
orb
pop
test
mov
insb
outsl
pop
shlb
mov
dec
xor
adc
jg
xlat
or
popa
js
rol
hlt
push
and
pop
test
jnp
in
aad
aad
xor
ret
ss
dec
lock
jno
lock
outsb
cmp
mov
pop
adc
pop
test
daa
sub
add
test
lret
mov
xor
sub
pop
mov
movsb
inc
outsb
vmwrite
sub
arpl
out
xchg
sbb
push
add
mov
inc
jo
mov
js
ja
pop
push
movsl
sbb
mov
lret
or
je
push
jmp
dec
xchg
adc
rclb
lcall
jbe
adc
hlt
insb
cld
movsl
pop
fcmovbe
ror
ret
iret
insb
jl
mov
in
and
xchg
add
movsb
fwait
mov
push
ljmp
lret
stc
xchg
fisubrs
js
jno
cmp
xor
and
repz
shl
mov
inc
or
inc
and
and
adc
mov
arpl
jecxz
rcr
ds
mov
cmp
or
mov
or
push
fdivrl
fstl
mov
enter
mov
loopne
sahf
aad
add
push
ja
adc
cmp
les
dec
mov
or
rorb
pop
addr16
dec
je
add
pop
popf
inc
sbb
subl
movsb
movsl
js
fisubrl
push
push
mov
inc
or
dec
sahf
inc
add
pop
adc
int3
insl
ja
mov
sub
dec
dec
jg
and
mov
or
mov
push
cmp
sbb
lcall
hlt
xchg
cli
out
sahf
and
sahf
iret
movnti
fisttpll
lds
xchg
lret
test
or
cmpsb
outsl
or
fistps
out
pop
jmp
out
mov
stos
jge
divb
xor
idivb
add
sbbb
xor
loope
pop
test
sbb
inc
or
in
mov
dec
cmp
mov
and
ljmp
in
mov
popa
std
pop
test
data16
sbb
lods
lods
jg
mov
xchg
icebp
sub
out
shll
imul
mov
aad
mov
pop
jmp
dec
sub
iret
movsb
inc
cltd
or
jo
add
mov
int
or
lods
cmpsl
mov
dec
sub
jae
jnp
jbe
dec
dec
or
rcrl
adcl
dec
nop
das
jbe
and
adc
insl
insb
mov
repz
mov
stos
stos
pop
fdivr
xor
and
filds
cmp
es
mov
jge
push
pusha
add
inc
xor
mov
sbb
inc
pop
rcl
jo
pop
dec
sbb
mov
sarb
xchg
inc
js
or
add
inc
cmp
loop
stos
pop
imul
and
cs
sub
push
mov
inc
sarl
sbb
push
loope
shrb
out
ljmp
jnp
sbb
test
cltd
adc
mov
lea
pop
fdivs
jae
jp
es
sub
test
hlt
mov
inc
jne
test
std
bound
fldcw
lea
loopne
xchg
jl
in
mov
les
jle
movsl
int
data16
lock
adc
xchg
lods
and
xor
pop
sub
dec
arpl
and
cli
xchg
inc
sub
jb
mov
je
cmp
rorl
pop
mov
inc
sub
mov
in
adc
ds
int
ret
movsl
sub
test
cmp
sbb
int3
jne
jb
jge
bound
addr16
adc
xchg
jns
shl
mov
sbb
lock
or
xchg
mov
scas
mov
sti
push
in
int
pop
mov
ret
aad
adc
mov
lahf
mov
and
pop
roll
add
or
js
xchg
push
popa
or
shlb
sub
sarb
add
enter
imul
jecxz
mov
lock
sub
outsb
xchg
movsl
fiadds
or
loope
repnz
mov
sbb
sub
pop
scas
mov
mov
push
cmp
fldl
sbb
fucomi
add
xchg
dec
arpl
push
stos
andb
out
andb
lds
fcmovbe
xchg
mov
scas
pop
mov
sbb
xchg
shlb
cmp
arpl
dec
test
mov
loope
xor
sahf
jecxz
and
addl
adc
jle
mov
popf
mov
fmulp
clc
mov
outsl
adc
pop
shll
sub
sbb
fisttpl
mov
popa
in
pxor
push
ss
xor
mov
cli
in
enter
inc
dec
ror
out
stc
jo
test
insb
cld
add
clc
inc
loope
int
xchg
xor
mov
mov
popa
test
je
xor
popa
push
addr16
add
xchg
std
cwtl
cmpsb
jb
sbbb
fisubrs
leave
sbb
mov
lret
xor
movsl
jle
and
or
sbb
imul
test
push
lret
mov
je
orl
add
mov
xchg
shrl
push
mov
dec
jle
test
out
mov
cmpsb
jecxz
enter
cmp
subl
addb
jl
je
and
sbb
cmp
xchg
pop
mov
and
cmp
dec
cmp
lods
jns
sbb
sub
inc
int3
sbbl
fninit
xlat
stc
dec
addr16
fs
or
dec
iret
frstor
repz
dec
cld
gs
pop
cmpsb
in
cwtl
les
movsl
lods
enter
and
or
add
mov
inc
sahf
imul
mov
pusha
xor
lock
sub
pusha
icebp
xor
mov
iret
in
jg
cmpsb
pop
fisubrl
mov
sub
test
fs
mov
dec
or
mov
in
jne
outsb
sti
ret
add
jmp
femms
mov
int3
and
add
in
cli
cmp
inc
aam
data16
pop
dec
or
dec
ret
es
jp
enter
repz
dec
das
push
and
jb
bound
mov
lret
push
sub
or
cmc
jae
icebp
scas
pop
jg
xchg
add
adc
dec
and
add
dec
xchg
mov
and
jle
push
cmp
xchg
inc
xlat
jecxz
mov
test
add
shll
movsb
adc
jne
int
sbb
mov
lcall
adc
or
jns
inc
jmp
pop
jbe
xor
scas
cmpsb
aaa
jmp
mov
xchg
data16
imul
stc
add
push
es
dec
pusha
adc
sub
and
ja,pt
jp
pop
shrl
mov
adc
enter
mov
in
pop
lcall
fiaddl
pop
test
push
sbb
mov
add
aas
inc
aam
es
fwait
pop
jb
or
and
fdivr
pop
push
popa
rcrb
xor
xlat
inc
xor
mov
fisttpl
out
les
mov
pop
out
dec
dec
lods
cmp
adc
icebp
adc
nop
or
scas
push
jb
jle
jb
xchg
dec
mov
and
add
test
pop
xchg
shll
roll
mov
jl,pn
sub
pop
adc
in
mov
pop
mov
imul
rcrl
jmp
mov
cmp
pop
add
out
frstor
in
push
popf
inc
dec
lahf
jmp
cwtl
sti
xchg
and
pusha
pop
roll
inc
mov
iret
cmp
cltd
cmp
scas
inc
mov
ret
sub
aas
fbld
dec
pushl
call
sldt
push
repz
xchg
inc
jbe
mov
stos
test
loope
or
inc
xchg
xchg
push
aaa
cmp
jmp
cmc
xchg
pop
jnp
xor
sbb
movsb
pop
mov
or
xchg
aaa
ljmp
ret
jge
mov
add
adc
in
insl
jl
add
fs
sub
and
push
mov
data16
add
dec
mov
dec
dec
dec
or
outsb
notb
sbb
sbb
lret
add
iret
mov
mov
test
xor
imul
push
push
jle
jnp
push
sub
xchg
les
push
xor
cmp
xchg
divl
insl
cmp
push
mov
mov
stos
cmp
mov
pushf
inc
loopne
push
into
push
xchg
ja
pushf
and
imul
stos
push
mov
cmp
lret
insl
or
push
lret
push
addr16
adc
adc
ds
push
jmp
nop
mov
orb
pop
cs
lcall
les
mov
les
lea
je
pop
rcrb
inc
cli
and
xlat
push
movsb
or
jo
mov
lock
mov
loope
mov
repnz
dec
mov
push
push
push
out
pop
lods
bound
stos
mov
mov
test
mov
push
xor
lods
jge
push
js
movsb
mov
daa
stos
jle
shr
cli
bound
into
sub
insl
lock
scas
std
fcomip
loope
lds
std
shrl
icebp
gs
lcall
dec
test
dec
inc
push
std
add
push
rolb
dec
or
mov
add
loop
sub
dec
subl
outsl
ljmp
adc
mov
pop
or
das
mov
mov
mov
mov
jmp
cld
xchg
dec
xchg
pop
jge
nop
pusha
insl
and
faddp
stos
lret
mov
lcall
mov
push
pusha
or
je
flds
outsb
rcrb
repz
clc
pushf
dec
or
stc
insl
and
sub
xchg
cmp
cli
jecxz
jg
jge
mov
dec
mov
lahf
mov
mov
inc
mov
loop
into
popf
sub
jbe
rcrl
mov
xchg
mov
inc
dec
pop
pop
sbb
mulb
aas
dec
adc
or
dec
mov
hlt
mov
jae
movsl
xchg
xorb
pop
icebp
mov
fdivrs
xor
int
inc
mov
pop
test
xchg
fstpt
mov
fisubs
fldenv
jmp
adc
adc
xor
icebp
jae
and
pop
popl
mov
movsl
andb
mov
mov
sub
sahf
cmp
repnz
push
or
jl
fwait
pop
add
hlt
ljmp
lock
jno
inc
lret
mov
inc
out
dec
sbb
inc
xchg
arpl
roll
lcall
lods
mov
mov
cmp
sarb
fnstcw
push
and
sub
xchg
fcmovb
das
lea
push
scas
hlt
ja
imul
xchg
mov
sti
lret
inc
cli
xchg
fwait
sub
mov
mov
cmp
ds
pop
pop
out
imul
fcoml
pop
and
out
lds
mov
mov
jmp
sbb
pop
es
pop
push
mov
inc
mov
repz
lcall
orb
push
mov
les
imulb
add
dec
dec
sbb
lods
and
ror
movsl
stos
push
pop
jno
sbb
jnp
or
push
cli
sub
pop
jle
cmp
xlat
pushf
fidivs
inc
fs
pop
ljmp
dec
pop
dec
xor
sub
push
xchg
dec
inc
xchg
rol
and
jmp
inc
push
das
inc
dec
inc
push
cli
push
xchg
in
jne
rclb
mov
test
pop
sahf
pminub
int3
pop
sub
push
dec
ret
cwtl
lods
xchg
pop
and
sub
adc
xchg
clc
push
inc
sub
out
pop
sbb
xchg
mov
cmp
mov
cmpsl
bound
jle
add
xchg
mov
in
mov
fwait
mov
ds
pop
push
loopne
adc
adc
inc
sti
and
leave
ja
sbb
icebp
xor
push
inc
lods
ret
jecxz
stc
mov
cld
int
arpl
ss
jo
jle
sub
mov
int
mov
gs
jne
fcoml
adc
inc
mov
push
out
pop
dec
sti
int3
loop
adc
rcr
push
cs
jl,pn
add
inc
mov
mov
dec
ret
pop
sti
test
pusha
push
pop
fwait
out
outsl
stos
fs
testb
test
push
push
mov
loopne
xor
xchg
mov
mulb
dec
xchg
pop
adc
rol
cli
mov
or
call
push
push
ja
push
adc
inc
inc
mov
or
cmc
divb
das
jne
loopne
outsl
shrb
fisttpll
outsl
cmc
push
lods
das
insl
int
popa
jge
fisubrl
mov
sarb
out
xor
xchg
addr16
and
in
xor
mov
mov
sub
out
dec
lods
je
addr16
fmuls
rcll
add
cmpsb
cmp
push
dec
movl
sbb
add
or
shll
js
addr16
fwait
shll
push
add
lret
push
jge
push
xorl
push
adc
loop
inc
movsl
xorl
adc
loope
dec
out
nop
cld
pop
xchg
notl
mov
cltd
fisubrl
cmc
cmp
mov
rorl
inc
sbb
lsl
xchg
lahf
jmp
out
out
jmp
vpcmpeqw
and
scas
or
inc
sbb
sbb
sbb
lea
test
imul
test
sbb
das
mov
cmp
outsb
push
out
push
shlb
cltd
jnp
push
adc
mov
push
popf
xchg
int
xchg
lods
in
cmp
orb
aas
mov
sub
sbb
cmp
push
pusha
sbb
je
mov
cmc
lods
mov
addr16
movsb
shrb
jle
std
scas
dec
leave
mov
addb
mov
ljmp
mov
ss
cwtl
and
mov
scas
pop
or
jp
push
mov
dec
sbb
out
or
pop
imul
enter
dec
jmp
mov
dec
pop
xchg
popa
leave
jns,pt
cld
push
jb
jo
int3
or
xor
adc
mov
divb
not
adc
divps
pop
inc
stc
loopne
cmp
lock
mov
out
ret
push
lods
mov
fstpl
or
stos
lea
add
repz
push
push
pop
inc
ret
cld
pop
fsubr
out
mov
jecxz
aad
jecxz
test
xor
dec
mov
rclb
mov
das
or
ljmp
mov
cmp
out
inc
je
inc
mov
pop
ljmp
push
inc
imul
imul
cmpsb
sbb
mov
lock
shrb
bound
xchg
push
push
pop
xor
mov
in
insl
pushf
xorl
push
ret
xchg
sbbl
push
popl
pop
sub
orl
insl
jno
adc
aaa
jae
bound
repz
js
mov
lret
jmp
xor
jbe
repz
add
jno
clc
es
cmc
jecxz
cmp
pop
fldenv
adc
idivb
out
ror
xchg
mov
stos
dec
rcrb
aas
push
movsb
inc
inc
push
mov
outsl
mov
mov
sbb
stos
lods
xor
sub
or
data16
pop
inc
xor
ss
subb
adcl
pushf
jecxz
or
push
scas
addr16
imul
imul
mov
sub
jnp
and
mov
cmp
or
cmp
mov
add
fstpl
jle
jo
dec
dec
lret
and
ret
xchg
mov
mov
out
xor
mov
mov
pop
andl
and
add
and
fnstenv
ret
inc
into
dec
xorl
std
in
mov
sub
lock
jb
jge
cli
mov
les
jl
cmp
test
divb
arpl
or
xchg
cmpsb
rcrb
lret
shlb
mov
out
mov
loope
xor
ja
cwtl
push
out
iret
sbb
ss
test
mov
arpl
jecxz
mov
adc
sub
fwait
dec
js
push
test
aad
cmc
das
movsl
xchg
sahf
add
or
mov
adc
push
movsb
jmp
roll
mov
iret
adc
xor
add
jne
mov
scas
lock
lea
xor
call
cli
push
clc
fs
fwait
xchg
test
lret
and
aad
or
les
push
xchg
xchg
push
xor
inc
mov
and
push
or
mov
hlt
adc
fisubrs
cmp
sbb
sti
sub
out
jp
adc
mov
dec
sti
pusha
add
pop
lock
out
cmpsl
pand
or
test
inc
ret
stc
into
xor
cmc
push
or
ficomps
or
mov
mov
rcrl
andl
and
dec
fs
imul
aam
loop
push
dec
mov
aaa
dec
je
gs
sbb
sahf
shrb
popa
sub
cmc
dec
int3
adc
jno
xor
mov
xchg
dec
int
and
pusha
and
les
mov
cli
lods
push
xor
sub
jbe
lret
and
out
cmpsl
ja
mov
add
fwait
xchg
sub
stos
addr16
push
or
cli
scas
add
scas
adc
mov
cmc
push
mov
inc
add
test
stos
sti
jecxz
mov
sbb
mov
in
outsl
rol
or
lods
int
add
push
jnp
sbb
xor
pop
rolb
loope
sbb
push
mov
push
mov
mov
inc
dec
into
std
and
mov
movsb
mov
or
and
and
push
add
mov
clc
or
test
js
fisubrl
mov
xchg
dec
and
jmp
lret
sarb
sbb
inc
pop
scas
ds
adc
shrb
add
xor
mov
clc
je
push
pop
cmc
mov
xor
fimull
cmp
imul
pop
ret
xor
ret
gs
in
pop
mov
dec
dec
push
call
dec
mov
ror
add
and
ret
in
js
xchg
popf
lret
mov
ja
gs
mov
mov
mov
mov
cld
decl
pop
adc
pop
jae
mov
mov
mov
ljmp
in
push
xchg
inc
rcll
and
xor
pusha
or
aaa
pop
and
mov
xchg
dec
lcall
dec
inc
call
mov
pop
and
mov
mov
das
out
cmpsl
push
mov
addb
cmpsl
or
icebp
shlb
lods
outsl
scas
lcall
jp
mov
jns
xchg
loopne,pt
cmpsb
rcrb
jns
out
sbb
negl
fiaddl
lods
lahf
pusha
sarl
repnz
clc
iret
fbld
jnp
fwait
jae
mov
pop
test
jbe
repz
push
pop
sbb
jecxz
xchg
jecxz
sub
loope
adc
mov
mov
stos
rep
jbe
faddl
xlat
inc
stos
in
or
dec
sbb
dec
rcrb
ficoms
adc
adc
imul
mov
les
add
add
mov
add
ss
add
sub
and
sbb
dec
push
inc
mov
jp
in
mov
cmp
jnp
jns
push
cli
mov
iret
ja
dec
xor
mov
push
imul
pop
mov
sti
jno
leave
jmp
xchg
mov
stc
inc
jnp
push
pop
add
fadds
into
call
add
mov
popa
orb
shrl
add
xchg
loope
mov
mov
mov
sti
jle
mulb
aas
sbb
or
ror
mov
and
fcoms
fidivs
jecxz
adcb
xchg
test
loopne
fdivrs
jle
mov
xor
jp
and
call
loope
sbb
cmp
xchg
fsts
loopne
mov
das
lcall
mov
pop
scas
std
ds
cli
lods
mov
jbe
les
mov
jp
xor
adc
jbe
add
sbb
jl
mov
adc
popf
imul
push
jo
imul
sub
and
fldenv
das
xor
cld
fsubrp
pop
stc
pop
lds
hlt
int3
and
jle
daa
cwtl
mov
and
mov
inc
movb
clc
add
dec
pop
jb
addr16
dec
mov
jb
adc
push
pop
inc
jne
jp
ror
push
imul
scas
cmpsl
jp
jp
jns
das
or
jns
femms
cmc
add
and
movsl
mov
sahf
inc
aas
jnp
sub
xchg
test
pop
inc
push
jecxz
aad
cld
mov
jg
jne
or
and
pop
adc
in
and
push
lds
rep
mov
scas
add
sbb
lods
call
jp
minps
insl
popa
cmpsl
add
fs
sbb
push
push
into
and
sub
bound
jb
inc
add
iret
mov
push
imul
jnp
sub
and
out
cltd
fnstsw
sahf
inc
stos
xor
aas
stos
and
psubw
mov
xor
ficomps
enter
and
lret
fiaddl
inc
pop
je
ja
mov
sub
mov
nop
inc
into
lcall
filds
iret
mov
xchg
out
sub
push
or
pusha
ss
iret
mov
test
lahf
and
fdivrs
fbstp
push
push
adcl
jmp
pop
inc
mov
inc
test
mov
inc
call
cmpsb
jle
mov
push
sbb
pop
jno
lahf
fistpll
jg
sbbl
dec
adc
adc
fisubrl
jge
or
xor
adc
loop
mov
test
add
jge
pop
mov
push
and
mov
sbb
xor
ss
fimull
cs
xlat
sbb
mov
inc
aam
outsb
mov
sub
shrl
pop
ret
xchg
xor
lea
cwtl
xchg
arpl
inc
lcall
sub
mov
jmp
lret
pop
imul
cmc
ljmp
pop
jnp
rorl
gs
mov
sub
mov
jne
hlt
sbb
mov
bound
shrl
mov
add
push
xchg
inc
enter
push
push
sub
into
iret
pop
clc
or
mov
jb
xchg
or
insb
xor
add
insb
scas
shr
subb
add
xor
in
outsl
loop
mov
xor
sub
outsb
mov
xchg
cmpsb
fnstenv
xlat
loopne
push
in
adc
adc
out
adc
enter
shl
sub
cli
nop
sub
pop
adc
sarb
fisttpl
jecxz
mov
inc
and
sti
push
pushf
push
imul
pop
ljmp
jge
push
cmpsb
movsl
sub
push
dec
mov
arpl
iret
cmpsb
clc
xchg
pop
enter
jle
mulb
scas
pop
jbe
test
cmp
xchg
or
frstor
mov
arpl
std
jb
cmc
cmp
iret
xchg
cld
push
jae
or
dec
adc
call
repz
xor
jecxz
mov
daa
mov
jbe
int3
jno
rcl
fmul
lds
or
inc
jle
adc
xchg
adcl
mov
pop
mov
add
jecxz
icebp
mov
mov
decb
clc
inc
sbb
pop
mov
sub
xor
fldt
insb
lea
xchg
hlt
sub
test
mov
fisubrl
lret
mov
insl
mov
sub
ror
sub
pop
push
push
lret
and
aam
in
test
fiaddl
ds
inc
jbe
inc
xchg
add
mov
mov
roll
mov
cmp
cmp
jl
xlat
std
ss
sub
jns
cs
pop
aaa
loopne
loope
push
xchg
mov
push
mov
in
scas
fs
mov
xor
jne
dec
aam
xor
xor
or
mov
xlat
mov
sub
sbb
sbb
aam
jae
popf
cli
jae
roll
das
sti
dec
push
int3
test
sbb
mov
mov
out
sbb
leave
pop
or
test
outsl
test
cmp
in
mov
pop
or
mov
push
dec
lds
cmp
add
fidivrs
arpl
ja
ret
pusha
and
js
push
arpl
dec
gs
mov
leave
out
cmp
pop
test
lcall
iret
ret
in
jns
fistpl
daa
cmp
fimuls
add
outsl
add
mov
jo
xchg
rol
jg
inc
hlt
fwait
xchg
and
mov
movb
or
adc
ficomps
ds
jo
jo
inc
jnp
aam
fisubrs
std
std
add
jne
stos
addb
ret
mov
fisubrl
pop
out
rorl
cmc
mov
cltd
mov
mov
in
mov
cmpsb
push
call
dec
mov
into
pop
pop
push
enter
push
aas
inc
and
mov
cmp
sub
loop
add
pop
and
jmp
adc
xor
dec
test
repnz
shll
mov
ret
lea
pushf
iret
mull
shlb
cmpsb
xchg
outsb
inc
aas
loopne
inc
jns
repz
adc
test
out
scas
cmp
and
xlat
js
mov
std
test
cmp
pop
sahf
popf
xchg
in
dec
stos
or
mov
sahf
fs
dec
dec
stc
cld
fwait
push
rorb
xlat
cltd
inc
ret
xor
sub
cmp
or
adc
fistpl
icebp
aaa
and
imul
jg
mov
xchg
nop
dec
scas
mov
sbb
inc
mov
je
shlb
adc
sbb
jg
jb
jle
mov
js
hlt
ss
inc
push
gs
cmpsl
repz
xchg
insl
mov
pop
mov
xor
cmpb
pop
pushf
lds
adc
push
xorb
mov
popf
rclb
pop
sbbl
ds
fistl
loope
shll
add
jp
adc
mov
pop
xchg
xchg
pop
test
jo
sbb
ja
shlb
ss
cmp
loope
xor
cmp
push
cmpsl
mov
popa
xlat
mov
je
mov
fmul
sub
or
js
sub
mov
push
sti
or
inc
jmp
scas
in
insl
arpl
sub
out
add
loope
pop
loopne
xlat
popa
adc
mov
mov
cmpb
sbb
arpl
fidivl
mov
cmp
jae
push
call
out
mov
orl
xchg
cmpb
mov
and
mov
xchg
ja
jge
inc
cmp
icebp
mov
pusha
add
push
lock
test
inc
xchg
fcmovne
stos
jmp
scas
jb
xor
loope
and
repz
mov
mov
movsl
xor
dec
mov
xor
loop
xchg
xor
js
sbb
mov
push
and
dec
cs
push
ljmp
cmpsl
mov
imull
or
jge
inc
inc
aas
sub
adc
into
les
pop
or
data16
test
pop
adc
rorl
gs
orb
hlt
jo
pop
popf
out
lea
mov
dec
repnz
je
aad
call
jle
addl
push
inc
cli
jno
jne
pop
scas
in
and
int3
aad
pop
dec
stos
or
pop
mov
mov
repnz
mov
insb
sub
jno
loopne
popf
stc
xchg
adc
mov
xchg
pop
jb
psubq
test
add
repnz
cld
inc
or
push
xchg
aam
add
inc
popf
cmp
inc
cld
adc
push
dec
ljmp
mov
sbb
daa
jl
adc
outsb
mov
rcrb
mov
dec
shl
hlt
fidivrs
lcall
jge
mov
add
in
call
and
jecxz
iret
addb
iret
test
insb
mov
and
icebp
stos
push
addr16
add
or
inc
xchg
mov
insb
xor
shlb
pop
outsl
or
repz
adc
mov
xor
hlt
fistl
gs
cmp
push
push
test
xchg
clc
jg
mov
fidivrs
inc
push
mov
sub
repnz
push
imul
in
enter
inc
dec
and
mov
pop
test
pusha
dec
inc
inc
xor
xlat
fistl
push
jns
add
dec
cmpsl
int
sub
clc
push
stos
jecxz
out
stc
in
jo
lds
into
cmc
inc
sub
gs
cmp
mov
test
mov
or
jecxz
mov
add
lcall
xchg
mov
dec
imul
and
or
fisttpll
lods
daa
aam
lcall
outsb
cmp
call
dec
into
jns
aam
jnp
clc
lods
mov
mov
cmp
aaa
int
push
jecxz
pop
ret
inc
ds
or
leave
cwtl
cli
dec
and
lds
pop
loopne
aam
int
out
mov
xchg
sub
mov
pop
pop
cmp
sbb
lds
xor
sbb
roll
ficoms
pop
dec
jo
push
dec
add
inc
repz
jnp
lret
mov
cmp
les
cmc
dec
and
push
stos
dec
dec
out
xor
mov
mov
lahf
mov
dec
aaa
push
in
jne
in
enter
arpl
scas
adc
lds
dec
xchg
push
lret
pop
fiadds
movsl
add
mov
shll
cli
rorl
sti
jbe
shrb
push
nop
or
fldt
ret
sbb
popaw
fsubl
frstor
scas
rclb
mov
mov
push
pop
lock
sahf
test
dec
cli
idiv
pop
push
xorb
dec
shlb
pop
sarb
cmc
test
mov
aad
sub
dec
es
xchg
fisubrs
bound
jge
add
iret
mov
sahf
push
popf
stos
xchg
cmp
mov
repnz
and
and
shlb
mov
push
cltd
mov
sbb
jge
cld
mov
jge
loopne
jnp
scas
aaa
fstps
xchg
sahf
and
inc
mov
mov
jmp
decl
pushf
test
sbb
nop
sbb
nop
movsl
or
mov
and
subb
mov
push
xor
add
dec
adc
push
push
push
mov
cli
lahf
out
inc
xchg
jns
clc
hlt
lcall
add
fwait
outsl
fnstcw
pop
dec
data16
bound
out
xorl
sahf
pop
cmpsl
sub
inc
or
pop
push
mov
sahf
in
xor
adc
rorw
lahf
mov
sbb
pop
jbe
and
sub
lds
ret
ds
cmp
pop
lret
jb
insl
fcomip
sbb
subl
add
lahf
out
lods
push
sbb
cmp
ja
subb
sub
or
jo
int
inc
bound
ja
arpl
or
stos
sbb
cmc
add
stc
push
inc
mov
jb
add
mov
cltd
mov
mov
clc
orl
ss
xchg
adc
divl
lds
mov
pop
aas
or
call
xor
cmp
add
sub
inc
mov
outsb
js
in
aas
xchg
pusha
mov
dec
push
leave
shl
push
ret
hlt
dec
or
data16
mov
fisubrl
dec
inc
cmp
or
inc
cmpsl
aad
enter
shlb
inc
or
add
sub
dec
sarb
push
pop
lret
lcall
into
xchg
fisttps
dec
jno
xchg
xor
dec
fldt
hlt
test
mov
adc
mov
shlb
mov
ffree
jl
cmp
addr16
in
inc
xor
ja
mov
add
jle
or
jno
push
aas
test
sahf
call
and
cmp
hlt
loop
dec
push
lcall
mov
mov
and
xor
sbb
jo
xor
mov
hlt
xor
cli
mov
rolb
jge
lcall
sbb
fstpt
data16
lcall
cvtpi2ps
xchg
and
pop
dec
cmp
xchg
ficompl
stos
jecxz
adc
push
repnz
lods
sub
dec
dec
add
enter
rcll
add
btr
pop
push
mov
insl
sar
mov
aas
loopne
js
scas
notl
pop
popf
shrl
mov
scas
inc
aas
xchg
inc
mov
rcrl
pop
adc
ret
mov
cs
cld
int3
lret
mov
mov
jo
insl
fmuls
jp
jne
mov
xchg
inc
add
clc
popf
cmp
out
dec
or
data16
in
stc
inc
pop
shll
mov
pop
sarb
lret
loop
iret
iret
jno
jnp
insb
sbb
aas
insl
xor
lret
pop
sbbb
pop
orl
rclb
mov
jp
dec
pop
mov
and
dec
gs
push
jns
and
sbb
mov
jp
cmpsb
mov
aaa
addr16
cmp
ret
or
jns
xchg
out
cmp
mov
mov
xchg
out
das
lahf
mov
xchg
repz
into
jne
add
jecxz
or
adc
int3
hlt
and
sahf
sahf
mov
dec
dec
sbb
jle
or
arpl
fwait
xor
cmp
insl
cmc
fisttps
and
pop
sahf
adc
pop
or
mov
push
add
rolb
out
or
pop
adc
out
cmp
shl
jmp
std
xchg
mov
lods
les
sti
sahf
push
pop
push
jecxz
add
mov
adc
fcompl
into
mov
inc
shll
pushl
pop
sbb
sbb
dec
cmc
xchg
xor
cmp
jno
loopne
movsl
adc
xor
pop
out
xor
mov
xchg
jno
maxps
dec
sbb
gs
dec
sbb
adc
xchg
pop
out
pop
or
jmp
stos
daa
out
fnstcw
mov
shl
jle
rolb
mov
notb
loopne
insb
add
xor
lcall
stc
xchg
insb
xchg
sbb
andl
adc
jno
iret
repnz
xchg
pop
insl
pop
mov
cs
xchg
stos
movsb
add
pop
fisubl
or
adc
ljmp
inc
sub
adc
in
shrb
movsl
add
jne
ja
adc
dec
sub
push
xor
add
icebp
mov
mov
mov
cmpsb
enter
cltd
bound
call
mov
mov
cwtl
jne
aad
or
pop
fstps
sub
dec
jmp
rcrb
pop
xor
mov
imul
mov
mov
pop
dec
sahf
call
mov
jecxz
push
or
lods
xchg
mov
sbb
push
ds
inc
cmp
aaa
ret
dec
add
push
outsl
jnp
mov
pop
lcall
fstl
cmc
lock
mov
lret
push
test
flds
js
gs
scas
in
jns
jo
ds
pop
sub
rep
sbb
mov
test
sub
sbb
int
jns
mov
fwait
dec
jnp
inc
adc
sbb
cld
cmc
rcl
pushf
push
in
xchg
xchg
jg
mov
jbe
mov
or
inc
dec
loope
and
add
mov
xchg
push
outsl
pop
test
dec
mov
mov
xlat
in
sub
adcb
mov
cld
sub
sub
mov
mov
icebp
pop
pop
and
fs
mov
aad
std
mov
cmpsl
adcb
jecxz
mov
xor
repz
icebp
lods
std
push
dec
dec
push
push
cmc
jle
shl
shrb
and
cltd
adc
xchg
shll
mov
cmp
inc
or
pop
rorl
mov
sub
adc
jge
adc
pushf
xor
leave
lds
jb
xor
or
ljmp
push
mov
dec
fwait
aam
in
mov
xchg
icebp
fidivrs
mov
mov
push
imul
xchg
push
sahf
add
push
pop
inc
imul
aam
aad
ficompl
adcb
insl
sub
jge
rcll
cmpb
or
sbb
pop
dec
mov
les
jmp
jecxz
cmp
xor
inc
icebp
push
insl
cmp
leave
in
sub
inc
jne
insl
js
push
dec
inc
mov
sub
sub
rcl
leave
rcll
imul
movsb
sub
not
mov
mov
outsl
movb
sub
mov
in
adc
jge
dec
call
and
aaa
cmpsl
insb
sbb
inc
sbb
fwait
cli
pushf
mov
insb
and
mov
sti
cmc
push
std
sti
lahf
sub
test
inc
xchg
xchg
stc
fildl
pop
mov
xor
pop
push
stos
mov
cwtl
test
repnz
pop
adc
test
or
in
sub
fs
adc
jp
mov
pop
cld
or
dec
or
gs
cs
fiaddl
mov
stos
mov
stos
inc
lods
insb
cmp
fucom
movsl
testl
cwtl
test
jg
push
push
scas
mov
jnp
loopne
hlt
mov
pop
leave
add
mov
and
sbb
add
pusha
add
cmc
lcall
push
repz
xor
adc
cmp
push
ret
cmp
pop
add
xor
push
inc
jle
inc
sbb
xchg
sbb
dec
and
mov
cmpsb
pop
xchg
mov
fldenv
adc
icebp
inc
or
dec
iret
or
mov
xchg
push
mov
jae
cltd
xor
mov
mov
adc
aaa
call
sbb
negl
sbb
out
adc
outsl
push
and
cs
out
into
mov
and
jne
xor
sti
and
sbb
jae
jnp
xchg
shlb
aaa
push
push
xchg
mov
inc
in
into
std
push
jo
scas
sbb
pop
push
push
outsb
ja
inc
lods
push
iret
dec
fs
adc
out
inc
mov
or
push
cmp
daa
inc
lret
xor
rcrl
mov
xchg
test
out
es
stc
ljmp
dec
int
lds
jl
adc
and
sbb
mov
mov
xor
pushf
jne
sar
movsl
shlb
stos
outsb
int
jne
dec
pop
sub
in
ljmp
mov
mov
dec
adc
cmp
xchg
sub
or
ja
push
dec
scas
ja
test
jae
push
pop
mov
mov
add
jmp
lret
es
pop
ljmp
in
mov
aaa
fdivrs
loop
xlat
xchg
cs
jo
xchg
es
push
cli
out
ficompl
xchg
in
aas
test
enter
incl
dec
jge
or
sbbl
fiaddl
jmp
movsb
cmp
mov
pop
sub
and
inc
int
lcall
and
test
cltd
pop
and
adc
movsl
pusha
aas
add
loop
mov
pop
mov
repz
test
sub
or
rolb
clc
fldt
sti
sub
lret
inc
outsl
lret
mov
arpl
mov
daa
jge
cmc
pop
test
cltd
or
mov
decb
stos
loop
rcll
sti
xor
movsb
fwait
dec
or
sub
jecxz
xor
imul
dec
pusha
cmp
and
adc
mov
clc
std
sub
cmp
push
fistl
mov
inc
dec
in
jle
adc
imul
repnz
cmp
pop
pop
xchg
mov
stos
xchg
jno
int3
mov
mov
fidivs
cmc
rcrl
xor
lret
add
es
pop
jp
mov
inc
xor
enter
dec
or
dec
loopne
insl
cwtl
pop
xchg
sbb
arpl
pop
lahf
pop
push
lods
sub
sub
sbb
xchg
aad
jge
xchg
sbb
out
pop
insl
add
stos
loope
enter
pop
push
movsl
imul
das
mov
push
sbb
sub
sahf
cltd
iret
mov
jbe
imul
add
ljmp
insb
imul
sti
std
cmp
and
popa
cmp
rorl
movsl
scas
dec
jp
mov
sub
adc
test
mov
inc
pop
and
dec
jmp
mov
sbb
ss
jecxz
int
jle
jbe
pop
add
mov
push
jo
push
mov
mov
jae
out
pop
mov
push
mov
hlt
inc
mov
and
das
or
inc
push
orl
scas
mov
lret
div
adc
add
add
pusha
scas
je
dec
jnp
insb
and
push
or
in
std
stos
cmp
sub
mov
mov
hlt
in
jb
inc
scas
or
dec
repz
add
stc
pop
add
mov
cld
lea
xchg
mov
or
mov
loopne
gs
into
out
fdivs
notb
add
je
les
push
and
mov
gs
inc
imul
xchg
hlt
nop
sbb
xchg
dec
int
xchg
in
adc
mov
jns
dec
lcall
outsl
mov
xor
into
cmp
popa
xor
fstl
add
xchg
lret
jb
int3
aam
cmc
ja
or
test
out
int3
add
pop
xor
xor
sub
xlat
mov
pop
popf
push
sbb
cmp
mov
cmp
repz
or
or
xchg
addl
clc
add
dec
out
sub
movl
and
call
lcall
cs
movsl
arpl
std
jnp
rcrl
jp
xor
lods
dec
data16
pop
fdivr
xor
pop
inc
popa
xor
sbb
add
fistps
loop
lcall
sub
mov
lods
pop
xchg
inc
lahf
sub
push
scas
xchg
or
inc
mov
sub
outsl
and
and
cmp
shrl
lods
divl
mov
push
test
cmp
or
sub
xor
inc
shll
scas
test
add
stc
add
stos
je
mov
and
js
ljmp
cmp
out
loope
pop
add
das
and
pop
rcrl
rclb
inc
xchg
les
adc
lods
cmp
add
jbe
xchg
fldt
fs
pop
cmp
out
loope
in
out
jp
and
cld
pop
jno
rol
fs
cmpsl
movsl
sub
sub
setle
pop
xor
popa
pop
push
mov
stos
ror
imul
clc
add
push
call
xchg
ja
out
inc
pop
mov
negb
add
push
lea
jecxz
cmp
sub
pop
fidivrl
inc
mov
xchg
scas
test
jno
movsw
mov
cmp
dec
outsl
test
mov
stos
mov
rclb
pcmpgtd
pushf
and
xchg
mov
popa
das
jb
lods
push
cmpsb
les
dec
faddl
or
push
sbb
fisttpl
mov
inc
stc
xchg
lcall
xlat
cmpsl
push
inc
sub
adc
and
push
aam
rorb
sahf
popa
arpl
mov
in
mov
xlat
in
fnsave
push
add
js
mov
cmp
inc
push
mov
mov
out
adc
sbb
in
xchg
jbe
in
push
xor
xor
fsubrs
mov
and
lea
push
cwtl
nop
in
sar
jnp
imul
jp
mov
xlat
movb
ret
iret
ds
lods
mov
mov
sti
push
xlat
fsubs
push
nop
add
iret
mov
sbbl
mov
mov
aad
cmp
mov
cltd
xchg
arpl
lods
xchg
mov
and
xlat
pop
sbb
int
shl
inc
xor
dec
aad
jb
sub
es
in
cli
adc
orb
imul
sub
call
mov
sarb
mov
sub
and
stc
adc
pop
pushf
jnp
movb
cmc
stos
lods
sbb
xlat
mov
jne
cmp
pop
adc
xor
cltd
iret
insb
or
pop
inc
mov
fs
xchg
and
cmp
ljmp
test
fimull
xchg
int
in
invd
pop
test
jae
dec
iret
sbbb
mov
or
mov
sti
inc
or
or
xor
lods
cmp
mov
mov
dec
dec
enter
mov
adc
xorl
inc
aam
fisubs
int
and
add
jmp
push
fwait
test
popf
push
adc
in
add
and
xor
mov
xchg
out
jg
mov
xchg
in
flds
dec
int
inc
loop
push
lds
jecxz
cmp
shl
push
push
in
xor
das
enter
push
cmpsl
mov
int3
lret
cmp
int3
stos
filds
cmp
xor
dec
in
jbe
add
scas
add
or
ds
jno
enter
jp
stos
sbb
mov
pusha
jno
sbb
push
fwait
lea
jecxz
inc
sbb
xor
sti
loopne
fstpt
push
mov
mov
jnp
jbe
xor
ret
jecxz
sti
jp
test
mov
add
sbb
and
cwtl
cs
inc
adcl
leave
mov
sarl
cmpsb
fisubrl
scas
rcll
rcrl
or
test
sub
cmp
aaa
sub
sub
testb
push
test
mov
icebp
xor
or
repnz
mov
fistpl
mov
push
rorb
pop
cmp
jle
pop
mov
inc
cld
mov
sub
clc
inc
outsl
cwtl
inc
sahf
ss
mov
inc
test
dec
pop
adc
cmc
mov
mov
adc
or
data16
push
mov
movb
jmp
out
adcl
or
popf
xor
mov
mov
iret
xchg
or
test
xor
jnp
mov
outsb
std
adc
idivl
push
out
subl
into
cli
jbe
add
test
fstpl
xor
xchg
dec
mov
and
sbb
push
das
push
addl
lret
in
clc
arpl
xchg
sbbb
fwait
xchg
decl
push
scas
test
push
out
jle
jo
movl
dec
jmp
cmp
adc
es
jb
jno
mov
dec
push
pop
pop
xor
imul
fisubl
je
clc
int
test
aad
xor
enter
pop
add
mov
aaa
xchg
or
leave
in
popf
pop
insl
pushf
into
xlat
jmp
fiadds
add
sbb
mov
xchg
pop
inc
and
inc
adc
mov
ljmp
pusha
lds
dec
mov
xchg
loopne
dec
je
daa
sub
mov
adc
xor
lret
jl
push
dec
pop
aaa
and
lods
push
xchg
bound
in
xchg
lock
stc
cmp
inc
inc
stos
in
or
jecxz
call
lcall
add
xchg
iret
push
fnstsw
inc
ds
add
insb
add
mov
or
cmp
shlb
inc
cmpb
loopne
int
cld
loope
push
cmp
mov
or
mov
jno
xchg
adc
mov
es
je
rcrl
pop
es
ds
add
dec
cmp
out
jb
mov
mov
addr16
repnz
mov
add
sub
add
sbb
dec
xchg
add
fisubl
pop
aas
cmp
leave
cmp
jae
jo
pop
xchg
cwtl
jns
cmp
in
sti
movb
adcb
sub
daa
daa
adc
out
adc
lods
pop
fcompl
push
call
push
mov
scas
push
pop
mov
mov
add
mov
adc
test
jge
pop
inc
std
mov
test
mov
fsubrs
hlt
repz
sbb
jge
repz
adc
inc
push
fcomps
sbb
andb
jae
sahf
inc
add
or
cmp
clc
inc
sbb
cwtl
cmp
jecxz
aad
mov
inc
mov
js
cmpsb
inc
leave
inc
lret
ljmp
imul
inc
mov
das
cltd
jne
push
jno
mov
push
lods
pop
xchg
push
int
jne
xchg
cld
push
sub
lahf
fsubr
jecxz
mov
or
cmp
mov
lret
sbb
pushf
mov
stos
cmp
sbbl
xlat
stc
arpl
cmp
sbb
adc
test
cwtl
out
jg
frstor
push
mov
lret
loopne
pushf
ss
dec
push
arpl
dec
jbe
or
negl
mov
sbb
add
in
xor
pushf
ljmp
push
lcall
sub
xchg
enter
xor
jne
add
and
cmp
sti
xor
bound
testl
and
sbb
lds
push
jno
sbb
mov
sub
adc
jp
out
int3
imul
add
dec
sub
popf
loop
movsl
cmpsb
xor
data16
mov
outsl
fmul
shlb
ret
sub
data16
dec
cmp
push
out
add
nop
pop
mov
cld
push
adc
mov
jno
mov
sbb
test
leave
cmp
pop
loop
jae
sbb
push
shll
dec
stos
pop
stos
lods
pop
cwtl
jg
das
pop
sub
xchg
adc
mov
xor
pop
add
mov
ljmp
jae
sbb
loop
cwtl
jp
sub
cmc
sti
nop
sbb
jnp
js
pop
test
loope
push
rcll
adc
mov
scas
dec
mov
fisubl
cmp
xor
xchg
lods
nop
pop
or
ss
rcll
cltd
pop
jmp
or
or
jae
cltd
sbb
mov
or
shlb
les
fldpi
xor
sbb
test
mov
in
xor
aas
mov
mul
insl
pop
mov
jnp
push
push
bound
roll
mov
push
mov
out
scas
push
jae
dec
scas
dec
or
arpl
leave
jmp
call
out
xchg
test
faddl
roll
jbe
shrl
adc
aaa
ss
call
test
test
in
daa
loop
add
xor
xchg
add
mov
ljmp
xchg
mov
cmp
xchg
pop
out
jp
dec
xchg
push
push
les
test
rorb
or
dec
test
mov
mov
call
ljmp
aam
and
push
nop
adc
jae
dec
enter
shll
and
dec
or
lds
xor
inc
clc
mov
push
or
and
in
dec
dec
sbb
les
cmc
dec
int3
push
inc
jmp
incl
mov
mov
pushf
sub
mov
and
jmp
inc
aad
fisubrl
data16
mov
nop
cmp
mov
sub
xor
jg
push
cmp
dec
rcll
mov
out
shrb
jmp
or
mul
loope
inc
inc
sub
int3
sti
je
xchg
sahf
divl
mov
inc
lds
mov
jne
cmp
popa
fisubl
mov
fnsave
cmp
scas
into
fimull
in
lds
shlb
sahf
jne
sbb
loope
test
fcmovb
xor
inc
sub
bound
aad
or
mov
lcall
sarl
sub
or
push
mov
dec
adc
ljmp
mov
test
push
inc
sub
xor
jbe
add
jb
cmpsl
push
out
xchg
mov
mov
out
pop
mov
mov
dec
jne
int3
shrb
mov
out
ss
jp
movsl
test
lcall
ds
cmp
mov
bound
sub
lods
cmc
mov
clc
dec
sub
in
outsl
xor
pop
addr16
das
cli
push
cmp
lds
and
hlt
aam
sub
popf
dec
test
lds
or
popf
xor
fdivr
out
pop
xchg
push
sbbb
loopne
iret
and
pop
jo
data16
repnz
jne
sub
stc
inc
pop
sub
icebp
add
mov
adc
enter
nop
mov
in
repnz
push
hlt
fwait
std
cwtl
inc
jo
test
push
je
sub
dec
les
jecxz
neg
cmp
jmp
and
inc
ja
sub
je
adc
ret
fstpt
lds
cmp
loope
fstl
fidivrs
push
adc
sub
sbb
mov
mov
pop
sub
popa
mov
rolb
pushf
or
adc
rcr
mov
cmp
cmp
mov
nop
ljmp
xorb
adc
addr16
push
xchg
repnz
outsl
jbe
in
push
jp
xchg
push
or
xor
adc
dec
pop
daa
in
data16
aas
aaa
mov
repz
in
mov
cmp
jno
or
inc
aad
jmp
arpl
jbe
jne
ljmp
mov
lods
xchg
xor
xchg
repnz
pop
imul
outsl
xor
out
mov
idivb
jb
xchg
fdivrl
mov
xchg
inc
repnz
mov
xchg
mov
jne
mov
push
fdivrs
loop
or
pop
xor
jns
xor
pop
mov
fwait
pop
push
in
jmp
jbe
adc
cld
xor
pushf
adc
cmp
mov
cmp
std
popa
adcl
mov
loop
int3
jmp
and
mov
dec
std
loope
lods
dec
aaa
mov
outsl
mov
push
mov
sti
cld
sbb
mov
cmp
imul
dec
xchg
enter
xor
in
sub
push
pop
or
and
js
movsb
fucomp
jecxz
les
and
push
add
or
popa
insl
cmp
inc
fnstsw
ffreep
lret
popa
out
xchg
pushf
pop
pop
sub
popa
jo
into
pop
push
fwait
cmpsl
jmp
xor
mov
jo
adc
subb
aaa
fisttpl
push
dec
mov
push
add
aas
pop
out
pop
adc
in
and
mov
fcoml
or
icebp
pop
xchg
popa
int
fdivs
cmpsb
les
push
sbb
mov
and
fbld
mov
into
loop
sbb
in
sahf
hlt
fs
jle
in
jp
xor
xchg
jns
ljmp
adc
icebp
pop
repz
cmp
jl
jmp
push
inc
mov
or
pushf
mov
fmuls
ret
push
sub
sbb
mov
pop
pop
call
mov
test
and
aad
cltd
lret
mov
sbb
jb
or
push
test
js
push
movsl
fiadds
xor
psrld
ret
rorl
iret
out
jae
add
adc
data16
lahf
stos
shll
adc
stos
jnp
jl
int
mov
test
enter
int3
into
xchg
sbb
and
mov
es
or
cmp
stc
jb
add
add
scas
int3
insl
mov
test
aam
shrb
mov
or
fistpl
gs
out
insl
loopne,pn
mov
xor
cmp
in
jb
push
jno
sti
push
in
cltd
ds
sub
cmp
inc
rolb
or
sbb
xor
in
mov
mov
cltd
sub
adc
les
outsb
and
aaa
mov
mov
out
mov
clc
dec
or
mov
movsb
sbb
dec
inc
rclb
xchg
insl
inc
adc
cwtl
mov
dec
xor
addr16
into
lds
rcll
mov
test
pushf
cltd
or
cmpsl
pop
notl
pop
pop
xor
jb
aad
addr16
cld
cmp
mov
ljmp
rclb
mov
stos
xor
popl
out
xor
push
orl
mov
mov
inc
in
jp
xorl
jmp
sbb
or
inc
mov
cs
lods
call
fsubl
cmp
mov
cmc
pop
ss
push
in
mov
cwtl
mov
mov
adc
fadds
jns
movsb
add
xchg
fcoml
xchg
jae
aaa
pop
xchg
or
cwtl
es
or
mov
cltd
std
dec
js
inc
xchg
imul
pop
or
fcompl
test
adc
xchg
fwait
sub
pusha
mov
add
sbb
ret
sbb
xor
push
mov
or
pop
add
mov
mov
and
mov
pop
pop
mov
xor
in
test
mov
or
xor
ficoms
mov
pop
lock
push
call
cltd
pusha
cmp
scas
pop
sub
scas
aaa
push
in
fcoms
ror
rcll
addr16
int
push
sar
roll
mov
out
lods
inc
push
pop
cmc
jo
nop
adc
repz
or
jg
in
and
adc
imul
dec
scas
lods
and
lods
shlb
pop
inc
iret
cltd
mov
mov
inc
mov
cmp
push
cmp
inc
sub
lahf
mov
nop
cltd
lods
cli
push
adc
sub
jle
or
xchg
add
sahf
mov
mov
lahf
enter
stos
inc
lea
shll
lcall
and
dec
cs
xor
ljmp
pop
dec
stos
adc
sub
test
outsl
sub
ljmp
es
notl
cwtl
in
inc
push
cmp
cmp
or
or
bound
jp
adc
mov
cltd
adc
and
cmp
nop/reserved
sti
jne
call
aad
insb
mov
cmpsl
enter
dec
mov
subl
lods
adc
shlb
mov
ror
lods
jmp
add
sar
nop
sub
mov
insb
or
lcall
xor
adc
stos
dec
fidivrl
jmp
clc
jecxz
and
fildl
adc
fs
ret
and
xchg
mov
dec
sbb
bnd
aam
jecxz
lahf
ret
jp
and
enter
imul
mov
sub
decb
adcl
cli
adcl
push
jbe
jns
shlb
push
fcomps
or
movb
mov
mov
cmp
jle
add
mov
lcall
aas
test
repnz
ljmp
inc
daa
rorb
nop
xchg
jbe
mov
arpl
bound
fcompl
imul
aam
out
mov
std
xchg
pop
stos
ds
mov
mov
dec
pushf
hlt
push
popf
jge
cltd
mov
subb
mov
xor
pop
jne
mov
inc
push
push
rcr
fucomip
mov
mov
or
lret
arpl
stc
imul
jl
add
push
insb
sti
dec
push
cmpl
dec
sahf
inc
imul
sub
push
in
or
pop
cmp
add
pop
fildll
jnp
sti
dec
push
mov
push
das
std
aam
xor
into
cmp
or
jmp
lock
xor
sahf
daa
insb
out
mov
sub
mov
cmpsl
lret
jo
mov
cmp
je
sub
pop
xchg
inc
or
jle
pop
jo
mov
xchg
popf
xchg
mov
fcompl
into
out
rorb
testl
loop
xchg
add
rol
dec
mov
dec
pop
mov
mov
adc
cltd
jmp
stos
leave
mov
sbb
mov
aas
xor
sbb
es
imul
jecxz
mov
cmpsb
fiaddl
lods
int
leave
rcrl
cmpsb
dec
popf
mov
jg
adc
adc
notb
xor
js
pusha
stc
pusha
jae
and
movsl
and
mov
cld
arpl
xchg
test
adc
repz
js
and
aad
xlat
dec
xchg
jno
incb
sbb
stc
or
mov
stos
push
outsb
ljmp
add
sbb
xchg
xchg
popf
mov
cmp
dec
out
mov
stos
ret
stos
lahf
cmc
jp
out
mov
aaa
adc
sbb
int3
add
xor
xchg
xchg
mov
pop
mov
dec
outsl
ret
jmp
pusha
gs
push
jg
push
out
call
int
andb
and
pop
divl
out
jnp
xchg
xchg
int
sub
cmp
mov
jl
adc
push
add
lret
mov
div
testb
jb
out
jp
shl
mov
out
dec
lock
add
inc
mov
or
pop
sti
rcrb
mov
cs
test
sti
test
mov
inc
movb
pop
push
daa
lds
scas
xchg
js
sub
sub
cmp
ja
or
mov
jge
lret
jle
adc
insl
mov
aas
and
lret
inc
mov
lods
lahf
xchg
cli
xchg
movsl
xchg
ljmp
push
mov
jecxz
jg
push
out
fs
push
xchg
xor
jae
xor
cmp
fs
rorl
push
repnz
imul
gs
mov
push
subb
inc
xchg
std
mov
flds
xor
xchg
cmp
push
pop
insl
aam
orl
mov
shrl
ds
dec
arpl
mov
pop
fistpl
or
nop
dec
mov
dec
mov
mov
fsts
jmp
fmuls
mov
push
xchg
push
repnz
push
daa
or
and
sub
or
mov
sbb
and
mov
notl
inc
cmp
dec
scas
aad
or
aad
mov
adc
out
sbb
pop
cmp
cwtl
idivb
negb
inc
mov
pop
outsl
mov
mov
aam
daa
inc
push
rcl
call
jne
shlb
mov
and
pop
in
mov
rcr
push
or
add
mov
adc
ffree
int3
int
cli
idiv
sbb
add
mov
fistl
push
jge
adc
add
inc
fmul
jl
outsl
cmp
in
dec
sub
fisttpl
out
sbb
addb
sbb
cmp
mov
inc
scas
jle
mov
dec
adc
cmc
add
push
mov
cmpsl
cmpsb
xor
inc
out
and
sahf
adc
dec
into
mov
xor
push
sbb
lcall
cli
inc
add
out
push
insl
sbb
lret
cltd
adc
gs
add
xor
pushf
shll
sbb
call
mov
xchg
popf
dec
lock
rclb
mov
or
out
mov
repnz
data16
mov
rorl
aaa
fcomip
sub
clc
stc
in
mov
and
mov
das
jb
stos
movsb
stos
addb
xor
in
pop
nop
and
mov
popa
out
test
pop
loopne
dec
sub
cmpsb
arpl
ret
pop
in
inc
sbb
lds
jnp
fs
popf
jns
sub
mull
imul
cwtl
mov
lods
push
test
stos
mov
decl
lahf
cmp
inc
rolb
xor
xchg
pop
add
mov
jno
fldt
mov
jg
push
mov
sub
data16
cmpsb
sti
push
or
mov
imul
clc
sahf
mov
filds
inc
mov
pusha
inc
mov
cmpsb
pop
lea
or
dec
out
xchg
mov
adc
xor
or
popl
in
cli
push
push
lock
inc
inc
dec
ja
repnz
push
or
shld
jp
mov
pushf
xchg
addr16
pushf
cmc
jns
mov
clc
ds
ljmp
aas
cld
sbb
push
push
pop
mov
jg
jne
outsl
mov
enter
mov
jge
movsl
repnz
cmp
jecxz
cmp
cs
cmp
jne
dec
mov
push
mov
jle
dec
push
mov
ljmp
inc
jmp
add
mov
pop
addr16
pop
lods
adc
pop
sbb
insb
or
clc
fwait
xchg
dec
mov
fistpl
pop
dec
and
std
insb
lcall
pop
gs
daa
adc
push
mul
lds
lcall
js
sahf
dec
repnz
test
fsub
mov
movb
jae
pop
pop
ret
std
lock
cltd
mov
or
ljmp
popa
add
xchg
imul
pop
testb
movsl
clc
cmovge
insl
jb
or
fbstp
dec
repnz
inc
mov
fidivl
xor
scas
sbb
jnp
cmp
sbb
or
jnp
cli
sub
movsb
jge
inc
pop
out
jmp
jmp
je
pushl
mov
aam
jmp
mov
cmp
dec
loop
sbb
ret
fisubrl
icebp
push
mov
sub
adc
push
outsb
out
jle
add
mov
fidivrs
addr16
addr16
rorl
lock
jecxz
gs
mov
mov
gs
cmpsl
and
mov
mov
jns
sbb
icebp
adc
adc
lcall
mov
dec
mov
aas
jmp
rorl
adc
and
inc
mov
stos
xchg
rcll
or
popw
cltd
add
out
ds
lret
aaa
push
scas
jge
fistps
sbb
subl
rclb
int
mov
js
xchg
and
push
cs
sub
sahf
add
ficoms
fiadds
jg
push
xor
in
mov
xor
fwait
sub
shrl
sahf
test
and
xchg
lahf
scas
cltd
adcb
es
mov
add
shlb
jno
fstl
arpl
mov
adc
dec
cs
push
rcr
nop
mov
add
mov
push
xchg
ret
dec
pop
in
decl
adc
xor
clc
ljmp
in
inc
stos
mov
mov
adc
es
sub
xchg
aam
or
push
cmpsl
iret
test
mov
push
test
sub
dec
lods
fs
sbb
jg
xchg
xchg
xchg
arpl
jo
dec
mov
loope
or
and
inc
test
jl
call
ret
mov
add
loop
add
xchg
mov
jle
pop
ret
push
sbb
add
ret
add
push
mov
mov
negb
mov
popa
adc
test
mov
daa
and
sub
sub
fists
xchg
data16
dec
inc
ss
jle
cmc
pop
mov
push
xchg
or
popa
adc
push
adc
adc
cmp
fdivrl
ficoms
pop
sarl
inc
adc
es
xchg
xor
pop
sbb
insl
mov
add
enter
pop
fistpll
dec
js
lds
push
pop
fwait
sub
mov
lret
pop
push
das
jbe
sbb
mov
xchg
cmp
mov
frstor
adc
lods
push
rclb
push
das
lcall
ret
cmp
call
fdivp
adc
repz
jp
adc
aam
xchg
xor
out
fmul
push
mov
das
call
shlb
fstpl
test
data16
dec
lahf
adc
push
add
dec
movsb
dec
shlb
loope
or
adc
push
pop
fwait
nop
out
cmp
fidivrs
lret
mov
adc
xor
leave
lds
push
jl
pusha
mov
fwait
mov
fistpl
and
pop
xchg
xchg
jae
push
pop
fsubs
fiadds
es
popf
cmp
mov
aam
and
movsl
fildl
xchg
dec
shlb
jo
xchg
ds
push
das
cltd
mov
outsb
in
push
adc
in
jbe
dec
je
jns
cld
insb
insl
mov
notb
outsl
add
arpl
lods
fdivrl
jmp
or
sub
jae
push
test
mov
es
inc
fdivrp
stos
test
test
dec
and
pop
imul
loopne
push
push
jno
repnz
jno
mov
and
mov
pop
aad
loope
add
inc
mov
mov
pusha
add
sbb
arpl
pop
es
cmpsb
and
addr16
div
mov
pusha
mov
mov
dec
or
cwtl
orb
and
fld1
aaa
xchg
or
push
inc
or
jg
push
pop
mov
mov
cmpsb
adc
in
das
or
sarl
outsl
lret
into
je
idivb
ret
lods
notb
and
push
daa
xchg
scas
add
mov
popf
xchg
ja
mov
xchg
cmc
pop
xor
or
add
cmc
or
adc
test
sbb
xchg
sbb
clc
dec
bound
data16
das
add
sbb
dec
je
cmp
dec
sub
inc
jae
sbb
in
out
mov
mov
mov
jnp
add
or
mov
or
aam
rclb
push
xchg
outsb
add
push
stos
and
xchg
inc
pushf
mov
outsl
cmpsb
fwait
push
movsb
test
sbb
jb
push
or
imul
xor
mov
pop
sbb
inc
popf
arpl
cmp
xor
pop
pop
cmp
icebp
mov
and
mov
cltd
daa
mov
push
mov
dec
sub
jbe
cmp
mov
jge
cs
sub
pop
std
roll
dec
jmp
out
cmpsb
in
push
and
sbb
lds
imul
sbb
fdivl
addl
xor
mov
mov
movsb
movsl
ss
test
jle
add
push
scas
jle
ja
jg
add
and
push
jno
jno
add
dec
or
cmp
in
mov
xor
popa
movsb
sub
dec
or
repnz
mov
idivl
popa
leave
add
jae
xor
repnz
xchg
xchg
sub
mov
add
fs
arpl
gs
rcll
push
adc
aad
jle
pushf
xor
pop
fstpt
ret
iret
stos
sub
mov
outsl
scas
inc
dec
jne
sti
aas
pop
imul
fsts
je
lods
push
mov
popf
dec
in
adc
xchg
pop
ja
rcll
cld
adc
push
sarb
stos
xchg
lods
icebp
int3
push
adc
sbb
mov
xlat
mov
adc
lods
mov
cli
xor
fists
or
je
xchg
xchg
sub
ret
shr
jae
enter
rcll
mov
push
loope
fisubrs
xchg
cmc
punpckhbw
add
push
ret
rolb
sbb
sub
roll
imul
pinsrw
outsl
repz
scas
or
jbe
sbb
jmp
push
add
xchg
popa
mov
lods
sub
iret
pop
jg
out
dec
pop
int
add
mov
decl
jae
std
sbb
cltd
sub
daa
cmpsb
sti
inc
pop
addr16
hlt
xchg
sti
je
mov
or
xchg
ret
lea
imul
adc
pop
lahf
mov
pusha
out
lods
mov
sub
iret
fldt
subl
add
dec
inc
test
xor
rcl
or
jp
insb
clc
xor
punpckhbw
jnp
enter
and
sbb
cmp
mov
mov
dec
paddd
shlb
movsb
je
outsl
out
nop
inc
out
sub
lock
mov
daa
fistl
or
sub
insb
add
fisubrs
mov
cmc
imul
f2xm1
insb
sub
dec
jecxz
inc
push
and
lret
push
dec
outsb
scas
dec
mov
lods
inc
push
adc
std
sbb
pop
mov
xchg
xchg
mov
mov
push
out
jge
mov
mov
inc
xor
lods
rcll
test
push
inc
inc
lcall
mov
cmpsb
cwtl
mov
test
les
or
lods
dec
inc
mov
sub
jmp
sbbb
lock
add
ljmp
sbb
or
sbb
pusha
mov
push
scas
ret
xchg
scas
sbb
negl
push
test
cltd
dec
push
rcll
stos
xor
push
xlat
das
xchg
sub
mov
lods
ljmp
mov
mov
cld
out
arpl
cli
sub
jle
xor
mov
lock
enter
push
inc
mov
sub
mov
xchg
pop
mov
rcr
mov
mov
sti
mov
pusha
and
jp
push
pop
repnz
fdiv
add
and
loope
call
fdiv
inc
rcll
mov
xchg
rcrb
sbb
xor
jmp
xor
inc
cmp
lock
cld
sub
jmp
sbb
dec
add
daa
mov
add
xor
popl
dec
movsl
mov
fisttps
orl
xchg
sahf
std
cwtl
mov
push
testl
push
jbe
test
dec
call
jmp
dec
stos
sbb
outsl
push
sub
push
mov
sbb
mov
adc
jmp
lret
mov
add
divb
sbb
pop
adc
mov
iret
popa
xor
cmp
mov
dec
repnz
pop
push
scas
sub
mov
inc
fscale
lds
insb
xchg
mov
js
int3
xor
push
mov
and
seto
lods
pusha
push
out
orb
pop
in
decl
sbb
sbb
in
mov
cld
mov
cmp
jmp
jge
adcl
dec
int3
ret
mov
cli
push
dec
pcmpeqw
inc
out
aaa
sar
inc
add
jno
mov
and
sub
cmpsl
jle
dec
inc
sbb
ja
xchg
test
or
mov
ficoms
push
mov
outsb
in
das
cmpsb
into
sbb
jns
cmp
mov
or
cmp
filds
test
cmpsl
cli
mov
mov
add
xchg
mov
or
outsb
imul
inc
jmp
dec
push
pop
xor
pop
jl
das
dec
push
cmp
in
cwtl
shlb
sbb
xchg
pop
push
or
enter
fs
sbb
scas
push
ljmp
sbb
data16
and
pop
dec
loope
in
xor
pop
mov
inc
cmp
push
subb
fs
rcrb
adc
push
push
pop
dec
pop
adc
and
xchg
mov
cli
cmpsb
lahf
in
insb
add
or
sbb
push
xor
add
xchg
push
xor
in
lahf
push
jp
push
mov
or
mov
aad
hlt
or
fmuls
lock
and
leave
shrb
or
out
mov
push
imul
add
divl
mov
inc
mov
xchg
or
jge
sbb
loopne
xor
pop
xorl
sbb
outsl
inc
xchg
arpl
movsl
std
lock
in
popa
xor
jae
ja
sahf
mov
lods
pop
pop
xchg
pop
std
shll
clc
loope
lods
inc
jmp
addr16
push
dec
idivl
loop
pop
xchg
rcl
mov
imul
mov
xchg
cmp
out
mov
pop
mov
lock
xchg
pop
xchg
adc
sahf
pop
xchg
cmp
push
pop
xor
cmc
pusha
loopne
ja
xor
xor
jo
lods
div
clc
adc
sti
jle
dec
push
or
aaa
xor
xchg
pusha
scas
and
out
adc
call
fisubrs
sub
sub
pop
add
mov
call
adc
sub
jno
nop
insl
cld
push
pop
pop
mov
mov
mov
loop
dec
outsb
or
cmp
popl
leave
pop
outsb
ret
inc
shlb
jmp
repz
pop
pop
notb
mov
mov
pop
cmp
sub
or
push
push
stc
and
jmp
inc
sub
icebp
cmp
sub
adc
inc
mov
ds
add
out
pop
push
jg
mov
loope
fnstcw
xchg
add
adc
scas
dec
xor
out
sbb
repnz
imul
dec
push
aaa
sub
fidivrs
or
imul
jmp
cmp
mov
test
dec
xor
xor
cwtl
lret
stc
ret
adc
in
sub
icebp
xchg
rcr
stc
adc
xchg
or
ret
xchg
fidivrl
mov
insl
out
mov
das
add
push
fistps
or
xchg
data16
fidivl
sarl
jle
int
ljmp
and
fistl
imul
test
add
shll
push
fldcw
repz
mov
pop
adc
aas
repz
sub
and
testl
pop
mov
jo
aaa
cmpsb
dec
ljmp
dec
push
inc
rcrb
int
out
sub
inc
popa
sub
xchg
add
sub
test
jbe
jnp
cld
inc
dec
mov
sub
mov
mov
mov
mov
fdivr
mov
cld
push
es
dec
xor
xlat
pushf
dec
jl
push
test
je
rcrl
pop
iret
xchg
leave
mov
jp
stos
pop
movsl
jb
mov
aaa
notb
shlb
adc
cmc
gs
ja
mov
mov
jle
jp
sub
int
pop
out
outsl
jge
scas
push
scas
mov
mov
jns
mov
add
subb
stc
adc
sbb
adc
negb
mov
iret
jae
sub
sarl
jge
pop
jb
jae
inc
push
lret
mov
cmc
and
jno
and
or
pushf
in
xchg
lods
std
cmc
outsl
inc
enter
ja
add
rclb
or
and
insb
sub
or
fxch
and
mov
subb
fmull
lods
je
jecxz
out
and
dec
xchg
mov
or
dec
psubusw
cmp
loopne
gs
aam
into
xchg
cmovge
insl
mov
lods
jbe
stc
ficoml
js
push
in
jo
js
sub
int
leave
sarl
cmp
imul
pushf
shr
call
push
in
cmp
sbb
popa
sahf
or
pushf
jae
inc
and
andl
stos
xlat
push
jge
or
test
xor
mov
mov
mov
cmpsb
popa
xchg
and
sbb
inc
test
arpl
call
cmp
test
jno
mov
add
mov
cmp
cld
test
jp
fisubl
filds
sbb
and
inc
sbb
icebp
cmp
sub
mov
cli
push
dec
mov
rorb
cmovg
std
and
mov
test
mov
jge
rcl
adc
mov
loopne
in
mov
adc
mov
pusha
sub
pop
xchg
dec
lds
in
xor
xor
jg
xor
add
lods
mov
enter
ja
lods
nop
xor
fisubrs
xor
fsts
test
xor
jg
sahf
test
xor
daa
sarb
xchg
push
out
pop
cmp
inc
ljmp
sub
lea
fwait
dec
bound
jle
enter
sbb
jp
pop
and
sbb
call
xor
jmp
add
mov
nop
pop
pop
loop
xor
mov
cmp
hlt
data16
mov
test
fsubrs
leave
js
mov
add
mov
idiv
arpl
lea
mov
push
hlt
sub
into
gs
pusha
cmpsb
fxch
call
aad
setno
testb
aas
or
mul
rcll
sub
in
loop
and
mov
adc
orl
push
ja
insb
rcrl
ret
les
push
xor
mov
push
cli
xor
addb
xlat
nop
push
sbb
adc
jmp
test
cmp
or
dec
aas
mov
push
lock
movsb
xrelease
mov
test
cld
addb
push
fwait
pop
push
mov
cmp
in
mov
cmp
test
mov
iret
out
jl
ret
icebp
movsl
loopne
mov
push
jecxz
pop
fldt
xor
test
lahf
mov
push
js
xlat
adc
mov
push
loop
test
ret
aad
pop
mov
add
push
xlat
bound
sar
or
movsl
icebp
out
scas
or
je
test
loopne
xor
jno
mov
jno
int
popa
push
pop
jns
push
fwait
jb
fistl
test
inc
lds
jne
mov
adc
scas
adc
push
sbb
adc
and
int
sbb
lret
lcall
xorb
dec
mov
aam
mov
fmuls
mov
les
fnstsw
jle
in
push
push
mov
lods
fisttpl
and
or
push
cmpsb
leave
stos
jns
xchg
pop
dec
cld
lea
negl
fcomi
test
sub
aaa
adc
in
ljmp
jnp
dec
cmc
jg
into
lea
sbb
movsb
in
call
push
or
sub
add
bnd
adc
xchg
std
cwtl
xor
sub
ss
daa
dec
iret
jb
pop
shrb
pusha
cmp
repz
jp
repz
pop
mov
sub
ds
ljmp
fisubs
lock
mov
or
rolb
mov
aas
and
and
shrb
mov
and
pop
xor
mov
and
sub
ja
jl
adc
or
sbb
xor
pop
mov
test
into
add
ret
cs
cmp
loopne
xchg
mov
jne
dec
xlat
aas
mov
sub
sbb
xchg
jb
out
mov
sub
imul
jo
sub
jno
icebp
cmp
dec
enter
dec
out
enter
xchg
cltd
pop
sub
mov
cmpsb
mov
mulb
bound
sbb
adc
mov
dec
mov
cli
dec
mov
or
loope
or
rorb
mov
lcall
mov
std
lds
xchg
dec
setb
loop
je
imul
inc
pop
sahf
lods
inc
and
ja
scas
cmc
test
gs
sbb
cmp
xchg
adc
fs
out
xchg
pop
nop
xor
cmpb
shlb
push
divb
fiaddl
mov
lods
cmp
sub
and
repz
shl
dec
orl
out
mov
dec
ljmp
or
ja
in
or
jae
xchg
jno
sub
mov
flds
add
cmp
and
and
ds
inc
pushf
push
adc
outsb
fdivl
out
movl
lcall
lret
mov
repz
stc
jl
inc
xchg
fisttpll
out
icebp
shrb
mov
sub
jb
aaa
dec
xlat
mov
shrb
cmpsb
push
xchg
stos
fsubrp
sub
pushf
ljmp
iret
jne
xchg
mov
inc
jge
sbb
rorb
lahf
sub
cs
in
cs
cwtl
nop
adc
xlat
cltd
push
fidivrs
and
add
int3
mov
mov
sti
cmp
pop
mov
std
jne
lods
adc
xchg
popa
xor
xor
sbb
addr16
les
xchg
and
cmp
aas
xchg
mov
sbb
movsl
aaa
xchg
mov
push
out
cmp
dec
bound
fistpl
pop
les
sbb
mov
add
cmc
mov
sbb
roll
dec
lret
loope
data16
insl
outsl
jge
flds
cmp
pop
jns
enter
sub
xor
jl
cmp
jmp
fld
adc
jns
jne
inc
mov
mov
sub
push
mov
es
jbe
fdivr
cli
mov
mov
add
push
jae
jecxz
or
mov
mov
fidivrl
loope
out
pop
fs
test
mov
mov
stos
nop
xchg
ror
insb
pop
sti
cwtl
mov
xchg
subl
and
adc
cmp
aas
fbstp
shl
add
push
out
mov
pop
les
xor
call
ss
pushf
jne
and
inc
hlt
adc
add
inc
mov
aas
sub
daa
es
cmp
push
ljmp
int3
aam
mov
js
mov
pop
stos
push
push
cld
scas
mov
insl
addr16
pop
dec
push
cmc
cld
fiaddl
sub
call
pusha
js
jp
fxch
pop
xchg
icebp
adc
imul
mov
sub
leave
cmp
out
jecxz
cmp
outsb
push
mov
mov
and
out
fldl
lods
outsl
repz
pop
mov
and
xchg
fdivl
mov
rol
outsb
iret
clc
push
pop
sub
int
lahf
adc
arpl
cmc
cmpsl
lods
out
sub
and
int
mov
mov
xchg
jb
mov
push
hlt
jo
dec
out
test
or
mov
fbstp
xor
in
test
fmuls
roll
das
xchg
in
scas
cmc
mov
sub
ror
and
test
pop
insb
mov
jns
shlb
ja
pop
repz
clc
call
dec
adc
xchg
mov
movsb
dec
out
mov
scas
in
lret
outsb
push
xor
or
sub
mov
push
and
stc
and
nop
in
loope
add
sub
lahf
addr16
popa
or
shlb
aaa
push
and
std
lds
jp
jb
jg
in
std
xchg
and
push
testb
repz
in
xchg
je
and
fwait
inc
mov
cmp
adc
add
out
setb
xor
jmp
movsb
pop
and
push
stc
adc
lret
add
and
in
call
lahf
xchg
les
std
fdivl
enter
cmp
adc
or
cmpsb
test
fsubrl
lock
fsubs
pusha
mov
cld
clc
jl
addl
pop
movsb
movsl
mov
mov
lahf
mov
js
adc
int
mov
xchg
add
lods
cwtl
mov
movsl
stos
or
dec
jmp
and
pusha
add
lea
jno
loop
sbb
insl
add
inc
addl
pop
dec
bound
mov
mov
xchg
imul
ds
push
repz
loop
ljmp
insl
sub
imul
pusha
pop
andl
flds
add
jb
adc
loop
cmp
or
stos
movsl
xchg
hlt
jl
pop
nop
sub
stos
test
mov
push
lods
push
push
mov
ret
repnz
add
cmp
inc
pushf
es
test
mov
mov
ja
xor
mov
jb
in
sbbb
mov
addr16
push
sub
sti
mov
outsl
imulb
or
gs
mov
jp
les
or
and
in
cmc
push
decb
sub
idivb
ret
jnp
xor
mov
pop
ljmp
ljmp
scas
popf
out
rcl
pop
ljmp
mov
and
dec
mov
mov
test
lahf
in
fidivrs
mov
sbb
xchg
jnp
xchg
mov
xchg
lcall
pop
sub
addr16
lea
aam
adc
cmp
mov
xchg
dec
mov
cmp
jge
ss
out
sbb
push
sbb
mov
dec
xchg
cwtl
lods
jbe
arpl
mov
insb
or
lret
fbld
jae
imul
push
push
and
ljmp
pop
mov
sub
sub
mov
imul
dec
mov
add
popa
pop
inc
loopne
mov
enter
push
hlt
and
ret
push
mov
iret
add
mov
ss
xchg
das
imul
push
sub
dec
cmc
cmp
jno
pop
lock
pushl
mov
jnp
nop
shll
insl
repz
xorl
es
add
int
lods
es
xchg
fwait
mov
je
jno
imul
pop
or
inc
add
fcmovnu
or
adc
lret
or
xchg
shrb
scas
pop
push
and
jle
cmpsb
pop
lods
adc
or
mov
jns
leave
xor
insb
fldenvs
dec
int
popa
sbbl
mov
lcall
xchg
stc
mov
loopne
daa
xor
push
mov
and
cmp
jmp
xchg
out
fmul
sbb
push
test
cmp
repnz
jecxz
inc
inc
mov
cmpl
stos
cmp
fisttps
push
cmp
add
cwtl
ljmp
out
fdivl
or
cmpsl
daa
add
push
out
out
cltd
aaa
inc
add
test
call
cld
in
pop
xor
sbb
xchg
or
adc
mov
es
jnp
dec
jmp
inc
mov
js
push
sbb
or
pop
sbb
jge
mov
out
rorl
nop
xchg
mov
es
push
mov
lock
jbe
inc
push
jae
sub
in
idivb
test
imulb
cmp
mov
sbb
sbbl
cmpl
mov
cmpl
xor
daa
aam
xor
xlat
scas
hlt
push
ret
mov
in
popf
icebp
cmc
add
jns
push
in
mov
mov
ret
push
ret
xchg
xchg
pop
aad
cmp
js
popf
mov
mov
dec
adc
inc
xor
adcb
or
sti
jb
xor
pop
pop
jmp
mov
arpl
movsb
xlat
dec
add
mov
cmp
sub
rol
jmp
xchg
push
xchg
cmpsb
or
push
test
ficompl
lret
int3
push
and
and
mov
xor
dec
in
sub
dec
ss
push
dec
cltd
cmpsb
mov
mov
lods
or
xchg
and
push
bound
dec
jb
and
mov
rep
lret
jge
xchg
js
xchg
in
std
inc
inc
jl
inc
lods
sbb
mov
xchg
data16
insl
and
and
pop
outsl
insb
adc
fstpt
jbe
jno
rol
std
jle
xor
fistps
push
sub
inc
jb
add
repnz
and
subb
mov
and
inc
popa
and
stc
mov
dec
shll
push
arpl
jb
outsl
push
std
je
mov
sub
sbb
adc
data16
repnz
imul
addr16
xchg
mov
dec
call
mov
aas
lret
xchg
xor
fmuls
sbb
ret
and
inc
pusha
loopne
in
jmp
sub
lds
lds
push
shlb
movsb
mov
jns
cmp
shrb
mov
scas
stc
rcll
cwtd
mov
test
dec
inc
in
bound
jno
xchg
cmpsl
mov
pop
adc
or
xchg
and
test
sub
scas
pop
popl
adc
xlat
adc
aad
stos
cltd
push
jg
mov
xchg
loope
ret
popf
push
mov
aad
or
nopl
sbb
popf
shl
push
inc
sbb
pop
mov
push
sarb
fisttpl
xor
cmp
lea
mov
mov
lahf
stc
loop
stos
dec
ja
testb
xchg
movsl
arpl
add
add
mov
ret
or
lcall
xchg
dec
xchg
mov
sub
inc
sbb
inc
push
cmp
jns
stc
call
or
in
mov
sti
xchg
sarl
adc
pushf
mov
cli
mov
mov
pop
inc
push
aad
loopne
sbb
jle
fisubrl
xchg
sub
leave
xor
sahf
fildl
and
add
xchg
mov
xchg
arpl
dec
das
push
js
rorl
and
pop
loopne
scas
sbb
inc
inc
or
fldcw
or
mov
cmp
cmp
popf
fisubl
fisttpll
sar
in
jno
nop/reserved
add
out
jecxz
cwtl
inc
and
loop
mov
mov
inc
pop
in
sub
fucomp
mov
cmp
jbe
roll
mov
loop
adc
ret
outsl
outsl
jo
pop
mov
nop
jg
and
xchg
cwtl
xchg
add
add
popa
xchg
sarb
xchg
arpl
jle
dec
lods
inc
adc
mov
testb
sbb
ljmp
nop
xchg
mov
lods
popa
mov
test
inc
cmp
push
fldl
or
xchg
mov
imul
mov
xchg
rorb
data16
fldcw
jb
push
pop
jecxz
ja
mov
pop
xlat
pushf
int3
ret
cwtl
mov
jecxz
mov
out
ret
je
fst
data16
adc
gs
shl
jp
iret
arpl
test
pop
movsl
xchg
jae
iret
bound
jmp
test
popa
xor
sbb
pop
push
pop
xor
jp
jae
addb
or
fucomip
js
jp
int3
push
pushf
mov
sahf
and
jmp
dec
fisubrs
dec
stc
mov
mov
jle
dec
xchg
xchg
jbe
bnd
push
addb
push
cmp
test
push
nop
sbb
pop
dec
sub
pop
pop
push
sub
mov
test
divb
and
adc
test
adc
push
out
nop
lret
and
xchg
ds
inc
pop
xchg
jp
adc
lods
dec
cmp
adcl
rorl
add
nop
push
and
mov
loop
mov
jb
shll
push
xor
adc
lret
in
push
daa
cmp
mov
les
inc
insb
adc
fwait
mov
adc
jp
adc
out
in
int3
addr16
jnp
push
inc
mov
and
in
outsl
lahf
mov
fidivrl
lds
dec
push
dec
mov
mov
mov
sub
negb
and
jmp
mov
sub
jmp
push
loope
das
adc
and
sub
xchg
cmp
cmp
dec
into
fucomi
mov
add
xlat
daa
rorb
jno
push
aam
mov
pop
pop
sbb
aad
fcmove
stos
pop
jnp
int
adc
mov
inc
ja
jg
xor
popf
in
dec
leave
xor
mov
xor
xchg
jne
outsb
inc
adc
pop
push
insl
inc
fdivrl
dec
lods
enter
cmp
xor
cs
push
mov
add
mov
and
test
pop
fwait
iret
clc
arpl
pusha
scas
popl
and
dec
jmp
xchg
test
and
pop
out
pop
lret
decl
push
aaa
inc
and
mov
fcompl
inc
push
adc
stos
xchg
repnz
aaa
ret
cmp
fnstsw
int
or
push
cwtl
fwait
add
es
dec
pop
xchg
enter
std
mov
sbb
hlt
mov
mov
fcomip
inc
fs
popa
pusha
mov
cmp
jnp
sbb
data16
jnp
dec
mov
data16
push
add
dec
aaa
lret
mov
pop
xchg
push
popa
push
push
or
mov
inc
int
sahf
jb
hlt
push
cmp
faddp
add
lahf
jp
inc
xor
jae
mov
mov
add
mov
push
repnz
jae
sbb
adc
xchg
mov
mov
dec
jmp
lock
loop
jge
test
stc
cmp
xchg
push
popa
cmp
or
ljmp
adc
cmp
neg
sbb
sbb
inc
rorb
push
out
je
add
mov
mov
or
push
out
not
adc
cmp
or
mov
xor
loopne
std
sbb
push
and
lret
push
cmp
xchg
mov
jl
mov
addb
xchg
push
sbb
lahf
jbe
fwait
loope
insl
adc
call
test
and
lahf
jns
rcll
lret
jle
cmp
adc
xchg
lea
fisubs
repnz
shrl
jecxz
icebp
mov
adc
pop
fisttps
jp
xchg
stc
xor
mov
shl
xlat
loopne
mov
cli
gs
inc
cmp
sub
jo
mov
inc
push
adc
mov
test
xchg
xor
stos
adc
or
dec
inc
pop
ljmp
pop
pop
jecxz
icebp
jp
xchg
pop
add
mov
scas
aas
pop
sarl
cmp
and
es
clc
lods
hlt
sbb
pop
jl
sbb
xchg
jg
inc
push
cs
outsb
dec
fwait
psrlq
lret
xchg
mov
sti
test
mov
cld
ficompl
pusha
inc
fildl
flds
and
add
sti
mov
lret
sbb
add
test
outsl
xor
sub
insb
add
shl
xchg
xor
jmp
mov
xor
dec
jp
aaa
mov
lcall
sarb
mov
gs
adc
push
out
jp
inc
push
clc
sub
add
or
push
daa
idivl
and
adc
insl
sbb
lcall
mov
sub
lods
add
sub
mov
mov
add
jbe
in
outsl
push
insl
jp
je
ds
or
les
sbb
imul
add
sarb
jbe
xchg
adc
adc
cwtl
cmpsl
ja
jle
or
push
rcl
mov
add
lods
out
ds
mov
pusha
movsb
jae
insb
roll
xor
xchg
pusha
xor
out
ret
data16
add
inc
cltd
lret
mov
std
xchg
dec
pop
lock
dec
mov
inc
adc
cmc
xor
push
jae
sub
mov
jg
or
pop
mov
lcall
xchg
pop
and
sub
inc
mov
lret
inc
call
xor
or
mov
gs
jae
pop
sbb
xchg
out
leave
repnz
mov
ja
adc
push
mov
sbb
imul
or
dec
cmc
sbb
lcall
and
push
popa
and
sub
lea
or
xor
dec
pop
clc
roll
inc
jb
xor
ret
ds
and
aaa
lret
out
inc
popf
xchg
inc
xor
push
push
mov
cmp
mov
and
jge
sbb
sbb
inc
pop
push
aam
in
mov
cmp
jp
test
insb
enter
shl
dec
mov
cli
and
aas
or
add
and
or
and
roll
repnz
clc
mov
loope
jecxz
fwait
cs
rcr
and
sarl
in
cwtl
jmp
mov
movsb
es
test
mov
dec
mov
shll
lret
mov
or
fists
and
das
ljmp
cmp
pusha
cwtl
cs
mov
iret
cwtl
roll
mov
sbb
push
sti
outsb
dec
int3
je
xor
xchg
mov
or
or
lods
js
dec
inc
stc
mov
int
pop
jne
pop
and
dec
or
push
push
and
xchg
sbb
mov
fcmovne
inc
fsubr
cld
popa
sub
mov
mov
cwtl
divl
ja
sub
xchg
pop
cld
sti
pop
xor
cwtl
adc
aad
test
sbb
cmp
fdivs
push
cmp
pusha
std
or
cmp
and
lahf
out
bound
lds
imul
dec
and
popf
mov
rcrb
lahf
out
inc
cmpsb
bnd
push
insl
pop
mov
out
dec
sbb
scas
cmpsl
mov
add
hlt
sub
aas
shrl
lods
notl
xchg
insb
inc
mov
ds
out
sahf
xchg
sbb
adc
adc
rcr
dec
or
and
stc
repz
or
fcom
add
inc
pop
xchg
mov
cmpsb
lock
imul
jle
push
loop
sti
jne
dec
inc
fnstsw
shrd
out
bound
aad
hlt
vpxor
sbb
fimuls
sbb
jae
push
cld
or
xor
mov
dec
mov
mov
add
mov
mov
inc
and
mov
js
pop
dec
scas
or
dec
cmpsb
into
mov
cmp
lods
fildl
repnz
dec
push
rcll
push
addb
pop
jbe
shl
sbb
cld
movsl
jbe
xchg
jne
mov
and
sbb
test
pop
int3
push
and
arpl
sahf
into
imull
and
pushf
xchg
clc
jg
rorb
mov
cs
ret
stc
jle
cmpsl
ss
xchg
shrb
lods
dec
cmp
mov
loopne
mov
int
and
dec
mov
sbb
and
leave
in
test
into
lock
data16
cmpsl
lock
sbbl
bound
test
mov
mov
or
dec
nop
xor
jae
mov
adc
mov
lods
push
inc
scas
push
mov
jle
jp
je
sbbb
lods
or
ds
ret
cmc
xchg
testb
cs
mov
mov
mov
iret
bound
rorb
sahf
mov
inc
lods
cmp
fdivr
mov
fldl
pop
add
iret
mov
mov
pop
in
lds
mov
push
mov
xor
sub
hlt
lret
cli
std
mov
gs
xchg
mov
and
scas
mov
xor
inc
clc
dec
jg
test
push
cltd
jg
xchg
movsb
mov
xor
push
pop
insl
dec
gs
das
dec
jns
and
aad
dec
inc
pushf
jbe
lea
inc
ds
mov
in
mov
ret
daa
jmp
imul
test
inc
inc
negb
pop
sbb
or
pop
jne
or
ffree
aaa
out
jg
in
fs
sub
out
adc
insl
push
stos
sbb
push
mov
dec
shrb
jnp
mov
mov
jno
jne
test
push
pop
cmpsl
test
fisttps
sub
mov
ret
push
mov
inc
imul
test
enter
jl
inc
push
or
test
inc
and
jns
push
mov
cmp
push
or
loopne
or
add
mov
enter
push
push
or
outsl
scas
cmp
pusha
popf
stos
mov
lods
rcrl
dec
add
shll
pop
adc
int3
dec
and
mov
fimuls
pushf
out
push
mov
pop
sub
loopne
out
push
add
int
push
lahf
lcall
pushl
aaa
adc
iret
fs
add
sbb
not
jne
aam
and
lods
mov
jecxz
shrl
push
pop
mov
jp
lea
pop
mov
repz
jno
pop
mov
test
lds
dec
mov
pop
push
and
cmp
xor
imul
es
icebp
mov
ss
mov
inc
mov
movsb
into
mov
out
cmc
js
pop
out
push
jmp
sbb
imul
inc
movzbl
test
and
in
xchg
jnp
fs
add
movsl
push
ja
cld
call
jnp
into
sbb
fadds
add
mov
mov
ljmp
xchg
xchg
into
sub
shll
jmp
sub
mov
test
inc
xchg
out
mov
mov
cmp
or
jb
push
sahf
cmp
addl
lds
es
ret
jns
fsts
cmpsl
push
jae
mov
in
sbb
sub
dec
scas
adc
adc
or
std
test
in
inc
dec
nop
ficoml
push
mov
mov
out
pop
push
and
add
ss
inc
add
lea
clc
push
movsl
idiv
in
pop
flds
enter
repz
pop
movsb
sbb
movsl
adc
out
fsubr
rcll
mov
orl
adc
fcoms
push
push
mov
sar
cmovle
rol
and
mov
add
pop
mov
cmp
jnp
mov
repz
push
jbe
adc
out
and
ss
out
sti
test
mov
int
outsb
sbb
jne
cvtps2pi
inc
dec
rorl
xor
lods
stos
inc
js
xchg
jp
jecxz
test
shll
pop
sub
push
inc
fcoms
test
cmpsl
xor
imul
xchg
bound
pop
cmp
fisttpl
insl
inc
frstor
jmp
xchg
dec
scas
jmp
out
arpl
push
out
add
mov
dec
shlb
xor
pop
pop
ljmp
mov
mov
xchg
sti
sub
mov
fidivl
cmp
jne
xchg
clc
mov
dec
fisubl
or
push
mov
enter
push
sub
mov
aas
lcall
cs
xchg
ret
les
jae
push
test
mov
ja
xchg
and
lods
add
xor
adc
shll
inc
cmp
int
stc
inc
popa
pop
xchg
mov
clc
adc
mov
mov
fildll
loopne
movsl
adc
repnz
loope
xor
int3
lods
je
lahf
call
adc
daa
jb
lahf
mov
ret
dec
jae
fisttps
fstl
int3
scas
pop
mov
add
out
mov
adc
lods
call
cmp
clc
mov
mov
inc
cld
rcrb
xchg
and
je
imul
jne
dec
insb
mov
es
xchg
aaa
inc
outsb
mov
push
xchg
in
fwait
lods
test
xchg
ss
jnp
stos
ret
sti
sub
ss
imul
inc
or
or
sahf
sub
cmc
lea
mov
jecxz
ss
add
jge
pushf
add
imul
fisttpll
cmc
lods
adc
outsb
stc
in
lret
xor
mov
ret
cld
dec
inc
sti
dec
cltd
loop
push
jbe
outsl
push
fsts
adcl
and
push
add
in
subb
inc
ljmp
sub
fwait
arpl
mov
loopne
arpl
cmp
ja
xlat
and
mov
lods
push
fcompl
into
clts
and
mov
push
cmc
sbb
and
adc
pop
sub
arpl
mov
clc
sbb
scas
mov
ret
jns
jp
jae
stc
adc
add
mov
push
aas
pop
ficoms
sbb
fwait
test
jno
rolb
cmp
push
xor
push
test
mov
push
fadds
das
fildll
sub
and
xor
js
mov
int
adc
sub
mov
mov
ljmp
aas
push
mov
sbb
pop
jno
and
movsb
jp
xor
cmp
jmp
rol
dec
xchg
lahf
mov
push
mov
pusha
movsb
sbb
cmpsl
or
test
leave
stos
mov
in
dec
insb
data16
xchg
lret
test
cmc
sub
outsl
or
push
cld
xchg
jge
jle
xor
push
repnz
cmp
add
and
jae
jne
inc
jg
aam
iret
xor
push
rorl
aad
dec
cmp
cs
adc
mov
fsubl
test
add
mov
adc
movsb
push
xor
and
jl
mov
pop
scas
bound
xchg
push
add
jge
insb
pop
fisttps
stos
push
jge
ret
icebp
xor
add
xchg
lds
cmp
cmp
loopne
out
lahf
lods
aas
sbb
sub
outsb
xor
push
sarl
push
push
push
pop
pop
out
movsb
mov
test
nop
into
test
in
xor
xlat
outsl
rcrb
pop
push
ds
movsb
movsl
or
cmp
sbb
fsubl
rol
dec
cmp
pop
inc
adc
cmpsl
shlb
jl
jnp
adc
and
bound
insb
cmp
outsl
xor
mov
jnp
xchg
push
ja
decl
dec
inc
ja
cmp
repz
cmp
ret
nop
sub
les
sbb
add
out
scas
das
add
fnstsw
pop
scas
inc
imul
test
lahf
pop
hlt
scas
into
jb
xor
aam
addr16
cmpsb
adc
fwait
outsb
and
add
pusha
inc
inc
sbb
cld
movsl
xor
add
cmp
std
dec
out
gs
sarl
or
das
inc
sti
add
out
mov
and
sahf
push
mov
jbe
insb
xor
lret
push
popa
out
mov
loope
stos
push
xor
add
sbb
inc
loop
out
adc
adc
push
mov
aas
xor
clc
in
scas
adc
sbb
clc
nop
or
mov
dec
imul
test
mov
mov
lret
gs
ljmp
sbb
fstl
ja
xor
xchg
sti
ret
test
pop
cmpsl
mov
in
aaa
and
ror
dec
cmp
pop
jg
imulb
pusha
or
pop
mov
lds
lcall
into
fdecstp
mov
outsl
push
mov
push
jecxz
dec
push
cmpsl
fdivs
lods
out
push
mov
inc
not
roll
std
pop
repz
or
adc
mov
xor
icebp
testl
xor
inc
pop
data16
test
stos
cmp
pop
fstps
inc
pop
test
fnstcw
loop
pop
mov
ljmp
test
xchg
jmp
xchg
nop
and
adc
sbb
leave
xchg
loopne
cltd
xchg
in
fs
mov
sbb
les
popa
add
jp
pop
icebp
pop
mov
adc
and
mov
lock
cmp
adc
fwait
pop
rcll
ret
mov
fs
ja
pop
stc
ljmp
orb
int
in
adc
std
cltd
test
test
pop
addr16
loopne
push
add
sbb
lret
into
int
fmull
out
cmp
arpl
scas
in
jecxz
jecxz
pop
adc
clc
mov
cmp
push
push
pushf
das
xchg
in
jge
test
jbe
sub
ret
push
jp
and
cmp
mov
sbb
mov
setae
pushf
jnp
inc
mov
insb
inc
push
mov
fcompl
push
and
and
lods
in
push
adc
sti
adc
xor
dec
cmp
sbb
int3
fisubrs
cltd
dec
pop
movsb
sub
aad
cmp
push
mov
neg
or
and
sbbb
sbb
push
outsl
sarb
or
jecxz
mov
mov
fdivrl
in
xchg
fucomip
mov
xor
scas
cmp
mov
mov
pusha
push
dec
jle
rolb
dec
push
mov
clc
imul
insb
test
mov
cmc
roll
pop
les
pushf
stc
pop
lods
push
xchg
mov
rcl
das
pop
ret
aas
adc
stos
fcmovnbe
inc
mov
cmp
pop
jl
dec
cmpsl
add
test
jge
lcall
mov
repnz
fwait
cmp
and
mov
mov
dec
add
sti
jae
or
jno
nop
dec
mov
insb
inc
vpshaw
clc
aad
in
add
and
jne
in
rolb
mov
nop
add
add
xor
mov
pop
push
ret
mov
adc
rorb
push
sarl
clc
cmp
xchg
insb
sub
cltd
xchg
cmc
sti
in
imul
cmc
dec
or
mov
inc
xor
cmp
ud2
scas
test
btr
out
shrl
mov
mov
scas
push
pop
cli
xor
int3
dec
sbbl
sub
xchg
dec
dec
outsl
adc
test
imul
sar
mov
inc
adc
pop
ljmp
push
push
mov
mov
mov
adc
call
and
repnz
or
cmpsl
pop
xchg
insl
mov
xor
fcomps
jne
jp
pusha
sub
insb
jmp
mov
repnz
cli
popa
test
xchg
dec
or
or
ja
cltd
cmpsl
test
cmp
hlt
dec
fistl
mov
sub
or
icebp
push
insl
pop
inc
cmpsb
mov
rolb
push
pop
sbb
or
mov
and
adc
and
mov
sub
adc
bound
pop
lock
scas
roll
mov
jae
cmp
lods
mov
cwtl
fs
push
lahf
push
mov
test
out
out
jne
lcall
dec
and
pop
pop
fisttpll
xchg
fcoms
pusha
fs
mov
inc
neg
mov
int
push
es
mov
push
cmp
fildll
ss
cs
lock
xchg
pop
inc
and
incb
xchg
aad
push
mov
or
movsb
pop
dec
mov
inc
fadds
add
mov
in
in
sahf
aaa
je
pushf
enter
adc
sbb
cmp
add
pushf
insl
or
mov
flds
push
xor
cs
push
ficomps
add
pop
cwtl
add
pop
rorb
repnz
mov
cmp
xchg
es
mov
cmp
rorb
insl
pop
dec
pop
std
mov
shll
sub
inc
jmp
sbb
mov
addr16
adc
dec
dec
ss
insb
xorl
mov
push
std
xchg
jae
adc
lds
enter
add
loop
rorl
scas
add
out
pop
inc
mov
shll
lret
int3
call
mov
imul
cmp
gs
xchg
mov
loope
ficoml
sub
and
mov
scas
test
push
out
add
insl
out
pushf
jmp
rolb
std
popf
pusha
jo
dec
lahf
inc
mov
or
jno
mov
enter
pop
inc
mov
mov
push
shrb
adc
jg
jbe
aad
out
es
aaa
sbbb
mov
push
repz
add
jmp
lcall
pop
iret
xor
loope
je
dec
pop
jmp
add
adc
push
sbbb
fwait
sub
fmulp
bound
addr16
jge
sahf
pop
sbb
mov
sbbl
adc
mov
int
lahf
ja
add
out
ret
in
mov
aaa
stos
sub
push
movsb
mov
cmpb
adc
sahf
test
outsb
push
test
inc
call
adc
pop
mov
xchg
and
adc
pop
rclb
sub
push
sub
push
push
add
loop
icebp
popa
jle
jo
loop
gs
jnp
adc
xchg
ja
subb
sbb
dec
add
outsl
add
cmp
or
pop
push
call
adcb
push
push
cmp
pop
dec
xchg
xchg
lods
jecxz
aas
aad
pop
jb
xchg
push
jno
sbb
or
data16
jg
cmc
xchg
xor
or
test
cwtl
dec
inc
out
andb
data16
mov
xchg
pop
stc
push
mov
in
push
jge
push
ss
repz
jo
sbb
jnp
push
ret
dec
xor
lcall
push
aas
sub
aaa
cltd
pop
insb
or
mov
test
mov
outsb
fstl
mov
stc
cmp
cld
mov
mov
inc
dec
xchg
mov
sbb
jl
xchg
fisubrs
and
cmp
jmp
out
sub
sub
ret
mov
filds
mov
xor
or
shrl
rcll
dec
xor
mov
pop
jl,pn
sbb
lret
stos
mov
bound
mov
push
mov
rorl
in
mov
arpl
cmp
push
xchg
stos
sub
dec
sub
cmp
inc
scas
loope
fcomps
cmpsb
mov
push
fdiv
push
xchg
clc
test
adc
adc
cmpsl
push
movsb
and
lea
out
and
push
clc
inc
aam
aam
push
fdivrs
xor
dec
add
jecxz
gs
xorb
pop
int
out
hlt
mov
mov
loopne
pop
fcmovne
xchg
mov
in
mov
add
hlt
mov
jecxz
pop
sbb
pop
adc
in
aad
mov
fnstsw
xor
inc
clc
xchg
pushf
mov
lods
adc
cmp
cld
adc
out
cmp
ret
std
aam
movswl
mov
pop
mull
div
loop
inc
cmp
loopne
jmp
jo
stc
jmp
es
ja
inc
jne
addr16
push
test
repnz
hlt
mov
mov
imul
and
in
fimull
shlb
mov
imul
sahf
ds
cmpsb
movsb
jb
divb
out
test
adc
hlt
inc
push
rolb
jne
loop
push
aas
test
shl
xchg
cmpsl
jl
and
add
and
mov
imul
xlat
or
test
jp
movsl
inc
cmc
fnstsw
mov
adc
test
mov
adc
cmp
sahf
ljmp
movsl
xor
adc
ror
aaa
mov
aaa
mov
pop
sub
mov
or
ret
jno
add
popa
repz
arpl
add
xchg
movsb
pop
add
mov
mov
cmc
xchg
movsl
adc
or
clc
rclb
push
push
mov
push
lds
pop
andb
loopne
mov
sti
cmpsl
loope
add
mov
mov
or
xor
leave
jecxz
xor
xchg
sbb
sbb
mov
sahf
jmp
push
push
pop
shlb
pop
aas
mov
pop
jge
and
adc
xchg
notl
push
or
mov
imul
aas
lds
inc
or
jle
jg
fiaddl
push
and
imul
mov
adc
and
mov
add
into
fdivs
insl
xchg
sbb
ret
gs
int3
pop
data16
mov
test
enter
lcall
inc
inc
mov
outsl
xchg
jle
lret
fldcw
insb
pop
xor
mov
dec
shlb
cld
adc
mov
push
mov
mov
fstp
sbb
inc
xchg
cwtl
ja
cmp
xor
push
pop
and
lds
xor
mov
dec
xor
jbe
mov
fcmovu
fstps
jbe
outsb
mov
mov
sub
test
outsl
jle
sub
pushl
adc
mov
xor
jl
jbe
adc
scas
add
xchg
push
cmp
scas
aad
je
add
push
loopne
add
aad
test
sub
stc
pushf
sbb
js
sbb
stc
mov
ljmp
xlat
mov
xchg
jg
pop
add
or
sub
lcall
mov
dec
xchg
mov
add
mov
in
add
add
imul
jno
jns
add
lods
dec
cmp
movsl
xor
stos
jae
out
sar
stos
les
push
rorb
bound
jns
testb
fwait
mov
outsl
lds
js
mov
adc
mov
sub
push
neg
pop
out
subl
dec
cmc
test
in
jp
iret
js
xor
xor
mov
pusha
dec
adc
in
inc
daa
mov
repz
aad
xor
mov
lret
sbb
out
push
pushf
leave
jmp
bound
fs
mov
lods
inc
and
nop
inc
shll
adc
mov
loop
sarl
lods
repz
lcall
fwait
gs
jns
and
fsubs
mov
sbb
pop
lods
mov
pop
xchg
adc
jb
ds
fsub
loop
dec
std
inc
icebp
jecxz
and
mov
jg
mov
out
ss
push
pusha
pop
mov
lds
dec
xchg
adc
sub
jl
mov
inc
push
jns
mov
cwtl
add
mov
hlt
in
and
enter
in
stos
mov
jbe
pop
pop
adc
ss
push
ljmp
movsb
pop
test
lds
mov
push
sbbl
push
xchg
add
scas
and
mov
adc
and
in
cld
je
push
mov
and
mov
sub
outsb
int3
bound
outsl
or
iret
bound
push
add
mov
or
xor
iret
mov
mov
arpl
inc
or
push
addb
mov
scas
lods
mov
int3
lahf
mov
mov
and
xor
cmp
je
jecxz
shrb
scas
dec
lahf
push
xchg
pop
mov
lret
sbb
mov
push
sub
jle
repz
stc
std
pop
outsl
xchg
xor
rorl
push
imul
mov
cmpsl
subl
mov
or
fwait
mov
push
cmpsb
loopne
push
lock
mov
cmp
scas
rorl
inc
ja
add
in
jbe
js
inc
mov
jp
fsubr
cmp
test
add
lock
hlt
bound
xchg
add
in
in
or
popa
andl
insb
ret
cltd
lret
mov
fnsave
movsl
imul
repz
inc
out
loop
sbb
lcall
leave
pushf
mov
and
lret
mov
mov
sub
test
data16
aas
rclb
adc
jb
cmpsl
ja
sarl
inc
pop
xor
xchg
mov
int3
push
int3
daa
loop
popf
stos
repnz
les
cs
bound
es
lods
jb
and
hlt
jo
mov
xchg
inc
call
jns
addr16
fisttpll
rclb
xchg
test
pop
cmp
push
push
ret
dec
sbb
mov
in
ljmp
xchg
xlat
cmp
test
out
push
mov
int
mov
dec
inc
insb
insl
je
pop
ss
fwait
es
push
mov
jle
and
xchg
adc
inc
add
divl
inc
cmpb
jmp
jns
scas
js
rolb
lods
cmp
mov
pusha
push
sub
xlat
loopne
cs
jg
or
shl
in
pop
sbb
addr16
lods
push
sbb
les
in
sbb
sub
clc
cs
subl
jge
outsl
inc
ror
int3
adc
xchg
loope
push
roll
adc
in
mov
push
sub
mov
sbb
je
scas
iret
call
mov
out
sbb
imul
fistpl
mov
fld
icebp
push
test
call
insb
jle
pop
lds
and
int3
jge
icebp
ficomps
les
xchg
push
gs
inc
lods
mov
mov
fisttps
sbb
cmp
dec
mov
sbb
loopne
mov
adc
mov
cltd
test
and
lock
xchg
imul
stc
sbb
aam
xlat
sub
into
cld
mov
cmpsb
test
fadds
jb
outsl
out
push
pop
leave
addl
jbe
xchg
xchg
lcall
lods
fdivr
xor
pop
daa
lcall
ficomps
and
and
in
stos
popa
movsl
es
insb
pop
jnp
lahf
or
loope
inc
pop
jl
adc
jge
xchg
dec
xchg
fstps
into
sub
repnz
fmuls
lret
outsl
mov
clc
std
or
jne
loope
jl
xchg
jp
dec
movsl
ds
jg
nop
mov
call
mov
lret
imul
inc
fdivrs
daa
hlt
cli
xor
pop
loope
int3
jb
pop
pop
out
mov
cmp
mov
xchg
xchg
dec
push
xchg
push
test
or
imul
sub
fistps
add
mov
loop
xchg
enter
dec
sbb
or
ret
mov
leave
cmpsb
cs
xlat
cs
in
and
jmp
sbb
or
popf
sbb
out
mov
loop
push
in
sti
je
gs
jp
or
jns
mov
lret
or
push
jno
and
jbe
jge
adc
lods
xor
pushf
jmp
cmp
xchg
xor
cmp
adc
jecxz
jl
add
xchg
inc
or
dec
int
mov
pop
xor
jne
xchg
decl
fsubp
sub
and
and
or
jne
hlt
jb
or
daa
pop
enter
out
rcll
lods
inc
add
jg
std
inc
stos
out
dec
test
inc
mov
mov
push
movsl
xchg
leave
push
mov
stos
adc
dec
inc
lcall
sub
stc
je
add
outsl
jo
mov
push
nopl
mov
fistpl
pop
test
fwait
setg
les
loopne
into
aaa
loopne
xchg
mov
or
inc
mov
push
stos
loopne
stos
sbb
and
cli
out
enter
nop
inc
lea
sbb
shll
jae
jo
add
iret
shl
inc
mov
ds
test
dec
or
test
and
sub
sbb
inc
push
and
fs
cmpsb
mov
in
shll
mov
lock
inc
inc
mov
sbb
into
adc
in
insb
mov
shll
inc
enter
lahf
mov
aaa
fists
hlt
test
stc
dec
pop
cwtl
xor
xor
cli
xor
ror
add
in
mov
dec
enter
jge
sbb
mov
popa
arpl
jp
push
or
lds
push
mov
pop
outsb
scas
xchg
aad
popf
mov
push
xchg
addb
dec
aad
push
xor
cmp
popa
fisubrs
mov
fidivrs
aad
mov
push
std
call
repnz
and
add
mov
mov
icebp
or
sbb
jmp
add
popa
movsl
je
lcall
int
pop
mov
rclb
pop
cmc
lods
pop
aaa
cltd
push
into
in
hlt
sbb
je
movsb
scas
rclb
in
and
mov
adc
ja
dec
out
imul
mov
mull
lret
or
add
pop
in
add
mov
dec
in
movsl
dec
pop
mov
push
mov
mov
push
sbb
sbb
push
pop
dec
push
cwtl
mov
mov
in
fwait
sbb
divb
shrl
sub
mov
insl
and
pop
mov
cs
push
or
imul
js
jbe
ret
lods
mov
jno
out
jbe
lods
sub
dec
outsb
lock
lahf
fwait
mov
push
popf
pop
mov
xorb
mov
daa
adc
scas
subl
outsl
dec
xchg
in
xchg
aad
mov
jecxz
xor
sbb
push
jmp
dec
lods
sbb
iret
loope
or
rclb
push
jmpw
xlat
xor
lock
cli
mov
ljmp
inc
data16
and
add
lea
aad
mov
sbb
js
int3
cmpsl
dec
lock
xchg
test
jmp
adc
orb
out
adc
insb
stos
dec
mov
mov
push
cmpsl
xor
lret
pop
out
test
out
add
je
fimull
mov
pushf
enter
loop
aam
fnsave
ja
sbb
sti
mov
sarl
fs
xor
loop
repz
cmp
test
pop
pop
push
int
xor
lods
cwtl
es
cli
lock
push
cmp
aas
test
popa
daa
mov
stc
ret
mov
xchg
sti
mov
popa
inc
sbb
xchg
push
lods
test
test
push
movsb
and
inc
rol
les
mov
aaa
sbb
ds
ja
jle
lock
inc
jecxz
xchg
lock
add
jmp
inc
xchg
das
and
dec
inc
mov
and
sub
sub
xchg
fucomi
scas
test
mov
inc
scas
js
dec
shrb
mov
pop
pop
and
loope
sbb
mov
mov
xchg
and
movsb
fldenv
mov
insb
sbb
enter
pop
cmp
lahf
int3
call
sarl
sbb
pop
lret
mov
mov
or
cmp
leave
imul
mov
mov
dec
cmp
inc
inc
bound
mov
jmp
xchg
cmpsl
adc
ret
sti
sub
cli
ss
lcall
jg
sub
push
mov
cli
ret
repnz
sti
fimuls
cmpsb
mov
mov
add
push
xor
sahf
subl
and
xor
ret
cmpsl
jmp
mov
lret
adc
shlb
cmc
jno
or
or
or
mov
aas
iret
in
insb
aas
sub
mov
sahf
enter
mov
sbbb
cltd
ja
xchg
and
inc
mov
mov
repnz
ds
pop
xor
movsb
enter
and
cmc
iret
decl
sub
gs
jmp
inc
xor
icebp
cmpsb
pop
fwait
mov
mov
test
loope
divb
push
inc
aaa
xor
and
xchg
mov
add
sbb
imul
jmp
mov
mov
and
imul
cmp
dec
clc
or
push
adc
popa
sub
xchg
adc
adc
sbbb
inc
pop
icebp
add
loop
cmp
cmp
push
pop
adc
jo
push
push
and
lock
mov
xchg
rcll
xor
pop
xor
lods
pop
mov
aas
cmc
add
inc
jg
sbb
cltd
imul
orl
pop
adc
add
mov
mov
xchg
loope
loopne
icebp
and
mov
pop
rcr
test
fcomps
pushf
nop
mov
insl
mull
sbb
xchg
add
add
mov
leave
sub
adc
inc
outsl
pop
jmp
lea
repnz
xchg
lret
data16
movsb
push
out
mov
push
lret
jg
ret
adc
dec
nop
xchg
sub
out
jge
movsb
jge
fdiv
dec
nop
adc
cmpb
scas
pop
lods
jb
xchg
dec
movsb
mov
inc
jb
in
mov
mov
enter
enter
cmp
pop
das
push
test
or
jns
xchg
mov
int3
pop
or
imul
addr16
hlt
aaa
pusha
pop
repnz
std
jno
push
in
hlt
daa
and
cmc
in
leave
mov
movsl
mov
into
lods
icebp
fistl
pop
xchg
push
pusha
dec
jae
add
sub
std
inc
or
jg
leave
xor
mov
das
fmulp
cs
adc
jp
aaa
adc
loopne
insl
jno
adc
and
add
push
hlt
dec
imul
outsb
cmp
imul
xchg
inc
cmp
pop
pop
mov
out
fsubr
lods
and
imul
jecxz
clc
dec
and
test
jg
jecxz
ljmp
and
stos
imulb
mov
lahf
push
mov
add
mov
js
xor
lea
and
inc
inc
dec
xchg
add
repnz
and
mov
idivl
dec
push
mov
mov
inc
jecxz
sbb
test
mov
sub
dec
or
test
mov
addr16
test
test
clc
lods
mov
ret
in
lea
or
loop
lds
dec
and
mov
mov
movsl
orl
fwait
xchg
xor
mov
mov
iret
pop
push
in
lret
fsub
dec
popa
xorl
jo
cmp
fs
sbb
subl
lret
mov
popa
fs
sbb
jg
xchg
or
out
cmpsl
fwait
sbb
and
sub
sub
std
xchg
popf
rolb
xor
arpl
pop
mov
test
dec
mov
mov
pop
cmp
js
xchg
sub
repz
ljmp
push
lahf
fistpll
out
in
inc
mov
add
mov
or
mov
andb
push
mov
and
add
inc
jb
sbb
pushf
dec
mov
sahf
mov
jmp
dec
ror
stos
cmp
inc
pushf
in
gs
adcb
cmpl
cmp
lret
testb
xor
in
push
jp
int
repz
and
jecxz
jmp
jg
push
mov
pop
xor
xor
adc
and
das
and
add
orl
inc
mov
pop
adc
andb
bound
xchg
push
or
xor
mov
cmpsb
mov
loopne
out
mov
cltd
sahf
ds
mov
aas
pop
xor
dec
jg
or
insb
rolb
xchg
mov
jle
xlat
iret
aam
sbbb
xchg
dec
mov
add
andb
stos
aas
and
push
sahf
sub
leave
shrb
sub
addr16
movsb
cmc
sub
sbb
jp
int3
stos
arpl
pop
insb
adc
and
ja
stos
sub
aaa
add
mov
test
lcall
push
mov
jge
or
rcll
push
adc
lcall
mov
ljmp
es
fsubrl
repz
adc
ret
hlt
ret
insl
sbb
iret
das
push
test
pop
dec
cs
push
repz
inc
jae
les
stos
dec
mov
mov
into
pop
mov
ss
sbb
std
insl
cmp
inc
lds
push
xorb
std
inc
cmc
pop
sbb
insl
inc
loope
bound
add
mov
call
sub
leave
mov
gs
pop
icebp
and
jae
mov
sbb
mov
xchg
scas
fcoms
mov
icebp
rclb
push
adc
test
push
jne
xchg
in
daa
leave
mov
add
ljmp
pop
fisttpll
adc
adc
dec
and
cmp
pop
ret
or
jno
sub
sbb
inc
test
iret
dec
dec
inc
inc
roll
add
fwait
adc
pop
cmc
jmp
inc
les
mov
dec
jge
jl
xorl
push
fnstsw
xor
push
push
add
fnsave
inc
pop
jp
add
mov
push
repnz
divb
shll
ds
ret
lds
jecxz
push
arpl
repnz
inc
movsb
lahf
mov
test
mov
or
pop
mov
mov
sub
fisubrl
xchg
bnd
push
sub
lret
sbb
sub
push
jp
mov
test
test
inc
jge
adc
mov
push
jns
fildll
pop
test
mov
and
repnz
pop
push
adc
mov
mov
loop
out
test
imul
rclb
popf
data16
pop
jns
inc
xchg
neg
or
sti
or
or
mov
dec
add
adc
and
loop
add
sbb
mov
outsb
cmp
push
pop
lret
cmpsb
xor
lret
xor
in
pop
repnz
fcmovbe
or
repz
and
mov
dec
lds
mov
dec
loop
lcall
sar
jg
int3
mov
mov
repnz
or
push
sahf
pop
pop
inc
das
sbb
pop
leave
or
dec
jae
mov
aas
lcall
loop
sahf
test
shl
jno
out
inc
sbb
lea
mov
push
das
pop
inc
dec
mov
inc
jp
push
enter
adc
sub
jb
mov
mov
mov
sbb
mov
inc
jb
movsb
or
mulb
in
mov
iret
cmpsl
or
lods
fmull
arpl
out
in
aam
shlb
inc
test
sbb
test
fiadds
pop
addr16
xorl
call
test
push
cltd
imul
lcall
cmp
fimull
add
lret
add
cmpsb
mov
mov
cwtl
pop
inc
movsl
lahf
jns
add
rcrb
pop
jbe
mov
and
xchg
test
fwait
xor
pop
ss
jle
insb
pop
clc
loopne
dec
xor
nop
fstl
mov
icebp
xlat
pop
xchg
jg
sbb
in
movsb
aaa
mov
xor
out
jno
mov
mov
inc
xchg
add
pop
popl
daa
arpl
mov
mov
leave
lds
push
mov
add
mov
and
jl
xor
dec
push
mov
pop
mov
outsl
repnz
imul
loop
pop
add
mov
push
mov
mov
mull
rorl
fiadds
lea
mov
inc
scas
fwait
aas
inc
icebp
add
incb
inc
sub
jl
sbbl
lar
and
inc
mov
daa
add
cli
shrl
or
dec
je
push
psraw
loope
dec
xchg
add
jbe
jae
push
sti
cltd
sti
pop
jbe
jl
mov
shrb
mov
popa
cli
xchg
mov
jg
cltd
mov
mov
aad
jle
mov
mov
pushf
popa
push
cmp
in
stos
xchg
in
xchg
add
jae
mov
imul
icebp
outsb
mov
mov
clc
sahf
or
sub
cmp
movsl
cli
mov
jg
dec
cmpsl
out
lahf
mov
cmpsl
push
inc
repnz
loop
sub
lock
lahf
push
andl
xchg
sub
fldt
xlat
adc
and
jno
pop
or
daa
mov
mov
push
sahf
lods
pop
dec
dec
stc
sub
inc
ret
lahf
outsb
cmp
and
cmpl
mov
fs
inc
cmp
fs
lea
mov
add
fadds
cmp
je
fisubl
leave
setg
outsl
or
sbb
mov
mov
cmp
inc
mov
inc
cld
int3
jbe
push
ficomps
push
test
cmp
movsb
mov
xor
das
xchg
mov
repnz
sbb
mov
inc
fistpll
fsubrs
mov
jecxz
hlt
mov
test
xor
outsb
and
stos
add
mov
inc
inc
dec
cmp
mov
mov
and
or
inc
lsl
push
fisubrs
dec
out
leave
daa
pop
mov
ljmp
xchg
mov
fisttps
and
pop
xor
imul
aad
inc
or
lret
dec
pop
sbb
aas
dec
push
lret
sub
sub
stc
sbb
or
les
adc
out
dec
or
imul
cmp
dec
xchg
jl
or
or
and
inc
orl
sub
adc
lret
jbe
mov
out
ss
test
jmp
imul
dec
loop
aad
jl
mov
pusha
mov
sbb
mov
dec
mov
and
mov
pop
dec
mov
sbb
jp
lcall
pop
scas
and
inc
nop
int3
aam
push
sbb
and
rcr
loopne
push
cs
mov
shlb
mov
cs
jbe
cmp
nop
andl
adc
xlat
xchg
jge
push
into
cmp
std
shrb
out
fiadds
mov
inc
sbb
popf
mov
or
test
mov
and
cltd
das
dec
shr
clc
inc
add
jae
bound
test
mov
push
mov
out
call
push
jle
shrl
daa
jae
xor
fsubl
push
or
sbb
daa
out
mov
dec
sbb
loop
aad
xchg
pop
xchg
stc
push
js
mov
mov
into
mov
mov
leave
push
push
inc
cs
lds
pop
xchg
aad
inc
sarl
push
test
lods
aam
pusha
jle
cwtl
sbb
out
pushf
imul
enter
dec
xchg
inc
push
mov
popl
ljmp
loopne
imul
xorb
sub
in
js
rol
mov
repnz
xlat
adc
call
cmp
leave
out
and
shrl
in
testb
stos
lods
pop
push
or
outsb
cmpsb
pop
aas
out
pop
ret
call
iret
dec
cltd
inc
mov
jge
push
dec
scas
scas
adc
mov
pop
shlb
mov
pop
mov
mov
push
sub
les
lcall
add
sbb
loopne
and
movsb
dec
push
lea
mov
adc
sarb
pop
xchg
mov
lods
jge
pushf
clc
inc
sbb
pop
push
mov
ja
call
ret
pop
lret
mov
xchg
cmc
push
add
sarb
or
mov
mov
imul
jmp
push
cmp
dec
out
insb
push
lcall
push
scas
or
dec
insb
lea
bound
imulb
adc
jns
rol
adc
jns
div
mov
or
lea
repz
inc
adc
in
mov
push
popa
add
push
xorl
shr
negl
xchg
jo
dec
inc
add
xor
daa
and
dec
jno
js
stos
mul
mov
xor
inc
pop
inc
xchg
cmp
mov
xor
pop
test
aas
or
es
inc
sbb
lods
test
inc
xchg
shll
jl
sub
xchg
filds
dec
jecxz
cmc
xchg
sbb
enter
out
push
ss
loopne
ss
adc
sbb
jmp
out
jmp
mov
ficompl
pop
dec
cwtl
mov
xlat
ja
dec
mov
adc
pop
jecxz
inc
inc
xor
into
xchg
ds
cmpsl
rorb
dec
dec
fcmove
sbbb
mov
out
out
xchg
pop
jge
push
popf
enter
push
int
aas
lds
lea
sahf
test
lret
dec
sub
test
or
leave
xor
xchg
cmp
test
add
je
repnz
jb
dec
insl
adcb
jl
cmp
sub
sarl
push
mov
rorb
and
jle
or
add
jno
adc
mov
cltd
xor
mov
mov
popa
xor
insl
inc
mov
outsb
aam
xor
aaa
sbb
ds
shll
xor
adc
mov
sbb
ss
jl
subb
addr16
shll
cld
push
imulb
imul
xor
lcall
rcl
inc
mov
imul
cmpsl
cmp
leave
and
movsl
test
dec
cld
mov
adc
push
dec
and
insl
or
aad
daa
mov
std
test
pop
aaa
mov
repz
mov
xchg
pop
leave
push
jge
divl
inc
shll
fmull
sbb
jp
pusha
sbb
jge
dec
inc
mov
daa
or
icebp
popa
adc
xchg
daa
or
xchg
jo
jmp
or
adc
pusha
test
xor
adc
insb
adc
sti
orb
push
jo
mov
or
mov
dec
insl
out
hlt
lcall
popa
mov
cmpl
xchg
or
cwtl
pop
repz
sub
movsl
movsb
mov
push
push
adcb
pop
sub
or
hlt
fidivrl
push
mov
mov
aam
dec
stos
cmp
mov
or
lret
ds
cs
xchg
shlb
mov
jns
sub
shl
push
push
jmp
aad
bound
into
ds
pop
inc
pushf
mov
add
in
pop
adc
js
cmp
cmpsb
es
push
int3
push
gs
fbld
aas
ja
movsl
push
mov
imul
repz
movsl
add
movb
aad
ficomps
fisttpl
lock
cvtdq2ps
pushf
adc
add
and
mov
in
adc
or
lret
pusha
mov
cmp
rcr
jne
lret
aam
gs
cmc
or
js
out
scas
dec
out
jo
fdivr
loope
repnz
add
inc
insb
loopne
or
in
fistps
pop
out
testb
imul
mov
push
imul
orl
adc
cwtl
and
or
jg
lahf
loope
lea
mov
imul
in
stos
aaa
in
movsl
mov
mov
sbb
data16
mov
mov
loope
mov
sub
mov
adc
les
push
ret
push
xchg
push
out
xor
lret
sahf
pop
fists
mov
or
mov
out
test
jno
mov
in
and
fmull
dec
cld
and
xor
or
pop
inc
dec
jecxz
push
aad
leave
std
cwtl
jle
shlb
dec
gs
cmp
dec
inc
mov
push
std
mov
xor
xchg
mov
outsb
push
pop
push
push
or
pushf
popa
scas
xchg
cwtl
mov
xor
daa
push
push
and
sub
sub
data16
jl
xchg
mov
sub
gs
lods
xchg
mov
jmp
pop
mov
jns
fsubl
int3
push
cmc
fimull
dec
pushf
or
std
sbb
pop
or
in
push
test
add
mov
lods
inc
imul
push
mov
inc
pop
jg
push
sbb
pop
jl
sub
dec
sub
sub
shlb
add
lret
or
mov
out
fisttpl
lods
out
test
dec
and
pusha
mov
daa
cli
mov
push
aaa
adc
int
and
pusha
outsl
hlt
scas
adc
fistpl
aas
mov
mov
jge
push
xor
scas
push
scas
mov
icebp
push
xchg
int
cmp
jb
add
dec
xchg
jo
fbld
sub
xchg
inc
push
push
push
addr16
shll
mov
pop
jmp
pop
aaa
dec
je
add
jge
repnz
stos
sub
cmp
adc
mov
rcll
inc
adc
outsl
xchg
mov
adc
ret
in
xchg
push
shl
pop
push
jb
test
lea
mov
push
outsb
lret
mov
aaa
xor
push
xchg
addr16
jp
repz
jecxz
xchg
mov
dec
mov
stc
dec
sub
lcall
sarl
nop
stos
icebp
jg
xchg
mov
cmovnp
push
adc
jg
or
fistpll
addb
pop
mov
mov
loopne
lahf
inc
push
pusha
daa
movsl
in
sahf
push
pop
lcall
push
or
xor
dec
inc
movl
movsb
mov
sbb
xor
mov
inc
jnp
dec
pop
mov
and
cmpl
popf
fdivs
push
mov
aam
jecxz
daa
and
jne
fstps
dec
ja
xor
sub
lret
es
cmp
out
jae
and
mov
cwtl
xlat
sub
mov
test
pop
or
jp
xchg
rorb
jb
push
fldenv
cli
cmpsb
or
js
hlt
int
sbb
mov
out
sbb
fdivrs
adc
cltd
jl
pop
lods
push
or
sbb
adc
fistps
in
xchg
xchg
push
mov
out
ja
into
ljmp
push
enter
cs
inc
and
or
stos
mov
pop
addr16
jnp
mov
les
inc
push
push
rcrl
push
add
inc
cs
das
sub
sub
mov
cmp
or
push
outsb
sahf
dec
js
adc
or
bound
lcall
dec
sbb
jle
data16
in
lret
xchg
test
decb
jnp
add
loop
dec
jne
sub
aad
push
pop
out
int3
iret
cmp
and
stos
push
add
mov
out
xchg
inc
and
ret
out
pop
adc
xor
dec
push
xor
adc
dec
xor
cli
stos
push
xchg
hlt
lods
add
inc
xor
xchg
outsb
push
cmp
mov
out
inc
mov
jg
sbb
cmp
cs
ficomps
popa
sub
jp
sarl
fwait
int3
mov
mov
dec
or
clc
ss
dec
loopne
aas
mov
shrb
push
stos
xchg
mov
mov
lea
adc
mov
adc
sti
jno
adc
leave
cmpb
popa
push
mov
aas
xor
and
sub
orl
jp
stos
out
cmc
cmp
or
jecxz
sub
mov
and
popl
outsl
nopl
jne
pop
mov
push
xor
mov
jl
sti
ss
das
or
and
or
mulb
pop
dec
iret
xchg
jge
ss
sub
jne
mov
xchg
or
sahf
pop
test
lret
pop
insl
and
cld
jno
xchg
pop
sub
rcll
or
push
aaa
xor
cmp
idivl
jmp
jae
in
lock
mov
outsl
fnstcw
out
jp
pop
loop
aam
add
aas
idivb
dec
adc
push
mov
inc
shlb
xchg
xor
or
mov
lea
mov
addr16
insl
cmp
setp
adc
sub
xor
add
into
xorl
xchg
jge
push
cs
cmpl
and
data16
jns
test
addr16
lods
jb
adc
adc
negb
out
inc
cmp
xchg
add
jae
xor
imul
addl
jmp
jne
jo
outsb
lcall
jmp
pop
and
sub
repnz
jle
into
xchg
mov
outsl
clc
sub
dec
mov
fisubs
loopne
push
shll
std
xchg
adc
pop
hlt
pop
pop
idivb
inc
or
mov
bound
pop
or
add
inc
xchg
rorl
pop
mov
pop
imull
ss
and
mov
pushf
sbb
decb
out
test
or
out
sbb
sbb
jle
pop
jne
mov
cmpsb
fsubs
pop
cli
outsb
mov
xchg
imul
pop
fsts
sub
push
mov
shll
test
sub
xor
lret
dec
adc
jl
push
shll
inc
insb
cmpb
lcall
or
loope
xchg
movsb
xchg
loope
ret
cmp
and
cmpsl
hlt
xchg
cmc
out
xor
cmc
lock
fiadds
ror
jae
dec
pop
pop
out
loope
add
js
mov
sbb
aaa
in
xor
fcompl
xor
lret
mov
or
mov
test
inc
iret
roll
lcall
xor
xchg
outsl
cmp
pop
mov
aaa
loopne
or
add
cltd
cwtl
shll
ss
int
cmpb
shl
ret
orl
fldl
inc
xor
in
and
enter
pusha
jnp
or
lods
ljmp
add
inc
jno
scas
pusha
icebp
aas
push
sbbl
push
cs
js
add
rcll
adc
push
push
subb
cltd
testl
ja
pop
push
jl
pop
test
sbb
sub
mov
cmp
rorl
in
sbb
pop
ss
cmp
mov
out
sbb
rcrl
xchg
test
dec
sub
fistpl
cmp
fwait
mov
scas
ret
mov
xorl
xor
dec
cs
ss
jbe
and
pushf
mov
sbb
scas
mov
fwait
cmp
jo
add
and
out
push
clc
inc
push
pop
fcoms
mov
cmp
dec
sbb
int3
test
sbb
jb
jnp
popa
cmovnp
stos
cmp
sub
rcr
nop
call
pop
cld
fwait
lret
push
sbbl
xchg
jnp
lret
sbb
or
push
ror
in
adc
cltd
dec
daa
movhps
cmp
bound
jae
fistpll
inc
iret
jle
adc
sub
cmp
mov
mov
ss
xlat
and
mov
or
adcl
mov
or
push
mov
cli
out
aas
mov
jmp
leave
arpl
mov
popf
or
lods
xor
mov
test
mov
cmpsl
jecxz
xchg
or
popf
mov
sbb
ror
xchg
lock
adc
mov
xchg
je
stc
je
and
aas
and
cs
xchg
pop
dec
rcrl
aam
cmc
sub
rcrb
aam
out
das
ss
xchg
stc
xchg
stos
test
cltd
data16
aaa
stos
js
mov
fstps
addb
xor
pop
mov
je
jae
mov
inc
sub
jo
jmp
ret
jnp
xchg
xchg
fistpll
and
sbbw
test
subb
outsb
cmp
pop
mov
mov
and
dec
fwait
cmp
arpl
push
sbb
rcr
pop
and
test
lods
scas
mov
xor
rol
add
inc
inc
mov
ljmp
push
scas
insb
ret
sbb
ja
int
jmp
xchg
inc
and
jmp
nop
test
hlt
fsubl
call
xchg
cmp
movsl
mov
sti
xchg
sarb
adc
mov
std
add
adcb
insl
pop
pushf
sbb
pop
xor
jge
ja
xor
inc
pop
xor
in
cwtl
cmp
mov
push
movsl
in
clc
test
inc
out
dec
xor
shl
std
lret
dec
dec
fcoms
outsl
fwait
lods
dec
sti
xchg
push
movsb
mov
jne
movsl
inc
xchg
and
cmp
arpl
bound
call
lret
pop
cmp
sub
adc
mov
cli
and
mov
and
imul
pop
lret
xchg
es
inc
cwtl
add
test
mov
std
inc
sbb
inc
clc
lds
lds
paddq
ljmp
add
adcl
sub
adc
mov
cli
sbb
adc
in
aas
cmc
dec
sub
sub
jmp
jl
xor
sbb
fidivs
mov
into
lret
mov
cmp
add
add
divb
inc
dec
push
shl
test
sbb
dec
shl
jmp
and
lcall
cltd
mov
inc
subl
mov
mov
mov
mov
add
mov
clc
test
test
or
pop
sti
mov
aas
fidivl
jae
cs
outsl
pop
sti
lret
cltd
loope
lods
adc
mov
pop
add
sbb
pop
adc
pop
or
ds
popa
cmc
push
add
adc
imul
out
imul
lahf
out
sbb
add
add
subb
mov
jge
stos
xchg
lret
inc
cmpsl
mov
or
mov
pop
aas
rorl
cld
mov
pushf
std
push
inc
sbb
test
addr16
inc
rol
enter
jae
ja
mov
pushf
in
xor
jo
das
xor
xor
mov
fldl
rcrb
in
and
jge
xor
clc
xlat
sbb
jecxz
mov
addl
mov
mov
cmp
cwtl
clc
or
and
xor
ds
mov
push
mov
enter
push
in
xchg
fldl
push
adc
xor
js
lss
mov
outsl
int
sahf
mov
inc
dec
gs
mov
data16
in
push
mov
mov
fiaddl
movsb
ret
movsb
into
xchg
scas
and
lcall
sub
mov
xor
scas
je
lcall
sub
mov
movsb
jae
mov
loope,pn
mov
xor
scas
mov
inc
icebp
mov
dec
sbb
jae
cmpl
cli
cmpsl
jp
ss
cmc
mov
xchg
iret
cmp
sbb
je
cmpsb
ret
push
test
push
ret
rolb
loope
gs
cltd
in
inc
lea
popl
sti
mov
add
jmp
insl
repnz
push
or
sub
test
xchg
movsl
jo
mov
mov
and
test
pop
dec
jg
mov
mov
or
outsl
test
js
pop
aas
inc
dec
xlat
xor
pop
out
sti
aas
xchg
neg
fldl
mov
fwait
cmp
mov
sbb
orb
inc
filds
enter
xchg
or
push
nop
subb
insl
mov
pop
ss
adc
cmp
pop
jae
cmp
sbb
mov
sub
adc
cs
add
addr16
insb
jae
mov
or
pop
insb
xchg
out
inc
or
mov
lea
fucomip
es
inc
jge
nop
inc
stos
jg
popa
jge
sbb
outsl
cmpsl
xchg
imul
cmpb
jge
movsl
pusha
sub
into
lret
enter
xchg
out
pop
xor
pop
sbb
mov
fdivrl
aaa
cmpb
rcll
cmpb
fisttps
or
int
arpl
bound
daa
cmp
mov
fs
sbb
stc
jne
xlat
add
divb
fidivl
addr16
cli
xchg
roll
xchg
sbb
lret
cmp
pop
push
popa
shrl
iret
fildl
push
test
jmp
mov
adc
clc
bnd
add
jge
xchg
loope
sbb
cmp
mov
lods
fcoms
les
pop
nop
movsl
xchg
insb
jge
cmpsb
or
les
rcr
sbb
mov
rorb
outsl
test
adc
fs
dec
test
jl
pop
rcrb
mov
pop
sti
fs
mov
dec
fbld
repnz
cmc
daa
or
xor
adc
xor
add
fstps
xchg
jo
jo
add
xchg
out
xchg
xchg
pop
pop
divb
push
push
mov
movsl
iret
xchg
aas
push
push
js
pusha
cmp
pop
lock
pop
repnz
int3
dec
lods
ds
bnd
mov
dec
mov
pop
cwtl
shrl
mulb
jle
roll
xor
fisubrl
adc
jg
rcrb
xor
ss
sti
mov
jb
pop
clc
out
outsb
jge
stos
push
push
pop
int3
pushf
ja
dec
push
inc
inc
mov
mov
inc
int3
fstpl
aam
mov
fldl
sbb
hlt
shrl
mov
shlb
loop
out
inc
mov
mov
movsb
fstl
jle
in
jbe
xchg
jnp
xor
popa
jb
stos
emms
jg
push
lds
popl
sar
sub
add
adc
inc
in
cmpsb
sub
pop
mov
int
mov
test
fisubs
lock
subl
popf
adc
aam
cmpsb
pop
xor
pop
cs
adcb
test
stc
xchg
shrl
or
aas
movsl
rcl
insl
stc
add
xor
pushf
fstl
sti
inc
dec
js
ficomps
ljmp
jmp
push
lcall
lcall
insb
push
xchg
sub
xchg
inc
mov
das
cmpsb
in
push
xchg
adc
jb
mov
sbb
cmp
out
and
in
pop
imul
in
lret
push
pop
fisubrl
fnsave
and
loop
xchg
enter
sub
fs
push
or
mov
idivl
cmpsb
mov
push
jbe
adc
mov
xchg
sar
into
or
push
inc
fldln2
out
xchg
mov
test
xor
jbe
jmp
jmp
pop
cmp
aaa
hlt
shrb
sti
xlat
sub
xor
dec
dec
jo
sahf
lret
pop
stos
fucomi
test
incl
pop
sub
test
jne,pn
loope
hlt
mov
cmp
mov
sti
pop
int
xor
out
sbb
jl
xor
xor
adc
pop
mov
dec
insl
loopne
push
out
push
sub
gs
jno
je
jbe
add
mov
sbb
int
or
mov
push
push
mov
sub
roll
loop
je
out
dec
cwtl
or
add
popa
js
leave
mov
fnsave
jnp
jmp
inc
ljmp
inc
sub
bnd
in
xor
mov
push
sbb
test
icebp
jb
xchg
or
and
rcll
jle
xor
std
int
fsubs
push
mov
xor
push
jns
scas
jbe
dec
pop
inc
adc
sub
pop
mov
flds
push
push
jno
pop
and
jnp
inc
cmc
pop
ljmp
fadds
in
pop
jo
mov
mov
cs
xchg
pop
pop
gs
xchg
jb
in
data16
in
push
ret
jg
in
push
ja
mov
push
and
push
mov
mov
imul
sub
lahf
push
lahf
cmp
add
add
push
andb
push
cld
cmpsb
xchg
mov
scas
xchg
add
aad
xor
sbb
fcmovne
es
fiaddl
mov
fs
sbb
mov
pop
lds
inc
dec
jb
push
loope
iret
outsl
leave
test
mov
test
xor
pop
repz
mov
add
cmp
stos
xor
das
adc
dec
and
fdivr
fwait
loope
pop
inc
adc
in
push
cmpsb
imul
mov
hlt
cmc
int
pop
mov
mov
and
adc
jne
or
push
out
movsl
cmc
push
adc
addb
jns
jmp
sbb
jle
test
loope
repnz
xor
iret
xchg
mov
inc
scas
pushf
dec
sahf
nop
ja
stos
push
mov
xor
xor
mov
mov
or
and
inc
add
popa
jbe
xor
mov
movsl
or
xchg
sar
jmp
call
inc
xchg
add
pop
pop
arpl
pop
jmp
clc
push
lahf
inc
lahf
enter
rcrl
jbe
mov
inc
fldl
nop
xchg
jb
xchg
mov
and
add
test
lahf
in
and
sbb
and
or
in
in
push
push
les
xorb
xchg
int3
aad
mov
int3
pop
js
mov
dec
sbb
lods
aas
cmp
push
lock
jmp
clc
push
add
shr
xchg
mov
jmp
push
xlat
or
test
hlt
sarb
xor
add
xor
jecxz
xorl
shlb
repnz
mov
push
rorb
xor
movsb
jg
push
scas
mov
in
xchg
inc
data16
insl
test
jbe
push
mov
hlt
imul
fsubl
pop
adc
mov
test
jno
dec
mov
js
or
mov
xchg
mov
movsb
pop
in
out
dec
push
and
and
dec
and
and
lret
ljmp
call
jle
jle
cmp
jp
xor
mov
lock
scas
mov
add
movsl
call
xor
adc
cli
xchg
mov
fnsave
mov
mov
add
stos
pop
nop
jge
cmp
xchg
mov
add
mov
jns
xor
sub
sti
push
dec
pop
pop
adc
jo
cmp
hlt
pop
bound
test
push
mov
ret
sbb
mov
jb
aaa
push
mov
les
je
das
repnz
repz
sub
jp
loopne
jo
cmp
mov
sbb
cmpsb
movsb
sti
sbb
daa
fwait
pop
and
xchg
xor
cli
or
xlat
test
pop
outsb
ja
pop
mov
add
adc
push
pop
enter
out
inc
mov
fisttpll
adc
ret
push
push
sub
or
out
aad
ret
jg
sub
xchg
jnp
es
dec
rolb
mov
fsubl
push
call
rorl
scas
inc
jecxz
sarb
aaa
rcrb
loopne
jo
orb
or
mov
fisttps
in
and
mov
mov
fsubrp
dec
and
fsubrl
jle
in
mov
mov
add
imul
int3
call
lea
add
cli
inc
add
call
xchg
adc
addr16
pop
jmp
push
cmpl
lea
int
ds
or
test
in
popf
xlat
pop
ret
icebp
int3
loope
pop
loopne
das
pop
xor
in
pop
pop
xchg
jnp
mov
dec
push
or
sub
popf
dec
and
xlat
ljmp
xchg
jg
adc
into
and
pushl
push
xor
insb
imul
lea
rcrl
loopne
jmp
push
leave
test
aas
mov
lret
push
dec
lock
call
iret
nop
push
pop
les
addr16
add
xor
push
gs
mov
dec
cmp
pop
call
repz
pop
mov
xchg
adc
fs
jnp
ret
aad
pop
int
mov
cmp
cli
out
add
and
mov
ret
xchg
and
push
adc
pop
les
xor
call
sti
jle
sbb
inc
add
push
popf
jg
stc
stc
in
idivb
testl
in
fbld
xchg
mov
fiaddl
das
fisubl
mov
hlt
jecxz
inc
je
xchg
mov
jle
adc
cld
dec
jb
arpl
cwtl
mov
mov
lcall
xor
cmp
arpl
push
loopne
pop
mov
mov
pop
pop
dec
adc
dec
mov
sbb
in
xlat
push
loope
call
cmpb
packsswb
sbb
fsubrs
and
lret
fisubrs
mov
dec
cwtl
imul
add
ja
hlt
bt
jecxz
sub
dec
out
add
adc
push
or
rol
lea
jae
es
addr16
dec
or
and
or
cmp
mov
pop
mov
mov
mov
rcll
imul
sarb
mov
pushf
sbbb
shrb
cmp
cld
sbb
scas
mov
add
pushl
movsb
xchg
int3
mov
lahf
sub
dec
scas
fiaddl
fdiv
xor
fdivrl
and
xor
adcl
xor
cmp
push
xor
jne
xor
add
sbb
cli
pop
sub
inc
std
sub
hlt
xlat
lahf
adc
bound
cwtl
pop
stc
xchg
ja
test
insb
lea
pusha
lcall
inc
push
imul
lock
out
cmpl
ds
ret
outsl
mov
stos
push
je
mov
or
ds
pop
shlb
dec
lcall
cltd
fs
mov
sti
lcall
pop
cmp
xlat
or
movsb
sahf
jl
fmull
faddp
pop
push
popa
movups
decb
push
std
dec
pop
jle
cltd
and
test
test
test
push
or
adc
sbb
xor
pop
pop
dec
mov
jnp
push
test
cmp
enter
mov
sar
pop
mov
mov
dec
or
sub
out
jecxz
push
sarb
enter
ret
sbb
dec
xor
sar
cmp
lods
sarb
mov
test
mov
xlat
mov
pop
pusha
inc
sub
push
nop
pop
sbb
out
int3
jg
mov
fwait
inc
dec
leave
and
jbe
sbb
outsb
xchg
jae
das
fildll
nop
out
out
sbb
aad
push
and
ds
popf
aad
in
test
jae
lock
bound
cli
sbb
or
or
arpl
jae
add
sub
pop
sarb
stos
adc
jae
mov
pop
cmp
dec
pop
add
sbb
mov
adc
adc
push
into
mulb
lahf
in
xchg
insl
hlt
test
pop
fdivs
lock
inc
insb
int
mov
jae
lcall
js
jecxz
cwtl
push
in
shr
xor
outsl
and
dec
cmp
in
xchg
push
xchg
int3
inc
loop
test
imul
sahf
iret
push
or
movsb
mov
cwtl
insl
cmp
jo
jno
mov
fcom
iret
icebp
jle
sub
and
pushf
lahf
push
mov
xor
pushf
mov
test
mov
mov
fsubl
ljmp
and
adc
inc
mov
mov
sub
fnsetpm(287
adc
ja
jnp
add
in
out
pop
mov
adc
fwait
jecxz
popa
and
sub
mov
imul
xor
iret
xor
rorl
lahf
hlt
aad
add
and
jae
arpl
lcall
pop
ror
cmpsb
cmp
cmpsl
aas
sub
test
leave
pop
or
shll
jo
lock
gs
dec
mov
int
test
das
aaa
xor
loope
pusha
adc
jl
andl
pop
fnstcw
ja
loop
jg
icebp
lret
push
icebp
repz
or
bound
push
jbe
add
test
ss
dec
mov
shll
mov
inc
outsl
stos
mov
cmp
pop
stos
pop
lcall
cmc
mov
adc
sub
xor
sbb
mov
test
shrl
or
xchg
fwait
outsl
push
mul
fsubl
push
popa
jae
mov
cli
sbb
xor
pop
mov
stc
mov
cmc
pop
repnz
sbb
pusha
stos
cmp
loopne
fucomip
fidivs
xchg
push
inc
adc
aad
imulb
add
lret
addl
lods
pop
fwait
add
es
inc
mul
mov
xchg
ret
cld
dec
jbe
divb
ja
and
insl
push
jle
push
pop
push
ficoms
sarb
sar
inc
adc
inc
cmc
insb
cmp
xor
int3
cmp
push
aas
shlb
cmc
push
mov
mov
in
mov
or
es
sub
xchg
popf
mov
push
sbb
das
lea
cmc
aas
ds
jns
xor
enter
repnz
xor
pop
jno
jb
cmpsb
loope
pop
sub
lods
push
push
push
mov
or
mov
jp
mov
stos
incb
fs
test
dec
jbe
lcall
int3
xor
pop
call
xor
out
add
lock
jge
cmp
jl
call
out
cmp
adc
repz
int
aaa
jno
sub
movsb
sub
mov
pop
imul
imul
in
xchg
imull
out
or
jmp
push
push
jecxz
aas
push
adc
mov
xor
add
cmc
into
test
scas
mov
loopne
shlb
xchg
push
jne
xchg
leave
pop
inc
adc
imul
push
mov
mov
popa
push
repnz
incl
cmpsb
in
popa
pop
fwait
aas
or
lock
int3
adc
nop
sahf
int3
adc
repnz
sub
cld
add
xchg
xchg
repz
arpl
les
lea
jno
or
push
cmp
sub
inc
gs
lahf
or
mov
les
mov
addr16
pop
adc
and
add
mov
arpl
repnz
pushw
pop
jnp
push
jmp
cli
jmp
int
adc
aaa
mov
cmp
orb
mov
dec
sbb
pusha
fsubr
repz
shrb
test
sbb
jno
insl
clc
mov
add
out
es
ret
cmp
shl
mov
repz
fmull
pop
cmpsb
aas
jp
js
incb
jecxz
jo
adc
pop
add
sub
mov
into
or
rclb
cmp
jl
add
pop
xor
jp
mov
js
cmp
cmp
data16
mov
sbb
repnz
lods
or
and
setns
lahf
fs
mov
sbb
inc
std
loope
jnp
loope
cs
test
lahf
jge
fstpl
add
pop
add
mov
jge
jmp
xchg
adc
cwtl
ja
xor
lret
sub
mov
jg
inc
ror
adc
popa
push
mov
mov
inc
test
test
outsl
inc
dec
ja
ret
aad
stos
sub
out
xchg
scas
imul
lret
int
xchg
stos
and
test
dec
jnp
pop
xorl
fsubrp
pusha
xchg
les
sbb
cli
add
fwait
or
pop
test
aam
ret
ljmp
pusha
iret
leave
xlat
jb
in
arpl
enter
in
jne
adc
jb
fs
xor
ljmp
dec
js
jle
cmp
lea
shll
call
add
je
jge
cmp
mov
insb
or
imul
mov
xchg
pushf
add
or
ficompl
data16
cld
out
dec
jmp
popf
fbstp
xor
sbb
xor
lock
mov
and
dec
jl
push
in
pop
or
sbb
outsb
lcall
jge
add
mov
js
xor
dec
popf
pop
lret
cmp
test
in
xchg
aam
mov
movsb
incl
test
adc
adc
cld
lds
popf
xor
push
push
popa
es
sub
xor
adcb
ret
outsb
out
xor
dec
mov
jns
repz
xor
push
sub
lock
es
mov
movsl
hlt
add
dec
sbbl
rcrl
fwait
pop
cmp
mov
sbb
cmp
mov
or
mov
bound
and
pop
push
push
dec
push
leave
cmc
push
mov
cwtl
sub
mov
or
dec
ret
mov
mov
rcrb
sbb
pop
and
loope
cmp
movsl
cmp
sbbb
mov
es
sub
inc
outsl
fwait
push
mov
pop
test
bswap
mov
shl
pop
sahf
or
pop
repz
xchg
in
imul
push
sbb
fcmove
sbb
xchg
jp
lods
aad
mov
outsl
frstor
repz
xor
inc
dec
sbb
sub
cmpsb
in
stos
sub
push
adc
mov
sub
imul
ret
pusha
or
ror
test
outsb
clc
or
add
cli
rcr
jp
mov
xor
hlt
ja
jge
dec
fwait
lock
and
repnz
lock
adc
dec
je
push
or
sbb
xor
mov
push
pop
mov
cwtl
jne
aam
sbb
nop
iret
or
scas
loope
js
jp
xchg
leave
sub
sahf
ret
gs
addr16
les
hlt
shlb
dec
movsb
arpl
cmp
xchg
push
lret
lcall
pop
mov
pop
sub
push
shr
sti
lret
fmulp
add
movsb
out
in
inc
xchg
stos
xchg
aam
xchg
sbb
xchg
sahf
sbbl
out
inc
sahf
mov
shrl
dec
pop
sbb
sti
adc
mov
cmpsl
mov
sbb
lea
fwait
in
jne
sub
lock
push
pushf
das
pop
test
addr16
sahf
inc
mov
ljmp
lods
xlat
movsb
pop
pop
pop
or
xor
mov
std
outsb
cmp
jecxz
test
cld
pushw
test
lock
cmp
scas
mov
aaa
pusha
scas
sub
clc
xchg
xchg
jecxz
sub
test
mov
nop
sbb
mov
xchg
sbb
repnz
pop
mov
ss
out
inc
iret
out
and
mov
mov
out
add
mov
pop
sub
call
roll
test
xor
fucomi
xchg
aad
push
xor
xor
jge
xchg
scas
dec
cwtl
push
in
add
adc
int
mov
jbe
in
ss
sahf
push
cs
cmp
xchg
dec
mov
jns
loope
test
lods
popf
pop
push
pop
call
push
test
inc
ds
cmpsl
and
sbb
cli
icebp
mov
add
sbb
ss
fwait
xchg
mov
mov
jg
cmpsb
lds
dec
call
into
repnz
cmc
mov
fildl
add
movl
jbe
testb
out
lcall
negl
jnp
sbb
rorb
sub
fistpl
jae
add
negl
aam
into
jle
mov
std
mov
push
popa
xor
in
xchg
scas
ret
rclb
rcrl
out
cmp
int3
xchg
sub
aad
jl
lods
inc
andb
jmp
cmp
out
sbb
in
and
jnp
xor
jno
cmp
push
fmul
daa
jbe
lds
xchg
add
cmp
lret
mov
aaa
lret
xor
xchg
loop
jbe
inc
mov
sbb
dec
test
xor
aad
cltd
in
xor
insl
pop
leave
or
stc
ret
je
pop
testl
daa
insl
enter
mov
gs
outsb
push
enter
push
sti
mov
and
std
das
push
jmp
jle
in
movsl
push
pop
dec
or
fs
jns
fstl
idivb
aad
push
das
pop
rol
andl
or
bound
packsswb
sbb
fiadds
fisubrl
push
imul
jo
daa
mov
incl
insl
loop
out
inc
pop
cmp
lcall
pushf
or
bound
cld
int
mov
in
cltd
pop
mov
arpl
dec
fcoms
jae
push
aaa
shrb
mov
mov
lret
adc
push
mov
dec
pushf
imul
popf
push
cmp
lret
pop
xchg
pop
pop
push
pop
loopne
dec
xchg
dec
mov
aam
shrb
mov
cmpsb
es
leave
insl
push
cwtl
rcrl
or
and
pop
movsb
xor
jno
xor
push
mov
xchg
add
dec
pop
lds
add
mov
int
movsl
pusha
sahf
shl
add
pop
pop
int3
test
sbb
mov
push
adc
loopnew
shl
xchg
dec
or
lahf
or
add
inc
or
insl
jp
sub
mov
lods
mov
mov
pop
cltd
mov
jp
int
lret
out
mov
adc
aam
inc
sahf
fwait
popa
int3
dec
std
dec
fcmovnb
movsl
aas
cmpsb
xchg
push
std
mov
xchg
cmc
xchg
adc
sbb
out
push
push
pusha
stos
fldenv
inc
xor
xor
setl
and
movsb
ds
or
cs
push
lds
and
les
bound
cwtl
jns
cli
stc
jbe
push
xchg
sti
inc
sbb
sbb
stos
fildll
add
xchg
add
mov
nop
scas
mov
imul
js
or
in
add
hlt
ja
addr16
mov
mov
or
dec
push
add
mov
mov
in
adc
dec
es
and
sub
pusha
add
adc
dec
jmp
jge
je
cld
push
adc
ds
lds
or
sub
lahf
sbb
lahf
enter
cmc
xchg
jns
out
aam
cwtl
pop
xchg
adc
jo
hlt
mov
ja
movsl
fwait
sbb
in
repz
lret
push
cmp
shll
push
arpl
bound
les
mov
enter
call
ret
lds
scas
push
inc
jmp
sbb
pop
out
call
lods
sub
inc
sub
shl
and
pop
movsb
inc
aad
jle
pop
lods
ret
sub
ret
inc
outsb
sub
cmp
inc
mov
mov
nop
fs
dec
cmp
xor
cli
jb
push
cmc
mov
inc
imulb
fdivrl
mov
rol
ss
push
or
push
xchg
int3
pusha
xchg
xchg
imul
lock
fwait
or
sbb
cwtl
pushf
xor
orl
inc
call
mov
jecxz
xor
add
mov
outsl
jbe
mov
or
push
ffreep
aaa
pop
mov
je
xor
inc
mov
ret
scas
push
pop
cmp
pop
or
pop
out
jl
jle,pt
pop
jle
add
ds
loop
repz
dec
lahf
pop
ret
add
shll
cmp
cmpsb
outsb
pop
sbb
inc
popf
jp
jo
hlt
push
scas
mov
xor
adc
sbb
adc
dec
loop
fcmovnb
aam
push
std
rcll
xchg
push
sti
xor
out
aad
fcompl
stc
xchg
leave
jo
lock
jns
leave
push
sub
movsb
xchg
jl
imul
jecxz
and
int3
arpl
icebp
inc
outsb
jns
push
aas
dec
push
sbb
inc
push
cwtl
notl
loope
fisttps
pushf
sti
clc
sub
fcoml
out
lods
xor
mov
jae
in
lock
sbb
insb
scas
jmp
pop
int3
bound
rcrb
xchg
shlb
cld
jnp
sbb
ljmp
dec
pop
push
inc
jp
dec
fwait
and
push
aad
xor
or
sbb
out
add
or
mov
xchg
fisttps
pop
and
sbb
inc
or
aaa
inc
test
out
test
mov
pop
mov
das
nop
daa
scas
cmp
ret
sbb
xchg
test
push
shlb
jp
call
pop
rclb
outsb
pop
fs
enter
lock
daa
in
pushf
shlb
jl
std
sub
mov
movsl
sbb
inc
mov
out
dec
push
pop
inc
xor
xlat
fnstcw
test
push
jnp
mov
or
mov
repnz
bound
fldcw
push
jp
test
jle
mov
fwait
adc
lods
and
aas
loope
mov
xor
push
push
fistpll
and
mov
roll
and
arpl
out
mov
xchg
cmpsl
xor
xor
sub
or
cmp
or
lods
jo
mov
push
xor
aam
fs
aam
into
loope
fistps
push
cmp
in
imul
mov
fisubrs
mov
call
imul
mov
cld
and
enter
pushf
sti
pop
mov
and
arpl
je
pop
mov
xchg
aas
iret
je
loop
mov
popa
xchg
cli
pop
xchg
ljmp
daa
sbb
in
ror
push
js
ss
lahf
data16
jecxz
inc
das
inc
jmp
and
cmp
aaa
clc
lods
jg
mov
jmp
aaa
outsl
xor
cmp
mov
pop
js
xchg
adc
shl
mov
int3
sub
pop
loope
cwtl
mov
divl
out
test
adc
aas
sub
cld
mov
push
mov
mov
call
inc
dec
jno
dec
in
das
arpl
js
mov
popl
mov
mov
insb
and
push
mov
je
inc
std
ljmp
xorl
ss
cs
into
adc
or
mov
fnstcw
ljmp
sti
mov
mov
lds
jmp
mov
add
mov
mov
sub
xchg
ret
ffreep
xchg
jge
data16
mov
or
adc
xor
push
add
insl
fsubl
out
mov
pop
ja
jecxz
sbb
loope
mov
pop
adc
adc
scas
into
pop
loopne
test
jb
orl
gs
cmp
pop
icebp
xor
mov
jne
fadd
ds
xchg
pushf
outsl
mov
pushf
xchg
negb
pop
xchg
in
mov
or
and
sbb
mov
insl
fimuls
inc
iret
pushf
loope
test
pusha
push
test
arpl
inc
ret
mov
std
cli
inc
mov
mov
jbe
jae
mov
ret
mov
mov
dec
ficompl
fwait
bound
icebp
jo
pop
or
cmp
loop
xchg
adc
stos
aaa
cmc
fistpl
jge
aam
lret
mov
outsl
into
fwait
paddb
out
xor
jg
dec
and
ds
rorl
test
pop
sbb
jb
out
ret
jb
sub
mov
sbb
imul
cmpsl
mov
bound
fcoml
add
push
adc
scas
dec
xchg
cmp
xor
add
js
sahf
mov
mov
sbb
fs
jmp
bound
insl
cwtl
pusha
lahf
into
sarl
or
push
jb
shll
int
xor
mov
sub
imul
inc
adc
stc
ss
xchg
xchg
cmp
in
mov
rclb
outsl
ds
repnz
push
in
xchg
adc
out
ja
aas
mov
dec
jno
push
adc
sub
lods
jae
ret
xchg
sub
jb
push
sub
sti
test
and
jecxz
sub
xor
in
push
xchg
dec
xchg
fistps
fsubs
cmpsb
cwtl
fldcw
fwait
or
cltd
mov
fsubr
inc
mov
fdivrs
sbb
pop
sub
scas
ret
pop
ja
inc
push
shll
mov
jg
lcall
es
mov
dec
roll
stc
sbbb
cmc
push
and
mov
pop
mov
arpl
lret
inc
mov
mov
jb
cmpsl
jae
iret
and
fcoml
cmp
sbb
push
insl
sub
stos
xor
lret
jno
fucom
lea
cmp
movsb
jo
les
orl
push
adc
out
xchg
clc
sbb
insb
ljmp
loop
inc
fidivl
xor
insb
addr16
xchg
aad
std
outsb
cmp
cmpsl
xor
cmpsb
dec
xlat
or
inc
fiadds
adc
int3
in
outsb
push
pop
and
add
xor
lods
gs
xchg
sub
test
in
in
or
ret
lods
in
dec
les
dec
xor
sbb
jno
mov
push
mov
push
repz
add
dec
push
push
mov
ds
sub
or
cltd
jae
mov
mov
sbb
pop
stos
daa
mov
or
dec
push
insl
mov
mov
push
sbb
or
movsl
inc
mov
rsqrtps
mov
and
push
push
xor
stc
xlat
in
cmpsb
inc
lods
and
fwait
std
xchg
test
mov
mov
mov
cwtl
add
push
dec
das
ret
lds
dec
inc
addr16
or
jno
ja
pop
jns
mov
or
fs
xchg
jo
add
icebp
je
insb
mov
iret
and
div
jns
xorl
mov
das
or
out
icebp
movsl
sub
sub
fsubrs
sub
push
xlat
clc
add
bsr
pop
in
sub
call
notl
lods
imul
mov
push
mov
dec
mov
adc
lret
mov
repnz
sub
aas
hlt
sti
sbb
call
pop
rorl
mov
rclb
test
in
push
xchg
iret
cmp
pop
mov
repnz
in
icebp
leave
loope
fstps
push
jmp
sbb
fistps
add
sti
movsb
stc
sub
jae
out
sub
enter
dec
sbb
decl
cld
insl
jp
mov
pusha
dec
xchg
cmp
insb
sub
into
mov
jl
xchg
ret
push
cmpl
fsubs
clc
mov
imul
xor
push
and
sbb
mov
out
add
pop
dec
negb
cmp
cmp
es
cmp
inc
lret
in
xchg
sbb
stos
cmpl
jnp
jp
mov
jbe
sub
cmp
imul
push
das
xchg
xacquire
shlb
fildl
or
pop
fimuls
pop
push
mov
out
push
insb
sti
mov
mov
std
mov
in
push
int3
fs
dec
in
rorl
dec
sbb
jae
ffree
js
inc
cld
xor
test
sbb
sbb
push
stos
fstps
dec
leave
jns
inc
xor
mov
popf
insl
loopne
push
jmp
lods
and
pop
or
sti
sbb
insb
lock
int3
notl
mov
rolb
jmp
pusha
pop
jnp,pt
push
das
mov
add
lds
jns
jecxz
arpl
dec
adc
mov
xlat
mov
les
mov
int
cli
pop
push
mov
cmp
cwtl
jno
test
mov
sbb
andl
int3
cmp
push
mov
andl
mov
movsl
std
lods
ficomps
cltd
mov
das
fxch
jae
or
pusha
loopne
xchg
ret
cmpsb
aam
push
mov
out
sub
popf
int3
je
inc
addr16
fs
push
xor
out
inc
cmp
popf
js
xor
imul
das
sub
lods
lret
jo
nop
in
adc
ficomps
cmpsb
std
fcoms
loope
arpl
int3
push
push
push
ret
shll
loop
imul
insl
shlb
cwtl
xchg
icebp
jnp
xor
in
jp
sub
adc
jmp
jmp
je
addr16
into
int3
fimuls
and
arpl
dec
inc
pop
mov
dec
push
pop
jmp
ret
pop
in
push
lock
jae
leave
push
sbb
repz
lret
fldlg2
mov
imul
push
cmpsl
stos
xchg
xor
jl
mov
dec
pop
mov
in
insl
repz
and
aad
in
iret
scas
add
push
xor
mov
pop
pop
inc
mov
sub
inc
jne
fcoms
add
push
add
lods
out
outsb
cmc
mov
and
pop
dec
push
ljmp
fidivl
mov
mov
cmp
push
jle
sub
das
adc
cmp
sbb
addb
les
test
push
das
ret
and
mov
fldl
cmp
jns
inc
push
hlt
and
xlat
cmp
fdivs
adc
cmp
mov
xchg
notb
jge
in
jl
test
pushf
inc
mov
adc
cld
fsubl
cs
sub
cmc
movsb
sarl
scas
les
imulb
pop
adc
xor
dec
clc
xlat
imul
lock
mov
call
shrl
ficomps
ja
out
outsb
or
sub
daa
cld
cs
pop
mov
adc
js
fstps
lahf
push
repnz
ret
push
jle
test
sbb
cmpsb
jne
hlt
cmpb
mov
xchg
push
inc
lods
repz
aam
sbb
test
mov
cltd
cli
mov
or
in
jp
mov
data16
les
pusha
mov
or
fwait
mov
lcall
outsl
sub
fst
fisubs
pop
fbstp
mov
adc
ja
mov
mov
mov
mov
iret
pop
addr16
pop
fsts
xchg
mov
orl
jmp
pop
mov
sbb
es
dec
pop
mov
inc
add
lcall
push
adc
inc
shll
sub
push
shrl
iret
add
sub
adc
or
push
or
push
rorb
mov
test
test
aaa
leave
dec
xor
hlt
jo
sbb
shll
repnz
out
sti
loope
and
fsubl
xchg
mov
andb
sbb
jae
and
pusha
or
push
mov
jg
int3
js
stos
jecxz
ja
mov
rcll
push
jg
in
or
xchg
scas
in
mov
mov
lods
xchg
pop
ret
xchg
fwait
insb
jb
push
aaa
cld
xor
sbbl
arpl
sub
mov
leave
ds
rclb
adcl
jle
rorb
push
jne
xor
sbb
into
xchg
jle
sbb
sti
mov
out
adc
xlat
cli
icebp
sub
cmp
sub
mov
dec
pop
xor
mov
test
or
addr16
hlt
inc
sub
nop
jae
jo
rorl
inc
movsb
loope
clc
dec
sub
es
adc
or
cwtl
sbb
cmp
cmp
call
fsts
ja
stos
clc
sti
fs
icebp
mov
out
ja
outsl
or
and
test
dec
pop
pop
lds
pusha
inc
lds
fwait
inc
imul
xchg
mov
jmp
outsl
push
inc
in
sbb
lea
push
inc
inc
mov
repnz
fsubs
add
dec
sbb
inc
insb
xchg
scas
lret
stos
addb
adc
push
xor
wbinvd
pop
xchg
sahf
insl
in
add
mov
jle
cmp
mov
add
inc
loopne
adc
sub
jg
out
push
or
leave
ss
mov
mov
pop
adc
pop
dec
pop
into
push
cmc
xor
cmpl
dec
cmpsl
sti
jg
and
jno
dec
pop
jg
xchg
ret
hlt
mov
fistpl
std
jge
xor
sarb
cmp
test
dec
adc
stos
dec
xor
push
sbb
cmp
bound
fadds
in
cmp
bound
ljmp
add
outsl
mov
call
fnsave
pop
lods
pop
sub
jge
jns
push
fwait
pop
xlat
sub
inc
or
icebp
jns
jne
mov
fcmovbe
xchg
xor
rcrl
jb
jnp
mov
imul
dec
jns
cmpb
leave
xchg
push
nop
ds
sbb
shlb
mov
push
adc
movsl
push
pop
inc
jb
cli
stos
cld
cmc
xor
sahf
std
fdiv
scas
cmp
mov
adc
dec
xor
insb
mov
andl
rcr
imul
cmp
sub
add
out
xchg
mov
cmp
aam
repz
dec
adc
and
cmp
bswap
pop
loopne
mov
inc
adc
pop
inc
mov
fnstcw
addr16
call
cs
or
mov
dec
push
xor
lock
enter
mov
xor
daa
and
icebp
and
inc
shlb
dec
scas
mov
and
pop
push
jle
push
fstpt
mov
push
jmp
push
movsb
sbbb
clc
mov
in
sahf
ds
mov
or
mov
and
repz
xor
sbb
iret
xor
clc
ds
ficomps
cmp
and
mov
cs
mov
mov
test
stos
mov
xor
jle
add
pop
or
repz
dec
jno
in
dec
outsl
ja
pop
or
sub
xchg
mov
fidivl
scas
aas
and
fistps
imull
xor
adc
je
jns
decb
les
lahf
and
push
xor
or
in
mov
inc
xlat
repz
add
lds
push
insl
jge
xchg
mov
outsb
rcl
int
int
push
xchg
fs
mov
or
mov
lret
iret
mov
dec
ss
xlat
out
add
das
mov
pop
out
je
push
xchg
int
iret
xrelease
cli
lods
fisubl
cltd
mov
cwtl
cmp
mov
les
pop
cld
lret
dec
in
addr16
repz
test
mov
sti
fildl
xchg
cmp
add
std
fldcw
jbe
icebp
push
pop
add
out
xchg
or
cmp
mov
adc
mov
cltd
gs
xlat
jecxz
mov
sub
mov
arpl
jl
dec
push
jp
aad
call
dec
adc
mov
sub
or
inc
sahf
or
dec
ljmp
push
push
sub
lea
inc
in
ret
cmpsl
or
push
push
xor
jg
outsl
int
call
cmpsl
ljmp
out
roll
negl
lods
lret
xor
adc
mov
pop
aas
pop
and
mov
aam
xor
lods
mov
push
dec
lods
sub
push
insb
nop
cwtl
adc
loop
xchg
lea
xor
xchg
sbb
cmp
push
push
xchg
xchg
xor
jmp
idiv
cld
add
and
xchg
xchg
sub
dec
icebp
data16
mov
cli
syscall
mov
cs
and
les
shl
sub
sbb
add
adc
adc
pusha
xorb
mov
stc
adc
ss
push
into
mov
out
pop
lret
mov
and
subps
xchg
out
inc
push
inc
xchg
xchg
and
ret
lock
popf
dec
into
fisubrl
mov
jbe
inc
dec
adc
jecxz
leave
mov
sbb
sahf
fstpl
sub
or
inc
dec
push
test
aam
mov
pop
jle
fstpt
xchg
in
insl
stc
pop
sub
arpl
jp
out
cmpsl
dec
loopne
push
ja
bound
mov
clc
outsl
call
fbstp
outsb
jo
fwait
lcall
daa
imull
add
jne
mov
push
or
mov
add
arpl
mov
pop
js
sbb
pop
and
mov
pop
add
add
movsb
mov
test
orb
jae
call
xor
inc
loope
xor
mov
push
push
jnp
cs
loope
push
xor
sti
and
pop
xchg
jmp
nop
es
movsl
mov
sub
pop
mov
sbb
push
je
fildl
push
loop
xor
cmp
lods
dec
lea
mov
scas
xor
push
cltd
imul
stos
inc
sub
mov
cmp
cmp
std
and
xor
dec
pop
jge
add
pop
xchg
fwait
xor
sub
cmc
stos
mov
fcomp
or
add
fcompl
sub
pop
sbb
out
cmp
je
mov
xchg
adc
add
xchg
jns
push
int3
popa
leave
and
lcall
sbb
jecxz
xlat
cmp
movsl
push
mov
and
inc
popa
sub
jmp
lods
lods
xchg
out
rorl
and
scas
mov
dec
cs
sar
and
add
or
mov
push
ret
xor
add
xor
xchg
mov
push
out
outsl
xchg
sarl
jae
lret
insl
out
add
push
and
xchg
cli
sub
packssdw
fs
shll
xchg
cmpsb
popf
out
popf
decl
dec
xchg
iret
mov
sbbb
jle
les
pop
jb
push
sub
sbb
ret
adc
sbb
test
repz
movsl
jbe
in
std
jo
or
adc
push
and
sbb
shll
dec
movsb
arpl
xchg
mov
and
stc
pop
xchg
mov
mov
adc
add
dec
jmp
inc
es
push
sbb
adc
arpl
ficompl
loope
push
ss
jle
push
pop
xor
push
jns
repz
test
sbbb
inc
push
mov
iret
in
xor
repnz
andb
mov
dec
loop
mov
jmp
push
push
bnd
ja
in
adc
cs
std
fnsave
nop
push
ss
flds
mov
cmp
out
das
ja
dec
into
sbb
loopne
outsb
or
out
subb
je
clc
dec
dec
je
imul
test
addr16
adc
xor
repnz
push
mov
fcoms
fiaddl
loope
cs
xlat
mov
and
jg
in
mov
pusha
push
dec
push
push
push
add
scas
das
mov
fcoms
lcall
sub
mov
sub
pop
call
ret
cmpsb
dec
lcall
adc
push
cmp
cmp
test
cmpsl
jle
repz
sub
rclb
add
imul
cmp
mov
push
push
jecxz
leave
cmp
test
fstps
xchg
dec
push
mov
mov
pushf
or
rorl
sub
and
jae
and
sbb
mov
cld
loopne
mov
repz
xchg
jle
jmp
repz
stc
cmp
sti
das
pop
stc
jne
out
sbb
outsb
adc
icebp
fs
aaa
and
aas
or
mov
or
inc
jb
mov
push
js
pop
pusha
mov
or
mov
mov
mov
xchg
test
add
daa
stos
pop
cmc
std
pavgw
loop
jb
pop
dec
xchg
or
faddp
xchg
fistpll
fsubrs
dec
mov
aaa
addr16
pop
ss
xor
lahf
add
out
pop
sub
inc
inc
mov
add
imul
xchg
push
xlat
imul
or
jl
or
jo
stc
cmpl
jae
dec
jo
daa
das
add
loopne
jb
std
inc
movsl
jp
xor
lock
cli
push
arpl
mov
sub
out
mov
xchg
lahf
mov
lods
sub
or
or
mov
fcomp
sbb
cld
ljmp
xchg
add
je
push
imul
and
xchg
shlb
decl
dec
mov
in
bound
dec
out
mov
or
js
outsb
xchg
inc
push
adc
mov
cltd
arpl
stos
push
mov
adc
in
out
mov
or
xor
rolb
mov
ret
gs
fnsave
into
xchg
mov
in
jbe
mov
push
mov
mov
push
cmp
push
ficompl
mov
push
notl
dec
jns
sub
xchg
inc
movsl
arpl
test
cli
cmc
mov
sub
xchg
mov
push
sbb
ljmp
xor
fnsave
and
shrb
pop
data16
int3
lret
adc
sahf
and
out
leave
fsubr
xor
inc
and
stos
nop
mov
rclb
jbe
nop
and
dec
dec
pop
stos
mov
repz
stos
fwait
add
adc
out
jo
xor
movsl
push
add
xor
cmpsl
jne
push
ficoml
push
fsubp
pop
mov
stc
lret
sub
int3
gs
aam
sbb
incl
int
adcl
cmp
xchg
enter
push
push
adc
pop
imul
cmpsb
aam
leave
adc
cmpb
data16
adc
mov
rolb
sub
mov
jge
daa
push
or
loop
fsubs
xchg
cltd
sbb
push
out
cs
out
push
jg
out
xchg
inc
movl
jo
dec
inc
iret
ss
mov
cli
ficompl
bound
lods
in
bound
xchg
leave
pusha
sbb
add
mov
mov
jne
mov
xor
insb
push
jbe
pop
sbb
test
aaa
pop
lods
push
mov
aaa
pushf
lods
and
mov
out
leave
test
xor
js
nop
sarl
leave
adc
mov
cltd
cmp
jne
cli
or
xchg
daa
dec
in
cmpsb
push
sub
js
jb
imul
mov
or
lret
dec
jmp
lcall
or
xchg
out
cwtl
fisubs
push
cwtl
sbb
xor
xchg
xor
mov
mov
sbb
pushf
cmp
dec
push
mov
movsb
cltd
push
mov
mov
lods
pop
cli
mov
mov
xchg
mov
orl
aam
adc
jae
aam
rcrb
nop
xchg
xchg
inc
stos
xor
cli
jg
xchg
pop
fwait
xchg
lahf
ficompl
mov
add
les
mov
in
or
outsb
mov
in
int3
fiadds
mov
jg
test
hlt
hlt
mov
in
push
lock
pop
stos
and
jmp
pop
shr
jl
or
stos
or
cltd
ret
xchg
xor
sub
es
push
xchg
mov
jmp
nop
pop
push
sbb
pop
mov
add
int3
adc
sbb
cli
jecxz
cli
pusha
icebp
mov
imul
cmp
or
mov
je
lahf
dec
add
jmp
loop
ja
sti
xchg
into
gs
sbbb
xchg
shl
add
xor
mov
and
or
fdivrs
jmp
out
add
icebp
mov
es
int3
add
out
add
add
sub
inc
stc
and
push
stos
mov
outsl
aaa
sbb
ret
ds
sub
push
add
fisubrl
sbb
loope
pop
stos
pop
stos
data16
add
enter
cmc
pop
out
cs
xor
call
lcall
imul
push
or
push
sti
movsb
subl
fisubl
into
add
sarl
cmp
cmp
movsb
fiaddl
push
inc
ljmp
sub
outsl
xlat
sub
pop
dec
xor
xor
push
callw
loope
jmp
pushf
sbb
scas
enter
iret
or
out
aad
add
sbb
and
outsl
push
sahf
sub
imul
push
xchg
shll
enter
out
lcall
jne
sub
das
sti
lods
sbb
pop
dec
stc
lods
movsb
clc
movsb
mov
out
arpl
mov
test
int
pop
ds
cli
shrb
imul
outsb
mov
out
cmp
sub
xor
das
and
cmpsl
ficomps
stos
dec
jle
out
and
xor
mov
aaa
cmp
lret
nop
push
mov
mov
add
inc
fsubrl
sub
fistps
inc
or
movsb
test
orl
scas
je
xor
jl
out
and
push
pop
gs
push
popa
pushf
xchg
dec
mov
ret
icebp
xchg
test
jg
mov
push
aad
mov
add
loope
mov
pop
in
pop
mov
adcb
loop
sub
pop
add
cmpb
sbb
push
push
lahf
dec
cltd
sub
sbb
fisttpl
cmp
mov
mov
push
xchg
cmc
rcll
dec
adc
and
shll
jl
iret
loopne
daa
and
jle
push
sub
out
jbe
movsb
mov
insb
mov
pusha
mov
pushl
pop
shll
adc
je
add
push
dec
jp
pop
fcoml
into
gs
bound
fnstcw
mov
stos
add
mov
dec
call
aam
negb
int3
sbb
rdmsr
stos
xchg
xchg
or
inc
push
push
xlat
decb
sbb
divb
pop
lahf
lret
jns,pn
and
push
sbb
ret
cmp
fs
ljmp
lds
sub
lahf
lods
push
pop
cli
scas
jae
jae
sub
repnz
and
into
es
insb
xor
add
inc
lea
sahf
jp
test
les
xorb
lcall
dec
push
out
sbb
fwait
xchg
sub
sbb
xor
aaa
cwtl
mov
js
mov
les
pushw
pop
ljmp
sbb
or
ss
lahf
xchg
outsb
jnp
mov
pushf
pop
jle
push
xor
test
and
inc
cs
mov
stc
test
adc
sub
fwait
sahf
jge
das
push
add
pop
iret
add
sbb
pop
out
stos
imul
pushf
xchg
arpl
or
adc
or
stos
add
ret
ss
daa
add
mov
ljmp
jecxz
push
pop
fwait
loopne
mov
hlt
cli
push
fadd
aad
adc
push
adc
add
adc
test
add
addr16
test
sub
jnp
adc
vmread
adc
xor
add
cld
out
xchg
aad
pop
lret
pop
les
dec
dec
inc
dec
sbb
fcoml
rclb
fstps
jne
rclb
lahf
cmp
xor
repnz
fists
dec
pop
in
inc
pop
cmpsb
imul
int
cld
lds
adc
ljmp
pusha
lods
lods
jnp
mov
mov
jo
xor
jmp
pop
jmp
adc
mov
loopne
popa
sbb
mov
xchg
pop
aad
dec
repz
movsl
push
sub
adc
inc
dec
dec
roll
inc
jge
enter
stc
rclb
jbe
stc
repnz
push
arpl
sub
and
repz
jle
dec
pop
mov
dec
cld
inc
jmp
jp
push
scas
lock
lret
sbb
jns
insb
mov
ret
sbb
rcrl
push
dec
sub
sub
jne
mov
adc
out
test
xchg
movsl
xchg
sbb
and
mov
test
data16
xchg
push
in
dec
push
lret
jns
mov
pop
pop
cmp
sarb
inc
lock
mov
insl
out
dec
loop
and
cmpsb
inc
ds
movsb
test
mov
dec
and
cmp
jg
pop
sub
das
and
int
sahf
and
cmp
jo
cmc
pop
or
cmpsb
dec
xlat
add
fisubrs
and
nop
and
shlb
call
xchg
fdivrl
mov
stos
pop
fnsave
aaa
mov
jns
sbb
mov
sub
push
dec
push
test
pop
das
es
or
out
nop
mov
mov
xchg
xor
push
mov
mov
mov
loop
and
in
imul
add
es
fistpll
xchg
mov
xorl
stc
fwait
xchg
fstpl
xchg
fs
int
mov
xor
mov
add
fs
lock
and
scas
daa
sub
xchg
mov
sub
test
mov
pusha
adc
repz
adc
and
std
cmp
mov
jl
inc
push
sbb
sub
add
jp
adc
pop
mov
and
cmpl
pusha
jmp
ss
dec
jp
dec
push
pop
clc
outsb
call
cld
adc
loop
adc
adc
mov
in
jns
repz
iret
cmp
pop
xchg
sbb
xchg
xchg
mov
mov
stc
lret
pop
sbb
dec
scas
and
clc
add
aaa
pop
push
gs
shlb
push
pusha
in
add
mov
sub
mov
fistl
ja
mov
in
jo
sbb
or
enter
jo
jmp
xor
xlat
inc
push
pop
cmp
icebp
sahf
mov
or
add
xlat
addb
mov
stos
testb
or
nop
mov
imul
in
pop
push
cmpsb
cmpsl
xor
not
loop
pop
into
jl
out
ret
std
xchg
pop
dec
popa
data16
lea
dec
pop
inc
add
pop
filds
sub
imul
popf
aam
enter
mov
movsl
jb
cmp
inc
push
scas
fidivrl
nop
stos
jg
cmp
push
dec
rcrb
mov
into
cmp
xlat
fmuls
xor
push
cld
add
notb
cmc
or
cmp
mov
xchg
jnp
repnz
loope
pop
call
mov
push
xor
arpl
cltd
insl
or
inc
inc
adc
push
pusha
ret
pop
stos
addr16
sarl
pusha
sbb
test
aam
jbe
imul
mov
inc
gs
dec
pop
pop
sbb
shlb
clc
inc
add
xor
clc
pop
dec
xor
adc
inc
cmc
and
popf
push
pop
inc
inc
cs
inc
mov
pushl
mov
mov
adc
mov
pop
jo
mov
lahf
rorl
test
pusha
sarl
cmp
xchg
mov
and
mov
xor
pushf
ss
jge
adc
jo
das
mov
cltd
aad
ds
jmp
je
jb
nop
jns
mov
fcmovnb
add
lods
insb
in
fcoml
xor
cmpsl
mov
pop
enter
fsubs
push
call
fadds
out
dec
out
xchg
ret
lods
cmp
pop
cmp
lods
adc
push
call
fsts
pop
xchg
push
mov
jnp
jno
movsl
or
mov
int
icebp
xchg
in
lcall
cmp
jecxz
das
or
pop
pop
or
rolb
adc
xchg
cmp
fisubrl
popa
mov
sti
leave
scas
or
fsubrl
push
aad
lret
pop
dec
mov
jle
mov
sbb
dec
leave
icebp
imul
in
add
mov
pop
or
xchg
xchg
xchg
jne
jnp
inc
xlat
pop
mov
fiaddl
int3
push
cmp
mov
xlat
push
inc
aas
mov
and
push
lahf
in
pop
fincstp
pop
xchg
loopne
ljmp
jge
mov
and
leave
xchg
dec
push
in
pushf
jnp
or
mov
adc
sbb
adc
jno
push
add
sub
test
pushl
mov
dec
popf
jbe
int
cmc
lods
pop
jp
adc
popf
add
flds
int3
es
xor
sbb
fwait
jl
sbb
push
pop
in
jns
adc
lds
jmp
xchg
hlt
out
mov
test
mov
lea
adc
mov
xchg
mov
jne
lahf
les
pop
xchg
push
jmp
shlb
xchg
dec
sarl
lods
inc
sbbl
mov
fmull
mov
imul
xor
lcall
cli
pop
push
add
xor
jecxz
mov
cmp
sbb
aaa
into
aam
bound
jnp
pop
cwtl
sbb
and
inc
cmp
repnz
jmp
push
shll
loope
dec
mov
mov
into
mov
mull
pop
enter
mov
test
inc
pop
je
jge,pn
mov
sbb
xchg
sbb
inc
mov
mov
dec
jmp
xor
jp
andb
lahf
sbb
adc
repnz
and
popa
repnz
jae
push
or
out
and
lods
popa
adc
out
xor
test
imul
out
dec
cmp
vaddsubpd
cmp
sbb
mov
mov
xlat
aam
sub
lods
xchg
fistpl
inc
fwait
jmp
cwtl
adc
clc
jmp
sub
sbb
xchg
mov
in
or
jmp
or
cltd
lods
sub
daa
and
data16
stos
jmp
mov
pop
inc
add
stos
inc
add
scas
pop
adc
pushf
pop
push
fldt
xchg
jmp
and
sbb
enter
cmovnp
sub
cltd
jecxz
mov
inc
add
ret
jmp
into
adc
push
jecxz
push
lret
cmpsl
sub
add
dec
cmpsl
loopne
int
hlt
adc
aas
jg
es
inc
sub
out
sahf
and
add
shlb
cld
fs
and
mov
inc
sbb
and
les
xchg
loopne
push
jne
fwait
int
out
mov
adc
pop
jp
imul
popa
cmp
pop
fdivs
or
xorb
mov
xchg
sub
jge
mov
sahf
and
jo
push
cmp
insl
jge
stos
add
and
or
fidivl
sbb
bound
and
lret
aas
xorb
ret
out
int
ret
iret
xor
fiadds
add
jmp
into
bound
cs
cmc
lea
arpl
sub
fstps
cmp
dec
pop
test
sbb
jecxz
xor
imul
fwait
mov
test
pop
ja
inc
out
sbb
add
pop
adc
out
jecxz
lds
shr
cmpsb
sub
cltd
lcall
cmp
cmp
push
jne
lret
sub
into
loope
jae
hlt
ss
movb
or
lret
xchg
inc
jnp
adc
mov
ror
xchg
inc
and
fistps
jb
sahf
dec
cmp
aaa
ljmp
cmp
js
ds
mov
xchg
xchg
jno
mov
cmpsb
mov
sub
aad
mov
mov
push
mov
mov
sbb
out
add
and
hlt
xchg
cmc
sti
pop
add
cmpsb
dec
popf
fcomi
cmp
or
sahf
jmp
test
jle
loope
inc
or
pop
adc
xor
add
lea
ret
mov
popf
cmpsb
dec
xor
sbb
std
loopne
cmpsl
add
sub
rclb
push
pop
jp
in
mov
mov
arpl
and
inc
out
outsl
adc
mov
lret
cmc
jns
out
hlt
shrb
and
inc
rolb
fadd
rep
adc
rcll
shll
xor
pop
jne
cli
test
sahf
mov
dec
andl
push
fbstp
sub
cld
inc
cmp
jmp
push
jecxz
pop
inc
push
mov
jb
stos
das
rcrl
xor
pop
sbb
cmp
fists
pop
inc
in
test
pop
ljmp
cmc
cs
and
push
xchg
pop
sbb
movsl
filds
jg
pop
sub
movsb
std
popa
adc
enter
xor
je
push
aad
mulb
inc
pop
mov
call
mov
cmp
in
in
movsb
cmp
cli
xor
std
decb
mov
xrstors
ficoml
inc
pop
jle
pop
dec
test
xchg
jno
lahf
loopne
adc
push
fwait
adc
andb
aas
shlb
arpl
out
push
lods
push
sti
and
dec
insl
sub
inc
outsl
push
xor
test
pop
mov
mov
arpl
scas
int3
shll
fldt
mov
fs
and
jmp
sbb
pushl
scas
insl
fstpt
add
cmp
cs
inc
aam
dec
mov
sahf
jne
cmp
push
cs
ret
mov
pop
mov
fldt
mov
inc
push
aaa
mov
fs
pop
hlt
sub
inc
mov
xchg
sub
sbb
xor
js
inc
stos
out
push
pop
or
mov
aad
mov
mov
stc
cld
scas
dec
mov
and
mov
fwait
jmp
pop
pop
sbb
fwait
cmp
mov
push
push
mov
aas
xor
push
pop
mov
addr16
notl
lret
adc
mov
dec
inc
xor
jb
jnp
mov
dec
outsb
xlat
push
push
push
cmpsl
aaa
lods
insb
jl
scas
mov
adc
pop
sub
xor
insb
imul
mov
sbb
sub
sub
dec
fcoms
lret
fxch
cmp
fdivl
mov
jmp
arpl
mov
out
jg
clc
aas
dec
cmc
push
dec
pop
popf
adc
neg
sub
test
aad
inc
fwait
add
stos
jge
ljmp
fidivrl
pusha
dec
xor
int3
pop
andl
ja
clc
push
clc
pop
sub
push
imul
test
inc
ret
ret
mov
sbb
mov
xor
shlb
aad
xor
sahf
mulb
out
and
dec
aam
mov
push
cs
movb
aaa
pop
sub
insl
inc
not
loope
dec
shrb
mov
out
jp
test
dec
push
adc
repz
xchg
cmp
daa
daa
mov
adcl
inc
into
and
jmp
fnsave
addr16
fbstp
push
movsb
mov
dec
clc
xor
pop
aam
xchg
cmp
jle
jae
and
scas
hlt
sub
outsl
push
adc
repz
dec
jne
pop
rcrl
cld
inc
sub
add
or
ret
xchg
out
out
pop
popa
add
mov
divl
aaa
jbe
pop
xchg
hlt
aas
adc
jecxz
arpl
sub
xchg
std
pusha
adc
push
mov
mov
loope
dec
test
daa
and
negl
inc
sub
fiadds
call
xor
add
xchg
js
jno
lret
rcr
shrb
sub
imul
inc
dec
pop
inc
hlt
or
cmpsl
mov
lds
lea
xchg
xor
out
lods
xchg
repnz
loope
mov
int3
dec
dec
mov
xlat
dec
and
pop
cmpsl
sub
mov
inc
fcompl
into
repnz
test
imull
out
pop
lahf
xor
shlb
mov
popf
test
scas
sbb
or
idivb
sub
subl
sub
pop
pop
in
jbe
repnz
jp
jo
int
js
or
ret
int3
lret
dec
rcrl
pop
repz
push
pop
sub
fwait
dec
test
jg
xchg
test
xchg
sahf
ret
inc
jmp
lods
dec
mov
std
mov
mov
repnz
or
dec
jbe
pop
aam
or
add
push
clc
sbb
mov
int
rcll
fs
enter
pop
nop
cmpb
sti
mov
jno
push
dec
mov
cmpsb
movsb
pop
adc
xor
cwtl
cmp
fbld
push
and
paddw
cli
shl
inc
call
dec
jnp
aad
mov
pop
fildll
sub
inc
out
xchg
addr16
push
sbb
fbstp
pop
insb
push
jb
pusha
cltd
cwtl
jle
push
insl
or
out
pop
daa
int
test
mov
test
loopne
mov
aaa
cmpb
test
jb
xchg
add
ret
pop
or
jns
xchg
fnstsw
sbb
sub
sbb
fsubs
daa
stc
in
mov
xor
mov
rol
popf
imul
std
xchg
mov
dec
bound
stc
adc
mov
add
or
inc
mov
xchg
jns
pop
sbb
mov
fisubrs
pop
or
dec
scas
inc
push
sub
cmp
movsl
pop
xchg
lock
hlt
in
or
dec
int3
call
push
es
and
lahf
cs
dec
ret
mov
lret
lret
call
sahf
or
scas
xor
push
mov
xor
int
and
vcvtpd2dqy
pop
scas
adc
xor
repnz
insb
mov
jecxz
adcl
sbb
fnstenv
out
dec
in
movhps
inc
mov
push
popf
xchg
jg
mov
stos
or
xchg
xchg
cmp
adc
into
push
xor
call
cmp
sbb
jb
fdivl
repnz
rcr
cmpb
cltd
fucomip
test
push
hlt
or
sbb
imul
clc
lcall
mov
and
and
mov
out
xchg
subb
shlb
icebp
dec
pop
rclb
outsb
xchg
dec
les
adc
mov
aam
mov
pop
mov
dec
pop
cs
sub
inc
adc
mov
and
push
xor
mov
mov
imul
add
jl
mov
add
sti
sub
imul
out
idivl
stc
sub
mov
sbb
jmp
cmp
shl
dec
and
pop
movsl
pop
mov
js
adc
jp
inc
pop
insb
mov
shlb
aam
pop
insl
pop
rcl
in
adc
fwait
or
aas
aas
aas
jae
imul
cmp
repz
stos
mov
test
test
jg
jg
push
jb
xchg
ret
pop
inc
mov
xchg
outsl
cltd
repnz
push
inc
mov
and
cmpsb
aad
xor
les
mov
or
mov
jp
fnstcw
and
aas
or
or
flds
sbb
sub
aas
cmp
minps
push
test
repz
cmp
fs
ljmp
test
cmp
and
mov
sbb
mov
push
ret
mov
popf
daa
jnp
dec
fnsave
pop
stos
jle
cmp
dec
adc
int3
xor
or
adc
mov
bound
add
push
inc
dec
arpl
adc
lea
ljmp
test
mov
lret
mov
xor
mov
popa
fwait
mov
divb
push
scas
fwait
in
stc
scas
dec
cmc
out
movsb
or
cmpsb
adc
enter
pop
dec
jae
inc
push
aas
sarb
ret
out
stos
lods
dec
test
das
xchg
pop
fs
sub
mov
aam
sbb
fwait
lods
inc
sbb
inc
stos
mov
out
test
add
rcr
mov
jae
decb
mov
pop
daa
inc
push
and
jp
cmp
add
inc
inc
and
pop
call
jp
mov
jns
sbbl
ret
roll
mov
and
dec
int3
sub
aad
outsl
leave
push
lfs
sub
adc
rclb
mov
sub
mov
in
push
mov
mov
loopne
test
mov
test
lcall
cmc
enter
mov
cmp
jbe
cltd
daa
mov
mov
sahf
adc
xor
cmpsb
lret
sub
and
fmul
leave
and
scas
push
mov
lods
add
imul
pop
cld
sub
pop
push
xor
mov
adc
mov
loope
sub
outsl
jmp
out
fidivl
xchg
repnz
cmp
push
add
push
add
into
lret
jb
ja
outsb
adc
xchg
sbb
jnp
enter
mov
nop
dec
push
mov
jp
daa
pop
mov
xchg
mov
sbb
test
push
jbe
jae
push
icebp
fdivp
pusha
push
jl
outsb
insb
outsb
addr16
inc
jge
lods
dec
xchg
lret
cmp
imul
push
cli
xchg
pmaxub
lcall
sub
stc
push
xchg
ret
jp
sbb
das
inc
lahf
xorb
push
decb
repz
or
pop
les
data16
add
and
mov
outsb
dec
scas
pop
jne
inc
pop
in
in
jg
jecxz
dec
jmp
in
sub
mov
xchg
loope
adc
loope
sahf
insl
mov
and
ja
add
in
or
inc
mov
rorb
push
movsl
lcall
outsb
mov
in
ret
leave
idivb
mov
push
sbb
and
xchg
cmp
add
cltd
mov
test
cltd
push
gs
jnp
xor
mov
adc
std
dec
out
lods
shlb
sahf
out
pop
add
loope
pop
lea
add
cmp
pushf
add
sbb
ja
fnstcw
push
jle
mov
aaa
aam
mov
sbb
fwait
mulb
lds
push
js
push
cmp
int3
das
or
jns
loopne
xchg
push
mov
je
cmp
push
jmp
cmp
mov
adc
hlt
xor
pushf
push
xchg
in
lods
clc
sbb
inc
rorl
ret
rcll
inc
mov
mov
sarl
insb
roll
mov
push
mov
and
adc
jne
dec
pop
add
ret
gs
add
gs
pushf
jle
in
jns
xchg
sbb
shl
aad
loopne
mov
xchg
pop
mov
or
inc
xchg
mov
in
or
xor
mov
in
testb
mov
loop
mov
cltd
xchg
mov
or
mov
dec
aas
imul
jp
push
and
pop
arpl
and
xchg
fsub
or
xlat
aas
push
out
stos
fldenv
sub
movsb
pop
sbb
sub
mov
and
je
pop
outsl
in
call
daa
push
xlat
mov
nop
iret
inc
fcom
sbb
mov
fwait
xor
imul
pop
and
cs
cs
movsl
and
pushf
jg
mov
mov
mov
popf
loopne
icebp
xor
scas
sbb
or
ds
sub
mov
bound
aad
mov
test
mov
arpl
shr
int3
push
mov
and
movsb
xorl
sub
call
cmpsb
xlat
shl
je
cmp
ljmp
sarb
xchg
test
icebp
push
pushf
xor
orb
icebp
mov
addr16
nop
je
in
jb
test
and
or
fdivrs
test
cwtl
lret
and
repz
xchg
popa
inc
push
aad
fwait
cmc
cmc
jg
or
xor
mov
out
es
stos
dec
jne
fwait
in
and
fisttps
lcall
dec
push
xchg
shlb
xchg
test
ficompl
pop
mov
testl
sbb
add
in
lea
mov
cwtl
cmpb
lea
ljmp
shr
sbb
daa
xor
or
stc
mov
stos
das
mov
xchg
ljmp
cmc
loope
xchg
movsl
push
out
in
cmp
dec
mov
inc
leave
sub
scas
xchg
inc
imul
dec
lcall
jae
leave
mov
shr
adc
cmp
adc
mov
cmp
mov
inc
adc
push
cmpsl
inc
jle
cwtl
mov
inc
pop
lods
sti
jge
or
ret
iret
push
rclb
and
or
lods
pop
loop
aaa
adc
mov
or
int3
pop
inc
aaa
pop
xchg
and
push
mov
add
push
fs
xor
fs
jmp
cmp
pop
aad
popf
pop
fcmovbe
jae
xlat
cli
imul
inc
inc
push
jbe
jmp
mov
push
cmc
pop
lcall
sbb
dec
xchg
add
cmpb
mov
mov
jb
mov
pop
test
mov
pop
out
xor
dec
pop
jb
js
gs
adc
mov
jmp
or
fcomip
in
dec
andl
or
and
xchg
pusha
pusha
mov
test
add
xor
test
jne
inc
fdivp
inc
mov
add
or
or
jmp
push
les
or
hlt
stc
neg
fisubrl
pop
les
or
pop
inc
push
xchg
push
add
mov
and
fidivs
mov
popf
repnz
aad
flds
and
mov
add
fcoms
popa
cmc
arpl
cli
inc
sub
push
add
insl
and
aaa
in
daa
pop
xchg
and
lahf
add
scas
jae
mov
mov
orl
pop
imul
and
mov
imul
bound
insb
inc
leave
or
aas
and
push
add
xor
adc
mov
xlat
adc
pop
cld
add
clc
xor
push
inc
inc
data16
movsb
jae
loopne
add
lods
cmpsl
bound
sbb
sbb
xchg
lea
je
test
push
ret
repz
sti
pop
loopne
mov
idiv
out
adc
bound
sbb
push
or
adc
cmp
test
inc
jmp
aam
scas
nop
adc
mov
mov
dec
stos
test
mov
test
jae
push
fbstp
add
dec
loope
mov
push
mov
lock
sbb
jo
out
les
in
lds
add
lods
les
and
pusha
loopne
pop
or
mov
out
enter
les
loopne
int3
inc
sbb
and
or
mov
lock
fbld
stos
lock
js
sbb
test
roll
sbb
ror
cmpsb
fstl
jmp
pop
dec
mov
inc
pusha
mov
repz
or
fwait
sbb
jo
xor
push
inc
lahf
arpl
call
std
lcall
mulb
xor
jns
add
jmp
pop
adc
xor
pushf
insb
and
scas
jmp
int3
ret
inc
xor
icebp
mov
fldcw
ss
std
adc
cmpl
jno
dec
cmp
mov
or
mov
and
out
mov
test
shlb
fisubrl
ljmp
cmpsl
xchg
in
addb
cmp
sbb
movsb
scas
loope
mov
in
cmp
xchg
sbbb
and
sub
loopne
ljmp
push
add
cmp
cmc
pop
stc
jbe
push
pop
lret
popf
xchg
out
add
mov
scas
test
andl
xchg
xchg
pop
pop
fnstcw
stos
lcall
jmp
fwait
pop
loope
lods
or
stc
pusha
pop
cld
dec
arpl
or
popf
lret
das
out
mov
mov
cltd
rcll
lods
adc
jno
fimull
pushf
push
loope
or
inc
outsb
mov
mov
cmc
int
cmp
add
orl
dec
push
sbb
clc
mov
lock
lods
sub
mov
push
addr16
add
in
cmpsl
std
insb
mov
mov
cmp
push
sbb
roll
dec
test
repnz
es
das
pop
dec
add
cli
xchg
fisubrs
mov
adc
cmp
jmp
pop
aaa
repz
movsl
std
push
cmpsl
dec
jns
jle
xchg
push
std
shrb
dec
clc
roll
je
pop
push
inc
out
pop
sbb
bound
jae
push
repz
pop
insl
jae
sub
sub
scas
mov
and
or
dec
or
jnp
lods
mov
and
sbb
stc
lahf
xor
push
mov
mov
dec
jmp
cmpsb
fnstenv
fnsave
and
mov
loop
xor
mov
int3
lods
and
bswap
inc
imul
dec
inc
xchg
mov
mov
sub
jmp
jne
imul
cmp
aaa
or
jae
adc
aad
dec
or
xor
aam
mov
icebp
jo
push
aas
xchg
add
xor
cmp
pusha
stc
add
sahf
in
inc
mull
xor
es
lea
stos
fstpl
sub
fisubrl
insl
push
loopne
cmp
scas
jnp
faddl
shrl
and
mov
les
sbb
addr16
test
mov
mov
and
or
xchg
bound
lds
stc
dec
pop
inc
cmpsb
in
dec
das
add
xchg
inc
mov
mov
push
jns
sub
test
stc
pop
in
mov
push
push
fisttpll
in
subb
sbbb
push
flds
add
mov
add
xlat
sti
insb
mov
sub
inc
outsb
sbb
sub
mov
push
or
daa
into
int
rorb
mov
out
inc
shlb
cli
mov
xor
std
jle
xchg
in
jge
inc
lcall
and
out
aad
shlb
fsts
mov
xor
mov
and
testb
add
test
push
mov
push
lds
addr16
fsubs
jmp
pop
popa
pop
dec
lds
es
mov
shrl
loopne
dec
adc
mov
inc
inc
adc
dec
imul
mov
rcll
orl
aaa
and
xchg
std
sub
xchg
dec
test
mov
arpl
and
out
stc
or
adcb
lea
inc
pop
icebp
xor
fnstenv
out
dec
mov
mov
nop
pop
das
dec
loop
outsl
mov
adc
outsl
jle
std
mov
jmp
sub
or
fcmovbe
arpl
xchg
insl
jo
mov
shl
pusha
mov
shll
fistpll
loop
dec
xchg
ja
pop
movsl
out
push
lds
sub
cmp
mov
dec
or
mov
inc
shrb
stos
nop
das
jbe
lods
addl
test
movsl
sti
and
mov
idiv
adc
in
scas
pop
ret
das
shll
cld
mov
adc
sub
sbb
sub
gs
ret
sub
scas
pop
fmul
mov
add
jnp
ja
lahf
jmp
mov
ret
mov
xorb
xor
xlat
lret
lods
loopne
mov
pop
adc
pop
jmp
jg
xchg
jmp
test
sub
enter
hlt
ficoms
jae
stos
cmp
lret
pop
imul
ds
dec
pop
scas
sbb
pop
inc
daa
in
popa
out
push
sub
lret
cmpsb
cmp
aas
mov
jae
fstpt
rcrb
imul
hlt
lret
xor
jbe
xchg
lods
xor
jb
adc
dec
mov
rcrl
fwait
shrl
mov
and
aaa
fmuls
lock
scas
xlat
rorb
xlat
idivl
mov
jecxz
push
push
ficompl
mov
test
xchg
adc
jnp
ret
mov
xchg
mov
mov
inc
icebp
fwait
scas
cmp
rcl
dec
mov
out
mov
jg
test
adc
arpl
out
bound
int3
enter
int3
xchg
push
shlb
and
aad
push
and
mov
dec
push
inc
lret
sbb
jns
movsl
icebp
movsb
xor
xlat
sub
sbb
jo
pop
out
or
leave
mov
jno
clc
jge
dec
and
iret
add
sub
sbb
int3
adc
ret
pop
jle
sub
sub
std
enter
test
adc
inc
xlat
loopne
testl
cmp
rclb
xchg
pusha
cmp
sub
dec
xchg
xor
or
ror
adc
xchg
adc
popa
inc
push
fisubs
add
out
add
sbb
ficoml
pop
mov
loop
ret
xchg
mov
lds
or
ret
enter
fistpl
fcoml
jno
mov
mov
and
movsb
inc
pusha
icebp
fldt
out
das
popa
js
rorb
mov
jp
mov
test
out
adc
outsb
pop
mov
dec
daa
lods
pop
arpl
and
cmpsl
lods
pop
cld
xor
mov
hlt
jp
int3
aad
cmp
jle
addb
int3
adc
int3
xchg
movsl
cmpl
push
movsb
repnz
pop
mov
or
icebp
or
nop
out
sbb
cmp
movsl
dec
xor
lea
insl
mov
mov
add
stos
es
shl
xor
jae
pusha
sahf
dec
shll
movsl
imul
aam
rcrb
mov
cvtpi2ps
sbb
stos
dec
push
leave
imul
cmovl
mov
cmp
mov
in
pop
decb
pop
call
scas
jo
stc
xchg
push
lock
push
call
or
cmp
xchg
pop
pmulhuw
pop
push
std
iret
div
sbb
out
test
nop
or
mov
mov
pop
cmp
pop
pop
lods
xor
fldenv
inc
xchg
xor
gs
cmp
clc
test
das
sbb
adc
dec
rorl
mov
es
push
cli
pop
mov
ds
ds
and
cmp
frstor
inc
sbb
push
leave
or
std
jg
leave
mov
filds
jns
outsl
inc
cmp
shrl
cmpsb
das
mov
int
push
nop
push
push
pushf
and
outsb
mov
xchg
hlt
and
fisttps
in
insl
arpl
out
rcrl
cli
mov
mov
inc
mov
cmp
mov
out
mov
mov
aam
mov
and
icebp
inc
lcall
xchg
or
js
sbb
pop
xchg
xor
add
jg
jl
mov
test
push
imulb
aam
scas
and
jns
stos
leave
aad
jne
lock
icebp
lock
adcb
stos
je
pop
or
pop
push
pop
sbb
loop
jl
loope
sub
jb
cmpl
cwtl
fwait
inc
dec
mov
xchg
push
testl
push
push
cmp
out
push
fwait
adc
jae
xchg
bound
inc
push
sbb
or
in
mov
repnz
cld
and
xchg
and
fcmovb
sbb
mov
inc
lret
scas
xchg
stos
add
cwtl
push
jae
lods
xchg
mov
stc
inc
mov
push
out
sti
out
stc
sbb
inc
hlt
or
lahf
push
dec
mov
ficomps
xor
xlat
jl
sbb
xchg
movsl
mov
xor
lahf
popa
faddl
pop
jp
dec
push
sti
mov
mov
stos
movsb
sub
adc
add
mov
xor
or
rol
sub
pop
add
mov
or
repz
outsl
jmp
jbe
fstps
sahf
jnp,pn
mov
mov
je
push
mov
adc
push
mov
or
data16
pop
and
xchg
cmp
lock
movsb
ja
cmp
push
into
sub
lods
add
das
and
dec
fidivrl
inc
scas
or
push
out
int
adc
adc
jg
daa
mov
decl
pop
outsl
fs
fisttpl
lea
push
popf
mov
test
arpl
mov
rorl
inc
sub
mov
xchg
mov
mov
insw
xor
sahf
jg
push
jne
jmp
mov
xor
mov
pop
mov
lock
push
cli
jo
mov
repz
inc
cmpsb
mov
ss
lcall
and
addl
jnp
sahf
mov
arpl
inc
fwait
pop
xchg
jne
pop
sbb
stos
xadd
mov
loope
popa
sbb
addb
jae
lock
push
out
cwtl
mov
in
jg
or
add
lock
jne
add
aam
mov
cmp
pop
mov
dec
idivb
xor
iret
pop
add
je
ljmp
sbb
mov
cld
sbb
scas
and
aas
gs
je
xchg
add
rcll
mov
loopne
bound
cmc
adc
jecxz
in
pop
outsb
lods
mov
ljmp
je
cmp
xor
xlat
stos
mov
movsb
mov
bswap
or
cltd
mov
push
idivb
lods
inc
mov
shlb
mov
mov
pushf
imul
mov
jns
xchg
jnp
cmp
mov
sub
push
xor
adc
and
lahf
push
int
filds
mov
shl
dec
out
push
mov
iret
sar
movsl
adc
movsl
cmpsl
aas
and
dec
mov
stos
mov
aad
scas
out
lea
popfw
movsl
sub
push
ss
pop
scas
shlb
inc
mov
mov
inc
loopne
nop
int3
enter
sbb
xchg
add
mov
add
cli
and
arpl
mov
jnp
stos
or
imul
push
cld
xchg
dec
rcr
cmp
and
out
into
mov
js
cmp
cltd
cs
sub
xchg
mov
push
jbe
pop
test
add
sbb
hlt
movsl
push
mov
roll
cmp
jnp
fistl
in
cmp
cmp
ljmp
cmp
dec
incl
and
xor
mov
mov
leave
arpl
pop
mov
ret
mov
inc
repnz
cmpsb
mov
xchg
jae
psadbw
xchg
xlat
and
loopne
lea
xor
test
mov
jbe
push
imul
pop
xchg
pop
int
pop
cld
xchg
out
out
jg
or
jb
subl
imul
inc
je
inc
loop
inc
in
lds
mov
adc
xchg
or
pop
je
cmp
dec
push
or
lcall
jne
push
ds
sbb
push
mov
push
adc
xor
sbb
push
pop
adc
lea
pop
mov
scas
jl
mov
mov
loope
aaa
pmaxsw
cmpsl
sub
mov
pushf
push
shlb
pop
push
jle
inc
insl
mov
xchg
push
xchg
outsb
jmp
mov
outsl
mov
sbb
xorl
out
cld
mov
aad
mov
cltd
aam
gs
lahf
cltd
jg
inc
push
sbbb
add
sub
cmp
mov
xchg
clc
jbe
jl
xlat
mov
data16
in
test
pushf
incb
and
subl
mov
mov
insl
and
mov
cmpsb
xor
in
aam
inc
mov
add
arpl
xchg
mov
aaa
movsb
push
jl
mov
jle
les
xchg
pop
fwait
xor
adc
or
pop
xor
loope
imul
insb
pop
dec
xor
in
cmp
scas
mov
fwait
pop
mov
adc
dec
inc
popa
subb
clc
push
das
ss
out
leave
scas
jmp
aam
leave
daa
mov
movsl
cmc
loopne
sarb
out
jecxz
dec
mov
es
mov
xor
jno
jle
mov
dec
jl
pushf
addr16
push
sub
or
fsub
and
mov
cmp
mov
sbb
jmp
jb
ret
cmp
inc
jb
mov
dec
stos
jae
and
sub
sar
ja
and
aaa
xor
popf
push
je
aad
inc
cmc
or
cmp
test
idivb
push
mov
out
cwtl
aaa
test
cltd
cmc
sbb
pop
cld
push
cmp
inc
mov
dec
jo
outsl
imul
push
pop
push
mov
jecxz
pop
jl
xchg
icebp
push
inc
push
addb
inc
ja
or
mov
into
push
sbb
lahf
mull
jne
in
faddl
ret
push
and
push
inc
cltd
mov
dec
fldt
adc
pop
fs
dec
out
cld
mov
xchg
mov
or
insl
sarb
jns
mov
push
aam
scas
fisubl
fwait
lods
sbb
leave
push
mov
mov
or
filds
jp
jecxz
aad
mov
repz
push
enter
inc
xor
dec
arpl
inc
cmp
popf
inc
movhps
js
xchg
je
clc
xor
cmpsb
int3
popa
add
aad
mov
xchg
sarb
xor
adc
dec
ret
int3
mov
xor
adc
xor
jle
addr16
icebp
pop
mov
push
sbb
lea
pop
jmp
dec
xchg
push
out
fstl
and
inc
out
aam
xchg
dec
inc
lock
ja
std
dec
push
push
dec
adc
stc
add
cmpsl
mov
cli
repnz
add
frstpm(287
dec
push
sbb
rcrl
je
xor
cmp
pop
xchg
icebp
aas
pop
or
rclb
cld
inc
push
jle
mov
inc
int
xchg
or
in
inc
aaa
int
sbb
popf
dec
cwtl
int3
push
mov
sbb
xchg
pop
mov
sahf
mov
mov
lods
mov
and
icebp
dec
or
adc
addr16
test
icebp
cs
loop
cmp
sbb
subb
cmp
stos
adc
and
ficompl
outsl
xor
inc
jmp
andb
adc
aam
sub
hlt
imul
pop
dec
in
mov
call
xchg
and
insb
mov
shlb
sub
in
inc
dec
mov
push
xchg
in
pusha
rcrl
xlat
or
rcll
jge
xor
divb
lret
dec
ss
dec
xchg
pop
inc
push
incb
sub
push
dec
enter
xlat
ds
push
ds
pop
mov
clc
out
mov
fisubrs
xchg
scas
mul
push
xorb
mov
pop
sbb
and
cmpsb
cmp
movsb
in
xlat
xchg
pop
push
mov
push
jmp
xchg
sub
jb
popf
ljmp
outsl
ret
xor
jmp
je
add
add
lea
sbb
cwtd
mov
jge
lock
jb
movsl
adc
fwait
push
shll
lods
and
fsubrl
push
mov
addr16
pop
dec
push
pop
sbb
pushl
cmp
les
sbb
cmpsl
test
cmp
lods
mov
cld
sbb
cld
into
data16
xchg
test
mov
dec
ret
out
cmp
jbe
xchg
mov
addr16
xchg
jl
pop
lock
dec
mov
cmp
jmp
jmp
pop
xchg
inc
inc
mov
pop
test
roll
mov
outsb
out
faddp
inc
mov
mov
cmpb
fisubs
sub
pop
jmp
rcll
and
push
aaa
cmp
mov
xlat
xlat
cmp
push
bound
cmc
gs
xchg
jp
jmp
dec
outsb
jns
xor
popf
cltd
idivb
xchg
cmpsl
ja
fincstp
or
cld
test
cmp
movsl
in
xor
dec
int3
xchg
repz
test
dec
ss
mov
lret
cmp
dec
insb
lcall
lock
inc
mov
adc
loope
daa
cld
push
inc
cwtl
es
cmp
andb
mov
adc
popf
lods
fistl
mov
sbbb
mov
mov
jbe
pop
add
pop
mov
repnz
dec
sbb
or
mov
cwtl
xchg
das
adc
dec
sub
inc
or
fmulp
push
add
std
fidivl
xchg
inc
fsubp
jo
dec
lahf
pop
ret
shll
or
test
ja
cld
iret
pop
aas
stc
mov
mov
daa
jl
negl
push
in
test
inc
mov
hlt
jae
add
jmp
mov
jb
cmp
aam
mov
push
rclb
jae
int3
rorb
pop
arpl
mov
ljmp
pop
fdivs
push
dec
dec
call
ds
das
pop
inc
into
ss
ljmp
out
and
jnp
dec
mov
mov
shrl
or
call
mov
xor
xchg
mov
inc
sbb
mov
dec
xchg
jl
sub
mov
out
jb
fcmovu
or
scas
dec
pop
mov
out
cltd
mov
jle
inc
push
pop
jmp
jecxz
xchg
adc
xchg
std
mov
loopne
jne
inc
mov
mov
push
cmp
mov
out
movsl
sub
in
call
sbbl
sar
mov
xchg
pop
loopne
gs
push
mov
out
aas
shll
stos
mov
xor
fwait
ret
sbb
dec
and
ror
int3
xchg
lock
pop
js
icebp
ljmp
jge
ss
clc
icebp
cmp
or
sub
or
jnp
jb
xchg
out
out
adc
jne
shrl
push
inc
xor
imul
mov
sub
cwtl
pop
das
aas
cmp
mov
and
xor
and
in
cmp
sbb
jl
or
clc
loop
sub
push
cmpsl
mov
or
es
mov
lcall
or
add
fiaddl
pusha
push
lods
sbb
out
into
inc
xchg
out
cmp
mov
cwtl
add
in
xorl
movsb
call
pop
or
mov
push
jno
sub
jnp
pushf
adc
mov
pusha
rolb
aaa
outsl
push
add
std
lds
pop
popa
push
inc
sub
jp
aas
sbb
lods
test
testl
out
add
sbb
mov
mov
add
shlb
mov
or
je
mul
pop
sub
dec
test
mov
mov
icebp
data16
outsb
xchg
jno
mov
inc
sti
xor
xchg
rol
pop
pop
scas
out
xchg
insb
pavgw
sbb
mov
in
mov
fnstcw
xlat
sbb
roll
dec
jae
xor
outsl
aad
aam
lret
stos
cmp
in
fbld
mov
lock
into
iret
dec
movsb
aam
mov
popf
loop
mov
inc
pop
cmp
mov
fucom
dec
push
test
imul
dec
push
dec
dec
and
ss
cmpsl
sbb
scas
andb
hlt
xchg
mov
mov
lret
inc
jmp
fsubrp
or
aam
sub
pop
mov
repz
jge
aam
lahf
hlt
mov
add
and
add
inc
mov
mov
shrl
aas
push
jo
dec
xchg
jmp
mov
out
push
or
clc
xchg
dec
pop
dec
adc
jmp
sarb
loopne
push
mov
xchg
mov
cmp
jmp
scas
loopne
gs
and
mov
aaa
scas
mull
mov
pop
fcoml
inc
lea
cmp
sarb
mov
loope
pop
arpl
sub
std
aad
mull
rcl
sub
sub
and
adc
mov
xor
sub
push
sub
push
cli
ds
popa
enter
pop
sbb
sbb
pop
not
mov
out
lock
and
pop
outsb
and
stos
sub
int
push
call
aas
sub
mov
mov
jo
loope
ss
mov
mov
or
fisttpll
stos
sub
xchg
clc
jmp
aas
jnp
pop
lcall
mov
adc
jno
adc
adc
imul
pop
xchg
mov
cmp
flds
and
push
or
sub
cmpsb
jae
or
xchg
lcall
lods
or
inc
mov
pop
mov
hlt
call
add
loop
call
jmp
out
mov
mov
push
jp
cmpb
scas
imul
mov
loop
mov
jb
add
mov
shlb
in
jae
out
cwtl
sbb
in
loop
dec
xlat
scas
das
fs
jg
dec
lret
int3
pusha
jns
out
cwtl
mov
lods
mov
sbb
pop
push
test
gs
lret
jmp
pop
add
jl
jbe
roll
mov
ret
in
jmp
mov
sbb
andl
rep
xchg
fcompl
push
sub
or
cmp
mov
aad
dec
jge
int3
push
xchg
pop
push
or
push
mov
mov
mov
xchg
loope
push
mov
mov
pop
mov
xchg
jl
loopne
and
fildll
loopne
xor
xchg
pop
inc
jmp
mov
out
loop
xchg
out
fwait
mov
push
fistps
nop
and
jae
fsubs
jae
jo
push
repnz
xor
or
insb
inc
cmp
inc
lds
std
jecxz
mov
into
std
or
jg
or
nop
dec
fdivrs
push
jnp
push
out
and
or
mov
jmp
ljmp
cmpl
pop
xchg
mov
jno
adc
aas
jbe
mov
sbb
inc
mov
fs
adc
scas
imul
pop
test
dec
and
cmp
mov
jnp
inc
inc
mov
ficoms
jne
call
mov
inc
test
repnz
ficompl
sar
sub
in
push
xchg
and
scas
cmp
rcr
sahf
pop
xorb
dec
insl
ret
pop
in
les
jne
add
xchg
js
sub
stos
pop
jle
shll
adc
mov
jb
leave
insb
ja
int
in
pushf
or
movsb
jp
mov
jno
imul
push
jle
repz
in
adc
fsubrs
rcll
jmp
mov
int3
add
pop
or
out
adc
dec
lds
pop
xchg
stos
push
sub
test
xchg
mov
aaa
adc
mov
sub
cmp
add
enter
lods
add
ja
lret
das
movntps
inc
or
jl
enter
aad
jmp
or
and
xchg
or
push
rcll
shll
lods
hlt
jbe
stc
cmc
xor
xchg
in
mov
sbb
add
lock
cwtl
sahf
mov
sub
ds
je
pusha
enter
jnp
mov
or
ja
imul
mov
call
jb
push
adc
in
fisubrs
sbb
cmp
or
lcall
lcall
js
incb
inc
mov
std
aaa
sub
inc
inc
inc
mov
in
test
jno
jbe
fucomp
in
jne
push
or
inc
mov
mov
testl
test
pop
lock
cmc
sub
push
cltd
incl
sbb
pusha
fbld
int
xchg
icebp
xchg
inc
mov
mov
hlt
es
xchg
xchg
outsb
sub
or
and
into
mov
adc
into
dec
adc
dec
test
shrl
outsb
pop
pop
insb
inc
testl
mov
iret
fimuls
inc
inc
outsb
and
lret
push
rcll
ret
int3
mov
pop
in
sti
mov
mov
testb
jp
movsl
adc
inc
jo
popa
hlt
lret
mov
jp
daa
dec
mov
dec
pusha
add
or
sbb
jo
popf
dec
dec
lds
xchg
mov
out
lret
and
inc
push
hlt
lds
pusha
xchg
sahf
jno
test
in
rcrb
mov
adc
jb
cmc
pop
or
cltd
movsb
aas
loope
push
jne
mov
lock
arpl
cmp
test
push
jbe
cmp
push
lods
push
mov
push
imul
sti
rorl
mov
cmp
bound
lds
mov
or
cmpsb
arpl
xchg
inc
lods
daa
call
lock
test
dec
jmp
stos
jno
push
fnsave
dec
in
iret
inc
sub
cmp
cmc
es
insb
mov
jg
inc
mov
inc
jg
sub
xlat
clc
fs
fisttpl
xchg
fidivrl
mov
inc
jl
mov
jns
js
mov
les
lret
adc
jp
mov
xchg
mov
mov
enter
rcrl
scas
in
fdivrs
sub
push
imul
mov
sbb
clc
xchg
pushf
ja
pop
adc
cli
and
xor
movsl
repnz
add
or
in
mov
test
pop
xor
jp
inc
insl
aaa
arpl
stos
stos
mov
mov
insl
pusha
cmc
push
pslld
mov
subb
lret
adc
pusha
mov
mov
pushf
pop
pop
or
das
mov
cmp
xchg
out
int3
adc
push
pop
test
mov
andb
cmp
add
arpl
or
hlt
lea
and
aas
fadds
repnz
or
sub
adc
aam
roll
aam
hlt
dec
add
dec
xor
fiadds
cmp
jo
xchg
jmp
idivb
aad
out
xchg
and
inc
pop
mov
jns
mov
out
imul
pop
push
mov
and
xor
push
pop
mov
loopne
mov
cmpsb
jl
mov
pop
incb
and
std
cmc
inc
stos
jo
add
sti
push
add
lds
in
sub
leave
data16
aam
aam
gs
inc
mov
call
xor
mov
out
sub
mov
test
mov
push
call
stos
pop
push
test
insl
jecxz
add
divl
mov
push
push
mov
inc
add
xchg
jns
sbbb
pop
mov
orl
xchg
lods
or
cmp
xchg
repnz
movsb
ss
cltd
lock
xchg
inc
sbb
dec
xchg
jge
mov
adc
lds
sub
iret
sbb
and
dec
mov
psrlw
notl
mov
or
outsl
pop
pop
mov
aad
and
rcrb
cltd
test
sub
dec
dec
daa
pop
jo
jno
lea
lods
pop
or
dec
xor
das
xchg
cld
or
inc
movsl
xchg
fnsave
pop
mov
xchg
pop
mov
popa
jne
cmp
out
adc
inc
adc
adc
push
dec
out
rol
xor
popa
ss
shlb
dec
add
aas
mov
repz
push
push
sbb
cmp
adc
daa
or
add
push
push
clc
sbb
repnz
lret
paddd
out
addr16
out
fildll
daa
test
lret
into
nop
lahf
sarb
pop
push
and
mov
cmp
lock
mov
int3
in
cmp
outsl
aas
test
push
xchg
into
jmp
push
jp
and
imul
stos
addl
sbb
movsl
insb
outsb
pop
jno
and
sbb
push
xchg
stos
or
pop
xchg
cmp
out
or
fiaddl
movsl
mov
mov
mov
mov
fldenv
daa
inc
dec
push
jl
scas
cmpsl
popf
shl
lcall
test
jmp
or
dec
les
or
les
imul
mov
bound
adc
ja
mov
lea
and
cmp
pop
inc
mov
jge
mov
aam
popa
cmp
pop
push
aam
xor
mov
push
ret
fstps
jnp
pop
jno
and
lcall
dec
add
or
push
insb
and
hlt
jbe
imul
ficompl
enter
adc
jnp
rolb
ljmp
jbe
inc
les
pushf
lock
shlb
jp
or
repnz
jmp
push
mov
and
adc
xchg
bound
sti
sub
push
push
jge
insl
pop
int
aad
es
lods
xlat
add
sbb
xchg
inc
adc
cmp
xchg
outsl
subb
mov
out
repz
loopne
loopne
xor
inc
inc
repz
mov
cmp
mov
dec
jmp
js
mov
ljmp
push
into
andb
cmp
sbb
rorb
int3
xchg
insb
pusha
cmp
mov
push
ja
xlat
lock
add
stc
inc
lret
test
pop
jmp
add
pop
mov
sbb
mov
aaa
xor
fdivrs
adc
lods
xor
mov
add
ds
pop
xlat
inc
xor
stc
adc
imul
cmp
gs
loop
sbb
dec
adc
mov
pop
inc
mov
push
add
in
mov
daa
jne
stos
scas
sbb
sbb
das
xor
sbb
sarb
mov
repnz
or
sahf
aaa
icebp
inc
fs
outsl
cmp
cmp
sub
pop
fldenv
mov
mov
negl
dec
jp
mov
ret
shl
js
and
dec
addr16
or
adc
adc
adc
mov
add
jecxz
push
outsl
sub
incl
and
sti
mov
lret
movsw
jl
jne
mov
bound
jne
fists
inc
xor
loope
loopne
addl
jmp
or
loopne
sub
mov
fwait
xor
test
daa
inc
xchg
xor
outsl
or
and
xorb
sahf
divb
into
adc
imul
cmpsl
push
mov
data16
inc
or
sbb
xchg
shlb
roll
andl
push
pop
repnz
xor
push
mov
fimull
out
push
call
xlat
sbb
mov
adc
mov
or
sub
rolb
jb
sbb
push
das
int
jle
imul
out
jp
dec
jecxz
and
je
push
sti
pop
xchg
xor
hlt
jno
outsl
scas
pop
xchg
adc
test
mov
inc
daa
scas
loope,pn
dec
fstl
and
mov
ljmp
scas
jae
test
out
mov
outsb
ret
sbb
adc
mov
imul
cmp
lret
stc
and
enter
cmp
and
pusha
cld
push
ret
fcomip
push
and
mov
and
lods
dec
jno
divb
mov
adcl
add
ljmp
in
mov
dec
inc
mov
inc
shrb
or
lret
icebp
mov
mov
test
or
add
out
and
lret
dec
push
sbb
push
pop
bound
insb
push
pusha
movsb
lods
add
push
xor
lods
adc
xor
jg
mov
add
out
inc
or
bound
xor
mov
mov
mov
test
pop
repnz
andb
repz
mov
mov
test
inc
mov
stos
in
inc
stos
xchg
insb
push
pop
popa
adc
mov
jae
dec
shlb
xor
mov
mulb
lret
std
mov
int
nop
in
sub
xchg
mov
mov
lock
add
ljmp
sub
inc
jo
mov
movsb
pop
dec
test
sbb
and
pop
inc
adc
cwtl
nop
lea
fs
mov
add
mov
sti
les
mov
cmp
mov
sahf
mov
mov
push
in
or
dec
xchg
iret
fs
xchg
jb
in
daa
adc
rclb
mov
jp
stos
lcall
jnp
or
fistps
daa
rolb
stos
call
pop
loop
cltd
pop
femms
stos
popa
aaa
sbb
dec
mov
ss
inc
ds
pop
xor
jmp
in
rclb
scas
sbb
xor
movsb
cli
ret
daa
jae
push
sarb
xor
jecxz
push
out
mov
add
push
mov
arpl
es
ljmp
mov
xor
mov
adc
mov
mov
cltd
mov
add
roll
jmp
pop
decl
lret
int
push
cmp
stc
fldl
scas
push
jl
sahf
mov
aas
test
xchg
mov
imul
sti
insb
stos
inc
jmp
das
int
hlt
pop
aaa
movsl
or
jle
mov
imul
adc
inc
test
int
sahf
in
xchg
stos
lahf
lcall
mov
mov
cmpsb
cld
fwait
rolb
lcall
scas
shll
push
dec
dec
insb
loopne
sahf
xor
push
cmp
jno
pcmpeqb
jp
repnz
xor
jmp
pop
push
add
pop
inc
movsl
imul
mov
adc
in
imul
dec
cmp
push
sbb
popa
pop
jb
push
lock
add
out
shlb
cltd
jbe
sub
stc
cmp
or
pop
dec
in
jmp
jmp
mov
push
insl
mov
pop
push
jae
xor
sub
adc
es
cmp
cmpsl
jmp
mov
jmp
add
cmpsl
cld
cmp
std
xchg
mov
hlt
push
mov
loope
cli
outsl
cmpsl
add
mov
cmpsb
jle
bound
inc
sti
fisttps
cmpsl
std
dec
xchg
push
loop
test
cli
ljmp
adc
das
movsb
mov
pop
pop
xchg
jnp
roll
dec
aas
sub
rolb
insl
mov
test
jg
inc
mov
sti
mov
stos
mov
jecxz
inc
xor
sbb
lds
sbb
push
xchg
mov
ret
pop
mov
dec
jmp
pop
lods
es
mov
js
cmp
fisttpl
das
daa
jg
xchg
lds
cwtl
xchg
mov
lret
stc
enter
and
pop
lods
push
test
clc
in
loopne
imull
mov
push
into
std
icebp
int
iret
std
mov
dec
aam
cmp
xchg
cmp
jnp
out
mov
inc
insl
mov
cmp
rcpps
xor
int3
push
dec
pop
dec
sbb
mov
xor
lods
mov
mov
loop
ja
mov
xchg
inc
std
loope
stos
aad
jecxz
mov
int3
jne
mov
sub
sahf
xor
xchg
or
fdivs
xchg
add
and
mov
ret
mov
into
jns
pop
cs
sub
dec
fnsave
mov
movsb
or
or
cmpl
icebp
lods
mov
test
fimull
cld
lds
insb
jge
fbld
add
cmp
xor
add
xchg
lods
out
sub
loop
push
addl
xchg
pop
jl
or
pop
addr16
addb
fiadds
lahf
icebp
xchg
cmp
iret
mov
jecxz
xchg
test
std
add
mov
push
mov
sarb
addr16
push
mov
xlat
sub
leave
inc
leave
push
pop
lods
mov
mulb
dec
ljmp
xchg
ret
jo
out
sub
sbb
dec
and
inc
and
lcall
out
or
inc
sbb
xchg
xor
mov
orb
xchg
mov
or
mov
icebp
jne
std
lods
jnp
outsb
std
rcrl
jno
and
lods
imull
lock
mov
jp
add
push
daa
push
sbb
xchg
xor
iret
jmp
xchg
push
mov
ja
mov
es
shll
adc
jbe
jge
xor
sub
js
cmp
adc
popf
movsl
push
lods
pop
fimull
adc
xorb
rorl
std
aad
pushf
mov
or
mov
mov
push
iret
mov
out
fstps
lcall
addr16
mov
hlt
and
adc
xchg
enter
pop
push
scas
jo
lods
imul
mov
lea
dec
in
and
aam
lock
fcoml
push
adc
lods
or
dec
sub
inc
dec
jp
jg
pop
push
jl
sub
mov
int
pop
out
jnp
cwtl
mov
add
fisubs
cli
and
or
insl
mov
jbe
js
push
sub
push
mov
pop
or
outsb
inc
sbb
jmp
inc
pop
push
pop
daa
pop
scas
xchg
cs
repnz
or
push
test
fsub
test
and
fucomp
mov
mov
loope
mov
adc
xchg
xchg
jbe
cs
lods
lds
outsb
fwait
cmp
fdivl
fsts
push
xchg
repz
push
ror
sbb
sbb
neg
test
arpl
iret
ffreep
gs
mov
xlat
rolb
nop
les
stc
lahf
jl
xor
cmp
xchg
fldenv
minps
adc
or
je
xor
jns
xchg
je
int
dec
push
popf
push
mov
call
cmp
clc
and
js
cli
mov
mov
lods
into
cmpsb
pop
fsubp
outsl
stos
jl
mov
and
out
mov
pusha
into
inc
sti
mov
mov
dec
nop
push
popa
sub
ret
ret
and
out
or
add
cmp
dec
sbb
sbb
push
sarb
pop
cltd
mov
mov
inc
jmp
loope
jl
xor
dec
out
cld
xchg
cmpb
adc
mov
mov
xchg
xchg
ret
fiaddl
cmp
pushf
enter
mov
jmp
test
mov
fists
rclb
jecxz
xor
push
or
dec
call
js
pop
adc
fsubs
xor
ja
or
in
test
shr
pop
out
adc
movb
pop
push
shrb
sarb
repnz
lods
movsl
cwtl
lret
adc
xchg
push
rcrl
inc
out
icebp
shlb
adc
aaa
cmpl
sbb
ret
insb
das
mov
es
sbb
insb
and
jp
pop
xchg
enter
in
pop
fstpt
loope
add
imul
fildll
mov
sbb
xchg
sub
lret
inc
or
int
imul
xlat
loope
cmc
loopne
imul
jb
xor
push
mov
pop
dec
push
or
mull
call
push
in
or
in
jne
sbb
push
repnz
cs
lods
gs
mull
lret
ret
jo
or
push
rcr
adcb
ja
xchg
add
mov
mov
ljmp
adc
icebp
inc
mov
out
or
sbb
scas
in
lret
xor
sub
das
jg
jmp
jp
sbb
das
jns
popf
add
fs
orb
xor
es
sub
push
adc
hlt
fs
sti
push
mov
and
lods
adc
mov
je
and
daa
jnp
cld
and
or
adc
xor
cwtl
notl
mov
mov
jo
insl
mov
dec
xorl
sbbl
adc
xchg
sub
mov
and
push
sbb
xor
dec
mov
cwtl
push
dec
mov
out
or
push
es
and
pop
arpl
faddl
dec
jecxz
mov
ss
outsb
rorb
push
push
pop
scas
mov
and
scas
fs
cmp
adc
sti
js
jae
pop
rep
sbb
adc
and
push
sbb
sub
jno
dec
xchg
aad
dec
add
dec
lods
xchg
ds
inc
adc
or
idiv
lret
mov
sbb
mov
jb,pn
adcl
pushf
out
rcrb
push
subb
dec
dec
jbe
shr
test
jmp
jle
sub
and
fdiv
test
cmp
sbb
lcall
lea
jns
mov
jnp
bound
mov
fsubs
fstpt
scas
cmpsl
loop
scas
in
jecxz
xor
stos
xchg
addr16
testb
and
dec
pop
les
das
and
xor
mov
sbb
hlt
pop
mov
and
scas
xchg
jbe
movb
bound
test
cmpsl
pop
mov
outsb
jecxz
mov
cs
popf
mov
sub
test
adc
dec
mov
rorl
into
xchg
sbb
push
xchg
test
mov
or
mov
fdivrs
pop
jbe
je
fiaddl
mov
scas
jmp
cmp
cwtl
leave
out
lea
mov
repnz
mov
dec
lods
inc
test
popf
mov
cmp
cltd
mov
push
dec
std
fidivrl
out
xchg
jb
mov
jbe
repnz
inc
in
fs
iret
mov
xor
pusha
jo
sbb
sbb
fs
cmp
and
sub
mov
sbb
cmp
mov
jmp
dec
cli
push
sbb
sarl
notb
mov
mov
cmpsb
xor
xchg
cmovl
inc
cmc
jb
inc
mov
sti
mov
mov
or
xchg
adc
jae
aad
inc
loopne
dec
lods
and
cs
inc
dec
lea
test
sbb
imul
aam
mov
push
xchg
sub
or
sbb
dec
jno
sub
inc
ja
test
jge
daa
xor
sbb
cmp
xchg
call
aaa
and
out
lcall
and
mov
push
in
rcll
fs
dec
pusha
test
jge
pop
repnz
mov
cmc
popa
ret
imul
push
mov
pop
mov
inc
dec
push
sbb
lods
pop
mov
xchg
out
into
cltd
nop
outsl
mov
scas
aam
and
xchg
adc
loop
jmp
jmp
jbe
push
in
mov
cmpsb
cmp
add
pop
jns
mov
sbb
arpl
lock
mov
lret
lret
ljmp
ds
pop
xchg
xchg
lret
mov
sbbl
cmpsb
imul
dec
mov
subb
push
pop
xchg
xchg
leave
or
pop
push
pop
dec
mov
adc
mov
add
pop
js
lahf
test
mov
mov
jecxz
pusha
in
rcl
or
aas
dec
jns
in
cmp
fdivp
xor
xchg
mov
cwtl
aam
lock
loopew
cs
pop
int
or
mov
jmp
inc
mov
push
inc
cmpsb
mov
loope
mov
dec
jb
shlb
loopne
idivl
pop
loope
jle
xor
mov
fwait
jo
dec
div
mov
in
jo
stos
aam
repnz
out
cmpsl
loope
aaa
push
jp
mov
iret
inc
cmp
or
or
inc
sbb
fucom
popa
inc
jno
ss
dec
sbb
mov
addr16
mov
push
mov
inc
cmp
pop
lods
mov
sbb
pop
mov
loope
pop
sti
insl
inc
jge
je
mov
insl
pop
sub
xchg
sarb
andb
fcomp
dec
add
das
mov
shlb
xchg
sbb
stc
sbb
jb
scas
sti
sbb
adc
xor
jbe
lahf
sbb
dec
add
push
arpl
pop
dec
stos
pop
ljmp
imul
stos
sbb
jb
mov
iret
scas
push
dec
xchg
jge
shr
sbb
or
and
aad
popa
xchg
mov
and
mov
and
xor
fimuls
inc
add
in
mov
push
sbb
insb
incb
inc
add
das
sbb
push
outsl
loope
mov
jmp
je
data16
es
mov
das
and
ss
push
mov
sahf
loope
mulb
mov
pushf
xchg
stc
dec
pusha
ljmp
loopne
in
or
cmp
push
bound
rclb
dec
ss
movsl
es
out
xchg
xor
in
fs
cmpsl
xchg
xlat
movntps
adc
shlb
adcl
adc
xchg
and
inc
mov
out
scas
mov
xchg
mov
pop
je
arpl
int3
pop
sub
add
stos
mov
or
mov
andb
adc
mov
mov
movsb
push
shl
dec
in
or
pop
xor
test
loop
aam
sub
sarl
or
add
test
loop
scas
loopne
sti
insl
es
lods
mov
ret
nop
cwtl
nop
setne
out
cltd
xchg
pop
int3
dec
cmp
enter
add
adc
je
mov
aaa
icebp
mov
shrl
les
enter
dec
push
jmp
mov
inc
jle
cmc
push
aam
rclb
ror
aam
lea
jb
cli
jl
ret
or
sbb
int
decb
push
lock
iret
sub
inc
jnp
in
mov
test
push
je
es
jbe
cmp
and
inc
cmpsl
icebp
arpl
ss
sbb
aaa
lret
ljmp
mov
addb
sbb
sub
sbb
popf
jne
mov
fwait
mov
cmp
mov
xchg
inc
nop
push
xchg
sub
push
push
movsb
or
scas
add
xchg
inc
icebp
or
imul
xchg
mov
int3
mov
inc
xor
gs
push
cmp
mov
std
or
lret
mov
lods
in
testl
mov
lret
xor
test
popa
jp
call
push
fnstcw
push
lock
mov
mov
cli
cmp
es
out
push
gs
push
adc
mov
rcrl
scas
aam
adc
jno
push
jmp
loope
ds
jmp
cmp
popa
aam
bound
cli
jo
jecxz
fildl
int3
cmpsl
sub
inc
stos
stc
stos
imul
aam
dec
cmc
push
pop
add
jge
sbb
xchg
repz
dec
jo
daa
xlat
lock
xchg
push
mov
mov
jl
push
test
lahf
clc
repnz
add
and
pop
xchg
mov
jmp
jae
js
pop
jae
fdivrl
lods
dec
insb
fiadds
dec
adc
cmp
and
xchg
adc
out
mov
adc
cli
mov
mov
in
loopne
out
bound
adc
pop
pop
out
push
stos
icebp
fcmovnb
pop
pop
cs
fcomps
mov
cmp
cmpsl
and
aas
xchg
icebp
xor
sar
mov
add
push
pop
hlt
adc
pop
add
insl
mov
sbb
xchg
ja
adc
xor
dec
pushf
xor
rolb
lcall
out
jecxz
cmp
push
test
int
lcall
shl
jge
cld
pop
push
adc
lods
pop
mov
out
mov
xlat
add
in
sbb
loope
xor
sahf
mov
jb
add
pop
cltd
aam
movsl
test
or
sub
out
loopne
outsl
cmp
loopne
pop
pop
push
sbb
in
andb
into
inc
mov
or
push
jecxz
fwait
movb
and
xor
inc
stos
mov
fdivrl
mov
lea
ds
iret
jge
pop
stos
imul
jg
xchg
ficoml
inc
mov
xlat
bound
and
inc
inc
hlt
inc
jg
mov
push
jecxz
ret
dec
mov
fs
and
push
aam
js
add
mov
pop
filds
inc
insb
dec
aad
sbb
adc
cltd
pop
iret
jns
sub
shl
mov
sbb
hlt
cmp
dec
sbb
fiadds
adc
bound
jl
push
rcll
iret
inc
ja
pop
sbb
out
jecxz
mov
sub
adc
xchg
dec
adc
sbb
sbb
bound
jg
ds
mov
xchg
into
cmp
adc
cmpl
sub
cwtl
lahf
insb
lret
cmp
and
jo
xchg
cmp
or
notb
cmp
dec
clc
sbb
mov
lods
or
mov
mov
rcrl
inc
jae
and
lods
dec
mov
adc
dec
stc
cmc
sbb
addr16
xor
push
and
inc
out
mov
sbb
cmp
mov
sub
and
mov
fs
sub
roll
insl
xchg
jl
xchg
popa
cmp
and
decl
mov
jmp
data16
xor
lcall
bound
cli
jo
dec
push
sub
ljmp
clc
popa
mov
cld
out
or
jmp
in
loopne
js
aas
inc
push
lock
push
pop
sub
fwait
jp
jns
xchg
mov
nopl
push
mov
rol
stc
or
cmp
adc
outsb
orb
and
stos
mov
adc
icebp
dec
js
xlat
test
rcrl
les
sub
cmp
nopl
sub
icebp
stos
jb
add
jl
jl
xlat
lds
cs
stos
lea
imul
sub
jae
jae
fidivl
fs
jmp
jno
sbb
inc
dec
or
pop
sbb
mov
mov
testl
sbb
mov
mov
mov
xchg
cld
pop
lea
xchg
cli
xor
loop
fwait
enter
lcall
inc
push
mov
sbb
ds
add
xchg
xorl
mov
repz
cmp
pop
pop
mov
sbb
xchg
jo
add
scas
movsb
jo
pop
mov
mov
out
rcrl
ss
movsb
dec
mov
lods
mov
push
dec
out
insl
xchg
mov
inc
xor
aad
or
mov
int3
cmp
pop
cmp
jle
dec
xchg
rcll
stc
xchg
daa
add
les
mov
mov
mov
xchg
es
lea
cmp
mov
inc
pusha
sub
mov
add
mov
push
push
scas
dec
loope
imul
insl
insb
pop
adc
xchg
cmp
addr16
mov
mov
sub
jae
pop
sbb
mov
in
fsubrs
jb
add
aam
arpl
mov
out
sbbb
lcall
loope
mulb
mov
mov
sub
jmp
lea
imul
cmp
popf
ret
xchg
out
mov
cmp
push
push
mov
adcb
inc
sub
pop
leave
dec
out
loop
adc
popf
andl
dec
jae
cld
cld
fadd
out
lret
and
xor
xor
inc
orl
leave
popf
loope
stos
or
mov
cmpsb
mov
imul
movsl
inc
jo
mov
dec
mov
mov
mov
pop
movsl
fmul
sub
and
cli
fnstsw
inc
arpl
add
shll
pop
rclb
lock
sbb
xchg
sbb
or
loop
jnp
cmc
data16
adc
mov
rclb
pop
pcmpgtw
adc
imul
pop
cltd
outsb
push
add
adc
and
push
sbb
inc
shrl
fs
scas
mov
xor
mov
test
push
mov
and
and
mov
data16
fwait
lods
call
jno
insb
scas
loopne
pusha
ret
cltd
outsl
xchg
dec
jmp
pop
call
jnp
or
nop
movsb
shrb
test
or
push
fcmovu
lds
fimuls
sub
xlat
and
inc
ss
je
jmp
push
movsl
sub
dec
into
push
adc
test
xor
es
lods
pop
lret
pusha
aaa
mov
std
ss
pop
xchg
xchg
daa
pop
inc
ja
sbb
popl
loopne
sbb
nop
jl
dec
arpl
faddl
imul
loop
subl
mov
pop
icebp
dec
push
popf
add
lods
int3
adc
or
sbb
je
cmpsb
mov
xor
mov
mov
leave
mov
js
ret
sub
sub
movsb
adc
loopne
pop
fwait
out
sbb
mov
test
dec
lret
pop
cmp
dec
cld
pop
nop
push
loope
loope
adc
xor
cmp
inc
stc
pushl
xor
jecxz
mov
je
sub
adc
add
out
jp
jecxz
dec
mov
mov
pusha
xor
scas
into
es
test
jg
adc
xor
push
jo
xchg
inc
push
popf
call
xor
jecxz
cmp
icebp
jae
sub
pop
mov
jns
inc
loopne
cmpsl
fdivp
mov
popf
and
xor
or
call
adc
lret
lock
cmpsb
sbbl
mov
mov
insb
mov
pop
das
pushf
push
adc
cmp
and
sahf
xchg
test
pop
cmp
xchg
pushf
test
shlb
pop
dec
mov
pop
imul
or
adc
pushf
xchg
pop
sub
scas
jmp
sub
fisubrs
bswap
or
aas
shll
sbb
shr
xlat
add
scas
gs
mov
inc
add
mov
test
jne
mov
sbb
inc
pop
xor
sub
cmpsl
test
and
sbb
sbb
inc
mov
or
xor
movsl
push
mov
add
test
push
xchg
xor
out
jo
or
mov
sub
sub
or
jecxz
sub
sub
mov
lcall
int
fadd
arpl
adc
nop
pusha
hlt
jne
jge
fmul
sub
loopne
jnp
cmpsb
leave
pop
mov
cmp
call
ret
jno
idivl
mov
mov
cwtl
mov
notl
dec
pushf
out
lcall
xor
or
ss
rclb
inc
lahf
ss
insb
mov
jns
mov
mov
xchg
and
fnstsw
or
pop
loopne
and
in
xor
ror
add
dec
cmp
sub
adc
cwtl
test
sub
xchg
sub
hlt
cmp
movsb
test
js
cwtl
in
sbb
loope
cwtl
out
mov
inc
xor
inc
mov
adc
mov
cmp
pop
loopne
jp
std
sub
aas
pop
jle
das
add
lea
or
lods
int3
mov
iret
and
sub
sti
faddl
cmp
pop
or
cmc
mov
xchg
stos
mov
pop
xchg
mov
idiv
jno
inc
data16
add
nop
or
push
js
xor
sahf
sbb
outsl
shll
sbb
arpl
stos
xor
repz
mov
mov
mov
mov
mov
sub
or
sbb
scas
push
out
test
adc
js
fs
add
xchg
scas
insl
mov
dec
cmp
lods
push
and
sbb
int3
loope
jmp
xor
cltd
stos
fs
aas
popa
pop
cmpsl
rcrb
mul
inc
mov
fdivrs
aam
rcrl
cld
jle
jnp
fcmovb
cmp
jl
mov
jg
push
lret
repnz
sbb
adc
push
mov
adc
lahf
xor
inc
stos
rol
or
push
lea
das
and
push
aas
adc
mov
mov
cmpb
lret
and
pop
mov
mov
cmc
and
popf
hlt
cmp
mov
in
mov
sub
xchg
fldt
jnp
mov
push
mov
mov
gs
sbb
adc
je
xor
inc
aaa
pop
jae,pt
or
xchg
dec
aaa
jne
inc
dec
lret
mov
shlb
mov
sub
sub
loopne
jmp
sbb
push
in
sbb
mov
int3
xor
mov
stos
addr16
xchg
fidivrs
cmp
inc
or
fldcw
mov
push
sti
lods
mov
insl
popw
les
daa
inc
cmp
mov
jne
sub
out
xorl
dec
adcl
ss
mov
repnz
filds
cld
dec
outsl
mov
data16
lcall
mov
shrl
pop
pop
movsl
in
faddl
test
or
shlb
push
outsb
out
add
xchg
mov
pop
mov
rorl
stos
movsl
ja
insb
cltd
outsl
cwtl
ja
das
dec
outsb
xchg
fdiv
fwait
push
xchg
outsb
test
mov
stos
data16
pop
rcr
insb
xchg
hlt
push
rcrl
insl
popl
ss
cli
mov
push
sbb
or
jg
push
int3
loopne
xlat
movb
stos
cmpsl
shrb
sub
scas
mov
adc
cmpb
imul
cmc
sub
pusha
mov
lret
cmpsl
pop
cmp
imul
xchg
repz
xor
cmpb
shufps
ss
bsf
repz
mov
jmp
xor
or
pop
jle
and
lds
sbb
dec
lret
test
mov
aaa
adc
add
imul
cwtl
leave
dec
push
add
daa
addl
xor
cmpsl
les
loopne
cmp
push
imul
pusha
pusha
mov
shll
xlat
dec
mov
sub
or
add
dec
adc
push
jmp
je
fisubl
push
out
mov
mov
push
mov
scas
mov
mov
pop
cmp
popa
dec
inc
jp
shlb
mov
inc
push
mov
inc
sbbb
popa
out
adc
outsb
out
add
mov
inc
mov
cmp
xchg
dec
sub
xor
pushf
ss
pop
xchg
lods
mov
fidivs
xchg
mov
rorb
sbb
sti
xchg
dec
xchg
inc
pop
dec
and
gs
pop
fs
and
or
fcoms
mov
xchg
stos
rorb
mov
cli
int3
pop
adc
nop
xchg
cmc
test
fwait
xor
mov
or
imul
test
js
movsb
icebp
cmp
loop
add
popa
cmc
fwait
ret
add
mov
enter
push
in
ret
cmp
ficomps
pop
and
stos
pop
push
cli
cmp
sbb
jge
cmp
enter
je
jns
jo
push
jb
test
cmc
test
push
ljmp
pop
test
test
ds
sbb
sbb
jns
lea
leavew
stc
dec
in
fmull
enter
xchg
push
sub
sbb
jge
insl
jecxz
movsl
push
jno
jmp
loopne
xorb
push
inc
mov
lret
nop
stos
jecxz
push
pop
es
mov
cmp
xchg
or
push
aaa
fsub
outsb
pop
in
sub
and
enter
jecxz
jl
sbbl
sbb
andb
jb
xchg
mov
loopne
jae
mov
aas
and
sbb
mov
pop
mov
push
add
xor
lcall
rcrb
xlat
sub
mov
mov
insb
loopne
ss
sbb
nop
mov
inc
stos
fistps
sub
xchg
mov
push
into
insl
in
insb
out
mov
int3
es
into
movsl
dec
fstpt
out
mov
insb
pop
pop
lret
add
sbb
or
dec
jmp
call
dec
mov
ficompl
sbb
sub
fstl
jmp
lahf
gs
paddq
inc
cs
inc
cltd
popf
imul
mov
jb
loop
jg
mov
sbb
xchg
popf
stos
sbb
add
cli
js
mov
popf
lret
in
xor
imul
sub
insl
dec
cmp
xor
mov
cwtl
push
xorl
sub
roll
outsl
clc
cli
ret
ds
cltd
out
ret
aaa
xor
cwtl
inc
sahf
out
cmp
pushf
push
jl
push
pop
xor
hlt
ljmp
mov
lcall
jmp
push
jo
fs
mov
adc
push
mov
jno
pop
pop
outsb
aam
bound
xchg
andb
xchg
in
xchg
lret
insl
add
push
movsl
xlat
lea
inc
orl
cmpsb
cmp
mov
cmp
sub
sub
dec
bound
lods
in
subb
fdivs
jl
mov
lahf
pop
roll
test
bound
fisubs
xchg
mov
inc
dec
xor
aaa
faddl
cs
adc
les
cmp
shll
je
mov
cmc
repnz
dec
mov
mov
iret
imul
mov
xchg
lcall
bound
pop
cmp
xor
pop
cltd
in
push
cmpsb
adc
loopne
add
mov
mov
push
adc
or
cmpw
das
lods
sbb
mov
xlat
xchg
cmp
cld
addr16
outsb
xor
push
add
xchg
xor
ss
pop
sbb
mov
scas
stos
adc
pop
pop
mov
shlb
scas
dec
rclb
loopne
jno
insl
pop
cmpxchg
cli
push
add
and
inc
in
pop
dec
cli
mov
pop
popa
xchg
mov
leave
call
int
and
pushf
push
outsb
fucomp
jno
popf
int
mov
addr16
dec
insb
sbb
sub
in
int
cmp
and
andl
mov
jge
sbb
fwait
sbb
enter
lret
ret
pop
mov
mov
lcall
dec
jbe
pusha
cmc
jle
fistpll
test
mov
aaa
fisttpl
setae
add
inc
adc
fiadds
mov
test
mov
iret
test
hlt
sub
cmp
inc
clc
or
fnstsw
lret
sbb
mov
mov
lcall
iret
xchg
mov
aaa
les
adcl
pusha
adc
xorl
pop
or
sub
lea
add
lds
adc
sub
dec
pop
stos
nop
jl
fstl
pop
xor
orb
sbb
jbe
push
mov
dec
mov
and
jo
in
aas
hlt
push
movsb
sub
xchg
xchg
or
addr16
xor
xor
pop
lock
dec
or
lods
xor
outsb
ja
add
loope
mov
out
mov
pop
aas
dec
cmp
cmp
stc
pop
mov
jnp
dec
and
out
and
pushl
aas
push
mov
imul
lret
jge,pt
in
cmpsb
dec
cltd
stos
mov
enter
xor
daa
aad
push
pop
popf
cwtl
enter
shr
fcomi
mov
dec
mov
testb
push
xchg
or
push
cmpsl
in
cltd
and
and
or
push
jmp
lea
mov
mov
loopne
jno
jmp
xchg
repz
shl
cmpsl
aas
push
fildll
dec
adc
and
cmp
xor
call
ds
sbb
mov
int
jle
xor
sti
cmp
push
inc
inc
loop
cmp
nop
xor
loope
icebp
dec
je
mov
out
fs
out
sahf
inc
xor
call
fwait
daa
dec
mov
mov
fidivrs
imulb
and
pop
jmp
xor
push
jecxz
leave
sub
aaa
mov
test
std
mov
mov
rorb
dec
adc
das
loopne
pop
fisttps
andl
cltd
out
xchg
in
repz
in
rorb
sbb
jo
in
mov
or
mov
xor
and
push
pop
outsb
add
jns
ja
out
jns
add
xchg
imul
outsl
testl
icebp
dec
movsl
sbb
rsm
notl
jecxz
or
adcl
xchg
mov
xchg
negb
sahf
aaa
mov
shrb
shrb
add
aam
xchg
ja
cs
adc
xlat
imul
xor
or
popa
or
cmc
sub
cld
aam
int3
es
icebp
inc
sahf
ja
sub
aad
xor
push
sahf
cmp
nop
movsl
cmp
jno
cmp
xor
call
shrl
ret
adc
not
je
add
lcall
outsb
and
adc
add
cmp
in
pop
outsb
push
aas
jmp
sar
jb
sbb
adc
cwtl
or
arpl
cwtl
push
mov
pop
aam
adc
fwait
pop
inc
dec
icebp
inc
or
push
mov
or
addb
sbb
lcall
pop
xor
jmp
lret
xor
decl
je
cltd
xchg
or
in
mov
adc
push
movsb
lock
inc
lea
sbb
scas
sub
xor
in
xchg
ret
in
mov
lahf
shlb
cmpsb
sub
int3
push
mov
inc
cmp
sbb
in
push
or
mov
leave
icebp
movsb
and
lods
sbb
push
lahf
test
cltd
jg
sub
test
adc
shlb
aas
xor
test
sti
dec
inc
cld
in
repz
dec
mov
out
sbbl
cmpsb
icebp
out
sub
loop
fistpll
inc
xlat
mov
mov
sbb
cmp
inc
or
cmc
ja
inc
lret
das
fxam
mov
pushf
pop
loop
lcall
bound
xchg
xchg
xor
xchg
cmc
sbbl
mov
xor
jge
mov
enter
cmc
es
xchg
jl
add
pop
push
dec
cmp
mov
test
ret
loop
insb
test
cwtl
test
out
mov
adc
or
frstor
call
cmp
cmpsl
push
mov
xchg
aad
or
js
sahf
test
sub
or
icebp
mov
add
mov
xchg
mov
sub
xchg
fsubs
pop
mov
push
out
cmp
jb
popl
mov
mov
cli
push
es
mov
into
ds
push
xor
pop
aad
mov
xor
in
xor
mov
iret
xchg
xchg
stos
pop
inc
outsb
clc
outsb
mov
push
cmp
or
aad
outsl
int
loopne
pop
add
jae
shrl
andb
xchg
mov
out
mov
mov
test
fbstp
lret
jmp
pop
and
aad
insb
xchg
and
jae
mov
add
add
xor
push
faddl
inc
push
out
jmp
scas
ret
ljmp
adc
jle
jns
mov
incb
inc
inc
sub
in
test
outsb
sub
xlat
or
cld
in
jl
repnz
cli
sub
inc
fwait
cmp
fwait
daa
push
xor
sbb
cld
xchg
enter
lods
push
push
xlat
push
adc
and
aaa
cwtl
into
std
fsubrl
mulb
xor
inc
jp
inc
mov
sarl
pop
inc
jg
push
sub
jbe
mov
dec
daa
jnp
jecxz
cmp
cmc
lahf
scas
iret
int
mov
xchg
es
mov
mov
shrb
pop
jge
imull
and
adc
mov
or
scas
mov
pop
or
sub
loope
inc
dec
add
mov
mov
xor
push
out
into
sbb
dec
push
sub
cmp
cli
fsubl
xchg
cmp
adc
mov
xor
das
mov
cs
fildll
push
clc
lock
pop
sahf
cmp
mov
adc
push
push
insl
mov
pop
hlt
fbstp
test
repz
iret
mov
lock
cmp
aad
movsb
cltd
inc
ja
bound
push
orl
shl
outsl
shlb
fstpt
jle
inc
jae
popf
sub
scas
and
push
jl
xor
stc
push
les
mov
adc
pusha
lds
sub
mov
out
and
cmpsl
orl
test
pop
mov
out
mov
or
sub
mov
xchg
mov
add
sbb
mov
inc
adc
mov
popf
out
out
lea
leave
push
js
mov
mov
adcl
adc
or
push
rol
inc
xchg
sarb
scas
ja
push
test
push
addl
dec
xchg
jne
ss
daa
cmp
cmp
cmp
xchg
arpl
add
push
or
int3
fwait
popa
jne
mov
addr16
inc
outsl
adc
mov
jecxz
mov
in
push
adc
push
jg
or
adc
in
mov
aam
jle
push
dec
rol
rcr
mov
jp
sarb
jns
dec
mov
sbb
test
xchg
rcl
xchg
outsb
insb
inc
scas
jmp
lods
scas
ja
inc
addb
sub
push
sbb
std
js
sub
test
movsb
loope
mov
js
pop
push
imul
or
out
fucomp
mov
inc
push
jge
cmp
mov
insb
movsb
pop
sahf
std
mov
inc
push
xchg
cs
cmp
mov
dec
mov
in
sub
dec
ds
subl
pop
push
ljmp
cli
cmc
mov
mov
xor
jno
xchg
sbb
test
pop
adc
cli
jb
or
mov
dec
adc
movsb
sub
dec
in
dec
xor
push
cmpsb
adc
sub
in
cmpsl
xchg
fcoml
pop
xor
inc
jo
cli
push
jle
and
out
ss
sub
fidivs
mov
mov
jge
inc
arpl
mov
adcb
ret
pusha
jb
cmp
mov
or
in
retw
cmp
mov
sarb
cmpsl
enter
push
or
pop
daa
xchg
jge
lret
repz
jns
mov
xchg
out
mov
sti
sub
push
cmp
jmp
sti
inc
mov
pop
xor
lods
stos
sahf
xor
shl
push
loope
mov
sbbb
in
insl
ret
pop
xchg
dec
jno
pop
cmpsb
adc
or
in
jmp
jno
mov
dec
adc
push
jne
pop
aas
ds
lret
jle
lds
mov
push
das
addl
pop
push
dec
jecxz
loope
fsubrl
repz
xchg
xor
mov
stc
test
dec
test
sbb
adc
sbb
jns
xlat
in
cld
push
inc
inc
inc
pop
cld
stc
pop
ds
cmp
mov
ljmp
je
stos
inc
addb
movsl
das
dec
jbe
pop
cmc
imul
out
cmp
loop
jnp
lcall
ret
in
fdivrl
cmp
jo
call
js
add
aas
push
inc
testb
sub
outsl
jb
ds
mov
push
pop
bound
jmp
outsb
sbb
repz
lods
jbe
call
out
jbe
jmp
pop
arpl
jb
shlb
ja
addr16
push
xlat
fisttps
std
jg
cwtl
jb
test
dec
ss
lock
push
addr16
dec
repz
fwait
inc
call
stos
mov
sbb
push
mov
bound
stos
xor
mov
lock
adc
clc
mov
mov
add
xor
dec
roll
cmp
cmp
shlb
mov
outsl
fistps
cmpsl
testb
jle
inc
mov
xor
out
lods
or
cs
and
std
cmpsw
fcmovne
mov
pop
jmp
fs
shr
adc
ljmp
dec
test
dec
movsb
xor
jns
cs
insl
loopne
cwtl
or
add
mov
sbb
dec
mov
add
stc
shr
out
mov
cmpsl
add
je
lods
dec
push
shll
cs
dec
fisttpll
in
dec
adc
in
xchg
xchg
fnsave
push
aas
je
into
popf
gs
pop
outsl
pushf
pop
jo
adc
xchg
hlt
roll
in
adc
xchg
push
adc
js
cmp
pop
aam
jge
xchg
pop
sbb
jo
orl
mov
mov
pop
sahf
or
xor
cmp
mov
sbb
sbb
shrb
int
popa
loope
int3
mov
pop
roll
popf
pop
jbe
pop
pop
imul
loopne
ds
adc
insb
jae
filds
adc
cmp
bound
testl
fadd
jle
test
jp
mov
pop
mov
pop
fwait
stos
sbb
and
xchg
xchg
data16
jnp
mulb
jmp
adc
jnp
and
inc
xlat
ljmp
inc
shlb
cmpsb
popf
jns
call
ss
testl
cmp
int3
inc
cmp
mov
push
and
xchg
adc
dec
neg
mov
in
sti
rcr
xor
ja
add
mov
outsl
test
movsb
in
fsubr
ret
dec
imul
mov
negb
inc
arpl
mov
xor
jp
daa
pop
es
push
mov
gs
xor
add
pop
inc
idivb
mov
clc
icebp
test
and
lock
test
jns
push
cwtl
out
mov
fiaddl
mov
enter
cmp
cs
cmp
out
dec
push
add
pop
aaa
or
daa
dec
test
outsl
lcall
imul
mov
orl
mov
and
outsb
cmp
out
push
leave
lret
mov
inc
inc
out
push
xlat
pop
repz
sbb
push
dec
inc
lods
lods
rcrl
add
xor
sarb
rorl
add
iret
dec
mov
fisttpll
push
pusha
stos
insl
scas
inc
aas
adc
mov
add
push
orb
adc
into
nop
lea
sbb
das
pop
jmp
out
imul
mov
fcmovnbe
push
dec
dec
xchg
xchg
inc
push
data16
xchg
nop
push
inc
pop
mov
xor
sbb
adc
inc
daa
xor
out
adc
push
mov
negl
loop
pushf
mov
stos
out
jge
imul
enter
add
sti
push
shlb
cli
mov
add
jb
scas
jno
pop
or
imul
outsb
ss
clc
cmp
pusha
jle
hlt
add
mov
out
punpckhdq
ja
addr16
and
push
xor
add
xchg
add
not
out
and
jae
or
push
je
xor
and
and
aaa
sub
mov
and
inc
jl
clc
lock
scas
adc
push
mov
add
les
pop
or
xchg
stos
mov
lret
pop
sub
dec
push
sarl
or
xor
test
and
sbb
and
in
push
aas
add
mov
std
das
mov
pop
ficoms
or
repnz
dec
cmp
add
xor
sub
pop
push
add
mov
lret
add
enter
or
or
inc
jne
inc
lahf
fwait
imul
cmc
mov
jl
dec
adc
cmpsb
out
add
pop
mov
adc
adc
pop
cmp
cmp
clc
cmp
jge
mov
and
pop
xor
pop
xor
scas
mov
inc
je
je
jecxz
or
in
inc
fnstsw
jg
lret
pop
jbe
inc
mov
mov
not
sti
repz
cmp
dec
ret
dec
and
and
mov
enter
and
inc
push
pop
adc
sbb
repnz
js
movsl
sub
pop
fwait
in
jecxz
push
test
ficomps
push
lret
jle
mov
negb
jne
daa
mov
sti
cltd
das
cwtl
test
cmc
xor
addl
sbb
and
and
inc
in
imul
xor
orl
bound
sub
xchg
lret
insb
pop
imul
sub
xlat
pop
lret
mov
lea
pushf
and
adc
imul
cmp
dec
int3
jg
iret
xor
add
dec
int3
mov
pop
clc
or
popf
push
adc
loope
adc
and
mov
push
idiv
movsb
xchg
sahf
pop
jne
aas
fnstenv
out
and
pop
or
dec
fsubrs
test
icebp
stos
lods
mov
fistl
daa
cmc
adc
stc
adc
pushf
pop
xor
cld
push
xchg
cmc
pop
jecxz
shrb
dec
dec
jle
out
mov
imul
movsb
adc
mov
xchg
in
js
imul
mov
loopne
xchg
jp
jbe
sbb
cs
test
mov
leave
cmp
dec
rcpps
insl
mov
fcomps
lret
lret
minps
xchg
jl
dec
and
adcl
jae
inc
fdivrl
pop
movsb
arpl
imul
mov
jmp
ss
inc
sub
cmp
xlat
mov
push
push
xor
adc
cs
ss
pop
lock
or
cmp
test
inc
jb
imul
imul
in
push
clc
xor
sub
sbb
lock
pop
test
aam
and
add
movl
dec
test
outsl
jmp
xor
out
popa
repnz
cmp
push
inc
push
add
inc
scas
fcomip
adc
scas
add
in
push
xor
hlt
xor
ret
cmpsb
cmc
sbb
push
xchg
dec
add
cld
fistpl
cld
jb
xor
jg
push
jae
mov
or
cwtl
out
mov
and
icebp
pop
mov
dec
jno
sbb
aas
and
push
cwtl
xchg
lret
fdivrs
jmp
xchg
mov
pop
or
or
in
lock
sbb
add
xchg
pop
rclb
iret
mov
jne
push
aad
fcomp
mov
fucomip
xor
fisttps
jecxz
aas
aaa
mov
xor
push
xchg
fucomi
adc
dec
ljmp
int3
xor
fucomi
mov
xchg
loope
je
push
mov
lea
movsb
add
dec
mov
mov
xlat
push
dec
push
mov
daa
faddp
enter
cltd
mov
jne
dec
push
mov
push
jecxz
inc
xchg
xchg
or
into
add
sbb
in
inc
sbb
repnz
add
test
xchg
fcoml
icebp
mov
dec
mov
jbe
lds
mov
push
and
adc
fcmove
and
pop
xlat
aam
dec
push
call
pop
ja
test
mov
and
incl
rcrl
call
stos
mov
add
aas
adc
pop
sti
mov
xchg
out
cmpl
out
adc
push
inc
mov
out
mov
pop
enter
push
add
mov
xor
cmp
and
or
cmc
pop
test
dec
cmp
mov
adc
das
xor
scas
sub
pop
les
mov
sbb
ds
xchg
dec
shll
mov
out
xlat
fsub
jns
xor
dec
ljmp
insb
emms
mov
dec
mov
out
leave
pop
decl
cmp
mov
clc
inc
aam
aaa
das
dec
dec
add
insl
mov
or
stc
ljmp
inc
aam
cwtl
jo
dec
push
adc
xchg
mov
sbb
shrb
mov
imul
pop
loope
nop
out
and
inc
mov
mov
add
sbb
sbb
and
jle
adc
out
pop
loope
inc
icebp
insb
mov
push
or
aas
sti
jl
ret
adcb
les
out
das
cmpsb
sahf
outsl
jg
pop
jl
mov
ret
lret
lea
inc
movsb
and
enter
dec
iret
int
dec
xorl
xchg
xchg
jecxz
lea
sbb
popf
sub
std
sbb
push
bound
push
and
bound
adc
lods
push
mov
mov
cltd
int3
inc
mov
mov
pop
and
int3
pop
mov
or
jl
mov
mov
arpl
inc
add
cmp
push
inc
test
mov
mov
add
mov
iret
jns
xchg
push
cmp
cld
mov
enter
aam
jp
dec
mov
test
mov
or
sub
sbb
enter
hlt
mulb
sarb
out
mov
mov
iret
fs
mov
loop
cmp
push
xchg
aaa
mov
insl
insb
ds
call
loope
push
inc
test
xchg
and
dec
enter
and
fs
lcall
push
lods
stos
roll
cmpsb
out
xor
xor
mov
nop
cmp
mov
cwtl
or
push
mov
xchg
dec
push
lret
fdivl
gs
adc
gs
sub
dec
dec
je
ja
sub
cli
or
inc
out
outsl
ss
sub
sbbb
mov
add
in
addr16
cmp
roll
fdivl
popa
mov
data16
addr16
lds
in
mov
int
jae
icebp
lret
push
out
push
inc
cld
xchg
mov
lods
bound
into
pushf
movsl
stos
adc
pop
into
mov
fwait
dec
mov
cmpsl
es
dec
or
xchg
or
xlat
pop
pop
jg
int3
and
push
int3
mov
and
cltd
sub
fcomps
lret
cltd
dec
xor
jle
scas
shll
leave
out
pop
mov
jo
jmp
adc
aad
or
mov
sti
inc
cmp
shrl
repnz
sub
mov
pop
dec
fnstcw
les
jae
adc
loopne
adc
sub
cli
inc
stos
cwtl
jge
test
popf
sub
push
imul
xlat
rclb
insl
dec
out
xor
mov
xchg
pop
xchg
push
lcall
mov
jecxz
sbbl
and
test
jecxz
sbb
xchg
jb
icebp
push
ret
mov
roll
add
mov
testb
jl
movsb
sub
movl
push
jecxz
xor
ds
pop
ret
out
mov
jne
push
mov
xchg
ret
push
lcall
loopne
xchg
and
and
outsl
aad
test
pop
jb
sub
xchg
into
jmp
cmc
bound
lret
loop
xor
or
jnp
mov
pop
or
test
jnp
adc
mov
inc
inc
cmp
addr16
es
inc
add
cmc
cmp
xchg
das
add
or
nop
cmp
adc
jl
lods
fmuls
mov
push
lds
ljmp
inc
xchg
dec
fmuls
lcall
push
pusha
mov
jp
outsb
shll
xchg
mov
call
push
inc
pushf
lock
int3
jbe
rcrb
sub
mov
idivl
or
pushf
pop
or
je
push
and
xchg
not
xchg
scas
gs
or
mov
cmp
mov
pop
in
xor
test
sub
fcom
sti
add
out
pop
xlat
pop
mov
xor
pop
aam
cmp
or
inc
jne
lcall
inc
rclb
mov
sbbb
sub
lods
cmp
jle
sbb
xchg
addr16
add
fs
movsb
nop
mull
and
pop
stc
sbb
xor
popa
adc
mov
out
sbb
loope
es
dec
push
iret
or
dec
xchg
cmp
inc
sub
loope
sarl
or
aam
scas
xor
sub
incb
adc
loope
pop
out
mov
shrl
xchg
addr16
xchg
decb
adc
xchg
ss
das
inc
pop
or
jne
inc
jo
mov
out
lcall
inc
std
lahf
mov
lods
cmpsl
notl
cmp
outsb
jne
roll
nop
dec
push
cmp
xchg
mov
clc
push
shrb
rolb
dec
aam
mov
mov
fistps
inc
pop
or
xor
xchg
rcrb
push
sbb
js
into
ret
pusha
lret
dec
dec
icebp
cmp
rorl
dec
das
mov
sub
negb
inc
pop
jge
shll
aam
sbb
pushf
enter
adc
xor
inc
cmpsl
lret
ss
sub
mull
or
aaa
mov
into
jb
mov
or
or
jb
sbb
pop
rcrb
lods
loope
add
mov
pop
ljmp
imul
mov
xor
pop
rorl
lcall
test
insl
and
fsubl
pop
sbb
or
ss
hlt
mov
dec
es
sub
fisubl
jno
pushw
int3
nop
adc
mull
sahf
divb
mov
stos
mov
xchg
outsl
cmp
sahf
sbb
push
aaa
or
pop
loope
lock
dec
mov
pop
xor
jb
mov
gs
mov
or
push
cmp
bound
jp
sbbb
xor
ret
pop
gs
xor
add
xor
aam
int3
push
fdivrs
cmp
lds
mov
mov
inc
xlat
inc
add
or
mov
cmp
adc
push
or
insl
pop
ds
imul
mov
aaa
insb
movsl
add
addr16
fisubrs
jnp
sub
out
sbb
call
adc
cmc
rorb
add
xchg
in
inc
pop
inc
icebp
out
paddw
insb
mov
jbe
data16
mov
or
inc
xchg
dec
in
jecxz
out
fists
inc
pop
sarl
sbb
xchg
jle
pop
jle
call
test
shlb
aad
xor
test
ss
mov
mov
sub
data16
or
test
pop
pop
mov
sub
sbb
jne
jne
int3
lret
ljmp
addl
pop
insl
and
add
adc
cmp
imul
inc
push
mov
int3
pusha
mov
jo
insl
popf
jle
xor
inc
fmul
stos
mov
mov
cmc
fs
and
and
decl
push
jl
or
repz
ficompl
mov
pop
sbb
jmp
push
jnp
cli
fldt
sbb
inc
mov
jg
test
xchg
out
pop
lods
repz
jb
fstps
inc
imul
jp
dec
out
jl
cld
repnz
pop
push
testb
pop
or
cmp
fs
fsubs
push
outsl
imul
sub
mov
xchg
push
sub
jbe
test
sti
mov
jno
minps
mov
les
insb
jmp
pop
pop
out
and
shrl
in
dec
inc
dec
into
jp
push
adc
shrb
and
mov
xchg
out
ja
adc
js
or
dec
mov
jecxz
dec
cmp
lds
and
fwait
jg
mov
aad
sti
movsl
adc
jne
pop
cmp
lret
cmpsl
xchg
out
add
imul
fistps
mov
das
sahf
jle
mov
or
cmp
mov
addr16
pop
pop
push
call
lea
dec
sub
js
dec
or
iret
mov
push
pop
xor
loop
mov
iret
push
add
mov
mov
mov
hlt
loope
add
cmpb
push
fcom
mov
scas
outsb
ss
inc
aam
xchg
cld
cld
loop
jle
call
insl
rorb
jno
int
push
xlat
add
adc
loopne
stos
jge
test
adc
outsb
outsl
aad
adc
cmpsl
repz
push
loope
push
and
ret
xchg
stos
loopne
xor
pop
mov
dec
mov
test
aad
jns
nop
cmpl
testb
jo
rorb
call
incl
lds
mov
sbb
int3
adc
ret
mov
popf
not
div
pop
adc
in
je
cld
dec
arpl
and
icebp
inc
mov
inc
push
out
mov
sub
testl
push
push
push
cmpsb
stos
dec
xchg
loopne
les
mov
add
test
int3
or
insb
ds
scas
test
aas
inc
xchg
in
push
mov
popf
xlat
mov
cwtl
add
in
mov
cmpsb
jge
mov
movsl
ds
cmp
out
adc
test
dec
jne
addr16
add
push
jge
sub
insb
sbb
enter
jbe
xchg
jl
popa
push
mov
xchg
push
jne
cmpsb
jns
sub
xchg
pop
daa
pusha
mov
scas
enter
or
out
jg
rorb
push
cld
lcall
push
out
jge
int3
popa
jmp
cmpsb
je
and
cmp
mov
push
mov
add
cmp
test
in
rcrl
int3
jb
dec
outsb
xchg
sti
fwait
or
int
rcrl
xor
xor
mov
std
mov
add
call
xchg
pop
mov
lret
mov
cmp
jno
in
lcall
xor
std
addr16
or
ret
xchg
jns
mov
popf
imul
gs
test
cmc
shll
ja
add
adc
push
or
lahf
push
orb
test
cmp
push
pop
inc
bound
out
dec
hlt
dec
cmp
cmpsl
adc
push
cmp
jbe
aaa
sbb
loop
test
xor
out
out
daa
dec
insl
cmp
xor
out
movsb
mov
mov
inc
jbe
repz
jo
mov
jb
jp
mov
mov
hlt
xor
dec
jnp
or
out
test
aas
sbb
outsl
stc
pop
dec
rcrl
addr16
xchg
enter
or
cmpsb
lods
out
mov
add
and
inc
jecxz
pop
lahf
iret
arpl
test
and
cmp
add
out
push
push
decl
ja
push
negb
lahf
jnp
icebp
inc
xchg
fmull
pop
jle
xchg
bound
push
and
sbb
sahf
aad
fwait
lahf
test
ljmp
pusha
fsub
int3
bound
sti
xor
ja
jmp
jecxz
pop
mov
jmp
in
enter
fadd
dec
sti
pop
fcomps
sub
cmp
lcall
dec
jmp
add
fisubrs
jecxz
push
pop
imul
add
test
rcr
push
mov
adc
mov
pop
and
test
test
cmp
push
and
mov
js
mov
lahf
jge
cmp
fwait
xor
cmp
je
or
stos
xchg
test
inc
jns
and
mov
adc
jne
push
fwait
mov
testl
push
pusha
mov
push
les
imul
inc
pop
pop
aaa
add
andb
or
ja
pop
mov
mov
mov
mov
cwtl
daa
les
mov
pop
ja
adc
test
or
mov
cld
int3
cltd
lahf
fnstenv
jne
aad
loop
ret
push
jg
push
adc
loope
rcrl
shlb
add
sbb
pop
ja
jnp
bound
adc
outsb
sub
mov
cmp
xor
popf
xor
mov
mov
cwtl
xchg
mov
add
testl
mov
insb
add
cld
and
movsl
pop
sub
fidivrs
xchg
inc
inc
pop
scas
in
mov
insb
cmpl
scas
xor
push
pop
lea
stos
pop
push
lea
int3
mov
sahf
fbstp
pop
push
shll
mov
js
push
pop
sti
outsb
mov
adc
int3
data16
adc
xlat
fsubl
mov
cmp
daa
aam
call
mov
pop
xor
ret
stos
dec
jl
xor
inc
cmp
sarb
fs
aas
xchg
int
sub
sbb
push
lret
adc
lods
ror
gs
jbe
and
adc
lcall
mov
sahf
imul
test
xchg
push
jno
cvttps2pi
loope
idivl
test
outsl
repz
mov
mov
nop
stos
ret
fs
repnz
jg
arpl
sub
push
jne
jns
ficompl
pop
sbb
out
fidivrl
aas
xor
call
sbb
hlt
dec
or
pushf
dec
mov
clc
outsl
cmp
inc
dec
cli
push
fisubrs
test
push
cmpsb
fidivl
sbb
aas
int3
pop
cmpsl
pusha
in
dec
mov
mov
std
push
repz
mov
jbe
add
sbb
leave
fiaddl
sbb
sbb
adc
shll
imul
dec
ret
stos
jle
push
fsubs
sub
lcall
push
pop
out
aaa
leave
cmp
xchg
push
addl
or
ljmp
js
test
imul
aaa
add
xor
xor
ret
adc
xor
rol
sbb
arpl
pop
push
das
bound
add
les
popa
jbe
sbb
pop
jp
in
faddl
lcall
aad
jg
xor
mov
clc
decb
lock
fcmovnbe
sarb
dec
inc
xor
test
xor
adc
xchg
pop
mov
imulb
ret
sub
lds
js
inc
xor
mov
adc
pop
inc
pminub
aas
inc
cmp
call
lahf
inc
push
mov
in
out
les
nop
mov
aam
fisubl
aas
and
jge
xchg
pop
sahf
push
movsb
fidivrs
ss
iret
repz
and
lods
dec
stc
sti
es
push
das
cmp
sub
jmp
enter
mov
adc
pop
jge
jg
and
test
cmpsl
stos
cmpsb
push
sarl
xor
xchg
push
loope
sti
jns
fbld
loope
dec
fcmovbe
add
mov
sub
lods
sbbl
movsb
in
push
mov
mov
mov
ror
xorl
test
pushf
xchg
leave
push
push
xor
inc
es
xchg
sbb
roll
push
arpl
outsb
in
sub
andl
cmp
mov
lods
pushf
lods
sbb
fbld
sub
pop
cltd
data16
scas
jmp
insb
dec
sbb
mov
sar
and
and
stc
jns
cltd
fnstenv
cs
xor
out
aaa
inc
rorb
mov
lock
dec
add
sbb
lcall
pop
xchg
lret
push
iret
das
sbb
jno
cmp
or
dec
in
mov
xchg
cmpsb
push
in
jae
inc
cmp
mov
cwtl
fwait
mov
cmp
mov
mov
fwait
cmp
call
lods
push
dec
pushf
inc
scas
popa
push
xchg
push
js
movsl
outsl
jle
mov
push
inc
push
push
xchg
cmp
popl
xor
or
int3
cld
pop
push
js
cli
ja
test
cmp
and
and
or
jp
jmp
xchg
adc
inc
and
push
and
jno
aaa
ret
push
mov
test
lds
mov
fdivl
int3
loop
aam
sbb
mov
mov
mov
out
aam
dec
jno
add
and
in
adc
stc
inc
scas
lods
and
in
inc
push
shr
cmpsb
lock
jl
adcl
xor
pop
loopne
mov
lret
sub
mov
sub
fwait
pop
pusha
dec
ja
cmp
pop
mov
test
popf
pop
and
sbb
sbb
ret
fldenv
pusha
and
mov
jp
andb
aaa
cmp
mov
rcl
or
add
push
xlat
cmpsb
addl
frstor
icebp
ljmp
arpl
testb
and
or
mov
push
push
sub
inc
loopne
adc
test
adcl
jle
test
aam
lds
rorl
lret
inc
les
imul
lahf
pop
inc
cmpsl
popf
cmpsl
xchg
push
leave
or
sub
jo
fdivrl
outsb
mov
inc
leave
and
jge
sbb
inc
push
adc
iret
dec
fcomp
cmp
lds
xor
dec
fbld
popa
jle
ror
cmp
jno
or
shrl
jmp
xchg
sbb
subb
xchg
cmp
roll
cmovb
sub
stos
lahf
or
dec
test
mov
cld
jns
fucomip
xor
in
adc
pop
mov
jecxz
fistl
mov
imul
adc
iret
hlt
mov
push
pop
je
in
inc
mov
rclb
outsb
xor
in
or
out
shll
sub
push
add
mov
scas
imul
jge
out
imul
pusha
clc
pop
sbb
scas
xor
xchg
pop
pop
push
jo
cmp
mov
movsl
jg
jnp
scas
pusha
aam
cmp
lock
mov
repnz
push
outsb
notl
xchg
mov
xchg
xchg
push
sti
lods
shrl
sub
jnp
adc
adc
jnp
pop
shlb
fsubs
bnd
fisttpl
pop
push
popa
lcall
lods
sbb
aaa
or
loopne
add
push
xor
or
fimuls
dec
fs
sbb
jge
shll
dec
lret
xor
pop
icebp
inc
stc
cmp
fstl
mov
sti
in
inc
in
sbb
push
xor
lds
cmp
ret
lds
stos
xor
push
aam
inc
mov
arpl
rcrl
mov
test
loope
stc
inc
jle
orb
icebp
mov
lods
sbb
outsb
mov
sub
loope
push
dec
test
mov
push
enter
and
pop
idivb
jno
mov
in
aad
push
lcall
icebp
fwait
inc
fldl
sbb
popf
ss
es
xchg
mov
jl
imul
mov
lret
jae
cmp
call
frndint
leave
loope
xorb
sub
int3
pop
sbb
or
jns
cmpsb
jmp
pop
psubusb
fsts
and
mov
test
shl
push
sbb
push
inc
ljmp
popa
add
mov
sbb
ret
lahf
cmp
xorl
popa
and
ds
xchg
pop
mov
into
jb
jbe
mov
xor
sahf
filds
imul
mov
push
shlb
cltd
push
lods
pop
or
xor
push
mov
mov
loope
jb
mov
shlb
cmp
mov
adc
cli
inc
mov
push
pop
ret
outsl
testl
pop
daa
in
cmp
inc
ret
adc
lods
pop
push
cli
pop
push
ret
cmp
rolb
bound
mov
outsl
pop
sbb
or
push
adc
out
mov
lods
or
fimull
pop
cmp
outsl
fs
or
cwtl
xorl
push
jp
mov
sbb
lahf
pop
sbb
adc
aaa
ss
push
jge
jns
aas
sbb
aam
add
out
jmp
sbb
add
fisubrl
mov
jb
je
fldl
jns
pusha
xchg
push
pop
addr16
lock
xchg
xlat
sti
test
add
loop
mov
je
dec
pop
inc
fmuls
and
sub
std
rcrb
sbb
mov
stos
jae
insl
js
push
jge
and
pop
aas
mov
add
dec
leave
enter
dec
add
jecxz
and
stos
dec
cmp
sub
aam
outsl
rorl
cmp
jmp
pop
bound
mov
inc
ss
rcrl
dec
mov
iret
jg
lea
adc
mov
popa
lahf
mov
bound
mov
cmpsl
cwtl
lret
sahf
sahf
mov
adcb
stc
popa
lcall
mov
inc
or
adc
cmpsb
fstpl
jge
add
sarb
push
xchg
fbstp
cmp
dec
xlat
xor
and
fmull
sub
cltd
mov
xchg
mov
shrd
int3
in
jmp
xchg
sub
shll
adc
dec
sbb
js
cmp
xchg
jo
jns
inc
jecxz
adc
negl
int3
mov
ljmp
xor
mov
fdivrl
les
cld
mov
xlat
cmc
and
xor
ret
mov
fld1
mov
insb
cs
sbb
inc
rep
dec
jae
sub
pop
aas
sbb
loope
or
sbb
cmp
cmp
xor
data16
mov
dec
sbb
ds
sub
jo
pushl
inc
pop
mov
and
push
leave
leave
push
lcall
daa
cmp
rorb
push
jp
mov
dec
cli
sub
mov
fistps
cmp
aas
jno
je
mov
out
jae
cmp
imul
pop
mov
in
les
and
cli
mull
int3
or
mov
outsb
or
orb
div
inc
mov
mov
cs
xchg
ljmp
jbe
mov
lret
sti
xor
jp
dec
add
mov
or
inc
mov
shl
mov
dec
sub
jge
arpl
rcr
xor
dec
push
dec
insl
insb
push
inc
sbb
popf
das
repz
cwtl
sub
int
push
sbb
jge
lret
lds
push
ret
mov
mov
push
insb
jmp
cmp
pop
fcoms
pop
push
pop
hlt
inc
shlb
push
lret
sbb
test
jbe
xorb
movsl
push
mov
jbe
andps
shll
imul
iret
add
and
imul
hlt
dec
into
daa
mov
or
and
out
cld
in
push
mov
ret
ds
jns
int
repz
mov
lea
push
inc
push
dec
sub
inc
or
sub
fsts
cmpsl
aad
sub
scas
fdivp
mov
dec
cwtl
pop
xlat
dec
aas
out
or
xor
insl
sbb
add
fisttpll
out
out
inc
mov
insb
les
mov
adc
lea
mov
aaa
push
or
repnz
dec
adc
cwtl
aam
iret
push
dec
mov
mov
call
xor
mov
sub
push
and
sbb
sub
push
inc
xorb
inc
stos
das
adc
insl
pop
mov
or
pop
pmaddwd
in
fists
stos
popa
push
movsl
inc
mov
push
out
enter
inc
stc
sub
jmp
adc
popa
push
cltd
push
push
js
dec
fs
push
pop
insl
shl
and
loope
lahf
iret
cwtl
and
xchg
into
jb
cmp
ret
pop
xchg
dec
inc
xchg
sub
jp
std
inc
xor
mov
mov
jmp
cwtl
pop
insb
adc
inc
push
jb
fwait
mov
sbb
add
dec
pop
sbb
mov
adc
sub
or
test
inc
lock
mov
in
sub
out
jecxz
aaa
push
mov
xlat
lock
push
jne
push
rcrl
pop
out
sub
orb
push
int3
nop
sub
sbb
dec
xor
lcall
mov
decb
push
or
dec
enter
sti
mov
push
lods
ljmp
jne
shlb
cltd
aaa
addb
xchg
arpl
int
stos
mov
ret
and
mov
cmp
stos
jnp
fs
imul
jecxz
lods
add
add
mov
adc
sahf
or
adc
fcoms
and
rcrb
loop
xor
mov
and
in
inc
jmp
xor
push
add
sub
or
push
mov
cmp
sbb
xor
ret
push
out
xlat
fucompp
mov
lods
gs
sub
cmp
mov
push
jmp
mov
daa
jo
imull
dec
loope
mov
ffreep
mov
dec
in
pop
and
and
ja
shll
test
pop
nop
dec
dec
test
fiadds
mov
ljmp
jbe
cmp
pushf
sub
scas
fnsave
cmp
repz
push
pushf
jno
mov
xor
xchg
mov
inc
sahf
lds
push
pop
or
jb
fldenv
out
arpl
xchg
les
cmp
lahf
ret
lea
push
mov
test
jg
xchg
mov
aam
jns
jnp
sub
add
inc
pushf
and
iret
push
jp
or
aam
add
in
out
add
stos
fcmovbe
loop
xchg
lods
pop
inc
fstl
iret
fwait
dec
adc
pushl
mov
pop
xor
lahf
std
cld
pop
addl
xchg
mov
xor
fldl
scas
stos
sbb
scas
arpl
inc
add
adc
and
pop
add
jb
mov
inc
insb
or
es
cmpsb
aaa
lock
ret
jno
icebp
dec
das
shl
mov
sti
mov
sbb
push
mov
fidivl
pusha
in
lcall
fnstcw
out
sub
rclb
incb
ds
jmp
cmp
cltd
clc
sub
js
fadd
mov
cld
arpl
or
popa
mov
fwait
pop
add
sbb
mov
iret
fstps
inc
xchg
push
in
xchg
pop
into
dec
inc
inc
add
xchg
push
les
push
adc
cmp
lods
sti
jne
fists
xorl
sub
js
loopne
lock
test
mov
push
leave
scas
leave
daa
orb
push
aas
dec
inc
lds
rolb
into
push
bound
hlt
adc
test
fdivl
pushf
xor
div
bound
adc
dec
je
fdivrl
loop
dec
inc
divb
mov
adc
sarb
mov
xchg
stos
jge
ret
xchg
jp
ja
pop
mov
push
jae
cmp
nop
lods
mov
dec
or
in
iret
pop
and
and
dec
iret
imul
sub
dec
cmovo
cmp
ss
mov
xchg
aam
add
adc
cmp
inc
mov
das
movhps
mov
xor
frstor
outsl
sbb
out
mov
inc
loop
or
in
sbb
test
out
push
les
cmpsb
mov
daa
hlt
cltd
hlt
xorb
sbb
sub
popa
int
out
cld
push
push
and
jmp
lods
subb
mov
push
mov
cs
nop
ret
sbb
in
dec
and
xor
add
inc
cmpsb
stc
ror
mov
adc
dec
iret
push
lea
stos
sub
jbe
inc
repz
sbb
mov
sti
cmpsl
adc
or
das
sbb
icebp
mov
inc
into
xchg
aas
hlt
imul
dec
fmuls
lea
jo
addl
test
aas
push
mov
lret
data16
adcl
out
stos
cmp
mov
das
sar
jg
dec
xchg
lods
in
arpl
std
lret
stc
stc
es
mov
sub
dec
sub
adc
icebp
xor
cmp
ss
je
mov
mov
xchg
clc
jb
out
test
add
sti
inc
push
mov
ljmp
imul
clc
xor
xchg
dec
push
je
ret
sub
or
dec
xchg
push
notb
sub
insb
je
cmc
int3
xchg
mov
or
dec
cmp
mov
sbb
test
daa
or
jg,pt
std
add
bound
xchg
mov
bound
scas
out
mov
cmp
mov
adc
pop
js
dec
in
xor
ljmp
sbb
lahf
adc
fwait
in
outsl
inc
stc
sar
lcall
imul
mov
aas
mov
in
cmp
inc
popa
out
scas
in
sub
aas
data16
xor
lret
inc
enter
dec
jbe
jbe
xor
fcmove
push
pop
lds
push
int
neg
xlat
lcall
cmp
pop
std
mov
pop
out
js
outsl
in
add
mov
jnp
clc
adc
pop
bound
imul
lds
xchg
les
xchg
std
and
mov
or
mov
iret
mov
stos
js
lods
inc
add
push
inc
lods
adc
in
out
stc
movsb
enter
inc
cli
fadds
enter
outsb
ljmp
daa
add
test
incb
jg
dec
fisttpll
ret
mov
push
ss
ja
xchg
jp
out
pop
dec
fcmovu
loopne
jns
push
cmpsl
fcoms
xor
pop
push
xchg
pop
push
cmp
sub
ljmp
cld
imul
loopne
jmp
ret
js
vshufps
pop
push
in
mov
inc
and
stc
mov
push
imul
inc
pop
insb
sub
mov
adcb
ja
mov
dec
fisttpll
sbb
stc
repnz
call
sarb
push
imulb
test
scas
test
dec
repz
jge
push
out
inc
icebp
fadds
mov
aas
lods
fucomi
fwait
mov
jl
xlat
shll
pushf
fisubl
js
or
add
popa
imul
pop
inc
lahf
jecxz
add
fmull
xor
jo
xchg
orb
jmp
push
sub
rorb
and
ja
pop
sbbb
mov
int3
adc
push
add
into
xchg
or
outsb
mov
mov
iret
xor
ds
loop
inc
loope
xor
sub
lret
jne
inc
pop
in
adc
frstor
xchg
sbb
add
sti
cmpsb
dec
loop
mov
scas
cmp
sti
int3
and
mov
adc
push
aam
ljmp
ret
jl
bound
dec
lcall
adc
push
mov
jg
cmpsl
ds
mov
mov
imul
jae
inc
cmpl
xor
xchg
insb
pop
arpl
pop
cmp
xchg
les
in
sub
addr16
sahf
stc
cmp
pop
outsb
sub
aas
jg
mov
and
add
test
outsb
adc
pop
in
filds
inc
add
xor
icebp
dec
add
xor
outsb
cld
je
dec
into
add
sub
mov
jb,pn
inc
js
add
push
ret
add
push
push
sbb
jae
leave
jle
sarb
mov
popf
or
ss
mov
pmullw
inc
and
xor
push
adc
icebp
imul
daa
and
ret
inc
faddp
mov
aas
or
push
mov
iret
repz
movsb
mov
cmc
add
xlat
lret
int
std
push
mov
sarb
cli
test
in
sahf
mov
fs
cmc
or
add
test
stc
popf
mov
fucomi
lret
push
stc
or
mov
subw
outsb
hlt
or
and
ret
cmp
mov
mov
sbb
fisubs
mov
pop
mov
mov
in
leave
mov
sbb
push
dec
xchg
mov
sbb
aaa
enter
cmpsb
ret
sub
xchg
inc
push
lahf
imul
jge
aam
pushf
cmpsl
aam
imul
shll
inc
or
test
pop
add
lcall
adc
dec
outsl
push
xor
mov
sub
adc
pushf
js,pt
aam
adc
dec
rorl
mov
addr16
loope
shlb
mov
xchg
xchg
sbb
lock
cwtl
aaa
leave
movsl
adc
sub
inc
pop
inc
mov
sub
mov
call
stos
cwtl
lret
pop
sti
outsb
push
sar
lds
arpl
decb
jl
pop
inc
sub
int
push
pop
mov
loope
xchg
dec
fsts
lods
xor
mov
xlat
add
filds
loop
aas
or
cwtl
popf
push
cmp
sub
pop
fdiv
fisttpl
int
cmpsb
mov
pop
inc
add
inc
popa
testl
cmpsb
repnz
mov
cmpsb
inc
int3
fnsave
add
mov
hlt
call
pop
jp
push
int3
mov
pushf
shlb
or
xchg
scas
je
pop
sbb
or
test
ror
push
out
add
push
and
pop
iret
jge
add
sub
dec
or
scas
fistps
leave
sarl
sbb
add
stc
jp
lock
loope
popa
dec
bound
cmpsb
mov
ja
mov
fwait
sub
jmp
outsb
in
dec
mov
xor
mov
mov
sub
dec
sbb
fwait
cmovle
das
jnp
and
mov
jmp
out
mov
or
jp,pt
lods
and
pop
in
popa
adc
fldt
cli
push
cld
into
add
mov
dec
adc
fwait
xor
adc
sbb
add
inc
mov
in
ss
push
sarl
pop
pop
fs
push
xchg
jae
inc
sbb
inc
mov
out
mov
inc
xor
pop
rorb
xor
mov
sbb
pop
mov
mov
push
mov
ret
mov
xchg
test
fsubs
push
lret
test
pop
lea
rcll
dec
mov
in
daa
fbstp
ret
mov
jnp
and
and
sbbb
sub
jmp
and
scas
mov
hlt
les
mov
in
xchg
ja
movsb
and
xrelease
lcall
pop
push
pop
pop
scas
imul
movsb
shr
stos
dec
xchg
aas
insl
mov
push
xchg
into
push
inc
stos
aaa
mov
push
mov
pop
mov
gs
sub
mov
iret
sbb
pop
jo
sub
inc
sbbl
fistps
mov
dec
and
sahf
or
int3
pop
sbb
sar
add
mov
ljmp
in
test
cmp
sub
push
negb
ret
adc
jle
fsubs
jno
fnsave
and
pop
dec
out
lcall
lret
test
ljmp
fcompl
rcrb
fistps
pop
sub
pop
aam
xor
xchg
repnz
push
outsb
mov
cmp
jl
sbb
dec
notb
or
mov
lcall
xchg
stos
or
loopne
sti
fs
dec
shll
jecxz
or
inc
add
loope
lods
mov
mov
sahf
add
rcrb
aas
push
aaa
sub
stos
mov
les
loop
imul
ret
ret
ret
out
scas
int
cltd
and
or
sbb
ret
fmuls
clc
mov
jecxz
lea
mov
emms
xor
movsb
stos
orb
subl
adc
push
data16
stos
mov
push
jb
sub
fs
push
scas
call
in
loope
repnz
jle
dec
pop
pop
cmpsb
popf
xchg
faddp
pop
les
mov
ss
aam
xchg
mov
cvttps2pi
pushf
xor
push
add
jno
xor
and
xor
xor
lret
ret
jge
pop
pop
xchg
pop
xorb
scas
movl
inc
xorb
lds
jns
mov
mov
out
push
int
shl
shlb
mov
push
push
rolb
inc
aas
mov
shrl
pop
cmp
or
lret
jp
add
jne
adc
push
adc
cwtl
mov
cmp
jno
xchg
xor
lods
pushf
mov
lock
outsb
test
roll
adc
inc
dec
fwait
xchg
push
subb
into
or
aaa
sbb
push
xor
fs
bound
pop
idivb
aas
sub
inc
gs
cmpsb
imul
fcoms
mov
mov
mov
repnz
fadds
adc
xor
jns
push
push
xchg
and
xor
adc
jne
jne
fsubrl
nop
aaa
cmp
andl
mov
push
addr16
sbb
add
stos
cltd
ror
pop
inc
jno
rolb
les
jnp
pushf
jge
push
mov
pop
mov
push
xchg
jle
nop
sbb
insl
movsb
out
sbb
cltd
sbb
out
or
inc
jecxz
mov
pop
adc
les
lahf
call
mov
push
xor
js
xchg
ljmp
mov
xor
or
jle
xchg
mov
cltd
xor
shrl
ret
xor
jecxz
mov
xchg
pusha
xor
movsl
jp
call
inc
push
cld
lock
inc
out
and
leave
push
mov
and
jp
jno
mov
cmp
cmp
jg
aaa
sub
sub
test
xlat
and
mov
idiv
add
or
out
call
loopne
pop
cmp
mov
and
cmpsb
and
sbb
lds
sub
cmp
xchg
cmp
adc
scas
cltd
adc
out
push
adc
xchg
or
lcall
push
dec
sub
lock
in
sbb
or
addr16
xor
scas
aaa
leave
mov
daa
pop
hlt
and
jae,pt
mov
add
test
jo
and
mov
repnz
iret
fimull
push
insb
mov
push
daa
sub
mov
stc
mov
push
cmp
fadd
popf
fldcw
ljmp
mov
insb
mov
enter
mov
fnsave
jnp
fdivrs
mov
add
jecxz
in
mov
gs
movsb
cmpsb
lock
and
jle
inc
push
xchg
cwtl
mov
into
pop
mov
lods
ret
fisttps
jno
sbb
adc
in
loope
xchg
js
in
mov
and
cmpb
nop
out
int3
in
xor
popf
rcl
mulb
mov
movsl
pushf
jne
test
cmp
jl
shl
pop
lds
sbb
mov
ffree
addr16
xchg
or
inc
cmc
push
fcompl
lahf
stos
in
ret
js
or
test
sbb
mov
or
in
add
hlt
jns
fistl
mov
cmpsl
jl
jno
imul
mov
mov
cmp
cmp
es
ret
xchg
popf
cmpsb
sbb
push
std
and
mov
mov
call
jmp
jl
xchg
inc
xor
jle
xchg
mov
shl
mov
sbb
jmp
fsubl
add
test
sahf
insb
es
lahf
inc
push
in
jo
cpuid
and
cmpsb
mov
lahf
imul
lds
shll
mov
jne
jp
or
jbe
daa
xchg
lret
xor
jmp
test
inc
push
jecxz
xchg
test
push
icebp
cmp
int3
xchg
add
dec
jo
dec
daa
inc
loopne
sub
mov
les
in
scas
fdivrs
mov
jl
repz
xchg
popf
xor
add
jl
push
xor
xchg
mov
cld
push
in
mov
int3
dec
arpl
xchg
insl
mov
clc
jo
jge
ficoml
mov
and
add
add
dec
cmp
fst
adc
jg
incl
cld
or
loopne
ret
jg
out
lret
mov
enter
mov
dec
test
mov
add
dec
aas
add
loop
push
and
movsb
mov
mov
movsb
repz
rcrl
sub
jl
ret
into
out
mov
lret
pop
aaa
fistps
mov
xchg
adcl
mov
into
in
sarl
jbe
repz
je
push
mov
dec
mov
fcmovne
mov
test
arpl
xor
aam
stos
jns
mov
lds
add
pop
push
push
fxch
sub
xchg
inc
adc
mov
mov
enter
inc
inc
sbb
leave
sub
mov
push
inc
mov
dec
dec
mov
outsb
movsb
and
mov
loope
sbbl
insl
push
lret
aaa
cmp
sbb
sti
jg
cmpsl
xchg
lods
dec
inc
into
dec
popa
push
push
adc
xor
mov
mov
out
cld
cmp
scas
and
in
cmc
stos
loope
out
das
enter
inc
or
js
jmp
jmp
mov
mov
push
inc
es
in
pop
je
dec
sahf
jg
sub
lcall
or
js
mov
stos
in
jle
outsl
push
cmpsb
outsl
cmp
mov
xchg
aad
xchg
je
jle
popf
ss
test
pop
in
lods
and
in
fiaddl
inc
push
sub
add
sub
jp
jae
out
je
mov
jns
jmp
pop
fistps
pop
xchg
popf
scas
xor
or
fstps
stos
adc
push
in
das
jl
mov
leave
push
pop
or
adc
pop
ja
sbb
jns
ret
lods
int
repz
mov
hlt
cld
out
pop
pop
xchg
mov
dec
mov
cld
out
iret
cli
lret
adcb
mov
add
pop
pusha
outsl
cmp
cmc
sarb
sti
icebp
sbb
sub
mov
xchg
loopne
push
xchg
mov
lock
mov
cld
dec
mov
mov
xchg
adc
cmp
inc
pop
and
pop
testl
aaa
lods
mov
cmpsl
jns
aad
shrl
sbb
in
or
sbbb
int
xchg
cmp
cmp
shrb
push
lock
and
cmpsb
sub
ret
cmc
flds
rcll
adc
inc
xchg
and
out
popf
adc
and
cli
push
pop
or
in
or
adcl
mov
cwtl
cmpsl
jne
mov
call
jbe
daa
push
push
ss
inc
dec
xor
icebp
inc
lcall
xor
push
mov
dec
rorb
xor
lea
mov
sbb
mov
inc
out
sbb
cli
or
mov
add
gs
jo,pn
xchg
push
adc
mov
or
repz
std
mov
dec
lcall
adc
daa
mov
cmpsb
mov
iret
pop
mov
jo
into
test
mov
addl
shr
ljmp
push
push
xor
xchg
stc
mov
dec
sbb
pop
inc
adc
lret
arpl
cli
out
shr
movsl
adc
icebp
fstpt
jae
xchg
jl
dec
cmp
inc
mov
clc
call
int
js
pop
fsts
ja
xchg
test
or
jns
testl
mov
dec
ret
test
arpl
outsl
iret
std
inc
and
repnz
gs
mov
pop
enter
repz
loop
push
adc
or
ljmp
adc
lret
cwtl
mov
jge
hlt
in
mov
xchg
mov
sbb
fdivl
and
jae
add
add
push
mov
dec
mov
pop
in
adcb
jl
shlb
mov
sub
js
mov
out
data16
popf
push
xchg
push
inc
pusha
enter
xlat
pop
dec
mov
xchg
inc
lock
sbb
or
and
mov
and
add
ror
arpl
addl
or
mov
aam
sbb
jne
jnp
rcll
add
xor
scas
mov
and
add
jecxz
sub
add
sub
daa
or
loope
inc
sub
movsb
mov
aad
fdiv
and
call
mov
cltd
inc
dec
mul
push
cmc
and
add
jo
mov
lea
and
ljmp
pop
enter
push
mov
popf
fs
frstor
imul
out
jecxz
aam
cmp
and
cmpsb
xchg
repz
xor
shll
es
flds
imul
cmpsb
test
sar
lret
sti
adc
inc
mov
push
push
fwait
push
push
jp
xchg
test
xchg
in
mov
test
in
cmpsl
xorl
inc
or
adc
clc
imul
or
sti
sub
cmp
inc
mov
adc
fwait
js
in
call
out
loop
shrb
inc
mov
fnsave
or
pushl
shrb
adc
and
aas
jl
xchg
xchg
mov
mov
and
push
movsb
push
lea
pushf
xchg
cmc
pop
sbb
cmp
push
and
je
fnstcw
cwtl
mov
test
mov
mov
mov
pop
aas
imul
and
shll
xlat
pop
ret
and
lahf
mov
mov
push
add
mov
adc
insb
cmpsl
push
or
lds
dec
fildll
mov
xor
fwait
in
js
loop
nop
call
and
add
cpuid
ret
xchg
and
adc
lock
push
pop
shll
cs
test
out
mov
imul
cmp
cli
sub
mov
inc
ds
mov
in
frstpm(287
loop
loopne
or
and
enter
and
xor
jle
jne
hlt
cli
or
iret
aas
mov
orb
push
push
in
push
mov
and
into
pop
push
adcb
addr16
xchg
sub
bound
push
pop
jmp
and
cmp
inc
shrb
lret
and
pop
addr16
jge
dec
inc
fstps
dec
pop
lret
push
mov
andb
lods
inc
add
adc
cwtl
add
mov
lcall
cwtl
dec
mov
cmp
lds
inc
ja
mov
mov
andl
add
pop
pop
xchg
mov
xor
add
in
sar
jle
mov
popf
xchg
in
add
push
shlb
xor
sbb
loop
add
and
addr16
jg
xchg
cmpsb
mov
mov
mov
stos
mov
sbb
push
repz
rcll
pop
aas
loope
push
aad
push
xor
push
pusha
adc
orl
rorl
repz
insb
xchg
cmp
notl
mov
enter
leave
bound
pop
das
es
das
stos
out
call
outsb
rcl
mov
mov
cmp
pop
dec
out
xchg
inc
and
push
es
imul
subb
add
xchg
cmp
mov
lahf
xor
cmp
push
push
bound
dec
or
shll
inc
lret
out
push
scas
jbe
push
and
pop
mov
mov
add
xor
mov
negl
sbb
sbb
mov
lret
fcmove
ljmp
sub
fsubs
push
fbstp
lock
mov
add
cs
in
mov
pop
sub
sub
push
fdivs
mov
pushl
dec
xchg
lret
push
movsb
mov
cmp
sub
jb
js
mov
cmp
pusha
or
popl
xchg
aaa
lods
shl
or
fucomi
push
sub
movsl
stos
fsts
cmp
and
adc
adc
fcmovu
out
lock
cmpsb
scas
aad
cmp
adc
out
leave
mov
insb
mov
imul
push
xchg
xor
dec
mov
adc
fwait
and
xor
inc
lods
inc
sarb
inc
jecxz
iret
clc
mov
adc
ffreep
inc
out
dec
xchg
add
aaa
imul
dec
stc
mov
sbb
pushf
jge
mov
int
outsb
rcrb
pushl
dec
jno
loope
xchg
fldcw
push
aad
xchg
loop
enter
andl
lods
out
adc
mov
mov
test
push
test
repz
or
mov
push
fcoms
insl
sbb
xorl
lahf
xor
lods
pop
mov
insb
aad
loopne
xor
sbb
and
gs
lea
dec
mov
cmp
add
cmc
es
mov
cmp
imull
inc
or
inc
mul
popf
repnz
scas
stos
stos
xor
push
sbb
cmp
neg
or
jbe
mov
mov
jbe
dec
mov
lret
test
jmp
jmp
jb
mov
xchg
fdivl
xor
mov
fdivp
push
push
std
fucomip
push
pop
pop
or
adc
scas
movsl
iret
idivb
xor
lcall
cld
shrb
popa
loope
pop
ja
or
mov
and
pop
mov
mov
in
sub
stos
cld
pop
dec
hlt
and
hlt
pop
cmp
cmpsb
push
cmp
cltd
stc
ss
ds
sub
mov
or
push
pop
ret
adcb
popa
fmull
xorb
jmp
cld
sbbw
push
adc
bound
mov
out
jmp
sarb
sbb
ljmp
mov
push
mov
loop
std
js
leave
mov
jecxz
dec
movsl
js
mov
js
stos
imul
xchg
lcall
lret
mov
push
mov
cmp
pop
and
aad
lret
dec
psubusw
cmp
aaa
pop
mov
xchg
push
xchg
aad
outsb
xor
adc
sbb
arpl
mov
mov
mov
jb
cmp
cmp
jbe
mov
dec
insb
repz
movsb
fwait
cmpsl
push
jnp
push
mov
adc
jnp
subb
sti
cmp
jg
and
mov
pop
push
jo
nop
movsb
jg
cli
jle
cmp
pop
icebp
push
pcmpgtd
xchg
lcall
cltd
sti
inc
in
mov
out
movsl
inc
push
out
lods
repz
push
gs
sub
gs
stc
mov
push
mov
push
xor
cltd
aad
das
fwait
lea
xor
pop
ljmp
out
xor
popa
daa
stc
aaa
lds
push
imul
lret
aad
push
push
das
xchg
xor
cmp
enter
test
lret
inc
jle
rcl
push
int3
and
leave
pushf
aam
cmp
fldl
push
test
push
out
in
stos
popl
jmp
mov
xor
hlt
das
jg
cmp
stc
xchg
andb
ret
sarl
add
or
int
repnz
xor
fcmove
mov
lret
mov
lret
cmc
jg
xchg
adc
loope
fmull
imulb
pop
mov
or
aaa
orb
cmp
lock
sub
fstpt
in
ljmp
out
mov
scas
adc
xchg
xchg
dec
in
or
push
xchg
or
sub
aaa
push
stos
std
mov
insb
mov
aam
into
inc
and
movsl
enter
int
cmp
pop
rorb
xor
repz
mov
mov
pop
aas
repnz
dec
in
sub
add
lea
icebp
or
push
mov
xchg
cmp
jns
cmp
jecxz
scas
ror
iret
and
adc
dec
pop
out
out
outsl
jle
subb
and
inc
ret
int3
lahf
jmp
clc
dec
mov
sub
lods
mov
mov
dec
cltd
xchg
ss
les
scas
test
out
cmp
leave
popf
stc
xchg
ljmp
fdivs
inc
mov
popf
and
mov
js
mov
pop
push
cmp
lret
loop
mov
shll
sti
mov
cmp
testb
insl
sub
add
int3
push
xlat
jle
cmp
add
addr16
inc
outsl
cmpsb
and
add
push
das
mov
mov
dec
fnstenv
pusha
imull
inc
gs
scas
add
popl
ss
rolb
adc
pushf
jp
push
xchg
pop
pop
test
leave
mov
insb
nop
adc
mov
jg
in
fdivrl
cmpl
ret
push
and
out
loopne
inc
add
scas
dec
push
jo
mov
pushf
pop
jbe
inc
pop
inc
or
xchg
fsubp
inc
in
fadd
shll
push
nop
roll
fisubl
mov
push
add
push
jecxz
jge
pop
nop
sbb
inc
icebp
out
gs
mov
cmpsl
xor
sub
sbb
dec
push
adc
mov
rol
dec
rcr
inc
rcll
outsb
sub
mov
ds
mov
inc
mov
outsl
daa
leave
je
push
loopne
push
cld
shr
daa
pop
inc
cltd
pop
inc
sti
jge
leave
das
pop
push
pop
int3
sahf
test
int3
sbb
mov
imul
lea
nop
mov
mov
call
cltd
jae
mov
stos
imul
mov
add
repz
sub
xor
or
add
lea
lcall
ds
ret
jns
ret
pop
leave
jae
xchg
enter
cli
sbbl
push
jecxz
push
mov
pushf
push
xor
push
push
and
lcall
add
test
mov
sub
sub
pop
imul
lea
test
and
cmp
in
sub
xchg
lea
mov
jle
jl
jno
adcl
pop
mov
sbb
imul
aad
mov
push
pop
cltd
jae
xchg
or
push
loope
scas
rclb
or
sub
dec
or
push
int
jl
xchg
cltd
mov
or
or
shll
and
or
and
repnz
cmpsl
inc
cmc
xor
cmp
ret
shrb
loope
lods
jp
dec
lahf
pushf
fsubrl
mov
andl
enter
xchg
xor
es
mov
xor
cld
in
adc
adc
jnp
jnp
int3
inc
lds
fsub
pop
negl
cmp
mov
movsb
jl
leave
pop
xchg
vpcmpeqd
sahf
lahf
jne
cmp
add
mov
mov
lahf
hlt
hlt
cmp
jne
test
repnz
pop
or
mov
sti
mov
push
sub
arpl
pushf
xor
sub
outsl
xor
dec
cmc
lcall
pop
mov
loop
push
dec
fisubs
cmp
mov
or
test
insl
xor
dec
sbb
imul
add
jg
cmp
push
scas
lods
cltd
dec
jmp
mov
jmp
add
adc
lods
xor
mov
mov
pop
xchg
mov
sbb
xor
lahf
stos
in
push
call
add
fldenv
les
mov
dec
mov
outsb
ljmp
ja
mov
jg,pn
xlat
test
mov
aad
jns
push
in
mov
sbb
pop
dec
mov
jne
arpl
rcrb
mov
xor
insb
pop
sbb
dec
inc
sub
mov
fiadds
stos
lods
ljmp
dec
das
shr
xor
sub
int3
and
mov
or
mov
cmp
cmp
ret
pop
xchg
mov
icebp
js
cli
fwait
pop
cmp
push
or
cmpsl
inc
das
dec
test
mov
cmp
and
pop
xchg
and
pusha
inc
addl
in
arpl
jno
xor
push
dec
fisttpll
into
je
dec
xor
or
loope
jae
adc
in
mov
je
loopne
nop
jnp
stc
ja
subb
mov
les
adc
clc
jg
dec
xor
mov
pusha
cmp
and
inc
or
xchg
in
andl
and
sub
push
js
fidivrl
push
adc
lea
mov
lock
xor
aad
inc
gs
jae
add
push
jnp
adcb
push
fs
testb
fs
xchg
xchg
inc
test
es
decb
xor
test
inc
ficompl
je
mov
leave
push
stc
out
xchg
je
jp
pusha
mov
mov
in
push
inc
ljmp
adc
daa
lea
pop
jne
cmp
pop
inc
sbb
or
adc
push
pop
jmp
loopne
out
sbb
sub
pop
mov
jle
xchg
xor
mov
sub
sub
cmpsl
push
mov
icebp
cmp
xchg
popa
push
xchg
fldenv
mov
xchg
add
stos
mov
js
mov
das
testb
mov
out
lret
out
fldl
mov
movsb
or
add
push
xor
xor
mov
mov
mov
xchg
outsb
cmp
int
mov
adc
scas
cwtl
xchg
out
add
aam
into
jno
insl
adc
rep
movsl
fadd
pop
sbb
or
dec
pop
push
mov
push
inc
popa
ljmp
xor
lds
adc
xchg
pop
inc
mov
cmpsb
ljmp
cltd
mov
inc
jmp
out
je
add
fiaddl
push
jmp
adc
stc
xchg
xlat
jo
pop
mov
or
rol
mov
xchg
mov
add
inc
adc
fimull
mov
int
aad
jae
icebp
jb
and
or
or
aas
jecxz
adc
dec
push
into
adc
adc
je
inc
mov
mov
inc
cmp
adc
shlb
sahf
aas
les
out
jno
leave
lds
cmp
subl
push
mov
mov
and
pop
aam
cmp
arpl
jl
out
pushf
rorb
push
out
imul
add
xor
in
or
in
xchg
neg
mov
cmpl
std
addr16
jecxz
cmpsb
jae
push
sub
out
in
dec
sub
inc
or
test
sbb
cmp
sbb
pushf
mov
push
cld
xchg
in
xor
insl
cli
ss
xor
xlat
pop
jno
mov
in
ds
cmp
add
stos
mov
pop
adc
jns
int3
movsb
jb
push
lods
ret
cld
hlt
and
fcmovnb
rcll
movsl
or
and
es
mov
or
adc
mov
pop
jg
inc
inc
push
lds
adcl
les
and
enter
rolb
adc
push
push
lods
mov
in
xor
scas
call
add
mov
sbb
insb
fnstcw
cmp
or
mov
jns
out
adc
and
mov
fisttpll
inc
jo
pop
jne
out
jge
or
lret
cwtl
sbb
ficompl
mov
fimuls
hlt
jns
push
dec
xchg
lds
push
notl
lret
sub
sub
setne
sarb
jmp
aas
idivb
pop
test
pop
test
or
outsl
adc
arpl
jnp
std
push
and
lret
imul
cmpsl
xlat
mov
cmc
adc
jne
ret
cmc
sub
or
fadds
fmull
and
mov
std
sub
inc
aas
push
aas
test
inc
sbb
adc
outsl
call
xchg
bt
andl
js
jne
mov
jbe
xor
mov
adc
fdivl
mov
call
leave
in
push
jae
jo
test
xor
jnp
fbstp
cwtl
pop
push
cwtl
sbb
jbe
and
les
popa
jg
sub
pop
sahf
mov
xchg
movsb
popf
lcall
cltd
adc
out
sub
pusha
cli
fldenv
imul
call
rol
loopne
pop
lods
cmp
inc
das
out
add
jle
out
stos
enter
and
xchg
and
inc
ljmp
sub
pop
or
xchg
and
shrb
movsb
push
in
stos
or
dec
ja
jno
xor
xor
frstor
ja
outsb
adc
int
inc
adc
mov
jge
mov
pop
int
mov
ror
out
jmp
jl
mov
jl
pusha
hlt
mov
inc
ret
lods
adc
sbb
repnz
mov
or
cwtl
sub
mov
pop
mov
jae
dec
nop
out
rcr
mov
adc
mov
lods
fimull
dec
xor
aas
negl
mov
cltd
sub
xchg
hlt
mov
aam
shlb
xchg
or
mov
std
mov
push
lahf
roll
ljmp
mov
mov
cmp
adc
lahf
aaa
ss
pop
iret
adc
fdivs
andb
into
mov
popa
or
nop
mov
dec
adc
lahf
inc
stos
idivb
mov
dec
loope
fwait
xor
mov
dec
mov
mov
pop
jle
lock
mov
imul
fldpi
movsl
sbb
test
cmp
dec
rcrl
addl
pop
ds
fwait
xor
and
pusha
push
outsl
cltd
sub
jbe
lods
xor
lods
nop
or
or
jae
sbb
cmp
xor
insl
mov
add
push
mov
out
ret
xlat
xchg
shrl
loope
cmp
pop
enter
sbb
jge
test
cmp
push
fcom
jg
sub
dec
push
mov
or
bound
cmpsl
and
shl
out
and
int3
xor
cmp
lret
push
scas
mov
xchg
in
ficomps
bound
push
cmc
cmc
stos
out
andb
xor
ret
mov
lds
ljmp
movsb
inc
aad
xor
jecxz
data16
cmp
sub
stos
and
aaa
mov
jge
mov
cmc
xchg
push
cmpl
pop
inc
aaa
test
scas
mov
xorb
stos
mov
shll
xchg
ficomps
push
pop
dec
int3
jle
test
inc
dec
pushf
jecxz
clc
je
rclb
outsl
or
adc
or
ret
pop
mov
or
loop
std
jb
mov
lcall
xor
inc
mov
out
fs
cli
cmp
out
fimull
lods
adc
ds
xchg
enter
sub
mov
xchg
jmp
pop
mov
aas
dec
jmp
fprem
mov
sarl
or
rcrl
mov
scas
adc
pusha
pop
mov
push
out
data16
std
int3
in
loope
xchg
into
cmp
cld
cmp
fadds
repnz
inc
fnstsw
ret
jl
or
jmp
inc
cli
cmpsl
push
dec
loopne
mov
sti
call
scas
adc
add
xor
imul
xchg
jecxz
sub
dec
jg
je
and
dec
cmp
xchg
lea
jp
in
shlb
iret
add
jmp
pop
sbb
in
inc
xchg
xor
add
xor
sti
out
dec
je
sbb
cwtl
mov
fcom
cmp
fmull
popa
sbb
jo
cmp
pop
inc
push
jno
out
sub
loopew
sub
out
popa
or
sarl
enter
pop
sbb
dec
decb
mov
push
pop
mov
imul
daa
lods
mov
xchg
sub
je
cmp
into
mov
jg
pop
adc
pushf
jg
out
cmp
shrl
testl
inc
push
mov
lods
lods
push
incl
and
in
jo
cmpsb
stc
jecxz
push
adc
xchg
mov
lahf
dec
scas
jge
mov
jno
shlb
pop
cmc
js
aaa
jno
in
fdivs
mov
dec
scas
rcll
mov
dec
scas
mulb
cmp
jns
mov
push
or
mov
cmp
cltd
cmpsb
cli
jmp
cmc
out
add
mov
cmpsb
mov
push
loope
sub
int3
enter
cmp
out
icebp
test
cmp
mov
rcrl
bndstx
inc
lahf
jns
adc
shlb
fimull
clc
sbbb
inc
sbb
add
in
inc
cmp
jne
push
jb
xor
mov
and
or
pop
data16
ja
jae
in
popf
cmpb
mov
movsb
xor
jo
sbb
push
jo
cld
pop
test
push
movsl
into
pop
jmp
mov
dec
push
sbb
mov
ret
adc
xchg
iret
lods
adc
add
pop
or
dec
nop
add
dec
ljmp
lea
dec
test
cmpsl
xor
sub
popf
icebp
addr16
inc
lea
hlt
cs
cs
or
mov
into
outsl
icebp
loopne
aas
add
stc
cltd
cmc
imul
repnz
test
mov
je
test
jg
insb
add
dec
mov
inc
jmp
sahf
mov
test
repnz
pushf
cmpsb
mov
jae
mov
cmc
add
cmpsl
xchg
push
inc
add
imul
sbb
scas
clc
push
fistpl
pop
inc
xor
xchg
jbe
xor
enterw
jge
mov
xchg
xor
pop
in
fdivr
lcall
test
sbb
nop
mov
cmp
inc
dec
mov
std
sbb
fucomp
in
pop
push
rcr
jne
fucomp
pop
mov
mov
out
imul
xchg
xchg
cli
out
repz
jae
idivl
fidivrl
xorl
cmp
dec
cld
jp
or
jno
mov
or
mov
mov
add
mov
xchg
cmp
push
add
mov
fstl
push
rol
inc
add
in
add
pop
pop
aam
out
mov
add
sti
bound
push
pop
push
mov
cmp
int
sarl
sti
cmp
pop
and
out
pop
or
push
test
fnstcw
outsb
leave
leave
fisubs
fimull
lds
aam
clc
sub
mov
daa
sbb
xchg
test
push
subb
xchg
dec
mov
ljmp
in
inc
and
jg
imul
leave
enter
mov
mov
mov
adc
ss
dec
mov
arpl
stos
xor
mov
cld
xor
je
lods
in
outsb
sbb
mov
or
mov
and
mov
inc
sbb
push
rcrl
or
jnp
jmp
inc
inc
adc
cmp
stos
das
mov
jle
iret
mov
add
dec
aad
les
out
sub
mov
xor
ficompl
lret
jnp
sub
jge
inc
add
das
clc
fmuls
mov
test
packsswb
inc
xor
add
mov
rorl
jae
mov
aam
sti
mov
adc
add
pop
and
shrb
cli
sub
xchg
cmp
and
jno
jl
sub
cmp
lods
add
test
xchg
lds
sub
mov
xor
push
xchg
cli
ficompl
mov
orb
idivb
dec
xorw
sbb
lods
sub
xchg
and
xchg
shlb
add
jb
add
fdivrl
insl
out
in
jmp
negl
fwait
test
leave
cwtl
mov
aad
loopne
mov
mov
adc
inc
bnd
hlt
out
lret
mov
dec
mov
sbb
je
and
pop
in
divl
stc
mov
shll
and
pop
pop
rcrb
or
fs
cmpl
and
xchg
loopne
hlt
repnz
sbb
sbb
imul
unpckhps
stos
mov
and
mov
or
inc
cltd
cmp
xor
dec
addl
pop
add
pop
dec
fdivrp
ret
jmp
imul
xchg
xchg
jl
lock
aaa
aad
pop
fs
repnz
ds
dec
lock
jns
cltd
push
shll
mov
sbb
je
sub
lcall
lahf
pushf
cmp
mov
into
icebp
lods
xor
xchg
add
fdivs
jb
int
data16
dec
iret
testl
mov
stos
retw
into
mov
or
or
fmul
xchg
cs
inc
cmp
mov
or
inc
jns
lods
push
adc
jbe
sbb
jnp,pt
xchg
or
lods
out
loopne
fsub
icebp
sbb
mov
pusha
mov
cltd
xchg
cmp
sbb
adc
shrl
jne
sbb
sbb
in
in
dec
test
jns
test
sbb
adc
cli
dec
cmp
push
out
push
push
fcomi
into
mov
xchg
jnp
jmp
sbb
outsl
idivb
enter
push
push
pop
jmp
add
or
dec
test
push
sbb
arpl
ds
pop
ret
add
sbb
xor
aam
gs
mov
mov
data16
sbb
mov
addr16
scas
sti
cmpsb
std
jno
sbb
jp
getsec
ret
jns
test
xor
lea
into
or
imul
xchg
dec
int3
ds
jmp
and
jb
adc
lods
cmp
dec
rolb
icebp
sub
push
jg
adc
je
sub
sti
push
ljmp
daa
or
or
out
adc
and
pop
ret
inc
push
or
mov
sbb
test
push
es
mov
clc
movsb
mov
or
push
add
inc
bound
mov
jns
mov
mov
jecxz
mov
and
adc
mov
lret
dec
mov
scas
mov
add
xchg
lods
pop
dec
leave
icebp
push
call
and
push
push
adc
pop
inc
rolb
mov
out
adc
jo
sahf
cmpb
arpl
pop
test
aas
gs
mov
dec
xchg
cmp
int3
xchg
jo
mov
pop
push
sub
stc
push
daa
stc
jno
icebp
inc
fidivrl
push
push
out
shl
test
mov
jmp
xlat
lcall
jge
push
inc
jb
dec
mov
sub
inc
out
mov
pop
into
pop
int3
add
xchg
nop
std
jge
or
jg
add
lahf
ret
mov
iret
pushf
push
insb
lret
jle
jg
sub
cwtl
push
pushf
imulb
mov
push
sti
das
aad
dec
lds
xchg
jp
and
mov
jbe
test
fs
push
adc
or
mov
adc
test
cld
in
stos
pop
xor
mov
into
into
int3
scas
push
sub
mov
mov
out
test
cmp
insb
arpl
pop
subl
sahf
xor
pop
stos
dec
ret
bound
or
lcall
mov
mov
pop
movl
xor
les
repz
les
push
stos
jmp
mov
jo
loopne
stos
aad
xchg
imul
xor
push
lock
out
cwtl
loope
ret
push
add
mov
mov
inc
hlt
enter
xchg
push
mov
or
lods
jae
loopne
leave
xor
ffreep
adc
out
stc
jp
pmullw
add
fucomi
hlt
or
in
test
cmp
jecxz
dec
outsl
in
movsl
push
xchg
push
mov
or
call
mov
rcl
jecxz
cld
mov
das
ret
clc
ljmp
incl
fwait
jge
inc
pop
xchg
dec
pop
jb
test
in
cli
or
addr16
repnz
cmp
stos
pop
pop
rorl
push
push
fs
shll
sub
insb
pop
das
ja
inc
xchg
fstl
mov
lock
repnz
mov
outsl
jmp
cmpsb
pop
andl
in
div
repnz
fbstp
ret
daa
repnz
jnp
dec
xchg
mov
adc
mov
call
pop
insl
pop
xchg
push
repnz
or
aas
sbb
shll
pop
dec
pop
dec
mov
xchg
add
inc
jp
sub
mov
jnp
data16
push
jo
dec
mov
orl
sub
fistl
hlt
int3
push
xchg
dec
sbb
hlt
sti
pshufw
clc
sbb
inc
jne
pop
repnz
in
in
rcr
leave
cmp
mov
mov
fcoms
aas
imul
icebp
or
and
int3
insl
cmp
fnstenv
stos
sub
mov
fiadds
test
jg
xor
adc
lds
ljmp
ret
xor
inc
repz
std
mov
dec
jmp
ds
outsl
mov
cmp
cmpsb
fs
fistpll
add
ss
enter
mov
or
push
sub
jecxz
jnp
dec
or
sti
sub
and
cs
mov
in
sub
dec
mov
xchg
rorl
sub
out
aad
or
lret
push
adc
addr16
rcl
aaa
sbb
inc
xchg
outsl
pop
ljmp
gs
orb
rcrl
and
scas
add
sahf
jbe
sbb
xchg
jnp
mov
aam
out
data16
pop
sub
pop
jp
fcompl
fwait
cli
push
jno
scas
shlb
sbb
mov
lea
adc
sbb
cmp
fiaddl
sub
fistl
xor
aas
out
jbe
push
call
inc
adc
cmc
outsb
cmpsl
adc
rcll
lods
fistpll
pop
push
cmpsl
js
xchg
je
sbb
mov
push
test
sbb
xchg
mov
cmp
setl
dec
pop
ret
jl
mov
je
or
cmpsb
jnp
shll
sysexit
cmp
jl
sar
mov
cld
out
fisubrs
cli
cmp
cmpsb
cmp
ds
jmp
test
mov
jo
mov
jne
lret
add
mov
adc
adc
test
push
das
cmp
xchg
xor
mov
xchg
roll
push
add
pop
lret
adc
mov
add
push
sub
adc
xchg
pop
ror
mov
sub
jp
int3
push
in
xchg
movsl
es
fimull
mov
cmp
xlat
ficoml
add
sub
icebp
mov
in
push
and
or
pop
ds
rolb
push
adc
popf
xor
scas
jg
shrl
xor
pop
lahf
das
int
jnp
jo
push
bound
mov
leave
stos
cli
and
pop
jmp
mov
fstps
es
sar
inc
mov
jmp
or
pop
mov
std
sub
enter
pushf
lret
push
sub
loope
test
lret
cli
and
xor
adc
cli
clc
xchg
inc
adc
jb
mov
and
outsl
add
mov
lcall
mov
jg
lcall
fcom
aad
sahf
dec
scas
aas
xchg
xchg
and
xor
push
push
mov
call
fld
jbe
dec
push
adc
and
xchg
lret
xchg
jp
dec
pop
je
xor
mov
adc
inc
inc
cmpsb
pop
cld
add
outsl
pop
cmc
sarb
inc
mov
orb
enter
cmc
jp
mov
js
int3
xor
xor
jbe
push
push
push
or
fidivrl
scas
out
icebp
push
insb
inc
add
gs
mov
add
add
out
cmp
in
xor
dec
fcomps
add
movsb
push
push
mov
arpl
inc
mov
adc
flds
cmc
dec
cmp
outsb
clc
fnstcw
pop
xor
sbb
lret
push
pop
movsb
push
in
dec
daa
andnps
pop
cmp
mov
cmp
clc
ret
pop
cmp
mov
sub
addr16
or
cmpb
jecxz
aam
jmp
fmull
enter
sbb
sub
sbb
lret
clc
cmp
xchg
ret
adc
roll
sub
call
sub
xlat
jnp
popf
fwait
pop
adc
into
mov
adc
bound
test
leave
inc
mov
movaps
xchg
and
shrl
push
mov
jl
ficompl
das
push
sbb
shll
inc
sarl
pop
add
dec
pop
jne
and
mov
fnstsw
jnp
and
sub
lods
jg
mov
xchg
push
pop
or
inc
into
lret
sbb
mov
pop
xor
into
cmp
test
int
mov
mov
mov
idiv
lock
mov
push
aas
sahf
pop
clc
test
test
inc
dec
xchg
xchg
pop
mov
call
adc
add
push
mov
loop
insl
cmp
xor
add
repz
jg
mov
add
mov
out
cmpsl
rorl
xor
out
mov
or
pop
inc
jnp
ds
cmp
xor
ljmp
into
scas
sbbb
push
rcl
ficoms
jmp
fnstcw
pusha
out
sbb
mov
mov
jno
rorl
push
push
xor
rorl
fiaddl
out
lret
push
repnz
xchg
or
jge
insb
and
mov
hlt
les
dec
lea
xor
roll
loop
jnp
or
clc
ret
pusha
adc
dec
aas
repnz
cltd
push
roll
mov
scas
mov
imul
fs
fstp
popf
subb
pop
xchg
les
hlt
clc
aas
push
repnz
mov
out
orl
rcll
dec
push
addb
mov
fstpl
out
in
clc
push
push
dec
sub
sbb
sbb
out
or
stos
lret
lds
cwtl
ljmp
xchg
into
mulb
xchg
out
loope
lock
stos
nop
xor
pop
cmp
mov
mov
xchg
inc
lds
push
out
nop
jp
adc
arpl
shlb
loopne
and
push
sbb
mov
cld
repz
mov
negb
data16
andl
dec
sub
mov
mov
and
lods
fdivr
out
aas
push
loopne
cmp
sbb
lahf
imul
push
fldl
cwtl
scas
mov
lds
scas
cwtl
mov
push
jmp
in
inc
imul
ljmp
repnz
shl
add
add
imul
imul
mov
outsb
inc
sbb
sahf
push
out
xor
sbb
loope
repz
xor
inc
lods
xlat
shlb
pop
data16
xor
pop
add
into
movsl
cltd
stos
adc
jns
pop
ret
xchg
jae
ret
cmpsl
jmp
fsubr
jbe
out
fcomi
xchg
sbb
xchg
jo
lods
pop
repz
leave
fwait
movsl
push
or
sub
mov
pop
xchg
daa
xor
lods
lcall
lcall
aam
jnp
mov
imul
or
jae
jns
iret
mov
in
shld
push
cmp
test
das
dec
ret
add
mov
sbb
imul
fs
je
adc
cli
mov
mov
adc
dec
xchg
lea
decb
cmp
xchg
inc
loope
cmp
or
lea
mov
cmpsb
shlb
test
mov
pop
sbb
movsl
loopne
mov
int3
push
push
xchg
aaa
hlt
pop
and
cmp
mov
sub
jecxz,pt
into
or
pop
mov
push
lods
pop
pop
xlat
mov
cmp
push
call
dec
cmp
iret
pop
lret
insl
clc
pop
jle
jg
dec
xchg
or
ss
lret
pop
add
iret
sub
insw
dec
pusha
inc
push
push
imul
test
fs
lock
fistpll
nop
in
push
ret
mov
mov
lods
cmp
std
ret
ja
add
aas
mov
cld
outsb
cmc
jl
shrl
adc
xlat
jbe
cltd
dec
jae
add
sbb
enter
sar
jmp
les
stos
add
push
sbb
fs
jg
mov
out
lds
loopne
je
jg
iret
cmpl
xor
xchg
pop
pusha
pop
jno
mov
pop
jle
or
cld
mov
pop
sub
lods
jge
pop
push
push
xor
xchg
sub
ss
jge
mov
mov
inc
sbb
or
dec
push
mov
shl
dec
insl
loop
adc
jp
pop
mov
call
movsb
fwait
xchg
loope
arpl
adc
or
inc
push
add
pop
pop
scas
jg
jns
jp
addr16
addr16
pop
cs
dec
mov
in
repz
cmp
mov
loop
bound
bound
and
adc
aas
add
mov
fisttps
aam
mov
clc
dec
mov
pop
cmp
fdivrl
mov
mov
xchg
inc
hlt
pop
sub
aas
pop
loopnew
xchg
push
call
insb
add
add
jge
fnstsw
lods
push
rorl
mov
pusha
sbb
stos
clc
xchg
cmpsb
sub
or
push
daa
loop
push
stc
ficompl
pop
orb
cmc
sub
jmp
fcompl
daa
sub
or
test
mov
xor
data16
cmp
add
push
mov
push
sbb
imul
push
mov
dec
xor
pushf
loope
xchg
scas
push
pop
lcall
lcall
add
aad
xor
mov
inc
iret
call
out
call
das
lock
or
xor
mov
mov
xor
pop
jmp
push
sahf
push
pop
mov
out
out
inc
movsb
in
lds
ss
packssdw
xchg
pop
pop
push
fimuls
lret
aad
mov
lret
stc
mov
pop
ror
cmpsb
cli
jo
adc
cmp
mov
ja
fs
imul
sub
adc
mov
int
jne
push
fnstsw
push
cmp
leave
dec
mov
movsb
fbld
div
in
push
popa
clc
lds
sahf
mov
sub
cmpsb
or
cmp
inc
sahf
sub
dec
movsb
dec
ss
jle
and
xor
push
shr
ret
outsb
mov
loopne
sbb
xchg
jbe
lcall
das
mov
and
les
or
and
aad
jb
mov
cmc
inc
push
repnz
xor
imul
push
mov
std
or
jl
adc
mov
lcall
out
and
jno
cmp
xchg
push
dec
sbb
dec
xchg
xlat
sub
arpl
sbb
test
inc
pop
pop
pop
fstps
mov
cwtl
inc
cmc
pop
pop
lcall
push
sub
dec
rclb
pop
loope
xchg
jne
jle
std
lahf
add
push
push
xlat
leave
loop
in
icebp
pop
data16
iret
and
mov
jl
cli
cwtl
addr16
jo
adc
int
fldcw
sbb
ja
add
sbb
daa
mov
cmp
je
ficoms
lret
adc
xor
shlb
outsb
push
negl
nop
add
cld
mov
xchg
pop
je
mov
bound
insb
sbb
les
mov
inc
inc
mov
repz
push
or
lds
fimuls
hlt
push
rcll
jp
add
pop
xor
js
jne
mov
mov
xchg
xchg
sarl
sahf
js
int
jecxz
or
and
or
sbb
or
fdivrs
int
and
dec
nop
push
jns
popa
mov
or
out
adc
push
incb
scas
loop
aam
sub
fdivrl
imul
rol
dec
test
insl
pop
mov
and
lods
jnp
leave
jb
xor
das
and
gs
in
mov
mov
out
movsl
xchg
insb
mov
jle
cli
adc
pushf
popf
mov
leave
pop
cwtl
or
fldpi
test
add
int3
jbe
int3
shrl
inc
mov
cli
xchg
and
stos
cld
call
outsb
adc
lret
xor
jb
fisttpll
adc
inc
daa
xor
mov
adc
adc
mov
and
cmp
dec
loope
outsl
mov
push
pop
aad
push
mull
add
mov
pop
lods
stc
or
xchg
test
fs
push
lock
mov
mov
pop
jp
xchg
sbb
mov
inc
pop
mov
adc
hlt
inc
pop
dec
xchg
cwtl
jle
xchg
and
dec
or
xlat
lret
or
mov
je
mov
inc
and
mul
ret
insb
push
pop
dec
push
mov
das
push
dec
mov
fnstenv
popf
xor
fisubrl
sbb
inc
in
xchg
xor
aam
sbb
lea
ljmp
mov
aas
mov
push
xchg
dec
sti
or
add
jo
lahf
cmp
push
jmp
icebp
push
imul
jp
roll
fistl
jns
gs
jp
mov
lret
xor
shll
bound
test
xchg
adc
pop
hlt
dec
outsb
lods
mov
mov
pop
mov
into
inc
mov
pop
mov
jbe
das
mov
movsl
lret
lods
xlat
stos
jmp
cmp
scas
xchg
adc
jne
adc
pop
mov
jb
stos
lcall
mov
fcoms
loope
fildll
fcoms
int3
fcoml
cli
xchg
scas
sbb
sbb
jb
xlat
jg
repz
mov
xchg
rcl
jae
cli
enter
aam
xor
loopne
dec
les
out
mov
inc
sub
ja
sbbb
add
mov
or
xchg
popf
jns
sbb
sbb
fcomps
lahf
or
sbb
inc
add
cs
inc
push
xor
pop
pop
inc
inc
jae
lea
sahf
or
ret
jne
cmp
add
clc
movsb
divb
cmovnp
push
inc
add
test
jb
pop
jmp
sarl
cmp
inc
push
adc
fisttpl
xor
jb
div
enter
enter
dec
in
popa
imul
shlb
es
daa
into
xchg
dec
aad
fs
lcall
out
push
lcall
mov
pop
jecxz
pop
dec
push
add
pop
sbb
adc
mov
dec
xchg
pusha
das
push
subl
mov
iret
xchg
sbb
test
mov
xchg
insl
mov
lcall
xorb
xor
push
jb
movsb
stc
ret
jp
fs
mov
sub
sub
sbb
mov
cs
push
or
out
xlat
movaps
cmp
sbb
push
mov
and
popa
mov
push
stos
cltd
rolb
adc
pshufw
mov
js
or
inc
popf
dec
into
jae
das
jg
lea
ljmp
idivl
pop
pusha
in
loopne
sarl
std
sahf
push
mov
in
into
enter
stos
cmp
adc
lret
rorl
dec
jns
je
insb
push
mov
pop
hlt
mov
xchg
fistpll
dec
or
test
cmpl
cmp
sub
ret
fldl
xchg
mov
add
nop
iret
in
popa
mov
test
and
stc
cmp
ds
into
mov
in
stc
xchg
mov
pop
xchg
outsl
cmpsw
lcall
xchg
jge
shlb
adc
scas
push
shl
rcrl
push
jb
rcrb
sahf
shl
loope
jb
mov
xchg
lds
fnsave
lret
gs
lret
or
loop
xor
fiadds
outsb
lret
dec
xor
cmpsb
aaa
fdivrl
lret
mov
mul
icebp
fidivrl
fucomip
fistpl
rolb
push
fs
cmp
jg
fisubrs
dec
add
sub
fwait
das
inc
clc
and
jle
inc
or
mov
sub
in
jne
dec
and
push
jns
mov
or
pusha
adc
lock
cmpsl
sub
subl
outsb
xor
cmp
or
out
sub
test
xchg
sub
fwait
mov
pop
lcall
data16
divb
dec
cmp
dec
rolb
jl
lret
mov
mov
loope
cmc
icebp
push
scas
mov
inc
iret
lret
pop
mov
and
inc
inc
out
movsl
imul
daa
call
or
popa
jb
dec
addr16
xchg
pop
mov
repz
dec
stos
lahf
sub
add
icebp
loope
imul
fcmovbe
mov
je
mov
sbb
pop
out
movsl
xchg
mov
adc
xor
enter
hlt
out
pop
xchg
cmp
mov
jle
adc
push
fnstcw
xchg
sahf
add
push
mov
test
scas
cld
pusha
sub
out
cmpsb
jge
and
jo
lds
cmpsb
inc
or
in
push
rolb
adc
pop
lds
pop
pusha
xchg
push
lret
inc
xchg
out
daa
lock
mov
inc
out
pop
xchg
dec
pop
sub
jl
xchg
movsb
outsb
push
mov
out
cmp
jno
lret
testl
jne
xor
nop
cmp
xchg
sahf
aas
mov
popa
sbb
out
pop
add
bound
jne
push
jl
or
xchg
and
pop
mov
inc
and
lret
mov
jbe
js
mov
cmp
cmp
mov
sti
jge
addr16
xchg
icebp
xor
cwtl
ficomps
jns
mov
sahf
andl
xor
mov
inc
cmpsl
daa
lahf
daa
in
sub
cli
cmpl
adc
xor
mov
pop
sub
push
lcall
jns
into
jb
mov
repz
push
adc
dec
iret
mov
inc
iret
xchg
movsl
or
xor
lret
sbb
fisubrs
dec
in
fwait
mov
push
push
es
mov
fisubl
xor
mov
cmp
sub
pop
int3
dec
lods
sti
idivb
out
insb
push
and
xor
je
sbb
insl
cmp
jno
mov
jl
and
push
or
das
std
shrb
mov
pop
and
inc
sub
in
bound
je
out
inc
addr16
mov
and
sub
jmp
cmpsb
pushf
fdivl
sti
dec
inc
inc
cmp
dec
call
shlb
in
gs
sbb
or
xchg
lret
ret
lock
stc
sbb
in
clc
gs
xchg
mov
imul
arpl
push
insb
sbb
mov
sahf
ljmp
ljmp
sub
nop
lods
scas
call
dec
push
dec
mov
ret
mov
aam
mov
fisubrs
jle
out
loopne
out
inc
or
dec
movsb
inc
sub
not
add
out
outsl
pop
xor
jg
xorb
mov
data16
in
pop
pop
cmp
dec
addr16
xor
leave
shlb
dec
and
xchg
jns
mov
adc
in
fwait
shrb
xchg
xor
push
cmpsb
inc
stos
mov
add
ret
loopne
jmp
data16
jbe
lret
lods
push
int
ds
mov
adc
lds
cld
cli
dec
adc
fs
dec
test
lahf
arpl
cmpsl
ss
inc
xor
into
pop
sbb
addr16
ja
dec
adc
cld
aad
push
pop
push
lods
stos
movsb
into
push
xor
rolb
push
add
mov
sbb
out
adc
push
jge
dec
jae
scas
mov
ja
outsb
setno
inc
imul
xchg
out
lret
cmp
jbe
movsb
push
int3
mov
out
in
pushf
insl
inc
lock
and
mov
test
adc
pusha
neg
inc
sub
pop
shll
mov
in
sub
repnz
mov
nop
popf
xchg
mov
or
jecxz
xor
stos
bound
enter
fldt
hlt
sub
scas
fnstsw
xor
dec
fwait
jp,pt
xor
push
popa
stc
addl
std
sbb
lock
adc
cmp
aaa
xor
jb
loope
or
push
imul
xchg
mov
pop
cmc
dec
or
push
xor
in
test
lods
outsb
lret
pushf
sub
ds
pushf
mov
mov
pop
add
cmpsl
or
out
icebp
cmp
lock
jle
pop
test
xchg
pop
or
sbb
mov
adc
enter
or
in
push
cli
test
cmc
or
jns
inc
add
inc
fucomi
fisubrl
nopl
dec
into
lods
aam
pop
dec
jae
mov
mov
push
sti
imul
js
scas
addr16
movb
mov
adc
xchg
push
aam
repz
sub
cli
pop
xchg
movsb
je
pop
push
cmpsl
mov
xor
pop
jb
mov
in
pop
fisttps
out
mov
dec
test
xchg
aam
cmp
mov
subb
or
xor
std
call
js
push
xchg
xchg
shlb
sbb
lea
cmc
push
divb
sbb
push
lret
scas
sbb
stos
cli
push
pop
out
sub
xchg
test
mov
scas
adc
and
pusha
shlb
ja
repnz
push
in
push
jecxz
jmp
adc
sbb
adc
mov
mov
push
shrb
pop
pop
sbb
jb
pop
sbb
in
pop
xorb
mov
stos
loope
and
loop
jns
test
dec
mov
test
xor
mov
hlt
bound
mov
mov
and
jo
xchg
and
pop
in
cmpsl
jb
cmp
push
xchg
test
inc
sub
mov
add
push
jle
add
je
push
inc
dec
mov
mov
fistpl
mov
ss
hlt
cmpsl
sub
movsb
or
add
nop
inc
or
cmp
lret
dec
dec
lea
sarb
stos
cmpsl
jge
jbe
mov
add
and
pop
daa
mov
in
wbinvd
push
inc
leave
pop
jno
enter
pop
inc
push
cmp
cmpsb
fsubrp
insl
lea
adc
pop
inc
dec
and
lret
and
dec
mov
mov
aaa
popa
shrb
cld
sub
in
cmp
and
lcall
frstor
xor
and
dec
inc
rolb
mov
in
add
aam
rcll
mov
xor
sub
nop
sub
lahf
jl
jno
dec
scas
mov
aaa
sti
lods
enter
xchg
filds
or
frstor
es
cwtl
pop
in
xor
les
mov
xchg
jl
inc
ds
and
cmp
jbe
subb
cld
in
cmp
or
jge
mov
iret
test
insl
js
push
or
sahf
mov
xchg
leave
call
push
add
xor
and
rclb
mov
imul
std
aam
push
ja
gs
inc
aad
addl
add
pusha
or
inc
sti
outsb
and
or
lret
ljmp
mov
nop
sub
outsl
pop
mov
fnsave
sub
mov
sub
imul
ds
and
pop
mov
ja
aaa
push
sti
jp
mov
or
mov
mov
and
jne
les
test
jne
jecxz
gs
mov
xor
inc
cmpsb
add
sbb
pushf
lock
sub
inc
push
cmp
loopne
jp
js
fisubl
cmc
sub
incl
xor
je
pop
jnp
cmp
xchg
inc
cltd
lahf
roll
xchg
mov
push
mov
cmc
repnz
mov
push
add
dec
push
dec
daa
sub
dec
testl
aas
ret
xor
inc
fwait
push
pop
xchg
movsl
cmpsl
xlat
push
lcall
fistl
mov
ret
or
pop
and
mov
jp
mov
jle
rorb
ljmp
mov
outsl
pop
aad
fdivs
pop
lret
mov
inc
js
rolb
ljmp
sub
aam
lret
inc
xor
xchg
inc
ds
data16
rdtsc
push
out
aad
sahf
and
mov
cmpsl
pushf
imul
pop
dec
setl
cmp
dec
stc
mov
test
out
ja
outsl
push
inc
cltd
mov
sbb
mov
push
add
iret
sub
push
or
sarl
inc
sbb
push
mov
jl
aam
adc
ret
in
ss
push
cmpsb
mov
js
pop
in
mov
mov
mov
in
lock
sub
xor
inc
test
jg
mov
sahf
dec
cmpsb
mov
xor
inc
adc
inc
dec
or
dec
psubsb
scas
orl
test
ror
push
hlt
lock
pushf
pop
lods
or
inc
test
cli
push
add
mov
cmp
into
imul
push
int3
mov
shrl
xor
xor
out
mov
rorl
clc
scas
or
inc
mov
outsl
sub
push
in
gs
mov
cmp
scas
out
mov
adc
in
mov
pop
fsubp
les
out
mov
push
cmp
jns
jae
daa
inc
enter
adc
insb
lock
mov
outsb
test
sbb
in
mov
jmp
faddp
inc
pop
cmp
cwtl
jbe
mov
jb
xchg
ret
adc
dec
jl
or
imul
es
lret
enter
sbb
or
or
mov
add
or
pusha
fs
dec
jg
pop
lahf
push
fidivs
pop
lea
dec
push
mov
mov
ret
les
scas
sahf
jle
add
mov
adc
aam
or
addr16
push
call
sahf
clc
xchg
inc
inc
push
xchg
addr16
int3
push
add
aaa
or
xor
outsl
sbb
pop
jmp
add
dec
shr
cmpsl
xchg
or
xor
repz
xchg
dec
push
xor
ret
lret
mov
movsl
repnz
ffreep
call
imul
xor
repnz
test
push
movsl
mov
xchg
xchg
dec
sub
aam
out
dec
pop
js
lea
jl
mov
scas
add
sub
popf
aas
test
push
cs
pop
out
sub
lods
test
pop
decl
sbb
fistpl
fidivl
or
xor
inc
pop
cmp
push
fdivrl
mov
lock
and
jg
ljmp
dec
mov
pop
inc
out
cmp
daa
or
js
lea
arpl
adc
sbb
scas
aam
or
fs
imull
xlat
pop
fadds
mov
mov
dec
cwtl
dec
dec
inc
subl
stos
xchg
xor
decl
adc
adc
movsl
jge
mov
aad
jg
pop
jp
pop
or
mov
cmp
adc
rcrb
mov
and
jmp
insb
sub
sub
inc
cld
adc
xchg
cmp
fwait
hlt
stc
les
dec
sub
aad
cmpsl
imul
fistpl
pop
inc
mov
mov
jp
cld
out
cmp
fwait
inc
lret
std
jno
jge
call
xor
nop
push
out
xchg
addr16
out
jno
push
enter
jle
stos
data16
fs
sarl
xor
adc
ficoml
aaa
in
sbb
sub
cld
pop
add
xor
and
dec
outsb
dec
dec
cli
push
call
xor
xor
movsb
push
add
stos
jg
push
inc
jo
add
xchg
roll
cmp
ja
jp
out
mov
movb
ds
mov
mov
lock
mov
or
mov
push
out
pop
jg
xchg
push
dec
push
sti
inc
add
dec
mov
add
fsts
js
ret
call
scas
lcall
aam
sbb
dec
mov
push
rcll
mov
cmp
dec
inc
fisttps
adc
fcmovu
stos
cmpsb
sub
mov
push
int3
insl
sbb
xlat
dec
in
or
test
mov
jp
jo
pop
out
inc
aaa
sbb
stos
loope
lret
jae
int3
shrb
dec
insl
pop
cmp
mov
push
scas
jae
jbe
add
pop
jo
cmp
jmp
push
mov
mov
xlat
inc
dec
jno
jp
push
in
scas
inc
cmp
imul
rcrl
aam
enter
dec
sbb
dec
mov
xor
xor
mov
pop
pop
ljmp
and
cmpsl
mov
sbb
icebp
pop
dec
xor
fsubr
ret
jae
jno
mov
lret
sbb
test
inc
out
fcmovu
pop
jmp
rcrb
mov
inc
jae
push
stos
and
sub
or
cmpsb
lods
cwtl
xor
xor
dec
push
cmp
adc
addr16
outsb
repz
clc
jmp
xorl
or
shl
and
hlt
aad
outsl
dec
jmp
dec
sti
or
dec
jge
popf
mov
stos
dec
mov
xor
out
mov
sub
inc
hlt
repnz
mov
cmpsl
mov
test
sbb
lods
xchg
cmpsl
jae
pop
sub
jb
or
push
sbb
mov
scas
sar
sbbl
and
gs
jno
xor
imulb
pop
dec
mov
xchg
inc
mov
xor
xchg
push
mov
jg
pop
test
rorl
lods
stos
int3
push
sahf
cmpl
lcall
pop
loop
mov
pop
xchg
jnp
jno
fcmovnu
popa
pop
sub
scas
ljmp
test
lret
pop
jmp
cmp
mov
push
dec
push
push
cmpsl
or
outsb
loop
dec
mov
ss
pop
loope
pushf
loop
clc
push
imul
mov
mov
stos
mov
int
aaa
xor
jno
sub
insl
adc
cmpsl
lods
aad
lds
and
pop
push
aad
xchg
xor
faddp
outsb
call
mov
mov
jg
and
aam
push
lock
dec
data16
add
push
inc
stos
mov
in
push
sub
test
or
dec
mov
adc
inc
mov
imul
jge
push
fwait
xorb
addr16
rcr
sub
pop
sbb
adc
nop
mov
pop
sub
gs
fimull
test
and
add
mov
insl
sbb
mov
lret
pop
notl
mull
gs
icebp
mov
aaa
sub
cmp
ja
cs
in
insl
or
sti
jne
insb
cmp
popa
mov
notb
sub
icebp
mov
sub
sbb
jo
inc
int
sarb
mul
xor
dec
das
pushf
push
addr16
loope
daa
xchg
sub
xchg
jp
add
inc
sbb
hlt
int
dec
loop
es
ficomps
xchg
lahf
arpl
enter
jae
inc
test
push
jo
ja
out
gs
jb
xchg
pop
daa
in
sbb
sub
iret
jae
cmp
dec
pop
fldenv
dec
imul
stc
pop
outsb
lahf
data16
ret
adc
shr
mov
sti
adc
mov
sub
xchg
jmp
cmp
xorl
aaa
cld
popf
and
jb
push
into
cwtl
addb
fldenv
xchg
mov
cmovs
repnz
or
or
mov
xor
add
shlb
loop
pop
stos
push
scas
ret
fsubrs
data16
add
jp
movsb
mov
insl
mov
jnp
cli
mov
add
div
rcll
sub
fisubl
dec
es
add
pop
dec
lret
or
jbe
scas
sub
sub
ret
jb
add
mov
jnp
or
jns
pop
pop
sbb
test
xor
lea
ret
btr
movsl
insb
mov
test
push
es
pop
lcall
mov
pop
int3
cmp
and
ss
cld
rcll
rcll
jmp
sub
pop
rorb
inc
movsl
pop
movsl
mov
xor
mov
ja
sti
jno
jno
out
xchg
loope
push
xchg
loope
loopne
mov
into
movsl
mov
leave
or
jl
lret
lcall
mov
sarl
jl
mov
loopne
out
push
cmpsb
pop
sahf
insl
fsts
jnp
xchg
aad
or
pop
mov
das
mov
dec
dec
repnz
xor
dec
mov
push
add
pop
fwait
jb
je
into
jge
lahf
mov
rorl
jne
mov
pop
leave
jmp
push
mov
iret
xchg
or
mov
pop
in
push
inc
fs
jl
mov
dec
roll
scas
roll
gs
sbb
jns
movsb
bound
xchg
daa
clc
pop
in
jmp
or
dec
jnp
pop
movb
xchg
adc
and
fdivl
jbe
stos
push
pop
cmp
pop
bound
xchg
nop
js
mov
adc
repz
add
ret
jb
enter
mov
and
sub
and
or
xchg
jg
lds
mov
mov
jle
jecxz
dec
add
testb
ror
pop
xor
loope
xchg
cmpl
js
pop
pop
or
push
xor
test
ds
fcmovbe
stos
ret
cmp
mov
lock
loopne
ss
outsb
mov
push
xchg
jg
pop
sbb
mov
mov
sbb
ret
pop
mov
xchg
js
inc
bound
aaa
add
push
mov
mov
xchg
cld
sbb
icebp
or
subl
xchg
adc
push
fwait
sub
push
out
mov
sub
imul
jne
rcll
clc
pushf
outsb
xor
icebp
movsl
pop
sbb
sbbl
iret
mov
les
xchg
cmp
leave
fdivrs
and
imul
ret
xchg
mov
arpl
jecxz
add
test
mov
cltd
pop
sti
sbb
cld
mov
jo
movsb
and
js
push
xor
jl
push
dec
jae
sbb
test
mov
or
adc
test
loop
xchg
repz
das
ljmp
out
mov
rcrl
out
sbb
sbb
jl
mov
xchg
out
push
out
push
lds
pusha
test
jb
mov
add
sbb
repnz
or
addr16
lock
add
xchg
inc
popa
jg
rolb
test
dec
or
int
addr16
sbb
dec
test
sbb
cli
xorps
jae
lods
add
or
rolb
pop
vmwrite
out
jbe
jns
xchg
nop
lret
adc
scas
push
push
in
lcall
mov
cmp
inc
xchg
xchg
and
push
sub
data16
sbb
cmp
mul
pop
and
bound
out
add
jmp
fisubrl
cmpsb
push
ret
sbb
cmp
mov
movsb
xlat
cld
cli
out
jne
mov
push
enter
aas
xchg
cmp
enter
lahf
rorb
xchg
aas
jle
sub
inc
test
mov
or
cs
cmc
cmp
jle
push
xchg
insl
sub
cld
mov
mov
int
inc
sbb
cmp
push
lret
cwtl
jl
adc
adc
cmp
cmpsl
sub
call
out
fs
or
jae
les
in
data16
xorb
xor
js
movsl
dec
xchg
sbb
xor
stc
mov
outsl
addb
add
js
add
iret
pop
mov
sbb
pop
imul
adc
out
add
into
mov
repz
xchg
flds
sarb
xor
push
roll
xor
mov
out
arpl
stos
mov
cmp
mov
xlat
fldl
int3
add
inc
pop
push
ret
mov
dec
jo
nop
scas
inc
xchg
in
push
push
push
pop
jns
adcl
xchg
test
stos
cmp
insl
aaa
and
loop
rorb
stc
mov
or
notb
push
outsl
out
cli
test
dec
jecxz
cwtl
stc
xchg
mov
sub
mov
xor
xlat
arpl
popa
inc
faddl
xor
addl
cmpsb
sbb
add
iret
xchg
fidivl
jg
push
std
call
in
es
xchg
clc
jg
mov
jnp
or
popf
loop
repz
shl
lret
call
leave
and
out
rorl
loopne
icebp
push
aas
jge
insb
cmpsb
sub
test
nop
icebp
sbb
cmp
sahf
cmp
test
icebp
jmp
js
push
dec
mov
icebp
inc
mov
xchg
inc
out
adc
push
call
add
sbb
lret
sub
aad
xor
cmp
inc
add
mov
test
inc
imul
fucom
loope
xor
pop
into
das
in
mov
xor
xchg
mov
add
dec
repnz
daa
pop
loope
add
shr
test
inc
xlat
in
xor
dec
mov
pop
adc
jo
repnz
daa
stc
cmp
ja
std
roll
cmpl
dec
add
and
popf
sub
push
push
mov
dec
insb
inc
sub
pop
xor
push
adc
add
cmp
in
cltd
aaa
push
mov
test
shlb
mov
pop
add
jno
adc
mov
cmp
add
sahf
and
enter
sub
jp
jp
mov
mov
jg
aas
pop
adc
mov
and
clc
cli
inc
push
pop
ss
gs
icebp
inc
lcall
jno
inc
xchg
lret
leave
pop
test
push
mov
sarl
repz
gs
push
das
stc
add
cli
mov
jecxz
aam
stos
cmp
orb
out
ja
xorb
add
aaa
and
xorl
adc
pusha
jne
aad
dec
push
insb
or
ljmp
or
shll
das
push
pop
clc
fsub
add
gs
pop
subps
mov
orl
sbb
scas
cltd
into
mov
adc
xchg
sar
adc
sahf
imul
clc
and
in
adc
ficoml
lret
popf
pop
dec
orl
scas
lret
ret
insb
xchg
jo
in
rcl
xchg
xor
mov
jecxz
fstpl
lcall
mov
aad
hlt
mov
xchg
lret
fisttpll
pop
test
sbb
xchg
pop
ds
or
add
rorb
int3
daa
shl
fs
aam
imul
cmp
sahf
notb
divl
pop
cmp
adc
out
divl
mov
jns
jg
in
cld
in
pop
mov
sahf
in
adc
mov
sarl
mov
iret
adc
adc
out
movsb
fcompl
mov
arpl
subb
int
adc
ljmp
call
rolb
imul
outsb
mov
enter
mov
sahf
lods
cmp
lods
cmp
lret
into
and
adc
push
sub
sbb
pop
fisttps
cmpsl
xorl
out
xor
data16
push
outsl
loopne
xor
cmc
push
data16
xchg
fistpll
das
or
or
mov
ret
adc
pop
cld
push
gs
ljmp
aad
adc
jl
rcrl
push
inc
imul
xor
mov
test
mov
add
xor
jmp
cld
push
cmp
sub
push
push
pop
test
pop
push
jp
in
imul
ljmp
or
pop
jecxz
jle
mov
ret
lods
xor
fs
cmp
addr16
mov
testl
bound
jns
inc
sbb
add
push
inc
cmp
mov
mov
rolb
js
rorb
stos
icebp
xor
pop
lods
sahf
jnp
mov
inc
insb
stc
jp
in
fimuls
xchg
add
xlat
xor
arpl
in
sub
mov
mov
inc
or
cmp
xorl
loop
nop
pop
addr16
lods
jbe
push
cmp
inc
adc
push
nopl
jno
je
decl
pop
jecxz
mov
hlt
push
or
ljmp
call
dec
pop
into
xor
adc
scas
add
jb
stos
test
cmp
xchg
lock
mov
aas
lods
add
popa
rcl
mov
mov
add
inc
mov
pop
push
call
sbb
xchg
es
outsb
xchg
cmpsb
inc
outsl
mov
and
mov
mov
jmp
loop
dec
xor
movsb
fcmovnb
jo
out
mov
mov
sbb
jbe
cltd
jne
mov
inc
mov
imul
and
lret
dec
cmpsl
adc
pusha
sub
push
ljmp
aad
xchg
push
stc
repnz
lods
sti
pop
cmc
pop
cmpsb
scas
mov
loop
xchg
mull
adcb
push
push
pop
and
jno
mov
sbb
pop
pushf
mov
sbb
or
inc
pusha
lock
out
mov
cmp
sub
das
or
adc
xchg
int
cmpb
xchg
lahf
sub
ss
dec
jmp
mov
mov
loope
movsl
and
jae
jne
shll
ljmp
das
loopne
inc
inc
in
add
xchg
jns
dec
sub
pop
int3
mov
iret
mov
jno
and
cmp
mov
lahf
and
cmpb
xchg
aam
ret
push
testb
icebp
mov
pop
and
mov
or
push
mov
jge
xchg
add
push
or
jnp
push
mov
je
mov
jl
mov
scas
fisubs
mov
rcrl
add
sbbl
xchg
repnz
pop
divb
jle
ret
mov
push
fs
dec
xchg
dec
into
and
test
xchg
aaa
and
lock
dec
push
add
in
sub
adcb
ror
mov
sbb
sbb
push
cmp
ja
cwtl
jb
std
fstl
cmpsb
dec
in
mov
dec
jae
push
xchg
xlat
mov
push
dec
mov
sbb
sbb
push
mov
mov
jle
and
jbe
in
sti
cmpsl
jns
repz
fadd
je
mov
fldenv
xchg
test
fidivrl
dec
mov
mov
jbe
dec
lahf
stc
ret
repnz
mov
test
sub
lock
dec
fsubs
xchg
mov
mov
xchg
mov
mov
inc
outsl
in
sahf
sbb
mov
jno
daa
xor
and
mov
inc
mov
or
pop
notl
and
jb
rolb
orl
inc
hlt
jmp
stos
in
xchg
out
loopne
adc
aad
test
mov
inc
xchg
push
pop
inc
shrl
mov
xchg
sub
and
jmp
je
fimull
out
call
shll
jae
cmp
jmp
pop
orb
lahf
pop
out
xor
adc
lret
stos
loopne
jno
daa
fstpl
push
repz
fs
xchg
lods
out
adcl
in
mov
clc
dec
in
inc
sbb
dec
scas
in
pop
mov
leave
push
inc
cmp
hlt
mov
aam
xor
int3
aad
dec
fisttpll
sub
aam
sarb
or
adc
scas
mov
jae,pt
and
cmp
ds
mov
cli
fbstp
addl
sahf
adc
rep
test
adc
and
push
dec
cmc
test
lcall
call
inc
cmp
outsl
test
or
repz
adc
mov
xor
movsb
pop
adc
cmc
mov
or
in
mov
inc
aas
int
push
fwait
add
popa
notb
add
ja
add
cwtl
dec
push
mov
addr16
push
cli
xchg
das
sarb
pop
mov
pop
xchg
cs
cmp
mov
inc
or
clc
push
mov
xchg
subb
fcompl
mov
push
mov
dec
jmp
mov
mov
sub
push
popa
push
cs
jecxz
or
xchg
mov
adc
pop
pop
lea
das
or
fisubrs
cmp
mov
push
cmc
stos
daa
andb
mov
add
sub
mov
out
in
clc
push
inc
xchg
adc
lock
flds
repz
stc
xor
mov
mov
lcall
pop
adc
mulb
add
addl
pop
mov
fucom
inc
mov
push
mov
xor
ret
mov
pop
xchg
mov
cwtl
stos
xor
mov
mov
cwtl
rclb
js
in
push
sbb
or
iret
in
mov
js
insl
xchg
lds
ss
inc
mov
dec
pop
nop
clc
data16
inc
mov
mov
xchg
pushf
xchg
or
push
jbe
fisttpl
inc
test
adc
test
or
orl
inc
outsb
das
daa
fstpt
mov
pop
push
js
xor
out
je
pop
sahf
gs
mulb
sub
leave
daa
xor
cmp
dec
ret
inc
or
jns
loope
test
or
xchg
or
mov
xchg
out
dec
aam
decl
in
roll
pop
push
imul
mov
scas
in
push
jg
pushw
clc
fsts
mov
subb
sbb
pop
fwait
push
inc
hlt
clc
pop
addr16
dec
jae
ljmp
gs
mov
outsb
or
xor
sub
push
pop
jmp
mov
mov
sub
stos
cmp
xchg
sbb
push
test
pop
mov
mull
addr16
cmpsb
pop
xchg
fisubl
jb
out
push
insb
pop
aam
mov
mov
ds
mov
pushf
mov
leave
mov
inc
pop
mov
js
push
push
xchg
pop
cmpsb
and
sbb
ljmp
jbe
imulb
dec
aad
nop
or
into
sbb
jmp
xchg
add
ss
push
enter
stc
ja
test
dec
and
cmpsl
sbb
and
dec
jmp
gs
push
test
adc
push
push
sbb
cmp
call
pop
int3
mov
ljmp
mov
jne
jmp
test
enter
insb
mov
or
xor
andl
xlat
test
inc
fisubrl
jo
or
pop
xchg
sbb
cmc
sub
inc
or
xorl
aaa
jo
sub
jge
stc
insl
sbb
inc
inc
mov
negb
push
cmpsb
push
mov
ja
xor
call
fstpl
mov
mov
mov
push
mov
lea
ljmp
lods
cmp
cmp
in
jl
jb
ret
jge
and
fsubrl
dec
jnp
lock
jmp
sub
mov
push
mov
push
fstpl
xchg
push
aam
xchg
hlt
dec
daa
pop
mov
or
dec
xor
sbb
bound
dec
push
sbb
mov
inc
mov
lods
js
inc
inc
xchg
add
cmp
ja
inc
jne
test
adc
dec
adc
stos
mov
das
add
jnp
rolb
xchg
add
loop
mov
popf
mov
arpl
jmp
pop
add
repz
jmp
mov
and
ss
movsl
icebp
mov
daa
adc
ret
call
push
push
daa
out
pop
push
sti
je
mov
xor
outsl
or
mov
pusha
or
push
add
push
mov
xlat
mov
in
sub
or
sbb
andl
leave
out
pop
cltd
imul
push
add
jbe
jp
ret
xor
stc
in
inc
sub
lret
ret
lea
enter
popa
push
fxch
ret
nop
mov
adc
fs
pop
fs
pusha
jo
adc
xlat
adc
stos
pop
enter
xor
push
mov
iret
cmp
fwait
inc
jne
mov
aaa
or
sbb
jmp
cmp
jg
push
jl
or
jno
cmc
sbb
stos
pop
clc
pushf
pop
outsb
imul
inc
push
mov
add
jns
or
mov
pop
add
cltd
cli
pop
pop
mov
aas
js
push
cmpsl
dec
fwait
enter
sub
pop
xor
push
sub
add
or
nop
jno
stos
dec
ja
bound
repnz
cmpsb
dec
call
pop
mov
in
mov
leave
aas
jae
push
loopne
mov
jb
insb
inc
add
jbe
dec
popf
mov
repz
adc
bound
cmp
or
pop
inc
xor
lods
jmp
cmp
mov
mov
negb
push
mov
and
xor
int3
jae
pop
sarb
daa
jnp
outsl
mov
imul
add
jmp
sbb
clc
gs
bnd
les
mov
adc
and
int3
adc
mov
lods
imul
rorb
hlt
mov
pusha
fidivrs
jne,pn
fdivrp
dec
cmpsl
jmp
mov
imul
cli
add
jns
enter
data16
movsb
aaa
pop
sub
std
add
int3
jbe
pop
sbb
sahf
xor
into
sub
out
sbb
sub
fdivrl
outsl
jmp
dec
fidivl
cmpl
jno
cwtl
cld
sahf
jo
mov
movb
push
mov
lea
addr16
add
mov
in
das
mov
push
mov
inc
addr16
cmc
sub
mov
fstpt
int3
add
mov
daa
pop
rcl
mov
pop
pop
jno
pop
lret
jmp
add
mov
arpl
mov
lds
dec
pop
sbb
xchg
cmp
fnstsw
dec
fwait
out
inc
stos
adc
into
push
dec
and
test
dec
inc
push
test
pop
xor
out
scas
in
mov
notb
outsl
gs
sti
jae
mov
ja
lock
mov
jmp
in
push
adc
pop
cmpsb
add
mov
outsb
lret
and
ja
inc
push
mov
push
mov
push
ljmp
mov
push
sbb
fstps
dec
mov
push
and
jno
mov
adc
push
les
mov
xchg
shl
repz
or
addr16
mov
xor
dec
cmp
mov
sbb
je
and
test
lds
cli
jmp
movsb
dec
stos
pop
out
outsb
xchg
mov
mov
in
xor
cmp
ds
jbe
jg
and
or
push
lret
sbb
leave
mov
mov
outsl
sbb
icebp
and
cwtl
pop
and
test
es
sub
xor
lahf
aas
add
adc
aaa
gs
outsl
cmpsl
jno
in
out
push
addr16
pop
mov
rcrb
int
cwtl
sbb
jle
push
aas
xchg
int
in
adc
pop
ficompl
mov
cmp
mov
pop
cmpsb
jg
pushf
mov
scas
jno
rcrb
aad
out
mov
push
lds
test
cwtl
lcall
mov
repz
and
inc
insb
mov
add
cmp
cmp
popa
sbb
jb
mov
and
xorb
cmpsl
cld
out
lret
xchg
pushf
pop
push
daa
int
fistl
sub
loope
scas
ret
out
sbb
aaa
jecxz
pushl
outsl
aad
lea
arpl
movsb
cmpsb
movsl
frstor
xchg
push
jle
mov
or
mov
gs
test
push
fisttpl
jp
jnp
dec
sbb
popf
ret
sbb
leave
inc
xor
mov
lods
cmc
dec
pop
cli
cwtl
insb
and
int3
and
pop
movl
sub
and
xlat
lcall
push
mov
cmp
mov
xchg
mov
cmp
in
dec
xchg
fwait
jg
idiv
cmpsl
cltd
mov
out
es
jge
scas
pcmpgtb
aaa
subl
xchg
loopne
push
fsubrs
mov
aam
and
xchg
mov
add
cs
push
xchg
sub
jb
insl
addr16
faddp
lcall
stos
dec
sarb
dec
jnp
outsl
fsubs
vmovdqa
subl
cltd
cmp
loopne
xchg
mov
mov
lea
jno
std
dec
in
xor
xchg
mov
rcrb
dec
je
mov
or
adc
push
je
outsb
xchg
filds
ror
xor
pop
push
cmp
nop
dec
add
lock
jae
mov
push
sub
dec
ret
add
inc
fsubs
cld
fisubrs
adc
bound
sbb
sub
gs
push
xor
pushf
sub
inc
fwait
sbb
mov
xlat
mov
dec
mov
mov
adc
fwait
cmp
sub
add
andl
pop
or
and
aam
sub
addr16
lds
lret
cld
testb
cmpsl
xlat
movsl
cmpsb
dec
xchg
aam
jae
test
imul
loop
int
out
aad
jecxz
les
push
stos
std
out
mov
adc
mov
mov
mov
test
andb
jge
movsb
pop
stos
bnd
xchg
mov
mov
inc
mov
arpl
loop
add
add
rorl
dec
js
push
dec
mov
mov
cmp
sti
pop
ljmp
inc
dec
lods
imul
lcall
adcb
sbb
dec
xchg
call
bound
jmp
push
and
inc
shll
imul
inc
pusha
loopne
adc
sarl
mov
rclb
push
gs
push
or
add
std
imul
inc
push
les
or
inc
mov
and
call
popf
push
rcrl
int3
pop
fnstsw
inc
mov
xchg
fdivrl
pextrw
sbb
lock
es
popa
sub
scas
es
ret
jns
adc
mov
inc
fucomip
ret
xor
popa
faddl
pusha
je
call
fiadds
sahf
das
stos
icebp
jl
data16
mov
ror
sub
clc
push
sbb
leave
jmp
ficompl
or
cmpsl
loope
xchg
adc
test
fnsave
ret
sub
jle
jnp
int
xor
das
gs
in
dec
add
pop
ss
dec
testl
pop
jp
xchg
mov
bound
pop
into
rol
nop
mov
cltd
push
stos
lds
mov
xor
imul
imull
movsb
inc
and
fdivl
push
cmp
adc
add
add
mov
das
lock
push
movsl
call
cli
lods
mov
out
jno
sti
ret
in
sbbb
mov
push
out
dec
std
mov
cltd
mov
mov
push
pop
outsl
arpl
testl
add
fnstenv
push
ja
int3
aam
sti
jno
gs
insl
hlt
inc
sbb
aad
xorl
clc
in
pusha
xor
mov
pop
inc
frstor
into
mov
jno
sbb
xor
cwtl
sub
inc
movsb
adcl
fbld
mov
xor
and
mov
js
cmp
jp
pushf
sar
lret
adc
sti
adc
fadd
jg
bound
test
add
or
int3
movsl
cli
sarl
ret
dec
ljmp
out
and
push
cmpsb
fimull
test
addb
ja
je
jmp
mov
jl
dec
mov
pop
fidivs
adc
add
inc
cli
or
rcll
decl
mov
mov
dec
sbb
mov
imull
fdivrp
jmp
sahf
sub
mov
push
inc
pop
sub
les
jmp
sub
pop
or
mov
lahf
pop
lods
jae
bound
cmp
testb
add
rclb
loopne
pop
ret
fnsave
inc
mov
lock
and
scas
fcos
sahf
rcll
popf
dec
or
push
cmp
push
insb
pusha
gs
arpl
xor
outsb
xchg
jae
fildl
loop
dec
push
jno
mov
add
or
loope
lods
add
ss
imul
pop
xor
mov
imul
fidivrl
mov
and
in
cmp
orb
add
adc
push
xor
adc
ja
test
xchg
out
mov
sbb
cmp
inc
lods
mov
lcall
add
pop
cwtl
cmp
out
sahf
dec
or
popa
sub
insl
jle
mov
lock
leave
xchg
sbb
add
jno
fsubrs
adc
loopne
mov
movsb
jo
fsubrs
jnp
mov
push
mov
loope
loopne
jecxz
pop
or
out
push
pop
ja
loope
xchg
jl
or
ffree
jmp
jmp
jbe
loope
dec
add
and
outsl
punpckhdq
test
jecxz
addr16
cmp
add
sbb
jp
icebp
jnp
pop
pop
pusha
inc
mov
push
cltd
fists
outsl
rcll
cmp
aas
les
nop
xchg
cld
push
jmp
pop
pop
or
jle
sarb
lods
in
shlb
push
mov
mov
dec
push
push
movsl
jp
aad
jecxz
out
pop
mov
xchg
jns
fldenv
pop
mov
imul
jno
dec
push
out
xor
gs
pop
push
mov
or
cmp
sarb
inc
dec
test
arpl
int3
pusha
sbbb
in
dec
lret
orl
mov
insl
mov
in
out
xchg
mov
je
sub
adc
in
jp
jp
lcall
adc
lock
aaa
inc
adc
mov
xchg
push
lcall
xor
sub
sar
jle
imul
adc
xchg
test
inc
out
mov
adc
add
stos
xorl
jle
into
ss
pop
popf
stc
and
and
mov
xor
mov
cmc
inc
roll
loope
push
lods
aam
and
nop
out
addr16
int
mov
data16
xchg
cmc
lods
pop
mov
ss
mov
fiadds
fdivrl
xor
shll
pop
scas
fcoml
mov
pusha
xchg
mov
outsl
or
incb
outsl
sub
aam
fisubs
adc
outsb
xchg
dec
push
adc
pop
jne
out
adc
fsubs
jnp
fstpl
pop
das
inc
push
xor
jbe
cmc
pop
push
inc
pop
fwait
mov
movsb
orl
push
jmp
mov
push
cs
loope
pop
dec
jmp
gs
pushf
and
cltd
adc
mov
or
jb
or
cmp
jae
addb
push
lcall
in
loopne
cmpb
push
mov
add
and
pushf
jae
cli
push
dec
aas
repnz
call
sbb
clc
cmpsb
push
and
cs
pop
es
aas
in
stc
and
call
dec
mov
aad
test
test
leave
mov
jg
or
aas
and
or
push
loope
dec
or
jle
int3
adc
push
sbb
scas
sub
push
fidivl
cmp
sbb
adc
scas
arpl
lods
jg
out
inc
cmpsl
fmuls
icebp
push
mov
push
cmp
adc
adc
cwtl
popf
sbb
cmp
ja
jg
xchg
xor
jecxz
jmp
jo
sahf
or
addb
dec
mov
mov
pop
jle
cli
fimull
cmp
cmp
dec
insb
aad
movsl
sbb
xchg
xchg
dec
or
scas
push
sbb
dec
mov
adc
or
dec
popa
bnd
sbb
dec
inc
add
jbe
loop
mov
fwait
insb
xor
xchg
push
test
mov
dec
jl
mov
test
push
or
jp
faddl
rcll
and
dec
neg
out
add
jnp
jg
jne
pusha
leave
adc
not
sbb
dec
push
push
mov
addl
push
nop
lock
popf
push
jne
ret
cmp
bound
pop
out
imul
movsb
dec
popa
es
ja
or
fdivr
cmp
mov
leave
xchg
mov
add
cmpsl
adc
mov
fwait
maxps
pop
push
push
bound
sub
pop
aam
repnz
push
fnstenv
cmp
add
aas
fcomp
inc
cwtl
fldt
sbb
mov
xor
lcall
decl
loope
scas
xchg
insb
imul
push
subl
mov
cmp
mov
popf
xchg
loop
dec
scas
out
sbb
pop
stos
and
xor
xchg
and
nop
cmpsl
pop
and
mov
mulb
imul
iret
in
clc
out
adc
loope
mov
sbb
in
dec
andb
xchg
xor
push
lds
rol
es
sbb
dec
adc
jp
cmp
pop
cmp
push
mov
ss
sub
or
add
mov
xchg
popa
push
loope
clc
mov
pop
jb
lret
jmp
ret
daa
clc
jl
xor
in
adc
pop
mov
add
call
or
dec
add
xchg
mov
adc
test
fs
cmp
push
fistpl
movsb
int
sbb
mov
push
outsl
adc
push
mov
outsb
xchg
mov
enter
test
loop
pop
push
push
mov
pop
ds
and
pushl
adc
fldt
inc
ldmxcsr
lret
fisubrl
testb
les
out
dec
daa
xor
das
sub
add
pop
dec
fwait
cmpsl
dec
xchg
ret
push
pop
sub
cmp
xor
and
xor
fcoml
movsb
outsb
int
jmp
aam
xor
mov
push
clc
jg
das
clc
rol
popa
es
xor
jns
ds
fwait
mov
addr16
mov
jo
in
in
mov
popf
jne
sbb
adc
sub
gs
mov
sbb
add
mov
pop
mov
adc
rcl
nop
stos
ficomps
mov
out
jge
and
scas
mov
scas
mov
sti
sub
cli
mov
stos
inc
es
pop
mov
lods
das
cmpsb
loope
and
ret
out
pushf
add
jle
loop
and
sti
mov
out
mov
xchg
mov
loope
mov
scas
add
negl
add
pop
fdiv
lock
movsl
fdivs
mov
fistl
dec
aam
mov
sti
sti
sbb
cmp
mov
sub
mov
test
mov
add
pop
mov
pop
cs
idivl
inc
xchg
add
lea
adc
mov
incb
outsl
jnp
dec
add
loope
or
rcr
divl
ret
cmp
add
cli
sub
sbb
add
and
lret
adc
out
roll
cwtl
xchg
pop
mov
push
mov
dec
mov
scas
pop
mov
sbb
and
mov
pop
jns
sbb
pop
movsb
sub
sbb
sbb
jae
sub
dec
push
cmp
fs
push
or
loope
inc
movd
jns
push
in
pop
outsl
or
pop
cmp
addb
popf
std
mov
mov
push
cld
daa
ret
iret
push
out
mov
add
mov
mov
jle
lret
fildll
lret
rol
jb
add
es
jle
push
mov
pop
pop
imull
repnz
sub
mov
jle
fwait
mov
jle
pushf
negb
mov
stc
cmp
fisttpll
rcrl
lea
pop
jo
pop
mov
enter
ss
jns
adc
imul
leave
cwtl
sti
cmp
or
jae
and
mov
push
mov
sub
test
cmp
int
mov
data16
lods
aad
inc
int
outsb
dec
cmp
mov
sub
or
repnz
mov
sub
cmovs
xchg
addb
xorb
xchg
mov
jns
popf
outsl
push
lock
mov
dec
mov
lods
sbb
shll
sbb
sub
iret
pop
push
add
sbb
mov
sarl
mov
xor
aad
cltd
or
popf
mov
xor
sbb
pop
pop
mov
push
inc
jae
clc
cmp
insb
lret
sub
sbb
ss
sub
add
or
adc
aas
sbb
pop
bound
lods
push
fxch
inc
inc
inc
mov
lock
in
in
gs
jns
inc
lock
xor
sarb
jo
dec
sbb
jno
inc
mov
loope
rcrb
jmp
xchg
and
test
testb
mov
xchg
add
and
stc
dec
pop
inc
mov
cs
add
imul
shl
and
mov
push
and
inc
bound
out
or
inc
int3
xchg
fisubl
xor
add
lock
mov
mov
sbb
adc
push
mov
leave
test
cmc
mulps
and
mov
sub
xor
push
lods
addr16
pop
pop
in
imul
xchg
imul
popa
int3
xor
jecxz
cmp
sub
cmpsb
push
ja
gs
pop
popf
jbe
adc
and
pop
mov
arpl
outsl
and
mov
mov
mov
mov
mov
xor
mov
adc
add
or
in
jge
popa
jle
adc
inc
notl
daa
cmp
popf
lods
leave
push
out
out
test
sub
ret
mov
mov
jae
add
mov
test
test
xor
test
xchg
pop
xlat
enter
bound
adc
jle
push
fisubl
rclb
cld
add
les
push
lods
ret
stos
and
mov
pusha
mov
or
xchg
pushf
or
lret
pop
jo
inc
sbb
adc
jle
adc
or
movsl
sbb
fwait
in
push
out
lret
aam
int3
xchg
lcall
mov
and
push
aas
jb
je
jg
push
clc
push
nop
inc
cmpsl
bound
aas
push
es
aad
sahf
pop
mov
add
xchg
ret
ds
pop
mov
fsts
xor
push
ljmp
or
sbbl
jae
insl
sub
cmc
lcall
scas
sahf
xchg
das
or
popl
fwait
js
stos
push
add
sbb
or
dec
in
jl
aas
stos
cmp
ljmp
data16
dec
xchg
clc
clc
adc
add
add
ds
xchg
fidivl
cs
inc
mov
outsb
mov
leave
das
pusha
mov
stc
gs
cmp
mov
jnp
jno
push
in
inc
sub
mov
cltd
adc
add
push
xchg
cs
adcl
rcll
push
mov
jns
insl
cs
repnz
adc
icebp
xor
dec
cmpsl
pop
cmp
mov
sbb
repz
lock
aaa
adc
lock
js
daa
and
clc
pop
mov
jbe
xor
loop
outsb
hlt
sbb
push
out
push
cmpsb
adc
ljmp
push
aaa
popf
lcall
inc
mov
push
jno
xor
lret
pusha
mov
out
xor
jl
xlat
aam
dec
subb
jns
xchg
test
jb
rclb
test
adc
jnp
rorl
div
popa
sbb
xchg
movaps
mov
add
in
adc
jne
daa
jo
aaa
test
mov
mov
mov
and
xchg
jp
popa
out
rclb
in
or
stos
shl
fcompl
aam
andl
pushf
push
pop
iret
scas
mov
sub
and
pop
mov
jo
dec
test
mov
movb
sbb
push
sub
mov
push
xchg
cli
add
rcl
lret
push
add
add
mov
push
scas
cli
adc
cmp
loop
cmp
push
fildl
jo
cmp
mov
outsl
js
test
stc
cmpsl
notb
notl
jg
frstor
push
outsl
xchg
insb
adc
push
jge
push
repnz
adc
idivl
xchg
cmp
inc
scas
xchg
push
jge
sbb
out
stc
xchg
aas
lods
xor
fwait
mov
fs
cwtl
xor
icebp
adc
push
xchg
xchg
push
xchg
cmp
dec
adc
or
repnz
sub
cmp
ror
out
push
adc
daa
cltd
out
movsl
imul
pop
push
or
cmpsl
repnz
incb
cmp
data16
imul
stos
fbld
mov
xorb
out
scas
lahf
jno
rorb
test
lcall
nop
mov
jmp
or
lods
es
jle
scas
shlb
loope
pop
mov
test
mov
jbe
pop
pop
popf
mov
and
mov
xor
fildll
aad
ret
cmp
data16
fwait
je
xorl
outsl
xor
push
push
das
dec
popa
pop
imul
and
mov
sti
sbb
hlt
inc
sti
lret
xchg
or
gs
mov
xchg
out
mov
add
jne
mov
out
ja
push
mov
push
or
inc
dec
sub
xlat
sbb
es
movsl
movsl
jle
pop
push
fcomip
cwtl
sub
inc
mov
add
stos
or
push
test
pop
js
leave
adc
mov
mov
pop
in
xchg
lcall
add
mov
fwait
sub
test
lea
xchg
push
sbb
enter
aas
imul
xor
sahf
cmp
pop
inc
insl
out
sar
data16
jle
sub
sub
or
jbe
xor
fimull
loope
aaa
sbb
xlat
mov
out
inc
outsb
imul
loope
and
or
mov
insl
out
inc
int
sub
cli
pop
movsl
mov
jb
pop
test
pop
adc
nop
fsubrp
loopne
out
mov
mov
push
ret
pusha
not
das
outsl
xchg
xchg
out
hlt
ds
adc
push
insb
inc
push
je
cltd
jmp
ret
pop
sub
sub
sbb
gs
es
xor
mov
mov
inc
xor
cmp
lods
push
int
push
out
add
mov
pop
aad
inc
sub
and
or
xchg
mov
jl
sbb
je
pushf
cmp
jae
jmp
pop
and
fdivrs
icebp
notl
jb
int3
fxch
cmp
mov
test
mov
xor
fdivrs
pop
stos
rcrl
lods
mov
lret
inc
outsl
mov
jnp
pop
jl
stc
fwait
xlat
pop
das
push
pusha
mov
adc
cmp
es
lods
daa
dec
or
cmp
or
xor
pop
cld
fisttpl
pop
adc
test
pop
adc
lahf
out
sbb
fistps
insl
or
adc
fwait
adc
dec
cmpb
pushf
mov
mov
mov
aad
jg
mov
xchg
mov
ret
lret
rcrl
mov
adc
jo
push
push
adc
push
inc
mov
lods
dec
jae
in
xchg
jb
adc
imull
jmp
fnstcw
imul
stos
clc
and
pop
pop
popa
dec
xor
out
pop
mov
and
inc
or
adc
jno
lods
shrl
pop
mov
scas
insb
shlb
mov
mov
sbb
out
or
sub
fiadds
aad
dec
xor
faddl
dec
mov
lcall
test
sbb
in
inc
dec
pop
fcompl
lods
pop
ja
dec
dec
xchg
pop
add
xor
addb
inc
in
mov
es
jp
sbb
clc
dec
popa
mov
jg
ja
mov
adc
sub
mov
mov
dec
sub
jbe
mov
daa
and
outsb
add
out
jbe
call
add
adc
mov
rcl
scas
dec
repnz
cmp
xchg
push
lods
and
out
sbb
ds
adc
push
mov
subl
xor
pop
dec
mov
add
jmp
cmp
inc
jb
push
mov
sub
repnz
in
repz
clc
jge
nop
xchg
pop
jge
fnstcw
in
fstpt
xchg
add
aaa
jg
lret
mov
or
jecxz
and
push
lock
popf
dec
dec
test
push
movsl
push
icebp
lods
pop
mov
adc
mov
sar
stos
cmpl
mov
rolb
cmp
divl
sbb
add
inc
lret
add
loop
inc
mov
scas
push
and
push
pop
adc
sti
pop
jmp
lret
lds
sbb
out
jle
pop
dec
jb
cmc
mov
gs
dec
hlt
imul
push
hlt
int3
dec
stc
cmp
les
adc
jmp
jno
aad
jbe
xor
sub
hlt
cld
or
mov
mov
or
cwtl
dec
adc
jae
cltd
add
adc
and
sbb
rorb
xor
pop
les
dec
test
mov
mov
mov
xorb
or
adc
mov
push
movsl
adc
mov
pusha
mov
add
int
into
add
mov
xchg
xchg
mov
es
push
leave
jo
jmp
lods
jmp
dec
sbb
adc
xor
arpl
stos
nop
dec
jb
das
in
xchg
mov
cmp
fdivrs
inc
icebp
add
daa
sbb
xchg
add
xchg
jo
shlb
and
fldl
jno
lcall
testb
loopne
popa
dec
js
xchg
sbb
jae
cmp
repz
lock
call
addr16
sbb
inc
pusha
jns
push
cmpsb
add
daa
pop
es
push
scas
jmp
cltd
mov
mov
sbbb
lds
stc
jg
scas
lods
mov
lock
aas
xor
mov
pop
subl
jno
push
hlt
testb
lcall
pop
dec
sub
loopne
sarb
ret
pop
rorl
lret
pop
dec
sarl
es
notl
jge
cwtl
scas
jge
test
xor
dec
fldcw
or
ss
push
in
inc
and
inc
and
stc
ljmp
pushf
xchg
mov
or
pushf
mov
jae
shrb
pusha
push
out
test
ficomps
lds
lahf
inc
sbb
jnp
sub
sbb
cld
fs
out
rcrb
arpl
jg
mov
ret
lods
leave
mov
imul
push
bound
push
lret
sbb
inc
xor
add
xchg
fidivrl
pop
pusha
ss
adc
into
sub
mov
inc
inc
sub
repnz
mull
dec
shl
out
pop
movsb
in
cmpsl
addr16
fmull
xchg
fnstenv
mov
mov
xchg
jb
xchg
fnstcw
sarl
insb
into
push
sub
xlat
es
dec
aam
lret
mov
out
ffree
jg
jae
outsb
icebp
or
int3
xor
sbbl
repnz
inc
lea
out
mov
lock
stos
repz
add
nop
dec
xchg
lods
xchg
dec
push
popf
inc
dec
push
cltd
mov
daa
or
repnz
or
jae
sbb
sti
test
mov
scas
incb
int3
iret
les
fidivs
inc
lret
xchg
sbb
and
xchg
xor
xchg
inc
aas
jge
imul
and
adc
subb
sbb
push
cmp
lret
filds
push
cmc
out
cmp
cmp
push
decl
cwtl
push
adc
jo
pop
mov
add
pusha
int3
dec
daa
dec
aam
mov
mov
mov
scas
pop
fdivl
push
xor
lods
lret
test
push
lahf
incl
push
icebp
cmp
mov
je
pop
sar
leave
cmp
addb
sub
xchg
fstpl
rcr
xchg
push
dec
sbb
inc
xor
insl
mov
mov
mov
mov
push
mov
out
xchg
mov
out
jnp
mov
lods
xchg
mov
aam
test
pop
jo
inc
shrl
shrl
cmp
imul
leave
int3
mov
dec
push
push
std
jno
mov
ss
mov
test
xorb
jle
jecxz
dec
pop
sbbb
xlat
sub
mov
shll
mov
rcl
and
aas
ret
or
xor
fnstsw
mov
xchg
push
ss
xlat
sti
js
dec
and
inc
loopne
or
sub
mov
loopne
sub
icebp
push
xor
fnsave
xor
mov
test
or
jae
sahf
hlt
push
xorb
imull
add
rcll
xchg
pop
stos
jmp
push
mov
pop
icebp
pop
repz
lret
xchg
mull
mov
and
cmpsl
mov
mov
cmp
shll
test
jmp
dec
inc
pop
in
mov
and
add
nop
mov
or
mov
std
sub
inc
mov
and
gs
aas
pop
xor
scas
mov
jb
jno
mov
insl
xchg
ret
daa
in
jno
xor
je
fistpll
loop
movsl
add
xchg
push
mov
inc
in
jb
sbb
cmpsb
movsl
shrb
add
inc
and
daa
sbb
xorl
xor
imul
mov
dec
jp
push
xor
jnp
cmp
aaa
in
jne
xchg
loopne
adc
sahf
xchg
cld
dec
sub
cltd
pushf
repnz
cmpsb
xchg
gs
in
mov
jnp
int
pop
cs
mov
mov
xor
jmp
add
mov
mov
mov
fsubrl
push
adc
xchg
and
mull
loope
dec
sbb
lods
fwait
add
and
sahf
xchg
pop
cmp
je
jp
xor
lods
pop
push
ret
mov
inc
enter
mov
or
mov
lcall
mov
jle
mov
dec
test
ja
sarl
mov
mov
aaa
xchg
rol
in
inc
fists
jne
rorb
pop
fidivrs
lret
repnz
popl
mov
repnz
cmp
insb
mov
outsb
mov
jno
jnp
mov
inc
sbb
jae
scas
fwait
jl
lods
mov
mov
xchg
cmp
cltd
xchg
lds
sahf
xor
test
cs
cmpsb
es
fcomps
push
movsb
add
into
push
test
jmp
aad
pusha
xor
add
orl
mov
push
mov
adcb
cmp
sti
gs
movsl
mov
inc
cmpsb
mov
out
lcall
add
pusha
xchg
xchg
xor
fcmovnu
movsb
outsl
xchg
popa
or
out
sti
dec
sbb
mov
xlat
jecxz
int3
nop
inc
jecxz
fidivrl
xorb
add
gs
fcmovnbe
xchg
jmp
mov
ljmp
pop
add
add
or
imul
mov
lret
pop
push
cmp
lahf
adc
inc
mov
and
cwtl
fmul
scas
or
xor
mov
push
jp
inc
mov
mov
lcall
out
mov
mov
popa
cmp
inc
adc
and
in
movsb
cmp
stos
jl
sub
dec
lcall
mov
pop
mov
pop
or
movsb
iret
dec
push
xor
sarb
mov
push
sarb
xchg
xchg
mov
iret
xchg
mov
dec
push
cmp
bound
loope
xchg
scas
xchg
push
in
add
or
xchg
mov
jnp
in
and
mov
data16
je
cmpsl
cld
xor
mov
mov
cmp
stos
xor
and
cwtl
test
push
mov
movsb
outsb
popf
hlt
lret
jbe
stos
cmp
jecxz
xorb
imul
inc
and
push
out
movsb
fimuls
fisttpll
mov
inc
inc
mov
mov
pop
mov
test
nop
dec
out
ret
outsb
jp
mov
scas
add
pop
push
test
aas
cwtl
stos
xor
xchg
es
cmp
mov
outsb
lock
lods
leave
adc
jo
cltd
sarl
cmpsb
subb
ret
ret
ffree
aas
repnz
ja
dec
jb
fbstp
mov
repz
jg
ret
jge
xchg
fs
inc
xlat
push
ss
imul
cmp
or
xor
cmpb
cmc
jle
xchg
jne
cwtl
push
and
and
aad
sbb
enter
and
cmpsb
and
cmp
test
add
cmp
mov
mov
icebp
lods
ret
ja
push
out
nop
xchg
rcl
hlt
add
mov
ret
popa
xchg
aaa
sub
je
test
push
fs
push
movsb
in
pop
mov
cmp
xchg
mov
or
mov
lret
cmp
sub
jmp
repnz
xchg
xchg
lret
into
jnp
inc
sub
jb
and
mov
lret
in
aas
cli
add
xchg
scas
stc
adc
insb
sub
or
shlb
mov
in
xor
imul
stc
fdivrl
leave
mov
or
or
inc
in
aad
or
mov
jae
sub
in
or
data16
cmp
dec
pop
ss
ljmp
push
rclb
fmul
sub
test
mov
sub
sahf
mov
arpl
add
fldl
roll
push
mov
outsl
cli
cmp
mov
sbb
sbb
repz
mov
and
push
inc
outsl
inc
es
jmp
call
mov
test
inc
xor
or
fldt
int3
stos
popf
jmp
sub
mov
sbb
lds
xor
cli
cmp
into
popa
fcomps
inc
cmc
dec
lcall
xchg
int3
mov
test
add
jecxz
mov
xchg
push
push
jmp
or
ljmp
cld
jb
test
adc
mov
and
test
test
in
inc
outsb
and
lock
sbb
jmp
inc
xor
mov
scas
dec
pop
fldcw
inc
dec
loope,pn
leave
sbb
sbb
icebp
xchg
dec
mov
push
xor
mov
cmp
sbb
clc
push
ret
inc
movsb
mov
das
lret
sub
fcompl
rcrb
scas
out
push
jl
scas
fwait
nop
adcl
sbb
sbb
lahf
ds
push
pop
pop
push
es
fucom
inc
xor
jno
dec
sub
sahf
cmc
inc
mov
lret
dec
push
ret
imul
imul
inc
outsb
or
pop
inc
movsb
cmp
lcall
daa
pop
mov
shr
stc
fwait
aad
xor
adc
jns
popa
pop
inc
mov
push
test
insb
adc
dec
test
xchg
test
cmp
not
jo
mov
xor
inc
test
cltd
enter
xorb
je
add
aad
jnp
enter
jle
in
and
clc
scas
jno
dec
movsl
mov
dec
outsb
pop
mov
fs
into
lcall
and
je
push
out
test
mov
or
ror
sub
cmpsl
mov
andnps
jl
lcall
test
and
dec
dec
and
pop
push
sub
sub
cmp
add
pusha
sbb
mov
incl
adcb
xchg
mov
test
cmp
lret
pop
jl
lods
mov
xchg
dec
ss
cmp
imul
cli
mov
pop
add
shlb
ret
loop
shrl
cmpsl
pop
das
xor
xor
mov
orl
scas
cmp
clc
lcall
cwtl
add
mov
sbb
pop
sbb
jb
or
je
or
mov
jmp
jns
dec
sub
mov
in
inc
inc
ja
mov
fs
in
imul
scas
jb
inc
popa
cmp
fbld
aas
fucomip
mov
les
ss
dec
mov
jo
xchg
es
dec
int
or
mov
rcll
sbb
sahf
or
mov
cltd
and
sahf
push
mov
fnsave
lcall
sbb
inc
dec
outsb
mov
repnz
pop
mov
mov
cwtl
sbb
push
pushf
inc
push
dec
outsb
push
notl
bound
pop
lret
xchg
pop
pop
jle
push
aas
pop
movl
rclb
scas
push
jb
idiv
xor
add
jmp
xlat
mov
clc
xlat
repnz
mov
cmc
stos
out
daa
jmp
inc
std
lcall
and
cmpl
imul
sbb
in
out
adc
jne
shrb
xor
out
xchg
int
rolb
pop
and
pop
sbb
push
or
dec
fst
outsl
pop
xchg
sub
mov
xor
negb
stc
int
sub
int3
cmp
mov
call
inc
add
mov
std
sub
popf
xchg
loope
mov
ret
mov
dec
leave
in
cmpsb
pop
cmp
ljmp
pop
dec
subl
imul
xchg
pusha
sbb
aad
shrb
sub
inc
addl
push
lret
cmpsb
fwait
iret
sub
stc
dec
cmc
dec
loope
imul
sub
pop
pop
pop
nop
xor
hlt
and
cmp
shll
aas
jns
xlat
imul
je
dec
lock
dec
mov
push
jne
jnp
xlat
ffreep
pusha
sub
jbe
es
mov
pushf
or
movsb
fbstp
fbld
aaa
shrb
stos
imul
jo
add
sarb
cmpsl
sub
in
inc
xchg
and
xor
dec
sarl
aam
pop
outsb
push
adc
test
xor
std
dec
fs
std
aad
inc
mov
mul
addr16
pop
clc
xchg
jge
cmp
enter
aad
inc
subb
dec
lahf
mov
ret
insb
int
sahf
in
push
popa
outsb
std
cli
and
mov
int
add
fucomi
fs
or
pushf
enter
inc
punpckhbw
or
out
xor
mov
cmp
ja
outsl
loopne
je
inc
mov
fidivrl
ja
shlb
push
dec
cmpsb
nop
insl
ljmp
xor
dec
cld
dec
addr16
shrl
add
pop
lods
xchg
pop
ret
pop
stc
scas
stc
int
sar
cwtl
mov
test
repz
mov
ja
data16
mov
hlt
lret
out
jp
cmp
adc
push
sbb
cltd
pop
adc
int
xchg
in
xchg
aam
xchg
push
out
sbb
idiv
lahf
mov
jne
jecxz
pushf
aas
fsts
jnp
lahf
rcrb
aam
or
dec
inc
push
cmpsb
cmp
icebp
inc
inc
cmpsl
rolb
or
pop
imul
popf
lds
mov
ss
or
stos
push
roll
jp
fadd
stos
insb
mov
mov
jbe
or
mov
call
popa
out
leave
or
sbb
rcrb
dec
cmp
dec
mov
lds
in
xor
daa
roll
lds
shll
dec
jle
adcl
jae
sti
xchg
test
mov
negl
mov
pop
dec
cld
inc
aam
mov
mov
out
mov
rcrb
mov
in
and
imul
pop
push
icebp
xor
cmp
push
outsl
stc
pop
cmp
adc
ret
mov
jge
add
jg
test
lock
mov
imull
xor
lcall
icebp
insb
xchg
push
jae
int
ficompl
jl
cmpl
sub
daa
iret
sbb
movsl
rcrb
push
push
in
ljmp
xor
int3
in
sarb
cwtl
clc
push
imul
in
dec
cmp
insl
push
xor
xchg
mov
push
sub
inc
iret
pop
xchg
jb
xchg
adc
in
lock
add
imul
sbb
dec
mov
inc
fs
or
movsl
cltd
int3
shl
stc
cmp
mov
pop
push
imulb
sbbb
mov
sub
movsb
jp
xor
cmp
imul
lcall
popf
mulb
mov
int
pop
xlat
mov
pop
sub
or
bound
jmp
sahf
ljmp
pop
add
cmp
mov
pop
out
inc
sahf
cld
nop
pop
setbe
repnz
stc
inc
dec
out
mov
push
cwtl
imul
pop
pop
dec
pop
insb
add
add
mov
inc
mov
cmp
xchg
ljmp
int3
test
insb
xchg
jmp
fsts
mov
sub
movsl
inc
lcall
jbe
jmp
adc
popa
ret
mov
jle
orl
mov
gs
or
in
add
cmpl
lret
hlt
rcrl
loopne
ret
add
and
pop
jl
jno
clc
add
add
in
fisubs
xor
cli
pop
dec
and
xchg
lds
cltd
fadds
in
fidivl
shll
arpl
mov
scas
and
push
and
movsb
aam
lds
xchg
inc
fnstcw
mov
xor
dec
jg
jnp
mov
nop
test
xchg
dec
adc
pop
pop
out
mov
aas
push
mov
roll
push
cltd
outsb
mov
shl
dec
add
pop
lock
lock
cmp
cmp
in
lds
sbb
push
ja
aad
mov
pop
mov
out
pop
push
enter
aaa
cmp
adcb
push
adc
push
mov
and
mov
dec
dec
mull
bnd
push
push
sarl
cmc
fldl
inc
sub
int3
mov
mov
pop
push
pop
aad
mov
in
push
shr
insb
shlb
cmp
ds
inc
addb
outsl
sarl
cmpsb
sti
pop
in
das
xor
jns
xor
data16
or
sub
inc
xor
icebp
test
xorb
jge
sahf
and
mov
lea
sub
mov
faddl
cltd
adc
mov
adc
lods
ljmp
xor
loope
mov
cmc
out
aad
addr16
pop
scas
fistl
cmpb
stos
jmp
neg
and
inc
test
add
push
sub
adc
sub
xchg
sti
out
mov
sti
les
sti
pusha
out
ret
ret
mov
mov
mov
gs
mov
adc
int3
dec
pop
data16
aam
xchg
sub
test
xchg
mov
shll
lret
push
add
outsl
mov
insl
lods
jno
xor
imulb
push
add
adc
fcoml
pusha
mov
rcr
mov
or
pusha
fcoms
xchg
es
jns
clc
fsts
xchg
push
mov
imul
inc
test
adcl
dec
pop
cmpsb
cmp
cmp
add
lret
ljmp
sarl
sbb
out
push
and
mov
sub
jb
faddl
inc
jbe
ljmp
push
insb
add
inc
pop
lret
mov
mov
xlat
cmp
xchg
sub
aaa
mov
aaa
add
jo
pop
xchg
mov
inc
push
mov
cmp
insb
and
cwtl
imul
or
mov
add
and
push
imul
mov
jmp
cmp
sti
sbb
jae
lret
les
fwait
ja
lods
pop
addb
js
test
or
ret
dec
mov
lods
inc
xchg
int
or
adc
int3
ret
push
mov
sti
push
in
xchg
mov
lods
stos
stos
fsts
daa
stos
cld
dec
push
adc
adc
pop
fdiv
xor
pop
adc
pop
xchg
push
mov
dec
mov
ljmp
or
js
or
out
outsb
mov
fcmovnbe
xchg
adc
hlt
lret
push
lds
xchg
xchg
sub
out
into
loopne
repz
lea
dec
fistps
xchg
lahf
ljmp
sub
sahf
fs
loop
dec
imul
les
inc
xchg
add
pop
inc
popa
xchg
sub
sbbl
inc
test
sub
push
fdivrs
or
rclb
or
loope
aaa
mov
and
iret
sub
jl
push
jno
iret
xor
cmp
or
outsl
mov
xor
pop
repz
adc
incl
ret
sti
cmp
mov
push
ret
jg
mov
pop
sahf
movsb
jne
mov
push
inc
sbb
inc
lcall
idivl
jle
and
sbb
cld
mov
lret
call
inc
sub
cli
push
mov
scas
pop
imul
in
call
scas
jnp
push
xchg
popf
cmpsb
mov
imul
inc
mov
bswap
in
sub
jo,pn
adc
ja
add
jge
lods
add
pop
adc
jle
mov
add
adc
adc
mov
mov
sub
js
fwait
or
xchg
enter
dec
mov
sub
xchg
nop
inc
mov
movsb
mov
test
ja
and
ja
fcom
push
push
fs
scas
mov
pop
xlat
adc
fistps
add
aaa
and
in
inc
clc
jecxz
and
mov
rclb
rorb
dec
sub
data16
scas
cmp
jo
xchg
arpl
sbb
outsb
test
lahf
mov
into
pop
stos
icebp
mov
mov
imul
inc
mov
jmp
xchg
jmp
inc
shl
mov
loope
lea
testb
iret
push
insl
and
sbb
fwait
inc
je
xchg
lahf
ficomps
mov
xor
fidivl
lds
mov
add
cmp
lock
in
or
arpl
loopne
aam
adc
lds
mov
std
add
ss
rolb
nop
push
scas
je
aam
and
cli
pop
cld
imul
test
xor
xor
fstps
add
mov
cld
mov
ss
inc
push
or
or
lret
dec
mov
pop
loopne
xchg
xor
stos
lods
add
std
int
imul
mov
jnp
pop
nop
fidivs
inc
rclb
adc
lea
jle
cmpsb
or
je
xchg
cld
pop
loop
icebp
das
jl
jbe
scas
movsl
xlat
cmpsl
int3
adc
outsb
mov
push
inc
sbb
daa
push
push
add
or
sbb
jg
mov
cmpsl
adc
jmp
sbb
cmpsl
adc
xor
adc
fsubs
mov
movzbl
cwtl
rorb
jnp
cwtl
cmp
push
aaa
jg
aaa
pop
iret
icebp
pshufw
xchg
mov
or
push
mov
adc
sbb
pop
outsb
out
sbb
repnz
jne
fs
inc
pop
test
inc
push
test
stos
mov
mov
or
sub
out
cmpsb
xor
pop
lcall
incl
insl
pusha
inc
jae
addr16
popf
cwtl
rcll
mov
rcr
push
bound
add
cwtl
sbb
rol
imul
hlt
push
movsb
adc
mov
or
xchg
shlb
adc
addb
xlat
or
lock
xor
js
aaa
push
and
or
lahf
push
add
jecxz
mov
lret
xor
mov
push
lret
cmp
adc
xor
fldcw
out
cltd
mov
jp
into
stos
or
push
roll
mov
dec
cli
mov
mov
cmp
mov
inc
imul
sub
outsb
sbb
andl
movsl
fdivrs
adc
movsl
popa
leave
loop
sub
pop
and
pop
test
pushf
mov
sub
and
cmp
mov
in
std
mov
push
jo
jle
jl
cmp
cwtl
and
punpcklwd
popf
and
addr16
popf
xlat
xor
sub
or
mov
sub
xchg
outsb
and
pop
xor
loopne
test
je
mov
xlat
lret
dec
shrl
jl
push
jbe
and
xor
jge
adc
cmp
sbb
js
jl
les
mov
mov
clc
test
mov
testl
subb
in
popl
mov
ret
ret
pop
mov
and
stos
int
mov
jne
mov
add
hlt
or
or
ss
mov
inc
xchg
stos
lcall
mov
add
pop
mov
xchg
ret
cmp
arpl
sub
jbe
in
pop
mov
sub
push
mov
int
lret
subl
cld
inc
sbbl
pop
mov
sarb
mov
and
je
mov
std
mov
pusha
add
lcall
sub
addl
xor
sbb
xchg
rcl
jns
push
add
sbb
adc
pushf
aad
cmp
clc
xor
outsl
mov
test
mov
mov
jp
testl
cltd
push
ret
inc
rcl
inc
arpl
movsb
test
or
popf
call
lods
cwtl
loopne
loopne
stc
stos
sub
sub
roll
lods
push
inc
or
push
pop
dec
xchg
dec
xor
mov
mov
ja
fisubs
test
pop
cltd
movsl
imul
or
les
subb
lods
shll
stos
dec
outsb
in
sub
rol
inc
inc
aas
das
jmp
out
jne
lea
jmp
sbb
push
dec
mov
add
jno
mov
push
rcl
lods
adc
mov
cmc
jae
or
out
hlt
iret
add
and
sub
adc
incb
cltd
mov
mov
and
loope
mov
fimull
mov
sbb
mov
mov
jecxz
sti
negb
sub
test
xlat
mov
ss
loope
cmpsl
dec
mov
xor
xchg
cld
push
or
orl
xchg
sub
sahf
sarl
icebp
inc
mov
gs
push
sub
daa
adc
aaa
sbb
int3
lcall
in
cmp
cwtl
imul
inc
aad
insb
ja
lahf
xor
les
mov
push
push
test
jb
insb
sub
or
pop
jae
or
fnstcw
jp
nop
loope
inc
dec
out
fldcw
xor
mov
mov
mov
add
add
in
stos
int
mov
jmp
pop
stos
popf
mov
fists
pop
es
xchg
loope
in
jmp
popa
jecxz
int3
or
or
mov
cmpsl
in
jne
mov
and
push
pop
popa
insl
mov
test
popa
cmpsl
movsl
xchg
rcll
inc
pop
rol
pop
jne
mov
sahf
mov
out
or
dec
ds
mov
jb
cmp
inc
inc
or
pop
mov
cld
adc
stos
or
push
aad
or
sbb
and
add
push
adc
data16
jle
push
xor
lcall
inc
cmp
repnz
fisubrs
pop
popf
xchg
bound
mov
gs
mov
xchg
movsl
jg
in
ficomps
jmp
xchg
xor
adc
jns
clc
jp
mov
add
rorb
xchg
negb
cmpb
negl
movsb
xchg
push
in
mov
jge
jnp
fucomi
cs
imul
imul
xor
addr16
cmp
ja
leave
mov
adc
shr
outsb
ficompl
push
xchg
call
pop
xchg
addr16
push
inc
and
jns
mov
test
iret
pop
adc
pusha
sbb
xchg
dec
data16
pusha
jne
insl
add
adc
sbb
pop
mov
adc
mov
or
xorl
push
jl
xorb
inc
sti
icebp
push
push
insb
cmp
es
push
push
adc
xchg
imulb
call
mov
hlt
fdivrl
fimuls
in
push
lods
jmp
loope
pop
push
push
stos
jae
in
inc
pop
notl
mov
xchg
lds
inc
cld
enter
fdivs
aaa
xor
insb
daa
fucomp
pop
mov
in
fwait
adcb
insl
fcmovnb
les
mov
cmp
mov
jo
sbb
fs
lock
ljmp
sarb
jge
fdivrl
push
mov
mov
ret
ljmp
and
lret
xor
repnz
jb
sub
insl
ljmp
pop
cld
push
stos
cmpl
test
inc
lahf
sbbb
jl
xor
add
imul
jbe
xor
int
sub
in
dec
inc
add
into
inc
mov
mov
out
push
in
in
add
imul
cmp
mov
sub
sbb
cmp
cmpsl
in
adc
pop
xor
dec
popf
sahf
push
or
sub
lret
inc
and
sub
xchg
push
sti
xor
roll
sbb
mov
mov
xchg
push
dec
cmc
adc
ret
sub
jmp
cli
stos
je
mov
out
xor
jecxz
repz
cmp
gs
fidivrs
aaa
adcl
sub
add
out
xor
lret
lret
jmp
aam
rorb
sbb
push
jecxz
in
or
dec
pop
add
xchg
fucom
out
int
fadd
daa
jo
ficoms
push
mov
aam
inc
ss
cmpb
shl
pushf
aad
out
adc
loop
sub
sbb
fists
in
sbb
cmpsl
lods
mov
repz
dec
in
cmp
push
ror
sub
cmp
pop
pop
xor
dec
jb
fs
movb
bound
aam
xlat
adcb
or
stos
lret
call
cmp
and
std
jae
sub
shr
jno
fdivl
test
lock
push
leave
add
inc
stos
xchg
fs
ds
clc
sub
add
sub
cmp
ljmp
daa
hlt
and
mov
in
jmp
mov
pop
cmp
inc
ljmp
fidivl
fxch
xchg
lcall
cld
in
inc
mov
or
dec
loope
push
leave
rcl
pop
mov
xchg
cmpsl
push
popf
cmp
jns
call
std
mov
pop
test
and
mov
aas
xchg
mov
ds
arpl
xor
sbb
push
sub
add
dec
arpl
shrl
adc
push
mov
outsl
in
je
test
dec
pop
aad
cmc
mov
jp
dec
sahf
xchg
iret
or
jae
and
push
jle
stos
xor
push
cmp
cmpsb
xchg
loopne
cli
out
jb
jne
jmp
jecxz
insb
add
std
std
sub
dec
push
loope
pushf
stos
mov
dec
sti
cmp
sahf
adc
outsb
xlat
xlat
dec
cmpsb
adc
and
cli
addr16
jge
mov
inc
sbb
push
test
sahf
pop
out
add
in
push
mov
loop
lret
mov
jmp
sub
stos
mov
or
fsubrs
popa
sti
sbb
mov
sbb
cmp
inc
cwtl
dec
loop
push
pop
cmpb
loop
mov
push
adc
jnp
xchg
pop
push
nop
adc
adc
jmp
mov
mov
inc
insl
pusha
vpshuflw
dec
fwait
call
pop
and
jecxz
mov
push
mov
cmp
imul
jl
dec
scas
push
imul
jno
mov
inc
fistps
adc
lret
cmp
imul
xor
add
pop
les
cs
xchg
movsl
std
and
cs
shll
inc
fs
jbe
sub
push
push
out
arpl
inc
push
fsubrs
mov
cmp
loope
ja
dec
xchg
dec
mul
adc
stos
fstp
push
jle
sti
cli
cmp
xor
out
cmp
dec
es
mov
loop
rol
mov
lret
pushl
lds
inc
insl
jl
lock
and
popa
add
xor
jmp
pusha
mov
stc
add
and
arpl
push
add
lods
mov
popf
mov
pop
sarb
es
pop
xchg
pop
bnd
add
jnp
gs
fcmovb
mov
sub
repz
jo
jno
jns
mov
pop
jne
out
inc
sbb
jbe
inc
jg
push
sub
pop
mov
mov
and
clc
lret
cmpsb
rcr
in
adc
lret
popa
mov
xchg
jle
popf
add
sub
int
mov
inc
jl
stc
ds
imul
fiadds
cli
fnsave
dec
int
mov
rcl
aaa
or
and
push
adc
pop
ljmp
sbb
mov
loope
enter
insb
inc
cmp
mov
mov
adc
incb
cmp
sbb
xor
shrb
and
mov
aaa
mov
pusha
jne
pusha
or
mov
dec
jmp
xor
pop
sub
testl
idiv
push
fwait
xchg
ret
inc
je
loop
xor
lods
mov
aad
sub
mov
and
mov
ret
loope
pop
mov
std
nop
in
movsl
adc
xorb
lcall
cmc
fwait
mov
es
testb
xor
xor
pop
imul
xchg
std
mov
mov
sar
pop
out
xchg
add
ds
orb
bound
push
mov
push
push
jmp
sbb
mov
adc
lahf
add
insl
cltd
xor
icebp
inc
ror
pop
cmp
mov
outsl
and
inc
cmpsl
pop
mov
and
iret
pop
cmp
pop
les
andl
push
jb
mov
push
jne
jge
fbld
movswl
mov
js
push
push
push
lret
bnd
ds
pop
sahf
sbb
scas
jge
bound
test
jmp
and
jp
mov
loop
sar
cmp
sub
mov
mov
jne
jg
imul
ja
movsb
js
sub
movq
xchg
enterw
shll
jbe
adc
ret
imul
addr16
sbb
mov
ficoml
cmpsb
rcll
mov
dec
dec
mov
out
icebp
adcl
insb
jo
xchg
or
adc
scas
subb
cwtl
pushf
mov
dec
imul
lock
ss
and
adc
data16
push
pop
dec
sub
loope
mov
shlb
mov
mov
xchg
cld
mov
pop
dec
bound
xchg
andl
test
mov
adc
add
jns
not
sub
mov
lcall
out
iret
mov
xor
movsl
aam
pop
pop
mov
push
aam
push
hlt
out
insl
mov
xor
dec
add
inc
inc
repz
aaa
movsb
or
mov
rorl
clc
jno
sub
mov
sbb
sbb
ljmp
push
adc
loope
jae
jnp
dec
mov
jle
fsave
sbb
or
push
jbe
pop
scas
or
ds
out
repnz
mov
sub
repz
sub
inc
pop
nop
mov
pop
and
mov
lret
loope
push
xor
fnstsw
push
les
pusha
stos
aaa
idiv
sub
add
xchg
imul
jmp
fcompl
loopne
mov
push
xlat
dec
pop
add
xchg
pop
mov
jno
sub
jle
jge
ja
cmpsb
jge
addl
inc
dec
mov
jo
hlt
cwtl
pop
add
mov
loope
jnp
clc
sub
ds
xor
out
sub
sbb
adc
adc
pop
cmp
cmp
mov
mov
ret
in
sarl
sub
lock
pushw
pop
stc
idivb
cltd
pop
inc
int3
jp
nop
in
adc
mov
hlt
cmp
das
leave
outsb
jl
push
bound
aam
ja
ret
cmp
sti
dec
sub
insl
sub
pop
imul
mov
mov
jg
lock
xor
enter
mov
add
or
int3
insl
or
xchg
or
pusha
push
xchg
adc
sbb
aas
lret
cld
call
adc
nop
mov
add
sti
outsb
fst
mov
push
pop
and
sti
adc
mov
cli
xchg
rcrl
xchg
push
or
jno
cs
pop
std
pop
inc
sub
mov
insl
stc
loopne
lds
fcmovu
inc
xchg
or
pop
mov
fisttps
sarb
subl
cmp
add
and
mov
test
inc
push
xor
mov
ljmp
jl
pop
int
test
pushf
and
and
jmp
add
mov
push
mov
out
int
iret
push
outsb
rolb
subl
inc
and
and
in
or
xor
mov
gs
in
mov
dec
cmpsl
jecxz
insb
lret
cmp
mov
out
jle
and
add
call
pop
or
out
add
test
mov
or
dec
xor
in
bswap
imul
dec
inc
jp
aaa
js
arpl
inc
lahf
sub
cwtl
jno
xchg
mov
mov
adc
dec
lock
jecxz
inc
cmp
outsb
sbb
in
mov
call
inc
fstpl
test
push
xchg
pop
es
mov
sub
outsl
jge
mov
sub
jb
mov
iret
ljmp
aas
mov
aas
les
jae
mov
inc
out
adc
jp
stc
push
jmp
xchg
leave
xor
jmp
movsl
ja
pop
jns
add
dec
arpl
aaa
ljmp
imul
cmp
movsl
xchg
lock
stc
gs
rolb
aad
pop
ja
sub
push
cmpsb
add
js
mov
test
cmpsl
push
sahf
inc
test
aad
sbb
add
inc
das
jmp
add
adc
cltd
xchg
scas
out
rcr
mov
call
ret
jne
lcall
or
inc
mov
and
mov
fidivl
cwtl
mov
fstps
mov
out
in
fimull
shl
mov
ljmp
xor
cwtl
sub
push
dec
push
repnz
inc
and
dec
jno
and
mov
adc
out
jb
fwait
push
xor
mov
xor
sbb
dec
push
xor
sbb
inc
pop
push
xchg
cmp
push
rcr
mov
push
les
into
mov
xchg
pop
hlt
inc
adc
inc
mov
cmpsb
mov
xchg
loope
pop
imulb
add
inc
int
ret
mov
mov
dec
push
fidivs
jbe
or
cmp
mov
mov
xchg
push
cli
jns
pop
jge
inc
mov
sbb
lret
sahf
fsubrs
les
inc
and
fistpll
mov
mov
daa
pop
imul
call
lods
fwait
js
sbb
push
rolb
lahf
mov
xchg
mov
in
das
jnp
mov
lret
nop
inc
xor
enter
cmp
cmp
xor
int
sti
add
and
adc
subb
subl
pop
push
push
jecxz
int
int3
xor
jae
aas
sub
in
cli
and
mov
xlat
loopne
loope
cmp
xor
and
xchg
and
filds
mov
mov
in
xchg
push
lods
sahf
pop
inc
xchg
cs
sbb
je
cmp
push
pop
outsb
rcrl
jae
lods
and
mov
cmpsl
int3
iret
mov
adc
add
mov
aas
adc
jle
mov
or
mov
inc
arpl
add
in
nop
adc
mov
fwait
jnp
aas
je
and
mov
mov
and
mov
fldl2e
push
sub
xchg
hlt
orb
inc
popa
repnz
sub
xchg
or
jno
test
mov
mov
push
jge
adc
push
pop
cs
sub
fcompl
sbb
pop
ss
or
enter
xor
push
loopne
jne
jb
repnz
test
mov
sahf
in
adc
inc
cltd
sub
cmp
ja
sbb
loope
iret
xchg
into
icebp
das
es
lock
mov
cwtl
and
mov
cmovb
sbb
xchg
mov
int
int3
cmpsb
lretw
adc
aam
sub
sbb
loop
jno
pop
int3
pop
sbb
inc
or
pop
jno
pop
andb
xchg
movsb
cmc
mov
sub
rorb
int
js
je
ficoms
imul
add
inc
push
popa
and
inc
ss
pop
insb
push
jmp
popa
pop
pop
xchg
xor
and
mov
loop
cmp
int
lcall
popa
mov
stc
mov
sbb
aad
mov
and
fldcw
inc
add
mov
pop
fnstsw
cld
cli
and
inc
inc
push
pop
in
fisttps
mov
mov
sbb
imul
ror
daa
push
push
test
add
repz
jl
cmp
adc
jle
sbb
dec
jle
loop
fldenv
add
dec
mov
scas
scas
mov
ret
and
add
mov
into
mov
push
cmp
out
sbb
insl
cwtl
pop
pop
dec
jne
and
sbb
rolb
xor
xchg
cmpsl
sub
imul
mov
pushf
push
fiadds
test
cmp
xchg
arpl
repnz
mov
mov
ret
outsl
and
sub
xchg
cmpsl
and
sbb
test
fwait
or
mov
stc
hlt
pop
cmp
mov
stos
or
pop
pop
insl
cwtl
add
out
cmp
mov
mov
pushf
xor
dec
cmp
jp
loope
pop
ds
mov
sbb
or
or
xor
sub
xchg
outsl
cmc
push
imul
pop
popf
f2xm1
pop
addr16
ljmp
movsb
lods
cvtpi2ps
jo
and
aam
fists
xchg
dec
sbb
ficomps
mov
fdivr
out
pop
cmp
and
pusha
xor
es
pop
imul
loopne
lods
cltd
jecxz
cmpsl
adc
mov
push
stc
outsl
mov
stos
or
je
fists
sarl
movsl
int3
scas
psubd
add
adc
add
arpl
xor
lea
sahf
inc
mov
andl
pop
cmpsb
leave
inc
pop
pusha
pop
sub
inc
dec
xchg
push
gs
jno
icebp
les
in
adcb
push
and
push
xor
je
iret
pop
push
stos
dec
lods
push
scas
sub
adcb
mov
push
xchg
shrl
cmc
sbb
adc
aam
cmpsb
sub
lahf
xchg
shrl
push
xor
shlb
dec
jns
pop
jnp
or
fcom
xchg
hlt
leave
fcoms
hlt
jl
mov
add
adc
mov
ja
add
lock
sti
lahf
jle
mov
mov
sbb
jle
inc
std
les
ja
outsb
in
xchg
mov
dec
ret
mov
stc
mov
and
test
jecxz
xor
es
and
xchg
push
aaa
repnz
mov
fnsave
scas
sbb
popa
pop
test
jae
in
fwait
out
cmp
jge
xchg
sti
daa
push
sbb
js
cmpsl
out
test
jae
jmp
push
fwait
inc
jmp
repz
dec
mov
or
stos
sbb
inc
jecxz
jmp
xchg
lret
aad
gs
push
and
mov
or
ret
pop
mov
test
jge
pop
mov
les
jp
inc
jmp
pushl
lods
inc
push
mov
scas
pop
fistps
aam
imul
mov
punpckhbw
sub
xchg
pop
repnz
iret
cmp
in
sbb
jecxz
adc
cmpsl
sti
cld
ret
insb
ljmp
ljmp
cwtl
pop
pop
inc
xor
arpl
push
xor
dec
test
lcall
inc
daa
pop
gs
gs
mov
xor
add
dec
aam
jmp
sub
decb
mov
pop
sbb
stos
mov
jl
mov
leave
iret
jae
lock
ljmp
xor
out
jno
dec
flds
les
xchg
inc
or
push
xor
imul
shl
arpl
cmp
sbb
jge
test
leave
add
mov
dec
xor
mov
mov
fwait
scas
fcoml
mov
and
lods
das
cmpsb
dec
insb
arpl
or
je
cmpsl
js
mov
and
ds
pop
mov
cs
into
add
test
push
mov
movsl
test
pop
call
sub
xor
pop
lret
mov
out
jp
stos
mov
subl
cmp
movsl
mov
mov
and
xlat
adc
mov
icebp
mov
xor
inc
pop
popf
out
mov
jl
cli
out
aaa
fildl
mov
xchg
sub
xor
xor
rcll
sbb
adc
sub
test
dec
xchg
xchg
push
jbe
sbb
scas
or
int
xor
pop
xor
cmp
push
cwtl
popf
xchg
inc
aas
jno
mov
xchg
sbb
pusha
jbe
lcall
popa
pushf
push
mov
pop
push
cli
arpl
movzwl
or
inc
into
cmp
fsubl
cli
add
sbb
adc
sub
fwait
dec
nop
mov
jo
pop
pop
jnp
and
or
dec
sarb
jg
add
cmp
sub
push
clc
push
adc
cmpsl
imul
gs
push
xchg
scas
clc
pop
jae
cmpsb
jne
add
push
pop
fwait
inc
nop
inc
mov
sbb
cmp
lock
data16
stos
shrl
adc
insl
pop
add
xchg
popf
ds
inc
mov
sub
mov
xchg
cmp
sti
lcall
or
insl
andb
and
dec
lods
cmpsb
mov
pop
pop
or
call
sbbb
or
popf
lock
sbbb
scas
out
dec
cmp
adc
lds
mov
pop
inc
aam
xchg
mov
xchg
sub
imul
cmpsb
in
push
or
stos
adcb
inc
mov
cld
into
jno
fwait
mov
push
push
ss
fdivr
test
pop
sub
lock
out
ret
sub
sbb
aad
ja
jecxz
pop
das
fwait
imul
sub
sub
dec
hlt
lret
int3
fmull
mov
scas
fsubrs
inc
int3
cmpsb
dec
and
pop
daa
add
fsubl
into
ja
fidivs
icebp
pop
jb
clc
fs
ja
add
mov
xchg
mov
lods
test
and
hlt
insl
mov
xchg
aas
add
sbb
mov
fcmove
inc
in
rcr
faddl
cmpsl
pop
add
add
aaa
or
call
outsl
jno
sbb
sbb
pop
inc
test
dec
xor
jae
jb
cmp
cwtl
mov
loop
mov
pop
je
gs
sub
fcmovbe
addl
or
cmc
aas
call
push
jp
sub
and
lods
jbe
cmc
aad
mov
pop
dec
in
mov
push
xchg
and
out
dec
push
mov
fiadds
aad
and
call
xorb
xchg
mov
mov
orb
add
or
sbb
ret
and
jo
jns
shll
jmp
enter
inc
jne
sbb
icebp
mov
dec
add
loopne
out
dec
mov
pop
pop
xchg
mov
cwtl
cmp
mov
fmuls
cmpsb
push
xor
mov
sbb
fldt
dec
push
dec
pop
test
mov
into
ret
stos
mov
jae
jb
pop
ret
into
ds
fnsave
cmp
dec
cs
xor
inc
mov
aam
jmp
daa
adc
gs
mov
jbe
mov
mov
pop
xchg
xor
jmp
stos
xchg
add
jne
dec
mov
add
cwtl
jbe
hlt
call
sub
shrl
jecxz
int
inc
in
in
imul
sub
or
xor
lcall
inc
mov
push
xor
mov
dec
arpl
pop
xchg
mov
fistpl
pop
push
lods
sbb
push
fistps
sub
or
call
push
ret
sub
add
mov
insl
fs
out
iret
gs
xorb
adc
mov
inc
arpl
mov
sar
and
mov
xlat
dec
outsl
and
jbe
lock
fwait
mov
pop
adc
xor
xlat
into
adc
dec
or
xchg
insb
inc
iret
xchg
mov
std
ss
and
nop
je
lds
push
out
inc
sbb
push
mov
mov
dec
fldl
jge
mov
pop
mov
loop
ret
jmp
jae
mov
repnz
int
pushl
pop
pop
jmp
jae
jecxz
cmp
lock
nop
sbb
sub
push
arpl
cmpsl
arpl
subb
arpl
jecxz
jmp
mov
fsubr
fldcw
test
push
call
fwait
sub
inc
inc
mov
pop
aas
insl
call
cltd
fwait
rcr
mov
or
imul
jnp
leave
icebp
or
jecxz
xor
xor
nop
aas
loop
jle
cmp
or
outsb
add
loop
ja
push
lds
lock
adc
iret
pop
mov
int
sahf
out
add
popa
pushf
xor
sbb
fbstp
push
pop
mov
push
inc
shlb
pop
mov
test
adc
inc
xor
sub
sbb
mov
fcomps
outsb
inc
fmuls
frstor
inc
dec
inc
shll
sub
fildl
inc
pop
mov
pop
sbb
cmp
call
enter
cmpsb
daa
fcompl
inc
mov
fildl
mov
sarl
inc
and
dec
xlat
pop
ss
stos
idivl
xchg
ret
or
inc
or
push
sub
shlb
je
hlt
cmp
sub
mov
aaa
mov
jne
push
repnz
push
pop
sub
pop
pusha
pop
push
ret
fcompp
movsl
pushf
sbb
adc
xor
mov
arpl
es
out
mov
stos
imulb
fiaddl
sub
mov
notb
test
mov
aad
shll
dec
enter
inc
mov
jb
xchg
and
and
repnz
mov
mov
lds
xor
jne
loopne
clc
shl
pop
pop
sub
mov
lret
xor
hlt
int
xchg
fucom
mov
ret
or
mov
jb
mov
test
outsl
in
dec
xchg
xor
inc
je
xlat
cltd
nop
jmp
dec
aaa
dec
idivl
ljmp
aas
rorb
jp
cmpl
mov
in
icebp
or
js
outsl
enter
movsl
mov
fimull
ds
push
adc
pushf
adc
fidivrs
sub
dec
adc
fwait
inc
test
faddl
mov
lods
adc
pop
ds
pusha
int3
cltd
sub
pop
sub
popf
and
xchg
cmp
cs
scas
jmp
outsb
jae
fistpl
cwtl
inc
inc
cmp
outsb
sbb
sbbb
ds
loop
sbb
xor
cs
pop
out
fmul
mov
lods
cmp
cmp
jb
add
addl
jae
adc
jne
fstpt
inc
insl
sbb
les
add
push
inc
inc
or
lock
and
or
inc
imul
subl
or
dec
lcall
or
mov
rorl
mov
xchg
xorl
loopne
cmp
stos
movsl
or
out
loop
fildl
lds
mov
jo
sahf
mov
pop
push
inc
cld
xlat
call
xchg
scas
in
xchg
push
and
test
xchg
xchg
mov
xchg
push
test
jns
jmp
cmp
das
pop
cmp
jbe
repz
xor
jmp
mov
data16
xor
xor
sub
mov
insl
mov
mov
js
mov
pop
adc
fbstp
push
push
pusha
testl
adc
push
sub
or
push
lret
lods
sti
lods
mov
shlb
push
inc
mov
dec
faddl
cmpsl
dec
cmpsl
jl
xchg
mov
aam
pop
cs
jmp
ret
cwtl
and
push
jl
xchg
dec
mov
cmp
loope
pop
stos
cli
mov
call
pop
pop
mov
pop
repnz
jmp
xchg
adc
jp
push
lret
and
add
push
outsl
in
stos
rcrb
shll
adcb
scas
xor
adc
xchg
or
inc
repz
or
adc
aad
daa
mov
or
dec
sbb
jb
mov
xchg
mov
inc
cmp
xchg
lahf
adc
rcrb
cld
imul
sbbl
and
rcl
in
scas
cltd
mov
std
sub
adc
notl
outsb
testl
ret
scas
test
imul
cmpsb
cmp
scas
ret
mov
incl
pop
out
outsb
xchg
in
adc
stos
aaa
mov
sub
inc
and
sub
loopne
cmp
fcmovnu
fcmovbe
loope
int
orl
sub
push
aam
adc
jl
stos
or
or
sub
testb
fistl
cli
pop
out
loop
jno
jae
push
adc
es
mov
enter
test
xor
or
push
push
mov
xchg
cmp
xor
pop
sbbb
mov
mov
sti
dec
rclb
rorb
repnz
mov
out
negl
leave
pop
adc
clc
sbb
sbbl
adc
cmpsl
xor
dec
dec
sbb
imul
js
das
daa
andl
or
jns
dec
stc
ret
dec
xorb
clc
jl
jbe
jne
mov
jne
pop
or
xchg
ds
nop
gs
movsl
test
cmpsb
and
icebp
icebp
jne
dec
cwtl
inc
or
jnp
xchg
scas
hlt
cmp
movsl
sub
jle
mov
outsl
rcr
lahf
cs
mov
jmp
gs
ljmp
in
scas
ja
push
inc
lret
dec
sar
pop
mov
dec
aam
mov
aas
nop
mov
and
outsb
jne
cmp
mov
call
jle
es
or
call
arpl
ficoml
rolb
in
push
loopne
pusha
push
insl
ror
inc
movzwl
jns
sbb
jg
test
mov
ds
out
mov
sbb
push
hlt
fistpll
mov
push
add
xchg
xor
or
and
sbb
lret
adc
daa
je
mov
sbb
jne
pusha
pop
fiaddl
pop
xchg
repnz
and
mov
mov
nop
popf
nop
lahf
push
xor
inc
or
rol
cmpsl
pop
lahf
dec
inc
pusha
outsl
push
inc
leave
and
xor
out
add
xchg
sbb
test
aas
sub
pop
mov
sub
sub
adc
in
idiv
call
mov
mov
in
pop
xorl
lret
fisttps
or
cmc
pop
sub
movsb
mov
in
inc
sub
mov
pop
inc
mov
sbb
or
out
mov
lret
cmp
mov
fdivrs
shrb
jmp
cmp
xchg
mov
add
sarl
out
add
adc
mov
or
fsubrs
iret
pop
dec
cmpsb
xchg
arpl
lret
negl
jns
inc
sti
or
sub
popf
xor
xchg
loop
xchg
mov
push
jg
movsb
dec
shrb
bnd
pop
add
insl
pop
cltd
xchg
ljmp
lea
xor
insb
add
ljmp
sub
xchg
pushf
cltd
or
add
lods
and
mov
pop
pop
sub
mul
ret
xchg
inc
dec
xchg
sub
lods
mov
adc
lret
mov
call
sub
repz
in
mov
and
in
aad
xor
test
mov
push
iret
cmp
mov
xchg
inc
cmpsl
aad
gs
adc
pop
cmp
js
push
mov
xchg
data16
adc
addr16
xchg
xor
icebp
cmp
leave
jbe
sbb
mov
in
cmp
pop
cmpsl
je
sbbb
cmpsb
aaa
cmpsl
cli
ss
mov
pop
sbb
insb
out
pusha
fsubs
or
push
icebp
lea
jecxz
sbbb
xchg
inc
xchg
dec
lret
call
imul
cmp
or
test
pop
cs
pop
mov
xchg
je
jno
cmp
cmpsb
sti
xor
hlt
push
cmp
sbb
mov
mov
js
push
push
push
or
xchg
dec
sbb
loope
addr16
fstpl
int3
rcr
inc
es
aaa
ret
es
loopne
das
cld
cmp
cmp
ret
mov
ret
dec
cs
push
mov
je
dec
dec
push
test
daa
mov
outsb
lahf
or
sbb
cmpb
orb
sub
mov
inc
sbb
icebp
xor
and
xchg
cmpsl
dec
loope
sbb
fmuls
dec
push
cmc
xor
mov
pushf
clc
mov
cmpsl
push
idiv
xlat
out
sbb
jnp
push
cmp
cs
nop
mov
popf
mov
out
cmp
jno
es
or
lds
nop
push
cmpb
sub
cmc
lcall
inc
inc
or
sub
pop
je
pop
pop
mov
jae
xor
inc
or
loopne
pop
sahf
push
das
sbbl
rolb
movsb
fcmovbe
cmp
out
mov
mov
cmp
add
xorl
and
sbb
test
jge
xor
pop
xchg
std
rcll
push
daa
jmp
add
pusha
jmp
incl
hlt
jmp
sub
push
fsubl
loope
gs
testl
lods
xlat
pop
sbbb
ret
loopne
push
cmp
pop
xchg
fs
notb
push
leave
loopne
cmp
cmc
dec
xorb
pop
push
movsl
mov
and
jne
sbb
lds
cmpsl
lcall
sub
outsl
mov
hlt
out
call
lods
pop
cmpb
shl
push
push
negb
fildll
push
cmp
and
adc
movsb
lods
mov
rclb
aaa
adc
divb
mov
shlb
fcom
aad
or
ret
inc
lock
or
sbbb
jno
push
fidivrs
je
dec
cmp
adc
scas
dec
mul
mov
les
inc
mov
mov
mov
push
xor
push
mov
dec
imul
mov
dec
mov
lret
mov
and
lret
imul
dec
ret
data16
shrl
fwait
pop
jb
mov
inc
pop
inc
mov
xor
movsb
sub
sub
jnp
add
mov
mov
inc
popa
inc
mov
add
leave
dec
sub
mov
movntps
out
xor
sub
es
repz
pop
cmpsb
lods
shll
mov
dec
inc
and
lock
in
ljmp
pop
xlat
adc
inc
sub
lcall
dec
inc
jp
or
es
pop
stc
jb
jecxz
sbb
or
jno
lahf
test
push
shlb
jle
fldcw
sub
addb
mov
mov
in
lahf
imul
dec
inc
stos
xor
cmc
dec
fwait
cmpl
bound
jl
inc
adc
cmpsb
or
aaa
cli
std
fwait
addr16
pusha
sub
mov
ficoms
test
cld
sub
pop
xlat
xchg
sahf
sahf
rcrl
jb
jb
inc
test
data16
clc
shrb
gs
jle
adcb
in
sti
pop
xor
call
lahf
dec
lea
jp
sarl
cmp
pop
imul
pusha
or
or
pushf
stc
stc
cmp
inc
leave
jne
pop
jecxz
adc
push
orl
leave
inc
xchg
or
jle
add
test
dec
testb
cwtl
sbb
xchg
roll
dec
es
hlt
inc
sub
jno
mov
xor
sub
cltd
pop
out
loop
sub
and
outsb
cwtl
imul
add
iret
cli
lcall
test
addr16
jmp
inc
lds
push
loop
lock
sbb
in
out
insb
xor
mov
ja
push
lods
in
testb
push
js
jne
and
bound
fsubl
sub
sahf
imul
icebp
xchg
xchg
push
sti
xor
dec
jge
ret
push
stos
stos
dec
add
xchg
pop
mov
lahf
rclb
dec
outsl
ret
pop
roll
aam
out
mov
sarb
ljmp
or
jecxz,pt
pop
mov
add
sbb
add
stos
sub
xchg
outsb
adc
xor
insl
imul
int3
icebp
subl
cld
les
dec
jge
dec
subb
pushf
cmpb
cwtl
push
pop
sbb
push
or
lods
mov
mov
mov
loopne
mov
test
vpsrlw
cld
call
fisubs
stos
fistpll
xchg
add
ret
mov
iret
hlt
mov
lret
aaa
rclb
ret
popf
and
shl
movsb
ja
daa
mov
sbb
cmp
loopne
in
stc
push
mov
outsb
lods
push
or
ljmp
cld
lcall
test
arpl
iret
stos
push
and
aam
xchg
push
xchg
adc
push
mov
std
lods
ret
inc
repz
fimuls
add
js
mov
cmp
mov
xlat
mov
add
test
push
call
divb
sub
mov
jns
mov
adc
into
jecxz
add
xchg
inc
inc
mov
stc
xchg
push
into
fldenv
add
adc
cld
int
std
ds
xchg
fwait
enter
pop
add
lret
scas
hlt
sub
xchg
xor
push
pop
or
ret
scas
sbb
and
test
or
push
das
fldenv
ljmp
ret
inc
loopne,pn
rcrl
sti
inc
jecxz
push
gs
fs
push
lahf
mov
and
mov
sub
jb
sbb
mov
cmpsb
sub
lcall
mov
out
jb
ss
arpl
fcmove
movsb
mov
nop
addr16
inc
jl
into
or
shll
addr16
mov
pop
or
in
popa
imul
test
mov
ret
push
adc
and
fcompl
shrb
lret
cmc
sub
loop
addr16
shlb
ficompl
xlat
aas
mov
inc
mov
hlt
or
das
cmp
test
lock
jge
sarb
arpl
dec
cmpsl
xchg
inc
sbbb
mov
mov
fs
outsl
lret
popl
mov
js
sub
nop
xchg
imul
xlat
cltd
rcrb
lahf
sbb
sub
mov
jl
les
addb
data16
dec
in
loop
push
in
sub
dec
call
inc
fdivl
or
call
adc
pop
fnstsw
ss
out
outsb
cmp
push
mov
cmp
add
out
popa
mov
inc
or
stos
or
mov
cmp
icebp
sbb
or
push
stc
lea
mov
stc
out
clc
pop
mov
loope
imul
lahf
fwait
shrl
mov
mov
push
insl
mov
int
jl
out
mov
shlb
mov
stc
loopne
and
pop
sbb
mov
dec
pop
popa
inc
and
mov
andb
pop
lods
mov
jl
sarb
adc
jne
sbb
inc
push
fidivl
sbb
sbb
stos
mov
add
xor
adc
push
arpl
push
ficomps
popa
lret
pop
lret
sub
call
mov
call
push
or
into
cmp
sbb
mov
mov
inc
jo
mov
inc
dec
cld
sub
loop
xchg
push
test
sub
mov
roll
gs
dec
xor
mov
push
sub
and
pushf
lea
inc
dec
ds
data16
xor
pop
inc
and
mov
add
and
mov
add
popa
add
in
insl
mov
mov
aaa
test
pop
aam
incb
mov
mov
int3
lea
pusha
sbb
mov
loope
sbbb
sbb
ds
or
insl
js
adc
sub
or
fwait
push
enter
mov
pop
bswap
sbb
popa
es
cmp
xchg
andl
xor
addb
jle
sbb
jmp
push
int3
imul
inc
xor
aad
xchg
test
fs
jae
fs
mov
inc
cmc
sti
dec
jae
inc
imul
or
hlt
stos
out
or
push
insl
mov
sub
dec
outsb
push
out
shrb
inc
mov
std
popa
adc
jns
xorb
push
test
fcompl
jne
mov
mov
sbb
mov
mov
sbb
mov
cmpsl
scas
mov
fsubrl
jae
mov
cmp
sbb
lcall
adc
or
jnp
jle
fstpl
js
int3
pop
lret
or
sub
xor
jae
add
push
out
jmp
loope
cld
xor
push
repz
imul
push
repnz
jb
sub
inc
mov
pop
jae
in
dec
lods
lcall
xor
inc
cli
fisubrl
adc
jo
sbb
ja
stos
push
insb
lahf
scas
xor
rcl
ficomps
pushf
push
lock
jl
out
cld
lds
mov
ss
orb
daa
xor
adc
dec
xchg
add
pop
nop
repnz
aaa
test
fistpl
xor
mov
jle
divl
shl
jb
outsl
lds
jge
push
pop
jmp
shrl
adc
cmp
cmp
mov
inc
nop
lcall
jp
xchg
xlat
stos
xor
pop
cmp
lahf
ljmp
sbb
push
dec
les
mov
lea
into
ja
ljmp
pop
data16
fdivrs
fidivrl
cmpb
jno
xor
in
push
loope
cmpl
dec
mov
mov
pop
pop
lret
jb
sub
mov
pop
cmpb
rolb
pop
or
inc
and
fldt
out
mov
popf
push
out
dec
enter
inc
das
addr16
std
out
in
ljmp
pop
mov
pushf
fwait
push
mov
fidivl
sbb
pslld
rolb
sub
add
xchg
loope
xor
mull
jl
ss
pop
fisubrs
push
add
pop
subb
inc
sub
pop
mov
je
mov
inc
or
lods
ret
inc
mov
rorl
dec
cmc
mov
es
cmp
sbb
imul
dec
je
fistpll
or
inc
sbbl
mov
idivb
xor
cmc
jge
addb
arpl
in
repz
data16
jge
push
cmp
adc
mov
pop
rorb
jno
mov
iret
clc
xor
call
push
sbb
sbb
addb
mov
cld
push
mov
xchg
xchg
dec
fdivl
sub
add
xchg
ja
call
cmpsl
cld
mov
inc
sub
fwait
hlt
lret
mov
ja
cmp
jno
pop
push
and
push
out
sub
push
jge
jb
xchg
outsb
jbe
cmp
or
adc
sub
dec
dec
fwait
into
icebp
jmp
in
xlat
imul
jg
xchg
sub
aas
dec
add
adc
push
mov
movsb
sub
imul
movsl
icebp
outsl
mov
inc
mov
lea
movsl
sub
notb
fwait
add
fadds
in
pusha
js
pop
outsb
sub
daa
aaa
sti
pusha
test
popa
loope
enter
fs
popa
lods
jae
push
or
sub
push
scas
dec
and
leave
adc
fwait
or
push
aaa
cmpsb
lahf
adc
mov
pushf
pop
jecxz
mov
arpl
int
sti
sbb
dec
jge
mov
or
xchg
test
fisubs
inc
xchg
sub
inc
sbb
test
cs
into
ret
out
cmpsb
xchg
xchg
nop
add
js
arpl
fs
rorb
mov
andb
add
rcrb
mov
lods
aam
cmpsl
je
iret
or
fisubrl
shlb
or
unpckhps
sub
sbb
popa
mov
loope
push
lods
sub
scas
adc
jb
fisubs
and
int3
sbb
push
loope
or
jp
sub
out
jl
gs
es
lock
push
out
push
sub
call
addr16
movsb
and
cli
test
xchg
jmp
stc
add
inc
sahf
xchg
cmpw
sbb
adc
fdivrl
mov
rcll
sbb
aad
ds
xchg
mov
inc
sub
mov
out
fldenv
push
cltd
cmpsb
xchg
dec
stos
repz
jl
pushf
jmp
adc
sub
arpl
call
cli
popa
push
addr16
testb
pop
shlb
push
xchg
inc
ds
push
pusha
add
ss
stos
pop
inc
arpl
sarb
dec
cmp
mov
add
pusha
xor
mov
mov
popa
mov
scas
jno
sub
pop
cmp
jmp
adc
mov
dec
call
es
fsubrp
add
les
push
sbbl
sarl
push
mov
jp
test
cmp
sub
pop
movd
pop
mov
iret
inc
test
or
adc
stos
cld
add
jg
push
sub
test
cltd
mov
in
add
loope
sub
popa
push
call
in
aad
pushl
cld
vpunpcklwd
sub
pop
push
int
loope
mov
inc
mov
cmp
repnz
jge
or
mov
push
mov
fdivrs
rclb
hlt
loop
cmpsl
xchg
and
mov
imul
push
insb
leave
test
fsubrp
in
mov
mov
cltd
aad
push
pop
xor
std
mov
and
loopne
sub
pop
negb
pop
in
lds
js
adc
pop
xchg
mov
pusha
outsb
loope
iret
sub
les
inc
icebp
rcl
xor
stos
rclb
mov
xchg
cmp
cmpsb
jbe
xor
fidivrs
or
mov
cmpsb
insb
into
out
mov
sbb
out
outsb
mov
xlat
in
and
inc
in
xor
fldenv
adc
adc
mov
ror
aam
pop
and
jge
add
mov
pop
jnp
mov
inc
inc
sub
lods
mov
push
xor
cmp
aad
xchg
stc
inc
repnz
js
dec
in
aas
sahf
add
ffreep
enter
pop
inc
out
cmp
mov
xchg
lds
pusha
mov
bound
xchg
add
scas
inc
test
sub
sbb
icebp
aaa
roll
shr
adc
popl
inc
imul
pop
mov
fsubrs
inc
aad
dec
inc
scas
add
sub
inc
adc
adc
std
and
testl
sahf
testl
sbb
fcmovbe
pop
inc
mov
popa
and
leave
inc
mul
outsb
push
insl
jge
jg,pn
in
and
push
lods
cmc
add
add
filds
jmp
jecxz
mov
inc
sti
movsl
mov
mov
lcall
push
shl
or
in
pop
or
push
cwtl
out
push
aaa
loop
or
add
mov
push
mov
jbe
and
and
inc
leave
adc
arpl
ret
lods
jb
pop
inc
jmp
dec
pop
jbe
sub
mov
xchg
jae
out
mov
imul
ret
sub
imul
add
out
sbb
or
int
sub
inc
in
hlt
mov
les
and
cmp
pop
sbb
movsb
enter
sub
or
insb
shll
pop
sbb
dec
sub
xor
je
imull
iret
push
xor
cltd
xor
push
mov
mov
push
es
repnz
fildl
xor
clc
push
scas
mov
pop
cmp
pop
call
mov
xlat
jmp
xor
sti
daa
cmp
fdivrl
jmp
pop
sub
xor
cli
or
sub
sub
xchg
fistps
jb
pop
inc
mov
lods
push
aas
and
popa
push
les
push
rclb
adc
mov
mov
xlat
xchg
jno
inc
or
or
push
or
push
loopne
sbb
dec
loope
sbb
push
scas
cs
outsl
scas
sbb
shll
aas
xchg
jmp
xchg
or
icebp
sub
insb
scas
addl
jp
aam
ljmp
out
fstps
lret
orl
add
dec
imul
insl
daa
fldl
dec
int
add
shll
and
inc
movsb
or
xchg
jl
stos
lock
mov
aad
xlat
mov
addr16
jo
mov
push
push
pop
ljmp
jo
pop
iret
rol
decl
movsb
ret
sahf
in
ss
enter
imul
dec
dec
ljmp
sub
jle
xchg
imul
gs
add
pop
push
loope
bound
adc
and
push
cltd
mov
test
test
mov
jbe
loopne
pop
add
jno
xchg
stos
loop
mov
cs
or
adc
mov
jae
es
mov
jo
jecxz
push
or
and
leave
inc
fdivl
jge
das
test
inc
add
mov
push
push
ficompl
cld
add
xchg
jno
sbb
sub
lret
clc
pop
inc
xchg
or
add
cmc
jo
cmp
rcl
pop
jno
pop
mov
int3
cmpsb
outsb
idiv
xchg
cmc
bound
mov
jmp
push
cmp
push
sub
shll
aaa
pop
dec
sbb
fldl
imulb
lock
jno
adc
jns
mov
add
mov
ret
mov
sbb
sbb
clc
repnz
outsb
outsb
sub
mov
pop
sbb
push
xchg
sub
add
aas
loope
lret
mov
mov
push
inc
out
mov
xor
push
stos
and
insl
scas
xchg
push
popf
add
xor
pop
fsubp
sarb
mov
and
lock
in
fnstcw
pop
dec
negl
subb
testl
mov
rcl
aam
das
ss
mov
xchg
xchg
fmuls
mov
bound
cltd
clc
xchg
test
nop
xchg
push
push
xlat
shl
inc
cltd
inc
adc
cmpb
ja
cmp
stc
and
jmp
xlat
or
xchg
push
xor
jge
dec
or
cmp
xor
je
psraw
aam
mov
aad
sbb
add
ret
add
mov
lcall
mov
arpl
jmp
jbe
mov
jecxz
adc
or
icebp
push
in
cmpsl
mov
jb
sbb
push
fwait
sub
mov
cmp
sbb
or
jecxz
gs
push
fistps
cmp
mov
ret
push
add
out
ficompl
push
pop
pop
add
mov
mov
movb
frstpm(287
and
or
xor
pop
cmpsl
cmp
push
shrb
add
enter
inc
pushf
pop
or
sti
insb
outsl
shlb
jle
xor
pop
xchg
push
xor
pop
sbb
jg
sbb
pop
mov
xchg
mull
cld
sbb
xchg
xor
aam
jecxz
push
ljmp
jp
mov
pop
in
and
or
cmpsl
ffreep
test
sahf
les
and
fisubl
mov
lods
std
scas
fwait
adc
lcall
stos
movsb
push
hlt
daa
or
mov
les
pop
stos
xchg
dec
cmp
fadd
vunpcklpd
test
or
in
test
xchg
loope
pusha
lret
or
mov
test
adc
jecxz
add
mov
xor
xchg
sahf
push
gs
leave
xor
mov
inc
mov
jg
mov
dec
adc
stc
testb
repz
fstpt
sub
roll
shrl
out
xchg
sbb
or
pop
out
mov
sbb
test
fs
pop
roll
add
mov
sbb
pop
fwait
adc
sahf
cmp
sub
mov
xchg
sub
jns
repz
pop
ja
add
sbb
std
sub
outsl
push
sbb
adc
pop
inc
iret
sti
mov
xor
dec
aad
jecxz
lods
fists
jmp
xor
push
insl
mov
inc
jb
or
movsl
dec
and
mov
push
xor
gs
bound
cmp
inc
push
fldcw
mov
aad
push
mov
mov
jmp
lock
cmp
in
mov
cmp
rolb
pmuludq
jge
mov
ficoms
fadds
aas
sbb
jmp
adc
jne
out
test
stc
sbb
enter
nop
mov
cld
shrb
mov
inc
sub
mov
xchg
mov
inc
dec
or
xlat
repnz
repnz
cmp
out
push
mov
jnp
add
loop
mov
js
mov
lods
jecxz
or
cmp
notb
shlb
scas
inc
xchg
ja
sub
sub
push
jo
lcall
andb
mov
pop
sbb
inc
sbb
out
sbb
ja
sbb
loopne
push
jb
pop
outsl
sbb
xlat
enter
mov
fnstsw
dec
or
inc
sti
push
jecxz
test
cmp
or
js
test
imul
cmp
mov
test
mov
dec
cmp
out
and
gs
jae
and
or
sahf
push
xchg
lcall
sbb
mov
mov
xor
push
andl
aad
and
jmp
xor
inc
addr16
dec
inc
xor
pop
pop
popa
add
xchg
push
stc
and
mov
in
cmp
clc
sahf
ljmp
cmp
rcll
mov
rorl
cs
ficoml
jp
xor
pop
mov
add
sbb
jb
sarl
cmp
jno
rcrb
je
loop
xor
jae
push
sbb
rorb
leave
stc
push
mov
in
movsl
xor
fs
test
cmp
mov
dec
insb
ficompl
scas
js
adc
push
pop
stos
mov
mov
ret
dec
inc
push
mov
or
jne
aad
jno
repnz
sbb
out
xchg
jmp
push
push
cwtl
sbb
sub
ret
mov
cmpsl
jp
pushf
jae
sbb
adc
pop
nop
lret
inc
scas
xchg
repz
mov
jg
pop
outsl
jl
lcall
adc
insl
outsl
jae
mov
mov
push
jp
dec
mov
pop
push
xor
loope
cmp
xor
ds
xchg
int3
popf
out
mov
punpckldq
inc
push
adc
arpl
sbb
frstor
xor
popa
arpl
cmp
cs
sub
data16
arpl
add
hlt
push
test
sbbl
out
or
xchg
dec
mov
test
xchg
rclb
imul
add
sbb
rol
out
dec
out
and
mov
insl
or
adc
loop
cmp
adc
xchg
das
push
adc
data16
fs
cmp
out
and
jne
in
jp
or
cmp
imul
mov
cmpb
dec
movsl
nop
arpl
fs
jo
aam
popa
jb
filds
cmp
or
add
add
loopne
add
dec
add
push
jl
lock
mov
in
lods
sub
inc
jmp
aas
and
ret
dec
ja
sub
outsl
jl
ret
pop
inc
hlt
mov
rcl
push
xchg
mov
mov
in
xchg
xor
sbb
jmp
pop
xor
fs
stc
mov
ret
fdivr
pop
insl
xor
daa
cmp
movsl
mov
dec
pop
loopne
lods
mov
getsec
jnp
xchg
shlb
inc
stos
outsl
mov
imulb
movsb
and
dec
pop
dec
mov
cmpsl
mov
mov
mov
inc
aad
pop
fistpll
iret
cmp
mov
dec
lcall
mov
mov
push
pop
lods
mov
dec
push
add
sbb
push
push
mov
cltd
bound
lock
or
pop
fimuls
pop
pop
mov
xchg
out
iret
mov
in
loopne
mov
jno
adc
push
mov
sbb
add
pop
nop
push
lds
loopne
push
jmp
adc
aaa
pop
and
les
jle
push
and
cmp
fisttpll
pop
xlat
xor
mov
dec
push
adc
cmpsl
lds
das
mov
jl
or
leave
adc
shl
sahf
xchg
push
cmp
adc
xlat
in
push
gs
std
inc
lds
test
call
mov
mov
mov
xchg
scas
push
push
xchg
add
xchg
inc
repnz
rcr
rorl
sbb
cmp
inc
xor
add
xor
mov
xor
jns
xor
jecxz
inc
fmull
mov
push
inc
pop
xor
mov
not
and
xor
push
or
adc
int
into
pop
or
jnp
mov
push
jle
les
cmp
jmp
jge
mov
jg
or
ja
push
or
imul
das
pop
mov
fistpll
fsqrt
dec
push
pop
stos
cli
dec
push
mov
sbbl
jns
xor
inc
mov
jne
leave
out
sbb
lcall
lahf
les
aam
push
xchg
clc
or
ret
add
fdivl
rol
es
mov
pop
cmp
loop
insb
add
xchg
jbe
fadd
cmp
xchg
pop
and
xchg
arpl
iret
xchg
adc
xor
jbe
mov
aad
daa
popa
pop
jp
mov
adc
add
fcmovnu
mov
xchg
xorl
pop
paddsw
mov
dec
mov
jp
test
subl
xor
dec
jle
subl
xlat
xor
mov
jg
xchg
xchg
das
sbb
mov
dec
sbb
add
mov
adc
fs
daa
stc
xchg
fisttpl
sbb
jp
mov
out
jae
jns
cmp
outsb
leave
scas
xchg
adc
loope
push
std
cld
into
mov
jecxz
pop
xor
adc
push
stos
jg
ret
lds
insl
pop
jb
repnz
dec
fcoms
out
aas
mov
ja
dec
loop
in
addr16
xchg
out
int
push
jmp
jb
dec
cmp
jl
lea
ret
adc
mov
push
js
push
jo
add
test
mov
je
jg
sub
sub
sbb
popf
dec
dec
cli
mov
in
je
mov
push
add
xchg
pop
rolb
xchg
nop
fidivrl
out
pop
sarb
sbb
xor
sub
fbld
jns
mov
std
mov
xchg
or
jmp
xor
jge
push
cwtl
mulb
push
icebp
cmp
and
sbbb
popf
js
jb
ficoml
hlt
add
into
push
aad
cmp
mov
add
push
add
jae
lret
ja
jmp
fdivl
imul
imul
pop
cltd
jnp
mov
in
add
daa
loop
or
push
scas
js
sub
iret
fs
or
arpl
icebp
jnp
mov
repz
rorb
mov
les
int3
xchg
jo
popa
push
mov
adc
jmp
mov
mov
adc
sahf
mov
lcall
cmp
cmpsb
push
xchg
iret
push
dec
aad
push
sbb
imul
dec
xchg
inc
fs
and
fsubl
movsl
push
insl
inc
ljmp
mov
cmp
arpl
push
mov
sbb
loop
mov
out
mov
mov
je
add
lock
push
adc
inc
mov
push
addr16
push
rorl
ffree
sub
jmp
and
xor
dec
leave
cli
jl
cld
sbb
mov
mov
addr16
jne
mov
jecxz
nop
fiaddl
fistpll
in
sbb
mov
cmp
out
arpl
mov
or
sbb
or
adc
or
fs
pop
fstps
mov
sbb
ljmp
adc
pop
cmp
pop
pop
sbb
clc
sub
mov
sbb
sbb
fidivrl
cld
test
dec
mov
cs
pop
adc
fldenv
sahf
ret
pop
mov
outsb
in
sub
sbb
repnz
leave
es
dec
test
jge
mov
dec
mov
mov
cmp
inc
fwait
or
cmpsl
int
movsl
aad
xchg
lods
adc
pop
jnp
mov
repnz
xchg
xchg
push
mov
jno
cmp
imul
mov
cmp
mov
xor
add
les
lock
push
maskmovq
testl
or
and
adc
ljmp
cmpsl
sbb
lahf
test
xor
mov
adc
cmp
and
sub
push
popf
in
scas
cs
xorl
pop
jl
in
adc
mov
icebp
sub
dec
cmp
sbb
xchg
pop
fwait
push
mov
arpl
inc
sbb
or
int3
lods
dec
data16
and
jnp
rolb
bnd
add
fisubl
out
aam
jne
or
stos
xor
mov
lcall
test
push
sbb
out
sbb
adc
sbb
pop
jecxz
inc
sub
jg
xor
ds
cwtl
fsubrl
out
xchg
mov
adc
icebp
xchg
and
mov
or
enter
bound
cmpsb
lods
push
xchg
outsb
and
cmp
adc
sahf
jl
pop
lret
mov
jle
sti
mov
pop
mov
pop
sbb
in
hlt
jnp
test
icebp
test
daa
inc
pushl
mov
dec
test
adc
jle
hlt
jnp
pop
pop
pop
dec
rclb
das
dec
ror
lods
adc
ret
sub
loop
sub
sub
cmc
aad
pop
mov
sarl
or
add
in
inc
jp
pop
roll
loopne
push
shll
adc
ret
and
int3
outsb
mov
nop
pop
popa
faddl
cmp
mov
mov
jno
jmp
sub
add
jecxz
imull
sub
aam
adc
sbb
es
cmp
inc
fistl
cltd
fdivrp
adc
pop
jmp
sti
adc
je
mov
fistps
jl
and
jae
insl
mov
mov
add
imul
imul
in
cmp
dec
mov
push
out
sub
ja
aam
scas
sub
ret
out
iret
or
push
nop
adc
xchg
in
or
push
lock
in
out
test
xchg
stc
rol
out
ret
inc
mov
inc
push
pusha
mov
mov
push
sub
out
xchg
shrl
mov
rcll
xchg
outsl
add
xchg
js
mov
pusha
sti
mov
xchg
int3
ss
jo
pusha
jl
adc
mov
popf
mov
shr
xchg
xchg
loope
das
fstps
stos
fsub
fadds
sbb
lods
mov
fists
push
add
outsb
sbb
sbb
push
or
cmpl
cmpsb
pop
or
push
lret
sbb
sbb
push
cmp
and
popf
add
cmp
xchg
nopl
adc
jns
pop
daa
pop
add
std
mov
mov
fmuls
ds
fdecstp
mov
cs
imul
in
push
fstps
mov
pop
lods
or
mov
mov
cmpsl
clc
xchg
fsubl
mov
jbe
addb
dec
lods
xor
mov
xchg
into
fstp
test
scas
mov
or
adc
scas
jmp
xchg
push
es
loopne
out
push
ljmp
xchg
pop
icebp
vpsubusb
loop
xor
and
pushf
push
repnz
subl
push
test
dec
lret
adc
mov
sub
xchg
sbb
clc
push
iret
test
adc
clc
and
orl
xor
movsb
xor
inc
xor
mov
fwait
out
jl
stos
cmp
add
sbb
outsb
subb
int
adc
aam
scas
push
jns
jp
mov
cltd
dec
mov
hlt
ss
or
add
or
outsb
cmp
mov
lahf
mov
int3
jg
jge
decl
jecxz
jmp
leave
ret
sub
iret
daa
mov
mov
mov
or
cltd
adc
sbb
dec
mov
iret
push
push
cmp
lods
daa
xor
adc
popf
stc
or
and
fxch
cmp
xchg
push
loopne
cmp
adc
cmp
fldenv
ja
xor
sbb
pop
addr16
mov
pop
repnz
je
nop
inc
sbb
test
fsubrs
lret
mov
pop
lret
pop
stos
popf
data16
cmp
mov
subl
or
add
in
push
lret
ds
pop
jmp
lret
fmul
addl
adc
idivb
stos
aas
std
inc
adc
cmp
jns
sub
repnz
movsb
lds
push
xor
je
add
insl
sbb
out
test
icebp
pusha
sbb
push
into
call
lahf
sbb
sbb
repnz
ss
pop
aad
sub
inc
clc
sahf
sub
leave
lock
cmc
ret
sbb
out
pop
fistl
test
enter
or
jno
sub
add
lea
dec
ljmp
xchg
and
push
jne
adc
mov
sti
addb
push
fdivr
ja
test
loope
neg
mov
xor
pop
in
js
jno
adc
and
cmpsl
aas
xor
popa
test
adc
lds
jbe
popf
out
lret
cmp
int
lock
xchg
fsubrs
sbb
pop
in
mov
pop
shl
push
xchg
push
jp
pusha
cltd
jbe
fwait
sbb
outsl
sub
xchg
add
andb
adc
imul
fidivl
daa
iret
and
sub
sub
mov
lds
pushf
lahf
xor
insb
fxch
dec
sbb
xchg
in
mov
stc
adc
out
mov
aam
sarb
pop
inc
cmc
test
mov
data16
push
jae
xorb
jbe
add
call
subps
pop
ljmp
jno
sbb
pop
cltd
xor
dec
cmpsl
xchg
adc
mov
pop
test
cmpb
mov
mov
inc
push
jne
test
push
movsb
xchg
mov
xchg
or
dec
inc
mov
fdivs
ficomps
jo
and
mov
fstl
cmpsl
lahf
sbb
jo
pop
inc
test
push
mov
cmp
push
fidivs
xchg
dec
pusha
cmpsl
jmp
stos
fmul
mov
out
sbb
pop
dec
jno
mov
out
imul
xchg
xchg
pop
pop
scas
push
sbb
jo
sub
cmp
insb
iret
pop
or
aaa
jo
and
and
orl
call
sub
mov
sub
xor
cmpsb
ds
test
jmp
inc
aaa
pop
mov
sbb
push
cmp
cli
jo
push
and
and
jns
inc
mov
cmpsb
jp
dec
cmp
fcomi
imul
test
shll
or
jo
rorl
int3
fwait
xchg
dec
push
and
clc
icebp
jp
imul
jmp
xchg
add
mov
mov
mov
mov
jmp
push
inc
loope
out
shll
movsl
xchg
mul
adc
adc
arpl
lods
dec
aaa
pop
mov
out
aam
jmp
pop
xor
andl
sti
hlt
jne
js
std
int3
popa
aas
insl
or
cmpsb
mov
loopne
pop
in
jge
sbb
aam
repz
sahf
fwait
inc
cs
mov
adc
es
inc
or
stc
rol
mov
cwtl
push
nop
sbb
mov
sbb
lahf
fucom
mov
mov
aas
push
inc
ljmp
jbe
out
mov
dec
push
inc
out
push
jg
or
xchg
or
mov
fistl
mov
dec
arpl
jno
cmp
out
sbb
cwtl
test
mov
lds
xchg
nop
in
sbb
mov
sbb
sarl
ds
push
shll
fcomps
xchg
and
negb
sti
xchg
sub
xor
and
lea
jbe
out
loop
jns
in
sub
adcb
mov
push
pop
pushf
cli
xor
mov
je
pop
movsl
sbbl
pop
lret
mov
dec
cmpsl
scas
jl
mov
pop
out
and
sub
insb
jecxz
notl
jmp
jbe
jbe
rclb
pop
cmp
fsubs
cwtl
jecxz
push
pop
cmpsl
mov
lcall
mov
dec
cmp
xchg
addr16
testl
xchg
repnz
xchg
call
stos
into
adc
popa
sbb
cmpsb
outsb
clc
rolb
push
mov
ljmp
xchg
sub
sbb
dec
add
lods
and
xchg
push
and
or
sub
adc
js
jae
mov
mov
daa
cmp
pop
xchg
mov
and
push
fnstsw
test
xchg
inc
lea
test
aam
stc
cmp
adc
push
pop
adc
outsb
add
bound
jle
repnz
adc
cmp
xchg
cmp
xchg
jmp
fwait
add
jns,pn
lock
pop
inc
sub
xchg
cmc
out
mov
jo
repz
hlt
mov
jp
mov
xchg
fistpl
sahf
cmpsb
pop
jecxz
jns
jl
addl
mov
outsl
fcomps
dec
aaa
sahf
adc
cmp
loopne
ret
cli
stos
leave
and
ret
imul
int3
push
pop
pop
jnp
pusha
cmpsl
repz
in
pop
xchg
fcmovu
mov
repnz
pop
xchg
push
jo
xchg
xor
jb
sti
xchg
in
in
mov
and
xor
ret
sbb
dec
fisttps
stc
push
dec
dec
xor
pop
mov
add
cs
push
popf
loop
xor
mov
aam
mov
cmpsl
jl
fisubrl
adc
xlat
repz
adc
mov
or
movsl
jge
dec
mov
pop
addl
outsl
mov
jmp
or
jg
cmp
daa
test
nop
pop
ja
sub
cli
insl
lret
sub
enter
call
stos
out
cmp
into
cmpsb
insb
mov
push
shlb
filds
dec
lods
mov
mov
sbb
icebp
sti
iret
xchg
imul
rorb
mov
aad
mov
dec
dec
fstpl
into
in
dec
insl
push
sahf
bound
pushf
push
rclb
add
cs
jae
push
and
out
or
sbb
testl
lahf
pop
insl
out
je
jb
loopne
push
ret
sahf
test
sub
ret
int
notl
xchg
mov
pop
push
sub
or
fs
cli
push
dec
push
jo
sbb
repz
jno
cltd
mov
rorb
out
sub
ds
add
or
out
outsl
inc
inc
xor
mov
int
mov
xchg
nop
fcoms
sub
jp
fimull
insb
sbb
mov
lcall
xor
jne
daa
es
and
xor
push
pop
in
xor
mov
enter
adc
mov
int3
mov
arpl
push
pop
unpcklps
and
ljmp
adc
sbb
fdivrl
xor
jne
xor
fnstcw
mov
sbb
in
aaa
leave
fwait
xchg
inc
xor
out
bound
add
pop
cltd
cmp
int3
sbb
push
fcomps
out
fcmove
cs
jp
mov
mov
adc
hlt
stos
xchg
test
gs
lds
and
jnp
push
mov
outsb
dec
xchg
repz
int3
stos
orb
popa
dec
dec
ss
mov
dec
out
cmp
jmp
add
ficomps
hlt
js
loop
push
dec
jmp
xchg
mov
or
pop
out
mov
shrb
inc
inc
adc
mov
faddl
or
in
inc
sbb
xchg
daa
lret
lds
movsb
aam
ret
xor
cwtl
xor
dec
adc
dec
jbe
test
notb
mov
mov
pop
cmp
and
movb
in
inc
test
sbb
out
faddl
dec
sti
push
jae
pop
xchg
mov
int
dec
dec
sarl
test
and
nop
mov
fldt
addb
js
shll
xor
cmp
pop
loopne
jnp
xchg
xchg
push
xchg
popf
fwait
jbe
loope
hlt
push
adc
inc
in
jno
cmp
cmp
add
and
jmp
mov
sbb
test
idivl
jle
rcr
fidivl
ds
pop
shll
notb
inc
fmulp
test
insb
mov
fldt
jbe
xchg
mov
and
loopne
xchg
sub
jns
fwait
ja
scas
lcall
les
ficoms
iret
mov
aad
mov
mov
sub
shrl
adc
sbb
push
les
xchg
lea
test
ja
in
test
in
jmp
cmp
in
fsubrl
ret
sub
inc
push
mov
xchg
pop
and
jg
hlt
sbb
inc
ja
lret
lods
imul
dec
push
cli
pop
cs
pop
push
cwtl
inc
xchg
aas
int3
jne
cmpsl
imul
or
mov
push
adc
inc
dec
or
popa
jmp
inc
daa
imul
pop
xchg
and
fsubs
mov
jno
mov
daa
bnd
xchg
notl
iret
out
push
enter
std
notb
dec
das
pop
mov
cmp
cmpb
sbb
stos
sub
aam
push
mov
xor
jle
fwait
cli
and
sbb
or
dec
jmp
in
iret
daa
idivl
cmp
out
xchg
outsb
popf
xor
and
and
and
jmp
movsb
fistpl
sarl
push
pop
imul
and
lods
xlat
xchg
mov
mov
das
cs
xlat
dec
sti
push
pop
leave
call
xchg
nopl
and
je
hlt
mov
gs
cmc
popf
adc
into
ja
xrstor
les
xor
cld
mov
jg
mov
loop
xchg
xchg
dec
mov
or
ljmp
pop
mov
dec
enter
pop
adc
aaa
out
xor
loop
mov
in
push
mov
std
xchg
test
popa
shlb
add
push
int
insl
test
test
inc
repz
and
aas
and
negl
ljmp
mov
cmp
ja
arpl
stc
xchg
jecxz
dec
push
gs
andb
arpl
mov
sub
add
stos
xchg
jle
or
cmp
pop
in
adc
cwtl
hlt
cmp
bound
inc
cltd
mov
push
push
pop
es
les
gs
in
fdivrl
je
jp
loop
out
and
int3
add
popf
or
mov
setnp
jbe
push
xchg
add
or
push
jle
adc
adc
mov
xor
push
out
sbb
icebp
xlat
add
addl
das
ror
jo
or
sbb
dec
inc
mov
insl
pop
add
sti
in
add
adc
outsl
clc
jmp
pop
sub
jb
add
jns
int3
je
inc
dec
lods
fisubs
jo
dec
push
rcll
cmpsl
mov
mov
xlat
pop
aad
lret
mov
pusha
out
mov
cs
iret
sbb
out
sbb
rclb
jno
and
lods
daa
stc
aam
mov
or
stc
xlat
sbb
jmp
dec
mov
push
inc
test
rcll
ret
fistps
lds
mov
bound
xchg
sub
sub
fdivrl
cmc
xchg
and
xchg
pop
mov
xor
adcl
cmpsb
mov
cs
test
sahf
icebp
call
inc
pop
and
ss
inc
xchg
mov
mov
adc
xor
lds
jbe
push
imul
test
loopne
adc
push
iret
test
or
push
and
push
xor
mov
jp
dec
fdivrl
imul
adc
adc
push
push
push
jecxz
notb
adc
xchg
jmp
jmp
lea
lret
enter
pop
xchg
js
inc
mov
cmc
sub
push
sbb
scas
add
mov
dec
jbe
jge
push
jae
xchg
mov
flds
xor
or
dec
repz
inc
outsb
cmp
shlb
rorb
lods
aas
pop
mov
fdivs
pop
rorb
xor
mov
jge
sub
gs
cmp
xor
cmpsl
sar
dec
cld
xchg
xchg
mov
inc
cmp
push
mov
ret
std
cmp
leave
cmp
in
mov
push
adc
mov
insw
test
mov
in
in
cmpsb
icebp
jecxz
add
lds
mov
negb
fimuls
stos
daa
adc
fwait
mov
and
jmp
xchg
repnz
xor
lcall
fisubl
icebp
pop
daa
add
push
and
xchg
sbb
mov
adc
rorb
inc
fisttpl
and
cmp
pop
das
mov
add
lret
cmc
push
sbbl
movsl
pop
xchg
popa
push
out
and
adc
fdivrl
inc
mov
jb
fwait
outsl
mov
mov
mov
dec
inc
test
loop
mov
push
and
pop
loop
clc
jbe
push
stos
pop
inc
loope
pop
test
mov
clc
adc
mov
mov
and
jp
pcmpeqw
fwait
jns
push
ret
shlb
mov
push
insb
ds
enter
pop
lahf
lods
sbb
add
sbb
adc
dec
cmpsb
and
sbb
test
mov
mov
imul
push
ja
xchg
movsb
mov
cld
mov
sahf
mov
sbb
aas
cmp
mov
jmp
rcl
mov
push
push
test
fs
sub
mov
cmp
push
insb
mov
mov
fcoml
sbb
or
lods
lahf
adcb
pusha
rcl
inc
sub
out
xchg
jge
ret
roll
cmp
inc
xor
aad
sub
stc
inc
dec
in
roll
adc
or
dec
pop
push
ret
mov
xchg
mov
jmp
clc
jne
fbstp
mov
outsl
repnz
popf
mov
mov
push
fsubrl
jno
movsb
push
fldt
mov
inc
out
mov
mov
pop
jge
mov
inc
mov
jns
inc
dec
test
jno
test
push
push
test
outsl
lods
stc
xchg
jg
scas
and
push
sub
xor
lods
or
adc
mov
ret
outsb
inc
mov
je
or
or
pop
cmp
xchg
gs
or
jge
sub
add
cld
mov
lods
test
mov
movsl
orl
cld
ds
fmul
imul
jnp
sbb
out
andl
fs
fsubrp
push
pop
aam
shl
stc
lret
xor
sub
dec
pop
cmpsl
rcll
sbb
xchg
rcll
jne
jo
bound
xchg
mov
lock
cmp
and
sub
out
ljmp
jl
stc
mov
js
mov
das
mov
sbb
lods
testl
sub
inc
sbb
shrl
pop
mov
push
inc
add
push
add
push
in
push
cmp
mov
xchg
inc
fs
in
movsl
sarb
jg
cmp
and
push
xchg
xchg
or
pop
int
test
mov
jns
dec
inc
popa
or
xchg
repz
mov
dec
mov
mov
pop
and
mov
inc
in
int3
call
fdivrl
inc
pop
mov
sub
mov
rclb
push
pop
aaa
insl
dec
and
dec
push
test
adc
pop
ret
and
pop
xchg
or
inc
iret
sub
test
inc
sbb
pop
arpl
push
xor
add
push
push
lock
je
cmp
xchg
mov
push
int3
mov
cmp
stc
stos
inc
outsl
xor
and
pop
and
and
stc
in
not
test
iret
and
and
xchg
adc
jo
movsl
cmp
leave
jo
aas
ss
push
or
jbe
insl
stc
fistl
adc
loop
insb
in
mov
imull
aam
test
jmp
lds
adc
sbb
xor
xor
cmp
push
mov
clc
sub
pop
xchg
stc
xor
mov
pop
into
mov
add
xlat
jmp
mov
mov
fnsave
ss
cmp
adc
std
push
ja
adcb
jge
data16
js
push
jmp
in
es
shll
adc
lcall
mov
pop
xor
xor
insl
in
pusha
xchg
push
in
mov
cmp
fucom
xor
ss
cmp
or
filds
sub
icebp
bound
pushl
push
fistpll
and
lret
lds
dec
mov
aas
leave
sub
cmp
xchg
in
lods
and
and
imul
mov
cmp
xchg
movsl
mov
sahf
mov
cmpsb
loopne
lods
inc
out
add
iret
jnp
xorb
sub
lahf
jecxz
stc
iret
lock
add
stc
jbe
cld
jns,pt
rol
push
xor
mov
mov
push
mov
and
xor
out
leave
adc
push
mov
sahf
cmpsl
mov
mov
push
inc
inc
popa
sub
inc
fisubrl
push
pop
lods
or
ss
negl
pop
sar
xor
mov
stc
or
and
sub
fnstcw
sub
sarb
imul
js
inc
xchg
movsb
repz
icebp
setne
scas
mov
add
jmp
pop
lcall
push
sbb
test
or
xchg
add
ret
fisubrl
and
imul
in
mov
push
stos
aaa
fidivl
inc
std
insl
jb
and
lock
xor
xchg
adc
mov
dec
push
dec
jns
adc
aam
and
and
cmp
dec
aaa
push
test
xchg
stos
cmp
in
movsl
and
xchg
popa
and
out
rclb
or
pop
fsubp
stos
fs
loop
ja
js
idivb
jae
adc
fcoms
loopne
xor
mov
sbb
insl
mov
inc
rcrl
dec
out
icebp
leave
stos
pop
inc
jmp
mov
mov
sub
jmp
or
pop
adc
or
cmp
fcomps
hlt
shrl
int3
mov
mulb
xor
lods
mov
adc
lods
and
insb
in
dec
mov
sub
mov
inc
mov
rolb
lahf
cltd
loop
dec
das
mov
js
cmp
pushf
dec
push
xorl
sub
xchg
push
rorl
dec
movaps
fldl
ljmp
nop
in
mov
std
xchg
xor
ficoml
xchg
aam
test
push
orl
mov
or
mov
and
cmp
rcll
sub
pushf
dec
push
cmc
pop
jle
or
cmp
cmpsb
lret
divb
push
xchg
sbb
xchg
mov
cmc
mov
in
push
pop
push
out
shlb
test
cli
scas
and
shrb
fists
or
push
pop
mov
inc
pushf
pop
leave
or
xchg
rcrb
ret
fldcw
jne
push
adc
les
outsl
or
enter
out
cld
cld
sar
xorb
xchg
mov
mov
loope
leave
lea
adc
xchg
insb
clc
inc
dec
lock
jo
pop
adcb
dec
imul
movsl
xchg
or
pop
ljmp
mov
pop
inc
mov
lret
inc
mov
inc
push
inc
mov
xorb
mov
js
hlt
movsl
ror
push
mov
pusha
xor
mov
mov
xor
add
jge
jecxz
test
mov
mov
mov
jmp
mov
mov
das
cltd
sbb
sbb
mov
out
cmp
loop
mov
adc
stc
loop
inc
inc
or
ss
push
mov
jmp
popa
adc
push
adc
es
xor
sub
les
shlb
je
mov
insl
call
push
xchg
and
inc
out
mov
stos
movsb
sub
mov
dec
mov
pop
rcrb
pop
add
fsts
lea
test
stc
movsb
or
in
push
loop
cmc
mov
or
inc
pop
aaa
cmp
xchg
xor
inc
cmp
ja
out
xlat
jmp
lea
dec
aas
in
lret
cmp
ret
stos
ficoms
pop
xchg
mov
fwait
rorb
test
enter
cmpsb
mov
in
mov
out
shrl
mov
dec
not
sub
jp
scas
mov
or
and
push
cmc
imul
jl
sbb
repz
sahf
aad
imul
lret
push
inc
push
xor
fisttpll
cmp
int3
les
mov
sbb
jno
jns
imul
flds
push
lods
outsb
imul
cmpsb
push
cmp
mov
lds
and
xor
mov
or
enter
cmpsb
lea
mov
push
aam
repnz
std
movsl
ljmp
subb
in
and
insl
sbb
lcall
or
lock
jno
xor
popa
sbb
scas
push
fldt
push
xor
fmul
and
clc
mov
call
push
and
test
cmovne
pop
popf
push
lahf
mov
insl
js
push
jecxz
mov
xor
aad
repnz
test
mov
mov
dec
sbb
ret
sub
je
ja
and
dec
pusha
mov
cwtl
cmpsl
das
add
lds
ds
lock
out
pop
and
repnz
push
aas
ss
xchg
xchg
xor
scas
or
mov
push
int
out
add
jge
sar
cmp
xchg
push
xorl
push
movlhps
lods
inc
and
lea
xor
or
mov
out
mov
and
xchg
iret
pushf
adc
and
jo
mov
ss
fs
sbb
shl
loop
xor
in
rclb
push
js
cmpsl
mov
xor
jp
xchg
dec
movb
fsts
gs
mov
insb
or
cmp
push
cmc
jno
pop
loop
add
xchg
sub
jmp
jl
js
mov
in
mov
repnz
fldcw
mov
pop
pop
dec
fcomi
fidivs
sbb
mov
mov
aaa
ret
adc
dec
add
ja
cmp
lcall
pop
sub
fsubl
mov
mov
lcall
sbb
data16
mov
mov
or
hlt
jne
and
stc
mov
js
sub
cmp
pop
mov
leave
insb
cs
popf
xor
jne
push
mov
addr16
cld
gs
fucomp
jl
or
dec
ljmp
lret
pop
sbb
sub
loope
push
aad
mov
pop
xlat
cmp
mov
adc
mov
imull
test
fisubl
aas
cmpsb
sbb
or
test
rsqrtps
cld
js
imulb
mov
pop
outsb
pop
jp
xor
in
lods
cli
pusha
test
cmpsl
lds
inc
shrl
jnp
es
xchg
scas
das
in
out
mov
and
cwtl
cmp
repz
mov
ljmp
mov
xchg
or
cltd
xchg
mov
xchg
jne
stos
out
inc
mov
mov
jno
cmpb
lods
test
pop
xchg
sbb
ret
inc
out
sub
or
fbstp
jg
icebp
mov
out
cmp
je
mov
in
aad
push
jle
test
rcrb
mov
rol
arpl
cwtl
cltd
cmp
int
das
and
stc
adc
insb
out
mov
cli
aam
jae
sbb
shlb
mov
add
lcall
xchg
es
fcomp
icebp
mov
imul
xor
sub
subl
cmpsb
push
xchg
push
sub
mov
loope
adc
sbb
xor
sbb
stos
dec
int
lods
mov
dec
bound
jb
mov
add
lahf
adc
xchg
jne
js
je
lods
mov
sub
jne
notb
js
jno
mov
pop
sub
cld
mov
xchg
mov
inc
aam
sti
jmp
stos
addl
jne
loopne
inc
gs
jl
test
inc
cltd
fwait
adcl
dec
aad
mov
sub
adcl
into
mov
inc
mov
mov
les
lock
dec
outsb
test
inc
rcrb
pop
push
js
test
pop
push
shrl
enter
pop
jmp
shlb
imul
inc
loopne
and
bound
pushl
mov
sti
movsb
xchg
inc
and
sub
in
mov
cmpl
cmp
sub
sub
and
push
repz
mov
jb
mov
and
inc
addr16
loopne
dec
cs
xchg
mov
ja
ja
scas
popf
test
cmp
out
sub
test
sar
lea
leave
rclb
inc
pop
bound
scas
loop
int
mov
cmc
cmp
ret
testb
or
lods
rol
xchg
orb
mov
popa
jecxz
add
cmp
hlt
sbb
lret
js
jmp
sbb
inc
jnp
out
sbb
lods
add
ss
es
pushf
rcr
xor
inc
mov
shrl
xchg
test
and
test
xchg
movsb
ret
out
and
lcall
xchg
inc
dec
mov
sbb
jns
mov
push
pop
rdtsc
lds
movsb
cmp
lret
cmpsb
das
sti
cmp
xchg
pop
pop
ficoml
data16
xchg
xor
xchg
sbb
stos
movsl
dec
rcr
lret
sub
cmp
mov
imul
out
in
adc
jb
or
dec
push
cmc
mov
sub
push
js
push
push
jno
popa
or
int3
inc
out
xchg
adc
add
sbb
fistpl
cmovg
ss
cmp
pop
aam
cmp
xchg
sbb
stos
pop
mov
aad
mov
gs
pop
fisubrs
inc
pop
inc
inc
shrl
in
imul
repz
xorb
xchg
movsb
and
loope
das
sbb
or
in
or
xor
jno
push
mov
stc
icebp
arpl
popa
fidivrl
dec
stos
and
dec
jp
mov
pop
xor
jp
mov
jp
jl
push
ss
imul
and
cmpxchg
cmp
xor
lock
fs
mov
jl
jno
cmp
pusha
out
xchg
xor
xchg
jae
lret
dec
xor
mov
mov
add
mov
shlb
pop
call
movsl
pop
mov
iret
mov
insb
or
push
mov
xlat
mov
mov
fisubrl
mov
stc
add
ds
sbb
enter
jl
cmp
stc
inc
lea
idiv
out
xchg
sub
sbb
je
lret
aas
dec
dec
mov
cmp
dec
push
cmp
jbe
lds
adc
and
lods
test
mov
int3
hlt
lahf
or
aad
pop
bound
inc
pop
mov
out
cmp
push
mov
inc
jns
xchg
ret
and
mov
push
pop
push
dec
lret
cmp
mov
sub
fstpl
mov
xor
hlt
loopne
ret
test
clc
pop
xor
popf
in
xchg
lods
inc
loopne
orl
jmp
sbb
nop
clc
pop
mov
xchg
enter
inc
iret
scas
push
fisttps
test
leave
out
mov
pushf
sub
sbb
dec
lods
push
jns
pop
and
dec
xor
xchg
insl
pop
jae
dec
fistps
push
fnstcw
mov
xchg
pop
sbb
dec
sbb
inc
adc
shll
fcmovnu
inc
ljmp
jno
and
outsl
pop
imul
or
cwtl
scas
push
aam
jl
loop
fidivrs
xchg
adc
test
cmpsb
out
mov
das
sbb
fidivl
into
scas
std
ret
dec
call
les
dec
cmp
mov
call
loop
icebp
add
ficomps
jns
aas
mov
inc
jne
mov
jge
mov
inc
imul
shrb
mov
push
add
xchg
mov
ret
pop
call
aam
rclb
into
addr16
and
jp
inc
cli
push
stc
cli
push
je
dec
and
popf
mov
jns
fwait
push
testb
mov
mov
xor
or
mov
subb
jge
pop
insl
lahf
jl
xor
imul
ss
movsb
test
imul
dec
int
insb
mov
leave
dec
mov
aaa
lret
sti
sub
je
in
inc
loope
dec
mov
loope
xor
mov
lea
test
mov
push
subb
in
lahf
dec
test
jnp
and
jmp
movsb
pop
stos
rcll
mov
das
shlb
and
aaa
dec
mov
mov
xchg
lretw
cmpsl
sbb
sbb
sti
sbb
cmpsl
jnp
mov
dec
push
mov
clc
mov
cmp
mov
push
dec
repnz
add
add
shl
pop
shl
stc
add
jno
in
mov
inc
aas
imul
lock
jp
imul
cmpl
inc
push
sub
xor
adcb
push
sub
inc
jecxz
mov
dec
cld
jne
and
mov
inc
xor
mov
imul
fstps
xchg
pop
movsl
inc
lcall
loopne
out
js
lret
loopne
lea
mov
and
pop
jp
add
mov
test
inc
and
jae
and
mov
pusha
inc
add
push
jbe
lock
int
push
inc
adc
pop
inc
xchg
mov
cmp
jmp
adc
out
push
and
rorl
loope
add
pop
push
pop
addr16
mov
mov
stos
fisttpll
imul
arpl
dec
xor
rorl
mov
fistps
out
push
outsb
jmp
dec
test
jno
or
std
enter
pop
fstpl
fiadds
jg
sub
inc
or
arpl
xor
pop
dec
mov
inc
cltd
sub
jle
inc
sbb
shlb
mov
mov
xchg
pop
iret
jle
mul
in
cld
jae
xor
and
dec
sbb
int3
or
rcll
cltd
and
ja
addl
xor
icebp
fwait
or
popa
pop
in
dec
inc
adc
mov
roll
sbbl
iret
xchg
mulb
addr16
ja
push
xchg
adc
xchg
icebp
jg
push
int
sub
jle
ja
lret
sbb
iret
loopne
movsl
imul
or
jge
inc
or
les
aam
lea
dec
comiss
in
ret
pushf
push
pop
lock
sub
test
pop
pop
pop
imulb
addb
in
fdivrs
sub
insl
in
cmc
xor
inc
push
testb
jmp
adc
stos
jns
shll
test
pop
imulb
popf
ja
jmp
mov
jns
sub
sbb
sbb
loope
sbb
xchg
mov
inc
clc
jg
xor
jle
fcom
cmpsl
mov
aas
js
jmp
cmpsb
dec
pushf
jae
mov
jae
mul
or
jp
cmpsb
mov
popl
repnz
pop
stc
stc
call
notl
rcll
fistps
add
push
dec
sarb
adc
imul
or
mov
jp
cmp
cs
jo,pn
pop
lock
cmp
mov
push
addr16
repz
mov
test
push
loope
xlat
stc
cmpsb
cld
push
pusha
adc
pop
ljmp
outsl
jle
sub
cltd
lods
scas
cld
jle
hlt
push
in
mov
jecxz
jp
sahf
icebp
pop
or
pop
fwait
int3
repnz
ds
push
stos
pusha
jp
sbb
sub
push
mov
xor
shlb
dec
movsb
or
mov
pop
xor
addb
push
mov
sub
test
cmp
mov
outsb
cwtl
pop
xor
jmp
mov
sub
mov
stos
jge
xlat
and
pop
or
fdivr
cmp
daa
testl
fldt
jmp
lods
fdivl
out
stos
fisubrs
pop
mov
aas
push
mov
pop
dec
fwait
sub
cmp
adc
enter
mov
sub
xchg
std
push
or
sub
push
dec
lret
lcall
andb
sbb
pop
push
clc
in
test
shll
test
ljmp
jl
push
adc
loope
addr16
mov
lods
cmp
mul
arpl
cmp
fistpll
fisubs
mov
mov
cmp
jae
jl
cmpsl
xchg
test
jg
mov
loopne
sbb
and
pop
push
repnz
out
jo
mov
add
aad
jmp
out
push
adc
les
push
mov
jne
push
mov
jmp
negl
cwtl
je
mov
xor
pop
and
cmpsl
xchg
and
mov
jmp
lcall
xchg
sub
lock
add
mov
mov
sbb
add
imul
bound
add
je
dec
push
out
push
aaa
xchg
aaa
dec
inc
bound
les
std
in
and
pop
fmul
mov
orl
test
scas
cmc
rcr
fstpl
dec
sub
vzeroupper
insl
popl
mov
lret
test
push
jo
ss
dec
push
mov
dec
test
mov
mov
sub
xchg
rorb
out
pop
inc
mov
sbb
lret
loope
and
jb
fimull
add
lea
pop
enter
loop
inc
adc
out
insb
pop
fmuls
sbb
and
add
jnp
xchg
xor
es
push
inc
xor
dec
adcl
out
jecxz
fistpll
addr16
add
pushl
sub
lahf
jmp
dec
xor
mov
rol
xor
or
lods
insb
mov
sarb
or
fadds
push
je
mov
out
jp
xchg
call
out
jp
and
or
shrl
sub
dec
dec
sbb
into
movsl
sbb
push
outsb
lret
xor
sbb
inc
test
pop
push
xor
sub
xchg
adc
cmp
inc
add
les
fs
rcll
js
inc
push
pop
outsl
out
inc
nop
pop
scas
sbb
ret
xchg
fwait
or
and
rorb
cmp
outsb
or
popa
ds
and
sahf
xchg
fnstenv
into
or
push
cmovg
sarb
lock
addr16
sbbb
int3
fsubrs
lcall
aaa
xchg
in
push
cmp
jl
xlat
mov
xchg
mov
leave
jbe
dec
lahf
dec
out
cmpsl
xchg
inc
xchg
jae
lcall
repz
adc
and
ja
push
outsb
cmp
arpl
fisubl
inc
pusha
xchg
cmpsl
or
pop
data16
or
outsl
sbb
mov
test
pop
mov
mov
in
push
shlb
jae
add
aas
sbbl
cmp
jmp
push
lock
daa
mov
gs
mov
mov
cmp
mov
aad
mov
jo
xor
outsl
out
inc
lock
std
adc
nop
test
adc
mov
lcall
arpl
pop
cmc
inc
pop
push
sub
ja
mov
addr16
inc
cmp
loop
clc
lahf
inc
push
push
mov
cmp
cmp
mov
insb
xor
mov
lods
push
les
loopne
les
movsb
cmp
es
add
and
and
data16
pop
mov
cwtl
out
lods
xlat
sub
mov
fistpll
ror
je
and
sbb
and
cltd
shr
in
push
sbb
dec
jo
fmull
lcall
xor
popf
mov
mov
cmpsl
push
push
jnp
add
mov
cli
mov
out
dec
into
or
mov
test
push
leave
jae
jne
in
popa
jns
mov
add
gs
inc
aam
imul
mov
fdivs
or
and
lods
call
imul
negb
xor
daa
mov
int3
mov
cmp
dec
mov
imul
rcll
dec
adc
add
jg
xchg
and
or
cmp
xchg
shl
cli
stos
int3
cmpsl
repz
xchg
sub
and
mov
jp
jb
cmc
lahf
dec
lcall
jmp
adc
je
push
daa
push
lcall
lcall
cld
int3
push
rorb
mov
mov
or
xor
mov
into
and
adc
mov
into
sbb
enter
jecxz
inc
and
neg
rorl
pop
cmp
inc
mov
int3
ds
mov
pop
mov
cmp
or
mov
sub
ss
in
lret
sub
mov
mov
fwait
aad
jns
lahf
cld
xchg
mov
mov
out
aaa
nop
cs
jl
jae
dec
pop
push
push
int
lock
xchg
and
pop
push
jecxz
mov
std
aad
sub
addr16
mov
push
imul
cmc
or
cmpsl
subl
push
cltd
xlat
out
sub
sub
fidivrl
pop
loop
int
sub
push
repnz
popa
jae
pop
dec
push
mov
dec
xchg
mov
ss
mov
push
add
pusha
sbb
ds
cmp
sbbl
xchg
pop
lods
sub
sub
in
ja
imul
mov
mov
mov
xchg
adc
jecxz
push
fwait
mov
decb
push
ja
rorb
pop
mov
pop
sub
subb
movsl
xchg
sti
stc
mov
push
pop
lds
pop
repz
adc
cmp
lahf
repnz
cmp
test
xchg
add
or
mov
sub
pop
push
jnp
test
scas
sti
icebp
inc
push
jge
fwait
test
int3
add
sub
loop
out
fcomi
iret
popa
sahf
mul
jno
fnstenv
fdiv
ljmp
inc
inc
aad
pop
xor
mov
call
int3
sub
jb
xchg
sahf
jnp
lea
xor
mov
inc
sbb
xchg
scas
int3
xor
dec
or
xor
mov
scas
sub
outsl
adc
jg
addr16
mov
push
xchg
lods
or
ret
mov
out
fwait
mov
frstor
nop
scas
sbb
inc
loope
xchg
scas
mov
jb
fwait
mov
mov
add
push
mov
xor
xor
or
mov
xor
fstpl
dec
fimuls
jmp
and
or
inc
sti
in
pop
lock
sahf
and
xor
jp
push
movsl
sbb
sbb
fbstp
adcb
sti
cld
jb
lods
int3
into
fiadds
push
xchg
add
pop
sbb
mov
or
outsb
jnp
loopne
sbb
inc
jle
stc
inc
popa
rol
xor
xchg
cld
mov
push
push
sub
lods
xor
xor
xchg
inc
movsb
push
lea
mov
or
popa
inc
adc
xchg
push
shll
mov
fstp
rcrl
sbb
out
push
mov
jne
or
push
xor
call
cmp
fcmovnb
xchg
push
or
dec
cmpsb
mov
mov
fsubrp
xor
jb
xchg
mov
mov
int3
scas
xchg
aam
insb
mov
and
xor
ja
stos
mov
cmp
sbb
mov
sti
adc
call
pop
sbb
jmp
xchg
shll
mov
scas
arpl
fisubl
addr16
cmp
add
lcall
pushf
inc
or
cmp
mov
stos
cld
jecxz
movsb
movsb
mov
pushf
mov
lock
in
fldl
or
shrl
pop
mov
sbb
lahf
lods
push
lods
in
mov
inc
mov
sub
out
push
data16
xorb
movsb
gs
cld
ljmp
loopne
jnp
fwait
pushf
jo
sysexit
sti
in
std
nop
pop
sbb
mov
sbb
pop
jnp
xor
jle
add
xchg
xor
jo
cmc
push
jne
xchg
out
rolb
repz
outsl
or
out
divl
or
les
cmc
jp
dec
lock
in
adc
dec
scas
adc
divb
sti
das
dec
testl
out
lock
mov
dec
aas
jne
outsl
mov
push
scas
mov
mov
xchg
or
mov
ret
aaa
xor
cmc
mov
dec
scas
xchg
cmp
mov
and
xor
sub
es
and
mov
push
jo
lods
inc
dec
ljmp
and
push
push
jnp
cmp
mov
or
jl
or
xchg
cmp
fdivl
into
lret
int3
xor
icebp
add
lods
adc
sahf
fidivrs
lea
jne
push
xor
test
popl
pop
andb
std
loopne
movsl
das
pop
mov
rclb
out
daa
test
jnp
das
mov
clc
pop
or
cmpsl
push
sub
fs
cmp
pop
or
outsl
popl
add
sbb
jle
lods
sbb
lcall
pusha
jns
stos
rclb
dec
ja
repnz
out
es
outsb
cli
push
adc
cmpsl
out
jp
pop
test
xchg
push
jge
data16
fcoml
lock
mov
xchg
add
adc
out
stc
bound
into
sbb
xor
int
rcrl
xchg
adcb
adc
fcoms
jno
ja
mov
lcall
aas
mov
adc
xchg
hlt
loop
xchg
aad
cmp
stc
lea
cmp
adc
fildl
hlt
pop
ror
pop
mov
add
pop
jae
ret
ret
and
jns
mov
movsl
adc
push
enter
popa
mov
and
pop
mov
enter
lods
xchg
movsl
aad
in
lods
in
add
dec
cli
adc
jmp
dec
push
xchg
mov
fs
dec
push
and
jnp
out
adc
add
arpl
xor
mov
cmp
sub
rcrb
lock
xchg
daa
iret
mov
cmp
jmp
pop
repnz
out
ret
or
fdivr
fs
lret
fstl
pop
dec
xor
push
sbb
pop
fwait
and
fs
pop
jae
orl
insl
iret
in
lcall
mov
jne
adc
daa
inc
push
sbbb
imul
shr
fbld
imul
or
cmp
push
push
adc
dec
and
addl
mov
or
cli
insb
negl
mov
mov
insl
fidivrl
sub
adc
pop
inc
jmp
and
bound
cmp
sbb
push
imul
mov
je
mov
xor
testb
jmp
aas
mov
inc
out
es
xor
out
lcall
fcompl
test
fidivrl
out
out
insb
pop
jb
adcb
mov
lret
std
sbb
enter
sbbb
sarb
jae
jle
and
pop
push
jp
in
cmp
daa
addb
dec
mov
pop
xchg
sub
jl
or
push
cwtl
adc
movsb
movsl
in
outsl
push
push
adc
call
or
jp
push
ja
sbb
mov
jo
add
and
outsl
adc
push
mov
cmp
fstl
ret
add
mov
or
test
inc
pushl
pminsw
int
aam
stos
int3
sti
mov
sbb
lods
sbb
dec
and
dec
jmp
jo
in
adc
ds
jg
sbb
and
push
lea
in
jbe
xlat
jecxz
or
cmc
jns
orps
gs
fisttpl
outsb
mov
or
rep
std
cmpsb
mov
fadds
cli
mov
push
jmp
sub
dec
xor
fscale
pop
mov
fst
lds
adc
push
idivb
adc
mov
mov
xchg
mov
addr16
lret
xor
dec
xor
push
das
xorl
aad
and
jmp
adc
cmpb
push
cmp
mov
xchg
pop
push
shrb
inc
add
push
mov
jae
push
mov
aam
push
cltd
cmpsb
in
mov
push
pop
cmp
adc
add
imul
and
add
inc
movsl
adc
pop
and
push
push
dec
jmp
or
mov
cmp
imull
push
xor
dec
mov
loope
jp
pop
insb
das
movsb
mov
adcl
fwait
and
cmp
je
aad
jle
pushf
cmp
and
xorb
adc
adc
fstl
push
rcrb
andl
adc
je
cld
scas
call
add
call
push
cwtl
mov
xchg
cmp
pop
sbb
mov
aad
push
dec
aaa
pop
adc
inc
pop
mov
test
or
mov
aad
inc
xor
ficoml
xchg
mov
mov
sbbb
push
orb
inc
mov
xchg
jbe
jecxz
arpl
xorb
dec
sub
mov
fwait
xchg
mov
or
in
push
lds
inc
xchg
push
and
mov
inc
lcall
sahf
mov
jnp
add
xor
lret
insb
dec
test
adc
dec
roll
cli
jne
call
in
add
imul
sbb
movaps
sbb
arpl
jns
push
dec
mov
shlb
sub
shl
adc
cmp
add
sti
cmpsb
sbb
hlt
jmp
sub
roll
and
movsl
sbb
xchg
insb
pop
lea
imul
bound
inc
aas
sarb
and
dec
rcll
jo
sub
in
inc
loopne
cmpsb
aad
fstl
cli
add
xlat
xlat
loopne
into
push
jmp
lods
push
outsb
insb
fidivs
rcl
cltd
mov
xchg
fsubr
out
lcall
adc
loope
cmp
pop
in
rorb
fwait
add
addl
ja
jbe
adc
mov
xor
jge
push
inc
jb
add
pusha
jnp
jg
fsts
adc
ret
outsb
cwtl
jo
fs
sbb
xor
and
out
jo
ja
dec
std
sarl
jmp
mov
fs
pop
shl
xchg
aad
push
in
push
sbb
adc
orl
test
jmp
jns
test
aaa
jg
dec
jnp
xchg
pop
shll
sub
pop
das
imul
fadds
jns
test
icebp
push
scas
loopne
cmpsl
xor
mov
int
xchg
dec
xchg
pop
in
pop
inc
idiv
ja
mov
out
jne
sub
jno
mov
scas
rorb
sbb
sarb
jle
and
inc
push
adc
insb
pop
xor
orl
pop
mov
xor
or
push
fildll
fwait
movsb
and
dec
mov
jle
and
sti
loopne
rcll
mov
dec
xor
inc
idivl
pusha
mov
fmul
in
mov
xor
mov
cltd
lret
clc
cmp
in
xchg
add
dec
add
jl
xor
jmp
lods
xchg
movsb
add
mov
dec
jb
into
mov
popa
push
iret
nop
ja
ljmp
mov
aaa
cmc
sub
stos
ret
mov
incl
mov
pop
push
outsl
arpl
outsb
or
dec
mov
xor
mov
lret
jmp
xchg
or
pop
fsts
dec
add
cs
dec
arpl
stos
stos
mov
in
int
ror
andb
mov
push
dec
push
mov
inc
fisubrl
cmpsb
or
imul
inc
into
xchg
fcompl
dec
or
jecxz
sbb
gs
adc
popf
cmp
lods
je
negl
or
push
lock
mov
pop
push
arpl
jnp
push
arpl
adc
adc
cmc
out
jmp
jns
xor
ficoms
adc
ja
clc
jo
and
pushf
movsl
push
pop
add
pop
adc
aad
pushf
mov
cmp
ret
daa
mov
mov
sub
mov
andl
cmpsl
jb
dec
fwait
mov
lock
mov
sbb
and
xchg
js
or
xchg
push
mov
rcrl
push
mov
mov
les
loopne
adc
or
out
xchg
ljmp
push
mov
sbb
bound
and
repz
inc
add
std
mov
cs
xlat
mov
mov
mov
mov
subl
sbb
or
aam
int3
add
icebp
cs
movsl
lret
mov
sbb
sub
xchg
sti
cmp
adc
mov
sub
xchg
aaa
inc
mov
and
mov
cmpsl
mov
shrb
ja
lods
sub
xor
mov
dec
dec
jno
into
or
inc
sub
mov
ret
pop
pushf
mov
dec
push
aas
lret
adc
pop
movsb
movsb
pop
test
shrl
pop
mov
sub
fildll
sar
ljmp
xor
mov
hlt
jg
gs
adc
push
test
loopne
lret
test
mov
mov
or
mov
cmp
mov
pop
pop
jbe
jne
aas
ds
sbb
outsb
mov
pop
and
inc
pushf
jno
into
mov
mov
and
cmp
hlt
vcomisd
cmp
push
pop
pop
dec
xor
lret
or
mov
subb
or
cmp
cmp
cmp
add
mov
sbb
cvtpi2ps
mov
jecxz
pop
std
dec
push
mov
js
cli
xadd
xchg
push
mov
roll
outsl
pusha
ror
ljmp
mov
push
pop
sub
sub
xor
repnz
out
cmp
cli
out
call
pop
xor
ret
mov
ja
repz
ret
std
mov
mov
adc
jecxz
adc
mov
dec
add
sbb
mov
or
pop
cmc
or
sti
mov
cld
mov
test
sahf
push
jecxz
addr16
inc
xchg
jno
clc
in
in
lcall
push
or
test
pop
ds
xchg
pop
sti
add
dec
or
cmpsb
test
dec
repz
stos
or
jmp
mov
imul
mov
sbb
rol
push
pop
adc
in
dec
out
sbb
clc
cmp
sub
insb
sub
xchg
add
add
xor
pusha
add
mov
pop
jle
adc
in
out
xor
bound
lods
mov
cmp
dec
rcrl
push
rcrb
pop
imul
frstor
lcall
outsb
ret
negl
push
add
push
ret
js
jns
gs
scas
xchg
lock
call
xchg
dec
popa
es
in
adc
lret
cmc
loope
xchg
jb
push
pop
shll
subl
xchg
das
rcrl
fcmovb
adc
jl
and
xchg
iret
mov
ja
stos
push
adc
mov
inc
idivb
fwait
inc
mov
adc
pushf
enter
adc
jbe
sti
push
jns
dec
fistl
aas
jp
or
es
roll
rcrl
movsb
or
jae
int3
push
mov
fs
push
insb
add
and
dec
fists
jp
add
imul
inc
lret
mov
fadds
cmp
push
pop
addr16
popf
leave
fmul
mov
cmc
pop
pop
lds
imul
cltd
into
push
dec
pop
out
adc
movsl
xchg
adcl
sahf
sub
inc
pop
adc
je
or
mov
pushf
leave
jae
mov
cwtl
lret
and
imul
xchg
mov
xor
sti
xchg
sub
sub
jne
inc
aas
idivl
jp
imul
insb
cmp
je
int
push
and
push
ja
or
movsb
inc
and
fcom
bound
push
sbb
pop
jnp
push
mov
xchg
cmpsl
mov
xorl
mov
incl
dec
and
fxam
in
lahf
or
xor
fsubrs
sti
mov
sarl
and
lods
popa
test
stos
rcrl
adc
xor
pavgb
and
adc
imul
mov
loop
mov
jmp
cli
mov
cld
add
cwtl
xor
test
xchg
mov
push
in
lock
call
sbb
sbb
dec
cmpsb
cmp
fdivp
xor
push
pop
mov
lds
pushf
pop
dec
in
sarb
fcompl
aad
xchg
adc
loop
mov
out
push
mov
sub
arpl
aad
cmp
addr16
cmp
cmp
adc
jmp
shlb
jnp
fidivrs
push
mov
pop
lock
sbbl
lcall
lahf
or
inc
sub
mov
fwait
loopne
out
pop
clc
dec
ss
cmp
mov
sub
mov
mov
and
test
push
push
push
xor
imul
xor
add
fnsave
mov
push
stc
mov
wrmsr
out
adc
mov
cmp
cmp
cmp
mov
cld
cltd
sub
cmp
cmp
dec
stc
lcall
dec
in
cmp
repnz
movzwl
fsubs
cmp
ja
cmp
jecxz
scas
and
mov
test
push
inc
cld
ds
subb
in
ljmp
andb
jno
ret
test
pop
push
mov
jno
mov
ljmp
sbb
xor
jecxz
add
popf
lds
test
movsl
aam
inc
loope
pop
lds
imul
lahf
in
clc
sub
mov
pop
ret
insb
jg
int3
cmp
add
jl
mov
aas
sub
jmp
lods
pop
xor
arpl
pop
subl
mov
push
dec
lea
sbbb
test
fcmovnu
iret
inc
jae
into
jle
mov
dec
dec
and
push
scas
xlat
mov
push
ret
imul
pusha
cmp
cmc
loope
dec
inc
push
outsl
pop
imul
addr16
jmp
cmp
xlat
cmp
out
mov
rol
mov
outsl
jmp
sub
insl
xchg
mov
lds
mov
dec
in
mov
jle
mov
xchg
mov
xchg
call
mov
dec
xor
outsb
lock
push
lea
lret
andb
dec
test
enter
and
xor
add
mov
js
cld
push
adc
aaa
test
adc
aaa
or
sub
je
sbb
dec
pop
mov
mov
fsubp
mov
inc
mov
movsl
mov
xor
ds
sbb
jge
outsb
push
nop
outsb
in
sbb
rcrb
xor
jo
inc
pop
int
inc
xchg
mov
lods
mov
pop
repz
mov
ss
ss
jbe
imul
daa
pop
mov
and
clc
or
aad
fldt
rclb
pop
mov
fsubrl
cltd
cld
stos
push
cmc
fcmovbe
int
inc
cmp
inc
jnp
mov
pushf
xchg
cmp
xchg
xchg
sti
jns
test
cld
lods
jo
sahf
inc
dec
jmp
gs
mov
dec
fcoms
mov
jne
stc
lahf
and
out
iret
lods
gs
ds
push
inc
adc
cmpsl
cli
inc
jecxz
sbb
and
dec
pop
stos
fisttpll
je
sub
push
out
xor
add
jle
jnp
subb
sbb
aam
mov
fnstcw
push
inc
xorb
add
mov
xor
cmc
jmp
cli
dec
test
outsb
es
lods
dec
xor
dec
lret
mov
add
xchg
pop
mov
sub
pop
mov
pop
adc
cs
in
shl
aas
push
shlb
lmsw
divb
out
jp
mov
mov
lahf
sbb
sbb
pop
add
inc
cs
imul
jmp
xchg
jbe
adc
mov
iret
pop
xchg
aas
sahf
in
mov
rcl
cltd
icebp
or
arpl
scas
nop
or
xor
fidivrs
push
lret
aam
fadds
out
dec
ljmp
jecxz
scas
aaa
int3
leave
sub
sbb
rorl
not
js
stos
pop
hlt
cmpsl
pusha
inc
fmul
mov
xlat
adc
jo
test
xor
cmc
mov
sbb
pop
stc
add
cmc
pop
cmp
addr16
sub
mov
sub
jne
dec
dec
movsb
fisubl
inc
lock
paddusw
mov
jnp
int3
loop
xchg
out
jp
in
inc
and
movsb
div
xchg
push
daa
jecxz
xor
mov
sbbl
push
and
pop
scas
lret
xchg
addr16
in
dec
mov
inc
adc
pcmpeqd
cmp
icebp
lds
push
ficoms
push
mov
js
ds
and
mov
repz
je
fisubrl
daa
ror
pop
and
push
push
or
xor
daa
jle
mov
dec
xchg
cmp
fcmovnb
outsb
xlat
sahf
out
out
test
cmp
sti
cmp
mov
and
pop
mov
xchg
ja
pop
and
test
repz
stos
inc
jge
inc
mov
iret
mov
jl
das
arpl
fdivs
jecxz
cmc
lods
pop
jno
push
out
daa
ficomps
cli
es
mov
mov
sbb
sti
sbb
stc
adcb
xor
inc
rcrb
test
subl
and
notb
addl
adc
fcom
sub
aaa
sub
loope
and
out
or
mov
jne
sub
and
shrl
fwait
push
mov
dec
cmc
dec
nop
scas
jge
into
adc
mov
mov
sbb
decb
lea
sbb
lods
mov
mov
xor
imul
daa
fists
cmp
sub
dec
out
cmp
or
and
or
dec
das
ret
pop
ret
and
xor
fistps
fidivl
fs
cmpsb
jo
outsl
jmp
mov
ss
mov
mov
call
aam
mov
or
and
sub
leave
adc
stos
inc
aad
idivl
push
iret
or
bound
add
jl
cmp
xchg
pusha
sbb
inc
sbb
popa
adc
pop
shlb
enter
inc
add
push
push
shl
cld
pop
cmp
je
pop
dec
sbb
data16
jmp
jge
lret
pop
adc
scas
ret
loopne
out
dec
adc
adc
outsb
andl
ljmp
xor
mov
hlt
in
adc
fistpll
push
in
mov
outsl
or
mov
cld
outsl
inc
cltd
or
xor
jle
lahf
sub
js
jge
cmc
insl
jp
seto
jge
in
gs
push
mov
addr16
jg
pusha
inc
aas
mov
and
jne
lods
ljmp
adc
cmpsl
call
add
and
jbe
add
insb
push
cmc
mov
dec
push
aaa
leave
iret
jno
sub
fstsw
xor
inc
push
imul
inc
addb
add
xchg
add
push
cmp
imul
xchg
scas
jmp
pop
jb
aad
cmp
add
lret
ret
sahf
sub
push
mov
sub
pop
sarl
xor
adc
lock
mov
sub
ret
sub
push
mov
and
js
mov
jb
mov
pusha
cltd
cmp
int
mov
shl
add
push
ds
adcb
ds
aaa
daa
arpl
out
sahf
fcmovu
mov
fidivs
fnsetpm(287
jbe
mov
xor
xor
inc
shlb
movsl
or
out
mov
mov
adc
outsb
es
inc
scas
ret
into
inc
pushf
jg
pop
cmp
push
add
data16
ret
xchg
cwtl
adc
ret
xchg
fcomps
scas
sti
fimuls
mov
add
cmc
jmp
or
mov
inc
fisubrs
es
sub
jns
fstpl
mov
sub
mov
mov
adc
adc
pop
add
dec
mov
daa
or
xchg
cld
or
mov
mov
jb
add
push
ljmp
je
mov
push
fs
push
fldenv
mov
add
rcl
out
add
out
adc
mov
sar
out
dec
testl
shl
sbb
or
jmp
cld
repnz
imul
je
xor
xchg
or
repz
ret
add
xor
sub
mov
in
jo
test
or
cld
insb
flds
faddl
fs
imul
je
lret
enter
adc
mov
aaa
jge
pop
or
dec
aaa
xchg
fildll
fs
push
test
inc
xor
div
test
dec
cmpsb
std
pop
mov
push
or
add
and
mov
jge
pusha
xor
adc
inc
push
cmp
dec
lods
mov
ret
jl
rcll
int3
out
fnstcw
scas
xchg
sbb
xchg
sub
pop
fwait
mov
pop
mov
fidivl
outsl
push
and
push
js
and
ljmp
push
enter
outsl
adc
inc
jecxz
cld
pop
adc
inc
sub
out
js
in
imul
ret
sub
pop
popf
movsb
or
mov
and
lods
jl
cld
jp
push
fwait
and
mov
outsb
test
or
xlat
insl
out
mov
call
jge
stc
jp
pop
pusha
mov
iret
jecxz
ljmp
lods
repnz
andl
push
daa
std
push
cltd
inc
mov
mov
cmpb
stos
mov
or
jne
fbstp
jne
push
pushf
je
orl
xchg
lret
add
xor
dec
movsl
ja
and
lret
in
sbbl
leave
push
loopne
fisubrl
ds
lret
sbb
sbb
adc
out
ret
cmp
push
xor
pop
dec
fstp
and
fs
pop
packuswb
ret
aaa
pop
rol
repz
cmp
push
lret
add
arpl
dec
stos
pop
or
test
test
call
xchg
arpl
repz
jo
pushf
push
mov
jmp
inc
in
iret
inc
cli
leave
mov
lods
pop
rol
xchg
jbe
mov
jg
fidivrl
jge
ljmp
rcrb
test
push
pop
ja
mov
jbe
lahf
xchg
gs
out
xor
in
scas
pop
es
notl
push
pop
nop
shll
push
dec
cld
push
jle
xchg
jmp
dec
aad
and
push
sub
mov
movsb
mov
mov
shrb
pusha
sub
adc
loop
xchg
lret
movsb
lcall
mov
mov
jo
jl
js
jae
mov
scas
sub
inc
test
pop
xor
jmp
xor
jo
mov
add
xchg
fildl
iret
adc
jno
ror
test
pop
adc
cwtl
jne
arpl
call
jl
mov
and
push
nop
sub
and
mov
sub
pusha
xor
and
xchg
dec
sub
mov
and
repz
cmc
mov
out
clc
cmp
xchg
frstor
xchg
stos
push
insb
aad
je
mov
and
adc
jecxz
push
loop
ret
xchg
js
call
jbe
addb
filds
fcmove
pusha
push
addl
add
std
mov
xchg
mov
mov
xor
mov
arpl
flds
dec
add
push
mov
jno
sub
sahf
aad
inc
jb
jbe
jmp
nop
das
dec
mov
movsb
nop
ss
and
pop
cli
in
mov
add
adc
shrl
shrb
in
add
lods
les
cmp
mov
cmpsl
xchg
in
fistps
lea
mov
jo
lods
js
addr16
push
mov
daa
push
sti
jb
cmpl
and
mov
push
mov
dec
pop
sub
jl
jl
push
loop
mov
pop
inc
scas
fldcw
mov
out
aaa
fistpll
mov
xor
dec
mov
mov
cmp
fdivrl
push
mov
stc
xor
aaa
xor
in
jne
aas
leave
imul
out
sub
fsubrl
fucomi
dec
aam
lods
repz
mov
leave
std
clc
xchg
dec
jbe
inc
jns
sub
fpatan
xlat
addr16
push
xchg
ljmp
pusha
lahf
and
les
dec
mov
dec
adc
rcll
inc
outsl
lods
cli
jbe
or
jg
xor
sbb
xchg
cmpsb
nop
and
jle
adc
xorb
xor
in
add
push
pop
inc
es
cmpsl
ss
push
orl
add
and
pop
push
jge
mov
lret
fimuls
fldpi
in
mov
andl
mov
leave
js
dec
cmp
sub
pushf
xor
xor
mov
cltd
push
mov
inc
cmp
ljmp
adc
mov
movsl
push
pop
dec
mov
sbb
lret
dec
int3
xchg
jbe
jne
add
lahf
ljmp
jae
movsb
pusha
mov
imul
lcall
mov
mov
inc
lock
cs
xchg
pushf
mulb
clc
pop
jnp
in
aad
std
pop
rcrl
xor
stos
push
je
sbb
dec
jp
jl
push
scas
jo
aaa
movsl
mov
out
ljmp
jnp
pop
cmpsl
xchg
repz
cli
lret
aad
push
movsb
and
cmpsb
stos
ja
cld
fcmovne
add
xchg
sbb
adc
jb
pop
pop
mov
imul
or
movsb
sbbb
cli
xor
lahf
push
lock
adc
je
inc
fwait
mov
fldenv
movsl
adcb
jnp
addb
adcb
mov
testl
mov
inc
jmp
das
aad
das
scas
into
pop
add
add
pusha
adc
mov
daa
and
and
cmp
std
dec
xor
lock
inc
stc
aam
iret
js
ficomps
jne
xor
insb
xor
loop
cltd
stos
cmp
jnp
outsb
scas
aaa
xor
ja
push
jp
outsb
leave
lret
lcall
dec
push
lahf
jo
or
test
mov
sarb
gs
pop
cmp
cmp
and
cmpsb
jg
mov
mov
stos
xor
or
sub
fdivrs
xor
cmpb
je
outsl
xor
jmp
add
dec
add
add
jbe
mov
test
or
lods
pop
push
push
fmuls
dec
arpl
push
and
mov
add
mov
jmp
push
push
dec
testb
sub
outsb
shll
inc
filds
fisubs
mov
mov
sarl
jge
xchg
or
sub
dec
lock
mov
fldt
in
cmc
ret
das
dec
sub
test
inc
xchg
inc
cwtl
jo
mov
into
adc
lds
mov
daa
incb
pusha
sbb
inc
shlb
xchg
vmaxss
push
fsubl
stc
cltd
add
aam
fnstcw
test
mov
dec
les
dec
push
cmpsb
andb
adc
enter
pop
or
movsb
popa
movsb
dec
nop
xor
mov
push
jl
pop
out
adc
dec
mov
stos
leave
sub
aas
pop
fnsave
mov
pop
jl
mov
les
insl
clc
addb
cmp
pop
or
ret
pop
loop
sub
js
pop
xor
jecxz
rorl
jmp
repnz
cmp
hlt
loope
add
adc
iret
and
in
js
adc
lahf
push
movsl
cmp
nop
shrb
stos
dec
push
lds
mov
das
sub
add
xchg
dec
iret
insl
sbb
lcall
sub
add
jo
scas
sub
lcall
enter
pop
lods
inc
jae
or
xchg
test
gs
lahf
xchg
and
push
cmp
push
sub
adc
gs
or
mov
cmp
imul
inc
sbb
divb
in
lock
outsb
iret
lret
xchg
mov
int
inc
xchg
inc
cli
pushf
out
cltd
test
cmc
mov
xor
xchg
fsubl
movsb
push
dec
sub
movsl
rcl
iret
scas
movsb
jecxz
xor
and
add
aad
xchg
sub
lret
popf
adc
mov
jle
sub
sbb
push
jne
ret
or
push
xchg
and
dec
cwtl
inc
mov
cmp
fsubs
in
sub
out
push
shll
and
adc
xchg
xor
out
outsl
pop
lods
loopne
jbe
mov
dec
pop
pop
cmp
ficoml
push
ficoms
xlat
add
adc
mov
out
pop
inc
enter
sub
loopne
mov
mov
sub
and
iret
scas
lret
jle
aad
pop
push
sbb
popf
and
lcall
nop
and
scas
xor
push
push
sub
cmpsb
xlat
int3
pop
andb
pop
and
mov
pop
sbb
incl
cld
jecxz
xchg
pop
add
jne
adc
pop
xchg
sbb
mov
popf
sbb
jbe
imul
test
sub
cltd
xor
cli
pop
push
sub
push
mov
mov
xchg
fcomps
mov
loope
js
daa
push
inc
rolb
test
mov
push
lods
pop
push
inc
loope
push
mov
dec
leave
cmpsl
dec
jbe
and
rclb
hlt
dec
or
mov
sbb
fisubrl
fiaddl
movsb
jno
outsb
add
ds
xchg
pop
dec
push
mov
cmp
std
jecxz
loope
push
mov
xchg
iret
push
cmp
pop
shll
sti
bound
andl
mov
cli
jle
xchg
sbb
aas
jb
pusha
adc
mov
mov
lock
gs
js
push
pop
push
inc
inc
repz
mov
mov
icebp
xchg
int3
je
test
cmpsb
scas
andl
pop
dec
int
cmpsb
and
adc
inc
in
and
xor
in
dec
daa
cwtl
bound
insb
out
and
xor
outsl
sub
btc
mov
ja
arpl
mov
shrl
and
fs
lret
movsl
cli
leave
dec
sbb
adc
imul
adc
js
incb
mov
imul
or
inc
mov
mov
pop
shrl
ret
std
lcall
xor
jae
xlat
rorb
cmp
cmp
adc
pop
mov
int3
fistpll
rcrl
sub
fildll
mov
dec
and
inc
fisubl
or
rolb
sahf
ds
stc
loopne
in
push
add
push
imul
not
fwait
sbb
mov
fcmovb
jns
call
add
xor
pop
loope
cli
cmpsl
pop
enter
fidivs
es
sub
es
lahf
xchg
push
dec
sub
adc
fldl
lcall
cmp
and
mov
pop
cli
ss
sbb
negl
adc
or
stc
je
add
xchg
in
mov
orl
fsubl
dec
lret
and
xchg
sti
lods
out
cmp
stc
jle
pop
subb
ss
das
xchg
dec
andb
xor
lods
jge
jmp
inc
cld
add
adc
sbb
xor
lcall
jbe
dec
in
inc
std
mov
outsb
testb
cmp
inc
outsb
inc
aam
adc
das
add
push
je
xor
aaa
cltd
mull
push
hlt
test
sbb
cmp
dec
das
call
xchg
sub
xchg
cmpsb
mov
adc
add
inc
mov
movsb
arpl
stos
or
scas
sub
cld
movsb
stos
jmp
sti
push
mov
sub
enter
mov
mov
xchg
sti
les
add
ret
pusha
push
xor
daa
mov
mov
sub
mov
adc
pop
dec
cmp
lock
outsb
inc
mov
int3
and
insb
repnz
insb
loope
repnz
or
movsb
sub
into
dec
lds
add
xor
movsl
into
mov
sub
inc
das
cmp
sub
inc
into
bnd
push
mov
mov
enter
xchg
js
or
pop
and
clc
movsb
pop
and
or
inc
adc
fs
mov
les
jecxz
in
je
leave
imul
push
jne
sub
jns
lret
clc
cmp
push
fdiv
pop
inc
add
rclb
roll
dec
mov
rcrl
dec
push
iret
and
shlb
ljmp
xchg
jno
adc
cli
iret
adcl
clc
mov
sub
sub
pop
xor
lock
insl
lods
or
dec
stc
lods
cmp
addr16
or
sub
pop
pop
push
jno
mov
ret
shll
jmp
pop
push
stos
and
pop
jns
mov
xchg
in
ficompl
fwait
cwtl
mov
aam
add
cmp
sbb
fidivrs
sbb
stc
nop
dec
push
dec
lcall
dec
mov
aaa
mov
data16
insb
fucomi
fsubrl
mov
mov
lock
add
mov
pop
add
adc
fwait
push
jmp
neg
jns
test
mov
add
pushf
icebp
jge
xor
pusha
outsl
sbbl
jno
or
repnz
pop
mov
jmp
cmp
xchg
mov
cli
inc
dec
xchg
mov
outsb
dec
pop
push
test
xchg
mov
pop
cmp
jmp
test
and
sub
cwtl
jne
xlat
pop
xor
push
out
in
fcoms
stos
fsubs
jbe
icebp
push
jmp
pop
out
fists
xchg
dec
xchg
adc
mov
cmp
inc
pop
push
cmp
lods
test
cmp
clc
xorl
leave
sahf
pop
cs
jbe
adc
sub
jle
adc
pop
arpl
inc
jnp
adc
cmp
xor
dec
fists
sbb
cltd
cltd
mov
sbb
dec
add
push
cmpsb
rorl
ror
pop
fwait
dec
dec
mov
cmp
or
dec
aaa
adc
inc
mov
orl
fs
in
mov
loop
out
xorb
scas
cwtl
aad
xchg
les
lret
cmp
fidivrs
dec
dec
es
adc
movsb
pop
pop
cmp
ret
stos
subl
rolb
or
inc
flds
js
nop
xchg
add
dec
inc
lcall
mov
sbb
jmp
pop
clc
xor
sub
push
sub
ja
and
pop
pop
or
outsb
gs
mov
notl
pop
roll
or
pop
or
sbb
inc
adc
int
int
sub
mov
add
pop
sbb
aam
rclb
loopne
jge
ja
fwait
out
mov
dec
in
push
xchg
mov
and
push
into
cwtl
lret
test
std
jb
add
inc
push
adc
adc
cs
and
or
stos
mov
test
push
sbb
shrb
mov
inc
xchg
out
sub
add
pop
jbe
mov
xchg
ret
pusha
and
mov
sti
aas
std
inc
lret
push
lahf
test
xor
xor
aas
mov
das
lods
sahf
scas
stc
shl
xchg
in
sub
imul
or
pop
pop
ljmp
cltd
jo
and
xor
mov
or
add
iret
fcoms
xor
lods
jg
jecxz
adc
movsl
and
lds
cmp
inc
mov
pop
repz
xlat
sub
sahf
hlt
pusha
out
sbb
out
scas
fmul
xchg
dec
arpl
xlat
cmp
hlt
inc
orb
or
dec
inc
cld
lret
jne
cmp
jecxz
scas
loopne
jmp
arpl
test
mov
lods
ret
fbld
dec
fstps
pop
or
jo
mov
dec
pop
mov
xor
dec
and
cmpsl
inc
dec
dec
pop
repnz
leave
lahf
cmc
out
data16
into
clc
in
popf
mov
adc
or
jle
int3
sbb
das
xchg
daa
mov
mov
jbe
jb
adc
std
inc
mov
mov
enter
xchg
pop
xor
xchg
loopne
inc
sbb
pop
test
nop
sbb
xchg
scas
push
cld
push
mov
das
inc
flds
jmp
cmp
xchg
mov
rcll
jp
inc
lods
dec
lret
mov
and
div
mov
sub
xchg
jns
xor
imul
mov
sbb
ret
xor
xchg
inc
lahf
sub
pop
scas
inc
adc
or
mov
mov
rcll
sub
mov
mov
push
mov
mov
add
orb
fcmovbe
rorl
addr16
gs
pop
sub
aas
pop
xor
out
rclb
out
or
add
loope
scas
xchg
jns
jno
push
gs
pop
or
movsl
pop
and
adc
inc
std
int
jle
fwait
and
iret
ds
and
adc
shlb
in
or
sbb
mov
das
or
mov
inc
xchg
cs
add
fcom
mov
jmp
add
aam
jecxz
or
test
fwait
data16
mov
mov
in
subb
jo
push
jle
sbb
stos
jmp
scas
mov
movl
dec
push
hlt
scas
int
les
mov
dec
js
cmp
rcrb
jecxz
int
xchg
mov
inc
mov
out
xchg
jmp
jmp
mov
mov
testb
xor
dec
mov
aas
out
xor
rorb
mov
push
enter
incl
cmc
je
cs
jge
pop
subl
pop
lea
pop
mov
push
cwtl
mov
push
aad
sbb
iret
xlat
push
imul
xlat
jle
mov
outsb
cmp
adc
cmp
shll
mov
ljmp
lea
pop
or
cwtl
scas
into
dec
sbb
cli
adc
xlat
adc
cmp
icebp
imul
or
pop
cmp
cmp
rcrb
jnp
cmpsl
inc
sbb
jno
das
sub
inc
fwait
xchg
lea
not
faddl
mov
sbb
push
adc
outsl
test
pop
imul
dec
jns
cmpb
push
xchg
lret
rol
into
or
jo
push
cltd
push
sbb
int3
sarb
test
arpl
mov
arpl
inc
pop
popf
add
stos
in
ja
sbb
sbb
jle
xor
cmp
dec
pop
cltd
rcll
push
xchg
sub
out
sbb
cld
xchg
add
js
push
std
loope
adc
jecxz
mov
sbb
fisttpll
movsl
pop
loope
xchg
push
out
add
fsubl
loopne
sti
jg
arpl
sbb
xchg
fsub
fxch
rcrl
mov
jg
and
pop
sbb
xchg
cli
add
add
mov
int3
mov
ja
sti
xchg
mov
cmpsb
jmp
mov
jne
adc
fs
xor
add
pop
mov
jecxz
dec
loope
cmpsl
or
repnz
icebp
xchg
sbb
dec
xchg
test
insl
and
push
pop
adc
cmp
jae
movsb
mov
pop
jmp
dec
and
mov
loop
ja
jnp
jge
xchg
jle
sahf
mov
xor
lods
jnp
movsb
call
inc
push
sub
pop
les
test
mov
movsb
jne
pop
iret
addr16
push
mov
mov
and
mov
and
xchg
inc
stos
int3
sub
incl
fs
iret
inc
cmpsb
cmp
cs
cmpsl
push
mov
and
mov
mov
mov
enter
enter
mov
push
xchg
ficomps
mov
xchg
js
xchg
sub
leave
pop
outsl
stos
lret
mov
cmp
push
pop
out
or
in
stc
dec
idivl
jns
pushf
shll
scas
xchg
sub
cmp
cld
lods
add
mov
and
xlat
sub
in
mov
dec
sbb
scas
inc
andl
adc
cmpb
dec
mov
inc
addr16
test
mov
sub
pusha
fwait
inc
mov
cmpsb
or
lock
in
or
outsl
sbbb
stos
mov
jg
jg
add
mov
mov
push
std
add
push
or
popa
in
ss
dec
pop
ljmp
pushf
daa
mov
jo
xchg
loop
or
sbb
pop
inc
outsl
outsb
scas
sbb
mov
or
jb
xchg
nop
aam
mov
jns
fstpl
fucom
test
es
push
push
ds
repz
mov
lea
sbb
pop
repnz
lcall
mov
jl
movsl
fwait
repnz
ret
jo
in
push
push
pushf
into
jle
shl
in
inc
or
pop
mov
lcall
call
jnp
xor
bound
jg
push
sbb
outsl
std
outsl
push
andb
jns
into
lock
mov
outsl
mov
in
mov
xchg
inc
nop
xchg
mov
jg
dec
adc
or
mov
negb
mov
mov
lahf
add
jo
ss
sbb
shll
scas
push
add
or
js
or
arpl
dec
push
mov
push
pop
sub
inc
mov
or
lret
bound
inc
cld
cwtl
cmp
psubb
insb
mov
push
cmp
sbb
fstpl
jecxz
nop
movsb
popa
mov
in
push
and
add
or
push
imul
repz
insb
pop
arpl
inc
pop
xor
xchg
push
sbb
cmp
sub
sub
mov
nop
imul
imul
and
xor
fistpll
movsb
lock
xor
stos
push
fwait
lods
testb
jno
insl
shl
ret
jbe
sub
dec
cmp
insl
nop
scas
mov
testl
mov
ret
inc
jl
insl
or
hlt
nop
sbb
mov
inc
pop
call
lods
testl
push
jnp
dec
test
les
shlb
les
mov
adc
sbb
popf
xor
in
sti
adc
and
sub
mov
ja
popf
dec
inc
and
imulb
pushf
mull
mov
int3
test
ficomps
fcomps
scas
cmpsl
xchg
je
cmp
mov
sbb
hlt
inc
xchg
sahf
xchg
jb
jns
sbb
mov
add
jmp
lods
jge
pop
adc
mov
sub
add
cs
mov
sbb
jno
jge
inc
cmpsl
ud0
mov
xchg
push
mov
repz
adc
in
add
mov
adc
mov
aas
test
or
aam
xor
mov
stc
leave
out
jns
mov
and
rcrb
cld
hlt
mov
cmpsl
mov
iret
dec
xchg
dec
mov
xchg
divl
insl
pusha
sbb
clc
push
mov
ja
mov
jae
adc
push
movsl
cmpxchg
pop
mov
lcall
mov
int
mov
push
popf
pop
lock
sbb
imul
sub
cmpsb
xchg
mov
aaa
and
dec
subb
push
add
sbb
sbb
ja
xor
mov
xor
scas
loope
inc
scas
adc
ljmp
popf
cmp
rcrl
push
sub
insl
and
inc
loope
xchg
leave
addl
repz
mov
enter
out
push
sarl
clc
addr16
and
in
xchg
mov
iret
sub
lea
jge
in
mov
jge
test
jp
pop
adc
jle
bound
stos
inc
insw
xchg
sti
lret
loope
sbb
fcoml
arpl
pushf
pop
shll
push
jge
ds
xlat
dec
outsb
mov
das
mov
pop
fwait
call
adc
insl
les
out
mov
mov
std
and
icebp
pop
xor
inc
lods
ret
jmp
sub
xor
jp
push
dec
lds
stos
jmp
in
dec
push
fnstsw
inc
fnstenv
jge
idivb
xor
mov
sbb
shl
sahf
push
pop
cmc
adc
testl
inc
push
pop
cmpb
scas
cld
pop
xchg
repnz
and
add
jb
push
or
outsb
fsubrl
sti
xchg
mov
repnz
enter
mov
into
adc
sbb
pusha
bound
pop
mov
add
mov
add
shl
mov
inc
dec
outsb
jnp
les
fistpll
cltd
push
cmpsb
cwtl
daa
mov
outsb
mov
adc
gs
repnz
mov
add
imul
addr16
xchg
and
shl
jmp
dec
ret
call
jnp
stos
sarl
inc
add
divb
cmp
scas
xor
iret
into
fnsave
dec
movsb
xor
leave
lcall
out
sbb
mov
fisubl
xchg
insb
mov
sahf
or
imul
bound
rcrl
aaa
lcall
mov
mov
das
addr16
or
xchg
push
mov
das
cmp
mov
mov
xchg
in
add
inc
pusha
push
lods
pop
cli
push
fdivl
xacquire
and
add
sarl
and
pop
mov
inc
inc
adcb
mov
jg
ret
fbld
and
pop
jb
int3
les
mov
fwait
ja
cld
xchg
pop
test
rcl
sti
add
pop
xchg
lea
repz
out
push
xchg
fs
out
xchg
push
and
inc
jp
or
push
mov
sub
adc
aaa
sub
jno
ljmp
push
addl
aas
cmp
cmpsb
es
js
into
pop
dec
loop
rorb
pop
aaa
in
nop
and
push
leave
out
adcl
icebp
imul
inc
loopne
das
stos
jge
cmp
aad
mov
imul
sub
rcll
sub
fcmovnbe
cmp
into
fldl
aas
lock
imul
test
cwtl
mov
push
jge
jle
insl
pop
cmp
popf
jb
and
loop
cmpl
jg
lcall
mov
sahf
inc
repz
out
add
mov
enter
std
cld
mov
adc
addr16
and
pop
loop
shl
adc
mov
jl
push
jge
out
xchg
repnz
xchg
add
inc
jae
pop
ja
mov
xchg
ret
outsb
and
seto
repnz
cmpsl
and
hlt
test
sbb
and
push
sti
cmpsb
cmc
scas
pop
lock
push
ret
dec
outsl
xor
pushf
je
mov
cld
lods
or
popf
inc
cmp
cmp
lock
icebp
aam
push
jo
lea
cltd
pop
pop
fstl
fisubrl
stos
cmpl
and
cmp
cltd
jg
pop
jae
xchg
push
push
dec
adc
mov
add
add
sbb
cmc
scas
pop
lods
xchg
sub
add
dec
test
xchg
ljmp
jb
sub
aad
stos
dec
cmp
loop
xlat
xchg
fsubr
dec
dec
cmc
add
cmp
call
cmp
mov
out
and
mov
addl
adc
fbstp
in
sbb
ds
pushf
in
xor
mov
ds
xchg
pushf
lds
es
add
scas
jmp
aaa
out
mov
test
cmp
lahf
cmpsb
mov
or
incl
jns
sbb
aad
jbe
sub
cmp
xchg
pushf
jl
icebp
sub
push
mov
mov
xor
or
pop
stc
int
lahf
ret
int3
addr16
adc
mov
jp
daa
add
jp
sarl
push
cmp
insl
bound
pop
pop
icebp
sbb
int
xlat
cld
and
lret
push
aam
fldenv
imul
add
push
mov
rorl
mov
lds
nop
mov
das
mov
repnz
outsl
cs
cli
sbb
clc
loop
dec
inc
rcrl
mov
add
or
daa
hlt
fldcw
mov
repz
dec
mov
loop
inc
jmp
int3
hlt
lahf
xchg
bound
jnp
and
jno
pop
cmc
dec
jmp
imul
mov
dec
rcrl
das
popf
es
lock
aas
push
mov
or
push
aaa
mov
jge
jp
sar
imul
arpl
test
mov
out
dec
cmp
or
addr16
lahf
imul
ret
lcall
cmpsb
movsb
in
int
push
fdiv
jmp
aad
stos
push
jbe
sbb
outsb
fwait
push
inc
lret
xlat
mov
pop
test
jp
dec
cmp
cs
shr
mov
xor
inc
and
inc
jbe
in
jmp
popa
adc
aas
inc
nop
negl
mov
fwait
test
idivl
out
roll
out
sti
lahf
jp
mov
add
sbb
push
mov
fcompl
jmp
dec
sub
xlat
push
push
cld
rcr
decl
or
add
scas
sbbl
icebp
push
aam
lock
les
fwait
andl
pop
test
mov
mov
xchg
jge
push
bound
sbb
adc
out
jo
fwait
aaa
cmp
mov
je
hlt
or
jmp
adc
and
lcall
fnstenv
lea
add
ficoml
fcmovnbe
inc
mov
outsl
rcll
lret
inc
inc
mov
call
stos
jnp
imul
jl
push
subl
mov
xor
imull
pop
add
jecxz
divb
clc
insb
loopne
inc
inc
push
push
out
sti
dec
xor
aam
mov
call
xchg
fidivrs
push
scas
xor
fbstp
xchg
inc
movd
loope
mov
and
jno
sbb
ljmp
ds
xlat
neg
push
xlat
xchg
andps
jns
cmp
mov
dec
fucom
sti
into
mov
dec
cmp
pop
roll
scas
fcompl
scas
mov
and
jle
rol
in
lret
out
mov
cmpsb
sub
mov
xchg
sarl
mov
test
pop
dec
lcall
pop
cmpsb
mov
lds
imull
outsb
std
lods
inc
cmpsb
cmp
fisubl
dec
and
xor
jl
lods
push
lods
jae
mov
or
movsb
mov
mov
movsb
push
mov
imul
lret
pop
xchg
xchg
fs
inc
mov
test
add
sub
das
jbe
and
repnz
inc
test
mov
das
je
adc
sub
in
cmp
incb
xor
pop
movsl
jns
lret
cmp
mov
cmp
push
sub
leave
add
push
mov
decb
faddl
mov
mov
and
adc
or
jo
add
outsl
push
lock
mov
push
ffree
movsb
lods
ret
add
push
add
nop
mov
and
jg
mov
xor
adc
jmp
aad
mov
andb
fildll
lods
xchg
jne
sbb
insb
dec
and
call
divl
test
outsb
mov
sub
sub
arpl
scas
sbb
std
into
push
xchg
aas
decl
out
jo
mov
int3
int3
decb
cmp
iret
lock
imul
nop
xchg
pop
ljmp
in
and
pusha
inc
in
push
cmpsb
aam
clc
sbbl
push
scas
xorb
sub
xacquire
add
je
pop
add
push
dec
pop
das
fwait
adc
mov
pop
mov
pop
cmpsl
pushl
movsb
rorl
push
lds
negl
pusha
cld
pop
shl
xor
scas
lock
jecxz
lods
push
jp
fdivrp
inc
imul
lock
dec
jbe
test
add
adc
xchg
repz
loop
inc
divl
sbb
cmc
pop
xor
or
int3
push
jo
or
mov
pop
and
loopne
xor
adc
push
int3
add
pop
inc
shrl
orl
idiv
arpl
cltd
xchg
mov
mov
jge
roll
dec
mov
mov
hlt
mov
ficompl
cmpsl
aam
add
test
dec
loope
jb
fistpl
xor
jp
pop
cmpsl
or
jmp
fisubrl
adc
aas
js
in
cmc
mov
das
adc
cmp
pop
out
add
xor
into
and
mov
stc
es
and
mov
or
push
jae
dec
sub
in
int
sub
adc
filds
into
stc
lods
add
mov
mov
iret
inc
adcb
cld
xor
pop
fwait
or
sahf
sbb
inc
push
pop
or
mov
psrlq
sbb
pushf
int3
aad
rcrl
test
add
out
add
xor
xor
leave
das
lock
std
cmp
inc
sahf
push
cmp
stos
rcrl
out
add
sbb
scas
popl
mov
int3
mov
dec
xor
mov
stos
add
mov
scas
inc
es
fists
inc
out
xor
enter
mov
pop
cltd
ret
xchg
dec
mov
add
adc
addr16
ret
mov
loopne
dec
pop
mov
push
mov
sub
sbb
xor
lret
or
mov
push
push
adc
rcr
mov
mov
mov
mov
call
inc
outsl
lds
ja
mov
sub
out
mov
insl
inc
pop
push
loopne
ret
loope
lock
gs
jecxz
cmpsl
ret
popa
aam
mov
push
sti
lahf
negb
fs
adc
cli
dec
pop
popa
mulb
sbb
fdivp
add
fimuls
xlat
fldenv
scas
dec
adc
lahf
rcrl
add
jns
gs
call
sub
cld
out
test
inc
add
sbb
loope
xor
dec
pop
mov
jle
shl
lock
adc
mov
iret
pop
push
insl
sub
sti
jnp
out
pusha
inc
in
mov
inc
daa
inc
int
mov
out
inc
add
cli
xor
subl
and
in
pop
push
mov
neg
ja
imul
xorb
clc
int
cltd
into
mov
in
arpl
push
push
dec
push
ss
daa
in
pop
incl
mov
fcmovbe
cld
xchg
inc
fimuls
jge
add
mov
fisubs
and
mov
rcl
add
jne
int
pushl
iret
iret
xchg
and
cmp
fldcw
repnz
xchg
out
mov
adc
fdivrl
inc
jne
adc
lret
loopne
lock
add
or
jo
sarl
jle
repz
iret
in
xor
add
pop
mov
add
gs
ds
lret
inc
xchg
jbe
loop
cmp
ret
adcl
les
lds
adc
lret
and
dec
push
rcrl
jns
jle
push
hlt
add
and
lds
or
mov
loopne
cltd
dec
mov
inc
jnp
loopne
pop
daa
filds
or
jb
and
out
xchg
hlt
imul
cltd
xlat
cmp
cmp
cld
pushf
xor
adc
out
xchg
cli
jns
daa
sub
clc
jge
mov
jecxz
mov
testl
adc
inc
xor
inc
lods
in
add
je
popa
pop
and
pop
insl
test
rcl
ret
testb
and
lds
mov
push
mov
ret
jb,pn
mov
stc
icebp
cmp
jbe
shrb
jb
cmp
push
mov
test
jae
shrl
cmp
leave
or
inc
testb
in
pop
sbb
xchg
lea
lds
outsl
jp
fwait
cmp
cmp
sbb
addr16
or
out
mov
insl
lea
arpl
out
loope
sub
popf
ja
sub
das
add
pop
or
xchg
jl
push
test
mov
aaa
or
out
inc
sbb
pop
dec
and
fucomip
adc
cmp
push
inc
andb
sub
aas
xchg
int
rclb
mov
sub
sub
pop
sub
and
xchg
cmpsb
int
je
xchg
cmp
sub
lret
rorl
dec
sarl
loope
scas
jnp
xchg
in
lods
fidivrl
and
cs
xchg
push
xchg
adc
sbb
loope
mov
in
aad
add
push
adc
sub
xchg
rolb
pop
rcll
sbb
sub
push
aas
shll
jge
dec
sbb
sbb
xor
jne
pop
xchg
sarb
mov
cmp
imul
and
pusha
popa
shlb
xor
je
inc
pop
and
cmpsl
cmp
clc
jge
es
push
stos
sbb
adc
or
xor
sub
addr16
pop
popa
and
push
ret
push
push
cld
push
push
push
adc
sbb
jno
mov
and
jns
sub
add
cli
daa
add
jmp
subb
aad
jns
loop
enter
pop
pop
push
idivl
out
pop
outsb
mov
xor
out
jg
sbb
jmp
dec
mov
and
fisubl
xor
enter
lods
dec
sub
pop
jp
loopne
ds
ja
jmp
in
mov
in
pop
mov
and
push
outsl
sbb
cmpl
cs
mov
out
int
iret
adc
sbb
mov
or
sbb
xor
sub
push
push
adc
dec
push
mov
daa
mov
push
cmp
adc
jge
in
push
out
inc
and
push
jg
mov
jo
mov
scas
fstps
jo
sub
xchg
jp
sub
jne
jbe
sub
adcl
sub
aad
test
in
inc
cmp
ss
mov
cmp
jno,pn
inc
pop
test
cmp
insb
push
jae
scas
add
cli
xchg
je
stos
inc
cmpsl
pop
lret
ds
mov
aas
lret
dec
or
or
ja
or
cld
je
pop
cld
repz
add
cs
inc
movsb
xchg
and
cmp
jl
add
push
push
pop
or
call
mov
or
push
out
dec
insb
jmp
sub
in
add
fadds
pop
imul
xchg
inc
mov
xor
and
popf
and
in
xchg
adc
lahf
fidivl
or
lods
sahf
pusha
pop
mov
pop
iret
pushf
pop
jecxz
push
mov
mov
xchg
popl
inc
jae
inc
push
ds
leave
jl
fldcw
inc
or
insl
xor
add
jns
xor
pop
jbe
xchg
xor
mov
push
insl
mov
fwait
out
mov
sbb
arpl
cld
pop
mov
imul
std
loopne
xor
add
cmp
nop
lret
xor
jecxz
jae
pop
fstl
int
pop
std
in
mov
les
inc
sbbl
jb
pop
cmp
jg
es
mov
leave
leave
mov
mov
push
xor
sahf
imul
and
inc
push
ljmp
mov
and
mov
test
adc
stos
xor
adc
mov
pop
pop
les
cs
jbe
fsts
lret
cmp
adc
cmp
and
add
jnp
or
cs
mov
incb
xchg
sbb
cwtl
insl
push
pop
sti
or
bound
push
mov
testb
cli
mov
jnp
rolb
out
mov
dec
outsb
shll
adc
iret
cmp
inc
add
ja
cmc
xchg
bound
push
sub
sarl
xchg
loopne
out
ret
mov
push
test
pop
and
mov
shlb
sub
xlat
ja
xlat
xor
xchg
xchg
sbb
stos
push
mov
pop
shl
es
js
cmc
inc
mov
mov
cltd
jle
push
add
cmp
xor
subl
mov
xor
sub
insb
shr
sub
inc
add
rorl
xor
adc
stos
imul
and
fdivrl
mov
adc
into
mov
sbb
mov
scas
fdivs
mov
push
bound
xchg
jns
data16
dec
dec
mov
fcom
inc
pop
mov
outsl
lahf
repnz
push
add
fstpt
xor
xchg
inc
dec
and
outsl
xchg
xchg
pop
scas
adc
lods
jns
in
mov
push
mov
sbbl
xlat
pop
xchg
sbb
mov
cld
cli
cmp
mov
sbb
aaa
shlb
mov
hlt
test
inc
xor
mov
pop
shlb
out
cs
ds
ret
or
pop
mov
cltd
mov
sub
xor
push
xchg
sbb
or
aas
xchg
loop
lahf
js
loope
lds
jg
ret
jb
fwait
popa
stos
xor
scas
es
or
push
std
stos
mov
subl
stos
mov
fyl2x
xor
inc
cmpsb
jae
jns
fnsave
aam
icebp
push
and
pushf
push
shr
mov
inc
repz
or
enter
or
xchg
mov
into
and
pop
add
pop
je
nop
shll
loop
data16
les
int3
and
mov
ret
and
fisubs
sub
out
xchg
in
push
js
loopne
fbstp
sbb
xchg
in
adc
xor
add
mov
in
adcl
mov
clc
scas
testl
in
movsb
mov
repz
daa
jg
mov
in
mov
insb
enter
mov
scas
push
leave
mulb
mov
aam
sahf
dec
fwait
adc
adc
jnp
call
cld
pop
cld
enter
add
into
xor
rorb
pop
scas
push
cmp
test
jle
jl
dec
lahf
iret
ss
xchg
add
pop
jmp
sub
test
rclb
mov
pop
enter
scas
sub
cmp
jecxz
push
mov
xchg
rcrb
mov
lods
xchg
dec
mov
ficompl
xchg
mov
rorb
clc
inc
dec
mov
outsb
mov
ffreep
pop
lods
out
xlat
out
lock
jae
popa
mov
push
push
mov
cli
sbb
mov
jl
mov
xchg
dec
ljmp
inc
pop
popa
mov
mov
pop
mov
mov
cmp
test
daa
pop
mov
lods
mov
pop
and
in
stos
in
mov
inc
insl
pusha
fcomip
and
push
dec
mov
xchg
lock
sahf
test
in
shll
mov
sahf
adc
out
ss
mull
in
or
arpl
clc
xor
mov
adc
in
jnp
add
cmpsl
xor
jp
fisttpll
mov
loopne
dec
insb
pop
or
adc
mov
xchg
shrb
pop
xchg
xchg
pusha
mov
xchg
gs
jg
xor
pop
lret
xor
sti
scas
adc
mov
jno
stc
outsb
push
push
dec
push
mov
inc
mov
imull
loopne
ja
add
out
std
movsb
pop
cli
xor
push
imul
loop
ret
es
cmp
rcll
xor
pop
xor
mov
rorl
out
push
popa
outsb
dec
sbb
sub
in
mov
insl
int
jp
das
push
ljmp
push
push
dec
cmpl
inc
jno
scas
or
xor
pop
inc
inc
outsb
pusha
adcl
cltd
mov
ljmp
shrb
mov
loop
aam
xchg
dec
push
imul
int3
sti
jge
js
test
fldenv
lods
lock
movsb
aad
repnz
fistps
roll
or
outsb
xchg
mov
jo
jl
mov
sti
movsl
insl
inc
ss
shll
xchg
movsb
push
rcrb
inc
icebp
xchg
iret
outsb
add
mov
cs
addr16
pop
filds
push
mov
sbb
or
ja
add
ja
xchg
out
mov
mov
pop
pop
mov
sahf
int
fisubrl
push
mov
inc
fstp
jno
mov
pop
xchg
push
hlt
shll
shll
les
push
xchg
stos
and
push
push
push
sbb
into
xchg
pop
jno
adc
test
xor
jb
sub
movsl
cmp
mov
dec
rclb
pushf
cmp
adc
movsb
ret
nop
pop
fstp
lsl
xor
and
leave
or
jb
loopne
sub
fcomps
cwtl
outsl
ss
mov
cmp
mov
nop
in
dec
xor
and
fsubs
mov
sub
and
mov
ss
dec
or
push
sbb
iret
cmp
fnstcw
jecxz
adc
and
outsb
cmp
or
subb
jl
lret
fsts
ds
cmp
add
int
test
movsl
pop
fsub
nop
inc
jl
idivb
enter
ficoml
xchg
adc
pop
mov
pop
lods
xor
mov
push
push
push
dec
fwait
lds
bound
dec
icebp
dec
or
testb
imul
das
mov
imul
inc
mov
dec
sub
pushf
inc
pop
and
add
push
insb
xor
sti
jnp
test
sti
mov
fs
sbb
jb
sbb
outsb
add
mov
push
inc
jno
sbb
jo
out
mov
push
push
xor
movsl
fsubs
insb
cmp
xchg
mov
cltd
jns
lods
movsb
pop
jecxz
sub
push
add
push
sub
jbe
jo
out
hlt
movsb
fmul
pop
jae
ss
out
test
xor
adc
jae
add
cmc
and
mov
xchg
jns
and
cmpsl
rorb
push
in
pushf
add
mov
cmp
andb
xorb
sbb
cmc
dec
lods
sbb
and
or
or
frstor
jb
mov
add
mov
fiadds
pop
pop
dec
decb
jg
insb
adcb
pop
iret
add
lods
and
dec
scas
out
push
xor
aam
mov
and
add
in
xchg
mov
xchg
xchg
jnp
movsb
stc
jmp
xchg
pop
adc
dec
lret
mov
add
js
add
fcoms
cld
inc
adc
mov
mov
cs
and
or
sbb
pop
dec
jbe
inc
jbe
mov
push
scas
xchg
ret
jns
adcl
lods
jae
jge
in
push
adc
and
cmpsl
divpd
sbb
stc
test
negb
cltd
rsm
repnz
mov
cld
cs
sbb
mov
lds
fistps
ljmp
lret
xchg
sbb
ficoms
adc
mov
lods
ret
test
jecxz
pop
mov
rcl
imull
test
sub
or
call
mov
sub
inc
test
push
inc
je
push
cltd
xchg
ss
fisubrl
push
lret
mov
cmp
xchg
aaa
jnp
mov
push
xchg
push
cmp
pop
add
fsubrl
lds
or
mov
jns
rcl
add
lret
jns
enter
cmp
and
xor
cwtl
cmpl
insl
lods
mov
or
sub
aad
pusha
stc
xlat
out
sub
push
inc
cmp
inc
int3
stos
xchg
mov
aaa
adc
xchg
cmp
sahf
fwait
shlb
pop
cmp
inc
push
movsl
aam
addl
add
cmpsl
mov
das
mov
scas
inc
hlt
inc
xchg
push
out
and
icebp
inc
mov
adc
rcll
jmp
xchg
push
enter
jno
dec
jae
and
jne
sbb
and
push
inc
insb
mov
hlt
sub
lcall
roll
stc
sub
pop
insl
mov
mov
es
jno
cmp
adc
pop
aad
mov
js
jl
and
xor
int
pop
adc
rcr
pop
cwtl
sbb
or
aam
pushf
push
mov
inc
lods
mov
mov
dec
xlat
pop
data16
xor
into
mov
imul
cmpl
repnz
movsl
mov
cmp
jb
lret
cmp
add
data16
imul
nop
dec
adc
inc
push
jge
scas
into
sub
cmpl
adc
mov
imul
into
bnd
loope
push
mov
aas
arpl
lahf
inc
lds
fcmovbe
insl
sub
mov
insb
in
pushf
fmuls
lcall
xlat
inc
mov
in
push
mov
sub
ret
nop
aas
in
push
cwtl
movsb
xchg
notl
adc
add
add
mov
movsb
push
dec
jmp
pop
and
bsf
mov
lods
repz
mov
mov
fwait
and
mov
sbb
js
ret
push
push
repz
mov
cmpl
notb
mov
add
sbbb
pop
addr16
sti
jns
aas
aaa
mov
and
or
scas
pop
popa
sbb
loopne
add
xorl
xlat
jo
jo
je
lds
cli
sahf
stos
mov
and
cmp
lahf
push
pop
xor
jae
rolb
and
mov
in
loop
jle
pop
aas
and
and
push
mov
sub
jle
mov
inc
push
ss
mov
mov
and
std
mov
test
shrl
test
cmp
pop
adc
mov
and
fadds
lods
jns
shrl
sbb
cmp
test
push
outsl
pop
pop
sbb
sbb
outsb
das
mov
mov
aam
es
stc
jae
and
push
test
cwtl
sbb
ja
cmpsl
and
sbb
int3
div
dec
popaw
idivb
mov
xchg
adc
stos
pop
sti
dec
imul
xor
in
or
shrb
push
or
push
mov
inc
aas
jb
jns
fstps
daa
fwait
je,pn
shll
push
mov
mov
mov
and
in
cmp
scas
fmull
adc
call
xor
adcl
mov
sbb
sti
and
or
mov
lahf
adc
inc
inc
iret
scas
pop
daa
inc
pop
or
inc
jno
es
fdivrs
fisubs
xchg
adc
js
in
fildll
push
push
in
jnp
rcl
imul
jmp
cmp
sub
sub
call
jno
loop
mov
arpl
cmpsl
sub
and
jecxz
adc
xchg
push
mov
jne
mov
adc
mov
xchg
rolb
fdivrs
out
sbb
or
mov
push
sub
mov
dec
jle
fucomip
sti
mov
in
sbb
fisttps
jo
inc
cmpsb
cld
sub
dec
in
push
and
aas
xlat
outsb
sub
aas
add
cltd
leave
fwait
into
sub
jg
call
ret
lahf
xchg
test
push
sbb
orb
mov
stc
mov
rcrb
add
stc
ds
mov
mov
push
in
lea
adc
test
lds
out
add
fadd
repnz
or
in
dec
jb
pop
mov
push
dec
cltd
dec
mov
pop
stos
aam
pop
mov
jae
cs
fisubrs
or
ja
mov
xor
test
lods
scas
dec
fucomp
mov
fmull
fistpl
xlat
push
das
int
pop
adc
sbb
dec
popa
sbb
mov
inc
dec
sarb
data16
and
push
sub
in
test
push
pop
iret
pop
pop
mov
jbe
icebp
cmpsb
dec
and
xchg
in
push
lahf
std
loopne
movsl
mov
cwtl
mov
jno
push
adc
xchg
test
sbb
pop
neg
xchg
add
adc
outsb
or
stos
xchg
xchg
xchg
xor
rcrb
add
mov
es
mov
adc
shlb
push
mov
xchg
cmp
test
sbb
mov
enter
mov
fistps
mov
ret
and
pop
cwtl
in
popf
push
add
adc
cld
dec
add
pop
mov
je
lcall
mov
lds
jno
xchg
cld
mov
xlat
sbb
push
lods
lock
mov
in
ret
cld
insl
fmulp
dec
jge
ljmp
pop
into
repz
adc
sub
rorl
shlb
sub
or
xor
jl
push
fcomps
push
outsb
lea
lea
ror
mov
loope
aam
popf
repnz
xor
and
iret
flds
ret
ret
rolb
dec
push
aas
cmp
add
in
insl
arpl
sbb
aad
mov
arpl
sbb
dec
mov
out
gs
push
jo
sub
inc
sbb
sbb
push
push
xor
inc
lret
xor
push
out
mov
inc
push
sbb
clc
push
cmc
cmpsl
dec
popa
cmp
push
stos
sti
xchg
cld
adc
and
imul
mov
mov
add
je
jb,pt
jae
sub
sahf
mov
inc
dec
or
rcrb
cmc
or
xchg
or
ljmp
rcrb
outsl
repz
mov
xchg
pop
sbb
adc
push
cmpsl
and
cmpsb
das
jns
stos
and
ret
out
dec
in
repz
ja
mov
fs
xor
jl
outsb
imul
insl
mov
in
jns
jae
pop
scas
xor
jne
xor
and
sbb
fs
jb
xchg
out
testb
adc
adc
dec
cmp
inc
repnz
daa
or
or
movsl
setae
sbb
outsb
int3
cmp
pop
and
fldl
popl
cmp
stc
lahf
dec
leave
add
sbb
jnp
lea
push
lcall
push
push
gs
cmpb
jge
ficoms
jo
inc
out
test
mov
push
faddl
dec
jmp
inc
test
sti
push
pushf
dec
in
or
mov
call
mov
test
jmp
aas
sub
lock
dec
dec
xchg
rolb
sbb
out
xor
mov
stos
cmp
sub
test
adcb
jmp
adc
mov
sbb
aad
or
popa
fisttpl
pushf
mov
mov
lods
adc
cld
clc
faddl
jecxz
ss
adc
push
rcl
or
inc
into
adc
adc
rorb
and
arpl
xorl
mov
xlat
cmp
cmpsb
das
iret
dec
repnz
add
sub
mov
outsl
cmp
out
mov
fisubrs
repz
int
jno
xchg
sbb
sti
lods
mov
and
push
xchg
fs
gs
mov
or
outsb
lds
cmp
popf
sbb
mull
mov
push
popa
adc
xor
divl
cmp
add
clc
jl
rcrb
inc
ret
in
inc
ss
push
cmpsl
push
adc
add
ss
cmp
adc
mov
mov
pusha
sbb
cmp
push
daa
cmpsb
mov
imul
dec
jecxz
xchg
dec
sbb
fbstp
sbb
push
and
pop
inc
mov
mov
push
xchg
movsl
inc
dec
mov
lret
add
les
roll
rcrb
push
stos
adc
loopne
pop
shlb
stos
dec
sti
movsb
stos
les
add
hlt
aam
push
mov
cmp
mov
cmp
jecxz
std
ds
lock
mov
and
pushf
dec
into
pop
in
jg
sarb
push
push
cmp
icebp
fadd
mov
movsl
sbb
iret
fwait
ds
ja
push
or
adc
mov
push
mov
push
rolb
test
scas
cmpsb
fdivrl
fnsave
shr
cld
dec
push
jge
lds
loop
stos
leave
and
das
and
lret
shl
or
dec
push
movsb
bswap
in
mov
das
adc
mov
and
lock
js
ljmp
pop
repz
fxch
clc
push
shlb
cwtl
xor
cmp
add
ficomps
jecxz
and
and
pop
aam
repz
cs
lods
push
mov
sub
mov
sbb
dec
mov
cmp
adc
cmpsb
rol
jae
daa
ljmp
out
pop
push
mov
sbb
cltd
test
adc
add
decb
push
push
push
jne
je
jne
jb
dec
mov
mov
add
rorl
push
mov
aas
in
inc
inc
mov
push
sbb
sub
imul
lret
mov
das
ljmp
xchg
push
dec
cltd
je
mov
push
insl
insl
repz
rcll
clc
xor
cwtl
or
xorb
push
push
ss
stos
mov
push
cwtl
mov
loopne
imul
shlb
arpl
or
aas
and
push
cmp
ffree
cwtl
and
enter
add
mov
int
jle
xchg
int3
lods
cmp
stc
sub
inc
pop
add
scas
jo
fwait
mov
mov
rolb
xor
inc
xchg
mov
fdiv
es
push
xor
test
push
in
aaa
iret
and
sub
in
dec
daa
xchg
mov
in
jns
mov
mov
ja
mov
dec
lods
adc
cli
mov
mov
rclb
mov
push
daa
cmc
adc
mov
sbb
add
or
fadds
std
mov
pop
inc
sub
dec
sbb
cmp
push
hlt
cmpsl
push
jecxz
fwait
adc
loop
test
rorl
xorl
outsl
loopne
or
adcl
dec
add
jnp
in
pop
pop
sbb
sub
je
pop
es
sub
mov
mov
sbb
decl
push
rorb
mov
or
lds
cli
jae
sbb
jmp
mov
fld
cltd
inc
inc
cmc
cmp
mov
fmul
nop
push
fstps
pop
cmc
adc
les
scas
cmp
mov
and
cmpsl
pop
sbb
dec
jae
popa
incb
or
xchg
stc
lcall
mov
dec
mov
cmp
xchg
cmpsb
or
sbb
push
daa
xor
scas
mov
mov
push
or
es
jbe
shrl
mov
cmpsb
pop
cmp
mul
push
cld
outsb
mov
dec
pusha
mov
mov
sbb
fcmovnu
push
imul
sbb
mov
and
in
in
pop
sbb
cld
leave
push
inc
jb
mov
fistpll
orps
mov
mov
mov
adc
insl
xor
jmp
and
cmp
fs
ja
test
insb
jge
adc
cwtl
xor
push
pop
lret
in
pop
loope
fistps
push
or
cmp
loope
adcl
mov
push
testb
hlt
xchg
mov
sbb
popa
push
dec
int
and
pop
mov
pop
push
aad
pop
testb
xor
idiv
adc
daa
mov
mov
pop
mov
xchg
jmp
es
shlb
xor
push
loop
push
ljmp
cmpsb
rcrl
push
jp
das
popf
sti
and
push
mov
outsl
push
cmpsb
fwait
push
or
rol
mov
sbb
pop
mov
add
lret
test
push
sub
jge
inc
sub
sbb
fucomp
pop
jo
adc
mov
add
dec
adc
jg
cmp
push
cltd
mov
imul
lods
sub
dec
test
lds
sbb
sbb
imul
outsl
popa
daa
inc
loope
jmp
fsubl
scas
fisubrs
mov
mov
arpl
xor
stos
lock
pop
subb
mov
jno
pop
mov
xchg
mov
rorl
sbb
dec
mov
xlat
and
cli
cmp
lock
sbb
cmp
retw
lods
cmp
sub
sarb
jnp
xchg
nop
push
aas
or
mov
call
shlb
push
subl
std
stc
aaa
pop
shrl
clc
nop
sarl
jmp
pop
mov
insb
add
inc
jb
inc
popf
fdiv
sbb
scas
fildll
xchg
push
mov
and
arpl
pop
jae
aad
adc
push
cmp
insb
jge
cmp
add
mov
ret
int
push
mov
mov
rcrb
mov
out
push
daa
lds
jle
insl
movsb
push
xor
and
and
cmpsb
sti
adcb
cmpsb
les
pop
or
test
xchg
jns
loope
mov
testb
daa
jg
scas
xchg
jl
and
inc
push
or
jle
cmp
js
sbb
jno
xchg
cltd
sbb
fstl
nop
cmpsl
xchg
add
pop
stc
cs
and
jle
xlat
cltd
arpl
xor
js
mov
mov
mov
fsubl
adc
andb
jns
mov
arpl
cmc
inc
aam
das
lcall
sbb
cmp
sbb
and
rol
push
lds
and
orl
cmp
in
xchg
adc
cmp
cmp
mov
jle
fstpl
lea
push
xlat
outsl
dec
sub
xchg
ja
dec
roll
push
imul
fnop
jns
ficomps
in
je
adc
sbb
imul
into
cli
and
sbb
subb
adc
sub
and
std
pop
sub
sub
inc
repnz
incb
or
sti
sub
cmp
sbb
jge
lds
test
es
jns
jae
cwtl
cmc
loope
or
in
scas
es
push
movl
mov
dec
push
mov
cmpsb
adc
je
cmp
sbb
push
xchg
or
cmp
jbe
mov
insb
jne
imul
push
cmp
xlat
jb
pop
inc
mov
sarl
cmc
repnz
shll
mov
inc
sbb
rol
sbb
cmp
fs
xchg
and
xchg
pop
test
mov
push
bound
xor
mov
push
push
push
pop
mov
push
cld
dec
mov
in
mov
jg
in
popa
jne
or
imul
aas
leave
pop
jne
jnp
xor
dec
pop
mov
mov
dec
jl
cmpsl
push
loopne
sahf
jnp
and
and
out
jmp
sahf
pop
pop
pop
push
and
fdivp
outsb
mov
cmp
aad
sbb
fwait
adc
xchg
inc
cmpsl
and
pop
fwait
add
dec
push
jg
int
mov
call
push
dec
jbe
fwait
arpl
dec
xchg
mov
xchg
pop
mov
mov
dec
popa
lock
insl
mov
pop
xchg
xchg
hlt
in
addr16
jnp
sahf
dec
je
push
push
inc
mov
pop
adc
mov
jecxz
push
adc
bound
xor
sti
push
push
jecxz
cmpsl
test
adc
pop
bnd
pop
lods
gs
and
negb
test
cmp
cmp
xor
fs
lds
push
rcl
ret
cmp
push
mov
lea
in
dec
loope
sub
aaa
or
push
ss
push
push
aaa
popf
loopne
jmp
fcomps
and
sbb
lret
xchg
mull
aam
and
icebp
popf
fnop
pop
dec
pushf
shll
inc
mov
in
jnp
into
xor
push
stc
and
mov
daa
dec
insl
inc
add
xor
or
pop
lret
push
add
dec
mov
iret
out
inc
mov
push
xor
jmp
mov
mov
mov
imul
jmp
or
les
cmpsl
js
in
jnp
push
xorl
and
les
lahf
scas
les
cli
fmuls
popa
lds
cmc
pop
pop
ljmp
pushf
jnp
mov
mov
mov
ljmp
cli
jl
insl
dec
xor
sub
outsl
push
sub
lahf
es
mov
mov
fbstp
dec
mov
inc
fsubrs
xchg
cltd
cmp
push
push
push
lea
das
cmp
movsb
sarl
mov
clc
arpl
xchg
inc
and
sbb
push
aam
pop
mov
and
push
fistps
inc
pop
jnp
mov
mov
push
mov
mov
inc
cltd
fdivl
mov
sub
addb
test
mov
and
mov
mov
cmp
shll
fiaddl
sbbb
call
and
ja
cmp
pop
mov
sub
jl
add
mov
scas
in
sbb
pop
bound
adc
shrl
push
call
mov
mov
lret
popa
cmp
decl
das
pop
dec
mov
add
sbb
inc
inc
fstps
push
loope
mov
fsubs
or
inc
jle
jle,pt
or
es
push
or
xchg
addl
js
fwait
xor
xchg
sub
aas
addb
stc
add
mov
imul
sub
xchg
aas
cli
movsl
cmp
ds
ret
push
out
aaa
xor
jo
loopne
adc
fistpl
lret
in
cmp
push
add
fwait
xchg
out
flds
sarl
shll
mov
call
cmp
movsl
jg
adc
inc
popf
jae
test
fwait
lock
cmp
mov
stc
mov
ret
cmpsl
add
aam
lea
andnps
loope
jbe
adc
push
fprem1
mov
jbe
mov
xor
bound
ljmp
fcomps
xor
scas
sub
cltd
sbb
rol
js
adc
push
dec
lret
inc
xlat
cmp
movsb
mov
xor
mov
mov
int3
ds
test
pusha
push
cmpsb
sbb
cmp
sbb
divb
mov
jns
add
inc
cmp
xor
jecxz
mov
fcmovne
jl
xchg
xor
shrl
or
js
out
xchg
loop
xchg
sbb
stos
cmp
loope
out
js
fldln2
out
loope
call
rorb
testb
ret
sub
rclb
jne
in
sub
ror
jno
xchg
inc
lock
xchg
push
bound
scas
aas
jbe
std
ret
popa
out
das
scas
mov
mov
jbe
cmpsl
testb
ja
sti
gs
mov
jg
mov
movsb
ja
and
js
stos
cs
xlat
sub
pop
xor
sub
outsl
cltd
cmp
pop
jne
rcrb
adc
cmp
lret
pop
sbb
je
inc
sub
repz
ljmp
test
xlat
test
lahf
lock
mov
or
mov
jo
mov
xchg
pop
cmp
cli
std
das
cli
dec
pop
movd
jle
cmp
jle
cmc
add
xor
push
jb
xchg
repz
shrl
stos
aas
cmpb
stos
sub
js
mov
cmp
enter
sbbl
ret
adc
in
iret
jo
jns
inc
fmull
adc
dec
es
orb
dec
aas
ss
bswap
idivb
lods
out
outsl
xor
sbb
dec
insl
xchg
cmc
loopne
or
or
mov
or
pop
add
mov
and
pop
andl
ret
fs
push
ljmp
push
stos
out
add
pop
sbb
lock
sub
lret
es
ret
lcall
sti
cmp
sbb
fldt
dec
test
outsl
fs
sbb
pushf
xchg
sbb
movsb
add
push
mov
jo
mov
addb
inc
out
xor
jecxz
gs
dec
jge
mov
popf
jne
bound
sub
das
movl
mov
mov
xchg
stos
xor
ljmp
dec
jae
push
sbb
jp
mov
sti
cli
bswap
movsb
movsb
int3
dec
mov
jne
stos
and
sti
dec
or
and
imul
xchg
rclb
jl
mov
mov
aam
cwtl
aaa
std
jnp
and
mov
js
addr16
xchg
xlat
pop
test
out
or
cltd
push
dec
push
jno
and
iret
jns
sahf
scas
in
xlat
das
jl
cs
outsb
xor
and
fldenv
pop
jae
and
pusha
loop
xchg
dec
mov
andb
leave
das
push
and
mov
aam
mov
xchg
in
xchg
sub
xor
aam
adc
enter
lahf
or
loop
pushf
inc
xor
xchg
jle
sahf
xchg
inc
ret
sbb
fimuls
inc
cmp
ja
std
lahf
add
xchg
std
int
hlt
daa
sbb
not
hlt
mov
rolb
push
rcrb
sub
ficoml
call
cmp
call
mov
loop
hlt
fidivl
jo
cld
sbbb
mov
dec
sub
adc
xchg
cmp
fwait
hlt
xor
int3
dec
cli
mov
push
icebp
add
inc
pop
ds
xchg
xchg
add
sub
jle
cmpl
jae
movsl
push
lds
jle
fstpl
fistl
dec
xor
incl
daa
ds
lcall
sbb
mov
cmpsl
sbb
movsl
mov
add
xchg
imul
fstps
adc
mov
daa
scas
scas
push
mov
pop
and
in
pushf
aaa
outsl
in
in
frstor
gs
sub
push
fcoms
rcrl
or
cwtl
push
ret
daa
mov
loope
ja
mov
cmc
mov
jge
rcrl
nop
sarl
xchg
movsb
pop
test
sub
jmp
dec
aaa
push
cmp
mov
imul
mov
jecxz
cmp
mov
adc
mov
dec
test
pop
mov
addb
out
stc
mov
and
inc
xor
and
sbb
xlat
movsb
mov
insb
xchg
and
loope
and
cmp
push
movsb
sub
add
enter
mov
jmp
push
loop
mov
jp
xor
jl
xchg
lods
in
dec
loop
popf
cmp
cmp
xchg
cmp
fsubrs
imull
popa
scas
es
subl
sub
out
dec
jno
push
adc
mov
shlb
jo
outsl
popf
pop
pop
lea
inc
push
fnsave
test
in
leave
xchg
rcrl
clc
out
mov
loope
hlt
pop
test
pop
cmp
and
sbb
xchg
or
sbb
loop
insl
jns
sub
je
mov
test
out
and
mov
stc
insb
fcmovne
cs
int
in
cmp
mov
jb
imul
add
out
pop
daa
lock
movsl
shll
push
repnz
rorl
jle
sbb
scas
sub
lret
push
adc
rcl
rcrb
js
sub
iret
aaa
xchg
sub
dec
and
add
or
fucomi
pushf
mov
out
xor
jbe
dec
sbb
repnz
lret
adc
lods
jns
or
jnp
sub
push
xchg
shll
clc
dec
sbb
icebp
mov
mov
ljmp
inc
aaa
fstps
hlt
sub
pop
es
subb
test
mov
data16
lahf
lds
icebp
cltd
clc
outsb
ret
add
push
insb
idivb
dec
cmp
xor
add
dec
stos
jp
rcll
xchg
mov
decb
mov
xor
cmp
lcall
lea
daa
mov
xor
mov
xor
lcall
fcom
xor
xor
add
pushf
xchg
ds
call
sbb
dec
xor
insb
inc
adc
jbe
cmc
arpl
inc
sub
nop
jg
pop
add
pop
mov
in
imull
push
ja
rcr
int
push
rep
sub
sbb
xchg
mov
dec
mov
aas
icebp
adc
lds
inc
out
push
or
mov
ds
imulb
fsubrs
loop
push
outsl
das
cmp
dec
push
add
xor
out
out
imul
icebp
sub
jae
mov
subl
outsl
sarb
jns
pop
in
ljmp
lret
sbb
repnz
mov
es
adc
push
jg
in
sub
imul
rclb
repnz
dec
cmpsl
pop
xor
cmpxchg
adc
ds
xor
jl
ss
popa
dec
jnp
sbb
push
aas
cltd
xchg
pop
mov
push
loop
nop
adc
cld
test
xchg
add
xchg
into
les
negl
or
dec
push
jns
test
and
loope
call
addr16
pop
xchg
fs
mov
cmp
mov
pop
xor
mov
ds
mov
cld
into
push
push
mov
stc
ljmp
inc
gs
sub
mov
or
insl
push
loop
lret
xchg
test
lds
mov
push
push
insl
jno
push
es
sti
movsb
push
inc
adc
inc
push
push
imul
lods
outsl
jb
imul
xchg
mov
sbb
in
and
and
cmp
leave
bound
ja
es
rolb
mov
bound
add
dec
mov
dec
inc
pushf
mov
pop
inc
hlt
mov
jne
dec
arpl
in
sahf
out
mov
adc
pop
sbb
fldenv
mov
scas
mov
add
push
mov
xchg
test
cmpsb
cs
add
and
or
imul
xchg
out
lret
lds
or
mov
cmp
lret
jns
out
cld
or
pop
adc
aad
rorl
iret
jae
cltd
fldcw
add
xchg
adc
push
inc
pop
enter
add
and
xor
getsec
dec
pushf
sbb
mov
sahf
int3
jne
sbb
sub
sbb
ja
pop
and
pop
cwtl
mov
je
aas
in
sbb
push
arpl
std
fcmovb
shll
sti
xchg
xchg
lahf
fisubs
sub
xchg
sub
subb
adc
popf
movsl
or
xor
adc
into
cmp
sbb
mov
cmp
jnp
push
dec
repz
pop
pop
xor
sub
movsb
enter
mov
xchg
and
lea
inc
sub
add
or
adc
lcall
pop
dec
test
pop
sbb
push
cld
sub
scas
push
stc
adc
sub
or
das
clc
fcoml
xor
fsub
sub
subb
mov
lods
aad
push
dec
adc
js
int3
mov
roll
idivl
cmc
arpl
adc
pop
jb
ljmp
icebp
mov
add
mov
ja
cli
jns
dec
mov
push
jmp
inc
out
lret
adc
adcl
sub
fnsave
xchg
sbb
dec
jnp
pop
push
mov
cmpsb
sub
movsb
xchg
and
cmpsl
aas
sbb
popf
jge
ds
mov
mov
push
dec
push
insb
imul
mov
cmpb
lods
outsl
loope
push
mov
sarl
xchg
pop
cmpsl
je
mul
or
test
adc
adc
cmp
mov
add
xchg
mov
dec
add
jg
push
adc
cmp
push
hlt
lret
fistpl
jb
xchg
je
xchg
stos
repz
push
fcomps
mov
je
mov
cmpsb
test
adc
nop
mov
xor
push
fs
jnp
lds
mul
popf
mov
sub
push
hlt
imul
jns
cmp
imul
mov
xchg
int3
mov
loopne
sbb
scas
xchg
mov
adc
mov
pop
pop
leave
add
pop
test
imul
sbb
sbb
inc
mov
xchg
loopne
fdivr
ds
dec
push
cltd
add
mov
ret
mov
pop
mov
mov
add
call
mov
loopne
inc
ljmp
aad
jb
sbb
xor
add
bound
imul
lock
stc
xchg
dec
mov
sbb
adc
mov
add
int3
mov
ljmp
inc
jecxz
xchg
jecxz
jns
jl
add
ja
sahf
add
test
mov
pop
lods
test
sahf
orl
xchg
sbb
xchg
imul
js
or
mov
adc
mov
out
mov
inc
fidivrs
clc
mov
sbb
inc
imul
xor
popf
pushf
filds
fsubrs
or
movsb
xor
mov
out
xchg
inc
pop
rolb
cld
dec
rol
loopne
xchg
mov
dec
fstpl
push
imul
sti
mov
mov
aam
add
xchg
aad
aad
add
gs
add
mov
popa
mov
mov
adc
pop
inc
mov
movb
mov
xor
ja
ss
loop
gs
scas
sti
dec
adc
sbb
jae
pop
es
int3
xchg
adc
mov
adc
xchg
loopne
mov
scas
pop
mov
js
stos
roll
xchg
sbb
shll
sub
inc
jecxz
and
cmpsl
mov
out
xchg
push
jmp
mov
xchg
mov
mov
sbbb
into
mov
std
loopne
adc
daa
pop
push
dec
das
roll
lods
jp
lahf
adc
sbb
mov
bound
or
into
in
arpl
push
jge
popf
xor
es
into
push
std
jmp
or
jmpw
cltd
push
addr16
pcmpeqb
arpl
pop
addr16
and
stos
mov
adc
jmp
push
add
int3
dec
push
lret
insb
pop
and
inc
loopne
stos
into
push
hlt
mov
rcll
and
sahf
xor
insb
push
mov
jg
mov
push
xchg
imulb
lcall
outsl
mov
push
stos
push
xchg
dec
stc
icebp
daa
sub
sbb
adc
test
fwait
pop
xchg
jo
inc
sbb
xchg
outsl
and
inc
push
lods
sub
loopne
push
insl
mov
mov
mov
mul
movsl
xor
add
fidivl
stos
or
cmp
pusha
and
repnz
add
fisubrl
adc
shrb
xor
fistl
ja
ss
sbb
jns
push
mov
jae
pop
test
je
inc
jb
cs
dec
sub
out
fcompl
imul
mov
mov
sbb
mov
aad
in
sub
bound
lret
xchg
sbb
out
sbb
dec
ret
dec
sub
fiaddl
pushl
mov
rcll
lods
push
mov
dec
pop
dec
and
gs
xlat
push
out
ds
adc
aas
test
and
cmc
mov
push
mov
shll
clc
pop
jnp
andl
sub
dec
out
push
xor
sbb
stos
and
inc
inc
ret
lods
sbb
adc
bound
dec
add
in
faddl
pop
daa
stc
mov
pushf
test
mov
sahf
nop
mov
and
test
adc
and
lahf
mov
sbb
inc
outsl
pop
inc
xchg
push
add
sub
stc
and
ds
push
mov
rcll
inc
lret
scas
ret
ljmp
dec
test
mov
sbb
gs
cmp
xchg
cmp
jg
push
adcb
dec
cwtl
ljmp
dec
push
sbb
jo
or
xor
mov
dec
push
pop
popf
and
adc
or
andb
push
ljmp
cmp
dec
addr16
out
jnp
mov
lds
popa
mov
inc
push
xchg
jo
sbb
addr16
mov
xor
icebp
push
inc
mov
mov
scas
outsb
inc
scas
sbb
push
sbb
in
cmpsb
sahf
aaa
out
imul
cmc
fwait
pop
xor
mov
cs
mov
sbb
ret
lcall
xchg
jecxz
pushf
mov
pusha
cmpsl
mov
inc
data16
std
sub
or
dec
daa
inc
cld
sub
sbb
pop
mov
jns
add
xor
pop
sbb
mov
adcw
testb
rol
add
sbb
sub
jle
mov
cmp
sbb
movsl
mov
push
xchg
ret
mov
push
les
pop
jl
pop
sbb
daa
mov
imul
loope
mov
cmp
push
xchg
mov
sbb
les
lret
sahf
inc
clc
test
fldt
not
inc
xchg
mov
mov
xor
push
add
sbbl
pop
gs
cmp
jnp
jo
call
jg
xchg
jmp
arpl
mov
faddl
enter
outsb
mov
in
xchg
out
sub
inc
leave
cmpsl
push
call
arpl
adc
fstl
sbb
out
lret
in
cmp
jb
daa
and
pop
push
push
clc
mov
lds
ljmp
jmp
lret
in
mov
js
add
cs
andl
jl
and
lret
or
mov
mov
stc
sbb
insl
jno
fdecstp
cmp
inc
sub
add
loope
cmc
xchg
adc
test
xor
hlt
into
fsts
or
jp
loopne
xchg
loop
je
cmp
popa
loop
dec
pop
fistpll
ret
inc
cmp
push
jno
push
mov
std
or
in
and
shrl
jo
pushf
shr
or
dec
ret
clc
int
int
add
nop
fisttpll
out
mov
pop
adcl
icebp
rclb
xor
mov
inc
push
lea
movsb
xor
dec
aam
and
xchg
les
xlat
lahf
rcrl
inc
fst
mov
mov
adc
fs
pusha
in
mov
mov
sbb
imul
inc
imul
sub
adc
mov
or
pop
ret
aam
dec
inc
mov
mov
lcall
xchg
pop
mov
xor
into
jns
inc
out
sbb
mov
mov
call
lea
mov
int
fucomp
stc
pop
adc
in
mov
cmp
pop
xchg
lods
and
xchg
jb
rorb
pop
les
inc
xchg
cmp
push
imul
in
xchg
jp
std
cmpl
pop
push
pusha
out
jg
or
aas
jo
outsl
sub
stos
cmp
sub
xor
aas
subl
fimuls
rcl
je
in
mov
shrl
dec
sbb
addb
fisttps
leave
dec
mov
jbe
jo
xchg
inc
mov
in
xor
xchg
fidivl
in
inc
sub
or
aaa
inc
je
xchg
jl
inc
xchg
mov
pop
dec
inc
pop
jge
daa
push
mov
enter
dec
mov
sub
ljmp
js
stc
loopne
insl
cmc
push
and
jge
xor
in
mov
pushf
loopne
repz
mov
in
into
xchg
in
mov
fbld
jecxz
mov
push
jl
cs
outsl
or
sbb
ret
push
fdivl
inc
loopne
pop
js
inc
add
jge
add
negl
jns
push
or
mov
jmp
mov
sub
or
idivl
es
xor
cmp
das
in
int3
sbb
jo
xchg
add
cmc
push
add
fildll
in
leave
rorb
ficomps
imul
iret
or
aad
in
inc
sub
pop
sub
push
ret
cmp
out
movsb
out
bound
sub
call
add
lea
in
movsl
inc
fmuls
out
sbb
clc
and
or
adc
or
pop
aas
xchg
repz
push
jle
mov
mov
jge
add
adc
xor
or
mov
pushf
gs
inc
inc
mov
cli
add
leave
ficompl
js
aas
or
loope
loop
cwtl
mov
add
dec
hlt
mov
xchg
int
push
pop
jnp
sbb
ljmp
mov
mov
int
lahf
icebp
data16
adc
jle
mov
add
and
adc
lahf
imul
fs
lret
and
adc
push
push
push
add
cmp
cmpsl
pop
roll
mov
adc
test
pop
dec
pop
and
nop
inc
push
int3
jl
imul
pushf
aad
sbb
div
push
jmp
mov
lahf
pop
mov
imul
xor
and
and
sbb
arpl
dec
dec
jmp
cmp
movl
jmp
loopne
nop
adc
cmp
jmp
mov
out
mov
and
adc
mov
cmp
xchg
in
xor
inc
xor
jns
adc
clc
xor
mov
aaa
lcall
push
xchg
mov
sbb
call
jg
in
inc
adc
xchg
or
adc
mov
into
dec
push
add
test
fldl
adc
push
inc
push
mov
sub
xchg
test
cmp
jmp
adc
arpl
push
or
cmp
mov
dec
out
mov
arpl
stos
rcll
xchg
bnd
lret
cld
mov
mov
sbb
lcall
push
out
xchg
sub
enter
aaa
stc
leave
and
jae
xchg
pop
and
sub
push
dec
cmp
out
and
test
cmp
in
fwait
daa
sbb
cmp
push
fdivrl
cmpsl
cmp
pop
pop
jbe
imul
pop
rclb
cmp
hlt
in
sarb
push
pop
aam
gs
sbb
cli
xchg
enter
mov
mov
adc
js
in
rcl
lods
int
mov
add
jecxz
mov
pop
dec
aam
add
xchg
pop
gs
adcb
popf
aam
stos
push
jnp
push
lret
xor
addr16
andb
pop
cld
movsl
test
daa
sarl
pushl
outsb
push
adc
xor
mov
ficomps
outsb
xchg
xchg
mov
adc
dec
lret
lret
ret
adc
push
shl
xor
jg
mov
xchg
cmpsb
sarb
rclb
push
jae
loope
insb
stos
imul
scas
sbb
and
mov
jne
push
mov
rclb
insb
adc
jl
inc
imul
lods
dec
cld
sub
test
cmpsb
mov
or
mov
push
xchg
adc
mov
lock
stos
mov
dec
and
not
lods
sbb
imul
xchg
shlb
xorb
es
inc
aaa
xor
sub
pushf
push
add
test
bound
mov
rol
cmpsl
dec
in
out
mov
int3
mov
or
fst
js
and
and
ret
je
test
sbb
in
rcl
lods
sarl
fs
lret
mov
pop
pop
jae
inc
pop
pop
push
ljmp
mov
dec
imul
cmc
pop
fldenv
mov
stc
andl
fucomp
loope
fsubs
cld
cmp
popa
repnz
movsl
lock
sbb
es
and
xor
cmp
or
iret
mov
shl
mov
push
inc
inc
or
fcmove
pop
lods
lret
insb
jecxz
sbb
movsl
iret
or
cmpsb
div
pop
inc
mov
and
insb
add
lods
inc
push
ror
dec
cmp
mov
test
jmp
loope
dec
push
mov
add
ds
test
test
jb
xor
cwtl
insl
inc
dec
sarl
int3
sarl
cli
push
sub
rcl
jnp
add
into
iret
inc
push
fdivrs
enter
dec
sub
push
add
sub
sub
imul
dec
daa
cltd
out
cmp
aas
or
pop
jo
in
cmpl
es
icebp
jo
ja
add
inc
lret
push
inc
sbb
dec
in
xchg
fidivrs
dec
xchg
dec
adc
mov
lahf
mov
jno
or
scas
imul
sbb
xchg
push
ficoms
mov
gs
inc
push
insb
sbbl
sub
fdivl
dec
ret
sub
cwtl
es
pop
cmp
movsb
jmp
cmp
lret
ret
dec
push
mov
shl
inc
dec
xor
cmc
out
stos
mov
lds
out
mov
mov
mov
add
cmpsl
cs
movsl
jmp
mov
xchg
and
mov
fidivrs
and
in
imul
jge
cmp
mov
jge
xchg
mov
and
cmp
xor
push
pop
push
push
xchg
sar
inc
ljmp
cmp
push
ss
ja
cmp
stos
jne
dec
pusha
movl
push
fdiv
cmp
mov
xchg
es
sbb
cmp
sub
in
add
push
addr16
fs
fstpt
add
cwtl
push
loope
movsb
arpl
cli
scas
adc
cmpsl
and
or
xor
imul
subb
mov
scas
push
or
sbb
push
mov
mov
dec
daa
js
les
dec
inc
ficoml
test
jmp
pop
outsb
xchg
adc
loope
or
push
mov
inc
mov
push
mov
jecxz
cmp
adc
lret
sbb
mov
xor
cli
push
add
cld
shrl
lret
cmc
jae
dec
jl
imul
inc
xor
cmpsl
lods
xor
xor
not
push
call
adc
sub
rorl
sbb
cmc
out
pcmpgtb
inc
rorb
xor
mov
mov
xchg
mov
mov
dec
insl
adc
mov
jae
jecxz
mov
jecxz
fcmovnb
and
mov
loope
inc
test
pop
test
ljmp
push
xchg
pop
and
ljmp
pop
int3
gs
or
xchg
inc
nop
mov
xor
shll
mov
add
icebp
lret
sahf
mov
sbb
adc
xor
lahf
inc
fdivl
add
dec
push
or
pop
and
jg
xchg
jnp
push
cmp
fwait
lods
cmp
ja
dec
stos
mov
pop
dec
xor
push
sub
xor
les
lock
getsec
xchg
xor
test
mov
cmp
in
lcall
pop
adc
dec
lret
ja
xchg
pop
mov
mov
mov
loop
aaa
rcrb
lcall
sub
mov
cmp
inc
mov
xchg
fsts
aam
add
fsubl
lock
xchg
push
mov
cmp
shr
jle
mov
lahf
push
push
xor
lret
cmp
xor
nop
mov
mov
ds
aam
push
cmp
pop
sbb
mov
sbb
cs
jns
jno
neg
sbb
inc
std
push
out
fmulp
imul
jmp
dec
cs
or
shlb
pop
into
jne
ror
xor
or
inc
sbb
fnstcw
and
leave
and
inc
jl
sub
xchg
aad
std
in
xor
pop
aad
xchg
push
mov
test
adc
inc
jl
pop
sbb
rcll
int3
sub
ficoml
xchg
je
xor
sub
cmc
cli
out
cmp
adc
dec
or
pop
jno
xchg
insb
jmp
movb
jns
mov
cltd
pop
fiaddl
out
pop
cmp
push
push
icebp
mov
mov
cmc
xchg
ret
mov
stos
xchg
test
jne
pop
les
jecxz
cmpl
pop
adc
es
pop
addr16
shll
addl
enter
nop
and
repnz
cwtl
adc
push
fs
mov
out
inc
hlt
scas
mov
imulb
cmpl
cmp
sub
shl
cmovl
push
pop
mov
lods
sub
mov
mov
outsl
loop
test
aaa
mov
lret
addr16
cli
sbb
fistpl
popl
fwait
jb
xchg
push
lahf
push
adc
cmp
add
je
sub
cltd
mov
sub
xchg
lods
xor
mov
shlb
mov
cmp
and
cli
inc
and
jne
rclb
sbb
or
mov
cmp
shlb
mov
pushf
leave
cwtl
sub
cmp
shrl
inc
or
push
jo
ljmp
and
mov
test
mov
jns
sub
xorl
and
decl
add
idiv
sub
enter
je
sbb
mov
icebp
arpl
xor
add
xor
mov
sbb
nop
push
pop
adc
xor
int
sub
sahf
std
cltd
inc
loope
fimuls
mov
push
loopne
mov
sbbb
mov
das
sbb
fisubs
std
jmp
push
cli
sub
jle
aam
je
sub
hlt
outsb
jno
hlt
icebp
mov
fldt
push
push
call
or
out
shrl
repz
int
mov
movsb
ljmp
mov
lcall
fcomps
or
cli
shlb
in
jbe
sbb
pop
sub
aas
inc
ret
bound
icebp
iret
lods
dec
push
pop
pop
mov
xor
js
fdivrl
jg
sbb
xor
pop
fisttpl
lea
adc
xor
push
cmc
jo
data16
es
loopne
and
insb
and
ljmp
push
fwait
and
nop
sub
and
and
imul
xorl
sbbl
xchg
ret
addl
test
mov
jge
inc
jns
frstor
leave
mov
pop
xlat
push
jmp
clc
shlb
bound
scas
movsb
sha1nexte
dec
mov
int
push
pop
and
sub
pushf
xor
jae,pt
fsubp
aad
adc
pop
ja
dec
mov
and
xchg
inc
frstor
inc
add
cmp
lods
and
adc
mov
xchg
push
leave
xchg
in
jns
adc
test
shrl
or
loope
mov
test
inc
lock
pop
jne
sub
jbe
adcl
nop
push
push
sub
movsl
movsl
xor
fisttpl
int3
inc
jecxz
cli
dec
loop
mov
pop
pop
int
sub
vmovntps
push
bound
ds
mov
adcb
adc
xor
lods
xchg
xchg
push
js
push
lret
ljmp
stos
dec
dec
scas
adc
bound
jp
stos
notl
mov
mov
push
sbb
call
mov
fdivrs
jbe
mov
sbb
xchg
popf
out
int3
add
jb
adc
mov
xchg
xchg
and
mov
pop
lds
mov
adc
rcrb
rcrb
xor
popf
fidivrs
in
cli
js
xor
je
mov
js,pn
jo
ljmp
ja
mov
adcb
jp
popf
jns
dec
push
dec
fmull
push
mov
fists
push
xor
mov
pop
adc
xor
cld
notl
lea
and
or
xchg
test
fstpl
mov
sahf
mov
sub
in
inc
or
and
ret
add
xchg
in
push
inc
mov
in
sbb
dec
cmp
ret
jl
mov
clc
add
lods
jns
or
or
pop
cltd
repnz
cmp
pop
add
push
lret
pop
and
gs
jg
inc
xchg
js
jno
flds
add
jbe
addb
sbb
mov
repz
inc
stc
adc
adc
inc
pop
push
xchg
hlt
sti
repz
mov
not
les
and
dec
cmp
pop
lods
sarb
push
rclb
out
or
push
into
loopne
push
imul
inc
dec
test
push
add
inc
out
fdivrl
iret
or
mov
xchg
mov
xlat
mov
ja
mov
add
aam
mov
mov
sub
inc
and
lods
std
psubd
mov
rorb
sarb
push
inc
fs
inc
mov
inc
cmp
mov
xchg
add
jne
cmpsl
mov
das
inc
and
push
cmpsl
ret
or
mov
jo
sbb
shll
jae
test
es
cwtl
mov
fwait
out
shlb
aas
icebp
push
mov
cmp
and
add
rcrl
push
xchg
xor
mov
push
imul
outsl
andl
pushf
pop
xor
push
inc
xlat
cs
cmp
aam
sbb
js
ljmp
push
sub
mov
pop
lock
aad
inc
mov
cmp
ljmp
mov
xchg
in
lret
sbb
add
aad
mov
mov
les
sahf
ja
addr16
dec
sti
xchg
mov
int
push
sbb
push
xchg
add
xchg
nop
lds
jle
xchg
movsl
push
and
jo
or
xchg
pop
pop
push
lcall
push
call
cwtl
ret
mov
insl
fistps
or
adc
sub
xchg
pop
push
or
pop
inc
shrl
scas
into
call
fnstcw
stos
push
cmp
cmpsb
push
and
mov
pop
cmc
push
jne
and
aam
pop
and
js
mov
jne
jmp
sub
icebp
pop
int
inc
out
lds
inc
xchg
cmp
sbb
in
pop
mov
fstl
sbb
pop
mov
mov
push
test
ficomps
inc
lods
sbb
push
cmp
je
cmp
ds
rorb
xchg
xor
mov
or
jg
fimuls
fwait
ret
leave
or
and
outsb
and
jl
mov
ja
cmp
push
push
sti
pop
or
sbb
bts
or
outsw
xchg
sub
add
xor
repnz
stos
add
jle
xchg
dec
inc
into
movsb
sub
mov
leave
adcb
mov
sub
sbb
push
mov
sub
push
gs
cmp
enter
punpckhbw
mov
dec
imul
dec
mov
or
mov
fidivl
cmp
xchg
addr16
and
push
test
pusha
stos
scas
mov
xchg
or
aad
roll
jne
cmp
ljmp
lret
push
movaps
mov
addr16
ja
into
adc
rorb
adc
dec
xchg
sbb
xchg
xchg
sub
test
cs
cwtl
adc
adcl
cld
mov
inc
pop
xchg
rcrb
adc
sub
ss
push
cli
std
pop
xchg
cwtl
sbb
orl
cld
aaa
pushf
movsb
cltd
jb
jmp
aad
mov
or
gs
xor
jge
sbb
scas
cmpb
cmp
in
inc
loop
shll
dec
outsb
int
jecxz
xchg
dec
in
xor
cmpsb
or
sub
sub
imul
dec
ret
ja
loope
sar
ret
lret
fidivrs
test
mov
or
inc
add
fildl
xchg
loope
mov
add
push
dec
out
inc
mov
push
hlt
inc
mov
pushf
rcrb
adc
popf
adc
add
repz
aas
inc
sbb
shr
pop
fsubs
cmp
cmp
jne
xchg
xchg
cli
adc
push
cs
out
sar
daa
cmp
pop
sarl
dec
pop
out
dec
adc
pop
mov
push
lods
cmp
stos
lcall
add
aaa
pop
ror
inc
lret
sbb
push
inc
ds
adcl
and
out
push
bswap
popf
fisubs
movl
jecxz
dec
xchg
jo
mov
sbb
push
mov
add
fs
mov
imul
push
mov
adc
xor
aad
push
jge
and
xor
mov
push
fsubp
dec
sub
imul
xchg
mov
mov
loop
lods
and
xor
push
mov
out
mov
lods
add
lcall
mov
rcl
push
lea
stc
fdiv
sub
mov
push
adc
jge
andb
and
cmpsb
and
and
data16
stos
xchg
pop
clc
jns
or
push
lcall
push
das
xor
repz
xchg
or
sbb
movsl
push
push
mov
jp
repz
dec
and
shrb
lcall
pushf
jbe
neg
cmc
mov
push
lcall
adc
xor
stos
pop
jge
xchg
incb
pop
add
iret
and
pop
rclb
sub
jne
movsb
neg
cmp
pop
pop
popa
mov
mov
fimull
jecxz
aaa
nop
xorl
adc
cmc
addl
inc
in
aam
negl
xchg
mov
movsl
outsb
and
out
add
iret
mov
stos
cmpsb
mov
outsl
mov
sub
in
adc
pop
jbe
mov
or
push
cmpsl
pop
orb
ss
cmp
in
shrl
xchg
xlat
jae
or
out
cli
fildll
inc
scas
jne
or
push
pop
ret
in
rcl
lea
xchg
add
jmp
in
arpl
mov
movsl
out
les
push
pop
cmc
pop
add
rorb
js
mov
loopne
scas
fists
jbe
jmp
xlat
arpl
adc
adc
pushf
in
pop
imul
ret
fstpl
sahf
test
jl
inc
jl,pt
xchg
xor
das
mov
movsb
jmp
subl
dec
xor
mov
mov
movsl
loopne
push
xchg
addr16
dec
mov
outsb
or
jg
push
mov
jg
fidivl
mov
cmc
add
rol
jnp
jb
sbb
mov
fwait
stos
jo
lds
iret
sti
in
mov
sbb
movsb
push
adc
cmp
add
dec
sbb
push
movsl
xchg
lods
sub
ljmpw
dec
inc
movsb
mov
xlat
fdivs
js
js
fldt
popa
push
xlat
inc
test
sub
sub
leave
sahf
xchg
xlat
sbb
mov
sub
mov
mov
scas
frstor
mov
mov
mov
pop
cmpsl
pusha
icebp
iret
push
mov
lahf
mov
jae
pop
mov
pop
cmp
mov
mov
int3
lret
mov
lods
sarb
xchg
jl
andb
push
mov
xchg
fbstp
jne
sub
div
ficompl
or
roll
fildll
xchg
adc
dec
mov
test
xor
sub
push
scas
cmp
into
and
inc
and
aam
xorl
pop
lods
call
int3
aam
ss
sbbl
push
gs
call
shlb
testl
jb
cmp
push
stos
jb
cld
jmp
sub
idivb
mov
adc
mov
add
dec
arpl
imul
push
lods
cmc
pop
inc
imul
cmp
subb
add
sahf
jo
aas
cmp
jnp
es
xchg
cmp
pop
xor
inc
ret
mov
xor
jle
jecxz
jnp
icebp
inc
add
mov
sbb
cmpsb
add
into
sti
cmp
movb
cmc
cmpb
push
stc
mov
sbb
cmpsb
xchg
xor
js
push
xor
ljmp
ret
mov
jge
iret
mov
lret
cmp
jae
or
jl
int
test
mov
outsb
jno
pop
arpl
add
mov
stos
aaa
mov
push
shrb
inc
sub
xchg
sbb
cltd
add
fstpl
or
cwtl
les
ret
lods
inc
bound
jp
fdivr
or
je
std
push
loope
bound
in
xor
lret
mov
fnsave
into
xor
cs
nop
incb
aam
adc
and
dec
xor
push
cmpb
fcompl
out
fidivl
imul
cmpsl
in
or
xor
fnsave
xor
jl
inc
lea
jns
pop
inc
movhps
sub
jb
sarb
sub
sub
pusha
inc
push
and
lods
shr
and
mov
icebp
sbb
imul
sbb
xchg
mov
mov
stc
inc
dec
xor
mov
jg
add
or
cmp
les
and
adc
xorb
jb
inc
ret
js
lods
jp
ja
pop
add
jl
cs
jns
push
outsl
fwait
jbe
cmc
push
hlt
outsl
inc
push
fbstp
pop
ljmp
outsb
pusha
mov
cmc
stos
fistpl
jbe
icebp
mov
add
xchg
mov
rolb
repnz
xchg
and
aad
idivl
call
loope
xchg
data16
mov
fistpll
les
arpl
insb
lahf
arpl
jle
add
addr16
pop
std
dec
jbe
fldt
xchg
lahf
aam
adc
lcall
jns
and
sub
jns
jne
cs
clts
push
jge
push
fdiv
mov
lret
mov
xchg
fbld
cmpsl
sub
jle
inc
or
mov
or
insb
fistps
push
mov
xor
jp
push
mov
test
pop
and
sarl
jo
xchg
cmp
mov
shr
stos
jmp
xor
lret
int
stos
cld
fadd
pop
mov
push
std
movsl
adc
mov
fisubrs
xchg
repnz
movsl
popf
sub
jns
cmp
aaa
inc
ds
xlat
inc
inc
inc
out
lret
or
adc
sbb
inc
dec
stc
mov
icebp
inc
call
into
les
jnp
lods
es
incb
push
mov
jmp
dec
or
test
sub
adc
sbb
mov
dec
sbb
ret
and
cltd
into
repz
cmp
outsb
mov
mov
mov
movsl
fadds
pop
clc
jne
loope
mov
pusha
sbbl
xchg
scas
sti
popa
push
cmpsl
test
jl
jo
mov
mov
cmpsl
jae
les
lods
or
aas
push
mov
xor
mov
loope
nop
jle
inc
mov
mov
dec
loope
push
add
call
insl
push
loopne
xor
popa
push
push
mov
dec
fisttpll
jl
cmpl
xor
xor
jnp
add
dec
out
jns
test
xor
xor
mov
aad
mov
jb
out
xor
xor
sub
sub
aaa
testb
inc
lds
dec
int
negl
pop
ja
fwait
xchg
cmpsl
ss
ds
sbb
bound
repnz
int
pop
lret
xchg
pop
xor
aaa
testl
mov
sarb
lcall
enter
jno
sbb
in
jecxz
jp
cmpb
sbb
shl
movsl
imul
lods
pop
sub
fdivs
es
icebp
jbe
mov
pop
daa
push
push
ret
jnp
sub
lock
mov
testb
push
or
dec
jnp
ret
fdiv
scas
xchg
ljmp
aam
fidivl
jno
testb
jbe
ficompl
pusha
jae
outsb
insl
jecxz
mov
clc
lret
mov
sbb
inc
mov
pop
repnz
sub
push
or
inc
mov
and
mov
cmp
xor
xorl
out
dec
add
ljmp
and
icebp
loopne
mov
and
or
sbb
jg
dec
es
xchg
cmp
sahf
aaa
enter
xchg
fs
add
fisubl
lahf
scas
mov
in
cmp
adc
pop
jae
pop
mov
inc
add
jg
int
xchg
xor
iret
adc
mov
fdivs
cltd
cltd
push
jb
popf
dec
push
maxps
inc
clc
add
in
and
jmp
fwait
popf
cmc
in
ljmp
and
popf
es
mov
push
pop
adc
out
jg
pop
lods
pushf
mov
xor
clc
and
mov
mov
add
fisttpll
lods
lods
dec
push
adc
cltd
sub
pusha
repz
popa
fildll
and
jno
rcrb
mov
dec
ffreep
cmp
xlat
inc
hlt
in
push
adc
mov
test
sbb
into
imul
adc
dec
adcb
inc
add
pop
mov
xchg
ficoms
mov
pop
insl
or
cli
pop
into
shrb
dec
mov
fstps
pop
das
and
and
lret
xchg
in
mov
xor
and
push
nop
pop
sub
xchg
jg
popf
hlt
push
cwtl
dec
sbbb
icebp
test
fmull
ret
cmp
mov
dec
xor
inc
jmp
add
fsubr
enter
sbb
push
fcom
sti
in
inc
test
mov
sbb
cmpsl
dec
mov
push
cmp
in
dec
cmp
dec
cli
sbb
stos
dec
movsl
lret
add
and
fstp
loopne
dec
repz
clc
push
imul
cmpb
fdivl
imul
pop
bound
xchg
idivl
pop
sub
mov
dec
cmp
xchg
and
ret
insb
mov
outsb
rclb
mov
sub
push
lods
mov
push
shrl
stos
pusha
andb
enter
js
or
pmuludq
rorb
inc
imull
aam
jae
push
mov
pop
scas
lret
push
je
ret
cmc
dec
fisttpll
pusha
les
adc
jb
lea
jnp
sbb
add
jl
dec
fbld
mov
into
nop
sbb
aam
push
pop
and
pusha
insb
cwtl
call
and
push
jle
les
xor
das
int3
cmpsl
xchg
cmp
cmc
fstp
xchg
mov
dec
mov
stc
inc
insb
cmp
loopne
push
lock
imul
jge
fdivs
xor
test
aam
scas
or
push
in
jp
arpl
ret
out
sbb
or
dec
xchg
pop
add
hlt
sbb
roll
mov
hlt
test
or
test
mov
or
aam
mov
pop
scas
pop
fstp
or
cltd
shrb
shrb
sti
or
imul
jle
pop
or
jb
push
ljmp
pop
push
inc
and
cmp
jl
pusha
xor
mov
fwait
pop
insl
ret
int
mov
addr16
jb
mov
lea
push
sub
sbb
addr16
pcmpeqw
inc
lock
mov
push
ret
pop
fistpll
ficoml
cmp
sub
mov
cmpsb
lahf
or
or
aas
sbb
dec
sub
mov
push
ja
fs
push
cmc
push
jae
in
jp
add
into
mov
or
je
hlt
mov
cmp
inc
xchg
rcrb
js
jnp
dec
fcmovnbe
not
inc
ror
mov
or
jle,pt
add
and
rcr
cli
popf
cmp
cltd
les
inc
in
xor
lret
inc
sub
dec
in
ljmp
ja
outsl
inc
loopne
sbb
pusha
mov
or
inc
mov
push
push
ret
fs
ret
aaa
ficompl
xchg
shlb
mov
inc
data16
pop
pop
out
movsb
sub
bnd
icebp
out
mov
insl
movsl
mov
outsl
xchg
sub
data16
pop
call
dec
ja
jp
mov
out
sub
pop
mov
in
add
sti
xor
mov
out
fnstcw
in
push
imul
cwtl
adc
xor
sub
mov
movsb
mov
fnstsw
add
mov
pushf
nop
and
stos
mov
jbe
rcrl
pop
dec
ja
mov
cmp
or
dec
sbb
icebp
xor
adc
fildll
mov
pop
push
dec
test
and
xor
negb
add
or
push
cmp
les
sub
rcrb
repnz
fwait
inc
and
aaa
jbe
adc
and
das
inc
push
xchg
mov
in
pop
xor
neg
cmp
jmp
bound
insb
mov
pop
sub
ljmp
inc
pop
mov
dec
fisttpl
leave
jne
pop
push
add
test
decb
sbb
sub
data16
pusha
dec
cmpsb
jp
pop
cmc
jmp
pop
mov
mov
sub
jbe
cmp
andl
movsb
movsl
inc
aas
pop
jae
mov
or
leave
push
inc
add
in
mov
adc
or
es
dec
es
shrb
paddsw
dec
ja
cmp
out
xor
cld
mov
cld
dec
xor
movsb
and
imul
inc
cmp
pop
dec
out
pop
iret
push
xchg
sub
mov
cmp
and
fisttpll
push
jecxz
xchg
shrb
push
nop
cmp
decl
mov
cli
jg
and
jne
mov
cmp
out
cmpsl
or
mov
mov
test
push
sub
pop
push
push
test
in
inc
pushf
scas
jmp
or
xchg
push
push
jns
sbb
orl
mov
inc
mov
stc
xchg
cmc
sub
add
movsl
mov
icebp
lret
ret
add
dec
adc
scas
cmpb
inc
push
popf
ljmp
mov
rcll
mov
fistpll
call
fdivrl
cmp
sub
mov
filds
popf
shl
pop
std
jb
jns
fldt
mov
ret
xchg
pop
repnz
jg
cltd
neg
and
js
les
jmp
ret
inc
xchg
xor
jmp
stos
mov
aam
push
add
loopne
push
rorl
aam
push
sahf
xchg
jo
add
je
lcall
jge
pop
lods
aam
mov
or
push
es
ror
jb
daa
or
in
in
sub
inc
or
jns
mov
insb
stos
ja
movsb
out
cmc
loop
mov
cmp
iret
sti
jge
cmpsb
aaa
sbb
aaa
add
inc
jns
imul
mov
jno
leave
test
pop
outsb
out
leave
xlat
fnstenv
sub
cltd
jae
orl
cmpsl
out
xlat
cld
mov
pop
or
push
push
xchg
jae
push
cmp
push
jne
dec
xlat
jb
xchg
shrl
xchg
aad
or
loopne
sbb
data16
xor
test
pop
ja
fcoml
sahf
fildl
add
cmp
clc
push
and
mov
add
das
and
repz
fsubrs
inc
mulb
pop
push
sbb
xor
imul
or
pop
stos
aad
xchg
mov
lods
out
gs
jno
sub
adc
adc
mov
cmp
fstp
dec
sbb
imul
daa
fiadds
pop
jle
fcmovnbe
shll
jnp
loopne
insb
loope
jb
push
and
out
mov
cmp
mov
fs
push
loope
out
lds
ds
outsl
inc
sub
pop
dec
push
ret
ret
push
push
js
insb
outsb
inc
scas
js
lea
dec
cmc
sub
xchg
ljmp
push
cli
jmp
add
or
inc
or
lret
int3
je
or
or
adc
mov
jns
iret
add
cwtl
fnstenv
aad
fisubl
sbb
test
mov
add
inc
jno
in
aaa
inc
lret
add
test
and
jb
ds
adcl
popa
nop
xchg
das
jns
add
or
mov
dec
rorl
into
cmp
rclb
and
and
clc
iret
out
push
aas
shlb
mov
and
js
push
gs
mov
dec
xchg
lods
adc
or
arpl
jge
movsl
lahf
mov
std
dec
pop
mov
mov
pop
bound
mov
mov
insw
fs
push
adc
or
jne
pop
mov
lods
dec
pop
out
cmp
jae
les
in
adc
dec
jns
iret
cmpl
push
and
arpl
dec
aaa
mov
imul
cli
ljmp
jno
pop
imul
jl
fdivrl
test
xchg
dec
jo
lcall
icebp
lret
mov
push
cs
into
push
add
push
xor
and
inc
scas
je
subb
inc
dec
fisubl
sbb
and
xor
mov
push
adc
jbe
lods
or
xor
clc
rcl
cs
mov
sub
cmc
adcl
jle
std
test
or
test
mov
push
jnp
jmp
in
adcb
lea
sbb
or
lcall
jb
push
pop
ds
push
cmc
outsb
pop
adc
movsl
nop
add
inc
pop
aas
or
xor
das
fistps
jnp
xchg
aam
push
and
jns
lods
add
pop
pop
negl
cmp
push
sub
lret
pop
int
cmc
or
inc
in
adc
pop
xchg
sbbl
ret
daa
adcl
pop
push
xchg
rorl
bound
loop
nop
dec
aam
imul
nop
adc
sbbb
pop
inc
add
push
pop
sub
add
jns
in
lock
rcrb
adc
movsl
rcl
enter
daa
lds
movl
lods
dec
kmovw
xchg
test
iret
stc
dec
xchg
push
jmp
pusha
jb
lods
aad
cmp
xchg
pop
lods
mov
shll
loop
or
sub
pop
fistps
xor
in
dec
icebp
or
mov
addr16
mov
mov
push
fidivrs
sti
lods
int3
mov
fcoml
mov
sbb
mov
xchg
mov
jg
cmpsl
insl
xor
mov
sbb
or
jb
mov
mov
stos
gs
sub
in
sub
xchg
cmp
stc
push
xchg
add
popf
adc
test
idivb
lea
jne
jbe
mov
shrb
adcb
sub
lret
enter
repnz
ficoms
dec
movsb
out
mov
pop
dec
ja
xor
add
les
repnz
adc
mov
mov
mov
add
insb
test
pushf
mov
stos
scas
sbb
cmp
jns
inc
adc
dec
hlt
pop
xchg
adc
mov
or
mov
mov
aaa
cltd
mov
jg
arpl
mov
xchg
divl
cmpsl
push
inc
adc
xchg
and
shll
rclb
mov
je
pop
out
sti
inc
or
loopne
jo
stos
cwtl
add
fwait
pop
stos
icebp
cmc
pop
test
stos
mov
insb
sub
je
sbb
hlt
scas
or
jb
dec
inc
pop
icebp
jg
shlb
xchg
push
cmpl
mov
icebp
push
dec
pop
fcompl
pop
cmp
pop
xchg
mov
aaa
dec
inc
xchg
cmp
lock
inc
insl
clc
inc
fadds
mov
notb
xchg
mov
jecxz
inc
divl
imul
mov
fldt
mov
mov
ds
dec
loope
lret
int
lahf
jno
push
mov
jne
leave
ss
mov
pop
je
cltd
cmp
daa
dec
dec
push
shll
ja
jo
outsb
jle
das
outsl
outsb
lret
inc
enter
mov
jb
xchg
outsb
mull
xor
stc
xchg
xchg
pop
add
in
sub
ljmp
push
je
mov
mov
jb
sahf
xlat
adc
aaa
dec
cltd
nop
cmp
and
cmp
mov
jge
psubsw
xchg
sti
xor
xor
repnz
andb
in
push
cld
imul
stos
mov
out
adc
paddw
xor
fistpl
push
adc
mov
xor
mov
dec
js
test
das
cli
fwait
add
icebp
movsl
mov
add
adc
test
mov
jae
stc
sub
mov
scas
cs
or
adc
je
jno
cmp
imul
xor
testl
repnz
or
pop
loope
and
fsubr
out
add
cmpsl
std
mov
pop
aas
mov
out
push
cwtl
and
add
inc
and
orb
lea
xchg
dec
xlat
sub
daa
rorl
ja
xor
sub
push
push
push
cli
lds
ja
sahf
jne
cwtl
pop
sti
stc
add
aas
popf
popf
push
push
int3
divl
jae
int3
push
outsl
push
sahf
add
aam
and
addr16
fstpl
xor
push
jnp
out
loopne
fdivl
mov
mov
mov
mov
push
pusha
add
xor
dec
cli
lahf
dec
addb
out
push
test
pop
mov
mov
movsl
adc
les
mov
popf
mov
and
and
or
outsb
inc
repz
scas
mov
mov
lahf
rolb
push
mov
or
xor
outsl
xchg
addr16
gs
outsl
jge
sub
test
std
pop
mov
rol
iret
movsl
push
out
xchg
sbb
dec
jecxz
loope
xor
xor
sbb
push
xchg
inc
pop
sub
push
test
mov
popf
mov
xor
xor
pop
adc
lock
lods
cmc
int3
rorb
sti
imul
xchg
or
sub
cmp
hlt
dec
cmpb
mov
xchg
pop
shrl
jle
mov
aas
or
push
test
lock
test
mov
jmp
xchg
inc
jecxz
mov
scas
dec
es
dec
fistl
and
and
dec
cs
fiaddl
cld
xor
jp
dec
and
das
or
cmp
shll
adc
fsubr
insl
stos
pop
push
inc
mov
mov
imul
mov
cli
and
roll
cmpsb
popl
stc
arpl
outsb
iret
shl
adc
test
aad
fnstsw
js
jno
popf
cmpsb
jge
and
cmp
add
sti
stos
inc
inc
cli
shlb
gs
dec
or
fists
xor
testb
pop
push
xor
icebp
incl
out
jge
dec
out
fs
inc
adc
xchg
dec
mov
adc
push
mov
gs
sbb
mov
popf
loope
xchg
pop
das
xorb
sbb
push
les
es
inc
shll
imull
cli
rcrl
nop
dec
ja
addl
sti
add
push
mov
cmp
sbb
clc
stos
or
or
psadbw
ret
inc
cli
daa
mov
cmp
inc
adc
nop
bnd
dec
inc
test
inc
xchg
add
push
push
mov
push
std
jno
out
or
pop
or
leave
pop
fsub
inc
add
pop
loop
pop
cmp
enter
aaa
out
loope
push
dec
sbb
lods
sbb
and
adcb
push
out
push
xor
lds
dec
lods
stos
mov
mov
or
mov
pop
scas
adc
fisubs
and
mov
mov
or
clc
and
and
jge
pop
popf
adc
int
popf
mov
mov
icebp
jne
and
mov
loopne,pt
lds
push
lods
pop
or
in
dec
movsl
push
push
rcrb
push
mov
pusha
fisubl
inc
mov
cmp
mov
outsl
xlat
popf
jnp
cwtl
mov
xor
lea
ror
and
jg
lock
cmp
mov
je
sbb
jns
outsb
ret
icebp
ss
add
push
je
mov
jle
sahf
dec
inc
add
das
and
fmulp
inc
cltd
xchg
leave
adcb
stos
das
inc
xchg
ljmp
jb
jge
dec
out
push
fimuls
jb
sti
or
push
push
or
mov
xchg
test
xor
xchg
xlat
add
mov
scas
and
xor
orl
lcall
stos
push
mov
push
inc
jl
lds
adc
sarb
fstpt
fwait
xor
movb
mov
jmp
adc
decb
jp
fdiv
testl
idivb
mov
sub
in
jbe
dec
or
mov
popa
lods
adc
mov
shlb
dec
addl
fisubrs
mov
jnp
mov
or
scas
adc
hlt
loop
test
inc
gs
pop
pop
lcall
imul
ret
xchg
lock
mov
aad
test
jge
xchg
sub
mov
pop
push
dec
sub
mov
movsb
movsl
jecxz
mov
pop
std
mov
xor
mov
testl
sub
out
pop
mov
in
outsl
mov
enter
mov
jne
mov
insl
fs
adc
bound
cmp
mov
mov
inc
mov
js
repz
adc
sbb
mov
out
xchg
dec
mov
divl
fists
sub
jle
shll
mov
call
in
cwtl
or
mov
call
or
stc
mov
cmp
or
jo
repz
stos
push
mov
andl
push
xor
into
xchg
movsb
push
mov
test
sub
popa
xchg
in
in
adc
mov
push
jo
leave
je
fucomp
xchg
mul
imul
add
cmpsl
data16
ss
inc
mov
sbb
daa
sbb
out
cmpsl
js
add
pop
fnsave
loopne
in
mov
add
fisttpll
adc
out
aaa
jl
push
gs
stc
lock
xchg
aaa
xchg
arpl
lods
stos
pop
sub
xchg
inc
out
cwtl
imul
cmp
xor
xchg
pop
popf
test
cmp
push
adc
mov
movsb
add
xor
xlat
in
loope
xchg
pop
leave
xor
and
mov
bound
xchg
pop
pushf
enter
repnz
push
icebp
mov
bound
movq
jnp
jnp
out
shrb
roll
jb
fsts
test
mov
jne
movaps
add
sbb
in
sub
lahf
sbb
push
loopne
insl
sub
dec
inc
and
xlat
cltd
push
ss
test
jl
push
and
jmp
dec
rolb
movsb
enter
push
dec
lahf
ret
lods
dec
inc
push
lods
decb
insb
movl
iret
or
imul
das
fcomps
gs
js
push
sbb
loope
and
and
pop
fsubl
mov
dec
loop
stos
lds
es
in
sub
pop
mov
mov
ss
fs
scas
and
pop
sub
cmp
adc
cmp
lea
jmp
imul
imul
jns
gs
scas
shrb
cs
ret
outsl
pop
in
enter
jb
jno
mov
pop
cmp
jbe
test
mov
pop
jle
jp
xor
sbb
div
jbe
dec
lret
leave
dec
push
jne
sub
inc
sub
stos
push
add
sub
push
popa
jmp
call
test
faddp
mov
add
or
cltd
ljmp
arpl
push
insl
or
loop
adc
xor
sub
mov
lret
inc
mov
push
cmp
out
in
pop
js
inc
mov
dec
mov
cmp
ret
jg
clc
sbb
rolb
jne
shll
aaa
ds
lcall
pop
mov
in
sahf
ja
add
nop
pmaddwd
ljmp
jp
add
aas
jge
lock
pop
push
fmulp
cltd
mov
fsubl
sbb
and
jne
push
imul
stos
xlat
rcll
test
add
lods
adc
or
xchg
pop
mov
adc
push
jmp
inc
add
xchg
dec
fwait
ret
loope
stc
mov
jbe
aas
or
leave
push
pop
mov
adc
push
jecxz
push
fstpl
pop
outsl
jecxz
dec
sbb
jp
sub
push
or
call
test
test
pop
jp
fsubr
gs
push
mov
add
xor
mov
cmc
lret
add
jp
fwait
sbb
cmp
and
or
leave
adc
scas
mov
bound
js
stos
cwtl
jge
dec
fidivrl
add
pop
cmpsb
cmc
pop
xor
and
movsb
repnz
xor
push
xlat
in
faddp
popf
or
popa
testl
sub
in
mov
out
xor
sti
stos
fisubrl
pop
xchg
pop
neg
push
test
dec
ljmp
fidivrs
ror
sub
jmp
lret
call
outsl
mov
xor
add
notb
js
mov
xor
mov
xchg
or
pop
lds
pop
and
adc
adcl
cmpsl
pop
cmp
fildl
sub
mov
push
add
es
jp
pop
sbb
push
xlat
fs
mov
mov
aas
aaa
pop
fs
daa
mov
mov
xchg
cmp
or
outsl
cld
mov
xor
cmpsb
push
sbbl
mov
jmp
lcall
push
jg
or
clc
stc
xchg
hlt
int3
xlat
scas
roll
sub
loope
inc
sub
mov
dec
movsl
xchg
fisubrs
daa
and
mov
cmpsb
out
inc
adc
jnp
fadds
inc
daa
pusha
clc
repnz
adc
sbb
jle
repz
inc
add
insb
lret
fwait
pop
pop
repz
adc
and
push
jae
cmp
or
jbe
push
lds
xor
hlt
test
int3
jbe
jno
jecxz
jns
or
andl
jge
cmc
xor
stos
jecxz
repz
mov
mov
push
inc
push
sbb
and
repz
or
jmp
fsubl
mov
mov
pushf
sub
test
lock
mov
sbb
xchg
xchg
iret
xchg
adc
in
xchg
push
int3
shr
push
fimuls
xchg
stos
shlb
and
fiadds
loop
adc
pop
lds
jge
cmpsl
out
test
push
and
push
popa
sbb
xor
sub
in
mov
test
pop
rclb
fs
mov
push
loopne
test
test
mov
in
jo
add
sbb
pushf
jb
or
mov
sbb
out
lret
sub
cmp
insb
push
mov
stc
inc
loope
cmpsb
dec
in
mov
push
rclb
push
in
pop
hlt
xor
fwait
ds
sub
or
jae
xlat
sub
cmp
jecxz
faddl
jno
cli
lds
ja
repz
push
lret
aad
dec
popa
jo
int3
pop
rcrl
sbbb
test
or
fbstp
and
pop
cmpsl
sub
test
jle
mov
in
enter
pop
mov
je
aam
jbe
test
or
bound
out
test
mov
rcrl
movsl
jb
add
lods
push
out
fwait
leave
xchg
dec
sub
xor
outsl
cmp
in
adc
add
cmp
sti
aas
jmp
xchg
mov
imul
out
cmp
cmp
sub
push
cmp
ficoms
xchg
sbb
into
hlt
jg
sub
xchg
xchg
inc
test
jmp
sub
adc
mov
mov
push
sub
push
jge
repz
fwait
jne
add
arpl
cmpsb
cmpsb
sbb
push
iret
mov
repnz
xchg
inc
or
ror
or
ja
sub
or
or
push
cmp
push
cmp
cli
gs
rcll
mov
inc
cmpsl
dec
inc
fistps
or
popa
jmp
call
sbb
popf
clc
mov
xchg
int
into
mov
adc
pop
mov
mov
sti
or
mov
mov
fwait
or
mov
or
imul
xchg
addr16
add
aaa
shrl
dec
addb
stos
sub
outsl
sub
inc
in
into
addr16
test
xchg
mov
fisubrs
add
mov
out
xor
lods
jp
orl
popf
cmpsb
and
test
out
popa
fistl
std
cmp
outsb
push
push
xchg
ja
or
mov
cmp
and
jp
mov
ljmp
jmp
jns
ret
jnp
cmc
xor
cltd
test
aas
dec
ret
pop
xor
xor
push
imul
adc
call
outsb
ljmp
push
cmp
jl
inc
into
bound
pusha
iret
xchg
mov
push
inc
shll
cmpsl
push
js
push
mov
cmp
pop
out
cmp
xchg
cmc
test
mov
or
inc
sbb
lret
call
es
mov
and
mov
push
xchg
shl
jns
xor
xor
add
mov
mov
test
or
mov
lret
xlat
pop
dec
cmp
dec
hlt
dec
inc
xor
movsl
dec
dec
mov
rcrl
mov
add
xor
lods
cmp
or
xor
cmp
push
pop
mov
jbe
jmp
push
dec
jmp
xor
sbb
adc
mov
div
hlt
in
outsl
push
arpl
iret
loopne
jb
cmp
test
stos
lret
out
nop
adc
cltd
cmpsl
lods
mov
insl
lcall
mov
xchg
aam
cli
rcr
in
cmp
sbb
lcall
pushf
enter
pop
pop
lock
jg
cmpsl
stos
lahf
push
scas
dec
ret
int3
or
dec
icebp
popa
sbb
lret
imul
xor
inc
aaa
cwtl
and
or
js
out
push
add
fisubrs
jne
xchg
xchg
xor
push
lock
mov
sbb
sarb
xchg
xchg
mov
mov
or
inc
in
and
or
pop
inc
ljmp
or
mov
xchg
loope
sbb
imul
sub
rclb
ret
mov
aaa
int3
xchg
and
mov
pushf
cld
jg
nop
cmp
xor
lcall
js
sbb
outsb
gs
bound
jg
sub
inc
fs
stos
out
cmp
add
call
int
stc
pop
lods
cmpsb
add
dec
or
fiadds
in
cmc
dec
test
mov
add
pop
or
int3
rcll
loope
jns
loop
sbbb
iret
cs
or
push
sub
test
int
push
loope
fisttpll
mov
out
int3
pop
jae
in
and
cli
lock
push
fidivs
jne
mov
cli
sahf
xchg
add
jbe
xchg
mov
mov
jo
adc
jge
into
fcomps
lret
ret
popa
out
xchg
idiv
lahf
sti
mov
clc
lea
mov
leave
frstor
rcrb
adc
mov
int3
lds
dec
mov
push
jae
test
push
mov
pop
mov
fxch
enter
lret
sbb
fs
mov
ret
pop
mov
inc
repz
jnp
pop
andb
inc
jge
int3
fwait
popl
xchg
das
xchg
or
mov
xchg
or
or
and
rcrb
frstor
lea
imul
outsb
out
and
mov
out
xchg
mov
sub
mov
addr16
das
add
loop
adc
xor
decb
clc
out
hlt
fs
inc
ret
sub
enter
pop
outsl
ss
pop
mov
loopne
and
lret
sahf
xor
lods
mov
loopne
sbb
mov
aaa
mov
cmp
or
es
or
mov
push
pop
or
lods
adc
mov
mov
les
ret
call
xchg
gs
dec
les
subl
sbb
sub
movb
je
push
dec
ljmp
lcall
je
ja
and
lret
sbb
minps
or
xchg
xchg
push
into
std
jns
aaa
push
sbb
jg
push
sbb
test
add
adc
mov
stc
pop
fwait
jo
hlt
in
mov
pop
push
push
xor
adc
sbb
ljmp
lock
cmpsb
subb
pop
mov
mov
ds
jae
cmc
mov
outsl
pop
mov
in
and
push
kmovb
push
lds
push
or
stos
fcoml
pop
cld
mov
pushf
xchg
xchg
scas
or
jae
inc
clc
jne
stc
push
shlb
sub
push
xchg
push
shr
xor
lock
mov
fisttpll
aam
ficoml
jge
cmpsb
cwtl
dec
jnp
sbb
shrb
jge
bound
inc
sti
mov
jo
lret
mov
cltd
leave
pop
inc
mov
stos
pop
adc
ljmp
xor
cmpsb
push
xchg
imul
push
mov
inc
adc
mov
das
je
or
pop
cli
xchg
jae
out
sub
pop
inc
test
lods
pop
and
lret
and
pusha
lcall
cld
pop
out
cmpsb
pushf
sbb
dec
fisubs
ljmp
stos
out
clc
add
jmp
shr
add
jbe
mov
mov
pop
mov
adc
nop
test
mov
sti
and
mov
pusha
and
mov
pop
lret
lods
test
test
sub
add
mov
out
cwtl
popf
jl
mov
adc
daa
cs
sub
adc
lock
sub
push
das
icebp
sub
mov
pushf
xchg
movsb
mov
cmpl
orb
xchg
sub
ja
or
data16
rol
cs
xor
jae
xchg
out
or
fs
ljmp
jb
enter
fnstsw
cmp
repz
mov
loopne
sbb
and
push
std
fs
mov
orb
xchg
inc
adc
push
addr16
orl
mov
out
call
mov
cmc
cmp
movsb
cld
xor
pusha
movsl
push
gs
incl
mov
ret
pop
sub
bound
xchg
mov
or
cmpsl
stos
loopne
add
pop
sarl
mov
jge
in
out
add
js
ss
pop
decl
call
inc
ret
pop
in
mov
xchg
jecxz
push
nop
icebp
ret
pop
pop
rcr
data16
enter
xor
mov
and
mov
add
mov
test
out
mov
imul
jmp
pushf
inc
dec
dec
dec
add
mov
shrb
nop
aam
jo
std
add
ljmp
insb
scas
nop
jl
push
cltd
orl
xor
inc
pop
pop
fistpll
aad
call
stos
mov
jg
movl
pop
push
inc
lods
aad
mov
fnstenv
mov
xchg
mov
mov
scas
sar
push
clc
mov
fiaddl
call
mov
in
add
mov
aaa
mov
icebp
dec
aad
fisttpl
repnz
jae
mov
pop
test
cmp
pmulhuw
mov
repnz
ds
mov
jmp
xor
cld
call
push
or
push
vmread
pushf
add
orl
adc
enter
bound
sti
xlat
popf
jnp
fs
adc
mov
cmp
cwtl
cmp
roll
dec
pop
pusha
xor
push
pushf
mov
sub
fildll
cmp
std
lcall
mov
subps
icebp
and
ret
aaa
mov
loope
jne
mov
add
add
scas
and
dec
mov
inc
fcoml
ret
leave
outsl
sub
push
int3
jl
jbe
adc
mov
cmpsl
inc
sbb
lret
leave
sub
aam
sahf
cld
push
imul
push
in
js
dec
int3
mov
xchg
jnp
and
fisubrs
mov
xchg
test
inc
scas
mov
cltd
mov
xchg
mov
push
dec
pop
cltd
inc
psubq
cld
push
push
push
or
gs
fstpl
mov
inc
push
xor
push
cwtl
test
das
adc
outsl
sarl
insb
push
pop
sarb
fisubrs
add
into
inc
push
vxorps
mov
lcall
lds
hlt
ljmp
imul
int
mov
loop
inc
ret
insb
out
pop
clc
lock
add
mov
cltd
mov
out
sbb
imul
cmp
pop
loop
jmp
push
sbb
pop
addr16
fldcw
dec
mov
and
jg
orl
stos
sarl
cli
rorb
outsb
mov
jne
xchg
push
sub
fcom
sbb
inc
add
fs
mov
lods
mov
mov
pusha
xchg
cmp
xchg
ret
outsb
mov
adc
dec
sbb
pop
push
push
xchg
ss
mov
push
cmc
mov
or
les
adc
or
shrb
xorb
lods
fs
mov
sbb
fs
jmp
jo
pushf
jecxz
push
stc
jmp
loopne
jg
mov
std
inc
bound
mov
ljmp
lods
push
cmp
mov
and
idivb
out
es
adc
in
push
or
jp
lea
push
mov
and
add
popf
and
fs
mov
in
outsb
jne
addb
sub
movsb
rcrl
js
jl
mov
cmp
popf
fnstenv
add
sbb
mov
test
mov
or
pop
mov
inc
les
cmpsb
pop
pop
pop
rcrb
sub
push
xor
cmp
mov
xor
fprem
addl
aas
daa
mov
dec
xchg
dec
mov
in
sub
in
or
scas
mov
adc
pop
aam
int3
adc
jg
inc
into
or
add
dec
test
adc
data16
lret
xchg
hlt
sub
pop
ret
sub
xchg
in
xor
mov
xchg
hlt
ret
insb
jl
or
fadds
push
add
fdivl
add
popf
fldln2
popf
cwtl
jns
xor
inc
mov
mov
rol
adcl
inc
jmp
hlt
jo
jb
or
jnp
inc
daa
ljmp
cwtl
lcall
mov
popf
mov
adc
fldl
repz
roll
inc
stos
xchg
int3
sub
inc
fnsave
xchg
or
into
ss
fidivrs
sar
test
leave
aad
pop
xor
dec
lcall
cwtl
aas
lock
fsubrp
xchg
sahf
andl
jne
adc
mov
mov
jo
push
and
mov
outsb
iret
or
pushf
or
pop
xchg
sbb
mov
shlb
pop
stc
mov
mov
mov
xor
jmp
mov
loop
mov
mov
test
std
mov
shl
adc
jbe
ret
aas
inc
and
pop
pop
mov
pop
mov
cmpsb
mov
lods
pop
or
mov
stos
ret
dec
inc
addr16
push
insl
cmp
mov
cmpsb
out
xor
clc
scas
rcrb
sbb
or
js
inc
or
push
mov
add
shlb
stc
jno
rcrb
mov
lret
pop
movntq
xor
lret
aas
jmp
mov
stos
mov
sti
outsl
repnz
mov
sub
xor
sarb
stos
sub
movl
data16
in
sti
out
mov
cmpsb
xor
jbe
outsb
inc
adc
xor
or
es
stc
enter
lock
inc
repz
leave
cmp
test
xchg
out
fwait
jle
adc
inc
into
inc
jo
lret
mov
cmp
push
in
aam
filds
add
sbb
mov
stos
imul
sbb
scas
fmuls
and
filds
mov
mov
test
mov
loopne
insb
test
mov
xlat
shlb
cmp
mov
ljmp
xor
xor
dec
xor
stos
in
cwtl
into
shrl
dec
test
dec
int
lods
ficoms
xchg
mov
adc
test
mov
push
xchg
xor
divb
fcmovnb
popf
loope
movsl
pop
inc
scas
pop
xor
and
fsubs
mov
fstl
and
adc
inc
mov
nop
push
mov
sahf
pop
repnz
loope
lret
xlat
sbb
pop
loope
push
sub
lods
push
push
cwtl
xor
lcall
mov
xor
fcoml
mov
add
aam
ljmp
sub
sbb
int
jnp
and
clc
fwait
jne
hlt
ljmp
sub
lret
fisttpll
aad
inc
orb
jns
inc
repz
or
arpl
cmp
out
xchg
mov
ja
outsb
lret
push
xchg
movsb
lret
dec
and
jae
mov
mov
fadd
cli
pushf
sub
notl
push
mov
jg
outsb
and
in
test
lret
loope
sub
adcl
cmpsl
sarb
lret
jbe
addb
es
je
pop
je
repz
sub
fbld
dec
xchg
lea
inc
test
iret
or
inc
cmp
push
sbb
lock
std
std
cli
out
sub
or
aam
inc
xchg
pop
xchg
mov
push
bnd
stc
gs
xchg
int3
xchg
sar
and
and
fistl
test
lock
out
mov
add
into
stos
aad
mov
cmp
jg
inc
add
jnp
add
enter
dec
stos
leave
inc
and
shll
frstor
js
cmp
pop
sbb
jg
sub
loope
js
sbb
mov
jge
in
lret
clc
and
cmpsb
add
pop
xor
loop
xlat
inc
sti
subb
out
push
and
mov
adc
bound
test
sub
push
sub
outsl
mov
enter
repz
std
pop
pop
lds
cld
outsb
lds
out
or
xchg
cmp
test
hlt
jl
sbb
sbb
sbb
out
lods
xchg
arpl
sub
nop
lods
push
and
xchg
rcrl
bound
or
dec
cmp
pushf
arpl
cmc
mov
inc
stos
cmp
sbb
mov
sbb
dec
fs
xor
jecxz
cmp
ds
push
mov
test
sbb
jae
aaa
pop
xchg
test
or
pop
inc
inc
push
mov
mov
daa
ror
inc
scas
pop
sbb
xlat
test
ja
mov
movsl
gs
or
ss
xor
movsb
and
mov
mov
test
loope
fcoms
nop
inc
sub
mov
mov
cld
add
aad
icebp
aad
loop
jp
jl
scas
mov
dec
arpl
inc
xor
mov
pushf
inc
fdiv
lds
fistpl
inc
sarl
xor
out
push
sbb
jl
xchg
cwtl
pop
in
cmc
pop
cmpsl
sbb
popa
lahf
adc
sbb
ds
push
decb
ror
test
cwtl
jmp
pop
push
sbbb
mov
inc
bound
jae
dec
mov
push
imul
inc
test
cwtl
mov
jae
cmp
loopne
ret
mov
arpl
popf
fmulp
out
pop
cmp
jp
mov
pop
dec
adc
jbe
mov
push
popf
rol
inc
push
sub
jns
jl
mov
add
cmpsb
xlat
adc
popf
xchg
mov
pop
push
imul
lock
fiaddl
pop
iret
jae
test
or
aam
pusha
mulps
lods
cmp
inc
cmp
pop
shl
sti
xor
inc
mov
push
mov
lret
sub
aam
jae
mov
adc
int3
mov
out
jb
fistl
inc
inc
subb
adc
jecxz
jno
rcll
sub
call
lahf
xchg
sub
xor
adc
lret
out
jae
cmp
insl
xchg
mov
aad
xchg
test
cmp
orb
push
inc
sub
jns
negl
pop
xchg
push
out
sbb
cmp
pop
ljmp
sbb
mov
push
sarl
pop
cwtl
out
inc
inc
bound
adc
mov
push
push
shll
cli
sub
shrb
push
jg
lock
cs
popf
dec
gs
mov
xchg
cli
insb
push
clc
test
cmp
or
adc
das
ja
dec
cmp
es
mov
imul
int
js
gs
jbe
loopne
lods
pop
lea
je
push
pop
push
mov
sub
xchg
icebp
sti
ds
sub
xchg
addb
add
push
mov
xchg
jl
xchg
gs
es
adc
inc
push
pop
int3
mov
add
insb
mov
add
pop
xor
xor
add
jl
and
mov
mov
mov
stc
into
divb
pop
push
push
mov
lods
push
shlb
clc
push
loopne
pop
xchg
jnp
mov
lret
ja
stc
and
std
push
cmp
xlat
sub
sub
xchg
aaa
or
fs
sub
mov
xor
xor
lcall
lcall
push
jbe
cli
mov
mov
sub
adc
pushf
fnstsw
push
out
dec
fwait
sub
rcrl
leave
pop
hlt
sbbl
enter
push
cmp
jmp
dec
cltd
repnz
ja
pop
mov
jecxz
cmovg
push
ficompl
mov
pop
mov
or
fsts
icebp
push
jno
push
dec
icebp
lcall
mov
pusha
cmpl
push
faddp
xchg
sarb
imul
mov
leave
push
test
in
addb
push
shlb
movsb
dec
mov
mov
jecxz
clc
hlt
jnp
xchg
sub
pop
add
dec
sbb
push
test
fsubp
sarb
xor
lods
ret
add
retw
xchg
cmp
cmpsl
int3
lods
xchg
xor
loope
adc
xor
out
and
in
lods
or
hlt
inc
nop
add
pusha
pop
jo
scas
loop
mov
lahf
mov
jns
mov
cld
loope
cmp
add
fnsave
test
adc
jo
cs
outsb
lds
or
and
pop
rcll
fdivrl
repnz
pushl
movb
mov
addl
dec
xor
lret
test
pushf
mov
inc
push
fistpll
sahf
sti
sahf
imul
ja
push
std
mov
out
lods
sbb
push
fnstcw
adc
into
and
mov
add
mov
into
repz
jecxz
push
frstor
addr16
invd
lds
imul
inc
mov
or
and
mov
and
inc
xor
cmpsb
cwtl
ss
sub
addl
xchg
test
out
push
ja
subb
or
or
mov
push
push
inc
pop
mov
in
and
sti
cmp
mov
xchg
push
mov
pop
jne
mov
adc
call
ret
jg
dec
les
jle
jno
mov
mov
insl
jle
mov
lds
mov
cmp
lds
pop
test
in
mov
pop
jle
push
add
pushf
inc
xchg
inc
inc
pushfw
sbb
jno
add
ja
loop
mov
les
loope
xor
lods
pop
xchg
mov
shl
cmp
lods
nop
add
mov
push
cwtl
jbe
lret
sbb
in
jle
sub
sbb
cmp
andl
stc
rorb
push
mov
jecxz
iret
xorb
out
sbb
je
ljmp
sub
push
lcall
scas
jecxz
push
add
sub
mov
mov
cmp
cmp
pop
sub
orl
sub
dec
push
jmp
ljmp
dec
lahf
xchg
out
aad
lds
fimull
pop
and
jo
cltd
enter
push
inc
lcall
push
jmp
mov
insl
jmp
mov
mov
xchg
xor
idivl
and
mov
cmp
lret
jno
pop
int
mov
xchg
std
mov
repz
push
out
ss
push
roll
jbe,pn
faddl
mov
sbbl
mov
adc
dec
xor
hlt
push
iret
pop
fdiv
dec
out
nop
rcrb
xchg
or
scas
sub
std
shr
fstl
sub
pop
mov
imulb
cmp
add
ja
or
decb
sbb
out
repz
sbb
mov
sarb
mov
mov
jnp
test
imul
scas
clc
mov
arpl
mov
jl
imul
push
sub
cmp
rcr
dec
outsl
mov
iret
mov
sub
movb
in
pusha
push
lea
insb
stos
push
xchg
scas
aas
stc
push
shl
mov
out
fisubrl
roll
push
cltd
pushf
push
or
sbb
bound
stos
lcall
lds
mov
cmpsl
sub
ljmp
arpl
cmp
mov
xlat
into
dec
lds
pushf
jne
mov
stos
inc
data16
dec
movsb
shlb
ret
dec
out
dec
pop
cmp
cmpsb
imul
ror
xchg
xchg
adc
push
inc
sub
or
push
cmp
add
mov
cmp
xchg
cmpsb
scas
and
jo
pop
push
pusha
pop
insb
xor
pushf
inc
push
mov
cld
or
popa
iret
and
cmc
cmp
mov
int
imul
stos
ret
add
daa
idivl
call
std
imul
xchg
push
dec
mov
ss
idivb
lcall
add
or
sub
push
mov
xchg
std
ret
or
push
push
dec
idivl
mov
jmp
jecxz
int3
push
pop
xor
lret
or
iret
into
adc
stc
and
sub
insb
and
test
mov
daa
int
lds
sub
test
ret
fwait
sbb
dec
xchg
scas
lock
jbe
nop
sbb
mov
sbb
jle
andb
xor
mov
inc
lea
shl
mulb
fs
push
xlat
es
lahf
add
xchg
mov
xor
das
jo
cmp
and
inc
xchg
ljmp
aad
push
test
fimuls
call
sbb
leave
push
and
push
sub
xor
cmp
inc
data16
inc
out
sbb
nop
insl
rclb
and
xchg
leave
and
xchg
aas
inc
mov
inc
loope
cwtl
jmp
and
sub
repz
roll
fidivrl
js
sbb
enter
adc
inc
cmp
push
out
pop
dec
pusha
scas
mov
cmp
mov
mov
pop
or
adc
fdiv
cmp
mov
xchg
sbb
sbb
cmpb
sub
push
je
dec
cmpb
pop
dec
test
dec
mov
daa
mov
pushf
mov
aas
call
les
pop
in
mov
mov
sbb
andb
push
or
lock
gs
loope
es
xorb
hlt
sub
sbb
pushf
adc
xchg
adc
outsl
push
push
cmp
fdivrs
mov
fdivs
jl
stos
mov
icebp
mov
push
outsl
mov
icebp
mov
jno
sahf
add
subb
das
or
aad
subb
cld
lret
fwait
mov
xor
jle
bnd
ss
out
das
xchg
push
scas
jno
add
inc
ret
out
lahf
jp
fisttpll
jae
movsb
push
inc
push
movaps
push
outsb
sub
or
es
scas
leave
xchg
popf
xor
sbb
ror
sub
hlt
cmp
mov
pop
or
std
stos
sbb
jnp
in
jecxz
push
cmpsl
jae
pop
vpcmpgtd
jo
in
test
pop
xchg
mov
test
les
fwait
pop
cmp
dec
xchg
stc
sub
push
jg
subl
sbb
es
and
cmc
loopne
cmp
js
cmp
jmp
mov
out
clc
mov
mov
out
mov
or
or
xor
bound
pop
pop
adc
mov
addl
sbb
rol
mov
fstpl
jno
sbb
mov
stos
push
in
jge
loope
pushf
xchg
mov
aas
cwtl
and
bound
fs
subl
aaa
pop
dec
mov
push
cli
lds
cli
jle
dec
adc
outsl
jmp
mov
push
mov
sbb
outsb
scas
and
push
xor
leave
rorb
imul
sbb
ja
sbb
jne
add
cs
or
cmpsb
outsb
outsl
xlat
test
lahf
ret
popf
cmpsl
mov
xchg
es
and
mov
sub
int
shl
test
mov
or
xor
mov
lcall
sub
push
cmp
xchg
rcll
pop
in
dec
adc
push
popa
sub
xor
pop
and
xor
jmp
int
scas
adc
fdivrl
sub
mov
jb
je
shl
dec
hlt
test
scas
xchg
inc
in
idiv
or
out
and
or
dec
negl
clc
jmp
mov
dec
mov
pop
mov
cmc
iret
dec
mov
mov
push
push
jno
popa
dec
dec
cld
push
xor
imull
jb
in
scas
jecxz
fs
test
and
hlt
dec
add
push
repnz
gs
fiaddl
mov
push
std
mov
or
repz
and
enter
sub
sbbl
jns
fs
sub
out
cmp
adc
jne
out
xchg
cmp
jl
xor
lret
mov
push
push
push
out
or
cs
dec
mov
lret
mov
inc
xchg
bound
xchg
scas
jae
mov
xor
ret
rolb
add
inc
movsl
ret
pop
roll
aaa
test
stos
mov
into
jp
or
stos
xchg
ret
and
cmp
cli
lret
fstps
lods
mov
in
nop
add
xchg
stos
add
dec
and
xorb
es
pusha
dec
inc
push
mov
scas
push
push
fs
cli
enter
js
push
outsb
mov
lret
sbb
jmp
mov
subb
cmp
jne
mov
or
lcall
dec
xchg
xor
add
into
mov
in
pop
xchg
or
lds
cwtl
pop
rolb
rcll
ficoml
xchg
mov
cmc
mov
or
dec
lret
mov
mov
or
divb
pcmpgtd
lret
data16
lods
mov
arpl
inc
sub
adc
in
xchg
xchg
sbb
cmp
adc
xchg
mov
or
jno
sub
dec
lcall
cmp
jno
or
sahf
pop
mov
xor
testb
mov
les
enter
stos
in
fdivl
imul
xor
fsubs
stos
shll
int3
xor
and
movsb
cmpsb
lods
mov
inc
mov
jno
inc
aas
gs
fucom
jp
sub
ja
into
jnp
mov
cld
or
fs
push
in
jo
jae
and
aaa
sub
popa
shlb
out
xchg
sub
cmpsl
xlat
aam
loopne
ja
test
bound
sbb
fsub
shlb
push
pop
rcrl
test
jb
iret
aam
pop
mov
xor
adc
xchg
sbb
inc
dec
test
sbb
cmp
pop
push
lds
xchg
aaa
xchg
jo
xchg
data16
sub
repnz
sub
cltd
pop
mov
cld
dec
stc
pop
loop
jne
stc
mov
insb
xchg
jge
and
hlt
adc
mov
mov
dec
ss
xor
push
inc
xor
add
pop
hlt
and
in
cs
leave
fiaddl
lahf
cmp
xor
add
mov
and
leave
lds
mov
sbb
ret
sbb
add
cli
bound
mov
sbb
movsl
adc
cmp
pop
jmp
mov
ss
push
popf
movsl
imul
inc
xchg
sub
inc
add
push
and
je
out
or
push
leave
push
mov
int3
xchg
jecxz
lods
xchg
fwait
inc
inc
rcr
std
pop
xchg
cmc
sahf
jne
mov
ljmp
out
push
jbe
mov
sbb
xchg
lret
mov
inc
sub
mov
add
cmp
adc
xchg
xchg
leave
ja
aad
dec
je
push
sub
cmp
pop
ss
or
jne
push
aad
lods
add
and
push
in
cli
mov
or
into
cmpsb
adc
adc
xchg
jl
sahf
out
out
dec
cmp
mov
inc
mov
pop
add
bound
xlat
addr16
ficoms
push
jle
adc
insb
adc
fisubrs
insb
add
pop
fsts
es
mov
sbb
xor
jne
add
pop
cmp
int
rcr
into
and
mov
scas
sub
cmpsb
out
push
inc
mov
jg
add
enter
jo
adc
adc
ja
sbbb
shrb
sbb
cmc
sbb
popa
int3
je
out
sbb
mov
mov
inc
xchg
cmp
push
sbb
adc
xlat
mov
cmc
push
into
pop
dec
je
pop
ret
mov
adc
outsb
dec
adc
rcrb
fidivl
in
mov
int
rclb
mov
lret
jb
push
push
dec
lods
add
inc
mov
and
les
sub
sbb
jmp
mov
push
mov
ss
decb
pushf
sub
ret
or
or
and
cmp
mov
loop
push
or
cmpsl
pop
pop
in
cmp
lcall
loopne
sbb
add
sbb
cmp
sub
movl
dec
js
aaa
loop
push
sbb
dec
or
shl
dec
sub
imul
xchg
add
or
lods
push
rclb
push
mov
stc
addr16
add
std
mov
push
faddp
cmp
out
aas
push
mov
or
mov
mov
mov
jp
jecxz
scas
out
xchg
or
jb
xchg
mov
loop
rep
das
rcrl
jp
mov
icebp
or
sbb
jl
std
and
scas
cs
mov
jb
push
mov
mov
aaa
shlb
popf
fstpt
outsb
add
aad
mov
sub
dec
pop
dec
pop
insl
daa
lcall
adc
mov
mulb
pop
pop
sti
fsub
xor
sbb
fwait
test
in
lahf
and
mov
insb
sbb
data16
sub
faddl
push
orl
mov
add
cs
pusha
pop
repnz
add
add
mov
addr16
adc
cmp
jno
inc
sub
xchg
aad
jg
fwait
lods
mov
xor
add
inc
cmp
sub
in
add
scas
fldcw
sbb
xor
dec
in
or
push
xchg
push
hlt
cmp
add
mov
jecxz
cmpsl
sub
jne
test
fmull
outsb
int
outsb
sbb
adc
xchg
mov
xchg
sar
cwtl
pusha
stos
lds
pushf
lret
pusha
enter
jno
sti
mov
and
orl
xor
lahf
xor
mov
jb
and
test
add
adc
daa
push
lea
cld
mov
inc
cmp
dec
xor
adc
fisttpl
cmp
arpl
xchg
push
jns
sbb
popf
mov
cmp
fcmovb
scas
add
pushf
fisttpll
ss
out
pop
pop
mov
mov
mov
cwtl
adc
mov
int3
push
push
jle
cmc
sbb
mov
dec
adc
stos
sti
mov
sub
push
out
daa
mov
ret
inc
mov
pop
lret
bound
dec
mov
cmp
test
cs
or
jbe
outsl
fsubrl
inc
test
fldenv
cwtl
ds
cli
fucomp
cwtl
pop
lret
mov
mov
xor
mov
mov
mov
dec
lret
cltd
mov
jp
cwtl
push
clc
cs
lret
test
popa
mov
mov
sbb
outsl
cli
sbb
mov
mov
push
outsl
and
lahf
inc
adc
sahf
cld
sub
push
bound
scas
dec
out
movsl
out
mov
cltd
into
aas
cmpsb
xchg
in
mov
or
std
movsb
popa
xor
mov
jl
sub
and
in
lods
jbe
lods
cmc
in
or
ss
dec
xor
sbb
jo
sti
and
out
adc
jb
xchg
jo
dec
aam
jae
mov
xchg
arpl
mov
inc
mov
enter
aam
popf
loopne
loopne
xchg
cwtl
call
fwait
test
mov
ficompl
ret
mov
scas
lcall
icebp
xchg
mov
inc
mov
aad
xlat
or
pop
iret
sub
shl
or
push
je
sbb
or
sub
cmp
je
aaa
sbb
pop
mov
adc
and
and
jns
xchg
cmp
xchg
mov
jle
jp
mov
sti
jbe
lea
push
sbb
dec
mov
sbb
cmpsl
imul
jne
dec
inc
dec
lock
sbb
or
js
inc
cmp
loop
sar
xlat
push
aas
mov
loop
arpl
sbb
cltd
xor
sub
push
ret
mov
subb
cmp
fwait
test
orl
or
movsb
add
dec
push
jno
xchg
stc
adc
add
fcoms
pop
lock
add
inc
dec
int3
jo
aam
inc
and
sub
mov
cmp
pop
ret
leave
fs
mov
cmp
xchg
int3
mov
mov
jl
dec
push
mov
ret
mov
in
call
in
stos
test
lods
mov
jo
push
or
lret
enter
mov
mov
jb
jns
rol
xlat
mov
imul
mov
scas
sbb
int3
inc
cld
iret
lods
daa
outsb
mov
cmc
lds
dec
lret
int3
fisttps
mov
jb
enter
cmpsb
mov
daa
fdivr
jnp
loope
std
sbb
pop
test
lahf
icebp
mov
and
or
lods
movb
jmp
int
adc
jno
in
adc
arpl
js
enter
aam
js
test
sti
mov
lahf
xchg
and
mov
mov
cmpl
insb
xchg
add
bound
add
sub
dec
out
jne
push
mov
mov
pushl
cmc
out
xchg
leave
jp
out
push
popf
loope
cltd
and
mov
int3
clc
xchg
mov
ss
in
leave
movsb
sbb
push
pop
add
push
cli
or
mov
or
aam
pop
sbb
in
jno
add
divb
xor
test
int3
ss
cld
mov
mov
adc
in
rcrl
jp
cmpsl
push
out
push
dec
scas
dec
push
fimuls
xchg
dec
icebp
adcl
mov
xchg
xor
mov
sub
imul
and
filds
ficoms
adc
fwait
sbb
iret
movsb
sub
scas
push
cs
ret
jle
adc
mov
shll
jae
test
xor
push
in
fstpt
xor
mov
mov
int
clc
cmpsl
test
pop
sbb
loop
push
repz
or
addr16
pusha
lds
add
ficoms
push
lcall
cmp
xlat
cmpsb
or
mov
sub
push
lret
or
ret
dec
jb
push
pop
mov
test
inc
jns
lds
or
xor
mov
and
or
popf
or
das
xchg
fildll
inc
inc
fdivp
imul
ret
aaa
xchg
data16
cmc
jns
push
data16
xchg
pop
jo
mov
mov
cmp
fidivrs
xor
rorb
inc
push
or
inc
mov
adc
aam
lds
pop
add
test
pusha
ret
fstpt
ds
push
sub
jle,pn
dec
inc
lret
fsubr
push
ret
xchg
psllq
lahf
xor
xchg
mov
xchg
xchg
pop
push
dec
adc
push
pop
push
mov
and
xchg
push
adc
push
inc
sub
daa
pop
addr16
cmpsl
jo
xchg
cmpsb
dec
jno
jge
inc
out
mov
sbb
lret
sub
inc
cli
fstpl
ljmp
jo
arpl
shlb
push
aaa
call
sbb
xor
enter
in
mov
aaa
push
pop
mov
daa
insl
mov
mov
hlt
js
dec
and
cs
xchg
jmp
ficoms
mov
pop
sar
mov
ficoms
xor
xchg
inc
jns
mov
pushf
mov
push
inc
cmpsb
ds
lcall
les
cli
stos
out
sub
pop
xor
sub
push
popf
out
inc
lret
fdivs
xchg
ret
leave
insl
sti
jmp
aaa
mov
mov
dec
loope
or
cmp
mov
mov
int3
call
stc
lods
in
sub
enter
jmp
movb
ret
pop
xlat
and
xchg
pop
loope
insb
not
and
cmpsl
stos
jb
arpl
xchg
stc
sbb
adc
int
sub
gs
push
pop
lods
in
or
or
inc
mov
or
jg
xor
inc
insb
arpl
bound
xchg
test
out
je
mov
add
mov
out
push
sahf
xchg
fsubs
ret
je
pop
outsl
mov
cmp
cmpsb
hlt
pop
stos
movsb
add
jle
iret
out
push
shrl
bound
or
cmp
inc
push
ret
dec
fs
movsl
sarb
es
cmc
mov
mov
test
iret
jp
xchg
nop
aas
xor
movlps
divb
mov
adc
or
fisubs
test
stos
addr16
data16
lcall
xlat
out
mov
pop
nop
lcall
pop
sbb
inc
cltd
push
dec
pop
mov
and
stc
out
mov
mov
scas
and
repz
cwtl
jmp
or
cmp
cmp
mov
test
lock
outsl
add
mov
aaa
out
adcl
push
pop
pop
mov
and
pop
icebp
icebp
movsl
out
in
je
cmp
mulb
jae
mov
ja
add
xchg
aam
cmp
lcall
mov
lret
fwait
mov
or
lcall
inc
arpl
push
loope
adcb
insl
shl
scas
push
dec
jns
and
test
sbb
test
jne
push
movsl
and
ds
and
ss
bnd
test
cltd
jb
mov
icebp
xor
pop
xchg
in
pop
mov
cmpsl
es
aam
fs
inc
hlt
pop
pop
es
xchg
iret
push
xchg
into
jae
shr
dec
arpl
std
pusha
cltd
js
imul
ret
jl
out
cmp
movsl
lcall
gs
rcr
loop
or
pop
adc
mov
adc
inc
ss
mov
arpl
adcb
jne
cmp
pop
scas
and
rorb
icebp
shll
popa
stc
cmp
sbb
jb
jne
jnp
movsl
clc
out
stc
les
popf
jne
aaa
jae
mov
movsl
xchg
lds
push
xchg
xlat
stc
xchg
lea
mov
fstl
or
int3
je
mov
jle
pop
loopne
jl
lahf
cmp
movsb
insl
sub
cmp
mov
mov
pop
xchg
ljmp
cmc
subb
jae
test
pop
cltd
outsb
fbstp
xchg
jo
xchg
push
push
xor
es
mov
cli
mov
out
std
mov
add
jle
es
sbb
lret
mov
pop
cmc
dec
mov
push
and
sbb
fisttpl
lock
xor
jl
inc
jo
int3
shl
inc
and
aas
ret
pop
testl
or
fs
lcall
jmp
push
pop
lret
scas
push
das
xlat
and
ds
subl
xchg
cs
out
push
push
fidivs
pop
outsb
add
lds
and
sbb
out
mov
jg
push
dec
jecxz
sarl
pop
inc
pushf
lcall
orl
cmp
stos
lcall
add
mov
aad
lret
sub
cmp
push
jp
paddq
int3
lock
popw
shll
cli
push
and
pop
fsubrl
jecxz
xchg
and
add
sub
and
jne
pop
outsb
test
mov
pop
pushf
dec
pop
jns
movsb
cmp
out
sahf
mov
lods
pop
adc
sbb
mov
imulb
sbb
cwtl
enter
pushf
push
in
outsb
sub
mov
dec
xlat
nop
sbb
and
in
loopne
or
in
xchg
js
sbb
in
push
nop
dec
sti
add
cmp
mov
lods
add
into
xor
cmp
ret
and
adc
mov
popf
adc
xor
outsl
pop
xchg
ficoms
sti
jb
insl
xlat
hlt
out
add
dec
push
xor
call
mov
sbb
icebp
dec
std
andb
lea
imul
orl
scas
jno
fimull
hlt
push
add
cltd
in
xchg
cmovns
les
call
es
mov
mov
add
dec
cld
leave
or
cmp
xor
cmp
clc
xchg
xchg
mov
out
notb
dec
sbb
ret
cwtl
lret
sub
pop
repnz
lcall
fsubp
stc
js
rcll
sbb
inc
jmp
mov
jecxz
adc
repz
mov
pushf
outsl
lahf
incb
fldcw
xchg
mov
mov
add
or
sub
mov
mov
add
push
insl
fldcw
mov
push
data16
call
sbb
mov
stc
jbe
jns
jns
adc
iret
adc
dec
es
adc
sub
jb
nop
into
push
push
or
call
sbb
mov
insl
testl
and
addr16
jp
add
mov
lahf
mov
pop
mov
add
push
jae
adc
mov
cmp
mov
xorl
lods
fimull
cli
inc
push
mov
cs
dec
fwait
jne
xchg
cmp
adc
std
add
je
ljmp
cmp
add
out
stos
ljmp
adc
dec
les
and
rcl
loope
cwtl
dec
pop
xchg
sub
mov
pop
in
emms
and
pop
insl
fisubs
push
arpl
pushf
loope
xchg
xorb
lock
movsb
sbb
sbb
inc
mov
dec
bnd
and
jl
add
dec
lods
ss
or
sub
fimull
fcoml
lahf
idivb
and
movq
adc
xchg
cmp
nop
adc
xor
jb
cmpsb
mov
subl
jl
dec
sub
addl
cli
mov
inc
jne
push
cwtl
jne
ficomps
push
arpl
xor
fmul
sub
scas
xlat
ja
in
cmp
cmpsl
pushf
xchg
cwtl
rorl
inc
xchg
rorb
cmp
cwtl
pop
nop
cmp
dec
arpl
and
stos
gs
shl
sub
jae
xchg
ljmp
into
mov
ret
jnp
pop
cmpsl
add
ret
popl
xchg
sub
jecxz
inc
push
sub
push
dec
adc
dec
add
dec
outsb
or
out
adc
dec
cmp
pminub
cli
or
loope
je
xor
cmp
addl
out
add
pop
ffreep
scas
pop
cld
inc
xchg
sti
mov
das
add
add
fs
adc
mov
or
sahf
mov
mov
mov
sbb
xor
aaa
or
cmc
jl
and
clc
fistpl
and
inc
push
out
in
filds
idivl
sub
cmpsb
mov
or
cmp
pusha
fidivl
cmp
shll
popa
aas
inc
movsl
movsl
and
dec
test
lcall
mov
flds
loopne
into
dec
aaa
lods
xor
xchg
hlt
ja
push
movsl
in
loop
xchg
dec
int3
jo
out
out
push
mov
jnp
in
and
push
add
sbb
arpl
fadds
push
stc
shll
add
xor
cli
push
into
aad
clc
movsb
sbb
jnp
or
inc
mov
imul
adc
adc
in
je
leave
sub
mov
cli
out
mov
push
xor
pop
popf
mov
call
pop
jbe
push
js
ljmp
xor
loop
or
mov
mov
in
cmp
rcrb
insl
push
push
lahf
lcall
mov
jne
add
add
and
popl
stc
xor
lock
mov
aas
call
out
sub
push
dec
jb
lahf
fsubr
push
jo
xor
sbb
push
push
addr16
fsubs
loope
adc
jns
add
pop
inc
pop
adc
fcmovne
or
fnstenv
fwait
or
outsb
jae
or
sbb
sbb
adc
mov
lea
nop
pop
mov
xchg
ds
fucomi
pop
push
cmp
insb
mov
dec
mov
in
pop
push
xchg
pop
cmp
pop
xor
jl
adc
push
fisttps
dec
mov
mov
shl
lea
add
sub
aad
adc
push
push
sub
push
mov
xchg
push
sbb
int
into
mov
pop
movsl
stos
and
es
ljmp
and
jl
xor
enter
loop
test
xorl
mul
icebp
sub
test
push
mov
popf
mov
mov
dec
and
inc
jns
call
xchg
stc
inc
popl
mov
xor
cmpsb
mov
rcll
stos
mov
lret
and
jb
cmp
scas
bound
xchg
int3
and
movsl
sub
sbb
xor
push
lahf
add
jo
mov
shrl
jae
enter
xor
push
mov
outsl
inc
xor
mov
pop
addr16
xor
xchg
std
imul
ss
shl
xchg
cmp
fldt
and
mov
pop
add
or
fcoml
dec
fistpll
mov
test
test
lcall
sub
mov
push
aam
ja
xchg
test
arpl
and
clc
jne
sbb
and
and
int
add
push
and
cs
add
sbb
push
dec
fs
stos
push
aas
orb
scas
and
mov
add
negb
push
mov
mov
daa
pop
outsb
jne
stos
test
dec
shlb
das
aam
ss
cwtl
cs
mov
mov
inc
test
loop
testl
add
add
iret
adc
idivl
and
or
xchg
scas
jl
cmp
out
call
ror
sbb
adc
loop
lds
out
mov
sub
fldl
shl
push
cmpsb
sub
pop
inc
xor
icebp
subb
int3
pop
pop
test
jo
movsl
mov
fs
mov
movsl
pop
xchg
andb
jl
div
js
iret
sahf
inc
sbb
ja
sbb
scas
pop
push
cmp
sarl
pop
popa
and
xchg
inc
loop
cmp
pop
jnp
jnp
xorl
test
lcall
add
in
repnz
addr16
in
mov
push
fists
sbb
pop
inc
pop
xor
int
or
dec
cmp
popf
repz
push
jmp
xor
xlat
inc
cs
and
idivb
and
es
cltd
or
mov
mov
mov
mov
xor
xchg
jo
ss
push
push
incl
ficompl
and
xchg
inc
call
pop
mov
lea
fstp
je
shll
jmp
mov
xchg
pop
fwait
or
or
and
mov
adc
xor
das
mov
sbb
cld
and
in
orb
and
imul
cmp
add
popf
dec
or
cmc
icebp
or
or
dec
adc
or
movsb
ljmp
testl
movsl
orl
ficoms
xchg
pop
xchg
stos
sbb
fs
jnp
dec
fs
nop
and
mov
pop
dec
iret
cmpsb
imul
or
mov
lret
imul
and
ret
insl
das
pop
out
or
mov
dec
cs
data16
xlat
in
inc
test
in
push
mov
test
in
xchg
jle
jmp
scas
adcb
inc
pop
push
mov
mov
pop
push
push
shrb
adc
mov
es
adc
mov
inc
cmp
pop
outsl
das
sbb
cmp
adc
xchg
scas
shlb
aaa
sbb
sahf
pushfw
daa
or
and
push
jg
test
fs
dec
or
add
fcom
mov
push
cmp
nop
test
sub
mov
insl
or
and
xchg
pushf
sub
outsb
dec
add
mov
mov
xor
leave
or
out
sahf
mov
add
repnz
push
mov
adc
bound
jp
icebp
and
mov
hlt
and
sahf
aad
or
fsubrs
das
imul
and
add
pop
mov
jmp
cld
mov
and
mov
test
loopne
mov
rorl
int3
dec
mov
and
ja
push
xchg
xorb
stos
push
pop
hlt
test
mov
adc
inc
addw
lods
or
ja
stc
pop
mov
scas
movsl
mov
filds
pop
fiadds
mov
insl
dec
rcll
outsb
mov
fisubl
sbb
fwait
mov
add
jb
mov
or
arpl
mov
mov
cs
nop
xor
xor
mov
inc
fsqrt
pop
into
pop
dec
std
push
je
jge
mov
aaa
lea
mov
jns
aam
repnz
xor
sti
jo
lock
and
sarl
inc
leave
mov
xor
stos
jmp
mov
aaa
mov
jno
adc
cmpl
cmp
cld
and
xor
ds
enter
in
jne
outsl
and
cmp
inc
jg
push
sub
jnp
and
push
and
in
outsb
lcall
cmp
gs
pop
jno
cli
movsb
sti
lcall
and
ss
push
fisubs
push
cmpb
cwtl
loope
lret
dec
mov
mov
pushf
mov
and
jl
hlt
mov
cld
mov
cs
mov
push
std
dec
cmp
mov
or
je
adc
dec
repnz
cmp
movsb
enter
cmp
push
cld
cli
je
mov
xchg
shlb
jmp
mov
ficoms
sbb
dec
sti
dec
lods
dec
xchg
add
xor
xor
sub
lea
cmc
cmp
daa
jo
pop
call
jns
push
fisubrl
add
jns
cwtl
out
insl
sahf
stc
loop
xorb
les
fdivrs
push
cs
test
leave
sbb
dec
fs
push
xchg
jmp
dec
jg
stc
add
mov
inc
lcall
xchg
outsb
xor
pop
leave
adc
pusha
pop
test
sahf
testb
push
cwtl
adc
in
push
mov
cmpsb
cmp
jno
fcmovnu
cmp
pop
mov
sub
sub
cmp
je
movzbl
into
sti
cmc
push
lret
inc
sub
call
push
sbbb
loopne
dec
cmpsb
inc
lods
fistpll
dec
arpl
fsub
jbe
loop
cmpsl
pop
lret
ret
dec
add
jl
dec
lret
loop
into
in
out
sbb
lcall
fldt
out
cltd
decb
js
mov
cmpsb
pop
int
and
shll
es
cltd
and
mov
or
aas
mov
cli
sub
sbb
push
inc
lods
pop
hlt
sbb
nop
lret
push
cld
data16
and
outsl
rcrl
std
aam
cmc
ds
xor
or
or
jl
lahf
add
outsb
in
cmp
aas
and
ja
fwait
lahf
shll
mov
sbb
fstl
xor
pop
mov
das
xor
out
mov
mov
jne
pushf
cmpsl
out
into
cmpsb
testl
inc
jge
jle
cmc
icebp
dec
dec
in
pop
or
add
pop
movsl
rclb
pop
mov
jb
fidivrs
insb
jno
iret
xlat
jns
mov
jmp
xor
or
xchg
inc
add
adc
xorb
ret
mov
and
movsl
jne
into
lret
rcrb
lcall
ljmp
adc
or
jo
or
jg
out
cli
mov
test
dec
dec
cmp
je
cmp
aad
jg
iret
dec
adc
sub
scas
mov
adc
test
scas
stc
pop
hlt
bnd
pop
push
cmp
pop
pop
push
pop
dec
shrl
std
sbb
sub
test
in
cmp
sub
pop
inc
cli
test
dec
push
xchg
cmc
mov
loopne
mov
cld
notl
sub
fwait
pushf
into
fs
sub
sub
push
mov
sbb
jmp
test
mov
mov
nop
mov
adc
je
mov
in
cmp
popa
aaa
dec
xorb
and
push
test
das
and
xlat
lock
adc
jp
rol
insl
mov
xor
adc
shlb
mov
ss
mov
insb
fsin
in
shl
add
test
xor
mov
jo
mov
popf
sub
pusha
cmpl
iret
push
out
std
fcoml
or
mov
adc
bound
out
push
nop
rcrl
je
enter
push
idivb
shl
jns
in
int3
cmpsb
push
jg
mov
scas
and
jl
lods
sub
xor
mov
mov
add
js
or
sarb
dec
mov
sbb
ret
adc
push
daa
inc
iret
jp
inc
aas
push
pop
jg
pop
das
push
daa
es
in
movsl
fs
cmp
mov
adc
fistl
out
shrl
mov
dec
push
test
popa
data16
enter
sbb
mov
xor
mov
pop
dec
mov
loop
xor
stos
jne
lods
adc
add
and
xor
sbb
xchg
dec
cmp
or
add
in
setb
mov
mov
xchg
or
scas
sbb
mov
addr16
movsl
adc
outsl
cmp
mov
imul
lret
pop
dec
fildll
in
mov
repnz
inc
pushf
shr
cwtl
inc
xchg
adc
pop
cmc
or
cmp
push
mov
fwait
ds
inc
int
loope
imul
out
push
scas
popa
ljmp
imul
ret
inc
sub
fldcw
in
push
insl
sbb
jno
outsl
sub
popl
push
aas
pop
lea
cmp
test
mov
lret
inc
xor
leave
mov
divl
call
inc
jge
outsb
scas
stos
inc
push
mov
jno
in
add
fcompl
movsb
push
add
push
adc
jae
test
sub
add
pusha
pushf
adc
fists
pop
notl
pop
xchg
lcall
int3
mov
out
insb
rcrb
sti
jne
notb
es
jmp
fidivrs
and
jns
lret
xchg
xchg
popa
jmp
xchg
xor
ret
stos
test
test
xor
jle
sub
aaa
and
jnp
aaa
rorb
lds
jmp
adc
mov
jns
mov
adc
pop
adc
pop
popa
and
add
adc
cmp
jmp
xchg
mov
mov
and
loop
incb
rcrb
fs
repnz
fwait
and
in
test
cmp
test
fistpll
ss
adc
push
lret
mov
sahf
les
or
outsl
loope
jmp
inc
lcall
mov
jns
lcall
add
sub
inc
ss
stc
jmp
push
dec
adc
pop
sbb
add
xchg
mov
cmp
and
imul
mov
stos
jle
push
xchg
andl
in
add
add
add
daa
aas
push
rol
es
and
mov
std
sub
add
push
hlt
add
sahf
loope
idivl
xchg
mov
inc
aad
pop
insl
cmp
and
or
jns
fcmovnu
mov
icebp
sbb
mov
or
jbe
lret
push
mov
xchg
lock
or
addr16
dec
xchg
out
sbb
adc
adc
mov
gs
jno
push
dec
jbe
mov
popa
daa
cmc
adc
test
inc
mov
test
inc
cmp
mov
jp
cwtl
dec
jns
mov
mov
xchg
push
push
push
fs
fstpl
lret
mov
mov
call
dec
cs
add
xor
lods
push
subl
sub
repz
je
das
xor
inc
xor
aaa
add
sub
sbb
xor
int3
jne
std
ror
jae
mov
inc
sub
sbb
inc
mov
ret
enter
jae
mov
popa
stos
adcl
xchg
sub
mov
cmp
dec
xlat
aam
lcall
lret
mov
pop
add
ja
addr16
cmp
mov
aad
in
out
outsl
call
adc
xchg
add
mov
insl
jle
xor
sub
fisttps
mov
clc
pop
popf
loop
or
adc
repnz
adc
push
outsb
rep
clc
and
xchg
incl
stc
in
pop
sti
sarb
js
popf
sub
dec
jb
inc
test
mov
jns
pop
mov
inc
add
cmp
jecxz
in
dec
inc
mov
mov
int3
adc
push
mov
sub
scas
jb
and
test
lods
xor
jb
inc
outsb
mov
aaa
pop
addb
mov
jno
test
outsb
mov
popf
popf
out
push
mov
pushf
sahf
test
mov
lret
mov
cmp
fcomps
push
push
test
jne
pop
xor
lods
insb
fcomip
int
rorb
in
int3
fisttps
and
test
mov
push
imul
inc
bnd
push
fsubl
push
fnsave
pop
jecxz
cmp
lret
pop
lahf
ret
rol
mov
cmp
nop
test
sbbl
pop
pop
jne
inc
out
mov
pusha
imul
cld
push
bound
and
ror
add
or
es
xor
mull
subb
cmpsl
xchg
test
leave
push
imul
adc
fdivrs
aaa
mov
inc
in
out
add
stc
xchg
insb
lret
inc
push
test
mov
jns
andb
dec
mov
inc
ror
mov
ret
in
rclb
cmp
repnz
jno
cltd
std
push
adc
pusha
stos
inc
aas
mov
add
sub
adc
dec
fimuls
sbbb
pop
mov
mov
push
cwtl
pop
add
xor
scas
add
ffreep
outsb
in
imul
pusha
cltd
inc
scas
fnstenv
jno
imul
add
cmpsl
outsl
and
sub
mov
mov
add
push
int
in
cld
adc
arpl
pop
incb
daa
fdiv
jbe
leave
sbb
or
cmpsb
jg
mov
push
fnstcw
lahf
nop
addr16
repz
cli
repz
mov
lret
pop
jns
jo
outsl
lret
mov
std
pop
xchg
mov
and
clc
adc
xchg
icebp
out
pop
hlt
ja
jbe
decl
jb
rorl
cmp
or
sti
aaa
mov
inc
fiaddl
shl
test
rolb
or
into
sub
les
movsb
aam
aam
sub
cmp
int
push
bound
popf
cltd
sub
pop
sub
xor
or
jo
fisubrl
xchg
test
adc
mov
int
jmp
out
or
xchg
pop
shlb
ret
mov
out
push
and
out
pushl
add
data16
inc
adc
sub
dec
sub
hlt
mov
call
cltd
pop
push
addr16
lahf
mov
addr16
adc
push
inc
dec
fnstsw
outsl
add
inc
xor
fldl
pop
sub
popf
lret
jnp
xor
ficoml
xor
cmpsb
shll
sahf
out
inc
out
mov
lret
inc
fisttps
movsb
test
pop
jne
stos
sbb
jns
mov
popa
lret
repnz
cmpsb
xor
push
adc
fsubp
fnstcw
xorb
imul
cmp
es
je
sub
fnsave
dec
pop
xchg
xorb
dec
test
pop
repz
fnstcw
into
sarb
cmp
rorb
insl
hlt
sub
lods
mov
jecxz
cmp
push
mov
push
cmp
add
dec
add
packssdw
xchg
dec
inc
xchg
mov
jbe
and
sbb
fwait
mov
sub
or
or
nop
sbb
test
mov
ss
fsts
lcall
ret
insl
xchg
fwait
inc
cld
push
adc
ss
cmpsb
rolb
jb
jns
push
pop
lahf
cmp
xor
mov
xor
scas
jp
es
push
jmp
mov
lods
sub
sti
shlb
add
push
add
pop
dec
adc
stos
imul
xor
jbe
add
pop
sub
dec
cmp
mov
mov
insb
fcompl
addr16
adc
mov
mov
mov
leave
mov
loop
dec
ret
dec
testl
cmp
mov
push
mov
scas
cmc
pop
das
jge
jl
stos
mov
mov
mov
enter
sbb
cmp
je
mov
xor
mov
adc
cmp
push
outsl
jle
nop
cmp
dec
inc
add
mov
add
pop
push
jecxz
sub
fisubrs
es
stos
in
xor
scas
je
jne
pop
cli
mov
and
pop
or
inc
bound
push
ret
jb
xchg
inc
in
push
xor
fadds
leave
xlat
sahf
iret
cs
icebp
lea
xor
jg
aad
mov
jbe
and
push
xchg
jge
mov
adc
rcll
das
testl
neg
dec
cld
fdivrp
xchg
sbb
cld
mov
lods
xchg
out
inc
mov
add
int
cmc
and
popa
xchg
xchg
pop
or
xorl
xchg
pop
push
cmp
int3
jae
or
and
je
lahf
dec
leave
lods
cmp
push
mov
fucom
filds
mov
jae
jp
adc
mov
stc
hlt
push
pop
jae
add
pop
mov
add
push
mov
data16
cwtl
push
ret
insb
std
je
xchg
lds
hlt
outsb
dec
pop
popa
mov
enter
aad
loopne
loope
xchg
movsb
and
push
pop
ret
xchg
call
and
pushf
arpl
pop
sub
push
fldcw
int
push
repz
mov
sbb
out
inc
hlt
xchg
ret
mov
decl
sarb
pusha
leave
sub
cmp
clc
add
lret
cltd
in
aas
loopne
mov
mov
das
xchg
cwtl
hlt
mov
inc
jb
mov
push
xor
dec
shlb
scas
cmp
jb
xchg
sub
sarb
pop
lock
adc
jnp
cmpl
push
outsb
pop
xor
imul
xor
insl
xchg
mov
mov
addr16
roll
push
lods
pushf
jbe
test
daa
lds
mov
fwait
rcr
cmp
int3
jecxz
addl
mov
cmp
frstor
mov
or
xchg
pushf
push
mov
pop
and
xchg
cld
adc
xchg
andl
outsb
stc
mov
fisubl
inc
leave
mov
mov
enter
pop
popf
xchg
daa
aas
push
jmp
rcl
out
cmp
xchg
fstpt
lret
pop
je
sarl
mov
cmp
icebp
cltd
jp
mov
and
shlb
jmp
and
dec
mov
pop
jns,pn
fisttpll
rorl
repz
addr16
ja
lahf
lods
or
jno
rclb
lcall
mov
xor
dec
ficoms
inc
mov
lock
jbe
sub
add
jbe
data16
fadd
xchg
pop
cltd
cld
mov
mov
lret
mov
or
push
cmovle
or
jo
adc
ss
jg
loopne
in
dec
jp
pushf
xchg
mov
lds
imul
mov
cmpsb
ss
popa
push
jg
mov
mov
xchg
xor
adc
imul
sbb
subl
insl
push
jge
xlat
push
adc
mov
fadds
sub
int
mov
jns
pop
fsubl
bound
add
test
inc
test
mov
in
outsl
mov
mov
ret
adc
pop
push
jp
je
cmp
stos
std
lds
lods
lret
aam
mov
ret
and
ss
adc
mov
sbb
mov
jle
nop
test
fistpl
sbb
fcmovnu
push
js
rorl
inc
scas
mov
adc
add
push
lods
adc
movb
mov
push
das
mov
gs
pop
push
jmp
sub
arpl
bound
jecxz
insl
adc
loop
xchg
jge
imul
ss
fcomp
addr16
mov
xor
push
cmp
mov
in
jae
xchg
xchg
lret
and
push
jae
cmovo
call
dec
int
mov
or
add
repz
pop
mov
pop
sub
lahf
add
mov
jl
push
mov
into
lcall
mov
adc
incl
or
push
aas
insl
dec
das
dec
sbb
test
mov
or
xchg
call
jmp
jl
mov
imul
pop
cwtl
xchg
xor
inc
sbb
jo
add
fistps
push
iret
push
and
cmp
sbb
or
mov
and
rdpmc
adc
rcrb
mov
mov
sbb
cltd
fsub
jns
pop
imul
nop
sbb
mov
ss
mov
pop
sti
mov
mov
shrb
pop
dec
imul
faddp
fdivp
xor
fs
cmc
cltd
xor
jmp
mov
roll
lret
mov
cld
or
repz
push
add
mov
mov
cmp
subl
mov
adc
ds
fs
and
loope
xchg
scas
fidivs
xor
rcrl
cmp
dec
xor
jno
loopne
aad
test
out
cwtl
aas
xchg
dec
stc
jl
push
enter
xchg
inc
fnstcw
xchg
xor
inc
cmp
mov
dec
inc
inc
xchg
int
aad
clc
adcb
leave
pop
lds
cwtl
mov
xor
nop
movsb
js
xor
ret
out
shlb
add
leave
adc
ret
arpl
mov
insl
jne
ss
cmp
xchg
pop
lock
xor
sar
push
xchg
hlt
rolb
jle
in
shlb
flds
bound
hlt
xor
or
dec
mov
fdivs
cmp
mov
call
inc
out
aaa
push
mov
sub
cmp
mov
outsb
in
or
fcomip
sti
pop
arpl
and
movsb
stos
mull
les
add
std
inc
push
jp
sub
lret
rorb
popf
adc
xor
iret
pop
and
inc
pop
sbb
rcll
add
addr16
imul
enter
cmp
pop
sub
in
mov
and
stos
fdivrs
adc
pop
pop
stos
paddw
add
test
cld
out
push
in
addr16
dec
mov
push
fadd
cmc
lds
sahf
xor
xor
mov
imul
jge
inc
fistpll
std
jnp
xadd
roll
popa
in
xor
ja
stos
stos
push
xor
lods
mov
lret
mov
mov
and
inc
mov
cli
mov
sub
pop
cmp
mov
pop
sub
test
pop
mov
mov
sub
ss
iret
jl
pop
jle
add
mov
ret
add
aad
sub
out
shlb
iret
sub
loope
shr
xor
rcll
mov
dec
mov
lcall
inc
call
adc
or
push
mov
dec
mov
jge
cli
cltd
cltd
aad
sbbb
out
push
lahf
rcrl
insb
aad
sbb
push
sbb
mov
rclb
jbe
push
out
add
pop
shll
shll
iret
pop
mov
xchg
dec
add
pop
push
fsub
cmc
cwtl
pop
shrb
lret
sbb
or
pushf
rcr
xchg
leave
xor
loope
out
push
ljmp
dec
jle
mov
arpl
mov
test
and
dec
and
dec
arpl
jb
cmc
in
xor
outsl
xchg
push
adc
pop
add
pop
in
addr16
push
dec
je
movsb
fildll
xchg
imul
nop
jb
cmp
lret
mov
push
jge
icebp
aaa
push
outsb
call
arpl
mull
add
cli
ja
outsb
icebp
fs
fimull
xor
std
popa
mov
iret
and
push
or
sbb
sbb
add
push
lods
push
call
pusha
inc
mov
sti
dec
or
jns
in
mov
or
lcall
push
xchg
dec
xchg
sbb
lcall
icebp
es
inc
dec
xchg
adc
popf
into
or
ret
adc
mov
mov
icebp
test
pop
pop
out
xlat
sbb
push
push
call
push
mov
rclb
js
push
cmc
pushf
and
and
inc
mov
cld
nop
aad
ss
jecxz
or
cmp
lret
sbb
std
push
dec
in
cld
and
es
push
and
rcrb
xchg
mov
push
fadd
pop
out
sub
xchg
push
sbb
sub
sub
mov
icebp
inc
hlt
or
arpl
sti
sbb
je
push
mov
push
je
cmpsb
and
xchg
repz
addr16
xor
dec
fisubs
xchg
jge
adc
in
xchg
mov
pushf
popa
mov
das
jo
push
sbb
jle,pt
call
ja
icebp
rcrb
fldt
outsl
push
and
sti
cwtl
popf
repnz
fildl
dec
sbb
cmp
add
mov
insl
pop
mov
mov
js
fcomip
loop
and
data16
int3
pop
inc
xor
and
xchg
loop
inc
or
sti
push
icebp
fstp
jecxz
dec
sbb
aad
dec
pop
push
mov
popf
rcll
cmp
push
mov
jae
jb
mov
stos
jne
stos
mov
pop
push
repnz
pop
insb
js
jmp
and
and
in
leave
adc
mulb
in
std
call
jge
dec
inc
add
cmp
xchg
or
call
icebp
xor
lcall
sbb
ss
fidivrs
dec
sti
or
cmp
and
dec
jp
insb
dec
sbb
mov
movsl
xchg
das
in
jns
jecxz
orb
lods
lret
adc
push
repz
jle
push
decl
icebp
jle
out
xchg
cltd
into
je
and
aam
arpl
sbbl
test
push
sbb
in
ret
lods
mov
shlb
pusha
mov
sub
push
mov
pop
inc
sti
insb
cmp
clc
and
pop
push
loope
sbb
xor
lods
mov
xchg
movsb
sub
cmp
ja
pop
subl
lods
add
xor
push
sbb
es
fists
aaa
jmp
cmpsb
imulb
sahf
sbb
inc
and
bound
sbb
cmp
adc
and
int3
inc
xor
in
das
push
cmpb
cmc
ja
popf
lds
push
inc
imul
jo
dec
cli
xor
mov
or
mov
push
std
pop
cs
xchg
andb
sbb
cmpsb
mov
jo
stos
ret
scas
lea
add
sbb
int
call
sub
insb
dec
mov
push
fistl
jb
mov
sbb
stos
or
lea
push
aaa
xchg
cmp
imul
xchg
push
gs
testl
push
jno
dec
loopne
pop
dec
inc
or
int
call
hlt
fbstp
adc
or
cmp
push
movsl
fs
rcrl
inc
movsb
inc
or
lds
adc
ret
inc
and
cli
dec
aad
sbb
mov
push
insl
fistpl
adc
data16
daa
outsl
mov
popa
data16
sub
or
cli
mov
dec
shl
stc
adc
cmp
pop
mov
in
dec
sbb
xor
and
and
jb
fs
scas
cmpsl
pop
subb
out
push
sti
aad
or
pushf
in
dec
inc
jb
dec
sub
lret
inc
mov
outsb
lahf
sti
mov
add
and
and
xchg
out
cmp
xchg
inc
and
jnp
sub
pop
test
push
shl
and
shll
dec
push
test
pop
lock
cmp
push
ja
ds
enter
jns
xchg
mov
mov
adc
dec
mov
imul
arpl
shl
adc
dec
fnsave
jp,pt
shll
cmp
sbb
push
xchg
and
pop
cmpsl
mov
out
or
mov
cmp
inc
or
imul
xorl
cltd
mov
int
adc
cmp
hlt
lods
pop
loopne
test
sub
popa
jl
jg
out
dec
out
sbb
mov
inc
loope
fsubrl
inc
mov
mov
dec
cmpsl
adc
push
dec
and
test
xchg
cltd
in
scas
jge
mov
xor
push
negl
loope
scas
add
call
cmp
xchg
xor
scas
loopne
push
aam
inc
mov
push
jne
jo
nop
inc
inc
lahf
aad
int
lcall
les
test
mov
das
dec
and
ss
dec
fadds
mov
xorl
mov
and
add
xchg
out
pop
mov
mov
add
mov
dec
es
sbb
inc
repnz
mov
cmp
adc
sbb
in
scas
cmpl
jns
inc
subb
mov
shrb
sti
and
push
test
stc
js
out
cs
lret
cmp
imulb
push
jnp
ficoml
add
in
mov
imul
insb
xlat
ret
inc
in
lcall
inc
inc
cmp
and
mov
pop
sbb
test
les
or
decb
or
dec
stc
imul
ficoml
rcrl
mov
jle
outsb
xor
addr16
add
mov
fld
sbb
mov
sbb
and
add
mov
add
pusha
cmp
mov
xor
lea
test
mov
adc
loop
cmp
pop
std
mov
sbbl
mov
insb
maxps
xor
loope
push
jb
push
hlt
js
pushf
lods
fbld
mov
jb
ja
es
xchg
ljmp
nop
mov
push
lea
sar
sub
cltd
pop
pop
inc
adc
push
lods
fs
pop
fsubs
or
and
je
decl
and
test
xor
pop
in
pop
or
ja
daa
std
jbe
cld
mov
and
loop
ret
fisttpll
sbb
in
sub
dec
xchg
and
add
cmp
push
xor
sbb
das
xor
mov
clc
test
or
dec
cwtl
inc
pop
inc
and
jae
jnp
scas
aaa
insl
incl
and
xor
fmull
js
jae
lcall
adcl
lahf
sub
pop
stc
mov
mov
pop
mov
pushf
adc
loopne
cmpsl
test
jns
aam
mov
adc
adc
push
jp
cmp
sub
mov
scas
jg
test
dec
bound
jo
faddl
sub
dec
mov
pop
jb
adc
imul
push
mov
adc
movsl
aas
fmuls
loopne
fisttpll
add
xor
jno
std
ja
sarl
push
push
fcoml
and
adc
mov
mov
pop
push
leave
xchg
addl
fisubrl
fiaddl
pop
outsl
sub
dec
aas
out
inc
rol
xchg
push
aas
lahf
pop
int
push
xchg
inc
add
pusha
js
insb
pop
adc
gs
test
dec
insl
out
das
dec
int
fndisi(8087
std
sub
pop
push
movsb
andb
mov
lock
arpl
cmp
mov
into
cwtl
xchg
mov
xchg
dec
mov
sub
or
stos
imul
gs
dec
add
xchg
negb
jne
mov
movsl
mov
hlt
dec
cmp
dec
test
ja
inc
add
imul
je
mov
or
in
pusha
jo
cwtl
mov
int
push
and
xorl
movsl
pop
or
and
add
imul
add
adc
ret
and
xlat
ret
xacquire
add
popf
jecxz
adc
or
mov
in
push
stos
xor
lods
sub
ljmp
orl
push
popa
push
xor
cmp
pop
lahf
and
aam
cmc
sbb
pusha
sbb
jbe
lods
fs
aas
or
pop
sbb
add
dec
and
es
hlt
dec
cmp
lds
inc
imul
push
add
and
mov
mov
test
push
push
add
jb
fdivl
cltd
xchg
dec
push
cmpsl
xchg
or
xchg
ljmp
push
lret
jl
mov
pop
lock
scas
test
sbb
dec
jnp
jb
xchg
mov
sbb
cmpsl
cmp
int
fistpll
dec
mov
sub
hlt
nop
insl
and
push
jmp
loope
out
test
xchg
mov
rcll
ret
pusha
adc
mov
in
cltd
mov
mov
jmp
xor
lret
cmc
cld
add
mov
xor
ss
xchg
cmp
add
dec
test
into
and
push
sub
ja
xlat
add
scas
mov
push
pop
xchg
bswap
lahf
arpl
iret
mov
inc
clc
cmp
aaa
popf
cmp
add
fwait
outsl
push
daa
pop
sbbb
sub
iret
xor
jl
mov
in
sub
adc
imulb
pop
sbb
lcall
mov
clc
iret
arpl
mov
mov
outsl
mov
cwtl
or
pop
push
cs
jle
push
sub
dec
pop
jmp
and
push
pusha
cmp
int
pop
add
sub
jae
loop
cli
sbb
bt
es
sub
cwtl
xchg
sbb
sub
jmp
sbb
xchg
cwtl
mov
jae
xor
cmp
aad
and
cmp
fstpt
dec
mov
pop
dec
dec
andl
add
cmc
mov
popa
aaa
shrl
push
lahf
and
aas
jp
into
jp
inc
jbe
dec
int
lods
pop
or
sti
cmc
jecxz
add
inc
and
xchg
aas
stc
inc
and
lret
movsl
mov
dec
leave
bound
lret
out
xchg
sbb
sarl
int
mov
jge
dec
pop
imul
sub
pop
div
adc
push
icebp
jle
inc
ret
orb
fs
out
addr16
push
movsl
mov
jmp
mov
out
jno
adc
fmuls
out
adc
pusha
out
push
mov
dec
mov
cmp
cmp
push
stos
sbb
push
cmp
pop
xchg
shrl
nop
outsb
lods
cmpsb
jo
mov
sti
pop
out
add
or
jge
jo
jmp
inc
jno
out
jl
sbb
adc
xchg
cs
add
popf
cli
and
enter
scas
dec
push
ljmp
in
push
daa
inc
scas
cmp
dec
test
dec
negl
jno
ljmp
sub
mov
out
xchg
sub
xor
scas
js
dec
push
gs
push
aad
sti
shlb
subl
test
dec
iret
adc
jle
sti
push
fwait
sub
mov
sbb
push
sub
add
repnz
mov
jl
or
adc
out
and
shrb
cmp
test
pop
push
xor
insl
mov
loopne
fsubl
push
bound
adc
push
out
negl
pop
call
test
fstps
pop
jecxz
xchg
ret
xor
pusha
sub
arpl
in
cwtl
xchg
arpl
adc
cmpsl
and
int3
scas
lds
rorb
outsb
mov
xor
cmp
jo
ja
jb
mov
and
jg
test
push
sbb
int3
aad
pop
add
dec
lret
std
stc
flds
insl
sub
xor
xlat
out
xor
and
je
cltd
sub
repnz
test
ret
mov
jae
imul
add
xor
cmp
clc
jne
xor
out
push
adc
inc
push
rcr
add
sbb
movsb
icebp
inc
jg
sub
lahf
icebp
and
ds
cmp
out
and
stos
jmp
std
adc
ror
imul
inc
dec
cmp
sahf
adc
dec
in
mov
xor
out
mov
fldenv
jmp
out
push
and
nop
and
adc
inc
ljmp
sbb
adc
jge
pop
mov
add
mov
or
addr16
lret
xchg
add
fisubrl
shl
aas
mov
sub
divl
lret
xchg
ja
mov
fisubl
cwtl
add
cwtl
insl
inc
sub
lods
mov
cmpsl
imul
jmp
mov
cmc
add
lret
lcall
pushf
xor
mov
loop
sbb
sub
jle
sti
push
aad
or
addr16
push
adc
pop
mov
xor
add
fwait
adc
xor
inc
cwtl
shrb
pop
jnp
mov
push
lock
xchg
aas
mov
test
xlat
push
lcall
dec
scas
rcrb
push
popf
mov
lcall
jne
sub
xchg
dec
jle,pn
imull
mov
dec
push
dec
push
xchg
xor
sub
cwtl
push
jmp
outsb
enter
and
pushf
sbb
xchg
mov
aad
push
adc
xorb
mov
aad
xor
mov
mov
xchg
incl
jbe
and
jne
mov
push
outsl
ffreep
es
lock
test
jno
ret
xchg
or
xchg
in
imul
stc
pop
and
aam
jns
add
jl
sbb
data16
add
jns
iret
add
pusha
clc
stc
xchg
ljmp
pop
insb
or
xor
ljmp
enter
jmp
dec
mov
cs
pop
int3
pop
shl
mov
xchg
lds
movsb
sarb
adc
xchg
std
mov
sbb
xlat
orb
jno
es
fwait
mov
cmp
adc
outsl
shl
aas
dec
or
mov
dec
mov
insb
mov
xchg
ficompl
pop
push
inc
aam
sti
push
repz
mov
jb
fiaddl
jno
lods
mov
inc
mov
fisttpl
roll
inc
pop
cli
ss
inc
sub
sbb
lock
sub
sbb
cmpsb
ficoms
xchg
cltd
outsb
xchg
mov
adc
cmp
or
xor
in
or
dec
dec
sbb
fiadds
adc
test
pop
xchg
inc
negb
addr16
push
bndldx
into
rolb
ljmp
sbb
sub
fsubrp
adc
sbb
dec
les
jecxz
test
jo
lds
iret
or
addl
cmc
and
add
push
adc
sar
rcll
out
jne
inc
fsts
arpl
dec
mov
aam
mull
push
jo
dec
jnp
es
adc
out
fcmovbe
adc
jnp
outsb
flds
jne
jns
popa
dec
xor
inc
xchg
repz
push
rorb
and
mov
outsb
adc
imul
cs
lcall
xchg
cmp
mov
leave
adc
xchg
insb
xchg
jge
ret
cmc
push
das
divl
hlt
movsl
xchg
push
or
cmp
movsl
sar
pusha
cltd
imul
add
mov
mov
cmp
mov
imul
or
add
pop
xchg
ja
fidivrs
nop
outsb
das
push
jne
das
addr16
mov
cmp
push
lret
jb
xor
add
jmp
push
test
and
mov
adc
mov
pop
push
mov
cmc
jae
lods
hlt
je
sub
jbe
sahf
push
stc
mov
jns
xor
lods
jmp
mov
mov
sub
jecxz
push
movsb
popf
mov
adc
mov
mov
mov
dec
imul
stos
fdiv
jne
cmp
enter
fimull
lock
or
pop
sbb
add
fstl
stos
js
test
icebp
fists
int3
add
add
cmp
pop
push
repz
add
lds
push
xchg
adc
les
lahf
cmp
int
mov
mov
dec
sarb
shlb
jp
rcrb
movsb
bound
cmpsb
jg
push
mov
add
dec
rcr
push
jp
fwait
aad
loop
outsl
in
enter
jmp
pushf
dec
mov
ljmp
int3
inc
xchg
xor
ret
mov
xlat
mov
dec
inc
mov
fimull
dec
bnd
inc
adc
adc
imul
mov
out
out
lds
dec
rorl
sbb
mov
pop
xchg
inc
or
inc
nop
and
inc
cmc
stc
outsl
or
jb
cmpsl
dec
fdivr
shll
sti
sub
mov
cli
insl
insb
ljmp
lods
sub
flds
hlt
dec
lds
mov
into
jecxz
enter
push
rol
jecxz
stos
mov
jnp
xchg
add
mov
adc
or
repnz
add
and
enter
gs
mov
push
sbb
xchg
xor
or
sbb
repz
push
xor
test
ror
jl
inc
inc
adc
mov
mov
push
pusha
leave
ret
pushf
xchg
dec
std
movsl
fildll
cmp
sub
lret
jg
push
mov
hlt
sar
les
xchg
xchg
negl
xchg
pop
hlt
mov
sub
cwtl
fnstsw
inc
lods
inc
dec
or
aaa
sbb
lock
in
out
inc
pop
in
into
cmp
out
add
into
in
adc
push
push
stos
call
cmp
leave
or
insl
cld
out
or
mov
jge
jo
cmp
hlt
sub
sti
pop
sub
or
enter
cmp
mov
mov
and
fldcw
ja
arpl
out
sbb
lcall
push
lret
and
and
push
stos
loopne
into
push
inc
inc
jmp
push
ja
cltd
mov
jle
adc
add
ret
aaa
adc
pop
pop
loop
sbb
cltd
jnp
shrl
popa
xchg
mov
sbbl
iret
popa
pop
dec
das
or
push
jns
test
dec
lret
and
adc
push
jo
cmpsl
mov
push
test
fists
outsb
call
imul
nop
or
mov
jnp
inc
mov
outsb
inc
jecxz
mov
sub
xchg
fcompl
mov
mov
add
std
fs
std
cmp
mov
test
mov
cmp
dec
cld
add
dec
inc
add
and
sub
pop
add
std
out
jo
xor
cmp
mov
xchg
int3
loopne
jecxz
addr16
imul
lods
jno
ja
pop
icebp
hlt
sbb
jmp
xor
sub
mov
jne
sbb
mov
setne
ja
dec
push
idivb
pop
or
fincstp
lcall
push
jmp
fisttpl
cmp
mov
sbb
pop
cmp
orl
ficoml
sub
dec
je
out
sbb
jne
popa
cmpsb
cs
shll
rol
pop
mov
pop
and
roll
ss
push
push
or
les
pusha
les
imul
dec
xor
push
sar
stc
mov
dec
mov
jle
aas
lds
cmp
out
or
test
pop
fldcw
jne
sti
jns
lea
jecxz
xchg
aad
xchg
jne
fbld
xchg
rcrb
divl
cltd
cmp
repnz
mov
xchg
inc
arpl
lcall
les
mov
push
ss
lahf
pop
in
scas
cltd
ljmp
fcoms
mov
sbb
movl
sbb
cmc
or
scas
div
imul
sub
mov
mov
xor
scas
mov
in
aam
xor
out
aaa
ret
xchg
sbb
notl
lret
push
adc
jbe
daa
pop
xchg
push
dec
adc
movsl
jb
jmp
idivl
jne
cmp
lock
and
inc
in
sbb
and
and
lds
mov
dec
cld
pop
inc
popa
shlb
push
ja
cwtl
mull
jmp
sub
lcall
lods
aad
jo
andb
xchg
notb
ds
cs
sti
movsb
in
mov
ja
xor
jbe
std
lods
inc
add
rorl
popf
xchg
das
adc
mov
push
das
and
and
dec
andb
lods
pop
stos
xchg
enter
mov
or
outsb
fmuls
sbb
fs
push
ljmp
in
imulb
xor
imul
jnp
popf
outsb
xchg
test
xor
mov
xlat
fld
xchg
mov
sti
ret
in
sbb
adc
cmpb
mov
xor
repz
je
adcl
loop
pop
mov
jmp
aaa
sahf
push
mov
inc
sub
vmptrst
arpl
and
and
pop
xchg
dec
outsl
dec
mov
cmp
mov
mov
cli
inc
js
cmovbe
cs
jl
jns
orl
std
call
loope
mov
push
icebp
dec
fwait
clc
bound
es
outsl
push
fs
push
ficomps
xor
shrl
subl
mov
lds
push
and
lret
es
cmc
xchg
xlat
mov
cmp
xor
jg
dec
sbb
insl
mov
pop
sub
xchg
orb
imul
mov
xor
add
popf
mov
fdivrs
xchg
outsl
nop
aad
pop
push
lea
pop
div
dec
mov
mov
addr16
dec
and
mov
push
or
jmp
in
mov
addr16
ja
mov
jnp
pushf
or
mov
ret
enter
ja
bound
fimuls
aam
lcall
push
fildl
leave
sbb
dec
xor
mov
ret
ret
or
push
add
sbb
mov
jns
hlt
jbe
mov
dec
dec
js
ret
dec
xor
fwait
sbb
stos
xor
xchg
adc
ja
insb
mov
mov
lods
int
jae
outsl
mov
movsb
imul
in
sub
cwtl
std
mov
pop
adc
dec
icebp
or
pop
sub
fists
lcall
mov
mov
fcmovu
mov
sbb
rep
mulb
popa
cmp
adc
ret
pushf
dec
and
scas
rolb
push
js
data16
sahf
mov
stos
sub
loop
in
sub
fcomp
incb
sbb
sub
xor
shr
add
insl
dec
outsl
gs
mov
testl
lods
pusha
adc
std
mov
enter
pusha
cmpsb
xor
inc
xlat
imul
add
iret
xor
out
push
lock
test
mov
dec
mov
xor
xor
lret
mov
jbe
jp
out
loope
loop
push
cmp
in
xor
mov
xor
ljmp
movsl
fbstp
stc
adc
in
fdiv
test
ds
mov
jno
xchg
out
xchg
mov
inc
pop
ret
inc
sbb
aad
adc
clc
mov
dec
push
add
push
sbb
out
mov
loope
movsb
sub
daa
scas
and
inc
xor
mov
add
jmp
pop
lret
mov
cs
fsubr
fs
mov
mov
xchg
in
stos
std
pop
js
cmpsl
shrb
jmp
cltd
lcall
ds
in
sahf
fs
adc
mov
pop
arpl
xchg
add
mov
sbb
mov
jg
notl
sarb
dec
mov
aad
in
fistps
fistl
in
or
add
cmpsb
push
inc
mov
fs
inc
pusha
mov
pop
pushf
push
lock
scas
sti
cmc
cld
adc
dec
nop
and
and
and
add
fcompl
loopne
outsb
clc
pushf
xchg
mov
push
and
cmpsb
daa
shrb
lcall
pushf
out
mov
cltd
adcl
pop
jp
ds
jg
cmpsb
shlb
jo
and
jle
fdivr
adc
repnz
ds
xchg
lea
xor
inc
mov
inc
mov
lret
popf
sbb
adc
iret
jl
cmpsl
jnp
mov
xor
lods
call
inc
lock
in
in
cltd
xor
fsubrp
sub
js
add
push
jge
or
jp
fwait
adc
sahf
gs
and
mov
push
pushf
lcall
sarb
pushf
push
arpl
push
dec
bound
xchg
push
mov
addr16
jmp
hlt
call
nop
test
inc
xchg
and
mov
aaa
and
daa
lds
and
imul
negb
push
arpl
push
mov
insb
insb
aad
pop
pop
lods
clc
pop
push
inc
xchg
movsb
push
inc
sbb
cli
arpl
gs
sbb
cmpsb
stc
data16
scas
lret
orl
sbb
xorl
lret
cmp
repnz
mov
add
jmp
jno
sbb
imul
add
test
sarb
cwtl
cmp
aam
mov
lods
fs
test
aaa
lea
jecxz
mov
imul
mov
push
arpl
in
add
or
es
adc
or
loopne
fcompl
fld
mov
je
cmp
inc
lods
add
push
pop
mov
jl
outsb
in
scas
mov
imulb
mov
movsl
leave
in
push
mov
ss
dec
stc
adc
mov
jb
adc
and
xlat
or
jnp
shll
add
mov
or
pop
add
addr16
outsl
mov
pusha
inc
sub
cmp
daa
jne
js
addb
adc
xor
es
fcoms
cmp
cmc
cmc
dec
jns
sbb
mov
add
or
cmp
std
inc
cld
inc
loope
in
les
hlt
addr16
sti
lret
cmp
xor
jno
std
sbb
arpl
mov
test
pop
adc
into
fiaddl
push
cltd
mov
inc
sub
rcl
pushf
gs
jmp
mov
xchg
jo
lock
add
in
lods
adc
outsl
push
xlat
and
push
ds
mov
testb
leave
bound
push
pop
add
jle
adc
or
mov
ret
cmc
ja
mov
and
arpl
loop
stos
cmp
inc
push
rol
jmp
sub
fdivr
sahf
push
cmc
call
and
jmp
mov
sub
xor
pop
dec
pop
inc
dec
pop
push
es
test
fs
repnz
pusha
ret
and
int3
jno
fsubrp
in
push
xor
dec
inc
fisubs
sarl
sahf
push
mov
push
sub
and
jo
push
aas
in
mov
jno
xor
fs
loopne
icebp
dec
pushf
xchg
mov
lods
jae
call
dec
push
inc
ja
mov
add
mov
pop
mov
pop
shl
push
add
xorb
in
outsl
mov
enter
jecxz
push
daa
rorb
jno
sarb
popf
fwait
dec
cltd
cmp
adc
sbb
sub
and
pop
test
in
dec
dec
sub
or
mov
enter
ss
jb
inc
lahf
fnstsw
sahf
loop
xchg
movsl
icebp
pop
stos
inc
nop
pop
sbb
test
stos
cwtl
push
sub
xchg
and
push
xor
push
xor
dec
enter
out
xor
push
inc
bsr
ljmp
in
mov
pop
inc
in
xor
jmp
fwait
pop
mov
mov
mov
xchg
mov
ja
mov
jmp
mov
mov
mov
insb
xor
inc
js
jmp
fistl
mov
xor
call
scas
rorl
lock
mov
xor
pushf
imul
rorb
repz
aas
inc
mov
mov
cmp
xchg
and
pop
xchg
push
ss
mov
cmp
fs
xchg
ret
nop
addr16
jecxz
adc
into
mov
sub
ficomps
jle
shl
cmp
dec
movsb
pop
or
xor
adc
cmp
sti
out
cmp
lret
leave
sbb
pop
pop
mov
adc
dec
into
mov
loope
mov
xor
shll
loope
sub
insb
hlt
jl
pop
push
movsb
int
or
sbb
mov
mov
mov
cli
repnz
mov
push
jp
xor
mov
sbb
add
jne
adc
add
rorl
jns
in
gs
mov
pop
mov
pop
cwtl
push
and
in
outsl
ljmp
cmp
mov
adc
mov
mov
std
push
imul
sub
dec
xchg
sahf
fildl
or
push
das
inc
cmp
pop
dec
fidivs
mov
loope
push
jbe
inc
imul
aam
fwait
mov
add
sysenter
dec
jns
std
push
jle
cli
jne
hlt
dec
adc
nop
std
adc
test
enter
xor
ds
lods
jmp
test
ret
xchg
lret
nop
xchg
inc
xor
es
out
cld
mov
adc
movsl
jecxz
rolb
xchg
pop
jp
sti
inc
inc
sub
mov
xchg
and
push
jg
jmp
pop
call
jb
pop
push
xor
mov
pushl
cli
ds
cmp
popf
dec
inc
ret
jge
xchg
and
adc
mov
inc
mov
in
cmp
adc
fwait
or
popa
jl
push
das
sub
pop
lahf
push
bndldx
outsb
hlt
negb
pop
add
movsb
dec
dec
clc
out
lods
fldl
js
ror
mov
hlt
sbb
pop
cmovs
out
data16
jmp
dec
jl
add
lcall
fists
sub
and
bsr
mov
popa
outsl
pop
mov
cmp
cmp
fadds
mov
xor
jno
loop
aad
xor
xor
mov
mov
xor
sbb
popf
data16
inc
xor
push
call
dec
inc
in
cmp
shll
arpl
mov
imul
fs
lods
mov
mov
cmp
insl
push
sbb
dec
pop
pushf
fstpt
test
lahf
addr16
sub
jno
scas
repz
inc
push
out
adc
or
push
andb
jg
adc
xchg
xchg
cmp
pusha
cs
shrl
push
jmp
sahf
cs
clc
icebp
mov
add
imul
popa
clc
pop
push
jb
int
data16
aas
cmp
cwtl
or
add
pop
lret
push
xor
int
scas
test
aas
movsb
inc
cmc
insl
jle
or
int3
push
sti
aad
inc
inc
cwtl
push
sbb
push
push
adc
cmp
mov
dec
cwtl
inc
pop
icebp
add
adc
cmpsb
pop
xchg
lea
mov
aam
jbe
mov
dec
xchg
xchg
lods
repnz
jb
xchg
gs
repnz
bound
cwtl
movsl
push
jb
mov
mov
sub
int3
in
mov
mov
add
push
adc
stos
inc
pop
in
mov
aaa
jb
pushl
cmpsl
adc
adc
xchg
sub
fwait
es
and
scas
int
fwait
push
jl
push
push
fwait
adc
hlt
pand
dec
repnz
outsb
sbbb
jge
fmuls
xor
mov
stos
and
popf
out
stc
add
mov
adc
nop
cltd
lahf
sarb
jae
outsb
fimuls
inc
les
cmp
ds
lea
and
insl
sub
fimull
rcrb
lcall
inc
mov
pop
push
cltd
shlb
cli
fdivr
insb
add
xchg
stos
cmp
loope
xorb
jp
in
and
sub
inc
call
call
mov
sbb
xchg
into
out
int
cld
js
cld
jne
ds
insb
xchg
fsubrl
pop
xor
imul
mov
loopne
mov
jg
and
mov
jb
jbe
add
mov
push
imul
aas
loopne
call
push
out
push
sbb
sub
and
mov
inc
jbe
adcl
test
mov
sub
fdivrl
lods
les
loop
add
cmp
ds
outsb
pop
pop
loope
pop
push
xor
add
dec
ds
adc
dec
push
sbb
int
pop
hlt
inc
and
loop
mov
xor
add
in
lret
adc
call
repz
xlat
cmp
mov
in
jmp
jl
and
and
daa
mov
push
repnz
ror
cld
push
sub
movsb
pushf
mov
pop
aas
ret
sub
lcall
daa
mov
stos
ret
lret
ret
xor
jg
jge
jne
fs
push
jg
pop
pop
xor
orl
jb
test
inc
sbb
out
cmp
sub
or
sbb
mov
das
clc
mov
dec
cmc
loope
dec
pushf
pop
xchg
pop
roll
mov
rcrl
popl
pop
cmp
and
test
mov
data16
loop
jbe
adc
in
lcall
push
push
jmp
push
pop
outsb
or
insl
popa
jbe
cmpsb
cmp
pop
push
jmp
out
es
setle
add
add
repnz
adc
inc
jb
cld
mov
arpl
mov
jne
inc
test
mov
pop
add
shlb
insb
jno
jb
aam
push
jp
and
mov
dec
mov
sub
xchg
inc
xchg
cs
imul
pop
sbb
outsb
sbbl
adc
add
jae
adc
mov
in
jns
mov
fwait
repnz
or
pop
pop
push
push
lock
lods
iret
lock
cld
add
insb
jb
lods
add
stc
fcmovu
inc
cmpsl
fisttpl
and
in
insb
lret
xchg
test
out
stos
inc
sub
sbb
mov
dec
lcall
push
jns
inc
xor
dec
push
xor
jo
adc
loope
adc
mov
sahf
lret
fldenv
push
outsb
pushf
scas
dec
shrl
inc
sbb
pop
aad
fstps
jns
je
fdivr
mov
ror
adc
and
jmp
add
inc
sub
pushf
push
mov
sub
stos
mov
mov
jecxz
and
fimull
jnp
icebp
pop
adc
xlat
in
out
enter
sbb
xor
pop
movb
fsubl
rorb
scas
cmc
sbb
dec
in
mov
and
fidivrl
mov
jle
cltd
adcl
jo
pushf
into
aaa
jle
sarl
lret
xchg
and
arpl
jb
or
sub
insl
js
in
addr16
out
pop
fwait
mov
jno
dec
cli
loope
andb
scas
in
cld
cmpsb
jo
add
imul
push
bound
dec
ret
push
or
fimull
sbb
lods
ss
loop
mov
int3
mov
addps
mov
in
std
ficompl
out
fcoms
inc
nop
mov
pushf
aaa
jb
xchg
mov
mov
ja
ffreep
in
dec
stos
addl
aaa
dec
stc
in
and
inc
fstp
inc
idivl
addr16
pop
jne
inc
pop
inc
push
push
arpl
cltd
xor
fisubl
fwait
or
icebp
mov
push
pop
imulb
or
pop
and
std
pop
dec
sbb
and
sahf
and
xor
adc
pop
adc
jmp
or
shll
stc
and
hlt
stos
movsb
xchg
and
les
leave
cltd
xchg
inc
xchg
jge
pusha
sub
jle
add
mov
xchg
nop
or
int3
cmp
out
add
arpl
jecxz
mov
ds
push
mov
fdivrl
lret
fadds
out
sbb
call
pop
js
repz
shlb
inc
sbbb
arpl
in
push
ja
call
add
or
scas
cmp
addr16
mov
jg
sti
push
fsubrp
shll
adc
jl
lods
and
push
jbe
fiaddl
aaa
leave
inc
dec
cmpb
enter
mov
imulb
add
mov
or
in
push
call
imul
out
aaa
push
repz
leave
adc
add
push
pop
bound
sbb
insb
call
cli
in
jg
sbb
xchg
loope
dec
xchg
pop
push
cwtl
push
dec
out
xor
test
mov
outsl
inc
sbb
out
cmp
pop
out
add
xor
es
int3
repz
mov
cmp
lds
fildl
sub
pop
mov
andl
add
dec
std
test
adc
shr
xchg
jnp
int
cmp
push
cmpsl
das
cs
test
and
out
mov
rorl
and
loop
cmp
jg
ds
scas
push
hlt
pop
insl
jae
dec
imul
xchg
divb
daa
mov
add
addl
sbb
xor
scas
mov
js
adc
test
into
cmpsb
jns
mov
cmpsb
lods
aas
sbbl
popa
test
adc
jne
xchg
ret
shrb
xchg
cmpsb
add
insl
jmp
shrb
xor
push
adc
inc
sub
bound
inc
pop
out
cmpsl
imul
jg
xchg
ret
fcoml
outsl
cmp
cmp
xchg
out
enter
sbb
sub
hlt
mov
fs
ss
mov
add
jb
adc
push
pop
aaa
movsb
cld
sarl
cmpsb
insl
cmp
jecxz
jge
hlt
add
mov
push
lea
jle
fucomi
jg
jo
test
sti
push
inc
icebp
out
out
sub
push
nop
jb
orl
fxch
shl
lret
scas
aad
out
pop
movsb
and
or
fs
sub
and
ss
loope
cmpsb
dec
std
mov
cmp
int3
mov
mov
and
push
mov
aas
hlt
stos
jl
adc
add
inc
mov
and
sti
dec
insl
inc
xor
pop
push
mov
push
and
dec
cmp
fbstp
repnz
test
xchg
int3
loope
aam
das
lods
jge
mov
xor
cwtl
hlt
loope
cmp
xlat
mov
aas
xchg
mov
hlt
pop
out
in
outsl
mov
into
pop
clc
push
sub
jno
test
adc
add
push
in
movsb
or
push
fsubl
lds
dec
fldl2e
mov
sbb
sub
jbe
mov
adc
daa
sbb
sub
mov
cmp
fnstenv
repz
jnp
cli
les
icebp
sahf
cmpsb
cwtl
and
loopne
popa
iret
jecxz
pop
mov
addr16
aad
lcall
testl
pop
add
jo
push
jle
jecxz
into
out
call
push
clc
lcall
dec
inc
or
mov
jp
xchg
adc
pop
inc
ss
call
push
xor
loopne
mov
push
sub
and
push
inc
xchg
push
jae
mov
ljmp
scas
xlat
ret
xchg
push
orb
daa
mov
test
out
mov
lock
imul
or
jp
stos
jge
xchg
jnp
lret
add
jg
das
ror
test
mov
ds
or
jmp
out
out
imul
les
int
lods
jns
jmp
rclb
pop
repz
lahf
mov
inc
add
test
xor
cs
sub
in
test
aam
outsl
jno
lahf
jae
xor
ljmp
jl
bound
mov
mov
pop
mov
testb
jge
rclb
xchg
add
add
cmp
les
out
xchg
push
or
decb
adc
pusha
sbb
add
pop
mov
or
loopne
xchg
addb
push
lods
fucomip
in
add
jg
fdiv
add
jmp
enter
sahf
outsl
pushl
adc
mov
inc
xor
idiv
ljmp
out
sbb
xor
sub
or
lret
or
xchg
dec
adc
iret
inc
pop
rcrl
addr16
out
or
pop
insb
ljmp
pop
mov
rcll
xchg
jmp
mov
or
push
lea
dec
cmc
adc
push
pop
push
movsb
mov
jg
repnz
adc
xchg
mov
dec
jecxz
xchg
jmp
sub
jb
mov
in
sub
dec
int
add
adc
lds
jno
jbe
dec
popl
push
xorb
scas
fmuls
lret
pop
in
cmp
or
or
add
aad
xlat
sti
enter
fdivs
pop
shlb
sub
push
shlb
stos
dec
out
call
je
loope
cmp
jecxz
mov
cmp
inc
sbb
sub
xor
inc
or
inc
mov
xor
dec
cltd
mov
imul
leave
cmp
pop
push
xchg
push
sub
cmpsl
xchg
roll
int3
clc
inc
sub
mov
lock
imul
es
test
das
bound
ljmp
dec
mov
ficoml
or
cmc
add
call
mov
or
jle
cmp
mov
or
divl
or
sub
dec
xchg
in
enter
inc
jl
aad
lret
fs
inc
ret
fidivs
and
daa
imul
mov
xchg
push
out
mov
dec
rcl
iret
push
add
add
jnp
subb
jg
jp
pop
sub
dec
push
pop
sub
scas
fidivl
and
test
adc
xchg
push
nop
mov
mov
push
push
push
loope
add
inc
dec
or
stos
mov
pop
xchg
inc
pop
imul
add
xlat
inc
or
jecxz
cmp
sub
les
pop
testl
xchg
sahf
cmp
cmp
mov
mov
jns
fcoms
fmull
adc
push
and
cmp
cs
shlb
adc
shrl
adc
stc
mov
mov
sub
adc
popf
pop
inc
pop
inc
push
pop
addr16
or
xor
inc
lods
in
push
lods
cld
inc
ljmp
lods
pop
pop
or
insl
sub
mov
inc
orb
iret
rolb
test
lds
sbb
jl
pop
xchg
and
outsl
pop
fwait
xchg
lock
mov
xchg
mov
or
mov
inc
xchg
das
mov
mov
enter
sub
loope
xor
dec
insl
pop
aad
test
mov
and
or
pop
pop
and
aaa
jecxz
adc
mov
orb
addr16
aad
cld
push
or
xor
push
cltd
filds
fcmovne
test
adc
mov
fwait
aas
ljmp
xchg
mov
arpl
loopne
adc
or
leave
jae
les
or
int
cwtl
lret
and
out
repnz
or
loopne
pop
orl
inc
push
les
test
mov
out
scas
hlt
push
add
fmul
jns
mov
xor
lea
cwtl
or
das
gs
das
dec
sbb
ds
push
ret
or
adc
xor
js
dec
faddl
adc
push
out
xchg
in
pop
fadds
pop
ror
addb
icebp
cmovb
leave
lods
xor
sbb
call
inc
into
dec
out
xor
ds
cmpsl
loop
add
adc
mov
xchg
insl
add
xchg
or
addr16
push
jb
mov
cmpsb
ja
arpl
imul
sbb
and
xor
push
sbb
insl
lds
sub
xor
sbb
in
push
rcl
pop
out
xor
sbb
pop
popf
add
adc
das
xchg
mov
ja
adc
shll
jp
inc
filds
test
es
stc
push
test
stos
popa
out
bswap
and
adc
jp
fucomp
daa
jb
mov
mov
sarb
jnp
inc
mov
xchg
arpl
add
shl
cmp
or
ror
enter
fwait
rcl
xor
mov
idivl
aaa
js
jb
inc
and
pop
scas
sbb
ret
adc
jecxz
mov
jmp
xchg
inc
adc
mov
orb
orb
adc
je
cmp
fstl
fsubrl
and
push
push
push
push
in
pop
sahf
in
add
test
dec
mov
mov
add
bound
adc
lock
xor
mul
xor
xorb
pusha
pop
scas
and
fsubrs
repnz
into
pop
aad
inc
push
xor
ljmp
std
mov
add
cmp
xchg
out
insb
lcall
pop
pop
mov
repz
inc
sub
cmpsb
mov
cltd
push
test
addr16
hlt
enter
fiaddl
bsf
test
jne
insl
in
mov
lds
jle
inc
push
movsb
sbb
aam
ljmp
adc
sub
iret
aam
pusha
push
xlat
jl
push
cmp
lcall
or
xchg
insb
xchg
push
faddl
push
pop
leave
daa
mov
imul
jo
sub
cmp
fldcw
icebp
mov
inc
mov
xchg
inc
test
testl
xor
std
mov
sarl
pop
loop
lret
mov
push
sbb
sub
lcall
xor
add
into
ljmp
adc
sub
mov
lahf
negb
xchg
mov
xchg
or
mov
mov
je
dec
add
xor
fadds
cmp
cmp
cmpsb
aas
dec
mov
ret
mov
mov
inc
aas
jb
ficoml
push
cli
jno
js
push
insb
adc
cld
out
mov
lods
dec
add
ds
cltd
int3
neg
pop
lods
mov
fwait
sti
push
ja
popf
sti
enter
aam
or
aam
mov
lahf
xchg
stc
and
cmpsb
sub
ret
push
test
orl
outsb
mov
fcomps
inc
inc
or
orl
inc
in
dec
cmpsb
clc
leave
fildl
jb
mov
dec
lds
rorl
add
inc
into
int3
sbb
pop
ucomiss
jnp
jg
push
in
repnz
ret
daa
shrl
cltd
sbb
sub
in
lcall
rcr
divl
leave
mov
in
sahf
xor
mov
enter
jecxz
test
dec
lret
sbb
lods
xor
insb
imulb
hlt
mov
hlt
lret
mov
leave
jecxz
dec
jne
xor
imul
aas
xchg
inc
insb
repz
mov
mov
cmpsb
xchg
add
xor
pop
repnz
or
jbe
add
sbb
filds
adc
sahf
sbb
fnstcw
daa
cmp
fnsave
aaa
xchg
fiaddl
sub
add
fidivs
ficoms
lock
push
lods
mov
mov
rcrb
mov
daa
cwtl
and
and
push
push
dec
test
jae
cmovns
sbb
jo
daa
lret
call
arpl
push
stos
lcall
mov
cmp
fidivs
out
nop
and
xor
rolb
rcll
or
mull
mov
rolb
test
sub
jmp
sub
jl
insb
pop
adc
test
mov
sub
out
mov
repz
sub
pop
pop
jns
and
jns
lock
andl
sahf
lret
adc
adc
outsb
sub
pop
xor
cwtl
mov
sti
adc
stos
add
scas
inc
push
shll
cwtl
xor
xchg
ss
jae
push
lcall
and
pop
xchg
push
into
out
in
int3
add
popf
xor
test
loop
inc
pop
cmp
inc
xor
add
out
sahf
mov
hlt
ljmp
stc
andb
adc
xchg
rclb
add
fsubl
gs
fisubrs
lods
mov
sbb
scas
inc
test
fiadds
call
test
mov
out
test
lret
fldt
mov
icebp
cmp
push
repnz
jae
inc
popa
aam
or
sub
cld
mov
lcall
dec
or
decl
dec
jg
xchg
sahf
ret
cmp
lock
xchg
or
fildl
movsl
je
icebp
dec
inc
lock
sub
lods
inc
mov
push
imul
shlb
mov
shr
sbb
push
mov
mov
insb
loopne
out
mov
and
xchg
fildl
jge
iret
xchg
cmp
mov
nop
les
or
in
push
dec
mov
jnp
pop
clc
mov
cmpsb
push
cmp
es
aam
mov
insb
mov
test
mov
arpl
dec
cmpl
dec
test
stos
jp
xchg
add
in
punpckldq
lds
out
push
ja
xor
shrl
mov
push
mov
mov
and
pusha
jg
sub
imul
into
jb
sub
mov
sbb
xor
sbb
imul
fldenv
cs
xchg
inc
mov
negl
adc
dec
in
loopne
sbb
lock
dec
and
ss
mov
fcmovu
pop
or
in
pop
push
add
or
out
cltd
xor
mov
lret
dec
mov
jbe
sub
cmpl
imul
pop
imul
jp
icebp
push
je
xchg
pop
mov
imul
cmp
xchg
and
sub
dec
insl
or
je
cld
out
mov
jle
ficoms
mov
cmc
movsl
int3
inc
jae
or
das
and
cmp
fisubs
or
inc
loope
fsubrs
or
addr16
jmp
and
pushf
sti
cwtl
fucomi
shl
pushf
bound
inc
pause
jae
xor
push
jg
das
lods
int3
jmp
inc
or
divl
and
notb
mov
push
les
xor
dec
jecxz
mov
inc
dec
mov
mov
inc
pop
enter
ficomps
cmp
mov
pop
add
xchg
mov
lds
push
stc
cmp
xchg
fdivs
gs
in
or
jnp
and
jb
loop
push
push
pushf
jae
daa
or
mov
into
xchg
cmp
mov
adc
sub
xchg
dec
cwtl
push
ss
inc
imul
fistps
ret
in
rclb
int3
ss
xor
push
loop
mov
cmc
out
inc
test
mov
push
jecxz
movsb
add
adc
int
arpl
push
sbb
mov
jle
sbb
jmp
in
sub
sbb
pop
addr16
xchg
inc
mov
pusha
ds
mov
inc
push
adc
push
movsb
lea
and
push
or
xchg
icebp
lret
lcall
rol
movb
adc
mov
sbb
pop
xor
shl
sub
mov
in
adc
cltd
aam
pop
jl
push
mov
cmp
enter
pushf
xlat
aaa
push
xchg
fnsave
xchg
mov
filds
dec
int3
shrl
out
ja
pop
aaa
sarl
pop
lret
insl
dec
mov
push
xchg
cmp
outsb
sti
fcmove
add
jge
jle
jbe
in
sarl
addb
stos
jno
jle
incb
mov
test
mov
out
in
push
fwait
sti
std
fmull
jnp
int3
push
mov
or
dec
int
xor
popaw
aam
jl
mov
outsb
data16
mov
mov
jle
repz
ds
das
stos
mov
enter
ds
xor
inc
cmp
and
std
xchg
pop
dec
dec
subl
pop
mov
sti
mov
jb
out
loop
adc
sbb
inc
iret
xor
sub
mov
jnp
gs
xchg
jg
mov
in
in
pushf
rolb
dec
int3
cmp
or
sub
stos
inc
adc
sbb
fs
cmpb
gs
dec
lods
in
mov
add
shll
imul
cmpxchg
dec
out
popa
jno
adc
or
jns
in
neg
lret
push
sub
sub
jg
pop
or
xchg
test
push
xor
sub
sqrtps
fidivs
jne
xchg
or
sti
adc
es
push
adc
add
mov
enter
popa
aas
jle
loop
xlat
inc
pop
push
push
fistpl
cmp
push
stos
loopne
xor
fiadds
je
in
dec
adc
jne
dec
mov
push
and
pop
push
pushl
aaa
or
sub
subl
mov
adc
and
andb
fists
subps
data16
out
mov
arpl
push
xchg
sub
fwait
pop
add
movntq
out
mov
stos
loopne
aas
ffree
push
lcall
int
or
incb
push
jns
cs
out
adc
lahf
addl
mov
mov
outsb
xor
mov
inc
mov
rolb
ret
mov
mov
or
or
fiaddl
imul
loop
cltd
add
dec
jg
mov
sbb
cs
push
jle
aas
adc
scas
or
fs
sub
adc
pop
jns
dec
push
mov
sbb
cld
addb
pop
sub
and
stos
int
sub
jno
add
aam
int
fnstsw
outsl
cmp
jg
mov
pusha
sbb
out
pop
in
add
push
mov
mov
mov
popa
je
mov
movsl
push
push
dec
xor
scas
ss
jno
mov
mov
xor
add
sarl
inc
or
test
and
adc
dec
insl
mov
fdivrp
ds
push
dec
xchg
dec
dec
repz
xchg
dec
stos
adc
mov
out
in
adc
or
test
mov
jns
inc
je
rcrb
test
ret
jg
movb
fistpll
mov
mov
mov
inc
call
xchg
sbb
lret
jo
mov
mov
test
outsb
dec
sbb
mov
add
lods
stc
clc
cmpsb
mov
dec
sub
pop
jne
inc
sub
mov
pop
xor
cmp
mov
in
stc
pop
mov
shl
adc
stc
lods
lods
add
mov
mov
push
push
jae
rcr
mov
adc
aaa
stos
xchg
xchg
xor
stos
or
jge
push
sub
arpl
or
ja
add
roll
pop
rcl
sub
mov
test
xorb
jb
lret
mov
fnstcw
movsb
pop
inc
xor
mov
jp
adc
inc
push
cmpsb
cmp
jmp
pusha
or
sbb
cli
pop
cmpsb
fidivrl
out
jl
aad
jbe
loop
mov
fcoms
add
popf
je
addl
addr16
xchg
iret
xchg
out
cmpsb
cs
leave
add
jnp
leave
fimuls
fisttpll
and
pop
and
repz
nop
aam
cmpl
sti
fcmovbe
and
jo
and
out
adc
xchg
call
orb
cmp
inc
outsl
pop
add
xor
mov
add
inc
cwtl
scas
mov
repz
adcb
cmc
insb
flds
xor
lods
addb
stc
xchg
aaa
dec
mov
aas
xlat
jnp
dec
gs
inc
pushf
add
mov
adc
leave
xchg
or
shlb
jbe
inc
inc
push
aad
and
or
or
pop
push
rclb
ja
pop
lret
pop
in
push
cld
insl
push
je
pusha
imul
gs
push
aad
loopne
ret
add
lret
push
and
dec
aad
and
rcll
xchg
es
add
pop
pop
movl
sbb
inc
imul
jg
dec
inc
inc
mov
push
xchg
fucom
mov
int3
test
sbb
xchg
loopne
dec
or
push
pop
rorl
cld
ds
adc
add
or
mov
nop
clc
or
lds
sbb
or
mov
cmpsb
in
mov
lret
loop
enter
in
frstor
add
cmp
mov
pop
inc
xchg
mov
pop
xchg
mov
negl
xchg
cmpsb
js
das
push
or
fcomi
lret
or
daa
pop
aas
mov
cs
cld
into
dec
push
sbb
pop
cmpsb
fwait
iret
and
xor
jge
mov
jg
test
mov
out
mov
sbb
sub
sar
repnz
sti
sub
jns
sbb
pop
mov
inc
pop
or
jge
test
cli
sbb
cs
cmpsb
shrb
push
lods
jp
js
dec
cwtl
cmp
lret
stos
fwait
rol
leave
mov
icebp
bound
push
lret
mov
dec
mov
and
inc
inc
mov
sbb
dec
inc
pop
mov
ficomps
pop
gs
sub
xchg
cs
mov
push
sbb
mov
call
xchg
adc
add
mov
xchg
dec
fisttps
out
xchg
jno
nop
xor
leave
int3
fucom
pop
mulb
mov
push
sti
adc
mov
xor
sahf
arpl
call
in
aad
xor
xchg
xchg
xlat
sub
push
lret
jecxz
cmc
jo
fdiv
aam
xchg
mov
addb
test
mov
aaa
lret
push
mov
pop
lea
sbb
lcall
sub
xchg
sub
es
rolb
jb
mov
stos
shll
aad
cmp
adc
cmpsl
cmpsl
movq
mov
jb
push
notl
cmp
dec
adc
add
sarl
or
js
add
sti
and
loopne
psubb
stc
lods
push
and
jge
jbe
lds
push
cmp
dec
cmp
movsl
sbb
pop
outsb
out
xchg
out
adc
sub
sub
xor
cmpsb
or
ficomps
lahf
push
or
paddsb
imul
jmp
dec
xchg
insb
xlat
inc
jg
outsb
iret
test
ret
sbb
ret
xchg
ret
call
xchg
inc
mov
arpl
inc
scas
out
mov
mov
hlt
inc
cmp
cmpl
in
xor
imul
sarl
pop
jns
fidivs
aad
aam
lds
aam
and
mov
sub
xchg
xor
into
aad
jge
mov
add
mov
pop
lock
and
lret
std
cli
scas
mov
xor
mov
clc
xchg
xor
orl
mov
imul
inc
negb
xchg
std
movsl
insl
movsb
out
orl
inc
icebp
roll
js
cmp
push
out
addr16
mov
sub
dec
dec
loopne
lcall
stos
mov
adc
dec
shll
push
jns
pusha
cmp
std
or
inc
xchg
pop
pop
xchg
mov
sbb
dec
push
pop
push
inc
lds
cmpb
xchg
cmp
aad
mov
faddp
nop
jg
pop
pop
cs
jmp
fs
sbb
push
cs
into
inc
mov
mov
xlat
mov
leave
push
fcomps
cmp
lds
jbe
and
insl
shl
ret
in
lea
leave
lret
prefetchw
xor
subb
nop
popf
mov
lock
push
cli
jp
mov
push
dec
insb
or
das
sti
add
or
aas
dec
or
lcall
lock
in
into
ret
push
jo
daa
sbb
jle
and
jbe
add
dec
and
cmp
aas
add
into
pop
lods
dec
push
aad
popa
jb
inc
or
sub
push
jge
popf
dec
add
ror
jmp
cld
arpl
lock
jbe
push
sbbl
ror
mov
call
subb
xchg
daa
je
call
mov
and
add
xchg
repz
hlt
push
call
add
fwait
js
push
or
jp
cmp
mov
add
fnstsw
pop
mov
xchg
ljmp
pop
sahf
int3
lds
sar
gs
push
bound
ds
mov
out
pop
jbe
gs
sub
jle
testb
jle
inc
ret
ret
jb
pop
fsubr
pusha
sbb
add
lods
or
lock
dec
out
icebp
loopne
sbb
xchg
sbb
fidivrs
and
sbb
push
popa
sahf
and
les
xor
lret
data16
fstpt
mov
add
fwait
mov
cmp
mov
sbb
jl
dec
lds
ljmp
hlt
jo
aaa
mov
jnp
add
loop
push
jno
dec
test
sub
xchg
push
stos
adcl
and
sub
iret
pop
adc
test
jg
mov
stc
pop
lods
mov
cmpsl
stc
push
insl
shll
sub
pop
leave
inc
sub
stos
jp
je
mov
ret
test
hlt
and
mov
clc
add
cmc
bound
rcrl
pop
sub
push
xchg
cmp
and
sbb
aad
and
arpl
push
dec
cs
jp
dec
int3
in
cmp
pop
test
bound
mov
add
mov
add
adc
in
loope
test
test
fidivs
mov
ss
ret
or
xchg
mov
sbb
imulb
cld
mov
or
imul
sti
scas
popa
popf
nop
pop
push
int
shlb
mov
jmp
mov
mov
adc
das
enter
lock
jb
xorl
xchg
fistps
sub
je
jmp
mov
dec
or
dec
cwtl
dec
aaa
stc
add
movsl
jns
stos
mov
stos
out
or
in
push
sarb
hlt
mov
xor
xchg
add
inc
add
mov
imul
mov
ja
faddl
lods
mov
imul
mov
imul
sub
out
shll
cmpsl
andl
and
mov
insl
xchg
dec
inc
inc
in
dec
adc
mov
pop
jno
fincstp
out
mov
and
adc
loop
pop
mov
push
adc
and
int3
pop
leave
sbbb
mov
cld
out
ja
aam
movntq
inc
mov
jne
hlt
mov
arpl
or
dec
rcr
ds
or
push
ret
push
std
in
loopne
xchg
dec
icebp
ja
and
les
fwait
into
adc
mov
stos
mov
cmp
push
cmp
dec
ficoms
insl
outsb
push
and
loope
fstpt
test
sbbb
andl
pop
iret
mov
lret
addr16
pop
lahf
gs
pop
cs
mov
orb
je
and
xchg
adc
popa
lea
jge
dec
mov
mov
xchg
addb
cmc
mov
fsubl
sub
cmp
and
loop
xor
notl
xlat
jbe
in
mov
mov
stos
pop
pop
cmpsl
sahf
inc
dec
mov
xorb
sbb
dec
stos
cs
std
dec
mov
addr16
mov
add
das
andb
cli
pop
xchg
gs
fdivp
add
mov
ds
add
call
out
movsb
xchg
or
adc
push
int3
shr
adc
adc
jne
and
xchg
aas
xlat
jge
pop
mov
sahf
push
and
cld
out
jmp
pop
test
cmp
inc
daa
test
pop
iret
adc
inc
imul
rcll
sti
jae
imul
add
mov
and
or
lock
or
int3
add
push
inc
jp
std
es
nop
fucomip
shlb
rorb
mov
push
xor
push
push
es
cmp
mov
es
cltd
xor
xor
pop
adc
jmp
push
push
add
mov
sbb
jge
imul
or
inc
mov
leave
into
cmp
pop
pop
mov
fmuls
dec
jbe
mov
sub
push
sbb
dec
shll
jmp
loopne
and
clc
or
ss
mov
mov
popa
and
and
sbb
call
loopne
cmp
or
in
pop
fidivs
pushf
sub
sub
rol
out
mov
aad
dec
stos
adc
jl
dec
leave
push
iret
push
bound
into
jp
imul
push
fiaddl
inc
jle
das
jo
cld
jb
test
mov
inc
push
pop
mov
and
jmp
jmp
and
hlt
push
push
jmp
arpl
push
fsubs
add
out
and
xor
add
aad
and
cmp
insb
fbld
lret
jecxz
dec
push
rclb
xor
mov
pop
in
sbbl
mov
sbb
add
push
into
mov
pop
pop
enterw
cltd
sarl
lret
jmp
xchg
inc
in
mov
push
cld
mov
jne
sahf
fwait
fwait
pop
sti
sarb
addr16
pop
pusha
arpl
adc
inc
icebp
cmp
orb
sbbl
loop
inc
test
jae
outsl
cmp
sar
and
ljmp
add
mov
daa
in
adc
enter
sub
dec
mov
pop
bnd
ret
mov
xor
repnz
dec
lahf
pop
mov
cld
insl
and
cmp
sub
push
sti
xlat
and
ja
stos
js
cltd
jno
cmp
cmp
xor
rcll
pushf
cmp
ljmp
cmp
push
sti
das
or
mov
and
pop
into
lcall
add
lcall
push
mov
pop
fldt
daa
data16
jl
les
sti
sahf
out
insb
sub
les
add
stos
push
lahf
xchg
push
jecxz
pop
shlb
push
ljmp
or
inc
pop
push
or
jl
test
cmpsl
push
sahf
sbb
cmpsl
sbb
fucom
lcall
out
mov
loopne
scas
xchg
jne
lods
rcl
mov
mov
loopne
and
insl
sbb
mov
mov
mov
cmp
aaa
out
dec
cli
enter
jecxz
int3
scas
fists
lods
loop
sub
or
cwtl
push
mov
das
mov
and
leave
xchg
fsubs
in
mov
cmpsb
adcb
cli
dec
lods
unpckhps
int
mov
inc
int3
fldenv
xor
mov
xor
loopne
insb
push
add
outsl
mov
pop
fisubrs
leave
push
shrl
ficoms
pushf
leave
mov
cmpsb
cmp
addr16
push
sahf
in
inc
ret
xchg
in
mov
ss
jnp
xchg
dec
inc
repnz
das
or
adc
mov
mov
mov
fldl
push
popf
dec
in
call
jne
and
cmp
cmp
aas
cmp
mov
lods
jne
aam
fmulp
mov
mov
mov
jl
int3
loopne
sbb
ljmp
aas
jb
lods
sub
jmp
int
mov
mov
push
lods
jno
cs
jbe
mov
add
aaa
xchg
rolb
xchg
sub
ja
inc
lds
cmp
fldenv
pusha
adc
xchg
in
ja
mov
fcoms
add
or
and
arpl
xchg
xor
mov
int3
or
mov
adc
add
add
adc
and
sbb
outsl
cs
mov
mov
jnp
and
pop
cmp
jle
nop
push
int3
jo
stos
and
iret
lods
cmp
sub
xor
notl
movsb
aam
jp
push
cmp
insb
jecxz
or
sbbl
mov
sbb
adc
scas
jbe
repz
lcall
cwtl
cs
xchg
adc
fwait
popf
fwait
jmp
cs
add
loop
mov
aas
jmp
movsl
adc
test
pop
ret
push
mov
dec
sbb
sub
and
ficompl
cmp
cmp
dec
pop
and
fsts
pop
ret
mov
xor
xchg
push
add
cwtl
int
pop
push
das
sbb
addr16
lods
in
ljmp
add
rcrl
jmp
lds
bound
pop
add
out
push
inc
mov
stc
and
mov
pop
lret
popf
js
mov
arpl
xchg
fcmove
xorl
scas
insl
jle
xchg
lcall
sbbb
cmp
and
jle
sahf
xor
fsubrl
scas
push
or
pop
loope
inc
add
xor
popf
adc
push
pop
jae
lods
ret
movsb
icebp
push
mov
jecxz
out
das
pop
test
enter
std
fs
mov
dec
and
jmp
mov
cld
ret
ror
push
pushf
repz
mov
lock
fimuls
xor
add
pop
jb
or
or
test
pop
orb
sarl
jmp
mov
mov
jp
add
pop
imul
in
sbb
mov
xor
imulb
stos
cld
ljmp
lahf
out
jecxz
inc
sub
repnz
pop
sti
fcmove
ss
push
cmp
xor
dec
push
mov
es
dec
subl
rolb
test
popf
sbb
test
out
es
aaa
dec
cmpsb
cmpsl
test
lods
es
stos
inc
mov
adc
push
mov
adc
cmpsl
or
xorl
repnz
mov
addr16
repnz
lret
loope
stos
mov
jb
in
cld
daa
loopne
xor
into
mov
sub
cli
cmpsl
les
psllq
fistl
mov
repnz
and
sbb
xchg
add
sbb
mov
aad
jne
push
push
and
mov
jno
adc
pop
dec
lods
iret
dec
mov
das
sarl
dec
sub
push
jp
outsl
cmpsl
sub
mov
pop
dec
xchg
mov
dec
mov
aam
jbe
add
je
adc
loope
call
xchg
icebp
or
sbb
inc
dec
or
stc
and
jmp
push
movsl
lret
mov
xchg
xchg
dec
push
cmp
ret
add
aaa
add
push
enter
pop
xchg
mov
add
and
pusha
jmp
mov
mov
adc
js
dec
sbb
dec
scas
arpl
or
stos
adc
insl
mov
xchg
mov
adc
and
das
jle
mov
sub
push
inc
and
out
pop
rcl
dec
push
xchg
out
data16
xor
or
fistpl
mov
pop
test
and
and
jo,pt
push
cli
pop
cmc
mov
or
testl
sbb
insl
xor
sahf
jge
movsb
fists
mov
fnsave
xchg
lea
cltd
mov
mov
and
out
cmpsb
loope
leave
test
dec
into
std
jmp
inc
lret
or
mov
cmp
xor
jno
mov
adc
add
jecxz
pop
sbb
inc
jecxz
xchg
inc
imul
into
xchg
mov
shll
add
mov
jmp
movsl
xchg
xchg
movsl
jecxz
inc
addr16
adc
in
adc
cmpsl
test
int
lods
mov
stos
push
icebp
cmc
std
cmpsb
inc
aad
dec
xor
cmp
leave
pop
pop
mov
add
jp
aad
js
aas
dec
mov
je
add
xchg
xor
xlat
jbe
int
movl
out
pop
mov
mov
inc
cmp
push
insl
dec
je
rorb
jmp
dec
push
push
adc
push
sub
dec
mov
mov
jmp
mov
sbb
fiadds
icebp
addr16
in
jns
cli
loopne
xlat
pop
aam
sbb
into
xor
cmp
ret
fwait
loope
add
lea
pop
repz
mov
mov
mov
xchg
cmp
inc
pop
cmp
mov
rcrb
pop
xchg
jnp
mov
add
btc
loope
sub
pop
push
mov
inc
or
mov
and
push
loopne
adc
jecxz
in
push
jno
pusha
icebp
pop
xchg
push
ret
fdivrl
out
fists
cmp
test
call
stc
lcall
aad
mov
push
add
mov
sbb
xor
lahf
js
inc
xchg
xorb
cmp
dec
mov
jl
movd
std
scas
sbb
loopne
pop
leave
js
inc
or
mov
aaa
add
pop
and
lock
cmp
sbb
sbb
and
adc
out
cld
cmc
adc
gs
aam
jmp
out
mov
sub
ljmp
cld
testb
xchg
push
push
jno
insb
imulb
add
sbb
movsb
arpl
add
jno
daa
sbb
mov
xchg
loop
stos
imul
loopne
test
mov
in
xchg
mov
adc
out
ja
lret
push
daa
inc
jnp
ret
xor
pop
jmp
mov
push
and
lret
outsl
pop
mov
es
cmp
mov
insl
aas
orl
xor
outsl
or
mov
std
sbb
pop
and
mov
jne
mov
mov
and
push
aad
cmp
push
divl
repnz
sub
and
ja
sbb
test
cmp
cwtl
lret
nop
dec
and
repz
cld
decb
inc
dec
xorl
lret
dec
or
into
dec
mov
cmpsb
inc
cs
sub
enter
mov
mov
lret
sub
and
fucom
jge
push
pusha
or
ds
popf
push
mov
dec
pushf
cmp
mov
xor
jle
lods
lock
cmpsb
sbb
mov
pop
lds
mov
into
cltd
or
in
inc
pop
adc
sbb
xchg
xor
mov
dec
add
flds
pop
push
aam
cmp
mov
scas
call
outsb
mov
sub
shl
stos
test
dec
mov
jmp
dec
cltd
dec
dec
fnstenv
rcr
imul
jo
test
shll
push
push
push
mov
popf
xor
mov
scas
jns
mov
dec
pop
and
xor
shrb
push
sub
push
inc
sarb
dec
hlt
mov
dec
add
mull
hlt
or
push
mov
inc
push
sbb
ljmp
mov
inc
aam
sahf
sbb
cmp
fdivrl
idivl
fnstenv
adc
xchg
test
cs
xorl
test
scas
xchg
lods
sbb
movsl
dec
arpl
mov
sub
test
rcl
sbbb
lret
repz
inc
in
xor
movsl
scas
jle
rolb
js
fld
cmp
rcl
and
cli
sbbl
fs
fmuls
movsl
ljmp
sub
jp
ret
sbb
jle
mov
add
inc
xchg
jg
fwait
cmpsl
sbb
cwtl
push
hlt
stc
punpckhbw
dec
stos
push
int
popa
or
pop
repz
popf
adc
mov
or
ja
add
mov
mov
ret
push
ret
mov
fimull
insl
cmp
xchg
icebp
mov
loop
out
inc
les
add
pop
jbe
mov
jo
fnstcw
xor
mov
loopne
or
out
jle
add
jne
push
xor
in
or
lcall
pop
jno
mov
sbb
in
inc
insb
mov
mov
push
adc
lea
es
pop
xor
shll
loop
sub
call
sbb
mov
je
xor
dec
pop
pop
fisubrl
jmp
mov
lods
loope
mov
cmpsb
mov
pop
jno
xchg
cmp
sahf
divl
sbb
sub
jae
xchg
cmp
mov
ret
into
dec
lcall
mov
out
push
hlt
loope
repz
in
or
jns
lahf
push
test
sbb
scas
or
lock
lds
mov
jmp
mov
pop
xchg
es
mov
push
bound
clc
sub
outsb
hlt
and
fsubs
xor
mov
add
inc
pop
iret
push
outsb
push
push
sub
fwait
mov
stos
push
cltd
arpl
lahf
jl
adc
and
fsubl
in
push
inc
xor
pop
mov
testl
test
jmp
out
adc
push
sub
icebp
mov
adc
inc
xor
mov
xchg
mov
ljmp
cld
pop
out
into
imul
and
jne
test
iret
in
lock
mov
or
mov
in
or
shll
ret
jl
lcall
mov
adc
add
cmp
xchg
mov
mov
jmp
mov
movsl
shrl
inc
adc
push
popf
cli
xchg
mov
xchg
dec
int3
pop
dec
mov
cmp
lea
cmpsb
aam
jmp
xchg
pop
cld
pop
sbb
std
mov
mov
push
xchg
test
aam
and
jl
inc
lret
cmp
or
mov
aas
pop
pop
and
adcb
hlt
add
mov
jle
imul
inc
cmp
mov
shll
subl
movsl
aas
push
fucomp
jge
je
mov
xchg
ret
xchg
out
add
sti
jo
mov
ja
arpl
sbb
bound
loope
inc
sub
cmpsb
lods
and
test
repz
gs
in
outsl
addr16
stc
cmp
rclb
jno
hlt
test
sbb
insl
push
add
inc
cmpsb
addr16
push
stos
dec
lds
add
mov
adc
fdivrs
or
lods
sahf
leave
loop
push
mov
and
adc
pushf
js
sbb
mov
loopnew
mov
hlt
pop
inc
mov
sbb
jle
sbb
pop
pop
mov
repz
push
stc
jae
imul
inc
ror
mov
sub
incb
mov
outsb
and
mov
inc
pop
jno
fldenv
jns
xor
cmc
cmpsb
push
push
rep
push
lods
bound
jb
inc
ljmp
mov
lods
int3
popa
movsb
dec
sbb
lret
mov
sub
mov
in
and
pushf
dec
mov
jbe
stos
mov
ja
or
cmpsl
push
sbb
adc
adc
pusha
iret
in
jmp
add
pusha
cmp
jno
imul
mov
cmp
popa
cmc
mov
leave
cld
cmc
ljmp
aas
out
push
jmp
mov
js
pop
stos
scas
dec
outsl
dec
or
jns
popf
xchg
xlat
pop
cmp
push
lret
jne
lret
lret
xorl
jg
ret
mov
push
sti
mov
sub
fisubrl
adc
and
sbb
cltd
repnz
mov
xchg
push
dec
bound
mov
and
adc
outsb
lea
inc
scas
test
in
call
roll
in
or
dec
int
push
out
inc
ret
out
ds
imul
scas
inc
sub
pop
aam
jns
fidivs
pop
fwait
pop
ja
sbb
in
pushf
xchg
sbb
into
gs
cmp
ret
push
aad
mov
stc
test
scas
inc
pop
dec
ljmp
cmpsl
in
jae
fistl
mov
sbb
xchg
fstps
insl
std
out
push
push
dec
xor
push
inc
cmp
ret
mov
and
pop
xor
mov
imul
insl
or
subl
decb
dec
cli
arpl
pushf
aas
dec
xchg
nop
enter
push
cmp
pop
outsl
outsb
mov
rorl
shl
add
jb
fistl
ja
cmp
shrl
mov
ret
les
or
jmp
stos
test
mov
loopne
rcrb
cmp
fnstsw
pop
inc
pop
lds
sub
popa
sbb
movsl
loope
xchg
add
or
out
pushf
dec
xchg
loopne
out
or
dec
push
cmc
jl
xchg
adc
icebp
aad
stos
fsubrs
adc
pop
test
cmpxchg
fwait
jb
sbb
icebp
mov
das
push
xchg
inc
and
pop
or
fadds
cs
xor
mov
lods
shr
pop
xor
out
data16
testb
bound
mov
leave
popf
xchg
arpl
jle
hlt
jno
push
cmpb
xor
mov
ss
cmp
pop
sub
std
add
push
arpl
mov
mov
ror
xor
arpl
into
cmp
dec
mov
mov
fstpl
stos
repz
inc
ficoms
imull
add
mov
inc
pop
push
sbb
xor
leave
out
sbbb
cmp
fistl
jecxz
jle
stos
rorl
or
xor
inc
jb
fildll
arpl
adc
lods
xlat
mov
dec
pop
les
negb
push
and
insb
movsl
pushf
pop
ja
outsl
adc
into
inc
leave
lods
xor
lcall
inc
jns
push
imul
clc
out
push
cmp
js
icebp
in
jle
inc
adc
adcl
daa
pusha
addl
repnz
sub
imul
dec
adc
movsb
jo
jae
jecxz
and
stos
stc
jae
or
dec
mov
pop
cmp
daa
mov
jnp
xor
test
adc
stos
mov
add
cmp
aad
lds
dec
xchg
js
and
arpl
enter
int
movsb
jne
sub
das
out
pop
cmp
dec
mov
lcall
jno
lods
jl
lods
loope
mov
stc
xchg
movsb
cmp
insl
push
pusha
testl
push
xchg
hlt
xor
xlat
loopne
or
stc
mov
adc
mov
call
mov
cld
mov
nop
loop
cmp
fcmovnb
adc
stc
xchg
popa
movsl
jnp
push
std
and
mov
inc
into
jne
inc
mov
leave
pop
push
adc
add
in
es
push
xor
push
mov
push
mov
sub
shll
scas
push
data16
popf
xchg
mov
mov
pop
popf
jle
lods
sarl
push
xor
imul
cmp
cltd
dec
sub
cmp
push
subl
ljmp
test
cltd
push
inc
pop
xchg
in
xchg
cmp
cwtl
call
mov
push
xchg
adc
xchg
pop
inc
xchg
rolb
adc
or
sub
pusha
icebp
mov
lahf
sub
xchg
shr
mov
and
repz
clc
sbb
or
pusha
std
or
mov
pop
push
test
add
inc
les
popf
add
lahf
sbbb
dec
sbb
push
jb
mov
fnstenv
adc
lahf
out
int3
or
ror
push
cwtl
pop
sbb
dec
iret
push
cs
xchg
inc
into
cmpsl
shll
add
int3
in
pop
aad
xchg
sbb
enter
sub
dec
insl
cmp
sti
xchg
xchg
mov
adcl
pop
lea
shrl
movsb
icebp
push
data16
je
or
loopne
sbb
negl
mov
adc
pop
stos
ds
cmp
and
push
sbb
jge
pop
mov
repnz
lods
add
icebp
scas
int3
lcall
sbb
dec
cmp
jbe
shlb
xchg
pop
jb
out
xor
adc
or
out
push
xchg
cmp
shlb
jbe
and
lock
push
add
in
sub
add
fiadds
orb
mov
jb
repz
cmp
jae
aaa
dec
jle
adc
les
mov
inc
movsl
push
lret
test
out
ror
inc
bnd
int3
into
cmp
cmp
outsb
in
push
ficomps
stc
lahf
cmc
mov
jle
inc
mov
loop
pop
mov
inc
jecxz
incb
inc
and
fdivrl
in
aas
outsl
inc
dec
mov
push
pop
xchg
out
pop
test
aaa
sbb
push
push
jno
mov
mov
push
xchg
xor
mov
outsb
hlt
cmp
inc
push
gs
or
mov
dec
sbb
cmp
fcoms
aaa
pop
dec
js
cmp
ljmp
xor
sbb
push
fsubs
lods
fsubr
pop
mov
sar
not
imul
pop
insl
mov
sti
jns
insb
mov
into
addr16
add
jl
xor
lret
test
pop
sahf
ss
mov
fcompp
pop
push
out
lret
xchg
fmull
cmpsb
pop
xor
in
call
subb
push
dec
fldl
imul
bound
pop
cmpsl
adc
mov
xlat
mov
lds
inc
ss
leave
add
lds
daa
jmp
cltd
jecxz
adc
sub
or
cwtl
and
pop
xchg
push
sub
mov
in
mov
cld
push
mov
pop
test
dec
mov
fs
dec
jl
push
pop
pop
std
mov
mov
push
mov
in
mov
shlb
dec
or
repnz
pop
loope
sbb
push
rolb
jne
leave
std
ljmp
sahf
pushf
xor
cld
test
xchg
inc
add
mov
je
adc
pop
dec
les
inc
push
jmp
mov
add
pop
insl
sti
ret
pop
fcoml
cwtl
cmp
add
jb
stos
xor
push
adc
or
jecxz
bound
in
sbb
xor
out
emms
aam
cmp
pop
imull
scas
mov
std
subl
std
push
out
movsb
pusha
lret
lods
sbb
jle
sub
jo
cmp
mov
lea
xor
mov
xor
cs
xor
in
add
sbb
cmp
pop
inc
mov
inc
xchg
lea
cmpsl
lock
mov
insl
inc
mov
pop
flds
cmp
ds
sbb
loope
inc
popa
scas
pusha
scas
loope
mov
pmulhw
pushf
ficoml
int3
pop
xor
or
sarl
enter
insb
push
ja
movsl
mov
lahf
rolb
enter
insl
inc
out
pop
and
pop
aam
push
or
cmpsl
adc
and
fs
cmp
adc
stos
popa
fdiv
jecxz
cmp
sub
push
test
popf
dec
sti
dec
mov
push
int
xor
stos
dec
or
cmc
xor
lods
pusha
mov
aaa
rorb
xchg
push
xor
xchg
negb
sbb
dec
cld
xchg
cli
mov
mov
in
les
push
sub
mov
cmp
mov
sbb
cmp
mov
mov
mov
xchg
das
test
movsb
das
xlat
int3
std
enter
xchg
push
sbb
push
shll
les
lock
lods
ds
insb
fwait
sub
jb
push
cmpsb
nop
call
mov
adc
out
inc
repnz
cli
ret
outsl
add
fisubrs
push
mov
xchg
dec
pop
pop
jg
negl
xchg
xor
mov
les
in
insb
out
cld
mov
aad
ja
data16
mov
in
test
and
jle
or
and
sbb
push
mov
dec
cs
pusha
inc
mov
pusha
or
call
dec
pop
fisubs
ror
dec
lcall
lea
lock
divl
xchg
mov
cmc
aad
sti
pop
sub
push
add
xchg
cmp
push
push
fidivrs
cmp
rclb
jg
mov
fs
cmp
jns
add
enter
fiaddl
pop
and
mov
jmp
inc
test
xchg
pop
or
jl
cmp
or
imul
clc
push
xor
in
movsl
mov
ljmp
dec
and
pushf
pusha
adc
mov
mov
jmp
inc
mov
mull
adcl
int
dec
adc
cmp
jnp
mov
inc
mov
or
cmc
mov
jne
cltd
xchg
rorl
movsb
fiaddl
roll
mov
rorl
daa
ror
mov
int3
sbb
mov
ds
xchg
jnp
negb
fldenv
sbb
pop
pop
and
mov
and
jne
dec
jnp
repz
xor
jne
enter
mov
push
enter
scas
aam
push
cmp
cs
inc
xor
jl
sub
xchg
leave
jge
stc
es
repz
push
dec
popa
es
add
inc
movsl
inc
cmpsb
sbb
int
mov
inc
into
scas
sub
adc
lea
movsl
std
fldenv
inc
push
rcrl
into
in
insb
cmp
lods
push
cmp
arpl
jmp
mov
sbb
sbb
xchg
pop
aam
inc
fsts
clc
inc
push
mov
push
lods
pop
sysenter
rcrb
or
jae
cwtl
or
mov
mov
daa
ret
arpl
insb
cmp
jg
sub
jo
and
sti
dec
fisubrl
sub
xor
mov
or
xchg
test
dec
mov
sub
cwtl
movsl
adc
or
push
cmc
mov
mov
cltd
imul
addr16
decl
mov
test
cmpl
repz
mov
cs
mov
or
dec
sti
aad
dec
sub
hlt
subl
int3
cmp
xor
or
cmpsl
cli
sub
lahf
adc
jmp
adc
pop
jo
mov
jge
inc
xor
dec
jmp
sbb
nop
mov
cmpb
adc
pop
adc
xor
sub
shlb
lahf
addr16
adc
pop
jbe
mul
jbe
fxch
in
sbb
test
xchg
rcl
xchg
outsb
lahf
jns
sbb
shlb
lcall
iret
mov
mov
aad
hlt
mov
adc
inc
out
fcmovu
cmp
out
dec
stos
in
cs
cmp
fscale
pop
sbb
shr
in
mov
push
mov
iret
cwtl
stos
dec
add
mov
xchg
mov
aam
fwait
loopne
or
mov
scas
and
mov
inc
enter
imulb
stos
dec
mov
lods
sub
subb
aaa
cmpsb
stos
orl
fidivrs
mov
cmp
add
push
or
ret
dec
and
negb
test
int3
pop
or
jnp
jns
jecxz
arpl
sub
scas
mov
mov
sti
jne
mov
mov
xor
jg
inc
lds
pop
or
cmp
arpl
sub
stc
xchg
cwtl
mov
inc
push
jg
cs
scas
cmpsl
push
push
sub
test
push
or
mov
mov
js
xchg
cld
mov
mov
js
lods
add
stos
insl
ret
push
xchg
loop
mov
xchg
in
add
movsb
dec
add
and
jne
push
xchg
sbb
jmp
lds
repnz
cmp
add
xchg
jg
and
fmull
add
and
popf
jns
dec
adc
inc
adc
sbb
add
adc
jl
popf
inc
std
out
sbb
cmpsb
adc
push
js
mov
mov
or
sbb
sub
sbb
pop
daa
sbb
lock
into
and
jle
sbb
fcmovnb
cmc
lods
adc
push
outsb
mov
addr16
sbb
add
in
gs
sbbl
enter
imul
push
in
cli
movsl
ret
sub
mov
cmp
outsb
and
xor
pop
into
or
ficoms
add
cmp
test
push
inc
fwait
xchg
movsb
dec
cmp
in
mov
out
pop
icebp
or
cmpsb
lcall
mov
jecxz
cmpsb
jg
outsl
sbb
add
cmp
mov
mov
test
dec
dec
fwait
jl
lret
dec
mov
cli
es
pop
add
cs
and
arpl
push
mov
in
cmc
scas
adc
inc
or
ret
mov
imul
push
mov
push
hlt
and
sbb
repz
inc
lret
cmp
jge
imul
and
and
pushf
mov
xrelease
roll
xchg
jl
cmp
imull
mov
js
mov
inc
sbb
mov
aam
in
xor
fcmovnbe
movb
popf
ljmp
cld
test
xlat
cltd
insl
ljmp
aas
pop
push
ja
mov
nop
sbb
adc
and
pop
inc
imul
inc
xchg
pushf
popf
popf
sbb
fisubs
ret
sbb
or
mov
addl
loop
fisubs
dec
nop
insl
cltd
cmc
cwtl
insb
add
push
jae
xchg
fsin
inc
insl
popa
out
in
cld
test
push
pop
aaa
xchg
cmp
pop
leave
cmpl
cli
data16
out
mov
filds
mov
into
scas
adc
imul
lods
js
mov
bound
incb
push
inc
outsb
xchg
add
lods
xchg
or
clc
sub
mov
pop
sbb
mov
xchg
js
sub
ss
push
mov
sub
sub
addr16
xor
inc
out
mov
jl
and
sub
push
jg
dec
sti
mov
movsl
shlb
xorb
adc
push
or
xor
jno
inc
bound
or
int3
mov
cmpl
pop
loopne
mov
push
jp
pop
xor
xchg
add
jo
cltd
jns
stc
in
jg
push
sub
jbe
jge
rorl
loop
inc
mov
lods
adc
add
xchg
dec
cwtl
pop
leave
and
dec
add
data16
shll
ja
ds
inc
shlb
push
ret
push
dec
ficoms
mov
jae
cli
mov
data16
fstps
inc
xor
lcall
push
add
mov
cmc
scas
es
inc
and
cltd
iret
gs
repz
test
push
ret
pop
push
push
mov
stos
aam
jl
mov
ret
mov
xor
test
xchg
xchg
mov
scas
mov
mov
test
enter
fisubl
ljmp
pop
jbe
lret
cli
lea
pop
shrl
test
nop
push
push
ljmp
fnstenv
dec
shll
pop
adc
cmp
je
cs
hlt
std
jno
mov
and
push
fdiv
jo
std
pop
mov
xor
xchg
pop
sbb
cmp
push
dec
sub
out
into
push
mov
ljmp
add
push
xor
lahf
sarl
loop
ljmp
rolb
mov
lock
pusha
sub
cmp
push
push
sub
and
lret
pop
test
xchg
ss
jne
cmp
mov
ljmp
and
sbb
lahf
sbb
jmp
dec
cmp
mov
out
push
cmp
pop
dec
out
test
rorb
cmpsb
dec
xor
mov
cmpb
adc
out
lret
dec
negb
stc
dec
xchg
or
lahf
fwait
aas
mov
cmp
mov
mov
add
mov
sub
xor
push
cmp
add
int3
mov
pop
movsl
aad
loop
cwtl
outsl
jl
dec
movsl
ja
mov
sar
sbb
test
stos
out
sbb
sbb
mov
and
sub
xor
mov
out
daa
pop
mov
sbb
mov
lret
clc
in
xor
jg
aas
adc
decb
loopne
push
xchg
dec
mov
fcompl
sbb
and
stc
mov
xchg
or
cmp
shlb
mov
and
sub
lcall
lods
push
int3
imul
in
icebp
or
cmc
hlt
xchg
xchg
sahf
xchg
repz
jg
movsl
leavew
pop
loope
addb
cmpsb
or
nop
or
fldcw
frstor
lds
dec
add
jl
rcl
add
pop
xor
mov
xor
dec
push
inc
js
sbb
jne
jp
cmp
and
std
pop
xor
or
psubw
push
addb
jge
fidivl
dec
scas
orb
and
testl
movsl
and
std
fwait
inc
lds
daa
sbb
addb
call
outsl
push
popa
ss
out
sbb
popa
data16
and
sbb
sub
adc
jmp
mov
jecxz
loop
call
inc
jno
mov
mov
addr16
xchg
les
mov
mov
cli
inc
cmp
push
dec
mov
stos
in
jae
mov
jnp
jo
mov
mov
cmc
or
in
jno
dec
aad
rol
sub
lcall
push
out
or
idiv
sub
hlt
addr16
sbb
fmull
pop
mov
adc
outsl
out
es
cmpsl
push
mov
and
mov
inc
inc
xlat
movsb
arpl
enter
lods
dec
and
mov
test
js
jbe
clc
movhps
lcall
jle
and
loope
fs
sarb
loope
ret
pop
fdivrs
push
or
shr
mov
inc
xchg
xor
daa
sub
movsb
or
imul
ret
sbb
mov
popf
dec
xchg
and
jg
mov
push
les
dec
mov
or
sbb
rolb
and
jmp
jno
and
mov
mov
daa
fsubrs
pushl
leave
dec
mov
push
out
push
mov
inc
pop
test
into
inc
pusha
jne
and
lea
outsb
popl
add
xchg
enter
or
imul
outsl
lods
aaa
add
add
jno
les
das
and
mov
std
cmp
jl
mov
in
into
push
or
jp
pop
cmp
jg
rcl
or
cmc
lahf
mov
fwait
push
mov
dec
dec
jae
push
fistps
mov
adc
sahf
pop
les
sbb
ss
rclb
and
ja
ds
punpckldq
repnz
inc
xchg
or
and
mov
xlat
out
stos
les
xor
ret
icebp
xor
stc
popf
push
dec
or
and
lock
xchg
mov
sahf
loop
add
adc
mov
push
mov
fldcw
stos
xor
or
call
das
leave
fwait
inc
imul
jnp
dec
clc
jle
mov
setb
stos
aas
xor
andb
cmp
xor
lods
imul
ds
out
cmpsl
sub
jnp
cmpl
xor
fs
int3
int
pop
or
lret
jae
push
inc
sbb
notb
rolb
or
add
push
into
aas
aaa
stos
daa
jge
xor
movsb
fcomip
pop
or
inc
mov
int3
aam
outsb
push
fs
call
lret
rorb
int3
jl
xorb
in
mov
sbb
mov
inc
mov
mov
fnstsw
inc
call
sub
gs
or
imulb
cmp
stc
xchg
in
and
js
add
lods
and
test
and
test
fidivrs
xor
popa
mov
mov
cmpsl
pop
in
inc
inc
mov
adc
add
fs
stc
fisubrs
mov
mov
mov
in
push
ret
adc
rolb
lret
cmp
mov
stos
push
lods
and
add
xor
jle
aas
arpl
pop
cmc
push
push
pop
sub
sarb
lods
dec
mov
dec
push
loop
mov
mov
test
xchg
add
mov
cmp
dec
ja
push
cmp
add
push
sbb
xchg
cmp
repz
ljmp
das
push
scas
andb
mov
add
mov
mov
gs
jl
aaa
push
test
push
sub
cs
jg
sbb
mov
clc
sub
cld
lret
fldl
pop
fwait
mov
mov
push
dec
xlat
inc
fcoms
jl
sub
xchg
rolb
cs
in
scas
in
push
cmp
in
jmp
rcrb
mov
cmp
lods
lret
lock
add
filds
into
add
mov
pop
sbb
dec
lcall
xor
cli
adc
mov
pusha
dec
cmp
and
sbbb
xlat
scas
jbe
xchg
int3
xor
popf
out
cmc
addr16
push
inc
and
or
xchg
into
aas
mov
insb
arpl
push
push
mov
sbb
adc
lods
je
xchg
jg
fldl
jg
xor
bswap
mov
aad
mov
pop
ja
push
sbb
dec
cltd
mov
clc
dec
mov
and
push
hlt
add
sarb
repnz
mov
in
iret
cltd
ds
dec
cmc
cli
adc
fmuls
ret
and
and
cltd
fnstsw
dec
mov
add
loop
mov
push
add
mov
adc
sti
int3
mov
mov
daa
and
loop
aaa
cmp
mov
sub
xchg
clc
ja
xchg
movsl
dec
pop
jns
sub
mov
popf
or
mov
sbb
adc
rcll
subb
jl
jns
std
stc
or
popl
aaa
out
xor
mov
jns
les
jecxz
aad
cmp
mul
or
cmp
mov
sti
mov
aad
imul
rcll
popl
dec
or
push
jne
jae
jp
cli
mov
scas
inc
or
test
addl
imul
cmp
xor
adc
call
mov
outsb
jno
or
loop
lea
aad
jns
adc
ds
push
bound
stc
or
mov
mov
or
push
mov
pop
mov
xchg
pop
sub
mov
jbe
push
xchg
imul
mov
sbb
rclb
jb
xchg
movsl
or
int3
movsl
inc
or
fwait
pop
jg
sub
cmpsl
pop
cmc
repnz
ss
stos
fs
ss
mov
cmp
or
mov
jmp
loope
or
pushl
ds
mov
or
gs
jns
add
jecxz
inc
movsb
add
and
or
sbb
std
cmc
les
push
into
in
int
jg
sbbb
call
fucom
pop
scas
cmc
jnp
add
jbe
out
jle
int3
sbb
iret
mov
fists
adc
icebp
inc
dec
sub
mov
rcrb
adc
aas
xor
fildl
cmp
push
js
mov
jmp
sbb
mov
jmp
mov
ss
arpl
or
pop
icebp
mov
pusha
jp
sbb
sbb
arpl
inc
push
and
cltd
inc
rorb
cmp
sar
sahf
insb
jae
test
out
mov
jae
push
rorb
jmp
int
sbb
outsl
rclb
cmp
mov
loopne
jnp
add
mov
lods
jae
inc
pop
sbb
pop
ja
test
sbb
or
or
push
pushf
push
das
ljmp
push
xor
loope
push
push
mov
mov
fwait
outsb
lret
mov
add
cmp
and
icebp
xchg
adcb
outsl
push
dec
sub
out
fsubl
shll
cmp
scas
pop
pop
cmp
addr16
add
sbb
push
dec
push
pop
or
pop
or
xchg
add
sub
das
iret
pushf
popa
test
jo
jp
shrl
std
push
out
xchg
fnstcw
xor
movmskps
cmc
xchg
fs
or
or
jae
popl
and
lahf
push
xor
add
stos
add
cmp
and
inc
dec
cld
xchg
clc
push
test
rcrl
addr16
xor
into
int
in
sub
or
notb
xchg
loope
or
adc
out
ss
cld
and
out
outsb
das
nop
mov
mov
test
jo
mov
loopne
jns
call
fbld
add
movsb
sbb
dec
sub
ret
push
bound
into
mov
lret
xor
mov
adc
rorb
add
sbb
xchg
aas
adc
sub
cmpsl
je
movhps
push
sbb
inc
sbb
loope
jae
lods
cmp
add
std
add
push
xor
cmp
or
add
xchg
inc
push
mov
mov
in
daa
dec
repz
out
mov
mov
js
cwtl
xor
test
js,pn
not
mov
or
pop
insb
in
clc
xor
ds
and
xor
daa
or
es
mov
leave
shll
or
cmc
shrb
jb
jno
cmp
fistl
lods
add
repz
addl
add
cmpl
mov
aad
inc
add
and
xor
daa
ret
cmp
cltd
fadds
cmp
mov
lds
xor
adc
scas
aad
repnz
das
mov
out
insb
lret
aad
imul
and
pusha
dec
pop
fmull
xor
loope
and
ja
mov
lods
lods
push
sbb
push
jl
fwait
bound
dec
dec
dec
cmp
cmp
cmp
pushf
adc
sbb
cli
push
fsubrl
sbb
fucomi
imul
jae
hlt
jb
sub
fstl
cld
lock
sahf
jl
pushl
inc
rcrb
xor
fyl2x
adc
fs
or
repz
pop
pop
mov
mov
mov
xchg
pop
lret
cld
or
sti
or
add
and
clc
jne
add
test
cld
jns
js
cmp
into
popa
mov
jecxz
stos
xor
scas
xchg
ret
jo
std
pop
mov
mov
push
fbld
fmuls
mov
and
lret
sub
xchg
lret
inc
fsubl
scas
repz
loopne
lret
pop
push
push
add
mov
mov
inc
and
jo
add
xchg
fistps
cltd
mov
pop
sahf
push
xchg
xchg
cld
in
or
xor
testb
or
pop
or
imul
jmp
mov
movsb
icebp
fmulp
sub
sbb
jecxz
stc
mov
inc
outsl
out
daa
pop
ljmp
xchg
call
rorb
mov
movzwl
jb
cmp
ljmp
or
lret
jo
hlt
imul
popa
jb
imul
dec
pop
je
sub
outsl
icebp
push
push
xlat
xlat
jmp
mov
rorl
push
dec
jecxz
nop
jae
imulb
pop
divl
inc
mov
lahf
pop
adc
icebp
pushf
mov
and
mov
dec
scas
cmpsl
bound
mov
clc
xor
sbb
mov
push
cwtl
mov
cs
int3
inc
mov
lods
adc
cmp
jmp
xorb
mov
mov
testb
jnp
mov
fwait
or
push
sub
sub
xchg
mov
test
cmpl
pop
test
xchg
xor
add
cmpb
out
fisubrs
and
ss
mov
push
xchg
push
push
mov
stos
mov
and
sti
fists
pop
gs
push
jne
scas
inc
jmp
push
lods
push
inc
int
cli
or
mov
cmp
sub
and
out
mov
test
dec
jae
daa
or
in
test
cmp
cmc
pop
dec
pop
xor
pop
mov
adc
aam
inc
imul
test
jmp
add
out
mov
xchg
fiadds
jl
lds
repnz
cli
sbb
sahf
sti
mov
cwtl
adc
movsb
push
mov
xlat
pop
aam
fstl
out
fcmovbe
mov
enter
jle
sbb
pushf
ds
cs
shll
mul
dec
or
mov
data16
out
push
in
and
jge
subb
cmc
repnz
mov
bswap
imul
imul
out
mov
lahf
fdivs
mov
mov
inc
xor
stos
popf
push
fstps
aam
nop
sbb
outsb
in
dec
push
sbb
xchg
cld
cwtl
sbb
cmc
and
jmp
pop
fisttps
int
cmp
push
es
je
lahf
leave
mov
and
loop
or
lea
ror
fcoml
int
icebp
scas
addl
and
movb
cmp
cltd
stos
dec
sub
jae
idivb
xchg
or
je
inc
inc
jnp
or
or
mov
lds
test
repz
dec
scas
and
pop
insb
scas
dec
popf
aam
adc
push
cmp
sahf
xchg
cltd
stc
test
stos
jmp
mov
jnp
and
mov
or
rcll
add
stos
insl
and
or
jle
hlt
sub
ja
mov
inc
push
mov
out
push
mov
mov
or
push
and
and
push
jo
fnstsw
cmp
test
xchg
daa
icebp
lds
push
mov
cmp
loope
and
test
mov
or
incl
fdivs
scas
scas
int
clc
or
movsb
inc
shrl
dec
rcll
movsl
or
fcmovbe
pop
sbb
andl
lret
loop
push
movhpd
ficoml
mov
mov
notb
loope
mov
adc
lret
add
or
cmc
fadds
inc
out
adc
rcrb
sbb
pop
aad
jns
movsb
mov
jmp
and
cmp
out
imul
les
cmpsb
jno
jp
scas
aaa
shlb
mov
shl
loopne
pop
roll
hlt
sbb
xchg
or
repnz
dec
push
sub
aas
sarl
loop
mov
adc
out
ljmp
imul
aad
rclb
xorb
mov
rcr
popa
inc
jb
and
sbb
mov
int
call
and
cltd
pop
scas
mov
fistl
mov
mov
imul
sbb
mov
jns
inc
sub
xchg
xorl
popf
and
dec
jno
xor
int
clc
or
dec
out
adc
ja
cld
and
std
js
rcr
xor
mov
fistpl
and
scas
test
in
lret
dec
movsb
stos
mov
cld
push
sbb
xor
xorb
jo
and
nop
jb
or
xor
sbb
jae
out
mov
scas
mov
pop
jno
lcall
push
aad
pop
pop
sub
dec
stc
mov
cmpsb
xchg
rcl
xor
out
pop
lret
pop
sbb
cmp
cmp
pop
mov
hlt
mov
scas
sbb
push
sarl
xor
arpl
inc
fistps
push
addr16
ja
xor
pop
lea
push
nop
lea
mov
mov
je
adc
ret
sub
incl
sar
dec
bndstx
mov
inc
cld
or
mov
inc
mov
out
fisttpll
push
es
aad
pop
mov
jnp
and
lahf
ret
jmp
jp
sub
pop
sbb
inc
pop
sbb
cmpsl
lret
mov
sbb
leave
adcl
jbe
add
add
out
mov
jg
xor
insb
aaa
popf
cmp
aad
xor
inc
add
hlt
mov
loop
sub
mov
push
adc
ss
xchg
sub
jp
lods
push
push
and
xorb
mov
ds
cmc
fidivl
jns
push
popa
fidivs
mov
daa
iret
scas
mov
in
cmpsb
dec
or
mov
push
fcompl
jno
mov
outsb
mov
pop
inc
pop
fiadds
call
inc
or
cwtl
lahf
cs
jne
insl
xchg
scas
mov
sti
gs
jmp
in
xchg
sbb
out
mov
cmp
pop
mov
pop
mov
mov
mov
xor
mov
dec
push
jne
out
ror
xchg
sub
int3
scas
add
push
sbb
mov
push
mov
movsb
mov
ds
ja
jns
loopne
xlat
mov
jmp
or
cltd
and
pop
mov
or
in
add
xor
pushf
insl
sarl
clc
fcmove
inc
xchg
dec
cmp
sbb
adc
movsb
js
dec
fwait
push
add
dec
cmp
adc
lock
dec
mov
movsb
cmp
imul
push
xlat
mov
inc
loop
push
imul
stos
cmp
dec
adc
jl
or
add
mov
rol
testb
ret
js
clc
out
add
mov
mov
push
jp
lcall
xchg
jnp
push
jecxz
xor
pusha
jle
xchg
and
or
lahf
je
mov
pop
call
fmull
cwtl
clc
fildll
or
in
dec
cli
mov
ja
sub
xor
adc
and
pop
cmpsl
jmp
or
add
cmp
add
fs
xchg
decb
fidivs
sahf
push
jg
sub
out
sti
cli
jnp
out
xor
jb
lock
mov
xor
sahf
popf
xchg
xchg
sbb
xchg
cmp
nop
push
lock
daa
jb
mov
jl
xchg
insl
stos
clc
popa
fwait
pop
in
pop
add
pop
add
pop
jmp
scas
mov
mov
ret
jne
outsl
out
repz
int3
test
sti
jecxz
sarb
scas
cld
jecxz
rorl
jae
jg
gs
stos
mov
add
inc
jecxz
outsl
mov
lahf
fadd
sahf
das
stos
mov
sbb
sahf
push
mov
push
loop
xchg
push
insl
int3
inc
mov
faddl
mov
push
or
int
movsb
fsubl
cmp
cmpsl
xadd
mov
cmp
dec
ficomps
inc
bound
push
imul
dec
les
pusha
dec
mov
pop
jge
xchg
stos
pop
dec
iret
lahf
dec
aas
inc
add
push
mov
outsl
mov
sbb
in
enter
dec
das
iret
sbb
fwait
mov
iret
inc
movq
decl
jb
ret
popf
jb
pop
fldt
dec
int3
scas
aad
leave
aad
mov
in
mov
lock
addb
scas
dec
iret
and
mov
lcall
fnstcw
dec
pop
and
mov
sbb
and
cltd
mov
push
sti
xchg
in
cmp
push
cmp
push
jbe
fsubl
ficomps
xor
mov
push
sub
push
pusha
cs
imul
sbb
jecxz
lods
push
lea
mov
jg
ss
mov
cli
icebp
dec
orl
cmpsb
insb
mov
popl
dec
ret
fsub
mov
xchg
cmp
inc
jns
sbb
pxor
add
int3
fldcw
hlt
sarl
gs
dec
dec
or
ljmp
sarl
mov
sti
mov
cmpsl
orb
outsl
fs
rcll
in
jle
adc
repnz
lcall
leave
aad
in
or
mov
add
add
enter
mov
mov
sub
jo
das
or
add
rcl
mov
hlt
dec
add
and
mov
sbb
xor
push
popf
fnstenv
mov
dec
jmp
mov
hlt
lahf
hlt
xchg
mov
and
jns
xchg
jg
loopne
xchg
cld
stos
cmp
dec
or
dec
xchg
lds
and
jne
sub
or
call
and
ljmp
or
sbb
pushf
out
pusha
sarb
fdivrs
mov
mov
outsl
cmp
mov
xor
fcomp
jnp
dec
push
mov
adc
jg
iret
add
notb
imul
jb
enter
push
orb
inc
test
xchg
dec
not
lret
cs
xor
sbb
out
xchg
adc
cmp
nop
mov
fwait
push
xor
push
lret
lods
std
xchg
cwtl
sub
xor
or
sbb
inc
and
in
incb
loop
cltd
mov
scas
mov
jl
push
fwait
sbb
sbb
mov
pop
imul
frndint
sbb
and
enter
or
pop
xor
testb
cmp
adcl
push
xchg
xchg
outsb
mov
out
pop
jecxz
movsb
outsb
aad
cmp
push
cmp
inc
ds
js
out
push
ret
cmp
pop
mov
aad
ret
lret
rolb
insl
stc
sub
mov
sbb
cmp
jmp
scas
data16
sbb
adc
xchg
xchg
pop
xchg
xlat
data16
adc
int
push
scas
inc
or
lods
les
cmp
push
lods
sbb
mov
lret
lods
cltd
roll
xchg
scas
lahf
repz
push
mov
mov
and
cmp
and
sbb
jbe
insl
shl
push
xchg
or
jmp
sub
sub
push
xchg
cmp
subb
fimull
xorl
mov
sbb
or
dec
cmp
dec
inc
mov
mov
and
jo
dec
xor
jbe
and
sub
mov
out
pop
xchg
es
pushf
adc
and
inc
hlt
stos
fadds
notb
imul
xlat
xor
ja
dec
fisttpll
in
outsb
sbb
mov
aaa
fsub
fwait
popf
jns
lcall
fdivrs
jle
push
mov
adcb
sbb
test
jne
call
test
cmc
stc
imul
push
es
sub
in
cs
cmp
inc
mov
jnp
stos
sub
andb
xchg
aas
mov
call
int
mov
sub
fsubr
icebp
cmpsl
ljmpw
xchg
mov
inc
fwait
mov
mov
sti
insb
xor
inc
arpl
popa
es
call
mov
enter
sbb
inc
jmp
xchg
pop
add
push
fs
jmp
imul
cmp
inc
addr16
insb
mov
pop
fwait
dec
xchg
fs
lret
push
pop
cmc
ja
mov
lret
mov
mov
mov
in
lods
adc
ret
out
gs
movl
and
cmpsb
loop
adc
lock
lods
and
lahf
cmpsl
inc
add
popf
aam
pop
rcl
out
cmpsb
sahf
inc
cmp
inc
repnz
lret
mov
sarl
sub
dec
popf
pop
xor
jbe
sbb
sub
in
jecxz
sub
fs
ret
xchg
fs
mov
push
outsl
mov
pop
fstp
dec
xchg
cmc
lods
movsb
inc
lret
cmp
imul
push
enter
cmpsl
jge
filds
cmp
mov
push
mov
jns
sub
mov
sub
xor
out
pop
cltd
xchg
and
push
sbb
sbb
in
mov
cs
mov
xchg
sub
adc
mov
subl
push
mov
arpl
stc
pusha
aas
testb
rol
add
call
out
xor
cltd
dec
xchg
int3
out
pop
fidivrs
fld
xchg
dec
sub
aaa
jns
xor
out
mov
mov
lret
add
xor
fisubrs
subl
mov
add
dec
notb
adc
pop
inc
cli
test
adc
ret
jnp
das
xchg
les
pop
sahf
in
scas
orb
dec
lods
jne
push
pop
cmp
imul
sbb
dec
mov
lea
push
lret
std
adc
sbb
ror
jp
stc
subb
into
cmp
fstl
adc
xorb
jecxz
push
pusha
pusha
mov
pop
pop
jmp
push
xor
inc
out
dec
cmpsb
inc
jb
pop
movl
push
daa
aad
mov
mov
push
and
cmp
pop
fmul
lret
or
inc
xor
xchg
cmp
ret
xchg
mov
aaa
test
xor
call
into
mov
leave
push
adc
call
sub
ret
sub
add
fisubrl
ret
adc
pushf
enter
or
mov
mov
jl
lret
push
loopne
loopne
rorl
adc
add
daa
jbe
push
popa
xchg
fcmovnu
cmc
ss
xor
mov
sub
mov
fidivrs
test
add
mov
pop
mov
sar
jb
mov
cli
adc
clc
xor
cmp
pop
mov
fnsave
repnz
cmp
shrb
sbb
or
pop
xchg
cmp
pusha
aad
mov
enter
jns
mov
and
test
inc
ret
adc
jnp
xchg
rorb
sbb
call
loope
jp
lea
bound
movsb
pusha
xor
sub
decl
bound
cltd
std
jge
out
push
jp
add
cmp
pushl
fistl
cmp
mov
fbstp
in
jns
xchg
jecxz
int3
gs
adc
stos
loopne
xchg
push
mov
ljmp
cld
clc
cmp
addr16
add
js
push
sub
inc
mov
xchg
ret
in
fs
inc
je
push
push
or
push
stos
add
xchg
int3
in
inc
xchg
xchg
sub
mov
cs
push
lcall
out
divps
jp
ja
xchg
cmp
scas
xchg
aaa
les
cmp
addl
shlb
adcb
inc
and
lock
push
push
add
clc
cmp
sti
push
pop
sub
jmp
inc
mov
pushf
popa
divb
cmpsl
jge
mov
and
add
sbb
loop
sbb
in
inc
xor
int
loop
adc
jge
mov
add
or
in
pop
dec
jge
push
sbb
xchg
xchg
jge
imul
mov
andl
or
cmc
xchg
cmc
movsb
jmp
xor
sti
jecxz
scas
mov
and
flds
mov
inc
mov
insb
ds
jnp
aas
push
orb
mov
flds
mov
bound
in
jg
imul
dec
and
incb
frstor
fmuls
in
sbbb
or
ror
rcll
scas
sbb
mov
jmp
or
and
aad
rcrb
mov
xchg
and
out
orl
fwait
inc
lcall
popf
rcll
nop
adc
or
pop
out
mov
mov
divl
dec
sub
mov
bound
jp
adc
pop
jmp
or
movsl
ret
add
sub
xchg
or
sarl
sahf
xor
or
jl
out
cs
jp
mov
adc
adc
pusha
pop
xor
dec
sbb
mov
or
inc
movb
push
mov
push
jnp
ja
push
das
jmp
dec
sub
loop
jno
movsb
aaa
repnz
adc
dec
sub
pop
push
dec
nopl
lods
xchg
cmp
add
push
das
insl
jnp
jge
xchg
imul
loope
inc
inc
into
cmp
cmpsb
inc
sbb
fdivl
inc
in
pop
pop
inc
insl
add
xchg
xorb
andl
test
mov
pushf
jnp
xchg
xchg
jne
imul
cmp
divb
jbe
mov
mov
sub
testl
adc
inc
inc
add
outsb
push
push
insb
xlat
jno
adc
sbbl
mov
sbb
lret
adc
inc
jl
or
jecxz
and
cmp
incb
aad
repz
xchg
cmp
leave
xor
out
sbb
add
cld
mov
mov
in
nop
sbbb
int3
icebp
test
add
lods
jo
out
push
mov
lahf
insl
sbb
pop
xor
stos
mov
sbb
sbb
cmp
jp
insl
insl
fs
cld
inc
cwtl
pop
mov
and
iret
cmp
out
mov
andb
out
js
mov
incb
push
xor
pop
popa
push
mov
js
out
popa
xor
xchg
nop
mov
mov
sub
jl
cmp
push
mov
insl
jecxz
adc
loop
lods
add
sbb
les
out
mov
rolb
daa
fisubl
insb
out
movsb
jae
xchg
jns
adc
add
fs
jae
test
dec
test
aad
jecxz
lcall
mov
outsl
in
ja
dec
xor
and
dec
scas
sbb
sbb
mov
mov
repz
addr16
idivb
in
fs
and
xor
mov
repnz
lret
jns
es
sub
loopne
scas
push
cmc
pop
fs
adc
ret
lret
fsubs
xor
movsb
sub
inc
sti
int
dec
xor
and
icebp
out
fisttpll
mov
mov
ljmp
adc
cltd
shr
jge
xchg
xchg
movl
lret
sub
or
cltd
xchg
sbb
push
sbb
loope
mov
rdmsr
call
je
mov
test
fwait
insb
and
or
enter
cmp
fstps
inc
cs
xor
jl
out
test
lods
push
movsl
test
sarb
dec
adc
jl
sbb
xchg
repnz
mov
jnp
pop
mov
inc
push
sub
in
or
popa
cmp
mov
jge
sub
imulb
mov
inc
adc
mov
push
cs
cltd
cwtl
jecxz
test
aad
mov
sub
and
imulb
dec
rcrb
sub
jp
lcall
imul
pop
repnz
ret
fwait
aas
and
cmp
cmp
addr16
sub
or
stos
js
imul
mov
std
cmp
mov
adc
mov
movsl
cmc
movsl
sub
shlb
mov
sahf
xchg
pop
out
pop
sbb
jae
mov
cld
lods
pop
cmp
pushf
cmp
popf
enter
xchg
js
lahf
push
mov
lea
lret
loopne
sub
and
jns
mov
loopne
cmp
sub
pop
in
int
mov
or
ljmp
stos
fs
cmp
add
nop
xor
mov
lds
idivl
out
push
out
pop
fdivr
fdivrl
in
cld
fbstp
inc
sub
push
aad
imul
dec
jns
mov
add
enter
movsl
and
leave
fadds
mov
mov
sbb
sub
das
aaa
cmp
add
add
test
popa
pop
jns
in
or
in
popf
push
inc
fs
mov
push
pop
push
lods
push
cld
pusha
repz
jl
inc
xchg
aam
push
dec
insl
cmpsl
aas
mov
and
fdivl
nop
pop
stos
jb
aaa
mov
sub
sub
xor
sbb
in
cmp
cmp
mov
andl
jne
inc
add
sti
mov
adc
xor
and
test
js
ror
rcll
pushf
in
and
sahf
iret
enter
in
sub
push
cld
mov
mov
jle
mov
mull
add
das
push
fdivp
cmp
push
nop
pop
mov
pop
scas
add
mov
jne
cs
sub
imull
sbb
mov
js
pusha
sbb
dec
in
cmc
and
in
daa
inc
sbb
mov
cmp
stc
mov
adc
ljmp
adc
jno
pop
cltd
insl
pop
jbe
cmp
js
inc
xchg
cld
scas
and
pop
repnz
adc
xlat
sarl
mov
lock
add
push
stc
xlat
scas
jo
or
icebp
sub
dec
cmpsb
add
mov
sub
aam
popa
dec
aaa
jo
data16
inc
ror
xchg
add
cltd
inc
pop
mov
out
jge
jmp
inc
and
arpl
mov
inc
or
inc
fs
daa
test
test
ljmp
shrb
test
out
cmp
test
imul
sahf
adc
mov
lock
leave
rcll
enter
xchg
mov
xchg
ds
dec
push
repz
cmp
ret
hlt
je
repz
inc
mov
sub
fnstsw
sbb
in
lret
xchg
out
pop
lods
cmp
adcb
gs
sub
mov
xchg
xchg
sbb
jle
xor
out
pop
std
push
mov
sbb
sarl
shlb
push
xorb
or
frstor
mov
push
cltd
sbbb
stc
lods
sub
and
xchg
or
lret
lcall
or
add
jb
cmp
xadd
es
and
jbe
jle
in
cld
sbb
adc
pop
sbb
mov
mov
imul
insl
aas
pushf
outsl
shr
pop
xchg
icebp
lods
jb
push
fnstenv
jge
outsl
cltd
and
add
adc
mov
and
pop
scas
pushf
mov
stos
mov
in
pop
jecxz
inc
nop
sbb
out
sbb
adc
jecxz
inc
stc
lods
outsb
pop
stos
and
inc
scas
leave
or
adc
call
push
push
sub
lcall
arpl
ss
mov
imul
rorb
lods
lahf
sbb
out
nop
mov
rcr
ds
aas
das
icebp
and
jnp
imul
mov
pop
sbb
cmpsl
jnp
inc
mov
repz
loop
pop
dec
mov
push
aas
sub
inc
push
aaa
mov
xor
push
adc
enter
clc
xor
mov
jmp
xor
cmp
cwtl
inc
psrad
lcall
std
js
cmp
out
dec
out
fcoms
xchg
inc
repz
sub
adc
cwtl
mov
inc
or
int
std
ja
and
mov
push
sahf
loop
cmp
push
out
in
aas
loope
jns
adc
in
dec
in
dec
fsts
sbb
test
cs
inc
ret
shll
repz
pop
mov
icebp
out
push
mov
nopl
mov
adc
add
inc
scas
jnp
mov
pop
pushf
enter
nop
lea
movsb
inc
mov
mov
cld
mov
in
lret
push
push
xchg
insb
mov
jp
xchg
stos
std
pushf
xchg
or
sbb
sbb
in
push
sbb
or
scas
vmread
dec
pop
mov
mov
in
jecxz
sbb
movsl
leave
cmp
lcall
dec
pop
xor
dec
fdivl
addr16
int
jnp
call
jge
adc
in
and
addr16
dec
lds
insl
scas
mov
adc
push
mov
jno
add
mov
and
or
in
push
mov
add
bound
inc
dec
push
xor
je
mov
ficomps
jns
mov
jmp
fisubrl
lcall
add
in
pusha
das
jns
mov
cltd
push
loope
push
adc
cmp
sarl
jge
dec
fs
pop
sbbl
xchg
icebp
loopne
lea
fisttps
mov
sub
enter
popf
lea
push
push
sahf
in
loop
push
xchg
dec
push
shlb
cld
mov
std
fadd
jmp
sub
sahf
or
and
mov
pushf
lea
movsb
add
sarb
fucomi
in
into
roll
test
add
lahf
cli
mov
xchg
sbb
sbb
xchg
cmp
cltd
jnp
cmp
push
ror
lods
lds
xchg
sbb
inc
cli
pop
mov
frstor
fdivl
daa
rcl
pushf
dec
testb
pop
sbb
xchg
add
xlat
leave
jns
jl
mov
xor
mov
das
mov
test
jl
pop
lds
inc
sub
mov
in
mov
push
scas
call
xchg
inc
test
call
imul
mov
test
jle
dec
pop
lds
jmp
dec
fldt
in
dec
lcall
push
sub
pop
sub
into
es
hlt
popa
xor
arpl
aam
jl
dec
mov
iret
dec
jge
hlt
lcall
adc
test
lret
js
pop
pop
adc
in
push
xorl
cli
xor
inc
inc
inc
xor
mov
aam
or
mov
sbb
cs
std
and
cmpsl
pop
jp
clc
lcall
or
frstor
add
jb
bound
cmc
add
data16
and
mov
mov
hlt
sti
pop
test
jle
pop
inc
test
hlt
mov
stc
sub
out
xchg
mov
pop
daa
cmp
and
sbb
addr16
repz
jge
mov
jecxz
pextrw
mov
mov
out
push
dec
cmpb
mov
or
mov
sbb
insl
and
bound
sub
outsl
iret
jnp
jno
jl
mov
inc
sbb
es
mov
pop
and
pusha
testl
sbb
leave
adc
push
imul
jl
fisubl
pusha
push
mov
adc
cmp
addr16
call
mov
xor
rorl
xlat
mov
out
lds
cmp
int3
les
pop
jae
xor
test
out
test
xchg
and
jmp
jg
jle
dec
stos
rol
mov
mov
fcmovnbe
int3
jg
ret
inc
std
jecxz
mov
loope
mov
cmp
out
dec
add
jb
and
cmp
rcrl
out
push
mov
or
jge
mov
jno
pop
aas
or
iret
jg
jg
sub
out
cli
sub
imulb
icebp
pop
pop
sub
lock
push
sbb
jne
ja
mov
movsb
in
dec
lret
call
mov
cmp
jo
adc
nop
lock
cmp
push
lahf
stos
repnz
jns
xchg
push
xor
fisubrl
mov
pushf
dec
in
out
mov
cmp
or
xchg
mov
loopne,pt
dec
mov
pop
mov
mov
add
jns
sub
or
jp
inc
out
inc
mov
add
add
aad
out
mov
lahf
in
add
xchg
cltd
xor
adc
into
sbb
jl
inc
jae
pop
jbe
mov
pop
out
clc
repz
xchg
jno
or
push
mov
cld
pop
dec
test
imul
sbb
jo
or
in
rcrb
sbb
out
pop
das
loopne
gs
cltd
mov
xchg
in
fs
mov
andb
and
dec
push
and
shll
mov
adc
enter
mov
in
jb
mov
xor
stos
leave
aam
leave
cld
pop
mov
lahf
mov
lds
ja
int3
iret
mov
sbb
les
jge
in
loope
aam
xchg
jo
repz
mov
pop
es
cld
jp
sbb
dec
nop
addl
nop
js
dec
data16
repz
dec
cmp
mov
mov
sub
into
sub
adc
mov
lds
loop
xorb
gs
imul
lods
test
int
hlt
pushf
and
inc
push
add
andb
fs
xchg
mov
xorb
jb
jbe
or
inc
push
cwtl
push
dec
and
xchg
je
lock
add
iret
jl
jg
fstps
std
sbb
popf
and
or
int
push
rorl
imul
jp
pop
test
jo
jl
das
mov
shl
cmpsb
lahf
iret
jecxz
arpl
inc
mov
adc
pop
adc
bound
xlat
shl
add
jmp
movsl
dec
cmp
daa
push
add
mov
pushf
xchg
adcb
xor
adc
pop
mov
dec
mov
sub
push
aad
icebp
push
pop
push
testl
inc
icebp
jo
mov
mov
fwait
mov
xchg
nop
cmp
dec
xor
sbb
pop
repz
xchg
es
mov
mov
cmc
and
nop
imul
daa
mov
or
sti
mov
inc
out
cmpsl
adc
jne
push
iret
xchg
aam
fldcw
je
fisttpl
cld
pop
lock
mov
cmp
subb
cmp
sarl
hlt
in
mov
test
mov
xor
mov
and
or
jae
test
inc
inc
andl
dec
and
mov
out
dec
xlat
mov
not
data16
insb
repnz
iret
and
int
mov
dec
test
daa
add
inc
in
daa
xchg
cmp
cmp
sbb
or
pusha
call
pop
sti
pop
fs
insl
lock
hlt
lods
lcall
pop
or
adc
aam
push
stc
push
lcall
rorb
jno
cmpsb
dec
mov
daa
ja
or
mov
rcl
ficoml
add
adc
push
leave
jl,pt
cltd
mov
or
ds
ljmp
ss
dec
cmp
xchg
and
mov
movsl
mov
int3
in
aas
mov
imul
addr16
xor
or
lahf
mov
xor
fildll
sub
fadds
push
push
xchg
rolb
xchg
outsb
loopne
pop
xchg
push
cmpsb
pushf
and
lods
jg
push
outsl
movsb
pop
pop
int
movsb
mov
jae
loope
cmp
cmpsb
fs
dec
aaa
push
sbb
sbb
cmpb
sub
fidivrl
shlb
imul
jns
cli
sti
imul
xor
test
xor
xor
mov
les
pop
enter
xchg
mov
cmp
dec
add
cwtl
mov
push
sub
out
push
enter
hlt
ljmp
pop
shlb
jbe
mov
insb
sbb
add
pop
or
jle
test
adc
push
push
incb
in
xorl
into
sbbb
add
fs
jmp
add
dec
test
sti
les
sbb
sub
sub
testb
add
add
push
mov
and
cli
stos
fldenv
cwtl
dec
cmpsb
shrl
and
int3
mov
sahf
adcl
cmp
push
inc
mov
jnp
adc
lcall
repz
cwtl
and
add
jmp
mov
inc
jb
xor
popf
mov
mov
jae
add
fadds
dec
inc
out
adc
test
lods
pushl
fstpl
aaa
cmp
rol
push
std
out
lret
loop
cld
iret
stos
loop
xchg
push
inc
scas
icebp
or
aas
xchg
stos
pop
pop
lock
sub
pop
outsb
inc
jecxz
in
ret
lds
pop
scas
insb
jg
leave
fisubrl
icebp
xchg
push
mov
andb
sub
and
daa
jo
es
cmpb
int3
sbb
push
rclb
inc
or
lahf
pop
xchg
in
gs
sahf
dec
jecxz
ss
rcrb
jg
push
add
dec
fcompl
or
dec
iret
out
ljmp
pop
add
cs
stos
or
lock
hlt
mov
sub
test
xchg
int3
in
out
inc
in
arpl
cmp
enter
mov
in
int3
rcl
in
ds
int
scas
xchg
ret
mov
mov
jp
adc
jbe
xor
in
fwait
xor
mov
jp
mov
inc
inc
fcmovb
sub
ds
add
add
ror
or
sti
add
mov
subb
xor
push
hlt
inc
add
inc
enter
mov
inc
scas
xchg
mov
fldl
mov
rdpmc
ret
add
lds
mov
mov
push
xorl
xor
fadd
and
test
add
in
inc
jbe
dec
cmp
cld
mov
daa
test
xor
addb
pop
adc
imull
adc
pop
int
fwait
clc
jecxz
js
add
lret
inc
test
and
lock
sti
test
sbb
mov
insl
out
add
push
cmpsb
mov
out
decb
cmc
out
push
fcomps
arpl
enter
xchg
bound
aam
ret
sbb
stos
cld
mov
mov
cmp
insb
aaa
pop
push
jg
xlat
fwait
mov
out
dec
or
leave
sub
lods
xor
and
pop
rolb
leave
mov
jnp
cs
mov
ja
xor
add
pop
mov
jecxz
jp
negl
ficoms
ret
ljmp
jl
mov
jo
add
push
cmp
xor
dec
jp
dec
sbbb
cmp
xor
push
sub
add
jb
iret
pop
cmpb
xor
mov
imul
xchg
add
ljmp
aam
mov
mulb
xchg
lret
inc
mov
inc
jle
cli
xchg
sbb
sbb
and
sub
cli
in
and
sub
push
push
les
sti
mov
out
mov
in
fcomps
fstp
stos
pop
fildll
sbb
jmp
xor
xchg
mov
xchg
addb
mov
loopne
sar
mov
iret
mov
inc
shr
scas
mov
cmp
mov
add
push
xor
nop
fistps
outsl
mov
je
enter
mov
outsl
push
jo
pusha
xchg
popl
cmp
jge
dec
lcall
outsl
cld
push
daa
das
jno
lahf
and
loop
inc
jp
out
xchg
adc
sahf
cmpsb
frstor
stos
jno
dec
pop
dec
cmp
xor
sbb
shll
sub
mov
mov
aad
les
pop
and
xor
push
sub
dec
fdivrs
or
fstpl
push
lcall
add
stos
ds
imul
mov
cmc
xchg
mov
lock
sub
xor
mov
movsl
insl
ds
add
cmc
shlb
pop
repz
scas
ret
xor
push
cmp
fxch
jle
add
mov
int
icebp
repz
pusha
and
xchg
lds
xchg
sbb
js
sbb
cmp
xlat
les
push
sahf
movsb
add
cmp
lahf
insb
mov
add
leave
jmp
sub
repnz
adc
jb
push
and
cmp
popf
mov
mov
lock
sub
inc
xorl
or
adcl
ds
and
xchg
adc
mov
in
movsb
push
icebp
icebp
pop
iret
cmpsb
cmpsb
dec
pop
scas
push
mov
faddp
rcrb
into
pop
sti
aad
xlat
add
or
mov
stos
inc
mov
push
test
cmp
nop
jnp
xor
inc
or
jno
into
popa
xchg
or
mov
js
sbb
xchg
jmp
scas
call
aad
lret
insl
es
xchg
pusha
std
pop
inc
fisubrl
mov
in
es
dec
mov
stc
in
xchg
push
or
shll
ret
hlt
mov
sub
jmp
call
xchg
push
enter
mov
dec
lcall
adc
jge
testb
inc
xchg
data16
inc
inc
repnz
daa
mov
mov
nop
in
sbb
in
stos
xchg
mov
je
test
into
into
xchg
sbb
es
fs
addb
or
andl
roll
out
pop
test
in
mov
jmp
cmp
fxch
mov
ljmp
andb
sbb
out
fbld
cltd
dec
cmp
sbb
je
xchg
out
inc
xor
xchg
lock
inc
lret
push
mov
shr
or
push
jo
pushf
in
xor
push
cmp
dec
data16
mov
sub
adc
cs
test
test
push
xchg
test
cltd
incb
adc
mov
mov
addb
and
aaa
cmc
mov
cmp
aam
cwtl
lods
cmp
leave
loop
addr16
out
movsl
stc
inc
jle
sub
loope
jbe
add
and
mov
jnp
loopne
or
push
jp
lret
mov
inc
movsb
movsl
xchg
repz
fcmovnbe
and
sub
mov
sbb
pop
or
sar
xchg
fistpl
push
sbb
ficoms
dec
cmp
push
pop
repnz
ss
sub
push
jb
sbb
cmpsl
sub
outsb
mov
cwtl
mov
inc
and
push
mov
pop
add
fwait
test
push
xchg
fs
mov
cmpl
pop
push
imul
push
daa
mov
xchg
jno
pop
in
gs
sbb
inc
outsl
push
mov
ret
outsb
jecxz
popf
xor
scas
sbb
sub
mov
scas
dec
push
mov
mov
inc
sub
mov
cmpb
bound
xor
pop
test
dec
fbld
pop
inc
xchg
inc
loopne
lcall
les
mov
mov
std
pop
xor
cmp
pop
scas
adcb
jo
push
sub
shll
decl
pop
mov
mov
out
jg
int3
je
in
xchg
pop
or
jle
sub
or
lahf
jecxz
or
xchg
jl
pop
ss
rep
inc
push
lds
sti
mov
sbb
out
or
jno
cmpxchg
or
inc
push
aaa
cwtl
adc
shlb
inc
push
push
cmp
cli
sbb
adc
xchg
mov
stc
cmp
hlt
fwait
mov
jae
out
enter
pop
arpl
lods
pop
and
js
xor
dec
sub
jg
imul
or
insb
push
call
fsubs
fwait
in
stc
aad
jne
sub
cmpsb
xor
inc
cmp
jle
in
cmp
pcmpeqd
fidivl
jge
jmp
fwait
mov
icebp
cmp
clc
int
leave
mov
cs
inc
sbbl
fldt
test
xchg
fsubrl
sahf
ljmp
mull
pop
outsb
pop
xchg
lock
push
pop
dec
add
rcrl
sub
pop
mov
dec
test
or
sbb
push
test
xchg
in
roll
dec
ja
push
sar
fstl
iret
jecxz
and
jecxz
repz
test
cmpsb
xchg
pushf
outsb
push
mov
andb
mov
pop
dec
cld
stos
inc
out
xchg
js
inc
lds
mov
xchg
imul
sub
push
and
xor
inc
lods
push
mov
cmp
dec
cltd
adc
mov
andb
jns
xchg
faddl
fimull
sbb
je
push
xor
negb
cmp
sub
in
iret
stc
repnz
push
es
mov
out
gs
push
jno
aam
outsb
ljmp
push
fistps
in
pop
rorl
int
lret
adc
orl
add
out
add
push
je
xlat
test
lds
popf
and
mov
push
js
call
sub
xchg
push
enter
shrb
mov
aas
pushf
add
sbb
inc
enter
and
outsl
cmc
mov
test
mov
sub
mov
xor
andl
push
cli
std
nop
cmp
mov
nop
outsl
scas
push
pop
sbb
jecxz
adc
mov
int
lds
test
dec
mov
sub
mov
and
int
and
dec
imul
push
sub
cmp
outsl
mov
pop
dec
push
cmp
add
adc
add
inc
dec
mov
ja
jmp
xchg
mov
push
cmc
add
dec
movsl
dec
repz
test
dec
mov
in
gs
add
jae
sbb
mov
in
imul
pop
jns
add
inc
es
cmp
xchg
mov
sbb
dec
jbe
xchg
xchg
adc
aam
mov
insb
and
xor
xchg
stc
repnz
dec
jns
mov
je
pop
add
cmpsb
mov
loop
inc
int
cmpsb
xor
mov
fistl
sbb
mov
fwait
call
arpl
fucomip
in
add
aam
jle
mov
xchg
sbb
aam
loope
sahf
xlat
sbb
in
mov
dec
mov
cmp
imul
pop
mov
inc
xchg
mov
ficomps
ret
jb
jae
fwait
test
push
ret
or
mov
test
sahf
das
aad
in
rcl
test
sahf
mov
lds
repnz
fadds
jl
into
test
ds
xchg
shl
lcall
cmpsl
scas
lret
cmp
push
fdivl
mov
aad
jmp
mov
rorb
xchg
jb
mov
push
push
lods
popf
loopne
push
xlat
pop
inc
pushf
flds
add
jno
loopne,pn
xor
addb
cmp
jae
lods
mov
push
pop
js
push
cwtl
in
popa
inc
fildl
push
clc
pop
enter
sbb
ret
jo
inc
cmp
ret
or
jl
jo
and
cmp
jb
cmp
cmpsl
rclb
ficomps
xchg
pop
int3
aas
mov
rclb
fs
icebp
repnz
outsb
xor
pushf
mov
xor
adc
mulps
repz
repz
xchg
rclb
cmpsl
pop
mov
mov
fbstp
leave
sub
int3
and
scas
lock
jb
int
adc
xor
cwtl
pop
or
cmp
push
ret
addr16
out
push
and
lods
xor
in
mov
sbb
enter
lret
into
jo
sahf
push
mov
mov
adc
ficoml
add
enter
sbb
cmp
shlb
mov
pop
lret
adc
cmpb
mov
or
and
adc
loopne
sbb
cld
jne
movsb
out
mov
jns
xchg
scas
sbb
mov
xor
xchg
icebp
adc
loopne
subl
mov
dec
cmp
cmp
inc
cmpb
add
mov
mov
or
lcall
fs
repnz
mov
sub
adc
jns
cs
sar
push
inc
cld
icebp
out
sbb
push
test
mov
icebp
jl
jne
jae
pushl
notb
pop
mov
sub
jnp
adc
mov
js
test
mov
sbb
dec
jecxz
mov
or
mov
sub
lds
fnstsw
xor
call
std
inc
push
adc
sbb
imul
test
movsl
mov
in
fsubs
cmp
sahf
or
into
inc
fldenv
cmpsl
push
mov
inc
and
shrb
pop
call
sub
mov
push
cmp
mov
adc
or
xor
pop
lcall
int3
js
shrb
xchg
push
imul
xchg
mov
mov
dec
push
sbb
andb
and
test
fnop
insl
jge
sub
pushf
mov
cld
jecxz
imul
mov
push
imull
cli
jp
xor
xchg
in
sub
mov
push
pop
add
mov
dec
cmp
xchg
mov
dec
mov
sbb
mov
or
imul
stos
mov
fs
inc
ljmp
loopne
fcoml
pop
jl
xor
ds
and
lret
scas
rcrl
jnp
fidivs
adc
popf
push
icebp
ret
jmp
rorl
pop
fimuls
aam
mov
inc
adcl
xchg
jmp
lcall
or
das
cmc
jecxz
jmp
call
add
mov
sarl
rolb
cmp
mov
sub
add
and
add
lock
call
cltd
or
inc
hlt
lods
scas
cld
shll
ficoml
jmp
ret
sub
xchg
jne
lods
ljmp
ds
dec
in
sub
pushf
mov
aam
inc
fisubs
test
add
stos
cmpsb
mov
in
push
lret
cmpsl
jg
ja
ss
pop
xor
lret
mov
cmp
sub
inc
ds
adc
sub
mov
sahf
arpl
fsqrt
jmp
in
sahf
testl
mov
iret
movsl
xchg
test
cmpsl
pop
cli
jecxz
loopne
push
jmp
inc
cmp
rclb
pop
mov
sbb
mov
dec
xor
lea
loopne
dec
sub
mov
and
jge
loopne
jbe
jmp
nop
js
adcb
inc
jg
cmpl
test
cmpsl
push
sbb
jnp
lea
fs
addr16
lods
fldt
push
or
adc
inc
inc
xor
cmp
sub
jp
push
inc
imul
std
in
idiv
cmp
fistpll
fcomps
addr16
sub
push
std
test
sbb
or
leave
and
inc
mov
dec
stos
stos
add
adc
ret
sahf
inc
cmp
ret
pop
sbb
mov
push
pop
rol
iret
pop
hlt
pop
mov
push
out
push
flds
adc
imull
ss
fsubrs
cmp
fidivrs
aam
pop
bound
or
push
xchg
mov
add
jbe
mov
out
mov
cld
sbb
add
decb
loopne
call
cmc
out
dec
add
aad
cmp
adc
mov
fmuls
xor
pop
in
cmp
adc
inc
mov
sub
xchg
jmp
mov
and
shll
adc
jo
add
lds
cmpsl
rcl
push
dec
sbb
push
mov
fists
add
dec
jle
hlt
ss
cwtl
ja
sub
jp
iret
aam
or
inc
jns
dec
pop
jne
sbb
mov
insb
imul
imul
inc
sahf
les
fistpl
cmp
cmp
out
lods
fcoms
pop
cmc
pusha
push
imul
sbb
dec
mov
push
jbe
fstpt
add
adcb
xchg
fbstp
cmpsl
jo
fnstenv
xchg
adc
sahf
mov
testb
mov
push
std
jmp
push
orb
adc
fists
xor
faddl
in
push
add
jmp
sahf
push
pop
aas
jno
or
add
nop
add
xor
xor
sbb
dec
gs
test
fmull
cwtl
mov
sub
mov
or
inc
lods
mov
shll
push
xchg
mov
xorb
loop
mov
pop
sti
or
ss
rcll
cmc
inc
test
repnz
cli
mov
xor
mov
cmp
xor
pop
xchg
push
jg
rcrl
dec
andb
shlb
inc
subl
in
xchg
aam
dec
dec
or
adc
iret
pusha
xchg
ffreep
mov
or
rorl
lret
out
js
or
jp
mov
mov
int
cwtl
or
test
xlat
cmpsb
add
adc
in
adc
fdivrs
cli
inc
pop
scas
ret
shr
add
fsubs
pop
mov
or
test
or
mov
or
inc
sub
xchg
pop
out
sbb
mov
cmpsl
cmc
dec
repnz
inc
fsubrl
mov
lahf
sub
les
testl
or
xchg
xchg
inc
or
jmp
das
jmp
xchg
in
out
xor
popf
and
ret
mov
arpl
lret
shll
inc
ljmp
int
movsbl
mov
push
shr
push
dec
adc
imul
ja
cmp
stos
xchg
jo
mov
mov
call
out
or
adc
daa
pop
aaa
pop
jg
jl
rcr
pop
fs
sbb
add
mov
mov
jne
loopne
dec
push
popf
pop
lcall
lcall
nop
and
dec
mov
xchg
and
lock
mov
xor
je
mov
out
cmp
shrl
in
aad
repnz
or
jno
ja
inc
scas
dec
filds
xor
sub
add
fsubrl
xor
dec
stc
fildl
mov
pop
mov
lods
or
aam
xchg
imul
mov
push
xchg
shlb
sbb
lcall
pushf
inc
imul
std
or
lods
dec
cmpsb
fmull
push
sbb
gs
hlt
pop
sbb
dec
and
xor
jp
dec
cld
loop
scas
lcall
lcall
sbb
cmc
pop
addr16
or
and
adc
enter
mov
pop
in
popf
cmp
lahf
mov
test
bound
mov
xor
xchg
mov
out
mov
pop
mov
mov
loop
in
push
pushf
inc
aaa
loop
cmpsb
repnz
pushl
xchg
imul
xor
jmp
fucomi
push
out
in
push
xchg
lahf
jbe
out
and
jmp
add
dec
rcll
arpl
mov
sbb
ss
mov
dec
addl
sub
popa
or
fsubl
insl
call
out
jae
xor
shrb
xchg
pop
stos
xchg
jb
stc
add
bt
xor
out
outsl
push
daa
xchg
and
jmp
mov
pusha
sub
shr
jbe
adc
inc
scas
in
in
and
jmp
faddl
jmp
loopne
outsl
mov
call
cs
cld
pop
dec
fists
inc
outsl
add
imul
pop
outsb
orl
xchg
mov
add
data16
push
loope
bound
sub
mov
in
clc
stos
mov
sbb
aam
sub
call
sbb
enter
stc
mov
rcll
arpl
push
fwait
cmp
mov
dec
jge
rorl
lock
add
cli
sub
jne
fisubl
add
lds
hlt
outsb
jecxz
out
adc
ja
pushf
lea
lcall
mov
push
xchg
test
sbb
fistps
movsb
pushf
cmpsb
adc
movsl
andb
repz
jb
cmp
ja
pop
jle
sbb
outsb
ret
ljmp
test
popa
mov
push
lahf
add
orl
pop
in
sub
loope
pop
setge
aas
test
mov
or
dec
add
adc
xchg
fld
dec
ja
dec
xchg
pusha
mov
inc
push
jge
call
push
pop
mov
mov
js
xchg
test
push
or
cmp
or
fistpll
bts
add
sub
mov
lods
int3
test
inc
adc
data16
fwait
cmc
sarl
test
loope
lods
xchg
movsb
pop
mov
sub
cmpsl
mov
vmread
enter
sub
xor
sti
ret
pop
lret
sbbl
fstpl
adc
mov
jnp
mov
xchg
ret
cmpsb
cmp
add
imul
aad
adc
out
add
popl
movsb
inc
dec
push
push
das
test
mov
and
enter
sti
mov
in
clc
lods
stos
sbb
or
movsl
adc
cwtl
pop
fcomp
xchg
xor
inc
stos
push
lods
fildl
dec
mov
movups
rclb
and
cltd
dec
and
mov
pop
mov
cmp
sub
mov
int3
dec
cmp
stos
sub
cmp
sub
fdivrs
cmp
outsl
bound
cltd
fldenv
xor
lds
mov
loope
shlb
aas
and
pop
imull
adc
lahf
xchg
inc
iret
jecxz
lret
jp
jno
out
mov
cmp
ss
fdivs
push
test
sub
data16
stos
pop
inc
mov
dec
iret
hlt
dec
jne
push
es
iret
jge
mov
sub
dec
and
add
aas
xchg
mov
out
xchg
outsl
xchg
mov
mov
in
sbb
outsl
jns
dec
push
inc
or
cmp
jno
outsb
xor
cltd
xchg
sub
in
shld
add
int3
sbbb
inc
rol
aam
pop
je
pushf
mov
clc
ret
aam
test
and
int3
into
shlb
shll
ja
lods
mov
xchg
lods
inc
dec
inc
mulps
mov
in
and
fsubrl
dec
cpuid
mov
dec
mov
dec
aaa
mov
push
in
mov
inc
mov
sbb
mov
iret
pop
mov
dec
scas
popa
push
xchg
or
jmp
pop
adc
inc
jb
pusha
orl
or
dec
sub
add
add
mov
leave
sbb
adc
fadds
cwtl
repnz
or
lcall
and
popf
sahf
pop
inc
push
xchg
idivb
lret
jo
mov
jmp
dec
rorl
jmp
cwtl
bound
lock
jae
mov
xchg
gs
inc
sub
loop
inc
std
int3
shrb
lea
jbe
push
push
sub
jg
insl
aas
lahf
scas
sbb
mov
in
xchg
jno
notl
jbe
test
inc
int3
xor
lahf
je
dec
mov
mov
jmp
movsl
out
test
adc
mov
jae
popf
lods
movb
or
test
pop
out
inc
xchg
hlt
and
or
iret
lret
ret
sar
mov
mov
into
add
in
mov
cmp
or
jnp
mov
sub
loop
ss
pushf
les
inc
jmp
add
or
pop
imul
std
mov
cmp
add
xlat
call
mov
mov
jg
pushf
or
jge
lret
pop
mov
cmp
adc
and
repnz
sub
scas
push
sub
rclb
adcl
sahf
fsubr
ljmp
scas
xor
ja
mov
dec
push
std
inc
fs
out
in
inc
out
xor
arpl
enter
and
pop
aam
xchg
adc
repz
dec
pop
adc
mov
mov
lock
insl
or
jg
sbb
iret
fs
in
fdiv
arpl
and
mov
cmp
sbb
repz
rolb
adc
repz
push
jnp
and
xor
out
loope
pop
pop
sbb
fwait
sub
int3
adc
es
mov
mov
movsb
or
jno
xor
jns
cmp
stc
and
cmp
cmc
add
pop
loopne
sub
add
in
ljmp
jo
sub
push
sub
fidivrs
and
adc
loopne
fnstenv
jno
dec
and
adc
push
inc
mov
inc
popf
mov
pop
xor
inc
frstor
icebp
in
orb
popf
lret
popa
fmulp
stos
cmc
push
cmpsb
test
mov
cmp
mov
inc
xchg
add
xchg
int
cs
mov
es
sbb
das
rclb
sbb
or
jp
push
mov
adc
fs
pop
fsubrl
mov
in
push
int3
js
outsl
js
inc
mov
push
loopne
inc
dec
adc
adc
inc
xchg
shrl
int
ret
scas
outsb
fs
sub
pop
imul
or
lahf
dec
mov
jle
cmpsb
xchg
jmp
push
cmp
iret
in
cmp
bts
ja
stos
xchg
sub
mov
test
pop
shr
ljmp
xchg
loopne
inc
es
es
cmpsl
cmpsl
clc
popa
repnz
cli
sub
andl
test
imul
or
and
cs
test
cmpsl
sarb
jmp
mov
ret
mov
and
inc
aad
arpl
pop
adc
ljmp
jo
call
mov
ficoms
loope
push
add
test
push
movsb
loope
or
lret
pop
ss
mov
ja
xchg
jle
add
jo
dec
push
hlt
push
das
pushf
sub
jae
jns
and
adc
xchg
xchg
nop
sub
test
add
xchg
lds
jb
aad
std
and
int3
mov
rorl
adc
repz
mov
mov
ja
push
mov
aad
test
jno
inc
rcll
dec
outsl
rorl
cmp
fistpl
cltd
aas
dec
push
out
loope
inc
push
filds
or
popf
fistpl
imulb
push
sbb
jp
fnstsw
popa
inc
adc
jne
adc
outsb
pop
cmp
jno
or
push
jno
or
pop
sub
inc
dec
cs
sub
lcall
jg
in
popf
div
sbb
pop
or
push
fists
ja
dec
pop
ds
xlat
arpl
inc
sub
ljmp
push
lock
push
movl
or
dec
pusha
push
mov
sbb
ljmp
adc
lods
sbb
pop
sub
sbb
and
cmpsb
mov
push
cmpsl
popf
pop
and
xchg
push
pop
jle
mov
andb
pop
mov
jbe
fldl
into
dec
inc
sahf
fsubrp
or
xor
pop
stos
clc
add
mov
insb
push
dec
cltd
xor
in
repnz
insl
in
xor
and
test
jmp
sarl
push
hlt
pushl
and
pop
mov
or
pop
xchg
out
xor
cmp
or
pop
xor
shll
add
sbb
fisttpl
test
push
imul
xchg
jle
inc
add
jne
cmp
dec
or
daa
pop
std
jae
fucomp
shl
loope
or
in
cmc
jge
sbb
cmovbe
aaa
fwait
or
pop
pop
into
test
shlb
xor
push
in
lock
sub
js
addr16
jge
xchg
xor
sub
daa
push
mov
push
jne
inc
in
pop
pop
imulb
rol
jns
sub
lret
loope
sti
mov
push
sbb
ja
out
std
cmp
cld
mov
repnz
test
add
test
imul
popf
rcll
addr16
or
xchg
mov
mov
mov
mov
mov
pop
pop
mov
ja
dec
call
jmp
fisubrl
jp
mov
sbb
xor
xorb
mov
sub
mov
sbb
icebp
push
jbe
mov
addr16
sbb
cmp
out
xor
xlat
mov
lods
or
repnz
lds
aam
pop
mov
in
jmp
fcoml
mov
in
imul
dec
mov
cmp
cmpb
aad
into
jnp
mov
mov
in
mov
stos
inc
in
xchg
add
push
scas
mov
inc
lret
aas
repnz
into
cli
push
fldenv
shrb
mov
mov
fwait
mov
mov
sbb
and
jb
sar
fiadds
imul
lahf
xchg
xchg
sbb
lock
pop
pop
mov
outsl
loope
ret
in
dec
push
sarb
test
jle
pusha
movsl
xchg
cmpb
les
sti
mov
sbb
insb
inc
bound
push
jmp
adc
inc
add
or
sbb
icebp
fldcw
out
out
insb
ss
mov
mov
or
shrl
test
testl
sbb
movsb
xor
stos
mov
sub
pop
add
cmp
dec
lret
mov
cli
cmp
and
lea
fwait
adc
jle
xchg
xor
mov
es
je
adc
mov
mov
aas
in
push
jg
mov
mov
mov
xchg
sub
inc
popf
rcll
xchg
mov
mov
es
bound
ss
les
cmp
out
mov
mov
fcom
push
or
xorb
jns
fwait
lcall
mov
mull
fstps
sub
mov
add
fiaddl
icebp
inc
cmp
add
test
out
and
pop
iret
inc
das
movsb
inc
xchg
xchg
push
out
sahf
pop
pop
fdivs
lahf
adcl
or
mov
jecxz
push
pop
lret
pop
xchg
and
mov
xchg
lds
daa
out
cmpb
test
and
or
pop
les
inc
cmpsl
fisttpll
imul
mov
sbb
outsl
addr16
out
xchg
movsb
sbb
sub
cmpl
ret
iret
pop
enter
mov
jle
outsl
pop
pop
test
shl
fidivrs
ret
inc
inc
shrl
and
add
push
loopne
cmp
push
mov
idivb
sarl
rorl
dec
mov
es
cmpsb
inc
and
shl
js
xor
insb
fsub
adc
outsb
jb
test
outsl
pop
fldenv
xchg
sbb
push
shlb
data16
stos
push
pop
test
add
xor
mov
xchg
insb
cmpsb
scas
sbb
jecxz
fimuls
pop
mov
lret
das
xlat
lds
lcall
pop
fidivl
ds
xchg
cltd
dec
jmp
mov
lahf
jecxz
dec
xchg
decl
shlb
int
int3
insl
mov
mov
lcall
out
dec
rcrb
and
and
push
dec
mov
and
iret
xchg
jge
jne
or
pusha
push
pushf
arpl
lods
int
int3
add
iret
insb
movb
xor
inc
push
or
aaa
pop
mov
ret
xchg
das
out
xor
arpl
sbb
call
add
cmp
lcall
stos
cmp
lea
out
ret
sbb
lret
arpl
push
pushf
movups
lods
fistpll
daa
pop
fwait
xor
fisubrs
stos
adc
mov
add
int
dec
xor
iret
mov
push
inc
jo
das
das
inc
adc
mov
das
js
shrl
scas
arpl
gs
inc
and
stos
adcb
inc
mov
loopne
scas
bound
mov
movsb
lods
push
movsl
out
fcoms
cmp
sbb
adc
and
test
scas
inc
dec
std
cmp
sbbl
jne
cmpsl
in
stos
jmp
adc
imul
add
sbb
mov
jo
pop
mov
xor
mov
out
lret
cmp
xor
mov
mov
scas
cld
adc
out
sub
jg
and
sub
cli
dec
jno
jg
cmc
les
sbb
sbb
fists
stc
push
iret
sbbb
adc
mov
repz
mov
pop
das
mov
rcrl
aaa
xor
js
mov
sub
mov
inc
adc
aam
cmp
and
cmp
mov
mov
pop
cmc
shlb
mov
adc
jmp
sbb
jmp
popa
cmpsb
repz
enter
pop
sahf
pop
roll
push
xchg
jne
fimuls
sub
imul
add
dec
push
icebp
pop
jg
aas
adc
rcrl
sbb
xchg
aas
jae
jp
dec
xchg
les
int3
mov
ss
stos
mov
bnd
mov
lods
stos
inc
inc
shll
mov
outsl
mov
push
into
dec
mov
insl
or
cmp
xorb
in
aam
push
and
xchg
rcrb
daa
in
or
shl
mov
cli
lret
or
fsubr
add
add
call
lret
mov
inc
aam
fisubrl
mov
pop
add
sub
das
mov
out
lea
or
pop
jg
stos
fidivrs
mov
xchg
cmp
std
lret
aad
subb
cmp
sub
rclb
les
mov
icebp
test
mov
loopne
jp
dec
jno
push
into
mov
or
add
aaa
push
out
xor
fidivl
test
pop
add
orl
add
sbb
mov
push
sub
insb
fsts
or
cmpsb
popl
adc
fsubl
stos
loope
push
mov
xlat
icebp
aas
xchg
xlat
imul
pop
sub
repz
es
jns
push
mov
lock
xchg
mov
aas
mov
daa
xchg
fs
aad
pop
and
jb
push
jnp
fimull
inc
mov
pop
mov
gs
in
pop
xchg
outsl
enter
adcb
in
push
ret
sbb
inc
shll
pop
jae
mov
outsb
xchg
mov
push
clc
push
mov
je
inc
xor
iret
xchg
lahf
mov
pop
int3
jae
out
adc
sub
cmp
cwtl
in
and
dec
cs
outsl
pop
add
leave
sub
inc
scas
xchg
out
ss
insl
lahf
js
xchg
popf
aas
js
insb
or
jle
filds
shrl
mov
xchg
and
lret
and
sbb
and
gs
iret
imul
cltd
iret
sub
push
fbstp
pop
repnz
orb
subb
xchg
sub
popa
pop
mov
xor
pop
sub
fidivl
mov
pop
pop
int
ret
mov
pop
outsb
mov
mov
in
ret
hlt
mov
gs
pop
pop
call
test
pop
pop
cmp
movsl
mov
popl
pop
int3
sbb
aaa
cmp
cmp
dec
push
fwait
gs
movsb
in
xlat
in
xchg
stos
sub
outsb
sahf
push
mov
cmp
mov
cmp
shll
js
movb
xchg
pop
mov
pop
pop
les
fmull
cmc
pushf
push
vmptrst
stos
aam
sbb
je
mov
inc
pop
imul
lds
outsb
add
jo
xlat
fdivrs
cmc
movsl
scas
loope
sbb
out
adc
sbb
cmp
repnz
inc
push
adc
cmp
lea
rcrl
add
popf
gs
mov
jb
icebp
out
adc
data16
inc
cmc
xor
xchg
xchg
inc
fists
insb
popl
mov
jo
out
dec
inc
adc
sub
dec
push
iret
movsb
loop
push
inc
jle
push
jnp
insl
stc
cmpsl
add
mov
shll
jp
mov
std
les
sub
lds
outsl
movsl
adc
jg
sbb
cmp
sbb
adc
or
jecxz
ds
test
testl
mov
cmc
out
dec
movsb
daa
jbe
cmpsb
jno
xchg
lods
push
lds
or
lea
xchg
mov
sbb
adc
jmp
xchg
test
inc
sub
jmp
push
ret
out
xchg
shll
cmp
mov
movsb
sub
fldcw
mov
xor
rolb
pop
div
inc
or
pop
inc
fucompp
push
stos
fidivrl
and
xchg
cmp
and
push
pop
out
in
dec
mov
jne
pop
outsl
imul
mov
add
dec
ds
aad
arpl
popa
lods
addr16
gs
mov
or
mov
xchg
stos
rorl
mov
out
push
bound
test
addb
stos
pop
and
xchg
fdivrl
leave
xor
mov
mov
outsl
leave
mov
out
les
mov
pusha
or
xchg
sub
inc
push
pop
push
and
mov
jne
ss
adc
xor
adc
dec
xchg
inc
out
iret
movsb
or
xchg
lock
out
pop
or
mov
jbe
je
jbe
filds
test
addr16
xchg
xchg
mov
sbb
in
iret
jno
pop
inc
loopne
lcall
rcrl
lods
inc
xor
jo
test
fisttps
insl
dec
iret
cmp
push
push
flds
dec
loope
adc
mov
inc
dec
inc
or
jae
inc
shll
and
das
lods
jp
scas
js
sahf
adc
lret
mov
mov
leave
enter
inc
xchg
sub
cmpb
iret
dec
xor
and
cli
cwtl
add
data16
mov
add
jmp
mov
cmp
fiaddl
test
lds
or
js
xchg
dec
int3
andl
cmp
aad
sbb
sbb
repz
ficompl
call
jbe
adc
lods
push
jle
insb
fdivr
es
testl
dec
test
and
or
mov
mov
jnp
es
dec
add
lret
push
in
dec
popf
data16
ror
ret
lahf
jb
vmovd
and
sbbb
adc
or
xor
mov
xchg
inc
in
ljmp
push
and
cmp
sbb
movsl
ss
scas
sbb
xor
pop
mov
sbb
sub
mov
loope
mov
aam
clc
leave
pusha
dec
and
nop
lret
out
fidivl
inc
data16
inc
adc
add
int
sbb
pop
pop
and
out
sub
imul
fwait
pop
out
xchg
lock
daa
dec
add
jno
ljmp
jmp
mov
mov
arpl
cmp
insb
fs
negl
mov
xchg
stc
and
inc
xchg
jne
mov
repnz
sbb
dec
int
rcll
and
adcb
into
repnz
arpl
int3
push
sbb
leave
add
in
int3
cli
scas
scas
jmp
cmp
test
xchg
or
push
xor
jno
inc
je
sbb
mov
cmpsb
mov
jbe
scas
test
cld
mov
or
std
pop
je
sub
or
mov
dec
jns
das
imul
pop
sub
mov
stos
sub
inc
addr16
mov
lret
xchg
lret
lods
test
jno
xor
fbstp
sbb
test
scas
mov
and
jne
aad
dec
neg
fistps
mov
pop
push
out
in
nop
in
mov
repz
push
inc
mov
fcomip
lcall
sbb
fcmove
adc
int
xchg
or
sbb
push
cmp
repnz
ficoml
clc
xchg
sahf
cmp
lock
mov
push
fwait
xchg
push
icebp
int3
add
dec
in
or
sti
pop
mov
mov
dec
cmp
not
outsb
addl
xor
std
and
mov
adc
stos
cmpsl
adc
icebp
pushf
mov
repnz
adc
cvtdq2ps
mov
jecxz
jecxz
sbb
or
ud1
je
aam
ljmp
cli
mov
jns
jbe
jecxz
cli
insb
mov
sub
cmp
xor
mov
fcoms
call
push
flds
or
mov
jl
xchg
aas
dec
fstps
in
aas
mov
sub
ficomps
inc
mov
and
in
flds
xchg
push
cli
lret
add
out
rclb
xchg
xor
pop
push
cmp
mov
push
aas
cwtl
pushf
cmc
or
into
inc
cmc
dec
addb
fcoml
xor
xchg
xlat
fistl
mov
adc
and
sbb
jnp
dec
lods
xchg
jecxz
mov
cmpsb
mov
pop
cwtl
adcb
inc
loop
and
cmp
jb
add
dec
push
or
mov
ja
mov
int3
rol
daa
popf
adc
imul
push
test
mov
sahf
bound
xor
jmp
push
mov
call
pusha
es
cwtl
cmp
ret
or
inc
lds
popa
stc
or
mov
stc
jae
sub
jp
test
test
mov
mov
mov
jmp
pop
pop
jne
je
mov
pop
call
push
push
shrd
mov
push
jg
or
aad
sub
test
pop
add
stos
jp
xor
aaa
pop
mov
push
cli
iret
inc
test
test
rolb
pop
test
xchg
in
mov
jno
adc
xchg
int
sbb
cmp
or
es
mov
inc
outsl
pop
mov
lret
outsl
add
jb
inc
mov
daa
and
addl
pop
add
in
adc
cltd
or
add
pop
inc
ret
imul
push
sub
shrl
mov
mov
sbb
jbe
adc
imul
fidivs
cmp
shlb
cmp
jno
pop
mov
add
dec
inc
and
loope
cmpsl
inc
adc
adc
shrl
adc
rclb
aas
sahf
cli
mov
cmp
and
jo
xor
popa
xchg
cmpsb
into
xchg
push
rorb
inc
inc
and
lahf
add
test
jnp
cmpsl
hlt
mov
orl
mov
lock
sbb
jle
lea
or
and
or
popf
cmp
add
aad
icebp
pusha
insb
imul
or
sbbb
test
and
stc
mov
bound
jge
lcall
pop
insb
mov
ret
xlat
jne
xchg
adc
fwait
or
push
and
in
clc
cmp
and
or
ficomps
ja
in
adc
mov
jp
fidivl
dec
imul
fcoms
and
mov
mov
xor
sbb
out
dec
clc
cwtl
xor
or
daa
pop
or
mov
push
push
in
cld
jge
leave
sbb
xchg
sarb
pop
js
mov
push
xchg
mov
push
repz
add
popa
push
int3
setne
sbb
cmc
dec
or
mov
and
fwait
sub
aas
push
push
popa
fst
scas
fldl
rcrl
test
shlb
xor
mov
subb
pop
sti
enter
sub
aam
dec
mov
push
in
jmp
mov
push
cltd
inc
add
mov
movsl
and
ja
inc
loopne,pn
insl
popa
cwtl
mov
mov
push
cmc
inc
ficoms
int
pusha
sbb
sarb
push
jp
mov
stc
out
sbb
sub
mov
jb
jecxz
dec
xlat
int
pop
loopne
inc
aad
lret
push
arpl
sbb
push
jecxz
sti
arpl
stos
pushf
inc
out
mov
roll
clc
push
jnp
jmp
or
scas
outsl
mov
pop
push
rol
cwtl
lret
push
rclb
imul
mov
pop
sub
jbe
xchg
inc
xlat
or
sub
sub
call
push
add
rol
sahf
xchg
inc
xchg
sbb
dec
in
insb
in
sahf
sbb
xchg
or
out
shlb
cmpsl
sbb
pushf
xchg
shrl
adc
dec
stos
cmp
or
int
xchg
stos
xor
xor
jmp
ret
into
mov
dec
bound
add
movsl
lea
adc
and
sti
pop
daa
add
cmp
and
mov
cmpsb
pop
adc
mov
insb
cmp
sahf
xlat
and
ret
mov
pop
or
les
imul
nop
roll
fcmovb
jle
gs
imul
dec
mov
cmpsb
sti
push
mov
push
push
mov
ss
filds
bound
xlat
sbb
shr
dec
push
ret
add
pop
or
sarb
in
loop
lock
in
mov
jecxz
dec
int
fwait
push
iret
sbb
bound
cmp
lcall
dec
dec
xorb
lret
imulb
mov
lods
bound
sbb
xor
rcrl
and
cmp
rolb
dec
imul
negl
out
fldenv
in
in
in
xchg
rcrl
pop
jle
jae
outsb
cmp
jno
and
lock
mov
and
sub
scas
dec
adc
sub
mov
repnz
cmp
pop
sbb
push
test
cld
dec
xchg
test
js
cmp
ja
sub
int3
fwait
and
mov
aaa
push
add
in
lock
inc
test
cwtl
test
jns
mov
int3
iret
packsswb
dec
out
lds
xor
inc
test
xor
cmp
adc
repz
test
mov
dec
adc
dec
fucomp
sub
inc
jno
movsl
xor
incl
mov
ds
sub
push
and
push
sub
push
lock
adc
xor
adc
or
adc
mov
or
sbbl
cmpsl
sahf
sbb
lods
pop
mov
xlat
or
xor
ljmp
mov
addl
mov
enter
and
cli
sub
sbb
dec
jnp
pop
dec
ret
pushl
cld
mov
lret
adc
out
xchg
jno
data16
fnstcw
jle
mov
std
dec
inc
inc
and
push
fistl
ljmp
jl
jne
cmpsb
shl
outsb
sbb
loopne
or
sub
dec
shr
mov
mov
add
shlb
or
jne
push
ljmp
bound
and
nop
std
or
stos
loop
sbb
jb
push
jge
mov
std
sarb
inc
lret
popa
push
int3
lret
cs
fildl
movsb
cld
sarb
mov
mov
add
dec
pop
or
shl
push
std
push
xor
outsb
cmpsb
outsb
xchg
pop
lock
daa
mov
xchg
inc
pop
les
aaa
inc
bound
inc
add
jns
aas
push
jmp
imul
insb
cmp
subw
mov
sub
or
dec
mov
outsb
xchg
mov
xchg
xchg
scas
cld
sub
imul
into
nop
fwait
rcrb
subl
lds
pop
mov
pop
xor
xchg
jp
xchg
aaa
sub
pop
iret
xor
inc
lret
push
lock
sbb
pushf
fcomps
repz
test
mov
in
lods
mov
and
dec
sub
into
dec
icebp
int3
jne
sahf
loop
pop
cmp
fmul
fstps
js
fs
sbb
test
shll
jle
mov
sbbb
cmpsl
sub
movsb
sarb
shlb
sub
lock
in
jbe
sbb
mov
movsl
mov
cmpsl
push
pop
sbb
add
clc
jl
arpl
cltd
in
inc
mov
hlt
imul
fnstsw
sbbl
pushf
sbb
jbe
leave
xchg
movsl
jmp
js
xchg
in
and
mov
mov
ss
mov
clc
add
push
test
popa
jbe
xchg
mov
inc
inc
pop
nop
mov
mov
cmp
mov
popa
xlat
mov
cmpsl
jbe
pop
jmp
insl
jp
lret
fldt
xchg
aaa
xchg
xchg
fwait
jecxz
sbb
or
dec
adc
in
sub
notb
aas
movsb
lret
pop
xchg
jl
dec
cltd
jne
sbb
jle
shl
jae
jns
int
cmpsl
or
xor
aas
sub
mov
shrb
shrl
sbb
loop
fbstp
test
data16
out
test
cmp
adc
dec
and
cmpsb
cmpsl
push
in
pop
cmpsb
xchg
aam
loopne
cmc
xor
inc
loope
dec
cmc
scas
pop
lock
mov
xchg
push
jge
dec
fildl
mov
push
xchg
mov
and
imul
lds
lods
mov
pop
dec
dec
fsubrs
addb
lahf
fldenv
aas
add
addl
xchg
mov
lret
inc
aas
lcall
mov
in
fisubs
jmp
mov
pop
int3
xchg
jne
and
xchg
cmp
ss
xchg
xor
cmp
adc
mov
shl
jecxz
add
sbb
cltd
sbb
xchg
xchg
inc
jmp
push
loope
sbb
mulb
lods
xchg
in
push
mov
lret
jnp
add
inc
pop
je
jne
dec
popa
out
test
daa
insb
hlt
test
imul
xlat
das
fwait
out
lods
add
fmull
int3
mov
arpl
jnp
repnz
or
dec
aam
aaa
mov
test
pop
jne
je
jbe
pop
mov
dec
xchg
cmp
inc
rcrl
movsb
cwtl
sbb
pop
aaa
jge
mov
dec
inc
xor
dec
shrb
in
pop
adc
push
iret
sti
fadd
cmp
cmp
icebp
xchg
jecxz
enter
xor
cmp
pushf
dec
mov
push
pop
xchg
daa
jg
shlb
sbb
xor
negb
mov
fimuls
jl
add
or
loope
inc
mov
xor
stos
icebp
sarl
ljmp
xor
imul
push
mov
push
aam
jnp
call
lods
out
aam
jecxz
fmul
jg
dec
loop
lock
mov
nop
je
jb
or
mov
jp
cmc
sti
xlat
stc
leave
or
stc
xlat
and
jl
ret
fidivrl
popa
fs
add
xchg
stos
mov
inc
mov
pop
sbb
sar
ficompl
adc
pusha
jne
aaa
dec
sti
sbb
lahf
ss
test
test
loopne
jns
out
cwtl
mov
inc
stos
inc
fists
rolb
out
or
pop
inc
int
and
dec
dec
and
call
inc
fstps
pop
sbb
push
sbb
or
push
stc
jge
pop
lods
inc
lcall
cwtl
aam
popa
mov
lods
cmp
lods
hlt
lock
ret
or
jo
call
adc
xchg
movsl
mov
pop
jle
mov
fildll
in
loopne
sbb
sbb
pusha
or
or
adc
sbb
adc
mov
outsb
adc
or
push
jge
repz
mov
push
add
pop
inc
mov
outsb
or
notb
hlt
sbbl
dec
mov
push
mov
sbb
ss
std
subb
sbb
add
icebp
dec
sub
out
lods
aad
jmp
cmp
push
cli
ja
aam
mov
adc
loop
xchg
mov
dec
mov
mov
lahf
inc
testb
xchg
and
loope
std
or
loope
jmp
nop
ret
dec
orb
xchg
and
mov
sub
les
jle
push
test
ja
sub
push
xor
pop
mov
rcr
or
je
lds
sub
js
dec
add
out
push
fmull
out
xlat
loopne
and
in
in
insb
jno
jmp
push
mov
int
adc
cld
stc
aaa
pop
fmuls
jecxz
leave
mov
in
xchg
sub
adc
sbb
fnstsw
das
cmc
jge
loope
adc
dec
stos
dec
cmp
jmp
pop
imul
popa
enter
bound
icebp
push
inc
call
pop
add
push
inc
repnz
je
imul
push
pop
sbb
and
rorl
popa
mov
frstor
cld
leave
scas
mov
rorb
sub
aaa
push
ljmp
es
clc
adc
push
mov
lods
mov
call
inc
sbb
adc
ficoml
jb
jnp
movsl
loopne
loopne
jge
and
push
and
mov
or
sbb
pop
sbb
jnp
mov
leave
xchg
nop
pop
sar
jo
xchg
lret
mov
inc
js
cmp
divl
cmp
sub
lock
mov
lds
stos
out
adc
mov
jge
mov
or
push
imul
mov
push
jg
mov
loop
inc
inc
xchg
and
pop
and
movsl
inc
xor
fisubs
iret
fs
aad
xor
push
addr16
add
mov
add
into
add
lds
push
xlat
pop
xor
arpl
push
xor
les
mov
cltd
mov
ja
jns
add
add
lahf
insl
xor
push
mov
je
mov
jmp
negl
pop
pop
ljmp
lods
iret
adc
scas
push
inc
cli
mull
outsb
into
jno
pop
xor
add
mov
loopne
or
movd
sub
sub
movb
push
xchg
push
cmc
xchg
mov
sub
jbe
sbb
jb
mov
fmull
or
sbb
push
loopne
mov
mov
jmp
test
mov
stos
rclb
scas
hlt
in
inc
mov
xorl
int3
sub
adc
popf
inc
inc
shlb
and
pop
lods
push
adc
test
push
stos
jp
insb
xor
pop
ret
mov
pop
aas
adc
push
inc
or
jg
or
add
pop
femms
sub
push
dec
pavgb
pop
mov
push
shll
test
popa
xor
jae
sbb
cwtl
or
or
lods
out
inc
fcoml
cld
mov
adc
mov
jl
push
and
mov
jecxz
rolb
dec
cmc
cwtl
lcall
enter
cmp
mov
mov
shlb
out
outsb
mov
mov
mov
stos
rorl
shll
loop
jae
and
test
in
add
jecxz
push
daa
adc
mov
fldpi
xchg
add
push
aam
addr16
fwait
xchg
gs
xchg
shlb
or
out
ficompl
pop
in
xchg
lods
loop
push
das
xchg
popf
out
xchg
leave
xchg
out
lahf
mov
or
dec
pop
js
push
mov
aas
jbe
daa
jne
movsl
adc
or
dec
xor
jne
rolb
ja
or
ja
hlt
xchg
dec
stos
sub
xor
test
mov
loope
sbb
pop
adc
sub
sti
outsb
popf
jp
nop
jae
fldl
es
xchg
xchg
ficoml
adc
out
mov
sbb
sbb
sub
mov
xor
iret
outsb
xor
neg
pushf
fdivl
imul
shrl
test
inc
pop
cmpsl
rcr
movsl
mov
mov
mov
daa
cwtl
stos
sbb
and
sub
add
pop
and
or
mov
and
add
xchg
xchg
xchg
rorl
add
ficoms
js
cld
xchg
or
mov
mov
push
ret
ret
aad
sub
mov
adc
jb
cmpsb
mov
mov
or
imulb
cmpsl
cmp
cmp
movsb
inc
mov
xchg
push
add
mov
dec
cmpsl
or
ljmp
xor
xchg
pusha
nop
sub
daa
ret
xor
push
and
lock
lock
repnz
test
lods
mov
adc
stos
xor
sub
mov
scas
xor
lods
adc
popa
rclb
loopne
push
dec
pop
sbb
test
push
dec
mov
jo
push
sub
sbb
stos
mov
push
ret
js
xchg
pop
add
mov
aas
aad
xchg
dec
sbb
stos
in
push
cmp
in
imul
lahf
repz
lahf
sahf
in
inc
aad
div
pop
dec
mov
add
imul
loope
cli
insb
mov
es
dec
in
and
add
and
or
ds
sbb
xor
cmpxchg
add
mov
les
ret
sbb
xorb
roll
mov
sar
insl
movsl
lds
jnp
lret
shll
jg
mov
out
mov
call
aad
pop
add
inc
sti
dec
clc
xchg
xor
insb
and
hlt
jle
lret
add
stos
cltd
xchg
inc
leave
sub
icebp
iret
jecxz
das
or
loopne
mov
mov
dec
mulb
jp
mov
leave
cmp
lret
cmc
lcall
mov
mov
inc
jbe
and
pop
and
daa
das
xchg
cmp
aas
dec
in
insl
pushl
cmpsb
or
lcall
pop
cmp
aas
inc
ljmp
nop
and
xchg
sarl
jmp
adc
js
xor
cmp
popf
mov
addr16
mov
pop
incl
test
push
rep
mov
and
aad
pushf
out
add
adcb
sbb
idivb
ja
scas
fidivrl
in
inc
adc
test
aas
iret
inc
fidivl
cmp
fs
push
add
inc
in
adc
push
fisttps
mov
imul
aaa
cmp
mov
in
pop
or
xchg
add
mov
fstpl
out
mov
sub
outsb
xchg
xchg
loope
stc
inc
adc
add
and
push
jo
lock
mov
sbb
inc
cmp
cwtl
cltd
fisubs
scas
cmp
inc
xchg
jmp
add
add
int
push
dec
scas
fmuls
popf
dec
inc
ret
inc
repz
sbb
test
mov
in
loope
out
lods
or
dec
jg
lods
sub
or
jle
arpl
notb
cmc
mov
pop
sahf
push
xchg
lea
cmp
stc
imul
jbe
adc
add
lcall
bound
movntps
aaa
pop
push
jl
add
dec
sbb
cmp
pop
sbb
pop
shrb
jle
ss
push
filds
lcall
pop
pop
arpl
xor
lods
xor
and
cltd
pop
pop
fisubl
fidivrl
outsb
stos
test
or
dec
in
out
push
push
call
faddl
pop
jns
sbb
jbe
mov
mov
lods
loopne
mov
xor
pop
insl
sub
scas
jnp
cwtl
or
pop
sar
sar
stos
sbb
inc
aam
mov
cmpsb
repz
arpl
stos
test
or
repz
xor
lret
push
sbb
inc
dec
ss
jmp
stos
enter
inc
cmp
loopne
ficoms
cmpb
cwtl
jle
jno
mov
fwait
inc
ljmp
insb
jb
mov
or
xor
cmc
and
lea
cmc
pop
jl
in
sbb
rclb
pop
cmp
cmp
rorb
call
movsl
sbb
loope
sub
xchg
decb
sti
cli
mov
imul
push
lret
inc
popf
in
jbe
mov
fisttpll
mov
pop
dec
mov
int3
and
mov
rclb
rorl
xorb
pop
jg
outsb
rclb
ds
sub
mov
xchg
push
mov
mov
or
mov
inc
mov
stc
idivl
std
pop
pop
sbb
xchg
cmp
push
sbb
fsubs
add
push
inc
fidivl
inc
or
ja
adcb
movsb
cmp
stos
jl
lds
test
pushf
push
mov
shlb
aam
repnz
or
int
scas
cmp
or
add
arpl
mov
movsl
test
popl
xor
fwait
cs
loop
cltd
pushf
rcr
or
test
add
movsl
add
mov
in
mov
mov
jg
jns
cmp
pop
test
repnz
call
pop
cli
loopne
adc
pop
pop
jb
mov
sti
adc
xor
ror
js
adc
std
jg
sbb
cmpl
mov
push
popa
add
xor
popf
sub
xchg
or
pushf
mov
mov
sbb
inc
push
test
insl
outsl
mov
clc
inc
pop
xchg
jnp
movl
scas
jo
test
push
jno
sub
jecxz
xchg
mov
xor
out
sbbb
dec
mov
sub
add
sub
jp
repz
mov
in
and
adc
ljmp
lock
imul
mov
test
lret
push
xchg
and
jo
sarb
xchg
imull
out
stos
lods
aaa
push
call
mov
pop
sarl
push
sarl
mull
repz
out
outsb
gs
xchg
and
cmc
push
and
ss
in
push
fsubrs
aad
xchg
insl
push
out
jle
inc
stos
cltd
lcall
cmpsl
mov
jo
fimull
inc
push
dec
push
jne
xlat
stc
test
push
push
or
push
imulb
pop
cmp
test
je
mov
jle
ds
arpl
adc
cmp
add
mov
repz
adc
in
mov
popa
cli
push
inc
imul
and
or
and
xchg
cmp
cmp
inc
scas
pop
dec
mov
or
je
add
xor
push
cmc
and
mov
push
xor
inc
fstl
mov
sbb
cmp
bound
cli
rclb
cmpsl
fbstp
insb
scas
pushl
nop
inc
movsl
dec
push
cmp
ds
push
sub
lea
orl
cmp
mov
cwtl
ficomps
rcr
lods
jno
insb
xchg
dec
clc
out
iret
loopne
xchg
icebp
dec
adc
movsb
cmpsl
test
mov
rcr
add
leave
imul
sub
iret
shlb
dec
lods
dec
xlat
stos
mov
xor
pop
mov
jmp
inc
lds
scas
or
jg
dec
inc
aad
arpl
cmp
pop
jnp
jg
and
inc
out
icebp
push
insb
inc
sub
or
add
gs
cmp
test
mov
movsb
aaa
pop
and
ds
pushf
adc
pusha
pop
inc
add
stos
push
pop
add
and
cld
mov
xchg
mov
testl
and
jge
sbb
mov
cmp
push
lahf
push
dec
mov
insb
insl
inc
jp
dec
sub
mov
enter
in
push
inc
out
dec
sub
sbb
push
dec
mov
lret
cs
sti
pop
mov
sub
sbb
inc
xchg
pop
pop
pop
pop
inc
xor
bound
in
xor
jp
lret
aaa
sub
adc
jbe
or
mov
or
adc
push
push
sahf
das
jle
int
jl
mov
clc
pop
popa
sbb
nop/reserved
or
shrb
lds
cltd
add
icebp
inc
pop
in
sbb
popf
mov
repz
xlat
or
mov
inc
xor
and
sbb
pop
test
into
xchg
and
mov
sub
mov
in
cmp
movsb
es
push
mov
dec
ljmp
ljmp
insb
push
jg
fimull
idivl
cmp
aad
sub
add
jnp
mov
mov
pop
mov
or
jle
mov
sub
add
call
lret
popa
cmpsb
outsl
xor
sahf
iret
das
mov
inc
pop
mov
fs
mov
push
add
testb
testb
cmp
or
sbb
xchg
js
push
pop
lock
mov
js
cmc
sahf
adc
vpsubb
add
fisubrs
aaa
lret
daa
mov
sbb
adc
adc
sbbl
xor
jecxz
sbb
outsb
add
jbe
cli
adc
inc
xor
leave
mov
sbb
testb
int3
jbe
push
jo
lods
xor
daa
lcall
nop
es
sbb
out
xchg
lods
dec
mov
loop
clc
cltd
jbe
stos
jmp
xchg
jge
fs
pop
mov
in
pop
dec
mov
mov
jae
xor
xchg
push
xchg
outsb
mov
xor
xor
xor
mov
push
ret
adc
push
sub
fimull
jp
xchg
addr16
add
jae
push
das
xor
les
push
cmpsl
pop
mov
daa
cmp
je
in
push
sti
xchg
or
fsub
mov
push
andl
xchg
jmp
adc
or
test
jbe
mov
je
mov
mov
xchg
inc
sbb
fdivrs
js
add
pusha
shl
jns
pop
sti
les
ss
pop
xchg
and
jae
mov
gs
push
sub
es
rcr
sti
jl
mov
daa
scas
les
aas
xor
mov
adc
into
inc
jae
xor
inc
mov
add
je
dec
jno
xchg
jg
xlat
jnp
pop
mov
cmpsl
imul
push
xchg
insl
popf
push
jecxz
cmpb
idiv
mov
pop
insb
inc
pop
mov
fidivl
dec
sti
jno
push
cmpsb
push
mov
cmp
push
pop
popa
data16
vdivss
mov
jae
in
dec
mov
pop
jecxz
pop
xlat
mov
lret
jns
cmp
cmc
pushf
mov
mov
xchg
movsb
out
add
mov
adc
mov
sbb
pop
repnz
daa
jns
dec
jl
xchg
popa
addr16
notb
outsl
xorb
adc
mov
in
fidivrl
dec
xor
xchg
mov
sti
push
cmpl
test
test
scas
jmp
bound
icebp
mov
shl
xchg
call
jecxz
cmpsl
popl
sbb
sub
adc
pop
sub
rcrl
pop
add
xchg
pusha
es
pop
fdiv
xor
int3
add
mov
cld
pusha
mov
sti
aas
jns
add
jl,pt
add
fs
jno
mov
out
cmpsl
xchg
sbb
maxps
and
cmpsb
push
dec
push
mov
test
fidivs
loop
add
cmp
test
mov
jl
add
or
inc
sbb
sbb
lret
push
out
fimuls
and
stc
mov
fnstcw
jne
stos
cmp
push
ss
push
icebp
mov
dec
dec
jmp
adc
cmpsb
mov
stos
std
pusha
mov
fs
pop
rep
jnp
js
test
sub
dec
or
jmp
and
std
push
imul
mov
daa
pop
aaa
lea
cwtl
add
sbb
test
xchg
cltd
inc
mov
dec
jns
cmp
dec
adc
in
push
stc
pop
imul
inc
imulb
xor
push
mov
outsl
jl
fwait
cmp
out
sub
cmc
stc
cmp
sbb
sub
cmp
sub
sub
scas
aas
mov
xchg
jmp
push
push
jbe
jae
movsb
inc
dec
dec
xor
std
xor
push
fldt
fists
cmp
add
adc
in
jb
add
jp
sub
sub
xor
dec
in
shr
jge
call
sub
fs
repnz
lahf
enter
push
loop
adc
adc
notl
fnsave
clc
mov
xor
fnsave
xor
test
lods
iret
mov
lss
pop
mov
and
jo
sbb
test
jge
loop
stos
dec
push
xchg
mov
pop
jmp
in
mov
push
jns
jae
jp
xor
jae
lret
adc
test
stos
fdivrs
arpl
xor
sub
push
mov
sbb
cmp
xchg
jge,pn
iret
aaa
xor
mov
cmp
ficompl
in
cmp
inc
mov
out
mov
sti
mov
mov
push
lods
xor
inc
dec
mov
pop
enter
jne
out
lock
popf
jle
xlat
sub
mov
pop
jb
cli
add
lea
lock
pop
mov
pop
loopne
shrl
jne
aad
pop
sbb
in
cld
adc
fs
sbb
fcomps
aad
pop
fimull
sbb
and
test
insb
cwtl
sbb
lods
push
lea
out
mov
iret
mov
push
mov
daa
pop
xchg
jbe
add
shl
mov
sub
mov
arpl
cmp
sbb
push
les
mov
push
xchg
ljmp
jo
push
push
ljmp
and
push
clc
push
mull
cmp
xchg
push
aam
movsl
sahf
and
add
lods
or
dec
in
add
mov
add
in
push
sub
mov
adc
inc
pop
mov
arpl
inc
cmc
pushf
mov
jne
mov
mov
out
fadd
jbe
subb
dec
call
adc
push
test
scas
mov
popa
xor
dec
cmp
in
fwait
cmp
in
ljmp
inc
cs
add
xchg
clc
test
ds
xchg
cs
sbb
xor
cmp
mov
lock
sti
pushf
ja
test
jle
ret
loope
ret
lea
sbb
mov
mov
loopne
pop
and
dec
das
in
push
adc
and
mov
xor
pop
pop
popf
mov
push
rclb
xor
xchg
pop
lcall
jecxz
mov
fsubl
ja
sahf
aaa
cld
loope
ss
sti
gs
out
lret
mov
lea
fbstp
arpl
mov
sbb
sub
dec
xchg
lods
rcll
xchg
mov
or
and
mov
cmp
xlat
mov
test
sub
es
jno
or
xlat
ss
into
aad
lods
sbb
pop
push
gs
dec
dec
aaa
sbb
and
jmp
cld
jecxz
les
iret
int
adc
mov
xchg
and
in
test
xchg
push
mov
mov
mov
fcomp
pop
js
xchg
aad
ret
adc
stos
negb
cmp
mov
ficomps
mov
mov
adc
test
jbe
cmp
xor
repz
jg
mov
enter
aaa
adc
xchg
cmp
push
ret
mov
xchg
lahf
fwait
rcl
inc
ds
xchg
gs
pop
cmp
mov
pop
mov
xor
iret
xchg
cmpl
popa
pop
ret
pop
stos
icebp
and
xor
add
shlb
shrb
mov
aas
mov
dec
add
xchg
mov
fmull
lret
ss
repnz
inc
sbb
inc
rcr
ljmp
push
sub
sarb
cmp
mov
cmp
dec
cwtl
out
insl
test
mov
adc
dec
sub
ret
pop
jbe
lcall
dec
pop
mov
cmpb
jne
mov
push
dec
daa
adc
jle,pt
push
aad
jge
pop
jg
cmp
add
mov
and
movsb
fistpl
in
pop
push
add
sbb
sahf
fs
fwait
nop
xchg
adc
mov
movsl
inc
jmp
sbb
mov
cmp
push
dec
insb
jl
shlb
out
pop
mov
out
sbb
in
mov
jne
in
inc
xor
inc
ss
js
shl
cmc
jbe
cltd
jb
mov
cmpsl
lahf
dec
mov
mov
inc
jp
fnstenv
cmpsb
dec
out
rorb
xchg
test
jmp
jecxz
and
test
xlat
fcoml
fadd
dec
icebp
stos
lods
mov
pop
fdivp
push
adc
std
dec
clc
lds
adc
psubb
imul
cmp
lods
xchg
fsts
fwait
iret
std
aaa
inc
mov
lods
xchg
das
mov
jb
mov
sbb
xchg
out
ss
repz
sub
push
adc
gs
sti
inc
and
sahf
test
in
clc
into
out
push
or
inc
cmp
or
mov
sub
inc
adc
jge
mov
imul
dec
jmp
cltd
sub
mov
fmuls
sti
dec
imul
push
xor
mov
xlat
test
pop
lods
xlat
or
add
jle
inc
pushf
mov
pop
push
pop
daa
shlb
mov
or
out
or
jle
and
mov
xchg
fcmovnb
dec
sbb
mov
sahf
enter
scas
pop
sub
add
mov
add
sahf
or
push
sbb
pop
dec
repz
cmp
push
mov
shl
pop
in
cmp
rorb
aaa
int
jbe
and
in
out
outsl
insl
out
in
or
stos
addr16
shl
mov
imul
loope
fisttps
iret
xor
xor
sbbl
dec
lret
imulb
mov
mov
fwait
xor
mov
ja
sbb
pop
sarl
lds
pushf
jbe
pop
cmp
cmp
or
addr16
cmp
js
stos
popa
hlt
outsb
push
sti
pop
sub
dec
aad
das
adc
hlt
push
jo
xchg
push
add
dec
xchg
mov
sbb
jecxz
fidivrl
sbb
inc
mov
push
mov
out
stos
mov
nop
les
mov
pop
mov
inc
inc
jl
jmp
mov
jp
repnz
fsub
add
mov
arpl
jecxz
jle
ficoms
xlat
push
ljmp
xchg
fcomps
mov
jnp
mov
xor
fimuls
in
push
dec
jmp
stc
mov
xlat
mov
cmp
mov
dec
aas
das
inc
inc
stc
shll
addb
ljmp
xor
data16
imul
xlat
jns
jb
pop
sbb
outsl
sub
test
cs
dec
mov
xor
jne
and
lret
mov
xchg
dec
pop
and
inc
adcl
fldl2e
mov
cmp
ja
aad
dec
shrb
mov
or
cmpsb
mov
pop
es
gs
mov
mov
sub
jmp
out
popf
adcb
sbbl
aas
push
call
out
es
loopne
push
mov
cmpsl
sahf
mov
xchg
or
stos
test
adc
jno
into
lcall
lea
movsb
push
mov
jmp
add
test
jns
ss
mov
adc
mov
rcll
pop
and
inc
push
and
pop
push
xchg
cmc
or
pop
push
lods
aas
cmp
nop
xchg
adc
ret
lods
xorl
ljmp
and
push
scas
cmp
sub
stc
xorl
leave
jl
fcmovne
out
and
jo
cld
xchg
aad
gs
sbb
testl
pop
mov
cmpsl
sub
loop
into
sbb
cmp
add
or
mov
dec
xchg
cmpsb
mov
js
mov
idivl
sub
sbb
std
mov
in
xchg
sub
mov
fnsave
sbb
cmp
sub
fs
or
dec
inc
pop
or
xorl
fstp
aaa
lret
negb
sub
sbb
push
in
ja
xor
iret
pop
call
xchg
iret
push
loope
in
sub
add
ss
popa
adc
cltd
push
sub
jmp
and
iret
jno
mov
push
and
jb
mov
cmpsb
outsl
adc
mov
mov
pop
mov
inc
xchg
adc
pop
sub
fiaddl
pop
push
mov
cmp
or
mov
xor
adc
ss
imul
aas
lea
fidivrs
dec
sbb
in
jp
jns
push
cwtl
add
mov
je
imul
mov
aad
test
and
mov
adc
or
mov
mov
inc
iret
in
lods
std
repnz
imul
dec
fildll
sbb
jecxz
les
push
cmp
push
sub
dec
sub
jmp
loop
xchg
les
push
inc
nop
sub
clc
sbbl
mov
adc
cmpl
adc
mov
mov
test
in
jge
push
sahf
cmp
sarl
mov
icebp
lea
je
or
je
insb
aam
mov
cmc
in
mov
cmpsb
outsb
sbb
ds
popf
loopne
pushf
sub
repz
out
ljmp
addr16
jl
std
lds
mov
inc
push
add
mov
out
add
add
mov
lock
xchg
cmpsb
mov
popf
xchg
add
fsubs
mov
xor
push
ffree
xor
dec
ss
mov
push
ret
sbb
jno
cmpsb
sub
out
cmp
push
ljmp
inc
outsb
out
xchg
dec
ds
rcrb
pop
rcr
jmp
clc
adc
fcmove
pop
aad
ja
stc
sti
jno
and
mov
test
or
inc
inc
leave
data16
daa
inc
push
mov
lcall
daa
cltd
callw
enter
insl
push
mov
out
fistpl
push
add
int
mov
inc
mov
mov
lods
repz
lahf
and
inc
jns
ret
cmp
out
pmaxsw
dec
mov
int3
jl
data16
into
mov
push
pop
not
add
and
jge
and
dec
lret
sarl
iret
jl
add
cld
or
add
xchg
test
shl
insb
pop
sub
sbb
jp
imulb
outsb
dec
cmpsb
rcr
add
mov
jmp
loopne
sbb
sbb
sti
lods
inc
dec
hlt
ficoms
stc
insl
cmp
ds
adc
jmp
shrl
push
fisubrl
sub
ret
mov
cmp
enter
neg
cli
and
mov
add
inc
cwtl
jp
mov
adc
out
mov
pop
loop
lahf
and
leave
imul
adc
push
and
sar
mov
inc
mov
insl
hlt
out
stos
mov
aad
ja
cmp
xchg
int
sbb
lods
fwait
push
fwait
sub
or
test
and
divl
xor
push
pop
sub
mov
cmp
movl
xor
pop
clc
movsl
inc
push
idivl
add
movntps
sbb
fldcw
pop
cwtl
mov
inc
ja
pushf
pop
sbb
mov
int3
push
subl
dec
fisubl
popa
dec
push
xchg
decb
pusha
into
and
jge
fdivl
mov
and
addr16
jns
ljmp
sub
sub
je
dec
lret
inc
pop
cwtl
andl
js
call
sti
adc
add
subb
mov
and
std
mov
jl
or
sub
fnstcw
iret
or
jne
jge
or
data16
push
dec
jecxz
jle
clc
mov
inc
mov
lods
pop
int3
pop
jmp
add
push
decb
or
popa
orb
jnp
and
jns
push
push
loopnew
mov
ret
and
mov
add
ja
sti
rorl
testb
pop
ljmp
or
dec
push
pop
dec
push
xchg
int
xor
int
fsubl
xor
icebp
lcall
cld
mov
das
js
ljmp
jnp
sub
ja
cmp
add
arpl
insb
inc
adc
ja
fdivr
cmp
or
add
xlat
mov
lahf
cmc
clc
sub
adc
and
inc
pop
or
mov
mov
or
sbb
adc
sahf
scas
push
aas
fcoml
cmp
repz
cli
jp
shll
dec
rcll
mov
shl
shlb
sbb
psrad
in
inc
jns
xor
xchg
jle
in
adc
jge
sbb
xchg
je
mov
insb
icebp
or
stc
ss
xchg
mov
jns
lret
cmp
into
mov
push
xchg
push
data16
cld
mov
fstpl
push
adc
sbb
cmc
insl
cs
inc
mov
cmpsb
imul
add
adc
mov
pop
pop
mov
scas
xchg
jae
sti
sub
aam
ljmp
jge
pushf
pop
fs
rcrl
mov
cli
pop
pop
mov
icebp
pop
nop
insb
lea
in
or
xchg
dec
cmp
mov
and
aaa
cmpb
ret
jl
mov
xchg
lret
adc
add
pushf
in
nop
push
adc
adc
cli
sub
add
mov
or
call
addr16
pushf
fcoml
paddusb
inc
pop
adc
mov
in
inc
in
cmp
push
cmpsb
popa
xor
fsubl
out
xchg
scas
jmp
mov
and
scas
cmpsl
les
ret
mov
push
xor
xor
xor
pop
ret
les
sbb
pop
mov
mov
adc
push
fsubrl
dec
push
mov
decb
aam
test
cmp
cwtl
scas
aaa
in
frstor
ret
lods
loopne
pop
test
push
pop
adc
push
adc
cmpb
sbb
adc
mov
jmp
and
div
hlt
push
cmp
xor
lret
dec
inc
add
lret
push
pop
inc
icebp
cmc
clc
movsl
imul
dec
mov
jge
imull
dec
and
dec
pop
xor
insl
ret
and
sub
popa
loopne
popf
fprem1
pop
jbe
adc
les
aam
push
xlat
sbb
shll
loope
stos
pop
enter
lods
sbb
push
imul
cmpsb
xlat
pop
add
xor
lods
testb
inc
or
inc
or
and
rorl
pusha
and
and
xchg
decb
push
iret
inc
and
in
push
dec
test
sub
add
pop
jg
dec
lods
jmp
sub
test
add
inc
and
aaa
mov
jnp
pop
and
lahf
ret
jo
mov
arpl
int3
sbb
push
cwtl
ret
jno
stos
mov
call
scas
mov
mov
or
xor
lret
or
ljmp
mov
addb
ds
push
xchg
cmp
and
ficomps
test
fdivr
shll
in
out
in
adc
enter
imul
jns
pop
fs
sbb
cmp
sub
xchg
pop
sbb
xchg
es
ja
cmp
pusha
repz
mov
inc
insb
xor
aam
add
add
lea
aad
lods
outsb
xchg
enter
mov
xchg
jne
xchg
fnsave
stos
mov
hlt
outsl
adc
cmp
add
je
add
shll
ljmp
xchg
dec
pop
jne
lock
adc
push
das
mov
lods
dec
rorl
test
or
fiaddl
adc
dec
out
mov
xlat
test
dec
or
aas
pop
cmp
test
fcoms
outsb
fildl
lock
pop
cmp
movsb
cmp
mov
mov
orb
pop
push
movsb
les
ja
cmp
mov
out
icebp
sub
mov
repz
rcrb
movsb
inc
push
ret
jnp
int
sub
add
lret
repnz
mov
or
fs
xor
xor
jo
and
dec
hlt
xchg
dec
icebp
ds
and
jb
xchg
mov
sub
mov
xor
inc
lock
pop
cmp
aam
iret
out
or
xchg
lret
enter
imul
sbb
stos
stc
mov
push
and
xchg
test
leave
pusha
aaa
scas
dec
mov
call
add
or
pop
add
jle
and
jae
cmp
mov
das
push
xchg
fucom
cld
mov
out
pop
mov
jnp
xchg
inc
pop
sbb
test
xor
sbb
jg
xchg
inc
add
popw
add
std
or
sbb
and
sbb
jae
aam
sbb
shr
sahf
ljmp
nop
dec
and
int3
push
jp
jmp
xlat
mov
fdivl
dec
repz
xlat
sar
jb
dec
stos
mov
cmp
das
clc
stos
mov
sti
insb
pop
data16
cmpsl
mov
rcrb
mov
mov
cltd
dec
repnz
int3
adc
adc
mov
lock
mov
lea
cmp
pop
cmpsl
mov
jne
xchg
dec
mov
and
je
sbb
inc
cmp
ds
push
in
push
sub
aad
cmp
scas
sbb
sub
es
push
enter
xor
pop
rcl
pop
xchg
repz
mov
addr16
lcall
pop
inc
jge
movsl
or
xchg
jmp
stos
shll
add
ja,pn
leave
aam
xor
lds
enter
lods
pop
xlat
nop
push
insl
or
dec
jp
mov
jo
dec
imul
sbb
pop
mov
cli
push
call
mov
test
adc
mov
push
in
cmpsl
std
lods
sub
addr16
adc
lcall
mov
imul
push
push
pop
mov
and
push
lods
movsl
inc
jb
shrl
or
xor
adc
mov
dec
bound
ja
jo
fisubs
jge
xchg
adcb
jb
es
jbe
push
shll
sarb
movsb
fisubrl
and
int3
bound
lea
xchg
inc
mov
add
mov
test
scas
pop
cmp
icebp
and
dec
das
stos
movsb
fstps
in
les
dec
mov
bound
mov
dec
mov
jmp
push
xchg
ret
xlat
cmp
out
int
sbb
pop
sub
out
stos
jne
xor
lret
shll
adc
fs
jge
cmp
sub
mov
adcl
or
std
movsl
mov
rcrb
sbb
nop
idivb
icebp
sbb
clc
sub
ffree
std
pusha
jle
jmp
lea
mov
fistps
cs
cmpsl
ficompl
out
cli
scas
mov
or
ret
mov
add
adc
std
add
or
push
ljmp
mov
push
push
imul
sar
xchg
inc
mov
xchg
adc
addr16
scas
lods
fcmovnu
xor
pop
sub
inc
lahf
jnp
lahf
repz
test
add
jns
mov
fcomip
add
sbb
call
sbb
mov
das
mov
testb
add
into
bnd
add
test
dec
inc
jbe
xor
sbb
orb
mov
pop
push
jg
lods
jns
add
dec
stos
xchg
pop
mov
mov
clc
out
add
nop
ret
stc
dec
mov
int
push
add
outsl
lret
and
mov
adc
and
daa
dec
mov
sbb
xchg
push
and
adc
popa
ret
mov
sti
cmp
pop
lcall
pop
lret
dec
andps
jno
mov
and
sub
stos
mov
data16
push
cmc
jmp
push
mov
ds
outsb
in
in
and
mov
or
call
xor
addb
dec
jae
mov
dec
mov
pop
inc
in
jnp
and
pop
xor
rorl
push
loope
mov
sub
aad
sbb
jns
fidivs
inc
push
fldenv
or
aas
pop
cmp
and
xlat
push
jge
mov
out
cwtl
mov
je
lret
scas
leave
test
xor
cmp
lret
loope
das
rsm
push
pop
imul
outsl
sub
imul
lahf
mov
mov
loopne
or
sub
das
xchg
aaa
pop
mov
jp
push
mov
shl
mov
cmpsl
pop
loop
or
rcr
rorb
pusha
mov
jb
push
and
inc
inc
out
call
push
fimuls
xlat
dec
fcoml
out
ljmp
mov
inc
nop
nop
cmp
dec
ljmp
xchg
insb
inc
scas
jmp
leave
and
mov
dec
shl
inc
hlt
subb
fdivr
dec
and
xchg
or
jp
inc
pop
call
or
dec
fdivs
rcr
jo
cmp
movsl
test
push
gs
popf
and
or
int3
jge
bts
aam
sub
pop
mov
js
nop
push
fldcw
lock
push
mov
insl
push
aad
jg
stc
fs
aad
movsb
sbb
sbb
inc
imul
and
inc
push
xor
rolb
ficoms
addr16
xor
mov
loop
es
bound
aas
lret
xlat
divb
gs
dec
mov
into
cld
dec
jp
pop
jecxz
loop
sbb
xchg
bound
movsb
and
mov
push
jnp
fs
and
jg
stc
xchg
pop
sbb
push
mov
cmc
incl
adc
xchg
gs
xor
addb
jbe
and
scas
pop
inc
stc
push
fisubs
xor
add
mov
pop
sub
cmpl
sub
or
cltd
shll
loope
cmc
ds
xor
lahf
daa
inc
pop
inc
clc
movsb
fwait
cmpsb
add
in
and
incl
pop
cmp
movsl
mov
jl
scas
mov
xchg
mov
mov
cmp
inc
imul
outsl
fisubl
mov
movl
pushf
aas
adc
jns
cs
fidivrl
stos
push
mov
mov
cltd
rcr
rclb
fidivrl
ja
push
imul
ljmp
xor
push
pop
in
clc
mov
jbe
adc
loop
mov
mov
jp
xor
dec
outsb
out
xchg
adc
pop
inc
jmp
out
dec
xchg
push
pop
cmp
scas
stos
mov
fdiv
adc
call
stos
mov
jle
scas
dec
inc
jne
xchg
mov
or
mov
fs
sub
outsl
xor
xchg
or
lock
xchg
test
ret
adc
lcall
or
pop
jecxz
outsb
es
gs
push
out
inc
add
xchg
add
xchg
or
aaa
stos
lock
jo
dec
stc
jge
jae
push
mov
daa
pop
sub
cs
jb
xlat
inc
sub
push
jne
scas
call
add
aam
xchg
lods
aas
mov
inc
xchg
cli
fadds
repz
pop
rorl
push
leave
sbbb
insl
mov
sbb
push
test
in
push
int
mov
and
xchg
push
mov
je
imul
dec
ja
ret
xchg
add
lods
imul
lock
or
pop
sbb
cmpl
push
xor
ljmp
shrl
ljmp
lret
and
repz
shrl
mov
cs
jnp
mov
or
jmp
add
ss
xchg
int
jbe
sbb
movsb
repnz
hlt
test
sub
out
jns
jle
cmp
scas
icebp
sbb
idivb
loop
push
xor
mov
push
jge
xor
lea
xor
pop
cld
in
pop
dec
mov
push
and
in
cli
and
xchg
xchg
subl
sbb
mov
sub
or
and
js
pop
inc
pop
pop
add
stos
mov
ret
jno
icebp
fisubs
loopne,pn
pop
sub
scas
dec
rolb
push
pop
pop
sub
jb
inc
aas
fldenv
rcr
xchg
push
mov
pop
lods
loop
lods
std
aaa
aaa
mov
sub
leavew
lods
addl
mov
xlat
stc
aaa
sub
sbb
loopne
or
test
xor
bound
sbbl
jg
or
aad
xchg
ret
cmc
mov
mov
cmp
call
add
mov
pop
rcl
mov
daa
sub
lahf
xchg
mov
jb
rcrb
sbb
stos
mov
sub
mov
mov
aam
loopne
sti
adc
hlt
ja
mov
aaa
mov
cs
mov
and
ljmp
icebp
lret
mov
mov
shll
adc
cmpsb
mov
mov
jae
xor
cmp
sbb
inc
dec
jne
cmp
sub
sub
lds
sub
sbb
adc
add
rcrb
adc
sbb
in
ljmp
or
push
sbb
out
sbb
jmp
jb
pop
hlt
adc
mov
or
and
jae
mov
ds
pushf
cld
repz
add
sbb
and
mov
gs
out
xchg
mov
xchg
bnd
sub
xchg
mov
shll
fdivrs
pop
inc
mov
cwtl
cmp
cltd
xchg
jnp
or
mov
dec
pop
cmp
pushf
inc
bound
idivl
adc
fs
mov
sti
ja
sti
add
incl
dec
test
adc
test
cmp
cmc
mov
inc
test
push
dec
das
jle
cmp
mov
cmp
mov
enter
sbb
lret
sbb
xor
loop
sarb
xchg
lea
imul
sub
nop
test
stos
jnp
pop
jl
fcomp
dec
imulb
mov
fcmovnb
push
testl
test
sub
andl
rorb
push
subl
push
lods
add
pusha
push
inc
out
ss
and
stos
movsl
and
adc
xor
xorl
nop
imul
xchg
rolb
shrb
cmp
cmp
dec
mov
mull
add
cwtl
xchg
jne
sbb
mov
pop
inc
sbbb
push
dec
add
push
lods
xchg
loopne
jmp
movl
pop
mov
imul
dec
pop
imul
scas
aam
inc
pushf
push
ljmp
adc
push
push
xchg
adc
adc
ror
imul
fwait
jg
test
pusha
sub
test
pop
repnz
ret
push
into
dec
rcrb
pop
test
in
dec
push
xlat
xlat
xor
sbb
add
and
mov
sbb
add
cwtl
mov
fmuls
jmp
xlat
mov
xlat
cmp
lret
mov
cmpb
fisubs
fwait
loop
rclb
int
fstpt
jl
mov
xlat
xchg
push
jae
cld
xchg
add
jmp
xchg
or
lods
ja
out
push
mov
push
lea
fiaddl
xor
inc
mov
mov
stc
fnstenv
push
sub
mov
lcall
sub
pop
push
fdivl
ret
in
and
popa
cmp
aam
jae
inc
pop
enter
int3
ret
adc
scas
shrb
sahf
rcrl
das
pop
movsl
mov
shll
movsb
int3
hlt
leave
jne
and
inc
xor
jbe
jbe
in
xchg
fisttps
lods
idivb
jecxz
lods
sbb
dec
lahf
frstor
orb
int3
push
hlt
mov
mov
inc
adc
xor
xlat
cwtl
and
jle
pushl
sahf
jno,pt
adc
fnstsw
lods
lret
push
filds
mov
push
push
push
and
pop
stc
jno
mov
sbb
insb
movsl
cwtl
clc
mov
jge
out
cmp
inc
sub
scas
add
sarl
cmp
enter
paddd
loopne
jl
dec
cmpsl
out
cmp
fisttps
ret
jl
sub
jae
pop
inc
je
dec
push
scas
popa
mov
add
add
mov
cmpsb
xor
test
pop
int3
stos
mov
jno
sbb
sbb
aad
sub
ret
sbb
mov
sub
inc
cmp
xchg
stc
sub
lcall
or
push
orl
jno
xchg
out
sub
out
dec
cmpsl
fwait
xchg
popf
cli
dec
shrl
mov
jecxz
mov
test
mov
in
imul
sahf
lcall
xor
test
xlat
add
sar
in
mov
mov
in
ficoml
movsl
dec
repz
push
fstps
dec
je
enter
aaa
xchg
insb
jle
cmp
xor
push
popl
pop
icebp
out
addb
mov
adc
push
pop
das
push
aas
test
mov
rclb
xchg
mov
xchg
leave
out
in
adc
sub
rcrl
xchg
jno
test
pop
mov
xor
loopne
and
int3
insb
xor
push
lret
imul
mov
sub
lds
cmp
mov
xor
imul
scas
iret
leave
mov
sub
inc
mov
pop
fwait
ret
faddl
loop
lahf
iret
inc
sbb
dec
jge
pop
jecxz
movsb
cmp
sbb
stos
or
decl
mov
nop
out
pop
xchg
pop
pop
movsb
test
push
test
fs
leave
call
mov
flds
out
leave
add
gs
xchg
sarl
int3
mov
mov
negl
sbb
fstpl
jmp
dec
mov
mov
sbb
mov
scas
call
and
mov
pop
xor
cld
sbb
and
call
bound
enter
lret
stos
lock
out
dec
pusha
push
mov
xor
mov
mov
mov
popa
sub
push
dec
sub
into
mov
in
push
cltd
mov
mov
push
popf
sti
xor
fs
cmpsl
cld
mov
push
loope
stos
inc
scas
jge
jmp
loop
repnz
cmc
jge
mov
cmpsb
jo
das
fistpll
pop
push
mov
fdivrs
les
in
stos
xor
pop
add
mov
cs
pop
std
pop
push
jnp
mov
mov
sbb
imul
sti
icebp
cmp
push
push
iret
lret
ret
and
sahf
loop
mov
or
sub
push
xchg
xor
sub
fdivrs
dec
mov
inc
and
adc
push
pop
push
pop
and
adcb
daa
xor
xchg
int3
mov
loopne
fidivrs
stos
adc
in
fdivp
xlat
sti
xchg
mov
pop
scas
mov
shll
jmp
and
xchg
mov
popf
sub
pop
or
mov
and
and
fidivrl
movsl
scas
test
insl
mov
icebp
xchg
cmpsl
xor
pushf
enter
test
mov
push
sbb
lcall
lods
in
jp
icebp
or
bound
jns
inc
xchg
mov
gs
xchg
lods
dec
cli
sbb
in
mov
lahf
loopne
pop
adc
ret
mov
xlat
aam
inc
addr16
cli
leave
xchg
shl
andb
pop
pop
mov
jnp
ss
mov
adc
inc
xchg
mov
push
cltd
add
inc
into
sub
jle
pop
or
scas
out
and
mov
scas
pop
push
inc
pop
fsubr
loopne,pt
in
pop
adc
adc
out
in
into
xor
or
mov
test
push
xor
or
jecxz
mov
lcall
test
add
unpcklps
mov
sarl
jle
mov
or
ss
outsb
sub
add
mov
mov
loopne
icebp
arpl
cmp
mov
push
inc
jl
addr16
mov
or
iret
test
mov
ja
imul
arpl
outsl
cltd
out
das
repz
xor
fildl
or
cmpsb
jo
repnz
cmp
mov
inc
xchg
loope
insl
sub
into
mov
mov
out
test
jne
sub
mov
mov
xchg
nop
xchg
xchg
pop
shrb
mov
ror
scas
pop
jmp
cmp
int
lret
cmp
sbb
scas
sbb
jns
rorb
pop
push
lds
test
jl
sti
mov
fs
pushf
cmpsb
cmpsb
push
mov
jecxz
icebp
push
cld
cmpb
aam
insb
popf
pushf
sbb
nop
sarb
fistps
imul
push
imul
xor
pop
orb
mov
xchg
inc
lods
cmpsb
scas
inc
das
imull
jmp
pop
bound
pop
pop
int
in
jecxz
movb
sub
sbb
and
sahf
and
inc
in
das
inc
popf
ret
cmc
or
ja
loop
loop
cmp
xor
sub
fstps
dec
xor
push
push
out
orl
cmc
sarl
out
sub
mov
cmp
xor
scas
lods
imul
mov
and
push
mov
inc
ret
mov
repz
movsb
push
inc
aad
xchg
add
and
in
jae
xor
and
or
pop
sub
adc
adc
inc
mov
aad
out
inc
cmpsb
mov
dec
jp
mov
ret
or
jne
insl
cmpsb
scas
addl
insb
inc
andl
push
push
jb
jle
imul
mov
das
mov
aaa
pop
in
mov
xchg
jmp
repz
incl
in
or
xchg
popa
or
push
push
cmp
shll
int
adc
dec
sub
jo
fcomi
fmulp
sbb
and
cli
jb
js
xchg
imul
push
adc
int3
dec
lret
and
pushf
push
push
or
fstps
push
fwait
cmc
sub
pop
addr16
int3
fcoml
jb
fidivs
pop
mov
out
jb
sbb
out
xchg
sub
cmc
mov
fiadds
add
xchg
mov
test
add
daa
sbb
lods
out
mov
sub
scas
fisubl
sahf
add
mov
js
mov
sbb
inc
iret
push
jmp
inc
adc
jecxz
movsb
lea
lds
rolb
push
mov
pushf
jb
in
rorb
mov
mov
cmp
ljmp
sub
repz
test
dec
adcl
outsb
xchg
ss
stos
and
fsubrs
icebp
lcall
mov
add
push
fstpt
popa
pusha
fidivl
mov
js
pop
mov
jmp
mov
popf
cs
push
adc
cmc
adc
jle
frstor
ja
jbe
and
mov
or
addl
jmp
push
outsb
mov
pop
mov
push
push
cwtl
mov
push
sub
inc
pusha
mov
ficoml
lret
lcall
out
push
inc
popf
sbb
out
jle
clc
mov
shlb
sub
out
in
cs
mov
mov
subb
cli
jp
rorl
sarl
test
dec
lea
dec
add
jnp
testl
mov
push
ftst
fdivr
out
adc
adc
add
std
ret
je
das
and
into
fisubrs
and
outsb
sub
adc
jecxz
add
cmp
push
cli
inc
in
or
pop
hlt
jnp
cltd
and
sbb
aaa
xchg
push
outsl
cmp
adc
ja
adc
pop
lret
cmp
icebp
xchg
xor
jl
xchg
and
stc
jnp
pop
xor
mov
jge
jae
iret
pop
test
hlt
adc
and
and
mov
jnp
inc
outsl
out
and
out
mov
stos
or
aas
lahf
pop
jo
and
outsb
sbb
add
outsb
dec
lods
subb
lret
cld
jl
cmp
and
cmpsl
mov
shrb
sarl
aam
scas
out
js
lret
lock
mov
out
pusha
jbe
es
add
jmp
push
fdiv
dec
pop
loopne
jp
dec
mov
enter
sbb
rolb
mov
xor
dec
sub
mov
or
xchg
jp
add
addl
daa
xor
add
xchg
or
push
ret
js
std
mov
lcall
adc
pushf
decb
sbb
cli
lods
fcomps
js
leave
jg
pop
cli
mov
call
orl
or
jne
or
lret
stos
dec
insl
das
jne
ljmp
movsl
daa
pop
cld
pop
leave
insb
and
insb
popf
aad
arpl
out
enter
or
cmp
divl
in
sti
lret
push
jo
push
pop
add
fsubrs
mov
mov
mov
mov
clc
bound
icebp
rolb
rcrb
push
sbb
xor
inc
adc
jo
adc
sbbl
mov
ljmp
shrb
inc
mov
pop
xchg
or
mov
cmp
xor
aam
int
sbb
mov
mov
cmp
add
mov
mov
enter
fidivs
aaa
sbb
jne
aas
sar
jmp
bound
lods
in
outsb
xchg
test
xchg
cs
add
fidivrs
fisubrs
and
mov
pushl
mov
outsl
sbb
jo
nop
add
or
xlat
pop
cmp
testb
test
inc
fistpl
xchg
jmp
aaa
or
shr
dec
mov
xchg
jp
roll
imul
mov
push
add
mov
push
cmp
jecxz
and
adc
ret
sbb
cmpsb
inc
pop
leave
outsb
jg
jmp
and
adc
sti
adc
xchg
mov
or
mov
rcll
std
imul
ss
stos
test
enter
lcall
mov
and
adc
test
sbb
inc
sub
add
dec
mov
dec
int
add
sub
inc
nop
test
push
jle
xor
dec
sub
mov
jns
fimuls
jns
cmpb
js
jmp
mov
mov
dec
leave
das
movsb
sbb
movsl
sbb
outsb
popa
shll
fnsave
jle
pushf
jb
jle
and
add
divb
add
rcll
lea
add
sub
add
mov
ret
xor
idiv
inc
push
xchg
cmpsb
subb
and
testb
pop
rcrl
jne
mov
aam
adc
orl
ds
xchg
xchg
mov
add
cwtd
push
sbb
aas
imul
lret
jae
xchg
mov
dec
and
push
jns
fcoml
cwtl
repz
jl
bound
imul
fidivl
in
in
cwtl
xor
aaa
mov
mov
add
jg
xlat
mov
or
dec
push
rorb
xchg
xor
jae
mov
sbb
or
testl
clc
call
or
in
les
push
aad
in
stc
or
jl
cmp
push
adc
xlat
mov
adcl
mov
cmp
rcrl
push
ljmp
leave
jo
jecxz
iret
test
sub
test
or
inc
pop
addr16
push
in
rorb
movsl
inc
cwtl
ss
sti
adc
lret
inc
pushf
adc
xchg
inc
cmp
cli
push
cmp
inc
nop
daa
int3
stos
aaa
loopne
out
mov
scas
ds
imul
cli
xor
mov
inc
movsl
sub
xchg
adc
jp
test
xchg
pop
out
or
popf
pop
and
mov
pop
test
test
ljmp
mov
imul
insb
push
cwtl
es
ja
out
mov
outsb
stc
aas
pop
xchg
xlat
xor
jb
mov
xchg
pusha
sub
imull
cmp
push
or
jecxz
dec
pop
in
cmp
shr
jmp
jb
lea
pop
mov
aad
fsubl
out
push
xchg
fs
dec
lods
outsl
cmp
ja
aad
mov
cmpsl
jb
mov
loop
lds
mov
rolb
jecxz
bound
sub
push
dec
push
jae
cmp
xchg
xor
pop
xchg
incb
add
xor
popf
adc
shr
xchg
cmpsb
xor
fsubrl
mov
mov
add
stos
lret
push
inc
aas
int3
mov
iret
cmc
out
clc
nop
mull
pop
sub
je
test
jbe
les
or
out
add
mov
negl
xchg
rolb
nop
xlat
scas
pop
add
loopne
pop
pop
xchg
mov
movsb
loop
pop
cmpl
stos
adc
adc
int3
and
push
ljmp
daa
call
and
or
push
aas
xor
or
adc
out
cmp
mov
mov
out
or
dec
mov
frstor
cs
xchg
lds
mov
jnp
aaa
filds
mov
imul
cli
add
loop
scas
fidivl
les
les
in
sahf
inc
das
cmp
js
lcall
mov
pop
test
or
push
lahf
sub
loope
inc
in
push
test
mov
stos
ret
shll
inc
adc
jecxz
mov
jp
or
and
icebp
and
imul
flds
into
cmpsl
fdivrs
pop
cmpsl
jnp
xchg
lcall
inc
in
mov
cltd
jecxz
stc
cmc
rcrb
insl
adc
cmpb
icebp
push
mov
divb
add
mov
cwtl
mov
js
lds
adc
xchg
outsl
lods
xor
push
cmp
divl
cld
cld
dec
aas
push
es
and
hlt
pop
cltd
pop
inc
insl
out
out
loop
sbb
loopne
add
imul
aad
xchg
mov
fucom
xor
scas
mov
js
popf
pushl
or
xchg
xor
mov
xor
inc
out
outsl
dec
mov
mov
mov
cs
mov
adc
int3
fists
into
test
sbb
frstor
out
pop
adcl
rcr
leave
mov
insl
xchg
outsl
xor
xchg
jge
mov
outsl
sub
inc
sub
adc
pop
out
mov
rcr
out
icebp
lock
cmpb
rcr
stc
lock
xor
mov
outsb
xlat
sbb
cmp
jl
in
jg
push
out
mov
jns
int
fldt
orl
insl
or
add
add
mov
xchg
mov
leave
lret
repnz
js
scas
inc
fadds
out
mov
pop
je
imul
andb
ss
popa
sub
gs
ret
cli
xchg
or
call
ljmp
dec
push
sahf
dec
jns
or
fs
stc
out
sub
aaa
shrl
test
pop
mov
sub
dec
cmp
inc
xor
jne
xor
popf
jle
sbb
fcmove
dec
inc
adc
sub
int3
mov
negb
aaa
jae
xchg
in
movsl
and
and
cmp
dec
sub
loope
sub
cld
jnp
cmpsl
inc
sub
lods
arpl
xchg
mov
push
clc
and
jno
xchg
orb
adc
mov
arpl
push
fcmovne
cld
adc
push
dec
aaa
test
fwait
mov
or
les
mov
cmp
loope
mov
adc
sti
add
repz
jmp
out
sarb
sub
jae
push
adc
ds
addb
cwtl
pop
and
icebp
and
pinsrw
cmp
outsl
in
out
push
int
dec
dec
xor
int
jmp
push
xor
jge,pt
add
aam
popa
cld
jmp
sub
xchg
stc
pop
sub
and
es
lock
jbe
inc
pop
mull
xchg
gs
push
jge
mov
or
jmp
and
mov
mov
popa
push
sti
cmp
push
jns
mov
jno
xchg
or
incl
mull
std
lret
dec
mov
push
aaa
cld
mov
adc
out
hlt
add
lock
or
pop
push
lcall
xchg
push
xchg
daa
cwtl
jge
push
and
cwtl
pop
test
adc
mov
insl
movsl
cwtl
cmpsl
call
iret
ja
mov
int3
jecxz
cmp
insw
ljmp
ljmp
gs
aaa
push
sub
loop
pop
add
push
hlt
cmp
jae
mov
loop
pop
mov
rolb
mov
push
or
pop
lea
lock
shll
hlt
jae
inc
dec
ljmp
sub
adc
inc
data16
outsb
sbb
rorb
into
lods
and
andb
mov
or
xchg
sarl
mov
cmpsl
mov
aaa
aam
mov
sarl
jne
jo
pusha
mov
add
mov
add
insl
and
inc
dec
cmp
insb
loope
ffree
jle
xor
sbb
adc
bound
testl
das
mov
mov
aas
jle
push
add
mov
sub
push
int
jae
adc
jno
insb
pop
push
pop
jle
ljmp
jae
xor
lret
add
xor
dec
out
pop
mov
adc
call
or
and
pop
dec
repz
sbbl
call
popf
xor
dec
push
dec
daa
int3
ret
test
adc
scas
sahf
lret
pop
or
dec
push
decl
push
loope
or
fidivrs
xchg
subl
lods
dec
pop
or
adc
adc
inc
adc
jecxz
pop
sbb
adc
push
mov
mov
scas
fldcw
xlat
push
sbb
cmp
xchg
xchg
jns
hlt
popf
repnz
popf
adc
xchg
jmp
lods
addr16
faddl
dec
push
aaa
mov
xor
test
push
das
jecxz
gs
stc
push
data16
adcl
loop
popf
call
les
xor
xor
pop
adc
push
push
jle
outsb
and
fimull
pushf
je
pop
loopne
jl
jge
xor
lods
xchg
jl
cmp
mov
insl
dec
sbbb
lds
or
xlat
adc
mov
jle
dec
mov
cltd
ja
xor
insl
cmp
jge
lcall
popf
mov
dec
pop
fiadds
rolb
rcrb
fwait
dec
mov
les
cli
fucom
xchg
dec
mov
or
outsb
push
fs
ja
push
in
popf
inc
jl
pop
lahf
das
scas
outsl
and
jmp
and
cld
fs
fwait
mov
adc
fs
jmp
mov
sbb
dec
scas
jecxz
pop
fidivs
and
cmp
mov
fdiv
pop
fcmovnbe
mov
mov
cmp
sbb
lods
sbb
mov
dec
jecxz
xchg
pop
xor
pop
inc
out
ss
jno
fidivs
test
xchg
stc
add
jno
xlat
jo
fildl
cld
push
popa
in
add
or
roll
mov
pusha
out
xor
pop
dec
xchg
lods
cmp
in
or
jns
dec
jg
cmp
popa
mov
jge
les
out
sub
push
push
adc
push
fisttps
pop
nop
xchg
iret
xchg
mulb
cmp
dec
fwait
inc
adc
push
lret
inc
and
cli
sub
cmc
add
xor
fbstp
mov
cltd
sub
mov
xchg
jns
mov
out
jae
popf
or
pop
movsl
insl
mov
lahf
pop
jecxz
sahf
mov
movsl
xchg
xchg
sar
cmp
cli
orb
cmp
ret
test
dec
cmpb
xorb
jp
sub
and
cmpsl
jmp
push
mov
push
cmpsb
lahf
stc
test
cli
add
mov
cmp
inc
push
imul
lcall
mov
add
sub
sub
push
inc
mov
out
sbb
rcrl
aam
push
test
push
fwait
cwtl
xor
sbb
xchg
repnz
cld
mov
adc
dec
loopne
cli
int
sbb
push
mov
pop
or
cmp
xchg
loope
or
push
popf
out
cwtl
adc
lea
subb
ror
jmp
repnz
xor
cmpsl
lock
mov
out
dec
dec
or
xor
inc
in
sub
nop
lahf
adc
dec
jnp
inc
jns
cmp
mul
add
mov
mov
cmp
jg
mov
xor
movlps
clc
mov
stos
setbe
mov
xor
or
cmp
in
sbb
lds
push
cmp
pop
shl
mov
adc
sub
out
stos
addb
xor
xchg
shll
push
lods
das
xor
fldl
lcall
cmp
jg
decl
sbb
sbb
stc
sbb
popf
jb
mov
mov
inc
inc
sbb
inc
xor
and
rep
std
xchg
sbb
or
add
in
jl
adc
jg
fst
mov
mov
mov
lret
fmul
xchg
popa
out
insb
sub
mov
cmc
mov
ss
lds
dec
pop
loope
adc
lock
xchg
add
xor
sbb
xor
clc
jb
mov
movsb
cmp
xlat
pop
es
fbld
lret
in
mov
mov
inc
push
jb
cmp
fcomps
jl
je
ja
mov
popa
xor
dec
or
mov
xchg
addr16
sub
mov
push
cwtl
in
mov
sahf
mov
out
shlb
mov
mov
mov
data16
outsb
push
add
adc
dec
mov
sbb
sahf
sub
scas
lock
shl
addr16
in
or
hlt
sub
mov
sarl
loope
lea
adc
jns
pop
push
cs
js
mov
jg
in
jbe
adc
ds
jmp
cmc
inc
xor
adc
lcall
mov
icebp
fnstenv
mov
push
mov
add
push
xchg
push
fdiv
icebp
cmovne
mov
pop
dec
xchg
pop
ficoms
pop
stc
imul
test
push
ret
mov
adc
xlat
idivb
adc
in
dec
lea
mov
pop
mov
ret
cmp
inc
pop
js
pop
stc
inc
push
and
xchg
and
mov
in
jnp
and
jge
mov
lcall
imul
sbb
cmp
push
stc
lods
lcall
or
ds
push
pop
pop
ret
cli
xchg
test
idivb
lods
lret
lcall
cltd
cmpsl
push
add
push
push
adc
mov
repz
jnp
mov
jge
aam
scas
ja
loope
and
mov
das
jbe
negb
lock
repz
clc
push
inc
cmpsl
mull
mov
negb
lcall
es
adc
test
cmp
jmp
xchg
xchg
push
cmp
outsl
pushf
push
je
jg
cmpsl
dec
pop
add
add
jo
pop
pop
clc
fistpl
rorb
push
mov
jae
add
sti
outsl
scas
in
xchg
mov
imull
jle
pop
cmp
or
and
repnz
adc
inc
mov
pop
dec
std
mov
and
scas
mov
dec
mov
pop
adc
xchg
lock
and
test
ret
sub
sbb
add
insl
pop
outsl
in
aad
xor
dec
jnp
test
jg
xchg
scas
insl
inc
out
push
testb
mov
sarb
cmpsl
mov
jp
and
jg
stos
pushf
push
pop
or
push
xchg
pop
add
in
xchg
pop
push
mov
or
lret
int
push
nop
int3
xchg
outsb
popl
pushf
xchg
pop
or
mov
xor
and
mov
push
pop
or
scas
mov
inc
fldl
xchg
arpl
dec
fidivrl
loop
cmc
fmul
ljmp
pop
sbb
lret
cmp
or
int3
and
test
xchg
cld
aaa
or
jne
push
mov
xchg
jnp
push
imul
mov
mov
shlb
jbe
into
movsb
nop
mov
mov
ja
out
mov
cmp
mov
shrl
icebp
flds
repz
xor
fadd
out
out
sbb
ss
stos
stc
nop
mull
outsb
jo
sbb
or
sub
insb
dec
cmp
lret
inc
mov
or
pushf
mov
mov
enter
mov
shll
jmp
test
or
mov
mov
pop
add
pusha
std
mov
hlt
loope
jle
xor
aas
rclb
adc
aas
dec
loopne
adc
test
xchg
xchg
pop
ficomps
scas
sub
push
test
sbb
mov
push
mov
cmpsl
inc
rorl
mov
fdivs
mov
mov
push
mov
test
mov
jns
in
xor
mov
pop
int
pop
jb
out
int
std
in
xor
out
je
lea
aad
aas
ds
scas
xor
push
imulb
ret
mov
mov
mov
outsl
inc
gs
cmpsl
add
push
inc
lret
mov
aaa
sti
fidivrl
inc
mov
cmp
inc
xchg
in
lcall
int3
push
repnz
push
lahf
fadd
addl
shr
mov
add
icebp
int
jl
jnp
adc
sub
xchg
or
loope
mov
sbb
or
xor
xchg
js
add
xor
addl
pop
test
mov
int
popf
mov
pop
rorl
rcrb
int
add
shll
cmpb
popf
push
les
ret
sarb
cmp
out
and
imul
xchg
hlt
push
add
jbe
mov
imul
int3
in
pop
xor
cmpsl
push
mov
out
mov
sbb
jl
xor
fidivl
cmp
rcll
stc
xlat
mov
aam
cmp
jo
mov
jnp
jbe
test
and
fadds
xchg
jmpw
stos
and
scas
cmp
cld
xlat
xor
mov
dec
fnstcw
outsb
mov
ja
sbb
pop
test
add
and
cltd
cmp
bound
jo
sti
cmp
ja
or
lock
dec
add
and
lock
jnp
sbb
mov
ret
std
mov
inc
pop
jbe
rolb
rcll
mov
in
jmp
xor
ljmp
popa
rclb
ss
and
lea
pop
add
stos
clc
sbb
mov
pop
jb
cwtl
mov
fdivrl
jle
push
xchg
outsb
dec
cmpsl
mov
dec
push
daa
stc
inc
out
popf
or
fidivrl
andb
loope
cwtl
dec
movsb
lret
xchg
ds
dec
pop
adc
inc
gs
xchg
push
sub
push
call
mov
xor
adc
outsl
jp
int
daa
insl
inc
data16
push
cli
in
in
push
test
dec
rorl
xchg
mov
sar
ljmp
dec
pop
roll
add
sub
pop
or
ds
aam
out
push
aam
scas
mov
xchg
addl
sub
repz
in
insb
hlt
sub
adc
inc
frstor
push
mov
or
jbe
mov
lcall
ret
jno
mov
mov
fisttps
sub
add
add
outsb
das
hlt
fldt
rcrl
inc
cmp
imul
gs
jle
outsl
jl
inc
js
cwtl
fcoml
mov
cmp
mov
sbb
jle
xchg
in
sub
imul
ffree
rcrb
les
jl
and
mov
stc
xor
insb
sbb
add
cltd
xchg
int
jp
cmp
subl
xchg
pop
inc
jg
dec
pop
loopne
or
dec
cmp
jg
jno
movsb
xchg
popa
arpl
loop
push
cmp
aad
cmp
je
out
add
dec
cmp
hlt
jnp
inc
bound
sub
cmp
mov
shl
inc
loopne
lods
movaps
rcrb
and
loope
xor
pop
pop
in
movsl
cmpsl
jl
jl
fnsave
std
mov
lret
and
mov
lods
inc
lods
outsl
add
inc
into
mov
pop
cltd
sub
xchg
aaa
out
int
sbbl
stc
mov
mov
pop
lods
cmp
mov
aaa
popa
lock
xor
sbb
xchg
push
mov
mov
enter
mov
and
dec
cli
push
outsb
aad
lahf
dec
fcompl
add
dec
das
mov
cmp
repz
and
pop
jae
lock
insb
sbb
xchg
jle
push
pop
mov
and
jnp
enter
lods
lods
scas
cld
or
mov
push
stc
mov
mov
bound
dec
mov
arpl
and
leave
or
loopne
adc
add
mov
loop
dec
inc
int
inc
xchg
movsb
nop
cltd
aas
dec
ja
les
xchg
lcall
shlb
adc
mov
add
fwait
cli
xor
in
xchg
sub
popl
add
loope
test
daa
sarl
test
inc
cmpsl
xchg
dec
mov
loope
popa
dec
lds
dec
std
rcrb
outsl
aaa
jnp
bound
ja
jno
xlat
mov
push
pushf
fs
jmp
pop
cmpsb
addr16
jns
aas
in
sub
nop
repnz
cwtl
xchg
in
xchg
in
mov
add
push
xchg
mov
das
sahf
push
mov
mov
int
inc
mov
and
in
test
arpl
mov
sbb
pop
sbb
stc
jnp
jne
push
xchg
and
and
enter
pop
in
and
push
cltd
lods
sub
xchg
adc
ds
je
jg
xchg
sub
jnp
xchg
jl
into
sti
inc
repnz
mov
stc
aaa
into
adc
dec
sbb
aas
data16
xchg
hlt
ret
dec
icebp
and
xchg
outsl
les
lods
push
xchg
mov
lods
fwait
sahf
dec
push
adc
mov
icebp
cmpsl
pop
xchg
cmp
xor
cmpsb
add
loop
mov
mov
fmulp
icebp
in
imul
ret
jae
fdiv
adc
push
andl
jne
nop
aad
cli
push
lahf
stc
flds
pop
dec
mov
cmp
ss
je
xchg
div
add
dec
int3
adc
popa
pop
mov
fisttpll
mov
mov
pop
push
mov
pusha
test
addr16
pop
rorb
fwait
jb
scas
lds
clc
out
movsb
dec
rcrl
jno
test
popa
incl
mov
dec
jnp
enter
sub
icebp
inc
cmp
into
sbb
shlb
ja
push
fmul
ja
xor
cmp
stc
dec
mov
dec
icebp
enter
jecxz
pushf
inc
into
fwait
adc
and
sub
jl
and
add
jp
push
fs
popf
daa
popf
dec
dec
bound
arpl
xor
in
sub
sub
inc
lds
ja
rcll
aaa
addr16
daa
test
cmp
xchg
scas
cmp
mov
int3
xor
insb
adc
aas
pop
inc
sbb
lahf
dec
push
orl
xlat
cmp
and
shlb
shlb
cmp
stos
sbb
imul
cmpsl
cli
sahf
jne
dec
icebp
inc
js
push
and
call
sub
mul
stos
xorb
add
imul
fcomps
out
fsubp
lret
mov
add
lds
inc
outsl
scas
sbb
pop
jecxz
in
adc
outsl
fwait
jge
popf
dec
scas
dec
shrb
lea
lea
pop
mov
repnz
add
clc
movsl
cmp
pop
sahf
mov
sub
mov
push
xlat
lods
mov
pop
inc
decl
pop
out
mov
or
aad
jge
insl
and
and
stos
out
xor
fs
and
sbb
sbb
pop
mov
push
ja
cwtl
notl
rcrb
sti
add
lahf
xchg
out
mov
push
pop
sbb
in
testl
xchg
add
push
inc
sbb
cmpsl
je
xchg
inc
dec
sahf
ficomps
mov
imul
jge
sbb
fdiv
sub
xor
push
fdivr
test
aas
jle
cmp
cltd
addb
jl
xchg
mov
add
push
inc
mov
inc
dec
adc
or
jno
sti
xchg
popa
jne
aas
pop
popa
scas
mov
fldcw
add
xchg
mov
xchg
loope
int
xchg
mov
iret
loop
rcll
mov
push
jne
negl
mov
jg
xor
hlt
cld
and
lcall
loop
adc
xchg
inc
sbb
or
lahf
test
dec
lret
les
pop
lods
in
xchg
cld
jns
div
sub
pop
xchg
push
scas
dec
ljmp
and
dec
and
pop
and
cmp
adc
or
xor
lods
fs
mov
mov
mov
pusha
mov
rorb
jle
mov
mov
mov
push
sub
outsb
insl
inc
jbe
and
outsb
fisttpl
cld
and
mov
pop
ja
jg
rcrb
aam
aaa
gs
xor
fwait
push
enter
mov
into
xor
mov
mov
or
adc
mov
cmc
sbb
xor
mov
add
mov
xchg
xor
stc
daa
cmp
inc
loopne
mov
sbb
enter
adc
mov
in
lods
add
add
sub
mov
test
jmp
data16
hlt
aas
loopne
pop
sbb
jno
inc
pop
pop
pop
pop
int3
dec
xor
das
or
jae
cwtl
sub
movsb
lea
nop
sahf
mov
lret
stos
push
xor
jb
insb
mov
sbb
scas
sbb
xor
pop
adc
sbb
mov
sahf
add
sub
cmp
jno
cmp
fimull
xor
imul
dec
inc
std
inc
fisttpll
in
push
or
adc
lock
js
push
ret
int3
mov
insb
mov
xchg
andl
and
jg
in
in
inc
add
lods
stc
scas
gs
and
std
fisubrs
or
jecxz
fisubs
insl
add
loopne
ljmp
mov
jae
pop
xchg
les
or
push
mov
lretw
xchg
cmp
inc
repnz
iret
add
lock
negl
insl
jge
ljmp
lock
pop
push
dec
ds
cmpsl
xlat
sub
aad
in
dec
dec
ljmp
fimull
pushf
inc
fdivrs
cmp
das
jle
jae
leave
push
xorl
jae
imull
jmp
xchg
cs
push
mov
push
movl
lea
aad
jnp
shll
push
in
xchg
sbbb
jmp
sbb
cmpsl
cld
lds
mov
mov
leave
mov
mov
inc
push
gs
mov
jbe
sbb
jecxz
fs
leave
popf
subl
pop
in
rorl
cmc
insb
pop
push
jae
sti
sbb
pop
jmp
lea
shll
sbb
rorb
xor
xchg
add
cmp
jo
out
add
popa
int
mov
dec
xor
xchg
push
fdivs
fnstcw
jmp
repz
data16
call
fstpt
testl
outsb
lcall
mov
ret
mov
pop
imul
aaa
fwait
int3
cli
sahf
and
inc
mov
iret
pop
or
nop
stc
movsb
shl
out
imul
jle
jo
jnp
xchg
idivb
adc
jae
xor
mov
dec
cmp
jo
ror
sbb
or
sub
or
jmp
mov
dec
and
jbe
lahf
jns
push
xlat
jo
inc
ds
sub
sarl
jg
pop
or
cmp
xor
mov
mov
cli
push
adc
dec
sbb
icebp
mov
mov
push
add
sar
cmp
adc
addr16
js
jae
loop
xchg
in
push
xchg
and
xor
push
xor
mov
test
or
cli
xchg
and
mov
jnp
pop
cmp
popf
cld
adc
clc
lds
sbb
call
cmpsl
loopne
mov
cmpsl
stos
pushf
outsb
xor
pop
popa
cmp
arpl
sub
aaa
xchg
sti
inc
xchg
inc
into
pop
fadds
dec
lahf
adc
push
addr16
or
push
fdivrs
jecxz
pop
lock
jg
imul
inc
data16
into
adc
insb
leave
mov
loopw
add
hlt
scas
sub
adc
clc
std
jo
daa
hlt
and
popa
rolb
cmc
ds
mov
out
lret
mov
fidivrl
pop
nop
fwait
ret
fdivrl
sub
scas
pop
sbb
pop
inc
jnp
or
lods
repz
imul
mov
dec
dec
adc
sub
in
jne
lcall
stos
push
sbb
sbb
adcb
xchg
mov
cwtl
inc
sub
mov
icebp
rorb
imul
leave
call
rcl
lcall
mov
incb
push
inc
push
mov
lea
mov
clc
mulb
jbe
into
sbb
mov
scas
jmp
movsl
push
int
es
insb
pop
xor
ret
adc
dec
enter
cwtl
or
push
cwtl
fbstp
jo
scas
repnz
pushf
dec
cltd
inc
pop
sub
add
out
sub
inc
popf
ds
testb
hlt
cmc
or
xchg
pop
mov
jp
mov
mov
push
or
jns
mov
mov
cmp
in
mov
lea
cmc
cmp
lahf
pop
cmp
shlb
cmp
add
sub
mov
adc
les
sbb
push
popa
test
insb
cmp
jo
les
push
cmp
adc
icebp
mov
into
bound
mov
and
imul
inc
inc
cmpsb
aad
icebp
xchg
or
sbb
rclb
mov
js
xor
dec
stc
add
add
fimuls
js
rdtsc
loopne
push
pop
inc
mov
inc
push
inc
and
mov
mov
aaa
popf
cld
push
ljmp
hlt
stos
mov
pop
xlat
push
inc
lcall
dec
cmp
sub
pop
repnz
out
call
leave
pop
mov
cltd
mov
rcrb
or
das
cwtl
cmp
adc
mov
cli
rorb
inc
nop
adc
arpl
mov
jge
jmp
scas
pop
sub
cmc
adc
arpl
cltd
cwtl
daa
insl
sub
pop
stos
outsl
xchg
fs
out
hlt
and
fneni(8087
pop
mov
mov
mov
cmp
int3
popa
xor
mov
jp
aam
lea
mov
mov
shrl
xchg
data16
cld
xor
into
rcrl
scas
popf
push
nop
pop
aaa
or
sbb
sbbl
fstpl
pop
mov
dec
in
sahf
cmpsl
jecxz
mov
mov
push
iret
and
fsubp
adc
or
aad
jbe
lahf
and
cmp
in
hlt
fstps
popa
insl
xchg
pop
mov
adc
inc
mov
cmp
loope
add
jne
icebp
or
or
dec
sahf
fidivs
pop
out
adc
pop
dec
adc
pop
add
popa
fs
sarb
mov
dec
adc
scas
aaa
and
fldl
pop
adc
mov
push
pop
add
cs
xchg
dec
add
cs
in
push
in
dec
mov
pop
mov
insb
xchg
fidivrl
stos
jno
lock
mov
push
xor
sub
mov
mov
out
cli
inc
lods
ljmp
clc
mov
add
iret
add
adcl
dec
cmpsb
mov
push
inc
ret
fwait
push
iret
decb
sbb
loop
mov
or
hlt
aad
sbb
bound
mov
push
xor
arpl
push
enter
js
pop
loop
jnp
stc
scas
jne
adc
sti
xchg
add
loopne
mov
iret
ja
inc
shlb
inc
xor
mov
fldenv
and
add
pop
push
orb
sub
or
pop
repz
push
mov
fs
cmp
scas
mov
addr16
dec
xor
adc
push
int3
mov
jg
mov
jmp
pop
cmpsb
push
out
shll
outsb
xor
jb
mov
xchg
sbb
test
rol
jo
fwait
lea
inc
je
or
sub
add
mov
jmp
test
pop
xchg
pop
scas
jle
jle
sbb
cwtl
ret
push
jo
mov
int
mov
adc
sub
cmpsb
bound
shr
pop
cmpsl
pop
ret
mov
out
lods
mov
inc
repnz
inc
jo
arpl
je
inc
pop
stos
cmpsb
es
fnstcw
or
jno
out
mov
pusha
cmpsl
mov
or
mov
or
fsub
shrb
cltd
pop
lock
add
push
add
push
add
or
cmpb
add
data16
or
pop
lods
nop
add
inc
repz
ret
subl
adc
sub
cmc
scas
lock
mov
int3
xchg
lock
inc
dec
push
add
sub
xor
lret
nop
add
cmp
mov
ror
xor
jg
pusha
inc
jns
mov
push
aad
cmp
mov
outsb
mov
sbb
in
push
je
shll
stos
es
push
jecxz
idivb
shll
stos
lcall
insl
ja
pop
push
testb
adc
testb
and
pusha
jno
xor
jnp
dec
cld
jg
lcall
ret
cmpsl
das
cmp
hlt
js
jae
iret
mov
push
cmp
cmp
xchg
test
xor
sbb
cli
mov
imul
and
cld
test
cmp
cmp
mov
adc
and
dec
loope
add
and
stc
sub
fstpt
mov
stos
repnz
jecxz
adc
push
int
fisubl
mov
je
or
inc
cmp
adc
adc
add
sahf
jae
xor
inc
or
data16
icebp
mov
in
mov
cltd
es
push
in
dec
outsb
clc
idivl
mov
sub
lods
mov
fmull
jno
mov
xchg
bnd
push
and
inc
inc
sahf
add
pop
and
mov
insl
int
add
xor
loope
mov
pop
js
mov
pop
and
mov
and
dec
jno
call
inc
data16
mov
ja
daa
outsb
or
fidivrs
test
cmp
and
dec
sub
lret
testb
cmp
dec
or
test
dec
enter
minps
lea
subb
dec
xor
je
enter
mov
mov
xchg
lds
rolb
jo
in
shr
stos
cmp
stc
push
pop
adc
cld
into
pop
push
in
cwtl
shl
loope
sub
add
mov
and
clc
int3
es
inc
nop
adc
or
aam
push
popf
add
pop
jne
mov
inc
pop
stos
mov
xor
popf
sub
cmpl
cli
and
jge
in
push
test
and
inc
sbb
push
aas
imul
sbb
sahf
adc
incl
dec
pop
lret
or
jmp
mov
jno
das
fbld
and
cmp
add
cmp
int3
unpcklps
mov
cli
js
ja
loop
sbb
lods
adc
and
mov
mov
mov
cmc
sub
jmp
xlat
dec
and
mov
inc
aaa
dec
rclb
popf
add
andl
sbb
and
addl
mov
lcall
cmpsl
test
popf
inc
and
pop
stos
sub
mov
lea
sbb
std
sbbb
cmp
fwait
add
or
aam
mov
jb
inc
daa
jg
loop
into
add
xorl
dec
xorl
push
mov
mov
js
ret
popa
test
or
jmp
jno
sarl
dec
cmp
xor
ret
adc
pop
jo
pop
mov
fiaddl
adc
test
xchg
sub
cmp
bnd
cwtl
stc
pop
xor
push
cmpsb
push
and
int
std
rclb
jo
xchg
js
nop
mov
mov
in
pop
lcall
mov
lock
inc
sti
pop
adc
sub
aaa
jae
int3
adc
ljmp
jecxz
pop
adc
push
jecxz
sbb
mov
mov
cmp
insb
mov
pusha
ret
lods
out
and
in
repz
sub
icebp
notb
pavgw
pusha
fisubrl
sti
jp
jo
mov
in
mov
xlat
cmp
lock
jg
cmp
and
ja
add
pushf
pushf
out
or
test
inc
pop
inc
and
dec
fisttpll
push
sbbb
popf
xchg
notb
ds
inc
adc
sbb
pusha
mov
ficompl
aaa
or
push
mov
pop
adc
mov
lds
out
imul
push
fimull
adc
sti
testb
fidivrs
into
jge
jle
negl
aam
imul
in
outsb
addr16
mov
iret
adc
insl
or
stos
cwtl
inc
into
push
cmc
add
shrl
mov
std
push
fisttpl
fsubrl
mov
stc
cmp
xchg
and
rcll
sbb
mov
xor
inc
jmp
jbe
cmp
in
add
iret
mov
dec
aas
in
push
test
push
jae
jb
fisttps
mov
ljmp
jg
popl
mov
pop
cmp
mov
dec
mov
adc
fcoms
iret
mov
shlb
and
repz
popa
jb
mov
push
pop
cmp
jae
scas
inc
sahf
shlb
mov
sub
ss
aam
lods
sub
int
and
daa
adc
push
je
std
inc
lret
shl
mov
cmp
adc
or
sti
mov
nop
mov
cltd
or
mov
shr
int
xchg
ror
inc
jo
xor
add
mov
stc
stos
jae
push
fisttpl
decl
xchg
mov
clc
push
int3
cmpsl
sub
imul
in
sub
pushf
js
ja
ret
xor
mov
xor
ret
aas
icebp
mov
cltd
xchg
sub
pusha
cltd
add
mov
cmp
jecxz
mov
jno
push
lea
dec
cmpsl
les
inc
repnz
push
and
add
gs
popa
cmp
sahf
sbb
jp
xor
lock
jo
scas
divl
xor
sbb
bound
and
stc
sti
test
dec
sbb
push
clc
xor
pop
sbb
push
cs
aaa
jecxz
inc
insb
and
mov
in
addr16
shl
xor
scas
repz
mov
and
push
cmpb
imul
add
imul
dec
adc
fstps
test
out
mov
in
xchg
dec
inc
dec
shrl
mov
xor
fsubrs
ret
jmp
loopne
out
add
jne
ret
into
scas
push
sub
cmp
clc
shlb
mov
js
dec
cs
ljmp
xor
and
js
je
mov
loop
pushf
push
imul
in
aas
out
dec
int3
cmp
sub
sbb
fisubrl
test
pop
xchg
inc
test
xlat
pop
aas
cwtl
push
insl
call
fadd
add
lcall
and
xor
insb
pop
insb
dec
cmpsl
inc
outsl
stos
xchg
and
cmpsl
inc
lock
test
movsb
mov
mov
outsb
jnp
roll
jmp
mov
scas
xor
xor
cmp
fstpl
in
gs
inc
mov
test
leave
loope
rolb
mov
outsb
jo
jnp
adc
push
adcl
mull
inc
jle
cltd
movsl
adc
lods
xchg
and
std
mov
pop
lahf
jmp
sub
pop
mov
dec
xchg
or
mov
lret
mov
and
pop
pushf
or
repnz
xlat
mov
fwait
imul
push
push
xlat
das
lock
scas
pop
push
push
dec
test
arpl
mov
flds
cmp
test
mov
jge
nop
pop
add
cmp
xchg
cmp
jle
xor
arpl
orb
cmp
xchg
cmp
jmp
jecxz
shld
mov
and
icebp
add
sbb
fcoml
pop
push
and
cmp
sub
lods
sti
in
repz
cmp
cmp
mov
lods
mov
fisubrl
and
xchg
jae
lods
js
jmp
js
pushf
test
sbb
add
mov
or
cltd
adc
idivb
mov
test
lods
lea
sub
les
ret
xor
aas
dec
mov
fs
mov
xor
push
inc
dec
jle
sub
ja
fs
divb
packsswb
push
jns
inc
pop
cmp
dec
je
popf
lods
or
imul
xor
int
inc
sbb
ja
neg
mov
jmp
clc
pop
mov
clc
xchg
arpl
outsl
mov
cmpsb
je
or
orb
pop
out
push
movsl
sub
fmul
dec
add
sbb
dec
mov
jns
and
cwtl
fldt
stos
mov
sbbb
adc
xchg
into
mov
sbb
fwait
dec
jo
or
mov
cmpsl
jecxz
xchg
sbb
nop
addl
pushf
jge
int
clc
xchg
cmp
loope
fnstsw
xor
add
popa
cmp
adcb
dec
ret
stos
sarl
std
out
or
mov
xor
test
cwtl
inc
or
gs
push
insl
pop
ret
add
sub
hlt
sub
add
cltd
mov
mov
xor
stc
iret
mov
pop
pop
call
mov
rcll
test
mov
ret
fwait
mov
out
dec
cmc
and
xchg
ljmp
pop
lea
imul
ret
stc
movsl
push
test
in
popa
ficomps
add
mov
push
mov
inc
les
xor
aad
pop
mov
out
mov
jg
sub
cltd
sub
fxam
or
pop
out
or
outsl
dec
and
add
inc
jno
insb
jl
jne
jl
test
icebp
push
adc
cmp
add
pop
mov
push
or
pop
hlt
add
xchg
xor
adc
or
or
pop
bound
inc
jb
sub
inc
mov
sub
in
sub
sbb
dec
ljmp
ffreep
jg
sub
loope
inc
push
psubsb
inc
sub
or
nop
mov
sub
or
cmp
jae
pop
lret
sbb
cltd
cmp
inc
pop
imul
inc
aas
pop
inc
ret
sub
popf
jnp
sub
or
rorb
jno
ja
add
mov
adc
sub
sbb
mov
pop
arpl
shufps
mov
call
out
push
in
push
ljmp
xor
icebp
hlt
mov
xchg
mov
cltd
mov
mull
or
rorb
sub
std
inc
xlat
pop
mov
rclb
dec
pop
movsb
pop
adc
push
sub
test
gs
and
mov
xor
shrl
leave
cmp
int
setne
fstpl
mov
xchg
aam
jl
cli
stos
iret
stos
jo
test
jo
xchg
in
cmp
lock
or
dec
xchg
das
jbe
das
and
mov
mov
mov
inc
fcompl
adc
cmp
xchg
cmp
and
jne
nop
inc
inc
mov
mov
xchg
adc
sbb
lds
mov
cmp
movl
adc
clc
pop
outsb
test
jmp
add
dec
push
add
pop
xor
pop
je
push
ffreep
adc
mov
push
dec
xor
xchg
push
push
aad
xchg
inc
cltd
shlb
cs
mov
and
jl
push
fisttps
mov
jp
aad
jb
jle
mov
imul
sbb
cmp
xchg
adc
xchg
lcall
and
gs
test
in
test
aas
bound
dec
dec
fnsave
cmpsb
inc
xor
mov
pop
xchg
mov
ficoms
adc
and
dec
fwait
arpl
gs
test
pop
jne
pop
into
lret
pop
inc
les
sbb
cltd
jle
imul
std
sbb
adc
xchg
sbb
or
test
in
ficomps
test
and
lea
ja
jmp
or
mov
mov
scas
imul
roll
mov
xor
andb
pop
roll
cmp
sbb
jl
loopne
mov
mov
fidivl
xor
clc
fiaddl
jae
and
xorb
push
jnp
cld
pop
xchg
sbb
lods
clc
jge
and
add
lret
dec
fsubrl
lods
cs
jb
or
push
or
enter
fwait
push
push
jns
or
adc
filds
pop
cwtl
mov
sbb
mov
pusha
pop
cmpsl
xor
pop
out
add
push
and
dec
sub
cld
jp
dec
jp
loop
pushf
scas
or
mull
mov
mov
fnstenv
sub
jne
das
popl
jnp
int3
sbb
push
data16
mov
icebp
jmp
subb
das
add
call
mov
dec
inc
mov
push
jecxz
mov
mov
rcrl
mov
aad
in
ror
arpl
pop
dec
je
xor
add
pusha
jmp
imul
sbb
loop
clc
filds
cmpsl
sub
mov
test
inc
xor
pop
mov
pop
cld
stc
push
inc
ds
or
jae
lahf
lea
out
xchg
mov
dec
jl
jb
mov
test
jl
xor
mov
ljmp
gs
pop
jne
lods
pop
lret
sbb
imul
cmc
or
push
dec
int3
repnz
sub
cld
xchg
rorl
xchg
mov
sbbb
pop
dec
xchg
stc
jae
les
inc
push
dec
xchg
imul
std
xor
xchg
inc
cmp
ret
mov
out
mov
iret
sub
sub
in
sbbl
inc
mov
jb
lret
test
cs
fstpl
jg
add
xchg
nop
add
push
dec
scas
outsl
adc
fbstp
push
pop
pop
into
jnp
inc
adc
sti
cmc
cmpsb
ss
dec
out
cld
mov
sbb
data16
sub
sarb
rorb
adc
push
imul
cltd
daa
aaa
push
mov
bnd
mov
inc
fnstenv
stos
scas
lods
push
cmpsb
push
dec
fdivrp
addb
movsl
xor
sti
xor
divps
rorb
jb
push
out
mov
mov
or
sub
pop
shrl
in
add
test
push
inc
test
cld
and
fwait
jmp
dec
dec
inc
pop
pop
into
fidivrl
mov
movsb
stos
add
add
mov
stc
stc
std
push
push
cwtl
mov
pop
rcr
jb
lcall
in
or
jo
lock
mov
test
lret
insl
cwtl
bnd
add
pop
cli
xor
mov
idiv
push
addr16
es
movsb
sbb
mul
xor
xchg
mov
in
pop
imul
mov
scas
jne
jae
cs
add
inc
dec
popa
xchg
rdmsr
push
sbb
xchg
mov
cmp
add
stc
or
mov
mov
scas
inc
lret
mov
sbb
pop
lcall
sbb
mov
mov
mov
jecxz
mov
push
repnz
mov
pop
fdivl
test
xchg
xchg
jo
or
mov
mov
mov
rolb
ljmp
rclb
lret
jns
inc
pop
lret
push
sub
push
sub
mov
pop
lea
adcb
adc
int
dec
loopne
imul
iret
nop
les
sub
push
insl
das
mov
adc
jg
rcll
fdivl
addl
inc
outsb
dec
test
outsb
jp
lds
call
adc
push
scas
lods
inc
jb
shlb
xadd
cwtl
pushf
inc
faddl
test
lcall
adc
mov
mov
jo
loopne
in
orl
lret
jns
fistpl
jmp
mov
push
xor
cmp
push
imul
pop
sub
push
mov
fmull
js
pushf
push
addr16
fidivrl
outsl
bt
stc
lds
add
fnstcw
lds
jno
roll
arpl
or
arpl
inc
ss
sub
daa
pop
pop
or
fwait
sub
outsl
add
push
mov
lods
mov
adc
leave
add
pop
aam
mov
inc
jne
sbb
add
lock
push
mov
mov
outsb
addr16
inc
scas
mov
testb
andl
inc
lret
or
addr16
fimull
fcomi
xchg
mov
aaa
and
mov
mov
clc
rcrb
fs
test
inc
push
jnp
imul
push
hlt
fwait
insl
rorb
mov
cld
jp
sbb
add
jg
cmpsb
mov
outsw
adc
imul
mov
mov
das
lds
cltd
test
ror
add
dec
icebp
pop
or
jmp
loop
xor
test
addb
lods
and
xor
dec
in
xchg
aad
or
pop
addb
xor
mov
lds
pop
sbb
jbe
fsubr
xchg
loopne
mov
cmp
mov
cld
aam
and
imul
sub
push
ja
shlb
inc
les
mov
sbb
jl
push
pushl
mov
adc
ret
ret
dec
mov
jmp
ds
leave
lods
mov
icebp
pop
leave
aaa
repnz
sub
lods
iret
sub
mov
cmp
push
and
outsl
inc
xor
sub
lods
insl
add
or
mov
xchg
movsl
out
movsb
adc
dec
cli
divb
or
sbb
inc
mov
add
add
in
seto
jo
fwait
imul
insl
mov
setg
pop
xor
loopne
fwait
push
xor
hlt
inc
lahf
push
daa
pushf
iret
stc
insb
je
std
je
test
orb
xor
in
flds
push
jae
scas
test
mov
sbb
cmp
loopne
or
cmp
pop
and
outsb
loope
cmp
dec
in
xchg
sub
xchg
addl
mov
add
fstps
mov
mov
sahf
xchg
sti
sub
dec
mov
mov
cs
adc
push
inc
inc
or
in
jno
out
mov
lds
fiaddl
sbbl
iret
xor
shl
fnstcw
sub
dec
cli
adc
or
push
cmp
scas
inc
pusha
inc
jns
pop
jno
pushl
cs
push
add
hlt
jg
pop
adc
adc
sbb
inc
cmp
cmp
jno
clc
or
push
cltd
inc
dec
fidivs
push
ljmp
add
pop
pop
xchg
sahf
pop
lret
mov
adc
ror
lea
dec
push
push
push
data16
and
and
jb
xor
mov
lcall
xor
mov
aad
cld
test
xor
xor
rorl
push
mov
pop
js
out
stos
jbe
arpl
scas
js
roll
push
and
dec
loopne
sbb
outsb
and
push
xor
fimull
insb
sbb
push
mov
xor
sub
push
push
push
sub
sub
push
nop
xor
icebp
lock
test
test
movsl
mov
test
test
popf
add
popa
jae
push
or
adc
and
dec
cmpb
add
cwtd
cld
call
mov
leave
sar
arpl
shll
insl
push
insl
push
pop
movsl
jae
cld
les
xor
xchg
cmp
test
ret
adcb
mov
xor
mov
or
ja
insl
inc
int
js
cld
sahf
add
and
inc
lahf
test
fbstp
inc
test
sbb
enter
jns
cmc
sub
insl
add
mov
push
pop
add
pop
pop
lock
cmp
gs
sub
jle
xlat
jmp
pop
lret
sub
add
add
lock
cmc
push
lret
inc
push
inc
mov
fildl
stos
sbb
lods
cld
in
in
test
cli
les
lods
xor
add
hlt
mov
xchg
je
dec
adc
test
loope
cmp
fisubrs
xlat
dec
push
jecxz
pop
inc
push
jne
aad
cli
out
mov
imul
call
mov
into
pop
pop
jns
sahf
or
rorb
adc
aas
loopne
lds
rorb
pop
icebp
pop
adc
nop
scas
ret
xchg
clc
xor
clc
dec
mov
or
in
sub
std
and
xor
outsl
es
aaa
ds
repz
push
jne
xor
rcrl
pop
cld
push
push
xchg
shlb
mov
iret
xor
loop
mov
movsb
cmp
popa
push
fisttps
testb
fists
push
pop
imul
xchg
dec
and
into
repnz
std
adc
notl
xchg
adc
sarb
es
push
es
pop
sahf
or
xor
subb
loope
and
lods
popf
out
cmc
aad
arpl
pop
sub
add
xchg
aad
imul
gs
mov
lods
sub
push
mov
sub
cwtl
push
jo
idivl
icebp
xchg
ret
sti
inc
dec
sub
loop
or
dec
lea
and
mov
lods
fwait
push
ja
int
push
sahf
outsl
orb
iret
or
imul
imul
fsubs
fwait
sbbb
in
push
loop
dec
ficoml
mov
pop
dec
rorl
test
cld
cs
out
jae
inc
xchg
cltd
cs
mov
loop
cmpsl
cmc
gs
ljmp
adc
adc
int
cs
jo
dec
js
mov
clc
or
stos
jne
cmc
cltd
icebp
mov
push
add
jne
lcall
addr16
sub
pop
addr16
ret
xor
lret
mov
out
and
and
or
dec
in
mov
popf
es
jecxz
call
int3
enter
jecxz
mov
nop
sbbb
inc
mov
pop
ret
dec
insb
imul
cmpsl
imul
andl
mov
sbb
pop
jl
xor
pop
or
dec
js
dec
iret
push
mov
jge
jp
shll
sub
mov
add
lahf
lahf
movsl
push
ret
pop
cmc
mov
or
and
cli
inc
add
and
imul
stc
gs
cmp
adcl
xor
mov
and
adc
adc
cld
add
das
leave
dec
fcmovb
adc
xchg
sbb
adc
loopne
lock
stc
sub
cld
decl
sub
out
std
mov
jp
lods
addb
mov
lods
or
cld
insl
mov
adc
cmp
and
pusha
jg
cmp
push
xor
les
stos
xchg
or
dec
sbb
arpl
jae
and
xchg
test
lret
popf
imul
mov
aaa
mov
or
pusha
iret
and
add
adc
adc
push
outsl
je
xor
sbb
or
xchg
outsb
iret
ret
push
xor
jp
jecxz
popf
scas
into
pop
add
int
push
mov
jmp
jnp
outsl
push
pop
push
pop
sub
add
adc
xchg
and
pop
rolb
iret
movsl
jl
out
mov
and
rcrl
ffreep
lret
and
mov
xchg
sub
les
sub
lret
js
inc
in
je
xlat
sub
cmp
scas
mov
stos
jl
dec
jmp
insl
mov
insb
cmpsl
adc
add
jg
add
mov
cwtl
and
sub
ljmp
adc
push
into
xchg
insb
fstpt
insl
mov
lods
movl
sub
and
adc
pop
sub
outsb
cld
dec
mov
cmp
jge
and
sub
or
pop
sbb
hlt
adc
rcr
cmp
es
dec
xchg
xchg
notb
and
add
dec
xchg
pushf
movsl
and
lea
mov
je
or
loopne
xchg
jg
std
and
dec
sahf
push
mov
add
xchg
aad
lahf
push
repz
adc
dec
ljmp
push
cld
les
xor
xchg
cmp
stos
mov
fmuls
roll
cwtl
jno
rcrb
movsl
sub
movsb
rclb
adc
sahf
enter
mov
add
cmp
lret
adc
sahf
mov
xchg
pop
jne
jb
aam
xchg
xlat
bound
out
xchg
dec
jne
jecxz
mov
mov
xchg
repnz
push
lret
shrb
dec
gs
stos
out
xchg
pop
fwait
jno
mov
out
or
mov
rclb
jbe
scas
aam
leave
loopne
imul
call
xchg
sbb
clc
cli
icebp
jmp
pop
mov
aaa
neg
add
in
sbb
push
mov
cmpsl
std
lea
fcompl
mov
icebp
fs
sbb
jg
add
lods
vmovntdq
sub
push
mov
aad
ljmp
insl
mov
xor
pop
ficompl
fdivl
ret
clc
outsb
jns
js
aas
xchg
repnz
test
cmp
sbb
sarl
mov
icebp
xor
imul
mov
ror
aam
mov
or
add
addr16
xchg
int3
das
ret
cwtl
fs
mov
sbb
add
jmp
in
fldcw
cmp
adc
orl
ret
sbb
jp
nop
cwtl
repnz
je
aaa
dec
out
icebp
xor
push
fcmovne
shr
outsl
divl
xchg
adc
dec
cmpsl
incl
shlb
or
pop
inc
add
outsb
mov
jb
dec
sub
and
sahf
mov
icebp
mov
xchg
incb
outsl
andl
clc
fs
fsts
pushf
mov
cli
mov
inc
xchg
in
nop
aaa
adc
dec
cmp
test
fwait
mov
leave
sub
sbb
push
in
xlat
pop
push
inc
sub
mov
and
mov
xchg
movsb
xchg
lahf
fmul
pop
out
iret
sbb
adc
push
in
xchg
xchg
addr16
dec
pop
daa
adc
mov
sub
insb
jbe
pop
out
into
push
leave
sbb
push
test
loop
fldt
jnp
stos
jns
shll
jb
aas
outsl
pop
loope
loopne
mov
sahf
outsb
adc
cld
fs
not
cmp
cltd
xchg
gs
ret
into
add
xchg
push
int3
insb
xor
mov
add
cmpsl
sbb
mov
iret
cmpsb
dec
pop
dec
dec
mov
fidivrl
push
dec
mov
push
jle
push
stc
mov
jmp
lcall
ljmp
mov
dec
mov
jmp
rcrl
push
cmp
cmpsl
call
inc
xor
inc
dec
clc
subl
jmp
test
adcl
popa
test
inc
cmp
enter
pop
xchg
mov
push
das
pop
or
jns
fstps
jge
jnp
mov
int
sub
hlt
jl
sub
adc
fnsave
sbbl
jbe
rolb
xchg
and
je
imul
mov
add
pusha
push
mov
pop
push
fistl
cmpps
push
push
enter
outsl
dec
lahf
daa
cmp
inc
addb
jmp
adc
aas
movsb
inc
pop
inc
jnp
dec
dec
inc
fimuls
push
jnp
or
sahf
daa
push
in
movsl
sbb
cmpsl
es
daa
dec
ljmp
movsb
inc
in
dec
imulb
shl
sbb
pop
int3
cmp
fucomi
push
popf
xchg
or
dec
jecxz
fsubs
xchg
xor
add
ds
sbb
mov
lods
jno
cld
jne
sbb
test
lds
arpl
andl
and
scas
mov
insl
arpl
jae
mov
insl
or
loope
jns
testb
mov
jg
mov
sbb
loopne
jl
lea
shll
sub
lea
ss
mov
sub
mov
out
push
insl
rolb
es
popa
imul
push
xor
xchg
mov
in
mov
fbld
push
or
mov
cmp
or
jmp
jecxz
jo
insb
lcall
inc
jge
pushf
pop
invd
inc
std
mov
push
adc
mov
mov
pop
xchg
cmp
mov
or
repnz
lcall
insl
inc
scas
sub
dec
mov
shr
ror
frstpm(287
in
and
ret
dec
mov
mov
push
inc
int3
iret
mov
dec
fdivl
and
pop
mov
insl
or
je
jne
inc
loop
mov
adc
mov
outsb
test
dec
sbb
cwtl
insl
fsubrl
jle
jmp
fsubrl
icebp
lcall
xlat
push
jg
sub
popf
xor
lret
data16
jg
rcrb
sti
cltd
faddl
cmp
add
sub
ret
sbb
push
rol
mov
daa
jmp
jbe
sbb
in
cmp
xchg
xor
fmull
js
gs
pop
sub
sahf
sbb
out
les
push
js
in
shl
lahf
js
adc
cmp
adc
shll
adc
fistpl
sub
aas
mov
mov
pop
dec
sbb
pop
mov
mov
in
leave
inc
dec
lahf
xor
pop
adc
test
stos
sbbb
cmpsl
iret
sub
outsl
repz
or
sbb
stc
xchg
jge
pop
call
push
pop
in
loop
cmp
fistl
sahf
pop
aaa
push
jl
mov
sbbl
cmp
dec
cwtl
sbb
mov
aas
sbb
sbb
or
insb
xor
sub
ds
cmpsl
and
cs
int
inc
std
dec
xlat
cmp
jmp
call
dec
sbb
sbb
inc
loop
jge
cmp
in
int
leave
inc
xor
repnz
xchg
mov
xor
mov
sti
jp,pn
arpl
gs
sub
clc
xchg
addr16
scas
outsl
cmpsb
inc
xor
adc
mov
pop
push
stos
in
jb
out
rdtsc
mov
pop
sub
pop
mov
inc
insl
mov
cmp
mov
adc
add
inc
push
lret
adcl
sbb
inc
and
sub
sub
sub
mov
je
push
insb
sbb
in
add
insl
bound
sbb
xchg
push
lods
ljmp
add
cld
xorl
sub
in
jbe
mov
insl
cwtl
mov
dec
stos
sub
dec
mov
lods
es
ffree
scas
mov
mov
leave
sbb
out
mov
xchg
jb
inc
out
xor
bound
and
xlat
les
dec
or
adc
fcmovnu
xchg
pop
movsl
icebp
inc
dec
fbstp
sub
jg
sbb
mov
sbb
sbb
dec
sub
xchg
jne
fdivl
sti
enter
test
fs
ret
fs
insl
cmc
test
xchg
inc
sti
add
adc
pop
push
arpl
adc
xor
out
fwait
push
sub
stc
and
jno
adc
cld
mov
pextrw
sbb
sub
in
push
out
push
pop
pcmpeqd
daa
jle
je
stos
stos
enter
add
in
mov
pop
in
mov
mov
mov
pop
js
jne
iret
loopne
dec
push
jns
xchg
ror
cmp
fidivrs
sahf
fistl
dec
xor
pop
pushf
into
arpl
stos
es
jmp
pop
mov
stos
sbbl
sub
out
push
mov
dec
sub
jns
xor
sub
imul
xor
pop
shlb
dec
or
xor
rorb
sbb
adc
sbb
stos
xchg
sub
or
xor
ret
int3
pushf
dec
sub
cmp
and
sub
xor
sahf
xchg
jp
fisubl
sbb
xchg
jbe
rorl
xchg
test
cmpsb
and
dec
pop
dec
les
cmpb
push
xchg
lock
adc
mov
lods
icebp
pop
mov
mov
int
test
outsb
sub
fistps
mov
sahf
pop
mov
ds
inc
pop
sbb
fisttps
imul
mov
sar
ret
xchg
inc
jne
push
loopne
add
out
xchg
inc
out
cmp
and
push
mov
pusha
or
xor
clc
movsl
sbb
arpl
or
xchg
pop
icebp
sbb
sbb
jge
add
sub
or
xchg
mov
outsl
sti
push
sub
mov
dec
jl
repnz
inc
lret
fidivs
lahf
les
xchg
fdivrp
and
mov
sti
jb
pop
iret
dec
fwait
out
or
subb
das
pop
push
daa
fwait
sarl
jnp
pop
mov
fdivr
inc
xchg
daa
and
xchg
pop
sbb
lahf
mov
sub
test
mov
addb
mov
daa
cmpsb
test
push
rcr
sbb
lock
shll
cmp
jge
jbe
das
adc
popf
jbe
jmp
addr16
ss
cmpsb
cmp
lahf
je
in
lock
mov
ja
ljmp
push
sub
fildl
jle
xchg
sti
cwtl
pop
insl
xor
sbb
hlt
mov
std
add
cs
adc
cmc
push
add
mov
mov
mov
jns
test
inc
call
fwait
mov
clc
paddb
subl
mov
and
and
push
data16
data16
dec
xchg
mov
fstps
dec
lds
lcall
iret
rcrb
and
push
inc
xchg
aad
in
lods
stos
mov
ret
sbb
or
push
mov
aam
outsb
aas
pop
pop
sbb
and
jg
xor
mov
add
repz
inc
jl
shll
or
lea
mov
and
pop
inc
gs
xchg
ljmp
sub
mov
test
jne
or
hlt
call
repnz
dec
mov
out
movd
cs
ret
adc
pop
aam
cmp
std
mov
popa
mov
jg
int3
mov
inc
js
icebp
rcrb
dec
mov
ja
dec
in
mov
inc
loope
xor
add
rdmsr
jp
adc
movl
sub
cmc
dec
out
adc
xchg
fdiv
mov
push
cltd
pusha
roll
mov
add
jp
popa
jmp
dec
outsl
int3
int
sub
sar
jb
jg
pop
rcll
cmc
and
testl
and
xor
adc
push
call
or
out
jmp
push
insb
mov
mov
adc
int3
adc
xchg
scas
popa
add
pusha
or
jl
push
adc
mov
inc
rorb
cld
fadds
add
jb
mov
in
add
cmp
lock
inc
xor
es
fnstcw
movsb
mov
push
stos
jae
stos
js
lahf
jl
push
xor
sbb
stc
fsubl
scas
pushf
or
jg
jne
iret
iret
nop
out
fdivrs
rclb
xor
push
test
and
cmp
pop
jne
push
add
jge
lret
outsb
movsb
je
xchg
mov
xchg
stos
xchg
mov
aam
cwtl
in
cmc
adc
mov
sbb
add
insl
rcll
inc
imul
sbb
testb
fldcw
xor
cs
out
mov
shrb
arpl
mov
les
aas
cwtl
les
push
jg
fs
mov
int
cmc
cltd
data16
add
add
pushf
shlb
pop
adc
mov
push
and
in
push
and
mov
into
mov
cs
sub
mov
jno
rcrb
xorb
pop
jb
jno
dec
test
and
outsl
es
scas
sbb
shll
shll
xor
adc
mov
lds
xor
test
scas
and
jp
jle
test
mov
pusha
inc
out
das
jmp
fldl
xor
adc
mov
gs
cmp
push
jne
shl
daa
faddl
sub
sbbb
mov
or
mov
aas
jns
stos
sub
ja
jg
aam
jg
xchg
push
insb
inc
adc
js
add
inc
inc
sub
lcall
cwtl
aaa
movlps
fildl
in
xor
mov
adc
adc
push
cwtl
cmp
aad
ljmp
add
mov
push
cmp
stc
cltd
lret
out
lds
mov
aad
dec
fidivl
ret
repz
add
out
das
shlb
push
fs
mov
les
inc
shl
dec
mov
pop
je
cmp
add
cli
push
outsl
movl
or
mov
out
fidivrl
bound
mov
scas
pop
xor
scas
js
lds
icebp
push
add
ret
call
sbb
inc
add
pop
jge
push
std
sub
fcomip
mov
test
xchg
and
mov
fwait
mov
or
dec
xor
add
test
pop
jo
aam
cwtl
xchg
and
movsl
push
sbb
cltd
mov
je
icebp
adc
adc
mov
dec
mov
fidivrl
in
and
mov
test
jns
cwtl
push
pop
outsl
mov
mov
add
pushf
mov
push
sahf
mov
fnstsw
xchg
pmulhw
lahf
icebp
mov
lahf
sub
push
dec
push
pop
fsubl
xchg
add
pop
and
mov
inc
dec
adc
pop
adc
mov
and
in
push
sbb
sub
xchg
jmp
aad
nop
sbb
pop
daa
jl
scas
mov
push
jg
shll
movsl
mov
adc
enter
pop
orl
sub
push
scas
cmc
or
sub
lret
mov
lods
dec
je
adc
jp
jbe
add
adc
inc
mov
pop
loop
sbb
test
enter
or
sbb
mov
pop
sbb
icebp
mov
cld
push
mov
adc
inc
addl
cmpsl
neg
or
sub
xchg
sbb
sbb
jno
hlt
xchg
and
fabs
imul
xlat
popa
cmp
inc
sub
dec
lods
adc
sbb
negb
addr16
iret
fisubrl
mov
mov
ss
mov
outsl
and
add
jle
mov
mov
fst
dec
shrl
loope
jmp
subl
scas
mov
rolb
sbb
test
fisubrs
fidivs
mov
stc
mov
jge
push
mov
xor
sbb
push
out
pop
daa
mov
xor
and
dec
loope
imul
mov
push
ret
jo
in
outsl
bound
mov
dec
loope
aad
daa
dec
pop
aaa
xchg
lea
mov
es
push
jo
jns
dec
fldenv
and
iret
pop
outsl
xor
bound
shll
jne
rorb
jno
loopne
mov
arpl
addr16
mov
cli
mov
int
lret
out
dec
popf
pop
sbb
mov
and
cmpsl
mov
daa
cmp
fsts
fimuls
dec
pop
xchg
push
adc
popl
xchg
dec
cld
lahf
adc
mov
shlb
fucomip
in
xor
js
mov
mov
xchg
out
and
rcrb
out
andb
test
pop
adc
in
add
jne
ja
movsl
icebp
fsubrl
jge
cmp
mov
xchg
xor
movsb
test
stos
sbb
adc
mov
in
pop
mov
mov
xchg
mov
mov
int
je
and
push
dec
or
das
inc
or
lret
cmp
xchg
push
mov
sbb
pusha
push
mov
inc
lods
test
ret
or
sar
sbb
jg
push
jle
xchg
adc
sahf
sbb
push
into
loop
sbb
pop
pop
xchg
rol
insb
ret
int3
out
jb
push
sub
out
test
xchg
cmp
add
aam
hlt
sbb
jne
stc
lret
scas
into
pop
mov
icebp
ljmp
pop
push
hlt
les
fs
and
mov
mov
xchg
cli
faddl
sub
loope
add
imul
arpl
sbb
push
shll
sbb
pushf
mov
pop
sarb
jne
frstor
dec
inc
jp
fwait
jnp
mov
mov
inc
mov
mov
dec
mov
popf
cmp
adc
int3
andps
mov
sarl
cld
or
or
scas
aad
aaa
cmpsb
mov
push
inc
cld
or
pop
je
pop
dec
and
sbb
or
popa
les
into
xor
pop
jmp
repnz
arpl
jge
lock
mov
adc
shll
and
imull
outsl
or
inc
mov
dec
ret
cwtl
push
cmp
stc
std
sbb
mov
je
xchg
mov
imul
mov
cmp
ljmp
mov
stc
push
cwtl
add
and
pop
cs
into
or
into
and
ljmp
mov
sbb
or
xchg
lret
or
mov
jnp
jb
pushf
sbb
inc
jp
out
subl
andl
pop
insb
out
cmc
add
push
jb
mov
xchg
stos
pusha
mov
xchg
cld
idivb
sbb
jmp
xor
outsb
shlb
inc
fwait
subb
scas
dec
test
cmp
inc
sahf
fisttpll
jp
je
sub
push
mov
int
xchg
inc
or
pop
lock
loopne
lcall
and
lds
ret
gs
add
rorl
xor
or
xchg
mov
mov
cltd
jae
out
repz
fildl
jp
mov
stos
aas
inc
adc
in
adc
stos
test
outsb
call
out
out
stc
mov
stos
pop
mov
lahf
pop
pop
or
fbstp
cmp
ss
cld
icebp
addr16
pop
insl
xchg
mov
mov
mov
aas
outsl
mov
xor
mov
scas
mov
push
sbbb
jnp
fsubrl
jecxz
xor
fcomps
mov
mov
daa
cltd
jbe
mov
fbstp
mov
ds
fisubrl
lret
loopne
stc
fdivp
addr16
push
cli
pop
fcomps
mov
cmpsl
push
aaa
fimull
jae
jne
and
lods
adc
pop
cs
test
test
int3
lea
or
xor
mov
pushf
mov
stc
inc
or
adc
adc
iret
lcall
xchg
test
mov
push
lret
mov
call
scas
dec
sub
loopne
pop
bnd
adc
dec
xchg
mov
daa
inc
jbe
dec
mov
pop
scas
push
test
pop
pop
nop
inc
ljmp
or
and
cltd
mov
or
xor
arpl
pop
call
lock
shlb
sahf
inc
shrb
ficoml
mov
pop
movsl
dec
xchg
mov
pop
mov
int
xchg
imul
nop
fdivrl
je
imul
in
test
test
je
rcrl
jb
sub
cmp
jl
popf
popf
aam
js
dec
mov
out
in
pop
test
aad
lahf
movsl
pop
mov
and
shl
repz
dec
jns
jge
or
pop
sub
clc
mov
js
xchg
push
jb
ret
and
insb
cmp
movsl
sti
stos
cmp
in
push
or
adc
in
and
inc
lods
pop
or
cwtl
insb
div
setne
popf
ds
lret
iret
addr16
jns
xor
adc
jae
sbb
movsl
mov
pop
mov
xchg
aas
roll
sbb
add
or
testl
test
xor
mov
test
add
sub
mov
stc
test
insl
cmp
xchg
jb
cmp
mov
and
orl
jo
xlat
fsts
fistpll
dec
ret
inc
inc
adc
fstpt
push
jb
pop
stos
lret
arpl
and
xchg
add
push
push
enter
pushf
orb
jae
imul
add
dec
mov
lret
pop
iret
rcrl
fcomip
dec
adc
out
mov
sahf
outsl
loope
push
orb
xor
pushf
or
dec
sub
and
ja
mov
pop
inc
stos
repz
es
out
pop
movl
jo
mov
push
test
xchg
jg
scas
cmp
xchg
cmp
in
cmpsb
daa
jo
lret
or
mov
jae
movsb
jno
pop
mov
push
sbb
add
cmpsl
mov
xor
cmp
mov
xchg
rcr
int3
mov
pushf
mov
mov
jge
lcall
push
adc
mov
dec
inc
jg
push
sbb
pop
in
mov
add
loope
js
test
cs
gs
and
in
mov
bound
pusha
jmp
pop
lods
imul
add
jmp
cmpsb
pop
push
mov
ljmp
shll
cmp
jnp
mov
mov
dec
fsubrp
bswap
scas
pop
or
dec
ds
pop
cmp
and
pop
lods
lret
pop
mov
xchg
cmp
cltd
jb
int3
in
xor
adc
test
mov
ljmp
mov
mov
xchg
mov
out
pusha
loopne
testb
clc
hlt
fwait
add
outsl
sub
nop
outsb
xchg
xor
test
jmp
sti
mov
inc
xor
call
notb
scas
outsl
xor
xor
sti
lret
std
sbb
test
sbb
cwtl
jg
ljmp
xor
cmpsb
aad
sbb
xor
jle
cmp
dec
sbb
mov
jmp
push
arpl
add
jge
jne
call
push
cltd
fadd
xorb
je
dec
mov
pusha
in
mov
xorl
test
aam
mov
repnz
fisubrs
dec
nop
xor
add
mov
lcall
cmpl
js
xchg
add
add
mov
add
or
imull
in
push
push
jne
xlat
mov
ror
push
lret
mov
push
mov
jp
sub
mov
ja
dec
adc
add
clc
sbb
sti
lret
xor
adc
jecxz
outsb
test
lcall
sbb
fs
jmp
jb
adc
scas
mov
inc
xlat
arpl
sbb
mov
out
fwait
sbbb
xor
stc
leave
ljmp
sub
std
addr16
pop
jo
xchg
inc
lods
pop
sbb
inc
xor
jns
gs
insl
lock
iret
lods
int3
data16
or
mov
test
and
add
jge
mov
add
push
filds
in
rdpmc
test
cs
cmp
shr
add
fcmovb
mov
cmpl
ret
call
scas
call
inc
mov
cltd
pop
add
mov
int3
shll
push
loop
push
std
cmc
je
mov
es
jmp
xchg
dec
and
out
std
mov
addl
outsl
int3
mov
orb
xchg
je
scas
sti
mov
jno
in
and
push
push
ret
xchg
dec
dec
mov
aas
and
adc
sti
and
inc
mov
movsl
cltd
stc
aam
imul
jae
dec
in
addb
inc
or
dec
stos
cmc
or
mull
push
das
sbb
shrb
lret
daa
or
mov
pop
test
jmp
mov
and
adc
test
cli
arpl
xchg
add
popf
orb
pop
fdivs
mov
ljmp
loop
rol
imul
xchg
repz
scas
pop
std
fisttpll
arpl
dec
lock
cmc
and
xchg
daa
mov
cltd
and
imul
pop
push
ja
jbe
jmp
icebp
push
ljmp
test
push
addr16
fwait
outsl
mov
cmp
mov
into
in
jle
xchg
mov
cmp
sbb
dec
dec
imul
btc
xlat
add
jbe
ret
adc
push
inc
pop
mov
sbb
dec
add
cmp
pop
mov
mov
movsl
fdiv
js
call
push
mov
js
sub
movsb
scas
xor
inc
cli
fcoms
jl
pop
lods
or
mov
sub
arpl
xchg
int
sub
add
jle
xchg
mov
cli
mov
mov
cmc
and
inc
xor
jecxz
mov
repnz
pop
fstl
scas
fidivrl
xor
dec
add
mov
sbb
jns
mov
loop
mov
in
xchg
ljmp
test
jns
xchg
xor
stos
and
jns
jp
andb
xorl
in
sub
test
icebp
ljmp
adc
mov
mov
aam
pop
xor
lret
aad
push
out
jae
arpl
inc
mov
inc
xor
mov
ja
xchg
addr16
adc
loopne
lock
int
cmp
cmp
cmpsl
push
lret
enter
bound
popl
xchg
mov
jns
insb
ret
rcll
scas
fidivrl
into
lds
sub
fistps
sahf
jo
je
movsl
sub
fcoml
add
adc
ss
xchg
inc
or
test
aad
je
lahf
sub
inc
xor
inc
cmp
ret
pop
ficomps
sbbl
pusha
dec
inc
jae
lahf
mov
pop
clc
mov
mov
in
movsb
adc
fisubs
jecxz
pop
mov
idiv
dec
fmull
lahf
lds
or
ret
or
sub
rol
sbb
mov
lea
push
in
mov
mov
bound
lock
faddl
arpl
adc
fldenv
mov
pop
sbb
xchg
jb
mov
or
ljmp
pop
jb
aad
cmp
mov
push
bound
lea
fwait
sub
xchg
lcall
icebp
mov
dec
inc
pop
and
sahf
rorl
mov
push
insb
fstpt
sub
mov
adc
jge
pushf
out
sub
cmp
mov
add
clc
hlt
lock
cmc
jae
mov
mov
testl
and
fisttpll
mov
movsb
pop
in
lret
data16
pop
jge
ror
dec
mov
inc
sub
xchg
xchg
aas
stc
loope
mov
inc
rclb
mov
adc
xlat
sarl
insl
or
inc
lods
inc
push
pop
pop
into
mov
pop
fcomps
out
pop
sub
ss
les
or
jecxz
lock
push
xchg
pop
lret
and
xchg
jno
rorb
lods
sub
roll
aaa
or
xchg
cmc
push
sub
cmp
xchg
pushf
stc
mov
add
movsl
pop
fcomp
test
add
add
cmpsb
mov
enter
div
test
mulb
mov
cmc
out
push
incb
xor
adc
test
cmp
cltd
divl
push
imul
or
out
and
arpl
inc
dec
fimuls
call
push
das
outsl
xor
sahf
xchg
lods
push
test
dec
in
loopne
xchg
testb
xor
iret
xor
les
fcomps
and
jecxz
ret
adc
sub
jnp
xchg
mov
int
mov
xchg
mov
jecxz
clc
xchg
jo
pop
lahf
push
mov
rorl
pop
jg
jle
jmp
movsb
cli
jns
sbb
stos
inc
test
nop
jl
xchg
push
pop
in
bound
mov
xor
adc
rorb
imul
fwait
sub
out
insb
sub
adc
adc
pop
into
stos
insl
inc
push
lret
mov
jae
add
push
sbb
cli
addr16
push
jae
and
ja
das
mov
mov
pushf
aas
xchg
push
popa
add
outsl
cmp
sahf
dec
sub
cs
pop
pop
call
jne
cltd
test
cmp
aam
push
icebp
pcmpeqw
mov
cmpsl
nop
push
inc
popa
adc
leave
outsl
adc
sub
xor
sub
add
xchg
adcl
inc
cmpsl
mov
dec
or
mov
aam
test
cmp
xchg
dec
movsl
sbb
jne
out
test
sti
or
push
lret
les
mov
not
ja
test
out
outsb
out
clc
fidivs
mov
adc
pop
daa
push
jo
and
inc
das
inc
xchg
pop
imul
lcall
lock
inc
cmp
jo
mov
sub
out
pop
lds
push
mov
lahf
jle
cltd
imull
push
or
push
lcall
inc
and
icebp
mov
sbb
test
cli
stos
dec
std
pop
das
loopne
sbb
sbb
xorl
mov
sub
aad
mov
rclb
add
loopne
push
shl
loop
push
dec
roll
leave
in
cs
add
sub
stc
lock
pop
call
inc
dec
xchg
dec
cmpl
xchg
cmpsb
push
int
mov
push
mov
popf
xlat
fwait
push
stos
es
and
insb
or
pop
xchg
lds
out
je
xlat
xor
lret
push
mov
and
repnz
int
xor
mov
mov
inc
pop
sahf
xchg
scas
xchg
push
shld
mov
ret
dec
mov
ret
hlt
jb
mov
stc
xchg
fcoml
pop
jmp
int
fwait
xchg
out
jns
jp
xorb
xchg
loope
inc
out
lock
sbb
jge
add
jp
in
clc
mov
push
lods
pop
call
xor
das
add
sub
add
nop
or
cmp
cmp
shlb
mov
fsubs
fdivs
lods
out
adc
mov
cmp
jo
addb
mov
mov
sbb
imul
ret
ds
mov
or
mov
mov
push
jecxz
and
pop
lcall
pop
xchg
cmpsb
mov
loop
sub
dec
mov
std
adc
aam
cmpsb
outsl
mov
push
inc
enter
loope
push
stos
or
rcll
push
popa
jae
ret
inc
dec
jae
pop
xchg
add
lock
inc
adcl
fsubrl
scas
dec
inc
shrl
fs
dec
sahf
sub
dec
out
mov
test
and
stc
mov
stos
dec
xchg
jno
xchg
pop
movl
xor
inc
movsb
das
sbb
pop
and
mov
fwait
push
out
decl
stos
sbb
xor
mov
jae
xchg
ret
out
pop
and
xchg
movsl
imulb
popf
xchg
test
dec
lods
pop
mov
repnz
dec
lock
cld
pop
and
mov
adc
adc
and
std
stc
pop
ss
mov
adc
mov
in
addl
jmp
mov
sbb
bound
ret
mov
repz
dec
xchg
push
cli
test
add
and
mov
pop
jbe
imul
leave
lods
adc
push
cmpsl
movsl
xchg
adc
pop
pop
in
mov
sbb
mov
jecxz
add
push
mov
insl
push
in
push
pop
sbb
push
rcrl
sub
shl
addr16
sbb
mov
retw
cmp
fstps
sub
rclb
add
ds
mov
fisubl
or
bnd
into
sub
addr16
jbe
lcall
dec
cmp
daa
jbe
fadd
push
xor
lcall
idiv
andb
call
pop
sbb
mov
jg
and
mov
fcomi
nop
imulb
jne
inc
or
insb
rorl
jo
mov
lock
inc
mov
loop
cmp
xchg
out
lret
je
adc
sub
jmp
adc
add
dec
xchg
fwait
fwait
enter
aad
and
lret
xchg
test
sbb
xor
loope
xor
sbb
addr16
cmp
jmp
push
and
lret
fbstp
push
mov
adc
xchg
js
and
test
xchg
loopne
je
mov
adc
popf
push
mov
sti
push
outsb
das
divps
out
imul
loope
shrl
ss
push
dec
enter
adc
cmc
push
pushf
lds
lds
leave
mov
or
out
and
fmull
jl
xor
rcrb
inc
repnz
movsb
push
cmpsb
cmp
loopne
push
jno
cmp
fsubr
jae
or
dec
sbb
jne
mov
aad
push
addr16
repnz
test
inc
mov
jo
enter
cmc
xchg
jnp
test
insb
cltd
rorb
and
ficoms
in
cmc
add
sub
sbb
cli
fistpll
adc
sbb
dec
jg
xor
loope
mov
pop
movsl
xchg
cmp
lret
mov
and
nop
xor
popl
xchg
cmpsl
xchg
scas
xor
mov
fs
jmp
testl
sbb
bound
ret
shlb
sub
adc
popf
cmp
jle
sub
inc
add
mov
in
nop
pop
jbe
add
lahf
adc
arpl
xchg
inc
mov
add
pusha
push
ja
mov
mov
adc
jbe
outsl
mov
rcrb
xchg
mov
leave
mov
mov
inc
inc
fdivrs
add
stos
add
in
ret
ret
enter
mov
test
loopne
or
ljmp
pop
pop
repnz
ja
int3
push
arpl
or
jecxz
mov
pop
or
pop
div
dec
dec
mov
das
xor
mov
xor
or
adc
push
and
xchg
outsl
cmc
pop
jnp
add
lahf
movsb
mov
dec
mov
popf
inc
jge
lock
xchg
int3
xor
or
pop
or
outsb
sbb
ret
push
mov
xchg
jbe
notl
repnz
mov
outsb
mov
shrl
pop
mov
mov
data16
xor
sbb
loop
inc
push
sbb
jmp
or
xchg
xchg
jg
jmp
dec
jge
mov
and
cmp
imul
add
insb
fistps
sub
insl
ret
add
lret
out
sbb
jmp
xchg
out
into
cmp
insb
mov
notb
cmp
aam
aad
mov
mov
ja
or
pushf
mov
lret
push
lods
pop
test
subb
push
hlt
mov
test
inc
andb
aam
ret
mov
popf
out
adc
mov
inc
stos
cs
push
mov
sub
ss
jp
push
xchg
negl
je
test
sar
xorl
icebp
ljmp
pop
insl
test
adc
test
mov
sbb
pusha
call
sub
mov
jns
lcall
or
and
sti
sarl
pop
mov
inc
shrb
popa
ret
imull
ss
add
inc
xor
add
jo
imul
insb
jns
fdivl
push
pushf
arpl
adc
dec
mov
dec
cwtl
jecxz
push
cld
jae
xor
ljmp
mov
dec
push
inc
sti
dec
leave
mov
or
pop
mov
push
sub
jo
lods
enter
mov
pinsrw
sbb
mov
sub
push
jmp
or
jae
mov
dec
mov
out
popf
clc
sub
insb
sarl
pop
jl
xor
inc
or
dec
icebp
sub
int
sub
push
xchg
mov
rcll
in
sbb
add
add
mov
rcll
lea
mov
cmc
add
bound
or
dec
cld
jp
mov
dec
stc
mov
cmp
shl
enter
ffree
loop
push
gs
xchg
stos
std
ucomiss
cli
movsb
lret
mov
sbb
push
aam
and
nop
lea
xor
cmpsb
and
jp
cvttps2pi
nop
sbb
in
xchg
movsb
bound
stos
lock
pop
adc
sub
cwtl
test
dec
int
loopne
push
fldt
pop
mov
out
cld
xchg
mov
int3
out
mov
push
and
lcall
xor
ljmp
ljmp
push
mov
out
cmc
mov
shrb
nop
std
sbb
add
xchg
push
pop
sub
lock
push
repz
push
mov
xchg
enter
inc
data16
lock
aad
stos
xchg
add
dec
cltd
out
test
sbb
xchg
adc
in
xchg
in
mov
push
fcoms
adc
cld
ret
enter
sub
push
sbb
cmp
je
int3
pusha
clc
mov
cwtl
mov
int
into
rcr
mov
sub
mov
insl
jle
pushf
xor
mov
and
popf
popf
shll
and
cmp
push
push
aas
push
mov
mov
scas
leave
aad
mov
inc
push
jns
nop
lock
push
xor
push
and
mov
lahf
xor
lea
bound
loope
loope
pop
push
shrb
jno
cwtl
mov
jge
or
or
clc
sub
fbstp
add
mov
mov
outsl
sbb
dec
lret
rcrl
mov
xor
stos
test
fbstp
add
outsb
mov
sub
or
xchg
push
mov
adc
mov
int
cwtl
sub
fdivrs
lds
div
cmpb
ficoms
sub
insb
xor
add
repz
aas
mov
loop
stos
data16
das
jno
adc
jno
cmovs
shlb
and
sbbb
fsubrl
sub
cmc
arpl
sub
xchg
shll
in
sti
cmp
lods
test
shlb
fdivrl
pop
into
divl
bound
xor
das
iret
lcall
ficoms
and
fstp
dec
movsb
cld
cmp
icebp
push
push
cmp
add
mov
pop
loopne
pop
xchg
sub
jp
inc
shr
shll
fcomps
and
dec
jbe
mov
ljmp
lcall
lds
xchg
mov
jne
xor
fs
cmpb
sub
cmpsb
xchg
out
mov
xchg
adc
les
outsb
xor
cmpl
cmp
and
dec
pop
test
jg
jno
jne
and
or
aad
jmp
shrl
dec
xor
das
mov
fisubrs
jecxz
cmp
jns
add
fisubl
fs
push
xchg
dec
and
xor
cmc
add
insb
adc
in
enter
outsb
sbb
lock
lods
scas
arpl
lods
mov
xchg
or
push
nop
or
in
cld
fwait
sub
cmc
mov
xor
clc
pop
rclb
clc
adc
out
into
cld
shll
mov
fstl
imulb
xorl
int3
adcb
mov
rclb
jg
rcll
xorl
xor
lea
cmc
and
in
cltd
pop
scas
in
sbb
loope
xlat
std
test
jb
int
js
adc
mov
mov
inc
popa
mov
mov
sahf
dec
xchg
xor
out
sbb
add
inc
subb
xchg
aaa
pop
lds
or
and
test
pop
mov
or
sbb
lods
inc
shll
std
xchg
or
fstps
mov
mov
or
subps
notl
insb
jns
int
adc
pop
int
hlt
rclb
imul
nop
adc
ss
adc
xchg
sub
mov
ljmp
xchg
inc
data16
pushf
rolb
sub
mov
sahf
pushl
xchg
fisttpl
push
and
pop
lods
push
int
inc
push
movsb
and
cmpsb
ror
push
mov
sti
pop
and
popf
xlat
dec
or
or
or
or
and
insl
pop
dec
lea
call
sbb
and
and
jo
iret
orb
mov
jle
out
data16
mov
mov
xchg
jmp
enter
pop
into
adcl
movsl
ret
mov
pop
lahf
xchg
js
jl
aad
out
hlt
sub
xchg
jae
inc
cmp
inc
ds
into
repnz
mov
dec
jns
movsb
lds
dec
psrad
push
jmp
xchg
push
and
out
out
xchg
xchg
push
pop
les
mov
pop
cli
in
ret
imull
icebp
shrb
mov
mov
loope
es
mov
mov
nop
push
fimuls
leave
cmp
js
xchg
cmp
xor
das
xchg
ds
icebp
cltd
out
push
xchg
andb
ss
xor
outsl
stc
jbe
jno
js
push
imul
lret
fisttpll
in
lds
fidivs
sub
test
sub
stc
jne
loop
sub
mov
mov
clc
jbe
adcb
fmuls
out
scas
fnstenv
arpl
pop
inc
jb
xchg
xlat
aaa
mov
mov
push
cld
inc
fidivl
test
xor
cmp
mov
fsubr
sub
push
test
cwtl
pop
mov
ficomps
fs
lret
nop
pop
mov
inc
inc
cmp
loop
xor
sti
test
fsts
loopne
movsl
or
and
js
jbe
add
fs
mov
in
cmpsl
or
or
in
xor
mov
hlt
adc
xor
xor
in
je
ljmp
xchg
mov
popa
outsb
cmp
pop
sub
inc
jle
xor
sub
pop
in
ret
stos
mov
int3
lahf
and
pop
xchg
xor
mov
icebp
mov
jns
aam
push
mov
mov
push
xor
and
ljmp
sbb
pop
push
adc
rcl
sbb
subb
mov
add
push
and
sub
pusha
push
ret
mov
push
inc
inc
xchg
iret
fcomi
es
dec
rorb
or
add
sbb
popf
movlps
sbb
stos
cmp
pushf
insl
lret
les
mov
or
sub
adc
jae
mov
xchg
sbb
sarb
fldenv
push
push
sub
pop
add
pop
sub
in
push
outsl
loop
sbb
mov
repz
test
mov
aaa
imul
add
push
mov
in
sub
sub
jno
pop
xlat
pop
add
ret
dec
xchg
xchg
xchg
xchg
jnp
push
stc
and
xchg
inc
jne
ljmp
sub
pop
dec
movsb
cmp
popf
jae
xor
mov
cmpsl
mov
pop
cmc
xor
sbb
dec
fwait
movsl
popa
das
popf
sub
ret
lock
cmpsl
jmp
scas
jnp
mov
mov
lods
repz
and
rcl
mov
adc
shll
loop
mov
cmp
mov
mov
pop
push
cmp
xchg
push
push
inc
rcrl
inc
sarl
mov
push
add
or
ljmp
leave
xchg
xchg
lods
pop
loop
xor
jge
jecxz,pn
shll
sbb
shll
jg
xchg
xor
mov
xchg
xchg
mov
popa
dec
sub
mov
and
sarb
jmp
fsubs
mov
inc
push
xchg
fdivs
or
iret
mov
pushf
das
fcompl
enter
cmp
add
daa
inc
adc
ret
cmp
stc
iret
jg
mov
popa
or
jmp
rorl
sahf
xor
xchg
mov
in
cmp
cli
xor
sbb
test
xor
dec
in
int
mov
fmuls
push
jl
and
mov
mov
hlt
mov
adc
ja
lds
and
or
les
aam
fmull
cltd
mov
lock
cmp
es
mov
call
pop
out
push
out
addl
mov
loop
mov
add
aad
aaa
xor
xor
push
shll
repz
lret
sti
in
xor
mov
push
add
xor
stos
mov
insl
add
jl
mov
clc
shll
pop
add
mov
out
jp
test
lds
lahf
pop
mov
dec
or
cld
movswl
mov
push
icebp
pop
loope
jge
in
and
jbe
jb
inc
xlat
xchg
aas
xchg
inc
pop
sbb
sub
jmp
stos
mov
rolb
xor
lds
pop
pop
jmp
je
jl
jae
mov
outsb
jns
pusha
fists
adc
ds
imulb
repnz
mov
out
ja
loope
hlt
cmpsb
xchg
movsl
push
fnsave
adc
cmc
arpl
add
mov
xchg
pop
push
test
adc
xlat
scas
xchg
xchg
add
arpl
adc
fcomip
fsubs
insl
xor
dec
into
ficoml
cmpsb
popa
pop
mov
test
jns
mov
or
inc
out
sbb
sbb
pop
clc
icebp
out
mov
xor
leave
imul
add
adc
das
stos
js
mov
stc
cmp
out
jne
outsb
sbb
cmpsl
in
and
movsb
adc
aad
test
adc
aaa
hlt
test
arpl
inc
idivb
gs
clc
xchg
mov
add
out
aaa
repnz
inc
xor
mov
adcl
lods
jne
adc
xor
lahf
add
cli
mov
negb
sub
fidivs
andb
popf
jne
repz
or
cmp
insb
aaa
xor
int
lea
addr16
fbld
loop
pop
cmp
clc
pop
cwtl
jmp
pop
test
push
ds
divb
scas
adc
push
lods
xor
in
mov
jp
ret
jnp
lret
jle
pop
sbb
inc
add
sbb
movsl
outsl
inc
je
and
xchg
orl
lods
sub
popa
cld
movsb
int3
xor
mov
mov
mov
or
fsubrp
mov
and
adc
cmpl
inc
inc
sub
or
add
mov
add
jbe
pop
sti
in
and
arpl
jge
movsb
add
jp
aad
xchg
inc
loop
ljmp
mov
insb
sub
stos
jp
cmp
icebp
lea
pop
dec
pop
subl
adc
rcr
push
fidivrs
sahf
xor
cmpsb
pop
dec
and
jnp
ficoml
std
mov
pushf
xchg
xor
mov
imul
cwtl
inc
repnz
in
or
ss
pop
stc
jbe
or
or
decl
fwait
aas
jns
aam
mov
or
aam
xor
testl
jbe
add
int3
int
cmp
testl
xor
test
insb
ljmp
cmp
mov
and
jno
push
mov
cmp
shll
dec
push
lcall
xor
mov
jge
xchg
lret
inc
jp
add
xor
negb
sub
in
or
xchg
pop
cmpsb
stc
outsb
fistps
mov
inc
fs
mov
mov
das
fdiv
sbb
out
fsubl
sub
arpl
push
call
es
scas
in
sbb
mov
sbb
lods
pushf
fsub
pop
stos
sub
outsb
jge
and
dec
sub
add
test
int3
push
sub
mull
daa
fstpt
lahf
test
xchg
push
mov
or
fstpl
out
mov
jae
xchg
dec
aas
jg
pop
jecxz
or
cmpsl
push
jb
inc
loope
mov
and
in
pop
cmp
lods
xchg
dec
xchg
add
push
mov
add
movsb
std
mov
lcall
movl
cmp
test
insb
push
cmc
mov
jle
pusha
cs
or
mov
add
xchg
push
mov
pop
out
loop
out
adc
jne
mov
xor
and
scas
sub
gs
add
dec
jno
xor
int
mov
rcrl
adc
pop
and
movsb
inc
mulps
jp
fmull
xchg
pop
dec
add
aaa
aam
cmp
add
or
iret
mov
push
cli
outsl
cmc
push
pop
pop
dec
stos
jns
adc
dec
cmp
pusha
and
pop
fs
enter
mull
ret
ret
scas
push
or
in
ja
lret
and
gs
sub
and
mov
jg
repz
push
xor
xor
test
aaa
enter
loopne
ret
imul
addr16
mov
in
jnp
dec
add
push
shlb
sub
mov
adc
or
scas
inc
dec
inc
jmp
jmp
mov
pop
cmpl
jb
sub
test
mov
and
lea
rorl
cmp
lock
mov
pushf
mov
loop
dec
lahf
aaa
popa
cld
inc
rorb
in
leave
aad
fbstp
xor
pop
xchg
movsw
pusha
mov
das
pop
dec
xor
cli
mov
hlt
add
into
movsb
add
js
xorb
and
jle
add
cmp
icebp
scas
inc
cmp
daa
adc
mov
in
jmp
in
pop
ret
jecxz
jnp
jge
lcall
mov
sbb
movsb
inc
in
sbb
and
sbb
mov
mov
inc
fwait
mov
repnz
repz
cmp
xchg
xor
popf
sarb
push
lock
inc
cmc
add
hlt
cmp
jg
ds
lahf
lcall
loopne
ds
inc
cs
dec
push
sbb
in
pop
xchg
add
int3
sar
inc
cmp
and
js
inc
pop
lcall
mov
lret
aam
int3
cmp
pop
pop
xchg
jno
repz
cmpsb
sub
pop
and
in
jecxz
fisttps
ret
out
rclb
mov
xchg
mov
rolb
adcl
iret
sub
xor
mov
lea
xor
sti
add
lods
jp,pt
push
inc
out
mov
scas
mov
scas
or
fmul
into
mov
cwtl
jae
cwtl
lret
mov
inc
cmc
dec
mov
addr16
pop
cltd
bound
inc
or
fnsave
inc
jl
inc
int3
out
add
jp
insb
insb
mov
add
leave
lods
ss
test
out
or
cli
mov
xor
dec
arpl
push
push
loopne
xchg
mov
mov
add
push
push
jl
jnp
imul
imul
data16
jae
dec
sarb
sbb
jle
xchg
dec
adc
testb
movsl
xor
pop
pop
push
je
lds
or
ja
test
xchg
mov
sub
insl
outsl
mov
jno
bound
jo
iret
int
in
loopne
aaa
add
jb
dec
dec
das
xorb
mov
test
sahf
aam
or
js
mov
in
jno
fmull
pop
mov
cmp
das
sbb
xchg
in
adc
fcompl
mov
andb
out
mov
adc
outsb
int3
loopne
mov
mov
mov
sar
or
cmp
cwtl
mov
jl
lds
mov
adc
loope
popa
hlt
shrl
popfw
mov
cli
call
add
into
fstpl
fiaddl
xor
sbb
mov
je
sub
inc
aaa
cmp
repnz
pusha
test
fnstenv
or
xchg
sub
dec
jp
sbb
scas
imul
sbbl
bound
sbb
xchg
or
popf
adc
mov
clc
jp
jno
ljmp
xor
dec
and
pusha
mov
sahf
inc
add
rclb
jle
cwtl
and
aam
in
pop
jo
mov
pop
ljmp
or
push
mov
fdivp
add
or
push
aaa
pop
inc
int3
out
arpl
das
xrelease
xchg
dec
enter
mov
movsb
sub
lods
movb
pop
data16
or
shrb
lock
inc
inc
loop
xor
adc
inc
sub
pop
subb
cmpsl
sarb
adc
bt
lahf
or
add
arpl
adc
jmp
popl
cmp
stos
repnz
addr16
and
dec
sbb
test
mov
sub
loopne
mov
out
inc
cmp
test
pop
jns
cmpsb
xor
jbe
mov
mov
call
out
sbb
dec
rol
and
stos
push
mov
scas
inc
adc
xchg
jecxz
outsb
push
sbb
repnz
cwtl
in
dec
gs
mov
dec
xchg
mov
mov
faddl
cmp
mov
sarl
call
pop
pop
inc
mov
popf
sti
and
xchg
fdivrl
out
and
scas
mov
jg
les
sbb
rsqrtps
lods
xchg
rcrl
insb
mov
outsl
mov
movsl
jo
push
popf
cmp
mov
data16
shrl
sub
push
add
clc
mov
sub
or
ss
or
div
jae
push
and
jmp
and
push
sub
adc
ret
add
lods
popf
add
cmc
cld
push
and
stos
fs
stos
push
sub
rcll
je
xor
sub
insb
movsl
xlat
mov
orb
je
lea
cmp
jle
push
jne
orl
jb
clc
push
cld
add
mov
scas
fisttpll
call
or
ljmp
sbb
sbb
repnz
popa
mov
addr16
or
push
mov
fldcw
fcomip
in
jle
adc
dec
in
inc
ja,pt
outsl
popa
xchg
and
cmpsb
lods
pop
dec
xchg
adc
scas
out
mov
fstpt
loopne
hlt
add
pop
mov
fs
rcr
dec
clc
push
inc
adc
shll
cli
jae
jge
adc
mov
cmpsl
and
xchg
mov
sbb
and
aad
out
aad
xchg
cmp
iret
jge
mov
sub
rcl
adc
adc
xor
mov
add
inc
in
das
outsb
mov
call
xchg
and
push
fiadds
dec
cmp
mov
mov
jmp
inc
fisubs
sbb
std
jbe
test
inc
sti
shrd
mov
mov
pop
clc
cmp
insl
cltd
xchg
and
daa
movsb
insl
xor
add
icebp
cmp
movsl
repz
dec
mov
mov
push
sub
pop
gs
test
inc
cmpsb
xor
out
lea
cmp
fisttpll
int
inc
push
lret
outsb
sub
push
mov
mov
js
cli
mov
mov
std
sti
add
clc
cmp
repz
movsl
loopne
test
xchg
leave
lea
sbb
mov
push
mov
insl
pop
jnp
in
cltd
pop
dec
push
daa
in
out
dec
stos
and
orb
dec
jg
xchg
ret
push
mov
push
or
test
ss
insl
cmp
mov
into
sbbb
jns
bound
cli
push
cmp
inc
xor
xor
imul
insl
mov
hlt
pop
sub
ljmp
xor
pop
cltd
sub
or
out
popf
out
mov
sbb
sti
mov
inc
lds
mov
repz
int
jmp
xchg
add
pop
movsl
test
mov
pop
xor
cmpsb
ja
adc
dec
icebp
xlat
mov
mov
xchg
push
fdiv
inc
loope
adc
mov
lret
pop
push
inc
push
and
imul
icebp
push
rol
sub
inc
pop
mov
mov
xchg
mov
push
out
ret
loop
mov
mov
loop
inc
jns
or
dec
mov
inc
js
mov
sub
or
ss
es
or
test
out
mov
test
dec
fisubrs
insl
mov
aas
mov
lret
sub
adc
inc
call
dec
mov
mov
pop
ljmp
pop
repz
int
push
mov
push
sub
test
cwtl
pop
out
cwtl
add
mov
push
adc
call
push
and
mov
adc
out
imul
xchg
loope
sub
js
cli
negb
leave
rcll
cmp
adc
sbb
fisttpll
fstpt
aas
xor
in
xor
lret
or
int3
sbb
jnp
inc
xchg
sahf
nop
stc
aaa
in
das
imul
push
and
movb
sahf
cmp
and
add
into
out
sub
xchg
lret
mov
add
insl
aaa
cmp
insb
xor
imul
popa
stos
pop
cmp
or
scas
xlat
mov
fdiv
test
jne
mov
hlt
dec
lds
shl
xor
jmp
push
jmp
ret
or
jl
outsb
cmp
or
and
adc
and
loop
mov
fisubs
in
xor
roll
xlat
sub
mov
mov
hlt
mulb
jbe
mov
mov
mov
xor
sub
pusha
fnstcw
dec
cmc
aam
sub
mov
and
loopne
lahf
or
fnstsw
sub
int3
cmp
test
in
sub
xchg
outsl
addb
cmp
in
fcompl
pop
call
bswap
fcomi
mov
hlt
aaa
ret
mov
roll
fnstsw
sarb
pop
mov
inc
pusha
imul
ja
dec
int
push
dec
call
shlb
inc
jmp
push
pop
mov
test
test
fimull
xchg
insb
inc
movsb
or
cli
pusha
adc
cmpsb
add
dec
movb
aaa
lret
fwait
mov
test
and
dec
sarb
lods
divl
std
push
or
mov
add
xchg
addl
jl
orl
mov
lret
or
cs
test
aaa
fstpl
jmp
mov
repnz
ss
aas
gs
mov
push
inc
pop
loop
shrb
adcb
mov
outsb
xor
lcall
jl
add
testl
testb
dec
jge
mov
push
and
lods
nop
test
outsl
mov
out
xchg
dec
mov
adc
jl
mov
call
pop
xchg
push
inc
mov
pushf
jno
int
fidivl
sbb
adc
mov
lcall
and
stos
mov
inc
arpl
in
cltd
add
mov
das
xor
jo
ja
jp
jbe
mov
push
jle
or
mov
flds
xor
int
jb
jmp
and
pop
mov
aam
sahf
cmpsb
enter
aas
into
push
mov
in
and
out
mov
jmp
jae
in
in
fcmovne
pop
dec
jg
pusha
pushf
ficompl
mov
mov
and
dec
mov
jle
testb
ret
cli
jb
ja
push
mov
jno
jmp
sbb
jecxz
pop
cmc
lds
xchg
xlat
pop
pop
or
inc
or
lcall
addr16
mov
stc
mov
lret
pop
adc
pop
call
insb
out
xor
adc
sti
shr
jno
leave
stos
jno
mov
and
cmp
jo
out
pop
mov
shl
aad
repnz
data16
ret
fs
lret
ficoml
push
pop
loope
fsubrs
add
movzbl
add
mov
sub
and
aad
imul
add
sbb
out
stos
xchg
bswap
lock
mov
int
sahf
and
sar
mov
fisubl
mov
call
add
fcom
adc
aaa
ss
clc
fsubr
lret
push
add
adc
push
pop
mov
fadds
mov
int
paddb
jmp
fnstenv
dec
loope
xor
cmp
dec
loopne
cmp
lcall
jb
jecxz
sbb
cmp
add
ret
aas
jnp
stos
leave
dec
repnz
xchg
int3
je
jne
mov
loop
fcmovbe
xor
xchg
frstor
xor
movsb
jbe
and
or
adc
hlt
pop
pop
mov
sub
fsts
push
jge
xchg
test
dec
in
push
xchg
ljmp
inc
sub
clc
and
sub
iret
cltd
fxch
pushl
loope
mov
adc
nop
adc
add
ds
addr16
mov
idivb
jae
mov
sbb
call
or
inc
mov
and
and
cmp
push
aaa
push
stos
cmpsl
or
add
jmp
imul
push
and
lret
fs
pop
xor
dec
outsb
inc
stos
jno
mov
pop
loop
repz
xchg
out
sarl
xchg
dec
add
stos
daa
add
inc
ffreep
push
adc
aad
cmp
mov
fcmovnb
pop
out
es
enter
pop
or
xor
int
or
ljmp
rcl
pop
cmpsl
sarl
sub
cmp
jb
dec
xchg
mov
les
stos
fucomip
test
and
stos
das
and
jg
sar
push
adc
dec
mov
shl
aam
and
cmpsb
or
icebp
pop
or
xchg
gs
inc
insb
int3
push
sbb
mov
aaa
pop
pop
dec
or
aas
and
sbb
mov
cmpsl
mov
jmp
push
in
idivb
outsb
and
repnz
xorl
lret
jb
negb
pop
or
and
std
mov
or
ds
jle
popf
ljmp
std
cmp
stos
fdivrs
jae
add
xchg
sti
mov
dec
fsubrl
jne
and
loopne
push
shl
mov
cld
add
xor
sbb
scas
jge
stos
pop
mov
mov
andb
mov
lea
push
pop
cs
outsl
into
push
jmp
cmpsl
mov
lods
leave
mov
mov
in
jne,pn
inc
stos
xchg
rorb
fsubrl
pop
movsl
inc
jnp
insb
and
jg
and
jne
xchg
adc
jo
cld
push
mov
movsl
int
jno
inc
dec
mov
sub
push
test
mov
jge
ret
push
push
jno
jo
and
fst
shll
nop
ficoml
adc
sarb
scas
mov
xor
inc
rolb
cld
ljmp
mov
fimuls
xchg
add
leave
jecxz
repz
dec
roll
in
lret
bound
in
mov
sbb
mov
add
mov
xchg
jmp
pop
push
lret
inc
rolb
daa
fbld
cmc
in
loop
jle
es
movsb
mov
cld
mov
inc
mov
jo
gs
sbb
aam
add
sub
cmp
or
sbb
dec
inc
nop
dec
lock
and
jb
jbe
arpl
sti
rclb
out
ss
fistl
cmp
mov
xor
lcall
aas
insl
or
nop
shll
push
ret
jae
mov
sub
jo
xor
lds
lahf
dec
inc
xchg
dec
popa
pushf
pushl
pushf
pushf
adc
add
sbb
lahf
sbb
add
xor
stc
mov
std
cmpsl
jne
repz
cmp
dec
push
sbb
fstps
and
sbb
pop
out
inc
mov
mov
sti
jecxz
lahf
insl
add
insl
or
shl
adc
pop
jns
incl
repnz
adc
out
stos
pop
cmp
lds
pushf
inc
cmpl
sub
inc
dec
xlat
pusha
adc
push
fdivrl
into
inc
inc
test
mov
shrl
jno
sub
fnstsw
sbb
mov
add
sti
push
movsb
icebp
test
fidivl
jno
adc
ffree
adc
jge
pop
je
mov
sbb
sbb
mov
hlt
inc
xchg
dec
call
fstpt
mov
flds
jns
sub
fimull
xor
cli
stos
mov
mov
stos
pop
mov
and
cmp
xchg
scas
inc
mov
xor
int
mov
orb
mov
ficompl
inc
inc
pop
xor
pop
in
loope
fcomps
xchg
bound
in
mov
mov
add
orl
push
pusha
leave
loopne
out
push
xchg
push
jl
push
push
dec
pop
imul
shll
mov
call
cld
popa
cli
mov
jne
add
mov
pop
imul
xor
jp
xchg
insl
or
pop
imul
sub
sbb
sub
idivb
subps
inc
sbb
mov
inc
jl
frstor
xor
movsl
lock
stc
aad
push
jnp
das
insb
ret
sub
gs
inc
add
jne
fsubs
inc
ja
lds
xchg
add
xchg
push
push
aas
dec
ljmp
pop
mov
pusha
adc
push
push
sub
popa
ss
sbb
lock
fstl
lea
fs
int3
scas
test
popa
lea
loopne
push
int
rcrb
push
cmp
scas
rorb
cmp
xlat
es
loopne
cltd
test
cmp
xor
jg
pop
sbb
push
aaa
scas
dec
push
jbe
xor
loopne
mulb
push
push
sub
pusha
xor
or
pop
rcll
lret
jp
pusha
lcall
test
ja
mov
lock
repnz
out
call
or
movsb
inc
jae
cmp
jle
insl
int3
mov
sbb
test
test
sub
testb
mov
std
jne
xor
fbstp
xor
pop
and
xor
test
mov
insb
push
xchg
pop
sti
adc
sbb
ret
inc
stc
mov
mov
xor
and
in
fildl
mov
jmp
insl
lcall
xchg
call
aam
xchg
dec
sub
mov
mov
mov
outsb
add
xchg
sub
push
sbb
mov
push
addl
fists
inc
inc
mov
xor
cltd
test
fs
adc
fcompl
pop
jle
test
or
sti
lock
js
pop
in
cmpsb
mov
sbb
ret
pop
out
out
xor
pop
fsubs
std
mov
dec
out
setno
in
add
mov
pop
stos
int3
pop
and
push
lods
sub
mov
and
jp
insb
mov
mov
test
sbb
loope
and
loop
enter
into
or
addr16
jecxz
rcrb
pop
push
mov
out
sub
sub
sbb
arpl
and
gs
pop
push
in
aam
lods
add
xchg
push
jmp
mov
ret
outsb
add
dec
adc
pop
mov
pop
jmp
shl
outsb
sub
and
loopne
push
pusha
repz
xlat
fsubrs
subb
shrb
in
fildl
or
mov
pop
jno
adc
xchg
mov
imul
movsb
fdivrl
xchg
test
cld
adc
lock
sbb
mov
jb
push
sbb
add
addb
sarl
adc
les
das
lret
sub
sub
cld
lahf
inc
mov
cmp
pop
test
stc
xchg
cs
sub
mov
cli
insb
mov
mov
or
fistps
enter
pop
scas
inc
add
iret
cs
push
jae
in
push
mov
aaa
mov
lock
insb
and
mov
cli
in
fdivrl
repnz
in
dec
sub
rcr
xchg
xchg
xor
jmp
addr16
lret
in
test
lea
dec
repnz
popa
adc
fs
icebp
pop
js
mov
outsl
iret
xchg
mov
dec
mov
pop
daa
jo
in
enter
movsl
pop
mov
sub
xorl
loop
inc
rcll
and
iret
push
push
xor
bound
and
xor
cmp
mov
cltd
ljmp
jae
sub
sub
stos
mov
mov
sub
sub
mov
dec
stc
adc
cld
pop
in
sub
xchg
push
mov
rcrb
icebp
ds
jge
and
dec
in
xchg
jp
jno
repnz
ja
int
repz
les
sub
mov
aad
or
xor
push
movsb
xchg
in
adc
and
add
cwtl
push
push
mov
fcomps
vprotb
fidivrs
lcall
rol
mov
mov
pusha
sub
push
in
cmp
add
inc
add
sbb
mov
inc
stos
repz
jle
movsb
pop
leave
mov
mov
cmp
insb
mov
xchg
in
fidivl
push
movsb
push
xchg
jg
aaa
fcomps
adc
aaa
repz
sbb
scas
sbb
mov
sub
es
aas
int3
push
lea
add
xchg
imul
jmp
dec
mov
jge
movsb
addr16
arpl
aas
add
js
push
or
sub
sub
pop
dec
push
mov
or
pop
inc
mov
mov
movsb
out
mull
shrb
mov
movq
nop
jbe
push
gs
cmp
pop
mov
inc
cmp
test
gs
sbb
es
mov
js
jnp,pt
sub
inc
cwtl
and
insl
inc
xor
xor
xchg
jno
mov
das
jno
cwtl
or
mov
jb
imull
ljmp
cmp
push
mov
pop
pop
sub
sub
add
mov
decb
ljmp
addb
xor
dec
inc
push
lea
and
or
mov
or
push
and
mov
push
pop
ror
xchg
dec
gs
fs
dec
test
lcall
and
push
sub
mov
pop
aas
mov
pop
iret
inc
xchg
cmc
cmp
cmp
jnp
sbb
movsb
xchg
call
sub
call
lods
mov
cli
stc
stos
ja
scas
inc
repnz
push
lret
xor
loope
pop
nop
cli
pop
xchg
testb
test
aaa
jns
or
fadd
insl
lret
dec
dec
sub
out
pushf
jae
adc
jns
pop
add
divl
lea
mov
sti
out
push
pop
out
push
dec
daa
inc
int3
xchg
imul
add
bound
test
stc
in
sbbb
mov
stos
lret
test
inc
imul
push
dec
lods
cmp
imul
jae
cmpsl
fsubr
sub
pusha
add
adc
loopne
mov
clc
push
jae
mov
scas
mov
jecxz
popa
jecxz
cmp
cmp
jbe
out
les
jge
inc
stc
test
xor
iret
shlb
ret
icebp
mov
push
loop
je
adc
jmp
pop
icebp
cmp
les
sbb
adc
js
ret
js
idivl
int3
jmp
sub
pop
fwait
sahf
lcall
pop
fstpl
jp
adc
pop
mov
mov
push
dec
inc
xor
les
lock
in
add
adc
and
inc
mov
sahf
mov
stos
push
jne
lret
inc
loop
enter
fimull
sbb
call
fisubrl
stos
repnz
aaa
inc
ja
jne
fsubs
or
jp
ja
sub
ljmp
into
lods
arpl
jmp
jno
jo
lret
roll
jo
adc
aam
cltd
lahf
push
fidivs
mov
xchg
aad
jmp
int3
mov
xchg
push
cmpsb
dec
cmp
adc
stc
cmp
jmp
es
and
rorl
cmpsb
aad
or
pop
sub
mov
push
xor
push
or
into
or
addb
lea
mov
xor
hlt
cmpsb
cmc
inc
aad
mov
xor
out
outsb
adc
push
movsl
je
in
sbb
push
pop
adc
into
pop
xchg
cmc
icebp
inc
sub
sub
xchg
lret
shrl
mov
add
xor
cli
popf
xor
pop
cwtl
iret
out
xchg
push
in
dec
addr16
pushf
in
xchg
adc
pop
mov
hlt
mov
and
dec
loop
xchg
addl
adc
insb
sbb
dec
stos
orb
fstps
mov
jmp
sbb
leave
loope
dec
mov
divb
ds
sarl
sti
ss
cld
mov
adc
jb
sarb
mov
mov
loopne
pop
cmpb
roll
leave
pop
sbb
ficoms
aaa
movsl
roll
setnp
dec
adc
nop
fdivs
in
sub
cmpb
cmp
dec
mov
in
subl
or
repz
cwtl
mov
int3
sub
sub
insl
add
push
test
sahf
pop
xor
insb
nop
test
mov
jno
sub
dec
mov
cwtl
sbb
jns
mov
xlat
and
clc
mov
fyl2xp1
adc
push
popf
lret
mov
xchg
lcall
das
cltd
out
in
xchg
mov
decl
pop
mov
sahf
mov
or
mov
aas
cmp
lcall
ja
stc
jmp
mov
stos
aaa
sarb
call
ds
mov
cmp
sub
loope
xor
adc
arpl
add
mov
shl
insb
mov
and
repz
sub
push
cmpsl
aam
movl
mov
cld
or
xor
sub
pop
xorb
adc
sub
lahf
add
add
mov
andb
cmpsl
and
dec
cmp
xchg
rcll
arpl
sub
lret
inc
in
push
jne
sub
and
loopne
dec
jbe
stos
sub
adc
std
js
mov
push
je
pop
rcrl
clc
jae
pop
inc
push
pop
inc
rol
rcrb
mov
xor
lock
cmpsb
xor
sti
sub
push
popa
fdivrl
cli
ret
ret
repz
adc
xchg
jg
ret
mov
sbb
mov
mov
cs
sahf
in
mov
mov
xor
shll
in
inc
mov
cmova
out
call
inc
scas
outsb
add
adc
ja
movsb
push
sub
sub
or
xor
inc
or
lea
aaa
rcll
lahf
pop
fisubs
in
cmp
xchg
aad
adc
adc
adc
ret
adc
test
adc
cmp
test
adc
insl
pop
loop
and
outsb
loopne
fmulp
sbb
mov
push
mov
rcrl
inc
cmpsl
icebp
lea
pop
outsb
lock
stos
ret
enter
jb
enter
mov
add
in
xchg
dec
dec
jns
mov
mov
pushf
pop
xor
and
sbb
mov
push
imul
into
leave
cli
mov
mov
jl
ret
call
test
or
int
in
repz
dec
jbe
jp
test
clc
ret
aam
ds
sub
pop
test
and
inc
jg
imul
and
cwtl
xchg
mov
jge
mov
out
ja
xor
inc
fcoms
inc
lods
inc
enter
mov
inc
pop
or
sub
rcrl
test
stc
out
stos
fimull
cltd
xor
faddl
fnstcw
ret
out
pop
cld
lods
idivb
jp
pop
shlb
push
enter
sbb
push
xor
loope
cltd
dec
out
jb
xchg
dec
loopne
mov
call
loope
movsl
mov
into
xchg
cmp
in
iret
test
rclb
fiaddl
adc
lods
mov
lret
lds
fidivrs
fcomps
xor
jne
nop
imull
shl
fidivl
int
mov
xchg
test
test
and
pop
call
mov
jp
pop
add
roll
arpl
jne
xlat
jp
cmc
movsb
insl
jne
cmp
jo
loope
fiaddl
add
in
adc
jmp
data16
dec
mov
adc
dec
les
push
push
das
cld
mov
fldenv
or
or
xor
cli
and
arpl
pop
xor
dec
div
push
pop
in
scas
mov
xor
dec
nop
out
pop
ljmp
faddl
ljmp
mov
pop
lret
sub
fldt
shll
add
push
ror
lahf
hlt
mov
mov
ja
repz
mov
jno
jp
xor
call
inc
pop
push
fildll
neg
lds
cli
mov
fistpll
push
pop
jp
jg
inc
lret
and
sbb
cmc
add
mov
pop
mov
inc
fwait
xchg
jge
aaa
and
scas
out
xlat
testl
mov
loop
or
pop
decb
jmp
xor
jmp
leave
js
lds
push
or
arpl
jp
movb
in
jg
jb
lods
mov
pop
mov
push
adc
mov
cld
add
mov
mov
fildl
push
cmp
pop
adc
push
fdivrl
pop
hlt
xor
push
adc
xchg
lock
pop
mov
jae
jp
sbb
aad
fisubs
test
dec
pop
imul
xchg
addr16
push
sbb
add
add
lock
and
mov
ss
stos
scas
adc
cld
xchg
sti
mov
mov
mov
addb
mov
call
cmpsl
movsb
ss
rcrb
dec
pusha
cwtl
outsl
fstpt
and
pop
pop
xchg
mov
fisubrs
lea
mov
dec
sub
out
sbb
imul
add
add
xlat
stos
in
and
pusha
ljmp
xor
das
outsb
sub
imul
lcall
popa
push
add
iret
or
cltd
roll
bnd
pop
fstpt
or
test
es
stc
lahf
cvtdq2ps
sub
shll
adc
add
insb
in
es
xchg
call
loop
push
and
shll
push
insb
push
xor
mov
hlt
pop
pop
adc
xlat
out
lahf
fcoms
imul
lds
adc
and
in
pop
stc
lret
call
jo
jecxz
addr16
fimull
push
or
mov
adc
adcl
in
mov
mov
cmp
stos
xchg
stos
push
jecxz
cs
rorb
rol
aad
cmc
mov
repz
imul
fwait
nop
mov
inc
pop
popf
dec
mov
out
test
js
mov
loopne
jo
sarb
and
mov
push
push
push
inc
and
rcr
lret
aad
sar
loop
dec
or
inc
jo
scas
adc
daa
out
imul
xor
sbb
lds
movsl
dec
pop
outsb
mov
xchg
mov
xor
fs
fisttpll
cmp
push
and
xor
adc
dec
xor
addr16
hlt
pusha
sub
lret
insl
sbb
sahf
mulb
jge
dec
out
ja
jle
xchg
lds
push
arpl
mov
dec
je
mov
dec
jmp
push
cltd
jge
in
push
int3
xor
mov
pop
pop
clc
jne
mov
mov
jge
fwait
lret
dec
fst
pop
add
lock
mov
insl
mov
cmpsb
sub
idivb
cmpl
mov
sbb
ss
lock
xlat
jb
movsl
mov
fisubrl
mov
aad
pop
push
xor
xor
xchg
es
push
adc
fcmovb
and
mov
mov
test
loop
sub
stos
js
sahf
int3
lock
inc
xor
outsl
adc
mov
je
out
add
push
shl
hlt
je
mov
jle
cmpsl
call
push
dec
push
push
popf
cmpsb
aas
lret
push
cli
outsb
xchg
bound
cmp
in
mov
adc
push
xor
data16
jo
popa
mov
inc
jae
sub
push
and
sub
pop
xor
arpl
stos
adc
pop
hlt
jae
add
call
es
adc
mov
int
aam
mov
cmp
adc
nop
pop
push
xchg
jecxz
sub
aas
xor
lahf
xchg
and
movsb
data16
les
adc
negb
sub
push
mov
inc
jge
push
insb
push
int
add
dec
mov
mov
lods
bswap
mov
mov
shl
aam
orl
cmp
mov
sbbl
mov
mov
cmp
mov
sbb
and
jnp
stos
push
jbe
adc
cli
and
jne
insl
and
pop
inc
test
cwtl
faddl
gs
lcallw
cmp
xchg
xchg
lahf
pushf
cmpsb
xchg
xchg
rclb
out
ficoml
orb
dec
mov
or
jne
ja
inc
inc
jmp
add
pop
cld
stc
movsb
fwait
ror
flds
jecxz
jb
inc
xchg
push
mov
or
sub
fiadds
sar
jge
movsb
out
mov
jmp
dec
fmuls
cli
test
or
icebp
daa
or
add
inc
mov
adc
scas
sahf
cmp
insb
test
scas
add
mov
data16
inc
movsb
push
std
pop
mov
in
pop
mov
lahf
adc
les
and
insl
push
les
pop
sub
xchg
in
je
sbb
add
pop
add
push
mov
jo
push
cmc
or
outsb
ret
int
inc
inc
cmp
sub
dec
test
sbb
mov
dec
push
int3
in
jle
das
add
dec
mov
loop
fs
lock
xlat
loope
xchg
xor
mov
sub
mov
dec
jns
sbb
mov
idiv
in
lret
rol
or
test
xchg
cs
jmp
test
and
jae
mov
xor
sub
mov
sbb
pop
out
scas
ficoml
xchg
arpl
dec
cltd
mov
in
lret
addr16
mov
mov
loopne
std
mull
in
test
xor
cmpsl
fstp
fcomi
push
mov
jl
mov
xor
les
rcll
mov
loop
jno
leave
mov
xchg
pop
mov
dec
cmpsl
sbb
dec
enter
gs
sbb
lret
add
xchg
rcrl
enter
mov
inc
jae
xor
sti
leave
lahf
dec
or
out
lahf
fiadds
cwtl
jge
adc
and
adc
push
inc
aaa
inc
dec
fidivl
inc
cmp
xor
inc
cwtl
pop
movsl
imul
fldenv
or
adc
cmp
pop
and
in
jg
lcall
push
push
cmc
inc
inc
mov
and
inc
lea
cmp
mov
sub
cmp
pop
push
cmpsb
lret
cmp
sub
loop
arpl
jo
daa
sub
pop
insl
fwait
insb
ret
out
lods
jns
and
inc
cmp
mov
bound
adc
xchg
loop
xchg
xor
aaa
sub
leave
dec
mov
clc
sub
shr
pop
jno
push
sar
lock
and
dec
pop
stos
inc
inc
mov
int3
mov
sti
in
lahf
dec
xor
pop
push
xor
stc
dec
push
push
xor
shl
cmp
test
adc
and
sub
sbb
mov
fsts
sub
inc
sub
test
lahf
sahf
out
mov
pop
or
adc
test
aaa
mov
mov
js
outsb
or
add
inc
daa
fdivl
rcll
dec
cmp
test
imul
sub
cmc
int
and
jne
push
mov
nop
cmpsl
outsl
lods
xor
push
movsb
cmp
movl
jmp
dec
stos
push
stos
adc
adc
jp
cmp
sbb
fcomp
mull
imul
dec
or
bound
jns
dec
push
mov
xchg
mov
mov
int3
dec
push
int3
lods
xor
mov
in
adc
mov
dec
sti
pop
mov
in
popf
dec
sbb
arpl
jle
scas
imul
std
push
inc
cwtl
jp
xor
cmpsb
es
mov
pop
int
adc
je,pn
in
jl
rcr
mov
xchg
bound
pop
test
nop
xchg
or
pushf
inc
xchg
sahf
push
cld
pop
fstl
gs
call
jcxz
mov
mov
dec
dec
xor
cmp
sub
xchg
mov
test
xor
xor
outsb
fsubrl
cmp
faddl
into
daa
in
aam
aaa
sub
jo
xlat
xchg
and
mov
leave
or
and
or
cli
sti
adc
mov
xchg
lahf
dec
inc
mov
movsl
faddp
push
pop
mov
popa
nop
cmp
fisubrs
pusha
fdivr
mov
cmp
dec
subb
dec
sbb
mov
cmp
add
add
push
push
adc
adc
pop
shrl
outsl
pop
jl
fidivs
rorl
lret
int
xchg
repnz
mov
shlb
or
fs
sbb
out
mov
inc
sub
jne
adc
stos
movsb
push
cmpsb
and
jbe
lods
int
jl
adc
pop
addb
clc
outsl
pushf
xchg
xchg
adcb
pop
mov
mov
cmpsb
push
cmp
pop
out
stos
inc
mov
pop
or
push
dec
out
mov
or
mov
ljmp
dec
aas
xlat
cmp
adcl
mov
jle
and
pop
mov
or
dec
lcall
ljmp
jns
mov
mov
loope
jmp
shl
stos
mov
bnd
pop
pop
pop
es
mov
ljmp
mov
aas
pop
setbe
hlt
pop
mov
xchg
or
mov
sti
cli
fwait
mov
mov
call
inc
sbb
mov
aaa
xchg
andb
xor
repnz
push
add
xchg
xor
sbb
xor
movsb
movsb
cmpsl
outsb
lahf
sti
scas
out
call
sub
aas
adc
imull
adc
mov
adc
in
sahf
xor
or
movsl
mov
repz
es
pop
jmp
pop
pop
cmp
icebp
dec
stc
xchg
insb
pop
xchg
cld
in
add
pop
das
in
out
lret
cmp
sbb
lods
jbe
xlat
test
or
sbb
mov
push
movsb
pop
push
cmp
pop
xor
in
mov
cmp
mov
fwait
stos
mov
adc
push
gs
sub
mov
or
and
xor
push
popa
stos
inc
mov
fyl2xp1
push
jae
lods
xchg
outsb
xchg
fcom
in
sub
mov
ljmp
les
jno
and
stos
test
adc
out
test
outsb
bound
ds
push
std
jge
jle
movsl
nop
out
fsts
inc
out
pop
xor
rorb
add
int3
xor
sub
popl
jae
into
cmpsb
aad
inc
fcoms
js
mov
rcrb
lods
mov
mov
sbb
fwait
jmp
scas
sahf
jne
into
lret
loope
xchg
sbb
icebp
ja
sti
cld
mov
repnz
je
xor
insl
mov
sbb
or
pushf
or
aad
rcrl
nop
sbb
adc
jge
out
test
xchg
mov
lahf
xchg
push
cld
sti
push
mov
mov
popa
lods
fcoms
inc
lcall
jge
popa
out
mov
inc
pop
cmpsl
mov
jbe
sbb
jo
out
pop
or
jecxz
sub
cmp
jno
add
or
jae
pop
sbb
stc
lcall
mov
dec
pop
add
fwait
jecxz
out
dec
sub
rol
out
mov
divb
sti
enter
mov
stos
outsl
xchg
jge
stc
inc
push
xor
pop
dec
ljmp
pusha
outsb
mov
cs
stc
shlb
pop
push
pop
inc
aas
negl
jge
sbb
sbb
jecxz
stos
fists
xchg
dec
mov
into
xchg
sub
or
sbb
fistpll
aas
lods
cs
leave
push
sahf
sub
inc
das
cmpsb
inc
mov
jle
aam
das
adc
or
jo
sbb
test
dec
or
fldl
mov
add
dec
pop
lret
xor
cli
adc
das
add
mov
in
jl
loop
shll
call
lar
xchg
pop
push
mov
add
int
mov
lret
xor
lret
add
mov
xchg
mov
frstor
or
push
adc
mov
xchg
inc
lahf
sbb
call
xlat
jge
lahf
bound
dec
pusha
dec
decl
or
mov
imul
cli
ja
lods
subb
jge
cltd
cli
cld
mov
lods
pop
orl
add
pop
jne
daa
fcoms
mov
mov
push
cmp
js
inc
jg
push
mov
les
test
stc
stos
adc
lcall
fs
je
push
mov
adc
add
inc
jns
lahf
data16
cltd
mov
lret
sub
xor
fildll
and
lahf
dec
xor
mov
icebp
rol
testl
popf
adc
or
jmp
xchg
ss
ds
mov
push
fidivrl
popf
fisubrs
fs
or
xchg
mov
popfw
mov
xor
loope
inc
lcall
and
cmpsb
pop
scas
rclb
lcall
adc
jae
mov
enter
sarb
cmc
cmp
sub
dec
ljmp
sub
sti
cmp
cwtl
mov
pop
jmp
jge
jne
and
push
push
push
mov
shll
pop
or
jbe
js
jo
out
mov
icebp
or
xor
or
popf
pop
clc
inc
jae
jp
andb
push
pop
gs
pop
push
push
orl
jp
js
sub
insb
dec
aaa
inc
and
jg
fdivrs
es
mov
fidivl
jnp
fcoml
in
test
imul
je
mov
popa
data16
jge
pop
cmp
push
sarb
test
test
jecxz
lcall
test
hlt
xor
add
lock
das
jbe
jp
mov
movsb
sub
cmpsl
enter
jecxz
loope
pushf
mov
loopne
cmp
cli
dec
mov
pop
ds
and
dec
mov
inc
xchg
mov
cli
sub
test
push
xchg
sti
cmp
fidivs
dec
and
and
add
jae
xor
sti
mov
shrl
push
into
push
xor
cmp
ljmp
inc
mov
aad
ffree
cli
mulb
and
mov
movsl
xor
movsb
stos
and
fcomps
scas
and
pop
fistps
xchg
dec
adc
xor
fs
lahf
sbb
mov
insb
in
bound
fwait
test
fdivrl
or
sub
mul
outsl
lds
sub
jnp
cmpsb
cli
xchg
mov
ds
sub
leave
fdivl
jnp
mov
int
sbb
jbe
lods
lret
inc
mov
and
pop
mov
pop
das
cmp
dec
mov
fwait
pop
cmp
fs
xchg
fsubl
mov
fsubrp
es
dec
pop
mov
loopne
mov
imul
sub
shlb
inc
in
sbb
inc
jnp
into
pop
xchg
push
inc
fisubs
lea
rolb
mov
push
or
out
inc
orb
pusha
mov
mov
mov
cmpsb
cli
add
ret
cli
and
push
or
filds
rcll
dec
imul
sbb
das
and
push
xor
fwait
mov
out
and
jns
jo
and
or
test
popa
inc
adc
push
sub
mov
mov
pop
lahf
lret
loope
mov
neg
out
popa
aad
sub
mov
and
push
dec
aaa
adc
sub
pop
out
jmp
mov
mov
sub
jno
or
int3
clc
cltd
xchg
sti
xchg
les
add
je
pop
cmpsb
leave
ds
jmp
or
and
jmp
add
stc
inc
and
sub
push
pop
xchg
push
sarb
xlat
subl
or
mov
lea
pop
push
jl
pusha
jp
sbb
mov
xchg
sbb
pop
push
out
imul
sbb
aad
clc
movsl
xchg
xor
loop
sub
fwait
arpl
loop
scas
inc
inc
aam
and
add
roll
rcll
call
out
outsb
callw
mov
xchg
ret
aaa
jp
push
and
dec
repnz
cmc
cmc
mov
insl
lea
xor
mov
sub
iret
stc
sbb
push
imul
jle
inc
fldt
lcall
mov
xchg
clc
inc
push
outsl
push
filds
and
lahf
out
out
cltd
cmpsl
int3
ja
imul
xor
mov
andb
jae
lcall
jg
xor
pop
sbb
pushf
mov
dec
pushf
mov
hlt
push
cmp
xchg
out
data16
dec
mov
test
or
adc
lds
dec
cmp
mov
ljmp
les
pop
xor
adc
pop
adc
adc
sahf
mov
inc
sub
cmpsl
arpl
adc
testb
mov
mov
pushf
push
cltd
int3
fsubp
out
out
jp
inc
daa
add
sbb
dec
sub
loope
and
inc
sub
pop
cmp
pop
and
jecxz
cmp
es
dec
loope
mov
cwtl
outsb
pop
ja
cmp
pop
mov
sarb
xchg
dec
push
push
repz
fsubp
jb
in
mov
mov
xlat
adcb
or
push
das
jp
xchg
jae
pop
out
out
cmp
mov
cwtl
xchg
popa
sti
add
push
jae
xchg
push
jp
test
adc
push
enter
leave
and
repnz
aaa
es
popf
push
xchg
mov
pop
pop
mov
push
dec
push
mov
and
mov
sbb
mov
jl
aas
fmull
push
push
xor
add
dec
sbb
dec
pop
jno
lret
leave
dec
or
inc
sub
adc
adcl
and
mov
push
ret
scas
mov
lds
ds
sub
mov
pop
in
sar
fstpl
data16
xor
dec
mov
cmp
ja
jle
xchg
dec
aaa
cmp
pop
xor
sub
push
imul
pop
ss
adc
dec
cmp
aas
pop
fidivrl
inc
mov
dec
jmp
in
data16
jbe
into
inc
dec
int
mov
es
adc
hlt
jo
dec
es
dec
xchg
cmc
fldcw
das
pop
pop
in
test
and
jecxz,pn
pop
jno
push
mov
pop
or
sahf
sub
iret
xor
adc
dec
loopne
iret
xor
mov
into
adc
cld
sahf
and
cmpl
pop
sbb
and
push
pop
out
pop
test
inc
dec
dec
pop
add
mov
push
add
push
andl
add
xor
or
mov
xchg
and
in
dec
jge
jnp
nop
mov
icebp
imul
fmull
mov
stos
popa
cmp
mov
jbe
cli
cltd
inc
mov
cmp
movb
sbb
add
inc
in
jmp
mov
jg
ficoml
clc
xor
lock
push
cmp
and
cmp
sarl
push
leave
sahf
add
mov
pop
arpl
data16
insl
xor
jno
lahf
dec
jae
repnz
roll
pop
add
push
popa
push
mov
les
mov
aam
imul
dec
es
lea
mov
aaa
insb
pop
insl
xchg
test
pop
add
cmp
int
and
test
jp
or
inc
jl
inc
sub
xchg
int3
ret
jmp
pop
mov
popa
mov
cmc
jl
add
pop
fbld
mov
ljmp
stos
inc
or
out
arpl
mov
push
mov
pop
loopne
xlat
dec
inc
or
adc
jo
push
fs
ret
dec
jg
jecxz
roll
mov
scas
push
sbb
test
mov
and
mov
xchg
lret
clc
out
out
sbb
insl
xchg
aad
or
mov
add
jne
xchg
nop
add
sub
mov
sbb
movsb
sbb
shrl
jne
dec
pop
inc
cmp
je
shlb
pop
dec
ret
pop
mov
adc
movsb
scas
pop
mov
cmp
outsl
xchg
int
jo
jno
sbb
cmp
imulb
xchg
lods
pusha
add
ljmp
sbb
int
cmp
orb
or
sbb
push
cltd
dec
aad
into
push
xorb
sahf
adc
xor
les
inc
cltd
imul
lret
fnstsw
enter
xor
ret
inc
mov
inc
lahf
lahf
scas
and
sub
or
dec
push
dec
mov
out
cmp
clc
push
inc
mov
push
pop
lods
push
mov
inc
call
push
mov
mov
and
jmp
dec
dec
cs
mov
mov
jns
sbb
and
hlt
imul
adc
mov
fwait
leave
add
xchg
pop
xchg
sub
sub
mov
int3
out
rep
leave
or
gs
mov
sbb
dec
in
adc
sub
insl
pop
mov
cwtl
cltd
inc
add
outsb
lret
pushl
cmpsb
scas
inc
xchg
cmp
lock
cmp
xor
shlb
inc
mov
lock
mov
xchg
pushf
xchg
sbb
mov
ja
outsb
mov
xor
dec
out
nop
fsts
lds
nop
xchg
bnd
dec
imul
rorb
out
adc
movsb
stos
sbb
add
ss
mov
idiv
popf
pop
popa
pop
scas
pop
mov
fstpl
dec
mov
daa
xor
sbb
rcl
scas
jg
fisttps
cmp
push
jb
push
insb
inc
adc
mov
jno
js
scas
mov
sub
movsl
sbb
mov
aas
adc
xchg
les
les
jle
inc
icebp
pop
je
sub
pop
adc
mov
repnz
les
fildl
clc
cmpsb
in
jp
ljmp
jle
adc
mov
mov
adc
loop
pop
popa
pop
cmp
sahf
test
les
jbe
js
mov
cld
icebp
andl
and
mov
push
inc
inc
adc
push
stc
clc
in
fstpl
imul
into
push
cmp
lods
lcall
sbb
int
cmpsl
xor
mov
enter
xchg
imul
leave
sbb
xor
mov
add
dec
dec
fs
arpl
pushf
rcl
in
dec
xor
lcall
cld
adc
mov
loope
popa
cmc
es
incl
jns
xchg
adc
sarl
mov
mov
add
movsl
lods
xor
pusha
clc
jbe
sub
cmp
bound
mov
das
mov
insb
out
push
daa
mov
jg
loope
das
pop
jmp
xor
cmp
int
adc
test
push
jne
cltd
cmpl
cmpsl
std
push
or
imul
push
mov
inc
jecxz
jb
cmpsb
scas
adc
les
ret
leave
shl
adcl
fs
mov
dec
icebp
into
insb
icebp
xchg
inc
lcall
lds
fildll
lahf
mov
fwait
push
xchg
xchg
into
je
sbb
mov
inc
mov
mov
testl
add
cmp
xchg
xor
in
loope
sbb
xor
and
js
iret
enter
lods
mov
mov
jmp
adc
jecxz
xchg
cmpsb
int3
push
cmp
jl
ljmp
mov
pop
cmp
cmp
aaa
adc
mov
scas
jl
dec
sbb
pop
jne
mov
push
mov
inc
add
enter
inc
out
or
pop
scas
inc
fdivrl
orb
rolb
rol
push
ret
in
mov
scas
and
faddl
sub
cmpl
push
aam
in
test
sbb
sti
ja
mov
rclb
lea
test
scas
mov
add
add
adc
jno
add
sub
sub
sub
pusha
fiaddl
test
pop
and
mov
pop
push
fidivl
add
mov
out
sub
out
arpl
jmp
or
xrelease
addb
imul
mov
sbb
mov
mov
shrb
xor
dec
cld
adc
mov
pop
jmp
fdivrp
inc
dec
mov
dec
adc
cltd
insl
fwait
bound
decl
xchg
and
push
mov
cmpsb
aaa
xchg
imul
pop
cmpb
dec
dec
mov
popa
inc
fstp
fwait
pop
stc
shrb
jmp
rol
pop
lret
pop
push
in
xlat
mov
fs
mov
xor
cmp
movsb
mov
lret
jne
mov
mov
mov
es
pop
jg
mov
cmp
pop
add
les
jmp
lods
push
lods
idivb
out
push
or
pop
test
jae
sub
adc
jmp
sub
icebp
jae
xor
push
out
clc
adc
sbb
pop
lcall
fcos
pop
adc
cltd
mov
add
es
or
ror
jne
ja
das
popf
xlat
leave
lret
xchg
icebp
shll
mov
cmp
paddd
cltd
xchg
clc
sub
mov
das
incb
idivb
cmp
mov
test
rclb
adc
dec
scas
jb
adcb
xlat
adc
test
std
cmp
xchg
push
dec
mov
sub
cmp
add
test
add
pop
xor
scas
mov
rcl
inc
jno
xchg
mov
cld
loope
inc
aad
call
rorl
push
std
or
fs
sbb
dec
pop
xchg
xor
rep
into
aaa
push
shrb
stos
sbb
fidivrl
pushf
test
add
fwait
cmp
mov
xchg
call
scas
pushf
fwait
into
clc
or
sbb
inc
hlt
out
cmc
mov
mov
les
dec
lahf
push
dec
mov
fcoml
sbb
lods
jmp
xor
push
mov
pusha
into
addl
testl
inc
mov
outsb
stos
in
and
in
inc
jecxz
call
add
stos
and
out
xor
stos
xchg
lea
psrlq
inc
mov
mov
fnop
cmp
paddw
std
sbb
ss
cli
nop
sarl
dec
xchg
jb
cli
rcrl
pop
pop
xchg
imul
clc
sarl
pop
push
xor
cmp
jno
movsb
pop
and
ja
outsb
jno
cwtl
add
lret
jp
testb
mov
mov
mov
jns
pop
imul
pop
shrb
mov
das
scas
stos
loopne
pop
mov
push
add
sub
outsl
cmp
lea
idiv
or
and
lret
sub
gs
xchg
push
hlt
shl
mov
movsl
jge
call
mov
ss
sbb
xchg
inc
push
ret
test
mov
and
adc
mov
inc
rcr
pop
leave
iret
and
lret
sti
lock
pop
and
pop
cltd
fstl
mov
fs
sub
je
outsb
fadds
or
push
sbb
imul
cmp
inc
lock
fadds
aaa
jl
lcall
push
vunpckhps
ret
adc
mov
sbb
das
add
in
stc
and
push
stos
ja
push
dec
addr16
sahf
int3
or
cli
jne
scas
mov
dec
or
xor
dec
mov
lahf
or
pop
nop
inc
loopne
inc
sbb
and
popa
or
std
jns
mov
ficoms
sbb
mov
mov
lock
mov
scas
shll
lods
roll
jne
fcoml
xchg
or
loop
movsl
stc
cli
lret
inc
in
inc
mov
add
in
dec
and
scas
cli
inc
cmp
scas
enter
outsl
mov
xchg
fcoms
pop
inc
lcall
out
or
scas
pop
es
fcmovnu
cmpsl
loope
cs
and
push
xchg
sbb
push
loope
inc
sub
outsl
repnz
inc
xchg
push
andl
jge
mov
cmc
fs
fdivr
xchg
es
hlt
xor
div
daa
cmp
in
scas
jge
pusha
or
leave
jns
fdivp
fsts
fsub
sub
fdivrs
jbe
leave
cmp
jg
adc
dec
mov
iret
jmp
cltd
test
cmpsb
ret
pop
aas
stc
add
test
mov
insl
aad
fisubrs
sbb
aam
ret
jge
adc
dec
mov
popa
xor
or
xlat
cmpb
sbb
mov
jmp
cmc
lods
rcll
shrl
xor
divb
push
mov
adc
jmp
and
fsubr
shr
or
dec
out
mov
inc
push
sbbl
push
xchg
in
inc
popf
jge
fwait
arpl
mov
pusha
inc
mov
sbb
pop
xchg
out
js
pushf
mov
mov
scas
mov
sbb
std
leave
sub
jae
push
fs
sub
fucomip
lret
enter
scas
xchg
in
or
mov
mov
push
sub
xlat
add
stc
dec
fcoms
add
mov
rorb
sbb
out
dec
pmullw
or
es
popf
test
xlat
lods
cmpsl
mov
hlt
js
sub
xor
insb
into
cmpsb
ja
cld
pushf
sahf
fcompl
jnp
lret
sub
push
loop
cltd
sbb
sbb
cld
mov
push
cmpb
int3
sbbb
loope
cmp
sub
rcrb
push
or
pusha
inc
push
add
and
adc
inc
and
push
lods
lret
jmp
pop
pop
ret
ret
bound
sahf
sbb
xchg
ds
fistps
fcoml
mov
xchg
lock
inc
call
mov
dec
pmaxsw
sub
push
mov
jne
int
std
loop
pop
xor
cmpsl
or
loopne
dec
dec
ficomps
hlt
addr16
mov
xor
push
mov
adc
cmc
or
loopne
jp
mov
outsb
pop
adc
sub
xor
or
cmp
andl
push
mov
jo
jle
xchg
xor
rcll
cld
pusha
mov
sbbb
mov
jle
sub
pushf
xchg
stc
cltd
inc
pop
xchg
xor
outsl
mov
xchg
lahf
xor
cmp
sub
mov
test
xchg
ds
push
not
adc
cmp
mov
xchg
xor
sub
loope
sbb
push
inc
imul
lods
add
mov
repnz
or
clc
dec
pop
dec
cmp
daa
js
bound
in
adc
loope
add
pop
pop
lcall
sbb
bound
in
sub
or
hlt
add
lahf
push
sub
push
inc
in
lahf
shrb
idivb
shlb
xor
or
mov
pop
popl
mov
neg
cmp
iret
pushf
or
movsb
ds
imul
aam
movsb
jnp
jl
scas
pop
nop
ss
aam
loop
lods
test
aaa
jo
push
mov
sbb
in
add
sbb
mov
xor
xor
test
mov
je
xchg
push
add
imul
or
jge
mov
scas
imul
cwtl
movsl
jne
cmp
lock
dec
mov
outsl
cmpsb
mov
jo
loope
xor
data16
adc
push
push
fiaddl
jns
cmpsl
popf
add
or
imul
out
xor
mov
xor
pushf
out
ja
adc
jge
xorb
fistps
push
push
cli
int
jns
ret
sub
outsl
pop
inc
and
repnz
fadd
mov
mov
add
dec
xchg
push
seta
or
push
jns
fsts
shl
pop
or
in
or
jb
dec
fsubr
inc
push
add
lahf
mov
rorl
or
call
dec
or
push
sub
adc
add
pop
roll
andb
jl
push
leave
maskmovq
divl
aas
cmp
sbb
cmp
cli
lods
jmp
lret
das
add
xor
xlat
push
and
out
mov
out
dec
add
loopne
ds
aas
jle
and
xor
jge
push
aad
ficomps
insb
pop
ds
inc
push
pop
sub
jae
adc
mov
xchg
test
mov
add
pusha
jbe
dec
outsb
cmp
mov
bound
adc
bound
enter
cli
xchg
ret
xchg
add
mov
push
cli
imul
mov
pop
dec
int3
aaa
xchg
pushw
cmp
add
add
test
inc
cmp
pop
add
icebp
push
or
pop
xor
cmp
jmp
xchg
ret
and
inc
and
rcl
mov
and
jbe
inc
cltd
xchg
mov
mov
cmpl
test
es
dec
nop
and
jle
lahf
rclb
jge
mov
in
mov
loope
loopne
push
out
xor
mov
push
lret
loopne
mov
mov
pushf
pop
and
rorl
insl
dec
pop
arpl
adc
dec
cmc
xlat
fdivr
cmc
or
imul
inc
pop
xchg
cmp
xor
clc
jbe
push
pop
jno
jmp
and
lds
mov
clc
and
je
loop
sub
cltd
xor
add
cmp
ss
int
insl
mov
std
jo
mov
test
sub
xchg
hlt
js
xchg
sub
aam
nop
fistpll
inc
mov
push
cmp
loope
xor
dec
movsb
mov
out
or
nop
lret
bound
movsl
mov
rolb
loope
sub
fisubrl
jae
lcall
mov
xchg
adc
or
shlb
loopne
push
inc
push
xlat
adc
in
imul
push
inc
inc
shrb
je
sub
jns
imul
xchg
or
sbb
xor
stc
stc
imul
and
add
out
ds
push
or
in
lock
data16
addr16
loop
dec
push
aaa
in
lds
dec
jb
mov
cmpsb
in
dec
subb
add
xchg
icebp
sbb
into
lret
and
in
xchg
imul
dec
test
je
scas
dec
mov
lret
adc
test
cli
dec
fdivl
dec
loopne
adc
jg
jle
rcr
sub
shll
xchg
and
call
push
mov
cld
inc
jns
fs
call
scas
stos
clc
and
sti
loop
push
mov
lea
int3
arpl
aaa
in
mov
adc
jl
aad
lahf
ret
sbb
lcall
pusha
jnp
stc
cmpsb
push
lret
sbb
cmpsb
xchg
sbb
stos
shl
or
rcrl
adcl
xor
xchg
sbbb
shlb
cmp
mov
scas
mov
or
dec
in
je
movsb
mov
jg
jno
cld
add
js
enter
xchg
int
dec
in
fidivrl
decl
stos
sbb
pop
add
out
dec
jno
sub
fwait
lret
mov
sbb
out
arpl
pop
sub
mov
aam
push
outsb
call
push
in
mulb
aas
outsb
jle
roll
cli
loop
jl
das
testl
jns
xchg
hlt
push
repnz
out
push
mov
ret
jp
or
pop
mov
inc
icebp
aad
in
xchg
dec
jno
adcl
sub
xchg
iret
push
mov
fisttpll
aas
div
pop
rorl
stos
mov
pop
cmp
lahf
xlat
jp
lds
mov
mov
dec
sub
data16
pop
jp
lea
push
dec
mov
cmp
lea
orb
dec
add
hlt
xchg
stc
out
pop
xchg
rcll
sbbb
icebp
into
and
cwtl
and
add
sbb
adc
clc
pop
cmp
in
xlat
and
mov
pop
pop
inc
dec
xchg
mov
jmp
repnz
xor
push
dec
lret
mov
lcall
fs
insb
pushw
fucom
sub
leave
add
iret
dec
push
jge
fidivl
iret
aam
scas
pusha
or
inc
sahf
ret
add
jmp
call
and
jns
cmpsl
inc
shll
ret
daa
pop
insl
sbb
inc
xor
repz
ret
gs
sahf
sbb
adc
outsl
in
xor
test
dec
mov
jb
push
mov
jns
xor
push
adc
cmpl
push
aam
push
inc
add
sbb
push
mov
inc
push
pop
rcrb
adc
cmp
pop
or
mov
cmp
addb
stos
or
and
data16
xor
push
jle
mov
sub
iret
add
add
out
pop
in
jg
mov
cmpsl
xor
dec
rcrb
popf
pusha
jno
jmp
scas
jnp,pt
or
mov
jo
lahf
or
jne
mov
inc
jo
stc
adcb
mov
inc
es
mov
repz
fsubs
imul
into
ds
jmp
pushf
cli
scas
or
xor
leave
sub
pop
inc
in
lods
push
jg
mov
xlat
mov
sub
jb
xor
jb
dec
pop
jp
xchg
jns
xor
test
sbb
push
or
gs
ds
inc
stos
inc
pushf
int3
stos
stos
dec
stos
aaa
int3
popf
stc
sbb
sarb
pop
push
pusha
xlat
rcrl
pop
js
dec
jl
cmp
dec
xchg
jns
mov
mov
cmp
ret
loope
sub
cwtl
mov
pusha
lahf
popa
test
cmpsl
sbb
popf
xor
xor
dec
jmp
ss
stos
pop
push
sub
mov
data16
cmp
add
stc
push
cmp
repnz
arpl
out
test
sbb
add
stos
xchg
cmp
fildl
stc
mov
push
pop
mov
std
cltd
daa
push
inc
out
cmc
pop
stos
or
mov
out
addr16
xlat
pop
iret
lret
mov
das
sbb
loop
popf
mov
inc
add
xor
and
mov
mov
not
jge
mov
lods
call
or
imul
mov
pop
jecxz
mov
xchg
ret
aaa
addl
inc
imul
stos
push
and
leave
insl
mov
in
lahf
inc
cli
mov
test
cmp
mov
mov
mov
inc
loop
cmpsb
insl
in
test
mov
pop
call
insb
clc
jnp
mov
ja
or
int
jo
fstpt
mov
push
rcrb
inc
js
fwait
lea
insl
jns
cmpsl
xchg
mov
sahf
or
sbb
sbb
jecxz
sti
hlt
in
jae
jae
fldt
fidivrl
dec
add
pop
sbb
loope
mov
mov
movsb
test
out
and
mov
jb
popa
pop
dec
sub
inc
push
call
pop
leave
es
sbb
jae
add
ss
cmc
cwtl
aad
fiadds
adc
xchg
jecxz
in
sbb
cld
jp
mov
subb
into
aam
xchg
fdivrl
mov
ja
mov
mov
sub
and
xor
std
xor
dec
lods
dec
or
pop
lcall
ret
xor
xchg
out
cmp
xor
cmp
enter
movsb
sbb
mov
mov
push
adc
out
mov
dec
pop
sbb
sbb
insb
jns
mov
pop
call
mov
mov
cld
shll
stc
add
and
in
nop
jae
mov
lret
mov
sbb
and
jbe
xlat
je
jne
arpl
cltd
sub
and
bound
or
inc
test
test
rolb
pop
push
aas
lods
sub
mov
pop
sti
test
sbb
and
jbe
mov
jne
mov
call
xor
repnz
sbb
addl
adc
and
adcb
loopne
in
fistl
movsb
fsubp
jae
pop
clc
jp
fld
dec
push
or
rorb
pusha
dec
mov
gs
push
xchg
imul
mov
xor
xchg
sti
xchg
mov
sbb
add
out
sub
inc
ficoml
cmc
cli
sti
pop
popf
mov
fdivl
call
in
test
outsb
pop
cltd
inc
ret
cltd
sahf
add
xor
add
jae
loop
ds
test
cltd
or
inc
mov
dec
stos
jmp
and
lret
mov
insb
or
mov
xchg
enter
pop
xor
jo
xchg
or
push
cmp
repz
jecxz
fdiv
dec
add
cmpl
dec
xor
mov
sub
sbb
in
xor
mov
xor
rsqrtps
mov
pop
clc
xchg
push
and
out
ret
mov
or
shl
lods
icebp
in
and
ljmp
or
push
scas
cld
call
mov
sub
adc
mov
cmpsb
mov
ljmp
ficoml
shrl
in
mov
mov
fstpt
xchg
dec
mov
pusha
or
mov
mov
dec
xchg
cld
pop
loop
repz
lds
js
xchg
rorl
outsl
jge
aad
insl
or
aas
or
and
adc
mov
hlt
mov
adc
or
das
outsb
lock
add
jl
add
add
pop
jb
stos
xchg
imul
push
mov
in
adc
jb
das
cmp
mov
lcall
xorb
or
xor
cmp
pop
jmp
in
fldcw
out
neg
pop
mov
mov
pop
outsb
orl
add
push
jge
or
les
mov
dec
call
scas
enter
jb
loope
arpl
loope
pop
mov
test
je
jb
out
push
xchg
add
fisubrs
imul
and
fdiv
ljmp
test
js
push
cmp
push
ficompl
dec
pop
mov
cmp
cmp
lods
int
pop
mov
dec
in
xor
testl
inc
sub
aam
dec
in
int3
in
add
mov
mov
subb
sub
stc
pushf
xchg
sub
jo
cld
out
cli
inc
fsubp
lret
mov
inc
sbb
cmp
mov
or
push
adc
inc
ret
mov
mov
add
out
ss
add
insl
cmp
mov
std
cmpb
mov
adc
push
pusha
push
mov
sahf
pop
xchg
cld
movsb
xorl
sub
repnz
xchg
mov
jo
fs
fbld
stos
mov
out
sub
rorb
or
pop
adc
hlt
popf
das
and
sarb
push
out
add
lds
jno
pop
cmp
dec
lahf
imul
neg
adc
push
and
or
dec
push
add
jne
dec
lds
cli
mov
loop
lret
rcrl
gs
insl
or
mov
push
cmp
sbb
sbb
adc
add
ljmp
ret
cmp
cmpsl
fsubs
jmp
and
lods
sbb
mov
mov
stos
sub
outsl
mov
mov
xchg
loopne
mov
pop
push
or
mov
inc
mov
sub
mov
xchg
lea
or
xchg
filds
push
jbe
fldcw
sub
cltd
push
dec
push
int
shll
adcl
fsubrl
xor
outsb
push
mov
push
xchg
call
and
mov
dec
push
adc
mov
fsubl
jo
rcll
pop
adc
in
fsubrs
in
movsl
mov
dec
cmpsl
and
mov
fwait
add
and
sub
jbe
pop
and
shrb
enter
xchg
adc
xor
jmp
mov
xlat
push
movsb
jo
xchg
sbb
mov
lods
mov
mov
xchg
mov
mov
sub
int3
cld
stos
push
xor
out
mov
mov
jb
mov
cld
bound
and
ja
inc
add
push
ds
xlat
inc
addl
sahf
out
mov
inc
cmp
sbb
lds
sbb
and
icebp
lret
xchg
mov
and
add
lret
pop
sub
ficoml
add
pop
insb
jl
and
sub
js
xor
mov
enter
push
bound
adcw
stc
int3
add
dec
rorb
test
fildl
idivb
pop
cmpl
fildll
push
imul
shrb
imul
xchg
dec
dec
jle
push
hlt
sub
pop
iret
pushl
les
repnz
or
jge
ljmp
popa
mov
jecxz
stos
popa
shlb
dec
js
out
mov
push
inc
xchg
imul
push
orl
jmp
fnstsw
fsubrs
stos
jne
push
jp
addr16
test
cmp
lds
cmpsb
xor
cmpsb
pop
ss
mov
jno
pop
mov
mov
mov
inc
sbb
popl
pop
lret
pop
in
jmp
jb
arpl
add
xor
or
cmp
loop
in
xchg
lock
adc
mov
push
xchg
scas
mov
ja
sub
dec
insl
sub
push
mov
add
lcall
or
sahf
std
push
aaa
test
cld
mov
scas
or
test
iret
push
lds
jnp
jle
fcmovb
mov
add
add
sub
imul
add
and
iret
inc
dec
push
lds
mov
in
int3
in
mov
scas
pusha
adc
pop
and
mov
mov
scas
and
ret
mov
in
mov
mov
push
hlt
rorl
pop
call
rclb
jnp
rorb
jge
rcrl
xor
out
sub
int3
jnp
dec
cld
shlb
jg
push
sti
into
cmp
popf
inc
frstor
stos
pop
dec
cmpb
mov
fs
dec
repz
dec
aad
push
xchg
mov
inc
repnz
mov
adc
iret
and
or
or
jg
arpl
cld
push
scas
leave
xchg
add
orb
push
daa
and
and
mov
mov
out
jg
mov
push
dec
adc
int
cmp
lods
push
xchg
insb
sbb
in
push
mov
add
jns
cmp
dec
sahf
das
and
es
or
fsubl
aam
or
push
frstor
push
ret
mov
xchg
sub
loopne
mov
pop
add
loopne
popf
sbb
add
and
loop
mov
pop
rolb
jg
jo
and
and
cli
aam
xor
jle
mov
xor
lea
lcall
les
inc
cmp
jnp
mov
sub
leave
fwait
xchg
xchg
push
fwait
jg
fs
movsb
je
cwtl
test
xchg
ds
call
lea
cmpsb
add
daa
cwtl
outsl
mov
stos
or
sub
mov
push
mov
mov
jmp
cs
mov
push
mov
ljmp
or
or
iret
xchg
mov
into
push
jg
jge
mov
loopne
mov
adc
int3
push
stc
sub
pusha
pushf
popf
mov
dec
aaa
gs
addl
cmc
stos
gs
xlat
rorl
in
dec
xor
or
aam
cmp
mov
aad
cmp
divb
shlb
mov
cmp
mov
pushf
mov
lahf
pusha
mov
sarb
iret
add
xchg
dec
cld
cmp
sbb
xchg
shll
adc
cwtl
jne
into
mov
inc
xlat
fistpl
push
adc
test
or
repnz
enter
and
lock
mov
scas
adc
call
in
xlat
imul
jl
arpl
or
cmc
in
imul
popf
lods
cmpsl
cmp
dec
mov
test
clc
cli
stos
into
lods
outsb
std
push
or
pop
add
ja
std
xchg
pop
jbe
lret
cmp
stc
testb
lods
in
xor
adc
mov
adc
xchg
into
aas
dec
pop
movsl
xchg
xor
dec
jl
scas
mov
dec
push
mov
aaa
push
movsb
mov
pop
es
xor
clc
lahf
push
inc
inc
cmp
mov
jo
movsl
push
jecxz
push
push
std
out
cmp
jl
xchg
bound
jbe
gs
insl
sub
out
xchg
neg
pop
dec
pop
fldl
mov
mov
imul
adc
adc
inc
ljmp
jecxz
fidivl
jmp
int3
ljmp
lret
jecxz
pop
push
sbb
cmp
and
push
lock
xorb
ja
and
xor
adc
popf
sub
or
xchg
int
mov
std
inc
shlb
movaps
jmp
or
pop
xchg
dec
outsl
and
dec
xchg
sti
cmp
mov
test
cwtl
jge
add
dec
fistpl
mov
or
xchg
sti
out
lea
mov
xor
rcrl
fadd
dec
mov
and
cmp
xchg
arpl
sub
test
xchg
pop
cmp
out
scas
decb
sbb
nopl
cmpb
add
dec
jg
push
nop
adc
insl
xchg
jmp
cmp
ds
mov
out
mov
add
cld
jns
sub
ds
cli
push
pop
xchg
mov
dec
aaa
xchg
pushf
pop
and
mov
pop
pop
mov
js
arpl
jecxz
pushf
notb
ljmp
sbb
movsb
and
repnz
imul
scas
stc
leave
pop
xchg
addr16
adc
and
stc
xor
mov
sbb
jecxz
xor
xor
adcb
xchg
xor
xor
fstl
fstps
adc
call
push
mov
lret
sahf
in
aam
or
ret
jle
incl
sub
pop
int3
insb
mov
xchg
pop
add
sbb
decb
lahf
aad
add
outsb
cs
arpl
ljmp
pop
or
movsl
shrb
int
adc
xchg
stc
cmp
popf
sbb
mov
mov
or
mov
and
push
pop
jg
adc
idiv
mov
sbb
cmp
aad
stos
mov
ds
xlat
pop
dec
lret
aas
or
sub
add
mov
add
adc
and
sub
insb
jb
gs
mov
bnd
lret
mov
jp
lcall
xor
add
ds
lret
sbb
adc
push
pop
mov
add
scas
mov
imul
cmp
mov
ljmp
and
push
lods
add
push
std
iret
push
insl
xchg
repz
add
icebp
sub
int3
sub
out
stos
cmp
mov
mov
fwait
nop
mov
dec
jl
and
sarb
pop
push
xor
aaa
lock
cmp
jbe
push
test
mov
int3
mov
adc
insb
cmpsb
and
or
daa
lea
cmp
xchg
sbb
or
inc
frstor
lcall
or
mov
pop
add
sub
or
imul
cmp
jae
mov
pop
jo
mov
push
scas
mov
shl
mov
mov
cmp
leave
mov
es
loop
sbb
ret
cmp
cmp
and
lea
add
dec
add
mov
scas
popf
or
adc
xchg
dec
inc
out
leave
mov
insb
movsb
nop
js
xor
and
pop
popa
mov
adc
sbb
out
xchg
mov
fs
repnz
or
mov
imul
int3
dec
jne
pop
sahf
jmp
dec
imul
dec
into
or
inc
push
sbb
cmp
movsb
retw
out
outsl
dec
jne
jl
daa
push
mov
and
adc
js
mov
lcall
mov
jge
mov
lcall
cmp
adc
movb
xchg
push
mov
mov
dec
xchg
jo
pop
push
mov
cmp
jge
jne
dec
pop
nop
push
jecxz
test
lods
inc
add
int
xchg
ds
add
ret
add
mov
arpl
leave
or
aam
pop
and
xchg
lcall
fwait
test
jl
and
lahf
std
pusha
in
les
jecxz
shll
add
jp
xor
xlat
enter
fcompl
test
orb
mov
rorl
mov
xchg
pop
jmp
insl
adc
shl
sub
jnp
xchg
lret
addb
out
stos
sbb
lock
push
mov
ds
add
mov
ss
push
sbb
hlt
shl
pop
testb
push
and
xor
mov
or
mov
adc
sub
add
fisttps
movsb
xchg
dec
cmp
push
cwtl
out
cld
aad
mov
mov
sub
out
out
push
xor
nop
jae
cwtl
mov
adc
out
xchg
dec
icebp
pop
pushf
int3
imul
add
enter
ja
in
cltd
xchg
pusha
push
sub
or
lods
mov
adc
jnp
xor
add
dec
std
insl
cmc
sub
popf
push
les
test
imul
xor
enter
pop
aad
or
pusha
mov
adc
sub
data16
inc
fidivrl
rcll
sahf
enter
outsl
insb
in
cmc
pop
inc
and
out
push
cwtl
insl
in
sub
inc
jl
dec
mov
sti
ss
or
jbe
shr
int
scas
jg
leave
pop
sarb
jecxz
add
mov
xor
je
xor
pop
dec
mov
lea
mov
push
stc
aaa
scas
out
inc
movsb
cltd
lock
push
mov
dec
and
out
das
inc
popf
nop
pushf
mov
pop
xchg
mov
xchg
mov
popa
rolb
dec
xor
jecxz
popf
xlat
imul
or
mov
mulb
out
cwtl
push
hlt
pop
xchg
mov
mov
mov
out
in
mov
loopne
adc
pop
insb
fs
idiv
mov
xor
cmp
ret
xchg
addr16
nop
fsubs
fs
lods
adc
or
into
ret
stc
adc
add
je
ja
in
outsl
sub
mov
mulb
fiadds
addb
push
mov
ret
inc
mov
fnstenv
mov
adc
test
jns
and
pusha
jecxz
pop
pop
pop
mov
test
xchg
mov
outsb
jae
into
ja
mov
xchg
out
mov
ljmp
arpl
mov
or
mov
les
lahf
out
add
jns
not
aad
and
xchg
inc
sbb
push
inc
xchg
popa
cmp
js
xor
in
pusha
lock
mov
xlat
lahf
xchg
ss
ss
inc
in
cmc
or
test
sti
add
test
icebp
inc
adc
movsb
shll
or
xchg
inc
inc
mov
mov
addr16
in
or
subb
add
loop
pushf
dec
stos
ja
and
mov
jno
imul
inc
inc
or
shll
cmpsl
push
add
sarl
in
adc
imul
and
int
adc
fistpl
loope
fld
add
pop
or
dec
jb
sbb
add
push
ja
add
push
xchg
loope
sbb
push
dec
jne
data16
push
pop
or
sub
imul
sub
xlat
je
decb
xchg
dec
pop
cmp
mov
sbb
out
xor
cmpb
cld
iret
test
ret
je
push
adc
mov
loop
cltd
xchg
xchg
push
loope
ret
das
push
mov
iret
les
xchg
jge
rol
sarl
push
mov
imul
xor
outsb
dec
and
loope
inc
and
adc
int3
out
add
push
dec
js
insl
mov
dec
test
jmp
jno
pusha
cmp
fs
mov
les
addr16
fildll
movsb
clc
pop
and
or
dec
fwait
shrb
loopne
in
aaa
xchg
push
cmp
pusha
jo
lock
sub
xchg
insl
dec
in
mov
mov
imul
imul
dec
and
daa
mov
imul
in
mov
into
mov
jp
pop
jae
ret
sub
pop
sarl
cmp
xchg
sub
cmc
je
mov
imul
jg
push
push
sahf
and
aad
mov
test
lea
jmp
enter
or
out
jl
cmp
cmp
pusha
cmp
xor
mov
loope
scas
aaa
bound
push
dec
outsb
sahf
ljmp
daa
rcr
cld
jp
mov
mov
xor
lods
jns
lahf
mov
dec
stos
jae
jle
gs
in
mov
mov
xchg
lcall
je
rcl
js
rcl
fstl
adc
mov
jb
test
imul
adc
mov
push
sbb
ljmp
ss
daa
dec
sbb
sub
or
outsb
vmwrite
loope
xor
lret
insl
into
ds
adc
adc
xchg
stc
sbb
dec
pop
push
shll
movsb
xchg
je
jbe
imul
add
pusha
mov
out
mov
in
or
xor
stos
pop
das
fmull
ja
xchg
add
push
fmull
xchg
xchg
dec
mov
mov
mov
or
shll
mov
dec
or
pop
xor
int3
pusha
lods
movsl
push
popf
xchg
xor
push
sti
icebp
cld
inc
out
fidivrl
popf
xchg
sub
fwait
addb
hlt
jp
loopne
shlb
mov
mov
jge
cmp
loop
std
xchg
xlat
test
sub
sub
pop
jo
sub
and
xor
popf
mov
xchg
inc
arpl
test
adcl
loope
mov
mov
lea
sbb
lods
dec
out
and
fimuls
test
cmp
fldcw
mov
iret
clc
aad
lea
mov
aaa
in
testl
call
cmc
mov
push
jmp
scas
cmp
fsubs
jae
xchg
lret
jo
outsl
cltd
fsubs
cmc
jmp
or
push
std
adc
xor
lcall
adc
stc
cli
xchg
pop
movb
jmp
mov
inc
test
sub
stc
adc
repnz
es
cmp
cmpsl
or
in
dec
jb
enter
addl
push
lahf
or
mov
mov
test
xchg
jbe
inc
mov
mov
stc
adc
rolb
mov
das
and
push
je
stos
subl
and
in
xchg
lock
dec
icebp
sbb
hlt
dec
cmp
repnz
outsb
dec
dec
inc
out
sub
xchg
xor
pop
or
sub
andl
jp
out
push
out
push
dec
xorb
sarl
out
movsb
out
data16
cmp
pop
sbb
xor
jbe
jmp
pop
inc
adc
mov
scas
into
movsl
and
loopne
sbb
adc
mov
ret
and
pusha
addr16
inc
popf
jmp
movb
push
mov
xor
jns
not
jb
adc
in
fs
mov
adc
test
fildl
mov
out
in
loopne
sbb
push
cld
mov
pop
sbbl
movsl
jns
mov
dec
imul
inc
popf
cmpsl
jo
lock
xorb
pop
out
cli
sbb
cmp
mov
testl
sbb
out
sub
push
xor
sub
push
pop
push
jnp
add
cmpsb
into
or
mov
fwait
sub
ja
adc
push
mov
stos
push
scas
cwtl
ja
fbld
out
push
sub
cld
mov
mov
xchg
xlat
xchg
dec
imul
aaa
aad
push
andb
scas
push
dec
mov
mov
pop
data16
es
add
cltd
into
and
push
inc
xor
inc
push
pop
pop
xchg
and
and
or
fmull
jne
mov
jbe
imul
fdivrl
lock
lret
mov
fidivrs
sahf
sbb
insl
aaa
scas
xchg
ljmp
ret
rolb
xchg
int
xor
stos
fisttpl
dec
and
xchg
mulb
push
pop
or
dec
xchg
push
mov
ljmp
xchg
push
je
add
cmp
or
inc
mov
sahf
add
mov
sti
xchg
call
push
rclb
shll
push
sbbl
aad
mov
mov
andl
xchg
cmpsl
push
stos
sub
push
test
or
push
aam
dec
mov
fnsave
and
shl
rcl
inc
mov
fiadds
test
sbb
imul
cmc
aam
je
in
out
xchg
push
loope
xchg
ja
cmp
xor
test
cmc
add
cld
lds
xchg
lock
divb
mov
std
mul
inc
push
push
jl
mull
adc
push
lret
push
mov
push
fmul
les
in
andl
gs
scas
jnp
xor
mov
fwait
loop
sub
fisttpl
lds
mov
ljmp
jp
inc
mov
testl
push
and
insl
arpl
sub
cli
mov
icebp
into
mov
jb
mov
pop
pop
out
sbb
pop
lds
fiaddl
and
test
test
sub
jno
mulb
sahf
pop
rcrl
ds
in
push
cs
ds
fcmove
nop
test
cltd
shll
mov
xchg
inc
and
out
jb
data16
frstor
jp
sbb
loop
loop
jo
enter
idivb
dec
and
sub
addl
rorl
mov
adc
lods
inc
sbb
mov
xlat
mov
and
cmp
and
add
mov
cmpb
xchg
fnstenv
andl
cmp
orb
sarl
jne
dec
sub
inc
mov
add
mov
rcrl
adc
xlat
pop
imul
decb
inc
dec
pcmpeqd
or
shlb
in
dec
dec
seta
popa
rorl
jne
mov
mov
mov
jge
ret
aas
fsubrs
sub
fisubs
out
cmc
mov
gs
cmc
stos
xchg
hlt
push
mov
stos
jg
dec
push
imul
or
sub
pop
sbb
adc
cmp
andb
mov
inc
les
mov
movsl
cmp
xchg
sub
jbe
mov
decb
mov
in
add
subl
pop
or
jae
loope
xchg
aaa
inc
pop
test
fbstp
cmpsl
les
aaa
leave
jle
and
lret
inc
fwait
jne
notl
xlat
stos
call
push
inc
shrb
pop
mov
insb
cmc
jmp
and
rcrb
sti
mov
add
int
dec
test
or
int3
adc
shlb
inc
inc
bound
out
ret
data16
add
mov
bound
sbb
sbb
inc
es
negl
lds
sti
adc
push
enter
adc
xor
ret
inc
leave
adc
xchg
inc
addl
out
xorl
mov
aad
fdivrs
jp
cmp
cld
pushf
loope
aad
rol
lea
sbb
ds
lds
pop
sub
sbb
xor
adc
mov
or
sub
add
ret
lock
outsb
or
lea
ss
loopne
push
test
repz
in
dec
loopne
out
popa
mov
mov
loope
xor
cmc
popa
push
fdivr
int3
adcb
pop
stos
cmp
dec
sbb
std
push
and
in
add
in
ss
popa
test
gs
jmp
cli
or
add
clc
dec
gs
nop
jnp
out
cmp
sub
inc
in
mov
push
xor
pop
test
cli
in
std
aam
mov
outsl
mov
jno
push
fbstp
popa
jp
scas
dec
xchg
and
mov
aad
mov
fwait
adc
sub
outsb
dec
push
lret
cltd
lahf
mov
dec
mov
faddl
or
int3
or
leave
cltd
imul
or
jne
sbb
lahf
sub
aaa
or
add
sbb
cmp
imul
pop
stc
cmpsl
lea
add
xor
dec
mov
mov
mov
sub
sub
aad
ljmp
sbb
inc
pop
pop
or
sub
mov
lcall
xor
fmull
shl
add
nop
dec
ja
adc
out
pcmpgtb
insl
out
sti
ret
lods
push
pop
jne
in
iret
add
js
js
dec
hlt
pop
outsl
imul
sti
lcall
sbb
mov
out
fmul
mov
lea
lods
jo
cmp
cwtl
icebp
sti
mov
jmp
testb
xor
cwtl
gs
loop
push
xchg
cmp
cmc
jno
jp
xor
scas
add
mov
push
je
sbb
mov
pop
dec
pusha
mov
imul
push
inc
insl
mov
hlt
mov
daa
pop
daa
loop
leave
test
stos
dec
cmpsb
into
mov
std
cmpsl
mov
xor
cmp
cmp
imul
xchg
dec
or
or
and
xlat
xchg
imul
gs
lret
sub
lcall
mov
movsb
arpl
pop
xor
scas
ret
stc
mov
xchg
push
mov
sysret
dec
mov
jmp
or
jmp
and
das
out
adc
nop
mov
aaa
add
push
mov
loope
sti
xchg
inc
fisubrs
push
pop
and
or
movsb
lret
movsl
push
mov
faddl
scas
hlt
pop
add
mov
inc
leave
and
sahf
mov
adc
sub
or
inc
ja
cmpsl
and
lret
dec
xchg
or
lea
test
mov
xlat
and
cmp
int3
imul
shl
mov
enter
repnz
cli
mov
dec
or
push
hlt
adc
addr16
in
inc
inc
aam
dec
int3
mov
add
mov
daa
ljmp
cs
cbtw
out
aam
scas
movsb
cld
out
cltd
data16
arpl
jmp
stc
data16
jp
pop
iret
push
sbb
xorl
jae
inc
movsb
push
mov
testb
shrb
inc
addr16
out
stc
insl
call
pop
sub
bound
sub
insb
shl
mov
sub
pop
lret
push
push
add
push
add
mov
lret
mov
mov
add
dec
adc
mov
int
clc
xchg
mov
mov
mov
test
lea
scas
push
out
push
sbb
lds
pop
loop
mov
cs
sarl
rcrb
inc
mov
aam
xor
jl
sub
out
mov
stos
repz
push
outsb
lret
popf
icebp
orl
fdivl
test
or
mov
xchg
popl
lock
pop
scas
xchg
les
fnsave
and
xor
xor
lahf
cmpsl
inc
push
call
jns
and
push
sar
arpl
sub
sbb
into
je
sub
mov
pushf
pop
ja
mov
je
iret
mov
mov
daa
push
outsb
dec
mov
lret
mov
xlat
into
leave
cmp
aam
jmp
cmpsb
mov
in
mov
ret
add
sub
adc
push
sub
and
cld
es
sbb
push
subl
dec
aam
loopne
cmpsb
popf
fwait
rol
rorb
and
xor
adc
mov
and
push
dec
nop
loope
sti
addr16
jno
sub
or
sarb
push
repz
pop
fadds
sbb
xchg
sub
push
pop
mov
aam
mov
les
bound
jg
sub
inc
push
mov
adc
ss
in
clc
mov
cmp
test
rolb
pop
mov
and
mov
sbb
incl
sbb
jmp
nop
mov
mov
mov
xchg
pop
pop
rclb
sbb
or
and
dec
imull
and
lea
fisttpl
lahf
cmp
or
add
jbe,pn
frstor
sti
push
xchg
aad
insl
imul
sbb
pusha
push
or
loop
mov
cmp
leave
imulb
pop
push
fwait
pop
stos
lret
cs
cltd
push
and
mov
cmp
sub
iret
lret
in
or
cmpsl
imul
xor
popa
and
lcall
mov
ficoms
aaa
cmpsb
cld
mov
adc
cld
sub
sarl
lahf
out
cwtl
pop
mov
inc
daa
ja
jo
in
mov
lret
or
mov
fimull
cmpsl
lods
das
ret
sbb
jle
lds
ss
lcall
jg
inc
jbe
aaa
imul
mov
push
sbb
popf
cmpsb
addr16
add
jmp
enter
add
xor
loope
dec
dec
push
imul
sbb
sub
sbb
mov
lods
adc
fwait
add
mov
sub
mov
lret
mov
sub
test
call
sbb
or
cmpsl
in
out
mov
psrld
scas
pop
mov
outsl
cmp
mov
adc
add
sbb
jp
data16
es
sbb
xor
ret
fists
ffreep
jmp
xor
popf
xchg
xchg
insb
je
aaa
movsb
pop
into
sbb
inc
pop
pop
mov
mov
pop
test
adc
jge
pop
mov
dec
sub
pop
lret
cmpsb
idivb
outsb
shr
shll
dec
push
sti
in
ljmp
push
in
adc
inc
add
mov
push
mov
bound
adc
push
mov
sbb
cmpsb
lret
xchg
subb
in
mov
dec
bound
pop
pop
cmp
idivl
popa
cmp
outsl
xchg
aaa
or
or
or
mov
rcrl
call
cltd
cmp
jmp
aas
mov
pop
dec
mov
test
push
je
dec
lret
jmp
mov
push
fidivs
inc
shll
push
pop
sub
pop
sub
fsubs
loopne
test
imul
mov
mov
mov
jae
iret
icebp
out
sub
jp
imul
sub
arpl
lea
jb
ljmp
xchg
cmpsl
in
aaa
xchg
ss
fidivs
jae
in
pushf
pusha
cmp
adc
dec
pop
hlt
gs
mov
sub
leave
sub
js
gs
xorb
cmp
mov
stos
jb
fisubl
cli
pop
lea
cmpsl
stos
push
into
xchg
sbb
popf
mov
aad
sbb
int
mov
aam
adc
cld
xor
in
clc
xchg
add
shlb
cli
pop
add
mov
push
cmpb
sub
cmpsl
ja
pop
cmp
sbb
push
jecxz
insb
push
adc
mov
cmp
pop
scas
and
sub
loope
sti
popf
pop
ret
cmc
cmp
fwait
imul
dec
out
pushf
pushf
inc
jl
ror
mulb
scas
inc
fadds
jmp
mov
xchg
inc
xor
pop
mov
add
jnp
notl
or
add
cmpsl
pop
mov
cmp
and
or
pop
add
pop
lcall
inc
xor
cs
in
mov
fs
shlb
add
les
mov
cli
pop
stc
sub
lea
movsb
icebp
inc
popa
aam
pop
test
int3
pop
test
jne
stos
call
rcll
stos
push
outsl
add
sbb
jo
imul
cvtps2pd
mov
xor
xchg
sbb
jae
das
pop
lea
sbb
xchg
sti
out
lret
mov
rcr
lcall
enter
xor
not
test
movsl
mov
xchg
push
xchg
inc
inc
adc
test
mov
fmuls
lock
jo
out
adc
dec
popf
adc
pop
leave
push
shrl
fistl
repz
insb
sbb
inc
adc
jb
lahf
sub
or
leave
shl
pop
pop
adc
mov
sbb
jae
push
inc
ret
cmp
or
jl
scas
mov
mov
mov
lret
inc
or
push
repz
push
mov
cmp
sub
xchg
icebp
lcall
sub
dec
push
adc
lods
jge
mov
xchg
sub
add
mov
xchg
daa
test
mov
ljmp
ja
enter
out
pop
aam
stos
jecxz
or
aas
adc
push
in
mov
nop
sub
aas
in
pop
mov
aam
or
mov
data16
pop
jmp
push
xchg
cmp
and
and
jle
jmp
pop
fdivrp
scas
dec
cmp
pop
in
arpl
pusha
inc
popa
insl
cmp
cmp
mov
jl
int3
movsb
iret
xchg
mov
mov
or
lret
scas
fnstsw
xor
cmp
sbb
mov
or
sub
pop
mov
mov
jne
inc
mov
mov
sub
fistpl
mov
xchg
pop
mov
aad
push
mov
jbe
cmp
xor
dec
out
mov
test
repnz
out
dec
insl
sub
lahf
ror
icebp
enter
sub
loop
out
loope
bound
mov
mov
jp
xor
and
push
out
daa
mov
add
rorb
and
inc
scas
mov
shr
into
test
jge
shrl
cmp
inc
arpl
ret
xchg
xlat
scas
sarb
loopne
cmpsl
aam
xor
in
jecxz
inc
sub
popf
pop
xchg
jno
aad
xor
jae
xchg
inc
push
out
jmp
insb
cs
stos
xchg
ljmp
bound
and
clc
pop
ljmp
mov
xchg
cld
test
fsub
pop
call
adc
lea
mov
imul
adc
andb
mov
mov
sub
inc
and
hlt
sbbl
mov
dec
enter
enter
fwait
sub
fnstcw
sbb
pop
std
xchg
jmp
into
ljmp
ret
xor
filds
mulb
data16
or
shrl
jno
or
rcrl
push
or
jg
lods
mov
mov
dec
daa
stc
cli
cld
mov
lock
mov
stos
cli
je
pop
ds
or
lahf
cmp
movsb
loop
stos
add
push
cli
jae
in
aad
icebp
cmp
fwait
sub
push
out
dec
push
push
push
cmp
dec
xchg
and
or
push
mov
test
or
and
dec
int3
je
jae
pop
mov
cmpsl
aad
nop
pop
cltd
fwait
xor
inc
or
add
pop
inc
int
sahf
sbb
xchg
inc
ja
dec
dec
clc
popf
and
loopne
lds
jge
jmp
movsl
pop
xchg
jns
jmp
mov
pop
mov
push
insl
aas
ret
mov
push
daa
fwait
shl
dec
loop
loopne
pop
rcrb
inc
push
lret
adc
push
pop
inc
insl
xlat
aam
sti
sub
rorl
and
dec
sahf
or
sub
movsl
dec
test
std
fucom
cs
mov
xor
leave
sahf
inc
sub
lds
daa
push
cli
mov
test
or
mov
dec
jno
sbb
addr16
xchg
lretw
mov
mov
inc
push
pop
mov
or
mov
aaa
lock
add
jg
push
mov
fistpll
sbb
jl
movsl
mov
cli
xchg
mov
adc
int3
xor
das
movsl
cs
push
data16
inc
or
lea
xchg
mov
mov
stos
pop
int
nop
xchg
adc
mov
lea
es
fucomip
out
sub
inc
mov
xor
mov
icebp
sti
xlat
xchg
mov
jecxz
sbb
pushf
jl
or
hlt
pop
add
nop
mov
fs
jne
int
mov
daa
push
inc
and
sub
cmp
add
and
pop
inc
mov
mov
popf
stc
push
decl
xchg
push
xlat
rcl
mov
jg
insb
pusha
pushf
push
movsb
mov
cltd
xlat
push
push
int3
cmp
icebp
jns
dec
mov
sbb
fnstsw
cld
mov
lock
out
pop
jle
daa
in
and
outsb
sub
incl
push
sbb
mov
xchg
arpl
lods
test
daa
or
mov
jo
adc
jb
cmpsl
jbe
call
stos
mov
jecxz
out
push
icebp
mov
cwtl
jmp
mov
dec
imul
sbb
loopne
mov
mov
aas
xchg
jno
neg
mov
jge
xlat
cmp
insl
pop
lahf
add
or
sbb
jne
sahf
jb
scas
mov
bound
add
push
mov
pop
and
aad
push
cmp
adc
adc
repnz
scas
test
addl
movsb
and
cmp
sub
mov
addr16
dec
rclb
ret
pushf
mov
xchg
adc
sub
orb
push
data16
outsl
out
inc
xlat
cmp
mov
cmp
out
cmpsb
aam
stc
add
mov
sbb
lock
adcl
adc
fs
enter
inc
ficoms
aas
mov
adc
push
lods
shl
cmp
sbb
test
cmpsl
icebp
rol
das
popa
popa
movsb
xchg
inc
dec
cmp
inc
std
div
push
es
mov
cmp
imull
dec
xchg
gs
or
jmp
push
jecxz
and
xchg
push
je
lcall
sub
or
xchg
lock
push
push
add
popa
in
dec
cli
jns
and
mov
mov
pop
cmp
loopne
imul
bnd
cmpb
call
in
popl
sbb
and
es
test
inc
es
or
sbb
inc
sub
add
xchg
mov
jmp
mov
inc
push
int3
sub
add
dec
mov
mov
outsb
cmp
or
mulb
getsec
adc
sahf
xlat
fs
icebp
sbb
sbb
or
push
jbe
push
jns
mov
sbb
adc
pushf
mov
dec
aam
inc
sbbl
cld
testb
iret
adc
mov
cvttps2pi
les
sti
jae
dec
pop
xlat
lahf
out
cmp
lods
dec
das
mov
popf
and
cli
addr16
cli
cmp
into
adc
ret
outsl
jge
aas
push
lds
inc
sbb
dec
sarb
std
mov
sbb
push
loop
ss
dec
nop
daa
fidivrl
sbb
jg
jmp
cmp
xchg
lods
rorl
cltd
and
imul
cld
jbe
subl
or
add
fs
cmp
sarl
mov
push
fnstcw
out
es
jg
mov
fwait
sub
push
popa
lods
cltd
rorb
pusha
into
xchg
jbe
scas
out
jmp
mov
call
in
pop
aaa
and
sbb
into
sarb
aam
das
dec
mov
mov
sub
push
shrb
rclb
adc
mov
sub
or
insb
xchg
xchg
adc
push
sub
mov
fcompl
add
testb
repnz
enter
jl
mov
push
mov
push
sbb
mov
push
pop
out
mov
xchg
mov
adc
adc
clc
sbbl
add
mov
cmp
fdivrs
int3
leave
jae
dec
repz
add
data16
push
mov
push
dec
sub
das
push
ret
movsl
mov
lea
dec
test
adc
xchg
idivl
adc
frstor
sub
xchg
test
dec
pushf
imul
dec
mov
adc
clc
inc
and
cmp
pushf
push
push
mov
push
inc
mov
jae
inc
fiadds
sar
mov
mov
lret
sbb
outsl
pop
mov
shl
insl
add
pop
std
insb
add
js
mov
jg
sbb
mov
pop
mov
addr16
cmp
pop
cmp
sbb
sub
push
add
xchg
jb
lds
cwtl
scas
out
sbb
jno
pop
xor
push
inc
pop
dec
aam
mov
lds
pop
xlat
jmp
ds
orl
into
out
jns
shll
pop
push
push
pushf
mov
push
leave
jg
pop
stos
mov
test
inc
fs
movsl
out
test
mov
inc
mov
add
scas
push
jge
add
xor
jb
stos
clc
dec
inc
repnz
idivb
jp
daa
mov
cmc
iret
test
lods
xor
cmp
adc
adc
dec
mov
and
shrb
movsl
xor
sub
pop
or
pushl
push
push
or
mov
ficoml
aaa
aad
adc
dec
popa
hlt
or
lcall
out
rcl
xchg
out
lock
pop
addb
lds
insb
xchg
fimuls
daa
movsl
movsl
xchg
mov
add
shll
data16
std
imul
shrb
aaa
or
mov
xchg
cltd
leave
fldt
mov
lds
dec
mov
mov
inc
mov
mov
adc
mov
mov
lcall
mov
mov
mov
jp
addr16
xor
dec
mov
loopne
test
icebp
sbb
and
xor
gs
sub
test
sbb
aas
add
xchg
cmp
ficompl
push
pop
mov
int3
fsubs
jp
mov
push
dec
push
pop
scas
insb
push
jle
cli
jbe
enter
jno
sarl
or
arpl
pop
mov
xor
mov
test
out
aam
idiv
push
xchg
lret
or
sbb
jp
dec
lret
mov
stos
push
sahf
mov
sub
shrb
scas
sbb
add
test
push
adc
cwtl
int3
push
inc
push
inc
cs
inc
inc
pushf
add
sbbl
scas
mov
xchg
mov
push
add
loop
insl
push
or
in
push
cmc
in
mov
fstps
fstl
fcom
test
addr16
and
jno
imul
push
push
pop
sub
inc
sub
pop
ss
add
clc
adc
pop
loope
sub
push
cli
or
pop
lds
jp
add
insl
xor
dec
icebp
in
mov
mov
mov
lea
sar
outsl
lret
jle
gs
cmc
imul
xor
fisubrl
xor
xchg
adc
testb
pop
add
xchg
out
xor
stos
sub
dec
mov
lock
xorl
adc
aam
xlat
mov
je
in
adc
cli
mov
inc
mov
stos
adc
popf
pop
push
add
fnstcw
sti
popf
jbe
push
or
shlb
fs
mov
xor
imull
stc
clc
cmp
je
sub
jp
or
push
mov
dec
ja
movsbl
mov
adc
dec
mov
out
mov
loope
xor
xchg
mov
mov
fdivs
cmpb
cmp
ret
cmp
call
sub
sahf
lcall
xchg
pop
movsb
cld
inc
daa
ds
shlb
setno
or
pop
fimull
inc
and
into
in
aad
imul
sub
hlt
pop
mov
rol
jl
in
aas
movsl
pushf
loopne
js
adc
jb
lcall
ljmp
and
and
daa
lods
rcll
fbstp
push
fwait
popa
push
mov
cvtdq2ps
push
jno
push
and
fsubl
pusha
add
and
lahf
imul
imul
add
test
mov
pop
jnp
fisttpll
popf
sbb
mov
adc
outsb
xchg
out
add
cmp
cmc
xchg
jle
add
mov
lret
mov
dec
imul
jg
push
popa
fsubrp
mov
jp
out
int3
into
adc
push
je
lods
mov
pop
adc
add
adc
xchg
std
sbbb
repnz
fcoml
ljmp
xor
mov
das
bound
shlb
xchg
mov
or
into
mov
daa
popa
and
adc
sub
shrl
cmp
push
add
imul
arpl
stos
sub
mov
dec
or
xchg
das
outsb
incb
mov
movsb
pop
or
inc
pop
in
jno
fwait
xor
ret
aad
gs
jb
cmp
dec
int
mov
sub
out
iret
clc
loopne
in
cmovp
push
xchg
popa
mov
iret
mov
mov
pop
pop
mov
lods
sub
add
daa
dec
mov
cmp
outsb
jge
fdiv
push
loope
add
push
add
pop
jmp
jb
pop
pop
sub
xchg
jmp
xor
add
push
jb
lahf
and
mov
and
push
mov
lea
das
jnp
cmp
or
aad
jne
pop
and
nop
into
xchg
adc
dec
mov
pop
jp
ds
repz
ja
dec
mov
dec
decl
pop
xchg
mov
cmpsl
dec
enter
js
jl
lret
dec
fstps
rcl
sbb
dec
test
orl
test
xchg
jnp
dec
fidivrs
mov
sbb
enter
push
leave
push
mov
pop
int3
jmp
test
xchg
mov
cld
mov
xchg
adc
jle
lods
pop
mov
test
or
jnp
sub
je
mov
xor
imul
and
or
xor
mov
adc
hlt
in
out
ret
shlb
repz
movsl
out
mov
shrb
gs
dec
pusha
outsl
inc
and
sbb
xchg
push
fmul
nop
or
sub
lods
js
outsb
adc
sbb
and
ljmp
dec
bound
pop
adc
sub
adc
sub
arpl
ret
add
and
frstor
or
xorl
jne
fadd
mov
insl
mov
cmp
cld
lods
cmpsl
fistpl
jne
sub
lret
mov
cmp
pop
in
jns
imulb
add
popf
jb
mov
mov
in
inc
in
bswap
scas
xlat
daa
xchg
mov
das
into
and
sbb
xchg
into
ss
sub
sbb
xor
lret
add
adcb
testl
inc
fidivl
mov
or
push
push
test
xor
pop
lock
mov
cmpsb
add
nop
dec
adc
add
jge
xchg
cwtl
xchg
pop
arpl
test
test
mov
dec
pop
sti
ja
xchg
clc
add
jo
icebp
or
add
mov
inc
inc
push
sbb
adc
lcall
jecxz
xchg
xchg
pop
mov
mov
xchg
sub
inc
ficoms
pusha
inc
inc
sub
add
sbb
stc
jecxz
pop
in
mov
addr16
push
or
cmp
xchg
sarl
jmp
iret
jmp
pop
push
addr16
xor
mov
pop
sub
std
xor
adc
int
out
pusha
nop
add
and
jb
sbb
and
sbb
and
mov
movhps
push
shrl
sbb
add
test
jecxz
daa
aam
inc
negb
pop
add
xchg
sub
addr16
into
out
shlb
in
and
rol
repnz
dec
outsl
rcrb
cwtl
xchg
sub
es
xchg
shll
fcmovu
dec
xor
sahf
out
cld
out
xchg
pause
mov
test
ss
sbb
mov
popf
mov
fsubl
ret
push
repz
out
js
push
lret
enter
push
push
sub
repnz
cmp
cmpsb
cmp
ss
aas
xchg
dec
loop
adc
mov
pop
mov
lods
into
cmp
lret
mov
sbb
pop
and
ss
xor
push
or
fimull
loopne
xor
jno
das
mov
jmp
pop
cmp
cmpl
pop
dec
fwait
push
xchg
and
cltd
lds
outsb
movsb
fnstenv
mov
xchg
mov
pop
sbb
mov
xor
mov
test
js
cmp
in
hlt
jl
and
and
insl
pop
das
add
test
outsl
repnz
cli
mov
test
adc
push
in
mov
cmp
or
push
add
clc
inc
cwtl
lock
test
test
scas
orl
cmp
sbb
xor
addr16
push
add
push
jle
stos
mov
push
stc
push
iret
push
fnstenv
sbb
sub
jp
cmp
outsb
int
pop
jae
or
mull
nop
cmp
repnz
dec
sub
fs
sub
inc
and
xchg
fdivrp
mov
xchg
and
repz
lds
es
rolb
lret
push
scas
sub
out
bound
je
xchg
xor
outsb
push
lock
sbb
fcmovne
fsubs
jo
sbb
sahf
flds
jno
sti
testb
jae
dec
nop
cmp
sti
ret
into
in
cmc
push
cmp
pop
sub
add
push
or
dec
xchg
jnp
mov
outsl
mov
mov
out
test
lea
out
inc
pop
insl
pop
insb
dec
add
inc
jge
and
imull
arpl
sub
push
push
push
sbb
pushf
lret
jno
out
mov
jmp
int
cmp
sub
lret
jns
xlat
and
into
shll
and
jb
xchg
and
mov
dec
pusha
movsl
das
das
in
fwait
movsb
jne
std
imul
xor
mov
cmpsl
repnz
xor
lea
sub
add
subl
and
lret
inc
icebp
inc
das
nop
cmpsl
inc
mov
xor
leave
sub
lock
mov
mov
aam
cwtl
bound
xadd
xchg
add
mov
xor
pusha
jge
leave
comiss
and
pop
jecxz
mov
sub
rcll
imul
test
fs
notl
nop
test
sbb
cwtl
inc
adc
stos
xchg
mulb
push
jo
mov
cs
xchg
mov
jnp
icebp
fdivr
in
imul
xchg
ret
dec
add
lea
add
cmp
in
cli
movsl
ja
ret
iret
lea
out
xchg
and
and
xor
push
sbb
cmpl
cs
iret
shll
inc
sahf
xor
cwtl
or
xchg
es
test
cmc
cmpsl
sbbl
jmp
mov
xlat
mov
pop
popf
add
xor
xchg
adc
pushf
sbb
add
call
lds
popf
insb
pop
sub
pop
xchg
nop
out
bound
pop
xor
push
call
sub
mov
jno
dec
pushf
loopne
insl
je
sub
or
aad
sub
sub
lods
movsl
cmp
mov
fdivrs
or
dec
and
in
gs
je
aas
pop
pop
test
into
pop
clc
mov
mov
push
mov
outsl
cmp
adc
pop
jae
mov
push
mov
mov
cs
std
int
mov
dec
aam
pop
pop
mov
and
pop
xchg
je
dec
sub
pop
mov
dec
mov
pop
jl
notl
xchg
aas
bound
and
lahf
filds
fwait
lock
mov
std
inc
inc
hlt
mov
mov
or
and
out
pop
xor
inc
pop
aaa
int3
push
pop
fsqrt
rcrb
out
xchg
cmpsb
dec
jne
into
mov
std
or
inc
inc
mov
je
xchg
imul
in
pop
pop
fildll
rcr
mov
nop
jecxz
ficoms
cmp
sarl
push
mov
inc
cld
ljmp
sbb
out
fdivrl
arpl
rolb
add
lock
bound
imull
icebp
push
jnp
lock
lock
in
lret
or
sbbb
inc
out
divl
or
jmp
adc
push
cmp
out
xor
jle
xchg
ss
jo
cmp
rorb
add
ss
inc
cmp
aad
ja
stos
ficoms
fadds
mov
add
in
dec
iret
test
clc
mov
jl
mov
stc
and
mov
cltd
mov
and
out
pushf
jns
aaa
popf
sub
fisttpl
sti
or
xchg
add
imul
mov
roll
cwtl
jno
jae
jp
add
push
sti
in
adc
cmpsl
clc
das
aaa
stc
cmp
lret
test
dec
fisubrl
movsl
cmpsb
aaa
add
mov
cmpsb
xchg
dec
test
xchg
lret
push
mov
stc
roll
insl
inc
stos
mov
sar
rcll
mov
fdiv
test
inc
out
push
idivl
sahf
int3
jb
pop
sub
rcrl
movsl
out
sti
in
movsl
adc
test
nop
push
fisubrl
mov
xlat
in
flds
mov
pop
inc
and
into
dec
jbe
xorl
xor
insl
insb
orb
repz
jl
and
in
outsb
mov
in
push
shlb
rol
mov
ss
cmp
dec
int
repnz
mov
pop
and
cmpsl
rolb
in
insl
cli
adc
jecxz
je
bnd
sub
jle
mov
cltd
aas
pop
aad
ja
push
jnp
cmc
xchg
sbbb
stc
sub
cld
das
pusha
xchg
cmc
jae
xorl
sbb
das
shl
xchg
pushf
mov
out
ljmp
inc
int
cmp
xor
and
dec
insb
mov
je
cs
daa
inc
pop
xchg
sbb
cwtl
push
jo
out
mov
repnz
xor
mov
push
mov
or
sbb
pop
pop
push
jb
repz
sbb
daa
shl
sahf
insb
mov
mov
push
insb
sub
add
mov
and
lock
jbe
push
imul
or
imul
cmp
or
cli
test
mov
das
xor
dec
jns
pop
mov
xor
mov
jnp
xor
pop
inc
loope
push
push
fnstenv
sub
or
std
les
jl
loop
out
mov
fwait
sub
stos
adc
mov
pop
pop
add
lods
data16
cmpsb
or
enter
scas
fsubs
xchg
and
data16
sub
xchg
adc
push
and
push
inc
jne
sub
cmpsb
sub
xchg
mov
mov
popa
push
jmp
pop
outsb
lea
mov
fcoml
lods
lds
mov
xchg
sbb
fucomip
rol
xchg
and
jp
jae
sub
adc
subb
mov
mov
and
pop
cmp
mov
jnp
andb
out
inc
mov
and
cmp
or
jbe
mov
rcl
xor
pop
loope
les
inc
outsl
pusha
mov
sbb
in
popa
xchg
cmp
aam
cmp
stos
les
out
ljmp
pop
push
jne
inc
imul
out
dec
and
jns
cmp
repz
push
dec
adc
orl
movl
out
pushf
aaa
or
dec
mov
pop
clc
xchg
shll
push
xchg
flds
sub
inc
enter
mov
lea
and
stc
mov
sbb
shlb
jmp
xchg
je
xor
mov
std
into
adc
mov
ljmp
fcmovnb
push
mov
xchg
pop
sar
repz
jb
icebp
cmpsb
inc
xor
lcall
cmp
imul
dec
or
lds
loop
leave
ffreep
cmp
popf
add
cmp
and
test
stos
sbb
std
push
ljmp
test
sub
push
movsb
xor
jne
mov
add
outsb
lods
lods
mov
repnz
imul
fcoms
sbb
mov
and
lahf
add
pop
xor
int3
sub
test
loopne
into
lret
mov
or
pop
pop
dec
inc
fidivl
cmpsl
fisubs
push
xchg
adc
xchg
mov
push
dec
rclb
dec
in
xorb
nop
push
jmp
pushw
dec
test
adc
sbbl
in
ss
push
repz
fidivl
ljmp
loopne
cmp
je
and
pop
or
xor
jno
rcr
bound
push
sbb
or
jecxz
mov
sub
add
push
daa
sub
pop
and
add
xchg
daa
inc
mov
or
fs
jecxz
pushf
xchg
mov
xlat
aas
cmp
inc
loopne
fistpll
xlat
cmp
xchg
pop
in
andl
inc
loop
mov
pop
xchg
ja
inc
mov
shl
in
lds
in
xor
insb
notb
xor
inc
fdivrl
in
movsl
pusha
dec
push
mov
pushf
mov
ja
cmp
sub
in
adc
in
mov
sbbb
push
shr
cmc
inc
scas
ds
push
xor
pop
xlat
dec
and
inc
lods
xchg
xchg
mov
jne
sti
std
adc
sbb
mov
shlb
mov
sbbl
fnstcw
ja
inc
pop
and
adc
or
xchg
or
cmp
xlat
sbb
push
imul
in
dec
adc
repz
push
orb
mov
or
adc
xchg
and
ljmp
rolb
insb
add
paddq
inc
mov
enter
jne
bound
push
clc
jae
rcrb
ficoms
pop
xor
movsb
in
outsb
mov
mov
imul
push
in
outsb
jno
xchg
jecxz
mov
imul
into
mov
out
inc
jno
add
mov
xor
cli
and
aas
out
aas
and
ss
aas
jg
or
cs
test
or
mov
addr16
mov
lods
das
cli
lods
xor
fiadds
jl
inc
cmp
mov
insl
pop
inc
jg
pop
push
mov
aad
dec
hlt
dec
mov
lret
sub
add
and
jl
mov
xlat
push
ljmp
push
dec
ret
test
cmpl
xor
mov
mov
or
stc
inc
mov
push
insb
in
mov
enter
pop
mov
cmpsl
ljmp
inc
add
add
push
es
xlat
mov
roll
aas
adc
cmp
out
xchg
cmovb
lods
xchg
vpaddusw
sbb
daa
mov
pop
xor
adc
pop
inc
repnz
movsb
pop
into
aas
sbb
jmp
mov
addb
mov
sbb
in
or
ror
in
pushf
hlt
xchg
jmp
pop
pop
iret
pop
cmp
cmpsl
sbb
lret
jge
daa
outsb
mov
add
xchg
pop
bound
xor
iret
mov
popf
addr16
push
clc
pop
push
push
ret
int
clc
adc
xor
loope
mov
or
movsl
cmp
movl
in
and
xchg
mov
in
jbe
mov
or
sbbl
or
jl
lods
ds
data16
or
decb
jbe
ret
dec
leave
xlat
repz
jl
mov
push
orl
mov
mov
std
or
mov
ja
test
sbb
out
popa
xor
add
data16
xchg
dec
and
push
mov
fiadds
add
mov
add
add
pop
addb
out
dec
ret
pop
pop
xor
add
insb
mov
dec
fistps
bound
scas
pop
leave
sbb
mov
jg
cmpsl
cmp
in
sbb
ret
jge
std
repz
xchg
filds
push
inc
and
out
jp
mov
stos
mov
and
insb
mov
add
pushl
add
or
in
mov
repnz
daa
idivb
pop
mov
lods
roll
and
in
mov
outsl
aad
mov
xor
xor
test
mov
sbb
add
mov
icebp
adc
leave
inc
xchg
sbb
mov
std
push
mov
loop
into
shll
sub
push
or
push
mov
inc
int3
rcrb
and
add
cmp
ret
mov
and
dec
push
mov
mov
jle
mov
test
cwtl
inc
aam
shll
ret
and
mov
mov
jg
fcomps
into
ljmp
adc
std
cld
dec
mov
in
shlb
xorl
dec
push
jmp
scas
add
test
xchg
cwtl
test
sbb
loop
xor
cmp
fildll
jno
add
pop
push
fildll
sarb
mov
push
adc
add
sub
sahf
loope
in
aas
dec
jecxz
push
jecxz
fidivl
fdiv
int3
lods
jo
das
push
repz
test
sbb
lret
das
sbb
mov
sbb
divb
xchg
mov
mov
jnp
push
fs
mov
lret
cmp
adc
jl
icebp
push
cmp
cmp
mov
cs
cli
xor
add
and
pop
mov
adc
pop
mov
or
hlt
roll
int
loopne
mov
das
xor
imul
mov
push
in
pop
or
mov
inc
sarb
lcall
cltd
cs
hlt
loope
ret
gs
mov
into
movsl
fnstenv
fists
push
push
jp
out
pop
clc
cmp
les
rcrl
mov
stos
mov
jo
mov
bound
inc
ds
xchg
mov
int
ret
jno
inc
cltd
aaa
push
push
sbb
hlt
xlat
adc
sub
lock
xchg
push
ret
mov
outsb
sbb
nop
cmp
pop
add
es
test
xchg
ror
jg
fmuls
das
mov
dec
pop
push
out
pop
jno
mov
xor
lcall
pop
xchg
adc
jle
loopne
or
out
sbb
out
cmp
lea
xor
add
or
es
mov
addr16
push
push
adc
std
add
icebp
mov
adc
scas
cmp
in
js
int
aad
jbe
hlt
jae
cmc
pop
sbb
ss
mov
mov
orb
aas
mov
js
fdivr
mov
push
sub
push
ds
jecxz
into
sub
test
jns
out
outsb
mov
repnz
movsl
mov
stos
cli
xchg
mov
scas
jl
jl
shll
and
lock
es
sti
fdivrl
mov
xchg
adc
jle
es
xor
into
mov
pop
dec
adc
sub
fistl
add
ret
sub
popa
addl
lret
or
and
adc
mov
fidivl
pop
fsubrl
iret
call
sar
pop
push
negb
ss
popf
or
adc
loope
dec
call
in
in
cmp
adc
pusha
jl
popf
or
pushl
and
lods
jecxz
xor
lock
pop
cld
jo
js
or
mov
or
mov
fstpt
pshufw
setne
dec
das
subl
test
pop
mov
orl
mov
and
sti
ss
in
data16
in
sbb
push
jo
enter
inc
arpl
clc
scas
in
clc
mov
and
sbb
aaa
fldenv
sti
xor
mov
test
push
bndstx
andl
lds
fisubs
and
int
sbb
or
fistpll
out
into
movsb
in
jl
jns
sbb
jne
jbe
xchg
mov
aad
pushf
sbb
orb
aaa
cmp
out
movsb
mov
jp
je
adc
lock
nop
aas
cli
add
sub
sbb
mov
repz
sbb
or
aam
cltd
popf
and
popa
sub
dec
push
je
mov
jmp
dec
lds
call
icebp
lahf
repz
and
inc
push
adc
into
insl
sub
repnz
push
mov
pop
xor
fwait
add
xchg
inc
dec
dec
xor
shr
roll
roll
inc
leave
mov
ljmp
cli
xor
dec
mov
roll
das
repz
push
imul
lods
cs
mov
in
sbb
lea
jle
aas
aaa
jecxz
out
test
ljmp
popa
add
and
cli
ss
dec
ret
sbb
mov
sbbl
pop
push
fisubl
or
test
mov
les
pop
add
clc
ljmp
outsb
sbb
mov
push
imul
mov
mov
mov
lds
push
jl
clc
into
xchg
push
adc
movsb
out
dec
out
ss
or
into
mov
dec
arpl
scas
int
mov
pop
aas
sub
loop
inc
xchg
mov
inc
sub
cltd
sahf
and
inc
outsl
add
rcr
push
push
subb
push
cli
mov
test
mov
dec
mov
mov
orb
adc
mov
enter
sub
dec
mov
and
fisubrs
notl
xchg
mov
cli
fistl
aam
or
stos
test
stc
mov
pop
mov
jg
shll
dec
jecxz
pushf
mov
mov
pop
inc
push
es
cltd
insb
dec
pop
xchg
sbb
mov
pushf
ret
out
pop
cs
and
sbb
lods
les
xchg
jle
sub
dec
pop
aas
aam
adc
popf
sahf
data16
mov
inc
inc
xchg
imul
add
push
sbb
pop
pop
sub
push
rcl
sarb
mull
mov
jne
or
mov
sbb
and
xor
aam
jae
cmp
cmp
mov
data16
shlb
push
inc
pop
and
sarb
sub
mov
popa
lcall
pop
xchg
icebp
insl
push
repz
and
mov
mov
push
gs
test
in
addr16
adc
cmp
push
xchg
in
nop
mov
add
sbb
mov
add
mov
orl
inc
pop
adc
push
mov
and
imul
cmp
notl
and
xor
adc
data16
lock
pushf
shr
test
cld
cwtl
jnp
push
mov
es
push
outsb
rcll
outsl
leave
mov
pop
cwtl
lahf
cmpl
iret
sbb
inc
shlb
fisubs
mov
jmp
pop
dec
mov
pop
push
dec
mov
jl
mov
sahf
mov
mov
inc
repnz
mov
cmp
or
outsl
iret
or
push
mov
adc
loope
fistpl
in
out
jle
jp
or
xor
inc
cmp
clc
inc
inc
scas
mov
mov
in
popf
pop
gs
pop
adc
test
jo
push
addr16
or
pop
mov
lock
mov
movsb
stc
mov
xchg
lods
cmp
testb
iret
aam
adc
mov
inc
xchg
lahf
mov
cmc
and
and
push
rolb
push
lret
lods
push
jbe
add
xchg
pop
inc
es
mov
dec
into
adc
outsl
pop
inc
repz
xchg
add
or
ljmp
dec
push
addr16
test
loope
incl
push
inc
aaa
inc
subl
or
and
pushf
xchg
cltd
lret
aad
fwait
mov
dec
into
xchg
jg
call
ficoms
arpl
test
or
pop
aam
icebp
mov
stc
and
mov
mov
mov
adc
jnp
pop
aaa
xchg
lret
inc
sub
les
jns
mov
in
call
dec
enter
aam
sub
icebp
fs
and
flds
add
je
sarl
out
movsl
or
dec
dec
or
fistl
movsl
inc
aad
xchg
mov
push
mov
sbb
xor
add
mov
sbb
add
dec
inc
or
fnsave
loop
xchg
fdivrs
push
out
adc
popa
xchg
clc
push
or
movsb
push
imul
psraw
sub
inc
out
or
adc
xchg
movsl
and
lods
pop
bswap
fstpt
shlb
stos
test
sbb
push
insb
dec
pop
lahf
mov
loope
outsl
fmuls
insl
mov
and
mov
cmp
xchg
popa
mov
fsubp
adc
add
jp
push
push
adc
pop
inc
mov
movsl
inc
sbb
mov
xchg
imul
inc
sahf
push
fcoml
add
xchg
icebp
sub
imul
push
pop
adc
push
int
pushf
repz
or
sar
mull
sub
loopne
int
sarb
jnp
dec
inc
or
mov
xchg
outsb
insb
ret
jb
or
in
icebp
and
dec
push
cltd
js
test
cmp
andb
sti
xchg
ljmp
in
mov
mov
movb
daa
leave
out
cmp
jae
mov
cmp
sbb
or
in
in
xor
out
cmc
scas
inc
mov
mov
push
sahf
addr16
jno
mov
xor
sub
add
aam
push
into
clc
inc
jecxz
mov
push
add
mov
addl
test
in
jne
and
enter
and
cwtl
jge
jns
xor
xchg
mov
icebp
leave
xor
pop
outsb
ret
jge
aam
in
inc
ja
pushf
aad
xor
fisttps
loop
js
jmp
mov
mov
add
ror
adc
out
rolb
pop
call
pop
cltd
scas
cmp
mov
popa
in
pusha
pop
imul
or
xor
inc
xor
fwait
int
and
jbe
or
jle
inc
xor
cld
mov
cmp
xor
es
pop
ja
fwait
mov
sub
and
mov
pop
pushf
fstpl
lds
sahf
ds
test
loopne
jg
cs
mov
mov
cmp
mov
aad
lcall
mov
mov
or
pop
or
jbe
or
rolb
xor
and
xchg
mov
out
jl
cwtl
push
jg
imul
in
shrl
cmp
mov
test
fsub
test
clc
dec
sbb
adcl
cmpsb
imul
inc
cs
gs
mov
repz
push
xchg
xchg
push
or
mov
fnstsw
or
sub
repz
aas
mov
push
push
and
lahf
nop
popf
out
cmovle
popa
pusha
inc
rcrb
shll
pop
sub
and
in
mov
cmp
les
jge
jp
xlat
jns
dec
stos
outsb
pusha
pop
imul
enter
decb
hlt
lods
inc
call
fst
push
test
pop
jne
out
cmp
push
insl
enter
popf
inc
cmp
ucomiss
sarl
les
xchg
lods
or
or
sahf
ss
mov
mov
outsl
cmpb
jae
insb
divl
sub
sarb
cmp
inc
mov
jbe
pop
in
sbb
sub
dec
inc
dec
div
int
negl
xchg
jns
popf
out
int3
or
sub
xchg
sub
test
sub
outsl
into
push
cmp
cmp
cmpb
jb
push
dec
inc
gs
xchg
mov
and
mov
enter
cli
pop
iret
fsubrl
add
stos
lcall
iret
subb
xor
push
ret
aam
je
iret
pop
iret
out
std
xor
lea
adc
sub
mov
push
mov
xchg
inc
fsubrp
idivl
or
pop
mov
mov
movsl
out
mov
adc
outsb
shlb
movsl
cmp
push
push
icebp
add
lcall
xchg
pop
jne
inc
ss
adc
mov
push
hlt
xor
dec
and
and
test
gs
push
fnstsw
inc
pop
add
add
mov
cmp
pop
add
das
aaa
dec
xchg
pop
push
in
jno
int3
lahf
push
testb
sub
lahf
mov
popa
mov
inc
js
mov
fbld
leave
push
int
and
push
cmp
inc
mov
pop
adc
xchg
mov
fstps
lods
std
push
loop
inc
push
push
cmp
push
popa
inc
test
movsb
push
jmp
and
xchg
inc
xchg
push
test
test
inc
lret
scas
inc
je
dec
dec
sbb
xor
iret
loopne
movsl
cmp
lods
hlt
cltd
jg
xchg
imul
imul
pop
data16
aam
aam
inc
jmp
pop
xor
jbe,pt
into
sahf
out
and
mov
cmp
adc
adc
fisubl
int
and
dec
jnp
jo
call
adc
mov
rclb
sub
sbbl
mov
push
inc
pop
jge
push
sbb
mov
sarl
add
sub
popa
movsb
movsb
into
jno
aam
sbb
clc
mov
insl
inc
inc
addr16
gs
test
and
int3
mov
mov
lret
push
dec
adc
add
add
cmp
pop
inc
cltd
push
pop
ret
jb
pop
push
enter
push
out
sub
fistl
icebp
sub
xchg
push
xor
mov
sub
sahf
stos
or
fcomps
test
addr16
sub
mov
stos
stos
mov
adc
inc
push
push
jp
or
movb
cmp
xchg
enter
jmp
mov
sahf
xlat
push
jb
lahf
and
in
inc
or
jo
xor
xor
stc
mov
cltd
lret
mov
out
or
pop
jne
leave
adc
mov
cmpsl
cmpsb
cmp
subl
popa
aad
popf
clc
lock
dec
mov
int
ret
fimuls
mov
jecxz
mov
test
in
sbb
mov
or
xchg
push
test
aad
mov
in
ror
push
das
add
mov
scas
mov
push
cld
in
shlb
lret
cltd
pop
mov
daa
insl
enter
mov
and
insl
lock
fisubs
sbb
push
loop
xchg
mov
fs
mov
into
and
mov
sbb
and
cmp
mov
ret
fisttpl
dec
pop
xchg
or
mov
call
adcb
mov
lods
xchg
loop
insl
or
jne
jb
shlb
add
pop
sbb
jmp
fidivrs
sub
jnp
arpl
pop
fisttpll
ss
icebp
insl
push
test
and
inc
and
and
mov
rorb
insb
adc
ljmp
xlat
xor
insb
leave
xchg
inc
cltd
xchg
jne
rcrl
fisttpll
or
iret
sub
xor
sahf
cmp
in
movsb
fyl2x
out
bound
clc
je
pop
fucomip
mov
mov
push
or
add
dec
mov
pop
int
mov
cmp
sub
stos
mov
dec
and
mov
inc
test
jno
cmpb
daa
filds
jg
imul
jb
pop
mov
flds
aam
testl
jge
fprem1
movsb
inc
adc
pop
in
cvtps2pd
jmp
mov
cld
jp
faddl
idiv
shrl
mov
or
pop
mov
cmp
je
sahf
call
jle
pop
push
mov
cs
in
stos
jns
lret
mov
xor
outsb
test
in
mov
xchg
psadbw
cmpsb
add
jb
sbb
insl
punpcklwd
cmp
push
cmpb
lods
mov
les
fcom
int3
push
repz
lods
in
test
movsl
jo
jo
add
jno
imul
std
addl
ret
pop
pop
test
xchg
loope
inc
sbb
ret
arpl
mov
and
cmp
jae
cmp
popf
pop
test
cmp
add
popf
ror
mov
xor
test
cwtl
sar
pusha
jmp
arpl
pop
pop
rorb
fdivl
sbbb
cwtl
lds
shlb
add
cmp
clc
or
loope
hlt
or
scas
pop
pop
push
lods
test
ret
movsb
lods
dec
xor
daa
rolb
inc
enter
sbb
mov
dec
cltd
jg
push
es
movsl
les
cmpsb
lods
xlat
fldt
xchg
cmp
cmpsb
jae
negl
mov
fimull
pop
jbe
insb
inc
and
call
add
scas
jb
dec
add
mov
out
sbb
test
inc
arpl
inc
lahf
fnstcw
jb
fcmovu
xor
xor
xchg
outsl
mov
cmp
jb
xchg
cmp
stos
push
pop
push
bound
and
call
pushf
cmp
mov
jnp
sarl
mov
negb
enter
ja
mov
je
add
sbb
sub
push
sub
sbb
mov
orl
movsb
jle
rcrb
aaa
out
adc
sbb
adc
ja
push
add
sub
mov
jae
popf
mov
and
lcall
ds
fnstcw
pusha
mov
aad
fs
iret
into
sub
xor
inc
jge
cmp
rclb
dec
xor
fistps
jne
pop
out
das
mov
mov
adc
lea
lret
loopne
mov
dec
repnz
push
popa
mov
cmp
mov
dec
aam
dec
cmp
pop
push
push
pusha
outsl
xchg
loopne
pushf
or
pop
push
push
popf
rcrb
push
fists
std
ds
xor
scas
repz
push
adc
cmpsb
idivl
add
ret
shll
sti
out
movsl
dec
stc
test
mov
push
incb
arpl
stc
mov
test
sbb
orl
stc
push
or
mov
paddsb
lret
idivl
push
bound
mov
or
call
shll
mov
mov
dec
jne
testb
pushf
jl
clc
pop
jb
mov
sahf
pusha
dec
int
mov
cmpsl
inc
inc
jge
xchg
mov
insb
mov
cmp
jnp
push
sbb
loopne
cwtl
xchg
mov
jge
sarl
popf
and
sbb
jge
mov
sbb
ret
jg
inc
push
push
mov
add
add
fdivl
enter
addr16
add
fnstenv
mov
cmp
cwtl
in
ficoml
inc
jo
stos
sbb
and
mov
sub
xor
jbe
fcmovne
push
cld
mov
lret
das
mov
lret
ss
in
leave
or
add
ja
push
call
xor
jg
sarl
imul
push
mov
icebp
std
inc
cld
into
mov
jecxz
dec
push
fucom
mov
arpl
pop
in
or
push
xlat
dec
daa
cmpsb
push
inc
cmp
mov
mov
add
dec
mov
xor
fmul
stos
out
xor
pop
es
xchg
inc
inc
les
inc
pop
add
movsl
pinsrw
push
push
xchg
xor
adc
xchg
jmp
and
xchg
sub
incl
ss
dec
cmpsb
xlat
inc
popf
stc
in
jl
test
repz
xorl
mov
pop
repz
bound
adcl
push
insb
js
int3
xchg
or
or
mov
scas
outsl
adc
loop
dec
arpl
mov
dec
mov
inc
jb
mov
test
mov
setno
dec
in
jno
fsubrl
les
lods
aaa
jmp
dec
xchg
fsubrl
out
stos
xor
ja
cwtl
pop
jle
stc
in
sbb
push
cmp
adc
pusha
outsb
jb
sbb
mov
pusha
mov
pop
in
daa
cmp
add
mov
xchg
in
push
add
test
mov
xor
fildl
bnd
flds
outsl
mov
jle
insl
andb
push
sub
add
dec
pop
xchg
xchg
mov
push
in
fwait
call
dec
or
pop
das
cmpsb
xchg
lds
dec
push
jl
pop
aad
sub
ret
sbb
jmp
xlat
lcall
pop
scas
inc
fistl
insl
mov
fsubl
mov
repz
shrl
add
aas
rolb
in
cmp
sub
rol
divb
int
xchg
loop
jae
push
das
imul
movsl
pop
dec
sti
leave
ror
cmpsb
sub
ss
jmp
sarl
sub
xchg
and
shl
cs
mov
insl
add
stos
jge
enter
mov
negl
shl
push
mov
or
icebp
mov
pop
out
mov
fldt
int
dec
adc
mov
xchg
shrb
dec
push
xchg
leave
in
add
out
in
lcall
xchg
xchg
fwait
inc
leave
bound
pop
add
jo
gs
aad
js
enter
scas
jmp
rcr
jle
popf
dec
fcmovne
sub
inc
fiadds
xlat
sub
mov
mov
roll
cmc
inc
and
bound
sub
test
sbb
cltd
xchg
sahf
insl
cwtl
push
out
mov
inc
lods
xchg
and
sahf
add
lock
xor
mov
or
push
arpl
add
popa
lods
jb
push
jge
and
loopne
dec
mov
xchg
std
xlat
pop
inc
filds
push
pop
jb
push
or
nop
push
ret
mov
into
hlt
cmp
xor
dec
fs
sub
sbb
ret
inc
inc
inc
jmp
xor
loop
fstpl
pop
jae
add
and
out
sub
mov
or
xchg
xchg
mov
stos
cmp
mov
mov
fbstp
pop
add
test
inc
clc
clc
pushf
lret
push
or
in
popf
cmp
mov
and
mov
in
push
movsl
xor
xchg
or
pushl
xchg
stc
mov
xor
push
cmc
rolb
jo
fstl
xchg
cmp
fistpl
popa
xchg
imul
sub
push
pop
addr16
lea
pop
mov
jecxz
test
fistpl
mov
pop
add
xlat
pop
test
jno
sub
mov
mov
scas
iret
sbb
add
pop
xor
mov
lea
adc
cmpl
push
in
add
icebp
aaa
in
in
in
mov
scas
pop
repz
and
push
test
inc
mov
sub
aaa
sti
and
les
xchg
shll
mov
and
std
insb
inc
testl
xlat
pushf
mov
sub
test
push
xchg
mov
xchg
daa
loope
push
daa
mov
add
bnd
ja
and
cli
cmc
pop
nopl
xor
ret
addr16
scas
jg
and
xchg
or
mov
push
add
cmc
mov
sub
cli
mov
test
cmp
sar
sbb
fisubrs
outsl
imul
pop
cmpsb
mov
sub
loope
in
jnp
loope
add
or
rclb
or
outsl
push
jno
and
lea
call
push
mov
fstpt
mov
inc
add
movsl
xor
js
shr
mov
and
sbb
sbb
adc
sbb
or
dec
adc
xchg
jno
push
add
es
fs
jo
ficompl
loopne
subb
fisubrs
shlb
lahf
imul
stos
jg
iret
mov
iret
repnz
sbb
mov
out
out
xor
loop
outsl
pop
mov
push
xlat
nop
xchg
mov
pop
jmp
mov
jge
faddl
movsl
mov
sub
sub
pop
or
mov
cmpsb
pop
popa
test
push
push
add
push
jmp
rolb
jb
xor
push
scas
ret
out
mov
mov
mov
or
mov
push
lcall
mov
pop
jns
lret
or
lods
icebp
repz
lahf
insl
jmp
push
push
sub
cmpsl
fsin
cmp
js
dec
cmp
out
or
neg
aas
and
loop
inc
shlb
leave
sub
mov
aaa
cmp
dec
mov
xor
test
mov
add
aas
loop
push
lods
mov
lret
stc
or
negb
pop
push
inc
ret
ja
and
or
stos
mov
repz
add
movsl
inc
sbb
in
lods
inc
cmc
rorb
push
call
aam
insb
in
es
loop
add
jbe
loope
pop
shlb
mov
dec
jle
pop
ss
frstor
push
enter
in
pop
or
mov
pushf
xor
stos
rcl
mov
jmp
mov
sbb
pop
frstor
call
cmpsl
in
fidivs
xor
fdiv
jb
je
and
xor
movsl
test
sub
dec
push
decl
inc
fidivs
movsl
or
jecxz
test
push
rolb
outsb
cli
sub
mov
daa
pop
enter
fnsave
jmp
push
loope
cmpsb
fisttps
add
cmp
push
shll
sub
es
jns
mov
jmp
mov
adc
add
push
mov
aaa
pop
lock
mov
pop
dec
test
cmpsb
sub
fwait
jmp
negb
xchg
das
pop
xchg
push
and
sub
mov
into
pop
scas
inc
jecxz
test
nop
inc
jnp
cs
sub
ret
inc
ret
loopne
pop
inc
sub
sbb
add
jns
popf
xlat
int
in
nop
subl
js
cmpsb
mov
mov
loop
fstl
in
push
cli
pop
outsl
popf
xor
loop
dec
lret
rcl
push
scas
mov
hlt
sub
sahf
orl
out
fildl
pop
addr16
xor
jbe
xchg
test
and
das
sub
and
imul
sbbb
jp
mov
mov
and
xor
movsl
fsubp
lds
fildll
cmp
dec
mov
inc
ds
inc
lahf
pop
in
or
xor
mov
and
outsl
sti
loop
dec
lea
jb
pop
scas
rol
pusha
data16
push
stos
cld
cmp
fwait
stc
sbb
insl
rolb
bound
js
negb
add
imul
inc
sub
jmp
adc
nop
jno
je
fnstcw
mov
mov
inc
mov
mov
xor
mov
add
dec
pop
inc
cmp
mull
cmp
adc
test
dec
into
mov
popf
mov
scas
inc
mov
jp
xor
add
jl
lds
fildll
shll
cwtl
loope
mov
inc
cmp
mov
sub
jecxz
sbb
int
leave
or
enter
adc
dec
jne
push
inc
pop
adc
inc
jae
imul
cmp
jg
mov
icebp
cwtl
cmp
aad
xor
xchg
cmp
fbstp
in
xchg
int
or
mov
dec
fbstp
sbb
in
cmp
stos
lods
cld
add
adc
and
pop
xchg
cmpsb
loopne
mov
bound
xchg
pop
sub
mulb
les
jecxz
mov
pusha
in
push
inc
mov
add
out
fs
mov
lea
jle
pop
sahf
push
and
mov
mov
push
jno
fs
xor
jae
add
cld
popa
movsl
sub
xchg
dec
inc
jle
ret
fnstsw
adc
pop
xor
sbb
in
adc
stc
pop
pop
xchg
jmp
jle
test
and
push
xlat
xor
dec
icebp
imul
gs
rolb
jb
int3
aas
test
jno
and
or
cmp
jae
xor
popf
lret
and
jg
mov
lea
scas
ds
aad
in
cwtl
sub
xchg
in
jno
jno
sub
orb
shrl
fdivr
lret
pusha
jmp
pop
dec
and
fucomip
fisubs
mov
mov
scas
sub
rcll
dec
jp
fcomps
popl
gs
lret
mov
outsb
imul
pop
or
in
cs
rcrl
jne
negb
mov
mov
dec
imul
ljmp
daa
xor
into
fcompl
lods
mov
xchg
pusha
xor
jl
scas
push
adc
jb
add
lock
das
jge
xor
lea
pop
cmp
add
movsb
and
mov
sbb
out
xchg
es
inc
jne
adc
cmp
insb
sub
or
and
loop
mov
fincstp
jge
in
dec
mov
pinsrw
sbb
inc
insb
fldcw
add
inc
pushf
adc
mov
xlat
jle
mov
push
mov
or
jb
out
inc
dec
enter
xlat
rcll
or
scas
loop
movsl
in
jae
testl
and
mov
and
icebp
push
popf
pop
sti
out
dec
dec
adc
iret
lahf
test
xchg
inc
aad
mov
cmp
in
cmp
or
add
lock
sbb
jb
xor
cmp
bound
inc
mov
and
dec
les
stc
sahf
mov
cmpb
fildll
insl
cmp
aas
testl
xor
insb
mul
push
push
in
cld
sbb
clc
nop
dec
push
in
mov
pop
test
dec
insb
out
or
or
sub
jae
pop
or
imul
push
xchg
aam
gs
call
insb
out
jo
mov
jg
sbbb
mov
into
mov
xorl
stc
arpl
and
add
pop
mov
addl
iret
xlat
test
dec
andb
into
das
push
adc
icebp
or
mov
mov
and
test
mov
nop
mov
xor
in
xchg
ret
ja
cmp
mov
mov
jnp
inc
scas
ja
ss
push
daa
sahf
lret
jecxz
enter
xorps
cld
push
jb
push
dec
daa
sbb
mov
xor
push
xlat
push
les
ret
dec
push
rolb
outsb
ss
das
lods
xor
decl
or
leave
lret
jecxz
hlt
push
out
leave
je
stos
pusha
arpl
ds
in
xchg
jl
mov
nop
xchg
hlt
jb
bound
xor
adc
aaa
adc
mov
mov
mov
xlat
lcall
push
xchg
xchg
lret
sahf
add
jp
jae
mov
pop
mov
and
das
mov
push
xor
jae
icebp
popf
xor
lcall
pushf
repnz
cmpsb
mov
pop
lods
ss
or
mov
and
cmpl
mov
dec
dec
hlt
or
test
in
popf
add
dec
sub
das
es
dec
mov
lcall
clc
add
sahf
or
jl
bound
add
cwtl
xchg
sub
push
add
fistpll
push
jle
pop
popf
lods
jg
jp
in
lret
pop
pop
fisttps
into
scas
mov
add
pop
jge
pop
aad
mov
sti
pop
ljmp
test
lods
lahf
lcall
dec
lds
jp
cmp
fsubl
jnp
aas
movb
inc
rolb
mov
xchg
xor
push
inc
in
call
jmp
aaa
insb
test
pop
jbe
xor
fdivs
dec
mov
inc
icebp
repz
mov
xor
xlat
icebp
pop
mov
xor
inc
cmp
mov
fstps
out
sub
bound
mov
and
lods
rorb
mov
or
loope
mov
icebp
cld
lods
mov
les
jmp
jg
xor
rorb
popl
xchg
sti
pushf
mov
ficoms
addb
ret
mov
les
shlb
ds
into
das
gs
mov
mov
push
movb
xchg
mov
xchg
push
nop
push
mov
sbb
dec
and
xor
push
jbe
scas
pop
addr16
shrl
jo
jp
enter
sub
bound
jmp
jg
gs
jae
in
test
jmp
mov
lahf
imul
ret
test
js
rorb
scas
mov
lds
inc
ret
and
adc
test
add
adc
or
cli
insb
mov
mov
loope
inc
xchg
popf
inc
or
imul
out
call
sbb
call
push
and
iret
popa
mov
jl
pop
je,pt
xlat
adc
mov
mov
mov
cmp
adc
test
movsl
sahf
mov
nop
popa
pushf
iret
mov
lods
push
mov
lahf
call
jb
not
fsubr
loop
pushf
push
fldenv
repnz
bound
ret
cmp
dec
rorb
mov
jg
mov
fadd
push
in
out
push
enter
mov
loopne
inc
lahf
loope
cld
dec
xor
cwtl
jo
fstpl
add
aas
adc
aas
and
sub
add
sahf
or
mov
adc
push
outsl
imul
inc
int3
cli
nop
inc
int3
nop
ret
pushf
lcall
mov
insb
and
dec
sbb
mov
in
xor
jne
fcomps
test
es
pop
pop
das
cld
lods
jp
adc
pop
shlb
out
xlat
pusha
push
jb
out
sbb
mov
movsb
mov
inc
mov
pop
mov
mov
mov
sahf
aam
aad
rcl
add
xchg
pusha
sbb
add
test
xchg
ret
out
dec
sbb
adc
xchg
sti
inc
mov
push
push
lds
icebp
pop
test
and
xchg
and
dec
lea
mov
pushf
and
mov
popa
xor
mov
aaa
out
mov
adc
lds
ja
adc
xchg
cmp
cwtl
or
sahf
jns
jg
adc
movsl
lret
ja
bnd
test
push
add
gs
out
out
into
mov
and
mov
dec
push
mov
les
or
jo
or
nop
cmp
imul
rclb
loop
jl
mov
push
sbb
jb
test
ljmp
mov
and
mull
jb
jmp
xchg
mov
xor
inc
or
inc
xchg
cmpsb
push
sbb
lea
pushf
mov
mov
les
imul
cmp
test
pop
pop
fisttpl
ds
mov
lods
mov
and
cli
fstpt
insb
inc
cmovnp
clc
mov
pop
mov
repnz
arpl
out
sbb
leave
cs
xor
mov
imul
icebp
sbb
or
xchg
mov
or
pop
cltd
or
mov
xor
cmp
adc
cmp
mov
in
mov
test
aaa
js
insb
hlt
pop
clc
mov
sbb
int3
pop
rcr
mov
mov
adc
lods
add
aas
sub
add
cmp
add
sbb
scas
xchg
rolb
mov
addl
mov
leave
sbb
popa
stos
int
dec
xchg
in
repz
leave
sbb
call
sti
lret
ljmp
jne
inc
mov
adc
test
jmp
cld
out
mov
mov
lods
mov
jno
mov
ficompl
and
mov
loop
mov
outsl
leave
or
addr16
ja
and
cs
push
xor
stc
fisubrl
in
xchg
das
daa
incb
or
sbb
hlt
pop
inc
dec
lds
and
or
test
cltd
out
adc
xchg
xor
jne
rolb
xorb
inc
xchg
pusha
or
jmp
lahf
mov
adc
icebp
test
mov
inc
dec
jbe
xor
add
inc
pusha
imul
stc
sub
sbb
xchg
movsb
dec
mov
xor
pop
pop
and
mov
jo
mov
pop
inc
sti
aad
in
xor
stos
paddw
push
xor
sbb
inc
aaa
jmp
jle
dec
ds
test
popl
in
cltd
sub
pop
fmul
out
xchg
jbe
ja
sbb
sbb
or
mov
daa
sub
imul
pop
imul
mov
and
xchg
out
aad
mov
pop
and
sub
lods
push
call
cmp
or
hlt
jg
ja
iret
addl
notl
dec
cli
inc
insb
jg
bound
mul
popf
pop
cmp
ss
insl
xchg
mov
out
pop
jno
notb
lret
mov
sarb
data16
js
sub
subb
adc
data16
mull
adc
jle
xchg
jbe
dec
push
lea
xchg
ficoms
xor
movsb
aaa
icebp
mov
hlt
scas
popf
mov
mov
sub
or
sbb
push
mov
xchg
jl
int3
mov
pop
dec
mov
xchg
or
arpl
pop
xor
mov
adc
mov
cmp
fildl
gs
arpl
and
popf
adc
rcll
std
cli
subb
and
dec
outsb
in
fisubs
mov
dec
sub
sahf
dec
and
faddl
jnp
and
iret
daa
mov
mov
in
and
or
fsts
jmp
std
rcll
push
cmp
xchg
lds
aam
jns
pop
stc
or
aad
lods
cli
clc
push
dec
xlat
pop
add
mov
test
mov
bound
push
sbb
jne
xor
mov
sarb
and
push
in
dec
add
adc
mov
xor
xchg
pop
iret
pop
push
les
in
mov
stos
mov
out
push
cmpsb
test
pop
sub
sub
mov
repz
inc
fimull
stc
xchg
jns
inc
add
or
incb
pusha
fsubrp
lret
ljmp
xchg
roll
jne
adc
and
imul
push
lock
in
push
or
ss
lods
scas
or
popf
lods
fidivl
mov
lock
popa
daa
cltd
pop
jb
dec
cmpsl
pop
push
not
jp
push
mov
cmp
mov
rclb
xchg
jmp
sarl
pushf
push
push
aam
arpl
imul
inc
sub
or
pop
jne
pop
xor
mov
sbb
dec
adc
push
sahf
sbb
fwait
mov
negl
cmc
idiv
jmp
xchg
adc
inc
dec
xchg
in
lret
repnz
test
inc
adc
popf
cli
mov
pushf
outsb
movsb
push
pop
test
sti
cmpsl
mov
and
enter
mov
xor
and
notl
ja
add
xor
cltd
cmova
xchg
out
jmp
out
ss
cli
sbb
or
cwtd
and
das
adc
repnz
and
nop
nop
mov
push
ljmp
or
sti
xor
imul
or
pop
pop
inc
jo
sbb
mov
ficoml
je
and
outsl
pop
or
jecxz
sti
push
and
or
mov
jno
mov
jbe
mov
cmp
cmp
cs
xlat
rorl
fcmovbe
test
loopne
clc
fmuls
jae
lcall
shlb
ds
and
lods
mov
ds
cli
dec
cltd
push
cmp
fcmovnbe
push
std
adc
pusha
repnz
bound
xor
mov
negl
push
cli
out
ficoms
and
rclb
out
call
or
call
pop
inc
rorb
push
imul
xchg
js
std
and
icebp
jne
mov
out
insl
inc
jno
push
jb
mov
addb
xchg
in
push
mov
repz
mov
int
repnz
add
mov
lahf
cli
adcl
xchg
and
sub
jg
xor
and
and
inc
lods
xchg
fcmovu
xchg
or
aaa
das
dec
rolb
dec
ss
in
fistpll
test
inc
call
mov
addr16
xor
jp
shrb
cmp
iret
gs
push
lea
inc
ljmp
xchg
lods
or
movsl
leave
jnp
lcall
popf
in
pop
push
xchg
or
icebp
and
and
nop
fcomi
ror
in
sbb
jmp
mov
push
fiaddl
daa
or
add
sbb
fiaddl
ret
pop
scas
lds
sub
insl
cmc
jmp
fs
or
xorb
sub
das
mov
shlb
cmp
incl
and
mov
test
adc
std
mov
in
add
jle
sub
mov
ljmp
out
les
pop
jp
cltd
sbb
adc
add
daa
sbb
cmpl
and
jp
call
add
inc
out
ljmp
sub
lahf
jle
mov
mov
nop
mov
xchg
push
daa
jg
lcall
mov
fstps
repz
mov
mov
and
mov
in
add
js
jae
ds
cmpsl
sub
or
fldln2
and
sub
insl
sbb
push
and
and
es
int3
mov
jle
mov
jns
mov
lods
cltd
std
add
xor
push
pop
mov
jno
out
scas
rorl
fldt
xor
rcl
fldenv
mov
add
ds
push
inc
add
mov
dec
imul
sbb
inc
push
lret
cmpsl
aam
mov
fwait
imull
mov
cmc
adc
sub
jno
xor
mov
scas
dec
rolb
jns
inc
pop
outsl
and
repnz
pop
xor
out
cwtl
addb
or
sub
sub
int3
push
pop
lock
xchg
lock
scas
aad
test
push
inc
addb
lcall
xor
jns
mov
xchg
dec
or
push
sarl
xchg
or
mov
jmp
sbb
js
sub
pop
outsb
sub
sub
cwtl
pop
push
pop
rolb
inc
sbb
lea
nop
mov
sti
add
daa
sbb
sti
sbb
lock
jb
cmp
lock
cwtl
movsb
mov
les
adc
adc
aaa
orl
xchg
icebp
and
sti
outsl
insb
adc
shrb
std
dec
mov
pop
cmp
enter
sub
and
sub
test
in
lods
loop
jecxz
ret
push
cmpsb
cltd
cmp
xor
lods
fistps
inc
mov
jge
cmp
js
mov
movsb
int3
add
cmp
scas
inc
stc
dec
mov
shrl
push
xchg
pop
test
add
in
dec
movl
cmp
faddl
aam
sub
add
and
and
pop
test
stos
sub
lret
outsl
cld
into
ror
div
push
movsb
push
fwait
call
jmp
shrl
ret
mov
mov
push
out
xchg
dec
inc
out
rcrl
mov
push
stc
test
mov
cmp
mov
adc
cli
stos
ja
ds
iret
data16
xchg
cmc
pop
sbb
js
daa
add
dec
sarl
aas
sub
push
or
pusha
mov
jnp
mov
mov
jge
sub
negb
sub
mov
mov
and
mov
mov
cltd
mov
inc
jne
mov
in
or
into
mov
lahf
push
jne
scas
aam
pushaw
pop
xor
add
ds
aaa
add
jns
mov
xor
inc
ret
or
je
pop
sub
pop
xor
insl
jns
mov
mov
jae
inc
lds
and
lock
sub
fistps
out
call
and
and
mov
fsubs
jb
mov
xorl
out
sarl
mov
mov
jb
std
sahf
add
aad
push
cli
mov
mov
loopne
xchg
addl
insl
leave
jge
and
das
push
inc
add
inc
mov
sbb
out
loop
movsb
rcr
xchg
dec
sahf
sbb
sub
imul
mov
cmp
inc
mov
test
or
fbld
dec
stos
mov
fs
dec
pop
sahf
dec
enter
lods
dec
cmp
syscall
js
rorl
jecxz
sub
mov
out
and
sub
and
sbb
in
mov
std
or
cmpsb
and
or
xor
lods
pop
dec
imul
mov
pop
push
and
icebp
pop
jp
xchg
ss
xor
and
and
lock
or
mov
pop
mov
cli
es
adc
mull
or
fsts
xchg
xchg
jge
out
pop
call
outsb
fisttpl
pop
ja
sub
and
pop
hlt
pop
movsl
setno
adc
mov
push
sbb
shlb
pop
or
xchg
test
sti
out
repnz
sbb
ljmp
int
lods
jno
push
xor
cmp
fs
dec
imul
pop
ja
add
sbb
lds
xlat
push
sbb
imul
xchg
out
test
cmp
inc
xor
mov
xlat
or
leave
dec
enter
std
jae
xchg
mov
shll
stos
xor
xor
ja
hlt
sbb
lahf
dec
sub
sub
push
add
sbb
fistpll
pop
xor
xchg
fisubrs
cmp
push
and
xchg
repnz
xchg
xchg
std
push
sbb
mov
sub
pop
mov
out
xchg
adc
fs
mov
popf
bound
dec
pop
mov
mov
cmc
cmp
push
dec
xchg
les
cmp
mov
stc
sub
out
scas
shrb
int
adc
mov
test
or
push
mov
lret
lahf
mov
sub
push
outsb
dec
sbb
loopne
icebp
data16
shlb
jne
cmpsl
add
popa
or
hlt
lods
xchg
enter
rcrb
cmpsb
cmc
inc
inc
sub
lcall
jns
lea
cmpsb
test
enter
in
pop
mov
ds
sub
popf
lods
adc
sub
push
fsubrs
shlb
or
js
push
ljmp
lret
call
mov
xchg
lret
fildll
mov
loope
out
outsb
lods
cmpsl
sbb
sub
push
mov
adc
and
ja
and
test
sahf
inc
cmc
das
xor
aad
in
das
cmc
mov
mov
loopne
add
imul
outsb
mov
mov
lahf
jne
xchg
and
stc
or
sbb
subb
sbb
push
jbe
rcl
imul
out
ds
jb
xor
in
aad
fs
push
data16
sbb
adc
or
adc
movsl
push
cmc
or
pop
imul
sarl
mov
inc
andb
mov
stc
mov
sti
add
out
jp
in
push
jge
in
fcoml
js
sbb
push
dec
test
cmp
adc
cmp
loopne
pop
movsl
jns
gs
jp
mov
sti
int3
dec
add
cmp
les
jecxz
mov
sbb
test
cmp
jge
test
cmp
dec
jns
push
aas
jmp
push
pop
mov
std
cld
lahf
mov
jo
cwtl
mov
and
inc
ret
or
filds
stc
xor
cwtl
sub
xchg
or
pop
and
mov
mov
jge
and
out
xchg
aam
loope
push
cmpsl
or
lods
out
js
dec
ret
adc
out
xor
daa
neg
lods
das
push
imul
mov
push
xchg
or
xchg
sbb
inc
inc
xor
stos
xor
data16
scas
in
mov
data16
cltd
ja
inc
jmp
xchg
push
mov
jp
jmp
xchg
in
andl
mov
shrb
sub
int3
je
leave
mov
xchg
and
shrb
scas
mov
jnp
ret
movsl
cmp
int
adc
sub
mov
mov
push
sub
in
pushf
or
repnz
jbe
inc
mov
adc
xor
imul
add
movsb
jmp
jbe,pt
sbb
add
cwtl
mov
cmc
pop
adc
shll
int
in
repnz
popa
test
aaa
mov
xchg
rorl
imul
cmp
cli
xor
fbld
andl
insl
adc
add
jo
ret
fldt
std
adc
inc
and
daa
cli
push
xor
int3
jp
lods
add
push
mov
mov
add
pop
mov
scas
jnp
lcall
cmp
push
arpl
in
stc
mov
sbb
pop
leave
hlt
pop
xor
pop
mov
mov
outsb
mov
dec
rclb
sub
loopne
mov
fisttps
cmp
xchg
inc
stos
and
xchg
inc
sbb
fmul
out
jae
mov
or
push
jmp
neg
inc
mull
xchg
xor
cwtl
or
pop
lods
sub
shrl
inc
lds
sub
cmc
pop
mov
mov
inc
ss
xchg
push
or
push
lret
pop
push
mov
xor
test
push
push
sahf
add
mov
cli
arpl
mov
pop
insb
insl
xor
es
dec
repz
push
push
or
cmp
aas
scas
shll
mov
sub
add
daa
jne
dec
adc
rcll
xor
add
daa
pop
and
jnp
mov
cltd
jns
push
adc
jae,pn
fadds
stos
inc
pop
frstor
popa
jne
and
sbb
out
fstps
iret
lret
push
lret
sbb
jle
incl
lcall
in
stos
mov
out
lret
mov
das
and
orb
cwtl
xor
test
push
pop
push
mov
dec
adc
insb
mov
jns
pop
test
cmc
add
pop
rcrb
out
lret
jp
and
cmp
adc
popf
sbb
mov
test
lock
mov
mov
aas
sbb
cs
ljmp
inc
dec
xchg
xchg
cmpsl
cmp
inc
inc
test
rcrb
fsubrl
mov
in
xor
adc
sub
dec
dec
mov
cmpsb
aad
xor
cmc
daa
in
loopne
repnz
or
pop
and
or
es
je
jle
nop
pop
mov
mov
jge
int
push
dec
xor
push
dec
sub
sbb
bound
pop
aam
test
lods
push
addr16
popa
xor
pop
in
inc
rorb
inc
into
fidivrs
cmc
adc
push
sahf
lcall
xchg
mul
push
mov
pop
sahf
xchg
inc
cld
jnp
mov
mov
push
adc
cmp
adc
and
pop
inc
xor
shll
rcr
dec
test
or
stos
jae
jno
shlb
mov
pop
push
stos
mov
jno
and
es
mov
jbe
stc
jo
push
into
nop
cld
stos
clc
repz
cmp
shrl
cmpsl
pmullw
inc
mov
xchg
lret
cmp
insl
ret
shr
icebp
pop
fstl
xchg
out
cmp
sub
movsl
loop
cld
adc
fistpll
fcoms
rcrl
inc
js
aas
dec
int
int
xor
fstpt
lcall
push
std
dec
sub
adc
mov
dec
jb
out
loop
cli
mov
adc
lods
adc
xchg
imul
lret
mov
sub
adc
xchg
pop
inc
push
mov
test
xchg
pusha
les
and
sub
pop
adc
and
sub
out
aam
dec
outsl
pop
test
adc
mov
mov
popf
mov
add
popf
sbb
pusha
nop
cmp
aas
push
andl
adc
out
mov
jae
sbb
inc
jl
out
dec
sti
or
fwait
imul
dec
xor
fxch
adc
ds
xchg
stc
push
jbe
mov
pop
push
jmp
cltd
mov
add
pop
ror
push
lods
inc
jae
add
pop
add
mov
lret
lds
js
mov
cmp
cmp
pop
ja
inc
jne
add
cmp
add
sbb
adc
mov
testb
iret
aam
cmc
pusha
add
dec
xor
insb
cmovbe
mov
xor
sbbb
clc
add
rol
push
mov
xorl
add
icebp
ja
ljmp
cli
test
jge
mov
scas
aaa
adc
pop
lret
daa
loopne
mov
in
fsubl
sbb
int
sub
pop
xor
xor
or
mov
mov
jge
and
mov
add
mov
and
aaa
cli
int
or
cmp
mov
xor
jle
xor
cmc
rcr
out
es
pop
pop
nop
and
pop
or
xchg
std
mov
in
mov
jnp
push
xchg
in
fsubrs
or
adc
stos
or
pusha
push
jae
xchg
or
shrl
adc
push
in
mov
jl
pop
test
and
push
mov
fnstcw
cmp
jle
lcall
ja
stos
sbb
rclb
push
and
je
sahf
stos
mov
sub
mov
or
sbb
add
xlat
mov
mov
add
outsl
xchg
sub
add
add
repnz
sti
xchg
adc
mov
and
cli
push
add
mov
xor
call
jle
js
dec
negb
movsl
shrb
mov
fcom
cmpsb
mov
jg
nop
mov
xchg
jg
xchg
pusha
dec
out
mov
sub
inc
repz
dec
sbbb
into
mov
inc
xchg
repz
loope
mov
addr16
xor
inc
movsl
loopne
inc
pop
pop
ret
jae
pop
or
data16
jnp
pusha
ret
sbb
ja
outsb
pop
push
je
fs
mov
and
movsb
arpl
and
ljmp
aad
loopne
dec
sub
mov
jb
xchg
jnp
mov
les
cmp
and
addb
inc
imul
ficomps
adc
gs
pop
mov
pop
push
push
pop
bnd
push
mov
mov
mov
aad
sbb
mov
andl
cmp
jb
mov
flds
cmp
xor
pushf
hlt
add
cmpsb
cmp
jge
je
insl
dec
ljmp
clc
daa
filds
addb
xchg
pop
fsub
enter
push
mov
ror
and
outsb
xor
inc
shll
inc
push
or
call
cld
stc
lock
js
ss
fildll
or
std
rep
hlt
fcmovnu
mov
test
sub
scas
jns
lock
aam
dec
push
or
outsl
or
xlat
insb
cmp
and
sub
cmpsb
enter
jnp
adc
aaa
and
pop
jl
xchg
ja
ffreep
jo
xchg
mov
cmp
and
sti
repnz
mov
ja
mov
aaa
jle
mov
or
ret
dec
fdivr
fsts
enter
daa
push
repnz
mov
rclb
mov
lahf
or
dec
xchg
lcall
clc
mov
subb
sbb
ret
pop
scas
popa
stc
pop
popf
push
shlb
push
jnp
daa
pop
lods
aas
fsub
rorb
lods
sbb
pusha
clc
jecxz
cmp
fwait
or
inc
inc
roll
lret
jnp
insl
cltd
mov
daa
cmpsb
leave
out
adc
test
and
ret
xorb
push
icebp
stos
mov
inc
push
aas
jmp
in
cwtl
mov
ss
insl
jns
add
inc
fstl
imul
int3
popf
or
mov
push
mov
bound
add
mov
mov
ja
loope
jmp
push
mov
push
cmc
or
in
jl
xor
pop
dec
mov
inc
dec
xchg
jno
push
pop
and
fwait
and
cmpsl
pop
push
push
fldl
ja
pop
stos
mov
into
js
and
aas
insb
pop
xchg
add
iret
adc
jb
ja
test
mov
fcmovu
cltd
jno
xchg
aad
lea
dec
rorb
cld
or
bsr
ljmp
sub
pop
xchg
inc
adc
arpl
pushf
push
fxam
pop
sbbl
aam
and
jmp
insb
mov
jp
pusha
and
ja
lods
test
lock
xor
je
dec
mov
mov
pop
jmp
xchg
mov
popf
lcall
or
xchg
fwait
jb
bound
call
pop
mov
loopne
sub
xorb
push
adc
pop
xchg
inc
imul
xchg
leave
and
leave
or
cmpsl
lcall
xor
cli
lods
js
sbb
sti
mov
insb
inc
xor
fidivrs
and
imul
lea
test
pusha
pop
mov
inc
roll
xchg
test
pop
jae
mov
cmp
or
jo
lea
sbb
pop
push
dec
jo
add
pop
and
or
cmpsl
push
or
sub
lgs
int
sub
int3
jo
jp
or
jnp
lret
inc
pop
movl
pusha
test
clc
ljmp
rol
fwait
push
movsb
movsb
rorb
jge
ucomiss
cs
inc
push
mov
mov
lret
jne
int
mov
sub
fmulp
aam
imul
loop
push
add
sbb
pop
std
lock
mov
pushf
jle
xchg
mov
jnp
sahf
sbb
sub
adc
das
and
and
arpl
push
mov
ret
or
push
inc
sub
imul
enter
loopne
push
loop
inc
and
fcoms
mov
shl
stos
ljmp
push
push
sub
popf
shlb
hlt
pop
arpl
xor
mov
xchg
add
mov
mov
inc
fisubrs
adc
int3
mov
sub
sub
and
dec
push
insb
pop
loope
mov
cmp
fcoml
sub
jp
xchg
xor
dec
test
adc
popf
mov
dec
mov
lock
sbb
sbb
cs
repnz
adc
mov
and
dec
xchg
sbbb
mov
inc
jne
cmp
jns
bound
xor
loopne
jnp
adc
cmp
add
inc
filds
fmulp
or
push
mov
frstor
imul
and
sub
mov
scas
int
xchg
sub
je
popf
jmp
adc
iret
inc
in
sbb
or
fsubl
add
das
lahf
aad
mov
cli
cli
adc
cmp
pop
or
pop
movsb
orl
lea
arpl
lea
notb
xchg
jg
movsl
mov
mov
fbstp
cmp
es
stc
jbe
repnz
aad
popf
dec
cmp
sbb
stos
bound
sub
mov
xor
inc
iret
inc
ljmp
insl
sub
xchg
loopne
xor
in
int3
sbb
mov
jae
mov
popa
test
pop
hlt
push
adc
jno
test
xchg
mov
ljmp
lea
mov
push
or
out
adc
adc
xorl
popa
adc
xor
jge
pop
xor
imul
jle
jbe
sbb
mov
les
and
push
dec
push
jnp
sub
imul
movsl
jl
mov
sub
shll
movsb
into
push
mov
push
jmp
outsb
sbbl
mov
in
pop
or
lods
add
adc
mov
in
mov
test
and
mov
push
sahf
in
mov
movsl
popf
mov
repnz
ja
fisttpll
adc
jns
cmp
insl
push
insb
stc
sbb
aas
scas
je
popf
ljmp
in
xchg
fisubrl
pusha
call
test
movsb
ss
ss
and
xchg
scas
or
movsl
loop
pop
ret
movsl
mov
lahf
or
jmp
leave
or
out
sub
inc
cmpsl
bound
cmp
sub
pop
in
or
sub
lock
imul
sbb
call
in
dec
insl
testb
cmp
dec
add
stos
icebp
jbe
sub
int3
jae
push
xchg
xchg
ljmp
inc
and
enter
ljmp
xchg
add
imul
xor
mov
jl
dec
inc
movsb
imul
test
mov
dec
lret
or
sub
adc
cs
lcall
pop
out
sbb
jmp
sbb
inc
movl
les
shlb
sahf
ror
and
ret
mov
mov
testb
fimull
stos
fidivl
ret
cli
xchg
jae
pop
push
decl
mov
popf
sbb
pop
insb
adc
push
dec
ds
jge
int
and
cmp
mov
movsb
pop
test
dec
inc
or
sub
out
inc
cmpsb
lret
sahf
stos
std
add
inc
xlat
xor
pop
stos
gs
sti
les
insl
sub
repnz
or
or
mov
inc
shl
mov
sub
stc
push
pop
mov
les
and
sbb
jge
lret
aad
xor
int
mov
cmpsl
pop
rcl
fisubs
jle
pop
repnz
pushf
pop
dec
jne
cltd
repnz
mov
cld
push
pop
repnz
mov
or
dec
loop
push
nop
sbb
pop
pop
or
pop
pop
mov
lds
test
insb
bnd
jge
sarb
xor
inc
dec
loopne
and
jmp
jo
lcall
popf
faddl
mov
xchg
jge
mov
stc
jl
cltd
shrl
int
xlat
cmpsl
mov
mov
outsb
mov
js
iret
das
sbb
xor
fadds
sbb
push
mov
jl
inc
int3
subb
movl
insb
cmp
test
gs
mov
push
lcall
stc
imul
inc
shlb
int
pusha
mov
mov
push
xor
leave
in
cmp
sarl
pushl
dec
fldcw
popf
hlt
sub
lret
add
add
jno
sbb
hlt
mov
or
xchg
sarb
jg
adc
in
rolb
popf
iret
out
sarb
ljmp
out
and
subb
push
mov
sub
js
rolb
in
xchg
adc
icebp
sub
nop
stc
inc
mov
sahf
rorb
sub
pop
lea
mov
mov
push
xor
daa
dec
push
rep
les
fwait
scas
mov
mov
cmp
dec
jmp
sarl
cmp
xor
ret
mov
incl
push
xchg
mov
fmuls
data16
hlt
xchg
scas
sarl
or
mov
sbb
lret
jo
mov
xchg
imul
and
lret
push
mov
das
jo
jno
mov
pop
mov
push
orb
pop
aaa
add
jle
jmp
push
aam
cmpsl
dec
sbb
cmp
or
je
adc
xor
inc
pop
es
test
pop
jae
adc
imul
sbb
mov
call
mov
mov
xchg
xchg
lret
pop
int
idiv
cltd
test
jmp
mov
xchg
xchg
push
shrb
adc
out
insb
or
fcomi
lds
mov
adc
or
sub
add
in
mov
imul
xor
push
pop
dec
pop
mov
xlat
add
insl
dec
cmp
xchg
jo
es
sbb
aad
sbb
xchg
lods
cwtl
mov
xor
or
divl
xor
test
lret
pusha
push
ljmp
push
js
pop
inc
enter
inc
sbb
xor
mov
in
popf
mov
mov
lea
sbb
cld
cwtl
in
push
inc
arpl
notl
jbe
out
mov
fbld
adc
in
outsl
pushf
push
pop
add
roll
mov
sbb
jp
dec
jae
insb
es
fldenv
cltd
aad
shrl
jl
xchg
mov
in
or
lea
and
dec
roll
pop
call
pop
jmp
movsl
inc
mov
sub
mov
mov
add
icebp
inc
inc
mov
rol
jmp
pusha
push
divl
jmp
push
add
pop
jmp
out
cmp
stc
std
test
iret
sahf
mov
sbb
lock
xchg
lahf
sub
dec
mov
stos
lret
nop
test
jge
test
jne
jne
push
ja
orl
add
jg
das
cmpsl
pop
push
push
inc
je
mov
or
js
mov
push
jp
sbbl
lret
or
cmpsl
call
dec
out
xchg
xchg
push
and
sbb
adc
scas
xchg
xor
cmp
test
add
cwtl
and
stos
adcl
in
hlt
shll
loope
adc
mov
popa
sbb
pushf
shl
jb
add
lds
push
loop
outsl
data16
push
xor
bound
iret
insb
scas
call
and
cwtl
mov
xor
popf
xchg
cmp
pop
mov
jge
mov
popa
test
repz
dec
mov
xchg
fadd
ss
pop
cmp
pushf
addl
icebp
cwtl
pop
or
add
xor
mov
sbb
lea
sahf
decb
push
mov
mov
add
out
sub
push
mov
pop
dec
aam
jb
xchg
pop
hlt
inc
ss
les
add
rorl
push
das
mov
jge
sti
sub
adc
in
movsl
insb
mov
xchg
pop
and
sbb
pop
out
neg
in
jns
addr16
call
sbb
sbb
dec
adc
pcmpeqb
sub
mov
and
lds
ret
xchg
fistpl
sbb
popl
insl
mov
insl
push
stos
push
cmp
ucomiss
xchg
jbe
leave
test
sub
addb
sub
xchg
or
push
xchg
adc
mov
mov
pusha
in
out
lea
fwait
jp
ja
out
fisubrs
inc
xchg
adc
mov
pop
daa
notl
inc
jb
lds
jae
rcrl
jmp
ja
sti
cmc
stc
movsb
fld
test
subl
repnz
cmp
sbb
fsubrl
cmpsl
mov
andl
sarb
scas
adc
rcrl
and
jl
push
mov
lret
xchg
addr16
cmpsl
xchg
and
mov
and
or
mov
xchg
xchg
xor
dec
clc
fs
add
inc
inc
sahf
std
and
leave
movsl
push
andl
aas
inc
ret
ficomps
push
inc
fsts
insl
dec
mov
cmpl
and
xchg
jmp
in
andb
icebp
lcall
pop
xor
insb
push
jle
nop
pushl
sbb
cmp
movsw
popf
imul
pop
cmp
aad
fmuls
mov
shlb
push
xchg
dec
or
pop
dec
sarl
shrl
xor
icebp
dec
cmc
int
dec
push
gs
xchg
nop
and
loop
scas
fbstp
in
add
jg
cmp
fs
adc
adc
cmpsl
pop
pop
pop
les
mov
insl
and
adc
aam
dec
lahf
cs
arpl
sub
push
hlt
scas
dec
sbb
lahf
jnp
dec
add
cmc
call
arpl
shlb
cld
and
lock
pop
pop
clc
inc
add
ds
or
jg
clc
outsl
or
movsl
sub
push
adc
dec
pop
xchg
cs
aad
cmp
xor
fcomp
aas
push
jg
test
and
dec
push
inc
repnz
call
out
ds
shrb
test
loop
inc
push
inc
bound
sti
pop
aam
movsl
mov
sbb
mov
sub
xchg
inc
push
aad
push
outsl
cmp
repnz
jno
cwtl
pop
pop
aas
call
sbb
dec
mov
rcrl
pop
pop
jo
push
ret
dec
out
mov
gs
pop
pop
and
cs
xchg
pop
js
add
adc
and
cmp
xchg
adc
repnz
gs
js
xchg
cltd
shr
lods
cmp
sbb
shl
je
lods
push
cmp
xchg
frstor
lret
xchg
inc
or
push
pushl
and
in
mov
test
dec
lods
cmpsl
les
aam
inc
cld
cmpsb
push
xchg
sbb
mov
hlt
jbe
push
xchg
push
lods
xor
mov
pusha
aaa
lahf
or
add
addr16
xchg
movsl
inc
push
push
sbb
mov
mov
gs
dec
stos
roll
mov
in
inc
mov
fwait
enter
insb
neg
pop
arpl
mov
inc
xlat
mov
push
xor
scas
aam
arpl
jnp
pop
test
cmpsb
movsl
and
stos
lock
pop
aam
sub
mov
mov
daa
ss
lds
push
mov
mov
jle
hlt
scas
pop
int3
sti
cmpsl
insl
push
enter
xchg
and
fwait
cmp
rclb
dec
data16
or
scas
sub
into
out
stos
xor
int
cmp
inc
in
jne
pop
in
pop
xlat
add
mov
jb
cmp
inc
mov
ret
sahf
xchg
push
push
cmpsl
sbb
dec
inc
shlb
jmp
lock
xchg
fisubrl
push
add
sub
add
pop
push
cmp
cmp
scas
xchg
stc
mov
mov
lahf
push
insb
das
add
pop
fisttpl
sub
test
push
mov
sar
mov
das
cmpsl
pushf
sbb
mov
jb
daa
mov
or
or
mov
push
hlt
lock
cli
imul
dec
scas
dec
mov
out
lcall
pop
jae
inc
insb
call
js
mov
out
lods
out
mov
jge
sub
in
test
add
xor
inc
test
jnp
jge
pushl
or
mov
push
hlt
std
and
dec
ficompl
mov
jmp
inc
call
inc
pop
jge
mov
loope
jg
xor
lahf
pop
loop
cwtl
dec
dec
mov
inc
into
fnstsw
push
loopne
mov
xor
mov
adcb
shl
xor
pop
sahf
xchg
push
mov
jge
mov
jl
and
int3
inc
dec
jecxz
lcall
ficomps
in
cmp
inc
and
cmpsl
in
dec
push
out
in
cli
mov
daa
xchg
mov
aad
xchg
jns
int3
pop
jle
aam
mov
sti
sub
rorb
std
cmpsb
inc
jno
movsb
sbb
pop
xchg
shrl
cmp
xchg
dec
sbb
lods
int
cmpsl
int
std
add
aad
lods
mov
pop
cli
jmp
out
xchg
pop
xchg
cld
cwtl
outsb
adc
and
jmp
push
add
add
out
xor
cli
push
push
add
push
imul
mov
mov
lods
jb
pop
mov
mov
mov
jl
js
jl
push
imul
jge
xlat
or
out
out
daa
loopne
shr
or
sbb
ret
add
dec
pop
inc
xor
jno
xchg
lds
jge
bnd
scas
outsb
lea
leave
or
push
sti
mov
mov
aas
cmp
and
mov
adc
mov
pop
cld
into
fcmovnbe
and
aam
jge
push
jne
push
in
fdivrl
dec
xchg
movsb
mov
out
testl
inc
add
ret
add
jbe
sub
mov
mov
xchg
and
rcl
mov
xchg
and
adc
adc
js
push
mov
dec
movb
push
mov
adc
in
pop
adcl
mov
xchg
dec
sub
or
push
out
ret
aas
test
aaa
in
cmc
aaa
out
add
cmp
pop
shl
decb
xorb
stc
aaa
mov
pop
jae
or
clc
shll
and
lahf
xchg
mov
inc
or
iret
push
lods
lcall
mov
cmp
mov
daa
xchg
mov
repnz
lods
sub
pop
sub
or
stos
outsl
or
xchg
fwait
adc
in
aad
mov
in
subb
out
sbbl
push
lods
pcmpeqd
mov
clc
cltd
xchg
lds
rol
mov
jne
popf
arpl
mov
outsb
popa
pushf
clc
loopne
shlb
fwait
pop
fwait
bound
stos
push
fs
scas
add
sub
imul
or
clc
in
cltd
sub
jmp
dec
xor
lds
mov
inc
adcb
gs
maskmovq
imul
cltd
out
scas
push
sub
sub
in
jmp
pop
shll
jnp
and
and
xchg
push
mov
sub
xchg
xchg
dec
aad
mov
inc
pop
sub
sub
sub
xor
loopne
data16
stos
mov
xor
and
and
in
jns
cltd
lret
dec
les
into
sbb
arpl
mov
cld
jp
cld
sub
jmp
int
xor
mov
mov
pusha
inc
imul
xchg
add
sbb
xor
lret
mov
and
stos
add
imul
push
jno
xchg
and
jnp
ror
loop
cli
aaa
ret
es
pop
int3
mov
sbb
jno
pop
xchg
bound
movsb
outsl
test
adc
push
jne
loope
fisttps
mov
xor
ret
fwait
push
inc
fisubs
sbb
push
sbb
and
dec
loopne
mov
jb
mov
sbb
push
jge
jae
xor
mov
cmp
push
jle
adc
sub
xchg
in
fldl
adc
adc
addr16
fcomp
pop
jbe
cmp
lods
inc
jbe
pop
shrb
sbb
xchg
jg
pop
cmp
mov
sbb
sarl
jle
repz
cli
xor
adc
xor
and
insl
sbb
fists
test
int3
xchg
mov
inc
orl
mov
int3
sub
popa
inc
aam
inc
push
cmpsb
inc
push
cmp
and
sub
lret
shlb
repz
cmpsl
jg
int
push
fisubrs
fldl
dec
sbb
out
adc
mov
loope
and
and
and
icebp
arpl
push
leave
dec
cmp
and
aas
add
jecxz
rcll
enter
xchg
cmp
ja
sub
call
mov
subl
push
leave
xchg
addr16
pop
mov
cmp
adc
out
insb
or
add
pop
xchg
out
inc
sbb
jae
lcall
pop
xor
repnz
andl
cltd
mov
xchg
push
call
idiv
add
sub
push
inc
mov
sub
mov
xorl
fidivrl
pop
dec
xchg
mov
mov
xor
jo
push
fldl
xchg
ficoml
or
xor
sbb
fsubr
cmpsb
shrl
inc
aad
sub
adc
stos
fldcw
sub
xchg
sbb
or
push
mov
dec
mov
loope
mov
fcmovnb
or
lods
roll
adc
aad
sbb
nop
mov
popa
lods
rol
jno
mov
xchg
sub
loop
movsb
loope
out
sbbb
jo
and
lods
sub
pusha
mov
adc
add
cmp
mov
sbb
mov
scas
stc
cmpsb
sub
jmp
or
ret
mov
roll
jns
out
movsl
mov
mov
mov
sub
test
loopne
jns
test
adc
rol
outsl
mov
sti
daa
xor
sub
sahf
cld
fwait
pop
push
outsb
sbb
adc
scas
xor
jecxz
sar
loop
push
adc
imul
push
repz
sbb
or
sub
loope
cmp
into
mov
out
mov
pop
sbb
pop
or
nop
sbb
sbb
xor
inc
scas
out
cmp
rep
push
cmp
cmp
leave
sub
pmulhw
out
lea
xor
cmc
sub
cmp
stos
jno
jle
or
push
cmp
sub
push
mov
adc
pop
xchg
mov
js
stos
daa
push
shl
ret
and
cmp
push
and
adc
jb
in
pop
xchg
pop
mov
inc
jno
xchg
mov
mov
push
test
sub
dec
cmp
outsl
and
fldenv
test
jae
repz
data16
je
fstps
jl
popf
xor
jne
mov
jp
or
or
or
sub
insb
cwtl
scas
in
pop
int3
or
movsl
test
out
xchg
cmpsl
clc
mov
sbb
stc
inc
sub
xchg
adc
out
sbb
pushf
jmp
rolb
test
add
push
clc
icebp
daa
push
lods
outsb
pop
sbb
aas
outsl
jns
inc
inc
adc
hlt
adcl
lret
dec
cmp
addr16
stc
sbb
jge
dec
lds
pop
mov
imul
xchg
push
jbe
add
adc
or
lret
fwait
pop
ficompl
rorl
push
mov
mov
lahf
dec
mov
mov
aaa
cwtl
jae
ret
stos
aaa
dec
movsl
bound
inc
stos
ror
mov
sub
js
nop
jns
cli
pop
inc
bound
insl
lret
sbb
imul
subb
sub
in
ljmp
adc
dec
mov
cmp
cmpsl
mov
and
fnstcw
dec
push
ss
push
fs
cmp
lods
fisttpl
xchg
sbb
popa
jbe
jnp
icebp
mov
pop
lods
jmp
test
bound
into
fdivrl
fcmove
int
or
cmp
imul
hlt
test
adc
loopne
ret
outsb
sbb
out
cmp
and
stos
movsl
mov
mov
test
arpl
xor
mov
subl
xchg
addl
mov
psubq
or
xchg
add
lahf
popf
fadds
scas
xchg
into
mov
xor
fisubrs
adc
cld
adc
insl
fisttps
insb
mov
mov
test
inc
sbb
mov
clc
cmp
mov
pop
jl
mov
in
ficoml
test
or
add
into
dec
cli
pop
xor
clc
js
xor
sub
cmp
pop
jae
pop
pusha
jno
jno
andl
pop
aas
enter
sub
out
es
into
test
mov
sar
into
shll
fdivrs
push
xor
or
rclb
cli
fbld
jle
jmp
xor
lcall
ss
hlt
test
jo
or
dec
inc
mov
pop
ficoml
ret
sbb
cmc
jno
out
xchg
inc
cmp
scas
cli
cmp
xchg
mov
sub
jle
fidivl
out
adc
fcoml
dec
ss
imul
xchg
pop
dec
sub
push
iret
dec
outsl
pop
dec
loop
jbe
popa
jge
arpl
roll
pop
dec
mov
pop
addr16
das
jp
push
shufps
loop
add
cmp
fcomi
mov
lahf
add
inc
ret
pop
and
sub
les
lock
mov
jnp
jnp
dec
jge
in
mov
mov
pop
jmp
cmp
push
xchg
push
mov
sbb
inc
out
icebp
push
jmp
jl
push
fs
andb
fildll
mov
mov
mov
sub
addr16
movsb
xchg
xchg
lods
cmpsl
repz
fst
xchg
pop
fistpll
pop
out
lret
roll
mov
inc
scas
rcr
lret
cmp
mov
fsubp
sub
in
iret
dec
fidivl
pop
mov
pmullw
loopne
jbe
xor
sete
hlt
push
fstps
dec
divps
add
jne
and
mov
jns
aaa
rcrb
or
mov
inc
stc
sar
sbb
jmp
sbb
push
pushf
mov
lret
enter
shlb
popf
sbb
mov
pop
cld
enter
push
clc
mov
sbb
push
and
or
jbe
sbb
add
mov
test
jns
jmp
outsl
jno
cli
sub
cwtl
test
push
jae
addr16
scas
sbb
cmp
and
xor
shrl
dec
cwtl
or
cmpsb
push
sbb
aaa
ljmp
stos
inc
subb
dec
or
push
add
sub
xchg
adc
cmp
mull
xchg
xchg
sbb
subps
pop
pusha
sbb
ss
sbbl
fiadds
mulps
out
and
mov
js
push
ljmp
sbbb
dec
push
or
sbbb
movsb
pop
ret
mov
mov
mov
cld
imul
or
iret
xor
and
jp
add
pop
and
mov
adc
into
xchg
mov
add
mov
les
adc
add
bound
sbb
sbb
push
pop
cli
lock
dec
ret
jecxz
cmpsb
dec
ss
jp
daa
xor
mov
dec
pop
adcb
outsb
jmp
fisubl
sbb
and
js
xchg
cmp
and
sub
cs
sub
addr16
popa
icebp
lock
rorb
dec
mov
adc
mov
adc
mov
xchg
or
loope
sbb
jbe
test
movsl
test
add
inc
sub
xor
pop
aas
insl
dec
cld
jb
int3
out
push
pushf
sub
in
push
pop
les
iret
aam
stc
outsb
fcmovbe
fisubl
add
xor
adc
inc
outsl
jl
aas
shll
mull
ret
push
scas
inc
mov
adc
call
xchg
or
cmpsb
cmc
call
mov
outsb
mov
imul
mov
push
mov
or
int
xchg
jl
ret
add
out
jge
loop
insl
sbb
sbb
pop
xchg
inc
xor
cmc
push
enter
mov
cmp
mov
insl
es
sbb
ffree
movsb
lock
frstor
xchg
popa
push
push
fsubrl
sub
mov
push
pop
fstps
nop
and
mov
xchg
imul
inc
mov
mov
add
dec
out
jmp
cmc
adc
inc
cmc
push
or
loop
or
and
ret
ja
dec
cmp
jg
add
mov
int3
adc
xlat
adc
les
jns
arpl
andb
lods
mov
loopne
adc
mov
fisubl
xchg
jnp
cmp
pusha
into
jg
push
enter
and
iret
and
sahf
fsts
shll
sub
xor
or
dec
sub
push
cmp
dec
jp
lods
out
jae
push
inc
jb
xor
pop
or
dec
sbb
adc
dec
xchg
shlb
je
xchg
addr16
ss
mov
xchg
iret
or
mov
pusha
loop
xor
push
and
in
outsb
pop
adc
lret
xor
scas
or
sbb
lahf
sbbb
sub
jae
mov
mov
or
xchg
popf
ret
js
scas
dec
xor
aad
pop
mov
js
gs
addl
cmpsb
cmpsb
mov
pop
fdivrl
or
movsl
push
jo
in
in
cli
outsl
jnp
add
mov
jecxz
lret
test
movsb
in
mov
lcall
sbb
jne
into
bound
icebp
sub
sti
mov
pushw
lods
je
adc
jno
mov
inc
push
call
inc
mov
arpl
mov
add
les
cmp
xchg
inc
clc
push
leave
pushf
push
mov
das
pusha
imul
test
fdivrl
or
test
mull
negl
mov
xchg
jb
pop
js
sar
sbb
pop
and
mov
jnp
add
repnz
shr
aam
add
cmp
cs
pop
addr16
mov
stc
mov
or
push
mov
mov
jge
aas
movsb
mov
xorl
sarl
into
push
push
ret
and
mov
jg
movsb
cmp
sub
cmpsb
jns
lcall
stos
scas
sbb
or
imul
aam
cmp
lea
mov
aam
int
pop
jb
in
jle
lds
in
jae
mov
ffree
xor
pop
mov
pop
fldcw
mov
sub
gs
fmul
aam
into
add
mov
arpl
cmc
mov
in
push
push
rclb
test
fcmovnbe
int
pop
inc
jle
in
sbb
mov
cltd
xor
or
rcll
test
into
mov
out
mov
mov
pop
mov
lea
push
fmuls
outsb
inc
mov
lea
mov
mov
mov
mov
jnp
mov
outsl
mov
shlb
xchg
in
mov
stos
add
data16
mov
sbb
xor
enter
sub
shll
popf
or
ret
pop
daa
lods
xchg
insb
push
lds
mov
jne
cmc
mov
roll
sar
mov
xchg
movsb
insb
inc
mov
inc
pop
out
jmp
mov
add
out
lock
dec
pop
ds
sub
bound
shlb
pop
sar
xchg
ja
int3
test
push
add
hlt
sbb
xchg
faddl
add
sbb
inc
or
push
into
sbb
or
inc
outsb
aad
jle
loope
icebp
insl
push
movsl
fiaddl
test
xor
push
sbb
pop
imul
fdivrl
outsl
push
add
repnz
sub
dec
xchg
push
pop
mov
inc
push
jl
ret
mov
and
dec
jb
out
pushw
stc
jge
cmpsl
jecxz
jmp
add
pop
add
and
icebp
aas
outsl
mov
or
mov
daa
pop
ja,pn
mov
sub
dec
adc
das
pusha
jnp
mov
loop
int3
jo
adc
arpl
int
cmp
test
jns
and
aad
stos
mov
cltd
cmpsl
inc
imul
je
insl
cmp
sub
cmpb
jl
daa
addl
sub
add
push
mov
add
mov
jne
mov
ret
into
out
orl
jae
shl
xchg
fbld
pop
lds
pop
mov
push
jge
cmp
enter
add
shr
pop
add
in
sarb
mov
jl
stos
inc
outsl
push
jb
sarb
in
dec
xor
nop
adc
mov
jo
sub
mov
pop
in
mov
mov
leave
lea
std
sahf
mov
imul
mov
divb
jp
jge
mov
pop
push
cmpb
loop
pop
loopne
pop
xchg
lret
xor
outsb
mov
xlat
fwait
das
mov
cmc
sbbb
adc
insb
adc
mov
dec
push
testl
aas
imul
cli
xor
insb
ret
mov
std
je
xlat
pop
out
in
mov
add
dec
lret
mov
lcall
jb
add
push
rorb
gs
imul
outsb
sbb
fs
sbb
mov
xchg
ret
cmpsb
pop
mov
dec
sbb
dec
cli
rcrb
mov
mov
mov
jge
shll
ror
mov
push
data16
inc
mov
xor
dec
ljmp
popa
adc
lds
pop
leave
loopne
and
fwait
loop
movsb
imul
xchg
in
jnp
addb
cli
mov
pop
fldt
and
loop
in
cs
pop
pop
stos
xor
or
leave
lahf
lds
nop
loopne
jmp
lahf
xchg
mov
mov
lock
insl
mov
jp
mov
jb
aam
pop
sbb
xchg
lahf
mov
mov
cmpl
adc
mov
and
nop
pop
jmp
xchg
hlt
outsl
inc
adcb
pushf
test
xor
jp
mov
stc
arpl
cmp
cmp
lahf
push
jl
and
test
mov
scas
add
cmp
frstor
repz
hlt
lret
sbbl
dec
inc
in
push
xor
fimull
ror
sbb
popf
inc
xchg
pop
and
aaa
fnstsw
push
mov
mov
int3
add
xor
ss
ficoml
frstor
sub
data16
es
sbb
sbb
cwtl
cli
jb
aad
jg
sbb
repnz
cmp
mov
cmpsb
sbb
cmc
sub
lock
int3
inc
mov
mov
fcompl
lea
popa
push
jbe
mov
pusha
in
jb
lsl
outsl
clc
sbb
dec
std
mov
bound
ror
or
cltd
mov
fidivl
fidivrs
jmp
fldl
aad
ds
mov
or
leave
sbb
jg
cmpsl
pop
or
ret
mov
pop
lods
rolb
inc
fimull
lods
dec
leave
xorb
adc
ret
rcrl
xchg
roll
add
in
es
xchg
cld
imul
test
shrl
mov
mov
std
jae
subb
inc
jno
fnstsw
pop
lret
fistps
icebp
and
stc
popa
mov
sub
cmp
adc
push
mov
punpcklbw
sbb
fcmovnbe
fcompl
and
xor
pop
xor
push
insl
jae
test
stos
mov
or
ror
pop
mov
or
adc
in
sbb
mov
aam
insl
pop
cli
dec
rorb
sbb
stos
rcrl
sub
fnstcw
mov
add
or
icebp
loopne
pusha
fwait
xor
pop
lahf
xchg
in
sbb
call
jecxz
jmp
sarl
ret
cld
stos
pop
mov
adc
mov
cmp
rorw
cmp
inc
mov
lods
jle
clc
add
sbb
repnz
add
and
pop
roll
xor
test
addr16
xor
mov
sbb
rcrb
out
add
ds
addl
mov
cmp
lods
mov
jae
push
jle
xchg
repnz
mov
cmp
out
mov
cld
dec
aad
out
cmp
in
daa
imul
setnp
inc
xor
jno
pop
scas
mov
in
lcall
ds
in
or
push
adc
pop
push
mov
inc
pop
rep
mov
mov
dec
cmpsl
adc
adc
leave
scas
dec
adc
ja
mov
push
dec
mov
lret
jno
xchg
jmp
lds
daa
std
movsl
insl
jecxz
push
cli
dec
jmp
sub
lea
outsb
sbb
lock
es
jl
fidivrs
sbb
sub
mov
mov
jle
cmp
mov
out
xor
das
xchg
pop
sub
lret
in
xchg
aad
pop
push
es
in
push
scas
testb
jb
out
cmp
mov
sub
or
nop
add
xchg
enter
js
xor
dec
rclb
lock
scas
cmp
push
mov
aam
unpckhps
data16
xchg
loop
cltd
lcall
movsl
mov
xor
push
inc
fstps
pop
outsl
rorl
push
sub
cmpsb
lods
cmp
rcrb
mov
sub
bound
sub
or
mov
and
std
mov
shrl
adc
dec
push
xor
insl
test
jnp
add
and
cwtl
arpl
mov
push
jg
or
xor
lea
push
arpl
jmp
test
mov
lcall
hlt
je
adc
daa
jnp
mov
js
cmp
cmp
mov
xchg
pop
in
or
lods
scas
cld
cmp
iret
or
add
jle
lock
fs
lahf
cmp
mov
push
das
test
movsb
jmp
fcomi
pop
inc
out
jp
sar
out
in
outsb
push
mov
sarb
push
scas
les
xchg
and
add
stos
mov
xchg
jae
mov
sti
or
repz
push
xor
adc
mov
imul
sub
popf
ds
mov
inc
jno
or
add
xchg
push
cmp
imul
mov
inc
add
ret
lcall
out
or
fxch
mov
push
adc
inc
mov
pop
js
jp
xor
and
xchg
outsb
fimuls
pop
cli
xor
xlat
add
jns,pt
and
jnp
idiv
xchg
mov
push
dec
jae
ret
in
jp
call
sti
leave
adc
add
pop
ljmp
xor
and
inc
dec
jns
fldt
xchg
adcb
add
out
pushf
cwtl
mov
out
push
inc
add
lock
adc
xor
and
call
pushf
fcoms
adc
aas
int
pop
scas
ret
adc
lea
push
sub
in
pop
xchg
pop
dec
fstl
xchg
insl
aad
in
stc
out
enter
or
pop
or
xchg
cwtl
mov
fdivrl
jl
dec
and
std
mov
dec
mov
lret
jp
and
imul
xorb
sbb
push
call
mov
xor
arpl
in
into
push
out
xor
mov
jo
or
cmc
cmc
push
in
in
leave
fdivrp
movsl
dec
inc
mov
ss
mov
mov
mov
adc
ret
cld
lahf
jmp
out
dec
repnz
test
cli
das
es
dec
fdivrl
mov
inc
stos
fcmovbe
add
cltd
ja
roll
inc
int3
in
and
ss
test
jo
dec
sbb
sbb
sub
adc
pusha
cmp
das
call
lret
sub
or
repz
outsb
pop
mov
adc
int3
xor
loope
dec
mov
adc
lock
mov
xor
dec
sbb
das
outsb
add
imul
push
xor
out
xchg
dec
in
pop
je
popf
push
in
mov
and
mov
jb
lods
stos
cmp
ljmp
lds
add
mov
jmp
out
std
in
fisttps
inc
bound
push
std
jmp
lahf
inc
sbb
xor
xchg
das
and
ss
cs
push
or
xlat
pop
pop
sub
xchg
adc
aad
sub
xchg
iret
jns
mov
mov
push
xor
push
or
mov
mov
jns
les
adc
dec
mov
adc
inc
dec
mov
pop
mov
lock
clc
lock
popf
adc
ljmp
jge
sarl
cld
mov
sbb
and
push
pop
xor
mov
pop
xlat
ret
or
imul
add
mov
icebp
cs
aad
mov
pop
addr16
lock
cld
pop
jae
mov
xlat
xchg
dec
adc
lret
mov
int3
mov
xchg
loopne
jbe
std
xchg
outsb
out
iret
scas
or
inc
mov
push
sahf
cmp
jnp
in
lds
mov
or
lcall
push
push
ret
or
fwait
rclb
jbe
mov
ficompl
and
pop
andl
rol
pusha
in
dec
fwait
push
cmp
arpl
fstps
jecxz
sbb
push
mov
xchg
fistl
pop
movsl
mov
mov
lret
fiaddl
jecxz
mov
dec
mov
lea
jb
test
not
out
das
arpl
push
aaa
imul
push
mov
or
bound
push
pop
repz
fsubl
nop
testl
aaa
push
push
and
movsb
bound
push
sub
ja
mov
into
pop
daa
sub
and
mov
pop
psubq
jecxz
adc
or
pop
sbb
and
dec
inc
mov
cli
push
mov
arpl
add
dec
ljmp
jae
adc
and
lahf
dec
pop
inc
stos
add
dec
pop
rcrb
stc
mov
in
xor
or
jno
jmp
xlat
pop
add
cmpb
pop
sti
int3
popf
hlt
imulb
jbe
popw
push
std
repz
shlb
inc
loop
subb
mov
adc
sbb
mov
jnp
pushf
stc
sub
inc
loop
pop
inc
popf
inc
mov
cmc
shlb
loopne
and
in
inc
mov
sbb
jle
in
lahf
std
stos
out
and
repz
push
scas
ss
add
and
stos
loopne
and
jmp
or
sbb
sub
jle
ret
repnz
fs
sub
into
and
sbb
int
mov
fucomi
iret
xchg
addr16
data16
or
jp
enter
faddl
sbb
fldenv
aaa
or
mov
pop
dec
lods
orb
adc
pop
cmp
enter
xor
aas
ret
dec
push
icebp
ljmp
out
sbb
dec
arpl
addr16
mov
rcrl
mov
or
xchg
xchg
sbb
fstpl
dec
lcall
into
stc
out
lds
jle
gs
loope
and
ss
pop
cmc
adc
icebp
jle
cltd
add
int3
subl
push
nop
mov
hlt
add
jb
out
leave
cmp
mov
subl
pop
push
shll
dec
inc
std
mov
fwait
inc
mov
ret
cmp
cmp
into
mov
push
sahf
insl
cmp
ret
outsl
xor
jmp
aam
fsubrs
push
cwtl
adc
daa
loopne,pt
sar
out
push
dec
mov
or
sbb
repz
arpl
mov
mov
lret
or
push
ffree
mov
jp
sub
ret
inc
shl
mov
adc
insl
cmp
loopne
call
les
mov
dec
aas
jp
mov
insl
test
xor
lds
pop
es
inc
jecxz
std
stos
and
sbb
xchg
movsb
xor
cmpsl
and
inc
push
xor
jno
daa
fs
cld
leave
lahf
fdivrl
int
sub
sbb
movb
outsl
jecxz
movsb
mov
push
jle
popl
lret
arpl
scas
mov
mov
test
mov
loopne
mov
jg
xor
hlt
les
jne
and
inc
fimuls
mov
jb
pop
add
sbb
sbb
outsl
push
add
push
fsubrl
bound
xchg
mov
call
mov
enter
mov
cld
mov
fcmovbe
imul
ret
cld
jmp
inc
xchg
dec
jecxz
sbb
clc
or
sub
lcall
int
mov
inc
mov
inc
and
adc
mov
inc
sub
roll
insl
lods
loop
fcmove
and
cwtl
pop
cmp
repz
xchg
push
jle
rclb
stc
inc
stc
jo
inc
in
sub
daa
jp
aas
ret
out
dec
out
adc
cmp
mov
clc
sbb
jle
mov
xchg
lcall
cmp
imul
xor
jmp
fsubr
andl
mov
ja
loopne
mov
pop
pusha
sub
ret
enter
and
xor
ds
sbb
or
cmp
push
test
rorb
inc
stos
dec
or
lock
jno
clc
mov
pop
in
insl
xchg
les
leave
icebp
jne
loopne
fwait
jo
mov
ret
cli
mov
xchg
and
adc
dec
movl
sarb
rcll
je
dec
lss
jecxz
stos
jge
sub
push
jnp
loop
dec
jmp
fwait
adc
pushf
in
ljmp
popf
xchg
sbb
adc
push
sbb
fisttpll
pop
inc
in
pop
push
fwait
inc
cmpsl
mov
adc
mov
gs
mov
lea
fnstsw
push
sbb
pushf
inc
clc
sub
adc
dec
adc
inc
jb
test
test
rorb
addr16
inc
pop
jp
pop
mov
mov
lods
test
jl
lahf
cmp
pop
clc
sub
movsl
cmp
sub
xchg
cmpsb
insb
push
and
push
xchg
call
dec
loop
adc
mov
js
test
mov
push
fcomi
ja
xchg
push
push
sbb
and
arpl
jnp
jecxz
or
mov
test
out
xor
cmp
xlat
adc
sti
xor
movsb
sub
mov
xchg
popf
cmp
hlt
aas
sbb
jp
imul
popf
push
add
pop
fadds
and
mov
icebp
jns
std
dec
mov
xor
cli
ret
mov
pop
inc
jae
js
aam
fwait
xchg
or
adc
mov
xlat
xchg
push
add
sbb
cwtl
ret
lea
add
mov
push
and
mov
faddl
inc
push
adc
inc
in
xchg
mov
imul
dec
fwait
xchg
mov
jo
shl
mov
popf
dec
aaa
std
xchg
xor
xchg
test
and
inc
mov
lea
insl
loope
inc
sub
add
sbb
int3
cmp
and
rclb
push
xchg
jge
loope
jb
adc
inc
and
push
ret
movl
scas
popf
aaa
xchg
out
leave
pop
mov
in
xchg
mov
enter
pop
mov
inc
cmp
mov
testb
sub
cmp
jb
or
cmp
inc
jo
lds
sbb
jge
cmp
in
mov
clc
out
test
mov
fiaddl
in
jl
daa
sub
and
mov
adc
outsl
cmp
inc
mov
std
test
mov
push
jbe
rcrb
out
or
push
ret
inc
stc
int
lods
enter
dec
imul
arpl
bound
cmp
call
pushf
popa
lock
adc
sub
jbe
dec
ds
xor
ja
cmp
sub
mov
cli
outsl
scas
inc
fs
push
iret
jg
dec
xor
clc
and
fisubs
arpl
daa
repz
in
rcll
xchg
pop
mov
mov
sbb
ret
stc
les
mov
cmp
cmp
xchg
mov
fldl
bound
sahf
push
ficoml
and
ret
mov
dec
orl
inc
cmpsb
push
push
xchg
call
cmc
cmpb
pop
pop
xchg
pop
mov
lock
sub
mov
mov
movsl
xchg
add
jnp
enter
adc
and
or
add
js
out
add
insl
pusha
out
ja
popa
leave
stc
cmc
jb
push
push
dec
nop
add
mov
push
shll
sub
popf
sbb
fcoms
pop
cs
adc
test
and
arpl
mov
cmp
orb
jae
adc
enter
mov
sub
gs
mov
lret
adc
dec
inc
add
out
fldl
repnz
loop
and
jmp
dec
jae
cmp
movsb
and
xorb
es
xor
les
push
fnstsw
mov
or
repz
push
xchg
fs
lock
mov
ds
adc
xchg
cmc
fcoms
jmp
jo
and
push
or
dec
es
inc
int
lods
push
ja
sbb
adc
sub
lods
filds
dec
sbb
je
cs
jmp
ret
call
xor
jecxz
sarb
mov
fldenv
mov
bound
sbb
jne
nop
jg
mov
cltd
rolb
pop
jae
jge
jmp
push
or
add
ss
fcom
xchg
pop
inc
sub
push
in
lahf
shlb
sbb
shlb
push
jg
cmpsb
lret
bound
cmpsb
fsubrl
ds
ror
iret
jge
inc
xchg
data16
fcomp
mov
mov
lods
movsl
fmulp
fdivrl
jns
jp
sbb
ds
sub
mov
into
sbb
add
dec
or
pop
inc
push
jge
scas
pop
or
orl
mov
lret
adc
dec
push
bound
adc
pop
insb
in
and
pushf
sti
jg
jo
xchg
loopne
dec
gs
fmuls
arpl
jmp
fldt
cmc
pop
fadds
in
imul
jnp
pop
ret
test
fisubrs
cmp
mov
lret
enterw
sti
rcll
ret
out
jmp
sahf
sbb
lock
sbb
cmpsl
cmp
and
mov
cmp
mov
xlat
fcmovb
mov
mov
add
xor
divb
insb
mov
mov
pop
lods
test
jmp
lahf
xchg
push
fistpll
and
cmp
out
das
xchg
adc
mov
int3
arpl
inc
out
ds
jmp
les
mov
ss
out
test
imul
mov
xchg
push
dec
mov
in
cwtl
jmp
fidivrl
push
mov
hlt
sbb
lahf
leave
add
gs
loop
jb
adc
mov
push
mov
stc
iret
sbb
insb
int3
in
inc
lods
cmpsb
lock
lock
jns
in
pop
in
jno
sub
stos
test
fstpt
ljmp
xor
or
les
into
fwait
and
sub
lea
and
jle
xchg
aam
pop
mov
mov
add
push
lret
pop
mov
ret
popa
pop
jb
arpl
imul
sahf
mov
psrld
jnp
push
cltd
divb
das
inc
pop
rcr
add
imul
cmp
push
xor
inc
leave
aad
push
popf
shlb
ds
add
mov
jns
imul
arpl
sub
and
push
cmc
icebp
daa
cmp
loopne
movsl
arpl
mov
push
sti
add
cmp
pop
lds
icebp
rclb
lcall
shlb
mov
dec
int
pop
orb
rol
mov
adc
xchg
inc
sub
fbld
sub
in
xchg
ret
inc
out
fistpl
pop
or
loop
nop
dec
xchg
ja
pop
xchg
mov
push
clc
pop
fisttpll
test
int
incb
adc
cmp
inc
out
xchg
ficomps
sbb
repz
imul
sbb
jnp
mov
pop
loop
lret
push
fs
add
icebp
in
arpl
loope
out
xor
iret
xchg
xchg
jnp
jle
es
insl
mov
aad
ljmp
jge
jl
pop
fstl
insb
dec
adcl
mov
cmp
daa
and
ds
mov
sub
mov
dec
jecxz
mov
cltd
mov
loope
fisubrl
loope
mov
roll
sbb
shll
nop
ds
stos
imul
sbb
mov
mov
enter
movsb
dec
or
jb
dec
mov
mov
mov
xor
sbb
movsl
mov
mov
out
gs
daa
testb
fsubrl
xchg
inc
cmp
icebp
scas
push
mov
and
lea
jl
mov
test
jge
fdivp
mov
lcall
aam
aas
xchg
ret
sbb
bswap
cltd
dec
inc
add
dec
daa
dec
inc
cmp
pop
jne
hlt
xor
sahf
into
sarb
dec
rolb
insl
jnp
sbb
outsb
add
add
mov
sbb
sub
ja
inc
push
js
inc
or
int3
xor
ds
push
add
sbb
adc
mov
sbb
xor
loopne
cltd
xor
shrl
adc
jbe
pop
or
mov
cli
adc
dec
xchg
cltd
push
xor
je
adc
pop
jg
shrl
fstpt
fnstenv
rcll
sahf
or
fcoms
or
cmp
push
jge
pop
mov
adc
push
mov
sub
data16
sub
jp
xor
insl
and
xchg
jp
cwtl
pop
push
jno
in
daa
jp
and
test
das
pushf
adc
loope
pop
push
dec
out
dec
aas
mov
or
fsubp
cmc
and
in
mov
sub
xor
adc
aad
adc
ljmp
and
inc
out
arpl
stc
mov
clc
jae
inc
mov
lock
mov
mov
jle
jno
cmpsb
dec
orl
bound
fidivs
push
adc
jp
shl
xor
int
fsubs
lret
fwait
jns
push
aas
cltd
sub
sarb
insl
lods
push
bound
sahf
sahf
mov
push
ss
adc
sub
mov
pop
xor
or
aaa
pop
pop
xchg
outsb
ss
out
mov
daa
jbe
or
xor
sub
lods
mov
mov
cmpsb
mov
test
add
inc
jne,pn
insb
dec
xchg
sub
inc
pop
into
dec
xor
add
xor
pop
adc
mov
data16
fcoml
das
lods
lea
clc
pusha
ret
xor
aaa
push
mov
dec
out
imul
xor
pop
negl
ficompl
adc
roll
negl
dec
cmp
fistpll
js
jae
lods
lahf
mov
and
lahf
add
roll
pusha
push
mov
push
inc
out
cmp
mov
pop
sub
jge
les
xchg
imul
movsb
sub
mov
push
xchg
pusha
mov
cwtl
pop
dec
adc
xchg
fcoms
cmpsl
and
aam
ja
stc
lds
loop
xchg
into
cmp
call
rcl
xchg
cld
jg
cltd
data16
dec
mov
mov
dec
int3
psubsb
mov
mov
into
dec
divl
inc
adc
push
xchg
mov
fnstenv
sub
jg
dec
jp
in
leave
xchg
xchg
sub
hlt
pop
pop
dec
ret
outsl
mov
lods
or
inc
out
lock
adc
rdmsr
sub
sarb
mov
imulb
sbb
mov
frstor
lret
sub
cmc
bound
pop
roll
inc
mov
ljmp
cmp
jo
sbbl
cmc
dec
jp
jno
push
mov
int
mov
sbb
out
fsubs
jnp
dec
bound
cs
mov
inc
pop
jo
adc
mov
sub
shlb
xor
jmp
or
hlt
inc
ret
sbbb
add
mov
and
dec
sbb
mov
outsb
mov
dec
cltd
shll
shll
gs
or
mov
dec
icebp
mov
movsl
in
ds
cltd
roll
xor
insb
lods
sti
in
jmp
mov
lock
ljmp
xor
sarb
jo
mov
cltd
and
dec
mov
shr
int3
or
jmp
xchg
lods
sahf
and
cmpsl
shl
insb
sbb
pop
das
mov
add
lret
fcomi
test
xchg
into
mov
verr
idiv
or
popa
mov
outsl
test
dec
imul
sbb
sbb
movsb
mov
adc
mov
in
xchg
mov
addl
add
mov
lds
pop
push
inc
insl
js
adc
aam
les
loopne
push
fcoms
push
pop
mov
sbb
xor
inc
idivb
cmpsl
mov
fldcw
push
jns
jo
lea
movsb
in
fidivrs
in
xchg
cmp
jno
inc
out
jnp
shll
jns
mov
xchg
mov
mov
jns
mov
or
movsb
inc
inc
daa
pop
test
addr16
jo
cs
jne
cltd
test
mov
gs
cld
gs
std
mov
loop
ja
fucomip
jne
mov
mov
xchg
lea
aaa
in
imul
jne
out
pop
idiv
and
shrl
cli
pop
jl
out
popa
or
icebp
ss
ljmp
je
mov
mov
jne
movsl
insl
cmp
mov
out
out
lea
out
addr16
fsubs
and
test
je,pn
pop
movsb
pop
imul
sub
mov
inc
div
xchg
js
sub
lea
inc
lods
out
insb
fwait
push
or
dec
push
jmp
sub
sarb
push
fwait
mov
gs
lods
jo
jg
scas
xchg
and
es
or
sarb
ret
mov
in
jb
into
outsl
rclb
jge
pop
movsl
call
jo
divb
mov
pop
int
push
mov
xchg
pop
push
insb
test
mov
cmpsb
lods
mov
sbb
and
fld
adc
inc
or
enter
daa
aad
sbb
sub
or
pushl
cli
dec
das
add
or
pop
andl
mov
mov
nop
xchg
subb
insl
xchg
in
cltd
adc
mov
shll
scas
clc
bnd
lret
stos
imul
sbb
jge
pop
xor
sbb
sarb
je
dec
cld
mov
push
cmpsl
loopne
fwait
push
jbe
or
and
mov
lods
imul
xchg
hlt
mov
mov
dec
js
jbe
lock
incl
sub
add
mov
adc
jnp
dec
inc
pop
in
in
push
fptan
mov
jle
mov
in
lds
jle
flds
adc
es
pop
std
jg
ret
sbb
mov
jecxz
outsb
testl
daa
push
cmovae
test
lock
or
ja
push
mov
inc
std
xchg
inc
sbb
insl
mov
mov
shr
push
mov
jns
fsubrs
clc
clc
pusha
xor
jae
imull
mov
jmp
push
cltd
pop
mov
mov
pop
mov
imull
iret
mov
adc
ss
bound
inc
in
cmp
xchg
mov
or
dec
ficompl
xorl
sbb
jnp
jp
mov
cmc
in
xchg
shufps
push
mov
stos
test
imul
mov
inc
lcall
aaa
jnp
shl
bound
shlb
lret
pushf
stos
jns
jnp
iret
bnd
xchg
dec
mov
and
popa
test
ja
jecxz
or
or
mov
mov
dec
mov
dec
push
lock
jg
int3
pusha
std
andb
inc
fists
loope
sbb
jecxz
pop
mov
sub
fs
loopne
leave
iret
jnp
jne
insb
stos
push
cmp
incb
xchg
xchg
aas
push
mov
repnz
adc
cmpsl
pop
pop
mov
flds
mov
fistps
xchg
leave
cmp
jg
sbb
lret
ds
lock
rep
std
sti
and
lret
sub
cltd
enter
fwait
cmp
lret
es
inc
aas
fdiv
sub
or
xchg
pop
adc
sbb
xor
and
dec
loop
movsb
cmpsb
cs
stos
sbb
mov
mov
hlt
sub
and
sub
sbb
shlb
mov
pusha
cmp
pop
cwtl
popa
stos
jmp
sub
jbe
pop
and
enter
std
rclb
sbb
mov
mov
addr16
pushf
in
bound
dec
pop
xor
orl
pop
dec
dec
and
dec
adcb
push
jmp
or
push
inc
pop
xchg
xor
into
ret
aas
xchg
call
cmpsb
ljmp
sub
inc
out
sbb
mov
cmp
fmull
push
sbb
pop
push
xor
loopne
mov
addr16
adc
mov
xor
adc
cld
dec
std
jmp
push
test
pop
scas
mov
outsl
call
mov
mov
jp
fdivs
pop
mov
fwait
mov
mov
jne
imul
mov
cwtl
fbld
jbe
push
push
loope
aaa
movsl
add
push
shrl
inc
in
stos
mov
ss
inc
jb
test
jmp
inc
dec
xor
fcomps
aas
inc
push
jo
push
pop
fiadds
xchg
pop
adc
iret
das
stos
jp
lahf
movsb
add
push
pop
dec
mov
pop
xchg
rcrl
aam
push
imul
movsl
testl
inc
mov
leave
xchg
and
mov
pop
mov
pop
mov
das
dec
pop
leave
mov
js
icebp
add
mov
lcall
call
pop
notl
add
cmpsb
arpl
cmp
lds
mov
cmp
mov
sahf
pusha
clc
pop
xchg
sbb
shrl
dec
insb
xchg
data16
fcom
sti
mov
test
cmp
add
lcall
inc
rcll
or
mov
lcall
mov
mov
arpl
xlat
xor
lret
mov
fstl
aam
dec
lcall
inc
mov
mov
out
out
cmpsb
js
sti
xor
and
inc
mov
imul
xor
pushf
jb
ja
add
aas
scas
jle
scas
inc
in
or
cmp
pop
cmp
pop
lret
sahf
fisubs
xchg
mov
jo
lcall
mov
jmp
dec
rep
push
loopne
pushl
fs
mov
push
loop
cmp
rorb
test
mov
in
daa
arpl
mov
imul
xor
arpl
nop
daa
xchg
push
inc
repnz
pop
or
movsb
rcrb
jmp
xor
xchg
mov
sub
pop
rcl
jbe
into
or
jns
push
mov
cmp
out
and
rcrb
jb
mov
dec
adc
pop
cmp
mov
in
fcoms
andb
arpl
xor
dec
pop
dec
stos
push
sahf
mov
or
mov
xchg
int
bts
lea
pop
jle
je
xor
cmp
fstpt
sahf
fbstp
fidivrs
es
mov
insb
arpl
xlat
sub
fnsave
cmp
mov
and
xor
xchg
jb
pushf
add
lods
sub
or
and
inc
fildl
insb
xchg
add
ficoms
jg
cwtl
les
hlt
test
cld
jmp
imul
adc
imul
dec
das
jb
into
dec
xchg
lcall
adc
cmp
lret
fidivl
addr16
scas
int3
jno
or
xchg
adc
imul
jns
sub
cli
data16
inc
aam
jge
xchg
stos
jno
adc
test
lcall
fs
mov
xchg
imul
loope
mov
inc
dec
mov
adc
iret
xchg
lcall
bound
jae
lock
xor
insl
aaa
fnstenv
mov
into
mov
dec
shlb
jb
cmpsb
or
push
adc
fwait
or
ror
hlt
not
cld
pop
rol
scas
sub
fimull
or
adc
insb
jp,pt
or
lods
std
mov
rcrb
cmc
scas
mov
mov
dec
inc
stos
lea
icebp
mov
mov
movsl
push
cwtl
push
add
inc
xchg
push
mov
subl
insb
enter
je
mov
inc
mov
push
cltd
adc
or
cmp
fstps
inc
scas
std
pop
std
lcall
add
adc
push
pop
and
cmp
xor
sbb
xor
xchg
pop
jg
push
nopl
jge
mov
mov
pusha
std
fcmove
mov
pop
xor
je
mov
lahf
dec
xor
push
sbb
jp
inc
xchg
out
lret
jp
iret
les
test
mov
jne
sub
adc
bound
pop
imul
mov
push
int
loopne
mov
repz
aaa
xchg
sbb
repnz
xor
cmp
jp
xchg
int
inc
shlb
push
movsl
divl
aad
cmp
cli
mov
adc
and
jne
mov
sub
or
imul
les
push
fidivs
shll
xor
outsl
ss
mov
scas
pop
ljmp
lods
loop
aad
lock
dec
adc
test
leave
fwait
ja
jg
shrb
adc
mov
xchg
shl
jae
icebp
adc
movsb
in
ret
fstps
mov
inc
push
mov
xchg
test
cmpsb
dec
cs
mov
ret
pop
push
dec
mov
jecxz
and
jecxz
mov
lahf
and
and
notl
je
mov
mov
mov
xor
xchg
out
cmpsl
or
in
mov
aaa
js
sbb
aam
adc
xchg
rorl
dec
add
xor
xor
loopne
iret
sbb
jns
int3
push
into
movsb
fwait
outsb
testl
mov
stos
add
xor
cli
popf
sbb
jecxz
cmpsl
jmp
iret
dec
fsts
fidivs
popa
jae
cmc
sarl
sahf
stc
xchg
jmp
enter
sarb
gs
and
xchg
stos
mov
mov
pop
andb
sbb
loop
and
jae
lret
dec
int3
xchg
lods
push
mov
pop
adc
repz
icebp
mov
sbbb
push
push
in
xchg
cli
inc
mov
pop
fidivrs
fists
dec
mov
mov
hlt
lods
sub
popa
cmp
mov
xor
divl
test
gs
adc
mov
das
stc
or
adcl
insl
mov
add
ret
jno
fcompl
cli
cmp
movsl
popf
outsb
or
movsl
sub
test
cmpsb
mov
notb
mov
pop
popf
inc
out
mov
push
xchg
dec
addr16
ljmp
arpl
mov
mov
repnz
stos
or
fisubs
in
and
in
outsl
iret
lock
sahf
stos
jp
into
cwtl
stos
mov
rorl
call
loope
adc
and
sub
jmp
add
iret
fwait
dec
cli
js
int3
jbe
and
or
adc
and
loopne
orb
aam
test
fnstcw
mov
sbb
lret
inc
scas
mov
inc
jns
in
iret
vmptrld
sbb
roll
ret
cmp
inc
lock
lods
jecxz
clc
pushf
and
pushf
xor
mov
ljmp
sbb
nop
cld
cltd
inc
les
sub
mov
stos
mov
lcall
sub
daa
stos
pop
lds
xchg
in
out
and
xchg
imul
cmp
scas
pop
in
cmp
mov
das
sub
daa
lcall
mov
inc
jg
pop
mov
xchg
ret
mov
jno
das
leave
lcall
pushf
or
xchg
xchg
loope
insl
jl
pop
mov
and
cmc
pushf
sbb
mov
arpl
or
xchg
test
sbb
xchg
pop
mov
fcomp
aam
stos
xor
shrb
jle
in
ss
repnz
sub
addr16
xchg
inc
inc
out
ret
mov
enter
shr
sahf
cmpsl
je
fldcw
ror
pushl
mov
lock
add
insb
adc
push
jecxz
mov
lods
dec
mov
adc
dec
iret
xor
mov
sub
inc
hlt
cli
scas
in
out
adc
dec
lock
clc
jmp
test
arpl
mov
int3
pop
cmpsb
push
push
loop
jg
xchg
sbb
dec
notl
cmpsl
jo
sub
and
cmp
ljmp
add
insb
or
mov
insb
mov
ret
pcmpgtd
fnstcw
cmpsb
lret
dec
xor
push
in
dec
mov
xchg
ficompl
and
repnz
sti
out
scas
mov
int
mov
lds
int3
sub
sti
mov
repz
adc
roll
loope
stos
shrb
mov
sarb
mov
mov
xchg
cmp
inc
inc
push
shll
xor
dec
inc
nop
fimuls
jmp
xchg
in
ficoms
cli
cmp
jge
stos
shlb
rol
andb
dec
pusha
in
adc
dec
and
lods
sub
pop
sbb
xchg
pop
sub
xchg
data16
test
lret
in
insl
jae
mov
xlat
sub
dec
push
shl
pop
aaa
push
or
adc
vpsubw
addr16
xchg
sub
jbe
test
lcall
xor
cmp
sub
leave
cmp
mov
ret
notb
pushf
pop
test
test
mov
or
test
test
js
popa
xchg
out
push
enter
addl
cmp
pop
cmp
iret
rcrb
imul
add
test
sahf
dec
or
dec
dec
xor
pop
add
xchg
sbb
in
sbb
xor
cltd
aas
xor
ret
pop
jmp
pushf
push
decb
popa
mov
jo
ret
bound
inc
sbb
sbb
jle
not
push
les
int
mov
das
mov
jmp
test
adc
push
adc
inc
lock
aam
xchg
mov
scas
fstps
pop
lds
fsts
mov
orb
mov
scas
or
push
sub
inc
sbb
xchg
sub
test
dec
adc
push
hlt
pop
jle
jecxz
push
pop
adc
mov
mov
cmp
das
lock
add
inc
lcall
push
mov
mov
je
mov
loop
adc
out
sub
adc
repnz
popa
and
test
mov
pop
push
out
dec
rolb
cs
jmp
int
jg
jg
mov
mov
mov
adc
in
lahf
daa
fisubrs
sbb
or
daa
test
outsl
sbbl
dec
mov
sbb
jns
daa
xor
xchg
repz
sub
outsb
mov
loopne
mov
sub
es
cltd
adc
or
and
lret
jb
inc
mov
cmp
cwtl
cmp
jecxz
cwtl
rcl
mov
repnz
loopne
xor
cmp
xor
stos
jnp
mov
inc
outsl
mov
fwait
in
push
cmp
pop
sub
nop
addb
es
mov
ds
pop
popf
icebp
ja
jne
add
mov
mov
sub
outsl
insl
jbe
mov
push
bound
xor
icebp
rcrb
jle
in
pusha
loop
mov
sub
das
inc
xchg
push
pop
aam
les
or
sub
fisttpl
and
mov
mov
mov
inc
and
mov
pop
loop
sub
in
or
stos
aad
cmp
pop
leave
test
and
pop
jmp
cmpsl
or
cmp
sbb
mov
mov
orb
jno
lret
mov
imul
sbb
cmc
mov
subl
inc
pop
jle
push
arpl
and
std
mov
or
popf
faddl
imulb
lcall
rcrb
jbe
clc
sub
push
imul
jnp
xor
movsb
sub
dec
ljmp
sub
out
jecxz
cmc
inc
scas
scas
sub
shlb
fmull
mov
jle
aas
cmpsl
xlat
or
jnp
cltd
sbb
jb
cmp
mov
scas
aas
dec
ror
ficompl
js
into
popa
subb
icebp
fsubrl
cmpsb
pop
clc
aam
and
xchg
cld
adc
packssdw
cli
enter
and
fwait
outsb
loopne
mov
xchg
push
adc
mov
mul
loopne
jno
push
mov
daa
xchg
xor
push
adc
mov
aad
outsl
mov
dec
mov
cli
adc
mov
cmp
mov
and
add
clc
push
stos
inc
mov
lahf
pop
sbb
aad
sarb
add
jle
push
sub
fbld
mov
loopne
rcll
nop
enter
sbb
out
pop
loope
push
mov
call
out
test
mov
je
dec
lahf
scas
insl
mov
arpl
shrl
xlat
or
sarb
fisttpl
pusha
ret
push
mov
idivb
ret
inc
loope
out
neg
xchg
dec
mov
push
sbb
cmp
fsubr
push
js
das
xchg
jmp
sbb
pop
lret
in
lcall
in
and
or
xchg
cli
mov
int3
lds
and
mov
jns
data16
jbe
xor
mov
dec
ja
mov
dec
mov
dec
sbb
out
ljmp
test
mov
dec
in
push
ret
cmc
in
dec
jmp
mov
dec
or
and
push
shl
inc
cmpsb
pop
jo
sbb
test
add
mov
shlb
xor
sahf
add
or
and
sysret
lods
sbb
push
loopne
push
aaa
daa
inc
mov
outsb
scas
pop
fistl
mov
bound
ret
mov
es
jo
add
add
pop
or
cli
fimuls
int
leave
jne
pop
lods
push
aaa
fs
je
dec
or
lds
mov
in
adc
sbb
out
fildll
rcrl
shll
int
fsub
ljmp
dec
pop
cld
add
nop
xor
out
push
mov
sbb
mov
and
int
jl
ss
inc
jae
dec
out
mov
decl
bound
jg
nop
add
enter
inc
push
int
push
mov
push
or
or
test
into
addl
pop
out
cmp
adc
push
mov
inc
mov
call
neg
lret
in
addr16
mov
mov
scas
dec
fiaddl
fdivl
rcll
add
and
dec
add
movsb
cmpb
outsl
cmpsl
xchg
lret
mov
aad
xor
arpl
dec
aad
mov
jb
or
loop
push
shll
push
sbb
jae
gs
lret
push
pop
repz
mov
lods
push
ljmp
cmp
icebp
aad
jb
js
xchg
adc
push
pop
push
repz
icebp
nop
pop
sub
cwtl
hlt
fisubrs
aaa
lds
inc
mov
lret
push
adc
lods
and
xor
pop
dec
or
fsts
daa
movsb
and
jecxz
shld
ret
into
bound
sub
popa
jne
mov
std
and
popf
bound
jmp
lret
pop
jp
mov
inc
pop
es
in
mov
ret
out
mov
jl
cli
ret
test
sbb
or
mov
cmp
sub
jp
push
icebp
sbb
ret
ja
sbb
xor
lods
pusha
push
or
and
sti
popa
shlb
in
daa
notl
xchg
sbb
loopne
xchg
jge
aaa
int3
int3
int
jp
out
dec
dec
sub
cmp
lods
std
lahf
adcb
inc
push
add
push
mov
aas
ret
adc
aaa
adc
and
xlat
loop
fmuls
sub
mov
inc
popa
pop
aam
iret
jnp
xchg
loopne
movsb
cmpsl
push
sbb
sbbb
mov
sub
repz
cmp
jle
push
xlat
sub
jg
es
mov
xorb
jno
shll
leave
cmp
cmp
mov
push
pop
scas
inc
xlat
sbb
push
addb
leave
or
adc
push
and
adc
ret
je
xchg
and
gs
mov
outsb
ret
insb
add
or
stos
ret
pop
or
xor
pop
loopne
mov
mov
out
or
mov
dec
out
iret
mov
jnp
ds
gs
les
add
fwait
fwait
and
stos
xchg
dec
je
sub
add
inc
jg
inc
ficoml
pop
ds
shlb
cmp
inc
sub
pop
subb
sbb
fcomip
sbb
dec
add
ja
in
jns
dec
pop
cmp
and
sub
test
cmc
loopne
loopne
pop
cmp
mov
shr
mov
insb
jl
dec
pop
insl
mov
mov
not
shlb
dec
jno,pn
xchg
mov
mov
xor
and
pop
in
sub
adc
jbe
dec
test
sbb
pop
mov
dec
cli
pop
sbb
loop
lea
pop
inc
xor
cli
xor
push
sub
pop
pop
xchg
out
out
xlat
push
push
pusha
dec
repz
xor
push
fcoms
mov
std
pop
jge
add
inc
xlat
loopne
jp
fdivl
pop
addr16
xchg
scas
in
movsl
imul
cmp
stos
ja
gs
cltd
iret
mov
rorl
jle
fldt
xchg
mov
mov
adc
or
ds
or
xchg
cmc
fninit
iret
repz
pop
adc
ljmp
pushf
rcrb
rcrb
cli
imul
pop
icebp
pop
mulb
push
outsb
aas
ret
xchg
push
xor
sub
mov
mov
xchg
out
rcll
das
jmp
pop
mov
cmp
push
jnp
mov
icebp
or
out
xchg
lret
dec
test
inc
mov
push
or
jae
hlt
adc
push
dec
sub
imul
ja
leave
fsubrl
or
push
xor
dec
or
das
mov
cmpsb
jmp
dec
rcll
test
xchg
sbbl
leave
popf
fst
adc
lret
mov
push
inc
int3
cmp
aam
fnsave
jne
sbb
and
xor
xchg
mov
addr16
mov
or
lret
ret
lock
fstpl
pop
outsb
and
fstpt
ficoml
outsb
or
test
mov
jae
add
dec
dec
cmp
push
aam
les
pop
in
fwait
aam
in
lds
xchg
pop
imul
enter
jl
push
ficompl
fisttpll
lods
negl
ss
and
insl
jne
out
sbb
adc
addl
clc
mov
xor
pop
fidivrs
daa
lahf
arpl
cmp
hlt
jp
sub
pop
pop
aaa
and
cmp
inc
inc
jne
xor
pop
or
fwait
push
int3
xchg
js
dec
add
fcomip
and
xchg
push
test
jae
mov
cld
out
inc
xchg
pusha
pop
orb
mov
mov
push
cmpsl
inc
lock
xchg
test
out
int3
pop
sub
sbb
fcmovbe
ss
and
insl
addr16
outsl
push
xchg
cmpsl
adc
jnp
loopne
jl
xor
push
jmp
cs
lea
pop
push
jecxz
jl
mulb
arpl
pop
adc
les
add
jl
sbb
arpl
add
cmp
push
cli
sub
lcall
mov
inc
in
lcall
pop
ret
fisubrs
jge
mov
add
xor
xchg
ja
pop
clc
in
movsb
jmp
xor
pusha
stos
sbb
sbb
pop
pop
pop
push
mov
ss
fwait
daa
mov
xor
mov
xchg
xor
push
js
add
repnz
or
mov
jle
mov
adc
stos
sbb
es
ss
cmc
iret
mov
shrb
das
leave
sbb
repnz
xlat
ss
pop
rcrl
loopne
ja
dec
sub
mov
stos
dec
aad
lea
pop
push
cmp
and
pop
cmpsl
xchg
loopne
and
stos
xchg
ja
and
shl
test
jp
fisttps
pop
lahf
sub
dec
pop
xor
lea
adc
mov
rcr
inc
and
xorl
popa
rorl
inc
add
dec
pop
xor
mov
hlt
gs
fcoml
push
xchg
aaa
sarl
lret
push
frstor
outsl
repnz
insl
mov
test
mov
fucomp
push
add
dec
sub
enter
xchg
mov
addr16
pop
mov
cmpl
test
aas
lods
push
push
sub
daa
loopne
rcrb
push
mov
lcall
cmpsl
mov
lea
mov
in
scas
mov
or
mov
movsl
jb
inc
fs
push
and
xor
add
dec
ds
xchg
sbb
jg
sbb
into
inc
and
xor
daa
push
imul
jns
sub
cmpl
leave
notb
imul
xchg
sub
sub
xor
hlt
outsl
pop
jmp
add
sarl
xchg
mov
or
in
aaa
pop
incl
push
test
mov
inc
loope
adc
gs
mov
fucom
cltd
lcall
ja
icebp
mov
ret
dec
fstps
add
data16
std
cli
dec
lock
pusha
sub
push
dec
stos
leave
adc
fs
pop
dec
iret
xor
push
adc
mov
test
icebp
xor
mov
js
pusha
dec
mov
mov
cltd
icebp
hlt
into
pop
jae
test
sbb
or
aam
pop
orl
outsb
add
jns
xchg
jle
mov
xchg
pop
jg
lock
daa
stc
push
les
adc
out
gs
pop
sub
xchg
adc
or
ljmp
adc
repnz
inc
lea
push
cmp
dec
loop
ficoms
sbb
sub
js
hlt
popa
lods
mov
js
sub
mov
xor
cmpsb
pop
mov
movsb
mov
pop
aad
push
inc
stos
and
inc
and
adc
or
xchg
fadds
push
popf
add
cmpsb
stos
adc
xchg
es
sbb
inc
leave
cmp
aaa
or
addl
rolb
push
rep
out
adc
xchg
icebp
ljmp
cmp
jae
adc
out
sub
mov
or
cli
ja
xchg
stos
in
bound
dec
in
inc
adc
adc
insl
fidivl
cmp
nop
xchg
dec
clc
xchg
out
fstpt
data16
pop
jo
mov
mov
or
dec
jb
pop
clc
js
cmp
mov
sarb
add
lds
mov
dec
fdivrs
test
inc
lret
gs
and
and
sub
notl
xchg
sub
mov
cs
cmp
bnd
cmp
adc
stos
pushl
das
mov
cmc
pop
sbb
dec
mov
adc
bts
xchg
and
das
ret
scas
in
aas
sbb
jbe
out
and
cmp
push
in
lcall
adc
inc
into
xor
add
hlt
fists
cmpsl
mov
inc
cwtl
mov
pop
xor
cmp
in
int3
mov
push
xchg
push
adc
popa
fcmovbe
sar
popa
call
cmp
in
imulb
das
cli
ds
xchg
xor
aaa
or
nop
pop
divl
mov
not
lret
ud2
ss
push
sarl
sbb
popf
fdivr
and
mov
into
insl
jb
stc
jl
jge
and
mov
dec
aaa
daa
cmovp
arpl
test
push
insl
outsb
lock
test
adc
je
pop
bound
lock
jmp
fld
pop
add
movsb
insb
andl
mov
mov
push
out
inc
inc
stos
cli
ja
cwtl
jmp
jl
inc
ss
in
dec
test
in
shll
or
add
push
idiv
pop
icebp
jle
add
xor
dec
jp
push
cmp
incl
push
push
into
pop
jmp
mov
mov
push
push
fcompl
xchg
inc
dec
lcall
cmp
icebp
stc
jne
and
rcr
xor
xor
add
cmp
push
push
mov
sbbb
push
xchg
xchg
add
imul
clc
mov
inc
inc
mov
fildll
rorb
mov
inc
or
scas
cmp
inc
push
roll
sbb
arpl
fs
imul
mov
inc
aas
push
mov
cs
imull
std
iret
je
and
cwtl
shll
ljmp
lcall
xchg
lea
into
or
stos
leave
or
cmp
mov
push
xchg
sub
pusha
mov
outsl
dec
push
daa
out
inc
mov
je
repz
jmp
lcall
clc
adc
or
ficoml
rolb
mov
sbb
sbb
stos
push
and
pop
mov
test
or
add
addb
adc
dec
fcmovb
mov
pop
rcr
cmc
pushf
add
aaa
std
addl
jmp
scas
mov
sti
jg
mov
dec
adc
xchg
xchg
adc
sbb
rol
pop
dec
je
jbe
mov
inc
xchg
dec
push
adc
mov
icebp
incb
jno
jp
std
lds
cmpsl
mov
popa
xchg
in
mov
in
pop
dec
sbb
jmp
fisttpll
dec
in
repnz
ror
out
sub
mov
sti
and
aad
push
lret
jne
das
cmp
add
dec
clc
jmp
lds
inc
add
mov
fmul
pop
std
stos
rcrl
mov
xor
into
mov
inc
mov
mov
sarb
push
cmp
cmp
xor
mov
mov
ja
pusha
nop
push
in
notl
mov
stos
ja
and
xchg
jnp
jl
jp
test
fdivs
lods
shr
ret
stos
pushf
ljmp
xchg
jmp
pusha
cmp
adc
nop
inc
outsb
and
outsb
adc
mov
pop
mov
pushf
push
cs
stc
inc
pushf
pop
xchg
in
lods
cs
inc
popf
push
aaa
push
shlb
into
sti
adc
out
xchg
scas
ds
cmp
xorl
out
or
push
sti
outsb
sub
jecxz
sub
sbb
pop
in
jno
pop
inc
repz
mov
call
or
pop
xchg
or
mov
fwait
movl
sub
imul
pop
test
sub
mov
lcall
or
loopne
mov
xchg
in
je
nop
or
cmp
push
jle
loope
adc
cltd
lods
rcr
addr16
jle
xchg
push
sub
popa
jae
xlat
daa
and
lods
js
cmpsb
test
dec
divl
xchg
mov
movsb
pop
fisttpll
bound
or
sbb
and
inc
adc
mov
xchg
push
dec
jo
mov
jne
push
push
sub
and
jno
je
mov
movsb
mov
in
ljmp
lahf
adc
fwait
cmpsl
stc
dec
mov
syscall
push
test
jl
add
push
add
popf
push
dec
mov
mov
lret
dec
xchg
std
insl
iret
sbb
scas
xchg
scas
dec
push
add
ret
jne
cltd
sbb
adc
rcrb
in
dec
adc
ja
enter
mov
les
inc
pop
xchg
ss
adc
xchg
movsb
insl
and
int
add
test
das
movsl
pop
cmc
or
pop
sbb
push
xchg
push
rol
xchg
fwait
cs
pushf
sbbl
add
and
lods
pop
xchg
je
cmpsb
dec
loope
or
mov
daa
xchg
scas
dec
cltd
inc
xor
cltd
mov
out
xchg
test
in
ss
adc
sbb
cs
loopne
dec
into
aaa
es
dec
stos
mov
adcb
inc
sub
sbb
int3
xlat
sbb
push
movsb
push
js
push
aaa
mov
aaa
nop
jge
jne
dec
mov
push
les
mov
rorb
ja
ljmp
xchg
mov
pop
and
xor
push
stos
loop
test
mov
xchg
xor
cmp
jmp
int
sbb
or
rcrb
jo
push
sbb
xor
and
adc
lea
adc
addb
adc
lret
int3
mov
jg
and
outsb
loopne
js
test
cltd
mov
mov
mov
pop
mov
fidivl
lahf
mov
mov
sahf
std
xchg
lret
shlb
in
insb
inc
push
mov
mov
adc
jne
jno
out
pushf
test
add
push
cmpsb
jnp
pop
mov
movsl
in
int3
jb
popf
arpl
sub
cwtl
jb
shl
dec
dec
inc
cmp
aas
pushl
xchg
xchg
mov
loopne
addl
sub
das
flds
scas
cmp
push
add
push
pop
push
adc
ljmp
and
fcomps
and
ss
ficompl
out
push
jl
dec
jle
lea
into
lds
mov
mov
inc
xchg
push
jge
jl
mov
stos
cli
mov
stos
in
mulb
test
inc
in
mov
xor
mov
ss
jb
push
jg
cmp
adc
gs
mov
lds
push
mov
xchg
dec
xchg
add
sbb
arpl
mov
sbb
xchg
fildl
jae
sbb
lret
dec
cmc
dec
inc
insb
and
jecxz
lret
push
hlt
scas
into
imul
ret
and
jl
inc
sub
mov
dec
fs
ljmp
into
dec
in
inc
push
outsb
clc
mov
xchg
scas
imul
fcomps
inc
ss
std
or
add
out
faddl
pop
sbb
into
ret
call
mov
pop
adc
jecxz
pop
es
cmc
adcl
inc
adc
imul
jmp
inc
ficoms
push
lods
bound
fmull
mov
out
mov
subb
scas
xchg
cmp
dec
adc
movsb
aaa
mov
popa
inc
push
mov
push
rcrl
sbb
xlat
in
mov
dec
and
cmp
pop
dec
cmpsl
mov
cmp
inc
ficoms
jp
shll
std
loopne
outsl
cmpl
imulb
or
outsl
cs
push
rclb
aam
cmp
lock
sub
sbb
cmpsl
xchg
cmp
push
pop
lret
stos
and
jo
lods
idivb
fwait
popa
aas
cmp
push
xchg
leave
shll
repnz
mov
mov
fisubrs
jae
out
inc
mov
call
mov
push
sbb
and
fadd
pop
cmp
inc
mov
mov
pop
jae
movsl
repz
andl
jb
notb
jmp
lahf
xchg
pusha
into
mov
inc
xor
stos
mov
xchg
lods
push
loopne
add
aaa
inc
lcall
mov
jb
pushf
stc
je
je
fucomi
subl
fists
xor
fcomip
lea
mov
lret
movsl
mov
and
int
push
and
pop
or
in
mov
loop
daa
mov
fisubs
aas
dec
ficoms
mov
add
fnstcw
sub
cmp
loop
lcall
outsl
push
ds
mov
pop
test
hlt
pop
cmp
data16
repnz
fbld
rorl
repnz
shll
pop
pop
jnp
dec
or
pusha
adc
sub
sub
rcrb
mov
mov
sub
add
inc
pushf
ficoml
jmp
adcl
jb
pop
mov
decl
pop
push
xchg
inc
and
adc
scas
loop
out
pop
xor
out
arpl
sbb
call
sbb
cmp
push
mov
pop
jne
push
ret
fsubr
data16
outsl
cli
sub
sub
jge
push
loope
mov
xorb
mov
daa
fsubrl
and
cli
jnp
scas
pop
jecxz
rcr
add
fldpi
push
inc
inc
cmp
xor
cmp
jae
in
leave
dec
push
arpl
push
mov
push
push
inc
mov
push
cmp
enter
stc
cmp
mov
push
ror
ficoms
or
or
ss
gs
sahf
or
jns
ja
cmp
rcl
pop
loopne
cmc
mov
stos
bound
xor
aad
xchg
xchg
push
jnp
or
cmc
mov
sub
jp
sbb
pop
xchg
mov
or
sbb
ljmp
xchg
sarb
fstpt
cmp
inc
cmp
outsb
imul
dec
push
je
xor
in
hlt
cmc
push
dec
es
cmp
shrl
nopl
adc
ja
dec
sub
out
xchg
outsl
int
cmpsl
in
andb
mov
in
sbb
lods
add
test
mov
mov
repz
mov
push
mov
mov
adc
push
or
add
into
jg
or
pusha
clc
mov
insb
push
mov
xchg
inc
cli
ljmp
mov
push
cld
xrelease
xor
in
mov
jnp
push
test
icebp
movsl
movsl
imul
push
push
and
jp
rcrl
lock
adc
pop
in
sub
xorb
mov
lock
js
lret
fs
nopl
aas
cmpl
lret
mov
push
mov
mov
mov
pop
xor
add
out
jg
das
pop
sub
cmpb
xchg
rcrb
ret
push
pop
stos
cmp
shl
mov
fimull
jecxz
jecxz
aaa
push
inc
jecxz
or
cmp
cmp
test
lds
inc
bound
cs
mov
lods
mov
add
xor
mov
outsb
call
lea
mov
sub
fwait
or
lea
add
push
mov
add
outsl
xchg
add
sti
out
clc
add
push
movsb
addr16
sub
ja
cmpb
inc
je
push
pop
fdivl
rcr
fs
dec
dec
adc
add
pop
repz
xor
dec
mov
out
movsb
or
xchg
imul
cmp
jp
mov
inc
repz
test
adc
jmp
mov
push
and
shrl
fisttpl
pop
int3
xlat
fwait
hlt
mov
inc
aam
sub
xor
push
sbb
push
add
cmp
jae
push
push
insb
ret
fucomip
jle
and
enter
out
cmp
push
ja
push
pop
loopne
mov
pop
cmp
jmp
clc
mov
jae
sahf
push
nop
cltd
scas
out
pop
in
mov
xor
fs
sub
psrld
sti
cmc
jbe
test
in
sbb
repnz
dec
aas
pop
and
mov
sub
inc
xchg
in
out
dec
gs
popf
call
xchg
sub
out
stc
sub
or
nop
mov
adc
inc
fs
cmp
jno
mov
xchg
imul
sbb
andb
ljmp
jns
aad
repz
inc
adc
push
pop
out
cmp
outsl
cmp
addr16
xlat
jl
sub
das
push
mov
sub
inc
data16
mov
jno
mov
jl
cmp
sub
xor
test
lret
stc
stos
inc
into
xor
inc
push
movsl
jg
cmpsb
je
mov
stos
enter
stc
movsb
cmp
xor
je
and
fstpt
cmpl
xor
pop
cmpb
cmp
addr16
xlat
js
mov
xchg
jb
ss
push
cmp
mov
rcrb
je
jmp
and
ja
dec
jno
hlt
and
clc
rorb
mov
fisttpl
enter
call
popf
cmp
and
dec
pop
adc
mov
fiaddl
pop
arpl
test
cmpsb
pop
or
push
outsl
mov
or
sbb
bound
push
fs
add
mov
out
add
mov
lahf
pop
sub
jno
or
es
imul
insb
jbe
fmulp
xchg
dec
fbstp
scas
mov
mov
mov
add
outsl
outsl
mov
loope
cmp
pushf
lods
out
inc
mov
hlt
add
cmp
orb
fisttpl
sub
xor
and
fbstp
aas
xchg
mov
xchg
lcall
inc
sub
fdivs
pop
mov
xchg
add
aad
iret
mov
imul
pop
mov
out
xchg
xchg
shll
imul
push
ror
sbb
dec
sub
inc
dec
dec
jle
rol
fwait
dec
les
scas
jbe
pop
int
adc
sbb
xlat
push
jge
insl
adc
nop
xor
cmpsb
arpl
mov
dec
or
iret
xchg
cmpsb
push
xchg
mov
adc
sub
into
bound
idiv
add
add
or
int3
inc
sarb
inc
addr16
jl
mov
stos
pop
hlt
xor
addr16
xchg
repz
xchg
dec
icebp
mov
xor
adc
fld
in
sahf
loope
mov
pop
insl
daa
jbe
mov
movsl
mov
pop
mov
dec
push
sbb
and
adcb
inc
scas
stc
xor
sbb
jb
scas
jno
jp
jne
mov
in
gs
jnp
ficomps
inc
jnp
xchg
push
stos
dec
and
out
or
cmpsb
jne
popa
enter
add
aaa
mov
in
mov
int
cmp
xor
xor
dec
cli
dec
mov
cmpl
push
pop
outsl
sub
mov
outsb
push
mov
push
imul
addr16
push
lret
xchg
add
jne
xchg
mov
add
mov
addr16
movsl
push
je
in
xchg
mov
js
ret
adc
mov
in
xchg
jns
popa
sbb
inc
fadds
addr16
rcrl
test
and
push
out
xchg
cld
in
data16
cltd
pop
fistpll
fstpl
sbb
jns
jecxz
jmp
in
rcrb
out
inc
pop
sahf
add
int
addr16
mov
sbb
xchg
xor
sub
sub
and
ret
shlb
cli
cmp
imul
call
std
bound
cmp
mov
pop
inc
jns
insb
cmp
lret
mov
sbbl
les
int
add
mov
lods
jecxz
div
cmc
aam
xchg
leave
stos
dec
cmp
cli
dec
lret
and
arpl
or
sbb
or
lahf
jno
test
in
sbb
into
jge
jge
cmpsb
cs
sbb
imul
mov
pusha
push
fstpl
dec
jle
lcall
push
out
or
cld
daa
inc
in
fsts
ds
fsubrp
adc
sbb
ficompl
add
xor
fcompl
outsl
sti
les
leave
mov
clc
sbb
fldcw
in
push
mov
pop
scas
add
push
mov
mov
cmp
push
sahf
and
xor
xchg
popf
es
and
inc
js
and
inc
cmpps
fnsave
mov
scas
xchg
mov
sbb
gs
out
int3
int3
sbb
ljmp
iret
fidivrs
enter
popf
xor
sub
mov
adc
jno
les
pushf
jmp
cmp
push
jno
lcall
inc
out
jecxz
lret
and
jnp
mov
sub
dec
rol
idivl
xor
mov
and
sbbl
test
sbb
out
and
ljmp
pop
sub
mull
leave
pushf
sub
fdivr
mov
mov
repz
out
pusha
mov
sub
je
adc
jnp
xchg
xorl
cmpsb
mov
pop
daa
and
in
out
call
pop
pusha
or
push
mov
movsl
pusha
mov
outsb
stos
sbb
add
pop
js
lahf
enter
ficoms
pop
test
out
mov
xchg
insl
xchg
or
or
fadds
lahf
sbb
stos
cwtd
subb
jg
sub
sub
insl
push
and
sub
dec
sti
pop
lcall
sbb
push
mov
movsb
mov
and
or
xchg
fmul
dec
pop
ja
cmpsl
cmp
cmp
data16
xchg
fistpll
mov
mov
ja
pop
or
push
cmpsl
data16
aam
je
das
call
test
outsb
icebp
ljmp
into
jno
jp
adc
inc
daa
xchg
les
sti
outsb
and
push
jg
pop
mov
pop
sbbl
les
or
rcl
xchg
push
push
jge
adc
cld
test
push
test
adc
aam
mov
mov
fisubrl
out
mov
xchg
movsb
sbb
dec
dec
adc
faddl
xchg
hlt
shll
push
sub
pop
add
lods
icebp
test
cmpsb
mov
cld
xchg
adc
and
adc
lret
movsl
cmpsl
push
fwait
inc
or
into
or
push
dec
mov
in
xchg
dec
fbstp
mov
out
sub
mov
ljmp
xchg
dec
les
push
int3
mov
cmp
sbb
test
adc
cmp
loop
jecxz
pop
movsl
stos
pop
out
movsl
jecxz
sub
mov
cld
mov
or
cmp
mov
mov
mov
mov
das
mov
push
stc
fs
leave
dec
push
stos
or
push
aad
shl
lock
out
lock
sbb
push
xchg
in
loopne
jne
cli
push
pusha
mov
xchg
xchg
push
xchg
clc
mov
imul
push
pop
mov
adc
mov
out
inc
adc
addb
and
push
sub
push
xor
sub
sub
bound
outsb
gs
outsb
incl
inc
popf
mov
andb
xchg
out
push
pop
push
sbb
sbb
add
cmp
xchg
cld
lods
mov
add
or
or
xchg
jne
adc
pushf
fists
loop
xor
jbe
adc
pop
iret
test
mov
fstl
test
in
jbe
mov
xchg
int3
push
arpl
inc
adc
test
xor
lock
push
add
xchg
loope
jno
sub
xlat
pop
pop
adc
dec
xchg
aad
imul
nop
lahf
nop
inc
or
mov
mov
xorl
repnz
insb
int3
sbb
jbe
and
arpl
in
jae
push
xchg
cwtl
mov
and
push
pop
incb
js
cmpb
in
pop
mov
lret
aam
data16
repnz
cmovg
shll
in
addl
sbb
jecxz,pt
cmp
and
repnz
ret
and
fnsave
repz
out
push
mov
push
outsb
sbb
jo
mov
adc
aas
popf
into
insl
xlat
add
popf
xchg
jnp
rcl
test
movsl
cs
push
mov
add
push
xlat
or
xchg
les
push
pop
xor
pop
outsl
add
or
out
into
adc
sar
jl
and
adc
jbe
pop
lahf
add
cmp
shlb
mov
call
mov
mov
mov
push
jl
sti
imul
adc
inc
cwtl
sub
pop
sahf
mov
es
daa
outsl
sub
push
dec
sub
pop
clc
lods
shr
fs
push
jecxz
out
mov
sbb
sub
adc
jae
test
aaa
loopne
bound
in
ja
add
push
loope
mov
cmp
push
fdivs
add
mov
jmp
popf
inc
fnsave
vmread
jo
xchg
mov
mov
imul
lahf
push
or
aad
mov
sbb
addr16
mov
xor
mov
dec
je
insl
ljmp
lods
pop
popf
aam
inc
add
mov
cmpsb
les
mov
leave
in
fadds
mov
clc
sbb
pop
rorb
inc
xchg
rolb
aad
loope
sub
add
mov
jge
sbb
adc
rorl
repz
mov
xor
ret
xchg
adc
xor
or
adc
nop
ret
out
rcr
xor
xchg
push
sbb
mov
or
mov
mov
cmp
test
stos
aas
xchg
inc
mov
loopne
jl
mov
out
add
sbb
addb
loop
dec
gs
push
int3
mov
push
in
cmpsl
xor
xchg
stos
in
jp
fistpll
add
cmpsb
repz
push
loop
je
cmp
or
out
sub
cld
adc
sbb
outsb
aaa
out
rclb
clc
adc
testb
das
cmp
push
outsl
rclb
mov
pop
imul
cmp
dec
lret
mov
xor
xchg
in
ret
lcall
xor
push
mov
mov
cmp
and
xchg
cmp
push
jns
js
pop
mov
imull
std
test
xchg
jno
js
jl
cwtl
fldenv
pusha
test
jae
pop
repnz
outsb
rcrl
repz
mov
add
pop
jp
sar
and
adc
je
add
addr16
enter
mov
imul
cmc
mov
jg
lock
mov
sub
into
test
std
gs
test
mov
aad
mov
movsb
adc
ret
jo
cli
cmp
mov
xor
popa
js
js
dec
lods
pop
mov
dec
aas
pop
je
sbb
dec
xchg
lret
es
sti
lock
adc
mov
or
sub
fistps
decl
ss
cmp
xchg
sub
ss
fbld
fsts
andl
dec
pop
sahf
loop
and
push
rcrb
add
cmp
pusha
cmc
pusha
daa
cld
jo
xchg
mov
xor
jno
jmp
notl
xchg
xchg
stc
imulb
je
xchg
data16
adc
mov
scas
es
cmp
jmp
cwtl
pop
jnp
loopne
cpuid
loope
xchg
ret
call
lea
scas
arpl
bound
xor
xor
fbstp
or
mov
test
dec
jno
jg
mov
aam
dec
mov
mov
into
sbb
dec
outsl
push
sbb
clc
xor
and
mov
sub
xor
je
xchg
ljmp
sbb
push
xchg
push
stos
pop
cld
sbb
test
sub
popa
add
and
hlt
push
dec
int
lods
adc
stos
push
in
mov
and
cmp
fnstenv
xor
in
add
in
xor
les
push
sbb
aad
addr16
gs
jle
mov
in
dec
int
mov
push
roll
out
cmp
or
dec
mov
sbb
popf
stc
mov
mov
repnz
insl
pop
in
lret
xor
ljmp
movsb
test
jbe
stos
push
mov
lock
or
lea
lock
out
rol
data16
push
xchg
mov
pushf
jecxz
mov
fmull
inc
shll
orl
repz
mov
fsub
xchg
or
mov
mov
scas
pop
adc
movsb
add
jecxz
fnstcw
push
cmp
inc
push
xchg
mov
mov
mov
divl
jae
lods
into
mov
push
shl
push
fs
not
sbb
xchg
mov
adc
mov
loopne
sub
inc
xor
mov
mov
aam
std
fldl
dec
or
out
xlat
nop
repz
sub
xor
insl
loop
cmpsl
push
call
sub
sub
inc
jnp
and
add
popl
lret
loop
repnz
test
das
les
xchg
seta
jp
rolb
fwait
lods
imulb
push
inc
cmp
enter
sbb
inc
inc
jno
les
push
sbb
jne
or
mov
push
cmp
fistps
jge
sbb
mov
imulb
mov
sahf
add
rcrb
mov
lea
popf
sahf
mov
dec
addl
xchg
mov
adc
lret
ja
pushl
or
leave
pop
push
cwtl
sub
mov
inc
and
jo,pn
push
nop
adc
in
xlat
jmp
xorl
loopne
push
fs
mov
mov
xor
adc
cmp
mov
and
sub
in
pop
lcall
insl
xchg
es
mov
mov
jmp
pushl
xchg
sub
sub
in
aam
shl
scas
push
pop
sbb
rcrl
sub
sub
ret
xor
and
mov
mov
stos
inc
out
hlt
mov
jecxz
jle
pushf
fnstcw
not
xchg
jnp
daa
dec
xor
jp
jecxz
push
xchg
sbb
mov
push
das
lahf
jge
dec
gs
push
loopne
mov
pop
mov
aam
fnstenv
adc
cmp
add
je
add
into
jo
lods
outsl
jg
xchg
into
mov
scas
fsts
mov
pop
mov
sub
es
jmp
cmpsb
cwtl
ljmp
mov
out
data16
cld
insl
movsl
sbb
lea
mov
addr16
in
aam
sub
mov
or
push
adc
cltd
cmp
xchg
pop
sbb
es
pop
inc
pop
jb
mov
pop
xor
shll
lahf
movsb
xor
ss
pop
mov
push
sti
mov
pop
popf
push
push
lret
imul
adc
es
mov
jmp
in
jecxz
testl
lods
xor
mov
lret
rcll
mov
in
and
insl
shlb
mov
ss
fsubrs
out
inc
jnp
xchg
pop
xchg
and
lcall
aam
dec
es
std
cli
jb
and
xchg
insb
ret
cmp
cmpsb
mov
sbb
jo
jl
inc
xor
mulb
lods
mov
jmp
fidivs
push
fcoms
sub
insb
pop
pop
xchg
scas
jg
popf
inc
iret
subl
cmpsb
js
cltd
mov
in
int
loopne
mov
dec
fcomi
sub
and
sub
mov
lret
popf
dec
sbb
pop
push
fwait
inc
xor
clc
pop
mov
adc
and
mov
ret
js
repz
push
in
mov
clc
mov
inc
sub
xlat
xor
pusha
jnp
fldcw
jnp
mov
mov
fwait
xor
sbb
int3
pop
mov
inc
xor
mov
or
lds
jge
sub
mov
jbe
ret
stos
iret
inc
and
jo
outsl
xlat
jnp
mov
sbb
mov
jl
mov
mov
pushf
pop
push
jmp
out
push
push
lods
pop
dec
orl
bswap
mull
aad
outsl
es
data16
int3
pusha
inc
add
or
pop
mov
jae
pop
adc
jo
xor
pop
xor
push
mov
cwtl
xchg
pushf
outsl
mov
lock
cmp
lahf
sbb
push
fsubrl
shl
xchg
pop
add
lds
popa
xchg
roll
push
stos
test
int3
cwtl
ljmp
es
cmpl
lea
xchg
sub
loope
mov
push
or
pop
rol
fstpl
inc
xor
jae
pop
jg
jg
cwtl
pop
pop
std
mov
nop
and
pop
aas
dec
push
repz
inc
xchg
and
cmp
jae
or
cmp
pop
cli
rol
pop
les
loopne
cmp
fucomip
mov
mov
push
pop
insb
leave
jg
xchg
fs
daa
lret
into
out
mov
out
xchg
out
mov
cmpl
jno
lock
push
push
or
push
add
jecxz
xchg
daa
or
aas
cld
pusha
arpl
rcl
xor
rorb
pop
pop
shrb
or
add
xor
jle
xchg
mov
mov
and
or
jg
lahf
frstor
xchg
mov
jg
out
pop
stos
add
sub
in
jp
in
outsb
imul
aad
pop
xor
insb
fsubr
ljmp
xor
or
add
cmpsb
fbld
xor
popa
lahf
xchg
xchg
mov
mov
pushf
xchg
insl
fwait
sub
adc
fiaddl
rcl
xchg
ss
pusha
pop
outsb
aas
repnz
out
sub
call
aad
mov
pop
lock
or
pop
cli
addr16
pop
and
pusha
int
jo
imul
xabort
xchg
dec
push
mov
sbb
filds
sub
jp
js
fcmovnu
outsb
loopne
mov
adc
aaa
xchg
fimuls
pop
adc
push
jne
mov
lods
in
add
dec
jo
pop
cmpsb
push
popf
mov
iret
adcb
mov
adc
or
jb
jp
lds
and
lods
jmp
mov
sbb
add
pop
jns
mov
dec
and
mov
sub
fisubrs
push
push
jo
jge
lods
mov
les
int
mov
and
adc
bound
pop
subb
mov
xor
lods
mov
test
inc
xor
mov
or
ret
test
cmp
insl
xor
cmp
dec
ljmp
xchg
jecxz
arpl
outsb
stos
cmp
mov
adc
insb
jae
shlb
dec
cmp
or
inc
and
push
mov
in
aad
sarl
adc
sbb
sub
lds
pusha
or
xchg
adc
dec
psadbw
ja
enter
in
jg
sub
xor
outsl
andb
int
mov
add
imul
fbstp
mov
cmpsb
mov
push
mull
mov
fstl
inc
fwait
out
adc
push
or
mov
add
icebp
inc
aam
addr16
repz
out
cltd
dec
addr16
aas
sarb
xor
loope
jle
pusha
add
xchg
and
fisttps
jp
test
lahf
lock
dec
and
shr
pop
mov
cli
dec
jo
in
leave
out
in
sti
mov
sbb
mov
inc
gs
mov
mov
in
xchg
arpl
cld
clc
xorl
notb
stos
mov
roll
mov
jo
push
sub
jmp
icebp
imul
and
inc
jnp
jbe
sti
add
or
jmp
or
jnp
sbbl
loopne
adc
mov
ss
pop
mov
and
popa
dec
xchg
xor
addl
fnstcw
jne
add
leave
pop
jp
jnp
xchg
jp
lods
scas
pusha
fistl
cmp
xchg
push
cld
jbe
ss
fldcw
pop
mov
jmp
inc
sub
adc
push
xor
mov
sbb
pop
sarb
cmp
aam
hlt
add
scas
jns
jp
ja
mov
repz
flds
cmp
jp
pop
std
mov
int3
aas
pushf
xchg
sbb
aaa
inc
inc
int
mov
insl
popa
ret
cmp
push
repnz
inc
add
sbb
xchg
xor
lock
jae
add
mov
inc
dec
sbb
dec
mov
sbb
jo
idivl
adc
cmp
std
arpl
fcmovnb
xor
stc
cmp
push
loopne
xchg
inc
xor
xor
pushl
add
xchg
mov
clc
subb
mov
sbb
add
ret
sbb
imul
js
stos
and
dec
stc
cmc
dec
inc
sub
pop
dec
adc
push
loope
lds
sbb
xor
push
jmp
stos
imul
cli
dec
testb
aas
fidivl
adc
inc
lret
mov
out
rorb
mov
cltd
in
and
in
stos
jmp
dec
xchg
push
add
fmull
push
pop
push
add
mov
int3
xor
test
cltd
ss
cmp
push
sub
nop
iret
ja
mov
fists
xchg
add
mov
xor
mov
or
pop
nop
dec
xor
adc
jp
fcom
adc
add
sub
and
push
or
and
loopne
pop
in
mov
repnz
mov
pushf
pushf
leave
insl
xor
out
lods
cmp
in
in
xlat
cmp
push
or
fiadds
pop
fidivrl
adc
in
jge
pop
cmp
loope
jno
cmp
pop
mov
cld
inc
mov
push
daa
xor
and
aad
xor
lods
jmp
jle
sbb
xchg
sub
mov
xlat
mov
sbb
jns
push
dec
pop
dec
cmpl
xchg
into
cltd
cld
dec
push
mov
in
mov
lods
out
jo
adc
or
pusha
xor
cmp
les
fmuls
push
test
fidivl
mov
cli
jns
add
loop
popf
addr16
insb
arpl
pop
add
aas
popa
lods
mulb
ljmp
inc
enter
hlt
push
and
mov
pusha
sbb
adc
outsl
cmp
pop
sarl
add
rcrb
js
rclb
imul
ja
mov
push
jnp
fadd
cmp
mov
ror
pop
sbb
sbbb
mov
in
addb
popa
rcl
insl
or
mov
or
xchg
dec
xchg
ficompl
sarl
jg
call
jg
sbb
mov
fs
mov
pop
add
mov
sbb
add
shrb
cmp
inc
jmp
mov
outsl
push
mov
test
in
jo
lret
cld
data16
test
push
jns
hlt
lret
sbb
sbb
addr16
jo
popf
mov
jmp
lods
sbb
push
dec
mov
out
rcr
sahf
lret
movb
aam
pop
lcall
mov
loopne
pop
jl
or
rcrl
jl
push
xchg
jo
addr16
fiadds
inc
mov
imul
sti
int3
sub
jne
jge
xor
jmp
in
mov
mov
dec
sbb
pushf
out
sbb
loop
jp
mov
jno
packssdw
pushf
lea
dec
cmpsl
leave
outsb
mov
xchg
xchg
in
add
adc
divl
jg
int
dec
add
mov
aam
add
imul
cmp
add
sub
into
xchg
outsb
psubb
adc
cmpl
pop
cmp
cmpsl
mov
adc
or
test
jge
aam
push
aas
ss
ret
out
cmp
mov
pop
idivl
sub
mov
or
imul
mov
fwait
jecxz
test
sbb
js,pt
sub
and
push
js
push
push
les
pop
pushf
aam
in
add
sub
push
pop
xlat
enter
movsl
test
dec
dec
in
inc
repz
test
adc
stos
sub
fistpl
stos
pop
jno
cmp
aaa
jne
or
xor
and
lods
imul
cmpsl
lock
or
into
ljmp
xchg
xchg
jae
cmpsl
mov
xchg
cmp
sarb
fisttps
xor
gs
int3
cmp
mov
sub
dec
repnz
in
ret
shll
mov
xor
pop
das
fadds
sub
xchg
add
insb
addb
jle
icebp
mov
ficomps
negl
add
fdivr
nop
hlt
daa
jb
add
push
push
pop
dec
lahf
inc
mov
mov
push
dec
cmp
and
fcomi
and
jo
push
adc
icebp
fs
pusha
sbbb
insl
mov
fucompp
sbb
arpl
scas
test
add
mov
cli
and
pop
pop
adc
rcrl
or
dec
jge
mov
repz
call
stc
jle
pop
mov
and
das
xlat
rclb
jnp
dec
sbb
pop
repz
inc
and
in
pop
int3
xchg
fsts
jmp
sahf
push
aas
shrb
ljmp
addr16
or
mov
loop
int
data16
or
out
xchg
inc
pop
push
aam
or
in
cmp
mov
cmp
dec
andl
aad
push
test
sbb
push
insb
push
lret
cmp
xchg
shll
sbb
mov
jle
sub
vmovaps
cmp
push
xor
mov
cld
movsl
dec
fsts
test
fisttpll
inc
out
rorl
jmp
mov
rcl
adc
test
test
adc
movsl
mov
mov
push
dec
in
inc
jnp
mov
imul
outsb
sub
mov
or
pop
sarb
jmp
mov
gs
and
sbb
push
xchg
fbld
mov
std
repz
outsb
repz
add
ret
cmp
out
dec
dec
div
shll
sub
pop
hlt
into
nop
adc
lcall
cltd
insl
gs
aaa
lahf
jl
sub
xchg
leave
lea
testb
insb
aas
arpl
int
mov
or
adc
pop
je
xor
jnp
jecxz
loope
jae
popa
cs
loopne
mov
cmp
iret
in
outsl
sub
mov
inc
ror
adc
xchg
pop
xor
add
sarb
and
js
and
aas
inc
adc
lds
pop
sbb
shrb
jle
aas
int3
lea
xlat
and
and
lret
jge
jmp
xchg
daa
mov
movb
rcr
stos
daa
test
sub
cmp
push
lret
add
loop
add
or
inc
lcall
pop
sarb
sti
push
mov
sbb
lret
inc
mov
adc
orb
aam
add
push
loop
lods
add
sbb
cld
jge
ljmp
sub
rcr
pushf
adc
les
jno
insb
cmp
mov
xchg
jno
mov
push
aad
stos
dec
xor
cmp
orl
cmp
int
and
jae
int3
sbb
xor
lods
or
or
and
dec
enter
sub
shrb
mov
push
shrl
mull
jae
add
jge
mov
call
mov
or
je
jns
dec
pop
xchg
out
push
adc
std
aam
imul
fidivs
repz
xlat
jo
push
ficoml
mov
cmpsl
xor
movsb
sbb
int3
push
sub
es
lock
icebp
lahf
sbb
inc
jecxz
xor
pop
test
lds
add
sbb
jecxz
lahf
in
and
xor
das
xor
jbe
xor
mov
sub
push
shrl
or
jo
rcrl
in
popf
idivb
push
cltd
sbb
jge
in
xor
cltd
and
mov
imul
mov
nop
js
xchg
or
pop
outsb
inc
mov
mov
cltd
scas
std
imul
loopne
push
inc
inc
inc
add
mov
xor
imul
rclb
or
add
and
mov
enter
xor
nop
and
and
push
imul
adc
popf
test
or
pop
push
lods
sbb
data16
xor
and
sbb
mov
jae
lock
repz
sbb
jne
test
cmp
dec
mov
shlb
sbb
mov
jb
xor
push
dec
push
lret
and
and
pushf
lods
mov
pop
mov
ja
data16
lahf
cmpsb
adc
call
cmp
jae
and
lock
pop
bound
je
cmp
cmp
test
pop
xor
stc
sub
xchg
lea
push
movsb
shl
pop
pop
mov
mov
xor
push
xor
test
dec
enter
es
or
mov
jb
hlt
jge
sub
popa
add
daa
sbb
test
sbb
jl
inc
inc
adc
pop
xor
loope
dec
fs
out
lcall
sub
andl
vmwrite
xor
pop
ja
jno
call
pop
and
jbe
and
scas
or
ret
in
cmp
dec
lea
sub
push
in
jae
jbe
cmp
mov
jnp
xor
daa
xor
pop
sbb
cmp
sarb
mov
mov
and
cmp
jns
int
jno
mov
cmp
arpl
mov
leave
mov
inc
lcall
mov
sti
test
dec
mov
add
adc
mov
mov
mov
mov
popf
inc
cmc
lds
sub
and
arpl
cmp
jl
and
andb
or
xchg
adc
sbb
sub
pop
stos
std
data16
cmp
out
into
imul
bound
push
add
popf
ror
xor
outsl
sub
push
adcb
ljmp
or
repz
outsl
mov
ds
ds
aad
adc
mov
mov
jmp
push
xchg
mov
sbb
jo
mov
add
out
push
incb
xor
not
jnp
mov
pop
movsl
addl
xorl
scas
push
imul
sub
mov
shlb
aas
rol
sub
popa
sbb
lods
rolb
sbb
sbbb
mov
pop
prefetchnta
fnsave
mov
sbb
mov
sub
mov
jmp
lcall
xor
inc
fldl
sub
pop
sahf
cmc
pop
sbb
stos
adc
inc
jne
fisttpl
cli
in
mov
inc
gs
call
or
outsl
adc
jecxz
xor
xchg
and
in
data16
pop
add
mov
sub
andb
loop
mov
push
testb
test
xor
cs
rorb
fisttps
add
push
das
aaa
jno
ret
or
lret
dec
mov
orb
push
cmp
mov
pop
outsl
xor
mov
cmp
bnd
in
and
adc
test
rclb
push
pushf
lea
std
std
cmpb
test
cmp
adc
cltd
xchg
fsubrl
xor
fisttpll
and
jle
icebp
into
jae
out
in
shr
cmc
push
int
push
push
imulb
push
and
xlat
sbb
pusha
inc
cmp
xchg
mov
sar
or
lret
das
push
and
dec
mov
in
jnp
or
lock
stos
call
js
xor
inc
inc
aam
dec
cmpsb
cmpsl
mov
fistpl
add
xchg
mov
push
jg
int3
arpl
inc
pop
adc
and
insb
xor
inc
fistl
xor
cmpsb
mov
or
xchg
cmpb
mov
insb
inc
pop
push
dec
loopne
xor
out
fsubrl
shr
mov
lret
lret
push
or
push
inc
lea
cmc
aas
mov
sti
leave
aas
fimuls
lock
cmp
pushf
pop
sbb
inc
or
push
pop
mov
and
out
int3
in
cmp
lret
xor
cmp
scas
mov
xchg
jne
fdivrl
lret
add
popf
mov
inc
or
or
push
mov
sub
jbe
fsubrs
test
movl
jg
xchg
sbb
inc
lret
shlb
nop
push
adc
xor
cmp
ss
dec
pop
mov
pop
enter
jns,pt
xchg
sbb
and
cmp
mov
frstor
or
pop
nop
es
and
xor
fidivs
adc
sbb
daa
dec
pop
fxch
repz
and
push
dec
int3
push
mov
fwait
dec
dec
outsb
imul
or
lods
out
mov
ljmp
insl
push
inc
ret
insl
test
imul
arpl
lds
jns
data16
dec
shll
test
outsl
jae
jo
cmp
popf
scas
loop
mov
push
and
leave
bound
inc
lods
lret
iret
jp
mov
lea
lahf
adc
xor
push
ss
adc
out
mov
pop
imul
pop
and
mov
xchg
test
ficompl
inc
add
cmpb
loope
xchg
aad
test
test
mov
out
adc
sbb
lret
jle
sub
add
xchg
je
out
std
sti
movl
mov
push
cmpsl
cwtl
filds
pop
in
repnz
sub
std
sbb
push
push
and
dec
jp
push
mov
pop
dec
inc
xor
sbb
mov
add
clc
daa
into
jbe
arpl
lret
iret
ret
test
add
fisttps
push
sbb
sbb
rcll
fisubl
adc
or
lock
or
loopne
add
shlb
fidivs
sub
inc
enter
les
in
jb
int3
xchg
lea
int3
mov
xchg
push
movsb
andb
or
int3
xchg
xchg
jle
popa
xchg
fs
sbb
push
xor
test
push
es
addr16
xorb
mov
dec
shl
jp,pt
stos
fstpl
push
sbb
adc
sbb
sub
movsl
push
or
mov
shlb
incl
lea
lds
imul
clc
sbb
push
scas
das
lock
mov
cli
mov
pop
sbb
loope
es
addr16
mov
jmp
sbb
inc
insl
pmaxub
sub
mov
je
jns
push
mov
mov
fdivp
popa
or
xchg
jle
and
pusha
mov
fdivs
inc
add
sub
push
out
mov
push
out
jae
push
or
sbb
mov
fdivp
cwtl
add
call
test
dec
out
xor
jl
dec
push
adc
andl
adc
jno
ds
lods
mov
cwtl
daa
mov
repnz
mov
icebp
adc
sti
dec
or
test
arpl
sub
lds
ljmp
loopne
xchg
lea
inc
pop
ljmp
jge
arpl
sub
scas
aam
sub
jne
push
inc
xchg
dec
fdivs
clc
stos
call
movl
xor
adc
scas
or
cltd
stc
hlt
ljmp
sbbl
sti
dec
int3
fistpl
pop
loopne
das
outsb
mov
ud0
repz
or
dec
fxch
mov
adc
imul
fstl
dec
mov
outsl
fnsave
cmp
mov
dec
in
cmp
pop
fsubl
push
cltd
jecxz
mov
daa
insl
add
add
std
dec
cli
lock
mov
outsl
in
fwait
and
mov
push
sbb
sub
fildll
in
push
fimull
cli
sub
dec
insl
cmp
add
xchg
je
dec
cmp
lds
mov
pop
shlb
lahf
dec
cmp
mov
push
cmp
leave
shrl
jg
stos
mov
ror
and
out
add
sbb
dec
mov
adc
pop
inc
xor
push
loope
insb
xchg
les
jp
les
pushf
outsl
push
and
and
pop
fcmovbe
or
lret
int3
sub
jb
add
xchg
mov
push
push
jb
adc
mov
inc
fwait
cwtl
jl
addr16
lret
call
push
adc
rolb
lods
pop
fistps
jp
adc
hlt
aam
add
mov
das
adc
or
dec
rclb
ja
ds
into
jae
aaa
dec
dec
mov
rol
mul
adc
sub
or
jns
fisubrs
mov
and
int3
add
jecxz
rorl
test
dec
push
fimull
add
sbb
xchg
and
jge
push
cmp
in
push
dec
cmp
out
fisubrs
imul
movsb
adc
inc
fdivl
sbb
cmp
les
mull
mov
test
int
xor
push
xchg
lods
bound
int
jns
bnd
cltd
lds
adc
lock
sarl
fwait
je
mov
and
dec
data16
xchg
fistps
daa
lea
xor
ja
dec
fcoml
or
int3
lods
add
mov
andb
ds
inc
xor
imul
jmp
cmpsb
fldt
aas
adc
int
repnz
sti
mov
inc
pop
mov
inc
push
pop
rolb
mov
lock
mov
mov
push
mov
ret
roll
adcl
stos
cmc
jg
push
iret
or
jge
xchg
mov
push
pop
push
xor
das
mov
fmulp
ds
repz
outsb
call
je
or
rcrb
jecxz
sahf
or
inc
test
test
insb
arpl
out
popa
ret
dec
jns
adcb
addr16
xor
andl
das
sub
std
adc
mov
push
add
add
js
push
ljmp
adc
inc
gs
jge
or
neg
imul
add
cli
ret
iret
and
inc
pop
loope
out
sub
push
leave
xor
fsubs
pusha
dec
lahf
sub
stos
test
cmpsb
movsl
inc
or
mov
in
aas
les
cmpsb
inc
loopne
lea
mov
nop
dec
and
dec
mov
test
mov
sub
push
jge
add
and
enter
cmp
or
aaa
ljmp
xor
inc
ja
cmc
push
jmp
stos
shrl
loopne
pop
pop
dec
mov
push
movsl
out
mov
mov
jge
lock
std
and
inc
cmpsl
mov
arpl
hlt
bound
aad
aaa
xchg
mov
stos
cltd
mov
mov
mov
es
addb
scas
pushf
xor
adc
mov
or
jne
in
cmp
test
and
mov
push
popw
adc
dec
mov
lods
js
mov
rol
iret
mov
std
jl
sub
push
in
repnz
xchg
push
jge
pop
into
inc
push
mov
mov
sub
bound
xchg
movsl
jmp
in
in
popf
mov
cmp
iret
mov
sbb
sahf
loope
les
imul
push
test
sbb
gs
pop
rcr
jge,pn
je
adc
mov
aam
and
les
sbb
cmc
imul
test
mov
ja
push
daa
ret
dec
repz
add
mov
aam
in
out
pop
push
les
leave
pop
sub
in
fstps
and
sbb
pop
fistpl
lret
dec
call
sbb
outsb
sub
mov
outsb
movsb
popl
stc
mov
call
xorb
or
psrld
push
sub
sbb
sub
xchg
cmp
outsb
fwait
mov
dec
popa
aaa
mov
push
sub
ret
push
fdivs
rcrl
inc
hlt
pop
nop
add
shl
int
inc
mov
mov
addr16
dec
or
inc
call
pop
iret
mov
or
mov
inc
adc
mov
cmp
mov
xchg
mov
test
pop
sbb
jg
adc
pop
adc
fbld
andb
js
mov
jp
sub
mov
cmp
jnp
jmp
arpl
mov
popf
dec
mov
bound
imul
testb
mov
imul
repz
mov
mov
adc
jbe
mov
sub
fnstcw
daa
push
push
mov
add
das
leave
inc
add
and
or
xchg
cli
and
jecxz
xchg
xchg
std
push
jecxz
jge
pusha
adc
aam
mov
mov
xor
sub
push
jbe
pop
js
loope
loope
aas
mov
and
call
push
sbb
dec
mov
adc
xchg
aad
cltd
push
sub
shlb
lret
fnclex
and
mov
mov
jg
insl
cmp
dec
xchg
or
xor
arpl
movsb
xchg
xor
jmp
inc
cmp
xor
cmp
sbb
xchg
scas
mov
dec
push
cld
daa
add
push
ss
fsubrl
fisttpll
and
push
jns
filds
cld
xchg
movsl
push
mov
inc
push
out
lds
or
sbb
mov
jne
sbb
dec
test
fcom
bound
aas
jg
pop
mov
mov
cwtl
sub
ljmp
sbb
data16
leave
cmp
inc
cltd
xor
shlb
stc
clc
lahf
sub
xchg
mov
mov
rorl
cs
out
jle
mov
mov
xchg
cmp
pop
or
inc
xchg
int3
xor
ret
dec
push
jp
jbe
sbb
std
jle
push
std
mov
jae
pusha
sbb
dec
std
push
and
lret
lea
inc
push
xchg
aas
fbstp
dec
mov
mov
jae
xchg
cmp
adc
fists
mov
sarb
les
inc
fisubs
lods
and
mov
xor
lds
je
fcomi
jg
add
xor
js
pushf
popf
pop
pop
jnp
or
movl
mov
xor
lcall
mov
push
lods
dec
xchg
mov
es
or
cmpsl
mov
mov
sbb
cmp
cmpsb
or
dec
mov
aas
loopne
addr16
into
mov
mov
mov
jno
cmc
mov
xchg
push
aaa
mov
inc
fisttps
out
ds
fadd
xor
push
xchg
pushf
dec
sbb
int3
scas
js
in
xchg
jns
dec
addb
inc
cli
test
xor
in
mov
iret
xor
mov
sub
gs
stos
or
sub
fistpl
inc
mov
xchg
adc
mov
mov
sbb
out
adc
popa
clc
mov
push
mov
sahf
push
daa
cmpsb
iret
cmpsb
sbb
adc
mov
popa
loop
dec
mov
rolb
xchg
cli
inc
pop
or
push
sub
sub
adcb
jmp
xchg
dec
jle
inc
loope
pop
or
cmp
xorl
test
pop
loop
dec
jle
push
outsb
movsl
mov
jge
xchg
cli
or
into
sub
loop
adc
mov
mov
mov
sahf
xor
aam
mov
outsl
jmp
ret
push
jp
add
sub
addb
popf
xchg
mov
ds
fbld
fcmovbe
jge
sbb
push
add
mov
push
fistpl
call
jo
sub
imulb
sbb
out
pop
push
sahf
dec
fisubrl
pushf
sub
push
cli
xchg
fadd
xchg
xchg
sbb
sub
mov
shlb
imul
dec
aam
cmp
imul
inc
add
jbe
in
ret
out
fidivrl
mov
adc
aam
jb
out
xchg
es
mov
ret
in
add
or
xchg
mov
scas
jne
pop
xor
and
xor
push
xchg
movsb
mov
outsb
dec
sbb
rcl
scas
xchg
outsl
sub
mov
ja
pusha
mov
xchg
aad
ja
push
adc
cs
xchg
dec
xchg
dec
in
mov
jmp
in
xchg
and
out
adc
mov
fldenv
aas
mov
jo
push
and
iret
pop
mov
sbb
pop
xlat
pop
icebp
lcall
sub
inc
xor
jmp
out
dec
cmp
cld
dec
sub
push
mov
inc
sbb
hlt
add
fbstp
adc
fwait
jecxz
data16
pop
push
insb
stos
mov
xor
inc
fiaddl
shll
mov
inc
jl
aad
xchg
movsb
mov
pop
imul
test
sub
in
test
add
xor
stos
xchg
pop
pushf
out
mov
stos
nop
fmul
and
jne
xor
cmp
popa
dec
movsb
jge
add
push
rolb
paddq
mov
mov
dec
shlb
lret
add
dec
xchg
sbb
movsl
dec
sub
and
out
jns
mov
adc
addb
lret
mov
cmp
lret
sub
arpl
mov
push
mov
push
push
push
xchg
in
xchg
lds
push
insb
jge
mov
and
pop
inc
insl
call
add
add
xchg
and
mov
adc
mov
sbb
pusha
cmpsl
xor
cmp
adc
aad
mov
cmc
ror
mov
xchg
inc
push
mov
or
push
adc
out
adc
ja
or
cmp
push
mov
or
pop
mov
cmpsl
std
movsl
mov
pop
loop
inc
adc
pop
cs
pushf
mov
scas
pop
add
cmp
data16
and
sub
pop
push
imul
inc
sti
or
push
push
fistl
lods
sub
shl
out
dec
sbb
sbbb
addb
sahf
rcr
test
inc
adc
fcompl
hlt
dec
test
sbb
xchg
mov
fs
cmpsl
or
dec
dec
xchg
sub
sub
adc
ret
inc
adc
add
pop
inc
add
cmp
or
inc
push
fsubrl
filds
cmovb
ss
arpl
lret
or
push
jecxz
sti
inc
and
shll
jno
or
sub
testb
mov
sub
out
movsb
and
add
ret
dec
in
jbe
mov
xor
mov
push
push
jle
faddl
or
mov
cmc
outsl
sbb
or
jecxz
pop
je
rolb
push
ret
cmc
insb
gs
cmpsl
push
shl
ret
add
push
loopne
xchg
xchg
sbb
hlt
negb
out
int3
popf
sub
mov
mov
lcall
inc
mov
push
out
or
xchg
jne
xor
add
cli
loopne
mov
pop
mov
fcoml
outsb
sub
mov
call
add
add
xchg
and
jno
repnz
imul
jmp
inc
scas
aad
popf
mov
mov
rorb
paddusw
pop
sub
fs
stc
inc
arpl
cwtl
frstor
idivb
inc
mov
or
test
sbb
mov
in
bound
loope
movsb
lods
add
xchg
ret
in
cli
sub
fildl
in
xor
negl
aas
mov
add
cli
in
mov
cld
ljmp
mov
pop
cmp
lret
mov
jg
scas
push
or
mov
add
pop
ljmp
lds
ja
pop
xchg
das
lods
out
and
call
jnp
inc
or
mov
adc
cmp
fwait
int
cld
mull
imul
rcrb
insb
das
adc
pop
xchg
push
pushf
mov
pop
adc
sahf
lods
xchg
inc
in
inc
subb
inc
mov
cmp
dec
mov
xchg
outsl
xchg
ret
jno
out
sbb
test
adc
sub
scas
add
outsl
test
inc
or
pop
in
dec
test
lret
jno
inc
in
mov
sbb
lods
xchg
xor
movsl
adc
xor
pop
aaa
dec
add
lods
xor
push
adc
ret
shrl
inc
ss
add
xor
dec
mov
adc
jle
add
jns
add
and
fbld
and
sarb
mov
les
rorl
mov
xor
jae
adc
dec
xchg
insl
push
sub
sti
xchg
mov
push
xchg
dec
repz
sub
in
or
pusha
lahf
add
movsl
add
lret
lea
loope
jle
inc
xchg
rcrb
jmp
rorb
jb
into
arpl
and
mov
pushf
test
xor
imul
xchg
bound
ret
xor
adc
cmp
lods
iret
lahf
xchg
or
out
shll
ret
ret
and
movsb
xor
ret
lcall
dec
out
loopne
rolb
add
jmp
outsb
loopne
stc
fwait
cmp
xchg
dec
mov
pop
inc
lcall
mov
and
add
sub
add
in
mov
popf
rorl
push
push
xchg
stos
jns
sarb
and
dec
mov
imul
fcoml
dec
inc
fwait
sub
test
push
stc
filds
js
and
dec
scas
pop
repz
dec
cwtl
out
xchg
sbb
nop
arpl
inc
pop
stos
fwait
arpl
jnp
pop
cwtl
ret
sub
push
sbb
int
mov
cmp
jnp
les
or
nop
xchg
cmp
lcall
icebp
mov
adc
and
xor
jl
bound
add
and
adc
fs
push
adc
cmp
cmpsb
pop
push
jl
fistps
jmp
cmc
lcall
jbe
repnz
xchg
movsl
dec
in
pop
adc
xor
lds
mov
sbb
sub
inc
mov
fistpl
cwtl
clc
fidivrl
loope
or
push
sub
dec
pop
add
push
lock
mov
jmp
sub
pushl
xchg
inc
sub
fcmovnb
or
add
call
out
jl
insb
dec
jge
mov
jns
nop
add
rcll
mov
test
addr16
ret
les
fimull
shr
xor
xchg
jbe
add
pushf
xor
dec
xchg
leave
adc
lret
mov
stos
mov
mov
inc
mov
test
negl
lods
lods
cmp
inc
cmpb
push
push
pop
sub
push
add
fwait
outsb
jns
jae
outsb
sbb
in
jnp
ljmp
hlt
xchg
test
fdivs
jb
mov
cmp
jl
sub
cmc
testb
xchg
adc
mov
pop
sbb
xor
xchg
mov
and
pop
out
in
push
push
cltd
enter
clc
xchg
jl
bound
pop
stos
scas
sbb
inc
mov
sbbl
jb
jmp
in
and
xchg
test
dec
ret
pop
add
and
inc
mov
inc
sti
cmp
sbb
mov
add
lret
fildl
stc
ficoms
mov
pop
add
inc
js
fnstcw
cltd
in
pop
sbb
dec
sbbl
ret
out
cmp
repnz
enter
pop
out
fistpll
pop
repz
icebp
push
orb
push
loopne
push
mov
xor
lods
mov
mov
pop
scas
sub
rep
push
sbb
ret
movsb
orb
push
es
jecxz
stc
popf
jl
scas
les
stos
movsl
or
jbe
pop
mov
inc
daa
dec
xchg
pop
out
fcmovb
and
inc
ficoml
push
fbstp
xor
jge
cld
leave
data16
inc
mov
xor
nop
repz
inc
mov
jecxz
insb
cs
pusha
jmp
jge
mov
dec
cwtl
cld
add
orl
cmp
clc
popa
dec
imulb
pop
bound
jmp
adc
xor
pop
leave
ret
iret
hlt
sbb
or
js
jecxz
xchg
ds
enter
je
xor
add
xlat
pop
jns
pop
stos
pop
flds
lcall
sub
lret
xchg
push
arpl
cmp
sbb
lret
ret
cs
int3
xor
pop
cs
out
fwait
jbe
mov
orl
inc
lds
dec
inc
or
mov
xchg
loop
and
sbb
or
pop
jmp
test
pop
es
xchg
sarb
orl
sub
mov
dec
sbb
xor
xchg
push
xchg
repnz
out
mov
jb
andl
lds
fcomps
insb
fistpl
call
into
jp
pusha
outsb
cltd
mov
push
int
adc
push
sbb
and
and
cmp
push
or
stos
adc
lea
mov
lahf
shll
vmread
sub
jno
incb
fs
xor
sub
inc
subb
jg
mov
cmp
mov
sbb
sub
adc
jg
cli
aam
mov
ds
jbe
xor
mov
lahf
fldcw
mov
inc
les
inc
push
lods
or
test
cmp
add
ret
push
mov
xor
out
fbstp
inc
xchg
cmp
sbb
pop
or
pop
stc
je
jnp
mov
ljmp
mov
add
jno
addb
test
inc
mov
pop
pop
push
inc
mov
popf
inc
mov
lea
pop
adc
mov
data16
jp
fwait
mov
sbb
sub
jns
call
shl
out
iret
push
aaa
push
outsb
mov
xor
pop
pop
fidivrs
data16
pushf
fdivrs
repnz
mov
jp
in
mov
sti
pop
ret
inc
cld
out
cli
shll
push
negb
lock
ret
xchg
add
pushf
pop
jns
sbb
or
and
and
arpl
int3
xchg
inc
cmp
es
and
in
ret
or
adc
pop
jne
xchg
scas
cmp
sbb
add
in
in
adc
mov
inc
xor
test
ja
lcall
mov
shl
cmpsl
mov
pushf
clc
sub
insb
xchg
popf
mov
mov
ret
cmp
outsb
arpl
cmp
cmc
filds
inc
imul
addl
xchg
sbb
es
addr16
inc
loope
mov
xor
cld
les
adc
adc
and
fiadds
xor
mov
addr16
and
out
in
xchg
arpl
push
shrb
mov
mov
scas
test
add
cmp
dec
lahf
or
bound
bound
jo
int3
ret
xchg
test
mov
scas
xor
xchg
push
orl
sbb
pop
daa
lea
ds
push
sti
pop
je
addr16
iret
scas
outsb
iret
outsb
dec
or
xchg
sbb
sbb
shlb
fdivs
dec
outsl
add
adcl
notl
faddl
rorl
in
inc
or
andl
jnp
add
gs
ljmp
scas
and
fidivl
cs
sbb
out
sub
rcll
or
mov
adc
shl
sbb
push
orb
pop
addr16
cmp
cmp
in
inc
mov
inc
cmpsb
mov
dec
fcompl
faddl
add
outsl
lret
xor
pop
shlb
cs
in
sub
jl
fs
fadds
dec
into
sbb
inc
stos
lods
imul
mov
das
imul
sbbb
out
pushw
xor
xchg
dec
xlat
push
mov
in
loopne
into
and
gs
dec
mov
int
mov
xor
mov
push
mov
inc
mov
jle
mov
jl
loope
fisubs
scas
aas
dec
cltd
inc
mov
addr16
or
outsl
or
test
insb
inc
aas
sbb
jle
dec
push
inc
fcomip
inc
ret
mov
mov
mov
mov
lcall
test
aad
pop
cmp
inc
int3
inc
push
dec
jmp
roll
rolb
and
fsts
pushf
and
das
stc
out
in
test
cmp
sbb
xchg
push
mov
push
daa
stc
sub
adc
lret
movb
addr16
aad
mov
mov
mov
test
fdivs
adcb
sbb
jge
testb
out
jbe
cltd
xchg
es
push
mov
cld
or
lock
xchg
jae
out
cmp
and
shr
fcomp
out
or
pop
xor
xchg
sti
add
push
addr16
iret
dec
pop
jmp
adc
xchg
popa
adc
test
sbb
push
inc
inc
jns
dec
test
dec
shlb
lret
inc
addb
shl
inc
fidivrl
jae
fmuls
out
stos
dec
push
mov
aas
mov
es
in
mov
mov
adc
insb
fldl
imul
adc
repnz
pop
mov
test
je
mov
or
loop
jle
xor
lods
aad
and
sub
pop
sbb
jmp
push
mov
inc
pushf
insb
push
pop
adc
jmp
stos
ds
ret
and
inc
dec
mov
int3
stc
mov
dec
add
mov
cs
mov
repnz
lock
sub
push
or
pop
in
jb
popa
movsb
std
in
xor
bound
mov
fnstsw
mov
pop
popa
dec
es
or
ds
pop
jae
outsb
add
call
add
push
imul
mov
cwtl
cmp
shll
ljmp
xchg
lahf
insb
aas
push
push
out
push
and
sub
jle
adcb
popf
dec
jno
icebp
mov
pop
mov
or
mov
mov
jbe
pop
xchg
shlb
cmp
stos
xchg
sbb
les
adc
in
decl
pop
sub
xchg
fwait
in
cmpsl
pop
cwtl
jg
lea
in
jae
sub
cmp
shrb
dec
js
insb
cmp
jo
repz
outsb
lar
inc
pop
outsl
lcall
pop
dec
sarl
add
iret
shrl
jmp
adc
outsl
jne
sbb
sbb
movsl
jb
in
inc
repnz
fistl
sub
outsl
imul
mov
mov
mov
clc
sub
dec
loope
pop
lret
arpl
aaa
lret
enter
or
mov
insb
and
add
sub
push
jmp
inc
dec
mov
mov
mov
in
rol
mov
sub
adc
add
dec
sub
xchg
adc
adc
mov
push
enter
pop
inc
dec
mov
xchg
push
aam
mov
arpl
sbb
dec
xchg
sarl
mov
pop
jle
jne
gs
sbb
enter
call
rol
mov
je
shll
inc
daa
sub
lds
aam
nop
xor
cmp
sub
inc
sub
stos
mov
sub
xlat
fsubrl
mov
mov
mov
or
arpl
jmp
ss
push
dec
scas
sub
mov
andl
aas
push
pop
mov
popf
cmp
aas
ljmp
shl
cmp
ds
lahf
xor
cmp
dec
repz
ss
aaa
aad
into
das
in
adc
mov
out
xchg
mov
cmpl
inc
test
adc
or
repnz
pusha
and
pop
sti
in
rcrl
jl,pn
push
mov
or
inc
mov
ficomps
js
rcl
jo
aas
js
popa
mov
and
cmpsl
inc
dec
rep
inc
incl
cmc
xchg
mov
imul
ror
out
cmpsl
inc
scas
pusha
prefetch
xor
in
jg
icebp
fyl2x
mov
orb
ret
mov
cmp
adc
shr
sub
and
xchg
and
imulb
and
shlb
or
or
mov
leave
xchg
scas
icebp
push
or
into
in
out
xlat
int3
inc
cmp
pop
dec
jl
popf
push
mov
loopne
sbb
movb
lea
inc
sub
shl
mov
push
shufps
in
cwtl
jle
jp
inc
andb
stc
mov
mov
ficoms
stos
xlat
mov
dec
in
adc
sbb
pop
cld
inc
sub
xlat
cld
test
sbb
test
add
pop
or
push
aad
out
scas
popa
mov
mov
pop
pop
xor
dec
pop
in
add
push
push
push
arpl
sbb
cwtd
adc
and
xchg
ja
bound
mov
dec
xchg
rcll
fsubrl
dec
leave
mov
or
imul
loopne
outsb
xchg
fsubr
add
jp
xchg
adc
pop
cmpsl
sub
movsb
dec
xchg
clc
rclb
decl
sahf
fcoms
int3
and
or
push
pop
mov
push
hlt
movntq
jg
notl
ljmp
xchg
adc
cli
ljmp
mov
lahf
icebp
mov
test
cmpsl
ljmp
test
inc
in
enter
jecxz
mov
dec
mov
pop
aaa
xchg
sub
pop
mov
adc
icebp
push
stos
loopne
aad
cs
dec
fisttps
pop
sub
aaa
jo
out
pop
cld
into
dec
outsb
unpckhps
stc
mov
sub
imul
or
in
iret
in
mov
pop
jb
fnsave
pop
test
mov
test
shrl
push
fwait
lret
sub
nop
jne
mov
test
in
loop
jp
mov
ds
xchg
xor
xor
add
push
clc
jmp
xchg
mov
rcll
scas
pusha
push
pop
test
lcall
xchg
adc
ljmp
mov
bound
sub
or
cmp
addr16
je
push
mov
test
addr16
mov
es
stos
sbb
jecxz
jbe
add
xchg
ds
ss
addr16
or
dec
insb
lock
sub
arpl
addr16
mov
xor
dec
mov
js
push
and
dec
mov
lret
pop
push
ds
loop
icebp
inc
add
pop
sar
fidivrl
push
addr16
das
jb
call
scas
inc
and
popaw
out
lock
ja
imul
inc
lahf
pop
push
call
cmc
jne
mov
push
xchg
jno
test
push
dec
and
sar
sub
mov
negl
xchg
add
dec
data16
rol
movsl
subl
enter
pop
push
inc
dec
push
jp
pop
dec
andl
inc
mov
jbe
push
nop
pop
cmp
jle
sahf
mov
mov
std
nop
jp
arpl
lock
add
iret
pop
cmp
cmc
dec
aad
hlt
add
nop
int
dec
ljmp
outsl
xchg
insl
xor
int
dec
ja
pop
lret
xor
andl
enter
sbb
push
xor
mov
cmpsl
loopne
jmp
push
in
add
xchg
add
test
mov
sbb
and
insb
mov
cli
pop
xor
insl
ds
in
push
lahf
insb
jmp
adc
cmp
mov
jle
out
daa
loopne
dec
xchg
lea
addr16
movsl
lret
sti
jge
nop
hlt
push
arpl
int3
leave
cmp
mov
je
leave
cmp
jbe
movsl
addr16
sub
inc
push
jl
adc
push
pop
out
scas
std
pop
in
adc
mov
xchg
push
sbb
icebp
es
cmpb
sub
inc
inc
pop
ja
and
cltd
jbe
xchg
push
adcb
test
xor
mov
adcl
pop
mov
sbb
sub
ret
imul
js,pt
sub
push
pop
sub
jno
cmpsl
add
lret
fucomi
push
nop
ljmp
cmp
pop
xor
outsb
mov
inc
cli
shl
cld
mov
sbb
fnstcw
jge
dec
in
adc
aaa
out
clc
add
hlt
int3
jge
mov
pop
out
addr16
mov
aam
xchg
and
jne
xchg
test
adc
add
aad
mov
push
push
icebp
lcall
jnp
out
push
loope
push
imull
shr
pop
js
pop
aam
xchg
pop
push
popa
popl
or
pop
lea
pop
subb
jne
dec
sbb
xchg
xor
or
or
sub
shl
or
shlb
lahf
test
aaa
sbb
aas
cld
pop
xor
xchg
and
sbb
inc
or
pop
hlt
cwtl
shl
ret
or
inc
adc
jp
jl
ret
gs
push
in
out
inc
mov
mov
lahf
or
mov
out
mov
mov
fisttps
cmp
or
aam
xor
into
sub
xchg
hlt
jmp
bound
hlt
div
sbb
push
and
out
repz
pop
mov
std
stc
mov
and
stc
jmp
mov
mov
add
shlb
cld
int
sti
mov
test
movsl
in
and
xchg
sub
mov
fdivs
mov
sub
cltd
clc
fidivs
xor
and
leave
out
jg
in
jmp
in
out
es
pop
pop
mov
and
lea
add
test
cmc
xchg
sahf
movsl
es
movsb
movsb
imul
int
add
stos
imul
jo
scas
or
cwtl
cmp
inc
lods
shrl
sbb
outsb
sahf
mov
mov
int
aam
jge
dec
enter
adc
jl
je
mov
add
mov
ror
xchg
comiss
in
aaa
jb
add
jge
in
subl
popf
ret
scas
call
setns
and
ss
daa
insb
adc
in
je
add
ret
cmp
jmp
push
dec
cld
out
sub
jg
mov
icebp
lods
and
int3
stc
imul
adc
jmp
push
sub
push
pop
and
lcall
dec
push
ret
and
xchg
loope
scas
out
stos
xor
push
adc
sarl
cmp
jbe
or
out
jle
popl
mov
push
jo
insb
pushf
fnstsw
insl
push
test
gs
orl
xor
shrb
jg
shrb
ss
push
add
neg
xor
pushf
inc
or
inc
pusha
cli
hlt
sub
sub
repz
sub
sub
bound
and
adc
and
dec
pop
cli
sbb
test
insl
decb
mov
ds
aam
sbb
jnp
fwait
ljmp
hlt
pop
push
xor
push
popf
jmp
sub
pop
mov
and
mov
or
mov
aaa
out
rcrl
and
enter
int
cmp
jmp
lcall
sar
dec
sub
pop
scas
repnz
inc
jle
arpl
adc
in
je
fwait
js
fstpl
xchg
out
repnz
cmpsl
sti
scas
imul
cli
xor
mov
cmpsb
or
test
loope
fwait
pop
cmp
test
jl
dec
insl
and
cmpsb
ljmp
fldt
int
sahf
rolb
scas
out
jg
in
adc
push
push
push
imul
lea
jl
iret
inc
aad
push
jmp
sub
aad
inc
mov
and
push
in
pop
inc
stos
inc
or
inc
adc
mov
cmp
xor
push
add
int3
aas
sahf
popf
xlat
shll
xchg
popa
inc
test
jne
push
dec
cs
mov
in
xlat
pop
or
dec
sbb
mov
sub
outsb
daa
jp
jae
ljmp
inc
sub
cmp
push
mov
fs
xchg
call
or
jne
fwait
jb
sbb
pop
xchg
mov
mov
dec
fstpt
xchg
rcr
rcr
cmpsl
xchg
cmpsl
aam
test
pusha
cmp
inc
and
push
push
pop
and
gs
jl
push
dec
inc
pushl
sub
cmp
imul
test
cmc
xor
jo
sti
lods
imul
xchg
hlt
mov
ljmp
arpl
jg
addb
imulb
cmp
imul
pushf
jne
sub
mov
into
mov
pop
add
in
dec
mov
cmp
adc
int
aas
adc
jmp
test
mov
fisubl
inc
dec
mov
cmp
mov
sbb
xor
add
mov
mov
push
mov
fdivl
add
mov
mov
ret
leave
mov
rclb
xor
movsb
cmp
dec
aas
and
pop
dec
mov
sub
imul
mov
imul
js
jmp
jns
shlb
out
push
xor
jge
cmp
repnz
sbb
fidivrs
fistpl
ljmp
out
ja
adc
rorb
es
inc
jmp
loop
into
push
sub
fcoms
lock
add
xchg
xchg
mov
lock
imul
repnz
mov
js
jp
in
inc
into
cmp
outsb
jge
iret
stos
test
cmpsl
pop
xchg
enter
pop
js
cmp
or
ss
dec
push
cs
aaa
sub
adc
notl
stos
mov
cmpsb
jmp
jnp
mov
movsl
repnz
and
jp
fs
into
out
flds
mov
in
daa
scas
adc
pop
pop
ss
popa
pop
cmpsl
mov
xor
sbb
sti
cmpsl
cmp
mov
das
add
jmp
push
loop
jmp
sub
mov
int
fwait
adc
mov
cmpsl
add
cmp
fidivrl
jns
xchg
iret
imul
jg
cmp
std
in
frstor
adc
loope
aaa
jo
iret
mov
or
xor
daa
fnstsw
sbb
in
lods
aad
mov
cmp
sahf
adc
jmp
movsl
fcoml
sbb
dec
out
jno
sbb
and
shrb
pop
lret
repnz
out
test
jo
imul
pushf
adc
add
shll
int3
jmp
into
dec
clc
mov
xor
or
cmp
aad
mov
mov
pusha
mov
fidivrs
mov
mov
mov
sahf
lods
sbb
mov
fldpi
repz
jae
bswap
scas
notb
jbe
pop
add
cmp
jle
repnz
pusha
stos
mov
imul
mov
mov
inc
add
adc
push
cmpsl
inc
mov
int
and
add
adc
int3
cmp
xchg
jbe
mov
rorb
fwait
push
fildl
inc
lods
stos
in
insl
cmpsl
std
mov
and
out
mov
in
stc
dec
orb
lea
cltd
jp
jg
push
mov
lret
insb
jg
les
cmp
pushf
sbb
push
add
xchg
leave
dec
ret
pop
add
in
js
rcrb
out
push
call
fs
pop
out
push
repz
pop
jg
pop
push
cmp
ds
lcall
xchg
push
mov
test
pop
fisttpl
sub
mov
aam
pop
mov
cmp
mov
sysexit
mov
je
repz
jae
sub
sti
sahf
das
aam
repz
or
in
sbb
mov
cmp
testl
inc
push
mov
lea
xor
jns
jecxz
inc
xchg
enter
cmp
mov
or
jo
add
cmp
cmp
push
mov
pop
scas
adc
das
cmp
xor
lods
popa
bound
cmc
fimull
mov
sub
fsubrp
outsb
xchg
dec
add
cmpsb
pop
pushf
adc
cmc
lcall
aas
sbb
sub
inc
fbstp
mov
xor
test
and
pop
sub
xor
inc
or
and
mov
and
add
xchg
cmpxchg
ljmp
imull
in
mov
push
mov
inc
addr16
sti
das
icebp
sbb
mov
jle
loope
and
mov
and
dec
cmp
into
jns
sbb
mov
fcoml
popf
loope
push
fldl
cld
mov
fidivl
add
loope
inc
fldenv
test
pop
lcall
fidivl
mov
adc
xchg
sbb
xchg
xor
jbe
mov
inc
jno
inc
mov
test
mov
jbe
fsub
ljmp
arpl
jae
xor
sub
cltd
sbb
push
mov
aam
and
insl
popf
adc
dec
push
cli
add
cmp
lret
pushf
call
add
out
xlat
negl
test
repz
adc
xor
xchg
shlb
push
movl
mov
cmc
ss
lret
dec
hlt
in
jle
pop
pop
inc
mov
mov
xchg
cmc
or
test
or
insb
inc
push
pop
cmpsl
js
and
in
add
lahf
mov
xor
dec
in
loope
clc
mov
sbbl
lock
mov
call
jl
mov
fs
adc
pop
insb
xlat
dec
mov
cmpsb
push
in
mov
add
mov
mov
lock
pop
adc
add
lret
push
test
dec
stos
jecxz
aas
pop
movsb
in
aad
in
jg
rorl
mov
dec
mov
push
mov
pusha
ja
ja
add
aas
pop
mov
and
add
aam
insl
lret
push
jp
pop
notb
mov
sub
rcrl
mov
inc
jmp
sbb
ja
and
inc
mov
negl
leave
scas
mov
xchg
jns
flds
mov
mov
stc
adc
rcrb
or
mov
push
loopne
adc
int3
mov
xor
and
arpl
push
inc
jno
stc
das
sub
movsb
push
xchg
lock
fnsave
call
xchg
pop
enter
and
cld
cmpsb
mov
dec
mov
push
xor
fisubs
ss
dec
cmpsl
pushf
repnz
xor
movl
adcl
gs
mov
xor
jecxz
sbb
sub
into
cmp
adc
push
fidivs
loopne
mov
xchg
adc
xchg
push
sahf
inc
es
push
outsb
cli
sbb
or
adc
push
imul
mov
xor
xchg
or
std
jno
stos
pusha
dec
fisttpl
pmaxub
shr
test
insb
sbb
jp
pop
orl
cltd
add
cltd
imul
mov
in
sbb
fimull
pushf
push
sub
pop
mov
inc
sahf
pop
sub
jl
out
es
push
pusha
xor
xor
fdivl
and
jb
div
jl
xor
jbe
int
mov
pop
scas
mov
or
dec
dec
sbb
fdivrl
adc
test
sub
popa
addr16
push
popf
cmp
ds
dec
movsb
push
stos
movsb
and
flds
cli
mov
mov
sbb
cld
pop
or
or
push
test
or
sub
insl
fucomi
xchg
out
pop
xor
aas
pop
jmp
fisubrs
jbe
inc
xchg
imul
dec
mov
and
mov
cmp
popa
mov
inc
pop
lock
popa
inc
mov
xor
mov
pop
push
hlt
cmc
or
push
cs
pushl
imul
mov
js
pop
dec
shl
xchg
je
mov
pop
popa
add
cwtl
adc
mov
dec
add
and
mov
pop
push
into
pusha
jp
sbb
xchg
jno
mov
and
hlt
inc
dec
push
cld
int
shrl
movsb
mov
jg
xor
pop
ss
mov
dec
movsl
outsl
lock
je
pop
xor
cld
xor
jb
div
ror
smsw
jp
cltd
adc
dec
mov
popa
cli
jae
stc
jle
test
and
push
add
or
shl
pushf
fmuls
shr
int
pop
jl
inc
hlt
dec
jmp
idiv
sbb
push
mov
cmpl
out
rcll
jno
jae
pop
mov
mov
inc
pop
lret
push
fidivl
das
mov
mov
and
pushw
insb
or
and
push
cmpsb
and
xor
cltd
pavgw
loop
inc
test
lret
aaa
dec
pop
xchg
add
aas
dec
loopne
push
das
and
xchg
out
fwait
inc
push
rcl
icebp
jb
std
xchg
dec
popf
mov
cmpsb
mov
mov
and
iret
in
adc
jl
push
adc
in
in
fwait
aad
sub
jl
adc
xor
xchg
push
clc
in
cmc
test
mov
mov
dec
sti
mov
push
xlat
daa
jecxz
mov
divb
mov
stc
mov
cmp
pop
idiv
or
xor
cmp
and
pushf
fistps
scas
push
and
adc
mov
push
out
push
ds
mov
in
dec
mov
and
push
lret
popf
xor
or
icebp
adc
mov
movsl
hlt
data16
inc
arpl
movsb
lea
incb
call
orl
in
push
data16
cmp
filds
ror
pop
adc
cmpsl
cmpsb
fs
fidivs
jle
jb
dec
mov
jae
out
bound
cli
dec
dec
inc
out
xchg
int3
sub
stc
hlt
adc
jne
or
pop
lret
pop
rclb
dec
pop
in
shll
arpl
cmp
test
cs
outsb
test
loope
incb
sub
orl
int
out
or
fwait
lcall
pop
dec
ffreep
mov
aad
xor
lea
lret
ja
pop
movsb
sahf
xor
jmp
sbb
add
ss
pusha
jae
out
mov
cmp
out
xchg
push
fidivrl
loope
dec
adc
sbb
pop
push
sbb
xor
jae
push
ret
adc
dec
aam
incb
int
imul
jbe
imul
add
fcompl
divb
ret
xlat
lods
enter
mov
mov
test
push
jne
cmp
xchg
dec
push
movsb
pop
addl
gs
ja
mov
lods
lea
cmpb
add
scas
mov
add
aad
jne
jno
std
mov
pushf
sub
divl
and
inc
xchg
in
or
jge
pop
adc
add
gs
mov
inc
movsl
push
adc
cmpsb
cld
fs
repz
lret
sub
push
push
jnp
std
lods
cmp
mov
mov
xor
or
bound
ficoml
pop
pop
mov
sub
or
cld
jb
pop
push
xor
adcl
test
xchg
inc
pushl
mov
repz
lods
mov
pop
rol
mov
mov
adc
inc
push
jns
pop
jns
gs
and
push
sahf
lret
xor
xchg
mov
jns
jg
sbb
lcall
lock
scas
mov
popa
jp
sarl
add
push
push
scas
jbe
cwtl
lret
adc
push
xor
lea
enter
add
sbb
repz
loope
rolb
sub
fiadds
imulb
cwtl
into
jnp
test
add
aas
xor
sbb
fwait
lret
arpl
xor
push
adc
stos
xlat
imul
rolb
mov
cmp
cmp
call
andb
inc
fs
test
lret
cmp
out
aad
push
cmp
push
lret
push
cld
jle
xchg
out
xchg
or
jae
shl
aas
mov
popa
jmp
pop
je
popf
nop
mov
pushw
test
and
add
cld
sar
mov
push
pushf
pop
sub
das
sbb
in
mov
stc
and
jge
fucomip
push
and
pop
lods
div
inc
push
lcall
jbe
neg
lods
mov
out
mov
enter
pop
mov
push
fwait
mov
and
dec
lahf
adc
pop
cmp
fdivs
mov
clc
mul
mov
icebp
mov
rcrb
xchg
mov
cmpsl
lea
flds
cmpsb
bound
daa
and
mov
sub
mov
ret
cmc
sub
sbb
cmc
sbb
addr16
into
xchg
push
and
push
test
cmp
jae
adc
shlb
clc
dec
cmp
sbb
insb
arpl
es
jmp
push
mov
sbb
cmp
test
sub
inc
jnp
fsubrp
shlb
cmp
pushf
cli
ds
ficompl
movaps
push
cmc
fcomip
sub
add
cwtl
pop
push
lcall
adcb
or
int3
repnz
test
push
xchg
sahf
jl
pop
jae
aad
cmp
push
jns
or
cmp
nop
or
pop
into
mov
add
popf
lods
mov
fsubs
dec
aaa
data16
sub
push
sar
push
jne
mov
repz
nop
xor
dec
into
push
std
insl
mov
fucomip
dec
mov
mov
fildll
jae
xor
aam
nop
push
cmp
xchg
adc
in
pop
movsb
mov
popa
test
jge
jp
or
out
orb
xchg
pop
push
sub
or
shld
cmp
dec
push
das
mov
jmp
sbb
outsb
fisttpl
cmp
sub
insb
loopne
in
dec
fsubrl
or
mov
fdiv
push
xor
sub
mov
xchg
adc
add
cmp
cmp
push
adc
icebp
and
jl
mov
sbb
cmpsl
xchg
xor
pop
cmpsb
div
sub
fdivrl
data16
imul
xor
shl
adc
aaa
in
cmp
cmpsl
movsl
mov
mov
loopne
xor
jnp
fiadds
repnz
jecxz
add
popf
hlt
push
les
jl
pop
pop
xor
cmp
enter
enter
adc
pop
sbb
and
push
je
push
sbb
xchg
push
call
fistps
out
pop
imul
and
push
test
add
loop
xor
popa
cmp
xchg
ud0
pop
ja
mov
test
mov
mov
mov
sbb
sub
and
push
mov
dec
push
dec
push
bound
mov
pop
dec
jae
or
or
lret
push
bound
fildll
pushf
sbb
push
leave
push
lock
jbe
lods
hlt
mov
add
loope
mov
dec
mov
ds
fistl
lock
lock
in
cs
out
mov
pop
out
imul
jmp
fdiv
jns
pushf
call
into
int
je
jnp
icebp
loope
inc
push
jae
test
lret
cmp
mov
ljmp
fisttpl
je
pop
nop
fs
cmp
int
jo
dec
stos
jg
pop
cwtl
lcall
adc
inc
and
adc
pop
daa
mov
aad
outsl
repnz
cmpsl
cmpsl
xor
jnp
inc
add
jb
dec
call
xchg
sbb
loop
shl
mov
mov
clc
scas
or
cmp
mov
jb
jmp
movsl
subb
push
sub
ss
push
adc
jecxz
stos
out
or
inc
loope
cmpb
and
sub
repnz
inc
lahf
out
jl
xchg
fisubrs
aam
call
pop
sbb
pop
mov
dec
xchg
cli
cmovns
subl
xchg
push
add
divl
stos
xlat
dec
push
movsl
push
cltd
fwait
icebp
jae
or
inc
or
outsb
imul
mov
sub
ds
bound
inc
jg
xor
mull
lcall
stc
sbbb
lea
xchg
subb
sbb
adc
mov
or
sbb
and
fs
cmp
xchg
fxch
sahf
icebp
punpckhwd
mov
les
out
aas
cmpsl
ret
sbb
pop
inc
or
fisttpl
and
xchg
cmc
mov
mov
lahf
adc
mov
push
and
cmp
push
out
out
notb
mov
mov
decb
xor
or
vcvtsd2ss
inc
jle
mov
das
cmpsl
xor
andb
ljmp
sbb
outsl
pop
or
loop,pt
jae
incl
jecxz
push
adc
sarb
pop
lods
xor
xchg
push
xchg
and
cmpsl
jbe
or
push
jmp
mov
movsb
xchg
sbb
lea
pop
test
or
mov
rorl
inc
out
mov
fbstp
pop
dec
ds
adc
addr16
jo
sub
bound
fisttpl
je
out
ja
inc
mov
lret
mov
xor
rcr
dec
repnz
enter
push
cli
or
xor
shll
inc
fistps
mov
shlb
sub
fmuls
sahf
fcoml
int
fmulp
fcoms
jl
jno
je
in
std
xchg
and
mov
in
or
rcl
pop
fcmove
je
pusha
mov
popa
mov
out
mov
adc
xchg
insl
gs
ret
jmp
add
mov
in
je
mov
adc
push
test
sbb
testb
shll
inc
mov
sub
loopne
xor
sub
pop
mov
or
pop
and
pop
or
stos
cli
sub
xchg
loopne
negl
pop
add
cmp
adc
push
in
cmp
leave
getsec
sbb
mov
adc
or
mov
rcrl
and
mov
push
lea
and
and
cmpl
push
enter
cmp
sub
mov
or
repnz
pop
xchg
loope
bound
out
mov
cmp
rcll
fimull
movsl
push
mov
fistpll
push
lret
adc
inc
adc
into
xlat
sarb
aad
dec
jecxz
cwtl
xor
push
push
jnp
and
fmulp
add
push
ss
pop
rclb
scas
cmc
or
aam
lahf
test
out
dec
add
mov
into
outsb
insl
mov
push
imul
lret
mov
hlt
pusha
adc
arpl
xorb
ljmp
bts
jle
inc
inc
mov
ret
mov
xchg
push
add
sub
and
pop
jnp
out
push
xchg
mov
push
lock
loope
loop
xchg
xchg
insb
push
mov
inc
test
inc
inc
push
and
mov
ret
call
cmc
mov
test
icebp
mov
in
xor
jp
stc
push
lret
xor
mov
mov
es
jg
daa
push
loope
shlb
inc
insl
and
add
inc
sarb
xchg
jnp
es
stc
ret
adc
js
out
negb
lcall
sar
xchg
daa
ljmp
in
shrb
jl
pop
inc
inc
sub
bound
xor
sbbb
mov
push
xor
add
sub
inc
and
pop
fldl2e
imull
push
mov
xor
je
cli
push
insl
cmp
jmp
mov
inc
xor
jae
pop
aaa
lcall
stc
jge
or
mov
mov
rorb
sub
xlat
jmp
and
out
out
mov
roll
outsl
push
out
lock
jp
enter
pop
inc
fsubrs
lods
or
lods
sub
data16
lret
and
push
cmc
sub
sbb
jle
push
fidivrs
jmp
daa
cmpb
push
aas
fsubs
mov
call
inc
sbb
add
addl
jmp
rol
das
or
dec
mov
xlat
addb
cltd
mov
pusha
jnp
fdivrl
push
clc
leave
mov
sbb
bound
push
mov
and
stc
testb
nop
fstpt
pop
je
or
arpl
push
test
mov
cwtl
sbb
in
jecxz
movsb
cmp
jle
jne
fwait
jg
ljmp
push
sbb
inc
xchg
outsb
inc
cmc
push
ja
dec
and
sub
sub
pop
andl
js
les
pop
cs
loope
scas
out
mov
cmp
cmp
lret
inc
ret
jecxz
es
mov
adc
mov
cwtl
mov
scas
stos
loope
insb
add
sub
sbb
hlt
adc
adc
sahf
dec
push
negl
ljmp
imul
pushf
sub
xor
js
arpl
mov
push
leave
outsl
mov
sbb
adc
and
mov
inc
add
push
add
outsl
push
sbb
rorl
cmc
or
adc
cmc
jns
mov
sahf
dec
ficomps
in
leave
icebp
mov
hlt
insb
inc
xchg
repnz
and
rorl
xchg
out
push
cld
pop
mov
pop
mov
data16
mov
aaa
out
cld
shlb
les
fbld
lods
pop
and
insb
mov
addr16
cmpsb
mov
and
mov
fstpt
xchg
jecxz
mov
mov
adc
and
js
mov
mov
sahf
sbbb
mov
jae
sub
jmp
ret
and
shl
pop
loope
add
jno
xchg
addr16
gs
mov
jecxz
imul
xor
mov
cmp
cmpsl
mov
les
out
jmp
cmovo
ret
jnp
rcl
arpl
or
out
or
dec
cmpsb
pop
pusha
fcoml
cld
cmpsb
mov
mov
icebp
mov
pop
shll
data16
sub
cmp
mov
dec
into
mov
divl
loope
push
push
mov
push
popa
jae
lcall
or
popf
dec
test
mov
add
mov
mov
mov
or
sbb
ror
dec
dec
cs
ja
push
mov
xor
cmp
data16
jl
sub
stos
xchg
in
ljmp
inc
sbbl
ds
mov
inc
mov
cmpsl
inc
fsts
shlb
test
enter
cmp
jp
ljmp
addr16
sbb
sub
jg
jnp
addl
sbb
js
add
stos
xchg
pop
data16
xchg
imul
cmc
sahf
cltd
cwtl
ljmp
lea
inc
imul
jno
cs
add
or
dec
inc
push
arpl
hlt
jns
inc
pop
cmp
dec
ret
sti
mov
aaa
rcrb
mov
movsl
pop
inc
jnp
mov
cld
sub
inc
jg
add
popf
outsb
pusha
or
subb
xchg
lret
pop
cltd
pop
mov
lahf
jp
cmpsb
pusha
fbstp
lods
hlt
and
lods
popf
mov
add
sub
xchg
mov
in
test
loop
pop
inc
pop
lret
mov
jb
pop
nop
aam
in
dec
sub
pushf
movsb
sub
cmp
xor
mov
mov
adc
mov
sti
jno
or
stc
cmpsb
dec
scas
dec
pusha
adc
sub
xor
push
stos
push
mov
or
or
popa
in
lock
lods
xchg
jae
rorl
push
sahf
sahf
stc
les
mov
mov
fcmovbe
or
cmp
push
inc
mov
dec
sbb
lcall
clc
jne
pushf
or
cltd
cwtl
sbb
xchg
push
fcoml
out
xchg
adc
call
insb
and
in
inc
dec
data16
popa
lret
pop
mov
icebp
lods
dec
ss
mov
arpl
in
jne
into
cmpsl
test
mov
ja
ds
push
push
lods
xchg
sub
or
jbe
pop
lods
sbb
clc
lock
pop
sbb
arpl
xchg
jmp
mov
hlt
sbb
aaa
test
and
jle
into
loope
scas
push
icebp
outsl
sub
in
call
inc
sbb
daa
aaa
sbb
dec
fdivs
mov
aas
dec
jle
ja
dec
sbb
clc
pop
xchg
aad
mov
icebp
or
jo
pop
cwtl
lods
outsl
pop
loop
xor
inc
rol
sbb
and
add
and
and
cld
fiadds
and
adc
adc
mov
xor
push
cmpsl
sahf
rorb
shrb
xor
aas
dec
arpl
or
imulb
mov
xchg
push
mov
push
xor
jno
inc
inc
in
data16
or
in
popa
xor
fwait
pop
outsb
sub
popf
push
mov
shrl
push
shll
jecxz
adc
xchg
fcomi
xchg
out
lret
jmp
adc
mov
push
xchg
jbe
lret
xor
xor
jle
movsl
add
shlb
or
add
stos
pop
jecxz
inc
sub
sarb
mov
jle
xchg
outsb
movsb
cmc
sbb
inc
mov
xchg
mov
sbb
sarb
aad
inc
lret
xchg
inc
and
frstor
mov
jmp
mov
pop
mov
lods
loope
mov
out
cltd
sbb
or
dec
ds
mov
dec
mov
mov
movsb
fcoms
push
mulb
bound
pop
pop
sub
rcrb
mov
inc
enter
shl
in
out
sbb
pop
and
das
shr
enter
and
sbb
add
aam
pop
push
fldl
pushf
ret
sbb
adc
jne
mov
sbb
pushl
mov
pop
movb
adc
mov
cli
dec
push
jae
add
xchg
jg
jbe
sub
xor
addr16
call
xchg
mov
dec
mov
je
sub
les
dec
xor
xchg
jno
fistpll
fs
add
push
adc
cld
into
add
call
pop
cli
xchg
xchg
adc
fnstcw
scas
push
jne
inc
push
xor
icebp
or
pop
shlb
and
mov
mov
ljmp
fisubrs
mov
dec
mov
rol
and
cmpsl
xchg
mov
mov
pusha
and
ss
cmpsb
iret
inc
sub
cwtl
xchg
arpl
adc
mov
aad
adc
bound
adc
adc
xchg
aaa
js
and
outsl
jno
pop
cmp
fdivr
pop
inc
mov
push
pop
movb
mov
in
mov
mov
cmp
stos
loope
lds
sub
repz
sbb
aas
sub
popaw
push
sub
or
pop
add
jmp
lret
jp
int3
push
add
jae
mov
dec
and
and
divl
mov
mov
add
roll
xchg
aas
push
lods
pop
mov
rclb
xor
sub
out
adc
in
sbb
data16
out
jmp
ljmp
pop
lods
cmp
fwait
sub
xor
mov
or
adc
rol
out
scas
push
push
jbe
mov
add
stos
jmp
fists
adc
stos
fimuls
in
daa
out
jb
inc
jne
sub
pop
in
loopne
aaa
jno
repz
push
mov
push
inc
mov
pop
cmp
flds
jge
js
ds
mov
inc
fidivs
incl
repnz
push
test
add
push
in
mov
inc
cs
sbb
cmp
xchg
lods
imul
sbb
pop
mov
or
and
jmp
das
xchg
and
adc
sbb
pop
cs
adc
stos
jmp
out
push
int3
call
out
andb
pop
nop
mov
push
fcoml
push
dec
mov
insl
or
mov
aad
mov
xchg
pop
mov
sarb
and
fmul
fadd
fs
mov
cmc
subl
inc
sahf
xchg
jo
adc
push
call
daa
test
xor
push
jge
es
cmc
negb
mov
and
sbb
enter
and
pushf
dec
sub
aaa
mov
and
ds
jecxz
pop
push
scas
subl
xor
add
jg
mov
out
mov
out
lods
mov
sti
aaa
stos
push
fmuls
ficompl
int
xor
push
icebp
out
push
fiaddl
testl
test
adc
cmpsl
test
mov
push
or
sbb
pop
xchg
jbe
inc
push
mov
xchg
push
inc
xchg
nop
idivl
xchg
mov
and
loope
clc
std
sti
lahf
loope
pop
rcrl
fwait
test
hlt
arpl
idivl
cmp
movsb
mov
roll
stos
es
sbb
iret
fnsave
adc
ficomps
sarl
pop
push
mov
pop
mov
mov
sbb
push
cmp
sub
push
mov
inc
outsb
add
xchg
ja
mov
out
mov
movb
scas
mov
push
inc
cmp
cmpsl
shrb
mov
sbb
fldl
lcall
dec
ret
push
ds
les
cmp
test
and
nop
dec
mov
push
test
sar
and
shll
lods
adc
jecxz
in
shlb
and
mov
cmp
mov
xchg
out
shrl
xor
mov
std
pop
cwtl
outsl
lret
movsb
cwtl
pop
fcompl
or
ss
cld
pop
lods
int3
clc
cmp
and
test
roll
push
sub
imul
pop
jle
sti
mov
xchg
lds
fisubs
cmp
push
jae
jg
lret
xchg
out
into
fwait
mov
insb
stc
inc
test
xor
pop
rorl
push
xchg
mov
mov
mov
cmp
dec
dec
int
xchg
mov
loop
xchg
test
mov
sub
jge
aam
sbb
dec
mov
ljmp
adc
movhlps
xchg
dec
in
sbb
insb
xchg
add
inc
or
jb
cltd
pop
jo
adc
in
js
fisubrs
cmc
lock
clc
add
int
int
add
aad
sub
ja
sub
jle
sub
cmp
or
pop
cmp
arpl
insb
js
jns
clc
pop
push
lret
add
xchg
jmp
daa
dec
int3
fsubrl
js
dec
fisttpl
xor
shl
mov
inc
insb
sbb
sub
mov
pushf
fisttpll
pop
dec
hlt
in
cmp
pop
inc
cmp
sbb
outsb
fwait
pop
or
out
or
xlat
or
jnp
adc
sbb
movsl
sbbb
or
in
rol
or
lahf
cmp
xchg
mov
and
ret
decl
xchg
dec
mov
cmpsl
js
rcrb
push
lcall
jns
mov
outsb
test
pop
and
out
stc
inc
outsl
inc
lock
jmp
movb
push
das
in
xor
scas
lret
insl
enter
mov
addl
jbe
out
sbb
xchg
test
inc
stos
sbb
cmc
sbb
push
sti
sti
andb
inc
mov
or
leave
dec
cs
mov
lods
out
push
jo
xchg
aas
leave
jb
mov
insl
stos
call
pop
push
roll
mov
ss
lret
pusha
loopne
hlt
loop
cmp
clc
pop
add
dec
cmp
shll
sbb
push
mov
aaa
cwtl
faddl
lea
add
aam
cmpsb
imul
xlat
fwait
dec
or
punpcklwd
xchg
mov
es
repz
pop
rcll
pop
mov
push
es
mov
adc
icebp
popf
dec
les
inc
dec
mov
jg
sbb
loopne
pop
mov
add
popa
sbb
mov
sti
lods
jp
jnp
lock
imul
aad
push
movsl
xchg
mov
repnz
in
xlat
inc
inc
ret
inc
cld
jp
mov
movsb
adc
pusha
and
cmpsl
push
jle
test
mov
push
cmp
fadds
and
fcomp
jno
mov
cli
int
jge
fiaddl
movsb
push
fisubrs
lret
rcl
sub
adc
lea
and
mov
sub
jno
jl
xchg
stc
xor
dec
mov
push
inc
pop
dec
dec
gs
mov
inc
push
in
fsts
test
pusha
fadds
mov
sub
cmpl
shrb
int3
fs
into
cld
mov
mov
mov
scas
decl
add
cmc
xchg
xor
out
cld
lods
xchg
lret
adc
xchg
jns
xchg
dec
lret
insl
sub
cmc
push
mov
ss
jns
je
push
aam
aaa
mov
pop
ss
jl
pop
sbb
sub
add
cmp
mov
sub
pop
pusha
adcl
fcomp
cld
das
dec
push
jne
xor
mov
pop
mov
sub
jb
jo
jnp
jge
mov
mov
rcll
lret
stos
fldenv
pop
and
mov
das
and
adc
sarb
fcmovne
jmp
rcrl
aas
fwait
cmp
mov
mov
shll
jns
sbb
mov
push
inc
fisubl
outsb
icebp
dec
int
mov
add
arpl
pop
movsb
aaa
stc
add
and
and
mov
xchg
xor
push
cs
ja
mov
out
and
lea
push
bound
dec
add
mov
pop
shll
pop
jne
mov
imul
mov
jns
and
and
leave
push
dec
jmp
fcoms
iret
lds
inc
les
aad
jg
jmp
pop
jp
push
push
xchg
std
sub
flds
xchg
pop
xlat
andl
loop
fwait
cmc
sub
icebp
mov
loope
aaa
mov
mov
mov
les
stos
orl
push
push
movsl
fistps
xchg
stc
jle
xor
aam
dec
and
jo
call
jo
jbe
clc
aaa
or
shll
fbstp
out
das
xchg
pop
rorb
jg
out
cmp
push
int
ss
mov
xor
outsl
sahf
sarb
sbb
in
fcmovnbe
imul
mov
cld
sbb
add
movsl
xchg
aad
mov
sbb
pop
les
xchg
cmpsb
aas
ja
jno
dec
lock
sub
inc
aam
pop
sbb
mov
fstp
xlat
push
dec
mov
push
int
sti
fsubs
or
sbb
fcompl
cmp
int
rcrl
push
sub
inc
push
pop
enter
imul
add
movsb
adc
and
pop
sub
dec
push
fs
repz
add
dec
lods
xchg
mov
fldenv
shr
dec
rorb
sbbl
sbb
xchg
add
scas
ret
jne
in
mov
push
xchg
negl
inc
fwait
push
std
xor
lcall
adcl
aad
jns
xor
mov
test
push
inc
imul
cmpb
xchg
push
sub
add
fists
scas
lods
jle
and
das
or
xchg
aas
xor
js
repz
movsl
add
push
bound
xor
int
into
dec
ljmp
outsl
stc
cld
popa
cmp
mov
arpl
int3
call
rclb
idivl
xchg
repnz
lahf
rcl
std
cwtl
arpl
jb
and
and
dec
sub
pop
nop
stos
mov
add
inc
lahf
mov
mov
inc
mov
ljmp
movsl
das
or
dec
in
pop
std
je
int
pop
rcr
and
cli
push
in
push
cs
jg
fbld
mov
fsub
aam
xlat
adcb
int
fsubrl
ljmp
ljmp
inc
clc
mov
xor
mov
cltd
addl
adc
mov
in
adc
sub
push
cld
int3
cmp
dec
dec
sub
pop
sahf
push
clc
sbb
pop
pop
mov
sub
iret
mov
pusha
daa
dec
orb
cmpsl
mov
fcomps
pop
adc
push
jmp
jle
cmpsb
xor
add
test
subl
sub
and
outsl
jno
sbb
xchg
cli
dec
adc
lods
mov
adc
cli
adc
jns
loop
cmp
lods
sub
pop
ja
mov
push
mov
movsb
cld
clc
push
sbb
out
xor
out
mov
adc
xchg
icebp
loope
sbbl
xchg
adc
sahf
sti
stos
leave
lahf
mov
xor
mov
fldl
xchg
cmp
cmp
int
imul
data16
dec
mov
sbb
sti
fwait
sti
cmp
pop
or
int
push
cmp
sbb
imul
add
test
mov
push
cld
leave
cs
icebp
cltd
jecxz
pop
push
cmp
inc
inc
fisubrs
push
ljmp
pushf
ds
sahf
imul
sub
mov
inc
mov
adc
jnp
pop
sbb
inc
xchg
xlat
and
push
cmp
jnp
lret
xchg
mov
xlat
dec
loope
sub
xchg
dec
jbe
mov
push
and
lcall
mov
test
push
and
mov
mov
in
or
push
in
in
mov
flds
dec
pop
pop
mov
nop
into
mov
push
lahf
mov
aad
xlat
xchg
mov
fisubs
pop
add
popf
push
mov
mov
in
mov
and
stc
enter
scas
mov
cmp
pop
mov
mov
push
and
cli
mov
xchg
mov
sub
bound
test
jae
out
sbb
aas
mov
jge
push
sub
push
fadds
or
sbb
xchg
xchg
inc
dec
adc
leave
cmp
frstor
xor
sbb
adc
dec
divb
cmpsb
cmp
sub
gs
sub
testb
dec
sti
mov
xor
sub
mov
mov
je
pusha
mov
mov
push
mov
ffree
dec
or
cmp
xchg
mov
jmp
bound
lock
roll
mov
adc
decl
or
loop
dec
inc
lods
sahf
sub
int3
pop
dec
xchg
cmpsb
mov
inc
pop
jmp
mov
faddl
divb
scas
and
stos
push
jmp
test
lcall
mov
jbe
jb
outsb
dec
lret
jge
popf
inc
cmp
inc
fsubrs
shlb
inc
xchg
stos
add
pop
scas
sub
and
je
comiss
stos
ficoml
movsl
cmc
xlat
adc
mov
int3
xchg
or
inc
clc
sub
cs
mov
xchg
test
int
dec
jno
testl
mov
movsl
pop
jge
out
sub
push
ja
sbb
push
adc
mov
dec
loopne
adc
fsubp
testl
dec
mull
imull
cwtl
mov
int
xchg
add
bound
jno
or
or
inc
into
jnp
cmp
movups
xor
sbb
mov
xor
sbb
pop
sbb
icebp
jg
ficomps
inc
or
addr16
imul
loope
nop
jmp
decb
fldenv
jnp
mov
xor
push
jge
mov
cmpsb
in
ss
repz
or
repz
cmp
loope
pop
adc
or
jmp
push
adc
test
push
mov
xor
jo
fwait
push
or
test
cmpsb
mov
test
in
sarb
cmp
xchg
add
inc
test
jmp
mov
dec
add
ret
lea
sub
fs
fsub
dec
jp
jg
pop
dec
jbe
arpl
nop
call
sub
mov
fmuls
outsb
ds
pop
inc
lret
cmpsb
dec
pop
push
pop
xor
sbb
pop
aaa
pop
dec
cld
xchg
loope
in
sbb
push
cmpl
or
push
xchg
push
sub
push
xchg
jg
add
ds
cld
ja
mov
xchg
aas
decb
jmp
cmp
loope
call
jo
push
mov
pop
test
adc
xchg
lock
pop
pushf
xchg
ljmp
pop
mov
jmp
sbb
flds
push
out
add
jns
push
mov
clc
inc
push
sti
mov
cmp
jae
mov
mov
dec
cmpsl
out
push
in
push
js
jb
stos
or
pop
mov
ret
mov
push
sbb
dec
add
or
lods
jle
push
add
pop
dec
xor
or
lret
inc
lret
pop
inc
lret
jl
movsl
cli
xchg
add
and
push
pop
sbb
stc
ja
mov
jg
jmp
addr16
flds
pop
rorl
out
or
mov
outsl
shlb
sub
sbb
mov
lods
xchg
add
inc
outsb
daa
fwait
je
cltd
adc
mov
dec
ret
xor
les
ret
mov
adc
push
adc
cwtl
fcoms
adc
std
movsb
ljmp
icebp
push
jecxz
test
mov
sti
sub
loop
fiadds
push
test
outsb
popa
pop
testb
fstl
or
mov
in
cmc
push
cltd
add
or
retw
lods
cmpsl
inc
or
les
ss
movsl
aad
subb
or
in
dec
addr16
pop
notb
aad
sbb
and
fimuls
pop
ljmp
inc
mov
jno
dec
sti
shlb
in
cld
addl
add
in
loope
cli
into
push
cmc
mov
mov
and
cmpsb
lods
gs
sbb
inc
movsl
xor
fildl
pop
outsl
addr16
fwait
xor
or
cltd
mov
ret
jmp
loop
test
movsl
sub
fldl
inc
or
add
in
mov
daa
test
aas
xor
daa
sub
cmp
cmpsb
jno
imul
dec
jne
das
inc
or
aaa
gs
dec
fldenv
nop
jbe
jp
mov
pop
mov
enter
sbb
and
cmc
jmp
ds
xchg
rclb
dec
sub
das
mov
xlat
ss
mov
xorl
pop
je
pop
call
fscale
inc
jne
add
and
mov
pusha
sub
xchg
xchg
cs
add
scas
lahf
mov
dec
dec
sbb
scas
jnp
mov
push
cmpl
lret
push
fsts
jmp
xchg
xor
or
fisubl
lods
sbb
jecxz
mov
insl
xchg
movsb
xor
testb
adc
or
test
std
mov
aas
jo
sbb
ret
push
and
les
jns
mov
pop
mov
pop
out
popf
dec
add
sub
adcb
xor
int
inc
xchg
repz
loope
aaa
mov
adc
pop
adcl
je
shlb
sub
or
aad
lcall
mov
adc
imul
mov
mov
sbb
pop
pop
lock
lcall
mov
sbbl
fcoms
add
fs
push
push
stos
sbb
aas
jle
out
lret
jp
or
add
inc
cmp
jne
pop
mov
cmpsb
pavgw
aaa
loope
sub
xchg
inc
mov
out
insb
xchg
data16
push
pop
adc
and
lods
mov
mov
xor
lock
shl
ja
int3
iret
test
xchg
shlb
int3
lods
clc
pop
mov
ret
fstpl
push
les
imul
fdivr
fdivr
inc
cmp
xchg
mov
cs
leave
dec
xorb
jle
test
aad
adc
loopne
mov
fildll
cmp
mov
subl
xchg
mov
imul
hlt
out
xchg
cld
call
xchg
or
aas
jno
inc
fildll
and
mov
fldl
imul
mov
adc
lret
or
sahf
call
xchg
mov
and
enter
clc
lahf
pop
shrb
in
dec
ss
out
ds
xor
xchg
pop
loope
or
jl
js
push
in
xchg
js
fcmovnb
or
mov
push
mov
fldcw
and
insb
addb
orl
rcll
add
push
push
int
fisubrs
xorb
or
push
ds
xchg
hlt
dec
mov
jge
dec
fimuls
lods
repz
int
push
pop
jnp
cmp
outsl
push
push
arpl
sub
and
lock
in
in
add
clc
fsubl
fsubl
or
push
pop
hlt
dec
imul
imul
test
xor
mov
divb
dec
xor
jle
pop
push
sbb
push
pop
push
or
jecxz
repz
shrb
inc
cltd
jns
std
loope
inc
jo
mov
aad
data16
mov
inc
sub
dec
jp
xor
adc
sbb
rep
or
fidivrs
xchg
sub
mov
popa
rorl
or
aas
ja
mov
ret
popa
xor
mov
add
push
xchg
mov
outsb
pushf
or
out
mov
jb
aam
repnz
or
fstpl
lock
pop
sub
xor
aaa
loop
aaa
hlt
sbb
sbb
or
push
sti
repz
jl
sbbl
push
mov
test
or
jo
pushf
mov
enter
jae
test
push
sbb
mov
test
in
mov
lea
cmp
adc
dec
vmread
push
pop
jo
dec
jbe
fs
mov
sbb
dec
sar
cmpsb
pushf
xchg
xor
sbb
iret
ss
lahf
loop
sti
jnp
xchg
dec
lods
sub
fdivr
push
bound
scas
cmp
scas
xor
push
jno
mov
popa
xchg
inc
inc
fwait
mov
mov
insb
repz
and
pop
push
packuswb
nop
and
mov
ds
cs
lret
fstl
pop
sbb
and
inc
mov
cmp
in
xor
out
adc
cld
jb
add
call
sbb
scas
cmp
pop
cmp
leave
sub
push
insb
cwtl
repnz
loopne
ss
cltd
xor
jne
lret
inc
and
dec
pop
push
ja
lock
mov
mov
fwait
hlt
jae
add
sbb
push
lods
pop
and
enter
das
sahf
aam
stos
icebp
inc
mov
xchg
and
and
push
push
movsl
popa
rcrl
test
mov
jmp
dec
les
jo
dec
xchg
mov
xlat
xor
inc
stc
daa
popa
push
hlt
xor
mov
inc
mov
sub
lds
hlt
mov
push
ficomps
pop
push
test
mov
je
jmp
or
sub
jnp
jp
mov
mov
mov
mov
fsubl
data16
jp,pt
in
dec
sbb
std
mov
jge
loopne
dec
iret
cmc
mov
push
std
cmp
or
xchg
cmp
popf
mov
xchg
cmp
out
xchg
popl
jg
ror
jae
pop
lret
popa
mov
shll
sarl
jecxz
loop
cli
push
mov
jbe
mov
mov
push
repz
push
aas
or
push
sub
sub
loope
or
mov
xchg
test
pop
sar
jnp
andb
rol
or
das
sub
or
mov
xor
xor
loop
lahf
cld
sbb
in
jb
andb
sbb
imul
jg
add
lcall
ds
xor
inc
sbb
scas
push
lock
mov
or
xchg
pop
push
push
xlat
jl
pusha
call
xchg
xor
mov
inc
adc
pop
dec
cmpsb
sbb
or
add
jbe
xchg
push
or
addr16
inc
pusha
sub
setb
and
sub
push
mov
aad
les
test
es
mov
xchg
scas
sbb
push
push
xchg
sarl
xchg
adc
scas
pop
cmp
lret
out
jecxz
cmp
sbb
pop
mov
mov
inc
inc
rorb
sub
adc
iret
cwtl
mov
imul
aam
fstps
xor
lods
data16
mov
mov
xor
test
stos
hlt
insb
les
and
stc
fsubs
mov
enter
aas
and
inc
lock
push
das
jbe
loopne
loopne
xchg
loope
fiadds
addl
stos
cld
mov
pop
or
push
mov
mov
rolb
shlb
rclb
and
out
out
pop
rcrb
mov
adc
sbb
jl
je
add
ljmp
pop
sbb
mov
cs
sbbb
mov
sar
and
push
dec
cmp
sti
mov
pop
das
rorl
xchg
addr16
sbb
and
mov
scas
cmc
stos
fnstsw
add
aas
addb
mov
aad
lock
dec
rcr
repz
lock
sbb
fdivrs
insb
out
push
sub
mov
dec
mov
das
pop
dec
ss
stos
mov
sbb
subl
leave
add
cmp
sbb
mov
movb
fldl
enter
xchg
rorb
mov
mov
cmpsb
and
mull
out
fmuls
or
cmp
or
pop
leave
out
aaa
mov
or
jg
lds
std
leave
mov
push
cmp
or
mov
add
std
scas
or
xchg
pop
rep
sarb
stc
gs
ret
add
in
mov
cmp
pop
ret
aaa
cltd
push
lea
cli
out
lea
mov
jmp
sahf
push
mov
iret
adc
xchg
pop
jge
arpl
std
pop
popf
fsubrl
add
sub
sub
cld
jge
mov
xchg
jecxz
jge
push
pop
addr16
fstp
jae
pop
mov
adc
in
adc
fistpll
in
mov
fidivrl
fwait
repnz
xor
pop
les
push
push
scas
jp
lods
xchg
and
jg
adc
push
lds
pop
jne
pusha
loope
int
push
sbb
arpl
lods
mov
mov
and
sub
inc
pop
mov
cmp
insb
repz
repz
bound
push
xchg
ret
dec
or
inc
xor
pop
imul
fwait
adc
xchg
mov
sarl
xor
arpl
push
je
jb
leave
sbb
adc
and
aam
pop
cmp
fistps
movsb
jae
sti
adc
arpl
dec
sbb
add
jbe
loop
sbbl
loope
andl
mov
iret
jg
xchg
nop
cld
xchg
adc
add
sahf
xorl
add
inc
push
into
clc
jb
push
es
les
mov
push
movsl
push
mov
pop
mov
lret
mov
adc
or
popf
outsl
orl
sub
xchg
pop
out
adc
push
xor
je
idivb
xchg
les
sub
mov
jle
push
and
inc
lret
fsubrl
cwtl
xchg
in
sbb
fnsave
mov
into
pop
mov
or
lods
push
pop
daa
sahf
leave
push
leave
cmp
cmc
cmpsb
jo
xlat
mov
adc
push
mov
ljmp
adc
outsl
je
mov
sub
mov
clc
cmp
sub
loop
xchg
jle
mov
jo
or
repnz
roll
xchg
mov
out
cmpsb
repz
test
jne
je
xor
sub
fildl
icebp
push
xchg
sbb
rcl
lods
scas
cli
cmp
cli
enter
sbb
cmpsb
rcrl
and
cmpsb
stos
mov
into
mov
stc
idivb
mov
cwtl
arpl
mov
jae
stc
mov
aad
lds
sbb
call
sbb
in
push
sub
add
adc
or
loopne
fiadds
and
out
cs
enter
mov
adc
add
test
imul
out
mov
jecxz
insl
mov
push
mov
push
mov
add
cmp
out
cmp
xor
push
movsb
insl
xchg
jo
fcomip
push
mov
sbbb
or
mov
push
fsubr
das
enter
xor
pushf
mov
add
xchg
dec
subb
std
jle
das
push
addb
push
aas
adc
pop
and
xchg
loope
loop
mov
shrb
int3
sub
mov
push
gs
int3
push
push
cmp
jno
sbb
pop
cmp
les
adc
in
scas
adc
mov
in
mov
lods
sbb
test
lods
xor
sbb
pop
sub
ljmp
repnz
lcall
outsl
fidivrl
in
clc
mov
mov
adc
mov
daa
mov
cs
jl
aas
movsb
jg
ret
int3
scas
and
mov
mov
pop
cmp
or
mov
lock
lcall
and
inc
cmc
push
adc
jnp
dec
sahf
fstps
add
mov
scas
cwtl
mov
scas
cmc
leave
pop
ss
push
test
cmc
add
jge
mov
push
cmp
mov
cld
push
js
adc
rcll
ja
mov
mov
ffreep
add
repnz
jo
hlt
inc
in
mov
dec
ret
push
adc
lods
stos
push
int
mov
lcall
add
pop
adc
dec
enter
jmp
cwtl
or
push
lahf
fisubl
jo
scas
jle
add
dec
imul
xor
push
adc
mov
inc
stc
in
add
int3
cs
mov
inc
adc
dec
mov
dec
push
shl
cwtl
fst
xor
and
jle
xchg
add
or
push
sub
sub
fcmovb
cltd
xlat
rclb
aas
das
sarb
xor
adc
inc
adc
into
cmp
inc
sbb
jmp
imulb
dec
out
xchg
in
orb
jp
pop
cmp
ret
xchg
push
sbb
mov
cmp
aad
ja
mov
cmpsl
xor
call
hlt
and
pop
dec
dec
xor
sbb
mov
stc
ret
fildl
or
arpl
dec
push
adc
push
cmp
pop
mov
inc
xchg
cmpsl
inc
bound
inc
push
sbb
push
out
pusha
sub
dec
outsl
movsl
cmp
movsl
adcb
mov
pop
wrmsr
fcmovne
mov
adc
jle
mov
push
jle
xchg
cmp
out
mov
daa
hlt
negl
mov
jne
and
sub
fcomps
sub
cmpsb
idivb
enter
xlat
icebp
jns
cmc
outsl
dec
xor
in
or
jae
hlt
nop
jne
lods
mov
fbld
clc
out
ja
in
ljmp
hlt
mov
inc
popa
lret
aam
lret
jmp
arpl
insb
jge
repz
notb
or
dec
clc
inc
mov
push
adc
ljmp
inc
xchg
xchg
push
outsb
mov
push
cs
pop
enter
insb
adc
xchg
jno
mov
test
jne
aam
or
stos
inc
or
xlat
xor
outsb
and
test
push
movaps
cmpsl
stc
add
popa
shll
dec
lods
das
jno
loope
xchg
je
xchg
nop
sbbb
sub
add
idiv
dec
mov
mov
add
xchg
repz
mov
ljmp
xchg
sbb
ret
shll
repz
jbe
in
dec
jecxz
mov
aam
xchg
push
mov
mov
sbb
mov
adc
cli
in
les
sub
pop
mov
mov
push
outsb
pushf
add
xchg
xor
and
add
mov
cmpsb
mov
pop
iret
outsl
imul
stc
scas
addr16
icebp
aad
adc
xchg
jne
mov
and
arpl
and
fsubs
pushf
mov
mov
add
mov
adc
pop
shlb
and
cmp
mov
mov
aas
dec
mov
inc
jp
les
xlat
imul
add
int3
xor
add
xor
sbb
ljmp
and
sarb
xchg
repz
cmp
call
jp,pt
jp
mov
call
gs
into
cltd
hlt
and
mov
xor
int
repnz
dec
fsub
scas
ja
and
mov
push
mov
sti
jg
mov
xor
sub
dec
mov
cltd
mov
bound
push
add
iret
inc
pop
subb
inc
out
out
mov
adc
adc
decb
in
dec
lahf
cmc
arpl
push
hlt
stos
sub
into
std
loope
xchg
in
stos
lret
add
sbb
sar
pop
insb
or
test
popf
mov
pop
ror
cmc
aam
js
cmp
jecxz
jle
mov
cs
add
call
mov
sub
and
lods
fadds
jmp
dec
cwtl
cmp
xor
lea
push
xchg
inc
sub
xor
adc
add
aad
dec
pop
faddl
jle
test
outsl
push
aam
pop
add
shll
or
mov
out
dec
pop
lahf
adc
aaa
testb
or
js
lods
lea
jecxz
sahf
dec
repnz
out
loope
and
and
call
aas
repz
xor
addb
and
mov
push
sbb
mov
lods
xlat
pop
lret
mov
sub
neg
in
call
jl
test
pop
jl
and
jbe
out
push
jns
inc
sbb
pop
pop
jp
mov
xor
xchg
out
test
jle
xorb
scas
cmp
mov
pop
fidivrs
dec
push
fstpl
int
xchg
filds
ret
xlat
and
mov
nop
cmp
test
push
inc
insl
cmc
cmp
cmpsb
stos
test
lret
dec
jp
jg
mov
mov
int3
lock
aaa
push
dec
dec
adc
stos
mov
dec
xchg
lds
lea
jg
or
sti
xchg
into
mov
mov
xor
xor
fimuls
cmpsb
lock
out
cltd
mov
test
and
cmp
pop
dec
frstor
sbb
sti
nop
or
jo
fdivrs
jecxz
pop
ja
outsb
or
out
into
popa
in
arpl
ret
stos
in
jmp
pop
in
sub
cld
pop
xor
push
cmp
fidivl
fisubl
adc
test
insl
pop
mov
aaa
stos
add
push
xchg
das
inc
xchg
push
dec
xlat
or
pop
ret
mov
mov
dec
hlt
mov
or
dec
es
pop
or
sbb
xor
xchg
push
jg
or
repnz
push
add
lods
sbb
xor
fidivl
out
mov
add
xorb
in
popf
fldt
lock
rorl
cmp
push
xchg
jmp
inc
fcomps
loopne
sbb
jns
lods
push
or
inc
xchg
xlat
aam
cli
mov
or
test
pop
pop
rolb
pop
sbb
imulb
lret
xchg
xor
cld
mov
sub
jge
ffreep
imul
cmpsb
or
dec
fwait
imul
jle
cmp
insl
xchg
sub
jge
add
mov
std
add
testl
mov
daa
das
jle
into
test
add
mov
fistps
inc
lods
mov
mov
es
popa
dec
sar
jp
sub
orb
pop
jb
pop
es
cmp
mov
pop
or
ror
add
push
dec
into
cwtl
lret
sub
fcoml
int
jle
and
incb
add
adc
jl
xor
sbb
ds
sbb
cmp
and
jo
push
ljmp
sbb
pop
mov
xchg
mov
adc
dec
lahf
mov
mov
notrack
sbb
arpl
xor
mov
cmp
dec
cmc
pop
addb
adc
inc
adcb
push
xlat
mov
shrl
adc
dec
xchg
jmp
mov
jnp
movsb
sub
lahf
aaa
lahf
add
repnz
outsb
mov
cltd
jmp
sbb
mov
dec
xor
int3
xor
aad
and
push
aaa
sbb
pop
jnp
jmp
mull
cmp
in
inc
mov
ss
fwait
imul
enter
subl
lods
std
sbb
inc
xor
rorb
add
outsl
test
lds
fs
pushf
jnp
repz
jnp
lcall
enter
sub
dec
lret
pusha
mov
xchg
fcmovb
jecxz
in
ja
pop
xchg
sti
imul
cmp
aam
je
and
mov
dec
xor
adc
pop
mov
imul
push
lcall
add
orl
cmp
dec
dec
and
or
addl
adc
or
cwtl
stos
shll
add
inc
sub
ds
sti
js
pop
sarb
insb
dec
stos
add
into
scas
not
ret
mov
adc
aam
xchg
pop
loop
loopne
push
mov
cmpsl
cs
cmp
test
mov
cmp
das
cmp
cmp
lock
xor
push
scas
xlat
dec
pop
push
mov
out
test
mov
xchg
xchg
mov
loop
cltd
mov
push
je
lods
mov
andb
add
insb
dec
or
lds
push
ret
sbb
adc
nop
lcall
shll
enter
lea
add
cmpsb
xchg
in
addr16
jge
adc
or
mov
enter
ja
fcompl
sbb
ret
xchg
cmp
sub
gs
out
je
xor
sub
jae
sbb
adc
pop
or
std
es
pop
jnp
into
loop
mov
mov
cmp
inc
mov
push
and
call
imul
pop
or
loopne
lods
ja
mov
out
shl
cmpsl
fdivrl
jbe
nop
lods
sti
mov
sahf
scas
and
inc
add
adc
dec
or
sbb
insb
push
lahf
jo
sub
or
loope
inc
xlat
xchg
into
push
pop
adc
int3
lcall
dec
jge
test
and
js
leave
adc
sub
jmp
add
lcall
jno
mov
gs
jb
cmp
sbb
ret
jmp
cs
jmp
ret
sarb
loope
stos
mov
mov
lock
insl
inc
out
xor
push
lea
stos
or
test
ds
in
outsb
push
mov
fldcw
mov
push
ds
pop
int3
ljmp
imul
inc
add
ret
mov
smsw
jne
shlb
xor
int3
jnp
xchg
cwtl
and
jp
cld
adc
pop
shlb
ret
in
dec
inc
popa
pop
dec
aam
add
inc
sarl
cmp
jns
inc
movsl
add
jne
into
ret
mov
sarl
mov
dec
cltd
outsl
out
cmp
scas
rcr
mov
ljmp
pop
xchg
dec
xor
out
sub
insl
ret
xor
jge
mov
movl
clc
mov
imul
idivb
sub
sub
push
aaa
or
push
ja
add
cmpb
test
jg
adc
loope
add
jecxz
test
sub
lods
pop
mov
cmpsl
adc
mov
push
roll
imul
jns
pop
cmpsl
pop
lds
mov
out
inc
sbbb
dec
fcompl
cwtl
dec
sbb
popf
mov
cwtl
pushf
jb
mov
arpl
and
push
xchg
mov
sahf
or
sub
push
xchg
repz
aas
xchg
aam
xchg
mov
mov
jg
js
pushfw
add
xor
xchg
adc
xchg
subl
add
sbb
adc
xchg
sbb
scas
cmpxchg
les
mov
sbb
adc
lock
hlt
std
cmp
adc
dec
jnp
test
icebp
jl
xchg
lds
jg
addr16
xor
mov
sarb
lcall
push
dec
add
mov
in
xor
mov
adc
sub
jge
add
ja
add
nop
jne
xchg
out
leave
dec
sub
pop
sbb
push
popf
iret
add
adc
stos
pop
je
mov
ret
iret
add
dec
xor
nop
out
jecxz
rorl
decl
les
mov
mov
mov
pop
dec
insl
cmp
mov
movsb
push
pop
inc
dec
jge
xor
mov
and
xchg
hlt
dec
daa
push
in
pop
lods
or
sub
and
mov
xchg
movsl
mov
cmp
sti
jge
sbb
mov
std
sub
jp
mov
xor
lods
mulb
sbb
push
out
fidivs
push
mov
lea
adc
outsb
sti
fs
jp
push
cmpsb
pop
mov
inc
jne
cli
fdivrs
repz
lods
scas
cmp
dec
dec
pop
and
leave
int3
mov
pop
clc
push
xchg
push
mov
xchg
and
or
dec
adc
push
mov
add
mov
sbb
test
imul
sub
pop
mov
inc
adc
mov
cmp
cmp
fwait
xor
loopne
mov
leave
cs
daa
adc
cmp
fiaddl
push
bound
adc
cltd
xor
push
pop
mov
mov
imul
ss
mov
ja
cmp
les
lret
cmp
pop
lret
xchg
aam
lahf
mov
dec
push
rcr
ficoms
arpl
insb
in
jb
subb
addr16
xor
les
pop
inc
nop
iret
jmp
ret
fdivrp
cmp
mov
pop
xchg
mov
cmp
jo
pop
out
sub
jbe
mov
data16
push
jnp
hlt
adc
fs
xor
ret
pushl
loopne
dec
pusha
sub
pusha
test
mov
adc
lcall
sub
daa
pop
add
cmp
push
dec
ljmp
loope
cmp
sbbl
gs
aaa
ds
call
imul
adc
and
fcomp
sub
mov
arpl
fsubrs
mov
hlt
ljmp
push
mov
stc
push
pop
lret
aam
sete
adc
lock
pushl
pop
mov
inc
sbb
inc
adc
fdivs
or
shll
mov
pop
std
push
ret
mov
scas
xchg
lret
lret
jmp
lret
shl
mov
push
movl
fs
mov
jecxz
xchg
mov
cmc
mov
xchg
gs
or
adc
add
xor
push
inc
jne
data16
xor
in
js
test
imul
stos
test
xchg
dec
xor
popa
cmp
pop
and
and
gs
cmp
fwait
cmp
or
mov
idivl
fcomip
sub
stos
outsl
bound
adc
rcl
adc
inc
pusha
sub
mov
mov
adc
and
mov
or
cld
lock
jns
cmp
add
addr16
popf
popf
mov
or
dec
mov
out
popf
shrl
jmp
out
cmp
in
scas
xchg
pop
repnz
push
pop
stc
mov
jge
inc
pushf
push
in
pop
inc
pushl
fwait
push
dec
shll
mov
pop
sbb
push
push
xchg
ret
lods
iret
xchg
hlt
lods
inc
call
mov
sbb
jns
je
js
sub
jecxz
dec
cmpsl
sbb
jae
push
fidivs
ror
jb
dec
hlt
cmp
pop
xor
add
add
push
aaa
xchg
mov
testl
mov
pop
or
bound
decl
lock
and
lret
aas
cmpsl
and
cmp
inc
jge
gs
inc
cs
jp
mov
test
or
sbb
sub
mov
imul
mov
js
mov
nop
insb
mov
mov
push
adc
jl
mov
push
mov
aaa
add
lret
mov
xchg
shlb
adc
sahf
jmp
ret
push
adc
push
lret
arpl
cli
push
daa
outsl
jno
push
idiv
ljmp
xor
shrl
fcomip
ja
in
repnz
mov
mov
xor
add
dec
xor
jne
mov
mov
mov
sahf
sbb
mov
pop
mov
jmp
adc
mov
test
sbb
xor
cmp
popf
xchg
add
mov
imul
add
aam
lahf
das
xchg
cmp
xor
lret
repnz
loopne
push
pop
push
push
fsubr
pop
sarb
and
mov
dec
mov
jge
cmpsb
cmp
cmp
mov
or
dec
push
loope
xor
mov
das
jmp
iret
sub
cmp
scas
pop
aas
push
pusha
sarl
arpl
push
xchg
jge
std
adc
int
out
sub
cltd
sbb
std
addr16
push
pop
out
data16
rorb
sbb
inc
inc
ds
ss
xchg
loope
pop
icebp
ret
in
std
rorb
jle
add
mov
lahf
test
popa
add
dec
loope
std
repz
cmpsl
inc
inc
cmp
inc
rcl
sub
fsubrs
mov
ja
push
in
mov
jmp
in
ret
lret
jle
movsb
and
push
jne
sbb
sub
and
sti
ss
cwtl
mov
fisttpl
sbbl
adc
orb
mov
loop
clc
inc
les
adc
test
scas
jo
push
fsubp
jg
inc
repz
xor
int
shll
cmp
xor
push
mov
imulb
xchg
out
and
arpl
pop
hlt
cltd
std
add
inc
jno
cmp
jo
push
pop
jmp
jns
gs
pop
fistpl
addr16
or
adc
dec
cmp
repnz
cmpsl
add
mov
mov
stos
mov
in
aaa
lahf
loop
jge
leave
xor
pusha
or
stos
or
jmp
je
xor
add
xchg
movsl
adc
mov
out
test
dec
nop
inc
and
push
dec
mov
pusha
inc
ljmp
inc
gs
fdivrs
inc
fisttpll
imul
jl
std
pop
ficoms
jg
pop
push
test
push
insb
adc
pop
fisubs
movsb
xchg
jno
out
int
insb
lds
cli
cmp
shr
add
mov
cli
notb
mov
subb
lds
cld
inc
jb
cmpsl
adc
lods
cwtl
test
imull
pop
pop
aas
fistl
nop
xchg
ss
cmp
or
dec
fldenv
jmp
mov
adc
into
mov
loope
mov
dec
into
mov
inc
das
and
lock
repnz
test
dec
int
into
cmp
adc
add
popf
inc
ja
push
jmp
add
sub
aam
stos
out
adc
or
out
push
lahf
jp
jns
push
dec
test
aad
mov
aam
hlt
lods
out
xchg
pop
gs
lods
ret
sbb
call
les
push
fcomi
addr16
sub
dec
call
jo
push
iret
ret
push
push
test
push
stos
andb
call
cmp
shrl
xor
cmp
addl
push
inc
xchg
xor
leave
cmpb
test
out
sbb
jae
daa
imul
mov
pop
call
test
les
xor
add
jno
or
bound
add
sub
fstl
stos
imul
enter
cmp
pushf
daa
addr16
xchg
add
mov
subb
mov
xor
jne
cmp
insb
cli
xchg
xorb
mov
int3
ffreep
dec
mov
mov
dec
cmpsb
lds
add
push
shl
and
or
xor
adc
jne
das
mov
mov
aam
daa
lock
mov
push
jg
jmp
push
addr16
sub
cld
movsb
mov
add
clc
cwtl
jb
push
pusha
in
xchg
xor
jb
sahf
mov
xchg
pop
inc
lret
push
and
mov
mov
gs
inc
xor
stos
dec
xor
stos
dec
sub
mov
nop
jns
dec
and
out
ljmp
sub
xchg
sub
mov
lret
ret
xchg
lahf
jnp
dec
gs
pop
jge
push
popf
or
ret
and
push
mov
lahf
shlb
sbb
loope
jg
outsb
out
xchg
mov
lret
mov
dec
inc
mov
sbb
mov
jl
mull
aam
push
std
add
mov
outsl
shll
in
sub
sbb
std
fsubr
vandnpd
fildl
ljmp
pusha
and
jg
les
enter
sbb
lret
sub
cmp
sub
mov
rorl
inc
sbb
pushf
insl
sub
out
andl
aas
add
xor
inc
jle
xchg
xor
aas
insl
cld
shll
or
cmpsb
rcl
pop
cli
mov
lret
cmp
jle
cli
outsb
mov
movsl
cli
mov
lcall
add
hlt
push
dec
popf
inc
mov
push
push
sbb
shr
add
or
adc
outsl
sub
movsl
mov
out
std
iret
fdivrl
insb
imul
xor
aam
push
lods
fisubrl
cwtl
js
jnp
xor
iret
int
mov
sub
arpl
insl
dec
cltd
add
xchg
fcomip
pop
add
das
out
shll
mov
push
test
pop
mov
sbb
ljmp
test
insl
bound
outsl
mov
sbb
ja
xor
outsl
nop
pop
push
push
or
fsubrs
dec
in
int3
dec
jae
idivl
cmp
sbb
mov
sbb
test
es
mov
xchg
sub
insb
dec
imul
das
fcmovnb
xchg
aaa
lea
or
mov
dec
aaa
ja
xor
roll
pusha
lret
insb
xchg
mov
or
mov
out
cmpsb
mov
leave
xchg
fcoms
das
pop
aad
loop
sbb
jbe
xchg
icebp
jae
ljmp
dec
mov
mov
jp
shlb
fwait
and
and
aas
repnz
out
aad
cmpl
dec
mov
jle
or
lcall
push
cmp
lock
stc
jp
int
or
in
jnp
in
je
push
std
sbb
jno
pop
or
pushf
dec
jnp
cmpsl
cmp
mov
std
sbb
push
and
sub
jbe
and
scas
cmp
pushf
and
jecxz
push
and
and
pop
cmp
loop
xchg
mov
fcomi
data16
or
fnstenv
mov
imul
dec
inc
aas
aam
jno
shlb
or
lret
xor
adc
xchg
pop
cli
movsl
aad
out
stc
or
and
xor
addl
lahf
mov
inc
jae
call
sbb
xor
inc
adc
fnstcw
lds
xchg
jbe
gs
rclb
push
mov
sti
daa
dec
sbb
inc
jbe
xor
enter
jmp
mov
push
repnz
adc
and
add
popf
lea
cmpsb
sbb
orl
cld
not
add
mov
adc
lret
nop
addr16
loopne
dec
push
jp
or
je
insl
sbbb
push
cmp
lds
ja
fdecstp
sbb
sub
xlat
dec
ret
push
cwtl
jmp
rorb
stc
pushf
bound
and
or
mov
pop
xor
outsb
sahf
mov
sahf
fistpll
je
out
shrb
jne
dec
jle
sbb
shll
addr16
and
add
pusha
sub
pop
xchg
lahf
push
fimull
inc
movsl
or
sub
xchg
mov
int3
out
pop
outsl
and
cmp
mov
adc
test
mov
cmpsl
ss
xchg
push
pop
xchg
pop
jge
cmpsl
or
jp
popf
nop
or
fimull
inc
arpl
aam
rcrb
dec
testl
ss
or
scas
mov
into
pusha
mov
movsb
rcll
jl
mov
xchg
pop
dec
insl
andl
sub
sbb
push
idiv
movsl
xor
negb
ds
mov
movsb
repz
sbb
sub
neg
lcall
mov
pop
mov
in
mov
shrb
sysexit
cmp
jns
repnz
xchg
loopne
sbb
inc
incb
iret
insb
mov
cmpsb
push
js
dec
inc
or
pop
xchg
jb
mov
hlt
lahf
or
mov
mov
xchg
sub
lcall
xor
xlat
movsl
sbbl
data16
push
insl
std
gs
sbb
mov
mov
mov
dec
adc
add
jne
in
clc
xor
sbbb
mov
shrb
dec
dec
cmp
adc
dec
test
outsl
add
push
std
imul
flds
push
in
add
mov
xchg
jbe
push
sbb
fcomip
mov
pushf
inc
test
fdivl
fwait
pusha
push
loop
sub
push
stc
adc
sub
sub
in
pop
and
or
sub
pop
push
cli
fcmovnu
fdivr
fidivrl
or
adc
sbb
jecxz
xor
sub
fdivr
mov
push
enter
rcrb
and
xchg
fstps
xchg
popa
add
lods
mov
aad
inc
jbe
xor
mov
shrb
cli
push
cli
jne
pop
jae
xchg
mov
jp
ja
cmp
movsl
mov
mov
dec
dec
lock
add
sbb
loope
add
mulb
pop
icebp
loope
add
jp
push
mov
jge
jnp
outsb
lahf
push
fsubrl
pop
orb
sbb
mov
xor
ljmp
bound
mov
dec
inc
cmp
orl
into
jecxz
or
sub
dec
lret
sbb
push
sub
mov
ja
jl
ja
adc
sub
push
rcrl
out
andb
out
enter
jp
sar
cwtl
pop
aaa
lods
cmp
mov
push
jbe
xor
xchg
xlat
gs
pop
inc
addr16
fstl
inc
adc
xlat
cld
loope
cmc
xlat
andb
mov
mov
add
mov
es
fwait
jmp
inc
xchg
dec
dec
push
and
cmp
mov
mov
dec
sar
inc
aaa
push
movsb
iret
in
and
shrb
ret
fs
stos
gs
pop
jmp
dec
xchg
int3
out
aam
lods
add
jns
subl
xchg
fnsave
or
popl
out
lcall
rcll
subl
jno
icebp
push
repz
shl
daa
jae
cwtl
xchg
clc
sbbb
adc
xor
idivb
dec
mov
test
aam
fcmovne
repz
cli
xchg
in
cmc
mov
or
and
mov
or
stc
sbb
pusha
inc
pop
mov
mov
aas
lea
outsb
fwait
xchg
fstps
cmp
repz
dec
cmpsl
push
stos
dec
lret
out
jnp
scas
fldl
xor
pop
push
pop
das
lcall
dec
inc
in
out
mov
cmp
int3
xlat
xchg
add
daa
test
fcmovbe
mov
ds
xor
std
mov
mov
xlat
or
lds
xchg
cmp
stos
push
int
pop
movb
test
add
pop
shll
xor
or
pop
les
mov
mov
mov
mov
adc
jg
lahf
leave
or
out
loope
jl
std
in
xor
cmp
std
pop
inc
sbb
mov
push
je
rclb
sar
aad
or
mov
cmp
fistpl
movsb
out
sub
push
push
iret
adc
std
lret
pusha
pop
cmp
fsubrl
paddd
das
push
stc
insb
push
std
mov
xor
lods
fwait
mov
cmp
jp
shll
fisttpl
jb
or
mov
sti
aas
into
cmp
adc
inc
lahf
ss
fists
adc
inc
out
out
mov
in
scas
jle
test
inc
xchg
pusha
or
repnz
cld
mov
shlb
jmp
mov
and
mov
ljmp
out
jge
pop
push
bound
js
mov
iret
adc
outsb
dec
js
enter
or
dec
hlt
xor
lret
sbb
jmp
pop
add
inc
xchg
cld
dec
pop
and
loop
pop
out
aaa
cmp
mov
mov
cld
loop
je
xchg
jne
add
incb
inc
test
mov
lds
pop
pop
aam
sub
in
mov
lea
outsb
lcall
push
cmp
out
jne
into
mov
mov
int3
in
roll
adc
clc
mov
call
and
dec
fisttps
loop
scas
clc
mov
out
out
xchg
and
push
inc
andl
scas
and
fsubs
lds
sbb
shl
cmp
mov
outsl
jne
and
decb
fisubrl
mov
mov
inc
jb
push
inc
ss
out
repz
fidivrs
mov
inc
pushf
inc
jmp
stos
mov
push
aam
insb
mov
cltd
sti
pop
adc
or
pop
loope
popa
pmaxsw
inc
sti
sbb
test
xor
loope
fs
inc
nop
inc
mov
sub
pusha
out
scas
xchg
in
lods
cmp
sub
xchg
loope
xchg
movsl
cmpsl
testb
bound
fbld
lahf
or
cmp
rclb
add
lret
cmp
fdivr
cmp
int3
or
adc
in
and
rcrl
gs
xchg
lret
fiaddl
popa
add
jge
fcomps
repnz
mov
cltd
sbb
movsl
xorb
pop
popf
test
jl
or
push
adc
mov
jne
adc
int
jl
and
in
and
xor
pop
push
sub
imul
push
in
push
setge
dec
and
jno
xor
fadds
leave
ficoms
cmpb
pop
xor
popf
aaa
cmp
cmp
pop
call
lahf
movsb
jae
xchg
fdivrp
sti
dec
dec
adc
or
pop
aad
out
repz
out
xor
popf
or
push
in
movsb
dec
push
mov
out
popa
sar
imul
dec
aaa
and
lods
in
cmpsb
ret
dec
sbb
gs
dec
push
mov
and
fwait
popf
push
sahf
pop
sbb
aas
push
pushf
or
rol
in
iret
ds
scas
in
push
dec
bound
imul
push
fwait
lods
repnz
out
mov
enter
andb
or
mov
or
les
clc
add
fsubl
cmp
imul
add
aaa
mov
imul
ret
xchg
dec
pop
movsl
out
mov
sub
std
movb
iret
clc
aam
inc
bound
jno
loope
std
sbb
sub
aad
stc
repnz
xor
cld
cltd
dec
sti
andb
mov
sbb
or
out
sub
fidivs
shlb
dec
xchg
jne
icebp
out
mov
fdivrp
mov
xor
cmp
das
incb
sbb
sbb
clc
add
roll
sub
xorl
andb
arpl
push
pop
fidivrl
js
inc
push
adc
pop
lds
std
push
mov
push
movsb
mov
jbe
ja
int3
xlat
gs
cmp
dec
pop
adc
popa
call
test
pop
out
stos
in
aas
xchg
and
pushf
adc
sub
sbb
adc
clc
fstps
sub
into
sub
jns
dec
adcb
shll
leave
incb
sub
int
in
fdivrs
adc
cmp
xchg
mov
cs
push
out
fwait
pop
jle
mov
pop
cmp
inc
lods
or
cmc
cs
popf
out
repnz
sub
lock
mov
push
push
jae
adc
cs
pusha
mov
rorb
cld
mov
pop
addr16
and
mov
sub
sbb
mov
cmpl
iret
movb
mov
leave
lahf
push
das
cmc
aaa
stc
mov
stos
leave
xchg
loopne
iret
push
frstor
jno
xor
test
cmp
cwtl
lcall
cmpsl
cmc
cltd
imul
inc
push
pop
jbe
mov
bound
mov
shll
inc
mov
dec
mov
in
mov
lods
gs
aas
mov
adc
in
or
mov
mov
pop
mov
aaa
or
mov
pop
push
or
xchg
fptan
xor
mov
inc
imul
push
leave
cmpsb
adc
xchg
inc
cmc
jo
and
xlat
cmc
pop
cwtl
xor
ret
add
adc
xchg
lret
lret
jno
ljmp
pop
repz
cmpsl
push
icebp
enter
adc
push
pop
mov
pop
sbb
nop
test
jns
fs
repnz
nop
js
jp
pop
mov
mov
outsb
or
pop
lret
subl
bnd
scas
cwtl
mov
outsl
fadds
lret
sub
mov
lahf
lcall
outsl
inc
loope
cld
out
adc
xchg
ret
loope
arpl
in
std
jmp
sbb
xlat
jno
jmp
pop
xchg
shlb
sbb
cmp
xchg
jb
clc
mov
mov
into
cli
xorl
orl
jo
into
sbb
shr
jns
movl
mov
sahf
fsubl
std
inc
and
ljmp
sub
std
push
sub
popa
adc
leave
cwtl
lret
iret
push
int3
jnp
pushf
sub
inc
sbb
pop
mov
pop
lock
xor
loop
jg
push
scas
mov
mov
dec
jno
dec
xor
rcrl
cmp
mov
inc
sbb
sbb
mov
push
jae
sbb
push
fsubp
jle
push
mov
aam
push
pop
dec
lds
or
dec
push
loop
dec
sbb
int3
int3
mov
cmpsl
push
sahf
repz
xor
mov
mov
in
cmp
jle
xchg
sub
adc
push
rorb
pop
jne
jmp
add
sub
and
enter
sub
adc
test
shr
popf
xchg
stc
or
hlt
in
mov
jno
fisubs
xchg
or
mov
mov
mov
jo
addr16
mov
leave
sarl
add
push
sub
mov
and
addr16
sbb
sub
sbb
int
and
mov
xor
inc
cmp
cmpl
lret
mov
aas
das
cmp
lock
sbb
xor
in
loope
add
cmp
xchg
hlt
ds
enter
xor
jbe
push
jmp
adc
sub
scas
enter
fildl
stc
inc
into
xor
repz
inc
pop
push
inc
je
roll
xor
jmp
adc
xor
mov
shrb
mov
adc
jge
lea
jns
adc
sub
mov
and
xchg
orl
xchg
sub
sti
and
stos
cmp
mov
mov
adc
sub
mov
jno
pop
adcl
and
sbb
pop
push
arpl
ljmp
gs
div
mov
xchg
dec
cmp
fdivl
cmp
stos
leave
pop
mov
pop
fiadds
pop
cmp
jecxz
mov
mov
push
in
scas
out
pusha
xor
push
xor
inc
insl
lods
jb
shlb
lea
fs
fldcw
xchg
mov
or
and
adc
test
imul
mov
fisttpll
orb
out
sarl
fsubs
mov
lds
into
inc
movsb
pop
loop
dec
add
jae
lahf
jno
sbb
mov
inc
mov
idivl
negb
sub
fmuls
mov
adc
loope
lahf
jmp
popf
xchg
lods
inc
jae
cltd
pushf
push
cld
cmp
xchg
fs
addb
sub
inc
sub
inc
test
loopne
not
out
sbb
loopne
adc
mov
adc
pop
popf
mov
jmp
adc
fdivrs
jmp
adc
imul
push
mov
sbb
xlat
cli
arpl
pop
test
jmp
and
loopne
fs
lea
and
and
jns
mov
adc
sbb
call
popa
pop
out
cs
or
out
ret
cmp
jp
cmp
loop
adc
rcl
call
jl
mov
xchg
scas
and
pop
ja
and
inc
ljmp
xlat
std
lock
jbe
shrb
xor
push
jge
push
push
into
shll
loop
sbb
and
mov
pop
outsl
into
popf
adc
mov
mov
lods
mov
mov
add
insb
in
subl
mov
sub
dec
pop
pop
push
dec
sahf
std
jbe
pop
popf
adc
mov
fisubl
test
cli
pop
rorb
inc
movb
mov
lods
lock
into
lock
jo
incl
push
sbb
movsl
aaa
lock
popl
call
in
aas
decb
cs
or
ret
sub
out
or
aaa
mov
insl
pop
js
sub
push
stos
mov
pop
lock
xchg
gs
mov
cli
push
add
imul
sbb
rcrl
mov
insb
ret
enter
lock
mov
aad
dec
out
mov
add
inc
and
sub
insl
xor
or
xor
shl
jecxz
in
cmp
js
and
or
pop
sahf
xor
sub
sbb
add
jae
lret
and
les
cwtl
add
xor
cmp
sub
sbb
dec
push
popa
and
xchg
aad
cmp
xchg
dec
xchg
sub
ja
test
test
and
push
sbbb
inc
incl
and
inc
je
arpl
idivl
outsl
xchg
or
mov
pusha
xor
fs
mov
faddp
and
jno
jns
in
jbe
out
xorb
jnp
add
icebp
add
cld
jmp
lds
lods
scas
jecxz
nop
mov
pop
frstor
and
dec
lods
mov
out
jne
outsb
mov
inc
test
jl
in
mov
and
push
pop
jmp
sub
insb
leave
xor
pop
add
shrb
sub
fsts
test
jae
push
bnd
lahf
jb
vsubpd
fidivl
sbb
rol
ja
mov
clc
mov
sbb
lahf
jecxz
jnp
cmpsl
aaa
mov
fcoms
and
jecxz
sub
shlb
or
lret
cmp
jl
out
inc
inc
das
pushf
pushf
addb
out
push
jns
jb
pop
xor
iret
mov
sub
push
dec
push
jecxz
and
lahf
dec
rol
les
movsl
mov
jno
sub
and
push
mov
lahf
outsl
mov
jp
mov
and
mov
mov
dec
mov
cmpl
add
push
adcl
jp
test
push
icebp
subb
mov
popa
inc
xchg
inc
xor
push
rcll
ss
test
ja
xor
bound
adc
fbld
out
cmp
add
push
shrb
adc
xchg
push
push
sbb
mov
pop
and
cmp
pop
sbb
aam
in
push
mov
cmp
rcll
push
or
mov
cmc
es
pop
cmp
dec
inc
pop
shrb
in
cmp
imul
scas
sbb
mov
in
cmp
sub
jo
jecxz
pop
mov
das
aaa
adc
and
repnz
cmp
or
mov
in
add
arpl
fsubrp
pop
sub
jno
add
lcall
xor
jb
and
xchg
arpl
loopne
subb
or
adc
mov
call
sbb
in
fidivrl
jo
inc
dec
jbe
je
adcb
adc
xorb
dec
adc
fistpl
cld
jbe
mov
mov
sbb
rclb
jecxz
add
dec
or
sbb
mov
sarb
sbb
push
das
inc
divl
push
icebp
mov
out
fsubrs
cmp
out
pusha
mov
cmpsb
add
sub
sbb
dec
adc
lret
insb
jle
in
xor
fmull
adc
cmpsb
mov
push
adc
mov
mov
daa
cmpsb
mov
jmp
cmp
gs
push
jg
or
push
inc
lcall
mov
xor
pop
dec
jl
clc
nop
test
xor
nop
dec
pop
mov
aam
stos
mov
cmp
dec
lret
lock
dec
sbbb
popf
and
push
stos
pop
shl
insb
subb
pusha
shrl
push
mov
xor
ljmp
aas
xor
fsubrl
xor
jne
fsts
loopne
add
ss
sbb
data16
dec
inc
xchg
push
out
bound
rcrl
lea
mov
dec
mov
jmp
pop
ss
std
and
pop
std
lret
jo
and
jns
imul
aas
push
sahf
mov
adc
jle
dec
pop
jae
cmp
cli
dec
mov
sbb
mov
dec
push
or
xor
sahf
push
jo
adc
daa
sub
stos
and
xchg
mov
mov
xchg
cmc
jae,pn
nop
stc
fiaddl
fistpll
sbb
cmp
enter
aad
jae
jp
js
push
jp
pop
rolb
test
lahf
fidivrs
or
imull
inc
xor
inc
cld
jbe
mov
inc
fdiv
sbbl
mov
loope,pn
sbb
push
data16
xchg
sub
sarb
push
fcmovu
js
mov
imul
sub
es
gs
mov
scas
sbb
fiaddl
out
mov
or
pushf
rorl
stos
sbb
mov
out
push
cmpb
fidivl
ret
add
mov
in
out
sbb
jbe
and
leave
push
rolb
cs
jns
data16
fidivrs
cltd
cmpsl
xchg
insb
jne
lret
xor
jmp
add
cmove
xchg
lods
aas
add
mov
imul
xchg
pop
popa
xor
cmp
xchg
outsl
aad
xor
nop
flds
mov
push
dec
jbe
or
xchg
mov
sbb
push
fsubr
jmp
adc
pop
test
xor
pop
jne
aam
mov
test
in
movsb
jne
aas
sub
pop
sbb
cmpb
mov
mov
testb
dec
jge
out
inc
push
outsl
adc
cmp
je
xor
ljmp
out
xor
loope
loop
sar
mov
dec
sub
jmp
jae
out
xchg
les
mov
pop
sub
add
in
int3
xchg
scas
or
mov
ja
outsl
roll
cmpsl
ja
loope
iret
mov
jns
js
cmp
lret
cmp
inc
sti
or
jmp
lock
test
shlb
int
lods
jb
ficoml
cli
ror
fsub
iret
mov
jae
jg
movsl
into
gs
pop
push
mov
mov
outsl
pushf
mov
mov
cmp
loop
mov
lods
dec
inc
repz
orl
adc
jecxz
pop
stos
dec
cld
or
cli
mov
cmpb
pop
and
int3
push
aam
push
xor
sub
dec
xor
push
and
aad
dec
vmovhpd
stos
and
jns
or
mov
stos
and
mov
ds
movsb
pop
jnp
pop
inc
cwtl
idivl
push
js
in
stos
cmpsl
adc
inc
roll
je
push
add
adc
mov
es
cmp
jae
mov
stc
adc
scas
sub
inc
push
pushf
call
repz
sub
and
hlt
xor
in
shrb
ret
out
movsl
dec
testb
push
enter
decl
cli
jg
adc
sti
repz
xlat
mov
xchg
sbbl
pop
hlt
push
stos
fwait
dec
daa
add
mov
insb
add
xchg
sarb
stos
paddq
push
arpl
dec
adc
aas
and
jle
sbb
cmpl
adc
pushf
lret
push
mov
pop
jmp
jne
pop
out
sbb
cmp
into
push
jo
mov
pop
mov
rcr
pop
cltd
stc
repnz
push
adc
fldt
add
int
rclb
or
mov
push
inc
incb
into
outsl
int
xchg
adc
call
loope
pop
cmp
add
stos
popa
mov
sbb
pop
shr
aas
in
ret
sahf
not
mov
lahf
or
and
sbb
mov
les
pop
pop
mov
or
out
js
lea
adc
scas
out
push
inc
mov
testl
pop
bound
test
lock
inc
popf
divl
in
sbb
scas
out
lcall
das
sbb
jg
sub
push
jae
or
sbb
inc
rorl
cmp
or
mov
mov
jo
cwtl
xor
dec
pop
jge
pushf
xchg
mov
pop
or
push
in
call
add
xor
xor
cld
inc
cmp
ret
pusha
pop
int
fistl
push
nop
sub
cmp
mov
push
cmp
jne
rorb
or
or
push
and
out
xchg
in
and
adc
repz
stos
out
mov
cmpsb
repz
les
nop
inc
sbb
push
ds
push
fwait
xchg
lea
xor
mov
inc
test
sbb
iret
in
negl
jbe
xor
xchg
ds
jmp
pusha
push
pop
out
add
add
test
das
fcoml
stos
mov
and
daa
cmp
shlb
sbbl
xchg
xor
mov
pop
adc
loop
mov
sub
jno
mov
mov
ljmp
xor
jg
xchg
dec
in
cmc
mov
mov
ret
jne
mov
jae
jle
or
inc
mov
or
xor
xor
ret
daa
xor
cmpsb
enter
popa
push
fsubs
xor
mov
add
andl
andl
call
mov
sar
push
insb
push
push
in
mov
xor
adc
retw
cltd
or
loopne
or
dec
inc
pop
push
popa
incb
cmp
es
test
pop
out
pop
xchg
in
das
dec
fcoml
lcall
mov
dec
cmp
inc
or
mov
mov
dec
aam
outsb
cld
inc
mov
fs
ret
lds
sbb
int
inc
scas
pop
and
jnp
les
pop
loopne
andb
push
insb
ss
test
aad
mov
scas
stos
add
out
mov
dec
pop
mov
fwait
aas
xor
outsl
push
cmp
jmp
dec
rcrl
out
das
into
cltd
sbb
pop
test
ret
test
in
sbb
aad
ret
shr
mov
int
iret
mov
and
in
int3
push
pop
scas
sub
stos
int3
insb
cli
pop
shrb
out
adc
lret
xor
push
pop
inc
inc
test
or
mov
push
jbe
shrl
pop
sbbb
xor
orl
ja
pop
inc
ja
repnz
and
jns
xchg
dec
dec
cld
mov
sbb
xchg
xorl
adc
mov
insb
cltd
xor
mov
jl
loope
scas
mov
inc
sti
scas
push
cmp
xor
ror
push
xchg
jae
addr16
xor
pop
lds
jb
jl
pop
cs
and
jl
or
cltd
xor
sbb
mov
pusha
dec
dec
sbb
shrb
push
mov
lock
dec
outsl
push
clc
in
repz
movsb
sbbl
daa
loop
add
inc
fisttpll
movsb
aam
or
popa
scas
outsl
ja
loop
aad
rol
std
push
fmuls
cs
push
sbb
pop
inc
mov
rolb
push
mov
lds
xchg
xchg
sub
loopne
mov
adc
adc
out
sub
shrb
adc
inc
fidivs
fs
in
scas
pushf
idivl
push
mov
push
mov
mov
mov
jmp
aad
push
pop
push
adc
loope
add
imulb
inc
ficompl
mov
adc
rclb
mov
pop
sbb
out
mov
sbb
cs
push
fwait
test
lds
out
cmp
dec
dec
stos
xchg
data16
cmp
jl
imul
xchg
mov
loope
sbb
or
dec
jns
mov
lods
shlb
das
mov
pushf
xchg
adc
push
mov
add
xchg
mov
ret
xchg
xchg
je
lds
pop
scas
inc
push
cli
sbb
ja
push
icebp
and
notl
push
xor
inc
test
inc
decl
inc
pop
push
lds
in
rolb
pushl
das
jl
lret
scas
imul
push
lcall
add
mulb
mov
pop
xor
mov
dec
cli
outsl
pop
xor
daa
sub
jne
pushl
sbb
fwait
mov
mov
jns
inc
in
xchg
jl
ds
dec
test
mov
xor
lock
std
jmp
dec
popf
pushf
in
out
push
add
or
push
fsts
xchg
aad
movsb
out
ror
mov
icebp
gs
sbb
cmp
xor
in
push
call
in
xor
mov
in
adc
and
es
pop
cmpsl
mov
push
mov
mov
outsb
cld
xchg
test
dec
cwtl
insb
cmp
and
xor
rcrb
mov
xchg
stc
sub
push
les
orb
scas
xchg
xchg
int3
cmpsl
aas
push
cmpsl
jnp
cwtl
stc
ret
repz
mov
scas
lcall
dec
adc
sbb
into
lods
jmp
lahf
sbb
and
push
push
ret
test
dec
rcrl
mov
dec
xor
lods
nop
xchg
and
push
jno
jmp
mov
jg
mov
sub
mov
dec
xchg
sub
mov
in
push
mov
test
rcll
fcompl
fs
jae
insl
sbb
and
mov
or
jbe
pop
test
push
in
aad
mov
int3
movsl
aam
and
mov
dec
add
jecxz
enter
adc
add
mov
ljmp
jo
push
push
jecxz
mov
rcrl
into
xlat
mov
loopne
jne
mov
mov
les
mov
ljmp
divb
cli
and
add
into
fists
hlt
fxch
repnz
rcr
pop
je
sub
es
sarl
sbb
aaa
xor
fwait
add
lods
inc
popf
jnp
test
inc
push
jo
pop
addr16
and
push
ljmp
push
out
push
cmpsl
leave
nop
movzbl
je
mov
repz
and
bound
sub
stos
sbb
ja
cli
pusha
mov
outsb
lds
into
ja
mov
lds
or
mov
das
xor
mov
sahf
xor
into
out
loop
mov
adc
push
insb
sbb
xchg
xchg
sub
xor
in
outsl
xchg
pop
subl
andb
addr16
inc
mov
dec
ljmp
lret
or
xchg
or
jno
cs
xor
mov
aam
and
mov
mov
stc
repz
and
icebp
mov
out
dec
mov
sub
outsl
int
cmp
pop
xchg
inc
out
insb
test
sub
sbb
call
shrl
jecxz
fildl
lcall
jp
sub
adc
xchg
sub
xor
or
lcall
ljmp
or
cs
jg
adc
mov
dec
ljmp
idivb
or
in
rorb
lcall
xchg
dec
shll
int
roll
loop
inc
adc
mov
adc
movsb
adc
pusha
adc
fwait
test
bound
test
xchg
sub
imul
icebp
push
nop
cwtl
lcall
lret
not
xchg
jge
pop
push
jg
and
std
hlt
xchg
xchg
jbe
pop
jb
cmp
lds
fscale
stos
dec
call
cmp
add
shll
fsts
pop
mov
mov
xchg
lds
cmp
enter
fists
xchg
lret
sbbb
ret
jge
and
pop
or
sub
mov
fwait
aas
xchg
pop
movsb
cld
pop
dec
outsb
imul
mov
mov
adc
arpl
pop
jl
pop
pop
hlt
mov
int
mov
ret
xchg
notl
sub
mov
lea
xor
mov
xor
popf
mov
cmovnp
xor
mov
outsb
fwait
xchg
loop
adc
jno
xlat
mov
mov
cmp
xor
rolb
clc
or
cmp
lea
dec
repnz
pop
in
add
mov
scas
push
cmp
outsl
shrl
out
adcb
insb
push
lods
jae
lcall
ss
cmc
dec
pop
dec
mov
mov
stos
sub
testl
movsb
sub
xchg
fmul
stc
jne
cltd
mov
sti
sahf
ret
xchg
or
call
pop
outsl
in
jno
shl
test
sbb
ja
mov
cwtl
jmp
fwait
mov
sub
in
adc
or
or
shrb
jno
sbb
int
dec
rolb
push
and
jecxz
mov
cwtl
cwtl
sbb
in
cmp
push
hlt
mov
jle
xchg
dec
cltd
pop
fistps
inc
test
dec
gs
ret
adc
negl
mov
sub
jae
xchg
mov
out
jle
outsb
aaa
cmpsl
cmovno
pop
mov
popf
adc
cmp
in
inc
lea
insb
andb
push
mov
test
loopne
cltd
xor
les
fdivr
imul
jl
ret
push
adc
lcall
pushf
loop
dec
xchg
xchg
repnz
sbb
inc
inc
mov
pop
adcb
jg
xchg
mov
mov
and
into
loope
add
fwait
sub
mov
sub
cli
inc
out
mov
fldenv
mov
into
lret
mov
and
mov
test
imul
sti
cmp
aad
fistl
and
scas
arpl
add
imul
push
sarl
and
jg
movsb
js
and
cld
mov
xlat
lock
rcll
lods
stc
scas
mov
jnp
add
repnz
mov
jle
jmp
lock
into
jle
add
ds
sbb
addb
imull
ror
push
inc
jle
scas
test
dec
sbb
mov
pop
jb
xchg
mov
sbb
mov
in
pop
je
pop
scas
movsl
inc
mov
xchg
inc
pusha
xor
test
lahf
dec
jp
stc
pop
pop
mov
fdivl
pop
mov
mov
or
add
and
addr16
sbb
loopne
dec
mov
aam
pop
test
jae
push
or
lcall
lcall
lods
fidivrl
icebp
jae
push
jae
bnd
mov
mov
or
imul
push
xor
mov
test
in
dec
ja
lods
add
fmul
inc
pop
cmpb
bswap
and
pop
add
xchg
enter
mov
enter
mov
mov
sarl
dec
mov
jae
notb
mov
cli
mov
mov
mov
mov
aas
pushf
pop
popa
cmp
cmp
mov
and
xor
mov
inc
outsb
test
bound
mov
push
jb
nop
adc
inc
xor
mov
xchg
xchg
pop
fmul
ret
out
cmpsb
loopne
lock
stos
js
mov
mov
mov
nop
xor
push
leave
sbb
sbb
lret
sbb
ret
adc
adc
popf
xor
lret
arpl
lahf
int
dec
sti
addr16
pop
les
mov
push
testb
sbb
jns
jo
adc
jmp
ds
sub
aam
jns
push
and
loope
add
mov
dec
lahf
mov
xchg
mov
jp
and
inc
mov
or
jb
add
push
cli
and
mov
sbb
loope
mull
cmc
hlt
sub
add
cmpsl
cmp
mov
mov
lds
mov
ror
xchg
push
gs
push
dec
fmul
or
shlb
adc
jb
stc
adc
push
mov
push
lret
xchg
pop
jae
scas
lcall
xchg
pop
call
hlt
fimuls
mov
es
out
aam
push
into
xlat
push
dec
jne
mov
es
es
push
push
sbb
enter
lock
mov
mov
jnp
xchg
sbb
xchg
xor
das
fistpl
dec
inc
or
mov
outsl
dec
testl
pop
add
movsb
inc
ret
push
xchg
or
gs
sbb
jge
mov
sbb
mov
aas
or
push
pop
xor
sub
xor
mov
cmp
orb
sti
mov
je
xchg
adc
popf
add
mov
into
xor
fnstcw
xchg
dec
xchg
push
movsb
or
pop
xchg
arpl
mov
ret
mov
inc
in
pop
dec
mov
mov
inc
xlat
cmp
fisubs
in
add
leave
push
stos
pop
mov
pop
arpl
pusha
loope
xchg
in
inc
repz
aaa
pop
sbb
mov
into
sahf
cmpsb
clc
fnstsw
push
movb
mov
push
and
addr16
cltd
shlb
aaa
and
std
clc
pop
push
sti
xchg
cli
imul
jbe
inc
aaa
push
jge
adc
sub
xor
enter
stos
lahf
fs
mov
ret
sbb
dec
roll
mov
dec
lahf
shlb
cltd
out
enter
shl
mov
adc
mov
pop
clc
xor
pop
sbb
mov
negl
xchg
iret
sub
sbb
sbb
mov
and
and
xchg
xchg
cmp
jno
push
adc
pop
xor
addr16
sbb
in
movsl
icebp
arpl
push
aam
pop
mov
lahf
aam
cmc
jecxz
lcall
lods
cmp
mov
negl
xchg
push
sti
call
sbbb
add
cmpsb
push
dec
lock
mov
jne
and
pop
or
ja
out
cmp
fistl
insl
dec
test
fxch
leave
push
fwait
mov
mov
sti
pop
sub
test
shrb
mov
fdivrs
rcr
xlat
inc
mov
or
or
sbb
dec
jbe
push
mov
add
aas
push
stc
pop
fisttpll
testl
and
pop
inc
jmp
sbb
icebp
insb
loope
mov
test
dec
mov
mov
hlt
leave
ja
imul
push
or
xchg
sbb
test
push
pop
lret
cmp
shrl
ljmp
negl
xor
cltd
xchg
or
subl
sahf
cmp
jl
daa
stc
jne
xchg
cli
in
jnp
in
jl
cmpsl
popa
xor
sbb
pushf
inc
cltd
mov
enter
jg
dec
test
dec
pop
pop
movsb
xor
sbb
repz
lcall
dec
mov
inc
movsb
push
fmull
adc
add
pop
mov
sub
int
cmpsb
dec
xlat
cmpsb
inc
sub
xchg
das
imull
sub
push
insb
ss
call
mov
clc
cmp
lea
mov
stc
cli
lret
sub
and
leave
lret
push
imul
dec
ja
jle
cmc
push
adc
push
aaa
sbb
ret
adc
test
das
popl
pop
pop
nopl
push
loope
mov
or
mov
xchg
jbe
mov
push
xor
ret
jecxz
and
das
test
dec
add
sub
sub
jl
sbb
lds
and
pop
push
mov
and
jbe
sbb
outsl
hlt
sbb
int
dec
in
jecxz
hlt
popa
cmovae
or
xchg
jo
pop
cmp
sub
cwtl
dec
push
mov
fimull
hlt
xor
add
xchg
mov
jle
adcb
sbb
stos
dec
sti
mov
or
dec
mov
cmp
hlt
xor
mov
jl
dec
aad
push
out
imulb
fists
mov
cmp
adc
cmp
lcall
dec
rcrb
sbb
push
rcll
sbb
sahf
out
fidivrs
push
sbb
pop
aas
cs
add
or
xchg
imul
pop
or
int
push
mov
sub
fldcw
stc
push
lea
subl
lcall
fs
aaa
and
push
aam
cmpsb
mov
int3
jo
mov
mov
jb
cld
popa
int
adc
mov
sahf
xor
cmp
repnz
icebp
inc
cmp
sub
inc
mov
daa
push
mov
fsubrl
cmpsb
lcallw
jnp
mov
or
call
mov
dec
fldt
mov
pop
or
and
decl
inc
mov
stos
lcall
push
sbb
jae
mov
sbb
mov
loop
daa
sbb
outsl
and
and
std
push
sarl
pop
arpl
repnz
sbb
adc
lock
std
mov
cmp
fisubrl
aas
mov
jo
sub
or
xchg
sbb
cmp
gs
mov
cwtl
js
dec
fwait
outsl
test
nop
xchg
inc
in
stos
shrb
aad
cmp
or
div
jae
fldcw
lea
outsb
scas
fists
or
push
xor
mov
rcr
sub
out
test
cltd
imul
stos
mov
xorb
pop
pop
push
push
pop
lea
dec
push
cwtl
cwtl
daa
in
inc
sub
negl
fistl
shl
jae
mov
and
xor
sub
xchg
pop
add
out
rol
subb
out
lock
jnp
mov
cwtl
push
sbbl
push
sbb
ss
lret
cmp
mov
mov
jns
xchg
jno
lret
cltd
scas
adc
inc
mov
mov
mov
lahf
or
stc
mov
jecxz
mov
sti
jg
insl
je
inc
aas
and
adc
inc
stos
and
pop
mov
xchg
push
nop
sti
iret
sub
push
and
inc
jnp
push
movsl
outsl
jb
xor
or
add
movsl
inc
pop
mov
dec
push
movhps
and
inc
and
and
es
cli
ja
ds
and
lcall
jmp
push
add
sbb
outsl
fisubs
jle
ja
aam
fwait
adc
mov
stos
cmp
xlat
imull
shll
insb
inc
jle
ficompl
jecxz
mov
and
arpl
repz
ljmp
rclb
xor
push
push
add
pop
cltd
cmpsl
subb
mov
and
imul
sub
mov
fadds
mov
fadds
sub
add
xchg
ds
les
sub
nop
mov
ret
popf
icebp
lahf
xor
imull
das
mov
sub
jne
test
call
push
fwait
cs
and
js
cmp
fstp
and
xor
cli
sub
push
adc
lods
adc
pop
outsb
lods
push
or
cmpsl
imul
fdivrs
sub
pop
mov
and
loopne
adc
outsl
pop
adc
push
ljmp
inc
insb
cmp
mov
jecxz
imul
mov
mov
pop
arpl
fisttpll
sbb
loopne
xchg
inc
fldenv
mov
stos
xlat
mov
xor
or
mov
jno
insl
mov
aaa
sbb
out
push
push
inc
pop
mull
add
jb
dec
sub
or
int3
lds
fs
or
test
xor
loop
dec
test
adc
out
cmp
divl
pop
sahf
fwait
leave
mov
mov
adcb
out
icebp
jnp
popa
movl
mov
push
sbb
xor
dec
repz
in
cltd
xor
dec
das
out
sahf
or
fdivrs
std
daa
lods
sub
lock
jge
cwtl
arpl
ljmp
imul
in
xor
mov
lahf
testb
out
dec
fldt
mov
and
and
test
popf
aas
addr16
jle
pop
ja
sbbl
push
out
fcmovne
add
pop
mov
lahf
fidivs
bound
pop
mov
or
pop
adc
outsb
xchg
sbb
adc
lock
cmpsl
mov
arpl
int
sbb
and
cmp
fsubrp
out
mov
stc
add
dec
rcll
push
outsl
or
pop
dec
mov
push
push
xor
rcrl
call
pop
jae
adc
out
std
pop
cli
push
bswap
adc
test
negb
les
inc
push
add
imull
or
adc
ds
mov
scas
add
rorl
and
popf
inc
xchg
xor
sbb
or
add
sahf
jecxz
fbld
in
cmp
sti
imul
lcall
enter
mov
inc
hlt
rcll
xchg
std
mov
jge
or
pop
icebp
xchg
out
jmp
in
and
mov
out
stc
into
cmpsb
cmc
fs
add
call
mov
adc
outsb
jge
pop
ret
sti
arpl
push
mov
test
xor
in
cmp
pop
out
push
cmpl
testb
mov
sti
pop
and
lea
mov
mov
cwtl
cs
xchg
mov
mov
aam
dec
movsb
clc
jo
push
adc
inc
push
and
cltd
jns
sub
sbb
cmp
sub
sub
pop
push
insl
xchg
arpl
dec
jl
pop
xor
out
icebp
fnstenv
jp
movsl
insl
mov
bound
or
dec
add
js
pop
inc
call
rcrb
jmp
mov
in
int3
nop
jl
les
popa
sahf
enter
xor
cmp
jl
or
in
or
notb
shl
sub
cs
fwait
ja
pusha
mov
mov
sub
orb
int
lea
or
sub
mov
stc
pusha
lretw
cmp
adc
mov
xchg
or
lcall
shrb
push
imul
scas
das
pop
cwtl
xchg
push
xchg
cltd
xor
bound
ret
or
mov
sub
in
pop
jno
xchg
mov
sub
in
push
xor
jno
shrl
popf
in
sub
scas
xchg
test
out
fdivrs
add
xchg
and
jo
in
and
outsb
sarl
cli
sub
mov
mov
lods
arpl
cmp
push
ss
mov
test
insl
lret
std
popa
fiadds
pop
cld
lahf
and
movsb
add
sub
js
sub
fdivr
pop
pop
fidivl
cltd
xchg
xchg
shlb
push
xchg
iret
cli
je
loope
pusha
das
dec
popa
push
mov
add
stos
jle
and
das
mov
insl
test
lahf
es
pop
lea
ficomps
loopne
dec
notl
rolb
xor
pop
lock
dec
loop
jge
in
pusha
ret
mulb
mov
arpl
daa
and
push
cmp
lock
rcr
mov
popl
lret
outsb
inc
cmc
movsb
ds
lret
fdivr
push
stc
cli
cmp
hlt
adc
iret
xor
lcall
test
adc
mov
dec
repnz
mov
loopne
fs
jmp
xchg
push
push
jne
mov
push
pop
outsl
jo
loopne
imul
push
int
jbe
cld
out
inc
cmpsb
rorb
push
lds
lods
insl
leave
xor
add
mov
cmp
jl
or
cli
fcoml
push
pop
add
dec
fsin
fnstcw
sbb
inc
dec
mov
lcall
aam
sub
xor
jnp
mov
ljmp
adc
adc
enter
addr16
mov
mov
push
outsb
testb
das
rolb
test
pop
cmpb
xchg
inc
fdiv
mov
enter
popa
dec
insl
decb
fxam
cmp
out
pop
or
xchg
pop
pop
sub
push
inc
jle
lcall
mov
repnz
jle
jne
mov
jne
adc
mov
pushf
pop
mov
shll
aas
fld
adc
or
cld
fcmovne
sbb
or
and
xor
mov
sub
mov
adc
out
out
jne
jbe
push
lds
les
cmp
xor
fwait
out
js
std
push
push
mov
and
cwtl
pusha
pop
xchg
shl
cs
popa
mulb
movsl
sub
sub
xchg
inc
jge
sarb
or
push
pushf
decb
cmp
js
int
mov
xchg
gs
fdivrs
mov
hlt
imul
daa
xor
sbb
jno
lahf
in
mov
std
jl
icebp
test
mov
scas
test
cld
jbe
imul
mov
xor
xor
stos
outsb
fs
call
push
ds
xor
mull
mov
mov
jbe
ret
decb
jns
jbe
mov
out
sub
sbb
cli
imul
dec
xlat
sub
arpl
cmp
sbb
inc
xor
dec
jl
inc
or
shlb
repz
in
mov
inc
cwtl
ss
add
sbb
jp
ss
mov
add
rorl
fnstenv
sub
gs
xor
add
clc
cwtl
in
pusha
adcb
lret
clc
cwtl
fidivrl
sbb
sbb
call
xchg
push
popa
mov
hlt
mov
ljmp
jae
sti
jbe
inc
mov
mov
xchg
mov
sub
xor
out
lea
stos
xlat
inc
nop
test
mov
fcoml
cmp
testl
cmp
mov
push
addr16
divl
into
insb
adc
or
lds
repnz
leave
cltd
xor
dec
or
and
jmp
xor
hlt
cmp
jae
push
mov
mov
push
ret
xchg
mov
cs
jle
pop
int3
loope
pop
dec
or
add
fiaddl
mov
out
sbb
fists
out
test
hlt
xor
xor
in
cs
repnz
rclb
aas
push
lcall
enter
movsb
pop
in
and
jge
cmp
adc
inc
jmp
add
inc
mov
sub
stc
fiadds
clc
jbe
pop
adc
xor
push
sbb
jl
add
outsb
and
sub
mov
ret
movsl
cmp
popa
pop
mov
cli
mov
cmp
leave
fwait
test
sub
rcl
ja
and
pop
jo
mul
mov
pop
mov
sar
add
psubusb
dec
dec
cld
out
out
xchg
shlb
push
inc
inc
ja
jno
xchg
inc
into
xchg
cs
inc
loopne
js
mov
push
dec
lret
setb
xchg
fsubrl
cltd
xchg
mov
xorb
cmp
xor
xchg
sahf
cwtl
mov
popf
inc
lods
xchg
inc
mov
fmul
aas
pop
repz
or
sbb
and
push
fidivrl
sbb
rclb
add
lods
in
test
cmp
shlb
cmpsl
cmpsl
and
insl
pop
jnp
out
enter
pop
pop
movsb
inc
jecxz
or
push
out
je
lds
test
sbb
stc
lcall
adc
cmp
inc
or
in
adc
fsts
push
and
aam
test
ss
stc
and
je
jecxz
mov
adc
inc
add
popf
lods
jno
in
ret
loop
dec
mov
ss
sbb
xchg
push
mov
dec
ja
shrl
out
xchg
mov
jmp
sbb
sbb
xor
rcr
outsl
xchg
add
stos
jle
clc
and
test
jnp
pusha
xlat
jno
dec
les
cmc
add
mov
clc
and
scas
adc
in
outsl
jp
arpl
stos
jmp
sub
jae
daa
push
pushf
je
mov
add
adc
insb
push
jo
fsubl
iret
shll
jp
mov
or
pop
jbe
cmp
sar
mov
add
dec
add
pop
rcrb
or
add
inc
inc
sub
adc
mov
fistpll
addl
iret
xchg
adc
xor
cmp
into
mov
mov
loope
ret
or
inc
and
scas
push
sub
scas
neg
mov
and
mov
push
cmc
jmp
stos
xor
xchg
sub
push
or
mov
xchg
dec
cwtl
xchg
ret
outsb
out
and
mov
push
xor
sub
sub
popa
jbe
test
rcrl
add
pop
sbb
imul
sub
pop
adc
ret
repnz
lods
pop
jns
std
data16
leave
loopne
out
fucomip
ljmp
sahf
jne
fsub
jb
xlat
dec
testl
pop
rorl
or
sub
mov
sub
pop
addr16
rep
push
adc
outsb
inc
sahf
cmp
nop
jmp
out
jb
mov
enter
das
mov
adc
je
mov
ljmp
insb
mov
mov
fs
xchg
xchg
add
lds
mov
out
imul
iret
mov
pop
enter
test
mov
xchg
cmp
xor
jle
pop
jl
push
addb
inc
mov
cmpsl
xor
lods
andb
lcall
test
add
scas
mov
sub
pusha
adc
mov
jle
adc
mov
scas
cmp
fstpl
int
fnstsw
aaa
test
fbld
lret
insl
data16
rcr
and
adc
jnp
push
pushf
fucomi
nop
pop
pop
add
out
jno
lea
pop
divl
stos
pop
js
mov
and
loope
aas
add
pop
add
insb
cmpsl
sub
shl
idiv
push
pop
push
cld
xlat
add
in
adc
ljmp
xchg
adc
mov
and
jns
sbb
push
call
pop
shrb
lcall
push
xor
scas
push
add
push
les
sbb
inc
lods
xlat
sbb
shrl
push
push
icebp
add
test
cmp
sbb
push
sub
into
insb
in
in
mov
arpl
pop
dec
lret
push
rorb
test
aam
scas
outsl
out
and
xor
mov
stc
push
fs
push
es
mov
pop
ret
or
shl
in
pop
sub
sbb
rclb
adc
pop
cmpsl
pop
aas
mov
or
cltd
adc
mov
inc
mov
mov
cmp
jmp
fld
sahf
push
int3
cmp
mov
fs
rcll
cmp
cmpsb
fidivrs
cmp
mov
cwtl
jno
lcall
jne
insb
pop
xor
xor
cmp
out
popa
and
mov
jne
arpl
adc
in
sbb
or
sbb
add
aam
addr16
jnp
aad
inc
lea
aas
int3
cmc
hlt
sub
mov
mov
and
inc
out
inc
push
in
dec
in
sbb
adc
and
enter
xchg
add
pop
push
inc
scas
sub
frstor
and
push
and
and
xchg
mov
sbb
mov
sub
jmp
jo
push
mov
into
push
lcall
cli
into
cmp
pop
leave
xor
mov
push
xor
aam
aas
int3
aas
lods
adc
jb
addr16
and
loopne
jecxz
insl
pop
loope
adc
loopne
and
or
push
or
inc
roll
pop
stos
aad
or
or
add
outsb
mov
pop
add
inc
inc
push
xor
or
cmpsb
mov
cs
mov
push
xor
or
in
lcall
sahf
jb
enter
mov
cwtl
sub
mov
pop
ljmp
outsl
bound
sbb
dec
mov
dec
jnp
inc
cmp
dec
push
add
push
inc
or
lock
pop
leave
aaa
xchg
js
adc
loop
sbb
dec
sbb
jmp
adc
out
imul
dec
pop
sti
test
xor
push
in
xor
test
mov
adc
cmp
xor
add
fidivs
imul
pop
mov
dec
arpl
je
inc
data16
cmpsb
aas
imul
mov
adc
jbe
jmp
xor
mov
add
or
pop
and
imulb
out
outsb
stc
inc
lret
enter
xchg
dec
mov
inc
std
jle
mov
mov
jp
cmp
out
and
mov
push
aaa
fisttpl
loope
sbb
jle
pop
out
lds
push
enter
loop
shll
pop
nop
aam
daa
xor
ja
test
inc
sbb
inc
jns
jecxz
push
adc
insl
jnp
jl
inc
out
loopne
imul
and
ja
pop
xor
jg
gs
cmp
mov
movsb
jmp
dec
mov
loop
push
push
mov
divl
jecxz
and
mov
adc
test
movsb
movsl
ds
mov
pop
jnp
adc
out
jae
add
shrd
pushf
nop
jb
jbe
addr16
mov
mov
sbb
mov
cltd
aas
sbb
shlb
jo
ret
hlt
shl
shrl
lods
pushf
arpl
lcall
mov
pushf
pop
pop
add
fimull
push
stc
int
push
add
aam
pop
mov
pop
out
xor
leave
lods
shrb
inc
jbe,pn
jb
mov
popa
fisttpll
pop
imull
lea
repz
loope
leave
sahf
js
leave
ret
sub
inc
adc
push
dec
ds
enter
cmpsb
sbb
xor
enter
rolb
mov
xor
sub
es
inc
mov
xlat
xlat
ljmp
or
in
test
add
dec
popa
jecxz
dec
jmp
mov
popf
nop
rol
rcrl
xchg
loopne
ds
lret
adc
inc
out
fdivs
jl
lcall
and
dec
push
xchg
lods
pop
or
clc
test
aam
das
pop
gs
mov
push
aaa
ds
jp
add
and
insb
cmc
fstps
inc
mov
ficoml
xchg
jge
pop
lahf
dec
pop
mov
xlat
lret
mov
ret
xlat
popa
lea
xor
sbbl
leave
sub
sti
mov
jl
dec
inc
pop
inc
sti
adc
sub
cmp
in
jae
cmp
stc
and
pop
mov
movsl
jecxz
rep
cmp
jle
hlt
jp
movaps
je
dec
cmp
dec
inc
mov
movsl
jae
cmp
xchg
push
nop
daa
cmc
sub
sbb
pop
pusha
sbb
int3
dec
cmp
ss
out
cmp
test
mov
xor
sub
gs
leave
push
in
dec
inc
sub
scas
xor
insb
mov
outsl
xor
xchg
test
insb
stc
test
mov
push
rclb
sub
popl
cmpsl
jne
stos
outsl
adc
leave
sub
nop
push
dec
fs
jae
in
mov
je
push
mov
dec
std
adc
push
repz
js
cwtl
imul
orb
shll
lock
or
inc
push
dec
fsubrs
dec
mov
adc
dec
xor
shr
div
pop
imul
add
jg
nop
or
xchg
inc
pusha
mov
sahf
clts
clc
xor
sbb
movlps
stos
stos
jp
cs
adc
mov
mull
fidivs
sub
fmul
scas
cs
xchg
inc
jge
jno
fsubrs
adc
outsl
icebp
mov
inc
sar
pop
decb
fdiv
mov
pushl
sbb
xchg
js
cmp
xchg
mov
aas
out
pop
inc
lret
push
add
push
pop
adc
in
and
repz
mov
out
add
jl
loopne
jbe
dec
fildll
or
adc
mov
insl
cmpsb
jecxz
cmp
pop
push
fistpl
jb
data16
nop
jns
xchg
adc
out
mov
cmp
data16
jp
jns
scas
lods
adc
mov
ds
out
aad
jle
imul
dec
fmull
or
mov
add
into
sub
add
mov
push
bound
dec
and
jge
jle
cmp
lcall
mov
je
repnz
jo
aad
add
andl
nop
mov
inc
push
cmp
adc
imull
cltd
add
loope
pop
mov
imul
xor
popf
xor
fcoml
popa
repnz
cwtl
addr16
dec
mulb
dec
es
and
out
cltd
sarb
or
adcb
adc
stos
adc
lahf
jns
push
fs
push
test
in
and
adc
or
add
leave
ret
jno
jecxz
add
inc
xchg
loopne
stos
test
pop
mov
jns
fcmovne
fdivrl
pop
xor
and
scas
dec
sub
xchg
daa
or
push
push
imulb
add
push
inc
xor
jmp
pop
inc
push
push
popf
xor
xchg
mov
dec
out
lcall
aaa
cltd
outsb
cmp
jmp
cmp
sub
dec
pushl
mov
test
xor
sub
jns
pop
aam
outsl
xor
jnp
xor
js
call
dec
push
xchg
std
push
add
cli
aam
push
in
and
sub
xorb
mov
dec
dec
cmpl
in
sub
dec
rorl
mov
and
and
imul
ficompl
add
pop
mov
seta
std
mov
xlat
dec
inc
ror
push
shl
or
lcall
notl
call
out
push
pop
push
dec
dec
std
shll
xorl
sub
cmpsl
loopne
sbb
rclb
push
pop
cmp
jno
mov
cld
inc
push
mov
push
or
mov
stc
inc
dec
xchg
pop
cwtl
pop
push
rolb
jle
mov
in
xchg
inc
push
in
clc
sbb
fsubs
mov
out
daa
ss
leave
xchg
mov
lods
outsl
jg
xor
push
cmp
je
lahf
fidivrs
mov
js
xor
arpl
jle
push
call
adc
xchg
sbb
add
adc
pop
popa
fmul
js
in
out
and
cld
cmp
mov
mov
cs
clc
outsl
daa
mov
js
xchg
rcll
addr16
and
aad
lds
dec
push
mov
mov
push
mov
adc
pop
mov
fisubl
out
jmp
pop
inc
pop
test
xor
in
jbe
pop
adc
xchg
push
add
xor
fiadds
mov
nop
enter
cmpsb
push
test
dec
pop
mov
adc
mov
daa
and
fldl
xor
imul
pop
mov
push
cmp
or
nop
aam
dec
or
out
dec
mov
xchg
sbb
cmp
dec
xchg
mov
lods
lea
shll
rorb
ret
mov
in
repnz
scas
pop
into
clc
test
inc
xor
sub
repnz
sbb
subb
repnz
sub
cmp
dec
sbb
xchg
push
shl
adc
push
dec
out
stc
adc
inc
sub
rclb
ret
or
ud1
scas
xchg
dec
adc
inc
mov
adc
sub
jl
lds
mov
mov
mov
out
and
push
in
or
dec
daa
paddusw
repz
mov
pusha
xor
inc
ffreep
icebp
lods
push
inc
mov
push
add
cmp
bound
in
mov
inc
popa
daa
mov
cmp
and
scas
pop
adc
pop
pusha
mov
adc
cmpsb
inc
mov
shll
int3
fadd
popa
ffreep
push
mov
cmpsl
jp
add
adc
lret
push
adc
xchg
addr16
cltd
jl
stos
dec
loope
adc
imul
scas
xchg
inc
lock
push
mov
jae
je
and
xchg
dec
out
into
jno
sbb
sub
mov
mov
inc
mov
rcl
pop
mov
scas
in
or
add
orb
sbb
xor
jae
mov
mov
mov
ss
inc
loop
outsb
lcall
cmp
adc
mov
cmp
dec
pop
aaa
loop
iret
push
xor
cmp
insl
inc
call
gs
out
or
ds
xchg
adc
popf
dec
mov
test
jmp
xchg
xchg
pusha
pop
sub
loop
iret
imulb
push
push
xchg
xor
stc
pop
and
divl
cmpsb
and
int3
movhlps
adc
cmpsl
xchg
arpl
movl
gs
adc
insb
loop
in
ficoml
sbb
jp
or
sub
and
jne
xor
inc
inc
sub
fists
mov
lods
aam
adc
cli
jmp
in
lcall
movsl
lret
aaa
or
scas
je
popa
sub
cltd
sub
pop
ja
jmp
add
adcl
xorb
xor
daa
inc
dec
lods
xchg
out
sub
cmp
cmp
cmp
movsb
adc
pop
std
repz
lods
sub
shll
ror
xchg
dec
bnd
fxch
inc
jle
aaa
mov
dec
jnp
sbb
mov
cld
in
dec
push
push
adc
or
dec
fbld
pop
xchg
das
pusha
cld
cwtl
repnz
jno
mov
mov
xchg
xchg
outsl
cmpb
xchg
stos
scas
jbe
mov
lods
std
dec
or
lods
cmp
mov
mov
and
sbb
movsl
das
add
daa
imul
cwtl
rorb
fidivs
subb
sarl
cmp
sbb
pop
out
mov
cmp
leave
es
jbe
orl
xchg
mov
shll
push
repz
or
lret
and
xor
pop
fnstsw
int
je
gs
mov
xchg
pusha
mov
outsb
mov
adc
sarb
sub
rcrl
stc
rcr
fldcw
or
in
xor
stos
pop
or
test
xchg
cmpsl
jns
or
ljmp
sub
pop
int3
add
mov
inc
xchg
js
push
or
add
sar
or
push
cwtl
pop
popa
stc
lods
xchg
jno
fmuls
clc
clc
and
loope
fildl
int3
lret
insb
and
aam
enter
or
jle
data16
jmp
inc
dec
mov
sub
pop
mov
fs
out
inc
das
mov
xor
xchg
sub
inc
test
jle
jl
sbbl
xchg
xor
popl
push
push
jle
sbb
pop
or
neg
jmp
pop
xor
and
xchg
inc
jbe
mov
lods
mov
lds
xor
out
xchg
pusha
xchg
mov
push
dec
push
in
addl
mov
jmp
pop
pop
sub
sub
and
xor
incl
cwtl
gs
xlat
xor
roll
aaa
cmp
cwtl
cmp
stos
ljmp
imul
jmp
cs
jecxz
scas
add
mov
lret
testl
mov
lret
jecxz
dec
in
xrelease
or
aas
dec
or
or
adc
lea
fdivs
in
jb
push
inc
in
cmc
jns
xor
pop
lods
inc
fstpt
jns
mov
ds
cltd
rorl
xchg
addr16
sbbb
loop
lods
mov
cmp
or
pop
add
push
or
lods
mov
lahf
jb
scas
lods
in
fnstsw
xchg
fistpl
cmp
or
lret
mov
jecxz
repz
and
bound
std
xor
loope
xchg
mov
mov
arpl
dec
insl
jge
sti
movsb
adc
sbb
cmp
push
mov
ja
sbb
cmp
jl
subl
push
dec
mov
cmpsb
out
or
pop
push
es
xchg
sub
int3
fstpl
loopne
and
js
adc
fidivs
xor
enter
rcrl
pop
push
inc
xchg
fsubl
imul
xchg
push
jns
fiaddl
mov
push
inc
push
dec
mov
in
xor
dec
popf
clc
test
xchg
mov
fistl
cmp
sub
push
pop
or
lods
adc
out
outsb
xor
or
jne
ret
movsb
push
lock
mov
xor
iret
sub
iret
mov
stos
lods
and
out
pop
dec
sahf
mov
push
loop
es
outsb
pop
jmp
or
rclb
and
fiaddl
daa
addb
dec
mov
or
std
lret
dec
xor
mov
stos
mull
sbbb
mov
jmp
mov
sbb
test
push
or
mov
andb
popa
add
xchg
cld
loope
loope
sbb
push
dec
ret
push
xor
cmp
aaa
cmp
insb
ds
xor
inc
mov
mov
cmc
cs
push
test
sbb
mov
imul
push
rcll
sub
jmp
sub
pop
mov
shlb
adc
sbb
inc
adc
xchg
sbb
lea
dec
pop
aad
push
icebp
jge
dec
outsl
div
div
jnp
cmp
push
shrl
imulb
jecxz
lods
and
jno
dec
rcrb
sub
stos
movsl
push
ret
push
mov
and
mov
cmc
inc
sub
cmp
ss
inc
jnp
imul
xchg
sbb
pop
fstps
adc
loope
cmp
jb
sahf
or
add
imul
jno
jmp
repnz
inc
outsl
and
mov
repz
bound
sub
xor
cmp
mov
mov
cmp
ljmp
imul
inc
push
jno
dec
loop
int
test
mov
call
mov
fbld
out
lods
cs
push
xorl
insl
call
mov
aad
fisttpl
cmp
lock
mov
and
adc
xor
ret
dec
jae
mov
lock
mov
cwtl
pop
cli
and
and
fadds
sahf
and
out
mov
sahf
mov
mov
lods
jo
popf
addl
in
cli
pop
xchg
imul
pop
or
cmp
pop
xchg
cltd
std
or
pop
cmp
mov
inc
insb
stc
aas
dec
hlt
rcrl
sub
cli
jecxz
ret
mov
jnp
xor
popf
inc
jecxz
inc
loop
push
loopne
repz
lods
pusha
fisubrl
jo
mov
pushf
xchg
mov
out
repnz
inc
cmpsb
mov
cmp
or
lcall
xor
cmp
or
xchg
in
cmp
sahf
lods
and
test
loope
sbb
xchg
aas
xchg
jne
jp
jmp
cmp
or
mov
pop
std
cmpsb
push
sub
jmp
fisubrs
jle
jecxz
sub
repz
pop
mov
sbb
out
adc
mov
pop
rcl
jle
cmpsb
jle
adc
lods
adc
popf
call
sbbb
mov
jmp
sub
cmc
dec
andl
outsl
pusha
lret
bound
xorl
sbb
in
aad
jmp
sub
add
loope
ljmp
aad
adc
or
outsl
ljmp
cmp
js
sub
jo
adc
fidivs
sbb
add
and
call
xor
or
into
ds
mov
cmp
pop
shr
addr16
shl
inc
sbb
mov
inc
jge
lods
sbb
cwtl
lock
pop
sarl
and
pushf
dec
xor
mov
popf
jge
fcom
pop
pop
add
mov
lods
cld
cld
cwtl
mov
shl
xchg
or
jmp
jmp
mov
leave
jns
inc
repz
pop
test
sahf
lret
jg
push
cmp
bound
jno
loop
jecxz
lea
dec
dec
iret
rcrl
push
pop
mov
scas
repz
lret
jo,pn
ja
mov
cwtl
jb
or
jo
stos
popf
dec
add
cmp
inc
add
cli
xlat
inc
sbb
mov
and
xchg
sbb
sbb
addr16
in
dec
and
xchg
adcl
test
stos
add
out
sbb
stc
imul
mov
subb
mov
int3
pop
das
inc
mov
pop
enter
xchg
mov
fisttps
cltd
lods
mov
test
es
inc
cmpsb
xchg
cltd
out
arpl
imul
rcrl
dec
mov
fs
and
inc
xor
test
ret
and
mov
mov
and
jae
fiaddl
enter
cmpl
jg
imul
imul
movsb
pop
daa
scas
mov
stos
pop
sbb
fsubr
xor
into
adc
lea
sub
mov
cmpsb
xor
sarb
js
jae
es
js
xchg
mov
push
mov
jbe
test
push
out
shlb
push
std
mov
push
sub
jo
and
cmp
iret
pop
dec
and
not
stos
filds
and
loop
push
subl
addb
int
fildll
jmp
pusha
fimuls
mov
lods
or
cmp
or
push
pop
and
cmp
das
xchg
inc
std
inc
dec
push
push
mov
lea
jno
sbb
mov
dec
scas
cmp
in
and
roll
jle
cltd
hlt
orb
jo
or
ret
mov
cli
xor
xlat
sub
jb
test
in
pop
mov
scas
sbb
lods
outsl
movsb
repnz
push
add
cli
fisttpll
popf
mov
pushf
mov
and
pop
pop
cmp
aas
lret
dec
outsb
iret
xchg
push
sub
push
mov
mov
mov
repnz
jge,pt
popf
add
fwait
test
jg
push
push
pop
insb
dec
aas
popl
into
or
mov
xchg
xchg
push
inc
fstps
sti
or
daa
cmp
bound
mov
sub
movsb
and
pop
xchg
cs
mov
and
pop
jl
je
cmp
test
and
jecxz
stos
pusha
xlat
jge
test
add
cmp
scas
xchg
push
xchg
cli
push
add
xor
inc
lds
or
pop
push
lods
cmp
push
jns
sub
loopne
xor
fsubrs
dec
sarb
mov
mov
mov
jne
xlat
cmc
repz
in
xchg
push
out
xor
xor
xchg
inc
jbe
inc
lds
pop
ret
push
sub
push
jle
push
jnp
cld
xchg
mov
jp
fsts
mov
cmp
subb
sub
fsts
push
push
xchg
push
fisubs
xchg
scas
sub
push
int
xchg
scas
push
jmp
xor
loope
fsubrs
xor
addl
add
push
loop
loopne
subb
stc
out
sub
cld
into
enter
scas
mov
es
dec
cld
inc
cmp
lcall
push
jbe
in
frstor
nop
sub
or
test
mov
mov
lods
sub
mov
dec
mov
or
cmpsb
sbb
out
in
mov
call
jns
xlat
push
push
cmp
nop
outsl
insl
dec
inc
and
xorl
ljmp
jb
xor
in
les
mov
popf
adc
add
push
jp
push
test
pop
cmp
movsl
and
movsb
out
xchg
xchg
mov
or
insb
jg
push
mov
mov
aas
pop
push
xor
and
into
fcompl
sub
push
add
fstl
fs
cmc
adc
mov
lods
lahf
push
enter
xor
xchg
lods
dec
inc
dec
xor
addr16
sbb
inc
lcall
cmc
push
cs
roll
cs
test
lock
test
mov
mov
hlt
cmp
sti
lods
push
ljmp
fwait
mov
loopne
loope
lea
add
pusha
cmp
adc
mov
pop
mov
insb
ficomps
fbld
pushf
ja
aas
cld
add
xor
out
insb
movsb
test
mov
mov
rcll
out
jge
push
shrl
inc
and
scas
xor
ret
mov
in
xor
sbb
rclb
clc
sub
loopne
hlt
and
aad
lret
pop
cmp
xor
pop
cmp
or
cmp
addb
xor
jle
loopne
das
roll
rcrb
jmp
ret
push
pmaxsw
frstor
andl
fistpl
ret
int3
and
push
sbb
cmpsb
mov
in
rcrb
mov
sub
xor
or
sub
cmp
dec
popa
out
sahf
testl
jmp
test
fisttpll
in
or
out
sub
ja
bound
jmp
pop
nop
int3
jno
or
sub
loope
div
repz
cld
je
xor
mov
addb
sub
push
dec
test
add
lret
sbb
outsl
jl
int3
push
test
sbb
adc
xchg
mov
dec
sbb
js
in
stos
jo
sub
mov
mov
into
and
sti
in
dec
mov
fwait
or
lret
adc
imul
outsb
aam
inc
cmp
adc
fidivrl
mov
xchg
repnz
imul
sbbb
adc
jl
call
rcll
lds
sub
movsl
mov
xchg
rolb
mov
sub
mov
sbb
shrl
jb
lret
andl
sbb
test
scas
movsb
loop
not
movsb
adc
xor
ret
add
xor
mov
into
adc
jmp
aam
lea
das
mov
or
mov
xchg
inc
push
ss
push
ret
sar
arpl
xchg
dec
fmulp
sub
std
lahf
xchg
loopne
mov
stos
lahf
out
sbb
cmp
aas
sub
push
mov
mov
or
clc
lock
jns
pop
in
ret
lods
imul
fsub
clc
or
sbb
dec
stos
test
lds
lock
push
add
or
mov
es
cmp
add
fistpll
xchg
sbb
jns
jns
dec
add
fisttpll
cs
cld
mov
jae
mov
jge
outsl
cmpsb
inc
in
push
add
mov
daa
es
outsb
pop
adc
out
ficomps
add
ret
jl
ror
les
in
out
adc
stos
jl
or
add
stc
jmp
xlat
testb
xchg
adc
movsb
add
dec
inc
int
clc
ss
and
nop
jbe
fnstcw
inc
jmp
pop
inc
pop
movsl
rol
or
and
or
aas
jl
sbb
lcall
stos
mov
add
fisttpl
mov
pop
xor
frstor
int
cmp
push
enter
shrb
sbb
jbe
pop
or
mov
stc
pop
fs
rclb
fnstsw
pop
jo
es
filds
int3
fst
xor
cli
mov
movnti
xor
and
add
add
dec
rcr
mov
shlb
push
sahf
mov
inc
push
mov
test
shl
adc
and
jae
push
ficoms
bswap
cld
pop
je
test
mov
sub
mov
movsb
pop
rclb
repnz
add
mov
ror
cmp
jbe
dec
xchg
icebp
mov
call
pop
lods
mov
add
imul
roll
adc
or
enter
sub
mov
test
pop
push
loopne
or
dec
jp
bound
lock
inc
scas
pusha
adc
pushf
scas
jno
dec
insb
pop
xchg
adc
insl
divb
out
cmp
lret
shlb
dec
jl,pn
sarl
sub
movsb
jb
pop
lcall
pop
mov
cs
sub
xchg
add
dec
xchg
sbb
clc
mov
int
xor
imul
lret
push
push
int
adc
in
fistps
repnz
mov
pop
ret
fs
xchg
stos
pcmpeqd
dec
mov
into
jp
sbb
mov
inc
sub
mov
inc
and
jle
shrl
mov
xor
dec
xchg
adc
addb
fsubl
xchg
lods
push
scas
popf
arpl
push
pop
insl
push
clc
out
mov
faddl
cmp
push
mov
mov
adc
fidivrl
inc
fwait
or
xchg
shl
stos
jbe
loop
adc
repnz
pop
fcomps
jp
push
mov
addb
daa
jl
cmp
xor
push
dec
leave
lods
jo
orb
mulb
movsb
popf
pop
dec
bound
mov
xor
xor
fwait
mov
cmp
mov
call
mov
mov
and
imul
les
leave
mov
sbb
or
dec
shr
xchg
fs
lahf
pushf
inc
jae
jbe
or
ja
jp
nop
mov
or
mov
fcomp
cmp
sub
sbb
movsl
scas
cmp
push
sub
dec
xor
fcoml
clc
inc
scas
xor
jmp
dec
pop
mov
lds
daa
add
mov
xor
nop
or
mov
dec
adc
adc
daa
cmp
xlat
xchg
roll
aam
xorl
pop
and
push
push
dec
in
outsl
fistps
in
sub
mov
ret
insl
xchg
fists
add
fsubl
cli
or
jbe
xor
dec
fwait
xor
sub
repz
test
dec
mov
lret
mov
adc
gs
pop
xchg
fs
cmpb
sub
add
cmp
pop
in
daa
jb
mov
sbb
xor
leave
popa
jecxz
sub
aad
inc
bound
pop
out
int3
out
dec
cmc
daa
mov
shlb
jnp
arpl
outsb
mov
popf
sbb
pop
jo
es
sub
pop
scas
je
mov
insb
movsb
or
and
cltd
fistpll
add
idivl
mov
xchg
and
scas
adc
outsl
cld
mov
dec
cmc
rcrb
movsb
int
aaa
dec
lret
mov
popa
movsl
xchg
xor
mov
sbb
xor
mov
xlat
xadd
mov
pop
sahf
jbe
and
jl
loope
das
adc
mov
mov
xlat
js
loop
loope
or
rorl
loopne
jg
jno
inc
icebp
add
mov
dec
dec
mov
dec
sbb
fcmovnbe
loop
scas
data16
notb
push
jmp
xchg
cmp
adc
fistl
lods
std
xchg
mov
jne
fs
arpl
out
lea
jae
push
pop
pop
in
xchg
mov
mov
cmpsb
out
mov
mov
lds
inc
loope
ret
jne
cmp
pop
lds
cmp
movsl
imul
mov
test
xchg
cmp
ss
insl
jp
addr16
nop
rcll
mov
lret
sub
cld
jle
ljmp
jo
and
loopne
inc
pop
leavew
mov
lds
sub
addr16
sbb
fsts
into
ret
or
mov
popl
pushf
and
clc
movsb
addr16
dec
jle
xor
hlt
rolb
inc
lret
movsb
leave
xlat
add
nop
xchg
in
fimuls
mov
hlt
daa
repnz
add
aas
push
sbb
sbb
and
int3
hlt
mov
mov
xchg
mov
push
das
add
fdivrl
cmp
hlt
push
cld
xor
cmc
aaa
aad
jbe
inc
ja
jnp
aam
inc
jae
and
cmp
dec
je
idivl
mov
push
push
cs
sahf
insl
or
push
fbstp
sbb
das
cwtl
lret
mov
cwtl
out
hlt
or
mov
dec
jnp
mov
repnz
cmp
add
movsb
pop
pop
cli
xchg
sbb
jbe
aas
xchg
jae
cmpsb
and
scas
xchg
mov
pop
jmp
mov
cmp
stos
adc
cltd
mov
cmp
push
idivb
push
bound
push
lret
mov
mov
shll
dec
cmp
add
and
lret
cmp
rorl
dec
cld
cwtl
mov
push
in
std
pop
jo
fisubs
sarb
fisubs
xor
xlat
insb
or
dec
frstor
push
add
xorl
and
pop
push
mov
sbb
adc
mov
out
xor
and
fcmovnu
aam
push
mov
sbb
les
push
push
lret
lahf
mov
adc
loope
dec
push
mov
iret
js
add
add
aaa
sahf
cmp
pop
sub
or
and
lea
xor
hlt
jo
add
jb
push
xchg
jo
imul
aad
mov
test
push
mov
xlat
repz
out
jnp
cmpsl
scas
sbb
scas
lods
mov
cmp
cmp
sub
leave
das
test
adcb
jge
lea
shlb
push
inc
imul
lcall
jno
jae
int
out
mov
scas
cwtl
xchg
add
or
add
pop
xor
sub
aam
enter
popf
cmc
mov
std
xchg
mov
inc
repnz
fiadds
inc
je
jp
movsl
das
pop
mov
adc
data16
jge
push
adc
mov
fmul
sub
aad
pop
pop
stc
out
sbb
adc
outsl
test
jcxz
daa
pop
stc
imul
sub
dec
inc
ficomps
stos
jb
sbb
xchg
cmpl
test
arpl
cmp
sbb
rclb
aas
xor
sub
sub
mov
in
mov
push
cmp
xchg
mov
sbb
outsb
int
addb
outsb
scas
add
jne
dec
mov
dec
xor
inc
xor
xor
mov
int3
ret
pushf
insl
push
pop
int
push
mov
xor
dec
test
inc
shrl
cmp
inc
push
cmp
add
dec
sub
jge
lods
inc
inc
push
xchg
push
nop
dec
inc
xor
jecxz
jo
lods
jp
mov
jg
popa
loop
in
adc
fs
add
test
jl
lahf
mov
into
addr16
add
or
and
push
mov
lret
jne
add
pop
pop
leave
lea
lahf
loopne
pop
xlat
adc
inc
int
pushf
mov
sbb
mov
cmpsb
pop
jle
adc
mov
fnstsw
popf
inc
bound
adcb
xor
out
jmp
or
std
inc
inc
inc
popa
leave
sub
lret
icebp
popf
int
fnstenv
addr16
sbb
and
sub
test
test
mov
sub
inc
xlat
adc
outsl
and
es
add
test
mov
push
je
out
js
loopne
push
sub
call
jge
ret
dec
mov
fsubl
bound
sub
leave
test
cltd
mov
mov
cmc
inc
or
ja
push
jecxz
cs
nop
inc
rcrl
mov
aad
and
repz
inc
movsl
aad
push
adc
xchg
rcrb
dec
mov
ds
or
cltd
xchg
stc
aam
stos
adc
xor
pop
js
out
loopne
inc
mov
test
mov
pop
rolb
fcoml
and
xchg
mov
mov
cmp
mov
rorl
scas
nop
pop
xchg
pop
sbb
lods
sub
inc
or
test
xchg
cmp
mov
divl
inc
inc
sbb
std
outsl
sbb
out
sti
in
sahf
cli
icebp
leave
gs
mov
aad
hlt
add
insl
push
jb
xor
loop
mov
push
sub
negl
int
mov
xor
xchg
icebp
outsl
xchg
jle
mov
lea
dec
shrb
pop
iret
or
cltd
mov
sarb
sub
mov
sbb
sar
dec
je
and
lret
stc
dec
inc
arpl
xchg
cltd
es
aad
xchg
sbb
in
mov
mov
sub
fimuls
das
cld
sub
xor
imul
jns
fistpll
popa
movsb
lock
and
pop
lret
stc
xchg
sbb
mov
adc
push
dec
mov
inc
rcrb
outsl
mov
adc
orps
divl
adc
jmp
data16
cmpsl
xor
rorl
fs
or
shll
xor
xor
and
push
pusha
dec
pop
fistpl
dec
xchg
xor
sahf
jecxz
repz
aas
sub
mov
std
push
aaa
loop
aam
gs
push
inc
fcomps
iret
mov
stos
inc
cmovle
scas
jmp
fs
lret
mov
jne
in
lcall
pop
cmpl
push
or
lock
test
cmc
es
icebp
mov
mov
enter
jl
adc
int3
sub
imulb
cld
sahf
pusha
pusha
pop
jb
mov
notl
pop
mov
subb
sti
into
sbb
lcall
mov
jnp
int
xchg
aam
ret
aad
repnz
pop
mov
inc
jle
mov
or
adc
adc
add
movsl
mov
movsb
idivb
adc
sbb
sbb
dec
inc
icebp
arpl
dec
clc
es
and
inc
jns
into
pushf
dec
sub
lea
cmc
pop
cwtl
mov
enter
lahf
xor
or
jae
mov
xor
cltd
sbb
mov
inc
loopne
repz
loopne
xor
test
push
mov
cmc
out
les
mov
lods
das
imul
fstpt
sti
lahf
mov
lahf
js
aas
fidivl
outsb
mov
inc
mov
dec
lret
test
jp
fisubs
push
jno
jns
sbb
fs
mov
enter
push
push
je
xchg
in
in
mov
js
xor
hlt
fwait
insl
ror
and
jne
sbb
fwait
scas
sub
jecxz
fwait
inc
mov
dec
sti
les
fnsave
icebp
xchg
or
or
push
mov
adc
loope
repnz
int3
xchg
repnz
jnp
sub
mov
sub
or
add
fsubrp
rcl
fnstenv
notl
mov
adc
sbb
fidivrl
pushf
popa
lahf
aas
addr16
das
dec
add
call
leave
push
in
dec
jp
jecxz
hlt
sbb
cmp
repnz
push
mov
jl
mov
dec
cmp
pop
pop
adc
jmp
cmp
add
insb
jmp
repnz
xchg
xchg
sub
pop
push
and
jmp
xrelease
jge
sahf
insl
inc
test
cmpsl
ljmp
mov
repz
pop
dec
subb
mov
test
dec
mov
sbb
ss
ficoms
xchg
lcall
jle
int
out
mov
sarb
rclb
iret
adc
or
aad
into
sbb
leave
fadds
sbb
fst
pop
dec
and
loopne
xchg
push
loope
mov
lock
jne
pop
add
mov
adc
mov
shll
pop
mov
andl
mov
dec
movsl
pop
cli
movsl
sub
sahf
add
insl
add
adc
dec
or
pop
outsb
rorb
and
les
fsubrl
add
pop
data16
adc
jnp
pop
rol
add
xchg
add
xor
nop
xor
inc
test
cwtl
test
mov
aaa
lea
xor
sahf
jmp
jbe
icebp
inc
outsb
popf
pop
loope
ja
movsb
cmpsb
test
test
jno
push
stc
and
push
xorb
sbb
pop
mov
enter
out
jbe
popf
loop
shll
pop
outsb
aas
sub
mov
push
insb
inc
push
pushf
pop
xchg
add
cmpsl
cwtl
sub
das
jb
push
jns
inc
ret
jae
enter
cld
mov
rcl
jmp
or
stos
jns
fwait
push
cmp
mov
dec
adc
push
dec
ret
mov
sbbb
cmpsb
rclb
lcall
aaa
jecxz
call
aam
notl
xor
arpl
mov
fwait
cmp
test
mov
mov
inc
mov
pop
push
and
movsl
sbb
icebp
les
mov
pop
push
enter
adc
fsubl
pop
sbb
cli
pop
xchg
pop
adcb
iret
or
push
and
aas
data16
pop
lds
fcompl
dec
sbb
xor
movsb
adc
andl
pop
ret
pop
movsb
lcall
icebp
dec
jo
aam
mov
out
pop
pop
lcall
lahf
ljmp
divb
dec
push
xchg
stc
insb
pop
addr16
sub
sub
jb
xlat
push
push
xchg
and
or
mov
scas
stos
insb
test
pop
enter
mov
or
mov
lret
dec
mov
or
rcl
dec
sbb
pusha
out
icebp
mov
mov
xor
cltd
imul
xor
mov
xchg
cmp
sub
test
out
js
jmp
xor
cmpsl
mov
cmpsb
imul
xchg
xchg
jnp
mov
aad
jmp
ret
dec
cmp
pop
mov
mov
or
stos
ja
push
fstp
jle
or
mov
sub
in
sti
mov
pop
cmp
push
fs
pop
fidivs
lret
gs
das
sub
mov
inc
pop
push
test
ret
andb
cmp
cmpl
add
rcll
jge
dec
xchg
push
and
adc
pop
sbbb
mov
xor
pop
and
and
loop
iret
sub
popw
xchg
and
xchg
cmp
and
dec
push
bound
mov
jnp
dec
dec
mov
repz
jle
cmp
and
cld
pop
or
sub
mov
test
add
pop
orb
popa
imulb
pop
fxch
or
fucom
dec
mov
fisubrl
push
sub
jb
jg
mov
jns
inc
arpl
nop
mov
mov
lret
mov
xlat
dec
imul
push
bound
inc
fnstenv
test
loope
push
jne
lods
mov
inc
add
cmp
sbb
and
sbb
dec
push
enter
mov
mov
stos
mov
clc
neg
push
or
iret
cltd
outsb
pop
add
adc
ret
movsl
jne
subb
outsl
pop
call
shrl
lock
adc
dec
xor
jns
push
jge
sbb
mov
dec
mov
bound
mov
in
jmp
enter
fcomip
pop
sub
push
pop
xchg
cmp
mov
loopne
cmp
and
dec
stc
jo
mov
cmpsl
push
xor
sbb
xlat
data16
repnz
xlat
adc
mov
cli
mov
ret
mov
iret
and
sub
sub
iret
jle
cmpsl
jmp
dec
dec
push
push
inc
jmp
sbb
mov
sbb
fists
subb
xchg
movb
xlat
xchg
aad
jl
insb
xchg
out
jo
mov
add
test
std
adc
adc
sti
jge
aam
test
std
cmp
testb
lods
xchg
sbbl
imul
pop
jae
or
in
fldt
test
cmc
sbb
mov
or
cli
daa
cli
xchg
lret
int3
jg
cmp
ret
ja
popa
mov
andl
xor
mov
jae
sbb
cmp
dec
dec
mov
insl
enter
sub
jecxz
jp
jae
dec
push
xlat
mov
push
push
movsl
insl
negl
pop
adc
repnz
js
lcall
or
lea
mov
xchg
mov
push
mov
cmp
mov
ficoms
aas
push
sub
push
stos
sbb
mov
lcall
dec
dec
mov
imul
sti
call
out
mov
inc
xchg
mov
imul
add
movsb
sbb
notb
xchg
or
mov
lret
xchg
out
dec
dec
pop
lods
or
shrb
and
loopne
bound
fstpt
movsl
push
ds
jg
pop
stos
jbe
mov
aaa
repz
out
hlt
jmp
pop
les
sub
dec
jle
fstps
lock
or
sub
mov
dec
pop
cs
push
hlt
movl
xor
inc
clc
cmp
lahf
lret
xchg
gs
stc
aad
xor
in
out
push
mov
fistpl
jae
loop
std
jo
cld
rcl
inc
popa
push
lea
enter
repnz
push
jns
leave
lret
ret
cmp
aad
leave
xor
aaa
push
mov
push
jne
repz
inc
xchg
out
mov
aaa
cmpsb
mov
pusha
roll
roll
das
lldt
mov
jmp
lea
loopne
mov
dec
cmpsl
push
or
cltd
sub
cmp
mov
or
mov
adc
in
dec
out
xchg
cmpl
lahf
xchg
ret
scas
inc
jmp
mov
insb
or
test
loope
clc
fimuls
xchg
cmp
sub
movsl
jp
push
xchg
sub
call
add
cwtl
adc
adc
orl
adc
repz
inc
arpl
mov
xchg
push
pop
insl
dec
call
mov
adc
out
jge
js
sub
adc
rol
rolb
jmp
push
jne
out
or
shll
jl
scas
or
arpl
mov
xor
mov
mov
cmpsb
testb
out
mov
es
enter
cs
lahf
jae
stos
loop
das
pop
xchg
mov
int3
pop
out
push
xor
pop
ret
pop
dec
pop
sbb
lds
insb
jb
in
push
mov
xchg
sti
mov
cli
pop
imul
lock
xchg
jecxz
push
out
add
mov
mov
push
into
test
inc
inc
adc
es
cmp
or
in
push
std
arpl
mov
mov
and
test
xchg
xchg
cmp
addr16
movsl
sbb
or
inc
fstpl
or
mov
mov
xchg
mov
mov
popf
ss
push
popf
pop
jmp
push
xor
enter
xchg
cltd
sbbl
adc
xor
es
mulb
aad
je
pop
in
in
mov
push
xchg
mov
xchg
pop
pop
ds
jmp
jle
scas
jge
push
lahf
repnz
leave
daa
or
int
in
in
xchg
ret
loop
pushf
adc
insl
test
push
repnz
aas
push
jb
jmp
fildll
out
scas
clc
cmp
mov
inc
sbb
insl
int3
push
push
xor
fldt
and
or
ljmp
fmuls
pop
dec
int
push
pop
xor
xor
add
fs
mov
dec
fldl
sbb
gs
cmpsb
movsl
or
adc
cs
push
mov
push
jo
dec
cltd
pop
push
test
push
repnz
lock
in
adc
push
mov
mov
pop
fsubrp
repnz
and
pop
push
pop
sbb
loope
jge
pop
mov
mov
andl
jns
inc
cmp
jae
loop
mov
pusha
or
inc
in
push
fimuls
or
mov
jae
orb
xchg
loope
shrl
dec
cmp
mov
jmp
outsl
mov
inc
sbb
add
cmc
dec
push
bound
nop
xor
lds
push
dec
pop
cmpsl
std
movsb
insl
movsl
jp
sti
test
adc
push
xchg
xchg
ret
and
dec
pop
jbe
mov
or
sub
mov
cwtl
in
xor
fsubrs
mov
push
out
pop
dec
cmpsl
jnp
dec
mov
mov
loopne
test
bound
movsb
pop
sub
cmp
test
mov
push
mov
loopne
mov
push
add
mov
cld
movsb
ljmp
test
xchg
dec
addr16
sub
or
jmp
mov
push
in
push
sub
mov
or
mov
xor
dec
xor
jp
clc
mov
mov
outsl
test
test
push
test
push
xchg
out
movsb
push
sbb
dec
into
mov
decl
or
cli
adc
decb
out
aad
mov
push
sbb
pop
loope
push
xchg
fadds
aam
lret
mov
jb
sub
iret
sti
enter
mov
fstl
inc
aad
out
and
mov
repnz
jo
add
dec
pop
xor
lret
repnz
lea
and
mov
fsubp
sbb
outsb
clc
ja
inc
jbe
pop
lahf
jbe
mov
cwtl
in
mov
add
lret
clc
cmp
push
imul
jnp
stos
repz
mov
popa
mov
sub
imul
push
vcvtsd2si
fbstp
divl
push
mov
rolb
jbe
inc
jle
jg
pusha
std
testb
mov
bound
push
cmp
push
adcb
add
jae
add
fnstsw
mov
bound
in
fimull
adc
xlat
sbb
mov
mov
ret
cmp
mov
push
sub
pop
xchg
test
pop
testl
mov
fcomps
out
lret
mov
and
add
and
in
mov
push
xor
nop
in
pop
pusha
std
xchg
jl
outsl
adc
add
dec
lret
mov
loopne
cmp
gs
or
pop
rcll
clc
out
test
fiaddl
ret
jmp
ss
jle
std
js
pushf
sbb
leave
popf
arpl
mov
gs
adc
mov
xor
or
mov
fidivs
loope
mov
out
add
adc
popf
mov
int
mov
arpl
ret
push
mov
int3
mov
adc
push
shl
das
lret
ljmp
pop
dec
push
pop
ficomps
mov
mov
mov
int
push
clc
sbb
xchg
sahf
jbe
and
iret
mov
mov
jl
ret
and
xchg
jo
mov
jmp
pop
stc
fistpl
in
mov
jbe
and
dec
mov
dec
lahf
insb
cltd
pop
sti
sbb
and
je
mov
sbb
add
push
fistps
xor
test
xor
inc
lods
scas
push
into
push
jno
lret
push
or
and
inc
lods
das
inc
test
mov
adc
out
fstps
popa
lcall
pop
cmpb
lcall
movsl
lcall
push
decb
nop
and
add
aaa
imul
jl
stos
lret
dec
out
jl
and
inc
pop
imul
ljmp
cwtl
stc
call
enter
ret
lods
pop
dec
sub
and
push
xor
das
mov
call
mov
sub
ds
sub
and
loope
movsl
cmp
cs
or
addr16
fistps
jno
fdiv
sbb
ss
incb
cmp
jg
dec
mov
clc
mov
addr16
pop
mov
push
add
int
jno
call
xor
mov
lret
jb
js
inc
je
lret
pop
inc
or
and
repz
sbb
inc
leave
imul
mov
les
pmaddwd
push
mov
clc
stc
outsb
pop
fcmovu
and
or
push
add
cmp
mov
jl
leave
iret
push
mov
into
sbb
nop
and
add
dec
xor
rolb
push
fidivrs
ss
or
dec
xchg
xor
pop
jnp
cld
inc
lretw
clc
loopne
stos
pop
jno
xor
repnz
popa
fs
mov
pop
in
scas
stos
fisubrs
sub
mov
or
push
add
pusha
mov
sar
sbb
add
and
lcall
shrb
adc
fdivs
mov
ja
jmp
aad
mov
add
loop
mov
jnp
sub
xchg
rcll
sbb
cmp
jle
mov
adc
and
mov
xchg
dec
jge
clc
push
negl
iret
mov
mov
mov
inc
adc
add
sub
es
inc
int
cltd
sbb
fcompl
sbb
lret
xchg
stos
hlt
sub
push
in
or
shll
icebp
sub
xor
bnd
fidivrl
dec
das
adc
inc
mov
adc
jne
sti
jp
sub
or
dec
lfs
jp
mov
ficomps
pop
addr16
xchg
fsubs
das
jo
jb
jo
cmpsl
dec
out
loope
jl
cmp
das
and
cmp
rolb
adc
jmp
xchg
adc
cli
sub
ret
pop
call
add
sub
std
icebp
inc
sarl
mov
adc
mov
pusha
inc
movsb
push
repz
scas
movsl
insl
push
cs
lods
cmpsb
shr
subb
cmp
cmp
jo
xchg
lret
jmp
aam
xor
pop
mov
out
shrd
lds
es
ret
and
add
mov
out
mov
pop
outsb
punpckhwd
cmpsb
inc
push
leave
cmp
dec
jae
cld
or
daa
andl
push
xor
push
mov
call
loope
inc
jge
repz
adc
inc
xlat
jp
pop
scas
aaa
lret
mov
mov
lea
inc
mov
rcrl
jl
xor
loop
push
dec
push
dec
add
fistps
mov
inc
jmp
aaa
push
xlat
les
jmp
inc
dec
stc
cmp
sub
inc
fmuls
xchg
fstpt
pop
pusha
or
mov
scas
movsb
shrl
je
add
mov
xchg
push
xchg
jmp
bsf
xor
pop
cmp
xchg
mov
pusha
sbb
cmp
inc
lret
outsb
pop
fnstenv
fmuls
mov
or
in
xor
push
pusha
push
jge
inc
rorl
lods
mov
xchg
push
jbe
jnp
mov
lret
jmp
mov
decl
movsl
mov
pop
add
pop
movsb
add
shr
pop
xchg
cli
mul
push
push
in
out
mov
xchg
mov
in
push
test
clc
mov
lahf
add
js
jb
and
pusha
xchg
sti
jno
sbb
aam
into
imul
pop
mov
add
fdivrs
adc
lods
or
ficompl
sbbb
hlt
out
xorl
and
repnz
dec
or
adcl
dec
fldl
ljmp
insb
stc
mov
push
stos
inc
arpl
ja
imul
aad
pop
imul
xor
cmp
xor
jmp
movsl
jns
push
dec
mulb
dec
test
dec
or
push
das
xchg
sbb
ja
xchg
dec
jo
xchg
xor
es
add
adc
and
sbb
jbe
rclb
fldcw
dec
mov
xchg
fcoms
xchg
fmuls
les
sarl
scas
pushf
lods
out
push
add
sbb
imul
inc
push
jnp
cmpsb
int
hlt
div
fisttpl
movsb
inc
andl
lods
test
dec
cwtl
mov
div
mov
and
roll
and
in
adc
cmp
data16
cmp
and
mov
cmp
in
in
lods
les
test
push
pusha
aaa
sahf
jbe
xchg
test
xchg
test
cli
xchg
ret
cli
lea
sub
mov
adc
mov
pushf
out
mov
sbb
ret
in
cmp
and
pusha
push
icebp
xchg
mov
fwait
mov
fidivs
cltd
lret
cmp
pop
mov
sarl
or
test
and
push
sub
lods
pop
jo
jns
aaa
mov
cli
xor
cli
cmp
push
add
dec
jecxz
add
adc
leave
push
mov
adc
stos
pop
cs
gs
roll
xchg
adc
inc
outsb
cwtl
adcl
jae
inc
xchg
pop
push
jo
add
mov
outsl
mov
xchg
pop
inc
mov
jo
cld
imul
rcll
in
add
or
shll
ret
cltd
push
cli
loopne
mov
fisubrl
data16
push
inc
fwait
and
mov
mov
and
mov
rcll
fwait
inc
ret
xor
arpl
push
cld
lret
push
lods
div
je
lret
sub
mov
sub
inc
mov
aaa
out
insb
cmp
sarb
jb
push
add
popa
mull
and
mov
das
xchg
mov
xor
roll
inc
xchg
lea
out
in
xchg
mov
cmpsb
inc
sti
push
push
rcrb
dec
xor
push
xor
test
jb
icebp
sahf
dec
add
std
leave
xchg
add
pushf
sbb
or
mov
xchg
mov
sbb
adcb
fld
or
xchg
ret
sbb
lret
xor
cmp
mov
mov
cltd
pop
pop
in
push
mov
addb
fs
lcall
xor
repz
das
hlt
cmc
sar
cmp
adc
loope
stc
icebp
mov
daa
sub
push
cli
incl
repnz
sarl
cmp
cmp
cmp
mov
jle
sbb
push
dec
or
xor
arpl
inc
jg
test
xchg
xchg
insb
jp
cmp
mov
icebp
cmp
and
aad
add
push
push
mov
mov
push
data16
mov
or
mov
pop
xor
daa
jb
int
pusha
ffree
pop
pop
dec
fdivrs
movsl
jmp
gs
cmp
xchg
shrb
mov
pop
loopne
test
out
lcall
icebp
cmp
cltd
bound
loope
sub
call
movsb
sbb
int3
fcoms
maskmovq
cmp
xor
insb
sbb
sub
es
cwtl
imul
iret
adcl
inc
in
inc
mov
sbb
mov
mov
dec
add
outsl
or
mov
cmpsb
mov
aas
xchg
in
xchg
push
into
iret
data16
pusha
xchg
cmc
rcrl
leave
movsb
xlat
sub
ljmp
es
sub
mov
aad
cmp
sbb
mov
push
xor
out
leave
sub
dec
mov
mov
inc
mov
es
adc
mov
imul
mov
jne
andb
rolb
aaa
adc
int
or
ret
andl
in
cmp
scas
xchg
adc
sbb
test
push
xchg
pop
xor
fs
scas
mov
idiv
adc
rcrl
jb
cltd
sub
dec
fildll
jg,pn
jg
inc
sbb
pop
test
popa
inc
and
push
mov
rcrb
inc
pop
cs
sub
test
push
jge
out
lds
mov
inc
xchg
pop
movsw
lock
xchg
dec
mov
repnz
adc
test
adc
mov
imul
dec
imul
xor
fnstcw
imul
jno
out
shrd
mov
mov
or
rcrl
fsubrs
adc
scas
test
jle
inc
xchg
mov
pop
jbe
cmp
sbb
out
mov
fldcw
xor
mov
out
shlb
inc
popa
dec
rolb
push
in
out
ret
mov
inc
add
or
xlat
and
out
fisttps
outsl
mov
adc
adc
mov
dec
push
jg
xor
sub
int
add
adc
clc
jb
xlat
movsb
or
mov
aaa
jns
aam
sub
iret
sub
stos
dec
inc
aad
iret
add
iret
push
jmp
mov
fbstp
sbb
popf
nop
pop
aam
xchg
xchg
or
bound
sbb
outsb
sub
xor
mov
ror
sbb
push
movsl
cmc
mov
sbb
inc
out
pop
repnz
pop
ja
iret
sbbl
jae
adc
divl
add
jg
or
cli
dec
arpl
clc
rolb
idivb
lea
jns
int3
sub
inc
fistpll
and
dec
add
pop
jb
aad
ret
in
scas
or
xor
mov
imul
sbbl
or
fsubs
std
add
clc
aad
in
loopne
mov
xchg
insl
out
xchg
sbb
fs
pop
and
push
das
leave
repnz
jmp
add
mov
repnz
jmp
ljmp
iret
mov
popf
add
jno
sub
push
sarb
repnz
mov
js
stos
add
or
lock
mov
mov
xchg
loope
adc
lock
dec
inc
push
sarb
cld
jl
mov
push
or
cmp
add
jae,pt
insb
cmp
xchg
xlat
dec
jl
adc
lods
mull
shl
cli
cmp
add
subb
std
mov
inc
lods
fildl
add
xchg
push
fiaddl
jecxz
or
xor
mov
divb
and
inc
repnz
lcall
mulb
fdivs
lods
fistps
dec
xchg
insl
rcrb
or
les
dec
mov
into
test
shll
loop
ljmp
je
popf
es
push
xor
lret
mov
push
pushf
out
clc
aad
nopl
inc
lock
jecxz
test
fbstp
jg
ret
mov
cmp
les
jb
inc
adc
adc
mov
lcall
sub
sub
loope
add
mov
xchg
or
jne
mov
inc
mov
and
xchg
data16
xor
imul
xchg
cmp
cmp
out
std
loope
and
and
subl
into
push
adc
in
loop
ds
and
jbe
ret
sar
incb
inc
push
int3
stc
adc
pop
ret
mov
ret
gs
push
cmp
sbb
pop
mov
stos
roll
jg
pusha
cmp
testl
mov
mov
cmp
sub
xor
xlat
sbb
inc
cmp
cwtl
cltd
jnp
mov
mov
ficoms
sub
or
lea
aas
sbb
dec
aas
shlb
in
and
movsb
cld
lret
mov
loop
or
lods
mov
xor
or
adc
lods
mov
sahf
jnp
sbb
and
adc
fwait
inc
sub
jmp
and
test
and
lea
das
icebp
and
stos
dec
fistpl
sbb
addb
js
or
pushaw
js
sbb
test
cmc
test
xorl
movsb
rcrb
and
outsb
sbb
outsb
jmp
push
gs
out
int3
pop
cld
mov
inc
sti
or
test
test
fs
mov
jmp
inc
insb
fwait
lods
mov
ret
mov
xor
dec
mov
jnp
dec
ss
mov
dec
ss
push
ret
jb
jno
xor
popw
pushl
sub
popa
lret
jb
add
and
add
popa
jnp
scas
imul
ficoms
sbb
lods
jb
cmpsb
add
adc
mov
mov
loopne
stos
jle
adc
add
sbb
and
sub
adc
aad
shll
mov
jle
mov
repz
das
popa
aaa
push
xor
pusha
dec
shrl
pop
dec
fstl
leave
or
sub
ljmp
pop
jno
scas
xor
xchg
cmp
and
or
push
loop
or
aam
xor
lret
test
out
cmp
cwtl
add
ljmp
out
movsb
mov
movsb
and
mov
fstpl
lea
or
rol
push
stos
dec
aas
add
daa
cmc
fcomps
push
pop
test
aas
jae
push
mov
mov
adc
pop
movsl
into
inc
sarl
ja
pop
daa
sarl
pop
add
pop
or
mov
lods
sub
dec
jns
nop
mov
jno
movsl
mov
in
push
pop
push
loop
cltd
rorl
push
xor
push
xchg
jg
and
dec
mov
push
sub
mov
sbbl
xchg
mov
je
dec
roll
cmp
mov
jp
xor
test
mov
scas
sahf
cwtl
outsb
test
xchg
and
out
push
add
out
sub
ljmp
lock
inc
push
out
mov
push
dec
sub
addr16
mov
or
daa
andl
cmc
std
xchg
or
ret
dec
jno
mov
ljmp
jb
mov
dec
jo
mov
cmp
pop
or
mov
popf
cmc
xchg
xor
add
mov
xlat
mov
pop
sub
ja
rolb
repnz
mov
popf
push
in
push
ffreep
dec
pop
inc
xchg
mov
pop
ss
jmp
pop
repz
sbb
pop
test
nop
les
pop
mov
xor
dec
fistpll
mov
lds
and
mov
inc
jecxz
or
shlb
sbb
xor
iret
push
imul
xor
xchg
and
scas
enter
add
test
insb
inc
movsb
and
and
dec
inc
stos
leave
push
ja
into
aad
sbb
mov
ficompl
push
mov
inc
push
iret
cmpsl
adc
cli
push
dec
xchg
test
pop
xorl
jns
cmpb
int
scas
int3
and
sti
pop
fisubl
int
and
out
pop
sub
fcoml
loopne
inc
std
xor
test
and
push
popa
add
dec
xchg
add
mov
pop
test
mov
loope
sub
nop
rorl
aad
cmpsl
cmp
cmp
int
push
sbbb
enter
push
adc
pop
lret
push
ljmp
xor
das
add
push
inc
std
cmp
inc
or
rcrl
mov
sbb
mov
jae
out
cld
in
sub
movsb
mov
push
mov
movsb
shl
jb
daa
ret
push
popa
int3
rol
or
sub
data16
add
mov
pop
mov
fists
es
outsl
push
dec
dec
aam
jnp
cwtl
leave
stos
shlb
lahf
stos
test
jo
lret
pusha
fisttps
fdivl
adc
push
nop
sbb
xchg
mov
movsb
pop
xchg
out
jmp
js
ret
inc
mov
cmp
adc
lret
sti
test
mov
insl
xchg
fiaddl
aas
stos
push
xchg
cmp
out
push
mov
je
aas
stc
sbb
xchg
sub
out
lret
imul
aas
jp
movsb
jb
sub
in
xorl
arpl
imul
inc
sahf
or
pop
lea
add
or
cmpsl
mov
movsl
jae
popa
push
icebp
pop
in
add
pop
ss
inc
gs
and
mov
inc
and
cli
cli
pop
or
aaa
push
inc
pop
jae
mov
es
xor
stc
sti
xchg
xchg
enter
clc
or
insb
xor
in
or
or
fisubrl
loopne
cwtl
adc
push
sti
xchg
jns
arpl
cmc
or
fsubl
pushf
test
jo
bound
xor
add
push
aas
ret
popf
mov
mov
rol
aaa
ss
movsb
mov
jecxz
cmp
imul
mov
ja
sbb
rol
out
insb
inc
mov
sbb
xchg
lea
in
loopne
mov
xchg
int3
rcrb
mov
sub
mov
idivb
and
stos
pop
daa
dec
push
inc
sbb
adc
mov
in
jmp
and
aaa
push
push
adcl
rclb
call
sub
mov
cmp
es
test
push
xchg
add
popw
add
push
pop
sti
movsl
pop
int
mov
dec
push
into
and
ss
jle
pop
sub
data16
pop
adc
inc
movsb
mov
pushf
add
sarl
mov
jmp
jmp
lods
cmp
call
sahf
iret
sub
adc
les
scas
nop
lahf
xchg
scas
mov
and
mov
push
pop
lahf
das
dec
push
mov
mov
xchg
into
pushfw
inc
shrb
xor
fwait
imul
fwait
or
xchg
push
cld
inc
jle
cld
push
sub
cmp
cmp
movsl
outsb
repnz
inc
stos
lcall
add
lea
cmpsl
inc
into
inc
sub
rol
sahf
add
gs
adc
pop
and
pop
shlb
sarl
and
push
mov
dec
js
stos
aas
ret
lret
es
push
xor
xchg
fldenv
js
add
add
bound
pushl
or
xchg
pop
sbb
test
inc
movsb
stc
nop
in
stc
cmc
sub
mov
int3
jmp
movsb
fwait
js
push
pusha
push
xchg
jno
push
out
xchg
es
int3
xlat
cmp
ja
dec
rorb
add
pop
pop
xchg
ja
ret
xchg
mov
pop
inc
dec
mov
imul
push
iret
mov
test
mov
pop
fldcw
pop
pop
insb
es
push
mov
aam
adc
inc
mov
arpl
or
adc
push
jp
mov
cmp
lcall
pop
out
imul
sub
pop
pop
dec
mov
pop
std
mov
or
out
cs
cmpsb
leave
adc
pop
or
stos
jg
cld
xchg
xchg
push
sarl
hlt
pop
cli
push
fimull
add
lahf
call
pop
repz
inc
cmp
and
push
inc
jl
in
psllw
scas
mov
in
cmp
or
pop
in
fists
mov
push
frstor
or
addl
lea
ret
cmp
movsb
cmp
rclb
inc
lods
sarb
outsb
or
add
add
jmp
push
xchg
mov
stc
aam
cmp
js
cmpsb
push
mov
inc
xchg
add
sbb
std
je
mov
push
lock
dec
mov
mov
pop
push
mov
sub
pop
out
je
push
fmull
adcb
fidivrs
in
jecxz
adc
push
push
fistps
cmc
pop
mov
jl
sbb
jb
popa
cwtl
daa
push
sbb
data16
inc
cmp
dec
int3
clc
mov
lret
lret
push
cmp
sub
inc
sub
mov
lret
fsub
outsb
jno
mov
imulb
xchg
cmc
loope
aaa
cmp
adc
add
rcl
sbb
sub
pop
adc
mov
test
mov
std
jnp
lock
imul
mov
jmp
xor
sahf
mov
mov
push
hlt
rol
int3
repnz
out
mov
fnsave
scas
or
and
sub
push
and
lock
mov
pop
cmpsl
pop
pop
mov
xor
shlb
cmp
add
out
add
and
xchg
negb
repnz
addr16
cld
jmp
shlb
add
sbb
insb
pop
movsl
xlat
push
scas
sub
push
fidivrs
les
mov
lods
mov
notb
fdiv
xor
dec
jg
pop
xchg
leave
cmpsb
aas
jmp
test
ds
out
add
sbb
inc
les
popl
out
sbb
add
push
test
jg
push
mov
adc
xchg
mov
xlat
out
nop
push
mov
dec
in
jp
fsub
mov
sub
ficompl
std
sti
and
jb
aad
icebp
inc
xchg
jno
xchg
pop
out
test
popf
cmpl
inc
sbb
imul
xchg
ja
filds
mov
movsb
in
out
dec
mov
or
jl
and
push
arpl
adc
and
jae
xor
stos
stos
mov
or
or
adc
das
or
movlps
scas
sahf
testl
push
scas
insb
xchg
icebp
mov
repz
push
test
mov
inc
lds
inc
ret
add
jge
cs
push
mov
xor
and
dec
incb
into
call
and
in
dec
rorl
in
pusha
adc
xor
pop
jge
xor
xor
negl
pop
jnp
loope
testl
ja
cmp
jnp
inc
jl
jp
clc
push
xchg
out
shrl
das
or
fxch
cmp
mov
xor
out
imul
insb
adc
or
and
dec
and
sarl
mov
sti
inc
push
mov
dec
adc
jne
cld
xchg
cmp
divl
dec
lds
test
mov
fisubl
xchg
dec
fisttpll
and
test
sbb
jne
outsb
ffree
and
add
loop
outsl
sub
cli
or
je
xor
sub
mov
jmp
dec
dec
mov
mov
lahf
push
lcall
add
lahf
arpl
fimull
out
test
inc
movsb
jb
and
insb
sub
cli
push
dec
dec
dec
movsb
sub
pop
add
or
das
push
xchg
jmp
in
push
xchg
hlt
push
shl
data16
mov
mov
pop
daa
xchg
out
mov
jns
inc
int
xchg
leave
add
sbb
insb
or
pop
jns
pusha
in
pop
sti
jnp
add
inc
dec
cmp
xlat
add
rcr
push
jle
mov
mov
jecxz
jmp
addl
and
imul
or
mov
les
ret
jne
adc
adc
lret
mov
mov
test
mov
fcmovbe
and
inc
and
lret
mov
fstps
lods
adc
pop
mov
add
jl
jbe
xor
fnstenv
mov
subl
fisubl
jmp
cs
lods
mov
aaa
scas
lret
lock
cmp
or
inc
mov
push
pop
les
je
test
fwait
popf
leave
pop
jp
pop
jb
mov
sub
mov
cld
cmp
mov
mov
mov
inc
adc
mov
stos
jg
out
jp
lcall
fidivs
scas
lds
push
jl
loopne
insb
or
cmc
out
test
gs
cs
loope
aad
and
rcrl
add
push
shll
mov
sbb
sbb
pusha
fs
testl
push
add
push
pop
clc
dec
jge
mov
push
add
lock
and
cli
iret
out
or
scas
icebp
add
sbb
arpl
int3
into
std
mov
cmp
adc
or
insb
cmp
sub
cmp
lds
jge
adc
test
jne
push
sbb
andl
fsubrl
pop
test
and
mov
orl
cmp
push
ret
inc
mov
jno
sahf
mov
movsb
adc
cmp
aas
minps
sub
test
insb
jge
mov
aaa
jo
lods
pushf
lret
cmp
and
movsb
das
mulb
test
fstl
clc
in
sbb
sub
testl
rolb
sub
mov
leave
bound
fsubrl
outsb
dec
dec
cmp
mov
jl
mov
lock
cs
and
cli
and
mov
fsub
dec
jmp
dec
mov
jo
les
or
sbb
and
inc
push
dec
dec
aaa
in
xor
mov
scas
in
stos
in
fnstcw
jo
cmp
repnz
fwait
xor
pop
int
mov
sbb
xchg
xchg
mov
or
jp
mov
push
and
jb
cltd
addr16
out
roll
mov
adc
enter
sub
lret
mov
jecxz
dec
nop
bound
cltd
jae
push
add
insl
jg
sbb
add
pop
jb
xchg
jo
sbb
and
daa
add
and
xchg
mov
pop
jb
and
inc
pop
sbb
adc
imul
xchg
add
or
mov
sbb
mov
push
mull
in
insb
or
je
cmp
int
data16
dec
test
pushf
cld
and
pop
idivb
dec
inc
jmp
add
scas
mov
sbb
mov
fstpl
test
add
aaa
inc
pop
sub
push
or
das
movsl
pop
cmp
and
adc
stc
clc
pop
movsb
std
cmpsl
mov
loopne
jbe
fsts
lcall
dec
push
imul
popa
inc
mov
in
lea
add
or
or
inc
mov
dec
sbb
or
cltd
outsl
xchg
jl
fistps
subl
ud2
arpl
jecxz
add
or
jno
adc
pop
fisttpll
shrb
push
pop
dec
out
mov
and
or
xor
mov
mov
or
pop
lock
xchg
repz
xor
test
jmp
cmpsb
test
shll
stc
add
adc
int3
pop
push
fwait
inc
sub
xchg
sbb
xor
mov
jge
ss
xor
sbb
adc
push
ja
xor
cmpsb
outsb
sbb
sub
sub
sub
push
arpl
mov
hlt
mov
movsl
adc
ljmp
xchg
movsb
xchg
add
jl,pt
arpl
push
cmp
jmp
add
xor
jecxz
imul
es
inc
mov
or
movsb
lahf
push
dec
xor
mov
or
cmp
mov
les
shll
mov
in
js
mov
mov
cs
cmpsl
fidivrl
mov
mov
sbb
xchg
lret
ror
stos
xor
hlt
nop
xchg
shlb
fdivs
sbb
sbb
cmp
and
dec
fsubp
mov
adc
fdivrl
mov
std
sub
pop
mov
xor
sub
lret
pop
pusha
inc
adc
jbe
scas
fimull
sub
hlt
and
les
movsb
shlb
jl
mov
ret
testl
xchg
jo
mov
jge
jns
lret
dec
lods
add
pop
enter
test
cli
inc
xchg
sub
jmp
test
push
xchg
mov
fcmovnbe
cs
into
sub
mov
clc
mov
or
out
pop
clc
and
mov
or
sahf
loopne
sbbl
fsubl
clc
mov
push
xor
dec
insl
cld
adc
dec
les
jns
test
fsubl
add
and
test
movups
daa
dec
push
xchg
cmpl
leave
cmpsl
push
xor
or
shl
sti
cltd
push
out
in
iret
lcall
pop
mov
pop
ja
loopne
jmp
insb
outsl
pop
loop
pop
loope
sub
les
xor
ds
xor
xchg
dec
movsb
adcb
das
push
lcall
lret
jb
push
xlat
inc
jp
shrl
fimull
es
inc
jb
cwtl
jo
sbb
cld
lock
xchg
push
lret
sub
sahf
mov
movsb
pop
shr
xor
imul
push
sub
mov
fisubrs
jg
pop
jecxz
cs
int
adc
fldcw
lds
cmpsb
jg
scas
or
mov
rclb
call
jns
mov
xchg
add
ffreep
jge
mov
ljmp
jg
lods
dec
addr16
push
hlt
jecxz
mov
xor
mov
gs
out
enter
and
stos
call
and
jno
mov
outsl
xchg
pop
dec
dec
aad
mov
leave
xor
xor
fndisi(8087
sub
outsb
xchg
add
mov
imul
lods
push
sbb
xchg
jl
xor
xchg
lods
flds
sub
xchg
addl
es
stos
dec
jb
repnz
sub
jnp
xchg
insl
dec
and
cli
iret
arpl
repz
mov
jno
mov
lods
mov
das
mov
daa
push
lea
addr16
and
inc
fs
imull
je
lcall
outsl
scas
js
mov
mov
dec
cmc
clc
testl
dec
repz
jae
cltd
data16
ljmp
fistpl
or
mov
aad
int3
xchg
gs
jno
xchg
aad
scas
add
test
lret
or
mov
stos
mov
test
jecxz
sbb
xchg
inc
sub
mov
and
popf
jae
loop
aas
dec
dec
sahf
xlat
adc
pop
xor
sub
les
push
fwait
ss
xor
int
daa
sub
sbb
pop
sahf
lret
pop
outsl
adc
icebp
mov
inc
rclb
loop
push
mov
popf
add
mov
xor
or
or
insl
outsb
jl
in
fidivl
adc
dec
stc
pop
cmc
jg
push
push
xchg
sbb
sbbl
sub
and
subb
shrl
icebp
cmp
jg
sbb
or
mov
cmp
lcall
loopne
js
in
daa
jo
cmp
mov
jae
fcmovne
js
into
ds
sub
insb
dec
jecxz
pop
mov
push
scas
fnstenv
mov
push
sahf
data16
pusha
pop
in
ja
xchg
clc
xchg
addr16
push
fwait
sahf
fcomps
mov
mov
or
or
push
dec
je
and
ss
adc
push
fidivs
in
push
lret
outsb
stc
cmpb
imull
xchg
pop
or
push
jge
imul
jg
cltd
int
mov
cli
sub
insb
jecxz
aaa
and
add
push
and
enter
jl
fsubl
ds
inc
sbb
popf
nop
movsb
jle
pop
push
push
pop
repz
mov
jb
jecxz
aas
cmp
fcomps
pop
fisubs
sub
call
sub
lods
adc
xor
mov
into
dec
mov
ja
cmp
lret
out
xchg
push
lret
xchg
fstl
cltd
int3
cmp
fstp
add
push
enter
popa
xchg
mov
mov
enter
pushf
pop
mov
stos
gs
out
dec
bound
loop
push
and
daa
cld
cmp
in
gs
dec
ds
sbb
jl
stos
lea
out
loope
xor
pop
cwtl
aam
add
mov
push
fildll
movsl
xlat
push
jecxz
add
push
dec
add
mov
adc
mov
push
fstpt
sahf
fwait
and
outsb
jns
sub
dec
mov
dec
lret
sbb
pop
jne
mov
jne
xor
imul
cs
mov
xchg
lahf
add
ds
sbb
hlt
sbb
and
dec
lods
addr16
push
adc
lcall
out
sbb
xchg
pop
js
lcall
jns
int
mov
cmc
and
sub
mov
jno
ss
xchg
shl
jge
gs
js
icebp
je
mov
sbb
mov
or
scas
or
xchg
testb
dec
push
inc
lahf
push
les
addl
cltd
ret
pusha
push
mov
cmovno
mov
pushf
jbe
mov
inc
adc
adc
xchg
pushl
mov
and
add
xchg
or
ljmp
stc
mov
mov
jnp
call
sbb
xchg
clc
sub
out
xchg
test
and
fdiv
dec
lret
std
lds
xchg
push
add
jnp
mov
cmp
retw
push
xlat
and
mov
mov
push
push
icebp
int3
or
mov
test
cld
out
cmpsb
loop
out
sbb
add
jbe
popf
jno
cmp
in
jo
test
add
cmpsb
jle
aam
aaa
jnp
xchg
mov
adc
jb
outsb
push
inc
pop
xchg
into
scas
loopne
mov
lcall
cmpsl
dec
mov
lcall
adc
mov
mov
jg
push
flds
jns
in
and
aaa
je
cwtl
inc
call
out
xor
xchg
pusha
loope
mov
add
bound
js
mov
and
xor
dec
push
pop
inc
pushf
dec
inc
pop
andb
cld
loop
hlt
bnd
fistpll
popf
es
pop
arpl
mov
hlt
xchg
and
cli
jge
dec
or
and
and
or
outsb
jbe
jmp
or
push
adc
int
pop
pop
movl
in
push
sbb
jnp
out
insb
sub
mov
add
or
pop
push
mov
lods
and
daa
ss
out
mov
leave
mov
addr16
dec
mov
sbb
cmp
and
cmpsl
test
push
cmc
and
stos
pusha
cltd
aaa
cld
ja
mov
mov
sbb
push
popf
lcall
add
sahf
ss
sahf
pushf
fnstcw
les
movsb
stos
push
xchg
mov
daa
addl
dec
cmp
gs
jecxz
bound
es
xchg
shll
mov
bound
rcll
les
insb
leave
pop
lea
ret
sbb
dec
ds
jmp
pop
mov
sub
mov
pop
out
xchg
pop
pop
out
dec
mov
pop
cltd
ret
jmp
xchg
jmp
xchg
inc
jnp
mov
adc
pop
mov
bnd
arpl
pop
in
mov
pop
fidivrs
push
stc
fdiv
inc
cltd
xchg
mov
mov
adc
adc
push
adc
dec
sub
push
lods
iret
dec
clc
outsb
mov
inc
and
add
movsb
call
popf
jb
loopne
popf
hlt
hlt
test
outsb
jae
mov
mov
in
std
push
in
loope
popa
push
repz
pop
sbb
mov
push
jnp
push
decl
push
pop
ljmp
int
ljmp
aaa
cmc
rcr
jae
aaa
test
mov
adc
out
xchg
dec
mov
fisubs
in
and
push
jne
or
loop
mull
mov
push
pop
std
jecxz
jb
pop
test
iret
sbb
ret
lods
adc
cmpsb
mov
loopne
xchg
test
sysexit
rorb
xor
jmp
adc
or
xchg
leave
mov
out
mov
mov
inc
leave
rcll
in
xchg
cs
dec
scas
mov
dec
mov
popa
xchg
add
mov
mov
adc
mov
fiaddl
sarb
imul
inc
lcall
mov
jg
clc
cmc
cmp
or
out
fiadds
xchg
pop
gs
add
pusha
repnz
push
jmp
cmp
xchg
jecxz
and
shr
int3
loopne
insl
rcll
fcomi
icebp
or
sarl
xchg
push
in
sbb
scas
jle
xor
in
mov
es
gs
cmp
sub
fsts
sbb
and
outsb
pop
pop
pop
add
jle
mov
dec
adc
and
jp
repnz
jo
adc
in
dec
jo
fildl
cmp
xor
pop
push
or
inc
jl
xchg
cmp
in
ja
sbb
out
movsl
pop
popa
fld
jno
xor
sub
push
imul
xor
cmp
push
clc
add
push
sub
inc
pushf
push
test
jge
test
out
inc
fcoml
sbb
and
sbb
jb
insl
jle
stos
sbbl
scas
or
imul
cmp
movzbl
cld
insb
sub
dec
ljmp
into
cmp
loope
jb
das
arpl
in
jp
adc
push
or
stos
push
adc
adc
test
dec
out
in
mov
pop
lahf
fdivrs
and
test
ljmp
pop
out
ja
and
addb
sub
mov
loopne
adcl
push
movsl
icebp
out
push
add
aam
sbb
mov
addr16
cmp
nop
mulb
and
inc
xlat
add
insb
fstpt
fdivrs
jp
out
add
jnp
int3
mov
cmp
add
push
cld
xchg
int3
xor
outsb
daa
mov
cmp
inc
add
pop
sarl
and
add
test
mov
mov
inc
rorb
push
add
sahf
xor
int3
ret
xchg
cs
add
repnz
xor
in
push
xor
push
mov
rol
push
sar
push
rclb
hlt
ljmp
mov
mov
shlb
mov
sub
mov
ret
nop
inc
xchg
mov
fisubrl
dec
jmp
repnz
sub
int
xchg
mov
dec
xlat
repnz
loopne
xor
insl
inc
fiadds
jmp
and
mov
ret
movsb
aad
add
loop
dec
pop
sbb
popf
movsl
pop
add
push
xlat
mov
inc
fldt
jnp
rcrb
cmp
stos
das
ret
inc
aaa
mov
pop
and
lods
into
dec
inc
sbb
stos
push
aad
out
pop
loopne
int
push
pusha
fstps
call
or
jo
jge
test
mov
inc
inc
repz
dec
mov
pop
test
clc
out
pushf
sbb
fdivrp
adc
lcall
fsubp
outsl
shl
xor
sub
rcrl
jne
xor
loopne
pop
mov
mov
mov
cs
fisubrl
popf
xchg
mov
inc
mov
gs
jo
cmp
je
jmp
xchg
fs
xchg
adc
jbe
test
fstpt
and
dec
mov
xchg
pushf
mov
jl
mov
insl
mov
mov
push
repz
stc
dec
push
insb
xor
add
sub
lahf
jl
add
ja
ret
sbb
ljmp
mov
loope
dec
shlb
stos
inc
cmp
pushf
jl
call
fmull
or
inc
and
adc
cmpsb
jns
fists
cwtl
jl
xchg
test
sub
mov
cld
jecxz
arpl
xor
scas
popf
sbb
pop
in
mov
cmp
in
lea
sahf
sub
loopne
or
mov
add
pop
xchg
iret
or
mov
dec
sbb
iret
xchg
mov
sub
pop
cmp
cmpsl
scas
popf
cmp
adc
and
dec
jecxz
sub
into
fmuls
add
aas
insb
cwtl
push
jbe
mov
ljmp
sbb
sbb
mov
add
lock
test
lods
xchg
mov
ss
mov
repz
scas
dec
addr16
inc
mov
lfs
fdivs
dec
adc
clc
test
icebp
add
addr16
inc
add
fsts
xchg
cld
mov
into
jne
movsb
xorl
pushf
jbe
lea
xor
xchg
mov
aad
out
jge
ss
iret
sarb
jbe
sub
add
pop
fildll
adc
lahf
and
mov
ret
out
nop
call
lret
test
add
cs
pop
push
push
add
js
add
mov
adc
and
pop
clc
ss
and
jp
or
out
cmp
mov
pop
std
rcrl
out
adc
outsb
cmpsl
mov
rclb
mov
sub
add
add
test
adc
les
pop
sarl
pop
fcomp
cmp
idivl
arpl
fimuls
mov
adc
js
add
pop
sub
push
fmul
es
loope
stc
push
sub
mov
cmc
push
or
mov
inc
and
out
jg
repnz
and
subb
gs
or
pop
mov
adc
xchg
inc
jge
loopne
push
or
loope
les
cli
mov
jmp
push
lret
insb
xor
mov
in
pop
lock
push
dec
cmpsl
inc
negb
sbb
ja
pop
aam
xchg
js
mov
jg
adc
lret
jp
xchg
in
xchg
mov
mov
inc
ss
add
sub
or
test
lods
xor
xchg
cmpsl
outsb
icebp
dec
pop
lret
pminub
push
in
fcomps
pop
out
es
xchg
aas
ret
dec
into
out
nop
out
xchg
rcrb
xchg
jb
int3
jno
push
fldl
push
mov
negb
mov
sbb
insb
or
xor
fdivp
adc
xchg
notl
pusha
fs
stos
enter
jmp
dec
stos
fnsave
pop
aas
negb
leave
mov
adc
push
pop
aam
inc
adc
shrb
aad
std
sbb
cmp
jnp
jns
ror
mov
fsqrt
pop
or
jmp
xor
mov
iret
cli
ret
dec
cs
and
xchg
mov
dec
cmp
sbb
cmp
loop
sub
sbb
mov
push
pushf
es
les
mov
leave
sbb
add
dec
daa
out
cltd
scas
xor
mov
push
adc
mov
scas
repz
sbbb
or
das
pop
cmp
mov
dec
aaa
mov
inc
subl
data16
daa
lock
adc
cmp
jmp
mov
cld
sbb
and
fwait
sarl
inc
lret
mov
cmpsb
xchg
mov
mov
inc
cmpsb
inc
inc
lcall
daa
mov
adc
and
mov
push
mov
mov
jmp
xchg
fiaddl
sbb
in
std
jnp
lret
sahf
stos
mov
aam
inc
les
and
movsb
pop
cmc
jb
loopne
push
in
incb
mov
out
xchg
sarb
cwtl
rcl
incl
add
cltd
shll
pop
cmp
lret
in
add
cmpsb
xchg
cmovno
dec
xor
sti
cmp
cmpsl
jbe
shll
es
scas
pop
cmp
out
pushf
jmp
out
bound
lock
inc
xchg
xchg
enter
popa
loop
ret
xor
stc
push
jbe
add
xlat
shll
mov
or
js
mov
in
add
mov
testl
lds
cld
push
add
lds
mov
test
pop
mov
add
in
out
or
adc
insb
push
adc
add
insl
sbb
gs
outsb
andl
mov
pusha
cmp
insb
das
xor
fcmovnb
bound
jo
mov
mov
pop
out
fsubs
pop
adc
xchg
pop
xchg
mov
mov
xor
iret
dec
xor
push
pushf
xchg
sbb
call
mov
jmp
mov
fisubrl
shll
inc
push
and
inc
icebp
lea
aam
mov
ja
lea
inc
push
cwtl
andl
shrb
sub
fstp
add
sbb
inc
mov
jno
and
xlat
cs
cmp
js
fidivl
mov
stc
icebp
cmpsl
lret
pop
xchg
xor
push
pop
mov
shlb
rorl
insb
rol
mov
shll
insl
mov
aam
inc
pusha
push
mov
pop
push
movsb
rclb
ret
cmp
or
cmc
insl
xchg
int3
nop
lcall
or
adc
lahf
dec
inc
jg
sbb
or
inc
add
and
dec
es
mov
xchg
shll
add
iret
mov
add
sbb
sub
inc
inc
mov
or
sahf
sbb
je
inc
dec
out
and
daa
and
mov
je
pop
pop
inc
cltd
dec
or
popaw
lds
sbb
sub
or
pop
xor
xchg
test
mov
fistpl
movsl
ds
pop
ljmp
outsl
rcrl
bswap
ret
test
cmp
inc
or
aaa
ret
imul
test
lods
sub
ja
xor
out
xchg
dec
inc
mov
jg
popa
out
lock
and
add
mov
mov
and
out
mov
fisubrs
into
in
pop
fistps
lcall
arpl
fcom
icebp
push
mov
pushf
aam
cmp
dec
inc
add
mov
jle
stos
mov
add
std
pop
enter
movsb
lcall
idivl
lods
cli
mov
jno
cmp
shlb
mov
lock
icebp
bound
inc
push
mov
adc
mov
cmp
outsb
jl
aad
ds
sbb
xchg
or
jl
js
lock
mov
stos
test
dec
js
in
test
cs
jbe
cmp
pushf
sbb
cmp
test
stos
adc
cs
sbb
out
dec
shll
shll
and
inc
push
pop
aas
sbb
aad
dec
cli
mov
push
pop
les
in
cwtl
mov
ret
hlt
daa
jge
gs
dec
out
xchg
call
insb
repnz
lea
sub
scas
dec
int3
movsb
push
jae
out
dec
jg
dec
xchg
or
imul
jecxz
scas
and
mov
inc
pop
je
cmp
outsb
push
call
push
inc
cwtl
call
push
push
arpl
dec
inc
or
enter
mov
xor
fistpl
mov
pop
or
fisttps
data16
cmp
leave
sbb
insl
int3
cmp
jbe
dec
pop
insl
movb
test
xchg
in
xchg
mov
or
fcomi
ljmp
cmp
in
jmp
inc
jb
cmp
push
arpl
push
cmp
cwtl
icebp
test
xor
xor
push
jnp
cltd
shl
or
and
popf
xchg
mov
jp
insl
cvtpi2ps
pop
adc
in
imul
es
inc
mov
jecxz
outsl
mov
xor
pusha
loop
jle
mov
mov
rorb
xchg
mov
sti
fbstp
mov
adc
scas
shr
jae
jp
mov
cmp
insl
mov
inc
pushf
mov
sub
jle
movsl
enter
aad
iret
in
xchg
in
lea
add
test
outsb
push
in
adc
stc
sbb
sbb
mov
and
sbbb
leave
mov
es
jbe
sbb
push
xchg
lods
adc
cmp
shl
out
cs
mul
js
adc
xor
icebp
sbb
xchg
ss
push
xchg
jno
rcrl
mov
imul
mov
lods
push
lods
enter
jmp
lods
mov
sbb
xchg
cmp
cmp
pop
mov
push
popf
mov
data16
jmp
xor
push
push
and
sbb
fcmovb
xchg
adc
dec
mov
outsb
xor
add
pop
in
imul
push
cmpsb
shl
movsl
sub
xchg
fisubrs
dec
clc
mov
adc
out
pop
fiadds
and
xchg
jno
rcl
mov
sub
ss
sub
push
push
popa
int
xchg
aam
stc
int
adc
jp
mov
insb
iret
pop
inc
test
add
loope
in
nop
sbb
push
fstpl
cmpsb
es
icebp
ljmp
and
cmp
dec
clc
lock
jno
push
stos
or
or
sub
dec
adc
pushf
xchg
hlt
inc
testl
faddl
pushw
push
shlb
mov
arpl
out
push
test
rclb
or
push
mov
cmpsl
in
aas
addl
mov
lcall
xchg
loop
orb
lods
add
roll
imul
add
mov
mov
mov
scas
data16
ficomps
scas
sbb
jle
lret
xor
xchg
in
sub
outsl
loope
mov
inc
push
push
and
cmpsl
mov
jmp
sbb
ds
jmp
inc
or
addr16
imull
shlb
imul
inc
out
jno
cmp
mov
shrl
jne
sahf
dec
insl
popf
jae
push
or
xchg
xor
leave
mov
jbe
bound
and
scas
ja
jns,pn
mov
sarl
xchg
xchg
jle
movsl
repnz
fldenv
sbb
push
scas
stc
cmp
lock
in
test
sbb
into
add
push
test
adc
add
mov
mov
outsl
pop
add
adc
cld
adc
repz
lods
cmpsb
jno
dec
pop
xlat
loop
xchg
add
test
jnp
sbb
and
cmc
mov
and
sbb
aad
dec
or
xor
xlat
repz
xchg
into
mov
sub
data16
mov
mov
cmp
add
cmp
adcl
incl
cmp
push
lds
jb
movsl
bound
pop
lods
popa
es
std
icebp
shl
nop
xor
shll
pop
xorl
sub
int
mov
jl
test
mov
jle
push
jno
in
sbb
aas
cmpsl
imul
lahf
mov
xlat
push
inc
jp
inc
out
in
movsl
inc
or
rcll
in
push
add
bound
push
mov
inc
cmc
insb
jns
xchg
fisttps
mov
das
or
jo
ret
push
mov
or
test
clc
rolb
sub
fistpl
clc
sbb
dec
jl
js
das
loop
imul
sbb
pop
mov
sub
cmp
daa
cmp
call
outsb
push
sbb
int
hlt
in
sub
or
nop
jo,pn
mov
jl
jb
lahf
addb
pop
pop
fwait
cmp
xchg
or
cmp
inc
andb
jp
fisttps
dec
pop
popa
xchg
call
gs
cmpb
mov
xchg
dec
ja
insl
andb
mov
jbe
sbb
pop
sbb
dec
and
lret
insl
jecxz
orb
shrb
bound
mov
or
jbe
scas
test
cld
in
shl
mov
add
lea
mov
mov
adc
and
pop
jbe
or
push
and
ja
cmpsl
js
jae
pop
mov
mov
or
idivl
mov
jge
fisttpl
inc
add
nop
dec
sbb
imul
adc
xor
sbb
arpl
fcoml
inc
jae
mov
jb
mov
push
sahf
ds
jb
and
push
scas
jne
rcr
mov
or
aaa
les
xchg
mov
dec
loope
in
lret
ljmp
popf
pop
sub
dec
imul
mov
push
push
or
ret
jae
clc
jne
inc
mov
negl
in
push
xor
lock
mov
pushf
loope
adc
adc
popa
call
push
cli
cwtl
outsl
mov
iret
dec
cld
imull
sbb
or
inc
nop
push
sub
dec
shll
push
imul
add
mov
pusha
insb
scas
out
mov
aaa
push
test
call
push
cmp
mov
xlat
mov
aas
into
pushf
mov
sbb
popa
inc
mov
pop
inc
ss
jge
jno
adc
in
insb
inc
adcb
dec
mov
mov
xor
imul
sbb
cmp
test
add
les
push
aad
mov
push
sbb
cmpsb
idivl
shrb
into
add
adc
inc
mov
push
movsl
sub
mov
ret
mull
lea
sbb
hlt
adc
mov
aaa
faddl
outsb
ror
mov
add
clc
mov
mov
inc
xor
push
add
push
dec
inc
subl
sub
jae
dec
jmp
push
cmp
shll
xchg
js
cmp
cltd
pop
xor
mov
sbb
pop
mov
adc
inc
inc
ret
sbb
out
add
mov
cmpl
inc
leave
rorl
mov
or
push
mov
daa
les
cwtl
stc
inc
and
inc
jbe
or
sub
inc
ljmp
push
pop
outsl
mov
adc
cwtl
sub
loop
insl
outsb
and
add
cli
adc
adc
divb
insb
ljmp
lahf
shll
mov
inc
xor
mov
push
cmc
imul
mov
mov
je
call
add
or
sbb
js
test
ss
movsb
mov
mull
cmc
dec
insl
cwtl
test
loopne
inc
rcl
and
pusha
addl
push
and
dec
movb
lret
mov
sti
mov
iret
int
or
mov
sbb
inc
lahf
jle
push
test
inc
mov
sbb
in
pop
inc
das
and
int
sbb
and
mov
sbb
xchg
jl
out
adc
iret
shll
inc
cmp
xor
ror
cltd
add
mov
dec
or
add
arpl
push
in
cwtl
xchg
pop
push
in
popf
sub
movb
movsl
push
add
mov
scas
lret
std
sub
gs
imul
mov
loopne
bound
je
pop
or
mull
jle
fsubrp
enter
aad
movsl
pop
outsb
adc
leave
pushf
inc
cmp
bound
jle
xor
xor
add
lcall
fstps
or
sbb
mov
mov
lret
adc
sbb
stos
xor
pop
cwtl
out
movsb
or
add
out
lahf
out
push
lret
sub
pop
shl
jmp
xlat
or
xchg
int
sbb
cmpsl
jge
iret
rclb
in
in
ds
rolb
into
movsb
loopne
cmp
xchg
xchg
notl
aaa
push
dec
push
hlt
addl
insb
std
std
xchg
sbbb
ja
sub
and
andb
jp
adc
rcrl
sub
notb
pop
aas
sub
aad
mov
add
mov
inc
jg
insb
mov
inc
sub
in
adc
dec
sub
push
lcall
mov
or
fsub
mov
es
fldt
fistpll
bound
notb
imul
or
imul
mov
stos
mov
mov
and
add
xchg
mov
fmuls
out
aaa
insl
in
jno
xor
jecxz
hlt
pusha
into
xor
inc
test
mov
ss
js
mov
aad
inc
ret
add
fldt
or
repnz
mov
sbb
es
cmpsl
fimuls
test
sub
popf
sub
outsb
lds
cwtl
sub
add
rcrl
sub
mov
scas
jmp
xchg
inc
bound
cmc
test
mov
sub
and
dec
lods
cmp
add
fbld
jae,pt
add
jnp
cmp
iret
in
mov
jp
mov
sub
adc
cmp
std
sub
scas
mov
jns
cmpsl
scas
inc
fadds
push
dec
or
sub
out
data16
aad
sbb
je
in
lret
popf
lock
dec
cmpsb
pop
aas
sub
mov
aam
dec
jmp
outsl
test
add
ds
sbb
inc
lods
outsl
inc
jo
push
popf
sbb
pop
lea
in
mov
ret
and
push
mov
sub
pop
xor
aaa
jg
sub
dec
mov
mov
daa
outsb
sub
push
sub
shlb
sub
push
cmp
aaa
mov
or
push
aaa
shrl
or
ffreep
movsl
in
or
push
xchg
dec
scas
sub
adc
mov
cs
xchg
idivb
in
dec
jne
and
push
inc
aas
mov
mov
cmp
pusha
or
jmp
fsubs
push
dec
sbb
xor
test
sub
inc
push
or
test
mov
jbe
movsl
jl
fildll
loopne
xor
push
ret
pop
pushl
cli
xor
mov
and
shll
pushf
xchg
push
push
outsl
les
inc
inc
fadd
xchg
notl
sbbl
cmp
jl
mov
sbb
sbb
xchg
insl
pusha
pop
sbb
repnz
xchg
orb
mov
mov
xor
push
jg
xor
ret
push
hlt
out
xchg
movsl
pushf
sub
push
sbb
popf
mov
cmpsl
pop
mov
xchg
cmp
call
mov
ljmp
fwait
sub
sub
push
mov
int3
shl
cmc
out
xchg
dec
xchg
lds
sub
jge
repnz
push
dec
fistps
sbb
and
inc
aam
rcr
out
ficompl
aas
iret
mov
mov
lea
mov
in
pop
notb
push
jo
and
outsb
scas
sbb
sti
ljmp
and
sarl
lock
xchg
mov
outsb
cmp
aas
xchg
xchg
pusha
mov
mov
cltd
push
jle
pop
mov
jl
cs
push
pop
xchg
lret
sub
or
cmpsl
push
out
out
sbb
xchg
push
movsb
jne
std
sbb
pop
mov
cmp
lock
pop
push
adc
mov
push
mov
sti
cmp
mov
and
out
imul
in
repnz
aas
cmp
in
pop
cmp
das
bound
js
sarb
out
mov
mov
mov
inc
cld
pusha
pop
jg
dec
cli
not
pop
sub
lcall
or
adc
lret
or
insb
dec
push
rol
push
sbb
xor
fwait
xlat
flds
cmpsb
xchg
mov
xor
sbb
mov
mov
cltd
int3
pop
popf
mov
shll
dec
xor
or
fwait
movsl
jb
jae
ss
lcall
push
test
orl
mov
scas
push
and
iret
bound
mov
and
pushf
push
jecxz
xchg
out
sub
lock
lea
fs
ror
or
test
sbb
sbb
pushf
cmpsb
jmp
inc
cld
cmp
sbb
xor
movsl
xchg
jecxz
fnstenv
addb
das
leave
jbe
std
mov
int3
mov
bt
outsb
and
add
xchg
mov
pop
fwait
into
xlat
and
enter
inc
ret
add
lock
adc
fcompl
orl
mov
js
inc
adc
ds
stos
ret
inc
pop
and
mov
cmpb
fimull
fwait
xchg
enter
sub
or
iret
mov
outsb
xchg
addr16
sbb
inc
pop
cltd
js
mov
std
inc
or
add
jmp
cmc
rorl
or
sub
push
adcb
lds
aaa
mov
xchg
push
leave
rcr
outsb
cmp
jno
push
lahf
xor
sbb
jne
lds
shrl
mov
mov
mov
pop
dec
mov
xor
push
sbb
lret
out
adc
std
or
cltd
push
push
adc
push
icebp
in
mov
ljmp
cmc
jg
jecxz
jle
lds
mov
pavgw
adc
jns
subb
and
jl
test
mov
xor
jl
push
inc
mov
ret
pop
jecxz
push
mov
and
jno
xchg
adc
pop
sbb
jne
sti
mov
cmc
lahf
lret
cmp
insl
imul
cli
pusha
lahf
and
cltd
and
fs
test
xchg
jno
push
icebp
add
cmpsb
sbb
outsb
pop
out
sbb
cmp
adc
cmpsb
int
sub
sub
test
pop
cmp
fnsave
push
add
push
cmp
mov
in
shrl
hlt
movsb
in
mov
mov
xchg
call
mov
or
addb
cmpsl
imul
aam
loopne
addb
mov
mov
cmp
lods
jbe
and
in
xchg
jnp
cli
and
popl
cmp
das
jnp
xchg
push
movsb
or
ss
imul
sub
adc
cmp
pop
cli
dec
mov
cmp
dec
pop
push
mov
jle
mov
and
cs
adc
xor
in
imul
push
cli
jbe
and
jle
sbb
inc
mov
iret
pop
pop
pop
jo
cli
iret
aad
mov
scas
mov
xor
xchg
sbb
rcr
pop
icebp
cs
push
xchg
sub
bnd
push
mov
jmp
stos
dec
ret
xchg
fs
mov
xchg
xchg
inc
cwtl
inc
ds
insl
push
inc
add
inc
sub
pop
insl
gs
gs
sub
in
adc
xchg
sbb
fs
lret
push
inc
push
stos
cmp
std
outsl
xor
adc
push
loope
repz
mov
xor
sbb
jb
inc
jl
test
lods
mov
lods
xchg
movsb
aaa
inc
xchg
mov
xorb
pop
cmp
rolb
je
hlt
jne
in
pop
sahf
pushf
mov
fs
push
shll
inc
scas
inc
xor
loopne
dec
mov
addl
popf
sbb
adc
jno
repz
xchg
lcall
pushf
notb
hlt
lock
cld
int3
lods
int3
jnp
jno
add
mov
sbb
pushf
popa
lock
arpl
inc
mov
inc
xlat
call
mov
pop
lcall
cmp
loope
js
loopne
movsb
or
out
add
inc
mov
xchg
scas
das
or
pop
cld
push
or
mov
fs
push
push
or
out
adc
addr16
stc
mov
xor
out
into
sub
mov
fisubl
pop
push
in
lcall
pop
adc
mov
dec
add
push
sub
xchg
in
lret
ret
sbb
push
std
into
or
fsubs
enter
stos
cmp
int
aam
sbb
add
icebp
dec
movsb
adc
orb
inc
and
or
decb
pop
mov
fldl2t
into
push
xor
imul
mov
xor
mov
adc
nop
adc
icebp
jbe
add
bound
mov
loopne
popf
xlat
into
adc
lods
lahf
add
movsl
cmpb
aaa
or
addb
push
sbb
mov
cmp
sarl
shll
shrb
push
or
jmp
mov
fimuls
cmp
pop
inc
jae
js
inc
xrelease
xor
rorb
adc
push
rcrl
xor
and
lods
andl
cmp
push
ja
sti
stos
test
cmp
cwtl
mov
sahf
add
and
je
xlat
lret
pop
dec
not
ljmp
sub
inc
pop
fisubrl
dec
test
pop
mov
ss
jmp
sub
sbb
ljmp
jbe
pop
dec
jecxz
xchg
scas
pop
sti
push
or
cmp
inc
das
in
dec
jnp
fs
add
das
sub
jmp
data16
mov
sbb
mov
lds
cmp
adc
and
std
fistpll
dec
and
sbb
inc
cmc
loope
fldt
lds
xor
mov
pop
sub
inc
inc
insl
mov
ss
jmp
iret
inc
loop
in
rcll
xor
or
icebp
lahf
lds
pop
dec
inc
aam
sarb
jo
ss
cmpsb
ljmp
push
cmp
xchg
outsl
fndisi(8087
movsb
arpl
sbb
mov
dec
idivl
adc
adc
cmpsl
bound
orb
push
mov
add
push
mov
decb
xor
sub
leave
enter
push
dec
pop
ss
mov
xchg
pop
sar
mov
fiaddl
sub
xor
adc
stc
cld
packsswb
and
mov
cmp
mov
imul
das
or
or
aad
test
jmp
lret
mov
sub
or
cwtl
js
iret
fwait
cmp
mov
clc
mov
in
cld
je
movb
rclb
fcompl
jne
push
aad
sub
push
cli
movsb
aaa
insb
bound
jecxz
mov
xlat
aas
mov
mov
cmp
add
popa
loop
outsb
jne
xchg
and
dec
pop
cld
pop
adc
push
lea
jl
xchg
lods
sub
popa
adc
or
jne
and
rcr
jae
stos
fsubrs
add
mov
mov
iret
scas
sbb
jge
xor
out
cmc
mov
adc
pop
movsl
and
jbe
aad
push
xchg
sbb
xlat
popf
lods
loopne
scas
cmpsb
pushl
orb
rclb
mov
fisttpll
or
jl
test
lds
sub
mov
ljmp
jne
or
into
nop
gs
dec
mov
test
xchg
iret
jno
push
mov
insb
dec
sub
int3
and
jb
scas
mov
sbbb
leave
xlat
rol
xchg
mov
jo
mov
popf
mov
and
aas
clc
mov
jecxz
fisttpll
pop
jo
sub
inc
into
adc
add
push
dec
or
sub
sub
mov
and
int
xchg
es
dec
mov
push
test
repz
xor
inc
adc
ffree
lods
push
cld
pushf
dec
pop
test
xor
dec
jecxz
dec
and
sbb
sbb
mov
xlat
add
cmp
mov
loope
in
sub
enter
jg
xlat
inc
ret
sbb
adc
dec
ror
mov
push
pusha
push
add
int3
movsb
pop
mov
inc
xchg
rorl
arpl
sbb
jmp
stos
insl
mov
pop
mov
clc
repz
push
pop
leave
and
je
lret
popf
lret
cltd
inc
sub
push
cld
xor
sub
and
inc
popa
dec
int3
mov
adc
mov
cli
loop
sub
sub
call
nop
mov
in
adc
jecxz
sbb
push
int3
insb
dec
jno
popf
in
inc
cmp
or
cmc
adc
repz
cwtl
cltd
in
lock
mov
fstpl
fsubrl
dec
fsubrs
pop
repnz
dec
xchg
jl
lods
out
jmp
cmpsl
es
sarb
push
fcompl
ja
das
into
and
push
outsl
mov
adc
dec
xchg
jmp
imul
sub
add
dec
aaa
out
mov
add
cmp
adcl
mov
mov
cld
push
mov
subl
xchg
push
add
jle
fbstp
push
jecxz
in
pop
or
xchg
or
xor
aad
ret
mov
leave
cmp
or
push
push
jne
mov
insl
mov
lcall
lods
fmuls
ret
push
icebp
and
xor
dec
xorb
mov
adc
or
mov
mov
and
or
or
push
push
test
movsl
lahf
cmpsb
ret
test
ljmp
xchg
fs
xor
dec
xchg
fcmovnb
test
std
mov
xor
mov
adc
mov
xor
mov
loopne
stc
neg
xchg
lahf
jmp
cmc
jl
cmovle
and
push
push
xchg
mov
stc
adc
add
sahf
sahf
jo
std
sbb
jmp
or
inc
mov
lods
in
jp
scas
xor
lahf
xchg
jne
fs
pop
stos
imul
pusha
je
sbb
iret
in
stc
jge
mov
mov
jmp
addr16
jb
jo
sub
xlat
arpl
rcrl
outsb
push
lcall
push
sahf
shr
push
jae
push
push
popf
xor
add
mov
ds
enter
cmp
mov
enter
pop
leave
ficomps
fsubr
imul
inc
mov
es
xchg
jmp
push
outsl
lcall
mov
push
adc
sub
xchg
add
sub
idivb
adc
jne
xchg
push
lds
mov
popf
outsb
add
jns
push
sub
cmp
pop
stos
filds
jg
bswap
push
push
insl
lock
das
test
mov
negl
inc
cmpb
in
cmp
addr16
mov
stos
jecxz
scas
sbb
dec
lea
mov
inc
aaa
xchg
mov
jne
xor
iret
imul
in
inc
es
xchg
lret
pop
ret
js
mov
cs
fistpl
pop
mov
sub
xor
xor
inc
rcrl
dec
enter
jo
xorps
fadds
push
sbb
xor
sub
stc
or
xor
loope
aam
test
pop
push
and
mov
add
push
popf
xchg
lahf
mov
stc
dec
adc
mov
dec
lea
sarb
idivl
xor
outsb
outsb
cmp
mov
sahf
mov
and
mov
xlat
sbb
adc
stos
cmc
fs
sub
sbb
and
xor
dec
xor
mov
sti
pop
int3
arpl
shrb
popf
dec
adc
lods
xchg
push
ret
and
and
fbstp
inc
mov
pop
sub
shlb
icebp
and
popa
sbb
cltd
fs
pop
movsl
mov
and
popa
add
or
in
out
xor
dec
jecxz
pop
cmp
dec
mov
inc
sbb
mov
xchg
inc
sbb
fstpt
outsl
or
call
mov
xor
clc
mov
sbb
cmpsb
push
xchg
pop
nop
inc
push
or
cmpsl
mov
pop
adc
cmpsl
test
mov
xor
in
sti
test
mov
xchg
stos
es
int3
int
mov
stc
les
cmp
add
push
add
pop
add
push
xchg
add
stos
fadds
pop
clc
lret
stos
inc
mov
jle
xchg
cmpsb
fldln2
sub
movsl
movsl
stos
dec
add
mov
imul
int
xchg
mov
pop
movsl
mov
pop
or
aam
stos
or
inc
sbb
stos
inc
stos
sub
lds
movsl
icebp
fst
sbb
mov
xor
int
test
movsl
iret
cmp
fs
das
mov
je
sub
mov
jb
cwtl
add
jg
add
adc
mov
test
pusha
or
push
iret
adcl
xchg
in
mov
mov
sbb
lret
mov
mov
pop
inc
pop
fisttpl
pop
fisubs
loopne
pop
pop
in
dec
lret
ds
imul
repnz
push
roll
in
pusha
sub
cmp
pusha
xor
aad
add
ja
xchg
mov
and
mov
fsubl
pop
dec
inc
adcl
shrb
hlt
cmp
cld
xchg
push
mov
mov
dec
icebp
iret
jmp
movaps
arpl
jp
jns
jmp
insl
push
inc
in
xchg
jne
addr16
stos
shrl
mov
xlat
and
push
cltd
fisubl
mov
mov
popa
std
dec
lahf
and
dec
cmp
imul
sbb
xchg
repz
cli
in
xor
pop
imul
es
xchg
cmpsl
gs
push
add
repz
dec
fists
sbb
jb,pt
sahf
xchg
clc
jg
xchg
fcmovnb
mov
or
rol
push
jns
sti
je
cli
jl
in
xor
clc
lods
mov
mov
mov
in
cmp
sub
sub
jecxz
push
ljmp
loope
iret
push
mov
pushl
xor
outsb
cmp
jo
cmpsb
cmp
jg
call
mov
pop
rcr
shrb
mov
inc
dec
in
mov
aas
out
aam
lds
sbb
lahf
test
fbld
cltd
sbb
xor
loope
and
in
subb
xchg
dec
xor
test
fnstsw
inc
ljmp
leave
in
pop
subl
xchg
lcall
lock
dec
inc
push
loop
ret
mov
sub
mov
dec
scas
jo
ja
or
cli
xor
mov
imul
hlt
clc
and
sarl
int
inc
jb
cmpsb
je
clc
dec
mov
sbb
mov
daa
call
in
enter
push
mov
adc
gs
inc
loopne
rcll
pop
iret
movsb
ror
xor
add
pop
clc
and
cmp
out
cltd
ror
mov
mov
xchg
mov
shll
xchg
mov
push
aas
subb
mov
jmp
pop
sbb
cmpsb
jns
aaa
pop
add
fs
inc
inc
imul
or
les
fcmovnb
add
dec
insl
out
jg
aaa
cmpb
movsl
ret
data16
das
sbb
sub
xor
std
push
or
shll
xchg
push
cmp
cmp
pusha
pusha
pushf
mov
shrb
aam
int
ds
cmp
into
and
jmp
jg
lret
icebp
push
mov
movsb
stc
insl
iret
out
pop
jns
nop
addr16
decl
adc
and
sti
mov
int
cs
xlat
fcmovbe
sti
inc
insl
int
push
jo
adc
jae
add
in
jae
dec
cmp
in
pop
js
cmp
xor
repz
mov
and
xchg
and
lea
scas
in
pop
add
lahf
adc
push
nop
stos
aas
mov
pop
lea
pop
or
adc
pop
loopne
popa
insb
sub
lret
enter
lcall
int3
jmp
sub
repz
add
cmp
cmc
lods
inc
inc
rolb
xor
out
in
loop
mov
or
test
mov
sbb
stos
pop
movsl
lcall
scas
jno
fisubrl
inc
sbb
push
mov
xchg
int3
jmp
stc
or
leave
mov
and
mov
pop
mov
jne
cmp
mov
inc
push
pop
loopne
dec
dec
jg
sbb
int
jne
push
mov
cmp
loop
add
pop
enter
adc
inc
cli
out
gs
push
inc
popa
xchg
xor
cltd
mov
inc
popf
dec
mov
push
lods
sbb
out
mov
fs
inc
out
mov
int
inc
stc
sbb
push
ret
sbb
outsb
xor
jb
mov
xchg
movsl
mov
repnz
sbb
sbb
cwtl
lods
sbb
mov
aad
hlt
adc
xchg
xor
repz
std
mov
jbe
loope
subl
jp
jl
movsb
not
stos
xchg
inc
test
mov
inc
cli
cmp
dec
in
outsb
jmp
cltd
sub
sbb
adcl
insl
leave
lcall
addl
mov
xchg
push
jp,pn
mov
inc
xchg
stc
cmp
dec
sbb
insl
jns
arpl
mov
push
sbb
ja
outsb
clc
sub
or
sbb
dec
lods
or
push
out
icebp
les
xlat
push
lret
push
iret
pop
xor
inc
loopne
jne
loope
adc
hlt
enter
call
out
cmpb
repnz
sbb
jo
cltd
call
jo
insl
hlt
pop
clc
pop
pop
pop
push
sub
xchg
sub
inc
arpl
fmull
popf
js
adc
dec
cmpsl
cwtl
in
xor
sub
lds
ficompl
push
test
cmp
add
add
les
xor
adc
xor
ret
das
and
movsb
hlt
xor
cmp
push
push
aad
and
test
add
push
push
mov
imul
ret
pop
mov
adc
mov
movb
outsb
push
or
imul
cli
pop
sti
or
out
cli
insb
je
push
js
into
mov
dec
adc
or
sub
call
loope
xor
lods
adc
pop
sub
sbb
jbe
mov
adc
mov
mov
cmp
fwait
mov
adc
insl
test
rclb
jb
mov
cwtl
scas
sahf
push
ljmp
ljmp
mov
push
leave
dec
pop
inc
stos
or
js
lods
imul
mov
insb
cmp
pop
gs
cmp
cltd
mov
mov
dec
shl
rcrl
inc
test
jb
andl
jo
mov
lret
lods
inc
ja
cmp
adc
sbb
or
loope
rorb
es
movl
pop
mov
mov
inc
rcr
ret
pop
cltd
push
data16
xlat
jmp
mov
fwait
adc
fcoml
pop
cmp
pop
lock
imul
mov
sub
mov
cmpsl
test
and
cmpsl
dec
pop
inc
ljmp
sub
fisubs
loop
test
in
mov
dec
data16
inc
and
inc
das
mov
fsubr
mov
out
mov
ljmp
push
and
mov
adc
loop
pop
push
add
add
bound
ljmp
fs
shrb
repz
add
loop
or
pop
rorb
lock
sbb
cmp
ja
loop
push
and
aam
fimull
out
aam
addr16
inc
ss
repnz
adc
sub
lret
push
out
xor
movsb
mov
mov
int3
jl
jle
cwtl
mov
rorb
test
lcall
mov
stc
push
inc
push
and
je
clc
sahf
movb
and
enter
sbb
sub
pop
das
xchg
es
out
fsubrs
shll
insl
dec
push
movsb
mov
das
inc
add
inc
arpl
inc
sub
pop
fidivl
rcr
in
lds
push
icebp
push
dec
roll
dec
lcall
mul
sub
fdivrs
les
mulb
jno
push
mov
lock
sub
and
mov
lock
jne
in
out
mov
jecxz
or
ret
or
out
mov
xchg
push
cmp
jge
pop
and
push
sti
jmp
cltd
mov
cmpsl
gs
xchg
test
out
pavgb
scas
scas
or
mov
xlat
arpl
jge
mov
pop
xchg
fdivrp
push
cwtl
sbbb
and
sarb
shll
enter
push
cmc
test
cmp
stc
ror
add
sub
add
aas
cmpb
repz
rol
xlat
insb
cltd
sub
sub
sti
or
mov
xor
adc
ss
in
outsl
inc
out
fsubs
or
ret
add
xchg
mov
sbb
mov
aaa
fs
rol
mov
cmp
outsl
sbb
dec
adc
les
mov
xlat
lds
leave
cmp
pop
jp
data16
dec
adc
sti
sti
xor
pushf
sahf
jle
pop
lcall
mul
mov
or
out
jl
testl
mov
adc
jo
lret
sbb
push
sahf
push
sub
js
test
pop
sahf
xchg
pop
andl
jbe
mov
lods
jg
enter
testb
mov
and
dec
mov
mov
mov
mov
es
xrstor
adc
push
arpl
je
iret
mov
push
idivb
xchg
daa
les
cmp
jecxz,pn
and
mov
cmp
sbb
push
hlt
bound
mulb
mov
mov
sub
dec
pushf
xor
pop
sarl
subl
movsl
adc
and
inc
push
xchg
in
xorb
cmp
sub
cmc
inc
jbe
decb
lods
xchg
je
in
ret
cs
push
filds
roll
adc
int3
dec
xor
jge
pop
add
push
push
inc
fstl
add
sbb
dec
stos
or
test
xlat
push
clc
jl
push
mov
mov
sub
push
and
push
imul
cld
adc
or
xchg
imul
jae
jno
dec
daa
push
push
cmp
cmp
dec
adc
cmp
outsl
jp
sub
test
jg
jmp
sub
xchg
sub
xor
fcom
xchg
imulb
in
in
out
xlat
gs
jns
aad
sbb
sub
xchg
gs
xor
dec
and
inc
out
add
cmp
pop
jp
push
subl
out
fwait
stos
jge
pop
inc
mov
xchg
sbb
pop
add
enter
inc
test
jp
jo
cmp
jbe
lcall
or
push
cmp
or
cmp
sbb
outsl
mov
mov
sbb
fdivr
lret
jle
and
orb
jno
mov
adc
mov
mov
pusha
add
or
clc
int3
pop
clc
rorb
call
dec
stos
leave
inc
std
mov
jnp
add
cld
jp
xor
jg
fwait
push
push
decb
insl
or
lock
push
and
pop
xor
jge,pn
xchg
aam
fdivrp
lret
mov
push
push
cmc
int
push
lret
not
jl
test
add
mov
or
loopne
mov
mov
cmpb
lods
loopne
inc
in
mov
mov
xchg
sarl
jb
mov
call
sub
ss
stos
clc
mov
aam
cmp
pop
insb
xlat
jle
mov
jb
sbb
and
pop
push
mov
jmp
faddl
out
jb
out
imul
dec
xor
outsl
adcl
jmp
jle
xorl
sti
data16
mov
mov
stc
add
test
daa
adc
cs
loopne
popa
pop
xchg
inc
cwtl
bound
adc
shll
enter
leave
xor
js
push
leave
hlt
mov
hlt
and
fwait
lret
mov
sub
jae
cmp
xor
push
mov
into
clc
ljmp
mov
enter
sti
aad
mov
sub
add
push
pusha
pushf
mov
fmull
ficompl
xchg
cs
pop
cmp
loopne
pusha
popa
and
xchg
xor
scas
adc
pop
add
std
icebp
movsb
filds
fcompl
test
mov
fdiv
inc
popa
enter
mov
mov
pop
jle
xorb
xor
inc
pop
add
insb
push
dec
add
popf
sub
scas
daa
into
out
adc
ljmp
push
cmp
cwtl
jbe
pusha
aam
sub
jle
cmc
or
xchg
sub
mov
in
mov
push
pop
sbb
icebp
jbe
cld
insb
pop
stos
mov
das
js
push
push
js
jbe
push
or
push
dec
xchg
stos
imul
dec
dec
stos
xor
dec
js
mov
xchg
pop
pop
and
das
jle
add
cld
insl
adc
mov
jmp
and
das
sub
jnp
sbb
adc
or
push
lock
pop
stc
stos
sbb
fldpi
iret
lods
or
jbe
dec
adc
jnp
jg
dec
and
fnstsw
mov
xchg
inc
out
dec
add
test
jnp
lcall
dec
push
push
cmp
or
push
lret
xchg
inc
jge
inc
push
bound
push
dec
jno
or
push
inc
and
jl
inc
xchg
inc
adc
inc
ss
mov
push
add
sbbl
arpl
clc
adc
shll
movsl
scas
push
cmp
test
cmp
sub
mov
dec
cld
mov
pop
test
lret
inc
int
fmuls
je
jbe
pop
mov
jne
popf
aam
xor
mov
push
jbe
in
pop
inc
sahf
mov
push
cld
outsb
or
andl
shrb
fs
mov
xor
lret
addb
push
out
insl
jmp
cmc
inc
dec
adc
jmp
fstpl
mov
sbb
jbe
lcall
mov
inc
xchg
std
jecxz
mov
fistl
loope
xor
inc
and
sbb
xor
cmp
mov
imul
pmaxsw
mov
lea
cld
adc
leave
out
pushf
inc
iret
inc
test
stc
mov
fcoml
cld
int
push
bound
add
ss
movsl
mov
or
stc
dec
cmp
in
adc
mov
repz
or
cmp
rcr
mov
adc
xchg
addr16
sbb
repnz
mov
pushf
fnstenv
cmp
mov
pop
add
mov
pop
mov
fsub
mov
inc
adc
pop
mov
sub
push
cmc
leave
dec
test
and
sbb
lods
mov
arpl
jl
daa
mov
in
push
daa
xor
jg
outsb
adc
pop
lcall
inc
cltd
adcb
sub
jmp
in
jge
push
push
lahf
push
ds
jge
lcall
ja
push
jno
arpl
xchg
inc
cli
sub
jp
shll
pop
std
mov
out
mov
add
mov
dec
inc
mov
sbb
popa
cmp
pop
xlat
incb
inc
pop
js
addr16
or
jno
jbe
jl
mov
lret
push
xor
cltd
sahf
xor
inc
in
jo
popa
push
cmp
or
cwtl
fcomp
lods
sahf
out
test
dec
movups
in
cmp
push
cmpsl
cmpsl
cmp
ljmp
call
insl
push
mov
movsl
push
or
and
loop
jno
mov
scas
inc
xorl
cs
mov
or
adc
nop
insb
scas
mov
jbe
mov
add
pushf
xchg
or
mov
dec
cmpsl
inc
rcrb
test
jl
cmp
jg
repz
inc
out
jecxz
and
stc
push
mov
cltd
cmp
mov
mov
cmc
nop
aaa
jno
cmc
lods
scas
stos
in
sbb
inc
or
push
clc
and
cmpsb
lea
xchg
aaa
test
cmc
insb
jge
scas
fcmovne
mov
movsl
push
ja
lcall
cmp
adcl
fists
and
pop
icebp
add
mov
cmp
out
and
and
popf
xchg
jbe
cmp
sarb
daa
sbb
cmp
gs
inc
scas
ds
mov
jno
movsb
mov
jle
lods
xor
filds
or
les
in
leave
inc
rcl
nop
sub
sub
lahf
enter
ror
fadds
inc
das
mov
add
movl
add
orps
pop
nop
aas
repnz
inc
out
xchg
fsubrl
mov
je
mov
adc
mov
push
lock
cmpsl
jg
pop
xor
xor
inc
cmpsl
xlat
dec
loop
xor
jnp
sbb
add
std
rorl
push
mov
clc
fwait
jns
jne
fadd
in
rcl
outsb
jg
xchg
out
mov
arpl
mov
ficomps
sub
jb
lcall
and
mov
jo
sub
jae
push
je
pop
aaa
fildll
aad
les
push
xor
loop
jle
clc
in
std
arpl
or
add
mov
subb
testb
shrl
dec
je
cmp
sub
std
jo
fwait
fwait
mov
mov
inc
push
jno
pop
and
dec
idivl
mov
out
in
jo
in
add
ja
jge
jg
int3
add
push
fsubl
push
sub
in
xchg
adc
and
cmpsb
jl
adc
jne
call
fistps
iret
or
jmp
xlat
xor
mov
push
sti
rcrl
loopne
push
xchg
or
cmp
mov
aam
mov
ficoms
xor
aad
ja
add
or
xor
jge
in
sahf
nop
pushf
mov
jns
add
pusha
js
clc
cwtl
dec
push
insb
xlat
mov
inc
outsb
aas
xchg
jno
xchg
lret
lods
pop
inc
or
stos
or
push
mov
sbb
test
pop
adc
dec
fildll
mov
lcall
add
scas
jle
jl
xchg
inc
dec
insl
rorb
xor
sbb
jae
sbb
push
xchg
jecxz
adc
xchg
negl
out
andl
cmpb
mov
popf
lds
xor
fcompl
imul
xchg
dec
rorb
aad
adc
cmc
js
les
pop
cs
out
cmp
xchg
out
push
pushf
xchg
mov
sarl
cmc
ss
dec
cmp
jb
cmpb
mov
inc
cmp
std
rorb
jle
movsb
or
addr16
mov
filds
fldenv
pcmpgtb
pop
and
cld
dec
mov
mov
repz
aas
hlt
push
jmp
fsubrs
pop
sti
xor
push
inc
and
jle
adc
sub
sub
test
xchg
sub
shlb
test
shl
inc
pusha
pop
insl
rcrb
push
mov
test
dec
jmp
push
pop
jp
es
push
jp
fsub
pop
test
sbb
enter
test
mov
mov
shll
loope
test
bound
jo
out
pop
arpl
mov
pop
adc
add
stc
push
or
adc
xor
push
aad
sarl
and
or
push
xchg
mov
mov
mov
leave
cmpsl
not
mov
lods
clc
mov
ret
pop
sub
add
pop
dec
or
andb
xchg
repz
jb
iret
mov
push
cltd
test
in
pop
pop
inc
sbb
mov
push
mov
inc
cmpl
pop
sbb
es
xchg
push
mov
adc
mov
lods
xchg
xchg
in
rcr
mov
jb
imul
add
imul
loope
adc
mov
xchg
mov
jno
jb
mov
jae
pop
dec
pop
push
pusha
sub
xor
aam
outsb
pop
fs
test
cltd
pop
lods
stos
jg
pushf
out
add
adc
and
adc
xchg
cmp
stos
push
pop
mov
cmpsl
sti
rorb
shlb
mov
icebp
les
rcl
adc
push
xchg
ds
inc
mov
sbb
ja
mov
adc
cld
push
test
lahf
orl
lock
popa
rcrb
lret
cmp
stos
mov
inc
and
std
or
roll
lds
dec
pop
and
ja
mov
rclb
mov
shrl
jg
aas
xchg
loopne
mov
into
adc
cs
dec
mov
cld
push
jo
test
ja
cmp
sub
xor
mov
pushf
cmp
inc
in
stc
and
into
insb
arpl
stc
stos
add
xchg
push
lock
dec
jle
inc
cltd
xor
insb
nop
xor
and
into
jo
cmp
and
push
mov
xor
mov
cld
inc
add
jne
outsb
cmpsl
xor
pop
jp
scas
xor
loope
and
fcmovnu
loop
fcmove
dec
aaa
jno
push
inc
jecxz
sbb
mov
dec
subl
jns
daa
xor
mov
test
insb
and
ja
ds
sub
push
push
and
xchg
xchg
pop
xor
jns
stos
sbb
das
fbld
mov
pop
xor
in
mov
mov
bt
call
sbbb
and
pop
mov
push
sub
inc
mov
sbbb
mov
daa
xor
add
cmp
and
sub
dec
mov
imul
sub
jo
shrl
jo
popf
sub
mov
call
movsl
inc
repnz
outsb
xchg
xchg
sub
jg
or
mov
mov
jnp
adcl
test
mov
loopne
pop
push
andb
clc
pop
pop
xchg
add
cli
xor
push
cli
enter
fmul
ds
scas
xchg
sbb
mov
or
mov
push
mov
hlt
mov
fisubrl
sub
push
shll
jbe
xchg
xchg
out
in
pop
cltd
ds
test
or
dec
fstpl
pop
repnz
adc
cmp
lcall
add
inc
adc
es
dec
xor
xchg
mov
out
fildll
mov
mov
sbb
imul
jae
xor
cli
test
sbb
loopne
ds
lea
mov
jg
mov
push
cli
test
jmp
sbb
or
push
loop
or
xor
lahf
jno
scas
stc
orb
adc
mov
imul
inc
roll
lods
nop
mov
sub
testb
inc
dec
cmp
into
inc
dec
addl
in
into
pop
xor
jmp
jle
lock
xchg
rcrl
lods
dec
ss
mov
gs
cmpsl
mov
adc
cld
jbe
nop
mov
jnp
movsl
shrl
orl
pop
mov
rcr
inc
push
jae
xor
inc
and
cmc
xor
fwait
sbb
and
lahf
mov
stos
push
jb
test
jns
pop
shr
xchg
jp
xor
sub
cs
les
imul
bound
mov
xchg
ja
xor
inc
sub
add
movsb
or
add
imul
inc
dec
stc
dec
test
cmpb
cmp
inc
mov
jbe
sbb
jnp
xchg
pop
int
adc
iret
mov
inc
pop
jp
dec
andl
or
sti
jae
pusha
mov
add
pop
cvttps2pi
movsb
push
fstpt
sbb
shll
ficompl
loopew
enter
imul
mov
jb
mov
icebp
and
call
jno
fdivl
addl
cwtl
sti
dec
mov
push
dec
lcall
cmpsl
int
incb
and
sbb
call
cltd
int3
mov
rorl
fcmovbe
mov
test
pop
mov
mov
sub
lods
xor
jg
lds
icebp
adc
fisubrs
inc
inc
bound
fmulp
inc
xchg
sub
cmp
pop
sbb
pushl
pop
mov
cli
cmp
sahf
push
movsb
mov
push
mov
xchg
in
rcrb
push
dec
and
aam
adc
clc
int3
dec
fucomip
adc
push
cltd
mov
jae
outsl
lods
jmp
cmp
add
sub
stos
in
inc
int3
and
inc
adc
rcll
bswap
cmp
fcmovnb
mov
mov
and
jbe
cmpsl
inc
movsb
push
lea
jbe
cmp
adc
sahf
mov
pop
imul
and
lahf
push
jo
test
sbb
pop
sahf
pop
test
mov
movb
fidivs
push
xchg
movsl
xorb
in
mov
test
pusha
out
mov
mov
and
lahf
or
ficomps
or
in
fcmovb
xlat
stc
jge
lret
jle
xor
dec
lods
push
call
out
cltd
push
pop
push
mov
xor
cld
inc
cwtl
insl
sbb
movb
push
sbb
je
aad
cmp
enter
popf
testb
es
dec
cmp
xchg
add
pop
jg
popf
fmuls
adcl
or
ljmp
scas
sub
cli
scas
inc
pop
test
ficoms
push
popf
data16
popf
je
arpl
sbb
sahf
pop
jb
add
int3
daa
pop
xchg
jge
jle
inc
pop
lods
add
push
das
aas
cmp
test
movnti
mov
mov
ret
push
adc
pop
rolb
lds
pop
adc
in
repz
sbb
nop
cmpsb
pushf
out
mov
mov
cmp
int
jecxz
int3
lea
out
xchg
mov
popl
arpl
mov
imul
or
push
mov
dec
lods
sbb
gs
mov
inc
je
mov
mov
mov
hlt
mov
outsl
cmc
push
negl
push
lret
adc
and
jb
add
adc
xor
jbe
xor
mov
mov
adc
lcall
aad
and
orb
push
push
sbb
sbb
aaa
jp
out
inc
addr16
mulb
fwait
adc
out
dec
rorl
ret
push
dec
in
xor
iret
ljmp
stos
xchg
fwait
cli
das
adc
cmp
xchg
pop
xchg
orb
je
mov
adc
orb
push
jno
fucomi
xchg
inc
clc
cld
and
imul
fisttps
or
pop
mov
notb
repz
repz
cmp
sub
jp
addr16
insl
nop
out
sbb
sahf
gs
xor
inc
cmpsl
addr16
cld
push
jno
dec
loope
push
inc
xchg
mov
repz
mov
push
inc
inc
pop
cmp
pop
mov
mov
or
push
adc
pop
and
insl
dec
outsb
dec
ret
jp
jae
data16
inc
repz
pop
inc
sub
mov
sti
icebp
call
mov
loop
push
out
jo
sbb
int
cmc
mov
jge
out
add
or
or
fisubl
andb
mov
push
push
lea
pop
dec
loopne
mov
jle
leave
adc
test
sbb
cs
loop
mov
fidivrl
mov
mulb
jp
mov
dec
insb
sub
mov
pop
mov
dec
xor
pop
mov
push
aad
aad
inc
lea
sub
movsl
push
xor
and
lods
or
xchg
fildll
add
scas
leave
clc
subl
xchg
push
in
inc
out
sbb
mov
pop
dec
outsl
in
lret
cwtl
push
mov
or
sbb
mov
iret
repz
rep
cmpsl
cltd
cmp
or
or
push
xor
incb
xor
push
push
movsl
je
lods
cmpsl
cmp
inc
mov
es
ds
sbb
sub
pop
mov
div
shll
adc
ljmp
xor
fbld
std
scas
test
pop
cmp
sbbb
ljmp
cmp
jmp
sbb
in
imul
das
stos
aas
out
xchg
rcr
pop
add
add
dec
sti
or
jmp
or
lds
jl
sub
leave
jns
mov
pop
xchg
or
test
aaa
push
lret
and
lcall
lods
xchg
xorl
mov
xchg
in
inc
int
pop
adc
call
stos
leave
push
or
or
xchg
fiaddl
data16
jb
cmp
shrb
inc
daa
jo
dec
andl
and
cmpsb
pusha
push
cwtl
fbstp
lcall
adc
adc
push
movsb
aaa
hlt
adc
shrl
mov
jle
dec
or
push
cmpsl
dec
popf
push
and
mov
xchg
sbb
xchg
push
rcl
add
scas
cmp
mov
iret
pop
clc
sub
and
imull
imull
fidivrs
jnp
jb
clc
mov
fiaddl
stos
dec
movsb
ffreep
or
jo
jae
jl
xlat
jl
fadds
scas
cmp
rcr
pop
mov
dec
jmp
cmp
filds
or
je
loope
mov
bound
sbbb
dec
push
lret
nop
movsl
imul
xor
inc
lods
fists
scas
mov
sbb
push
sub
sar
and
xchg
mov
inc
das
aas
hlt
movsb
test
jg
stos
sbb
fwait
xchg
sub
jp
inc
enter
in
mov
icebp
cli
xor
ret
jo
ja
cmp
in
xor
xchg
jp
testl
iret
loop,pn
mov
mov
and
cmp
popa
xchg
call
push
dec
jno
movsb
testb
repnz
sbb
cwtl
adc
movsl
pop
subl
repnz
clc
mov
out
xor
fnstsw
test
sbb
adc
jbe
cmpsb
push
aaa
mov
inc
test
push
mov
cmp
scas
mov
dec
pop
movsl
lods
lods
mov
inc
leave
inc
adc
mov
ficompl
insb
das
call
mov
or
sti
dec
adc
mov
clc
insb
and
cmp
xchg
push
or
and
xor
xchg
mov
dec
ds
add
call
ficoml
cmp
xchg
mov
jl
push
push
xchg
jnp
add
notl
js
movsb
jle
jae
push
push
in
stc
jecxz
jle
in
ret
jmp
daa
in
pushf
mov
nop
xor
push
pushf
sub
test
and
push
std
rcrl
insb
push
int
mov
dec
push
inc
scas
fs
and
mov
sbb
sbb
aam
andl
int3
roll
in
in
dec
mov
pop
cmpsl
xor
inc
xchg
lock
shl
ret
icebp
int
neg
jbe
lret
enter
aas
inc
push
mov
ficomps
js
mov
inc
js
jmp
pop
xchg
inc
fwait
call
lea
dec
addr16
ljmp
xor
pop
in
rcr
in
mov
in
adc
rcrb
repnz
rol
cmp
xor
cmpsl
test
inc
int
pusha
lret
inc
lods
mov
dec
movsb
rcll
push
loopne
or
jmp
push
fdivp
add
pop
or
pusha
cld
xchg
and
lock
test
jbe
mov
mov
sub
loopne
dec
jae
imul
dec
loop
xchg
jle
cmpsb
call
or
mov
xchg
push
ss
mov
imul
negl
mov
or
mov
je
jle
xchg
hlt
lret
mov
fwait
jns
jge
aad
dec
leave
push
add
mov
lds
popa
push
push
cmc
xchg
fstpl
and
stos
push
sub
mov
adc
shlb
scas
cmp
push
fists
das
mov
test
out
cmp
int3
in
ljmp
mov
mov
into
lea
mov
outsl
mov
test
mov
aad
add
ss
shrl
repz
stc
jmp
xlat
cmp
repz
lahf
xchg
jbe
je
mov
push
ss
ss
xchg
sub
loope
out
repz
mov
dec
in
mov
aaa
rclb
cmc
xchg
xchg
dec
addr16
pusha
xlat
push
mov
xchg
or
mov
ja
hlt
int3
test
jecxz
jae
aam
dec
stos
dec
xchg
icebp
mov
popf
pushf
dec
pusha
in
mov
inc
into
push
mov
fmull
test
lods
stos
fiadds
lock
in
add
push
testl
xor
bound
ljmp
adc
in
sbb
popf
push
nopl
adc
scas
mov
xlat
inc
adc
sub
test
dec
lahf
iret
lret
xchg
adc
in
fidivs
and
mov
lods
mov
std
popf
sbb
inc
and
test
sbb
dec
cmp
push
jecxz
mov
or
pop
shlb
cli
adc
pop
xor
sub
int3
aaa
fistpl
test
jbe
xchg
and
xor
pop
mov
jl
pop
aad
push
sub
popl
or
aaa
inc
popf
je
and
jge
cmpsb
dec
out
hlt
daa
out
or
popa
ret
scas
cwtl
dec
rcll
iret
pop
or
and
lods
sub
and
mov
stos
jns
in
jnp
sbb
popa
repz
add
in
rcrb
divb
dec
lcall
insl
jnp
fbld
or
cmp
sbb
aas
test
or
pop
test
loopne
stos
dec
and
push
mov
pop
adc
and
pop
sti
cmp
xchg
sbb
jne
cmp
stc
add
int
mov
mov
pop
sarb
aam
mov
jmp
push
and
mov
fcmovnbe
das
xchg
mov
movsl
sub
int3
jge
sbb
int3
xchg
push
sbb
push
mov
dec
or
dec
and
inc
mov
sub
xlat
inc
mov
sub
push
arpl
xor
testb
les
jnp
les
jmp
xchg
push
push
ss
fadds
pop
or
fldt
insl
into
insb
jle
ljmp
ret
leave
cmpsl
mov
fcoms
iret
inc
out
and
push
jnp
lea
imul
push
adc
aaa
in
dec
out
add
add
jle
mov
je
mov
mov
rcll
divb
lods
sub
aam
cmp
std
sub
pop
in
inc
pusha
stos
fdivr
and
jns
jmp
xor
jnp
fisttps
rorl
mov
fsin
test
add
dec
ss
and
sar
mov
xchg
divl
aaa
dec
inc
mov
push
iret
fidivrl
leave
adc
imul
ret
andb
pop
mov
mov
enter
sub
jo
fcmovnb
jmp
scas
jmp
sbb
adc
dec
xor
lret
mov
inc
dec
or
sbb
xor
mov
and
xchg
or
lahf
or
scas
and
xor
outsl
xor
inc
push
push
push
ret
ficoms
xlat
xchg
and
aam
ret
mov
inc
push
xor
shlb
push
xchg
push
and
xor
cmpsb
dec
clc
clc
or
push
mov
andl
inc
std
add
and
outsl
jno
mov
inc
inc
xchg
pop
sub
pop
jns
addr16
cli
ja
fiadds
jns
pop
jmp
jmp
pop
fsubrs
stos
nop
shll
xor
fs
inc
stos
inc
in
lahf
cli
jbe
out
or
add
fistps
jae
ss
jle
aam
xchg
mov
ret
mov
jae
rolb
into
js
and
cmp
pushf
mov
cwtl
punpckhbw
int3
add
jae
push
mov
xor
jg
fstp
leave
add
ror
push
imul
cmc
inc
or
mov
and
cld
pop
pop
jge
push
mov
and
fisubl
and
jae
jbe
rcrl
rcr
int3
cmp
jns
arpl
inc
cmpsb
sbb
push
push
dec
test
icebp
movsl
daa
loop
repz
or
jne
or
mov
fidivs
adc
cmp
push
movsb
iret
int3
lret
fs
or
call
or
movsl
cli
scas
loope
clc
pop
jne
add
inc
cmp
loop
ss
hlt
popa
and
test
add
in
cmp
cld
aam
adc
in
test
mov
arpl
sub
pop
and
mulb
aas
jmp
mov
add
ljmp
dec
pop
mov
mov
sub
pop
out
sbb
jno
xor
call
in
push
imul
fwait
fwait
push
cmc
sub
aas
inc
lret
inc
xor
fstpt
scas
or
jg
fistl
outsb
leave
and
mov
mov
pop
imul
jmp
cmp
outsl
or
test
push
pop
subl
imul
mov
add
mov
scas
pop
and
aad
les
mov
xchg
pop
int3
aam
shl
pop
mov
shlb
pop
jnp
mov
mov
into
xlat
xchg
cmp
cmp
push
pop
xchg
adc
sbb
sti
mov
test
sub
pop
popa
imul
sbb
xchg
in
mov
xchg
push
fwait
lea
ss
fcompl
hlt
aam
xchg
xor
in
shlb
popa
cli
ret
bound
stos
nop
mov
gs
icebp
pushf
enter
xor
cmc
xchg
add
cmp
sbb
lsl
lea
xchg
dec
and
mov
push
fwait
jl
cmc
dec
cmp
inc
inc
sti
jge
pop
scas
jae
mov
inc
fidivrs
mov
sti
dec
int3
pop
mov
pop
addr16
lcall
lret
mov
jecxz
lock
outsb
pop
aam
push
xorl
sub
outsb
mov
dec
mov
int3
push
jge
mov
mov
push
cmp
jns
insl
mov
rol
fldenv
pop
inc
xor
popa
fldcw
jmp
dec
repnz
fwait
add
shll
out
dec
popa
jl
mov
xchg
xchg
sahf
shlb
pusha
pop
or
ret
dec
mov
sub
adc
je
pop
cmp
xchg
cmp
dec
cmc
fmuls
xor
push
jbe
dec
loope
add
fwait
idiv
push
mov
stos
mov
data16
or
sub
rorb
es
std
jp
mov
cmp
mov
dec
stc
sahf
xor
mov
fisubl
fldcw
lock
test
popf
cltd
fadds
lcall
aaa
pop
decb
icebp
in
lods
cmp
int3
dec
ret
lcall
in
test
imull
shlb
addr16
or
xchg
mov
neg
cmpb
ss
mov
pop
dec
lods
das
push
mov
pop
aas
out
xchg
pop
outsb
bound
push
aas
adc
std
add
and
cs
push
popf
testl
test
int
adc
xchg
aad
popf
test
lods
outsl
clc
iret
sbbl
mov
aaa
xchg
sbb
out
dec
inc
mov
int3
xchg
in
cli
dec
xlat
xor
push
jp
xchg
or
dec
mov
dec
cmc
mov
lcall
cmp
mov
jb
inc
or
and
mov
in
hlt
jp
pop
mov
dec
or
sub
rclb
imul
sub
inc
sub
adc
in
loopne
fdiv
int
je
inc
dec
xchg
jb
mov
dec
nop
decl
les
adc
and
fcmovbe
push
int
out
push
xchg
dec
nop
jmp
flds
cmpsb
sbbb
or
xor
test
add
lcall
sub
stc
add
push
dec
lods
es
mov
cs
sbb
push
push
mov
testb
rclb
mov
and
bound
mov
lahf
hlt
jg
negl
into
jmp
lock
ret
xor
bound
add
jmp
adc
imul
in
inc
fidivrl
fidivl
or
bound
cmp
sbb
sub
repnz
mov
andb
fsubrl
popf
sub
sbb
jmp
xchg
rol
aad
pop
and
pop
aam
sbb
pusha
dec
aaa
pop
test
xor
push
push
mov
mov
negl
js
lret
int
loop
js
shlb
cmp
adcl
add
loope
adc
xlat
fucomi
adc
sbb
jecxz
stos
aad
add
push
inc
out
sub
push
addr16
xchg
cmp
mov
dec
jne
pop
data16
mov
sbb
daa
mov
in
jo
mov
sti
adc
aam
push
shll
divb
or
and
or
sahf
mov
frstor
cmp
scas
mov
mov
pop
mov
push
inc
test
and
icebp
out
repz
mov
filds
add
stos
add
or
insb
dec
sbb
xor
mov
das
bound
push
fdivs
fidivrs
push
jl
js
xor
dec
mov
lahf
mov
push
push
cmpsb
pusha
pop
xchg
clc
cmpsl
dec
enter
aam
shlb
inc
dec
pop
jne
inc
or
in
mov
mov
mov
jno
cmp
sub
jg
aam
icebp
and
lods
add
mov
aam
roll
pop
jno
icebp
push
int3
leave
aaa
pop
push
push
ret
shll
pop
fldl
test
mov
pop
test
lea
push
cmc
lds
add
pop
xlat
arpl
cmp
icebp
mov
out
xor
cwtl
push
aam
out
loopne
dec
push
lcall
or
jns
in
xor
xor
mov
leave
mov
daa
in
pop
js
pop
call
mov
data16
loopne
js
add
add
fwait
je
push
pusha
push
mov
lret
push
gs
daa
imul
fs
fwait
add
mov
xchg
fidivl
jnp
xlat
cmp
sahf
inc
lret
lahf
mov
les
pop
sub
jns
mov
loope
mov
mov
bound
bnd
push
xchg
pop
aas
push
push
ljmp
aad
mov
push
cmpsl
enter
jnp
pushf
pop
mov
push
mov
or
inc
lahf
call
roll
bound
fmul
or
xor
cmpsb
lods
sbb
xchg
push
mov
xor
push
mov
and
mov
dec
fmul
xchg
pop
out
arpl
or
mov
jl
mov
out
push
loopne
dec
xor
mov
xchg
lcall
or
push
xchg
out
pushf
cmpb
fwait
mov
test
ja
scas
cmp
hlt
fidivs
stos
pop
addr16
mov
arpl
dec
mov
loop
test
pop
cmp
push
push
out
or
aam
loopne
cmp
and
repz
in
shrb
pushf
shl
mov
cmp
les
lret
cld
inc
movsb
mov
arpl
shr
lahf
fsubrl
loop
in
sti
mov
or
cwtl
insb
and
fs
int
inc
sub
pop
mov
sbb
xchg
scas
adc
mov
mov
and
iret
popa
addr16
cwtl
mov
inc
das
jg
sub
lods
adc
and
jl
mov
cmpsl
out
mov
out
arpl
in
clc
pop
fistpl
mov
cmp
movsb
int3
repnz
ret
fisttpl
cli
cmc
test
ret
xchg
stos
mov
js
or
mov
sarl
dec
push
fwait
subl
enter
xchg
mov
jmp
mov
bound
out
dec
leave
mov
add
int
push
push
std
shll
pushf
push
or
lcall
and
out
cmpsb
sbbb
mov
aas
inc
mov
insb
testb
ss
enter
push
xor
xchg
sbb
adc
jmp
jmp
or
rcl
pop
flds
ja
ret
lcall
xchg
push
repnz
xchg
mov
mov
test
or
push
mov
insl
inc
jge
test
scas
movsl
cmpsb
dec
fiaddl
test
pushf
sbb
nop
cli
sbb
cmp
test
add
push
cld
mov
repz
cld
mov
fistpl
or
jbe
mov
add
rcrb
cmp
jo
jecxz
mov
dec
out
repnz
mov
lods
or
mov
fs
pop
pop
push
ss
or
nop
jp
xchg
push
adc
repnz
pop
mov
sbb
sbb
jne
insb
mov
inc
xlat
xor
dec
inc
into
jno
mov
outsb
sbb
test
shlb
jo,pn
pop
out
sub
lods
hlt
cmp
jl
push
es
push
xchg
lods
neg
xor
mov
pushf
adc
jp
or
dec
rorb
inc
inc
aam
push
jo
arpl
cmp
out
xor
mov
outsb
jae
push
adcl
push
and
sarb
gs
xchg
fcomps
idivl
dec
in
loope
pop
sub
dec
rol
shrb
inc
jne
push
hlt
mov
jl
mov
and
cwtl
fadds
es
mov
out
cmp
lds
push
xchg
cmp
mov
icebp
aam
shl
outsl
test
and
lods
mov
push
insb
sti
setbe
mov
dec
xchg
in
cld
adc
fstpl
cmpsl
mov
mov
repz
out
sub
xchg
jp
inc
cli
adc
lcall
mov
mov
cmp
xor
jnp
sbb
pop
mov
push
mov
sbb
sbb
lcall
lock
fdivs
dec
stc
dec
mov
and
in
test
cmpsl
lods
inc
je
pusha
psadbw
push
xchg
loop
or
lahf
aam
dec
popf
les
roll
dec
push
or
push
fstl
repz
pop
rorl
jns
sub
cltd
sbb
jp
es
sub
sbbl
inc
mov
add
mov
cld
and
dec
out
lea
test
inc
or
xchg
fwait
in
push
cmpsl
shl
dec
lret
cmp
aad
js
pop
add
mov
shlb
adc
ja
inc
jg
gs
ret
outsb
cmpsw
jnp
jae
and
mov
punpckhwd
movsl
push
mov
pop
and
sub
stos
mov
ja
and
adc
stos
fcmovne
sbb
xor
ret
sub
jbe
rorl
test
lds
jns
xchg
inc
inc
xchg
pop
sub
push
xlat
inc
in
cmp
test
adc
sbb
das
pop
imul
shlb
test
pop
cmp
xor
hlt
fiadds
jecxz
fidivrl
or
idivb
push
int3
mov
inc
xor
rcl
mov
xchg
imul
sub
mov
sub
xor
xchg
jp
pop
sub
mov
popf
out
cmpsb
in
inc
mov
xor
and
insl
in
icebp
leave
cmp
pop
test
nop
push
mov
int
ja
mov
subb
xchg
sbbb
iret
jns,pn
pop
outsl
push
stc
pop
jns
das
lds
sub
ret
xor
popf
div
mov
and
jno
int3
js
int
push
pop
das
mov
xor
insl
or
cs
out
mov
jb
push
out
int
push
iret
adc
dec
xchg
neg
ret
mov
jo
xchg
fwait
imulb
ja
push
sarb
into
mov
rcrb
xlat
idiv
push
pushl
mov
adc
fisubrs
sti
fcoml
cld
cli
sti
push
mov
fisttpl
push
jno
mov
mov
mov
or
adc
or
push
adc
push
scas
icebp
lods
and
jnp
dec
fnstenv
jne
jbe
mov
push
das
fisubs
push
xor
add
xchg
and
scas
aad
or
js
lcall
cli
pop
pop
xor
and
cmp
out
add
aas
push
or
in
scas
fdivrs
or
jge
in
in
iret
xorb
lods
movsb
inc
dec
jns
cs
out
or
bound
fcoml
push
mov
sbb
call
mov
les
jne
rorb
sub
or
mov
je
std
cmpsl
std
outsb
cmp
pop
mov
jle
ja
aad
js
mov
in
mov
rcrb
cs
or
cli
jbe
fldt
adc
mov
mov
mov
icebp
lret
pop
enter
fldl
sub
mov
pushf
cmpsl
les
lods
dec
push
xchg
cld
jnp
mov
xchg
outsl
inc
adc
pop
jnp
aaa
sub
sahf
lahf
mov
data16
jnp
sti
xlat
pop
out
push
dec
sti
clc
dec
jo
add
es
xor
or
incb
aad
dec
fdiv
ljmp
int
and
push
repz
mov
mov
dec
dec
and
pusha
mov
call
jl
and
add
mov
pusha
dec
jle
iret
jecxz
pop
icebp
mov
mov
fcomps
scas
imul
adc
sbb
insb
cmpsb
mov
mov
test
jmp
fisttpl
cmp
dec
bound
in
mov
sub
inc
jns
xor
fs
decb
pusha
push
adc
pop
mov
push
sbb
ror
cmc
mov
call
mov
loope
out
add
dec
jp
sub
out
in
repz
in
lods
cmp
cltd
or
jnp
mov
inc
nop
and
jle
xchg
add
popa
add
add
push
xor
lods
popa
ficoms
loopne
push
mov
daa
ljmp
xchg
mov
lret
fs
popf
mov
mov
mov
in
bound
sahf
mov
push
pushf
sti
cs
call
jle
xor
sbb
pusha
ljmp
adc
and
xchg
adc
sub
xorb
and
daa
push
aaa
stos
idivb
cmp
mov
adc
fisubrs
xchg
loop
add
imul
clc
inc
dec
js
out
or
mov
shld
dec
enter
stc
cmp
in
push
push
dec
jb
jecxz
popf
sbb
or
lahf
iret
mov
andl
je
cld
scas
shrl
mov
or
daa
xor
mov
dec
pop
outsb
sbb
fnsave
ljmp
jl
add
jg
lcall
xchg
cli
and
dec
gs
push
in
int
dec
push
and
and
push
fadd
cmp
sub
cld
lods
push
aaa
fisttps
test
loop
mov
inc
adc
mov
std
loopne
xor
mov
xor
test
scas
mov
cmp
push
sub
add
rclb
das
insb
jge
ret
push
cmp
jle
test
jmp
leave
pop
pushf
adc
pop
cmpsl
imul
inc
les
jecxz
je
cmp
pop
ficompl
pop
dec
out
sub
pushf
push
and
aaa
ret
mov
or
jl
insb
popa
add
or
shl
sbb
mov
mov
nop
sbb
pop
insl
inc
pop
pop
cmp
cli
cmc
jecxz
es
adc
int
je
dec
das
push
jbe
icebp
push
ret
out
or
mov
sub
push
jmp
cld
call
mov
sti
mov
lods
cmpsl
data16
sahf
ficoms
rorl
mov
add
aaa
lret
cmpsb
mov
mov
mov
push
not
test
int3
sarl
fistpll
sti
inc
mov
sbb
in
cmp
jle
pop
dec
das
push
sbb
ljmp
xchg
roll
sbb
jge
loope
cmp
jge
jmp
jno
cmpb
adc
mov
mov
out
cwtl
pop
sub
leave
jno
jns
ret
xchg
pop
adc
out
mov
nop
dec
xor
inc
mov
nop
movsl
loope
in
dec
push
cmp
test
loope
mov
pop
xchg
xchg
sub
add
jg
ss
sbb
or
add
in
aad
cmpsb
out
lret
inc
sbb
add
sub
xor
enter
add
ficompl
pop
mov
mov
ret
inc
or
in
repz
popf
pushl
sar
push
mov
test
fistl
pop
cs
testb
adc
push
inc
mov
daa
pop
mov
push
xorl
push
cltd
inc
rcl
and
push
sbb
sti
mov
in
push
fimull
out
das
xchg
scas
movsl
pop
push
push
int3
jo
add
add
xor
jecxz
loope
xchg
or
lahf
mov
adc
inc
out
mov
or
mov
aam
insb
call
mov
dec
push
xchg
test
sbb
jbe
or
mov
repnz
jle
xlat
insl
fdivr
add
xor
add
xor
pop
stc
pop
mov
in
lds
mov
dec
lcall
stos
xlat
push
cmp
pop
xchg
pop
pop
out
out
outsb
int3
add
lds
daa
sbb
rcrb
fcom
pusha
dec
js
call
xchg
or
push
in
dec
ja
xchg
stos
adc
ret
mov
hlt
xor
jno
dec
or
mov
gs
js
push
sbb
mov
add
retw
inc
rorb
push
sub
aaa
in
outsl
popa
popf
push
outsl
or
fists
adc
ficomps
int
sub
xchg
daa
mov
mov
push
mov
into
rol
movsb
leave
jae
mov
xchg
mov
jmp
mov
jmp
outsl
lcall
lods
dec
les
push
sub
jae
inc
or
pop
outsb
jl
mov
int3
sti
cmc
lds
cmpsl
mov
shl
xchg
or
neg
dec
xor
arpl
gs
mov
push
jno
add
xchg
repz
les
fildll
or
lods
mov
mov
xchg
stos
mov
push
cs
out
xor
push
pop
shlb
mov
mov
cmp
shl
and
jne
adc
das
icebp
test
push
movsl
adc
dec
movsb
lahf
scas
cltd
mov
sub
aam
xchg
nop
or
inc
and
mov
mov
rcrl
aas
clc
cmpsb
adc
daa
shl
sbbl
jl
cli
push
push
int
sbb
inc
rcll
pop
dec
jp
xchg
mov
and
ret
outsl
sub
int3
xchg
jnp
js
or
lods
adc
mov
cmpb
add
call
out
es
mov
test
lods
movl
out
sbb
xor
inc
xchg
shlb
push
mov
pop
scas
mov
and
icebp
cld
sar
push
mov
dec
mov
inc
addr16
adc
push
add
dec
stos
jb
rcrl
lret
imul
xor
lret
es
or
jb
push
inc
mulb
orl
pop
cmp
xchg
jb
int3
or
adc
cmp
cmpsb
lods
mulb
and
into
andl
faddl
das
faddl
jne
mov
cmp
gs
pop
fsubrl
shrb
dec
pop
push
push
mov
es
aam
testl
lea
movsl
leave
movsl
and
call
lret
seta
test
jns
sub
aam
mov
lods
rcr
dec
iret
sbbb
cwtl
push
std
dec
aad
sbb
into
xchg
inc
sbb
dec
mov
mov
sub
cmpsl
cld
or
sahf
aaa
cli
lcall
popa
cmp
enter
jg
mov
fimull
cs
inc
or
stos
inc
test
aad
gs
dec
jo
xchg
cwtl
rcll
aaa
sbb
push
mov
push
jg
test
dec
pop
inc
add
inc
test
les
mov
repnz
sbb
add
aas
mov
fld
lret
sub
jne
sbb
lds
aaa
or
stos
out
sub
rcrl
fmulp
adc
sbb
enter
mov
test
push
int
js
push
adc
lahf
and
xchg
adc
clc
pop
pop
pop
fdivrs
bound
scas
xchg
sahf
pop
mov
in
or
adc
push
push
dec
aas
dec
cmovbe
outsb
sub
rol
sahf
jge
mov
loopne
cvtps2pi
xor
test
lcall
mov
xor
cmp
jbe
imull
inc
and
push
cltd
mov
jae
shlb
imul
subl
imul
jle
fildl
xchg
repz
ret
mov
popa
xorl
push
dec
roll
mov
ss
xor
sarl
or
mov
nop
adc
outsl
xchg
push
cs
mov
xchg
loope
jns
dec
mov
fldl
add
addb
xor
popf
inc
mov
add
pop
pop
and
ror
fsubrs
call
fldenv
cltd
cmpsb
add
mov
mov
call
rolb
jbe
cmp
lds
fsubs
das
and
in
mov
push
clc
or
jmp
out
dec
sub
xor
outsb
lret
cmpsb
movsl
dec
jne
adc
shll
bound
int
cs
mov
decb
insb
pushf
std
xchg
popf
hlt
shl
fs
jmp
sub
mov
daa
xor
push
stos
call
or
test
xchg
xchg
aas
jle
jl
adc
insb
push
mov
cmp
mov
xor
jp
scas
mov
jb
sbb
sub
dec
sbb
gs
call
cmp
mov
or
fldl
nop
arpl
fwait
sahf
push
sbb
pop
mov
adc
jecxz
sbb
sub
push
jno
cltd
cld
inc
xor
js
shrb
pop
movzwl
and
mov
adc
sbb
ja
ficoml
xchg
push
pop
testl
adc
push
or
sbb
int3
add
pusha
xor
pop
pusha
call
jecxz
mov
arpl
adc
not
mov
xor
adc
lods
add
jg
cmpl
dec
lock
add
into
sub
aam
js
cmp
pop
mov
and
mov
dec
sub
cwtl
stc
gs
and
ds
pop
into
dec
mov
fwait
pop
xor
sub
mov
sbb
inc
cltd
and
inc
jl,pn
pop
xchg
pop
in
pop
dec
jne
mov
xchg
mov
xchg
mov
push
jae
stc
int
sub
mov
out
or
inc
mov
mov
cmp
ljmp
js
adc
lret
clc
das
mulb
mov
fisubrl
daa
sbb
mov
mov
inc
scas
mov
andl
xor
insb
cli
shrl
dec
mov
cmp
adc
leave
fcomi
xor
shlb
insb
dec
pusha
ljmp
incl
mov
pushf
fnsave
incl
scas
lods
mov
mov
and
outsl
cwtl
lret
and
test
adc
dec
pop
cmp
and
jmp
adc
mov
mov
je
lea
mov
imul
dec
xor
out
push
enter
insl
dec
into
stos
repz
testl
lea
cmp
rcrb
mov
outsb
cmp
mov
ror
pop
lcall
xchg
dec
test
mov
dec
and
mov
mov
xchg
mov
adc
sbb
shrb
insl
jecxz
mov
sub
adc
and
loopne
xlat
pop
mov
add
jmp
cs
mov
in
repz
jge
inc
iret
xor
push
pop
cmc
adc
or
inc
push
lock
icebp
inc
outsl
ret
popa
or
enter
ret
sbb
push
out
cmc
int3
push
jmp
mov
mov
sbb
stos
ret
jae
inc
ret
test
mov
ja
mov
xor
div
push
and
cmp
lds
lds
test
fcompl
pop
sbb
cmc
lret
dec
pop
mov
jge
inc
mov
insl
repz
dec
das
sub
sbb
cmc
rcrl
fstps
lret
lods
push
cmp
sbb
jns
ret
xchg
xchg
fsubl
push
arpl
sub
leave
or
fidivl
jo
xchg
inc
push
jns
mov
jmp
out
inc
and
jb
mov
imul
cmpsb
jge
and
cmp
subb
orl
faddl
mov
cmp
shlb
rcll
notl
ret
into
outsb
call
jae
sub
cmpsb
repz
popa
mov
or
fidivs
pop
inc
pop
hlt
adc
inc
arpl
es
cmpsl
ret
sbb
or
cmp
push
push
add
dec
test
cld
imulb
adcl
xchg
xchg
js
cmp
lds
xor
enter
mov
xchg
jmp
cli
mov
adc
insb
cmpsb
xchg
cs
sahf
lret
in
aas
dec
sub
mov
cwtl
jo
push
fcoml
out
dec
stos
pop
mov
arpl
push
sbb
pusha
leave
popa
jb
pusha
or
out
inc
repz
addr16
pop
lods
mov
outsl
inc
cmpsb
ds
lods
add
loope
lret
jno
scas
lret
cs
stos
push
pop
sbb
out
push
fisubrs
ds
push
das
xor
aad
mov
inc
or
aaa
mov
test
fildll
mov
and
shr
xchg
push
lret
pop
xchg
ss
xor
lds
xor
jno
ret
push
test
idivl
jbe
sbb
xor
idivl
movsl
stos
jae
adc
inc
adc
push
lret
mov
add
pop
ss
std
mov
loope
xchg
mov
rorb
mov
test
sbb
ja
sbb
lock
fldenv
mov
aad
popa
into
push
inc
inc
fcmovnbe
cltd
test
pop
inc
scas
dec
inc
rorl
lcall
loope
pop
cli
lahf
push
adc
pusha
dec
mov
rcll
xchg
insb
aaa
push
pop
adc
clc
out
sbb
and
ret
push
sarl
sub
out
mov
mov
xchg
add
xor
sti
imul
and
cmpsl
xchg
lret
pop
add
xchg
shll
and
repnz
into
fmul
dec
scas
or
dec
mov
hlt
dec
jo
mov
jp
mov
mov
adc
cltd
jo
xor
xor
pop
adc
sbb
pushf
fcomip
mov
repnz
pop
adc
cmp
loop
mov
or
data16
push
xlat
enter
adc
mov
pop
popa
mov
iret
rorl
jp
addb
xchg
bound
pop
ljmp
cwtl
inc
ret
sbb
into
shlb
imul
lahf
lds
cmp
or
ds
mov
sub
or
push
cwtl
push
ljmp
aam
aas
mov
adc
not
inc
aam
push
arpl
pushf
push
xor
andb
add
cmp
outsb
in
test
repnz
mov
loope
adc
xor
adc
mov
stos
dec
rcll
adcb
cmpsb
lock
inc
daa
out
cmp
popa
lret
push
and
pop
pop
lods
cmp
lods
dec
fsts
sub
mov
push
and
std
mov
jp
test
popf
sbb
push
jg
addr16
je
add
mov
test
and
int
mov
sahf
and
mov
idivl
inc
adc
inc
movsl
lea
push
dec
fadds
mov
je
ja
jne
xor
mov
lock
and
jo
cmpsl
mov
inc
pop
stos
jno
inc
repz
sbb
sahf
sub
pop
test
addr16
insb
daa
or
xor
movsl
fwait
popf
mov
lret
lock
shr
dec
mov
call
add
fnstenv
push
sbb
or
or
insl
rol
add
mov
mov
jge
pop
cmp
dec
push
lods
sub
dec
cmpb
xor
mov
je
repz
fs
jle
int3
or
mov
mov
mov
cmp
ljmp
adc
pop
mov
mov
mov
dec
push
and
out
jns
loopne
sbb
mov
aas
dec
pop
scas
cmp
cli
push
std
dec
dec
stos
into
ficoms
ja
add
add
jo
shll
adc
sub
outsb
arpl
cltd
jl
dec
popf
or
imul
mulb
mov
bound
flds
cmp
or
sbb
rcrl
scas
dec
xchg
jns
std
fimull
xor
sbb
lds
ret
or
mov
jae
and
mov
dec
pushf
adc
and
pop
and
pop
or
xchg
lahf
xchg
frstor
daa
or
dec
xlat
and
add
adc
daa
fsubr
push
icebp
dec
out
out
xor
inc
pand
outsl
inc
test
cmpsl
lds
mov
mov
xchg
imul
push
jne
arpl
iret
lret
mov
xchg
mov
jle
mov
dec
shr
jg
lds
pop
adcl
jl
xor
xor
sub
mov
lret
pop
pop
or
pop
dec
mov
arpl
insb
lcall
xor
jae
test
push
cmp
sbb
fsubrp
push
or
fadds
mov
rclb
jno
xlat
shrb
mov
je
stos
imul
cmp
sbb
xchg
cmp
lret
aad
cmp
clc
mov
shlb
mov
aad
jecxz
sbb
and
in
push
xor
xchg
inc
push
xchg
push
pop
loopne
dec
dec
mov
fmul
xchg
mov
xchg
shll
test
mov
arpl
jno
iret
pop
jo
pushf
leave
pop
dec
cli
je
imul
cltd
lods
jb
pop
popf
xchg
fisubrl
xchg
mov
adc
jne
mov
push
mov
cltd
aad
dec
cmpsb
fstp
js
popa
or
sub
pushf
pop
imul
int
push
inc
out
mov
in
pop
mov
or
and
je
test
fimull
inc
add
lret
mov
ret
popa
mov
add
dec
inc
inc
lret
push
inc
mov
jbe
notb
mov
xchg
loope
ret
nop
cmpsb
bound
and
rdtsc
lcall
enter
push
jnp
and
cmc
pop
mov
sub
mov
sarb
lcall
mov
xor
out
or
aaa
jl
shrb
out
or
sti
mov
sub
pop
mov
and
mov
mov
test
xchg
inc
sbb
dec
incb
icebp
push
sarl
pop
rol
push
insl
cli
adc
xchg
mov
mov
cmp
loop
repz
outsl
imul
sbb
pop
dec
xorl
cwtl
sahf
shll
insl
pop
sbb
ja
mov
in
adc
xchg
sub
adc
leave
stos
sbb
iret
dec
dec
sub
out
testl
faddl
in
adcb
dec
scas
das
or
inc
or
icebp
repz
leave
xor
cwtl
jmp
or
test
inc
and
push
rcrb
jbe
les
rclb
fs
nop
arpl
and
mov
add
mov
mov
loopne
xor
sbb
cmp
dec
mov
lret
or
icebp
in
std
dec
push
aam
mov
mov
add
dec
movsb
sarb
cmp
insl
orl
and
push
xor
pop
lods
aam
add
testl
jecxz
repz
inc
mov
xchg
rcl
sub
add
mov
jb
or
jecxz
mov
mov
jo
jne
sti
or
and
nop
mov
nop
mov
jp
sarb
es
clc
stos
pushf
mov
or
cmp
xor
mov
ljmp
ret
jle
inc
stc
xchg
add
mov
jl
xor
and
fdivs
pusha
movsb
and
es
orl
sbb
repz
sub
and
fstpl
mov
rcrb
sub
in
lods
xchg
mov
inc
orl
js
dec
ja
pop
aaa
sub
sub
movsb
gs
aaa
test
jne
mov
mov
subb
ficompl
inc
popf
sbb
sbb
mov
in
scas
mov
out
inc
movsb
lret
sbbb
hlt
icebp
test
orl
scas
adc
mov
lret
repz
data16
das
stos
lretw
je
movsl
inc
cwtl
std
xlat
int
loop
jp
inc
mov
in
fnstenv
ja
dec
sbb
shr
cmpsb
mov
mov
sub
stos
stos
dec
mov
in
cmp
ret
mov
daa
ja
out
xchg
lret
add
xchg
pop
jae
movsb
dec
jmp
adc
aaa
push
cmp
ljmp
and
outsb
or
ljmp
aad
lret
mov
cmp
cwtl
lret
mov
inc
sbb
sbb
pop
xlat
lods
dec
loopne
pop
fsubrl
jmp
inc
and
cmpsl
ja
arpl
inc
rclb
xchg
aaa
iret
lahf
inc
fsubrl
std
clts
push
outsb
cs
ret
std
bound
outsl
jmp
cltd
out
clc
sbb
inc
push
rcl
repz
sahf
and
pushf
sti
movsb
bound
sbb
add
outsl
sbb
stos
les
fldcw
xor
or
leave
mov
add
inc
pop
imul
cld
repnz
xchg
dec
sub
movl
push
rcll
out
ss
jbe
jbe
sub
mov
adc
sub
mov
fs
push
fimuls
arpl
push
aas
sahf
add
cmp
ljmp
adc
gs
dec
xchg
lea
sbb
lods
pop
xchg
rorl
rcrl
add
je
or
hlt
movsb
es
test
xlat
xor
mov
hlt
stos
jp
daa
out
idivl
stos
jl
add
mov
mov
xchg
lcall
xchg
xchg
insl
fstpt
sub
mov
nop
push
fwait
sub
inc
or
jmp
aam
cmp
push
mov
sbb
xchg
movsb
mov
inc
insb
aam
cmpsl
stos
sub
popa
scas
cs
push
loope
hlt
fdivs
sbb
cmp
sub
ror
sbb
jle
stos
jl
pop
gs
mull
fwait
sbb
xchg
sti
scas
xor
inc
repnz
sub
es
or
xchg
aaa
cmc
sbb
push
fs
aam
dec
sub
xchg
add
pop
insl
adc
push
push
dec
push
test
adc
jae
cmp
push
fs
loopne
dec
mov
lcall
inc
sti
cmp
mov
lret
mov
push
rcrb
cltd
inc
mov
pop
mulb
ja
imul
cmc
cs
shll
sub
pop
push
adc
les
sbb
and
sbb
or
scas
adc
push
push
lahf
dec
cmc
xchg
add
jne
in
imul
sub
add
cmc
ret
xchg
dec
je
jecxz
pop
in
xchg
or
imulb
add
leave
iret
mov
mov
push
sbb
lea
fsubs
enter
sbb
inc
les
popf
clc
je
fcoml
xchg
fmull
pop
mov
inc
or
mov
popa
addr16
mov
sbb
test
int3
outsb
jmp
clc
sbb
mov
rcll
fcmovu
adc
dec
sti
cmp
paddd
repnz
loop
jle
idivb
leave
inc
jo
sbb
pop
das
push
shll
movsl
pop
mov
pop
sti
test
sub
mov
fsubrs
jnp
push
push
daa
sahf
enter
roll
cwtl
andl
mov
call
and
int3
and
and
push
fdiv
mov
popf
imulb
mov
xchg
outsl
jno
sub
or
mov
fistl
add
dec
aad
je
aam
mov
mov
dec
mov
mov
sbb
cmp
stos
ret
mov
icebp
out
jmp
inc
sbb
lret
cwtl
fbstp
arpl
pop
mov
std
jbe
xchg
das
and
ret
movsl
jg
arpl
add
push
or
rcr
frstor
idivl
sbb
pop
addr16
je
push
std
xchg
das
rcll
in
add
mov
lret
popf
gs
mov
add
xor
gs
popf
fistl
int3
jmp
inc
fmul
sub
mov
xchg
ljmp
xor
sbb
out
push
push
or
cmp
in
xor
lea
loop
repz
popa
mov
xchg
loopne
jo
dec
icebp
out
pop
repnz
shrb
xchg
pusha
sub
push
mov
cmpsl
jns
jbe
test
inc
hlt
mov
pop
mov
cld
dec
aad
je
movsb
iret
adc
jmp
test
test
sbb
test
cmp
mov
out
xchg
mov
sbb
test
dec
leave
xchg
or
setbe
push
inc
mov
add
dec
dec
sbb
mov
ljmp
movsb
outsb
inc
ret
jae
out
jmp
pop
adc
add
jecxz
push
test
dec
xchg
sbb
aaa
lahf
inc
pop
push
fwait
cmpsb
mov
lods
popf
jmp
rcll
fdivl
pop
sub
cmp
insl
push
fsubrp
test
sbb
mov
sbb
push
cmp
cmpsb
das
repnz
pop
aaa
rorb
or
mov
xor
movsb
mov
xchg
adcl
cmpsl
andb
loop
lock
mov
mov
nop
xor
xchg
push
pop
inc
call
out
adc
jg
je
lods
fcom
ret
nop
cmp
lahf
sbb
icebp
les
pop
dec
in
jecxz
jp
test
test
loopne
add
ficoml
movsl
testl
ss
adc
xchg
shrl
lock
shll
data16
aaa
leave
fcompl
mov
jae,pt
movsl
jne
xchg
sbb
sbb
dec
xor
loop
scas
sub
pop
sti
insl
rorl
sbb
adc
xchg
sub
or
lock
fwait
daa
clc
out
das
lock
cmp
cmp
ljmp
adc
rcr
scas
shrl
mov
pushf
dec
fistl
add
shll
inc
std
pop
jae
shr
sub
outsl
loop
mov
adc
dec
shlb
je
mov
mov
xchg
js
add
rcll
jge
xlat
dec
pop
pusha
hlt
stos
cmp
cltd
bound
stos
mov
arpl
add
stos
insb
cwtl
and
dec
lock
lret
cmpsl
jno
mov
mul
js
gs
mov
movsl
mov
push
sbb
inc
xor
jge
test
into
push
mov
push
xor
int
cmp
negl
pop
xchg
lods
mov
sbb
xor
pop
or
dec
negl
and
cmp
mov
add
aas
sarb
stc
or
push
pop
loopne
pop
test
or
stc
out
sub
jo
cmp
test
lds
jne
push
cltd
jbe
fs
jl
pop
pop
fstl
mov
mov
cmp
scas
and
lds
out
sbb
adc
add
lock
sbb
sub
in
out
xchg
mov
or
cld
lea
lcall
push
sarb
mov
fsubs
or
cmp
cwtl
popa
inc
mov
popa
or
les
ss
mov
dec
movsb
xchg
sub
mov
adcb
insl
adc
adc
out
mov
fmulp
pop
popa
jno
sbb
xchg
xor
gs
scas
into
mov
mov
push
jnp
sbb
vmptrld
or
pop
in
cmpl
repnz
adc
jns
sar
adc
stc
out
jmp
mov
ficoms
add
jb
imul
outsb
call
test
push
shll
push
les
add
mov
daa
mov
cld
out
sbb
in
mov
test
or
inc
lds
inc
inc
push
mov
ficomps
and
cltd
jge
pop
cld
pop
fs
pop
clc
movsl
fstl
push
jns
add
mov
test
xchg
sar
pop
xlat
sbb
mov
mov
inc
arpl
cltd
push
lret
jns
mov
ljmp
push
pop
jbe
in
mov
je
push
jg
stc
and
movsl
inc
test
sbb
or
or
shl
sahf
loopne
sub
daa
int
xor
mov
scas
cmp
mov
mov
pusha
mov
sti
mov
jl
lahf
int3
or
jge
sbb
fnsave
inc
cmpsb
mov
mov
ret
or
popa
shl
leave
mov
sub
xor
popa
xchg
jmp
hlt
fdiv
stc
fidivrs
shlb
cltd
addr16
bound
fsubrl
push
daa
jg
je
loopne
mov
push
frstor
push
cltd
pop
pop
hlt
or
faddl
call
push
inc
xor
jg
jns
jle
and
cs
xchg
ds
adc
sbb
cpuid
pop
je
pop
repnz
andb
mov
imul
aam
daa
push
stos
sub
hlt
add
pop
arpl
test
cmp
push
sarl
push
push
fcmovnb
mov
or
push
xor
mov
cmp
and
cmpl
loopne
mov
ja
mov
mov
push
ja
fcoms
xchg
mov
pop
out
cmp
mov
loop
mov
sahf
add
and
dec
dec
xchg
sub
sbb
test
sub
xchg
pop
stc
mov
pop
pop
dec
arpl
adc
nop
inc
pop
cmp
push
pop
or
ss
negl
pop
lock
rorb
cli
aam
adc
call
loopne
mov
mov
popa
sub
jmp
scas
mov
mov
testl
push
bound
mov
adc
adc
insl
pusha
mov
inc
adc
scas
mov
pop
es
sbb
adc
call
mov
aam
jns
fcoml
push
sbb
repz
lret
fldenv
cmp
xchg
stos
popf
or
xor
stos
addr16
loopne
repnz
repnz
fsubrs
fs
xor
xor
stc
cmp
int3
sbb
mov
lock
jp
push
mov
adc
mov
pop
and
out
add
int
push
fisubrl
dec
in
mov
pop
mov
push
int
lods
inc
cwtl
imul
add
push
mov
push
inc
out
jl
mov
xor
mov
jne
push
cmpl
push
jne
loop
add
xchg
push
lcall
sub
fildll
inc
cmp
dec
mov
adcb
push
fimuls
adc
fsubs
cmp
mov
int3
sbb
enter
xor
je
or
aaa
push
call
add
sub
push
std
jp
sub
pop
movsb
fiaddl
xchg
sub
out
pop
jmp
inc
cmp
push
sbb
adc
xchg
dec
sbb
or
imull
aas
xchg
fimuls
pop
insb
lea
push
cmpsl
cmc
and
adc
xor
sahf
iret
jo
test
fwait
and
lea
fwait
sti
pop
shl
lret
fists
out
loop
loopne
mov
iret
in
mov
lea
decb
push
inc
mov
popa
mov
xor
cltd
push
ficompl
xor
dec
shrl
aam
or
add
gs
and
jnp
push
add
into
ret
test
jbe
inc
mov
dec
sbb
cwtl
jnp
pop
gs
hlt
aam
dec
pop
ret
inc
stos
or
sub
andb
dec
lahf
jns
mov
mov
push
xor
sub
std
arpl
lods
mov
imul
test
es
mov
inc
repnz
repz
clc
fiadds
cmc
push
int
inc
les
loop
mov
mov
movsb
ret
movsb
and
cmp
pushf
mov
pusha
mov
mov
mov
push
in
jmp
or
insl
mov
sub
push
in
push
dec
jmp
and
cmp
sub
movl
negb
pop
push
lods
pop
and
std
popw
ret
pop
push
sbb
in
cltd
push
lock
inc
fidivrs
mov
test
and
imul
icebp
test
push
fwait
call
in
pop
cmpsl
jno
test
mov
jle
xchg
scas
pop
lock
test
cmp
cmpl
adcb
and
push
push
les
xor
ret
mov
cwtl
call
movsb
data16
pop
insl
popf
imul
div
jmp
dec
xor
jge
lods
jne
push
jl
loopne
cmc
daa
nop
dec
pop
jne
cld
inc
movsl
add
in
ret
pop
lods
stos
loop
mov
dec
mov
dec
sahf
xchg
loopne
sub
pop
daa
mov
rol
fdiv
sbb
cmpsl
xchg
xchg
jle
stc
sbb
test
bound
jnp
stos
sub
jmp
mov
add
sti
int
ffree
sbb
adc
cmc
ljmp
shll
pop
aaa
jl
shr
pop
cmpsb
dec
icebp
xlat
repz
add
mov
fistpll
out
mov
cmp
ja
sbb
aas
xor
gs
xchg
or
add
inc
push
mov
mov
flds
pushf
movsl
add
in
in
movsb
data16
cmp
adc
repz
sti
jns
add
add
movsl
frstor
js
mov
aas
sbb
rdtsc
or
nop
out
mov
stos
lahf
repnz
scas
xor
or
mov
test
pop
int3
jle
inc
das
ljmp
xchg
bound
js
test
cmp
aad
mov
and
rclb
dec
stc
call
push
jp
fs
fcomp
jle
enter
mov
pop
dec
cwtl
shll
out
cmpsb
pusha
dec
icebp
gs
and
cli
js
xor
std
icebp
cmpsl
repz
in
es
push
iret
jbe
mov
into
pop
stc
dec
insb
sub
dec
cmc
call
dec
lock
pop
xor
dec
in
outsb
rclw
dec
lcall
popa
add
call
aaa
fsts
xchg
gs
in
mov
add
insl
mov
inc
jmp
repz
scas
push
icebp
inc
dec
sahf
enter
pop
pusha
mov
sti
insb
pushf
push
test
mov
push
mov
enter
adc
adc
push
leave
fisubrs
mov
dec
dec
pop
push
call
push
sub
push
arpl
xchg
sub
pop
and
xor
test
cld
add
sbb
data16
ss
test
lods
pusha
aam
incb
ja
movsb
and
jl
fdivrs
push
push
aas
popf
mov
sbb
push
adc
adc
inc
pop
out
das
mov
and
jnp
jecxz
dec
bound
int
push
loopne
adc
mov
in
inc
out
rcll
subb
aaa
je
pop
cmp
test
aam
push
or
mov
mov
cld
lcall
fists
stos
adc
pand
into
bound
jmp
and
aad
hlt
loop
js
sub
fcomi
rorb
push
mov
lock
cli
cmp
js
ss
and
je
test
vdivps
loopne
loope
mov
fstpt
add
pop
or
dec
sub
mov
add
int3
or
mov
orl
in
shll
push
aam
shlb
lds
jle
push
dec
sub
mov
jns
leave
jbe
rcrl
and
in
sub
mov
adcb
xor
jbe
rol
test
cmp
fmulp
jecxz
rcrl
mov
push
push
cmp
andb
pop
push
cmpsl
sub
xchg
fistps
jae
clc
gs
les
mov
cmp
xor
test
adc
sahf
xor
scas
jno
jae
nop
out
adc
and
jmp
mov
and
mov
stos
in
loopne
in
fs
inc
xor
sahf
sub
dec
xchg
popf
push
pop
mov
arpl
ret
push
movsb
inc
cs
test
dec
fisttpl
mov
insb
gs
cmc
lea
psrld
xchg
shrl
jns
cmp
lds
hlt
inc
test
mov
insl
insl
dec
clc
mov
add
in
cmpsl
xchg
xchg
movsl
divb
iret
cmp
mov
xor
xor
sub
pushf
popa
or
jnp
js
jecxz
push
test
dec
shl
sub
ss
jmp
sahf
xchg
mov
mulb
mov
in
leave
cmp
jno
sbb
jb
gs
mov
popf
fs
lds
leave
mov
jb
test
mov
sbb
jns
cmpsl
sti
sub
xor
adc
sub
addsubpd
andl
and
xor
inc
pop
mov
adc
mov
adc
mov
push
cmp
xor
subl
loope
xor
roll
int
cmp
in
and
lods
push
sarl
lahf
lock
in
or
pop
jp
mov
cmp
mov
jmp
sbb
push
test
xchg
dec
jne
mov
addb
subl
gs
imul
int3
flds
andl
mov
bnd
lea
xchg
repz
inc
movsb
and
jno
push
xor
pop
movsb
daa
xor
mov
mov
inc
or
lret
sub
ret
adc
mov
outsl
les
in
in
out
dec
enter
push
stos
pop
dec
push
nop
push
push
mov
hlt
shll
inc
and
pop
shlb
sub
adc
repz
xor
orb
movsl
sahf
pop
je
and
stos
insb
out
pop
jnp
or
repnz
pop
arpl
dec
out
pushf
stos
inc
push
sub
bound
shl
sbb
xorl
popa
arpl
mov
outsl
or
lahf
sahf
gs
push
lahf
and
cmpsl
insl
ficompl
call
neg
rcrb
std
mov
fidivrs
fcomps
inc
and
imul
cmp
lds
inc
push
dec
pop
imul
inc
jae
ficoml
sub
gs
cmpl
push
push
cli
jne
and
mov
out
in
pop
mov
out
jb
into
add
push
xlat
test
lock
xor
mov
and
push
insl
mov
fcmovnu
add
int
mov
mov
sarl
stc
shrb
mov
and
mov
shr
mov
repz
xchg
pop
in
imul
push
scas
icebp
pop
stos
lea
in
adc
adc
add
sbb
xor
out
cwtl
lds
cmp
outsl
cmp
repnz
add
push
dec
sarb
dec
sub
mov
enter
stos
cmpsl
dec
daa
or
cmp
push
fstps
out
lcall
push
adc
mov
lret
mov
in
cwtl
add
repz
adc
ret
ljmp
pusha
lahf
pop
aaa
outsl
xor
fstps
add
mov
fcmovb
int
hlt
lcall
cmpsl
and
ret
orl
push
pop
and
xchg
push
in
pop
mov
in
mov
fisttpl
inc
in
movsb
jp
sbb
sub
pop
mov
rolb
and
stos
xchg
imul
sub
fbstp
pop
push
pushf
dec
fsub
pop
icebp
mov
add
mov
mov
mov
arpl
cmp
clc
or
jl
jp
adcb
test
test
mov
sbb
sbb
imul
dec
adc
push
in
xchg
sbb
pop
xchg
nop
or
sbb
mov
je
call
mov
inc
dec
mov
sub
pop
adc
adc
in
sbb
inc
movsl
jle
mov
adc
je
or
stc
pop
or
cmp
nop
push
ss
jl
pop
bound
sbb
out
das
inc
aas
sbb
stos
sahf
xorl
adc
push
cmpsb
dec
ljmp
or
mov
push
xor
jp
adc
and
push
js
ret
sbb
sbb
mov
dec
jle
call
movsl
daa
shl
ret
insl
inc
xor
or
in
mov
pop
jp
inc
jno
in
adc
and
mov
xchg
pusha
outsl
jo
xchg
pop
push
push
sti
enter
push
popf
and
jecxz
std
pop
leave
xchg
or
mov
adc
shlb
ljmp
xchg
out
mov
jecxz
add
testl
pop
adc
push
adc
sbb
mov
xor
std
dec
and
lea
sbb
pop
ja
mov
mov
cmpsb
lcall
sti
and
jae
sbb
hlt
xchg
dec
jns
push
xchg
pop
setno
push
jns
pop
adc
adc
rcll
mov
inc
xchg
cld
inc
ss
lahf
into
lcall
fisttpll
bound
test
imull
jno
loope
jns
mov
inc
mov
pop
jo
arpl
das
test
pop
test
shlb
and
add
lret
cmpl
das
pop
mov
mov
testl
inc
dec
mov
mov
mov
push
push
add
mov
jmp
add
jl
insb
das
jp
fs
sbb
push
mov
add
inc
test
push
pushf
add
mov
sub
stc
insb
movsl
fmull
mov
adc
and
addr16
into
iret
sbb
jae
shl
pop
sti
pop
inc
jecxz
out
jp
inc
inc
pop
ds
cmp
or
inc
adc
ret
fdivrl
in
push
insb
or
adc
lcall
inc
cmp
mov
and
add
sti
aad
shr
outsb
adc
pusha
xchg
mov
outsb
mov
cmp
sub
jns
mov
add
xchg
xchg
pop
dec
mov
insl
sbb
and
shr
pushf
jg
dec
pop
adc
imul
adc
or
mov
notl
jg
jle
outsb
sub
xchg
or
psubb
test
and
nop
into
popa
mov
sub
aas
jl
add
sub
mov
rcll
lcall
leave
rol
arpl
outsb
cld
loopne
inc
cmp
push
xchg
jns
bound
shl
sub
mov
mov
shrl
int
les
out
xlat
xchg
push
popf
sub
and
jle
call
push
and
lock
push
cmp
out
mov
fcomps
adc
inc
lahf
bound
ljmp
dec
inc
mov
xor
stc
push
enter
xchg
lds
cmp
sbb
pop
add
mov
adc
sti
jne
jne
push
jno
scas
mov
inc
add
gs
divl
sbb
xchg
mov
popa
ficoms
dec
in
sbb
mov
cmp
std
mov
lea
js
pop
dec
sub
js
out
lret
test
dec
jmp
jno
clc
adc
daa
inc
pushl
jecxz
les
adc
dec
insb
push
mov
loop
push
dec
gs
cmc
fimull
cltd
out
jbe
jp
das
sbb
dec
test
negl
es
add
and
mov
ljmp
js
rcr
and
mov
push
stos
adc
mov
pop
sbb
add
dec
mov
dec
jg
cmp
push
cmpl
inc
add
push
jae
cmpl
rcll
push
test
mov
scas
cmpsb
mov
pop
lods
xchg
push
cli
mov
push
nop
adc
arpl
pop
enter
or
inc
and
incb
add
in
decb
leave
lods
aam
sbb
ds
cmp
pop
sub
adc
add
xlat
je
lods
mov
xchg
out
stos
jg
xchg
xor
aam
xorl
dec
jg
or
fdivrs
cld
jae
xchg
or
in
mov
filds
adc
rcrb
aad
stos
pop
ds
call
divb
mov
jne
es
and
and
push
and
cmp
push
push
xchg
scas
dec
lods
dec
add
cmp
ret
mov
cwtl
add
xchg
mov
jl
test
data16
xor
pop
sub
out
add
dec
sbb
mov
out
jb
in
xchg
lds
add
xlat
shl
cmpsb
std
ret
push
inc
aam
test
test
or
gs
xor
jo
or
mov
mov
test
dec
rcl
cmp
xor
and
es
insl
push
cmp
std
test
jg
xor
xchg
cmc
sub
lock
icebp
andb
xor
int3
stos
push
pop
sbbl
fsubrs
jmp
out
fisttpll
and
fs
mov
sarl
mov
push
cs
cmc
fistpll
sub
data16
inc
mov
xchg
mov
cmpb
shll
xchg
add
inc
lea
xchg
leave
add
push
sbb
xchg
decb
or
dec
mov
xor
test
lods
outsb
push
insl
ja
mov
mov
sub
add
imul
stos
shll
mov
clc
imul
mov
shlb
xchg
mov
imul
and
mov
out
lahf
ret
scas
test
ret
ja
and
fimuls
push
xchg
in
cli
add
and
cmpb
sbb
add
bound
pop
cmp
icebp
test
sub
push
dec
enter
xor
or
aaa
jne
test
add
jbe,pt
jns
xor
mov
mov
xor
push
inc
jnp
jne
fldcw
pusha
dec
movsb
fprem1
xor
cmp
cmpsb
call
push
pop
cli
jmp
test
not
jo,pn
leave
mov
inc
movsl
jns
test
pop
and
add
fistps
shrl
sbb
out
or
jecxz
and
mov
movsl
pop
inc
lret
mov
lret
testl
or
stos
insb
sub
mov
test
repz
insb
xchg
mov
scas
cmpl
fildl
je
push
sbb
pop
xchg
jns
inc
mov
mov
dec
mov
mov
sbb
test
add
les
in
sbb
nop
xchg
fsts
enter
xor
inc
mov
xor
sbb
mov
scas
cwtl
jl
cmp
test
imul
cwtl
je
xchg
call
insb
mov
mov
loopne
jns
stc
loope
add
adc
test
ja
fidivs
xor
in
das
pop
jns
mov
adc
test
test
cli
div
dec
stos
inc
or
mov
sub
push
loope
cmp
cmpl
xor
call
in
arpl
fistpl
out
fs
int
sub
xor
mov
imul
cld
adc
lcall
push
andl
pushf
mov
leave
movsb
push
icebp
adc
cwtl
dec
or
sbb
and
pop
add
icebp
or
into
dec
cmc
loop
imul
push
fsubrl
and
inc
iret
pop
and
fnstcw
pop
data16
mov
or
pop
jecxz
mov
das
popf
push
xor
xlat
fcoms
mov
imul
inc
push
xor
or
test
aas
add
pop
dec
mov
aam
les
lea
xorb
cwtl
pop
inc
mov
cs
outsl
push
out
pop
inc
jo
sub
leave
mov
lcall
dec
scas
xchg
ret
nop
jle
stc
xchg
inc
mov
push
and
cmp
repz
fists
dec
mov
xchg
enter
cmp
cmp
sub
sub
rcrl
add
sbb
flds
ds
test
fistpl
mov
push
mov
in
idiv
sbb
mov
push
mov
jmp
ret
dec
jg
shrl
jmp
fsubs
out
push
test
shll
out
out
adc
push
rorb
adc
rcrl
sub
mov
lret
pusha
cmc
xchg
jne
mov
jle
jb
push
test
out
inc
or
and
pop
call
lock
stos
lea
mov
vdivsd
cmp
jge
pop
jae
mov
lret
jmp
jl
negl
push
test
mov
stos
and
scas
loopne
mov
push
out
clc
cld
outsb
mov
pushf
mov
mov
push
add
and
xchg
out
ds
bnd
ret
inc
adc
add
pop
arpl
fs
aam
aad
rclb
in
xchg
sbb
xchg
dec
in
pop
rcll
cmp
or
scas
jnp
sub
mov
bound
push
outsl
sbb
dec
or
mov
xor
pop
pop
jl
and
fdivs
je
mov
ret
pop
xchg
es
je
imul
sub
sub
into
jo
mov
outsl
dec
popf
ret
sbb
mov
mov
bnd
xchg
inc
fidivs
icebp
cmp
dec
ret
xor
xchg
int
mov
into
out
and
fnstsw
jbe
or
adc
bound
push
sub
add
mov
cmp
sub
xchg
aad
orb
int
jb
or
dec
daa
add
dec
fisubl
xchg
mov
mov
gs
aad
cmp
add
into
fwait
je
and
jmp
cmp
mov
push
push
hlt
push
in
mov
mov
fsubrp
add
dec
lahf
inc
xchg
and
dec
or
sub
sti
jbe
cld
stos
cmpsl
leave
or
adc
fistps
ret
inc
enter
loope
test
jae
xor
jmp
cmp
or
int3
lods
ss
cmp
repnz
push
js
repz
popl
int3
inc
xchg
add
divl
andb
and
cmpsb
sbb
dec
mov
mov
jle
or
mov
mov
test
or
daa
js
xlat
pop
pop
mov
js
mov
movsb
ss
test
test
inc
arpl
xor
enter
xchg
pushf
mov
mov
jmp
movsl
movsl
fsub
mov
and
mov
xchg
jle
push
cmp
pop
sbbl
mov
fstl
push
jns
sbb
enter
xchg
xor
aam
lcall
jmp
and
call
andl
aas
fs
dec
outsl
mov
jg
aam
mov
inc
aaa
leave
loope
mov
adc
fistpl
test
push
cmc
pop
test
leave
mov
cld
lds
mov
les
pop
test
cmp
or
clc
mov
adc
iret
jle
cmpsl
les
sbb
inc
es
pop
and
mov
lcall
out
xchg
or
jne
and
pop
fs
loop
orb
mov
sbb
cmp
out
jmp
mov
ja
inc
mov
or
scas
pop
lock
push
fists
std
addb
mov
sbb
in
jle
es
test
pop
pop
dec
jmp
or
sub
xchg
mov
sbb
jb
sbb
mov
cmpsb
push
ss
xor
repz
jb
loopne
arpl
mov
ja
aad
add
mov
shl
bswap
mov
addr16
jnp
lods
stos
xchg
cmp
ret
push
mov
inc
push
repz
loope
push
mov
push
or
subb
push
adc
pushf
add
add
pop
push
sbb
mov
fidivl
ret
fsubrl
sub
loope
cli
test
scas
mov
cmp
popa
andl
cmp
jle
sbb
das
push
dec
sbb
fidivs
sahf
cwtl
rolb
in
add
test
ret
mov
mov
fsubrl
mov
scas
xor
popl
fsubrs
movsl
jno
inc
and
clc
mov
pop
dec
pop
lret
int
std
inc
xor
leave
lods
scas
mov
xor
inc
sub
pop
push
jle
jns
in
pop
in
mov
add
dec
xor
icebp
fldl
push
test
cmp
jl
jmp
std
in
push
arpl
lock
or
lods
or
xchg
les
adc
cmp
xchg
xor
jno
mov
ljmp
mov
ret
sub
adc
adc
fisubrl
xchg
fidivl
addb
inc
jo
add
or
dec
stos
out
std
mov
jmp
dec
add
push
jecxz
movsl
mov
xor
lahf
fidivl
sbb
imul
std
inc
mov
ljmp
sbb
push
pop
mov
push
lea
call
loope
lock
mov
imul
lods
fs
jo
xchg
inc
fs
xchg
jb
std
sbb
sub
insl
push
pop
dec
pop
pop
mov
mov
cmp
xor
aas
xchg
mov
adc
mov
push
jb
aam
xor
icebp
loop
icebp
mov
movsb
adc
jnp
jecxz
cmc
sbb
dec
cmpsl
aam
aaa
into
sub
jmp
iret
std
fs
fwait
sbb
daa
push
bound
sahf
ret
mov
lcall
jae
push
lcall
lea
shlb
xchg
inc
dec
lods
and
scas
inc
insl
pop
add
mov
in
popf
in
push
sub
jle
adc
inc
outsb
out
into
into
out
dec
mov
sbb
mov
pop
pop
aad
lcall
les
xchg
ret
out
int3
or
andb
lods
push
sbb
mov
aam
mov
mov
pop
es
pop
je
ffree
pop
adc
mov
scas
add
lods
jge
mov
mov
cmp
cmc
mov
xor
push
jecxz
add
mov
lods
adc
pop
scas
int
add
jnp
push
dec
repnz
mov
sub
push
test
jb
pop
pop
rorl
cwtl
pop
sbb
xchg
sbb
icebp
xchg
cmp
fstpt
add
outsb
popf
add
fadds
mov
jecxz
daa
loopne
pop
sbb
sub
mov
sbb
xlat
push
or
mov
mov
in
lods
cmp
movsb
push
test
jecxz
pop
cld
pop
jo
xor
dec
sbb
add
sahf
xor
jne
daa
outsl
test
outsl
add
add
mov
jl
xchg
ja
mov
push
hlt
lret
out
push
sahf
push
jge
xchg
loop
int
sub
pop
cmp
repz
cltd
jne
rclb
sbb
insl
dec
push
or
mov
popa
mov
xchg
loopne
stc
xchg
push
cmp
xchg
int
sarb
push
xor
jns
decl
std
iret
push
in
xchg
mov
jbe
mov
test
bound
push
sbb
pop
inc
mov
push
stos
or
orl
adcl
mov
or
jge
push
jecxz
mov
jge
jg
cmp
jo
ds
fiaddl
and
loopne
push
inc
gs
xchg
mov
mov
and
stos
push
stos
out
jb
push
sbb
sub
xlat
add
mov
pop
ret
sub
cmpsb
lahf
push
adc
inc
sbb
pop
inc
push
mov
xchg
lcall
push
inc
pop
sti
pop
test
inc
lret
mov
enter
dec
sbb
and
push
dec
sbb
and
mov
push
jae
mov
mov
mov
rcll
and
dec
adc
mov
push
out
dec
inc
mov
nop
std
in
pusha
insb
pop
out
test
xchg
insl
pop
mov
jecxz
fwait
pop
inc
sub
xchg
daa
pop
pusha
and
xchg
inc
and
and
icebp
mov
lea
out
outsb
jo
hlt
dec
inc
test
aas
std
stos
je
push
movsl
cwtl
lcall
sti
cli
mov
xlat
mov
cli
sub
mov
rorb
mov
imull
stos
mov
std
push
inc
mov
dec
mov
jmp
cmpsb
outsl
scas
leave
ret
in
adc
pushw
clc
pop
add
or
aad
xchg
push
mov
and
aam
jbe
dec
adc
movsl
jmp
shll
adc
mov
mov
out
aas
mov
dec
shrl
rclb
sbb
jnp
push
lods
cwtl
sub
inc
cli
and
xlat
mov
sub
dec
mov
mov
pop
mov
aam
jnp
pop
js
add
push
pop
and
jmp
push
mov
inc
mov
cmp
push
arpl
mov
ret
aas
mov
dec
sbb
jo
mov
or
dec
in
hlt
sahf
in
or
scas
stos
in
sub
or
nop
jns
inc
daa
xlat
cmp
push
xorb
scas
dec
push
inc
testl
leave
outsb
jp
dec
and
outsb
push
shl
movsb
es
pop
and
ret
repz
scas
xchg
push
movsl
das
ficoml
out
repnz
aam
pop
icebp
loop
add
mov
call
push
lret
insl
dec
or
dec
aaa
xchg
and
lods
cmc
push
dec
pusha
push
cmp
pop
or
or
shl
fnstsw
mov
insl
into
mov
sbb
and
test
ja
cmp
arpl
push
xchg
rcl
sbb
lret
jmp
movsb
nop
push
push
rorl
xchg
xlat
pop
movsl
pop
push
pop
rcrl
and
mov
int3
je
into
push
jle
aaa
lret
bound
sbb
test
iret
std
pop
sub
sahf
pop
mov
fldt
into
lods
and
inc
mov
pop
repz
and
dec
in
in
xor
dec
pop
addr16
test
jnp
fnstcw
inc
fmull
loopne
popa
lahf
es
xchg
scas
dec
and
stc
or
stos
cmp
push
xchg
arpl
int
test
mov
lret
fistps
leave
inc
notb
out
cmp
in
aad
jbe
mov
sub
dec
int
inc
lahf
shlb
cmpsb
leave
or
movsl
mov
pushl
inc
inc
insl
jge
dec
inc
fimull
repz
std
fwait
and
and
es
shlb
xchg
std
into
pushf
lret
movsl
lret
pop
pop
lods
and
add
xlat
xor
mov
iret
adc
and
mov
cmc
mov
mov
mov
mov
ja
inc
xor
push
lock
sar
cmpsb
pop
lods
pop
pop
mov
lahf
cmpsb
arpl
ror
dec
jmp
xchg
push
je
adc
pop
xlat
popa
fists
out
cs
pop
int3
outsb
dec
out
pop
pop
xchg
and
inc
xor
sti
jbe
adc
test
cmp
and
stos
pop
jnp,pt
frstor
into
and
jne
xchg
cmpps
mov
mov
dec
pop
jecxz
and
inc
setne
inc
daa
sbb
sbb
sbb
mov
loope
adc
icebp
ret
je
xchg
sbb
push
lods
add
push
cmp
icebp
mov
das
out
std
das
and
pop
and
pushf
shrl
inc
lds
xor
mov
inc
js
jne
js
frstor
or
push
aam
mov
mov
sti
inc
pop
dec
xchg
inc
sbb
adc
cwtl
stos
cld
sub
xchg
mov
pop
cmp
out
bound
popa
addr16
xor
mov
pop
xchg
cltd
lret
ret
mov
adc
insl
repz
and
in
and
movsb
push
cmpsb
out
cli
xchg
mov
enter
mov
jecxz
out
movsb
fbld
pushf
das
addr16
shr
cmp
movsl
lods
mov
cmc
push
sbb
cmc
mov
adc
sub
push
repz
test
push
stc
push
frstor
sub
repnz
test
jnp
mov
or
jecxz
pop
fs
lods
cs
popa
jbe
cmpsl
in
js
ret
pushf
fwait
jno
data16
test
xor
icebp
stos
ret
adc
inc
int3
mov
mov
shlb
in
sbb
loopne
sub
bound
cltd
dec
icebp
and
enter
hlt
pop
cwtl
dec
dec
inc
xchg
out
xchg
cmp
jl
inc
xor
inc
mov
dec
or
dec
fisubl
push
inc
pop
test
or
or
mov
mov
popl
es
jle
aaa
enter
into
dec
or
cmp
jbe
inc
sbb
xchg
movsl
mov
or
aaa
push
mov
shrb
push
mov
aam
dec
movsl
jae
push
cmp
sbb
cmpsb
dec
cmpb
test
ficoml
ja
xchg
mov
adc
sbb
xor
push
adc
jns
shrb
pop
out
test
sub
not
xor
movsl
ljmp
sbb
sub
push
adc
je
cmpsb
inc
push
jno
push
pop
jno
addr16
xchg
mov
dec
lods
push
sub
xchg
cltd
sub
cmp
iret
dec
mov
aam
data16
ja
cmp
mov
or
mov
nop
cltd
push
dec
in
adc
cmp
repnz
aad
sarl
loope
push
pop
in
jnp
repz
and
movsb
pop
dec
xchg
jo
idivb
add
mov
or
mov
xchg
push
or
adc
xchg
nop
pop
clc
and
add
mov
xor
mov
adc
lods
popf
pop
les
lods
into
sub
sbb
ret
push
jg
jne
mov
int
stos
or
outsl
scas
leave
mov
xchg
iret
sub
xchg
push
faddl
pop
lea
mov
in
xchg
lock
popf
mov
and
nop
cmp
sub
xrelease
jae
lahf
push
das
mov
cmp
or
sahf
push
pop
xlat
push
mov
inc
xchg
adcb
test
insl
fisttpl
jo
cmp
cld
fadds
sub
and
jl
pop
adc
adc
in
outsl
inc
aad
mov
fsubrs
jno
jae
js
shlb
add
sub
in
inc
dec
fdivrl
mov
mov
dec
fwait
lods
dec
into
inc
sub
jne
and
xchg
fdiv
add
icebp
gs
mov
push
cmpsl
lods
out
or
xor
bound
jae
push
lods
adc
shl
xchg
mov
cld
jmp
ficoml
or
and
cmpsl
mov
and
jne
mov
scas
into
pop
mov
mov
push
push
mov
sub
jo
dec
push
pop
cmp
sub
lea
cmpsl
aaa
mov
xor
mov
ljmp
sti
push
jmp
push
xchg
test
lret
push
mov
jns
adc
fwait
push
pop
aam
mov
sar
inc
jmp
fcmovnu
cmp
mov
outsb
mov
xlat
fcoml
fnstenv
add
push
add
mov
jmp
jbe
aaa
lods
icebp
int3
loop
jp
in
je
mov
and
lea
lods
fs
adc
pop
mov
pop
test
hlt
mov
mov
cmp
sub
dec
xor
rcl
add
pop
stos
inc
gs
adc
frstor
lods
or
nop
mov
popl
in
cmp
xchg
mov
mov
shrl
lods
cmc
jno
cli
mov
in
fsts
sarl
jne
mov
test
dec
jmp
mov
rcrl
sub
adc
adc
mov
mov
mov
push
sub
js
das
sbb
add
push
inc
inc
fists
je
cmp
fimuls
adc
jp
pop
xor
out
lods
dec
pop
in
movsb
xlat
xchg
jg
dec
lcall
sbb
jg
call
push
xchg
sarb
ficompl
jmp
or
sub
mov
movsl
or
aaa
aas
outsl
mov
movsb
cmp
xchg
jno
mov
insl
cmp
mov
mov
fcmovnu
xchg
pop
or
inc
test
popf
scas
sub
aas
rorb
mov
mov
lods
push
loop
adc
stos
sbb
in
sub
insl
nop
lods
mov
sub
loopne
and
lds
aam
inc
pop
imul
adc
out
jle
mov
adc
daa
jg
enter
icebp
mov
add
nop
xor
jg
or
mov
fcmovnu
cmp
mov
jmp
idivb
jg
sbb
pop
js
mov
xchg
push
xchg
jge
xchg
dec
cld
fs
int
inc
cmc
stos
inc
aaa
cltd
ret
dec
ror
ss
addr16
dec
or
sub
fcmovbe
lret
lds
inc
jno
out
adcl
nop
test
out
pop
ret
bound
mov
inc
push
divl
jo
mov
jae
bound
inc
mov
jo
pop
xor
pop
call
hlt
add
cli
xchg
out
sub
adc
push
mov
sub
mov
dec
xchg
or
push
jae
aas
sti
mov
and
jle
pop
adc
dec
dec
scas
call
aad
js
mov
loope
mov
loopne
dec
roll
jnp
loopne
jno
sub
mov
adc
movsb
inc
jae
sbb
sbb
push
lds
xor
mov
stc
sbb
mov
ds
in
loop
test
test
scas
push
stos
test
scas
jecxz
ss
dec
mov
imul
mov
div
push
push
int3
cmp
imul
pop
or
xor
jns
inc
adc
cltd
mov
clc
int
ljmp
rclb
cmp
andl
fdivp
dec
jle
adc
mov
mov
loope
jp
int3
add
mov
test
leave
fbstp
dec
mov
mov
ret
andl
test
xor
fcomp
dec
sub
call
cltd
xchg
fwait
inc
mov
sub
enter
jl
insb
pop
in
jae
cs
and
sbb
cmpsb
mov
ret
outsl
adc
test
cmpsl
mov
popa
jmp
add
push
cmc
adc
js
cmp
in
in
insl
adc
jb
outsl
lock
jnp
cmp
movl
ret
fdivs
das
enter
xchg
enter
jmp
xor
out
pop
bound
sti
fs
sbb
xor
ret
ljmp
addb
mov
pushf
ljmp
testb
xor
mov
ror
cmp
lods
rol
ljmp
or
mov
jge
dec
lods
lret
xchg
cmp
lret
jno
xchg
popf
icebp
mov
mov
repnz
inc
sub
or
cmp
cmp
push
dec
sbb
faddl
lcall
pop
add
xchg
movsl
out
std
dec
popf
cltd
cmp
ja
inc
loopne
pop
xchg
lahf
in
add
add
mov
pop
in
xchg
roll
mov
iret
push
in
cmp
jmp
dec
jl
lcall
xor
pop
lods
ret
cmp
nop
or
cltd
push
clc
sbb
insl
jp
jg
dec
xor
jb
lcall
fcompl
push
pop
pop
das
sub
xchg
inc
pop
mov
mov
sub
jp
mov
inc
data16
leave
mov
jge
jge,pn
lret
jns
gs
ja
inc
or
in
aam
or
mov
mov
mov
pop
jmp
mov
xor
add
fists
mov
mov
fldt
mov
dec
arpl
push
xchg
cmc
pop
out
push
mov
fsts
push
cmp
dec
mov
pushw
pushf
mov
pop
inc
test
xor
ret
insb
push
mov
sbbb
mov
ljmp
xchg
daa
in
std
push
pop
js
xor
push
cmp
xor
push
add
jns
out
xor
repz
cmpsb
mov
iret
mov
pushf
daa
aas
into
or
inc
mov
mov
push
cmc
in
xchg
push
and
and
leave
or
dec
pop
loop
mov
mov
aad
test
js
in
xchg
aad
jge
mov
jmp
xchg
sbb
mov
movsl
scas
jle
je
cmp
and
jbe
pusha
inc
pop
sbb
cli
in
mov
xchg
addb
movsl
loopne
enter
in
inc
insl
adc
and
dec
aam
repz
jno
loop
mov
pop
mov
lea
xor
sbb
out
xor
lods
jne
inc
or
outsl
mov
lods
shll
xchg
xor
push
gs
add
ds
push
sub
jle
inc
movsl
jle
aad
xchg
inc
inc
stc
stc
addr16
shlb
jb
js
cmpsl
lea
cmp
xor
adc
stc
lret
mov
jns
scas
test
repz
lods
repz
je
aam
and
xchg
adc
sarb
in
out
sub
add
loopne
ds
mov
fs
push
sub
aaa
add
sub
stc
scas
repz
dec
xor
cmp
and
es
jo
insb
cmp
orl
xchg
imul
mov
es
jo
and
stos
in
or
and
sbb
pop
cmp
xlat
andb
repz
xlat
xor
hlt
pop
dec
repnz
outsb
push
pop
lds
xchg
pop
shlb
nop
fidivl
insb
enter
cwtl
fidivs
pop
and
int3
lds
lret
loopne
insb
adc
call
int
shrl
xor
mov
sbb
push
ret
inc
xchg
or
inc
ds
insb
cld
or
cld
out
pop
pop
push
sbb
jb
pop
lods
sub
into
incl
mov
push
sub
push
and
movl
pushf
jl
cmp
jl
xchg
andl
sub
mov
inc
mov
rcl
mov
in
mov
scas
pop
inc
mov
mov
mov
es
sub
sahf
aaa
xlat
iret
stc
jl
inc
pop
push
pop
sti
add
shlb
ficompl
xchg
movsl
enter
pop
lods
inc
push
jno
pusha
dec
xchg
mov
adc
cmp
jnp
lret
lea
out
test
inc
popf
stc
mov
adc
mov
cld
int3
dec
inc
je
mov
add
adc
dec
test
test
aad
push
push
jae
fs
dec
push
jbe
ja
arpl
inc
mov
fidivrl
cmp
fnstcw
test
cmp
sub
mov
push
pop
leave
out
xchg
sar
aam
aas
sbb
out
pop
or
jmp
pop
movsl
xchg
lahf
jns
jnp
jno
cmpl
movb
test
movsl
movsl
jo
dec
stos
enter
js
jge
mov
dec
into
dec
loopne
mov
icebp
bound
mov
adc
jo
dec
lea
dec
inc
jg
sbb
mov
mov
xor
lock
push
mov
push
adc
in
shrl
orb
fldl
mov
xor
sbb
outsl
loopne
inc
rol
cmpsb
std
pop
lcall
and
mov
sahf
mov
lret
out
stc
mov
mov
mov
push
push
out
mov
je
xor
mov
popa
cld
xchg
xchg
pop
cwtl
inc
push
adc
xchg
jp
jne
sub
fwait
in
insl
int3
xor
sub
adc
inc
pushf
push
mov
test
mov
jmp
add
pop
mov
and
stos
dec
jg
ret
cmpsl
insb
sub
ficomps
adc
xchg
daa
andl
xchg
inc
push
int
add
scas
and
icebp
sub
mov
or
cwtl
and
sbb
push
jp
ficompl
mov
push
aas
mov
int3
xor
notl
add
and
out
movsb
cmp
stos
add
out
test
mov
mov
mov
fistps
outsb
frstor
xchg
mov
fstl
aam
pop
mov
and
pop
jns
pop
or
mov
inc
out
or
cli
mov
xchg
push
rorl
lret
rorb
push
test
sub
mov
mov
loop
and
clc
cwtl
scas
mov
xor
repnz
aad
jecxz
out
xor
ja
dec
mov
loop
mov
inc
push
daa
add
mov
out
daa
cltd
iret
testb
in
dec
mov
sbb
pop
or
pop
push
dec
cmpsl
pop
mov
into
push
daa
out
les
sbb
add
repz
inc
arpl
push
ret
out
inc
jbe
xor
xchg
rcr
mov
test
sbb
xchg
dec
push
loopne
aad
mov
xor
pop
xor
cmp
testl
rclb
mov
iret
xchg
fimull
add
jp
lds
push
dec
leave
popf
scas
out
cltd
push
scas
mul
fdivrp
daa
incl
push
mov
out
sti
popa
pop
mov
loop
jecxz
lds
in
xchg
xor
test
fisttps
or
xchg
rolb
pop
pop
es
push
mov
jae
and
repz
bound
xor
pop
dec
repnz
ljmp
jne
mov
mov
add
jge
sbb
hlt
cmp
hlt
in
jne
in
pop
add
pop
pop
dec
enter
test
xchg
fadds
jp
xchg
jmp
jle
sbb
jb
fstps
mov
xchg
dec
or
test
nop
js
ror
mov
pushf
test
cltd
push
mov
iret
pop
shll
cltd
or
pop
xor
iret
lods
leave
sub
das
adc
sbb
jbe
aaa
dec
mov
das
pop
xor
push
cmpsb
mov
cmp
into
or
ret
nop
jp
mov
adc
xor
jl
dec
and
cmp
sub
pop
dec
adc
lds
shrl
jge
insl
test
sbb
bound
lds
xchg
mov
and
or
pusha
inc
push
mov
xchg
jnp
xchg
fs
clc
hlt
adc
andl
jmp
mov
push
cmp
mov
roll
xchg
xor
mov
in
jnp
pop
mov
lea
xchg
enter
repnz
adc
out
push
mov
dec
mov
mov
mov
ret
mov
pop
hlt
mov
mov
mov
jecxz
int3
dec
xchg
gs
inc
pop
hlt
test
dec
pop
mov
rclb
adc
sbb
jae
pop
mov
dec
loopne
xchg
mov
movsl
cmpsl
imul
les
push
out
jno
jae
jl
fsubrp
xchg
jg
adc
data16
mov
add
pop
xor
add
pop
sub
scas
mov
mov
enter
imul
mov
hlt
cmp
pop
mov
fisubl
and
pop
pop
add
adc
jg
pop
cli
jb
adc
mov
cmp
les
sbb
add
fimuls
inc
adc
inc
std
cmpsl
lds
nop
jno
mov
add
xlat
cmp
popw
push
sub
lahf
add
dec
xor
xor
insl
xor
ja
xchg
mov
js
mov
int
cs
ret
fidivs
ja
jo
sbb
push
mov
jge
push
push
hlt
xchg
ficomps
movsl
adc
out
ds
insl
mov
stos
pop
scas
push
jnp
lock
lock
mov
movsb
cld
aas
cmp
mov
xchg
int
sbb
and
lods
lret
loope
sub
jp
jecxz
cmp
mov
enter
sahf
loop
scas
ja
repnz
jno
jmp
xchg
mov
outsb
test
call
cltd
rcrl
mov
jle
mov
or
cmc
bound
push
lods
outsb
aad
in
out
and
rclb
scas
lock
adc
adc
and
into
inc
in
lcall
loop
cmc
cs
orl
enter
jbe
xor
lea
int
or
sbb
stos
adc
insb
and
pushf
inc
movsb
push
dec
mov
dec
lret
pop
loopne
aas
test
jns
negb
mov
adc
es
std
shrb
xchg
andl
cmpps
cwtl
mov
int3
sahf
or
pusha
sub
mov
xor
cmp
addr16
mov
insl
pushf
mov
movsl
fstpt
pop
jle
adc
js
imul
or
xchg
jbe
push
mov
pop
xor
jb
sahf
mov
sti
sbb
pop
sub
pop
lret
mov
mov
repz
fnstenv
push
bound
add
movsb
pop
je
dec
mov
jnp
into
int3
jo
sarl
jne
gs
cltd
cltd
lock
inc
mov
or
adcb
jecxz
aad
or
bound
out
xchg
cmpsb
inc
sub
aam
into
subl
scas
jnp
lret
mov
xchg
mov
shrb
xor
dec
xchg
cmp
int
popa
into
cmpsb
sub
add
filds
push
cwtl
mov
xor
mov
pop
and
stos
pusha
dec
sti
add
or
push
es
movsb
sub
lock
je
push
push
pop
mov
outsl
sbb
nop
cs
sbb
push
jno
pop
push
std
and
ret
add
arpl
divb
or
mov
fists
or
adc
add
addr16
idivb
sub
nop
cmpsl
pop
js
pusha
sub
adc
jb
cmp
sub
add
cmpsb
xor
lcall
aas
pushf
push
xor
sbb
push
mov
test
movsl
dec
lahf
mov
and
jo
fcoml
xchg
pop
push
stos
and
or
sbb
leave
ljmp
addr16
jno
sub
mov
push
sbb
pop
sub
cmc
loopne
push
dec
pop
fldl
stos
adc
in
subb
lahf
lods
inc
pop
jae
pop
jg
hlt
fwait
sub
mov
aad
in
nop
xlat
or
lcall
inc
popa
pop
dec
jle
or
mov
cmp
push
mov
cmp
nop
jle
mov
mov
push
jns
es
out
xchg
imul
sub
mov
mov
nop
sub
cmp
adc
lods
cli
pop
add
xor
addb
mov
inc
in
pusha
xor
movsb
fidivrl
sub
jg
sbbb
and
xlat
int
xchg
scas
push
jno
loopne
mov
rcrl
psraw
or
int
cmp
dec
xor
lret
ds
xchg
sub
xor
ss
mov
mov
lahf
icebp
dec
outsl
fimuls
stc
dec
sbb
adc
pop
fmuls
sbb
or
ret
pop
sti
sub
jno
int3
dec
aad
lods
push
pop
jae
cltd
push
jno
or
arpl
popf
and
leave
or
scas
dec
xchg
nop
mov
mov
fildl
xchg
in
push
adc
xor
sub
jno
pop
fbld
inc
ret
mov
mov
add
jle
iret
sbb
jecxz
and
aad
shl
and
pushf
xchg
cmpsl
sbb
push
lahf
movsb
add
pop
inc
lods
pusha
xchg
xchg
lods
or
mov
enter
or
push
mov
xchg
call
lods
mov
xchg
xor
popf
in
mov
jle
xchg
stc
fwait
xor
dec
das
jo,pn
inc
aam
lret
cli
or
xchg
lahf
cmp
cmp
test
int3
cmp
shl
or
sub
xchg
mov
pop
pop
lahf
cmc
dec
je
pop
cltd
xor
test
sbb
inc
pop
mov
mov
inc
movsl
push
outsb
aaa
mov
and
adc
sbb
ds
dec
dec
daa
popf
mov
mov
lcall
movsl
pushf
jns
and
in
aaa
mov
cmp
mov
fstp
inc
fwait
sbb
dec
ljmp
leave
jge
and
xchg
add
into
xchg
iret
sub
cmpsl
inc
inc
dec
sbb
jl
bound
mov
sahf
mov
sub
xor
push
sub
lcall
rcrb
jns
dec
pop
cmc
jb
or
sahf
or
pop
aaa
sbb
sahf
add
or
enter
out
jb
movsb
dec
adc
movsb
out
gs
scas
shl
hlt
or
xlat
notl
mov
xchg
mov
pusha
xorb
subl
or
test
fsubrl
mov
stc
pop
test
repnz
adc
sbb
sar
xor
mov
stc
mov
in
fstpt
push
fprem
enter
mov
mov
and
mov
jns
sbb
and
out
and
jg
mov
bound
push
adc
jns
js
jge
dec
ljmp
sbb
popfw
in
xor
mov
nop
outsb
out
mov
sub
cmpsb
xchg
stc
test
xor
std
mov
mov
jg
add
insb
les
adcb
out
xchg
fs
xlat
lods
pop
pop
mov
xor
dec
push
test
cmp
adc
mov
jne
push
pushf
lcall
lds
sbb
test
sbb
xchg
leave
inc
mov
aad
ror
lret
or
jno
dec
out
adc
mov
test
rclb
jnp
fcmovne
lret
notl
sbb
clc
in
ss
test
adc
rcll
popw
xchg
fiaddl
pop
jns
fnstcw
mov
adc
mov
test
xor
rcr
sub
data16
fistpl
pop
pop
in
push
stc
inc
shl
mov
out
inc
stc
lea
jge
jmp
push
pop
or
popf
cwtl
das
xchg
test
sbb
std
cmp
add
enter
int3
fistps
jbe
and
cmp
lahf
popa
repnz
ret
cmpsb
adc
dec
pushf
lods
or
xchg
pop
mov
stos
cmp
xor
sub
popa
inc
stos
inc
dec
cmpl
xchg
notl
jecxz
shlb
pop
adc
int
popf
call
aas
jmp
in
cmp
call
idiv
push
mov
mov
repz
gs
jecxz
rcrl
or
idivl
push
sahf
jp
jns
push
shl
xor
in
mov
ret
mov
mov
je
cmp
or
ljmp
jmp
mov
fs
lcall
and
ss
jb
aas
xlat
lock
mov
add
call
js
dec
psllq
add
inc
lea
mov
sahf
aad
mov
jmp
lea
xchg
mov
dec
ds
sbb
cwtl
and
loop
sbb
ja
andl
out
ret
cltd
mov
cmp
sbb
out
add
adcb
mov
mov
mov
and
pop
cltd
mov
xlat
aaa
add
push
cmpsb
push
lea
lds
or
stc
fld
lret
inc
repnz
les
test
mov
xchg
das
pushf
xchg
mov
cmp
aad
inc
push
xchg
mov
sub
arpl
je
das
push
dec
sbb
dec
adc
inc
xchg
and
pop
sub
mov
pop
or
rol
out
inc
das
and
fsubl
mov
lret
xchg
push
mov
sbb
xchg
pop
and
test
or
clc
rcll
inc
mov
xchg
gs
pushl
dec
adc
fisubrl
pop
sti
dec
std
sbb
es
sbb
jg
stos
add
push
xchg
sub
dec
cs
iret
jno
dec
fistl
subl
fnstsw
lock
sete
and
jl
xchg
shll
fcompl
cmp
int3
cmp
xchg
inc
out
into
mov
test
js
in
shll
lcall
rol
jb
mov
loop
cmp
fistps
pop
dec
lds
xchg
push
push
mov
enter
jnp
pop
sarl
dec
mov
pop
push
lods
push
cmp
out
xchg
push
dec
popf
out
imul
cs
cld
mov
scas
int
icebp
push
loop
jecxz
inc
fldt
cld
push
lods
out
xor
mov
iret
out
iret
clc
mov
std
in
mov
inc
cmp
push
inc
mov
iret
data16
sub
in
xchg
sbb
inc
xchg
mov
add
insl
lret
cmp
gs
stos
sub
jecxz
push
pop
ficoml
dec
sbb
dec
push
insl
daa
aam
jle
aam
jne
and
das
lods
jmp
jnp
shlb
sub
xchg
jb
jp
jl
jne
add
pop
ljmp
mov
cmp
mov
pop
push
inc
and
dec
add
fstl
jg
popf
xchg
test
lds
push
imul
loop
imul
pop
int3
rorl
out
idivl
push
and
sub
add
fnstsw
or
jo
xchg
rcrl
cmp
mov
call
fldenv
sbb
pop
pusha
jno
arpl
jp
cmpsl
insl
insl
mov
pop
test
dec
fdivp
gs
jecxz
in
insb
out
leave
cmp
push
and
je
out
test
jge
shll
loop
mov
mov
int
xor
mov
outsb
outsb
mov
ljmp
jb
mov
jb
loopne
aas
inc
xchg
add
mov
test
lret
addr16
add
xchg
inc
jg
xor
sub
cmc
frstor
dec
sub
jecxz
pop
push
push
jl
out
scas
mov
test
movsl
mov
sbb
fpatan
or
or
pop
xchg
movsl
clc
dec
aad
mov
lcall
dec
xor
faddl
jmp
push
sub
frstor
divb
mov
jae
sub
cli
xchg
xchg
shll
xlat
dec
jl
outsb
push
xor
fwait
jo
not
jns,pn
mov
int3
cs
push
lods
mov
mov
ss
jecxz
lods
lods
jl
sti
out
dec
stos
addr16
jge
int3
bound
cmp
sub
int3
mov
testl
les
repnz
mov
mov
cli
mov
cmp
mov
mull
insb
pop
add
cmpsb
jns
pusha
scas
mov
ficoms
pushf
xchg
adc
lret
add
cmp
xor
sarl
mov
mov
lea
jno
sub
mov
dec
mov
fbstp
jl
sub
dec
and
stos
xor
lods
into
call
loop
or
fdivl
popf
or
add
add
mov
add
xlat
je
clc
sub
pop
repnz
jle
rcrl
imul
js
pop
fstpl
adc
in
mov
insw
lret
lahf
cmp
fcompp
inc
dec
in
adc
and
pop
push
in
mov
and
hlt
call
push
int3
add
sub
out
or
inc
sub
push
push
xchg
cmp
out
inc
movsb
mov
test
push
xchg
clc
mov
push
ficomps
mov
or
das
aam
rcrl
sar
jge
nop
sub
mov
std
cli
iret
rcrl
or
lods
xchg
insl
aaa
xchg
in
out
pop
jbe
pop
fnsave
adc
cld
in
and
in
cli
fcomi
cld
mov
in
popf
rcr
xchg
push
in
xchg
and
adc
sahf
es
mov
mov
stc
fimuls
dec
int3
pop
lods
jbe
dec
jo
fstpt
adc
test
nop
mov
jge
jle
popf
fcos
lods
adc
mov
jb
push
mov
int
addr16
xor
cmp
in
sbb
movsb
movsl
lret
pop
xchg
out
sbb
stc
in
sbb
mov
test
sub
and
stos
pop
xor
scas
pop
imul
outsl
lods
mov
add
pop
xchg
lds
xor
mov
push
loopne
sbb
test
or
ljmp
stos
icebp
fstl
sbbb
xchg
sti
cmp
dec
add
mov
add
fs
cmp
rcll
test
jp
addr16
and
int
xchg
cmp
adc
ficomps
xor
lods
negl
pop
fisttpl
jle
nop
lahf
stc
or
or
cmp
fimull
icebp
cmc
fmuls
mov
sbb
leave
mov
leave
mov
stc
xor
loope
inc
test
push
lahf
inc
arpl
in
pop
nop
std
movsb
or
cld
or
loope
pop
fimuls
mov
xchg
imul
sub
jno
sarl
hlt
xchg
shlb
cmpsb
mov
cmp
push
int3
lahf
insb
ret
outsl
mov
push
sbb
mov
mull
pop
jp
dec
fildll
mov
xor
loope
dec
imul
push
inc
sbb
mov
jle
xchg
sti
fs
cmp
mov
arpl
into
cltd
mov
cmp
movsb
xchg
fildl
stos
xor
je
or
and
ret
test
std
mov
jmp
lds
sub
jo
xchg
pop
sbb
jge
adc
fbld
mov
or
fsubrl
in
dec
in
push
adc
int3
pop
and
push
movsb
dec
and
xor
push
xchg
pop
add
lcall
jge
cld
in
sub
nop
aaa
lock
lea
jg
adc
and
jno
push
and
pop
jp
push
lahf
xchg
adc
daa
add
sub
not
dec
rclb
fadds
cmp
push
mov
mov
mov
sbb
push
fildl
mov
pop
xchg
dec
inc
mov
jno
jecxz
adcb
inc
dec
mov
les
mov
into
fisubrs
fildl
call
dec
jmp
sub
inc
inc
hlt
xor
cltd
mov
inc
lahf
inc
loop
inc
lock
xor
mov
cmp
xchg
imul
sub
add
cltd
fildl
fnstcw
mov
dec
pop
dec
fs
je
ret
sbb
mov
in
and
rclb
cs
jl
shrl
pop
rcl
fdivrp
push
addr16
in
fdivrs
mov
mov
mov
insl
xchg
fwait
xchg
adc
lods
lcall
adc
gs
fidivrl
ss
outsl
testb
pop
aad
jnp
aad
push
push
aad
xor
addps
ja
mov
rcrb
inc
mov
jne
mov
shlb
mov
test
mov
xor
stos
int3
adcl
fcomps
bound
arpl
mov
mov
js
mov
and
addr16
dec
cli
sub
cmpsl
mov
mov
cmpsl
cmp
or
mov
cltd
mulb
pop
imul
mov
int3
cmp
or
adcl
adc
sbb
addr16
mov
dec
test
xchg
daa
and
mov
mov
pop
hlt
jne
mov
hlt
mov
ret
fwait
push
les
test
jo
ret
fistl
and
xchg
fsubrs
xorl
push
lahf
add
inc
shrb
xchg
sarb
cmp
jnp
or
icebp
movsl
pop
sbb
xchg
mov
in
mov
mov
mov
aad
das
in
push
les
cmc
scas
xor
stos
les
inc
inc
sti
sbb
jmp
or
pushf
aad
icebp
aaa
repz
mov
das
cs
aas
sti
xchg
jb
stos
in
pop
push
sbb
xchg
jg
popf
mov
xchg
testb
out
call
mov
xor
les
fucomi
push
xor
insb
cmpb
sub
daa
push
adc
aaa
xor
xor
sbb
repnz
xor
inc
or
cmp
push
pushf
xchg
cli
icebp
mov
push
dec
pop
arpl
inc
movsb
imul
cmp
ss
lea
int3
sbb
pop
lcall
imul
jbe
call
or
jmp
pop
jmp
incb
imul
lahf
mov
popa
incb
dec
pop
dec
arpl
adcb
aas
jns
pop
and
add
pushf
ja
inc
daa
sub
or
xor
mov
or
imul
sbb
add
jecxz
xor
dec
add
mov
inc
pop
jp
jo
jb
iret
mov
test
std
xchg
cmpsb
push
xlat
nop
int3
pop
pop
mov
lret
add
test
mov
stos
scas
jno
fcomp
and
fnstcw
add
xor
pop
push
in
loope
and
loopne
jb
xchg
stc
roll
cmp
mov
scas
mov
imul
aaa
mov
insb
daa
popa
xor
mov
js
pushf
popa
les
xchg
pop
loopne
repz
addb
mov
cmpsb
jp
fisubs
into
loop
jns
int3
jmp
xchg
jl
dec
movb
aam
in
jecxz
xor
sar
mov
push
mov
bnd
dec
mov
sub
or
aad
es
or
rcrb
sarb
mov
fyl2xp1
mov
hlt
idivl
cmpsl
dec
into
mov
shrb
rcrl
mov
scas
lret
mov
mov
sub
fldl
dec
movsl
push
add
jnp
mov
push
xchg
adc
mov
adc
pop
ret
jno
popa
sub
shl
or
dec
cmp
out
pop
xlat
cmp
sbb
xchg
ss
sbb
nop
mov
cmp
sub
inc
imull
imul
mov
mov
pop
test
or
sub
nop
inc
mov
movsl
or
jmp
idivb
stos
jnp
mov
xadd
cwtl
test
pop
idivb
sub
andb
pop
lret
sub
inc
das
dec
push
pop
mov
cltd
fs
out
in
arpl
aam
scas
mov
push
xor
mov
pop
stos
dec
sti
mov
lcall
in
les
into
mov
xchg
inc
fildll
push
movsb
pop
inc
mov
inc
insb
sub
inc
aam
daa
jae
inc
xlat
movsl
mov
repz
mov
sub
cmp
inc
cltd
adc
xchg
and
fwait
adc
outsb
add
imul
mov
push
shl
pop
mov
out
xchg
or
mov
ljmp
scas
sahf
pusha
cli
xor
dec
inc
stc
pushl
jl
fmul
or
lea
or
mov
fsqrt
and
popf
xor
nop
add
sarb
push
jbe
pop
repz
sbb
testb
and
inc
add
dec
mov
int
stos
shlb
cmc
or
out
mov
or
adc
xlat
cmp
jecxz
pop
imul
jne
divb
rcll
enter
and
jge
mov
mov
fstl
pop
pusha
lret
popf
addr16
je
pop
jg
andb
and
sbb
loop
mov
jo
or
mov
sbb
cmpsl
dec
fwait
in
xor
test
shl
and
push
inc
jns
sbb
fs
out
jge
mov
loope
inc
enter
int
inc
jae
push
cmp
repnz
call
pop
data16
ret
int3
xchg
mov
push
push
jle
adc
sarl
lods
pop
push
leave
mov
shrl
repnz
mov
mov
or
cmc
mov
ss
repnz
mov
scas
fmull
cmp
xchg
add
jmp
in
adc
jne
les
lea
mov
xor
lock
xchg
and
fimuls
pop
idivl
out
adc
xlat
ds
mov
mov
and
repnz
popa
hlt
ret
xchg
xchg
sti
push
mov
ss
insb
xchg
shrl
out
loope
in
adc
mov
in
jge
mov
inc
mov
pushf
dec
cld
mov
mov
mov
orb
in
push
cmp
ret
and
jmp
lret
or
xlat
inc
leave
push
call
cmp
xchg
mov
xor
pop
mov
hlt
repnz
jmp
push
mov
pop
inc
pand
adc
incb
call
test
mov
in
mov
adc
xchg
ds
ror
mov
xchg
push
paddsb
int
and
or
add
mov
sub
cltd
lret
je
mov
dec
cmpsl
outsl
lds
sbb
xchg
scas
mov
cmp
push
cs
aaa
mov
sti
fsubrl
stc
sbb
loop
jg
cmp
lret
les
xchg
jns
dec
add
dec
cmp
mov
sbb
cmpsl
mov
cmp
xlat
and
add
out
negl
fwait
lret
jle
jmp
and
pop
imul
adc
adc
test
or
gs
xchg
in
movsb
inc
cmp
push
jnp
inc
pop
aaa
sahf
or
xor
call
push
cltd
add
mov
and
popa
dec
test
sbbb
ficoms
jo
pop
xor
fcoml
cltd
lret
xor
call
or
sbb
sbb
lods
js
pop
test
pop
lret
lcall
jmp
loopne
mov
mov
pop
jo
out
jge
ffreep
xor
addr16
push
sub
mov
test
testb
scas
dec
loope
inc
dec
mull
faddp
pop
sbb
sub
into
test
nop
jl
mov
mov
ljmp
push
out
xor
adc
and
fstl
addb
scas
push
push
push
mov
aas
adc
mov
sarb
mov
and
insl
std
jae
nop
mov
test
lret
pop
xchg
mov
lock
cld
gs
mov
divb
and
mov
imul
lcall
add
outsl
sahf
inc
aad
mov
sbb
jmp
arpl
xor
fsubr
adc
sub
mov
mov
data16
cmp
popa
mov
ret
adc
cmp
rcll
mov
pop
lods
cmp
pusha
push
mov
pop
test
push
movsl
pop
sbb
clc
sub
out
into
sub
addr16
dec
loop
xchg
mov
out
sbbb
cmpsb
jmp
mov
jg
call
jnp
mov
andb
das
cmpsl
push
scas
xchg
fdivr
stc
int3
mov
add
rorl
ror
add
sarb
lock
test
cmp
cmpsl
pop
cmp
lret
in
mov
out
mov
aad
fs
cmpsl
xlat
jo
dec
push
mov
popa
dec
scas
dec
adc
jbe
adcb
mov
icebp
cmpsb
pop
or
shl
nop
pop
push
lcall
pop
imul
jnp
dec
out
xor
out
sub
lcall
jnp
fimull
adc
shlb
xchg
clc
pop
cmp
scas
xchg
mov
lods
xchg
xlat
lcall
pop
lret
into
inc
mov
les
dec
add
out
test
mov
xor
loope
inc
add
adc
mov
imul
adc
pop
mov
jb
and
addr16
fstpt
mov
dec
push
test
punpcklbw
cld
sbb
sub
js
xchg
enter
dec
pop
sbb
negb
add
mov
jbe
aas
sbb
and
mov
xchg
adc
mov
imul
int3
enter
add
push
mov
aas
ret
or
out
leave
addr16
fnstenv
add
repz
addl
call
add
pop
roll
std
inc
push
gs
and
loope
push
pop
mov
not
out
push
mov
mov
into
clc
lods
push
push
fidivl
int3
xchg
jle
and
jno
mov
rcrl
daa
call
out
gs
popf
fmull
ss
je
inc
mov
dec
cli
sub
xchg
xchg
mov
jg
sub
outsl
repz
sbb
jle
outsb
movb
out
add
pop
popf
sbb
mov
arpl
push
cs
orl
lcall
mov
xlat
into
in
xchg
repnz
frstor
mov
dec
push
cltd
xor
andl
insl
xchg
cmp
push
repnz
test
cmp
into
in
pop
das
aas
cmp
push
pop
rcll
push
jle
or
rcl
lods
mov
cmpsl
or
mov
jecxz
mov
scas
jo
es
repz
insb
shlb
mov
dec
ja
pop
popf
sbb
sub
fsubrs
push
rcrl
dec
jle
push
dec
jp
repz
test
divl
mov
repnz
shlb
fsubs
cmpsb
push
dec
xor
int
add
ljmp
out
dec
outsl
push
insl
mov
xchg
scas
xor
lds
bound
push
addr16
inc
cmpl
je
inc
nop
adc
xchg
and
je
cmp
inc
adc
sub
inc
dec
mov
mov
shlb
mov
fldl2e
lods
push
adc
fstpt
imul
jae
mov
int3
fisttpll
push
clc
ss
or
pop
and
pushf
aad
or
aam
mov
fwait
in
cmp
dec
outsl
enter
jmp
fdivs
jmp
ret
sbb
notb
mov
loop
sbb
mov
js
aaa
push
popa
fistpll
mov
push
sti
rorl
out
inc
in
iret
pop
mov
mov
cs
adc
mov
mov
in
push
dec
jl
or
jp
adc
xchg
inc
xor
add
loop
icebp
fimull
and
gs
movsb
inc
or
push
test
cmp
repnz
sbb
push
mov
clc
sti
sarl
dec
in
bound
idivl
aam
in
sub
orl
push
xchg
lods
outsl
xorl
cwtl
lods
stc
addr16
adc
sbb
testl
pop
es
xchg
test
aas
es
xchg
stos
ja
add
imul
sub
call
inc
lods
aad
aad
ja
mov
jp
subb
sbb
push
xchg
int
ret
push
pop
xchg
adc
xor
xchg
sbbb
jno
sub
push
mov
and
fists
jo,pn
mov
or
test
dec
fnsave
mov
lahf
or
movsb
aaa
mov
add
repz
dec
js
xor
mov
int3
inc
movsl
adc
loope
xchg
jg
sub
call
iret
cmp
lea
adc
xor
jl
and
in
lret
jmp
shr
sub
sbb
movsb
sbb
fisubrs
test
cmp
xchg
test
push
ljmp
cmpsl
loop
sub
xchg
pop
into
pop
mov
leave
in
dec
out
dec
push
inc
out
dec
adc
dec
aaa
cmp
cltd
jae
xor
push
rcrb
je
xor
xchg
sarb
fdivs
out
test
jle
clc
adc
nop
hlt
inc
inc
jnp
jns
int
jnp
mov
push
subb
pop
dec
cwtl
pop
vmovaps
dec
cmp
xor
lods
xchg
adc
imul
sub
cmp
cmp
std
rclb
clc
shlb
jne
shr
outsb
mov
push
js
lret
xor
push
rcll
mov
sbb
push
loop
fnsave
into
aas
je
mov
add
das
dec
cmpsb
push
je
adc
popa
out
cmp
jmp
fstpt
or
jl
jp
int3
adc
pop
mov
inc
popa
pushf
mov
ret
popa
out
sbb
push
lods
fucomip
xor
and
and
dec
int
jg
cs
fistps
cmova
lds
repz
fldt
pop
push
hlt
lock
ret
clc
pop
push
movsb
mov
movsl
daa
mov
cld
inc
iret
je
pop
aaa
mov
mov
cmc
loop
out
sub
push
mov
mov
xchg
jno
add
xchg
ret
gs
call
clc
jo
inc
adc
xlat
in
std
loope
popa
test
jecxz
dec
xlat
add
lds
clc
popa
ror
ret
push
addl
push
mov
mov
adc
dec
push
test
out
sub
xor
sar
dec
jecxz
dec
ret
pop
rol
inc
adc
sbb
pop
test
dec
sbb
inc
nop
inc
dec
xchg
xchg
mov
xor
mov
or
mov
pushf
mov
es
inc
pop
fbld
lods
fs
xchg
leave
mov
xchg
and
xchg
dec
outsb
mov
jmp
sarl
jns
out
cmp
xchg
xchg
jb
int
shl
mov
xlat
into
pop
jg
je
cmp
mov
leave
jecxz
insl
sub
ja
out
adc
pop
lods
xchg
int
add
and
add
push
lcall
cmpl
mov
mov
jecxz
add
mov
hlt
ljmp
mov
stos
jno
aaa
loop
fldt
int3
inc
in
jns
test
push
sub
aad
push
mov
fs
in
jle
cmp
adc
movsl
sub
int
inc
popa
xchg
cmp
orl
and
dec
inc
cmpsl
cmp
mull
mov
xchg
enter
sub
push
sbbb
inc
ret
sub
xchg
arpl
xor
mov
in
lods
iret
pop
mov
xchg
cwtl
int
cmp
lret
test
nop
mov
ret
cmp
push
add
pusha
or
push
dec
mov
xchg
stos
sbb
and
popl
sub
cmp
mov
jne
daa
cli
insb
int3
shl
ljmp
adc
mov
test
out
mov
ja
and
sub
mov
icebp
cltd
jns
adc
mov
mov
rol
fimuls
bound
push
rcrl
arpl
mov
leave
mov
xor
addl
xchg
pop
mov
faddl
pop
inc
scas
pop
nop
daa
gs
data16
pop
rcll
lea
inc
cmp
xlat
mov
cmpsl
cmc
jle
mov
lock
in
test
inc
subb
and
rsm
loope
scas
rcll
add
pushf
mov
push
dec
push
lcall
mov
leave
movsl
fcmove
xchg
push
and
sub
les
mov
sub
pop
arpl
ss
out
fisubrl
ss
mov
xor
aam
dec
test
mov
xorb
imul
and
cmp
jo
sbb
outsl
mov
cmp
loope
push
mov
and
fbstp
ss
add
mov
out
daa
push
push
cltd
sti
mov
mov
call
das
sub
iret
jmp
adc
rolb
adc
push
cvtpi2ps
dec
sub
es
loope
insl
inc
iret
popf
test
pop
or
je
or
add
push
adc
push
or
les
xor
mov
or
fildll
rclb
cmp
ficoml
inc
clc
xchg
std
test
push
adc
jns
repnz
imul
lret
push
lods
rorb
clc
and
push
jge
movsl
iret
xor
mov
dec
adc
sbb
cs
inc
xchg
push
mov
jno
xchg
fiadds
sbb
popa
imul
das
lea
push
push
ja
sahf
pop
je
pop
xchg
inc
cmp
icebp
and
cmp
inc
adc
dec
stc
or
add
inc
xchg
mov
jno
sti
mov
ljmp
cmp
nop
or
pop
mov
sbb
xor
daa
xchg
lcall
mov
or
and
mov
mov
in
pusha
xchg
loop
dec
std
push
int3
jge
stos
sarl
push
sbb
pushf
es
movsl
adc
dec
les
push
jo
sub
mov
add
popa
inc
cmpb
dec
sub
sarl
mov
out
jo
lock
ss
dec
jb
mov
xchg
xorl
les
cmpsb
mov
leave
xchg
mov
sub
mov
pop
dec
cld
mov
out
and
push
popf
sub
pop
scas
dec
gs
lret
mov
sbb
cmpb
cmc
ljmp
sub
xchg
cmovae
mov
jnp
mov
inc
js
xor
mov
cmp
xchg
pop
out
imull
mov
mov
je
sub
mov
lds
adc
push
sti
inc
sbb
mov
daa
les
push
push
rolb
push
addr16
adc
scas
jmp
mov
scas
insl
adc
jae
jl
fcmovne
imul
push
clc
jmp
sub
out
inc
iret
sub
jnp
test
mov
jae
dec
mov
in
xor
mov
fidivl
xchg
loopne
in
cmp
leave
daa
mov
pop
repz
pop
lahf
push
dec
xor
imul
jp
sbb
lock
gs
sbb
loopne
outsb
mov
rol
lock
addr16
bound
daa
mov
or
bound
push
pop
push
fsubrp
dec
imul
dec
jge
add
leave
cmp
xchg
xor
jo
adc
es
ljmp
enter
pushl
jp
movsb
sub
xchg
push
popf
fldenv
mov
movl
dec
repnz
or
add
insl
mov
jbe
inc
jecxz
mov
jo
or
inc
movsb
ret
ljmp
insl
imul
test
faddl
jg
popa
adc
mov
pop
push
push
push
cmp
mov
mov
cld
jle
fdivs
adc
adc
mov
push
push
jnp
jg
je
dec
sbb
imul
int
cmp
inc
push
inc
adc
imul
ja
sbb
dec
fnstcw
addr16
test
cmp
cmpsl
out
iret
insb
sub
inc
stos
mov
je
repnz
add
jg
cmp
mov
rcrb
sbb
fstp
push
push
leave
sbb
mov
icebp
add
mov
notl
les
and
std
outsl
loop
push
xor
jl
mov
xchg
adc
add
push
pushf
mov
cmp
jg
adc
in
sbb
sub
fcomip
inc
shrb
das
and
sub
sahf
notb
jno
test
dec
mov
stos
mov
sub
pusha
test
adc
jmp
and
rcrl
add
lods
imul
mov
and
pop
das
mov
xchg
decb
xor
and
rep
pop
int3
xchg
sti
mov
jns
das
js
xchg
movsl
and
popf
aaa
mov
ret
dec
mov
mov
and
sub
and
jno
aad
mov
mov
fcomip
xchg
sub
and
xchg
dec
dec
mov
insl
outsb
sbb
xchg
arpl
xchg
gs
lds
add
addr16
pusha
jnp
mov
clc
mov
mov
inc
icebp
jmp
insl
movsb
mov
jmp
push
int
movsb
std
jl
fwait
jo
push
xchg
push
dec
ret
xchg
jns
mov
ret
jb
clc
insb
out
xchg
mov
mov
stos
mov
ds
stos
dec
fwait
movsl
imulb
add
das
mov
push
mov
scas
pop
popa
push
lods
pop
dec
jo
jae
inc
mov
scas
pop
pop
mov
push
dec
jno
mov
pop
adc
sub
inc
xchg
xchg
push
mov
mov
mov
cmp
shl
loopne
fildll
faddl
inc
jp
inc
imul
pusha
scas
testb
mov
cmp
ret
in
sub
xlat
idivb
jecxz
aaa
bound
mov
adc
mov
mov
cmp
xor
xchg
xor
out
sub
xor
iret
cmpsb
cmp
test
mov
es
imul
push
mov
out
ret
shlb
lret
mov
repnz
dec
xchg
pop
inc
ja
insl
xchg
sub
mov
mov
rcll
push
outsl
out
shr
movb
mov
mov
sbb
and
or
imul
int3
aaa
inc
pop
sub
push
sti
int
jmp
push
pushf
mov
popa
leave
test
ss
loope
cmp
and
cltd
lock
dec
pop
push
les
mov
push
or
aam
test
shl
cmp
sbb
cmp
out
lcall
mov
jl
imul
test
jnp
mov
xlat
sub
test
idivl
push
pop
testb
cltd
mov
or
mov
inc
into
cltd
jno
lea
inc
std
jns
add
mov
cwtl
rcll
push
and
mov
gs
jne
xchg
mov
je
iret
cmp
mov
pop
sbb
aam
cltd
fsubs
fldenv
xchg
rcrl
ljmp
sub
stc
aas
mov
scas
jg
dec
scas
jb
gs
ljmp
rcrl
loopne
push
xchg
add
inc
push
mov
loop
je
idiv
dec
pop
scas
mov
scas
xor
adc
test
aad
or
pop
dec
test
jno
test
loope
lods
popa
lods
push
jg,pt
pop
cwtl
cmp
push
fidivrs
inc
jp
scas
xor
sub
dec
jno
mov
adc
out
xor
rcr
lds
outsl
jno
sbb
sbb
pop
sbb
push
sub
push
xchg
mov
xchg
sub
pop
add
aaa
push
cmpsb
loopne
fdiv
jmp
cmp
sub
repnz
mov
cli
scas
sbb
jl
pop
hlt
mov
mov
into
jae
popf
jl
in
shrl
add
insl
outsb
fwait
mov
dec
push
cmp
xorl
mov
insl
shl
jno
cmp
enter
mov
push
pop
inc
mov
rclb
jns
inc
adc
sahf
scas
lds
in
scas
cmp
mov
aad
cwtl
enter
lahf
cmpsb
int
dec
inc
bound
xor
or
mov
outsl
je
mov
sbb
xchg
mov
loopne
xchg
sbb
sub
mov
push
ret
lahf
sub
mov
push
lods
pop
leave
inc
lcall
stos
fdivs
inc
jae
jle
jge
fwait
enter
sahf
fcmovu
push
test
test
loopne
mov
mov
inc
add
or
push
cmp
adc
xchg
or
out
xor
lock
mov
shl
bswap
insl
ret
sub
negb
jno
leave
xchg
or
cld
add
popf
lret
ret
cmc
in
sub
ds
mov
push
sbbl
divb
popf
cmp
push
out
ds
iret
fisubl
loop
std
push
rcrl
test
lds
in
jae
sti
scas
cwtl
adc
les
and
cli
cmpsl
repnz
adc
mov
push
mov
push
test
loope
fstpt
and
out
cld
xchg
loopne
and
and
cmp
dec
xchg
xorl
push
xchg
mov
ljmp
push
mov
or
or
mov
pop
xchg
mov
add
adc
arpl
fisttps
inc
cmp
xchg
test
dec
in
xor
cli
data16
jle
aam
in
push
fidivl
in
inc
add
cmp
mov
pushf
mov
pusha
mov
xchg
mov
aas
sbb
xlat
push
and
test
mov
fwait
cmpsl
sbb
fidivrs
aas
imul
cmpsb
dec
data16
ror
fnsave
repnz
lahf
xor
xchg
lcall
inc
cmp
in
das
adc
pushl
enter
add
dec
xor
xchg
add
sti
lock
leave
dec
or
or
outsl
xor
push
aad
je
out
push
jmp
outsl
jl
sbb
mov
push
mov
das
sbb
rcrl
cmp
in
jb
pop
xlat
pop
inc
popf
int3
jmp
or
push
push
adc
fistpl
push
iret
adc
fdivrs
js
mov
mov
push
mov
cmp
adc
lods
cmp
out
das
repz
push
cli
inc
mov
pop
imul
scas
and
in
sbb
jo
les
mov
lcall
jl
arpl
fwait
dec
das
push
fwait
add
movsl
cli
sub
xor
add
orb
adc
idivb
stos
adc
push
pop
std
in
mov
inc
push
stos
jp
jae
xchg
push
imul
pop
cmc
in
fstl
movsb
mov
adc
fists
cmp
les
outsb
stos
mov
pop
pop
test
clc
cmp
or
inc
jmp
sti
pop
and
pop
mov
fwait
add
sub
sbb
add
movd
sti
adc
hlt
xchg
lahf
stos
jle
daa
fisttps
in
lcall
jle
dec
in
pop
mov
lock
call
idivb
push
sbb
pop
jbe
into
adc
cmc
push
sbb
mov
scas
push
fdivp
adcb
adc
and
xchg
push
sbb
test
cld
leave
xchg
jb
cwtl
dec
dec
scas
out
fs
inc
out
pop
mov
jns
mov
jns
jne
cmc
push
cmpsb
xor
mov
rorb
std
cmp
loope
loope
int3
fisttps
adc
inc
cli
sub
aam
inc
sbb
enter
in
pop
or
ljmp
xchg
rol
test
add
out
scas
mov
sbb
stos
lcall
jo
or
fs
adc
xchg
jle
add
rorl
jb
stc
xchg
mov
or
mov
call
mov
xor
rcl
loop
add
pushf
mov
sub
sub
sbb
imul
jp
test
fwait
lahf
sbb
lcall
int3
mov
cmp
xchg
xchg
inc
pop
jns
sbb
add
notb
divl
out
mov
cmp
xchg
inc
stos
mov
stos
xlat
lods
loope
imul
mov
jmp
mov
filds
in
or
sub
fmull
arpl
mov
jo
mov
mov
out
push
mov
cmp
dec
cs
adcb
mov
pop
sti
stc
fidivrs
fnstcw
imul
mov
dec
dec
pop
cli
push
stos
adc
xchg
pop
out
clc
or
lcall
push
or
hlt
popa
or
mov
push
jl
fistpl
setae
jne
pop
stos
lret
lods
imul
pop
dec
imul
dec
pop
xor
pusha
daa
mov
andb
sbb
mov
lds
imul
clc
out
pop
add
nop
xchg
bswap
mov
xchg
jo
and
add
adc
pusha
pusha
iret
mov
pusha
pop
add
push
push
mov
jge
arpl
xchg
orl
xchg
mov
pushf
shll
mov
xor
xor
call
jo
scas
in
or
in
std
xor
inc
xchg
dec
xchg
push
lods
dec
xchg
shlb
jbe
scas
xor
jp
aaa
in
std
adc
pop
scas
stos
inc
cmp
jbe
loop
outsl
mov
arpl
pop
mov
sbb
add
mov
mov
xor
mov
inc
and
push
addl
xchg
pop
dec
out
inc
negl
mov
sbb
xchg
repnz
inc
es
repnz
lea
lret
and
mov
dec
lea
lods
pop
xsavec
fisubl
or
cld
mov
push
or
inc
test
dec
ret
mov
rcrl
pop
inc
bound
sbb
iret
dec
icebp
adc
xchg
cwtl
sub
scas
dec
cmp
je
inc
loope
arpl
sbb
stos
cmpsb
fs
mov
or
je
pop
push
xchg
leave
ljmp
cs
inc
mov
inc
ja
jp
inc
jae
mov
lret
inc
jle
mov
push
shrl
hlt
incb
sbb
xchg
xchg
int3
mov
jnp
or
call
test
subl
imul
imul
clc
inc
ficoml
mov
xor
sti
pop
pop
lret
xor
xchg
push
and
adc
add
addl
sub
xchg
loope
in
adc
adc
xchg
inc
xor
shlb
enter
xor
dec
sti
mov
lock
inc
pop
pop
mov
push
cltd
out
push
into
push
jmp
inc
int3
outsl
into
in
sub
pop
dec
jmp
xor
pop
push
fwait
imul
adc
scas
mov
push
and
cld
fildll
jg
push
loope
outsl
test
adc
push
scas
into
mov
pop
movsb
das
pop
mov
cs
aaa
mov
dec
xor
add
pusha
int3
jge
and
icebp
dec
ds
add
cmp
popl
pop
fstps
hlt
inc
out
adc
iret
mov
dec
ret
sti
cmpsb
jo
add
dec
pop
push
sbb
rep
dec
scas
cmp
popf
adc
mov
popf
loopne
daa
cmp
clc
cmp
adc
orb
sbb
jge
daa
sbb
in
aas
sbb
inc
sbb
jbe
xchg
jg
push
pop
add
xor
test
jl
mov
jb
xor
xchg
xor
mov
test
and
mov
andl
mov
pop
sarb
ljmp
and
test
jns
clc
pushf
adc
jb
rcrl
push
stc
dec
push
dec
lret
add
int
dec
lods
cli
jecxz
hlt
add
fisubrl
adc
push
jbe
popf
imul
pop
and
sbb
push
sub
xchg
cmp
dec
cmc
push
dec
sbb
inc
insb
inc
mov
mov
dec
add
rcll
mov
inc
fiaddl
test
mov
adc
xor
notl
sarl
jno
ret
cmp
stos
pop
rolb
arpl
ret
js
movsb
scas
xchg
jb
shlb
cmc
pop
cmp
test
pop
mov
movsl
xchg
adc
les
cmc
outsl
movsl
out
cmpsb
sbb
jb
cmpsl
popa
sub
adc
in
adc
adcb
ret
inc
jp
add
pop
out
sbb
and
lar
xchg
push
mov
jle
mov
add
mov
and
lahf
inc
fs
fnsetpm(287
sahf
push
cli
scas
das
rorl
jno
loopne
lret
packssdw
mov
clc
ljmp
out
cmc
lock
aam
and
fdivs
or
xchg
and
pop
repnz
or
or
add
xlat
fistpl
lret
xchg
je
mov
xor
inc
xchg
lret
shrb
popa
outsl
stos
and
jne
mov
pushf
sbb
daa
inc
mov
stc
in
cltd
mov
mov
xchg
and
jns
inc
in
sti
int3
dec
test
lcall
adc
jle
add
add
sbb
jp
insl
push
leave
and
test
dec
dec
out
outsb
xchg
adc
pop
adc
les
loope
xchg
inc
cltd
rcl
scas
out
stc
into
pop
pusha
orl
fcoml
or
xchg
xchg
sbb
out
sbb
lock
pop
test
sbb
sbb
pop
rolb
std
adcb
mov
push
fisubl
xchg
mov
sbb
push
add
dec
sbb
cmp
mov
jle
in
addr16
cmp
mov
jbe
out
pop
cmpsl
dec
aam
ja
mov
outsb
sub
call
int3
jno
xchg
dec
sbb
shr
fwait
push
shrb
jmp
mov
out
adc
adc
movsl
pushf
cmp
out
xor
xchg
icebp
inc
cmp
pop
popf
mov
jbe
subl
fadds
sti
das
pop
jb
xlat
popa
ljmp
sbb
push
testb
imul
mov
jle
mov
and
cmp
push
mov
fwait
in
movsb
mov
aad
push
andb
jmp
mov
xor
sti
cmc
pop
add
gs
test
mov
loope
xchg
addl
mov
sub
adc
shlb
and
ss
xor
and
repnz
cmp
mov
mov
nop
test
or
icebp
pusha
or
jae
push
dec
insl
and
in
and
jmp
mov
or
dec
std
mov
inc
sbb
insl
pop
xor
clc
cmc
rolb
xchg
cmpb
in
inc
int3
push
popf
sub
add
fwait
sbb
ja
pop
xlat
jmp
sbb
push
cmp
xchg
adc
mov
lahf
fucomi
inc
loop
outsl
leave
aaa
jae
scas
loope
mov
dec
bound
add
das
add
or
loopne
popa
movsb
sbb
cld
movsl
stos
add
dec
negl
and
mov
sub
jmp
mov
outsb
repz
jae
ret
inc
shrl
dec
dec
jbe
das
iret
xchg
add
aas
js
shrb
push
enter
jns
mov
insl
mov
push
inc
xchg
hlt
lods
jg
cwtl
sbb
or
xchg
jl
in
add
dec
adc
mov
pop
inc
xchg
cmp
mov
and
sub
stos
jne
loop
mov
insb
pop
rcrb
shrd
mov
xchg
cs
mov
rol
or
ret
out
pop
lods
fs
pop
mov
js
repz
out
rolb
mov
push
in
and
es
mov
add
mov
pusha
insl
cmp
ds
lahf
scas
xor
cmp
ljmp
xchg
lods
in
fs
imul
sahf
mov
dec
xor
or
je
imul
sbb
push
lret
clc
sahf
lds
xor
xchg
in
pop
or
movb
jmp
mov
xor
std
adc
in
xchg
scas
call
pop
sti
jae
data16
cmc
addb
jns
mov
cmp
xor
xchg
xor
adc
bound
push
jnp
jb
mov
push
outsl
push
negb
inc
fsubp
push
pop
jo
dec
in
mov
mov
jnp
or
inc
test
inc
or
xor
out
or
dec
mov
add
insl
push
xchg
mov
ret
mov
and
cmp
repnz
xchg
clc
addr16
xchg
pop
lods
add
fdivrl
sub
cmpsb
ret
and
repnz
pop
loope
jmp
popa
test
mov
mov
sti
push
pop
les
jl
jecxz
adc
push
and
das
xor
fsubl
lea
cs
lahf
dec
and
into
sub
imul
pop
sbb
mov
cmp
imul
xchg
mov
clc
xor
mov
pop
push
jecxz
and
out
das
jp
iret
loop
push
mulb
sub
and
cltd
jne
ficoms
and
in
ss
inc
scas
cs
sbb
mov
hlt
push
out
mov
xchg
movsl
mov
mov
sub
xor
repnz
push
fistps
or
out
repz
push
mov
xor
xor
faddl
rorb
scas
test
mov
movsb
int3
jge
lock
btc
mov
adc
js
lcall
arpl
and
popa
data16
mov
xchg
mov
push
dec
inc
daa
xor
and
test
and
adc
popa
pop
mov
leave
dec
outsl
xor
aas
sub
mov
outsb
popa
lock
pop
or
lock
jno
scas
test
sbb
fimull
ficoml
dec
int
jb
mov
mov
pop
xor
dec
mov
fisttpll
adcb
ret
in
pop
mov
ja
ja
mov
adc
dec
test
and
cmpsb
xchg
fsubrs
push
cmpsb
bsf
cmp
lahf
add
push
cmc
lea
cmpsb
test
inc
dec
push
lods
add
mov
orl
xchg
repnz
pop
xchg
xor
gs
pop
add
mov
in
dec
jbe
mov
shll
jno
mov
fwait
loope
xor
js
ficoms
xchg
fimuls
inc
sbb
and
subl
addr16
lcall
cmp
adc
sbb
rolb
xchg
in
popf
int3
mov
pop
dec
sub
inc
imul
jmp
addb
mov
dec
cmp
cld
dec
push
mov
addb
fs
ret
push
popa
xor
or
cmp
jmp
adc
push
push
cmp
mov
aas
addr16
je
pop
nop
lret
xchg
les
test
jg
inc
xchg
push
dec
movsb
dec
sbb
bound
arpl
jg
mov
push
push
xchg
ret
or
push
sub
dec
mov
stos
mov
shl
js
mov
mov
rorb
jne
push
inc
inc
push
xchg
gs
stc
jmp
cmp
or
pop
pop
xchg
leave
out
insl
lods
cmp
es
imul
push
cmp
sub
outsb
cwtl
add
jmp
dec
xchg
inc
scas
jl
loop
mov
shl
outsl
jne
jo
ficoms
xchg
sbb
test
in
xchg
icebp
dec
add
insl
fstps
sub
lahf
inc
sbb
aam
std
push
lds
loop
xor
adc
mov
das
mov
imul
leave
sbb
lret
dec
fldenv
mov
xor
jne
xchg
rclb
xor
pop
xor
and
ss
out
imul
gs
scas
jmp
cwtl
jbe
out
fisttps
inc
lahf
jmp
jg
fisubl
test
iret
mov
inc
mov
xor
lcall
and
inc
sub
scas
pushf
ljmp
and
rcll
ret
inc
push
aaa
mov
xor
mov
jg
or
mov
mov
repnz
jmp
pop
mov
pop
add
sub
repz
add
sub
jb
int3
lock
mov
pusha
aam
mov
test
cmp
mov
data16
xchg
pop
lock
roll
and
pop
in
push
loope
cmp
or
jp
inc
cmp
xor
inc
pushf
shl
xchg
rclb
int3
insb
sub
addb
and
mov
inc
ficoms
mov
lock
jecxz
imul
add
rcrb
ja
lds
mov
ds
xor
push
out
jmp
and
push
aaa
xchg
loop
popa
in
repnz
push
rol
cwtl
pop
mov
push
lret
ret
adc
mov
cmc
test
bound
pop
stc
push
xor
sub
out
ret
lods
lar
push
popf
in
push
or
dec
in
push
jmp
popf
or
jmp
orb
or
xor
movsb
xorl
repnz
push
ds
shll
scas
and
mov
mov
jb
mov
lcall
inc
add
bound
jg
decl
rclb
inc
sbb
leave
adc
xchg
sub
ds
adc
or
and
pop
mov
lods
push
pop
repz
xchg
adc
lahf
push
cmp
fisubrl
popa
jae
pop
aad
fs
jb
outsb
pushf
dec
pop
jo
xlat
mov
push
call
mov
jmp
stos
ret
jle
pop
dec
sub
sbb
test
iret
lea
xor
das
jne
and
inc
dec
pop
sub
sub
insb
arpl
sbb
or
das
mov
orl
and
dec
iret
jae
rcrb
inc
and
mov
arpl
push
adc
and
mov
dec
mov
mov
dec
mov
dec
mov
mov
scas
mov
xchg
loope
push
stos
xor
pop
jo
adc
fcoml
xor
jl
sub
scas
cmpsb
cmp
sarl
ljmp
mov
js
in
sub
in
outsb
inc
jg
in
test
push
push
adc
inc
outsl
cwtl
iret
stos
jnp
xchg
outsl
jbe
clc
push
sub
cld
cwtl
jne
push
test
into
mov
cs
push
cmp
lds
and
xor
mov
jno
cld
shrl
rcr
cmp
push
jl
int3
movsb
add
inc
mov
icebp
repz
adc
xchg
loope
mov
dec
cwtl
das
movsl
inc
lcall
stc
popf
andl
xchg
push
rcrb
xchg
add
mov
sbb
sti
movsb
je
sbb
dec
in
pop
add
shll
xchg
insl
je
mov
lcall
cmp
sbb
cmp
jle
in
sub
cld
not
in
add
mov
push
js
mull
and
sahf
xchg
cmc
xor
lahf
mov
adc
and
cwtl
xchg
daa
xchg
push
xchg
movsb
fst
iret
arpl
lea
sbb
out
mov
xor
xchg
test
test
sbb
mov
dec
pop
mov
or
sti
lcall
xor
iret
dec
test
stos
je
repz
or
add
movsb
mov
cmp
sbb
ret
shlb
sbb
jg
icebp
ss
movsb
fsubrl
xor
mov
xchg
and
push
arpl
push
mov
cmpsb
imul
mov
jl
xor
jbe
mov
and
cld
insb
test
push
icebp
imul
sbb
dec
dec
arpl
or
sbb
addb
imul
inc
sbb
out
or
cltd
jge
mov
jle
mov
mov
cmp
inc
sbb
lock
push
into
sbb
jle
sbb
sbb
adc
jnp
adc
roll
xchg
adc
aaa
icebp
mov
aad
clc
enter
stos
pop
cld
movsl
jp
int
sbb
add
jge
jno
fmuls
adc
repnz
xor
and
les
cli
cld
shlb
lret
sbb
lea
mov
or
idivb
aaa
add
sub
and
out
insb
xor
pop
hlt
add
push
arpl
clc
out
add
std
shlb
cli
das
push
sub
inc
jnp
ss
rolb
cmp
rcr
fnsave
rcrb
jb
sub
xor
push
sbb
inc
ljmp
test
out
movb
jno
sbb
scas
adc
icebp
mov
add
repz
stos
sub
cs
push
dec
xchg
js
popf
out
push
scas
les
add
pop
sub
pop
test
rcll
and
pushf
aaa
and
outsl
xchg
ret
jno
test
pop
mov
pushl
int
pop
es
xor
rclb
xor
jmp
xchg
jge
pop
push
out
add
shrb
jae
enter
pop
test
pop
sahf
movsb
mov
mov
push
push
mov
popa
xchg
jnp
adc
xabort
sahf
ss
mov
push
push
xor
mov
or
test
gs
fisttps
xchg
pop
imul
pop
out
outsb
rolb
dec
fwait
inc
dec
in
test
mov
jmp
xor
sub
decb
mov
xor
push
sbb
pop
dec
ffree
jl
adc
shlb
mov
nop
fisttpll
mov
es
rcll
jo
cs
adc
or
nop
pop
aas
in
inc
daa
mov
je
mov
loop
inc
mov
mov
and
dec
jp
and
push
out
cltd
mov
ljmp
gs
faddp
mov
sahf
and
mov
ds
or
aad
inc
cmp
mov
mov
cwtl
xchg
adc
mov
cltd
les
pop
add
cwtl
scas
lea
mov
xchg
mov
inc
dec
adc
sti
mov
push
icebp
cli
adc
scas
repz
je
hlt
outsb
andb
pop
inc
ss
push
cmpl
loopne
push
and
cmp
call
daa
add
mov
xchg
pop
xchg
xchg
cmp
mov
push
sahf
add
cld
test
imul
imul
push
jg
adc
sti
repz
call
pop
int3
fiaddl
cmp
xchg
sbb
push
sub
jbe
sub
mov
jle
or
stos
add
pop
dec
out
into
stc
jg
push
daa
mov
mov
jns
nop
push
xchg
and
add
movsb
cmp
inc
jno
or
sbb
scas
pop
jo
out
dec
push
sahf
es
inc
jg
ret
mov
or
mov
push
fsubl
or
mov
add
push
inc
sahf
mov
cwtl
fcoms
adc
hlt
jecxz
sti
addr16
int
pop
mov
in
inc
mov
imul
inc
leave
test
test
aad
sbb
lods
movsl
pop
or
or
inc
test
sahf
sti
add
jbe
cli
lds
add
vmwrite
dec
lcall
jmp
pop
divl
jnp
inc
add
jo
push
aas
ret
adc
mov
loope
adcl
stc
pop
fcmovnb
faddl
and
in
add
xchg
cltd
data16
shlb
fisubrl
inc
xchg
sub
inc
rol
ss
test
jnp
stc
xor
inc
fs
into
add
fdivrp
ret
dec
out
fcom
cmpsl
sbb
shl
cmp
sub
movsb
test
ss
arpl
in
lea
or
out
mov
andb
in
pop
arpl
or
int
inc
fbstp
xor
repnz
mov
enter
in
sub
icebp
and
test
inc
fstl
and
dec
imul
popf
jle
jg
sub
adc
test
das
stos
adc
nop/reserved
sub
test
push
push
aad
mov
in
adc
mov
inc
adc
inc
lods
aad
stos
adc
cmp
jae
mov
push
jmp
test
cmp
pop
pusha
fidivrl
add
out
sub
xor
adc
jo
flds
jo
ljmp
or
lea
xchg
hlt
xor
into
mov
scas
push
jbe
adc
jno
mov
cwtl
or
add
sbb
jge
loope
jmp
in
call
jnp
xorl
andl
pop
neg
dec
push
rorl
out
pusha
fistpl
cwtl
xchg
sub
adc
lods
inc
ds
jns
push
xchg
aam
xor
jbe
pop
xchg
stc
daa
or
dec
fwait
pop
dec
inc
cmp
inc
xchg
jge
movsb
test
mov
cwtl
pop
aam
add
jg
pop
add
out
into
in
sub
pop
or
into
mov
andl
dec
and
out
fidivs
xchg
lea
mov
sbb
jns
cmp
scas
push
sbb
repnz
xor
or
cmc
fisttps
mov
push
mov
mov
jg
movsb
dec
sbb
xor
js
lods
and
arpl
aam
imull
add
fstl
dec
push
add
popf
push
outsb
pop
adc
push
aad
cmpsl
push
sub
scas
in
dec
and
adc
inc
pop
sub
jns
scas
mov
inc
fwait
in
xor
lock
rolb
lret
out
ljmp
pushf
or
xor
rol
push
inc
mov
mov
mov
push
push
pop
and
shlb
clc
cmpl
imul
in
lcall
dec
jnp
add
or
and
mov
sub
xchg
sbb
push
stos
std
fs
jmp
jmp
pop
add
xor
adc
dec
lret
cmpsb
dec
pop
jne
test
cmp
js
mov
lahf
push
and
xchg
int
fistps
pop
addr16
or
inc
mov
xchg
icebp
hlt
mov
inc
lods
imul
pop
push
pop
cmp
stc
adcl
stc
outsl
mov
sti
or
inc
dec
push
adc
dec
xchg
nop
inc
in
cwtl
and
mov
jg
sbb
or
ja
popf
inc
dec
xchg
xor
nop
imull
push
int3
sbb
add
add
bound
mov
jbe
xchg
inc
cs
add
push
xchg
mov
adc
in
pop
inc
add
lods
loope
cmpsb
lods
pop
les
mov
aam
jle
pop
outsl
iret
sti
pop
sub
xor
inc
std
lock
cmp
cmpsl
enter
sahf
movsl
jmp
pop
mov
or
js
enter
mov
cmp
imul
imul
fs
shrb
mov
leave
inc
outsb
cmp
pop
stc
jp
icebp
loopne
adc
inc
es
ss
adc
pushf
add
jno
jnp
insb
shrl
cmc
sbbl
je
outsb
idivb
and
and
daa
addb
cld
jle
cmovg
cmc
xor
les
sbb
cs
aas
addr16
and
hlt
add
inc
fcomps
or
mov
mov
cmp
dec
mov
sti
call
inc
xor
xchg
mov
mov
ds
ja
pop
cwtl
testb
ljmp
fiaddl
ds
jae
out
ss
mov
addr16
sbb
pop
lods
sbb
push
or
mov
sub
push
lcall
lods
jb
mov
push
mov
jg
dec
ret
int3
out
aam
push
outsl
shrb
and
jge
or
inc
aad
adc
in
xchg
leavew
push
push
repnz
push
cld
dec
push
rol
fsub
and
popf
int3
cmc
data16
lret
jnp
insb
jb
push
cmp
mov
add
lea
jmp
sbb
pop
dec
and
push
add
adc
popf
mov
ret
cmp
call
add
jo
out
dec
push
jne
sbb
stos
or
sbb
ljmp
out
inc
cmc
cmp
pop
push
xchg
mov
mov
cmc
sub
lock
pop
jmp
in
and
cli
mov
jl
push
repz
and
mov
hlt
push
lcall
push
add
adc
mov
cs
push
inc
jnp
test
inc
fsubs
testb
sbb
xchg
addb
mov
mov
inc
pusha
push
fidivl
das
mov
insl
push
dec
dec
mov
mov
push
pop
adc
mov
push
lahf
and
jle
pop
aad
iret
loopne
push
aad
pop
push
adc
lods
imul
ror
mov
not
sbb
jb
pop
insb
popa
divl
in
dec
lahf
or
sub
add
xchg
mov
xor
lcall
es
loopne
out
pop
in
and
outsb
add
jle
inc
pop
inc
xchg
mov
xchg
add
jnp
mov
into
xchg
mov
inc
inc
decb
imul
xor
push
dec
ret
xchg
ror
fs
call
xor
pop
sbb
mov
les
cld
lods
jmp
push
nop
mov
push
mov
in
lods
lods
sub
or
jae
mov
push
negl
int
call
shlb
sub
aad
cli
push
or
movsl
xorb
adc
dec
inc
jns
or
fisubl
scas
in
xchg
pop
dec
mov
test
scas
xorl
xor
sbb
int
movsl
mov
xor
inc
cwtl
and
cmpsb
daa
das
and
sub
lea
jae
and
test
adc
fmull
fcomp
testl
cs
scas
adc
aaa
je
xchg
daa
bound
xlat
les
ret
es
mov
mov
movsl
out
xchg
ljmp
dec
xchg
ss
jno
mov
scas
pop
inc
cwtl
je
cmp
and
jge
pop
es
add
inc
mov
pop
add
in
shrb
mov
ret
pop
leave
xor
push
mov
mov
mov
out
mov
in
ds
sbb
jbe
jge
stos
fadd
sub
push
aaa
dec
sub
aam
lret
mov
dec
pop
xor
xor
inc
and
jle
xchg
push
fdivrp
push
and
cmpsb
jmp
jmp
xchg
push
fwait
add
stc
xor
jge
mov
inc
sub
inc
loop
pushf
insl
data16
cmpsl
cmp
shr
cli
js
mov
or
push
hlt
cmc
push
mov
scas
in
xlat
mov
scas
mov
dec
jecxz
sub
pushf
cmp
call
jae
out
dec
pop
sub
faddp
mov
or
and
or
addr16
out
cli
xor
xor
and
int3
aad
call
push
dec
imul
add
jecxz
dec
mov
inc
adc
cmp
es
sbb
addr16
xchg
mov
or
daa
mov
jl
and
dec
ljmp
add
adc
pop
cli
dec
aad
les
or
imul
pop
cmp
xlat
scas
out
xor
test
iret
xchg
mov
jo
rorl
cmp
mov
mov
mov
into
test
hlt
adc
aad
out
xchg
pop
das
fnstenv
xchg
aaa
iret
jo
sbb
js
or
mov
lea
cmp
jg
jb
push
fidivl
aaa
mov
hlt
add
loope
cmp
cli
xchg
cli
cmp
jbe
roll
jb
cmp
mov
sbb
icebp
mov
adc
std
adc
test
popa
addl
in
pop
push
pop
into
mov
or
and
mov
in
and
aas
cmc
les
cmp
push
leave
das
enter
xchg
mov
movsl
in
xlat
mov
and
insl
push
lods
xchg
out
jmp
mov
fcoms
fistl
dec
sbb
outsb
stc
sbb
popf
cmp
cmpl
cltd
jl
shrl
movsb
and
loop
sarb
lret
push
pop
add
jge
fwait
jno
add
jg
adcb
fidivs
cld
inc
pop
adc
jg
dec
repz
mov
outsl
in
popf
dec
push
add
enter
xchg
out
cmpl
int3
test
out
loopne
loop
aaa
movsl
movsb
paddsb
les
push
dec
loop
lahf
or
mov
xor
xorl
mov
mov
jns
sbb
mov
jg
mov
dec
fs
jb
imul
mov
xchg
outsb
sbb
call
pop
sbb
sub
jecxz
mov
xor
pushf
adc
mov
xchg
jns
mov
mov
push
mov
jbe
pop
test
jp
outsb
dec
dec
movsb
mov
mov
mov
lret
add
test
clc
sbb
inc
ds
cmpsl
fnstsw
cmp
cmc
mov
push
inc
cs
xlat
stos
imull
in
and
xor
push
in
out
xor
pop
or
cltd
pop
lcall
data16
lods
imul
sub
push
dec
mov
mov
jo
adc
fcmove
movsl
pop
mov
scas
mov
popa
push
cli
add
int3
push
add
mov
pusha
push
mov
sub
add
sub
cld
push
inc
add
xor
push
mov
and
test
push
rolb
outsl
pusha
and
testb
or
dec
inc
fnsetpm(287
sbb
mov
xchg
fsub
clc
inc
int3
cmp
cmpsl
or
mov
mov
pop
cmp
outsb
xchg
stos
mov
inc
inc
pop
mov
jae
mov
subl
dec
cmpsl
scas
int
sahf
subl
in
xchg
out
pop
pop
sub
aas
pop
and
icebp
pushf
dec
jbe
adc
subl
dec
repz
xchg
pop
jae
mov
fcmovnu
jae
or
imul
fdiv
cmpl
filds
ret
fisttpll
and
and
icebp
add
push
negl
lea
lahf
cld
fs
or
xor
sbb
jb
xor
hlt
sbb
shr
sub
sbb
in
cmovne
sub
xlat
mov
loopne
and
or
push
add
aad
mov
lods
mov
xchg
inc
shll
lahf
lods
cmp
test
leave
nop
adc
mov
repz
mov
jno
adc
test
lahf
stos
add
mov
sbb
lods
mov
xor
test
push
push
mov
js
lfs
stos
les
cmp
dec
fwait
adc
andb
adc
hlt
aam
in
inc
je
sbb
icebp
mov
and
push
push
jecxz
add
sub
add
loope
pop
repz
jno
push
cmp
inc
xlat
mov
sbb
addr16
stc
in
add
pop
jecxz
cmp
aas
mov
or
sub
mov
imull
dec
pop
addr16
in
faddl
aaa
sub
enter
mov
sbb
adc
pop
loope
inc
notb
fwait
jmp
gs
in
int
xchg
in
orl
inc
fldt
lcall
mov
jb
xchg
stc
addr16
sti
xor
mov
out
or
imul
ja
xor
mov
jg
in
jmp
imul
shrl
sbb
popf
iret
shlb
xchg
sbb
jae
test
lahf
pop
cmp
and
or
decl
in
mov
aaa
jg
mov
cmp
jmp
push
and
jae
aas
jle
mov
dec
stos
cmpsb
fbstp
pop
fadds
imul
fildl
insl
pop
pusha
lea
popa
push
rcrb
push
xor
imul
ljmp
adc
lods
cmp
sahf
fsubl
pop
rolb
fdivrp
sub
xchg
cmp
ror
or
pusha
xchg
xchg
out
faddp
test
loop
mov
cmpl
std
rclb
pop
fcmovb
add
iret
jp
xlat
mov
push
pop
and
loop
out
cwtl
pop
clc
ret
mov
ret
lods
js
pop
outsb
repz
mov
fldenv
pop
popa
and
xchg
insb
xor
pushf
int
nop
enter
push
inc
adc
sbb
stos
scas
dec
cmp
pushf
pop
adc
stos
out
dec
in
das
mov
inc
lret
movsl
xchg
mov
push
nop
fldl
cmp
jge
cmp
mov
cmpsl
das
xlat
jmp
mov
jmp
sti
fcoml
fistpll
jle
outsl
jne
pcmpeqb
adc
jle
rclb
test
js
push
and
ret
jbe
into
mov
mov
cmp
clc
out
int3
imul
mov
dec
mov
sub
lret
dec
fistps
std
sub
std
cld
or
xor
sbb
into
adc
sub
push
loopne
add
inc
lcall
loope
popfw
test
mov
int
jg
mov
jecxz
lret
inc
fstpt
out
js
xor
call
out
sahf
test
scas
outsl
clc
loope
mov
pop
inc
sub
pop
jg
loope
cmpsb
sti
fists
addr16
dec
push
adc
pushf
addl
fiadds
mov
outsb
int3
and
vpcmpeqw
push
jmp
pop
jecxz
mov
pop
sti
jl
pop
mov
and
div
push
jne
xchg
popa
fsubrs
sbb
adc
mov
cmp
pushf
repnz
pushl
mov
roll
mov
shlb
mov
test
es
rcrl
out
dec
push
sarl
iret
push
loop
cltd
aam
rcrl
mov
pop
mov
push
in
mov
jne
xchg
pop
ret
xchg
shlb
mov
loope
sub
das
in
bound
jb
clc
pop
fidivl
gs
push
cs
cmpsb
outsb
cmp
sbb
cwtl
pop
mov
dec
cmp
repz
sub
jecxz
mov
dec
dec
or
mov
cs
cmp
add
out
push
inc
cmc
fmul
sbb
std
jp
jge
enter
push
push
in
aas
push
sub
andl
std
cwtl
xchg
repnz
push
xchg
imul
fmulp
fstpt
jae
sub
adc
fiaddl
negb
mov
test
mov
sub
jmp
ss
je
xorl
test
into
pop
icebp
inc
nop
add
jle
push
test
popf
out
dec
cmc
cmpsb
or
add
out
test
dec
cmp
mov
lock
jo
js
push
dec
push
ret
cmpsb
lods
testb
push
add
or
mov
ret
xor
dec
inc
rcr
movsb
in
or
xchg
out
popa
out
or
pextrw
sbb
stc
mov
mov
and
xor
inc
sbb
pushf
adc
js
push
mov
jmp
xlat
sbb
repnz
fistpl
lret
rolb
call
dec
lea
cmpsl
dec
cmc
cmp
decb
pusha
or
adc
push
sub
shrb
mov
test
aaa
lahf
js
aaa
push
cmp
pop
xchg
out
inc
push
fiaddl
sahf
mov
es
cmpsb
insl
fcoms
scas
and
mov
dec
mov
mov
push
dec
and
jmp
mov
sbb
lcall
xchg
jbe
leave
sub
sub
fs
fists
aaa
dec
mov
or
cwtl
adc
push
xchg
pop
pop
fmuls
jne
dec
lahf
mov
test
aaa
jbe
add
out
rolb
jg
hlt
pop
mov
in
mov
jecxz
aaa
scas
dec
out
aad
push
mov
mov
fdivs
das
shlb
test
pop
sub
shrb
rcr
arpl
idivb
fcomps
dec
pusha
push
xor
sbb
cmp
jnp
push
xchg
jnp
mov
mov
inc
scas
push
roll
int
cmp
dec
jns
out
cmp
xor
inc
int3
or
cmpl
or
stos
mov
or
mov
pxor
enter
repnz
mov
loopne
cmpsb
es
xor
jbe
mov
addr16
mov
inc
ja
lods
out
xchg
inc
movsl
data16
outsl
bound
inc
mov
mov
or
loope
and
sub
and
mov
dec
popa
aas
or
mov
inc
in
sub
mov
rorb
lret
xchg
andl
mov
jl
mov
movsb
push
les
adc
pop
addr16
test
adc
outsl
dec
mov
rcrl
sub
push
cmpsb
push
xor
out
add
mov
and
mov
ret
add
shlb
mov
leave
out
push
ss
push
cwtl
dec
test
into
enter
xor
and
sbb
aad
lahf
pop
das
rorl
sbb
jns
add
and
pop
sbb
mov
ljmp
out
movsl
popa
repnz
fwait
mov
shrb
pop
add
mov
rolb
jmp
mov
dec
in
roll
pop
adc
jnp
push
test
xor
and
test
pop
lods
cld
xchg
out
lods
and
sub
mov
cmp
dec
add
push
mov
or
xchg
xchg
rol
fcoml
mov
pop
mov
cmp
jmp
jmp
jmp
sbb
ja
cmp
adc
fwait
xor
xorb
stos
pop
stc
out
imul
xorb
test
pop
jle
jnp
ljmp
inc
imul
cld
fwait
and
pop
mov
std
adc
cld
xchg
jo
dec
imull
flds
jge
jl
mov
xchg
fnstsw
mov
sahf
add
push
cmpsb
insl
pop
pop
add
pop
and
cmp
xchg
pop
cli
sub
sbb
outsb
test
pop
xorl
dec
push
push
out
popl
add
pop
outsl
sar
mov
mov
out
sti
or
and
mov
bnd
cs
xchg
sub
sbb
ljmp
cmp
xchg
pop
dec
push
xchg
jl
into
jmp
lea
scas
xorl
inc
xchg
mov
jmp
cmpsb
dec
jae
jno
aas
xchg
pop
cmpsb
sub
sbb
cmc
lahf
ljmp
repz
out
arpl
aam
xchg
dec
stc
adc
pop
mov
testl
sti
mov
lods
dec
pop
jg
jecxz
mov
adc
and
icebp
push
loope
cli
push
sub
xor
loope
inc
push
xor
and
mov
jae
es
pop
sbb
stos
shll
xor
cmpsb
insb
sbb
inc
sub
into
sbb
int
mov
add
sbb
loopne
lock
test
daa
sub
pmaddwd
mov
pop
shrb
inc
xor
int3
xchg
ret
in
sub
xchg
lcall
push
xchg
mov
test
shll
es
or
or
sbb
mov
lret
and
shl
xchg
dec
bound
mov
sub
pop
jne
ret
leave
int
and
pop
inc
pop
test
fmuls
mov
test
mov
mov
into
push
adc
sbb
push
outsb
sti
add
idivl
xchg
xchg
mov
out
outsb
test
cld
fcompl
es
scas
shlb
push
and
sarl
dec
xchg
sarb
int
push
rcrl
stos
sbb
insl
push
push
cld
inc
imul
xchg
dec
cmp
std
sbb
xchg
xorl
stos
out
cmp
adc
scas
mov
pop
out
adc
mov
repz
xor
jae
faddl
fimuls
jl
or
enter
mov
cmp
mov
sbb
xor
cli
xor
inc
andb
inc
cmp
push
pop
cmp
imul
xor
imul
es
arpl
mov
jl
or
jnp
sub
jle
or
iret
mov
inc
dec
sbb
pusha
pop
dec
mov
xchg
loope
xchg
ss
sahf
add
xor
xchg
outsl
dec
xchg
xchg
inc
push
mov
and
cmpsb
in
std
scas
pop
jp
pusha
lods
les
sbb
xchg
inc
mov
ret
das
aam
push
scas
pop
icebp
fnstenv
pop
xchg
ret
adc
std
int3
mov
jns
mov
push
dec
or
cmpb
mov
mov
sahf
pop
test
jb
add
and
and
psubusb
pop
stos
add
loopne
ficompl
fcoml
test
or
cli
pop
sbb
outsl
enter
pop
ds
push
into
rorl
sbb
mov
pop
adc
or
stos
jae
sbb
pusha
les
xor
pop
aas
or
mov
out
test
xor
repz
lret
test
test
cmc
bound
pop
mov
xchg
add
sub
dec
dec
adc
xchg
imul
fstpl
add
es
cmpsl
sub
mov
pop
jmp
stos
lock
xchg
and
push
call
or
pop
fsubr
int3
xchg
push
popa
in
ljmp
mov
mov
in
cld
jo
dec
addb
and
mov
movsb
bswap
pop
rol
jno
popf
pop
jge
pop
jmp
adcb
dec
mov
or
adcb
add
enter
mov
adc
cmc
cmp
jle
cmpsb
popa
or
or
inc
xchg
sub
in
or
xor
daa
shl
pop
or
out
jae
je
test
push
mov
je
mov
lret
stc
inc
xchg
adc
jecxz
mov
xchg
or
in
jno
and
mov
lock
push
or
faddl
jnp
pop
ret
cmpsb
mov
adc
inc
or
pop
mov
cmp
xchg
test
or
dec
lods
xchg
scas
pop
push
push
xchg
mov
je
push
lret
inc
xor
jb
lahf
jne
mov
push
sbb
inc
pop
in
cmc
xor
jnp
cmpsl
stos
ds
ret
dec
xor
and
push
sar
adc
icebp
mov
lods
push
mov
and
cmp
add
push
jge
subl
das
push
add
push
or
sahf
inc
movsb
dec
or
pop
jmp
test
mov
vpmadcsswd
xor
pop
clc
mov
push
fildll
pop
push
lea
mov
push
andb
xchg
movsb
test
and
push
pop
xlat
aaa
sbb
and
lret
movsl
or
jo
jno
pop
and
cmc
fdivl
lods
pop
fildl
mov
jg
sub
adc
mov
push
mov
out
adc
xchg
sbb
nop
aaa
xchg
jb
add
xchg
push
jo
inc
mov
inc
xor
xlat
xor
lock
add
fnstenv
cmp
fiaddl
in
pop
mov
sub
sub
mov
adc
xor
mov
js
and
bound
int
push
dec
mov
dec
test
in
push
or
loopne
cmp
aam
stos
xchg
sub
cmpsl
add
filds
dec
mov
fisubrl
mov
push
bound
ret
jbe
mov
nop
call
pop
adc
mov
mov
lock
dec
call
sahf
stc
in
test
inc
shlb
rep
pop
cltd
jno
and
push
js
fisttps
cli
pop
jnp
daa
or
popf
movsb
shlb
xor
mov
rcr
enter
mov
out
pusha
lods
mov
aas
sbb
shrb
addb
push
and
xorl
xor
cmp
sti
jbe
lahf
mov
pusha
out
movsl
fabs
jecxz
xchg
pop
sub
test
jg
adc
mov
sar
inc
movsl
or
jb
out
jb
lcall
lret
pusha
mov
sub
shll
cmpsl
dec
mov
rcll
mov
push
aad
mov
fs
dec
shlb
stc
hlt
cmpsb
inc
xor
dec
mov
shl
sbb
jg,pt
mov
pop
and
pop
add
cli
or
cmpsb
inc
cwtl
sahf
in
push
pop
add
jmp
jnp
ret
or
adc
mov
out
mov
sub
loop
xchg
ret
lret
and
cmpb
dec
call
push
aad
shrb
mov
imul
subl
push
fs
cmp
ret
pop
inc
jmp
sub
inc
and
stc
in
movsb
jmp
pop
iret
data16
mov
sbb
insl
adc
xchg
mov
inc
fistl
bound
xor
adc
mov
mov
cli
or
adc
inc
xor
adc
add
mov
mov
imulb
es
push
fcoms
or
popa
enter
shlb
ljmp
jge
out
iret
cmp
lret
cltd
and
mov
or
mov
mov
add
push
xchg
ss
jg
addr16
pop
mov
push
ret
jle
popf
shrl
mov
out
arpl
loopne
cmpsb
adc
mov
mov
dec
cmpsb
fdiv
xchg
cmpsb
loop
in
cmp
lahf
loop
xchg
inc
push
call
enter
add
inc
sub
lahf
negl
int3
das
and
icebp
jp
adc
cmpb
xchg
ret
lret
imul
mov
adc
addb
movsl
sub
xchg
inc
adc
call
or
movsb
sub
sar
xor
test
sbb
adc
dec
in
es
lea
dec
repnz
je
daa
jnp
jbe
shr
and
pop
push
adc
lret
mov
mov
pop
inc
das
add
cmp
insl
push
into
xchg
mov
pop
imul
movsl
lea
jle
test
jae
sbb
xchg
mov
jbe
ss
add
int
push
dec
push
jbe
mov
dec
into
dec
cmp
aaa
add
mov
popf
mov
js
fdiv
sbb
sub
cmp
dec
and
in
and
loop
enter
mov
or
orb
cmpsb
adc
data16
test
xchg
and
dec
xchg
cmp
xchg
nop
ret
mov
jg
mov
pop
lods
aam
push
xor
arpl
out
subl
dec
xor
sbb
push
add
imul
addr16
sbb
cltd
mov
xor
loope
leave
insl
into
sub
mov
jno
arpl
gs
insb
add
repnz
pop
pop
pop
pushf
jns
into
add
xlat
fistpll
stos
xor
push
aaa
xor
jle
sbb
loopne
push
pusha
outsb
bound
or
push
mov
jecxz
cli
lcall
push
inc
stos
aaa
sbb
jg
push
nop
sbbb
xchg
movsl
push
dec
or
mov
push
cmp
mov
outsl
mov
jl
js
clc
ja
ja
fstpt
inc
add
lret
subb
lret
pop
jns
fsub
jo
cmp
and
ljmp
movsb
adc
out
inc
roll
out
js
inc
ds
std
call
mov
xchg
jmp
sub
mov
rorl
push
sbb
inc
incl
sbb
adc
jo
mov
push
or
lcall
ss
mov
bound
mov
add
jmp
mov
pop
cmpsb
rcl
dec
xlat
adc
adc
insl
notb
pop
or
and
and
push
mov
shll
cli
rcrb
fimull
in
leave
dec
out
in
ret
lret
inc
dec
jg
fbstp
sbbl
mov
push
mov
pop
je
add
outsl
ret
arpl
mov
ds
inc
movsl
mov
ds
hlt
sub
in
je
xchg
and
in
pop
add
sbb
mov
pop
dec
movsb
adc
add
loope
mov
test
mov
pushl
arpl
mov
mov
and
or
add
ss
inc
rcrb
sbb
add
xor
pop
or
sbbb
jne
in
sbb
das
xor
inc
ljmp
in
popa
jle
inc
fdivr
or
pop
imul
and
mov
inc
add
addl
fsubl
andl
out
and
sub
xchg
push
stos
inc
hlt
scas
push
and
push
int
ds
lret
pusha
mov
mov
mov
inc
test
daa
sub
test
sbb
mov
xor
xchg
xchg
xorb
sub
int3
test
aad
loop
or
push
das
insl
mov
fimuls
mov
and
imul
dec
push
insw
jmp
arpl
shr
jbe
mov
cmp
xor
rcrl
jge
sub
or
rcrb
inc
pop
into
dec
int3
adc
mov
cli
mov
loop
imul
movsb
repnz
mov
lock
xor
jecxz
movsb
stc
fldl
sbb
mov
cmpl
xchg
sub
xchg
jns
xchg
mov
pop
fistpl
inc
in
adc
test
stos
adc
mov
icebp
stos
pop
ljmp
in
lods
aad
sbb
test
scas
sahf
xor
hlt
stos
pop
cmpsl
cwtl
out
xchg
ret
sti
jle
jmp
movsl
fisttpll
mov
jne
ret
les
add
mov
sbb
bound
cmpsl
or
sbb
mov
outsl
sub
mov
dec
stc
sub
loope
mov
incl
pop
lods
fists
out
or
out
push
sbb
fstl
pop
inc
mov
xor
sahf
sbb
rorl
pop
stc
cmp
jo
mov
pop
fldt
cmc
xchg
rcl
jmp
or
dec
add
outsb
ja
js
mov
mov
jp
js
movsl
ss
lea
sub
mov
sub
roll
pop
mov
mov
mov
cmp
xchg
lods
adc
pop
gs
xchg
dec
pushf
cmovl
jae
mov
cmp
push
cs
test
inc
sbb
and
loopne
or
fdivrl
mov
test
stos
in
aas
insl
add
xchg
es
cmp
sbb
xchg
mov
mov
xor
icebp
movsl
int
mov
stos
movswl
sub
dec
sub
sti
mov
inc
xchg
fwait
xor
push
gs
cmpsl
mov
lret
ret
es
add
bound
repnz
cmp
cmp
addr16
jg
push
adc
sbb
cmp
dec
jmp
dec
nop
shrb
mov
outsb
sub
cmp
movsb
mov
sahf
or
test
enter
jmp
fs
out
push
add
add
xor
mov
mov
jb
xchg
mov
cmp
and
xor
gs
xor
mov
mov
inc
sbb
push
mov
xor
repnz
popa
sti
mov
aas
xor
dec
mov
bound
jecxz
jno
lahf
hlt
rcl
es
ret
mov
cs
roll
popa
fiadds
xchg
out
cltd
jbe
dec
in
and
mov
xchg
or
cs
inc
pushf
movsb
bound
mov
pushf
nop
dec
rcrb
lret
movsb
ret
mov
add
test
add
xchg
fidivs
inc
hlt
in
mov
xlat
jg
lods
dec
or
cmpsb
hlt
cmp
pop
jecxz
js
push
loope
mov
sub
ret
xor
stos
and
and
lock
es
cmpsb
out
jecxz
dec
hlt
insb
ljmp
fstl
jae
xor
add
lea
dec
fldt
int3
pop
push
xlat
in
cmp
sub
imull
mov
cmp
rcrb
fs
push
inc
cltd
jecxz
pushf
outsb
roll
int3
mov
ret
mov
jnp
into
fwait
hlt
stc
push
jae
dec
jnp
lods
sbb
outsb
dec
sbb
es
dec
and
jne
pop
push
sub
and
push
push
mov
lret
insb
inc
xor
xor
iret
sub
cmp
mov
cmpl
pusha
rolb
insl
jge
cmp
mov
filds
mov
mov
push
and
push
or
xchg
sbb
xchg
dec
fwait
cmp
fbld
xchg
sbb
add
pop
out
xor
call
sbb
neg
dec
and
push
pop
mov
mov
shrl
imul
rcrb
adc
call
cltd
jge
into
sub
lods
sti
lds
in
xor
jp
dec
out
cwtl
jnp
or
lea
mov
mov
push
cmp
cmpsl
or
mov
and
fdivrl
cmp
ret
jg
movsl
into
xchg
negb
stc
adc
sbb
xor
xor
into
xchg
aad
cmpsl
test
inc
cmpsl
divb
mov
cwtl
inc
adc
mov
push
sub
outsl
pop
push
bound
or
cmp
jne
push
aad
imul
shrl
cs
pusha
aad
jno
das
iret
rcrb
pop
clc
ficompl
jmp
js
dec
call
sbb
cmp
imul
hlt
jg
movsb
inc
mov
dec
pushf
adc
insl
mov
shl
pop
subl
push
mov
ds
xchg
movb
xchg
mov
adc
ds
mov
aam
pop
mov
rcrl
loop
loope
inc
xchg
sub
lea
test
push
pop
pop
ror
jge
leave
sbb
xlat
inc
popa
test
push
push
xor
gs
cmp
les
arpl
adc
bound
mov
leave
repnz
mov
in
adc
adc
cmp
cli
mov
adc
pop
jp
inc
mov
clc
bound
adc
add
jle
lods
or
ret
mov
push
shlb
inc
das
push
push
or
push
cmpsb
push
jl
es
fisubrl
mov
mov
out
pop
and
inc
ljmp
or
data16
fadd
int
mov
xchg
adc
inc
popf
dec
cmp
sbb
mov
inc
jnp
fildl
mov
pop
push
pop
orl
cmc
scas
xchg
stos
imul
inc
pop
push
xlat
test
ja
rorb
push
arpl
mov
mov
cwtl
bound
and
dec
int
jg
sub
cmp
mov
push
and
fmuls
stos
repz
push
scas
pop
adc
sbb
movsb
mov
cli
shll
daa
or
pop
fld
sub
stc
push
mov
in
fsubs
ljmp
push
jns
adc
push
cmp
cmp
mov
jg
test
ss
lea
in
mulb
pop
or
imul
and
sbb
cs
xchg
ret
out
shlb
fsubrp
sbb
adc
inc
and
pop
scas
mov
sbb
int
xchg
mov
xchg
fnstcw
mov
mov
pusha
lods
xchg
push
sarb
jae
pop
sbb
fistpl
xchg
js
fsts
dec
or
test
repnz
in
pop
scas
out
adc
dec
xor
cmp
rcll
inc
rcrl
ss
hlt
pop
adc
negb
mov
fadds
adc
jecxz
adc
inc
clc
sbb
add
jmp
outsb
jecxz
clc
nop
out
sbb
push
jae
adc
xchg
sahf
add
aaa
out
js
adc
and
cvtpi2ps
mov
test
sub
mov
mov
jns
or
jecxz
cmp
mov
cs
xor
pop
jne
int3
bound
jecxz
mov
fsubrp
subb
test
lcall
mov
xchg
xchg
mov
ljmp
fistl
fwait
aad
lea
cwtl
xor
mov
push
pop
push
mov
shrb
mov
mov
psubw
mov
leave
hlt
pop
mov
push
aam
add
scas
xor
bound
out
loope
clc
ret
cmp
jmp
push
mov
jge
adc
in
push
xlat
movsb
pusha
dec
or
mov
imul
hlt
movsl
repz
mov
jge
sti
mov
cltd
add
jns
bound
in
insb
and
test
or
daa
inc
add
pop
mov
cmp
add
sub
add
mov
loop
xor
mov
inc
int3
std
jae
mov
cwtl
loop
mov
icebp
mov
cltd
mov
fisubs
push
sahf
dec
cmp
xchg
es
subl
inc
jbe
pop
js
lcall
mov
inc
push
sbb
inc
lret
or
mov
and
fimuls
rcrl
shll
dec
fwait
dec
mov
js
in
inc
aaa
sbb
cmp
rcr
adc
cmc
lock
xor
hlt
sub
mov
in
stos
scas
leave
jmp
cli
shll
jae
cmp
ds
sbb
icebp
mov
out
int3
mov
jge
mov
data16
scas
adc
or
push
jl
pop
test
jl
jb
jnp
and
cs
xor
pop
jnp
mov
dec
out
imul
arpl
sub
ror
mov
push
mov
push
adc
sarl
sahf
es
jg
test
cmp
stos
pop
into
adc
fldl
arpl
dec
cwtl
push
adc
pop
and
cmpsl
pop
imul
jmp
cli
fnstsw
cmp
dec
push
out
inc
ficompl
xor
movsb
mov
clc
jge
sub
in
adc
iret
dec
push
or
jo
mov
fdivp
pop
mov
mov
seto
adc
or
pop
rorb
xchg
mov
pusha
out
out
xchg
imul
pop
lahf
inc
loope
jle
scas
out
jmp
jo
jno
test
mov
sub
lret
inc
cmpb
fcmovnb
dec
push
out
and
loope
and
jecxz
leave
fs
cli
and
nop
movsb
mov
test
fsubrs
test
mov
lock
mov
jg
dec
mov
out
jg
imul
fwait
rcl
mov
testb
or
or
xor
scas
xacquire
pop
test
inc
arpl
ljmp
sahf
jle
sub
mov
inc
andl
and
hlt
rcll
xchg
lods
sahf
jne
jecxz
lods
pop
xor
push
cmp
in
ss
xor
cmp
or
mov
fnsave
fnsave
mov
loopne
mov
sti
pop
cs
cmp
fsub
int3
add
cmp
mov
add
fldenv
push
fstpt
and
xor
les
mov
mov
insb
call
pop
aad
scas
inc
in
es
clc
pop
sub
cmp
pushf
cmp
mov
cwtl
mov
dec
xchg
ret
test
fldln2
xchg
inc
mov
test
pop
mov
lret
sub
push
inc
popl
or
imull
out
rcrb
sub
enter
pop
outsb
cmpsl
add
fisttpl
int3
sbb
add
mov
mov
mov
pop
sbb
or
xchg
jno
ret
lret
stc
mov
mov
shrl
push
push
std
jae
popf
sbb
std
dec
mull
push
push
cmp
lock
sbb
das
sbb
adc
cwtl
aam
add
add
in
mov
pop
or
xchg
popl
xchg
or
sbb
rcll
xor
test
or
push
jb
jecxz
jmp
ljmp
add
je
sub
adc
sahf
dec
lea
or
dec
out
xchg
dec
xchg
in
and
mov
ljmp
push
adc
mov
out
cli
xchg
push
in
xchg
movlps
mov
dec
ljmp
mov
push
mov
pop
pop
xchg
pop
jecxz
jnp
add
cmp
xor
addb
mov
sahf
test
inc
bound
xor
jecxz
sub
adc
lock
inc
mov
outsb
imul
adc
lods
fimull
jg
mov
adc
push
cmpsb
jp
push
mov
pop
ds
addr16
and
out
sbb
outsb
movsl
bound
add
push
jmp
pop
out
outsb
dec
or
daa
mov
xchg
lds
lcall
jb
sub
push
sbb
push
mov
dec
sbb
jl
popf
adc
sbb
into
and
push
or
loopne
mov
mov
testl
push
pop
adc
sub
mov
int
inc
dec
mov
jl
sub
push
and
sbb
out
jbe
rorb
mov
or
xor
leave
dec
and
dec
jge
lea
jmp
and
jp
mov
mov
xchg
pop
jge
push
enter
rdpmc
cmpb
in
adc
inc
push
xorl
popa
or
and
jo
sub
jg
cmp
sub
mov
pop
mov
pop
sbb
lcall
xchg
jg
arpl
mov
decl
push
push
adc
outsl
sub
scas
int
addr16
adc
push
xor
mov
je
lds
add
mov
jg
adc
adc
icebp
mov
pop
sbb
insl
ss
sbb
xchg
test
pop
insb
roll
jno
aas
jle,pt
jl
push
dec
jecxz
dec
outsb
push
mov
daa
stc
into
or
out
dec
inc
push
add
insb
lods
inc
out
mov
out
cmp
sbb
notb
and
xchg
mov
fsts
nop
arpl
outsl
mov
lahf
jnp
test
in
pop
fstps
jmp
lods
push
test
dec
hlt
insb
add
add
sarb
lret
fcoms
sti
adc
imul
outsb
mov
or
sub
pop
push
cmc
inc
mov
testl
cwtl
pop
aad
jle
leave
pop
or
adc
pushf
call
mov
fsubrl
pop
adc
not
mov
in
inc
pop
lret
push
inc
sub
ss
adc
add
mov
stc
sub
fcomp
clc
jp
repz
add
adc
and
dec
mov
mov
in
inc
xchg
fsubl
pop
andl
fstp
xor
mov
sub
enter
jo
xchg
pop
cld
cmc
inc
or
jge
push
fwait
push
test
push
fcoml
jae
cltd
adc
mov
cmc
mov
sbb
inc
loope
push
sahf
xchg
stc
jnp
cmp
or
loope
and
aaa
sahf
sub
jmp
cmp
inc
cmp
xor
push
outsl
inc
mov
sub
cmp
dec
pushf
rclb
jns
je
push
call
pop
test
je
ja
shrl
cmp
cld
push
adcb
pop
mov
and
lcall
div
ret
or
lea
sub
scas
lock
sub
rcrl
dec
out
jge
dec
mov
sbb
sbb
adc
fs
sti
mov
lcall
out
lahf
sub
mov
popf
pop
dec
cli
test
mov
mov
mov
loop
sbb
cmp
mov
mov
and
lret
les
rorb
mov
ret
jbe
js
dec
repz
xor
xchg
ror
loop
jo
decb
jl
xor
movsb
lods
int3
push
sub
cmpsb
mov
fs
pop
jmp
and
ja
pop
mov
adc
aad
pop
ret
ror
or
test
ss
cltd
ja
xchg
mov
jl
fisubrl
pop
push
insl
sub
mov
es
pop
jne
idivl
mov
cmp
jmp
sbb
sub
add
les
ficoml
pop
fcmovbe
sub
lock
aas
or
sbb
sahf
andb
into
aad
mov
into
andl
dec
or
jno
jmp
sbb
mov
sub
idiv
stos
mov
mov
cmp
jne
push
push
in
loopne
cmc
stos
jbe
in
jb
int
fsincos
in
push
rorb
lock
add
jmp
mov
adc
iret
cs
xor
shl
sub
add
sbb
push
scas
insl
inc
nop
testl
push
or
jo
xor
push
sub
ret
push
ljmp
in
adc
jns
fwait
sub
pop
push
add
or
test
clc
aas
faddl
mov
adc
clc
or
movsl
fidivs
negb
decb
pop
insb
aad
test
mov
xchg
dec
sbb
cli
js
mov
xchg
stos
adc
dec
sbb
push
int3
enter
sbb
loop
pusha
in
std
inc
movsl
enter
add
add
fldenv
es
out
sub
pop
out
jo
aad
jnp
aad
jle
outsb
adc
loopne
inc
adc
popa
ss
pop
pop
mov
push
ds
sub
mov
cwtl
pop
data16
dec
jmp
jno
adc
add
cmp
inc
adc
mov
mov
sub
mov
and
in
lret
jns
je
dec
xlat
push
je
mov
add
xlat
cmpsb
shl
iret
faddp
outsl
jmp
rorb
sub
cmp
adc
sbb
lds
mov
jno
inc
and
xchg
jnp
pushf
jecxz
xor
fcmovbe
dec
sub
push
add
inc
in
insb
jb
ffreep
cld
adc
das
jg
fidivl
test
push
jnp
push
aas
sbb
iret
lock
stos
inc
ret
push
jge
push
pop
jg
sub
push
inc
lcall
inc
aad
lret
pop
imul
divb
inc
cmp
cmc
loop
push
adc
cltd
andl
pop
and
push
mov
outsl
or
imul
jp
insb
and
ljmp
xchg
mov
fwait
push
test
sub
sti
daa
jno
aaa
push
sbb
into
jae
loope
or
fs
push
and
fwait
cwtl
cmp
cli
mov
push
pop
cmc
mov
scas
mov
mov
lods
outsb
out
insl
addr16
out
es
sahf
inc
loope
das
loop
or
and
aaa
push
or
inc
pcmpgtd
test
mov
xchg
movsb
aam
sbb
call
loop
jns
lods
call
pop
push
movsb
push
ljmp
sub
dec
and
rorl
or
push
test
dec
movsl
or
in
xor
jne
add
dec
ja
ror
test
sub
cmp
ja
sub
xchg
pushl
adc
jecxz
es
sti
cmpsl
jae
sub
jle
cwtl
roll
mov
mov
ficompl
loope
cltd
movsl
mov
stos
inc
pop
fsubrs
sbb
mov
dec
inc
and
jbe
lret
and
fbld
subl
and
lahf
pop
das
rorl
mov
fwait
jmp
sarl
push
mov
ret
inc
xor
jbe
test
aam
ret
xchg
in
push
xchg
test
testl
jg
xor
mov
mov
cmp
shll
mov
ret
xchg
imul
jge
out
inc
dec
jo
mov
mov
aas
pop
cmpsl
gs
aam
and
cwtl
push
ret
xor
push
ret
test
fildll
cmpb
cmp
inc
sbb
rep
popf
cmc
sahf
mov
push
lret
cwtl
in
sahf
ss
cmp
adc
mov
push
pop
mov
inc
add
lahf
cmp
jle
xor
dec
mov
push
xor
jp
inc
or
in
and
imul
hlt
test
ror
adc
mov
flds
push
and
xchg
cltd
push
les
ljmp
xor
adcl
dec
mov
push
mov
cmp
mov
call
pavgw
or
in
xor
push
clc
sub
popf
dec
rol
call
lds
hlt
jbe
jle
push
jb
lret
outsb
mulb
or
stos
mov
jae
sub
cmp
push
cmpsb
in
jmp
or
imul
mov
xchg
insl
fiadds
dec
into
xor
das
addr16
xor
adc
int
pop
shlb
out
movsl
or
rorb
cmpsb
out
jb
outsl
fidivrs
push
inc
push
or
test
or
fcmove
andl
shlb
inc
daa
das
add
testb
and
cmp
out
cmp
and
cmp
and
lret
mov
pop
mov
in
clc
rcrl
lcall
push
pop
mov
jbe
icebp
and
out
xor
adc
lahf
mov
jae
mov
loopne
stos
testb
insb
xchg
xchg
stos
lret
insb
addb
enter
mov
and
mov
xchg
fistpl
scas
push
lods
push
cltd
add
adc
imul
test
xor
aas
loop
or
pop
mov
xor
andb
cmpsl
inc
imul
mov
add
data16
pop
adc
ljmp
push
shrb
pop
pushf
xchg
mov
data16
hlt
shlb
lret
xchg
mov
outsl
add
outsb
pop
sub
add
ret
repz
jmp
sbb
inc
sub
push
int
in
insb
enter
rorl
cmpsl
aas
adc
cmp
pop
mov
pop
add
jae
pop
jnp
sub
addr16
ljmp
in
jmp
lahf
jp
aad
mov
mov
ss
dec
out
dec
jb
jne
cmp
pop
fstps
dec
xor
outsl
cmpsb
inc
jmp
push
cwtl
adc
jmp
dec
jp
pop
je,pt
daa
add
mov
sub
or
jae
push
mov
in
mov
mov
fstpl
fdivrl
jg
xchg
xchg
rolb
dec
clc
test
stos
addb
push
inc
andb
sbb
mov
adc
int3
cmp
jle
mov
mov
cmp
leave
icebp
sti
jecxz
push
jmp
pop
push
ljmp
jge
mov
pop
inc
mov
int
cltd
push
pop
stos
icebp
fdivs
sub
inc
push
mov
mov
sahf
addb
jnp
add
dec
sbb
sbbl
inc
sub
dec
sbb
dec
mov
nop
lock
xchg
insl
test
push
push
jno
jb
sbb
negb
sbb
mov
std
sbb
imul
xchg
push
jg
jle
cmp
inc
movsl
inc
mov
mov
push
push
leave
xchg
test
fldl
std
in
add
mov
mov
int3
push
jbe
and
enter
xchg
sti
std
in
lret
sbb
pop
adcl
test
adc
xor
mov
or
data16
mov
jo
add
xor
sub
add
outsb
cmc
outsb
es
pop
ljmp
jnp
rolb
jge
ljmp
call
pop
mov
push
pop
inc
mov
call
cmp
mov
shlb
mov
stos
bound
inc
pop
mov
push
fs
out
cmp
cltd
push
and
out
lahf
add
mov
pop
fnstenv
adc
in
cmp
jg
add
and
pushf
lret
in
fcomi
lahf
dec
aas
lods
lds
ss
movsl
subl
iret
mov
mov
iret
repnz
sysret
mov
xor
xor
icebp
andb
dec
cmp
rcl
adc
call
inc
inc
das
cmp
ret
aad
fnstsw
sub
je
inc
ss
sub
cmp
imull
test
xor
inc
mov
lret
popa
fwait
jns
insb
fsubl
call
push
push
pushf
sub
movsb
fnstenv
mov
add
je
fisttpll
sbb
arpl
sub
and
aaa
mov
adc
dec
xor
mov
lock
shrl
fucomi
jnp
in
mov
or
mov
push
cmp
and
pop
or
mov
inc
sbbb
xor
out
in
mul
fbstp
fimuls
cmp
xor
inc
sub
pushf
fmuls
daa
xor
jae
iret
add
dec
fucom
push
stos
xor
es
xor
mov
xchg
stc
into
scas
cmpsb
and
pop
lea
fildll
pop
out
sub
xchg
jmp
scas
ljmp
inc
fsubrp
ret
inc
sahf
mov
xor
add
dec
cwtl
insl
mov
mov
loop
ret
xchg
rcll
arpl
mov
repz
push
cmpsb
push
and
cli
repnz
sub
xor
xchg
dec
popf
xor
fsubp
pop
repz
fwait
movsl
lcall
in
dec
cmpb
repnz
rcrl
mov
pop
mov
jo
mov
mov
push
cmpl
stos
jl
dec
adc
push
cmc
mov
and
gs
repnz
mov
filds
in
cmp
push
outsb
push
in
and
xchg
ret
push
lods
jns
mov
xchg
or
js
cmp
sbb
or
in
ss
mov
mov
in
mov
pusha
xchg
xchg
test
sub
mov
add
jp
dec
adc
cmpsl
push
ss
mov
inc
les
xchg
loopne
or
adcl
stos
lock
push
adc
fcompl
pop
test
fld
inc
das
mov
popf
repz
lods
inc
cmp
mov
xor
loopne
jne
imul
cmp
dec
loopne
imul
les
lock
test
nop
hlt
call
or
sahf
test
inc
inc
inc
scas
cli
cwtl
mov
add
inc
push
popa
sbb
jne
add
je
nop
repnz
fnstenv
mov
sbb
out
hlt
push
sub
xor
mov
add
xchg
sbb
mov
imul
push
inc
std
pop
loopne,pt
jmp
xchg
xchg
fcom
test
pop
lret
push
push
popa
sahf
loop
rolb
imull
int3
in
in
sbb
pusha
mov
mov
mov
pop
and
lods
push
jno
test
vpsllq
loope
dec
les
mov
ret
jg
jg
and
movsb
les
lcall
cmp
jns
dec
lret
xchg
loopne
lods
add
cmp
xchg
jmp
cli
dec
push
sub
mov
stc
shl
dec
sbb
rol
aad
cltd
fs
fwait
lods
stos
dec
fdivrl
xor
cld
cwtl
xor
imull
sbb
std
add
test
xor
and
push
and
pop
aas
les
stc
gs
adc
ljmp
outsl
andb
inc
popf
xor
mov
lods
cmp
ficomps
xchg
lock
es
sub
scas
xchg
cmc
test
movb
sahf
inc
mov
sub
push
mov
adc
fdivs
sbb
lret
enter
add
inc
imul
or
pop
mov
jp
cmp
mov
push
test
xchg
rcll
stc
scas
push
sbb
inc
mov
repz
icebp
mov
pop
add
pop
mov
pop
int3
testl
xchg
and
dec
push
or
jle
xchg
lea
clc
ss
ss
cmp
loop
imul
inc
cmp
scas
sbb
mov
mov
arpl
pop
cmp
add
dec
les
jp
jge
popf
push
add
xchg
add
int3
mov
pop
sub
and
adc
push
dec
dec
mov
xchg
jne
mov
iret
jns
jne
incl
lods
xchg
mov
mov
outsb
jnp
xor
scas
push
pop
in
push
in
mov
sti
fwait
jmp
mov
dec
mov
bnd
cmpsb
or
jmp
adc
xor
mov
sbb
arpl
lock
mov
cmp
stos
mov
xchg
mov
in
cmp
and
or
ret
pop
cmp
fisubl
or
inc
inc
push
ljmp
inc
jno
push
or
cmpsl
pop
push
mov
js
xchg
push
sbb
fisubl
mov
mov
pop
sbb
ja
rorl
cmp
jne
fs
pop
negl
sub
fisubl
sbb
jecxz
inc
jle
notb
ror
cld
push
cmp
int
movsl
movsl
shrl
pushf
bound
shll
int3
jg
stos
fadds
push
or
int
push
int3
jg
xchg
dec
inc
push
jecxz
in
mov
fstl
sub
stc
dec
mov
cmc
sbb
mov
out
rcrb
adc
ljmp
nop
mov
adc
xchg
mov
cs
cs
cltd
data16
sbb
insl
outsl
stos
push
mov
sub
mov
sbb
outsl
push
clc
add
dec
cwtl
sbbb
jge
incl
lods
in
cmp
sbb
dec
push
je
pop
xchg
jecxz
out
rcrb
inc
outsb
ljmp
jns
in
xor
arpl
icebp
inc
or
pushf
add
adc
push
outsb
rclb
xor
ret
pop
repz
push
in
aam
into
xchg
cli
aad
xor
inc
jb
pop
xchg
les
sbb
repnz
enter
imul
xchg
sahf
je
out
repnz
movsl
loop
sub
adc
xchg
add
cs
push
decb
push
mov
push
lea
mov
les
mov
adc
or
push
movsb
daa
jns
aam
cwtl
mov
push
and
fcomps
inc
xchg
or
js
rorb
lcall
jae
insb
xlat
jo
dec
xor
test
push
sbb
or
movsb
jle
mov
mov
jbe
imulb
mov
cmp
dec
shlb
mov
fimull
xchg
mov
and
loop
and
cmp
ret
pop
dec
xchg
dec
push
jle
xchg
sub
push
jge
lea
mov
add
add
call
clc
pushf
test
adc
inc
cltd
sti
inc
fimull
sarl
xchg
and
test
ret
xchg
enter
xchg
lock
mov
in
fnstenv
pop
mov
mov
jg
les
push
jbe
insb
mov
dec
and
imul
xchg
sub
hlt
or
dec
cmp
sub
pop
sub
outsl
push
mov
push
fistpll
sbb
pop
sub
add
cmp
pop
repnz
mov
mov
loopne
mov
out
scas
jl
jmp
loop
cld
push
push
push
cmp
loope
scas
test
mov
pop
sti
bound
or
mov
pop
mov
push
jp
push
clc
ja
out
mov
out
cmovl
jp
shll
loope
mov
inc
daa
add
lock
outsl
cmp
int
mov
test
jae
mov
mov
and
mov
pusha
aaa
push
fldl
pop
inc
jno
stos
mov
mov
in
sub
gs
add
fistpll
popf
loopne
sti
xor
pop
adc
xchg
pop
and
emms
mov
outsb
popa
jns
shll
jno
xchg
cwtl
inc
les
mov
add
popa
lods
enter
xor
push
aaa
pushf
and
xlat
jns
mov
test
icebp
into
xchg
cmp
shll
xor
push
mov
xor
sbb
ljmp
pop
movsl
sub
jae
mov
out
clc
and
in
sub
clc
lea
data16
mov
in
test
mov
fs
aad
mov
mov
mov
ret
pushf
mov
jb
inc
lods
sub
sub
or
inc
ljmp
ss
pop
int
loop
loop
bound
clc
xorb
rolb
aas
fildl
nop
stos
lret
mov
and
lock
cs
and
mov
dec
mov
cs
sub
lock
cmp
jp
pop
adc
cld
pop
nop
jns
adc
mov
aas
pushf
inc
ffree
les
lock
daa
cmp
mov
jl
loopne
sub
iret
push
or
mov
sar
mov
mov
cmp
fsubl
vpaddq
stos
aam
and
inc
adc
and
inc
ret
in
cli
cmc
sub
sub
dec
xor
xor
negl
adcl
int
adc
xchg
in
or
std
adc
mov
xchg
hlt
mov
outsb
inc
sti
idiv
lock
fcmovb
stos
xor
add
lock
mov
inc
or
push
mov
mov
packuswb
sbb
iret
push
fs
mov
mov
stc
ret
and
jmp
push
fwait
enter
lahf
push
shll
dec
sub
aad
rclb
arpl
sub
push
mov
pushf
jmp
mov
mov
fbstp
adc
push
jg
es
pop
pop
lock
ret
mov
add
and
mov
dec
out
xor
push
enter
int
or
mov
dec
insb
jge
push
xor
push
push
push
movsl
lock
dec
mov
popa
or
movsl
stc
dec
arpl
ljmp
or
in
add
xchg
gs
lret
adc
shll
mov
lcall
jbe
shl
xlat
cmp
cli
xor
pop
mov
adc
subb
in
jge
movsb
mov
popf
fildl
stos
dec
mov
nop
ss
mov
loop
mov
je
fadds
fwait
dec
push
xchg
add
add
div
push
adc
aad
std
xchg
mov
or
idivl
sub
jns
aaa
orb
mov
inc
cmp
adc
out
jle
ljmp
or
lret
repz
pop
sbb
lock
out
xchg
mov
sti
int3
enter
cmp
imul
cmp
ljmp
loope
outsb
nop
dec
outsl
add
dec
je
jle
clc
lods
xchg
cltd
adc
sbb
sti
lahf
push
test
or
movsb
scas
test
lea
loope
out
adc
adc
add
addr16
into
mov
xchg
jmp
stc
movl
ret
iret
popf
lcall
cmp
adc
jmp
mov
mov
mov
push
push
gs
test
jns
pop
jmp
sti
push
dec
fisubrs
shlb
popl
aas
fimull
push
dec
sbb
cmp
fstps
mov
and
aas
sbb
mov
daa
or
sub
test
mov
xor
xchg
dec
xchg
inc
add
cmp
out
cmp
test
inc
pop
push
sub
daa
movsb
call
adc
xor
sbb
dec
xchg
rolb
pusha
xor
mov
mov
lret
je
adc
jl
push
add
push
cli
push
je
je
xchg
pushf
fadds
fstps
push
fmuls
pop
xor
xchg
mul
iret
ljmp
xor
hlt
cmp
push
in
dec
dec
xor
mov
insl
jp
js
movsb
inc
mov
mov
roll
add
jmp
ret
jmp
lods
aam
mov
ljmp
aas
scas
jle
sbbb
movsb
inc
mov
jle
sbb
pop
cmc
popa
je
dec
lea
xchg
mov
lock
mov
filds
sub
fists
adc
out
pop
imul
imul
pop
ja
jle
mov
add
push
sub
pop
jbe
enter
leave
dec
test
jo
js
inc
and
scas
lahf
and
mov
and
cmpsb
je
push
pushf
xor
loope
pop
ss
cs
cli
int3
ja
inc
ror
adc
adc
out
add
imull
push
mov
jo
mov
adc
push
ss
push
add
fdivrl
adc
div
cli
pop
dec
mov
inc
pop
addr16
pop
test
dec
xchg
fsubl
mov
pop
test
mov
sbb
sub
mov
jge
arpl
and
pop
xchg
leave
push
sbb
les
push
push
das
lods
or
inc
divl
mov
sbb
pop
lcall
cld
imul
jae
stos
inc
xchg
stc
or
shll
inc
adc
jge
mov
decb
in
cltd
mov
jmp
mov
push
inc
cmp
lret
sbb
in
lahf
test
rorb
push
aad
mov
loope
in
xchg
ret
xor
mov
pushf
mov
and
jae
loop
jo
xchg
in
adc
sahf
xor
inc
pop
mov
out
fidivs
das
movsl
ss
nop
mov
and
cmp
cmpb
and
js
sbb
fstps
mov
ret
or
sbb
adc
mov
loopne
pop
xor
mov
movsl
push
xor
cmp
mov
push
sarb
aam
ss
seto
xor
test
fs
das
fbld
xchg
pop
in
push
repnz
out
or
out
mov
ds
push
arpl
xor
mov
les
cmpsb
sti
loopne
andl
jns
leave
jb
xchg
divb
dec
or
mov
push
aad
stos
sbb
inc
mov
dec
mov
mov
divb
mov
push
js
mov
push
jb
jmp
scas
mov
mov
lods
jnp
mulb
data16
fs
rcr
lahf
popf
and
jl
push
loop
pop
fildll
cmp
mov
mov
jmp
push
mov
xor
sbb
loope
pop
mov
idivl
cmp
adc
sub
repz
push
pop
in
mov
sti
test
clc
sub
ljmp
jl
fdivrl
xchg
sub
xchg
outsl
cmp
inc
adc
sti
dec
iret
push
call
adc
cmp
pop
pushl
xchg
push
xor
mov
subl
xchg
fs
inc
lahf
sub
jae
insb
dec
arpl
lret
cmp
test
mov
sub
imull
popa
pop
mov
jae
mov
mov
dec
cmpsb
jns
mov
pop
inc
jae
add
daa
add
out
mov
int
aas
inc
or
dec
shll
out
jb
mov
jge
mov
sub
hlt
jl
mov
xor
popa
and
xor
inc
jnp
mov
mov
push
mov
add
add
cmp
xchg
insl
mov
fwait
das
mov
pushf
jne
ret
daa
fmuls
push
push
outsb
mov
and
pusha
iret
fcoml
mov
xlat
cmp
pop
mov
sub
and
inc
mov
sub
pop
jge
push
subb
daa
xlat
xchg
adc
jmp
fs
dec
or
mov
adc
lahf
mov
in
mov
in
fwait
sbb
lcall
jae
jle
ror
mov
stos
xchg
and
xor
mov
in
sbb
dec
inc
sub
clc
add
pop
cmp
inc
pop
gs
daa
jo
mov
lret
std
xchg
adc
insl
mov
and
ret
lock
in
clc
jae
xchg
test
out
idivl
adc
jnp
fcompl
mov
xchg
fadds
les
repz
pop
inc
add
inc
xchg
iret
test
pop
cmp
rorl
sbb
out
jnp
xor
xor
nop
add
pop
ret
add
add
inc
stc
or
sti
xor
inc
pushf
addr16
imulb
sbb
filds
jp
fwait
sbb
sbb
push
repnz
aam
pop
mov
mov
mov
push
sub
fcoms
out
scas
jns
je
sahf
adc
adc
or
rolb
xor
inc
leave
push
lahf
ja
xlat
xor
enter
push
rclb
xchg
call
cmp
or
lea
cmp
adc
jb
add
and
or
mov
jae
sub
cmp
sub
daa
dec
sub
aad
fnstsw
cmp
loopne
mov
sub
adc
add
mov
and
cmpsl
jo
inc
popa
lds
rol
das
dec
dec
dec
mov
rcl
push
and
pushf
in
jbe
push
ljmp
icebp
xor
xchg
aad
ficomps
mov
clc
fstl
test
push
dec
repz
jbe
sub
mov
pop
cmp
push
xor
sarl
mov
sub
mov
in
push
mov
xchg
xchg
sub
jno
inc
sbb
xor
outsl
imul
sub
mov
sub
and
jo
ss
in
outsb
mov
mov
xor
cwtl
lods
repnz
ror
cmp
imul
jp
js
jmp
mov
jp
in
popf
imul
std
rorl
in
xchg
mov
xchg
ljmp
mov
ret
xchg
mov
xor
mov
int3
popa
dec
movsb
lret
push
inc
mov
ficoms
push
sbb
mov
in
jno
or
jg
movsb
sub
jae
push
dec
rorb
les
adc
sub
cmp
int
lds
mov
adc
inc
imulb
cmp
insl
sub
inc
pusha
js
cmp
adc
or
pop
jmp
pop
popf
or
push
addr16
ret
jnp
jo
mull
adc
jb
xchg
mov
push
add
outsl
gs
ret
icebp
inc
push
xor
xchg
adc
aaa
hlt
sbb
orl
jbe
mov
sub
imul
ret
lcall
subl
dec
ret
dec
sbb
mov
xchg
shrb
inc
in
pop
mov
adc
xchg
test
cmp
loop
sub
xlat
mov
pop
add
dec
aam
inc
movl
insl
push
sbb
xchg
imul
push
out
pop
fidivs
mov
mov
pop
stc
lds
ret
lea
out
in
sbb
outsl
movsl
das
inc
push
dec
mov
adc
xchg
insl
hlt
mov
lret
xchg
and
xor
mov
hlt
jg
arpl
pop
std
aad
in
mov
fldcw
inc
in
lahf
inc
push
xlat
adc
scas
xor
adc
jle
enter
lea
xlat
mulb
fdiv
xor
out
lahf
mov
bnd
into
mov
nop
mov
jo
aas
imul
add
mov
gs
and
sub
push
xor
mov
bound
int3
in
push
push
fisubrs
push
mov
shlb
roll
fimuls
and
or
mov
or
stos
xor
mov
rcl
push
add
bound
cmp
mov
jbe
add
xchg
jbe
or
les
cmc
mov
iret
jle
les
in
and
cmc
mov
add
iret
stos
fsubrs
ret
fcmovu
aam
loopne
mov
fwait
lock
lcall
in
loope
inc
jb
mov
inc
stos
add
sbbl
subl
adc
sbb
pop
or
int
dec
clc
shlb
mov
pop
fisttpl
pop
cmp
jmp
xchg
push
mov
sti
sub
cmp
cmc
gs
lret
xchg
and
push
jnp
insl
lahf
push
rorl
cmp
mov
sbb
sub
insl
pop
cwtl
dec
mov
inc
jle
insb
dec
test
into
test
outsb
dec
sti
loop
mov
xor
mov
lods
dec
push
xor
cli
add
pop
lret
cmpsb
add
xor
aam
arpl
ja
xchg
out
adcb
push
adc
movb
jle
lar
dec
addr16
jnp
out
dec
xor
addr16
shll
xchg
push
dec
lods
dec
shlb
cmp
scas
pop
stos
jns
ss
frstor
fcoms
adc
js
xchg
gs
stc
cmp
sbb
mov
out
outsl
jnp
fmull
add
push
jne
sbb
pop
fidivrs
shl
mov
mov
sub
sbb
shll
mov
lods
dec
pusha
xchg
pop
jmp
add
out
lea
xchg
popa
gs
pop
loopne
jbe
movsl
popa
xor
popf
lods
pop
mov
cs
test
adc
stos
push
xchg
adc
iret
xor
mov
mov
outsl
in
adc
call
movsl
lcall
sub
mov
popa
fneni(8087
ret
test
in
pop
xchg
push
jl
insb
stos
inc
pop
imul
popa
insb
in
xchg
clc
pushf
mov
dec
test
xor
mov
jb
add
mov
rcrb
mov
int
leave
inc
or
mov
xor
add
shlb
pushf
fs
stc
or
out
sti
mov
into
inc
or
cld
sahf
fistpll
or
fwait
mov
stos
and
push
jl
fldl
mov
xor
ficomps
arpl
push
push
push
mov
or
mov
mov
jbe
or
aad
out
sub
xor
cltd
mov
ja
fnsave
mov
sti
subb
xor
hlt
push
dec
pop
mov
push
push
sarb
ret
js
dec
or
pop
leave
in
dec
js
dec
inc
and
in
jnp
cmp
bound
cmpsb
sbb
cmpsb
daa
add
aaa
jl
inc
aas
xchg
push
add
movsb
jb
outsl
pop
mov
test
push
call
sub
mov
mov
xchg
std
mov
sbb
pop
ret
mov
mov
data16
pop
scas
mov
iret
repz
in
movsl
mov
leave
inc
ja
sub
mov
fs
filds
pop
mov
lret
cmp
mov
aas
add
jl
cmp
dec
stc
pop
jae
idivb
mov
shlb
sub
mull
inc
dec
int3
pop
gs
and
ljmp
out
out
orb
jmp
jmp
loope
ja
jae
js
in
pusha
dec
mov
in
stos
inc
push
push
jne
inc
sbb
mov
dec
cs
jmp
lahf
mov
or
dec
rcrl
dec
das
aaa
nop
push
loop
out
mov
xchg
test
xor
xchg
fnstenv
mov
fwait
mov
lcall
mov
sub
cld
push
sbb
int3
and
dec
out
jle
lods
es
mov
pop
fdivrs
and
sbbl
mov
xchg
lcall
repnz
sub
loope
inc
or
mov
jo
and
rclb
pop
in
adc
xchg
insb
je
sbb
das
mov
push
mov
dec
mov
jp
mov
pop
notb
lea
inc
insb
lret
add
testl
ja
add
subb
and
cmpsl
leave
mov
push
ds
mov
add
push
push
loop
add
cmp
push
and
mov
jg
pusha
jp
addr16
fdiv
inc
pop
dec
nop
push
dec
mov
push
fs
psrlw
fmul
xor
xchg
subb
cltd
jb
stc
jnp
mov
addb
lock
stc
std
jns
cltd
gs
jae
data16
jno
adc
dec
lret
dec
xor
enter
in
add
rcll
sahf
push
xchg
daa
inc
pop
jmp
jg
cmpsb
sahf
jae
jl
into
nop
ja
xor
rol
sub
add
mov
pop
int
dec
sub
pushf
int
inc
fstps
inc
push
cmp
inc
mov
push
sbb
pop
fldenv
dec
imul
adc
and
push
in
dec
mov
sub
scas
rcrl
shlb
inc
or
cmc
dec
daa
push
dec
mov
enter
mov
and
dec
adc
mov
out
pusha
inc
add
pop
aad
cmp
sti
cmp
nop
lret
sub
mov
call
jae
das
insl
enter
int
ja
jb
rclb
aam
fwait
sub
into
mov
sarb
scas
fildl
sub
clc
cwtl
mov
loope
adc
push
xor
out
in
adc
call
mov
mov
pop
jge
ret
sub
cltd
xor
lcall
imul
mov
mov
rcrb
aam
bound
mov
push
xor
inc
inc
dec
ds
sbb
fcmovu
mov
bound
sbb
rorb
push
sarb
mov
dec
pop
leave
ja
lods
jmp
aaa
sti
jno
data16
imulb
pop
push
shll
test
dec
sub
sub
clc
xor
fs
in
idiv
aam
rcl
jns
mov
sti
or
jge
adc
push
jbe
imull
test
xchg
fs
xlat
dec
mov
dec
loope
cltd
dec
stos
rcl
push
fcmovne
cmpsl
cli
mov
pop
out
and
stos
mov
test
movb
xchg
add
mov
xchg
cltd
xor
jmp
push
inc
sahf
aaa
out
mov
or
pop
ljmp
cmp
adc
pop
mov
test
pop
inc
cmp
sub
push
mov
mov
mov
daa
mov
shll
inc
scas
jecxz
xlat
roll
inc
adc
rorb
clc
bound
mov
pop
je
sub
adc
jb
jno
call
and
cltd
xchg
jo
sahf
xlat
mov
xor
adc
pop
cmp
dec
ret
mov
fcompl
or
sub
rcrb
pop
out
popa
push
mov
sti
add
pop
movsb
bound
and
lods
enter
xor
pop
clc
or
pop
lahf
adc
outsl
xorl
cmpsb
rcrl
jbe
dec
xor
imul
out
cmpsb
jmp
mov
ret
push
cmp
jo
stc
pop
leave
adc
mov
adc
mov
out
inc
sbb
inc
sub
shll
outsl
push
push
lahf
adc
jmp
loop
call
mov
fmull
imul
sub
mov
pushf
pushf
imul
mov
jns
pop
sti
dec
fwait
xchg
clc
std
add
adc
ljmpw
dec
int3
jg
sbb
cmp
mov
mov
xchg
pop
sbb
xor
xchg
mov
int
clc
fcompl
inc
leave
cmpsb
push
push
xchg
dec
stc
xor
jmp
mov
mov
pop
data16
rorb
or
sbb
adc
mov
adc
in
adc
mov
das
add
call
adc
sub
mov
mov
ds
mov
fbstp
dec
mov
aad
xchg
lcall
add
jp
push
mov
mov
fldl
or
dec
push
mov
loope
ja
dec
jae
and
cmp
mov
xchg
jo
ljmp
sub
sar
inc
cltd
pop
sbb
mov
add
xor
cmp
fiaddl
mov
push
test
mov
or
pop
pop
pop
push
xor
sbb
out
scas
or
hlt
rclb
push
rorl
repz
movsl
sub
push
inc
out
ds
dec
jns
adc
add
cmp
test
cmpsb
ja
sbb
or
xchg
scas
dec
push
data16
pop
movsl
mov
test
iret
push
cmp
test
out
push
add
mov
xor
jmp
xor
test
dec
cmp
sti
mov
popf
push
aam
aad
rolb
pop
jmp
jns
sar
sbb
mov
adcl
out
sbb
xchg
cmpsl
stc
mov
in
jle
idivl
scas
mov
inc
xchg
sbb
jg
lret
mov
repnz
dec
inc
cmp
mov
stc
fs
inc
nop
push
mov
adc
leave
lret
movsb
adc
add
mov
into
inc
push
in
sbb
in
divb
cmp
notb
cltd
fcoml
fldcw
aad
add
sbb
daa
int3
push
push
jns
scas
adc
test
roll
mov
cmp
dec
jle
nop
fwait
xor
xor
lock
and
push
mov
imul
sbb
mov
imul
cmp
dec
cmpsl
or
cmp
stos
and
inc
jmp
push
sbb
mov
iret
not
cwtl
sahf
push
adc
lock
inc
call
push
or
jp
xor
adc
loopne
push
in
pop
pop
pop
shrl
mov
in
hlt
lods
ds
jbe
sbb
shrb
cli
bound
pop
pop
and
and
cmp
out
addr16
push
adc
push
push
cmpsb
sbb
cmp
ret
cmp
out
das
lds
xor
in
insb
popl
mov
dec
xchg
mov
jno
mov
fs
jns
ja
xor
pusha
cmc
lret
pop
repz
and
fstpl
cmp
or
sarb
jns
fisttps
mov
sbb
stos
roll
imul
xor
rcrb
das
aaa
gs
cmp
leave
cmp
jg
mov
xor
push
cmc
gs
xchg
nop
cmpsb
pop
rcrb
lahf
sub
outsl
jl
mov
adc
cmp
pop
test
pop
xchg
std
dec
fstpl
mov
and
out
pushf
scas
jno
int
ret
jp
pop
movsb
pop
mov
inc
sbb
add
lret
mov
fnstenv
dec
xchg
jns
pop
mov
mov
xchg
das
xchg
xor
pop
icebp
scas
inc
sahf
mov
ds
adc
xor
or
adc
push
into
cs
jge
cs
dec
mov
fs
fnstenv
or
repnz
jno
sub
fildl
mov
mov
imul
repz
es
mov
xor
ret
call
mul
pusha
adc
sbb
fildl
cmp
scas
subl
arpl
push
push
dec
sub
cmp
inc
leave
adc
test
addr16
into
jge
pop
hlt
mov
jp
jge
jns
pop
ret
and
lcall
mov
pop
jne
dec
mov
jae
sbb
xchg
enter
add
pop
push
cmpsl
cmp
lock
jl
push
xchg
rclb
adc
icebp
jmp
orb
mov
jae
out
xchg
imulb
push
jmp
push
sbb
mov
xor
divl
cmp
sti
mov
adc
mov
rep
cmpsb
push
mov
hlt
pop
sub
in
mov
and
pop
fcomps
mov
pop
aam
je
std
jns
or
or
jl
sub
movsl
sbb
mov
rcl
fstl
lods
incl
movzwl
cli
out
mov
cltd
cmp
jb
mov
xchg
mov
mov
cmp
jbe
out
mov
or
in
push
and
adc
cs
sub
clc
outsl
inc
out
ss
scas
es
adcl
mov
mov
mov
adcb
xchg
mov
fisttps
rorl
push
rorb
icebp
repz
sbb
cmc
pop
push
test
adc
lods
mov
mov
jle
insb
cwtl
sahf
stc
pop
mov
sub
imul
push
mov
out
mov
cmp
cli
and
repz
xor
xchg
or
andl
push
cmp
aaa
cmp
cmpl
xchg
aad
bnd
aaa
hlt
fistpll
push
sbbl
cmp
clc
lods
sub
testb
outsl
xsha1
cmpsb
or
int
hlt
dec
mov
clc
mov
push
push
shl
cmp
cmp
pop
insl
ljmp
iret
and
cmp
add
pusha
in
cmp
leave
out
addr16
mov
shl
and
dec
imul
pop
dec
mov
repnz
push
popa
jp
lds
out
stos
lret
rorl
jb
repz
add
inc
push
clc
cmp
mov
scas
dec
jae
insl
pop
xchg
jge
push
adc
test
cld
push
aas
pop
test
mov
insb
or
cli
in
and
sbb
jo
or
and
push
loopne
sbb
decl
sub
pop
loop
mov
popa
pop
mov
cmp
fisttpl
pushaw
jbe
stc
push
xchg
mov
sub
in
mov
and
and
dec
adc
lds
jbe
add
cmp
inc
movsl
in
cmpsb
cmp
sub
cmp
int3
loop
in
cli
into
add
pop
data16
mov
jns
enter
xchg
lods
push
das
out
dec
roll
push
imul
fcomip
jnp
outsl
in
adc
popf
adc
clc
rorb
or
mov
sub
xor
inc
adc
aaa
sar
pop
addb
adc
loop
testl
push
xor
jle
mov
jp
and
arpl
add
push
pop
flds
ret
pop
mov
sbb
dec
popf
lods
sti
xlat
pop
cmp
test
mov
loop
into
nop
repz
jae
scas
jo
sti
sbb
mov
mov
seto
test
cmp
rcrb
sbb
mov
push
loop
fildll
aad
mov
out
mov
adc
stos
xchg
adc
repz
xor
ljmp
jb
mov
test
xor
jno
pusha
mov
inc
fsubr
sbb
push
aam
enter
inc
nop
in
sbb
sub
cmp
push
jmp
push
push
jae
out
lods
push
ja
int
sahf
cwtl
mov
lahf
je
mov
out
pop
fsubs
outsl
rcr
jg
dec
add
stos
add
popf
mov
xchg
in
adcl
add
cli
mov
outsb
cltd
push
cld
mov
sbb
mov
add
inc
inc
out
cli
das
test
xchg
insl
das
mov
loopne
xor
cmpl
out
inc
sbb
jle
lahf
add
cmp
and
cmp
popa
add
cmp
cmpsl
push
and
dec
stos
mov
in
js
ds
rolb
pop
jnp
popl
aam
inc
inc
loop
sbb
in
lods
jmp
dec
cmpsb
push
mov
add
pop
and
into
mov
xchg
cs
or
dec
loop
inc
loopne
imul
inc
pop
jp
cmpsb
adc
les
in
mov
iret
sti
add
pop
jmp
int
jg
std
mov
add
xchg
mov
sub
jbe
ret
xor
mov
pop
fsubs
xchg
jl
mov
fmulp
cmc
sahf
stc
out
lret
cmpsl
imul
stos
xlat
cld
push
mov
mov
aam
lahf
mov
or
and
push
lret
ja
scas
sbb
into
sub
int
loop
jp
stc
shlb
push
fsubrs
test
and
push
dec
sti
inc
add
cmp
cmpsl
lret
test
cmp
fnstcw
insl
inc
lcall
dec
inc
push
in
jl
mov
inc
imul
inc
loop
mov
adc
mov
pop
ds
xchg
pop
test
ja
xchg
enter
jp
loop
adc
cwtl
cmc
xor
lcall
and
imul
divl
loope
scas
adc
fwait
cmp
int3
sbb
inc
mov
dec
neg
push
xor
push
mov
scas
xchg
mov
arpl
mov
in
imul
mov
fnstsw
aam
clc
notl
mov
lahf
sub
ror
in
inc
enter
cmc
daa
insl
call
fmuls
lahf
push
push
mov
mov
lcall
add
insl
mov
shlb
ss
and
in
inc
add
mov
or
int
bound
out
jl
ror
nop
fcmovbe
xor
adc
pusha
bound
in
addr16
popa
sbb
jl
jge
fstpt
xor
lods
scas
push
mov
adc
pop
jecxz
dec
and
sti
aam
out
fdivrl
and
jmp
sbb
add
leave
pop
mov
cmp
and
out
fistpl
adcl
inc
dec
adc
cmc
and
sub
insl
data16
clc
add
scas
push
and
cmp
xchg
dec
icebp
and
arpl
mov
pop
mov
push
push
icebp
popf
sub
inc
mov
or
or
test
jb
push
cmp
imul
out
push
or
stos
or
loope
add
in
pusha
mov
pop
dec
pop
outsl
test
bound
in
mov
jnp
imul
lods
je
jbe
ljmp
pop
sarb
or
push
mov
pop
mov
jbe
insl
sbb
mov
jp
out
gs
std
popa
sbb
popa
xchg
cmpsb
jno
pop
in
stos
cmc
mov
mov
sbb
pop
mov
cwtl
outsb
pop
cmp
psrad
sbb
icebp
fwait
jbe
and
mov
aas
cwtl
in
andb
cmpsl
and
inc
cmp
shl
lods
jnp
xchg
mov
mov
pop
mov
ljmp
cmpsl
xor
adc
mov
mov
mov
xchg
outsb
adc
inc
scas
daa
add
movsl
jns
dec
xor
or
lock
push
jns
iret
dec
mov
sub
jo
jae
inc
insl
std
rorl
popa
adc
pop
test
xchg
loop
cltd
negb
dec
cmpsb
cmp
mov
pop
in
stos
xor
mov
outsl
js
pop
xor
mov
stos
or
aas
icebp
or
mov
mov
dec
mov
pushf
xor
sbb
imul
xor
push
outsb
cmp
dec
xchg
shll
in
outsl
add
lret
pop
xchg
addb
mov
cmp
aam
xchg
jp
and
movsb
or
call
arpl
loopne
mov
rcrb
hlt
icebp
scas
cmc
dec
cmp
add
mov
das
bound
mov
push
cmp
repz
mov
mov
push
mov
jnp
cmp
loope
cmp
imul
mov
mov
pop
pop
xchg
rorl
stc
pop
mulw
cmp
mov
jno
lods
mov
dec
push
lods
mov
cmpl
into
cmp
lods
ss
push
inc
pop
js
out
shl
jo
popf
jp
daa
iret
loop
test
pop
movsb
nop
inc
bound
mov
push
xchg
or
sahf
jns
mov
insb
mov
jl
movsb
loopne
jo
ss
pop
gs
jle
leave
cli
pop
dec
stos
sub
adc
sbb
cltd
add
or
in
sbb
aad
daa
xor
and
cmp
aaa
in
pop
adc
jnp
inc
stc
mov
out
dec
adc
ds
call
lcall
cmp
xchg
repnz
loop
test
inc
push
mov
mov
xor
jp
mov
sbb
insl
je
add
jmp
ljmp
mov
sub
pop
aaa
xchg
mov
je
push
or
cmp
sub
jo
fcomi
fistl
xor
jno
xchg
inc
int
dec
mov
stc
outsl
fcoml
add
daa
ljmp
leave
test
push
imul
jl
mov
xor
das
pop
pop
call
sti
dec
out
cmc
fiaddl
mov
in
pop
mov
fdiv
lea
jae
inc
testb
and
xchg
shl
mov
jae
jg
divb
sti
dec
xor
fidivl
in
in
fists
sarl
clc
fincstp
fstps
mov
outsl
cmpsl
xor
aas
lods
loop
das
mov
xor
inc
mov
sub
inc
rclb
push
jl
or
test
js
inc
mov
das
inc
outsb
ds
in
mov
or
xchg
adc
lea
and
or
dec
mov
mov
std
sarb
cs
fldcw
enter
sub
insb
xchg
cli
imul
into
insb
fcoml
lahf
mov
out
xor
imul
nop
jg
jbe
fistpll
ss
add
cs
inc
test
mov
cmpsl
int
ret
dec
nop
out
popl
mov
cmp
push
and
ds
push
lock
xor
mov
filds
in
push
inc
imul
mov
lret
push
mov
cmp
xor
call
push
push
mov
mov
xchg
push
rcrl
stos
shrl
push
or
call
jne
lds
ljmp
subb
aas
jns
jne
push
inc
scas
cs
sahf
jno
xor
push
jmp
sub
mov
mov
in
push
push
inc
leave
cmpsl
aad
jno
shl
pop
jl
in
xchg
pop
sbb
cltd
fdivrl
dec
or
pop
pop
in
jmp
hlt
sub
dec
fisubrs
xchg
mov
lcall
pop
cmp
or
test
stc
xchg
divl
incl
mov
mov
stos
and
dec
loop
sub
cmp
cmp
pop
push
mov
test
ja
shrl
mov
add
fildll
fstpt
lea
sub
es
sub
ljmp
mov
push
scas
fnsave
fsts
add
rclb
dec
cmc
popf
hlt
fwait
in
mov
sahf
sub
orl
xor
jge
fwait
pop
fimull
inc
arpl
insl
subl
push
or
icebp
ljmp
pop
stc
push
mov
sub
xlat
pop
adc
adc
or
popf
lcall
outsb
loopne
and
push
fidivs
or
dec
or
out
lods
lods
sbb
cmp
sub
sub
fidivrl
push
aam
jne
add
std
jnp
mov
push
lcall
rclb
sub
jmp
aad
dec
andl
insl
sub
xchg
or
das
cli
dec
mov
mov
inc
or
xor
repnz
int3
lea
push
add
sub
ret
int3
hlt
lock
test
jne
addl
shlb
adc
sub
pop
push
cmpsb
mov
sub
in
pop
add
cld
jns
inc
jge
in
lahf
cmp
aad
jae
xlat
xor
pop
aam
jge
inc
push
sbbl
pop
push
shl
int3
fists
ret
push
push
js
cmc
jbe
loopne
or
xor
aas
pop
jno
jo
jmp
out
test
xor
mov
adc
push
into
inc
addr16
insl
test
xchg
mulb
fstl
inc
cmp
or
jno
fildll
mov
cmp
mov
jle
addr16
sub
push
push
and
popf
mov
fidivl
sub
push
or
ficoml
aam
stos
inc
stos
mov
sbb
cmp
mov
and
cmp
xchg
mov
jmp
aam
mov
push
and
and
and
xchg
dec
cld
popa
or
sub
and
mov
add
std
dec
mov
out
enter
mov
pop
out
cmpsb
cmp
jecxz
imul
jne
jns
shl
sarl
imul
imul
cmp
out
outsl
inc
js
cmp
shll
addr16
stos
pop
cmp
push
pop
movsb
pop
sub
insl
jns
sbb
xor
js
jo
or
sbb
mov
mov
je
add
outsl
out
xchg
mov
fisttpll
jp
inc
add
lcall
mulb
xchg
je
pushf
fs
push
jg
daa
jno
addr16
cld
mov
add
dec
aas
shll
cmc
push
mov
outsl
fnsave
mov
fdiv
mov
push
aad
out
cmp
test
jne
addr16
jno
shlb
cmp
out
mov
jle
jns
ja
movsl
mov
outsl
daa
nop
pop
std
das
xor
mov
adc
pop
sar
js
jne
pusha
xchg
push
cmc
push
mov
push
jge
in
and
addl
jmp
stc
int3
imul
add
pop
and
sub
cwtl
mov
jge
shll
cmpsb
ja
and
or
xor
adc
adc
aaa
or
mov
or
mov
jg
sbb
clc
adc
pop
inc
add
fdivrs
sbb
jmp
push
pcmpgtb
insb
fs
pusha
pop
mov
push
js
xor
ret
adcl
xor
out
sbb
fs
cmpsb
jns
push
dec
out
mov
ret
out
call
xor
dec
xchg
lret
sbb
mov
cwtl
xor
jno
repnz
insb
jl
aam
sbb
xor
sbb
or
mov
xor
inc
aaa
fcoml
test
ss
pushf
mov
icebp
into
push
push
aad
outsl
mov
mov
add
push
inc
mov
or
xor
repz
or
cwtl
pop
sub
mov
mov
repnz
add
cmp
mov
ljmp
sub
cltd
scas
push
add
test
ja
pop
dec
mov
adc
adc
mov
sub
lret
dec
inc
xor
out
dec
insb
dec
call
in
xor
ja
fisttpl
out
and
dec
rolb
incl
aaa
mov
insl
gs
stos
fadd
cmp
mov
rclb
mov
mov
test
sub
jge
or
pop
call
loope
xchg
mov
nop
loopne
dec
lahf
shll
je
push
xchg
fwait
cmc
cmp
cli
and
sbb
mov
stc
xor
lahf
mov
pop
movsb
testb
call
out
jo
lea
push
lock
aad
std
adc
andl
stc
addr16
iret
dec
inc
pop
pop
insl
pushf
and
ja
sbb
jb
gs
sbb
test
pop
and
in
inc
jns
add
js
cmc
cmpsb
ljmp
push
in
icebp
lods
imul
outsl
mov
lock
inc
fisubrs
or
mov
xor
in
push
mov
rorb
adc
cmp
je
sub
sbb
add
out
cli
out
lret
mov
pusha
fsubrp
scas
xor
add
repnz
test
insl
andl
dec
dec
add
clc
xor
pop
mov
stos
dec
pop
mov
test
cs
xchg
sub
cmc
cmp
cmp
adc
lcall
dec
add
mov
negl
in
cmp
pop
sysret
mov
push
mov
jns
pop
push
jl
lods
lret
ds
xchg
xlat
cmc
push
inc
push
enter
cs
leave
mov
pop
cli
sahf
and
mov
gs
mov
testb
fs
shll
mov
dec
sub
jecxz
rcrl
adcb
inc
pop
pop
mov
mov
xor
pop
test
ljmp
xor
pop
repz
xor
mov
mov
icebp
xchg
sbb
mov
scas
push
mov
pop
adc
fmuls
inc
std
push
insb
ss
je
clc
cld
sbb
inc
push
fs
cmp
cmp
jle
test
enter
or
ds
mov
mov
in
jno
scas
pushf
cmpsl
jns
sbbl
addr16
je
mov
cmp
jp
inc
das
incl
jo
cmp
pop
negl
hlt
and
stc
fwait
test
lret
aaa
and
lock
fdivl
xchg
mov
or
test
sti
jecxz
aam
popa
mov
inc
xchg
les
dec
imul
sti
cmpsl
fdivs
stos
repz
mov
mov
aad
jbe
popa
ja
adc
add
sbb
inc
daa
fstpl
fistpl
mov
mov
dec
push
cmp
and
mov
dec
daa
or
rcrl
sti
fcompl
aam
pop
xor
or
fxch
mulb
pusha
add
jg
fstps
stos
mov
out
jns
mov
movsb
pop
pusha
sub
insb
dec
les
xchg
aad
fildl
mov
pushf
pop
inc
xchg
incb
loop
sti
adc
aaa
add
jbe
cmp
xor
mov
adc
insl
inc
push
fisttpll
lret
shrl
idivb
xchg
addr16
sub
pxor
push
andl
imul
fs
pop
popa
adc
push
or
pop
mov
dec
imul
jno
ret
pop
daa
jbe
jmp
push
pop
sbb
mov
test
mov
mov
mov
stc
or
je
dec
lcall
mov
sub
and
inc
fsubs
pop
enterw
inc
std
xchg
push
xor
xor
inc
pcmpgtd
testl
cmp
or
clc
arpl
loop
ja
lcall
jp
nop
imul
stos
and
mov
gs
push
iret
icebp
cmpsl
inc
stos
fimuls
loop
push
add
inc
and
out
data16
leave
mov
push
rclb
mov
mov
enter
pop
adc
or
stos
and
xor
sarl
inc
adc
cli
and
std
addr16
fwait
pop
adc
out
sub
ljmp
push
adc
jno
in
cmp
ja
in
jmp
xchg
mov
jne
lods
ret
mov
imul
cmp
pushf
fcoms
into
cwtl
push
div
dec
mov
sti
popf
leave
push
pop
in
lea
pop
cmp
inc
pop
mov
push
pop
pop
shll
sub
punpcklwd
lret
int3
rorb
in
js
pop
dec
mov
movsb
pop
in
add
fadds
mov
add
ljmp
adc
sub
sub
fiadds
or
mov
leave
sub
std
mov
cmpsl
xchg
mov
notl
mov
negb
adc
inc
mov
and
ja
pop
adc
lcall
lret
fildll
sbb
fdivrp
mov
imul
xchg
dec
add
pop
leave
push
fidivs
xchg
popa
test
test
xor
inc
cli
ret
cmpsl
imul
loope
add
inc
or
pop
mov
pop
xchg
adc
fcompl
bound
je
xchg
mov
sbb
dec
in
jne
ret
inc
or
pop
xchg
movsl
jp
push
jae
imul
adc
inc
fldenv
nop
and
mov
inc
lea
push
imul
out
adc
enter
in
out
leave
rclb
sar
mov
test
jmp
lret
push
and
dec
add
mov
flds
f2xm1
aad
inc
jb
jo
mov
rcll
jno
fcmovbe
in
lret
adc
dec
int
mov
rolb
dec
xor
dec
in
cli
ret
mov
sub
data16
addr16
sarb
xchg
out
jle
or
or
repnz
adc
jae
ret
cmpsb
fsts
mov
jbe
aam
outsl
iret
loopne
shlb
cltd
lods
and
xlat
jp
rolb
xchg
shrb
stos
rcll
imul
push
xchg
stc
adc
cltd
movsb
outsl
mov
repz
cmpsl
inc
gs
cmp
push
mov
mov
dec
aaa
adc
es
adc
movsl
jbe
lods
add
inc
mov
sti
xlat
loopne
mov
pop
loope
adc
mov
sub
test
iret
xchg
or
inc
jns
push
cli
adc
lods
or
push
add
fs
pop
hlt
sbb
dec
adc
fcom
rcll
push
gs
out
and
cmpsb
push
xor
loope
xor
adc
mul
xchg
movsb
add
add
dec
test
pop
pop
mov
jnp
cmp
dec
neg
push
push
fnop
inc
xor
aad
int3
xor
sbb
fwait
or
jb
cmp
fldcw
sbb
xor
jp
aaa
ret
sbb
dec
shll
movsb
or
lcall
cmpsl
int
sti
cmp
push
sbb
xchg
sub
pop
in
inc
sbb
mov
leave
lds
sbb
sti
mov
ss
stc
callw
dec
lcall
imul
xchg
cwtl
cmc
push
fcoms
inc
pop
es
call
js
push
pop
aas
js
inc
mov
fisubrs
test
clc
add
aam
dec
and
xor
mov
mov
sub
jmp
push
jbe
jnp
call
adc
scas
or
repz
cmp
pop
inc
out
cmp
push
push
pop
jecxz
inc
movsb
les
pusha
dec
rorl
or
adc
xchg
sbb
inc
mov
pop
mov
into
test
adc
mov
sub
test
mov
jb
frstor
pop
dec
js
xor
or
mov
fldenv
jg
jmp
cmp
add
pop
into
cmp
loopne
and
sub
push
mov
into
cmc
fisttpl
sub
cmpsb
dec
sti
push
dec
add
sahf
les
shrb
lahf
xchg
pop
xchg
jl
jle
cwtl
mov
or
stos
lods
dec
mov
xor
inc
mov
fbld
push
lcall
xchg
aaa
cmp
ret
cmpsl
sbb
xor
xor
or
mov
inc
mov
pushf
mov
loope
loopne
sbb
pop
mov
cmpsl
xchg
adc
jp
rol
mov
jg
cli
and
lock
sbb
inc
mov
inc
sbb
in
add
negl
push
and
and
lret
sahf
scas
push
hlt
add
mov
jl
outsb
sbb
pop
loope
adc
push
jnp
shrb
icebp
and
adc
in
popf
aam
and
stos
sbb
or
push
mov
mov
imul
fidivrs
mov
cmp
adc
cwtl
fld
mov
les
cmp
insb
sbb
aaa
aas
push
rol
xchg
ja
sbb
test
loop
pop
xor
push
push
push
subl
push
imul
xor
mov
sbb
push
lds
add
divl
xchg
push
pop
inc
cmovb
xorb
ret
pop
jne
mov
cltd
std
bound
and
std
or
out
sub
xor
xchg
xor
nop
and
movsb
dec
add
icebp
loope
sub
push
insb
call
adc
loop
jb
lcall
in
pop
fisttps
adc
pop
mov
adc
lret
in
subb
lock
xlat
aas
add
jmp
mov
sti
pop
jmp
pop
repz
stos
ljmp
test
pop
in
idivl
jno
inc
jbe
dec
out
sub
adc
das
inc
test
enter
cwtl
push
mov
pushl
into
inc
xchg
fadds
gs
cltd
mov
lahf
xchg
idivl
out
jb
outsl
or
mov
mov
addr16
dec
in
pop
cmp
sarb
fsubrs
dec
ja
add
pop
push
adc
dec
aam
push
js
mov
mov
data16
cmp
pop
test
insl
push
lock
mov
ror
dec
je
xchg
stos
int
push
adc
gs
and
jecxz
adc
xchg
shr
addb
test
dec
ds
push
fs
xchg
sbb
cmp
mov
stos
testl
mov
pusha
mov
dec
daa
sbb
adc
sub
pop
or
push
aas
adc
or
cmp
inc
mov
dec
or
xor
xor
popa
mov
loopne
mov
jnp
test
xor
sub
xor
pushf
insl
mov
call
fcmove
test
pop
xchg
inc
jmp
out
fcmovbe
sahf
cmp
pop
lcall
fwait
shrb
mov
mov
inc
daa
ud2
cmp
rcl
int3
xlat
popa
pop
sbb
sub
fstpt
rcr
xor
mov
bswap
xchg
outsb
inc
sbb
jecxz
pop
add
and
xchg
stos
stc
inc
ficoml
add
inc
mov
ljmp
ret
shrl
fs
xchg
dec
shrb
pop
sub
iret
rcl
mov
nop
cmp
lods
addr16
mov
pop
rcrl
sbb
cwtl
out
out
push
dec
cli
cmpb
outsb
lahf
push
lods
sbb
mov
xchg
adc
test
lret
adc
and
push
mov
cmp
push
mov
pusha
xor
addr16
lahf
enter
adc
arpl
fsub
add
xchg
mov
out
and
lret
sub
push
mov
adc
inc
pushf
sub
mov
add
push
test
jne
xchg
or
jp
imul
leave
ret
sti
xor
std
lret
xchg
xchg
add
clc
cltd
cmp
mov
mov
sub
cmp
mov
mov
mulb
xor
mov
and
repnz
or
lret
push
push
jmp
scas
xlat
aad
sti
cmp
xor
stos
adc
sti
cli
pop
mov
jmp
idivl
push
es
cltd
jns
cmp
subb
mov
mov
out
or
in
mov
lea
icebp
or
push
mov
in
lods
mov
push
bound
mov
xchg
pmullw
mov
shll
in
movsl
and
fcomp
cmp
imul
sbb
cmp
insl
adc
xchg
xchg
jg
pop
push
scas
stos
cwtl
test
ret
mov
int
xor
subb
adc
pop
push
add
ret
popa
daa
jle
and
jecxz
int3
jbe
shr
push
mov
xchg
insl
inc
ret
cmpsb
pop
stos
sbb
cli
push
xchg
mov
mov
jle
mov
je
cmp
mov
lock
sub
insl
stos
cltd
sub
ljmp
mov
pop
out
mov
inc
call
mov
sub
xchg
mov
mov
cltd
push
xor
icebp
xchg
push
daa
adc
mov
stos
cmp
jmp
lahf
loop
mov
xchg
xlat
mov
mov
stc
xchg
mov
fnstsw
xor
push
das
data16
ja
hlt
pop
subb
cmp
cmp
jl
add
scas
jno
push
mov
and
repnz
inc
adc
inc
adc
mov
sbb
ret
pop
cmp
mov
mov
sub
in
cmp
iret
cwtl
add
pushf
jmp
pop
out
push
mov
or
or
xchg
mov
mov
fs
insb
out
and
addr16
out
add
test
jnp
push
mov
pop
out
fiaddl
cltd
cmp
lock
xorl
xor
adcl
in
nop
add
ja
mov
pop
adc
inc
mulb
stos
addps
je
daa
cmp
lea
dec
push
and
xchg
mov
xor
cmp
insl
mov
lret
adc
or
cmc
jnp
adc
xchg
mov
data16
fsubl
ljmp
ret
into
sbb
add
dec
imul
inc
push
mov
and
loopne
arpl
fs
pop
out
ret
adc
subb
xchg
pop
dec
scas
lret
mov
daa
fdivs
icebp
adc
sub
ljmp
andb
mov
xchg
sbb
jno
cmp
arpl
jmp
hlt
cmp
pusha
cmp
add
or
xor
pop
jnp
gs
ljmp
add
mov
and
dec
pop
or
adc
pop
cs
ficomps
cs
mov
adc
cltd
enter
push
lahf
dec
add
xchg
aam
push
jp
je
push
into
mov
sbb
pop
pop
push
out
pusha
xor
rcrb
mov
js
fistpl
xor
pop
jns
inc
fs
xor
xor
in
jb
pop
test
jp
xchg
movsl
sub
dec
sbb
popf
in
rcrl
jbe
mov
scas
movsl
mov
imul
insb
outsl
std
dec
adc
dec
psrld
cmp
cli
stos
fcomp
popf
jmp
ret
or
add
push
or
xor
cmp
adc
cld
jae
or
test
int
es
cmp
inc
mov
pop
push
jne
push
imulb
jns
les
clc
mov
or
scas
out
xor
lock
dec
insb
pop
int
aas
fsubr
lret
push
inc
push
add
loop
clc
test
mov
popf
in
mov
dec
decb
xchg
add
and
adc
mov
push
push
repnz
imul
addb
mov
sti
push
push
cmp
pop
sub
lea
and
ret
ja
mov
mov
int
test
adc
and
cmpsl
xchg
std
repz
jmp
and
sarb
xchg
fs
dec
test
aaa
jbe
sub
and
dec
mov
push
jl
fs
popf
mov
or
and
cmp
mov
mov
add
pushw
jns
cli
ss
push
jmp
xor
inc
imul
lods
hlt
xchg
add
fildl
xchg
loope
cltd
outsl
pop
adc
stc
into
mov
cmp
or
fdivl
xlat
lods
and
lea
nop
xchg
movsb
pop
xor
inc
jl
sbb
push
shlb
jb
mov
call
jo
mov
jl
out
subb
dec
or
mov
cmc
mov
imul
mov
cmp
push
pop
sarl
mov
sarl
push
lret
dec
lahf
pop
in
lods
shll
xchg
and
aaa
jmp
popa
dec
mov
xor
orb
test
push
jb
jnp
jp
sti
test
xor
inc
inc
out
fld
insb
shll
and
sub
jne
movsl
pusha
sub
jne
ret
jp
fwait
in
subb
in
mov
sahf
xlat
mov
mul
mov
fistpl
cmpsl
sbb
inc
rcll
xor
mov
or
mov
pushf
mov
push
cmpsb
int3
out
dec
or
imull
inc
jmp
testl
jl
push
dec
ds
push
loope
jbe
sub
movsb
outsl
nop
out
aad
mov
xchg
add
xchg
dec
inc
jne
and
mov
mov
pop
dec
adc
rcrl
ret
adc
ljmp
stc
shlb
dec
xor
in
cmc
in
xor
popf
daa
test
xor
inc
fwait
jbe
mov
outsl
mov
cmp
into
das
les
les
out
add
out
hlt
sarl
rcrb
popf
xorb
inc
push
jge
sub
in
push
rorl
iret
xchg
jge
dec
dec
inc
dec
addr16
out
divb
cltd
fldt
aaa
mov
sbb
ret
push
cmp
fsubs
adc
shlb
scas
add
cmp
movsb
aaa
mov
jno
sbb
cmc
lods
scas
xor
cmpsl
push
ljmp
cmp
push
add
and
ljmp
test
and
inc
das
jp
jle
xchg
xor
pop
pop
mov
insl
loope
pop
movsl
rcr
lret
mov
sbb
xchg
insb
cmc
xor
fdivrl
pop
push
mov
pop
fadds
outsl
les
jo
cmp
jg
insb
pop
add
xchg
clc
lea
mov
sbb
mov
cs
shll
sub
movsl
xor
in
lods
xor
notl
jo
test
jecxz
xor
lea
cmp
lret
dec
out
pop
xchg
and
and
jne
mov
sbb
inc
add
loopne
in
adc
int
adc
loopne
push
or
inc
lahf
jmp
ja
loop
sub
sub
addr16
fldt
mov
add
add
sbb
inc
out
scas
mov
mov
pusha
dec
hlt
and
in
in
mov
and
jo
or
jns
xor
push
das
ja
mov
scas
nop
jbe
inc
or
sbb
outsb
jmp
cmpsb
adc
int
mov
or
out
imul
add
dec
ret
mov
mov
or
pop
sub
shrb
fcoml
push
cli
pop
inc
push
enter
loop
mov
test
pop
add
roll
jg
rorl
shrb
xlat
adc
mov
idivl
sbb
in
mov
addr16
sub
mov
xor
lret
enter
test
cmp
sbb
movsb
lods
xchg
mov
cmpsb
stos
call
jmp
mov
sbb
imul
mov
mov
lods
cmp
push
add
xor
mov
push
je
push
push
jbe
lcall
lock
add
leave
or
out
pushf
in
xchg
cmp
xchg
mov
xlat
aaa
hlt
je
fst
mov
sbb
leave
fiaddl
xchg
or
in
sbb
and
cltd
push
adcb
daa
mov
test
inc
repz
jl
jp
jecxz
rorb
dec
sbb
xchg
imul
in
sbb
or
bound
mov
sahf
mov
inc
lcall
ret
stos
movsb
movsb
inc
shll
cli
and
test
jp
dec
pop
sub
mov
push
popf
dec
xchg
jae
into
or
xor
cmpl
sub
repz
add
bnd
xchg
scas
es
dec
icebp
mov
jle
rcll
adc
push
or
xor
stc
jnp
and
mov
int3
es
lret
pushf
mov
push
push
mov
push
cmpsl
loope
cmp
ss
lods
stos
popf
or
in
xchg
stos
push
sahf
xchg
pushf
outsl
push
rcrl
cmc
xor
popa
and
inc
rsm
ret
loopne
dec
push
adc
pop
mov
mov
or
aaa
pop
pop
daa
push
shlb
pop
dec
js
xchg
daa
ja
add
add
push
mov
imul
jae
jb
vmovntpd
daa
in
lret
insb
inc
stc
push
push
fnstsw
jecxz
int
clc
roll
repz
sub
dec
inc
lret
lock
rep
shrb
pop
aad
xor
xchg
jns
sbb
push
add
in
loope
dec
mov
and
jns
lods
bound
int3
xor
mov
xor
mov
pop
adc
mov
mov
mov
mov
mov
jge
scas
and
insl
inc
add
andl
test
fcoml
lods
fstl
ja
jno
inc
lahf
dec
imul
jmp
sbb
xor
rorl
clc
xor
and
pop
lea
mov
stc
push
int
push
enter
fnstcw
outsl
int3
sub
int3
sub
sti
push
jg
addr16
inc
shl
loopne
insl
add
fisttpl
pop
insl
in
popa
and
jnp
test
push
dec
mov
sub
inc
sub
lods
out
or
int3
sahf
jmp
dec
add
xor
inc
xchg
mov
mov
xchg
enter
sub
addr16
testb
int
pop
ljmp
gs
int
push
xchg
int
test
aaa
dec
lret
jmp
push
sub
ds
out
adc
lock
int3
adc
shll
imul
xor
push
loop
mov
pop
dec
mov
mov
sub
inc
jmp
mov
ss
arpl
adc
mov
popf
pop
mov
sub
adc
push
subl
fidivrs
insl
sar
push
sbb
xchg
adc
pop
sbb
xchg
mov
insb
add
mov
xchg
mov
insb
adc
jmp
mov
sbb
xchg
jg
shrb
mov
mov
sub
mov
aaa
shl
dec
scas
sub
push
sti
push
incb
cmpsl
ss
aaa
test
std
cmc
mov
xor
ficompl
jge
call
into
adc
cmp
imul
mov
mov
nop
data16
dec
xorb
fcompl
dec
mov
jmp
mov
test
push
mov
loopne
xchg
cltd
sub
cmp
pop
mov
lock
mov
xchg
xchg
dec
inc
out
ror
jge
mov
aad
xor
pop
adcl
les
ret
movsb
cmpsl
mov
test
divl
jae
push
dec
lods
push
sub
jo
fwait
rorl
push
test
in
je
out
push
outsl
mov
jecxz
popa
fstl
dec
jge
add
sub
adc
mov
jbe
ljmp
jae
out
addb
fs
dec
mov
sub
in
add
add
inc
pop
aad
jp
ljmp
mov
psraw
mov
xor
shrb
fwait
stos
pop
fdivrl
pop
inc
leave
fwait
push
mov
fdiv
jo
shl
insl
cmpsb
std
idiv
cld
xor
es
into
fistpll
orb
pop
mov
cmp
inc
test
sub
xchg
stos
jl
loope
cmp
jnp
in
test
add
push
pop
outsl
xor
faddl
mov
pop
inc
sbb
xchg
jno
lock
cmp
add
insb
out
mov
xor
fcomi
mov
lret
pop
jg
mov
loop
and
pop
mov
lcall
jg
push
scas
sub
mov
outsb
enter
ret
lcall
cmpsb
mov
push
jle
in
js
fldcw
adc
jb
pusha
pop
sbbl
or
inc
sub
aad
sbb
mov
cmpsb
xor
inc
cwtl
push
dec
mov
push
scas
outsb
mov
hlt
lock
lods
outsl
gs
pop
sbb
jl
inc
jp
test
xlat
outsl
adc
int3
stos
jbe
into
mov
aaa
leave
mov
pop
imul
in
in
out
or
aam
ljmp
fcomps
pop
fimull
sti
pop
mov
push
mov
sarb
sti
aaa
xchg
mov
bound
pop
jp
mov
adc
ret
cmpsb
cli
jbe
add
dec
sbb
sub
fwait
stos
xor
sbb
pop
push
add
xchg
push
jbe
nop
push
sbb
insb
in
push
pop
lods
inc
jp
mov
mov
jg
mov
mov
daa
jmp
pop
mov
pop
in
cwtl
sub
out
loopne
push
pop
mov
insb
shll
pop
out
rolb
insl
and
push
xor
adc
mov
insb
aas
pusha
dec
pop
sbb
mov
insb
adc
push
push
pop
dec
lods
inc
lea
mov
jnp
add
inc
bnd
clc
lds
dec
mov
fcomp
push
into
cwtl
cwtl
pop
inc
je
jbe
xchg
int
sub
inc
inc
sub
push
adc
mov
sbb
mov
add
sub
orb
gs
sbb
and
addb
xorb
ljmp
adc
sbb
out
xor
sbb
fwait
jnp
enter
fdivl
sub
aad
push
aam
inc
je
mov
rorl
xchg
sbb
push
sbbb
push
jecxz
sbb
cmp
add
lret
cmp
mov
int
aas
lock
jo
imul
jl
fidivs
xor
fisttps
enter
gs
mov
ret
cmp
mov
inc
lret
push
cmpsb
rcrl
out
and
xlat
pop
mov
adc
mov
cmp
je
clc
jecxz
fiadds
js
mov
rorl
mov
xchg
adc
test
stos
xchg
push
sub
enter
int
pop
mov
dec
movb
xchg
sarb
stos
mov
dec
dec
dec
bound
adc
or
xor
lods
push
mov
and
mov
xor
jl
loopne
aam
jne
insl
sahf
and
pop
popf
or
cwtl
mov
jnp
roll
mov
in
fs
test
jne
cmp
push
adc
rcll
pop
fwait
dec
pop
cmp
and
mov
cmp
jge
jg
lock
sbb
xchg
jp
popa
into
or
push
sbb
and
cmp
or
jae
orl
xchg
mov
shrb
leave
cmpl
pop
inc
jno
andb
lds
mov
adc
mov
loop
mov
and
inc
mov
iret
lcall
dec
and
mov
rcrb
push
into
xor
dec
cwtl
push
and
je
pop
sub
leave
add
pop
mov
fdivrl
pop
cmp
loopne
push
or
pop
sub
adc
stos
lcall
mov
cmp
xchg
js
cmp
lret
je
aam
pop
out
mov
jg
sub
stc
mov
jl
test
pop
scas
xor
in
sbb
and
xchg
push
mov
andb
ja
jmp
insl
mov
data16
inc
jne
loope
shr
and
mov
pop
shrb
scas
lcall
outsb
int3
lods
jmp
xchg
call
inc
int
or
jg
dec
loope
jl
in
add
in
xchg
mov
les
xor
sbb
pop
inc
push
cli
int3
mov
jbe
mov
int3
out
cmp
cmpsb
cmp
dec
test
inc
push
sub
js
xor
rol
mov
push
xchg
xchg
aad
cmpsl
out
fbld
cmc
pop
mov
push
jne
cmp
and
into
sub
mov
inc
dec
cld
mov
ret
dec
testb
mov
outsb
jo
mov
inc
clc
div
test
push
sub
dec
fwait
out
cmp
cwtl
mov
mov
popf
adc
and
sbbb
dec
aam
push
call
xchg
call
add
cmp
out
inc
outsl
xor
into
xchg
xchg
mov
loop
fbstp
dec
cmpsl
lods
push
push
outsl
xchg
iret
cmp
test
xchg
xchg
dec
in
dec
jae
sbb
loope
out
cmp
push
add
add
mov
das
mov
ss
dec
jmp
out
loop
push
test
sbb
repz
aas
cmp
or
xchg
xchg
cwtl
mov
xchg
mov
push
xor
call
in
lret
xor
inc
sarl
lods
shl
aaa
andl
cld
add
cmp
dec
nop
outsl
cltd
mov
hlt
cmpsl
out
lock
test
aad
and
aaa
adc
xrelease
pop
clc
shll
ljmp
nop
xor
adcb
lcall
rcll
hlt
mov
sub
adc
test
data16
in
jge
in
and
mov
jl
addr16
aam
add
adcl
dec
mov
roll
rorl
cmp
dec
lcall
rclb
jo
loop
xor
popa
sbb
rcrl
mov
fwait
sti
mov
aad
cmp
adc
add
test
and
inc
and
add
mov
jge
addl
pop
icebp
pop
scas
pop
inc
cwtl
add
push
and
xchg
lcall
cltd
jo
ds
les
mov
add
mov
test
cld
outsb
aaa
cwtl
call
insl
pop
std
push
mov
pop
cmpsb
dec
xchg
pop
pop
pop
and
push
sbbl
inc
movsb
or
cmpsb
add
pop
jecxz
push
stos
adc
repnz
mov
inc
cli
sub
por
out
jno
mov
add
push
jno
outsb
leave
out
aam
js
cmc
ljmp
and
inc
adc
int3
imul
or
je
cmp
gs
shr
mov
mov
ret
xchg
mov
mov
push
movsl
cmp
pop
inc
mov
dec
xlat
fsts
or
add
inc
mov
jae
add
pop
imul
ds
loopne
sub
daa
dec
or
push
test
test
xchg
sbb
loope
and
xor
cmp
les
daa
mov
ljmp
imul
mov
test
test
mov
adc
add
lock
add
test
push
push
cwtl
sub
aas
pop
cmp
ret
inc
xchg
sbb
xchg
dec
movsl
cmp
std
inc
pushf
cmpsb
push
rorb
pop
notl
aaa
in
test
mov
insb
fnstenv
std
push
loop
ficoml
adc
sub
push
xchg
lea
inc
adc
inc
xchg
and
adc
loope
shll
adc
dec
in
testb
pop
inc
or
es
shll
add
imull
mov
ret
rcrb
in
daa
xchg
sti
inc
leave
inc
divl
mov
mov
jns
out
lahf
or
es
mov
jle
js
sub
out
ja
xchg
lds
xor
jbe
cs
lods
das
out
add
daa
mov
or
add
cmc
mov
lret
jo
je
xchg
mov
cmp
xorb
aaa
or
std
jl
cmp
jl
xor
xor
xchg
mov
sub
imul
imul
insb
jle
and
shll
lahf
aad
mov
xor
cli
mov
iret
mov
mov
mov
sub
insl
lret
pop
andb
push
jo
xchg
loopne
lock
outsl
sub
jb
fcom
sbb
rcl
lret
scas
push
int
aam
arpl
icebp
je
aaa
mov
cwtl
lret
cmp
inc
jae
sbb
cmp
clc
inc
test
mov
pushf
sub
subl
repnz
aaa
in
movsl
jo
out
or
push
cmp
popf
mov
daa
push
jmp
or
pop
mov
imul
insl
pop
mov
cmpsb
inc
and
lret
sub
cltd
dec
mov
ljmp
insb
repz
xorb
in
add
mov
sub
sbb
shrb
adc
jns
pop
cmpsl
and
jne
call
push
scas
int
mov
adc
jbe
sub
adc
stos
xor
int3
test
mov
outsl
pop
push
push
je
jge
rcll
adc
sbbb
fdivrl
rcrl
fmuls
mov
xchg
andl
repz
mov
aas
jecxz
sbb
or
mov
std
in
in
sub
addr16
lcall
bound
fs
das
insb
inc
jecxz
orb
adc
test
sub
shl
cmp
sub
test
xor
sub
aaa
stc
pop
sbb
pop
cmp
pop
or
fnstcw
repnz
cmp
and
pop
testb
adc
mov
ja
cmpsb
lods
push
daa
dec
push
sarb
pop
xchg
inc
shrl
pusha
mov
rcll
lea
fisubs
cmc
insb
push
jo
fcomp
mov
andl
sbb
andb
or
add
sbb
jae
clc
push
sarb
imul
mov
dec
sbb
inc
popa
xor
int
inc
call
lcall
orb
sti
jnp
adc
in
mov
mov
sbb
add
cltd
es
fsts
repnz
cmp
insl
mov
hlt
xchg
incb
push
scas
add
insb
imul
aam
out
sbb
pop
stc
int
mov
call
jnp
cltd
inc
cmp
mov
ficoms
sbb
dec
clc
imul
push
in
xchg
add
xchg
dec
or
add
push
pop
push
mov
mov
mov
movsb
scas
int
test
sbb
xchg
inc
and
fwait
clc
icebp
out
add
rol
pop
cmp
fildl
pop
fbld
xchg
mov
inc
fcoms
lock
add
das
roll
xor
sub
fsubp
fwait
pop
pop
pop
pop
push
push
and
inc
lahf
ds
lds
sarb
jbe
scas
scas
xor
xor
mov
mov
test
sahf
std
mov
and
xchg
jbe
ficomps
push
sti
sbb
in
add
inc
sbb
jns
xorl
sub
and
or
xor
sub
xchg
imul
mov
push
bound
js
out
in
int
enter
add
loopne
stos
cwtl
cmpsl
shr
push
outsl
stos
mov
subb
leave
adcl
mov
mov
push
loop
test
sar
fs
and
mov
imul
push
push
mov
xor
cwtl
adc
ljmp
push
dec
sub
test
insb
rcll
cmp
sub
fdivrs
inc
insl
xor
push
inc
call
mov
dec
testb
das
insb
je
repnz
daa
sub
test
dec
and
mov
mov
fstl
int3
test
jae
mov
mov
in
adc
dec
daa
out
adcb
clc
sub
xchg
mov
xor
mov
mov
or
xrelease
inc
sbb
cs
adcl
out
xor
incb
movsb
in
movsb
push
pop
sbb
xchg
pop
mov
in
imul
pop
ds
js
insb
cmp
scas
aas
or
inc
mov
dec
fsub
or
cmp
mov
lods
sbb
push
fsubl
sub
inc
movsb
imul
pop
pop
rcrb
jp
mov
pop
jbe
xor
aam
jecxz
pop
sar
lods
jp
les
sub
int3
sarb
mov
arpl
bound
inc
dec
mov
mov
ja
iret
sbb
bound
jae
pop
daa
repz
pop
cmp
add
vpmuludq
leave
lock
mov
mov
cmp
sub
push
mov
sti
mov
das
idiv
mov
xchg
jo
in
or
mov
mov
mov
dec
stos
pop
mov
push
ret
lods
hlt
pop
fidivs
ret
xchg
in
jecxz
test
repz
jmp
fidivrs
lret
adc
popf
mov
and
push
in
adc
insb
setnp
mov
or
aaa
imulb
cmp
jns
cmpsl
mov
xchg
sti
add
popf
mov
popf
mov
add
push
lds
jmp
movsb
mov
jl
fimuls
cmp
sub
aam
mov
rolb
mov
adc
xor
xchg
je
inc
add
lret
cmpsb
out
lock
inc
insl
dec
fsubl
push
out
sbb
imul
pop
je
addr16
cmp
enter
pop
pop
xor
lret
lock
add
imulb
test
and
popf
dec
movsl
mov
shl
inc
pop
pop
in
lds
movsl
push
dec
cltd
pop
aad
adc
in
sahf
and
cmp
jg
xor
movsb
mov
arpl
inc
and
push
aas
sbb
push
inc
aam
push
ficoms
aas
lock
cs
scas
iret
ret
pop
roll
pop
jmp
xchg
or
ficomps
arpl
inc
shl
xchg
je
pop
js
xor
ds
jecxz
icebp
cmp
inc
or
sahf
jb
repz
jp
fstps
gs
dec
pop
insl
daa
xor
stos
rolb
in
into
cmp
arpl
pop
stc
lods
jbe
nop
xor
pop
scas
outsb
out
aam
in
cmp
call
sub
add
and
fs
leave
loope
adc
outsl
xor
mov
imul
jno
push
outsl
inc
jl
in
xor
push
jle
dec
pushf
pop
push
add
and
mov
xchg
add
pop
clc
popa
push
out
addr16
mov
insb
sbb
adc
sbb
mov
aaa
xchg
xchg
addb
mov
push
or
fstpl
push
mov
aad
or
push
fldt
popa
cmpsl
mov
xchg
enter
push
pop
pop
out
jecxz
sti
sub
sub
lods
mov
xchg
lea
lcall
adc
sbb
mov
mov
push
in
cmp
aad
call
mov
sub
inc
adc
push
cli
ja
pop
arpl
inc
dec
add
js
ret
jmp
xor
cmp
or
cmpsb
fisttpll
mov
ficoml
or
jle
imul
popw
mov
or
mov
gs
mov
sbb
stos
or
mov
and
aad
pop
mov
mov
cs
dec
add
xor
bound
les
call
adcl
sub
cmp
xor
pusha
mov
hlt
insl
mov
adc
cwtl
adc
lcall
lret
sub
xchg
imul
push
out
mov
push
and
repnz
lods
shlb
cld
jo
lock
sbb
jbe
ljmp
xchg
sbb
sbb
dec
adc
xchg
jo
push
mov
cli
fcomps
popf
jmp
jno
or
in
jns
aaa
push
lahf
mov
sub
xchg
movsl
push
mov
push
xor
insl
into
sbb
add
cmp
push
xchg
add
mov
mov
or
xchg
push
mov
iret
xchg
and
insb
inc
data16
pop
mov
andb
imul
push
outsl
repz
mov
sub
insb
scas
or
lcall
adc
test
xchg
xor
xor
addl
cmp
jnp
fistpll
cmp
push
leave
sub
dec
mov
mul
iret
ds
jmp
push
sub
xchg
fwait
push
pop
nop
adc
dec
pusha
mov
push
pop
pop
inc
aas
imul
dec
adc
xor
clc
cmpl
dec
aam
jp
inc
xor
inc
adc
pop
sbb
inc
xor
inc
lods
jecxz
in
ds
push
xchg
es
in
mov
mov
cmc
in
xor
gs
xor
add
scas
adc
push
sub
sbb
cmp
fwait
xorl
jl
iret
push
shrb
inc
cld
in
sub
pushf
mov
dec
pop
mov
ss
mov
int
out
jo
lods
out
mov
shrl
cld
jae
dec
jae
cld
arpl
inc
xchg
or
ss
fidivrl
icebp
inc
mov
es
jecxz
les
pop
in
add
inc
sub
aam
mov
movsl
push
popf
je
lcall
sub
mov
cli
adc
call
cmp
mov
pop
int3
inc
push
aam
out
mov
jns
adc
xor
daa
sub
sbb
cwtl
popa
das
or
mov
in
push
inc
or
sbb
add
ror
sbb
add
popa
aad
in
push
pop
inc
scas
stos
cwtl
sub
fwait
adc
mov
and
dec
int
jbe
orb
les
sub
imul
or
sub
mov
xor
into
loope
pop
rorl
repnz
dec
inc
movsl
adc
and
xchg
pushf
loope
mov
shl
jl
jno
test
test
cmp
in
mov
movsl
loope
daa
mov
mov
pop
adc
dec
jae
bound
xchg
aaa
push
and
mov
jg
les
sbb
imul
adc
push
cmp
adc
xchg
or
fdivl
jmp
call
lea
adc
jmp
or
in
jle
dec
movsl
lods
mov
pop
adc
scas
mov
testl
imul
mov
rcrl
jo
fsubl
mov
cld
fisttpll
and
lret
xchg
push
push
xlat
add
ja
imul
aas
fldcw
push
adc
xchg
push
dec
addb
dec
std
outsb
cmpsl
or
xor
lock
int3
mov
cltd
repnz
push
das
test
xchg
das
andb
mov
adc
lret
pushf
dec
xor
lahf
dec
mov
aaa
push
negb
push
int3
sbb
jmp
imul
fwait
daa
outsl
sbb
or
addb
mov
clc
xchg
loopne
inc
leave
out
pushf
push
inc
pop
cmp
push
inc
dec
mov
xchg
sub
adc
cltd
pop
sub
icebp
push
rorb
cmp
xchg
dec
hlt
bound
ret
sarl
fwait
insl
movsb
xor
mov
ret
xor
push
in
xchg
cmp
adc
pop
or
and
imulb
loopne
ss
cmp
shlb
pusha
mov
adc
daa
in
inc
sub
push
jl
test
call
mov
sub
mov
repz
sub
and
adc
loop
inc
fwait
out
rolb
faddp
mov
dec
loope
jo
in
and
cli
dec
fsubs
out
popf
xchg
inc
dec
loope
je
aam
fyl2x
inc
mov
or
lds
jle
mov
inc
sub
movsb
aam
loope
fnstcw
pusha
lods
mov
push
jne
inc
sub
lock
cmc
pop
pop
bound
cmpsl
stos
int
stos
aaa
push
inc
popf
jle
inc
mov
xlat
xchg
inc
jne
push
aam
sub
mov
mov
lret
daa
rolb
sub
fwait
add
hlt
adc
push
sbb
nop
or
dec
stos
mov
xor
mov
xchg
or
test
repnz
inc
aaa
lret
in
sti
mov
scas
mov
or
jbe
iret
xchg
arpl
and
pop
mov
jb
daa
movsl
lods
xor
sbb
mov
or
out
mov
es
inc
jae
and
jp
out
mov
icebp
das
aad
or
or
mov
out
ljmp
pop
xchg
and
add
and
mov
imul
sbb
loopne
mov
push
mov
cs
mov
lcall
js
orl
nop
adc
arpl
mov
nop
icebp
inc
out
inc
mov
fnsave
pop
test
scas
adcl
sbb
les
sbb
sub
sbb
jecxz
in
rcrl
iret
dec
xchg
jbe
sub
leave
mov
pop
cmc
cwtl
jb
mov
adc
bound
push
mov
fsubl
or
and
sbb
test
inc
xor
aad
leave
push
call
adcb
dec
and
fnstenv
sbb
jge
mov
sbb
lock
fcmovnu
shr
in
sahf
mov
mov
mov
aas
fistps
enter
sub
pusha
idivb
push
sub
out
pusha
mov
mov
shll
mov
scas
jnp
fisubrs
mov
sub
std
iret
int
pop
jp
mov
mov
sbb
cs
xchg
inc
or
mov
das
add
cltd
iret
push
xor
rorb
test
ljmp
sbb
lret
shll
cmp
lods
jl
cmpsl
jge,pt
sti
adcl
fbstp
lcall
fstpt
adc
xchg
fwait
sbb
pushf
addr16
cs
shrl
and
dec
clc
lods
arpl
cmp
inc
repnz
and
lret
xchg
inc
cli
pop
pop
mov
bound
pop
mov
mov
jge
pop
pop
jnp
movsl
mov
pop
mov
xor
xor
sub
jl
sbb
loop
fwait
sahf
movsl
mov
popa
ljmp
inc
test
mov
inc
and
pop
jb
mov
mov
fistps
jmp
add
mov
fs
lods
add
shll
jne
xchg
pop
push
xor
xor
dec
lock
add
xor
out
js
inc
mov
xor
imul
int
jns
outsb
insb
fucomp
iret
pop
andb
fiaddl
mov
cmc
ds
shlb
sub
fstpt
add
push
aas
dec
mov
cmp
mov
push
adc
test
test
lret
dec
mov
mov
imul
je
je
and
inc
jnp
sti
mov
loopne
popf
int3
sub
dec
jg
mov
mov
cmp
cmpsl
lret
negl
movsb
xchg
or
lock
sub
push
shrl
idiv
push
and
ds
xor
test
sub
add
dec
xorb
dec
jb
addr16
mov
or
xchg
xlat
cltd
or
jnp
add
xor
dec
add
xor
pusha
or
movsl
pop
hlt
stc
pop
adc
into
jp
add
mov
lss
cli
lahf
nop
loope
push
leave
movsl
das
sbb
leave
jae
adc
or
mov
jp
push
ret
or
xlat
xor
outsl
in
sbb
mov
or
sub
mov
mov
add
in
shlb
movsb
xchg
adc
and
fucomip
pop
fadd
std
call
sub
idivb
inc
push
pusha
mov
int3
jae
xor
stos
sbb
dec
stos
ds
std
adc
cs
mov
pop
adc
and
lods
ret
aam
loope
push
ljmp
test
testl
popa
cmc
incl
pop
inc
fimull
repnz
mov
xchg
pop
sub
mov
jg
sub
mov
aas
pop
mov
addr16
fwait
sbbb
push
stos
test
cmpsb
lret
dec
lahf
movsb
push
icebp
or
lods
adc
std
sbb
ret
cmp
cmp
enter
stos
inc
leave
loop
xchg
jnp
pop
jge
xlat
inc
out
add
lcall
push
pop
xor
aas
mov
ret
mov
mov
ror
mov
xor
inc
in
push
dec
inc
call
jecxz
mov
into
inc
adc
jno
lret
xor
rclb
cmp
jo
adc
mov
mov
pop
pop
lret
scas
ljmp
loope
xor
push
dec
add
aas
icebp
lods
outsb
adc
xchg
sbb
inc
jns
dec
into
cmc
hlt
repz
rclb
in
fcmove
push
pop
gs
loopne
loope
mov
mov
into
jecxz
orl
sub
mov
loop
test
mov
adcb
mov
fidivl
mov
addb
sbb
popa
es
sarb
pushf
out
sbb
jno
mov
andl
lock
imul
sbb
cmp
and
ficoms
shll
mov
push
mov
int
adc
adcl
ja
test
jnp
std
xchg
pop
add
fistl
clc
ror
daa
shl
hlt
dec
push
sub
cmc
jo
jg
xchg
sbb
mov
dec
xlat
xor
jg
mov
outsl
scas
xor
shll
outsl
das
xchg
lods
shrl
push
lahf
loope
in
push
sub
inc
cmp
xorl
mov
outsl
add
pop
scas
add
rcll
das
mov
mov
into
jl
adc
xor
call
imul
xlat
out
ret
pop
and
pop
inc
dec
add
add
sbb
in
inc
jbe
enter
jecxz
arpl
inc
adc
xor
test
xor
jb
ficoms
decl
xor
lcall
icebp
fidivl
sbb
push
cmp
aaa
xchg
push
sub
push
pop
fs
sub
out
sub
fisttpll
ds
pop
pop
adc
jle
sub
cld
inc
cmc
pop
xor
push
pop
push
loop
mov
bswap
test
rcl
mov
nop
inc
pop
push
xchg
out
adc
out
mov
cmpsb
xor
lahf
loope
in
lret
gs
mov
rcll
ja
decb
fmuls
xor
repnz
jno
jmp
inc
sub
xchg
push
sbb
jno
imul
mov
lock
out
je
lods
rclb
mov
and
or
test
xchg
loopne
pop
push
popa
jbe
xor
stos
movsb
sbb
mov
subl
jbe
rolb
inc
adc
sahf
daa
xchg
pop
leave
ds
pop
push
jns
lods
lcall
inc
movb
icebp
rorb
mov
inc
or
or
lahf
add
inc
fcmovbe
and
inc
test
pop
je
inc
arpl
clc
mov
pop
mov
or
mov
ljmp
pop
xchg
cmp
adc
push
mov
pop
push
cmp
mov
add
pop
push
xor
adc
sbb
mov
lock
cmpsb
cmpsl
cmp
pop
shr
repz
xor
mov
es
out
push
sbb
push
insl
movsb
outsl
pop
imul
shll
fcmovbe
sbb
popa
dec
add
loope
cmp
lahf
ds
hlt
pushf
dec
inc
and
push
divl
outsl
sub
data16
ja
mov
adc
jbe
outsl
or
scas
jnp
mov
push
aaa
stos
je
mov
and
imul
cmp
inc
mov
fnstcw
sub
xchg
xchg
popf
xchg
lahf
in
push
cmc
in
xor
es
mov
add
adc
adc
adc
pop
lock
in
ret
mov
pusha
call
addb
in
rclb
cmp
stos
xchg
and
jb
sbb
adc
das
int3
mov
insb
and
rcl
sahf
push
test
mov
in
enter
xor
cmpsl
popf
jbe
stos
pop
sbb
xchg
inc
xchg
pop
rcll
roll
ficomps
add
inc
outsb
ror
daa
flds
pop
jno
dec
mov
mov
or
mov
or
movsb
mov
and
mov
idivb
push
sbb
fisttpll
test
or
adc
mov
aad
dec
xchg
sub
and
xchg
adc
out
popa
lret
into
push
scas
pop
mov
pop
loopne
in
aaa
or
mov
popf
cmp
inc
inc
int
jg
fs
out
movsb
mov
lods
fstpl
sub
nop
mov
or
outsl
xor
lods
add
jb
xchg
data16
rclb
scas
mov
sub
in
cmpsl
pop
jmp
fdiv
mov
cmp
out
cli
pushl
jg
xchg
sub
sbb
xor
xor
push
jb
push
sbb
jb
in
jae
pop
pop
mov
xchg
adc
outsb
dec
xor
mov
pop
lcall
adc
sbb
mov
mov
rorb
loop
jns
sti
jnp
scas
cmp
js,pn
int3
popa
jmp
mov
test
and
lret
inc
imul
popa
repnz
push
or
add
pop
sbb
jno
cmpsb
punpckldq
arpl
xchg
mov
inc
jecxz
pop
cmp
loopne
mov
xchg
dec
out
lea
into
sub
pop
push
xor
in
in
and
pop
sbb
test
xlat
sahf
xchg
into
push
cmp
lret
into
stc
pop
jae
rcr
test
push
dec
mov
mov
xor
mov
insb
push
ds
jo
pop
jo
je
repnz
pusha
sbb
fdivrs
jecxz
sbb
shll
nop
pop
jno
cmp
imul
add
clc
addr16
pop
mov
or
mov
push
leave
subl
add
test
inc
push
repz
pcmpgtb
stos
enter
je
mov
sbb
sub
and
aaa
in
add
hlt
scas
inc
stos
mov
movsl
jl
mov
inc
push
cmp
inc
scas
loop
fxch
sub
xchg
aam
mov
ret
adc
or
sti
and
mov
cmpsb
cmpb
les
icebp
xor
push
xor
mov
loope
nop
repz
test
mov
push
mov
gs
add
adc
inc
andl
lock
push
mov
outsl
orb
lahf
daa
sub
pop
xchg
test
and
xchg
inc
and
jnp
outsl
mov
out
xchg
lahf
aad
and
sub
push
movsl
pop
jb
cwtl
mov
enter
pop
pop
test
dec
dec
lods
add
popa
test
dec
dec
sbb
popa
pushf
xchg
hlt
sub
mov
scas
adcl
mov
stos
popa
ret
fsubr
test
xchg
arpl
sub
cmp
jmp
push
pmaddwd
push
add
in
imul
inc
scas
clc
jns
pop
outsl
add
test
in
xlat
jmp
and
roll
not
adc
out
out
lods
xor
fadds
adc
lock
dec
sub
dec
push
mov
mov
and
mov
add
push
cli
or
xchg
pop
mov
push
testl
xlat
in
aas
adc
jbe
or
lcall
pusha
lea
fwait
push
and
hlt
sbb
enter
sub
pop
addr16
int
sbbl
cld
addr16
lock
les
cmp
ja
add
mov
jb
dec
jae
scas
cltd
cmpsl
adc
mov
jno
xchg
cmpsl
push
aad
jle
pop
cli
rolb
sub
rorl
lcall
imul
addr16
xor
enter
outsl
rclb
pop
test
push
fdivrs
out
mov
pop
rcrl
ret
dec
cmp
das
cmp
fdivs
scas
outsl
test
mov
ret
das
adc
cld
inc
sahf
lahf
pop
inc
lea
jg
jl
insl
sbb
int3
jp
popf
insl
fsubs
lods
ror
cmc
out
add
insb
pusha
cmpsb
outsb
xchg
shl
mov
inc
xchg
mov
fsubr
xor
xchg
xor
cmpsl
in
xor
dec
mov
push
inc
jl
data16
mov
sarb
mov
pop
or
shll
fildl
in
fwait
push
cmp
adc
mov
jle
jnp
mov
mov
dec
ror
xor
pusha
in
dec
shr
outsl
cs
mov
push
add
cld
jg
mov
cwtl
popa
in
push
shr
movsb
inc
jae
mov
inc
arpl
mov
insl
and
out
inc
out
mov
enter
cmp
sub
adc
mov
jle,pt
inc
or
xchg
xchg
data16
dec
add
push
adc
mov
push
jo
mov
dec
mov
cmp
dec
push
jo
cmpl
arpl
pop
fs
loop
jmp
sub
xchg
jmp
inc
int
or
jmp
push
mov
push
call
dec
in
push
add
cmp
repnz
inc
gs
pop
fisubrl
and
stc
dec
std
and
add
icebp
negb
in
adc
lret
push
pop
movsb
rcl
and
notb
stc
push
aaa
sbb
xor
pop
movsl
cld
fistpl
dec
and
cmp
test
aaa
mov
jge
stos
pop
rorl
add
push
push
scas
or
dec
mov
cmp
jmp
xor
mov
ja
push
stos
or
jmp
and
adc
mov
jp
leave
jbe
fwait
pop
fucomp
ja
outsb
inc
pop
aad
icebp
jbe
mov
mov
jmp
mov
js
divb
arpl
and
rclb
add
testl
call
icebp
mov
push
adc
xor
and
jbe
call
scas
inc
push
inc
dec
dec
xchg
fisubl
push
and
das
mov
into
lods
sub
mov
lahf
xlat
adc
pop
int3
stos
or
or
fwait
scas
js
mov
sbb
or
inc
rcl
cmp
adc
mov
popf
and
test
mov
mov
pop
adc
or
xchg
xchg
mov
call
outsl
jno
test
push
push
pop
mov
jmp
mov
jnp
xor
scas
and
mov
cs
sbb
out
or
std
sub
into
mov
jae
int3
aad
pushf
cli
xor
outsb
xchg
cli
mov
popa
out
push
cli
xchg
cmp
xor
sbb
insl
push
mov
mov
cltd
fimull
repz
sub
divb
psubd
jge
sbbb
xchg
push
xchg
fisubl
jo
mov
jmp
lret
add
sahf
xchg
aas
cltd
mov
mov
pop
cs
push
mov
mov
mov
es
cwtl
cmp
xlat
ret
cmp
call
loop
jecxz
jno
mov
adc
mov
ds
cmp
call
enter
scas
lds
loope
add
imul
mov
add
out
pop
mov
lods
jo
sbb
iret
and
push
pop
lock
inc
xchg
add
jmp
test
inc
jg
xor
frstor
mov
lods
fucomi
in
sub
adc
arpl
mov
subb
jne
les
ss
daa
jb
shrb
xor
ficoms
ds
fcomps
js
in
shll
sub
sarb
sbb
push
stos
leave
adc
stos
jne
popa
add
lds
jae
andl
or
mulb
js
pop
adc
mov
lcall
ja
pop
sub
cmp
add
inc
push
xor
insb
xchg
stos
mov
inc
scas
xor
daa
imul
ret
add
in
push
sbb
popa
adcb
not
insb
mov
int
or
ds
dec
mov
and
std
xor
cmpsl
inc
xor
mov
push
lret
xchg
adc
add
pop
mov
ret
ja
xor
ds
push
xchg
cmc
mov
nop
jns
push
stc
lock
push
push
fisttps
push
fs
mov
xorl
repnz
call
fisubrl
push
lods
fwait
lret
popf
push
arpl
inc
cs
std
fbstp
popf
xchg
aaa
mov
gs
les
adc
insb
xchg
jg
enter
inc
sub
push
sbb
popa
dec
mov
pop
push
jmp
in
fs
jle
adc
testl
add
xor
push
and
pop
push
inc
inc
arpl
and
xor
daa
lock
sub
imul
xchg
jno
jp
aad
repz
mov
inc
enter
adcl
adc
repnz
jge
shll
dec
mov
mov
ss
jle
ffreep
shll
int
les
dec
xchg
popf
addl
mov
stc
aaa
sbb
dec
ficompl
repnz
popa
das
dec
mov
sahf
fdivrs
into
leave
into
mov
sbb
adc
or
int
das
mov
out
add
outsb
pop
pop
xchg
sti
cmp
mov
rclb
add
xchg
sub
loope
push
cwtl
and
jmp
adcl
out
adc
pop
dec
dec
fcoms
sahf
gs
pop
dec
stos
loop
mov
fs
xor
dec
and
in
adc
lahf
sbb
out
mov
cs
pop
sbb
ss
mov
and
sbbb
pop
jmp
dec
in
rep
mov
cmpsb
dec
rcr
out
inc
or
jmp
call
pop
sarl
xchg
rorb
lret
mov
xchg
in
lret
fsts
or
cmp
stc
push
pop
cltd
xchg
xor
icebp
adc
mov
aaa
pop
jp
inc
cmc
mov
psubusb
loopne
fsts
or
stc
cmp
aaa
repz
inc
pusha
pop
xor
nop
movsb
into
outsb
repnz
xor
enter
loopne
inc
mov
jbe
push
popf
adc
push
in
popa
es
in
add
mov
and
aaa
push
cmc
jnp
leave
jns
mov
popa
dec
push
les
fs
fadds
mov
jp
push
sbb
pop
test
jo
ja
cmc
push
mov
icebp
rol
xor
jae
xchg
test
ja
lock
xor
inc
loopne
inc
fsubs
adc
imulb
cld
mov
mov
repnz
test
push
je
pop
inc
mov
add
push
pop
cmpsb
mov
std
fs
fmuls
lock
lret
sahf
mov
ret
and
or
fwait
lret
push
imul
ss
push
and
test
out
insb
inc
jl,pn
cmp
xchg
aas
adc
sub
cmc
lcall
sub
xchg
sti
sbb
mov
push
xchg
xorl
idiv
leave
dec
xor
mov
mov
sbb
test
inc
inc
in
push
cwtl
popf
fs
lcall
sbb
and
std
icebp
jge
gs
sbb
loopne
aas
in
and
adc
pop
mov
pop
fisttpl
jp
cmp
jl
jle
mov
insb
aad
xchg
push
jbe
or
js
xchg
push
testl
icebp
and
pop
imul
cmpsb
add
into
mov
neg
in
lock
mov
cs
jno
jecxz
insb
sti
repz
mov
pop
jbe
pop
dec
scas
jnp
fisttps
loopne
outsb
dec
inc
push
lods
cmp
scas
and
sub
sahf
dec
and
sub
test
hlt
lret
gs
fucom
inc
fnstsw
in
test
sbb
lret
cld
pop
inc
movb
outsl
ret
and
jecxz
icebp
xchg
pop
sbb
inc
enterw
add
xchg
dec
repz
mov
mov
inc
pusha
and
test
or
pop
cmp
stos
std
mov
loope
inc
popa
jb
add
jne
cmpsl
inc
push
mov
adc
in
push
add
aam
sbb
pop
pop
das
pop
dec
pushf
dec
or
xchg
mov
push
or
call
mov
inc
push
mov
orb
jmp
inc
inc
push
iret
sti
jecxz
sub
add
test
pop
sbb
rep
es
les
add
xchg
and
jne
push
dec
xchg
mov
test
mov
addr16
mov
and
jg
push
lods
sbb
push
loop
push
sbb
push
mulb
into
loopne
addr16
movsb
ret
push
cltd
xchg
or
jae
mov
out
inc
cmp
fidivrs
mov
mov
and
ja
jmp
sahf
movsl
push
outsl
in
push
scas
push
and
xor
push
mov
jno
aad
roll
pop
jl
adc
jns
sub
xchg
je
dec
cli
inc
jle
popf
adc
jae
mov
outsb
mov
sub
pusha
lds
push
loop
xchg
cmpsl
push
sbbl
pop
sub
ficomps
divb
lea
cmp
jno
in
roll
std
inc
loopne
mov
leave
scas
cmp
pop
adc
pop
out
ljmp
sbb
xor
xchg
push
adc
into
inc
mov
les
sbb
push
pop
jno
cltd
shl
negl
push
dec
push
test
repz
pop
inc
gs
lods
add
int3
and
inc
cmp
or
insl
inc
xchg
add
lods
clc
cmp
adc
pop
arpl
lods
loop
cld
dec
xor
inc
nop
fwait
pop
addps
loopne
add
test
cmp
jmp
sbb
fmul
or
dec
adc
push
sarb
in
repz
push
xor
inc
pop
mov
daa
inc
mov
jb
adc
imul
sub
mov
mov
mov
enter
rol
xor
clc
shl
sbb
into
dec
sbb
jns
mov
inc
inc
ja
loopne
repnz
outsl
pop
or
ds
xchg
mov
aaa
xchg
lret
add
lods
add
gs
movsl
insb
pop
stos
scas
push
lret
shl
jp
ljmp
scas
cmpsb
sbb
cmpb
repz
hlt
xchg
aas
and
es
cmc
js
popa
push
or
xchg
xor
pop
cli
test
sub
dec
ffree
and
xorl
xchg
xchg
push
lahf
jecxz
pop
dec
in
into
ja
movsl
sbb
sahf
and
into
lds
outsb
fisttps
push
addb
cld
stos
sbb
push
ficoms
add
or
push
aam
sbb
cs
orb
sbb
leave
lcall
and
sub
loop
clc
ss
mov
fildll
lods
push
nop
hlt
incl
inc
mov
add
pop
imul
add
push
xchg
xchg
test
data16
into
sub
xor
lret
jo
cmp
xor
xor
cli
xor
xchg
addr16
sbb
orl
xchg
mov
pop
outsl
and
cmp
pop
inc
xor
xor
ret
pop
jb
push
sub
sub
outsl
ss
or
adc
andb
sbb
fidivrl
inc
popf
dec
cmpsb
aaa
inc
pop
xchg
or
or
cmp
sbb
sub
les
jle
test
mov
outsb
repnz
and
int3
mov
add
xchg
cld
bound
or
sub
inc
cs
ss
mov
jbe
pop
push
xor
enter
mov
sub
fsubr
icebp
and
add
xchg
sbb
outsb
pushf
and
push
daa
andl
fidivrl
mov
fldenv
out
dec
add
cli
and
cmp
lret
mov
mov
pop
roll
xchg
mov
jb
mov
lods
je
jbe
js
pop
fmul
jns
neg
hlt
mov
sub
sti
jnp
sahf
xchg
mov
in
jmp
add
inc
sub
mov
int3
inc
ss
shl
fsin
aas
mov
jle
fcoml
mov
xor
sar
sub
repz
imul
xor
loopne
ret
addr16
clc
cmc
sbb
push
mov
mov
bnd
mov
les
das
sub
push
popf
cltd
jo
out
jmp
mov
inc
rorl
cmp
sbb
mov
sahf
jmp
cld
imul
imul
je
in
fisubl
outsl
dec
ret
mov
bound
mov
push
jae
fisttps
mov
add
arpl
lcall
xchg
stos
cmp
sarb
push
in
jb
sub
xchg
dec
mov
ret
bound
negl
cmpl
mov
movl
cmp
sub
adc
out
cmp
mov
inc
pop
ds
sysret
decb
pop
add
xchg
lea
fists
sbb
sbb
loopne
ds
sbb
pop
ret
insb
imul
jg
popa
push
out
pop
mov
mov
push
adc
add
add
xchg
jns
mov
xchg
int
outsl
movsl
mov
orb
xchg
or
fdivr
fdiv
call
ret
mov
cmpsl
or
les
cmp
and
mov
ljmp
lds
mov
adc
aam
xchg
mov
push
lahf
cmpsb
push
sbb
hlt
sbb
mov
xchg
stc
ret
jge
pandn
xchg
nop
popf
mov
mov
fmulp
ret
iret
notb
loop
imul
icebp
sub
adc
adc
ret
imul
mov
dec
mov
lret
pop
mov
bound
stc
mov
mov
loope
dec
xchg
arpl
popa
icebp
leave
cld
jns
sub
cmp
inc
lods
jns
push
xchg
fsubl
lods
test
sub
inc
xor
test
add
out
push
jbe
filds
insl
mov
cltd
js
sbb
jb
pop
jb
jnp
out
gs
test
pop
and
mov
loope
jl
adcl
fwait
leave
pop
sbbl
push
pop
cmpsb
arpl
pop
les
lods
fs
sub
adc
lcall
mov
add
out
cmc
push
push
fcmovnb
and
clc
pop
dec
xlat
stos
jae
sbb
xor
pop
pop
std
inc
outsb
lahf
test
jbe
lahf
dec
call
aaa
addr16
push
movntps
das
mov
inc
insl
stos
hlt
mov
mov
xor
fs
jae
je
xor
nop
or
jns
add
incb
cmc
pop
cltd
repnz
sub
pop
ret
mov
daa
xchg
jge
cmpsb
inc
pushf
sub
jp
or
jg
push
call
daa
jnp
jp
shrl
dec
mov
cmc
and
bound
iret
jnp
xchg
push
push
push
and
xor
icebp
dec
pop
mov
sbb
in
int
pop
mov
and
push
xor
ficomps
or
xor
movsl
jge
je
mov
pop
sub
mov
rolb
jmp
shrl
dec
lret
insl
or
mov
cmpsl
jle
fsubrs
sbb
adc
mov
sub
mov
xchg
jmp
jl
movsb
mov
add
cmpb
out
dec
les
or
mov
outsl
jbe
xchg
nop
jnp
xchg
dec
lahf
mov
mov
xchg
fmul
pop
jge
add
jno
jmp
test
mov
int3
adc
arpl
mov
cltd
mov
dec
pop
adc
sub
iret
icebp
cwtl
mov
and
xchg
sahf
sub
sub
testl
sub
dec
push
scas
push
stos
mov
idiv
adc
add
scas
push
mov
sub
or
cmpsb
fs
mov
mov
rorl
in
cwtl
inc
mov
inc
sarl
and
in
ficomps
push
fcomps
shr
push
out
mov
cmp
dec
ljmp
movw
push
add
jnp
mov
cld
mov
xchg
cmc
jecxz
pop
xor
lock
pop
hlt
adc
mov
pop
push
pop
fadd
test
add
out
orl
aad
xlat
pop
ret
mov
pop
or
inc
clc
arpl
shl
xor
subl
flds
xchg
fadds
push
adc
xchg
and
mov
cmpsl
movsl
adc
sub
adc
outsb
rorb
jmp
or
xor
popa
add
ret
pop
cs
lock
aaa
add
bnd
in
push
sarb
rcrl
inc
stos
mov
cmp
push
stc
test
or
xchg
push
push
sbb
pop
nop
ljmp
cmpsl
sarb
xchg
xchg
loop
pop
sti
push
lods
add
pop
imul
mov
shl
cmc
pop
xchg
sbb
or
pushf
lcall
xor
rcrl
or
mov
mov
jne
std
adc
jb
rcll
mov
mov
mov
mov
mov
popf
xlat
inc
aaa
call
enter
cmp
mov
fnsave
bound
push
movsl
xor
lret
xor
in
mov
ljmp
es
xor
aam
inc
out
das
jg
pop
das
into
jmp
das
movsl
xchg
adc
sub
cmc
push
pushl
imul
int3
jno
sbb
add
xchg
cltd
push
sbb
dec
fstl
dec
loope
xor
and
adc
sbb
sbb
imul
mov
frstor
inc
clc
jle
gs
fcmovu
and
inc
adcl
sbb
dec
push
loop
in
cmpsl
xor
push
sti
in
dec
pop
xor
sti
xor
insb
push
sbb
mov
pop
xor
push
inc
pop
xchg
sub
lret
add
xchg
pop
sbb
push
xchg
mov
lds
fcmove
xchg
pop
repnz
ret
in
je
lret
imul
mov
add
mov
notb
jge
sarb
jnp
lret
add
adc
sub
pop
push
and
push
cmpsl
xchg
subl
jmp
aam
popf
icebp
mov
test
jae
lret
in
sbb
push
jmp
pushf
sbb
adc
fsubs
cmp
clc
lcall
sbb
cli
out
inc
je
sbb
sub
bt
mov
dec
movsb
jge
push
mov
lcall
pop
ljmp
mov
rorl
int3
or
lds
fucom
pop
insl
add
scas
sbb
mov
shlb
mov
pop
mov
xchg
in
ljmp
xor
jbe
lret
pop
dec
int
scas
xor
sub
sub
rolb
jo
fsubs
daa
fs
mov
push
sahf
fisttps
cmc
clc
outsl
in
lods
lahf
sbb
dec
cli
jne
loopne
push
movsl
insl
icebp
insb
adc
sarl
mov
inc
or
inc
mov
out
xchg
fsubrs
js
movsb
mov
inc
pop
xchg
jle
fstpt
sbb
fisttps
mov
mov
add
das
mov
mov
imulb
mov
mov
lahf
mov
cmc
adc
cwtl
fs
lret
andl
mov
loopne
xchg
jmp
jo
iret
push
sbb
popl
pop
mov
outsl
mov
push
aaa
push
inc
adc
mov
or
push
pop
cmc
repz
push
sub
xchg
add
clc
adc
ret
mov
add
add
xor
add
add
adcb
cmp
aam
aas
clc
sbb
mov
xor
lods
mov
setl
pop
inc
fwait
inc
mov
std
push
xor
sub
sbb
xchg
dec
scas
add
movsb
mov
pop
and
jns
adc
pop
sub
test
fldl
jge
jl
or
dec
cs
or
mov
push
sub
shlb
mov
hlt
sbb
push
test
fsubrl
add
into
inc
insb
dec
or
popa
cmp
mov
insl
jge
fmulp
mov
push
dec
or
pop
jns
lcall
data16
xor
imul
enter
mov
fldl
iret
adc
test
imul
jmp
push
sti
ret
cmc
ret
dec
cmp
aad
cmpsb
fwait
or
pop
in
push
orl
jo
sti
stc
pop
fcomip
inc
mov
roll
in
add
push
insb
xor
call
push
addr16
push
cmpsb
adc
adc
jecxz
add
dec
mov
cs
pop
mov
into
adcl
dec
lahf
fucom
jg
adc
cmp
movsl
sub
into
in
loop
out
jle
inc
dec
mov
mov
mov
scas
xchg
mov
push
adc
jge
cmp
out
outsl
mov
inc
pop
push
pop
dec
push
pop
xchg
cs
out
xchg
enter
sub
divl
push
jle
cwtl
add
mov
ss
dec
les
pop
out
mov
adcb
jbe
rorl
mov
pop
xor
imul
mov
push
xor
out
in
pop
cmc
xchg
daa
mov
mov
ja
test
cmpl
fsubrs
nop
int3
jnp
in
and
test
push
add
insl
mov
jno
test
ret
add
xor
jecxz
jnp
test
out
mov
inc
je
test
and
dec
mov
mov
mov
sbbl
cld
cmp
clc
fidivrl
jmp
shll
test
aas
clc
mov
loopne
daa
push
imul
gs
sbb
mov
lret
cld
out
pop
push
jp
cli
cmpsb
movsl
es
mov
xchg
cli
sarb
fnstcw
sbb
out
adc
pop
dec
sbb
out
xor
xor
and
cmc
pop
xchg
xor
test
sbb
sbb
inc
repnz
cmpsl
push
add
jbe
std
mov
mov
sbb
cmpsb
jge
rcll
int3
cli
jg
sub
cmp
ljmp
stos
hlt
imul
in
ret
sub
test
dec
shll
mov
xor
lret
cmp
mov
jmp
daa
mov
mov
xchg
andl
push
fnstsw
imul
fisubs
movsl
sahf
popf
xor
sar
cmp
pop
pusha
out
loop
dec
xchg
test
movsl
xchg
adc
fdivrs
outsl
cmpsl
outsb
movsl
out
aam
fs
sub
cltd
test
lods
sbb
sbb
mov
outsb
or
into
xor
gs
sub
daa
xor
es
cli
xor
lret
add
pop
and
mov
or
add
int3
mov
jae
adc
ss
psrld
sbb
inc
mov
sub
sbb
das
sub
lcall
imul
jns
mov
dec
popa
cld
lods
test
mov
pop
add
lods
sbb
in
and
jno
ds
dec
cs
inc
inc
in
pop
testb
inc
jecxz
adc
mov
mov
mov
mov
dec
pushf
scas
inc
mov
pop
daa
in
repz
add
xchg
ret
cltd
push
push
xor
int3
add
add
push
add
rcrb
popf
or
push
in
mov
in
ret
sub
xchg
mov
xchg
clc
pushf
push
outsl
das
ss
pop
mov
mov
fiaddl
sbb
outsb
rolb
mov
lds
sub
jge
mov
nop
xchg
mov
push
mov
and
dec
ret
aas
std
and
inc
add
imul
outsb
lods
popf
pop
jbe
adc
xchg
pop
inc
ljmp
leave
lds
testb
orb
sti
sub
pop
stc
les
in
cmpl
addr16
mov
lea
pop
addl
fists
lds
stc
fwait
stos
aaa
cvtps2pi
jge
inc
repnz
test
add
push
cs
std
fidivl
pushf
dec
mov
cwtl
mov
or
and
scas
add
test
cmp
ffreep
mov
test
aas
scas
fcmovu
sarb
popf
es
adc
and
inc
jno
and
test
push
ja,pn
sbb
push
outsl
pushl
insl
das
icebp
lods
imul
or
add
sub
cs
and
lcall
out
or
pop
pop
ss
push
xchg
data16
sti
dec
test
int3
dec
andl
adc
xchg
push
add
fisubl
ret
lret
fildll
dec
lahf
loop
aam
mov
test
aad
mov
fwait
xchg
scas
out
mov
mov
jl
mov
fs
xor
cmpsl
movsb
jbe
sar
fldl
xor
push
fwait
arpl
ds
data16
cmp
clc
sahf
loop
outsl
mov
mov
test
inc
outsl
fidivl
lahf
orb
insl
incb
div
inc
sub
sub
andb
sub
cli
stc
cltd
dec
sub
push
xchg
push
fdivrl
jle
add
sbb
mov
cmp
dec
mov
mov
cmp
push
cli
scas
aam
popa
push
mov
test
das
out
ljmp
push
xor
sbb
imulb
xchg
xlat
jp
or
push
in
dec
dec
xchg
mov
mov
out
fdivs
stos
adc
adc
int
movsb
cmpl
jge
repnz
mov
inc
sbb
fisttps
inc
cmp
jp
xchg
dec
or
or
imul
push
sub
fbld
cli
pop
sub
pop
bound
mov
mov
sbb
mov
xor
fldenv
xorl
aad
int
jb
xor
rcrb
lcall
dec
cli
jle
cmp
inc
test
sub
rol
sti
or
test
stos
hlt
in
mov
dec
lock
aas
inc
ds
jmp
popa
js
add
push
mov
cmpsl
packuswb
outsb
xchg
cwtl
and
aaa
pusha
call
mov
in
mov
imul
stc
xchg
xor
add
sbb
jmp
sbb
adc
sub
out
in
test
out
lret
inc
loope
xchg
pop
in
in
out
in
test
sbb
pop
jo
mov
fs
ds
inc
mov
mov
movl
fdivr
cmp
mov
ja
cld
jp
mov
scas
add
sub
jmp
loope
mov
and
lcall
dec
cli
nop
cmp
pop
pandn
outsb
in
mov
insl
cmp
jno
mov
mov
insb
repz
inc
inc
inc
stos
cli
jbe
and
push
js
mov
mov
ret
mov
mov
stos
hlt
mov
xchg
loop
enter
add
lods
lea
ljmp
and
ret
inc
jecxz
movsb
pop
inc
out
cmp
inc
imul
inc
dec
dec
xor
das
fnstsw
adc
adc
outsb
lea
dec
mov
xor
push
lret
sub
inc
es
outsl
jp
cli
lds
xchg
push
into
pop
inc
sar
jle
arpl
jg
cmp
xor
mov
pop
xchg
mov
sub
xchg
daa
lea
add
aaa
scas
les
mov
out
mov
or
mov
sbb
test
sub
imul
das
adc
sbb
ret
mov
mov
push
jp
dec
dec
xchg
cmp
lea
hlt
jae
push
and
mov
loopne
lds
or
sbb
imul
dec
lcall
add
sarb
mov
pand
pop
mov
clc
dec
loopne
cld
sub
loop
jl
in
jno
lock
and
xchg
jle
sbb
in
loop
xchg
jge
sub
cli
add
mov
dec
push
ja
stc
loop
or
xchg
cmp
jnp
lods
orb
jp
out
lcall
dec
mov
cmp
das
insb
mov
sub
fnsave
sahf
jmp
or
mov
xor
push
sbb
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
test
sbb
aam
and
insb
jmp
sbb
xor
in
lock
cmpsl
mov
test
inc
stos
pop
xor
dec
dec
in
jl
xchg
add
sbbl
dec
scas
xchg
mov
push
lods
popf
add
aam
and
dec
or
ficomps
aad
mov
jnp
repz
xchg
jg
adc
mov
and
sti
lahf
les
mov
xchg
xor
orl
loope
push
or
fs
iret
dec
mov
pop
mov
decb
pushf
clc
jb
pop
xor
xchg
sbb
jae
fwait
xchg
add
insl
xor
in
cld
or
lahf
xor
dec
cli
ficoml
mov
aad
inc
imul
ds
sub
add
in
outsl
push
dec
cmp
stos
jle
push
inc
jmp
in
push
sub
fstpl
dec
add
arpl
add
in
jecxz
push
repz
inc
cmpl
sub
push
jecxz
mov
jecxz
fcmovbe
ror
xor
bound
cli
loopne
jge
xorb
xorb
fcmovb
insl
lods
jno
xor
sub
add
insb
mov
or
outsl
call
sbb
enter
and
push
mov
lock
mov
addr16
jp
in
sbb
loopne
in
adc
imul
ja
stc
sbb
sub
cwtl
cmp
inc
mov
pop
and
sub
lock
mov
insb
in
or
dec
pop
cld
outsl
lods
scas
enter
fstl
add
adcb
mov
mov
out
or
ret
mov
mov
and
jo
lret
sub
pop
sub
xchg
aad
push
cmp
push
insb
fimull
inc
jae
sbb
in
mov
or
repz
add
add
add
xchg
add
inc
xchg
adcb
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
cld
int
add
into
mov
