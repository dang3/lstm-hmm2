mov
xchg
dec
cmpl
mov
jb
jnp
jns
jnp
sbb
jnp
dec
mov
or
sbb
jnp
push
mov
filds
jnp
mov
jnp
addb
add
add
add
add
cli
out
jle
push
jle
cmc
in
jle
mov
push
jl
out
jno
xor
call
jle
aam
jle
mov
lock
outsl
lock
pop
out
jle
push
lock
add
jle
ret
imul
gs
xor
cs
insb
add
gs
xor
fs
insb
add
add
je
jne
jb
outsb
je
jb
arpl
jae
add
inc
insb
outsl
bound
inc
imul
inc
add
add
insb
gs
jae
push
gs
popa
jo
outsl
jb
add
add
gs
jb
outsl
insl
insl
inc
jb
popa
imul
add
fs
outsl
outsb
jae
insb
gs
insb
imul
inc
insb
outsl
bound
dec
gs
outsl
jb
push
je
je
jae
add
inc
gs
jb
imul
je
outsl
outsb
inc
add
add
je
popa
jae
inc
jb
outsl
jb
add
inc
bound
inc
jb
popa
imul
add
outsl
bound
dec
popa
outsb
fs
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
inc
imul
gs
gs
jne
arpl
add
add
popa
fs
outsl
outsb
jae
insb
gs
outsb
jo
je
add
add
je
js
je
outsl
fs
jb
arpl
jae
add
push
push
outsb
jae
insb
gs
jne
jae
jb
add
inc
outsl
jb
popa
je
gs
popa
addr16
add
add
jo
popa
arpl
imul
arpl
push
gs
insb
insb
outsl
arpl
add
inc
outsl
jo
push
arpl
add
je
insb
popa
jae
dec
outsb
outsw
inc
add
add
jae
push
push
dec
gs
popa
addr16
add
add
je
imul
jb
add
add
je
jne
jae
jb
jb
insl
gs
outsb
outsw
add
add
jae
popa
addr16
outsl
js
imul
add
add
popa
bound
arpl
insb
insb
inc
popa
jb
add
inc
gs
insb
popa
jae
dec
outsl
outsb
addr16
add
add
push
imul
imul
add
je
popa
ja
outsb
jo
je
gs
arpl
imul
gs
jb
arpl
jae
imul
popa
je
outsl
outsb
add
add
je
imul
outsb
addr16
add
add
push
imul
jae
bound
add
inc
push
inc
imul
gs
imul
add
popa
jae
push
imul
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
arpl
outsb
jne
je
insl
add
add
ficoml
add
in
adc
add
adc
add
adc
add
adc
add
adc
add
add
push
adc
add
add
jne
add
mov
add
mov
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
jae
add
adcl
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
fiadds
add
sub
lea
movswl
sub
add
sub
dec
and
dec
jne
lea
mov
mov
add
pop
add
add
pop
inc
add
pop
lea
mov
dec
inc
sub
add
or
lea
mov
inc
inc
add
ret
push
add
add
sub
lea
mov
dec
inc
add
push
push
push
push
sub
xor
lea
push
mov
add
dec
inc
add
or
lea
mov
inc
mov
dec
push
sub
inc
xor
xor
lea
push
mov
add
push
dec
dec
pushl
inc
call
xor
add
lea
mov
dec
inc
add
inc
xor
pop
ret
imul
inc
inc
mov
inc
inc
cmp
jb
and
mov
lea
imul
xor
dec
sub
xor
inc
inc
pop
sub
lea
test
jbe
movswl
dec
sub
inc
sub
and
lea
movsbl
inc
inc
inc
dec
xor
lea
imul
dec
dec
inc
inc
sub
or
lea
movswl
inc
and
inc
inc
mov
inc
sub
movzbl
lea
mov
add
inc
add
and
dec
dec
mov
xor
lea
mov
imul
inc
mov
inc
dec
mov
dec
or
lea
movzbl
inc
inc
dec
jne
add
mov
inc
or
lea
mov
sub
dec
add
inc
sub
lea
mov
mov
inc
add
add
dec
and
lea
imul
mov
dec
dec
test
jbe
dec
add
sub
lea
mov
inc
dec
dec
dec
and
lea
imul
inc
inc
add
inc
dec
and
lea
mov
sub
sub
and
dec
dec
mov
add
lea
movzbl
movzwl
add
add
sub
add
and
dec
sub
mov
lea
imul
movzbl
dec
add
mov
add
dec
mov
and
lea
movzbl
imul
add
add
dec
dec
and
inc
add
movzbl
lea
movzwl
xor
sub
jmp
inc
sub
lea
mov
sub
dec
pop
ret
push
dec
inc
add
lea
mov
inc
dec
inc
sub
dec
or
lea
mov
add
sub
add
dec
xor
push
lea
call
mov
add
inc
dec
mov
dec
inc
push
add
call
lea
mov
movswl
inc
dec
dec
inc
and
lea
mov
cmp
je
add
push
inc
call
sub
iret
add
sub
lea
mov
inc
dec
pop
inc
ret
push
inc
xor
lea
mov
inc
inc
inc
sub
xor
push
lea
mov
push
dec
push
sub
push
dec
call
dec
push
and
lea
mov
mov
inc
mov
dec
sub
mov
sub
xor
test
je
lea
mov
add
inc
inc
add
or
lea
mov
mov
sub
inc
add
sub
or
lea
mov
sub
repnz
dec
inc
add
inc
jmp
or
lea
mov
dec
dec
add
inc
sub
lea
movsbl
dec
inc
jmp
pop
pop
ret
push
inc
push
dec
call
sub
lea
add
dec
dec
add
sub
lea
mov
pop
ret
sub
dec
mov
dec
inc
mov
sub
add
mov
lea
mov
mov
inc
dec
xor
inc
sub
mov
add
lea
inc
mov
dec
inc
add
sub
add
cmp
jb
lea
push
mov
dec
push
inc
add
push
sub
sub
mov
lea
mov
xor
inc
dec
xor
dec
sub
xor
and
lea
push
mov
sub
xor
dec
dec
mov
dec
or
mov
lea
movzwl
movzbl
inc
add
inc
inc
add
sub
lea
add
mov
add
movzbl
dec
inc
add
xor
lea
dec
add
inc
dec
add
mov
add
lea
inc
dec
add
cmp
jb
dec
xor
or
lea
mov
mov
inc
mov
inc
inc
inc
inc
add
lea
jmp
push
mov
mov
inc
call
dec
dec
add
or
lea
mov
call
call
call
call
inc
inc
dec
sub
or
lea
call
call
imul
push
add
call
dec
dec
dec
or
lea
mov
sub
add
call
dec
dec
or
lea
imul
sub
dec
dec
dec
pop
or
lea
mov
add
inc
pop
add
sub
pop
dec
and
lea
imul
pop
inc
sub
inc
inc
xor
lea
mov
dec
pop
dec
inc
pop
dec
or
mov
lea
imul
call
inc
dec
inc
inc
ret
or
lea
push
mov
inc
push
dec
inc
push
dec
sub
push
lea
movswl
push
dec
sub
mov
add
dec
push
add
ret
push
lea
imul
inc
push
inc
call
inc
sub
or
lea
mov
add
add
inc
add
add
lea
imul
inc
inc
dec
dec
xor
lea
mov
inc
add
add
jmp
mov
dec
in
or
cmp
sbb
ja
and
es
bswap
xor
cmp
mov
out
mov
add
xor
pop
stos
lahf
dec
dec
mov
jg
or
mov
mov
lret
fsubl
xlat
aam
jp
outsb
jge
pop
add
or
and
lods
test
in
out
push
mov
xor
sub
jmp
shlb
les
xor
lods
push
push
test
push
sar
jmp
push
jp
fsubl
arpl
mov
sbb
pop
aaa
jbe
pop
xchg
push
fistpl
mov
out
call
xor
or
xchg
cwtl
insl
pop
pop
bnd
xchg
filds
arpl
out
gs
mov
das
pop
push
in
addr16
push
divb
xor
das
jecxz
andl
xchg
insl
mov
push
sbb
xchg
stc
sti
jmp
inc
sub
mov
push
imul
cmp
xorb
movsl
xor
add
inc
dec
je
test
xlat
or
mov
pop
jno
xor
or
outsl
jbe
sti
cli
or
movaps
and
push
pop
xor
lea
push
cmpsb
xor
fs
out
mov
lods
out
fstpt
mov
xchg
arpl
mov
pop
stc
pop
popl
sub
ja
cmp
jb
out
orl
cmp
subl
add
pop
rcrb
stos
xchg
cmp
roll
push
daa
jne
imul
pop
outsb
out
sbb
sbb
lock
cmp
int3
pop
xchg
xor
push
movsb
inc
decb
inc
fwait
inc
mov
into
pop
fs
dec
imul
ret
loope
xchg
lret
data16
adc
adc
loope
inc
out
pop
mov
xchg
add
stos
push
push
cwtl
ret
scas
popf
inc
pop
push
ret
push
sbb
gs
dec
shll
inc
mov
inc
mov
add
lock
pop
cmp
jle
pop
fcompl
jl
mov
leave
pop
push
push
jmp
fistps
aad
xchg
repnz
jge
enter
xsaves
aaa
loopne
test
inc
je
push
repnz
mov
loop
mov
jmp
loope
push
scas
addr16
pop
add
js
xchg
out
pop
push
fucomi
mov
push
pop
pop
mov
add
sbb
sahf
insl
mov
push
rolb
adc
loope
les
add
stc
xor
adc
ret
xchg
leave
imul
daa
fildll
leave
pop
jb
or
xor
xlat
lods
adc
or
or
rcrl
cltd
cmp
cmp
jp
mov
cltd
ds
and
ret
add
rol
add
add
mov
movsl
shrl
mov
mov
scas
jae
sub
in
sbb
inc
cmp
xchg
std
int3
push
loop
pop
aaa
jecxz
jecxz
sbb
mov
inc
scas
cmpsl
add
divl
xor
loop
sub
cmp
xchg
mov
call
fidivrs
enter
add
add
xchg
jmp
es
xchg
lcall
ret
jnp
mov
mov
push
adcb
rolb
mov
iret
mov
inc
das
jecxz
xor
aas
mov
push
pushf
pop
cmp
and
jmp
loopne
in
icebp
jb
push
lea
in
shr
cmp
xchg
jbe
xchg
pop
or
dec
mov
mov
stc
ljmp
jecxz
scas
lds
sub
cld
or
incl
mov
or
mov
pop
sub
and
fidivrs
test
mov
fnstcw
roll
lcall
out
mov
pop
cmp
xchg
dec
add
add
dec
xlat
add
jo
mov
jbe
les
shlb
pushf
add
out
cs
and
and
aad
clc
push
out
and
xor
orb
cli
popa
mov
cmpsl
andl
pop
jmp
cmp
inc
arpl
or
rorb
je
jg
fst
pushf
mov
fcmove
repnz
stos
ffreep
mov
lret
mov
inc
andl
enter
cmp
loope
insl
mov
data16
sarb
sbb
pop
lods
jl
scas
dec
or
xchg
sbb
fwait
lock
pop
push
enter
push
cmp
fidivrs
pop
adc
mov
jbe
sub
out
fcompl
jmp
or
out
into
or
pop
and
pop
and
jne
dec
lret
push
inc
add
clc
bound
bound
xor
push
test
mov
std
and
sbb
test
popf
mov
fcmove
shll
xchg
and
imul
in
sub
mov
and
pusha
shrb
test
jle
es
jnp
pop
add
lahf
fimuls
mov
mov
les
imul
mov
testl
divl
into
ret
sbb
jbe
push
leave
inc
je
xchg
shrb
mov
mov
ret
add
xorb
cmp
mov
cmp
jno
cmp
or
in
push
rcrl
mov
sbb
icebp
addb
jb
popf
jmp
arpl
sbb
jo
test
lret
mov
push
incl
mov
jb
jbe
fnstsw
adc
jl
stc
movsb
imul
test
pushf
inc
enter
pusha
or
lret
push
xchg
loop
lret
daa
fucom
sub
xor
pop
insb
inc
add
xchg
or
int
pop
adc
fucomip
mov
push
mov
cmpsb
jnp
outsl
repnz
lods
repz
add
popa
inc
ret
push
inc
stos
in
mov
dec
push
repz
xor
in
sbb
dec
insb
imulb
dec
std
xor
push
add
jl
repnz
jb
imul
lret
jg
xor
pop
jl
cmp
sub
dec
imul
mov
fdivrl
loopne
jecxz
push
cmovg
stc
repnz
insl
loopne
arpl
call
pop
sbbl
imul
mov
movsl
stos
les
mov
jecxz
mov
dec
xlat
shrb
and
dec
out
sub
sub
repnz
fwait
mov
subb
dec
das
or
imul
pop
jp
loop
arpl
ds
inc
mov
scas
sbb
and
pop
imul
lds
jo
push
imulb
jl
pushf
lret
lcall
outsl
stos
mov
inc
data16
clc
dec
xor
shr
or
in
mov
sti
jle
movsb
repz
adc
cli
jge
shlb
pop
mov
enter
fistpll
mov
cltd
lret
mov
lea
int
inc
inc
mov
mov
jnp
dec
call
out
arpl
xchg
lods
inc
ljmp
mov
insl
push
ds
test
fstps
outsl
inc
sbb
jno
bound
sbb
dec
filds
sub
stc
xchg
xor
sbb
push
dec
fsubrl
ficomps
ljmp
inc
inc
lea
mov
jl
mov
lcall
stc
inc
mov
or
push
mov
xchg
sub
and
inc
fs
loop
mov
xor
dec
mov
imul
lret
incl
xor
push
push
dec
dec
icebp
aad
fisubs
inc
xor
fwait
push
inc
jle
xor
sbb
pop
jb
clc
cld
sti
insb
adc
in
dec
iret
mov
insb
mov
push
sub
addb
add
pusha
dec
jo
push
gs
cmpsb
inc
jno
iret
mov
loope
sbb
sbb
punpcklwd
flds
ss
pop
in
repz
mov
mov
mov
and
loope
jle
orl
pop
dec
dec
jbe
push
mov
inc
xor
inc
nop
shll
lcall
push
mov
xorl
xbegin
notb
push
roll
call
jo
mov
sub
push
jle
call
js
pop
pop
je
dec
bound
mov
call
sahf
iret
dec
inc
dec
xor
les
mov
dec
mov
add
add
ret
mov
sti
fstpt
mov
jl
lea
push
inc
push
sub
dec
xor
int3
add
adc
mov
dec
jbe
mov
dec
inc
xchg
mov
jns
rcrb
call
loopne
push
pop
mov
test
ret
leave
mov
orb
jno
rclb
movsb
inc
jl
mov
jmp
jle
dec
fs
push
xor
jmp
popa
clc
inc
aas
rclb
and
test
andb
and
das
adc
es
in
pop
mov
adc
mov
xchg
mov
mov
mov
jno
pushf
pop
imul
pop
lret
enter
inc
sbb
sbb
cmc
xor
mov
scas
pop
popf
stos
pop
enter
pusha
in
ljmp
outsb
outsb
imul
sbb
daa
ja
push
sub
cmp
fsubl
aaa
cmpb
cmc
adc
add
and
and
and
mov
in
insl
iret
pop
mov
sbb
fldl
scas
testl
loopne
ffree
lcall
lds
adc
int
mov
jnp
jecxz
mov
add
cmpsl
pop
test
mov
stc
out
js
test
lahf
add
stc
and
xchg
and
pop
shll
dec
fs
or
push
shrb
xlat
sbb
push
insl
dec
mov
fs
test
jmp
or
xor
mov
fnstcw
clc
loopne
jne
push
mov
mov
mov
add
fbld
out
jb
cmp
sbb
mov
or
cwtl
call
stc
sub
jb
lock
clc
in
loopne
jbe
nop
or
jl
test
aas
nop
sarb
addr16
mov
adc
adc
cs
add
sbb
mov
add
fisubrl
cmpsb
outsb
js
fucomp
xor
cmp
fildl
xlat
jp
sbbl
jp
lret
pop
dec
imul
push
imul
xchg
lock
and
ss
cmp
jb
in
jbe
and
pop
mov
cmc
push
jg
pop
fsubl
mov
or
cmp
scas
sbb
and
pushl
scas
jge
sbbb
xchg
inc
xchg
sahf
rclb
dec
imul
push
jne
pop
dec
pop
mov
aad
fmuls
shrl
mov
dec
fdivrs
xchg
shl
fsub
loopne
xor
scas
subl
fimull
es
dec
mov
shll
mov
jl
jp
cwtl
aam
push
push
mov
jne
or
xlat
out
mov
nop
dec
jp
fs
mov
ss
out
out
es
adc
mov
int
sub
xor
add
jns
jge
fcomps
mov
xchg
add
lods
xchg
int3
enter
iret
sbb
push
cmp
outsl
cmp
mull
filds
mulps
sub
repz
fdivs
cs
jo
mov
into
cmpsl
push
gs
ffree
jle
sar
mov
popa
cmp
lea
cmp
ds
cmp
test
ss
dec
sub
jecxz
push
pop
imul
aaa
in
push
jno
pushf
inc
push
sbbb
adc
push
inc
cmp
dec
sub
les
test
sub
pushf
xor
int
xchg
ja
pop
jmp
cwtl
enter
xchg
stos
stos
dec
xor
mov
lds
pop
or
lods
lods
arpl
jno
je
lds
cmc
dec
pop
mov
jbe
push
pop
sub
jecxz
xchg
loopne
push
aad
mov
xchg
mov
add
sub
iret
pop
cmc
xor
add
inc
adc
xor
jb
in
in
imul
out
iret
js
cli
cmp
inc
repnz
loope
cmp
mov
cld
dec
fdiv
adc
jmp
cmp
mov
jbe
add
and
sub
mov
jmp
rolb
repz
mov
jle
nop
ret
leave
aas
mov
or
int
inc
cltd
xchg
push
adc
mov
rol
mov
cmpsb
repnz
clc
adc
cmpsl
aas
rclb
xor
and
push
jl
or
filds
mov
pop
test
jecxz
dec
shll
pop
mov
push
sbb
adc
sub
repnz
jns
pop
out
dec
repnz
mov
and
mov
sbb
push
xchg
push
mov
xchg
push
imul
jmp
enter
andps
mov
out
jg
add
cmpsb
dec
xor
adc
push
addr16
outsb
hlt
jb
cld
sti
pop
and
inc
cmp
in
xor
dec
adc
jne
mov
add
dec
movb
inc
xchg
aaa
nop
imul
fbstp
xlat
and
inc
scas
sbb
loop
xor
jns
sbb
pop
inc
pop
hlt
jg
sbb
les
jle,pn
adc
clc
out
add
popf
mov
addl
ss
mov
inc
add
popa
inc
lock
jp
and
sub
push
mov
pop
mov
mov
xchg
aas
xor
xchg
loopne
jb
push
xor
scas
inc
xchg
and
xchg
mov
inc
pop
lahf
or
test
mov
pop
cwtl
pop
fs
xchg
pusha
mov
decl
push
bound
xlat
jp
cmpsl
cmp
push
push
add
xchg
aas
jp
mov
test
into
loopne
call
add
test
dec
and
shrl
inc
inc
shrl
popa
es
jnp
rol
dec
sbb
or
imul
mov
adc
mov
jecxz
cwtl
add
mov
call
icebp
cmc
andb
pop
or
insb
fidivs
sub
xlat
lods
sarl
lret
clc
pop
in
add
mov
lds
push
test
cmp
fsts
insb
add
push
jbe
cld
or
jbe
cmp
stos
hlt
int
or
mov
movsl
and
mov
sub
push
call
fwait
xchg
rorb
call
adc
sti
sub
and
push
mov
dec
or
mov
add
sbb
xor
jl
mov
mov
movsb
mov
out
sub
inc
xor
test
jne
mov
int
les
popa
les
cmp
add
push
push
shr
push
xlat
loop
push
cs
shlb
loope
out
imul
shlb
hlt
jle
fs
fwait
and
push
or
sahf
inc
fwait
sub
jecxz
inc
mov
sbb
sti
or
ss
adc
dec
and
insb
negl
xor
dec
mov
dec
sub
idivb
arpl
cmp
addr16
sarl
outsl
insl
dec
jle
les
inc
imul
rcrb
inc
jecxz
adc
mov
adc
andl
movsl
push
push
pushf
in
push
mov
cmp
insl
and
imul
dec
sbb
leave
inc
idivl
aas
test
mov
lds
xorb
int
fwait
in
pop
and
pushf
cmp
ss
fwait
add
arpl
sahf
call
lret
stc
int3
jnp
or
cmpsl
idivl
fidivl
hlt
and
cli
inc
mov
jg
fwait
sbb
lods
cmc
cmp
out
loope
push
test
sbb
fimull
cmp
push
xor
jge
lahf
idivl
dec
cltd
aad
in
je
sahf
ret
mov
add
lea
xor
cmp
inc
inc
das
pusha
xor
arpl
test
push
cmp
dec
mov
inc
adc
and
jbe
xchg
leave
test
mov
sbb
mov
aaa
addl
xchg
adc
sti
push
jmp
es
add
xor
insl
pop
cmpsb
jge
jmp
sub
std
cmp
aas
roll
xchg
add
rcll
pop
jo
test
pushf
adc
push
dec
nop
inc
and
or
sub
dec
out
stos
inc
adc
inc
pusha
pop
inc
rcrb
jae
ja
pop
jns
aad
sub
scas
or
mov
insb
fdivrp
enter
dec
push
push
xchg
adc
mov
mov
dec
aas
or
xor
pop
cld
popa
and
lea
insb
and
in
cli
inc
mov
inc
mov
nop
orb
or
jae
push
nop
xchg
sub
xchg
mov
rclb
pop
push
aas
inc
or
cmc
pop
push
or
xor
sbb
sub
jbe
push
imul
cs
xor
inc
das
sbb
in
je
mov
fdivrs
test
push
sub
inc
int3
adc
adc
mov
out
jmp
jb
mov
pop
xor
or
xchg
enter
xor
loop
mov
movl
lock
xor
jbe
xchg
out
test
mov
jmp
pop
jb
insb
pop
ljmp
pop
mov
fidivs
ret
push
icebp
bound
pushw
pop
xchg
mov
lods
loopne
mov
out
push
cs
xchg
fisubrl
jnp
jnp
and
push
aam
xor
sbb
in
scas
sub
addr16
sbb
add
loopne
mov
sbb
dec
push
or
mov
push
xor
testl
jbe
popf
adc
loop
pop
mov
add
mov
js
std
rorb
pop
lcall
insb
fildl
sar
nop
aam
inc
pop
dec
jne
divl
imul
push
das
lcall
std
jle
in
scas
inc
sbb
stc
incb
sbb
or
adc
or
int3
cld
inc
dec
sbb
jmp
cld
and
or
cmpl
jnp
xchg
sbb
movsb
mov
out
loope
loop
imul
sbb
mov
pop
dec
xchg
in
push
inc
fstpl
push
push
mov
lock
pop
ja
xor
test
or
push
or
scas
mov
andl
sbb
sbb
sbb
or
fsubl
add
mov
xlat
mov
jg
xor
fwait
adc
ret
xor
inc
jl
enter
add
lret
std
mov
pop
xor
cmpsb
roll
mov
push
popf
xor
or
add
xorb
mov
mov
sub
xchg
sub
xchg
push
hlt
sub
icebp
cmpsl
sub
shll
or
lcall
inc
lods
in
cli
and
mov
add
popa
movsb
lahf
jae
loop
jg
mov
mov
mov
fbld
push
mov
adc
adc
test
imul
mov
add
inc
js
pushf
push
mov
aaa
inc
sbb
aad
fimull
movsl
mov
subl
stc
icebp
scas
add
bound
xchg
lea
and
mov
stos
mov
sub
xor
repz
popf
push
imul
test
or
leave
aad
jno,pn
dec
sub
pop
decb
jo
cmpsl
sbb
dec
lret
insl
push
daa
and
cmp
stos
and
mov
mov
mov
cld
dec
push
add
add
outsl
sub
xchg
loope
pushf
loope
xor
fmuls
out
sub
pop
jmp
insb
lds
adc
in
mov
imul
cmp
int
jbe
lods
adc
into
ret
out
andb
arpl
jae
divb
stc
mov
jns
inc
fs
enter
outsl
int
add
xchg
ja
mov
repnz
jmp
bnd
push
jmp
cwtl
mov
jno
jbe
ficompl
shlb
adc
jne
sub
mov
fsubl
push
ret
mov
mov
cmp
mov
movsl
aad
fwait
gs
fbstp
or
and
adcl
jno
inc
aaa
fcomip
or
loopne
inc
std
iret
mov
loop
iret
ljmp
pop
sbb
sbb
inc
jge
sahf
pop
mov
test
test
aas
cli
out
and
mov
cli
xor
ljmp
and
gs
sbb
ret
into
pop
ret
cmp
mov
sub
sub
int
sahf
sbb
enter
divl
push
pop
push
popa
inc
out
lret
jle
and
push
mov
push
cmpsl
push
or
stos
mov
aaa
sahf
scas
dec
push
fcoms
pop
lret
dec
aam
cmpsb
cmp
cmp
in
adc
pop
xor
sub
jne
xchg
inc
lds
scas
inc
mov
lods
dec
cmp
and
leave
push
jmp
in
and
push
dec
lods
push
cmp
sub
fldcw
or
hlt
mov
jle
mov
xchg
clc
cmpb
imul
pusha
mov
sub
arpl
adc
or
iret
or
aaa
imul
add
cmp
cwtl
jmp
xchg
or
cwtl
data16
push
xor
push
iret
cmc
add
xchg
lret
inc
fucomi
dec
cmp
push
add
mov
mov
mov
jle
packsswb
leave
leave
or
fmull
out
or
pusha
scas
push
xlat
push
mov
pop
dec
dec
xchg
push
push
mov
mov
aad
pop
push
mov
mov
pop
pop
or
ret
xlat
dec
sub
push
or
xchg
nop
xchg
push
aam
jae
mov
sbb
add
in
rorl
or
cltd
test
jecxz
cmp
addr16
loopne
pop
pop
dec
daa
mov
push
punpcklwd
clc
aas
mov
in
sbb
and
fnsave
jecxz
inc
mov
sarb
mov
jnp
mov
jo
gs
sbb
loop
test
mov
into
test
scas
xor
add
sub
xor
mov
jle
sbb
loopne
pop
mov
enter
jne
mov
data16
and
cmp
xor
loope
out
pop
mov
add
out
nop
cmp
xchg
xchg
shrb
frstor
dec
imull
add
out
jmp
sub
lods
and
push
lret
sahf
cmc
clc
cmc
daa
mov
addr16
out
sbb
mov
daa
movsb
and
test
imul
movsb
mov
stos
dec
mov
sbb
test
test
lcall
js
add
fmuls
leave
adcb
hlt
lret
pop
adc
in
and
jnp
aad
mov
movsb
mov
pop
mov
mov
movsl
jnp
inc
or
rorl
sub
and
xlat
xchg
addr16
inc
and
jbe
push
pop
xchg
hlt
repnz
fnstcw
and
jmp
sti
cmp
in
dec
adc
cmp
nop
shr
sti
sbbb
fildl
dec
mov
das
jae
popa
sbb
inc
dec
scas
jmp
cmp
icebp
and
mov
test
hlt
jbe
and
std
dec
and
pop
repnz
and
cmp
inc
push
xor
push
fildll
cmp
mov
loopne
sti
cld
icebp
pop
cmp
fs
inc
lock
ja
stos
mov
push
xor
adc
lods
inc
pop
int
leave
jle
jb
jg
in
rorl
je
mov
dec
dec
push
dec
sub
adc
mov
iret
ja
sarl
cmp
and
or
lea
or
roll
cmc
in
push
les
inc
sbb
cmp
fadds
sbb
ret
insb
sahf
pop
ficoms
push
out
jl
dec
and
sub
xor
cmc
shrl
xchg
aaa
push
push
inc
add
gs
ss
lock
call
xor
or
xor
loopne
sub
adc
dec
xchg
xchg
rep
lret
push
pop
repz
test
or
popa
xchg
pop
jge
adc
loope
push
in
adc
mov
push
dec
mov
mov
sahf
mov
nop
ds
mov
pop
and
addl
mov
je
jns
cld
out
cmc
jl
ret
add
adc
in
test
outsl
stc
pop
ret
into
leave
jge
fcmovne
add
mov
add
mov
into
ss
stos
push
or
loopne
dec
or
movsl
inc
add
sub
pop
xchg
inc
shll
and
mov
adc
popa
repz
mov
push
call
cltd
ds
lcall
inc
xchg
sbb
js
mov
xor
mov
pop
aas
pop
pusha
pop
call
pop
test
and
es
aas
and
mov
and
dec
rorb
xor
adc
leave
out
int
xchg
dec
insl
mov
push
daa
lret
xchg
mov
aad
mov
xchg
mov
test
test
jae
js
xchg
aas
insb
mov
adc
data16
roll
cmp
xor
mov
cmc
shrb
jo
fdivrp
popf
dec
jnp
jne
xchg
adc
push
dec
push
loope
nop
out
in
mov
sub
sub
cmp
lock
rcl
pushf
cltd
lcall
adc
mov
shlb
lods
addl
or
movsb
jno
fisubrl
xor
pop
lcall
test
aam
mov
scas
aas
imul
stc
test
imul
mov
in
cmpsl
and
xchg
xlat
ficoms
push
xchg
adc
pop
add
ret
or
iret
and
mov
sbb
mov
mov
hlt
ret
lods
jecxz
add
lods
mov
in
cmc
les
add
jno
ja
mov
jne,pn
xchg
or
psrlw
add
dec
mov
cmp
pop
rsm
mov
cmpsb
leave
mov
sbb
add
frstor
int
inc
gs
int
fisttps
ss
fucomi
xchg
pusha
idiv
mov
dec
fcmovnu
xchg
pushf
fwait
xorb
cmp
mov
adc
lret
cmp
lahf
inc
mov
sub
push
lcall
iret
or
jb
xor
popf
cmpsb
cmp
dec
iret
das
jg
mov
add
xor
xchg
cmp
inc
lea
imul
lret
clc
push
cmp
jnp
sbb
adc
shlb
icebp
std
je
or
ja
adc
and
int
ret
inc
shl
call
testb
sbb
mov
inc
lret
mov
aas
dec
cmpsb
pusha
jnp
xlat
pushf
or
or
cmpsl
xor
loope
pop
xchg
mov
imul
pop
sti
adc
es
out
xor
testl
push
rcll
out
sbb
lret
shl
pop
ftst
push
mov
ret
sub
inc
in
pop
in
cmc
mov
je
add
stos
pop
inc
fwait
dec
inc
push
push
or
shll
cmpsl
or
popa
jl
aad
sahf
mov
repz
xchg
cmpsb
imul
dec
xor
jb,pt
mov
jl
or
cld
jecxz
mov
xchg
mov
loopne
gs
cli
cltd
in
jb
and
mov
lahf
stc
lret
aaa
lahf
jne
cmc
sbb
pop
inc
aad
imul
stc
stos
shl
push
daa
jp
rcll
mov
sbb
and
and
pusha
lods
pop
rolb
inc
icebp
jmp
sbb
pop
adcb
repnz
bound
or
insl
test
dec
lret
fildll
scas
idivb
mov
adcl
cmp
mov
inc
mov
inc
cmp
sbb
cmpsb
add
xor
frstor
cmp
clc
push
mov
lea
sub
into
sbb
notb
rorb
sub
cwtl
mov
pop
jb
inc
jno
lret
mov
dec
adc
sbb
jb
xor
inc
xlat
cmp
and
roll
cmp
pop
xchg
cmp
loopne
dec
mov
and
dec
mov
pop
shlb
out
add
mov
pop
repz
inc
jle
cli
clc
jne
out
lds
push
mov
adc
cmp
les
jne
fildl
ret
and
je
orl
dec
cmp
xchg
cmp
inc
addr16
pop
dec
ror
mov
or
repnz
mov
jmp
cwtl
mov
xor
in
xchg
mov
mov
ljmp
mov
fsub
inc
idivl
sbb
add
mov
cmp
xor
fwait
pop
cmc
mov
inc
push
mov
negl
lods
sbb
clc
adc
adc
int
sbb
loope
inc
xchg
push
xor
lds
cld
push
popa
mov
aam
mov
rcrb
pop
leave
mov
imul
inc
mov
call
add
dec
sarl
mov
bnd
clc
js
pop
or
xorl
cmp
popf
xor
xor
ficompl
push
rcrl
dec
fsts
daa
out
adc
outsb
xor
jg
popa
sub
xor
pusha
mov
push
sbb
push
jl
lahf
cmp
mov
jge
cs
mov
mov
push
pop
popa
mov
jmp
or
xchg
iret
iret
mov
push
fstp
les
jbe
out
inc
dec
test
inc
aaa
loope
das
xchg
pusha
add
ljmp
mov
adc
push
pop
out
or
int
adc
pop
cmpsl
and
mov
aam
adc
ss
test
divl
ja
xor
push
and
cmp
pop
pop
int3
fisubrs
sbb
lods
pop
push
fld
sub
sbbl
sub
add
xchg
cmpb
mov
dec
cmp
test
out
adc
not
or
fchs
xchg
gs
adc
pop
hlt
push
sahf
pop
push
repnz
test
and
outsb
sbb
loopne
or
test
cmp
dec
mov
stos
mov
add
je
push
mov
cwtl
mov
das
ret
jmp
xchg
test
adc
inc
xor
xor
pop
lock
push
addl
jge
jnp
in
cmp
mov
jo
cltd
cltd
or
cmp
pushf
mov
call
test
push
push
pop
test
xor
mov
ljmp
or
sbb
loop
jb
pop
mov
cmp
lcall
jae
aaa
rolb
cmp
push
jecxz
js
dec
xor
loopne
incb
cmp
mov
out
push
data16
pusha
lret
rclb
jmp
out
jns
and
push
dec
adc
mov
dec
into
mov
push
aam
cwtl
fsubrs
mov
fs
movl
pop
rcrl
push
mov
and
adc
out
into
iret
inc
enter
mov
dec
jno
rcr
ja
jecxz
adc
rorb
dec
adc
push
jmp
data16
pop
push
sbb
inc
loop
mov
inc
mov
js
lret
jae
fnsave
push
repz
dec
add
xchg
daa
mov
cmpsl
pop
ljmp
jmp
or
aas
inc
sbb
cmp
cli
in
arpl
lds
sbbl
int
test
popf
cmp
insl
cmp
jo
xchg
rcl
movsl
fbstp
mov
sbb
movsb
jnp
loope
fcoms
ret
mov
test
sub
pop
leave
data16
mov
fdivrs
imul
inc
mov
adc
movsl
aaa
xchg
push
jns
repnz
cmp
cmpsb
mov
dec
adc
xor
xchg
rolb
dec
xlat
lds
lea
or
push
pop
pop
jbe
inc
movsl
mov
sub
mov
dec
mov
xchg
jecxz
ds
les
movl
enter
mov
fs
jns
daa
fbld
inc
aas
iret
sub
jge
movsb
dec
or
or
and
fidivs
js
mov
or
push
sbb
and
dec
pusha
push
shl
repz
adc
push
aad
push
adc
fs
ret
addb
ret
popa
sub
in
xchg
sub
out
inc
popf
loope
pop
cmp
xchg
inc
mov
jmp
adc
movsl
fidivl
mov
fs
aad
jmp
in
cmp
and
lods
lcall
mov
fiadds
nop
idivb
ja
adc
and
jb
dec
nop
mov
jge
jno
fs
divb
sub
mov
loope
addl
sub
lcall
jb
push
pushl
pop
xchg
iret
mov
push
xor
outsb
movsb
sub
mov
gs
adcl
fistpl
loop
lahf
mov
ret
in
test
inc
fwait
xchg
aaa
jmp
in
mov
stos
add
insl
mov
cmp
or
push
leave
dec
enter
pop
test
mov
sbb
push
or
repnz
lahf
pop
mov
lods
mov
rol
cmpsb
insb
or
jb
cwtl
mov
xlat
jg
xchg
loopne
sub
addr16
es
out
pop
mov
test
adc
cmp
pop
push
insl
or
aas
push
cli
pop
bound
insl
dec
xor
jb
shlb
notb
cli
cli
dec
cmp
jle
fsubl
dec
add
lea
dec
pop
mov
adc
imul
and
cmc
lea
adcl
adc
imul
cmp
clc
push
mov
adc
push
cmc
fstpt
aaa
push
into
mov
sbb
lea
inc
mov
and
push
aad
jb
imull
push
pop
add
lea
mov
rclb
addl
stos
push
das
and
cmc
fwait
aam
sbb
cli
add
repnz
jmp
outsl
mov
outsb
jae
sub
sub
adc
outsb
aas
sbb
cmp
add
sub
cmpsl
mov
push
ds
ror
divb
adc
inc
adc
pop
shll
into
out
cmpsl
cmc
or
cmp
out
push
dec
jg
sbb
loop
xchg
fldcw
inc
out
ss
sbb
mov
jle
imul
and
scas
stos
icebp
icebp
fiaddl
xchg
dec
pop
stos
out
sub
or
nop
scas
add
call
pop
jle
sarb
add
faddl
pause
addr16
inc
jp
dec
ljmp
inc
mov
xchg
dec
pop
testb
dec
sbbl
add
out
lds
enter
cmp
aam
loopne
pop
test
pop
mov
pusha
nop
daa
pop
sbbb
loop
popa
jno
ja
movsb
or
into
pop
sbb
lcall
fsubs
lahf
hlt
outsb
or
outsb
cmp
xor
dec
jge
jns
mov
and
orl
sbb
imul
push
push
xlat
lock
add
rcll
imul
mov
mov
dec
addr16
popa
push
xor
jno
out
xor
lcall
ret
adc
cmp
add
nop
cmpsb
sub
rep
mov
mov
or
loope
testb
cmp
cmpsb
testl
outsb
out
imul
rcrb
ss
cmpsb
adc
jno
push
fisttpll
pop
pop
fbld
xchg
loope
jmp
lea
fwait
clc
push
adc
xchg
inc
movsl
cmpsb
jmp
addr16
cmpsl
pop
xchg
inc
scas
nop
adc
loopne
lret
and
movsb
jl
outsl
fs
and
mov
lea
cwtl
out
jl
mov
xor
gs
mov
addb
or
scas
sbb
fmuls
jmp
ret
dec
mov
push
pop
push
add
xor
or
xchg
std
push
mov
pop
lock
fdivrl
and
fwait
lds
adc
or
inc
mov
mov
sbb
pop
pop
pop
push
sbbb
jnp
jl
orl
xchg
dec
lcall
xor
pop
or
jmp
arpl
test
out
push
mov
pop
jne
push
mov
pop
or
lret
lods
in
jo
add
or
sti
inc
ja
push
mov
fwait
pop
andb
repnz
ret
mov
jno
inc
mov
adc
jmp
data16
mov
push
pushf
js
mov
ret
rep
or
arpl
sub
push
dec
sbbb
repz
sbb
sub
add
xchg
push
jne
push
xor
daa
dec
mul
cmp
rclb
mov
test
dec
jo
je
ret
loopne
push
push
mov
xchg
aad
mov
mov
test
enter
cwtl
imul
sbb
cmp
mov
aas
std
das
stos
mov
cs
pop
loopne
jnp
mov
sbb
sti
mov
push
imul
cld
push
fldenv
shrl
pop
or
jl
loope
pop
stos
pop
imul
inc
adc
outsl
push
adc
add
or
mov
sbb
scas
popf
sbb
loop
adc
repnz
dec
aad
testb
mov
cmpsl
add
pop
insb
test
jb
mov
adc
cmp
lcall
inc
pop
ds
popa
int
das
inc
pop
ret
rorl
sbb
icebp
dec
cmp
ret
es
pop
mov
lods
mov
iret
lcall
add
fs
dec
xlat
les
cmp
pop
into
jns
cli
sub
stos
out
and
dec
call
inc
mov
inc
mov
push
cwtl
dec
fstpl
pop
sahf
and
je
aaa
stos
jl
xlat
mov
xchg
sbb
jbe
out
sti
sub
push
outsb
mov
jo
jg
mov
mov
push
je
and
daa
in
sbb
mov
cltd
rorl
jge
or
cmp
sub
sbb
loope
sti
jnp
out
in
xor
or
or
icebp
cmp
cmc
in
mov
imulb
push
fistpll
sub
test
in
sub
jmp
and
repz
push
fisubrl
push
stos
dec
and
mov
mov
add
rol
fdivrl
pop
mov
in
rcll
shr
push
shrl
push
lret
fistpl
scas
sub
mov
mov
pop
cmpl
gs
inc
jmp
sbb
mov
pop
fimull
icebp
fstpl
data16
std
aaa
jae
mov
stos
cmpsl
cs
mov
mov
dec
loope
sahf
icebp
test
scas
push
pop
mov
add
lahf
mov
aaa
js
mov
or
fwait
dec
filds
push
xchg
or
mov
les
adc
je
insl
and
in
xlat
test
lahf
ss
xchg
jo
cwtl
ret
mov
cli
add
inc
fstps
dec
mov
fsubrl
mov
jno
test
adc
jge
rolb
in
inc
in
cmp
test
lcall
sbb
pushf
or
xchg
lds
gs
imul
cmpsl
enter
push
ret
loope
ja
sbb
jp
push
test
shrb
push
scas
out
xor
sub
popf
jnp
iret
fsts
inc
stos
ret
in
push
in
divl
ljmp
xor
add
stos
sbb
or
cli
lock
inc
das
enter
daa
pusha
add
lcall
stos
inc
jecxz
jl
jge
fidivrs
jge
and
xchg
pop
icebp
imul
test
stos
mov
hlt
fdivrp
cwtl
mov
push
inc
push
pop
adc
sub
mov
fnstsw
push
mov
mull
mov
imul
ds
scas
popf
and
rcrl
cmc
jnp
ds
push
lcall
adc
pop
es
test
lods
jge
imul
sub
mov
test
insl
or
addl
push
mov
jns
out
mov
push
cld
fisubs
dec
sbb
ficomps
xchg
fsubrl
add
cmp
mov
shlb
xor
fnsave
cmp
stos
addr16
int
push
xchg
cltd
lds
xrelease
dec
add
push
cmpsb
je
outsb
cs
mov
inc
lret
leave
outsl
aaa
cltd
popf
cwtl
sbb
int3
das
inc
hlt
outsl
xlat
cmpl
jle
sbb
sbb
mov
mov
mov
lret
lods
or
jbe
or
push
cmpb
xchg
jmp
je
pop
aaa
std
inc
jno
rcl
push
inc
inc
arpl
cltd
xor
jne
mov
pop
add
or
outsb
cltd
out
rcrb
pop
adc
notb
cmp
inc
lret
adc
dec
shrl
fcoml
pop
or
mov
dec
mov
cmpsl
cmc
xchg
sub
sbb
icebp
aam
dec
int
leave
or
and
leave
push
lcall
pop
sbb
push
mov
cs
arpl
sbbb
pop
push
lahf
inc
sbb
rcrl
into
and
pop
imul
in
mov
out
stos
mov
insl
and
xor
into
aaa
rorl
inc
pop
push
je
icebp
out
stc
sbb
push
xlat
mov
add
loop
int3
enter
mov
pop
cli
pop
add
cltd
in
pop
pop
xchg
into
outsl
jb
push
packssdw
cwtl
ret
adc
daa
in
ljmp
lods
pop
pop
xchg
mov
iret
je
jp
inc
iret
push
jo
repnz
mov
fisubrs
inc
inc
adc
je
dec
push
sti
jecxz
incb
xor
jl
sub
or
and
ljmp
int
pop
popf
or
pop
roll
add
dec
inc
mov
insl
pushf
xchg
push
dec
push
lret
pop
shll
subl
xchg
shrl
ljmp
mov
test
sbb
sbb
fldenv
xchg
out
xchg
adc
sar
loop
ret
push
ljmp
adc
daa
dec
movups
mov
xchg
lock
addr16
cmp
xchg
cmp
nop
jmp
pushf
xchg
xchg
mov
cmp
stc
mov
fwait
add
jmp
push
adc
jge
call
mov
jp
add
or
test
xchg
push
xor
dec
int
add
mov
inc
sub
inc
pop
psubusw
cmpsl
xor
filds
loopne
rcrl
push
sbb
pusha
push
sub
popa
stos
ja
sbb
mov
inc
bound
mov
scas
adc
dec
jp
xlat
pushf
test
and
sbb
mov
subl
fidivrs
sub
fistpll
scas
or
ss
xlat
out
int
outsl
divl
repnz
lcall
ljmp
outsb
sub
xchg
inc
rol
mov
enter
mov
stos
cwtl
and
pop
hlt
dec
in
xorb
pop
xor
movb
sbb
rcrb
shl
test
jge
ret
cli
pop
sub
stos
scas
loope
mov
mov
add
inc
lret
and
push
push
dec
push
mov
jne
rclb
push
insb
mov
int
ja
sbb
mov
dec
cmp
lret
shrb
inc
lahf
mov
out
movsl
in
fisubrs
mov
out
xchg
jp
hlt
mov
aaa
mov
dec
subb
push
inc
adc
insb
imul
ficoml
jge
dec
sbb
movsl
add
call
ds
mov
add
mov
outsl
sbbl
xchg
cmp
aas
jo
loopne
repz
sub
xchg
movsl
in
aam
adc
fwait
jno
dec
or
dec
pusha
jecxz
add
loope
jnp
dec
test
sub
or
jo
mov
bound
dec
add
sub
movsb
loopne
nop
jbe
bound
je
push
dec
rorb
adc
jle
jne
roll
arpl
or
shl
popa
cmp
sbb
xchg
int
mov
pop
sub
into
repz
pop
fstpl
xchg
jp
insb
inc
lea
and
sub
repnz
fstp
xor
lods
and
cld
mov
icebp
jno
sbb
cmp
out
inc
ds
fcmove
xor
inc
cwtl
call
sub
pop
push
divb
jecxz
pop
push
jns
sti
lods
jg
fcoms
lcall
push
out
jne
push
aaa
xchg
pushf
adc
dec
inc
inc
ret
inc
jl
pop
jo
and
xlat
push
inc
xchg
push
fwait
xchg
push
dec
cmp
jae
dec
stos
das
sub
pop
arpl
push
jl
cmp
popa
mov
outsl
adc
or
push
cwtl
pop
mov
push
add
imul
pop
or
mov
in
rorb
les
outsl
fdiv
cltd
loope
inc
repnz
adc
pop
aas
jb
lds
out
mov
xor
daa
xchg
push
outsl
fisubl
adc
pusha
outsl
mov
sbbb
push
enter
ljmp
out
std
mov
cmp
xchg
sbb
ret
outsb
pop
and
push
loopne
sbb
xchg
aam
jmp
out
mov
mov
inc
mov
fnstsw
orl
jae
lods
add
dec
fidivrl
loope
lea
fisttps
shrb
jle
pop
xor
sub
push
fidivs
inc
insl
add
ja
clc
gs
mov
jmp
pop
mov
sti
imulb
scas
movsl
mov
push
call
ljmp
mov
popl
push
popa
ds
cmp
xor
pop
xor
into
fistl
pop
and
inc
xor
inc
pop
in
and
repnz
fstpl
rcr
mov
xchg
sbb
faddl
push
add
dec
mov
fucomp
rcl
outsb
jmp
cmpsb
popf
dec
push
pop
sbb
mov
lahf
cwtl
and
lds
push
lret
loop
cmp
dec
mov
dec
and
mov
in
jecxz
pusha
add
or
inc
movsb
dec
jecxz
pop
mov
jp
sub
fwait
push
inc
sbb
xlat
int3
xchg
adc
mov
sub
mov
imul
out
cs
movsl
test
push
loopne
movsl
lock
test
pop
mov
ja
pusha
xchg
out
ret
sub
outsl
test
push
fisttps
shll
mov
jbe
mov
int
and
shl
cld
fs
add
dec
jp
add
mov
and
out
dec
jbe
in
out
xor
xor
xlat
call
icebp
dec
or
lcall
leave
ret
in
mov
icebp
xchg
fcmovbe
mov
sbb
je
cmp
mov
xchg
outsb
fists
das
inc
jnp
icebp
sub
mov
jno
xor
jo
add
cwtl
adc
cmp
aad
pop
lcall
jecxz
bnd
mov
out
dec
jns
gs
inc
sbb
fsts
inc
andb
les
call
push
push
dec
pop
push
jne
test
mov
mov
mov
rcr
je
test
dec
out
mov
xor
fadds
and
and
test
sbbb
hlt
in
rcr
in
mov
or
mov
push
dec
shll
out
adc
pop
dec
inc
ds
aaa
add
arpl
popf
dec
cmp
xor
ljmp
push
fisttps
cmp
push
or
popf
jg
pop
pop
add
lock
sub
out
out
scas
jp
insb
xadd
push
or
xchg
cmp
enter
xchg
push
icebp
dec
cmp
lcall
xchg
idivb
mov
jae
jmp
roll
xchg
int3
xorb
mov
jnp
push
lret
jb
mov
addl
sbb
mov
lock
dec
sub
adc
in
das
rsm
mov
mov
add
adc
adc
inc
jbe
shlb
loop
xchg
call
inc
repz
jmp
ljmp
pop
shll
push
mov
jb
test
pushf
arpl
sbb
mov
dec
inc
mov
stos
in
sbb
test
hlt
pop
dec
and
adc
cld
clc
fisubl
dec
push
fnstcw
ret
mov
sbb
sub
shlb
mov
jo
arpl
aaa
jmp
lea
adc
mov
jmp
xchg
loope
inc
mov
idivb
mov
decl
jns
jno
lahf
dec
mov
cmpsb
xchg
or
repz
in
sar
sub
or
loop
mov
bound
int
pop
xchg
lds
mov
dec
pushf
pop
ret
shrb
gs
add
jg
test
add
out
inc
in
jecxz
push
cmp
jno
pop
jg
xchg
sub
insb
inc
mov
jae
outsb
mov
stos
out
enter
shll
mov
jbe
xchg
cld
pop
mov
sub
std
pop
lods
ret
xchg
sub
mov
lods
xchg
mov
mov
push
fisttpll
jns
fistl
push
mov
or
inc
imul
add
xor
cs
or
aam
push
push
inc
sar
mov
dec
xchg
das
cmp
mov
sub
ja
in
lds
mov
sbb
and
sub
outsl
push
sti
divb
and
popa
or
loop
test
inc
xor
iret
push
dec
jp
ficompl
jmp
sub
mov
enter
fptan
jnp
sub
bswap
imul
jno
mov
out
sub
pop
ret
test
mov
subb
and
lock
ret
data16
inc
out
insl
sub
xlat
aad
pop
xor
outsl
xchg
adc
js
sbb
adc
pop
icebp
roll
sbb
xchg
lods
and
stc
jne
mov
imul
cld
pop
int3
dec
lds
repnz
mov
jns
sar
mov
dec
xor
fbld
cmc
push
add
jno
scas
fstps
into
cli
inc
xorl
pop
mov
dec
je
and
cltd
cmp
pop
xor
addr16
or
es
or
rolb
cwtl
add
int
mov
pushf
ja
aas
ds
outsl
adcb
adc
mov
notl
adc
nop
imul
jmp
rcll
int
dec
sub
enter
xlat
fidivs
push
inc
jo
es
add
test
and
es
stos
pop
mov
cwtl
popf
mov
idiv
lock
pop
std
in
fbld
cs
mov
sbb
lods
jl
call
jo
shll
mov
pop
sub
data16
cli
pop
movaps
sub
aaa
je
cmpsl
out
mov
push
and
inc
clc
imul
and
call
fidivrl
outsl
mov
ret
enter
ret
sbb
sbb
xchg
push
vmaxpd
adc
int3
in
mov
aas
xlat
cmp
push
jl
addr16
repz
xchg
lahf
jmp
sub
push
data16
cmp
jb
clc
cli
mov
aaa
add
adc
adc
dec
testl
int3
push
inc
hlt
add
cmc
dec
leave
psrlw
popf
daa
out
repnz
sbb
adc
scas
or
jb
cltd
outsb
lea
ss
pop
and
shrl
fucomp
jle
cmp
mov
xchg
jge
jbe
or
xchg
aaa
xchg
push
fldcw
dec
xor
adc
pop
push
adc
out
mov
dec
movsb
xchg
shrb
mov
les
fistpl
cmpsb
in
lods
jo
cmp
pop
imul
xor
roll
stc
pop
jnp
pop
shl
cwtl
dec
mov
xchg
jo
add
jmp
mov
iret
call
rorb
add
sahf
out
and
and
pushf
scas
movsb
mov
pop
into
or
aad
jp
leave
and
outsl
insb
xor
je
mov
loop
mov
mov
mov
mov
ret
movsl
push
leave
mov
xchg
mov
aad
mov
ds
cmp
mov
push
add
sub
movsb
sbb
xchg
aam
cmp
inc
mov
in
mov
ds
xchg
sti
jns
sbb
pop
aaa
jno
xchg
mull
stos
and
lods
mov
mov
or
stos
lods
imul
int3
out
call
sub
mov
bound
cli
fucomp
pusha
outsl
inc
addb
mov
fcoms
inc
sub
shl
lret
mov
mov
fidivs
jecxz
jecxz
iret
out
out
jo
mov
imul
arpl
jnp
and
lea
sbb
or
cmpsb
xor
leave
add
idivb
pusha
rcrb
mov
insb
cmc
mov
push
xor
and
xor
xchg
jl
movsb
mov
push
repz
ljmp
popa
mov
push
pop
ret
jnp
outsl
sub
push
cli
shl
sbb
xor
stc
xor
les
pop
sub
cmp
adc
data16
inc
fimuls
cmp
mov
aam
jns
cmpsb
lcall
xchg
shr
or
cld
jno
jo
shlb
popa
sbb
rorb
je
lret
clc
loope
les
aaa
mov
std
xchg
cld
fimuls
shrl
stc
cmp
adc
dec
xchg
sub
and
stos
subl
inc
into
or
ret
inc
mov
nop
leave
movl
imul
rcr
cmc
les
lods
jmp
scas
or
dec
dec
sbb
out
lods
in
adc
mov
ja
pop
pop
xchg
mov
mov
fsts
xor
adc
xchg
sub
mov
loop
test
test
xchg
mov
lds
add
popa
fstps
lods
pusha
loop
push
orl
in
dec
push
enter
mov
mov
popf
adc
popf
das
bound
filds
pop
xchg
sbb
push
mov
sarb
inc
mov
xchg
or
xor
mov
pop
cmp
test
ret
les
lods
out
mov
test
or
inc
jbe
sbb
stc
mov
sub
mov
sub
cltd
sub
daa
out
sub
dec
push
mov
xlat
aas
jbe
mov
int3
xchg
dec
sbb
mov
aam
ja
xor
jge
rolb
bound
cltd
dec
xchg
xor
in
cwtl
push
cli
push
or
dec
loopne
sar
aaa
stc
sub
add
dec
pop
mov
stos
sarl
jl
jno
loope
mov
jnp
inc
mov
xchg
cmp
adc
pop
inc
insl
addr16
add
loopne
inc
pop
mov
push
ja
sub
xchg
rolb
sbb
ret
imul
aaa
sarl
inc
daa
adc
and
fldt
xchg
shr
add
orl
fidivrl
call
std
cmp
mov
adc
sbb
xlat
xchg
bound
or
pusha
mov
sub
negl
test
adc
std
icebp
mull
xchg
out
pop
psrlw
dec
sub
dec
popa
movsl
lret
lock
add
xabort
xchg
dec
pop
mov
mov
bound
cwtl
dec
push
mov
adc
cmp
dec
mov
popf
enter
inc
sbb
notl
not
xor
lea
pop
push
jnp
lea
dec
adc
cld
insl
push
mov
mov
jo
jo
add
cmp
xchg
cmpsl
mov
mov
push
mov
cmp
es
movsb
cwtl
mov
lds
repnz
adc
bound
pop
jle
gs
mov
jbe
movsb
xchg
aad
lahf
leave
or
sbb
adc
and
push
add
sbb
cmpsl
shr
inc
inc
sub
mov
dec
jne
xchg
shrl
mov
push
loope
fstps
out
dec
sahf
leave
or
or
aad
adc
push
divb
fs
adc
fldt
les
icebp
inc
jg
jg
or
in
aad
mov
xchg
scas
pop
enter
js
dec
pop
aaa
sub
cld
gs
pop
inc
bound
lods
or
jno
xchg
out
rolb
outsl
adc
or
mov
and
sub
ret
dec
fwait
pop
in
in
or
scas
bnd
mov
jae
test
cmp
inc
sbb
mov
xchg
movsb
jno
or
test
xchg
pushf
aaa
push
rolb
sbb
sub
xor
int3
fsubs
dec
stc
mov
and
xchg
leave
popf
sbb
test
dec
rdpmc
pop
xor
imul
xor
xchg
hlt
mov
repz
mov
jne
pop
sbb
pushf
push
cmp
mov
fcom
xor
mov
or
test
adc
pushf
rolb
bound
mov
mov
scas
int3
and
dec
mov
inc
push
inc
cmp
stc
ljmp
inc
fcoms
xor
or
fisubs
out
mov
sbb
cmp
add
mov
and
cmp
xor
mov
fcomps
fcompl
sub
ficomps
pop
dec
div
and
adc
scas
adc
mov
xor
nop
sub
mov
or
dec
sbb
scas
or
pushl
jns
pop
pop
arpl
test
mov
xchg
enter
inc
jge
stos
pop
dec
cwtl
cmp
cmp
dec
or
jne
mov
jbe
mov
or
int3
outsb
and
aas
arpl
xchg
fadd
mov
pop
mov
lret
jge
mov
sbb
sahf
nop
adc
xor
sub
movsb
mov
js
and
jge
adc
add
cmp
invd
xchg
mov
inc
imul
add
out
mov
or
push
test
mov
ss
add
adc
mov
imul
jmp
jb
clc
hlt
ljmp
je
adcl
adc
ja
movsb
popa
subb
mov
inc
xor
addr16
outsl
shufps
lods
inc
xchg
push
lds
or
pop
mov
mov
test
xchg
jmp
lds
jmp
cwtl
cmp
in
out
fdivs
test
xchg
mov
stc
dec
sub
jo
aad
xchg
daa
sbb
push
mov
xchg
xchg
fs
repz
ss
insl
and
pop
dec
add
pushf
rcl
loopne
scas
cwtl
imul
jp
fdivrl
xchg
in
mov
loopne
jp
or
scas
cmp
inc
dec
xchg
in
cltd
cwtl
push
pop
inc
imul
lods
scas
push
sub
rolb
negl
les
in
mov
mov
adc
sbbb
fld
inc
adcl
xchg
xchg
inc
or
cli
subl
or
cld
icebp
insl
fistpl
adc
in
scas
clc
cmp
shlb
imul
out
std
xor
mov
mov
jne
mov
xchg
sub
dec
inc
or
add
sti
push
pop
xchg
adc
inc
inc
cmp
lock
sahf
mov
and
cmp
xchg
cmp
xchg
pop
loope
sub
add
adc
shl
lret
jns
xor
mov
and
dec
jo
inc
sbb
fisttps
push
sbb
pop
push
popf
pop
mov
or
xor
in
jecxz
xchg
in
mov
mov
mov
and
outsl
cli
setbe
or
and
jne
das
lcall
mov
push
cmp
push
pop
ret
sbb
out
xchg
cld
shrb
xor
ja
xchg
in
xchg
add
je
jl
sub
xchg
pop
clc
dec
mov
sbb
ficoml
imul
pop
mov
popf
pop
mov
push
lcall
subb
push
and
fs
insl
push
add
dec
mov
enter
sbb
shrl
pushf
es
stos
push
stos
push
mov
push
inc
xchg
add
push
adc
test
dec
push
int3
push
in
fistpl
pop
lods
push
outsl
stc
loopne
es
push
sbb
mov
inc
in
push
pop
imul
cmpsb
mov
dec
adc
in
out
push
dec
cmp
fdivrs
mov
sahf
rorb
cmp
mov
jne
sub
push
cmp
scas
nop
xor
insl
movsl
mov
push
into
and
dec
pop
lds
pop
mov
enter
push
mov
lods
mov
aas
mov
push
ficompl
hlt
sub
sub
shll
sub
or
popa
shll
sahf
cmp
pcmpgtb
pop
lcall
xor
int
aaa
pusha
imul
int
jge
xor
jg
xchg
lods
test
divb
inc
inc
pop
jae
cmp
not
mov
icebp
aas
jae
scas
out
not
xchg
sub
jle
mov
adc
adc
mov
in
stos
inc
push
pop
ret
pop
jg
out
mov
cs
inc
jp
pop
lret
js
fisttpll
mov
out
stos
xor
dec
push
fwait
or
inc
ja
popf
out
inc
hlt
shll
inc
out
dec
ror
loopne
negb
std
and
gs
push
icebp
ss
pop
add
sub
arpl
dec
aad
bndldx
sbb
lahf
iret
jae
or
push
xorl
and
addr16
scas
sbb
loopne
xchg
and
sub
sti
dec
mov
pusha
ficoms
add
adc
ljmp
adcl
inc
ja
mov
pop
or
movsb
sub
in
jge
pop
stos
dec
pop
leave
hlt
xor
and
adc
or
xchg
dec
cs
sbb
mov
int
jns
jecxz
sahf
mov
fimull
into
sbbl
mov
sub
cld
xchg
fstpl
push
fildl
adc
push
jne
and
xor
insb
and
test
std
adc
xor
mov
sarb
mov
fdivl
fldcw
push
insl
or
sbb
xchg
mov
xchg
xchg
jo
arpl
rclb
cmpsl
add
mov
inc
add
outsl
in
pusha
xchg
popf
std
inc
xchg
les
test
fidivl
pop
imul
cmp
inc
pop
mov
add
push
mov
int3
retw
jge
mov
xchg
je
pop
sbb
out
hlt
aaa
dec
sbb
add
cmpsb
lret
add
jle
inc
push
add
bound
push
pop
sbb
and
sbb
jb
jae
jb
jae
cmpl
sbb
pusha
sbb
push
xor
mov
jl
out
push
jb
xor
fistps
out
outsb
xchg
sub
andl
inc
xlat
divb
sahf
dec
mov
mov
or
mov
sbb
mov
js
dec
in
xor
sbb
sbb
add
bound
fcom
pop
pop
imull
mov
hlt
sar
mov
xchg
mov
cmp
arpl
inc
call
pushf
leave
mov
mov
out
mov
ds
mov
xor
add
out
pop
ja
push
push
cmp
rorb
mov
into
jg,pn
imul
pushf
out
addr16
mov
in
insb
imul
sahf
or
xchg
or
mov
inc
cmp
psubw
mov
xor
mov
repnz
clc
outsb
lret
cs
cmpsb
int
push
xlat
or
scas
push
push
dec
mov
cmc
lahf
mov
or
std
or
xor
imul
lahf
das
loope
adc
test
mov
push
adc
leave
std
pop
and
jl
mov
xchg
in
mov
xchg
inc
inc
or
popa
xor
sub
or
lcall
test
push
les
int
lock
int3
and
aam
fisubrs
popa
gs
and
add
es
mov
lret
jo
imul
mov
adc
cmp
fisubl
mov
jmp
aad
xlat
push
dec
lcall
jbe
adc
enter
sub
call
rcrl
movsb
rcl
in
push
dec
into
cs
mov
in
scas
mov
and
popa
lock
push
add
fsqrt
popa
and
test
push
bound
push
divl
lods
dec
jmp
and
push
jecxz
ret
adc
jg
xchg
or
scas
lret
fiaddl
or
je
pop
sbb
xchg
imul
mov
add
std
fs
clc
pop
or
jle
out
mov
cltd
pop
sub
push
in
stos
sub
in
or
sbb
mov
cmp
and
pusha
add
std
dec
test
out
push
xchg
icebp
scas
mov
mov
mov
xor
jno
add
rcl
cmp
loope
repnz
mov
cmpl
xchg
fwait
adc
jl
xchg
mov
cltd
push
shrb
cmp
int
sbb
add
xchg
pop
bound
xchg
sub
inc
cmp
xor
das
xor
insl
aas
dec
scas
ret
arpl
inc
incl
xor
sub
dec
jp
dec
inc
cmp
fs
jmp
icebp
call
mov
mov
push
adc
ljmp
pop
in
jne
jno
scas
out
jge
out
movsb
ljmp
mov
fisttpl
int
sub
sbb
xor
loope
mov
es
out
add
mov
in
xchg
push
lret
lea
aam
or
jne
jecxz
leave
fsubr
repnz
scas
jecxz
mov
loope
push
cmp
pop
cmp
lods
or
and
les
jp
push
nop
sbbl
xor
gs
jmp
dec
nop
jno
ljmp
sub
push
push
or
jne
outsl
jge
lods
mov
ret
mov
xor
xchg
jl
mov
lods
out
cmp
sahf
push
sbb
fnstsw
fldt
or
icebp
roll
xchg
pop
add
mov
xor
insl
mov
xchg
in
pop
mov
hlt
dec
lock
imul
daa
xor
in
sub
mov
sahf
dec
mov
mov
in
imul
pop
imul
lahf
movl
inc
popf
mov
jp
in
xchg
jbe
addr16
scas
cmp
dec
add
pop
mov
enter
clc
dec
add
fchs
ret
mov
push
ljmp
jge
xchg
mov
nop
loop
add
mov
mov
pop
je
call
pop
lahf
mov
pop
inc
mov
orl
and
pushf
or
xor
push
inc
addr16
ja
movsl
stos
jl
mov
push
stos
mov
xor
xchg
out
push
sbb
inc
cmpsb
jg
mov
jmp
ret
xor
icebp
js
js
dec
pushf
dec
int
sub
add
sub
leave
addr16
ljmp
mov
push
and
fs
mov
in
testl
or
repnz
mov
adc
adc
daa
dec
push
and
out
or
scas
mov
fisubrs
xchg
pop
dec
mov
sbb
push
sbb
sbb
add
pop
inc
xchg
ret
mov
and
fiadds
out
push
jns
xor
xchg
push
lahf
hlt
sbb
mov
pop
lds
jge
mov
cmp
out
mov
scas
and
je
jo
dec
cmp
mov
xlat
out
xor
es
inc
xchg
pop
sbb
add
mov
fmuls
aad
xchg
scas
loope
in
pop
mov
stc
outsb
stos
leave
nop
bound
jnp
adc
or
enter
cmp
jne
or
out
fcomps
push
xchg
cltd
lret
fimuls
movsl
jg
sbb
ret
mov
mov
adc
pop
push
mov
cwtl
sahf
pop
mov
mov
rclb
xchg
dec
or
xor
xor
push
lea
sbb
jl
stc
dec
jmp
inc
or
xchg
mov
popa
mov
add
xor
add
lea
shll
xchg
mov
stc
mov
iret
jne
cwtl
mov
scas
fisttpl
mov
xchg
jne
sti
add
pusha
adcb
out
test
dec
mov
insl
add
cmpb
or
push
shr
cmp
out
mov
fnstsw
data16
hlt
loop
insb
jo
pop
test
and
iret
mov
cld
jl
cmp
lods
push
cmp
pop
push
pop
adc
mov
out
push
add
es
dec
mov
mov
cmp
inc
xor
jb
sub
fmul
icebp
lds
ja
aaa
loopne
sub
jmp
adc
mov
into
out
mov
mov
pop
movsb
pushf
push
xchg
mov
xor
and
loope
cmpsl
pop
push
aam
insb
pop
push
jno
mov
jnp
mov
jge
mov
sub
int
in
mov
lods
fldenv
pusha
insl
aas
sahf
aam
add
stos
mov
mov
xor
or
xchg
sub
push
mov
add
push
and
je
cmp
dec
aas
mov
pop
and
pop
sbb
call
mov
iret
sbb
test
adc
adc
rcl
cld
imul
dec
sub
inc
repz
jle
mov
mov
lock
rolb
std
xchg
bound
test
mov
jg
mov
mov
or
insl
into
cmp
roll
inc
cmp
mov
inc
inc
hlt
push
sbb
add
movsl
jnp
jno
aaa
mov
aad
in
mov
imul
lea
dec
pop
bound
pusha
out
outsb
sbb
mov
jae
sub
stos
pop
sbb
cmp
sbb
les
aaa
rcr
xchg
inc
ds
hlt
out
dec
imul
aad
pop
ret
sub
or
pop
sub
pusha
je
inc
movsl
jp
mov
rcr
insb
lock
mov
clc
fmull
cmp
inc
mov
ljmp
test
sub
or
jle
int
or
mov
stos
and
into
mov
jnp
xor
push
fimuls
rorl
inc
cmp
cmpl
xor
in
jg
das
lds
shlb
xchg
inc
pop
into
ror
add
in
mov
in
cmp
adc
iret
dec
lret
mov
mov
into
cmp
popa
neg
ret
aaa
and
mov
pop
pop
push
icebp
or
lea
clc
jecxz
mov
xor
frstor
push
inc
xchg
add
mov
insl
pop
outsl
or
xorl
mov
dec
leave
mov
test
pusha
inc
jb
or
idiv
adc
sub
int
lea
out
inc
cltd
insb
lods
test
xchg
mov
push
adc
dec
xor
sub
outsb
inc
or
adc
das
popa
or
jo
push
out
pop
dec
cmp
sahf
jg
pop
mov
dec
mov
xchg
and
jb
ret
fistps
dec
mov
in
pop
push
dec
jne
inc
pop
jecxz
mov
mov
fwait
mov
dec
jae
and
jo
sbb
sbb
bound
fcmovu
jp
in
cmp
or
cli
stc
popa
xlat
orl
cmp
aad
cli
adcl
mov
push
outsl
ror
jb
loope
sbb
pushf
daa
fwait
mov
add
adc
pop
test
imul
sub
lea
pop
bound
dec
out
fimuls
rcr
rclb
sbb
enter
push
lret
push
pop
sub
inc
scas
jbe
movsl
sbb
or
ljmp
ja
xchg
sub
shll
lock
push
sbb
add
inc
mov
idivb
addb
nop
int3
popf
loope
mov
add
aaa
cmpb
outsb
hlt
lahf
out
jbe
sbbl
mov
nop
fidivl
jp
ret
out
push
incb
popl
inc
or
test
mov
xor
lcall
rcr
das
dec
fwait
sub
and
ja
dec
cmp
popa
cmp
jns
popa
clc
dec
aas
inc
nop
mov
fildl
sbb
pop
jo
stos
fdivl
push
subb
movsl
in
sub
out
dec
sbbl
jmp
stc
inc
flds
cltd
int
pop
push
xor
jb
or
cmp
xorl
mov
sub
mov
adc
aas
pop
mov
fdivrs
cltd
lcall
rorb
movsb
xchg
adc
mov
imul
mov
and
loope
into
ret
lds
pop
in
in
xchg
out
mov
mov
jle
repz
pop
xchg
mov
fsincos
insb
movsl
icebp
pusha
lock
call
jmp
es
push
rcll
mov
iret
movsb
and
pop
pop
std
stos
cmpsb
push
fisubrs
mov
add
xor
push
push
pop
sarl
stc
xor
mov
mov
int
fld
fs
outsb
jmp
xchg
pop
add
lret
adc
push
dec
pop
sti
std
mov
movsl
pop
xchg
enter
sbb
bound
inc
scas
dec
pop
in
xchg
add
pop
sahf
push
mov
lock
xor
call
and
in
arpl
dec
cmpb
iret
jne
loopne
in
cmp
adc
psrad
daa
sub
aaa
je
fidivs
lret
dec
sbb
arpl
lods
daa
jl
push
or
roll
test
xor
or
movsl
lcall
jnp
test
cmpsl
cmpl
shrl
aaa
int3
sub
into
movsb
addr16
cmp
dec
inc
mov
rcl
dec
in
mov
rolb
mov
popf
scas
inc
mov
mov
in
pop
call
cs
xchg
and
sbbb
mov
push
cmc
jno
je
or
fcomps
sbb
dec
dec
adc
mov
call
adc
in
loopne
in
sub
test
leave
jns
jle
pop
repz
lods
sarb
sub
sbbb
aas
or
mov
or
xchg
sub
jb
push
xor
mov
adc
ret
roll
and
inc
out
xchg
jmp
sti
std
pop
ficomps
or
gs
adc
push
into
cmpsb
lret
inc
out
clc
fisttpl
lods
jns
es
xchg
jle
jnp
xor
push
pushf
jmp
and
leave
ret
lret
mov
add
pop
pop
dec
int3
sbb
ja
adc
mov
xor
imul
add
jne
fstpl
js
jp
imul
arpl
mov
add
loop
fnstenv
repnz
push
loopne
jmp
enter
addr16
push
cmp
inc
dec
jg
ljmp
mov
xchg
in
mov
addr16
dec
or
push
or
cli
cmc
cmp
xor
add
mov
rorb
push
test
ja
jno
nop
lret
pop
fs
ljmp
mov
push
push
into
mov
gs
xchg
insb
mov
mov
push
movsl
jg
mov
mov
mov
xchg
into
pushf
imul
dec
lcall
std
pop
test
mov
repz
xchg
mov
push
aas
pop
lahf
xor
scas
mov
push
xchg
xor
sub
adc
pop
jns
out
mov
jge
xchg
or
decl
cli
aaa
pop
jg
cltd
in
sbb
in
ret
cmpsl
dec
xor
cmp
insb
cltd
repnz
cmp
out
mov
xchg
push
lock
or
add
sub
aas
add
repz
sbb
push
push
add
les
xorb
dec
dec
mov
jae
cmp
dec
daa
dec
data16
cld
pop
lret
iret
and
lods
xchg
adc
cld
mov
pop
in
dec
mov
cmp
js
inc
adc
dec
rcr
test
insb
lea
lods
movsb
lock
popf
cmp
cmp
adc
mov
bound
cmp
lcall
movsb
xorb
pop
and
jmp
pushf
das
sub
call
pop
repz
sar
int3
fs
cmpsb
fists
cmp
xchg
imul
jb
add
clc
dec
jl
dec
or
int
xor
pushf
popf
push
jecxz
cmpsb
scas
imull
fsubrl
lods
push
xchg
pop
mov
push
aam
adc
jo
cmp
fdivrp
fiadds
mov
push
lret
jbe
pop
icebp
xchg
pop
mov
and
ja
icebp
ds
loopne
cmp
xchg
aas
or
call
clc
cmp
shrb
movsb
mov
jecxz
gs
loope
push
popf
pop
jp
popa
jl
cmp
icebp
ljmp
je
sti
dec
mov
and
or
incl
pop
mov
stc
dec
mov
clc
and
cmp
fwait
push
push
insb
push
sub
pop
xor
mov
das
pushf
xorb
adc
mov
dec
pop
dec
jb
mov
dec
subb
js
dec
inc
pop
cld
jno
xchg
mov
xor
js
idivb
out
imul
cmp
test
test
mov
sbb
scas
add
push
pop
xchg
mov
adc
pop
loopne
inc
ret
and
leave
adc
into
jns
jle
and
pop
ret
fwait
mov
jbe
or
out
pusha
fisubrs
and
cmpl
jb
add
sub
testl
bndldx
ja
mov
mov
inc
push
sub
and
repz
xchg
imul
xor
mov
mov
movsb
add
jns
pop
jg
adc
mov
xchg
movsb
fsubl
insb
jo
call
mov
hlt
sub
mov
xchg
test
jne
decb
inc
push
add
xlat
xor
sub
pop
sbb
mull
movsb
sbb
or
hlt
stos
xchg
roll
cltd
jae
dec
mov
jb
cmpsl
pop
mov
pop
imulb
fwait
sbb
jnp
sub
movsb
mov
mov
jecxz
fwait
and
fstpt
add
xchg
adc
ljmp
subl
pop
in
shl
mov
inc
das
sbb
cli
ds
sti
adc
stc
repnz
push
mov
dec
mov
in
push
test
cmp
ja
jbe
in
in
inc
aad
xchg
mov
push
or
sub
pop
xor
pop
loop
popa
sahf
shlb
pushf
loop
mov
repnz
jo
mov
jae
test
xchg
cmp
fdivrl
leave
not
aam
mov
pusha
idivb
xor
mov
push
pop
lret
inc
xchg
adc
xor
mov
cmp
and
pop
cmp
fisubrl
add
jmp
aad
xorl
inc
cmpsl
aad
pop
xchg
xor
xchg
ja
icebp
movsb
pop
stos
cmp
sub
dec
cmp
mov
sbb
lds
lahf
sti
and
cmp
int
ljmp
pop
or
mov
push
xor
ss
sub
lret
inc
fwait
xchg
ret
fnstcw
inc
xchg
xchg
sub
mov
xor
aas
cmp
xchg
popl
sbb
shr
sbb
rorb
push
ja
adc
scas
shrb
add
mov
sub
cmp
mov
xor
pop
jg
das
adcl
cmp
dec
mov
xchg
pop
insl
xor
lds
das
call
fcoms
mov
mov
sub
pop
lods
push
lahf
add
push
aad
insb
push
dec
mov
pop
pop
jl
xchg
das
pop
ret
outsb
and
or
jb
cs
xchg
aas
aad
je
push
adc
xor
sahf
and
imul
push
fdivs
dec
xor
push
sahf
jne
mov
repz
lock
bound
pop
mov
inc
ljmp
pop
test
insb
pop
push
mov
iret
and
sbb
push
cmp
mov
test
iret
mov
pop
out
in
and
fsubl
sub
adc
loope
mov
mov
xchg
inc
sbb
push
sahf
push
pop
xchg
xchg
adc
sub
ljmp
sbb
shlb
fwait
inc
jbe
loop
push
mov
xchg
lds
int
and
xor
aas
push
pusha
push
ret
jo
das
mov
pop
loopne
and
xchg
xor
xchg
xchg
or
test
sbb
imul
or
popa
test
cmp
adc
mov
inc
lock
shrb
jp
sbb
loop
mov
nop
data16
mov
iret
jne
lds
ljmp
mov
lret
add
adc
xchg
adc
xchg
mov
scas
sbb
dec
lock
xor
add
jnp
out
mov
jge
dec
xorl
aam
lods
dec
mov
test
out
cmpsl
aaa
push
aaa
ret
idivl
jno
mov
mov
or
mov
adc
jle
fwait
decl
fistps
sarb
rol
xchg
addr16
fisttps
cmpsb
decl
mov
lcall
lahf
mov
jae
prefetchw
orb
sbbb
or
scas
sahf
mov
insl
mov
es
jbe
sbb
loop
popa
cmpsb
les
push
cltd
xor
mov
inc
repz
inc
fdivrs
js
or
add
int
pop
mov
and
int3
popf
aas
jmp
jbe
imul
jge
pop
pusha
adc
fdivrl
xchg
push
adc
dec
or
push
repnz
jecxz
mov
jns
repnz
jb
in
in
test
enter
jmp
loopne
rolb
jecxz
jecxz
dec
push
jp
push
jae
push
add
gs
fists
rorl
aas
ljmp
clc
hlt
negl
adcl
lret
test
movsb
inc
or
sbb
jae
or
mov
popa
nop
inc
xor
cmp
jns
outsb
ret
sbb
sbb
sbb
sbb
gs
addr16
jmp
popa
or
iret
in
cwtl
mov
jne
adcl
mov
adc
dec
jne
addr16
pop
jb
mov
adc
mov
mov
add
shlb
aad
sub
les
or
es
push
cmp
arpl
lock
test
cld
stc
mov
pop
outsb
out
jle
scas
jge
out
scas
fdivp
add
out
jb
pusha
mov
in
imulb
inc
mov
and
cli
mov
adcb
mov
cmp
leave
jmp
push
push
je
cmp
mov
pop
aas
sar
sbbb
shl
enter
xchg
inc
or
pop
fnsave
lea
sbb
std
sub
divl
add
leave
xchg
mov
push
inc
sub
pushw
out
in
add
decb
adc
pop
aaa
xchg
jg
std
arpl
sub
push
jg
inc
repnz
lea
pop
sbb
sub
stos
add
fldcw
js
mov
outsl
mov
roll
sbb
xchg
dec
xor
enter
sbb
test
push
cmp
mov
mov
cmp
scas
and
add
inc
pop
push
sbb
jp
jl
add
icebp
xor
arpl
inc
repnz
scas
cwtl
pop
arpl
sub
push
add
call
sahf
ljmp
inc
fistpl
push
push
pop
push
sbb
fcompl
push
pop
mov
mov
dec
icebp
out
jg
push
dec
stos
adc
push
xchg
movsb
add
mov
sub
or
enter
and
pop
mov
das
sub
out
push
sahf
inc
sbb
fmuls
jae
lahf
jne
pop
xchg
fsubrp
or
call
fwait
test
jmp
adcb
sub
jns
out
stos
mov
dec
mov
mov
int3
jp
sub
cmpl
push
std
aam
notb
mov
fwait
xchg
or
mov
lahf
mov
push
popa
sbb
cmpsl
mov
sbb
lret
stos
lea
test
xchg
scas
cli
sbb
pop
mov
jnp
call
in
scas
cltd
dec
sub
inc
test
and
test
mov
jge
leave
cmpl
std
mov
lcall
jo
mov
ffreep
gs
shr
sub
push
stos
shr
test
pop
adc
cmpsl
adc
mov
pop
mov
call
sbbb
std
in
inc
in
mov
jbe
mov
mov
je
pushw
push
rcrb
call
loopne
sbb
or
repnz
sbb
and
mov
insb
out
mov
mov
das
sub
lock
add
mov
sub
xchg
and
stc
rcll
inc
xchg
mov
xchg
jno
imul
xor
mov
xchg
sarl
jle
dec
out
test
clc
stc
rcr
push
cli
int
daa
xor
pop
outsl
adc
dec
hlt
adc
lret
cli
push
in
push
imul
outsb
jl
inc
sbbl
jge
xchg
loope
inc
fcompl
or
sub
dec
enter
aam
insl
cwtl
insb
enter
mov
nop
mov
mov
cmc
cwtl
add
mov
sar
jno
push
js
xlat
insl
xchg
rclb
pop
cs
aam
cmp
mov
out
fbld
add
or
cmpsl
pop
xor
adc
jnp
xchg
test
jb
dec
xlat
movsl
mov
dec
mov
push
jno
push
inc
lods
insb
adc
leave
test
subb
lock
inc
enter
pop
stos
xlat
aas
jo
pandn
dec
sbb
fists
sbb
add
in
ljmp
inc
xchg
aaa
nop
xor
xor
xor
outsw
push
ss
sbb
movsl
mov
or
stc
loope
mov
sbb
xor
sbbl
or
rclb
psadbw
bound
add
test
repz
mov
xlat
lcall
das
pop
or
xor
pop
dec
out
lock
cmp
or
jle
cs
fisttpl
fs
and
out
sub
loopne
test
mov
and
adc
popf
xor
xchg
iret
sysexit
inc
xchg
push
push
mov
mov
out
jb
mov
adc
repnz
mov
test
nop
xchg
xchg
aaa
lcall
push
ret
lahf
jecxz
je
int3
dec
movsb
out
xor
add
add
jno
jp
jno
mov
in
sub
lret
iret
mov
repnz
mov
mov
test
fstps
cmp
addl
mov
xorl
xor
push
pop
jle
pop
aad
stc
sbb
push
mov
mov
stc
push
and
inc
iret
icebp
andb
add
arpl
imul
cltd
cmp
ret
dec
fwait
jo
cld
enter
lods
xchg
arpl
xor
add
bound
pop
mov
mov
dec
cmp
iret
clc
cmp
ret
pop
fcomps
mov
push
add
mov
movsb
fisubrs
data16
pop
add
mov
loope
movsb
fiaddl
call
sub
inc
test
mov
push
mov
fdivr
in
lock
mov
mov
xor
lds
out
shll
cmp
cmp
push
stos
push
out
lods
fiaddl
jle
push
cmp
movsb
mov
out
subb
or
jg
mov
push
lods
inc
fdivrp
cmp
fsub
xor
repnz
outsb
adcl
sub
mov
push
mov
in
cmp
push
fisubrl
lods
movsb
bound
lods
aad
leave
pop
sub
loop
adc
clc
add
jge
incb
icebp
sbbb
adc
in
pop
loopne
mov
into
xor
sbb
frstor
pop
loopne
test
inc
pushf
adc
mov
sahf
xchg
lret
mov
subl
dec
xchg
dec
add
mov
pop
add
jne
pop
jecxz
sub
scas
xchg
into
gs
jb
mov
adc
xor
sbb
jg
jne
outsb
mov
dec
inc
mov
rclb
mov
rdtsc
xor
push
inc
jmp
ret
cmpsb
adc
mov
mov
xor
push
or
mov
push
push
mov
call
mov
loopne
inc
xchg
fdivrl
das
outsb
inc
jmp
cli
dec
cmp
shrl
or
cltd
test
mov
inc
dec
adc
push
add
jne
enter
dec
jbe
adc
cmp
mov
fcomip
sub
test
ja
outsb
out
pop
sbb
arpl
mov
mov
pop
fucomp
adc
aas
popa
je
mov
mov
insl
mov
and
push
xor
je
fdivrl
and
cwtl
imull
cmp
pop
push
mov
xor
int3
cmpsb
sbb
sarb
pop
gs
inc
xlat
popa
inc
or
xor
out
fidivl
es
xor
mov
push
mov
je
inc
sbb
lods
repz
popf
push
jae
pusha
mov
movsb
sti
ja
cmpsb
not
mov
mov
mov
js
jle
sub
jnp
imul
or
ds
incl
jo
push
cmp
stos
jmp
pop
jl
ljmp
sti
pop
arpl
or
adc
ds
pop
nop
btsl
scas
cmp
roll
and
jb
dec
xor
sub
jmp
jno
push
testb
push
and
jg
call
jg
lcall
xchg
lods
inc
sub
aam
inc
mov
jbe
sbb
pop
jg
gs
jl
nop
mov
data16
mov
jp
push
adcb
andb
inc
dec
xor
bound
outsl
divb
xchg
cmpl
leave
pop
and
jge
in
inc
mov
cmpb
adc
in
lods
into
je
test
enter
cld
das
add
or
lds
loop
dec
cs
pop
icebp
xchg
mov
pop
sub
cmpl
mov
incb
shrl
scas
inc
add
mov
and
xchg
aad
dec
mov
add
mov
cld
loope
fidivl
mov
shlb
pop
jl
push
imul
jge
repnz
jl
shll
mov
push
sub
cmovne
cs
adc
bound
int
out
and
xor
add
cmp
ljmp
test
sub
dec
cld
xchg
in
in
clc
pop
lods
test
aad
add
jmp
cmp
ss
in
lahf
movsl
mulb
hlt
adc
fwait
pop
inc
sbb
js
hlt
mov
jp
adc
adc
mov
int3
mov
stos
dec
jecxz
movsb
mov
sbb
mov
mov
mov
ja
test
sbbb
scas
jb
mov
les
clc
shl
fildll
mov
adc
call
mov
pop
lret
inc
pop
aam
fiadds
push
ljmp
es
cmc
xchg
test
stc
inc
push
fadds
mov
mov
mov
inc
decb
mov
cmc
sub
mov
enter
es
sbb
adc
in
add
jnp
xchg
addl
pushf
aam
push
outsb
fs
test
xchg
out
sbb
or
sub
adc
inc
push
fstpl
shr
hlt
test
jp
aas
or
adc
scas
lcall
sub
mov
push
shl
cmp
ret
insb
ljmp
test
dec
out
popl
and
outsl
mov
adc
addr16
out
cld
iret
cmp
add
cmp
pop
dec
xor
add
std
xchg
loopne
adc
xor
stos
stos
adc
lahf
cwtl
das
loopne
add
dec
mov
sub
xor
scas
movb
jg
ret
mov
ds
sbbb
add
sbb
sarb
adc
mov
stos
and
xchg
push
jge
mov
movsl
enter
ret
and
pop
sub
loope
cmp
movsb
adc
pop
int3
xor
lret
test
ljmp
xor
stos
cmp
or
sub
adc
dec
mov
sahf
test
fnstcw
scas
outsb
cmp
push
and
jo
pop
ret
or
ds
cmp
mov
stc
push
loopne
outsb
mov
adc
mov
es
or
dec
les
sub
mov
sub
jo
add
jp
sbb
cmc
shl
stos
ret
outsb
mov
or
dec
inc
mov
pop
lcall
adc
jl
jecxz
sub
mov
xchg
arpl
dec
pop
lahf
push
arpl
fwait
mov
inc
and
hlt
mov
dec
sub
adc
testb
jmp
push
and
jg
ret
sti
mov
lock
ret
mov
pop
fucomp
xchg
cs
mov
sub
or
sbb
push
aad
cmp
xor
aas
push
jbe
insl
adc
in
push
pushf
insb
scas
clc
or
mov
add
es
fwait
hlt
subl
nop
scas
sub
dec
cmpsl
fimull
sti
xchg
out
imul
lret
pop
clc
sbb
adc
jno
sbb
scas
movsb
sub
lods
inc
adc
ret
out
pop
sub
push
sub
out
cmp
shlb
fldcw
movsl
ret
movsb
inc
jle
fdivl
daa
mov
add
push
cmp
sbb
ret
cmp
dec
insb
adc
add
jnp
stc
dec
dec
andb
les
push
mov
jmp
ljmp
fucomip
test
dec
sbb
mov
ret
push
sub
mov
and
xor
and
pop
out
and
dec
cmp
fcmovbe
divl
out
mov
pusha
or
mov
and
insl
out
aaa
mov
mov
xchg
ljmp
pop
fidivs
or
adc
or
mov
push
stos
loopne
cmp
pop
icebp
sub
stos
pushf
lcall
test
add
sub
xor
dec
add
inc
addr16
dec
out
into
ds
mov
inc
adc
subl
inc
lret
pop
daa
push
add
jnp
ret
add
sbbl
push
mov
mov
xor
andnps
sub
jp
mov
dec
ret
out
mov
or
xchg
adc
xor
daa
fwait
dec
mov
mov
mov
xchg
orb
xor
or
jae
rorb
stos
add
push
lcall
lods
jbe
stos
mov
lods
sub
or
xchg
jmp
and
and
add
std
pop
push
andb
sub
cld
and
ljmp
inc
mov
sub
xor
and
push
repnz
sub
lret
mov
sub
pushf
pop
into
lea
ljmp
das
negl
fstps
cmp
jl
adc
cmp
jecxz
push
imul
aas
mov
adcl
aam
pop
shrb
subb
es
push
jl
rcr
stc
arpl
sub
pop
adc
imul
call
ljmp
and
lods
clc
mov
adc
scas
lcall
sub
mov
jmp
sti
hlt
sbb
out
dec
push
enter
sbb
mov
cwtl
loop
xor
lret
inc
inc
stos
scas
jb
pop
adcl
cmpb
jecxz
push
fdiv
ret
push
mov
jne
in
loopne
jl
in
or
mov
stos
in
jg
and
ljmp
push
aaa
push
sub
dec
mov
xor
lock
loope
daa
add
sbb
sti
pop
shlb
or
xchg
sti
inc
mov
sub
shrl
enter
sub
and
or
loop
mov
mov
jl
or
cltd
fcomip
xorb
jnp
sbb
xchg
jnp
xlat
mov
sub
cmp
loopne
lods
sub
cltd
push
pop
cwtl
loop
inc
mov
mov
and
or
and
xor
mov
cmc
cmp
out
adc
rcll
dec
mov
shll
lods
into
mov
imul
xlat
gs
outsl
shrl
adc
adc
add
dec
jge
inc
and
xor
data16
mov
lods
inc
loopne
jmp
movsl
mov
fxam
loop
repnz
aaa
xchg
mov
fucom
xchg
push
mov
dec
cmpsl
out
mov
adc
int
imul
pop
test
icebp
clc
aad
xor
loopne
sti
jns
arpl
sbb
dec
sub
push
push
push
jl
sar
cmp
cmp
idivb
dec
xor
daa
jecxz
inc
subb
cmp
xchg
out
push
rcll
xor
mov
sbb
pop
int
test
mov
inc
mov
xor
push
loope
in
xlat
lahf
push
movsb
sbb
lds
fwait
adc
and
aad
push
dec
and
jne
inc
mov
xchg
cmp
fsubrl
cli
pop
or
pop
jb
push
jp
shlb
push
loope
roll
repz
jecxz
or
es
insb
and
cwtl
in
push
add
push
pop
push
dec
cs
push
mov
dec
addr16
or
inc
pop
int3
nop
adc
pop
push
sub
das
lahf
arpl
cmp
movsb
fildll
sub
shlb
hlt
pop
fidivrl
lahf
dec
lds
inc
and
imul
fs
int
mov
mov
xor
std
jmp
mov
jg
xlat
jbe
add
push
add
cs
ret
arpl
cmp
jp
test
loope
ja
and
xchg
push
das
dec
leave
sbb
ja
out
mov
flds
aam
cld
xchg
inc
or
rclb
jp
jle
mov
loop
das
loopne
imul
rcll
rorl
or
jo
or
or
push
mov
push
mov
cmp
cmp
test
outsb
add
jecxz
push
mov
arpl
int
pop
bnd
int
and
in
loope
lcall
lds
add
add
lcall
push
stc
pop
xor
enter
xorb
aaa
add
add
push
in
iret
das
sub
sub
jns
and
lods
mov
pop
in
cmp
and
cwtl
mov
and
into
jmp
imulb
out
cmp
push
mov
jo
jb
push
dec
and
xchg
mov
imul
push
dec
and
test
and
jecxz
mov
cld
pop
xor
xchg
jmp
xchg
scas
cltd
sbb
sbb
imul
push
sub
insb
cltd
imul
mov
push
mov
iret
push
ss
adcl
sub
jle
out
outsl
sub
fmul
pusha
and
mov
test
fcoml
add
mov
xor
jo
pop
and
cmc
xor
push
add
cmp
subl
xor
aad
sub
out
dec
and
outsl
sbb
sbbb
xor
xchg
daa
and
push
iret
movlps
adc
daa
cmp
cmpsb
out
into
dec
mov
sub
inc
add
cmpsb
into
push
sub
std
fisttpll
add
fs
jle
mov
dec
inc
and
dec
xor
jnp
mov
jae
imul
and
cltd
sub
shrb
int
loopne
xor
sbbl
inc
loop
pop
sbb
push
iret
pop
leave
fisubrl
sub
mov
mov
mov
mov
lret
or
popf
inc
cmpl
rep
int
and
repnz
xlat
outsb
ss
mov
dec
mov
cld
fcomi
nop
fisttps
push
fldcw
popf
cmc
mov
push
pop
mov
jp
stos
jp
nop
es
cld
aaa
push
pop
jo
pop
lret
sbb
mov
popf
cltd
mov
xor
xchg
gs
jne
scas
rcr
fs
test
hlt
in
sub
iret
loopne
ljmp
push
fldl
pop
std
push
hlt
xchg
adc
adcb
jae
and
mov
sub
movsl
icebp
add
outsl
and
fwait
mov
cmp
jno
int
cmpl
cmpsb
dec
xchg
mov
adc
mov
xchg
aad
pushf
loopne
sbb
xchg
or
scas
push
push
push
call
and
xorb
fdivl
imul
lock
add
fmull
pop
mov
add
sub
and
push
xchg
sub
add
push
sbb
lock
and
cltd
xchg
test
jnp
shrb
ds
es
mov
cs
int3
jb
in
mov
roll
rol
das
pop
cmp
es
popf
push
push
call
fwait
add
pop
fstpl
sbb
adc
mov
xchg
lahf
scas
mov
xor
cmpsb
pop
xchg
test
xchg
jnp
xlat
test
xlat
mov
sbb
daa
adc
cmp
cld
add
dec
push
ficompl
jbe
rol
pop
pop
xor
out
pop
leave
add
and
dec
enter
fcompl
cmp
divb
inc
ja
icebp
adc
repnz
push
pop
push
push
imul
dec
sbb
fwait
popf
sub
or
sbb
lret
enter
iret
psadbw
push
mov
fwait
mov
xchg
pop
inc
stos
out
scas
dec
mov
in
subl
js
adc
ja
call
pop
scas
movsb
idivb
xor
lret
adc
cltd
pop
dec
jle
or
cmp
test
mov
daa
loope
mov
sbb
fdivrl
test
xchg
fidivl
insb
cld
dec
adc
out
pusha
sub
jmp
out
ljmp
pop
rcrl
xchg
xchg
mov
fistps
out
pop
lret
push
andl
jle
mov
adc
xchg
outsl
call
push
mov
dec
adc
addl
fldcw
int
leave
stos
inc
call
sub
sbb
shrb
cli
jg
je
dec
inc
inc
sbb
mov
negl
pushf
mov
stos
mov
or
add
outsb
fcompl
test
and
sti
imul
pushf
sbbb
xlat
push
in
push
repz
fiaddl
cmc
andl
xorl
mov
inc
cmp
in
or
cmc
lea
fs
out
in
add
test
in
xlat
mov
call
push
scas
out
mov
add
arpl
shrl
and
push
inc
sbbb
inc
push
in
xchg
je
dec
mov
mov
mov
push
rcrl
jae
sub
sbb
sub
or
mov
push
push
fcompl
push
mov
cmc
mov
jae
sbb
data16
in
adc
and
stc
pusha
adc
lea
xchg
aam
jmp
movsb
or
clc
sbb
movsl
sub
xor
movsb
xchg
or
xchg
dec
or
test
jg
mov
addr16
mov
jl
lcall
jmp
xchg
out
out
gs
cmpsl
dec
data16
sbb
ljmp
inc
mov
xchg
xlat
dec
into
lock
mov
pop
push
test
fiadds
pop
in
iret
dec
xor
stos
fstl
mov
dec
xchg
xchg
pop
leave
mov
out
xchg
mov
sbb
jno
inc
add
popf
push
fcmovnbe
mov
push
inc
add
fldenv
cmpsl
pop
testb
loope
daa
sbb
or
mov
les
or
mov
inc
lret
ret
hlt
push
xchg
jo
pop
cmpl
scas
lea
push
fisubrs
stc
sub
mov
push
sub
hlt
fldcw
das
cmp
cmp
arpl
lods
lods
shlb
ficoml
dec
pop
and
pop
inc
dec
mov
pop
xchg
fidivrl
pop
je
arpl
arpl
push
push
adc
arpl
or
mov
inc
imul
mov
pop
adc
rorl
in
icebp
loope
inc
xchg
mov
xor
push
leave
pusha
xorb
mov
dec
xchg
aas
sbb
loop
sti
mov
mov
mov
popf
or
jnp
mov
imul
pop
js
adc
xchg
push
ss
adc
lret
mov
push
pop
rclb
add
aad
lret
xor
push
std
pop
mov
aam
xchg
push
out
cmc
push
pusha
je
add
add
icebp
ret
ds
mov
cmp
out
xor
adc
mov
data16
pop
jae
ret
xchg
push
jbe
lret
lret
data16
fsubl
inc
hlt
inc
mov
data16
popa
repz
fadd
push
in
cld
sbb
cmp
aaa
jl
add
iret
mov
mov
mov
push
inc
pop
and
movsb
pop
sub
xchg
addr16
cli
mov
jbe
subb
rorb
pusha
lahf
aaa
dec
mov
inc
sbb
stos
mov
sub
xor
arpl
add
dec
xchg
test
xchg
and
testl
rcrb
mov
xchg
mov
pusha
fwait
pop
mov
xchg
ror
pushf
add
fld
scas
in
xchg
jge
or
clc
add
arpl
dec
dec
or
mov
lahf
jo
negl
mov
or
sub
or
push
pusha
gs
sbb
dec
mov
ljmp
sbb
or
cmp
add
sub
cmovp
xlat
enter
xchg
lods
mov
sbb
xchg
mov
loopne
test
pcmpeqb
mov
cmpsl
rol
mov
cs
js
ja
mov
sbb
loop
into
enter
fidivrl
or
and
pop
cmp
lret
mov
into
lods
jnp
inc
dec
dec
pop
movsb
sub
dec
test
in
xchg
mov
shll
sub
pushf
loop
or
pop
pop
call
adcb
bound
inc
das
lock
and
insl
jbe
push
test
or
pop
cmp
inc
das
dec
mov
mov
mov
imul
push
xor
insb
js
adc
jle
cwtl
mov
out
mov
mov
dec
sub
das
mov
mov
aaa
push
outsb
mov
mov
sbb
mov
sbb
push
adc
mov
jnp
add
or
inc
pop
gs
xor
sbb
adc
xor
xchg
imul
sbb
mov
adc
dec
sub
popf
stos
movsl
adc
addr16
sub
pop
in
or
mov
fwait
div
fldenv
loope
push
sub
dec
je
xor
sbb
mov
xor
adc
mov
jb
rclb
and
or
inc
or
sub
inc
jge
mov
stos
or
cmp
mov
dec
popf
testl
out
mov
pop
hlt
xchg
fbld
movl
into
xor
out
push
sbb
pop
mov
lahf
mov
jne
ljmp
iret
mov
inc
iret
cmpsl
adc
insb
out
sbb
push
jnp
xor
or
out
lret
or
xchg
inc
mov
and
add
jo
movq
imul
dec
sub
mov
fnstcw
mov
int3
xor
push
or
cmp
cmpsl
scas
clc
xlat
test
jle
scas
cmpsb
repnz
cmc
addr16
mov
decl
xorl
dec
mov
mov
push
stc
inc
lock
cmp
mov
or
xchg
add
sub
hlt
mov
sarl
cld
pop
add
iret
test
sbb
pop
test
dec
jnp
sahf
cmp
jns
fildl
pop
mov
dec
cltd
jnp
gs
sbb
adc
int3
and
mov
test
jns
xor
nop
jbe
into
lcall
dec
push
adc
sbb
repz
xlat
pop
inc
xor
out
jmp
inc
dec
data16
xchg
inc
xor
add
fnstsw
cmpsb
xor
push
mov
insb
mov
pop
test
test
pop
mov
rorl
pop
nop
ds
cmpsl
decl
test
movsl
dec
cmpsl
mov
fisubs
js
inc
sbb
mov
fs
lret
push
cmp
sub
dec
imul
inc
enter
pop
jo
push
cltd
dec
test
inc
pop
mov
xchg
test
push
imul
and
jecxz
call
push
das
sub
cmc
add
mov
loope
xchg
adc
iret
pushf
leave
sub
and
gs
jl
push
scas
xchg
pop
adc
test
xchg
repnz
pop
xchg
pop
shl
mov
sti
inc
test
add
push
popa
lods
mov
mov
daa
xchg
dec
arpl
leave
jns
adcl
sub
sub
lahf
cli
xchg
ljmp
jmp
inc
mov
les
in
pushf
adc
inc
mov
dec
add
bound
push
jmp
icebp
cltd
mov
stos
xor
aaa
inc
push
pushf
or
dec
aam
int
jns
sbbl
mov
inc
adc
lcall
push
adc
jge
add
in
or
pop
jns
sub
mov
int3
nop
fdivl
inc
insb
dec
dec
pusha
out
jp
mov
hlt
out
je
shlb
dec
mov
push
adc
orl
in
mov
and
lds
or
ret
pop
mov
xlat
das
std
lahf
or
test
shl
cwtl
add
pushf
sbb
pop
fsubrs
bound
pop
mov
addr16
jo
xchg
sar
push
int3
jle
xchg
xor
inc
push
decb
dec
jecxz
sbb
test
mov
add
inc
cmpsl
or
mov
dec
inc
adc
in
roll
dec
repnz
test
loop
lods
das
sbb
jmp
rorl
arpl
and
test
mov
xor
push
clc
enter
mov
pop
into
fimuls
js
mov
fbld
sub
das
mov
add
outsb
xchg
lds
fwait
inc
dec
cmc
cmp
xor
mov
fdivl
jno
mov
mov
adc
sub
call
cld
adc
outsl
cmpsb
out
aad
in
imul
sbb
inc
addr16
js
mov
shll
xor
out
gs
sti
or
adc
jmp
inc
fcoms
clc
out
or
mov
or
mov
repz
int3
cwtl
ds
mov
hlt
mov
mov
addr16
aam
push
pop
xchg
add
xchg
cmpsb
dec
sarb
imul
lds
xor
outsb
push
ljmp
arpl
jbe
out
jo
popa
sub
daa
gs
dec
lods
js
or
xchg
or
lock
xor
add
mov
pop
and
out
sti
xor
movsb
fisttps
jae
mull
aad
jno
inc
mov
adc
mov
inc
mov
scas
fcmovu
adcb
lret
mov
imul
mov
sub
inc
mov
jmp
into
jg
clc
cwtl
pop
mov
idivl
in
mov
dec
cmp
fsub
addb
ja
xor
push
xchg
sbbl
test
adc
add
test
or
and
and
loop
int
mov
mov
mov
and
ror
jmp
out
push
scas
lret
sbb
rcrb
in
cli
imul
add
popf
scas
std
xor
xchg
aas
pop
push
popa
cmp
leave
rclb
push
adc
enter
inc
xchg
push
dec
adc
hlt
movsb
clc
mov
mov
pop
and
cmp
push
mov
sbb
shlb
inc
sarl
sbb
pop
ljmp
popf
jb
inc
jo
test
sbb
test
xor
jle
insl
jmp
push
dec
ret
and
push
cmp
mov
sub
stos
faddp
call
add
ljmp
push
xchg
and
mov
aaa
xchg
inc
sub
test
and
je
ficoms
test
lahf
adc
and
cmp
xchg
addr16
or
fcoms
in
mov
dec
push
mov
and
lahf
cmp
lods
iret
dec
outsb
ja
out
dec
xor
fistpll
jmp
inc
add
lcall
mov
or
shrl
jl
mov
iret
sub
push
cmpsl
xchg
xor
mov
push
shll
cmp
mov
push
add
jae
cltd
or
pop
jne
pop
fidivrl
jmp
pop
outsb
mov
xor
mov
fs
push
or
cmc
out
fimull
insb
pop
mulb
push
xor
loope
mov
ret
andl
pop
fs
mov
and
fcmovnu
sti
push
lret
cmp
gs
in
sar
push
inc
ds
sbb
pop
je
mov
mov
sbb
inc
jnp
inc
popf
insl
jbe
js
call
movsl
jecxz
enter
xchg
stos
test
or
cmpsl
lret
push
sbb
loop
std
xor
test
adc
call
ret
sar
popa
adcb
pop
lods
jmp
sub
or
out
push
push
mov
cwtl
xchg
mov
xor
push
or
in
xchg
push
xchg
test
dec
push
ss
or
cmpsl
inc
pushf
lods
std
cltd
push
mov
pop
and
push
fbstp
add
dec
add
out
mov
mov
lods
jne
fs
xchg
xor
mov
insl
cmp
xchg
push
sub
mov
xor
sarb
push
jb
jno
add
jno
js
push
pop
push
push
cmp
and
sub
out
int
cmc
shll
fwait
adc
ret
inc
lds
sar
dec
add
mov
out
in
cmp
xchg
rorl
jbe
outsl
fnstsw
add
dec
daa
dec
xchg
movsl
xor
xchg
mov
int
adc
add
and
ret
xor
lods
dec
dec
clc
mov
push
pop
test
xorl
in
cmpsb
std
sbb
xchg
and
or
sub
out
sbb
test
add
loop
es
fsubrs
push
pop
mov
cld
or
clc
fstpt
rcrl
and
sub
dec
push
addb
hlt
mov
lock
mov
mov
es
and
js
int
mov
add
inc
adc
mov
outsl
es
inc
mov
or
ljmp
adc
jb
lahf
mov
inc
inc
scas
jo
mull
mov
pop
popa
xchg
adc
in
int
pop
rclb
pop
lods
outsb
xor
dec
push
stc
dec
xchg
jmp
xor
ss
jmp
in
loopne
pop
loop
orb
arpl
imul
sub
pop
lahf
loope
movsl
mov
lret
pop
jae
les
xlat
lret
xor
out
dec
fwait
mov
jns
insb
or
sub
mov
mov
aad
in
hlt
sub
ds
imul
add
pop
movsb
dec
outsb
addr16
psubd
inc
orl
out
or
loop
testl
jb
jg
lahf
jbe
movsl
pop
jle
andl
cwtl
push
aas
mov
mov
faddl
fidivrl
cld
pop
enter
in
sub
dec
leave
and
cltd
xor
cmp
testl
addr16
call
loop
insb
cmpsb
test
inc
pmulhuw
mov
sub
test
sbb
repnz
test
xchg
add
xor
int3
js
subps
cmc
ss
lds
test
sbb
mov
cs
jg
and
push
push
test
outsb
sub
in
lds
cmpsl
call
int3
dec
aam
mov
in
or
loope
mov
and
dec
test
out
xor
fisubrs
xchg
inc
hlt
hlt
cmp
sub
orb
test
push
test
sbb
mov
aas
enter
icebp
jnp
stc
adc
and
mov
out
lds
jg
jae
mov
movsb
inc
loop
jb
movsl
mov
mov
notb
and
sbb
mov
testb
mov
adc
xchg
mov
xor
sub
add
bound
jns
or
gs
lret
fcompl
lods
aas
adc
mov
cmpsb
cmp
xchg
test
dec
loopne
lret
shll
xchg
xor
nop
inc
scas
daa
cmp
pusha
xchg
mov
cmc
stos
test
push
enter
lds
jo
ret
and
mov
movsb
es
sbb
cmpsl
divl
stos
aad
mov
dec
ficoml
jae
je
mov
movsb
cmp
out
outsl
int3
aas
sti
and
int3
lods
dec
rorl
adc
pop
push
aaa
outsb
sahf
dec
mov
lret
int
jbe
xchg
jl
jbe
lods
fwait
popf
mov
sarl
sub
outsl
rclb
add
mov
xchg
dec
icebp
dec
jo
test
jmp
sbb
mov
cs
mov
mov
adc
lods
add
adc
mov
xchg
sbb
mov
lcall
movsl
or
cld
pop
push
jle
pop
mov
insl
xchg
into
add
push
inc
leave
bound
outsb
sbb
or
stc
or
icebp
xor
mov
incl
shlb
mov
xor
ljmp
jecxz
mov
push
adc
adc
pop
xchg
adc
loopne
or
out
out
mov
cmp
cmp
xor
popf
mov
or
iret
xchg
into
pop
push
orb
pop
push
sbb
mov
xchg
fsubs
push
mov
adc
pushf
jbe
and
std
mov
mov
ss
stos
xor
sub
jo
push
subb
lea
inc
cmp
xchg
add
xor
mov
add
jl
sbb
insb
pushf
in
dec
cmp
push
daa
lds
jbe
jo
repnz
fxch
loope
sbb
orl
addb
xchg
test
dec
and
adc
hlt
sub
iret
sbb
into
sub
cmpsb
sqrtps
adc
push
xchg
aaa
loopne
sbb
sbb
je
into
sub
outsl
cmpsb
adc
adc
lcall
cmp
xor
push
mov
sbb
pop
divl
sbb
outsl
pop
fistpl
inc
daa
xchg
stos
inc
in
lods
loopne
sbb
mov
cmpsl
addw
movsb
dec
fdivrs
es
push
pop
or
inc
adc
inc
scas
shll
shrl
fisubrs
mov
add
dec
repnz
sbb
in
leave
add
cmpsl
push
stos
leave
xchg
jns
cltd
je
les
cltd
mov
ss
loope
mov
icebp
add
in
or
cmp
fldt
or
or
dec
mov
mov
inc
sbb
rcrb
jecxz
add
mov
hlt
fisttpll
test
test
lods
or
js
sbb
push
aaa
fsubrs
dec
cwtl
lea
mov
sbb
ljmp
ljmp
andl
xchg
imul
faddl
cli
xlat
dec
filds
pop
mov
dec
aaa
xchg
sbb
lret
shl
pop
dec
sbbb
cwtl
stos
in
nop
loop
fidivrs
and
jg
test
mov
stc
push
mov
push
fisttpl
shrb
insb
add
mov
jb
iret
sti
add
mov
dec
and
lods
fld
push
popf
sbb
rclb
cwtl
mov
repz
fcoms
lcall
push
or
sbb
or
cs
fwait
imul
push
sarl
in
in
xor
mov
out
rdpmc
in
xchg
insl
mov
xchg
or
loop
xor
pop
xor
cmp
jns
xchg
sbb
mov
add
xor
shrl
mov
and
mov
lret
in
pop
lods
cmpsl
pop
xchg
xchg
stos
idivl
xor
cmpsb
xchg
cld
inc
mov
adc
in
sub
dec
popf
outsl
push
aas
or
and
imull
adc
int3
cld
xchg
inc
lock
ret
cmp
popf
mov
mov
dec
inc
jo
outsb
inc
rorl
movsb
push
push
mov
incb
jp
and
sti
inc
gs
cld
scas
mov
repz
sub
cmp
out
rol
push
mov
mov
dec
hlt
mov
push
mov
jae
pop
cmp
js,pt
jb
out
bound
mov
int3
out
mov
inc
bound
mov
cmp
fldenv
jle
jecxz
repnz
repnz
and
or
add
movsl
out
lods
mov
fdivs
lret
aam
cmpsl
xor
pop
pminsw
lea
and
add
ljmp
xor
sbb
cltd
sbb
stc
dec
mov
push
ret
xchg
enter
mov
stos
repz
scas
and
hlt
ds
push
dec
ret
sbb
mov
scas
out
mov
jnp
imul
inc
lret
xor
jg
lcall
pusha
and
rorl
daa
push
xorb
mov
sbb
inc
cmp
rcll
or
inc
mov
scas
fcom
repz
or
dec
dec
jno
into
ja
aas
pop
mov
shrl
push
in
mov
jo
mov
jns
mov
cli
rcl
cmpsb
cmpsl
shlb
jne
ficoms
or
test
cmp
xor
mull
xchg
dec
or
shl
xchg
pop
xor
lret
push
inc
bound
stos
cmp
sahf
xchg
inc
xchg
mov
hlt
hlt
lcall
lcall
cmpsl
movsl
lret
cmc
inc
push
stos
mov
pop
sti
xchg
ds
stc
xchg
xor
ss
xchg
dec
mov
repz
pop
test
jg
ja
pop
pop
stc
pop
xor
into
outsl
xchg
data16
in
lcall
pop
jmp
jbe
test
outsl
sti
insb
lea
push
insb
fidivl
aad
mov
adc
popa
ret
enter
enter
out
cmpsb
jno
out
lds
rolb
lea
scas
jge
rcll
ljmp
xchg
ret
insl
inc
mov
mov
insb
push
fstl
adcb
inc
mov
cmpsl
ljmp
mov
jmp
std
repz
push
push
ret
cwtl
xchg
rcrl
in
mov
xchg
lods
fs
popa
mov
fsubrl
fimull
pop
rcr
sahf
mov
leave
mov
popf
inc
movsl
pop
mov
shll
mov
aam
les
orb
rcrb
pop
inc
sbb
iret
lods
add
xor
adc
lret
adc
inc
dec
arpl
fisttps
pop
sahf
in
inc
jns
pop
mov
scas
fisubrl
fisttps
dec
pop
rcr
stos
and
jg
stos
mov
sub
insl
cmp
movb
arpl
adc
pop
jg
es
leave
gs
mov
loopne
ja
sbb
jo
jns
inc
add
push
cld
test
sub
sahf
out
dec
leave
xchg
or
dec
adc
push
sbbl
push
jl
nop
aad
mov
pop
sub
mov
cmp
pop
xchg
aam
sbb
and
ds
push
fistl
cltd
sahf
xchg
fistpll
lock
dec
inc
jge
sahf
fldl
xor
movb
mov
add
icebp
lret
repz
adc
insl
test
push
adc
mov
jge
testl
std
and
ja
jmp
cmp
arpl
fcomps
or
lret
mov
sbb
in
sbb
xchg
js
sbb
mov
push
andb
xchg
push
xchg
mov
rcrl
mov
cmpsl
int
jo
movsl
mov
xchg
sahf
loop
jnp
mov
push
inc
cmpsl
add
push
jne
jo
push
xchg
daa
sub
pop
decb
out
jbe
mov
mov
bound
xchg
pop
outsb
inc
pop
fucomp
xorb
mov
push
sbb
or
xchg
xchg
iret
push
scas
add
stos
cmpsb
fstps
mov
xchg
jge
mov
cld
inc
dec
mov
sbb
pop
sub
pop
mov
loope
test
inc
jbe
dec
rolb
jmp
cmc
add
and
ja
loope
xchg
sub
xor
pop
dec
inc
pop
icebp
lock
loop
cli
push
dec
stos
mov
lret
xor
add
push
adc
push
test
xchg
in
lcall
std
jne
test
add
and
lahf
jo
aaa
imul
mov
mov
cmp
pop
clc
and
push
lea
fwait
scas
jne
xlat
lods
mulb
sub
mov
notb
jnp
cld
lcall
push
mov
leave
sub
bound
in
daa
mov
and
sbb
fnop
jb
stos
loopne
jb
pop
pop
int
imul
xlat
jp
lret
decl
adc
push
insb
out
sub
pop
dec
call
hlt
jle
push
cmp
xchg
and
movl
shrb
shl
xchg
arpl
jnp
jl
mov
mov
pop
cs
lods
mov
dec
repz
ret
ficoml
jge
hlt
jno
jns
cmpsb
shll
ja
and
pushf
orb
scas
call
inc
je
mov
arpl
sar
inc
cmp
jg
rcrl
in
jmp
jp
jnp
popa
push
ret
cmpsl
dec
mov
mov
lahf
xchg
aam
push
push
push
jae
flds
mov
aaa
sub
cs
jle
loopne
out
stos
inc
cmp
xchg
push
ss
fcoms
add
test
mov
loopne
sarl
pop
mov
mov
xchg
add
push
xor
push
aam
inc
mov
jmp
out
gs
inc
xchg
xchg
sub
or
cltd
jle
jge
js
in
inc
add
pop
mov
jae
out
test
sbb
fwait
shrb
rcrl
mov
lret
sub
sarb
add
jne
icebp
pop
mov
xchg
mov
adc
push
outsb
test
test
lods
add
xor
sbbb
es
and
lds
aaa
je
fstpl
xchg
lret
stc
ror
std
movsl
adc
cli
loop
sbb
push
and
mov
dec
ds
test
and
les
mov
xor
fidivs
mov
push
lock
dec
dec
pop
in
arpl
cmp
jne
out
cmc
lock
mov
jbe
mov
outsb
push
int
cmp
jl
mov
loope
xchg
arpl
pusha
loope
add
push
mov
mov
push
sbb
jg
lods
jp
gs
lds
dec
pop
rcl
xchg
cli
fdivrl
xor
mov
lock
ficompl
xchg
push
and
xor
ret
cmp
dec
xchg
jbe
push
xor
fdivr
lods
pop
mov
pop
leave
xor
int
push
inc
xchg
sbb
leave
jnp
addl
lds
call
jl
les
fisubrs
mov
xchg
push
bswap
pop
inc
insb
add
add
cli
pop
test
cld
insb
ror
fnstsw
cmp
jne
bound
cmp
adc
inc
stos
out
aam
mov
int3
out
es
jecxz
cmp
mov
faddl
bound
loop
mov
scas
pop
movsb
cmpsl
mov
cli
loope
into
mov
sahf
jl
jmp
loope
xchg
sbb
mov
cld
int
out
cmp
lock
dec
out
ja
cld
push
insb
and
pop
mov
mov
sbb
repnz
or
xor
or
call
movsb
decb
and
notb
dec
cmp
mov
jbe
stos
mov
mov
cmpsb
hlt
inc
jno
add
fsubrs
cwtl
cltd
push
aam
inc
mov
imul
jecxz
sbb
stos
xchg
xchg
push
push
cmp
jb
mov
push
ljmp
mov
jns
cmp
negl
cwtl
inc
lret
jbe
mov
aaa
jbe
mov
xlat
outsl
dec
ret
fwait
movsb
mov
das
lds
mov
call
insl
inc
daa
pop
bound
gs
mov
ss
xchg
dec
dec
packuswb
ja
mov
jo
addl
pusha
mov
cld
adc
xchg
jmp
fsub
mov
fistpl
das
sbb
jge
popa
adc
ljmp
orl
in
insb
and
or
jo
movsb
push
dec
cmp
loope
pop
loopne
sub
sbb
scas
aas
sbb
loopne
outsl
scas
sub
and
dec
adc
lret
popa
xor
rcrl
mov
inc
leave
pop
dec
inc
rorb
insb
cmp
icebp
inc
xchg
sbb
jae
jmp
inc
add
flds
clc
loopne
bound
lret
in
outsb
jns
clc
arpl
shlb
mov
stos
mov
mov
ljmp
adc
sti
loop
add
lret
and
xchg
cmc
fldcw
leave
leave
test
xchg
hlt
xorl
mov
jecxz
mov
ret
lahf
cld
stos
pop
pop
mov
adc
xchg
xor
pop
clc
insb
scas
fs
mov
sub
cmp
xchg
aaa
dec
ss
sahf
push
jle
push
sub
into
sbb
push
fimull
ret
adc
lock
or
dec
dec
sbb
jp
mov
aad
pop
and
and
int3
sub
gs
sbb
sbb
testl
es
xlat
cmpb
mov
pop
push
decb
stc
sub
sti
inc
jmp
inc
cmc
and
cmp
sti
cmpsb
dec
mov
daa
inc
pop
sub
mov
sbb
popa
in
and
sbb
outsb
adc
fnstsw
sub
fimull
and
pop
stc
fstl
cmp
clc
cld
dec
cwtl
ds
scas
cmp
rclb
pop
lods
enter
loopne
es
mov
push
xchg
dec
negb
dec
xchg
mov
in
sbb
icebp
loop
add
push
mov
push
dec
hlt
sbb
push
mov
hlt
shlb
sub
jge
mov
sbbl
pop
ljmp
pop
pmaxsw
movsb
loop
push
add
mov
icebp
test
out
lret
dec
movsl
incb
xor
xchg
mov
and
mov
gs
sub
ss
scas
ret
dec
lods
xchg
jl
mov
addr16
jle
dec
xchg
or
or
test
push
test
jge
incb
in
das
movsb
hlt
pop
mov
outsb
fldcw
push
lods
pop
aaa
stc
ja
ror
hlt
adc
jg
pop
and
gs
inc
mov
sar
es
pop
mov
jmp
hlt
push
dec
sbb
hlt
cmp
in
pop
add
jbe
dec
mov
ret
pop
bound
push
data16
filds
ret
or
movsb
pop
mov
imul
cli
and
addl
mov
sbb
ja
ret
addr16
mov
leave
jb
in
shl
addps
test
addr16
call
bswap
xor
or
inc
dec
jmp
daa
sarl
flds
std
sbb
inc
jecxz
or
pop
jns
push
rcr
addr16
add
lods
xchg
cmp
cld
test
mov
daa
jmp
mov
insl
adc
decl
stos
pop
cmp
or
icebp
mov
popf
aam
mov
sti
sub
cli
mov
add
testl
add
into
andl
add
jae
push
stos
jne
data16
pop
jo
inc
sub
fwait
jecxz
and
mov
cs
jno
xchg
rcrl
in
xchg
push
cli
shlb
imul
scas
mov
mov
fiadds
push
sbb
rolb
shrb
movsb
xor
mov
test
jmp
mov
test
dec
jecxz,pt
les
icebp
inc
test
xor
aam
and
mov
in
popf
sub
mov
mov
bound
or
arpl
inc
push
push
fsubs
or
mov
js
xchg
cmp
shll
sbb
adc
cltd
adc
sarl
and
jmp
sti
subb
dec
data16
cltd
cmp
shlb
cmp
mov
mov
hlt
rclb
fadds
jmp
jns
cmpsb
jmp
mov
jecxz
fdivrl
adc
add
std
push
lock
sub
mov
xor
popa
inc
inc
cmp
adc
je
out
jbe
ds
inc
push
data16
sub
push
loopne
pop
dec
push
mov
pop
leave
jg
aam
insb
inc
fnstcw
outsb
and
push
add
imul
or
or
push
push
jmp
std
cmpsl
cmp
ds
bound
dec
shl
dec
ja
fwait
jp
and
fadd
or
notb
xchg
cmpsb
xchg
scas
mov
ret
fists
xchg
inc
or
imul
iret
jb
jb
and
push
stc
xlat
jae
insl
sbb
jp
ljmp
mov
push
test
js
mov
repz
ds
xchg
jo
push
fs
ljmp
insl
je
ja
jge
outsb
ss
test
test
psadbw
add
mov
aad
idivl
mov
or
jnp
dec
jbe
outsb
sbb
sbb
shll
js
add
mov
sbb
mov
into
xchg
pop
decl
or
jb
jl
into
repnz
and
cmc
cmpsb
subl
adc
ret
out
mov
lcall
sahf
jmp
pusha
adc
in
ret
cmpsb
push
loopne
mov
mov
mov
mov
negb
push
faddp
add
in
ds
ret
or
clc
imul
les
fcoml
pop
rolb
lcall
lea
ljmp
mov
dec
ds
inc
out
sbb
jae
inc
pop
add
cmpsl
cld
jb
lahf
mov
inc
ret
xor
or
inc
dec
insb
cmpsl
cmpsb
sub
in
push
cwtl
xchg
lret
sub
loope
jne
mov
call
push
lods
xor
inc
not
outsb
inc
inc
ja
cwtl
shlb
ds
xchg
cli
fmuls
in
cmpsl
test
mov
push
lret
sbb
in
add
xor
mov
out
aam
lea
lods
aas
idivb
push
cld
ficomps
popa
clc
test
cmp
mov
es
js
dec
cmpl
mov
jle
push
sub
xchg
cmp
gs
fcmovnbe
cmc
jecxz
pop
fidivrl
mov
xlat
mov
daa
int
jno
xor
inc
inc
jno
daa
aam
or
xchg
mov
cmp
cmp
xchg
adc
adc
and
cwtl
or
lods
aaa
mov
push
push
or
fnstsw
mov
sarb
xor
shl
adc
xchg
scas
pop
or
dec
push
and
loopne
mov
mov
dec
add
pop
sbb
mov
mov
cmp
and
pop
out
pop
imul
andb
loopne
call
sbb
ds
jb
test
mov
mov
in
in
fwait
mov
sarb
scas
stos
cmp
push
in
dec
lods
mov
inc
subl
sbb
sub
sbb
leave
cmpl
or
scas
in
cmc
mov
inc
pop
cli
lea
cmp
push
in
insb
daa
dec
lea
popf
adc
mov
cmp
jmp
bts
insb
cmp
xor
divl
mov
or
out
jmp
mov
aaa
push
in
imul
mov
add
aam
ret
mov
add
xor
std
mov
lock
lods
ss
and
jnp
and
stos
mov
stc
sbb
stos
jg
ret
lret
mov
stos
sbb
inc
scas
rclb
std
popa
outsl
fucomp
call
cwtl
mov
cmp
out
add
xor
jnp
inc
into
int3
inc
or
xor
xor
cmpsl
ljmpw
movsl
push
inc
repz
outsb
mov
shll
xchg
add
inc
repnz
inc
jg
cltd
mov
xor
add
jno
test
call
xchg
aam
sub
push
fcmovu
xchg
lcall
mov
push
inc
mov
mov
iret
dec
jmp
sub
mov
pusha
jmp
mov
and
bswap
xor
fstp
cmp
xor
addr16
pop
sbbl
fwait
inc
xorb
xchg
cmp
fs
sbb
push
pop
sub
fsubp
mov
shll
hlt
push
imul
xbegin
mov
jle
jne
ret
mov
js
pop
fsubs
outsb
mov
ret
cwtl
cmp
pop
xchg
addr16
rclb
ja
and
push
std
in
pusha
push
stos
lahf
leave
lds
out
jmp
int
mov
movsl
in
xor
jmp
jecxz
int3
mov
jecxz
cwtl
mov
lahf
lahf
fnsave
jno
mov
mov
inc
xor
mov
enter
outsb
pusha
jno
add
jecxz
es
jecxz
call
lock
push
adc
pop
mov
out
sbb
and
aam
shlb
pop
push
bound
xchg
xchg
inc
ss
cmp
push
cmpsb
lods
mov
loop
jne
pop
aam
push
addr16
popl
adc
lcall
test
aas
mov
cmp
in
repnz
sbb
add
mov
int3
cld
or
lea
cltd
or
jo
repz
dec
hlt
adcb
inc
lods
testl
std
cld
adc
sub
bound
inc
or
dec
and
pop
push
jge
adc
lret
lret
cs
lock
pop
jecxz
vpextrw
aaa
xchg
xchg
sti
shrl
xor
ret
int3
mov
outsb
sbb
mov
or
cltd
sti
xlat
lock
fbld
xor
popa
cmp
sub
gs
daa
rol
push
adc
or
fadd
inc
xchg
inc
inc
sti
inc
pop
lret
in
scas
pop
push
sbb
loop
js
mov
sbb
pop
sub
insw
sbb
flds
mov
add
xor
xchg
bound
je
jnp
imul
sbb
sub
push
adc
adc
cmp
jp
mov
adc
xchg
mov
adc
sbb
cwtl
mov
lahf
pop
cmc
xor
aad
ljmpw
mov
adc
jecxz
xchg
loopne
out
aad
inc
repnz
bound
mov
push
bnd
hlt
xchg
cmp
iret
inc
lods
sbb
test
jmp
daa
mov
insl
cmpsl
out
push
repnz
push
adc
adc
push
dec
mov
test
dec
aaa
mov
inc
sahf
sbb
lcall
cmc
fstl
js
aas
into
cs
cli
push
inc
sub
addr16
mov
cmp
fdivs
push
divl
test
ja
xchg
lods
rorl
cli
out
test
pop
nop
js
cmp
repz
cmpsl
stos
in
idivl
insl
sbb
ret
arpl
lods
mov
mov
mov
push
jo
subl
xchg
loop
das
jmp
jne
cmpb
cmp
sbbb
ljmp
jns
xor
mov
and
aad
loope
popa
mov
dec
pop
dec
and
push
lods
sahf
inc
sub
neg
push
xchg
fnsave
cmp
mov
in
insb
pop
mov
xlat
ja
aam
pop
shl
sahf
mov
push
dec
out
push
jmp
int
push
mov
cmpsb
sub
icebp
inc
dec
movsb
cwtl
js
mov
xchg
stos
das
rorb
movl
stc
aad
dec
xorb
xor
nop
fdivrs
xor
loop
add
das
and
shll
in
cwtl
cmp
cmp
lock
mov
sbb
mov
inc
out
jle
aas
adc
je
pop
out
push
fiaddl
pop
aad
mov
loope
mov
push
jl
mov
outsb
and
xchg
cmc
outsl
call
mov
imul
and
push
mov
in
pop
call
dec
mov
mov
insb
jno
je
nop
mov
jb
mov
adc
lret
xor
adc
movsl
movsl
in
enter
jge
out
pop
push
lods
cmp
repnz
pop
ret
jne
movsl
sbb
push
int
add
push
lcall
cmp
pop
test
cli
fbstp
fucomip
sahf
mov
inc
dec
pop
sbb
adc
lods
lret
xor
cmpsl
shll
dec
outsb
aas
sub
bound
mov
jmp
sarl
call
mov
imul
xor
test
mov
mov
jbe
testb
jmp
pop
jg
loop
jecxz
cmc
jmp
sub
loopne
out
ret
pop
or
in
scas
icebp
frstpm(287
sub
pop
cmp
xchg
mov
jecxz
mov
inc
mov
clc
ljmp
mov
clc
dec
lret
in
movsb
outsb
add
test
xchg
mov
cmp
xchg
cmpsb
out
std
jecxz
das
push
rcrb
xchg
pop
arpl
xchg
jmp
sbb
stc
int
fisubrl
out
pop
and
push
ss
jbe
dec
aad
cmp
cmp
jns
push
push
loop
adc
pop
in
cwtl
push
push
fisubl
std
jo
cli
or
mov
ljmp
dec
add
push
adc
xor
rorb
repnz
ss
in
pop
sbb
xchg
sbb
jb
jge
push
push
test
test
clc
mov
lods
adc
andl
adc
fmull
clc
idiv
fcompl
mov
mov
cmp
fdivs
stos
std
ds
push
adc
insb
pop
lods
push
dec
outsl
and
imul
bound
pop
mov
in
mov
fnstcw
std
jmp
dec
cmp
push
or
fldt
push
dec
ret
cltd
outsb
mov
or
jae
dec
lahf
scas
pop
xchg
popf
inc
mov
add
inc
and
xlat
rcr
scas
pop
outsb
fnsave
jnp
mov
das
xchg
lods
cli
xchg
std
push
mull
pop
push
sbb
and
pop
inc
sbb
pop
pop
jae
cmpsl
fidivs
mov
scas
mov
into
out
enter
vmaxpd
sbb
jns
imul
cmpsl
cltd
fidivl
popf
sub
dec
es
out
in
por
or
adc
ljmp
lds
jmp
and
and
push
out
push
ljmp
jo
dec
mov
sarl
cmp
lea
rol
jnp
ret
mov
out
or
adc
outsl
idivb
or
outsl
xor
mov
scas
sub
xor
cmp
lcall
iret
pop
aas
sub
jp
fildll
aad
leave
mov
inc
cmpsb
jmp
pop
cwtl
pushf
pop
mov
popf
mov
adc
add
fildll
xlat
jl
es
xchg
add
shll
js
fmul
or
push
cmp
mov
pop
and
adc
inc
sahf
std
in
mov
inc
gs
rclb
jecxz
cmp
mov
jp
xchg
jo
sbb
cwtl
pop
cmp
sbb
ds
ljmp
sarl
incl
lret
sti
ret
jno
and
aad
inc
adc
xor
js
mov
js
sahf
mov
mov
inc
push
lahf
inc
cmpsb
jge
cwtl
mov
push
lock
stc
outsl
sbb
xchg
loope
mov
xchg
lret
adc
inc
cmp
lods
push
mov
ljmp
fiadds
jo
mov
in
mov
lods
rcrl
addb
mov
outsb
shlb
jns
mov
jbe
fsubs
mov
adc
mov
das
int3
sub
xor
sub
insb
outsl
jecxz
decb
jle
stc
int
imul
mov
sub
push
or
dec
push
adc
pop
scas
fistpl
mov
sbb
xchg
xchg
or
les
aam
jl
mov
adc
ljmp
xchg
pop
mov
test
shlb
push
ljmp
leave
out
sub
mov
int3
sahf
sub
add
lea
mov
imul
mov
jl
iret
push
icebp
sti
pop
in
call
gs
push
fcmove
repnz
cmp
sbb
xor
cmp
lret
sub
std
add
movsl
shr
push
mov
fdivs
insb
dec
adc
xchg
movsl
adc
dec
xor
sahf
inc
es
mov
icebp
inc
mov
cmp
xchg
hlt
arpl
xor
movsl
sbb
xchg
dec
mov
cmp
pop
add
and
sahf
insb
xor
xor
push
fs
xchg
inc
in
in
imul
sbb
jmp
in
lcall
cmp
sub
mov
mov
pop
or
lods
jno
and
shr
rorb
push
je
add
cmp
mov
hlt
xor
scas
sub
loopne
lds
push
xor
out
inc
repnz
aaa
fwait
add
pop
pusha
cmpsb
mov
addr16
mov
add
mov
in
pop
lods
pop
rorb
hlt
mov
les
or
mov
mov
mov
stc
std
imul
outsb
mov
mov
pushf
test
ja
rcr
ljmp
mov
inc
push
sbbb
out
out
push
repnz
add
xchg
popf
inc
pop
or
sub
ret
mov
test
mov
sub
mov
mov
or
xor
mov
or
pop
cmc
inc
scas
xchg
xor
lret
mov
pop
mov
cltd
xchg
and
movsb
sub
mov
add
add
lea
cli
adc
shlb
aad
cmp
pushf
imul
inc
call
xchg
fildll
movb
mov
test
out
jnp
cmp
sahf
gs
jne
adc
das
and
push
xchg
mull
notb
jo
sbb
ljmp
and
mov
mov
cmp
daa
and
ljmp
and
out
repz
mov
and
pop
xor
les
fisubrl
xlat
fcoms
xchg
jle
mov
or
mov
fisubrs
ret
sti
sahf
push
lret
xor
call
in
ret
cmp
in
xchg
aam
lahf
or
fwait
pusha
lea
dec
cltd
imul
mov
cld
or
dec
fchs
std
xor
and
mov
jle
dec
xor
jno
cmc
clc
inc
sub
rcll
cmp
pushf
adc
push
sti
mov
xchg
inc
test
in
pop
xlat
gs
pop
loop
ss
insb
outsl
std
andl
aaa
fistps
xchg
push
mov
pushl
aam
lcall
out
pop
cmp
push
xchg
fildll
xchg
and
mov
mov
mov
mov
pop
xchg
sub
xor
js
pop
xor
mov
adc
push
rol
and
mov
mov
ss
stos
int3
add
xchg
and
cmpsl
sbb
push
sbb
dec
xor
es
lock
add
push
cmpsb
mov
xchg
shlb
dec
clts
or
mov
shll
push
lods
stc
and
and
add
cmp
popf
icebp
xor
ficoml
pop
mov
pop
add
mov
adc
jecxz
test
xchg
aad
test
popf
push
mov
sahf
pop
nop
insb
pop
sbb
mov
push
push
pop
lods
fs
adc
fidivrs
dec
lea
loopne
mov
lea
dec
loop
fimuls
ficompl
jle
sti
pusha
cmp
pop
sub
cmp
push
mov
mov
sahf
mov
fisttpl
in
sbb
mov
xchg
mov
mov
pushf
mov
fsubrs
jg
cmp
mov
in
rcl
mov
xor
inc
xor
sub
roll
ret
test
jge
sub
jmp
inc
dec
repnz
data16
cmpsl
push
in
mov
popa
mov
jg
mov
xchg
mov
push
test
lds
pushw
adc
shrl
out
jb
dec
das
lods
mov
negl
outsb
mov
adc
cmc
pop
cmc
xor
scas
adc
repz
sbb
and
or
sub
ljmp
push
int
clc
or
test
or
test
dec
mov
and
fdivl
or
aas
mov
push
cli
call
pop
push
push
or
outsl
adc
fisubl
cmp
fs
test
jp
cmp
rolb
sbb
fs
fcoms
and
stos
ja
inc
in
mov
cmp
adc
pop
sub
fildl
rcll
pop
aam
sbb
popa
cmp
push
push
insl
inc
roll
inc
jle
inc
mov
cld
sbb
call
lods
inc
cltd
dec
add
dec
xor
mov
inc
pop
leave
push
push
cmpsb
shlb
adc
add
adc
cs
loope
outsl
stos
imul
adcl
nop
shlb
cmp
outsb
mov
roll
mov
ds
pop
jg
shrl
adc
jle
inc
jae
xor
pop
fcmovu
lock
pop
movsb
xor
xor
lods
push
or
insb
int
jl
jge
xchg
cmp
inc
jae
or
repnz
jl
nop
in
jnp
outsl
pop
or
mov
push
xlat
into
in
scas
and
gs
jge
sbb
loope
insb
or
mov
nop
fldt
shll
rcrl
push
gs
lar
push
js
in
push
rcrb
sbb
adc
in
outsb
les
sbb
sub
push
pop
cmpsb
in
cwtl
lahf
repz
sub
mov
imul
and
cmp
jns
ja
les
mov
outsb
aaa
shlb
and
sbb
xchg
lahf
jns
pop
montmul
cmpsb
ret
dec
xor
xchg
sar
and
cli
mov
divb
xor
out
inc
push
pop
and
icebp
mov
sbb
test
sti
je
sub
mov
lahf
mov
test
je
cwtl
arpl
pop
incb
lods
cmp
dec
xor
jmp
mov
cmc
adc
mov
int
lods
add
dec
leave
pop
idiv
adc
jmp
cmpsb
add
int
outsl
xor
sbb
mov
test
jle
or
jecxz
jmp
or
xchg
out
mov
xchg
add
cmp
bound
cmp
mov
dec
jbe
clc
imul
mov
mov
xchg
xchg
fdivs
push
movsb
data16
cmp
add
jnp
sarb
inc
test
notl
xchg
sti
or
mov
int
dec
cmp
lcall
and
push
popw
shr
and
lahf
sub
cmp
add
inc
mov
jae
sbb
lods
or
xchg
nop
sbb
or
push
xor
cmp
out
mov
scas
rorb
add
dec
lahf
jg
out
jmp
sarl
ficoml
cmovl
jle
stc
sbb
pop
xchg
mov
pop
mov
clc
add
sbb
fcomip
mov
mov
mov
xor
add
push
ja
sub
mov
out
leave
jne
lcall
mov
push
mov
iret
sti
jne
inc
mov
sbb
es
cmpsl
push
sbb
in
imul
cltd
pushf
fsubl
int3
or
int3
inc
inc
and
aam
push
jb
ret
test
and
lds
and
mov
stos
arpl
fstp
popa
jb
cmp
cltd
lods
sub
loopne
adc
push
sub
dec
aam
push
and
sarl
imul
icebp
mov
push
or
pop
mov
mov
bound
xor
out
lods
movsl
shrl
call
mov
iret
pop
out
fistps
inc
push
xchg
inc
mov
xchg
pop
cmpsb
jle
dec
mov
ficoms
out
pop
sbb
in
testb
popa
or
leave
or
fdivrs
pop
orl
cwtl
mov
cli
dec
ficoms
jge
in
js
pop
sbb
mov
mov
scas
ds
jl
dec
mov
jae
shl
das
mov
and
xor
loop
ljmp
jns
sub
and
jmp
lds
xor
adc
js
in
aaa
lods
or
decl
movsb
in
mov
mov
mov
mov
push
das
sbb
pop
mov
sub
adc
mov
xchg
ret
loope
cmp
stos
push
dec
cmp
not
cmp
stos
mov
mov
ret
dec
je
stos
sbb
fwait
or
cmp
jbe
xchg
pop
jns
mov
mov
xchg
arpl
and
je
add
inc
sbb
mov
lods
jmp
rcr
or
imul
jnp
sbb
push
pop
fidivrs
out
dec
push
adc
push
fcmovu
in
sti
cmpl
inc
pop
mov
pop
sub
imul
imul
mov
dec
fisubs
mov
sub
adc
lahf
dec
test
jg
push
cmp
daa
fcomps
lods
dec
inc
jp
jge
and
ds
mov
sub
pop
jne
push
rcll
idiv
stos
xchg
repz
mov
mov
xor
aam
or
xchg
faddp
inc
testl
sbbl
mov
push
jne
xor
aas
jge
lods
jnp
push
dec
jge
outsb
sub
pushf
testl
push
test
std
xor
jbe
leave
outsb
and
cmp
mov
and
mov
call
loope
mov
mov
xor
inc
mov
cli
xor
xor
jecxz
sub
and
push
xchg
mov
lods
mov
and
push
pushf
xchg
daa
in
cmpb
mov
fnstcw
mov
mov
adc
pop
mov
es
test
push
xorb
mov
dec
mov
aas
jg
xor
repz
mov
mov
xchg
leave
xchg
loope
in
jne
mov
xor
inc
adc
inc
std
gs
or
aaa
nop
xchg
xchg
push
lods
pop
fst
push
jo
cltd
lods
sbb
insl
mov
sub
rclb
mov
sbb
mov
xchg
hlt
mov
mov
mov
pusha
stos
jp
ljmp
movsb
shrl
xor
in
sti
dec
test
cmpsb
sarb
push
push
aam
push
fmull
fwait
and
repz
mov
stos
sub
stos
testl
loope
fsubr
jmp
and
mov
dec
loop
push
add
mov
sub
out
lahf
arpl
adc
dec
dec
orb
or
dec
jo
push
xchg
adc
push
or
dec
dec
jp
int
mov
nop
pop
pop
bound
sbb
sbb
scas
push
mov
push
ficoms
xchg
out
lcall
inc
dec
pop
lock
xchg
xor
scas
stc
insl
inc
xchg
jl
aad
lods
stmxcsr
cmc
loop
leave
in
sbb
mov
mov
leave
pop
sbb
jne
inc
stos
or
icebp
in
scas
decl
add
fcomps
andl
mov
mov
ret
fdivr
or
sub
mov
mov
clc
out
sub
pop
xlat
roll
push
mov
sub
popa
adc
imul
fcomi
or
mov
jmp
mov
out
enter
xchg
aam
es
inc
in
mov
js
movsb
stos
sub
ffreep
mov
imul
xor
mov
xor
jae
loop
inc
cmp
les
dec
jp
mov
inc
loopne
jo
andb
popa
ret
nop
daa
std
cmp
push
fmuls
mov
mov
daa
imul
push
aam
add
jecxz
std
icebp
enter
lock
jns
cmpsl
push
mov
sub
mov
leave
jg
xchg
cmp
enter
add
daa
or
stos
mov
xlat
in
push
ret
aam
addl
push
pop
dec
jns
add
in
or
dec
sbb
jge
pusha
jl
inc
fisttpll
mov
jno
cmpsl
mov
fists
mov
ds
inc
gs
repz
imul
rcll
dec
or
int3
push
push
adc
cmp
lret
lahf
fistps
xchg
mov
xchg
ret
push
push
les
sub
adc
sub
das
push
popl
dec
jb
in
mov
lods
test
lea
jg
jno
adc
pusha
cld
inc
stos
mov
and
add
testl
sarl
cs
or
inc
sub
aaa
loopne
inc
cmpsl
rcr
adc
movsl
adcw
add
dec
in
mov
mov
adc
in
idivb
clc
je
in
jo
popf
gs
enter
adc
dec
fistpll
jb
rorl
icebp
inc
inc
inc
imul
dec
lds
adc
sub
push
inc
test
int3
test
add
insl
cltd
outsl
sub
cmpsb
ret
xchg
push
mov
gs
push
insb
call
ss
lods
inc
pop
dec
or
jnp
add
movsb
mov
or
xor
subl
sbb
call
sbb
out
mov
or
fistps
jg
shr
pop
xchg
cmp
xchg
loop
test
adc
js
popa
sub
jns
int3
mov
xchg
sub
decl
cld
and
jp
jo
xchg
dec
mul
mov
mov
mov
cmp
test
lret
mov
mov
sarb
les
cmc
and
repz
add
nop
jb
dec
jbe
pop
xor
xchg
or
xor
stc
scas
rcrl
ficompl
push
xchg
mov
pushf
cld
data16
cmp
stc
mov
mov
mov
mov
sti
and
add
dec
int
in
push
jbe
adc
popf
inc
inc
repnz
jno
or
rcrl
rclb
aam
adc
add
cmpsb
mov
call
pop
into
shll
xor
dec
les
mov
cmp
aam
cmpb
lcall
es
lahf
cmpsb
xor
loope
jno
push
and
repz
xlat
cvttps2pi
xchg
sbb
cmpb
fcompl
dec
jns
dec
loop
lcall
and
jb
push
mov
jb
bound
mov
fsubp
or
jae
sub
dec
dec
adc
jmp
test
adc
or
xchg
xchg
or
lods
scas
sahf
scas
sub
adc
adc
mov
push
int3
mov
es
into
jae
lock
mov
adc
mov
push
push
pop
bound
push
push
int3
cmp
adc
adc
lret
outsb
lret
je
lock
std
sub
rcll
hlt
jbe
pop
cmp
lea
fwait
scas
fists
pop
pop
ljmp
and
jns
mov
lea
add
ds
repz
lock
adc
dec
xchg
push
test
pop
mov
lret
and
das
adcl
and
stos
out
insl
and
mov
nop
pusha
shll
pop
mov
mov
int3
add
inc
out
lds
inc
dec
mull
xchg
push
in
xchg
in
mov
je
add
sbb
or
xchg
repnz
dec
std
pushf
sub
fidivrl
or
add
fcoml
push
repnz
sub
push
call
fwait
jle
pop
out
movsl
fisubl
in
out
ss
mov
loopne
fsqrt
inc
ret
fsub
cmp
xchg
ljmp
clc
push
xchg
mov
mov
or
in
xor
lea
sub
mov
cmc
or
push
or
inc
inc
rep
lods
mov
adc
popl
jbe
scas
icebp
dec
sbb
mov
or
xchg
out
or
and
sbb
or
stos
fmuls
dec
nop
lea
aaa
mov
jg
or
arpl
lret
push
and
dec
aaa
push
cmp
test
fdivl
pop
xor
or
rcll
cmp
jns
mov
push
dec
dec
pop
rolb
xchg
popl
clc
aad
or
out
in
adc
push
pop
scas
fs
push
xor
mov
pop
ljmp
or
movsb
push
and
test
inc
orl
mov
inc
pop
fwait
adc
or
adc
lahf
sar
les
xlat
jp
in
scas
in
mov
int3
adc
gs
fisubl
dec
cs
push
push
sarb
pop
fs
and
lds
ret
mov
inc
lods
push
sbb
sub
adc
mov
push
fdivrs
and
dec
lock
arpl
adc
and
out
lahf
loope
in
sub
push
into
mov
or
inc
mov
aas
scas
add
out
in
mov
stc
pop
push
dec
imul
sub
mov
bound
imul
gs
movsb
out
imul
sub
jb
and
jg
push
jl
pusha
stos
hlt
pop
sbb
stos
push
xor
cmp
cwtl
imull
scas
sbb
in
jmp
stc
dec
pop
mov
leave
lret
mov
pop
es
push
call
add
fistps
int3
cmpsl
xchg
push
pop
and
xor
in
frstor
sub
or
and
cs
mov
pop
jbe
mov
jp
pop
movsb
pop
inc
cld
jbe
fcos
shll
mov
and
xor
mov
aas
sub
inc
outsb
sbbb
xchg
cmp
sub
cli
mov
xor
push
stos
in
jp
inc
xchg
and
pop
ljmp
ja
orb
fs
adc
pop
jp
in
shl
mov
enter
xchg
sti
cwtl
outsb
cmp
sub
mov
cmc
adcl
pop
arpl
fsts
es
add
cmc
add
inc
stos
sub
mov
fbld
jnp
or
dec
add
rcr
xorb
push
ficomps
enter
mov
push
add
sbb
mov
cmp
insb
lret
jmp
ds
cmc
sub
cwtl
mov
push
dec
repnz
pop
bound
push
push
push
fcomps
fs
fcoml
jnp
imul
push
push
sbbl
push
push
add
dec
lea
rolb
fsts
loop
pop
pop
or
out
repz
lock
scas
into
adc
rcl
and
xor
pop
aad
adc
movsb
mov
adc
aas
pushf
ds
cmp
imul
inc
cmp
xchg
nop
mov
imul
mov
das
dec
push
xchg
mov
cli
stos
popl
adc
lcall
lret
imul
sbb
scas
mov
fs
mov
xchg
add
in
mov
movsl
jb
add
int3
xor
mov
ficomps
test
jmp
jne
push
popa
inc
subb
in
ljmp
loope
xlat
nop
pusha
xchg
cltd
jle
cmp
pop
xor
addb
inc
mov
xchg
in
sub
stos
in
pop
dec
imul
xchg
in
sbb
pop
leave
mov
push
ljmp
sub
addr16
call
xor
push
jnp
pop
out
cmp
inc
pop
xor
scas
mov
mov
jecxz
inc
lods
in
fstps
out
repnz
in
scas
lds
push
mov
and
rcr
push
test
cmp
sti
mov
mov
xchg
inc
lea
push
mov
shll
sub
icebp
popa
xchg
jo
pop
cmp
xchg
push
cmp
pop
ja
in
ja
and
in
jmp
xchg
ret
aad
inc
stos
lret
pop
icebp
adc
push
pop
test
nop
inc
arpl
loopne
mov
insl
push
fcomp
int3
lds
sbb
push
test
push
stos
jle
mov
or
xor
nop
jno
mov
les
lds
mov
jno
mov
loopne
mov
cmc
shrb
stos
cmp
xorl
sahf
cli
ror
add
dec
jmp
in
sbb
cmp
outsl
rcll
out
cs
es
pop
in
push
daa
outsb
sbb
pop
or
mov
aaa
dec
les
outsl
mov
jno
out
lods
mov
int
ret
jg
outsb
jle
mov
jmp
push
sti
mov
inc
sub
fs
inc
or
sahf
pop
movsl
dec
fildl
xor
repz
dec
stos
rcr
pop
aam
or
mov
lds
inc
cmpsb
fisubl
xchg
sbb
mov
cmp
mov
jl
jmp
les
hlt
popa
jecxz
addl
dec
ret
repz
mov
or
incb
mov
js
je
pushf
jns
lock
test
pop
adc
lcall
ds
xor
and
cmp
fiadds
mov
jne
sbb
mov
aaa
dec
push
and
cmp
mov
adc
scas
imull
xlat
mov
testb
mov
dec
pushw
in
adc
shrl
lods
std
arpl
mov
jmp
xor
insb
cmpsl
jae
mov
jae
lock
mov
stos
inc
insb
adc
jmp
sub
das
popf
sarl
mov
fiadds
les
jl
pop
fldenv
ljmp
xor
mov
jl
mov
jb
mov
push
xor
xchg
cmpsl
dec
addr16
push
or
out
lret
stc
shll
push
pop
clc
fs
in
outsw
je
je
lods
sub
hlt
call
insl
jbe
xchg
cwtl
cli
or
cmc
adc
xchg
cmpsl
push
or
lret
ja
dec
cmc
mov
mov
jecxz
mov
out
fs
jp
lea
aam
dec
add
mov
ret
cmpsb
out
sahf
in
pop
orl
cmpsb
clc
jo
sub
shlb
jmp
add
adc
pop
sub
iret
mov
lahf
daa
cmc
push
adc
leave
pop
test
and
pop
inc
sbb
sahf
fwait
dec
stos
cmp
jne
pusha
out
fwait
jbe
dec
les
sti
hlt
fstpt
ror
xor
push
fs
dec
dec
pcmpgtb
push
mov
pop
loop
push
pop
js
movb
cltd
inc
sbb
jbe
imul
lock
cmp
js
or
leave
xchg
in
fldcw
adc
jl
xor
in
mov
dec
jl
imul
sbb
pop
insb
das
jle
mov
dec
or
adc
out
sti
stos
xchg
pop
mov
sti
sahf
mov
pop
adc
ljmp
xchg
adc
xchg
pusha
sub
mov
out
push
repnz
jmp
hlt
adc
xchg
inc
mov
imul
pop
lcall
or
cltd
mov
sub
in
movsb
hlt
repz
sbb
or
xor
divl
lcall
xchg
sbb
rcr
jbe
jae
js
std
rolb
jne
in
mov
outsb
add
ds
outsb
push
dec
inc
fsts
mov
cltd
and
fstp
bound
or
push
mov
sar
or
dec
icebp
mov
hlt
lret
push
mov
mov
jg
ret
mov
inc
adc
inc
sbb
adc
int
xor
sbb
fmull
mov
mov
lret
jle
dec
push
lods
mov
test
sbb
hlt
pop
test
ss
or
gs
aad
es
jecxz
adc
jns
mov
popa
adc
mov
jge
aam
jg
lret
fwait
in
fmull
cwtl
jp
pushf
mov
jns
cli
xchg
jno
sbb
xor
xchg
lcall
test
fdiv
and
xchg
inc
in
fcmovnbe
pop
xchg
test
pop
addl
insb
xchg
xchg
loope
ret
jns
or
xor
fs
push
jae
xor
das
and
cmpl
cmp
sub
das
pop
loope
rcr
cmc
stos
sbb
xchg
fcmovnu
dec
sbb
and
fsubp
int
hlt
pushf
adc
stos
and
mov
fsts
dec
push
sub
or
sub
mov
pop
lods
sbb
cwtl
jp
push
icebp
mov
or
sbb
sub
mov
repz
push
test
jb
and
jge
subl
out
sbb
jecxz
imul
aaa
shlb
outsb
icebp
decl
sub
daa
mov
clc
push
pop
cld
push
mov
xchg
mov
mov
jge
mov
subl
adc
dec
enter
inc
leave
xorl
shll
pop
sarl
push
xchg
adc
or
mov
in
cwtl
xor
call
in
xchg
aas
dec
dec
pop
xchg
jns
iret
mov
xor
lret
mov
mov
in
push
addr16
movsl
jg
cmpsl
xchg
clc
out
hlt
mov
xchg
lahf
testl
and
add
xchg
jle
mov
and
subl
cltd
inc
jge
xchg
imul
fnstenv
stos
adc
pushl
jle
insl
cmp
mov
sub
cwtl
mov
xor
in
mov
jns
shrl
test
jno
xchg
repz
int
aam
int
ljmp
movsb
jmp
mov
ret
ret
outsl
out
push
in
xor
add
xchg
mov
decb
icebp
mov
adc
mov
mov
ss
loope
inc
cmpsb
dec
mov
sub
xor
sbb
xchg
into
neg
in
stos
nop
mov
mov
rolb
sahf
jbe
lcall
mov
dec
dec
xor
jb
bound
push
pop
cli
mov
int
jmp
jmp
and
outsb
sbb
push
push
pop
sub
loop
jmp
xchg
or
jp
imul
addb
stos
cld
test
or
or
movsl
pop
shrl
xchg
jns
es
movl
daa
and
subl
mov
lret
sbb
jno
fwait
push
jns
pop
mov
and
inc
movsl
pop
gs
cwtl
jecxz
in
fs
fsubr
js
cmp
inc
mov
and
push
sub
adc
test
sub
lds
mov
push
mov
inc
dec
imul
fs
add
lret
push
scas
mov
push
and
xchg
fbstp
mov
mov
mov
jbe
lods
fwait
jne
int3
lahf
push
ret
cmp
shrb
xlat
sub
add
mov
cmpsb
pushf
xchg
test
jg
lea
stc
and
push
push
hlt
sbb
inc
test
sbb
push
out
push
lock
xchg
notl
enter
cmp
xchg
ret
sub
dec
loopne
push
mov
js
mov
clc
icebp
cmp
mov
mov
lods
int3
and
imul
nop
movsb
lock
mov
sbb
xor
cld
lea
popf
jmp
repz
inc
or
pop
push
jb
pop
push
dec
out
push
movsb
jmp
popf
add
or
xchg
dec
test
cmp
mov
cmp
aad
call
dec
jg
les
and
jmp
xchg
shrb
stos
cmp
and
jne
call
and
std
in
xchg
xchg
xor
inc
fs
mov
mov
jne
xchg
adc
add
mov
nop
and
pop
sub
repnz
insl
in
adc
iret
push
scas
shlb
stos
in
loope
mov
sub
mov
push
addl
ss
sti
pop
sahf
sub
not
xor
call
lock
cs
jo
stos
movsl
pop
mov
xchg
mov
jbe
outsl
test
rcll
rclb
ljmp
loop
into
or
lret
cs
fs
out
das
mov
out
nop
daa
dec
jp
insb
rcrb
test
arpl
jge
mov
add
out
mov
inc
xor
mov
ja,pn
sbb
mov
popa
sub
popa
call
sbb
dec
test
jle
test
xchg
rcll
std
adcl
xchg
adc
les
inc
call
mov
pop
jg
jbe
pop
ss
cmp
xor
sbb
jne
mov
sub
int
rorb
or
jmp
aad
sbb
add
mov
imul
repnz
xchg
mov
sub
and
test
xor
push
fiadds
xchg
mov
inc
inc
shl
pop
mov
lcall
in
push
testl
inc
sbb
inc
js
pop
sub
negl
jge
push
mov
je
mov
call
jle
sbb
mov
sub
insl
mov
xchg
mov
popa
jne
je
imul
add
loope
jo
pop
leave
imul
or
subl
test
out
or
dec
test
dec
mov
jne
pop
cmp
jno
jns
mov
add
mov
lea
or
dec
inc
sbb
pop
push
mov
les
adc
aaa
mov
inc
test
xchg
fmuls
sub
push
ret
cmp
insl
mov
sub
jge
push
jle
sarb
mov
arpl
jp
lea
cmpsb
out
sub
fcomps
cmp
rorl
mov
push
mov
xchg
lret
addb
into
pusha
adc
call
out
inc
adc
dec
push
sarb
insl
into
test
loop
jmp
or
sbb
shrb
adc
call
loopne
add
pop
cmpsb
and
mov
adc
arpl
sbb
mov
imul
cld
cltd
test
das
repz
push
gs
sub
and
jbe
sbb
jle
mov
jle
cmp
into
imul
jmp
lea
add
xor
mov
adc
leave
inc
seto
hlt
push
mov
sar
gs
pop
mov
xor
xchg
jns
dec
mov
ret
jb
sbb
setnp
jbe
mov
imul
sahf
lcall
cs
xor
add
pusha
xchg
mov
gs
lret
shlb
insl
ss
ret
mov
xchg
lock
in
push
lcall
adc
sub
xlat
sahf
add
scas
push
jecxz
ja
mov
out
mov
lret
mov
outsb
cmpsl
fstl
and
or
push
data16
sub
mov
mov
ret
and
lret
in
mov
lret
and
lods
hlt
inc
mov
insl
jo
int
mov
mov
lcall
in
lahf
lahf
sbb
or
mov
pop
sahf
xchg
jge
lods
clc
jb
insb
jb
mov
cltd
jmp
aad
fimuls
lahf
jnp
jb
inc
jnp
test
mov
lods
pop
pop
fmul
and
fmuls
xchg
dec
out
test
adc
fdivp
js
xchg
cmp
leave
cltd
hlt
jl
test
test
movsl
sub
lret
fimull
stc
sub
rcl
push
ds
cmp
xor
lret
push
mov
sub
sti
bound
adc
pop
sub
sbb
cmc
vunpckhps
js
push
jae
je
inc
or
dec
mov
icebp
inc
stc
mov
out
push
sbbl
xchg
adc
mov
cs
aam
xor
scas
or
shr
pop
jno
add
ret
and
repnz
aas
fcoms
imul
mov
jno
cmp
call
push
pop
mov
mov
cmc
xor
cmpsb
xor
inc
cmp
cld
mov
repz
pop
sbb
test
lods
and
lahf
push
push
push
lock
or
lcall
xchg
mov
pop
push
je
daa
jne
repz
mov
mov
or
ja
into
and
ljmp
data16
in
daa
xchg
sub
aad
stc
pop
inc
push
pop
scas
loopne
dec
adc
and
xor
mov
mov
jbe
cltd
jbe,pt
jp
data16
repnz
outsl
adc
inc
sbb
push
jle
xchg
jne
xchg
pop
lods
popf
aam
flds
jp
imul
loope
vmread
sahf
cli
push
adc
push
rcr
and
cmp
mov
popf
in
arpl
mov
fwait
xor
daa
push
xor
dec
mov
sbb
lods
jnp
xchg
sahf
pop
inc
repnz
icebp
jle
jmp
push
add
nop
xchg
xchg
movsb
inc
mov
add
jns
rcl
sbb
mov
outsl
lcall
cmpsb
jne
xchg
aaa
fsubrs
sti
jp
dec
cltd
mov
addr16
inc
fs
ss
pop
cmc
xor
mov
jmp
es
lods
lods
inc
fbstp
outsl
mov
and
sti
daa
xchg
mov
pop
ljmp
fmuls
mov
js
xchg
daa
leave
dec
and
mov
clc
sahf
mov
cmp
cwtl
mov
xor
cli
rorl
adc
mov
pop
dec
mov
lods
adc
xorl
jnp
sbb
bnd
adc
dec
je
xchg
and
mov
adc
adc
xor
dec
hlt
xor
jge
mov
dec
insb
sbb
inc
mov
mov
rclb
add
nop
dec
inc
adc
lds
adc
out
cmp
and
mov
bound
pop
test
push
mov
les
push
call
ffree
push
sub
jmp
mov
or
js
cltd
cmc
xchg
icebp
lods
or
daa
jns
cmp
jb
out
ficomps
mov
xchg
lods
data16
dec
mov
cmp
repnz
xchg
in
mov
out
jmp
push
sub
std
jmp
cld
ja
xchg
call
icebp
fiadds
mov
jbe
mov
mov
iret
xor
in
pop
fldenv
cmp
pop
call
popa
mov
imul
rolb
rorl
pop
mov
push
jecxz
dec
inc
pop
xor
lods
rcll
shrb
or
and
xor
faddp
jnp
cmp
call
xor
pop
fcomps
mov
in
xchg
inc
imul
cmpsb
or
or
int
inc
aaa
cwtl
mov
and
repnz
arpl
xor
out
in
jecxz
or
cld
xchg
mov
rcrb
jp
js
mov
ljmp
repz
mov
or
divb
pop
mov
push
mov
sar
in
cwtl
dec
xchg
xchg
push
sbb
int3
sarb
int
xchg
mov
in
cmpsl
adc
mov
loopne
out
outsl
insl
leave
or
out
xchg
push
dec
dec
xchg
push
mov
dec
repnz
push
int
cmp
iret
xor
out
je
push
cmp
xchg
xchg
sti
mov
jp
mov
and
movsb
sbb
fsubp
jecxz
mov
popa
or
repnz
or
jo
dec
test
mov
push
rorl
addb
mov
pop
jecxz
xchg
sub
sub
mov
xlat
mov
pop
xlat
mov
push
pop
aad
mov
push
mov
inc
inc
and
cmp
sub
dec
push
test
and
ret
leave
jle
aad
mov
jno
jge
popa
push
xor
jp
push
out
sbb
pop
inc
mov
mov
mov
dec
es
xchg
jg
roll
arpl
je
push
pop
jp
xor
cwtl
scas
sbb
fstps
scas
jge
lods
data16
addr16
mov
fucom
out
push
xor
mov
adc
ret
jb
lods
fwait
test
addb
pop
mov
mov
imul
push
cli
sahf
mov
loop
push
cwtl
scas
rclb
or
out
lret
jecxz
es
push
cmp
out
jge
mov
push
outsb
mov
lds
add
pop
arpl
inc
das
in
das
mov
mov
aam
ret
imul
fnstsw
iret
jbe
xchg
fildl
jg
mov
xor
adc
or
cmp
fildll
pushaw
sarb
icebp
xchg
lret
iret
or
mov
push
cmpsb
xchg
mov
loop
mov
arpl
mov
push
sbb
cmpsb
mov
xchg
test
xor
jmp
mov
cmp
sbb
cwtl
jmp
xor
lods
push
subb
xchg
xor
dec
out
mov
clc
dec
lds
or
dec
xor
fstpt
mov
insl
shll
dec
aad
xchg
fimuls
inc
ja
fcoms
mov
dec
jo
push
fnsave
hlt
pop
in
cmp
adc
sub
insb
push
or
mov
out
out
adc
iret
xchg
movsl
in
mov
sbb
arpl
inc
cmp
push
icebp
sti
cwtl
push
cld
lock
cmp
in
sub
shll
mov
adcb
arpl
stos
cmpsb
push
test
loope
les
ss
popa
pop
or
rcr
mov
mov
lcall
push
push
loop
outsb
int3
push
push
dec
ret
jno
addr16
in
jbe
cmp
cmpsb
cmpb
aam
lret
sub
ljmp
sub
imul
add
pop
adc
push
lods
leave
sub
rcrl
mov
sub
jmp
xchg
pop
pop
inc
mov
loop
je
imulb
jno
out
rclb
push
jmp
dec
lahf
inc
jb
pop
xlat
test
mov
gs
rcrl
int3
inc
std
inc
mov
pop
or
cltd
pop
test
out
out
pop
fisubl
mov
ja
es
fidivrl
sbb
ljmp
out
cmp
test
in
imul
in
mov
dec
aam
sbb
sub
testb
and
sub
sbb
push
dec
lods
jmp
cmp
jnp
data16
fnstcw
scas
cmpxchg
xor
or
mov
sarb
imul
js
hlt
hlt
mov
lea
inc
in
dec
pop
faddl
jle
push
rorb
cltd
cli
movsl
sbb
loop
iret
mov
lret
inc
rcrb
cmpsb
fsubrs
mov
cmp
xchg
nop
inc
jle
das
mov
popa
push
cmp
cmp
stos
es
adc
inc
in
sti
test
mov
gs
in
jge
repz
fiadds
inc
inc
mov
pop
push
and
pop
dec
cmp
jmp
sbb
xor
push
punpckhbw
sbb
fadd
pop
mov
sbb
add
sub
inc
push
and
sub
and
fs
inc
enter
dec
lret
frstor
stos
int3
and
iret
das
stos
imul
or
fistpll
inc
push
mov
add
stc
ficomps
cli
and
ret
scas
ljmp
xchg
xor
jb
add
fnstcw
mov
ja
dec
add
stos
test
inc
adc
setne
inc
adc
push
dec
loop
mov
dec
lds
test
sbb
movsl
dec
cmp
cmp
mov
or
jl
fmuls
orb
into
mov
cmc
or
repnz
sub
pusha
push
sarb
jg
jle
or
ds
push
std
xchg
loope
stc
bound
adc
or
xchg
fistps
sub
add
jbe
inc
loopne
jg
mov
push
xlat
mov
ss
in
mov
mov
xchg
lock
inc
mov
test
jbe
xchg
outsl
mov
add
mov
popl
dec
in
outsl
scas
jae
mov
dec
mov
into
leave
xlat
in
lea
or
sbb
push
hlt
mov
or
mov
frstor
shrl
inc
shr
adc
test
jb
xlat
xchg
test
push
pop
fcomps
cmpsl
cmp
fdivrs
mov
adc
popf
dec
int3
adc
cwtl
adcb
test
xor
or
pushf
lahf
nop
icebp
ljmp
inc
fisubrs
sbb
xchg
das
insl
sahf
mov
xchg
pop
in
add
cmp
inc
sub
aas
les
mov
or
pop
daa
enter
aad
xor
jnp
sub
mov
cmpsb
cwtl
out
push
addr16
stos
xor
std
adc
fwait
lcall
sbb
incb
cmpsl
rolb
popf
jl
pop
adc
dec
fldt
add
fdivs
std
pop
in
xor
les
rcll
mov
shrl
stos
adc
imul
cld
xor
mov
movsl
dec
arpl
jo
in
les
mov
movl
lods
into
movsl
popf
mov
jecxz
xchg
out
lods
add
scas
cmp
pusha
push
outsl
int
adc
cli
add
test
mov
lods
stos
jp
lock
push
test
inc
cmpsl
mov
and
rorb
jns
inc
xchg
les
sub
nop
or
pop
sbb
iret
cmp
xchg
int3
sti
inc
lcall
pop
outsb
push
add
fisttpl
jne
clc
or
lcall
cmc
xor
or
xor
pop
inc
xchg
loopw
push
pusha
int3
mov
mov
movsb
jne
aas
mov
push
popa
pop
loopne
ds
pusha
je
adc
dec
cmc
sbb
adc
rol
adc
adc
stos
out
xor
dec
lods
pop
in
dec
dec
sbb
repz
fidivs
fwait
test
hlt
mov
popf
mov
jmp
cld
or
ljmp
cmp
jl
daa
xchg
es
mov
ds
cmp
mov
pop
and
inc
mov
add
cs
cmpsl
pop
xor
xor
xor
pop
xchg
add
sbb
loopne
inc
mov
shll
xchg
jge
dec
dec
and
movsb
sub
repz
jmp
loopne
bound
and
stos
and
inc
clc
pop
pop
dec
adc
pop
lcall
mov
jo
loope
cmp
ffree
xlat
frstor
xor
xlat
push
or
cmp
mov
jb
xor
loop
lods
xchg
pop
lock
repz
fmuls
imul
jg
aad
push
dec
dec
pop
ljmp
lahf
adc
sbb
es
jae
mov
je
jno
jp
mov
sub
loop
or
xor
stos
fmulp
lret
hlt
nop
jg
inc
add
inc
scas
in
xlat
out
jp
xchg
pop
fldcw
jl
iret
call
jno
xchg
inc
xor
leave
out
mov
stos
push
and
pop
bound
lret
sbb
out
insl
lret
jbe
ds
addr16
jo
cmp
jl
jl
push
hlt
mov
int
pop
jae
sahf
push
xchg
test
xor
jb
movsl
ja
dec
in
adc
mov
mov
inc
loopne
testl
jnp
jle
cmp
in
xor
iret
jmp
xchg
test
popf
dec
shr
divb
and
adc
xor
fs
rorl
movsb
int3
adc
cli
out
leave
fyl2xp1
ss
mov
cmp
mov
mov
call
cmc
daa
jp,pn
push
fsubr
add
and
cltd
adc
inc
movsl
imul
xchg
in
cmc
mov
xor
das
xchg
inc
ja
int
push
ds
pop
out
adc
std
pop
in
add
mov
sub
jbe
mov
inc
dec
dec
xchg
loopne
daa
xor
scas
popa
lahf
xchg
mov
mov
mov
sahf
mov
push
arpl
lods
cmp
iret
cmp
lcall
testl
mov
inc
and
mov
test
push
mov
jg
rcrl
and
hlt
stos
sub
sarl
inc
lds
inc
std
mov
pop
jnp
enter
inc
enter
or
xor
shll
sbb
sbb
mov
mov
or
mov
aam
add
dec
cmc
pop
fdivrs
insl
rolb
push
mov
stc
mov
ret
test
push
mov
ret
push
dec
cmp
push
add
aad
sub
fs
imul
adc
and
daa
pop
testb
mov
jbe
mov
adc
mov
or
adc
sti
sub
mov
fmull
out
jge
cmp
jge
in
pop
push
mov
jge
push
movsl
jl
mov
jne
sub
test
insb
pop
bound
shrl
jmp
rclb
mov
test
adc
sub
xor
movsb
mov
mov
dec
jo
arpl
or
push
xchg
test
adc
shll
sahf
aas
loope
rcrl
jp
ja
and
mov
xchg
cwtl
ficoms
mov
or
mov
cld
inc
add
sbb
mov
addb
adc
icebp
popa
mov
xor
xor
call
push
repnz
repz
xor
jae
add
adc
sbb
push
stos
sahf
inc
adc
and
jne
adc
aam
lock
test
add
pushf
sbbb
stos
aad
jecxz
sbb
daa
sbb
testb
out
mov
lcall
adc
fidivl
jg
movsl
push
dec
test
jmp
sub
xchg
push
bound
add
je
fs
sbb
add
sub
sbb
aad
lea
inc
lcall
fnsave
shl
ret
decb
gs
push
xor
sub
stos
xor
xchg
lds
jae
sahf
insb
fdiv
cmpsl
in
mov
stos
dec
and
std
xor
mov
aad
mov
adc
frstor
shll
orb
sub
pop
ret
xor
cli
imulb
bound
out
les
or
mov
mov
lods
int
or
sahf
and
in
fldcw
mov
call
nop
addr16
mov
xor
in
lret
dec
cld
ret
fucom
icebp
lahf
outsb
push
xchg
push
dec
cmp
lahf
lcall
push
fistpll
push
sbb
pop
push
xchg
pop
pusha
scas
fidivrs
in
adc
sub
pop
sub
mov
or
shlb
test
nop
pop
ljmp
mov
inc
pop
fsubl
jecxz
les
xlat
sarl
ljmp
mov
push
xor
pop
scas
test
push
pop
subb
xchg
pop
ret
ss
pop
pop
xor
push
leave
std
fldcw
fistpll
aaa
add
clc
jge
in
fs
add
and
jl
or
or
int
sahf
aas
jl
add
cs
cli
mov
outsl
mov
inc
or
push
std
adc
or
jb
lret
xlat
or
push
in
jmp
repnz
pop
test
idiv
and
enter
or
xchg
in
out
mov
aaa
dec
in
mov
jnp
fimull
out
pusha
adc
and
rcrl
or
dec
mov
daa
test
test
jle
mov
insb
popa
push
xchg
sbb
ret
stos
lahf
clc
adc
test
sub
and
pop
jno
sub
ja
daa
sub
roll
or
fs
mov
sub
mov
daa
imul
mov
add
test
shr
test
fnstenv
daa
pop
mov
movsb
pushf
cmpsl
imul
loop
jmp
jae
jl
in
sub
lea
into
mov
jne
xor
enter
mov
jle
mov
mov
pop
and
out
ss
lock
mov
cmpsb
inc
pop
sbb
xchg
dec
mov
negb
and
inc
mov
push
lock
mov
cltd
cmpsb
loopne
loop
out
mov
pop
into
jb
xor
out
jns
fcoml
mov
or
push
pop
out
cmc
add
call
mov
jecxz
idivb
int3
cmp
arpl
outsl
std
mov
leave
inc
ja
xlat
cmp
in
push
jecxz
jp
and
inc
andb
lcall
cmp
mov
mov
call
push
stos
or
or
and
test
lcall
shrl
xor
push
aad
fcmovnu
mov
loop
ds
popa
push
push
xchg
test
jle
adc
rcll
mov
push
js
dec
stc
ror
mov
lret
cs
mov
orps
test
mov
pop
mov
fstpt
orb
inc
sub
adc
ja
aas
push
ja
es
xchg
movsb
subl
jl
jle
popa
mov
outsl
int3
cmpsl
pusha
mov
jns
rorl
outsl
insl
push
cmc
cmp
mov
enter
jl
data16
sbb
sbb
push
aam
sub
push
xchg
mov
mov
repz
dec
lcall
in
jb
cmp
mov
out
sbb
lock
insb
jne
fists
and
xlat
outsb
arpl
or
inc
lret
xor
and
test
push
movsl
mov
pop
and
jb
cmp
push
lock
imul
adc
sub
jmp
xor
jmp
pop
imull
in
pop
add
pop
pop
aas
jle
imul
int3
stos
aam
and
cmpsb
mov
popa
jge
or
inc
xor
addl
push
pop
push
mov
mov
sbb
mov
cwtl
add
cmc
sti
daa
fisttps
mov
jl
sub
out
xor
cmpb
out
jecxz
pop
push
inc
in
arpl
js
rclb
mov
ficoms
adc
inc
adc
mov
jecxz
fstps
push
jno
mov
jp
jge
insl
cmp
mov
jge
test
insb
mov
pop
and
mov
scas
es
dec
std
repz
idiv
sbb
lea
and
scas
mov
pop
mov
mov
sbb
jl
xorb
fisttpl
and
scas
jge
jg
adc
sub
xor
pusha
loope
add
scas
shr
cmp
push
aad
hlt
or
das
mov
mov
xor
push
xor
inc
cmpsb
sub
js
mov
idivb
fmul
fildl
inc
addr16
xor
stos
pop
mov
and
jnp
xor
pop
stos
das
inc
pop
dec
xchg
inc
xor
mov
pop
xor
jae
arpl
std
jp
xor
mov
pop
outsl
xor
sarl
cmpsb
xchg
push
mov
outsb
mov
ret
add
int
imul
sbb
jne
xor
inc
sub
sbb
cmp
rcrl
pop
fcmovbe
cmpsb
push
mov
pop
aas
in
jb
push
mov
xor
subb
filds
adc
repz
cld
push
int3
adc
fnstenv
dec
lods
pop
ja
loop
aas
jg
cld
stc
stos
insl
xor
cmp
dec
xor
out
jbe
insb
jmp
xor
mov
lods
mov
xchg
divl
repz
das
popf
and
cwtl
gs
pop
jnp
adc
adc
mov
xchg
and
jb
or
jbe
fs
add
sbb
dec
jno
push
jns
icebp
inc
push
add
daa
sub
add
in
jne
ret
js
jo
mov
inc
jmp
add
push
call
mov
pusha
sub
jnp
push
push
or
stos
scas
jb
mov
aad
adc
inc
lret
lcall
int3
lds
lcall
and
and
rolb
repnz
mov
lods
es
and
test
xchg
mov
pop
call
mov
mov
sbb
mov
push
and
sub
das
pslld
insb
fcmovne
mov
push
ja
jae
lahf
xor
ja
mov
movsb
push
lea
dec
jg
xor
ret
scas
xchg
mov
ds
lock
cmp
aad
dec
les
or
cld
xor
sahf
xor
dec
lods
and
incb
mov
lret
ja
sahf
stos
xchg
cmp
fstpl
cmp
data16
fs
cld
dec
clc
add
adc
xchg
cmp
mov
std
sub
push
bound
mov
mov
aaa
pop
idivl
xchg
lret
sbb
xor
or
jl
mov
lcall
cmpsl
call
jecxz
mov
aas
add
xor
addr16
mov
push
icebp
jo
mov
fsubs
inc
and
leave
xor
lock
das
inc
mov
cmp
sahf
icebp
iret
adc
inc
sub
push
dec
aas
push
mov
std
nop
pushf
jb
outsl
adc
push
jle
sbb
scas
roll
jp
jge
pop
or
and
loope
adc
mov
ds
in
insb
push
popa
push
jbe
fmuls
and
mov
mov
pop
jecxz
push
fs
push
or
push
sbb
insb
int3
fistpll
sub
loopne
out
icebp
sahf
mov
arpl
rclb
xchg
xchg
repz
mov
or
mov
inc
stos
adc
sahf
mov
and
lret
testl
add
shlb
scas
fistpll
fmuls
mov
mov
in
xchg
add
push
sub
je
pop
inc
and
adc
daa
and
nop
stos
mov
xchg
mov
aam
rclb
and
popw
in
jge
cld
popl
push
mov
jne
cmp
in
lds
testl
mov
push
push
mov
sahf
mov
jle
bnd
lcall
fadds
xor
adc
xchg
cmc
outsl
push
push
int3
add
cltd
adc
mov
rcrl
sahf
inc
aam
mov
stos
mov
push
push
and
mov
xchg
mov
test
mov
add
popf
pushf
repnz
arpl
and
ds
mov
push
lcall
sarb
xchg
pop
jge
add
enter
push
in
scas
gs
pop
les
cmpsb
shr
and
loopne
out
xchg
mov
jne
push
or
sahf
les
jl
sbb
ljmp
repz
push
jp
mov
cmp
sbb
cwtl
jbe
pop
mov
cld
mov
jge
arpl
xchg
dec
aaa
outsl
daa
imul
lret
enter
mov
cs
popa
cmp
outsb
out
sub
pop
int3
or
outsl
sbbl
clc
je
xchg
das
add
pop
inc
filds
xchg
leave
and
sub
push
scas
jne
out
and
mov
insb
mov
bnd
cmp
dec
push
imul
dec
fisttpl
xlat
xor
aam
push
xchg
or
mov
shr
icebp
xor
pop
cmp
cmp
xchg
cmp
cmp
pop
sbb
gs
popa
addl
push
pop
inc
inc
inc
mov
jge
push
popf
popf
or
mov
jle
cmc
and
mov
scas
and
or
xchg
sbb
jb
xchg
jecxz
push
cmp
outsb
pop
mull
cmp
cmp
mov
xlat
mov
sub
rcrb
add
xor
add
adc
and
out
enter
mov
adc
mov
inc
inc
in
inc
lods
popa
and
pop
divps
and
lock
add
inc
xchg
cwtl
scas
jecxz
in
hlt
dec
mov
cmp
lds
inc
ja
in
mov
adc
shl
cmp
inc
mov
ret
or
inc
int
xchg
mov
in
addr16
and
dec
gs
xchg
sub
imul
ret
jae
cld
inc
lock
test
push
ss
sbb
jns
loop
loope
push
xor
cmp
test
jmp
ljmp
fiaddl
cs
cld
das
xchg
jecxz
call
mov
push
jg
mov
push
push
int
cmp
fsub
jno
push
dec
sub
sub
movsb
or
adc
pop
lds
stos
dec
sbb
xor
movsl
clc
and
es
inc
push
xchg
mov
lahf
xor
icebp
insb
fiadds
hlt
mov
xchg
mov
add
enter
mov
add
sub
fsubl
outsl
xor
and
into
sbb
repz
xor
jb
testb
sbb
mov
xchg
cmc
inc
jecxz
dec
cli
imul
inc
add
icebp
insl
adc
pusha
out
fisubrl
cmp
rcrb
mov
stos
pop
das
mov
gs
not
repnz
sbb
pop
sub
pop
jno
shll
push
jl
aas
scas
shlb
fs
jge
jl
push
sbb
sub
imul
or
cmp
sbb
sbb
jns
fs
or
sbb
push
dec
mov
xor
lock
mov
mov
or
es
pop
cmp
sub
ret
sahf
pushl
imul
pushl
fs
inc
push
incb
cltd
repnz
stos
movsl
sahf
repnz
into
add
pop
out
std
icebp
adcl
dec
fistpl
scas
and
cwtl
int
test
lahf
pop
repnz
movsb
mov
iret
sbb
lds
outsb
repnz
pop
shlb
push
pop
adc
xor
lock
test
mov
cmp
mov
push
xchg
pusha
inc
pop
fidivs
xor
mov
or
sub
xor
sub
push
adc
je
orl
mov
fwait
out
mov
pop
int
push
ljmp
mov
xorb
inc
push
xchg
aaa
fs
add
add
ret
or
cwtl
sub
shll
lcall
call
sub
enter
push
dec
fwait
jb
xchg
pop
dec
ja
popf
cltd
jecxz
call
inc
jns
popa
xor
add
sbb
xchg
nop
cmc
adc
shl
or
imul
sub
fmuls
mov
jg
fdivp
dec
ficoml
pop
in
push
xor
testb
orb
stos
ds
fimull
mov
je
xor
mov
mov
push
sub
jl
cmp
push
add
in
xor
sub
jns
sbb
jno
cli
xor
xlat
adc
pushf
lea
and
cmpsb
pop
fisubrs
movsl
loopne
push
push
loop
rclb
das
imul
js
imul
ficompl
or
repz
adc
jne
aad
pop
out
repz
sbb
add
mov
adc
aam
push
int
lret
mov
sbb
jg
faddl
push
pop
inc
insl
lcall
hlt
sbb
dec
fimuls
mov
mov
sti
adc
fnstsw
dec
loopne
stos
inc
jmp
mov
jbe
pop
hlt
push
lcall
xchg
dec
inc
xor
cmp
repnz
sbb
push
mov
sub
fildl
lea
dec
js
jg
pushf
lock
dec
cld
push
roll
loop
push
inc
cwtl
push
inc
xchg
dec
shrl
mov
shl
adc
or
pop
or
inc
lret
sbb
nop
in
sbb
and
xor
fnsave
inc
int
mov
pop
pushf
sahf
dec
or
cmpsl
sub
aam
nop
pushf
push
pop
dec
sub
or
mov
mov
pop
mov
jmp
push
jg
add
push
loope
lahf
inc
mov
push
sub
mov
mov
or
daa
shl
mov
pop
imul
lcall
inc
lret
xlat
arpl
cltd
and
inc
mov
sarb
imul
in
add
lret
pusha
sub
mov
outsl
std
js
outsb
jp
and
inc
mov
sub
add
or
jmp
xor
je
dec
sbbb
fistl
popa
fs
push
mov
bnd
mov
in
rolb
and
cmp
test
scas
out
aam
popa
ljmp
push
repz
sar
cmc
adc
xchg
mov
inc
mov
lock
adc
fcompl
lcall
add
aam
pop
cmp
sub
cmpsb
scas
mov
js
inc
stc
or
xchg
sbb
mov
jmp
ret
fcomp
repz
aaa
es
cmpsl
sub
mov
lods
repnz
in
and
into
dec
sbb
js
adc
push
cld
sub
test
out
or
push
es
fsubrl
xor
cmp
es
pop
in
sub
inc
jns
dec
loope
popf
mov
jecxz
pop
xor
inc
cmp
sahf
test
xchg
inc
fnstenv
cmpsb
sahf
repz
lret
xor
fisttpll
mov
out
cwtl
pop
test
push
outsl
ret
fwait
stos
add
xor
sub
sbb
rol
in
aaa
sbb
cmc
adc
cmc
mull
jo
je
mov
lock
jns
outsl
mov
jge
pop
add
cmc
cld
in
jp
add
lret
mov
inc
xor
mov
pusha
adc
std
std
das
ja
nop
sbb
mov
rcll
add
movl
fs
stos
inc
xor
sbb
xchg
jbe
or
sbb
leave
xor
xor
push
mov
fwait
stc
daa
pop
push
ret
mov
gs
jo
stos
ja
xor
sbb
mov
pop
pop
or
dec
clc
or
enter
test
or
das
fcompl
ja
xor
xlat
mov
pop
test
push
cld
dec
push
cmp
test
mov
jle
mov
mov
sbb
aas
jae
test
inc
adc
mov
lcall
xor
mov
adc
fildll
jecxz
mov
push
cli
mov
scas
xchg
mov
jecxz
movsb
jo
nop
mov
pop
inc
or
icebp
jge
dec
ss
stc
push
sub
test
in
cmc
sbb
inc
outsl
fcoms
add
sub
dec
jge
addr16
or
sarl
xor
add
xor
std
psllq
hlt
pop
call
pop
xchg
addr16
arpl
and
ja
add
push
jb
jns
cmp
iret
insb
lea
outsl
cmpsl
aaa
inc
mov
popa
lock
dec
pushf
xor
int
add
std
pop
movsl
aaa
popf
mov
xchg
lods
xor
push
dec
xorb
push
inc
stos
js
dec
filds
add
out
js
mov
push
dec
xchg
mov
push
lock
xor
cmpsl
mov
lahf
sar
popa
repnz
xchg
adc
nop
test
or
or
out
pusha
xchg
std
cli
mov
dec
decb
mov
dec
lods
mov
insl
dec
cli
and
or
adc
mov
int
push
int3
mov
into
add
mov
icebp
out
ljmp
add
cli
mov
shlb
dec
fiadds
xchg
mov
les
idiv
or
mov
rclb
pushf
repz
lret
jg
add
sub
jmp
xchg
mov
imul
stc
xchg
push
push
jecxz
xchg
mov
mov
out
rolb
add
popf
adc
push
dec
jbe
and
imul
into
cmc
push
cmp
jecxz
adc
mov
adc
mov
testl
out
xchg
push
add
fldcw
movsb
pop
ret
imul
push
xchg
push
lahf
mov
pop
cmp
xchg
xorb
inc
aam
cltd
dec
push
inc
cli
ss
mov
add
rolb
xchg
pop
adc
and
xor
push
lds
xor
leave
div
xchg
loopne
xor
xor
in
jl
test
addr16
scas
pop
pop
subl
and
jmp
aas
lret
repnz
push
sub
ja
push
or
lahf
fcomps
mov
jl
mov
je
add
mov
aaa
pop
inc
and
bnd
mov
int
mov
fwait
dec
push
jl
push
insl
jg
and
stos
pop
pusha
lret
push
sub
fdivl
lret
cltd
lret
bound
sti
fwait
loopne
mov
sbb
rorl
gs
ja
jle
mov
shl
std
cld
push
gs
stos
xor
mov
lods
adc
lcall
mov
sub
fcoml
je
fnsave
les
adc
jae
jecxz
inc
lods
pusha
cmp
inc
js
xor
add
fldcw
mov
rolb
mov
imul
enter
sub
or
dec
aas
pop
xchg
jmp
subl
jns
pop
mov
insl
push
mov
stos
repz
sub
pop
movsb
xor
push
cmp
fs
out
xchg
out
pop
mov
push
fldcw
cmp
xchg
jp
lcall
pop
cltd
mov
inc
stos
mov
sbb
test
nop
popa
in
pop
and
jno
mov
or
jg
cltd
aam
push
lret
stc
xchg
mov
lret
bound
lods
adc
out
fimull
xchg
xorl
std
mov
mov
adc
push
cs
mov
aas
pushl
addr16
dec
mov
jbe
push
aam
add
jb
rcrl
jbe
enter
mov
mov
mov
out
jb
clc
add
xchg
in
dec
and
test
lgs
aad
cmp
mov
cmpsl
fxch
cld
loopne
inc
gs
repz
dec
insl
outsl
inc
inc
int3
push
pop
sbb
cmc
ss
jle
mov
pop
inc
ret
mov
sub
add
les
inc
ja
dec
aaa
push
ds
test
mov
mov
and
mov
sub
inc
inc
repnz
fdivs
xor
mov
push
pop
or
sbb
jg
js
push
mov
fsubs
jo
cmp
push
xchg
ficoml
mov
arpl
into
add
push
mov
imul
int
mov
push
arpl
stos
shl
fdivs
shrl
xchg
push
xchg
fildl
jmp
add
rcl
cmp
xchg
inc
adc
dec
jne
popa
int
sub
pop
test
mov
mov
movsb
pop
out
scas
inc
int
out
lock
jae
cmpsl
adc
add
shll
jns
dec
out
out
clc
jp
and
xchg
xor
jnp
jmp
jns
pushf
and
fldt
inc
lods
enter
sahf
repz
mov
js
loop
xchg
je
inc
add
out
cmc
ret
out
stos
jg
pop
js
and
int
inc
adc
div
ret
push
push
sub
cwtl
and
lcall
out
sub
fisttps
dec
dec
mov
aam
mov
push
rcll
aad
test
mov
xor
inc
out
mov
stos
fdiv
jae
call
jno
xchg
sub
mov
adc
sub
iret
movsb
push
rol
mov
and
jl
lahf
xchg
popa
aaa
add
ret
and
xor
lds
negb
rclb
test
cld
inc
add
xor
cmp
out
ja
das
jae
dec
in
ja
aas
pop
or
jno
mov
mov
xchg
add
and
cmp
std
add
mov
scas
jge
xchg
adc
loopne
icebp
aas
cmp
xor
out
dec
cwtl
outsb
fcmovbe
iret
inc
movsb
insl
dec
jecxz
outsl
jle
movl
dec
xor
dec
aas
sbb
sub
mov
xor
jo
xchg
inc
fiadds
xorl
cltd
push
loope
lret
xchg
out
xchg
fadds
aaa
push
adc
jae
and
cmp
inc
and
dec
lods
mov
mov
and
iret
lret
and
icebp
mov
repz
push
movsl
push
int
das
sub
xchg
lods
movsl
fists
ds
cmp
rolb
mov
fiadds
arpl
cmp
inc
mull
sbbl
and
xchg
xor
arpl
mov
sub
scas
ret
scas
aaa
fucomip
push
inc
pop
leave
mov
ljmp
lea
lods
jns
sub
add
add
imul
push
push
dec
push
pop
in
test
inc
adc
in
xlat
dec
subl
cmc
pop
and
pop
or
cmpsl
add
mov
les
add
mov
or
ljmp
icebp
push
mov
xchg
pop
mov
iret
iret
pop
mov
or
mov
mov
pop
push
xchg
fsubl
std
dec
in
jno
cmp
mov
push
lcall
adc
push
lods
mov
xlat
out
jle
inc
add
or
inc
push
lock
adc
and
movb
stc
push
inc
xor
subb
sub
cmp
mov
cltd
scas
and
inc
cmp
mov
test
in
adc
jmp
jge
xchg
push
lret
cmp
xchg
sahf
adc
adc
sahf
stos
jo
mov
aas
mov
cmp
pop
sub
push
push
loopne
fs
add
inc
mov
jp
adc
jecxz
out
or
cli
xor
pusha
dec
inc
push
mull
stos
jno
cli
mov
and
pop
sbb
sbb
lcall
sahf
fists
rcrb
je
loope
mov
lahf
notb
push
xor
aas
lahf
inc
test
sbb
xor
cltd
jge
aas
sub
test
je
sub
adc
in
aaa
push
pop
cs
mov
cs
mov
rorl
mov
movsb
xor
pop
mov
clc
scas
fdiv
rorb
push
xor
adc
xchg
stos
dec
pop
mov
inc
loope
aam
pop
into
push
push
xor
mov
shrl
push
or
int
movsl
or
int3
xor
xchg
jmp
clc
and
add
push
decb
repz
insb
pushl
loop
cmpsl
pop
in
xchg
inc
or
mov
dec
test
out
aad
mov
lods
repz
xor
pushf
sti
or
enter
cmp
mov
xchg
push
aaa
inc
ds
jnp
adc
and
arpl
push
ljmp
fs
stos
xchg
mov
push
inc
pop
gs
pop
sahf
mov
loop
jge
fneni(8087
xchg
add
adc
and
or
sti
notb
dec
cmp
jns
sbb
adc
push
xor
sbbb
mov
jmp
add
jno
sbb
adc
jmp
adc
iret
lea
in
hlt
xor
pop
popa
sti
sbb
sub
sbb
mov
or
jecxz
xor
scas
and
rcll
and
adc
out
xchg
cmp
popf
push
adc
push
dec
out
xor
ja
fsubrp
xchg
mov
adc
jmp
pop
push
or
and
sub
out
mov
dec
and
cmp
jnp
aad
dec
inc
jb
mov
mov
cmp
mov
mov
or
or
jb
fists
lcall
imul
or
int3
cmp
hlt
cmpsl
jl
aam
mov
jbe
mov
lcall
lret
insl
sahf
or
fcompl
jae
int
sti
and
lret
inc
fadd
scas
inc
mov
sub
movsb
push
push
enter
mov
adc
xchg
jns
popa
jmp
icebp
mov
imul
cmp
loope
fnstsw
push
mov
fisubrl
es
and
sti
sbb
scas
cmp
loop
test
pop
cmp
gs
mov
inc
fidivl
push
push
cmpsb
rcrl
or
xchg
add
fsubr
sub
pop
sub
cwtl
sub
out
pop
fstpl
cmp
jp
ja
cmp
add
loop
pop
test
das
inc
mov
in
mov
clc
rcrl
mov
out
inc
pop
repnz
jge
or
xchg
dec
in
mov
xor
frstor
test
adc
pop
pusha
mov
enter
adc
movsl
imul
pop
sbb
dec
sahf
testb
outsb
iret
pop
mov
push
push
xchg
enter
jg
stos
add
movsl
flds
in
sub
pop
andb
insl
sbb
insb
arpl
in
mov
and
test
mov
adc
and
mov
or
jle
xchg
lret
pop
cmp
sub
or
pop
punpckhwd
push
add
loopne
imul
ljmp
pop
jnp
jns
int
vpcomd
pop
push
insb
xor
mov
in
seta
int3
xchg
ss
and
sbb
sbb
push
sbb
outsl
or
push
add
iret
or
mov
pushf
addb
pop
dec
mov
aad
jae
adc
sub
sbb
outsl
les
lea
shll
sahf
inc
shlb
fs
jo
lods
inc
scas
jp
mov
stos
inc
pop
cmp
add
aad
add
xrelease
and
test
adc
pop
gs
jns
xor
add
scas
add
decl
popf
mov
push
cmpl
jmp
aas
daa
mov
mov
insl
fldl
lock
pop
ds
inc
jg
cmp
loopne
orl
dec
jmp
loopne
test
push
cmpb
call
insl
bound
insb
insl
inc
hlt
fstpt
or
fldl
mov
fdivs
cmpsl
cmp
lahf
push
test
aam
and
or
jmp
sahf
add
and
push
ret
outsb
data16
xor
cmp
lahf
mov
mov
gs
xchg
cmp
jp
inc
push
ljmp
addr16
aam
or
xor
push
ds
cli
sahf
xor
rol
out
unpckhps
mov
inc
or
cmp
push
push
mov
push
lahf
sub
push
sbb
ja
xor
cltd
leave
adc
dec
test
shrl
mov
sub
sbb
mov
gs
ds
mov
xchg
popl
ds
xor
dec
test
loop
popf
dec
mov
pop
and
mov
fiaddl
loopne
std
push
aaa
lock
pop
and
sub
out
xchg
sbb
push
xchg
out
xor
out
jge
fs
jge
push
ss
loope
push
leave
inc
outsl
inc
or
sti
push
mov
sahf
jno
dec
inc
test
mov
push
aad
jl
scas
xor
adc
repz
adc
fisttps
ds
repz
xor
dec
mov
sub
mov
xchg
jmp
cmp
sar
mov
xchg
imul
xchg
pushf
mov
pushl
or
das
addb
out
pop
adc
jo
pop
adc
cmp
lret
insb
sub
adc
mov
xchg
pusha
ret
pop
imul
icebp
call
test
mov
adc
inc
fldenv
js
jnp
mov
mov
push
mov
cmp
ja
fptan
jle
and
stc
mov
and
mov
shll
outsb
sbb
xor
movsb
sahf
pop
ss
cli
das
not
int3
dec
sbb
gs
mov
adc
cld
sti
pop
ss
xchg
arpl
dec
xchg
hlt
mov
dec
sub
jmp
int3
int
jecxz
lea
sub
pop
insl
mov
adc
pop
jnp
sbb
test
nop
mov
inc
mov
xlat
sbb
fmulp
fs
inc
xchg
mov
in
iret
mov
push
mov
test
jg,pt
cs
cs
cmc
jno
push
in
sub
sahf
andnps
jnp
jae
out
xor
dec
sub
popf
mov
xor
je
sbb
add
inc
pop
push
mov
sbb
push
dec
pop
lock
in
mov
and
aam
cmp
dec
xchg
fisubs
sbb
in
pop
jge
int3
lret
push
pop
sti
out
cmp
push
cmc
mov
test
mov
cwtl
stc
mov
cwtl
in
cmp
pusha
xchg
stos
inc
inc
jnp
test
pop
aad
enter
into
xor
adc
lods
pop
sbbl
push
lea
fidivrs
test
test
je
int
pushf
aaa
leave
pop
lea
clc
dec
xchg
fstl
ret
not
adc
and
loop
or
ret
push
mov
push
adc
sbb
push
sub
jb
mov
add
sarb
cmp
jp
loopne
or
or
jb
mov
imul
mov
rclb
adc
sbb
add
pop
lret
mov
lods
mov
inc
add
cld
adc
cmp
xchg
ret
add
mov
mov
xor
lret
pop
add
pop
lcall
cmp
jmp
xchg
jecxz
movsb
arpl
mov
mov
push
cltd
out
add
and
mov
cmp
into
inc
jg
mov
enter
adc
pop
pop
out
or
cmp
repnz
les
out
lahf
sub
mov
imul
and
jbe
xor
sub
and
xchg
sahf
insl
jecxz
cld
xchg
aaa
test
or
test
cltd
int3
xchg
dec
push
inc
addr16
lret
mov
clc
repnz
sub
daa
jmp
push
lahf
test
sbb
popa
push
pop
stos
inc
and
push
dec
out
mov
sub
mov
outsb
add
insl
mov
inc
mov
icebp
xlat
xchg
mov
insl
loopne
scas
faddl
xor
dec
dec
or
sbbl
push
insl
outsl
stos
test
jne
lods
or
sub
mov
xchg
out
jno
or
xchg
pop
xor
fldenv
dec
orb
fwait
outsb
cmp
inc
loope
dec
xor
cmp
les
cmp
subw
xchg
ret
shrb
les
or
pop
in
jns
cltd
push
xchg
in
out
cli
sar
loop
mov
outsl
pop
sbb
cltd
mov
mov
imul
inc
popf
push
push
pop
shrl
xchg
xchg
dec
mov
enter
lret
test
pop
xchg
test
imul
cmp
push
jge
adc
xlat
inc
cltd
mov
and
or
sub
add
adc
clc
xchg
aas
cmc
xchg
in
out
jns
jo
push
aam
div
inc
pop
cmpsl
add
pop
ficomps
call
push
cmp
inc
sub
or
leave
or
mov
out
or
add
enter
xchg
xor
insl
rolb
lods
cmc
lahf
loop
adc
sbb
xor
ret
loope
cwtl
or
hlt
js
lds
cmp
movsl
outsl
scas
pop
leave
cmp
ds
push
mov
xor
decl
sti
mov
mov
xchg
shr
stc
sbb
pop
push
rolb
jecxz
and
test
push
ret
mov
ffree
arpl
loope
xor
push
xchg
stc
out
mov
or
out
mov
outsb
xchg
jmp
push
mov
in
sahf
into
push
sti
repz
rcll
xchg
leave
xchg
and
lcall
jb
mov
xor
arpl
out
adc
jg
inc
add
lahf
je
int3
repz
pusha
sub
pushf
inc
jns
cld
negl
int3
and
movsb
xchg
sbb
movsb
pop
add
pop
mov
jne
lock
jbe
adc
in
xlat
adc
repz
stos
stc
xor
pop
inc
test
xchg
inc
push
aam
aad
js
jge
mov
outsb
cmpsl
frstor
sbb
jb
lods
lcall
xor
hlt
mov
loopne
daa
add
push
aad
jns
inc
jne
xchg
xor
mov
mov
mov
das
pop
lods
out
and
jbe
pop
xor
sbb
push
jp
push
dec
test
inc
mov
push
lds
scas
fldcw
cmp
mov
sbb
push
shll
iret
xchg
lock
out
push
sub
imul
call
fidivrs
outsb
sbb
mov
lock
jns
add
pop
pusha
mov
jae
and
pop
add
in
adc
rclb
inc
inc
mov
or
sub
popf
jns
mov
push
insb
dec
stos
lds
dec
jo
pop
dec
int
push
or
arpl
js
cmp
ss
cmp
hlt
imul
cld
mov
or
jno
clc
iret
push
ret
and
push
pop
sbb
jb
push
xchg
xor
aam
imul
inc
sub
ret
insb
xchg
stos
or
ror
mov
xchg
push
xchg
pop
sbb
outsl
mov
sbb
sbbb
pusha
add
fildll
dec
cwtl
pusha
dec
mov
addr16
subb
pushf
push
ret
pusha
fldt
xchg
out
popa
popf
cmp
mov
aas
cmp
dec
and
in
sar
lea
scas
add
xor
loope
or
add
in
cmp
data16
lods
and
inc
sarl
mov
ret
cmp
push
inc
orl
das
adc
push
shrl
inc
pop
jle
push
or
lea
aas
sub
xor
adc
ficomps
fistps
call
addr16
sbb
ja
pop
sub
push
pop
dec
addr16
cmp
nop
jb
ja
cmp
add
jl
adc
and
aas
adc
ljmp
fs
jbe
sbb
insb
popf
shl
add
mulb
aaa
in
push
push
sbb
jo
sub
test
or
mov
out
inc
xchg
repz
add
sarb
mov
lret
loop
jnp
in
cmc
sti
xor
pop
mov
mov
out
push
mov
outsb
dec
cmp
cmp
mov
adc
pop
push
clc
sbb
pop
rcl
rorb
bnd
xor
jae
rclb
adc
pop
lahf
mov
dec
fnsave
data16
jmp
lahf
test
inc
sub
xchg
cli
mov
pop
sahf
jb
sbb
and
dec
sub
mov
pop
sbb
pop
decl
jbe
sbb
adc
push
mov
xchg
sbb
lahf
mov
ljmp
call
ds
sti
lea
inc
divl
push
xchg
xchg
mov
jge
movsl
jb
or
out
add
jo
inc
hlt
fldenv
adc
push
mov
in
fsubl
and
add
das
mov
dec
mov
xor
inc
sub
mov
mov
xlat
xchg
push
stos
repz
fsubrl
xchg
sbb
sbb
aaa
fmuls
sbb
mov
cmpsb
int3
pop
cmp
xchg
sbb
fdivl
movsl
lret
and
inc
or
push
ret
sbb
mov
push
std
test
push
cli
outsl
aaa
out
mov
inc
in
adc
jmp
push
inc
je
mov
inc
mov
lret
hlt
les
inc
dec
out
xlat
js
xlat
sbb
stos
xchg
adc
aam
jno
mov
icebp
lock
roll
inc
cmp
mov
sub
dec
les
add
fisttps
iret
popf
outsl
or
and
mov
push
aaa
add
and
push
mov
or
clc
pop
hlt
mov
ljmp
jne
cmp
gs
shlb
and
mov
mov
sub
dec
inc
adc
mov
cwtl
jno
push
sti
push
inc
jmp
int
pop
xor
jo
shll
pop
out
cli
out
scas
rolb
inc
add
addr16
ss
in
lds
xchg
sbb
loop
stos
add
cmp
into
pushl
js
int
loope
and
std
sub
or
adc
sub
sub
xlat
fstl
std
mov
or
es
aam
dec
adc
cmpsb
or
jb
jae
int3
dec
pusha
mov
pop
inc
aaa
dec
cmp
sahf
push
mov
adc
inc
scas
sbb
outsl
outsb
dec
iret
mov
cli
inc
ret
mov
dec
mov
lret
push
into
incl
xor
mov
ja
stos
xchg
sub
and
fildll
out
mov
mov
inc
jg
clc
cmp
mov
jmp
jb
xchg
addl
xchg
push
in
into
mov
push
jl
sbbl
mov
mulb
out
dec
bound
jnp
rorl
pop
sbb
cmp
push
jmp
lods
in
mov
ss
mov
dec
insb
icebp
adc
add
pop
and
gs
jno
pop
mov
jmp
fisubl
iret
shl
push
push
and
jecxz
mov
push
add
jbe
testb
xor
xlat
ficompl
pop
clc
lret
in
push
movsl
popa
cmp
or
pop
mov
and
sti
test
xor
push
mov
sbb
rclb
cmpsb
nop
sbb
addb
inc
or
ret
in
stos
out
mov
or
sti
filds
jno
cld
aaa
sbb
flds
in
negl
add
lods
ja
xchg
fnstsw
inc
and
repnz
inc
inc
xchg
dec
popa
test
fucomip
jns
sub
mov
lret
pop
sub
jne
in
xchg
fdivl
xor
xchg
or
push
xchg
pushf
xchg
dec
or
cli
ret
scas
cmp
mulb
dec
clc
jo
pusha
cwtl
sar
pop
sbb
mov
adc
stos
jo
mov
add
sbb
stos
cs
stos
cmpsl
dec
lods
aad
push
add
push
xchg
das
cld
or
and
jge
call
addr16
fildl
push
mov
nop
and
fwait
lock
cmc
loop
jp
push
scas
iret
pushf
or
jo
ss
jmp
or
lret
stos
sub
aaa
xchg
pusha
sub
adc
aaa
sub
jnp
stos
jp
aas
and
push
ljmp
xor
addr16
andb
or
mov
js
xchg
incb
lods
inc
ja
ljmp
jmp
andb
addr16
stos
outsl
pop
cmp
popl
add
sbb
add
or
pushf
or
cmp
fisttpl
aad
mov
test
lcall
imul
mov
pop
or
fcoms
pop
cmc
sbb
nop
adc
mov
bound
pop
loope
cli
loope
hlt
add
fwait
andl
sbb
push
into
inc
mov
jns
sahf
dec
push
push
iret
adc
jmp
cmc
mov
cmp
cmpsl
pusha
cltd
insb
movsb
movsl
stos
les
mov
mov
pusha
cs
js
into
pusha
sarl
repz
jns
cmovae
addr16
mov
inc
lea
mov
pop
addr16
pop
test
mov
cwtl
lods
dec
lcall
lea
into
int
sub
pop
jae
out
adc
in
jle
mov
xlat
dec
push
pop
das
aam
adc
movsb
push
and
sahf
loope
subl
mov
push
int
jecxz
adc
or
sti
and
push
lds
out
pop
mov
imul
jl
outsl
out
int3
pop
ds
and
add
adc
stos
arpl
rcl
pop
jge
push
sub
mov
cmc
jg
inc
mov
mov
inc
push
jl
xchg
js
fucomip
xor
add
jp
data16
mov
mov
int
pop
inc
in
push
shl
jae
clc
push
mov
push
test
mov
cltd
ja
push
jae
xchg
or
and
push
fistl
incl
pop
leave
mov
xchg
and
sbb
and
jp
xchg
fld
sti
out
dec
mov
sbb
jge
sub
add
mov
lods
xchg
and
orl
lea
fiaddl
inc
jno
xor
sub
push
jns
insb
loope
sub
ficoml
inc
fdivs
fisttpl
mov
into
test
inc
lea
icebp
lds
lods
imul
dec
daa
fimull
and
sbb
js
stos
popa
xor
xor
stos
pop
fs
cmp
out
mov
adc
in
out
lods
mov
jns
out
lds
xor
inc
mov
outsb
mov
ljmp
xor
inc
dec
std
insl
sti
mov
and
jb
and
in
mov
mov
js
mov
inc
into
pop
mov
dec
out
in
inc
mov
jnp
icebp
push
leave
xchg
adc
add
bound
xchg
rolb
lock
mov
ss
ficompl
jbe
mov
add
cmp
mov
imul
inc
ss
jp
iret
xchg
lret
add
push
add
jecxz
mov
add
repnz
shrb
outsl
bound
mov
mov
dec
or
popa
rclb
fs
enter
jl
cmpsl
jle
push
mov
add
movsb
in
sbb
push
lret
xor
dec
push
push
cmp
lret
fs
cmp
lret
mov
and
sub
jb
ss
out
adcb
push
mov
sbb
stos
jge
jne
push
and
lahf
dec
mov
out
hlt
inc
divb
stos
inc
popa
fists
out
and
cmp
lock
into
inc
aad
fucom
inc
cmp
int
fdivs
hlt
jbe
loope
dec
test
int
push
popf
inc
adc
sub
adc
jmp
xchg
fmull
stc
push
jno
lods
mov
js
pop
fadds
inc
roll
push
lods
bound
and
or
xchg
mov
mov
aam
cmp
dec
jg
dec
cli
dec
test
imulb
es
mov
pusha
jg
xrelease
lods
pop
test
inc
cmp
in
lea
dec
xchg
shl
pop
sub
aam
shlb
js
ss
jge
nop
xor
stos
sub
icebp
icebp
jg
push
sahf
push
frstor
mov
pop
andb
xor
mov
iret
pop
aam
call
mov
sub
aas
push
and
cmp
ret
test
movsb
cmc
cmp
test
test
and
sbb
push
ret
inc
loopne
push
pusha
pop
dec
enter
fnstcw
mov
stos
into
in
ljmp
mov
mov
sub
outsb
xchg
cmp
push
pop
addr16
or
inc
mov
add
andl
cltd
das
pop
sub
dec
cltd
nop
ljmp
arpl
or
mov
sbb
sbb
lcall
cmp
xchg
jg
rcrb
push
pop
movsb
or
xor
jns
jo
sbb
loopne
xchg
gs
xchg
dec
hlt
add
cltd
sub
xor
aad
je
scas
xchg
sbb
adc
cmp
test
aad
pusha
jmp
xchg
stos
int
ja
iret
test
cmp
cmpsl
push
leave
lea
pushf
add
push
adc
adc
push
inc
jne
and
dec
stc
xor
add
ret
xor
aad
xchg
or
xchg
mov
out
fildll
mov
mov
sahf
jle
mov
incb
cmpsb
arpl
addr16
pop
fdiv
dec
mov
sarb
jbe
jbe
fcomps
call
mov
aad
inc
fdivs
cld
xchg
xchg
push
adc
mov
add
aam
xchg
movsb
or
xchg
xor
nop
xor
mov
sbb
jmp
cltd
gs
dec
lea
sub
fwait
adc
dec
cmp
enter
pop
addl
dec
outsl
add
aaa
enter
stos
mov
pop
mov
add
mov
mov
sbb
aad
outsl
push
sub
test
testl
sub
aas
pop
xor
add
jnp
xor
ret
repz
cmp
jbe
add
jge
outsb
adc
ret
int
mov
std
push
cmp
and
enter
and
call
repz
jno
pop
mov
push
sub
mov
adcl
cmp
inc
dec
add
jno
in
das
cmp
addl
shll
lock
mov
enter
lahf
jb
stc
ret
in
or
int
insl
mov
sbb
enter
stc
loop
clc
add
clc
jae
push
mov
ficompl
sub
repz
adc
sub
sbb
pop
push
dec
add
jne
xchg
nop
mov
stc
adc
xor
xchg
sub
aad
cwtl
loop
xchg
call
jge
and
xchg
outsb
xlat
shrb
and
repz
dec
stc
aaa
xor
into
dec
lds
jne
mov
jge
fistpl
inc
rcll
and
dec
push
and
faddl
or
dec
into
and
js
mov
into
cmpsb
repnz
inc
mov
pop
lds
rcrb
test
shl
dec
pusha
jmp
in
outsl
test
aaa
xor
mov
arpl
sbb
dec
mull
dec
push
outsb
ficompl
push
lahf
mov
scas
inc
fildll
cld
out
or
ds
mov
fs
pop
cmp
das
push
pop
mov
bound
xor
push
mov
mov
test
test
sbb
pop
in
jmp
pushf
mov
xchg
into
cs
cs
pop
xor
into
adc
cwtl
and
pop
jno
hlt
ret
test
lahf
aas
mov
popa
pop
in
sete
xlat
push
movsl
mov
cmp
cwtl
adc
test
pop
das
test
or
jle
call
jns
push
pusha
mov
ja
inc
movsb
mov
inc
add
mov
sub
xchg
rorb
mov
jmp
shlb
lods
add
push
jnp
pop
jns
xchg
test
insl
jb
push
addr16
scas
dec
aas
pop
xchg
mov
cs
lahf
cmp
push
add
push
cltd
js
mov
jp
fcomps
inc
mov
aas
cltd
dec
cmp
call
or
popf
or
mov
pop
mov
lods
add
jb
movsb
sbb
adc
xchg
mov
pop
jmp
cmpsb
jae
sub
mov
cmp
jle
iret
jmp
stos
lock
ret
mov
sub
jne
dec
inc
jnp
lcall
or
or
pop
jle
mov
das
outsb
insb
adc
push
sbb
js
imul
fstp
popl
push
std
xchg
mov
or
enter
xor
cmp
xlat
jmp
in
insb
pop
sub
adc
scas
jno
and
adc
mov
fwait
jns
xchg
cmc
or
pusha
cmpsb
enter
pop
sub
push
pop
scas
leave
loopne
xchg
pop
add
jno
mov
insb
std
dec
cmpsl
les
std
dec
sbb
pop
fildll
mov
adc
orl
xchg
negb
push
add
push
mov
cld
add
push
push
sarb
xor
xchg
fisttpll
push
stos
push
xlat
mov
rol
mov
cltd
fiadds
xor
lret
ss
mov
mov
sbb
mov
pusha
ja
inc
or
jl
jecxz
loope
ret
jge
lret
pop
jmp
shl
test
pop
pop
aaa
mov
push
sub
mov
test
outsb
jns
bound
aad
add
mov
lods
push
adc
mov
gs
add
stc
add
push
or
repnz
hlt
testl
mov
or
ret
out
dec
dec
mov
sahf
out
aam
scas
jecxz
inc
lret
push
dec
mov
cmp
imul
fdivrp
int
xor
aaa
push
dec
sub
jnp
add
pushf
xchg
bound
add
js
aam
xchg
mov
jnp
add
cmp
mov
mov
mov
fimuls
loop
or
add
not
pop
cmp
cmp
repnz
xor
mov
es
add
ss
add
or
ljmp
jmp
lods
sub
cmc
mul
dec
daa
fsubs
mov
and
inc
jmp
or
xor
gs
push
pop
fsubrl
rolb
pushf
mov
inc
loop
mov
cmpsl
out
push
and
popf
xchg
lret
lods
ficomps
adc
push
repnz
add
jp
cmp
mov
cmp
jnp
adc
sub
xor
and
test
sahf
popa
push
shrl
sarb
je
xchg
popf
inc
repz
dec
add
sti
cmp
addb
loop
scas
shlb
sti
pushf
push
ds
inc
aaa
cmp
mov
out
and
xchg
in
pushf
fwait
push
push
loop
movsb
or
sbb
lods
das
loope
and
sahf
and
and
call
and
cmp
adcb
and
test
xor
das
jb
dec
pop
mov
loopne
mov
and
aam
addb
jmp
inc
cli
push
add
shlb
frstor
fisubrl
push
sarl
mov
mov
bound
cmp
pop
mov
cmp
pop
ficoms
scas
test
sub
mov
cmp
leave
hlt
imul
push
push
xchg
inc
out
iret
ljmp
es
sub
xor
mov
dec
loopne
adcl
ret
push
mov
jl
dec
ret
stos
ret
loop
push
shrl
int
stc
cmp
xchg
addr16
lcall
out
outsl
push
jnp
ret
sub
fdivl
fimull
sbb
popf
mov
or
cld
mov
add
cltd
adcb
dec
xchg
mov
adc
mov
xor
icebp
jmp
mov
iret
out
push
mov
test
aad
bound
adc
mov
push
subl
je
and
cmp
stc
push
xor
fmull
cmp
jns
fadd
cmp
sub
mov
jnp
jno
add
mov
movsl
dec
setp
mov
jo
pusha
jns
icebp
scas
loopne
sub
stos
push
pop
or
and
pop
pop
adc
pusha
xor
fcomi
or
inc
fimull
insl
mov
push
test
fidivs
cmp
push
xor
or
inc
dec
outsb
imul
icebp
imul
in
aad
pop
int
cmpb
aas
test
lret
rcl
leave
stos
jge
adc
imulb
inc
pop
sar
push
lods
cmpb
add
test
dec
mov
push
cmp
in
xorl
outsb
cmpsb
push
jns
jmp
xchg
arpl
fs
mov
leave
xchg
sub
out
jg
iret
xor
pusha
fists
out
bound
iret
popf
jge
adc
push
imul
pop
es
mov
jnp
in
loopne
cmp
inc
pop
dec
notl
testb
cmpsl
cs
sub
adcb
loope
add
ss
cwtl
xor
push
push
adc
pop
pop
xor
cmpsb
fdivrl
lds
cmp
xor
les
jns
dec
mov
mov
js
mov
js
cmp
mov
push
inc
jl
addr16
jecxz
pop
cld
iret
lods
shl
fwait
sar
pop
pop
out
adc
out
jb
fisubrs
addr16
cmc
jge
test
sub
scas
jo
sub
or
or
sub
inc
das
cmp
lds
das
test
faddl
and
dec
inc
lods
arpl
jae
out
es
and
fisubl
push
je
jg
mov
sbb
test
addr16
jg
cmp
mov
cs
loope
test
add
mov
inc
adc
push
cmpsb
cmp
xchg
data16
mov
cmp
jge
test
jbe
or
psrad
fnstcw
and
int3
inc
push
cmp
mov
xchg
push
sub
out
fscale
jb
adc
jecxz
inc
out
add
mov
mov
je
or
jns
xchg
lods
mov
dec
lret
inc
ljmp
mov
cmp
jecxz
pop
stc
ja
outsl
fsubs
mov
dec
stos
jle
sti
adc
cltd
sub
std
fwait
ja
push
dec
mov
cmp
mov
test
push
ds
jg
fnstcw
test
xchg
sub
in
push
sub
pushf
iret
pop
es
jnp
dec
xor
cmp
sbb
mov
xchg
jecxz
adc
fs
out
gs
loope
cld
loope
xchg
xor
adc
andb
cmp
push
inc
out
mov
negb
adc
add
add
repnz
or
bound
or
jl
and
dec
jmp
xor
movsb
cmp
lret
out
test
js
aas
sahf
mull
repz
loopne
lods
repz
les
lods
or
outsl
stos
loop
push
loope
lds
test
ljmp
and
fimull
dec
pop
and
push
xlat
xchg
jge
sbb
pop
je
and
mov
mov
in
mov
cli
xor
sbb
pop
jae
add
mov
xchg
jle
sti
mov
addr16
add
lret
sub
ret
xchg
cmp
in
cmpsb
cmp
push
or
filds
jmp
icebp
mov
push
rolb
jmp
pop
xor
adc
dec
les
mov
in
pop
stos
mov
adc
mov
test
insb
and
out
lea
mov
fldt
sub
adc
pop
dec
sbb
je
sub
mov
sbb
mov
scas
adc
or
xchg
fidivs
nop
sub
mov
adc
and
popa
dec
rep
fst
test
ljmp
inc
jl
testb
push
or
dec
mov
andb
aam
loope
mov
shrb
je
fs
dec
or
and
sub
xchg
sti
loopne
and
adcb
or
jno
jo
jno
fs
insb
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
sbb
add
pop
add
lcall
add
add
jmp
add
out
add
int3
sbb
add
adc
add
sbb
add
push
add
pop
pop
add
ficoms
add
push
add
sbb
add
adc
add
sbb
add
add
add
cmp
add
cmp
add
cmp
add
add
xor
add
inc
cmp
add
add
pop
cmp
add
add
jb
add
jge
add
mov
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
outsl
jae
dec
imul
arpl
outsl
add
outsl
jae
push
push
jne
jno
insb
add
jno
je
jo
jo
inc
fs
je
imul
imul
gs
fs
ja
jae
insl
arpl
bound
dec
outsb
imul
js
push
inc
imul
popa
ja
insl
push
jae
jb
jns
push
gs
jae
insb
jno
imul
jbe
insb
insl
popa
imul
gs
fs
add
imul
js
add
push
imul
gs
bound
js
jb
add
jne
jns
jbe
add
js
jae
add
insb
jae
arpl
dec
jb
imul
jae
add
jne
js
outsl
jo
arpl
dec
outsb
imul
bound
jne
add
