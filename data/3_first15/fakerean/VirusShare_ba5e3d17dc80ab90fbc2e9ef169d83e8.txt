sbb
add
mov
sbb
push
adcl
pop
test
mov
stos
das
cmp
mov
xorl
pop
pop
jnp
adc
aaa
arpl
adc
and
data16
sub
sub
pop
push
inc
insb
xchg
mov
mov
hlt
mov
sbb
push
sti
mov
dec
or
ds
dec
or
mov
dec
repz
sbb
shlb
adc
lret
lods
inc
lret
inc
inc
mov
or
dec
ljmp
popf
sarb
jne
mov
mov
sbb
sarb
lods
outsl
imul
and
js
xor
pop
mov
out
cld
es
pushf
mov
mov
sub
jbe
mov
ret
sbb
inc
dec
jbe
pop
leave
inc
scas
mov
hlt
shl
rorl
movsb
push
jbe
lret
mov
js
das
jno
leave
sbb
icebp
push
rcll
insb
loope
mov
sbb
ljmp
rorb
cmp
mov
imul
push
mov
outsl
push
mov
inc
rcrl
les
add
enter
insb
hlt
outsb
mov
xchg
dec
clc
sbb
ret
mov
add
xor
test
xchg
ja
and
or
or
xchg
ds
mov
insb
dec
inc
xchg
push
cli
data16
xchg
fidivrl
aaa
push
jge
jge
or
int3
jae
mov
nop
add
fstpt
cmp
icebp
mov
or
jbe
sub
arpl
mov
and
dec
mov
sub
jp
jns
and
repz
arpl
stos
hlt
or
popa
stos
sub
and
add
leave
fists
mov
adc
jbe
testb
dec
insl
pop
repz
sbb
jae
jae
adcl
sbb
push
xchg
pop
cmp
insb
mov
test
cmp
inc
sbb
fistl
dec
or
test
shl
mov
xchg
outsl
insl
aad
sub
sbb
jbe
jmp
nop
push
sbb
mov
xor
aad
loop
jo
and
add
mov
out
iret
sbb
mov
jge
iret
xchg
stos
ror
in
dec
sub
outsl
add
sub
cmp
test
or
dec
out
sub
and
jge
gs
add
mov
repnz
mov
out
outsb
cld
in
fucom
lcall
subl
into
push
cmp
mov
fdivl
loopne
and
mov
add
jle
je
clc
mov
add
mov
sbb
leave
out
rorb
mov
push
sbb
test
insl
xor
cmpps
and
xor
test
xor
dec
lret
lret
scas
add
inc
sbb
cli
cmc
cs
push
iret
bound
jp
sbb
mov
lods
adc
mov
loopne
cli
cmp
mov
clc
xchg
call
push
rcrl
dec
xchg
push
cmp
in
xchg
pop
rcrb
div
mov
jno
insb
test
aad
shr
arpl
dec
push
aad
pop
es
jns
fwait
add
xor
cltd
aas
sarb
jmp
ret
or
and
mov
pop
imul
call
scas
pop
outsl
xor
arpl
xlat
and
cs
cmp
jmp
push
in
dec
sbb
psrlq
out
xor
in
rcr
jg
mov
cmc
lea
mov
cmp
scas
and
cmp
dec
ljmp
pop
daa
adc
push
out
and
insb
sbb
sbb
clc
jl
push
and
in
je
enter
sub
in
pop
inc
pop
inc
fwait
gs
adc
pop
xchg
sub
mov
lods
mov
stc
jne
test
divl
in
rcr
daa
sub
aas
imul
mov
push
mov
loopne
lock
xor
xor
stos
lds
mov
loop
adc
pop
lods
mov
push
jmp
test
and
lahf
ret
and
or
jnp
add
icebp
sbb
test
sahf
jmp
fstpt
out
movsl
push
in
jnp
mov
es
iret
fiaddl
pushl
into
dec
imulb
push
imulb
pop
mov
adc
jle
xor
lods
dec
inc
sahf
je
or
cmp
sarb
or
in
ja
mov
mov
add
xlat
aad
bound
insb
mov
in
mov
mov
neg
imul
insb
sub
inc
mov
inc
ds
outsl
pop
mov
outsb
std
test
or
and
fs
or
inc
jge
fwait
or
cltd
aas
vprotd
mov
popa
repz
mov
popf
lods
xchg
cltd
mov
into
push
mov
mov
or
ds
test
outsl
fcompl
hlt
lret
xor
nop
xor
inc
dec
mulb
pop
jnp
cmp
jle
pop
in
repnz
fisubs
aas
mov
sub
sbb
mulb
shrl
ja
mov
add
mov
fs
dec
cmp
roll
sbb
shll
daa
js
mov
add
mov
lock
jns
mov
pop
lods
jg
in
mov
dec
leave
pushf
dec
dec
out
je
jno
or
pop
inc
xchg
sbb
sub
pop
insb
loop
popf
add
xor
fnstenv
push
xchg
xchg
test
push
push
add
add
and
sbb
js
fnstsw
mov
xor
sbb
call
sub
sarl
or
sub
es
mov
xchg
call
pushf
cmp
mov
pop
jnp
sbb
or
push
jecxz
fnstcw
jo
into
and
daa
mov
iret
xorb
push
mov
dec
jecxz
lds
popf
jns
or
mov
push
cmp
or
push
divl
cmovne
aam
jmp
xchg
or
jbe
js
sub
movsb
cmc
faddp
inc
cmc
cmc
xchg
dec
dec
ljmp
mov
adc
mov
std
mov
mov
dec
adc
stos
fs
js
fsubrs
es
sbb
popa
mov
adc
pop
pop
mov
jmp
cmp
mov
inc
sbb
notb
call
imul
iret
add
xchg
dec
and
jnp
jns
mov
sub
sbb
aad
or
xchg
dec
mov
push
lret
pusha
jmp
cltd
and
pop
pop
fistpll
inc
mov
out
or
insl
in
lret
shll
sub
fbstp
or
scas
lret
xchg
lret
cmp
jae
xor
and
icebp
sarb
lods
mov
repz
jmp
cli
push
adc
subl
fmull
add
jmp
sbb
and
or
pusha
push
pop
pop
pop
jp
xlat
cld
inc
xchg
cmpsb
xor
lret
xor
mov
rcrl
popf
pop
int
mov
fidivl
nop
xor
ljmp
lods
lahf
xorb
out
sub
cmp
push
nop
jle
pop
mov
jnp
fld
mov
xchg
repnz
mov
sbb
sub
lret
cmpsb
jl
inc
xchg
je
ss
mov
clc
lods
xor
pop
and
outsb
in
adc
mov
jne
add
lods
ja
or
aas
cmp
out
dec
xor
hlt
jl
push
ja
pop
xlat
cmp
int
cs
sub
add
stc
stc
lods
inc
xchg
incl
fildll
pop
jb
cmc
dec
cmpsb
mov
sub
fst
pushf
mov
into
mov
push
clc
push
or
fiadds
lea
mov
mov
mov
jnp
js
pop
xor
jno
adc
ljmp
movsl
xchg
sub
jo
inc
out
jne
pop
xor
fidivl
add
mov
mov
push
or
jae
push
cwtl
mov
adc
xor
repnz
xchg
bound
xchg
and
mov
in
xor
mov
cld
add
adc
pop
scas
or
mov
cmc
lahf
sub
repnz
jmp
dec
add
dec
jnp
dec
adc
ficoms
aam
add
das
xlat
ret
rorl
jge
cmc
cltd
mov
mov
pop
sub
dec
bnd
in
in
fdivp
add
pop
xchg
add
aad
out
pop
outsl
cwtl
ja
mov
popa
aas
inc
out
push
push
mov
out
rcr
jne
aaa
or
inc
fcoml
daa
rclb
out
lods
mov
xor
xchg
outsb
lahf
dec
xchg
dec
in
mov
fisubs
not
dec
add
popa
cmpsl
mov
lahf
push
jbe
push
cmp
push
add
and
test
mov
stos
mov
int
aad
pop
dec
cmpsb
stos
adc
xor
or
mov
ja
add
loopne
adc
jae
in
adc
jge
rcrb
or
add
sbb
and
scas
sub
xor
ljmp
stos
mov
ret
mov
clc
aad
dec
dec
pop
adcb
data16
jp
stc
shll
mov
cld
hlt
mov
repz
cmpsb
sub
in
imul
sahf
sub
or
orl
xchg
fldt
xchg
fsubs
in
subb
jno
cmpsl
push
pop
mov
popa
and
pushw
jo
outsb
dec
ja
lea
mov
ret
xchg
mov
out
lret
push
xchg
scas
movb
mov
sarb
mov
add
fisubrl
mov
stos
inc
ljmp
data16
insl
ret
in
mov
loop
cwtl
mov
in
lcall
xorl
divl
xor
test
data16
add
int3
sbb
into
idiv
push
nop
xchg
inc
scas
and
fildl
jns
das
sbbb
dec
jno
sbb
sub
js
jno
popf
jo
fmull
popf
lods
cltd
sbb
bt
jno
jo
fisubrs
lods
xor
jmp
mov
cmp
imul
std
fucom
leave
cmp
and
add
lahf
sti
rclb
js
aam
lret
leave
sbb
adc
mov
std
shrb
or
pop
ljmp
stc
xor
lahf
mov
lods
jmp
mov
adc
jmp
jg
sbb
sbb
adc
sub
inc
dec
adc
add
mov
jne
dec
sbb
stos
jb
xchg
lea
xorl
mov
mov
outsb
adc
cmpsl
lock
xchg
mov
fldenv
and
int3
out
ss
addr16
pop
add
imul
stc
xchg
push
xchg
xchg
imul
mov
mov
mov
mov
fsts
pop
xchg
cmp
icebp
insb
mov
pushf
jge
inc
mov
mov
iret
adc
lea
xchg
jb
sbb
repz
mov
add
push
add
inc
push
mov
dec
test
cld
f2xm1
mov
out
mov
out
and
cs
iret
pusha
imul
dec
lods
sbb
jmp
xchg
lahf
mov
add
add
in
cwtl
mov
xchg
cmp
or
lahf
out
add
in
push
fstps
cmp
rorb
sub
sbbb
nop
addr16
mov
and
in
inc
jnp
inc
dec
cmp
pop
leave
mov
mov
sbb
mov
popf
pop
push
int3
jge
in
dec
mov
iret
cmp
push
aad
dec
call
cld
jae
xchg
cs
push
daa
xchg
xchg
lods
popf
adc
cld
cmp
sub
fimull
mov
jbe
mov
mov
ja
pop
popa
rolb
outsb
add
aad
xchg
aas
fcmovne
or
std
jg
and
inc
fldl
inc
pop
mov
jp
inc
push
cwtl
dec
push
cmp
gs
push
cli
out
add
mov
lods
mov
and
hlt
pop
test
movl
adc
mov
lea
aam
cvttps2pi
jmp
ja
icebp
sarl
sbb
hlt
call
pushl
loope
sbb
cmp
xchg
test
xchg
mov
in
mov
pop
dec
inc
movsl
dec
sbb
test
pop
cmova
sbb
mov
sarl
pop
xor
int
dec
lahf
in
pop
andl
pop
sbb
stos
cwtl
out
scas
jbe
movsl
mov
adc
sahf
out
xor
push
push
int
out
or
dec
cltd
jle
xchg
xchg
xchg
fsubs
packsswb
push
push
jmp
je
pop
xchg
or
pop
jae
mov
cmp
push
in
js
mov
xchg
cmp
loopne
cmp
movsb
dec
movl
sbbl
xor
push
loope
and
shrl
stc
fstpl
inc
push
insb
jmp
fists
pop
or
push
fimuls
inc
cmp
mov
lret
xorl
shll
loopne
jmp
dec
push
out
lahf
xchg
addl
pop
sub
hlt
daa
mov
fiadds
dec
xchg
cmp
xrelease
mov
mov
mov
insb
clc
in
stc
addl
out
push
repnz
fwait
jb
insb
inc
push
xchg
inc
add
and
ret
adc
sub
mov
adc
std
data16
mov
cmpsl
pop
cmp
pop
mov
cmp
clc
test
pop
inc
sbb
jp
std
or
push
imul
push
nop
add
mov
xor
xchg
test
mov
sahf
push
in
rcll
pop
xchg
arpl
xchg
mov
xchg
mov
dec
repnz
std
repnz
scas
dec
out
out
mov
add
mov
cmpsb
cmp
pop
insb
imul
mov
pop
lds
out
fwait
hlt
xchg
mov
mov
je
scas
ret
jno
mov
addr16
xchg
inc
int3
dec
aaa
ret
aaa
jge
dec
adc
fs
mov
rorb
xor
push
ja
call
out
mov
inc
aam
mov
mov
add
mov
std
fadds
jge
arpl
and
iret
pop
dec
flds
dec
push
add
js
cltd
ror
xor
sbb
mov
inc
push
jg
inc
fwait
ss
jno
shl
sub
sub
or
mov
fidivrs
add
mov
add
je
popa
dec
push
cmp
incl
adc
xchg
jmp
mov
clc
int3
sbb
mov
insb
sahf
icebp
mov
cwtl
mov
out
pop
sub
xor
sub
sbb
jmp
shlb
imul
jo
rol
sub
imul
push
inc
mov
sub
xlat
call
stc
push
fldt
out
add
repz
sbb
shrl
push
sub
lea
cmc
xchg
fisubrl
xor
jge
out
fdivrl
subl
adc
bound
lods
ljmp
xchg
xchg
pop
js
test
pop
call
fldt
fcoml
cli
sahf
lea
lret
jle
mov
aam
pop
mov
xchg
mov
movsb
adc
insl
into
or
sbb
mov
iret
push
jle
out
lods
das
xor
inc
jne
pop
jno
fsubs
add
in
pextrw
ja
mov
insb
pusha
mov
repnz
data16
gs
out
test
adc
repz
adc
or
in
push
divb
cld
testl
iret
cmc
cmp
fwait
shrb
sbb
jmp
and
mov
popf
xchg
dec
shrb
inc
iret
aaa
dec
mov
mov
aas
fwait
jae
movsb
nop
lock
mov
ja
mov
lods
mov
out
cltd
addr16
xchg
mov
inc
push
lds
out
popf
xor
xor
adc
aaa
lea
cli
adc
insb
pop
push
ljmp
push
mov
jo
mov
cmpsb
cld
and
out
loope
jmp
jle
test
lahf
pop
push
adc
adc
inc
scas
sbb
ss
pusha
das
cmp
push
mov
or
test
js
enter
mov
cmpb
ret
pop
mov
popf
push
adc
xchg
inc
inc
mov
mov
leave
pop
cmp
scas
push
cmp
fwait
add
mov
pop
jmp
ret
ljmp
xlat
and
mov
je
jmp
cmp
dec
mov
stos
rcll
adc
xchg
lea
pop
scas
lahf
jmp
out
mov
or
aad
pusha
or
inc
add
mov
inc
movsl
fsubrl
cmp
and
pop
or
adc
rcll
inc
ficomps
cmp
shll
jo
inc
dec
jo
jg
rcrl
and
mov
aam
into
sub
jno
jbe
adc
push
mov
ret
cmp
mov
insl
mov
js
out
dec
mul
subl
cmp
sbb
mov
mov
subl
mov
mov
mov
inc
jo
fldt
test
int3
clc
xor
shrb
ror
push
inc
dec
adc
add
xor
jae
push
dec
add
cmp
mov
inc
lret
jo
fnstsw
cmpsl
gs
das
int
dec
adc
sahf
push
lock
out
std
and
pop
sub
mov
aam
inc
je
dec
aam
adc
jns
jo
sub
mov
adc
add
xor
fstl
xlat
sub
dec
sbb
xchg
ja
and
or
lahf
rcrb
mov
movsbl
add
outsl
jno
xchg
addr16
lock
mov
jnp
aas
insl
mov
mov
xchg
test
sbb
push
cmp
daa
gs
or
fs
sub
jp
clc
pop
sbb
pop
mov
pop
aad
loop
hlt
or
ja
addb
loop
repz
mov
sbb
daa
pop
xchg
xchg
mov
jmp
flds
popf
aas
loope
adc
out
push
ret
mov
test
mov
push
xchg
lahf
mov
or
scas
dec
out
mov
adc
repnz
adc
xor
loope
sub
push
mov
test
ja
mov
lods
je
shll
jl
idivb
ljmp
pop
mov
imul
lret
xchg
movsb
mov
mov
dec
jb
out
arpl
jp
les
mov
test
in
sbb
pop
aaa
cmp
loopne
dec
push
pop
stos
inc
movsl
cmp
xlat
clc
pop
add
xor
jmp
jne
mov
ds
out
cmc
sub
fdivrs
fcoml
inc
push
cmovge
mov
xlat
mull
pop
push
cwtl
data16
and
popf
push
inc
pop
pop
mov
popa
cld
xlat
jo
mov
icebp
nop
enter
dec
lock
sbb
or
inc
xchg
add
mov
push
sub
loop
daa
xchg
stos
pushf
fnstenv
jmp
lds
test
jae
jge
jl
test
daa
andb
gs
mov
js
je
pop
or
or
add
dec
adc
inc
fsubr
sbb
test
pop
dec
push
inc
adc
cld
sbb
inc
shrb
enter
inc
xchg
test
jbe
jns
test
add
test
fs
jns
xchg
out
scas
pop
lret
sbb
aam
sub
adc
add
test
clc
and
sub
jno
pop
orl
cmp
je
andb
sti
repz
jmp
imul
cli
inc
push
std
cmp
xchg
lcall
push
divl
mov
sub
mov
pushf
sbb
cmpsl
mov
repz
sbb
mov
aas
push
sub
in
cmpsl
es
jne
test
cmpsl
and
or
bound
aaa
xchg
jae
or
hlt
incl
leave
test
loopne
out
iret
call
movsl
xchg
cmpsl
xor
lods
aam
xchg
clc
adc
jmp
arpl
xorl
jb
adc
mov
sub
add
sbb
addb
mov
loop
movsl
mov
mov
nop
dec
pop
mov
xor
pop
pop
mov
jmp
jp
push
call
cltd
mov
fs
movsb
adc
jmp
adc
adc
push
jmp
mov
insb
pop
mov
rcrl
push
lds
sbb
xor
pop
lret
jl
cmp
mov
daa
mov
mov
mov
cmp
addl
int
iret
mov
inc
icebp
xchg
pop
test
shll
and
or
gs
push
cmc
std
xlat
lahf
adc
inc
arpl
cmpsb
data16
add
aaa
scas
in
add
add
xlat
sub
mov
jns
jne
call
test
sbb
ss
loop
nop
call
xor
lahf
test
inc
adc
xlat
adc
mov
xchg
or
cmp
push
mov
mov
insb
das
xor
cld
xor
cld
xchg
sub
push
mov
push
lds
adc
hlt
push
mov
jg
neg
pop
stos
push
lea
dec
sbb
addr16
lds
loope
in
hlt
mov
outsl
jmp
jne
jl
insb
push
sbb
mull
lahf
jp
ds
push
mov
enter
xor
out
cmc
or
lcall
lods
sub
or
dec
je
lea
int3
leave
out
lods
mov
dec
cld
mov
inc
pop
adc
movsb
shl
jne
je
cmp
lods
pop
dec
adcb
adc
clc
mov
fs
rorl
addw
in
xor
or
bound
push
xor
push
cmp
mov
mov
int3
sub
mov
mov
lods
popf
and
ja
nop
fstl
mov
inc
jmp
sbb
push
xchg
cmp
sub
sarb
fbstp
jg
ja
movsl
jg
in
jge
notl
int
push
pop
mov
cmp
test
movsl
jp,pn
cmp
xchg
and
adc
cmp
shll
stos
mov
imul
aad
rcr
movsl
andb
pop
add
sbb
push
pop
lock
and
pop
lods
add
cmp
push
mov
pop
dec
push
sbb
test
and
js
jg
pop
xchg
add
aad
xorb
cmp
nop
cmpsb
adc
fbld
sub
xchg
ret
inc
mov
inc
xchg
dec
and
insl
inc
xchg
xor
std
std
subl
ja
sub
mov
adc
inc
dec
pushf
xor
sbb
arpl
adc
mov
sbb
mov
jecxz
pop
cmc
pusha
mov
push
rolb
mov
lock
jb
jne
adc
out
or
aas
mov
loop
stos
ret
pop
js
hlt
mov
cli
repz
push
ret
cmp
inc
stos
adc
out
jl
outsl
iret
and
inc
mull
mov
int
in
test
lods
pop
cs
adc
ja
pop
dec
or
push
inc
cld
mov
xchg
sub
mov
dec
loopne
or
mov
popa
imul
xchg
scas
xchg
mov
test
and
sub
dec
adc
out
in
enter
fcmovnbe
fiadds
mov
sub
add
xor
push
enter
sbb
out
popf
fisttpl
xor
cmp
mov
jge
pop
pop
movsl
leave
pop
xor
sbb
adc
inc
or
lods
enter
push
jnp
cs
in
push
pop
cmpb
mov
mov
pop
in
addr16
mov
imul
inc
fwait
jns
scas
lcall
fistpl
out
popa
mov
sub
sbbb
cmpsl
jo
xor
mov
lods
sub
mov
xorb
xchg
push
mov
mov
aas
dec
mov
out
sub
mov
aas
or
stc
inc
mov
dec
imul
cs
add
pushf
jno
mov
decb
push
xorb
popa
push
push
and
rorb
ds
pop
xlat
loope
mov
cmp
mov
mov
ja
lds
dec
inc
into
cli
fld
lock
xor
xorb
push
push
jae
ss
ror
sub
loop
cli
aaa
enter
adc
pushf
push
subl
arpl
xchg
fisubrs
cmp
xor
ljmp
imul
xchg
push
nop
test
or
mov
lock
jle
mov
or
fwait
pop
xchg
data16
fistps
inc
cwtl
mov
into
or
cs
mov
push
or
mov
sbb
or
test
lahf
push
insl
ret
js
mov
jnp
jae
dec
sbb
test
sub
mov
cmp
mov
les
adc
jp
lods
out
push
cli
mov
lods
dec
or
in
push
orl
xchg
pop
push
xchg
xlat
cmc
jbe
aas
mov
adc
dec
jle
test
mov
cmp
out
push
movsb
in
in
ds
out
aaa
into
sub
ds
lret
jae
cmp
mov
in
dec
mov
dec
mov
dec
stos
xor
adc
test
insb
or
jp
mov
xorl
cmp
lds
add
xor
decb
nop
mov
sbb
insl
inc
fwait
cli
sub
and
xor
mov
adc
pop
inc
xor
sbb
icebp
lret
in
mov
xchg
jp
jne
sbb
pop
pop
ss
pop
mov
lock
adc
jns
fstpt
mov
xor
cltd
push
cmp
cmpsb
int
cld
dec
xchg
cmpsb
insb
jmp
cmp
imul
iret
xor
inc
rclb
and
fcmovb
adc
ja
lret
pop
xor
jle
cld
add
xchg
test
les
rolb
jmp
xlat
leave
mov
stos
xchg
loopne
addr16
dec
stc
cmpsl
scas
push
mov
into
and
ljmp
jno
je
push
mov
pop
add
mov
mov
xchg
mov
push
mov
adc
out
xor
fldenv
xor
loope
es
lock
cmp
inc
fsubrs
sub
mov
dec
xchg
sahf
lods
inc
mov
jnp
push
xor
and
add
mov
repnz
loopne
popf
mov
loop
imul
push
cmp
xchg
incl
sbb
imul
pop
mov
popa
es
jecxz
cld
push
sub
fwait
out
repnz
outsb
shlb
packsswb
sbb
loop
fdivrl
push
rolb
jns
lret
out
cmpsb
inc
mov
dec
or
cmp
orb
lcall
adc
test
shlb
sti
xor
dec
cmp
test
and
les
scas
pop
adc
rcl
jns
push
dec
jg
cld
push
push
imul
add
lcall
or
cmc
testb
stos
bound
les
sbb
iret
fsubrl
inc
divl
clc
mov
cmp
xor
mov
inc
xlat
lahf
add
call
jbe
pop
sbb
orl
and
jecxz
xchg
ficoms
pop
and
fdivp
mov
xchg
aad
leave
jle
dec
or
pop
pop
lea
and
inc
shl
xchg
jl
fnsave
jmp
scas
test
xor
fnstenv
lods
pop
stos
xchg
fildl
jg
lods
jmp
push
mov
add
rorb
test
test
cmpsb
xor
cmp
cmpsl
shlb
bound
jmp
jge
sub
cmp
pop
test
mov
out
add
xor
cmpsl
popa
push
mov
inc
jl
pop
push
and
xchg
loop
xchg
dec
icebp
cmp
insb
mov
pop
lds
and
ficompl
dec
enter
add
jl
inc
xor
stos
push
inc
fimuls
rorb
subl
jp
enter
mov
imul
out
fiaddl
mov
hlt
loop
bound
sbb
push
movsb
cmp
fbstp
out
into
inc
stc
sub
ss
add
fdivs
into
call
cmc
xor
loope
xchg
js
jmp
mov
inc
shlb
fs
dec
adc
mov
daa
out
or
pop
jnp
std
pop
ja
xchg
mov
jno
pop
push
ja
arpl
popa
and
jne
xchg
mov
mov
pop
jp
sub
icebp
out
or
movsl
in
fadds
fsts
cmp
faddl
mov
add
shrl
push
into
or
mov
add
mov
lahf
or
inc
stc
ja
popa
and
nop
sbb
mov
arpl
rcll
repnz
mov
scas
dec
lods
add
imul
sub
cmp
scas
mov
lods
jo
jmp
pop
jmp
flds
inc
in
ljmp
imull
sbb
mov
xlat
cmp
iret
jns
lods
xchg
add
jle
jle
lret
jle
add
loope
movl
divb
dec
lret
cmp
jp
insl
pop
insb
fsubs
sbb
sub
in
repnz
lods
adc
in
xchg
xchg
sub
dec
cli
in
movsb
imul
inc
xchg
pop
mov
test
xchg
rolb
push
mov
dec
cs
push
fiadds
cwtl
dec
imul
mulb
inc
subl
sbb
mov
iret
push
outsl
mov
mov
dec
mov
rol
insb
movsl
jns
xchg
call
scas
ficoml
xchg
cmp
push
mov
shrl
jge
adc
cld
je
sbb
ja
push
dec
mov
shrb
inc
in
inc
mov
fidivl
cmpsl
push
lock
sub
fcomps
jecxz
call
loop
sbb
cmp
mov
cltd
jmp
adcl
incb
push
ss
and
aaa
stos
jmp
add
xor
inc
xor
dec
stos
dec
aas
icebp
test
jmp
in
sbb
sar
pop
btr
les
dec
gs
pop
xor
mov
leave
fs
jl
out
xchg
mov
jmp
sbb
dec
cmpsb
mov
fwait
les
test
in
into
test
cmpsb
sub
push
and
out
and
add
cld
loope
push
mov
mov
push
cmp
negb
in
xchg
sbb
out
mov
cltd
sub
lret
repz
dec
inc
ljmp
adc
xchg
aas
jno
dec
add
aas
lods
inc
sbb
into
mov
push
subb
mov
xor
add
or
loope
push
into
insb
cmp
mov
xor
push
inc
popa
or
jp
pop
mov
sub
pop
mov
inc
push
fnstsw
and
nop
mov
addl
jg
add
loopne
cmp
scas
bound
mov
pop
lcall
sub
mov
insl
insb
jne
cmpsb
jb
sahf
stos
loope
sbb
inc
or
pushf
jp
imul
dec
jns
mov
ljmp
adc
xchg
bound
pop
out
addr16
mov
aam
mov
inc
or
fcomps
rorb
cmp
push
movsl
push
test
lcall
xor
incl
int
fimuls
mov
loopne
lock
mov
push
aam
lods
popf
hlt
push
mov
loop
mov
mov
cltd
dec
xchg
xchg
mov
add
or
and
jns
inc
sbb
cmpsb
sub
add
mov
fstpl
loop
adc
icebp
mov
sbb
test
fcomps
cmp
pop
push
popa
inc
lods
mov
enter
jle
clc
cmp
lods
cmp
mov
lahf
cmp
in
mov
mov
out
jp
ror
dec
push
add
test
mov
imul
push
loop
xor
add
iret
inc
cmp
adc
fsub
imul
push
sbb
shlb
xchg
sbb
mov
fnclex
mov
in
pop
into
jmp
sub
aad
jnp
push
das
sahf
inc
ds
dec
cmp
xor
dec
sbb
xchg
loope
xor
test
lods
mov
jle
fiaddl
push
leave
push
data16
and
pop
ret
push
cli
out
xchg
and
mov
sarb
scas
leave
in
cs
imul
inc
and
popa
in
push
add
jmp
fdivrs
mov
add
lret
sbb
aad
loopne
hlt
sub
push
fsub
mov
sbb
cmp
pop
outsl
mov
ret
arpl
popa
enter
sbb
inc
fsts
loop
in
mov
mov
mov
sahf
sub
lea
cs
push
cmc
adc
sub
in
leave
fstpt
cmpsb
nop
ficompl
mov
push
bound
imul
mov
shrl
sub
dec
dec
imul
add
mov
repnz
lods
adc
mov
or
sub
mov
fcmovb
mov
push
inc
and
jne
lret
cmp
divb
stos
pop
add
incl
enter
push
cld
push
imul
dec
rol
mov
js
dec
jmp
or
icebp
sbb
pop
lcall
shl
sbb
xchg
arpl
add
push
mov
lahf
add
xchg
jle
scas
mov
jno
shl
filds
sahf
push
fwait
enter
int3
push
cmp
push
sub
loope
adc
lret
mov
sbb
xor
data16
jns
xor
push
pop
jnp
dec
iret
mov
scas
rorb
push
in
aam
popf
cmp
aad
xor
ret
xchg
xchg
or
lods
fdivrp
dec
jl
sbb
mov
popa
outsb
js
into
test
or
mull
inc
xchg
filds
pop
push
inc
pop
hlt
imul
jns
movl
fucom
out
fisubl
push
lds
mov
in
push
cli
jg
jb
call
es
xchg
add
std
dec
popf
mov
mov
fnstsw
push
int
xlat
add
mov
fwait
loopne
add
out
nop
sbb
sub
jnp
mov
jns
mov
dec
fisubrs
inc
sub
icebp
jge
mov
xor
mulb
push
lahf
in
je
sbb
aaa
push
mov
mov
or
in
dec
std
inc
sbb
jo
xchg
and
jge
or
sub
lds
and
mov
fbld
int
mov
jne
sahf
mov
in
push
mov
lea
in
sub
inc
aaa
insl
mov
movb
xor
gs
mov
lds
clc
out
mov
sub
out
inc
lahf
jp
ret
enter
lock
add
inc
sbb
lods
xchg
das
pop
test
imul
push
mov
xchg
sbb
xor
jmp
repnz
adc
jno
es
mov
jbe
data16
mov
in
cs
subl
test
push
jmp
fs
xchg
sahf
jbe
mov
dec
iret
sub
addb
dec
sub
leave
xchg
fidivrs
repnz
stos
iret
lret
mov
pop
cld
pop
jbe
push
lods
idivb
sbb
stc
js
dec
lret
add
mov
dec
mov
sub
pop
pop
dec
icebp
xor
pop
xor
adc
std
push
cwtl
in
adc
and
jnp
rorb
out
inc
add
js
in
outsb
and
xor
fmuls
pop
add
adc
std
push
push
lcall
inc
aad
test
sti
arpl
sub
mov
sub
sbb
cld
arpl
pop
and
fisubrs
inc
mov
data16
add
pop
lods
adc
popa
cmp
push
and
shrl
pop
or
in
push
sbb
add
pop
hlt
in
xchg
adc
mov
dec
lods
add
call
push
in
insb
fcoms
stos
or
aam
rcrl
insb
ljmp
sbb
sbb
int3
iret
sub
divl
or
out
jl
inc
cs
jo
das
daa
sub
jnp
lret
pop
adc
pop
mov
sub
iret
movl
jbe
or
sahf
dec
adc
jbe
adc
dec
cmpsb
test
in
test
out
jmp
sbb
dec
rcrb
push
mov
iret
in
std
and
push
pop
push
add
inc
mov
popf
jb
aam
ds
stc
cmp
add
movsl
dec
filds
imul
mov
popf
cltd
lods
sub
ds
xchg
mov
je
test
stos
push
mull
xchg
fwait
leave
mov
movsl
in
insb
pop
adcl
cmp
cmpb
inc
scas
ds
lea
jmp
adc
and
inc
icebp
lds
xchg
fsubl
or
inc
cmpl
js
insl
and
cmp
loopne
fs
jmp
jmp
mov
jmp
stos
push
outsb
ja
sbb
xchg
sub
jnp
shlb
inc
mov
push
xor
aam
mov
xchg
mov
std
int
ja
mov
gs
jl
ret
js
shl
nop
pop
pop
clc
mov
xchg
lahf
cli
xor
sub
iret
add
mov
mov
icebp
rclb
pop
adc
mov
and
xor
sbb
push
lods
data16
insb
arpl
jns
xor
fisubs
insb
and
loope
imul
or
test
scas
mov
xor
jno
mov
cmpsb
and
mov
movsl
lret
lea
jbe
sbb
sub
mov
push
pop
inc
out
scas
sub
push
aaa
adc
jns
jmp
lods
inc
xchg
leave
loope
test
add
adc
pusha
mov
js
mov
jle
out
mov
or
add
inc
jmp
mov
push
dec
jge
movsb
push
mov
push
outsl
scas
xlat
leave
push
bound
jecxz
sbb
dec
push
mov
pop
mov
dec
mov
or
dec
mov
xchg
stos
bound
cmc
stos
xchg
jno
in
jmp
fstpt
test
rcrb
repnz
jge
mov
add
icebp
and
lret
dec
sub
sti
mov
xlat
icebp
xor
fcomp
mov
test
sbb
daa
push
xchg
je
push
cmpsb
mov
cwtl
cwtl
insl
outsb
sbb
xor
xor
and
push
ret
cmp
das
mov
pushf
into
aaa
sub
xorb
mov
cmp
shl
loope
push
and
mov
sub
popa
mov
pop
imul
or
lds
push
shlb
test
add
scas
aaa
les
adc
pusha
pop
dec
xchg
daa
ss
rep
lahf
enter
ja
packuswb
xor
jp
pushf
psubusw
pop
cmp
jg
cmp
movq
lret
push
fstpt
sub
in
pop
jecxz
mov
shl
jbe
out
inc
cmpl
loope
pop
sbb
push
test
ds
xchg
xchg
rorl
sbb
orl
push
int3
cwtl
add
popf
xchg
lods
cmpsb
jmp
and
cmpsb
dec
xchg
ljmp
jnp
arpl
or
fdivrs
jo
sahf
fistpll
push
lds
mov
sub
rorl
rorb
enter
mov
pop
arpl
cmc
lcall
mov
inc
inc
mov
dec
dec
and
imul
enter
push
inc
sti
and
cmp
mov
inc
sub
sbb
mov
mov
or
clc
jno
cltd
lcall
xchg
out
jl
pop
ss
lods
and
int3
jge
addr16
or
mov
fbstp
jns
notb
lcall
clc
push
cmpsl
test
cmp
sub
movsl
mov
xchg
xchg
dec
add
cmc
xchg
or
push
andb
fisttpll
xor
shrb
adc
cli
stos
inc
and
cld
or
sub
mov
cwtl
jae
mov
orl
ja
sub
push
xor
push
rcrb
aam
jge
mov
lret
scas
mov
lds
rclb
out
or
sarl
fldt
into
ds
lea
sbb
test
push
ret
pushf
sbb
cmp
push
mov
cmc
cmpsb
mov
jle
adcb
inc
sub
pop
mov
and
pop
and
lds
ljmp
mov
rcrl
leave
sub
mov
lea
xchg
cmp
movsl
cli
or
xlat
pop
jle
in
testb
pop
cmp
inc
cmp
int
dec
sub
sbb
cltd
cpuid
add
out
test
mov
mov
mov
sbb
push
xor
inc
sub
dec
mov
mov
jne
gs
jnp
fsubl
sahf
in
sub
pop
std
int3
cmpsb
push
pop
mov
lcall
jo
in
inc
scas
rcl
sub
cmpsb
sbb
push
out
mov
cmp
mov
js
sub
in
mov
or
xor
fstpl
mov
lds
mov
stos
je
roll
leave
and
xchg
fs
arpl
mov
cmp
cltd
repnz
inc
cmp
lea
dec
lds
mov
mov
push
faddp
adc
mov
in
dec
mov
fcompl
mov
dec
xchg
rorl
sbb
jae
inc
jge
into
and
sbb
push
je
dec
xchg
mov
push
into
inc
mov
insb
xchg
fwait
jl
sarb
dec
jne
xchg
sub
xor
lods
pop
insb
lahf
mov
into
test
mov
bound
xor
xor
inc
mov
push
insb
in
sub
mov
sbb
pop
dec
mov
test
ljmp
addr16
jmp
xorb
cmpsl
sub
jp
mov
ret
cld
dec
pop
xchg
movsb
and
iret
and
aad
lock
cwtl
leave
jmp
fdivrs
add
xor
ret
jp
mov
aam
popf
add
test
cmp
push
xor
mov
inc
cmp
sarb
xchg
sbb
jb
dec
into
fnstsw
jbe
xchg
loopne
inc
xor
pushf
mov
adc
repnz
cmp
out
pushf
cmpsl
xor
add
aad
mov
enter
int3
rcr
jae
adc
push
pusha
iret
push
or
cmp
xchg
cmpsl
jae
loopne
or
mov
cmpsl
push
sub
add
loopne
jle
jmp
popf
fs
jne
ror
add
lcall
pop
negb
repnz
out
mov
ret
in
sahf
dec
mov
insb
sub
cld
inc
cmp
dec
call
dec
clc
test
push
push
mov
pop
push
adc
or
leave
push
pop
sbb
lods
jns
jle
rcrl
xor
xchg
mov
jmp
aad
inc
in
dec
inc
fs
push
adc
sti
push
pushf
adcl
popa
punpckhdq
push
mul
push
ret
adc
and
lcall
in
jne
adc
inc
jle
iret
jmp
or
jl
lds
in
in
shll
push
addr16
shrb
out
jns
shr
dec
push
lcall
add
outsl
dec
dec
arpl
insl
ljmp
xor
pop
adc
jmp
sub
js
subl
leave
sub
les
test
fbstp
sbb
mov
inc
lahf
inc
aad
jno
jecxz
daa
sbb
and
addr16
in
dec
fisttpl
mov
call
adc
xchg
addb
mov
outsb
stos
addr16
fstpt
dec
mov
lods
inc
test
ds
pop
or
dec
aas
popa
movsl
mov
cmp
jp
sbb
sbb
pop
in
or
ljmp
push
and
or
cmpsl
push
pop
and
jo
push
inc
out
test
shll
jecxz
out
pop
push
xor
ret
sahf
mov
dec
in
iret
adc
dec
xchg
nopl
cmp
mov
sub
pop
xchg
xor
and
pusha
pop
adc
sbb
movsl
push
enter
fldt
adc
fsubrs
test
repz
test
mov
std
sub
inc
or
cmp
into
in
pusha
mov
push
mov
jg
push
push
jmp
std
xor
sub
jg
aaa
test
lahf
ret
rcll
cmp
out
jp
mov
call
pop
and
outsb
inc
and
jle
cli
cmp
shlb
in
sbb
mov
mov
inc
xchg
add
mov
or
lods
call
xor
sbb
mov
int3
adc
and
outsb
jno
je
cmpsl
or
mov
jae
pop
in
cmp
lcall
push
jo
data16
icebp
loop
sbb
xor
loopne
xor
or
call
push
mov
cmpsl
xchg
mov
into
sbb
repz
adc
loope
xchg
add
cmc
xor
xor
xchg
push
shlb
iret
jp
push
scas
push
ret
pop
pop
call
lret
mov
jl
aas
fcoms
add
lret
dec
lds
push
cld
ljmp
xor
icebp
push
add
xchg
cli
mov
sbb
insb
stos
cmp
fnop
scas
push
lods
lea
les
sbb
scas
sub
xor
or
adc
sub
jno
aad
pushf
stos
outsl
out
pushf
divb
jb
sbb
and
or
sub
nop
sbb
mov
xchg
loopnew
fs
lcall
andb
scas
daa
add
in
arpl
mov
ss
inc
out
xor
mov
cmp
ljmp
out
sub
aas
les
cmp
negb
loope
aas
les
scas
xor
scas
pmulhw
in
sbb
addr16
js
add
bound
pusha
pop
mov
xchg
sub
push
mov
add
je
xchg
imul
jg
addl
fsubl
push
cmp
test
fwait
sbb
or
jo
xchg
daa
mov
out
andl
and
mov
push
sbb
sti
or
sbb
test
js
orb
aad
cmpsb
call
push
data16
loop
cmp
or
cmp
loopne
test
aas
lret
stos
dec
test
xchg
fsubr
and
aad
in
fwait
xor
je
mov
push
jle
inc
jge
notb
add
rclb
mov
sub
mov
jecxz
xor
cmp
adc
shrb
clc
pop
insb
add
call
popa
arpl
cmp
add
loop
int3
sbb
ds
mov
xchg
addb
or
stc
jecxz
mulb
jmp
pop
sbb
test
push
adc
sbb
jne
lock
aaa
jmp
mov
stos
movsl
cmp
iret
cs
jbe
sub
cmp
daa
xor
sahf
hlt
cwtl
repz
pop
jnp
jno
lret
nop
xchg
pop
icebp
cmp
mov
and
lret
stos
cmp
shll
lods
fwait
sub
push
xor
test
sbb
adc
ljmp
jb
outsl
divb
jge
inc
aad
xchg
and
jae
inc
cmpl
cmp
or
data16
pop
jb
aaa
mov
popf
mov
ret
dec
cmp
roll
mov
mov
cwtl
cmc
xor
mov
pop
pusha
ja
jb
repz
shlb
fistpll
out
push
mov
dec
push
std
je
adc
xchg
jbe
scas
call
stos
lea
cltd
push
push
inc
or
jge
sar
int
scas
fsubp
mov
push
inc
xchg
pop
shll
push
rorl
mov
sub
jbe
pop
add
sub
add
mov
out
in
and
jae
mov
movsb
je
jo
adc
push
repnz
add
dec
int
mov
into
movsl
in
push
push
cld
xchg
adc
add
pop
push
les
imul
add
jb
jge
test
imul
mov
insl
sub
mov
xchg
daa
push
scas
es
pusha
popf
ljmp
inc
cmp
imul
pop
push
movsl
or
in
sti
incb
insb
xor
and
insl
and
jecxz
ja
cmpsb
add
xchg
pop
pop
repnz
lea
iret
pop
jno
test
inc
loopne
sub
int3
out
loopne
pop
jge
loop
movsb
xchg
and
mov
jp
and
add
pop
les
test
or
push
popf
adc
je
and
das
mull
cmp
pop
xor
repz
jnp
shll
daa
clc
push
in
popa
mov
lea
in
fbstp
icebp
idivl
pop
out
rcrl
fdivs
xchg
lahf
fdivl
pop
mov
cmp
push
in
fwait
jecxz,pn
cmp
and
dec
aad
push
mov
fs
call
ret
cld
in
cmpsl
sysenter
pop
sarb
repz
aaa
and
popf
frstor
bound
or
adc
addr16
cmp
sbb
mov
call
xchg
inc
jae
adcl
fimull
out
movsl
bswap
or
mov
das
lea
and
aaa
adc
mov
popa
and
inc
dec
ficoml
push
lahf
in
aaa
dec
das
inc
outsb
xor
repz
sti
inc
xor
in
clc
ljmp
fsubrp
push
es
jae
nop
jo
push
std
xchg
push
sbb
or
mov
daa
sbb
jmp
das
nop
test
xchg
jno
pop
or
mov
jo
in
insl
mov
dec
push
sbb
fiadds
dec
gs
xor
aam
cmpsl
or
mov
push
adc
mov
inc
cmp
dec
cmp
adc
add
out
out
movsb
jecxz
push
test
stc
lock
adc
fdivs
ljmp
pop
fwait
inc
stos
mul
repnz
dec
sbb
jbe
test
in
stc
fbld
inc
pop
lret
movsb
mov
in
test
in
pop
mov
cli
psubd
in
dec
sub
pop
int
mov
dec
ja
lock
xchg
dec
sub
mov
popl
sub
fwait
cmpb
in
mov
jle
shlb
imul
and
mov
sub
xor
loope
cli
lea
cmp
int3
ljmp
mov
and
mov
stos
mov
sbb
mov
jg
jg
ss
jp
xor
lock
out
adc
sbb
jns
jmp
jle
cmpsb
pop
pop
jns
lret
mov
push
cmpsb
and
or
fsubrp
fwait
scas
and
ffree
push
fmul
sbb
lret
mov
jo
pop
add
cmp
das
fcmovbe
adc
outsl
mov
mov
pop
jp
clc
rcrb
aad
jl
xor
std
push
dec
xor
rclb
cmpsl
add
adc
jg
test
stos
cs
push
mov
dec
mov
dec
pop
fnstcw
ljmp
out
sti
jg
cmpb
push
call
ss
xor
pop
lcall
xor
mov
jns
lret
jecxz
add
notb
push
rcl
push
xchg
mov
mov
enter
cltd
fbstp
enter
mov
xor
xlat
stc
xor
inc
inc
mov
jne
mov
test
and
movsb
cwtl
adc
mov
paddb
jb
loop
push
outsb
jg
outsl
jo
fistps
fdivrs
push
xchg
add
test
je
in
xchg
enter
scas
xchg
test
das
movsb
insb
movb
inc
notb
lock
leave
inc
into
and
lret
mov
or
adc
clc
lods
es
or
mov
mov
adc
mov
fwait
ljmp
addr16
js
or
imul
mov
xor
sub
out
lock
xor
jl
stos
and
inc
fmull
jecxz
mov
in
ret
mov
sbb
push
inc
addr16
pop
cmp
mov
movsb
fdivl
lds
cmp
fisttpll
or
ficoms
stc
pop
divb
mov
shlb
scas
loopne
add
mov
jecxz
add
cmp
and
fs
adc
lds
jbe
ret
scas
insb
xchg
cmp
fimuls
push
repz
in
ja
jl,pn
or
loope
out
and
hlt
pop
jbe
xchg
mov
mov
inc
ficoml
cwtl
jp
xchg
out
mov
fldl
test
es
xor
int
sbb
dec
dec
into
orl
sub
inc
pop
icebp
leave
mov
jl
loope
in
xor
adc
loop
ror
ja
call
inc
les
stos
fcoml
cld
or
dec
dec
outsb
aas
cmp
and
loop
lods
inc
mov
imul
aaa
in
outsl
push
insl
and
sub
lahf
lds
enter
jle
dec
xchg
test
popa
test
mov
ds
rclb
and
pop
xchg
scas
ret
out
out
jo
jecxz
dec
in
cmp
ja
push
iret
or
cmp
rclb
mov
add
stc
aas
dec
xor
pop
mov
push
jnp
es
mov
push
mov
out
jo
rcrl
idivl
nop
repz
cmp
and
mov
mov
push
xchg
rcrl
cwtd
and
push
cmp
pusha
push
out
cmp
pusha
repz
loop
mov
lds
scas
out
mov
lock
and
xor
mov
pop
cmp
mov
ds
bound
or
sbb
popf
ror
sub
mov
cmp
ret
aaa
nop
cmp
scas
or
pop
dec
loopne
jecxz
clc
xchg
rorb
cmpsb
xchg
xlat
outsb
in
ret
mov
clc
lods
mov
xor
adc
in
xor
jae
test
sbb
cmp
cmpsl
aad
mov
cmc
leave
cmc
cmp
pop
into
add
and
mov
in
imul
out
test
aas
and
fmulp
scas
lea
loope
sub
mov
ds
out
lods
push
aam
xlat
fisttpl
test
jp
mov
mov
cmp
insl
js
cltd
std
fmull
vunpckhps
sbb
jl
pslld
mov
adc
ret
mov
aas
cmp
fs
test
or
inc
fistl
adc
out
jmp
xchg
xchg
mov
mov
xor
fldt
lahf
xchg
mov
test
js
jge
dec
cwtl
into
vmulss
or
add
cmp
adc
jnp
xlat
lea
es
mov
pop
sub
pop
cmp
push
pop
adc
cmp
ja
pop
or
fcomip
insl
daa
jnp
xor
dec
adc
cmp
dec
divb
out
cmp
or
mov
cs
test
sub
inc
rorl
imul
cs
push
mov
pop
shrb
bound
sub
mull
data16
inc
mov
fwait
jmp
inc
leave
out
andb
js
pop
mov
cmpsb
gs
push
cli
adc
aas
mov
ret
mov
cli
jno
inc
adc
push
pop
pop
pop
jle
mov
clc
push
mov
dec
popf
daa
stos
and
int3
mov
cmp
lods
pop
enter
jns
out
inc
js
out
mov
pusha
add
sti
cwtl
cmp
cmp
xor
adc
popl
lock
data16
movsl
add
push
subb
mov
adc
sbb
dec
stos
fisubrs
mov
mov
aam
and
ficompl
mov
insl
movsl
mov
pop
addr16
push
cld
filds
xchg
outsl
das
imulb
das
stos
and
movsb
in
subb
ret
std
arpl
cmp
jno
sub
ja
icebp
mov
fldenv
adc
push
fistps
jno
dec
mov
mov
sbb
daa
ficomps
inc
scas
add
mov
mov
jl
int
popf
lahf
ljmp
in
mov
mov
lds
push
test
addr16
sbb
bound
mov
movsb
loop
inc
cmpsl
jns
dec
sub
outsb
int
sub
imul
pop
jnp
add
and
mov
push
aam
leave
sub
mov
les
ss
or
punpckhdq
stc
ret
rclb
cmp
adc
fmulp
arpl
and
lahf
scas
dec
aam
jg
or
cs
mov
push
aas
fcoml
mov
mov
lea
lods
jl
in
sbb
aam
fisttpl
pop
sbb
xor
mov
fwait
or
sub
pavgb
aaa
insb
sbb
sub
xchg
bound
cmp
lret
clc
cmp
jo
negl
and
and
add
shll
es
loope
stos
movsl
xchg
nop
mov
hlt
mov
fcompl
cmp
js
cltd
mov
cltd
pop
or
insl
adc
fwait
mov
inc
enter
fstpl
icebp
shr
or
or
and
lret
ret
dec
lcall
push
inc
pop
mov
hlt
pushf
or
ret
lret
inc
adc
jno
repnz
adc
lret
int
repz
add
cld
adc
leave
mov
mov
in
inc
outsl
insl
add
shr
mov
das
push
dec
mov
inc
push
xchg
jecxz
outsb
js
and
pop
gs
mov
cmc
xlat
adc
pop
inc
xchg
aas
andb
xchg
mov
mov
cwtl
and
xor
cmpsb
or
sub
mov
mov
mov
inc
cmp
or
aas
lods
loopne
aad
jl
dec
dec
jbe
and
pop
inc
xchg
js
test
sbb
xor
push
pop
aaa
fistl
scas
inc
pop
or
lods
mov
sbb
in
das
fcmovu
cmp
scas
out
es
or
push
jnp
push
call
mov
repz
push
mov
add
stc
dec
pop
inc
rolb
in
aad
nop
cld
and
test
rcr
inc
cld
adc
cmp
adc
cld
push
and
clc
cmp
fisubrl
xlat
pusha
add
add
pop
xor
insb
cmpsl
mov
adc
jbe
and
add
dec
shl
cltd
mov
outsb
in
fldl
pop
arpl
mov
cltd
cltd
sub
pop
ret
arpl
mov
les
inc
fs
or
pop
xchg
mov
or
sarl
outsb
push
mov
aaa
loopne
jecxz
mov
scas
movsb
push
dec
dec
sti
and
outsl
cmp
mov
jg
xor
jl
arpl
bound
ss
cmp
mov
lea
mov
mov
cltd
sbb
sbb
cltd
or
sub
shr
aaa
dec
jbe
inc
in
imul
cld
push
push
cmp
outsb
xor
push
inc
mov
outsb
mov
inc
mov
sti
sbb
fldt
xchg
cmp
push
mov
mov
jg
push
jns
insl
adcb
dec
fcmovu
xchg
loopne
rorb
retw
out
dec
and
xor
mov
dec
testb
dec
shr
pop
test
and
and
sub
fwait
xchg
xchg
inc
inc
and
xchg
xor
lock
rorl
ffreep
pop
cmp
mov
enter
and
test
mov
and
cs
mov
sub
cmp
and
mov
and
xchg
mov
jns
fucom
in
sbb
nop
mov
dec
mov
sbb
mov
inc
adc
cld
or
cs
out
ss
arpl
call
sbb
loope
xchg
test
mov
mov
pop
mov
data16
sar
mov
cmp
movl
adc
into
and
aam
movsb
xchg
cltd
scas
lret
cmpsl
call
push
pop
jno
outsl
push
xchg
ja
adc
fildl
aam
mov
add
ds
cld
add
pop
jp
cltd
push
mov
push
cmp
mov
jl
push
cmp
inc
ss
ja
imul
test
xchg
or
jb
mov
xchg
out
add
cmp
push
or
cli
js
lret
sarl
mov
repz
mov
pop
fistps
xlat
andl
xchg
pop
mov
push
imul
hlt
add
inc
xor
lea
cmp
iret
cmpsl
test
jb
mov
sub
add
lods
mov
lods
adc
sub
mov
lock
arpl
sti
xchg
leave
mov
mov
aam
outsl
or
jl
inc
and
fmuls
imul
jge
aaa
fstl
push
mov
popa
sbb
and
lds
mov
je
adc
fsubrl
push
pop
adc
aad
data16
mov
mov
popa
loope
fs
loopne
mov
stos
pop
jnp
cmpsb
popa
sti
nop
mov
cli
pop
xchg
pop
gs
hlt
xor
loopne
popa
xchg
xorl
lods
int3
or
cmp
int3
xchg
fisttps
push
or
xor
dec
nop
dec
stos
mov
in
lea
pop
jl
in
ret
or
and
fcomip
je
mov
jbe
movsl
cmpsl
or
pop
pushf
mov
lods
decl
pop
fs
push
shlb
pop
cld
mov
mov
jo
pop
fnstenv
hlt
outsl
xchg
jge
test
scas
lret
mov
in
xlat
cmp
mov
dec
imul
imul
xor
mov
inc
out
jnp
jno
xor
hlt
xor
push
popf
outsl
in
jcxz
xchg
mov
bound
insl
jmp
pop
mov
outsl
pop
pop
mov
jae
fucomi
arpl
pusha
push
scas
shlb
xchg
sbb
aad
das
adc
pop
push
pop
ljmp
out
jecxz
nop
ret
mov
adc
les
inc
mov
ja
fnstsw
enter
shrb
mov
jo
dec
in
inc
leave
loopne
js
or
gs
adc
pop
push
sbb
out
dec
scas
inc
pop
lds
jg
and
mov
mov
xchg
sub
inc
mov
movsb
popf
lahf
or
lods
out
cli
sub
add
sbb
shrl
add
dec
xchg
mov
call
xchg
xchg
cli
sbb
push
je
aas
inc
mov
xor
jecxz
adc
mov
ljmp
or
push
inc
sub
sbb
movsl
fimuls
xor
inc
clc
mov
mov
sub
jle
xchg
into
mov
je
movsl
int3
out
mov
push
inc
mov
inc
mov
repnz
aas
or
stos
loop
add
jb
xor
sub
or
sub
rcrl
outsb
mov
popa
jae
jb
cmp
scas
repz
jmp
xchg
pop
jmp
ret
ss
mov
ja
int3
hlt
jb
push
xchg
out
jge
cmp
std
xchg
fnsave
jae
ret
mov
std
fdivl
cmp
fbstp
leave
shll
cmp
pop
jge
mov
std
stc
add
xchg
sub
or
mov
jo
jnp
adc
arpl
movsl
test
jnp
and
adc
xchg
mov
insl
movsl
pop
pop
lcall
int
sub
aaa
imul
jbe
mov
cltd
mov
sub
icebp
or
outsb
mov
xchg
push
stos
call
push
xchg
cmp
pop
in
add
rcrl
jnp
pop
not
sub
mov
mov
ret
xor
inc
ret
scas
inc
les
out
mov
adc
js
add
push
hlt
lcall
sub
jne
push
loope
cwtl
ss
icebp
and
jg
fnstsw
dec
mov
mov
pop
inc
mov
and
xchg
ss
sub
cmpsb
xchg
push
mov
inc
adc
pop
repz
xchg
out
xor
cmp
add
aad
cmovs
dec
cwtl
aas
repnz
in
stos
out
aaa
fstpt
pop
shll
test
pop
jb
pop
and
rolb
sbb
adc
sar
or
lea
cwtl
addr16
rorl
lret
adc
lahf
xchg
lret
mov
adc
add
test
jecxz
cmpsl
fnstsw
fwait
or
lods
and
cltd
mov
jb
mov
out
xor
je
jnp
dec
and
pop
push
add
push
push
cmpsl
push
jecxz
clc
push
push
enter
xchg
lods
pop
imull
bnd
mov
xchg
ret
jns
push
cmp
pop
mov
xchg
sub
jp
sar
and
and
sbb
or
jne
loopne
mov
xlat
cmp
jb
nop
and
push
scas
pop
or
clc
loope
ss
pop
cmpsl
lods
dec
in
aas
and
cmp
mov
pop
aad
shll
orl
cld
lock
subb
daa
push
loop
mov
sqrtps
fidivl
test
les
scas
adc
add
or
fdivr
mov
inc
ret
cmp
out
inc
push
aam
jecxz
cltd
mov
or
testl
jb
outsb
pusha
clc
cmp
cwtl
das
sub
jnp
and
cmpsb
sub
popf
scas
in
mov
xlat
sbb
or
jns
inc
adc
sub
ljmpw
jne
adc
addr16
clc
pop
fisttpl
adc
lods
jne
inc
lds
movsb
jl
cli
por
movsl
insl
loope
je
scas
cmp
shl
test
ret
imulb
stc
fstpt
repz
lods
cmp
xchg
insl
lret
fidivrs
add
push
scas
lcall
orb
xor
inc
imul
xchg
and
xor
adc
jmp
std
jns
inc
push
push
xlat
sbb
stc
dec
add
std
sbb
cmpsb
push
test
int
mov
fyl2xp1
jae
cltd
xor
and
xchg
mov
xchg
ss
ljmp
scas
add
test
scas
shrb
mov
cmp
add
rclb
ret
or
lds
sbb
adc
cmp
cmp
xchg
fstl
data16
sbb
mov
outsl
mov
dec
ljmp
arpl
in
cmp
add
jge
xor
adc
mov
ja
cld
sub
dec
idivl
push
mov
nop
nop
xchg
xchg
push
and
add
cmp
dec
iret
lds
mov
scas
mov
mov
inc
mov
jne
paddb
and
jl
push
lods
call
cmp
inc
push
cwtl
lock
int3
xchg
cmp
mov
cli
and
xor
leave
cmp
sbb
test
inc
xchg
sub
mov
fadds
and
in
fcmovnu
int
loope
out
sbb
icebp
imul
mov
insl
pop
add
in
daa
mov
pop
adc
test
dec
sub
int3
xor
push
adc
pusha
xchg
test
jecxz
popf
cltd
xor
int3
gs
pop
repz
cld
sbb
ja
sarl
fnsave
aam
xchg
or
jns
dec
ljmp
push
loopne
fwait
ljmp
es
jbe
movsb
sbb
daa
xor
dec
cltd
popf
mov
xor
and
mov
hlt
adc
push
sti
sti
icebp
xor
das
lret
aam
bound
push
xor
rolb
adc
aas
movsl
pop
or
pusha
dec
sti
aad
mov
push
daa
jmp
mov
ret
adc
sub
negl
xchg
mov
fstpt
push
lock
mov
cltd
add
adc
sti
mov
mov
mov
shl
inc
shll
and
out
icebp
rorb
cltd
pop
mov
popf
cmp
sti
dec
je
sbb
fwait
cmpsl
repz
and
daa
or
into
fisubrs
xor
clc
dec
pop
mov
outsb
js
out
mov
inc
mov
xor
push
clc
dec
sub
test
jne
fsubs
cmc
sub
movsb
xchg
xlat
pop
lea
je
inc
popl
enter
je
insl
and
mov
jns
movsl
mov
repnz
cmpsb
push
add
stc
dec
or
cs
inc
push
int3
jg
jp
xor
adc
xchg
mull
dec
inc
lcall
dec
mov
lahf
cli
outsl
cmc
ret
and
jne
pop
cmpsl
pusha
addr16
mov
dec
add
in
add
insl
bound
into
jne
xchg
std
rorl
xor
int
add
movsb
daa
mov
jns
mov
inc
sbb
push
shrb
pop
add
jae
and
mov
out
ds
push
jle
data16
mov
cs
jns
xorl
mov
in
push
dec
and
pushf
lret
or
lds
into
inc
push
dec
cmp
jp
out
xor
cmp
inc
dec
push
adc
sbb
gs
sub
js
and
fstpl
mov
inc
daa
pop
and
ljmp
dec
cmc
sub
rorb
shl
ljmp
xor
xchg
pushf
add
push
push
fisubrl
push
xchg
stos
mov
dec
jp
mov
fwait
addr16
dec
mov
ficomps
or
push
sub
jne
shlb
xor
cmp
call
mov
inc
cmp
lea
pusha
and
scas
cmc
push
in
test
outsl
lcall
push
jb
mov
pusha
cmp
cmp
loopne
addb
mov
mov
sbb
or
out
mov
les
fistpll
xchg
adc
and
repz
mov
adc
push
inc
lahf
adc
das
lahf
lods
dec
stc
test
add
sti
adc
dec
mov
sub
sarb
cmp
sub
mov
and
out
mov
xchg
shll
orl
push
xchg
outsb
fwait
in
lea
arpl
xchg
mov
fs
movsb
outsb
mov
mov
fisubrs
cwtl
cmc
nop
iret
jecxz
jno
pop
sbb
fcoms
fdivr
mov
jg
jg
push
sub
andb
xor
mov
adc
xor
or
or
xchg
leave
fiaddl
lret
mov
cli
rcll
clc
or
vpaddw
jl
aam
push
mov
movsb
nop
in
int3
xor
add
shl
adc
xchg
jmp
and
push
jg
test
ret
aaa
or
sbb
jge
mov
ds
scas
ds
inc
lret
hlt
pop
ficompl
inc
ja
psrlq
xchg
pusha
cmp
pop
lea
push
push
add
xor
pop
push
mov
cmp
pop
out
stc
pop
mov
adc
mov
js,pt
pop
frstor
outsl
sbb
out
into
pop
inc
repz
mov
jbe
in
test
push
movb
lahf
adc
fcmovnb
flds
das
cwtl
mov
xor
add
jp
ds
xor
pop
adc
ljmp
xchg
testl
or
fists
aas
stc
jecxz
rolb
add
loop
pop
out
ds
dec
sbbb
iret
cmp
push
pop
mov
std
scas
add
addr16
push
pop
mov
and
das
xorb
rclb
inc
or
push
jae
or
or
test
mov
pop
lods
inc
insb
outsl
jo
mov
jno
and
cmc
shlb
loopne
push
jno
popf
xor
dec
jnp
aam
andl
mov
leave
aam
sbb
jno
cmp
cmp
lds
stos
test
mov
mov
mov
adc
in
mov
or
sbb
mov
jp
int
iret
jecxz
mov
fidivrl
cmp
inc
in
jge
xchg
mov
sbb
pop
xor
or
sub
je
cmp
out
cld
sbb
xchg
out
aas
jb
popa
enter
lods
inc
sti
dec
jnp
pushl
pop
inc
daa
rcl
icebp
imul
ret
jbe
sti
je
out
jle
ret
in
dec
jbe
loope
lods
subl
lods
jge
movsl
push
mov
out
mov
outsb
movsl
test
in
push
jns
or
movsl
inc
pop
xchg
push
adc
cmp
jb
or
call
mov
mov
fs
int3
rorl
mov
cmpsb
out
cld
xchg
stos
jb
cmc
cmp
lock
xchg
push
bound
cs
xor
ljmp
ss
push
jb
nop
fstpt
sbb
into
divl
mov
mov
lock
roll
rorb
jle
mov
dec
rcrb
addb
data16
out
lret
ljmp
shlb
mov
jno
sub
inc
xchg
cmp
sbb
jno
les
sbb
push
sbb
jle
adc
gs
dec
cmp
cli
and
popf
pop
jp
dec
pmaxsw
fadd
inc
movsb
mov
jne
dec
inc
pop
cmpb
cs
es
xchg
pop
scas
mov
in
xchg
dec
push
or
xor
mov
aad
loop
lds
push
je
pop
pop
movsl
mov
fadds
adc
andl
rcr
mov
imul
xchg
add
mov
into
pop
fcoml
imul
shld
or
shl
imul
sub
inc
mov
sahf
inc
xor
lret
cld
push
paddb
ss
pop
es
xchg
pushf
in
outsl
dec
pushf
adc
cmp
cmp
je
enter
fistl
hlt
pop
mov
jp
xor
jge
lret
andps
push
daa
xor
mov
cmp
push
clc
cmpsl
cmpsb
ret
dec
cmp
aam
jo
pop
sbb
out
adc
mov
xor
ret
outsb
popa
clc
mov
in
mov
and
xchg
xchg
xchg
or
push
dec
mov
jno
in
mov
cmpsl
inc
enter
out
push
adc
pop
test
sahf
adc
push
loopne
popa
mov
cmpsb
mov
jge
addr16
cmp
sbbb
punpcklwd
sti
jecxz
dec
pop
cmpsl
andb
pop
adc
int3
jp
in
sbb
cmp
xor
adc
sub
cwtl
fcmovb
push
fidivs
mov
mov
xlat
daa
test
pop
stc
cwtl
addr16
in
jp
mov
mov
mov
pop
xchg
lds
mov
xchg
je
daa
xor
int
push
or
sar
fs
fists
sub
leave
outsb
jmp
and
scas
aas
arpl
and
addr16
test
sub
sub
xor
sub
jl
mov
dec
mov
std
bound
sub
ret
stc
and
rcl
and
out
out
and
loope
fbstp
pop
adc
fcmovnu
adc
xor
jnp
aam
adc
jo
pop
push
pop
push
rorl
int
mov
das
pushf
add
fbld
push
loope
imul
pop
push
mov
and
mov
daa
das
add
xorb
es
lods
xchg
jns
cmp
adc
jo
fs
hlt
push
stos
mov
and
popf
cmp
xor
mov
mov
outsb
out
jg
sbbb
cwtl
loopne
dec
pop
in
xor
outsl
sub
pop
iret
cmp
into
jae
cmp
push
pop
movsl
fwait
scas
subb
mov
mov
jp
xchg
shl
jle
adc
popa
push
mov
movsb
movsl
dec
out
mov
in
subl
pop
inc
lcall
test
iret
adc
add
loop
xchg
jbe
sti
pop
mov
xlat
jmp
jo
mov
jecxz
add
fld
mov
bound
mov
add
jne
xchg
push
cmp
mov
rcl
out
xchg
jo
mov
repz
rolb
push
je
cmp
pop
and
cld
dec
bound
sbb
dec
sub
adc
xchg
in
xor
dec
jle
jne
sbb
shll
xchg
shll
les
pop
mov
inc
mov
mov
inc
xor
loope
jmp
fldt
mov
sbb
ret
pop
out
dec
sbb
push
rorb
pop
mov
fistl
out
mov
push
cmp
sub
movsl
aam
lret
popa
jle
mov
sub
jp
xor
les
and
jp
jbe
fsubrl
sbb
sub
xor
sarb
dec
xchg
xchg
mov
mov
fdivs
sbb
jae
test
cltd
call
push
mov
aaa
lock
mov
fidivl
inc
jecxz
jecxz
mov
ds
in
mov
lcall
std
cmp
mov
mov
mov
sbb
mov
int3
xchg
sbb
fldl
mov
dec
and
pop
call
pushf
mov
movsb
add
dec
dec
sub
adc
jo
repz
ds
and
and
mov
xor
andb
daa
addb
cld
add
inc
call
into
push
aad
insb
in
imul
popa
ljmp
test
fs
loope
jae
mov
loop
mov
xor
outsl
jnp
pop
sahf
push
mov
fcmovu
xchg
xorb
mov
movsb
and
mov
cwtl
push
push
sbb
addr16
in
lods
adc
mov
add
mov
xchg
mov
jns
out
cmpb
jge
pop
mov
lock
pop
push
mov
ja
aas
inc
push
imul
jbe
inc
cmc
mov
jmp
ret
mov
mov
repz
pop
inc
test
mov
xchg
xchg
in
mov
lods
push
xor
mov
xor
shll
jge
int
jge
sahf
mov
rcr
inc
stos
mov
add
pop
and
stc
fisubrl
test
mov
call
test
or
enter
and
adc
imul
sub
into
push
adc
clc
faddl
jo
fwait
addr16
dec
and
rcr
pop
test
int
outsl
lock
scas
rorb
mov
rol
or
jmp
inc
sbb
stc
popl
stos
loop
mov
cmpsb
add
test
out
push
push
jp
jno
andb
hlt
jbe
inc
xchg
hlt
xor
les
fabs
jle
cwtl
fwait
xlat
mov
xchg
and
cwtl
test
adc
fidivl
mov
mov
push
mov
inc
icebp
lret
pushf
cmp
ljmp
jl
adc
and
sub
loope
pop
cwtl
fstps
sbb
xchg
ljmp
cli
mov
xchg
add
lret
and
inc
scas
mov
lahf
inc
popa
pushf
xor
inc
and
add
mov
or
pop
sbb
and
sub
or
cmpsl
push
add
pushf
lods
clc
data16
comiss
jmp
mov
insl
cmp
lods
push
insl
push
leave
and
shrb
mov
mov
lds
stc
mov
xor
cmpsb
jmp
sbb
sbb
jne
fldcw
in
sbb
out
sbb
jmp
aaa
sub
inc
cmpsl
and
adc
sub
dec
fisttpll
outsb
rorb
inc
push
xor
dec
and
fbstp
inc
mov
mov
repnz
cmpl
adc
ja
daa
in
and
gs
lret
dec
lret
dec
out
push
mov
es
stos
push
cmp
aas
mov
push
repz
imul
lcall
xor
mov
sub
adcl
scas
movsb
xor
in
inc
sbb
stos
mov
faddl
sub
jmp
fsts
insl
mov
dec
pop
add
daa
pusha
xchg
xor
add
xor
sbb
cmpsl
jle
mov
mov
cmp
shl
shll
xor
out
mov
cmpsb
mov
cmp
cmp
push
push
dec
pop
jo
jge
loopne
adc
outsl
idivl
mov
adc
stos
and
lcall
shlb
popf
add
fistpll
xchg
xchg
out
arpl
sti
push
jecxz
mov
call
cli
sbb
addr16
imul
push
fcomps
jg
in
pop
mov
addr16
xor
push
jbe
repz
mov
xchg
jg
sub
aad
push
inc
pop
adcl
std
int
pmaxub
inc
mov
mov
push
and
rcl
daa
or
lcall
fdivs
fwait
adc
dec
nop
add
mov
xchg
dec
test
sbb
xor
sub
cmp
cwtl
cltd
push
xor
sub
outsl
sarb
push
cmp
xchg
int3
mov
enter
pop
push
fsub
movb
shll
movsb
daa
stos
mov
ret
mov
std
ret
mov
or
out
jle
shlb
cmp
mov
repz
inc
cmpsb
orb
push
pop
jle
or
lea
repz
popl
lret
scas
dec
cmp
xchg
je
popf
dec
iret
bound
jp
es
int
scas
test
xor
mov
jns
outsb
sub
leave
pop
cmp
in
sbb
push
sub
dec
insl
nop
or
imul
cld
push
mov
in
ss
xchg
xor
out
adc
dec
push
adc
cld
or
add
push
js
js
or
mov
and
cli
outsl
mov
ss
add
cmp
mov
ja
je
addl
mov
lods
into
sahf
imul
and
jmp
dec
jge
and
insl
outsb
addr16
sbb
pop
sahf
dec
push
test
inc
icebp
mov
push
push
mov
cmpsl
dec
xchg
sarl
push
push
xor
cld
daa
sahf
add
scas
in
dec
lcall
dec
xor
and
xor
mov
cmp
add
add
stos
add
push
mov
add
stc
sbb
das
es
pop
in
jo
jge
mov
stc
test
in
aad
adc
aas
adc
shll
jle
dec
inc
popa
out
jns
cmpsl
insb
or
xchg
push
insl
nop
mov
xor
sar
mov
or
popa
inc
jo
dec
lcall
shl
cmp
xor
es
mov
outsb
fistps
test
gs
mov
loope
test
pop
imul
aad
hlt
sbb
inc
hlt
ret
mov
xor
xchg
jle
jmp
or
in
int
mov
and
mov
test
mov
push
add
enter
roll
into
jge
push
mov
mov
fdivrs
out
leave
sarb
stos
lods
cmp
andl
xchg
shlb
pop
shl
xchg
jge
paddsb
lret
jmp
mov
push
push
adc
fldcw
push
pushf
add
decb
mov
sbb
iret
lahf
testl
iret
std
jo
in
fnstenv
icebp
pop
in
pop
inc
aad
lahf
pop
in
inc
mov
xor
fildl
mov
push
sbb
inc
dec
aas
xchg
movsb
dec
fidivl
in
xor
add
stos
sub
mov
mov
fsubp
jbe
cmp
jmp
mov
test
pop
xor
add
mov
cmp
and
adc
mov
cmp
clc
adc
lods
and
loope
inc
jne
repz
test
add
sub
fiaddl
out
psubusb
lahf
adcl
int
and
mov
out
push
jne
pop
je
imul
jns
cmpb
xchg
test
add
mov
scas
fsts
mov
push
pop
dec
and
fdivrl
xchg
xchg
cmpsl
mov
fcoml
out
es
sbb
adc
sti
testb
xor
xorl
jne
pop
int
mov
mov
jp
int3
sub
jg
daa
mov
dec
mov
push
loope
add
int3
inc
pusha
shl
je
loop
mov
and
jmp
push
inc
cmp
dec
xchg
push
pop
sarl
cld
dec
and
lods
mov
lcall
fildll
or
jb
enter
pop
popf
popf
rcl
mov
mov
testl
popf
xor
test
in
mov
pop
dec
and
push
cs
add
popf
xor
fwait
mov
mov
out
movl
jge
mov
push
fsts
xchg
movsb
arpl
iret
popa
ljmp
stc
and
mov
push
in
loope
and
inc
mov
dec
mov
stc
cs
cmp
or
jl
jle
fbld
ss
jecxz
sub
pop
jl
sbb
cmovno
xchg
std
sbb
or
movl
sub
je
out
cmp
and
das
sbb
sarl
add
fistps
mov
or
lds
jne
inc
lods
pop
in
jo
mov
sbb
push
out
js
sbb
shl
movsb
mov
in
pusha
in
push
mov
sbb
leave
in
sbb
mov
fdivl
add
div
mov
push
mov
test
adc
lods
xchg
pop
in
adc
jns
lods
addb
fldenv
dec
mov
sbbb
cs
and
adc
fistpl
das
dec
imul
pop
rcrl
xor
imul
mov
cmp
inc
ja
pop
sub
inc
mov
inc
pop
sub
or
mov
push
cli
sti
xor
cmp
adc
xchg
and
mov
out
loop
adc
add
and
pop
sub
add
cld
lea
imul
in
push
lods
mov
jecxz
and
cli
cmpsl
and
xor
pop
cltd
aas
jnp
leave
dec
insl
scas
xchg
mov
jne
int
insl
ss
jno
dec
mov
shrb
xchg
out
xchg
lock
jnp
adc
outsb
push
cmp
aad
push
popa
test
shll
fldcw
loope
mov
jle
jle
sub
add
xlat
jbe
and
fmuls
ss
dec
dec
sub
movsb
movsb
dec
dec
repz
mov
fwait
sub
xchg
shlb
fisttpll
loop
testb
fldl
mov
in
ret
call
out
jge
popa
lea
testb
icebp
rolb
jnp
cmc
sahf
lods
mov
movsb
icebp
orl
push
pop
fisubrl
stos
ficompl
orl
inc
jo
push
fimull
dec
iret
iret
mov
aam
add
jl
mov
getsec
pop
stos
arpl
adc
add
mov
mov
out
adc
fsubl
ret
or
stc
pop
ficompl
sub
xchg
rol
cmc
lret
in
jb
adc
ror
dec
test
ja
jp
loop
xchg
loopne
pop
into
jg
xchg
and
adc
jae
push
lret
mulb
lock
stos
cmpsb
pop
sbb
add
adc
jno
xor
or
je
mov
mov
shll
push
imul
addb
push
push
mov
inc
cmp
lods
sub
fcomip
or
sub
inc
out
mov
push
inc
inc
adc
std
xor
lahf
mov
adc
dec
jbe
inc
mov
stos
jnp
out
and
push
sbb
addr16
in
lock
inc
dec
fisubs
xor
and
cmp
sbb
sub
push
jmp
push
sub
aam
pop
loope
push
xor
pop
ror
push
or
and
sbb
cmp
jmp
xchg
add
jmp
icebp
add
aam
lea
cmp
out
sub
or
mov
sbb
lea
ret
xchg
scas
shl
mov
rolb
in
fisttpl
mov
xor
data16
push
cmp
nop
out
cltd
jno
adc
jmp
mov
push
mov
imul
fisubrl
sbbb
scas
or
shr
lret
dec
push
mov
or
je
push
mov
sbb
out
xor
xchg
loopne
lock
fcom
mov
es
leave
and
sti
pop
out
mov
xor
je
and
pop
ret
push
sbb
out
mov
sbb
ffreep
jns
fisubl
sub
sbb
xchg
or
test
mov
es
lods
mov
sti
cmp
call
test
xchg
and
data16
test
adc
scas
and
es
jo
xchg
test
packuswb
sub
ss
fisttps
mov
cmp
xor
jmp
pop
xlat
adcb
mov
push
test
enter
push
fwait
pop
inc
xchg
push
xchg
test
add
pop
cmp
test
mov
cmp
jle
cli
mov
pushf
insb
inc
and
in
pop
mov
in
sub
incl
scas
xor
pop
not
test
dec
test
js
jge
in
std
push
pop
adcl
stos
push
fcmovnb
div
negb
insl
and
orl
dec
or
add
bound
loope
pop
mov
test
lods
sbb
das
cmpsb
add
movsl
dec
lret
jmpw
mov
gs
or
aaa
and
dec
jl
insb
fs
or
jp
jmp
mov
or
inc
push
mov
fcomip
insl
adc
jle
testb
stc
ds
arpl
ja
ljmp
test
pop
mov
xor
in
movl
mov
scas
inc
cmp
into
or
cld
in
test
xchg
arpl
jp
mov
sti
sbb
adc
das
and
or
subb
arpl
loopne
mov
rcrl
data16
xor
fwait
jp
divl
jne
mov
sub
mov
inc
dec
filds
cltd
in
sub
movsb
das
imul
cwtl
and
jecxz
imul
lret
rolb
pop
jle
mov
sub
xchg
sub
sub
imul
mov
sbb
ffree
lods
out
jle
mov
stos
cld
addb
test
mov
nop
int
adc
jle
ja
dec
pop
jae
xchg
imul
push
cmc
lock
push
outsl
stos
jge
push
jecxz
test
repnz
popa
testl
loope
push
fwait
stos
adc
mov
or
mov
aad
mov
dec
mov
sub
push
xor
fld
jl
pushf
inc
rorb
in
push
xchg
fidivl
jmp
fisttpl
cmp
push
add
into
inc
add
dec
daa
mov
xchg
inc
mov
movsl
or
xchg
mov
shrb
mov
fcmovnb
xchg
inc
and
gs
push
fwait
sahf
pop
sub
add
xchg
ret
mov
pop
or
jbe
fildl
add
push
lods
dec
mov
clc
test
push
ret
mov
cs
notb
mov
push
aad
mov
out
outsl
mov
push
dec
mov
rcrl
stos
inc
push
and
insb
sub
jbe
adc
cmp
ja
jge
icebp
dec
or
rcr
push
mov
lods
push
mov
pop
mov
adc
outsl
mov
aaa
inc
cli
mov
push
in
adc
jns
test
pusha
adc
pop
push
cmp
lock
loopne
rcr
roll
xchg
loope
inc
cmp
pop
rcrb
pushf
inc
test
ja
gs
loopne
test
mov
cmp
add
mov
aas
mov
scas
sahf
rcll
test
mov
xchg
cmp
cli
insb
pop
or
cmpsl
pusha
cmp
inc
jbe
push
inc
lret
cmp
push
enter
shl
leave
ds
je
int3
jge
shll
push
aam
inc
std
aad
mov
pusha
or
loopne
popf
adc
orl
mov
jle
jg
push
fisubs
pop
inc
mov
sbb
and
cmpl
into
inc
js
push
cwtl
jmp
add
lahf
or
mov
ret
sub
fsubs
or
adc
jns
lods
and
pushf
dec
or
sub
rcr
test
pusha
xchg
notb
mov
jmp
pop
arpl
mov
and
and
push
jb
out
mov
out
in
pushf
xor
adc
es
sbb
lret
mov
imul
xchg
adc
clc
aam
mov
mov
sub
fildl
in
in
pop
mov
gs
addr16
mov
ljmp
scas
cmp
jecxz
popf
into
jbe
ss
lock
sbb
ja
jo
cs
xchg
jns
push
repnz
pop
push
popa
xor
xchg
push
divl
pop
dec
test
orl
xor
add
jo
jnp
je
cs
xor
jle
lock
ret
cltd
stos
test
and
push
pop
out
pusha
mov
popa
outsl
inc
inc
stos
pop
mov
ja
dec
push
popf
pop
dec
pushf
lahf
test
adc
lcall
ret
repnz
add
sbb
bound
dec
bound
loope
or
push
mov
and
xor
fs
adc
adc
into
push
sub
inc
in
push
lods
push
sbb
pop
in
in
inc
fwait
pop
mov
icebp
lea
repz
std
imul
inc
inc
movsl
push
add
gs
lahf
mov
xchg
dec
mov
pop
xchg
inc
or
fxch
add
nop
mov
int3
cmpsb
mov
das
xor
jne
in
jns
sbb
xchg
test
xchg
and
mov
push
mov
and
pop
pop
push
push
jmp
lea
sub
das
in
mov
js
dec
sbb
test
or
dec
test
stos
stos
jno
jmp
call
mov
cmp
inc
pop
mov
leave
imul
xorl
xchg
daa
mov
movswl
dec
out
in
mov
into
fwait
inc
jmp
divl
aaa
add
mov
pop
jne
jmp
subb
pop
aaa
or
dec
addr16
xor
dec
xor
push
mov
scas
iret
xor
in
mov
cmp
sub
mov
bound
pop
or
add
mov
xchg
pop
xchg
sarl
cmpsl
mov
jp
leave
jne
mov
xor
jp
xchg
out
rcrl
call
and
pop
mov
xor
mov
fisubl
mov
mov
push
movsb
data16
adc
hlt
dec
testb
popa
pop
into
push
movsb
sub
fmuls
dec
pop
and
in
int3
sbb
cmp
pushf
es
cmpsb
aam
dec
xchg
pop
int3
in
dec
pop
test
add
fs
lret
pushl
mov
inc
imul
add
enter
loopne
popf
xor
mov
mov
xor
inc
in
push
jge
fdivr
data16
addr16
push
divb
mov
mov
int
jl
dec
scas
push
repz
sub
cltd
lea
push
and
xchg
xchg
lea
xor
xchg
notl
sbb
fists
cmpsl
mov
xchg
int
mov
or
sub
add
in
lea
mov
out
adc
mov
pop
lock
jg,pt
dec
pop
idivb
and
pop
enter
and
pop
js
das
jno
scas
inc
hlt
mov
lcall
popf
xor
ret
pop
dec
call
repz
sbb
outsb
js
mov
pop
scas
sub
and
cmp
lret
mov
jb
dec
mov
xor
sub
addr16
xchg
sub
push
cmp
subl
cmp
lahf
les
xchg
mov
fistl
pop
daa
rclb
xchg
mov
test
test
setg
push
push
cmp
fwait
mov
daa
out
nop
jl
mov
out
or
scas
rolb
into
push
je
pop
inc
push
jecxz
add
stos
push
cld
rcr
jb
add
test
cmpsb
push
popf
lea
dec
inc
or
fildl
movsb
js
ds
scas
xorb
loopne
pop
pop
lret
fwait
pop
xlat
mov
dec
xchg
mov
cmpsb
in
push
lea
lock
ret
mov
imul
pop
mov
loop
xchg
int
dec
mov
pop
shlb
mov
and
jbe
test
mov
adc
fnstsw
or
or
cmpsl
cmp
push
cmp
pop
js
sub
push
shll
ret
jl
addb
cltd
insb
je
mov
cmp
jno
push
xor
or
ret
pop
mov
adc
add
scas
or
or
stos
mov
inc
das
cmp
lds
xor
dec
insb
mov
fsubs
scas
adc
out
repz
clc
sbb
and
jecxz
dec
mov
or
xor
mov
fnsave
sbb
cmp
mov
jnp
aad
lods
cmpsb
jecxz
gs
cs
adc
or
xlat
jne
idiv
jne
cmpsb
ficoms
fstpt
mov
push
and
rcl
cld
mov
push
les
ret
stos
sbb
xor
test
or
mov
loope
jp
sahf
fisttps
imul
std
scas
xor
or
cmp
sbb
jne
push
shlb
test
xlat
jne
mul
or
mov
jnp
fidivrs
in
cltd
cld
sbb
loopne
inc
orl
aad
shl
sub
push
aad
sbb
mov
insb
mov
pop
or
sbb
push
pop
sub
out
xor
add
sbb
es
lcall
push
mov
movsl
xchg
inc
sub
hlt
imul
ja
ss
mov
fcmovu
pop
cs
aas
pushf
pop
cmovbe
pop
mov
sub
inc
jno
ljmp
dec
mov
cltd
movsl
adc
loopne
adc
lret
jmp
ficoml
xchg
dec
mov
inc
jle
ss
xorl
je
adc
fidivrl
pushf
push
jae
push
stos
mov
cmc
dec
in
cmc
nop
and
sbb
rep
mov
mov
dec
dec
xchg
stc
xchg
mov
es
xor
inc
lcall
scas
mov
cli
fsubs
sbb
cmpsb
scas
and
arpl
sub
push
mov
mov
jb
pop
mov
pop
mov
or
sbb
pop
pop
mov
pusha
sahf
fnstsw
loope
cwtl
jecxz
mov
dec
stos
sbb
push
jb
addb
sub
or
pop
jp
push
mov
cmp
push
dec
inc
pop
xchg
shlb
or
jae
pop
push
add
out
fwait
pop
mov
lret
mov
fbstp
fmull
mov
std
ja
test
or
cmp
or
cmc
inc
mov
aad
loopne
ja
mov
cltd
repz
iret
mov
aas
call
aaa
clc
add
test
clc
inc
aaa
std
push
hlt
xchg
lea
aad
push
mov
pop
xchg
mov
xchg
and
mov
mov
inc
xor
xchg
sbb
push
lock
dec
jg
mov
mov
int3
sub
jae
addb
mov
push
enter
stos
ret
push
and
mov
es
sub
push
js
jne
cltd
xor
outsl
out
adc
jmp
incl
std
cmpl
jno
das
inc
fimull
out
in
jae
xor
sub
mov
fs
in
shrb
in
mov
addb
jg
incl
movsb
and
xchg
iret
sub
repz
bound
mov
cld
adc
push
pop
push
incb
enter
or
in
setb
shr
lea
aaa
cld
int3
add
js
daa
push
stos
xchg
sbb
ljmp
andb
in
ljmp
shl
insb
sub
xchg
repnz
ret
pop
jmp
hlt
test
pop
sbb
idivl
xchg
in
cmpsb
add
jecxz
jge
xchg
push
xchg
loopne
push
sub
dec
aad
insl
fsubs
out
mov
sbb
lahf
shll
mov
les
call
les
add
lahf
sti
sbb
xor
cmpsb
mov
aad
jb
js
fcmove
adc
and
dec
outsb
pop
arpl
shrd
cmc
jmp
aad
enter
cmp
xor
xor
idivb
lds
adc
pop
mov
lahf
xor
cmp
cltd
ret
jae
movsb
sub
mov
mov
inc
pop
cli
cmpsb
aas
mov
scas
sbb
fstl
out
mov
int
xor
pop
sub
sbb
clc
jno
daa
adc
mov
push
test
inc
mov
insb
idivb
fistpl
rcr
movsl
int3
push
notb
lds
mov
xchg
mov
in
jp
sub
mov
fwait
dec
out
xchg
sarb
xchg
fildll
jno
pmaxub
mull
out
fcompl
mov
lods
aad
scas
xchg
mov
sbb
lea
jge
mov
lea
pop
adcl
jb
outsl
cmp
adc
add
out
das
sbb
and
loop
repnz
out
xor
pop
arpl
mov
push
iret
cwtl
sarl
aas
jp
out
out
and
scas
inc
mov
repnz
cmp
cmp
jg
lret
pop
dec
push
xor
or
dec
dec
inc
into
leave
add
jp
dec
cmp
lods
stc
lock
daa
jo
test
test
dec
dec
icebp
inc
into
outsb
outsl
repnz
sbb
cmc
dec
fildll
insl
scas
imul
sbbl
mov
pop
scas
out
jg
jo
xor
dec
jl
test
scas
insl
outsl
xchg
shlb
pop
jp
outsl
ret
rcr
movsb
push
xchg
or
outsb
add
popa
insb
adc
out
mov
out
out
push
mov
notl
loopne
sbb
jno
pop
mov
ds
out
icebp
push
mov
imul
mov
in
jne
lret
mov
aam
insb
and
fwait
lods
insl
mov
inc
sub
repnz
test
add
js
ja
mulb
lock
lahf
or
lahf
cmp
mov
xor
aad
xlat
pop
jmp
pop
inc
popaw
sbb
into
or
shll
sub
mov
testb
xor
mov
inc
push
repnz
add
xchg
cmpsl
and
test
insb
aas
movsl
lods
or
out
pop
push
xchg
pop
inc
std
cmovl
adc
xchg
xchg
cmp
or
push
xor
inc
in
xchg
add
lcall
repz
or
add
stos
in
jbe
idivl
xor
ss
dec
int3
mov
sti
xor
jle
lods
inc
cmp
xchg
sub
mov
leave
in
jecxz
cmp
mov
add
pop
inc
xlat
loop
push
out
mov
xchg
cmp
stos
gs
orl
cltd
jns
jmp
and
dec
sbb
xorl
mov
out
pop
dec
stc
and
aas
or
aaa
add
out
lds
mov
sbb
mov
into
adc
outsl
or
adc
imul
mov
sub
in
rcll
mov
cwtl
dec
pop
inc
add
cmc
sbb
jl
fwait
inc
or
jb
cmp
mov
lcall
ret
fwait
cld
repz
cmp
ret
jle
repnz
ret
test
stos
mov
mov
push
push
xor
adc
sub
mov
cmpsb
scas
mov
mov
hlt
xchg
shll
dec
sahf
and
stos
mov
lea
cmp
stos
loope
push
sti
xchg
push
cmp
pop
fimuls
fcoms
or
mov
les
es
sub
push
or
shlb
mov
mov
mov
clc
mov
fcompl
jne
mov
insb
jbe
cmc
fcmovu
lds
pop
lret
cs
sub
mov
cwtl
insb
cltd
cwtl
loope
sub
xchg
mov
mov
mov
fwait
sbb
jns
fwait
mov
repz
sbb
dec
or
call
fidivs
jae
stc
clc
ja
dec
jno
gs
movsb
bound
loop
fists
cltd
jge
push
push
andb
rcr
mov
or
sahf
sub
insl
ret
and
in
inc
out
aad
shr
fistps
scas
lret
pushf
into
pop
inc
out
mov
mov
arpl
xor
and
jbe
sbb
lahf
xor
or
iret
sbb
jae
jmp
call
mov
cmp
and
out
out
cmp
clc
jg
push
xchg
ret
inc
mov
mov
pop
pop
fbstp
icebp
cmpsl
testl
jnp
adc
popf
adc
mov
loop
mov
push
jns
adc
icebp
mov
sahf
icebp
jle
out
or
popa
bound
gs
mov
aas
inc
cltd
xor
sbb
or
lea
mov
ja
lds
js
push
fcoml
dec
pop
pop
dec
push
popa
dec
or
aam
jnp
loop
test
push
xor
dec
push
mov
inc
push
add
sahf
adc
xor
testl
pop
dec
jne
add
sub
lea
mov
icebp
add
imul
hlt
in
mulb
mov
sub
xchg
enter
test
inc
pop
cmp
xor
mov
rol
mov
imul
xor
xchg
hlt
nop
test
push
shlb
sbb
jne
sub
jp
jne
test
mov
mov
jge
loop
or
mov
sub
mov
sub
xchg
xor
int3
and
in
insl
inc
je
sbb
imul
cltd
lods
push
or
dec
mov
cmpl
loopne
and
fiaddl
dec
imul
hlt
mov
je
or
fbld
jge
or
divb
sbb
ljmp
xchg
inc
sbb
sbb
cmp
inc
pop
xchg
dec
xor
cmp
fsub
sbb
xor
pop
pop
sbb
push
sub
out
jno
arpl
push
mov
loope
cmp
sbb
test
aas
mov
add
ja
cmp
or
lea
jle
fisttps
adc
mov
test
repnz
add
cmc
push
sub
scas
add
cld
adcb
mov
nop
pusha
scas
je
pop
mov
jne
cs
or
dec
je
jmp
or
fdivrp
adcl
mov
adc
fidivl
decb
rcrl
clc
jne
bnd
mov
mov
jno
fistpll
lea
sub
and
cmp
add
cmc
pop
xchg
push
dec
jge
add
pop
lock
add
jae
cmp
les
jecxz
out
mov
fdivr
mov
repz
push
inc
xchg
outsb
add
dec
decb
cld
mov
pop
add
jbe
mov
lods
jb
cltd
sub
pop
xchg
sbbl
subl
xchg
movsb
loop
imul
cld
jno
jbe
mov
andl
lea
push
jae
leave
add
jmp
scas
mov
mov
test
push
incb
sbb
insl
addb
shrl
out
rorb
out
in
jnp
xor
sub
das
lods
out
inc
sub
cmpsl
mov
fdiv
adc
js
and
lahf
sbb
mov
leave
mov
out
pop
inc
lds
test
mov
dec
pushf
repz
pop
fbstp
in
lods
ljmp
lea
xchg
jae
ds
push
jmp
fistps
sahf
js
loope
jg
jno
popf
frstor
pop
xlat
cmc
andl
and
cmpsb
popl
aam
add
jle
scas
mov
mov
test
pop
loopne
insb
pop
mov
xchg
xlat
cmc
loope
aas
mov
add
xor
and
adc
sub
aaa
add
idivl
and
jns
and
xchg
inc
sub
adc
out
jne
dec
xor
repnz
sbb
cmp
mov
pop
inc
mov
push
ss
and
dec
mov
mov
xlat
xchg
sbb
ror
sbb
in
out
sbb
fcomip
add
and
test
sbb
jae
xchg
pushf
fs
enter
mov
or
mov
sbb
rcrb
mov
iret
pop
mov
xor
push
repz
scas
nop
dec
xor
int
push
sbb
xchg
cmpl
lock
nop
adc
adc
xchg
dec
pop
cmp
das
xor
leave
negb
dec
imul
sbb
cmc
mov
and
out
mov
dec
mov
xor
push
pop
mov
xchg
testl
sub
test
xchg
sub
jno
daa
cmc
les
cmc
addl
jb
fwait
rcl
bound
add
inc
sbb
in
insb
test
rcll
xchg
inc
int3
push
test
jmp
hlt
cmpsb
xor
hlt
dec
mov
iret
shl
jge
repz
adc
pop
cli
mov
shrb
sahf
in
fldcw
pop
lcall
insb
add
mov
fsub
jnp
dec
pop
frstor
fwait
rol
pop
mov
popa
mov
test
int3
aas
test
adc
sub
icebp
int3
clc
cmp
ljmp
repz
pop
aas
fwait
cmp
in
add
mov
jmp
fsubl
mov
movsb
nop
pop
arpl
and
outsl
pop
iret
stos
push
or
mov
fwait
add
push
aaa
add
cs
xor
jno
and
mov
jecxz
std
inc
pop
push
xor
repnz
sbb
testb
out
cmp
sahf
sbb
xor
mov
mov
out
push
mov
dec
or
aad
inc
xchg
cmpsb
and
adc
push
mov
lret
sbb
call
lock
and
xor
shll
push
mov
push
jno
ds
jb
aad
repnz
add
mov
imul
xchg
lret
lea
int3
enter
dec
add
pop
jp
loopne
jnp
sar
xchg
setne
cmpl
into
xchg
fnstsw
or
mov
xor
leave
cmpsb
adc
jae
lret
xor
fsubrs
fwait
repnz
and
push
je
mov
sub
jecxz
xor
xchg
add
jno
pop
dec
movl
cmp
test
or
pop
scas
push
and
daa
sbb
sub
jge
cltd
mov
jle
decl
and
jne
push
jnp
lea
mov
out
xor
adcb
push
sbb
or
aaa
insb
inc
fidivrl
sbb
out
lahf
mov
mov
xchg
negl
add
in
mov
in
xor
jle
mov
std
sub
sub
mov
stc
in
cmp
xchg
sbb
fnsave
movsb
jns
stc
dec
fcoml
rcl
ja
iret
dec
rcr
into
sub
mov
xchg
xlat
imul
into
loope
pop
in
cmp
jne
aam
fcmovu
fildl
movsb
or
jge
mov
lds
add
pop
imul
cmp
add
popf
stc
in
scas
std
imul
add
test
mov
push
mov
adc
cmp
and
adc
ss
cmp
pop
out
into
aaa
push
mov
mov
cmpsb
ret
mov
xlat
or
shrl
add
xor
mov
or
pop
in
add
insl
shll
std
loop
mov
dec
xchg
stc
inc
pop
mov
inc
or
dec
aas
and
jge
fst
outsl
xor
ficompl
mov
xor
sahf
call
arpl
mov
test
out
aad
push
test
xchg
icebp
inc
test
aas
lods
sub
int
fcmovnb
or
test
jno
ss
xchg
dec
push
cld
sti
add
dec
and
mov
test
cmpb
ret
pusha
xchg
mov
and
aad
inc
cmp
jl
mov
mov
or
inc
cltd
stos
popa
and
loopne
mov
inc
ds
jle
or
loopne
dec
pushf
fidivl
or
les
js
mov
pushf
sbbb
jge
sub
adc
jb
push
je
insb
ret
lret
lds
or
cmp
cmp
cli
vpsrld
jne
scas
sub
aaa
push
add
out
lock
and
pop
sub
outsb
inc
test
pusha
jmp
or
jle
stos
push
ret
push
in
push
into
jae
xor
xor
ret
pop
mov
xor
and
push
out
lods
call
in
pop
add
out
in
push
popf
add
repnz
loope
sti
jnp
out
bnd
ret
data16
xchg
leave
ss
sbb
jecxz
mov
cmp
jge
pop
fisubrl
xor
xchg
shl
data16
xor
pop
sbb
push
mov
lds
pop
dec
out
out
addr16
jb
cmpsl
push
dec
xorb
xlat
repnz
mov
stc
cmpsb
mov
rclb
inc
sarb
mov
inc
ret
mov
add
mov
adc
jb
nop
push
sub
adc
cmpl
fisttpl
je
adc
pop
aam
ret
adc
aad
insl
mov
and
mov
xchg
mov
fdivr
or
les
test
movsl
or
sbb
in
push
fistpll
pushf
in
popf
fmul
iret
daa
xor
dec
xor
jle
ljmp
sbb
sub
inc
int3
addr16
push
andl
cmp
mov
in
inc
push
sub
pop
add
dec
lods
pop
mov
jg
scas
push
cs
out
jo
stc
or
push
mov
repnz
ret
cmp
or
je
dec
sbb
sti
mov
adc
mov
loope
mov
push
je
in
mov
dec
test
out
sbb
lods
sbb
push
mov
jno
movsb
inc
imul
sub
ss
ret
and
cmp
adc
xor
cld
mov
jnp
jecxz
sub
and
xor
in
sbb
dec
xchg
dec
cwtl
rcr
jb
notb
shll
ds
testl
xchg
push
and
les
loopne
jl
pop
mov
jnp
lods
mov
or
jmp
dec
inc
in
in
gs
stos
sahf
and
pop
aad
jle
mov
jns
and
push
push
dec
stc
dec
sbb
sub
mov
jae
inc
jp
push
inc
push
adc
jbe
fnstenv
jp
js
lds
in
out
fs
lea
pop
jmp
loop
out
imul
insb
adcl
daa
cmp
mov
lahf
push
ss
gs
ret
test
mov
out
sbb
js
sbb
daa
mov
dec
insb
cltd
pusha
jne
xchg
rol
popf
ja
fcmovnb
mov
xchg
stc
je
je
push
adc
iret
hlt
in
sub
rcll
sub
push
jg
sub
mov
mov
mov
jp
lock
sub
out
push
pushl
adc
or
cmc
push
ret
lea
loope
xchg
pop
out
add
gs
jecxz
and
out
and
cmp
movl
or
mov
cwtl
adc
sbb
sbb
js
scas
mov
gs
pop
adc
pusha
fdivp
pusha
je
mov
mov
sbb
jb
sbb
cmc
jo
mov
int3
lock
arpl
nop
movd
ss
xlat
jbe
cwtl
in
and
sti
add
cmc
push
mov
and
std
or
inc
dec
pop
addr16
call
jl
add
cmp
xor
cmp
fs
xor
cs
es
loope
lock
push
aad
ret
cmp
ljmp
push
or
stos
int3
dec
aaa
pusha
xor
xchg
dec
xchg
mov
xchg
stos
idivl
inc
cmpsb
lret
or
pusha
sbb
pushf
mov
push
xchg
pusha
hlt
in
subb
insb
adc
or
sbb
cmpsl
in
sub
mov
mov
pushf
fstps
xor
call
test
cmp
cmp
dec
mov
aad
push
stc
dec
adc
pop
mov
scas
adc
push
int3
das
add
lret
fbld
xchg
adc
loopne
stos
iret
and
scas
jg
pop
test
es
lock
mov
jle
mov
xor
push
mov
pop
mov
xchg
and
lcall
aaa
dec
mov
dec
loope
scas
lret
push
and
fnstsw
mov
xor
aas
push
fs
or
xlat
sbb
adc
push
or
xor
cs
mov
xor
lds
xorb
inc
andb
mov
sbb
test
ss
add
xchg
mov
ja
xchg
or
pushf
push
fiaddl
xor
pop
adc
call
adc
psubb
ljmp
cli
add
ja
ret
or
sub
iret
push
dec
ljmp
xchg
mov
call
movsb
imul
insb
pop
cltd
mov
stos
out
add
test
nop
repz
mov
inc
out
push
mov
cmp
sbb
addb
push
test
lret
jns
mov
xor
sub
je
icebp
push
out
movsl
imul
and
and
mov
pop
push
mov
xchg
scas
cmp
in
fstps
insb
add
push
jge
or
xor
cwtl
sti
sbb
mov
ljmp
jnp
mov
inc
mov
mov
adc
arpl
cmp
mov
movsl
sahf
lods
cmp
mov
jne
movsl
popa
in
mov
es
push
int
pop
mov
imul
out
xor
fmuls
adcb
icebp
adc
and
dec
pop
rcrb
mov
xorb
push
and
pusha
or
mov
xchg
das
jl
sub
or
pop
jg
ret
mov
xchg
insl
xor
xchg
andl
or
push
loop
ss
aaa
fnstcw
sub
adc
sub
in
stos
popf
mov
mov
xor
call
or
inc
adc
or
test
cs
out
mov
int3
mov
js
jnp
or
xchg
aam
mov
xchg
hlt
out
xor
mov
cmp
mov
jnp
ficompl
outsb
jmp
inc
fildll
cmp
or
push
bnd
xor
cld
out
ss
scas
xchg
push
enter
cld
jge
push
sti
fnstcw
imul
xor
in
incl
mov
rcll
jns
add
into
leave
clc
inc
fdivs
push
fidivl
push
loopne
fdivl
addb
cmp
pop
mov
shlb
xchg
cmpb
mov
sub
inc
lock
nop
popa
cltd
popf
loop
je
xchg
unpcklps
add
repz
fcomps
and
mov
repz
ljmp
enter
cmpsl
mov
mov
mov
lret
es
pusha
add
inc
in
int
cs
mov
add
ret
fidivrl
sub
dec
push
sub
push
inc
jo
pop
mov
pop
imull
mov
jno
mov
pop
push
test
jno
in
lods
push
roll
adc
dec
dec
stos
int
mov
sub
out
test
std
outsb
test
and
jecxz
xlat
or
lret
mov
mov
aaa
sarl
adcl
sub
pop
sbb
lods
es
add
iret
test
popf
sbb
xchg
sbb
inc
xchg
or
add
jle
outsl
mov
jnp,pt
sbb
jg
jg
stos
push
insb
inc
pop
sbb
xchg
ja
mov
push
sbb
roll
pop
push
in
pushf
xor
popa
or
dec
clc
repnz
int3
icebp
mov
cs
inc
test
mov
imul
and
jge
push
shll
xchg
jo
mov
mov
ret
pop
xor
faddp
xor
ret
push
stos
lcall
in
xor
or
adc
mov
sbb
fidivl
cs
bswap
xchg
push
mov
add
add
pop
xchg
cltd
aam
fcoms
imull
mov
push
std
inc
push
leave
adc
data16
fcmovnu
rolb
push
mov
fwait
lods
add
or
xchg
jnp
mov
push
xchg
pushf
test
insb
fmulp
or
xlat
out
push
dec
clc
adc
stos
push
sti
mov
jae
push
and
sub
jno
mov
in
sub
ja
sub
sti
mov
push
adc
sar
repz
cmp
cwtl
sbb
test
leave
mov
mov
rcr
pop
filds
cmp
mov
nop
push
fadd
push
push
ffreep
xor
stc
or
movb
aas
flds
jno
adc
inc
lret
push
pop
mov
or
imul
add
frstor
and
aad
fistps
dec
repz
addb
stos
imul
std
mov
out
dec
push
aam
push
leave
push
cmc
and
adc
cmpsl
add
jne
mov
enter
pop
sub
lock
xor
in
scas
add
push
lds
inc
push
push
mov
movsb
or
inc
pop
xor
out
or
test
push
rcrl
repz
push
lret
fiadds
loop
lock
dec
push
lods
jp
xor
adc
dec
stos
pop
data16
sub
dec
ja
mov
pop
adc
cmp
jp
mov
daa
inc
xchg
cwtl
cmp
mov
inc
push
mov
div
fdivl
fisubrl
clc
js
pop
pop
gs
aaa
into
bnd
jg
inc
fnsave
dec
inc
cmp
aaa
mov
push
mov
mov
mov
popf
repnz
dec
movb
stc
inc
cmp
mov
hlt
test
mov
mov
lods
lods
and
ret
test
pop
fs
popa
mov
mov
cmp
xchg
xchg
lret
std
mov
mov
rorb
push
cmp
imul
out
repnz
icebp
pop
in
aas
ds
cmp
pop
aam
sahf
sub
inc
test
add
pop
imul
lods
pop
cmp
push
mov
aas
xor
or
loop,pn
inc
inc
mov
adc
sub
push
cmp
sub
cmp
mov
ret
popf
xor
inc
scas
or
adc
mov
sahf
addr16
push
dec
sbb
outsb
mov
xchg
insb
test
or
shl
or
xor
insb
pop
mov
adc
fmuls
outsl
mov
rcrb
cmp
cwtl
xchg
mov
add
test
and
mov
scas
lods
mov
and
xor
dec
xchg
cmpsb
sub
leave
sbb
jb
leave
fmulp
adc
xor
jb
bswap
cmp
aas
xchg
xchg
pop
inc
push
aaa
push
lcall
in
inc
push
inc
xchg
frstor
les
jl
sbb
fwait
mov
nop
into
xor
and
adc
push
adc
sbb
mov
pop
inc
mov
in
xchg
scas
mov
popf
aaa
jo
fs
aam
adc
rolb
mov
cmp
outsl
xchg
push
ss
xor
movsl
mov
and
lock
cmc
mov
push
inc
sahf
insb
sarl
add
push
and
add
out
inc
call
andb
ja
sahf
mov
jg
or
mov
adc
xchg
int3
or
inc
jecxz
mov
or
sub
add
adc
pop
add
jg
sub
or
pop
add
fstpl
bound
cmpb
cmp
add
lds
lock
push
inc
sbb
arpl
shlb
shll
and
fidivs
jne
push
pop
lret
in
add
inc
hlt
outsl
pop
mov
adc
push
fdivrl
dec
pop
std
int3
xchg
ja
push
out
sub
inc
aas
sub
fwait
and
cmp
add
into
hlt
dec
mov
fcomps
push
cli
pop
xchg
xlat
pop
sbb
sti
inc
sahf
add
aas
dec
cmpsl
cmp
loopne
xchg
xchg
jg
dec
add
mov
fwait
cmp
cmpsl
rorl
nop
cmpl
jl
data16
icebp
dec
inc
push
cmp
mov
xchg
movsb
das
jns
mov
mov
fs
subl
push
pop
paddsw
jne
or
daa
in
add
inc
mov
xchg
ljmp
ds
movsl
inc
mov
sti
push
sub
icebp
pop
into
fcmovu
fistl
or
call
sbb
and
dec
lcall
popf
mov
pop
les
and
lock
repnz
flds
in
jecxz
sub
sbb
shlb
xchg
jo
add
cmc
repnz
mov
lods
fcoml
dec
mov
cmpsb
ret
movsl
sbb
sarb
and
jb
inc
mov
sbb
mov
stos
push
das
mov
jae
es
cmpl
repz
inc
jmp
fwait
mov
inc
add
sub
pop
imul
movzbl
cwtl
sbb
sti
popf
xor
rcrb
push
xchg
mov
xchg
mov
mov
out
pop
es
movsl
xor
inc
cmp
sbb
push
mov
sahf
xor
mov
inc
push
test
ljmp
movsl
adc
push
gs
insb
cs
and
pop
in
call
inc
and
xor
test
jge
xor
das
and
mov
mov
subl
xchg
outsl
test
orl
sub
out
outsb
pop
sub
std
or
xchg
roll
andb
push
loop
add
insl
mov
dec
movsb
or
das
and
sub
test
push
mov
ret
das
sub
je
popa
xchg
sub
lret
jo
push
dec
imul
mov
sub
pop
cmpsl
ljmp
out
pminub
into
inc
clc
imul
push
dec
mov
out
xchg
jle
enter
add
scas
es
cs
or
mov
cmpsl
jp
leave
mov
xchg
add
add
push
out
daa
jns
call
mov
mov
adc
push
cmp
rol
or
add
out
testb
mov
leave
daa
or
cmpsl
lret
out
mov
andb
in
inc
loope
pop
and
cmp
dec
mov
mov
xchg
and
pushl
cmp
adc
cmc
xor
mov
clc
idivb
sahf
sti
jmp
ficompl
pusha
or
mov
mov
lods
mov
mov
leave
clc
sbb
mov
add
jg
jmp
daa
sub
inc
cmpsl
sbb
les
add
cmp
and
ja
pop
test
cmp
ja
and
ljmp
in
call
hlt
jno
pusha
idivl
outsb
lret
fucomi
hlt
ja
enter
repz
mov
push
cwtl
out
fdivl
sti
xor
mov
push
adc
sub
pusha
pop
push
mov
es
orl
mov
add
or
sub
push
pusha
cltd
dec
jnp
pop
repz
add
fs
popf
cmp
dec
andb
pop
leave
pop
arpl
inc
cmpsb
add
scas
mov
test
jb
mov
pop
leave
sbbb
les
outsb
push
push
dec
test
push
xor
push
sub
sbb
sub
xchg
rorl
cmp
mov
dec
out
outsl
aam
roll
mov
je
sbb
xchg
mov
pop
inc
xor
dec
push
pop
xchg
stos
pop
push
loope
ljmp
cmp
sti
push
mov
nop
push
cmp
out
and
jmp
mov
shrl
in
outsl
dec
nop
or
cmp
cwtd
sahf
mov
fs
jp
in
lahf
insb
push
fs
xchg
mov
jne
lods
mov
icebp
mov
aaa
mov
hlt
fcmovnu
mov
bound
fsubl
jae
push
in
outsl
jecxz
aaa
dec
fsts
push
and
mov
mov
xchg
and
xor
push
mov
inc
lea
ss
xor
sahf
sbb
mov
addb
push
lret
fidivl
sbb
sbb
jae
sub
pop
out
into
mov
mov
sbb
aas
lcall
dec
mov
xchg
daa
arpl
outsl
push
cmpsb
pop
sti
sbb
xchg
testl
pusha
aaa
xchg
out
mov
jb
cmp
mov
sarb
sbb
or
xchg
and
lret
das
xchg
shlb
repnz
sbb
negl
subl
loopne
lret
aaa
fwait
lcall
aas
jb
jns
rorl
add
pop
rcrb
repz
xor
sub
xchg
lahf
icebp
dec
pop
and
push
jl
xor
pop
dec
jl
add
xor
dec
in
pop
xchg
xchg
mov
xchg
stc
sahf
out
push
arpl
lcall
popa
and
das
les
addl
pusha
std
cwtl
in
dec
add
sub
popf
sbb
in
add
rclb
jle
or
sub
jge
repz
std
pop
push
cmpsb
cmp
stos
mov
ficomps
pop
xor
xchg
pop
push
out
jg
lods
mov
or
or
fstl
mov
nop
iret
jg
popf
daa
sbbb
enter
dec
sbb
mov
lret
es
iret
xor
mov
xchg
aam
test
rorb
mov
lock
push
andb
lahf
xor
push
rolb
mov
test
aad
inc
enter
clc
xchg
fstps
dec
in
add
scas
mov
xlat
fwait
adc
xor
jno
jne
fucomp
mov
mov
outsl
js
and
outsb
cltd
xchg
inc
push
notl
or
and
add
rcrl
in
andb
sub
mov
das
mov
gs
mov
jmp
sbb
mov
mov
jae
add
les
mov
shl
xchg
cmp
cmp
pushw
adc
test
and
add
cltd
stos
xchg
jbe
lcall
push
out
jge
and
push
outsb
lods
ror
sbb
das
dec
dec
dec
test
repnz
pop
test
mov
jge
cltd
pop
sbb
jb
pop
xchg
or
sahf
es
adc
xchg
jo
sub
sbb
or
or
dec
or
test
nop
shlb
inc
mov
test
xor
fists
lret
gs
cld
mov
movsb
pop
roll
lods
mov
dec
loope
dec
mov
fnstcw
mov
cltd
lds
repz
or
xchg
mov
in
idivb
dec
add
jae
aad
outsl
cmpsl
mov
pop
xchg
imul
mov
pusha
lret
mov
push
cli
jnp
dec
lock
or
fdivrl
outsb
clc
int
lret
adc
jns
inc
out
jle
fildll
test
andb
icebp
cmp
mov
cmp
mov
and
sub
inc
mov
adc
stos
cmc
xlat
mov
xor
push
mov
sbb
call
ja
test
test
rcll
int3
inc
xor
cwtl
inc
sbb
or
pop
stc
add
or
push
dec
dec
sarl
pop
insb
and
iret
out
out
lea
ja
cwtl
shl
iret
imul
mov
fstl
frstor
adc
inc
loopne
icebp
and
mov
and
or
hlt
dec
adc
jg
mov
in
adc
sub
jbe
je
adc
and
mov
xchg
mov
leave
push
daa
or
and
add
sub
test
leave
cld
xchg
cmp
add
arpl
rcrb
aad
cmpsb
loopne
popa
insl
loop
fildll
mov
sarl
lret
xchg
inc
cmp
push
jae
pop
les
dec
adc
xchg
xchg
cs
icebp
inc
pop
icebp
jb
mov
movsb
push
mov
test
sub
push
push
std
add
xchg
gs
or
lea
adc
sub
jl
adc
jg
sbb
cmp
mov
movsb
cmpsl
cmc
rorb
aas
shr
cmp
dec
inc
xchg
or
arpl
popf
mov
sbb
mov
cwtl
push
dec
push
outsl
sub
loop
add
pop
dec
or
lcall
test
into
mov
mov
sbb
incb
shll
lods
in
outsb
insb
ret
mov
sub
adc
in
dec
outsb
xchg
test
cmpsb
add
pop
sub
movsb
jge
pop
pop
mov
fstpt
das
xchg
push
pop
mov
mov
inc
lods
loop
add
jne
xor
dec
repz
sbb
or
leave
packsswb
pop
cmp
cltd
push
xor
xor
fldl
in
in
icebp
nop
pop
xor
scas
and
cmp
notl
lcall
adc
pop
adc
sub
mov
lock
movsl
jae
and
pop
cmp
mov
fbstp
inc
fs
insl
push
jecxz
scas
in
in
xchg
push
hlt
int3
lret
add
lods
mov
pop
daa
insb
mov
mov
enter
xor
in
imul
mov
pop
movsl
stc
icebp
ret
int
adc
xchg
pop
xor
mov
gs
sub
xchg
int3
sub
in
sub
jnp
scas
test
push
or
lods
leave
inc
xlat
cmp
sbb
mov
xor
leave
jno
add
icebp
in
jns
push
out
test
cli
mov
popf
mov
xor
fsts
ds
push
inc
and
inc
dec
cmp
or
sbb
push
pushl
imul
roll
fisttps
fimuls
inc
icebp
push
imul
and
pop
push
lret
fsubrl
mull
adc
sbb
dec
daa
sub
mov
pushl
cmp
push
jns,pn
in
sti
jp
in
inc
fstp
fnstsw
pop
or
orl
clc
fimuls
cmpsl
xchg
mov
or
test
test
mov
enter
add
arpl
imul
jb
dec
fprem1
inc
xor
or
fldl
pop
or
scas
dec
orb
xchg
test
jae
push
and
repnz
jl
dec
test
mov
xlat
out
push
stos
push
subb
jp
pop
xor
sub
movsb
sub
repz
mov
mov
xchg
aas
lea
in
mov
mov
ret
ss
aas
xor
jne
scas
fwait
dec
or
push
je
and
loop
push
add
aad
scas
fsubrp
mov
xchg
sti
mov
mov
aaa
out
pop
mov
inc
mov
gs
mov
fldcw
popf
xchg
dec
dec
sbb
adc
popa
push
adc
cmp
sub
sub
out
sub
jno
cmpsl
jae
lds
int3
mov
inc
sub
and
push
outsb
ds
xchg
inc
cmpb
lock
loopne
xchg
jne
lods
cwtl
int
sbb
pop
xchg
enter
frstor
ja
and
in
popf
pop
xchg
sub
cli
mov
in
and
adc
inc
mov
adc
jbe
jb
push
xor
loope
xor
and
dec
pop
pushf
icebp
jae
mov
aaa
inc
cli
test
shl
pusha
nop
stos
cltd
pop
leave
nop
jmp
scas
mov
xlat
popf
ret
inc
ss
jns
aas
ss
xor
stos
dec
and
jecxz
iret
dec
roll
adc
sbb
rcrb
jge
xchg
pop
add
out
scas
scas
jno
fistpl
imul
or
iret
cmpl
inc
movsb
sbb
fstps
mov
mov
outsl
cwtl
scas
jae
mov
fidivrs
pop
and
arpl
sti
pop
push
sub
loop
mov
loop
and
movsl
pop
cli
push
xor
sbb
push
inc
sub
fimuls
cmp
mov
push
sub
fbld
ficomps
xor
mov
pop
sub
mov
pop
jge
lret
cmc
mov
je
mov
scas
sbb
mov
popa
arpl
jns
cmc
scas
nop
inc
or
mov
push
rcl
arpl
repz
add
xchg
mov
xor
push
insl
lods
fs
clc
mov
or
imul
mov
inc
aas
sbb
pop
in
in
pushf
icebp
iret
pop
addl
dec
pop
jg
lret
cmpl
jecxz
mov
clc
test
sbbb
add
sbbl
test
test
inc
cwtl
mov
and
imul
stc
xchg
jmp
sbb
mov
jo
addr16
jbe
mov
into
out
mov
shrl
lea
and
adc
push
sbb
mov
cmp
add
lahf
push
dec
imul
cmp
lods
cmp
test
fdivrp
mov
lahf
jg
cmp
scas
push
inc
ficoms
notb
and
test
incl
cmp
jecxz
int
mov
fld
rcl
imulb
daa
mov
dec
mov
scas
enter
mov
mov
add
and
aad
jmp
add
in
mov
aam
std
cs
es
lret
jp
mov
dec
dec
jae
test
mov
push
incl
push
xor
jle
dec
repz
mov
and
out
ljmp
jecxz
divb
dec
lcall
pop
adc
pop
lcall
and
jbe
shl
mov
mov
mov
sti
and
js
cmp
push
mov
shrb
ss
mov
sbb
mov
lret
jns
or
mov
mov
xchg
popf
dec
clc
fadd
jl
add
rorl
pop
xor
cmpsb
inc
jnp
xor
adc
cmp
xchg
mov
or
shll
popf
addb
cltd
add
outsb
xchg
jbe
ljmp
loopne
mov
inc
fsubrl
movsb
mov
jo
scas
xlat
cmpsl
fstps
inc
cli
popa
xchg
mov
add
into
aam
xchg
xor
adc
mov
jmp
iret
push
inc
xor
inc
dec
iret
inc
clc
jl
and
cwtl
jb
enter
push
jb
mov
jge
insb
lock
adc
in
int
lea
or
imul
pop
fcomip
sub
in
test
mov
ret
shl
pop
cli
inc
insb
or
pop
xor
fwait
jno
xor
dec
pop
ljmp
push
hlt
jb
popa
mov
ja
in
pusha
xchg
ja
ljmp
lds
call
jp
mov
dec
push
push
xchg
int
fwait
push
test
and
add
cwtl
fs
jp
add
or
fiadds
sti
mov
rcr
subl
and
pop
sbb
movsl
lock
pop
jae
cmp
jno
or
scas
inc
insl
fimuls
push
pop
imul
pop
into
xchg
clc
cmpl
out
mov
leave
clc
ss
out
xor
adc
scas
xor
addb
ss
push
dec
outsl
or
dec
arpl
mov
shlb
rcrb
addr16
fsts
cmpsl
ljmp
test
xor
xor
das
xchg
inc
add
jecxz
ss
xor
push
gs
arpl
cwtl
imul
pop
sbb
mov
mov
ljmp
sub
mov
in
add
rclb
mov
cmp
clc
mov
insb
xor
xchg
sub
enter
out
mov
mov
dec
push
les
mov
dec
cld
mov
cmc
inc
adc
jns
pop
ja
insb
test
int
insb
pop
push
test
pusha
imul
ds
xor
out
imul
cld
sbb
ss
jle
mov
jl
sub
imul
mov
inc
repz
xor
sub
pop
mov
out
push
mov
and
add
sbb
inc
int3
adcb
scas
lret
pop
imul
pop
mov
stc
mov
inc
bound
ds
cli
orl
aas
sub
ret
mov
inc
mov
dec
mov
mov
and
jno
into
pop
lds
iret
sbb
sub
or
xor
lcall
xor
aam
test
pop
sub
adc
push
repnz
lcall
insb
inc
cmp
insl
and
push
push
cmp
testb
or
out
jnp
aad
pop
js
push
adc
lock
mov
jmp
cmp
popa
insl
and
enter
jns
xor
out
and
daa
je
fstps
mov
cmp
xchg
cmc
sbb
shlb
push
mov
imul
push
stos
jp
aam
sub
dec
jae
pop
imul
or
xchg
sub
inc
loope
mov
ret
testb
lret
inc
stc
mov
xlat
mov
sbb
cli
xor
mov
cmp
loope
out
jg
cli
add
dec
push
dec
xor
movaps
add
arpl
daa
or
adc
mov
mov
jp
fwait
xor
sbb
xchg
cmp
fsubs
inc
adc
arpl
dec
fs
dec
dec
mov
arpl
cld
jg
mov
inc
fstl
pop
inc
repnz
pusha
inc
mov
jb
mov
push
dec
and
clc
in
inc
out
adc
adc
xchg
or
mov
push
aaa
mov
cmc
fcmovb
pushf
insl
cld
pop
enter
icebp
xor
or
jb
adc
pusha
or
sbb
xchg
cmpsb
icebp
mov
cmc
lea
mov
sub
loope
scas
xor
bound
daa
iret
das
lea
popa
ret
lahf
loope
icebp
test
movsb
jo
mov
rorb
xorb
dec
icebp
xchg
xor
data16
cmpsl
sub
aam
sti
pop
pop
pop
cmc
cs
adc
bound
ljmp
dec
les
jmp
outsl
push
shll
mov
sbb
cwtl
ja
push
testb
std
jae
bswap
jne
pop
outsl
xchg
test
mov
fcomp
test
fldl
jns
in
jns
jl
scas
push
lret
ljmp
xchg
decl
pop
in
or
test
inc
adc
inc
sub
inc
push
inc
insb
sar
jno
cltd
pop
cmp
and
lods
inc
sbb
push
sub
in
loope
out
clc
dec
and
and
lods
pop
pop
jp
stc
outsl
ret
sub
int3
test
sarb
xlat
cmpsl
sub
add
int
mov
adc
adc
bnd
push
data16
xchg
cmpsl
mov
mov
aad
mov
inc
bound
repnz
xchg
mov
mov
shlb
mov
lret
bound
faddl
clc
and
mov
mov
lods
or
fsub
xchg
es
and
sub
mov
cld
movsl
cmc
and
bound
push
push
pop
mov
fwait
mov
cmp
test
dec
mov
insb
jne
jns
jle
xor
out
in
or
sbbl
pop
sub
in
add
out
ja
cwtl
or
lods
mov
aam
jae
pop
fidivrl
lock
push
sbb
add
arpl
icebp
xchg
das
jp
sub
cltd
sahf
addr16
inc
pop
test
in
sbb
mul
popa
pop
cmc
add
lods
adc
out
pop
out
push
mov
fucom
and
int3
out
sbb
sub
sub
in
mov
xchg
mov
test
test
dec
jecxz
sbb
sbb
or
test
mov
mov
xor
xor
movsl
gs
push
std
insb
adc
ret
add
push
pusha
dec
lcall
inc
mov
cmpsb
xor
jl
cmp
leave
mov
test
xor
jo
mov
inc
mov
ja
sahf
test
cmp
push
xchg
dec
fmul
jae
and
cli
ret
shll
cmpsl
aam
mov
rclb
xchg
mov
out
jp
int
loope
mov
add
sub
xchg
fdivs
cmp
fistpl
add
jge
fistpl
fucom
adc
add
addr16
sub
cld
pop
and
mov
adc
ficoms
leave
insb
ret
pop
and
dec
imul
inc
into
mov
inc
sbb
sbb
and
fs
aam
cmp
add
or
jle
in
insl
push
cmp
sbb
xor
xchg
imul
repz
pop
push
decb
stos
sbb
jmp
xor
jo
fwait
pop
popf
out
mov
sbb
das
xchg
xor
pop
xchg
mov
imul
or
iret
rorb
xchg
pop
mov
push
pop
push
xorb
pop
popf
and
sub
mov
mov
sarl
xor
jb
inc
pop
sub
scas
lods
jle
idivb
shr
dec
mov
cmp
jecxz
sub
add
into
add
adc
cmpsl
pusha
cltd
jmp
xchg
test
xor
cli
dec
cmp
or
adc
xlat
cmp
pusha
xor
insl
mov
mov
popf
sbb
js
cmpsb
and
sub
in
repz
push
fistpl
in
or
cmpb
mov
and
ret
pop
test
cwtl
test
push
mov
push
hlt
int
cltd
push
cmc
xchg
push
lret
inc
mov
ret
ja
daa
jp
pushl
pop
fchs
loop
nop
push
add
dec
sbb
shll
fsubr
rclb
push
sbb
sbb
loope
dec
aaa
and
sbb
stos
xchg
inc
int
outsb
sbb
mov
cwtl
fisubl
push
je
fnstsw
push
xchg
test
or
adc
scas
fsubrp
sbb
xor
pushf
loopne
push
pop
lcall
dec
push
test
out
mov
lahf
aas
mov
bound
cmp
pop
popa
xchg
mov
cmp
jbe
js
fistpl
addb
pop
arpl
push
jg
rcrl
sahf
mov
xchg
pop
or
and
int3
fs
outsl
mov
stc
cli
mov
in
lods
in
lret
insb
out
xchg
hlt
xchg
or
push
pusha
in
sarb
push
lds
xchg
stos
mov
aad
lret
sti
out
cmp
push
sub
push
in
test
repz
and
inc
sub
mov
cmpsb
jb
gs
adc
not
jae
test
mov
mov
cmp
daa
aam
test
cmpsb
jecxz
add
shlb
jle
sahf
cmp
insl
add
cwtl
popa
push
lcall
addr16
sub
in
bound
pushf
rclb
cmp
push
dec
add
fldcw
xor
pop
shlb
pop
popa
mov
xchg
out
pushf
pop
cmp
sub
xchg
aad
fstpl
pop
cmp
jmp
jg
es
shl
aad
ja
mov
and
inc
ret
pop
scas
sub
adc
xor
sbb
mov
lahf
iret
jo
dec
popf
sub
mov
adc
and
movsl
fdivrs
call
aam
out
ds
clc
or
cld
sbb
jle
mov
bound
addr16
add
adc
mov
out
xlat
dec
xor
cmp
dec
add
aam
jno
xlat
inc
lock
push
popf
loopne
push
adc
fldl
ret
dec
dec
xor
cmp
fists
outsb
in
mov
mov
mov
aaa
lret
ret
rorl
jmp
shlb
in
js
mov
mov
out
imul
pushf
dec
dec
aas
rolb
stos
pop
in
or
jl
loopne,pt
dec
mov
lahf
in
jecxz
jg
jns
inc
xchg
into
sti
cmpl
lret
pop
out
mov
sar
mov
out
pop
pop
pop
xchg
and
mov
lea
into
div
ret
sub
imul
sub
inc
enter
pop
nop
ja
xor
jmp
pop
out
in
dec
xchg
cli
imul
idivb
popa
out
jg
add
sub
es
mov
out
out
pop
and
scas
add
xor
adc
jbe
pusha
outsl
insb
or
aas
mov
mov
je
xlat
adc
sahf
dec
hlt
xchg
hlt
test
mov
ja
std
adc
xor
add
and
rcr
icebp
addr16
xchg
fstl
jno
adc
in
std
testb
or
cmp
push
mov
repnz
mov
lret
or
call
cmp
fisubrs
jo
jno
inc
or
jo
test
shlb
bound
sub
ljmp
push
lret
sbb
jno
int3
push
inc
pop
pop
and
jge
sub
dec
es
int
push
mov
fcoms
je
testl
out
scas
or
andl
xchg
hlt
adc
push
in
pop
mov
mov
cwtl
xchg
cmp
push
mov
in
or
mov
mov
negl
repnz
adc
cmpsb
add
ficoml
addl
or
inc
fcmovbe
and
add
xchg
into
icebp
test
js
pop
fnstcw
dec
int
daa
pop
ss
mov
pop
and
cltd
insl
bound
adc
sub
aad
loope
in
imul
dec
insl
adcl
sub
inc
rcll
lcall
scas
sahf
sub
gs
out
mov
mov
or
xor
mov
push
cs
inc
ljmp
insl
cmp
or
pushf
cli
aas
jecxz
pop
fcmovu
mov
loop
pop
pop
loope,pt
int
inc
jbe
jp
mov
popa
rol
test
int
cmp
pop
inc
leave
pop
xor
lret
cmpsb
adc
mov
int
das
add
xchg
sbb
or
sti
and
inc
repnz
xor
push
xchg
or
mov
dec
popf
push
jno
icebp
mov
jns
in
pop
aas
repnz
lcall
aam
popf
rorl
rcr
fmull
rcll
repz
in
push
rcrb
dec
cmpsb
jmp
pop
sub
jg
or
push
popa
add
or
sahf
test
out
cmc
ds
xchg
adc
xor
inc
fisttps
in
jne
pop
add
ljmp
daa
ret
test
or
mov
add
sub
xlat
and
xor
movsl
jae
mov
clc
or
sbb
addr16
push
pop
loope
sahf
adc
lds
aas
sbb
jae
push
lods
gs
dec
scas
rcll
outsb
movsl
enter
and
jmp
xlat
cmp
or
push
xchg
addr16
add
ja
sbb
cmp
jnp,pn
addr16
fnstenv
adc
add
push
cld
leave
xchg
sahf
loop
xchg
test
mov
notb
jnp
leave
mov
sarl
jp
cmp
mov
sub
out
mov
adc
mov
mov
sub
mov
ss
mov
or
test
mov
in
cli
mov
fs
sbb
clc
fsubrl
xchg
clc
daa
push
movb
pop
dec
shll
or
xchg
push
sbb
outsb
lock
pop
lea
aad
and
adc
jle
pop
pusha
outsb
xlat
pushf
std
inc
in
je
int3
cmpsl
aad
sub
cmp
mov
pop
ss
jae
in
daa
xor
clc
jmp
fmul
rcrb
fwait
into
jae
mov
out
mov
stc
daa
cs
push
insb
inc
xchg
stos
lods
mov
push
pop
insl
pop
and
out
addr16
out
dec
aaa
sbb
jge
sbb
jo
sti
sub
cwtl
enter
add
xor
loop
or
in
test
mov
pushl
sub
pop
push
cli
jae
pop
xchg
aas
mov
shll
call
cmp
rol
sahf
pusha
sub
or
stc
mov
sbb
cmpsl
dec
inc
mov
test
adc
in
add
pop
or
mov
out
xor
or
aas
imul
rol
cmpsl
call
enter
test
jo
fistpll
xchg
add
aaa
sub
xchg
xchg
xchg
dec
sub
push
mov
cmp
jl
xlat
cmpsl
jmp
popa
clc
jbe
pop
add
in
cmpl
sarb
push
mov
mov
dec
mov
out
lods
mov
int3
movsl
pusha
fldl
jmp
cwtl
or
fsts
hlt
xor
xchg
sti
pop
les
or
mov
pushf
mov
idivl
jge
in
sarb
and
pop
int3
aad
cli
ror
xorl
xchg
cld
cmp
inc
ss
sub
lods
adc
jno
adc
lods
les
popa
cmp
and
enter
sbb
or
mov
jge
fstl
xor
test
es
popf
shl
sub
push
test
je
cwtl
test
or
out
mov
repz
loopne
add
js
sbb
icebp
ss
clc
repnz
jns
dec
mov
out
mov
rcrb
and
pushf
rorl
into
cwtl
mov
int3
insb
cmp
mov
cmp
jmp
adc
mov
dec
rolb
hlt
pop
jne
pop
xchg
fs
jle
inc
je
and
mov
sbb
dec
imul
xchg
outsl
jmp
shlb
jo
sub
data16
shl
clc
aad
shrb
dec
jmp
push
jns
pop
or
jno
jecxz
orl
and
scas
pop
stos
nop
out
std
sarl
jl
mov
test
pop
pop
shl
fwait
cmp
lods
inc
cli
enter
mov
xor
xchg
pop
pop
mov
jns
loop
mov
sbb
orb
pop
jb
and
test
addr16
push
lahf
adcb
andb
mov
dec
mov
movsl
sbb
rcr
push
sbb
pop
jecxz
movsb
orb
jge
mov
jmp
sub
mov
mov
fdivr
movsl
add
ret
fistpl
lods
repz
div
mov
cmp
mov
dec
pop
mov
and
cmp
fisttpll
iret
into
mov
xor
lods
add
cmp
jb
fstl
push
sub
or
data16
mov
mov
fldenv
cmp
add
lret
mov
fadds
and
dec
pop
mov
clc
cld
push
inc
pop
pop
popf
and
sub
and
or
and
imul
add
push
adc
sub
shlb
mov
xchg
and
pop
sub
repnz
mov
test
mov
add
arpl
repnz
div
outsw
ror
shll
jb
in
xchg
dec
popf
stc
fs
inc
shlb
aaa
inc
cs
jnp
pop
inc
cmpsl
and
jecxz
adc
hlt
mov
push
je
sqrtps
cltd
nop
mov
sub
mov
adcl
sbb
shll
cmovnp
roll
sub
jnp
cmc
and
mov
dec
xchg
cmp
cmc
or
push
popa
cmp
aad
xchg
jo
add
and
in
lcall
sub
sahf
dec
add
leave
inc
cltd
and
jae
test
cmp
cmpb
lret
in
xor
aam
subl
push
repnz
movsb
lods
imull
push
adc
adc
sarb
fdivrs
cmpb
pop
jecxz
insb
dec
mov
repz
popa
mov
pop
sbbl
lock
jnp
lods
lock
jno
or
data16
aam
pop
sbbl
pushf
imul
mov
mov
xchg
adc
cmp
pop
outsb
push
mov
inc
js
add
out
daa
aam
dec
out
or
mov
es
mov
pop
mov
sub
data16
jb
pushf
adc
mov
mov
inc
push
out
sub
lret
dec
wbinvd
sti
je
or
popf
rolb
adc
outsb
pop
lcall
jp
xchg
sbb
jmp
or
out
xor
in
cmp
adc
clc
aaa
int3
cmpsb
pop
mov
dec
sahf
xor
stc
adc
lods
jns
and
je
out
in
test
fdivrs
dec
and
adc
les
shll
ror
adc
mov
shll
xchg
rcrb
mov
adc
les
pop
jl
or
dec
les
movsb
mov
or
lock
inc
push
popa
loope
lods
pop
xchg
scas
mov
incl
lods
pusha
jno
dec
aaa
dec
inc
mov
bswap
dec
cmp
mov
jle
rolb
popl
out
pop
dec
xor
sbb
cltd
sbb
imul
in
shlb
addr16
xor
push
xchg
mov
data16
add
mov
mov
jns
pop
xchg
mov
pop
sti
or
je
mov
and
push
add
mov
sub
push
leave
les
and
jp
lock
icebp
mov
add
xor
faddl
dec
iret
in
lret
je,pt
les
mov
sbb
jns
pop
gs
mov
jmp
and
mov
pop
pusha
inc
int
iret
sub
and
fnstenv
sbb
gs
pop
add
pop
jne
adc
imul
addr16
notb
scas
dec
pop
mov
test
ret
dec
cvttps2pi
data16
fcoml
into
dec
dec
stos
out
push
dec
ret
sbb
popa
add
pop
cltd
push
mov
add
or
xor
fstpl
jae
aaa
jb
lods
adc
jl
mov
das
jno
and
rolb
dec
xor
and
mov
sar
fcoms
mov
xchg
stos
jmp
daa
int3
in
mov
insl
fdivr
ss
mov
arpl
in
inc
mov
fs
jmp
sbb
pop
push
lret
sub
jmp
add
js
mov
stc
fadds
les
stos
cmpsb
sbb
and
in
jbe
test
out
or
enter
sbb
sub
adc
nop
insb
mov
sub
movsl
inc
jecxz
cs
sub
scas
ret
add
addr16
pop
jns
incl
jo
mov
into
xor
test
dec
aad
imul
inc
jo
jle
cli
mov
mov
lahf
data16
aad
arpl
add
cmpsl
cmc
pop
adc
pop
lcall
cs
fwait
sbb
ljmp
mov
hlt
jnp
adc
add
adc
mov
sub
pushf
lods
dec
sub
test
jge
sbb
aam
rol
loope
lods
jl
pushf
dec
mov
divl
sbb
int
inc
push
jmp
dec
les
mov
cmpsb
dec
cmp
rorb
cmpsl
sub
mov
inc
or
fnstsw
ja
lds
cwtl
cmp
inc
or
xchg
push
push
xchg
sub
jg
push
test
jb
scas
lods
repnz
adc
lock
scas
lcall
and
jbe
ret
dec
cs
repz
sbb
mov
xchg
mov
out
pop
pop
iret
and
mov
push
pop
jno
lahf
rol
repz
nop
mov
std
repnz
stos
popa
das
mov
add
aaa
fidivs
lret
mov
daa
inc
pop
cmp
jge
xchg
dec
loop
sbb
ss
inc
sbb
cwtl
pop
fistpll
int3
outsl
insb
test
lea
orb
pop
subl
mov
insb
lret
mov
stc
shl
movsl
fstpl
sub
inc
ss
shr
xor
in
daa
cmp
lock
addr16
push
lret
fs
incl
jno
je
loopne
ss
mov
sbb
pop
push
jbe
or
jae
repnz
mov
mov
pop
icebp
fwait
push
add
and
addb
jl
pushf
jno
sahf
fwait
imul
imul
xor
mov
cmp
stos
cmp
mov
cltd
jae
pop
adc
mov
clc
out
cmp
mov
sub
cmp
mov
out
lods
aam
push
add
and
lea
mov
movsb
mov
and
iret
add
mov
lahf
push
mov
movsl
jno
gs
lcall
std
outsb
ficoms
or
pop
xor
mov
loopne
loopne
cltd
test
movntq
out
js
mov
add
aas
xchg
stc
movl
fmull
rol
mov
lcall
xchg
adc
xor
push
jnp
out
jbe
xor
push
shrl
push
and
in
or
lahf
and
cwtl
xchg
std
xor
mov
arpl
jg
icebp
mov
or
adc
cmpsl
inc
and
iret
push
push
dec
js
js
mov
fwait
out
insl
test
jbe
pop
outsb
sti
lret
aam
xor
inc
xchg
jle
mov
icebp
in
mov
inc
testb
pusha
adc
data16
outsb
ja
mov
dec
and
lock
cmp
es
es
push
fadd
xor
and
fsubr
jns
mov
push
addr16
adc
mov
cmp
pop
pop
movsl
xor
outsb
inc
ljmp
or
notl
out
sti
fisubrl
imul
movsl
cmpsb
mov
mov
pop
daa
mov
xchg
or
ret
pushf
ljmp
nop
cmovl
roll
cmpsl
repnz
jecxz
cmpsl
mov
dec
and
in
mov
sahf
scas
scas
push
xchg
filds
adc
in
and
lret
mov
mov
outsl
pusha
and
adc
rcll
mov
xor
lock
push
mov
mov
fsubrp
aaa
js
fisttpl
push
cwtl
pop
mov
sub
inc
xor
cmp
push
inc
adcb
push
pusha
insb
xchg
popf
add
ss
jmp
repnz
nop
pusha
or
mov
sbb
leave
adc
rcrb
sti
outsl
lods
in
nop
cmpsb
fdivp
iret
cli
aas
xlat
dec
icebp
repz
push
out
push
test
pop
cmp
lock
out
lcall
out
repnz
cmovo
mov
xor
push
mov
push
add
adc
xor
lock
mov
sub
inc
cmp
jle
cs
mov
jecxz
pop
rcrl
cmp
loop
inc
out
pop
cmp
outsl
imul
xchg
fildl
ret
xchg
push
jo,pn
jne
cmp
scas
mov
lcall
lahf
cmp
ljmp
adc
dec
hlt
mov
xchg
mov
fwait
cmp
mov
push
mov
mov
fisubrs
mov
cmp
push
pop
mov
cmp
cmp
out
xchg
ja
subb
loopne
int3
addr16
lds
sbb
dec
aam
mov
cli
lret
outsb
sbb
sbb
xchg
xor
rorb
insl
fs
mov
repnz
push
or
pop
sbb
pop
das
xchg
pop
jge
push
inc
push
adc
inc
and
lods
push
test
into
arpl
xor
fmul
mov
sbb
push
sahf
push
idivb
inc
inc
xchg
push
and
test
notl
mov
mov
pop
jbe
ja
and
repnz
sbb
jmp
out
cmp
bound
and
xor
jbe
imul
mov
and
jae
and
mov
lret
cmc
push
or
jp
xor
flds
inc
adc
xor
test
push
loope
pusha
rol
sub
sbb
pop
or
pop
cmpb
jg
push
mov
movsb
fcmovnbe
data16
mov
inc
fcmove
add
stc
hlt
lods
jecxz
and
outsl
xor
std
ja
aam
out
mov
inc
cmc
mov
jns
jno
or
mov
cmpsb
inc
fs
and
push
cli
xor
cltd
data16
dec
mov
nop
xor
pushf
fsts
xchg
pop
sbb
flds
jnp
rclb
mov
push
shl
outsb
push
in
add
sbb
sbb
or
lea
inc
and
xchg
fnstenv
jb
mov
mov
or
repnz
movsl
inc
or
pusha
mov
push
jae
adc
fmulp
cs
lds
jae
adc
je
push
js
jo
push
jle
push
mov
dec
in
mov
or
dec
loope
pusha
out
pop
stc
fsts
int
cld
ljmp
fldenv
push
hlt
je
loop
js
inc
mov
cmpsb
fmuls
test
iret
add
into
loope
sub
or
lock
jle
ja
lret
ficoms
and
pop
inc
jne
and
cmp
pop
sarl
movsl
mov
pop
stc
add
cli
out
mov
enter
std
test
scas
std
or
xchg
cwtl
dec
loopne
stos
lods
pop
mov
and
loopne
add
lea
adc
stos
sbb
jnp
sub
in
insb
push
stos
add
bound
dec
or
sbb
sub
loope
mov
loope
add
inc
inc
adc
loope
in
mov
mov
sbbl
je
pop
xchg
sbb
hlt
and
jno
pop
pop
dec
out
or
adc
mov
sti
xor
fwait
jle
icebp
jecxz
fucomp
idiv
jno
xchg
mov
js
dec
push
mov
pop
mov
adc
adc
iret
mov
in
pop
es
outsb
loope
int
adc
or
std
das
clc
rorl
fs
outsl
dec
cmpsb
jmp
pop
into
popf
mov
and
jns
movsb
aaa
clc
je
add
dec
add
push
adc
int
call
inc
inc
cmp
arpl
outsl
xor
sub
and
faddp
jp
pop
mov
call
cld
lea
aam
xor
push
sbbb
add
fmull
mov
lcall
outsl
pop
cmp
cs
pop
gs
or
pop
movsl
dec
inc
leave
mov
dec
xor
mov
cmp
mov
xor
mov
or
push
or
sbb
pop
imul
cmp
dec
cmpsl
xor
repnz
sub
and
fistps
xchg
arpl
inc
aad
cmpsb
shl
jns
jb
out
adc
adc
aam
xchg
fsubs
clc
mov
pop
cltd
enter
sbb
jg
shrl
mov
jae
push
fidivs
push
cmpsl
cmp
cmp
pushf
lock
lahf
pop
hlt
xchg
std
out
and
loopne
imul
or
out
aam
in
mov
adc
sbb
jb
imul
push
cmpsb
popa
push
inc
add
pop
cmc
rcr
mov
call
cmp
push
inc
add
or
or
pop
fldl
inc
xor
push
cmp
stos
pop
dec
mov
insb
aam
mov
imul
jns
fistl
adc
mov
fsubs
inc
xchg
lds
ror
mov
sub
mulb
or
scas
pop
dec
jne
or
pop
push
subb
cmc
inc
clc
push
pop
cltd
addl
test
cli
lods
repz
push
inc
inc
test
jecxz
sbb
jne
imulb
or
or
mov
inc
sbb
test
inc
fwait
adc
cmp
add
cmpsb
inc
dec
outsl
mov
pop
mov
loope
inc
fmuls
inc
jo
and
xchg
push
cmp
movl
shrl
pop
pop
mov
in
push
sar
cs
sbb
push
pop
rcrb
jo
or
dec
sarb
nop
adc
popa
es
xchg
xchg
enter
ficomps
faddl
pusha
sub
cmp
jns
mov
xchg
add
out
xchg
push
jno
or
enter
sti
mov
cmp
jp
cmp
ljmp
into
lcall
out
xor
push
xchg
std
icebp
insl
in
mov
lahf
pop
or
inc
cltd
add
push
dec
daa
mov
rclb
mov
in
inc
or
out
pop
ja
pop
mov
rcll
lea
addr16
pushf
loope
out
loope
pop
ljmp
adc
add
mov
sub
in
pop
xor
loope
mov
push
adc
pusha
xor
and
cli
repnz
fwait
inc
hlt
out
andl
pop
fsub
add
arpl
test
shlb
lods
xor
cltd
mov
rcr
loopne
test
cmp
mov
sahf
xchg
cwtl
xor
ja
lahf
lret
out
add
sbb
jb
out
add
xor
inc
ret
gs
pop
fildll
sbb
clc
int
add
push
push
mov
cmc
pusha
es
pop
negb
stos
jl
pop
jnp
jns
xor
lret
adc
xchg
out
loopne
rcr
into
inc
iret
jmp
mov
mov
jge
test
idivb
sti
xchg
bnd
pop
mov
and
push
sbb
inc
adc
xchg
mov
xchg
adc
adc
ja
sub
xchg
ja
mov
in
les
pop
xchg
loope
fchs
mov
and
gs
inc
call
sbb
lahf
cmp
das
icebp
mov
or
sbb
movsl
mov
mov
jmp
mov
imul
int
sub
std
les
aad
mov
aam
mov
jb
sub
add
xor
scas
dec
ret
clc
sbb
mov
idivl
jecxz
lds
jbe
adc
mov
or
push
xchg
cmpsl
fimull
xor
push
xor
add
inc
sbb
loopne
out
fisubrl
mov
clc
xor
sbb
fstl
inc
xchg
dec
sbb
test
nop
pop
push
popa
imul
call
lea
icebp
xlat
pop
xchg
cmpsl
cmp
ret
and
sbb
fs
mov
jns
xor
add
stc
pop
fxch
mov
std
sub
call
fsubs
push
jb
jno
loopne
pop
and
roll
push
inc
aaa
xchg
out
push
mov
movsl
jo
push
repnz
bound
sbb
ja
imul
dec
fchs
mov
nop
ljmp
inc
repz
and
mov
adc
mov
imul
mov
stos
sub
xchg
and
cmc
loopne
adc
in
and
imul
je
jne
sbb
arpl
xlat
add
cmp
jbe
jg
ficompl
movsl
sbb
aaa
push
popa
test
mov
jbe
scas
xor
cmp
mov
xchg
lods
push
pop
and
xchg
fs
pop
inc
out
sub
or
push
xchg
nop
jae
dec
inc
stos
push
jno
add
push
shlb
mov
and
dec
adc
loop
mov
cwtl
mov
lds
jl
in
pop
adc
roll
jmp
testl
push
cmp
cmpsl
scas
cmp
inc
data16
jb
mov
and
sub
jbe
sti
cmc
and
push
hlt
jg
mov
and
pop
lods
mov
mov
mov
sbb
jecxz
pop
cmp
lea
shrb
enter
pop
mov
sub
lea
sub
arpl
int3
ret
mov
rol
push
icebp
push
sub
lahf
es
stos
mul
and
test
into
rcrl
xchg
xor
dec
addr16
bound
addl
mov
push
ljmp
mov
add
xchg
xchg
jle
out
xchg
cld
and
rcrb
sar
sbb
mov
lock
je
push
mov
or
mov
ljmp
mov
sbb
pop
pushl
mov
mov
mov
jb
sub
rorb
fs
clc
cmpb
scas
add
sub
or
loopne
repz
pusha
inc
xor
and
inc
cmp
sbbl
cmp
mov
je
mov
lahf
faddp
sbb
mov
pop
add
je
pop
cmp
add
loop
movsb
inc
cmpsb
iret
mov
xchg
cmc
sarb
mov
xlat
ds
lea
cwtl
xor
and
nop
lds
mov
dec
add
dec
std
in
add
dec
or
data16
pop
sbb
jle,pt
xchg
xor
dec
cltd
pop
scas
or
inc
stos
add
aaa
rol
leave
in
mov
in
fisttpl
cwtl
push
adc
mov
notl
jnp
fsubr
xchg
dec
pop
pop
shll
aam
push
out
xor
dec
test
ss
pop
push
lret
pop
xchg
and
dec
add
adc
pushf
mov
mov
lods
push
jbe
ret
sub
cli
sub
jne
aam
or
aam
sub
lods
mov
lock
lock
push
mov
fdivs
loopne
sbb
mov
arpl
nop
test
scas
cmp
xchg
pop
loope
fnstcw
call
sbb
inc
lods
adc
lds
lods
popa
mov
sub
out
push
xor
jmp
cmp
pop
mov
mov
sbb
ret
ja
mov
push
shll
push
pop
dec
inc
jmp
pop
pushf
sbb
pop
add
cs
pop
negl
mov
lahf
in
sbb
aad
or
lods
stos
pop
cmpsl
xorl
mov
mov
mov
sub
or
cltd
mov
sti
imul
push
sub
imul
adc
out
test
jle
sub
lret
push
into
mov
xchg
push
psllw
in
adc
scas
or
mov
push
pop
push
aad
inc
les
scas
out
out
cmp
inc
out
jg
scas
push
ficomps
std
xor
clc
jnp
sub
ds
inc
mov
cmpsl
sub
mov
dec
mov
jb
mov
lock
aas
mov
adc
jb
pop
ret
test
pop
adc
mov
jmp
inc
and
mov
jp
jp
xchg
jmp
and
popa
cmp
insb
jbe
push
stc
mov
loopne
pop
lock
lcall
push
test
jbe
out
mov
and
or
insl
int3
cmpsb
ja
lcall
outsl
and
inc
lret
add
addr16
mov
sahf
cmpsb
push
mov
sbb
jns
sub
cld
mov
loope
test
out
icebp
pop
stc
stc
xchg
scas
pop
dec
rolb
lea
scas
fstps
mov
sub
sarl
gs
sarl
fldt
adc
jns
adc
decb
sub
sarl
sub
in
xchg
jo
lods
les
lods
stc
push
lea
and
pop
pop
test
and
out
and
mov
mov
and
add
add
ljmp
or
aam
outsl
adc
mov
mov
push
xchg
mov
xchg
idivb
mov
popa
pushf
mov
lods
ss
mov
xchg
sub
ljmp
dec
mov
clc
stos
cmp
or
mov
add
ret
lods
js
mov
xchg
xor
or
xchg
sti
movsb
addr16
in
mov
sbb
cli
lcall
cmpsb
pop
daa
pushf
xchg
bound
sbb
imul
cmpsl
in
push
pop
cs
sbb
pop
or
sbb
jno
shlb
scas
jg
fnstsw
add
xchg
subb
inc
into
lods
outsb
inc
pop
out
in
cmp
jb
push
lea
xchg
addr16
xorb
push
cld
mov
subb
pop
mov
push
xchg
pop
mov
xchg
sbb
mov
push
push
testb
repz
jbe
dec
movsb
ds
int
mov
arpl
jp
mov
sub
into
pop
xchg
cmpb
sbb
inc
in
mov
jg
mov
out
jmp
or
pop
mov
stos
fdivs
cmpsl
xchg
xchg
xor
xchg
jge
stc
insb
jecxz
mov
aas
jae
aad
sbb
sbb
fbld
fstps
imul
pop
pusha
mov
scas
mov
add
rcl
dec
test
idivb
xor
xor
xchg
clc
lods
pop
jnp
fistps
push
jg
std
fistps
sbb
cmp
add
adc
popf
cltd
jns
push
mov
shll
dec
cmc
dec
pop
push
ret
fbld
add
das
push
cmp
ljmp
adc
jo
cli
pop
cmpsl
and
out
pop
jb
lcall
in
dec
sti
aad
out
rorl
add
in
data16
shl
lret
add
sbb
repnz
mov
in
pop
loope
dec
add
adc
or
arpl
test
inc
and
jl
jmp
cmp
loope
fistpll
dec
and
sbb
ljmp
ja
jae
cltd
or
sbb
jo
shlb
or
push
imul
inc
and
xchg
add
jmp
vmovhps
sub
ljmp
push
repz
sub
idivl
jle
mov
leave
or
push
loop
cmp
cmp
aam
ds
dec
imul
sub
in
xchg
mov
push
push
lahf
jno
out
sub
push
or
mov
loopne
cmp
data16
cmpsl
push
sti
lcall
lret
enter
movsl
sub
xchg
and
daa
xchg
mov
imul
add
sub
or
and
mov
mov
jmp
imul
push
ret
xchg
ljmp
jge
jl
rcrb
test
lcall
jae
inc
add
xchg
fxch
sub
data16
loope
jg
and
jmp
adc
mov
xchg
movhps
testb
mov
dec
insl
dec
xchg
mov
sbb
mov
std
test
enter
jmp
popf
add
add
sub
movsl
scas
push
das
xchg
sub
mov
jmp
and
xor
test
xchg
mov
fcom
aas
add
ret
push
adc
push
cmp
push
rol
lcall
pop
mov
xchg
cmp
jmp
dec
mov
or
xor
push
jle
faddl
or
xor
lds
or
jl
xchg
xor
fyl2xp1
sarl
adc
lret
sub
test
add
dec
push
int
adc
inc
or
mov
dec
or
pop
sbb
mov
daa
sbb
das
xchg
sbb
xchg
mov
outsb
push
jl
divl
push
sub
jg
jle
stos
or
dec
add
pusha
test
mov
insl
fadds
xor
rep
push
aad
cmp
insb
jbe
pop
add
add
ds
inc
stos
andl
test
sbb
in
mov
fwait
scas
pop
fildll
fsts
das
loop
push
lret
loopne
sbb
repz
arpl
out
cmpsl
and
mov
sub
add
mov
jnp
sbb
sub
or
cmp
mov
loop
ret
push
mov
arpl
daa
je
xchg
push
xchg
hlt
cmc
jne
bound
fs
mov
dec
xor
mov
lret
pop
jecxz
iret
insb
cmpsb
gs
jbe
push
fisttps
push
jmp
sbbl
sub
call
lret
jne
lahf
hlt
xor
and
xchg
mov
lods
jb
xchg
ret
sub
jno
lods
pop
jmp
lret
outsl
repz
sbb
imul
mov
enter
pusha
pop
pop
push
repnz
sub
das
mov
pop
int3
cmpsb
xchg
and
subl
adc
jmp
adc
fsincos
das
test
adc
outsl
out
xchg
push
jle
leave
mov
repnz
je
std
dec
xchg
cmp
inc
dec
dec
adc
mov
pop
bound
pop
ror
xor
test
mov
arpl
orb
aas
pusha
outsb
test
jle
xor
movsb
lret
mov
test
sbb
mov
sbb
lock
sub
dec
jo
in
add
mov
pop
inc
rcll
das
in
sbb
xchg
lcall
xor
inc
out
pop
xchg
fimuls
pop
xor
jo
roll
push
ret
jne
add
jo
lcall
sti
push
call
mov
xchg
shrl
mov
and
adc
mov
mov
adc
adc
xor
inc
sahf
add
jg
insb
out
and
lock
inc
jnp
and
cmp
cmc
add
ret
jo
mov
sahf
ret
xor
sti
ljmp
mov
pop
push
sub
xlat
or
inc
int3
add
hlt
gs
in
ret
push
mov
es
jb
lock
mov
movsl
sti
sbb
test
stc
jge
or
inc
xor
das
je
in
sti
cmp
pop
data16
mov
sub
mov
adc
adcb
pop
clc
nop
xchg
mov
lds
push
scas
sbb
cmp
lret
inc
jo
fs
mov
sbb
or
leave
xchg
lcall
jle
ds
cmp
fldt
stos
dec
mov
jl
loopne
addr16
jno
fcmovbe
cs
push
scas
pop
sub
pop
stos
nop
lret
addr16
or
or
adc
inc
lret
mov
sub
fadds
js
push
test
popa
pop
xlat
pop
xor
test
xchg
movsl
mov
ds
push
movsl
xchg
fcompl
jnp
call
js
int
sarl
pop
xor
pop
xchg
filds
sbb
push
jecxz
sarl
push
pusha
or
das
sub
movsl
ja
fs
or
push
testb
pusha
or
xlat
outsb
mov
fs
dec
stos
cmpsl
jae
sub
mov
in
inc
fnstcw
cltd
in
call
xchg
sub
sbb
xchg
add
stos
xchg
hlt
pop
subl
jecxz
jmp
cmp
dec
pop
imul
add
insb
jae
je
cmp
test
int3
dec
adcb
mov
repz
loope
pop
iret
xchg
inc
inc
fwait
ss
imul
icebp
and
out
rorl
imul
es
les
clc
adc
sub
or
fwait
xlat
sbb
jno
mov
sub
sub
and
push
cld
sbb
stos
aaa
pop
jno
push
push
loopne
jns
out
mov
fwait
ljmp
ret
in
or
lret
mov
fistpl
mov
loopne
pop
sub
push
push
jp
lock
mov
or
xchg
mov
lcall
sub
push
pop
mov
mov
js
push
adc
cmp
lock
push
imul
inc
mov
xor
int3
imul
mov
iret
test
lods
cmc
iret
xchg
jge
pop
or
pusha
fbstp
xchg
nop
xchg
imul
mov
clc
jmp
lret
test
insl
mov
xor
sbb
mov
adc
inc
fs
xor
inc
rcl
aam
dec
out
add
inc
jns
movsb
inc
addr16
test
inc
push
and
lea
push
sub
adc
inc
lock
repnz
movsb
sbb
mov
lea
mov
pop
or
es
pop
jge
sub
data16
adc
push
ret
std
ds
and
rcrb
xorb
mov
push
mov
scas
xor
adc
push
mov
dec
push
sbb
loop
xor
adc
cltd
mov
outsl
ret
mov
cmp
sub
and
divb
mov
jecxz
jo
or
int
ss
sub
inc
lds
xchg
mov
data16
inc
popa
or
cmp
and
les
scas
dec
xchg
stos
push
in
pushf
cwtl
xor
dec
or
lods
movsl
or
sbb
test
cmpsb
jno
xchg
mov
int
pushl
cmp
insl
incl
sbb
hlt
xor
mov
dec
sub
stos
sbb
je
mov
xchg
fmull
inc
dec
cld
ds
stos
shl
push
pop
fldenv
mov
jl
fdivrs
imul
test
adc
jno
jge
sti
add
mov
push
into
xor
mov
mov
sti
mov
mov
addr16
stos
sahf
sbb
mov
mov
mov
aad
inc
jbe
les
dec
loopne
out
movsl
sub
test
mov
and
mov
into
jns
pop
popa
iret
les
push
insb
pop
lods
leave
or
jnp
cltd
repz
xchg
ss
xchg
fldcw
inc
test
push
pop
mov
and
mov
loop
in
notl
ss
push
icebp
dec
ret
adc
push
pushf
call
mov
ds
or
movsb
or
mov
leave
mov
pusha
pop
mov
pop
mov
les
das
ljmp
mov
push
outsl
loop
and
pop
popf
repz
subb
mov
push
pop
and
jg
pop
arpl
xchg
xchg
push
shr
subb
jge
xchg
loop
andl
lods
insb
mov
cmp
mov
push
sub
xchg
and
test
addr16
outsl
mov
sbb
add
or
call
cmp
adc
cwtl
std
cmp
aam
loope
sub
xor
ret
push
cmp
aad
push
xchg
mov
cmpsb
ret
sub
loope
dec
inc
idivb
test
push
icebp
fsubrl
icebp
cmp
cmpsl
sub
xchg
pop
cmp
xor
jb
pop
sub
dec
jno
dec
jbe
push
mov
leave
mov
push
mov
shrb
sub
lea
mov
pop
or
jl
inc
push
movsl
movsl
push
jne
mov
sbb
mov
imul
add
cltd
mov
jae
mov
mov
insl
cmp
test
xor
jp
sbb
mov
ret
cmp
pop
push
push
pushf
xor
js
adc
push
fiadds
in
inc
mov
sub
addr16
mov
ror
jnp
imul
das
loope
pop
pop
ret
dec
orb
sbb
sub
or
pop
aad
jle
xor
push
fisttpl
stos
rorl
ret
sbb
repz
and
jae
mov
int
lcall
out
outsb
inc
sub
mov
sub
mov
jp
cmp
or
push
push
and
aad
jl
pop
sub
les
push
mov
fcmovb
fs
jo
cmc
sub
imul
insl
inc
loop
leave
mov
in
cld
fdiv
call
cmc
xchg
mov
movsl
iret
adc
les
cmpsb
mov
cmpsl
jle
fsubrl
fstpl
je
cmpsb
dec
cmp
cmc
mov
pop
hlt
and
test
pmullw
inc
in
mov
adc
cs
aas
mov
imul
mov
mov
repnz
cmp
cmp
xor
movsb
dec
sub
push
mov
xchg
jne
push
rcrl
je
pop
push
inc
sbb
mov
cmpb
inc
leave
mov
mov
xchg
adc
clc
cmpsb
sti
repz
xor
xchg
mov
jb
mov
sub
dec
stos
cmpsb
pop
insb
loopne
cmpsb
jg
arpl
sahf
dec
pop
jmp
mov
rcrb
insb
push
mov
inc
xor
je
mov
lods
jns
lds
xor
push
repz
icebp
in
imul
sbb
jg
xor
mov
jg
cmpsl
sbb
pop
dec
popl
push
mov
inc
lds
adc
pop
push
jle
push
out
xchg
cmpsl
mov
pop
fdivl
mov
push
icebp
mov
movsb
push
fs
ja
xchg
es
jns
addr16
jmp
cmc
xchg
xor
clc
shlb
aam
cmp
sbb
fnstcw
inc
mov
sub
sbb
loope
mov
mov
inc
insb
aad
adc
mov
lds
repz
jbe
imul
or
jo
test
or
jae
fidivs
xchg
js
outsl
adc
jne
xor
test
fmul
das
out
repz
xchg
ret
or
loopne
jb
inc
fstl
mov
or
jge
pop
imul
jb
lods
adc
dec
cltd
ljmp
and
outsl
xchg
mov
inc
push
push
fldt
xchg
test
cmpsb
setne
push
out
push
shl
lds
adc
xor
adc
fldlg2
ljmp
xor
mov
sbb
add
mov
mov
sub
js
outsl
lds
cmp
add
or
aad
mov
sbb
fcoms
je
push
arpl
push
cltd
gs
fisttpll
inc
sbb
pop
add
and
dec
out
adc
xchg
clc
push
mov
ret
test
xchg
mov
cmpsl
fstps
cmp
push
sbb
test
cmp
add
jns
cmp
popl
test
aam
outsb
inc
repnz
sti
loope
aaa
and
lcall
lea
xchg
ret
pop
popf
lret
push
push
inc
or
dec
rclb
lods
adc
ja
xchg
imul
xchg
filds
sbb
popa
push
inc
mov
pop
sub
mov
ja
les
andb
dec
dec
rorb
in
or
fnsave
jbe
push
inc
outsl
insb
arpl
mov
hlt
sbb
xor
in
stos
xor
push
decl
mov
or
sub
imul
jne
sub
mov
mov
add
jg
add
xor
push
jge
jmp
jno
mov
cmp
dec
mov
movsl
cmc
jb
dec
std
sbb
pop
cmpsb
mov
jge
fcoms
push
mov
bnd
inc
mov
dec
js
or
xchg
jp
lods
dec
stc
fwait
push
bound
lea
push
dec
jg
pop
xchg
fnstsw
movsl
or
and
xchg
clc
mov
sahf
popa
loop
movsb
jge
inc
adc
push
push
mov
xor
cmp
hlt
imul
outsb
leave
jb
jae
stos
inc
test
daa
mov
xor
pop
fwait
decb
jns
sub
fs
xchg
in
outsb
movb
shlb
sbb
add
and
cmpsl
mov
sbb
xor
aad
mov
leave
test
stos
mov
cmp
add
out
subb
ficompl
out
pop
bound
mov
pop
jne
dec
cmp
pop
mov
decl
dec
lea
or
xlat
push
cmp
push
push
fcomip
cmp
jae
mov
mov
jp
or
push
xor
add
jecxz
faddl
push
out
jo
inc
ret
push
add
sub
shlb
test
add
jae
xchg
xchg
jmp
add
jae
add
sbb
xchg
xor
and
pop
call
sbb
cmp
dec
mov
xor
add
adc
sbb
insl
mov
mov
les
cmpsl
outsb
nop
shl
pop
in
mov
in
or
stos
ja
pusha
dec
test
testb
push
or
mov
dec
cltd
aas
call
jae
sbb
dec
push
jnp
ds
adc
mov
add
sarl
aad
xchg
mov
or
sbb
xchg
push
aas
xchg
jg
mov
or
scas
fsubs
paddw
sahf
xor
sub
pop
sbb
lret
repz
loop
push
sub
jmp
mov
lret
scas
mov
add
outsb
cmp
cmpsl
lret
pop
inc
mov
loop
movsb
dec
in
cltd
or
test
sub
movsl
inc
jl
xor
and
sub
rolb
pop
std
test
loop
xchg
into
loop
movsb
push
imul
out
or
jnp
in
sbb
ss
xor
pop
test
xor
hlt
lods
jno
jnp
inc
icebp
pop
push
push
sub
in
pop
sub
jle
or
cld
movsl
lret
out
shl
lsl
xchg
xchg
xchg
cmp
mov
sahf
and
jno
cs
sbb
xchg
ja
adc
outsb
les
mov
sub
adc
xchg
and
int3
sub
mov
ror
sbb
inc
mov
fisubs
in
cmp
push
enter
nop
xor
mulb
sahf
sub
sbb
fimuls
popa
push
lret
jne
sbb
lea
insl
sub
scas
jne
push
icebp
lcall
iret
adc
push
mov
jp
mov
stc
cltd
fdiv
and
into
pop
adc
cs
cli
mov
sbb
mov
xchg
cmp
divl
rclb
pop
addr16
push
aad
add
ljmp
lret
add
jg
mov
mov
jbe
mov
pop
lock
orb
xchg
in
fistpll
mov
fwait
mov
xor
and
fcomip
mov
push
imul
repz
sahf
inc
out
jp
and
ljmp
std
in
jne
jle
mov
sahf
jle
sub
sti
xchg
lar
lret
mov
out
fbld
cmp
xchg
lret
sub
and
or
icebp
sbb
lcall
lcall
into
icebp
cmp
push
mov
jmp
ret
mov
subl
jno
and
call
outsl
xchg
inc
mov
lds
sti
push
mov
and
pusha
dec
arpl
adc
and
mov
pop
push
push
jno
sub
xchg
out
faddp
cltd
jmp
xlat
int
shl
outsb
dec
aad
orl
in
cmp
jmp
sub
xchg
das
xor
pop
fistps
dec
je
test
daa
cmpb
js
jne
push
mov
jbe
out
icebp
xor
dec
repz
dec
in
or
lods
mov
adc
push
mov
repz
xchg
fcomi
scas
sti
inc
add
xor
movsl
roll
push
pop
xchg
mov
std
push
mov
fidivs
mov
push
incl
call
in
outsb
add
sbb
int3
ds
loop
dec
scas
out
push
cmpsb
or
popf
je
sub
mov
sbb
sub
push
pcmpgtb
shrb
cli
adc
dec
fadds
mov
insb
sub
sub
lahf
mov
pop
inc
jae
es
xchg
mov
or
loope
lret
fisttps
jp
sbb
adc
shr
push
dec
add
mov
dec
adc
add
cmp
mov
inc
cmpsb
mov
sub
cmpsl
or
ds
sub
pop
cmpsb
cwtl
es
xchg
cmp
iret
dec
fcoml
xor
shr
cmc
dec
dec
outsb
aad
gs
inc
imul
test
push
xlat
or
cvttps2pi
cli
in
data16
dec
arpl
inc
mov
test
mov
shrb
arpl
aam
dec
pop
ds
jle
insb
addr16
adc
cwtl
imul
sub
xor
push
jmp
aam
sbb
push
dec
test
popa
mov
bound
lods
stc
xor
inc
sbb
inc
add
mov
mov
insb
sti
pop
call
clc
cwtl
out
pop
icebp
dec
sbb
ja
in
xchg
cli
loope
xchg
and
dec
push
adc
xor
dec
sub
faddl
xchg
subl
shrl
aam
cwtl
add
shr
in
push
lret
nop
stos
sub
push
inc
lcall
mov
mov
push
decb
shll
fwait
pop
int3
add
or
pop
mov
inc
sarl
push
cmc
jbe
outsb
sub
negb
inc
mov
lcall
xchg
fiaddl
in
pop
push
shll
mov
pmaddwd
cmc
add
adc
cmp
cmp
xchg
lcall
popa
out
movl
pushl
pop
xchg
jnp
imul
sbb
icebp
loop
pop
adc
iret
or
mov
push
cmp
test
cmp
pop
imul
and
sbb
outsb
jl
fwait
mov
jne
into
or
and
jo
jb
in
test
mov
sarl
shr
xor
mov
jle
arpl
pusha
xchg
or
lds
arpl
cli
enter
pop
cmp
cmpsb
loopne
imul
lods
aas
fldcw
int3
iret
cmp
xor
imul
add
repz
pop
mov
mov
mov
dec
push
add
loopne
mov
aas
in
pop
pop
inc
lret
cs
xor
xor
and
jl
insl
outsl
mov
inc
adc
pop
jl
jmp
push
rcrl
test
dec
inc
push
or
mov
shll
sub
dec
rorb
mov
cltd
in
and
dec
adc
mov
in
dec
ljmp
adc
out
fcomip
sub
sbb
xor
pop
test
sub
mov
and
jns
jne
sbb
ret
inc
add
ss
mov
aad
test
mov
add
pop
and
cmp
fldt
inc
outsl
subl
jmp
ret
inc
outsb
adc
push
xchg
pop
sbb
fs
loope
jae
mov
rorb
subb
shlb
insb
test
sub
in
in
mov
in
add
dec
mov
dec
pop
in
pop
push
pop
sbb
bound
adc
adc
mov
mov
push
add
stc
jl
push
adc
sub
insl
xchg
and
nop
lret
cmp
aaa
iret
cmpsl
sub
rolb
pusha
dec
pop
mov
mov
mov
outsl
push
cmp
mov
jecxz
fwait
outsb
jecxz
push
aas
mov
adc
mov
inc
cltd
dec
xor
xchg
shl
cwtl
imul
inc
mov
arpl
add
mov
xor
pop
or
cmp
mov
sbb
sub
movsb
jns
pop
mov
outsl
sbbl
icebp
mov
cvtps2pd
mov
jg
xchg
cmp
nop
pop
lods
sar
cli
out
sarl
pop
and
mov
lcall
bound
test
dec
loope
inc
jo
fdivrl
xchg
out
pop
sbb
add
cs
push
push
dec
mov
call
das
cmp
mov
sahf
xor
mov
sar
pop
mov
cmpsb
and
mov
mov
mov
stos
sbb
cmc
push
cmp
mov
icebp
dec
cmpb
popf
cmp
mov
pop
xchg
fbstp
test
shl
jle
mov
jp
stos
xacquire
sub
das
sub
mov
aas
out
pop
xchg
lods
xor
iret
cmp
sub
sub
pop
enter
inc
adc
mov
cs
mov
cmp
mov
lods
cmp
cltd
pop
pop
cmp
lret
test
jp
fisubs
xchg
sub
push
add
shlb
and
or
flds
xchg
les
sub
fbld
addr16
repz
stc
xlat
adc
and
out
mov
lahf
add
sbb
jle
push
loope
mov
iret
push
mov
cltd
mov
push
xchg
stos
mov
xchg
hlt
and
dec
dec
inc
push
ds
add
mov
sub
test
xchg
call
fmull
call
inc
sub
fisttps
scas
pop
inc
mov
pop
and
cmp
pop
jmp
cmpsb
pushl
sub
mov
test
adc
in
arpl
aas
mov
fistl
push
js
xchg
outsb
cmpsb
lahf
dec
cmp
cmpsb
rolb
sarb
pop
push
cmp
les
xchg
fisttps
xchg
mov
sbb
andl
jecxz
sar
cmp
es
hlt
outsb
data16
and
aam
in
inc
ja
cmp
cmp
mull
xor
dec
xor
repz
xor
jecxz
lea
repnz
cld
mov
and
mov
pcmpeqw
xchg
out
dec
sti
daa
jg
or
push
push
mov
add
mov
cmc
scas
imul
mov
jnp
or
and
xchg
loop
push
dec
aam
adc
orb
int
sub
adc
scas
cmp
dec
push
inc
push
inc
sarb
xchg
sub
movsb
sub
mov
cmpsl
popa
xchg
jl
icebp
mov
push
push
rorb
pop
stos
jno
jnp
add
jecxz
fiadds
pop
filds
adc
xor
xor
or
in
cmp
test
pop
jle
call
jae
in
xorb
insl
dec
inc
pop
int
mov
mov
mov
bound
add
movsl
adc
jbe
xor
push
int
cs
mov
ljmp
in
shlb
movsb
aas
add
adc
out
push
in
ret
mov
xor
mov
loope
pop
mov
loop
iret
jmp
adc
pop
movsl
dec
arpl
dec
push
mov
sahf
imul
movsl
sbb
pop
test
popa
push
sub
test
dec
cmp
les
arpl
and
cmp
stos
pop
jns
xlat
daa
test
xchg
imul
fwait
and
cmc
and
and
push
mov
xchg
mov
loope
adc
arpl
mov
pushf
mov
add
dec
testb
mov
dec
dec
fcomps
and
test
lods
pop
mov
cmovo
jns
lea
add
pop
dec
jmp
idiv
lods
pop
iret
mov
cli
in
jmp
xchg
mov
in
mov
test
jb
loop
or
shrb
dec
les
adc
push
ret
call
lock
xor
stc
sub
daa
pop
ret
lock
sub
xchg
dec
sub
into
fsubl
inc
mov
xchg
fcoms
mov
mov
push
andl
and
iret
int
outsb
mov
pop
cld
push
inc
mov
dec
dec
inc
scas
jge
add
nop
movsb
jle
pop
add
in
xor
xor
push
push
jno
es
push
jnp
rorb
push
pop
sub
sbbb
rorb
lahf
cli
mov
xor
fstpt
or
dec
ret
xchg
iret
dec
cld
pusha
lret
xor
adc
jb
notl
lahf
flds
pop
lahf
aad
int
xlat
and
in
shll
inc
rcrb
mov
pop
mov
sbb
jae
clc
flds
std
test
inc
jmp
mov
cwtl
cmpsl
inc
mov
sbb
mov
cmc
xor
daa
xchg
cmc
mov
mov
movsl
lahf
cmp
in
xchg
movsl
decl
inc
lcall
sbb
adc
xchg
xor
fisttps
inc
orl
inc
pop
fimuls
das
insl
cltd
lret
fstpt
xchg
int3
cmp
repz
xchg
xor
fs
aas
mov
mov
es
out
sbb
clc
rcrl
push
xchg
fucomi
pop
cmp
xchg
pusha
dec
sbb
cli
push
loope
ret
dec
cmpsl
ror
repz
inc
mov
mov
loopne
fstpt
imul
push
and
enter
scas
loope
adc
and
lcall
xchg
or
cmp
int3
repnz
mov
je
lods
mov
dec
fwait
jno
ret
stos
add
pop
cs
pop
rcr
xchg
test
std
mov
push
leave
or
jmp
lcall
mov
fwait
dec
adc
enter
mov
jne
jnp
jne
test
mov
inc
ss
and
in
sub
sbb
ret
adc
dec
imul
add
inc
inc
leave
xor
mov
sbb
jne
push
sarl
mov
jp
xchg
lea
addr16
and
mov
xchg
shl
popaw
addr16
stc
inc
sbb
and
push
repz
sbb
adc
dec
dec
push
testl
popa
out
rorl
mov
cmc
mov
sti
test
incl
push
int
inc
lods
sub
aad
daa
xor
mov
xor
cmp
pop
rorb
testb
cmp
std
aaa
pop
repz
push
xchg
fiadds
mov
addr16
lret
adc
dec
jmp
sbb
inc
push
outsl
inc
scas
jb
into
pmaxub
pop
pop
adc
jmp
loope
sbb
jne
sub
out
pop
and
test
stc
aaa
sti
and
ret
jp
dec
out
mov
add
movb
cmp
cmpsl
inc
sub
in
or
ljmp
mov
mov
lea
orl
lds
or
inc
sbb
ret
jo
repnz
or
leave
aas
sarl
jae
lcall
dec
stos
popa
shll
xor
xchg
sub
adc
subb
mov
js
icebp
sbb
sub
sub
dec
cld
mov
xchg
das
xor
popl
mov
fists
stos
and
ret
dec
and
subb
jnp
adc
and
jbe
lret
jae
mov
push
push
popl
ds
inc
mov
jnp
mov
movsl
sub
add
jae
xor
cld
pop
scas
stos
jnp
sbb
inc
inc
lock
movsl
clc
mov
mov
adc
sbb
outsb
ja
push
sub
and
sti
cmp
rorb
je
in
rcrb
adc
stos
mov
cmp
mov
mov
les
dec
push
js
inc
cmp
ja
mov
sbb
loope
mov
cmp
cmp
loop
or
mov
addb
incl
ja
jle
mov
xchg
fcmovu
mov
xchg
sub
xchg
push
test
xchg
cmp
xchg
or
arpl
mov
cmp
pop
cmpsb
mov
push
imul
sarb
or
popa
int
leave
mov
imul
inc
out
xor
popf
push
xchg
cmpsb
fsts
push
call
pop
push
pop
into
jno
lahf
gs
mov
xor
xchg
pushf
loop
sub
sub
pop
jbe
es
cli
loopne
mov
addb
jl
xor
aaa
fistl
pop
pop
sti
stos
jge
jmp
jmp
daa
es
and
mov
cli
adc
bound
aam
repz
push
fiadds
mov
pop
call
out
out
adc
lret
ret
xchg
call
popf
jle
outsl
rcll
mov
and
add
movsl
cmp
out
cmp
push
test
test
dec
lret
and
aad
js
ljmp
mov
sarl
mov
je
pop
push
stos
xchg
clc
les
or
mov
push
lret
sbb
cmp
jp
leave
shll
push
xor
add
adc
clc
iret
or
aam
pop
repnz
dec
pop
sub
shll
push
test
aam
pop
gs
pop
fildll
dec
loopne
adc
ficoml
adc
dec
pop
in
fadd
add
push
xor
dec
mov
pop
ja
int
cmp
pop
inc
pop
cmp
sub
std
cmp
push
jl
sub
movsl
mov
pop
and
nop
sub
inc
jns
dec
rorb
pop
fucomip
push
and
es
xorl
mov
sti
push
inc
or
dec
sbb
inc
mov
stos
xor
enter
addr16
ret
jmp
pop
dec
ror
xlat
xor
js
push
or
pop
sub
sarl
dec
sbb
scas
sti
test
shll
iret
push
xor
xchg
js
jne
shl
inc
das
scas
mov
cwtl
js
shlb
sbb
xor
jbe
add
mov
or
out
mov
or
xor
bndldx
sbb
lock
or
jb
mov
addr16
call
push
add
xchg
xchg
ds
jb
out
dec
cmp
pop
xor
fisttpl
scas
data16
pop
gs
dec
loop
inc
cmp
nop
and
and
inc
jge
rorl
mov
sbb
jo
stc
sub
mov
sahf
movsl
cmp
push
lcall
into
std
ds
mov
mov
cmp
pop
sarl
rcr
cmp
in
notb
jge
xor
cmpsl
movsl
push
sarb
jg
sbb
mov
and
into
mov
add
ja
movsl
loope
adc
lea
int
into
xchg
pop
xchg
jbe
sahf
cmp
js
mov
push
push
ds
rcrl
dec
mov
jo
inc
cmp
push
mov
cmp
mov
iret
daa
pop
lret
mov
push
mov
fwait
ret
xor
aaa
push
adc
pop
jne
std
out
sub
mov
cmp
xor
dec
cmp
sbb
por
inc
scas
adc
mov
lret
sub
xchg
add
push
loop
push
and
out
xchg
stc
jge
mov
mov
je
dec
sub
pop
mov
sub
push
inc
push
push
imul
sbb
push
xor
imul
xor
push
stos
mov
sbb
xchg
xlat
clc
movsl
cmp
mov
inc
push
jo
loopne
ljmp
mov
push
fwait
dec
mov
mov
mov
pop
mov
adc
scas
pop
rcrb
imul
push
mov
jnp
test
repz
sub
mov
inc
addr16
push
sub
addr16
mov
jae
dec
movsl
sbb
and
or
dec
push
rclb
xchg
and
cmpsb
mov
xchg
fmul
jmp
cmc
xor
repnz
sub
lret
fsubl
push
push
gs
sbb
add
xor
into
insl
repz
scas
out
pop
shlb
and
xor
xor
loope
sbb
out
cmc
pop
lods
imul
push
push
loopne
jbe
in
jecxz
push
out
sbbl
push
loope
lock
pop
fisttps
insl
jo
cli
frstor
outsb
mov
sbb
mov
jno
mov
fidivrl
test
mov
aas
sub
clc
cmc
lds
sbbb
pop
inc
mov
pop
xchg
mov
imul
push
in
adc
mov
mov
scas
sub
dec
out
xchg
xchg
push
xor
ret
pushf
xor
adc
call
and
mov
popf
dec
lds
out
popa
inc
aas
dec
nop
ja
cmp
dec
std
mov
fptan
mov
mov
inc
mov
xchg
mov
outsl
push
mov
sbb
or
inc
push
sub
xchg
adc
aaa
fcmovnu
mov
xchg
sub
hlt
rcll
xchg
jp
push
or
inc
cltd
add
aad
fcoms
sub
adc
push
adc
ret
out
add
clc
lret
cli
loope
mov
xchg
lods
pop
inc
sub
xchg
sbb
jl
in
adc
out
loope
jge
loope
inc
sbb
adc
xor
cli
movb
sbb
push
imul
shlb
cmp
sbb
arpl
add
aad
and
icebp
mov
pop
jmp
push
outsl
fistps
pushf
fisubs
les
fdivrs
or
cmp
mov
add
clc
fistpll
movsb
in
pop
cwtl
or
xor
mov
das
sbb
mov
mov
jg
push
les
mov
jmp
sahf
fs
pop
es
inc
pop
xor
or
ror
pop
pop
dec
daa
sbb
clc
fs
push
cmpsb
inc
adc
or
stc
cmp
std
add
shr
mov
enter
mov
mov
pop
popa
mov
or
mov
adc
and
cmpsl
aad
bound
loopne
jbe
xchg
xchg
inc
test
mov
sbb
in
and
sbb
add
das
jne
popf
scas
push
cmp
popf
and
pop
push
lea
push
mulb
es
push
sarb
rcrb
push
rclb
add
popa
mov
sbb
aad
shll
test
lods
fs
icebp
sub
lods
sbb
sub
mov
sbb
adc
mov
xchg
mov
add
xchg
push
xor
leave
xor
stos
xor
nop
xor
jbe
stos
xchg
xchg
dec
jmp
push
frstor
cmpsb
addr16
and
mov
sub
sbb
cmp
cltd
pop
mov
sbb
cmp
xchg
out
jmp
pop
fdivp
jno
lcall
mov
fisubs
in
fsubr
mov
cmp
icebp
jg
in
ja
cltd
sbb
in
xor
aas
adc
adc
pop
adc
loopne
mov
cld
sbb
xchg
jg
je
inc
addr16
out
addr16
mov
insl
addr16
dec
push
pop
cmpsb
sub
mov
leave
jge
xor
ret
push
fbstp
xor
jge
test
test
loop
call
hlt
inc
add
lcall
sbb
popf
lcall
bound
mov
cld
ret
push
mov
cmp
inc
add
mov
aaa
pop
jmp
push
or
adc
jae
adc
sbb
in
std
andl
call
xchg
cmp
inc
imul
adcl
mov
lret
pop
jecxz
arpl
ja
mov
jecxz
jae
mov
dec
cmp
pop
dec
and
inc
cltd
adc
inc
xor
mov
inc
ljmp
iret
sbb
data16
cmp
mov
xorl
jb
sbb
inc
mov
cmpsl
call
push
das
jno
flds
and
push
stc
fwait
insb
mov
mov
stos
pop
pop
mov
cmp
jge
jg
dec
cmp
add
add
scas
out
data16
or
push
ja
sbbb
mov
fbld
dec
movsl
push
rolb
adc
pop
cld
pop
push
ret
xchg
ret
retw
std
inc
mov
push
push
or
sbb
aas
orl
xor
push
mov
scas
cmp
outsb
test
enter
stc
lret
fdivrl
test
adc
mov
adc
addl
sbb
jo
aam
push
test
in
gs
arpl
mov
test
cmpsl
pushf
sbb
fidivl
mov
inc
fs
inc
add
adc
dec
imul
addr16
aas
mov
jl
or
or
ja
jge
and
pop
arpl
hlt
cmp
jmp
pop
jg
adc
inc
push
xor
inc
fwait
daa
or
inc
push
ficomps
js
aam
cmp
rcrl
dec
pop
inc
fisubs
mov
xchg
push
pop
mov
cwtl
jp
test
out
push
orl
es
add
mov
pushf
xlat
jmp
or
outsb
sub
enter
lret
jge
cmp
xor
add
aam
aaa
pop
leave
rol
jns
adcb
push
dec
xchg
or
jmp
sub
aad
imul
iret
fidivl
or
xchg
into
repnz
mov
xor
and
int
and
call
pop
sub
fimuls
push
push
push
scas
outsl
mov
adc
cltd
arpl
mov
jne
xor
sti
mov
jns
add
lret
scas
bswap
cwtl
ffree
imulb
insb
idivl
cli
inc
xorb
jae
shlb
lret
add
ljmp
sub
xor
out
lcall
in
sbb
in
out
jmp
aam
pop
dec
add
imul
mov
lret
inc
lcall
mov
cli
xchg
cmp
push
push
sbb
add
enter
xchg
sar
adc
jl
daa
loop
stos
push
mov
std
inc
mov
arpl
inc
addr16
hlt
add
loope
fistl
pusha
push
das
ret
into
or
jbe
xor
call
and
mov
fwait
pop
fwait
push
and
cmp
rolb
mov
divb
das
nop
enter
inc
cmc
call
lds
out
mov
jl
xchg
mov
inc
mov
xorb
sti
push
mov
sub
shlb
mov
in
dec
aam
dec
push
mov
sbb
jle
mov
add
xchg
fs
ficoml
movsb
mov
test
push
int
fidivl
mov
in
jb
outsl
push
mov
in
xchg
xor
sub
xor
push
int
sub
into
push
push
inc
cmpb
lods
jg
xor
lahf
stos
popf
adc
xor
imulb
dec
in
sub
fadd
push
aaa
aas
xchg
ret
mov
int3
adc
push
cs
xchg
push
inc
lahf
add
sbb
into
pop
arpl
sub
mov
adc
sarl
push
int
ljmp
mov
push
popf
pop
mov
xor
cmp
popf
xchg
mov
nop
ror
dec
mov
jbe
imul
fcomp
push
push
xchg
push
sub
aad
jne
loop
lods
push
scas
jecxz
imul
ljmp
pushf
push
push
xchg
outsb
addr16
cmp
fistps
in
mull
or
xor
mov
sarl
push
jge
fwait
push
dec
or
mov
bound
lea
or
ret
lret
xchg
out
push
or
xor
mov
in
outsl
inc
xchg
lds
jmp
adc
ret
divb
sbb
cwtl
jmp
sub
sbb
popa
push
dec
inc
out
outsb
adc
test
test
push
add
jl
dec
pop
and
je
movsb
aaa
test
leave
jp
pop
popl
mov
cmp
jg
lds
enter
sub
mov
arpl
cmp
mov
fwait
into
popf
inc
sti
lods
sub
call
or
inc
mov
insl
loope
movsb
jnp
pop
clc
or
sarl
adc
jo
adc
sbb
jl
jmp
jne
aas
mov
lahf
and
jbe
arpl
add
das
cmp
pop
adc
xlat
cld
mov
es
iret
adc
mov
test
scas
adc
xor
insb
inc
divl
in
int
jo
int3
adc
dec
sub
and
pusha
icebp
stos
in
adc
test
or
jno
sbb
je
or
push
push
jnp
ja
inc
push
jnp
out
cmc
lea
pop
mov
incl
jae
adcl
cmp
mov
cs
mov
int3
jmp
mov
movsb
jle
js
rclb
cld
sbb
pop
xlat
pop
sbb
fstl
call
xchg
cld
xchg
and
pop
push
mull
loop
inc
fstpt
adc
pop
iret
mov
inc
popa
scas
add
ss
push
push
xchg
movsb
add
mov
rclb
jns
sub
clc
mov
loop
lahf
dec
cmp
jmp
sbb
xlat
out
dec
int3
cmp
rcrb
hlt
aad
cmp
stos
int
sub
jno
shl
jbe
loope
test
cmp
imul
shlb
rcrb
insl
es
inc
sbb
pop
sbb
stos
add
or
pushf
out
dec
orb
popf
jle
and
and
jle
aad
pushf
sub
mov
fisubrs
mov
repnz
mov
cs
enter
dec
mov
or
add
adc
loop
ret
and
hlt
cld
icebp
ja
inc
stos
or
and
mov
xchg
cltd
pushf
pop
ficoml
insl
fwait
cmpsl
enter
sub
jmp
xchg
pop
loop
mov
xchg
xor
movsl
and
cmp
sub
xchg
jno
push
add
pop
nop
imul
mov
fadds
add
lods
popa
aam
ss
xchg
stc
movsb
jb
stc
or
jecxz
push
ja
stc
mov
mov
call
ffreep
adc
out
add
sbb
aaa
pop
mov
cwtl
jno
mov
jle
mov
pop
aam
and
mov
push
mov
dec
fnsave
repnz
fisubrs
fisttpl
sbb
mov
pop
dec
lock
loop
cmp
jp
push
jp
faddl
jle
repnz
decb
arpl
add
cli
sub
cwtl
hlt
jmp
inc
push
aam
stc
loopne
stos
stos
cli
aas
dec
sub
lcall
lahf
notb
in
and
jge
lods
fiadds
cmpsl
add
xchg
mov
sti
js
stc
or
mov
inc
push
subb
lds
cmp
mov
outsb
jg
mov
inc
mov
pop
call
pop
inc
cs
sub
jae
int
inc
pop
in
int
lds
stos
lahf
cmp
push
iret
adc
fiaddl
cltd
insb
mov
xor
idivl
mov
mov
iret
pushf
add
mov
sbb
adc
jg
inc
fists
and
ret
ljmp
dec
rorb
push
in
pusha
push
out
test
daa
notb
sbb
or
xchg
cmp
inc
push
cli
cmpsl
ss
sub
mov
sahf
fldenv
lock
xchg
mov
imul
mov
insb
shll
pop
and
in
lods
dec
jmp
xchg
test
mov
sub
stos
add
inc
stos
xchg
adc
repz
ljmp
xchg
hlt
or
sbb
in
in
adc
dec
pop
in
arpl
es
insb
iret
sbb
lock
fstpt
mov
repnz
fistpl
jno
out
loopne
ficompl
pop
adc
bound
nop
nop
outsl
jmp
cmp
dec
js
mov
stc
jge
sbb
cs
push
sub
js
cmpsl
addl
inc
imul
outsl
pop
inc
xchg
rclb
movsb
cmp
mov
mov
and
aad
sahf
pop
scas
adc
roll
inc
mov
movsb
rcrb
inc
dec
inc
seta
mov
pop
lods
in
jge
or
dec
inc
scas
repz
sub
mov
int3
jne
jecxz
cmovae
ret
mov
adc
pop
add
pop
enter
lods
cmp
cmp
cmp
fucomip
sbb
repnz
cltd
fldl
sub
xor
push
fistpl
rcrl
xor
jnp
adc
or
cmp
cld
inc
fstpl
push
push
dec
sbb
inc
jg
sbbl
push
jg
lea
into
iret
cmp
int3
xchg
cmc
xor
fucomip
testb
shlb
inc
pop
or
movsb
loope
dec
imull
cltd
mov
cmp
movsb
sbb
fwait
cmp
push
in
repz
ds
mov
inc
ss
aad
ja
arpl
call
add
and
mov
mov
mov
aam
cmp
fstpt
cmpsb
xchg
add
cmp
leave
xchg
adc
jb
loopne
rcll
jnp
loop
xchg
sti
xor
xchg
pop
jg
adc
and
push
popa
mov
add
in
cmp
adc
repnz
sbb
unpcklps
cmp
mov
dec
mov
shl
dec
push
jnp
xchg
sub
sub
push
dec
xchg
dec
inc
hlt
lret
cmp
cli
hlt
adc
lret
mov
xchg
add
jle
xlat
data16
test
subb
in
and
mov
inc
pop
fldt
push
scas
fisttpll
xchg
mov
outsl
pop
push
dec
dec
mov
scas
mov
out
jge
mov
cltd
xor
sub
mov
jns
mov
nop
xor
fiaddl
cmpsb
or
loope
dec
cmp
add
push
or
out
jge
out
mov
xchg
stos
push
out
test
and
push
push
push
mov
add
nop
inc
mov
mov
out
repz
cmp
cmp
daa
dec
jp
call
in
out
cmp
jmp
addb
insb
cli
mov
xchg
pop
jmp
daa
and
and
movsb
adcb
clc
sarl
repnz
ficoml
lret
incb
clc
pop
cmp
out
das
cmp
cmp
iret
xor
and
mov
lcall
jo
cmpsl
daa
leave
mov
cmp
aaa
pop
mov
mov
aad
addl
push
insb
cmp
jmp
xor
repz
cmpl
or
mov
or
nop
push
and
fwait
clc
add
fists
cmc
cltd
jno
test
cld
xor
ljmp
std
adc
jg
xchg
sahf
iret
popf
push
cmp
testl
adc
xor
bnd
pop
mov
cld
mull
jo
dec
out
test
cli
push
popa
mov
mov
add
call
pop
or
test
cmp
or
xor
sbb
sub
cltd
mov
or
bnd
jae
mov
xchg
aas
xchg
mov
iret
rorb
inc
shrb
call
mov
cs
xor
push
hlt
inc
test
sbb
xchg
ret
insb
scas
test
dec
std
bound
andb
xchg
jecxz
adc
int3
aas
mov
xchg
cmpsl
xor
cmp
mov
push
adc
int
and
inc
inc
cmp
mov
lds
lods
adc
mov
inc
scas
aad
dec
and
loop
add
jo
outsl
movsb
push
add
jne
sub
mov
dec
add
test
or
stc
pop
leave
inc
pop
fldl
scas
mov
mov
mov
cli
xchg
jmp
pop
loopnew
adc
lahf
dec
xor
ss
sbb
daa
sbb
mov
sbb
dec
or
sub
pop
sub
mov
scas
push
repnz
leave
adc
les
arpl
je
adc
fs
push
ja
pop
adc
test
lods
inc
pop
out
int3
in
js
les
push
imul
loopne
aam
xchg
jg
sahf
pop
xchg
or
loop
insl
ret
mov
cmpsl
mov
xorl
cwtl
ficompl
lcall
mov
sti
testl
daa
add
and
leave
outsl
jp
popf
or
sbb
mov
or
xchg
or
lea
push
rclb
adc
jg
jl
stos
jae
vmovhpd
stc
inc
mov
and
mov
ljmp
ja
dec
mov
adc
int3
loopne
les
adc
cmpsb
ja
mov
inc
inc
or
push
icebp
xchg
jno
and
cmc
jae
loopne
or
push
mov
icebp
xchg
push
mull
mov
mov
xchg
enter
cmp
ljmp
ljmp
sub
sarb
mov
adc
jns
pusha
dec
leave
pop
aas
adc
sar
mov
jl
mov
pop
xlat
into
arpl
jle
sahf
push
xchg
jbe
dec
fisttpl
xchg
repnz
adc
mov
stos
sub
fisubs
test
xlat
lahf
enter
jge
nop
pop
mov
in
out
pop
pop
movsl
stc
cmp
jbe
mov
jecxz
xlat
daa
or
mov
orl
cmp
add
mov
jo
test
test
sbb
xchg
rcl
jne
push
mov
inc
push
mov
daa
stos
dec
scas
mov
xchg
adc
movsl
lcall
fidivrl
adc
divl
into
aas
test
aad
imul
xor
pop
cmp
mov
or
and
rorl
push
stc
jo
inc
addr16
pop
lret
ficoml
icebp
scas
xchg
pop
mov
imul
inc
mov
call
test
adc
in
sbb
jns
jmp
lods
xchg
mov
jl
pop
ss
pushf
popf
or
fmull
mov
fisttpll
movl
out
sbb
or
lock
sub
in
mov
push
cli
jne
loope
adc
or
icebp
popa
mov
lea
pop
loope
or
xchg
cmpsl
inc
stos
jnp
mov
jns
popa
ljmp
inc
and
pushf
sbb
and
cmp
xchg
cmp
dec
add
mov
or
mov
and
fistps
and
mov
repnz
inc
or
jno
lds
testl
push
enter
lahf
call
pop
into
sbb
adc
adc
cmpsb
scas
outsl
loope
mov
jno
lahf
outsb
enter
cmpsl
add
pop
inc
lea
adc
stc
push
daa
movsl
sub
jg
pop
ds
scas
aas
and
into
and
mov
jg
mov
add
hlt
out
ds
aaa
push
scas
mov
cmp
push
mov
int3
test
popf
xchg
insl
inc
sbb
push
xchg
mov
lret
cli
dec
pop
cmc
in
dec
das
sub
frstor
imul
sbb
das
or
stos
popf
xchg
xor
addb
outsl
loopne
ja
and
adc
adc
mov
pusha
je
iret
mul
pop
call
loope
sbb
mov
roll
jne
mov
divb
inc
and
cli
adc
cmovbe
data16
orl
mov
mov
xor
aaa
aad
incb
mov
and
inc
cmp
push
inc
mov
sub
mov
js
inc
sub
push
fsubs
rcl
jno
lea
adc
cmp
cmc
into
repz
pop
xor
data16
inc
data16
push
cmp
nop
addr16
xor
ds
into
jecxz
lods
push
fimuls
rolb
adc
loope
pop
sub
stos
or
popa
inc
imul
outsl
sbb
cmp
data16
mov
dec
imul
out
cmp
sti
rcrl
push
out
clc
jl
lahf
pop
and
jo
xchg
mov
pop
fnstcw
pushf
dec
sub
clc
inc
or
ss
scas
inc
out
rolb
lcall
pushl
daa
shlb
nop
sbb
clc
mov
push
test
sub
lahf
int
mov
cmp
lods
push
xchg
xchg
je
cmp
int3
popl
cmp
mov
movl
rcrb
xchg
insl
scas
sbb
fdivrl
dec
out
dec
addr16
adc
push
in
outsb
out
shll
pop
lock
int3
pop
jg
adc
or
imul
gs
je
mov
sub
stos
jno
imul
scas
leave
jo
rcll
sub
popa
cmp
hlt
pop
mov
fbld
notb
mov
dec
rorl
popf
pop
jo
ret
and
pop
mov
scas
dec
mov
fwait
enter
lahf
inc
aaa
pop
test
xor
or
ds
dec
clc
inc
or
mov
sbb
cmc
or
lcall
popa
jns
mov
in
adc
call
in
lcall
data16
cmc
dec
rclb
xchg
or
ret
cld
adc
sbb
xor
inc
xchg
push
xor
or
lahf
pop
test
iret
inc
xchg
push
cmc
xchg
sub
es
xchg
mov
dec
into
lock
jae
mov
jg
sub
repz
imul
mov
mov
jnp
push
inc
scas
jns
or
mov
push
cld
loop
sub
repnz
and
xor
movsb
dec
fs
in
leave
mov
popa
push
pop
clc
inc
aad
and
push
cmp
mov
xchg
pop
sbb
push
mov
loopne
adc
xchg
xchg
enter
leave
orl
stos
in
sub
push
ds
and
imul
mov
add
imul
mov
mov
push
loope
stos
cs
ret
pop
mov
sub
imul
icebp
xchg
mov
xchg
aad
cli
xor
and
dec
add
mov
sub
popf
in
dec
xor
cmp
cmp
mov
fstps
jge
jae
xor
lods
decb
pop
pop
adc
scas
addl
xor
or
pop
out
mov
ss
sub
into
sub
inc
adc
fisttps
jmp
push
jge
jmp
imul
mov
arpl
dec
push
pop
fdivrl
je
int
rolb
inc
dec
fdivl
mov
dec
loope
xor
adc
fwait
sbb
xor
hlt
adc
pop
stos
gs
les
stos
xchg
cmp
jmp
sti
stos
addr16
out
cld
and
loope
pusha
add
int3
adc
insl
push
mov
or
lcall
sub
insb
outsl
push
sti
cwtl
cmc
lret
sbb
in
movsb
cmpl
push
push
popf
imul
dec
or
pop
fiaddl
cmp
ficoms
imul
jae
or
dec
adc
loop,pn
push
out
xlat
push
sbbl
ffreep
pushf
test
shlb
add
out
add
sbbl
jb
les
es
mov
pop
out
dec
adc
lods
fnstsw
inc
aad
mov
cli
mov
das
addb
int
aas
cmp
dec
dec
sbb
cmp
int3
push
sub
outsb
int3
jge
das
add
or
insb
add
inc
shll
repnz
fsubrl
push
jb
in
call
loopne
aad
test
xchg
call
arpl
mov
ret
lea
push
push
mov
ja
and
mov
jmp
sti
addl
sbb
push
lds
adcl
xchg
lds
in
in
inc
push
add
dec
xchg
add
mov
add
jns,pn
stos
jo
pop
push
mov
fidivrs
inc
pusha
and
mov
imul
aaa
dec
rcll
mov
test
sbb
fmull
sub
jp
fisttpll
adc
mov
popf
fstpt
loope
mov
cli
sub
dec
and
fldt
sub
sub
adc
dec
adc
cmp
aam
pop
sbb
mov
and
loop
dec
cmp
mov
mov
gs
fsubl
and
lock
nop
pusha
pop
ds
mov
popf
mov
inc
push
xor
jb
jb
fdivrs
adc
add
call
push
jge
push
push
cmp
nop
int
push
ret
fiaddl
xchg
dec
sbb
leave
mov
mov
test
dec
shrl
fisubs
lods
test
fstps
arpl
mov
in
jb
push
mov
in
ljmp
jne
jns
in
pop
loope
push
sub
push
addb
xor
sub
aam
xchg
lods
adc
rolb
mov
dec
inc
jo
dec
mov
mov
lds
mov
jle
or
cmp
jo
fadd
pop
imul
movsl
push
jb
fsubr
enter
pop
ljmp
xchg
int3
adc
nop
and
xchg
xchg
sub
aas
mov
popa
fs
sub
xor
push
test
testl
jmp
call
fsubrl
es
jecxz
ds
cmp
clc
mov
addl
jl
int
inc
in
mov
aam
adc
scas
rorl
xlat
ret
andb
xchg
mov
jp
pop
dec
dec
xchg
xchg
push
pop
jo
xchg
add
inc
mov
jb
jmp
mov
add
jns
jmp
inc
sbb
daa
out
push
add
adc
pop
jmp
add
mov
clc
popf
mov
xchg
or
orl
in
cltd
vpshlb
adc
arpl
out
in
orl
mov
sti
pop
mov
cmp
sbb
into
sti
negb
data16
stos
and
push
and
cmc
ja
pop
dec
cmp
cli
fwait
and
mov
movsl
enter
inc
dec
mov
nop
xor
iret
es
mov
cmpsb
sbb
mov
push
cmp
icebp
les
mov
mov
pop
pop
jge
pusha
out
cs
xor
mov
rcrb
jl
add
mov
int3
xchg
sub
mov
pop
add
shl
inc
cmp
jl,pn
rcr
cmp
push
test
and
js
cmp
and
fidivl
test
jmp
fidivrs
sbb
jle
and
js
sbb
scas
xor
stc
insb
dec
pusha
sbb
mov
dec
ret
decl
jmp
xchg
jecxz
ja
nop
add
ljmp
mov
subl
inc
fildl
stos
aaa
push
cmpsb
inc
in
cli
add
pop
dec
icebp
push
pop
aaa
mov
inc
cs
sbb
inc
adc
xor
inc
jmp
lock
mov
loop
leave
xchg
loope
mov
jnp
mov
mov
ds
imul
js
sub
subl
mov
ljmp
xchg
mov
jb
movsl
and
mov
jno
pop
lea
mov
scas
fidivs
lret
sbb
gs
les
inc
fmul
leave
pop
div
stos
lcall
leave
int3
mov
xchg
sbb
mov
or
xchg
cli
cltd
xorb
jo
es
js
rclb
inc
js
int3
into
fsqrt
fbld
add
fistpl
inc
xor
dec
mov
lret
push
ss
jle
sbb
push
jb
cmp
in
cmp
sti
mov
lods
inc
add
mov
dec
inc
movsl
mov
dec
lahf
out
lods
movsl
fists
cmp
push
cld
jbe
xchg
fildll
enter
mov
test
xor
addr16
test
push
call
enter
xchg
pop
lret
jl
dec
movsl
push
fld
repnz
adcl
adc
in
repz
lcall
pop
add
addr16
stc
std
out
inc
loopne
sub
xor
xor
cwtl
xchg
push
sbb
clc
jecxz
push
dec
cmp
pause
jl
xor
jp
fstpt
jno
mov
mov
ja
bswap
jae
pop
in
mov
adc
iret
popf
xor
mull
cmp
jno
clc
adc
out
dec
cmc
cmp
jno
mov
lods
repnz
fs
mov
int3
nop
mov
or
pusha
inc
dec
sbb
pop
fs
mov
jne
pop
cmpsw
push
pop
adc
cmp
mov
lock
int
mov
lret
mov
jg
add
dec
xchg
psrlq
mov
sbb
popa
leave
mov
into
popf
cmpsb
jns
inc
sub
mov
lds
orb
sub
aas
test
and
pop
dec
cli
sti
aam
shll
popf
push
push
fwait
lahf
jnp,pn
xchg
xchg
into
dec
jmp
repz
stos
push
mov
mov
pop
addr16
xor
mov
pusha
cmp
loopne
scas
jge
push
xchg
mov
xor
dec
incb
stos
aam
dec
sbb
inc
outsb
jge
or
pop
push
test
or
insb
jne
cmp
jg
and
ret
and
lods
cwtl
push
cmp
xor
mov
jle
lret
inc
sahf
add
clc
les
stos
mov
mov
into
cltd
std
xchg
mov
aaa
cmp
inc
lcall
jecxz
loopne
push
imul
add
add
mov
mov
es
xorl
mov
push
jecxz
lcall
test
test
outsl
xor
push
rcrb
aad
and
xor
pop
call
xchg
add
gs
leave
andl
and
xor
outsl
inc
ja
in
imul
stos
movl
mov
sarb
test
cmpsb
dec
xchg
mov
pop
aaa
sbb
cmp
hlt
sub
incb
mov
adc
outsb
mov
lods
call
in
adc
dec
jmp
call
mull
outsb
sbb
lret
inc
stos
jbe
out
jne
pop
cmp
pop
je
aas
add
mov
lahf
pop
fists
inc
pop
repz
or
push
scas
mov
pushf
push
movsl
lods
test
mov
icebp
sub
dec
hlt
adc
sbb
push
push
out
cmp
xor
pop
jecxz
or
xchg
sub
dec
pop
add
orb
and
pushf
xor
cmp
push
stos
pop
inc
addr16
cmp
faddl
cli
gs
scas
gs
fs
das
cmpl
das
mov
mov
mov
sub
aad
lret
sbb
sbb
lret
subl
aam
fwait
xor
mov
or
std
inc
push
adc
cmp
jecxz
inc
mov
daa
sbb
sbbb
push
fcmove
push
cmp
or
int3
pop
mov
mov
loop
test
xchg
pop
cmpsl
mov
sahf
pop
and
mov
bound
and
repz
xchg
mov
pushf
dec
bound
or
test
repz
icebp
roll
divb
ja
std
iret
mov
push
mov
mov
sti
dec
dec
mov
loop
mov
mov
mov
sbbl
pop
or
adc
adc
aas
outsl
lahf
cltd
sub
fidivl
imul
cmp
rorb
or
sub
xchg
test
inc
jmp
icebp
imull
and
call
mov
leave
aam
lds
sbb
mov
mov
idiv
add
push
xor
push
inc
adc
ret
sub
pop
cmpsb
shll
divb
push
or
dec
nop
loope
inc
add
insl
je
bound
dec
push
and
loop
sbb
icebp
cld
fisubs
jmp
mov
loop
iret
daa
popa
jecxz
jecxz
lret
mov
inc
push
call
pop
out
dec
push
in
insb
movb
sub
jnp
fistps
mov
fimuls
mov
push
loop
push
adc
push
data16
test
aad
arpl
ret
cld
jns
outsl
push
push
push
and
sub
ja
add
and
sub
or
adc
arpl
xor
rcll
outsb
push
outsb
popf
addb
push
jnp
sub
xor
jle
jmp
sbb
daa
in
imul
outsl
jmp
and
jae
scas
shrl
subb
push
mov
in
add
xorb
roll
ret
inc
mov
and
setnp
mov
hlt
push
xor
mov
push
dec
cwtl
sub
gs
ficoms
jle
pop
dec
mov
sub
dec
pop
hlt
pop
mov
xor
mov
or
outsb
les
popa
jmp
mov
push
mov
ljmp
lret
dec
cli
cwtl
repz
ljmp
dec
push
cmpsl
cwtl
lret
fmulp
aam
insb
movsl
mov
test
fiaddl
test
inc
arpl
push
aam
xorb
push
mov
mov
mov
sbb
arpl
jp
push
sti
jbe
xchg
inc
test
clc
jns
mov
aad
jle
lds
out
and
mov
mov
mov
push
dec
jns
pushf
fdivl
xchg
ss
mov
jo
int3
movsb
and
jg
iret
sub
test
fcmovnb
dec
enter
and
imul
mov
test
int
in
mov
jl
arpl
push
daa
sub
mov
cmp
mov
mov
outsb
push
stos
mov
aas
pop
mov
xlat
xor
cli
scas
fwait
daa
cwtl
fs
xor
inc
test
adc
inc
sti
pop
adc
sub
cmp
aam
es
mov
dec
sbb
jg
mov
fs
push
orl
dec
mov
rorl
xor
xchg
mov
mov
inc
movsb
push
jo
in
jle
jns
and
setl
jmp
cmpb
imul
int
cmp
mov
arpl
in
xor
push
xor
sahf
xchg
lock
addr16
testb
jl
rcrl
popa
fnstenv
mov
mov
cmc
fiaddl
iret
cmp
fcomi
aaa
out
scas
xor
in
inc
add
ss
inc
push
mov
xchg
pop
xor
ljmp
mov
jb
lock
int
imul
inc
loop
sub
sbb
js
outsb
push
outsb
jmp
xlat
push
xchg
pop
scas
mov
imul
mov
in
or
or
loopne
adc
sub
das
outsl
pop
pop
dec
in
pop
pop
test
sub
dec
cmpsl
insb
mov
push
or
int3
jmp
xchg
xchg
mov
jge
mov
mov
sbb
dec
and
scas
fsubs
stc
xchg
and
ja
outsl
enter
mov
idivb
out
aas
mov
jbe
loope
lea
mov
mov
int
scas
sub
mov
fisttpll
out
pusha
sbb
dec
cmpsb
stos
outsb
cmp
movsl
xchg
jmp
mov
daa
inc
inc
int3
popa
lret
imul
sbb
or
cmp
sbb
mov
cltd
not
add
outsb
decb
pop
pop
mov
jle
inc
jo
sbb
popf
inc
sub
insl
xchg
push
jg
mov
xchg
pop
mov
push
loop
jmp
mov
dec
add
jb
iret
cmp
mov
roll
fsubl
outsb
pop
fnstsw
push
cmpsl
ret
ret
cmpl
gs
add
aas
sub
mov
pop
dec
sub
stc
xchg
aam
sbb
mov
das
sub
dec
lea
sub
jae
jb
leave
push
xchg
dec
or
cmp
aam
enter
sub
mov
mov
dec
jno
dec
xchg
int
lds
ss
lcall
mov
js
mov
sub
xlat
adc
jp
jo
in
imul
mov
sbb
hlt
les
inc
jb
pop
out
je
add
je
or
jno
outsl
jbe
mov
out
lret
inc
pop
mov
rol
rcr
mov
mov
pop
outsl
je
push
mov
mov
and
mov
push
call
xchg
ja
or
xchg
ds
push
fstpl
in
loopne
mov
adc
ja
or
mov
decl
jae
shl
scas
inc
pop
imul
shlb
push
pop
sbb
fs
inc
movsb
pop
mov
sbb
pop
je
or
pushf
xor
sbb
in
jne
sbb
fistpll
mov
add
jbe
aas
mov
xchg
add
stc
mov
insl
xor
ljmp
aas
sub
addr16
je
test
or
cmp
pop
or
scas
pop
pop
xchg
popa
insb
inc
and
stos
adc
mov
leave
out
sub
repnz
pop
inc
pusha
sti
mov
push
push
fildl
imul
int
data16
mov
ljmp
dec
or
adc
arpl
xchg
je
rcrb
mov
lcall
add
sub
mov
adcl
cmpsb
push
test
pop
jo
xchg
dec
in
in
cmp
dec
shlb
sub
push
jns
in
std
cmp
inc
jnp
xchg
adc
mov
outsb
or
inc
push
out
insb
mov
sbb
add
push
push
mov
roll
lds
jnp
lret
cmp
jge
in
mov
in
std
sbb
data16
inc
pop
add
xor
aaa
adc
xor
test
outsl
cmc
xchg
test
mov
sbb
sti
cmp
lcall
dec
or
add
loope
jne
clc
cmc
or
xorl
jne
sbb
stos
sbb
arpl
loope
mov
xchg
retw
lods
andb
ss
inc
pop
inc
jg
loope
mov
mov
push
cmp
jg
leave
shrb
bnd
decb
mov
mov
jns
cmp
sub
adc
and
lock
ljmp
cmp
cmpl
icebp
push
mov
jmp
adc
pop
punpckhdq
enter
lret
mov
adc
push
iret
cltd
scas
orl
and
insb
mov
jbe
addr16
stos
sbb
sub
mov
out
mov
fdivs
sub
cltd
xchg
gs
push
std
inc
mov
dec
xor
mov
dec
and
mov
mov
aaa
int
fwait
inc
lock
push
jmp
out
out
pop
mov
sub
scas
xchg
xchg
xor
sbb
daa
test
jg
ss
hlt
add
sub
inc
mov
pop
mov
test
mov
out
mov
add
jp
jg
lret
lret
sub
mov
into
inc
incb
xchg
ror
jecxz
in
imul
jl
and
mov
pop
inc
jge
xchg
mov
jb
xchg
xor
adc
popa
call
dec
jl
pop
pop
addr16
pop
xlat
divl
or
hlt
aad
and
cld
push
or
adc
or
xor
bound
or
ret
xor
enter
pop
pop
xchg
pop
subb
push
popf
sbb
jnp
dec
cli
adc
in
cmpsl
xchg
push
out
es
xchg
mov
cmpsl
testl
mov
call
loop
inc
push
xchg
pusha
xchg
pusha
xchg
xlat
cmp
lret
mov
mov
pop
hlt
and
das
and
mov
into
lock
push
jmp
push
js
fmuls
inc
dec
jp
movsb
fmul
mov
mov
push
loop
mov
jg
push
adc
adc
sti
popf
and
loope
adc
sub
out
lea
jmp
push
push
stos
or
and
adc
mov
out
hlt
inc
pusha
incl
push
bnd
lcall
data16
popa
pushf
orl
sbb
jnp
dec
mov
mov
push
shlb
jle
push
ret
adcb
xor
inc
pop
pop
push
int
imul
je
lea
adc
sbb
add
mov
cmp
sbb
stc
mov
sub
fwait
fs
mov
bound
xor
mov
dec
or
pop
push
cli
xchg
mov
mov
xchg
push
jmp
or
pop
inc
hlt
sbb
push
ja
stos
inc
xchg
rclb
mov
data16
cli
jno
cmp
inc
xor
sbb
sub
lahf
mov
xchg
int
and
dec
movsb
pop
jae
roll
das
push
mov
pop
add
inc
fisubs
sti
icebp
add
fld
or
clc
lret
loop
push
js
cmp
mov
into
test
lcall
xchg
add
sub
loopne
mov
mov
adc
dec
or
dec
cmp
pop
sbb
jge
lret
jo
mov
or
call
inc
pop
imul
fs
xchg
cwtl
jns
mov
pop
in
inc
add
or
rcr
push
jp
je
fwait
add
xor
xor
cld
sti
icebp
jmp
pop
jecxz
ficoms
mov
push
pushf
push
stos
push
pop
add
xchg
sbb
inc
movsl
lods
xor
test
sbb
dec
outsl
mov
in
push
cmpsb
jg
mov
stos
test
mov
add
cmpsb
pop
aad
ljmp
or
jmp
stos
mov
pop
cmp
lret
sbb
lahf
aam
mov
pop
pop
negb
ja
jnp
sti
mov
fidivl
test
mov
imul
dec
lcall
jl
mov
popf
aas
sahf
sub
pop
mov
pop
mov
pop
add
jno
sbb
scas
add
xchg
popf
and
jo
lret
js
loopne
clc
mov
jno
outsl
int
fucomip
lret
mov
sub
ss
andl
mov
and
aaa
jp
fisttpll
inc
add
add
inc
sub
sarb
shr
mov
sub
mov
lock
in
test
pop
jb
mov
test
in
test
mov
push
enter
adc
popf
sbb
jae
ret
dec
popf
jno
adc
jno
leave
int3
in
std
mov
fisttps
xchg
push
dec
and
cmpsb
and
fistps
inc
mov
ficoms
scas
push
inc
xchg
shlb
mov
mov
mov
pop
jecxz
notb
add
add
mov
xchg
gs
clc
push
test
les
jl
xchg
js
in
xchg
into
or
rol
addr16
aaa
in
jecxz
jbe
mov
cmpsl
mov
mov
dec
popa
ret
pop
mov
pop
lcall
jle
xor
notb
inc
ret
xchg
test
rcrl
jno
mov
cwtl
mov
or
dec
mov
xchg
leave
fimull
aaa
pop
movsb
or
jo
test
jnp
mov
adcb
and
dec
push
xor
mov
pop
lcall
fs
pop
push
add
pop
mov
pop
push
testb
sub
push
icebp
add
mov
scas
stos
mov
pop
psubusb
lods
jmp
js
pop
loop
addr16
mov
fwait
jnp
adc
sub
pop
sarl
add
adc
and
hlt
daa
jmp
adc
xor
xor
push
dec
movsl
push
inc
jg
push
mov
subl
jecxz
jb
scas
adc
adc
incb
lss
dec
cwtl
mov
sbb
pop
loop
dec
or
addr16
pandn
in
fwait
fs
lahf
mov
lret
xor
repnz
xlat
adc
das
jbe
stos
aaa
arpl
dec
rcrl
inc
rcrb
mov
fsub
add
repnz
stos
and
cmp
jns
scas
xchg
or
std
out
popa
andl
test
sahf
cmp
addl
lock
jg
cli
insl
cmp
aam
popf
sbb
mov
mov
and
push
in
mov
mov
adc
xchg
mov
or
mov
sbb
push
mov
mov
arpl
and
hlt
lcall
leave
and
xchg
mov
cmc
fstpl
inc
lahf
pusha
fmull
jg
mov
loope
stos
pop
sub
ljmp
lret
xchg
cltd
jecxz
test
jle
jecxz
in
jns
mov
movsl
in
mov
in
xchg
cmp
xor
cli
repnz
pusha
gs
stos
orb
push
popf
xchg
dec
mov
xor
cmpsb
je
xor
mov
add
pop
jl
mov
lcall
popf
jmp
fdiv
es
sbb
rorb
xlat
xor
mov
push
mov
lods
cmc
insb
xlat
or
pop
dec
fs
fsts
ja
cmp
xchg
mov
or
mov
mov
loop
into
insl
sbb
psubsb
xchg
jno
jo
jae
aaa
dec
add
add
or
dec
call
mov
mov
push
lea
cmp
in
arpl
mov
lret
in
cwtl
mov
inc
push
andb
push
sub
mov
sbb
jne
cmp
xlat
mov
mov
out
inc
xor
testb
push
sub
xsha256
cmpsb
adc
sbb
xchg
mov
lock
mov
pop
jle
adc
dec
cmp
adc
xlat
stos
sbb
xor
mov
rorb
fdivr
ljmp
mov
loope
loope
cltd
outsb
sub
pop
nop
lahf
mov
shrl
jns
and
or
sbb
mov
dec
pusha
lcall
faddp
push
out
mov
and
xlat
pop
adc
popa
aad
test
loop
dec
iret
in
sub
mov
add
fs
into
les
arpl
pushf
cmp
jo
ss
cmp
and
and
dec
add
popa
xchg
fnstenv
neg
gs
mov
xchg
std
in
push
add
adc
xchg
stos
pop
lds
xchg
mov
jns
negl
mov
jg
or
push
inc
int3
push
ljmp
cmpsl
xor
inc
and
and
push
leave
jno
pop
imul
cld
nop
xchg
sbb
sub
xchg
fimull
hlt
sbb
inc
add
sub
xor
xchg
addr16
scas
xchg
out
call
fidivrl
xchg
stos
rcrl
cmp
sbb
cld
adc
ds
xor
sub
xchg
and
cmpsb
dec
pop
jns
sbb
movsl
sbb
push
add
call
push
test
xchg
or
lret
and
in
or
xor
xchg
repnz
outsl
pushf
loope
lahf
add
mov
insb
jle
push
push
add
lret
add
leave
and
pop
lds
ss
adc
int
xchg
push
push
adc
add
or
jnp
mov
std
fadd
ja
repz
into
fmuls
cmpsb
jl
out
pop
inc
loopne
inc
ljmp
popa
imul
test
ja
lahf
movsb
pop
cs
mov
dec
ljmp
jo
rolb
add
lahf
int3
int3
pushf
scas
clc
outsb
aaa
stc
divb
push
lock
push
jmp
lods
in
in
mov
or
inc
xchg
or
dec
xor
lods
repnz
push
mov
cmp
sbb
and
jno
push
xchg
jns
or
jb
sub
mov
and
jmp
push
add
mov
mov
shll
xor
sarb
cmpsl
cltd
jg
adc
loope
ljmp
push
dec
gs
outsl
dec
in
jmp
ret
cli
mov
fistpll
shl
shrb
mov
subl
popa
pushf
lcall
js
or
cmp
out
mov
add
push
scas
dec
and
push
sub
cmc
mov
sbb
les
fistpll
mov
xchg
jbe
cmp
mov
pop
cmp
dec
ja
mov
cmp
push
ja
mov
add
jmp
ret
push
clc
out
cmp
adc
jo
jo
hlt
sbb
sbb
or
mov
mov
pop
or
lods
shll
inc
js
dec
popf
cmp
cltd
sbb
out
cwtl
push
aas
push
add
insl
and
dec
lcall
mov
rcl
popf
pop
ss
fdivrs
lret
adc
mov
outsb
ret
inc
outsl
hlt
je
or
or
wrmsr
loop
inc
leave
mov
mov
pop
shll
jmp
jecxz
in
sub
ffree
faddp
add
popa
dec
xlat
pop
js
cwtl
test
ret
out
push
jecxz
rorb
adc
lock
jmp
std
mov
inc
mov
js
adc
data16
fbstp
mov
xor
out
jl
sub
mov
pop
and
imul
insl
hlt
jb
push
add
sahf
push
test
push
pushf
mov
sub
and
xor
cmp
pop
xor
or
or
inc
jge
push
cmp
jno
push
enter
xchg
roll
cmpsl
jmp
xchg
inc
outsb
mov
lahf
push
sbb
arpl
pop
push
or
mov
sub
std
leave
push
in
xor
cwtl
popa
clc
les
leave
push
lods
xor
pop
imul
pop
jnp
ja
xchg
jne
int
fnstcw
or
pop
popf
cs
dec
mov
adc
mov
adc
mov
inc
push
bound
push
push
les
push
repz
pop
xchg
or
mov
or
sub
push
lods
scas
xor
fwait
pop
push
inc
xor
add
and
add
lods
fwait
shlb
aas
xlat
push
pop
add
add
cmpsl
shl
add
adc
or
dec
imul
sbb
adc
push
popa
jnp
push
in
daa
les
fdiv
loopne
pusha
popf
xlat
jl
jl
pop
inc
jns
icebp
push
push
xchg
jbe
mov
mov
mov
lods
sahf
daa
xlat
addr16
insb
add
mov
imul
jne
test
sub
adc
xchg
add
insl
xor
adc
mov
or
push
xchg
jecxz
cmpsl
cmp
js
push
adcl
xor
mov
sti
loope
jle
fbld
xchg
out
jle
dec
jl
lods
xor
notl
icebp
xlat
jbe
dec
lret
test
call
aas
pop
sub
push
in
icebp
add
ljmp
loop
addr16
sahf
mov
imul
fcomp
in
test
inc
fbstp
add
movsb
out
jge
dec
test
scas
cmp
jmp
test
pop
dec
pop
test
ss
xor
push
aad
enter
mov
or
jae
or
popa
push
pop
xor
mov
sbb
jo
das
mov
test
je
daa
mov
or
pusha
insb
mov
cmpsb
dec
dec
ljmp
icebp
push
sti
rclb
stc
pop
sbb
loopne
lret
pusha
in
dec
lods
addr16
pop
stc
mov
nop
pop
pop
push
sbb
and
fstl
add
push
mov
cwtl
fisubrs
sahf
int
clc
mov
ljmp
enter
nop
lcall
mov
or
in
sbb
fimull
add
mov
jg
dec
pop
pop
out
movsl
mov
adc
lcall
cmp
movsb
popa
sbb
and
and
enter
sahf
sbb
cld
mov
fs
or
popa
jae
xor
mov
xchg
jnp
scas
shl
mov
mov
sbb
stc
or
imul
push
inc
loope
xchg
sarl
cvttps2pi
fistps
cmpsb
sbb
xor
mov
jbe
into
pop
mov
sahf
inc
inc
aam
cli
jae
repnz
imul
fcomps
mov
inc
addl
fsts
test
scas
pop
loope
mov
hlt
lahf
je
stos
mov
loopne
fdivl
xchg
push
or
sbb
inc
int
aas
and
fsubs
dec
test
sub
adc
movsb
push
add
add
add
bnd
add
mov
nopl
pop
cmp
loop
sub
sub
mov
push
pusha
mov
pop
pop
std
sub
popa
mov
nop
pop
fs
mov
mov
push
jp
les
sbb
iret
hlt
es
leave
lods
add
bound
xchg
mov
mov
jmp
movsl
and
enter
xchg
mov
cmpsl
xor
dec
andb
sub
and
in
fstpl
filds
das
pop
mov
xchg
cmpsl
in
inc
mov
push
push
cmp
aas
xchg
push
insb
jge
cmc
ja
pop
aaa
mov
arpl
pop
push
ja
mov
dec
dec
mov
gs
sti
xchg
sbb
and
into
shll
int
push
call
pushf
push
xor
adc
and
jno
push
and
mov
jae
das
shlb
dec
pusha
hlt
fsincos
mov
lea
adc
xlat
push
out
stos
adc
mov
lds
mov
outsl
pop
and
pushf
je
inc
or
jnp
jae
or
orl
es
adc
jne
loop
mov
jl
add
dec
sub
xor
add
pop
xor
cmp
clc
add
enter
pop
scas
inc
dec
clc
mov
jp
push
sub
or
sub
mov
ds
shll
mov
adc
xchg
sub
inc
inc
inc
test
stc
mov
cmpsl
es
lret
and
aad
cli
mov
lcall
jecxz
push
pop
movsb
push
lcall
and
arpl
test
inc
cltd
scas
add
je
enter
lea
or
and
mov
cmc
push
int
mov
xchg
and
dec
in
jnp
pop
cmp
mov
bound
cs
test
dec
lds
insb
dec
loop
fistl
sub
xor
pop
or
mov
adc
fs
in
scas
fmull
fadds
mov
inc
push
mov
jno
sub
or
call
dec
out
test
shll
push
dec
jmp
xchg
insb
ret
std
sbb
aaa
fsubrl
inc
sub
outsb
mov
les
int
movsl
pop
incb
pop
jg
sahf
push
dec
int
mov
movsl
mov
sub
popa
cmpsl
fbld
lret
mov
or
shl
scas
cld
aas
push
xchg
ds
jns
ffreep
jae
or
cmpsb
dec
mov
imul
mov
xchg
es
in
cmp
loopne
xchg
and
lret
aam
or
lea
adc
fdivl
arpl
call
sahf
in
pop
push
add
stos
sub
aam
in
inc
das
pop
lcall
addl
push
sar
xor
mov
test
xchg
pop
sub
scas
mov
cld
clc
pop
outsb
dec
icebp
fld
lods
xor
sub
imul
sub
push
lds
pop
pop
into
push
stc
or
cmp
sbb
or
aas
xchg
push
clc
sarl
push
test
ja
sti
popl
sbb
hlt
je
out
xchg
popf
rorl
sbb
mov
pop
les
into
outsl
les
add
fsubr
mov
cmp
call
xchg
or
ret
cmp
mov
das
and
add
pop
les
jmp
mov
popf
aas
xchg
lods
insb
cmp
mov
cmpsb
lret
sbb
fs
push
add
xchg
data16
ret
fsubr
inc
dec
sbb
mov
ljmp
popa
nop
cmp
mov
mov
data16
test
int
cwtl
in
adc
adc
sub
add
mov
xchg
xor
imul
and
mov
push
mov
test
xchg
add
pop
xchg
inc
nop
push
imul
push
jmp
lock
test
jbe
push
movsb
pop
nop
ds
mov
add
add
inc
mov
jno
push
push
add
add
push
imul
loope
adc
xor
push
int3
pop
and
cmp
fsubrl
cmp
sbb
icebp
push
add
sbb
push
loopne
pop
push
dec
or
fistpl
jbe
xchg
fwait
jg
xor
pushf
les
cmp
lods
sub
ret
lods
stos
jns
sbb
lcall
add
dec
loop
mov
sbb
mov
in
fsubr
cwtl
lods
push
cmp
mull
shl
dec
lods
cli
sub
mov
inc
mov
idivb
cwtl
xor
push
dec
fcos
scas
adc
pop
add
xor
fnstenv
inc
inc
inc
mov
mov
sahf
xor
test
lahf
scas
jecxz
sti
shrb
dec
insl
scas
bound
setnp
repnz
imul
es
scas
leave
dec
adc
cmp
or
mov
dec
xchg
insb
push
push
inc
mov
rorb
out
adc
icebp
ja
xchg
jns
loop
and
in
out
mov
clc
push
ss
aaa
lret
mov
add
push
cmpsl
clc
sbb
scas
in
push
popa
rcll
mov
repz
and
imul
dec
or
and
jmp
mul
gs
sahf
xchg
push
and
outsb
rcll
add
popf
cmp
mov
loop
xor
dec
out
hlt
push
pop
ret
xchg
test
data16
pop
add
dec
std
push
lret
and
inc
adc
xlat
cwtl
xor
sub
lret
mov
push
popf
jb
je
and
loop
jne
stc
inc
sbb
xchg
cs
jmp
jl
bound
sbb
ret
cmpsl
xor
outsl
lret
mov
inc
subl
mov
cmpsb
lret
mov
repnz
jbe
iret
pop
lret
test
rcrb
xchg
xchg
mov
sub
movsb
jnp
neg
cli
sub
repz
popa
shl
cli
inc
jle
add
xor
mov
scas
es
cmc
repz
sbb
jnp
orb
sub
out
pop
loop
pop
xchg
sbb
add
repz
xor
imul
xchg
push
cmpsl
xchg
pop
dec
mov
jecxz
adc
jnp
jb
fildll
leave
sub
mov
push
js
pushf
outsb
push
mov
gs
push
jge
rol
mov
in
shlb
pop
clc
cmp
xchg
push
loop
iret
mov
mov
data16
in
pop
dec
pop
pop
push
mov
jmp
scas
arpl
imul
xchg
or
mov
test
mov
xchg
sahf
dec
xchg
jmp
mov
and
pusha
imull
aad
lods
shrl
bound
xchg
push
or
inc
mov
jno
fistl
sub
sub
loope
iret
sub
and
into
sub
jae
sahf
dec
push
mov
xor
sahf
cli
stos
lcall
xor
sahf
sbb
mov
outsl
or
jmp
mov
mov
adc
daa
inc
adc
jge
sbb
mov
sarb
arpl
pop
adc
adc
inc
pop
test
adc
ja
xadd
xchg
scas
cld
sahf
dec
in
out
aad
push
sub
pop
in
flds
dec
mov
push
sti
out
mov
ret
ja
cmp
adc
mov
mov
jns
fdivrl
xor
cmp
movsl
out
clc
sbb
notl
inc
mov
out
pushf
aas
inc
mov
dec
or
fs
repnz
mov
mov
and
mov
adc
cmp
das
mov
scas
sbb
lcall
xchg
dec
cmc
cltd
fwait
or
decl
pop
push
push
rorl
aas
nop
fsubrs
or
jmp
sub
mov
in
pop
roll
pop
stc
xchg
sahf
out
stc
repz
xor
mov
movsb
add
mov
pop
cmp
insb
jb
adc
jecxz
push
push
add
arpl
xor
xchg
lahf
mov
push
and
or
mov
imul
xchg
or
sbbb
dec
sbb
push
sbb
xlat
xor
or
xlat
loope
sub
ficoms
in
insb
jge
insb
xchg
adc
pop
mov
repnz
mov
test
or
mov
je
push
ds
aas
daa
sbb
jle
call
test
in
ret
in
xchg
test
test
xor
hlt
and
jecxz
out
movsb
dec
cltd
cmc
fisubs
pop
outsl
sbb
mov
dec
lds
jno
cltd
in
repnz
lahf
lcallw
sbb
ja
outsl
mov
jae
sub
or
loop
sbb
xor
ror
cltd
and
or
andb
inc
das
inc
iret
icebp
mov
cmpsb
fistps
in
scas
add
mov
mov
xchg
pop
jecxz
data16
mov
out
cmp
arpl
pop
mov
or
outsb
mov
repz
lahf
jmp
les
xor
je
pop
pop
loopne
repz
cwtl
pushf
mov
push
pop
adc
ss
aam
inc
in
jno
cld
mov
out
pushf
dec
test
out
stos
xchg
daa
fbld
ss
xchg
scas
lods
inc
ljmp
mov
pop
cmp
cld
repz
mov
lock
xor
cmp
stc
jnp
fxch
xchg
mov
add
adc
fidivrs
adc
add
inc
cmpsl
subl
push
mov
xchg
mov
pop
addb
dec
xchg
xor
pop
xchg
mov
mov
js
adc
pop
jbe
data16
movsl
sbb
adc
fdivrl
das
pop
mov
test
fcompl
ficompl
jmp
jmp
cli
aaa
mov
icebp
xor
or
cmpsl
add
andb
xchg
sub
mov
hlt
jmp
push
adc
mov
stos
fsubl
roll
inc
fistpl
mov
out
stos
xlat
loopne
in
div
repnz
jne
ret
jo
pop
movsb
adc
cmp
mov
cld
enter
and
and
dec
sub
mov
inc
jl
mov
hlt
cmp
sbb
jle
nop
das
imul
sbb
jno
sub
ds
inc
dec
push
in
mov
cltd
imull
sub
cmp
mov
rolb
xor
jns
or
jb
add
add
ja
cmpsl
pop
out
sbb
xorb
fdivr
jecxz
cltd
dec
pop
xlat
pusha
rcr
xchg
sub
bt
and
sbb
leave
icebp
pushf
mov
push
mov
xorl
iret
inc
and
pop
fwait
inc
nop
shlb
sarb
fdivrs
faddl
lds
adc
push
out
mov
fs
movsl
mov
cmp
pop
mov
ja
xchg
ja
sub
mov
xor
imul
test
mov
xor
ss
mov
push
add
fsubrl
lea
ds
lcall
fs
jo
jne
es
cmp
fs
leave
std
sarb
xor
push
das
fs
mov
xor
addr16
jle
jae
inc
inc
jns
jge
sbb
lds
xor
or
fwait
pop
xchg
sbb
add
push
sub
popf
nop
mov
cltd
in
pop
xor
dec
adc
mov
adc
cmp
jecxz
das
mov
dec
jge
mov
xorb
popf
xor
cld
sub
clc
sbb
mov
or
inc
xor
xchg
jl
enter
pushf
or
xchg
cmp
push
jno
jb
inc
out
jbe
jmp
ds
cmp
cwtl
sbb
mov
push
out
mov
and
lret
outsb
sbb
jg
dec
into
fistl
inc
test
mov
xor
mov
dec
xchg
xchg
es
add
outsl
cmpsb
sbb
sar
mov
inc
sti
fmull
mov
jle
shl
add
out
shlb
jle
sbbl
jmp
loop
in
into
mov
sub
xor
loope
lea
sbb
repz
jae
fcomp
pop
cmp
lock
xorb
and
add
mov
ja
mov
cmpsl
enter
sub
mov
adc
mov
repz
jp
push
jge
test
xor
jmp
adcl
mov
adc
adc
out
inc
out
sbbb
jle
mov
ss
mov
dec
repz
lahf
int
sarb
jmp
fistps
lret
int
xadd
inc
shlb
cltd
inc
je
leave
jno
sub
addr16
dec
lds
cwtl
testb
lea
xchg
scas
mov
push
push
je
test
pushl
cmp
mov
adc
mov
sub
test
fucom
dec
jnp
aaa
ficompl
int
sub
push
jno
adc
jle
or
mov
movsb
sub
ja
jge
lock
push
ja
rcrb
jmp
push
adc
inc
fnstsw
fsts
pop
aad
add
cld
clc
mov
jecxz
mov
orb
test
pusha
bound
je
inc
mov
mov
sub
shll
stos
push
fsubrl
sahf
test
in
std
cmp
or
dec
mov
cmp
pop
shlb
mov
adc
in
push
add
sbb
push
scas
je
outsl
mov
xlat
push
loope
jge
mov
cs
ret
and
enter
mov
jle
fnstenv
push
lea
dec
in
adc
cmp
jae
mov
fcmove
je
mov
in
push
pusha
das
cmp
push
notl
fisubrl
push
sbb
adc
sub
pop
or
pop
xlat
test
jbe
push
or
ds
dec
out
clc
mov
xor
fildl
jmp
in
push
mov
lds
leave
mov
sbb
lret
jno
repz
add
push
aad
mov
shlb
cltd
fildl
int3
test
lea
rol
mov
xchg
inc
lcall
sti
rcrb
fldcw
fwait
dec
mov
insl
xchg
cmp
inc
xchg
inc
out
sarb
jge
aas
loop
les
and
ret
dec
and
dec
icebp
cmpsl
cmp
ret
inc
dec
jns
in
pop
inc
ds
icebp
js
bound
and
mull
fs
mov
bound
loopne
xor
cmp
cmp
inc
mov
xchg
mov
fwait
inc
dec
adc
mov
cli
test
rcrl
jp
sbb
xor
cmp
js
lea
jnp
or
mov
sahf
mov
arpl
dec
iret
sbb
imul
ret
add
xchg
sub
cld
push
ljmp
add
fsubr
push
pop
or
push
pusha
push
cmc
xor
scas
mov
stos
mov
mov
sti
dec
sarl
cmp
sub
xor
lcall
inc
mov
push
iret
mov
mov
fwait
das
addr16
mov
push
mov
inc
or
xchg
fdiv
push
sbb
jle
push
mov
scas
mov
cmp
xchg
pop
sahf
xchg
les
cmp
movsb
dec
stc
call
inc
push
jle
rcl
xchg
sub
movsl
lea
imul
popl
rorl
pop
inc
jae
jo
stos
popf
xchg
add
or
pop
out
inc
ret
cmp
jno
dec
adc
inc
outsb
cli
mov
push
sarl
lahf
pop
bound
fsubl
jge
test
push
xor
rclb
pop
gs
and
sbb
adc
ret
pop
push
movsl
in
add
leave
out
add
imul
loop
leave
mul
int3
lds
and
or
fistl
lret
test
cmp
inc
rol
ljmp
xchg
mov
jecxz
dec
lret
popf
push
pop
into
nop
cld
and
repz
test
lret
sbb
or
and
and
mov
loope
sub
jp
aam
inc
jo
xor
adc
in
sub
add
jae
shrl
stc
mov
mov
mov
xchg
xchg
icebp
lret
push
push
movsl
jg
call
test
std
fsubrl
add
test
mov
scas
enter
imul
mov
repz
daa
inc
test
mov
mov
sub
inc
cwtl
cltd
xchg
lret
and
in
sub
push
lea
imul
addr16
xchg
mov
adc
aaa
movsl
clc
xchg
cmp
out
das
mov
fcmove
in
test
or
je
lahf
mov
loop
out
outsl
imul
aas
mov
out
mov
push
dec
jae
insl
rcrl
je
xchg
xor
sahf
xchg
aas
and
mov
xchg
inc
adcb
dec
xchg
or
ror
cmc
es
mov
mov
push
xor
pusha
je
jne
sbb
sbb
jmp
fsubl
and
adc
lret
and
cli
scas
testb
xchg
out
repnz
rorl
pop
jle
test
cmp
xor
gs
jno
sbb
fdivs
cmp
push
pop
pusha
lea
sbb
adc
push
insb
and
sbb
shrl
pop
xchg
sahf
lahf
push
or
das
mov
popa
or
imul
ljmp
out
sbb
or
sbb
movsl
xor
ds
xor
and
inc
cmp
push
in
or
loop
or
sub
out
inc
sub
or
stc
fwait
test
xor
and
ffree
jns
pushfw
stos
ja
xchg
and
scas
sub
pop
cmp
dec
lock
and
mov
adc
pop
jg
sub
rorl
cmp
mov
clc
nop
add
jecxz
jg
lea
ljmp
jno
loopne
and
xor
mov
jl
mov
scas
add
or
pop
sti
sbb
jo
adc
xor
adc
push
jae
out
call
xchg
adc
dec
pop
xor
aaa
mov
jo
adc
sub
hlt
cmc
sub
push
push
xchg
imul
mov
ds
jo
jl
testl
cmp
sbb
lahf
stos
push
scas
sti
pop
sbb
sub
lret
xchg
push
cmp
mov
rcrb
jge
push
mov
int
dec
pop
nop
xchg
fs
pop
daa
sti
xor
stc
outsb
adc
mov
hlt
shrb
push
jp
push
jmp
inc
fs
cmp
xor
es
cmp
jle
mov
dec
cwtl
fnstcw
ret
scas
out
clc
je
mov
add
ljmp
frstor
or
or
test
pop
mov
xor
cmpsb
jae
sahf
or
nop
xor
pop
outsl
hlt
bnd
pop
je
movsb
inc
addl
xlat
int3
in
pop
cmp
cmc
dec
mov
xchg
cltd
bnd
xchg
cli
std
dec
add
pop
xchg
jno
mov
movsb
int3
pusha
inc
insb
shl
sub
fiadds
ss
pop
xor
dec
and
in
xchg
pop
scas
jns
mov
adc
mov
mov
clc
aas
xor
adc
sub
add
jno
jl
jge
fwait
pop
ss
push
pusha
mov
mov
std
lret
xchg
lods
cltd
pop
mov
hlt
scas
xchg
test
sub
lea
movsl
notl
lcall
stc
ss
push
daa
cwtl
lcall
mov
das
stos
mov
iret
call
pop
push
xchg
lock
push
cmpsl
cmp
pop
call
jle
add
outsb
out
cltd
and
push
and
mov
iret
shlb
andb
fsubrl
arpl
mov
es
sub
lret
mov
jo
sub
xor
jne
or
cwtl
jecxz
dec
lret
cmpsl
add
fadds
sub
jnp
push
adc
or
xchg
mov
mov
out
jnp
ret
in
xor
subl
mov
jne
or
fisubl
data16
inc
push
movsb
sbb
jle
inc
and
push
and
mov
xor
stos
fldenv
loopne
pushf
loopne
push
pop
ret
or
cmpsb
mov
ljmp
mov
jecxz
cmp
push
pminub
inc
fs
or
sti
mov
repnz
test
push
push
cmp
jo
xchg
aaa
sub
mov
pop
inc
jl
lds
or
push
or
adc
push
jg
fidivrl
xlat
sarl
popa
jge
enter
repnz
ljmp
fimuls
sub
imul
dec
and
adc
sbb
sbb
enter
sbb
mov
cmc
pop
xor
data16
dec
inc
popf
pop
cld
pop
and
mov
je
int
repz
ljmp
les
add
mov
mov
js
test
jmp
mov
imul
fldcw
in
movsb
fistl
into
call
pop
lret
in
push
sbb
in
adc
adc
daa
adc
xchg
mov
test
mov
js
repz
negb
ds
jecxz
ja
mov
ja
pop
lea
add
repz
repz
lahf
mov
fiadds
jg
sbb
out
clc
cmp
xchg
sub
fmull
ficompl
mov
add
inc
sbb
adcl
mov
fisubrl
jne
pusha
rcrl
add
jno
push
dec
leave
cs
out
jbe
sbb
sub
aam
xchg
mov
sbb
mov
push
and
addr16
int
inc
push
test
push
xor
jae
shll
insl
add
mov
fistpl
lcall
mov
inc
ja
jge
push
outsl
out
fnstcw
les
fwait
cwtl
shrl
or
xchg
ds
push
hlt
lods
out
push
shl
scas
lahf
clc
sbb
fucom
xor
xor
ja
adc
push
rolb
xlat
sub
insl
lcall
enter
sbb
sbbb
mov
dec
das
sub
int3
and
sbb
pop
icebp
rol
cwtl
insb
rcrb
jmp
xor
add
loope
xchg
sti
lds
rorb
mov
popa
stos
add
cmp
pop
mov
dec
jecxz
roll
sbb
pop
popf
or
mov
xchg
xchg
nop
das
adcl
xchg
stos
and
sbb
out
mov
test
sbb
pop
scas
leave
iret
dec
xor
std
cs
pop
xor
cmpsl
mov
dec
adcb
xchg
jo
shrb
mov
pop
xchg
call
popa
push
sbb
stos
jo
stos
mov
fwait
xchg
lahf
sbb
pop
mov
and
cld
cwtl
rorl
icebp
lods
cs
mov
jge
fucomip
mov
fdivrp
jnp
adc
sahf
rolb
cmpsl
out
cmpsl
fwait
xchg
lret
mov
push
leave
hlt
mov
icebp
outsl
sbb
sbb
popf
arpl
cmp
das
xchg
lret
adc
hlt
jg
lods
xchg
jge
add
rdtsc
mov
movb
fwait
mov
mov
mov
push
insb
outsb
mov
or
in
xor
in
cmpb
out
rclb
sbb
pop
xchg
inc
and
or
out
pusha
and
ficoms
inc
inc
mov
mov
sub
xchg
adc
fidivrl
and
mov
mov
inc
dec
mov
or
cmp
xchg
rcr
mov
lods
or
or
adc
js
fdivrl
mov
shl
xchg
mov
push
mov
mov
sbb
sarl
movsb
dec
mov
cmp
enter
hlt
pushf
mov
pop
in
cmp
rcrl
scas
cltd
sbb
inc
iret
aaa
sbb
or
pusha
mov
push
sub
mov
sti
adcl
cmpsl
fs
std
adc
push
xlat
addr16
jno
je
loop
adcb
dec
and
inc
loopne
gs
cmp
shl
and
inc
and
inc
adc
xor
mov
int3
loop
push
xor
push
in
pop
pop
xorb
in
xlat
into
loopne
arpl
sub
mov
outsb
mov
sub
insb
repnz
mov
dec
xchg
popf
sub
out
inc
inc
adc
jnp
addr16
jle
addr16
mov
fs
fwait
or
cvtps2pd
imul
ret
xchg
dec
push
push
push
out
rcll
faddl
lock
jg
dec
xchg
outsl
outsb
cli
movsb
adc
pop
xlat
mov
out
fs
adc
xor
sbb
jae
insb
mov
fstpl
or
das
sub
xor
pop
outsb
add
mov
dec
xor
loop
xchg
add
push
andl
cmp
inc
push
push
hlt
outsl
adc
int3
in
movsb
imul
imul
rcl
nop
mov
cmpb
sub
scas
sbb
xchg
outsl
jbe
mov
xchg
cltd
mov
std
mov
push
outsl
pop
fnstsw
mov
insb
aaa
adc
ret
mov
inc
iret
rcrb
push
test
inc
pop
add
push
iret
daa
arpl
aaa
cmp
sub
push
test
dec
and
push
je
mov
mov
mov
push
scas
push
lret
add
inc
shrl
icebp
mov
es
push
cmpsb
outsb
dec
inc
mov
xchg
lret
mov
mov
mov
aam
sarl
mov
bswap
inc
test
ficoms
loopne
cmpsb
sub
fnstenv
repz
fldt
in
inc
pop
cmpsl
loope
and
pusha
cmp
push
mov
jae
popf
adcb
fcomp
xor
xor
pop
dec
aas
popa
frstor
pusha
es
dec
out
ret
cltd
mov
nop
leave
cli
sahf
lock
dec
mov
icebp
mov
sbb
dec
add
jbe
push
ljmp
jecxz,pt
adc
jne
add
xlat
cmpsl
fstl
mov
cmp
mov
inc
lcall
insb
test
test
in
out
sbb
mov
inc
lods
cmp
sub
or
sbb
jns
movsb
or
mov
popa
xchg
sbb
mov
test
jbe
sbbb
ljmp
push
mov
fisubl
outsl
cmp
push
xchg
add
fld
test
inc
dec
fcmovnu
or
in
xchg
mov
fidivs
out
mov
aad
pop
cmpsl
push
or
jbe
sbb
addr16
andl
push
push
xor
mov
xor
or
push
test
inc
xchg
or
sbb
mov
mov
setae
pop
push
fdivp
fcompl
lret
lret
add
or
adc
xchg
pop
cli
stc
and
bound
mov
ds
jge
jns
push
stos
icebp
inc
outsl
popa
and
xchg
scas
ja
xchg
subb
jp
nop
inc
clc
out
pop
sbb
loop
dec
mov
popa
jnp
shrb
sub
arpl
ret
loope
pop
nop
push
mov
xor
mov
lods
in
push
mov
jne
add
dec
bts
add
jle
jo
push
mov
and
fwait
hlt
mov
mov
movsb
mov
mov
mov
inc
mov
jg
fildll
insl
adc
or
movups
and
incl
and
jae
and
mov
stc
sbb
push
push
xor
ret
popf
inc
out
stos
cwtl
cmp
or
jg
fildl
xchg
loop
sbb
out
mov
clc
lods
fistpll
mov
mov
fwait
ret
cmpsb
iret
fists
cmp
xor
andl
orl
fmull
xorl
dec
or
mov
jne
push
fistpl
out
loopne
imul
jge
jmp
pop
bound
push
sbb
push
cld
pop
xor
aaa
and
xchg
sub
pop
mov
sbb
outsl
mov
clc
or
call
test
test
sbb
xchg
lret
push
mov
dec
jne
icebp
sbb
shlb
in
mull
jecxz
mov
aam
pusha
movsl
cs
or
cmp
lea
mov
push
pop
idivb
cmp
arpl
shrl
cltd
adc
mov
fstl
scas
inc
xchg
sarb
and
icebp
mov
call
pop
push
scas
aas
loope
sbb
dec
mov
and
int3
pop
ljmp
mov
insl
pop
adc
shll
or
lret
mov
jbe,pt
out
or
xchg
sbb
shlb
ret
jae
stos
mov
fstpl
aas
dec
stc
jmp
movsb
dec
mov
sarl
xchg
xor
sub
in
fs
ljmp
jbe
test
rolb
and
sub
icebp
outsl
pop
push
add
insb
mov
fcmovb
dec
sti
jbe
cmc
and
jb
xchg
repnz
xchg
pop
xchg
stc
push
les
and
and
repz
out
or
or
xchg
lahf
out
jne
push
dec
adc
daa
and
into
mov
xor
daa
push
fdivp
or
in
pop
out
aad
insl
test
xor
orb
fcoms
lds
mov
les
add
cmpsb
mov
rcll
xchg
pop
leave
cmpsb
mov
in
lahf
cld
mov
adc
xchg
xor
fimull
xor
stc
or
push
inc
cmp
push
repz
sti
stos
inc
fdiv
cmp
pop
inc
icebp
lret
pop
pop
xor
sbb
dec
xor
lock
decb
ret
pop
push
push
cmp
test
mov
inc
arpl
push
inc
dec
mov
and
incb
imul
addr16
loope
mov
inc
in
or
popl
jne
fisttps
xor
inc
and
les
add
and
and
mov
sub
add
stos
jecxz
pop
out
jle
mov
lcall
lods
jmp
cmpl
in
xor
xchg
leave
fs
adc
cmp
dec
scas
sbb
hlt
incb
test
subl
jmp
testl
movb
jne
xor
or
fcoml
sbb
adc
mov
mov
and
je
pop
test
inc
pop
inc
jae
push
pop
fcmovnu
pop
sbb
mov
iret
lahf
add
dec
fnstenv
xchg
jecxz
lock
mov
loope
xchg
les
jp
cltd
and
inc
xor
jge
call
idivb
pop
or
cmp
mov
out
movsl
jp
lods
jb
int
pusha
or
test
lahf
cmp
dec
mov
test
cmp
pop
mov
xchg
push
cmp
mov
in
mov
test
xor
or
scas
dec
cld
ljmp
dec
mov
jle
jg
ret
in
jo
icebp
test
xchg
xchg
cwtl
in
push
aam
fdivrl
sbb
pop
sub
cmp
push
stc
mov
mov
xor
movsb
push
mov
fildll
xlat
or
jmp
out
xchg
rol
mov
dec
daa
sbb
and
push
jle
stos
outsb
add
loopne
lret
sub
imulb
mov
xchg
sub
jl
mov
xchg
dec
mov
fistpl
rolb
fldt
jae
or
mov
outsb
xor
addr16
xor
lds
insb
jecxz
in
aam
ds
popa
xor
xchg
movb
movsb
push
rcrl
mov
adc
mov
inc
or
insb
fnstcw
push
lret
pop
scas
scas
int3
jecxz
lock
cltd
sbb
in
mov
repnz
cltd
loop
int
fnstsw
mov
leave
push
les
popf
ds
xor
popf
sbb
ja
xchg
subl
cmpsb
mov
and
mov
loop
pushf
inc
cmp
sub
inc
cmp
mov
gs
add
je
cli
aad
sbb
nop
outsb
scas
das
in
pop
repnz
lcall
pop
fnstcw
cmp
dec
inc
add
sub
cli
stos
dec
gs
pop
xchg
xor
stos
rcrl
mov
stos
or
mov
cmp
sub
mov
lret
xchg
fadd
mov
cli
adc
xchg
lock
jmp
sbb
popf
popa
add
jne
clc
test
inc
sub
xchg
cs
push
rcll
aaa
addr16
jo
pop
cmp
sbb
xor
sbb
adc
push
xchg
int3
test
xor
lahf
dec
fnstcw
mov
push
push
test
cmp
mov
dec
shl
push
inc
add
in
add
js
sti
cmpsb
incb
xlat
mov
jecxz
aad
mov
scas
cltd
cmpsl
loopne
scas
push
scas
push
add
ret
mov
pop
scas
nop
sub
sub
ds
mov
into
push
hlt
in
call
xchg
mov
xor
or
push
scas
xor
icebp
mov
xchg
call
push
enter
dec
outsb
mov
das
and
inc
inc
cld
dec
cmp
out
outsb
and
jmp
js
mov
xchg
xchg
push
mov
jnp
shll
imulb
xor
pop
adc
push
pop
bound
in
pusha
aaa
ljmp
cmp
ljmp
stc
out
mov
mov
sti
sub
mov
stos
sub
cwtl
mov
adc
and
and
push
sbb
xchg
imul
insb
pop
sbbb
push
ret
rolb
sarl
fistl
addl
xor
test
adc
sbb
push
adc
test
xlat
sub
fists
mov
fldenv
test
xlat
test
mov
subl
stos
fistpl
add
clc
push
packssdw
test
mov
jge
cwtl
jp
jmp
mov
mov
adc
gs
aam
incb
arpl
ret
imulb
mov
scas
dec
arpl
add
cmp
and
inc
push
sbb
add
aas
das
or
xor
outsl
cmpsl
sbb
fsubs
cmp
jmp
add
mov
fisubl
add
fimull
jb
fs
sub
inc
adc
nop
fs
or
adcl
dec
arpl
xchg
push
xchg
je
jp
es
push
je
shl
pop
mov
in
mov
push
or
cli
dec
dec
aaa
push
sbb
mov
test
sub
mov
pop
andb
sub
in
adc
xchg
and
jns
adc
mov
adc
dec
xor
sub
xor
inc
ret
ds
and
loop
inc
stos
xchg
adc
fcompl
or
popa
ljmp
sahf
fsubrp
adc
shl
lea
test
sbbb
xchg
cmp
add
mov
mov
mov
imull
test
adc
or
push
xchg
xlat
gs
fcmovne
std
lock
arpl
inc
lret
adc
xchg
movsb
das
movsb
mov
jg
jmp
sar
jecxz
adc
jge
mov
xchg
adc
aam
into
insb
js
jle
dec
or
mov
mov
xchg
xor
add
inc
jns
jp
aaa
pop
xchg
mov
pop
xorl
sub
mov
out
mov
call
ficoms
inc
pop
mov
dec
or
xchg
fwait
iret
add
lods
das
pop
cli
dec
inc
add
mov
mov
pop
dec
pop
jb
xchg
test
mov
cmp
stos
add
scas
cmpsb
les
rcrb
repnz
loope
outsb
sbb
and
jmp
negb
out
inc
mov
push
xchg
popf
mov
sub
pop
out
cltd
push
mov
scas
dec
jl
mov
dec
loop
into
xchg
into
loope
rolb
or
xor
or
sub
dec
mov
jmp
xchg
xor
push
push
and
adc
inc
sbb
adc
add
cli
sub
pop
hlt
xchg
add
imul
data16
push
push
pusha
push
adc
movsl
jno
dec
push
sbb
rol
das
xor
xor
xor
stos
xchg
push
mov
inc
add
pop
pop
nop
shr
adc
call
mov
xor
sbb
push
icebp
cmp
push
and
aad
ret
and
and
jg
inc
or
lock
movsb
mov
pushf
adc
and
jb
add
mov
pause
test
sub
mov
test
pop
pop
jl
jne
cmp
scas
into
inc
lods
ss
push
aas
pushl
jbe
rep
xchg
lods
xor
push
fimull
pop
jae
push
cmp
sbb
jbe
cmpsb
out
and
cmc
xlat
pop
xchg
pop
pop
mov
xchg
sahf
aaa
mov
jmp
gs
lods
gs
jne
fcomps
cmp
cltd
arpl
imul
xchg
dec
cmp
push
dec
jnp
in
gs
sar
inc
rorb
cli
pop
std
pop
pop
mov
mov
es
xor
pop
stc
scas
stc
inc
xchg
push
fcomp
pusha
popf
push
push
jo
fst
mov
inc
cmp
in
filds
insl
and
push
int3
adc
push
sbb
mov
inc
cs
xchg
mov
je
test
int
push
sbb
pop
xchg
push
or
add
loop
adc
mov
add
sub
inc
adc
lcall
cmp
test
cmp
rol
add
jmp
les
cmc
adc
mov
jae
pop
pushf
aas
loopne
in
fwait
lret
xlat
sbb
pop
mov
ret
stos
mov
lds
lahf
sub
jae
outsb
jecxz
sub
cmp
icebp
xor
sbb
or
cli
cmp
xchg
lods
mov
aam
mov
lods
xchg
sub
jl
jns
push
lret
inc
ss
xorl
adc
testl
push
jns
lock
lds
movl
xor
and
xor
stos
add
cmpsl
aas
or
jecxz
mov
cmp
mov
mov
xchg
xchg
inc
lret
mov
test
pop
and
ret
push
imul
mov
aam
jl
xlat
jg
jne
inc
push
add
int3
xor
dec
push
adc
mov
das
into
add
inc
enter
pop
xor
mov
fwait
cltd
mov
push
sbb
jge
mov
movsl
fsubrl
repnz
cmpsb
sub
in
sub
aas
sbb
jo
jnp
mov
outsb
arpl
push
inc
add
sbb
adc
jnp
btc
shrd
sbbl
add
lods
or
fldt
and
sbb
cli
lahf
popa
ror
inc
cltd
out
and
mov
cld
push
push
out
jge
or
and
sub
sub
popa
dec
pop
test
pop
js
pop
out
outsb
jb
mov
ss
pop
fwait
cld
divl
pop
jo
jle
xor
xchg
sub
mov
aaa
jle
lahf
mov
pop
lret
shll
cmp
in
das
mov
mov
cmpsl
inc
add
je
cwtl
mov
loop
xchg
repz
mov
jecxz
and
pop
adc
pop
xchg
xor
pushf
sti
pop
shl
mov
add
xor
push
lods
mov
xchg
adc
inc
cmp
pop
mov
pop
adc
jo
scas
dec
sub
xor
mov
test
les
aas
xor
daa
mov
fcoml
add
xor
imul
sahf
gs
and
lcall
mov
scas
scas
xor
adc
jb
push
inc
stc
fdivrp
push
clc
push
int
psubsw
sub
pop
mov
jo
cmpsl
fiaddl
sbb
data16
mov
mov
mov
into
lock
hlt
popa
ror
jns
fsubs
pop
sub
add
addr16
pop
mov
pop
lea
jmp
pop
sahf
fstl
cmp
add
scas
cmp
aas
lcall
mov
sbb
xor
fistpl
loopne
jns
pop
test
push
sub
inc
xchg
inc
fisttps
push
jo
fcompl
les
jg
jb
push
movsl
jbe
mov
add
lds
sbb
jecxz
jns
shlb
mov
pop
cmp
xchg
out
rorb
sub
pop
imul
cmp
push
push
mov
addr16
sub
cmc
je
dec
imul
outsl
push
call
xor
out
stos
imul
mov
shlb
mov
lahf
cmp
mov
or
adc
imul
dec
or
and
popf
mov
movsb
add
and
xchg
jp
sahf
outsl
daa
hlt
push
dec
mov
lret
out
es
add
shl
mov
cmp
jae
push
movsl
mov
push
insb
clc
imul
xor
sar
dec
or
int
out
cmpsb
addb
rorb
lds
shll
ret
xchg
lods
les
mov
mov
rcl
enter
imull
popa
adc
ret
jl
mov
adc
dec
lret
lcall
popa
cmpsb
cwtl
pop
aad
pushf
xchg
dec
movsb
pop
das
push
adc
inc
stos
push
jne
loop
fsubrs
mov
into
xor
mov
fldcw
add
int
mov
push
add
mov
mov
inc
test
fnstcw
in
or
shlb
and
pop
ljmp
adc
pop
cwtl
jns
ret
enter
inc
mov
xor
or
out
push
push
fmull
jmp
inc
push
mov
mov
insl
fcoml
inc
ja
sbb
testl
cwtl
cmp
dec
inc
xchg
push
xchg
cs
dec
ljmp
sub
in
push
push
movsl
or
sbb
rcll
lock
mov
xchg
es
fprem
shll
mov
test
cli
push
cmp
lahf
inc
aas
insb
or
pushf
push
adc
mov
pop
jbe
jmp
add
dec
aaa
xchg
jb
mov
push
jb
xchg
int
jge
dec
dec
fwait
clc
fbld
incb
adc
fs
sbb
push
mov
pop
orb
movsb
fisubrl
add
mov
mov
bound
shlb
push
add
xlat
ds
daa
icebp
movb
mov
shll
fstpl
lods
leave
mov
cmp
out
andb
push
clc
mov
and
jbe
inc
loopne
insl
add
pop
inc
stc
mov
stc
out
lcall
push
push
jne
push
test
outsl
fwait
cli
dec
pop
ss
pop
in
outsl
roll
adc
or
xor
stc
cmp
mov
loop
sub
inc
mov
inc
repnz
cmp
movsb
dec
sbb
out
loope
lahf
arpl
xchg
lods
nop
movsl
jno
sub
je
add
push
cmp
sbb
mov
movsl
mov
test
adc
mov
dec
fisttps
fs
jp
and
loop
jg
gs
insb
pop
mov
jb
cmpsl
repz
xor
dec
popl
xor
aad
lock
jge
out
xchg
xchg
cmpsb
fwait
movsb
xor
es
and
lds
jo
movsl
add
xchg
jne
popa
in
fstps
ror
cmpsb
mov
xchg
add
inc
xchg
int3
sub
adc
add
repnz
lea
add
mov
or
cmp
lods
sbb
clc
add
adc
or
pop
mov
cli
repz
scas
mov
fwait
push
dec
jmp
into
and
push
adc
cmp
push
add
mov
pop
adc
scas
sahf
arpl
push
jnp
push
mov
mov
nop
jbe
pop
in
in
xchg
jg
test
sub
pop
imull
jne
mov
dec
ja
mov
xor
push
sbb
mov
pop
inc
mov
jp
inc
or
mov
pop
cld
xor
imul
scas
testb
test
push
mov
xchg
mov
mov
pop
sub
sysexit
movzwl
cmp
inc
aaa
or
sahf
jp
arpl
mov
push
ja
jle
adc
xorb
jp
adc
add
cmpl
push
pop
in
add
mov
int
mov
cwtl
pop
in
negl
xor
inc
daa
xchg
cwtl
xlat
push
mov
leave
imul
add
scas
mov
cmpsl
xor
lgs
aaa
lret
jmp
jbe
cmp
loop
xorl
mov
stc
push
add
inc
sbb
loope
out
or
aaa
or
sub
in
mov
jl
movsb
xchg
push
mov
adc
xchg
jecxz
sub
add
push
sub
rcl
movsl
and
lock
jle
loope
leave
clc
add
popf
shlb
xor
jp
cmp
and
xchg
xor
movsl
lods
mov
arpl
and
fcmovb
pusha
push
outsb
adc
push
cmp
in
cltd
testl
loop
add
lea
cs
rcll
mov
lock
into
jb
inc
mov
inc
nop
rcrb
ja
sbb
lahf
inc
push
cmp
push
pcmpgtw
xor
mov
pop
cwtl
es
test
jo
int3
fisttpll
ret
shl
test
pushf
cwtl
je
dec
out
aam
dec
and
or
pop
cmpsb
mov
inc
pop
leave
loop
std
xor
add
jmp
sub
pop
outsl
fcompl
jmp
inc
sarl
test
xchg
lret
int
fldt
aad
stc
cmp
push
mov
dec
or
add
scas
rcll
cld
push
sahf
mov
fisubs
scas
push
jle
outsb
cmc
inc
and
inc
popf
sahf
pop
jo
sbbl
sub
jle
or
or
mov
lods
adc
insb
sbb
xor
in
add
or
xchg
fwait
imul
daa
jo
mov
jbe
call
loope
mov
inc
sub
and
ret
dec
jge
iret
into
fwait
mov
nop
fimuls
loop
cmpsb
push
xchg
enter
mov
aas
add
ja
loopne
ljmp
xchg
lahf
popf
inc
add
inc
out
int3
sahf
inc
dec
adcb
loope
cmc
sub
pop
loope
xor
movsb
sbb
lock
leave
dec
ret
jl
aad
insl
dec
mov
test
or
inc
mov
ljmp
inc
daa
sti
in
mov
lahf
pop
lahf
or
dec
jb
pusha
es
mov
mov
ljmp
insl
je
psadbw
xchg
fwait
dec
repnz
add
cmp
int
arpl
loopne
adc
call
mov
sbb
out
xor
pop
cmc
pop
inc
imul
repnz
mov
jns
in
inc
dec
nop
jge
inc
out
leave
in
mov
push
push
jmp
int
sub
adc
xor
repz
xor
shrl
add
pop
insl
dec
inc
fisttps
sahf
loopne
add
fcomps
loope
xchg
push
inc
add
add
pop
and
push
loope
cmp
sub
mov
add
jp
insb
adc
fstpl
and
mov
pop
sub
cwtl
xchg
sbb
cltd
adc
mov
ja
add
cs
int
adc
in
adc
dec
dec
xorl
loopne
int
mov
stos
mov
pop
mov
sbb
push
iret
loop
pushl
je
jecxz
cmpsb
shll
ficoms
test
scas
arpl
repnz
imul
and
fldenv
sti
loopne
sub
and
jg
sbb
mov
int3
in
ljmp
cs
fcompl
or
addr16
pop
mov
push
pop
rorl
push
popa
ffreep
push
loopne
insb
or
xor
divb
adc
mov
push
hlt
xchg
add
mov
and
cmc
jle
mov
scas
pop
jg
in
push
mov
das
roll
in
or
xor
lret
lret
addr16
pusha
and
xor
and
int3
mov
mov
enter
mov
add
inc
out
push
push
std
jmp
daa
rolb
jae
adc
and
outsb
das
jne
mov
verr
enter
mov
push
mov
add
je
sbb
push
enter
jmp
pop
cmpsb
xor
push
cmp
mov
decb
mov
fs
adc
cmpl
sub
fisubl
dec
dec
push
out
test
mov
xor
cmp
add
inc
inc
jl
mov
aaa
out
mov
daa
not
sub
mov
into
fmull
mov
jmp
mov
adc
cmp
pop
fisubrl
ret
push
gs
pop
sbb
leave
sub
inc
xchg
push
xchg
xchg
mov
aam
movsl
push
je
pop
add
pusha
aam
cli
adc
cmpsb
jg
test
sbb
shll
dec
mov
data16
sbb
jbe
mov
mov
pop
jmp
sbb
lds
pand
rcll
jp
add
mov
cwtl
popa
dec
aaa
add
stc
leave
test
mov
sti
shl
mov
adc
ds
faddl
pop
adc
sub
add
movsb
rorl
and
repnz
adc
inc
pop
push
jno
ljmp
inc
mov
inc
mov
jl
sub
inc
cli
insb
jns
fldcw
testb
dec
push
sbb
enter
aam
subb
mov
mov
int3
or
mov
ficoml
subb
in
xor
mov
enter
pop
lods
adc
sbb
negb
rcrb
pop
jno
and
mov
popa
int
js
fmuls
imul
adc
movsl
test
filds
andb
nop
mov
out
cmpsl
outsb
mov
mov
movsb
sti
mov
dec
loopne
imul
loope
lods
push
push
cmp
inc
out
ss
xor
push
or
push
mov
sub
dec
cmp
sub
push
or
fwait
sub
fsubl
stos
cwtl
lods
stc
lods
out
push
lcall
mov
adc
aas
lock
ret
iret
add
out
ss
adc
ja
mov
test
imull
and
sar
mov
fsubrs
out
out
ds
insb
xchg
call
fdivl
sbb
and
sahf
xchg
xor
xabort
lock
cmpsb
dec
lret
add
das
adc
push
stos
dec
xor
jmp
loop
sti
sub
clc
cmp
clc
lods
addr16
mov
clc
fisubrs
xchg
xor
popa
outsb
adc
scas
xor
dec
mov
mov
mov
xchg
push
push
in
shll
shlb
mov
mov
mov
pop
xchg
or
push
ret
mov
add
xor
add
mov
xor
jno
add
pop
repz
enter
pop
cld
adc
call
data16
aad
aam
push
xor
or
out
mov
push
mov
pushl
movsb
fstpl
xor
daa
test
mov
jns
ret
loope
push
cmc
mov
fistl
push
ja
icebp
mov
or
ss
clc
mov
cmp
mov
popf
cs
pop
inc
jae
lahf
inc
mov
jno
ja
xor
fsubrs
xchg
fwait
inc
and
aad
adc
mov
fs
or
fidivrs
push
shlb
xchg
addr16
lock
jg
insl
pop
fmuls
jg
jp
int
or
sbb
andb
out
cmc
js
out
inc
xchg
andl
sub
fstl
cmp
and
pushf
cmp
pop
mov
xchg
xor
pop
push
fstps
and
divl
sbb
pop
mov
sub
mov
shll
insb
xchg
aad
push
fsubl
add
test
mov
sbb
or
mov
jg
push
repz
sahf
ret
and
pushf
and
lahf
mov
sub
mov
mov
imul
andl
test
es
sub
cld
push
or
test
sub
add
into
inc
pop
sbbb
dec
loop
adc
sbb
cmp
out
sti
cmp
and
or
xor
push
leave
sbb
lea
imulb
das
mov
or
dec
cmp
ljmp
mov
sbb
test
sbb
push
jg
fiaddl
adc
adc
ss
lahf
nop
shlb
mov
movsb
loope
dec
insl
daa
pop
pop
imul
push
sbb
adc
out
das
stos
mov
jge
fidivrs
in
pusha
fistl
movsb
sub
dec
add
push
mov
push
in
cltd
cmpsb
xor
cmpsl
jne
inc
arpl
rolb
xor
scas
sbb
movsl
iret
pop
jo
int
dec
hlt
imul
jp
lds
nop
dec
jne
inc
mov
mov
adc
cmp
mov
jge
cld
es
inc
cmpsl
xlat
jge
sub
fstl
xor
cwtl
jbe
or
sub
mov
or
outsl
test
mov
xor
push
lcall
mov
or
jne
in
sub
fmuls
rorl
loopne
xchg
imul
jecxz
in
rorl
jmp
insb
mov
fsubp
div
inc
sbb
ss
jns
test
xor
aad
shl
adcb
dec
xor
std
js
mov
or
adc
add
std
scas
mov
pop
push
push
adc
inc
lods
dec
decb
push
adc
inc
mov
scas
faddl
mov
insb
das
dec
shl
enter
mov
mov
pop
in
das
push
scas
call
rcrl
clc
aaa
or
dec
lods
jno
cmp
cs
inc
xor
or
xchg
stc
push
out
xor
popa
xchg
jp
loope
lods
imul
push
scas
mov
mov
aaa
adc
jne
mov
dec
cltd
fst
fdivp
lods
mov
fisubs
jo
adc
dec
push
stc
cmp
movsb
aas
jno
scas
into
inc
jle
ror
sbb
popf
push
rcl
jae
scas
and
inc
sbb
je
lahf
cs
jb
outsb
mov
add
pop
and
sub
faddl
xchg
xchg
adc
xchg
loop
aas
fs
dec
cmc
cmp
xchg
xchg
adcl
xchg
mov
pop
icebp
sub
gs
aas
test
decl
push
movsb
rcrb
sbb
sbb
push
sbb
cmp
mov
lds
adcl
arpl
adc
mov
test
movsb
in
mov
sbb
cmpsl
rol
das
jne
or
mov
inc
inc
ds
add
pop
or
mov
bound
lock
in
cmp
push
js
lods
pusha
aam
xchg
inc
xor
test
jbe
adc
scas
arpl
out
fldt
push
movsb
mov
cmp
icebp
scas
and
rol
jnp
mov
adc
insl
leave
roll
test
or
jo
ret
jecxz
aas
fisttpl
mov
jl
popa
out
jecxz
push
cld
push
xor
adc
repz
sahf
cmp
mov
push
int
pop
push
loopne
or
xchg
cwtl
loopne
sar
cwtl
leave
jns
lods
dec
xor
shrb
fcompl
add
sahf
mov
and
cli
lea
xor
dec
cli
loope
dec
in
cwtl
xor
xor
or
cmpsl
fsubrs
xchg
xor
adc
adc
imul
ja
jno
mov
loope
sbb
pop
fisttps
pop
cmpsl
sub
push
inc
dec
add
lock
mov
lret
cwtl
lahf
loop
mov
add
in
mov
mov
jge
dec
xor
and
cmp
jmp
adc
mov
sbb
sahf
out
xor
mov
and
stos
cs
cltd
adc
repz
sbb
push
testb
mov
xchg
xchg
lahf
dec
sbbb
cmp
gs
loop
insw
sbbb
negl
cmc
dec
mov
cmpb
mov
adc
ljmp
pop
ror
cwtl
mov
dec
cmp
inc
mov
movsl
scas
in
lds
insl
xchg
imul
mov
int
xlat
add
fbld
in
imul
jmp
loopne
fsubrs
pop
jecxz
xchg
aaa
jae
mov
aam
mov
leave
pop
push
or
mov
cmpsb
aam
mov
xor
bound
mov
dec
cmc
mov
dec
lea
int3
scas
and
sbb
mov
test
xor
dec
push
ja
add
dec
cmp
sbb
lcall
sub
xchg
lret
stos
jo
add
ss
mov
xchg
bound
cwtl
push
and
pop
jbe
add
mov
or
mov
xchg
in
mov
jg
cmc
stos
mov
jae
lods
fdivl
sbb
cwtl
dec
aas
push
mov
cmp
add
jmp
xchg
cli
lcall
sub
sub
call
aam
xlat
push
sbb
adc
mov
repz
cmp
jle
daa
cwtl
lret
push
scas
mov
loop
mov
cwtl
rorb
out
jge
xor
or
mov
jbe
fistpll
dec
daa
push
ds
push
repz
xchg
fidivrs
enter
jne
rclb
lahf
sbb
loope
sub
jl
and
push
roll
mov
xchg
or
sarb
mov
jno
jmp
dec
mov
xchg
lea
xor
xor
test
xor
stos
clc
inc
enter
sub
aaa
call
xchg
iret
fbstp
add
aaa
scas
or
in
xchg
mov
ret
and
filds
jp
inc
add
lods
in
fimull
call
dec
push
iret
ljmp
inc
xchg
leave
movsl
and
das
pop
subb
fbld
dec
lds
test
mov
test
sub
lock
std
iret
xor
or
push
ret
les
mov
inc
dec
mov
push
and
xchg
jmp
cmp
xchg
mov
inc
cltd
cmp
in
or
and
imul
mov
adc
arpl
adc
push
divl
mov
int
or
dec
mov
push
jle
mov
jnp
sbb
ds
cmpsl
movsl
push
icebp
jmp
mov
loopne
sbb
fisubl
fdivs
push
mov
fstpt
jbe
jns
inc
add
pop
mov
popf
in
aad
cmp
mov
jl
mov
lds
dec
in
jge
push
roll
and
pop
sbb
add
and
scas
popf
fcmovb
daa
push
xor
cli
and
mov
push
addr16
xor
rcrl
dec
stos
mov
int
aaa
popa
or
inc
leave
idivl
push
insl
shrl
out
scas
sub
pop
inc
jle
xchg
ficoms
sub
movsl
mov
popl
scas
loopne
out
pop
mov
pusha
jp
leave
and
push
push
xchg
jecxz
imul
xlat
fwait
ret
mov
cli
pop
testl
dec
out
popf
cmp
sub
and
xchg
inc
sub
int3
jg
dec
enter
sbb
push
pop
into
sbb
cmp
cmpsl
fwait
mov
push
popl
fiaddl
adc
adc
scas
unpcklps
dec
fisubrl
and
bound
sub
jle
popf
shll
cmp
push
mov
inc
jp
mov
jp
inc
or
ret
inc
add
outsl
xchg
pop
add
mov
and
fwait
jmp
fdivl
sub
jmp
or
sub
mov
ficompl
sub
roll
push
sub
in
hlt
jns,pn
outsl
mov
gs
pushf
imul
mov
inc
jmp
mov
push
pop
add
sub
je
jecxz
js
mov
xlat
and
test
jbe
dec
pop
aas
mov
je
mov
xor
aas
xchg
push
aad
push
xor
fdivp
pop
je
push
sub
sub
popf
in
xchg
lea
mov
push
xchg
xor
andl
xchg
or
int
and
fwait
or
les
jge
cli
sbb
push
mov
add
rcr
fcomi
pushf
add
cmc
dec
icebp
out
repz
lods
pop
xor
fisttps
or
mov
outsl
cmpsl
inc
pushf
shr
loop
incb
dec
in
lods
or
ja
mov
or
xchg
jno
cld
xchg
jmp
add
inc
cmp
andl
scas
movsb
mov
xor
nop
jns
sbb
mov
rorl
cmp
movl
fistpl
andl
and
test
or
rcll
sbb
cmp
pushf
inc
or
loop
pusha
leave
xor
add
arpl
jne
pop
xchg
pop
js
xchg
imul
push
or
int3
mov
cmp
inc
jp
push
pop
mov
adc
xor
adc
lock
mov
imul
cmpsl
ljmp
push
dec
jmp
mov
inc
pop
mov
insb
mov
lods
pop
xchg
push
add
pushf
sub
mov
mov
ret
ja
push
lods
mov
adc
out
jno
outsl
sahf
inc
rol
and
adcb
call
and
dec
adc
shl
jne
out
leave
out
popf
rcrb
push
push
and
pop
incb
in
pop
popa
mov
les
jo
int
cmc
movsb
xor
xor
xor
cmp
mov
jecxz
into
sbb
jnp
dec
movb
mov
fadds
jp
addr16
in
prefetch
or
jne
mov
mov
xchg
loope
mov
orl
pop
aas
test
push
cld
lahf
int3
stos
sbb
popa
lods
out
in
lret
inc
jb
inc
sbb
sti
sbbb
and
lock
sub
nop
pop
fwait
cs
psubusb
out
in
adc
shrb
pop
pop
scas
loop
arpl
sbb
jl
ret
add
mov
pop
pop
fnstenv
add
imul
mov
outsl
into
imul
pop
inc
sbb
jne
inc
xchg
and
repz
pop
imul
int3
fadd
sbb
into
sbb
sbb
sub
call
std
and
fdivrp
mov
fsubrp
scas
jle
mov
leave
and
sub
pop
fnstenv
push
mov
xor
mov
pop
lods
aad
xor
mov
rolb
scas
movsl
jbe
clc
or
cmpl
mov
fsubr
fdivrl
test
insb
mov
ds
ret
mov
xchg
icebp
sub
aam
daa
push
sub
out
cltd
fisttpl
sbb
mov
mov
sub
bound
or
cltd
pop
and
lret
call
call
xchg
das
cmpsl
test
xchg
sub
out
jns
imul
je
popa
lret
pop
and
and
rorb
sbb
out
sti
sbb
push
add
dec
aam
mov
sub
cwtl
mov
test
xlat
scas
stos
jle
mov
pop
stc
fsts
pop
pop
or
in
add
imul
loope
push
xchg
in
and
jecxz
fimull
lock
inc
mov
outsb
mov
or
scas
and
repz
inc
push
lods
fistpl
pop
adc
jmp
mov
adc
lret
in
dec
call
in
lock
inc
cwtl
mov
xlat
dec
inc
fisttpl
xor
cs
mov
pop
lcall
xchg
xchg
ds
xchg
xchg
push
push
xlat
or
sbb
iret
es
test
call
pop
mov
xchg
mov
arpl
fsts
lahf
xchg
inc
sbbl
jne
jnp
jns
mov
jle
and
outsb
adc
imul
push
xor
or
xor
mov
fstps
hlt
xchg
cmp
nop
jl
sbb
jno
fmull
fnstcw
inc
fstl
xchg
inc
cmpl
cmp
push
and
push
test
mov
sbb
jns
cs
aad
sbb
shrl
cwtl
and
mov
mov
pop
sti
dec
sub
call
iret
sbb
xchg
mov
mov
setg
fadd
pop
mov
gs
add
jns
out
mov
xchg
mov
mov
cld
loopne
add
les
ret
xorl
imul
stc
push
push
jge
dec
jns
adc
cld
mov
enter
pushf
je
lret
mov
sub
or
mov
andb
aaa
sbb
ret
cltd
sahf
add
pop
lods
orl
cwtl
push
ret
test
push
dec
in
insb
rolb
xchg
lahf
test
loopne
lahf
in
fbld
sarl
push
aaa
mov
cmc
sti
xchg
movb
test
sbb
pop
pop
cld
or
mov
pop
mov
sbb
fwait
adc
testb
or
or
or
cmp
sub
jo
hlt
stos
pop
roll
shrb
lcall
mov
mov
inc
adc
and
cmp
adc
or
cmp
sub
ret
adc
sub
cmpsb
mov
ljmp
sub
nop
ret
adc
fimuls
movl
push
std
cmp
pop
enter
inc
mov
mov
imul
mov
ds
add
in
ret
add
pop
dec
push
cmp
mov
push
sbb
mov
mov
loop
mov
std
sub
fistps
jnp
cmp
bound
inc
in
push
jge
je
call
repnz
mov
pop
inc
jmp
call
jne
out
mov
insl
cs
cltd
test
jb
fiaddl
sub
fistps
scas
push
sbb
or
xchg
jg
and
adc
xchg
rorl
mov
push
sub
push
or
cwtl
movsb
or
adc
add
cmpsl
cmp
and
add
lret
fmull
loope
or
leave
xchg
xlat
push
cld
adc
dec
lea
xor
adc
pop
adc
jle
subb
ficomps
mov
rol
outsb
or
mov
aad
out
xor
scas
adc
xor
dec
inc
ja
test
stos
pop
stos
repnz
pop
push
mov
dec
imul
cwtl
mov
inc
cmp
test
repnz
dec
fdiv
lahf
cmc
fistl
insb
xor
dec
pushf
sbb
inc
adcl
fsub
push
repnz
mov
sub
jg
add
shll
out
xor
in
push
cli
inc
sub
mov
mov
pop
adc
dec
cmp
or
fisubs
mov
fcoms
ret
rorl
clc
ss
cmp
dec
push
xchg
fdivrp
aad
xor
dec
decb
inc
ficoms
out
mov
or
mov
test
or
and
fld1
mov
and
push
push
fnstcw
mov
mov
jg
jne
ja
dec
outsb
out
jo
mov
push
test
out
cwtl
xchg
sub
lds
in
inc
out
cmp
jp
in
ja
pop
xor
cmp
adc
jb
es
sbb
fs
shrb
in
push
nop
dec
sbb
push
xor
pop
cmp
test
stos
shlb
push
gs
mov
mov
ds
adc
sarl
or
adc
inc
lds
outsl
out
outsl
stc
jne
out
arpl
and
test
cli
shll
pop
or
cmp
ret
hlt
out
ja
fldl
cmp
jg
sbb
dec
mov
sub
movsb
outsb
fiadds
push
jp
jmp
jbe
das
arpl
lods
ss
fisttpl
xlat
hlt
fsubrl
movsl
pusha
jecxz
mov
lcall
jno
jnp
xchg
sub
mov
lods
das
jp
adc
mov
mov
test
cmp
into
mov
push
pop
xchg
xchg
add
jo
push
dec
xchg
sbb
je
dec
idivl
push
fistps
cmp
jno
outsl
mov
add
sub
push
pop
pop
call
add
pop
cmp
inc
pop
push
movsl
dec
emms
mov
xor
movsb
lcall
inc
pop
mov
ds
cmp
pop
nop
jns
fnstcw
je
lods
jmp
or
outsb
sbb
int3
add
adc
lcall
pop
push
scas
imul
ret
shr
fisubl
jns
mov
mov
jae
mov
loop
mov
testb
mov
sub
pop
jbe
xor
scas
xor
stos
out
xor
dec
imul
xor
xchg
inc
add
push
jb
bound
lods
mov
aaa
pusha
loope
test
jne
mov
mov
jno,pn
mov
xor
sarl
addb
jnp
pop
lods
cmc
xchg
or
stc
ret
test
rcr
mov
dec
daa
repz
push
in
and
daa
imul
cmpsl
mov
rolb
mov
out
push
sbb
add
mov
bound
add
mov
or
add
jge
inc
dec
shlb
inc
aas
push
jne
inc
mov
rorl
cmp
orb
rorb
sar
scas
mov
sahf
push
repz
and
ds
repz
lock
aas
fcomps
enter
inc
jle
or
mov
push
mov
movsb
repz
add
fcomps
fisttps
loop
jns
mov
cmp
mov
xchg
inc
lcall
xchg
jmp
sub
mov
push
mov
push
and
jl
xor
push
je
movsl
imul
jb
dec
jns
add
cwtl
push
adc
xor
jmp
shll
dec
cli
frstor
int
adc
jg
aas
pop
aam
leave
lret
stos
into
sbb
xor
pusha
inc
xor
mov
mov
xor
fs
cmp
popa
stos
bound
xor
xcrypt-ofb
cmpsl
das
or
test
aam
mov
es
out
pop
mov
pop
lret
popf
cmp
aaa
fwait
mov
dec
mov
rclb
xlat
in
test
adc
leave
and
xchg
gs
scas
mov
out
iret
loopne
stos
orl
and
jecxz
call
pushf
or
insb
loope
sbb
cmp
ljmp
loope
cmpsl
adc
aas
rcr
popa
aam
cmpsl
sbbl
lods
mov
lods
push
jl
push
and
adc
mov
inc
test
xlat
inc
xlat
xchg
es
jmp
mov
loope
dec
xor
imul
cltd
push
push
jb
aas
or
aad
aas
jae
or
mov
mov
sbb
sub
cmp
movsl
sahf
sub
insb
xor
jp
in
push
adc
mov
jb
sbb
mov
xlat
in
add
leave
xor
cmp
daa
and
inc
push
test
xchg
pusha
mov
xor
nop
hlt
jb
shll
loop
cmp
mov
or
adc
jmp
popa
jg
push
and
sti
es
or
mov
or
lret
inc
in
jbe
sub
xchg
or
sbb
mov
js
xor
push
scas
repnz
mov
loopne
or
clc
nop
sub
shlb
sub
lock
insb
add
aam
sub
jl
addr16
ss
cmp
outsb
les
loop
xchg
pop
inc
mov
xchg
add
cmp
cs
in
mov
outsl
sahf
jo
jns
ljmp
cli
sbb
xlat
dec
and
lret
sbb
inc
insb
fisubrs
das
in
movsb
mov
mov
pop
mov
pop
push
dec
repnz
jecxz
rcrl
jecxz
mov
mov
pushf
push
xchg
inc
loope
add
mov
pop
out
jg
fcompl
sbbl
rorb
fsubs
mov
dec
int
and
or
adc
mov
out
jge
out
push
pop
push
sbb
in
das
decb
xchg
inc
insb
rorb
mov
cwtl
jp
mov
push
push
jb
orb
shll
je
std
jo
in
sbb
imull
std
pop
push
cli
adc
dec
ret
sub
pop
mov
xor
inc
inc
adc
cltd
cwtl
jecxz
bound
and
cmp
shlb
in
cmpl
xor
and
daa
iret
shll
repnz
lret
pop
mov
mov
jns
mov
xchg
mov
outsb
push
or
arpl
inc
jecxz
dec
int
push
sti
clc
fsubs
ds
ljmp
inc
test
dec
and
les
pop
cwtl
int3
sti
and
adc
mov
sub
pmaxsw
sbb
mov
lret
mov
jbe
clc
ljmp
rcr
std
outsl
repnz
scas
sbb
mov
bound
outsb
enter
aad
add
xlat
pop
bound
push
imul
cmp
loop
stc
jg
in
xor
test
fs
sub
xor
xlat
xchg
cmpsl
mov
sub
aas
fisubl
divl
adc
lret
jmp
cs
mov
mov
or
mov
test
pop
cmp
adc
fisubl
sub
mov
in
mov
mov
adc
cwtl
mov
ret
sbb
adc
loope
cmc
push
add
filds
stc
mov
mov
cs
inc
inc
jmp
xor
fwait
lods
mov
clc
popf
pop
jmp
jmp
ds
fadds
mov
inc
xchg
sub
inc
mov
jbe
stc
mov
sbb
insl
mov
cmpsl
pop
adc
jno
leave
cmp
mov
shrb
rorl
imul
inc
push
jge
adc
out
clc
rcr
and
arpl
loopne
push
jmp
in
jl
sub
cmc
pop
mov
mov
mov
sub
pop
iret
rcrl
or
xchg
pop
mov
xor
cmp
outsb
mov
cmp
arpl
es
into
add
push
aaa
mov
aas
aas
mov
push
xor
jbe
fs
leave
xor
test
jbe
mov
aaa
pop
xor
sub
dec
gs
jne
dec
push
sub
mull
scas
fidivrl
ret
mov
push
mov
push
fldcw
jns
stos
bound
fdivrl
mov
and
in
jmp
jge
pop
push
xchg
jbe
cmp
dec
mov
cwtl
jo
xor
mov
xchg
jp
xchg
int3
sahf
mov
scas
add
xchg
mov
aad
jns
ljmp
or
fidivs
pop
mull
jo
xchg
pop
ret
or
mov
cmc
ljmp
pop
pop
ljmp
mov
ja
mov
mov
mov
inc
push
daa
daa
cmp
push
addr16
lods
push
push
jb
xor
out
pop
packuswb
dec
stc
pop
lods
or
int
mov
mov
cmp
sub
and
enter
and
push
cmp
flds
dec
xor
pop
mov
pop
rclb
sar
sub
cmpsl
cmp
xchg
push
mov
lcall
mov
xor
iret
cmpsl
pop
sbbl
fwait
data16
jno
and
push
push
enter
mov
jae
dec
fildl
adc
mov
mulb
cld
es
sub
icebp
loopne
jge
jmp
mov
or
sbb
push
filds
test
in
xor
xchg
jb
ficomps
mov
leave
lahf
out
and
hlt
jmp
cmpsb
rcll
push
gs
push
and
int
das
fbld
push
jae
out
in
mov
imul
outsb
add
pop
loope
lea
iret
mov
fildl
adc
stos
in
lods
mov
sub
movsb
dec
mov
pop
add
and
arpl
xor
pop
negb
in
sub
dec
enter
lds
xchg
incl
and
mov
push
cwtl
mov
test
xor
jno
leave
cmp
fimuls
test
rcl
mov
out
clc
adcb
ljmp
cmpsb
repz
xor
rorb
inc
pushw
cmp
sub
bound
rclb
test
fbld
xchg
popf
in
and
rolb
mov
fsubl
jg
out
jae
mov
fidivrl
ret
push
pop
xorb
movl
and
inc
js
fildll
nop
jns
push
je
add
add
xor
fmul
addr16
iret
jnp
mov
out
xchg
push
sti
outsl
cmc
jo
sahf
cmp
sub
nop
push
inc
mov
cmp
pop
or
gs
outsb
js
scas
icebp
inc
sahf
lcall
movsb
nop
xchg
shll
jge
pop
add
in
mov
sub
cmp
jo
cmc
lahf
pop
push
mov
dec
dec
lcall
mov
mov
dec
sub
mov
int3
int3
sti
ds
rcl
movsb
loopne
and
jge
jl
xor
mov
mov
mov
ja
xchg
or
fisttpll
adc
adc
mov
mov
sbb
mov
fcoml
or
aaa
and
push
stos
inc
push
mov
data16
xchg
pop
fsubrs
push
pop
dec
mov
in
les
nop
fucomi
xchg
inc
add
aas
shlb
adc
mov
push
xor
add
loope
loopne
inc
cmc
mov
sub
into
aaa
mov
mov
xchg
leave
pop
int3
call
jle
and
push
pop
and
aad
inc
or
jecxz
fcmovnb
pop
pop
aaa
sarb
ds
or
stos
aad
sbb
shrb
pop
les
ljmp
call
es
adc
aaa
xchg
push
repnz
popf
dec
xchg
pop
jno
mov
add
clc
jge
or
call
sbb
mov
jno
fcomp
in
jne
sbb
mov
or
fimuls
mov
and
pushf
xor
jns
push
dec
mov
daa
jmp
shll
mov
cmpsl
out
mov
xchg
jmp
jg
inc
push
je
sub
aam
je
cs
fdivp
imul
sbb
sarl
push
mov
cmp
jae
push
add
loope
fisubl
mov
xchg
aad
lods
cmpsb
out
dec
or
popf
adc
movsb
shll
push
inc
in
adc
in
addr16
data16
es
sbb
sub
mov
push
add
mov
stos
stc
mov
push
lock
shll
sub
xor
dec
clc
lods
jmp
mov
fstpt
jnp
xor
dec
or
shl
dec
cmc
mov
push
dec
pop
dec
dec
xchg
lods
popf
and
outsl
aas
xchg
adc
jmp
les
stos
pop
xlat
jl
addb
lea
imul
test
notb
negb
sub
or
mov
ret
movsl
push
enter
popf
jo
push
test
jmp
mov
adc
in
cmp
mov
bound
jbe
ret
pop
andb
ss
iret
loop
ds
cmpsl
sbb
sti
jne
scas
xchg
mov
adc
mov
inc
add
jno
int3
loopne
out
ds
ds
sub
dec
sahf
inc
ljmp
sub
stos
sbb
stc
mov
push
loope
outsl
cmp
insb
jnp
repz
push
sbb
das
jae
add
out
sub
bound
aad
iret
mov
into
ror
rclb
or
mov
popf
adc
inc
rcr
aad
mov
outsb
mov
jmp
push
add
push
prefetchnta
or
in
mov
sub
push
and
push
je
xor
inc
daa
filds
scas
cli
adc
adc
mov
das
aam
outsl
mov
lea
leave
movsb
leave
pop
xor
rcll
sbb
loopne
xchg
xchg
aam
sbb
in
xor
sbb
jne
pushf
push
sarl
adc
xorl
in
inc
sbb
jns
ds
push
push
jmp
xchg
movsl
das
xor
insl
mov
cmpsb
stos
mov
arpl
jns
lods
sub
cmp
fs
sbb
jne
jg
add
imul
out
outsl
mov
pusha
sbb
icebp
enter
fcmovne
std
in
jg
sub
mov
xchg
gs
cmp
push
jnp
hlt
mov
xchg
repnz
bound
movsl
fadd
int
fisttpll
movsb
aas
or
cmpsb
in
push
push
dec
sti
pop
push
outsl
sbbb
push
leave
mov
ss
inc
sbb
xchg
repz
cmpsl
xlat
fwait
test
test
loope
mov
add
mov
jbe
inc
mov
aas
scas
test
or
jnp
in
dec
ret
jg
sahf
mov
pop
sub
dec
dec
xor
in
push
cmp
dec
adc
bound
adc
imul
lret
sarb
dec
stc
jmp
push
pop
test
in
pop
fcmovu
xchg
mov
and
pop
mov
inc
scas
stos
popf
adc
mov
aam
das
nop
or
pusha
mov
clc
mov
mov
adc
mov
xor
stos
dec
or
stos
push
sbb
push
sub
sti
int3
jmp
push
pop
jp
and
dec
jle
xor
push
mov
xchg
fs
adc
mov
addl
mov
jb
aam
clc
pop
mov
lret
dec
push
stos
mov
sbb
adc
mov
ljmp
and
ret
push
cmpsb
int3
scas
push
mov
cmp
imul
shrb
inc
lock
filds
or
je
scas
js
jnp
xchg
push
inc
inc
xor
ret
in
into
push
in
stos
lds
lock
iret
add
mov
mov
cwtd
gs
xchg
jl
icebp
mov
and
dec
jbe
stc
repz
jae
je
mov
mov
jmp
addl
inc
pushf
movsl
ret
or
cmc
add
pop
push
pop
jb
popl
adc
jp
xor
xor
roll
push
mov
or
lds
or
jle
lahf
js,pn
lock
imul
pop
les
push
sbb
sub
push
nop
pop
mov
clc
sbb
rclb
pop
fwait
mov
aad
inc
cmp
scas
sbb
push
gs
lock
lods
pop
jg
fistpl
cmpb
mov
addr16
cmp
mov
pushf
hlt
xchg
aam
lock
push
add
cmp
or
jg
xor
jmp
push
pop
icebp
or
mov
decb
inc
xlat
pop
loope
jmp
xchg
dec
test
and
stos
push
insb
loopne
call
inc
xor
or
push
fiadds
mov
jmp
mov
mov
adc
mov
push
sbb
and
sbb
fdivrp
and
shl
inc
ja
jl
sahf
xor
and
loope
and
popf
or
mov
cmp
add
in
pop
pusha
inc
sti
imul
out
loop
ds
cwtl
or
imul
xlat
imull
test
das
fisubs
stc
addb
mov
idivb
aas
xchg
cmp
dec
mov
and
lahf
push
lea
and
mov
adc
mov
mov
subl
repz
or
xor
int
mov
cmp
lock
add
adc
ja
ljmp
sbb
or
xor
ljmp
std
xchg
mov
push
sub
cltd
hlt
push
xchg
insl
outsl
repnz
xor
mov
outsw
fsubp
addr16
push
push
std
testl
jge
out
dec
push
cmp
cmp
cmpsl
pushl
hlt
mov
out
aas
add
mov
aaa
cmp
pop
xchg
mov
call
arpl
add
aas
aad
nop
jge
insl
dec
sub
xchg
mul
inc
aas
mov
fisttpll
dec
push
aad
fidivs
mov
mov
neg
popa
movsb
shll
bound
add
xchg
data16
scas
push
nop
in
lahf
mov
fbld
mov
call
add
ret
aaa
pop
loop
inc
pusha
mov
sbb
clc
xchg
scas
loope
pop
xchg
sub
xchg
arpl
mov
scas
push
pop
in
cmp
movaps
jp
xchg
andb
jmp
xchg
pop
in
aam
xor
int
pop
push
in
and
lcall
sub
loope
mov
je
popa
inc
sbb
cmp
dec
mov
dec
mov
jnp
jne
je
inc
test
aam
pusha
notl
leave
clc
cs
push
xorb
imul
xchg
sub
mov
dec
xor
mov
stos
jge
jno
xor
in
sarb
and
in
lea
xchg
enter
lahf
mov
in
cmp
pop
dec
push
stos
aam
loope
out
int
adc
pop
cmp
push
sub
mul
lods
pop
imul
sti
mov
iret
push
sahf
in
sbbl
push
or
xor
mov
ficomps
out
push
add
mov
fisttpl
dec
sbb
aaa
cmc
pop
popa
fnsave
addb
push
out
lea
cmp
inc
or
pop
and
mov
add
jmp
hlt
xlat
call
xchg
xorl
imul
mov
fidivs
lret
data16
lods
and
bnd
adc
popa
jbe
std
lea
xor
out
add
arpl
or
xorb
into
dec
cmp
decl
popf
xor
mov
jno
rcrb
shll
stos
pushw
inc
mov
aad
icebp
ss
dec
dec
add
push
add
lret
and
push
jecxz
xchg
fdiv
push
repz
push
adc
jno
movsb
push
and
mov
mov
xchg
adc
jge
jl
insl
xchg
ret
jbe
add
jmp
lods
xor
xor
test
out
xchg
mov
dec
jl
nop
jno
sub
and
mov
dec
scas
xor
cli
jae
xchg
iret
cmp
repz
sbb
xchg
cmp
ret
sbb
fiaddl
dec
adc
lret
outsb
movsl
loopne
inc
lcall
mov
jle
push
imul
push
fldcw
inc
push
sti
jmp
scas
mov
hlt
add
data16
lds
scas
push
pop
mov
mov
pop
dec
adc
mov
stc
cs
inc
aas
mov
dec
into
xchg
popf
pop
push
sbb
mov
mov
xchg
hlt
lret
pop
popa
cwtl
test
popf
cmp
and
cmp
xor
mov
fnstsw
and
addb
pop
ss
mov
inc
bound
adcl
and
iret
push
xchg
dec
jmp
roll
insb
cli
dec
incb
lods
sub
push
inc
repnz
jnp
dec
jl
flds
adc
or
xchg
jp
mull
je
jle
jg
mov
cmp
pop
lds
xor
xchg
jg
pop
sub
arpl
push
xor
popa
std
add
iret
rol
and
jge
loope
nop
sbb
outsb
out
loopne
cmp
addr16
cmp
pop
outsl
fnstenv
sti
mov
loopne
hlt
clc
cmpsl
mov
stos
sbb
push
lcall
mov
in
fsub
pusha
add
add
pop
arpl
fstps
dec
gs
aas
cld
sti
dec
lds
adc
mov
addr16
xor
loop
popf
xchg
xor
mov
cltd
test
js
jp
dec
jg
adc
pushf
xor
bound
mov
sti
pushf
jp
call
addr16
adc
fadds
mov
in
hlt
jle
push
out
or
sbb
mov
lcall
stos
bound
inc
cmp
jl
cmp
pop
jmp
inc
mov
je
sub
sahf
in
xor
mov
lret
cmp
fs
scas
outsl
lcall
scas
sub
adc
dec
into
xor
test
imul
xor
pop
dec
aaa
daa
cmpsb
sbb
jae
jne
addr16
inc
cld
push
push
xchg
jmp
add
xor
hlt
pop
sub
push
sti
nop
mov
pop
orl
add
mov
mov
fs
test
xchg
test
cmp
jno
push
inc
xchg
xchg
mov
cmp
idiv
aas
xor
push
sub
shl
lods
shlb
sub
adc
or
pop
das
sbb
dec
inc
insl
aad
pop
ljmp
shll
mov
inc
inc
fadd
scas
gs
clc
mov
xor
data16
cs
push
push
cltd
test
aad
imul
test
frstor
cli
test
insb
xor
adcl
add
cld
out
nop
lods
cltd
mov
sbb
loopne
pop
in
sub
fsts
fisubrl
nop
ret
xchg
xlat
fld
js
pop
clc
rclb
add
popf
repnz
jo
push
std
mov
popf
rolb
mov
push
xchg
lret
stos
push
jae
cld
negb
imull
pop
into
adc
push
sub
sbb
out
std
or
ja
shlb
adc
loop
imulb
jecxz
xor
mov
pop
ret
cmpsb
scas
dec
push
rcr
and
and
xor
notl
movsl
addr16
xchg
adc
pop
xor
leave
insl
push
pop
scas
pop
cmp
xor
mov
push
mov
pop
out
sar
punpcklwd
sbb
rolb
scas
mov
aaa
clc
fs
cltd
mov
or
push
pushf
push
push
cmp
mov
jl
add
lods
repz
push
cmp
jmp
jle
test
nop
and
leave
test
inc
mov
dec
xor
mov
arpl
pop
and
cltd
or
dec
cmpsl
test
jb
mov
into
fnstsw
sub
xchg
mov
or
mov
or
mov
je
add
jno
push
mov
int3
stc
or
out
cmpsb
in
sub
mov
insl
inc
pavgb
mov
shr
mov
push
jp
xchg
pop
xchg
mov
sub
in
mov
pop
mov
and
ficoml
andb
inc
or
push
int3
dec
xor
and
add
push
xor
cmpsl
in
push
pop
push
out
push
dec
xor
arpl
jg
getsec
inc
cmp
test
pop
mov
enter
or
mov
sti
cmpsl
bound
add
imul
fdivs
push
insl
pushf
cmp
sahf
inc
mov
rorl
sub
push
add
xchg
adc
sbb
cmpsw
pop
cmp
mov
push
mov
aas
cmpsb
adc
adc
loope
icebp
mov
mov
or
out
shr
in
adc
sbb
pop
repz
pop
lea
imul
sbb
or
xchg
fs
lret
shll
add
sub
mov
insb
inc
inc
cmp
test
pusha
jle
cmpsb
push
and
fisubrs
xchg
popa
or
dec
aad
mov
enter
xchg
mov
lea
popf
stos
mov
aam
icebp
jle
movsb
and
nop
jg
and
fldenv
sar
inc
lock
fsubrs
mov
mov
cmp
cmp
xchg
dec
xchg
scas
je
push
je
fadds
daa
cld
xor
xlat
push
test
enter
pop
test
pusha
mov
in
sub
shll
mov
jg
cs
aaa
rorl
ret
rcrb
lods
mov
push
je
dec
jno
xchg
outsl
dec
adcl
adc
inc
cmp
rorl
ds
lret
xchg
mov
inc
xchg
cmp
adc
inc
sub
scas
cli
cmp
cmp
ds
pop
mov
aam
jo
inc
mov
mov
add
or
push
fisubl
adcl
mov
jne
cwtl
sub
inc
mov
xor
sbb
js
jbe
add
add
subb
fsub
add
out
stc
pop
loope
mov
test
int
sbb
cmp
addr16
pop
int
sahf
add
stos
add
xchg
mov
dec
aam
or
testb
inc
mov
test
jle
mov
std
pop
lret
lods
shll
shlb
scas
rorb
push
clc
or
pop
push
mov
sti
dec
xchg
shll
push
fcoms
fsubl
pop
movsb
movsl
cmc
inc
pop
jnp
mov
cltd
movsl
push
lods
fimuls
fnstcw
jl
sub
xchg
mov
inc
popl
ss
push
pushf
fidivrl
loop
mov
roll
pusha
dec
jno
xchg
popf
ljmp
scas
and
mov
push
movsl
jae
je
xlat
cmpsl
call
clc
or
cwtl
inc
jmp
aas
js
cmp
mov
pushf
aam
pop
fidivl
int3
fdivr
mov
mov
cmpsl
stos
pop
sub
enter
and
inc
es
loope
mov
fbld
lock
xchg
push
jecxz
jp
cmp
mov
sahf
jle
addr16
and
out
add
sahf
test
push
stos
pop
cmpsl
lret
pushf
sti
push
movsb
divl
das
and
pop
je
inc
lea
lods
add
cld
das
aas
inc
enter
push
inc
int
fdivp
stos
nop
arpl
pop
rcr
mov
xor
mov
mov
xchg
movsl
cvtps2pi
pop
cmpsl
int3
jecxz
fstl
js
pop
incb
jno
inc
pop
pop
and
in
sub
loopne
dec
dec
jl
ds
loopne
dec
sbb
and
or
fidivrl
mov
sti
push
cmpsb
in
lods
jmp
mov
adc
mov
dec
mov
cli
pop
out
sub
mov
jns
in
fwait
add
xor
cmp
ret
call
mov
adc
sub
jecxz
dec
push
inc
mov
jbe
push
fldcw
sbb
mov
frstor
cltd
fnstenv
inc
sbb
mov
mov
ret
add
cmc
mov
gs
mov
and
mov
je
ror
cmp
dec
xor
lea
mull
mov
insb
clc
call
imul
enter
bound
sub
sti
loope
xor
into
inc
pop
xchg
pop
lahf
add
ss
mov
mov
lods
add
lds
mov
dec
cmpsl
loopne
stos
and
shl
pop
push
mov
fildll
in
cmp
call
or
mov
notl
jnp
adc
push
lret
mov
arpl
imull
xor
add
pop
je
mov
sbbl
push
add
jb
cmp
jo
in
jnp
test
ret
push
sub
int
pop
adc
xorb
cmp
cltd
mov
inc
loopne
into
xlat
cld
pop
or
inc
pop
or
sbb
xchg
out
sub
iret
push
aas
jmp
ds
jbe
andb
into
iret
lods
push
sti
or
ss
ret
cld
setbe
push
test
xor
cmp
out
fstps
push
cli
push
xor
orb
bound
sbb
orb
iret
stos
into
inc
inc
test
mov
rolb
ret
in
cmc
out
jns
test
jns
mov
adc
cmp
in
and
dec
mov
test
rcrl
pop
dec
xor
int
loop
dec
lods
lock
push
inc
push
push
pusha
cmpsb
aaa
leave
sub
dec
jne
call
popa
shll
sahf
ljmp
cmp
insl
mov
shll
call
mov
adcl
jnp
pop
dec
mov
adc
scas
push
dec
mov
fisubs
sbb
ja,pt
mov
scas
sbb
sub
fwait
stos
shl
xchg
out
test
and
fwait
pop
ret
ret
sar
inc
lea
fs
pop
icebp
ret
sub
xchg
sbb
adc
sub
xchg
movsl
inc
cmpsb
push
sub
jne
sub
test
mov
shll
mull
repz
mov
mov
xchg
mov
mov
push
inc
push
in
ret
lahf
hlt
sahf
repz
xlat
mov
aaa
call
pop
push
sti
xchg
shlb
push
xchg
push
push
cmc
mov
pushf
lret
jp
push
lahf
inc
jecxz
in
adc
call
dec
fs
mov
mov
xchg
jl
xor
cmp
call
les
inc
outsl
lods
cmp
adc
add
sub
adc
xchg
shr
in
cs
out
cli
out
inc
fisubrl
mov
pop
mov
xchg
adc
sub
push
add
inc
pop
fmuls
and
jg
out
sbb
pop
jb
cmp
outsl
in
sub
sti
int3
add
and
cmp
mov
fisttps
pop
subl
or
out
sub
xchg
into
imull
push
adcl
stos
sbb
xor
sbb
loopne
add
mov
fwait
cmpsl
dec
jge
ja
mov
out
shrb
mov
cmp
jge
popf
js,pt
jne
pop
out
mov
push
shlb
jge
insl
outsb
and
push
das
rcll
mov
sbb
xchg
push
fwait
mov
cmpsb
mov
aaa
cmp
push
loop
std
pop
pop
inc
fwait
movsl
adc
adc
nop
in
cmp
int
test
mov
fcoml
call
sbb
leave
shlb
dec
ret
out
into
ljmp
out
mov
sbb
push
outsb
movsb
ficoms
jg
jns
jmp
popa
jmp
adc
fisttps
outsb
int3
jge
loop
fisttpl
mov
add
test
jne
fldl
test
jp
push
and
fnsave
inc
subb
dec
mov
pop
pop
lock
xor
lret
jl
mov
inc
aas
loopne
and
test
call
out
add
fsubrl
adc
sbb
adc
pop
xchg
cltd
aaa
ja
add
mov
fs
mov
test
out
sahf
xchg
jno
imul
mov
lss
sbb
hlt
or
dec
mov
sbbb
or
mov
test
push
stos
xchg
test
jmp
or
cmp
xchg
cli
cmp
lods
mov
inc
sbb
addr16
inc
out
fstps
dec
xchg
loopne
fisubs
jl
xor
sbb
pusha
jne
fidivs
inc
mov
fwait
sub
pop
das
popf
out
mov
repnz
cltd
xchg
dec
mov
pushf
mov
mov
ja
jne
inc
cmpsl
sahf
xor
bound
xchg
std
jecxz
xchg
add
mov
adc
push
pop
dec
orl
jno
in
jno
mov
or
decl
lods
or
call
mov
das
test
sub
notb
icebp
and
xor
mov
xchg
mov
icebp
pop
ja
push
nop
scas
sti
das
sub
mov
jbe
jp
mov
lret
cmp
sub
lahf
inc
ds
adc
repnz
scas
or
clc
cmpsl
mov
xchg
add
mov
cmpl
xchg
ret
adc
fcompl
push
icebp
push
lods
js
adc
mov
add
push
push
repnz
aaa
xchg
dec
mov
rclb
jns
mov
aam
xchg
push
test
xor
pop
shll
mov
into
out
es
lcallw
mov
pop
and
popa
mov
mov
into
inc
aaa
nop
sub
sub
sub
sub
lret
and
mov
cld
stos
adc
add
mov
inc
xor
int
shl
mov
imul
push
insl
sbb
inc
out
int
je
dec
jle
arpl
adc
inc
cltd
ja
cmp
movsl
out
xchg
inc
lcall
push
inc
sbb
cmp
pop
nop
jecxz
and
mov
stos
scas
mov
repnz
adc
mov
cmp
adc
js
push
imul
cmpsl
ljmp
cmp
sub
aad
test
dec
mov
cmp
push
test
fwait
adc
sar
xor
or
ret
dec
clc
mov
enter
dec
lret
jbe
pop
ficoml
movsb
jns
cltd
repnz
test
jno
insb
add
adc
push
das
imul
jnp
shl
lods
cmp
int
lds
out
lahf
add
cmpb
clc
sub
xlat
cwtl
sahf
loop
in
int
or
in
cmp
out
outsl
call
mov
mov
dec
in
push
daa
mov
fsubp
mov
dec
jg
daa
fisubs
pop
mov
mov
call
hlt
mov
std
out
xchg
mov
add
mov
sbb
xor
addr16
cld
cmpsb
add
bound
pop
jecxz
sub
xor
cmp
adc
cmc
push
mov
outsb
mov
push
mov
push
fmull
xor
jg
into
movzwl
mov
mov
in
or
and
sbb
clc
mov
jnp
adc
testl
enter
inc
xchg
sbbl
std
fistl
xlat
mov
rcl
mov
js
imul
dec
mov
cs
xchg
and
imul
adc
sub
test
dec
jge
adc
aaa
push
out
sbbl
lods
mov
insl
push
std
rorb
xor
imul
inc
cmc
lock
jb
daa
xor
enter
sbb
sub
outsb
scas
xor
repz
jae
and
inc
lret
ljmp
leave
xlat
test
sbb
inc
pop
pop
in
jg
jmp
negl
adc
int
jns
xchg
xor
push
fdivrs
int3
mov
rcl
and
jnp
sub
sbb
stos
test
sub
jno
outsb
inc
ds
adc
arpl
gs
cmp
and
lret
scas
arpl
jae
mov
lea
filds
inc
inc
repz
jg
aam
adc
fsubs
xchg
and
mov
and
or
rolb
sub
ljmp
test
or
das
lock
loope
jnp
ss
ljmp
mov
lcall
outsb
scas
push
cs
test
sbb
mov
mov
jl
fsubrs
fwait
movsl
jecxz
xchg
jns
into
adc
hlt
jnp
pop
mov
dec
repz
jns
push
aaa
insl
negl
mov
mov
andl
ret
shl
ret
test
pusha
adc
aaa
adc
mov
cmpsl
loope
push
pushf
pop
inc
popfw
out
ret
lea
pop
dec
movsl
out
inc
js
stos
rorb
cmp
fnstenv
sub
adc
in
inc
xor
jle
push
shlb
test
push
fcompl
push
imul
dec
int
frstor
xor
in
rcl
insb
lock
stc
inc
push
mov
sbb
lret
pop
pop
cmp
adc
mov
movaps
ds
movsb
adc
push
movsl
out
inc
divb
xor
adc
jge
sbb
popf
out
push
frstor
add
inc
sbb
cld
lahf
ret
aam
hlt
push
add
jl
push
mov
sub
mov
imul
loop
es
sbb
cmp
sub
cwtl
fisubl
xor
push
in
aaa
daa
mov
negl
push
xchg
inc
sub
cs
ljmp
cmp
ds
pushf
fidivl
push
fs
movsb
movsb
sub
pop
xor
jne
adc
das
iret
sub
cmp
rolb
mov
in
lcall
shll
rcrl
and
jle
fimull
dec
lcall
sbb
cwtl
inc
cmp
or
cmp
mov
xor
jo
adc
clc
ror
pop
stos
add
dec
xor
fistpll
in
dec
dec
imul
push
or
pop
push
cli
lret
loop
and
sub
xor
jge
arpl
cmp
cmp
fistps
hlt
loope
cmp
fidivl
rol
add
lock
out
out
sbb
imul
lcall
inc
add
idivb
cmpsb
xchg
out
test
call
fcomip
loope
ja
jns
dec
pop
stc
jp
outsb
sbb
ljmp
or
fwait
push
lret
mov
aas
aam
enter
imul
iret
stos
jae
mov
mov
in
aad
pop
std
mov
push
xchg
cmc
pop
push
mov
loopne
push
and
repnz
cld
push
or
jle
lods
test
mov
fldenv
cmp
and
stos
cmc
lahf
dec
mov
outsl
out
insb
push
jecxz
sbb
nop
movsb
xchg
sbb
cwtl
ret
fsubr
cmc
push
pop
sbb
mov
pop
stos
call
movb
pop
and
mov
xor
add
dec
fldcw
mov
out
pop
mov
inc
jne
sub
or
pop
jmp
mulb
loope
jbe
aam
inc
dec
mov
jl
inc
dec
int3
or
jae
fs
daa
in
sub
stos
pop
loope
call
mov
stos
lahf
das
jmp
gs
and
incb
icebp
aam
xor
push
jge
mov
std
or
pop
jge
xor
jl
push
push
adc
dec
cmp
push
and
cmp
mov
cmpb
inc
and
ljmp
mov
mov
nop
mov
or
cmpsb
leave
shll
into
nop
call
call
jae
outsb
stos
insl
cltd
mov
roll
add
std
ljmp
int3
out
ret
adc
fidivl
mov
sbb
pusha
xchg
lods
dec
cwtl
andnps
popf
mov
pop
roll
cmp
push
pop
das
inc
pop
jl
sbb
pop
lcall
les
daa
repnz
mov
enter
cmpsb
mov
daa
sti
andb
lods
cld
inc
fistps
push
dec
xchg
cld
mov
sahf
xchg
sbb
push
fbstp
adc
inc
cwtl
sti
jp
fsub
mov
lods
sub
jb
popf
iret
cwtl
pop
movsl
xchg
clc
call
lods
sub
dec
cmp
mov
sbb
mov
sbb
xchg
sub
stc
std
mov
xchg
movsl
lods
loope
andl
rclb
iret
add
into
in
call
sbbl
mov
call
cmp
cmpsl
in
mov
and
adc
ds
add
cmpsl
fisttps
or
mov
add
push
sub
ret
mov
nop
jns
dec
test
xchg
incb
out
std
or
sbb
scas
xor
fdivs
js
mov
inc
mov
mov
inc
rcrl
addr16
dec
mov
test
push
test
xchg
ss
and
jns
loop
jp
cmpsl
divl
pop
testb
lock
mov
subb
repz
scas
stos
loop
pop
inc
add
xor
jne
xchg
jl
add
dec
daa
repz
inc
popa
pusha
xlat
add
cltd
dec
mov
in
and
addr16
and
test
dec
cmp
nop
loop
mov
addl
push
inc
js
mov
shl
cmc
or
or
mov
mov
mov
adc
test
sbb
sbbl
xor
cmp
jb
push
icebp
jl
jmp
bound
mov
and
sub
shl
dec
loopne
jmp
js
das
dec
mov
dec
cmp
sbb
sahf
jo
push
inc
inc
lret
and
push
sbb
mov
push
add
mov
in
and
push
popa
sti
fstpt
jecxz
data16
in
jge
out
jecxz
mov
aad
jae
mov
icebp
dec
jae
mov
xor
cmp
xor
fistl
lods
ret
sbb
loop
fisubs
call
add
daa
or
call
add
aad
adc
in
mov
xchg
mov
xor
mov
mov
jmp
add
add
ljmp
sbb
cwtl
pop
dec
xlat
jbe
daa
mov
xor
fwait
mov
in
outsb
aad
lds
jno
inc
les
mov
add
dec
cwtl
push
adc
xlat
fnsave
sbb
iret
or
jle
daa
pmulhw
repnz
mov
int
ret
rcrb
outsl
out
lret
adc
ljmp
gs
add
cmp
mov
and
jne
dec
mov
ljmp
lods
shlb
cld
mov
jno
jno
add
pop
or
mov
ficoml
stos
cmp
or
push
jae
sub
fwait
fcoms
inc
xor
push
xor
jle
xor
stos
rcrl
outsl
mov
sub
ja
cmp
cltd
sbb
mov
ja
inc
sbb
xor
clc
lds
lods
loopne
mov
pop
mov
or
les
and
adc
jge
or
mov
pop
push
scas
mov
daa
divb
push
imul
pop
xchg
cmc
xor
pop
mov
jg
mov
ret
rcll
xor
xchg
insb
xchg
xchg
and
dec
adcb
pop
jnp
data16
push
and
sti
mov
out
or
out
in
or
loopne
jl
icebp
sbb
cmp
test
in
adc
push
sub
repz
cli
xchg
jp
out
dec
ds
cwtl
sbb
in
mov
cltd
popf
xchg
jl
notb
fs
loopne
push
out
movsl
xchg
and
test
add
mov
xchg
xsave
cli
testl
ret
dec
ds
scas
dec
mov
or
mov
addr16
scas
jae
jbe
or
push
bound
out
ret
mov
int
add
sbb
dec
ss
loope
daa
aam
xchg
fcomip
bound
sti
or
mov
popf
push
mov
dec
insb
test
rcll
push
cmc
sbb
xor
add
sub
and
lcall
adc
cli
les
fistpll
icebp
sbb
xor
addr16
xchg
add
xchg
jns
cli
mov
adc
sub
rcl
in
sub
pop
add
cld
adc
into
cmp
and
fnstsw
mov
xchg
cmpl
mov
mov
ficoml
call
cmpl
int3
jg
outsb
and
and
imul
mov
scas
enter
and
fidivrl
sub
lret
andl
addr16
into
sbb
cmc
dec
dec
addr16
sahf
jmp
jne
in
cmpsb
repnz
or
rcr
stc
cs
sarl
xchg
inc
loope
pop
mov
jle
or
fsubl
lahf
cltd
test
stc
mov
cmp
add
mov
mov
cmp
lahf
scas
xor
push
nop
stos
jb
pop
stc
adc
pop
test
adcl
stos
xchg
xchg
mov
sbb
jmp
add
int3
iret
cmp
mov
ret
mov
xlat
jbe
xor
sarl
xchg
fsubl
pop
cmp
cmc
mov
retw
ss
fdivrs
lahf
or
add
lods
and
xor
cmp
cwtl
lea
hlt
cld
clc
xchg
adc
cmc
or
jl
adc
lds
sar
aas
pop
dec
or
dec
cmp
push
and
insl
mov
push
leave
andl
sub
ljmp
out
and
inc
pop
push
test
ds
cwtl
push
mov
pop
rcrl
aas
outsl
sbb
dec
pop
hlt
jp
jbe
movsb
dec
cwtl
add
mov
push
repnz
cmp
insb
xor
lcall
mov
pop
mov
in
out
push
cmp
shll
ljmp
fsubs
xchg
cld
jmp
cmp
aam
test
negb
in
es
insl
or
cmp
fdivrp
ror
and
movsb
jecxz
push
out
leave
pop
dec
aam
dec
pop
xchg
fldenv
jmp
adc
popf
mov
je
in
xchg
in
pop
mov
xchg
in
scas
cwtl
add
pop
icebp
pop
sbb
pop
and
push
dec
movsb
cmpl
lea
mov
hlt
gs
mov
dec
sbb
jge
loopne
pop
subl
sub
inc
fildll
mov
idiv
cmp
cmp
jg
mov
cmovs
jg
test
inc
mov
dec
pop
rorb
outsb
imul
cmpsl
push
sbb
jae
out
adc
push
testb
and
sub
stos
testl
mov
aad
or
mov
xorl
aam
lds
fs
mov
adc
jmp
and
xor
sub
fidivrl
dec
cld
add
push
mov
add
adc
sub
cld
imul
sub
in
adc
scas
mov
jne
ret
jno
pop
sbb
pusha
mov
fnstsw
lock
repz
sbb
jno
jns
jns
stc
mov
xchg
xor
push
ret
push
insl
and
ljmp
je
inc
in
mov
mov
test
sub
leave
fbstp
or
inc
cli
out
in
ljmp
ss
test
xor
outsb
sub
sub
cmp
inc
decb
adc
adc
shl
and
push
ret
icebp
loopne
push
cmp
addr16
mov
incb
insl
or
in
gs
rcrb
data16
movsl
cmp
out
ret
jae
push
xor
out
cmp
xchg
cmp
push
je
sbb
mov
ficoms
fmul
push
loopne
and
and
mov
imul
sub
push
out
add
push
jnp
in
stos
fdivr
icebp
xchg
and
xchg
pusha
test
xor
inc
loope
imul
sti
dec
in
in
jae
pop
add
iret
cs
ds
bound
inc
mov
mov
dec
leave
jo
push
sbb
pusha
imul
jns
mov
imul
mov
add
scas
shrl
sbb
ja
xchg
jle
mov
fldenv
push
mov
push
cmp
push
adc
test
sbb
mov
and
xchg
adc
xlat
pop
jno
into
fsubr
ss
gs
xchg
ljmp
cld
jno
cmp
dec
jns
jnp
aad
imul
jl
mov
and
bound
sbb
sub
aad
bound
mov
out
jecxz
jae
call
cmp
ret
stos
push
fwait
ret
dec
inc
jg
lret
std
movsb
mov
push
jmp
xor
jns
xor
not
sarl
rorl
ds
lahf
out
aam
sub
jecxz
inc
sbb
mov
aam
jnp
or
sub
imul
int
jge
int
mov
mov
xchg
stc
repnz
mov
mov
push
popa
int3
xor
scas
cmp
sub
dec
shll
sub
call
inc
and
pop
popa
ret
add
je
cmp
cld
loopne
inc
add
lods
jb
outsb
sbb
add
or
imul
or
ja,pt
jle
int
inc
sbbl
sub
jecxz
adc
mov
outsl
addr16
mov
pushf
mov
jle
negb
dec
sbb
mov
data16
push
pop
mov
loopne
and
cmp
dec
ds
stos
mov
inc
je
sbb
mov
loopne
test
fnsave
mov
enter
out
xchg
sbb
dec
or
fmuls
lods
leave
dec
outsl
xor
aas
andl
ljmp
mov
out
loopne
dec
sti
in
das
pop
iret
mov
insl
arpl
addr16
sbb
mov
ljmp
fidivl
xchg
push
clc
out
mov
dec
cmp
sbb
cmp
adc
or
pop
push
dec
mov
loop
and
sub
xor
pop
into
scas
mov
adc
jg
dec
movsb
int
clc
mov
lds
sub
adc
arpl
into
and
pop
in
bound
xchg
push
and
loope
andb
lea
pop
sbb
popa
push
dec
adc
mov
xor
push
popa
add
sbb
leave
dec
inc
adc
jl
imul
cmp
fwait
push
mov
sbb
sub
ds
dec
loop
jne
pop
jns
xor
mov
out
jnp
inc
xorl
mov
jmp
ret
rcrb
xor
xchg
mov
rorl
pop
loopne
inc
testl
jno
mov
add
dec
mov
sub
sbb
or
loopne
mov
push
in
dec
daa
enter
js
push
cmp
scas
das
jle
insl
rolb
js
arpl
xchg
xor
je
inc
jmp
stos
inc
les
pop
test
mov
sub
cli
xchg
adc
in
aaa
arpl
or
push
dec
mov
add
out
mov
clc
cwtl
cwtl
jae
fs
mov
leave
sbb
mov
mov
test
daa
lldt
and
jnp
cmc
xchg
mov
shll
xchg
adc
inc
sub
fsubrs
movups
jg
jbe
adc
mov
mov
lds
cmp
outsb
scas
mov
out
mov
repz
ret
rolb
sbb
mov
mov
cmp
repz
je
dec
xor
cmp
jne
nop
push
in
in
sbb
call
int3
popl
add
sbb
xchg
cmpsl
imul
scas
dec
dec
cltd
lock
dec
sbb
xor
lret
dec
dec
push
sti
sub
cltd
sub
hlt
pop
sahf
jo
add
mov
shlb
add
lret
fldcw
lcall
mov
or
call
sarl
lret
scas
in
xor
int3
xor
shl
hlt
xchg
cmp
mov
jae
stos
dec
jp
sbb
adc
push
addr16
insb
xor
adc
jo
or
subl
insb
mov
sbb
aad
xor
outsb
lcall
jnp
xchg
sbb
dec
nop
xor
in
ficoml
mov
stos
xor
loopne
in
lds
adc
rcrl
cmpsb
sbb
mov
stc
mov
js
fmul
jle
mov
popa
push
lcall
cltd
js
jb
and
cwtl
mov
popaw
fsubrl
dec
out
or
btr
pop
pop
in
xchg
fmuls
xor
pop
xchg
xchg
aas
movb
push
lcall
pop
dec
cmp
jle
pop
jns
mov
adc
les
sbb
adc
paddb
xchg
jns
mov
ds
jb
test
sti
mov
inc
sub
cmp
ds
fiadds
cmp
outsb
insb
incb
sbb
repz
mov
mov
jle
mov
jg
lds
push
inc
lds
std
pop
add
push
add
aaa
aaa
xor
mov
sbb
gs
inc
in
in
bound
ficoms
rcll
sbb
mov
xor
out
repnz
shlb
ss
sub
push
faddl
loope
mov
pop
adc
loop
mov
and
data16
inc
mov
add
fcmovne
lret
vmovq
stos
fstl
fwait
mov
out
mov
mov
test
std
cmpsb
mov
xchg
push
cmp
insl
sahf
in
jne
shl
data16
add
or
jmp
dec
inc
cmp
xchg
xor
loop
adc
mov
gs
add
pop
in
push
shl
and
aaa
xor
push
push
and
pop
mov
icebp
and
sbb
movsl
ljmp
inc
popf
xchg
pop
mov
shrb
es
mov
jge
ljmp
or
xor
insl
enter
aam
add
pop
xor
popf
scas
dec
xlat
cmp
add
popf
daa
lahf
iret
testl
pop
gs
pusha
mov
sbb
xchg
push
add
fcoml
inc
cmc
jecxz
cmc
cmp
push
in
arpl
xor
add
addr16
jb
add
lods
dec
fildl
add
je
sub
adc
into
movsl
mov
frstor
and
mov
pop
inc
sbb
fsubl
test
cmp
pop
lret
aaa
pushf
lret
in
push
loopne
or
mov
mov
gs
add
jno
mov
stc
ficoms
push
push
outsb
repz
mov
faddl
dec
adc
pop
or
outsb
jge
jl
xchg
loopne
out
cmp
cmc
dec
loope
ficompl
pop
pop
adc
out
loop
xor
loop
push
loopne
loope
into
pushf
jecxz
iret
ficoml
insb
or
xchg
cs
aaa
loop
loopne
test
shl
jnp
mov
jae
flds
jp
mov
hlt
xchg
mov
es
test
test
xchg
mov
mov
mov
xor
aad
cltd
ror
add
xor
or
mov
mov
adc
andb
cmp
dec
xor
inc
jo
inc
jne
xor
fisubl
gs
js
je
adc
clc
lret
loope
sbb
mov
and
and
and
and
ror
jo
push
mov
cmp
pop
mov
adc
repz
adc
pop
mov
jno
divb
mov
mov
pop
inc
pusha
jb
mull
jge
lret
roll
popa
push
push
add
stc
icebp
push
loope
mov
test
dec
movsb
mov
push
test
cmp
je
inc
mov
popf
adc
xchg
adc
bswap
and
in
dec
xchg
xchg
jns
rorl
ficomps
pushf
loopne
cmp
mov
jb
call
fst
ror
mov
mov
inc
xor
stc
into
xchg
lahf
pop
sahf
adc
in
sbb
inc
out
xchg
cld
mov
mov
aam
rolb
addr16
pop
push
push
lds
inc
mov
or
pop
mov
ss
in
cltd
or
cmpsb
cs
mov
lcall
popa
jle
and
push
add
lock
mov
jle
push
xor
push
inc
jae
xchg
sbb
jne
mov
repz
rorb
adc
pop
sub
mov
lea
mov
shl
inc
jo
icebp
sub
adc
xor
mov
jb
out
out
shr
jb
mov
cltd
mov
mov
push
mov
movsb
cli
mov
aas
cmp
fcoms
push
rol
int3
out
div
ret
gs
push
adc
js
std
test
ss
fildl
jl
push
push
pop
sub
mov
and
sbb
mov
call
jl
sbb
or
sub
fiaddl
sbb
loopne
aaa
bnd
push
rcl
inc
mov
inc
cmp
pop
xor
pop
xchg
xlat
arpl
mov
mov
pop
add
mov
mov
sbb
mov
push
ss
insl
jmp
ljmp
jp
in
mov
sti
sbb
xor
xchg
cmpsb
pop
and
push
xchg
pop
insl
mov
sub
pop
das
xchg
xchg
sbb
xor
test
imull
lret
js
mov
cmp
inc
push
add
je
loop
push
cwtl
ret
loope
mov
jecxz
mov
movb
call
or
and
dec
in
inc
or
popf
std
xchg
in
stos
clc
pop
inc
push
push
push
shl
dec
pop
cltd
push
stos
repnz
xor
stos
inc
cli
jns
jo
xchg
addr16
xchg
xchg
pusha
cwtl
fsubrs
call
int
daa
dec
rorb
sahf
stc
adc
mov
cmpb
pop
push
add
out
fdivl
rcll
jp
cs
and
lcall
outsb
mov
stc
push
mov
dec
lcall
dec
in
jp
out
lods
movsb
in
fadd
imul
jg
and
mov
andb
test
or
pushf
add
imul
push
mov
mov
and
clc
adc
ret
pusha
outsb
or
sbb
rcr
repnz
pusha
lret
ja
scas
jge
out
subb
dec
aas
pop
jg
lods
mov
jnp
sbb
shll
mov
mov
aam
push
dec
mov
enter
mov
loop
popf
xchg
jne
mov
test
push
insw
cltd
add
pop
jmp
adc
test
sub
sbb
dec
jo
add
out
aad
enter
fwait
sub
je
bound
clc
pop
xchg
xlat
rorb
xchg
bound
mov
sub
ret
adc
cmc
pusha
or
or
loop
loope
ret
movsb
mov
push
xorl
mov
push
das
std
lret
push
xlat
insl
clc
sbb
insl
dec
lea
or
adc
xchg
fldl
or
cmp
shl
shlb
shlb
mov
sbb
mov
push
dec
rcrb
fsubrl
in
fs
lret
xchg
pop
pop
aaa
add
cmp
jl
sti
mov
and
ficoml
mov
loope
pop
inc
mov
insb
iret
int
sbb
push
adc
out
mov
xchg
pop
call
adcb
or
iret
xchg
ftst
leave
sbb
jae
mov
arpl
loop
lret
jnp
leave
inc
das
cltd
mov
add
ja
inc
mov
scas
in
lods
jge
int
xor
fnsave
int3
push
xchg
dec
jg
dec
xchg
mov
mov
mov
mov
push
mov
or
dec
in
xorb
loopne
insl
shl
xor
aas
inc
cmp
std
cmp
es
sub
shlb
xchg
fxch
cmc
lretw
dec
in
je
push
mov
sahf
lret
icebp
repz
jmp
push
imul
imul
mov
fidivs
or
ds
xorl
inc
fmuls
mov
mov
aam
xor
rclb
cmp
loope
dec
lds
je
mov
add
notb
push
aaa
xor
idiv
orb
roll
mov
loop
push
mov
ret
in
out
or
add
out
xchg
adc
pop
add
cmp
test
lds
movsl
mov
and
paddw
push
and
xchg
scas
in
mov
fnstsw
lds
dec
sub
xor
shll
ljmp
roll
scas
or
cmp
inc
loopne
hlt
jmp
xchg
cs
les
shlb
jp
mov
addb
scas
cmp
sub
out
mov
mov
in
shr
test
or
jbe
cmc
fcomps
push
mov
aaa
mov
aam
ret
mov
cwtl
add
mov
leave
mov
mov
cmp
add
pop
adc
test
fwait
cmpsl
jnp
cmc
dec
xor
xor
ljmp
cmp
in
mov
and
and
xor
xor
mov
andl
sub
cmp
insl
dec
push
mov
lea
mov
clc
decb
shlb
sbb
aam
and
out
pop
lds
ds
inc
rol
or
test
jnp
mov
je
jle
sub
aad
xchg
and
jne
aas
out
dec
and
pop
rolb
push
jle
iret
pop
adc
mov
inc
iret
out
xchg
insl
into
sahf
mov
xchg
push
call
cmp
dec
test
inc
jno
mov
adc
sti
addr16
jge
inc
push
mov
mov
xlat
scas
xor
xchg
inc
or
jo,pt
jg
dec
pop
outsb
repnz
aas
inc
pop
aas
xor
mov
icebp
pop
mov
jecxz
cmpb
jns
add
mov
imul
sbb
adc
mov
mov
lret
pop
int
out
pusha
mov
sbb
aaa
aam
xor
sahf
pop
dec
or
lret
notl
insb
imul
and
jnp
out
jbe
push
push
popf
push
testb
adc
pop
cmp
in
fnstsw
and
and
gs
fmul
add
dec
add
mov
les
adc
es
add
insl
cs
call
add
push
sbb
sbb
or
dec
sarb
jae
mov
and
mov
insb
outsb
and
mov
gs
mov
sbb
xor
repnz
pop
or
fimull
fsubrl
shll
sub
fs
mov
jmp
inc
lcall
sbb
daa
sbb
inc
push
mov
cmc
xlat
das
dec
or
fsubs
jp
or
sub
jg
arpl
mov
dec
jle
adc
dec
rol
cmp
xchg
cmp
mov
sub
pusha
inc
cmpsl
jns
pop
fst
shrb
popf
inc
and
fidivrl
rorl
pop
xchg
xlat
push
in
xor
out
dec
insl
js
fisttpll
mov
fcomp
cmp
cmpsb
ds
pop
fstps
mov
aad
adc
in
xor
add
inc
jg
add
bound
out
stc
adc
pop
pop
push
push
sahf
or
hlt
int
in
dec
cmc
jne
push
mov
loopne
sbb
cmp
sub
mov
lods
pop
popa
sub
pop
rorl
shll
mov
js
das
rcl
insb
sub
cwtd
or
movsl
imul
inc
inc
addr16
je
adc
add
shrl
push
mov
addb
mov
fsubrl
add
ss
mov
aam
cmp
jne
push
push
std
sub
inc
adc
mov
dec
inc
outsl
pop
fidivl
adc
cli
sub
in
into
stos
mov
pop
and
or
xlat
out
sti
test
xchg
push
mov
popa
ret
aas
lods
mov
imul
js
and
ficoml
hlt
lods
mov
xchg
fs
push
sbb
data16
pushf
fs
xchg
jne
test
pushf
mov
movhlps
push
cld
inc
iret
cmp
add
sti
push
xchg
mov
and
sbb
sbb
sahf
scas
lods
pop
pop
call
adc
scas
xchg
pop
xor
sub
jb
jecxz
outsb
mov
sbb
adc
dec
mov
fstpt
movsl
cmpsl
lret
xchg
push
mov
test
cli
fnstenv
pop
mov
cmpb
dec
popa
pop
lea
pushf
cmpsb
sub
mov
enter
imul
push
adc
mov
or
jp
mov
push
int3
inc
pop
ds
sbb
jo
xor
ret
xchg
aam
mov
ljmp
mov
jge
push
inc
xchg
scas
add
dec
adc
fs
sub
jge
shlb
ds
xchg
pop
nop
rclb
lcallw
lds
jmp
mov
mov
inc
pop
or
outsb
mov
sti
and
in
jle
insl
enter
push
aad
sbb
push
loopne
dec
dec
sbbb
mov
in
test
std
shlb
sbb
fistps
inc
pop
add
fisubrl
add
sub
in
mov
scas
lods
xchg
aaa
jno
sbb
das
inc
data16
inc
push
out
push
mov
pop
push
mov
out
inc
pop
jge
pop
push
push
mov
xor
push
xchg
sbb
add
mov
sbb
es
movsb
lock
jg
ljmp
jno
lcall
clc
lods
test
out
xchg
imul
sub
dec
leave
cmp
cld
sub
cmpsl
cld
push
fsts
pushf
jns
outsb
aad
ret
xchg
and
orb
loope
gs
xchg
daa
outsb
mov
cld
adc
mov
mov
sbb
and
cmpsb
clc
xchg
icebp
add
rorl
mov
sub
insb
stos
cmp
rcll
mov
imul
int
and
stos
mov
popf
mov
pop
cs
jle
ja
and
in
pop
int
ret
or
stos
mov
out
mov
adc
jns
push
cmp
out
or
jge
jns
mov
repz
inc
and
xchg
cmp
dec
lds
or
xor
jg
mov
push
scas
mov
xchg
loopne
xor
and
movsb
jp
stc
dec
stc
ret
fdivrs
adc
outsl
imul
jne
out
push
add
int3
and
xchg
jmp
movsb
inc
rcrb
sbb
inc
inc
insb
sbb
jl
ret
sbb
shlb
mov
dec
outsl
mov
popa
arpl
int
mov
jle
leave
pop
in
mov
pop
mov
sbb
pusha
into
jle
pop
xor
push
icebp
or
hlt
xchg
push
or
in
jno
repz
shlb
hlt
dec
negb
sbb
ret
in
inc
sub
movsb
imul
push
out
int
addr16
sbb
aad
jae
gs
sbb
daa
jp
inc
movb
cmc
nop
int3
or
stos
xor
enter
pusha
mov
mov
imul
gs
lahf
xchg
cmp
imul
pop
or
inc
es
inc
pushf
mov
and
hlt
xorl
ficomps
push
test
mov
scas
ljmp
pushf
pop
rcrb
mov
icebp
mov
popa
inc
mov
lods
push
adc
sbb
jmp
stos
nop
lret
clc
test
mov
scas
lcall
jns
mov
in
bound
out
test
aas
push
orl
aas
add
dec
mov
icebp
shl
or
insl
mov
lahf
fwait
push
push
mov
mov
pop
sub
lahf
mov
xchg
fisttpl
jno
xor
dec
arpl
jb
adc
push
xchg
out
jge
das
out
sbb
adc
je
mov
and
js
push
adc
int
call
mov
jecxz
lret
push
fcompl
dec
mov
bnd
loope
push
mov
mov
hlt
push
mov
pop
inc
jl
outsb
imul
mov
notb
sub
repnz
cmpsb
adc
and
sub
pop
int3
pop
outsl
test
dec
add
pushf
movsl
jb
lcall
push
addr16
out
hlt
daa
stos
xchg
stos
fwait
pop
push
rcll
aam
pop
sbb
mov
dec
xchg
mov
fs
imul
imul
repnz
shll
clc
cwtl
sbb
pop
jecxz
pop
loop
repz
scas
out
jp
test
rol
mov
shlb
popf
shll
dec
inc
sbb
lahf
scas
idivb
cmp
dec
xchg
ja
xor
insb
in
cmp
add
iret
rcrl
mov
lret
out
scas
sub
inc
adc
sub
mull
cwtl
inc
popf
arpl
stos
cmp
pop
dec
push
cmp
shll
das
js
jo
and
loope
or
adc
inc
std
les
stc
xchg
adc
mov
std
or
cld
xchg
xorb
pop
pop
xchg
xchg
jge
fildl
shlb
push
popa
outsb
mov
stos
add
lret
xor
add
pop
jo
add
push
mov
jg
rclb
inc
int3
scas
mov
push
data16
inc
ret
shr
call
ja
cmp
push
divb
jno
popl
sti
lods
mov
pusha
fimull
or
out
aad
push
push
inc
mov
fwait
inc
movb
cltd
xchg
xchg
mov
aaa
es
pop
loope
call
xor
cmp
sub
cmp
jae
pop
sub
inc
shr
enter
inc
loope
adcl
into
mov
xor
into
jecxz
or
pop
adc
or
push
stos
push
and
bound
push
mov
xchg
in
lods
ja
js
es
in
popf
scas
jg
notl
insb
push
xor
fwait
or
jne
out
icebp
pop
scas
ja
loope
outsl
stos
ficoms
mov
inc
fisubrs
repz
mov
pusha
push
das
incb
in
out
pop
jb
mov
aas
das
divl
cmp
fistps
imul
aad
in
sbb
jle
sub
mov
push
cmp
pop
pop
mov
fwait
into
push
in
adc
pop
sub
cmp
cltd
xchg
rcrb
bnd
and
add
adc
cmp
sub
mov
mov
add
fbstp
push
inc
mov
sub
xor
addr16
pusha
mov
sbb
int
cmp
jg
scas
mov
fstps
movsl
or
ret
fxch
adc
stos
aam
sub
push
cmp
add
data16
push
sub
xchg
mov
mov
mov
inc
jecxz
and
jbe
inc
out
add
mov
data16
or
gs
mov
ss
pusha
xchg
mov
mov
mov
push
sub
xlat
sub
or
mov
pop
sbb
xchg
pop
cmp
push
mov
mov
add
outsb
mov
dec
and
loope
mov
xor
cli
inc
xchg
xchg
ja
fs
mov
or
mov
call
mov
cld
mov
mov
in
sub
push
dec
pop
movsl
insl
cmc
adc
dec
leave
movsb
jl
int3
push
pop
mov
test
out
mov
and
call
dec
mov
mov
push
jnp
sbb
sbb
mov
ds
dec
in
cmpsb
imul
sbb
in
pushf
insb
orb
adc
sub
and
push
clc
mov
aaa
pop
clc
es
add
pop
rcrl
mov
push
adc
outsl
loop
dec
push
and
sub
push
aas
popa
das
aam
pop
aad
or
mov
add
cmp
jno
push
jl
mov
or
sub
pushf
int
adc
sbb
aas
rcrl
cmpsl
insb
sub
pop
scas
jns
lahf
cltd
arpl
pop
xor
mov
xchg
fs
or
sarl
xor
in
jmp
xorl
ret
jl
in
and
loope
mov
mov
lods
mov
ss
mov
jae
enter
sub
push
xchg
test
jnp
out
nop
jle
dec
mov
add
stos
ljmp
cli
xor
ss
xchg
mov
cmp
xchg
fstps
jmp
push
jbe
mov
jle
pop
jge
mov
inc
xchg
mov
test
add
in
mov
mov
mov
mov
and
push
mov
and
inc
cltd
adc
push
jne
outsb
push
fdivr
ret
loope
push
or
ljmp
and
cmp
mov
cmp
hlt
sub
cwtl
cmc
adcl
cmp
xor
and
jp
or
je
rcrb
xchg
jns
dec
mov
icebp
mov
cmp
leave
outsb
shll
pusha
dec
adc
cmpb
addr16
xchg
jecxz
addr16
pop
jp
hlt
nop
shrl
jae
hlt
adc
dec
pushf
fs
stos
xchg
mov
push
add
out
push
cmp
out
add
jmp
in
mov
pop
repz
fdivl
add
or
mov
insb
xchg
mov
ja
xchg
xor
adc
jecxz
or
lods
cmc
jne
jle
jno
lahf
outsl
jge
cmp
push
loopne
mov
bound
nop
mov
jnp
mov
imul
sbb
enter
jno
movsb
out
push
or
ss
hlt
aam
push
cmpsb
inc
cmp
int
xchg
sub
addr16
loopne
adc
addr16
fxch
mov
mov
sahf
divl
mov
pop
xor
xlat
adc
decl
jg
pusha
and
fidivrl
jecxz
arpl
iret
loopne
sbb
cwtl
mov
xchg
inc
add
fwait
std
mov
pop
and
popf
pop
mov
and
subl
in
mov
rorb
pop
daa
cltd
cmp
fwait
add
insb
jmp
xchg
test
ljmp
arpl
sbb
decb
xchg
add
jmp
xor
pop
xor
push
sub
jmp
jge
ret
pop
sub
cmp
mov
pop
push
mov
add
or
mov
mov
popf
xor
pushf
loop
xchg
push
inc
push
hlt
idiv
jno
mov
arpl
adc
cld
mov
enter
xchg
or
dec
and
filds
lret
cwtl
or
jo
idivb
sti
push
xchg
pushf
xlat
push
jbe
adc
cmp
lcall
enter
mov
pop
dec
imul
dec
test
push
lock
scas
lods
fists
sub
mov
dec
scas
repz
adc
mov
xor
xchg
inc
or
xchg
aad
sbb
inc
add
aas
pop
pushf
mov
xchg
lock
push
lock
hlt
in
inc
and
lods
sbb
xchg
dec
push
xor
cmp
mov
jo
icebp
xchg
pop
push
push
outsb
and
mov
and
std
jb
and
pushf
es
xor
or
mov
push
inc
lahf
out
insb
ja
cmp
push
xor
jmp
push
es
mov
mov
adc
jle
mov
add
pop
mov
jns
cmpsb
sub
push
shlb
sub
xchg
cmpsl
loopne
jne
xchg
and
push
add
mov
push
pop
outsb
movsl
push
cmpsl
pop
push
hlt
dec
add
or
xchg
loopne
ds
mov
sub
insl
in
test
fwait
pop
mov
ss
push
inc
dec
adc
pop
sti
leave
push
push
pop
push
pop
xor
add
mov
cmp
sbb
aam
sub
sub
popl
pop
hlt
mov
int3
jo
pop
je
fcmovb
iret
and
stc
jbe
test
adc
push
xchg
push
sti
pusha
test
mov
repnz
inc
mov
xchg
sbb
ret
lcall
mov
outsb
adc
popf
icebp
lret
popf
outsb
mov
lds
sbb
xor
scas
mov
xchg
repnz
into
ret
daa
stos
andl
in
dec
pop
fwait
xchg
hlt
enter
into
loopne
inc
inc
or
mov
cwtl
sahf
and
or
xchg
clc
add
mov
fs
and
aam
jbe
inc
mov
aad
cmp
jle
jns
xorb
shl
vpcmpeqd
sub
jno
sbb
inc
sbb
xchg
jl
fs
adc
mov
std
loopne
cmpsl
lcall
incl
sub
rorb
shlb
sarl
inc
mov
lret
in
lret
out
add
and
popf
xor
mov
and
mov
add
loope
pop
push
xchg
jno
jae
sar
dec
dec
jne
jmp
incl
push
int3
push
and
mov
test
sahf
xor
mov
decl
xor
or
sub
dec
out
loop
push
scas
stc
xor
jae
lret
sbb
stc
je
mov
xchg
pop
ja
mov
cmpsb
scas
divb
mov
insb
movsl
shlb
adc
adc
sar
adc
repz
or
add
mov
fs
xchg
lret
insl
sbb
cmp
jg
mov
in
fs
push
rcrb
mov
lcall
aad
aam
dec
fs
sub
pushw
or
fimuls
mov
fidivl
clc
mov
hlt
bnd
lret
sbb
loopne
sub
rclb
cmc
pop
mov
jmp
loopne
fmull
jno,pt
mov
jb
jp
push
imul
adc
sti
add
xor
sub
cmpsb
mov
int3
xchg
cld
inc
jno
fadds
adc
loopne
push
divb
pop
gs
fiadds
in
mov
fcomps
push
and
lods
push
fstpt
int
add
inc
call
cli
cmp
cmc
cmp
xchg
inc
jo
pop
into
sub
adc
ss
fdivrl
mov
outsl
add
inc
movsl
lods
das
xchg
xor
dec
popf
sahf
inc
loope
and
ljmp
aaa
and
dec
pop
mov
in
jp
jnp
cs
subb
push
cmp
je
aaa
xchg
or
loop
inc
add
leave
jae
sbb
pop
fiaddl
xchg
sub
dec
fcmovne
dec
std
test
inc
fcompl
mov
pop
andb
mov
inc
inc
inc
shl
or
xchg
pop
add
jmp
mov
fsubs
fisubl
js
dec
or
jmp
or
xchg
xchg
aad
jge
cld
fwait
imul
push
or
mov
shlb
or
popa
mov
lods
xor
addr16
aad
mov
sahf
xchg
or
dec
outsb
and
pop
adc
xchg
xor
pusha
cs
pop
inc
ds
enter
and
adc
mov
push
aaa
fimull
sub
inc
xchg
jno
xor
in
cmpsb
mov
dec
jae
ds
mov
sbb
jae
aaa
or
mov
pop
adc
xor
pushf
inc
es
shlb
sarl
push
xchg
lods
pop
sbb
clc
pop
and
ss
inc
xor
mov
fstpl
sub
xchg
shrd
sub
inc
inc
ret
in
out
mov
mov
out
cli
aaa
mov
pusha
bound
lcall
ds
or
mov
ffree
imul
xor
sub
cmpb
or
push
orb
dec
dec
xor
addr16
xchg
test
inc
repz
das
mov
das
cltd
in
mov
lret
cmp
gs
sub
out
jns
adc
mov
mov
fnsave
push
mov
push
imul
cmp
lds
movsb
push
popa
xchg
fisubrl
adc
stos
arpl
lds
jns
inc
popl
xor
push
lea
outsb
test
stos
jns
adc
xchg
lret
mov
jb
pop
mov
xor
xchg
imul
repnz
imul
jmp
adc
lahf
push
mov
out
xor
arpl
sub
and
jno
test
cwtl
ja
push
int
and
xchg
aam
add
xchg
jns
js
ja
call
or
or
add
jecxz
jg
xor
mov
addr16
es
dec
mov
ja
add
or
add
xor
mov
add
in
testb
sub
mov
rcl
imul
or
add
pop
cmpsb
push
adc
mov
xor
jbe
aaa
mov
push
xor
sub
fadd
js
mov
mov
std
jp
insl
lret
xorl
jg
loopne
mov
nop
ret
cmpsb
sbb
leave
mov
stc
insl
jmp
jmp
call
mov
and
pushf
cmp
addr16
dec
leave
faddl
lds
gs
test
in
inc
jle
imul
fidivs
cmp
pop
jo
ret
mov
aaa
sub
jg
pusha
fmul
int3
cmc
outsb
rcll
adc
test
adc
shlb
out
cmp
movsb
sub
mov
or
jae
cltd
cmp
dec
lds
mov
or
dec
cltd
mov
fdiv
cmc
adc
test
mov
mov
pop
sti
lods
test
in
push
pop
sarl
dec
xor
aad
inc
xchg
icebp
xchg
xor
pushf
repz
and
dec
inc
mov
pushf
sub
in
push
repz
scas
pop
and
xchg
notl
mov
stos
adc
stc
push
or
movsl
icebp
mov
xchg
dec
xchg
mov
mov
mov
loop
pop
dec
stos
enter
out
mov
lea
in
or
gs
f2xm1
icebp
lahf
add
aam
pushf
or
mull
fnstenv
xor
bound
dec
mov
pushf
pop
and
inc
jmp
in
xor
push
int3
subb
adc
popf
push
xor
call
fstl
mov
aaa
insl
fidivs
aad
popa
mov
imul
pop
cmpsb
jmp
cmp
cmp
mov
cli
jge
bound
push
callw
ljmp
test
inc
daa
xlat
pusha
jmp
out
or
int
and
mov
pop
shlb
mov
adc
lahf
or
in
fsubrl
pushf
out
adc
mov
pop
add
mov
sarl
rcrl
clc
sub
stos
fsub
sahf
adc
pop
idivb
push
mov
dec
cmp
push
in
push
fwait
jmp
pop
lds
and
in
jb
stos
xor
add
movsl
mov
mov
popf
pop
push
or
cmpsb
mov
pop
mov
pop
mov
ss
daa
xchg
orl
mov
add
fs
mov
lahf
push
mov
sub
fildl
xor
xchg
xor
jno
cmp
scas
sahf
pop
stos
mov
adc
ret
out
lret
aaa
popf
xchg
sti
jge
sub
mov
xor
or
lret
dec
mov
dec
dec
jnp
scas
or
divb
sub
int3
loopne
xchg
mov
ss
in
insl
imul
cmpsb
aad
fwait
add
inc
fldenv
jl
xor
mov
sbb
ret
and
daa
or
rolb
cli
popa
mov
and
dec
hlt
adcb
iret
xchg
lcall
xor
mov
fdivrl
mov
mov
adc
xor
dec
sub
xchg
nop
and
jp
loope
lret
wbinvd
sub
cmp
push
rcrb
scas
in
dec
cld
ds
arpl
inc
shrl
loope
mov
add
mov
mov
setns
inc
sub
mov
xchg
test
and
jb
xchg
call
mov
addr16
roll
imul
sub
mov
xor
sti
outsb
and
psraw
cld
and
push
in
ja
push
rcrb
loopne
insb
push
xor
repnz
xor
inc
adc
cmpsl
dec
jmp
xchg
inc
mov
std
xor
ret
mov
call
mov
xchg
xor
in
push
jecxz
shlb
jmp
sbb
pop
cmp
insb
xchg
rorl
add
xchg
jo
sub
pop
mov
xchg
cmpl
inc
gs
es
sub
push
jecxz
jecxz
incl
mulb
shlb
inc
lahf
in
xlat
in
jne
stos
mov
dec
cmovbe
mov
push
es
jbe
push
in
lods
inc
sub
adc
je
xchg
pop
div
and
push
fmuls
mov
cmp
cli
imul
int3
mov
sti
pop
add
sub
das
andl
ret
data16
and
mov
add
lcall
inc
sub
xchg
lcall
enter
jno
lea
pop
xorb
mov
repz
popa
xor
mov
sub
inc
pop
mov
movsb
addr16
mov
iret
add
xchg
pop
or
mov
enter
jae
movsl
pop
xchg
adc
dec
pusha
shlb
fdivrl
pop
ljmp
cmp
push
in
mov
adc
adc
sub
and
shr
cmc
sbb
dec
cmpsb
and
and
mov
hlt
notl
jle
outsl
pop
mov
dec
push
scas
mov
xchg
int3
xor
sahf
xor
add
nop
out
loop
das
dec
or
or
inc
mov
mov
fidivs
add
das
dec
dec
pushf
pop
xchg
fsubrl
cmp
or
sahf
sbb
lcall
push
sarb
mov
aaa
mov
scas
std
into
fsubrs
xchg
and
aaa
test
inc
test
mov
dec
int
jo
out
adc
ja
push
popa
pop
mov
repnz
jno
mov
jns
ja
popl
sti
ret
pop
jecxz
pop
addb
jl
jmp
loope
mov
inc
ja
repnz
fistps
sub
mov
stos
mov
push
xor
cmp
rcl
jns
sahf
out
cmp
cmp
stos
fmuls
test
lret
jle
fisttps
data16
hlt
cmp
mov
inc
aas
push
insl
cli
or
iret
push
jae
arpl
xor
andl
push
sbb
dec
dec
mov
add
sub
inc
mov
test
push
in
shrb
cmpsb
push
daa
jae
in
push
xchg
es
xor
fimull
mov
andb
adc
scas
das
ret
ss
xor
neg
loopne
pop
jo
test
in
fnstenv
repz
mov
fistpl
lret
and
or
push
scas
fs
mov
jg
out
cld
or
xchg
jl
xor
add
ret
pop
mulb
scas
sbb
or
mov
add
jmp
lcall
xchg
jg,pt
pushw
push
int3
arpl
mov
data16
mov
mov
addr16
cmpsb
ret
pop
pop
bound
and
mov
push
lods
lods
push
jge
jecxz
jl
pushf
popf
dec
adc
jp
push
inc
notb
test
push
into
imul
imul
mov
push
sub
push
mov
or
lods
sbb
sub
dec
bound
push
push
dec
fidivrl
cmpb
or
jbe
push
push
pop
add
outsb
lea
mov
outsl
cmc
aam
cmpsb
ret
and
mov
mov
cmp
cwtl
xor
lret
xor
jp
test
pop
or
mov
pop
fidivrl
aam
stos
fdivrl
push
out
xor
xchg
pop
rcrb
lods
shll
jg
cmpsb
xor
xchg
push
fmul
push
mov
pop
dec
xor
and
mov
jns
gs
scas
lock
mov
insl
lret
mov
xchg
pop
mov
cmpsb
inc
out
dec
fists
cmpsl
inc
push
je
dec
sarl
repnz
add
mov
imul
inc
push
dec
in
mov
pusha
add
fcomip
adc
das
and
mov
inc
dec
sbb
arpl
fisubs
testl
mov
sqrtps
arpl
sbb
jle
and
add
bound
xor
loope
out
fbld
or
sbb
pop
fbld
push
gs
inc
in
addb
and
test
push
in
rolb
test
push
je
out
inc
mov
int3
add
into
ljmp
das
ret
push
mov
mov
ficoms
or
xchg
cmpsl
xchg
out
sarb
loop
sbb
movsb
adc
jl
dec
vpmacsdql
xor
add
fwait
adc
pop
and
jle
icebp
pop
lret
fnsave
inc
inc
hlt
clc
aad
push
or
cmp
push
fldenv
inc
sub
jns
mov
xor
push
xchg
shrl
or
jp
or
je
out
push
into
add
dec
jp
vpcmpgtw
push
push
sub
les
int
lcall
sub
in
cltd
lcall
push
jb
outsl
movsl
scas
and
sbb
pop
das
mov
mov
lret
lret
xchg
dec
adc
loope
icebp
and
int3
sub
rep
repnz
mov
mov
cwtl
gs
outsl
movsl
loope
adc
fsubl
add
inc
jmp
shll
add
jae
test
push
xorl
mov
mov
xor
bound
scas
inc
mov
adc
data16
ljmp
addl
out
push
sahf
jg
lahf
inc
inc
jle
outsl
xchg
xor
inc
push
mov
mov
lret
rol
stos
push
xchg
and
jg
dec
push
sub
outsb
adc
xor
nop
add
inc
cmp
das
ret
push
ret
xchg
jecxz
cli
sbb
mov
rcl
ret
mov
lcall
mov
enter
cmp
fsubl
lods
mov
sub
cmpsb
jb
es
inc
ljmp
mov
add
jo
and
cmpsl
mov
fucomip
dec
jp
data16
imul
out
int3
fldt
cmpsb
daa
out
or
push
ret
adc
shll
jns
jno
adc
jnp
mov
pop
addr16
push
insl
cmp
mov
adc
and
lock
sub
stc
pop
xchg
call
mov
in
xchg
aad
or
mov
lods
mov
mov
pusha
scas
je
mov
cmp
insl
fldt
fcoms
aam
sbb
mov
jg
cld
jae
pop
pandn
imul
jns
cmp
jge
lret
loope
fidivs
movb
xor
aam
pop
sti
popl
stos
mov
ja
fistpl
jge
dec
insl
and
pop
push
adc
pop
das
push
mov
xlat
in
or
lods
add
and
cmp
inc
dec
mov
xor
leave
push
aad
jbe
addb
fdivrs
bound
pushf
int
mov
and
aad
rcrl
xor
push
jo
xchg
lret
adc
lock
je
inc
dec
fstpl
and
lods
fs
or
call
mov
sbb
imul
lret
lock
std
in
lret
jnp
inc
testb
sub
fisttpll
sbb
cmp
enter
mov
test
outsl
je
sub
dec
xchg
dec
sbb
repnz
sahf
cmpsb
push
xlat
inc
outsb
mov
repz
test
xchg
ja
rcrb
sbb
xchg
rclb
mov
aad
dec
lret
mov
test
inc
push
fs
das
jle
dec
dec
or
outsl
shr
aaa
mov
jecxz
fsubs
popa
inc
popa
mov
rcrl
lds
dec
mov
inc
aas
jmp
xchg
arpl
push
into
and
jno
sub
cmp
push
fisubl
xchg
popf
lods
mov
push
out
cmpsb
sub
lcall
xor
or
lods
or
mov
add
jl
inc
cmpsl
rclb
cmp
cmp
pop
lret
xor
cmp
das
xchg
lahf
xchg
popf
out
pushf
das
or
pop
and
sbbl
fisttpll
mov
into
popa
and
inc
paddsb
cld
mov
jecxz
test
inc
inc
sti
imul
repnz
fisubl
pushf
add
mov
aaa
mov
nop
xchg
cltd
mov
cmp
or
jp
inc
lret
mov
pop
insl
in
xchg
out
and
sub
jge
test
dec
fnstcw
lea
jl
imul
mov
rorb
jmp
out
lret
call
cltd
loopne
out
nop
jae
xchg
dec
pop
testb
out
clc
adc
pop
xor
push
sub
mov
divb
ret
sub
xor
data16
push
cli
and
add
clc
arpl
adc
mov
and
jb
ret
es
pop
or
sub
inc
sub
insl
xchg
jmp
push
dec
das
movsl
or
dec
dec
out
push
dec
cltd
insb
xchg
das
xlat
inc
cwtl
aam
jmp
lods
loope
xchg
jbe
aad
jae
jmp
xchg
sbb
ss
sub
scas
dec
jnp
mov
sbb
clc
das
cmp
jl
xchg
sbb
aad
cmpsb
scas
lahf
cmp
imul
push
push
cmpsb
xorl
les
push
test
or
dec
leave
sub
add
push
xchg
outsb
rorl
stos
xor
push
lds
lock
mov
sahf
xchg
cmc
cmpsb
jg
sub
jge
ss
gs
pop
aas
lds
push
in
popa
scas
mov
in
xorl
hlt
test
and
pop
test
lcall
mov
jae
cmpl
mov
sbbb
notb
dec
sub
inc
push
jl
jl
test
fcmovu
or
test
arpl
dec
jbe
xchg
jb
jbe
dec
add
inc
or
inc
and
imull
lahf
in
dec
test
enter
adc
xor
jne
inc
fwait
daa
mov
stc
cmpsl
lock
es
sbb
leave
xchg
iret
cltd
inc
cwtl
les
sbb
jnp
mov
lcall
dec
mov
sarl
sub
dec
fmuls
fwait
jns
stos
fstpl
fcoms
inc
out
and
ss
or
sub
dec
sub
add
cmc
rol
pop
das
mov
and
sbbl
iret
cmp
rorb
arpl
xchg
add
mov
pop
les
sbb
lea
mov
enter
mov
arpl
mov
xor
adc
out
or
movl
and
jg
pushf
mov
rorb
jae
cmp
inc
stc
cmp
jne
and
mov
pop
xor
sbb
push
inc
mov
inc
push
sbb
inc
lods
xchg
mov
dec
mov
lods
mov
jns
repnz
out
dec
in
pusha
gs
push
lock
cs
into
inc
pushf
inc
mov
out
sar
adc
xchg
push
ss
in
xor
fstpt
or
div
cltd
mov
or
dec
pop
or
xchg
andb
push
mov
mov
nop
mov
push
pop
lcall
sbb
aam
push
enter
sub
aam
ret
cwtl
fcompl
lods
pop
pop
loope
icebp
loope
jnp
out
push
es
cmp
jo
pusha
add
sub
pop
xchg
notb
roll
cmp
xchg
push
scas
lods
cmpsl
test
xor
call
loope
scas
data16
add
test
or
adc
and
push
mov
imul
add
out
loop
testb
bound
ret
jnp
bndldx
mov
sub
inc
test
and
cld
test
pop
mov
fs
into
ja
into
xor
loop
ret
fadds
sbb
aam
push
je
jl
call
mov
pop
mov
cs
jge
out
nop
sub
rcl
pusha
cld
mov
jp
xor
and
lock
inc
mov
push
cmp
sti
adc
dec
ss
aaa
and
bound
mov
out
test
sub
addr16
sbb
xor
iret
xchg
cmp
mov
adc
sti
sti
sub
jo
push
push
insl
sub
fs
repnz
imul
sti
jmp
sbb
mov
jmp
or
inc
fbstp
bound
push
sbb
xchg
lea
lock
mov
push
xchg
jg
outsb
xor
aad
mov
mov
xchg
xor
mov
jl
mov
test
sub
and
dec
int
and
xor
cwtl
adc
mov
jae
mov
mov
fisttpl
divb
mov
popf
insb
imul
inc
movsl
mov
fdivl
insb
loope
jmp
jo
subl
xchg
stos
popa
movsl
js
adc
loope
cld
repz
dec
fcoml
pusha
push
scas
mov
sar
jo
in
sbb
leave
sub
loopne
lods
adc
inc
shlb
scas
xor
lcall
fbld
or
ljmp
pop
mov
inc
jp
adc
sub
pusha
jmp
stos
pop
int
pop
push
mov
mov
adcb
mov
dec
mov
aad
fwait
cmc
mov
outsb
hlt
mov
stos
dec
flds
xchg
sti
cmp
lahf
mov
dec
shrl
cld
xchg
in
fisttpll
mov
xchg
cmp
pop
and
push
ss
outsl
cmp
adc
push
popf
js
sbb
mov
fs
jle
mov
js
and
xchg
stos
dec
inc
dec
sub
out
imul
insb
and
stos
mov
inc
and
lods
sbb
sbb
bound
sub
lods
mov
add
lea
in
adc
jl
cmp
adc
inc
pusha
cmp
mov
dec
ljmp
popa
pusha
aas
adc
aam
cmp
loop
adc
ret
xlat
jns
loopne
or
mov
xor
xchg
or
sub
pop
scas
aad
cwtl
fisttpll
icebp
adc
mov
sub
in
popf
ret
fwait
pop
lods
test
cmp
inc
loop
mov
mov
xchg
mov
test
jle
push
ret
mov
out
filds
fnstcw
cmp
outsl
sub
cmc
mov
adc
mov
std
push
mov
cli
hlt
jge
aaa
pushf
mov
add
push
sub
sbb
pop
jmp
or
pop
into
add
ret
lcall
bound
pop
xchg
xchg
sbb
aam
mov
ret
scas
cltd
lods
imul
ja
outsb
cmpsl
adc
push
sbb
add
and
sub
subl
inc
andb
repnz
gs
jae
test
aaa
add
les
and
jge
pop
xchg
or
mov
sbb
and
les
xor
jno
sbb
cmp
js
or
loop
out
lods
sahf
popa
ret
push
fdivr
out
int
in
mov
jns
scas
sub
in
cs
push
mov
movsb
mov
sub
dec
pop
and
sbb
mov
loop
scas
mov
jmp
lods
insl
mov
mov
pop
sbb
or
mov
dec
jge
jmp
insl
pop
loopne
sbb
arpl
add
lcall
or
adc
jno
aaa
andb
cmp
lret
mov
xor
jne
movsl
sub
test
mov
std
push
sbb
mov
hlt
sub
xor
dec
jns
inc
mov
jb
xchg
ljmp
cmc
movsl
adc
andl
xchg
jo
int
xchg
xchg
pop
adc
xor
push
jns
adc
insl
data16
fwait
pop
aad
insl
jp
orb
xor
outsb
jnp
xchg
fbstp
out
bound
aad
mov
pop
mov
ljmpw
dec
jno
xchg
prefetch
jo
cmpsl
outsb
orl
scas
mov
xchg
je
add
lcall
jns
jns
add
cmp
mov
bound
movsb
int
xor
jns
outsl
jmp
or
inc
subl
daa
lret
out
inc
add
leave
fcmovne
ss
in
xor
sti
lods
mov
jmp
push
imul
sbb
int3
or
push
scas
jae
ret
jecxz
sbb
or
addb
adc
lods
or
mov
test
push
flds
cmc
inc
or
add
add
insb
sub
leave
stos
jne
adc
lret
jnp
cld
sbb
lock
xchg
or
sbb
int
pushf
dec
fmull
adc
pop
mov
mov
sub
cmp
xor
push
ljmp
xor
adc
sbb
arpl
fcomps
cmpsb
pop
outsb
mov
xchg
sbb
sbb
frstor
xchg
mov
imul
fisubrl
or
loope
jl
gs
je
sarl
cmp
push
mov
loop
dec
out
das
and
xor
rcl
fisttpll
push
imul
les
or
xor
sub
popf
pop
pop
cmp
pop
pop
adc
xchg
repnz
mov
mov
cwtl
stc
enter
mov
outsb
pop
jmp
xor
scas
jne
std
fldl2e
mov
xchg
mov
jl
sbb
xchg
jno
mov
fbld
xchg
push
push
iret
pop
add
add
pop
addb
mov
xchg
leave
mov
or
sub
rol
das
xor
xor
pop
dec
insl
int
xchg
stos
cwtl
mov
xorb
sub
xchg
stos
push
loope
ds
adc
cli
xchg
addl
jmp
pop
cmp
ficoms
aaa
dec
mov
and
inc
mov
inc
outsl
daa
out
pop
ja
adc
repnz
pop
push
roll
mov
insb
clc
dec
jp
adc
mov
and
shll
pop
pop
pop
mov
and
cmc
hlt
jmp
aad
lock
cltd
mov
add
pop
adcb
mov
enter
aas
mov
lods
daa
xchg
jo
xor
lea
aas
adc
push
or
cli
push
or
addr16
gs
bound
xor
inc
leave
mov
cmp
pushf
and
push
cmp
jp
loope
mov
inc
xor
pop
in
add
ret
inc
sub
outsl
test
sbb
shrb
cs
mov
cmp
sub
int
imul
scas
aaa
xor
outsb
xlat
xor
xchg
in
pusha
cmp
dec
adc
stos
pop
add
sbb
gs
sbb
repnz
shll
inc
pop
je
test
lea
jns
enter
xchg
stos
repz
adc
in
orb
lea
aaa
popf
push
jb
or
mov
jle
int
mov
jb
pushf
incb
pop
inc
inc
inc
dec
xchg
fwait
or
dec
pop
icebp
loopne
adc
lahf
mov
push
add
push
mov
push
fmull
mov
sbb
loopne
xorl
fs
pop
push
fisttps
mov
imul
add
jb
aas
movsl
iret
xor
addr16
ljmp
xchg
push
sbb
inc
orb
testb
mov
daa
pop
add
xlat
adc
pop
insb
daa
lods
repnz
les
or
and
mov
pusha
sti
mov
mov
xlat
sub
outsb
jg
add
sahf
ret
iret
shrl
adc
inc
and
sbb
test
and
rcl
push
orl
or
insl
adc
xchg
pop
or
mov
divb
lahf
jns
push
sub
adc
xchg
int
shll
sub
dec
jle
mov
cmpsl
cmpsl
cmp
inc
xchg
loop
cmpsl
dec
aam
stos
or
in
pop
inc
popf
pop
pusha
stos
and
inc
gs
xor
dec
adc
out
xchg
test
sub
mov
add
hlt
out
xlat
jbe
jo
insb
sti
jmp
inc
fs
xchg
testl
push
mov
and
inc
inc
imul
int3
sub
lahf
das
mov
xlat
int
push
aam
lods
inc
jbe
mov
cmp
leave
pushf
fidivrl
mov
sub
addl
ficomps
scas
pop
gs
rolb
or
lcall
mov
push
stos
ljmp
fldcw
lods
xchg
in
or
fisubrs
inc
push
lds
mov
lcall
fdivl
jmp
push
andl
gs
xor
push
mov
push
sbb
cmp
xor
daa
adc
xchg
mov
cmc
inc
rorl
addl
and
cmp
or
sub
fwait
mov
scas
insl
movsb
or
mov
aam
or
sbb
cli
shrl
pop
xchg
fdivs
mov
sbb
je
mov
add
sbbb
repz
add
xchg
mov
lods
push
hlt
xchg
adc
shl
inc
iret
ljmp
mov
cmp
dec
addr16
xor
scas
dec
lahf
xchg
inc
sbb
dec
jbe
cmp
sub
xor
jo
lea
lret
adc
jge
add
pop
dec
lods
or
pxor
sbb
cmp
and
xor
xchg
and
popf
iret
sub
and
pop
leave
push
loop
push
mov
or
pop
push
pop
mov
dec
das
sub
sub
jb
adc
rol
mov
adc
push
push
xchg
outsb
cmp
mov
pusha
push
jg
call
inc
jo
test
insl
push
lcall
icebp
leave
out
ja
jp
mov
leave
int3
mov
ja
arpl
dec
into
xorb
bnd
sarb
mov
cmp
or
popf
dec
stos
insb
into
push
dec
in
inc
cmp
mov
xchg
add
mov
jno
lcall
cld
mov
xchg
add
dec
rorb
int
xchg
dec
mov
push
lods
xor
rcrb
push
xor
out
mov
xchg
push
xchg
add
inc
push
mov
jl
xlat
out
pop
push
je
xchg
das
lcall
xor
mov
fwait
pop
mov
push
cmpl
cmpsl
mov
cmp
fs
fdivrs
shl
popa
out
es
out
jno
xchg
sar
jge
testl
out
pushf
mov
repz
testl
mov
stos
cmp
mov
sbbb
mov
push
test
lods
or
jecxz
daa
imul
sub
sub
ficompl
mov
fcos
or
popf
mov
mov
inc
ss
adc
in
repnz
sub
push
sub
sbbb
pop
push
pop
js
shll
cmp
or
mov
push
jb
dec
gs
aam
cmp
aas
inc
rclb
push
jecxz
enter
jge
jle
push
xor
ret
je
int
inc
sbb
xchg
dec
xor
jbe
nop
pop
jge
addr16
mov
ret
fwait
xor
sub
fwait
leave
push
sub
jns
js
lret
cld
sar
dec
jmp
jne
xor
ficompl
aas
sbb
std
inc
enter
fsubrl
imul
scas
in
mov
cmpsb
mov
imul
lods
mov
inc
call
leave
jb
xchg
push
mov
adc
aam
xchg
xchg
lret
sub
dec
stos
lret
jmp
sbb
sub
cmp
mov
sub
inc
mov
ja
pop
movsl
xchg
mov
cmpsb
or
andb
sub
inc
or
imul
mov
sub
push
rolb
arpl
outsb
mov
fwait
lret
mov
mov
jmp
repz
mov
in
test
fdivl
lea
mov
mov
fwait
inc
imul
jbe
mov
pop
pop
test
inc
pop
popf
std
pop
test
in
test
push
push
jnp
push
mov
andb
enter
ds
lods
ss
enter
or
ss
sahf
xor
sarl
add
xor
in
add
sub
cli
jecxz
ss
stc
or
decb
test
pop
fistpl
mov
jbe
jmp
out
stos
repnz
scas
ds
in
adc
imul
pop
mov
hlt
dec
push
push
or
iret
fwait
leave
add
iret
aaa
push
and
shld
testb
outsb
jmp
out
cmp
push
jne
add
pop
or
daa
mov
xor
lret
outsb
addr16
in
outsb
inc
jp
dec
in
push
sub
outsb
xchg
sbb
xchg
sbb
les
fildll
loope
dec
insl
outsb
inc
adc
sub
push
call
cltd
cli
in
mov
insl
mov
inc
push
fdivs
fldcw
push
into
jne
or
out
and
xchg
fstps
pop
inc
xchg
xchg
fmuls
or
insb
aaa
sbb
mov
rcrb
pop
cld
data16
lock
shrb
mov
sbbb
andl
mov
shlb
repnz
arpl
into
addr16
push
adc
jmp
xchg
mov
mov
cmp
xchg
lods
lahf
lds
outsl
jns
dec
shrb
stos
pop
jo
ret
sub
jmp
std
lahf
push
dec
add
jp
xchg
adcb
lds
lcall
add
lret
sbb
or
std
adc
mov
xlat
fisttpl
insl
inc
jge
aas
int
xor
mov
pop
mov
arpl
movsb
testl
dec
fmulp
rcl
add
xor
sbb
push
pop
xchg
jb
out
mov
js
lods
enter
stos
shrb
jmp
insl
rcrl
dec
pop
cli
or
flds
out
loop
push
clc
stos
ret
mov
dec
xor
test
leavew
mov
cmp
sbb
cmp
mov
fsts
jge
jecxz
cmp
mov
clc
pop
mov
cmp
push
flds
test
insb
sub
out
cmp
cld
ss
and
push
std
lock
repnz
sbb
fldcw
repz
mov
push
xor
ret
fcomps
dec
push
ss
cs
lcall
out
push
cmc
cli
or
outsb
dec
inc
loopne
and
push
fldl
mov
add
push
cmp
and
sub
sub
fwait
push
push
fstps
mov
add
js
add
call
dec
bound
xchg
out
rorb
jmp
push
popf
test
sbb
push
push
sub
popa
int
and
insb
xchg
pop
sahf
pusha
jp
cli
cmpsl
xchg
sti
adc
jbe
mov
jb
stos
cmp
sbb
out
jl
adc
in
iret
in
cs
xlat
enter
xlat
ja
mov
mov
sbb
repnz
cmp
in
mov
call
idivb
mulb
aam
or
jae
sahf
adc
fcomp
add
lcall
sub
jb
push
aaa
std
shl
fidivl
das
fbld
iret
pop
adc
in
sbb
loop
sahf
push
adc
sub
add
scas
subl
jae
cwtl
jg,pn
or
mov
push
cmp
sub
pop
mov
and
scas
push
in
mov
push
pop
loop
rcl
jp
cwtl
clc
inc
call
xchg
ds
jae
cmp
js
push
sub
pop
mov
mov
aaa
cmp
ja
xchg
inc
stos
sbb
jp
insl
jecxz
inc
adc
ret
dec
push
pushf
scas
pop
gs
xchg
pop
mov
sub
fbstp
push
lret
out
out
fcomip
aad
imul
sti
daa
fucomp
lret
fstpt
lods
push
lea
scas
rol
das
mov
xchg
dec
test
mov
testb
jecxz
movsl
in
in
add
sub
push
xchg
rcrl
sub
adc
add
cmovno
rcll
ljmp
inc
sahf
cmpsb
popf
mov
xor
dec
push
out
in
aam
cmp
jnp
shll
lea
insl
and
lods
push
stos
ret
xor
pop
add
adc
ror
sahf
sub
xor
test
data16
mov
shlb
sahf
add
into
sub
or
call
jge
adc
call
cmc
dec
xchg
int3
dec
aam
sub
setnp
sahf
dec
mov
cmc
in
xlat
sbb
add
insl
push
mov
adc
enter
in
repnz
push
pop
je
push
sub
or
je
or
and
mov
aas
xchg
popa
stc
xchg
ljmp
pop
mov
pop
or
cmp
stc
int
in
imul
mov
dec
sahf
push
nop
adc
call
out
inc
mov
or
mov
pop
cs
add
pop
cmc
inc
dec
pushf
dec
mov
pop
and
cltd
mov
mov
lods
pop
pop
mov
mov
pop
jge
mov
xchg
arpl
or
mov
inc
mov
pop
mov
push
mov
shufps
jg
xchg
and
gs
sqrtps
or
push
shl
adc
push
ss
inc
mov
inc
out
out
mov
jno
mov
dec
mov
dec
outsl
lret
fisttpll
in
mov
arpl
addl
adc
in
xchg
rorl
mov
push
fs
inc
fisubrl
push
xchg
mov
or
cmpsb
scas
sbb
pop
or
repnz
and
out
sub
cmp
and
pop
sbb
fmuls
sbbl
and
lods
xlat
push
stos
aam
mov
adc
lahf
mov
neg
xor
fistl
cmp
sbb
mov
sbb
jecxz
mov
scas
int3
inc
jo
jp
xor
int
popf
adc
pop
sub
testl
pop
cmc
cmpsb
pop
pop
emms
jmp
and
mov
pop
mov
cmp
ret
or
scas
jp
loope
ja
push
xchg
js
xor
mov
push
xchg
lods
movsb
jp
sbb
dec
mov
inc
bnd
sti
jb
scas
arpl
test
mov
sbb
or
bound
push
lods
sub
sub
pop
daa
nop
leave
movsb
mov
imul
es
pop
rol
push
clc
sub
iret
mov
cmpsb
imul
add
inc
mov
scas
loopne
pop
pushf
xor
inc
leave
out
sbbl
stos
popf
push
jb
inc
push
fidivl
adc
xchg
addb
dec
idivl
jns
xchg
cmp
jl
jle
std
cmp
add
cmpsb
std
cltd
or
mov
fildl
mov
xorl
cmc
pop
inc
ljmp
add
notb
adc
cs
push
push
fistpll
das
dec
inc
decb
loopne
xchg
xlat
ja
mov
and
mov
mov
cmpsl
xor
push
sub
out
nop
loop
jp
or
add
movsl
clc
sub
mov
das
xor
sub
fcoms
pop
loopne
inc
cwtl
out
cmpsl
popa
imul
insl
aad
jno
mov
mov
or
lods
rclb
lret
movsl
aas
stos
repz
add
out
mov
push
es
rcl
pushf
andl
add
push
and
cmpsl
jae
or
jno
movsl
inc
pop
add
leave
xchg
mov
leave
test
adc
scas
ss
insl
push
or
hlt
cmp
inc
sbb
pop
jmp
in
outsb
mov
bound
xlat
pop
jle
push
jb
xchg
ds
jne
bound
push
sti
add
hlt
sbb
pop
mov
xchg
outsb
call
sub
mov
rorb
repz
inc
and
push
jge
push
shll
or
sbbl
fsubrs
imul
xor
stos
sbb
xor
jne
lret
loop
frstor
mov
cmpsb
cwtl
add
mov
inc
data16
out
pop
into
aas
xchg
rcr
test
out
and
insl
jb
and
nop
cld
xchg
hlt
shl
fldl
inc
or
imul
and
mov
stos
pop
xlat
mov
loope
mov
imul
add
stos
pop
into
and
xchg
mov
mov
imul
pop
fldt
inc
jp
push
sti
cmp
scas
test
out
data16
test
pop
jle
sub
mov
mov
jg
pop
rcrb
roll
test
mov
mov
icebp
push
xchg
xchg
pop
in
pop
ja
xor
cltd
es
mov
out
out
test
or
pop
jp
lahf
fs
mov
adc
xchg
popf
std
xchg
inc
pop
xchg
ja
ret
push
lret
pop
jg
pop
jg
xchg
cmpsl
andb
mov
movsl
adc
aas
fwait
jl
cmp
andb
cmpsb
shlb
add
movsl
in
addb
rdtsc
lahf
ret
pop
fs
ret
sbb
xchg
jp
cmpsb
pop
pushf
aad
sub
adc
jb
es
push
aad
adc
jbe
arpl
jns
fninit
adc
dec
dec
push
sti
sub
push
or
lcall
jae
lret
mov
daa
cmp
sahf
xlat
xor
push
xor
inc
ljmp
out
outsb
sub
inc
movsb
and
mov
ret
test
add
bound
cld
cmpsl
xor
pop
pop
test
ss
sub
or
lcall
push
outsb
push
or
cmpsb
push
je
jecxz
jbe
mov
dec
sbb
pop
outsl
movsl
xchg
dec
jmp
ds
mov
lea
mov
xchg
mov
dec
dec
sahf
pop
add
popf
xchg
inc
popf
jo
sbb
pop
rcll
call
insl
fisubs
out
inc
scas
scas
xor
js
das
pop
les
adc
mov
ds
xchg
pop
jo
jo
adc
scas
into
xchg
xor
cwtl
or
or
lods
mov
and
fwait
stc
xchg
mov
xchg
mov
jg
and
sub
ds
and
js
movsb
adcl
pop
test
pop
or
out
movsb
je
ds
mov
dec
push
ret
sbb
sub
xor
mov
aam
repz
out
sub
es
and
out
xchg
das
lock
xchg
jnp
loop
outsb
adc
or
jle
dec
inc
les
psubd
xchg
stos
fistl
aas
dec
int3
lcall
xchg
xchg
arpl
mov
push
fcmovnbe
xchg
fcoml
sbbl
js
mov
add
pop
add
inc
cld
imul
inc
fbld
in
jmp
mov
cmp
inc
xlat
int3
ja
inc
mov
or
aam
mov
sub
es
cld
xor
inc
outsb
es
repnz
sub
add
lods
lret
shrl
mov
sar
pop
cmp
push
pop
aaa
add
inc
test
mov
and
or
adc
movaps
jmp
sub
xchg
popa
bnd
cmp
and
and
xchg
enter
inc
repnz
mov
xchg
jp
cmp
testl
mov
jo
push
arpl
repz
cli
loop
adc
pop
inc
mov
ljmp
pop
repz
push
or
sarb
test
popf
jbe
aas
inc
out
xchg
addb
sbb
sub
jle
ss
push
dec
out
fidivrl
or
push
test
and
addb
repnz
xlat
insl
pop
sbb
jmp
shll
lahf
aas
xchg
and
shrl
cli
xor
push
pop
scas
sbb
idiv
push
aam
lret
fs
ret
int3
ja
jae
pop
mov
icebp
mov
test
add
stos
and
sbbl
scas
pop
xchg
aam
sub
es
push
mov
dec
sahf
je
stc
dec
rcl
imul
mov
nop
inc
aad
popf
add
mov
hlt
sbbl
ja
out
lcall
cltd
test
test
lret
bswap
aas
xor
push
mov
lret
sbb
sbb
pop
arpl
lcall
addr16
adc
dec
or
fcomps
arpl
inc
lds
xchg
and
mov
mov
clc
js
push
stos
stos
imul
scas
jp
xchg
sub
stos
jne
lcall
lods
loop
ljmp
jp
rcr
or
imul
mov
lock
fwait
std
push
mov
add
lret
or
fsub
add
fcmovnbe
aad
pop
scas
mov
repz
xlat
pop
cmp
repnz
in
push
lods
outsl
lret
mov
pop
rol
mov
jmp
fsubrp
xchg
cmpsb
bound
add
add
sbb
or
cmp
and
add
jge
xchg
addr16
sbb
loopne
add
clc
into
sti
and
xchg
mov
std
add
push
idivl
adc
jbe
jecxz
fs
adc
enter
mov
out
sub
leave
stc
sub
adc
push
shl
sub
xchg
xchg
mov
js
mov
adc
scas
pop
mov
loop
push
shll
push
movsb
imulb
xor
clc
fmull
xor
sub
sahf
push
out
ja
insl
mov
cmp
and
xor
jae
lahf
jne
mov
push
mov
push
sbb
fnstsw
mov
fadd
int3
and
mov
movsb
mov
fs
insl
mov
pop
imul
cld
shlb
sub
insb
repz
xor
ja
mov
std
lret
in
lcall
adc
mov
lods
fiadds
pushf
test
mov
push
jecxz
cmp
mov
xor
mulb
jmp
cli
nop
out
fimuls
arpl
add
dec
repnz
loopne
popa
sub
fwait
dec
jge
ficoml
lods
pop
inc
cltd
ja
jecxz
shlb
push
sub
and
sahf
out
out
jne
in
mov
ss
mov
mov
lret
cmp
lcall
adc
or
pop
movsb
enter
data16
and
dec
mov
pop
repz
fcom
ss
mov
lret
mov
push
fisubl
dec
stc
fwait
dec
fwait
jge
cmp
mov
adc
out
jl
push
inc
xchg
mov
clc
xor
sub
xchg
pop
lret
rcll
aam
add
jle
mov
jle
push
cmpl
sub
sub
popf
adc
mov
add
lahf
or
lods
andl
ret
sbb
add
xchg
xor
push
imul
xchg
imulb
cmpsl
mov
imul
or
pop
jne
jno
inc
pop
lods
into
cmp
add
xchg
inc
mov
sub
mov
inc
inc
mov
lock
and
int
dec
daa
dec
jecxz
xor
xchg
jp
sbb
pop
das
mov
cmpsb
mov
ret
or
xchg
adc
fsubrs
xor
inc
movsb
push
push
mov
pop
mov
sbb
loopne
pop
add
pop
movsl
push
aaa
sbb
adc
dec
dec
int
in
mov
push
lahf
inc
repz
and
ret
je
push
repnz
mov
stos
jo
popf
jae
aad
cltd
pop
sbb
mov
jno
jg
dec
mov
mov
xchg
imull
outsl
jle
dec
dec
lds
cmpsb
daa
adc
in
adc
inc
mov
dec
ds
shll
push
dec
mov
xorb
fbstp
sbb
mov
sub
jmp
adc
cmpb
mov
add
fmull
ljmp
lods
xchg
push
xor
and
adc
mov
dec
test
addr16
or
pop
mov
push
lock
test
or
pop
sbb
xor
lods
les
lods
fs
fsubrs
stc
and
jbe
dec
mov
int3
ss
ljmp
adc
pop
inc
dec
and
pushf
rclb
lds
icebp
add
into
add
lods
xchg
repz
dec
xchg
aad
pop
addb
adc
in
pop
dec
xor
pusha
sub
fwait
mov
sub
rcll
inc
outsb
xchg
pop
pop
int
call
xor
add
cmc
in
aam
sub
test
mov
out
rcl
scas
imul
add
and
inc
dec
les
or
testb
sarl
cltd
scas
jnp
cwtl
adc
aaa
mov
sar
cmp
sub
sub
pop
mov
push
cli
jne
pop
pusha
scas
jmp
dec
dec
mov
ret
repnz
xor
inc
ljmp
sahf
ret
pop
jo
xchg
mov
lahf
push
loopne
xchg
cld
jns
in
out
pushf
sub
out
or
cmp
int3
mov
xchg
inc
xor
mov
sub
out
xchg
push
repnz
cmpsl
imul
pop
and
int
xchg
ret
hlt
in
jae
push
out
lock
lret
pop
cli
xchg
js
nop
movsb
xchg
imul
and
icebp
in
sbb
dec
push
sbb
mov
fidivs
sbb
or
imul
push
lds
js
insb
jo
ljmp
shll
mov
test
mov
and
ds
ja
mov
les
xchg
inc
pop
paddsb
push
cmp
addr16
sub
in
mov
sti
or
lret
xchg
push
cs
add
xchg
or
add
mov
data16
or
lret
repnz
lret
or
test
xchg
test
lds
dec
dec
xor
decl
outsb
and
popa
cmp
stos
fsubs
push
and
sbb
sbb
sub
and
std
int3
iret
lahf
insl
cmp
xor
fildl
push
pop
mov
jmp
ffree
cmpsl
adc
pop
js
std
inc
das
sti
sbb
xchg
in
ficompl
fst
out
sbb
orb
inc
loop
cmpsb
mov
leave
aaa
dec
and
mov
lds
sti
dec
and
pop
bound
xor
lods
add
mov
subb
sub
lock
test
repz
mov
jge
sahf
hlt
popa
add
sahf
loop
push
jg
xchg
repnz
mov
mov
lahf
fistpl
push
or
aaa
cld
xlat
stos
and
xchg
stos
mov
xor
or
gs
inc
mov
cmpsl
fildll
bound
cmp
fdiv
bound
xchg
lock
stc
mulb
sub
sbb
lods
sub
imul
push
test
push
popa
imul
cmp
scas
mov
cmc
lods
xchg
xchg
test
jp
pop
mov
insb
cltd
sub
ret
test
fwait
mov
iret
inc
mov
add
inc
outsl
out
xchg
fdivr
mov
sbb
jge
jno
ret
sub
or
outsl
mov
insl
fstpl
mov
cwtl
clc
jp
aam
inc
dec
das
imul
adc
pop
out
aaa
outsl
scas
lsl
jns
adc
jg
pushf
xchg
or
sub
mov
iret
std
cmp
jno
fbstp
mov
cmp
cs
lock
cmpsb
adc
xchg
mov
push
jle
add
fldt
orl
sub
fmuls
std
sub
jns
cmp
mov
xchg
mov
test
movl
aaa
or
daa
popa
int
popf
mov
cltd
sbb
movsb
idivl
stc
roll
lds
lock
push
jo
xchg
movsl
sbb
sub
sbb
mov
xchg
mov
lods
call
and
mov
dec
inc
leave
pop
imulb
out
fisttps
cld
cmpsb
pushl
sub
mov
adc
hlt
test
int
sub
mov
nop
cld
rcll
repz
push
sarl
and
sarl
call
imulb
pusha
dec
xchg
lahf
ja
add
shl
pop
push
adc
movsb
ss
add
xlat
cmp
inc
sub
sbb
mov
mov
mov
ds
inc
mov
es
pop
or
in
outsb
xchg
lret
addb
insb
cwtl
mov
xchg
ret
fldl
sub
mov
xchg
add
lret
into
mov
jb
loop
adc
sub
adc
cmp
movsb
sti
ds
pop
pop
mov
mov
add
leave
iret
fnsave
inc
pop
mov
lods
jno
ret
or
push
mov
in
or
sbb
aas
jnp
rorb
push
test
cmp
scas
std
shll
lds
and
mull
jp
pop
push
push
out
int
hlt
cmp
add
push
adc
out
and
mov
ret
inc
shr
std
sbb
cs
push
pop
xlat
jle
movsl
aas
stos
dec
bound
inc
dec
push
fsts
mov
into
popa
inc
mov
int3
push
ss
int3
ds
nop
and
aam
ret
mov
movsb
rorl
or
add
repz
into
daa
lret
adc
fs
xchg
loop
push
add
jae
cmpsb
mov
out
xchg
mov
or
push
xchg
leave
mull
and
jns
loope
dec
adc
mov
sahf
mov
or
inc
outsb
pop
fistl
loope
adc
stos
or
xchg
push
push
dec
ds
popa
movsb
test
into
shll
loopne
test
jle
nop
loopne,pt
mov
xchg
mov
fists
je
mov
je
aad
movsl
in
push
pop
inc
or
mov
and
jl
sti
mov
mov
pop
or
mov
mov
test
xchg
mov
imulb
fucomi
sbb
arpl
push
test
fildl
ja
adc
inc
cmp
jbe
dec
mov
xor
inc
jecxz
fs
jg
push
push
cmp
jecxz
push
sahf
jb
xor
mov
dec
sub
sbb
les
lcall
push
pushf
test
mov
mov
ret
push
or
lret
fisubl
jge
aam
or
mov
dec
aas
xchg
cmp
mov
aaa
lds
andnps
divl
push
lret
pop
xchg
sbb
jl
mov
cmp
mov
xchg
cmpb
js
addr16
lahf
lods
repnz
dec
mov
inc
add
lret
mov
out
adc
dec
fidivrs
movsb
ret
cmp
out
and
xchg
mov
xlat
in
and
push
jl
dec
loop
jp
sbb
cmpsb
sarl
aaa
sarl
dec
xor
add
pusha
insb
lcall
fcoms
mov
mov
dec
in
sbb
sbb
inc
pop
loop
xlat
cmp
or
shll
out
xchg
scas
into
jns
pop
xor
inc
in
repnz
add
or
lahf
jge
or
sar
sub
jle
sbb
fadds
add
stos
inc
cwtl
leave
mov
fidivs
push
pop
ss
ret
ret
cwtl
sbb
mov
jecxz
push
mov
or
rcll
inc
jbe
adc
pop
icebp
xor
push
add
popf
clc
loope
and
jmp
or
inc
ja
ror
js,pt
fisttpll
and
fidivrs
adc
mov
hlt
pop
dec
int3
ljmp
inc
jne
lahf
in
es
adc
cmp
pusha
loop
or
pop
sub
sti
jb
push
mov
and
loope
lock
shrb
jnp
out
ds
jg
hlt
mov
aas
icebp
movsl
pop
dec
arpl
inc
movb
daa
push
push
shll
movsl
fcmove
pop
rolb
movsl
div
mov
add
int
inc
cmc
sub
push
pop
sub
orb
cmp
cmp
dec
outsb
or
push
jge
fst
incb
jns
bound
sbb
push
cli
cmp
imulb
add
and
mov
bound
add
sub
cli
std
push
sti
imul
scas
popa
xchg
out
data16
dec
rclb
push
out
popa
imul
push
test
je
lock
lret
or
xorb
push
dec
call
dec
adc
gs
jge
test
cmpsl
lret
inc
shrl
mov
push
or
mov
cld
mov
fwait
xorb
rcll
sahf
inc
xor
loopne
jbe
cmc
test
cmp
and
jmp
repnz
sti
scas
outsl
out
xchg
jae
mov
mov
mov
cmp
mov
and
shl
neg
mov
inc
test
sbb
cmp
sub
sbb
and
in
int3
sbb
jmp
pop
ret
enter
test
inc
xchg
adc
repnz
testl
std
xchg
xchg
aas
cmp
lds
pop
test
mov
jbe
fmull
das
aaa
sbb
int3
movsb
cmp
sbb
popf
loopne
mov
hlt
outsl
mov
aad
dec
out
lret
adc
cli
add
rorb
push
repnz
mov
js
popa
loope
cmp
gs
push
cmp
pop
xchg
xchg
mov
cmp
or
maskmovq
testl
xchg
mov
dec
shrb
int3
pop
rclb
scas
jne
add
mov
add
adc
mov
and
aaa
mov
push
movsl
sti
xor
cwtl
in
movsb
aam
mov
xchg
add
dec
lahf
cmpsb
sar
dec
aaa
repz
push
pushf
rcrl
out
leave
ja
adc
dec
data16
push
jne
ret
ljmp
mov
inc
xor
inc
mov
jecxz
xchg
and
xor
cmpsb
push
shl
pop
sbb
ret
movsb
arpl
stc
mov
clc
jbe
aam
cltd
mov
test
add
add
out
add
test
push
aaa
jg
pop
test
nop
adcb
mov
outsb
sub
lods
push
shr
xchg
push
insb
ret
pop
mov
test
fstpl
sbb
pop
shlb
push
sub
mov
ds
cmp
lds
inc
ficoms
sub
add
rcll
jp
mov
lret
js
cmc
pop
or
cmp
sub
sbb
jo
or
or
push
sub
loopne
mov
fdiv
pop
enter
xchg
cmpsl
fbld
mov
add
cmp
add
and
subl
push
fs
negb
js
out
mov
js
push
fistpll
mov
pop
nop
cmp
ja
pop
adc
mov
jb
mov
shll
pop
mov
sahf
and
cld
fstps
repnz
inc
push
ja
cmp
add
in
fisttpl
imul
in
jae
fisubrl
and
fimull
dec
cmc
xchg
adc
cmp
cmpsb
je
push
ss
mov
bound
orb
dec
adc
lret
loop
sub
imulb
lods
mov
outsb
sub
mov
add
daa
fwait
aas
xor
xchg
lcall
loope
ljmp
cmp
popa
xor
add
inc
sbb
rolb
xor
xchg
sub
test
pop
cmp
movsb
adc
cltd
xlat
fwait
or
je
and
pop
xor
lcall
inc
sbb
inc
fcoms
inc
lahf
lods
mov
mov
call
cmc
or
and
and
jge
mov
and
hlt
or
inc
fsub
push
pushf
pop
xlat
cmp
inc
fdivrs
add
rcll
sar
mov
adcb
push
sbb
lods
dec
mov
ja
das
mov
lret
jo
fsubrl
in
aaa
jo
leave
scas
orl
cmpsl
loop
dec
cmp
mov
cwtl
loop
or
jbe
test
cwtl
mov
aad
out
shrb
add
push
sub
pop
xor
xchg
pusha
mov
cmpsl
loopne
repz
orb
mov
pop
popf
rcll
mov
imul
sbb
xchg
sub
imul
jnp
push
loopne
sbb
dec
mov
mov
mov
jb
mov
retw
sub
les
movsb
inc
xchg
pop
scas
jno
pop
mov
enter
pop
jp
push
in
in
push
fsubrp
cltd
mov
adc
bound
mov
mov
sub
sbb
je
fwait
xchg
xchg
cmp
pop
aad
jp
aaa
mov
push
xchg
negb
outsl
inc
mov
add
xchg
incb
xchg
fwait
pop
jnp
and
dec
in
xor
ja
inc
jb
es
pushf
cmp
imul
or
push
aas
jnp
pushf
lea
push
and
outsb
xor
xlat
sub
add
mov
lds
out
iret
pop
lret
cmpsb
inc
push
mov
fcmovb
sub
mov
insb
lret
subb
or
mov
in
frstor
std
aam
sti
test
icebp
add
notb
xor
and
xor
lahf
bound
cmp
jp
int3
loop
dec
out
jb
outsl
dec
pop
push
adc
push
adc
cmp
cmc
test
test
push
dec
cmc
push
out
push
pop
rcr
dec
xor
jae
loope
lods
nop
mov
mov
adc
mov
cmp
xor
aas
and
mov
push
xchg
jecxz
jns
into
add
jno
mov
jno
push
push
pushf
mov
data16
ret
and
incl
aas
xchg
mov
daa
push
push
jb
sub
dec
scas
pop
shrb
inc
mov
dec
jne
test
push
insl
add
xchg
push
and
push
jmp
mov
and
sub
sahf
xchg
jb
ljmp
add
stos
pusha
bound
frstor
invd
fisttpl
jmp
xchg
or
xchg
stc
test
cmc
push
xchg
bound
fs
cwtl
xor
adc
jnp
mov
sbb
sti
pop
out
sbb
lock
pop
cmp
arpl
test
xor
sub
cwtl
xchg
repnz
dec
daa
mov
bound
push
daa
gs
push
sub
fbld
lock
lods
lret
pushf
popf
jo
xchg
cmp
xlat
mov
dec
and
je
and
int3
filds
hlt
push
std
dec
idivl
ret
pop
inc
fistpll
jg
rcll
into
push
loopne
cmpsb
incb
dec
cwtl
ret
push
push
mov
add
nop
aam
pop
cmp
xchg
loop
push
xor
and
dec
push
lods
push
int3
sbb
cmpb
notb
push
sub
cmpb
mov
push
add
mov
scas
dec
pop
pop
js
arpl
inc
in
lcall
stc
sbb
clc
rcr
int3
cmc
push
add
enter
adc
hlt
jnp
stos
jno
ret
ret
jge
addr16
fs
sub
dec
push
fistpl
cld
pop
hlt
fdivr
and
andl
inc
mul
sub
sub
mov
sbb
add
or
or
outsb
les
sbb
lcall
adcl
aaa
xchg
xchg
int
jge
outsb
idivb
mov
faddl
jmp
loopne
mov
xor
loopne
inc
enter
das
add
sbb
add
lcall
adc
xor
movsl
jge
fcomps
je,pt
mov
push
jo
cmpsb
mov
popa
inc
mul
sbb
push
xchg
loope
jbe
addl
mov
adc
or
sub
ror
adc
xlat
pusha
mov
mov
rclb
mov
xchg
leave
mov
pop
mov
test
pusha
xchg
cmp
dec
fsubs
iret
or
pop
mov
and
adc
and
mov
mov
shrb
and
and
pushf
xchg
xchg
in
fists
mov
jno
xor
lret
clc
sarl
fs
push
mov
shlb
aam
adc
into
sub
dec
imul
inc
sahf
sbb
outsl
push
out
in
loope
mov
std
jnp
cmp
pop
enter
arpl
insb
push
pop
outsb
inc
aad
mov
mov
dec
mov
loopne
mov
inc
inc
adc
mov
xor
mov
imul
adc
fcmovb
jp
add
xchg
and
mov
mov
mov
jge
pmuludq
jo
xor
push
in
ja
xor
addr16
sarl
xor
mov
dec
or
cwtl
xchg
scas
xor
out
pop
or
add
xor
push
or
outsb
mov
lret
pop
stos
xchg
inc
mov
rcr
outsl
popf
call
jnp
insl
sbb
rcll
push
in
stos
dec
orb
fwait
ds
mov
mov
jb
and
mov
inc
inc
cmp
cmp
cmp
add
hlt
push
cs
mov
stos
and
push
mov
xchg
rcll
mov
cld
inc
sbb
jp
in
push
push
sbb
mov
lcall
enter
addl
fsts
add
cmp
push
in
mov
int3
out
mov
inc
mov
jg
push
cwtl
xor
cli
and
arpl
out
add
inc
mov
lahf
adc
or
stc
popa
pop
sahf
in
dec
cltd
xchg
push
push
adc
xchg
out
add
stos
fsubl
fwait
movsl
push
mov
sbb
pop
repnz
shl
pushf
jns
fcomps
out
sbb
push
fstpl
cld
xlat
jno
xor
call
dec
fwait
xchg
mov
push
bound
push
push
ljmp
pushf
dec
mov
and
jle
shlb
stos
out
test
lods
pop
dec
inc
arpl
out
fwait
test
fisubrs
int3
push
pop
or
inc
std
pusha
js,pn
in
add
inc
inc
mov
and
repnz
sahf
mov
sub
add
sti
das
push
inc
xchg
mov
jbe
pop
sub
mov
fstl
xchg
sbb
xor
movsl
les
xchg
jp
aaa
aas
mov
arpl
mov
mov
shll
popa
aas
out
adc
cli
or
mov
add
movsl
nop
lahf
repz
cs
sbb
dec
jp
scas
mov
cmpsl
mov
fimuls
lods
pop
mov
mov
cmpsl
inc
popa
and
mov
lds
xor
nop
aad
testl
push
data16
mov
fs
jecxz
pop
out
pop
fsubr
jge
enter
stos
dec
cmc
loop
push
pop
mov
mov
fs
sub
test
pop
jo
aam
adc
push
stos
js
mov
mov
push
xlat
add
imul
mov
sub
pop
les
repz
lret
jnp
daa
out
leave
sbb
outsb
jmp
loope
cwtl
jp
push
inc
xor
add
sbb
cwtl
add
sbb
out
sbb
ss
fsub
or
mov
inc
mov
iret
int3
movsl
lahf
xlat
adc
scas
mov
jecxz
cld
cmp
jmp
pop
pop
add
xchg
bound
jl
cltd
jge
inc
pushf
call
stos
jl
jp
fisttpll
les
cmp
pop
push
cmp
push
out
or
jnp,pn
popa
scas
inc
sbb
loope
push
aad
cwtl
sahf
imul
bsf
inc
xor
jae
fwait
bound
dec
mov
outsl
xchg
pop
mov
mov
mov
jns
ja
nop
xor
and
mov
insl
mov
pop
pavgb
stos
ljmp
pop
add
and
mov
push
enter
or
ret
shll
sbb
mov
not
pop
les
pop
repz
jmp
addl
icebp
hlt
dec
dec
cmpsb
sarl
outsl
loopne
stos
cld
cmp
ljmp
into
stc
lcall
ja,pn
jnp
and
sbb
repnz
in
ret
fdivs
aaa
insb
mov
js
cs
inc
xchg
stos
pop
test
and
pop
test
adc
xchg
ret
adc
lods
loop
sbb
push
gs
icebp
ret
adc
cmpsl
add
add
or
loop
sbb
pop
call
mov
incb
jae
repz
insl
inc
dec
imul
xchg
and
add
jecxz
pushf
dec
in
orb
or
xor
inc
notb
xchg
add
fs
jmp
test
sahf
xchg
mov
xor
xor
and
and
pop
scas
xor
stos
insb
or
mov
pushf
ja
test
push
mov
dec
dec
fwait
call
data16
idivb
xchg
repnz
shl
jecxz
lret
ds
repnz
mov
or
mov
or
shrl
mov
jae
cmp
sub
arpl
lahf
test
movsl
outsl
xor
sub
out
loopne
es
imul
mov
push
int3
push
adc
push
xorb
cmp
out
subb
pop
xchg
jmp
or
jl
stos
xor
push
xor
into
jecxz
in
ja
add
mov
jbe
dec
push
sub
inc
mov
sub
dec
or
mov
loop
pop
mov
push
mov
lock
jno
inc
push
es
fiadds
mov
mov
cltd
fistpl
iret
aaa
push
xchg
mov
dec
inc
addr16
pop
push
inc
test
cmc
pop
push
pop
xlat
std
out
xchg
push
sub
in
and
lea
cld
and
add
adc
push
pop
pop
arpl
jp
std
notl
xchg
xchg
mul
xor
aad
bound
je
fs
sbb
cmp
roll
andl
xor
and
je
mov
lds
xchg
scas
fstl
mov
popa
adc
aam
test
movsl
out
cmp
rclb
lret
je
mov
test
shrl
mov
test
daa
lahf
outsb
push
add
or
inc
and
push
cmp
mov
sub
ret
or
mov
int
cmp
add
mov
push
test
jne
sub
cwtl
jmp
or
mov
je
lret
xor
lret
aas
and
push
add
ds
dec
iret
mov
adc
std
mov
push
icebp
or
sbb
aas
jb
sub
xor
in
test
xlat
imul
jb
cmp
cmc
fwait
push
hlt
xor
bound
push
push
mov
pop
push
or
adc
cmp
add
mov
gs
fidivl
loopne
ss
or
mov
outsb
js
pop
and
sbb
dec
iret
mov
mov
outsb
frstor
mov
cmp
sub
push
pop
repz
inc
dec
data16
aas
loopnew
int
movsl
lea
sbb
rcl
adc
pusha
dec
int
idivl
mov
cmp
gs
or
mov
xor
popa
lret
or
xor
mov
movsb
test
pop
mov
jae
jmp
mov
cmpsl
ljmp
icebp
arpl
iret
call
push
dec
xchg
add
loopne
xor
fwait
popa
mov
popa
pop
dec
jmp
xchg
in
stos
dec
xchg
add
idiv
pop
add
add
mov
inc
cmpsb
jb
addl
cwtl
pop
push
mov
xor
mov
cmpsb
mov
jnp
into
and
sub
mov
fistpll
sahf
mov
js
fisubl
sbbb
mov
dec
roll
les
push
sarb
gs
mov
imul
mov
rorl
xchg
xor
sarb
rorl
test
push
jbe
sbb
scas
mov
xchg
sbb
or
sti
jbe
into
repnz
sub
inc
adc
cmpsl
fldcw
add
mov
js
into
pop
push
mov
xchg
and
and
cs
call
rcll
adc
push
aad
add
mov
push
xor
int
mov
and
dec
rorl
mov
xchg
test
sahf
jno
loopne
fcompl
xchg
xchg
cmp
cmp
stc
aaa
inc
lahf
nop
xchg
push
push
cmp
mov
push
add
fimull
jo
push
outsb
pop
xor
sti
xchg
int3
push
out
ss
xchg
es
push
push
push
mov
xchg
test
mov
in
add
jb
xor
mov
add
pop
pop
cmp
inc
mov
add
push
sahf
sbb
dec
shr
rorl
stos
pop
popf
inc
mov
mov
aad
mov
clc
mov
pusha
adc
adcl
xchg
lret
mov
inc
ret
and
dec
leave
jg
clc
loope
stc
sbb
int3
or
xchg
lcall
test
shll
nop
dec
push
insb
outsb
aas
pop
sbb
push
mov
pop
mov
cs
insl
sbb
push
lods
sub
rorb
js
sbb
idivl
out
idivl
shll
cmp
cli
inc
sbb
fwait
xchg
inc
cli
xor
inc
mov
xchg
ds
hlt
jg
std
mov
jge
or
adc
xchg
pop
adc
inc
xchg
fmulp
mov
aam
call
cmp
mov
inc
icebp
test
outsl
xor
data16
inc
cmp
jge
mov
in
push
imul
xor
xchg
jl
mov
xchg
xor
sahf
add
push
out
loopne
int3
mov
and
icebp
scas
dec
outsl
ja
add
inc
fs
insl
add
mov
imul
mov
pop
mov
in
add
mov
lcall
jl
repz
fbstp
das
or
jnp
sub
push
xchg
pop
test
das
mov
mov
inc
pushf
cmp
add
roll
call
cmpsb
or
fcmovb
mov
xor
fnstsw
ret
fiadds
push
mov
push
and
aam
jae
pop
mov
sbb
out
mov
push
stos
testl
test
xor
insb
jnp
inc
aam
sub
push
jne
aas
push
pcmpeqw
add
push
dec
push
add
ljmp
stos
push
test
insb
inc
pop
fs
cld
mov
imul
clc
dec
mov
ja
cli
adc
insb
push
jg
dec
push
dec
ret
testb
jmp
loope
sbb
push
enter
orb
push
out
and
mov
mov
jo
mov
cmp
test
mov
adc
fcoms
jmp
fucom
ficompl
ret
xchg
scas
sub
push
xorb
mov
inc
xlat
repnz
ja
data16
cmp
mov
out
ds
aad
adc
push
es
push
inc
aaa
and
or
stos
jle
insl
mov
int3
subb
and
add
cmp
or
jns
mov
sbb
ljmp
mov
cmp
scas
sbb
jle
std
pop
scas
clc
mov
sti
out
xlat
imul
xor
test
imul
ror
fidivrl
out
jne
sbb
xor
mov
jb
out
das
mul
loopne
pop
aaa
mov
cwtl
sti
adc
cli
nop
mov
xor
mov
cmc
fcmove
ret
push
cmp
mov
sarb
daa
push
dec
sbb
cmp
ss
pop
and
add
leave
and
dec
repz
sarl
pop
sar
out
cmpsb
inc
fisubl
inc
lods
push
or
or
imul
mov
jecxz
int3
cmp
inc
pop
notl
mov
lahf
adc
scas
leave
loop
inc
sub
rcrl
cmp
mov
dec
icebp
shlb
sti
sbb
jge
cli
in
xchg
popf
addr16
rorl
xchg
add
js
cwtl
mov
mov
dec
xchg
jp
sub
int3
insb
and
mov
cmp
adc
inc
push
adc
cmpsl
pushf
mov
addl
in
jge
outsl
fwait
and
loop
mov
mov
mov
inc
mov
nop
ds
loope
push
inc
inc
loop
mov
and
xchg
push
daa
fadds
mov
or
inc
add
jbe
ja
test
jp
xor
lock
jg
adc
push
mov
scas
out
jno
daa
inc
mov
dec
push
lcall
sti
cld
call
add
cld
out
push
pop
addr16
xchg
cltd
dec
popa
shrb
in
or
dec
adc
or
push
out
cltd
je
sub
inc
sub
xchg
push
mov
shll
ret
addr16
mov
xor
mov
jno
pushf
jno
es
cld
dec
cs
leave
mov
js
add
into
cltd
ja
push
inc
inc
pop
aad
mov
adc
in
data16
inc
int
fstp
popa
popa
jp
addr16
int3
test
inc
sbb
add
dec
cmp
add
pop
or
pop
xchg
ret
les
mov
push
or
das
movsb
cmp
mov
sbb
pop
das
add
shrb
sbb
jo
xchg
out
jmp
repz
jg
adc
mov
sbb
mov
dec
lea
or
or
mov
lcall
shll
sub
mov
lcall
and
ds
es
out
push
rcrl
or
aaa
sarb
leave
aam
nop
xor
hlt
mov
mov
jg
push
push
jmp
and
leave
pop
adc
cltd
fistpll
clc
imul
aad
test
mov
mov
ljmp
jns
pop
outsl
ds
dec
imul
addl
popf
sbb
jmp
jg
mov
fcmovne
adc
xorb
sbb
rolb
or
fists
mov
sbb
lea
mov
sub
xor
pop
in
pop
dec
sbb
shlb
repz
cmp
loopne
mov
pusha
xchg
jmp
lcall
add
mov
and
mov
sarb
imul
shld
xor
cmp
movsl
push
mov
stc
mov
xor
into
negb
jns
sbbl
add
dec
xchg
fldt
leave
mov
jg
xor
out
fcomps
mov
jo
dec
pop
fadds
pusha
ljmp
mov
xor
std
repnz
and
scas
push
dec
mov
jno
movl
adc
pop
jecxz
pop
push
inc
arpl
pushf
push
insl
pop
faddl
mov
cwtl
xchg
aam
outsb
loope
in
xchg
pusha
sbb
sarl
shrb
jae
mov
jno
adc
cld
xchg
sub
mov
jnp
ret
cs
out
add
cmpsl
mov
in
orl
xchg
sbb
test
jl
shrb
sbb
call
leave
fildll
cmp
mov
repnz
fnstcw
mov
stos
sbb
js
cli
jbe
add
enter
in
les
cs
sbb
packuswb
jg
gs
inc
mov
hlt
jl
idivb
push
fisttps
daa
sahf
scas
sub
jo
jo
sti
push
test
pop
dec
push
and
sarb
sub
lret
negl
xchg
fisttpll
lea
in
inc
pop
fwait
and
push
fcom
fisttpll
or
leave
gs
pop
jmp
repz
loope
and
mov
lret
pop
imul
call
cmc
addl
loope
in
aad
vmovapd
cmp
and
scas
and
pop
add
push
adc
in
sub
pusha
lret
mov
jae
inc
repz
clc
into
imul
outsl
dec
or
jl
inc
xor
pop
inc
xchg
jg
add
pop
pop
adc
adc
xchg
rcrl
out
xchg
jno
out
lock
test
mov
mov
jne
and
mov
xor
pop
test
xor
mov
dec
push
add
push
ljmp
out
lret
stos
push
mov
clc
mov
push
push
mov
movsb
inc
xor
int
inc
mov
aas
nop
jnp
ret
lock
pop
pop
fstpl
cmp
ret
adc
nop
outsb
sub
mov
push
push
push
fldcw
sbb
es
pop
add
int3
jl
in
outsl
in
mov
cwtl
fwait
jecxz
mov
inc
jnp
lods
mov
lock
mov
mov
mov
adc
xchg
cwtl
and
mov
sub
cs
jb
imul
jecxz
push
cmpsl
push
aaa
scas
add
fwait
scas
lcall
inc
pushl
jnp
ret
scas
test
outsb
in
jle
repnz
insb
inc
test
lea
cmp
xchg
or
inc
insl
inc
popa
dec
dec
adcb
icebp
test
je
sbb
dec
jns
mov
push
jecxz
fidivrl
or
add
pushf
cmpl
into
in
lahf
or
loope
rcll
jp
out
push
pop
mov
jno
rsqrtps
xor
add
out
jle
adc
add
ret
in
adc
and
mov
mov
int3
sub
sub
pop
xchg
xchg
loop
inc
icebp
lret
scas
cmpsl
mov
inc
add
sbb
pop
shr
in
adc
fsubrs
out
lahf
ret
or
sub
movsb
add
xchg
nopl
pop
mov
repz
push
out
sbb
shlb
cmp
adc
mov
sbb
pop
call
movsl
sub
loop
dec
loopne
enter
cmp
adc
cmc
cmp
lods
cli
jecxz
aam
lds
dec
idivl
fs
push
jg
inc
jmp
outsb
cld
sarl
mul
mov
std
push
jmp
sti
lret
lds
xor
xor
stos
jl
and
aaa
add
xorl
cmp
ror
loope
je
mov
and
cmp
xor
fmuls
mov
icebp
out
and
mov
cmc
xor
dec
test
out
or
int3
sti
sbb
or
or
mov
push
pop
adc
mov
xchg
fldcw
pop
lods
leave
xor
push
ficomps
movsl
sbb
scas
stos
hlt
jne
std
jmp
shll
popf
mov
xchg
fldt
stos
push
fs
dec
pop
push
sub
icebp
shrb
test
pop
sub
inc
jge
pop
dec
mov
adc
lds
sub
adc
cmc
insl
inc
loope
adc
lret
sub
ds
lret
mov
push
sahf
mov
push
push
inc
les
push
mov
nop
shrl
loop
in
xor
std
push
adcl
or
out
xchg
mov
xor
fcompl
or
sub
mov
or
std
sbb
mov
dec
lea
push
fidivs
mov
leave
jge
fwait
je
insl
add
scas
or
add
mov
push
xchg
pusha
push
push
test
fisubl
mov
push
aaa
fsubp
dec
shlb
pop
frstor
hlt
xchg
jl
bound
lods
fwait
sbb
or
pop
push
mov
fisttps
xor
test
add
lds
add
jmp
loopne
rol
lds
pop
rcll
jne
inc
or
xchg
add
xor
stc
sbb
ljmp
xor
mov
jnp
cmp
jge
negb
test
xlat
jne
mov
mov
or
add
cmp
or
or
adcb
lock
sti
pop
xchg
test
cmp
cmp
push
inc
jne
pop
inc
out
mov
push
cmpsb
ss
xchg
test
enter
out
mov
and
pusha
mov
test
es
outsb
cmp
add
int
pushf
mov
insl
adc
adc
xchg
mov
js
jno
push
inc
adc
mov
jl
pusha
sbb
cmp
mov
nop
faddl
fsub
sti
daa
ret
loop
lahf
pop
push
divb
lret
shl
icebp
sahf
out
xor
test
inc
test
jecxz
adc
xor
aas
imul
adc
jo
bound
mov
adc
mov
test
sub
out
dec
sub
inc
sbb
aam
add
and
leave
adc
clc
dec
in
cmp
push
js
test
mov
and
sub
adc
movsl
add
sbb
push
sbb
mov
mov
adc
lcall
test
push
cmp
int3
fisttpll
push
jl
rcrb
push
pmuludq
rol
and
jmp
fcmovne
loopne
std
cmp
push
outsb
lcall
jmp
xlat
cli
cmpsl
pusha
push
mov
push
mov
mov
scas
pushf
mov
jo
incl
outsl
fdivl
lods
pop
cmpw
stos
into
mov
jge
xchg
sbb
out
enter
paddb
test
cmp
insb
and
jns
pop
shlb
jns
and
add
push
imul
subl
pusha
or
notb
add
jne
das
nop
lods
out
aas
movzbl
mov
call
xchg
xchg
insl
mov
pop
movsb
sbb
jbe
fisttpl
test
call
ss
popf
push
xchg
leave
pop
push
and
add
push
data16
and
cmp
test
add
mov
xor
jp
jle
sbb
dec
pop
std
jb
adc
repnz
dec
out
rorb
bound
push
fcmovnu
fdiv
add
mov
push
fs
loope
imul
or
add
dec
sub
jge
sbb
nop
adc
iret
cmc
les
add
adc
insb
push
or
repz
stc
ffree
pop
mov
mov
in
outsb
out
pop
sbb
bound
inc
or
sbb
mov
fadds
xor
imul
dec
leave
les
outsl
movsl
add
test
movsb
or
jb
mov
movsl
addr16
loop
jns
inc
fiadds
adc
inc
fbld
and
shrl
mov
and
lods
jnp
movsb
add
or
xor
hlt
popa
sti
in
inc
fnstenv
test
jae
aas
ljmp
and
mov
insl
cmp
mov
sarl
fstpt
mov
sbb
nop
stc
out
fs
inc
sbb
dec
inc
sub
sbbl
pop
shr
mov
test
xlat
or
push
in
sub
mov
mov
int3
fs
cmp
push
mov
xchg
rcrb
xor
xlat
push
inc
lds
test
add
popa
sbb
adc
es
int
inc
sbb
push
xorl
pusha
adc
xor
xor
mov
sarb
cmpl
lea
addr16
iret
lods
fwait
pop
stos
movsb
or
jbe
push
adc
inc
jb
stc
das
or
lods
cmp
pop
push
pop
add
test
and
cmp
scas
outsb
pop
ret
sub
sbb
add
imul
and
aam
into
or
inc
lds
add
fs
cmp
mov
pop
in
cld
dec
sbb
in
lds
pop
xchg
inc
cmovl
push
xchg
sub
in
mov
mov
add
and
cmc
outsb
add
mov
pop
sbb
mov
scas
loopne
fiaddl
imul
xchg
mov
xor
cmp
das
aaa
enter
mov
mov
cli
push
push
push
js
adc
sbb
pop
jb
inc
imul
cld
mull
and
jb
xor
dec
stos
int3
je
mov
inc
or
inc
xchg
out
push
dec
jmp
inc
push
mov
stos
dec
cli
pop
pop
sbb
adc
lods
ljmp
mov
xorb
add
nop
adc
push
mov
push
cmp
cmp
rcr
and
and
add
push
int3
sub
mov
fs
inc
sub
xor
loopne
lret
push
add
pop
negl
mov
cmc
mov
pop
or
sub
test
aaa
out
sbb
dec
dec
lcall
mov
js
movl
cld
or
fildl
movsl
scas
xchg
iret
repnz
adc
lret
and
jg
int
sbb
pop
addl
jle
mov
mov
outsl
repnz
inc
clc
mov
cmc
ss
lcall
in
movsb
mov
xor
popf
fists
pusha
mov
rclb
nop
loopne
xchg
xor
imul
icebp
xor
rcl
pop
mov
ja
loopne
je
mov
sbb
stc
cmp
or
push
rcll
push
xchg
adc
shrb
mov
clc
rolb
lahf
xor
jbe
jno
mov
inc
and
adc
mov
pop
jnp
seto
cmpsl
bound
test
ficompl
xchg
and
daa
and
mov
lret
test
and
mov
imul
int
std
pop
movsb
fidivrl
pop
ds
pop
ret
lret
inc
pop
jl
and
xchg
psllw
mov
test
outsb
mov
lods
add
bound
or
sti
and
lea
jno
mov
rcrb
push
xchg
sti
dec
pop
aaa
repnz
inc
jge
stos
mov
sti
fldenv
jg
pop
or
test
fdivs
mov
aad
mov
js
fldt
mov
sti
push
and
mov
inc
mov
je
jg
loop
jle
pushl
out
dec
add
xor
xor
lods
loope
std
test
add
test
in
jmp
or
dec
inc
sbb
gs
sti
jmp
scas
xor
and
jne
clc
jno
xor
fistpl
mov
xchg
jmp
mov
js
xor
xchg
test
lods
xchg
aad
lret
stos
adc
sahf
aas
fistpll
jns
imul
sub
add
inc
popf
fcmove
pop
stos
scas
stos
pop
pushf
je
pop
out
mov
xchg
xchg
or
pop
jg
adc
out
daa
pushf
pop
push
cmp
mov
loope
add
sub
sbb
sub
fildll
js
dec
cld
loop
mov
in
outsl
or
pop
int
dec
jg
out
sti
call
lds
inc
lret
dec
lock
cmp
enter
repz
xor
out
cld
xchg
xchg
hlt
mov
leave
xchg
and
and
xchg
cmpsl
sarl
ljmp
out
or
push
testb
leave
jp
xchg
xor
outsl
jmp
stos
lret
pop
jl
dec
movsb
fldcw
daa
mov
xchg
xchg
out
mov
push
aam
ds
ss
mov
and
adcl
mov
in
fsubrp
fucomip
mov
lahf
add
push
stos
cld
lock
jmp
cmpsl
nop
ds
das
xor
hlt
sub
xor
cld
jp
mov
shll
ljmp
popf
sbb
mov
mov
mov
jge
fwait
push
in
jle
sbb
es
fisttpll
decb
pop
loop
pusha
inc
sarl
in
test
ljmp
lods
mov
inc
sbb
mov
sub
xor
rclb
addb
int3
pusha
xchg
pop
adc
std
in
gs
xchg
or
xchg
mov
mov
dec
xor
pop
shrb
add
xor
xchg
xor
sub
xchg
push
sub
lret
dec
test
cmp
cli
sbb
loopne,pn
cld
scas
or
cmp
pop
and
lock
pop
and
daa
imul
push
adc
inc
ret
cmpsl
fpatan
scas
xor
lods
cmp
out
loopne
sti
sahf
bound
push
pop
mov
add
arpl
mov
pop
mov
mov
sbb
in
inc
jbe
ret
cwtl
jo
mov
ja
jecxz
jns
dec
in
aaa
and
dec
sahf
cmp
fwait
pop
arpl
and
scas
in
jne
jno
sub
mov
jb
xor
mov
mov
lock
cltd
cmpsl
and
lcall
xor
loop
leave
add
jno
jnp
dec
cmp
cli
mov
xchg
dec
les
jge
xor
scas
test
rorl
or
sbb
cld
clc
xor
push
sti
pop
and
sbb
aam
xchg
xor
push
xchg
repnz
leave
inc
subl
setb
mov
aaa
pushf
mov
dec
mov
popa
cmp
ret
clc
das
int
cmp
cwtl
nop
cmc
pop
fs
mov
mov
sbb
lcall
inc
xchg
das
mov
sub
mov
ret
push
push
pop
jp
xor
pop
outsl
jecxz
ja,pt
sbb
dec
lahf
mov
dec
and
mov
dec
mov
mov
xchg
xor
pop
sub
xchg
cmpsb
dec
in
mov
xchg
sub
jl
test
mov
ret
adc
cmp
inc
xchg
js
and
xor
adc
insl
cltd
subl
rclb
cmp
jne
ret
pop
lret
xchg
lea
int3
dec
enter
leave
prefetch
xchg
push
pop
sub
pop
pop
lahf
pop
pusha
adcl
aaa
mov
push
and
jb
in
dec
adc
lahf
or
xlat
push
fldl2t
dec
pop
clc
pop
mov
repnz
lock
pop
cmp
jb
push
push
jnp
or
fsubrl
out
mov
add
mov
sub
mov
sar
xchg
sbb
mov
mov
xchg
movsl
or
jno
sub
outsl
insl
aad
outsb
nop
lods
xor
clc
sub
daa
or
mov
lods
aam
in
lcall
pushl
test
mov
push
aad
adc
push
scas
cmp
into
cmp
iret
enter
push
jns
dec
push
aas
mov
adc
sub
cmpsl
fmul
pop
call
loope
lock
pusha
in
push
push
aam
clc
nop
mov
mov
cmpsl
pusha
xorl
xor
inc
sbb
in
pop
jl
add
ja
pusha
scas
int3
aam
shll
jg
inc
call
and
jmp
cwtl
enter
dec
test
xor
or
fistl
xchg
out
stc
mov
fidivrl
xor
dec
in
dec
pop
lock
icebp
push
mov
pop
sub
sub
lods
push
incl
jecxz
sbb
jle
pusha
mov
outsl
pop
adc
jmp
movsl
sahf
mov
imul
call
es
push
sahf
sbbl
mov
mov
enter
pushf
sub
imul
imul
dec
cmp
cmp
pop
arpl
outsb
shll
or
fstpl
jae
push
into
je
push
and
shll
mov
or
arpl
aad
call
mov
push
mov
nop
ja
dec
sub
dec
or
push
xchg
imul
cmc
enter
pusha
mov
add
xchg
push
fldlg2
inc
mov
into
dec
dec
mov
jl
movsb
inc
out
jae
xor
lret
xor
adc
loope
cld
or
xor
adc
add
outsb
pop
fstl
icebp
jg
mov
xor
push
sub
dec
inc
stos
push
popa
dec
xchg
shrb
loopne
out
pop
ret
je
lock
sbb
scas
sbb
out
fcomp
fs
fidivrs
pushf
int
jae
adc
bound
add
leave
sub
dec
lahf
pop
sub
push
mov
sub
xchg
jae
adc
xor
sbb
inc
stos
mov
sub
inc
or
das
lock
push
or
adc
add
lods
rolb
ret
mov
push
add
adc
mov
mov
test
mov
xchg
subl
jecxz
xlat
in
mov
cmp
sub
outsb
inc
fidivl
cmp
pop
jb
push
ljmp
sbb
jecxz
adc
fwait
dec
bound
test
inc
jae
scas
and
mov
fbld
push
push
hlt
dec
out
repnz
in
shlb
jg
and
mov
dec
fisttps
stos
bound
aam
xchg
adc
lret
cmpsl
ret
cmp
test
push
aam
cs
inc
push
xor
pop
sbbb
fdivl
mov
pop
mov
rorb
push
in
loope
iret
mov
je
jmp
cltd
out
ljmp
dec
or
mov
lret
out
add
xor
std
cltd
jmp
out
sbb
jecxz
movsl
add
mov
subl
rorb
pop
stc
push
xchg
mov
adc
push
fwait
sbb
jne
dec
jle
adc
pop
popf
adc
sahf
jg
stos
lds
loope
mov
stc
and
pushl
or
daa
arpl
insb
into
xor
inc
xchg
dec
and
push
xor
fisttpl
dec
push
test
outsl
push
inc
ljmp
inc
sub
fidivl
push
mov
int3
mov
shlb
mov
gs
push
addb
cmp
sti
xor
loop
shrb
jle
push
enter
push
sub
mov
dec
cmpsb
cmc
movsl
xchg
pop
dec
es
cmpsb
xchg
xchg
dec
push
pop
mov
pop
rolb
adc
cli
insb
jmp
xor
scas
mov
fwait
sub
ljmp
xor
jmp
rcll
scas
das
in
sti
sbb
imul
pop
mov
subl
or
stos
sub
std
outsl
sbb
push
js
aad
loopne
out
adc
cmp
adc
add
xor
inc
jo
push
xchg
mov
xchg
je
jne
mov
insl
call
loopne
adc
mov
mov
mov
test
lods
jp
dec
aad
jg
addr16
jmpw
push
repz
xor
inc
roll
scas
push
outsl
cmp
mov
sahf
divb
pop
add
inc
sbb
fidivrl
dec
dec
cwtl
lea
pop
lods
pushf
push
adc
out
nop
sub
jmp
inc
popf
loop
loop
in
ds
stos
mov
outsl
lcall
insl
loope
icebp
repnz
cli
into
xchg
outsw
cli
cmp
cmp
cmp
pop
adc
or
movsl
pop
mov
sub
insl
shrl
roll
lret
dec
mov
pop
add
push
mov
std
mov
mov
lods
mov
fbstp
iret
pushl
xchg
push
in
push
xchg
xchg
xchg
dec
sbbb
dec
sbb
fstpl
je
xchg
arpl
scas
mov
sbb
cld
hlt
jecxz
adc
xor
and
mov
and
jp
xlat
or
movsb
test
imulb
or
push
dec
psubd
outsl
inc
mov
mov
fstp
dec
xchg
and
sub
xchg
rcrb
inc
stos
xlat
pop
aam
add
xchg
addr16
fwait
xchg
inc
int
es
movb
movsl
add
xchg
outsb
lea
fwait
pusha
shrb
pop
adc
jmp
ljmp
cli
jmp
mov
cld
push
dec
cwtl
jmp
push
mov
cmp
push
in
inc
stc
fisubrl
dec
sbb
jecxz
inc
nop
jmp
sub
test
push
call
aam
mov
push
int3
pop
mov
push
out
outsb
adc
and
mov
sub
insl
mov
lret
dec
jo
xchg
andl
cli
iret
and
mov
xchg
into
sbb
mov
sbb
pop
cmpsl
je
std
inc
and
jge
imul
ret
stos
cs
aaa
leave
mov
xchg
cltd
stc
fisubs
call
imul
add
jnp
prefetch
or
sbb
jl
lea
mov
add
mov
mov
jmp
ret
jbe
aas
and
fdivrl
jb
sti
pop
int3
data16
cmp
dec
and
push
mov
cmpsl
xchg
hlt
lea
popf
pop
or
cmp
sbb
jno
repnz
fists
fcmovbe
sahf
out
in
mov
sub
stos
jns,pt
lods
mov
les
xchg
pop
inc
ds
int
mov
ss
mov
xor
add
sbb
inc
jl
mov
ret
inc
mov
adc
jl
adc
xchg
fnstcw
xlat
mov
fstl
popf
in
add
mov
ljmp
xchg
pop
pop
jns
out
mov
jnp
or
push
and
rolb
hlt
arpl
dec
hlt
mov
aad
xor
fnstsw
or
push
jb
pop
mov
adc
fcompl
call
test
test
lea
outsb
iret
jns
pop
int3
loopne
fistl
movsb
adc
pop
in
sub
cmp
add
movsl
sbb
mov
xor
mov
pop
int3
jl
rcpps
pop
push
cmp
jne
inc
xchg
pop
cmpsl
sbb
or
in
xchg
push
jae
xchg
pop
pop
hlt
loopne
xor
movsl
setnp
mov
in
mov
jmp
add
aas
push
jp
imulb
repnz
sbbb
insl
mov
add
outsb
ljmp
sub
xor
subps
aad
les
add
bound
push
repz
pop
inc
push
adc
ficomps
bound
into
mov
adc
scas
sbb
mov
xchg
clc
pop
mov
lcall
jmp
popf
aaa
pusha
pop
fs
sbb
ret
dec
es
cmp
clc
mov
xor
sbb
ds
sarl
xor
jecxz
push
repz
aas
and
lret
adc
jno
xchg
scas
inc
or
add
and
mov
pushf
mov
into
ds
call
jno
aam
mov
popf
test
fisttpl
cmpsl
dec
ljmp
add
inc
lds
push
sub
shll
repnz
cmp
jb
sahf
sahf
jnp
push
sub
dec
mov
lahf
mov
adc
ljmp
ja
cmpsb
mov
xchg
ret
in
rcl
mov
or
jo
movsl
add
mov
ljmp
lcall
mov
mov
sub
loop
fstpl
sbb
mov
rcl
test
sbb
or
xchg
out
repz
push
fidivl
shll
mov
icebp
stos
adc
push
push
adc
hlt
into
pushf
repnz
pop
xor
sub
sub
imul
cmpsb
mov
jns
mov
out
mov
push
dec
jp
dec
into
rcll
rsm
cmp
sbb
jne
pop
mov
in
sbb
mov
mov
in
mov
out
push
push
data16
popa
jo
int3
gs
inc
adc
dec
or
cmp
xor
push
scas
push
mov
cmp
cmp
cmp
fmuls
mov
fidivl
pusha
sbb
addb
rcll
repnz
adc
out
jns
enter
cli
xrelease
fildll
dec
incb
sub
mov
jl
cmpsb
stc
xchg
dec
push
into
iret
mov
out
and
push
leavew
xchg
sub
jnp
int
xchg
xor
mov
je
xorb
ficompl
ret
nop
fsubr
incb
sbb
ljmp
xchg
in
xchg
inc
lahf
mov
dec
inc
or
lcall
rcrb
mov
lock
push
jo
adc
xchg
sub
and
mov
pop
pushf
mov
xor
lock
or
bound
inc
push
mov
xchg
arpl
xlat
daa
adc
or
loop
jecxz
fisttpll
or
iret
and
test
ds
mov
pop
or
cli
sub
inc
push
and
lea
jmp
mov
mov
sahf
xchg
mov
xchg
lods
and
xor
popa
outsl
fadds
xor
movsb
cmp
push
or
movl
pop
subl
xlat
jl
ds
adc
arpl
imul
jp
inc
out
or
es
rcrb
adc
xorl
jge
mov
or
pop
jge
or
fmuls
cli
jecxz
mov
jecxz
cmp
mov
insb
xchg
sbb
stc
adc
sbb
aaa
xchg
stc
push
xor
mov
mov
popa
mov
je
xchg
mov
dec
sarb
mov
inc
sbb
sahf
scas
test
fucomip
or
jge
jp
outsb
mov
call
push
sbb
fneni(8087
xchg
sub
bound
push
xor
jg
push
adc
mov
push
popa
mov
add
push
sub
daa
sub
push
push
out
fs
addr16
push
mov
and
inc
stos
jne
fwait
addr16
pop
push
and
pop
mov
xchg
adc
pusha
inc
stos
mov
sti
push
xchg
orb
sbb
xorb
into
xchg
outsb
clc
jne
xor
mov
xchg
imul
dec
sbb
and
pop
push
std
lcall
xchg
mov
pop
test
or
fs
lcall
loopne
adcl
mov
mov
decl
mov
mov
scas
js
sti
mov
les
loop
into
dec
fs
cs
shll
jb
adcb
jge
mov
mov
mov
shlb
notb
mov
push
jge
cmp
jnp
adc
vmaxsd
imulb
mov
pop
jle
sbb
popf
ret
ficoml
mov
dec
sub
sub
push
cmpsl
adc
clc
imul
ss
in
test
popa
divl
mov
mov
insb
or
xor
xor
cmp
xor
in
push
mov
lea
fidivrl
dec
and
cmp
xchg
pop
xchg
mov
clc
in
out
dec
push
adc
scas
imul
push
mov
in
sub
out
mov
sub
adc
imul
jae
sbb
add
pop
sub
push
imull
scas
push
lea
jns
or
xchg
or
popa
sbb
adc
daa
fs
leave
adc
push
cmpsb
rcll
fistl
imul
push
sti
mov
sub
adc
inc
cmp
lods
sub
nop
popa
mov
loopne
cmpsl
jge
cmp
mov
or
popa
gs
out
icebp
xor
fldcw
adc
adc
lock
inc
mov
pop
add
and
jmp
pop
or
jmp
mov
jmp
pusha
xchg
jo
xchg
mov
stc
or
outsb
mov
cmpsb
jo
fcomps
mov
push
cli
and
movsl
cmpsb
mov
cmpsb
and
ds
cmp
or
loop
cmpsl
sti
add
incb
xchg
pusha
cmpsb
test
lret
dec
pushf
mov
in
mov
fnstsw
das
inc
stc
jne
outsb
push
lret
aas
mov
sbb
std
hlt
cmp
sbb
test
pop
test
stc
or
sbb
push
push
inc
jbe
cmp
fcoml
mov
push
icebp
xor
mov
or
dec
mov
adc
jae
nop
out
das
das
testb
or
and
dec
or
gs
cmc
out
pop
dec
ss
mov
test
and
outsl
imul
add
arpl
fs
cmp
mov
dec
mov
add
adc
stos
and
and
mov
ret
inc
popa
mov
rolb
in
jo
adc
adcl
pop
push
idiv
pop
orl
addr16
loopne
and
add
mov
ds
dec
cld
mov
xor
and
push
mov
mov
ss
pop
out
scas
jnp
bound
insl
push
rorl
cli
lods
jmp
cltd
ja
iret
cmp
scas
pop
mov
out
fldl
data16
push
call
int
test
test
bound
hlt
push
sub
loopne
mov
cmp
test
and
inc
or
sti
jl
mov
sub
inc
in
push
adc
adc
mov
adc
inc
fldt
test
movsl
adcb
inc
fildl
ds
push
push
insl
or
xor
adc
bnd
push
adcb
push
sti
mov
popa
movsl
inc
mov
push
sub
sbb
cmp
cmc
dec
movsb
aad
out
imul
and
outsl
xor
inc
mov
ljmp
dec
dec
and
es
es
movsl
xchg
addl
sar
lods
sub
scas
push
dec
imulb
dec
fadd
pop
adcl
push
jnp
mov
xor
aad
sub
or
test
sahf
fdivl
dec
std
into
adc
push
scas
push
sub
push
cltd
adc
jle
xchg
dec
push
mov
stc
jno
pusha
fldt
icebp
leave
inc
ss
enter
jmp
add
pop
sbb
dec
mov
adc
leave
mov
add
imul
and
out
mov
movsl
adc
lahf
dec
rclb
xchg
imul
adc
test
mov
jns
push
xchg
push
and
xor
inc
out
js
mov
imul
lea
xlat
mov
mov
cmp
loope
loopne,pt
rcrl
fs
lret
or
jbe
sbb
repnz
addr16
push
sub
das
cltd
pushf
mov
out
rclb
imul
xchg
leave
inc
pop
and
loopne
mov
hlt
or
sti
cld
cmp
cmp
aad
sbb
mov
in
stos
mov
fcmovnu
ss
data16
and
cmpsl
dec
je
inc
mov
loop
adc
pop
inc
sbbb
push
adc
in
xor
fwait
mov
ss
mov
mov
rcll
sbbb
subb
bound
cs
lahf
push
adc
test
ss
loopne
inc
sbb
lret
repnz
fisubs
xor
hlt
scas
out
adc
dec
fsubl
and
xchg
je
and
mov
xchg
jae
icebp
push
cmpsb
insb
fistps
imull
lds
addl
test
fnstenv
and
repnz
add
hlt
aaa
scas
dec
cltd
pop
pusha
jle
sahf
sbb
out
mov
pop
mov
call
sar
icebp
cmpsb
loope
clc
add
lret
xor
push
pushf
fimuls
dec
lock
cmp
push
in
dec
mov
sbb
lret
cmp
xchg
pop
cmpsl
aam
jmp
xor
dec
stc
inc
iret
fisttpl
rdpmc
imul
xor
jbe
pop
nop
jbe
jne
jno
popf
out
and
in
inc
movsl
xchg
sbb
ret
inc
pop
int
xor
nop
push
xchg
jb
inc
or
push
lret
push
mov
or
add
stc
and
add
orl
stc
gs
imul
mov
push
jmp
lea
mov
pop
sarb
rorb
xor
movl
es
and
xchg
daa
iret
fnstcw
inc
repnz
mov
int3
int
movsb
lods
adc
sbb
push
frstor
or
inc
insb
xchg
dec
xchg
pop
pop
orl
push
dec
sub
xor
adc
aas
adc
inc
mov
call
push
dec
fmuls
call
and
jmp
pop
jmp
fidivrs
dec
xchg
xchg
dec
arpl
cmp
add
lret
sahf
inc
cmp
adc
arpl
xor
fidivrl
push
jns
fs
in
mov
aad
fimuls
popf
int
leave
shr
gs
xchg
out
outsl
mov
stos
fadd
mov
dec
insb
jns
push
testb
dec
lcall
mov
test
inc
cmp
lods
mov
in
and
pop
mov
xchg
nop
jae
push
jo
or
jecxz
push
nop
xlat
add
mov
mov
inc
xchg
out
cld
scas
mov
mov
add
xchg
mov
jl
xchg
inc
inc
into
jl
or
aaa
mov
cmp
sbb
clc
mov
shll
mov
scas
dec
mov
adc
loope
pop
sbb
xor
aaa
dec
dec
xlat
pop
aam
push
in
and
jnp
pop
in
fisttps
movl
cltd
adc
adc
pop
adc
jl
adc
ret
add
pop
ljmp
or
aas
lods
jnp
adc
pop
in
insb
jae
dec
xor
dec
ja
imul
jb
subl
mov
pop
lret
or
andb
pusha
je
pop
and
mov
and
dec
ret
in
xor
addr16
stos
andl
cmp
fbld
cltd
mov
cmc
sti
push
ffree
mov
xor
subl
cmp
jae
lock
in
mov
xor
pop
dec
mov
scas
jmp
repnz
stc
ds
js
jbe
sbbl
or
jne
cmp
adc
pop
pop
and
sbb
insb
mov
mov
xor
pop
test
add
lods
cmp
icebp
xchg
lods
insb
scas
cmp
cmp
das
mov
or
sub
pushf
cmc
jb
jle
cmp
pop
adc
clc
mov
popf
add
push
jl
push
hlt
push
sahf
in
inc
cli
cmc
in
xchg
movb
lea
adc
dec
jmp
pop
or
inc
adc
inc
cmpsb
or
adc
fidivl
test
subl
das
cmp
adcl
es
rol
inc
add
xchg
adc
pop
mov
stc
push
aaa
call
cmpsb
sbb
out
ss
adc
ss
push
testb
enter
test
sbb
scas
jo
sbb
insb
jge
in
push
xchg
shr
repz
aam
mov
xlat
nop
int3
dec
xor
or
cs
xor
xlat
mov
ds
cmc
add
mov
pop
add
mov
push
pop
adc
scas
xchg
jns
pop
xchg
adc
aam
bound
jge
jp
push
mov
or
dec
or
jnp
daa
popa
add
sbb
in
jb
cmc
jno
lock
xor
jle
xchg
outsl
pop
iret
shl
loope
xor
outsl
push
mov
push
sub
sbb
cmp
outsl
jbe
push
rol
movsb
sub
call
ja
data16
shl
jle
dec
pusha
jnp
pop
stc
jecxz
outsl
adc
pop
inc
push
pop
sbb
pop
adc
sbb
pop
and
xor
sub
pushf
cmp
test
enter
hlt
jge
cld
icebp
dec
gs
push
aaa
lea
popa
pop
mov
ja
dec
sub
push
push
out
pop
pop
or
push
push
mov
cmp
nop
aad
fists
sub
cmp
add
push
jge
loope
xchg
lods
push
xchg
jmp
sub
ja
lcall
hlt
ret
jmp
pop
cwtl
addr16
and
ljmp
sbb
mov
lret
imul
jae
inc
or
push
dec
aam
dec
and
sbb
sbb
push
rcl
sub
pcmpeqw
push
ret
adc
in
push
outsb
fnstsw
push
iret
xchg
xchg
sub
add
rcll
lock
leave
das
sbb
jl
loopne
dec
cmc
cmp
adc
jle
iret
inc
in
jg
mov
mov
pushf
cmp
xchg
lock
mov
dec
sub
imul
xor
sub
push
and
iret
xorb
jle
ficomps
push
inc
sbb
cs
sub
fdivrs
in
into
addl
mov
nop
into
in
mov
adc
dec
loop
mov
and
aam
jg
jl
int3
and
jg
ds
jg
cmc
loope
sti
sbb
sti
es
add
xchg
push
fucomi
sarb
push
push
inc
cmc
or
jnp
xchg
and
mov
pop
hlt
pop
jno
lret
and
mov
cmp
sub
orb
jb
ja
out
es
mov
ret
jmp
adc
jl
cld
fs
jecxz
xchg
ljmp
imull
jno
mov
add
mov
mov
mov
repnz
gs
lods
popa
popa
pusha
in
and
mov
lds
inc
outsl
sti
mov
inc
jns
xchg
add
add
add
sub
jle
xor
ja
lods
sub
mov
mov
cmp
mov
cvtpi2ps
lea
xor
shrb
aad
out
jno
dec
lock
in
adc
stc
lahf
shlb
fmull
loope
jecxz
les
pop
sbb
cltd
lds
sub
cmp
lods
cld
push
mov
mov
dec
cmp
and
ss
sbb
push
dec
sub
sbb
fcompl
mov
lods
adc
mov
dec
add
sbb
adc
lahf
add
xorl
int
or
int
mov
or
shr
xchg
add
sahf
dec
add
out
xchg
hlt
xchg
adc
sbb
inc
out
sbb
sbb
mov
mov
sbb
sbb
dec
jl
add
and
add
jbe
iret
push
les
jo
lock
sti
cmp
cmc
pop
mov
jae
stos
pusha
mov
xchg
cmp
je
mov
negb
pop
stc
pop
add
inc
iretw
or
xchg
dec
xchg
xchg
lods
icebp
push
rclb
lock
inc
and
jg
cmp
std
inc
roll
mov
lret
stos
das
lahf
repz
push
imul
stos
cs
ret
add
ret
outsl
xlat
pop
lret
lret
mov
xor
shrb
add
int3
push
fidivrl
sub
xor
lock
xor
ret
cvtdq2ps
imul
jne
sti
sarl
push
xor
repnz
insb
shl
xchg
push
xor
lods
sbb
lock
pop
stc
mov
mov
push
pop
sahf
inc
push
and
sti
xchg
push
ret
xlat
lret
loopne
dec
mov
into
int3
mov
dec
adc
js
sub
jle
shrl
mov
add
sbb
jne
loopne
sub
jp
out
loopne
or
push
cmp
xchg
addr16
mov
sbb
add
xor
push
shlb
mov
mov
mov
push
dec
cmpsl
inc
out
adc
mov
push
into
mov
push
inc
inc
das
mov
aas
test
rcrl
push
pusha
pop
push
sbb
lds
cmpsl
sarb
loopne
fs
push
fnstsw
je
gs
adcb
mov
jns
shrb
mov
jne
adc
jb
sbb
shll
test
mov
xor
sub
lahf
movsb
dec
mov
adc
xor
sbb
popl
mov
or
fnstsw
sbb
push
adc
mov
fsts
or
rorb
pop
mov
jmp
dec
push
in
ret
inc
dec
sub
test
mov
and
push
out
jg
fsubl
les
push
sbb
fsubrs
jbe
or
pop
jecxz
xchg
inc
jbe
cmp
dec
jmp
pop
sub
repz
ficoms
pop
fisttpl
jae
inc
int3
xor
sub
fsubs
xchg
sub
sub
and
dec
nop
gs
jecxz
dec
in
add
mov
and
dec
enter
or
cld
stos
mov
cmc
aas
push
xchg
jae
push
jb
jb
sbb
cmp
lock
pop
jmp
out
xchg
icebp
mov
mulps
dec
jp
stos
sub
and
in
jno
cmp
orb
fs
adc
andl
mov
and
mov
adc
jecxz
rcl
xchg
adc
add
mov
xor
mov
xchg
mov
mov
cld
bound
cmc
fidivrl
cmp
inc
xchg
cwtl
mov
mov
add
mov
sub
xchg
std
cmp
test
mov
mov
and
into
flds
mov
mov
cmp
mov
or
hlt
imul
push
lcall
jle
arpl
inc
adc
cmpb
cmp
pop
pop
dec
rclb
cwtl
lock
aaa
jne
mov
popa
loop
or
or
insb
mov
jo
cwtl
sub
cltd
pop
aaa
fxch
xchg
dec
enter
rcrl
nop
inc
inc
aad
push
notb
cltd
mov
inc
mov
pop
fidivl
add
insb
adc
push
stos
fmull
mov
cld
or
repnz
cwtl
dec
xchg
jbe
sbb
jp
movlhps
mov
add
aad
or
mov
or
xchg
jge
or
jb
out
fildl
xor
and
frstor
sbb
inc
pop
outsb
arpl
std
push
jp
inc
aas
jno
mov
or
cwtl
mov
jo
add
mov
adc
notl
clc
push
jge
ds
js
add
pop
inc
lret
mov
sub
adc
mov
adc
add
cmp
dec
cmpsl
aad
add
sbb
aaa
xor
scas
dec
rol
cmp
mov
rcl
btc
cmp
data16
leave
push
push
test
lds
mov
mov
jge
push
mov
add
das
xor
cmc
das
or
mov
out
xchg
out
cmp
mov
cld
repnz
dec
xchg
mulps
cmp
sahf
mov
adc
lret
call
int3
mov
bound
pushf
sub
push
iret
push
push
push
and
xchg
mov
pop
cmp
pop
xchg
jmp
dec
fisttps
jo
scas
unpcklps
mov
fnstenv
and
push
das
fwait
mov
dec
jb
cmp
cltd
jecxz
jle
arpl
cltd
add
stos
movsb
adc
adc
xor
iret
push
inc
ja
mov
incl
jo
test
xchg
inc
pusha
jle
inc
adc
adc
pop
sub
xchg
xchg
inc
push
cltd
das
inc
add
repz
mov
jo
outsb
pop
mov
pop
inc
nop
jmp
adc
bound
notl
cwtl
shrb
addr16
movsl
xchg
and
popf
and
cmc
sbb
jl
test
and
xchg
mov
popa
cmp
ljmp
jne
cli
call
mov
adc
pusha
mov
dec
mov
call
jge
out
cli
mov
mov
push
push
dec
icebp
inc
pushf
xor
test
negl
std
jne
ljmp
sarl
je
sbb
fwait
cmp
push
in
loopne
mov
ret
fmul
push
cltd
pop
int
orl
js
cmpsl
and
inc
inc
nop
dec
movl
or
out
or
jae
cwtl
inc
das
mov
stos
push
mov
pop
jbe
jge
mov
adc
inc
cmpb
repz
xor
or
into
cmp
xor
shlb
jmp
sub
xchg
adc
sbb
cld
and
into
mov
stos
out
andl
sub
xor
imul
pop
test
test
xchg
jmp
rcrl
arpl
rclb
icebp
incl
sahf
es
jmp
int
and
xchg
inc
mov
add
orb
sub
es
mov
add
mov
ljmp
dec
outsb
int
cmp
fnstsw
or
cwtl
clc
sbb
lods
inc
add
jae
sub
sub
aaa
cmp
or
cmp
push
movsl
cmpsb
sub
shlb
xchg
pusha
mov
lret
popa
inc
or
adc
mov
or
dec
adc
cmpsb
loope
xchg
inc
je
pop
xchg
dec
xchg
loope
sbb
mov
lcall
andb
insb
call
loopne
mov
sarb
sbb
loop
mov
lea
mov
adc
cmp
cltd
jle
cmpsl
xor
dec
pop
out
sbb
test
push
xor
icebp
add
push
pop
repz
addr16
loop
pop
xor
dec
pop
or
jae
push
mov
or
inc
mov
jge
fmuls
mov
ss
pop
je
ret
iret
bound
xchg
mov
into
test
jmp
imul
int3
rcrl
push
add
mov
xchg
pushf
int
hlt
add
add
cmc
fnsave
mov
adc
stos
aaa
lds
fcompl
adc
out
sub
clc
xrelease
and
mov
pusha
inc
pop
lods
xchg
add
dec
neg
cli
pop
aaa
arpl
sahf
cmp
jge
in
jnp
scas
mov
aas
fistpl
or
inc
enter
and
mov
mov
jecxz
and
ret
dec
mov
push
insl
lock
mov
mov
push
mov
in
das
dec
insb
aam
sub
adc
aam
out
cmp
mov
pop
push
lods
sbb
insl
icebp
add
jb
mov
adcb
jp
mov
mov
lds
shrb
clc
js
orb
cli
out
and
ss
xchg
movsl
xor
sbb
mov
int
mov
xchg
mov
js
fwait
dec
test
and
lock
push
and
in
mov
popa
lds
nop
mov
aad
jp
jp
pop
adc
or
int3
imul
adc
jg
jbe
mov
mov
dec
lret
int3
mov
fildl
jns
push
out
ss
inc
add
in
jo
jo
xor
stc
ljmp
test
pop
repz
scas
or
xchg
or
mov
add
or
sbb
xchg
popf
push
hlt
pusha
scas
add
jecxz
xchg
aam
push
cli
mov
xchg
jp
addb
xchg
out
pop
mov
stos
adc
mov
mov
mov
out
test
pop
loop
cmp
imul
popa
sub
cld
sbb
sbb
sub
outsb
pushf
adc
fsubr
ficoms
mov
sub
dec
shll
add
adc
jp
adc
shlb
xchg
jnp
cwtl
sbb
mov
inc
pop
hlt
inc
push
or
imul
add
enter
and
pop
push
test
push
cmc
pop
inc
xor
nop
or
es
out
adc
adc
fwait
add
sbb
and
jb
aaa
mov
iret
push
dec
pop
cwtl
or
jbe
fwait
bound
dec
movsl
xor
js
adc
rolb
dec
push
ja
xor
sbb
pop
sbb
dec
adc
cmovne
idivb
js
lock
addr16
out
xchg
mov
leave
dec
dec
mov
sub
outsl
les
cltd
ss
fsubs
hlt
sbb
and
iret
popl
imul
add
jp
neg
cld
dec
mov
and
addr16
push
add
mov
xchg
stos
pop
lahf
inc
push
ds
stos
repz
bound
cmpsb
int
into
jecxz
pop
dec
adc
sub
mov
push
sbb
dec
js
jmp
cmc
out
pop
dec
mov
icebp
or
out
fnstenv
mov
les
jmp
adc
in
je
mov
dec
insb
dec
xlat
add
push
rclb
fsubs
jl
push
and
loopne
fildl
test
dec
xor
add
push
adc
inc
jnp
bound
push
nop
decl
pushf
or
dec
push
sub
jecxz
lods
mov
xchg
jo
xchg
movsb
stos
cli
mov
idivb
adc
sbb
xchg
pop
mov
in
cmp
mov
ret
lods
sti
adc
pop
adc
mov
dec
xlat
int
and
cmp
add
pushf
decb
mov
cld
jle
xor
out
rolb
idivb
push
aam
cmc
loop
sarb
cli
into
outsb
aas
fmull
pop
add
pop
pop
lahf
add
or
push
push
ss
inc
shlb
popa
and
mov
stos
lods
ljmp
cmp
scas
xlat
jge
sbb
negl
movsl
dec
in
sarl
out
or
sub
pop
fisttpl
xchg
pop
cmp
jmp
push
add
mov
xchg
ret
mov
imull
out
ljmp
insl
push
xchg
lods
popf
mov
sti
pop
dec
ficompl
push
pop
jge
les
push
aam
in
jb
sub
sub
add
sub
pop
testl
icebp
and
rcl
mov
cmp
pop
faddp
and
test
cmp
scas
out
repnz
xchg
stos
fwait
subb
jo
fadd
addl
aam
dec
pop
lods
mov
rol
mov
iret
pop
dec
cmp
cs
das
lea
push
les
loop
stos
push
mov
push
lds
stos
cwtl
flds
inc
sub
jno
pop
and
pop
pop
mov
pushf
jge
mov
enter
cmp
dec
pop
cs
mov
lret
frstor
movsb
adc
and
insb
icebp
ret
push
mov
push
out
dec
xor
add
push
sbb
test
xchg
lods
push
ret
push
in
cmpsb
cmp
xchg
mov
lret
shlb
int
lcall
insb
or
and
mov
push
mov
je
xor
pop
repnz
sbb
movsb
rclb
jl
xor
lock
outsl
xchg
fs
jbe
movsb
jp
rcl
dec
ljmp
jae
aad
jbe
and
add
cltd
inc
mov
outsb
sbb
lcall
in
mov
dec
daa
dec
jbe
inc
mov
test
lea
sar
xchg
movsl
xor
shrl
jbe
inc
fbstp
xchg
mov
test
or
ljmp
mov
xchg
fwait
inc
sbb
pop
in
push
mov
push
add
jne
mov
adc
inc
es
fsts
pop
test
imull
popa
push
cmp
inc
inc
and
sub
xchg
insl
lahf
xlat
add
dec
repnz
jg
mov
mov
pusha
adc
pop
xchg
in
nop
in
in
std
pushf
mov
xor
add
loopne
int
sub
notl
xor
stos
xchg
jns
mov
loopne
cmp
inc
and
ficoml
pop
cmpsl
aad
jbe
addr16
ja
cli
hlt
sub
adc
mov
lcall
cmpb
insl
adc
and
xchg
push
add
pop
popa
daa
rcrl
ds
loope
pop
push
cwtl
popf
jnp
aaa
mov
cli
clc
sbb
jae
push
popa
dec
mov
sub
pop
mov
push
jle
and
mov
inc
mov
loope
xlat
push
mov
add
inc
xchg
fwait
negb
movsl
jp
pop
negl
je
and
add
jno
arpl
or
shlb
lods
or
gs
js
pop
dec
mov
mov
mov
sub
mov
sbb
sbb
data16
movsb
shrl
out
mov
xchg
mov
pop
icebp
shl
scas
jnp
outsl
into
fidivl
outsb
mov
lds
jns
ja
mov
shrl
cltd
rcrl
jmp
test
dec
inc
rolb
dec
popf
adc
lds
or
iret
lea
lock
sbb
sub
fists
pop
lock
sub
push
jmp
xchg
scas
add
scas
test
mov
xchg
sbb
mov
adc
push
push
mov
cmpsl
pushf
mov
mov
push
and
fdivs
add
stos
js
and
jnp
push
mov
adc
roll
xchg
inc
cmp
frstor
pop
and
add
and
push
sub
mov
adc
outsl
leave
hlt
inc
out
shll
mov
push
jnp
mov
aad
inc
pop
mov
mov
rcr
pop
jb
mov
sbb
mov
ja
mov
adc
dec
orl
cmpsb
adc
cmpsb
cs
push
pop
hlt
data16
je
dec
mov
std
mov
pop
repnz
sub
in
jae
sbb
mov
xchg
es
lret
loope
imul
mov
popa
test
ror
cmp
outsb
cmpsl
lahf
mov
out
popa
cmp
xor
dec
mov
hlt
ja
outsb
popa
sub
clc
fsubr
popf
inc
cmp
jbe
dec
mov
jo
pop
daa
cmp
add
or
cs
lcall
popa
loope
cmp
scas
insl
mov
outsl
femms
subb
push
mov
ljmp
cli
movsb
data16
shlb
push
jbe
pop
into
popa
mov
fistl
out
pop
sbbl
inc
insb
jb
and
xchg
jle
push
or
bnd
xchg
mov
cwtl
lahf
test
mov
and
jecxz,pt
dec
adc
inc
sub
adc
nop
add
test
inc
in
cs
pushf
adc
cwtl
adc
test
sbb
cmp
mov
cmp
test
data16
orb
mov
movsb
mov
inc
cmp
jmp
sbb
pop
push
or
mov
inc
int
xor
pop
imul
aas
test
cli
rcl
jne
mov
inc
dec
adc
xor
rorb
push
cmp
iret
push
dec
movsb
sbb
pop
cmp
fcoms
xlat
cmpsb
cmp
jae
push
stos
inc
loopne
sub
mov
aas
mov
push
pop
or
cld
loopne
pop
push
xchg
xchg
dec
mov
push
test
inc
sahf
jmp
mov
subb
std
mov
cmp
cmp
jecxz
pushf
insb
orl
cmp
in
sub
repnz
pusha
cltd
sub
ret
repnz
dec
jmp
sbbb
mov
pop
xchg
or
adc
js
movsl
jg
mov
inc
loope
fimull
pushf
fistps
loop
inc
inc
mov
ljmp
add
adc
aam
cltd
inc
shlb
hlt
mov
sahf
outsb
verr
push
sbb
dec
jo
push
sub
loope
adc
xor
mov
test
sbb
ret
lret
jg
push
cli
fildl
push
push
shlb
pop
and
scas
or
push
repz
mov
ljmp
test
pop
js
xor
out
adcb
or
call
outsb
xor
popf
push
xchg
mov
add
insb
push
sub
pop
jns
mov
push
inc
fadds
and
add
cmp
stos
out
push
push
lret
cmp
test
aas
popa
enter
mov
push
std
and
addr16
mov
add
div
mov
fidivl
mov
xor
cwtl
or
mov
les
jmp
sbbl
adc
lds
cmp
pop
incl
xchg
or
mov
dec
lahf
popf
ljmp
ret
sbb
repnz
fs
pop
jmp
cli
add
icebp
xchg
sub
andl
shrl
aam
daa
xlat
mov
stos
mov
dec
sub
mov
and
cwtl
push
in
fsts
inc
sbb
jnp
out
pusha
stc
inc
dec
popa
orb
jp
cmpsl
stos
lods
sbb
lahf
xor
mov
stc
mov
inc
data16
aas
aas
pop
ud2
sub
sbb
lcall
push
aas
cmpsb
pop
out
ret
push
xor
xchg
mov
mov
iret
andb
push
in
or
jge
mov
push
xor
popa
addr16
mov
int
out
mov
pop
lods
into
inc
mov
out
adc
subb
pop
xchg
xor
xor
int3
jmp
addl
call
xorb
inc
mov
notl
mov
imul
loopne
loop
add
adc
iret
xor
or
pop
push
or
and
inc
jo
idiv
es
dec
adc
insl
inc
adc
xor
enter
jecxz
aaa
dec
mov
jle
ds
dec
out
xor
jl
mov
cmp
jnp,pn
sub
jno
xor
dec
sub
ja
js
in
inc
push
aas
stos
pop
pushf
lock
add
fbld
jae
pushf
shlb
or
adc
cmp
or
push
xchg
test
pop
adc
rcrb
hlt
dec
dec
jno
aam
sbb
mov
ljmp
or
in
sarb
xor
or
loopne
rol
mov
cmp
negl
dec
adc
xor
insl
jnp
mov
lea
dec
push
clc
pop
cltd
lret
ret
loop
jb
push
pop
lods
xor
mov
mov
rorl
popa
loop
add
inc
or
mov
mov
jno
pop
rcrl
test
mov
bnd
mov
pop
pop
scas
or
lret
sti
test
and
and
cwtl
aaa
mov
mov
movsl
hlt
xor
in
xchg
mov
cltd
cmp
adc
fs
int
popf
xchg
inc
mov
push
dec
stos
add
cmp
popa
aas
test
ficoms
mov
pop
fs
sbb
xor
sbb
test
mov
mov
adcb
adc
lds
test
jb
mov
jo
fldt
jnp
lcall
add
xor
dec
jl
std
mov
aad
xor
adc
leave
push
and
call
or
push
inc
out
fnstcw
loope,pt
pop
add
pop
in
and
push
jmp
fcmovb
dec
push
pop
jae
loope
jo
pop
nop
sahf
xor
data16
rcll
mov
shll
stos
rorl
dec
pop
mov
jnp
sub
xchg
lds
fsubr
ljmp
jae
adc
and
in
es
dec
jmp
mov
repnz
sbb
clc
loop
cs
xchg
bound
outsb
das
ds
fimuls
pop
dec
cwtl
dec
or
pop
cmpsl
repz
mov
dec
and
ss
jge
jecxz
jmp
lcall
mov
jg
cmc
movsb
sahf
sub
iret
xor
test
xor
clc
dec
test
add
or
xchg
adc
inc
cmp
jp
push
stc
mov
movsb
sbb
mov
stc
outsb
daa
jo
jne
pop
add
add
loope
mov
test
loopne
icebp
iret
inc
popf
pop
les
add
incl
dec
or
adc
outsl
nop
cli
leave
adc
push
dec
xchg
shrl
add
dec
jno
or
ret
and
add
and
mov
or
sbb
xor
cld
js
pop
sti
bound
and
test
mov
aas
xchg
sbb
cld
adc
leave
inc
xor
aaa
fwait
and
mov
or
and
inc
push
pop
out
mov
es
les
repz
negb
ficoms
adcl
jbe
push
fisubrs
fcom
scas
into
insl
std
mov
jae
jl
fidivrl
jae
jo
sbb
mov
adc
sbb
mov
scas
mov
shrb
and
shlb
jp
out
repz
xchg
and
xchg
mov
sbb
sub
shll
pop
dec
subb
xchg
fisubl
fdivr
jp
aas
sbb
stos
mov
mov
pushf
add
jp
or
dec
xor
loop
in
xchg
nop
test
gs
xchg
andl
jecxz
in
xor
mov
mov
inc
mov
dec
je
push
pusha
idivb
lods
in
adc
outsl
lret
out
pop
dec
fldenv
push
out
or
fidivl
inc
fnstsw
xchg
sub
mov
stos
jl
test
into
aaa
in
aas
jne
jp
or
decl
inc
push
adc
testl
push
cmp
adc
push
adc
out
fwait
rorl
mov
pop
push
loop
fisubrs
into
dec
insb
jle
sub
xlat
fstl
fsubs
add
dec
xchg
loopne
mov
gs
jns
add
mov
outsb
push
nop
dec
aas
mov
mov
add
mov
cwtl
into
enter
hlt
hlt
jl
lret
ljmp
or
cwtl
xor
dec
xchg
ficoml
std
inc
pop
jl
popa
fldenv
mov
and
sti
mov
lods
int3
clc
fdivr
adcb
and
add
outsb
push
repz
dec
push
stc
popa
aam
lret
jp
mov
test
cs
sbb
mov
je
cmp
push
pusha
ds
push
sub
sahf
lods
push
xor
lock
in
pop
aam
mov
pop
sbb
add
jmp
fmuls
jg
mov
hlt
inc
pop
inc
sbb
sub
xchg
mov
add
push
ret
lahf
sub
fidivl
ds
mov
mov
les
fnstcw
push
insl
mov
push
setb
mov
add
xchg
not
xchg
inc
xchg
add
push
fisttpl
repnz
add
pop
fisttpl
mov
lea
pop
movsl
fadds
mov
push
adc
lret
xchg
call
jle
aaa
subl
mov
iret
insb
xchg
sbb
inc
sbb
push
add
inc
adc
popa
or
cmp
movsl
lcall
xchg
cmp
pop
jae
out
dec
cwtl
and
add
arpl
add
fsubr
pop
int
es
popf
inc
repnz
sub
insl
arpl
push
sbb
adc
idiv
iret
fs
mov
outsb
mov
add
outsb
mov
cmp
cld
scas
lock
loopne
dec
xchg
enter
loopne
out
jle
stos
lret
xchg
iret
out
in
add
cmp
into
movsl
sbb
pop
push
jg
sub
fwait
xchg
xor
push
pop
pop
subb
les
xchg
sub
xor
insl
in
push
mov
insl
jbe
cld
addl
xchg
imul
adcw
lcall
inc
data16
pop
out
lods
mov
push
mov
mov
pushf
js
mov
mov
sub
mov
call
inc
movsb
movsl
out
js
pop
pop
xlat
flds
xchg
je
stos
ja
out
shr
imul
arpl
sbb
jecxz
ds
mov
ja
pop
fsubl
ficoml
sbb
popa
mov
jecxz
mov
push
cmp
aad
mov
loopne
inc
fadds
mov
jecxz
jbe
pusha
je
ss
jle
dec
mov
mov
mov
lea
mov
jo
cli
imul
or
std
pusha
inc
inc
jo
cmp
fsubs
out
ss
lods
inc
dec
call
mov
test
aad
mov
pop
pop
inc
icebp
push
lret
lds
mov
movsl
rcl
push
pop
cmp
loop
push
data16
divb
sbb
fdivs
mov
adc
orb
pushf
jg
ljmp
frstor
push
sahf
inc
iret
xor
inc
in
lods
cmp
lods
div
jp
jmp
enter
mov
push
and
gs
insb
cmp
inc
ficomps
rcr
xchg
mov
fmuls
aad
scas
pop
xchg
sti
fdivrs
jmp
push
dec
jmp
push
add
and
nop
adc
push
shl
fwait
nop
jbe
pop
xchg
std
push
xor
fbstp
fmull
pop
ror
stc
pop
nop
jbe
into
enter
dec
test
lds
and
mov
mov
dec
stos
into
pop
lret
in
mov
pop
mov
inc
adc
pusha
clc
hlt
shlb
mov
pop
leave
jb
stc
dec
stc
mov
js
in
sub
mov
cmc
mov
push
mov
repnz
pop
andl
fisubrs
int
lret
push
rclb
movsb
xor
dec
pop
jo
in
jle
pop
pusha
outsl
xor
mov
xchg
aad
test
cmc
pop
incl
jmp
leave
mov
decl
loop
icebp
dec
dec
push
mov
int
fisttpll
repz
les
pop
enter
scas
in
test
jnp
lret
in
inc
mov
adc
mov
pop
push
mov
pop
sub
mov
add
mov
daa
in
dec
lcall
idivl
mov
xor
loop
pop
int
jg
pop
roll
aas
test
xchg
cmp
movsl
xorb
xor
pusha
add
stos
rol
cmp
in
inc
jle
xchg
or
cmpsb
or
lcall
lret
into
test
adc
pushl
add
mov
xchg
and
sbb
in
and
lret
mov
xchg
inc
scas
fidivrs
or
cld
icebp
or
cmp
sahf
push
dec
cs
sbb
loopne
dec
lea
inc
and
pop
xor
cmpsb
push
lods
ss
loope
cmc
jno
mov
xchg
jp
xchg
mov
mov
clc
nop
sahf
xlat
in
std
int
adc
adc
adc
pop
stos
xchg
adc
xchg
xor
inc
daa
xchg
sbb
jge
cmp
and
mov
mov
mov
fsubl
imul
adc
es
fstl
iret
test
es
jg
push
pop
shll
jno
xchg
fbstp
scas
sti
adc
mov
fs
mov
cmc
mov
add
rcll
push
mov
sbb
shlb
out
sbbb
xor
test
cmp
ffree
xchg
xchg
adc
pop
add
sub
loop
xor
or
nop
xchg
enter
cmp
mov
das
fldcw
push
mov
scas
and
jnp
and
aad
xor
pop
sub
jne
xchg
arpl
mov
jge
pop
hlt
mov
jp
aam
gs
add
mov
out
cmc
cli
stc
jns
sub
mov
and
js
sti
jmp
cmp
dec
xchg
push
pop
int
movsb
mov
or
xor
xchg
dec
scas
mov
loop
in
dec
mov
add
fcmovne
outsb
fldl
fistl
es
scas
lock
and
pushf
xorl
out
inc
cltd
pop
ss
push
out
shrb
sbb
xchg
push
or
push
mov
mov
mov
movb
mov
in
cmp
cmpsb
inc
shlb
dec
lods
js
pop
lcall
pop
or
loop
xlat
popa
push
mov
fdivs
xchg
pop
adcl
ret
pop
js
mov
sub
jns
dec
dec
aam
push
add
loop
xor
jp
sub
or
loop
jmp
fwait
sub
and
sbb
mov
dec
jge
and
test
ja
inc
aas
dec
nopl
adc
pop
inc
out
mov
out
jg
daa
pop
push
in
andl
and
in
dec
decl
jnp
cmpsb
pop
out
mov
xchg
mov
pop
xor
lret
jbe
fcmovnbe
jmp
lock
sarb
mov
xchg
fldenv
inc
clc
sbb
idiv
cmp
lea
adc
adc
out
push
jmp
sbb
mov
jmp
lret
movsl
mov
into
mov
sarl
call
xchg
xchg
adc
push
fsubrs
mov
in
cli
adcb
jg
jecxz
pop
cwtl
sahf
mov
jl
rcrb
stos
cltd
xorl
mov
out
mov
push
arpl
dec
rcrl
xchg
push
jne
out
rolb
push
mov
jnp
jne
mov
push
adc
inc
pop
popa
test
iret
bound
aad
and
mov
xchg
cltd
xchg
in
sbb
mov
shll
pop
hlt
add
and
int3
bound
push
or
push
lock
hlt
adc
add
mov
add
inc
xchg
mov
popf
push
jno
mov
sbb
lds
mov
sbb
xor
scas
jo
mov
push
lcall
cmpsl
mov
cmc
adc
jle
cmp
clc
jmp
adc
mov
sbb
ja
xchg
jb
and
gs
divl
and
adc
xchg
clc
movsl
shll
xchg
mov
hlt
pop
jmp
jg
div
push
ljmp
pushf
movsl
sarb
pop
cmc
xchg
out
mov
std
cmp
into
push
fs
scas
lcall
adc
ret
insl
fnstcw
jge
mov
mov
movsb
aaa
cmp
repz
dec
jns
aas
push
xchg
dec
aas
out
js
inc
shll
pop
call
dec
fists
xor
mov
xor
jmp
fnsave
jbe
pop
mov
xor
lods
inc
dec
mov
mov
sbb
popf
int
cmp
jge
xchg
test
mov
xor
test
pop
sub
cmc
rolb
ja
sub
mov
push
mov
addr16
xlat
push
mov
popa
cmp
pop
pop
pop
jne
add
pop
push
imul
fbld
mov
add
and
xchg
addr16
fcmove
outsl
incl
xchg
icebp
adc
sub
clc
popa
loopne
or
and
loop
stos
adc
imul
mov
xor
out
cmp
aam
lahf
mov
sub
leave
in
stos
and
sbb
pop
and
ret
cwtl
cs
das
lea
into
pop
inc
hlt
push
sbb
mov
clc
sbb
mov
ljmp
out
jmp
call
gs
repnz
lods
test
sbb
sar
add
pop
rcrl
scas
pop
imul
mov
scas
fsubs
dec
sub
xchg
add
shlb
je
inc
inc
sahf
orb
fiaddl
pop
je
push
mov
iret
cmp
xchg
mov
int3
lock
imul
push
mov
mov
xchg
inc
insl
or
mov
jge
pop
inc
mov
rcr
push
test
pop
push
sbb
adc
lock
rcrb
adc
mov
mov
fdivrs
ljmp
sbb
cmpsb
dec
test
fistpll
nop
xor
test
xor
dec
cmpsb
dec
mov
les
imul
pop
or
ret
stos
xchg
inc
in
pushf
mov
jg
or
aad
jnp
outsl
pop
sub
roll
jb
sarl
sti
lret
pushf
inc
das
dec
movsl
jne
add
rolb
lcall
xchg
add
fsubs
dec
addr16
jge
jns
test
stc
adc
jmp
psubb
sbb
jecxz
pop
repz
mov
jbe
xchg
xor
and
add
sub
dec
jle
testl
jl
fwait
arpl
popf
or
lret
movsb
lock
inc
and
inc
lds
jne
mov
add
arpl
in
xor
xchg
inc
mov
inc
lret
add
call
lret
mov
daa
in
hlt
xor
inc
jmp
cmp
or
cmpsb
xchg
shlb
mov
push
sbbl
fisttpl
pop
sub
movsl
dec
mov
leave
test
and
xchg
ret
dec
jmp
stc
test
pusha
mov
mov
dec
test
movsl
xor
mov
adc
shrl
adc
pavgw
stc
mov
jl
dec
xchg
or
pop
insb
neg
add
dec
in
daa
dec
xlat
xchg
inc
sbbl
xor
add
fsts
andb
nop
cmp
xor
sub
int
popa
lds
aaa
mov
add
loope
lods
mov
jp
adc
pop
outsb
stos
aad
lods
sbb
cs
test
sahf
jle
fs
pop
ret
mov
push
cwtl
inc
cmpsl
mov
int
mov
lea
mov
stc
cmp
xor
jb
sahf
pop
mov
mov
mov
iret
sbbl
cmp
in
aad
stos
imul
mov
testl
fucom
xchg
xchg
pop
movsl
jno
cmp
mov
jae
jae
fs
ljmp
leave
xor
pop
stc
out
inc
lds
iret
scas
mov
pushf
repnz
div
mov
mov
mov
push
xchg
fdivp
int3
pop
dec
fsub
mov
inc
inc
lret
sub
popa
addr16
mov
add
aam
sbb
push
cs
lcall
sbbb
push
test
sbb
adcb
clc
or
mov
mov
push
push
pop
std
add
xchg
jno
cmp
xlat
inc
mov
sub
dec
out
ret
cmp
pop
jmp
or
into
cmp
inc
loopne
out
sti
cltd
inc
mov
or
fildl
jbe
and
pop
adc
in
sbb
test
in
mov
stos
pusha
sub
pusha
mov
cld
sbb
dec
aad
mov
or
notw
mov
hlt
sbb
jb
ror
aad
xchg
xchg
xor
pop
sub
mov
jno
cmpsl
mov
dec
jg
jmp
sbb
lcall
in
int
movsb
testb
out
inc
mov
jne
lcall
xor
cmp
jo
sub
ja
faddl
cmpsl
jo
pause
outsl
xchg
sub
in
inc
pop
cmp
cmpsb
pop
aas
popa
sub
sahf
sub
fisttpll
call
mov
test
adc
pop
movsl
and
or
lret
xchg
xchg
or
iret
ja
cmovl
sbb
push
xchg
lock
jbe
rcl
shlb
rclb
sbb
mov
jp
jge
or
sahf
add
frstor
into
sub
inc
mov
mov
adc
daa
test
jge
lds
sbb
mov
lret
and
clc
bswap
int3
fistpl
es
xchg
repz
xor
scas
or
jnp
pop
sub
or
into
ret
mov
mov
fnstsw
xchg
pusha
je
cmpsl
icebp
pop
sub
pop
mov
shl
int
push
je
in
imul
lea
xor
push
push
xchg
daa
xchg
stos
fimull
sub
or
cmpsl
push
cwtl
dec
mov
add
mul
subl
outsb
adc
into
lahf
sub
rolb
mov
and
inc
lcall
je
sahf
fadd
movsb
xchg
dec
lahf
push
xor
in
or
xchg
outsb
movsb
fnsave
mov
ficompl
pop
nop
add
and
insl
xlat
loopne
inc
push
aaa
repnz
mov
out
fistpll
nop
cmpsl
rorb
sub
inc
aas
fs
mov
lcall
movsb
dec
mov
ss
fsts
xchg
lcall
mov
jl
xor
inc
sarb
out
cli
push
pop
cmp
xor
xchg
pop
scas
pop
add
sbb
push
pop
cmpsl
push
hlt
mov
mov
clc
lret
mov
mov
int
std
sbb
jecxz
adc
stos
adc
mov
aas
sbb
ret
test
scas
sub
inc
scas
xor
inc
fsubr
push
in
adc
xchg
push
mov
xlat
or
sti
imul
test
or
dec
fimuls
mov
into
push
fistpl
sbb
dec
cmp
mov
dec
in
push
cmp
mov
lods
repz
xor
test
aad
clc
into
pop
inc
push
stc
pop
push
pop
dec
nop
jnp
inc
pop
in
gs
stos
sahf
mov
mov
dec
push
imul
xor
pushf
sub
or
lods
xor
sub
sub
mov
fidivl
lock
add
stos
ss
ljmp
imul
lods
aad
aas
lock
sub
sub
stos
sahf
lds
fnstenv
enter
jae
in
pushf
inc
jo
pop
sti
in
dec
negb
pushf
jno
jns
add
aam
add
std
jbe
mov
paddsw
mov
jns
cltd
call
add
push
sub
test
push
push
fdivs
dec
jg
jmp
jle,pn
shlb
pushf
int3
jne
sbb
push
sbb
sub
sub
decb
je
mov
pop
call
cmpsl
fisubrl
sarb
jne
mov
xchg
ljmp
sahf
push
roll
stos
xchg
inc
in
jnp
fmull
inc
and
scas
pop
sbb
movsl
mov
aas
sbb
mov
sub
adc
jg
inc
into
pop
js
inc
xor
xchg
add
xor
cmpsl
es
xor
ret
jno
push
lret
popa
call
inc
pop
pop
mov
mov
push
push
pushf
mov
leave
adc
dec
jae
or
stos
sbb
enter
push
mov
mov
inc
test
mov
mov
mov
add
cwtl
adc
sub
imul
cmpsb
dec
imul
xchg
inc
out
int
out
imul
test
clc
xchg
fsubrp
ljmp
leave
jp
lods
push
and
fildll
add
sub
adc
pop
scas
jl
lret
ja
xchg
test
cmpsb
mov
dec
sub
push
popf
fcomps
aam
fidivs
jb
fwait
movsb
hlt
mov
inc
xchg
aam
cmp
push
fldcw
push
es
adc
aam
inc
sti
add
jbe
add
pop
cmp
inc
mov
xchg
jle
cwtl
push
sub
test
sbb
sub
cs
mov
cmp
pop
mov
pop
outsl
jecxz
es
jg
in
out
jge
sbb
push
fisubrs
sbbl
lcall
movhps
push
lret
out
adc
add
sbb
lcall
mov
inc
xchg
cmpsl
push
xchg
push
inc
pop
mov
push
iret
pop
test
xchg
cltd
push
arpl
lea
mov
ret
adc
aad
mov
std
or
sub
insl
xchg
sti
sbb
mov
inc
push
sub
xchg
aad
push
push
dec
xor
push
js
es
mov
or
fwait
cmp
shrl
mov
mov
int
incl
call
or
mov
adc
je
jo
or
stc
lret
jecxz
jne
push
pop
sbb
mov
xchg
stc
pusha
mov
dec
and
jb
push
push
call
loop
jmp
cmp
out
fwait
loop
sub
push
push
popf
xor
ja
push
lock
jle
stc
adc
mov
push
fsts
js
ret
xchg
xor
cmpsl
pop
or
mov
mov
movsb
or
ss
scas
jb
loopne
stos
es
ja
cld
imul
cmc
cmc
xor
xchg
sbb
out
xor
fiadds
xor
into
sub
jne
push
cmp
pop
push
mov
test
adcb
cmp
js
adc
xor
mov
cmp
icebp
jle
rclb
xor
or
jns
mov
divb
into
sbb
pop
ret
lods
or
ficompl
push
push
insb
and
unpcklps
jl
push
sbb
cmp
sbb
push
push
mov
aas
rolb
cmpsl
inc
adc
mov
cs
sarl
bswap
leave
push
idivb
push
cmp
jae
mov
sbb
icebp
mov
push
push
xchg
jae
push
div
lock
int3
ds
dec
ss
dec
add
xor
std
add
out
pop
int3
and
xchg
movsb
bound
or
aad
hlt
rcll
filds
jb
add
xlat
mov
sbb
in
and
add
sbb
add
xchg
xchg
jle
cmp
movsb
dec
stos
or
jne
xor
repz
gs
loop
scas
movsb
dec
dec
push
daa
or
jo
addr16
sbb
xchg
bound
sbb
cwtl
ljmp
mov
ljmp
pop
pop
roll
lret
arpl
bound
ja
in
scas
js
jle
mov
jl
les
jo
sub
xchg
push
int3
pop
or
fwait
push
xor
cltd
shrb
inc
insb
fdivrs
into
sbb
mov
lock
sbb
mov
psubsw
dec
mov
cmp
testl
scas
inc
jae
loope
and
pop
mov
rorb
insb
call
add
push
dec
jns
imul
cmc
adc
cmp
push
pop
sbb
jmp
xor
mov
inc
push
push
lods
or
shll
fs
xor
and
ja
add
xor
sub
push
lcall
and
mov
adc
dec
ret
dec
xchg
pop
std
dec
out
mov
sub
fucomi
jb
dec
mov
lock
xlat
mov
mov
aaa
mov
and
mov
outsb
adc
fcmovnu
dec
adc
fwait
or
test
mov
loop
jae
xchg
fstl
sub
pop
repz
mov
mov
je
bound
push
fdivrs
test
and
mov
cwtl
pop
jge
icebp
sbb
in
mov
mov
hlt
adc
fistps
cmpsb
jmp
mov
lea
cmp
or
sbb
loopne
jbe
xchg
mov
and
into
std
gs
lret
push
aaa
adc
xor
pop
and
push
or
ret
add
pop
mov
int
leave
sub
sbb
add
cwtl
adc
mov
dec
or
sub
mov
push
lret
jno
in
iret
jnp
and
pop
pusha
add
jnp
mov
inc
push
aaa
mov
scas
fst
push
mov
cmpsl
pop
rcrb
gs
cmpsb
arpl
mov
fadd
jmp
jns
loope
add
sub
je
mov
add
or
lds
jno
mov
mov
mov
xchg
mov
testl
ja
cltd
fwait
pop
cmpsl
in
aam
sti
xchg
stc
aam
push
mov
lods
or
aad
sbb
push
sahf
inc
mov
fsubl
dec
dec
aas
loop
pop
jbe
sbb
pop
orb
and
push
stos
inc
push
ds
psrlw
daa
inc
decl
faddl
into
pop
int
xor
cltd
scas
rolb
mov
in
aad
or
dec
adc
dec
pop
xor
test
jb
pop
lcall
xchg
mov
and
cmp
add
sbb
loope
jo
pop
cmp
jg
test
sub
and
std
popf
and
fistpll
loopne
iret
outsb
push
or
mov
jmp
push
xor
jg
dec
or
push
dec
cmp
mov
jns
cmc
movsb
mov
ss
fld
xor
xchg
insl
jecxz
mov
mov
icebp
push
in
out
mov
sahf
inc
mov
pop
add
mov
xchg
inc
std
lods
fimull
fldcw
insb
adc
and
push
push
lret
push
es
bound
test
lahf
jo
xor
lret
outsl
inc
cmpsb
fldt
sub
lahf
fimull
dec
cmpsb
aaa
dec
faddl
lcall
push
cmp
aas
add
int
inc
pop
loopne
cmp
out
cmpsb
idiv
dec
imul
cwtl
push
mov
xorb
jecxz
stos
jp
subb
aad
negl
fcmovnbe
out
mov
pop
sbb
push
push
and
mov
add
xchg
pop
stc
jae
dec
mov
or
testb
push
pop
les
aam
jns
xchg
andl
mov
rcl
loop
adcl
pop
or
sbb
pushw
out
int
xor
jno
mov
jmp
pop
subb
or
cmp
mov
sahf
mov
mov
cmp
outsb
add
xor
insb
pushf
out
add
fistpll
or
xor
sub
popf
lahf
sti
xor
pop
out
outsl
mov
in
xchg
lea
shlb
jecxz
dec
fcoms
call
or
js
sbb
test
sbb
cmp
or
out
bound
or
add
fldt
adc
jnp
into
or
sbb
popa
adc
lahf
mov
cwtl
repz
sub
jae
push
xchg
sub
sti
and
sysret
test
ljmp
popf
es
daa
sbb
xor
imul
xor
out
imul
push
lea
sbb
sbb
push
jmp
add
ds
lods
sbbb
adc
js
add
push
sbb
rorb
mov
in
mov
jge
int3
lods
mov
pop
inc
inc
aaa
jge
outsb
pop
aaa
pusha
cld
dec
out
stos
outsl
arpl
gs
leave
fldt
adc
adc
mov
adc
push
nop
xchg
sbb
xor
int
mov
jbe
jmp
leave
lods
pushf
sbbb
movsb
shlb
xor
push
mov
and
stos
sahf
push
lret
out
mov
shrb
enter
test
rolb
or
cltd
mov
adc
xchg
test
jbe
pop
push
pop
cmp
cmp
inc
xor
call
cltd
roll
push
jo
mov
lods
jo
test
xchg
mov
icebp
adc
iret
insb
mov
inc
xor
aaa
mov
pop
inc
push
aas
shl
movsl
cmp
ljmp
and
dec
jp
stos
mov
mov
mov
addl
and
outsb
test
or
jecxz
addr16
jl
aam
add
mov
dec
mov
in
sub
outsb
andl
dec
js
fcoms
mov
mov
hlt
jecxz
nop
or
outsl
push
dec
gs
add
or
iret
adc
mov
test
push
cs
into
and
adc
arpl
lret
fstps
in
insl
inc
movswl
jg
mov
ret
inc
jne,pt
out
fisttpl
subl
jnp
lret
shr
sbb
xchg
cmc
int
lea
mov
dec
or
mov
add
jno
and
mov
lock
mov
adc
shl
pusha
insb
ljmp
xor
popf
dec
mov
sahf
adc
pop
cs
imul
das
sar
ficompl
int
imul
cmp
xor
stos
sub
je
add
jae
cwtl
fcmove
leave
cmp
sahf
mov
aad
stos
add
mov
fst
lcall
mov
loope
mov
push
mov
jne
mov
test
or
ljmp
xorl
outsl
stc
out
test
mov
shl
int
enter
mov
imul
xlat
jecxz
cmpsl
cmc
mov
inc
pop
cmpsb
lahf
xor
cmpsl
cmpsl
lods
sbb
nop
dec
mov
or
pop
imul
loopne
std
dec
sbb
pushf
push
adc
movsb
xor
dec
push
push
push
adc
iret
xor
popa
cltd
pop
inc
cmc
dec
mov
filds
bound
sub
xchg
cli
fistl
xor
in
adc
ja
jb
sub
popa
out
inc
add
ds
and
into
jecxz
dec
mov
mov
dec
out
test
hlt
in
mov
je
push
push
jl
mov
ss
xchg
mov
iret
clc
push
push
dec
sub
sbb
rcll
push
mov
roll
test
fldt
jmp
pop
or
pop
xor
or
jg
xor
das
insl
mov
out
scas
movl
outsb
decb
lahf
popa
inc
mov
push
loop
dec
inc
cld
push
movsl
repnz
js
loope
push
mov
sbb
or
and
mov
mov
dec
aas
mov
pop
pop
sbb
hlt
dec
jge
in
cli
and
mov
jmp
int3
out
enter
shlb
adc
shlb
fistl
add
call
mov
ret
add
dec
jbe
es
shll
jbe
rolb
push
mov
cmc
or
data16
sbb
or
sub
cmp
push
or
testb
popa
jmp
in
or
popf
or
popf
leave
xchg
mov
test
xchg
popf
mov
insb
pop
dec
mov
jmp
jnp
jp
fisubl
shr
rcr
loope
mov
add
inc
das
aam
fwait
mov
data16
cmc
push
stos
cli
pop
cld
out
inc
ret
mulb
in
mov
popa
add
sbb
dec
pop
out
lea
xchg
imul
pop
out
pop
pop
xchg
sbb
or
xchg
sub
xchg
aam
xor
mov
push
xchg
in
out
mov
and
mov
inc
add
mov
mov
std
adc
push
jo,pt
adc
dec
icebp
mov
sub
ss
xchg
out
sbb
push
mov
imul
pop
cmp
lods
std
adc
orb
out
cs
or
add
mov
xchg
outsb
mov
sarl
stc
mov
aaa
xlat
sbb
out
negl
dec
mov
ret
hlt
push
sbb
dec
xchg
inc
mov
jp
jmp
mov
push
cmc
jp
mov
or
xlat
les
add
dec
mov
in
ficompl
cmp
aaa
xor
mov
cltd
rcrl
or
mull
sub
pop
sub
sbb
lock
cmp
adc
ret
jp
lock
cmpl
cs
ret
mov
in
lcall
cmpsb
icebp
leave
inc
xlat
pop
adc
jbe
push
in
sbb
stos
cmp
stos
jmp
cmp
cwtl
addr16
mov
int
push
mov
cmp
cwtl
cmpsl
int3
dec
cmp
xchg
mov
out
push
pop
dec
imul
in
cltd
mov
mov
push
push
mov
bound
ljmp
add
add
push
sub
pop
icebp
lds
js
sbb
sbb
adc
scas
rcrb
xor
dec
pop
xchg
jle
mov
aaa
sub
cld
pop
idivl
scas
mov
shr
jle
mov
lahf
jp
jecxz
jg
js
pusha
inc
jmp
jge
sub
loopne
pop
jae
ret
inc
mov
repnz
mov
cld
jmp
in
and
mov
cmp
ja
sbb
push
push
inc
fsubrs
out
call
mov
sub
into
loop
jae
adc
sbb
mov
enter
testl
mov
cli
or
inc
shrb
pop
iret
xchg
ds
mov
inc
test
push
dec
pop
lahf
stos
or
cmp
sahf
mov
pusha
lret
std
test
in
inc
mov
xchg
stos
xor
hlt
loopne
flds
je
sbb
in
into
ficomps
movl
xchg
lahf
js
sbb
cmp
int3
add
inc
push
mov
imul
mov
mov
lea
int
push
rol
out
imulb
jg
fsubr
pop
out
shrl
mov
dec
lods
les
mov
ljmp
mov
aas
lods
popa
sub
bound
incb
outsb
jmp
pop
neg
shl
icebp
push
pop
cwtl
movsb
adc
inc
popa
hlt
xor
addl
das
insb
fdivp
int3
jecxz
mov
inc
inc
cmp
mov
sbb
lret
sbbl
test
mov
lods
adc
xlat
stos
movsl
mulb
inc
imul
adc
push
fidivl
data16
cmc
icebp
aam
rcl
lcall
jl
pop
push
mov
or
fsubrp
test
mov
inc
mov
in
int3
mov
gs
push
loope
outsl
lret
inc
aas
cmpl
mov
out
shlb
scas
popf
cmpsl
enter
xor
gs
rcl
out
jge
xchg
movb
jae
sahf
pop
testb
sub
push
cmp
lods
xchg
pop
addr16
out
mov
out
push
mov
sahf
clc
mov
and
insb
imul
lahf
xor
dec
pop
dec
iret
cmp
shrl
sti
sbb
adc
cmp
dec
std
mov
lahf
mov
lahf
inc
aam
pushf
fmuls
xor
jnp
dec
scas
test
and
ds
lea
xchg
sub
jp
pop
loope
or
out
data16
add
pusha
fiaddl
aad
fs
scas
fcompl
ret
sub
pop
mov
ret
xlat
pop
push
faddl
jo
add
jl
push
out
sbb
and
inc
fidivl
ds
mov
les
cmp
arpl
ret
lds
das
cmp
fimuls
loop
push
movsl
cmpsb
dec
xor
cmp
push
ss
fwait
xor
jnp
xchg
sbb
mov
lods
pop
mov
cmp
jnp
rclb
and
xchg
xorb
mov
sti
orl
rolb
arpl
sub
xor
lcall
mov
sub
jg
out
into
insl
fstpl
aaa
sbb
fmull
mov
sub
pop
loop
xchg
hlt
scas
pop
dec
sbb
xor
popf
pop
fstl
mov
mov
jae
jae
lret
test
inc
stc
mov
xlat
mov
xor
loopne
xor
xchg
sub
enter
insb
cmp
imul
lods
imul
out
sarb
repz
cltd
xchg
xor
lds
sbb
sar
int
xchg
dec
js
pop
add
xor
push
int3
bound
or
cs
aad
je
dec
roll
clc
cmp
or
ret
inc
mov
add
jl
mov
cmp
lock
jmp
cmpb
test
adc
dec
popf
xchg
in
addr16
ljmp
cmp
jle
rolb
sbb
xchg
add
insb
imul
push
pop
or
xor
mov
and
push
adc
repnz
jb
rcrl
xlat
in
lea
mov
mov
jecxz
mov
aas
sahf
pause
in
movsl
fisttpl
pop
inc
or
push
aaa
out
ficoml
sbb
bound
out
pop
or
and
test
fbld
das
cmp
mov
push
out
mov
insb
fwait
shrl
xchg
insl
out
in
enter
stos
mov
sbbb
lds
add
inc
pop
out
shlb
cmpsl
adc
mov
out
push
out
outsb
pop
enter
shlb
pcmpgtb
or
jmp
ss
pop
and
andb
ret
pop
push
mov
dec
xchg
mov
mov
sub
push
push
clc
gs
jne
xchg
jae,pt
mov
sbb
mov
cmp
mov
or
inc
inc
lret
push
adc
rorl
jl
jecxz
popa
nop
xchg
dec
mov
sub
js
adc
pushf
cli
inc
xor
inc
std
xor
daa
xchg
cmp
nop
sub
pusha
jg
jbe
sub
jg
and
ficoml
cmc
icebp
jmp
dec
cmpsl
dec
xor
jne
pop
push
inc
push
jle
push
and
leave
lea
sub
mov
adc
cmp
cmc
das
mov
stc
insb
mov
pop
push
mov
rorb
test
xor
xchg
cmp
jp
push
daa
fs
scas
mov
ret
fidivrl
xor
mov
insb
imul
fmull
dec
enter
es
cmpl
add
movsb
dec
jg
cs
shrl
xchg
cmpsb
out
inc
push
xor
in
sub
in
push
dec
jb
out
les
enter
insb
dec
fldcw
mov
mov
xchg
or
fcoml
fs
subl
addb
mov
stc
or
popa
out
push
inc
hlt
mov
mov
mov
or
pop
movsl
inc
icebp
loop
imul
or
or
jmp
shl
jle
sub
jmp
push
popa
cmp
push
adc
sub
lret
fidivrs
aam
fwait
jg
mov
add
and
mov
cmp
je
xchg
mov
stos
xchg
call
xchg
mov
ss
out
out
popf
jge
clc
imul
sub
sub
or
lods
scas
mov
clc
mov
sarb
inc
rcrl
dec
mov
imul
mov
push
fcmovnu
mov
dec
xchg
inc
mov
cmc
pop
idivl
enter
stos
cmove
addb
cwtl
inc
dec
cltd
ss
divl
mov
mov
cmpsb
in
mov
insl
mov
xorl
inc
insw
aad
jae
popf
jp
jp
mov
out
cmp
stos
mov
notb
outsl
mov
gs
jbe
pop
cmp
cmp
jg
jecxz
andb
sub
incb
ja
and
sbb
inc
fadd
lods
imul
xchg
mov
pop
rorl
int
ror
pop
jg
push
add
pushf
lods
xchg
adc
call
lahf
out
inc
sub
lahf
mov
mov
movsl
jge
fwait
mov
ja
inc
pop
jnp
cmp
cmpsb
faddl
mov
scas
inc
stc
decb
addb
inc
lods
iret
fwait
push
pushw
fmuls
divb
push
test
push
sub
inc
or
adc
adc
fistl
cmp
aam
outsl
add
or
push
adc
xchg
daa
inc
aam
mov
push
in
sbb
mov
add
inc
out
pop
scas
pop
jmp
inc
xchg
add
pop
jno
ds
mov
adc
into
call
mov
popa
mov
add
je
mov
push
in
test
push
aad
and
aad
lea
push
inc
or
int3
xor
imulb
outsb
jg
push
out
adc
or
fwait
sub
xchg
xchg
mov
loope
inc
sbb
ficomps
mov
mov
xchg
jb
mov
and
push
test
push
rclb
inc
xor
mov
xchg
insb
in
div
dec
loopne
mov
outsl
fidivrs
xor
lods
and
push
xor
pop
jne
xorb
inc
lret
adc
in
sub
jge
fwait
mov
pop
arpl
push
add
dec
mov
sub
jbe
sbb
hlt
lcall
mov
sbb
push
lea
in
in
jnp
lret
std
std
not
dec
div
cmp
xor
fsubl
test
inc
and
call
cwtl
xchg
mov
sbb
pop
lds
fs
mov
in
sti
cld
xchg
into
push
cli
inc
test
fwait
das
shll
push
push
test
imul
aaa
dec
cli
leave
mov
sub
lahf
arpl
jg
cltd
pop
dec
das
cmp
lret
loope
lods
data16
lods
loope
jl
mov
iret
add
jo
push
mov
mov
andl
lock
ret
pushf
or
pop
xchg
and
data16
ss
ja
adc
dec
out
cmp
pop
gs
pusha
jae
ljmp
fisubs
int3
push
loope
pop
out
mov
push
jnp
nopl
in
cli
jmp
out
sbb
pop
fiaddl
sbb
or
inc
aas
mov
sahf
and
mov
scas
cmp
xchg
stc
fstpl
loop
mov
inc
inc
lods
adcb
xchg
test
jp
icebp
push
sub
or
scas
scas
and
sbb
popf
stc
popa
das
push
enter
pop
push
xor
adc
mov
popa
movsb
mov
push
in
adcl
rcrl
stc
mov
inc
aam
cs
push
addr16
push
outsb
addb
mov
adc
fcomps
dec
aas
scas
add
mov
inc
add
movsl
outsb
mov
pop
pop
cld
xor
sahf
xchg
mov
adc
add
mulb
repz
cmpsl
divl
in
shrl
sub
int3
push
faddl
mov
test
iret
or
inc
dec
jmp
adc
ret
push
into
adc
sub
inc
and
xchg
aam
push
in
out
or
insb
movb
call
lret
fisubrs
pop
cld
push
inc
rcll
pop
stc
xchg
insl
nop
out
imul
inc
loopne
scas
mov
push
mov
insb
orl
and
and
leave
lcall
out
fs
popa
dec
sub
jmp
mov
data16
cmpsb
pop
in
push
int3
ficompl
or
xor
in
cmp
flds
cmp
pushf
sbb
and
lods
mov
lods
push
out
mov
loopne
mull
mov
cmp
mov
mov
pop
xchg
pop
outsb
xchg
mov
mov
popa
adc
xchg
sub
test
mov
dec
cmp
int
sub
aaa
stc
mov
xchg
ficoms
push
cld
les
and
fnstsw
cmp
inc
aas
aam
popa
imul
orl
inc
inc
roll
pop
stos
sub
int3
cli
xlat
iret
or
push
aaa
nop
adc
push
push
and
mov
cmp
jp
pop
stos
imul
dec
inc
mov
in
movsb
movsb
or
movl
mov
or
lea
inc
push
mov
xlat
icebp
leave
mov
sbb
push
loope
adc
push
xchg
inc
mov
jb
pop
add
leave
mov
and
mov
add
dec
in
xchg
lcall
out
fs
mov
mov
cld
xchg
pop
int3
xor
ss
xchg
cmp
xchg
rclb
mov
cmc
or
jmp
push
insl
or
in
dec
je
jmp
ficompl
fcoms
cmpsb
mov
aas
lea
mov
xor
mov
ret
das
adc
das
insl
ret
push
lods
int
loopne
andl
cmp
add
pop
push
dec
inc
rolb
inc
xor
dec
cld
xchg
pop
int3
flds
out
fisubs
add
hlt
push
enter
cltd
jb
pushf
pusha
cmp
xchg
mov
cmp
or
pushf
pop
inc
jle
or
and
call
test
aaa
inc
mov
imul
stc
or
push
fwait
cmp
cmp
aad
sbb
adc
jno
mov
pop
bound
inc
sbb
shl
inc
cmp
sbb
xchg
insl
cmpsl
lock
outsb
adc
imul
mov
popf
insl
sub
sbb
mov
inc
mov
sub
dec
in
push
mov
jmp
mov
jge
push
mov
jne
cmp
aaa
inc
or
sbb
hlt
sub
mov
daa
mov
ret
enter
ret
test
ds
mov
inc
mov
pop
jp
int3
inc
push
jecxz
inc
push
and
push
mov
pop
cmp
xlat
inc
sbb
icebp
sub
mov
cs
fwait
mov
in
or
fadds
or
adc
shrb
mov
imull
int3
das
in
adc
mov
fildl
ret
shl
cli
adc
lret
test
pop
pop
mov
adcl
lahf
cmp
cltd
dec
pop
fs
push
or
push
test
imulb
or
push
pop
jge
pop
and
jg
inc
push
push
int
cmp
push
cli
fidivrl
sahf
scas
leave
mov
adc
addr16
test
push
lods
jmp
aas
ja
repz
pop
hlt
shll
adc
or
inc
fiadds
out
mov
imulb
repnz
sti
adc
push
loope
mov
bound
les
ror
dec
xor
cmpsb
sub
xchg
xor
mov
and
mov
cmp
dec
sub
or
mov
inc
ljmp
adc
mov
outsb
sbb
imull
movsl
in
and
popf
inc
mov
jmp
lds
jle
mov
shlb
mov
lock
or
or
lret
aam
cmp
call
mov
aaa
loope
lahf
out
pop
and
ljmp
sahf
dec
aam
ss
jle
dec
lods
and
jp
cld
sbb
xor
sbb
cwtl
dec
daa
cmp
xchg
dec
or
fdivl
xlat
lret
push
xor
lret
clc
inc
scas
out
fmul
mov
dec
mov
inc
mov
pop
push
daa
lret
pop
shll
fwait
cmc
and
jbe
repz
push
mov
xchg
push
sub
test
mov
insl
imul
mov
push
inc
jmp
inc
insb
lcall
adc
jne
sbb
jge
inc
push
cmp
divb
outsb
sbb
jns
xchg
mov
lods
jnp
xchg
fdivr
aaa
mov
scas
pop
and
mov
popa
sbb
std
mov
inc
clc
sbb
js
inc
sub
pop
aad
sahf
arpl
adc
outsb
jne
pop
mov
xchg
jmp
fcmovbe
inc
scas
dec
mov
das
mul
or
adc
jle
call
jp
sahf
fwait
lods
lret
les
gs
lods
and
pop
mov
xchg
mov
jno
mov
lds
jbe
and
cld
adc
orb
jge
mov
shlb
clc
test
cwtl
aam
sub
pop
ljmp
call
dec
push
jb
adc
adc
xchg
sbb
pop
loop
outsb
pop
xor
or
mov
dec
popf
adc
hlt
or
arpl
fistl
hlt
ret
frstor
push
in
mov
addr16
repz
xor
cmp
pop
jp
mov
std
and
dec
in
insl
xor
aas
fisttps
xchg
xlat
xor
push
xor
push
leave
jg
inc
cmp
cwtl
adc
divl
mov
mov
dec
in
push
push
jmp
adc
xchg
xlat
push
dec
jns,pn
notb
popa
mov
je
lcall
fwait
es
bound
mov
mov
cwtl
ficomps
adc
xor
roll
aam
xor
pop
mov
fmul
cmp
inc
or
iret
mov
xchg
sbb
or
mov
arpl
lahf
mov
sbb
addr16
jmp
pop
shr
mov
insl
jo
dec
daa
gs
aad
adc
jns
xorb
sub
bound
or
add
or
xor
xorb
faddl
mov
int3
cmp
pop
gs
iret
mov
or
mov
cmp
mov
mov
xor
lds
xor
xchg
and
cwtl
call
xlat
mov
jmp
sbb
lahf
cmp
mov
cli
push
adc
fsubr
out
dec
sahf
xor
adc
dec
cmp
inc
mov
jmp
xchg
jl
push
mov
fnstcw
ds
push
and
xchg
rorl
mov
popf
push
fists
loope
loopne
addr16
jmp
or
popa
rorb
in
aas
push
mov
add
and
inc
adc
test
fcmovb
push
xor
movsb
sub
lds
out
fdivrs
dec
mov
jo
push
and
dec
fwait
xor
and
xchg
dec
sbb
outsl
mov
jmp
xchg
popa
add
das
popf
lds
mov
call
and
mov
fwait
sbb
sbb
fiaddl
sbb
iret
push
adc
lcall
rcrl
cmc
cwtl
jge
add
aaa
cmp
cmc
or
ljmp
mov
mov
mov
dec
in
mov
das
or
mov
mov
mov
fidivl
jp
cmp
movsl
je
pop
imul
push
aam
add
mov
aad
fwait
sub
sarl
jno
xor
mov
pop
and
test
aam
xor
inc
pop
mov
ffree
xchg
int3
jbe
xor
jns
mov
scas
or
push
test
test
fwait
pmaxsw
imul
pop
in
dec
imul
sub
lea
mov
pop
xchg
jne
or
mov
jbe
xlat
pop
dec
adc
pop
mov
mov
sub
or
pop
shlb
or
ljmp
jae
mov
mov
pop
or
cmp
ljmp
jp
adc
loopne
clc
xor
push
pop
push
mov
cltd
and
jmp
inc
mov
jo
mov
inc
inc
and
mov
mov
lahf
subb
iret
or
rolb
fs
mov
les
jmp
nop
inc
out
adc
call
mov
xchg
pop
lret
cli
sbb
mov
sbb
rcrl
and
inc
dec
ret
ret
jo
cmp
cmp
sub
pusha
xchg
out
inc
sub
into
ljmp
ret
jne
pop
dec
std
pop
out
xchg
and
ret
pop
add
mov
dec
cltd
fsubrs
mov
cmp
aas
inc
hlt
push
out
adcb
cmp
sbb
ret
arpl
clc
mov
dec
out
outsb
pop
inc
cmpb
pop
xchg
outsl
inc
jecxz
pop
xorl
lods
and
stos
xor
jbe
mull
jle
push
pop
mov
jge
mov
push
dec
mov
mov
iret
jnp
or
pop
es
jge
jp
orl
iret
pop
je
cmpsl
addr16
aad
cmp
adc
jp
jb
pop
mov
xlat
mov
cwtl
in
dec
cmp
or
or
and
mov
ja
cld
or
sub
or
hlt
subl
ljmp
or
cmp
aad
mov
into
pop
imul
jae
ret
popf
arpl
pop
insb
jae,pn
adc
loope
out
inc
jbe
xchg
ret
fnstsw
movsl
pop
push
push
lret
ss
cmp
sub
sub
adc
into
cmp
sti
sbb
rol
lea
jo
push
xchg
test
lea
or
jbe
inc
mov
pop
cmp
in
shrb
repnz
push
lods
xchg
sbb
add
mov
pop
lea
or
xchg
out
mov
cmp
repnz
mov
jne
pop
mov
ljmp
movsb
stc
inc
adcb
fwait
adc
pusha
stc
cld
loope
subb
and
inc
loopne
scas
dec
jbe
in
scas
in
ja
and
out
outsb
push
dec
pop
pop
ret
out
push
pusha
and
pop
dec
jle
mov
mov
lods
cmp
shlb
push
xchg
push
cmp
or
sub
aas
or
and
pop
mov
and
xor
adc
push
pusha
add
lcall
push
cmp
stc
sub
out
mov
outsb
sarb
pop
dec
jecxz
lods
pop
mov
cmpsb
div
shl
sub
add
in
mov
mov
jl
xstore-rng
cmpsl
addb
jp
cmc
jno
fstcw
push
dec
push
mov
pop
jmp
int
pop
push
imul
arpl
jecxz
into
push
fldl
mov
inc
and
inc
int3
and
jae
stos
push
dec
lret
push
insl
jnp
shlb
aas
shll
add
jg
add
mov
sbb
bound
xlat
arpl
hlt
push
adc
roll
cmpsl
andl
adc
mov
mov
mov
fsubrl
or
movsl
sub
je
inc
aas
pop
imul
ds
lret
testb
mov
mov
inc
jo
mov
fwait
push
das
and
push
mov
aam
insl
mov
mov
inc
inc
dec
jmp
add
call
repz
xor
popa
scas
push
int
fnstcw
pop
jp
and
push
add
bndldx
xchg
cli
shll
sub
cld
jo
add
insb
sub
jmp
cmpl
stos
cmp
mov
out
cmp
mov
jae
hlt
push
add
mov
pop
fadd
mov
push
loop
xchg
mov
pop
leave
cmp
adc
inc
push
jge
add
or
push
dec
lcall
scas
xchg
adc
mov
mov
rorb
out
jp
inc
mov
add
cwtl
mov
popa
mov
movsb
movsb
lcall
sbb
pop
inc
pop
xor
pop
mov
xchg
outsl
xchg
fisttps
mov
int
mov
daa
gs
xor
mov
push
frstor
lock
loopne
lahf
xchg
sub
mov
inc
mov
mov
cmp
std
xchg
test
outsb
cli
int3
mov
inc
push
adc
aas
scas
push
fadds
mov
pop
fcom
xchg
jbe
push
xchg
lcall
outsl
pop
xor
out
sbb
repz
repz
daa
jmp
add
push
sbb
mov
jno
fsubl
adc
xor
inc
xor
or
ljmp
fdivrs
js
mov
xchg
das
mov
inc
mov
adc
pop
adc
out
mov
mov
pusha
push
imul
xchg
lods
sahf
lea
sub
add
aaa
jo
or
cmp
mov
test
nop
jbe
gs
push
adc
pop
mov
lods
mov
mov
sbbl
daa
fsubl
mov
jmp
sub
push
or
jbe
fisubl
nop
push
lcall
fildl
repz
mov
jae
jae
sbb
scas
xchg
arpl
mov
pop
fs
sbb
push
mov
fstpt
mov
and
sbb
insb
into
insb
sbb
pop
js
ds
andb
mov
sbb
loope
fbld
jp
or
je
mov
jne
cmpsl
pmulhw
push
in
jecxz
ret
sbb
repnz
punpckhwd
gs
push
in
xor
add
loop
fisttpll
mov
rol
sbb
lods
dec
jnp
cmpsb
sub
test
sbb
pop
fdivrp
add
push
and
lods
mov
adc
test
push
das
jne,pn
or
mov
cmp
inc
adc
lret
pop
push
sub
in
ss
jecxz
lods
inc
mov
out
pop
mov
scas
push
int
ret
jb
mov
mov
or
int
les
filds
mov
xor
sub
stc
and
cli
es
jo
adc
out
xchg
mov
scas
cmp
cmp
sti
lods
and
fisttps
les
push
imul
sub
fisttps
inc
scas
xchg
jne
lahf
xchg
dec
lret
fsubrp
jl
ret
mov
imul
es
into
stos
stos
mov
lahf
pop
add
leave
out
das
sub
cli
xchg
or
cvtps2pi
sti
enter
pushf
fcompl
jbe
clc
adc
jmp
push
or
mov
xor
shr
stos
or
imul
sub
push
sbb
mov
call
sahf
clc
push
or
stos
cltd
dec
cli
iret
stos
pusha
jae
mov
inc
ja
ret
lcall
xchg
sar
daa
xor
mov
aaa
dec
mov
and
int3
loop
stos
movsl
jnp
lcall
pop
push
rcll
sub
push
adc
outsl
cmc
iret
inc
jg
xchg
mov
out
int3
insb
sub
dec
fcmovnbe
dec
mov
mov
mov
pop
ss
mov
jnp
lods
inc
shll
bound
ficoms
insb
les
cmpsl
das
shl
test
outsb
cmc
inc
xchg
out
and
sbb
mov
fwait
loope
mov
sub
int3
lret
scas
adc
imul
xorb
fsub
sbb
inc
jne
gs
mov
outsb
lea
push
test
addr16
cmp
cmp
jnp
insl
mov
push
cmpsb
or
jns
out
stc
xchg
cmp
jo
dec
fisubrs
xadd
dec
jg
sbb
loop
lcall
popa
cmp
lods
pop
lret
ljmp
jle
sub
jb
in
dec
xor
jo
dec
cmc
cli
sbb
test
mov
and
xchg
cli
movsl
lret
sbb
idivb
repz
pop
adc
jne,pt
sar
add
xchg
dec
add
imul
xchg
or
nop
pop
xchg
mov
mov
push
jne
adc
lcall
int3
cltd
sub
sarl
fisttps
inc
faddp
push
bound
testb
dec
push
inc
mov
daa
mov
jne
je
push
xor
inc
insl
inc
pop
pusha
mov
imull
jne
lds
sti
cmp
pop
and
out
jle
dec
inc
test
aas
and
pop
or
adc
in
or
or
int3
and
mov
mov
jnp
ret
mov
dec
pop
insl
cs
cmp
mov
mov
push
pop
cmc
fcmovbe
out
movsb
inc
cwtl
hlt
and
inc
sbb
int3
fs
out
mov
rcrl
scas
test
inc
movsb
ljmp
arpl
pop
sti
sub
and
cmp
cwtl
push
cmpsb
adc
jp
fisubl
in
cmc
jecxz
shrl
std
dec
fwait
movsb
pop
mov
cld
bound
pop
fimuls
test
add
fstpt
insl
dec
pop
sub
mov
repnz
sti
fistpll
sub
mov
inc
lds
mov
cs
lahf
rcrb
jnp
pop
or
xchg
fstpl
and
cmp
data16
mov
les
sbb
adc
sbb
aam
push
jae
inc
lock
cmp
fsubp
jne
fistl
popa
aam
jg
loop
iret
fdivs
jbe
adc
dec
jge
shrl
pop
cltd
ds
mov
outsb
std
sbb
adc
dec
mov
icebp
xor
xchg
fiaddl
xchg
stc
call
enter
mov
or
mov
jl
in
fmuls
cltd
icebp
out
cmp
and
mov
iret
and
mov
out
xlat
enter
dec
rcr
outsl
scas
and
cld
mov
inc
aas
push
adcl
push
pop
jo
push
lock
mov
push
call
push
or
add
je
lods
ja
jnp
loopne
dec
arpl
in
push
xor
mov
mov
jns
mov
sbb
xor
mov
sbb
mov
fsubr
mov
pop
aaa
xor
jbe
notl
enter
adc
mov
pop
mov
shlb
fcompl
xchg
imul
pushf
aaa
pop
int3
test
scas
addl
pop
movsb
fildl
xchg
mov
sahf
push
pop
cli
mov
inc
xorl
insl
pop
mov
ljmp
adc
mov
insl
enter
pop
mov
adc
in
es
js
mov
lods
divb
adc
daa
lahf
xor
test
inc
xor
sub
and
in
outsl
sbb
das
mov
jl
sbb
jb
sti
pop
bound
in
adc
adc
mov
adc
add
mov
rcll
cmpsb
lds
out
lahf
movsb
rol
jns
out
jns
bound
dec
hlt
out
dec
jp
out
push
ja
js
pop
fwait
out
dec
orl
jb
jno
cmpl
idivb
add
push
out
repnz
xchg
xchg
ret
sub
out
mov
insl
mov
xorb
shlb
int3
pop
push
pop
xor
push
mov
jbe
jae
jle
daa
mov
mov
add
fidivs
sbb
sti
ret
push
in
cmp
adc
xor
outsb
arpl
dec
adc
xchg
inc
sub
repz
repnz
pop
push
pusha
mov
push
aam
jno
jg
jge
and
repz
inc
mov
cmpl
mov
fisubs
lret
mov
jmp
inc
lret
into
fcoml
fmuls
or
ficoml
and
scas
aad
and
or
in
daa
xorb
lods
jmpw
cltd
into
ror
std
inc
test
adc
fidivrl
lock
adc
xor
inc
test
lods
cmp
add
xor
mov
push
mov
imul
and
in
inc
sub
fwait
xor
jmp
mov
dec
mov
pop
imul
fists
leave
push
jl
sbb
push
popf
je
or
nop
sar
js
adc
jmp
xchg
in
push
lahf
push
adc
popf
xor
xor
aas
xchg
xchg
repnz
push
test
dec
cmc
push
sarb
sbb
js
push
jb
and
imul
mov
call
xchg
pop
jmp
push
pop
ret
nopl
jl
jne
shlb
mov
outsl
mov
adc
leave
or
adc
arpl
rcrl
xchg
add
daa
mov
into
add
iret
xchg
xchg
nop
imul
mov
jb
loopne
push
push
lods
sbb
popa
sub
aad
rol
push
leave
mov
clc
jp
cmp
in
test
pop
add
mov
pop
repz
cmpsb
inc
pop
int
les
mov
in
aaa
out
sub
dec
cwtl
xchg
lcall
lret
lods
ss
movsb
push
pushf
fsqrt
xor
into
mov
cmpsl
sbb
mov
test
or
cltd
push
push
mov
subl
xor
mov
jg
sarb
aas
lods
push
scas
inc
mov
inc
add
push
clc
mov
add
ja
loopnew
jecxz
sbb
sahf
and
or
cld
test
cmp
inc
mov
sbb
pop
into
add
in
xchg
gs
shl
jecxz
pusha
scas
add
popf
add
in
sub
xchg
or
loope
cmp
xor
sub
sub
xor
insl
fsubrl
ss
jg
rcl
pop
inc
pop
stos
enter
mov
fldenv
sbb
jmp
jne
sub
add
sti
cmp
jle
mov
mov
shl
lods
mov
mov
rcl
js
xchg
cli
inc
jns
push
mov
std
fidivrl
jmp
stos
imulb
movsb
stos
or
sbb
inc
scas
cs
jae
xchg
sub
movsl
dec
testl
sub
cmpsb
xchg
orl
jl
adc
add
stos
inc
and
mov
je
loop
cmp
mov
cmp
cmp
or
mov
ficoml
movsl
xor
sbb
xchg
and
xchg
inc
inc
imul
add
or
scas
jae
mov
mov
mov
lods
or
and
xchg
cli
lods
notl
mov
lret
mov
pusha
insb
insl
or
dec
ret
insl
pop
mov
add
jne
cmp
add
xchg
pop
pop
mov
fprem
sub
cs
shlb
cmp
jne
inc
xchg
testl
mov
pop
js
jb
andb
cmp
movsb
add
adc
fs
je
subl
cmp
mov
pop
sbb
mov
xor
adc
or
pop
out
jg
nop
or
cli
cmc
aas
rcrl
mov
in
cmp
ja
inc
std
pop
adc
fidivl
fnstcw
mov
mov
iret
fs
jb
not
or
mov
jp
pop
ret
xchg
jecxz
bound
adc
inc
or
pop
test
dec
loop
mov
int3
stc
cmp
lea
arpl
and
ja
pop
sbb
and
movsl
lods
dec
jns
push
sbb
and
mov
dec
scas
fsubrs
adc
xchg
lcall
cmp
into
shll
test
je
push
jno
outsl
dec
dec
mov
adc
fisubrs
inc
dec
js
xchg
mov
mov
adc
dec
lret
lcall
int3
jge
push
fbstp
mov
repz
xchg
mov
in
mov
push
jle
mov
mov
sub
jmp
loopne
sbb
adc
int
adc
mov
loop
movsl
push
mov
adc
rcrl
push
sbb
or
or
imul
mov
mov
stos
add
sbb
rorl
mov
cs
fs
aam
xchg
ror
test
cmp
push
rol
cmp
decl
les
xor
lcall
loopne
repz
faddl
test
xchg
repz
scas
and
and
xor
fistpl
or
add
push
ljmp
and
mov
stos
push
mov
add
cmc
push
mov
xlat
out
ret
aaa
loopne
xor
add
sub
hlt
ds
push
insb
dec
dec
scas
addb
push
sarb
pop
mov
shlb
cvtpi2ps
pop
fimull
push
jge
stos
repz
in
push
icebp
mov
inc
mov
add
and
cmp
push
sub
sub
push
xor
sub
mov
hlt
push
add
add
std
push
push
adc
adc
jnp
or
ljmp
lods
jae
pop
dec
lods
icebp
insl
cltd
lds
lock
mov
aaa
mov
fbld
lods
out
dec
not
or
jg
mov
xor
lret
mov
pop
movsl
adc
sbb
dec
push
ss
insl
pop
sub
insl
sahf
das
sti
sbb
gs
jno
mov
nop
push
jmp
or
sahf
xchg
and
out
cmp
add
push
push
in
push
in
rcll
or
iret
mov
aaa
sbb
lods
rclb
es
fdiv
push
xor
dec
cs
dec
loop
out
mov
sub
xchg
xchg
adc
add
test
lret
jo
sub
fs
cli
arpl
lahf
addr16
testl
sti
aas
push
dec
in
aam
mov
je
pop
test
or
cmpsb
xrelease
in
push
arpl
pop
insb
push
sub
rcrl
sub
add
sahf
fwait
push
and
stc
stos
mov
int3
pop
push
pop
mov
lock
ret
enter
repnz
fmulp
stc
jl
sti
and
in
fwait
dec
stc
add
adc
scas
push
test
cmp
ret
icebp
dec
mov
test
out
ljmp
jle
pop
shll
idiv
dec
sub
mov
loopne
mov
mov
dec
aam
jecxz
mov
jp
push
xchg
jne
xchg
dec
nop
loopne
lock
pop
icebp
in
fs
mov
pop
mov
lods
xchg
cmp
aaa
sub
sbb
insb
das
jae
push
js
xchg
add
out
mov
loop
dec
outsl
push
fistps
mov
rclb
insl
sbb
negl
cmp
xchg
sbb
xor
xor
mov
fdivs
xor
xor
dec
stc
push
dec
pop
add
out
shlb
xchg
dec
mov
jnp
insb
lods
lea
and
pop
flds
adc
cmp
aam
sub
clc
and
fs
xlat
lahf
cmp
out
mov
or
insl
test
data16
inc
pop
daa
mov
sbb
lock
sbb
cmp
xor
ret
ret
scas
fdiv
out
loopne
adc
add
lds
loop
rolb
mov
dec
fstpt
es
daa
sbb
sub
ret
cld
cld
and
ss
out
das
cltd
or
repz
lahf
repz
pop
push
xor
loope
xor
push
rolb
lret
pop
cmp
add
out
sbbb
jl
mov
mov
mov
inc
push
push
pop
adc
xchg
call
adc
pop
in
mov
lds
loope
xchg
mov
dec
xchg
inc
pop
int
mov
dec
and
jmp
fsubl
dec
les
sub
add
subl
dec
fwait
scas
decb
aaa
into
sub
cmp
popa
add
pop
mov
mov
rcrl
fcomip
test
mov
sub
add
jle
shll
fsubs
cld
push
js
out
sub
mov
lods
sbb
add
mov
and
stos
in
faddl
lds
jmp
insb
stos
mov
push
out
scas
push
cmp
sti
fs
xor
xchg
int
add
adc
cmp
push
or
mov
jp
mov
je
xchg
out
cwtl
js
sbb
lock
inc
das
mov
std
mov
inc
cmpsl
sbb
ljmp
lock
mov
mov
or
pop
add
lret
pop
scas
gs
dec
sarl
push
inc
adc
pop
jb
jmp
jmp
pop
fmull
inc
faddp
mov
ja
repz
pop
push
jns
ds
insl
xchg
mov
clc
sbb
mov
faddl
scas
pushf
push
fcompl
out
add
out
xchg
mov
jmp
ss
inc
pop
dec
sub
adc
xchg
adc
mov
mov
or
and
aaa
mov
fmuls
ror
insl
addr16
cmc
arpl
jb
sahf
sbb
jge
jne
das
in
fadd
pop
or
lea
xor
sahf
mov
sbb
mov
xchg
mov
sahf
in
adc
adc
inc
push
test
sub
sbb
push
aaa
fstl
in
inc
in
sti
mov
xor
adc
ja
push
pop
lret
stos
adcl
loop
cmc
hlt
lods
jns
into
jb
push
loopne
fcomp
xchg
testb
xor
in
int3
or
xchg
xor
addr16
mov
mov
movsb
test
push
mov
cmc
rorl
fstpt
rolb
adc
jle
push
pop
fwait
divb
mov
or
adc
xor
push
inc
movsl
cltd
push
mov
ficoml
decb
mov
pop
stos
fyl2xp1
into
lcall
scas
cmp
or
popf
call
xchg
lret
or
mov
ja
data16
pop
leave
lea
jle
orb
mov
in
jnp
fmuls
push
mov
daa
lea
mov
mov
loopne
inc
loopne
into
mov
jnp
imul
and
out
jg
lds
jp
mov
sub
push
or
inc
inc
adc
sahf
inc
jmp
mov
pop
pop
ss
fsts
rolb
adc
in
inc
repnz
mov
cmp
jge
leave
repnz
ret
sbb
mov
gs
adc
or
int3
sbb
jmp
out
xchg
aas
das
int3
jecxz
popa
xor
cmc
sbb
jmp
dec
iret
xchg
test
add
xor
je
or
inc
cmp
jmp
cmp
add
cltd
dec
ret
jae
adc
push
push
adc
add
cmpsl
xchg
pop
and
or
mov
sbb
test
ds
insl
cmp
xor
or
jae
imul
ret
insl
jecxz
jbe
shlb
hlt
fsub
xchg
xchg
icebp
or
xlat
mov
adc
push
dec
fst
adc
in
lcall
data16
lods
add
lcall
lea
jae
out
pop
stos
xor
out
out
out
loope
xor
das
insb
mov
pop
push
insb
adc
or
and
inc
sbb
jmp
push
mov
push
mov
ds
sbb
and
leave
shr
rolb
sub
cmp
movsl
daa
insl
xchg
in
sub
fnsave
cltd
sub
sub
je
out
insl
lahf
push
xor
inc
insl
gs
pop
sub
call
cltd
repz
test
out
dec
jl
and
add
das
xlat
sub
or
gs
mov
out
mov
sbb
je
pop
jbe
mov
mov
xchg
movsb
xor
and
jo
or
mov
scas
mov
inc
and
clc
xchg
nop
inc
test
js
add
pop
xchg
jbe
dec
and
bnd
sbbb
mov
and
in
push
cmp
cli
and
inc
mov
int
les
cmpb
jmp
fsubl
outsb
xor
stc
inc
roll
or
cld
sub
les
xor
dec
mov
outsb
lret
icebp
sbb
jl
aas
sbb
orps
out
pushf
lea
fimull
aam
and
jae
xor
fwait
lret
cltd
jp
adc
xchg
dec
clc
or
inc
mov
test
sbb
inc
mov
into
lahf
repz
into
adc
test
xchg
sbb
repnz
data16
lret
into
scas
in
test
hlt
mov
fwait
inc
pushl
adc
cs
sbb
sub
dec
scas
and
orb
sbb
or
pop
jbe
jg
mov
es
cmp
jns
xchg
adc
icebp
aas
dec
inc
nop
cmp
stos
int
dec
scas
das
or
adc
negb
inc
jns
in
mov
or
clc
out
stos
push
add
cmp
dec
cmp
push
adc
push
xchg
call
andb
push
xor
cmp
iret
push
imul
dec
out
and
ljmp
add
inc
xor
sbb
xlat
mov
add
push
dec
dec
push
add
mov
movsl
cmp
push
mov
lret
inc
mov
inc
testl
jecxz
test
jo
add
mov
or
mov
mov
mov
fisttpll
pop
lea
mov
jb
call
mov
dec
lret
push
lods
dec
pop
sub
jmp
dec
jp
cmp
push
xchg
shr
leave
adc
mov
mov
jne
call
ret
xchg
dec
sti
sahf
loope
sbb
outsb
cs
push
or
popf
adc
sbb
xchg
int
mov
dec
add
inc
pop
push
imul
outsl
aam
repnz
leave
or
dec
add
and
push
mov
push
sbb
jg
pushf
aad
lret
xchg
pop
repnz
xor
jl,pn
decl
inc
mov
clc
sahf
les
popa
scas
shrb
adc
outsl
out
js
pop
das
subl
sbb
inc
stos
outsb
xor
leave
std
mov
jne
dec
jne
push
add
pushf
mov
test
in
dec
enter
mov
push
and
je
mov
gs
mov
mov
cmpsb
jo
in
push
mov
ret
add
popa
ret
adc
jno
pop
mov
jns
adc
sbb
sub
hlt
mov
push
lret
icebp
test
movsl
call
dec
push
pop
cmp
jl
faddl
push
xrelease
fsubs
shll
mov
hlt
jecxz
mov
out
jno
pop
sbb
xor
mov
fcomps
push
lret
movsb
daa
nop
or
and
mov
into
jb
sub
pusha
xor
inc
xor
or
movsb
mov
mov
or
enter
mov
adc
cmpsl
inc
and
pop
xchg
cli
leave
ljmp
cmp
pop
sbb
pop
xchg
xchg
xor
daa
jl
jae
test
cmpsb
push
jl
rcrb
mov
sub
mov
adc
outsl
xor
add
mov
cmp
and
add
dec
loopne
inc
inc
fisubs
loopne
and
cld
fnstenv
decl
dec
and
test
jno
xor
test
xlat
scas
cli
clc
imul
in
inc
ljmp
loopne
out
inc
xchg
addr16
sbb
inc
sbb
and
fxtract
or
add
inc
fcoml
jge,pn
jo
or
xlat
in
add
pop
in
pushf
push
cmp
insl
stos
dec
je
or
popa
pop
cmp
add
fcomps
and
dec
inc
jnp
gs
push
push
mov
loope
jno
jnp
nop
les
push
dec
das
or
mov
mov
mov
pop
cmp
in
add
cmpsl
cmc
test
jecxz
dec
hlt
xor
js
idiv
dec
and
leave
loop
pop
jmp
shl
mov
push
jb
jl
lret
scas
mov
lcall
and
xchg
call
loop
aam
pusha
out
jb
cld
xchg
sbb
hlt
mov
outsl
lock
xchg
outsb
and
int
mov
movsl
sbb
arpl
xor
mov
mov
fwait
cmp
sbbb
and
repz
lods
push
dec
paddw
int3
jl
jg
inc
arpl
jb
push
out
fwait
jae
xor
shl
daa
sub
pop
push
add
and
push
xor
fsubrs
inc
jle
out
inc
xchg
add
cmp
and
notl
mov
imul
push
push
mov
out
aam
in
scas
outsl
dec
add
fidivs
add
fiadds
inc
loope
and
mov
and
repz
scas
bound
xchg
iret
mov
xchg
loop
mov
pop
inc
lea
add
cmp
inc
add
push
inc
sbb
fistpl
imul
lahf
sub
push
lods
gs
jg
mov
int3
push
dec
dec
imul
das
test
imul
call
sbb
daa
pop
outsl
aam
or
adc
cld
aaa
dec
push
stos
jno
and
mov
or
inc
pushf
dec
jle
lret
push
xchg
test
sub
push
insb
pop
cmpsb
out
cwtl
ds
fbld
xchg
cmp
push
daa
cmpsl
repnz
jmp
push
mulb
int
lahf
push
mov
cmp
pop
sub
rcrb
das
xorb
pop
rorl
mov
sar
push
push
cwtl
lods
push
jne
orl
gs
xor
pop
in
or
jle
js
push
out
scas
pop
or
lret
outsb
push
pop
daa
adc
adc
adc
test
add
test
repnz
into
sub
icebp
loopne
aad
pop
jnp
or
das
dec
repz
ljmp
inc
rcl
adc
xor
cmp
mov
mov
dec
or
xor
iret
cmp
mov
aas
aas
cld
sub
and
popf
lcall
dec
addr16
cmp
mov
mov
loope
out
clc
cmpb
loop
pop
fwait
sbb
push
jo
pop
sub
das
adc
lods
sub
lods
pop
mov
inc
jecxz
pop
movsl
mov
xlat
ds
stos
inc
adc
mov
imul
mov
jl
and
cmp
cltd
inc
xor
int
int
lea
xchg
and
out
add
ljmp
xchg
loope
sti
pop
subb
or
lods
ret
add
pop
cmp
add
fwait
out
push
lock
rcr
clc
sbb
call
xchg
jmp
in
mov
jno
adc
aam
xor
add
mov
xor
inc
add
inc
pop
sub
adc
adc
ja
jl
addl
xchg
lret
sti
out
fs
daa
jge
fucomp
mov
dec
js
pop
dec
adc
in
movsb
cmp
out
hlt
cmpsb
add
cltd
xchg
inc
addr16
mov
loop
sub
mov
xor
mov
clc
inc
xor
mov
and
leave
jne
cmp
cmp
mov
mov
gs
lcall
pop
fwait
cli
inc
dec
in
int3
dec
mov
enter
inc
add
push
add
lcall
inc
cmp
mov
ja
dec
jns
inc
pop
cwtl
dec
aad
sahf
stc
add
subl
and
inc
jae
add
push
push
in
pop
mov
pop
stc
or
cmp
cltd
cwtl
sub
xlat
not
fs
mov
imul
scas
outsb
out
cmp
jmp
mov
les
pop
xchg
jno
xchg
sbb
nop
fcomps
jecxz
jnp
cmc
xor
mov
dec
call
fwait
pushf
sbb
inc
loope
pop
idivb
dec
and
jno
enter
scas
xchg
cmp
sbb
sbb
mov
mov
add
or
jnp
sbb
inc
push
pusha
hlt
mov
push
sub
stos
push
cmp
xchg
scas
add
lods
sti
cs
stc
inc
aaa
sbb
stos
outsb
cmpsl
and
movzbl
cmc
pop
jmp
arpl
out
sbbb
int3
xchg
and
lret
add
sub
test
push
out
cld
cmp
pusha
mov
and
pop
mov
adcb
packssdw
inc
clc
shlb
shrl
push
add
pusha
push
lea
and
fbld
lret
test
aad
lock
sbb
or
gs
jecxz
data16
cmc
fmulp
aad
dec
ret
neg
into
mov
sub
push
ret
sub
fsubr
lds
lahf
mov
popl
xchg
repz
mov
insl
int3
call
loopne
dec
scas
mov
adc
ret
test
mov
test
and
cwtl
mov
sbb
je
sbb
popl
je
fmuls
xchg
mov
mov
test
out
xor
xor
xor
ja
sub
aam
cmp
cli
mov
test
loope
lret
jnp
pop
sbb
push
pop
fdivs
xchg
push
sbb
xchg
jge
sahf
pop
je
int
movl
and
cmp
aad
outsl
cmp
and
xchg
mov
fisttpll
addr16
scas
push
adc
cmpl
xor
loop
les
mov
decl
cmp
jge
cmpsb
dec
cwtl
xor
movsl
movsb
mov
xchg
push
outsl
xchg
push
add
and
lds
test
lea
dec
jecxz
notb
loop
dec
popa
adc
arpl
jge
les
das
ficoms
ja
mov
jb
outsl
repz
insb
lock
fildll
pop
out
jae
inc
mov
ret
sub
xor
lahf
sbbb
ja
adc
stc
fidivl
sub
les
and
inc
call
cmpsl
int3
and
push
cli
and
sub
es
push
push
cli
cmc
jmp
int3
jle
xchg
mov
adc
sub
enter
iret
divb
inc
or
les
pop
mov
pop
fsubrl
add
mov
adc
in
lret
mov
cld
inc
or
subb
mov
mov
pushf
aas
xchg
sti
mov
xor
lock
xchg
rcr
inc
xchg
cmp
outsb
mov
xor
out
stc
fwait
in
outsl
popf
loope
je
insb
mov
cmpsl
mov
push
movsb
push
pop
jne,pn
daa
or
pop
or
cwtl
jmp
test
cmp
roll
jbe
shll
shll
inc
roll
arpl
scas
lds
test
mov
and
mov
stos
outsl
adc
mov
sub
push
subb
pop
and
mov
sub
es
pop
lret
cmp
sbb
sbb
xor
xorb
pop
jg
cmp
sbb
jb
push
dec
cmpsl
mov
pop
leave
push
and
and
out
xchg
arpl
xchg
data16
lcall
aad
into
subb
ljmp
and
pop
ds
dec
lods
fcoml
mov
lds
cmp
dec
pop
ljmp
fistpl
insl
stos
mov
xchg
pop
pop
mov
jg
out
insl
andl
nop
add
adc
inc
lcall
push
push
push
hlt
and
into
cs
hlt
dec
xchg
test
fidivl
pop
loop
and
and
jbe
in
adc
cwtl
jecxz
xor
gs
test
jns
add
lods
mov
inc
jmp
xchg
repz
fbld
push
dec
jp
push
clc
xchg
mov
or
ja
adc
test
icebp
cmp
cmp
repnz
inc
rcr
addb
fsubrs
ret
pop
enter
in
into
cmp
pop
mov
les
ret
push
insl
jne
push
inc
cmp
jae
nop
addr16
mov
jae
mov
jmp
arpl
sub
push
push
aam
cmpsb
iret
inc
or
js
add
dec
xorb
daa
jnp
movsb
js
cwtl
lock
or
leave
lods
or
mov
or
loopne
xchg
adc
les
xchg
imul
lret
dec
fistps
xchg
mov
aam
je
jmp
xchg
add
aas
lods
sbb
psrad
xchg
add
push
cwtl
iret
sub
push
jnp
cs
mov
mov
adc
mov
loope
in
dec
int3
rcl
cmp
daa
sbb
inc
les
insl
mov
pop
in
js
pop
cmpsl
add
aam
mulb
out
inc
jl
outsb
and
pop
cmc
inc
ds
mov
or
mov
fstl
pop
add
push
aas
ss
std
test
sbb
cld
mov
stc
inc
or
sub
mov
push
push
jae
xchg
fsubrl
adc
adc
out
pop
sub
cmovno
lahf
cmp
xchg
scas
push
jae
xchg
adc
lahf
cwtl
xchg
insl
mov
and
jmp
inc
and
je
mov
dec
ja
insl
in
gs
iret
and
push
fildl
popf
pop
gs
pop
mov
je
in
xchg
push
xorb
mov
adc
cmp
pop
push
mov
add
in
imul
inc
imul
test
cld
cmp
scas
push
xor
test
sahf
xchg
sub
adc
cmp
xor
cmpb
arpl
cmp
jns
inc
or
arpl
int
out
out
test
add
inc
cmpsl
mov
mov
fcmovb
push
ja
add
push
cltd
mov
daa
stos
adc
mov
jno
push
aaa
notrack
js
push
les
out
lock
pcmpeqb
das
pop
push
mov
jo
ss
sbb
dec
mov
pop
xor
add
cmp
and
ja
int
imul
adc
xchg
test
cwtl
xchg
mov
popa
add
xchg
imul
pop
dec
add
push
add
jo
pusha
cmpsl
or
aam
aam
cmpb
es
ret
aaa
push
fsubrs
out
cmc
mov
xor
leave
mov
ret
mov
inc
jo
aad
jbe
pop
push
call
mov
gs
jb
mov
hlt
jnp
int
out
jl
lea
and
dec
out
pop
xor
das
in
jl
pop
and
daa
ficoml
jb
jnp
addb
loop
orb
sbb
adc
dec
jg
test
adc
or
push
filds
repnz
xchg
cmp
loopne
push
and
mov
push
jle
mov
sbb
testl
repnz
aam
inc
ret
cmpl
test
xchg
out
mov
cmp
stos
imul
pop
xchg
call
jmp
pop
aad
out
imul
das
mov
or
movsb
lcall
lds
popa
insl
dec
mov
inc
in
int
or
lret
add
and
jge
sbb
mov
mov
sbb
or
adc
or
enter
pop
clc
inc
sbb
test
xchg
xor
test
inc
ljmp
mov
push
test
movsl
test
lds
xchg
cmp
jo
xchg
push
or
pop
and
scas
ja
mov
jl
adc
xchg
scas
sbb
mov
cmp
push
mov
stos
mov
imul
sub
in
fildll
repz
mov
hlt
lret
adc
pop
jns
orl
xchg
xchg
inc
test
xbegin
jmp
cltd
rcll
out
ja
and
ret
ret
lcall
sbb
incl
cwtl
popf
sbb
xchg
sub
mov
pop
sub
hlt
jnp
cmp
mov
mov
ljmp
push
jg
pushf
adc
insl
aaa
test
bound
jl
cli
pop
adc
mov
ds
testl
xchg
leave
jge
add
cmp
push
push
gs
cld
push
out
mov
pop
or
push
jle
pop
in
cmp
adc
sbb
push
mov
mov
test
call
push
mov
jnp
mov
cmp
daa
pushf
out
fstpl
loopne
xchg
sbb
lahf
insl
loopne
push
and
cmp
les
mov
ds
sbb
lahf
sbb
pop
mov
or
cmp
pop
lcall
sbb
mov
leave
cmp
mov
dec
mov
jae
sub
lods
xorb
test
add
mov
frstor
in
and
and
lods
punpckldq
bound
fwait
push
jns
out
pushf
lds
fmul
scas
loop
imul
sub
lods
cmp
ljmp
xor
pop
cmp
inc
xor
data16
test
aam
jl
inc
std
scas
movl
sbb
push
lahf
cli
xchg
inc
jne
jg
rcrb
inc
lds
outsl
pop
xor
push
shlb
in
xor
loopne
iret
cmc
mov
fisttpll
je
and
scas
sbb
inc
imull
loopne
jmp
repnz
outsl
xor
dec
cmp
xorb
outsb
inc
inc
inc
mov
lods
out
pop
sub
inc
test
scas
push
mov
push
mov
ss
xchg
cmc
pusha
lret
inc
add
or
mov
jp
sbb
cwtl
cmp
fwait
jns
xchg
mov
pop
enter
ljmp
loope
loopne
mov
cmp
push
ret
mov
push
sbb
into
lea
or
stos
fbstp
dec
icebp
inc
inc
mov
movsl
jo
xor
inc
cmp
pop
test
inc
loope
into
jmp
jb
dec
stos
out
leave
les
mov
das
aas
jecxz
mov
mov
repnz
push
xchg
push
ss
sub
out
scas
jmp
notl
mov
dec
sti
add
dec
inc
mov
in
aam
mov
pop
dec
adc
test
pop
jnp
out
jnp
jp
jno
int
inc
cmpsb
les
sbb
shll
movb
test
mov
leave
pop
nop
stc
cmpl
mov
std
int
test
fdivl
push
inc
mov
xlat
aad
mov
push
cmc
mov
fimuls
mov
cmp
test
add
je
dec
lock
mov
f2xm1
out
daa
rcl
xchg
ds
stc
or
add
sub
adc
sti
xor
aam
cmp
xchg
push
inc
push
shll
test
mov
adc
ss
jbe
cld
ja
aas
mov
add
add
fwait
clc
jno
enter
call
push
jmp
xchg
cmp
lods
xor
es
lret
mov
pop
sub
idivl
pop
nop
xor
mov
cmp
sub
sub
jmp
xchg
enter
jle
das
sbb
mov
loopne
enter
sbb
testl
ret
mov
push
shll
mov
xchg
ficoms
xor
in
nop
inc
sbb
fwait
ds
stos
mov
dec
into
call
popa
lret
cwtl
scas
dec
popl
divl
xor
push
cli
addb
iret
lahf
out
push
sar
popa
mov
or
into
dec
shll
idivl
subb
enter
std
cwtl
sbb
mov
icebp
inc
arpl
lret
into
int
shr
fwait
js
ret
sub
mov
push
adc
xorl
shll
scas
push
jmp
or
cmp
nop
mov
or
add
inc
sub
mov
mov
jns
popf
imul
jp
rcll
ds
jnp
stc
mov
inc
cmpl
cs
mov
sbb
pop
pop
pop
jns
in
mov
cmp
inc
mov
adc
mov
or
pop
jne
adcb
pop
shlb
pushf
mov
xlat
push
xchg
sarl
inc
push
loope,pt
fcoml
loop
jno
cmpsl
and
push
ret
jne
lea
ret
add
mov
mov
push
jmp
out
jne
cmp
sbb
lds
jo
jnp
test
enter
cmp
das
push
inc
loope
stos
fdivrl
push
add
lock
mov
lret
aad
jbe
jg
cmpsl
repz
popf
xchg
cmp
out
es
js
daa
xchg
shll
popf
add
pop
enter
arpl
mov
push
adc
js
pop
jmp
sub
lahf
cld
adc
rorl
push
pop
enter
roll
mov
mov
push
js
lods
mov
clc
aam
cmp
xor
sub
std
push
mov
xor
mov
mov
mov
sub
cmp
pushf
jp
adc
pop
ret
jae
xlat
and
mov
xor
push
ret
cmp
lea
mov
mov
sbb
inc
cmp
nop
sti
hlt
jbe
and
adc
xor
dec
loop
iret
mov
bound
adc
add
cmp
push
subl
test
pop
daa
lea
and
or
push
mov
insl
mov
pop
push
add
pop
dec
push
fs
or
mov
aam
cli
in
cmpsb
lcall
inc
mov
movsl
xchg
jge
pop
jmp
xor
cmp
fcmovnbe
rolb
hlt
xor
push
and
das
mov
mov
xchg
fistl
in
imul
dec
out
fsubr
mov
mov
int3
subl
jp
mov
pop
js
sub
outsb
mov
dec
jle
jo
adc
adc
lahf
mov
stc
xorl
lcall
std
add
fiadds
loop
imul
push
addr16
insl
or
pop
mov
dec
and
cs
jecxz
sub
cli
dec
jmp
sub
dec
pop
sbb
sysenter
push
cmp
dec
mov
adc
lret
lcall
lods
adc
xlat
xchg
sar
xor
jnp,pn
mov
hlt
pop
int3
addb
jnp
adc
popf
shr
test
pop
fs
mov
js
dec
xchg
adc
inc
adc
sub
adc
aad
sub
or
ja
cmp
jns
and
stc
mov
sahf
cld
test
jl
sub
outsl
push
bound
insb
push
push
or
mov
mov
roll
pop
and
scas
push
sub
insb
scas
lods
int
test
push
mov
movsl
mov
sbbb
xchg
cltd
inc
mov
fwait
and
nop
cmp
mov
mov
loope
lret
cmovno
pop
pop
xchg
mov
bound
cmp
push
inc
jmp
xor
or
test
out
add
pushf
cwtl
push
hlt
mov
jp
and
jno
fbld
xchg
mov
fstpl
jle
sbb
fwait
add
sbb
pop
arpl
mov
sub
hlt
loop
jp
mov
sbb
inc
inc
addr16
outsb
dec
pop
test
mov
inc
push
cmp
scas
xor
add
cmp
scas
std
add
jmp
loop
mov
mov
js
inc
fmul
not
int
cmc
mov
push
pop
pop
sbb
jnp
movsb
push
fiadds
sub
inc
pop
lahf
jae
jno
mov
sub
xchg
shlb
xlat
sub
dec
outsb
cld
ffree
sarb
mov
lret
insl
icebp
ret
mov
xor
xorb
or
mov
mov
jo
mov
mov
shr
repz
add
test
pop
xchg
jnp
roll
leave
push
adc
das
faddl
mov
cltd
mov
das
lahf
sub
adc
rol
imul
xchg
test
jno
mov
add
jecxz
lahf
or
loopne
mov
push
scas
jmp
mov
add
shl
dec
adc
push
sbb
adc
push
sbb
xchg
mov
lock
aam
sbb
popf
es
lcall
arpl
test
pop
sub
cltd
and
test
js
ljmp
enter
inc
out
jnp
push
mov
cmp
fwait
cmp
jne
fsts
inc
adcb
out
ds
jg
testb
fsubrs
pop
pop
jbe
rorl
out
jge
gs
pop
adc
nop
enter
outsb
bound
jecxz
push
divl
cmpsb
pop
mov
jb
roll
cli
inc
shrl
mov
mov
in
popf
cmp
stos
xor
test
mov
xchg
rcrl
arpl
imul
push
ficompl
jg
rorl
cmp
subb
jg
xchg
or
adc
jle
gs
pop
sbb
or
mov
daa
lock
sti
insb
cwtl
out
jns
fwait
imul
cli
inc
push
mov
nop
adc
int
sub
inc
sbb
jb
xor
shll
je
jge
mov
jp
insl
push
scas
add
repz
rcr
sbb
inc
pop
in
stos
movsb
pushf
mov
jbe
mov
dec
jns
sub
ret
mov
movsb
in
add
out
out
cs
lret
adc
call
mov
les
bndldx
add
jnp
addb
call
ret
cmpsl
jp
adc
jnp
test
loope
cmpb
sub
aad
sarl
lret
jle
push
addr16
jnp
push
push
add
ja
cs
pop
adc
aad
inc
or
mov
xor
add
pop
xchg
xor
xor
inc
sbb
mov
pop
xchg
dec
mov
add
jle
pop
bswap
jnp
mov
out
lcall
pcmpgtw
imulb
lret
cmp
jmp
fs
sti
es
mov
insb
jl
xor
mov
inc
mov
jns
jns
call
lock
fildl
sbb
mov
aas
rcl
sarl
in
mov
sub
shll
icebp
aas
sub
fs
fisubl
mov
je
pushf
jle
push
clc
mov
push
pop
sub
ret
dec
lea
gs
lods
pop
sbb
push
nop
xor
add
leave
aam
pop
movsb
lret
inc
leave
sarl
jns
lods
mov
cltd
loope
dec
push
daa
fildl
sbb
pop
cmpsl
cmp
sub
xchg
xor
xchg
ss
and
es
rcl
pop
mov
dec
notl
add
dec
stos
call
fistps
push
jmp
push
cmp
jo
xchg
sbb
addr16
sbbb
imul
lret
jmp
es
jno
adc
scas
ret
movsl
test
jg
adc
outsl
outsb
mov
inc
lock
jo
dec
pusha
xlat
out
pop
add
jns
dec
popa
mov
aas
push
ret
mov
push
das
lret
push
into
and
out
mov
add
mov
add
xor
mov
jl
jae
lods
mov
dec
aam
or
lcall
divl
add
push
dec
lds
lds
flds
mov
leave
mov
mov
inc
out
sbb
in
pop
jg
gs
jns
add
mov
xor
and
fidivl
xchg
xor
cmp
pushf
adc
sahf
pop
jge
adc
out
insl
and
sahf
shlb
repnz
cs
cs
cwtl
into
adc
cmp
ss
inc
add
repnz
inc
add
call
jg
mov
ss
mov
inc
scas
mov
gs
push
mov
jo
pusha
outsb
pop
ret
xchg
or
rol
adc
sub
test
lods
cs
bnd
imul
mov
pop
cmp
pop
add
inc
cmp
cwtl
xchg
lock
push
stc
je
adc
fistpll
lret
scas
pushf
and
popa
mov
test
movsb
pop
mov
push
xchg
out
push
sar
xchg
mov
add
pop
test
dec
je
shll
into
rolb
cmp
push
cmpsl
xchg
out
pop
cmp
mov
adc
mov
xor
jo
xor
sbb
jo
mov
fsts
add
inc
cltd
and
adc
xor
inc
push
adc
sbb
ds
fnstsw
test
test
jo
mov
fmuls
add
sbb
iret
std
pop
push
jle
push
adc
or
cmp
xchg
mov
sbb
dec
sub
push
ja
xor
shrd
or
mov
mov
sbb
jmp
out
test
mulb
loope
mov
hlt
cmp
imul
sub
subb
push
sub
test
faddl
push
jb
mov
ds
xor
sahf
jae
mov
or
xchg
stos
mov
xchg
gs
xor
push
sbb
xchg
into
scas
dec
mov
push
gs
adc
notw
pop
pop
aad
rolb
mov
pop
in
mov
mov
shlb
jl
fisubs
xor
mov
out
mov
rorl
arpl
cmp
enter
flds
inc
outsb
inc
dec
jbe
jle
or
and
icebp
movsl
pop
jb
inc
dec
and
jb
lea
mov
sarl
nop
push
ds
inc
xchg
inc
fimuls
mov
lret
roll
outsl
in
cli
insb
cmc
sarl
daa
sbbb
add
mov
lods
cli
xchg
xchg
jb
jecxz
or
cmc
xchg
push
not
dec
adc
popa
pop
and
lock
psubd
xchg
mull
jecxz
sbb
aas
jmp
cmp
enter
push
or
inc
sbb
sbb
lahf
sbb
jns
mov
imul
nop
or
inc
xchg
xchg
test
fs
mov
mov
ds
fnop
dec
cmp
mov
or
mov
idivl
js
xchg
mov
xchg
push
cmpb
outsl
cmp
sub
lret
mov
push
push
pop
jecxz
pop
mov
insb
mov
sbb
in
sub
jnp
xor
insb
sub
sbb
or
dec
ja
mov
inc
cs
out
and
mov
jae
dec
in
sti
mov
in
push
insl
sbb
jb
das
push
popa
popl
or
xor
xor
push
out
cmp
mov
jmp
negl
xor
xchg
lock
and
sub
or
decl
sahf
push
out
xchg
cmc
stc
xchg
fmuls
faddl
rclb
xor
or
std
mov
psubb
dec
xchg
bound
movsl
pop
sbb
icebp
pop
les
jecxz
xor
mov
call
push
jle
fiadds
lods
jl
lcall
push
push
popa
and
scas
inc
jle
int
sbb
push
lahf
sub
inc
sub
shrb
or
adc
in
jmp
pop
subl
jnp
and
enter
test
push
push
test
jns
popa
xor
mov
mov
push
cs
sub
loop
sub
mov
sub
mov
mov
gs
mov
push
inc
popa
mov
mov
add
pop
and
les
push
sbb
mov
push
stos
cltd
stc
jp
xlat
insb
fmuls
fistpl
inc
adc
fstpl
xlat
cmp
jmp
xchg
mov
imul
scas
bound
loope
cli
sahf
push
pop
mov
adc
or
ss
ja
xor
pusha
mov
cs
shlb
pop
push
xor
fistpll
pop
mov
out
sahf
mov
idivl
loopne
fs
push
lods
adc
leave
mov
push
inc
jno
push
dec
mov
inc
inc
shll
out
jno
into
cwtl
je
das
xor
xor
pop
xor
xor
and
repnz
pop
ret
hlt
add
push
push
cmp
nop
test
jnp
push
adc
cwtl
push
test
mov
mov
dec
arpl
add
in
cmc
mov
mov
test
xor
xchg
and
std
jnp
push
sub
dec
xchg
js
test
and
adc
push
mov
push
aad
addr16
repz
sbb
xchg
inc
cmp
repnz
sub
shrl
les
mov
enter
adc
movsl
in
fwait
jae
pop
mov
add
jne
push
xchg
popf
sbb
ss
mov
sarl
sbb
scas
bound
push
cmp
mov
popf
and
popf
ja
sub
mov
dec
inc
fnstenv
popa
inc
int3
test
je
pop
fwait
jmp
mov
sub
xorl
addr16
pop
lcall
shrl
push
push
push
sbb
jl
dec
push
cmp
repz
das
test
xor
dec
rolb
std
mov
dec
inc
pop
shr
mov
popa
or
jecxz
push
or
mov
scas
shl
scas
fcmovb
rcrb
jmp
sti
xchg
sbb
loopne
mov
mov
out
adc
arpl
inc
rcl
js
push
push
test
dec
sub
adc
mov
push
inc
ret
cmpsb
push
das
push
adc
fdivrs
test
push
jmp
ja
add
inc
mov
adc
jp
jp
ljmp
loope
mov
out
mov
and
sub
hlt
sub
shlb
cmpsb
xchg
pop
outsl
icebp
mov
pop
jo
icebp
push
adc
das
xchg
adc
inc
add
mov
scas
add
xchg
cmp
push
pop
cld
repnz
leave
out
and
les
mov
lock
mov
jg
jae
xchg
inc
jp
cwtl
cmpsl
mov
xchg
call
out
jb
loop
mov
outsl
sub
stc
dec
dec
cld
out
add
cld
out
sub
mov
clc
inc
mov
jmp
push
aas
inc
xlat
enter
je
lods
scas
in
enter
cmp
addr16
ds
xchg
xchg
sbb
incl
cmpsl
adc
jp
mov
popa
fimull
ja
sub
loope
ds
mov
and
mov
sub
and
int
fcomip
mov
mov
add
inc
mov
jecxz
mov
ja
lcall
bound
push
loop
sbb
mov
sub
out
cltd
insl
or
shll
push
cwtl
fisubl
cwtl
nop
lea
xchg
popa
es
scas
fbld
shlb
lods
dec
aas
jecxz
pop
insl
mov
pop
in
xor
mov
or
dec
mov
movl
xchg
jmp
lahf
testb
in
sub
loope
jae
inc
repnz
mov
leave
and
iret
pop
pop
negl
in
push
js,pt
mov
inc
insl
mov
inc
dec
inc
xchg
mov
shlb
inc
xor
jmp
scas
lock
xchg
mov
and
xorb
std
add
data16
and
push
lods
add
mov
mov
cmp
sbb
inc
pop
cli
mov
lea
and
shll
movsb
movsl
in
cltd
cmc
xor
imul
or
xchg
ljmp
adc
jns
inc
inc
cmpsl
inc
mov
sbb
pop
outsl
lahf
dec
dec
in
xor
pop
sahf
clc
call
and
sbb
call
scas
stos
call
insb
gs
jmp
mov
cmp
cmp
repz
rolb
nop
test
add
jp
xchg
xchg
mov
inc
lock
imul
pop
xor
test
inc
mov
sbb
test
je
stc
in
movsl
and
fildl
xor
leave
inc
nop
imul
push
aam
fsubrs
test
scas
pop
adc
push
and
aas
jne
out
adc
jnp
dec
lret
adc
pop
push
rolb
gs
cmp
cmpsb
std
jmp
jge
push
fs
inc
aad
cltd
ds
decb
cmp
cmp
xchg
mov
jb
add
push
fbstp
pop
xor
push
shll
out
dec
pushf
jae
insl
movsb
adc
dec
fldl
and
jbe
push
pop
jle
pop
dec
call
xchg
mov
lods
jb
hlt
or
jl
decb
popf
stc
push
mov
aad
sub
adc
insb
xor
jp
add
and
push
lahf
ret
push
bound
daa
sub
sub
mov
cmp
ja
xchg
lea
sub
cmpsl
push
in
cwtl
mov
sub
scas
aaa
in
lea
push
lds
pop
sti
adcb
and
inc
push
push
ljmp
dec
cmp
mov
cld
or
loope
in
xlat
addb
in
mov
push
sti
inc
sahf
mov
imul
nop
or
sbb
adc
jns
adc
int
adc
cmpsb
fdivl
push
mov
pop
stos
push
fsts
loope
jle
add
ss
push
cmpsl
mov
pop
imul
fidivs
sti
cmp
imul
fucom
push
rorl
adc
jecxz
mov
add
xchg
shlb
mov
push
dec
or
and
lcall
adc
push
cmp
jge
cld
jb
or
mov
popa
repnz
push
je
cmpsb
inc
fildl
std
test
mov
mov
or
out
stos
aas
fstps
pcmpgtd
cltd
push
mov
push
xchg
mov
stos
clc
pushf
inc
cmp
stc
mov
popf
add
jne
fistl
xchg
mov
jge
cmpsl
in
mov
aaa
testb
mov
or
aad
sbb
ret
lret
mov
and
lcall
cmp
xchg
jg
movsl
sbb
add
push
ud1
ds
jmp
inc
loope
dec
and
negl
fwait
not
xlat
push
sbb
loop
pop
pmulhw
add
cmp
lock
mov
push
pop
cli
xchg
bound
xor
lock
or
fdivl
movb
es
or
or
mov
push
xor
inc
jg
scas
xchg
push
fwait
xor
arpl
dec
sbb
int
rclb
inc
das
clc
and
sbb
jb
sub
xor
xchg
daa
out
gs
jne
dec
pop
xchg
push
sti
push
mov
and
jnp
jno
and
xchg
pusha
push
jnp
mov
mov
pop
mov
mov
daa
cwtl
add
inc
iret
cld
dec
jmp
out
pop
jo
jno
inc
cmc
cwtl
pop
pop
sub
jl
ficomps
dec
push
pop
repz
outsl
cmpsl
fs
inc
add
push
mov
mov
and
rcll
fidivl
idivl
inc
fbstp
jle
mov
push
loope
mov
clc
fdivrp
xchg
xchg
xchg
ret
outsb
add
out
mov
and
mov
push
mov
and
stc
cmp
icebp
inc
sub
js
pop
rorb
inc
scas
mov
mov
out
cmp
ds
cmpsl
mov
mov
dec
hlt
lea
push
push
in
bound
out
push
mov
jmp
xlat
add
cs
loop
or
pusha
sbb
and
shlb
incb
and
xor
imul
data16
imul
pusha
gs
inc
xchg
sub
adc
movsl
scas
cmp
dec
xchg
adc
jle
jp
data16
das
jb
mov
adc
fistl
aam
rcr
hlt
insl
movsb
mov
out
and
sub
jno
ret
inc
test
jb
cwtl
stos
and
xchg
or
movsl
mov
push
out
sub
or
cltd
inc
sub
enter
cmp
stos
lods
add
pop
fstl
int3
gs
mov
sbb
aam
sub
es
cs
sbb
pop
dec
enter
leave
mov
loope
sbb
lods
dec
movsl
cmc
stos
scas
ss
xchg
dec
adc
lret
add
pop
leave
scas
xchg
movl
ja
push
adc
or
aas
mov
and
cmp
ret
fs
push
push
bnd
push
and
loopne
je
push
inc
xchg
shl
mov
call
jae
push
movsl
sbb
adc
push
xor
mov
jp
orl
cmc
mov
out
into
or
and
shlb
mov
push
and
test
jp
neg
adc
jb
shrl
lea
ja
mov
into
sbbb
and
divl
inc
add
mov
sarb
push
aad
mov
lcall
int
pop
push
cltd
mov
imul
jl
xor
loop
dec
xchg
jb
mov
mov
out
stos
xchg
mov
stc
fs
in
sub
and
and
fs
inc
fistps
lods
shrl
mov
mov
xorb
div
sbb
cld
adc
loop
xor
dec
repz
dec
pop
and
mov
pop
shr
pop
imul
xchg
fcmovbe
test
fiaddl
mov
push
aas
push
adc
mov
ds
and
loope
filds
push
addb
cmp
test
scas
or
cli
inc
stc
addr16
loopne
pop
push
jmp
rclb
ds
or
cmpsb
jecxz
and
mov
es
add
movsl
sub
icebp
jns
into
xchg
repnz
push
xchg
lea
out
fsub
divl
lret
adc
jb
test
dec
jns
mov
mov
xor
mov
sub
leave
dec
out
fs
xchg
jae
divb
arpl
dec
das
test
and
nop
sbb
call
jle
sti
push
adc
fmull
outsl
inc
xlat
testb
test
sbb
and
cmc
inc
sbb
stos
mov
and
adc
sbb
sahf
sbb
mov
insl
xchg
rcl
xchg
mov
mov
or
shll
cmp
jbe
xchg
negb
inc
mov
push
adc
cmp
jae
jge
or
cs
ret
ljmp
xorb
in
arpl
mov
xchg
cmp
pop
loopne
shl
mov
cmp
jb
neg
stos
dec
xchg
inc
mov
mov
mov
add
add
ja
jp
fsts
xchg
dec
jae
es
xor
jnp
cli
fwait
in
aas
cmp
sbb
icebp
popa
cmp
mov
jno
lea
mov
icebp
push
or
es
lock
test
jne
push
xchg
xor
mov
out
jae
rorb
cmp
push
pop
cmp
ljmp
sub
or
pop
sbb
ss
inc
push
mov
jp
or
sbbb
jae
jnp
xchg
xchg
inc
pop
inc
xchg
inc
ret
or
fadds
or
mov
xchg
rclb
dec
pop
xor
add
inc
aas
cmpsl
mov
mov
repnz
test
fstp
or
sahf
dec
dec
sub
and
ja
xor
adc
xchg
bound
mov
sub
mov
and
jle
test
loopne
cmpsb
cltd
out
jmp
cmpsl
pop
outsb
push
aaa
clc
sub
pusha
fldcw
loopne
outsb
adc
mov
sbb
pop
xorl
out
dec
andb
loop
mov
int
imul
xchg
es
sbb
std
stc
jmp
pop
push
adc
inc
cli
jge
jbe
insl
jl
push
add
pop
adc
jg
dec
fistps
out
dec
inc
xor
lods
sbb
inc
push
mov
shrb
scas
inc
jle
cmp
inc
adc
xchg
or
pop
inc
pushf
inc
push
loope
stos
jnp
jo
mov
test
xchg
pop
popa
shrl
lret
cmp
aas
and
sub
mov
jg
movsb
xchg
gs
mov
movsl
xchg
leave
or
xchg
and
xchg
loope
stos
es
sti
test
int3
dec
movsb
mov
xor
and
jns
stos
mov
jecxz
in
and
mov
imul
test
or
mov
cwtl
movsl
out
je
andb
cmp
pop
ss
das
popa
in
cmp
hlt
xor
or
int3
jns
cltd
out
inc
ffreep
rolb
sub
mov
mov
add
pusha
stc
stc
je
pop
data16
enter
and
cs
or
enter
in
testl
xchg
rcrb
daa
add
dec
mov
scas
test
scas
outsl
push
out
ss
push
repz
mov
mul
mov
imulb
cmp
lods
lea
adc
leave
fwait
mov
mov
jo
nop
out
je
test
outsl
lea
rclb
jbe
cmc
fidivrs
fldenv
pushf
jae
testl
les
jmp
push
inc
mov
cmp
pop
dec
dec
push
arpl
aaa
mov
mov
sub
and
in
xlat
pop
mov
stos
mov
icebp
scas
cmovg
sub
lods
and
lret
aas
xorb
ret
jecxz
pusha
clc
push
cmp
lock
mov
and
inc
dec
xor
pop
pop
adc
push
inc
insl
mulb
pop
adc
cld
mov
add
outsb
shlb
jns
xchg
xchg
lret
test
xor
addr16
iret
in
jl
repnz
mov
mov
cmp
jns
jmp
and
add
mov
jl
rolb
repnz
push
mov
test
loopne
push
xchg
movsb
mov
dec
jne
mov
out
fmuls
mov
or
push
push
mov
xchg
dec
cmpsl
lret
xchg
mov
scas
adc
maxps
popf
xchg
fwait
mov
test
sub
movsb
dec
in
imul
xor
sub
faddl
pop
sub
pop
fwait
mov
frstor
cmp
cmc
in
aam
cmp
sbb
les
clc
fidivrl
jg
rorl
mov
dec
lods
mov
xchg
and
cs
dec
and
jle
mull
outsb
int3
jns
out
cmp
jp
mov
and
fimuls
jns
popl
xor
int3
add
cmp
jp
loop
xor
mov
iret
cwtl
test
sub
jl
inc
je
and
jo
int
cmp
sarb
inc
push
sub
and
scas
das
pop
int3
ss
and
fmull
mov
pop
cmp
ret
pushf
repnz
mov
cmp
xlat
jg
out
push
fbstp
inc
add
jl
sbb
sbb
or
mov
xor
dec
sarl
aad
or
or
iret
xchg
bound
arpl
add
loopne
pop
mov
test
gs
mov
and
insl
out
or
jbe
call
inc
jl
dec
push
outsl
out
xor
xchg
popf
ss
pop
test
mov
jns
test
jb
icebp
lcall
out
inc
ret
xor
pop
jnp
or
bound
push
mov
imul
jno
xchg
fwait
xchg
mov
lret
add
or
push
loopne
outsl
lods
outsl
dec
jg
fcompl
das
inc
lret
scas
pop
aas
out
add
int
adc
addb
xchg
insb
pop
lea
adc
inc
xchg
pusha
repz
fsts
and
repnz
pop
popa
test
cmpsl
jo
cmp
fwait
sub
pushf
outsb
stos
ds
sub
mov
dec
dec
mov
out
scas
xor
sub
sbb
add
jns
fbstp
push
jmp
xlat
cmp
sub
leave
shll
pushf
shlb
cmp
aaa
sub
dec
pop
loopne
ret
cli
dec
push
jns
and
loope
xchg
adc
xchg
push
inc
add
sbb
and
call
add
jecxz
sub
pop
mov
pop
xchg
aaa
fcoms
add
fwait
stc
movsb
popf
sbb
xor
cmpsl
mov
dec
idivb
sub
cmp
in
sti
xor
js
pushf
add
mov
scas
dec
mov
jg
es
outsl
xlat
mov
out
inc
das
loope
pop
dec
out
out
fsubs
stos
inc
sti
in
cmp
add
test
popf
and
jg
in
outsl
fadds
lahf
push
pop
bound
inc
jmp
mov
push
mov
lods
fildl
ret
test
or
bound
xchg
jae
and
ret
shlb
imul
ljmp
lahf
out
fmul
pop
xor
mov
inc
jne
adc
mov
inc
addb
mov
mov
mov
movsl
out
in
add
out
insb
movsl
jo
xlat
xchg
aam
cld
pop
imul
xlat
xor
shlb
test
lret
jo
and
push
mov
icebp
mov
lods
cmp
es
int3
sahf
cmp
sbb
mov
or
adc
gs
adc
xchg
jae
int
xchg
and
xchg
sarb
pop
lock
sub
sbb
fcoml
stos
in
repnz
aam
xorb
dec
and
cmpb
daa
imul
js
jae
and
adc
inc
fs
jns
and
into
xchg
xor
ret
ds
pop
in
dec
adc
add
es
mov
aaa
sbbb
xchg
rorl
fnstcw
scas
push
mov
mov
xor
mov
inc
jl
enter
jo
push
pop
pop
into
jne
enter
call
in
ret
jno
les
ja
push
insb
fs
mov
jle
mov
mov
call
ret
adc
pop
negl
inc
jbe
jbe
ja
rorl
inc
add
jl
or
lret
mov
inc
rorb
adc
lret
es
xor
loopne
add
cwtl
sub
sbb
lock
xchg
adc
stos
inc
out
dec
loope
out
and
or
std
wbinvd
ljmp
shlb
mov
jb
call
or
addr16
mov
scas
insl
push
fistps
stc
mov
movsl
fs
push
cs
std
and
fldt
jo
das
ljmp
iret
push
jae
shrb
hlt
xor
mov
movl
jmp
mov
pop
aas
adc
pop
aam
pop
fs
cmp
push
pop
sahf
mov
xchg
lcall
fldt
pop
xchg
ss
popa
xchg
inc
ret
xchg
inc
push
cmp
jl
sbb
test
sti
rcrb
pop
fcomip
clc
xchg
xorl
loopne
sub
fistps
and
ds
push
movsb
push
stos
xchg
daa
xchg
xchg
mov
cwtl
sbb
leave
sbb
push
mov
push
xchg
hlt
lcall
das
add
xor
rcr
push
jg
xor
xchg
inc
movsb
pop
mov
sub
sbb
aaa
pushf
xor
inc
aam
adc
leave
xchg
dec
push
test
dec
loope
adc
xchg
jg
and
lods
pop
mov
push
ret
xor
mov
mov
pop
shr
fs
pop
js
in
push
xor
mov
mov
adc
decb
aas
sbb
sbb
jae
jne
sti
xchg
insl
in
mov
and
stos
fmull
into
add
mov
jae
fbld
daa
jb
rcll
int3
mov
cs
mov
sub
test
sbb
add
lods
sub
dec
lret
sbb
cmp
xor
mov
xchg
fs
cmp
and
xor
mov
cmpsl
test
es
xchg
push
cmp
out
pop
mov
sbb
jb
jmp
inc
fucom
xlat
push
lock
scas
sub
add
adc
js
cmp
mov
roll
out
or
into
pop
jo
sarl
mov
mov
pushf
adc
sub
stc
iret
mov
inc
loopne
xchg
aad
mov
add
xchg
scas
js
mov
ljmp
adc
cmp
aam
arpl
fstpl
addl
stc
adc
nop
jmp
out
and
mov
insl
add
xor
js
jo
sub
pop
negl
iret
push
xor
pop
stos
test
dec
bound
iret
sbb
fwait
test
xor
cmp
outsl
push
adc
out
mov
subb
fbld
fstps
test
enter
lock
ffreep
and
cmp
fcmovnb
sbb
mov
mov
int3
jge
cmpsl
add
cld
mov
incl
mov
push
in
pushf
inc
sub
sarl
daa
enter
jnp
push
out
hlt
pop
cmpsb
aaa
add
jno
imul
pop
pop
fnstcw
out
cld
adc
pop
jmp
push
push
jl
xlat
addr16
test
shll
les
jo
pop
loop
dec
ljmp
add
pop
ret
aad
dec
push
movsl
leave
jb
cmc
outsl
mov
roll
lds
in
cmp
cmpsl
mov
inc
add
push
dec
test
jp
dec
sbb
sub
xchg
add
and
outsb
je
xchg
sar
loope
in
adc
xchg
mov
sub
sub
adc
std
rcl
jnp
cmp
loop
xor
cwtl
das
movsl
shrl
push
sub
dec
mov
aas
pop
jbe
sub
sub
jl
adc
xor
lds
jp
dec
sub
jnp
mov
loopne
or
fnstsw
nop
int3
add
xchg
cmp
ret
mov
fdivrs
popf
jno
pop
out
ficoml
push
and
in
jae
ret
sub
push
xor
adc
subl
ret
testl
pop
cmp
xchg
adc
enter
mov
xor
and
shl
xor
ds
mov
push
push
push
ret
xchg
cmc
leave
loop
pushf
push
mov
sahf
rclb
movups
xor
xor
les
outsl
jmp
imul
push
movsb
nop
pop
and
push
jne
ljmp
jle
sub
sbb
cmp
sub
cmpsl
jb
xchg
or
jl
sub
dec
repz
push
in
rep
mov
sbb
test
jp
mov
adc
inc
in
imul
cli
rcrl
pop
sbb
cmpsb
lahf
adc
stc
jae
es
mov
movsl
into
loope
pop
aam
adc
imul
pop
sbb
je
lea
mov
gs
sbb
dec
lods
in
dec
add
lds
out
push
mov
das
push
test
and
insb
pop
sub
add
xchg
into
mov
sub
in
mov
adc
push
sbb
mov
mov
mov
xorb
pusha
repz
inc
dec
fsubr
in
lods
sarb
mov
out
xlat
je
scas
int
ds
dec
and
push
pop
xor
jl
shlb
cmp
std
xor
or
rcpps
xor
test
xor
sub
clc
sbb
xor
mov
pop
dec
pop
sbb
xor
dec
int3
cmp
lods
fwait
cmp
insl
out
imull
movsb
and
mov
shrl
in
shlb
and
sbb
cmpb
insl
push
test
lret
push
mov
gs
cmp
inc
pop
xchg
shlb
jecxz
or
sahf
outsl
sub
mov
and
sbb
dec
jo
adc
jo
pusha
ja
es
sbb
cmp
xchg
xor
cli
idiv
cltd
pop
add
jg
pop
js
lods
dec
and
push
fs
dec
in
mov
fidivl
add
or
inc
pushf
fstps
jg
popa
and
add
push
xchg
pop
mov
sbb
sbb
inc
jge
insl
cmpsl
xor
push
outsb
inc
fdivp
adc
jecxz
pop
sbb
popa
jmp
mov
jle
pop
push
inc
pop
inc
sti
xchg
xchg
outsb
dec
movsl
jg
xor
outsl
aad
xchg
or
ljmp
push
out
inc
test
inc
enter
pop
adc
aaa
popa
addr16
cmp
sti
jb
mov
push
inc
sbb
push
jge
jmp
xor
jne
je
and
iret
addr16
pop
sbb
mov
xchg
sbb
sysret
das
daa
in
out
xchg
mov
push
xor
in
data16
sarb
dec
rcrl
push
cltd
jge
mov
mov
xchg
clc
ss
push
movsb
aas
lds
sbb
pop
mov
xchg
mov
xchg
nop
test
mov
inc
xchg
push
push
arpl
cmpsl
out
in
fisttpll
popf
push
cmp
je
push
push
pop
push
pop
push
pop
sbb
sub
push
ss
clc
insb
into
adc
outsl
stos
mov
mov
bound
and
mov
jle
stos
cmp
pop
lahf
loop
push
shl
arpl
xchg
jmp
insb
xor
fs
mov
mov
push
enter
out
cmp
mov
test
mov
dec
jns
cmp
cmp
mov
in
addr16
mov
cmp
sbb
and
pop
mov
pop
bound
sub
aad
or
es
ret
pop
and
sbb
shrb
pop
fmuls
xchg
roll
enter
mov
push
cmpsl
les
subb
pop
nop
idivb
mov
repnz
jne
push
lds
pop
xor
sub
or
shr
inc
arpl
pop
cli
adc
mov
shlb
call
push
in
mov
jmp
inc
rorb
sbb
cmp
daa
lock
sub
and
repnz
out
test
rcrb
cli
push
dec
fs
mov
mov
jne
test
out
mov
mov
imul
and
data16
sub
push
gs
test
mov
pop
cld
ret
dec
std
or
sub
hlt
inc
sbb
cmp
test
push
inc
push
call
rcl
xchg
lret
aad
fbstp
je
ficomps
and
in
movsl
sti
xchg
not
fwait
lret
pop
xor
aaa
gs
xchg
pop
hlt
mov
out
cmp
add
jne
pop
sub
adc
or
pop
lock
mov
gs
mov
sbbb
in
jae
dec
in
dec
pushf
testb
add
jae
insb
add
and
dec
pop
mov
xor
mov
orl
fsubrs
bsf
mov
dec
mov
inc
cmp
sbb
or
icebp
call
mov
xor
dec
inc
in
out
xor
aaa
add
sbb
adc
pop
jmp
or
inc
fcomps
dec
mov
aam
jnp
hlt
sbb
cld
mov
repz
leave
and
insl
movsb
test
mov
xor
push
mov
adc
jle
mov
cmpsl
in
or
out
xor
fdivl
mov
sahf
das
fmuls
imul
push
paddsw
or
out
push
stc
mov
adc
add
cmc
push
insl
dec
cmp
fwait
movntq
lret
movsb
imul
loope
push
mov
add
dec
xchg
cld
xchg
xchg
sub
roll
imul
sub
inc
mov
loopne
push
pop
dec
mov
jb
dec
int3
add
mov
xchg
repz
inc
xchg
js
ficoml
lret
pop
pop
push
stos
in
ss
push
rorl
nop
repz
cmpsl
fnstenv
xchg
xor
ljmp
add
mov
inc
mov
pushf
inc
and
xchg
adc
mov
jl
xchg
cli
xchg
push
add
push
int3
pop
cmp
mov
stc
cli
sbb
in
mov
and
add
cmp
dec
pusha
stos
imul
test
xor
jle
mov
out
cld
push
and
inc
in
pop
pusha
xor
add
out
cmpsb
add
mov
leave
cs
or
es
mov
or
fcomps
add
mov
sub
test
jecxz
lds
stos
push
adc
pop
fbld
push
stos
sti
rclb
push
andl
cmp
push
sub
shrb
int
pop
jnp
mov
xchg
sbb
adc
bound
jge
mov
inc
add
hlt
loopne
push
fdivl
popa
and
jb
push
sub
pop
sti
add
clc
sbb
add
push
mov
subb
mov
or
xchg
dec
cmpsl
dec
or
sub
jmp
mov
jmp
movsb
sahf
fcompl
inc
dec
scas
sbbb
fisubl
jnp
sbb
test
ret
aam
sub
jns
sbb
and
out
and
gs
jg
cmp
lea
rol
pop
jno
adc
mov
pop
dec
add
sti
iret
es
clc
push
jp
add
xor
pop
jecxz
in
cmp
pop
mov
int3
or
test
mov
es
push
fcmovbe
sbb
bound
cmpsl
out
mov
js
xchg
popl
mul
shrb
cli
aam
fcoms
mov
push
mov
jecxz
cmp
in
xor
jnp
pop
jp
or
inc
ror
in
shrb
sbb
add
insl
cmp
mov
test
pop
jae
adc
jl
pop
dec
fimuls
mov
bound
jbe
jno
movsl
fcoml
es
enter
mov
mov
es
lds
xor
dec
jbe
mov
push
and
mov
dec
je
add
daa
or
inc
adc
imul
sub
test
into
or
je
lea
mov
ja
jnp
add
inc
sub
loop
sub
jp
mov
fs
repz
sub
data16
inc
rcl
pop
cmpsb
int3
mov
into
and
jge
cmp
pop
jno
mov
in
insl
dec
ficoms
in
in
inc
std
jg
das
jp
das
or
mov
lret
xor
xchg
in
mov
pop
hlt
out
jno
mov
repnz
es
cld
addr16
push
xor
cmp
jne
outsl
popf
loop
mov
mov
lods
nop
pop
sbb
pop
ja
js
sahf
or
cld
add
iret
test
mov
or
scas
sahf
dec
sub
test
popf
add
sbb
mov
jae
xor
fldl
pop
jp
push
fmul
fldt
fists
pushf
adc
dec
pop
xchg
dec
mov
inc
xchg
dec
mulb
test
mov
popf
or
adc
repz
clc
pop
test
and
xchg
imul
jp
outsb
cld
outsl
sub
jecxz
xor
fildl
jp
mov
addr16
pop
imul
add
fsubrl
test
addl
xchg
xor
inc
add
lret
icebp
aam
jb
in
loop
nop
push
mov
outsb
int3
mov
pop
jmp
test
cmp
pop
jp
shll
fstps
rol
ljmp
xor
push
and
pop
mov
inc
xchg
outsb
movl
mov
pusha
pop
mov
subb
inc
scas
pushf
xchg
and
xor
shl
loop
lock
ret
adc
ds
lea
sbb
sbb
dec
rep
lahf
adc
push
test
dec
jl
scas
cwtl
xchg
icebp
or
sub
sub
mov
xlat
mov
mov
xchg
xor
dec
dec
pop
dec
ljmp
sahf
daa
xchg
out
je
sbb
bswap
mov
pop
pop
mov
xchg
lock
cmp
ret
sub
push
or
inc
cwtl
in
mov
push
sarl
mov
lods
add
bndldx
sub
loopne
fs
sub
cmp
lods
push
and
rol
loop
add
cmp
iret
inc
cmp
in
je
inc
push
scas
cmp
mov
inc
lds
fucomi
add
cmp
test
xchg
jnp
dec
test
sbb
clc
jns
in
fsubrs
cmp
orb
adc
std
outsl
or
mov
sub
lock
lods
out
lret
out
add
js
jne
pop
scas
ret
dec
lahf
or
xor
inc
jb
mov
inc
push
nop
xlat
or
das
aas
pop
mov
jecxz
or
stc
xlat
mov
daa
push
mov
dec
loop
out
xor
jp
loop
repnz
dec
and
ja
push
nop
mov
mov
mov
sub
lret
push
mov
inc
xchg
es
cmp
mov
stc
push
stos
mov
pop
jne
negl
mov
push
mov
cmp
out
imul
xor
sub
enter
mov
js
notb
cmp
pop
push
movsb
repz
loope
js
pop
and
cld
mov
jle
movsb
mov
xor
cli
out
jns
mov
add
sub
sub
repnz
mov
out
adcb
xchg
cmp
jle
imul
mov
dec
pop
cmp
lret
xchg
dec
leave
jge
mov
or
inc
and
ficoms
fwait
jl
or
mov
in
test
clc
inc
stos
lret
hlt
or
mov
xor
shll
loope
fucomp
inc
je
mov
push
mov
push
mov
jbe
xchg
pop
cmp
jnp
push
sub
mull
jmp
jns
jns
or
ret
push
jno
dec
ljmp
cmp
pop
movsl
pusha
push
lret
lods
pop
sbb
std
hlt
add
cs
cmp
adc
rolb
nop
dec
in
xchg
arpl
dec
call
xchg
xor
bound
std
mov
rcll
pusha
sub
xchg
fistl
mov
pop
fstpl
cltd
in
mov
cmp
mov
cmp
mov
inc
pop
ficoms
lods
push
mov
lcall
jnp
rclb
push
jg
sub
cld
outsb
inc
pop
in
jne
imull
mov
js
xchg
nop
dec
hlt
mov
jb
sbb
movsb
std
pop
xchg
scas
negb
movsl
loopne
cmp
cmc
idivl
sub
jo
imul
cmpsb
cmp
leave
jecxz
movsl
insl
dec
movb
mov
cs
jmp
fcoml
dec
fwait
xor
out
jp
sub
dec
sub
push
lods
jecxz
or
mov
pusha
rcrb
push
loope
xchg
cmpsl
negl
rorl
jnp
dec
dec
dec
bnd
sahf
adc
dec
cmp
push
lods
divb
loope
add
sub
and
fdivrs
ret
insl
and
insb
inc
in
pusha
mov
adc
jle
xor
mov
pop
out
in
adc
rol
outsb
sub
mov
mov
pushf
or
sbb
sbb
cmovge
daa
mov
mov
ss
popf
sub
icebp
shlb
ljmp
lock
call
dec
stos
rcrl
daa
insl
int
cltd
sub
repnz
pushf
xchg
out
inc
or
pop
fisttpll
insb
cmp
sti
mov
jl
jns
prefetchw
or
arpl
and
out
cmp
and
or
std
mov
or
xor
pop
xchg
fldl
out
bound
xchg
cs
pop
cwtl
das
lret
js
mov
push
pushf
lcall
int
mov
ja
inc
fsubrl
dec
jb,pn
dec
rcrb
jg
cli
out
roll
dec
pop
inc
push
aam
hlt
gs
lret
aaa
and
sub
pop
pop
dec
les
xorb
stos
shlb
ffreep
testb
and
fldenv
sub
dec
icebp
adc
aaa
jp
mov
lea
imul
frstor
adc
push
cmovns
mov
jl
xlat
mov
sbb
cmpl
pop
jnp
out
jp
pop
dec
mov
int3
adc
mov
mov
jo
add
inc
or
lret
jns
sbb
ret
lret
inc
push
xlat
negb
sahf
stos
xor
mov
ret
or
pop
loope
xor
ret
and
jae
movsl
cmpsb
outsl
cmp
dec
dec
adcb
mov
xchg
xchg
push
mov
outsb
pop
xor
jbe
add
mov
sbb
adc
fistpll
mov
dec
inc
sbb
test
push
sub
out
inc
dec
pop
cld
pop
xchg
daa
or
push
rorl
mov
xchg
or
sub
js
mov
clc
sub
push
xchg
mov
push
shrl
xlat
in
pop
or
mov
inc
in
mov
popl
jae
inc
mov
shl
test
pop
stos
repz
int3
jnp
pop
inc
int3
fcoms
jecxz
hlt
jg
js
aaa
stos
push
je
hlt
inc
push
jge
mov
push
push
pop
fwait
mov
ljmp
adc
aas
inc
mov
in
imul
in
stos
jp
imulb
jbe
call
jno
out
pop
xchg
mov
jle
xchg
leave
jge
fcmovu
mov
mov
adc
sub
or
push
enter
or
or
cmp
xor
inc
test
dec
cmp
adc
outsb
imul
mov
mov
push
jnp
in
or
shlb
stos
push
lods
xor
lods
jb
mov
enter
fdiv
inc
dec
das
cli
cmp
push
mov
imul
ds
push
std
adc
mov
sti
das
adc
push
popa
dec
mov
scas
pop
out
nop
out
andb
lods
sub
add
dec
inc
divb
lret
into
inc
sahf
dec
int
cmp
iret
out
enter
test
xorb
mov
rolb
sbb
inc
ja
xchg
push
and
fisubrl
dec
jnp
jg
mov
out
mov
xchg
lods
stos
pop
adc
mov
mov
ret
mov
sbb
leave
cmpsb
and
sub
sub
icebp
ror
or
sub
pop
jnp
jmp
sub
and
or
mov
nop
sub
bound
pop
mov
dec
xchg
adc
sbb
jns
xor
ds
pop
int3
fisubrs
std
ret
ljmp
loopnew,pt
jb
addr16
cmp
or
push
add
xor
in
xchg
or
jns
mov
or
sti
jno
jbe
imul
xchg
fildl
pop
sarb
push
lea
sbb
insb
insl
and
jp
cltd
sbb
inc
dec
outsl
pop
sub
test
add
mov
dec
jge
push
jp
add
or
sub
cmp
sub
cmp
jmp
inc
pushf
cs
and
inc
push
push
mov
pop
popf
repz
and
inc
jnp
and
test
or
popf
jle
jns
inc
inc
mov
jno
lcall
into
inc
add
mov
dec
test
shrl
mov
popf
cmp
adc
mov
dec
imul
or
loope
sub
dec
xchg
cld
pop
and
wrmsr
icebp
imul
popf
fcmovne
push
das
pop
mov
cwtl
dec
or
push
shlb
rclb
cmp
jg
add
clc
jmp
pushf
push
pop
fiadds
push
jmp
arpl
or
xchg
in
mov
push
and
adc
add
stos
sub
es
sbb
jae
iret
jne
pop
je
aaa
pop
or
mov
and
into
xor
insb
sub
pop
jp
movsb
jp
push
xchg
mov
ror
pop
or
push
js
inc
jnp
fbld
cmp
lcall
add
in
add
fstps
cmpsb
xchg
sub
aas
pop
jne
mov
and
xor
and
lret
xorl
stos
sbb
leave
fnsave
add
ljmp
scas
ret
dec
xchg
jmp
data16
outsl
fucomi
xchg
or
sbb
push
cmpsl
jno
fcoms
outsb
adc
mov
loop
jno,pt
sbb
bound
out
data16
push
std
pop
jmp
fcomip
in
push
mov
and
ret
nop
cwtl
rcrl
push
mov
gs
cwtl
ret
push
pop
adc
popa
arpl
call
jb
mov
mov
pop
and
pusha
movsl
xor
daa
mov
out
mov
mov
leave
subl
mov
and
inc
sbb
call
pusha
jno
xchg
scas
mov
xor
fidivrs
aam
rcl
stos
pushf
inc
adc
int3
mov
lahf
push
mov
ret
xor
loop
loop
ja
scas
jl
out
or
xor
icebp
lods
lods
in
scas
dec
cmp
into
jp
or
or
into
rcrb
loop
pop
call
push
clc
popf
cmpb
cli
pop
movl
xchg
rolb
dec
out
pop
testl
ss
inc
cmc
inc
or
imul
push
out
daa
out
stos
push
dec
pop
xchg
js
je
cmp
lahf
lcall
cmp
mov
jecxz
cmp
or
mov
mov
prefetcht0
repnz
push
clc
xorb
fstpl
int3
test
xor
rolb
jg
xchg
adc
dec
add
pop
imul
xchg
subb
repz
popf
dec
or
out
xor
jo
shll
lret
inc
and
pop
xor
pop
inc
pop
push
xchg
push
pop
xor
jp
xchg
jg
mov
clc
cmc
sbb
cmp
cmc
xor
xor
gs
push
xchg
ror
cli
or
call
sbb
cmp
inc
outsl
xor
xchg
mov
and
cli
mov
add
or
shrb
mov
mov
mov
dec
movsb
xlat
call
std
adc
addr16
inc
cmp
test
lock
jl
rcl
inc
popf
and
inc
xchg
xchg
lret
sub
mov
out
pop
lods
gs
mov
clc
lods
nop
cmp
subl
test
ja
in
test
jge
rolb
xchg
stos
mov
test
repz
int
xchg
sub
ss
rcrl
lret
out
adc
jb
sub
loop
mov
xchg
lods
pop
scas
push
mov
inc
dec
movsb
inc
cmp
push
or
inc
or
push
mov
sub
and
xchg
adc
pop
fcoms
dec
sub
jl
daa
or
fwait
pusha
popa
jae
push
out
ljmp
or
test
xchg
sub
ret
in
sbb
push
imul
xrelease
push
jbe
mov
hlt
out
mov
xor
mov
ljmp
sub
cmpsl
out
xchg
orb
add
pusha
scas
bound
lret
pop
pop
lock
pop
push
lea
add
sbb
jp
xchg
or
push
xchg
in
push
sbb
in
mov
ss
repnz
ficomps
das
in
adc
shrl
xor
scas
test
loopne
aam
pop
mov
mov
mov
push
das
push
add
cmp
lret
adc
mov
jno
sahf
cs
pop
sbb
xor
xlat
aam
dec
pop
dec
sarl
rcll
jl
jo
mov
sub
or
xor
mov
xor
and
xchg
pop
popa
mov
sahf
cmpsb
adc
xor
ret
sbb
mov
adc
test
mov
cwtl
add
scas
dec
aam
add
push
lahf
repnz
and
sbb
and
pop
adc
std
ficoml
xor
inc
xchg
setnp
mov
aaa
mov
ljmp
outsl
mov
fcoms
sbb
mov
test
pop
adc
add
push
rcrb
inc
adcb
mov
stos
jle
mov
sbb
ficompl
mov
or
stc
add
push
sti
push
pop
mov
mov
stos
outsl
lret
xor
out
sbb
pop
sub
cmp
movsl
popa
adc
pop
sti
xchg
xor
mov
sarl
dec
sbb
std
out
pop
in
jg
inc
aas
adc
pusha
xor
mov
int
pop
fmull
cmp
sbb
movsl
push
andb
push
stos
sarl
jl,pt
mov
pop
out
jge
mov
mov
out
dec
cli
popf
stos
fisubrs
outsb
sbb
and
hlt
sub
mov
frstor
xchg
push
testb
loop
aam
and
cli
mov
out
mov
push
push
fildl
in
jbe
jg
push
pop
popa
xchg
mov
inc
jnp
lret
pop
add
xchg
xchg
sbb
int
aad
mov
imul
push
cmp
mov
inc
into
cwtl
xlat
xor
add
in
sbb
rol
sbb
popa
xlat
popf
and
and
fnstcw
mov
shl
push
mov
ja
aaa
les
into
mov
add
cmp
rorb
sub
and
scas
cmp
sti
and
flds
inc
adc
push
add
roll
add
mov
lea
dec
lods
int
mov
push
out
ret
dec
hlt
enter
ds
push
jp
push
insl
mov
les
xor
imul
add
loope
clc
sbb
jb
lods
ret
js
pop
outsb
mov
mov
notb
pop
insl
xor
push
sar
ror
imul
dec
xor
lods
punpckhbw
sbb
adc
jmp
dec
and
and
push
cmpsb
or
out
aad
mov
ret
es
xchg
xor
mov
imul
push
dec
and
hlt
rep
nop
loopne
mov
nop
push
lret
mov
push
pop
ja
rcrb
sub
sbb
imul
cld
test
sbbb
sahf
cmp
xchg
add
cmp
mov
mov
popa
push
and
lods
xorl
sub
cmp
data16
sub
aaa
mov
int3
outsl
shlb
ljmp
xor
mov
pop
loopne
loop
xlat
xor
add
call
neg
xchg
cmp
insb
and
int3
or
adc
in
mov
pop
inc
adc
jno
cmpsb
mov
les
pop
mov
stc
pop
cmp
cmpl
mov
adcl
pushf
mov
pop
xlat
adc
mov
or
push
dec
loope
repz
adc
rorb
sub
and
in
mov
and
dec
and
ds
je
mov
add
stos
cmp
test
daa
outsl
out
jae
push
das
insl
cmp
push
jg
idivl
mov
cmp
stc
cmp
int
mov
pushf
sbb
or
ljmp
dec
push
and
inc
xchg
pop
pop
xor
outsl
dec
jge
xor
pop
mov
mov
fwait
test
cmp
test
mov
nop
cmp
punpcklwd
add
lods
push
or
out
lods
inc
add
jecxz
dec
iret
push
inc
sbb
stos
movsb
mov
shll
fnstsw
nop
or
cmp
dec
jl
and
xor
test
mov
outsl
shlb
sarb
mov
dec
sub
jns
xorb
lret
sbb
and
sbb
pop
outsb
imul
lock
mov
jbe
repnz
in
inc
arpl
sbb
icebp
mov
sub
in
xor
lcall
push
mov
pushf
pop
ds
fisubrs
fadd
cmc
xchg
test
hlt
push
cli
sahf
mov
jbe
add
cmp
jno
jbe
lock
mov
pop
daa
icebp
test
sub
and
mov
jge
dec
adc
scas
loopne
sub
movsl
add
ret
mov
pop
jae
es
hlt
mov
cmp
jo
cwtl
or
clc
pop
in
mov
jge
sbb
aaa
push
sbb
and
xchg
push
jae
push
mov
jne
xor
dec
cmpsb
jne
fadds
in
jns
fnsave
and
icebp
adc
jb
int3
das
pop
xor
jo
rcrl
mov
mov
mov
and
cs
clc
adc
pop
fcmovne
les
movsl
push
push
int3
repz
in
fnstsw
dec
pop
pop
adc
push
test
lock
or
push
in
enter
sbb
mov
fstps
cld
mov
ja
lahf
imul
xor
mov
sub
out
pop
adc
mov
cmpsl
inc
sub
test
mov
in
sbb
rep
xor
pop
dec
lret
jmp
xor
fs
js
dec
xchg
push
xor
inc
inc
dec
aaa
repz
popa
lret
mov
je
xchg
pop
in
adc
les
push
cwtl
pop
int
mov
and
xor
scas
sbb
inc
idivl
mov
imul
xor
and
cmp
xor
je
ja
inc
cmp
lret
imul
cmp
ds
call
sub
notl
push
jns
push
imul
mov
pop
push
or
out
cmp
and
mov
rorl
daa
push
nop
inc
lret
movsb
xchg
dec
das
jbe
xchg
faddl
inc
shl
enter
orl
mov
sahf
mov
mov
cltd
or
or
jmp
add
rcrw
aaa
scas
add
bnd
mov
add
push
test
cld
jbe
inc
cmp
mov
cmp
in
mov
cmp
pop
out
aad
xlat
push
repz
adc
push
sbb
loopne
add
push
repnz
out
xchg
rep
xor
dec
pop
std
mov
int3
xor
inc
lods
inc
pop
and
neg
sar
or
repz
into
xchg
cwtl
cmp
je
ja
call
cmp
ret
mov
adc
mov
in
adc
xor
sub
sub
sub
or
rclb
in
addr16
es
insl
cs
sbb
or
fsubrs
in
repnz
push
push
xchg
divl
dec
cmp
incl
scas
cmp
pushf
lahf
test
cwtl
std
in
xlat
xchg
jno
out
lea
jb
scas
lods
aam
dec
push
jnp
or
das
sbbb
pop
adc
outsl
sbb
popa
adc
inc
cltd
or
sub
lods
xchg
and
mov
cmp
xchg
mov
fldl
xchg
mov
shrl
sbb
sbb
pop
ja
sub
imul
and
ret
andl
movl
ss
jecxz
pop
addr16
dec
ret
repnz
and
jecxz
adc
popf
sbb
sbb
test
push
jbe
fdivs
out
ficoms
mov
orb
push
ss
sub
cmp
negb
out
or
stc
sbb
fdivrl
push
test
out
add
push
loop
push
and
mov
mov
adc
std
adc
jo
imul
jnp,pn
repnz
push
pusha
inc
jl
pop
lods
movsb
mov
test
insl
test
mov
add
mov
xor
adc
test
testl
mov
clc
xchg
ja
mov
repz
xchg
sbb
ljmp
add
adc
loopne
xor
sti
lock
imul
push
mov
out
mov
roll
push
add
xchg
cmc
and
dec
clc
xchg
std
mov
xchg
jle,pn
cmp
dec
pop
xchg
push
pop
jg
jns
sub
push
cmpsl
xchg
mov
jmp
fimuls
mov
lret
cmp
fsubr
xchg
repnz
sbb
push
pushf
lea
aam
stc
xor
add
call
sbb
inc
push
jno
pop
insb
fsubrp
add
xor
mov
adc
lahf
sub
cmp
push
mov
pop
cmp
out
aad
cltd
inc
pop
mov
enter
jmp
pop
add
fsubr
pop
into
jo
mov
mov
test
or
rcl
sbb
js
addl
mov
cmpsl
jmp
test
push
mov
in
int3
outsl
aam
mov
jecxz
mov
psubb
mov
mov
inc
sbb
and
inc
insb
data16
mov
test
sub
mov
lods
and
pop
pushf
loop
repnz
xor
scas
mov
adc
mov
fisubrl
in
shll
jmp
cs
xor
dec
sbb
lret
nop
push
push
xor
xchg
cmp
pop
jecxz
inc
inc
aas
lds
xchg
and
jnp
insb
or
pop
insb
int
mov
sahf
enter
mov
push
pop
pop
dec
into
cmp
mov
push
lret
pop
pop
jae
in
mov
fisubrs
cmp
sahf
ret
insb
sub
inc
in
xchg
divl
or
and
aam
out
jle
shl
cmp
js
fstpt
gs
xor
aas
jns
stos
or
xor
and
dec
rcrl
cld
lret
out
fbstp
mov
leave
sahf
sbb
jle
mov
mov
mov
lock
push
scas
out
xor
test
xchg
push
imul
cld
cmp
mov
movsl
sar
xor
and
mov
sbb
int3
mov
das
xchg
mov
fwait
pop
mov
xchg
sbb
push
mov
hlt
lcall
int
mov
lods
adc
movsb
sbb
or
or
mov
cld
dec
pop
xor
xor
push
push
enter
mov
mov
lea
xchg
mov
mov
test
js
popf
test
add
mov
push
dec
das
stos
adc
cwtl
mov
inc
sub
jmp
leave
aas
call
adc
cmpsl
xchg
mov
xorb
adc
ja
xchg
in
addb
adc
push
in
xchg
outsl
sbb
pushf
dec
fwait
lock
push
mov
jb
inc
mov
pop
loope
lock
loope
lret
fiaddl
mov
testb
jp
jmp
andl
sub
sbb
mov
dec
jle
pop
inc
inc
mov
daa
cmpsl
mov
dec
std
lea
sub
cmpsb
push
jbe
aad
test
jmp
mov
dec
arpl
hlt
cwtl
into
mov
arpl
ret
dec
and
pop
hlt
add
mov
jb
and
inc
adc
pop
and
std
push
or
cmp
push
sbb
push
insl
enter
ret
fldt
cmpsb
movsl
cltd
jg
hlt
adc
and
sbb
jge
ret
imull
mov
repnz
inc
inc
aam
arpl
nop
lret
xchg
jns
lret
pop
and
jno
movsl
enter
leave
cmp
fwait
mov
lock
nop
push
xchg
xor
add
ret
sbb
xor
nop
in
aam
inc
cs
sbb
mov
sbb
outsl
mov
push
ret
sub
out
mov
fs
dec
das
adc
add
mov
sbb
mov
adc
addr16
mov
jae
fwait
jp
jb
in
sub
roll
sub
inc
mov
mov
adc
or
in
push
dec
jae
xchg
jge
mov
stos
jne
aaa
lret
es
dec
jg
dec
cmpsb
inc
imul
enter
push
orl
and
les
push
ss
divl
jle
cmp
and
imul
nop
push
js
add
aad
sub
sbb
stc
sub
js
pop
lock
sbb
add
addr16
xchg
ds
mov
push
and
pop
xor
dec
subb
adc
and
pop
add
gs
mov
es
xchg
dec
je
mov
ret
pop
mov
repnz
arpl
gs
stc
add
out
fdivrs
and
pop
cld
aas
loopne
movsb
sub
mov
cmpsl
mov
cmpsb
in
jmp
mov
negl
idivl
xchg
xchg
pop
dec
mov
dec
sub
or
fmulp
jo
mov
jb
rol
test
xchg
push
sbb
pop
sub
push
sub
and
xor
push
scas
or
mov
mov
cmp
lods
xchg
aam
in
dec
push
push
test
out
aas
cwtl
xchg
adc
lcall
shlb
mov
ja
testl
lahf
or
fcmovnu
inc
loope
push
push
ds
xchg
cltd
ficomps
sti
shr
inc
dec
dec
xor
movsl
mov
pop
xchg
lret
or
movsb
xchg
jns
or
clc
add
mov
dec
rorl
pop
pop
fnstsw
mov
movsl
iret
in
sub
sub
adc
out
add
pushf
push
push
mov
push
xchg
add
xchg
cmp
fcom
les
bound
add
mov
repz
clc
movsl
push
jae
sbb
rorl
into
mov
xor
andl
loope
insb
push
jb
cs
cli
dec
popaw
push
push
inc
sub
iret
lahf
cltd
jno
mov
dec
int
shrl
or
enter
sub
push
cmp
lcall
or
mov
repz
push
pop
mov
pushf
cltd
mov
inc
mov
mov
xchg
xchg
jnp
iret
push
jp
ss
mov
jbe
sub
xor
js
icebp
push
adc
movsl
sbb
pop
jne
cmp
mov
pop
stos
imul
and
das
ret
mov
popf
pop
cwtl
loope
sets
mov
mov
testb
sahf
hlt
pop
pop
sbb
ja
std
lret
arpl
mov
xchg
daa
sbb
pop
lahf
mov
bound
dec
loopne
jp
mov
mov
mov
cmp
test
adc
aas
jecxz
enter
sti
push
mov
lcall
daa
pop
and
push
rolb
sub
dec
push
or
cmc
inc
mov
inc
mov
dec
sahf
add
insb
and
hlt
iret
into
fstps
sub
andl
insl
adc
mov
inc
push
test
inc
mov
cltd
out
jp
mov
xchg
lcall
sbbb
mov
lahf
mov
push
mov
sbb
js
rclb
cltd
mov
jp
mov
pop
fadd
mov
rcrb
or
mov
in
sarl
stc
mov
xor
sub
jb
ds
push
cmc
inc
mov
fdivr
sub
sub
aaa
test
fildl
sub
lea
lea
adc
push
cmp
sbb
test
xchg
sahf
aam
pop
jecxz
ss
sbb
adc
mov
cli
dec
jb
mov
cmpsb
inc
dec
lods
add
arpl
int3
data16
imul
insl
xchg
adc
add
cmpsl
xlat
iret
ljmp
fs
jae
fldz
inc
cmpsb
jb
lcall
add
fsubrl
fstpl
loopne
jl
repz
xchg
mov
scas
into
inc
aas
inc
mov
iret
les
inc
and
insb
jno
pop
in
in
out
push
sbb
push
mov
aaa
mov
adc
out
and
pop
out
or
fadd
push
and
in
add
lods
and
mov
and
in
inc
sub
jmp
sbb
jne
in
cld
shlb
cmp
ret
shl
pop
sbb
clc
mov
xchg
sub
aas
iret
or
jl
movsb
pop
inc
jg
add
xlat
cltd
mov
lcall
enter
jb
movl
push
fidivrl
nop
bnd
cmp
sti
sub
lods
sub
std
wbinvd
push
cli
js
xor
dec
mov
jmp
repnz
fadds
mov
mov
mov
mov
je
sbb
daa
and
sti
gs
gs
jns
cltd
pop
bound
insb
sar
ljmp
ljmp
mov
mov
mov
xor
clc
and
add
shl
into
add
mov
push
loope
nop
mov
inc
xor
lcall
fwait
jg
and
jb
dec
adc
push
rcr
rorl
insb
cwtl
cs
je,pt
or
jb
mov
mov
nop
lods
or
dec
repz
insl
adc
xor
rcrl
cmp
out
pop
cwtl
or
xchg
mov
pop
mov
and
iret
or
outsb
or
out
adc
mov
lods
and
bound
je
pop
fbld
ret
lahf
and
inc
xor
daa
lret
js
pop
inc
pop
lcall
ret
cmpl
cmp
xchg
lret
sti
mov
lds
jae
in
sub
mov
pop
jp
int
loope
adc
or
and
mov
pop
jg
mov
hlt
jg
xlat
xor
and
xchg
and
mov
or
daa
aam
rcrb
das
stc
cmp
rcl
mov
push
add
lods
mov
cli
fldl
push
inc
jmp
mov
stos
jg
pop
push
mov
imul
mov
gs
sub
add
loope
inc
loope
nop
cmp
sbb
popf
ficoms
testl
shrb
subb
in
inc
add
add
sub
ljmp
andl
mov
scas
mov
cmp
jle
or
sub
mov
leave
sbb
mov
mov
or
mov
fnsave
out
adc
dec
sbb
cmp
push
cmp
arpl
lock
pop
push
pop
fcomps
leave
cmpsl
inc
jo
nop
lods
sub
push
das
mov
fs
jge
adc
and
popf
leave
pop
pop
dec
sbb
lahf
fists
mov
push
add
and
inc
mov
sbb
dec
or
ja
jp
das
sbb
pop
jmp
sbb
push
dec
xor
or
mov
in
jo
and
rclb
inc
fidivl
sbb
lahf
cmp
pop
rcl
mov
or
mov
bound
ret
lcall
xchg
aam
mov
push
hlt
dec
push
pop
push
mov
xchg
imul
xchg
or
push
pop
clc
jecxz
push
pop
mov
fwait
loop
movb
hlt
xorb
jne
or
and
push
ret
leave
or
rcrb
pop
cmp
cli
cmpsb
cmp
push
and
in
ds
add
insb
xlat
leave
mov
sbb
inc
out
jg
adc
xchg
dec
mov
mov
leave
mov
cmp
movsl
cwtl
xor
xchg
inc
mov
add
mov
popf
xlat
mov
sbb
sub
fistl
out
mov
and
jmp
jbe
popf
mov
or
or
insb
repz
pusha
fdivrl
imul
out
adcl
or
or
lcall
dec
je
jecxz
stos
shrb
repz
push
addr16
mov
js
cmpsl
cmp
aaa
mov
push
fimuls
popf
movsl
leave
bound
push
inc
and
xchg
and
jo
push
repz
popf
add
repz
ret
mov
cltd
sub
or
sar
out
test
xchg
shr
fsubl
loopne
jnp
jns
sub
lcall
sahf
xor
das
xchg
adc
and
lret
inc
and
sbb
mov
out
push
test
dec
icebp
push
sbb
es
sub
dec
dec
stc
roll
cltd
loop
orb
mov
xchg
inc
cld
je
jbe
ret
xor
jbe
pop
ds
mov
clc
lcall
mov
cmpsl
mov
rcr
cmp
xor
jle
pusha
or
dec
push
int3
cli
xchg
sbb
out
jo
mov
xchg
fstpl
xchg
sbb
cwtl
out
ret
mov
enter
sbb
jle
testb
or
jbe
mov
adc
sbb
in
jmp
cwtl
jp
and
inc
inc
cmp
out
sti
cmp
nop
mov
shrb
push
jb
xchg
test
cmc
pop
fs
jle
and
test
sbb
jl
imul
or
inc
cmp
outsl
xchg
and
nop
clc
out
loop
dec
dec
jle
mov
and
cld
sti
rol
or
or
or
jo
add
inc
stos
data16
loop
mov
arpl
and
mov
or
shll
cmp
add
test
popf
popa
mov
into
out
push
xor
dec
cmovle
fiaddl
test
or
jb
dec
xor
enter
rorl
stc
mov
dec
or
mov
repnz
lret
js
pusha
mov
xchg
jg
inc
fsubl
lock
inc
mov
cwtl
mov
insb
xchg
leave
cmp
jno
cwtl
or
inc
xchg
lods
movsb
pusha
cmp
or
cmp
ret
mov
pushw
push
scas
dec
bound
sub
pop
test
imul
fistps
adc
popa
repnz
test
push
rep
lods
sbb
loop
mov
out
push
or
aam
ds
xor
push
xor
push
vpunpckhbw
push
mov
imul
movsl
push
jle
or
jae
sti
int3
sbb
pusha
cmp
lcall
clc
fildll
ds
xchg
mov
push
cwtl
sub
lea
inc
jge
inc
sarb
cld
outsb
cld
lret
push
fwait
xor
imul
cmpsl
test
push
jno
push
lods
les
push
mov
push
mov
in
jns
push
repnz
aaa
push
xor
ds
data16
out
dec
add
adc
scas
gs
repnz
add
test
push
leave
test
inc
xor
dec
lods
bound
inc
sub
cmpsb
cmp
cltd
dec
pop
mov
ffree
add
lods
jbe
dec
xchg
ret
xor
jl
ret
movsb
mov
stos
shlb
or
outsb
call
push
mov
je
ljmp
mov
hlt
sub
and
enter
fidivrl
scas
sbb
leave
arpl
sahf
jg
inc
xchg
insb
les
push
arpl
jge
rcrl
dec
into
icebp
or
insl
stc
shrl
mov
into
pop
imul
xor
xchg
push
adc
stos
cli
xchg
pop
sub
enter
imul
out
or
cmp
pop
test
stos
cmpsb
shll
xchg
push
lret
repnz
popf
mov
sbb
fidivl
fnstenv
dec
subb
mov
out
add
jns
sub
shlb
adc
stc
rcll
xchg
inc
sti
imul
out
test
mov
shlb
cmp
ljmp
sbb
fimull
sbb
in
dec
stos
ficomps
arpl
imul
subl
imul
sub
in
bound
xor
xchg
jge
dec
sub
and
inc
test
xchg
lret
add
lahf
nop
fisubl
shlb
mov
cltd
mov
in
mov
mov
stos
mov
js
push
xor
xor
xchg
xchg
mov
ss
mov
call
stos
and
cmc
dec
pop
jp
push
dec
test
stc
jge
insl
cmp
jmp
mov
xchg
js
popa
add
inc
push
imul
out
inc
inc
inc
mov
and
stc
jmp
rclb
push
pop
inc
add
in
fldcw
add
sbb
sbb
rorl
add
sarl
add
sbbl
popa
dec
mov
iret
inc
mov
mov
cmpsb
adc
shlb
and
cmpsl
xor
les
popa
cwtl
pusha
loopne
sti
aaa
or
push
out
dec
pop
gs
call
out
fmuls
push
push
stos
cmp
icebp
and
adc
test
xchg
fwait
sti
sub
pop
icebp
jge
jg
push
jmp
mov
fwait
dec
inc
in
nopl
adc
and
out
clc
fsubs
scas
xlat
ss
or
xchg
fldl
movsb
test
xchg
test
sub
jle
in
jo
cmp
sbb
xor
ljmp
sti
rcrl
gs
inc
xchg
sti
mov
push
fisttps
push
mov
mov
pop
cmp
addl
mov
repnz
lret
jns
cld
lods
sbb
sub
dec
aam
popa
fcmovu
addb
cmpsb
jmp
gs
js
out
xor
push
or
lcall
pushf
fimull
add
sub
sbb
cmp
sbb
loop
dec
sub
ficoml
push
cmpb
aam
or
or
mov
fcoml
imul
loopne
icebp
hlt
in
out
in
hlt
leave
imul
or
mov
adc
add
xchg
shll
ret
mov
pop
xor
inc
fs
cmp
ficoms
dec
cmc
push
inc
int3
call
sbb
mov
in
ljmp
lds
sub
mov
mov
into
sbb
movsl
aas
sbb
loop
push
fcmovne
jle
cmp
push
dec
sbb
es
or
aad
push
mov
cmpsb
sbb
jae
push
add
xor
je
xchg
lret
cli
and
jae
pusha
loope
sub
xchg
fisttps
sbb
adc
push
mov
dec
sbb
mov
ret
mov
adc
ss
cmp
mov
dec
jne
dec
xchg
ret
and
shl
jl
sub
pop
in
enter
xchg
pop
test
inc
fcomps
mov
mov
cmp
cmpsb
push
sarl
out
das
inc
or
dec
or
cmpsb
pop
xchg
fdivrs
andl
mov
scas
push
mov
pushf
pusha
mov
adc
inc
cwtl
jmp
push
sub
push
imul
in
fs
or
imull
loop
jb
cmp
sbb
xor
dec
mov
and
sahf
mov
outsb
add
cmp
cmp
or
js
xor
xchg
shll
gs
fnstsw
flds
lea
inc
push
pusha
outsb
mov
fidivl
shrb
fnsave
jbe
xchg
jno
jge
add
out
mov
pop
or
cmp
sub
cmpsb
jmp
cwtl
dec
mov
add
xor
jne
mov
movsl
or
mov
dec
roll
push
jnp
leave
mov
or
lea
cli
imulb
clc
cs
mov
subb
iret
add
mov
xchg
rol
paddusb
mov
xchg
rorl
incl
in
adc
cmc
std
sub
jle
jmp
cld
bound
add
cmp
or
shl
dec
dec
push
mov
adc
inc
fcoml
mov
sbb
fdivs
out
std
subl
test
loope
dec
inc
push
xor
out
push
cmpsl
mov
aam
add
mov
jo
push
call
jg
popf
dec
push
les
dec
xor
pop
inc
sub
add
js
mov
mov
andl
add
iret
mov
push
jle
sub
fwait
sahf
add
mov
inc
pop
jmp
sbb
and
or
fwait
xchg
push
jae
mov
jnp
insb
pop
dec
mov
xchg
mov
arpl
mov
daa
insl
fsubp
pop
mov
fstps
stos
int3
sahf
stc
inc
xor
stos
mov
insb
mov
je
dec
out
cmc
aad
sub
push
js
cmp
aaa
fisubs
mov
jns
adc
mov
jecxz
loopne
test
int3
fistl
jg
push
xor
inc
jge
in
mov
cmpsb
rcrl
sbb
in
loopne
cmp
jnp
cmp
loope
ds
adc
outsb
jo
aas
je
sbb
jbe
outsl
jmp
sub
and
hlt
pop
mov
pop
mov
jmp
adc
pop
xor
mov
jno
lret
ficoml
movsl
sub
inc
xor
cmp
inc
dec
adc
push
mov
jg
xor
out
out
cmpsb
loope
mov
in
movsb
ja
fcompl
sub
add
xlat
out
nop
arpl
loop
mov
xor
mov
sbbb
mov
in
rol
mov
callw
test
popa
sub
push
loope
in
popl
in
movaps
xchg
movsb
cmp
jns
test
lahf
inc
jmp
ss
out
sub
es
adc
sub
or
bound
xchg
sub
daa
pop
imulb
lods
arpl
sub
and
adcl
movsb
mov
and
shll
xor
sahf
mov
add
clc
in
in
or
sub
mov
inc
mov
loopne
in
pushf
mov
test
lds
sahf
add
xor
loope
jl
movsl
shrb
push
gs
or
leave
or
sbb
pop
dec
mov
mov
int3
or
cmpsb
jecxz
jae
push
push
jno
cmc
fwait
test
add
rcrl
pop
cwtl
cmpsb
dec
xchg
pop
jmp
movsb
adc
xlat
or
int
or
cld
jle
ljmp
test
pop
ljmp
test
add
mov
imul
aas
xor
lock
adc
out
xchg
or
stc
mov
repnz
push
mov
sbb
cmp
lods
mov
dec
mov
out
or
jae
gs
cmpsl
jo
sub
add
add
adc
pop
mov
in
ret
sbb
jb
rolb
mov
pop
mov
jae
sbb
rcrl
ja
pop
cmp
xor
inc
adc
jne
div
jge
add
sub
dec
test
ret
daa
dec
icebp
sub
jb
out
push
xchg
inc
xchg
scas
xchg
push
das
icebp
jnp
sub
or
adc
jge
fwait
ret
pop
rcll
inc
xchg
std
das
xor
scas
xchg
mov
inc
rorb
pop
xor
ficoms
roll
lret
inc
lret
in
fiadds
dec
ja
adc
js
addr16
inc
lret
stos
jnp
lcall
sahf
push
pop
fadds
and
cmp
into
inc
pop
push
es
or
fs
sbb
add
imul
push
out
adc
push
add
mov
adc
fwait
data16
adc
out
rcrb
loop
and
loop
les
insb
sbb
cmp
test
dec
ret
inc
cmpsb
jecxz
sti
aam
lock
mov
and
and
cmp
cmp
lahf
popf
sbb
aam
xchg
ja
sbb
pop
dec
mov
arpl
inc
dec
mov
fisttpll
mov
js
mov
push
sbb
clc
dec
adc
aaa
xchg
pop
fwait
push
mov
inc
fldln2
hlt
sub
stos
pop
xchg
add
lcall
sbb
sti
in
sti
and
ss
or
out
mov
fisubs
js
roll
pop
inc
aam
iret
mov
ret
cmpsb
mov
jmp
pop
mov
mov
push
lods
sub
sub
test
cmp
les
adc
sbb
xor
mov
xchg
pop
roll
and
imul
pop
sbb
movsl
inc
adc
mov
inc
inc
jno
dec
inc
inc
and
push
mov
mov
ja
mov
inc
ss
imul
push
test
xor
xor
xchg
lods
vandps
inc
cs
daa
xor
cld
push
fwait
jne
mov
popa
mov
xor
xor
rcr
cld
leave
pop
sarb
gs
loopne
sbb
xchg
cmp
out
dec
sbb
fbld
lahf
mov
pop
or
add
sub
and
adc
mov
cs
or
sub
cmpsb
dec
movsb
stos
das
mov
fidivrs
push
iret
pop
mov
pop
adc
jg
or
push
jmp
mov
cmp
push
adc
daa
add
or
mov
push
or
daa
jg
jle
jo
addl
sti
dec
scas
pop
int3
adc
xchg
push
clc
lods
mov
out
inc
sbb
xor
xor
movsl
sbb
sti
popf
popa
popf
adc
push
mov
lods
fnstsw
movb
push
test
arpl
push
in
fdivrl
dec
int3
sub
push
xchg
pop
imul
cmpsl
mov
popf
out
mov
adc
out
movsl
loope
cmp
sbb
cmp
inc
xor
and
das
pop
or
sub
pop
gs
cmp
or
pop
scas
mov
mov
push
xchg
cmpsb
nop
pop
in
adc
xchg
movaps
stos
int3
mov
sbb
push
cmpsl
js
mov
xlat
mov
or
add
and
mov
ljmp
cmp
push
cmpb
movsb
sub
cwtl
pop
cmpsb
ret
ret
sbb
cmpsl
adc
and
int
dec
mull
adc
out
mov
das
shr
sbb
stc
mov
cmpb
xor
call
or
leave
jge
popf
mov
sub
lds
push
mov
sbb
xchg
xor
test
dec
gs
xchg
jb
js
lods
ss
loope
mov
movsl
mov
movsb
stos
pop
pop
std
mov
mov
xor
lret
fldl2t
js
inc
xchg
xor
imul
or
inc
repnz
movsb
arpl
nop
mov
add
xor
push
push
add
or
xchg
cld
or
fldcw
aaa
cltd
jno
scas
dec
lret
and
sbb
mov
andb
lcall
xchg
test
mov
int3
jmp
jmp
mov
adc
adc
cmpsl
jp
test
jg
inc
mov
lret
xchg
push
xchg
imul
mov
mov
mov
stc
jne
add
adc
sbb
xchg
mov
rcr
pop
jbe
xor
std
sub
mov
fldl
aam
popa
into
sbbl
rcr
sub
shlb
cmpl
outsl
sahf
inc
dec
jne
addr16
insl
and
ja
loope
xlat
in
iret
mov
sub
dec
mov
jge
pop
dec
and
arpl
xlat
sub
sub
negl
test
mov
cli
arpl
shrb
adc
cwtl
mov
mov
loopne
lahf
mov
sub
iret
ret
adcb
cmpsb
sbb
inc
lcall
mov
pop
jne
out
repnz
fwait
orl
xor
and
mov
sbb
pusha
mulb
popaw
lea
fsubrp
sbb
sbb
adc
jbe
dec
loope
clc
xchg
ss
aas
and
mov
stc
xchg
or
ret
dec
insb
mov
push
xor
sub
popa
cmc
aad
dec
push
shl
faddl
xchg
lods
hlt
jbe
mov
cltd
das
push
loopne
mov
mov
sbb
or
mov
mov
push
jg
jnp
pop
xor
imulb
lret
mov
jo
xor
dec
mov
fwait
ds
adc
dec
and
and
out
add
dec
mov
out
inc
dec
leave
addl
mov
mov
cmpl
pop
push
sbb
out
incb
imul
int
cwtl
pop
inc
movsl
fldt
fsubs
or
dec
cmp
scas
loopne
mov
add
sub
ljmp
jns
in
dec
popa
popa
add
ficompl
and
push
adc
les
push
sub
dec
fadd
andl
sahf
jo
and
adc
fs
mov
incl
push
and
push
add
sub
add
add
inc
mov
push
xchg
xor
push
mov
jbe
xor
fdivrl
xor
sub
int
or
cltd
inc
jae
inc
orb
popa
stc
int
stos
jb
adc
push
sub
test
sbb
push
jge
and
fisubrl
in
xchg
push
xchg
cmp
shl
pop
cs
je
inc
sub
adc
clc
ret
stos
or
mov
insl
sub
fucomp
mull
and
rcr
stc
xlat
xor
jl
mov
sub
mov
jmp
aad
jle
jns
js
daa
pop
fsubrs
stc
roll
dec
insb
cwtl
add
cmp
adcb
in
push
mov
add
cmp
aad
lock
xchg
movsl
jbe
shrl
test
cmp
inc
xor
mov
mov
add
test
jno
iret
adc
rcr
cmp
jecxz
adc
clc
movsl
imul
mov
sti
sub
mov
pop
fld
dec
out
pop
mov
mov
mov
lcall
xor
movsb
dec
arpl
movsb
mov
cmc
movsb
shr
aas
jle
fstl
add
sub
sub
loop
repnz
xchg
sbb
enter
outsl
xor
sub
imul
sub
stos
cwtl
adc
out
xor
data16
cmc
pop
xchg
imul
test
repz
or
icebp
cmpsl
xor
or
movb
data16
aad
sbb
pop
out
movsb
fs
inc
outsb
push
sbb
fistps
mov
je
add
test
ja
lods
aas
jno
sbb
sbb
cmpsb
mov
aaa
js
jle
jle
mov
dec
ret
jle
out
not
xchg
nop
popa
addr16
mov
outsb
mov
movsb
insl
sbb
aaa
pop
fsubrl
mov
sub
sub
cmp
mov
lahf
enter
lock
enter
xchg
fidivl
push
pop
xor
xchg
out
mov
cmpsl
jmp
xchg
pop
into
mov
outsl
es
nop
out
xor
inc
push
movsb
inc
adc
loop
mov
xchg
mov
lods
xor
addl
xor
icebp
lock
icebp
add
or
filds
xor
inc
add
mov
cmpsl
push
pushf
inc
push
adc
cmpsl
inc
leave
cmp
jo
jno
cltd
cwtl
add
cmpsb
push
pop
sub
enter
aam
test
addr16
jecxz
out
imul
dec
lds
cmp
repnz
pop
xor
in
add
mov
xorb
lret
sbb
fadd
imul
or
mov
add
and
divb
mov
xchg
loopne
push
lods
imul
or
cmc
movsl
insl
add
sbb
out
sbb
subl
and
clc
loopne
movsb
sti
inc
mov
add
xchg
jb
push
icebp
aaa
pop
dec
stc
xchg
test
loop
mov
cmc
mov
sub
pop
xchg
int
mov
roll
xor
cmpsl
push
into
lods
rcl
repz
adc
pop
fists
dec
xchg
mov
mov
fwait
pop
push
les
outsb
icebp
push
jg
jmp
lods
fidivrl
jecxz
fwait
stc
xchg
into
inc
iret
adc
add
bnd
stos
push
and
push
inc
shl
sbb
inc
and
cmp
push
subb
jle
xlat
dec
xchg
loopne
xorl
popa
aam
pop
cwtl
jbe
sub
mov
fcomp
fisubrl
jge
int
mov
mulb
int3
xor
adc
and
hlt
adc
fsub
dec
call
lea
aam
adc
inc
inc
push
jo
sub
daa
jbe
adc
loope
nop
inc
shlb
jl
pop
hlt
pusha
test
xor
lods
inc
outsl
pop
mov
divb
and
pop
cmp
nop
or
test
or
cmpl
psllw
jae
push
mov
je
add
imull
bound
lods
mov
or
push
or
repz
lds
cs
xor
jl
xchg
lds
pop
pop
mov
popf
mov
push
repnz
pop
or
imul
dec
mov
mov
outsl
jne
test
push
sbb
push
add
push
data16
loopne
xchg
daa
jbe
jno
mov
push
sarl
daa
inc
daa
jl
fwait
cmp
jo
cmpb
adc
orl
push
lahf
fcmovbe
sub
loop
xor
daa
data16
mov
out
fs
fildl
xchg
pusha
mov
push
push
sti
ficoml
sub
aam
ss
mov
lock
pop
cmp
fbld
imul
mov
imull
cmp
sbb
sbb
or
pop
sub
idivb
outsl
dec
es
mov
cmpsb
mov
shrl
ret
mov
int3
adc
lcall
repnz
jp
ljmp
sarb
hlt
jge
inc
stc
add
cmp
ds
repz
rcll
fwait
pushf
mov
fs
adc
jb
mov
push
xchg
sub
adc
or
mov
lret
fwait
xchg
cmp
xor
mov
or
cli
mov
scas
jmp
sbb
mov
mov
push
lock
int
negb
fdivrs
dec
jle
adc
negl
adc
inc
adc
test
mov
popa
xchg
mov
lret
push
repz
jecxz
mov
icebp
mov
jo
sti
jnp
imul
rolb
mov
jns
popa
add
mov
jae
mov
and
ficoms
adc
pop
add
jbe
loope
shll
inc
mov
xor
mov
add
or
insb
sbb
in
in
sub
jne
lret
mov
popf
sub
jg
clc
and
mov
aad
aaa
insl
dec
sub
jo
sbb
sub
cmp
push
in
das
ja
add
rcl
arpl
imul
arpl
inc
xchg
int3
sahf
leave
push
mov
xlat
jg
ja
in
and
jle
cs
xchg
sub
je
add
adc
fbld
adc
lds
pcmpgtw
mov
and
xor
dec
jne
mov
xchg
loopne
dec
xchg
push
sarl
push
inc
lcall
clc
pop
add
nop
test
xchg
adc
test
mov
test
ljmp
sti
stos
cmp
into
dec
addr16
out
add
loopne
jnp
jns
cmp
or
lea
nop
sahf
shrl
inc
jge
xor
fs
stc
mov
xchg
inc
xor
pushf
jl
test
xlat
mov
test
mov
out
cld
inc
sbb
bound
movq
fists
lods
outsb
sub
mov
sbb
mov
and
out
push
or
aad
pop
and
cs
outsl
push
out
pushfw
adc
fidivrl
jmp
mov
les
les
pop
ret
decl
pop
dec
mov
notl
pushf
mov
repz
ficompl
mov
es
dec
push
loop
fstps
pop
dec
pop
mov
push
mov
je
push
mov
mov
jmp
xor
mov
aam
pop
fidivrl
ss
repz
jecxz
adc
xlat
mov
repz
sub
fwait
jbe
mov
stc
push
sbb
and
inc
inc
popa
into
push
xchg
fstpt
xlat
cmp
jns
add
dec
pop
aaa
pop
test
fs
jbe
mov
bound
call
sbb
popf
jnp
test
dec
push
mov
adc
mov
scas
xchg
or
or
dec
and
dec
add
out
mov
xchg
add
roll
nop
xor
push
add
inc
mov
mov
jge
scas
js
ficoms
or
int
cld
sbb
dec
jg
mov
cmp
std
lret
xchg
sbb
or
mov
push
pushf
push
mov
jp
in
inc
mov
jge
loopne
xchg
les
xor
sarb
repz
jbe
push
mov
in
lcall
and
insb
into
and
out
mov
das
or
or
mov
sbb
repnz
test
xchg
es
mov
enter
xorl
imul
movsl
xchg
jne
mov
hlt
pop
and
pop
sbb
rcr
and
sub
or
mov
lods
negb
cmpl
dec
mov
or
addb
aas
sbb
dec
jp
cli
jp
mov
fdivp
in
test
addb
out
loope
mov
dec
push
repz
sti
setnp
repnz
xor
push
insb
push
mov
loop
cmp
fsubr
addr16
cwtl
int3
jecxz
lret
test
fstpt
sub
add
mov
and
testl
mov
ja
or
mov
jnp
sub
add
mov
inc
lret
mov
xor
cmp
mov
arpl
jl
rcrb
mov
mov
popa
push
jnp
sbb
hlt
pushf
daa
lret
stc
imul
lahf
cmp
adc
repnz
or
lds
mov
sub
ljmp
sahf
mov
popf
add
cmp
dec
std
loopne
xchg
movsl
in
subl
add
push
push
shll
in
insb
sbb
daa
fwait
jg
jge
mov
adc
popa
repz
mov
or
call
das
mov
push
scas
dec
mov
pop
lds
dec
or
jae
jne
aas
dec
nop
xor
xlat
into
dec
not
xor
push
inc
test
cmp
mov
outsl
cmp
mov
xlat
aad
mov
sbb
jnp
push
inc
inc
adc
out
pminub
or
sbb
pop
jae
push
pop
jns
popa
pop
sub
add
lcall
jmp
cmpl
mov
inc
ja
dec
mov
out
adc
mov
dec
test
pop
mov
xor
dec
mov
mov
push
or
cwtl
pop
dec
cmp
push
out
imul
xor
js
mov
inc
mulb
cs
push
nop
push
fmuls
and
in
insb
adc
or
push
test
pusha
mov
inc
movb
mov
lock
decl
or
mov
and
jp
push
lret
idiv
fimuls
xor
or
mov
sub
sbb
out
outsb
outsb
data16
and
jb
xor
mov
fistps
mov
add
iret
lcall
jae
fsubrl
mov
arpl
add
mov
mov
daa
daa
inc
xor
pushf
iret
sbb
shll
jbe
xor
jl
mov
inc
lods
jecxz
cmp
sub
das
data16
aaa
xor
scas
mov
push
jno
push
push
hlt
stos
mov
out
mov
push
outsb
cmp
ret
mov
mov
ds
push
ja
mov
pop
mov
pop
inc
lcall
xlat
add
mov
add
push
xchg
fimull
and
and
dec
xor
mov
jno
push
adc
int3
jne
add
xchg
call
test
bound
pop
mov
pop
mov
mov
out
mov
stc
mov
push
mov
sbb
sbb
sbb
pop
or
stos
es
insb
inc
or
mov
pop
sub
data16
pop
aad
das
sub
into
ret
addr16
dec
arpl
sbb
lea
out
mov
push
movsb
or
scas
roll
sub
mov
pop
shll
jo
into
and
adc
dec
jle
push
outsb
imul
pop
sbb
push
push
dec
and
jge
pop
gs
jno
push
dec
push
popa
jle
flds
xor
jmp
insb
push
imul
inc
repz
mov
stos
pop
in
pop
ljmp
in
icebp
mov
xchg
mov
in
fiaddl
lods
gs
icebp
dec
xchg
mov
or
mov
sbb
stos
lret
cli
mov
xchg
test
leave
and
inc
stc
xor
xchg
scas
insl
xchg
jne
dec
cmpsl
popa
push
cmpsl
jmp
sbb
mov
repz
push
bound
lahf
fdivs
je
inc
push
push
jmp
xor
insl
cmp
leave
cs
ja
sub
ja
sub
ret
xchg
cs
fdivrs
icebp
data16
jb
dec
js
out
push
addb
or
outsl
in
jmp
and
xor
sub
lahf
lea
and
rcrl
mov
xor
popf
and
and
xlat
push
inc
pop
xor
mov
insb
mov
insl
jbe
mov
loopne
push
cmc
or
sbb
xchg
les
jmp
and
jge
cwtl
punpcklwd
inc
mov
cli
fdiv
lods
pop
push
incl
stos
inc
push
dec
aas
lds
jp
test
jae
pop
jae
mov
fsts
das
shlb
test
test
jb
mov
sbb
lcall
pop
pushl
lods
and
flds
xor
bound
add
jns
shr
decb
cli
sbb
pushl
fnsave
xchg
imul
and
ret
cs
neg
mov
iret
mov
ljmp
cmp
lods
sbb
iret
push
and
arpl
popl
adc
les
das
cmp
adc
clc
inc
dec
inc
repnz
test
mov
lods
fldt
sub
fmuls
pop
lock
dec
xchg
sub
cmp
ret
pop
mov
pop
adc
push
sub
mov
adc
push
add
or
sub
sti
outsl
xchg
jmp
mov
les
lcall
cmp
push
scas
sub
int3
jb
adcl
jmp
xchg
sub
mov
mov
es
jo
movsb
popf
fiaddl
xor
out
push
pop
mov
fadds
adcl
sbb
inc
mov
adc
data16
test
xor
xchg
psubq
mov
fs
andl
aad
cmp
jb
out
sub
imul
xor
mov
bnd
ret
in
mov
hlt
aaa
cmp
scas
push
cltd
dec
and
push
and
call
fwait
les
push
mov
pop
mov
inc
in
ret
test
and
mov
push
leave
and
add
test
cmp
lcall
add
in
dec
sub
loop
testl
cmp
push
loopne
jg
aas
push
hlt
mov
lds
stc
in
jge
ss
fstl
and
fsubrp
dec
or
adc
inc
iret
jne
test
movb
scas
mov
jo
jo
sahf
xorl
mov
jg
test
mov
xor
shlb
sub
repz
mov
fimull
popf
int
sbb
pop
push
in
pop
cmp
add
xchg
adc
cmpsl
popf
daa
outsb
aam
jo
xchg
adc
push
xchg
xor
adc
or
sub
popf
xor
sub
add
shl
stc
cmp
xchg
mov
add
jne
add
xchg
jmp
lods
pop
cli
pop
adc
loopne
je
adc
fadd
adc
lcall
mov
stos
stos
push
cmp
out
adcb
rcrb
gs
xchg
jbe
cwtl
adc
adc
or
insl
cwtl
jno
push
aad
pop
inc
insl
adc
in
inc
cmp
ficompl
ficompl
pop
jns
mov
adc
pop
push
leave
test
out
lahf
loopne
arpl
sarb
pop
sub
jle
bound
push
movsb
aaa
lea
adc
leave
or
lods
cmpl
xchg
hlt
and
cmc
lock
dec
fstpt
bswap
fistpl
jle
sbb
iret
dec
mov
add
test
jg
inc
test
sub
popf
cmp
lahf
arpl
shll
and
mov
lret
dec
xor
cld
mov
dec
data16
test
loopne
jecxz
xor
dec
mov
or
imul
xor
mov
sbb
stos
xchg
mov
lahf
inc
aaa
shrb
lds
aas
xchg
dec
pusha
inc
fistl
add
adc
dec
mov
jo
cmp
pusha
mov
jmp
mov
stc
mov
ret
pop
jnp
mov
push
ds
push
xlat
pop
negl
testl
push
cmp
or
jge
mov
pop
mov
scas
inc
jno
pop
shl
aam
push
lahf
stc
pop
fcmovu
out
mov
or
loope
jnp
and
mov
jb
sbb
sub
mov
push
les
dec
rolb
cltd
outsb
inc
sti
leave
outsb
aaa
jg
xchg
inc
pop
mov
and
fistps
adc
popa
sbb
dec
repnz
jb
add
jge
mov
in
mov
dec
and
xor
cmp
subl
test
xor
mov
cltd
int3
mov
andnps
or
sub
sbb
pop
outsl
jmp
xlat
jb
cmc
mov
repnz
cld
mov
jp
je
cmpsl
mov
nop
xor
mov
push
out
cli
push
adc
cmp
int
les
test
insb
push
leave
push
mov
ret
and
addr16
push
pop
loope
movsb
repnz
fdivrs
add
adc
mov
mov
add
jecxz
test
mov
lret
lcall
xchg
inc
cmp
inc
int
data16
sahf
cmp
inc
sub
je
orb
fisttpll
subb
push
int
inc
stos
mov
leave
mov
cmp
cmpsl
or
incb
out
push
test
or
jne
jo
in
and
inc
or
lret
mov
sti
inc
push
jge
pop
out
out
pushf
fildl
test
sub
dec
mov
mov
xor
and
out
lods
pop
push
daa
xor
popf
xchg
xchg
or
push
icebp
outsb
inc
add
jge
ss
outsb
outsb
fs
testl
es
lret
repz
fcoml
cwtl
mov
test
cmpl
rorb
scas
cmpsb
add
hlt
aam
mov
mov
stc
jl
ret
fnstenv
cmp
push
scas
jmp
repz
scas
repnz
inc
push
test
xor
xor
test
andb
xor
pop
xchg
aam
fiadds
add
out
loop
xchg
ret
jo
sub
jmp
xchg
jno
inc
movsl
loope
leave
je
mov
jg
test
mov
movsl
mov
xor
or
adc
dec
adc
enter
pop
mov
jg
iret
mov
mov
loop
fdivr
out
repz
fwait
sahf
repnz
in
loope
adc
aas
mov
jne
test
or
jle
sahf
lret
repz
aas
jecxz
icebp
mov
jp
pop
xlat
loopne
int
les
jno
inc
pop
jnp
lcall
jns
cs
out
sar
stos
lods
push
popa
jb
outsl
dec
scas
aad
into
cmpsl
cmpsb
stos
in
push
jge
push
jbe
inc
sti
dec
std
adc
push
test
mov
fs
sti
mov
pop
stc
out
pop
stos
mov
sbb
shrb
mov
push
push
shr
jle
sbb
add
je
lret
sub
mov
cwtl
or
and
jp
dec
adc
xor
sbb
std
out
dec
aaa
cmp
pop
push
clc
push
jae
negb
cwtl
add
lods
lock
aaa
insb
cmp
ja
jecxz
jae
sub
mov
out
mov
xchg
xchg
mov
pop
outsl
nop
test
iret
inc
mov
pop
sub
inc
pop
jmp
cmc
mov
enter
pop
sti
popa
gs
adc
fs
adc
adc
sbbl
insl
push
mov
cli
adc
push
hlt
es
sub
hlt
jbe
or
repz
mov
pop
xor
std
cli
or
out
popf
xchg
enter
add
xchg
mov
repz
jl
xchg
testl
xor
xchg
ror
pop
add
call
roll
scas
xchg
xor
cmpsl
lds
cmp
or
mov
adc
pop
outsb
lock
jl
add
jno
and
pop
sbb
inc
fs
loope
sti
mov
and
clc
pop
out
test
mov
aam
stos
push
jnp
mov
out
push
pop
cmp
xor
push
mov
test
mov
out
lds
insb
ja
nop
loope
push
push
fldenv
setl
cli
iret
jns
jb
cwtl
xor
stc
xchg
das
inc
fimull
or
mov
dec
add
add
cmpl
adc
ja
mov
fwait
cmp
push
sti
shll
xorl
xchg
sbb
insb
or
cmpsl
sub
jb
in
cmpsb
xor
repz
mov
adc
cwtl
fsubl
xchg
pop
and
std
push
sbb
inc
bound
sub
mov
roll
bound
sub
stos
les
dec
push
mov
jp
push
pop
mov
mov
mov
popf
rcrl
mov
mov
ret
cmpsl
addr16
hlt
add
das
das
leave
je
mov
mov
xor
xor
icebp
outsl
inc
jo
lea
mov
outsl
add
inc
mov
fnstenv
and
push
into
das
imul
xchg
shr
rcll
inc
jmp
add
jmp
jb
data16
int3
fsubrl
cmp
aam
add
lcall
cmp
and
fmull
xchg
jo
in
and
les
push
movsl
inc
adc
movsl
xchg
jnp
mov
add
hlt
xor
es
sub
pusha
dec
cs
jecxz
cmp
cmp
mov
xor
mov
mov
es
aam
fisubl
inc
ret
lods
mov
xor
in
fiaddl
sub
xor
pop
push
negb
jge
xor
std
xchg
cmp
out
mov
lea
pop
xor
jbe
pop
in
fcmovnbe
add
das
push
and
mov
push
xorl
std
xor
mov
push
cmc
into
cmp
mov
add
lea
xor
add
mov
sarb
lods
pop
or
dec
iret
mov
and
adc
sub
push
mov
xchg
and
or
outsb
jecxz
rcr
inc
bound
sbb
js
adc
filds
shll
enterw
mov
dec
es
push
mov
stos
in
movsb
enter
loopne
fwait
mov
push
cmpl
xor
ds
in
and
sahf
incl
decb
cwtl
aam
in
out
xor
add
add
xchg
dec
push
into
adc
enter
dec
pop
aam
imul
fstpl
sti
cli
cltd
sbb
jae
mov
outsb
dec
into
dec
inc
jg
shlb
js
or
fwait
pop
sub
ret
aam
je
xchg
push
and
sub
mov
mov
lods
mov
aam
xor
ffreep
icebp
lcall
mov
inc
int
outsl
bound
xor
stc
arpl
popa
sbb
data16
bound
jge
test
cld
mov
mov
dec
xchg
in
jne
dec
cmpsb
mov
outsb
daa
jns
jns
hlt
add
cmp
xchg
daa
push
xlat
shrl
sti
rorl
or
pop
cmp
outsl
test
mov
jne
iret
adc
ret
jo
mov
dec
std
mov
and
bound
idiv
sub
xchg
lock
mov
out
ds
dec
inc
lret
cwtl
lret
int3
mov
popa
aam
xchg
or
pop
aaa
lods
loop
insb
in
dec
testb
js
scas
mov
fisubs
scas
adc
popa
jns
test
xor
pusha
rcl
push
loope
jno
mov
inc
pop
adc
xchg
daa
push
add
into
sbb
lea
add
dec
mov
jmp
sub
jne
inc
pop
inc
xchg
jnp
mov
jmp
xchg
lret
inc
into
and
cmp
stc
xor
dec
inc
add
in
je
stos
mov
pop
in
add
nop
push
cltd
adc
in
pop
cmp
lock
lock
jecxz
mov
sub
and
pop
xchg
jmp
in
pop
call
push
into
and
cwtl
into
xchg
mov
sub
fisttps
scas
mov
mov
add
pop
cmpsb
jmp
xchg
ficoml
loop
fs
mov
sbb
pop
inc
inc
test
bound
imul
pop
mov
or
fs
js
push
aas
leave
pop
and
mov
loopne
pop
in
mov
sub
push
fs
xor
cs
mov
inc
fildl
inc
js
enter
gs
cltd
mov
sub
xor
pop
call
ljmp
fists
pop
insl
sub
push
js
pop
enter
mov
movups
sub
push
inc
daa
and
out
lods
mov
sbb
loop
jp
fisubl
jae
jp
adc
faddp
jb
mov
bound
addb
lea
jg
adcl
sbb
and
mov
addr16
jg
adc
sahf
outsb
mov
jecxz
call
dec
ss
adc
inc
in
ja
jp
mov
pop
loope,pn
mov
aam
shlb
mov
outsb
push
xlat
fsubs
fnstsw
sbb
paddusb
mov
mov
push
das
add
ja
lods
fdivrs
pop
jg
sub
lahf
mov
dec
sbb
roll
dec
pop
jno
hlt
xlat
add
xor
sub
ss
in
ljmp
dec
xchg
and
sahf
insl
mov
loope
cli
mov
jge
clc
mov
or
push
in
sub
push
mov
ss
dec
adc
lods
daa
add
cld
mov
add
jle
sbb
in
lods
cmp
in
stc
mov
add
mov
cs
call
xchg
inc
pop
popl
adc
add
aam
sbb
lret
movsb
sahf
pop
mov
sti
gs
cmp
rcrb
mov
xor
cmpsb
push
insb
arpl
pop
and
jmp
arpl
test
push
mov
out
mov
pop
nop
call
add
xor
xor
lock
pop
dec
loope
js
adc
adc
or
jl
mov
pusha
lods
xchg
movsb
mov
les
rcll
or
adc
arpl
mov
pop
xor
cs
imul
adc
pop
pop
por
loop
mov
popa
int
jmp
fldl
out
incl
es
jmp
gs
add
lcall
cmp
add
lcall
sahf
adc
adc
and
popf
pop
push
cltd
lcall
xlat
das
aas
sub
insb
test
sbb
mov
mov
movsb
xor
sti
xorb
adc
imul
cmpsl
sbb
in
sbb
adc
out
mov
inc
mov
jns
push
popa
je
push
mov
cmp
fidivl
out
insl
cmc
pusha
pop
lret
mov
pop
dec
in
in
cmc
mov
dec
inc
leave
adc
sbb
add
pop
add
rcrb
jmp
sub
scas
push
jno
stos
pop
lods
lds
mov
inc
ds
add
xchg
adc
push
xor
popf
out
icebp
xor
jmp
repz
enter
and
jbe
lret
and
rol
cmp
mov
es
jb
jecxz
ficompl
and
lahf
add
mov
stc
jl
xor
push
push
cmpsl
add
push
jp
outsb
ret
sub
dec
sub
nop
xor
push
dec
ljmp
fmulp
mov
xchg
mov
ja
xchg
aad
sub
fdivl
jecxz
adc
loopne
dec
je
adc
in
pop
imul
das
dec
xchg
xchg
ficompl
inc
push
and
jbe
sub
test
lock
cmp
pop
dec
xchg
push
rcll
test
adcl
ret
stos
mov
sbb
jbe
push
mov
leave
stc
jl
dec
pushf
xor
jge
jmp
stos
pop
adc
xlat
xor
into
lock
mov
adc
sub
sub
inc
add
mov
pushf
pop
adc
inc
push
fwait
xor
mov
jnp
aaa
in
jge
leave
adc
and
xchg
movsb
mov
addr16
cmp
in
outsb
test
mov
dec
and
fdiv
int
data16
adc
lret
add
popf
in
xor
push
imull
mov
insb
cld
xchg
push
push
enter
ds
fistl
les
push
mov
or
and
and
push
rol
mov
dec
rcr
addr16
inc
ds
sub
movsb
adc
lods
ret
dec
std
inc
aas
ja
insl
or
mov
jecxz
fistpl
sbb
push
xlat
mov
mulb
pop
hlt
enter
scas
and
lock
loope
sbb
or
adc
and
cli
mov
outsb
push
or
loope
leave
arpl
and
add
movsb
scas
sti
lods
or
xchg
fwait
popf
imul
subb
sbb
push
aaa
enter
push
inc
fstpl
push
mov
test
adc
push
and
cmpxchg
add
cmpsb
dec
lret
sti
call
mov
push
lea
mov
lahf
cli
inc
xchg
cmp
out
and
loopne
pushf
add
sub
stos
fildl
stc
inc
sbb
mov
mov
mov
xor
inc
and
mov
and
arpl
ss
dec
imul
out
sbb
jno
and
insb
pop
nop
jnp
sbb
xor
int
sub
mov
hlt
cmp
xchg
jecxz
fldcw
cmp
imul
or
sub
lock
into
std
shll
lret
lods
iret
jecxz
cmpsl
sub
imul
xor
mov
dec
jecxz
repnz
push
lock
sbb
xlat
arpl
imul
orb
movsl
jmp
jae
popa
dec
js
pop
xorb
xor
inc
dec
inc
dec
sti
je
clc
imul
push
aaa
std
dec
imul
and
mov
lock
sbb
je
mov
inc
int3
mov
xchg
push
push
mov
and
loop
insb
popa
or
out
nop
dec
lcall
aad
inc
loop
rcrb
cmc
js
je
or
mov
and
or
pop
cltd
xor
popf
lea
test
push
sbb
fs
xchg
xchg
jl
rcrl
pushf
cmpsl
hlt
je
iret
push
cld
pop
imul
cmp
ret
push
lds
test
pushf
dec
test
les
jae
insl
ds
mov
xchg
aas
cmp
mov
mov
mov
inc
fistl
insb
mov
cwtl
jno
loope
popa
lret
dec
add
cmpsl
xchg
sbb
mov
xor
daa
daa
enter
mov
sarb
pusha
or
leave
mov
adc
imul
js
push
ljmp
imul
inc
jp
xor
xor
sti
stc
hlt
sub
cmp
push
sub
fildl
cmpb
ljmp
jecxz
jmp
orl
mov
rcrl
xchg
adc
push
xchg
jae
push
xchg
push
ds
cwtl
insb
lahf
setae
into
fadd
add
sbb
das
cmp
push
testl
add
jbe
or
xchg
arpl
mov
lret
jp
mov
dec
jl
sbb
addr16
add
dec
cmp
xlat
ret
aad
xor
xchg
sbb
xor
xor
dec
sub
dec
test
test
add
inc
sbb
fldcw
sbb
xor
lcall
jmp
sub
mov
repnz
into
test
int
mov
lret
sbb
or
xchg
or
sbb
inc
imulb
or
fwait
popa
or
and
cltd
jns
jno
jmp
lods
das
adc
sub
inc
ret
aas
test
inc
mov
in
clc
fdivrl
xor
icebp
pop
pop
xchg
lods
sahf
out
lret
cmp
inc
insb
xor
mov
push
inc
cli
shlb
cmp
cmp
lea
xchg
and
push
scas
sub
xchg
mulb
dec
in
jmp
cli
test
imull
adc
push
mov
mov
aaa
insw
cmp
pop
xchg
nop
aam
push
mov
orl
add
and
and
mulb
jl
xchg
mov
dec
and
imul
inc
jg
xchg
jne
outsb
imul
mov
inc
sbb
addr16
cmp
adc
jae
adc
adc
push
pop
xchg
jb
mov
jne
enter
sub
repnz
mov
mov
fdiv
jb
xchg
add
sbb
lcall
imul
imul
pop
mov
push
movsb
mov
xor
push
mov
push
stc
xor
fstps
mov
loop
jo
pop
xchg
cmp
and
dec
fdivs
ret
jmp
add
adc
mov
mov
lcall
and
sub
aas
int
xchg
in
cwtl
in
in
xchg
or
sbb
int3
clc
insb
bound
mov
xor
or
mov
in
push
jbe
test
ss
cmp
adc
addl
jl
xor
push
pop
cli
jbe
sarb
pop
and
sarb
mov
inc
repz
push
mov
sub
loopne
stos
xchg
lods
sbb
inc
ds
mov
stos
lods
mov
adc
cmp
lea
es
jmp
ss
cmpsb
cmp
mov
xchg
fs
dec
aas
mov
cltd
cmp
pop
lods
into
and
das
jns
adc
out
push
cmpl
pop
jmp
fwait
in
mov
js
jmp
ret
dec
loop
xor
sub
push
dec
pop
fisubs
jo
aas
adc
cld
inc
lds
out
add
push
fnsave
jo
push
inc
jecxz
lock
popf
push
pop
shlb
push
lea
jl
loope
push
jle
flds
mov
jp
jmp
aas
lcall
mov
repnz
mov
pop
or
push
arpl
movsl
sbb
xchg
mov
in
iret
mov
sbb
lret
stos
dec
mov
mov
inc
cli
lahf
xor
test
mov
push
jae
push
or
inc
sbb
mov
iret
cwtl
rorl
mov
cli
mov
gs
jp
dec
adcl
shr
addr16
test
mov
jmp
cmp
and
mov
test
pushf
xlat
mov
jmp
je
out
push
dec
or
mov
hlt
js
bound
xor
mov
movsb
inc
out
jge
popf
imul
xchg
lcall
and
mov
cmp
jp
nop
jns
dec
jne
sbb
mov
movsb
repnz
ror
cld
stos
daa
nop
ljmp
or
fdivs
mov
jae
fcmovnb
jle
stos
sub
inc
iret
fcoml
jae
push
fsubrl
movswl
jle
inc
pop
inc
repz
mov
mov
xor
lods
pusha
push
lahf
or
aad
xchg
cmp
lock
lods
std
outsb
dec
sub
dec
add
pop
or
jne
sub
lea
notb
dec
aas
pop
push
inc
mov
les
mov
dec
sub
add
adc
fisttpll
les
push
lods
lret
imul
mov
ds
sahf
fwait
mov
pop
xchg
addr16
xor
cwtl
adc
shrl
and
mov
jecxz
sub
and
add
adcb
xchg
ficoms
faddl
sbb
inc
in
adc
push
out
cmp
sahf
aam
out
dec
push
sbb
and
sarl
in
mov
movsb
push
pop
sarb
sub
mov
jl
ret
cltd
in
sti
jbe
fcompl
sub
push
pop
lods
test
jge
aas
jg
je
dec
gs
test
lret
movsb
adcl
fidivl
aam
dec
cmp
mov
push
sahf
loopne
cmpsl
mov
mov
in
mov
xor
adc
stos
mov
sbb
sub
mov
dec
pop
pop
add
mov
lahf
ds
mov
pushf
push
les
test
movsb
pop
icebp
subl
mov
push
mov
ja
mov
dec
or
icebp
and
inc
xor
or
dec
mov
sbb
sub
xlat
push
fistps
cmp
test
movsb
sub
mull
or
jp
push
mov
jae
push
jne
pop
xchg
adc
pop
cld
mov
push
lret
sbb
dec
movsb
fldcw
lret
pop
bnd
sbb
popf
jae
xchg
xor
sbbl
not
mov
cld
mov
ja
xchg
test
xchg
push
mov
psubw
lock
and
mov
push
mov
inc
sub
or
cmc
cmovp
testb
mov
add
insb
inc
xchg
sub
sbb
xchg
jmp
dec
pop
cmc
lahf
fstps
insl
fsubs
fsubl
pop
pusha
outsl
fstl
jns
add
push
sub
dec
scas
jl
jp
jb
inc
sub
dec
shrd
xchg
dec
out
or
lahf
add
sti
inc
dec
or
or
movl
fisubrs
fstpl
sub
lret
xor
arpl
pop
fmuls
popf
dec
fucomp
adc
mov
sahf
iret
push
int3
ss
mov
xor
idiv
jl
imul
lods
push
mov
fdiv
sub
jbe
pop
inc
ds
rolb
ret
movsl
dec
pop
in
jecxz
arpl
cmp
pop
sub
jle
sbb
movsl
inc
es
enter
mov
movl
adc
cli
popa
inc
dec
mov
test
inc
lahf
and
lock
and
and
ret
or
lods
mov
test
adcb
leave
mov
ret
mov
jae
shrl
mov
xchg
ret
mov
jecxz
int
dec
and
dec
mov
push
pop
inc
in
dec
fildll
and
inc
dec
mov
add
cs
movsl
popf
sbb
jmp
out
mov
cld
and
test
xchg
xchg
leave
aaa
stos
mov
ljmp
rcr
sbb
dec
cmp
test
clc
shrl
fistpl
inc
dec
ret
and
adc
ljmp
loope
jle
or
dec
enter
cli
mov
xchg
xor
pop
jle
mov
mov
jno
mov
sbb
pop
aam
notb
pop
and
out
jnp
xchg
jg
cltd
push
es
loop
cmpsb
push
mov
cwtl
cmp
sub
out
inc
push
lock
test
ja
in
and
xor
call
add
xchg
pop
lahf
test
repnz
je
movsb
push
mov
lods
mov
push
jle
cmp
jp
sbb
cwtl
roll
mov
stos
arpl
dec
andb
cmp
inc
repnz
adc
outsb
cmpb
bound
xchg
mov
pop
in
in
mov
or
push
fimuls
negl
cmc
mov
dec
ljmp
xchg
lret
sarb
adc
fistps
and
and
pushf
mov
ficompl
enter
pop
sti
sti
popl
fldenv
inc
mov
push
nop
pop
rcrb
aam
ds
loop
mov
dec
out
dec
icebp
out
lret
mov
iret
jne
mov
bound
mov
adc
push
movsl
fisubrs
adc
cmp
mov
addl
out
jge
dec
bound
mov
push
fdivp
and
pop
dec
mov
lock
pop
jecxz
cld
or
dec
sub
test
loopne
loop
lds
xchg
and
packssdw
sub
and
shrb
inc
or
lds
sbb
lods
insl
movsl
inc
rcrl
aad
popa
call
out
push
and
sbbb
rcr
les
dec
push
aam
inc
repz
cmp
cmp
xchg
mov
arpl
cmpsb
scas
jecxz
jb
sub
jmp
mov
lock
sbb
mov
sti
insb
dec
mov
in
ret
xor
mov
cmpsl
push
jo
jne
int3
fisubrl
sahf
jo
add
fs
ljmp
in
sub
movsb
imul
ja
sub
sub
aas
push
cmp
jecxz
sub
popf
jae
cmp
pop
stos
and
sbb
ret
cld
sbb
sbb
push
push
and
jo
ljmp
pushf
cltd
push
roll
aaa
pop
sub
mov
cmp
loop,pn
bnd
adc
xor
fadds
xor
int
and
arpl
repz
lcall
insb
pop
mov
ja
jge
test
sbb
inc
inc
sti
les
adc
lock
ds
mov
popl
pusha
ret
sahf
mov
out
scas
push
push
mov
push
jne
sbb
mov
scas
lret
jbe
ljmp
push
push
inc
mov
push
push
xchg
jge
out
push
lock
pop
mov
push
pop
inc
jb
mov
loopne
mov
dec
cs
sahf
sbb
mov
outsl
inc
movsl
lea
ljmp
inc
jns
test
push
jmp
cmp
or
ret
mov
repnz
sahf
lret
icebp
insl
loopne
out
xor
fisubs
test
jp
imul
dec
adc
jae
sbb
xchg
sbb
clc
xchg
dec
push
xchg
or
mov
or
lret
cltd
mov
movsl
xchg
xchg
adc
add
dec
xchg
add
fnsave
inc
pop
mov
mov
into
cmp
xchg
mov
mov
rcl
repz
push
adc
add
dec
lret
jmp
loop
xor
sarb
pop
arpl
fs
sub
pop
cmp
mov
inc
or
mov
popf
out
cld
stos
sbb
xchg
jl
mov
mov
xchg
cmpsl
dec
cmp
dec
sahf
and
jbe
in
mov
sub
adc
add
xor
adc
gs
mov
imul
mov
std
outsl
shll
mov
sbb
insl
fistpl
xor
js
cmp
imul
in
sub
fisttpll
pop
or
pop
cmp
add
adc
fs
test
push
or
add
fadd
sub
xor
mov
dec
sbb
jnp
cmc
adc
arpl
and
and
jmp
fidivl
mov
hlt
shlb
xchg
push
das
das
mov
pushf
push
push
inc
mov
xlat
ret
mov
lret
addb
cmp
mov
in
xor
dec
jl
and
loope
sub
loopne
mov
mov
mov
mov
push
pop
fisubl
lcall
push
repz
lods
data16
xor
scas
add
push
sub
ret
adc
jo
xor
and
gs
rorb
cmpl
fucomip
inc
pop
fcompl
mov
loop
cwtl
xchg
sar
ds
ficompl
in
xchg
jne
popf
lcall
pop
cmp
mov
imul
xor
jb
or
mov
push
mov
jge
inc
sbb
clc
sub
fldz
jg
flds
test
jae
bnd
arpl
jb
push
cmp
sarb
xchg
push
or
test
pop
ret
fwait
push
into
mov
and
mov
dec
lods
sbb
sub
mov
js
mov
mov
push
fstp
jbe
xchg
rcr
and
jb
sar
sub
rorb
xchg
fisttpl
pushf
inc
movsl
mov
push
stos
and
and
rolb
lock
addr16
mov
fxch
test
fbld
and
into
xor
sbb
repz
mov
mov
sbb
fwait
push
lea
cmp
xchg
mov
pop
push
stos
cwtl
outsb
ds
fmul
movsl
sub
adcb
idiv
cld
inc
xchg
testl
sbb
jmp
ret
adc
lea
jns
insl
paddd
mov
or
ret
mov
add
and
cmp
shrb
push
outsl
xchg
cltd
pop
mov
nop
xlat
hlt
xchg
sarl
mov
cmpsl
dec
scas
out
test
gs
or
test
sub
movsb
sbb
enter
call
xor
inc
loopne
push
das
into
mov
dec
addb
js
mov
mov
cld
pop
xor
js
neg
nop
data16
int3
lods
inc
sbb
or
pop
mov
xchg
fs
mov
sbb
out
or
sub
push
scas
adc
xor
and
cmp
xlat
dec
lret
push
push
mov
mov
push
loop
jp
add
mov
jl
test
jne
outsb
cmpsb
sahf
rep
addr16
and
loop
pop
cmp
insb
std
adc
pop
lret
jmp
ret
je
dec
inc
pop
dec
lret
adc
inc
stos
xor
mov
std
pop
or
adc
ret
xchg
arpl
leave
sub
int
push
mov
inc
repz
fdivr
jl
mov
ret
movsb
push
rclb
mov
or
xor
xor
adc
sbb
push
dec
jno
adc
fidivl
fnstcw
repz
aam
pop
fmull
inc
ljmp
stos
stos
cmp
cmpl
cmp
aam
sbb
lcall
pop
mov
dec
mov
jb
cmp
cs
das
test
addb
scas
popf
push
or
jecxz
fstpt
andb
sbb
pop
je
mov
mov
and
mov
adc
addl
inc
pushf
adc
jmp
out
in
lea
lds
test
sub
pop
lods
dec
bound
test
nop
mov
loopne
fidivrl
inc
adc
aam
push
inc
mov
pop
sahf
out
sub
leave
adc
mov
out
cwtl
ret
outsb
inc
imul
push
in
add
movsl
xchg
aaa
or
aam
iret
fsubrl
lock
inc
lods
or
mov
fcoml
pop
push
arpl
sub
pop
aaa
idivb
sub
jg
jl
pushf
sub
shl
aas
movsl
adc
in
jb
xor
mulb
jb
jo
ss
loop
push
ja
mov
js
es
push
xchg
sbb
and
repnz
rolb
inc
movsl
lahf
dec
outsb
arpl
mov
push
icebp
sub
adc
cmpsl
lock
stos
stos
mov
jmp
sahf
push
cmp
or
jp
ljmp
aam
popf
dec
dec
into
mov
push
in
gs
xor
fimull
dec
fdivrs
cmpsb
mov
cmc
flds
xor
clc
lret
lock
xchg
pop
js
inc
mov
xor
mov
pop
popf
stos
push
lea
mov
popf
jle
popa
es
jecxz
xchg
fwait
out
lock
mov
data16
sbb
out
out
pop
sbb
and
jecxz
adcl
mov
push
repz
dec
push
or
xor
sbb
out
sarl
adc
scas
icebp
aas
cs
ljmp
jns
xlat
mov
jno
jne
adc
in
repnz
adc
pop
cmpsb
pop
rcrl
inc
sub
data16
fcmovnu
ror
leave
lds
or
inc
pop
and
mov
sbb
loop
inc
loopne
pop
xchg
pop
or
and
lea
outsb
arpl
xchg
call
nop
dec
add
movsb
movsl
xchg
into
inc
jg
stos
mov
ja
inc
add
or
mov
das
pop
imul
imul
push
roll
jbe
leave
pop
and
adc
xlat
xchg
sbb
lcall
mov
jge
sbb
jp
mov
fnstcw
int
divl
ret
rorl
pop
push
ret
int
push
dec
dec
cltd
mov
cltd
mov
int3
jns
scas
pmulhuw
imul
xlat
mov
divl
ljmp
jl
inc
mov
out
push
or
add
sbb
push
cmpsb
pop
frstor
outsl
mov
or
inc
es
enter
aaa
out
sahf
jbe
out
mov
xchg
adc
inc
mov
in
aad
bound
movsb
outsb
mov
push
add
mov
lea
daa
scas
fildll
and
dec
loopne
nop
add
add
out
roll
popf
pop
sub
int
jae
lret
lret
jmp
stos
lret
push
dec
inc
lahf
fimuls
ucomiss
mov
dec
in
dec
js
jle
xor
and
cmpsl
pop
cmc
jno
pop
repnz
rcl
xor
das
or
test
cs
mov
push
push
mov
xor
ja
pushf
or
adc
xchg
or
dec
pop
or
loopne
jecxz
rcll
jecxz
aaa
std
fcomps
xchg
mov
cmpsb
and
xor
test
flds
in
clc
mov
cmp
scas
pop
inc
stc
dec
jg
ret
pop
sbb
imulb
cmp
xor
mov
add
loop
pop
cmp
pushf
aaa
lods
jle
xor
bnd
mov
jne
adc
push
test
add
xor
sub
subb
mov
roll
xchg
or
mov
pop
insb
int3
int
xchg
adc
adcb
clc
xor
aad
and
ja
dec
outsb
jnp
jbe
popf
outsb
mov
rcrb
mov
jg
push
sub
push
jg
rolb
xchg
jno
andb
repz
insl
mov
lock
outsb
add
sbb
xor
arpl
out
cltd
mov
push
insl
xlat
mov
pop
bound
xchg
cmp
mov
cmpsl
outsb
sub
negb
lock
inc
lods
inc
test
dec
xor
lock
jl
sub
jne
mov
scas
or
fs
into
jp
lahf
data16
jae
lret
push
adc
pop
lds
adc
les
loope
lahf
int
pusha
iret
pushf
xlat
lret
add
mov
push
bound
cwtl
insl
dec
adc
addr16
scas
jne
lret
mov
loopne
or
shl
adc
jp
sbb
push
imul
filds
mov
and
mov
add
insl
sahf
cmp
stos
cwtl
shr
xchg
dec
fnstsw
xchg
sbb
adc
data16
fwait
je
sub
xor
and
pop
call
cmc
xchg
mov
movsb
ds
push
adc
in
mov
inc
xchg
jne
mov
mov
sbb
and
xchg
scas
fimull
out
mov
jne
call
add
push
jno
ret
rorb
mov
cmc
scas
xchg
imul
inc
inc
sbb
or
std
add
mov
je
sbb
lock
lock
and
xchg
push
adc
scas
mov
pop
mov
hlt
das
mov
fldenv
sub
loopne
pop
test
mov
adc
loop
add
mov
icebp
inc
pushf
pop
addr16
and
pop
or
xchg
andb
subb
lcall
mov
repz
pushf
stos
shll
stos
xchg
push
xor
pop
xchg
cwtl
adc
jmp
jecxz
push
pop
xor
mov
loop
jb
fildll
int3
xchg
rorb
adc
div
imul
fldl
lret
jnp
fsubrl
mov
lahf
xchg
fucom
jno
jl
insb
sahf
clc
mov
nop
push
mov
repnz
xlat
xchg
xchg
mov
cmp
xchg
int
pop
mov
pop
push
pop
and
mov
in
cli
jg
fidivl
mov
ljmp
cli
insl
or
fcompl
loope
mov
loop
es
cmp
and
lret
inc
push
dec
cmc
fwait
ret
jo
pop
lods
in
cld
mov
scas
pop
push
shll
push
mov
xor
ja
mov
in
dec
ljmp
int3
add
dec
sub
shlb
dec
out
add
sub
div
add
and
jle
pop
out
imul
xlat
mov
dec
ja
sub
mov
push
or
jp
push
fiaddl
cli
and
adc
pop
repz
clc
cltd
insl
push
dec
arpl
in
inc
cmp
shlb
mov
in
pushf
or
cld
push
xor
push
mov
pop
in
mov
fwait
dec
fistpll
xor
ds
loop
rolb
xchg
movsb
xchg
mov
jmp
idiv
es
dec
arpl
sbb
jno
pop
lret
and
push
push
js
addr16
es
mov
imul
repnz
sub
sbb
adc
xor
inc
leave
lcall
ret
mov
repz
inc
sbb
cmp
out
cld
mov
sub
xchg
ljmp
push
es
mov
and
cmp
gs
xchg
daa
loope
in
idivb
or
mov
xor
add
xchg
jg
cmc
and
arpl
repnz
fildl
les
pop
xor
out
xchg
add
mov
leave
mov
lahf
pop
ret
push
dec
sti
rorl
jns
aad
and
cli
push
and
loopne
cs
stos
pop
lock
push
adc
jne
and
aam
rolb
push
dec
mov
ret
mov
mov
fwait
ljmp
sbb
dec
rcrb
arpl
cmpsl
int3
sbb
jae,pn
or
test
add
cmpsl
pop
sub
push
xor
je
mov
sbb
faddp
rclb
ret
nop
gs
dec
lds
inc
jecxz
inc
arpl
mov
stos
bound
in
shll
mov
sbb
dec
add
bound
cmp
xlat
aas
pop
invd
movsl
iret
aam
xor
ds
sbb
push
push
sub
mov
data16
cmpl
push
xor
lahf
lcall
add
mov
out
jge
das
nop
fildl
cmp
es
push
repz
xchg
loope
hlt
fidivl
ljmp
jp
mov
sub
iret
mov
dec
push
inc
lock
cli
std
inc
xor
or
jg
shrb
ja
loope
pop
hlt
out
pop
test
push
js
out
aaa
add
shlb
mov
add
rorl
mov
lods
cmp
cs
fsubrs
sub
dec
sarl
push
cmp
pop
imul
iret
jecxz
or
lret
mov
xor
xchg
pop
or
mov
cmpsb
ret
std
mov
lds
mov
lahf
lock
andb
ds
xor
and
xchg
cld
lahf
dec
cs
out
or
aas
aas
add
and
aaa
mov
fistpll
shrl
cmp
testb
push
mov
in
pushf
scas
pop
jae
cli
jle
adcl
mov
jg
xor
aas
or
lods
faddl
xor
inc
cmp
or
xchg
in
lahf
sbb
cmp
fxch
add
mov
push
lcall
stos
mov
sbb
push
movsl
sbb
or
insl
push
mov
push
sbb
icebp
mov
rolb
aad
push
and
leave
pop
icebp
pusha
les
shll
test
sbbb
rolb
mov
jbe
or
xor
push
jmp
and
clc
jecxz
testb
scas
adc
clc
pop
mov
call
faddl
push
sbb
ds
pop
push
lods
clc
test
cmp
call
leave
jg
add
cli
xchg
dec
inc
movsb
scas
ret
xchg
ds
aad
and
lock
in
pop
xlat
scas
lea
aam
stc
xor
and
outsb
push
dec
cwtl
add
les
jb
xchg
fldl
xchg
fcmovnu
or
outsl
cmpsb
inc
mov
cld
sbb
and
or
and
xor
push
ja
orb
gs
clc
imul
nop
dec
add
dec
int
jnp
jp
add
nop
subl
outsb
hlt
call
xchg
jmp
add
fsubrl
xchg
or
stos
lock
fbstp
ds
mov
out
sub
jmp
test
lahf
sahf
outsb
sti
mov
je
push
lods
mov
xor
jp
sti
add
inc
add
add
add
cli
dec
xor
jae
insb
inc
imulb
push
sbb
sub
leave
jnp
mov
mov
mov
out
pop
and
lret
mov
dec
not
mov
enter
cld
mov
insl
xchg
xchg
mov
outsb
cmc
lret
mov
mov
ret
mov
fisubrl
add
and
push
mov
add
and
sbb
push
xchg
lods
sbb
mov
xchg
addb
pop
enter
push
add
mov
fmuls
movsl
xlat
mov
xchg
jae
xchg
dec
jnp
repz
in
ja
call
or
test
pop
mov
add
outsl
pushf
js
fwait
insb
and
pop
scas
sub
pop
leave
xchg
jg
fwait
mov
jle
popf
mov
mov
jmp
nop
fisubrs
mov
xchg
dec
sub
cltd
lods
mov
outsl
insl
jne
inc
adc
or
push
je
ds
or
or
add
inc
sbb
lea
adc
loopne
or
or
loopne
fistpll
bound
insb
cmp
iret
jle
and
stc
stos
cltd
insb
inc
mov
in
jp
out
dec
inc
adc
movsb
cmovne
mov
scas
lock
mov
mov
mov
xchg
mov
cmpsl
fwait
pop
aam
add
jb
xchg
inc
push
add
lods
mov
pusha
mov
and
and
int3
add
icebp
ljmp
mov
test
dec
cld
das
shr
ret
movsl
pop
jl
dec
mov
in
sti
xor
or
xchg
jnp
sub
pop
nop
sub
or
cmp
hlt
add
mov
rolb
idivb
or
dec
nop
bound
mov
hlt
sbb
pop
add
pop
adc
insl
aaa
sub
lahf
sti
andl
loope
dec
inc
scas
mov
push
cmpsl
jnp
pop
cmp
in
cmp
rol
mov
cmc
mov
out
je
jl
mov
or
push
cs
gs
int3
fiaddl
jo
sub
inc
neg
xchg
gs
es
stc
mov
rcrl
lds
loopne
dec
dec
xchg
and
jo
sbb
jns
out
xchg
xchg
daa
pop
negl
out
mov
rolb
or
push
cmp
fcmovu
mov
loope
test
jne
adc
fnstenv
push
push
lea
sub
sub
repnz
movsb
xchg
mov
jle
xchg
jb
jg
imul
xchg
or
fs
call
inc
or
orl
repz
push
pop
mov
movsb
rorb
pop
lods
icebp
fucomp
adc
mov
push
mov
arpl
cmp
rcrl
add
cmp
sub
rcll
andb
jno
in
cmp
inc
movsl
xchg
jnp
cs
sbb
inc
cmp
insl
pushf
dec
pop
sub
rol
shl
and
add
or
scas
sbb
fstl
dec
mov
repnz
mov
cmpsb
pop
popa
dec
pop
and
pop
jae
filds
jmp
and
inc
js
jns
push
dec
mov
mov
sbb
bound
call
mov
mov
cmp
test
mov
rcr
xor
test
out
lcall
addl
jge
out
dec
in
pop
and
jecxz
mov
xor
and
imul
push
inc
cmp
dec
xor
mov
cs
mov
rolb
addr16
movsb
xchg
fcomps
cmpsb
dec
cli
inc
rcr
or
bound
adc
ffree
mov
stos
sub
std
daa
arpl
pop
imul
clc
andb
loop
sbb
ret
push
fsubrs
jecxz
xchg
dec
add
xlat
mov
insl
push
xchg
mov
push
aaa
and
lahf
pop
dec
sub
iret
inc
mov
mov
xor
mov
sub
mov
outsl
addr16
fwait
jbe
mov
xchg
cmp
mov
cs
out
and
loopne
js
out
mul
es
in
sbb
sbb
cmp
fidivl
push
push
xor
movl
add
adcl
inc
push
inc
daa
mov
insb
stc
sbb
lret
jg
push
loopne
xchg
fsubrp
xchg
fwait
sub
sub
stos
sub
mov
dec
loope
lcall
pop
loopne
and
cmpsb
loope
adc
mov
cmp
pop
mov
cmp
fistpl
pop
sbb
enter
push
ljmp
jecxz
jge
cli
mov
sbb
inc
xor
scas
inc
push
nop
stos
xor
daa
adc
mov
jmp
in
je
add
dec
pop
stos
mov
pushf
pushf
pop
add
dec
cld
jg
aas
jp
stc
mov
rol
std
sahf
int3
arpl
mov
and
je
outsb
inc
push
das
roll
lahf
jecxz
pop
pop
nop
stc
js
loop
daa
mov
ss
and
mov
jmp
fistpll
add
jmp
add
int
fsubrp
stc
dec
adc
mov
pop
scas
pop
or
or
lretw
shrb
rcll
fisttpl
xchg
jbe
inc
adc
les
adc
mov
je
xchg
int3
jno
repz
dec
adc
idivb
out
in
fdivs
popa
sar
test
xchg
cmp
mov
sarb
leave
sub
xor
mov
mov
mov
fcoml
xchg
loope
and
in
movsb
je
gs
je
push
jl
loop
push
bound
call
sub
adc
or
test
in
ss
call
inc
mov
mov
inc
add
mov
cmp
fs
jae
outsl
and
pop
sub
lds
pop
hlt
out
push
sub
or
cmovno
call
je
push
mov
and
rorb
mov
sbbl
mov
rcrl
lods
cltd
stos
adc
in
or
xor
jmp
sub
enter
aam
ret
cmpsl
incl
lret
push
bound
imul
mov
pop
or
fidivs
aas
add
push
mov
outsb
bound
add
inc
add
pop
outsb
arpl
je
and
mov
movsl
pop
mov
fwait
das
dec
insl
jns
mov
sbb
add
inc
out
mov
gs
fwait
testl
lahf
movsb
out
adc
lock
loopne
jbe
int3
out
je
sbb
mov
fbld
cmp
sar
ss
pop
and
add
or
cwtl
xlat
pop
insb
aam
sbb
mov
lret
rolb
dec
sub
test
aad
ljmp
push
orb
rdtsc
xlat
ljmp
lods
mov
mov
cltd
inc
xlat
sub
mov
mov
sbb
aam
and
daa
cs
shll
shll
rcrb
adc
sahf
inc
inc
inc
push
sbb
inc
xchg
add
hlt
sbb
mov
inc
leave
repnz
imul
out
or
mov
and
sahf
pop
in
pop
or
daa
dec
clc
cmc
jns
xchg
inc
into
jg
or
out
adc
and
sub
in
icebp
cmp
testl
scas
cmp
sbb
mov
sbb
sbb
shlb
data16
rorb
pop
add
mov
addb
cwtl
sarb
inc
dec
mov
cltd
sub
out
addr16
out
xor
sbb
adc
add
dec
shlb
popa
mov
cmpxchg
lods
icebp
lea
cmp
mov
imul
xor
mov
loope
mulb
lret
mov
push
adc
dec
lds
iret
mov
cmpsl
cld
shll
pop
pop
add
adc
fwait
pop
push
inc
sub
gs
cmpsl
jg
jne
daa
inc
fcmovne
xchg
adc
xchg
add
cmp
mov
std
lods
ret
jne
mov
or
fs
dec
mov
cwtl
loop
testl
pop
imul
ficompl
pop
in
jge
scas
mov
std
xor
pop
daa
imul
mov
inc
stos
fimull
iret
test
xchg
imul
pop
inc
jl
adc
mov
pop
pop
icebp
std
fmuls
clc
xchg
das
test
or
lds
add
pop
jecxz
cmpl
mov
pop
fsubs
push
or
xchg
xor
push
inc
into
sbb
mov
mov
mov
andb
imul
sub
les
shl
pop
and
sub
cltd
or
shll
pop
mov
add
xor
jle
xchg
jo
xchg
out
push
push
imul
mov
xchg
jbe
dec
sbb
push
cmp
push
daa
lock
or
insb
fnstsw
shrb
cld
mov
idiv
mov
call
cmp
push
test
fsubs
cli
test
and
sub
and
push
add
mov
dec
xchg
push
cmp
pop
je
out
repz
loopne
test
sbb
out
pop
adc
and
test
or
adc
inc
pop
and
jmp
add
jne
sub
lcall
dec
ss
jns
ds
or
dec
add
scas
loopne
push
loop
sub
mov
fldenv
push
imul
imul
mov
jo
cli
ja
sub
sbb
xchg
fsub
enter
clc
mov
in
jp
sub
dec
mov
mov
mov
xorb
xor
fistps
stos
jbe
mov
add
pop
mov
lea
xchg
jne
imull
mov
xchg
adc
inc
les
stc
cld
lcall
fcoml
fldcw
add
data16
popa
pop
mov
xchg
add
lods
div
cmc
call
sub
js
mov
out
mov
inc
test
jbe
adc
or
mov
jnp
aam
mov
or
pop
jbe
into
cmp
pop
cmp
adc
xor
add
mov
adc
sarb
sbb
icebp
test
xor
movsl
andl
cmp
das
sbbb
push
pop
xchg
lret
and
mov
mov
ds
ljmp
in
movsl
ror
flds
xor
jmp
and
inc
add
jge
out
mov
daa
push
and
xchg
push
xchg
dec
mov
push
xor
dec
aad
icebp
test
sbb
loopne
enter
jle
sub
xor
outsl
pop
jo
push
xor
bound
loope
mov
test
push
lock
jo
or
mov
imul
dec
dec
dec
and
adc
test
shrw
movsl
pop
push
notb
or
cs
aam
repz
and
xchg
ret
xchg
das
add
ret
aaa
sbb
dec
jb
xchg
mov
or
test
add
and
jo
imul
cmp
sub
sbb
and
pop
pop
xor
shrb
lahf
or
sbb
stc
call
xchg
jno
xor
xchg
push
mov
jge
call
add
push
adc
lcall
js,pn
inc
pop
loopne
push
lods
imul
xchg
cmc
fsubs
and
lahf
push
sbb
insb
mov
dec
xor
add
add
loop
imul
fistpl
mov
inc
pop
jecxz
mov
fcompl
jge
add
xchg
add
repnz
cmc
pop
movsl
inc
mov
enter
and
lods
das
dec
push
and
mov
inc
fildll
test
aam
jnp
lods
push
pop
cmpsl
repz
push
stos
jo
push
lods
movsl
loope
mov
xor
xor
in
insb
push
mov
xchg
aas
stc
push
pop
jbe
jmp
adc
add
pop
push
jae
cmp
xchg
dec
jno
pop
mov
movb
xchg
add
adc
cmpsb
sbb
push
lahf
cmp
and
or
and
sti
cld
jae
inc
or
or
xor
mov
pop
mov
jae
add
mov
fsub
jmp
je
lahf
stos
loope
push
mov
mov
aaa
add
popa
imul
add
pop
xlat
je
ljmp
and
int3
sub
cmpsb
clc
data16
clc
or
xchg
stos
add
ds
mov
fistps
enter
add
jo
dec
sub
and
and
lret
or
pop
and
clc
or
fwait
lock
xchg
jg
insb
rcl
dec
cs
aad
adc
adc
gs
shrl
ljmp
sub
adc
sub
push
insl
add
adc
lahf
add
lock
rorl
out
pop
dec
pop
xchg
adc
pop
mov
outsl
ret
mov
mov
fldl
push
test
ret
or
fstps
pop
lea
and
adc
in
jmp
sahf
push
ds
inc
add
mov
cmpb
lods
dec
cmp
popf
pop
inc
fwait
mov
add
xor
fst
mov
out
sub
leave
pop
and
xor
lahf
inc
adc
stc
jno
lret
outsb
push
adc
xor
mov
xchg
mov
xchg
movsl
dec
push
dec
xchg
ljmp
pop
out
cmp
adc
lret
pop
gs
jmp
mov
test
hlt
mov
enter
cmp
or
lahf
clc
inc
andl
ret
sbb
sub
jns
xor
add
lea
push
scas
lret
jle
jbe
pop
push
mov
int3
xchg
aad
addb
cltd
adc
in
and
ss
xchg
xor
jg
add
pop
inc
out
inc
fidivs
and
mov
push
into
stc
xor
dec
xchg
imul
xor
out
adc
cwtl
add
fimuls
adc
pushf
or
fs
xchg
gs
dec
lcall
leave
xchg
pop
or
mov
xlat
in
mov
fs
jo
and
dec
xchg
loopne
fdiv
sub
sarl
andl
adc
cld
or
movsl
loopne
loopne
imul
ret
adc
mov
hlt
stos
pop
fisttpl
les
inc
xchg
xchg
loope
and
sub
repnz
test
clc
sbb
jmp
in
cmp
pop
sub
sub
jp
cmp
mov
hlt
jp
dec
inc
cmp
rcrb
xor
and
push
and
pop
jnp
ds
inc
inc
jne,pn
fsubs
xor
add
adc
leave
scas
lds
repz
mov
mov
mov
jb
movsl
add
inc
fwait
in
push
dec
dec
mov
add
or
imul
dec
stos
xchg
inc
pop
dec
sub
enter
sbb
fcomp
stos
xor
push
xchg
mov
lcall
dec
mov
movsl
cwtl
push
xor
xor
pop
scas
das
out
sbb
in
xchg
test
add
sbb
shrl
mov
inc
dec
leave
shl
xlat
ljmp
enter
pop
mov
ret
arpl
lock
add
test
jg
mov
pmullw
xchg
push
inc
jmp
mov
push
push
movsb
lods
scas
cltd
mov
xor
pop
pushf
jp
or
xor
xlat
lea
mov
xchg
ljmp
jno
mov
inc
and
lods
and
inc
ficomps
std
loop
inc
loop
data16
stc
inc
stos
push
sbb
jae
nop
scas
push
mull
push
cmp
imul
dec
shl
and
or
movsl
mov
mov
roll
fwait
sti
pop
clc
pop
dec
int3
jp
xor
push
inc
lods
outsl
mov
adc
lahf
enter
testb
xchg
nop
loop
test
je
rorb
inc
sbb
outsb
xlat
enter
sbb
dec
ljmp
add
fwait
inc
pop
cmc
inc
fcoml
jg
rorl
mov
adc
mov
pop
ja
adc
adc
adc
insl
inc
call
rcll
pop
ret
sub
in
push
inc
cmp
or
inc
pop
and
lcall
xchg
add
and
lock
sub
cltd
pop
mov
rcr
mov
daa
xchg
add
mov
add
push
cmp
sub
arpl
nop
push
arpl
push
xchg
mov
fwait
scas
adc
xchg
pop
cwtl
imul
push
push
hlt
test
inc
test
and
mov
or
in
mov
adc
cld
xchg
sbb
dec
adc
jmp
sahf
cwtl
fdivrs
xchg
ret
mov
lret
dec
push
pusha
mulb
inc
inc
gs
xchg
push
push
clc
orl
aad
push
inc
mov
mov
aad
adc
mov
jbe
dec
das
xchg
xchg
mov
inc
enter
pop
pop
outsb
jmp
xchg
push
pop
xor
pushf
dec
loopne
roll
mov
mov
mov
pop
pop
and
xor
pop
test
and
iret
adc
inc
inc
adc
pusha
and
or
jmp
dec
add
mov
repz
pushf
dec
loope
cmp
inc
dec
mov
iret
stc
mov
lahf
jmp
push
inc
jmp
xor
aaa
imul
dec
in
lret
pop
sbbb
ja
mov
iret
mov
imull
push
mov
fsubl
fwait
jle
es
jno
add
std
rcll
or
fwait
pushf
dec
popa
out
popf
test
dec
dec
aam
jno
dec
xorl
idiv
cmpsb
mov
es
mov
lcall
mov
jae
add
das
xchg
cli
fcoml
repnz
or
daa
xchg
adc
aam
inc
nop
in
inc
inc
add
fistpl
ds
push
inc
cli
rorl
std
inc
xchg
sti
dec
sti
ljmp
inc
cmp
jge
ret
dec
enter
or
inc
clc
cli
push
outsb
dec
push
fcom
xchg
pop
add
out
lret
mov
xchg
add
inc
lret
aam
divb
xchg
decb
rol
neg
sub
sub
push
lods
push
sub
bound
fs
aas
rcrl
xchg
clc
mov
ficoms
into
and
inc
push
xchg
or
inc
lea
pavgw
inc
int3
xor
pop
lret
std
push
sbb
xor
iret
inc
cmp
mov
cmpsb
aad
mov
pusha
sub
or
inc
push
adc
fstps
out
pop
fsubrl
sarb
jp
mov
fisubrs
cmp
ror
test
mov
popa
mov
jno
adc
push
pop
cwtl
dec
out
or
insl
cmp
mov
lcall
repnz
lret
inc
and
fninit
xchg
mov
inc
adc
adc
out
adc
adc
fstl
fucomip
and
mov
push
mov
jbe
mov
out
push
pop
add
outsb
mov
sbb
scas
inc
sub
xchg
popf
outsb
popa
stos
push
xchg
pop
dec
scas
xchg
jo
xor
lods
cltd
or
daa
dec
int
test
dec
int
ljmp
push
in
cmp
data16
cmp
jmp
xor
outsb
cld
cmpsl
pop
sarl
in
lret
pusha
ja
popf
mov
imul
outsl
lea
add
add
mov
pop
daa
jmp
incb
mov
xor
jbe
inc
movb
push
or
sub
popa
inc
lds
bound
or
jg
icebp
dec
jle
imul
jg
fadds
mov
ficomps
mov
out
pusha
test
xchg
int
sub
test
arpl
xchg
dec
das
ret
mov
or
addr16
or
jmp
dec
jl
inc
jge
insb
out
stc
clc
pop
fidivrl
add
xorl
and
mov
dec
addb
sahf
fldt
stos
lret
push
jle
inc
jnp
fsubr
je
insb
xchg
jmp
stc
in
aas
movl
lds
fdivr
and
jg
inc
dec
adc
mul
shrb
pop
fldl
pop
in
dec
inc
mov
sub
push
pop
fimuls
ljmp
int
inc
mov
mov
xchg
mov
push
sub
fsubrs
sub
stc
shlb
lds
sub
insl
cltd
mov
mov
dec
cmp
popf
xlat
and
sahf
pop
adc
inc
mov
push
fdivs
lds
dec
les
xchg
and
js
cmc
fsubrl
or
fldcw
nop
mov
inc
cmp
lahf
mov
stc
loopne
adc
pop
jo
jge
test
imul
add
jmp
imul
push
push
add
mov
pop
xor
ds
adc
xchg
jmp
aad
outsb
mov
inc
fwait
ja
mov
std
sbb
or
bound
push
outsl
insb
enter
cmp
add
aam
mov
cmp
cli
into
mov
imul
divl
or
inc
stc
addl
std
pusha
gs
sub
mov
ja
fbstp
iret
sbb
nop
mov
lcall
dec
xor
ljmp
rolb
in
je
xor
xchg
ljmp
push
pop
add
mov
lock
adc
es
cld
jmp
mov
cmpl
dec
or
sub
push
cli
test
pushf
cli
lds
fsubrl
addr16
jp
push
adc
je
or
pop
or
cmpsl
ljmp
int3
or
fcompl
push
imulb
adc
outsb
sti
divl
iret
ret
cltd
leave
add
push
je
cmp
in
mov
xor
outsl
popa
shl
inc
nop
or
fwait
into
outsb
pop
sub
xchg
and
fiadds
pop
mov
jb
add
jmp
mov
imulb
lcall
cltd
dec
data16
sub
lcall
adc
xchg
shlb
cmp
xor
mov
dec
cmp
dec
or
aas
pop
mov
shll
int
fsubrp
ljmp
push
jmp
push
sub
jb
roll
push
cmp
mov
or
mov
loopne
ds
je
mov
repz
insl
cmp
test
inc
out
pop
stc
je
enter
pop
inc
das
dec
or
push
inc
fstps
daa
cmp
data16
push
inc
xchg
cli
rcrl
je
mov
jno
and
out
rcrl
out
ret
icebp
xor
out
movsb
xchg
or
shl
test
mov
lcall
out
adc
xchg
leave
mov
pushf
mov
mov
push
jo
rorl
pop
sbb
insl
dec
sarl
rcrl
push
push
jb
mov
mov
sub
sbb
adc
out
lret
inc
cmp
jb
dec
and
push
push
insl
dec
loopne
fists
cmp
mov
leave
dec
les
inc
js
testb
lods
sahf
xchg
in
cmpsl
mov
into
jp
les
pusha
mov
inc
add
dec
mov
mov
mov
gs
fidivs
ljmp
adc
inc
ret
xorb
mov
fsubs
xor
mov
insl
sahf
xchg
mov
or
adc
bnd
fwait
sbb
inc
and
sarb
sub
mov
enter
mov
insl
sub
adc
rol
mov
inc
xchg
inc
jge
or
inc
cmp
idivb
mov
sti
xchg
mov
lcall
and
insl
dec
inc
arpl
mov
imul
adc
lahf
mov
arpl
leave
push
daa
aam
jl
jb
subl
out
je
jmp
cmp
xchg
xchg
pusha
fmull
ja
adc
mov
lods
jae
mov
adc
xchg
cmp
fwait
xchg
loop
add
inc
int3
fstps
aam
mov
mov
into
jle
scas
mov
cmp
shl
push
push
push
daa
mov
js
jne
daa
dec
adc
add
jl
mov
cli
mov
mov
sub
add
rclb
dec
lret
stos
pop
jmp
add
xlat
aaa
mov
je
and
and
test
jno
ss
dec
adc
xor
push
lahf
xlat
and
shlb
push
xor
ja
mov
adc
pop
mov
jns
daa
add
divb
jl
cmpsl
and
sbb
jns
jbe
jg
and
push
mov
or
fldl
ja
xchg
inc
popa
cs
push
add
aas
mov
popf
call
fsubs
jmp
in
ss
xchg
loopne
pop
dec
mov
fdivrl
cmpsb
nop
cmpsl
in
std
mov
or
test
mov
incb
ffreep
jmp
inc
dec
out
leave
mov
rorb
scas
add
xchg
lock
movsl
or
push
adc
bound
aas
sbb
pop
jge
mov
inc
cltd
sub
xchg
fcoml
push
out
dec
mov
lods
sbb
xor
push
dec
call
stos
ja
cmp
sbb
inc
fstpl
push
lock
in
mov
sub
pop
ds
add
pop
and
call
int
mov
xchg
inc
mov
pushf
lret
repz
cmp
aad
lahf
dec
cmp
dec
inc
xchg
cmpsl
mov
inc
out
mov
sti
mov
or
in
stos
shrl
and
cmp
fcmovu
out
imul
mov
add
bound
push
jbe
stos
xor
and
and
aaa
divb
mov
sbb
das
xorl
jns
ret
inc
inc
stc
into
xchg
xor
sbb
rcr
sbb
outsb
sub
jl
dec
inc
lahf
sti
xor
pop
mov
xor
mov
and
lds
out
cmp
rcll
mov
pop
lcall
call
insb
pop
jnp
or
xor
hlt
dec
xor
xor
lret
sub
fwait
mov
aam
sti
nop
mov
gs
and
and
cli
in
push
pop
data16
sahf
je
sub
mov
pop
jb
sub
stos
lcall
sub
movsl
dec
mov
push
pop
add
loop
push
ds
jecxz
insl
xchg
lahf
mov
adc
int
pop
sbb
and
mov
rorb
mov
icebp
mov
adc
pop
aam
imul
cs
and
scas
lods
pop
xor
jge
mov
aad
popf
dec
addr16
dec
stc
daa
jl
stos
jo
mov
pushf
jb
ja
inc
jge
clc
aaa
dec
out
jo
fs
mov
xor
cmp
jne
or
push
insb
xchg
jge
sbb
jb
xor
scas
dec
jo
sub
lahf
and
sbb
jo
in
lret
cmpl
roll
insl
inc
sub
hlt
push
shrb
sbbl
jg
loopne
aaa
mov
add
adc
orl
aaa
mov
idiv
je
mov
push
sahf
es
arpl
test
lods
mov
cwtl
adc
icebp
sub
cmp
jo
mov
mov
pushf
fdivrs
in
mov
push
add
pop
mov
mov
or
les
pop
adc
adc
pop
dec
mov
jecxz
test
scas
and
xor
mov
mov
dec
aas
aaa
fsubrl
pop
aaa
scas
fiadds
lds
sbb
sbb
es
xchg
fst
inc
push
cmpsl
leave
cld
cmp
xchg
insb
shll
fwait
add
or
sahf
mov
xchg
inc
sar
push
sub
adc
fcmovb
or
mov
xchg
decb
test
mov
ds
inc
mov
into
test
push
adc
adc
jno
push
std
lock
push
lahf
or
xor
sti
dec
aam
adc
test
dec
push
test
test
insl
push
movsl
sahf
sbb
sub
and
pop
pop
sbb
push
loopne,pt
xchg
ljmp
int3
paddusb
test
xchg
fwait
add
inc
test
mov
stos
push
cli
clc
lret
mov
xor
aam
es
or
lret
xchg
mov
cmp
imul
call
inc
pusha
or
sbb
pusha
nop
or
lock
out
fdivl
xor
sbb
ja
jmp
mov
pop
push
xor
sub
ret
inc
sbb
ds
aam
arpl
and
stc
fidivrs
and
push
lea
fwait
and
sub
loope
jne
inc
and
or
pop
pop
mov
mov
nop
pop
jne
jmp
push
push
xchg
or
mov
out
loopne
or
or
icebp
enter
xor
ficoms
imul
jle
push
jl
sbb
rcrb
dec
push
imul
sbb
jae
mov
sub
lret
std
mov
cld
aaa
xchg
loope
jo
rorb
stos
pop
movsb
push
adc
pushf
mov
sar
mov
daa
mov
push
in
in
aam
jle
fldl
sub
push
aas
into
mov
mov
sahf
jge
lcall
dec
test
outsl
jo
test
ljmp
mov
xchg
xchg
icebp
sub
dec
mov
imul
pop
imul
icebp
test
inc
pop
push
fiadds
and
scas
rol
loopne
push
push
xchg
ret
lcall
outsl
jns
mov
data16
mov
cwtl
inc
push
mov
and
cltd
dec
jecxz
iret
aam
mov
lahf
in
mov
mov
sub
gs
fsub
sub
lret
or
hlt
lds
mov
pop
pop
and
insl
leave
inc
cltd
ds
pop
aad
and
adc
movsb
pop
xor
pop
xchg
mul
mov
arpl
mov
xor
adc
outsb
mov
popa
adc
push
icebp
xchg
cld
jmp
aam
sbb
push
cmp
inc
mov
or
sbb
xchg
inc
loopne
sahf
pop
mov
in
push
mov
push
pop
sbb
mov
mov
xchg
mov
aam
jg
push
mov
pop
repz
adc
inc
rdpmc
jecxz
ljmp
imul
and
jno
lret
divb
outsb
push
mov
iret
ja
xchg
jge
test
xor
test
lahf
sub
pushf
jne
mov
push
les
xor
lret
hlt
test
rolb
ficomps
inc
into
jne
mov
loope
jecxz
dec
daa
imul
aad
mov
cmp
ljmp
jns
and
repz
pop
push
fildll
int
jge
movsl
jp
mov
ljmp
jno
xchg
cli
mov
and
sbb
shl
mov
shrb
in
ljmp
dec
les
jb
js
sub
out
and
mov
pushf
xchg
and
mov
jne
sub
fadds
mov
xchg
pop
fmul
ret
xchg
or
jne
and
insb
sub
sbb
enter
push
dec
iret
push
cmp
push
nop
pop
aad
cmp
and
pop
fistpl
dec
movsb
lock
and
fstl
push
int3
mov
fistpl
xor
push
mov
ret
ret
jns
inc
push
xor
xor
cmc
xchg
in
int
mov
in
jne
icebp
and
cmp
ss
xor
ds
inc
fsubr
adc
add
pop
daa
in
sbb
xchg
jbe
movsb
lods
fdivrp
outsb
pop
lea
adc
sbb
sbb
dec
push
lock
inc
outsl
aaa
mov
xchg
imul
pop
int3
cmp
jle
imul
dec
xchg
inc
repz
fbstp
nop
imul
loopne
mov
dec
fwait
movsb
test
jo
aam
outsl
and
fistl
or
out
movsb
dec
mov
leave
popf
scas
cmpsb
add
jae
push
jle
out
adc
sub
mov
insl
xor
and
cmp
iret
hlt
push
cs
iret
clc
mov
cmpsb
out
shrl
mov
add
rcrb
jecxz
fstps
int
mov
into
mov
sbbb
in
aas
inc
mov
std
movsb
cltd
insb
xchg
push
pop
repnz
fistpll
lret
lahf
loope
pop
ja
cmpsl
mov
cmp
movsl
jecxz
push
mov
mov
add
mov
dec
or
push
iret
test
fmul
nop
mov
pop
shl
js
into
aad
cmp
movsl
mov
mov
cwtl
notb
mov
sbb
loope
mov
xchg
push
lcall
int3
jecxz
mov
lahf
mov
pusha
addr16
or
jbe
cltd
stos
push
and
xlat
in
sub
pop
lcall
loope
gs
icebp
pop
divl
cltd
mov
mov
test
aad
popf
xchg
sub
addr16
cs
addr16
outsl
outsl
orb
cmp
push
stc
outsl
sbb
and
loop
pop
or
ja
push
ds
lods
jb
or
data16
dec
xor
jge
mov
push
je
insb
out
stos
adc
clc
arpl
adc
ror
xchg
mov
or
nop
lods
js
push
add
clc
mov
nop
pop
clc
mov
lods
fiadds
lea
mov
aam
add
push
call
jg
xor
adc
je
mov
cmp
nop
pop
push
dec
popa
iret
adc
inc
push
outsb
loop
sbb
mov
out
ds
adc
push
mov
and
nop
fcoms
mov
or
cmp
fidivrl
dec
rcrl
nop
arpl
xor
adc
lret
xor
add
je
aaa
fisubl
ds
loopne
adc
xchg
add
test
xchg
out
or
in
ljmp
mov
mov
pop
sub
sub
inc
mov
loopne
sbb
nop
fidivs
dec
xor
fucomip
bound
push
sbb
add
cltd
xor
xchg
mov
pusha
in
cmpsb
pop
or
adc
xchg
fisubl
mov
lds
lock
cmpsb
dec
xor
pop
es
jle
inc
xor
sbb
adc
nop
fs
sub
sub
les
xlat
xchg
pop
cs
lret
lret
xlat
insb
cs
in
cld
les
sub
mov
xor
daa
mov
dec
push
fnstcw
sbb
aad
mov
cmp
in
sub
push
out
adc
and
adc
arpl
xchg
dec
mov
outsb
mov
inc
into
jmp
das
adc
call
adc
push
inc
and
mov
mov
mov
scas
sbb
pop
lret
mov
test
arpl
cmp
or
or
bnd
or
cld
test
inc
xchg
dec
add
jg
push
jb
call
xor
pop
lcall
shll
lcall
cmp
mov
cld
arpl
xchg
mov
pop
cwtl
push
or
pop
iret
xchg
inc
imul
cld
pop
popa
sarl
mov
subb
mov
jo
out
call
sub
inc
andb
sub
mov
scas
xor
or
popf
xor
jg
popf
jns
cmp
cmc
inc
pop
ret
mov
xchg
ret
imul
in
lock
sbb
sbb
imul
and
movsb
pop
pop
cmp
cmpsl
ficoml
mov
jp
adc
push
jne
xchg
sbb
notl
push
sub
xor
lcall
mov
popa
cmc
push
or
and
fsub
xchg
mov
rol
imul
imul
adc
cmp
lahf
hlt
cwtl
xor
loop
lods
dec
fwait
push
fstpl
std
scas
fdivr
imulb
das
arpl
enter
jno
jle
mov
inc
and
dec
xor
or
aas
lock
sub
sbb
in
roll
xchg
aas
and
xchg
or
push
add
xchg
sub
imul
das
fisubs
xor
inc
inc
xchg
pop
les
sarb
mov
movl
clc
sahf
push
sti
cmp
mov
mov
pop
jge
into
xchg
and
icebp
fcompl
ret
adc
mov
dec
sarl
scas
mov
lods
xchg
mov
jp
jl
andl
inc
cmp
into
adc
cmpsl
push
cs
cmp
mov
mov
inc
push
pushf
dec
sub
scas
xor
jl
inc
pop
movsl
jo
arpl
push
jl
mov
sar
lods
dec
cmpsl
lcall
insb
adc
mov
arpl
mov
lods
or
int3
mov
gs
mov
dec
xchg
adc
cmpsb
push
in
fwait
or
mov
scas
or
ficoml
insl
sub
ret
push
adc
insb
shlb
fisttps
push
stos
lock
add
add
xlat
mov
sbb
mov
mov
sub
dec
sbb
mov
push
int
insb
aas
int
and
push
iret
push
mov
or
int3
mov
cmp
lock
mov
add
mov
pushf
push
pop
into
xchg
and
fbld
in
and
in
lret
rorb
hlt
stos
xlat
cmp
fucomi
jge
repz
cmc
mov
in
icebp
inc
jb
outsb
jle
movsb
int3
push
adc
mov
leave
push
fcoms
mov
cmc
inc
into
repnz
push
dec
sbb
jmp
and
js
iret
push
add
mov
repnz
mov
and
mov
cmpsb
mov
sub
movsb
dec
or
data16
in
push
xchg
into
push
and
adc
xchg
enter
movsl
movsb
or
inc
adcl
xchg
notb
jmp
iret
mov
in
in
dec
ljmp
jge
add
out
fisttpl
pop
out
addb
and
cmp
out
pop
in
jp
xor
loopne
ja
cmp
xchg
addr16
xchg
add
popa
mov
in
dec
lea
dec
mov
mov
insl
mov
xchg
fisubl
roll
adc
arpl
push
or
and
adc
pop
iret
jmp
hlt
add
sbb
out
mov
mov
in
in
sbb
clc
int
mov
jbe
jl
int3
dec
sbb
sbb
rolb
push
cmp
xor
or
push
dec
insb
daa
sub
hlt
inc
ja
scas
cld
mov
adc
mov
cmpl
test
insl
push
cld
pop
inc
fsubl
insl
loop
and
in
or
and
gs
cmp
lock
movsl
xchg
dec
add
cmp
decl
cmp
lcall
push
repnz
scas
mov
or
sbb
test
add
mov
ljmp
orl
mov
outsb
jmp
ss
jae
mov
push
sbb
inc
in
jecxz
or
adc
jp
scas
pusha
sbb
inc
jnp
mov
loop
lods
daa
sbb
popa
sub
mov
and
das
jle
scas
mov
daa
ret
in
mov
push
cmc
xlat
out
jae
and
sbbl
out
ss
fidivrs
sub
push
mov
mov
sbbl
sub
and
leave
xchg
fsts
xchg
mov
popf
sbb
sub
dec
push
sub
push
pop
fcoms
jb
xchg
xchg
rcll
and
cld
int
mov
aad
cmp
lcall
cwtl
or
sub
xchg
lea
inc
mov
jnp
jbe
aam
mov
sahf
int3
push
jb
je
orl
xchg
xor
jl
pop
jmp
jg
mov
add
fdivr
mov
or
lock
popa
lds
lock
jae
sub
loope
pop
or
sub
mov
shrb
ret
and
xchg
jle
xor
icebp
jecxz
cli
and
mov
inc
js
aam
imul
xchg
sti
aam
pop
movsb
jno
dec
movsl
push
adc
je
jne
negb
push
das
pop
cmpsl
es
mov
ja
sbb
jns
inc
lods
ja
push
push
lahf
cmpsb
fisttpll
sbb
or
ret
mov
mov
out
roll
cld
call
sti
push
push
or
popf
push
out
lcall
lcall
and
out
orl
and
push
call
out
mov
aad
roll
gs
cmp
pop
scas
pop
aad
xor
cmpsb
jg
push
sti
jecxz
arpl
xchg
xor
andb
mov
mov
ljmp
icebp
inc
pop
push
int3
fmuls
ret
mov
xor
fwait
mov
jno
push
pop
ja
das
xchg
sub
lcall
test
push
pop
rorl
xchg
inc
mov
jl
std
xchg
lods
add
jno
adc
jmp
ljmp
mov
and
mov
lea
fcoml
dec
cmpsb
out
std
mov
jnp
mov
cmp
outsb
adc
lds
cmp
cs
les
mov
xchg
dec
aam
add
cmp
pop
mov
or
loop
cld
dec
mov
mov
pop
push
or
jge
icebp
jo
cld
inc
jnp
es
out
popf
idiv
mov
orb
cld
rcr
ret
mov
daa
in
gs
aad
cmc
clc
xor
pop
dec
jne
paddsw
and
insl
outsb
mov
and
ja
xchg
inc
jl
loope
mov
loopne
lods
xchg
mov
jge
and
outsl
mov
sti
stc
fcmovnu
fistpll
mov
xchg
cwtl
push
xchg
mov
xor
gs
movsl
lods
arpl
mov
pop
sub
push
mov
mov
fidivl
sar
rclb
add
and
sti
xor
jbe
rclb
inc
adc
sub
xchg
lods
mov
dec
pop
shr
mov
add
icebp
test
ljmp
push
cmp
not
loope
outsb
and
dec
mov
fcoms
outsl
add
int
inc
scas
js
jb
push
fiadds
int
cmc
outsl
mov
imul
mov
jp
mov
xchg
into
pop
cld
cmp
cli
jae
fdivs
js
cmp
mov
inc
in
and
lods
pop
rorb
dec
pop
cmp
mov
iret
pop
jo
stos
cmp
or
jle
in
scas
pusha
and
add
repnz
test
pop
int
jge
dec
in
mov
cmpsb
into
xor
sub
jg
int
dec
pop
inc
sub
aaa
call
xchg
xchg
dec
and
imul
inc
xchg
xchg
inc
testb
mov
std
mov
pop
ret
lret
mov
mov
test
scas
fs
jg
cmp
push
mov
and
push
pop
test
mov
pshufw
test
mov
lods
lahf
rcll
fldcw
mov
xor
xchg
or
jle
pop
xchg
and
data16
dec
mov
mov
sub
xor
or
cmpsb
dec
add
cbtw
mov
movsl
sbb
xchg
pusha
jecxz
xor
arpl
mov
mov
jo
lock
mov
xchg
add
or
mov
push
cltd
cmp
imulb
aaa
cmp
lcall
mov
jne
arpl
push
pop
cmpsl
inc
cmp
fisttpll
mov
lahf
jle
jae
bound
push
pusha
sbb
mov
xor
and
cmp
jmp
dec
fsubrl
fisttpl
pop
aas
push
xchg
cmp
or
xchg
jle
fiaddl
or
mov
call
lret
inc
mov
push
mov
lahf
outsb
dec
hlt
inc
jno
or
mov
jbe
jnp
pop
insb
jle
add
cwtl
inc
movsb
bound
lret
add
cmp
pop
negl
orl
mov
adc
insl
adc
sbb
repnz
or
sti
insl
aam
inc
cmp
psrld
or
mov
iret
fadds
dec
cmpsl
dec
cli
add
aas
dec
sub
sti
pop
lret
dec
mov
loop
pop
or
mov
or
push
adc
mov
pop
jno
mov
aaa
mov
xor
fwait
xchg
add
not
push
jb
in
rcr
mov
mov
loope
shlb
pop
sbb
cwtl
jp
or
inc
cld
add
mov
lock
daa
cld
es
leave
jg
js
int3
xlat
filds
cmpsb
lahf
cmpsb
mov
pop
jnp
and
mov
or
cld
fimull
jg
mov
jo
fmull
roll
shll
push
insb
xor
dec
in
pop
fwait
shll
rorb
cmp
mov
mov
popa
or
clc
or
xor
ret
mov
cltd
stos
je
data16
inc
push
les
xchg
rcrl
and
in
lock
loope
fidivrs
hlt
repz
ret
xorl
jmp
mov
xor
push
mov
mov
pop
imul
dec
inc
inc
imul
cmp
pop
pop
pop
pop
push
inc
push
sub
mov
adc
lret
incb
mov
pop
out
xchg
pusha
ret
cmpsl
cmp
out
xchg
mov
push
jo
into
or
sbb
add
mov
insl
ret
pop
shrb
adc
or
jecxz
xchg
lret
mov
fcomip
imul
xchg
lods
push
mov
jbe
adc
jp
ds
testb
movsb
in
ss
std
and
adc
je
in
mov
jno
xor
inc
mov
sahf
pusha
xchg
sub
sub
mov
aaa
fsubrl
into
lcall
dec
iret
cmp
lret
inc
mov
fildll
dec
push
notl
sub
mov
test
pop
scas
mov
mov
fwait
inc
push
pop
and
imul
loope
ljmp
inc
aas
in
testl
pop
jg
ljmp
movsl
pop
push
imul
cmp
jl
xor
mov
ret
imul
je
rcrb
loopne
inc
and
nop
movsl
push
adc
out
loopne
sub
jb
movsl
inc
pop
mul
aad
add
mov
popa
jle
adc
adc
stc
cmpsb
bound
hlt
fbld
movsb
mov
subl
jp
dec
sbb
mov
push
cli
pop
pop
lret
enter
jae
inc
int3
aad
mov
imul
inc
add
ds
add
and
mov
xorl
or
xchg
loope
test
add
lahf
test
xor
mull
sbb
int
shll
hlt
shrb
jl
idivl
sarb
out
mov
mov
shr
pop
pop
pushl
bound
or
adc
push
xchg
jge
push
rep
es
outsb
dec
sbb
mov
dec
in
adcl
mov
das
loopne
cs
testl
cltd
inc
out
call
ljmp
repz
sbb
ret
xchg
loopne
repz
cmc
enter
cltd
pop
pop
inc
and
mov
pusha
and
repz
mov
jg
lods
jp
adc
mov
mov
pusha
xor
imul
fisttpl
mov
mov
iret
les
cmp
jl
jecxz
and
mov
cmc
mov
mov
inc
adc
pop
es
pop
rcll
push
push
jb
fldcw
sti
cwtl
lods
repnz
aad
les
fsubrs
and
cmp
js
gs
lock
inc
mov
xor
stos
and
sbbl
lods
pop
sahf
mov
popl
fldl
cmpsb
mov
mov
insb
gs
xor
imul
mov
xor
test
dec
mov
jns
and
outsl
fucomi
lret
pop
jnp
je
jecxz
and
mov
cwtl
jbe
jl
push
jmp
insb
jg
dec
and
mov
sub
sub
jno
dec
scas
jae
ljmp
loope
push
outsl
andb
mov
out
mov
jmp
push
data16
add
pop
xorl
orb
push
pop
in
sub
out
ror
mov
lcall
loopne
cmp
lea
sti
popa
dec
aad
hlt
push
mov
das
shl
sbbb
xchg
stos
ja
outsl
clc
or
mov
adcb
dec
mov
jb
adcb
cmp
clc
clc
fwait
mov
lret
imul
test
sbb
ret
add
pushf
test
gs
push
cmpsb
mov
jmp
push
loope
sub
out
cld
nop
rolb
or
add
xchg
frstor
frstor
insl
repnz
adc
pusha
icebp
addb
dec
dec
and
mov
jmp
adc
jo
inc
sub
or
mov
or
or
ja
push
aam
test
fimull
cmpsl
jno
sbb
push
imul
cs
and
shl
fwait
mov
xor
mov
or
mov
xchg
mov
push
mov
adc
sbbb
mov
imul
data16
sbb
inc
sub
jg
jecxz
pop
repz
dec
xchg
sti
sub
and
mov
adc
sub
pusha
cmpsl
loope
inc
imul
lcall
mov
mov
xor
scas
fdivs
cs
or
repnz
push
mov
xchg
sbb
popf
dec
jg
jecxz
xor
das
loopne
adc
xchg
mov
test
stos
rcll
movsb
mov
mov
into
mov
push
ret
adc
sub
ficompl
cmpsl
xor
ficomps
pop
or
dec
xor
rol
loopne
scas
cmp
cwtl
xor
pushw
movsb
loope
nop
jnp
cmpsb
adcb
cs
xor
into
test
inc
push
adc
inc
je
insl
xor
lcall
and
movsl
lret
lock
mov
frstor
leave
pop
fnstenv
cmp
cmp
daa
or
adc
fpatan
adc
and
inc
test
and
lock
lahf
or
mov
dec
shlb
ja
int3
les
jmp
add
adc
cmp
pop
pop
xchg
scas
nop
popa
adc
mov
push
mov
sbb
ret
dec
and
dec
xchg
aas
fsubrl
push
cltd
pop
aad
mov
fs
sub
mov
add
in
xchg
repnz
add
mov
sub
stos
mov
dec
push
in
xor
mov
pop
sti
cmp
cmp
or
shlb
ret
dec
cltd
stos
jno
push
mov
xchg
sbb
iret
sbb
shlb
dec
iret
inc
inc
jnp
ret
add
jns
xlat
jmp
lahf
cmp
mov
adc
cmpsb
sbb
and
inc
jae
inc
stos
mov
push
in
jno
nop
inc
ret
cmp
pop
add
out
dec
jno
sub
cmpsl
sbb
gs
lret
add
fnstcw
shlb
sbb
nop
and
lods
repnz
lahf
xchg
lods
sbb
dec
mov
ja
hlt
jne
pop
sbb
xchg
sbb
aam
es
and
inc
add
and
rep
push
push
lahf
test
xor
leave
bound
scas
repz
sub
lahf
add
inc
int
push
in
mov
or
loopne
add
lea
sarb
in
pusha
test
pop
sbb
jnp
dec
insl
sbb
xlat
mov
xor
rcrl
lret
mov
push
lcall
test
jge
adc
dec
in
ror
ljmp
sbb
adc
add
push
sbb
icebp
ljmp
test
pop
xor
push
adcl
inc
push
xchg
lds
out
scas
pop
loop
and
ret
mov
mov
or
and
adc
test
sub
ret
add
outsl
popf
mov
cmpsl
or
jb
enter
jp
adc
xor
fs
sbb
in
ss
push
jl
outsl
cmp
adc
ljmp
notl
push
sub
pusha
sbb
mov
stos
xchg
xlat
xlat
add
movsl
stos
jo
sbb
mov
jnp
scas
loop
iret
sub
jae
push
push
test
in
iret
sub
push
sub
ret
jmp
adc
xor
lret
stc
cmp
or
shrl
gs
sbb
clc
mov
testl
pop
andb
addb
repz
pop
cmpsl
jae
fisubs
sbb
rcrb
inc
stos
pop
in
xor
sub
test
into
cmp
inc
lahf
xchg
mov
jl
mov
sbb
adc
lea
xor
loop
in
ret
push
in
dec
shrb
movsb
push
repz
mov
jne
jb
stc
or
test
sbb
xchg
es
sti
mov
imul
test
cmp
jae
jle
mov
iret
je
cmp
aaa
inc
dec
fnstcw
push
cmc
cmpsb
sub
xchg
and
hlt
cwtl
sbb
cmp
mov
out
inc
test
jae
mov
repz
rep
push
mov
xchg
repnz
lret
add
xchg
ljmp
arpl
xor
push
cmpsb
mov
pushf
iret
popf
inc
data16
scas
mov
loope
popf
js
or
xchg
mov
add
adc
push
xor
shlb
addr16
icebp
mov
aaa
xor
push
push
adc
fs
fs
test
adc
mov
cwtl
mov
jl
lret
sub
ficoml
xchg
in
insl
xchg
xchg
push
cltd
sbb
mov
call
jns
cmp
cmc
mov
sub
xchg
std
xor
loop
pop
sbb
inc
cmp
or
cmp
mov
inc
mov
mov
jo
out
mov
movsb
inc
or
and
push
int3
popf
loopne
fsub
andl
sbb
sbb
or
inc
jne
push
push
mov
aam
test
dec
outsb
fidivl
xor
popa
and
adc
mov
jg
cwtl
lret
and
cwtl
pop
rcr
lds
mov
in
inc
out
repz
insl
lret
jo
xor
push
int
xorb
and
jbe
ja
mov
fdivp
cmp
adc
add
mov
add
or
scas
xor
bound
jb
lcall
fldenv
cmp
popa
sbb
in
mov
loopne
ret
cltd
bsr
lahf
loope
mov
and
lea
cmc
mov
lods
cmc
and
inc
and
lret
hlt
in
and
dec
jae
sarl
dec
in
xchg
shlb
mov
orl
xchg
cmp
lods
es
mov
jnp
sti
mov
xor
loope
or
pop
in
sti
negb
add
jno
fst
loop
push
out
add
test
xor
push
leave
rcr
jne
vsubps
xchg
pop
std
movsl
add
ljmp
shlb
sub
pop
imul
xchg
mov
rcl
push
ss
push
mov
cmpsb
in
jle
and
mov
xor
rolb
mov
mov
cmp
sarb
in
addr16
cmpsb
sub
jnp
fucomi
cwtl
daa
push
sbb
mov
cmpsl
lret
sub
imul
clc
mov
push
push
dec
in
dec
in
add
stos
and
into
scas
test
imul
int3
lcall
push
data16
cmpsb
out
push
dec
faddl
into
les
sbb
sub
inc
cmp
xchg
leave
inc
adc
fwait
push
mov
dec
sbb
call
xchg
inc
stos
fsubrs
add
insb
or
sub
push
add
shl
sbb
pminsw
out
int3
pop
mov
lea
imul
push
ljmp
dec
rol
dec
jp
fwait
add
rcl
pusha
repz
jg
scas
pop
inc
dec
xlat
dec
mov
out
loopne
mov
dec
cltd
ss
lds
leave
mov
test
sub
push
and
jecxz,pn
mov
leave
outsl
pop
xor
jle
ljmp
jbe
test
rcrl
pusha
inc
loop
pop
rolb
sub
inc
dec
push
mov
dec
stos
into
xchg
popf
lods
dec
dec
cmp
inc
movsb
inc
icebp
cmp
sbb
xchg
add
cmp
add
inc
jecxz
fdivl
pop
outsb
xor
add
xchg
sbb
adc
inc
mov
dec
push
cmp
lods
mov
les
inc
xchg
jno
xor
sub
adc
ret
pop
mov
daa
and
inc
in
push
mov
xor
mov
ja
xor
mov
loop
or
xchg
addb
pop
inc
rolb
aaa
xchg
in
aas
fsubrl
jae
jbe
lods
add
in
mov
fwait
je
mov
or
repz
sbb
pop
mov
cmp
pop
inc
or
loop
ficoms
addr16
jnp
mov
inc
cmp
sbb
push
add
jnp
and
mov
cli
sbb
xor
aaa
mov
sbb
mov
test
inc
xlat
call
fwait
sub
xchg
cmp
mov
jle
mov
out
adc
stc
pushf
sbbl
mov
sbb
and
mov
enter
fwait
lds
loope
dec
ret
xchg
jl
jge
inc
push
arpl
aam
shlb
cmp
adc
movsb
dec
loopne
inc
orl
es
jae
and
push
add
scas
dec
xchg
jno
lcall
mov
lock
push
out
into
and
mov
or
outsl
inc
data16
fadd
lds
shr
mov
sub
pop
push
or
imul
pop
pop
fiaddl
adc
push
repz
shll
dec
loopne
and
out
dec
test
xchg
pop
inc
aam
xchg
mov
jne
mov
dec
cwtl
cmpsb
sub
mov
cmp
xchg
imul
jl
jnp
gs
mov
fcmovnb
dec
cmp
lahf
cmpsb
cmp
jle
cmpsl
rcrl
cmp
push
push
mov
mov
dec
xor
cli
out
xor
ret
ds
jbe
sbb
inc
xor
xchg
jne
fwait
or
sbb
jne
loope
test
fldt
inc
popf
mov
andb
ret
xchg
push
xchg
faddl
flds
std
xor
jl
xchg
adc
mov
shr
stc
or
arpl
xor
xor
jns
imull
enter
arpl
iret
mov
outsb
and
xchg
lea
mov
jno
repnz
faddl
push
jmp
add
test
das
ret
ficoml
mov
push
scas
cmpsl
xchg
popf
adc
fwait
fwait
outsb
shlb
pop
repz
add
nop
movb
mov
or
jbe
or
mov
adc
loope
fadds
mov
inc
repnz
and
and
mov
shll
mov
mov
xor
ja
cli
rol
push
sbb
push
je
std
subl
sahf
pushw
ds
repz
jecxz
int
fwait
pop
jle
lret
in
lock
cmp
adc
bound
test
cs
mov
dec
into
xor
dec
in
push
dec
cltd
xorl
bound
push
cmp
outsl
xchg
jmp
lods
mov
inc
in
stc
sub
ljmp
loop
clc
fcom
dec
sbb
cs
add
addl
push
mov
fisubrs
add
adc
mov
lahf
add
inc
xchg
mov
mov
and
xor
test
jb
jo
xchg
subb
xchg
and
pop
jns
inc
mov
xorl
ja
aas
out
shl
repnz
lret
lahf
adc
mov
enter
jnp
hlt
push
cmpsb
xor
xor
out
mov
in
and
pop
andb
add
or
mov
rorl
lret
dec
ljmp
add
mov
push
xchg
arpl
divb
adc
lds
push
cmp
out
pop
xchg
add
and
les
mov
shr
jb
pop
fwait
pop
sbbb
xchg
ljmp
imul
shlb
sbb
and
fidivl
in
jge
test
gs
testb
xor
cmp
imul
and
dec
ret
sbb
mov
in
sbb
imul
mov
test
into
and
jecxz
ljmp
xor
xorl
test
stos
andl
das
pop
xchg
mov
push
leave
popa
mov
and
inc
in
inc
mov
mov
fistl
test
mov
insl
push
arpl
cltd
adc
push
dec
jecxz
push
adc
in
out
enter
push
and
lea
pop
add
sti
pusha
in
push
movsb
xchg
aas
cmp
adcl
mov
cmc
pop
sbb
sub
shll
push
mov
sub
imul
lea
iret
pop
xchg
ds
pop
jb
loopne
adc
inc
dec
jae
sarb
mov
pusha
fidivrl
mov
pushf
push
stc
xchg
data16
cltd
jecxz
mov
and
mov
out
mov
adc
adc
insl
jnp
ds
jmp
sub
push
mov
sbb
mov
outsl
lds
mov
lcall
mov
inc
popl
ds
jecxz
rorl
inc
repz
addl
aad
adc
insl
dec
outsl
pop
ficompl
fstp
aaa
or
cltd
insb
push
xor
pusha
fcmovnu
sbb
dec
xchg
loope
xchg
jnp
in
repz
cmp
and
stos
pop
cltd
xor
mov
clc
enter
scas
dec
cli
xchg
lea
fstpl
rcrb
aad
and
adc
jae
fwait
addr16
push
add
pop
stc
adc
sub
je
test
aad
push
xchg
jl
mov
lcall
dec
sub
mov
add
pop
mov
cmc
mov
test
sti
in
cmp
lock
inc
jge
sahf
sarb
mov
xchg
xor
das
mov
imul
jmp
and
test
or
imul
loopne
jp
cmp
mov
out
decb
sbb
push
sub
xchg
aaa
loop
lds
inc
loopne
testl
loope
flds
int
daa
xor
or
hlt
inc
jle
dec
push
ret
hlt
inc
and
sub
ljmp
enter
loopne
mov
sub
jbe
xor
leave
pop
pop
in
scas
stos
inc
mov
adc
dec
jb
pop
xor
out
sub
bound
nop
and
aas
xor
sub
scas
mov
add
jbe
loopne
xor
cmp
jl
es
lret
adc
and
push
lock
outsl
adc
dec
xchg
out
fisttpll
sar
adc
fs
fisubl
mov
xor
movsl
and
push
ret
adc
test
lods
outsb
sub
sub
push
jl
sub
lea
sub
push
repz
sub
cmp
cltd
xchg
lods
repz
jp
xchg
mov
es
inc
clc
xchg
fldenv
mov
cli
push
fmuls
data16
xchg
xchg
pop
sub
and
fs
add
cs
pop
or
out
mov
inc
popa
pop
gs
push
xor
mov
cmp
imul
mov
lock
pop
cwtl
mov
faddl
pop
ds
in
adc
je
push
call
aad
test
dec
jns
fwait
push
test
dec
xor
rorl
xchg
mov
jo
fadds
sbb
xorl
jne
cmp
sub
stos
bound
mov
mov
add
push
cmp
sbb
aaa
cmpsb
outsb
pop
xor
jno
mov
popa
sbb
fistps
das
cmpb
dec
jmp
mov
mov
or
or
bound
push
dec
xchg
push
sbbl
jo
inc
add
movsbl
insl
cmpsl
cmp
popf
add
lds
ret
rcl
bound
loop
pop
xlat
sub
sahf
insl
pop
ja
adc
pushf
or
xchg
inc
mov
mov
mov
daa
mov
fcomps
aam
enter
arpl
jo
pusha
es
inc
inc
out
xor
pop
xor
lods
mov
mov
cli
out
ds
or
mov
aad
pop
xchg
rcll
stos
ja
loope
call
out
jno
jmp
and
fwait
mov
xchg
add
mov
test
pushf
hlt
mov
aaa
or
sti
dec
outsb
dec
push
insb
dec
js
mov
fstps
test
push
scas
cs
js
xchg
lret
add
mov
dec
xchg
pop
gs
and
loop
and
add
je
push
in
push
push
fcomps
dec
push
aaa
jge
jnp
dec
adc
xchg
enter
aas
jge
js
jb
leave
out
and
sub
cmc
cmc
sub
cmp
jmp
push
iret
leave
rcl
sbb
cmp
push
push
aam
aam
and
lods
sbbb
sub
jmp
xchg
cmc
mov
jne
pop
rcll
mov
cmp
int3
adc
fs
dec
add
or
mov
jmp
into
shll
xchg
add
fdivrs
add
push
sub
ficoms
das
scas
mov
and
mov
jge
xchg
iret
mov
xor
inc
mov
and
mov
or
mov
pop
arpl
decl
push
int3
dec
movsl
mov
sub
sub
cmp
push
sub
adcl
arpl
or
add
jge
rcl
or
adc
movsb
loop
cltd
mov
jns
lret
pop
mov
shll
pop
pop
mov
enter
dec
inc
push
push
loop
in
add
xor
or
repz
sub
nop
dec
push
push
sub
in
and
fwait
sub
loope
pop
scas
inc
adc
cmp
sub
sbb
ja
sub
push
push
sub
adc
push
pop
out
in
adc
mov
daa
push
push
pop
mov
cli
mov
add
hlt
cmp
jl
pop
leave
ss
pushf
ret
add
inc
pop
ror
psubusw
xchg
jmp
push
in
ljmp
pop
adc
stos
repz
xchg
jg
js
in
xor
jg
sbb
or
faddl
add
dec
inc
mov
lock
orw
call
hlt
dec
or
xchg
sub
out
cmp
xchg
loop
or
or
xchg
in
mov
or
mov
testb
mov
aam
dec
xchg
pop
cwtl
push
jge
loope
in
stos
sbb
inc
pop
inc
push
lods
fwait
pop
scas
fsubrl
fidivl
push
ret
mov
add
add
xchg
jae
nop
mov
out
insl
xchg
sbb
mov
mov
sbb
mov
sub
daa
lcall
adc
mov
mov
das
repz
pop
in
cmc
add
sub
ret
sub
push
in
push
inc
cmp
jne
movsl
xchg
outsl
add
or
js
inc
jg
movsl
mov
xchg
aam
sub
insl
mov
hlt
push
adc
data16
stc
aas
ret
aaa
add
adc
stos
xor
mov
push
movsb
rclb
dec
data16
mov
add
mov
jmp
insl
popa
dec
pop
sbb
aam
jg
inc
and
or
mov
cmp
lea
mov
xor
mov
out
js
fdivp
hlt
jae
int3
pop
jle
pushf
pushw
lret
jmp
dec
pop
xchg
sub
out
jo
jbe
mov
add
push
nop
add
mov
inc
push
in
mov
pop
cli
fidivs
dec
mov
mov
call
andb
fstps
out
lret
subl
xlat
shr
mov
sbb
dec
jne
or
mov
pop
repnz
pop
aam
jne
faddl
ret
pop
pusha
cltd
xor
jns
mov
mov
es
insl
fbld
xchg
stos
fnstenv
xor
lahf
jno
ds
cmc
scas
adc
in
das
dec
pusha
out
test
movsb
jle
xor
repnz
and
and
jne
xor
mov
enter
mov
out
mov
push
cmpsw
mov
test
mov
outsl
jb
lods
xchg
fcompl
adc
rorl
xchg
adc
ret
sbb
jmp
out
pop
imull
cmc
nop
xchg
add
ret
lea
jl
push
push
mov
divl
gs
sub
movsb
jp
lods
test
je
inc
xchg
lcall
adcb
push
iret
mov
or
mov
xchg
popa
inc
inc
push
xor
lea
scas
data16
mov
loop
sbb
mov
sbbb
jns
fidivl
pop
push
aam
mov
mov
add
or
xor
cmp
pop
ds
divb
out
mov
ret
add
pusha
xchg
sub
mov
mov
mov
fstl
divl
push
ds
mov
inc
shlb
dec
outsb
sarl
inc
inc
orl
fwait
and
jnp
adc
dec
xor
mov
mov
bound
inc
or
out
cmp
addr16
pop
out
daa
jo
cmp
xchg
jne
mov
pop
into
inc
movsb
mov
dec
push
dec
repnz
xor
or
mov
xchg
cltd
xchg
movsl
mov
dec
xor
dec
mov
loop
add
xor
or
es
mov
sub
jg
xor
lcall
sti
mov
jg
ja
test
in
xchg
cmp
dec
adc
xchg
sahf
movsl
sahf
push
jmp
fwait
xor
aaa
xor
mov
inc
lcall
jge
pop
mov
shlb
jmp
roll
jae
add
out
sbb
or
push
xchg
xor
jnp
add
xor
or
into
xor
inc
loopne
cmp
lcall
mov
pop
adc
or
jp
call
dec
push
jmp
es
stos
into
sbb
pop
mov
or
sub
adc
repz
fisubrs
dec
test
xor
add
sbb
in
ss
cmp
es
clc
mov
out
add
cltd
mov
adc
dec
pop
mov
iret
inc
cltd
and
dec
dec
xor
inc
andb
mov
sbb
fs
in
pop
imul
jecxz
into
mov
dec
ja
pop
pop
mov
xor
jle
jno
mov
adc
js
ja
sbb
lea
into
jecxz
dec
lock
cwtl
mov
hlt
mov
push
cltd
ret
mov
fs
push
stc
adc
hlt
mov
pusha
out
and
add
pop
xchg
mov
pop
jg
or
dec
dec
imul
push
into
aas
mov
fsts
dec
test
mov
gs
inc
jle
xchg
xchg
iret
mov
test
or
push
inc
xor
pop
sbb
stos
jb
inc
dec
cmp
enter
sub
jg
xor
stc
push
inc
mov
imul
pop
and
fadds
mov
scas
idivb
je
add
xchg
dec
dec
filds
xchg
mov
jbe
add
lret
insb
shlb
cmp
ret
pop
js
mov
ffreep
jae
mov
pop
push
fstl
fnop
dec
fs
pusha
cmp
sbb
les
pop
lcall
inc
scas
adc
mov
outsb
push
repz
mov
pop
adc
ljmp
and
push
fbld
mov
xchg
adcb
adc
dec
in
shld
and
mov
jge
pop
scas
mov
or
cmpl
and
gs
dec
bound
jb
into
or
push
fisttpl
cmp
dec
push
xor
mov
ja
inc
fwait
push
xchg
inc
jno
mov
sub
inc
cmc
sub
sbb
sar
jl
imul
repz
mov
pop
mov
cwtl
stos
test
int3
push
add
sbb
inc
inc
jle
push
jns
adc
adc
jne,pt
mov
shll
push
mov
xchg
xchg
scas
in
aas
mov
jecxz
nop
test
jbe
cld
xor
mov
adc
es
mov
add
test
lret
jl
in
icebp
pop
int
bound
inc
mov
stc
jbe
jle
hlt
and
and
addr16
inc
jb
les
scas
imull
push
lahf
mov
iret
inc
addr16
dec
out
lock
add
add
in
cs
jle
les
repnz
ret
iret
ds
leave
ret
shll
xchg
ss
je
mov
jle
aad
mov
negl
dec
sbb
or
ss
push
andl
mov
mov
cs
push
outsb
lret
sahf
jnp
enter
mov
andb
jo
mov
decl
push
push
bound
mov
mov
iret
and
fldl
fsts
cmp
jle
movsl
ss
mov
pop
mov
jne
in
das
mov
xor
xorl
dec
stos
inc
xchg
pop
mov
sub
test
cld
aas
icebp
sbb
and
cmp
push
xor
ja
cmp
mov
pop
dec
mov
and
mov
adc
idiv
sbbl
sub
xorl
imul
js
fidivrs
loopne
fs
add
sub
cmp
mov
xchg
xor
mov
xchg
sbb
stc
ja
rcl
out
jmp
xchg
into
inc
push
dec
mov
cmpsl
fs
push
and
dec
fists
cmp
sti
xchg
pop
dec
dec
cmp
sub
inc
adc
out
icebp
mov
popa
inc
push
and
cs
fnstenv
cmp
daa
out
dec
inc
testb
addb
jecxz
fwait
cwtl
popf
mov
mov
dec
xchg
mov
jmp
enter
insl
or
mov
or
in
and
push
lods
out
addr16
inc
jp
cmp
jae
icebp
push
xor
cli
dec
cld
or
outsb
add
sbb
pop
orb
xor
stc
loopne
mov
nop
xchg
cwtl
or
sub
sbb
cmp
dec
cmp
xor
les
mov
mov
sub
cmp
arpl
mov
loop
mov
cli
mov
cmp
dec
push
lret
adc
pop
lock
inc
add
xor
fadds
fsubrs
arpl
xchg
and
pop
lods
fbld
xor
cltd
repz
into
sub
insb
mov
inc
loopne
mov
add
sbb
lock
adc
mov
lods
or
mov
cmc
shll
in
xchg
pop
dec
clc
fdivr
cmp
mov
sub
xadd
call
mov
or
inc
clc
mov
mov
punpckhbw
loope
xchg
xchg
jmp
push
fistps
popf
ss
std
and
xor
or
or
ja
xor
rep
outsl
jl
in
add
cs
aaa
lods
xchg
bound
or
inc
push
aad
push
cli
repz
inc
pop
into
lcall
roll
xchg
xor
jle
mov
sbb
shlb
neg
mov
ss
adc
leave
push
inc
in
stos
int
popf
add
pop
push
cs
lcall
movsb
loop
daa
out
pop
adc
sub
add
and
std
adc
ss
cmpsl
ja
adc
loop
ds
ret
pop
fwait
out
lahf
xchg
ss
aaa
stc
jo
mov
test
dec
mov
xchg
aad
ficomps
lds
xor
ss
cwtl
xlat
repz
or
pop
adc
lods
push
leave
and
cmpsl
push
cld
inc
xchg
or
scas
mov
mov
pusha
addb
ss
jbe
jnp
fstl
clc
bound
fwait
or
loop
orb
cmpl
insb
xorl
push
movsl
pushf
push
lock
call
sar
std
test
das
sbb
pusha
repz
in
cmp
in
je
out
inc
out
dec
adcl
push
fisubrl
push
test
lret
stos
mov
in
movsl
stos
cmp
outsb
add
gs
mov
mov
es
imul
test
pushf
fcom
pop
mov
pop
sar
arpl
ret
in
pop
push
push
cmp
xlat
cld
aad
subb
loope
hlt
mov
cmp
jecxz
imul
and
mov
mov
xor
xorb
or
dec
adc
push
xor
in
jmp
xchg
test
lret
mov
rcrb
and
jae
jmp
out
pop
add
lods
insl
push
mov
mov
mov
popa
mov
enter
fldt
icebp
pushf
mov
out
test
xchg
popa
add
fidivs
stos
popa
mov
and
jge
repnz
xchg
icebp
mov
sbb
shrl
cmpsl
jl
or
jg
cmc
cmp
fcomip
nop
xor
imul
ss
inc
insl
into
insl
mov
dec
sub
clc
xchg
nop
xchg
fadds
loope
xor
loop
mov
lea
xchg
adc
jecxz
mov
ja
push
xor
xchg
arpl
cltd
xchg
and
mov
hlt
mov
les
xchg
call
inc
xor
mov
ja
sarl
jecxz
mov
das
lret
jle
clc
mov
mov
iret
into
cld
stos
sbb
sbb
or
data16
vpand
sbb
loopne
push
dec
fmull
in
cmp
mov
push
xchg
push
dec
adc
adc
orb
mov
adc
addr16
xor
repz
sbbl
in
inc
data16
inc
adc
in
jns
add
or
ja
gs
mov
lcall
xchg
cwtl
fwait
inc
xor
cmp
adc
mov
ficomps
and
add
cmp
push
xor
ret
sub
cmp
pusha
in
movl
pop
and
stc
hlt
imul
std
xor
add
adc
cmp
xlat
mov
ja
jg
mov
std
faddl
or
mov
lods
popa
xchg
int3
dec
fldt
enter
fwait
xor
pop
test
outsb
dec
cmp
repz
stc
mov
cmc
push
push
dec
cmp
sub
adc
xlat
pop
jle
icebp
mov
mov
scas
leave
cmp
sub
xorb
xchg
sub
xchg
mov
mov
cltd
mov
cmp
insb
sahf
xchg
mov
cld
jg
in
jmp
push
ja
fists
imul
add
mov
in
jb
outsl
mov
jge
sbb
or
sub
repz
mov
int3
mov
outsb
jp
push
sub
js
adc
inc
daa
das
data16
fwait
mov
xchg
loop
iret
sahf
call
es
nop
cmc
loope
frstor
mov
rcll
mov
mov
cwtl
rcll
cld
in
incb
lahf
mov
push
fimuls
push
popa
pop
js
dec
mov
push
dec
cwtl
stc
sbb
mov
rol
and
add
sbb
jb
sub
mov
repnz
loopne
lods
aam
sbb
data16
mov
pop
sbb
call
xor
das
das
mov
mov
js
repnz
cltd
into
popf
fldenv
shr
jae
dec
cli
cmp
hlt
push
jno
rolb
mov
jno
sbb
lock
inc
push
cmpsl
loop
push
cmc
aad
push
sahf
add
cmp
enter
orl
lods
mov
sbb
outsb
mov
imull
addr16
push
push
push
mov
ljmp
mov
frstor
sti
insl
inc
adc
leave
dec
stos
inc
aad
xchg
stos
and
fidivrs
push
inc
xor
aad
and
andb
mov
xchg
xchg
pop
lods
ret
cs
repz
push
in
add
test
cmp
xchg
inc
js
sbb
incl
jle
insb
adc
inc
mov
dec
sbb
lods
dec
lock
push
ret
or
fisttps
aam
jg
push
push
inc
mov
test
sub
fnstenv
xlat
stc
mov
mov
adc
add
int3
mov
dec
sbb
lods
xlat
jo
or
pop
adc
dec
jp
push
lahf
imul
cmp
sub
adc
mov
lahf
mov
int
shlb
inc
mov
cmp
inc
jno
sbb
dec
int
stc
mov
cmp
or
lcall
sbb
ret
xor
inc
cmp
dec
rcrb
sti
dec
mov
and
sub
jecxz
jo
dec
cmpb
ficomps
mov
jp
xor
mov
xor
fsubl
pop
loope
fdivr
out
and
sub
or
gs
xchg
dec
mov
outsl
mov
fwait
mov
pop
lret
adc
insl
out
mov
iret
push
xchg
adc
stos
xchg
add
cmp
sti
inc
mov
inc
fs
dec
jl
int
dec
imul
ds
stos
jo
add
lods
fcomps
testb
das
aad
sub
inc
sub
push
jg
pop
outsl
lds
xchg
push
ds
add
xor
inc
mov
aad
lret
and
incl
imul
scas
pop
dec
dec
sub
inc
dec
mov
add
rcrl
push
insl
pop
dec
call
cmp
in
nop
out
cmpsb
int3
jb
iret
roll
inc
mov
mov
jnp
xchg
stos
enter
mov
inc
out
cmp
push
add
mov
cmp
scas
and
mov
popa
sbb
scas
or
add
stos
sbb
xor
fwait
mov
in
subb
dec
stos
pop
mov
dec
je
fbstp
cs
daa
cwtl
xchg
mov
xor
xchg
cmp
push
fstpt
sbb
xor
leave
cld
jp
pushf
adc
xchg
add
mov
arpl
mov
das
inc
push
mov
or
ljmp
sub
in
dec
and
in
cmp
fldt
js
jle
inc
insl
and
ja
popf
adc
dec
subl
sti
xchg
jns
testb
ds
cmp
sbb
in
mov
stc
insl
stos
lods
mov
push
gs
pop
mov
out
mov
xchg
int
lahf
imul
pop
rorb
push
cli
les
int3
ss
cmpl
lock
divb
ds
mov
push
cmp
jno
dec
inc
mov
add
mov
jl
inc
ss
leave
mov
int
cmp
inc
jne
fdivs
push
sbb
pop
stc
push
lock
mov
push
jecxz
sbb
mov
add
sbb
dec
in
and
into
xchg
or
lods
cmp
jo
test
xchg
or
lock
ja
aaa
add
mov
mov
loop
push
repnz
repnz
cwtl
int3
movsb
jne
ret
push
cltd
rclb
inc
xor
shrb
pushf
xlat
or
adc
call
lret
xchg
jmp
jne
inc
lods
pop
fdivl
mov
jmp
xchg
dec
adc
out
iret
stc
mov
mov
ret
bound
ja
out
ljmp
or
clc
fcoms
scas
sti
leave
mov
inc
movsl
sub
mov
mov
jmp
mov
nop
dec
push
fimuls
mov
hlt
ror
cld
jecxz
cmp
dec
ret
pop
fcmovbe
mov
mov
jns
dec
add
sbb
cmp
jmp
cld
movsb
sti
leave
iret
push
jnp
mov
js
and
sbb
and
cli
popf
mov
push
negl
in
clc
imul
dec
lods
inc
pushf
aam
mov
add
jns
fcmovnb
mov
insb
out
jmp
fwait
xchg
jnp
push
inc
adc
push
mov
lret
sub
jbe
imul
lret
sahf
aam
cmpsb
push
imul
add
or
fcmovnu
xchg
xor
fwait
pop
test
aas
iret
mov
outsb
aaa
sbb
push
cmc
loop
cmp
xchg
test
fidivrs
jmp
aam
and
pop
dec
repnz
iret
addr16
das
and
adc
arpl
push
jg
xor
dec
negb
sub
icebp
mov
mov
bound
scas
xchg
subl
mov
jg
jp
lods
insl
push
gs
xor
pop
mov
mov
sbb
lock
cmp
lahf
xlat
mov
jecxz
push
pop
mov
and
jne
idivb
cmc
into
cmp
inc
cmp
sti
mov
add
push
pop
and
sbb
add
scas
imul
lock
test
popf
sbb
movsl
fs
andl
mov
int
sbb
mov
fisubs
popf
jne
call
into
mov
mov
dec
mov
sub
adc
lret
and
add
lds
outsb
add
mov
sbb
popf
xchg
mov
loope
inc
xchg
mov
repnz
push
ret
das
shl
inc
rcll
mov
inc
or
ret
sti
in
push
mov
jno
add
jp
push
and
jl
xlat
pushf
add
xor
outsl
repz
sahf
fdivrs
jb
and
outsb
pop
push
stc
leave
int3
mov
jecxz
inc
cltd
iret
dec
je
hlt
mov
cmpsl
lret
sbb
jle
xor
jl
imul
inc
in
loope
sbb
loop
lcall
stos
aam
pop
cmp
and
jmp
loop
popf
popf
out
fdivrl
aaa
xchg
jmp
jbe
or
push
popf
fiaddl
cs
xor
fmull
imul
cmp
jbe
daa
mov
and
adc
cmp
movsb
mov
int
adc
and
adc
mov
ffreep
out
insl
es
mov
cli
ljmp
je
mov
mov
jp
ljmp
test
scas
sti
mov
in
mov
hlt
lods
dec
aad
ret
ss
je
adc
or
inc
and
sarl
pop
loope
fidivrl
xor
popf
out
xor
mov
or
inc
stos
jl
rcrb
movsb
lds
sub
cmc
fwait
sbb
std
push
mov
or
jo
mov
pop
inc
jl
stos
imul
lock
loope
outsb
mov
ss
adc
add
lcall
jmp
jb
cwtl
or
mov
sub
test
int
imul
sbb
jp
mov
popa
or
arpl
aaa
sar
xchg
push
mov
inc
movsb
xchg
outsb
int
sbb
cltd
mov
add
lret
in
call
rcll
ret
and
in
and
outsb
leave
sbb
pop
add
push
and
in
mov
mov
lret
loope
pop
and
mov
pop
fcmovne
push
push
ljmp
push
aas
js
inc
mov
cmpsb
xor
jno
jno
pop
xchg
test
mov
push
and
fnstcw
jno
xor
mov
pop
pop
mov
popa
and
fwait
xlat
add
push
leave
lock
enter
aaa
clc
jo
jmp
movsb
scas
lock
jge
jmp
loop
xchg
lret
aaa
fmul
lock
pop
jecxz
mov
stc
ja
xorl
in
mov
in
cwtl
add
nop
add
out
add
push
test
jge
and
dec
shll
rep
mov
add
cld
add
xlat
jo
das
add
mov
pop
popf
adc
mov
sbb
mov
sbbb
out
nop
sub
jnp
sub
ficompl
mov
ss
insl
jo
int
inc
pop
stos
outsb
cmp
dec
mov
pop
jne
and
pop
xchg
pop
sub
scas
popf
fnstenv
sub
test
icebp
and
aad
fcmovbe
popa
xchg
add
add
loopne
inc
inc
daa
sarb
in
push
and
bound
test
test
mov
adc
pop
icebp
push
insb
cmpsb
sbb
inc
pop
or
call
dec
out
jmp
mov
jge
adc
xor
inc
mov
or
test
jge
push
iret
jbe
dec
pop
and
adc
push
es
testl
mov
push
clc
sahf
xchg
or
nop
mov
mov
dec
mov
cs
xchg
xchg
pop
les
clc
push
mov
imul
sbb
lods
je
out
leave
or
push
ljmp
cmp
mov
inc
add
sub
and
xchg
dec
cmpsb
sbb
addr16
push
cmpsl
xchg
sub
sahf
js
outsb
repz
adc
dec
roll
cmp
mov
mov
mov
out
fdivr
jl
pop
push
rolb
test
div
pop
pop
scas
call
test
insl
dec
push
test
xchg
cltd
push
shlb
mov
sbb
xor
sti
inc
icebp
xor
repnz
out
into
jno
loop
in
push
pop
cmp
stos
rcll
mov
lahf
push
movsl
int
movsb
scas
ret
test
sbb
push
mov
in
repnz
movsb
xor
ret
mov
lods
pushf
dec
push
mov
jmp
mov
movsb
mov
mov
out
scas
pop
in
jbe
inc
loop
sar
fwait
popf
jo
push
fcomps
add
or
add
dec
push
scas
jle
dec
push
sbb
add
fcomp
add
loop
mov
and
and
jg
and
lds
pushf
jge
mov
pop
in
bound
test
pop
add
cmp
in
inc
mov
mov
mov
mov
loopne
ss
aam
and
jmp
int3
outsb
push
inc
and
cld
scas
aad
les
repnz
fwait
and
stos
inc
lds
jmp
mov
stc
dec
fwait
ja
sub
and
sarb
sbb
dec
mov
cmp
jle
mov
adcb
cmpsl
xor
or
pop
pop
mov
pop
xlat
test
mov
repz
xorb
cld
les
xchg
adc
sub
fildll
add
fs
ljmp
loop
mulb
stos
xor
inc
xor
push
cltd
pop
dec
push
insl
adc
pop
pop
xchg
and
out
inc
addr16
jb
xor
push
inc
addr16
sbb
fdivrp
jae
lcall
cmpl
mov
shll
cmpsl
aaa
pop
pop
pushf
lret
xchg
mov
inc
imul
inc
lock
pop
stos
cli
mov
dec
mov
mov
sete
into
push
inc
mov
add
pop
shrb
jnp
sarl
arpl
dec
inc
psubsw
mov
dec
sbb
addr16
mov
and
mov
out
adc
push
inc
xchg
xchg
mov
pop
mov
push
mov
loopne
popa
js
add
sub
fsubl
xor
popa
push
es
jmp
lret
or
sub
adc
jae
mov
pushf
mov
and
stc
clc
repz
sti
mov
and
dec
sub
push
in
out
outsb
adc
mov
fcompl
mov
mov
out
fst
inc
and
mov
rol
mov
push
loopne
fmull
or
or
push
xor
push
adc
call
jge
mov
pop
test
mov
mov
mov
mov
lret
leave
dec
xchg
dec
rclb
cmp
mov
adc
and
or
imull
inc
inc
jmp
rorb
pop
xchg
xchg
mov
jmp
shrb
mov
sub
int
cmpsl
dec
jo
scas
fadd
push
inc
iret
cmp
shlb
xchg
mov
inc
repnz
pop
or
pop
mov
addb
jbe
and
or
push
into
jp
rol
inc
mov
jecxz
int
in
cmp
cmp
shrl
pop
icebp
or
xor
push
xchg
ss
f2xm1
loop
xor
mov
xchg
sbb
fistps
jbe
mov
mov
and
cs
xor
sbbl
andl
jo
fwait
out
inc
and
or
jbe
stc
lcall
daa
xchg
or
das
outsb
std
xor
jge
mov
dec
imul
sti
lods
inc
mov
fcompl
and
xchg
mov
stc
xor
sbb
xchg
adc
fiadds
mov
movsl
add
dec
call
pop
imul
aad
and
add
cmpsb
fcmovnb
or
es
mov
push
jb
and
sarb
addr16
pushf
js
popa
daa
jo
imul
add
clc
add
and
mov
xlat
scas
das
lahf
movsl
adc
xchg
out
xchg
aaa
lods
sub
jp
lea
mov
mov
cmp
jae
pushf
inc
mov
cmpsl
push
sub
push
xor
sub
cmp
push
push
sbb
push
fsub
addr16
mov
aas
mov
dec
pusha
lock
pop
or
sarb
test
inc
rcl
or
sub
mov
arpl
out
sbb
and
xchg
cmc
lods
fnstcw
fidivs
aam
leave
ss
push
xor
icebp
sahf
cmp
sbb
stc
or
daa
js
pop
fwait
pop
call
out
xchg
adc
cmp
repz
inc
rcrb
or
gs
cmp
xor
rcr
xor
sbb
xor
bound
and
xchg
stc
insl
xchg
xchg
xchg
dec
inc
dec
lret
xor
mulb
pop
xor
push
mov
push
loopne
rclb
stos
mov
cmp
cli
pop
fstps
push
jo
lahf
call
xchg
adc
jge
das
mov
inc
in
add
mov
popf
mov
dec
in
mov
addl
or
mov
mov
lahf
xor
out
jl
sbb
mov
xchg
clc
mov
leave
mov
insb
lret
inc
inc
lock
sbb
lahf
cltd
daa
dec
lret
xchg
test
test
adc
push
fwait
cmp
rclb
cwtl
and
mov
dec
test
cwtl
adc
leave
pop
test
ss
or
in
pusha
stc
jg
js
cltd
lock
cmp
mov
fidivl
mov
daa
fists
push
sub
cmc
sbbb
mov
add
mov
ja
adc
les
call
addb
jle
mov
or
mov
cmp
je
inc
push
inc
push
ljmp
fptan
mov
and
addr16
inc
and
lea
push
xor
dec
xchg
dec
pusha
ds
dec
fs
mov
jecxz,pt
cmp
cs
pop
and
arpl
int
and
push
xchg
testb
sub
js
or
cmpsl
cmpsl
int3
pop
je
sbb
push
mov
aas
mov
sbb
movsl
aam
push
shll
xor
adc
fneni(8087
xchg
setno
hlt
pop
cmp
jl
shrl
and
outsl
xor
mov
clc
xor
lods
cs
add
push
or
inc
enter
sti
push
fcomp
mov
cmp
jge
and
nop
out
enter
dec
and
iret
out
adc
xchg
jbe
xchg
mov
adc
jl
xchg
loop
mov
xchg
imul
lds
pop
add
lret
pop
and
and
xchg
add
xchg
pusha
aam
lcallw
cmp
sub
mov
insb
xor
jge
sbb
push
xchg
adc
mov
stos
lahf
in
push
insb
add
in
push
ds
repz
ret
cmpsl
xor
push
or
fwait
rolb
adc
rorl
add
inc
xor
add
push
sbb
xchg
bound
sub
and
xchg
ja
pushl
xchg
push
pop
aaa
icebp
cmpsb
and
out
cltd
or
ja
mov
or
push
jae
xchg
jae
adc
pop
movsl
arpl
jecxz
mov
leave
dec
adc
stc
push
in
and
rorl
push
dec
or
xlat
addb
pusha
dec
test
jb
pop
inc
stos
pop
mov
xchg
sub
and
jge
fildl
insl
inc
mov
adc
mov
add
sbb
pusha
fucompp
xlat
and
nop
arpl
jbe
cmp
lahf
mov
lods
cmp
fwait
add
push
lods
adc
cmp
es
sub
addb
fistps
iret
push
pop
out
lods
mov
loope
inc
and
sbb
repz
flds
repz
aam
movsl
push
ret
sbb
push
or
xchg
inc
push
in
pop
addr16
add
test
cs
jecxz
js
and
sub
xchg
std
outsb
sub
jg
hlt
outsl
push
pop
jl
or
enter
pushf
push
sti
stos
pushl
dec
nop
xor
mov
bound
adc
adc
mov
popf
addl
in
fsubrl
scas
or
pop
xor
push
cmp
push
sub
jbe
mov
cmp
imul
jb
dec
and
cs
and
fsub
insb
sub
out
daa
dec
fsubr
or
jle
mov
xchg
dec
icebp
xor
cmp
adcb
fisubs
pusha
or
mov
push
daa
stos
js
sbb
std
out
or
cmp
es
stos
pushf
push
out
sub
test
jge
cmp
xchg
dec
not
lahf
pusha
inc
loop
jno
add
push
or
cs
movsb
xchg
or
mov
xor
negb
fsubl
fidivl
iret
xchg
dec
rcrl
hlt
inc
mov
mov
ret
mov
or
pop
insb
pcmpeqw
shll
jmp
pushf
xchg
stos
and
je
notl
adc
movsl
mov
cmp
mov
fimull
mov
adc
outsb
mov
cmc
dec
loop
les
lds
inc
dec
push
fsubl
in
dec
into
test
test
cld
pushf
push
adc
sbb
cs
or
or
call
fcoml
push
mov
mov
mov
sahf
pop
mov
dec
dec
mov
rorb
xchg
movsb
or
repz
popf
jmp
lods
mov
jno
mov
cld
cmp
inc
movsb
cmp
jmp
adc
xor
neg
ss
jl
mov
aam
mov
mov
loope
insl
xor
inc
pop
adc
and
push
enter
push
lds
into
loope
push
scas
mov
pop
out
xorl
in
and
cmpsl
aad
das
stc
movsb
and
jns
daa
sub
xchg
mov
stos
lret
ficoml
mov
xchg
mov
stos
mov
add
and
pop
dec
roll
dec
xor
jo
mov
ss
cmc
bound
mov
insl
cmpsb
testl
jl
cmc
inc
out
aad
pop
xlat
rcl
testl
inc
lret
stc
add
loope
repnz
and
inc
mov
add
mov
lea
dec
mov
arpl
fnstsw
sahf
adc
loop
add
ljmp
mov
lcall
sbb
xchg
bound
test
mov
stc
into
sub
push
pop
out
stos
push
mov
add
mov
lret
inc
jbe
add
adc
pushf
jnp
push
inc
fs
xor
and
sub
inc
push
in
je
cmp
lods
test
fistpll
sahf
push
data16
mov
rcrl
fistps
cmpsl
lret
ret
mull
cmp
sub
cli
lcall
cwtl
aad
cmc
mov
fimuls
sti
inc
repnz
and
pop
mov
mov
mov
push
pushf
in
aam
or
mov
outsl
mov
sub
dec
je
sbb
mov
inc
leave
movsl
jl
sub
xor
movsb
mov
push
xchg
dec
je
into
dec
test
lret
adc
dec
f2xm1
jle
dec
rcrb
push
popf
push
loop
push
dec
dec
mov
xchg
mov
sub
leave
xchg
rcll
repz
inc
sahf
jb
rol
jge
ja
and
inc
mov
jmp
movsb
imul
cmp
jg
sbb
push
jg
xlat
push
out
pop
or
inc
in
cmc
mov
rcl
dec
stos
xchg
enter
add
rol
orl
lahf
mov
mov
lea
jns
icebp
mov
mov
sub
sub
sbb
xchg
bound
out
xchg
lcall
stc
xchg
cmp
mov
dec
dec
call
push
ret
rcrl
ret
or
jl
mov
adc
scas
fcomps
and
inc
ret
push
loopne
ffreep
dec
int3
aas
pop
xchg
cmp
fdivs
cli
cmc
mov
xlat
sbb
push
sbb
xchg
push
mov
nop
dec
aas
shll
daa
int3
addr16
cld
leave
stos
loope
jmp
mov
cs
sub
rcl
sub
mov
sub
jne
mov
mov
subl
xchg
xchg
push
pop
pop
test
out
pop
mov
scas
mov
add
push
arpl
dec
push
pextrw
ss
imul
xchg
test
xor
loopne
push
arpl
dec
fcomi
in
les
nop
movsl
add
mov
imul
jg
shrl
scas
push
cwtl
mov
imull
pusha
or
xor
sub
mov
jmp
dec
lods
lods
popf
into
test
out
fstl
cmpsl
test
pusha
inc
sahf
ljmp
addr16
out
or
mov
orb
adc
sub
adc
add
add
clc
lods
pop
add
inc
sbb
mov
mov
std
aaa
sbb
dec
mov
add
cmovnp
outsb
fwait
or
sbb
cmp
enter
cmp
push
psllw
sarb
mov
fsubrl
or
sbb
daa
mov
call
popfw
cmpsb
sub
xorb
cs
inc
jnp
js
xchg
lcall
jb
dec
inc
and
cmpsl
repz
loop
loope
out
mull
lods
add
dec
dec
in
test
repz
loopne
mov
xchg
pop
mov
push
outsl
pop
add
sbb
fs
dec
fdivp
rorb
mov
or
dec
out
insb
aas
xchg
and
push
std
push
std
lods
movsl
or
gs
enter
jne
sbb
mov
pop
sar
pop
pop
lret
pop
add
cmp
push
adc
pop
cmp
sub
xor
adc
test
push
sub
mov
ja
icebp
mov
sbb
sub
mov
imul
or
imul
mov
faddl
cltd
and
sarb
sub
push
rolb
adc
sbb
ss
lods
add
dec
mov
aam
jecxz
jbe
insl
sbb
adc
adc
pop
adc
out
push
negl
mov
add
bound
mov
pushf
push
stc
lret
das
push
xchg
inc
imul
cmpsb
push
fidivl
pushf
mov
cmc
aam
and
mov
push
clc
push
xor
pinsrw
push
mov
idivl
mov
fs
mov
test
out
int
sbb
popa
hlt
imul
mov
pop
scas
das
xchg
enter
push
ror
cwtl
pop
ret
call
pop
ss
or
fstpt
mov
rcrb
pusha
lds
inc
xchg
cmp
inc
call
jbe
std
mov
insb
cld
aad
or
enter
das
mov
or
cmpsb
push
movsb
ljmp
mov
xchg
icebp
and
push
jp
scas
mov
aas
stos
add
pop
inc
dec
xchg
ficoml
aam
add
push
xor
ds
jg
mov
stc
jae
xlat
test
fs
xchg
pop
outsb
pushf
add
sbb
jp
rclb
dec
xchg
test
mov
mov
cmp
sbb
cmp
inc
inc
fs
xor
adc
loopne
xor
add
test
int
in
adc
outsl
xor
mov
adc
push
jle
cwtl
jb
sub
test
pop
mov
outsl
push
ss
ss
lahf
dec
xor
push
pushf
outsb
and
pop
push
fstps
sahf
or
inc
inc
hlt
and
push
xchg
mov
push
loop
mov
cmc
mov
aam
es
sahf
pop
jmp
dec
jmp
jecxz
lret
in
xor
test
cs
and
cs
and
jae
mov
stc
sub
pop
inc
imul
fidivrs
jle
or
leave
jb
aas
push
push
das
or
das
and
les
iret
or
aas
pop
aaa
outsb
lods
xor
popf
xor
mov
lock
ja
dec
and
dec
out
jl
dec
cwtl
sbb
and
and
test
pop
jecxz
sub
push
fsubp
push
loop
ret
pop
outsb
lcall
clc
or
repz
lods
outsb
jmp
stc
inc
mov
lods
in
mov
pop
inc
cwtl
callw
pop
dec
jbe
xchg
data16
mov
sahf
dec
lea
xlat
jbe
and
mov
mov
xor
and
leave
inc
or
add
and
fs
subb
dec
sbb
push
test
xchg
add
inc
mov
add
mov
cmpsl
dec
pop
cmp
stc
jae
and
jmp
and
xchg
std
add
push
movb
out
and
dec
jnp
inc
sahf
int
loop
insl
and
mov
out
movsb
lahf
ret
or
movsb
test
test
push
dec
dec
and
or
ss
pop
mov
sbb
mov
hlt
outsb
cltd
pop
sbb
xor
xlat
ret
jecxz
mov
cld
dec
scas
push
daa
in
cmp
xchg
test
lcall
xchg
loope
test
test
cmpsl
and
subl
mov
stos
pop
shlb
aad
sub
fisubrs
pop
pop
cmpsl
out
icebp
pop
je
cmp
scas
push
or
xchg
xor
in
jno
mov
jge
fstps
mov
dec
pshufw
pop
pop
aad
xchg
js
icebp
sarl
in
out
hlt
jl
push
xor
sub
push
jbe
gs
pop
rcr
xor
lahf
in
lods
cmp
loop
push
xchg
xchg
bound
xlat
repnz
setge
push
and
mov
inc
inc
dec
add
and
flds
nop
jnp
and
pop
inc
ror
outsl
push
dec
scas
mov
pop
lret
dec
dec
fs
lret
inc
mov
push
sbb
jne
addr16
fisttpl
dec
adc
sti
xchg
sti
add
pop
aad
adc
sbb
stc
jmp
push
mov
push
bound
test
cmp
daa
sub
jo
jecxz
inc
fbstp
movsb
push
popf
adc
mov
add
push
dec
popa
pop
xchg
push
pop
add
std
ret
push
inc
mov
scas
jnp
sbb
sahf
pop
mov
or
inc
jnp
and
bound
out
imul
and
push
ficompl
repnz
lock
add
outsb
ror
add
scas
adc
lret
jnp
cltd
inc
mov
cmpb
inc
adc
out
ret
mov
jbe
add
sti
movsl
or
insb
inc
and
push
inc
sbb
je
adc
sub
jmp
ja
xchg
dec
jno
xorb
fstps
imul
lret
jae
inc
lods
repz
lret
data16
cltd
lret
sub
and
enter
aas
cmpsl
scas
xchg
mov
cmp
loopne
js
data16
pop
dec
loopne
lea
xchg
xlat
pop
pop
jb
push
rcrb
nop
push
es
test
push
movsl
push
jmp
xchg
cmpsb
pop
mov
icebp
push
pop
incl
test
and
pushf
jp
mov
mov
fwait
pop
lret
pop
repz
fwait
mov
pop
cmp
in
repz
dec
dec
test
subl
push
pop
stos
push
xorb
call
sbb
sub
and
cmpsl
call
sahf
aas
test
mov
js
jp
jo
push
mov
mov
xchg
jb
push
mov
dec
out
aas
jnp
jne
xchg
or
lods
adc
xlat
or
test
or
lea
in
dec
fwait
dec
jnp
int3
pusha
imul
call
or
popa
lret
or
push
mov
push
fsubrs
loopne
std
imul
pop
mov
popf
popf
shrl
out
enter
loopne
ljmp
push
movsl
push
inc
imul
ret
pop
fdivl
dec
movsb
loope
in
lahf
push
dec
mov
or
sti
insl
add
and
mov
mov
xchg
inc
xor
cmc
outsb
xor
cmp
dec
sbbl
fidivrs
pushf
sbb
cmp
cld
in
dec
xchg
mov
jge
outsb
xlat
stos
pop
addr16
inc
inc
testb
and
addb
lcall
lods
or
iret
roll
paddsw
cmp
push
outsl
push
insb
cmpsb
je
cmp
cmpsl
mov
or
mov
test
ja
sbb
ffreep
xorb
sbb
xchg
cli
js
or
bound
sbb
xor
lcall
jge
and
mov
jo
fwait
ret
jmp
frstor
push
sbb
into
enter
xchg
test
fwait
enter
lahf
inc
fwait
push
movsb
aaa
sub
pop
mov
ds
in
dec
mov
addr16
and
faddl
sbb
pop
stos
mov
pop
or
daa
iret
test
out
cwtl
jbe
inc
xchg
insl
ljmp
clc
adc
js
xchg
jmp
fnstsw
nop
adc
lock
cvtpi2ps
dec
lahf
mov
test
adc
test
sbb
ret
adc
dec
arpl
ficompl
daa
mov
pusha
lods
rorl
push
sbb
adcb
sbb
sub
scas
mov
int3
negb
jbe
rclb
mov
sti
mov
adc
mov
mov
add
pop
ss
jp
dec
sub
cli
jnp
cwtl
xchg
cwtl
pop
push
les
jno
fidivl
xor
pop
and
sub
cmp
test
add
rcrl
iret
subb
mov
sbb
dec
push
cmp
jae
inc
inc
je
jae
scas
popa
jno
mov
mov
outsl
push
fprem1
adc
sub
mov
sbb
push
ret
mov
push
and
jl
in
or
mov
pop
jae
insl
jecxz
push
shrl
xor
mov
ljmp
mov
insl
xor
mov
fmul
mov
xchg
mov
xlat
test
scas
das
push
xchg
bound
xor
je
cwtl
fnstcw
testb
cld
sbb
outsl
ds
adc
ret
cmp
out
lcall
cmp
adc
push
insb
add
in
lret
cwtl
test
mov
pop
cli
mov
and
inc
push
popa
addr16
cld
xchg
pushf
inc
jnp
addr16
xchg
mov
inc
ret
inc
xchg
or
outsb
xlat
cmpb
pusha
xchg
jg
cwtl
ja
push
out
repnz
jnp
pop
sbb
xlat
xor
dec
jg
xorb
jbe
repz
out
adc
fnstenv
mov
dec
adc
in
lret
mov
dec
push
out
cmpsb
or
pop
ljmp
sub
lock
xor
mov
test
adc
shll
imul
or
fistl
popl
cmp
stc
push
cli
mov
in
mov
jl
daa
mov
xchg
jg
cs
test
mov
idivb
je
and
movsl
push
adc
lock
pop
bnd
mulb
mov
repnz
inc
mov
lods
mov
cmp
lods
stos
sub
xor
jns
popl
in
or
lock
push
xchg
fisubrl
mov
pop
insb
and
pop
int
mov
adc
mov
imul
pop
jp
fs
add
dec
jo
adc
cmpsb
sbb
sbb
xorb
xchg
mov
mov
aam
dec
xchg
loopne
inc
rcrb
test
fimuls
pop
rorl
lret
sub
lret
in
cmp
or
ljmp
popf
jmp
pushf
pusha
or
rcrb
imul
inc
xor
pop
inc
xchg
xor
push
cmc
int
inc
popa
mov
fldl
aad
lret
mov
in
mov
and
test
dec
dec
out
cmp
jmp
ja
stos
aad
push
lcall
cmpb
ljmp
sahf
fbld
mov
dec
fwait
add
push
push
addr16
out
xchg
cmp
mov
es
jecxz
xor
das
popa
movsb
stc
pop
out
sbb
add
loope
sub
scas
pushf
dec
cmpsb
mov
cmp
aad
mov
stos
adc
push
cmp
rcrb
jmp
and
repz
cmp
mov
jae
dec
fstl
cmpsl
and
sub
loop
aaa
xchg
leave
cmp
push
xor
push
pop
out
push
jns
xor
cmc
inc
fsubs
fbld
stos
pop
add
or
incb
lret
bound
je
fldcw
cmp
and
lcall
adc
inc
xchg
mul
inc
dec
mov
mov
icebp
sub
popa
xchg
xchg
lock
bound
jmp
add
loopne
outsb
dec
das
imul
jge
or
jbe
mov
jecxz
into
fdivr
scas
xor
sti
dec
mov
das
sub
mov
test
mov
scas
jb
inc
fnstcw
rorl
sbb
lahf
lods
mov
push
lcall
pusha
push
imul
scas
dec
jge
sahf
mov
out
cld
popf
ret
loopne
dec
mov
adc
sti
scas
imul
insb
dec
loope
lods
nop
insl
pop
roll
es
jle
cmpsb
jns
push
scas
out
jg
push
data16
testb
or
sbb
pop
or
dec
sub
pop
das
inc
adc
in
or
mov
dec
and
jo
push
pop
push
std
jg
push
cltd
aad
xchg
adc
or
cltd
fldenv
push
lret
inc
adcb
cmpsl
int3
push
sub
lret
cmp
shlb
fists
xor
fsubrs
jnp
adc
popf
mov
mov
test
pop
pop
xchg
clc
push
xor
cmpl
repnz
imul
std
loope
pop
push
mov
mov
cmp
ljmp
movsb
daa
jo
fidivrl
shlb
pop
dec
subb
mov
mov
push
pop
repz
sub
mov
add
xchg
ret
outsb
lret
xor
sub
cmpsl
inc
imul
cwtl
mov
mov
adc
insl
lods
mov
add
cmp
cmpl
pop
sbb
adc
xchg
fcomps
pusha
mov
inc
negl
addr16
xchg
loope
aam
hlt
add
push
jl
jge
push
push
jle
pop
jnp
push
jle
mov
scas
sahf
loope
jne
xchg
sti
cli
jmp
adc
imul
mov
add
jl
addl
sbb
rclb
jns
inc
fucomip
jnp
das
idivl
loopne
rcr
stc
loopne
insl
in
in
sbb
jb
mov
dec
xchg
adc
loopne
adc
dec
or
out
xor
fnstsw
enter
push
dec
jmp
jo
outsb
cmpsl
ret
ja
dec
and
and
jnp
pop
xor
inc
push
xchg
test
aam
mov
adc
jl
dec
fmuls
xchg
xorb
mov
pop
push
ret
aas
cmpsb
xchg
icebp
push
or
divb
out
lods
ds
lret
into
push
xor
movl
or
sarb
daa
aam
fwait
mov
xchg
rcrl
rclb
mov
fistl
and
inc
cmp
inc
fwait
dec
loope
push
adc
dec
sbb
or
jge
jmp
jle
shl
ss
scas
mov
pop
dec
testb
xchg
out
mov
lods
iret
out
mov
addl
lock
jp
sti
fdivl
mov
ss
xchg
jg
mov
jg
push
enter
or
xor
push
or
mov
pop
stc
dec
test
xchg
and
pop
xor
les
ret
mov
stos
mov
pop
outsl
imul
mov
push
xlat
push
inc
aad
sti
lcall
dec
inc
xlat
movsb
bound
icebp
rclb
enter
cmp
jb
mov
dec
xchg
popf
mov
mov
xchg
in
sahf
cmpxchg
xor
push
mov
addr16
push
pop
inc
lock
in
adc
daa
inc
std
negl
pop
sub
out
mov
ds
mov
scas
jnp
mov
in
and
xlat
jb
leave
xchg
daa
cld
push
jg
fdivrp
mov
cmp
and
sbb
daa
push
push
pop
shll
add
jmp
in
cld
inc
hlt
push
inc
je
repz
mov
jno
xor
and
lret
lock
ret
lods
fildll
mov
aas
pusha
lods
jae
stos
sbb
test
add
push
les
aaa
cmc
mov
das
jge
xor
cmc
mov
or
ljmp
xor
clc
pop
lcall
add
dec
test
jae
push
mov
inc
push
bnd
jg
stc
add
add
lds
mov
mov
push
fwait
dec
mov
pop
and
xchg
testl
adc
lcall
fsub
add
mov
clc
sti
loopne
mov
jmp
adc
add
call
dec
jb
addr16
sbb
sbb
dec
leave
sub
fldcw
stc
leave
cld
rcl
jmp
adc
pop
xor
movsl
cmpsb
insb
aaa
mov
add
je
and
arpl
cwtl
in
or
movsb
fimull
ret
sahf
or
orb
push
sti
jle
lds
mov
std
pop
rorl
sti
mov
rcll
jne
dec
mov
push
nop
inc
pop
and
movsl
xchg
mov
or
jno
in
add
xor
scas
mov
pop
in
test
enter
sahf
daa
or
mov
mov
mov
movsl
push
fs
push
mov
ror
adc
pop
or
xchg
cli
lods
mov
push
mov
scas
and
pushf
mov
fsubs
mov
mov
daa
loop
lods
fistpll
in
dec
out
inc
test
and
cmpsb
jae
jb
mov
add
hlt
push
out
ja
xor
cmp
add
sahf
scas
and
sbb
mov
das
pop
mov
mov
or
inc
arpl
clc
outsb
sahf
stc
fcoml
add
loope
push
sti
xor
fildll
ds
adc
inc
shll
cmp
or
std
xchg
push
cmp
and
lds
sub
insb
inc
inc
xor
and
insl
in
or
je
push
enter
into
cmc
cmc
sbb
or
pop
es
push
cltd
leave
cmc
or
inc
aas
push
sub
add
push
stos
or
mov
mov
lods
mov
mov
pop
loopne
and
cmc
push
sti
jno
incl
adc
adc
fnstcw
jo
stos
int3
rorl
inc
cmp
xorl
sbb
add
shlb
pop
rcrl
fwait
xor
es
mov
out
sbbl
add
pop
call
decb
das
cmp
jg
sbb
push
cmpsw
cltd
lret
dec
or
mov
std
inc
mov
mov
xchg
sub
mov
repnz
scas
gs
fwait
icebp
imul
dec
mov
sti
jne
es
cmpsb
test
sbb
es
les
scas
push
stos
or
sbb
insl
clc
mov
jmp
mov
jmp
in
or
das
jp
leave
insb
mulb
mov
rorb
xchg
push
pop
je
jp
addr16
jp
pop
or
lea
pop
clc
fdivr
mov
xchg
ss
jle,pt
and
mov
divl
jo
inc
and
mov
cmp
test
pusha
pop
xchg
data16
xor
fcoml
fsub
insb
xchg
pop
sub
sbb
xor
cmp
pop
int
int3
adc
fs
dec
xchg
sbb
mov
push
inc
bound
gs
popaw
or
lret
cwtl
inc
ljmp
inc
aas
rclb
jne
jne
jmp
sbb
jbe
add
flds
xchg
inc
mov
xchg
or
stc
aaa
pop
loop
mov
popf
sub
mov
cld
cli
fsubs
cld
stos
cwtl
cltd
sbbl
lock
xor
lret
cmp
inc
jl
mov
xor
mov
jge
loop
adc
mov
mov
cs
jp
mov
lss
cltd
push
or
and
ljmp
mov
cwtl
div
jae
xor
xlat
lods
xchg
cmp
sbb
xchg
fndisi(8087
pop
pop
add
pop
in
push
push
push
pop
lds
cmpsb
xchg
sbb
mov
jp
or
xchg
icebp
imulb
or
cmp
jmp
add
lock
hlt
bound
repz
aaa
andl
push
testl
push
xor
scas
cmc
rcrb
or
mov
push
lods
jo
andl
lds
daa
mov
mov
add
xchg
mov
scas
scas
into
stc
inc
pop
fcoms
movsl
cmc
or
push
stc
mov
mov
loope
fstl
and
mov
sbbl
push
xchg
xor
mov
adc
lods
ljmp
jg
adc
dec
hlt
js
jb
xchg
cmp
shlb
sub
ja
cmp
addr16
mov
jp
mov
hlt
dec
inc
mov
mov
ja
mov
cmp
xchg
jae
cmpl
sbb
pop
repnz
inc
mov
xlat
lahf
xchg
inc
test
cmp
arpl
movsl
inc
shl
js
and
into
inc
jle
xlat
fcmovnbe
dec
mov
out
jle
xchg
jmp
mov
loopne
pop
xor
enter
or
fs
sbb
xchg
lcall
push
rol
sub
and
shr
pop
std
inc
or
into
aaa
fnsave
adc
pop
add
push
xor
in
shl
ret
or
int3
mov
inc
outsb
mov
xchg
ret
sub
gs
cltd
neg
repz
rorl
inc
xchg
testb
jecxz
sahf
enter
test
pop
mov
dec
mov
movsl
mov
aas
and
scas
in
hlt
xchg
fiaddl
jg
sub
mov
cwtl
rclb
add
mov
mov
enter
inc
xor
xchg
das
std
push
dec
hlt
shll
test
cltd
jno
sti
ss
pop
inc
rcll
clc
insb
xchg
cltd
xchg
fldt
loop
mov
mov
jo
xchg
in
mov
outsb
push
or
pop
pusha
add
aam
adc
in
jae
mov
vfrczss
adc
das
ficoms
cmc
hlt
inc
sti
mov
sbb
or
fucomip
mov
sbb
cmp
loop
lods
jg
mov
jns
push
adc
push
jle
adc
ret
or
aad
mov
mov
pop
iret
mov
or
mov
imul
shl
shl
mov
cmp
je
mov
fiadds
shlb
in
out
stc
dec
mov
ret
push
lcall
shlb
push
pop
and
adc
jb
ret
add
call
addl
jae
inc
inc
mov
in
les
jnp
pop
cmp
lahf
xlat
add
push
sahf
sub
in
mov
lea
ret
add
jne
dec
inc
push
xchg
nop
cmp
testl
ss
loop
pop
adc
out
pop
sub
jbe
dec
lds
mov
inc
xchg
xchg
dec
pop
sahf
popf
int
adc
cmc
or
test
mov
lahf
out
pop
adc
adcb
jns
dec
sarb
push
and
xor
mov
adc
jmp
scas
xchg
mov
popa
hlt
aad
adc
mov
fs
inc
movsb
cmpsb
mov
xchg
sbb
xchg
or
mov
adc
aam
xchg
andb
nop
and
lret
pop
pop
push
mov
or
inc
adc
popl
inc
jmp
fdecstp
pop
test
mov
mov
andb
pop
or
xchg
pop
cmpsb
sbb
dec
lods
bound
sbbl
cli
or
inc
pop
mov
ljmp
pop
jmp
and
push
andl
xchg
lret
push
mov
mov
stos
pop
fldenv
maxps
insl
cmpsl
mov
xor
and
imul
xor
xchg
inc
cmp
jb
and
mov
fcmovnbe
add
cmpsb
idiv
cmpl
add
add
aam
xchg
or
and
xor
push
push
cli
cmpb
sbb
and
cld
push
mov
pushf
jl
or
pop
inc
scas
cli
lds
dec
jbe
aas
push
adc
ljmp
cwtl
in
jecxz
sbb
lcallw
cltd
jo
inc
inc
dec
mov
popa
xchg
ss
inc
push
arpl
push
das
shl
jae
add
sub
xor
push
mov
push
mov
daa
or
rolb
sub
push
pop
and
out
test
fiadds
jg
dec
adc
leave
scas
inc
inc
and
xorb
inc
fisubrs
sar
pop
push
repnz
pop
fistl
ljmp
pop
inc
dec
cmpsb
pop
popa
rcrl
sbbl
adc
jmp
sbb
out
sbb
mov
mov
sbb
test
mov
cmpsl
jecxz
testl
sub
aad
jb
xchg
imulb
or
push
out
xchg
into
push
int
rcrb
jp
fdivl
stos
ja
inc
or
movsb
lcall
and
cmp
mov
add
or
lods
std
sub
sbb
push
sbb
mov
pop
int
jg
xchg
int3
dec
rclb
and
pop
mov
outsb
andl
mov
loop
push
mov
jns
and
jo
cs
and
jmp
loopne
test
addl
or
test
mov
loop
movsb
sbb
adc
ret
sub
push
cmpsb
in
jmp
into
jecxz
pushl
dec
in
test
mov
inc
sti
mov
pop
ret
xchg
sub
ficompl
sbb
mov
pop
mov
jbe
xchg
hlt
xchg
push
xchg
jg
fadds
stc
stos
xchg
pop
in
fists
fwait
in
push
sub
fstpl
mov
cmpsb
cmp
dec
scas
push
imul
loop
pop
mov
ret
xchg
jns
imul
lcall
adc
pop
jnp
or
xacquire
daa
or
fdivrs
or
cmpl
and
mov
aaa
push
dec
push
imul
or
jbe
sub
cltd
dec
jmp
cltd
cmp
pop
rclb
mov
repz
and
sbb
pop
xchg
test
or
mov
fimull
int
aad
mov
mov
mov
fstl
cmc
ret
ret
xor
mov
push
imul
mov
sub
lods
jo
gs
ljmp
mov
push
jp
adc
fwait
dec
and
out
dec
xor
sti
andl
mov
xlat
inc
dec
sbb
lcall
fistl
sti
adcl
push
sbb
sahf
xchg
jne
xchg
aam
or
adc
lds
es
mov
push
jbe
fwait
enter
scas
divl
mov
xchg
inc
cmpsl
jbe
cs
add
pop
mov
jae
leave
sub
mov
jl
outsb
leave
pop
sahf
mov
repz
xor
enter
int
mov
rcll
inc
pop
gs
jo
and
and
dec
add
aad
rcrb
mov
icebp
loope
in
loopne
or
xchg
insb
mov
rclb
mov
sahf
mov
jne
or
es
iret
sarl
and
fnstenv
jns
push
imull
jne
iret
mov
stos
cmp
sub
or
fnstsw
pop
lods
xchg
dec
decb
test
mov
cmp
aad
jge
push
int3
cs
movl
adc
arpl
das
ja
cmp
gs
jb
ret
ljmp
jb
cmp
jb
mov
jecxz
in
jb
cmp
jmp
arpl
and
sub
fstpl
outsl
je
notl
leave
arpl
es
rolb
popf
rcrb
push
cmc
push
lds
std
mov
adc
mov
insl
dec
xchg
rcrl
and
rcrl
mov
jb
cli
sbb
inc
adc
jno
cmpsl
int3
aad
xor
movsl
push
lcall
push
into
insb
mov
mov
mov
add
pop
lcall
lock
mov
arpl
imul
rcl
adc
and
mov
testb
es
lret
xchg
test
jg
mov
cli
mov
xchg
in
rorb
jmp
and
cltd
ljmp
loop
sbb
addr16
sub
pop
cmpsl
fnstenv
add
pop
mov
mov
nop
lret
mov
loope
clc
aad
lods
mov
adc
shlb
out
inc
movsb
mov
sub
lret
sub
scas
push
mov
or
adcl
pop
push
xchg
push
scas
sbb
cmpsl
adc
jno
add
cld
lock
rcrb
adc
mov
lea
pop
mov
mov
add
mov
adc
or
push
xor
push
or
pop
sub
and
int
xchg
ficompl
stos
add
cmpb
inc
insb
cmp
popa
lcall
mov
and
fwait
aam
movsb
add
cmp
out
cmpsb
enter
and
or
js
movsb
leave
xor
push
fdiv
rorl
mov
add
pusha
fdivr
dec
repz
xchg
sub
cmp
flds
add
inc
shll
je
pushf
mov
cltd
add
lods
pop
iret
fs
push
jne
ss
cltd
add
mov
sub
xor
sahf
xchg
or
in
lds
and
shrl
mov
sbb
fucomi
ret
xchg
push
xchg
fdivs
rol
test
aam
jbe
stc
jne
lods
stos
jl
push
mov
and
push
insb
inc
jle
clc
xor
xchg
mov
and
fs
leave
jo
ds
insb
jns
hlt
sub
mov
mov
in
jl
add
xor
test
xor
bound
loopne
imul
insb
xchg
adc
xor
mov
cmp
ret
cmp
jo
push
out
rcrb
lds
ds
sbb
and
add
inc
scas
xchg
imul
dec
dec
sbb
cwtl
mov
xor
cmpsl
ds
scas
ljmp
loop
lods
outsl
ficoml
add
shlb
fucomi
push
aas
imul
lock
lret
int
cld
or
add
mov
jl
sub
movsl
xchg
iret
or
or
push
fistl
outsb
sub
pop
add
sub
pop
or
mov
mov
icebp
pop
scas
push
dec
jl
movsb
test
or
cld
xchg
pop
mov
mov
xor
out
mov
jne
or
inc
adc
jns
dec
pop
adc
ds
mov
and
in
popa
jle
aam
push
push
sub
outsl
mov
out
cmpsl
call
xchg
sti
mov
and
repnz
sub
xchg
dec
and
or
je
mov
idiv
jnp
pop
and
cmp
jmp
je
push
es
int3
xchg
aam
jae
and
add
sahf
sbb
pop
or
dec
lods
jns
push
ljmp
push
mov
imul
and
inc
repz
leave
rcr
mov
out
xchg
aam
pushf
add
cltd
and
cltd
rorl
cmpsl
jns
adc
pop
sarb
and
push
repnz
mov
sahf
dec
rclb
imul
jne
jnp
and
mov
lea
push
int3
cmc
aad
cltd
mov
enter
inc
jecxz
mov
dec
mov
addr16
xchg
rclb
ficompl
or
and
repnz
jnp
xor
jl
movups
roll
test
jbe
mov
fs
aaa
inc
loope
out
orb
mov
daa
and
pop
sti
sbbb
les
push
aam
or
dec
lds
std
xchg
cwtl
lcall
sti
lea
mov
adc
or
ret
add
jo
lahf
or
sub
call
cld
int
sbb
dec
out
js
push
mov
stc
xchg
xchg
test
mov
adc
in
cld
ja
cmp
inc
jle
imul
insb
out
jmp
xor
push
xchg
sub
xchg
outsl
push
sub
imul
jne
lcall
subb
stos
adc
pop
xchg
jae
mov
sbb
mov
cmovns
or
dec
push
push
jne
cmpsl
mov
out
repz
iret
ret
mov
xlat
movl
ljmp
mov
jbe
xor
scas
cmp
adc
and
cli
scas
lock
mov
cmpsb
out
or
out
vmread
movsl
push
pop
cmp
add
mov
sub
push
mov
jl
call
inc
jge
test
ror
sbbb
dec
mov
mov
mov
div
ds
xchg
out
mov
jb
pop
pop
repz
loope
add
fisubrs
push
add
push
sahf
mov
mov
daa
outsb
bound
lret
fdivrs
or
cmp
fwait
das
out
loop
xor
push
xor
roll
inc
and
fwait
xor
mov
jns
scas
mov
subb
cmp
dec
cli
lods
mov
loopne
xor
icebp
inc
mov
sub
mov
jns
fsubl
cmp
idivb
and
ds
or
mov
test
movsl
inc
lods
adc
push
fwait
stc
fwait
negb
xchg
sub
mov
add
rcrl
and
sub
dec
cmp
imul
dec
int
loopne
test
inc
movsl
dec
mov
pop
clc
xchg
push
ja
or
in
lods
ja
ret
lea
popa
cmp
ret
leave
lahf
cltd
ds
cmpsb
cmp
stc
xchg
mov
jle
rcll
push
xchg
push
xchg
and
push
sbb
xchg
push
xchg
icebp
aad
outsb
outsl
dec
or
loop
mov
xor
pop
push
xchg
js
shlb
xchg
mov
loop
scas
lret
mov
out
andl
jno
jae
enter
pop
loope
enter
xchg
pusha
and
rorb
clc
add
xor
pop
mov
mov
mov
mov
push
mov
pop
mov
lds
clc
sti
xorl
add
jns
pop
je
sbb
or
imul
jo
dec
xchg
jb
testb
push
ret
pop
push
scas
popa
cmpps
push
cmp
cmp
pop
jae
dec
pushw
arpl
lds
mov
jecxz
push
loop
test
js
sbb
cmpsb
je
fdivrs
mov
mov
or
sahf
ficoml
xchg
push
xor
mov
lods
pop
testb
mov
push
pop
inc
addr16
cmp
cmpsl
lret
pop
push
lods
pop
pop
mov
scas
insb
imul
mov
aaa
adc
sbb
pop
scas
in
or
sbb
xor
or
xor
adc
in
enter
rorb
imul
fwait
cli
mov
lret
cmp
cld
mov
insl
or
or
lret
stos
inc
ss
inc
xor
ja
outsb
js
fcoms
mov
arpl
test
or
lea
fnstenv
dec
outsl
pop
mov
dec
inc
testl
pop
stos
dec
lock
loop
sbb
sbb
jns
iret
loope
cmpsl
fsub
xor
les
adc
or
push
gs
fnstsw
ljmp
insl
adc
fs
cmp
push
xor
pop
out
popf
sub
xor
pop
and
mov
daa
subb
rcll
rorl
popa
xor
lods
xchg
scas
mov
sbb
pusha
xorl
cmp
xor
mov
lods
leave
stos
inc
ret
jbe
testl
mov
lret
or
nop
es
addl
loop
mov
jno
xor
add
rcll
xchg
arpl
sbb
nop
cmp
push
sub
push
insb
stos
mov
mov
cmp
pop
movsl
and
sbb
cmp
xchg
stos
xor
aam
std
sbb
outsl
mov
bound
pop
mov
mov
int3
inc
sub
xor
into
mov
movsl
xchg
xlat
add
sti
or
pushf
push
loope
push
sbb
cltd
out
lcall
inc
in
pop
jle
dec
add
test
sar
movsl
repnz
push
cmp
mov
mov
inc
jg
ret
pop
push
mov
lea
push
js
mov
mov
lret
dec
mov
out
rol
popf
mov
xchg
pop
inc
cwtl
dec
adc
movsl
imul
and
inc
mov
enterw
movsb
lods
cmpsb
push
inc
jnp
stc
or
cs
dec
cwtl
into
mov
add
push
jge
push
loope
fdivrs
add
mov
addl
push
cmp
inc
and
popa
jnp
and
shll
and
cmpsb
or
loop
mov
mov
outsl
or
les
xchg
sbb
movsl
pop
out
clc
xchg
dec
push
jae
out
cmc
mov
out
out
push
mov
push
jl
or
sbb
xor
outsl
inc
js
data16
in
pop
cmp
repnz
rcr
or
and
rclb
aam
cmp
pop
xchg
out
test
cmp
push
cmc
mov
imul
add
xlat
mov
jecxz
ja
fnstcw
out
sahf
imul
mov
lcall
add
inc
push
cmpsb
mov
mov
lcall
and
cmp
test
insl
xchg
push
stc
xchg
adcl
push
dec
movsb
pop
ljmp
xor
in
pop
cmp
mov
xchg
dec
fmuls
movsb
shlb
sbb
lods
xor
mov
cmp
push
xchg
dec
xor
dec
jne
icebp
scas
dec
adc
popa
lock
test
fs
ficoms
out
sbb
adc
sub
outsb
mov
ffreep
and
mov
pop
addr16
xchg
push
cmp
pop
aam
push
insb
movsl
sub
and
xchg
add
mov
inc
adc
lahf
or
sub
mov
mov
jne
lods
fstl
repz
dec
xchg
pusha
es
in
iret
fcoms
or
jp
lds
and
mov
jmp
sahf
sub
mov
sbb
rcr
sbb
mov
sub
imul
ret
fists
jbe
rcrl
sbb
jne
pop
cmp
pop
mov
inc
mov
push
adc
fsubl
push
xchg
mov
int
cmp
cmp
lret
aas
nop
ljmp
fsts
in
sub
mov
pusha
lret
sub
cmpsb
mov
aad
adc
xchg
das
mov
pop
mov
and
cmpsb
sub
not
xor
xor
je
movsb
ljmp
icebp
out
inc
mov
mov
fst
mov
pop
arpl
cmpsl
aam
and
mov
mov
pop
fnstsw
icebp
cmp
sub
clc
pop
pop
push
les
lret
mov
cli
add
daa
ja
jmp
jbe
mov
fucomp
push
xchg
decb
movsl
mov
dec
dec
in
cmp
jg
jge
and
pop
pushf
sub
lret
mov
inc
jmp
cmpsb
divl
testb
push
ljmp
mov
cmp
shlb
sub
cmp
dec
xchg
inc
ja
repz
push
fwait
cmc
sbb
stos
ja
push
in
shl
ret
fisttpl
mov
adc
jae
mov
mov
inc
adc
jp
les
scas
inc
inc
hlt
loope
fstps
cli
insb
xchg
mov
mov
jg
cmpsl
add
xlat
fwait
or
lret
and
sbb
hlt
inc
and
int
fists
pop
mov
lret
stos
jmp
adc
xor
cmp
cmpsl
shlb
and
adc
ljmp
mov
icebp
mov
mov
dec
loop
fsts
repz
shrb
dec
jo
push
pushf
or
sub
loopne
jo
dec
incl
mov
cmp
mov
data16
xchg
dec
lret
or
sbb
rcl
divl
das
in
sbb
insl
jl
out
cmpb
clc
jns
jmp
enter
cltd
out
jns
inc
sub
aad
gs
cmp
ror
xchg
mov
adcb
push
xor
push
lcall
lret
popa
daa
lods
adc
add
andb
ret
sti
out
js
jmp
sub
stos
or
xor
addl
jno
mov
sbb
fistpll
mov
push
inc
dec
cmp
cltd
sub
stos
mov
repnz
mov
push
xchg
out
inc
jg
mov
xor
pop
add
jbe
jle
push
sbb
cwtl
fcompl
jmp
mov
data16
inc
or
lahf
xchg
cwtl
and
sbb
lret
cmp
pop
lret
movsb
clc
xor
test
pushf
add
xor
out
pop
mov
xchg
cmp
sub
inc
in
cmp
xchg
das
lret
dec
bound
das
xlat
lods
iret
and
fbstp
mov
imul
sbb
fdivrl
das
mov
mov
jb
fcmovnb
mov
cwtl
xchg
mov
sbb
cmp
pusha
arpl
les
ficoms
ja
jae
int3
mov
mov
dec
push
out
sub
ret
out
sarl
and
jl
push
imul
ljmp
jp
xor
push
and
pop
mov
add
sbb
mov
pop
adc
pop
mov
out
xchg
inc
mov
and
xor
imul
cld
sbb
out
fdivrs
out
ret
fs
xchg
jg
add
movsb
xor
in
push
mov
dec
rorl
out
pop
cmpsl
adc
add
loop
mov
inc
pop
imul
iret
jle
push
les
ss
loope
lock
or
and
sahf
daa
outsl
das
cmpsb
mov
pushf
fs
adc
in
pop
ljmp
clc
add
mov
fisubrs
nop
cmpsb
test
popa
call
mov
out
or
jecxz
mov
xor
shlb
aam
out
mov
lret
out
popa
insb
xor
insl
sti
xor
inc
out
stc
mov
pop
push
icebp
aad
mov
or
xor
arpl
cltd
sahf
lea
js
mov
rclb
xchg
sahf
out
std
jae
fwait
imul
mov
push
sahf
jg
xchg
jecxz
mov
rol
in
push
fistpl
lods
insb
cmp
mov
mov
scas
mov
xor
push
mov
push
rcrb
imul
ret
imul
stos
xor
mov
iret
jo
popf
xchg
es
repz
or
sub
mov
cmp
in
adcb
inc
cmc
mov
fadd
aas
jo
fwait
pop
ror
insl
hlt
orl
lods
insl
add
repz
dec
icebp
shll
adc
lret
add
inc
test
cwtl
inc
mov
iret
mov
sbb
fs
cmp
dec
sbb
mov
sbb
lret
xchg
fdivr
pop
pop
ret
cmp
int3
xchg
add
xchg
fbstp
sbb
jbe
and
lcall
xchg
adc
and
lahf
pop
mov
adcl
mov
in
ds
pop
sbb
mov
jne
cltd
xorb
inc
jne
pop
pop
xor
lods
cmp
push
xor
inc
test
icebp
add
xchg
lret
nop
and
fdivrl
imul
or
in
inc
xor
dec
fcmovu
jbe
and
mov
push
test
push
push
xchg
pusha
out
test
push
test
inc
sub
sub
push
push
cmpsb
lock
pop
sub
les
sub
ret
mov
mov
lret
outsl
cmp
roll
mov
xchg
push
scas
arpl
mov
sbb
pop
jo
cmpsl
insl
adc
and
cmp
xchg
adc
xchg
or
les
mov
aad
sub
mov
daa
stc
jmp
mov
jbe
test
mov
sub
fisttps
in
jmp
aad
inc
adcl
loop
int
jnp
in
aad
xchg
fidivs
and
inc
sbb
mov
mov
inc
xchg
inc
inc
dec
sarl
dec
or
scas
fsubs
cld
cmc
push
clc
and
push
cmp
clc
subl
rclb
sbb
imul
push
mov
mov
jne
test
lret
jge,pn
inc
cmc
shlb
sbb
adc
insl
mov
xchg
subl
push
repnz
pop
add
inc
lcall
mov
popf
mov
cwtl
push
into
outsl
and
xchg
lret
pop
add
int3
pop
popa
movsb
sbb
xor
push
push
orl
jne
xchg
ret
or
cld
ja
or
mov
aam
sub
push
xor
insl
cmp
xchg
sbb
push
ret
add
sbb
inc
inc
mov
movsb
popf
inc
and
rcrl
loop
in
movsl
aas
out
mulb
out
loop
stos
dec
cs
je
pop
and
sub
add
fcomps
pavgb
and
mov
out
xor
dec
fimuls
mov
jmp
push
and
mov
movb
subl
icebp
movsl
outsb
fsubl
scas
cmc
or
ja
and
push
sbb
stc
push
test
and
lods
mov
mov
jno
cwtl
or
dec
cmp
cmc
inc
push
pushf
loopne
inc
or
jle
mov
bswap
hlt
xchg
cmp
data16
loopne
arpl
cmp
mov
pop
jno
imul
stc
pushf
adc
cld
cmp
cmp
std
icebp
cmp
and
test
loope
idivl
stos
arpl
nop
dec
test
adc
pop
lret
mov
mov
jae
mov
xor
xor
aaa
jnp
dec
loope
jmp
jecxz
fwait
jmp
mov
pop
outsb
mov
and
xchg
push
sti
shl
aam
cli
pop
loop
fsts
inc
jbe
xchg
push
addr16
or
add
add
rcrl
insl
mov
pop
adc
fcomip
push
test
pushf
ja
push
cmp
je
pop
cs
mov
aad
popf
mov
out
xchg
aaa
push
push
adcl
xlat
lret
das
mov
push
xor
push
lret
sti
lret
pop
dec
push
in
or
int3
imul
mov
les
fsubrl
push
mov
sub
shr
aaa
xchg
mov
test
jp
xor
sub
in
cwtl
mov
sbb
addb
add
movb
xor
dec
mov
sbb
cmpsb
mov
inc
clc
es
and
add
inc
dec
call
icebp
sbb
popa
cmp
xchg
jmp
push
and
shlb
repnz
bound
imul
xor
loop
xor
into
repnz
sub
and
lods
leave
aaa
movl
inc
rclb
repz
push
ret
addl
sbb
lahf
fiaddl
jle
dec
repnz
inc
shll
add
cmp
adc
mov
insl
cmpsb
sub
inc
inc
dec
sbb
adc
and
jno
daa
jne
pushf
ss
push
pop
sbb
jnp
scas
and
fwait
out
cmp
mov
jmp
pushf
jne
sub
and
jle
xor
lahf
jno
loope
add
xorb
jne
mov
inc
adc
pop
je
fcoml
pusha
sbb
mov
cmp
cmp
mov
mov
sbb
inc
add
dec
mov
nop
mov
mov
pop
jne
popa
push
mov
sbb
and
sbb
popf
and
xchg
out
adc
stos
pop
pop
inc
in
out
repnz
enter
adc
sbb
push
aam
in
cli
mov
pop
movaps
sbb
imul
mov
adc
mov
stos
xchg
cmp
jo
sub
outsl
jne
sarb
pop
iret
adc
movsb
sub
fs
fs
cmp
mov
inc
loop
and
fmuls
je
in
pop
pop
mov
or
pusha
mov
cmc
adc
add
and
jb
imul
push
cmp
das
xor
outsb
aas
pusha
addr16
sbb
roll
scas
xor
jae
push
lds
lcall
fistl
add
and
outsb
lea
dec
orb
aaa
aam
sti
fstps
fidivs
jnp
test
faddp
inc
cmp
rcrl
xchg
push
push
push
or
mov
cmp
pop
sbb
jns
mov
aas
mov
rcrb
sub
xchg
sbb
cmp
mov
in
movsb
les
fwait
pop
or
dec
and
imul
inc
std
mov
cltd
cltd
dec
mov
adc
outsb
ss
inc
fisttpl
xchg
mov
cld
mov
mov
clc
inc
add
sub
scas
repz
testb
jb
lret
mov
out
das
imul
lds
mov
fiaddl
inc
add
fmulp
xor
loope
jmp
shrl
sub
sbb
cltd
jg
shll
fidivrl
pusha
push
insb
js
push
scas
das
das
mov
and
push
fxch
popa
cmp
jbe
xor
lcall
or
jo
gs
pushf
fld
dec
jg
push
iret
lret
lcall
mov
mov
inc
or
push
cli
rcll
ds
sub
mov
dec
pushf
mov
fsubrs
fcom
loopne
fimuls
mov
rcr
rcll
stc
shlb
pop
mov
hlt
sub
arpl
adc
mov
pop
outsb
inc
mov
push
daa
pushf
xor
mov
clc
loopne
mov
aaa
dec
push
jl
shlb
jmp
lods
aas
fwait
xor
push
cmc
mov
push
sub
add
int3
ss
iret
shrl
fistl
repnz
push
adc
mov
mov
dec
js
lret
repnz
add
xor
xor
push
inc
or
xchg
push
mov
jp
cmp
dec
pop
sub
ret
cs
jle
stc
or
cmp
fsubrs
mov
sahf
jmp
dec
fwait
test
add
sbb
daa
inc
popf
outsb
popf
in
inc
add
arpl
clc
movsl
int
mov
or
and
or
push
adc
mov
pop
imul
inc
mov
cmp
daa
inc
scas
jne
ljmp
fildl
push
lds
mov
push
addl
cmp
into
push
aam
and
aaa
ret
test
jbe
inc
pusha
inc
movsl
sbb
push
push
push
inc
int
mov
xor
mov
cmp
in
subb
pop
sbb
into
xlat
mov
lea
iret
push
mov
push
mov
and
xchg
push
imul
mov
pop
fs
arpl
or
and
fistpl
gs
xchg
mov
popl
cmp
out
mov
xchg
jns
mov
pop
xor
or
and
push
dec
inc
orb
adc
sub
pop
in
rcrl
aaa
push
lea
frstor
lds
lock
or
loop
push
and
pop
sbb
hlt
insl
std
fcoml
inc
scas
adc
pusha
jae
aam
in
ret
xchg
cmc
out
or
push
test
pop
ds
xor
add
sbb
push
mov
les
scas
push
jb
jno
mov
sub
out
jg
sub
stos
mov
lahf
loope
and
cld
roll
inc
insb
repnz
pop
pushf
push
jmp
mov
fsubrl
outsb
dec
add
mov
aas
call
jae
cmp
sub
inc
mov
jne
mov
inc
sbb
hlt
scas
inc
loopne
pop
mov
dec
cwtl
scas
sbb
adc
xor
jge,pt
icebp
and
movsb
lds
sub
inc
enter
cwtl
leave
ljmp
mulb
xchg
into
xor
out
mov
cld
push
adc
cmp
dec
out
mov
imul
out
pushf
fmuls
add
fisttps
xor
jne
pop
sti
mov
inc
sbbl
xchg
jbe
pop
std
fisubrs
sti
dec
in
jne
jp
mov
outsb
cltd
sarl
add
and
lcall
or
popa
cmpsl
cli
in
pop
in
inc
xchg
icebp
or
ficomps
adc
aaa
xchg
lods
inc
pop
inc
xor
jo
call
jle
nop
or
pusha
add
push
sbb
add
xchg
insl
pop
add
cmp
nop
lcall
pop
mov
dec
xor
scas
leave
inc
lods
rcrb
out
xchg
and
xchg
fists
and
and
or
jl
lea
aam
scas
jmp
inc
test
jge
adc
cmp
in
sub
sub
pop
lahf
and
sti
mov
andb
test
or
inc
mov
jg
das
imul
leave
push
xor
leave
aam
idivb
pop
cmp
arpl
and
mov
in
lock
adc
sbb
cltd
out
and
cmpsl
jle
sbb
xor
inc
cmc
rcl
cmp
mov
dec
mov
test
jmp
mov
in
jne
xchg
mov
adc
mov
cltd
adc
add
adc
add
int3
push
push
sub
ljmp
jge
stos
lods
cltd
lea
or
inc
cltd
adc
cmp
dec
ret
mov
cmp
dec
aas
pop
faddl
xchg
add
stos
or
fadd
imul
push
pop
dec
test
lcall
imul
fbld
inc
xor
sbb
xchg
adc
and
mov
sub
push
pop
xor
mov
int
xor
mov
mov
aas
mov
push
ss
xor
mov
gs
pop
mov
testb
xchg
enter
icebp
cmp
inc
add
or
and
pop
iret
add
xchg
cltd
out
lret
mov
rolb
push
fs
add
push
outsb
jns
or
adc
shll
sbb
ret
loope
mov
or
lds
mov
mov
sub
ljmp
into
mov
das
or
mov
xor
iret
mov
int3
push
and
push
movsl
jns
test
dec
mov
movsb
sub
rcrb
mov
bound
jmp
fldcw
fsubs
ds
sub
dec
imul
push
out
enter
inc
mov
fldenv
mov
outsl
scas
add
pusha
mov
shll
in
out
fiadds
cltd
jmp
inc
xlat
cs
mov
sub
push
bnd
xlat
xor
popf
lods
imul
inc
syscall
mov
xor
aad
jbe
jg
daa
je
mov
fcomps
xchg
arpl
ja
cmpb
add
rorl
xchg
ss
ljmp
mov
and
or
jbe
lock
xor
test
pop
movsb
scas
jno
rcll
aaa
adc
push
test
mov
inc
fdivrs
xchg
push
xchg
dec
cmp
push
push
aam
push
and
test
jmp
shll
mov
das
xchg
int3
aas
repnz
mov
mov
cld
cs
xorl
lcall
shlb
inc
xor
push
adc
enter
adc
or
xchg
push
cmp
int
arpl
or
popa
jle
out
xchg
js
pop
ret
xor
dec
push
jb
cmpsb
lret
mov
dec
stos
pop
incb
pop
adc
scas
inc
les
or
cld
in
popf
push
sub
lret
cmpb
ret
jl
cltd
test
clc
and
je
add
cmp
mov
sahf
inc
push
cmp
lds
jp
jae
mov
orb
xor
sub
sahf
fiaddl
mov
cmc
push
xchg
je
inc
cmpsb
aad
or
mov
stc
adc
xor
stc
pop
enter
jl
ja
out
insb
pop
push
loopne
lcall
int
jmp
into
sti
shlb
push
add
cli
ja
push
fidivs
jg
xor
loopne
ss
lods
divl
sub
lock
and
add
test
lock
outsb
sbb
mov
ss
or
insl
fs
insl
jnp
cmc
cwtl
dec
pop
inc
xor
mov
mov
fs
movsl
loopne
sbb
loop
jns,pn
in
enter
push
icebp
mov
push
das
mov
out
js
arpl
loopne
pop
xor
add
mov
cmc
mov
stos
js
pusha
pusha
cs
jle
push
js
loope
mov
mov
sub
enter
pop
jl
adc
lahf
es
xchg
insl
fiadds
daa
lea
mulb
cli
ss
add
mov
mov
js
mov
jecxz
out
fxch
les
gs
arpl
into
movsb
and
sub
sub
pop
add
ret
out
lret
shlb
iret
rcll
mov
out
inc
out
mov
or
xor
movsl
dec
adc
sbb
es
jmp
ja
sub
adc
fildl
adc
rcrb
int
push
and
sub
arpl
mov
or
push
mov
gs
jmp
mov
jo
andb
dec
fcos
rcr
adc
xchg
aad
jno
cmc
test
push
pavgw
popf
sti
dec
inc
jp
aam
sub
test
fwait
adc
dec
les
test
cmp
push
popf
fmuls
pop
push
inc
and
fstpl
and
cmp
rcrb
cmp
fcompl
in
pop
mov
mov
pop
jns
sub
movsb
pop
aad
mov
xor
loop
cld
add
push
jl
jo
xchg
sbb
test
jge
aad
aas
aas
aam
xor
andb
pop
push
jge
stos
and
inc
add
ss
repz
arpl
and
lcall
icebp
les
stos
sti
mov
cs
daa
dec
push
test
fisubrl
lea
daa
rolb
stos
hlt
test
xor
pop
jecxz
mov
jl
insl
and
sbb
pop
pop
insl
inc
loope
jo
stos
test
cmp
fdivl
test
lcall
sbbb
cmp
aas
int3
fsubl
in
lea
xor
ja
incb
rorb
popf
pop
dec
test
jl
decl
push
fildl
sub
jbe
jno
test
sub
js
int3
popa
jmp
inc
in
addb
and
xchg
inc
leave
mov
mov
pop
push
loopne
imul
es
sbb
or
addb
jmp
sub
mov
mov
std
dec
xor
sbb
sub
adc
mov
or
push
dec
cmp
add
xchg
cld
fldt
xor
mov
aad
sub
pop
cmp
push
xor
xchg
dec
lods
imul
lret
dec
mov
cwtl
das
dec
cli
fucomp
fisubrs
cld
leave
inc
and
xor
push
hlt
adc
inc
mov
adc
inc
adc
pop
jecxz
ljmp
sub
pop
mov
push
inc
mov
or
sub
jecxz
cmp
pusha
jg
pusha
or
je
je
xchg
push
mov
mov
stos
std
cmp
scas
jmp
mov
dec
push
test
sub
inc
jnp
xchg
andb
or
xor
cmp
sahf
movl
inc
sub
in
dec
mov
push
add
int3
jl
sbb
lods
mov
shlb
lret
adc
out
and
xor
fistpl
sar
rolb
lcall
stc
in
lods
mov
jmp
pop
push
push
mov
mov
lahf
or
ret
int
inc
sub
int3
sub
in
into
scas
jne
xchg
jle
out
lods
aas
jae
ljmp
or
push
in
fwait
pop
popf
xchg
fisubl
ret
fstl
int3
adc
xchg
dec
push
pop
addr16
jne
das
in
mov
xchg
or
imul
sub
ljmp
lods
call
adc
outsl
fstps
mov
in
shrl
outsb
adc
out
outsb
add
jo
jg
add
and
outsb
sbb
pop
jle
lret
call
aad
xchg
leave
adc
test
sbb
push
mov
xchg
jg
fstpl
int
daa
and
pop
jo
xor
mov
mov
scas
fdivrs
aad
popf
mov
mov
shrl
andl
scas
xchg
fdecstp
lods
jge
xchg
inc
push
or
adcl
dec
fcoml
pusha
cli
xor
repnz
fucom
inc
sbb
das
mov
sbb
pop
dec
cmp
adc
push
dec
dec
pop
dec
and
mov
or
sbb
mov
push
sbb
jns
in
xor
arpl
js
nop
mov
jmp
cmp
pop
jg
add
mov
mov
shl
mov
jno
mov
addb
jno
jle
cmp
sbb
lock
jnp
xchg
inc
pop
jecxz
mov
icebp
arpl
or
xlat
popl
ret
mov
mov
mov
add
das
pop
pop
lret
movb
cs
aad
xchg
je
lds
je
lock
pop
cmp
xchg
lret
or
and
lods
mov
mov
cmpb
mov
rcll
movsb
push
fstps
pop
add
mov
sub
pushf
ja
mov
pop
and
sub
push
adc
cld
xchg
movsb
dec
loop
jae
fimuls
fbstp
ret
or
xchg
ret
xor
pop
jge
xchg
imul
xor
pop
jmp
sahf
test
insb
adc
out
sahf
movsb
inc
push
aaa
insb
jl
inc
sub
inc
data16
cmp
adc
inc
jne
pushf
outsl
das
std
dec
dec
xchg
fwait
dec
pop
and
add
mov
jo
pop
cmp
sti
xchg
add
sbbb
fstpl
sub
sub
mov
jo
push
xchg
sbb
sbb
xor
dec
shlb
das
pop
pop
cmp
jge
popf
pop
push
pop
je
dec
in
call
cmp
lds
or
jb
sti
fistpl
je
ficoml
mulb
imul
scas
dec
stos
inc
pusha
xchg
outsb
push
cmp
test
clc
push
scas
dec
lret
jae
jg
lock
movsl
lds
pushl
das
inc
inc
out
cmp
inc
je
pop
or
jp
stos
sbb
push
pop
std
mov
aam
mov
mov
out
aas
lods
lahf
and
rclb
or
ret
stos
out
inc
ss
push
sub
push
lret
call
add
pop
push
lret
insl
push
notl
movsl
std
adc
mov
in
ja
lock
and
ret
dec
cmp
loope
test
push
fcmovnb
fcmovnb
push
cmp
push
lret
loope
and
stos
push
mov
mov
jnp
dec
jae
add
and
xchg
inc
addl
repz
inc
shll
xor
and
mov
xor
jge
aam
push
je
ja
imul
inc
xor
stc
mov
cmpsl
cmc
testb
popa
ret
cmc
cmp
lea
xlat
sub
aas
pop
or
inc
xchg
mov
mov
cltd
and
hlt
mov
shlb
or
push
clc
lds
daa
xchg
jo
adc
cmc
xor
cmp
mov
iret
adc
inc
icebp
mov
incb
push
and
cs
cmp
mov
mov
mov
iret
outsb
push
cmpsb
cs
jae
xchg
jns
test
cmpsl
gs
inc
jle
dec
je
cmp
je
adc
out
jecxz
pop
sar
loop
aas
xor
inc
fmuls
mov
xchg
fdivrl
jmp
mov
sbb
aad
mulb
imul
lods
andl
popa
jae
enter
into
scas
clc
and
je
movsb
mov
adc
mov
pop
hlt
add
lea
add
dec
or
push
adc
xor
sbb
jmp
shrb
push
popf
jge
aad
movsl
adc
out
lcall
xor
jnp
enter
mov
out
cmpsl
push
call
sbb
test
stos
xor
iret
aad
cwtl
push
out
nop
sbbb
push
cmp
ret
jne
mov
out
jmp
nop
test
jmp
mov
mov
inc
mov
je
inc
pop
cld
push
lods
cmpsb
scas
clc
mov
and
lcall
jge
imul
test
aam
sbb
iret
mov
mov
fcmovnu
sub
out
add
aaa
pop
int
xchg
idivb
mov
xchg
in
cmp
out
push
fsubl
setge
push
clc
inc
xlat
imul
int3
es
cmp
mov
mov
in
mov
aad
adc
mov
and
movsl
add
or
shrb
and
add
mov
das
or
xor
clc
sub
pushf
jo
dec
sbb
mov
adc
xchg
inc
addr16
mov
out
test
stos
push
ds
pop
nop
or
fisttpll
cmpl
mov
sbb
sar
add
imul
jnp
xchg
push
jns
ja
fsubr
add
cmp
adc
mov
xchg
arpl
xchg
mov
sbb
jo
cwtl
pop
test
les
icebp
lahf
fbld
lea
cli
filds
jecxz
lret
mov
in
mov
adc
jns
push
mov
xchg
loope
rorl
fstps
pop
lods
repnz
add
lock
jo
mov
adcb
test
mov
mov
inc
cmp
ljmp
cmp
rorb
sbb
sbb
in
xor
adc
aaa
nop
fmul
ljmp
les
inc
daa
scas
push
mov
int
lock
inc
push
pushf
imul
arpl
outsb
decl
mov
das
out
push
adc
out
lds
sahf
call
push
mov
mov
pop
test
dec
push
addb
xchg
outsl
dec
push
mov
mov
xor
enter
notl
mov
das
rep
test
mov
movsb
pop
imul
loopne
and
push
rolb
lret
outsl
stos
repnz
out
add
std
or
mov
push
xor
push
push
xor
out
fistl
loope
push
add
push
and
sub
adc
js
cmpsb
addl
addb
fisubrs
test
sarb
shr
shlb
add
mov
fldcw
test
pop
nop
push
aad
pusha
and
cltd
fcompl
outsl
sahf
jecxz
xor
mov
or
int
lea
pop
mov
sub
add
rcr
jmp
jno
jbe
fcmovb
inc
inc
aad
push
or
stc
mov
inc
leave
mov
das
pop
add
out
sbb
inc
mov
sub
push
xor
sbb
sub
mov
pop
loope
cmpsl
cwtl
in
mov
aaa
fs
loop
cmpsl
movsl
push
outsl
jnp
mov
aad
cs
push
out
outsl
das
insl
inc
and
aas
movsl
inc
xchg
lds
and
inc
repz
test
add
es
lods
jg
inc
cmpsl
jae
lock
push
adcb
push
dec
subl
gs
lock
or
inc
pop
js
mov
cmpl
fisubrs
sub
mov
arpl
push
push
lds
mov
adc
cwtl
fmuls
or
lahf
sbb
pop
adcb
push
rolb
insb
andl
fsubs
addr16
xor
sbb
inc
loope
cmp
cmp
mov
addb
and
mov
fdivs
and
nop
in
pop
sub
jns
or
add
xor
jns
cli
push
xchg
sbb
fldl
jge
test
stc
pop
xor
fcomip
pop
push
adc
push
scas
ss
add
shll
jp
shrl
mov
and
mov
inc
cld
xor
popa
lds
pop
pop
mov
lods
pop
xchg
xchg
mov
sbb
dec
and
ret
and
ss
xorb
cmpb
or
pop
mov
fcmovnb
imul
out
rolb
mov
add
repnz
mov
ss
xchg
roll
fs
xor
andl
mov
es
xchg
lock
mov
add
push
mov
ja
fxtract
insl
push
adc
lret
mov
xchg
or
popa
mov
mov
mov
fldl
xor
ud1
pop
int3
mov
in
pop
mov
std
rcll
inc
mov
clc
pop
ljmp
scas
or
adc
add
test
add
push
popa
xchg
xchg
out
lea
sti
icebp
rcrb
xor
cmp
mov
sbb
inc
push
mov
ret
mov
add
push
nop
ljmp
pop
nop
xchg
js
mov
test
adc
fidivs
and
pshufw
testb
and
popf
mov
ds
xchg
call
and
mov
xor
jmp
pop
aas
cld
mov
cli
cmc
popa
xchg
cmp
push
mov
mov
cld
lcall
xchg
mov
pushf
xchg
adc
into
adc
sbb
jg
ret
cmp
aaa
repnz
and
leave
std
ret
add
hlt
pushf
in
in
stc
rorb
nop
cvttps2pi
in
loope
mov
sbb
mov
jmp
mov
loop
ret
stos
mov
jg
push
cmc
aad
lret
hlt
sbb
addb
mov
and
push
xchg
in
je
inc
sub
scas
mov
into
mov
dec
dec
or
lret
inc
and
jg
mov
sarl
or
shr
mov
decb
shlb
mov
es
mov
out
gs
mov
leave
or
mov
add
adc
pop
ss
cmp
lret
adc
pop
sub
adc
shrb
dec
lods
push
stc
lods
daa
pop
xor
dec
dec
nop
repnz
adc
test
cmpsl
push
js
inc
out
push
add
stc
repnz
enter
cmp
inc
mov
popa
out
cmp
mov
icebp
inc
jmp
xor
stc
movsb
cmpsb
cmp
icebp
xchg
inc
xchg
cwtl
out
call
ljmp
pop
pop
mov
sti
adc
popf
mov
ss
fs
push
xor
jo
and
loop
int
pop
mov
lock
and
and
cltd
push
dec
iret
daa
in
jo
push
adcb
mov
and
push
inc
clc
mov
jp
std
pop
in
push
add
mov
insb
xchg
inc
or
pop
dec
jne
repnz
jmp
out
pop
sarb
sbb
cli
idivl
pop
js
outsb
xchg
sbb
shl
or
aad
push
clc
push
imul
xor
gs
push
sub
mov
aas
pop
xchg
jle
scas
xchg
jnp
mov
loop
fsubrs
mov
push
lcall
out
test
jecxz
mov
push
sbb
push
cmp
std
fld
rcrb
mov
notl
sub
imul
xchg
jle
insb
xacquire
mov
sbb
xsave
mov
add
jl
and
mov
push
stc
and
pop
dec
mov
inc
xor
adc
stos
sbb
nop
adc
dec
sub
push
sbb
es
js
mov
sub
pop
icebp
repnz
xor
xchg
push
scas
ss
sbb
testb
movsl
xchg
or
lock
sub
iret
test
push
lret
push
scas
lock
sub
cmp
testb
xchg
in
cmp
pop
fdiv
scas
andnps
xchg
lods
mov
adc
es
cwtl
mov
jmp
fcmove
sbb
mov
jns
cmc
xchg
mov
mov
pop
rcll
adc
fsts
xchg
mov
lcall
dec
test
movsl
mov
sub
loopne,pt
and
or
lock
movsl
add
xchg
cld
pop
push
xchg
and
dec
xor
popa
icebp
and
ret
jp
sub
adc
lret
mov
push
dec
inc
cmc
call
jb
jl
es
dec
pushf
adc
pop
adc
xchg
adc
mov
inc
lds
add
lret
scas
inc
mov
cmpl
jns
and
or
hlt
add
jns
in
pop
push
adc
ja
push
mov
push
mov
push
lock
mov
fisubl
xchg
add
sub
sub
push
enter
pop
sub
stos
sarl
jp
cmp
cmp
xor
xchg
loopne
test
popf
jmp
sbb
push
pop
repz
or
and
jb
xlat
js
inc
ret
fistpll
push
les
in
push
cli
and
push
dec
cmp
xor
test
ret
cmc
push
and
pop
cmpsl
pop
mov
call
ror
test
ja
testl
addr16
dec
jmp
inc
cltd
sbb
movsb
andl
aaa
stos
mov
data16
aaa
xor
sbb
popf
adc
ljmp
test
aas
jl
in
daa
adc
addb
inc
add
push
int
lds
jge
popa
cmp
xor
and
pop
or
insb
lret
push
mov
ret
add
outsb
in
shrl
iret
aaa
push
mov
out
fcomip
mov
fsubrl
push
push
aad
cwtl
or
mov
adc
sbb
dec
nop
sbb
nop
int3
sub
popf
pop
cld
jns
shl
out
lret
shrb
rorb
test
jmp
mov
inc
negb
adc
pop
inc
rep
cmc
inc
lock
sub
xchg
fwait
or
push
sbb
sbbb
xlat
arpl
jmp
rclb
pop
je
or
sbb
bnd
sbb
test
rcrl
std
stos
mov
rcrl
jb
ds
mov
pop
mov
mov
icebp
xchg
mov
pminsw
push
stos
ret
sbb
cmp
xchg
inc
scas
mov
mov
inc
lcall
sbb
add
sahf
pop
mov
clc
outsl
imul
mov
cmp
dec
sub
pop
aam
mov
fstps
movsb
lahf
inc
insb
mov
jmp
jge
xchg
sub
rcrb
inc
int3
jno
adc
bound
push
mov
stos
cmc
cmp
sbb
lds
ja
arpl
out
nop
or
add
cld
xchg
sbb
test
and
popf
lcall
sub
outsb
sub
popf
dec
pop
adc
call
lret
sbb
jns
lds
mov
faddl
rol
fwait
sbb
fidivs
jge
dec
xchg
mov
cmp
dec
inc
call
pop
data16
xor
mov
sbb
push
xchg
jb
mov
imull
xchg
sub
sub
inc
pop
adc
cmpsl
push
and
mov
popf
loopne
push
cld
shll
push
popa
push
add
mov
jbe
mov
daa
scas
cld
jg
movsb
leave
jp
sbb
movsl
add
stos
mov
mov
in
adc
inc
mov
jmp
or
sarb
mov
xor
loopne
out
mov
mov
lret
add
ror
lea
xchg
clc
sbb
movsl
xor
and
and
mov
loop
pusha
pop
je
jp
lret
imul
popf
popf
jl
xor
shrb
shrl
mov
cltd
movsb
push
adc
fstl
push
inc
pop
jle
add
popa
clc
outsb
mov
sbb
mov
ret
adcb
jg
movsb
stos
cwtl
or
xlat
mov
test
cmpsb
das
cmp
insb
rcrl
cmpsb
mov
push
jge
mov
jmp
lahf
mov
mov
les
or
inc
or
inc
imul
bound
push
insl
lahf
enter
fsubrp
mov
or
aad
mov
adc
shlb
add
xchg
rcrl
jns
popa
push
bound
das
pop
push
ja
test
gs
negl
sahf
pop
scas
push
fstpl
sbb
andl
dec
int3
adc
push
dec
push
xor
jnp
inc
aam
lret
cld
add
jo
or
xchg
or
dec
adc
xchg
sbb
mov
ljmp
in
cmovbe
outsb
lods
sub
fldt
inc
movsb
dec
and
movsb
out
xchg
xor
mov
lahf
mov
mov
mov
pop
out
icebp
pop
xlat
js
repz
aam
dec
ss
shr
scas
sub
adc
repz
ret
rorl
fsubp
xor
add
inc
jbe
and
scas
out
pop
xor
cmp
jp
adc
filds
data16
imul
scas
outsb
test
pop
ret
mov
push
insl
or
cwtl
clc
lcall
mov
std
test
inc
xchg
or
cs
mov
in
das
xor
rorb
icebp
xchg
cmpl
sub
std
cmpsl
xchg
ret
sti
les
cmp
shlb
enter
fsubrs
add
jnp
push
jnp
sub
mov
sbb
push
fwait
adc
mov
in
mov
xchg
jne
in
add
leave
jae
sub
jnp
mov
jmp
cmp
sub
shl
pop
cmp
sbb
ret
pusha
pusha
push
mov
dec
sarl
push
andb
sub
out
push
jle
mov
movsl
push
inc
sub
xor
push
adc
nop
adc
dec
nop
stc
inc
push
xor
shll
arpl
xor
fucom
and
cmp
push
cmp
ds
mov
out
sub
out
pop
dec
lods
cmp
aam
rorb
mov
movsl
hlt
nop
sar
pop
lret
adc
jp
shlb
icebp
lds
and
out
jge
push
popf
outsl
inc
fsubrs
cmp
mov
lea
loopne
push
mov
mov
mov
mov
lret
clc
xchg
mov
arpl
and
addb
repnz
inc
cmp
cli
pushf
add
lods
xor
inc
aas
sub
pop
cwtl
shrl
mov
xchg
add
outsb
gs
jmp
pop
out
dec
div
xchg
dec
cmpsb
fistps
aas
shll
lea
mov
insb
inc
pusha
sub
in
hlt
and
adc
iret
outsb
push
es
je
sahf
ret
inc
mov
inc
sub
mov
inc
rcrl
loope
sub
push
adc
xor
pop
sbb
sti
scas
mov
out
xor
sti
inc
add
stos
out
mov
mov
into
test
xlat
inc
mov
insb
lock
loope
movsl
loopne
and
sti
jo
std
cmp
pushf
in
sbb
test
mov
testb
add
outsb
data16
shlb
jmp
setbe
shrl
mov
mov
jne
ret
hlt
fnstenv
ljmp
push
sahf
idivl
addr16
aam
mov
icebp
test
rcll
fnstenv
or
popa
xchg
shll
fimuls
jo
movsb
lcall
fimuls
lock
mov
add
inc
jb
push
and
addr16
jp
cmc
or
adc
cli
js
lcall
sti
jae
sbb
add
sbb
adc
or
insb
lahf
sbb
pop
out
out
call
and
push
ljmp
push
std
mov
sub
das
cmp
or
movsb
pop
shr
lret
push
dec
pop
cli
int3
push
faddl
push
cwtl
sbb
fwait
cmp
push
adc
mov
ja
and
jle
scas
fnstenv
sub
xchg
in
ljmp
aam
add
repz
les
pop
push
aad
aad
add
cs
jg
fsubl
xchg
rorb
mov
mov
insl
dec
loopne
ret
stc
cld
dec
fidivl
xor
in
mov
add
dec
cmp
mov
xchg
sahf
xor
sahf
js
mov
add
inc
in
push
add
cmp
jp
loope
pop
cltd
push
inc
into
cmp
adc
aad
outsb
or
popf
repnz
jae
adc
mov
mov
insl
pop
inc
push
mov
or
mov
cs
xchg
mov
mov
add
add
ja
inc
shlb
repnz
inc
aad
or
call
adc
mov
pop
rcrb
fisttpll
pop
inc
mov
and
pmuludq
mov
sub
sbb
rcrl
loop
bound
pop
cmpl
push
shrb
out
decb
push
out
loop
mov
cli
add
fsubs
mov
ret
imul
js
lret
mov
xchg
arpl
and
add
pop
sbb
pop
roll
insb
sbb
orl
les
dec
dec
and
sbb
mov
pop
icebp
enter
lods
sahf
jmp
sar
mov
push
lahf
push
les
imul
cmp
lea
subl
adc
jge
xor
adc
enter
lcallw
push
push
jns
sub
fidivs
sbb
ljmp
fisttps
pop
and
pop
mov
xor
add
xchg
out
sub
loop
xchg
add
adc
imul
mov
stc
cli
mov
add
xor
ftst
cmp
les
xchg
adc
add
pop
inc
adc
cmp
fsubrs
push
jl
cli
cs
inc
aas
xor
mov
cld
add
jle
outsb
dec
mov
pop
mov
jbe
pop
mov
subb
fsubrp
cltd
adc
jb
subl
sbb
push
iret
inc
dec
outsb
dec
out
das
in
std
aaa
cwtl
jmp
jo
das
lcall
push
pop
xchg
gs
or
mov
std
add
add
outsb
shrb
xor
xchg
xchg
xchg
ljmp
ret
mov
mov
lods
movsl
mov
sahf
loopne
rorl
inc
cmp
jne
adc
stc
in
push
popf
rcrb
shlb
int
jp
rorl
push
out
subl
mov
cmp
aad
push
test
in
mov
out
push
adc
push
sub
dec
add
leave
out
sub
push
xor
notb
cmpsl
sub
sub
outsl
mov
push
push
mov
aam
ljmp
aas
push
jg
je
nop
dec
xchg
das
jge
cmp
sti
push
sub
das
inc
and
dec
leave
jne
movsl
adc
into
dec
mov
sbb
mov
movsb
pop
sbb
jle
test
or
mov
sti
xchg
sub
jnp
inc
int3
mov
ficompl
out
sbb
cmp
cmpsb
pop
inc
pop
movsb
outsb
or
in
mov
ficomps
mov
sar
xor
ss
ljmp
stc
or
mov
dec
inc
or
jecxz
inc
sbb
fwait
pop
mov
fldenv
mov
fsts
int
pop
pop
std
or
and
outsb
push
push
data16
iret
xor
out
insb
aaa
or
add
cltd
pop
mov
fs
stc
ret
ja
jmp
mov
lret
push
jg
push
pop
popa
mov
mov
es
sub
sbb
add
add
es
or
inc
gs
dec
pop
xlat
std
outsl
je
insl
mov
imulb
mov
cmp
movb
add
dec
mov
les
mov
addr16
das
cltd
mov
dec
sub
xor
and
mov
js
mov
jmp
xchg
ficompl
popa
into
push
mov
fs
mov
es
or
cwtl
icebp
mov
in
or
pushf
ss
imul
icebp
in
mov
and
add
mov
mov
sahf
pop
imul
ljmp
rcrl
movsl
sbb
shrb
xor
out
lock
push
mov
jno
adc
xlat
push
mov
push
xor
adc
mov
inc
add
cmpsl
loopne
mov
and
xor
ret
test
cmp
xchg
std
flds
adcb
pmullw
inc
aas
adc
aam
mov
xchg
out
lret
cwtl
pop
sub
std
inc
int3
fildll
push
xor
mov
loop
mov
ret
mov
and
bound
scas
test
lahf
push
rcll
rcr
push
lds
or
mov
jae
jecxz
adc
push
and
push
add
cld
cmpsl
mov
insb
push
sub
or
jae
fcmovnbe
xchg
and
mov
and
or
or
push
jo
dec
andb
adc
sbb
push
mov
sub
mov
lods
in
mov
ret
into
jl
mov
pop
cli
jecxz
dec
adc
std
aas
rcll
rclb
outsb
xchg
inc
sub
in
leave
add
inc
dec
add
cmpb
mov
xlat
push
test
call
jns
cmp
shll
or
lods
movsl
add
mov
mov
das
mov
cmpsb
shll
push
cld
inc
int3
and
sbb
lret
pushf
sbb
ljmp
or
ja
jecxz
adc
jge
mov
call
jmp
sti
mov
sbb
insl
inc
aad
iret
iret
pop
cmp
cwtl
rolb
mov
xchg
mov
lcall
adc
or
push
bound
ja
push
ds
inc
ret
sahf
idivl
enter
clc
xchg
inc
fsubl
mov
js
xor
adc
aas
test
push
insb
subl
mov
or
mov
aas
mov
xchg
out
movsl
mov
push
sbb
dec
leave
rorl
aas
ja
and
call
cmp
jo
imul
sti
adc
xchg
or
mov
cmp
lock
or
push
out
or
in
pop
adc
in
fsub
cmpb
je
cwtl
es
loopne
pop
stos
mov
mov
push
js
fdivrl
jge
inc
icebp
fdivs
movsl
xchg
pop
lret
xchg
xchg
xchg
mov
int
addl
jp
bound
lods
lret
sbb
pop
rorl
cmpsl
mov
scas
rcll
shlb
dec
sub
mov
jecxz
pop
add
int3
adc
xchg
aam
pop
repz
and
mov
cmp
inc
mov
push
mov
call
imul
lods
pop
push
stos
cmpsl
cwtl
test
xor
popf
dec
xor
lahf
data16
pop
fisubs
sub
push
scas
roll
xor
test
adc
xchg
dec
sub
dec
xlat
pop
cli
addb
mov
dec
or
mov
adc
jo
mov
arpl
pusha
ja
jo
out
pop
daa
les
mov
mov
popl
loope
mov
jo
push
outsl
sub
ss
push
lea
std
bound
sbb
std
ja
sbb
mov
fcomp
mov
imul
sub
xor
jl
fsubrs
in
push
cld
insl
mov
mov
mov
jbe
inc
cmp
roll
test
sbb
adc
imul
ficoms
out
fstl
fsubr
jecxz
cmp
xchg
leave
test
lcall
mov
jl
js
cwtl
mov
mov
mov
dec
ss
sti
adc
or
mov
fldcw
cld
les
push
sbb
insl
pop
dec
push
jbe
mov
test
xchg
lret
hlt
lcall
adc
jg
fildll
cmp
int
pop
fcomps
xchg
jmp
leave
inc
std
addr16
sub
ret
jns
xchg
pop
push
xor
mov
js
fs
inc
sub
lea
fists
jne
sub
dec
push
fldl
add
clc
dec
pop
jmp
das
mov
cmp
push
add
or
pop
pop
lcall
aam
cmp
aam
dec
xor
pop
sbb
jmp
mov
and
inc
movsl
jecxz
cli
aam
ja
push
jp
lret
jmp
outsb
cltd
shll
push
daa
inc
in
ljmp
add
fnsave
dec
dec
mov
roll
dec
and
jns
mov
push
jno
push
pop
cmp
nop
insl
jae
dec
xlat
dec
out
outsl
loopne
sbb
lret
xchg
ds
lret
dec
mov
gs
ret
inc
and
mov
adc
pop
imulb
or
inc
fdivrp
inc
bswap
cmp
jg
dec
jae
loop
cmp
cs
nop
pop
stos
cmp
cmpsl
xor
mov
jns,pt
push
out
add
pop
sbb
psrld
jae
mov
push
imul
shll
cld
mov
dec
cli
or
jbe
mov
sub
inc
mov
jne
ret
mov
push
pop
ljmp
mov
icebp
xchg
lret
cli
out
cmp
sbb
sbb
xchg
xchg
aas
add
rcl
shll
mov
and
push
icebp
or
movsl
hlt
sbb
xorb
and
push
ret
test
adc
cmpsb
das
and
pop
lods
mov
addr16
push
push
pushf
sarb
xchg
dec
mov
jb
inc
mov
xchg
and
or
mov
ja
mov
xor
lods
dec
xor
and
xor
lret
xor
lea
sub
add
mov
and
test
lret
and
cmp
adc
sbb
mov
mov
fisubs
push
sbb
mov
outsl
xchg
inc
xor
mov
jg
mov
and
ja
and
call
out
push
sbb
xlat
pop
jecxz
iret
in
lret
cmp
sar
pop
sub
push
sbb
pop
mov
inc
push
mov
es
cmp
dec
jge
mov
mov
xchg
mov
xor
mov
add
xlat
sub
ja
movaps
lea
xor
inc
mov
fwait
push
icebp
test
pop
push
dec
inc
jecxz
push
jmp
jmp
dec
shll
sbb
or
mov
popa
pop
imul
cli
push
push
lock
mov
push
cmp
or
mov
adc
ror
jmp
dec
loope
adc
or
addr16
sbb
sub
pop
sub
cmpsb
ss
pop
fiadds
jp
ret
out
out
pushf
clc
and
enter
jbe
jo
push
dec
in
rorb
fdivl
lds
notl
hlt
lock
push
or
or
mov
xor
adc
push
push
and
xor
bound
pop
sub
test
aaa
str
xchg
inc
and
pusha
ret
cmc
sbb
xchg
outsb
jno
cmpsb
jge
int3
into
and
in
aam
cmp
sbb
in
mov
sub
call
sbb
or
in
int3
jge
xchg
sub
popf
jbe
ds
sbb
lcall
push
dec
scas
pop
mov
sub
fidivs
push
and
sbb
in
iret
cmp
mov
pop
iret
adc
pop
mov
fsubs
and
xor
mov
cli
ja
pop
mov
adc
lcall
cmp
or
add
ljmp
cmc
aas
pop
arpl
leave
and
das
rclb
and
fistps
jbe
ja
or
bound
jae
cmp
mov
fs
mov
sub
lods
mov
cmpsl
xor
and
clc
enter
push
adc
int
or
and
jns
imul
dec
mov
jo
loop
mov
int
adc
mov
jo
mov
dec
mov
fwait
je
adc
shl
js
lock
add
sarb
inc
sbb
loop
mov
aam
rcrl
mov
xchg
sti
aad
lods
mov
jg
nop
xchg
cmp
mov
jp
pcmpgtb
pop
pop
int3
dec
mov
jb
cli
jmp
iret
jno
xchg
inc
gs
dec
mov
mov
rcrl
sub
sub
ja
mov
add
call
shrl
adc
jl
dec
repz
sbb
iret
call
andl
rclb
addr16
scas
cli
or
adc
das
filds
dec
sub
mov
mov
scas
cwtl
lret
sbb
pushf
inc
call
insl
mov
xlat
incb
jo
adc
jmp
push
aad
leave
mov
loope
jg
enter
lea
movsb
out
mov
push
cmpl
mov
xorb
or
lahf
mov
jae
scas
dec
rorb
mov
out
mov
stc
push
xrelease
rorl
pop
inc
sbb
pop
mov
or
mov
fisubrs
push
test
mov
fcomi
mov
decb
xchg
leave
hlt
iret
xor
je
pop
adc
fldl
dec
dec
test
aam
jl
xor
sbb
mov
sbb
sbb
lahf
mov
in
xchg
fldt
push
and
aaa
js
inc
enter
add
sbb
sti
mov
mov
pop
inc
xchg
mov
push
or
mov
inc
xor
es
outsl
jbe
pop
push
add
mov
push
out
test
ss
inc
leave
push
xorl
insl
lock
pop
jbe
mov
mov
subl
aad
add
out
cmp
imulb
clc
cmp
push
push
lods
stc
fcmovnu
jmp
sub
jle
rcll
daa
orb
mov
cltd
cmp
mov
mov
clc
ja
fs
jecxz
xor
in
mov
jecxz
pop
stos
jg
aad
push
inc
jns
je
ds
insl
popa
lcall
int3
mov
out
arpl
push
pop
sbb
out
test
sub
sbb
add
lret
cld
and
loop
mov
repz
inc
sub
cmp
push
jbe
mov
hlt
mov
cmp
and
ficomps
xlat
mov
cmp
and
sbb
fiadds
cwtl
into
jae
movsb
aad
gs
add
das
fmuls
hlt
mov
dec
arpl
or
adc
fldl
sbb
cmp
jb
out
jbe
sub
or
dec
sbbl
ljmp
dec
mov
jmp
sub
cmp
mov
mov
leave
push
xchg
fsubr
cmp
or
in
sbb
pop
adc
and
pop
lcall
jno
mov
mov
mov
sub
sub
outsl
cmp
dec
fs
mov
movsb
out
xchg
in
cmp
dec
cmpsl
sub
push
dec
pushl
leave
add
sarl
xor
pop
ja
mov
cmp
push
int3
mov
xchg
mov
sarb
sub
mov
bound
nop
sbb
int
stc
inc
es
les
repz
sbb
mov
stc
xchg
clc
outsb
sbb
xchg
xchg
xchg
adc
in
inc
add
xchg
js
fistpll
test
repz
pop
add
pop
xor
adc
cmp
xchg
mov
rolb
pop
int3
adc
out
dec
mov
mov
mov
das
ret
in
xchg
cmp
vsqrtss
shrl
inc
das
pop
adc
fimuls
push
sti
fwait
mov
mov
ret
xor
and
loope
jo
out
ljmp
xchg
sub
cmp
stos
xchg
xchg
jl
add
push
pop
jae
mov
lods
enter
sti
out
sbb
pop
push
jecxz
or
nop
sbb
mov
popa
and
xchg
int
cld
call
jp
scas
call
out
xchg
imul
pop
xchg
pop
movsl
xchg
push
ja
loopne
inc
scas
fidivrl
cmp
addr16
xchg
sbb
ds
sahf
push
hlt
mov
add
adc
mov
dec
push
loopne
mov
loope
lea
xchg
push
subb
sub
testb
sub
jecxz
ss
in
sub
lcall
aaa
push
cmp
push
or
fwait
inc
jns
cld
xchg
loopne
xlat
pusha
dec
mov
pushf
mov
dec
mov
orl
popa
leave
sbb
fistpll
test
xor
push
add
cwtl
adc
cltd
aas
xchg
outsl
or
movsl
sub
sub
cmp
or
test
add
shll
push
lcall
push
cmp
leavew
xor
adc
test
sub
sbb
mov
or
cmp
decb
aam
repnz
jmp
mov
incl
inc
push
push
add
and
jnp
fdivl
jmp
jns
les
xchg
lods
insb
pop
sub
inc
rdtsc
and
inc
iret
int
xchg
jmp
jo
push
xor
and
iret
mov
adc
ds
inc
rcrl
lds
add
xlat
adc
sub
cli
inc
mov
sbb
mov
xchg
icebp
sbb
clc
test
xor
inc
aas
cwtl
shr
mov
test
cmp
and
dec
inc
pop
mov
adc
xor
lds
cmc
mov
out
dec
xor
addr16
pop
cmpsl
in
dec
push
xchg
mov
out
cmp
cmpsl
mov
fmul
mov
mov
push
pop
inc
in
fimuls
mov
mov
inc
mov
in
sbb
call
adc
inc
negb
inc
rol
lret
jl
lahf
and
sub
xor
and
shll
push
mov
add
push
mov
mov
test
hlt
mov
mov
movl
mov
mov
data16
lock
shrl
test
repz
gs
pop
adc
int3
mov
arpl
cmpsb
mov
xchg
sbb
add
lret
mov
dec
lahf
in
xchg
fdivrs
adc
stc
fwait
jge
xlat
or
jbe
cld
ljmp
dec
jae
jnp
or
jp
aad
mov
outsb
lods
mov
hlt
ja
jge
je
shl
pop
sahf
sub
inc
ret
dec
nop
push
sub
mov
clc
jb
xchg
jmp
add
mov
jmp
lea
jl
cmp
xor
mov
fcomps
mov
nop
and
scas
and
xorl
xor
dec
xor
jmp
cmp
ffree
dec
lds
xchg
hlt
fstps
out
xchg
and
xchg
int3
lds
or
inc
je
push
sti
and
ret
dec
xor
adc
or
inc
mov
es
add
sub
arpl
ds
mov
insl
cwtl
fcmovnb
rcrb
scas
xor
jle
jns
repnz
iret
repnz
xlat
out
sbb
push
cs
lea
inc
or
push
xor
mov
aam
jle
dec
fsubr
std
mov
in
xchg
jl
test
int3
mov
clc
hlt
ljmp
add
cwtl
xchg
mov
js
inc
sbb
jmp
repnz
int3
inc
cmp
xor
xchg
add
cwtl
mov
mov
subb
scas
cmp
sbb
xor
inc
lods
movsb
sbb
mov
mov
cs
mov
loopne
sbbb
sbb
add
lahf
test
mov
pop
push
sbb
pushf
mov
lret
lods
adc
subb
mov
lods
fnsave
inc
and
iret
clc
xchg
dec
loop
aas
and
testl
sub
sub
add
dec
insb
fidivl
cmpsl
dec
pop
dec
cltd
lods
mov
movsb
adc
fildll
inc
jns
mov
and
or
sbb
cmp
add
mov
pop
ljmp
out
pop
fwait
mov
adc
mov
stos
out
mov
or
jmp
ds
jecxz
mov
arpl
or
rcl
data16
out
xchg
jmp
xchg
xor
imul
pop
loopne
ljmp
pushf
mov
mov
xchg
notl
mov
adc
add
sbb
pop
imul
jne
sarb
enter
pop
nop
lret
jo
sti
jbe
mov
out
adc
popa
dec
cltd
pusha
cmp
sub
mov
push
in
push
cmp
mov
data16
insl
lods
add
das
mov
sub
cmp
xchg
cs
mov
mov
cli
sahf
or
mov
int3
das
xchg
mov
das
scas
lea
inc
mov
cmp
push
push
adc
sub
es
aad
and
js
cli
xchg
adc
das
xchg
imul
jbe
leave
xor
and
gs
imul
fwait
jnp
test
mov
sti
pop
les
movsb
lds
loop
dec
inc
movsl
dec
add
roll
mov
fisttpl
lods
adc
cmpsl
out
mov
lds
cmc
inc
xor
f2xm1
mov
xor
mov
cmp
lock
push
popa
pop
js
mov
dec
fisttps
dec
push
mov
lods
fmull
jno
jg
ja
push
jmp
sbb
sub
and
inc
out
cs
das
cwtl
icebp
shl
sbb
jo
mov
fldt
jb
sahf
mov
dec
inc
fstl
or
and
adc
xchg
insl
negb
cltd
cltd
jg
xchg
cmp
pushf
icebp
lods
mov
out
jge
dec
orb
or
sbb
inc
insl
sbb
cmpsl
pop
pop
jo
jo
cli
xchg
jne
les
call
mov
adcb
lcall
test
out
mov
xchg
xor
cmp
leave
mov
or
jno
shr
cmpsb
sbb
insb
imul
iret
mov
xchg
aaa
aam
add
dec
arpl
mov
out
lcall
shll
and
sub
xchg
enter
ljmp
dec
mov
addr16
pop
adc
test
or
cs
enter
push
dec
push
mov
mov
push
and
push
mov
roll
bound
xchg
cmp
xlat
gs
call
mull
fcom
ljmp
lods
adc
fprem
test
ret
adc
cmp
inc
and
stos
sub
mov
mov
or
fcomps
in
andl
cpuid
lods
or
inc
mov
fsts
gs
loop
fcmovnu
insl
lcall
inc
flds
mov
stos
and
mov
insl
fcomi
or
sbb
pop
cmp
and
and
xchg
push
cmp
call
cmp
add
inc
sbb
aaa
jnp
or
inc
pushf
inc
in
sub
rcll
lods
xor
xchg
out
push
test
stos
fisubs
rcl
loope
sti
cmc
cmp
fadds
call
stos
sbb
sahf
add
inc
or
out
ds
ljmp
movsb
shr
inc
ljmp
into
cli
iret
push
push
fwait
sub
ljmp
cmp
repnz
dec
lds
and
lods
clc
orl
jmp
dec
sub
std
jl
pushf
xchg
and
xchg
xchg
rorb
and
shll
push
ficompl
addr16
push
fs
sarb
nop
es
xchg
sbb
and
imul
cmp
pop
paddw
fwait
fwait
jg
std
inc
mov
aad
cmc
notl
push
push
icebp
aam
insl
mov
ljmp
mov
outsl
fisubs
outsl
fsubp
daa
or
mov
and
pop
frstor
aad
dec
roll
cmp
jle
cmp
xor
jo
out
lods
negl
nop
push
xchg
cmpb
push
fwait
adc
cmp
xor
es
pop
mov
iret
mov
inc
xchg
repnz
xchg
cmp
sbb
xchg
incb
cmp
adc
or
xchg
xchg
xchg
push
mov
cs
dec
push
cmpsl
pop
into
add
daa
jns
mov
pop
enter
and
aad
mov
rorb
jnp
dec
push
shrb
fistl
mov
fsubs
cmp
or
into
fistpl
imul
ss
mov
sbb
cmpsb
insl
dec
pop
in
push
jo
stos
scas
lods
mov
loop
mov
out
in
or
pop
mov
test
adc
xorb
and
outsb
jo
push
pop
mov
sbb
shrb
in
ss
arpl
jbe
cli
in
pop
add
lods
js
pop
dec
mov
lock
push
or
mov
mov
test
fwait
pop
mov
sahf
mov
xor
fcmovbe
icebp
jb
add
sahf
dec
aaa
jae
shll
and
cmp
mov
jl
insb
pop
cs
rcrb
rcl
bnd
arpl
imul
out
cmpsl
dec
jl
mov
iret
jmp
lods
decl
dec
movsb
out
or
sbb
repz
mov
xchg
fldenv
dec
inc
fisubl
cmc
loopne
outsl
cld
outsb
nop
add
cmp
add
movsb
cvtps2pd
out
xor
loop
cmp
dec
pop
fnstcw
push
es
pop
inc
stos
cmp
stos
aam
lret
dec
jae
or
pop
in
insb
push
add
icebp
cmp
into
unpcklps
lods
xchg
call
mov
jmp
pop
push
mov
insl
aad
sbb
mov
xchg
out
out
xor
mov
cmp
popf
mov
xchg
rorb
fstpl
sub
addr16
into
and
mov
rclb
stos
sbb
out
jne
pop
mov
into
pop
pop
adc
mov
mov
ja
adc
adc
cmp
add
js
dec
xacquire
ds
xchg
mov
call
aad
push
adcb
add
sbb
fsubl
adc
and
js
mov
jb
and
mov
push
xchg
xor
inc
hlt
ljmp
enter
or
es
jb
in
test
and
lcall
leave
jmp
mov
in
sahf
cmpsl
xor
test
mov
scas
dec
jg
rcll
mov
test
mov
call
testl
repnz
into
sub
jg
pushf
ds
jne
popa
pop
scas
xor
loopne
fidivl
pop
and
scas
mov
in
or
jno
add
icebp
out
pop
push
sbb
fadds
jns
xchg
xor
xchg
pop
mov
fsubs
decb
push
xchg
jbe
mov
xchg
pusha
dec
dec
test
push
movsl
addb
add
test
inc
push
out
pop
lcall
xchg
lret
xchg
adc
arpl
leave
jmp
test
fwait
jb
cmp
and
or
rcll
and
jle
jle
enter
pusha
push
xor
aad
test
jecxz
repz
daa
jp
mov
mov
mov
and
mov
or
cmp
mov
popf
pop
cmp
inc
aad
lds
mov
adc
xor
or
fadd
jae
lock
pop
xlat
pop
jle
sbbl
aad
inc
loope
je
xchg
fadd
pop
pop
imul
lds
inc
inc
adc
out
xor
sub
add
incl
pop
cwtl
xor
cwtl
outsl
dec
rcrl
fsubl
mov
dec
movsb
pop
pop
cmp
ja
xor
inc
sarb
push
sub
mov
fsubs
sti
and
in
cwtl
and
xchg
cltd
adcl
dec
mov
into
sahf
sub
icebp
pusha
push
cmp
scas
mov
jns
lods
mov
sub
push
cli
lret
call
mov
cld
pop
or
xor
mov
dec
scas
fmuls
push
mov
out
inc
int
cmp
movl
cltd
xlat
rorb
sub
sub
cltd
dec
mov
rolb
pop
or
scas
jmp
das
push
incl
idivb
andb
fs
sub
inc
sbb
and
stos
lret
or
nop
shlb
daa
cmpsb
mov
sbb
scas
jmp
cli
fwait
fwait
js
daa
in
leave
dec
and
lock
clc
mov
ret
mov
xor
mov
dec
sub
rcrl
movzbl
insb
in
push
in
push
jne
aaa
lret
fiadds
repnz
aaa
add
jnp
daa
lea
xor
sub
jmp
out
sbb
cmp
fwait
and
loop
mov
mov
push
push
cmp
outsl
icebp
pop
jp
movsl
pushf
pop
sbb
jg
mov
sub
push
mov
imul
faddl
jae
ljmp
xchg
sti
mov
mov
ss
fdivs
sub
xor
outsl
repnz
mov
stc
or
xlat
push
xor
sbb
cs
ss
ret
push
push
orb
cmp
cmp
lea
fsts
movsb
jnp
mov
xor
mov
pop
cmp
loopne
in
addr16
sti
sbb
push
sbb
mov
dec
movaps
loop
and
cmp
mov
cwtl
mov
mov
fisttpl
add
push
inc
xor
sbb
stos
stc
pop
adc
addr16
mov
ja
xchg
sub
in
ss
stos
dec
mov
orl
mov
cld
lcall
mov
icebp
pop
out
daa
das
aaa
std
push
dec
mov
pop
in
mov
lock
cmpl
xchg
in
stc
dec
mov
jg
cmpsl
jp
mov
insl
lret
sub
adc
push
int
mov
jae
pop
imul
mov
xor
out
lahf
sahf
mov
in
call
or
ret
or
jns
mov
sbb
lahf
mov
inc
add
ficomps
pop
je
shlb
setne
mov
jecxz
push
xchg
cmpb
adc
add
add
jnp
mov
xchg
xchg
and
sub
mov
mov
jb
cmp
pop
stc
jmp
lea
ss
andl
sbb
mov
arpl
clc
fbstp
cmpl
inc
arpl
mov
xchg
lcall
lods
mov
mov
sbb
stos
aaa
or
fadds
adc
test
icebp
mov
mov
add
mov
ljmp
lahf
jo
push
js
and
sub
out
rcll
or
sub
sarl
pop
mov
adc
pushf
in
jge
sbb
mov
jno
pop
inc
push
das
rclb
lret
popf
gs
sub
jae
or
lret
dec
sbb
mov
dec
jmp
mov
inc
das
sbb
or
pop
xor
in
mov
or
data16
xchg
jno
rol
xchg
mov
add
mov
fwait
mov
jp
xchg
or
xor
test
adc
inc
xor
cltd
pop
or
lods
sbb
daa
sbb
xor
fistpll
arpl
jbe
popf
lds
add
sbb
cmc
lcall
rcl
xlat
fiaddl
cmp
and
mov
pop
sub
aaa
or
fs
test
addl
jne
popl
sub
adc
cld
and
xor
sahf
scas
stos
adc
pop
lock
jl
mov
fs
jle
bound
je
xor
mov
inc
in
ss
lcall
adc
dec
mov
or
daa
fwait
insb
nop
roll
aad
scas
cwtl
mov
mov
movsl
mov
lcall
outsb
push
xchg
mov
psubq
xchg
sahf
cmp
fwait
jge
andl
and
clc
jle
add
xchg
test
add
outsb
out
xchg
jo
out
and
cwtl
adc
jae
push
xchg
int
jb
sbb
xchg
fdivp
add
inc
xchg
adc
push
in
sbb
push
xor
sbb
popl
inc
aas
mov
repz
cltd
loopne
mov
clc
dec
fisubl
in
cmp
push
xor
popa
fnsave
sub
mov
ret
mov
jecxz
push
inc
jmp
add
scas
ss
sbb
inc
stos
test
mov
mov
inc
xchg
xchg
and
jecxz
dec
and
icebp
in
test
push
inc
xchg
stos
lcall
fmul
subb
fldcw
aas
add
jle
std
data16
out
pushf
and
pop
rorl
lret
mov
cmp
adc
pop
sub
mov
ja
ja
sub
subb
cmp
or
in
jno
adc
ss
sbb
or
inc
xlat
mov
test
je
jno
aaa
sbb
sub
add
lret
iret
add
fs
sub
mov
sub
mov
cmc
mov
imul
shll
imul
mov
int
mov
adc
mov
mov
loop
pop
and
hlt
pop
filds
mov
sub
adc
pop
sub
or
push
in
notl
imull
sub
inc
xchg
dec
dec
sub
hlt
jno
pop
pmaddwd
cld
pop
data16
arpl
mov
fidivrl
test
cmpsb
sbb
pop
push
jl
mov
dec
imul
sahf
or
add
andb
and
xor
mov
cwtl
js
popf
pop
push
mov
and
daa
repz
dec
rcl
test
jle
mov
pop
aam
or
daa
pop
repz
and
sub
nop
or
xor
in
loop
sar
sub
jmp
jo
or
lret
inc
inc
outsb
sbb
adc
js
pop
sarb
in
inc
aad
adc
out
ljmp
es
push
or
mov
mov
xlat
out
xor
mov
out
xor
dec
test
jb
enter
cmp
inc
dec
xor
adc
inc
aas
nop
cmpsl
dec
lock
cmp
push
addr16
in
sti
xchg
out
in
xor
int3
aas
xor
mov
sti
les
jnp
icebp
int3
test
movsb
fiadds
lret
push
ret
clc
jae
jmp
jg
pop
daa
inc
test
pop
ja
adc
lea
cmp
adc
add
jnp
sbb
sti
les
jae
mov
leave
jne
pop
and
jb
fcompl
je
addl
shrl
push
lds
arpl
dec
push
out
int
and
data16
aas
insb
stos
inc
or
out
fwait
out
hlt
inc
in
lds
inc
push
cmp
add
jle
mov
adc
bound
push
rcl
or
sbb
into
adc
xchg
insl
mov
pop
les
adc
rcl
adc
jno
fstpl
xor
cwtl
cmpsl
daa
daa
jge
add
icebp
cs
test
jb
stc
jecxz
daa
sbb
testl
fistpll
aas
pop
mov
jne
cmc
aaa
jae
clc
jle
insl
jo
xchg
bound
and
outsb
sbb
fstl
roll
lock
gs
cmp
sbbb
icebp
ds
mov
lods
push
insb
sti
les
aad
jmp
inc
pop
sub
lret
adc
push
fldenv
sub
xlat
subps
mov
scas
imul
repnz
lahf
stos
mov
testl
arpl
in
ret
mov
insl
outsb
testl
ss
iret
clc
xor
rolb
push
iret
icebp
inc
aad
push
cmpb
mov
sbb
mov
sbb
mov
dec
mulb
fs
pushf
jno
fucomi
in
in
repnz
aad
jno
jnp
pop
xorl
push
jne
in
arpl
cmp
dec
and
call
aas
sbb
cmp
push
inc
cmp
xor
add
dec
or
inc
popa
pop
jbe
and
dec
inc
fisubs
jb,pn
leave
mov
mov
pop
ss
insl
sbb
pop
shlb
lahf
fnstsw
sti
and
mov
lret
dec
mov
loop
adc
testl
nop
add
sub
inc
mov
lods
iret
push
xchg
sbb
outsl
jbe
sub
fmull
cmpsl
aaa
lret
push
cmp
pop
rcrb
pop
in
std
inc
mov
sbb
xchg
ljmp
xchg
inc
scas
inc
stc
inc
xor
fidivl
push
or
and
aaa
jnp
push
or
cmp
into
push
aas
jge
cmp
cwtl
inc
jmp
jae
or
adc
pushf
nop
aad
jo
jo
mov
xchg
xor
stos
lret
rcr
and
mov
xchg
dec
pop
jns
or
pop
mov
cltd
arpl
adc
popf
jne
jno
adc
je
xchg
in
jnp
add
jb
mov
pop
jg
lea
mov
and
shll
push
repz
mov
lret
je
dec
pop
mov
push
fwait
out
or
pop
mov
and
dec
popf
xor
xor
js
aad
jp
popa
dec
mov
insb
cmp
sub
add
xchg
sub
inc
bound
jnp
cltd
cld
mov
inc
in
insb
jae
ljmp
inc
nopl
jecxz
rcrl
jecxz
inc
mov
fldl
int
or
mov
push
addr16
mov
sub
push
cwtl
push
fadd
dec
movsl
int
mov
data16
sar
cmp
insb
cmp
cmp
test
movsb
icebp
out
rcrb
int3
add
push
sub
push
fcmove
addr16
sub
leave
pop
pop
mov
pop
loop
repz
sub
adc
test
cmc
mov
test
aas
pop
adc
mov
jo
jno
lds
mov
in
inc
jge
xor
sub
xchg
stc
stos
loopne
and
pop
loope
lret
and
and
test
sbb
sbb
cmpb
mov
stos
shll
xor
push
jecxz
dec
out
adc
notl
mov
movsl
and
rolb
push
push
int
dec
fcompl
xbegin
ret
iret
pop
nop
sub
inc
test
imul
out
int3
push
sahf
pop
je
inc
mov
mov
imul
bound
push
iret
add
or
jle
shll
test
cli
loopne
cmp
test
inc
or
cmp
dec
push
popl
pushl
in
imul
stos
lea
jno
pop
cli
jbe
inc
mov
cmp
in
mov
iret
pop
pop
out
jno
sbb
in
adc
stos
outsb
dec
jle
dec
add
xchg
cmp
outsl
gs
jne
lea
sub
es
push
cmpl
push
or
add
out
mov
dec
pop
adc
mov
xchg
xchg
pop
sti
fwait
sub
xor
adc
xor
mov
jnp
leave
sarl
xchg
add
inc
sub
pop
ljmp
ficoms
mov
les
mov
mov
sub
push
pop
dec
nop
lcall
cltd
ds
fidivl
xor
dec
test
push
and
mov
js
enter
xchg
pop
jmp
loopne
daa
scas
movsl
mov
sti
sahf
in
xchg
push
cmp
test
cli
and
sub
mov
mov
fcomps
es
sbb
pusha
fcoml
aad
loop
loop
adcl
stos
incb
mov
lds
mov
and
ret
call
inc
cmc
and
test
jmp
in
sbb
in
cli
clc
enter
daa
fisubrs
cmpsb
pop
loopne
pop
movsb
icebp
and
fbld
aaa
sti
or
cmc
jno
or
mov
scas
dec
aaa
insb
inc
iret
popa
and
push
push
cmc
sbb
cmp
mov
and
adc
xor
int3
int
cmp
cmp
addb
stos
adc
push
inc
mov
add
cmp
mov
pop
or
dec
add
sub
jnp
into
fwait
jl
test
dec
test
cwtl
push
les
movsb
adc
pop
jbe
lock
mov
push
xor
mov
div
jno
and
ret
add
pop
repz
inc
aas
mov
fldl
push
dec
insb
cwtl
dec
sub
aam
push
xchg
add
popf
push
out
or
gs
addb
cmp
and
fmul
jp
and
ja
push
popf
add
rclb
xchg
push
andb
outsb
mov
adc
je
pop
pusha
mov
xchg
mov
cs
daa
mov
aas
into
icebp
fldt
push
add
xchg
xchg
sbb
cmpsb
das
and
hlt
push
sti
mov
ret
lret
push
sbb
aam
loop
cltd
test
mov
outsb
in
in
in
fimuls
adc
push
insb
mov
cmp
and
lahf
mov
mov
mov
call
and
push
scas
loop
or
or
add
test
sbb
and
dec
pushf
aad
and
or
rcrb
popa
inc
mov
movsl
pop
mov
sahf
sbb
call
out
nop
or
cmp
pop
je
and
shrl
mov
dec
jne
cmp
pushf
fisubrs
push
ljmp
xchg
lods
add
lock
loope
aam
adc
xchg
leave
or
jbe
dec
mov
and
or
mov
aas
adc
lods
mov
mov
dec
inc
sub
mov
pandn
ret
pop
add
sub
pop
scas
insl
imul
jo
pusha
xor
inc
repnz
dec
adc
jge
fcomps
hlt
std
cwtl
pop
sbb
stos
pop
icebp
mov
cmp
imul
test
jge
mov
in
cli
or
sbb
enter
loopne
sub
adc
movsl
dec
jbe
adc
fs
pusha
in
or
pop
push
pop
ja
int3
int3
shrb
adc
rorb
stos
stos
cmp
pop
push
and
xchg
xchg
in
push
add
xchg
stc
jge
push
jge
adc
imul
pop
sbb
mov
lods
ss
adc
sub
push
rorl
add
outsl
cli
imul
icebp
inc
fwait
mov
andb
sub
push
jecxz
mov
test
int
iret
adc
leave
aam
or
mov
aam
jo
dec
stos
enter
ss
or
and
aas
cmp
test
insb
inc
inc
jb
pop
sbb
xor
fdivs
cs
mov
out
cmp
pop
inc
push
adc
in
mov
inc
or
xor
std
add
add
cmp
mov
xchg
gs
xlat
mov
stos
xor
adc
mov
jmp
push
cli
lods
clc
les
pop
negb
jmp
popa
mov
idiv
cltd
cmp
cmpsl
xor
je
adc
pop
cltd
iret
push
push
mov
push
cltd
into
lods
negb
cmp
loopne
jae
sbb
jnp
xor
and
sbb
iret
lds
push
sbb
inc
lcall
ret
push
test
jo
stos
aaa
in
hlt
imul
and
xchg
xor
jbe
imul
adc
loopne
stos
bound
adc
jmp
push
dec
cli
fdivs
dec
and
negl
lret
repz
ja
test
in
les
sub
outsl
add
imul
xchg
lods
sbb
inc
dec
xor
mov
testb
xchg
mov
les
inc
adcb
stc
ret
mov
sbb
or
mov
mov
dec
arpl
popa
aaa
std
lods
loop
add
cli
outsb
mov
dec
and
inc
incl
and
mul
fstpt
imul
pop
jne
xor
dec
xor
sbb
je
aam
dec
in
imul
and
sbb
lds
inc
out
push
mov
jp
sahf
in
jnp
popf
cwtl
les
rol
jo
outsl
inc
rclb
rolb
not
imul
jae
into
mov
fcomp
je
mov
adc
mov
out
mov
movsl
push
insl
test
cmc
inc
and
pop
push
rcl
cmp
bound
insl
ret
into
pop
or
aad
mov
pop
fistl
mov
in
stos
shrb
ljmp
lock
inc
inc
add
out
or
pop
push
aad
pushf
popa
pop
imul
jne
loop
scas
loope
pandn
test
inc
les
int
mov
mov
lcall
xchg
ds
adcb
pushf
ljmp
cmc
fists
ljmp
jb
sti
dec
stos
dec
or
mov
fisubrs
mov
lret
or
or
push
hlt
lret
sbb
adcl
xchg
cmp
and
inc
cmpsb
mov
or
xor
push
or
insl
ljmp
cmp
data16
ljmp
xchg
ret
or
jno
xchg
sbb
or
mov
xor
stc
sub
pop
mov
cmp
pop
and
nop
repnz
mov
push
pushf
hlt
shll
push
int3
pop
xchg
push
outsb
mov
hlt
popa
jmp
adc
and
lcall
not
arpl
push
xchg
imul
jl
fs
roll
movsl
push
int
inc
sub
fwait
mov
aas
cld
pop
stos
insl
jae
dec
lret
inc
cmp
enter
push
cli
scas
xchg
dec
into
outsl
lret
je
dec
mov
jne
pop
jg
idivb
mov
jge
les
jecxz
xchg
stc
jno
lock
cli
dec
lock
push
or
in
dec
dec
dec
or
dec
nop
outsl
mov
mov
icebp
ss
rcrl
mov
std
and
sub
push
ljmp
lahf
aad
lcall
push
imul
xchg
pushf
inc
lret
sub
or
mov
insb
ret
cmp
or
pushl
sti
cmc
dec
add
lret
fwait
je
fcomp
std
cli
push
cmp
nop
mov
vpsrlw
jo
shlb
shrb
int3
pop
pop
jno
insb
xchg
insb
adc
mov
lret
test
mov
sbb
pop
mov
mov
inc
rorl
inc
push
enter
ret
loop
in
out
or
push
andl
addb
cmpsb
fwait
das
div
nop
or
adc
push
bound
mov
xchg
shlb
inc
and
fadd
add
dec
sub
je
cmp
or
fdivs
xchg
icebp
loopne
int
fs
fcmove
aas
mul
adcb
adc
push
push
insb
fwait
repnz
sbb
mov
xchg
sarb
fmull
cmp
cmp
xchg
pop
lret
mov
ljmp
mov
or
xor
fstpl
jl
sbb
mov
enter
inc
rorl
xor
imul
cmp
and
in
dec
or
cmp
sub
xor
icebp
push
clc
aad
stc
out
lahf
cmpsl
in
jg
cmpsl
je
fnstsw
mov
mov
sbb
test
pop
stc
xor
shll
test
inc
xor
negb
adc
cltd
rcrl
jbe
mov
lret
mov
mov
sub
aam
mov
xchg
jle
cmp
pop
or
lahf
ret
mov
jb
push
popf
sti
lods
dec
pop
mov
push
aam
lock
mov
pop
mov
mov
and
adc
xchg
dec
mov
or
xchg
outsb
stos
dec
push
inc
cmp
mov
dec
sub
fwait
sar
jae
fwait
imul
adc
pop
and
das
mov
jae
jmp
scas
imul
inc
cmp
push
and
fldt
shlb
sarl
sub
fmul
pop
movsl
in
aad
or
lret
sbb
and
push
mov
xchg
out
test
and
aas
jge
cwtl
mov
pop
pop
sarl
add
jmp
stos
nop
mov
pop
inc
add
xor
fmulp
pusha
test
mov
sahf
push
mov
adc
mov
fcoml
mov
push
mov
ret
fnsave
leave
lds
push
mov
insb
or
inc
clc
dec
push
stos
xchg
adc
sbbl
jmp
testb
add
dec
iret
or
xchg
sub
adc
pop
and
flds
dec
sbb
aam
xchg
mov
dec
sahf
push
aam
or
sub
adcb
dec
mov
int
lea
or
dec
imul
xor
xlat
in
push
test
sbb
sub
movsl
mov
insb
xchg
or
or
pushf
shll
mov
mov
xor
fistl
cwtl
subl
mov
xor
enter
dec
pop
je
pushf
push
xchg
enter
rcl
gs
or
lret
aas
movsb
xor
adc
mov
ret
xor
add
mov
jle
mov
inc
in
mov
mov
dec
pop
push
lahf
repz
rorl
pop
test
mov
inc
jmp
xchg
jb
mov
fildl
inc
xchg
jge
jmp
or
lahf
loopne
arpl
out
in
fcom
pop
imul
loop
movsl
jmp
aas
adcl
jge
xlat
mov
xor
pop
jne
mov
or
xor
fnsave
xchg
imull
sub
lret
push
stc
outsb
inc
outsb
push
jmp
mov
int3
nop
leave
int3
cmp
fyl2x
scas
jbe
in
jo
jmp
jl
idiv
mov
negl
in
divb
imul
test
stc
test
mov
cltd
mov
add
inc
imul
mov
lods
pop
pop
dec
jmp
dec
fildll
sahf
icebp
jmp
cltd
fcom
insl
xchg
loop
roll
data16
test
cli
dec
add
outsb
jae
jne
cmp
push
sbb
popf
cmp
mov
out
fadd
xlat
xchg
push
add
fcoms
xor
xchg
setae
es
mov
fs
pushf
mov
dec
jb
xor
and
or
add
inc
jns
jno
fwait
xchg
mov
dec
xchg
mov
dec
shlb
and
mov
loopne
add
adc
idivb
xor
stos
shlb
aaa
or
data16
aam
clc
test
in
xchg
and
jo
out
int
sub
and
test
ja
jo
out
fsubl
bound
das
into
mov
jbe
add
pop
adc
je
jno
stos
inc
lahf
insl
jo
or
mov
and
lods
loop
ret
int
cmpsl
sub
gs
arpl
xor
xchg
icebp
fwait
xlat
loopne
adc
xchg
jae
inc
adc
pop
cs
daa
stos
shrb
sbb
shlb
dec
mov
repnz
fnstsw
clc
mov
xchg
clc
inc
push
test
clc
dec
aad
aam
and
mov
mov
loop
jo
rcrb
imul
jl
inc
inc
lds
mov
sbb
divl
js
mov
xchg
popf
aam
fimuls
jp,pt
sub
inc
or
arpl
movsb
mov
adc
in
push
mov
adc
jb
add
shrl
loop
inc
dec
insb
or
lahf
xor
adc
push
ret
notl
adc
rclb
xchg
int
cld
fs
stos
test
dec
ret
and
fisttpl
scas
mov
inc
jmp
sub
pop
ljmp
mov
xlat
shll
jg
jp
pop
insl
xchg
int3
rclb
xchg
dec
xchg
or
or
rclb
mov
or
sub
mov
fidivl
clc
mov
cmp
or
mov
ret
jmp
inc
sub
insb
hlt
out
inc
test
cmp
xor
cmpsl
dec
int
daa
test
das
cmp
mov
lods
mov
test
xor
cmpsb
mov
into
call
lods
pop
push
pop
nop
out
repnz
pop
jbe
insb
jle
mov
add
mov
addr16
test
sbbl
mov
shr
pop
jb
test
movsb
pop
enter
cmc
mov
inc
cmp
imul
or
les
or
lcall
pusha
fs
add
mov
xchg
cli
mov
xorl
xor
pushf
cmp
cwtl
ss
xchg
sub
cmpsb
pop
out
addr16
cmp
das
adc
pop
xor
std
pop
lahf
sub
clc
daa
xchg
mov
cmp
jl
hlt
les
or
mov
dec
or
test
xchg
and
insb
fdivs
bound
aad
sub
or
pop
cmp
pop
mov
fisubrs
dec
and
sbb
lahf
lds
lods
daa
imul
mov
dec
rclb
xor
xlat
sbb
add
fistpll
dec
pop
push
pop
mov
pop
adc
xchg
pop
or
jl
cmpsb
fisubl
xchg
xchg
pop
push
imul
mov
adc
andl
ljmp
and
inc
push
xor
cmpsb
outsl
jnp
adc
sbb
leave
push
mov
shlb
mov
aad
push
cli
jno
stos
sbb
rdmsr
mov
frstor
fwait
xor
inc
add
pushf
lods
es
stos
mov
pop
pop
add
cmp
and
jle
push
fcoms
decb
clc
mov
mov
outsl
in
imul
rorl
and
sbb
jecxz
fwait
cmp
jo
lret
xchg
fisubrs
dec
sub
outsb
add
roll
adc
popf
sbb
lret
push
fbld
fucomi
js
ret
inc
popf
xchg
das
inc
into
mov
iret
push
fidivl
push
and
dec
cmc
lret
jo
jb
mov
xlat
ljmp
add
mov
cmpsl
das
cmp
sti
jge
out
xor
mov
mov
sbb
in
repz
or
aam
popf
popa
mov
xor
repnz
add
sbb
inc
inc
and
je
pop
aad
fidivl
or
lock
sbb
fistpll
lods
sub
in
insb
jl
mov
outsl
sbb
xor
inc
cmp
adc
xchg
aam
in
shr
in
in
add
mov
cli
rorb
push
mov
push
mov
xor
fcompl
cmp
notb
jecxz
mov
stos
sub
enter
inc
jnp
andl
lret
mov
pop
sub
jns
popa
dec
mov
add
cmp
xor
out
fcomps
sub
and
jns
clc
out
cmp
mov
jbe
push
jnp
cmpsl
cwtl
fs
mov
pop
mov
cmp
jle
xor
inc
mov
leave
lahf
out
adc
pop
int
cmpsl
xorl
mov
lret
inc
lcall
lahf
adc
pop
adc
push
mov
or
inc
inc
cltd
sbbb
add
setae
pop
add
subl
insl
icebp
fwait
sbb
push
inc
or
add
and
mov
int3
mov
xchg
inc
fistl
jb
repz
test
mov
lods
fcomps
jle
adc
aam
sub
inc
popa
arpl
maxps
fldl
cmpsb
in
xchg
jp
mov
xor
imul
fwait
adc
fidivrs
cmp
out
mov
sub
push
xor
mov
fsubr
add
cld
xor
ret
pop
sub
inc
addr16
or
in
jge
and
dec
popf
and
mov
or
adc
fidivrs
stos
jno
in
mov
sub
lret
pop
xchg
and
or
cmp
lods
dec
stos
test
mov
lret
outsb
dec
loopne,pt
or
cmpsb
jle
lods
jecxz
push
fs
loop
sbb
mov
jb
jl
xor
lahf
push
jno
out
push
imul
or
ret
les
pop
xchg
sub
lods
or
scas
xchg
jno
aaa
pop
in
ss
aas
mov
lahf
cmp
je
push
adc
inc
adc
mov
cmpsl
push
clc
test
xor
dec
in
xlat
cld
lahf
sub
sub
sbb
bound
divl
int
jo
das
inc
mov
stos
xchg
jo
xor
mov
cwtl
vpxor
mov
add
dec
icebp
out
cmp
or
and
or
push
and
ret
mov
lods
sarb
movb
lods
adc
push
dec
int3
mov
pop
or
notb
call
icebp
push
mov
das
out
mov
mov
call
sub
fucomp
stos
call
ljmp
mov
lret
andl
aam
and
hlt
and
clc
adc
cmpsb
aad
mov
sbb
sub
pop
lret
and
sarl
mov
mov
or
cmp
ss
popf
addl
mov
popf
sub
fdiv
out
jno
pop
mov
cmp
iret
dec
sub
dec
jb
popa
mulb
mov
test
sub
lret
pop
lcall
test
cs
pop
fsts
cmp
daa
movsb
pop
leave
jle
dec
push
and
mov
pop
fists
mov
aad
loop
push
cmpb
jno
or
xlat
das
and
daa
mov
inc
lea
inc
sbb
lods
xorl
xlat
bsr
into
jbe
into
pop
mov
clc
pushf
nop
fs
cmp
dec
insb
and
andb
sarl
decl
xor
or
cltd
cmpsb
cwtl
cmp
js
lcall
imul
ret
jge
rcrb
test
sbb
cmp
addr16
xchg
sub
addr16
arpl
fsubl
add
adc
xchg
jmp
push
testl
fnstsw
add
add
pop
lods
sahf
fdivrp
mov
inc
or
add
gs
dec
es
hlt
cmp
in
imul
leave
mov
lret
daa
pop
enter
mov
sub
cs
and
movsl
or
insb
daa
jecxz
je
and
inc
add
xchg
insb
push
imul
xor
jnp
cwtl
xchg
stos
data16
fwait
or
sahf
sub
fidivl
movsl
jge
xchg
jmp
mov
shlb
in
pushl
imul
pop
sub
pop
aam
in
repnz
push
in
cmpsl
pop
mov
dec
add
xchg
and
out
movl
in
lea
aam
mov
push
test
or
das
mov
pushf
shr
and
movl
sbb
movsl
jecxz
cwtl
push
imul
jae
loopne
fcompl
je
lock
add
cmp
ret
adc
and
mov
and
sbb
or
cmp
std
ficompl
fdivrl
ret
pop
jne
rcll
repz
pop
pop
push
push
cmp
aaa
js
icebp
or
adc
cmp
into
pop
loop
jl
jnp
inc
xchg
adc
or
fwait
into
scas
fcoml
gs
stc
clc
roll
je
jge
push
std
mov
outsb
in
inc
cltd
jp
jmp
fisubs
mov
iret
xchg
adc
movsl
xlat
inc
mov
test
push
cmp
notl
fsts
and
xor
push
fistps
and
and
mov
or
adc
adcb
or
movl
add
adc
fbld
je
fistpl
shl
andb
shll
push
xor
mov
pop
cmc
xchg
insb
arpl
imul
mov
cmpsb
in
popa
insb
pop
out
mov
pusha
pop
mov
adcb
and
add
fbld
int
decb
and
jae
cmp
xchg
aas
mov
stos
sub
mov
sub
lods
or
and
add
xchg
test
sbbb
pop
mov
adc
push
out
idivb
sti
sub
loopw
cmpsb
mov
xchg
mov
sub
call
faddp
out
mov
and
xchg
ret
sub
jno
mov
outsb
nop
sahf
sub
jae
inc
rolb
add
or
inc
icebp
test
mov
popl
pop
sti
xor
ja
and
mov
jae
stos
sub
in
inc
fiadds
xchg
inc
stos
cmp
popa
pop
stos
rcll
mov
loopne
sti
repz
fsubs
pop
icebp
xcrypt-ecb
cmpsl
mov
sbb
fnstenv
cmp
idivb
inc
add
loope
clc
or
xor
into
mov
les
adc
xor
xchg
push
pop
cmpsl
jno
popa
mov
and
clc
xchg
div
cli
into
jno
ljmp
neg
add
sbb
out
mov
out
scas
sbb
jnp
and
or
sub
gs
inc
fs
xor
outsl
sahf
dec
mov
mov
mov
out
jg
push
mov
fnstsw
shl
pop
daa
add
and
mov
sub
pop
imul
mov
xchg
add
push
out
or
fs
mov
inc
ljmp
inc
jne
adc
incl
xchg
daa
lock
test
fistpl
and
stos
incl
rorl
into
jmp
sbb
aad
xchg
int
andb
dec
imul
cmpsl
cmpsb
arpl
mov
scas
xor
cmp
aad
sbb
dec
xchg
xor
hlt
and
mov
xlat
or
mov
fcmovnbe
push
jmp
xlat
imul
jae
add
scas
lahf
sbb
insb
mov
in
push
jne
sti
stos
lea
adc
lods
ret
mov
mov
xchg
lret
addr16
frstor
pop
mov
inc
adc
cli
lods
add
and
test
js
xor
test
push
mov
sbb
daa
lahf
lea
fldcw
xor
out
mov
pop
in
xchg
xlat
sbb
xlat
call
orl
dec
bound
fcoml
xor
leave
jge
push
outsb
pop
or
popf
and
or
shrl
jle
cwtl
cmp
or
xlat
mov
pop
loope
push
add
in
mov
movsl
push
cld
cmpsb
lahf
xbegin
pushf
imul
pop
inc
int
fnstcw
jo
adc
mov
inc
push
sub
clc
subb
stos
xchg
test
push
mov
stos
mov
mov
mov
or
or
repnz
xorl
enter
incb
test
xlat
or
mov
mov
pop
ljmp
rorl
sub
mov
rolb
push
stos
out
mov
test
inc
push
push
mov
out
sbb
fldt
jne
adcl
mov
lds
loope
fsubl
neg
push
xchg
and
pusha
into
mov
ret
adc
push
dec
lea
popf
pop
imul
mov
pop
cmp
or
popf
cmp
push
imul
mov
aaa
fldcw
movsb
arpl
bound
lret
rcll
jl
sti
in
pop
aaa
adc
inc
lods
enter
rolb
dec
scas
xchg
js
orb
or
jmp
mov
cmp
pop
insl
fsubp
stc
or
push
and
xor
adc
or
rcll
les
loopne
lret
inc
or
sbb
pop
call
fwait
movsb
jp
adc
fisttps
cmpb
mov
push
pusha
daa
jp
outsl
jbe
mov
jp
sub
stos
pop
sub
inc
in
and
xchg
inc
lea
cmp
lret
cmp
pop
jnp
inc
push
ret
lock
sti
sbb
pop
popa
test
clc
xchg
dec
sbb
jno
repz
fnstsw
daa
std
jbe
cltd
lahf
xchg
ret
les
dec
cmp
add
xor
mov
dec
in
pop
out
mov
and
clc
mov
mov
test
scas
lret
adc
xor
ss
mov
mov
arpl
cmp
xlat
or
add
cmp
and
push
push
outsl
jp
fistps
ja
jle
inc
lock
sbb
jmp
in
and
out
lret
fbstp
bswap
nop
and
pop
es
xorb
ja
out
jnp
fsubl
mov
dec
loopne
sahf
imul
lods
mov
pop
cmp
pusha
mov
fistpl
xlat
add
inc
mov
sbb
in
jb
jmp
aad
dec
out
data16
outsl
in
jns
js
mov
incl
dec
and
dec
cmc
mov
popa
hlt
test
lods
xor
sarb
stos
xchg
cmp
lock
xor
sub
push
in
xor
cwtl
xchg
add
mov
mov
sub
daa
stos
addr16
mov
push
and
and
mov
sub
cwtl
cmp
dec
leave
cltd
xchg
inc
testl
and
lock
sub
jns
shl
mov
nop
lcall
pop
icebp
or
mov
cli
lods
mov
stc
fcomps
or
adc
adc
xchg
or
sbb
push
and
fisttps
fistpl
jmp
shrl
mov
cld
minps
mov
cmp
addl
out
mov
lcall
xorb
cwtl
push
or
xchg
jecxz
inc
jno
scas
repz
in
inc
inc
adc
jge
loopne
jae
jnp
shl
push
jns
rcl
lcall
mov
cltd
inc
loopne
ss
adc
jae
cltd
shrl
xchg
add
ja
xor
jmp
and
pop
push
xchg
sub
jge
aad
mov
pop
pusha
xlat
inc
xor
sbb
push
mov
scas
jle
sbb
dec
or
lea
inc
fmull
cmp
pop
pop
in
pop
sbb
cmp
ffree
stc
shll
push
or
or
push
and
xchg
cmp
push
mov
mov
fwait
ljmp
sub
sbb
sbb
outsb
rcrb
in
stc
pop
stos
jp
pop
inc
leave
pop
jae
sbb
adc
adc
jecxz
inc
movsl
inc
jmp
cwtl
mov
push
or
jo
mov
push
aad
and
outsl
cmp
jmp
out
in
mov
je
and
repnz
or
lret
or
cmp
mov
and
xchg
mov
xchg
xor
mov
sub
pop
idivb
cmp
push
xchg
mov
orl
rcrl
push
popf
push
stos
insb
movsb
shl
test
gs
cmc
nop
cmpb
mov
cltd
jge
mov
cmp
lahf
es
add
cmpsl
sbb
and
xchg
gs
xlat
mov
dec
xor
notl
test
je
mov
lret
ljmp
cmp
lahf
insb
push
cli
jno
aam
cltd
dec
ljmp
cmc
push
les
adc
adc
sbb
sub
and
jbe
sub
lods
xor
outsl
jae
jg
decb
xchg
inc
and
or
es
xchg
mov
mov
or
ret
cmp
mov
test
xor
je
mov
fstpl
daa
mov
decl
bound
addb
inc
lea
rcr
lods
arpl
lock
addb
lods
lcall
cli
xor
push
in
jl
pop
inc
aam
add
or
jae
xor
cmc
sbb
mov
mov
divb
movups
lea
mov
add
or
cmp
fcoml
xchg
mov
stos
dec
cltd
jo
jae
xchg
push
lahf
loopne
inc
divl
mov
pop
jl
ficomps
jne
pmaddwd
popf
hlt
add
test
fimuls
fdiv
inc
fsts
sub
movsl
popa
lahf
pop
push
test
out
push
fcomps
sti
and
jbe
loope
pop
push
cwtl
rolb
mov
mov
pop
mov
ja
or
add
pop
test
fidivs
adc
out
cmp
repnz
push
mov
mov
test
enter
xor
ret
and
xlat
jle
add
dec
inc
pop
xlat
jb
fcoms
popa
dec
loope
mov
fidivrl
mov
cmp
inc
lahf
mov
data16
push
jecxz
imul
push
dec
dec
cmpsb
imul
push
mov
shlb
or
jecxz
inc
fadd
inc
sar
out
gs
mov
int3
push
test
sub
mov
mov
je
dec
daa
out
test
mov
stos
pop
mov
pop
test
push
mov
insl
addr16
jle
mov
movsb
sbb
mov
pop
cli
or
xlat
cmpsb
or
testb
pop
add
jb
push
xor
test
mov
das
mov
je
adc
xchg
push
cld
lods
inc
fs
rol
ss
js
inc
scas
test
push
pop
es
scas
push
lods
pop
jns
lea
imul
test
sbb
das
push
mov
dec
aad
cmpsl
popa
mov
in
cmp
inc
push
jno
mov
dec
sbb
cwtl
in
rcrl
xchg
push
aas
push
dec
shld
jle
out
mov
scas
inc
xchg
sub
pop
mov
mov
mov
roll
mov
test
mov
mov
add
out
cmpsb
jmp
bound
clc
xchg
pop
movsb
mov
fcmovb
cmpsl
adc
repz
sub
xorl
fldt
repz
xchg
and
cmp
or
jle
clc
stos
jnp
sub
and
lods
inc
sub
stc
mov
xchg
xchg
sbb
test
mov
sub
mov
jb
mov
stos
outsb
movsb
adc
adc
les
cmpsl
xlat
cmp
dec
cli
adc
addr16
cmc
cltd
mov
fnstcw
cmpsb
int
out
jl
pop
jo
or
adc
jb
shll
lret
lret
lods
mov
fsts
incl
adc
push
lret
push
cmp
or
xor
sub
sbb
push
mov
mov
inc
fucomp
shrl
dec
add
ret
js
out
mov
jge
adc
arpl
cld
in
xor
test
xchg
outsb
or
shrb
pop
out
cmp
scas
xchg
mov
dec
mov
test
jg
jo
lea
fisubs
loop
sti
ret
xchg
and
rcrl
xorl
loopne
je
inc
sbb
mov
icebp
mov
adc
push
bound
popl
loop
mov
and
dec
lret
aas
mov
or
mov
mov
jge
pop
mov
xchg
push
mov
outsl
outsl
andl
jg
aam
rcll
mov
add
movsl
add
insb
insl
xor
int
imulb
jp
ret
xor
ds
lods
jns
adc
pop
push
mov
stc
sub
in
movsb
call
inc
out
lcall
cmp
nop
mov
je
xchg
lds
sub
sti
sub
sub
clc
or
rorl
sub
cli
fildl
aas
mov
jp
pop
movsl
sbbb
push
add
adc
sub
addr16
cmp
hlt
aas
push
hlt
icebp
rclb
pop
in
cmp
mov
pop
adc
and
xor
adc
sub
cs
std
push
push
dec
repz
sbb
pusha
and
mov
jl
insl
cli
jle
push
xor
cmovs
inc
adc
mov
dec
mov
xchg
stos
inc
aas
mov
push
dec
ljmp
mov
sub
cltd
mov
leave
cmpsl
mov
dec
or
into
fildl
sub
pusha
mov
fistpl
mov
in
cli
lcall
sub
pushf
inc
xchg
das
pop
je
jge
repz
pop
add
sahf
mov
lock
inc
push
dec
icebp
pusha
add
inc
fwait
rclb
comiss
aas
jne
fisttpll
fs
pop
addr16
jno
mov
popa
and
outsl
scas
mov
aaa
js
shlb
xchg
cmp
jmp
inc
arpl
add
popa
js
lods
jnp
loopne
rorl
popa
xor
cmc
negl
xor
pusha
cmc
lcall
lahf
roll
or
lahf
xchg
mov
and
cmp
push
mov
lods
cmp
mov
mov
sub
cmp
cmpsb
mov
int3
or
jmp
mov
mov
pop
jle
test
rol
xor
jns
cmpsl
add
cmc
jno
movsl
addl
xor
push
lods
and
in
subl
in
movsl
int
xchg
jmp
push
dec
sbb
push
inc
mov
xchg
pushf
and
push
push
dec
sarl
mov
cmp
lods
out
xchg
lret
sbb
push
push
lods
cmp
adcl
in
test
sbb
mov
xchg
stos
xchg
xlat
pop
or
imul
rcpps
int3
mov
xor
cmp
jns
leave
test
xchg
sbb
xchg
dec
xchg
sub
arpl
fsubrl
lahf
popa
fstps
es
repnz
testb
mov
jo
xchg
stos
and
cmpsl
out
aas
inc
hlt
popf
adc
push
sahf
xor
sub
cmp
xor
mov
popa
int3
fisttpll
enter
aam
testb
or
jbe
sbb
pop
lret
mov
jl
push
sub
xchg
adc
ret
or
in
rorl
int
mov
testb
pop
iret
push
mov
pop
decb
in
sub
outsb
adc
daa
stos
add
pop
out
aam
lcall
push
xor
dec
mov
xor
push
insl
xchg
sbb
inc
sub
cmp
mov
jae
push
xor
add
outsl
mov
pop
stos
and
push
and
fcmovne
scas
and
push
lret
jno,pt
add
subl
mov
inc
sub
mov
scas
mov
fs
xlat
ret
daa
mov
or
dec
iret
sbb
lods
push
in
or
fsubl
push
sbb
in
mov
cmpsl
into
bound
or
sbb
cli
jmp
stos
pop
aaa
arpl
enter
fnstcw
cli
push
call
add
dec
je
xchg
mov
dec
add
scas
pop
sahf
imul
pop
ret
fwait
andb
lds
mov
cld
adc
adc
lahf
lds
ja
scas
ret
test
lahf
popf
lds
in
mov
repz
xlat
xchg
pusha
mov
jge
dec
xchg
stos
and
pop
arpl
lret
jp
xor
mov
jg
data16
sub
jl
insb
iret
add
neg
leave
sti
sahf
add
pop
adc
shrl
xor
lods
cmp
js
or
arpl
mov
and
cmp
or
sub
mov
cmp
push
xchg
in
jge
xchg
sub
mov
pushf
rcr
lcall
out
imul
shrl
push
push
outsb
mov
push
jge
lea
pop
bound
jp
mov
sub
or
sbb
jnp
jns
adc
xor
aaa
cmp
rclb
jle
mov
sub
addl
mov
mov
mul
insb
in
ja
ds
mov
bound
bound
pushf
movsl
lods
lret
fadd
xchg
pusha
nop
sub
mov
lods
cld
mov
dec
cs
mov
rcll
jg
jns
daa
jns
xchg
sbb
xchg
xchg
sbb
mov
cmp
mov
stos
pop
outsl
jnp
inc
int3
repz
dec
pop
outsl
repnz
scas
lret
jo
mov
jge
lahf
in
dec
mov
jp
divb
int3
mov
jno
cmp
add
push
mov
test
push
cld
mov
fnclex
mov
push
iret
pop
add
xor
xor
std
pusha
leave
jbe
push
fbld
xorl
in
jns
pop
movsb
mov
jb
pop
out
jmp
sahf
or
pop
mov
insb
cmp
jg
pop
pop
mov
std
sbb
cltd
nop
inc
lea
jno
pusha
in
push
dec
sahf
mov
test
push
fidivl
push
jno
inc
pop
adc
adc
jp
in
xor
push
xchg
jmp
pusha
out
loop,pt
and
gs
adc
dec
push
adc
mov
cmpsl
mov
adc
bound
iret
push
cmp
imul
ljmp
jle
xchg
or
mov
aam
scas
pmulhuw
out
cmp
mov
inc
int
sub
mov
fcoml
iret
repz
in
loopne
sbb
mov
cmp
pushf
arpl
dec
jo
scas
dec
lahf
sbb
sbb
xchg
jbe
push
in
sbb
and
iret
mov
push
mov
xchg
rol
out
cltd
ss
es
or
sub
ds
movsb
jae
xchg
cmpsb
push
lcall
xchg
lcall
mov
mov
bound
popa
testl
sub
push
fucomp
lret
xor
ret
ret
divb
jns
je
imul
cmc
mov
pusha
jecxz
in
movups
lret
rorl
cmp
testb
icebp
sbb
jmp
lea
stos
mov
stos
aaa
insb
leave
inc
fistpll
pop
fcoml
sub
cmc
xor
sub
test
xchg
sub
insl
add
push
mov
sahf
mov
in
mov
mov
outsl
or
insb
xorl
jle
fs
cmp
adc
fldt
lods
adcl
push
jle
cmc
mov
inc
mov
push
mov
xchg
cltd
scas
lods
outsl
push
jnp
loope
mov
or
fistps
cmpb
mov
inc
mov
lods
ds
mov
sbb
jne
pushf
push
sub
mov
xor
pop
mov
adc
into
movsl
jo
loopne
mov
jnp
movsl
repz
lods
mov
ljmp
shrb
inc
push
jge
jp
ficoml
lea
testb
mov
cld
adc
xchg
je
dec
or
sub
fists
movsl
jns
cmc
ljmp
mov
jmp
ror
pop
mov
into
inc
mov
push
xchg
scas
xor
or
xchg
scas
mov
mov
dec
push
cmp
into
pop
icebp
jge
sbb
inc
das
arpl
and
jmp
cmp
sub
int3
mov
in
out
stc
inc
jecxz
and
inc
dec
or
jmp
es
push
enter
push
stos
adc
pop
jnp
mov
cmp
icebp
jle
aaa
sbb
sarl
in
and
pop
cwtl
sbb
and
add
fisubrs
adc
sub
fdiv
adc
push
mov
orl
hlt
xchg
xor
pop
mov
andb
sbb
mov
mov
addr16
out
dec
movsb
stc
rorb
push
push
shlb
jae
std
clc
and
push
int
and
insb
pop
jmp
mov
or
test
outsb
sub
push
repz
pop
push
nop
rcr
loopne
popf
add
xchg
pop
pop
scas
cltd
mov
jle
inc
pushf
fwait
test
test
sub
ds
mov
add
ljmp
cli
inc
clc
mov
out
push
sub
cmc
dec
mov
shld
xchg
mov
popf
and
popa
push
test
sbb
loopne
xchg
gs
inc
cmp
popa
or
inc
cmp
push
pop
inc
insb
inc
pop
jp
and
mov
jle
push
push
mov
and
push
inc
mov
lahf
iret
sub
pusha
stos
jnp
cmpsb
arpl
sar
mov
mov
fnsave
xchg
pusha
aad
jbe
adcl
push
jne
mov
fs
push
xchg
rcrl
sub
add
mov
add
mov
roll
ret
jmp
aad
fcmovnb
mov
fstpt
in
dec
add
cmp
leave
popf
push
aaa
lret
sbb
pop
ret
pop
mov
fstps
mov
mov
fwait
mov
ljmp
cmpl
mov
or
es
fisubs
lock
cmp
scas
into
sub
out
loop
enter
cs
rcll
jg
pop
je
aad
ret
xchg
pop
icebp
pop
andl
rorl
in
lcall
scas
jae
adc
adc
les
mov
sub
push
sbb
loopne
xchg
sahf
jne
pop
cmp
push
fldl
cmp
cmc
fadds
jae
shlb
test
or
pop
sbb
inc
adc
outsl
popf
and
push
sbb
xchg
cmp
addr16
pop
scas
repnz
sub
repnz
cmpsb
les
insl
out
outsl
jmp
fisubrl
inc
xor
enter
or
loopne
out
mov
ror
clc
or
push
or
sbb
imul
in
lret
fcos
cmc
cs
fists
sbb
and
ljmp
cs
adc
imul
aad
push
jb
into
cmp
cmp
ret
inc
pusha
push
mov
fcoml
bound
call
rcr
mov
testl
bound
mov
sbbb
xor
fdivrp
int3
ja
pushf
push
xchg
out
lods
test
add
aad
dec
or
xor
sub
jb
sbb
fsubr
aas
int3
rcll
jno
push
lret
fld
mov
in
sub
pop
pop
in
stc
sbb
getsec
xor
dec
je
std
stos
fists
mov
xor
ret
or
sbb
sub
mov
int3
std
cmp
pop
scas
mov
data16
rorb
sti
or
xchg
ret
adc
and
mov
sub
and
popa
mov
jb
add
test
mov
mov
lods
or
leave
xchg
add
notl
dec
cld
lcall
incb
imul
lods
xchg
movsl
adc
scas
cli
mov
push
fs
push
add
jo
cmp
and
in
push
and
xor
pop
mov
sub
sbb
rclb
aas
push
mov
cwtl
shlb
adcb
scas
out
mov
daa
mov
leave
shlb
sub
and
ret
imul
sti
cmc
fmull
hlt
pop
out
cmpsb
gs
outsl
lods
fs
cld
add
popf
vpshaw
mov
fidivl
inc
orl
shl
xchg
mov
insl
dec
or
addr16
pusha
insl
and
push
and
cmp
aad
sbb
cld
dec
decl
xchg
lds
lock
clc
pop
xchg
mov
daa
mov
mov
jnp
insl
add
mov
loop
xor
daa
pop
xor
adc
sub
pop
adc
mov
mov
sarb
push
jae
mov
in
cmp
mov
nop
sbb
in
div
sub
insb
cwtl
scas
aam
xchg
inc
xlat
pop
jl
aaa
mov
mov
sub
sbb
mov
in
and
mov
mov
cli
ss
push
sbb
adc
bound
sub
faddp
sbb
repz
into
enter
cmp
sbb
into
mov
push
sbb
dec
test
mov
push
ljmp
in
call
push
or
sbb
lcall
pop
cwtl
sub
cltd
scas
out
mov
data16
or
and
jle
or
stc
add
outsl
lret
sbb
imul
dec
mov
push
aad
mov
dec
and
push
add
bound
dec
cli
mov
call
cwtl
rolb
out
jb
push
xchg
jecxz
dec
pusha
out
sbb
rclb
xchg
sahf
xchg
mov
bnd
xchg
xchg
jno
nop
pop
add
adc
out
pop
sub
fnstsw
cmpsl
jle
adc
repz
fldl
out
jbe
inc
jl
add
dec
mov
jne
mov
mov
mov
inc
dec
jmp
int
mov
pop
push
push
push
repnz
sub
mov
push
and
stos
add
jbe
jle
cld
adc
movsl
imul
xor
xchg
shll
xchg
dec
sahf
aas
xchg
add
push
ss
xlat
js
mov
adc
push
jmp
adc
mov
mov
pop
jno
jbe
and
addr16
mov
arpl
lock
push
dec
mov
or
ficompl
and
and
xchg
jecxz
push
int
mov
mov
inc
add
inc
in
sbb
xchg
dec
xor
fstpt
loope
mov
test
mov
mov
xchg
movsb
movsl
add
jp
inc
add
push
sti
jle
lods
sti
vandps
sub
cmp
das
or
jecxz
pop
addr16
mov
mov
and
cmp
mov
add
in
xchg
cltd
pop
mov
add
mov
xor
pop
loope
dec
orb
mov
pop
int3
inc
push
lret
push
repz
dec
lcall
cmpsb
mov
mov
jecxz
loope
cmp
adcl
notb
mov
or
mov
mov
and
jecxz
sub
push
cmc
fbstp
arpl
js
fs
fsubrl
mov
sub
pop
xchg
les
into
adc
sti
cmp
in
push
add
jno
push
jo
mov
jb
jl
scas
and
or
pop
mov
je
in
fstps
jle
push
and
or
or
rorl
daa
in
adc
fisttps
divb
inc
ret
inc
sub
test
push
and
push
adc
cmp
cld
shrb
mov
gs
pop
insl
sub
mov
or
lds
xor
pop
repz
leave
cs
mov
outsl
pop
fsubrs
cmp
adc
mov
push
gs
insl
cmp
lds
mov
lods
fwait
pop
or
out
ret
negb
inc
cmpsb
bound
les
je
movsb
js
sahf
mov
movsb
pushf
lcall
jns
add
jnp
add
or
loopne
ljmp
xchg
dec
cmp
or
inc
xchg
xchg
xchg
fcompl
stc
or
pop
adc
jge
xor
mov
jmp
or
xor
mov
jp
aam
add
repz
in
mov
cmp
insb
cs
inc
pushf
pop
fidivs
ljmp
xor
add
jns
xchg
pop
dec
divb
aas
out
jae
loop
adc
add
loopne
sbb
cmpsl
mov
inc
fsubr
clc
imul
push
adc
mov
mov
fiaddl
test
mov
fisttpl
ljmp
rcrb
adc
inc
xchg
and
imul
dec
addr16
daa
push
dec
xchg
jns
out
mov
shlb
pushf
jno
das
or
jp
inc
mov
sbb
cmp
xlat
clc
sub
pop
xchg
aam
in
xchg
inc
mov
rclb
push
mov
mov
popf
dec
xor
mov
add
sbb
rorl
dec
movsw
and
xchg
cmc
cmp
or
lret
ud2
cmp
pop
xchg
cwtl
out
push
test
icebp
lahf
sub
rol
cmp
mov
push
dec
test
push
push
in
imul
jl
inc
dec
stos
stc
xor
mov
insl
push
pop
insl
popa
ret
pop
xorb
subb
pop
loopne
loop
ficoms
sub
stc
lahf
push
ljmp
sbb
jmp
lds
or
mov
push
mov
pop
hlt
ja
shll
adc
fldt
pushl
add
push
mov
push
bound
test
pushf
inc
add
js
add
cmp
rorl
dec
push
movsb
lret
pop
sub
dec
ss
cs
sub
scas
outsl
cli
divb
scas
addr16
into
daa
dec
movsl
mov
sbb
or
bound
repz
lea
inc
add
fwait
push
leave
adc
jmp
jl
pop
in
or
mov
mov
pop
mov
cmp
stos
pop
aas
hlt
adc
repz
hlt
mov
pop
pop
iret
scas
cmpsb
ficompl
popa
popf
mov
rolb
das
gs
add
in
sbb
pop
outsb
out
test
stos
sbb
outsb
xor
cmp
xchg
mov
mov
push
sahf
lret
outsl
pop
cld
sbb
inc
jle
insl
mov
nop
push
out
pop
scas
jns
sbb
xor
inc
movsl
xor
cmpsl
sbb
dec
insl
das
gs
adc
sub
push
imul
adcl
xchg
push
and
inc
mov
fistl
insb
add
sub
fsts
mov
ljmp
lret
mov
xchg
fstpl
dec
iret
rorb
stc
fs
test
push
adc
mov
mov
add
fwait
jo
es
cmp
icebp
dec
xchg
sub
testl
fstps
jp
pop
cltd
adc
inc
pop
das
ffreep
xlat
or
testb
icebp
in
popf
in
mov
fst
jmp
push
std
push
pop
push
adc
push
dec
lcall
sub
xor
inc
rcll
and
sub
cwtl
push
movsb
lods
adc
movsb
or
or
sub
test
shl
push
mov
sbb
pop
xchg
dec
xlat
movsb
mov
pop
xchg
cmpsb
dec
lcall
fcoms
hlt
test
cmp
inc
shll
roll
push
movsb
mov
jmp
adc
jmp
in
insb
lea
imul
push
out
mov
mov
jb
dec
sub
test
jbe
ds
arpl
mov
or
outsb
stos
arpl
mov
out
mov
sub
popa
popa
xchg
cld
stos
loopne
das
adc
icebp
ret
sbb
mov
cmp
or
mov
xchg
cmpsb
cmp
cld
dec
call
mov
ss
xor
xor
xchg
push
cmp
lods
push
dec
nop
add
jge
jae
sar
fsubl
adc
jg
dec
mov
jb
into
xor
shl
mov
dec
out
jae
pusha
imul
sahf
fsubs
sub
sbb
cmp
sbb
push
sbb
add
push
pop
cmp
cmp
adc
sbb
imul
cmp
sbb
jnp
out
pop
test
xor
in
and
sbb
aam
sbb
inc
and
cltd
repz
outsl
mov
adc
push
sub
fistpll
test
sahf
pop
sub
movsl
movsb
sarl
repnz
fiaddl
ret
ficoms
sbb
mov
adc
push
call
daa
outsl
mov
lock
cs
push
push
ja
enter
inc
test
fsubrl
push
lret
inc
pop
adc
inc
add
fstps
je
inc
xchg
ret
and
fcompl
int3
xlat
adcl
sub
out
andb
and
sub
pop
aas
jne
dec
fimuls
aam
or
mov
add
outsl
fwait
xor
xchg
jmp
stc
out
cmp
xchg
fwait
test
or
and
das
mov
insb
mov
mov
inc
jb
or
fcoms
push
cmp
inc
jno
cmp
jbe
das
inc
pop
fs
imul
cmp
in
ds
cld
add
adc
rcrb
mov
repz
mov
mov
mov
dec
mov
xor
aaa
loope
cmp
inc
imul
inc
jbe
cld
cmp
mov
mov
mov
mov
in
xlat
nop
lcall
mov
dec
shlb
jns
sbb
add
out
jb
in
int3
adc
adc
in
insl
mov
sub
and
lret
mov
orb
or
xor
sbb
inc
sub
sub
nop
aaa
pop
and
xchg
xchg
push
jge
mov
test
mov
mov
lcall
pop
jl
int3
xchg
xor
xchg
aaa
sub
arpl
pop
imul
mov
xor
sub
adcl
outsb
insb
das
aas
lods
insb
add
outsl
cmp
lcall
aad
xchg
out
cmp
sub
pop
dec
stos
jle
leave
and
stos
xchg
pop
pop
inc
test
aaa
in
daa
xchg
xor
aaa
lock
sti
jecxz
and
jecxz
in
jecxz
pop
push
xchg
mov
je
inc
mov
repnz
mov
push
push
ficoms
dec
test
pop
pop
aam
mov
scas
xor
pop
cmp
aaa
lods
sub
sub
mov
out
jno
mov
in
xchg
divb
or
push
push
sti
neg
shlb
stos
andb
in
rclb
xchg
xchg
mov
add
addr16
dec
shll
cld
sub
stc
adc
stos
outsl
sti
dec
scas
dec
push
out
pop
or
sahf
mov
loop
cld
es
inc
popa
push
push
in
inc
data16
lret
ret
push
out
enter
adc
push
sbb
inc
mov
hlt
mov
subl
paddsw
test
inc
xchg
and
out
cltd
out
icebp
cmpsl
xchg
xor
int
ja
pop
sti
sub
imulb
jno
ljmp
stos
idiv
cmpsl
icebp
outsb
arpl
ret
fwait
xchg
repnz
add
movsb
lea
cmovle
dec
ret
sbb
xor
push
fs
fdivrs
test
xchg
jnp
mov
cs
xlat
xchg
pop
jb
jb
xchg
ret
xchg
push
adc
xor
mov
mov
nop
dec
ret
jb
push
roll
pop
scas
out
mov
mov
mov
sbb
push
adc
adc
mov
jl
movsl
ficoml
movsb
fildll
arpl
shlb
cmp
loope
and
fists
fdivp
jl
or
scas
cmpsb
jbe
ja
and
mov
pop
fwait
loopne
cmpl
adcl
and
shlb
add
cmpl
in
cli
or
dec
lods
lret
sub
rcl
pop
push
xchg
cmp
fidivl
and
or
cld
add
pop
push
cs
test
xor
mov
rclb
cmp
dec
lods
or
sub
out
push
aaa
sbbb
repnz
jge
cltd
mov
je
cmp
ret
fs
adc
sub
in
push
push
jo
lcall
outsl
xor
scas
mov
dec
imul
scas
mov
jp
fsubrp
in
mov
adc
enter
daa
push
enterw
aaa
cli
addb
mov
lret
lods
rol
mov
xchg
fcos
mov
push
mov
xchg
stc
mov
cmc
out
loop
sbb
sub
and
lock
sub
scas
sbb
lods
notl
inc
or
xor
sub
cmp
xchg
enter
mov
aaa
std
out
and
mov
mov
insl
lds
mov
and
xor
inc
adc
stos
mov
lods
pcmpgtb
mov
mov
xchg
adc
jg
mov
dec
in
and
lock
xchg
xor
test
idivb
cmp
insl
rcll
inc
scas
lret
icebp
call
je
test
dec
sub
mov
jbe
lds
push
inc
out
mov
xchg
inc
cmpsb
sbb
movsl
inc
lea
xchg
fnstenv
push
and
dec
sub
jle
mov
fcmovnu
or
lret
sbb
mov
dec
inc
push
xchg
push
sub
sbb
inc
adc
or
and
push
push
or
jle
and
repz
push
idivb
sub
sbb
pop
xchg
fisubrl
movl
and
je
nop
outsl
inc
inc
lds
scas
sub
in
push
test
mov
aaa
into
lcall
cwtl
out
cmp
adc
rcll
subl
pop
js
jne
packssdw
mov
push
xchg
xchg
jge
cmp
popa
and
aad
ficompl
mov
xor
xchg
inc
xchg
jo
inc
xchg
pop
loop
mov
hlt
mov
outsb
cmp
mov
xchg
lret
mov
lret
cmp
shlb
repnz
mov
xor
loope
dec
imul
data16
loopne
and
icebp
cli
or
lods
lret
lahf
out
pushf
push
and
or
mov
mov
xor
push
dec
sbb
add
jge
inc
jl
dec
andl
movsb
xlat
stos
inc
mov
sub
rcrb
pushf
mov
dec
dec
push
jne
andl
xchg
in
insb
pop
ror
xchg
test
adc
pop
add
dec
aas
jmp
fsts
mov
out
insl
pop
scas
cmpsl
mov
shr
lahf
shll
lret
dec
xchg
fnsave
xchg
test
jmp
xlat
loope
rcll
cmp
enter
or
dec
rcrl
scas
lret
cmp
mov
mov
faddl
outsb
inc
cmp
shl
push
dec
in
push
push
js
sub
ret
cmp
ret
outsb
cmp
adc
push
lds
ja
stc
mov
inc
repz
ja
mov
push
cmp
cmp
es
sbb
test
xor
xchg
sti
fisttpl
xchg
add
loop
out
add
and
jl
jns
adc
lret
xchg
sub
lahf
rcrl
inc
das
das
ror
sbb
imul
rorl
and
call
inc
dec
and
and
dec
movsl
fisttpl
inc
sahf
jg
mov
push
rolb
dec
xor
inc
inc
cmc
xchg
add
add
dec
or
fnstsw
sub
jo
push
mov
and
dec
adc
jp
cli
fnsave
xor
mov
xchg
pop
sbb
sbb
mov
loope
loopne
or
adc
mov
stos
icebp
ret
imul
sbb
jnp
jge
aas
and
das
add
and
mov
shrb
mov
xchg
xor
lahf
out
add
divb
fmul
xlat
ret
jmp
jmp
inc
fs
das
bound
xchg
jno
xorl
dec
stc
push
cmp
pop
lea
pop
int
ljmp
cmpsb
adc
add
es
pop
cltd
jo
jge
int3
jb
or
mov
nop
scas
aaa
xlat
xor
sub
mov
out
mov
lret
push
in
fdiv
sti
nop
fwait
or
call
arpl
mov
clc
inc
sub
lcall
cwtl
mov
out
sbb
push
xor
arpl
xor
fstp
stos
mov
jmp
xor
xor
mov
std
xchg
mov
mov
inc
adc
xor
test
in
mov
xchg
into
stc
pop
and
lret
mov
cmpsb
outsb
mov
das
mov
cwtl
cld
cwtl
bound
popf
out
inc
push
test
xorl
dec
cwtl
xlat
xor
test
test
popa
aad
stc
or
pop
js
mov
sahf
push
pop
jns
movsb
js
sarl
lahf
dec
orb
cmp
sbb
dec
mov
shll
mov
test
cmp
sub
mov
dec
addl
sarb
xchg
or
sub
sbbb
mov
adc
push
and
mov
dec
add
cmp
negb
in
cwtl
into
rcll
mov
dec
ret
scas
pop
sbb
ret
pop
in
xchg
cmp
jge
push
jns
mov
in
adc
cltd
psllw
ljmp
fmulp
lahf
cmp
mov
fnsave
cmp
test
xchg
cmpsb
enter
sbb
cmp
jne
sbb
push
xchg
lret
xchg
mov
push
and
lock
testb
xor
push
push
imul
shrb
and
dec
add
lret
add
push
push
mov
push
mov
mov
popf
adcb
test
dec
push
pop
dec
test
mov
jle
adc
popf
xor
mov
mulb
mov
addl
dec
mov
leave
int3
cmp
addr16
fisubrl
cmp
dec
sbb
pop
js
dec
mov
loope
pop
mov
fwait
ljmp
les
jbe
jl
jno
andl
in
inc
imul
mov
dec
das
add
xchg
test
pusha
dec
lods
aam
orl
cltd
nop
inc
in
pushf
mov
jae
addr16
jne
je
push
or
stos
mov
lret
ljmp
sbb
push
mov
leave
jb
dec
xchg
je
inc
xchg
mov
ror
dec
pop
dec
and
pminub
cmp
jmp
pop
xchg
xchg
das
push
adc
insb
mov
inc
scas
pushf
or
mov
aad
in
rorl
or
add
ja
loope
fisttpll
dec
adc
push
loopne
jns
pop
aad
aas
xchg
xor
xor
js
mov
mov
xor
sub
jp
pushf
inc
hlt
sbb
inc
mov
adc
mov
xchg
jecxz
push
xchg
aaa
mov
fisttpll
or
mov
adc
xor
xchg
sarb
pop
sub
inc
test
jno
cld
ss
adc
adc
sub
mov
fwait
sub
mov
cld
insw
enter
jnp
pop
pop
cltd
movsl
push
inc
pop
sub
mov
push
adc
pop
lahf
pop
dec
jmp
adc
cli
paddd
or
pop
xchg
cmpsb
xchg
ds
jnp
or
test
ljmp
subl
addl
jg
inc
mov
sub
imul
dec
push
clc
cli
or
mov
movsb
mov
insl
enter
xor
push
dec
inc
lea
dec
pop
insl
imul
in
ret
dec
sahf
stos
cmovne
and
mov
dec
jno
push
cmc
sub
int
rclb
add
cmpl
push
mov
mov
dec
fdivl
lock
jae
sub
xor
lock
mov
sub
cli
xchg
cmp
popf
xchg
aam
cmpl
out
mov
dec
inc
je
mov
ss
int3
dec
sub
jbe
cmp
or
mov
and
xor
stos
and
insb
aas
xchg
jae
int
outsl
mov
push
inc
out
sbb
dec
push
pop
lcall
mov
icebp
jae
jp
xchg
bound
sub
shrl
pop
cmp
push
leave
fstl
arpl
push
test
nop
jmp
js
movsl
mov
btc
dec
leave
pop
sub
fldl
aas
repnz
mov
sbb
cld
jg
in
and
cld
inc
sti
loop
pop
mov
rcrb
mov
lret
mov
lea
mov
mov
or
lds
stos
in
fists
cmpsb
mov
push
sbb
push
jno
add
ficompl
lret
mov
hlt
mov
dec
mov
pop
or
xchg
in
pushf
add
add
idivb
mov
fidivrl
adc
loopne
bound
push
popa
cld
pop
mov
int
mov
sub
mov
and
stc
or
push
sbb
dec
clc
hlt
gs
push
scas
push
xor
xor
mov
ja
test
jp
or
imul
push
jp
or
mov
lahf
add
lretw
dec
out
xor
insl
clc
and
stos
jg
pop
adc
movsl
sub
fmuls
jne
inc
push
sbb
ror
fiaddl
mov
mov
hlt
push
adc
cmp
cmp
ljmp
repz
in
pop
adc
jl
fnstsw
cmp
adc
test
int
jno
ss
dec
cmp
jnp
mov
jp
ficoml
aad
std
sbb
jg
mov
add
cmp
adc
jl
mov
mov
mov
lds
sub
sub
or
ljmp
pop
mov
push
mov
andb
mov
mov
or
nop
xchg
cwtl
cmpl
push
dec
push
pop
pop
push
jo
mov
icebp
imul
dec
ljmp
xlat
mov
sbb
test
add
xor
add
jecxz
sti
rorb
test
adc
cmp
repnz
mov
xchg
icebp
xchg
pushf
push
lea
ljmp
push
roll
fidivl
xchg
mov
call
xor
sahf
call
mov
cmpsl
movsb
iret
lods
movsb
aas
inc
dec
test
push
add
adc
cli
jmp
out
dec
rorb
sub
into
dec
subl
iret
xchg
pop
jb
adc
cmpsl
mov
xor
dec
test
aad
or
in
fstl
nop
mov
shlb
cmp
aaa
or
lods
pop
in
adc
xor
jl
test
addr16
cmp
inc
sbb
mov
xor
es
xchg
cli
adc
mov
sub
push
scas
sub
lcall
sub
xchg
out
cmp
jmp
dec
or
adc
vpcmpgtb
fs
fistpll
out
adc
call
jge
shll
and
ficomps
sub
lret
lret
mov
decl
xchg
in
pop
je
jnp
pop
xchg
mov
cli
jo
cld
inc
aas
lret
int
cli
xchg
jnp
pop
fwait
mov
sbb
arpl
sbb
divb
add
inc
pcmpgtb
stos
dec
or
or
scas
adc
insl
repnz
out
jmp
sbb
enter
pop
add
jmp
mov
mov
lds
push
push
mov
in
cmc
xchg
stos
arpl
adc
nop
pusha
add
test
lret
xor
pop
mov
xchg
inc
test
inc
inc
pop
pop
orb
dec
stos
or
std
test
test
xor
jmp
out
mov
jbe
mov
adc
imul
pop
dec
sbb
jg
inc
xchg
ljmp
mov
leave
fistps
dec
adc
push
cmp
sbb
leave
add
loopne
std
divb
xor
xchg
ds
int3
into
test
fists
xchg
jbe
bnd
or
roll
xchg
sub
xchg
jmp
rcrb
mov
add
sub
aas
mov
clc
mov
test
add
mov
inc
out
rcl
jns
imul
popl
rcll
jae
push
adcb
fwait
mov
repz
les
pop
int3
inc
test
out
inc
sti
sti
fcompl
mov
mov
adc
sub
lea
cld
les
bound
and
pushf
dec
push
out
cli
add
es
pop
lcall
fstl
out
movsb
into
rcrb
xor
add
adc
mov
pop
xchg
pusha
jnp
ret
mov
jae
idivl
aam
mov
xor
divb
jg
aam
loopne
jnp
jecxz
adc
cmp
jns
mov
iret
notl
sbb
lock
out
jo
fisubrl
lea
adc
mov
les
je
push
push
dec
andl
inc
push
mov
out
movsb
inc
insb
inc
inc
gs
popa
ljmp
sub
inc
shll
aad
dec
adc
cmpsb
pop
mov
fdivr
iret
les
loope
sbb
ret
jbe
mov
mov
dec
jns
fdivrl
ljmp
out
je
ja
jae
ret
aam
arpl
push
lret
xchg
sbb
and
std
push
rolb
in
add
inc
mov
xchg
dec
testl
aas
call
clc
fs
adc
cmp
mov
mov
push
test
mov
fldenv
leave
xchg
stc
mov
lahf
std
pusha
cli
mov
sbb
push
cmp
mov
stos
sbb
test
bound
mull
and
dec
pop
xlat
xor
dec
push
or
stos
add
push
ljmp
movsb
rcrl
insl
pop
adc
adc
adc
std
clc
fists
and
mov
jb
clc
ljmp
nop
lods
cmpl
and
test
or
cmp
ljmp
mov
sbb
mov
xor
sub
imul
pop
rcr
add
jg
std
outsl
loop
out
daa
aaa
jbe
mov
xchg
insb
rclb
inc
sbb
dec
imul
jl
xchg
loopne
pop
jb
aad
test
push
subb
jae
std
adc
call
sbb
xor
dec
cmp
push
jmp
sbb
mov
mov
push
pop
mov
jns
fiaddl
sahf
in
sti
test
jl
dec
xchg
push
mov
outsl
inc
divl
inc
dec
cmpsl
fnsave
sbb
dec
js
dec
or
add
out
fistps
push
inc
shll
sahf
movsl
mov
cmpl
pop
ds
inc
dec
mov
push
inc
negb
scas
lods
call
std
mov
icebp
aam
notl
adc
ja
lock
mov
mov
test
jg
pop
orb
sub
inc
mov
cmpl
mov
pop
jbe
cmp
xchg
subl
pop
pop
pop
push
scas
jg
and
sub
jb
sbb
xor
add
and
daa
insb
bound
fstps
popl
mov
xor
dec
sub
and
les
jmp
testl
mov
out
mov
inc
aam
jb
push
adc
mov
and
lods
loopne
loop
or
push
stos
sti
sub
sub
sbb
jmp
sti
lock
enter
jo
sbb
paddd
jecxz
dec
mov
test
inc
lock
cltd
out
mov
or
xchg
sbb
bound
and
push
jmp
aam
fs
pop
mov
ret
mov
leave
mov
out
fisttps
push
push
repz
xchg
decb
dec
inc
insl
sar
lods
adc
lods
shrl
pop
cmc
pop
fdivl
ret
int3
push
lcall
sub
mov
fstp
mov
pusha
pop
mov
xor
out
jmp
enter
fcomip
add
xchg
inc
mov
sub
jbe
inc
mov
imul
icebp
rcr
aad
mov
push
addr16
pushf
fcompp
clc
adc
xor
es
jge
jns
inc
sub
push
cmp
jne
mov
adc
aam
fldt
fimull
shll
or
add
jne
iret
push
les
and
fs
in
fistpll
push
clc
aam
push
nop
pop
stos
sbbl
jo
xor
dec
lret
lret
mov
aaa
test
insb
fnstenv
repnz
push
jne
inc
sub
mov
jae
pop
rcl
cmp
hlt
jbe
les
jns
dec
loopne
movsl
xor
push
mov
xchg
dec
loop
dec
push
cmpl
adc
xlat
xchg
add
cmp
negb
inc
lods
not
adc
orl
add
sbb
adc
and
out
int3
enter
fistpll
mov
out
shll
lea
fldcw
inc
sarl
cmp
pop
jnp
pop
gs
repnz
shl
incb
fwait
mov
inc
std
xchg
xchg
sbb
inc
cmp
test
popa
cld
add
sbbb
or
inc
out
shlb
in
adc
lea
sbb
inc
push
cld
std
mov
test
lds
and
mov
mov
inc
lret
icebp
adc
sub
into
insl
jle
cmc
repz
cmp
sub
ds
jg
or
xchg
jb
and
mov
pushf
je
jns
stos
pop
fimuls
cmc
cmp
cmp
pop
inc
adc
xchg
cmpsb
scas
dec
repz
outsb
inc
sbb
cmp
add
dec
adc
xchg
imul
mov
lret
mov
jle
stc
xchg
dec
orl
pop
xchg
xchg
lock
or
sbb
imul
dec
insl
scas
push
sub
loop
and
or
jne
and
pop
inc
xor
mov
enter
push
mov
fwait
push
aas
fwait
and
cmp
sahf
mov
dec
test
repz
sub
int3
cmp
adc
rcrb
fxtract
in
fildl
fsub
outsb
cs
or
or
sbb
xchg
pop
jns
cs
lods
xor
jbe
sti
jbe
arpl
call
fimull
test
outsl
bound
xchg
adc
pushf
incb
sbb
pop
inc
sbb
ret
iret
repnz
loop
lret
pop
shll
jge
push
out
scas
or
mov
in
push
std
or
sbb
and
xor
mov
out
and
push
sub
xlat
loope
adc
sub
enter
dec
mov
push
mov
sbb
cmp
les
mov
out
les
push
adc
pop
test
mov
daa
sbb
pop
repnz
jge
pushf
xchg
dec
lea
scas
roll
mov
in
rcl
xchg
into
packuswb
inc
es
mov
loop
sbb
out
jmp
cs
iret
call
xor
mov
xor
mov
mov
movsb
js
in
cli
jl
lret
in
cli
mov
inc
jns
scas
dec
sub
outsb
out
movsb
shll
ret
mov
mov
and
pop
inc
lea
push
imul
mov
mov
cmp
push
mull
or
cmpsl
or
out
pop
sub
inc
leave
add
stc
popa
xor
sub
sub
popa
xor
pop
push
pop
dec
clc
cli
xor
cs
rcrl
dec
js
int
or
enter
mov
dec
fs
fmulp
mulb
sbb
mov
push
sbb
and
push
mov
or
jo
sbb
das
movl
inc
jle
inc
test
dec
mov
movsl
imul
jbe
scas
clc
pop
lock
pop
pop
fiaddl
in
lret
aas
mov
pop
push
daa
scas
adc
cmp
addr16
movsl
and
fwait
rclb
scas
pop
std
daa
add
in
popa
jl
dec
pop
loopne
leave
cltd
repnz
outsl
cwtl
jae
rcl
add
into
sub
loop
jnp
loop
rcrb
in
or
or
jbe
mov
adc
push
push
inc
and
insl
scas
pushf
jo
push
pusha
mov
jl
leave
lock
or
shlb
sar
outsb
sub
neg
adc
mov
movsb
sahf
jbe
insl
lock
aad
cltd
push
mov
jle
add
xchg
dec
out
jp
xor
dec
mov
and
mov
sbb
inc
sbb
ret
scas
jecxz
fwait
adc
das
adc
add
dec
sub
add
das
pop
ret
sbbb
test
js
fimuls
jle
scas
xor
mov
mov
outsl
orl
cmpl
adc
ss
hlt
jbe
gs
sbb
inc
mov
sub
adc
shll
ret
ja
inc
sar
cwtl
mov
aas
stos
and
rcll
mov
pop
mov
pop
xor
insl
leave
jbe
jno
pop
jae
jns
pop
sbb
fisttpll
flds
xchg
cmp
xor
push
cmp
movsl
push
xor
mov
push
xor
emms
outsb
mov
cli
mov
xchg
mov
jl
xchg
dec
jp
movsl
cmc
imul
cmp
in
lock
jmp
fwait
icebp
mov
pop
and
inc
xor
xor
sub
xchg
mov
jnp
dec
mov
push
add
cli
imul
push
std
or
mov
xchg
push
int3
push
jae
loope
adc
mov
aas
fnsave
lret
shl
js
xor
mov
xchg
sbb
adcl
sbb
mov
inc
mov
test
lret
inc
and
adc
in
hlt
xchg
rcr
testb
push
mov
sbb
mov
shrl
sub
stos
out
sub
cmp
in
cltd
enter
or
lcall
push
push
inc
push
sbb
shll
rcrb
inc
pop
jno
cmpsb
in
shlb
jb
adc
das
dec
hlt
mov
shll
ljmp
lds
movsl
imul
xchg
lods
out
gs
cmp
sarb
fisubs
sbb
xacquire
pop
pop
int3
jnp
pusha
ret
mov
in
es
push
sbb
aaa
rcr
sub
lods
popf
mov
popf
test
mov
or
cmp
push
imul
cmp
mov
rolb
and
leave
pop
jg
data16
faddl
lret
sbb
popf
int3
push
lret
daa
int3
dec
gs
enter
shrb
ss
divl
shl
lret
nop
popa
out
insb
cmpsb
ja
inc
sub
pop
jl
mov
push
mov
in
xchg
sbb
insb
repz
sti
mov
xchg
js
and
out
js
add
into
inc
mov
mov
push
aad
ret
dec
jns
dec
lcall
xchg
pop
test
mov
add
fisubl
aaa
cmpsb
in
xchg
enter
cmp
popa
dec
scas
in
out
fmul
jg
call
rol
cmp
leave
pop
aaa
mov
mov
sbb
mov
xchg
daa
and
cli
call
xchg
incl
mov
mov
mov
mov
sbb
movsb
hlt
add
loop
std
insb
in
dec
mov
fwait
shrb
push
or
push
jns
mov
in
iret
mov
cmpsb
dec
roll
lds
subl
or
cmpsb
dec
repnz
xchg
mov
cmp
sub
sbb
int
roll
sbb
loope
cmp
lret
loopne
hlt
in
and
add
in
hlt
movsl
fdivrs
add
mov
sub
es
cld
fldcw
cmc
dec
add
push
lret
aad
data16
cli
dec
dec
sbbl
mov
cmp
scas
jns
sahf
cmc
aam
outsb
pop
popf
enter
inc
pop
mov
add
fldt
lods
xchg
fldt
sub
mov
xchg
iret
adc
mov
add
fistpll
je
mov
mov
jnp
ret
or
mov
cmpsb
adc
loope
inc
inc
sub
stc
ret
pushf
dec
dec
xchg
and
loopne
or
adc
je
scas
push
push
cs
inc
fwait
setno
dec
in
cld
mov
pop
and
adc
mov
cli
mov
je
adc
and
lret
dec
xchg
cmp
out
sub
lahf
daa
xor
cmc
push
fnstcw
sub
ficoml
aam
imul
xchg
aas
loop
test
adc
lcall
sbb
xchg
test
das
and
cmp
pop
loop
jne
adcl
jae
out
xchg
sbb
and
inc
mov
cmp
scas
push
xchg
in
mov
sbb
stos
js
mov
jmp
adc
loopne
loop
inc
push
cwtl
scas
shr
iret
inc
push
mov
push
push
push
adc
lea
jp
out
cld
filds
xchg
lods
cmc
or
xchg
jnp
xor
jecxz
sub
jmp
lods
nop
mov
stos
rclb
adcl
pop
insb
sbb
sbb
dec
push
adc
aaa
or
lods
int3
sub
out
sbbb
out
pusha
mov
push
or
sbb
fwait
clc
or
cmp
insb
ja
lods
cmp
inc
std
xor
out
lods
mov
cmp
mov
loopne
push
stc
cltd
xlat
lock
push
push
jno
sarb
sahf
push
imul
iret
stos
shlb
ds
cmp
sub
mov
ds
movsl
out
pop
jmp
lods
cmp
fwait
nop
jbe
daa
test
fadds
jl
stos
sbb
je
adcl
mov
cmp
sub
or
sub
stc
outsl
sbb
ja
mov
mov
rol
les
xor
stos
sbb
in
jnp
ror
lds
push
pop
flds
repz
fidivrl
pop
pop
hlt
stc
jg
mov
add
or
lock
aam
xchg
aad
mov
sbb
fsubrl
out
xor
and
inc
fwait
jecxz
outsl
test
jnp
repnz
fbstp
push
ud2
jl
and
popf
inc
and
xor
test
outsb
fdivrs
lahf
jne
mov
daa
mov
pop
ja
orb
sarb
mov
sub
jnp
andl
test
dec
sub
adc
dec
xor
pop
insl
push
jmp
adc
lds
push
insl
pop
fdivr
xor
nop
shlb
or
popf
xchg
xchg
mov
iret
cmpsl
popl
adc
aaa
pop
outsl
pop
push
mov
das
adc
jns
mov
dec
cmp
iret
mov
mov
outsl
mov
pop
inc
mov
lods
enter
clc
pop
lea
sub
int3
add
sub
jbe
pop
int3
rcr
daa
mov
xchg
lods
fmull
cltd
add
fwait
loop
push
cmp
sub
stc
dec
xchg
clc
mov
cwtl
mov
loop
cmp
push
push
lret
insb
xchg
fwait
jg
std
cmpsb
sub
add
xchg
popf
xchg
rorb
mov
fcomps
jno
js
xor
xchg
out
shr
dec
sti
jl
lds
addr16
cld
adc
and
push
jl
div
test
xchg
ss
cmp
stc
fisubl
aaa
lds
nop
inc
repz
ret
je
mov
push
mov
test
xchg
xchg
pusha
lret
mov
mov
ljmp
sub
loop
pop
mov
imul
rorl
roll
testb
jl
push
inc
test
loope
xor
sti
stos
add
adc
mov
inc
hlt
jns
adc
jecxz
mov
jl
xor
fidivrs
ret
or
rcl
xor
enter
jmp
jmp
aaa
and
xor
notb
xchg
add
xor
mov
fmuls
dec
daa
js
mov
mov
add
leave
or
or
lret
xor
dec
lret
adc
or
popf
negb
lea
ficoml
mov
add
lods
add
cmp
sbb
sbb
push
into
mov
mov
sbb
sarl
in
mov
or
jae
testb
jns,pn
loopne
jecxz
daa
sarb
popf
fadds
movsb
int
inc
cwtl
push
fmuls
adc
inc
test
mov
inc
out
jne
call
add
dec
xchg
lock
int3
mov
cld
mov
sub
dec
cmpl
mov
sbb
cwtl
fiadds
add
out
jmp
jmp
inc
pop
cld
mov
ss
rolb
xchg
jb
jle
popa
mov
into
mov
sbb
cli
cli
idiv
repnz
adc
cmpsl
das
mov
or
orb
mov
pop
and
shrb
lret
sbb
loop
cmpsb
and
imul
or
scas
inc
fisubs
pushf
mov
cmp
ljmp
test
inc
sub
aaa
or
pop
into
stos
lret
hlt
xchg
add
dec
fsubs
jge
inc
das
call
nop
test
add
cs
loope
sub
ljmp
mov
adc
lret
arpl
mov
stos
mov
movsb
dec
out
pop
or
decb
adc
or
fidivrl
aad
movsb
mov
sub
mov
and
loop
int
or
aas
mulb
enter
test
xchg
out
jo
std
aad
push
pop
xor
in
mov
stc
xor
fbstp
dec
ds
fwait
outsl
xlat
or
sbb
sub
out
mov
test
mov
roll
push
cli
push
sub
cmp
repnz
test
xlat
cmp
dec
sub
mov
lret
in
mov
adc
gs
and
cmp
lahf
shll
mov
push
cmp
fstpl
in
and
insl
xchg
aad
fcoms
pushf
xor
cmc
pop
add
jmp
sub
pop
lret
lock
enter
or
inc
jecxz
aaa
es
xor
ljmp
bound
insl
xor
pop
mov
test
leave
cmp
pop
push
sbb
cs
xor
cli
cmp
aas
mov
int
dec
fdivrp
mov
or
inc
sub
push
scas
std
xchg
aam
popf
jns
pop
xor
cmpsb
rcrl
std
jns
daa
sbb
cli
mov
mov
and
and
add
cs
ficomps
sbb
jb
ficomps
dec
xchg
popa
jmp
push
fsubrl
mov
sbb
xchg
incl
orl
movsb
inc
ret
sub
int3
icebp
cli
movlps
aad
dec
fbstp
or
xor
fs
pop
push
imul
mov
sbb
lcall
sub
ffree
mov
stc
in
leave
dec
xchg
daa
aaa
incl
imul
lret
or
mov
sbb
fdivrl
lahf
dec
pop
push
mov
paddusb
sbb
std
mov
jnp
push
daa
add
inc
in
jb
pop
arpl
gs
out
cwtl
mov
fstps
sbb
sbb
jbe
jecxz
das
mov
cmp
jno
clc
fstpt
rcll
iret
dec
mov
test
cmp
lahf
pop
cwtl
lahf
and
pop
pop
sbb
jns
jge
ds
adc
dec
lret
jmp
addr16
dec
sub
xorb
inc
shlb
lock
test
js
jmp
jbe
es
xor
mov
cltd
mov
adc
test
sbb
mov
loop
push
dec
ds
mov
cmp
mov
aam
cmp
nop
int
ficoms
mov
mov
jle
push
jecxz
mov
jbe
fs
lds
adc
xchg
leave
dec
mov
fs
sub
mov
and
repnz
jne
or
xor
das
rcl
cmp
push
mov
divl
sbbb
mov
lret
fcmovb
inc
jnp
dec
push
mov
imul
push
ss
pop
stc
pop
pop
and
insl
pop
cmpl
cli
cmp
fptan
sbb
mov
adc
push
jg
jmp
loope
cmpsb
or
cmp
cli
and
jp
jg
cmp
movsl
xor
inc
mov
jbe
aaa
jno
test
jle
and
stos
dec
cli
insb
push
lods
push
pop
imul
nop
pusha
mov
push
in
vxorpd
pop
mov
in
das
cltd
je
repz
jnp
lock
adc
lods
and
in
mov
es
sahf
dec
clc
pusha
or
jmp
mov
jp
stos
cltd
or
sub
inc
cmpsl
shll
fnstsw
or
in
cmp
xchg
mov
insl
sub
adc
aam
mov
mov
lret
ucomiss
shlb
sbb
pop
lea
cmp
push
pusha
mov
xchg
in
xchg
int3
roll
jns
cmp
push
push
mov
sahf
dec
cmpsb
fnstsw
jl
inc
mov
jnp
ror
vpslld
call
int3
lods
hlt
ss
dec
xor
int
cmc
jo
mov
dec
popf
jns
ljmp
orl
test
fcoml
or
jae
and
jb
repnz
lods
cmc
sbb
fsubrl
pop
das
icebp
and
mov
jns
fsubrl
mov
aad
add
jl
lods
popf
pushf
cmc
lcall
in
shlb
movsb
outsl
icebp
mov
sbb
and
xchg
mov
push
fcomip
dec
pop
cs
xor
gs
test
xor
dec
xchg
lahf
mov
rorl
outsl
cmpsl
xchg
outsl
jecxz
cs
cmpsb
bound
inc
addr16
dec
test
xchg
cmp
sub
dec
and
aas
and
or
lods
add
mov
push
cmp
fs
rorb
stos
lock
pop
xor
mov
mov
sub
push
dec
cmp
jmp
mov
lahf
shrl
sub
lods
loopne
add
xchg
insb
lret
sahf
ds
adc
mov
lods
or
lret
out
cmp
xchg
jne
out
mov
or
pop
add
push
clc
pop
inc
mulb
pusha
idiv
shr
cld
xor
ljmp
push
inc
mul
push
in
cmp
aaa
movsb
stc
sub
or
test
inc
mov
jge
mov
cmp
cmpb
orb
int
insb
jmp
aam
adc
testl
xor
inc
xchg
jecxz
orb
data16
arpl
adc
xchg
cli
dec
rorb
cmp
push
sbb
sbb
add
aam
mov
dec
inc
mov
mov
test
mov
lea
mov
ret
pusha
lods
xchg
out
ret
fsubl
mov
cmpb
cmp
inc
mov
dec
or
shrl
mov
outsb
cli
movsb
mull
jle
and
sbb
repnz
pop
mov
or
mov
xchg
add
mov
push
mov
stos
sbb
jbe
inc
loope
fadd
clc
jle
enter
sbb
pop
negb
add
icebp
leave
test
push
nop
cmp
shrl
lods
jp
mov
subl
mov
add
call
mov
push
push
sub
adc
xor
jno
inc
dec
insb
mov
test
repz
mov
ja
test
aam
fnstcw
mov
sbb
and
inc
jae
bound
lcall
xor
mov
xchg
mov
adc
test
cwtl
inc
dec
pcmpeqd
sbb
cmp
add
test
movsb
lret
add
mov
daa
hlt
jmp
repz
sbb
jno
pop
ja
cmp
sub
mov
pop
xor
dec
inc
adc
leave
fdivrs
push
lea
ret
sub
xchg
inc
scas
sbb
jnp
xor
or
test
pop
ljmp
repz
mov
push
mov
xchg
sub
dec
jno
sub
and
add
fldt
int
mov
inc
pusha
jno
mov
lock
pop
adc
sbb
fwait
mov
xchg
sbb
jae
ss
dec
or
xchg
jne
push
inc
and
es
adc
adc
out
adc
push
scas
nop
jecxz
lods
js
movsb
daa
sahf
or
movsl
dec
test
inc
and
lcall
sbb
inc
and
xlat
insb
frstor
int
scas
aad
push
loop
test
fbstp
jno
dec
and
insl
mov
and
sahf
aaa
add
sti
inc
mov
std
sbb
mov
cld
jl
faddp
xor
jmp
fs
mov
fbstp
loopne
sahf
lcall
aam
xchg
lcall
push
cs
sbbb
jl
mov
push
mov
inc
addb
jmp
xor
mov
sub
sbb
insb
pushf
push
dec
mov
fdivl
out
sub
jo
mov
sbb
jg
inc
push
adcb
int
xrelease
sbb
dec
pop
sub
arpl
or
xchg
stc
cmp
mov
cmp
push
nop
popf
cmp
fstpl
fistps
sub
cmp
pop
cld
mov
jle
imul
inc
sbb
mov
pop
daa
scas
jae
repz
in
cmp
movsl
xlat
xor
adc
xor
dec
or
sbb
sbb
xor
mov
cmp
rcr
aam
push
outsl
rorl
mov
decb
inc
ja
test
loope
xchg
xchg
js
pusha
mov
dec
test
push
scas
rcrl
xor
fninit
movsl
cmc
mov
add
inc
pop
push
fmul
lahf
jg
mov
test
push
rolb
pop
sub
xchg
adc
xchg
add
pop
mov
cmp
rol
mov
lahf
out
add
or
stc
sbb
mov
add
jno
xor
lsl
mov
xchg
cs
lcall
jge
rorb
ljmp
sbb
mov
lods
cmp
mov
mov
sbb
jne
push
scas
fisttpll
ret
push
icebp
xchg
stos
cmp
xchg
dec
pushf
out
lods
addb
xchg
or
data16
jno
popf
inc
je
out
adc
jno
push
adc
sbb
lahf
push
adc
cli
nop
aaa
dec
test
pusha
push
sbb
add
ja
mov
lods
or
int
lret
sahf
jp
in
mov
cmp
xchg
ljmp
pop
stos
lock
lds
sbb
mov
cwtl
lock
fcomps
pop
adc
inc
lcall
lock
jp
mov
xor
mov
jb
fcomps
mov
xor
dec
and
shlb
mov
xchg
insb
jg
cld
push
enter
popa
outsl
sti
xchg
inc
xor
and
pop
mov
mov
jl
push
orb
add
jg
cmpb
jno
gs
lock
sbb
daa
cmp
xchg
xchg
inc
fcmovu
stc
test
push
pop
pop
mov
rolb
and
sbb
cli
inc
sarb
lea
loopne
movsl
dec
hlt
outsl
arpl
jecxz
and
fdivs
int
mov
add
ror
mov
cmpl
data16
xor
stc
arpl
aam
mov
jno
popa
inc
addr16
dec
push
sub
out
push
les
cmp
sub
mov
mov
push
in
inc
sahf
imul
mov
es
xor
jb
mov
dec
sub
push
imul
pop
xor
dec
xor
mov
imull
mov
pop
and
jno
imul
sbb
loope
inc
pop
mov
arpl
out
pop
mov
mov
movsb
sub
dec
rcrb
aas
push
push
push
mov
cs
mov
xchg
cltd
xchg
idivb
sbb
cwtl
dec
sbb
lahf
xor
out
in
test
les
mov
pusha
xchg
pop
add
sbb
mov
clc
and
mov
cmp
mov
and
or
aad
cmp
push
data16
and
mov
fisubrl
xchg
cmp
sbb
push
jo
test
divb
mov
jmp
je
out
xchg
aaa
adc
loopne
aad
push
out
sbb
add
mov
pop
xor
loopne
clc
movsb
push
adc
shlb
inc
loop
into
std
dec
daa
pop
outsb
adc
je
jne
dec
mov
xchg
and
jmp
clc
pop
cmp
addr16
cmp
push
cmp
rcr
js
ds
mov
or
gs
or
add
jns
xchg
lea
inc
pushf
stos
test
jle
lock
icebp
repz
mov
push
jbe
cmc
mov
cmp
aam
sbb
pop
pushf
dec
dec
mov
lea
out
push
push
enter
pop
jmp
scas
mov
jmp
xor
jns
cmp
jns
jno
sbb
xchg
push
lods
xor
xchg
leave
test
or
stos
jns
jmp
scas
test
rol
lahf
xor
fidivl
rclb
loop
shl
jo
call
cs
push
js
xchg
fdivr
add
fisubrs
testl
aam
inc
test
out
data16
scas
outsb
dec
pushf
icebp
fsubp
push
movsb
rolb
adc
push
mov
jecxz
arpl
pushl
push
cmp
adc
or
stos
repz
fistpl
sbb
imul
mov
mov
mov
mull
rorb
clc
imull
mov
lods
inc
lcall
push
sbb
sbb
cltd
fldl
fstpt
adc
mov
mov
es
lods
mov
cs
xchg
adc
sub
jns
ljmp
bound
sti
cmp
adc
add
fildll
iret
mov
stos
mov
cltd
clc
add
bound
pop
inc
sbb
out
cmp
pop
test
push
mov
sbb
roll
aad
adc
adc
loop
mov
adc
push
mov
pop
or
mov
addr16
mov
xor
ss
push
sub
or
mov
xchg
sub
movsb
adc
jb
addb
mov
dec
mov
add
pop
and
xchg
scas
ss
lret
ds
dec
lods
fldt
pop
rcr
out
mov
call
adc
mov
outsb
mov
push
pop
pop
xor
push
push
in
mov
mov
jmp
push
mov
out
nop
jmp
add
mov
in
pop
pop
pop
jp
fcmovb
xchg
sub
mov
push
mov
ret
xlat
lods
lcall
repnz
xor
andb
dec
pusha
in
mov
sub
mov
sub
fs
fisubs
push
fidivs
loop
pop
hlt
fcompl
jns
mov
imul
lock
xchg
jns
idivl
out
lahf
mov
mov
adc
adc
mul
sbb
xchg
ljmp
push
lret
mov
js
or
mov
cltd
inc
test
cmp
lret
in
push
stc
mov
mov
int
clc
jge
pop
jne
add
cmp
sti
add
pop
ret
add
mov
fstps
imul
mov
mov
popf
ss
mov
adc
push
out
xchg
cli
lock
jmp
test
mov
pusha
cmp
test
dec
mov
jne
int
xchg
mov
enter
out
cmp
mov
cmp
sbb
call
rcr
sub
test
cmp
dec
inc
cmp
ss
add
xchg
pop
dec
enter
mov
stos
sbb
jp
cmpsb
daa
movb
xchg
loope
mov
lahf
and
movsb
xchg
outsb
jo
sub
iret
mov
or
js
ja
jle
and
pop
into
mov
pop
std
cmpsb
dec
imul
pop
cmp
jmp
mov
mov
sub
fiadds
shr
mov
movsb
ja
mov
clc
adc
xor
repnz
mov
add
cmp
aas
jmp
xchg
sub
insl
popa
test
xlat
and
lcallw
xchg
xchg
add
or
fsubrs
mov
stos
test
sarb
xchg
aas
push
jmp
popw
push
mov
ret
lods
aam
fs
aaa
and
sbb
stc
add
xchg
lock
sbb
pop
adc
and
jno
ret
pop
sub
inc
or
cmp
leave
imul
enter
inc
inc
pop
dec
jbe
call
in
clc
iret
addr16
imul
lods
or
sti
adc
leave
cmp
sub
push
jbe
pusha
insl
insb
mov
inc
outsb
mov
aam
jl
fstp
xlat
imull
out
int3
mov
adc
jnp
push
fisttps
hlt
mov
fisubl
and
push
push
repz
aas
sbb
lret
imul
lahf
or
inc
mov
jp
mov
lea
ficompl
fdivrs
mov
xchg
test
push
cmc
movsb
shl
mov
cwtl
rcl
popa
shl
push
leave
push
enter
add
push
imul
adc
cli
adc
lret
xchg
xor
sub
lret
repz
out
push
xchg
stc
test
pop
push
push
vphaddbq
out
imulb
loop
mov
jl
das
ss
test
fcos
mov
imul
xchg
lret
clc
mov
fstps
aad
mov
popa
push
jbe
push
jo
lods
or
dec
fcos
mov
cltd
in
mov
xlat
call
jno
enter
out
test
mov
outsl
sbb
fstps
out
or
scas
pop
push
test
or
xchg
call
jbe
and
mov
fwait
js
ja
xor
aad
bound
pop
and
in
mov
mov
mov
jbe
or
addl
dec
mov
test
adc
cltd
pop
adc
adc
imull
push
cltd
shrl
xor
or
push
add
pop
xor
mov
in
adc
cmpsl
jb
cli
mov
xor
enter
sbb
push
aas
mov
jae
dec
xlat
jae
inc
push
aad
rclb
jae
js
adc
dec
mov
test
add
enter
dec
mov
ds
outsl
in
pop
pmuludq
sahf
mov
mov
and
into
dec
movsb
sti
mov
sbb
jp
jo
stos
ds
pusha
dec
and
add
int3
cmp
mov
jle
inc
sbb
or
hlt
rcll
add
icebp
lret
mov
jno
xchg
ja
and
in
cmpsb
or
outsl
stc
add
loopne
insb
mov
mov
stc
cld
ss
xchg
xor
dec
sub
push
push
lret
flds
out
stos
ss
fs
push
and
push
ja
cwtl
movb
sahf
je
cmp
mov
push
jl
pop
idivb
push
cmpsb
mov
leave
push
xchg
cmp
aaa
divb
inc
push
pop
mov
pop
push
fimull
dec
sub
adc
xor
insb
jle
fcompl
mov
sti
mulb
test
xchg
iret
rcll
push
repz
mov
inc
mov
out
dec
jl
or
sub
mov
lahf
mov
sbb
out
sub
or
adc
out
movsl
cli
pop
cmp
xchg
push
aaa
mov
sub
clc
xor
in
gs
pusha
and
or
pop
aam
xchg
pop
lods
and
out
inc
popa
cli
nop
mul
test
mov
mov
loop
xor
pusha
dec
shufps
in
lock
jo
addr16
and
int
or
imul
ret
sub
mov
stos
push
ljmp
outsl
cmp
push
sbb
faddl
push
outsl
ror
xchg
es
test
pop
xchg
and
test
fnstsw
cmc
and
or
cld
jns
mov
popf
cmp
cmc
fwait
aas
and
and
pop
mov
dec
jp
pop
in
lock
not
cmp
mov
mov
jnp
cmc
int
and
jp
pusha
fistpl
sbb
dec
shrl
xchg
aam
in
jnp
pop
out
xor
cld
mov
jbe
int3
sbbb
sub
mov
imul
out
pusha
cmp
jno
and
xor
cli
call
fcoms
repnz
lods
mov
popf
pop
mov
cmpsl
cmp
inc
xor
add
mov
cwtl
push
in
mov
enter
mov
lea
push
lret
sarb
and
fmul
jge
and
mov
push
cmp
push
sub
or
dec
push
push
nop
scas
xchg
das
jae
or
push
leave
subb
jl
cmpsb
mov
adcl
stc
cmp
push
dec
pop
mov
sti
std
pop
mov
out
pop
push
leave
fmul
pushl
pop
jg
lock
and
pop
jne
inc
cs
dec
fisubs
dec
std
cmp
loop
jge
push
mov
jmp
xchg
dec
sbb
sub
push
inc
and
lret
pop
dec
pop
jg
inc
popa
inc
insb
in
push
pop
data16
test
cmpps
xchg
pop
sbb
lock
jmp
lds
ret
dec
dec
mov
ljmp
test
cmp
inc
imul
inc
outsb
xor
ret
outsb
pusha
in
mov
inc
pop
jg
inc
fnstenv
add
cmp
inc
cmpl
dec
xor
daa
aaa
sub
aam
xor
push
outsb
cmp
std
iret
or
pop
out
sbbl
and
test
dec
scas
lods
mov
repnz
in
push
mov
add
sub
iret
inc
ljmp
inc
adc
xor
and
push
popf
adc
add
sti
mov
lahf
lds
cmp
fistl
inc
push
mov
jl
mov
call
push
mov
add
in
scas
mov
sbb
cs
mov
pusha
push
adc
fldt
push
adc
push
sbb
pop
aaa
mov
shll
pop
sbb
sbb
jg
insb
jo
int3
sbb
jp
pop
je
out
scas
cmp
mov
aam
test
outsl
repz
mov
imul
jae
mov
rorl
or
lcall
jmp
xor
mov
inc
divl
jle
inc
lea
xor
sarb
mov
fdiv
outsb
sbb
fnstcw
cltd
inc
jl
xchg
clc
aad
sbb
xor
jg
idivl
and
rcl
xchg
in
movsb
sti
int3
lds
das
imul
aas
xorl
push
dec
mov
inc
fsubrp
fwait
aas
jnp
scas
mov
call
push
aad
and
fdivr
cmp
inc
mov
xor
adc
lds
xor
aad
mov
data16
ret
lods
std
cmpsl
jecxz
sahf
es
gs
sub
popa
jecxz
pop
add
and
and
jge
mov
pop
lcall
das
nop
imul
or
mov
mov
pusha
dec
test
sti
mov
mov
lods
popf
cmp
xchg
ss
inc
dec
je
cmpsb
inc
push
js
aaa
imul
sub
push
insl
aaa
mov
inc
aad
push
aas
cmp
cs
dec
mov
adc
mov
mov
les
adc
mov
ret
push
or
xchg
mov
cmp
sub
inc
jg
ror
add
dec
push
add
int3
aaa
cmpsb
cmp
out
jae
mov
xchg
mov
and
pushf
or
mov
sub
push
or
out
fsubrl
and
mov
pop
and
clc
iret
jne
xor
negl
stc
sbb
popf
ret
or
div
shll
mov
adc
jb
popa
mov
fsts
movsl
push
loop
xlat
xchg
inc
sbb
lret
sub
xchg
mov
cltd
xor
mov
adc
outsl
pop
jp
jmp
or
iret
xchg
push
outsb
ret
mov
mov
aam
clc
xchg
pushf
aaa
xchg
mov
xor
test
xchg
ds
push
ficompl
push
leave
mov
push
out
js
mov
adc
cmpb
jbe
jno
fisttpll
jge
hlt
xchg
jge
mov
aam
in
pop
cmpsb
sarl
mov
jl
pop
ja
pop
ljmp
lods
xor
xor
mov
orb
sbbb
cltd
out
aam
test
scas
dec
or
pushw
xchg
int
push
jmp
push
sbbl
pop
and
mov
lahf
jns
test
aaa
adc
mov
inc
jl
mov
dec
jae
lcall
test
push
lahf
and
sub
loopne
add
pop
inc
adc
in
std
dec
sub
push
cmp
test
mov
sbb
pop
ja
rorl
pushf
push
xor
outsl
push
adc
fdivs
pusha
dec
stos
lret
mov
lcall
mov
lahf
mov
pop
jae
sub
cmpsb
scas
mov
xor
mov
mov
add
adc
dec
aad
jle
mov
js
dec
out
stos
push
psubsb
cmp
movsl
push
adc
inc
dec
inc
test
ljmp
int
mov
stc
add
insl
push
into
xorl
lods
xchg
xor
popl
in
fwait
popf
nop
push
push
in
mov
loop
rcll
or
cltd
mov
stos
mull
cmp
push
jl
xlat
push
mov
mov
xchg
pusha
stc
sub
adc
pop
pop
cwtl
shrb
dec
fisttpll
inc
ds
xor
lahf
insb
leave
inc
jge
xor
mov
xor
pop
stc
jbe
out
and
dec
clc
stos
jno
and
or
xchg
mov
cmp
shll
add
mov
pusha
dec
out
in
bound
sub
cmp
inc
adc
or
je
in
push
loope
lahf
js
hlt
pop
test
lods
scas
mov
sub
loopne
mov
aam
pop
sbb
insl
pop
sti
hlt
dec
mov
sbb
lea
clc
push
hlt
lds
xchg
pop
mov
inc
ljmp
ja
mov
leave
inc
jnp
fldenv
in
or
and
dec
inc
or
out
negw
fs
push
and
out
pop
adc
ret
or
mov
loope
insl
dec
xchg
shrl
popf
xchg
gs
xor
ret
gs
popw
int3
bound
inc
xor
or
push
cli
int
scas
ja
lret
xor
cmp
in
mov
stos
mov
fcoml
imull
loope
jl
in
and
xor
out
lret
lock
xchg
in
push
hlt
into
cli
int3
cmp
fistps
std
pushf
mov
rorb
insb
pop
cmp
call
nop
insb
xor
popa
sub
cli
int3
push
inc
sti
mov
push
adc
aad
arpl
inc
data16
pushl
out
movl
jno
cmp
push
hlt
imul
push
test
inc
cmp
inc
mov
dec
sti
sar
cs
xor
xor
sbb
loopne
mov
jl
shlb
sarb
inc
mov
gs
imul
jne
mov
std
insl
mov
cmpsl
insb
sahf
lcall
jo
dec
pop
dec
out
pop
cmp
push
mov
adc
sbb
add
loopne
xor
push
sarl
sub
jge
mov
mov
out
lea
test
sbb
dec
push
push
add
mov
jg
push
xchg
lods
lods
ds
xor
lcall
hlt
clc
mov
mov
sub
test
sarb
or
add
insl
add
mov
xor
xor
xchg
outsb
jbe
stc
lret
aaa
mov
cltd
cmpsl
mov
jne
mov
popf
mov
in
pushf
xchg
add
shll
sbbb
push
inc
paddusw
inc
push
push
push
mov
inc
dec
fidivs
push
int
lret
cmp
icebp
cmpsl
pop
mov
cwtl
dec
sub
aaa
pusha
or
xchg
mov
xabort
jae
iret
inc
loopne
sahf
push
push
sub
sbb
out
adc
fisttpl
jmp
dec
pusha
dec
data16
inc
pop
in
mov
add
stos
mov
or
sub
stos
jg
push
je
cmc
push
mov
stos
sar
leave
imul
mov
repz
aad
add
fldl
cld
push
push
aad
movsl
inc
xor
rcrl
adc
or
fisubs
fldl
out
and
adc
xor
daa
sbb
and
push
mov
iret
pop
jmp
ficompl
shr
and
add
cmc
sub
out
push
aad
push
sbb
cmp
xor
pop
xor
gs
fmuls
insl
mov
dec
mov
jb
pop
addb
into
jg
out
adc
add
adc
pop
push
and
sarb
push
addr16
stos
outsb
xlat
pop
cmp
cld
jbe
pop
lcall
cmp
push
adc
aaa
arpl
lods
jecxz
aam
mov
sbb
mov
mov
fs
aam
jl
ss
clc
ds
jae
mov
sbb
mov
add
out
xor
cmp
mov
add
fstpt
int
xor
cwtl
cmp
arpl
xchg
adc
fdivrl
add
lret
and
into
and
addb
cmp
decb
xor
pop
and
inc
dec
jp
in
add
movsb
mov
fwait
in
mov
sbb
or
inc
sbb
sbb
add
addr16
xchg
ret
pop
pop
mov
cmc
stos
xchg
push
push
iret
call
adc
pusha
dec
mov
and
ljmp
les
inc
ljmp
arpl
arpl
jp
xchg
jae
ret
mov
mov
outsb
mov
pop
ss
push
movb
sbb
lcall
xchg
addr16
sub
and
mov
ja,pt
ljmp
xchg
or
aad
fnstcw
mov
and
insb
push
jbe
jnp
jg
daa
and
pop
stos
loop
xchg
mov
mov
rclb
ss
xchg
fmuls
test
movsl
or
loop
fnstsw
push
das
andb
aad
xchg
sbb
push
sbb
stos
push
gs
ror
enter
inc
push
aaa
mov
movsl
mov
jae
inc
or
fcmovnbe
sub
dec
imul
sub
or
ljmp
push
fwait
mov
movsl
or
popa
pop
push
bound
mov
fiadds
cmp
push
std
push
int3
das
push
insl
xor
xchg
in
pop
mov
jg
push
ja
jp
out
test
pop
pop
push
divl
xchg
sbb
dec
sbb
aam
shrl
xchg
mov
inc
pop
mov
addl
ja
call
adc
xor
xor
mov
repz
dec
pop
hlt
pop
cwtl
stc
inc
scas
mov
mov
loopne
adc
adc
ret
les
cmp
xchg
mov
test
gs
and
fs
mov
sub
mov
xchg
mov
mov
and
cmpsb
lret
fcompl
lock
cwtl
fwait
inc
movsl
xchg
in
dec
cs
jne
aam
pop
outsl
adc
js
pushf
add
aaa
pop
cmpsl
add
insb
out
sub
mov
dec
mov
sahf
adcb
lret
int
mov
mov
hlt
dec
jb
lcall
fisubrl
nop
dec
scas
popf
in
mov
sub
clc
out
or
add
in
les
dec
mul
int
shrb
dec
cltd
loope
std
bound
lret
sub
inc
loope
std
loope
repz
and
sub
out
lret
sbb
xor
nop
inc
add
popf
mov
addr16
adc
mul
fs
data16
cld
jl
jbe
cwtl
xor
cmpsl
and
scas
repz
push
fwait
push
stc
push
andl
lahf
jnp
hlt
sub
mov
pushl
and
and
jge
xor
popa
insl
dec
xchg
xchg
xchg
inc
js
outsl
ljmp
inc
iret
or
mov
lret
mov
in
shlb
dec
es
into
test
jo
popf
pop
sub
cli
rcll
inc
lcall
repnz
pop
jbe
sbb
jno
pop
pusha
mov
out
mov
bound
xchg
cmp
sub
cld
cmc
cmp
mov
mov
or
adc
cmp
and
cmp
shrl
add
icebp
xchg
mov
cwtl
jge
push
sbb
jb
pop
jns
dec
pusha
pop
fucompp
jle
push
dec
xor
rcrl
sti
jno
inc
mov
hlt
xor
imul
ja
out
mov
sbb
xchg
push
loop
push
cmp
adc
mov
lcall
popl
mov
push
push
cmp
mov
jle
ds
mov
inc
xchg
mov
jb
lcall
push
sub
pop
pop
cmc
pop
aad
jle
test
test
cmpsb
sub
dec
rcrb
jg
add
jnp
add
xor
insb
mov
test
jg
enter
cmp
add
mov
jp
sub
and
inc
mov
sub
cwtl
mov
jp
or
pop
mov
stos
aaa
sarl
push
push
call
fwait
cmp
push
imul
stos
dec
and
inc
fnstcw
je
adc
jl
test
daa
dec
add
insb
hlt
lods
movsb
sub
mov
ss
loopne
mov
xchg
sbb
lcall
and
leave
scas
cmpb
or
aam
test
scas
sub
ret
and
jge
rcrb
or
mov
dec
jae
xor
loop
inc
cmp
inc
bound
pop
jno
lods
jl
addr16
sbb
and
mov
mov
pop
fdivs
ds
in
xchg
mov
cwtl
popf
std
dec
xchg
add
mov
pop
orl
xchg
sub
shr
rcl
pop
lahf
sarb
scas
fisubl
cmpb
or
cmp
jecxz
pushf
lods
adc
xor
cltd
inc
mov
pushf
pop
stos
jb
mov
icebp
lods
adc
imul
clc
pop
jnp
popa
add
mov
and
push
in
adc
in
sbb
adc
xchg
xchg
cltd
addr16
lods
ret
addb
int
inc
dec
aad
data16
cmpsl
push
neg
das
movsl
xor
mov
mov
hlt
or
addl
imul
add
and
scas
pop
test
test
in
rep
xor
pop
lret
pop
push
lea
mul
cli
add
xor
das
lcall
inc
add
pop
jp
mov
cmp
enter
js
jno
jnp
jecxz
roll
or
insb
add
push
in
or
xchg
push
sub
ljmp
push
xchg
xor
mov
jp
outsl
add
cmpxchg
ja
pop
into
and
cmpsl
xor
xlat
imul
lahf
pop
cwtl
dec
add
push
push
inc
jbe
loop
mov
cmc
out
pop
xorl
cmp
push
mov
push
sub
mov
and
enter
jo
push
call
jae
int3
xchg
testl
cmp
jmp
out
pop
out
push
adc
out
and
scas
lods
mov
jb
mov
ret
movsb
les
push
xchg
int
ret
mov
in
inc
rcll
mov
mov
and
mov
ret
cltd
cmpl
xchg
push
pop
inc
fiaddl
mov
sti
inc
lret
in
add
popa
pushl
push
sbb
out
jae
pop
pop
jmp
jp
adc
add
out
pop
out
pushf
xor
mov
shl
cmpsb
loope
inc
subb
cmp
lret
inc
test
push
sbb
xchg
cmpsb
int
xchg
mov
fstpl
jbe
mov
add
pop
jp
add
and
mov
aas
cmp
popa
or
cltd
ret
mov
push
movsb
xchg
push
je
inc
add
jns
dec
mov
mov
jno
sbb
enter
sub
int
ret
mov
fidivrl
insb
xchg
push
jg
adc
mov
sub
xor
mov
cmp
and
cmpsl
push
cmp
inc
inc
data16
xchg
call
repnz
scas
pop
add
adc
mov
sbb
mov
dec
fdivrl
and
mov
hlt
mov
lods
sbb
xor
or
loop
push
andl
xor
rclb
pushf
addb
mov
pushf
inc
lds
sub
dec
cmp
int
mov
gs
out
mov
into
mov
test
fiaddl
stc
mov
mov
cmpb
mov
and
popf
sti
jne
outsb
decl
dec
scas
daa
sbb
xchg
das
out
xchg
push
rorb
je
lahf
or
test
test
dec
and
mov
sbb
movsb
push
jmp
dec
stc
js
shl
mov
pop
dec
jmp
stos
push
mov
dec
mov
je
jnp
int3
scas
sar
or
dec
cmp
or
xor
lret
out
mov
clc
int3
dec
test
push
xchg
jnp
jo
movb
gs
sub
leave
lcall
mov
push
dec
das
movsb
mov
xor
push
subb
sbb
xchg
pop
mov
mov
gs
inc
cmp
mov
fistps
mov
sub
mov
dec
imul
sbb
cld
loopne
and
or
jnp
fwait
mov
mov
icebp
mov
scas
dec
sub
ss
pop
jmp
sarl
dec
icebp
jmp
push
gs
xchg
fildl
or
inc
mov
mov
adc
push
in
sbb
mov
sbb
adc
pop
xlat
lahf
imul
je
jbe
cmpsb
scas
fisttpll
xlat
sbb
ss
fs
dec
lods
inc
icebp
icebp
scas
xchg
outsb
mov
aam
adc
cltd
sbb
push
repnz
push
imull
fwait
mov
pusha
adc
in
fcompl
push
imul
xor
add
loopne
sub
popf
mov
subl
mov
imul
cs
xor
xchg
mov
lods
cmpb
fldenv
or
adc
xchg
push
jl
lock
insl
or
insl
loopne
xchg
insb
fwait
add
testl
pop
mov
mov
pop
xchg
pop
test
dec
movsb
fwait
sbb
cmp
push
cmp
xor
shl
push
rolb
jp
cli
loope
repnz
rcll
mov
push
out
cmpl
xor
out
sarl
jge
scas
mov
jg
dec
sub
sbb
insl
fisubrl
jl
dec
sti
repnz
inc
jno
out
test
jecxz
mov
xchg
pop
dec
cli
mov
mov
imul
mov
jl
enter
loope
enter
stos
je
mov
loop
or
sub
stos
mov
mov
sbb
jne
loopne
inc
dec
and
loop
adc
rcrb
enter
mov
mov
mov
addr16
xor
test
xor
loope
push
addl
rcll
pop
lahf
cwtl
ficoms
cmp
xor
jle
or
push
mov
nop
or
adc
jge
inc
adc
test
add
test
jl
jns
popf
dec
push
ss
xchg
sbb
jnp
jo
loope
jle
insl
insl
inc
push
cmp
xor
popa
push
hlt
loope
xchg
push
adc
loop
mov
add
mov
enter
sbb
add
or
sbb
mov
xchg
xchg
jb
xlat
or
stos
jmp
mov
inc
lods
rcl
xchg
mov
test
mov
clc
leave
insl
xlat
inc
outsb
es
jne
dec
pop
pop
mov
jno
sub
fwait
stos
iret
jl
out
out
ret
push
mov
cmp
lcall
and
xchg
lret
je
arpl
add
push
mov
mov
fstpl
ret
mov
ss
adc
and
add
jmp
sub
adc
nop
lods
imul
or
aam
and
push
std
adc
dec
mov
and
mov
inc
xor
pop
loop
notl
mov
ja
pusha
mov
aam
out
inc
dec
xor
fcmovnbe
out
call
mov
jo
or
js
arpl
jbe
ret
xor
push
sbb
bound
out
sub
sbb
popl
inc
jne
dec
pop
std
sahf
mov
xorb
xor
int3
movsb
lcall
gs
cs
cli
loop
or
sbbl
jb
inc
mov
bound
imul
mov
bound
sbb
push
push
pop
mov
cmp
dec
iret
pop
mov
cmp
fidivs
xorl
std
inc
pop
xchg
rcrb
xchg
test
xor
push
jmp
mov
cwtl
loope
xlat
mov
adc
out
inc
insl
insb
clc
out
add
in
sahf
mov
and
ret
lcall
inc
imul
js
cmpsl
fmuls
and
fcomps
aaa
pusha
aas
jge
rcll
imul
andb
inc
insl
movsb
xlat
fcmove
lods
insb
test
cvtpi2ps
push
repz
mov
add
pusha
cltd
movsb
in
jle
cld
cmp
xchg
cmc
insl
rorb
mov
aam
scas
sahf
fidivrl
into
insl
or
pop
shrl
mov
cmp
nop
fnstsw
pushf
pop
xchg
or
add
cmp
daa
ret
push
fs
and
negb
cmp
push
fsubr
pop
push
ret
mov
fildll
aad
push
in
or
mov
mov
hlt
push
xchg
inc
mov
cmp
aas
testl
jmp
out
adc
shlb
push
add
mov
cmp
popf
sbb
or
sub
jle
sbb
jge
daa
ds
push
shl
insb
stos
dec
add
fcmovnb
movsb
pusha
push
inc
mov
scas
dec
cmp
scas
insb
scas
jnp
shlb
jmp
into
xor
and
testl
fidivrl
inc
cmp
inc
jge
fiadds
ffreep
mov
or
cmp
mov
mov
outsb
push
push
cmpsb
add
mov
and
xor
dec
sub
rolb
shlb
push
mov
les
jbe
out
xor
je
cwtl
fldpi
sbb
idivb
sahf
bound
push
adcl
sub
jge
adc
mov
mov
mov
orl
outsl
jo
push
pop
fwait
pop
notl
pop
jmp
adc
les
pop
ss
dec
fldt
scas
mov
cmp
mov
mov
cli
mov
xchg
aam
mull
inc
mov
arpl
arpl
cltd
sub
mov
pusha
das
test
movsb
mov
inc
adc
test
xchg
xor
aaa
jns
popa
mov
dec
xchg
dec
out
out
xor
xchg
call
rcrl
cmp
and
cmpsl
and
lea
and
lods
outsl
scas
mov
xchg
test
lods
test
leave
outsl
pop
dec
outsb
int
lods
js
out
mov
jp
imul
inc
mov
cmp
inc
add
xchg
sub
sti
fwait
add
xchg
push
mov
orl
rolb
inc
dec
fmuls
addr16
stc
xor
mov
inc
dec
shl
mov
fisubrl
shrl
daa
or
outsb
scas
faddl
out
pop
sahf
aaa
sbb
jo
jmp
in
cmp
icebp
jl
jb
jae
in
push
pushf
les
decl
and
push
dec
inc
cld
repz
pop
sbb
fisubrs
pop
mov
xor
and
inc
lret
cmp
lahf
arpl
aad
nop
mov
lods
loopne
sbb
idiv
xor
adc
add
cs
andl
sub
mov
ret
and
mov
dec
and
mov
lds
inc
lods
mov
push
fst
push
jno
ljmp
jne
outsb
stc
pop
inc
faddl
cmp
test
ja
lea
ja
scas
aaa
jmp
les
inc
cmp
xchg
cmp
mov
popa
lret
sbb
mov
push
sub
scas
pop
mov
lock
mov
inc
mov
mov
shll
mov
cmpsl
outsb
mov
mov
push
pop
sbb
pushf
xor
mov
inc
xor
idivl
inc
mov
gs
call
mov
scas
mov
fadd
mov
les
data16
push
daa
fldcw
jp
jmp
jle
push
add
add
cmp
xchg
sub
insb
outsb
or
inc
enter
push
dec
xchg
xchg
jp
aas
cmpsl
in
cld
aaa
movsl
gs
ret
insl
cmp
or
pusha
add
fsubrl
daa
ret
scas
push
pushf
rcl
shlb
faddl
sub
aam
sub
in
sub
lds
add
addr16
aad
hlt
leave
std
ja
mov
or
or
mov
clc
mov
sub
cmp
xchg
test
push
inc
test
pop
pushf
lock
dec
jno
dec
in
gs
divps
xor
or
test
scas
adc
lcall
ss
mov
notl
daa
ret
ljmp
sbb
aad
cltd
js
outsb
adc
incl
jo
pushf
xor
pop
lock
cwtl
dec
fs
lahf
mov
cmpsl
mov
out
pop
jl
int3
int
mov
xchg
jae
dec
ret
sbb
nopl
cltd
mov
pusha
jg
ret
push
pushf
jb
mov
sbb
mov
lock
pop
or
enter
push
int3
mov
cmpsb
mov
stos
inc
leave
inc
lock
iret
xchg
movsb
pop
aas
add
cs
sub
mov
sbb
and
sbbb
in
into
aam
add
lea
push
add
dec
mov
jb
mov
enter
or
leave
inc
mov
push
cmpsb
andb
add
movsl
fcmovnb
stos
test
loopne
and
ret
fldl
mov
or
sub
popf
xor
fcmove
mov
out
enter
xor
aaa
mov
in
test
mov
das
std
cmp
sbb
jle
jge
repnz
lods
push
cltd
xor
out
arpl
mov
mov
stos
loop
popf
pop
lahf
mov
push
cwtl
dec
int3
jo
jl
rol
mov
push
stos
jae
mov
clc
call
dec
adcl
cmp
psubb
sbb
scas
ljmp
dec
ds
mov
or
outsb
insb
dec
mov
jns
and
mov
jae
mov
jo
jne
jp
add
jmp
jle
jbe
int3
std
sub
jne
cmpb
push
nop
das
mov
sbb
call
push
cli
mov
jns
jge
inc
push
sub
lds
push
lcall
pop
fsubrp
lret
mov
or
cwtl
dec
mov
pop
inc
aas
outsb
pop
add
in
push
test
vmwrite
aas
roll
mov
iret
in
and
pop
sub
je
movsb
xor
or
jne
cmc
dec
and
loop
push
pop
add
test
inc
decb
pop
out
mov
fisttpl
mov
push
fiaddl
dec
mov
test
or
xor
add
out
and
and
add
ja
cmp
jae
mov
clc
cmpb
jno
mov
out
ljmp
sub
adc
jmp
jge
in
repz
sub
mov
add
insb
mov
or
rolb
clc
lock
in
lahf
mov
out
xor
lods
lcall
jle
test
jnp
add
ficompl
cmp
fdivrl
jae
or
inc
pop
lea
mov
in
loop
imul
enter
inc
or
inc
arpl
push
mov
pop
mov
pusha
shll
loope
sbb
rcll
inc
sbb
aaa
jnp
and
xor
ret
adc
xor
lods
push
in
mov
es
sahf
insb
leave
lahf
xchg
push
lods
les
and
fxch
ret
xchg
imul
in
rcr
out
fbld
xlat
nop
pop
sub
arpl
test
mov
mov
jmp
cmp
adc
imul
sbb
nop
add
cmpsb
add
push
mov
ret
testb
popa
jp
shr
mov
loopne
pop
mov
jmp
aaa
mov
dec
mov
lds
cld
stc
gs
test
mov
push
cmp
xchg
lcall
fdivrs
fsubl
mov
rolb
test
stos
xchg
stc
mov
jb
inc
pop
or
test
mov
int3
sti
lock
popa
test
scas
in
outsl
popa
cmc
inc
jo
sbb
push
aam
notl
cmp
and
push
xlat
cmp
aam
mov
test
out
out
xor
call
xchg
and
test
pop
inc
mov
mov
jmp
dec
ss
jo
cmp
fsubl
test
cmp
xchg
xchg
jp
hlt
push
cmp
outsb
imul
and
pop
push
subl
dec
lret
repnz
dec
fnstsw
xchg
jno
pushf
sub
gs
pop
mov
imul
in
addl
mov
sub
mov
ret
mov
repz
pop
loopne
mov
int
add
cmp
or
fstpt
and
xchg
jb
fdivrs
sbb
and
insb
popl
jnp
icebp
inc
add
xor
sbb
imul
dec
outsl
in
sbb
ret
mov
out
in
cwtl
or
adc
repz
push
jns
mov
add
inc
adc
ja
sarl
dec
mov
fdivrs
and
push
loope
cmp
adc
mov
push
sbb
cmp
test
sahf
xor
xchg
jb
jmp
das
cld
ss
sbb
sub
jbe
xchg
loop
test
lea
or
xchg
test
cmp
sbb
xchg
xlat
pop
call
dec
push
gs
dec
dec
ja
icebp
and
stc
and
or
shr
inc
shrl
out
dec
fcoml
push
jne
loop
pop
sbb
dec
mov
dec
and
lcall
call
jno
add
sub
lahf
ds
daa
xchg
mov
iret
fs
mov
inc
sbbl
enter
out
dec
fidivs
clc
dec
jl
jne
test
inc
mov
add
mov
ret
arpl
or
int3
cmp
mov
ret
push
dec
lock
cmp
mov
cltd
xchg
cmp
inc
sbb
imul
mov
scas
adc
cwtl
mov
push
adc
and
xlat
and
push
xor
cmpsb
xchg
cld
jae
xor
mov
mov
popf
adc
dec
mov
jae
lods
pop
inc
insb
adc
or
cmp
leave
xor
movsb
stc
in
mov
push
mov
adc
leave
sub
ljmp
data16
lods
mov
in
dec
dec
and
mov
mov
pop
lods
iret
lods
cmpsb
push
and
jne
jno
mov
scas
and
cli
in
dec
cmc
sub
dec
xchg
out
loop
orl
push
xor
inc
inc
hlt
cmpsb
cmp
or
je
or
add
xor
ret
xchg
mov
iret
icebp
je
mov
dec
pop
mov
jbe
shlb
inc
or
imull
popa
inc
push
jns
test
std
insl
lahf
pop
xorb
mov
arpl
out
int
jmp
lock
add
fcomps
mov
aaa
test
shlb
arpl
or
adc
add
and
lods
or
lahf
inc
xchg
mov
mov
fistps
push
inc
sbb
ret
xlat
lock
xor
push
into
enter
loopne
ret
ret
inc
push
sbb
stos
outsb
xchg
je
lea
je
pop
dec
out
inc
cmpsb
test
add
pop
nop
inc
imulb
shlb
out
repnz
fsubrs
cmp
xorl
mov
aas
jo
insb
bound
shrb
dec
and
jle
mov
xchg
inc
sti
int
insl
loope
loop
push
and
dec
mov
gs
mov
jg
movsl
and
xlat
add
cmpsb
dec
dec
js
das
cmp
push
int3
adc
push
inc
sahf
jo
mov
jle
xor
inc
jbe
xor
in
and
imul
jae
aaa
das
cmp
xor
les
lret
out
cmp
inc
push
inc
test
mov
jp
cmp
and
dec
loopne,pn
jne
push
jmp
int
leave
loopne
adc
pop
inc
sti
jnp
aam
enter
push
or
xchg
adcl
daa
pop
cmp
inc
xchg
jnp
nop
inc
aam
pop
divb
andb
mov
mov
bound
push
dec
sub
scas
jb
in
dec
push
push
scas
xchg
jae
sub
and
out
je
aaa
pop
push
mov
das
mov
dec
loop
stc
pop
dec
sub
inc
cmp
fdivs
pushf
clc
aas
std
sbb
sbb
enter
mov
lret
mov
insb
in
cs
jp
rolb
mov
adc
pop
add
push
cmp
mov
call
add
lret
addl
arpl
mov
mov
mov
dec
xchg
scas
adc
jl
or
lods
test
repz
cmpb
mov
hlt
stc
icebp
sahf
fs
ja
mov
mov
cmp
xor
pop
fbld
stc
xchg
shlb
inc
cmpsl
jb
xor
mov
pop
xor
mov
fucom
xchg
mov
out
add
out
push
cwtl
xor
js
lcall
cltd
scas
shlb
aam
jp
sbb
int
loopne
sbb
daa
gs
xchg
lods
ret
stos
imul
lea
lods
pop
lds
add
stc
jb
out
inc
fistpll
dec
in
pop
scas
inc
insb
in
test
mov
icebp
xor
mov
or
or
push
daa
inc
push
cmpsl
and
outsb
xchg
dec
mov
fsts
inc
inc
xchg
or
je
movsb
out
mov
xchg
mov
mov
idiv
dec
xor
and
decb
int
dec
lcall
mov
cli
test
iret
cltd
and
int
push
cmp
lret
shr
inc
hlt
pop
mov
int
mov
sahf
insl
int
loop
fwait
or
jmp
jle
lret
fbstp
js
je
sbb
idiv
ret
jnp
jecxz
imul
and
jbe
or
sbb
cltd
in
es
les
mov
xchg
sbb
inc
cmp
int3
xlat
push
cmova
stos
daa
push
dec
lea
icebp
mov
cld
sbb
pop
jne
insb
shl
je
in
movl
inc
fwait
into
jbe
fiaddl
inc
xchg
cmp
ja
cmpsl
mov
mov
xor
bound
push
push
lahf
push
mov
icebp
mov
mov
mov
mov
sub
pop
sub
enter
mov
mov
jl
jne
mov
push
arpl
in
xor
xchg
adc
pop
mov
nop
les
lret
cmpsb
aad
or
imul
fst
inc
sub
jl
insl
fnstcw
adc
sub
lea
popa
jg
hlt
loopne
xchg
test
inc
mov
ss
les
xchg
sbb
lods
cmp
flds
pop
sbb
jg
inc
movsl
add
es
movsb
mov
inc
je
gs
xchg
sbb
adc
in
jo
jno
mov
addr16
rolb
adc
lock
jle
dec
fwait
out
psrld
inc
mov
aad
sub
addl
in
rol
test
push
jl
mov
lods
pop
sarb
repnz
sbb
jne
push
fbld
rolb
inc
or
mov
pop
fildll
dec
adc
or
push
gs
rolb
xor
lea
icebp
call
mov
cltd
mov
or
scas
and
fisubrs
mov
loop
insb
or
mov
xor
jge
dec
loopne
mov
xor
gs
scas
xor
fmuls
cli
inc
adc
dec
jge
dec
xor
loop
ret
mov
mov
sarl
jb
jmp
mov
mov
adc
xorb
int
cli
cwtl
cli
scas
test
sub
jle
jae
aas
and
stc
icebp
imul
int
sbb
lds
aas
hlt
lds
in
enter
mov
cmp
mull
outsb
dec
daa
dec
mov
inc
pop
mov
fnsave
xchg
mov
jge
xor
ds
ja
mov
pop
cmp
fsts
and
ljmp
aad
pusha
adc
jae
adc
sbb
std
js
pushf
sbb
cmc
dec
mov
pop
jecxz
scas
sub
sub
cmp
cmpb
add
inc
inc
push
pop
call
lret
jno
push
pop
imulb
popf
push
pusha
xchg
aaa
mov
fsub
inc
aad
mov
outsl
mov
dec
xchg
inc
call
or
mov
xor
fiadds
sbb
dec
mov
pop
mov
sbb
in
jae
divl
pusha
fnstenv
cmp
inc
jae
mov
jmp
mov
and
push
notb
into
ljmp
adc
aas
cmp
mov
dec
mov
xor
push
nop
xchg
jns
push
vmread
or
xor
lea
dec
fdivs
mov
sbb
outsl
xor
mov
mov
adc
out
jae
fldenv
addr16
xlat
pop
xchg
add
or
punpckldq
out
dec
enter
repz
xchg
stos
fcompl
data16
cmpl
and
mov
mov
mov
or
cwtl
dec
mov
dec
cmp
dec
mov
sbb
lcall
lock
fs
mov
outsb
in
xchg
dec
pushf
cmp
imull
mov
jbe
jmp
les
adc
or
sub
cwtl
lea
jmp
test
pop
or
xchg
or
fs
mov
mov
les
stos
sub
pop
lock
pop
pop
jns
repz
sbb
jne
lds
cmp
imul
clc
mov
pop
jl
sub
mov
mov
pop
ficoms
push
mov
fwait
mov
add
mov
in
leave
cmpsl
pop
bound
cltd
xor
push
rolb
lea
inc
nop
das
and
push
negb
push
decl
jae
inc
push
movsl
jns
pop
push
add
insb
out
mov
jb
mov
test
jmp
add
scas
jbe
jmp
jno
mov
popl
ja
gs
je
cmpsl
pop
mov
mov
iret
or
sbb
scas
fldt
gs
jecxz
dec
lret
mov
mov
daa
movsl
mov
and
or
scas
push
xor
mov
cmp
inc
popa
lea
in
pusha
jle
mov
inc
jg
fsub
cwtl
push
or
inc
sub
pop
divl
add
nop
cmp
mov
fsubr
enter
scas
and
dec
push
mov
mov
aaa
test
std
jnp
sbb
daa
bound
add
mov
shlb
xchg
mov
std
leave
mov
dec
enter
xchg
jl
scas
ret
add
cli
cmp
push
mov
arpl
popa
xor
pop
jecxz
enter
xchg
test
adc
sub
adc
push
mov
adc
adc
lret
cwtl
lods
mov
or
movsb
mov
addr16
outsl
out
jge
pop
mov
add
cmp
fisubl
sti
ret
outsb
mov
add
sbb
xlat
add
loope
sarb
fbld
mov
inc
jns
jmp
mov
inc
dec
jl
cld
adc
jbe
mov
les
push
and
and
jp
out
js
jmp
les
iret
ss
sbb
gs
jne
adc
lods
lods
dec
bound
pop
mov
out
int
repz
dec
jle
lret
rep
mov
sub
pusha
cmp
negb
aas
aam
inc
cmpsl
dec
leave
sub
andb
insb
int
jl
fscale
rcrb
sbb
sbb
repz
and
adc
roll
int
dec
sbb
jle
mov
sbbl
cli
insl
mov
fs
or
dec
push
sub
mov
or
mov
sub
mov
jbe
inc
mov
shlb
movsb
jl
sbb
mov
movsl
sarb
test
jecxz
jo
mov
mov
mov
ffreep
pop
pop
popa
or
out
shrl
insb
popa
push
sub
arpl
js
cld
out
ja
arpl
pop
xchg
or
mov
pop
adc
mov
iret
mov
fiadds
jnp
xorl
rcrb
mov
jmpw
jg
icebp
pop
loopne
mov
mov
pop
mov
cmovp
and
jne
mov
adc
add
mov
cmp
andl
pop
fwait
addr16
inc
cmp
sti
out
out
ja
jp
shll
jbe
test
shrl
sub
xchg
nop
imul
test
leave
imul
inc
mov
mov
inc
imul
cmp
add
mov
mov
dec
js
test
insl
jo
std
hlt
repnz
pop
add
mov
dec
hlt
insl
lret
sbb
xor
sub
imull
cmpsb
test
test
mov
lods
xchg
mov
mov
ret
cmp
loop
mov
push
jmp
aaa
js
test
fsubl
push
push
adc
xchg
sahf
add
sarl
fdivrl
je
test
xor
push
jg
pusha
andb
or
cwtl
addl
les
mov
adc
or
das
negb
movsl
cmp
xor
sbbl
lea
out
orl
add
or
das
xchg
mov
jno
cmp
sbb
or
outsl
idivl
fwait
mov
movups
push
cmpsl
stc
jne
mov
push
clc
sbb
lds
fabs
mov
testl
mov
xor
sbb
cmpsb
sub
ja
jnp
xchg
push
pop
sub
jne
adc
insb
call
xchg
lret
add
inc
arpl
pop
jae
stc
clc
push
popa
cmp
je
push
mov
cmp
test
lods
sub
mov
jns
sahf
mov
push
test
rolb
sbb
bound
jne
repnz
jg
adc
push
popa
jbe
mov
shll
sbb
mov
sub
rolb
or
and
arpl
sub
nop
mov
aad
out
dec
lcall
out
sbb
nop
mov
or
cld
arpl
jbe
sahf
sti
and
jo
dec
fwait
pop
mov
adc
popf
or
shlb
outsl
idivl
aaa
xchg
pop
ss
pop
jno
fcoms
in
stos
test
sbb
imul
lahf
test
pop
rcrb
push
push
ja
rcl
loop
mov
scas
mov
push
add
subl
test
hlt
out
cmp
loopne
loopne
repz
mov
repz
sbb
and
sub
adc
test
or
ljmp
int
in
js
std
pusha
mov
pop
or
cwtl
into
sbb
fstps
push
sub
filds
pop
cmp
data16
cmp
mov
pop
outsl
notb
pop
dec
xchg
jmp
icebp
hlt
ret
out
mov
sbbb
pop
mov
mov
inc
xchg
jnp
sbb
or
or
or
test
adc
stos
xchg
pop
inc
insb
jg
imul
pushf
jge
filds
or
shrl
pop
cmp
aam
mov
lret
and
test
insb
dec
pop
xorl
jo
sbb
ret
notb
in
scas
mov
or
mov
mov
repz
jmp
xchg
andb
mov
xor
int3
in
push
loope
adc
dec
shl
push
xchg
jge
into
mov
fdivrs
jmp
cli
loop
cli
and
jecxz
mov
imul
mov
test
mov
mov
loopne
jg
popf
cmp
in
outsl
cmpsl
mov
xchg
shrl
inc
add
xchg
dec
push
cmp
mov
sahf
dec
das
arpl
icebp
dec
and
aaa
in
mov
in
mov
dec
sub
not
lods
imul
sbb
mov
int3
sti
fisubs
sbbb
adc
cwtl
scas
out
js
lds
add
inc
mov
test
enter
in
test
pop
out
push
push
arpl
sar
out
adc
xor
mov
mov
or
mov
int3
mov
daa
loopne
mov
or
aad
xor
stos
cmpsb
jne
scas
inc
cmp
lock
xchg
and
adc
xor
cltd
in
dec
das
jae
jbe
dec
adc
sbb
aam
dec
xchg
rolb
jb
sub
popa
push
fs
jnp
mov
adc
and
pop
ljmp
or
jp
cwtl
sbb
popa
ss
es
sub
mov
aaa
xor
std
orb
sbb
push
js
fdivrl
in
xor
mov
or
ljmp
ret
bound
shl
jecxz
xor
lods
int
aad
xor
inc
lods
daa
or
xchg
mov
cmp
jno
sti
sbb
shll
mov
xor
popf
inc
gs
mov
cmp
adc
xchg
xchg
sbb
cmovne
iret
mov
push
and
fldenv
lahf
and
pop
pop
fiaddl
sbb
scas
inc
out
testl
and
mov
pop
outsb
out
jmp
stc
xadd
fmuls
xor
or
sub
mov
and
fstpt
mov
mov
lahf
sbb
in
mov
shl
push
fcomi
and
dec
jbe
sbb
ret
mov
lahf
inc
insl
sbb
push
and
sbb
imul
cltd
std
dec
or
push
ss
mov
mov
les
mov
sbb
int3
pop
sbb
out
repz
xchg
push
movsl
xchg
jb
out
xchg
push
fwait
pop
movsl
in
gs
inc
push
dec
ret
stos
lret
sbb
lcall
push
inc
add
das
loop
lods
xor
xor
aas
jo,pn
into
jbe
push
popa
add
or
mov
mov
and
out
dec
mov
cmc
addr16
loopne
add
sub
pop
sbb
jo
mov
fldcw
xlat
sbb
xchg
inc
dec
lea
xor
pop
jns
andb
das
data16
scas
imul
imul
and
cltd
bound
sbb
and
lahf
xor
jmp
int3
or
test
mov
sub
mov
xor
mov
mov
rcll
je
cli
adc
daa
and
cltd
push
scas
int
fcmovnbe
cmp
add
sub
xor
pop
std
dec
jno
mov
cld
mov
inc
aam
loop
sub
or
xor
sub
in
aas
lods
cmpsl
sub
dec
ja
mov
inc
cmp
jge
push
adc
jg
ss
mov
cmpsl
leave
and
xor
pushf
add
adc
in
cmp
inc
pop
mov
enter
pop
cmp
and
pop
notl
in
fcomps
dec
movsl
insb
mov
test
js
jl
leave
call
cwtl
push
sub
adc
inc
sbb
stc
das
jae
idivb
data16
mov
pop
outsb
cmp
loope
les
mov
jb
fsubrs
mov
cmpsl
sub
jmp
xor
jns
sbbl
add
mov
mov
jbe
stos
xchg
fimuls
test
jnp
aam
mov
stos
push
out
nop
maskmovq
mull
dec
dec
lea
or
xor
add
xor
cmc
int3
mov
mov
bound
jns
xor
pop
xchg
pop
imul
pusha
xor
fldpi
pushf
cmpsl
bound
andb
mov
and
nop
pop
inc
mov
pusha
ret
and
iret
stos
gs
add
push
pop
dec
insb
push
cwtl
cmp
mov
mov
push
sbb
sub
lock
scas
bound
inc
pop
out
dec
out
out
dec
mov
fimuls
leave
iret
pop
mov
out
and
fwait
or
add
mov
sbb
jbe
push
sub
xchg
repnz
in
add
and
fstl
jne
addr16
cli
arpl
ja
adc
test
mov
xchg
inc
loope
movsl
cmp
mov
xor
fidivl
popa
in
roll
xchg
mull
fbstp
sub
mov
les
mov
mov
inc
mov
push
dec
cmp
fnsave
push
add
dec
push
lcall
mulb
mov
adc
mov
jp
enter
jns
add
cmp
pushf
jno
pop
xchg
mov
int
aaa
inc
mov
imul
cmpsb
subl
orb
xchg
xchg
pop
or
jbe
cmpsl
cmp
push
call
add
cmp
flds
push
insl
fcomip
mov
imul
mov
and
ljmp
mov
sbb
jo
imull
jl
movsl
dec
fidivs
inc
pop
pusha
push
dec
and
rorl
xor
jns
scas
sub
add
jl
loopne
mov
test
leave
dec
and
insb
xchg
sbb
ss
mov
stc
mov
movsl
dec
inc
xorb
pop
cmp
add
mov
sti
mov
mov
sub
jno
cmp
mov
inc
sub
cmp
jmp
lods
js
test
inc
mov
daa
and
push
jecxz
add
push
mov
or
xor
jle
and
sub
pop
leave
adc
test
xchg
testl
in
sbb
add
stc
fs
lretw
andb
imul
mov
xor
imul
add
or
push
fstpl
adc
pusha
jmp
xchg
inc
mov
sbb
cli
mov
cli
adc
pop
das
shlb
cld
push
sbb
push
push
fisubs
js
cmpsb
mov
in
mov
imul
cwtl
movsb
mov
shrl
xlat
and
xchg
fidivrs
in
mov
jg
xchg
mov
jo
sbb
pop
pop
addr16
add
test
lret
adc
xor
dec
adc
jmp
andb
push
out
push
dec
inc
inc
lods
xor
cmp
sbb
cmp
sbb
mov
push
sub
jnp
lret
or
push
dec
fstps
jae
xchg
cmc
pop
out
ret
mov
mov
fisttpl
sti
hlt
and
push
add
gs
sbb
mov
lcall
and
and
and
cmc
ljmp
iret
ljmp
adcb
lret
mov
lahf
sbb
jl
gs
or
inc
inc
or
mov
mov
ljmp
popa
in
scas
pop
xor
push
les
mov
pop
dec
fsubrl
pop
mov
xor
insb
pop
mov
or
pop
jecxz
clc
adc
adc
and
mov
xchg
fwait
xchg
jns
sahf
xor
cmc
mov
pop
inc
adc
mov
add
adc
sbb
pop
sbb
imul
cmp
sbb
mov
cmovnp
mov
or
repz
subb
push
xchg
xchg
repz
mov
mov
aaa
add
dec
shrb
rclb
push
outsl
push
inc
and
mov
movsb
push
out
lea
hlt
addb
pushf
add
cli
int
dec
xchg
xor
pop
xchg
xchg
xchg
addb
out
sahf
mov
sub
ud0
dec
mov
jns
dec
mov
cwtl
movsb
jns
ficoml
pop
or
or
sub
bt
les
lret
inc
fcmovu
mov
jl
ds
mov
pop
add
and
cmpsb
fs
cmp
adc
and
sahf
aam
in
cli
aas
add
inc
push
jge
es
jl
notl
test
cmpsl
pop
iret
add
aaa
xor
dec
cmp
and
out
pop
mov
hlt
mov
pop
adcl
movsb
sbb
add
xchg
pop
mov
pop
cwtl
mov
mov
sub
in
mov
fldt
loop
aaa
jge
mov
icebp
jae
add
and
xlat
movsl
push
stos
popa
cmpsl
mov
enter
sub
jg
inc
dec
out
pop
aam
roll
inc
pop
fwait
inc
mov
sub
pop
pop
dec
addl
or
aaa
mov
cmp
pop
cwtl
xor
inc
xor
add
xor
dec
stos
mov
ret
lahf
int3
dec
shl
and
cmp
mov
nop
out
idivb
push
hlt
mov
mov
sub
mov
ret
dec
mov
test
lods
call
fs
and
dec
cmpb
mov
cld
push
call
pop
mov
imul
stos
xchg
mov
sbb
xchg
mov
imul
add
inc
and
addr16
sub
paddusb
sub
insl
out
xchg
outsl
jge
arpl
push
push
mov
mov
mov
inc
outsl
rcl
pop
xchg
sub
lret
xchg
adc
jne
aas
pop
int3
loop
and
adc
fidivl
aas
movsl
lahf
pop
fcmovnb
mov
cld
pop
add
repnz
push
pop
int3
mov
enter
ss
enter
cmp
pop
sbb
je
xchg
enter
ss
pop
out
mov
lock
call
push
aas
cmp
cs
outsb
cmpsl
or
ss
inc
orb
push
cltd
cmp
cmp
in
mov
cmp
mov
jg
mov
test
mov
popa
mov
inc
inc
xor
pop
outsb
cwtl
jg
sbb
mov
into
cmpl
jbe
sub
and
xor
mov
test
or
mov
mov
fnstcw
push
push
mov
pop
lock
push
mov
adc
adc
cli
test
repz
int3
ds
adc
repz
loope
mov
popa
xchg
adc
stos
add
jle
test
inc
loop
frstor
jge
mov
rcrl
push
in
add
addr16
ss
in
fsubrl
fsubr
xor
inc
jb
insl
insl
lock
mov
fisttps
jp
and
dec
jl
and
js
leave
sub
dec
and
mov
shrl
jge
cmpsl
mov
jmp
push
dec
out
fimull
lcall
imul
loopne
sub
rol
adc
dec
xchg
adc
pop
ret
rorb
mov
shlb
dec
data16
inc
mov
jo
and
lds
push
aas
cmc
into
outsb
jg
mov
adc
ljmp
out
fbld
fcompl
faddl
enter
cmpsb
cmc
stos
std
ja
das
test
movsb
arpl
dec
mov
cmpsb
ljmp
in
dec
mov
mov
int
sub
ret
adc
fwait
test
test
mov
sub
jb
int
adcl
mov
bts
clc
shrb
add
jp
aad
add
aam
jbe
cmp
pushf
shl
cli
sarl
inc
lret
mov
scas
sub
leave
mov
and
iret
sahf
add
cmp
into
fbld
aas
cwtl
dec
ljmp
pop
cld
jge
pop
outsb
ja
dec
jnp
call
sub
les
aaa
mov
and
sub
lods
push
mov
fisttps
dec
cld
addl
outsl
fisubrs
sbb
insl
fwait
add
mov
jae
test
aaa
push
xlat
stos
or
in
dec
inc
ud1
adc
outsl
xor
pop
bound
pop
jl
outsl
loope
cmp
jg
push
jns
xchg
push
pop
nop
js
stos
loopne
xor
xor
mov
cmp
popf
leave
jl
dec
aas
xor
enter
outsb
out
enter
add
repz
push
xchg
lock
jmp
adc
pop
push
fcomip
push
jmp
sub
lahf
and
cmp
sbb
sahf
or
mov
lea
mov
push
shlb
cmp
inc
loope
frstor
xchg
mov
jge
dec
icebp
fisubrl
mov
inc
or
mov
insb
xor
fwait
pop
sub
cmp
dec
pop
adc
dec
out
push
decb
inc
dec
add
pop
sbb
push
and
sub
pop
cmpb
pop
ja
push
ss
incb
xor
data16
test
fs
jb
fistpl
scas
aas
inc
sarb
adc
loop
in
sbb
fs
inc
ja
call
or
std
push
jne
and
jbe
jno
push
or
mov
dec
lock
roll
lock
push
add
addr16
push
mov
push
sarb
xchg
sub
punpckhbw
cmp
sub
decb
std
xchg
bound
addr16
add
pop
outsl
dec
fists
in
jb
adc
outsb
xor
jg
push
in
outsl
jns
mov
mov
push
push
repz
mov
pusha
push
mov
jb
sub
xchg
testl
mov
outsl
ror
add
dec
pop
jecxz
les
rol
jmp
loop
insl
lds
movsb
push
push
inc
push
das
repnz
loope
xor
cmp
mov
pop
cltd
fs
lret
push
jns
push
and
rorb
sbb
mov
push
or
add
inc
add
jecxz
sub
push
and
push
jl
xor
dec
inc
stc
or
test
popa
add
insl
sbb
imul
sbb
add
mov
lds
mov
es
pop
daa
nop
std
jmp
lock
xchg
dec
clc
lock
mov
nop
inc
mov
sub
clc
and
mov
in
orb
pop
ror
and
inc
push
sub
sbb
dec
popa
inc
add
imul
aad
jbe
andb
enter
inc
sub
jle
mov
fcomp
faddp
mov
mov
push
std
push
xorb
ret
mov
sub
movl
mov
sbb
cmp
sub
jns
repz
pop
dec
add
dec
inc
lret
mov
test
push
jnp
out
add
xchg
mov
mov
mov
pop
sbb
iret
jb
stos
inc
adc
xchg
dec
fnsave
xor
ljmp
fidivrl
stc
sub
les
leave
cmpsb
cmpsb
into
mov
jge
cmpsl
lods
daa
inc
out
icebp
push
jl
xchg
mov
adc
push
add
cmp
dec
rcrb
aaa
cmp
inc
or
adc
mov
scas
fstps
inc
popl
pop
loop
mov
push
push
sbbl
movsl
les
out
xchg
mov
ljmp
cmp
movsl
loopne
inc
fstpl
xlat
dec
loop
mov
xor
lret
and
and
xchg
sub
dec
ret
push
dec
fisttpl
fcmovne
es
mov
xchg
cld
out
out
xchg
push
cld
in
and
cmp
jmp
adc
pop
mov
mov
movsl
movsl
sarb
mov
ret
inc
cmp
jle
or
hlt
sbb
xchg
dec
inc
add
pop
lahf
roll
sahf
or
pop
sub
dec
and
push
lea
test
adc
jg
adc
insl
mov
clc
sbb
outsl
movsb
and
adcl
stos
daa
inc
jmp
or
inc
cmpsb
mov
jbe
outsb
and
shll
mov
cmp
add
or
fs
or
cs
jge
aas
pop
inc
je
int3
cmp
mov
lret
dec
jb
insl
cmpsb
mov
and
imul
xchg
sarb
xor
cltd
das
imul
xor
rcll
fidivrl
mov
lcall
mov
mov
add
aam
or
pop
add
lahf
add
pop
cld
or
mov
dec
aad
push
xchg
imul
sbb
scas
pop
mov
out
inc
pop
fcom
ret
xchg
stc
inc
pop
bound
inc
cmp
cmpsl
and
out
and
jne
into
shll
push
pop
dec
mov
jbe
ss
sti
mov
or
loop
dec
hlt
pop
divl
les
movsb
mov
mov
sub
test
cmp
jo
in
stos
hlt
ret
mov
data16
mov
pop
pusha
loop
cmp
mov
push
cmp
jle
jns
lock
mov
mov
loop
inc
pop
inc
sub
or
mov
push
xor
aas
sti
jne
inc
sub
imul
addl
push
adc
mov
ds
lock
jo
mov
and
popa
xor
cmpsl
loopne
lret
loope
aas
dec
or
cld
into
jbe
pop
xchg
pop
adc
sbb
or
cwtl
insl
adc
add
jle
adc
mov
xor
xor
jle
rcr
sbb
ljmp
xchg
test
call
jmp
push
cltd
jecxz
sbb
mov
and
lahf
rcll
adc
cmc
imul
add
test
ret
dec
idivl
add
pop
sub
jbe
hlt
or
sub
mov
popf
or
in
or
scas
mov
das
and
sti
or
inc
out
btr
rcll
mov
jo
pop
add
adc
fwait
repz
and
sub
mov
fists
pop
add
sbb
sub
or
outsb
xchg
cld
fnstcw
clc
mov
mov
mov
or
add
inc
pop
add
cltd
dec
or
pop
mov
fiadds
popf
sub
add
cmpsb
or
dec
mov
cmp
jns
pop
pop
ds
dec
bnd
xor
sbb
cmp
cmpsb
sub
xlat
inc
jnp
ficoms
and
inc
daa
orl
sub
sti
das
pop
dec
or
imul
xchg
out
mov
insl
testb
sub
ds
and
add
or
ret
jl
jmp
enter
xchg
sub
pusha
repz
cld
dec
cmpsl
xchg
in
xor
cwtl
sub
je
out
sbb
lock
inc
fucomp
aaa
pop
cwtl
scas
movsl
mov
mov
cmpsl
movsl
sbb
xchg
sub
fdivr
rcrl
test
test
inc
ficoml
cmp
test
loopne
fsts
loopne
and
cmp
add
int3
inc
cmp
orb
mov
add
test
dec
dec
and
pop
xlat
cwtl
jns
shr
push
lods
lods
nop
xor
push
xchg
les
vmovapd
stc
add
adc
push
inc
ja
sbb
flds
test
mov
jl
loope
sarb
jp
bound
adc
std
hlt
push
or
insl
cmp
mov
push
or
xchg
pusha
int
sahf
rol
add
nop
loopne
add
insb
mov
xchg
cmp
inc
ret
cmp
and
imul
test
outsl
int
testb
test
jle
leave
lahf
adc
nop
and
or
rcrl
pop
push
in
imulb
mov
or
cltd
mov
mov
jb
aad
gs
movsl
mov
out
sbbb
call
sub
sub
cltd
ret
iret
adc
pop
icebp
push
jno
hlt
test
stos
push
pushf
int
dec
testl
movsb
dec
mov
sub
repnz
mov
pusha
cwtl
cmp
cmp
insb
idivb
xlat
in
cmp
into
mov
fiadds
imul
fcompl
js
mov
xchg
jb
bound
cmp
hlt
sub
repz
movsb
jno
inc
push
push
jmp
shrb
adc
mov
add
ljmp
fwait
cmpsb
add
dec
fiadds
fadds
fnstcw
aaa
add
dec
rclb
sahf
in
loop
or
adc
add
and
xchg
mov
push
xor
mov
arpl
mov
dec
add
es
xchg
ds
ret
icebp
mov
in
mov
das
int3
jl
inc
ja
push
jp
pushf
jbe
pop
fmuls
cmp
push
popa
sbb
add
and
in
frstor
arpl
cltd
imul
fucomp
or
or
mov
stc
inc
jecxz
mov
sti
popf
xchg
and
loop
push
dec
mov
inc
mov
ds
and
add
cmpsl
cld
scas
jo
or
mov
jns
push
rorl
cli
and
pop
data16
mov
stos
adc
pusha
jp
sarl
ficoml
mov
bnd
test
rcrb
xor
shl
and
aaa
cmp
mov
cmpsb
pop
xor
mov
fidivrs
adc
aam
call
pop
inc
xchg
xchg
loopne
insb
movsb
test
jb
imul
test
shrl
add
loop
lret
daa
lock
test
outsl
testl
mov
and
les
xor
jmp
imul
aam
dec
jle
iret
jbe
and
and
fcmove
int3
pop
pop
xor
dec
pop
es
pusha
mov
push
add
icebp
outsb
lahf
fisttps
movsl
or
mov
cld
and
mov
pop
pop
mov
scas
push
dec
adc
stc
pop
mov
lahf
idivl
jecxz
sub
mov
xchg
clc
push
lret
adc
movhps
mov
sahf
test
imul
sbb
sub
xchg
sbb
cmp
xor
ret
inc
scas
push
ljmp
das
mov
xor
in
enter
mov
lahf
cltd
sbbb
cmp
and
adc
cld
lods
and
call
sbb
fcomps
mov
lea
mov
adcl
scas
fcomps
xchg
in
inc
dec
adc
fstl
and
and
push
movsb
mov
imul
xor
sbb
add
shl
cmp
push
and
pop
mov
addb
pop
arpl
mov
cmp
cmp
mov
movb
cmpsl
or
push
adcl
mov
inc
inc
and
bnd
push
scas
idivb
int3
push
xor
mov
dec
sbb
sbb
sub
mov
popf
fbld
push
int
cmp
repz
lret
pop
pop
nop
fsub
popf
mov
pop
mov
adc
sub
xor
enter
mov
lret
cmpsb
lods
shl
js
leave
ja
push
or
dec
fildl
push
loope
movsl
sbb
cwtl
and
test
xor
sbb
xchg
adc
popf
pop
ja
adc
push
out
pop
cmp
pop
lds
jmp
lret
xchg
mov
cmp
dec
sbb
jecxz
xchg
cld
daa
mov
mov
cmp
cmp
xchg
pop
mov
movsb
adc
jp
fisubrs
sbb
push
in
popa
addl
inc
and
dec
sub
mov
ret
clc
popa
mov
xchg
or
leave
shl
push
lds
nop
mov
and
lret
in
push
subb
push
xor
je
pop
sub
and
stc
jb
aaa
sarl
bnd
int3
fdivrp
pop
jl
inc
gs
xchg
pop
sub
adc
and
fimull
cltd
jmp
mov
push
int3
rol
mov
outsb
fs
ret
and
test
testb
cmp
mov
scas
adc
pop
mov
test
cmpsb
dec
sbbb
fadd
mov
cmp
jbe
add
sbb
adc
mov
sub
out
hlt
xor
loope
insb
xor
ljmp
movsl
imul
clc
ficoms
sbb
inc
add
pop
mov
pop
xor
xchg
mov
rorl
scas
and
test
pop
mov
bound
add
and
out
jmp
xchg
mov
andb
scas
repz
xor
lcall
rorl
jb
in
jbe
outsb
jo
scas
icebp
sub
ds
rolw
xor
or
movsb
int
andb
insl
dec
and
sbb
fstps
sahf
xor
mov
les
nop
cmp
mov
sti
lea
enter
xor
jmp
xchg
sahf
lock
adc
xchg
xor
cmp
arpl
fstpt
rcrb
movsb
mov
icebp
outsl
int3
lock
lods
pusha
pop
xchg
cmp
data16
push
inc
adc
in
popa
cs
daa
out
sub
push
mov
and
add
call
scas
pop
sub
js
shrl
adc
cld
lea
out
scas
jge
pinsrw
lret
push
icebp
fmuls
neg
cwtl
sbb
or
pop
aas
and
aas
cs
jg
jecxz
pop
xor
decl
aas
sbbb
push
imul
and
cwtl
lret
fidivs
add
fistl
mov
and
adc
punpckhbw
fs
add
xchg
jne
sbb
push
shrl
sub
sahf
push
movsb
dec
fadd
sub
xchg
cmp
outsb
movsb
pop
dec
mov
inc
insl
sti
jmp
mov
mov
daa
movsl
pop
cmp
in
repnz
cmpsb
inc
loopne
xor
or
xlat
subb
sahf
xor
movsl
clc
mov
inc
mov
in
mov
shrl
clc
mov
loop
dec
stos
and
jmp
lret
in
gs
xorl
in
push
push
xorb
sub
sbb
sbb
or
push
xchg
cmp
testb
mov
in
pop
push
enterw
cwtl
add
test
cmp
and
push
pushl
enter
xor
xchg
or
push
lahf
inc
js
mov
cmp
dec
adc
cmp
sub
adc
mov
test
sarb
jg
pusha
fdivp
mov
je
and
cli
inc
push
and
jge
jge
in
adc
dec
mov
push
aas
in
mov
into
outsb
shrl
mov
push
enter
xor
xor
cmp
fucomip
sub
arpl
inc
or
jge
shll
sbb
xchg
cwtl
stc
push
fs
inc
cmpsl
lods
test
stos
out
inc
xchg
cmp
dec
mov
and
hlt
test
jne
mov
mov
pop
jg
mov
in
out
test
stc
jo
aam
sbb
sbb
rclb
or
shrb
push
cmp
push
cmc
add
cli
jmp
movl
mov
hlt
int
add
push
xchg
ds
repz
cmp
mov
mov
lock
loopne
push
xchg
nop
mov
in
pop
pusha
push
shll
inc
out
add
xor
and
sbb
cmp
movsb
mov
rolb
sbb
push
jecxz
js
sub
push
lahf
jne
test
shrb
push
mov
xchg
cmp
jl
loop
lds
in
inc
jl
hlt
test
and
lahf
aad
aam
xor
mov
subb
clc
and
or
mov
out
xchg
or
data16
fninit
or
popa
ja
cmp
popa
stc
lock
and
imul
fisttpll
lcall
lret
lahf
incl
or
insb
cmp
mov
jne
popa
add
aas
fwait
jecxz
fnsave
add
std
cmp
aad
mov
mov
jbe
cmp
pushf
or
pop
repz
pop
loopne
stos
sub
and
cmp
cwtl
cmp
dec
mul
bound
jb
cwtl
loope
adc
clc
mov
lods
lods
or
insb
mov
jns
mov
enter
negb
sub
int3
mov
std
popf
push
sub
adc
push
nop
sbb
add
xor
inc
push
jg
testb
ret
iret
jl
test
ret
pop
or
stos
xchg
andb
cmp
scas
icebp
cmc
jb
call
adc
xchg
inc
mov
jo
mov
inc
xchg
jo
cmpsl
ret
cwtl
sbb
mov
mov
insb
mov
sbb
rcrb
sbb
in
sbb
xor
pop
insl
add
imul
sub
das
push
jecxz
lods
into
lock
mov
adc
sbb
and
adc
adc
and
mov
sbb
add
fs
stos
andb
stos
push
orl
mov
ljmp
pusha
out
push
loope
test
jge
inc
sahf
loope
out
out
shl
inc
out
fnstsw
scas
push
popf
mov
cmp
add
popf
into
mov
inc
push
mov
mov
mov
rolb
jnp
push
dec
loop
add
addr16
push
xchg
adc
mov
scas
jae
add
mov
cwtl
pop
cmp
sti
jno
or
mov
test
cmp
adc
pop
push
xchg
mov
popf
xor
roll
mov
pop
dec
mov
cmp
lcall
cmpsl
pop
ljmp
movsb
pop
cmp
mull
sbb
sbb
inc
sarl
jg
into
cmp
popa
mov
js
add
pop
fs
xor
jbe,pn
lahf
push
in
fdivl
popf
les
loop
fcmovnbe
adc
test
iret
sub
pop
incb
lea
in
test
pop
push
lahf
dec
lds
jl
in
in
jns
insb
nop
add
movsl
lods
iret
cli
movsl
das
aaa
aam
jbe
cmpsb
mov
inc
mov
xor
sbb
and
int
sbb
mov
nop
mov
andl
jne
into
jl
cli
stc
mov
xorl
push
in
jnp
fprem
inc
pop
and
test
adc
mov
inc
push
add
test
mov
pusha
or
cmpb
dec
movsb
xor
xlat
mov
and
pop
jb
shll
sbb
mov
add
std
loope
jg
cmp
push
add
lods
js
push
adc
cmpsb
lea
ret
mov
push
mulb
rep
mulb
pushf
inc
ret
add
push
aad
xchg
stos
jmp
pop
mov
push
cmp
mov
mov
outsb
jne
cmp
and
xchg
xchg
xchg
pushf
and
xlat
sbb
cmpsb
jno
faddl
test
jecxz
mov
lods
loop
sbb
adc
xor
lcall
arpl
fiaddl
push
rorl
pop
leave
mov
bound
jo
pop
xchg
cmp
dec
jle
insb
push
fxam
add
fsubl
pop
icebp
adc
cmpsb
and
xchg
insb
outsb
pop
pop
aaa
or
sub
jmp
imul
sarb
cwtl
sbb
or
out
add
pusha
mov
ja
add
inc
data16
leave
inc
push
fistpl
mov
xor
jecxz
sti
sub
push
cld
repnz
ja
or
das
stos
sub
arpl
je
inc
nop
call
dec
jne
leave
sub
notb
pop
xchg
fistps
cwtl
nop
pop
xchg
mov
repz
aad
outsb
into
rclb
add
jmp
daa
inc
orb
insl
lret
adc
pop
mov
inc
idivl
aam
jge
in
aaa
add
daa
add
enter
test
in
repnz
jbe
dec
cmpsl
filds
pop
cmp
fnstsw
sub
pop
outsb
nop
or
popa
and
outsl
mov
inc
test
and
cmp
push
outsb
cmp
add
adc
es
dec
add
insb
jl
cmp
adc
fisttpl
vprotd
inc
mov
clc
addr16
daa
cwtl
inc
add
dec
adc
or
cmpsl
movb
ficoml
mov
addr16
push
into
adc
push
sbb
aas
sbbl
iret
jnp
daa
adc
or
pushf
scas
repnz
in
sbb
imul
mov
out
fwait
lock
data16
sbb
mov
xchg
arpl
jno
inc
lds
subl
xchg
test
cmp
cmp
les
ret
std
push
mov
test
jmp
add
lods
mov
cwtl
add
mov
sub
push
in
test
loope
sti
cmp
lods
or
in
aad
mov
in
dec
out
push
out
pop
into
pop
in
test
lea
jge
les
mov
test
fwait
pop
mov
std
icebp
enter
and
mov
cmpl
mov
jg
cmpsl
notb
rcrb
cmp
add
cmp
push
les
cld
mov
jns
insl
pop
inc
cs
mov
rol
xchg
mov
out
jo
ror
filds
outsb
sub
aas
push
popf
or
fisubrs
add
js
push
lahf
lahf
les
inc
imul
mull
dec
pop
fnstsw
dec
push
sbb
neg
icebp
inc
and
add
sub
insl
push
repnz
pop
in
shlb
repz
pop
or
movsb
mov
rep
imul
push
cmpsb
adc
repz
fs
pop
in
cmp
push
mov
add
dec
push
in
aad
repnz
fldenv
loopne
js
sarb
cmp
rcl
mov
inc
mov
xlat
push
cmp
cltd
jge
xlat
shrb
call
mov
jecxz
ja
inc
cmp
push
int3
fadds
loopne
stos
std
std
and
outsl
inc
pusha
inc
jns
scas
xchg
in
or
aaa
jae
lea
popf
mov
inc
callw
pop
fnstcw
jns
xor
into
ss
mov
inc
insb
pop
mov
xlat
mov
mov
xor
mov
rcrl
leave
or
add
out
sub
sbb
mov
mov
xor
dec
add
jg
paddusw
rorl
and
lahf
out
clc
add
pop
mov
mov
cltd
shr
lret
mov
cmp
cwtl
scas
rcr
pop
outsl
sbb
sub
push
adc
xchg
dec
ljmp
mov
stc
mov
enter
andl
add
popf
ret
jge
push
lods
xchg
mov
sbb
fistl
mov
mov
aas
and
sub
dec
in
jo
push
loop
lods
js
push
and
mov
test
pop
mov
popa
xlat
hlt
pop
aas
inc
jae
repz
arpl
pop
xchg
sub
nop
shl
pop
pop
imul
xchg
add
test
sub
in
insl
mov
push
add
call
pop
lret
push
inc
test
idivb
inc
and
xchg
sarl
xor
mov
sub
imul
jl
mov
push
inc
or
jbe
jl
andl
inc
inc
cmp
dec
shll
mov
dec
xchg
imul
aaa
mov
jmp
pop
and
popa
aad
dec
sub
test
push
jne
ja
pusha
testb
dec
daa
xchg
inc
inc
cmc
mov
push
xlat
stos
stc
jnp
test
in
add
sub
pop
pop
dec
pop
pop
pop
aam
test
outsb
add
dec
inc
mov
pushl
lret
mov
jne
pop
imul
add
cli
sbb
or
lods
mov
cmp
lret
xor
xor
inc
adc
and
mov
cmp
add
rol
add
xchg
pop
mov
sub
sahf
cwtl
sub
outsb
cmpsb
mov
gs
adc
or
xchg
test
cli
popa
sbb
idivl
and
vdivss
cmc
roll
lds
mov
out
aad
test
adc
and
push
push
fiadds
repz
data16
bound
daa
pop
dec
add
fimull
push
js
mov
cli
jo
fxch
add
cwtl
pop
mov
xchg
daa
xchg
out
sbb
ss
fimuls
pop
in
xchg
in
out
inc
aad
sysret
aam
test
mov
inc
pop
mov
push
and
data16
xor
pop
mov
sti
std
xchg
xor
fisubl
jle
jl
outsl
or
incb
push
test
pop
mov
lods
mov
lcall
xchg
mov
push
into
int
xchg
ja
scas
daa
jp
sub
lods
push
jae
xchg
stc
int
push
mov
cltd
jae
and
push
mov
call
sbb
fs
loop
mov
cltd
sbb
into
rorb
jge
xchg
adc
mov
rcll
ret
or
data16
out
test
inc
add
sub
aam
out
dec
dec
or
jo
or
add
mov
push
scas
add
shrl
pop
ss
mov
jge
mov
ja
inc
mov
rclb
jnp
push
ljmp
ret
pop
mov
aad
push
push
scas
fdiv
je
out
push
jno
mov
xchg
insb
stc
sub
add
mov
inc
shll
daa
dec
dec
push
mov
fnstcw
and
sub
xor
iret
mov
arpl
mov
mov
sbb
fbld
stc
das
dec
aad
ret
inc
loop
clc
vdivps
ja
push
adcb
cmp
sub
ljmp
pop
mov
xchg
jno
fs
insb
loop
cmc
stos
fisubrs
dec
addb
adc
insl
or
out
jo
sub
nop
in
and
lcall
mov
push
dec
pop
out
mov
add
xchg
pop
loopne
jo
into
mov
inc
dec
jg
in
insl
lret
push
mov
sub
sub
loopne
adc
add
test
rolb
dec
mov
dec
pop
int
punpckhwd
inc
mov
inc
setae
adc
push
sbb
fwait
push
adc
adc
loop
gs
xor
jbe
mov
adc
ret
xchg
mov
cli
mov
lods
dec
dec
stos
jno
cmp
mov
cwtl
ljmp
mov
enter
pop
scas
js
push
cmp
xor
dec
adc
test
inc
pop
stos
les
bound
outsl
mov
xor
add
xchg
or
minps
and
dec
psrlq
call
sub
xchg
int
test
pop
or
xchg
jmp
sub
jle
je
fcomip
and
cmpsl
add
xor
mov
mov
jmp
lcall
mov
test
rcrb
fstpt
outsb
jmp
add
das
cmp
jmp
inc
pusha
je
ds
imulb
dec
mov
sbb
scas
imulb
mov
test
mov
adc
rorb
dec
fimuls
sub
lds
mov
aad
mov
stos
fcompl
jno
xchg
orl
fcoms
mov
cmpsb
sub
pop
push
fbld
or
insl
add
ljmp
sub
jns
repnz
mov
insl
push
add
mov
sti
cmp
data16
sub
mov
push
adc
xchg
push
mov
add
or
scas
ss
out
push
int
xchg
inc
out
or
mov
add
orl
sbb
test
xor
ficomps
jg
dec
lds
or
xor
pop
mov
roll
mov
sub
mov
in
mov
addr16
push
stc
ja
mov
hlt
jp
pop
shlb
inc
in
xlat
fwait
cwtl
hlt
jp
das
mov
adc
sub
and
xchg
shll
mov
jo
leave
push
cmp
fistl
ja
shl
lock
dec
repz
pop
lods
xlat
push
or
mov
or
mov
cmp
or
cmp
mov
loope
add
jno
cmp
mov
push
fwait
cmp
mov
in
popf
xchg
adc
jo
gs
aad
clc
push
bound
in
inc
outsl
dec
imul
mov
push
enter
std
pop
push
dec
jne
dec
loope
xchg
jl
lds
ret
sub
add
pmuludq
xchg
xchg
xor
daa
mov
out
xchg
mov
inc
sbb
shl
addr16
cmp
push
sti
push
int
mov
cmp
inc
lea
adc
sbb
movsl
xchg
sti
dec
cltd
imul
and
xchg
dec
popf
shll
pop
sbb
test
add
mov
lahf
push
into
xor
dec
mov
xchg
cmp
xchg
mov
std
push
inc
pusha
popf
icebp
into
xchg
add
and
add
and
daa
ds
add
pop
sub
mov
test
and
mov
test
sub
lods
push
int
insl
aaa
pop
dec
inc
int
mov
cmp
fmull
into
push
push
cld
std
push
cmpsl
xchg
xchg
or
fcmovu
mov
rcr
int3
fdivrl
push
xchg
and
xchg
inc
test
mov
outsb
out
and
pop
rorb
jl
fcomip
mov
popa
rorl
stos
pop
and
pop
mov
and
push
pavgb
sbb
lret
or
lret
or
adc
aad
and
cmp
push
jns
sbb
sarl
fwait
loopne
aas
je
jge
in
in
xchg
jno
fnstsw
sbb
jb
popa
mov
aas
lret
xchg
iret
jle
jle
mov
pop
lret
bound
jnp
xchg
push
push
jge
dec
ss
ret
jo
lahf
sarl
sbb
mov
dec
mov
enter
mov
in
in
mov
or
or
xchg
sbb
jle
mov
rclb
dec
aam
adc
adc
adc
lcall
lahf
mov
stos
ss
jno
cltd
inc
xchg
addr16
sub
cli
inc
dec
or
stos
rcrl
mov
lahf
in
je
pushf
sbb
adc
mov
aad
sub
pop
push
xchg
fnstenv
push
cmp
lcall
dec
cmp
ja
sahf
fmull
ret
jb
xor
loopne
or
push
dec
cmp
xchg
pop
inc
sub
jb
mov
sbb
fistpll
mov
cmp
stos
movsb
mov
pop
fimuls
mov
sbb
jecxz
mov
or
cmp
inc
es
jp
jmp
mov
jle
test
and
sbb
data16
mov
movsb
addl
insl
test
pop
lret
inc
nop
xor
mov
mov
inc
lock
adc
adc
xor
jcxz
add
cltd
sub
xchg
out
scas
cmpb
mov
stos
leave
ss
loop
lock
xchg
sub
xchg
inc
pop
push
lahf
fs
shrb
fistpl
jle
cmpl
sbb
scas
inc
iret
gs
push
scas
and
add
push
or
dec
xor
pushf
dec
mov
cmp
dec
push
clc
jmp
add
xor
int
sbb
mov
fwait
mov
mov
add
leave
std
mov
ds
ja
push
lret
xchg
daa
jne
mov
dec
repz
pop
xchg
push
ret
sbb
adcb
mov
push
xchg
mov
xorl
cld
lods
push
add
sahf
or
lods
lods
adc
adc
andl
insb
or
inc
cmc
aam
push
mov
bound
lds
mov
andb
sbb
dec
test
dec
jns
sbb
stc
and
and
jo
enter
aaa
inc
push
rorl
add
sub
inc
jp
loope
or
ficompl
inc
test
shll
jne
aad
les
ret
xchg
sahf
js
nop
or
lea
xlat
and
xchg
cmpsl
lea
arpl
push
or
and
cli
add
dec
cmp
aad
add
ss
je
mov
sbb
iret
push
jp
addr16
pop
mov
add
xchg
loop
sahf
dec
cmpsl
rorb
out
insb
and
lret
test
xor
adcb
inc
push
lods
cmpsb
mov
mov
cwtl
xor
mov
mov
movsl
fldenv
hlt
mov
mov
notb
pop
pushf
sub
in
mov
popa
out
sub
add
dec
sub
fsts
cmp
xchg
xchg
push
push
cmp
push
adc
push
fs
jno
loop
sbb
xor
rcrl
mov
test
inc
scas
fstpt
xchg
pop
mov
js
jno
jne
xlat
jge
outsb
ficoml
push
xchg
movsb
and
out
push
cmp
push
mov
gs
les
dec
push
icebp
daa
or
std
add
mov
test
xchg
insb
out
imul
dec
loopne
jmp
cmp
push
push
pop
lcall
loope
adc
push
int
jo
dec
sbb
mov
and
sahf
lret
out
dec
fisttpll
dec
nop
stc
sbb
dec
sub
notb
xchg
mov
adc
pop
imul
cmc
or
movsl
fldt
leave
pop
test
dec
xor
jmp
mov
les
adc
pop
test
jp
mov
xchg
pop
jl
lock
lret
mov
leave
outsb
insb
icebp
cmp
loop
shr
and
sbb
loopne
xor
add
in
xchg
int3
lods
mov
cwtl
scas
outsl
fdivl
dec
enter
insl
cmp
call
mov
pop
dec
jo
nop
sbb
inc
jge
jmp
repz
mov
inc
mov
sbb
push
mov
sub
imul
inc
nop
jp
add
imul
mov
mov
icebp
das
lahf
nop
icebp
ror
ja
pushf
dec
gs
push
mov
push
dec
mov
test
xor
mov
sub
test
push
add
fcoml
lds
lock
out
lds
sti
push
rcrl
loope
xlat
ror
hlt
push
shr
jecxz
popf
xor
int3
jge
rolb
stos
iret
ds
pop
rorb
pop
inc
and
xchg
dec
js
orl
xchg
ja
or
les
int
aaa
adcb
xchg
xor
gs
loopne
or
jmp
out
sbb
xchg
jae
ret
cmp
inc
inc
dec
fcoms
jbe
and
and
sbb
cld
lods
dec
pop
orb
jbe
mov
mov
test
in
test
in
push
push
inc
mov
or
push
fisttps
xchg
mov
pop
or
or
in
push
rcrb
xchg
in
or
xchg
or
hlt
push
int3
in
xchg
sbbl
sarl
sbb
hlt
pop
repnz
jae
ljmp
push
movsb
pop
and
inc
aaa
nop
mov
push
cmpsl
cmp
xchg
push
push
sub
jns
mov
inc
dec
mov
cmp
add
inc
mov
js
and
in
fs
push
xchg
cmpsb
dec
ret
outsb
mov
sarl
push
mov
mov
repnz
jecxz
or
notl
out
out
xchg
cs
in
nop
xor
in
sub
fwait
pusha
notl
xor
jl
or
fistpll
jmp
add
sub
fnsave
xchg
lret
lahf
push
and
xchg
lahf
mov
jnp
mov
ds
insl
or
in
jp
xorl
lods
xchg
inc
pop
ss
loope
sbb
add
iret
cli
sbb
sahf
cmp
xchg
clc
mov
fstps
fidivrl
and
stos
jle
ss
faddp
fldln2
mov
dec
or
add
cmp
pushf
mov
idivl
xchg
leave
jno
shlb
neg
sub
sbb
jno
aaa
test
xchg
xchg
mov
xchg
mov
mov
imul
pop
adc
lret
insl
dec
imul
or
push
loope
jmp
push
cmpsb
mov
jle
dec
pop
loopne
jnp
mov
imul
jnp
sbb
push
cs
mov
sbb
mov
xchg
mov
nop
es
dec
dec
dec
fbld
jnp
movsl
dec
mov
fwait
xlat
mov
xchg
out
sbb
add
inc
mov
mov
icebp
cmp
loop
sub
mov
mov
sahf
add
cmp
and
xchg
push
push
nop
insb
xlat
mov
sbb
divps
mov
pusha
out
mov
xchg
ret
sub
imul
add
icebp
divl
xchg
in
push
xor
in
fimull
sub
std
cmc
sbb
or
sub
push
mov
sti
inc
jle
jg
cmp
mov
push
lret
stos
scas
dec
xchg
pop
sub
pop
mov
pop
lahf
xor
adc
add
addr16
sbb
sbb
sub
xlat
bound
cmp
cli
or
sub
mov
ret
int3
lret
xchg
pushf
cmp
sti
mov
jo
sub
xor
cmp
shr
mov
xor
push
push
sbb
mov
pop
ficoms
push
and
jae
mov
dec
int3
adc
daa
and
jbe
inc
test
push
aad
add
ret
mov
sub
bound
mov
test
lahf
cmp
xor
jae
push
imul
aas
xor
sub
lods
cwtl
ret
mov
dec
fs
outsl
push
icebp
cmp
add
and
mov
inc
push
dec
mov
je
inc
arpl
in
xor
or
lock
lret
lock
mov
adc
cmpsl
sbb
movb
enter
daa
jno
mov
inc
cmp
loop
mov
mov
int
adc
daa
out
and
test
out
push
mov
fldl
mov
and
int
lcall
ficoms
in
jge
sub
pop
mov
mov
push
ljmp
pop
je
push
fistpl
repz
mov
push
jbe
push
dec
jo
adc
in
dec
lcall
fldcw
stos
inc
jae
xlat
pop
movsl
push
mov
insb
lret
mov
cmp
fidivrs
or
or
cmc
jle
adc
push
mov
aas
dec
mov
jmp
js
cmp
adc
adc
and
xchg
fadd
fisttpll
notb
divb
js
cmp
sbb
inc
popf
movsb
in
andb
inc
es
jg
or
xchg
mov
vmovntpd
in
xor
cmpsb
lods
in
mov
mov
out
imul
push
pusha
and
or
push
cmp
aas
mov
inc
cmc
sub
pusha
popf
xchg
or
mov
cwtl
mov
loope
add
jae
and
lods
or
jns
xchg
mov
inc
lahf
cs
das
jae
or
sti
sbb
loopne
ss
jnp
pop
inc
mov
pop
mov
fsubrs
add
xchg
insl
and
sbb
mov
mov
icebp
repnz
pop
dec
pop
flds
xchg
enter
adc
scas
or
adc
lds
or
xchg
and
stos
ret
aaa
jo
lret
in
sub
adc
jp
mov
xchg
mov
jecxz
add
fdivr
xor
sbb
into
cmp
adc
sub
lret
aas
jg
aam
js
mov
subb
pop
jo
rcr
xchg
xchg
sbb
jle
bound
test
adc
loopne
mov
pop
lods
loop
aas
fwait
cmp
xor
jl
add
loopne
xor
xchg
and
out
ret
cmc
cmp
lock
dec
cmp
leave
cs
fcom
es
js
in
mov
popa
xchg
jae
dec
and
sub
imulb
xor
mov
pushf
jnp
nop
xchg
pusha
push
sbb
ljmp
push
movsl
out
pushf
sbb
inc
xor
sti
popf
movsb
popa
in
add
jnp
lahf
and
mov
lea
aad
add
ljmp
inc
sub
xchg
dec
loopne
loopne
pusha
iret
sub
adc
jle
xchg
and
inc
xchg
sbb
cmpsl
jne
cmp
movl
mov
out
stos
fistl
sbb
fldenv
iret
jp
jo
mov
xor
cs
cmc
idivb
stos
sti
pop
shrl
je
insb
jge
xor
xor
sub
add
out
adc
pop
loop
mov
push
dec
popa
lret
add
leave
sahf
add
push
and
adc
push
pop
stc
outsb
pop
mov
push
pop
popa
adc
sbb
adc
out
mov
in
add
shl
mov
fs
pop
fxch
popf
jg
rorb
mov
cli
out
rcrb
iret
mov
sub
add
sub
xor
jle
int
xchg
ja
push
inc
jmp
lock
cmp
jnp
jl
imul
mov
mov
xchg
or
and
pop
fwait
jno
gs
into
cmpsb
pushf
or
cmp
add
test
sbb
xchg
out
out
popf
divl
pop
incl
jmp
inc
push
in
int
enter
inc
sarb
data16
adc
push
cmp
hlt
xchg
lcall
in
gs
stc
iret
sti
cmp
notl
leave
loopne
rolb
and
loop
inc
add
jge
ja
mov
or
xchg
mov
push
mov
xor
xor
and
pushf
cmpb
je
xchg
fisttps
lods
xor
mov
xchg
inc
pop
dec
je
in
aam
mov
xchg
out
popa
or
into
scas
sti
rcrl
std
rclb
ret
flds
dec
pop
repz
mov
lret
lods
das
dec
cmp
mov
movsl
inc
push
std
mov
inc
in
dec
fsubrl
aad
cmp
xchg
cmp
xor
hlt
pop
mov
mov
inc
add
in
xor
jge
pop
aaa
orl
in
cmp
add
ror
xor
push
js
test
stc
push
sub
push
fldt
pop
mov
leave
and
mov
rorl
cmp
pop
jl
sti
bound
inc
lahf
mov
push
fwait
sub
xchg
fldt
sbb
jnp
xlat
cwtl
clc
int3
gs
adc
cltd
dec
outsl
or
push
cmpsb
xchg
mov
mov
pop
and
xchg
fstl
sbb
inc
call
adc
add
pop
mov
adc
inc
in
mov
inc
xor
mov
test
scas
pop
shr
ret
mov
in
pusha
sbb
push
push
cld
data16
ljmp
outsl
cli
insb
pop
js
and
int3
fistpl
xchg
les
inc
adc
jo
stos
icebp
xchg
cmp
xchg
adc
pop
int
xor
pop
mov
push
mov
and
cltd
movl
jg
lods
jmp
pop
outsb
das
fwait
popa
pop
xor
rclb
xchg
push
sub
fstl
mov
xorb
es
xchg
insb
sub
mov
cmp
std
jmp
fsubrs
jecxz
out
jmp
add
add
push
cmp
cmc
cltd
inc
lret
mov
mov
out
mov
pop
pop
rcrb
jmp
mov
iret
mov
in
cmpsb
or
mov
into
movsb
orl
shl
xchg
dec
adc
in
dec
into
cmp
pop
fstps
shrb
out
mov
enter
xor
fidivrs
out
out
repz
mov
pop
add
imul
sub
jnp
add
shrl
xchg
mov
sbb
pop
and
xchg
or
dec
stos
iret
clc
in
and
add
fiaddl
xor
outsl
into
xor
into
xchg
mov
rolb
xor
scas
das
imul
adcl
int
mov
addr16
jo
pusha
jmp
mov
sahf
push
sbb
xor
loope
jge
ss
aas
sbb
xchg
fistl
jae
je
xchg
xor
jp
or
repz
paddq
sbb
sub
aad
nop
fnsave
bound
das
int
aaa
push
orl
jge
jmp
leave
mov
xorl
int3
xchg
ja
data16
cmpb
aaa
and
add
mov
xor
test
sbb
aas
sub
push
rorl
mov
jecxz
lret
test
add
cwtl
inc
repz
cmp
jg
lea
lahf
push
mov
ja
outsb
xor
mov
mov
mov
dec
mov
mov
std
pop
xor
sahf
pop
mov
and
sub
push
mov
push
mov
inc
xlat
aas
mov
insl
test
adc
fcmovnbe
mov
sbb
leave
push
lahf
ficoms
cld
ret
mov
jg
add
ss
add
scas
mov
fwait
push
inc
cmpsb
or
xor
mov
cmc
xor
lds
stos
xchg
pop
jecxz
mov
andb
dec
cli
dec
sbb
fildll
add
add
xchg
and
xchg
cmp
inc
jno
and
gs
cs
add
xor
mov
out
cmpb
lea
adc
pop
out
repnz
sbb
xchg
shlb
mov
je
inc
adc
mov
sarl
mov
pop
adc
jns
lea
sub
imul
div
outsl
or
test
xor
push
lret
popa
lcall
outsl
xchg
cmp
dec
aaa
push
mov
pusha
push
mov
sbbl
call
inc
mul
loop
mov
ljmp
or
push
push
xor
jge
mov
add
sbb
test
lds
shl
push
adc
shrl
test
icebp
mov
lock
addr16
iret
pop
pop
rcrl
fsubrp
or
inc
cmp
sbb
popa
ret
or
scas
sub
mov
add
and
dec
xor
jle
lods
pushl
pop
adc
pop
out
add
out
shrb
pushf
mov
sbb
ret
sahf
in
dec
pop
inc
out
out
mov
repz
inc
jmp
xchg
push
inc
sbb
mov
sarb
adcl
lock
jns
adc
xor
ds
push
loop
dec
pop
mov
into
ss
js
sbb
loopne
fbstp
xor
gs
and
jle
dec
call
mov
jmp
or
addb
xor
fs
dec
mov
imul
sub
xchg
xchg
insb
aam
adc
imul
xchg
xor
and
xor
fdivr
out
jmp
adc
pop
inc
popf
leave
icebp
cmp
xchg
xchg
ljmp
cs
nop
sub
call
call
or
leave
lret
cmc
fwait
arpl
pop
push
inc
jne
and
insb
mov
jl
in
or
pop
fadd
sahf
outsl
inc
insb
hlt
lods
mov
pop
int
add
imul
or
stos
sbb
imul
jl
cmc
mov
inc
pop
js
add
push
dec
call
lcall
fists
pop
outsl
ss
sub
sti
and
push
shrl
mov
scas
and
jle
dec
sbb
cmp
xchg
mov
sarb
pop
hlt
cmpsb
gs
sbb
fwait
add
arpl
stos
push
punpcklwd
jmp
xor
pop
int
mov
pop
or
fsubl
ds
mov
dec
int3
mov
in
and
lret
roll
cvtps2pi
outsl
shll
jae
mov
insl
jb
ja
inc
inc
mov
push
in
jb
insb
mov
ret
or
rcl
cltd
dec
lcall
ja
or
decl
mov
jne
xchg
adc
xor
sub
xchg
sbb
movsb
ds
bound
bound
sbb
out
loope
xchg
dec
or
arpl
jl
mov
sahf
dec
out
xchg
xchg
push
jecxz
add
push
mov
leave
ret
icebp
daa
jns
lret
xor
iret
sub
lods
pop
fwait
inc
xlat
lahf
shr
insl
or
lods
and
aaa
dec
outsl
lahf
jg
push
sbb
cmp
gs
in
pop
sub
pop
cmpsl
int
sbb
bound
stc
out
rorl
scas
and
cltd
mov
mov
je
sub
xchg
je
adc
gs
sbb
xchg
repnz
add
invd
push
adc
xchg
and
lods
pop
jo
lcall
arpl
sub
push
and
push
mov
cmpsb
jmp
add
and
or
fiaddl
mov
jo
xor
jne
xchg
push
sub
xchg
out
push
mov
push
lea
aaa
pop
pop
das
addr16
add
mov
test
sahf
xchg
adc
cli
dec
incl
adc
lock
pushl
pop
xchg
jecxz
inc
and
lcall
pop
enter
mov
mov
aaa
dec
test
repz
divb
or
xor
mov
repnz
insl
xor
aam
mov
je
test
lods
addr16
mov
mov
inc
push
mov
inc
popf
stos
cmpsl
jmp
sahf
or
cmp
cwtl
lcall
inc
mov
out
mov
arpl
lret
xchg
or
stos
and
jbe
divl
inc
sbb
push
mov
loope
lock
daa
fucomip
call
push
ret
lahf
jbe
das
popf
xchg
sbb
sbb
jb
cmpsb
aaa
push
adc
pop
xor
pop
or
jbe
or
xchg
add
mov
out
mov
sarb
inc
or
clc
je
and
adc
jbe
stos
into
movsl
sub
lods
cmpsl
push
sarb
bound
ljmp
cmc
enter
movsl
js
jbe
sbb
ja
xor
push
adc
dec
cmp
mov
or
lcall
pushf
int3
sub
dec
push
mov
cmp
rol
ljmp
and
mov
push
scas
xchg
pusha
cmpsl
add
popf
test
add
push
mov
jmp
repz
gs
sahf
xor
lret
dec
outsb
sub
filds
jle
push
movl
xchg
jns
push
out
and
jl
out
ficoms
frstors
sti
fidivs
adc
push
fildll
sbb
xor
and
sbb
add
divl
aas
call
xchg
xor
out
adc
cmp
cld
mov
into
jns
dec
push
add
js
imulb
pop
dec
ret
inc
insl
add
or
fnstcw
ds
repz
xlat
pushf
jge
mov
push
inc
or
mov
icebp
and
push
pop
cli
mov
insb
cld
jmp
test
or
jg
jecxz
pusha
cwtl
pop
in
sbb
add
aaa
test
mov
out
mov
sahf
ljmp
addl
icebp
ret
push
dec
mov
cmpsb
fistps
sub
xchg
js
xor
or
lsl
or
xchg
out
outsl
jp
fisubs
idivl
fwait
iret
das
mov
and
in
xor
dec
pop
xchg
xlat
ja
int3
jns
dec
stos
loop
movsb
sbb
loop
daa
scas
add
cmp
shll
jmp
sub
push
fstl
outsb
rcrl
in
jp
lea
mov
and
jbe
add
repz
fnstsw
les
jp
data16
add
push
mov
adc
fstpl
andb
movsl
sbb
cmp
xchg
inc
or
cmp
mov
mov
sbb
jmp
jg
out
pop
dec
sbb
sub
inc
inc
repnz
ret
push
pandn
shrb
int3
and
mov
mov
pop
int
ja
mov
in
scas
xor
cmp
dec
mov
xchg
push
jge
dec
std
sahf
sbb
xchg
pop
iret
sbb
and
cmp
in
and
mov
fs
loop
sbbl
das
jnp
mov
dec
cld
scas
inc
cmp
add
mov
adc
inc
hlt
in
test
sub
lret
lds
sub
and
inc
insb
pop
ret
mov
xchg
shl
popf
xor
jmp
nop
and
xlat
sahf
add
ds
shlb
and
or
mov
dec
in
jge
push
xor
cmp
aas
pop
sub
enter
jp
lock
loope
arpl
fwait
adc
stos
pop
les
cmpb
or
mov
pop
dec
mov
pusha
mov
js
push
jmp
mov
push
orb
inc
fnstcw
pop
ret
fsubrs
jo
les
adc
inc
jmp
xor
les
xchg
repnz
dec
sbb
filds
or
in
jle
imul
pop
mov
loope
jbe
insb
rcrl
or
mov
scas
adc
rclb
std
jb
push
jns
test
mov
or
push
push
mov
cmp
jb
mov
cwtl
xchg
mov
dec
xchg
mov
dec
sbb
sbbl
lods
andl
and
orl
call
cli
sbb
enter
push
adc
cmp
jp
push
outsb
outsb
mov
adc
in
dec
or
mov
in
push
lock
dec
xor
or
arpl
mov
adc
push
xorb
out
mov
inc
xchg
rcll
dec
iret
in
test
mov
cmp
push
mov
dec
daa
mov
stos
int3
imulb
sub
cmp
shlb
xchg
inc
or
push
fs
xchg
sbb
sahf
das
enter
je
mov
addl
jae
mov
shrb
fimuls
inc
mov
test
xor
cmp
lcall
xorl
imul
push
int
ja
or
push
cmp
push
sbb
stc
fdivrs
fs
es
ret
mov
mov
ss
and
test
mov
and
lcall
add
arpl
push
stos
cld
mov
pop
shr
xchg
mov
push
das
mov
sub
cmp
stc
or
xor
sbb
aaa
dec
icebp
shll
push
cmp
jge
ds
pushf
nop
jno
sahf
pop
push
mov
and
xchg
add
aas
fdivs
jg
faddl
mov
ret
mov
stos
jnp
push
insl
xor
jge
adc
clc
or
insb
lret
jmp
arpl
fdivr
pushf
mov
or
inc
pop
lods
or
mov
fisttps
movzbl
pmuludq
jp
cmc
dec
mov
fiadds
loop
dec
loop
add
jmp
ss
loope
xchg
mov
sub
mov
mov
les
rcrl
mov
sbb
xor
push
insb
mov
mov
or
cmp
inc
push
stos
lods
loope
jmp
scas
loope
push
fmull
fdivrl
adc
test
mov
cmp
repnz
or
mov
push
mov
lea
sub
jp
nop
daa
pop
mov
adc
pop
imul
ret
cmp
mov
jb
cmp
leave
push
fwait
mov
out
mov
mov
mov
js
push
cs
les
callw
test
adc
repz
inc
sti
jmp
std
fwait
xchg
in
outsb
mov
pop
cmp
jae
and
sbb
inc
arpl
mov
add
lods
test
mov
push
ret
sbb
dec
insl
lods
lcall
lret
ja
cld
pop
and
jp
fldcw
stc
inc
add
cmp
cmp
sub
mov
mov
or
sub
ss
jge
xchg
lods
pop
in
jo
push
insb
lret
ret
scas
dec
ljmp
cmc
and
add
cmc
jmp
enter
std
xchg
faddp
stos
or
movsl
sub
jae
in
int3
imul
sub
jl
sub
lahf
repnz
and
push
clc
dec
cmp
aad
adc
adc
cli
inc
clc
aad
adc
dec
mov
scas
shlb
cmpsb
jg
daa
pop
mov
jno
dec
lods
cmp
idivl
in
ljmp
ret
sbb
cmp
and
daa
pop
out
js
ret
call
sbb
xor
stos
lea
mov
mov
stos
andl
push
xchg
hlt
repz
insb
dec
bswap
aaa
mov
push
jmp
adc
int3
or
jp
jae
decb
and
outsb
lcall
lret
or
adc
pushf
aad
jl
ds
scas
cltd
cmp
frstor
cmp
push
pop
jecxz
pop
bnd
xor
fstpt
fidivs
fwait
lds
jo
loope
sbb
scas
daa
pop
imul
pushf
or
cld
mov
jp
test
fsubrp
aam
push
sbb
push
xor
adc
mov
stc
add
in
adc
fstpt
mov
imul
hlt
ja
jl
sub
push
cmc
pop
push
les
inc
jns
sti
pop
fcoms
mov
add
or
out
push
lret
icebp
mov
xchg
or
insl
mov
mov
cmp
fcmove
loop
mov
or
push
add
xchg
roll
sbb
jb
fstpt
mov
loopne
call
jecxz
push
mov
inc
rclb
mov
sbb
out
data16
dec
sbb
nop
pop
pop
cmpsl
call
add
mov
movsb
inc
stos
shrb
fdivrs
adc
and
push
or
xchg
xchg
xor
lea
push
sti
lret
inc
je
hlt
push
xor
mov
cwtl
adc
shrb
pushf
test
mov
jae
jp
jg
js
push
or
pop
pop
lods
mov
jb
iret
repnz
xor
or
cs
jle
jge
push
enter
xor
imul
and
fs
fs
adc
in
sbb
push
into
cmp
jne
subl
mov
sbb
fwait
imul
push
fildll
and
cmpl
inc
sub
add
jg
jmp
enter
scas
pop
push
repnz
or
pushf
cmc
roll
stc
fwait
mov
imul
lret
lret
or
xor
dec
outsl
push
out
xchg
dec
cmp
ja
push
mov
xlat
jl
jne
insb
dec
std
loopne
cmp
fiaddl
stc
in
pop
lds
sahf
aaa
jns
cmc
ja
jne
xor
in
rcrb
stc
arpl
sub
gs
mov
sbb
inc
jmp
sub
test
xchg
jmp
push
hlt
xor
dec
jno
movsl
sub
rcll
lcall
mov
add
sbb
insl
pop
loope
or
xchg
dec
movsl
bound
inc
in
mov
into
push
test
sub
mov
inc
mov
scas
push
lahf
mov
lock
xor
push
mov
jge
loopne
out
data16
jmp
push
mov
add
mov
push
je
fmul
and
mov
sbb
xlat
jne
sti
cmpsl
mov
clc
adc
pop
into
stos
sbb
jbe
xchg
sub
push
jp
out
mov
xor
jg,pn
mov
mov
dec
push
das
sub
inc
mov
push
inc
hlt
ss
mov
inc
movsb
dec
inc
ja
icebp
imul
lods
mov
or
mov
insb
mov
xor
repz
add
gs
cmp
xchg
mov
lret
or
pushf
mov
ss
dec
adc
mov
xchg
push
push
push
jbe
aad
jl
mov
aas
data16
jo
pop
insl
popa
add
pop
mov
es
cli
in
cs
scas
fsubs
pop
lods
jbe
jnp
pop
in
fdivl
shl
jne
hlt
stc
or
cmp
out
xor
in
cwtl
ljmp
xor
aaa
std
push
mov
sti
and
sbb
mov
push
mov
sbb
iret
or
cmp
push
dec
imul
shlb
ljmp
stc
mov
mov
adc
push
popf
pop
cmp
insl
es
ljmp
nop
jge
push
mov
icebp
insb
stos
mov
mov
sti
push
jmp
fs
aas
repnz
sbb
sub
or
push
cmp
cli
rorl
fs
pop
mov
ffreep
add
lds
push
outsl
pop
out
stc
lret
mov
gs
addb
inc
scas
mov
int3
pop
aad
fmul
jnp
clc
cmp
push
inc
divl
sbb
lods
sbb
jp
out
lcall
addl
dec
mov
mov
mov
pop
loope
aas
mov
out
pop
mov
xchg
jp
cmp
loope
jo
cmp
mov
cmp
scas
push
out
xchg
sahf
jb
push
mov
mov
mov
lea
stc
mov
out
cmp
mov
mov
rcrb
ss
out
pushf
orb
test
cmp
es
pop
xchg
inc
jne
cs
iret
fisttpll
sub
call
cmp
xor
pop
repz
mov
bound
lea
out
sub
popa
test
repz
xor
sub
outsl
popa
cmp
cmpsl
cmp
mov
adc
in
pushf
cwtl
out
stos
push
inc
mov
pop
insb
imul
dec
push
xor
shll
mov
mov
sub
adc
sbb
dec
popf
add
jle
stos
pop
jg
inc
lock
mov
push
js
jecxz
xor
jne
dec
push
inc
stc
pop
jo
jnp
cmpl
je
dec
scas
int
mov
les
sbb
aas
adc
xor
out
or
jmp
mov
int
xor
add
adc
aaa
mov
aaa
mov
mov
dec
jne
popl
mov
cmp
dec
mov
sbb
jecxz
clc
nop
idivb
scas
mov
dec
test
mov
stos
push
loopne
mov
pop
pop
bound
xchg
adc
push
je
ss
orl
fcoms
out
inc
rolb
shlb
cmp
pop
sbb
fs
mov
mov
cmp
cs
test
and
hlt
sbb
dec
fdivp
or
lret
imul
pop
mov
pop
xor
dec
pop
xchg
mull
fdivr
movl
mov
repz
ds
pop
sbb
aad
fs
jmp
call
inc
jg
and
or
mov
sbb
cmp
les
lret
adc
jge
mov
pop
test
pop
lods
cld
in
cmp
adc
push
lcall
pop
add
arpl
scas
xorps
in
ja
ljmp
filds
sub
test
jo
mov
pop
out
pop
fistpll
in
mov
mov
pop
push
jecxz
cmp
stc
fabs
cmc
jae
jo
iret
pop
inc
sub
push
sub
push
mov
cld
inc
push
sbb
jl
int
shrb
stos
loop
enter
pop
or
outsl
or
aas
jo
rcrl
pop
dec
or
insb
sub
addr16
sub
fadds
dec
mov
dec
xorb
jle
xchg
xor
pop
jp
or
mov
mov
inc
dec
hlt
loopne
mov
jl
cltd
loope
mov
jecxz
adc
sbb
loope
pop
xchg
mov
push
lret
pop
loopne
stc
in
aad
dec
int
outsb
clc
cmp
sarl
popa
sub
sub
dec
jo
cld
arpl
xchg
or
pop
push
notb
sub
mov
sub
lods
add
insl
insb
and
bnd
in
and
scas
stos
fistpll
adc
mov
add
ds
lret
inc
mov
cmp
jge
outsb
insl
or
xor
xor
pusha
test
test
leave
lods
and
push
jmp
add
mov
std
ss
subl
sbb
stos
aaa
cwtl
fiaddl
dec
inc
fwait
andl
lret
sbb
xlat
lock
adc
arpl
nop
pop
lds
adc
push
int
insb
inc
cmp
pop
out
loope
xlat
and
add
add
mov
test
xor
pop
jo
test
out
out
fnsave
cs
jle
rcl
push
dec
nop
mov
mov
xor
leave
xor
adc
push
inc
inc
das
jo
out
out
movsb
adc
decb
js
bound
andb
xchg
aad
test
ret
popf
cmp
orb
fiadds
or
inc
rcll
rorb
lock
int
stos
in
out
adc
ds
or
xchg
inc
inc
mov
inc
xlat
jg
movsl
jge
xchg
in
aam
adc
jmp
xchg
adc
clc
hlt
insl
cmc
or
mov
push
xchg
ljmp
nop
mov
xchg
xor
in
das
and
mov
adc
cld
popf
rclb
das
popf
sub
rolb
push
jl
mov
les
jb,pn
dec
int3
push
sub
and
mov
fs
cmp
mov
pop
push
stos
cmp
test
lcall
cmpl
push
cmpsb
bound
test
testb
pop
pop
movsb
rorl
popf
push
cmpsl
mov
add
jge
inc
int
add
test
or
arpl
mov
lock
mov
dec
pop
pop
lds
xor
popf
xchg
mov
test
dec
clc
inc
jne
adc
cli
aam
mov
xchg
outsb
pusha
mov
sub
jae
int3
idivl
dec
ret
jle
mov
jne
lahf
adc
test
imul
clc
movsl
in
ffreep
scas
repnz
cltd
mov
stos
push
pop
xchg
sub
popa
jle
and
rcrl
loopne
pop
add
aaa
mov
dec
ds
aam
sahf
call
cmp
jne
mov
xchg
sahf
sub
jne
mov
pop
rorb
lds
push
out
pop
icebp
mov
hlt
sbb
in
imul
xchg
inc
push
imul
mov
movsb
incl
fwait
inc
xchg
sub
lds
jbe
pop
int
aam
insl
push
outsl
push
test
in
lret
pop
faddl
out
mov
jbe
xchg
lods
nop
jecxz
jmp
push
mov
pushl
popa
and
push
or
jecxz
xchg
mov
enter
ljmp
daa
xor
xchg
dec
int
sub
mov
addr16
sub
in
push
stos
jmp
xchg
mov
adc
push
ret
xor
jne
sbb
push
mov
mov
sbb
addl
jmp
or
test
xor
out
icebp
movsl
sbb
cwtl
jno
push
xor
cmp
pop
cs
ss
pop
and
aas
jae
pop
call
mov
js
mov
arpl
ficompl
fstps
insb
or
jo
iret
sbb
iret
fucomp
jno
icebp
and
incl
cmp
mov
les
lea
mov
std
dec
cltd
pushf
push
jle
lock
loopne
jmp
mov
push
xlat
or
push
out
call
clc
ja
out
sti
dec
sub
imulb
or
ss
jecxz
mov
fisttpll
xchg
xor
fdivp
dec
clc
dec
fildll
out
mov
and
xchg
xchg
cmpsb
aad
inc
lods
in
pop
jp
dec
cs
pop
addl
adc
push
daa
ds
mov
jg
lahf
and
jmp
in
es
push
jmp
mov
mov
adc
leave
test
dec
fistpll
addb
cltd
mov
divl
pop
arpl
out
pop
cli
mov
mov
fidivrl
push
inc
sub
push
cmp
aas
imul
cmpsb
mov
xchg
or
or
imul
cli
inc
scas
out
adc
push
fbstp
incb
ror
int
bound
and
out
cli
pusha
mov
lea
dec
pop
fwait
jp
jmp
lock
mov
iret
cmpsl
and
loopne
xchg
cmp
aas
or
shlb
imul
ret
inc
js
xchg
dec
sbbl
rcl
mov
sub
shlb
pop
lods
repnz
lcall
xchg
jge
dec
mov
incl
or
pop
out
push
push
ljmp
mov
push
imul
movl
lods
fcomps
movsb
push
je
invd
add
push
or
fcompl
sbb
mov
and
out
cmpsl
and
ss
lds
lahf
mov
cli
or
push
xchg
mov
call
xchg
imul
adc
int3
iret
cmc
push
inc
ljmp
xchg
jle
push
mov
adc
lea
xchg
arpl
mov
jno
add
mov
inc
frstor
gs
push
dec
clc
add
sarb
pop
and
push
rolb
mov
add
movsb
cltd
nop
je
mov
xor
and
aam
mov
pop
inc
int
inc
add
imul
or
mov
lods
int
out
movsb
mov
arpl
shlb
add
xorb
dec
dec
mov
arpl
repnz
fwait
mov
js
pop
aam
dec
sbb
sar
dec
mov
in
add
push
orl
and
xchg
xor
aam
push
push
dec
repz
cmp
in
push
in
add
call
pop
in
lds
dec
mov
mov
sahf
xchg
cwtl
cld
subb
push
push
mov
xchg
jle
xlat
or
rcrb
test
into
pop
or
xchg
mov
movsl
jg
cwtl
or
xchg
xchg
cwtl
push
jmp
fldt
inc
xchg
sub
xchg
pop
cltd
in
push
les
test
sub
scas
add
sar
inc
pop
inc
xchg
push
sarb
int
out
loop
das
push
aaa
scas
adc
adc
outsl
add
push
andl
subb
mov
xlat
pop
mov
cmc
sbb
jg
enter
shl
or
inc
jno
mov
xchg
pop
push
cld
pop
das
mov
mov
mov
add
pop
xchg
or
fcoml
mov
sub
xchg
adc
insl
pop
or
pop
outsl
fcmovnbe
insl
sti
divb
jg
xchg
mov
xchg
add
mov
enter
ljmp
inc
pop
data16
mov
pop
popf
mov
std
test
in
aad
test
xchg
mov
mov
xor
add
stos
aam
xchg
mov
cld
pop
xor
inc
insl
cwtl
movb
incb
fmull
sub
test
xor
mov
adc
nop
leave
stos
xchg
fsubs
xchg
push
jns
add
cmpsb
das
vcomiss
test
out
pop
out
jno
ja
cmpsl
daa
adc
pop
push
adc
shrl
out
xor
xchg
idiv
outsb
jmp
push
sub
adc
mov
mov
sub
aam
and
dec
sbb
add
add
negb
mov
sub
out
jo
and
sarl
mov
pop
mov
sbb
mov
adc
pusha
mov
jmp
je
icebp
js
push
mov
rorb
pop
add
mov
std
aad
imul
and
sub
mov
and
xor
in
jb
das
pop
lds
jnp
jecxz
dec
int3
syscall
mov
add
push
push
xchg
in
jg
hlt
jae
and
pushf
fdivr
shll
pop
sbb
outsb
lea
nop
divb
push
xchg
add
sub
dec
movsb
dec
lret
fcoms
sbb
mov
repnz
xlat
push
hlt
inc
sarl
sub
out
jmp
or
jmp
enter
or
in
push
test
mov
nop
dec
in
mov
fmull
xchg
test
loope
dec
es
jne
add
int3
ja
pushl
jge
mov
ret
mov
test
stc
mov
mov
stos
fs
pop
cltd
inc
mov
xor
push
cmp
jne
and
rcrb
js
xor
loope
test
or
jg
adc
lds
into
xchg
icebp
rorb
cmp
mov
leave
test
mov
fsubrs
push
daa
fptan
jne
xchg
push
stos
ja,pn
fsub
aad
sbb
rorb
insb
cwtl
xor
ljmp
shl
mov
mov
das
inc
loope
daa
shlb
sti
mov
mov
cmpsl
and
dec
mov
mov
in
pop
sub
rorl
ja
in
push
aad
lret
jecxz
or
je
clc
test
imul
imul
lock
xor
pop
pop
xchg
shrb
and
cmc
es
aam
repz
jo
jecxz
call
mov
push
popa
add
lods
scas
ja
js
push
or
mov
jmp
mov
repz
mov
ret
ljmp
pushf
js
stos
mov
dec
mov
das
sub
push
imul
popf
or
repz
cmpb
mov
movsl
movsb
inc
cli
das
xchg
int3
push
gs
mov
test
xlat
insl
cmpsb
cmp
ljmp
out
cld
sbb
out
pop
cmp
arpl
xchg
rsm
inc
or
add
jle
push
and
lret
in
mov
rorl
in
mov
adc
ret
pop
add
nop
stc
insb
mov
inc
insl
sub
mov
ret
and
xchg
pop
dec
jmp
mov
mov
mov
aas
repnz
adc
push
pop
je
push
les
mov
jb
ret
inc
pop
or
sbb
mov
insb
xchg
or
mov
cltd
icebp
leave
sbb
in
mov
mov
xor
imul
dec
ja
mov
mov
pop
arpl
and
pop
dec
std
in
xor
and
loope
out
andb
pusha
outsl
and
dec
mov
mov
clc
lock
cmpsb
mov
out
testl
adc
push
pushf
stc
aaa
xchg
mov
jno
or
xchg
cmpsb
add
ret
stos
movsbl
fdivrl
xchg
jno
adc
loope
subb
scas
mov
scas
pop
test
call
dec
add
cs
mov
subl
mov
ja
add
subl
scas
xchg
pop
cld
mov
mov
mov
fidivrl
in
orb
mov
insl
inc
mov
sbb
sbb
pop
xchg
test
xchg
add
xor
mov
loop
jbe
negb
pop
push
les
mov
sub
and
pop
jb
lret
lret
sub
aad
leave
push
dec
cmp
push
inc
xor
cltd
and
aaa
sub
shll
pop
in
cmp
jbe
repz
cmp
testl
jb
loope
and
jo
stc
aas
or
in
stc
cmp
inc
mov
jge
aad
push
test
sub
inc
hlt
imul
outsl
nop
das
and
push
testb
push
xor
shrl
cmpsb
out
arpl
dec
popf
push
popf
mov
ja
int
xchg
push
and
leave
fmuls
sahf
ret
or
jl
sub
mov
mov
xchg
fbld
push
inc
in
push
rcl
push
mov
lods
adc
xlat
enter
leave
in
fsubl
jl
mov
pop
sub
inc
mov
push
inc
and
mov
mov
stos
into
dec
ficomps
je
jo
out
xchg
xor
xchg
aad
cli
jg
shrb
inc
mull
andb
arpl
pop
mov
aam
aam
sub
out
leave
insl
sti
adc
jno
xchg
sarb
adc
lods
sahf
mov
jmp
ljmp
ds
scas
std
push
jmp
ret
rcl
push
stos
pop
out
sbb
mov
push
or
xchg
add
rcrb
or
and
lcall
js
cmp
dec
leave
inc
addr16
mov
mov
sahf
data16
dec
insb
mov
jmp
insl
xor
es
cwtl
pusha
mov
sbb
xlat
dec
out
repnz
and
sarb
cmc
test
pop
mov
enter
rcll
xchg
enter
clc
sub
cmp
xchg
insb
mov
ljmp
push
xor
bound
xchg
mov
mov
in
in
jo
cs
push
sbb
push
inc
sbb
mov
arpl
xchg
sub
std
ljmp
mov
xchg
push
sti
fsubl
add
xchg
push
scas
adc
pop
mov
mov
sub
add
repz
mov
mov
rolb
jp
ret
mov
das
bswap
xchg
in
xchg
pop
cwtl
dec
xchg
stos
fsts
inc
sahf
test
xchg
or
fstpt
loop
subb
adc
mov
mov
mov
mov
jns
sub
adcb
cmp
sti
mov
mov
inc
mov
js
adc
pmulhw
aad
outsb
mov
xor
inc
xchg
adc
sbb
jae
in
movsb
inc
xor
mov
push
add
xchg
mov
adc
call
aad
movsl
aam
sub
ret
shrb
subl
aad
xchg
fwait
xchg
je
xor
jp
dec
repnz
or
push
jg
cli
sbb
in
jo
lods
mov
stc
push
pop
add
mov
syscall
scas
or
into
pop
cmp
in
js
sbb
xchg
rorb
pop
push
rol
push
movsl
push
pop
test
xor
orb
loopne
inc
jl
mov
xchg
sahf
fmul
cmp
idivb
shll
push
aaa
sub
and
dec
jge
sahf
cmp
movsb
xchg
jae
add
sbb
rcll
adc
stc
andl
sbb
inc
pop
cli
fstpl
cmc
xor
push
push
cs
int3
xor
push
cli
int3
cs
test
sub
sar
lock
cli
gs
pop
stos
jle
mul
add
mov
and
push
loop
jmp
sti
xor
jl
push
fimull
xchg
inc
fsubrs
push
lock
repz
jle
mov
iret
pusha
cmpsl
aam
enter
subl
xchg
out
stos
inc
gs
mov
out
mov
xchg
fprem
mov
pop
ficoml
inc
aas
repnz
jno
jmp
mov
iret
sarl
mov
mov
nop
pop
xchg
pusha
mov
jo
jnp
pop
jle
mov
mov
xor
sub
imul
inc
jge
or
push
or
outsb
push
cmc
mov
jne
or
push
nop
adc
sub
pop
cmp
jmp
mov
pop
subl
aam
hlt
lds
mov
cltd
out
call
push
inc
xchg
stos
sub
shl
inc
xor
je
pop
gs
in
jbe
repnz
imul
mov
cltd
xchg
lret
fwait
push
cmp
mov
xchg
out
push
idiv
inc
mov
cmp
xchg
push
lea
test
stos
sub
sbb
sub
or
icebp
xchg
inc
xchg
sub
adc
loope
lahf
mov
shrl
rorl
xorb
and
sarl
cmp
dec
push
mov
jnp
stos
push
mov
jge
pop
mov
adc
negb
dec
adc
jecxz
sub
inc
adc
xchg
out
push
sbb
movsb
insb
sbb
aas
mov
pop
add
and
cli
rorl
jg
subb
rcrl
cmc
push
xchg
push
or
mov
pop
xchg
mov
test
mov
cmp
lret
ja
je
sbb
or
loope
lds
sub
lods
dec
mov
xchg
or
push
xchg
test
enter
jmp
icebp
shrb
sar
repz
pop
and
stc
scas
push
mov
gs
or
mov
xchg
inc
lods
out
lret
cld
sub
xor
mov
in
sti
push
iret
xorb
ret
popa
icebp
mov
pop
add
jo
jns
insl
sub
mov
and
lahf
inc
rcrl
push
movups
adc
test
icebp
movsl
hlt
jecxz
add
push
test
jno
cmpsb
pop
push
mov
in
inc
sub
mov
ror
addr16
mov
push
push
mov
lods
out
jnp
sbb
outsb
in
mov
in
xchg
xlat
or
or
int
lahf
mov
or
movsl
out
lds
adc
mov
cmp
fistpl
mov
xchg
cmpl
lds
push
dec
adc
sub
cld
lea
mov
lret
fiadds
jbe
into
xchg
fptan
es
push
ljmp
xchg
jae
jmp
add
out
shll
dec
out
pop
imul
arpl
push
xor
fisubrs
mov
icebp
fwait
push
fnstsw
dec
cmc
xchg
shlb
pop
jno
xor
cmpsl
dec
clc
mov
jbe,pn
push
or
fcoml
sub
and
jno
js
mov
xchg
cld
les
mov
dec
or
pop
add
aad
mov
lahf
in
pop
adc
ret
xor
xchg
adc
xor
xorl
push
xor
fmull
or
push
stos
inc
sub
adc
add
ret
sahf
cltd
cmp
pop
unpcklps
pop
adc
add
clc
mov
xchg
or
sbb
adc
ja
mov
lods
sbb
mov
fcmovne
jge
sub
scas
jmp
ds
inc
and
gs
fnstenv
incb
dec
dec
jnp
cld
pop
sbb
mov
nop
aad
jbe
cld
iret
lods
repz
sbb
lock
fmul
cltd
jge
cs
inc
lods
js
aad
movsb
frstor
inc
rol
sbb
xchg
pop
or
cli
inc
adc
into
and
mov
push
sti
push
sbb
into
cld
popf
enter
adc
stos
sub
dec
and
push
push
push
shlb
sub
push
push
mov
leave
cwtl
ret
lods
and
in
sbbl
inc
push
and
notb
lods
mov
xchg
mov
and
dec
push
cmp
loopne
cmp
data16
bound
push
sub
sub
pop
xor
dec
inc
mov
add
pop
push
xchg
jl
cmpsl
dec
fs
ss
ficompl
push
sub
jno
lock
add
loop,pn
mov
mov
int3
in
mov
push
jne
pop
mov
les
jp
mov
mov
push
ss
insl
push
aas
mov
das
push
out
cmp
icebp
xlat
xor
push
mov
lods
sub
mov
xor
add
dec
addl
xlat
lods
adc
pop
hlt
adc
mov
rcl
dec
mov
cmc
dec
iret
hlt
stos
loop
cmp
repnz
lahf
test
stos
push
xor
cld
fwait
sub
cltd
pop
daa
andl
imul
xor
xchg
cli
cmpsl
inc
sahf
push
add
cld
rorl
out
pop
sar
dec
lret
es
push
pop
mov
xchg
dec
sbb
jmp
push
jl
sub
idivl
sbb
int3
out
movsl
lods
xchg
xchg
sub
sbb
push
popa
outsb
sar
fnstcw
cmpsl
mov
enter
and
xchg
mov
mov
add
sub
pop
pusha
inc
loope
les
je
sub
add
and
mov
xchg
iret
pop
ljmp
enter
imul
xor
in
fsts
aaa
sub
sub
adc
mov
xor
jnp
loopne
subl
jg
and
sti
xchg
adc
xor
fstl
aas
jne
mov
lock
leave
movsb
sbb
int
dec
imul
mov
mov
inc
iret
cmp
push
cltd
movsl
sbb
gs
sti
sub
adc
sbb
cwtl
arpl
pop
insb
in
call
push
add
test
jo
mov
cltd
in
mov
lods
inc
and
testb
pop
gs
jbe
stos
iret
mov
push
push
adc
push
push
push
jge
pop
orl
clc
or
test
cli
xor
adc
sub
sbb
pop
adc
push
lods
dec
add
subb
inc
jg
sub
ss
sbb
add
pop
lahf
pusha
dec
mov
inc
fisubrs
aaa
scas
fisttps
mov
inc
jb
call
into
jp
call
fistpl
hlt
sahf
inc
repz
pop
stc
sbb
add
adcl
mov
ret
fstps
ret
imul
xor
loopne
mov
mov
mov
fimull
gs
cmpsb
xor
pop
push
stos
sub
or
mov
cmc
xchg
stc
jae
adcb
fldenv
or
sbb
sub
ret
pop
popa
subb
mov
es
sub
cmc
mov
scas
cmp
and
xchg
xorb
fadd
jbe
jl
aas
xor
pop
loopne
inc
cmp
push
jns
cwtl
cmpsb
repz
fs
pusha
jb
or
xchg
int3
testb
mov
dec
outsl
ljmp
push
xchg
ret
pop
clc
sub
fstl
out
enter
mull
andl
jmp
jp
ror
lcall
push
outsb
pop
mov
add
popa
dec
mov
and
and
sbb
jne
xchg
pop
outsb
xor
mov
cs
dec
mov
mov
bound
gs
aam
and
mov
and
add
fisttpll
adc
movsb
add
mov
pushf
dec
fsubl
pop
stos
inc
jb
mov
dec
addb
xor
and
mov
jg
fnstcw
pop
mov
fstl
js
cmp
hlt
mov
dec
inc
dec
cs
std
lret
cmpsl
stos
jl
jge
out
dec
or
add
popf
mov
mov
jnp
cmpsl
mov
pop
jnp
sub
jb
mov
xlat
cmc
and
gs
mov
lret
in
nop
out
pop
roll
xchg
mov
push
test
dec
imul
test
stos
push
cmpsl
popf
jmp
adc
dec
mov
mov
ja
in
jl
ss
movsb
ret
data16
dec
jg
sbb
xchg
inc
ja
pop
mov
es
mov
cmpsl
mov
mov
scas
popa
loop
les
ffreep
and
int
out
and
jle
out
test
cmp
shlb
jmp
cmpsb
std
xlat
or
inc
iret
jns
jo
jecxz
xor
push
and
stos
sbb
sbb
test
jl
mov
mov
add
or
xchg
sub
push
mov
inc
or
sbb
xchg
mov
mov
sbb
enter
or
add
sbb
jne
lahf
pop
mov
sti
cmp
adc
clc
mov
or
les
out
xor
leave
ds
test
imul
fs
es
and
sbb
ds
mov
push
imul
pushf
dec
sbbl
sbb
push
and
enter
sbb
and
push
mov
inc
xchg
stos
dec
dec
dec
std
sub
add
xor
pop
arpl
ret
ret
das
ret
int3
jo
jne
fidivrs
sbb
hlt
dec
dec
mov
shrl
into
sub
dec
loopne
scas
mov
aam
ret
inc
fstps
inc
mov
jb
add
dec
xor
add
xor
test
imul
and
addr16
adc
jno
hlt
nop
pusha
lods
mov
cwtl
mov
cwtl
hlt
lea
inc
addr16
in
jmp
cmp
decb
xchg
push
in
push
inc
add
jl
add
into
xor
pop
outsb
mov
cmp
or
ljmp
xchg
inc
in
dec
xchg
jo
in
sbb
mov
fld
dec
addr16
jb
js
rcr
jle,pn
pop
aad
dec
inc
sbb
pop
inc
xchg
sarb
push
out
dec
nop
mov
adc
xchg
dec
xchg
or
decl
loop
rcll
repnz
jbe
sarb
or
repz
daa
mov
dec
aad
repnz
xor
jge
dec
mov
vpshlq
and
cmp
or
dec
jge
cmp
mov
inc
cmp
ljmp
mov
out
insb
popf
fcomi
imul
pop
dec
mov
dec
js
sbbb
sbb
cmp
hlt
push
fmuls
cmpsl
testb
subb
adcb
pop
cmp
pusha
cmp
bound
dec
fisubl
mov
sbb
mov
pop
jne
iret
and
sbb
loopne
sub
cmc
pushf
mov
cmp
inc
arpl
nop
popf
mov
push
add
jae
mov
es
or
idivb
or
clc
enter
pop
filds
mov
dec
enter
add
mov
jle
leave
sbbl
fstpt
mov
stc
repnz
popa
jecxz
repz
popf
std
ds
das
fisttpll
sub
pop
fdiv
js
adc
fmuls
jg
add
pop
xchg
lea
and
out
dec
push
xor
jnp
sub
mov
cli
addr16
pop
je
pop
stc
dec
ss
xadd
cmpsb
push
dec
xchg
lods
cmp
jmp
ret
call
and
pusha
push
imul
mov
push
push
mov
or
cmp
cmp
data16
fadds
and
xchg
into
xchg
stc
js
adc
repnz
lods
add
jmp
fistl
cli
ss
dec
sub
xor
cmp
and
fsub
in
jl
lahf
mov
pop
popf
push
mov
sub
xchg
xor
or
pop
lods
pop
xor
es
loop
shlb
int3
push
or
adc
or
pop
sbb
or
cs
dec
mov
push
in
xchg
push
paddd
mov
cli
dec
ja
sbb
popa
cs
and
xchg
xchg
out
mov
js
cmp
pop
and
mov
and
mov
xor
cltd
push
ljmp
adc
pop
out
roll
mov
jnp
mov
nop
gs
rcll
jns
jb
mov
lret
into
dec
sar
cs
or
pop
and
sub
dec
clc
dec
sub
push
or
nop
pop
lods
je
jg
subb
mov
inc
sbb
dec
dec
outsb
pop
inc
push
inc
cmp
inc
and
push
jo
and
inc
or
cmc
gs
cmp
mov
pop
negl
dec
js
movsb
push
xor
mov
jo
jnp
cmpsl
int3
scas
lods
fwait
gs
sbb
lods
arpl
aas
add
jno
mov
mov
nop
idiv
cs
adc
fsubl
insb
add
sub
sbb
lods
nop
push
push
mov
mulb
push
fmuls
sbb
mov
adc
or
jg
jae
stos
add
add
sbb
test
repz
sti
repz
add
jno
push
and
cmp
ficoms
mov
out
or
adc
pop
fnstenv
sbb
ffree
push
in
testb
sub
push
lods
cmp
cltd
jbe
aam
scas
jno
mov
cwtl
adc
jge
fs
adc
or
mov
sub
rcrl
add
xchg
outsl
pop
xor
pop
outsb
xchg
rorb
cli
jmp
mov
mov
gs
lods
and
cmc
adc
call
in
jbe
inc
dec
mov
cltd
jp
stos
pop
add
and
mov
mov
fistl
dec
pop
aaa
xor
push
stos
lock
in
or
and
retw
cwtl
adc
xor
and
sarb
add
push
pop
ljmp
lahf
cld
inc
sub
mov
fwait
mov
mov
or
popf
jl
cmp
bound
dec
xchg
jo
lahf
dec
adc
push
inc
and
daa
dec
pop
or
jae
cmp
xor
ds
dec
and
data16
push
inc
out
cmp
addb
aam
rcl
dec
sub
cwtl
push
movsb
out
ret
cmp
sahf
jp
dec
sahf
fs
je
mov
and
and
jecxz
xor
lock
push
int3
idivl
test
cs
mov
sub
pushf
ret
test
and
dec
cs
aas
leave
decb
dec
inc
rorl
fcoml
or
mov
jne
fsubr
jne
xchg
pusha
movsl
jle
xor
xchg
push
dec
in
dec
lahf
xchg
fucomp
fnstcw
mov
std
dec
sub
inc
in
and
mov
int3
xchg
adcw
cbtw
mov
mov
cs
lret
sti
and
mov
pminub
pusha
aas
pop
push
mov
add
xchg
inc
xor
fwait
lahf
push
loope
leave
outsl
daa
adc
inc
test
jg
mov
clc
jl
int3
sub
insl
fildl
xor
sbb
divl
insb
mov
mov
popl
sub
jne
test
add
mov
sub
mov
mov
pmulhuw
insl
inc
jne
inc
ss
xor
pop
dec
addl
cli
popf
add
mov
addl
js
jecxz
cld
out
xchg
sahf
ljmp
popf
popf
mov
cmpsb
jmp
xor
and
jp
add
dec
mov
inc
xor
fdivp
xchg
sub
fildll
jge
sbb
mov
jle
cmp
xchg
jle
lcall
mov
xchg
out
aad
add
push
loop
cld
xor
cmp
movsb
inc
mov
jmp
test
mov
xlat
cs
test
jne,pn
jne
fcos
jmp
outsb
inc
ficoml
mul
adc
jl
sub
sbb
pop
sub
inc
inc
imul
iret
call
aad
add
nop
mov
loope
and
xchg
in
cmp
aas
push
adc
pop
into
into
cmp
jae
stos
add
repnz
jmp
ss
js
mov
dec
push
inc
leave
and
lahf
test
ret
jmp
ja
jle
nop
sarb
decl
xlat
add
dec
lret
inc
shrb
jl
mov
fidivl
cmp
lahf
and
fdiv
add
test
je
pop
int
out
scas
jmp
push
int
add
jno
sbb
testb
mov
xor
insb
repnz
arpl
leave
cld
adc
sub
jo
and
movsb
cli
repz
xchg
in
cmp
repnz
aas
dec
pop
and
pop
sahf
xor
mov
add
jno
cmpsl
mov
pop
lock
mov
mov
xchg
and
inc
jae
cmp
lret
test
xor
mov
push
shlb
aas
push
xor
loope
push
and
scas
into
add
mov
lods
mov
push
mov
inc
ss
in
push
enter
mov
mov
lret
inc
insb
cli
pop
pusha
ret
rcll
pushf
rol
xor
fwait
insb
sbb
and
jg
cld
or
jp,pt
out
mov
out
int3
rcl
je
push
dec
jmp
imul
ss
test
and
arpl
out
inc
dec
push
out
xchg
sub
xchg
pop
push
dec
adc
push
lds
xorl
shll
aad
xor
outsb
lahf
dec
lods
or
add
cmp
push
bound
jo
cmc
ja
xchg
mov
dec
andl
loope
lret
mov
push
xchg
add
psubsb
mov
pop
das
mov
mov
in
rcrb
movsl
out
jae
fadd
inc
test
jno
adc
adc
or
pop
mov
pusha
shl
sbb
aad
add
es
test
adc
icebp
test
test
adc
push
mov
cld
xor
dec
lcall
jmp
sahf
sub
xor
and
jp
lods
dec
std
fwait
cmpsb
test
ret
push
scas
cmp
insl
js
pop
fs
adc
pop
or
jl
cltd
in
mov
jmp
fsubp
and
inc
repnz
clc
fs
push
pusha
sbb
pop
xchg
jne
adc
pop
and
mov
repnz
sbb
in
sbb
add
mov
inc
fs
add
mov
cmp
sub
and
cs
xlat
ja
testb
arpl
ret
adc
mov
mov
sub
das
xchg
mov
scas
adc
pop
mov
in
mov
push
les
pop
sti
pop
insl
pop
jmp
jno
push
lea
push
lds
push
addr16
loope
fadd
and
inc
mov
push
cli
pushf
add
jnp
fcomps
insb
fisubl
push
fldenv
fld
jbe
es
fisubrl
shl
or
sub
cmp
add
jbe
stc
or
sbb
sub
pop
fcomp
test
jns
and
adc
mov
xor
sbb
jmp
pop
ror
in
dec
sub
push
ljmp
call
pop
hlt
sbb
jno
mov
jbe
jae
jno
cmp
cmc
mov
add
inc
add
data16
test
mov
push
fwait
adc
mov
mov
pop
scas
dec
ja
push
insb
repnz
push
shl
ret
fdivs
inc
push
cmpsl
xchg
pop
xor
sbb
bound
scas
jg
cli
sahf
imul
adc
sub
pop
int3
push
loope
dec
xor
dec
dec
mulb
adc
sti
movsl
cmp
pop
sub
and
lret
lret
inc
jb
fwait
into
pop
mov
pop
test
mov
lret
push
lock
scas
mov
lods
mov
lock
push
and
icebp
xor
fcmovnu
std
xor
mov
arpl
cmpl
or
cs
add
imul
out
shrl
jp
inc
dec
xchg
decb
stos
jl
xor
xchg
les
jae
push
dec
xchg
jnp
icebp
ret
mov
cltd
jmp
push
ret
add
xchg
addb
fdivs
outsl
xchg
jge
sub
les
jecxz
cmp
cmp
mov
sbb
sub
mov
cltd
cmpsl
inc
cmp
imul
dec
push
jecxz
cmp
dec
xor
and
jp
xchg
out
push
js
cmp
xlat
jg
dec
push
mov
jo
lret
int3
in
call
mov
cmp
push
pop
or
shrb
ss
push
cmp
scas
outsb
fists
push
pusha
idiv
xor
or
inc
pop
push
ds
iret
imul
loopne
std
inc
jno
int
stc
aaa
sub
ljmp
and
xor
and
test
mov
inc
jnp
and
add
insl
mov
add
lock
mov
mov
pop
test
sahf
jecxz
xchg
movsl
ret
cli
lock
cmc
out
xorl
inc
mov
mov
neg
inc
sbb
int3
dec
js
xchg
daa
or
mov
pop
loop
or
rcrb
and
push
xchg
inc
mov
iret
stc
mov
out
fdivrs
adc
fs
or
lods
sub
or
bnd
movsl
js
imul
and
aam
std
lcall
xor
sub
push
dec
add
jle
dec
insl
jl
sarl
and
subb
push
repz
in
pushf
icebp
call
cmc
insl
je
inc
mov
inc
mov
lock
cmp
mov
insl
cli
inc
pop
dec
and
inc
test
or
mov
not
and
lret
inc
add
xchg
jbe
mov
sti
or
mov
push
or
dec
test
sub
or
lock
inc
loop
cmp
and
lods
stc
mov
test
in
xor
mov
push
je
idiv
dec
sti
int
in
xchg
fistpll
fadds
and
pusha
ja
cmpb
mov
shr
mov
mov
xor
in
dec
or
fisubrl
pop
and
out
subb
jmp
push
inc
inc
aas
inc
lods
fcomip
mov
sbb
xchg
jmp
push
test
pop
aas
shlb
iret
scas
push
jb
mov
imul
pop
imul
dec
push
mov
cmpsl
push
adc
into
sub
sub
inc
out
push
jle
aaa
jl
sbb
lret
jo
orb
jne
mov
ljmp
pusha
cmpsb
and
pushf
sbb
scas
dec
fstl
dec
pminsw
fnstenv
adc
dec
enter
fisubrs
push
sti
sarl
out
mov
mov
and
andl
out
xchg
sub
repz
or
push
and
cli
subb
jno
fcoml
dec
pop
in
adc
jge
dec
jnp
ss
add
jmp
and
xchg
leave
xor
jae
pop
mov
or
cmp
imul
roll
sbb
sbb
jne
mov
rorl
inc
bswap
xchg
insb
jp
pop
std
icebp
lret
push
out
movsl
bound
jmp
cmp
sbb
jnp
out
dec
push
push
ret
sahf
pop
int3
pop
pop
incl
inc
fidivrs
enter
xchg
add
xor
popl
pop
aas
push
and
fnstenv
dec
loop
pop
leave
cld
mov
jae
ror
cmpsb
repz
mov
mov
daa
jbe
jg
pop
stos
cwtl
and
jb
cmpsb
sahf
xchg
jbe
mov
shrb
hlt
jbe
scas
and
test
sbb
adc
daa
and
aam
push
dec
xchg
sti
aam
cmp
aas
jo
xlat
sarb
test
inc
mov
aam
out
fcompl
pop
and
jg
loop
sahf
cli
push
mov
jno
scas
pop
rorl
testl
enter
xor
fcoms
sarl
das
add
out
clc
inc
cltd
push
dec
push
sub
jno
testb
stos
enter
mov
loop
sbb
hlt
inc
sti
inc
int
sbb
fldlg2
iret
addl
test
or
mov
push
fcoml
xchg
mov
movsb
dec
negb
lret
adc
out
mov
clc
stos
xchg
inc
pushf
adc
push
push
or
ret
ds
pop
in
add
adc
xchg
es
sub
mov
stc
roll
pop
push
jecxz
mov
test
ds
shr
test
les
adc
lret
out
sti
daa
xchg
test
sahf
add
and
add
push
mov
in
mov
loop
push
fildll
adc
test
sbb
xchg
int
fisubl
fsubs
mov
ret
shlb
inc
pop
add
vhsubps
mull
cmp
js
add
mov
dec
sbb
repnz
push
in
dec
mov
int
rorl
aad
and
pusha
test
inc
xchg
push
jnp
out
adcb
jnp
loop
imul
mov
mov
aad
push
xchg
testl
xchg
dec
xor
out
jge
arpl
add
enter
pop
dec
push
or
fnstcw
stos
into
decb
adc
and
bound
cld
dec
stc
movsb
mov
push
pop
mov
int3
cmpsb
mov
jbe
imul
shrl
sbbb
mov
pop
lahf
repz
mov
dec
or
loopne
int
mov
xchg
sahf
jp
cmp
fst
fstp
add
inc
add
int
inc
divl
xor
insb
xchg
out
sahf
shrb
pop
ficoml
pop
lock
dec
sub
loop
ret
or
add
pop
js
mov
loopne
cltd
sub
addr16
cmpsb
jne
leave
and
jl
sahf
cmpsb
pusha
aad
pop
or
inc
aam
pop
lcall
fwait
sub
cmp
flds
addb
incl
fwait
dec
or
fwait
pop
mov
sarb
popf
pop
xor
jno
movsb
add
xchg
icebp
and
push
xor
mov
pop
adc
lea
sub
insb
push
adc
xor
xor
add
scas
cmp
loopne
jno
add
jae
xlat
repz
in
sub
jo
dec
inc
pop
fwait
push
jno
mov
dec
scas
enter
data16
jo
int
and
push
sbbb
aad
mov
dec
shll
ficompl
shlb
mov
test
lahf
dec
mov
fsub
adc
push
lods
int
inc
xchg
sbb
out
pop
cltd
or
call
out
mov
in
test
mov
or
or
inc
xchg
push
lods
ror
push
cld
aas
lods
mov
adc
outsb
and
out
xor
adc
sub
jns
or
cwtl
jbe
fxch
mov
pop
jnp
pop
sarb
popf
into
insl
inc
dec
shrb
hlt
lods
je
iret
ds
scas
sbb
cmp
fld
mov
icebp
jae
xchg
push
std
in
jne
cmpsb
add
fsubr
pop
dec
push
ret
xor
add
sub
pop
fistpl
mov
sti
inc
cmc
mov
inc
or
lcall
lds
insb
leave
inc
cmc
mov
movsl
adc
and
jbe
stos
sub
push
mov
sbb
imul
divl
imul
dec
test
jb
xchg
test
push
movsb
mov
push
test
sbb
fistpll
mov
mov
push
add
incb
jge
loopne
mov
add
or
lods
loope
adc
inc
adc
push
add
loope
sub
and
add
jge
iret
clc
movups
jecxz
leave
xlat
adc
dec
xchg
inc
add
jb
into
push
dec
add
aad
adcl
cmc
out
test
add
or
or
int
mov
or
push
pusha
xlat
pop
lret
std
insb
pop
push
dec
mov
hlt
testl
sahf
xor
push
push
dec
jp
sbb
jmp
jmp
jne
xchg
cwtl
sbb
xchg
inc
push
fcoml
mov
xlat
fs
mov
or
cmp
in
sub
shrb
mov
dec
mov
mov
cmp
test
add
mov
add
aad
xor
xor
inc
mov
push
lds
mov
jge
pop
xor
pop
pushf
loop
xchg
jbe
lock
sbb
adc
test
loope
fwait
xchg
movsl
mov
and
in
and
test
cs
cld
sub
inc
add
cmp
repz
inc
cld
jnp
test
sub
xchg
mov
andb
adc
inc
in
xchg
sub
push
adc
and
cmc
pop
pop
fs
test
xor
pop
out
cmpl
ljmp
fistps
mov
mov
fiaddl
jnp
mov
aam
inc
mov
add
fadd
jae
push
sbb
sub
out
lods
pusha
and
out
dec
mov
adc
xor
aad
rclb
lock
mov
and
dec
out
sub
mov
lods
dec
pop
repnz
xchg
jle
pop
add
and
int3
ljmp
dec
push
js
mov
lods
inc
push
imul
adc
push
int3
jae
inc
out
lret
in
cmp
mov
lods
fmull
pop
rorl
xchg
add
sarl
and
adc
sub
in
xor
inc
dec
out
ljmp
push
xchg
mov
sub
sbb
xlat
pop
mov
sbb
mov
xlat
inc
mov
addr16
cmp
sub
mov
movsl
sahf
imul
cs
push
dec
cs
xchg
jne
lret
and
push
add
addr16
pop
xchg
lock
jl
xchg
or
mov
stos
iret
js
ror
test
mov
fs
pop
scas
push
into
adc
aas
mov
adc
test
adc
mov
cmp
dec
sub
pop
sbb
or
cwtl
xchg
out
dec
stos
int
jmp
hlt
std
bound
mov
pop
inc
js
sbb
out
mov
pop
ja
fmul
test
stc
fcmovbe
sub
stos
push
push
aaa
ljmp
dec
rorb
mov
mov
jbe
je
and
inc
jnp
nop
out
sbb
fsubr
mov
iret
mov
test
dec
insb
out
rcrl
mov
mov
xor
in
mov
xchg
pusha
sbb
jp
pop
xchg
inc
mov
movsl
mov
mov
sbb
mov
dec
mov
jo
orl
push
dec
adc
sub
subb
lock
xchg
cmc
and
pusha
cs
xor
adc
out
dec
inc
dec
add
paddw
ret
inc
pop
test
jge
mov
lret
sbb
es
out
std
mov
xchg
and
sub
js
cs
popf
repz
enter
cs
mov
adc
jne
adc
imul
mov
pop
pop
xchg
pop
push
push
fmuls
das
dec
jns
movsb
and
mov
dec
sti
out
sbb
int3
xchg
lds
push
pop
sub
faddl
arpl
cmp
aam
add
sbb
adc
xor
test
sub
stos
shll
stos
add
mov
or
clc
or
dec
jecxz
fs
aaa
xchg
xor
pop
mov
sub
xchg
leave
add
jge
ss
fstpt
fstp
je
add
mov
mov
ja
rcrb
pop
add
add
mov
daa
lock
xchg
xor
cmpsb
and
mov
out
sbb
mov
imul
cmc
rol
fmuls
lcall
arpl
mov
or
sub
dec
stos
cmp
push
xor
in
mov
jns
mov
xchg
mov
mov
push
pusha
xchg
imulb
mov
push
lcall
lahf
mov
out
add
mov
sub
pop
fimull
dec
sub
pusha
mov
xchg
aad
mov
xchg
stos
jg
in
adc
fdivs
pop
das
outsb
scas
ss
cli
dec
lea
test
lcall
mov
jmp
cmp
mov
or
test
and
mov
mov
popf
and
push
sbb
xor
mov
stos
scas
pop
inc
repz
cmpl
loop
outsl
ja
sbb
mov
faddl
popf
shll
jno
int3
test
or
fimull
pop
dec
cmpsl
icebp
js
iret
in
adc
lahf
dec
movsb
rcll
push
push
push
and
dec
jns
mov
ret
outsl
std
leave
inc
sbb
popl
lret
mov
push
jbe
scas
ja
jecxz
ja
out
jae
push
lds
lcall
repnz
and
dec
movsb
test
in
pop
pop
xchg
pop
outsb
jns
lahf
popa
mov
jne
push
jecxz
xchg
fisttpll
imul
jns
orl
in
mov
xor
adc
add
push
das
pushl
mov
rcrl
das
outsl
add
and
fnsave
int
jl
xor
jg
push
inc
dec
push
and
sub
pushf
xor
add
fwait
sbb
pop
lret
jp
cmp
xchg
add
push
adc
cmp
imul
inc
adc
sti
xchg
mov
push
lock
in
jo
sbb
sub
pop
enter
mov
jge
in
out
dec
and
test
hlt
cmc
jg
dec
cli
test
dec
pop
add
inc
inc
and
les
inc
xchg
movsb
in
fnstsw
inc
sbb
fidivs
or
popa
loop
std
xchg
lcall
ja
xor
add
mov
dec
or
ja
pop
inc
cmpsl
and
xor
inc
inc
mov
add
jg
orb
mov
xor
mov
popf
and
push
mov
sbb
jl
jmp
mov
mov
scas
push
pop
sub
add
out
jp
xor
js
fs
fwait
imul
into
mov
ret
lods
push
lret
cmp
gs
lret
push
sbb
add
ret
adc
pop
inc
nop
jmp
mov
insb
add
push
rcrb
dec
adc
adc
je
mov
adc
mov
mov
dec
sbb
cmpsb
xor
sti
mov
std
sti
or
cwtl
add
jg
enter
jne
xor
mov
push
bswap
adc
fdivl
sub
movsb
push
fnstenv
xchg
mov
xchg
int3
sbb
xchg
lock
sub
jb
scas
cmp
lods
and
push
push
mov
scas
lods
cmp
dec
lock
loopne
stos
aaa
les
and
dec
mov
dec
lods
inc
push
and
adc
add
js
and
test
addb
xchg
icebp
jb
push
bound
mov
fsts
repz
xchg
pop
out
movsb
cmpsl
lahf
sbb
ds
jo
mov
mov
inc
dec
mov
cmpsb
xorb
iret
add
or
xor
test
pop
js
xchg
ljmp
mov
pop
outsb
int
outsl
cwtl
inc
shl
lahf
inc
cli
and
pop
daa
add
jae
mov
push
daa
adc
xchg
sahf
ret
int3
cs
dec
mov
adc
push
je
push
fadds
test
addr16
inc
fdiv
sahf
and
add
lods
scas
sahf
sbb
cld
iret
int
xchg
clc
mov
inc
nop
mov
mov
loopne
leave
loopne
sar
dec
pop
out
mov
push
vmulss
arpl
leave
xchg
cli
sbb
cltd
adc
adc
mov
daa
incl
cli
inc
dec
or
stc
jl
pushf
ret
mov
jno
sbb
pop
lcall
dec
sub
shl
test
xor
cmp
jecxz
dec
aad
les
mov
xchg
or
push
rcll
arpl
xor
jae
les
cmpsl
jmp
push
lret
test
and
dec
sti
and
or
push
rorl
push
faddp
sub
scas
jnp
add
mov
pop
xchg
cwtl
mov
xchg
sbb
ja
imul
mov
sbb
inc
popa
adc
adc
xchg
push
out
or
cmpsb
push
pop
push
aad
les
or
test
sbb
pop
popl
sub
into
mov
ljmp
lock
int
mov
test
add
dec
mov
xchg
pushf
lret
fstps
cmpsb
aas
ja
xchg
pop
icebp
outsl
or
mov
and
sub
pop
xor
xlat
xchg
outsb
xchg
pop
xchg
xchg
sub
roll
add
andl
divl
into
ret
jg
pop
adc
mov
push
jne
and
addr16
inc
adc
or
cmpsl
mov
mov
lahf
fiadds
xor
in
xchg
fldenv
cwtl
imull
aaa
adc
mov
lret
outsl
jne
bound
je
sbb
jb
cwtl
push
je
sub
jmp
lods
dec
enter
inc
inc
stc
ret
mov
mov
dec
icebp
push
push
lret
jb
sarb
and
xchg
leave
mov
lcall
outsl
pop
push
aad
popf
inc
pusha
into
adc
stos
and
sbb
sbb
xor
addr16
loopne
inc
nop
jp
pop
cltd
divl
push
stos
jecxz
fistpll
dec
mov
mov
arpl
test
lret
pushf
fldl
push
stos
jae
pop
xchg
sub
dec
xchg
mov
insb
loopne
xor
out
nop
mov
mov
movsl
arpl
jbe
fmull
aad
mov
movsb
jns
mov
or
pop
xor
lods
adc
mov
inc
dec
ret
shrb
rcr
or
xchg
adc
out
mov
aas
cmpsl
imul
inc
push
lahf
pop
dec
mov
data16
xchg
pop
adc
leave
jne
out
idivl
scas
pop
fdivrs
ret
push
push
push
stos
lret
sbb
dec
rorl
cmpsb
sar
mov
push
cld
jb
test
cmp
xchg
pop
cmp
jge
cltd
xor
jb
cmp
jmp
or
jecxz
mov
cs
test
xchg
sub
loop
cmp
push
pop
mov
xor
hlt
rcrl
mov
xchg
arpl
push
out
jmp
stos
sub
dec
shl
scas
sub
jnp
jbe
in
cmp
dec
lea
popa
and
shlb
cmpsl
das
roll
loope
out
sub
mov
jnp
std
pop
xchg
or
fstpt
rcll
push
add
test
xchg
cmp
xchg
out
in
mov
iret
ss
ja
in
or
pop
imul
push
cmp
pop
or
pop
or
xor
mov
nop
xor
inc
adc
jmp
xor
les
repz
fldl
inc
pop
jbe
push
popf
xchg
jmp
cmp
aas
mov
decl
jne
aas
mov
xlat
jle
lahf
ds
push
inc
lret
ret
push
es
into
shr
dec
adc
xor
repnz
mov
xchg
scas
fs
test
inc
jns
test
test
mov
aaa
cmp
inc
lret
orl
adc
xchg
inc
scas
mov
mov
nop
push
inc
dec
jbe
repnz
or
movsb
cmpsb
inc
or
je
repnz
inc
data16
enter
sub
sar
stos
enter
stc
out
sti
popa
push
jno
hlt
xchg
pop
fwait
sbb
xor
mov
call
popf
pop
aad
clc
jb
jno
insl
pop
push
out
mov
adc
imul
cwtl
insb
pushl
push
aad
outsb
int
das
push
push
jnp
add
fstpt
pop
out
jb
movsb
fcompl
push
xchg
mov
stos
pop
fs
sahf
popf
loop
cld
and
cmp
mov
stos
dec
add
inc
jnp
mov
push
fmul
icebp
cli
mov
mov
stc
add
sar
cmp
sbb
inc
sbb
cmp
stos
xor
mov
jmp
nop
dec
mov
or
pop
mov
mov
aaa
push
lds
cmp
mov
imul
dec
cmp
push
add
test
stos
nop
leave
popa
idiv
lahf
xor
push
fucom
repz
pop
push
shlb
movsb
lock
leave
xlat
fimuls
push
dec
pop
fmull
jae
cli
popf
cs
add
pop
mov
xor
add
aam
cmpsb
fwait
mov
inc
add
xchg
xchg
push
icebp
sub
or
insb
add
loope,pt
mov
imul
add
or
pop
fs
int
push
mov
sbb
movsl
or
in
push
loope
lahf
decb
xchg
in
pop
inc
mov
aam
push
ret
arpl
imul
pushf
xchg
mov
mulb
jo
mov
stc
mov
in
lods
in
fistpl
andb
and
and
bnd
pop
bswap
incl
add
mov
jnp
sbb
loopne
xchg
inc
jnp
test
cmp
push
mov
mov
xchg
ret
sbb
rclb
clc
aam
lret
inc
outsb
xor
test
daa
sarb
pop
xor
or
pop
fsubrs
dec
das
or
jb
cld
pop
add
pusha
add
jp
and
mov
hlt
stc
sahf
add
xchg
fldenv
xchg
mov
sbb
fbld
test
jae
lahf
push
cmp
or
and
nop
test
push
dec
scas
adc
adc
inc
mov
dec
inc
pop
xchg
mov
fmuls
hlt
push
dec
sbb
jle
sub
and
sub
push
popa
xchg
arpl
bound
push
xchg
iret
dec
cs
cs
cmp
adc
dec
xor
xchg
pop
dec
imul
or
and
je
xlat
add
les
xchg
aas
mov
imul
pop
lret
leave
adc
rcl
xchg
scas
test
lea
aad
fdivrp
mov
les
jle
pop
ja
int3
stos
mov
out
jbe
fistpl
cmp
mov
sbb
mov
repz
btc
std
mov
push
or
adc
mov
fsubr
jbe
add
mov
movsl
repz
pop
fsubrp
mov
sub
nop
stos
add
fistl
xor
adc
pusha
out
cld
push
inc
jb
cld
pop
xor
pop
mov
jg
cs
std
xchg
outsl
push
pop
out
cli
test
adc
add
jo
sbb
mov
lods
int3
pop
mov
sbb
dec
cmpsb
jp
push
mov
leave
iret
cmp
test
out
cmp
pop
jecxz
xor
xorb
xchg
pop
xchg
push
xchg
adc
rorb
mov
inc
stos
mov
loopne
add
shlb
add
xor
fldcw
mov
sub
jmp
push
dec
xor
imul
push
dec
push
cmp
inc
aas
xchg
inc
jns
roll
pop
addb
mov
loope
xor
call
adc
jg
lahf
xor
int3
int3
insb
jns
stos
cs
icebp
sbb
add
cltd
mov
lods
adc
inc
imul
sub
aad
push
in
mov
push
js
sti
fidivs
xchg
lock
ljmp
jbe
push
push
aas
push
imull
mov
mov
push
sahf
pop
cld
sbb
push
sub
cmp
adc
or
inc
cs
sub
and
pop
call
insb
sbb
jo
cmpsl
cmp
push
decb
stc
adc
faddp
rcrb
fcompl
int
loope
imul
movsb
and
inc
push
adc
inc
outsb
xchg
inc
cmp
mov
iret
stos
mov
je
mov
in
dec
ja
push
loope
nop
sbb
cmpsl
popf
leave
jb
loopne
aad
cmp
push
lock
sub
cmp
sarl
aas
in
fdivrl
inc
sbb
xlat
or
mov
scas
dec
mov
out
xchg
in
sbb
shl
jb
dec
xchg
ljmp
fwait
testb
push
sbb
lods
jecxz
fs
fsubrs
dec
fnstcw
fistps
xor
push
xchg
lahf
jp
imul
mov
insl
hlt
stc
test
cltd
roll
lods
out
mov
lahf
adc
fwait
push
jns
lcall
loop
inc
xchg
test
cli
xchg
sub
sub
mov
inc
cmp
jbe
sub
shl
lret
mov
lcall
sub
icebp
and
jo
mov
cld
popa
dec
jge
fnstcw
iret
push
pop
pushf
fidivl
xor
xchg
inc
and
lds
adc
push
mov
mov
inc
mov
xchg
imulb
push
in
cli
stos
arpl
in
test
pop
scas
push
adc
push
fistpll
ja,pn
out
popf
fbstp
jno
scas
movsb
cmp
aas
mov
fdivr
ds
cmp
or
lret
data16
jmp
pushf
mov
mov
movsl
adc
mov
imull
xor
xchg
stos
dec
jmp
lret
sbb
adc
pop
in
subl
dec
mov
sub
inc
and
sub
push
sbbb
add
cmpsl
mov
lea
push
push
imul
add
test
jp
out
cld
or
lret
xchg
dec
inc
pop
int3
adc
sub
add
push
outsb
jb
sbbl
cwtl
add
inc
sub
xchg
xor
movzwl
add
push
xlat
xlat
xlat
mov
dec
push
adc
mov
add
mov
out
imul
nop
dec
inc
sub
stos
xchg
pop
adc
loope
lret
cwtl
jmp
cwtl
xor
mov
push
es
mov
sahf
xor
pop
mov
jb
ljmp
xor
sbb
clc
mov
or
inc
sbb
xor
inc
repnz
mov
and
shlb
xchg
fildll
subb
sahf
test
in
pop
dec
daa
sub
icebp
pop
cli
adc
aas
daa
pop
xlat
or
jmp
les
add
gs
mov
cltd
arpl
in
cmp
imul
and
cmp
fwait
jmp
dec
test
imul
pop
cli
mov
popa
and
enter
push
test
mov
imul
rcrb
sub
jnp
pop
test
stos
push
lods
dec
jae
push
mov
inc
pop
sti
jns
adc
in
sbb
or
xchg
sbb
pusha
insl
es
rcll
mov
cmp
arpl
aaa
das
scas
jge
mov
dec
ret
push
leave
cs
call
add
mov
fsts
dec
xchg
adc
adc
xor
mov
movsb
outsl
scas
xor
iret
xchg
gs
jge
cmp
test
pop
mov
sub
add
mov
cmpl
or
push
jbe
nopl
xchg
push
std
aas
fsub
sbb
xchg
and
xor
lock
in
into
cmp
xchg
push
out
and
sub
mov
popf
jb
xor
push
dec
push
out
push
pop
pop
dec
popf
sub
loope
push
adcl
push
xor
out
jmp
sti
cmp
stc
mov
push
cmp
test
sarl
addr16
cmp
add
pop
gs
add
adc
pop
subl
pop
add
in
push
xor
fidivrl
jno
fcoml
sub
outsl
leave
sub
sub
xor
repnz
add
stos
shll
xchg
push
gs
stc
jg
or
push
aam
and
sub
enter
jp
int
push
push
sbb
add
mov
sub
into
mov
stc
stc
cli
insb
adc
push
iret
mov
push
adc
dec
adc
hlt
mov
gs
push
pop
sub
int
push
shll
mov
out
in
js
add
lea
jne,pn
addr16
imul
into
mov
std
in
insl
aad
scas
xchg
std
repnz
push
in
test
push
iret
fs
cmp
xchg
push
push
pop
sub
js
jbe
xchg
lods
mov
ja
cmp
mov
pop
add
scas
and
lds
sahf
test
fmul
sahf
sbbb
sbb
lods
imul
idivl
add
xchg
ror
dec
int
fwait
cmp
adc
mov
mov
mov
aaa
nop
inc
sbb
jmp
sub
or
push
lcall
push
cwtl
scas
mov
and
or
xchg
mov
rcrb
scas
mov
mov
flds
adc
xor
pop
jmp
dec
or
stc
cmpsl
out
pushf
scas
lds
lods
xor
arpl
dec
mov
cld
or
popa
add
test
ds
dec
push
inc
imul
fwait
test
insl
add
dec
cltd
cs
xchg
je
repnz
jg
jae
pop
pop
and
add
je
xchg
pop
fidivrl
leave
loope
testl
int
mov
jb
fisubl
mov
mov
in
jb
out
loope
add
dec
outsb
in
and
xor
ja
cs
arpl
jp
lret
adc
addl
std
mov
stos
sbb
mov
repz
arpl
cmp
and
or
subl
adc
arpl
data16
mov
pop
fs
xchg
rol
add
xor
xor
test
dec
lahf
movsb
popf
movsb
mov
movl
es
stc
push
fsubrs
sete
mov
cli
outsb
es
bound
fstps
xor
cltd
adc
mov
lret
cltd
xchg
in
push
cmp
icebp
sbb
mov
out
shlb
dec
repz
cmc
cmc
je
or
fdivr
nop
insb
push
mov
mov
add
mov
mov
dec
mov
sub
push
mov
repz
loopne
fnstsw
bound
imul
scas
fwait
xchg
pop
or
adc
lods
cmp
or
sbb
and
xor
daa
mov
scas
in
add
insb
mov
cmp
fidivl
push
push
inc
ja
xchg
or
push
lret
cmp
xor
lcall
stos
xor
test
xor
xor
mov
rclb
or
pop
mov
mov
inc
xchg
push
clc
andl
push
ja
cmpsl
dec
mov
fcoms
pushf
cmp
jb
lock
xor
orb
fwait
sub
leave
bnd
fwait
jae
idiv
xchg
cmp
fisubrs
into
jle
jp
rcl
pushf
insl
sbb
xlat
pop
mov
mov
movsb
mov
call
mov
imul
dec
jmp
loope
mov
xchg
test
je
enter
sarb
or
fnstcw
dec
imul
jmp
mov
pop
mov
mov
les
cmp
imul
add
outsb
outsl
fisttpll
int
in
jae
mov
cmpl
mov
repz
adc
lret
pop
mov
mov
pop
pop
push
jl
std
outsl
xchg
js
sub
adc
add
dec
add
or
sahf
fld
fstl
mov
aad
ds
cmpb
stos
movsb
test
pop
push
and
mov
ja
inc
js
inc
cmp
lcall
jmp
xchg
hlt
jmp
push
cmc
sarb
lods
push
nop
jg
inc
push
rcrb
lea
fmul
push
inc
add
jecxz
inc
pop
push
cmpsb
aas
scas
test
jns
pop
inc
int3
ss
inc
nop
ljmp
fsubrp
cmp
vcvtsi2sdl
int3
aad
int3
js
xor
daa
inc
sbb
mov
data16
lret
xor
jl
std
pop
scas
outsb
popa
mov
mov
or
int3
data16
dec
xor
sbb
fwait
js
mov
push
sarl
inc
push
ljmp
cmpl
leave
test
dec
pop
cmp
cmp
stc
pop
sbb
or
jl
negl
or
and
dec
imul
movb
add
cmp
mov
push
iret
stos
xorl
add
arpl
iret
mov
fimull
jge
mov
mov
or
iret
mov
daa
and
mov
hlt
mov
gs
xor
aas
enter
insb
sti
fcoml
jmp
xlat
inc
inc
movsl
out
mov
pop
popf
iret
pop
sbb
adc
mov
inc
pop
inc
fwait
ja
in
imul
js
push
cltd
push
add
jno
mov
or
jecxz
stos
mov
xor
jge
jl
xor
cmpsb
cld
std
insl
jp
jge
and
stos
out
xlat
xor
ds
pop
ss
jg
push
dec
cli
cmp
cmpsl
fistps
rorb
add
mov
push
jb
xchg
mov
xorl
push
mov
and
and
fs
xor
mov
xchg
fs
pop
loopne
cmpsl
clc
fsqrt
fdivrs
cld
push
test
fidivl
mov
je
push
daa
jns
sub
xor
cmpsb
mov
sahf
cmc
jmp
enter
jle
pop
aam
cmpsb
sub
cmp
test
pop
shll
mov
int3
add
dec
dec
pop
or
test
enter
lds
cmp
call
mov
inc
xchg
mov
mov
repz
adc
das
mov
add
mov
and
xlat
xor
mov
sbb
dec
stos
mov
xor
mov
cmp
icebp
dec
dec
outsl
sub
aas
imul
sahf
dec
inc
cmp
fstl
xor
int3
xlat
push
andb
jp
fadds
scas
mov
xchg
adc
inc
testl
fcmove
inc
mov
leave
rcll
dec
icebp
jle
push
flds
mov
cmpsb
scas
fcmovbe
cmp
and
pop
mov
add
adc
mov
ljmp
shll
repz
loope
mov
scas
push
push
jae
rcr
add
out
cmp
dec
mov
movsb
sub
dec
mov
fld
mov
outsb
cmp
subl
std
xor
xor
rcrl
adc
pop
dec
repnz
out
in
mov
fimuls
or
jmp
dec
pop
out
lods
dec
pushl
repnz
in
mov
jno
mov
push
cmpl
nop
cmp
mov
ljmp
push
xchg
push
test
test
dec
xchg
lcall
mov
cmpsb
mov
test
dec
jne
data16
repz
xchg
addr16
push
loopne
adc
scas
or
aad
mov
sub
jmp
not
leave
mov
and
mov
in
pop
push
pop
dec
xchg
sbb
dec
jbe
imul
out
enter
cmp
mov
cmp
inc
sbb
dec
insb
xchg
pushl
pop
mov
cli
imul
xor
mov
fmulp
sbb
xchg
push
mov
cmp
jl
pop
ds
jg
jne
into
xlat
rorl
xor
repz
cmp
clc
push
shrb
out
pop
dec
aam
push
in
fsub
or
and
add
pop
jle
mov
loopne
fs
popf
xor
push
and
sub
repz
add
inc
adc
mov
out
mov
daa
lret
int3
std
mov
cltd
pushf
cmc
push
aaa
ret
jns
insl
mov
and
add
jg
or
xchg
xor
hlt
aad
mov
pop
arpl
xchg
cmc
jae
mov
pop
outsb
rclb
shlb
sahf
nop
add
jl
loopne
push
add
xlat
aam
add
fwait
ljmp
mov
and
fldln2
orb
repnz
xor
sbb
jae
sbbl
lock
dec
mov
xchg
mov
sbb
mov
in
mov
into
rorl
icebp
add
fs
sub
push
daa
pop
jno
mov
sarl
mov
mov
insb
andl
rorl
push
push
js
addl
aad
push
mov
out
push
sbb
and
xchg
or
push
popf
mov
or
das
int3
xorl
xor
inc
sbb
push
jb
dec
sub
push
or
push
arpl
rolb
in
data16
jmp
jnp
lcall
andl
pop
push
or
std
mov
push
inc
ret
lods
mov
push
imull
add
aaa
xor
jecxz
sub
loope
jle
rorb
mov
inc
mov
mov
jb
adc
sub
xchg
pop
fiaddl
push
scas
mov
push
xor
push
dec
mov
pop
adc
push
cmpsl
cld
hlt
dec
out
lret
push
pop
stc
mov
mov
push
and
test
pop
popa
jecxz
push
cmp
popf
lock
and
enter
mov
pushf
push
mov
push
pop
sub
movsl
jnp
push
rcrl
pop
xchg
insb
jns
aaa
lock
or
and
jl
cmp
in
pop
jecxz
xchg
push
jecxz
out
and
test
add
int3
imul
sub
imul
ja
push
mov
add
cmp
push
push
inc
sti
sub
pop
lret
cmp
into
sub
js
jecxz
dec
xchg
xorl
jmp
bound
pushl
adc
jg
mov
popf
mov
mov
cmc
mov
iret
lahf
mov
dec
xor
push
mov
add
push
pop
imul
sub
mov
faddl
iret
push
pop
mov
inc
mov
mov
sub
scas
mov
call
add
push
js
popl
insl
inc
jno
enter
inc
out
out
or
in
jns
cmp
adc
icebp
ret
hlt
test
cmc
imul
inc
and
cltd
insl
cmp
ret
adc
push
mov
mov
rcr
out
nopl
das
movsl
fwait
mov
into
pop
dec
adc
ficompl
xchg
bound
jne
fcompl
daa
xor
fbstp
push
arpl
insb
ret
cmp
cli
es
stc
sbbb
fsubp
pop
gs
lret
loope
mov
mov
jge
xor
pop
push
jo
sbb
mov
pop
loopne
inc
jl
xchg
test
mov
int
jmp
cld
mov
adc
into
dec
xchg
mov
imul
pop
outsl
mov
jl
sub
mov
sbb
scas
push
push
lret
outsb
pop
scas
lock
pop
sub
gs
push
mov
cmp
jnp
dec
bound
insl
xchg
addr16
int
cwtl
sbb
dec
or
loopne
add
lds
into
mov
mov
xchg
add
adc
insb
cli
adc
xlat
add
dec
cmpsl
pop
jg
jb
adc
popa
in
jp
xor
adc
sub
enter
add
pop
scas
xchg
and
test
enter
out
mov
fs
cmpsb
ret
sub
inc
popf
adc
lock
and
jo
addr16
in
andb
inc
mov
mov
and
aad
in
xchg
or
cmp
xchg
stos
xor
mov
add
lcall
push
dec
inc
adc
push
idiv
cltd
inc
xchg
xchg
or
out
dec
cmp
push
lea
push
mov
push
cs
out
mov
push
sub
stc
mov
xchg
adc
and
jo
pop
push
in
ret
xchg
jge
mov
dec
and
xchg
jns
cmp
loop
mov
adc
pop
flds
aas
xor
ja
addr16
mov
and
mov
es
cs
popf
jmp
popa
into
xor
add
out
inc
cmp
jmp
jno
inc
pop
scas
leave
mov
cmp
mov
divl
cld
mov
mov
test
scas
aad
andb
outsl
leave
push
dec
sub
pop
adc
shll
subb
enter
or
dec
cld
and
nop
xlat
inc
mov
ret
add
movsl
jae
lock
cmpb
flds
pushf
xchg
jp
push
or
jle
xchg
jbe
seto
movsb
dec
sar
dec
sbb
popa
or
gs
std
nop
cli
outsl
jmp
mov
mov
xor
sub
pop
mov
add
adc
ret
imul
xor
adc
shr
jno
popf
outsb
roll
stos
lcall
in
popf
dec
outsl
fildl
repz
mov
jmp
or
push
insb
fisttpl
mov
lea
xor
push
aam
pop
faddp
xor
xorb
fidivrl
test
xor
shrl
pop
fcmovnu
jp
jg
sbb
jno
xor
insl
outsl
cmc
add
sahf
dec
aas
jno
pop
xchg
out
arpl
sbb
jb
xchg
xor
push
out
aam
jae
es
hlt
outsw
mov
cld
adc
adc
lock
sub
push
mov
addr16
cwtl
xor
arpl
cli
cmpsl
stos
rol
and
or
push
cmpsb
and
cmp
xchg
jno
xor
sbb
fwait
shll
jecxz
xor
sbb
loop
inc
inc
push
dec
push
and
jns
fld
or
fst
lret
mov
push
movsl
scas
in
mov
sbb
xor
xor
in
cltd
xor
push
pop
xor
or
jg
mov
sbb
arpl
pop
cwtl
in
pop
ljmp
lret
lret
in
cli
cmpsb
test
adc
push
mov
das
cmpb
adc
mov
push
in
and
push
ss
push
shrb
xchg
pop
addr16
pop
dec
fstps
lods
sbb
jecxz
jmp
jns
mov
add
add
jns
int
sbb
andl
ja
xlat
sbb
scas
dec
adc
push
push
setae
push
ljmp
addr16
fdivs
mulb
sub
imul
mov
imul
iret
and
fidivrl
sbb
inc
jo
stc
repz
inc
bound
loop
pop
shlb
insl
mov
adc
repz
jbe
es
pop
mov
loope
movsb
inc
pop
jnp
sub
and
mov
mov
shl
aad
cmpsl
nop
mov
adc
cmp
and
les
into
rcrb
lcall
cld
dec
jo
sbb
insb
ss
cmc
or
ds
out
in
push
dec
add
pop
daa
xor
inc
fstl
mov
stos
clc
jge
cltd
jnp
xchg
lock
sbb
ljmp
pop
xlat
sbb
and
fucomp
dec
mov
inc
inc
insb
dec
pop
mov
dec
iret
cmp
das
cmpsb
xchg
adc
push
xchg
and
clc
cwtl
xchg
cwtl
inc
adc
add
mov
nop
test
mov
dec
cs
push
lret
dec
cld
and
pop
cmpsb
add
and
sahf
stos
movsl
mov
bound
push
aad
and
loop
nop
and
jge
les
cli
cmc
inc
pop
and
aas
mov
test
add
jb
movsb
mov
cs
in
add
inc
dec
jg
push
imul
push
fdivrl
shrl
cld
xor
clc
mov
es
mov
pop
data16
inc
cltd
xlat
jmp
add
repnz
mov
scas
cwtl
pop
int3
rorb
dec
es
jns
and
and
addb
stos
stc
in
xchg
push
xchg
sarl
into
mov
cmp
jns
add
fstps
and
ds
lock
inc
xchg
add
lea
push
fdivs
jle
out
push
jg,pt
push
out
lret
mov
aam
push
addr16
dec
into
jae
xor
jbe
and
jl
cs
fs
loopne
add
insl
pushl
nop
test
fildl
scas
pushf
xor
popa
pop
mov
jle
repz
dec
mov
sbb
jmp
out
popa
and
pop
cmpsl
and
lret
jbe
lea
sti
mov
ret
push
pop
ss
stos
and
add
sbb
push
cld
pop
dec
xchg
cmp
xchg
and
addr16
inc
cltd
xor
or
sbb
nop
jns
xlat
mov
sbb
mov
jp
and
cmp
data16
lret
push
xchg
cltd
cmpsl
lods
mov
lock
loope
push
gs
jns
mov
push
test
fsubrl
sub
sar
mov
inc
lods
in
dec
orl
adc
and
add
repnz
repnz
push
xchg
ja
cmc
mov
outsl
stos
jae
push
aas
insl
mov
add
dec
ljmp
mov
pop
sbb
andl
fdivr
call
and
mov
add
inc
jns
dec
xor
mov
lahf
fwait
out
push
cmp
or
dec
cmpsb
sub
add
sti
and
add
jmp
mov
jge,pt
aaa
lcall
dec
aas
out
in
inc
aaa
jo
out
cmp
push
cmp
pop
and
movsb
jl
mov
mov
jl
sahf
in
aad
mov
enter
in
adc
mov
jns
jmp
mov
sahf
popa
iret
or
cmp
sbb
mov
gs
sub
jl
pusha
cmp
jne
xchg
xor
sub
jecxz
pop
jne
jle,pt
das
fldl
test
ja
ret
mov
les
mov
sbb
loopne
out
imul
andl
push
mov
aad
std
sub
shl
in
int
dec
test
mov
stos
sub
or
or
inc
out
sarl
outsb
lret
xchg
lret
mov
fcmovbe
xchg
loope
mov
jmp
add
out
mov
cmpsb
jecxz
pop
rcrb
das
dec
jp
aas
leave
sub
jmp
shlb
xchg
ret
hlt
sbb
shrl
cs
xor
xor
jns
and
inc
mov
jmp
ja
adc
rcll
mov
cld
xchg
scas
jl
xor
push
mov
cmpsl
aam
and
xchg
pop
inc
jg
movsl
mov
inc
mov
fidivs
xchg
pop
push
cld
mov
in
and
imul
aas
ret
xchg
xor
adc
ss
mov
out
repz
aad
xchg
lahf
addps
push
push
xlat
cmp
xor
outsb
stc
decl
inc
clc
pop
or
in
cmpsb
daa
pop
mov
bound
shl
inc
pop
and
adc
cwtl
xlat
fdivs
pop
aas
dec
cmp
repnz
and
adc
xchg
out
mov
lea
sbb
or
rorl
xchg
mov
mov
and
insb
jb
inc
sub
lds
push
cltd
mov
or
dec
mov
hlt
jecxz
jg
jecxz
jo
push
js
sub
mov
das
inc
or
add
or
js
sub
mov
sbb
push
lahf
dec
mov
jecxz
lods
btr
cmp
sbb
push
shrl
inc
jecxz
jb
in
jmp
je
mov
jl
ficoms
cmc
in
insl
sub
cltd
scas
test
out
add
std
xor
stos
add
inc
daa
jns
add
mov
outsb
inc
dec
lea
test
cmp
jg
push
hlt
incl
inc
int3
aad
fsts
pusha
pop
aas
or
jg
pop
icebp
test
shr
xorb
or
jae
iret
dec
pop
push
int3
mov
dec
xor
cmc
lock
imul
ss
loop
pop
xor
rclb
sub
pop
jae
push
add
jge
xchg
mov
mov
ds
outsl
nop
xor
push
cmp
xor
xchg
into
sbb
fsts
pop
mov
adc
mov
outsb
mov
mov
mov
jl
std
imul
fs
fimull
mov
sub
hlt
test
in
dec
adc
jle
cmpsb
mov
cmpsl
jae
push
adc
add
xchg
sub
adc
push
scas
ror
jle
add
hlt
dec
add
scas
xchg
mov
xchg
lret
stos
jp
inc
sar
test
mov
lret
clc
js
repnz
pop
mov
push
or
and
or
push
insl
and
push
sub
sub
sbb
out
lea
addb
mov
push
jnp
out
into
pop
jne
add
mov
bound
nop
pop
xor
mov
mov
push
pop
std
aam
jcxz
mov
add
daa
fsubrs
data16
clc
cmpl
shlb
mov
outsb
mov
inc
pop
pop
push
andb
pop
and
pop
pop
nop
mov
sub
xor
daa
loop
cs
test
pop
pop
inc
and
aas
mov
cld
cli
std
inc
xchg
lods
lahf
call
hlt
mov
and
fsubrs
jno
setnp
jb
fs
lea
jmp
sbb
sub
imul
ds
fbstp
mov
je
fistpll
orl
mov
lds
repnz
dec
dec
dec
aam
pop
xor
mov
or
mov
out
ret
and
scas
mov
aas
movsl
pop
adc
pop
loop
push
push
jmp
push
adc
mov
popa
fisttps
pop
fwait
and
mov
outsb
pop
in
or
sbb
push
fstps
cmpsl
stc
add
and
push
dec
sub
shlb
std
clc
lahf
dec
mov
jmp
fucomp
aas
push
push
ljmp
add
ss
pop
and
cmp
insb
sbb
or
ljmp
inc
aad
in
mov
adc
pop
push
aad
add
mov
xor
mov
in
push
movq
int3
fnstcw
inc
loopne
pushf
sahf
sub
leave
mov
es
inc
icebp
inc
lods
insb
inc
jb
or
out
in
repz
push
fsub
mov
xor
out
cmp
mov
mov
inc
sbb
sbb
fcompl
test
mov
aam
out
clc
popf
fidivs
push
push
std
ret
or
arpl
adc
je
pop
loop
out
adc
add
fiaddl
sbb
out
out
jae
imul
xor
sbb
mov
jne
loop
mov
out
into
cli
imul
mov
push
cmp
xchg
dec
mov
out
mov
mov
mov
push
or
mov
les
xor
sbbb
fstpl
or
inc
addl
mov
xorb
jno
addr16
shrl
pop
inc
notb
mov
xchg
xchg
mov
repz
addr16
aas
stos
test
scas
fs
ficoml
sub
loopne
sbb
in
cmp
or
sub
bound
leave
pop
add
sti
cmpsl
jnp
iret
push
call
sub
sarl
mov
adc
daa
mov
aas
fistpll
jo
cmp
dec
mov
shrb
out
jg
int3
pushf
popa
and
fwait
push
add
nop
mov
add
pushf
sub
pop
mov
jmp
sbb
stos
callw
sbb
pushf
adc
les
test
ret
dec
xor
popa
imul
jmp
rcrl
pop
in
shlb
arpl
mov
lods
fsubs
loop
jae
out
jno
xchg
mov
setg
mov
ret
sbb
ret
insb
mov
xor
cld
aam
shll
push
cmpsl
test
icebp
pop
xor
je
pusha
out
scas
out
or
mov
cmp
sub
int
sbb
sbb
ljmp
jle
das
sbb
dec
cmpsl
and
push
pop
pop
fadds
mov
pop
pop
xor
xchg
mov
rcr
inc
jns
sub
jb
ja
push
test
into
xor
sbb
and
dec
enter
jl,pn
sbb
repnz
addr16
jle
lret
xchg
ret
scas
icebp
loope
mov
fcompl
pop
cli
mov
ss
or
gs
outsl
imul
push
or
sub
in
fstp
xchg
shrl
stc
add
inc
int3
iret
jecxz
push
sbb
negb
out
frstor
fsubrl
jmp
mov
mov
fs
fistps
cld
scas
xchg
or
loop
mov
fmul
push
cmp
and
push
adc
orb
cmp
into
push
push
lds
jb
idiv
cmp
enter
mov
fidivs
xchg
pop
fistpll
out
mov
jmp
xchg
pusha
mov
out
rorl
test
pop
sub
adc
js
mov
sbb
movsb
lods
and
cld
call
imul
fisubrs
sti
ljmp
or
or
es
inc
ret
stos
lods
xchg
sub
call
dec
xor
jbe
inc
pusha
adc
xor
inc
or
dec
cmc
pusha
inc
cmp
inc
mov
loope
jns
icebp
lods
push
pop
add
testb
adc
jecxz
adc
adc
dec
jbe
insb
xlat
push
inc
idivb
dec
push
inc
push
mov
sbb
dec
ret
xchg
sbb
adc
daa
repz
lea
dec
rcll
cmp
push
jbe
cwtl
insb
out
cmp
push
cli
addr16
jnp
jo
loop
mov
and
push
push
mov
fldt
ret
fcomi
lods
and
daa
mov
stc
push
lcall
std
jno
test
cmpb
pusha
push
jge
stc
jae
lahf
jge
loope
mov
sub
mov
imul
inc
adc
xor
sub
and
int
ror
shlb
dec
xchg
cmp
xchg
loopne
or
lret
inc
inc
cmp
sub
mov
addr16
insl
test
mov
mov
push
adc
adc
mov
repz
and
sub
sbb
lods
in
xchg
lret
inc
les
cmp
jo
xor
ret
and
push
scas
fwait
jns
or
mov
test
in
lods
ret
daa
dec
mov
jne
jmp
clc
cmc
loop
rolb
dec
mov
xchg
xlat
repz
mov
ffreep
xor
out
in
shr
jne
xor
out
loopne
adc
sbb
in
pop
add
adc
arpl
add
add
push
cmpsb
xchg
fisubrs
adc
les
shlb
add
inc
jnp
fiadds
mov
jl
sbb
cwtl
jno
std
adc
xlat
and
push
jp
xchg
push
xchg
mov
push
out
and
pop
ljmp
js
add
repz
push
add
lret
mov
inc
mov
test
mov
lods
das
adc
roll
jbe
rorb
cltd
inc
fcomps
lcall
xor
cmpsb
stos
and
out
mov
iret
je
ret
lret
cmpsb
mov
dec
sub
stc
fxam
jo
sbbb
xchg
outsb
mov
xor
in
out
out
inc
enter
je
xchg
aaa
inc
push
idivl
add
cli
stos
xchg
in
divl
xchg
cmc
lea
cmp
sub
aas
fnstcw
movsb
mov
popf
add
loopne
mov
ficoms
dec
mov
add
outsb
adc
test
outsb
fbld
in
mov
movsb
daa
inc
in
test
icebp
push
pop
inc
lods
and
aaa
xchg
movsl
pushf
xor
sub
or
mov
ds
movsb
jb
mov
insl
mov
je
lock
jns
addb
add
xchg
jbe
jne
stos
cli
mov
xchg
mov
fistps
xchg
clc
stos
jno
pop
xor
ljmp
xchg
or
jp
mov
ficompl
popf
imul
fcmovnb
and
pop
cmp
sub
push
ss
push
and
popf
mov
pop
jae
push
pop
mov
jne
sbb
sti
dec
adc
xor
imul
stc
ds
push
pop
andb
stc
ffree
lock
js
jne
xchg
imul
xchg
insl
test
subl
sub
xchg
mov
and
mov
scas
cmp
add
sub
mov
mov
ds
jge
push
cmp
push
adc
mov
mov
mull
inc
sarb
and
scas
dec
les
mov
insl
rol
jle
dec
movl
xor
sub
jb
mov
lcall
cmc
cs
and
mov
rcrl
xor
mov
outsl
imul
ds
sub
popa
mov
lcall
stc
push
clc
aaa
xor
cld
adc
fisubrl
push
adcl
ss
out
rorb
mov
lods
shrl
push
call
movsb
loopne
nop
push
lock
fs
out
imul
jle
test
int3
fcoml
pushw
sbb
aam
push
xor
xor
fdivl
mov
in
inc
mov
mov
lahf
dec
insl
sbb
inc
jp
out
adc
shl
pushf
xor
loope
cld
in
pop
jge
mov
sahf
xor
rcrl
insl
push
or
movsl
test
insl
test
out
pop
sub
sahf
int
dec
aas
xor
out
addr16
aas
xor
or
imul
loope
xchg
mov
sbb
mov
push
add
mov
push
xchg
aas
xor
cmp
les
adc
je
and
mov
sbb
or
ror
sti
mov
push
jns
cmp
pusha
sbb
xchg
and
out
adc
fistps
lcall
or
fistpl
scas
pushf
adc
shlb
rcrl
xchg
loope
mov
subb
jp
cs
test
mov
pop
mov
std
fimull
les
popa
sbb
mov
mov
fstpl
jb
gs
cmp
imull
adc
jb
and
nop
lods
test
adc
outsb
jb
aaa
test
push
shlb
sahf
sub
mov
xchg
dec
add
test
adc
pusha
xor
mov
cmp
sub
xor
fwait
pop
mov
rcrb
outsl
popf
dec
push
movsb
mov
jo
aas
jno
add
rcll
jns
mov
and
or
outsb
add
rcr
and
mov
into
ret
push
adc
das
xchg
mov
jmp
sbb
divl
lods
lret
roll
jmp
cltd
inc
std
fs
pop
test
jle
sbb
lret
je
dec
sbb
popl
sub
shlb
arpl
inc
mov
cmpsb
cmp
inc
mov
xchg
adc
movsb
int3
imul
mov
cmp
pop
xor
jnp
roll
mov
and
inc
mov
xchg
in
sbb
add
mov
pop
cmp
aam
cltd
fwait
mov
or
movb
int
push
inc
sbb
data16
and
negb
into
mov
dec
cmc
insl
test
fistpl
push
push
ret
mov
jge
test
filds
ret
iret
js
jb
mov
insl
aaa
mov
sahf
subl
mov
pop
add
roll
mov
outsl
jmp
jle
cwtl
mov
ss
stos
sti
and
cmpsb
jl
mov
outsl
xor
or
xor
jo
loop
int
jp
fisttps
mov
testl
xor
mov
and
ss
rol
in
or
std
dec
insl
jl
lock
push
push
mov
push
jno
xor
jge
rcrl
push
ja
jle
pop
test
or
pushf
mov
dec
push
movsl
add
scas
ja
lock
jl
int3
xchg
lret
iret
cltd
push
inc
outsb
pop
pop
or
mov
cmp
or
mov
ds
jle
xchg
repz
aaa
scas
push
shll
xor
mov
xchg
ss
adc
ret
pop
add
sbb
leave
mov
mov
jb
mov
ss
sbb
sub
xor
notb
mov
call
mov
call
lret
or
ja
clc
lock
movsb
xor
cmpsl
cmpsb
fistpll
lock
or
idivb
and
arpl
pop
mov
outsl
invd
mov
mov
mov
xor
xchg
dec
cmp
nop
call
add
fldt
dec
jbe
js
mov
sbb
push
daa
jbe
and
jae
xor
ljmp
mov
in
imul
mov
sub
repnz
mov
notl
loop
rcll
ss
push
xor
repnz
andb
repnz
lods
mov
mov
nop
cld
mov
mov
add
sbb
je
pop
arpl
sbb
cmp
xchg
mov
orl
sub
int
inc
scas
cmp
int
loope
andb
xchg
in
inc
pop
mov
lcall
test
int
push
jp
fwait
xchg
dec
push
xor
mov
pop
mov
insl
inc
mov
adc
gs
xor
cs
arpl
dec
hlt
loop
aaa
mov
rcr
out
cmp
push
xor
ficoms
aad
addr16
call
sbb
or
adc
pop
enter
sub
pop
out
aaa
mov
loopne
aad
pop
jecxz
adc
test
popf
aaa
fs
in
iret
imul
mov
mov
dec
adc
cltd
and
vpsrad
rolb
or
push
mov
pop
loopne
mov
imul
mov
lcall
das
inc
pop
adc
xchg
call
xchg
arpl
stc
xchg
test
inc
jns
push
mov
pop
and
js
jmp
xor
test
pop
js
and
movl
dec
mov
cmp
or
imul
imul
push
fmull
dec
sbb
dec
data16
push
insl
mov
loop
roll
icebp
mov
push
cmp
jg
das
stos
int3
fidivl
aaa
lods
bound
and
or
out
push
test
xchg
arpl
xor
sub
das
cli
dec
mov
adc
leave
dec
into
lcall
sub
xchg
test
cmp
inc
sub
xchg
shr
jne
repnz
ficomps
add
out
jns
and
push
lea
mov
lods
shlb
mov
add
pop
call
shlb
push
scas
jle
lds
int
xchg
dec
mov
in
or
outsb
gs
mov
inc
loop
movsb
fidivrs
js
mov
cmp
orl
cmpsb
fldcw
inc
push
addb
xchg
xchg
out
mov
cmp
movzbl
xlat
subl
in
mov
inc
cmp
or
sbb
imul
mov
iret
idivl
nop
imul
cld
or
es
and
rorb
sahf
movb
mov
shll
jmp
stos
xor
sarb
push
mov
mov
aad
mov
sti
jo
sbb
int
leave
pop
test
das
or
cwtl
pop
mov
xor
jnp
ss
mov
sub
inc
add
inc
push
cli
push
imul
inc
push
sahf
lods
jbe
in
cmp
jae
push
sub
inc
mov
icebp
jmp
scas
rorb
int3
or
mov
cmp
je
or
sbb
xchg
andb
outsb
and
push
movsl
roll
dec
sbb
mov
pushf
clc
pop
push
mov
inc
leave
xchg
sub
gs
loop
jnp
in
push
or
or
aam
sbb
incl
push
es
clc
fsub
iret
pop
mov
ret
push
xchg
cmp
test
into
lret
and
fisttps
or
pop
cmpsl
mov
int3
lock
push
fimuls
xlat
push
push
lds
push
sbb
push
mov
call
push
into
push
push
xchg
in
add
fadds
std
scas
pushf
ret
mov
aas
xor
mov
lds
xchg
test
cmpsb
push
push
xor
sti
xor
adc
stos
xchg
loop
push
shlb
data16
fidivs
jl
insl
push
xor
push
dec
cmpsb
pop
push
push
sub
aaa
sub
dec
mov
mov
xor
inc
pop
mov
add
imul
mov
mov
in
or
mov
and
leave
fmull
pushf
adc
out
data16
xchg
cs
imul
mov
push
out
out
dec
push
mov
xchg
sahf
pop
mov
push
pinsrw
jp
jnp
xchg
push
mov
add
movsl
jae
into
jg
xchg
add
bound
xor
cmpsl
adc
cmp
flds
test
jl
sbb
or
mov
or
pop
je
push
cmp
adc
mov
ljmp
push
add
sub
mov
mov
push
or
shlb
xchg
mov
jmp
xchg
pusha
cs
out
ja
mov
push
or
pop
add
shlb
add
in
push
jecxz,pt
scas
push
mov
jb
xchg
fiaddl
ror
cmpsb
repz
ds
jbe
sub
add
movsl
fs
outsb
cmp
pop
mov
sbb
test
je
jle
inc
xchg
arpl
ret
add
sbb
dec
inc
sub
push
mov
and
andl
sub
xor
mov
mov
mov
xchg
mov
fucomip
inc
lea
add
sarb
pop
aas
call
clc
out
loop
jno
or
xchg
out
jno
and
aas
adc
jo
jl
insb
and
jae
or
jae
push
adc
iret
fisttps
jle
inc
cmp
sbb
jb
dec
fistpl
lods
push
inc
mov
mov
pop
roll
cmp
sub
jb
sahf
addr16
jae
int
mov
mov
jnp
icebp
ret
xor
push
inc
dec
dec
or
dec
dec
je
ds
pushf
sbb
xor
add
push
rcll
sub
bound
lahf
xor
in
aam
int3
repnz
push
fdivrl
dec
pop
shl
push
mov
stos
dec
sub
hlt
out
movsb
fs
and
lds
mov
add
push
sahf
dec
and
mov
mov
faddp
pop
neg
fsts
mov
sbb
add
call
data16
and
mov
jns
sub
idivb
mov
fldcw
pusha
xor
mov
adc
roll
xor
xchg
scas
jae
rcrl
inc
insb
scas
xor
sbb
lds
es
loope
cltd
sub
mov
pop
popa
pop
mov
sti
gs
mov
mov
mov
pop
int
and
adc
or
dec
sbb
or
fwait
negl
out
pop
in
cmpsl
mov
dec
mov
ds
in
sub
jo
sbb
fldl
sbb
sub
mov
clc
sbb
pushf
and
stos
stos
data16
dec
mov
out
rorb
and
aaa
out
in
cmc
lock
fs
xor
cltd
mov
cli
and
mov
into
and
loop
or
subb
cld
or
lret
leave
add
sbbl
lock
mov
cmpsb
daa
jne
call
sahf
dec
popf
mov
cld
pop
push
mov
sub
push
aas
pop
add
push
jecxz
adc
pusha
xchg
test
jp
in
mov
test
int
sti
jns
mov
cmpsl
sub
sbb
sbb
notb
pop
ret
sub
jne
ret
repnz
lods
jbe
mov
mov
inc
fmul
iret
and
lods
push
jne
xchg
jmp
data16
adc
adc
scas
pop
fimull
mov
add
pop
popf
in
ret
add
adcl
xor
call
scas
ret
das
dec
sbb
sub
shrb
push
sbb
aad
loopne
xchg
push
push
insl
push
mov
and
mov
push
lahf
lods
add
jecxz
jno
dec
ret
adc
mov
jae
faddl
push
adc
push
cli
xchg
ret
in
inc
mov
jl
mov
adc
xchg
jp
push
add
mov
mov
fldcw
insb
mov
scas
mov
hlt
cmp
xchg
sub
call
scas
test
cwtl
adc
addr16
mov
push
mov
sub
pop
mov
pop
xchg
loop
fs
xor
push
push
inc
ss
mov
mov
xchg
je
popa
push
fdivr
lea
cmp
sbb
ret
sbb
mov
or
int
inc
xchg
and
cmp
mov
sub
ja
pop
mov
sub
mov
fldcw
mov
test
out
pop
xchg
rcrl
imul
hlt
fidivs
shl
into
hlt
cmp
xchg
mov
scas
icebp
jno
mov
cld
dec
movl
std
pop
std
or
push
jae
pop
jg
jle
or
insb
int3
fldenv
cmpxchg
enter
jecxz
mov
imul
xchg
jae
cwtl
in
pop
or
int
dec
adc
cwtl
mov
cmpb
or
xlat
nop
push
mov
pop
cmc
shlb
push
add
push
cmpsl
mov
xchg
fwait
dec
std
call
pop
push
jb
cmc
mov
cmp
inc
mov
xor
repz
xchg
sarl
sbb
mov
mov
or
or
fists
xor
push
loop
mov
lock
add
out
push
in
popa
sbb
mov
cmp
es
int3
adc
add
mov
fwait
in
cld
mov
je
fistpll
pop
jecxz
jno
je
rorl
add
loope
les
lahf
ficoml
xchg
xlat
mov
xchg
daa
subl
sbb
aam
mov
popa
pop
mov
outsb
stos
data16
imul
decl
xchg
scas
fldl
xchg
ljmp
or
pop
cmp
outsl
and
and
gs
aaa
xor
out
fistl
sarb
pushf
and
jle
lret
dec
lret
or
inc
das
int3
test
fbstp
and
push
xor
lret
rolb
popf
push
mov
mov
adc
xor
fs
jecxz
jle
into
das
and
cmp
js
ret
or
repz
nop
mov
or
nop
mov
jae
rolb
xchg
scas
push
insl
add
shll
xchg
dec
aad
and
hlt
dec
sti
notb
mov
pop
and
xchg
dec
mov
daa
repz
addr16
loope
movsl
sub
shlb
test
jb
cwtl
xchg
cmp
and
pushf
add
into
jo
push
push
add
and
xchg
and
pushf
enter
pminsw
and
and
mov
mov
push
jo
das
popa
ret
jb
stos
mov
int
pop
bound
arpl
out
mov
xchg
or
mull
add
inc
inc
mov
inc
push
push
inc
pop
xchg
nop
mov
mov
inc
pusha
popf
data16
xchg
push
lahf
je
push
mov
cmp
sbb
pop
cli
outsl
adc
sub
mov
jle
sti
mov
rorl
les
sbb
cli
cmp
int3
xchg
sub
lahf
nop
shl
or
test
rcrb
shr
cltd
inc
add
sbb
lock
ficompl
dec
and
test
rcrb
testl
jl
jmp
sbb
jae
cmpsb
movsb
add
daa
dec
and
xchg
adcl
dec
or
jp
test
and
ficoms
mov
shl
ret
bound
pop
mov
cwtl
pop
and
imul
dec
and
jb
mov
push
bswap
mov
arpl
jnp
pop
sub
nop
enter
stos
dec
jle
xchg
aam
stc
push
outsl
sbb
jmp
out
lret
adc
xchg
repnz
test
addr16
lods
jg
mov
jne
xchg
jecxz
dec
push
adc
push
arpl
mov
pop
jle
cmp
pusha
mov
pop
sub
push
xchg
loope
out
test
sbb
out
stos
jo
jne
pop
jp
jl
test
inc
or
dec
in
pop
ja,pt
or
leave
jmp
xor
xchg
or
cld
mov
mov
aad
push
bound
in
xchg
pop
or
xor
add
xchg
insb
jge
push
nop
fiaddl
icebp
pop
push
xor
into
jo
or
notl
pop
daa
imul
mov
movsl
jno
dec
ror
jne
cltd
add
push
jbe
xchg
not
out
incl
and
ss
lret
push
mov
lcall
mov
pop
xchg
pop
pop
xchg
dec
and
nop
push
icebp
cmp
or
push
adc
mov
bnd
pop
loope
pop
stc
in
cmpsl
daa
inc
and
loope
movsl
pop
mov
lods
lmsw
dec
cmc
cmp
pushf
ret
xor
adc
es
sub
push
addl
imul
testl
sub
fs
xor
sub
add
xchg
mov
subb
cld
sub
add
test
js
jge
pop
mov
add
mov
inc
adc
sbb
es
inc
fwait
or
movsb
testl
xor
iret
rol
mov
imulb
mov
dec
sub
ficomps
sbb
mov
call
inc
jb,pt
jns
or
fcompl
call
jg
add
sub
mov
clc
sti
icebp
and
cmp
jmp
sarb
jb
leave
pop
and
xchg
jb
nop
and
inc
pusha
out
pop
dec
cmp
push
xchg
test
xchg
sti
mov
fidivrs
fsubl
xor
pop
cli
cmp
fsubr
enter
mov
xor
sahf
movsl
imul
out
loopnew
adc
jb
bound
xchg
fldenv
xchg
ja
insl
lock
ret
adc
iret
adc
movsb
stc
jno
ss
mov
cmc
into
xchg
ljmp
sub
out
in
jmp
cltd
lret
mov
cmp
hlt
inc
insl
mov
stc
adc
mov
or
loopne
leave
in
lcall
mov
pop
pop
repnz
lret
push
pop
pop
movsl
call
cwtl
es
mov
in
scas
pop
std
lock
mov
jbe
loop
mov
and
push
fistps
or
pop
dec
jle
aad
mov
fcmovu
or
mov
mov
lret
xor
into
cmp
dec
cli
outsb
cmpsl
jl
sub
dec
cmp
pop
clc
dec
xchg
xorl
push
clc
leave
popf
add
inc
lret
mov
dec
ret
cmpsl
test
inc
jbe
jbe
data16
push
cmpb
mov
bound
or
pop
push
cmp
dec
mov
sbb
jbe
mov
mov
lret
mov
xor
in
stc
ss
push
xor
xchg
int
xchg
push
push
arpl
pop
bound
ljmp
arpl
jne
into
js
or
cmp
xor
sbb
es
into
push
fnstcw
jbe
adc
mov
cmc
pop
mov
enter
ja
mov
addr16
cmc
pushf
outsb
mov
jg
add
dec
fcoml
mov
push
mov
rcrb
shrb
add
out
mov
sub
aam
enter
sbb
frstor
xor
stos
inc
loope
ljmp
dec
xor
xor
push
jmp
inc
jle
add
or
pop
and
pop
and
fcmovnu
cmpb
insl
pusha
mov
mov
daa
insl
mov
aad
or
fistpll
jno
push
es
icebp
cmpsl
sub
pop
pop
cli
outsl
cmc
outsl
push
mov
test
ret
dec
mov
inc
out
pusha
inc
xchg
ret
in
fs
dec
adc
mov
xlat
push
lods
mov
mov
xchg
cmp
loopne
in
xor
in
cmpb
les
pop
mov
neg
adc
mov
enter
or
jae
adc
divl
mov
jge
pop
mov
out
pop
scas
dec
pop
and
mov
push
loopne
out
push
fstpt
ja
inc
jl
mov
push
xchg
ret
lahf
pop
add
test
outsl
sub
cmp
lods
mov
push
mov
es
aad
pop
dec
and
xchg
daa
je
gs
pushf
js
or
stos
sub
insb
dec
int
sahf
inc
pop
rclb
sbb
imul
jg
ret
popf
sub
mov
pop
jle
jle
sti
fmul
dec
subl
lock
out
adc
gs
jp,pt
flds
jp
hlt
or
repnz
xor
std
push
or
pushf
es
add
dec
adc
lds
dec
lods
test
dec
out
rcrb
mov
jmp
stos
scas
add
jno
movsb
mov
xchg
and
push
das
leave
aam
jae
mov
hlt
mov
jno
xchg
sub
aaa
mov
xor
fcoms
into
push
fnstenv
icebp
fdivr
dec
pop
hlt
fidivl
gs
mov
nop
jle
lcall
sub
adc
sbb
fstpl
ret
in
loopne
mov
sbb
js
mov
inc
mov
cli
pop
xor
sarb
jnp
aas
jl
inc
test
or
pop
stos
arpl
mov
shlb
bound
fidivs
push
cmp
in
leave
sarl
das
mov
inc
mov
push
ret
mov
lret
in
aaa
ret
cmp
add
aad
and
mov
sbb
test
shlb
xchg
dec
mov
add
insb
inc
lahf
adc
sahf
es
pop
js
inc
daa
cld
dec
gs
or
pop
andb
int
pushf
imul
scas
jne
enter
ret
das
pop
pop
dec
xor
push
cmpsb
loop
rcll
out
pop
xor
mov
sub
inc
xchg
fisubl
ja
xchg
inc
mov
mov
ja
and
cwtl
xchg
fmull
cmp
shr
adc
adc
sbb
outsl
es
and
repz
mov
push
int
jg
aaa
push
test
inc
aam
pop
enter
mov
stc
repnz
cmp
mov
push
mov
inc
xchg
push
and
xchg
add
das
jp
std
jmp
scas
jl
push
daa
add
sub
mov
sbb
mov
adc
leave
stos
mov
add
fisttpl
addr16
xchg
shrb
sub
inc
sti
dec
mov
mov
int
sbb
test
cld
sub
sar
je
and
leave
inc
adc
pop
pop
xor
and
pop
sbbl
or
mov
imul
dec
shlb
scas
aad
mov
enter
dec
xchg
sbb
push
das
popf
xor
icebp
mov
int
ret
shrl
jp
scas
sarl
adc
mov
cmpsb
pop
adc
adc
les
dec
and
sbb
cmp
dec
pop
adc
mov
jb
adc
pop
sub
mov
mov
jge
js
aaa
fwait
or
in
and
xor
mov
ljmp
insb
negl
pusha
movsl
mov
std
sub
push
cmpsl
push
or
dec
inc
or
roll
jo
data16
and
mov
pop
data16
xchg
add
xchg
jno
addl
or
mov
cld
cmp
out
cmp
ss
cmpsl
mov
call
mov
add
xchg
insb
dec
adc
pop
js
jns
xchg
je
popa
rorl
mov
iret
jp
stc
nop
je
cmp
jg
dec
add
cmp
out
nop
or
add
lret
dec
rorl
rorl
jge
fcmovnb
push
subl
int3
shl
push
rclb
pusha
jae
loope
sub
repnz
add
and
mov
and
test
fcomi
ret
push
xchg
shlb
lahf
mov
adc
popa
fcmovne
aam
mov
insb
cltd
cmc
cmp
mov
mov
loopne
cmp
cli
aas
mov
push
xor
jnp
leave
xlat
testb
shl
cmp
pusha
filds
xchg
sub
repnz
mov
and
adc
pop
jmp
and
addr16
cmc
out
mov
push
add
stc
ret
mov
sbb
mov
pushf
int3
in
fidivrl
and
jnp
int
dec
or
into
ret
jae
sub
in
push
and
push
fsubs
xor
pop
out
scas
fadds
out
dec
fdivp
out
mov
enter
pop
push
push
arpl
subl
popf
aaa
push
aaa
mov
ret
xor
ljmp
pop
in
jbe
or
jb
aad
jge
and
popa
pop
adc
loope
push
push
cmp
dec
mov
daa
fwait
lret
push
mov
cltd
dec
and
adc
call
push
xor
movsl
sar
jmp
ss
mov
push
je
mov
scas
int3
jecxz
stos
sbbb
and
stos
jp
cmc
outsb
aaa
in
sbbl
add
and
sbb
pop
push
inc
iret
sbb
sbb
dec
lds
mov
or
test
inc
mov
fadds
dec
hlt
icebp
loop
roll
mov
pop
fbld
pusha
fists
jbe
sbb
mov
call
or
in
outsb
aad
test
xchg
aam
sbbl
insl
fstps
imul
pushf
xorb
stc
sbb
int3
into
pop
cmp
add
sbb
dec
imul
in
outsb
dec
ret
ss
xor
hlt
sti
sub
int
sarl
cmp
xor
addr16
and
cmp
mov
jle
sub
sbb
aaa
rclb
jge
dec
or
xchg
adcl
stc
lods
data16
jne
popf
imul
dec
repz
or
sub
xchg
nop
mov
mov
fwait
xlat
into
and
dec
push
pop
cs
inc
jmp
out
ss
mov
pushl
mov
aas
dec
xchg
sbbl
mov
imul
push
mov
xor
jno
xor
mov
pop
imul
in
daa
cmp
out
fnsave
popa
mov
push
lock
and
jo
cmpsl
xchg
mulb
xchg
sbb
jmp
stos
and
jmp
pop
pop
test
mov
and
rcll
movsl
cmp
inc
jns
push
popa
pop
push
jbe
jae
movsl
mov
idiv
push
or
pushf
sti
aam
add
ret
jo
pop
lock
in
add
stc
sbb
gs
enter
xchg
or
imul
jo
xor
pop
cmpl
sarb
push
cmp
orl
insb
cmp
xchg
pushf
lret
xor
inc
jns
lcall
daa
jge
ficompl
mov
add
sub
adc
call
sbb
sbb
lds
push
or
insl
stos
das
lret
mov
and
fistpl
movntq
jge
aaa
and
daa
out
and
push
lea
dec
pop
jl
or
xlat
dec
in
gs
inc
daa
nop
sub
addl
dec
stos
add
lea
outsb
add
jae
test
ljmp
addl
cmc
push
and
pop
out
call
hlt
clc
jno
arpl
jmp
and
iret
lock
mov
xchg
xor
stos
lret
sub
adc
enter
ret
or
dec
out
mov
add
jne
dec
cmpsb
outsl
stc
cmp
jne
mov
mov
add
xor
ss
add
loopne
and
out
mov
lea
loopne
jno
aaa
decb
push
faddl
ds
clc
out
iret
and
lock
push
mov
in
dec
dec
mov
or
fstps
insl
out
stos
mov
mov
mov
test
dec
jne
or
or
addr16
movsb
sub
insb
xchg
jno
mov
add
xchg
xchg
fwait
pushf
lock
shrb
mov
xchg
jmp
cmp
pop
clc
and
inc
mov
xlat
data16
lahf
jg
push
pop
aaa
div
inc
js
xchg
jmp
adc
icebp
std
jbe
ljmp
push
popa
cmpsl
xchg
cmp
add
cmp
inc
pop
and
imul
push
sbb
xchg
loop
cmpsl
fyl2xp1
fdivl
sub
push
aaa
out
out
mov
out
fcmovnbe
jmp
xchg
mov
outsl
ljmp
je
pop
xor
ret
xchg
call
sarb
xchg
mov
popa
js
enter
cmp
sub
xchg
add
pop
xchg
pusha
mov
mov
cmpsb
push
fdivrl
in
mov
inc
jne
leave
lock
test
stos
loop,pn
aaa
aas
inc
leave
mov
or
add
movsl
out
lds
xorb
push
xor
ret
xlat
jne
mov
addr16
psubsw
int3
push
add
call
nopl
mov
fs
mov
aaa
cli
stc
bound
enter
pop
pop
lcall
sub
jp
pop
push
call
or
inc
sbb
sarl
sbbl
mov
mov
and
mov
in
hlt
pushf
and
sub
shll
nop
xadd
popl
dec
mov
xchg
jns
out
adc
pop
inc
mov
pop
push
mov
lods
iret
cmp
lahf
lret
xchg
daa
adc
cmpsb
inc
sahf
std
mov
jge
or
aam
jne
jmp
daa
aad
add
jle
js,pn
stos
lahf
add
aam
xor
jne
adc
push
aas
sub
jle
xor
push
mov
xchg
mov
xchg
ja
jl
xchg
lods
lret
or
jns
xor
pop
lahf
cmp
fsubrp
insb
xor
leave
lods
jne
inc
jb
or
aas
add
aas
sub
mov
lret
lds
inc
movsb
es
shrb
jl
adc
dec
lcall
adc
ja
mull
inc
sahf
mov
dec
xchg
mov
mov
in
inc
enter
ljmp
data16
jo
add
inc
das
mov
lcall
sub
and
cmp
xchg
jbe
jb
or
xor
cmp
cmc
jae
push
in
mov
pop
int
lahf
lahf
rcll
xor
imul
lock
and
or
loop
scas
std
inc
dec
jbe
cld
data16
enter
push
pop
jmp
jbe
push
or
js
je
fsub
dec
sahf
mov
xchg
push
jmp
push
or
fisttpl
sahf
inc
pop
sahf
sbb
sbb
rcll
hlt
repnz
or
push
ljmp
sub
xor
add
xchg
lock
sahf
sub
cs
mov
mov
sbb
inc
xchg
dec
add
out
ljmp
out
jne
sbb
outsb
inc
mov
mov
adc
test
fiaddl
mov
arpl
sbb
out
dec
xor
repnz
test
lea
adc
xchg
inc
jne
cli
les
inc
cmp
and
js
sahf
int
cmp
shlb
push
push
adc
xchg
pop
lods
jg
or
popa
cmp
adc
stc
int3
dec
dec
and
loop
daa
adc
fidivrl
iret
fwait
sarb
ds
stc
out
mov
shlb
sub
lcall
insl
sbb
daa
add
push
jns
movsl
les
cmp
pop
jnp
or
xlat
out
jge
adc
movb
sub
movsl
ret
mov
leave
sub
dec
or
sarb
test
test
xor
iret
xlat
gs
jae
add
xchg
pop
rolb
mov
sub
add
les
inc
scas
mov
idivb
fdivl
repnz
ljmp
sub
push
jo
adc
andl
push
adcb
or
mov
mov
sarb
stos
and
cmpsl
push
or
dec
addl
ret
test
inc
stc
push
push
fwait
lds
adc
iret
push
jge
imul
mov
je
cmp
or
push
data16
adc
shlb
xchg
ret
hlt
pop
and
cwtl
call
pop
repnz
and
repnz
adc
test
inc
insb
pop
dec
xchg
dec
sti
xor
rcrb
sti
mov
mov
lods
jp
mov
rcrw
cwtl
in
push
std
pop
andl
mov
push
add
iret
hlt
lds
cs
or
das
mov
popa
jge
fldenv
inc
adc
std
cmp
cli
mov
pop
ffree
call
call
dec
push
mov
mov
push
adc
jl
push
stos
daa
pop
addl
subl
filds
push
stc
enter
dec
mov
push
sub
push
pop
jo
sbb
lret
pop
jl
mov
mov
mov
lcall
aad
addb
data16
pop
cmpb
ss
xor
fdiv
dec
loope
add
out
std
dec
imul
ret
into
mov
mull
stos
je
push
negl
push
aad
jecxz
cmp
cmp
imul
cmp
add
push
sahf
mov
outsb
andl
push
std
cmp
cmp
fwait
shll
fistl
mov
daa
aad
push
fistpl
jg
adc
jl
inc
xor
jb
xor
lods
ret
outsb
es
push
fistps
push
dec
dec
xor
ret
xor
or
sub
fsubl
mov
xchg
stc
mov
out
jno
xor
and
jl
into
mov
pop
push
push
pop
lods
lret
xor
out
insb
icebp
mov
scas
sahf
imul
xchg
add
popa
push
mov
cmp
mov
fiaddl
mov
sbb
jne
das
add
sub
mov
or
roll
int3
lahf
notl
scas
stc
fsubrp
fildll
movsb
jecxz
cld
sbb
or
sbb
push
psrlw
mov
lods
mov
pop
inc
cmp
adc
outsl
sbb
dec
stos
dec
sub
and
mov
rorb
je
popa
ljmp
and
in
jno
sbb
lods
jbe
cld
bound
mov
sbb
inc
sbb
mov
movsb
icebp
sub
pop
sbb
negb
dec
jmp
lahf
sub
sbb
aad
inc
mov
and
sbb
lock
push
mov
or
lahf
add
je
imul
sub
shlb
adc
lcall
fistpll
int
dec
or
xchg
ret
inc
pop
xchg
in
mov
inc
subb
loope
xchg
cmp
test
and
out
ret
jnp
fidivl
aam
cli
jmp
add
xchg
aaa
aaa
push
mov
mov
mov
cmpsb
xchg
push
jae
jb
and
add
popf
inc
pushl
gs
insl
into
mov
dec
push
mov
xchg
pusha
movsl
movsb
pop
sub
fcoms
call
fisttpl
test
mov
aas
and
mov
arpl
cld
push
popa
jo
stos
pop
inc
movsl
ret
ficoml
mov
icebp
dec
arpl
pop
mov
xchg
movsl
fimull
mov
adc
xchg
jno
repnz
and
push
das
xchg
rcrb
sti
lods
sub
push
loope
int3
dec
out
es
sbb
fsubrl
adc
pushf
mov
jno
pop
add
lcall
rcr
jl
in
cwtl
jnp
dec
inc
add
pop
sub
in
push
dec
or
cld
rorb
cmc
dec
ja
jp
iret
pop
mov
xor
mov
dec
insb
jns
out
lods
jae
mov
xor
shl
lds
xor
fisubrl
je
sbb
adc
and
aaa
push
mov
or
adc
xchg
pop
divb
adc
mov
push
ret
or
and
aaa
push
jg
inc
out
sub
fimuls
mov
push
sbb
mov
sahf
lret
pop
cwtl
mov
and
shl
outsb
in
pop
js
scas
inc
pushl
mov
movsb
clc
pop
mov
sub
add
stos
lahf
popf
xor
mov
cmp
into
fidivrl
pop
insb
rolb
xchg
and
arpl
in
jnp
cmp
push
out
mov
lock
daa
mov
stc
lcall
jnp
fs
dec
int
sub
je
lds
outsb
inc
ret
addr16
lds
wrmsr
outsb
or
dec
mov
adc
and
aas
xchg
and
fldt
ret
xchg
bound
push
lods
dec
pop
pop
sbbb
push
popa
cmpsb
sub
add
mov
add
jmp
icebp
mov
test
xor
mov
push
sub
or
shrl
pop
adc
fucomi
in
ja
dec
cmp
dec
lret
dec
aam
and
daa
sub
das
sbb
push
push
inc
movsl
mov
lods
push
ss
nop
lret
push
inc
int3
inc
mov
and
je
mov
ljmp
cmp
outsb
aad
movsb
ffree
mov
bound
mov
inc
inc
mov
sub
shll
xor
xchg
push
loop
aaa
imul
sbb
cmc
mov
jae
lcall
loopne
ss
xlat
enter
inc
cmp
ret
notb
cltd
sub
loop
in
arpl
jl
scas
outsl
loop
ficoms
jns
and
pushf
cmc
lods
jmp
jl
shl
sub
aad
xor
jb
jp
shll
adc
lea
add
jbe
jl
dec
addr16
outsb
shr
lret
int
xchg
jp
xchg
push
inc
mov
cltd
xor
and
sbb
or
mov
dec
sbb
pop
push
cmc
sub
shrl
adc
imul
loope
movsb
mov
decl
xchg
jg
or
and
sub
cli
jae
pop
div
arpl
sbb
mov
sub
aam
cli
adc
xchg
add
or
int
xchg
dec
inc
push
cs
shrl
and
jae
sub
dec
js
sbb
sub
shl
aam
outsb
pop
in
movsl
jbe
ret
xchg
lea
out
lock
test
fisttpl
fs
addr16
mull
test
cltd
sub
cs
mov
pop
dec
xor
xchg
lcall
dec
jno
or
hlt
sarb
push
cmpsb
cmp
hlt
mov
mov
clc
push
xchg
popa
jle
pop
add
sbb
int
mov
xchg
ss
pop
cltd
data16
cmc
mov
xlat
inc
divb
mov
es
mov
inc
outsl
mov
cmp
push
and
jns
add
rep
mov
jae
pusha
push
inc
in
clc
fsubs
pop
add
add
jne
cmp
loope
pop
xchg
cmpsl
outsb
xor
cmp
outsb
sub
jbe
aam
inc
sub
jp
xchg
push
cmp
bound
push
mov
shll
ror
ret
mov
dec
nop
or
ret
ror
scas
movsl
xchg
fadd
sub
test
jmp
cmp
mov
push
dec
and
mov
pop
sti
stos
xchg
xlat
test
stc
in
dec
xchg
call
adc
fildl
pop
in
mov
ljmp
fadds
push
scas
sub
or
add
jmp
xchg
pop
inc
mov
mov
xor
hlt
xor
aad
lret
stos
popf
cmp
lcall
add
pop
xlat
cltd
pop
inc
inc
lcall
in
pop
ja
jo
mov
mov
cli
mov
mov
jmp
jp
arpl
mov
xchg
shlb
test
popa
inc
aaa
push
push
jno
nop
push
pop
pop
adc
cmp
in
adc
pushl
inc
dec
jmp
aad
mov
push
inc
cmpsb
mov
sub
sub
pop
insb
leave
xor
push
imul
aad
mov
inc
jp
cltd
push
pop
das
adc
outsb
push
shll
rcll
pop
add
cmpsl
out
pop
test
mov
xchg
int
loopne
testb
out
sbb
push
and
mov
sbb
mov
and
sub
jb
lock
cmp
lds
or
ror
xchg
jg
loopne
xor
in
dec
cmp
lret
in
inc
test
roll
mov
xchg
jmp
mov
fdivr
fcomip
lea
push
jb
jns
inc
lds
sub
ja
adc
pusha
jmp
pushf
pop
lods
test
jno
mov
mov
dec
sub
jg
in
pop
shrb
mov
lods
out
out
enter
mov
push
or
adc
mov
nop
jns
cld
cs
mov
lods
or
movsl
add
cmpsb
fimuls
data16
hlt
sub
xchg
and
push
iret
cmp
mov
loop
pop
cmp
adc
push
dec
cmpsl
jecxz
je
xchg
loopne
sahf
das
inc
jb
lds
jns
xchg
xchg
icebp
sti
and
andl
mov
push
jae
cmpb
xor
leave
pop
push
and
rolb
fdiv
aam
dec
cmp
cli
sbb
lds
aad
in
mov
push
add
xor
adc
out
adc
shl
xchg
call
or
pop
cs
and
cli
pop
shrl
out
hlt
mov
cmp
dec
xor
cs
fnstcw
mov
outsl
cs
xor
ss
subps
in
pop
xchg
out
add
xchg
leave
add
pusha
sbb
push
bound
scas
clc
lock
push
cmpl
pop
push
cmp
push
cmp
les
dec
jl
or
push
mov
insb
jmp
fmull
bound
add
rcll
inc
pop
out
pop
pop
add
into
mov
gs
pop
mov
daa
call
xchg
push
subb
sbb
cmp
out
movsl
sub
add
mov
ror
inc
sub
lods
inc
xchg
dec
sub
dec
push
jns
hlt
scas
es
ds
pop
push
testb
fs
jmp
dec
xchg
sub
ret
call
and
data16
and
insb
in
fcoms
mov
shll
pop
rcl
mov
bound
inc
jo
dec
mov
ret
push
sbbl
fwait
repz
mov
scas
ljmp
or
dec
and
inc
mov
add
rorb
iret
scas
in
popa
and
ljmp
jb
idivb
repz
outsb
sub
lods
inc
lret
mov
xor
and
loope
sbb
shlb
mov
xchg
dec
in
push
add
test
or
imul
pop
mov
and
in
xchg
ret
ja
dec
jmp
and
iret
movsb
in
mov
sarb
iret
shll
je
ret
test
or
test
out
repz
pop
add
clc
xlat
or
cltd
js
sub
insb
test
shll
cmc
aam
pop
adc
loop
add
mov
mov
das
ret
adc
movsb
jle
aad
xchg
add
pop
cld
lahf
orb
call
popl
mov
je
lock
sub
xchg
mov
in
xchg
mov
push
push
pop
xchg
js
lret
scas
dec
pop
jae
mov
fs
mov
push
xlat
inc
mov
push
testb
stos
pushf
es
or
mov
mov
and
xchg
imul
sbb
mov
lret
add
hlt
jp
call
in
cmp
mov
adc
es
cmc
jnp
in
pop
lods
insl
lcall
mov
adcb
add
js
pop
xor
mov
xchg
into
cltd
adc
in
xor
mov
adc
mov
clc
out
xor
sbb
shll
inc
fiadds
arpl
mov
setbe
sbb
push
pop
jb
pushf
imul
sti
popa
xchg
xor
jo
mov
jecxz
into
mov
or
addb
or
ficoms
cmp
call
int
mov
sub
pop
lahf
cwtl
inc
test
xor
subl
and
sahf
or
sub
add
stos
sbb
jg
mov
mov
sub
clc
cli
jecxz,pt
cwtl
cmp
fmul
push
repz
jmp
push
push
iret
ds
xchg
fucomip
xchg
push
push
sarb
sbb
inc
add
rclb
add
add
or
int3
rclb
xor
scas
sbb
sub
popf
fstl
xchg
lcall
xor
cwtl
into
mov
fisubrl
push
addb
and
movsb
jmp
dec
popa
xlat
mov
int3
sbb
shrl
sub
xchg
outsb
aad
inc
and
aas
sub
mov
xchg
ds
or
pop
dec
mov
pop
mov
pusha
orb
pop
iret
data16
sbb
ljmp
mov
mull
pop
xor
jbe
cmp
arpl
gs
sub
mov
lcall
pushf
mov
jnp
sub
xchg
cmpsl
adc
xchg
repz
or
xor
div
mov
clc
scas
test
movsb
dec
inc
pop
add
stos
scas
lods
inc
loopne
mov
dec
stos
mov
loope
mov
mov
data16
add
hlt
dec
mov
les
pop
aaa
sub
pop
cwtl
ss
js
cli
mov
arpl
lds
jo
sub
out
divl
sub
pslld
mov
mov
in
ss
aaa
pop
addr16
bound
ljmp
dec
mov
loopne
hlt
das
sahf
repnz
cmp
mov
rclb
and
xorb
cwtl
cmpsb
setl
xchg
enter
popa
adc
lahf
mov
dec
jne
mov
out
adc
and
aaa
xchg
scas
mov
mov
xchg
lods
outsb
insl
adc
or
stos
adc
cs
inc
cmp
pop
mov
fwait
push
jo
dec
and
or
arpl
shll
or
mov
mulps
insb
xchg
stc
sub
pop
ss
jbe
pushf
ret
cwtl
mov
sahf
adc
pop
pop
sub
adc
ja
jno
orb
pop
mov
dec
aam
gs
xchg
out
add
jns
repnz
fdivl
xchg
push
dec
or
lret
nop
add
adc
and
mov
repz
out
sub
mov
or
push
or
movsb
aam
push
data16
add
shlb
clc
and
call
mov
jge
jne
jb
xchg
sub
sahf
sub
mov
pushf
out
ss
push
pushf
push
pop
lock
aas
mov
pop
orl
rcll
cmp
lds
mov
repnz
cmpsl
mov
adc
push
or
pop
andb
xor
push
mov
ja
stos
add
ficomps
adc
dec
scas
push
jae
das
dec
add
daa
pop
pop
mov
jecxz
add
sub
fwait
das
jae
push
mov
mov
in
cs
fstpt
push
fisttpl
sub
mov
rcll
dec
addl
ret
mov
mov
xchg
int3
shlb
sbb
sbb
add
in
int3
movl
mov
js
pop
loopne
mov
pop
push
test
ds
cmpl
insb
scas
ret
insb
adc
and
lock
std
loop
mov
xchg
jle
outsb
mov
cs
xchg
cld
nop
je
adc
popa
rcr
cwtl
adc
test
jbe
das
adc
cmp
lock
push
sbb
and
cs
push
js
imul
out
in
inc
cmp
jge
rorb
mov
movsb
imul
clc
sbb
in
xor
xlat
call
fwait
nop
gs
pop
mov
js
sbb
sub
dec
or
and
push
into
mov
leave
xchg
and
mov
ja
jmp
sti
mov
in
add
movsb
pop
pushw
push
mov
test
cmp
add
dec
aas
mov
call
loope
loop
dec
jg
movsl
test
mov
aaa
sarb
inc
gs
loopne
in
into
xor
mov
int3
xchg
notl
js
mov
cltd
adc
xor
cwtl
cmp
sbb
mov
push
xchg
jae
outsl
jnp
and
popa
jo
data16
call
sbb
in
inc
std
jnp
xchg
addl
test
sti
bound
xchg
hlt
push
pop
mov
mov
aaa
movsb
cmp
fsubs
cmp
in
adc
test
out
fs
mov
sub
aas
xor
xchg
sub
push
sub
sbb
or
pop
out
test
daa
imul
push
inc
push
inc
push
testl
pop
popl
test
in
cs
ss
test
es
aam
jle
lea
lahf
cmp
add
sbb
or
cmp
mov
xchg
add
mov
rcrl
lret
cmp
mov
xor
jb
mov
sub
mov
add
std
icebp
xor
adc
or
dec
cltd
icebp
test
aad
push
pop
inc
test
and
ss
aad
mov
cmpsb
daa
xor
adc
push
leave
or
scas
push
scas
js
or
sub
loope
xlat
ss
jg
adc
movsb
sbb
ret
pop
cmp
loopne
push
cmp
push
shlb
lret
std
cmp
mov
fwait
les
and
fdivp
inc
pushf
mov
adc
fwait
jne
cmp
mov
inc
inc
dec
test
or
jno
cmp
jp
pop
add
and
add
mov
adc
or
dec
mov
pop
mov
arpl
test
nop
loopne
popf
dec
and
in
cmpsl
mov
dec
jle
push
arpl
stos
fdivrp
mov
xorl
add
mov
xchg
divb
xchg
lret
sti
leave
push
rcl
push
xchg
imul
lods
add
fdivrp
sub
or
push
out
sbb
divl
stos
push
or
call
test
jg
mov
xor
insl
cmp
mov
mov
ja
and
xchg
stos
movsb
pop
inc
inc
mov
imul
add
out
mov
mov
lea
sub
adc
test
mov
pop
inc
sbb
insb
or
repz
jns
fprem
orb
mov
js
movhps
jg
mov
adc
mov
add
out
xor
dec
pop
into
push
testb
arpl
cmpsl
lods
mov
test
cmc
cmp
test
arpl
pusha
or
ret
loop
add
xchg
mov
ret
ljmp
out
inc
dec
shl
jns
and
gs
jp
enter
xchg
sbb
mov
mov
ret
xchg
sub
imul
aaa
aaa
or
incl
sub
mov
inc
cmp
pop
add
xor
arpl
int
pop
adc
jb
mov
repnz
testb
sub
jmp
ds
inc
adc
negl
add
ss
aam
loop
jno
not
popa
sbbl
mov
shll
fcompl
xchg
cli
lret
sub
nop
and
dec
xchg
xor
push
xchg
mov
inc
cltd
repnz
pushf
xor
push
adc
push
into
mov
push
pop
mov
mov
inc
cli
mov
in
push
rcll
cwtl
ljmp
into
cmp
scas
in
cltd
mov
outsl
not
cmpsl
sahf
outsb
in
rcr
mov
aaa
movsb
es
xcrypt-cbc
cmpsl
rclb
inc
add
mov
arpl
loop
dec
fisttpll
je
fmull
jae
in
mov
adc
dec
movsb
xchg
xorb
xor
mov
repnz
xchg
test
scas
stos
gs
mov
out
iret
push
lods
mov
jecxz
fadds
pop
pop
out
xchg
pop
sti
xor
rcr
ss
pop
stos
jp
shrb
adc
push
push
shl
ficoml
lahf
mov
jns
adc
xchg
movsb
cmp
xor
mov
icebp
les
popf
jne
and
icebp
dec
xchg
xchg
insb
inc
push
mov
pop
stos
sbb
in
ja
mov
out
mov
in
cmp
and
cmp
ret
inc
xor
stos
push
xor
push
inc
aad
stos
bound
adc
ljmp
xchg
push
push
or
inc
mov
loopne
add
mov
xor
xor
pop
mov
xchg
push
mov
mov
inc
jnp
and
sbb
or
roll
outsl
jo
or
or
scas
into
mov
jne
sbb
xchg
mov
popa
xchg
adc
in
jo
dec
xor
lret
movsl
daa
add
popa
xor
fdivs
jo
cmp
nop
mov
fwait
out
dec
ds
and
cmp
dec
lahf
ljmp
rorb
repnz
aad
add
sbb
orb
push
sar
mov
stos
add
cmp
mov
adc
dec
xchg
into
lock
sub
enter
jmp
jp
mov
bound
jbe
cli
icebp
add
out
mov
loopne
dec
iret
std
popf
push
xor
loope
xchg
test
call
hlt
sarl
mov
enter
fldt
iret
out
cmc
mov
pop
ss
push
aaa
aaa
mov
dec
push
dec
cmpsl
mov
stos
arpl
stos
pushf
sbbl
insl
pusha
push
movsb
dec
cmpsb
scas
sbb
cmp
fcomps
jecxz
cmp
jmp
push
push
and
into
adc
je
sub
stos
sbb
test
xchg
cmp
fisubs
gs
mov
rcll
mov
xchg
sbb
cmpsb
inc
es
mov
fwait
loope
iret
sbb
cmp
sub
inc
jno
push
arpl
fists
into
jecxz
inc
and
jge
notl
outsl
inc
js
pop
sbb
xor
aad
or
sub
pop
add
pop
loopne
aaa
repnz
sub
dec
xchg
add
dec
fbld
mov
cmp
sub
int3
xor
push
lds
and
and
cs
shrl
mov
icebp
andb
movsl
xchg
mov
das
in
fdivrl
mulb
sbb
frstor
xchg
jle
insb
jb
add
int
push
dec
std
push
push
scas
dec
sub
fstpl
and
xchg
adc
jno
arpl
lret
daa
push
cmp
cmc
lcall
pop
fisubl
dec
cmp
push
popa
or
fwait
std
mov
inc
popf
pop
xchg
cmp
fisttpll
jo
sbb
sahf
and
pop
jecxz
sbb
xor
jp
xlat
out
push
jno
ljmp
mov
stos
cmp
adc
std
in
pop
adc
rcl
cmc
and
inc
hlt
mov
ret
insl
shl
pusha
or
pusha
aas
and
lret
mov
ljmp
mov
push
cs
cmpb
pop
das
cmpsb
mov
js
push
mov
sub
aaa
js
or
xchg
shlb
pusha
sub
cmp
and
add
mov
subb
arpl
or
lods
into
mov
outsb
call
lods
lret
and
clc
or
and
dec
in
inc
mov
inc
jne
repz
push
lret
or
popf
arpl
out
sbb
jno
leave
fsubrl
das
mov
pop
rcrb
fisubrl
pushf
mov
mov
push
fisubrs
adc
repnz
adc
pop
fdivp
dec
push
data16
jle
mov
sub
ja
ja
or
movsb
mov
xchg
insl
je
push
or
mov
push
jle
data16
dec
inc
xor
cmpb
jle
sbb
push
jl
mov
mov
push
dec
mov
sbb
shrl
pop
jae
sahf
cli
and
jmp
cli
jg
and
jnp
pop
cmp
sbb
jns
out
mov
aad
in
push
sbb
xor
mov
mov
hlt
sbb
lock
push
jbe
in
jns
insl
pop
sub
repz
xor
pop
add
cltd
repz
aad
jecxz
sub
jne
xchg
push
push
loopne
popf
mov
add
leave
add
xchg
clc
jb
int
xchg
jg
popa
pop
bound
pushf
dec
sub
jge
imul
fimuls
sti
add
sub
jmp
mov
rcrb
hlt
or
scas
imul
sub
sub
mov
shl
xchg
inc
jns
jns
cmp
dec
or
mov
dec
loop
mov
icebp
add
mov
push
dec
lods
std
fidivl
and
int3
or
test
pop
nop
mov
pop
repnz
ja
xlat
fnstsw
leave
pop
dec
push
int3
lock
adc
shll
mov
fisubrl
xchg
cwtl
nop
fcmovnu
dec
out
call
and
cmc
popf
mov
push
int
enter
subps
jnp
in
pop
xchg
mov
cld
aad
popa
cmp
and
mov
mov
stos
outsl
pushl
addr16
xlat
out
scas
sub
shrb
pop
out
test
pop
pusha
leave
insl
nop
cs
fsubr
mov
push
call
push
clc
cmp
scas
xchg
out
dec
add
lahf
dec
dec
pop
jo
mov
dec
mov
orb
sbb
pop
mov
jo
gs
lods
adc
in
sub
fiaddl
push
pop
aad
enter
jle
lods
sub
dec
inc
fldl
push
sahf
dec
aam
sahf
jne
xchg
sar
or
divb
mov
mov
movsb
repz
sahf
xor
mov
fistps
push
add
rclb
inc
cld
push
xor
xchg
test
or
repnz
push
cmpsl
jge
and
lret
xchg
test
mov
lods
cmp
sbb
push
scas
adcl
imull
and
roll
outsl
or
xor
xor
pop
push
and
shrb
sub
hlt
inc
fmulp
cmpsb
movsb
aaa
enter
adc
ficoml
outsl
inc
ljmp
sbb
mov
and
loop
push
jl
xchg
std
fsts
dec
jp
fdivrl
rcrb
adc
mov
mov
push
add
add
addl
push
sarb
mov
lret
dec
xchg
int
cwtl
addr16
dec
mov
cmp
mov
scas
sbb
adc
or
pop
add
data16
mov
ret
std
xor
stos
out
fxch
iret
fdivrs
sahf
cmp
aam
mov
fnstenv
scas
xor
bound
repnz
dec
sub
pushf
clc
je
mov
jno
out
stc
imull
push
fcmovbe
test
xchg
movnti
arpl
incl
pusha
das
add
pop
sbb
insl
xor
hlt
mov
pop
mov
test
mov
fidivs
xchg
mov
aas
inc
push
mov
xchg
into
addl
mov
mov
shr
leave
push
mov
icebp
inc
sbb
dec
xchg
jae
loopne
das
loope
and
sarl
adc
daa
inc
and
inc
call
in
movsb
xchg
push
mov
arpl
xchg
and
xor
subl
pop
mov
push
test
sub
pop
shrl
ror
mov
jmp
rcll
in
loop
inc
ret
mov
imul
fsubs
xor
decl
mov
xor
push
std
lret
jbe
sahf
jecxz
in
sbb
ja
jns
inc
mov
call
add
and
inc
out
sub
xorl
and
fisubs
shll
xor
or
rorl
mov
push
pop
mov
jno
sub
push
out
mov
xchg
negb
loope
jo
adc
daa
sbb
or
jmp
or
dec
in
movsl
rcrl
out
pop
loop
ret
and
mov
divb
pusha
inc
xor
ret
ret
lods
test
xchg
adc
cwtl
lock
fisubl
mov
and
in
push
shll
loop
sub
push
sti
jl
mov
push
push
shlb
sarl
pop
sub
adc
lods
inc
cmp
out
fidivrs
xchg
xchg
es
cmp
dec
adc
int
push
jnp
das
sbb
add
scas
or
mov
outsl
cltd
mov
jge
sbb
shlb
lcall
fisttpll
xchg
pop
lret
mov
jecxz
fsts
sbb
fldenv
jg
cmc
push
in
shlb
push
daa
mov
dec
push
stos
pop
push
add
int
push
jp
not
pop
jbe
movsl
mov
loop
out
aam
js
adc
inc
fbstp
adc
jno
mov
xor
loope
iret
push
std
addr16
mov
push
cmp
fdivrs
mov
push
mov
popa
mov
push
or
jno
jnp
jle
fbstp
fucomip
mov
andl
sub
jmp
and
mov
inc
lock
push
mov
stc
sti
add
adc
jnp
sbb
dec
lea
and
mull
addr16
mov
add
fwait
int3
sub
mov
je
sub
iret
shlb
loope
pop
push
lock
rclb
in
and
in
pop
bound
scas
rolb
ds
bound
mov
pop
js
jp
fwait
or
cwtl
dec
xlat
xchg
call
jbe
or
mov
jb
lret
das
dec
mov
sarl
clc
imul
leave
adc
roll
rcrb
sarb
lcall
adc
add
test
cwtl
jle
clc
fdivrs
jo
jecxz
pop
jae
stos
pop
ss
test
test
push
and
jmp
pop
xor
stc
xchg
in
stc
icebp
ss
pop
cmp
mov
xchg
data16
in
enter
or
jnp
xor
test
pushf
dec
icebp
into
sti
sub
lds
rcr
outsb
pop
mov
push
cs
out
inc
ds
pop
dec
push
sbb
shl
mov
mov
cmpsb
jne
inc
mov
insl
mov
dec
das
sub
stos
sbb
mov
stc
inc
pop
repz
subl
cmc
cmp
pop
jbe
mov
daa
inc
push
inc
cmp
mov
in
dec
std
xor
test
jbe
push
mov
test
and
mov
repnz
test
xor
loope
ja
add
jmp
iret
xorb
dec
or
push
mov
repz
jmp
sub
je
pop
push
mov
out
mov
pushf
cmpsb
xabort
inc
mov
daa
jbe
lods
mov
ds
insl
xor
cli
dec
das
gs
jbe
mov
adc
cltd
out
clc
das
repnz
aas
push
mov
add
ret
adc
dec
and
xchg
inc
pop
stos
fwait
nop
sub
pop
les
ss
lods
repnz
cmp
ljmp
cmp
pusha
les
pop
xchg
pop
or
ret
mov
je
lcall
cmpsl
mov
mov
adc
lock
int
push
vcvtsi2sdl
pop
jp
ret
push
ret
testb
push
addr16
out
loope
adc
ficomps
repnz
divb
shll
clc
inc
gs
mov
dec
loop
push
inc
dec
xchg
xchg
jae
movb
push
stos
fwait
int
andb
hlt
inc
imulb
adc
adc
mov
cwtl
jp
hlt
and
mov
sbb
idivl
push
popf
add
out
clc
mov
fwait
dec
xor
and
push
popf
xor
inc
mov
fdiv
mov
mov
sbb
fisubl
and
lcall
cmp
cmc
in
adc
out
sar
mull
xchg
cmp
clc
in
iret
lds
int3
lds
or
scas
lods
mov
pop
cmp
mov
push
nop
push
sub
movsl
notb
xor
imul
fwait
mov
aad
sbb
int3
push
enter
insl
shl
xchg
mov
pop
les
mov
js
mov
and
push
dec
xchg
int
mov
or
fnsave
push
arpl
mov
insb
aas
shll
scas
in
adc
push
cmc
nop
sbb
sbb
int
fidivrl
xchg
sbb
xlat
repnz
jge
xor
iret
pop
les
and
test
jg
push
push
jecxz
flds
pop
add
aam
xchg
push
insl
mov
cmp
lods
mov
sbb
fsubs
movsb
cmp
or
mov
call
into
or
je
popf
rclb
icebp
insl
outsb
xor
inc
mov
xchg
aaa
imul
lmsw
add
inc
nop
shll
jmp
sub
adc
inc
rcrb
dec
shrb
xor
cmp
ffreep
mov
sub
pop
or
out
and
fnstcw
gs
xor
or
mov
add
push
xlat
pop
jmp
stos
fadds
out
mov
lock
fs
cmp
push
jb
stos
out
mov
cmp
and
mov
xchg
repz
lock
jecxz
and
cwtl
ds
push
jns
jno
sbb
xchg
and
cld
inc
jle
xchg
gs
xlat
push
xor
add
sub
xor
push
and
imulb
add
inc
in
aad
mov
cmpb
out
test
jmp
lahf
bound
and
dec
or
lods
cmp
cs
dec
push
pop
into
shr
cmpl
fildl
div
push
popf
xchg
iret
popa
xor
insb
or
loop
cmc
and
in
iret
lods
pop
cltd
iret
cmp
inc
cmp
js
mov
push
fprem
mov
push
lret
daa
pushl
mov
ret
jnp
scas
inc
mov
clc
in
xlat
rcrl
sub
stos
fistl
push
pop
lea
mov
in
pop
pop
sub
dec
adc
pushf
mov
jnp
xor
fstp
idivb
push
xchg
dec
aaa
insl
aam
dec
hlt
mov
jne
lcall
or
ss
loop
out
aad
dec
xor
jge
mov
or
or
arpl
fmuls
mov
add
call
and
imul
cwtl
sub
addr16
xor
push
mov
nop
jnp
cmpsb
in
jb
inc
addr16
mov
add
rorl
add
pop
lahf
lds
dec
aas
jl
adc
insl
fmull
pusha
pop
into
in
mov
adc
out
std
sbb
push
cmpsb
jle
adc
and
je
adc
bswap
xchg
inc
mov
lret
outsb
add
jns
mov
outsl
rcll
sbb
xor
pushf
fimuls
xorb
and
sbb
ficompl
aad
lcall
movl
outsl
jmp
sub
inc
out
inc
int3
or
cld
sub
fisubrl
lea
jp
call
and
and
inc
insb
lcall
push
outsb
pop
stc
sahf
lret
pop
jl
xchg
ficompl
test
mov
push
filds
test
in
adc
je
mov
loopne
xor
mov
sbb
cs
xchg
pop
mov
adc
cmp
sub
lret
insl
ret
jecxz
push
orb
or
shl
arpl
mov
mov
mov
fsubr
out
fldl
and
lods
and
xchg
fnsave
ljmp
in
inc
and
pop
stos
push
sahf
push
xchg
mov
pop
or
xor
adc
cltd
push
int3
mov
lock
or
mov
xchg
fimuls
add
push
or
jo
aam
leave
int3
mov
or
sarl
mov
aam
in
fcmovnu
sbb
loop
jb
aad
mov
int
inc
imul
cmp
cmc
dec
aad
mov
out
lcall
mov
mov
js
nop
and
sub
xchg
idivb
push
mov
out
sahf
and
mov
mov
and
ret
dec
outsb
xchg
loop
mov
int
mov
cmp
aam
pop
cmpsb
imul
pop
out
lahf
mov
pusha
jne
int3
xlat
dec
jl
and
popf
test
and
das
bound
sti
arpl
test
sbb
mov
fmull
or
popf
lods
xor
or
dec
int3
ud1
out
adc
jg
fcomi
test
or
mov
xchg
push
sub
sub
out
psubb
popf
jmp
imul
movsb
jecxz
sahf
cmp
pop
fs
xchg
mov
divb
call
lret
rcl
loope
arpl
push
add
pop
jl
add
mov
mov
push
les
scas
in
arpl
or
movsb
adc
lds
es
pushl
fwait
pop
mov
mov
imul
ljmp
movsb
jae
xor
icebp
jmp
push
cs
aad
repz
pop
jbe
pop
hlt
out
pop
lret
sub
inc
mov
add
and
ret
inc
sub
into
push
mov
pop
sbb
xor
jns
fwait
jg
popf
push
movsb
mov
mov
jne
xchg
inc
fcmovne
mov
arpl
mov
inc
int3
in
xchg
dec
pop
pop
loope
and
sub
and
addr16
or
sub
inc
les
sbb
xchg
mov
andl
je
push
pop
outsb
inc
lahf
imul
inc
cmp
iret
mov
ja
int
sub
cwtl
xchg
push
fs
and
out
icebp
aaa
jle
aaa
mov
push
xor
and
push
sub
inc
push
cli
xor
inc
cmpsb
cmp
push
ret
jl
loopne
dec
mov
fcoms
adc
dec
pop
ficomps
inc
push
stos
cld
sbb
mov
jns
inc
loope
das
add
hlt
inc
or
jo
mov
addr16
mov
dec
xchg
sbb
dec
cwtl
add
gs
dec
push
push
int
lock
mov
fs
stos
mov
xchg
jb
mov
subb
mov
jmp
cmc
adc
mov
mov
mov
out
mov
push
add
adc
loop
mov
mov
sub
in
fs
arpl
or
inc
jle
sub
imul
adc
repz
dec
mov
pusha
push
mov
enter
push
cs
enter
mov
dec
data16
push
push
xor
imull
gs
sbb
push
jnp
jne
fbld
dec
cmc
xlat
outsb
test
clc
imul
dec
jmp
dec
push
add
and
jo
mov
xor
jae
fdivl
fcoml
test
xchg
out
pop
iret
in
roll
nop
ja
outsb
pop
xchg
xorb
loop
mov
sar
enter
mov
cmp
jecxz
daa
mov
pop
adc
ja
dec
xchg
in
stos
scas
call
jbe
pop
jge
div
std
subl
mov
mov
mov
std
icebp
mov
xor
nop
sbb
push
mov
inc
jne
bnd
xchg
cs
movsl
sbb
dec
inc
xchg
movsb
sbbl
jne
dec
pop
add
loope
out
pop
add
add
jmp
les
dec
sbb
push
jae
pop
xlat
bound
jb
xlat
cs
popa
jecxz
subl
popf
sbb
call
cmc
adc
mov
scas
popa
xchg
mov
adc
rcrb
scas
out
in
bound
add
jle
fnstcw
mov
enter
cld
fisubrs
pop
mov
arpl
into
sbb
push
mov
js
fstps
push
insb
movsl
sub
ljmp
xchg
xor
adc
mov
cmp
push
lea
xchg
cmp
fists
fbstp
and
mov
pop
pop
pop
lret
mov
push
test
inc
mov
push
mov
in
sbb
xchg
or
mov
jnp
push
ja
jb
inc
push
aad
add
jle
test
inc
jmp
xor
fstps
ljmp
sbb
jae
fistps
rolb
shrb
dec
cmp
rcrl
jbe
out
pop
push
fmuls
dec
ja
out
pop
mov
pushf
sbb
xchg
xchg
xor
icebp
lcall
mov
and
jge
sub
sub
daa
lock
adc
or
adc
push
push
movsb
popf
adc
repz
incb
and
dec
je
xor
outsl
loop
dec
mov
and
bound
sub
sbb
out
in
jns
orb
and
in
dec
sti
icebp
mov
pop
jno
cwtl
lods
push
mov
aaa
outsl
or
test
adc
ja
pop
push
repz
sub
insb
xor
mov
mov
sbb
or
pop
or
test
add
xor
loope
cmc
dec
push
mov
int
dec
in
js
xchg
push
add
dec
add
xchg
aaa
out
outsl
mov
inc
int3
adc
sbb
adc
adc
out
hlt
mov
adc
ret
pop
loop
add
pop
decb
mov
pop
outsl
xor
or
into
jo
psrlw
aad
adc
fwait
mov
add
out
into
std
jp
outsb
cmc
jl
or
mov
xchg
stc
sub
iret
pusha
or
xor
push
jmp
jnp
inc
xor
mov
push
mov
add
pop
mov
lret
js
sbb
xchg
popf
pop
incb
mov
xorl
mov
inc
imul
xor
pop
dec
xor
cmp
insl
negb
stc
loop
es
movsl
push
mov
pop
xchg
mov
or
aaa
js
insl
sbb
push
push
sub
ljmp
mov
cmpsl
jne
leave
cvtdq2ps
jnp
sub
fimuls
sbb
jecxz
out
imul
jp
xchg
mov
fwait
gs
xlat
sahf
fists
pop
jl
out
pop
ljmp
push
cltd
lock
or
mov
push
test
push
xchg
daa
in
sbb
mov
sub
in
jo
inc
inc
jge
fcmove
nop
sub
mov
push
pop
dec
xlat
inc
jo
inc
adc
jmp
mov
leave
testb
ret
lock
movsl
cmp
dec
jge
nop
sbb
bound
mov
jmp
mov
add
test
hlt
repnz
dec
pop
or
mov
clc
xor
fnstsw
push
fistpll
adc
fcmovu
insb
add
in
test
fcmovbe
xabort
cmp
ret
mov
dec
mov
aas
adc
dec
mov
popf
stc
es
pop
add
cmpsb
ljmp
lahf
xor
dec
adc
fisubs
xchg
or
test
fimull
add
jle
sbb
jno
lret
bound
in
lea
fsubr
pusha
jl
popa
and
test
and
insl
xor
jge
xorb
ja
das
fldenv
daa
into
push
sbb
xchg
repnz
test
pop
jbe
adc
sub
test
and
fs
jmp
daa
out
cld
test
stos
shl
divb
mov
in
out
sub
cs
jb
stc
sarb
mov
cmp
into
pop
cmpsl
arpl
enter
fs
pop
fwait
mov
ficomps
fadd
ja
repz
mov
or
xchg
pop
cmc
mov
insb
inc
out
out
lcall
add
int
sbb
int3
lret
inc
cld
jge
in
lock
vpermi2d
test
jl
xor
or
bound
inc
mov
xchg
adc
inc
jg
das
push
and
movb
push
cmpsl
fs
testb
pop
xchg
push
cld
dec
or
rcrb
jmp
dec
shrb
mov
stc
mov
push
test
fwait
jmp
and
lods
mov
bound
mov
lods
and
mov
dec
aam
inc
or
imull
lret
in
adc
sub
mov
sbb
inc
clc
xor
pop
dec
cli
ja
or
mov
mov
xchg
push
shlb
aaa
or
add
or
cs
out
insb
mov
lock
out
jle
stos
in
scas
inc
add
notl
in
fisubrs
mov
and
mov
pop
les
sub
mov
jbe
repnz
cs
pushf
jg
in
in
jecxz
xor
xor
fbld
pop
adc
jnp
xchg
mov
push
aam
sahf
sbb
shrb
icebp
jae
rclb
add
cmpsl
ja
sub
xor
xorb
jns
lret
outsb
lock
ret
inc
cmpsl
fwait
shrl
mov
sub
sarl
test
mov
out
subl
test
and
sti
sbb
sbb
lcall
push
ds
mov
fs
fstpt
mov
inc
xor
sub
xchg
cmpsb
dec
sbb
mov
cmovns
mov
test
fistl
and
shl
dec
rorl
ds
cmpsb
in
xchg
xor
and
mov
or
shlb
push
rol
popf
rcrl
sbb
pop
or
icebp
xor
pop
pusha
icebp
mov
and
and
mov
dec
pusha
add
xchg
fcoms
fnstenv
dec
pop
dec
orl
adc
lret
cmpb
pushf
arpl
pop
inc
adc
out
cli
inc
push
jmp
jp
dec
mov
push
inc
push
leave
imul
mov
push
into
pop
es
jmp
jb
popa
bound
mov
inc
xor
in
sahf
ds
push
cmp
aam
mov
xor
dec
lret
pop
jecxz
insb
test
lcall
cli
xor
or
push
xchg
pushf
or
out
mov
in
or
push
adc
in
arpl
jge
dec
stos
push
mov
and
lds
and
stc
sarl
subb
subb
das
stos
repnz
outsb
sbb
loopne
xlat
lret
pop
sub
and
mov
push
sbb
cmp
sarl
idivb
addb
jge
lds
sahf
push
mov
hlt
in
movsl
inc
into
imul
push
pop
push
ror
fs
xchg
mov
push
sbb
xlat
mov
roll
mov
push
dec
xorb
mov
fdivrl
lock
sub
push
stos
leave
loopne
lock
dec
std
xchg
fisttps
mov
es
add
push
arpl
outsl
xchg
les
test
fisubl
inc
sub
and
push
push
cli
pop
rclw
pop
push
inc
inc
fcomps
cmp
adcl
mov
or
jno
xor
adc
xlat
dec
out
in
shl
sbb
xlat
push
test
jg
ss
filds
push
int3
sub
pop
adc
out
jmp
data16
dec
dec
cli
push
out
in
lahf
dec
pop
dec
xchg
filds
jns
ljmp
mov
andl
xchg
xchg
in
mov
jo
inc
fisubrs
lock
jl
xor
mov
js
int3
sub
jb
aam
jne
push
rcrl
xor
inc
out
mov
or
mov
stc
pushf
xor
push
loopne
mov
roll
pop
hlt
nop
mov
inc
adc
add
mov
leave
mov
cmpsl
jbe
fcompl
xchg
js
jae
idivl
jp
inc
andl
mov
mov
adc
dec
add
shlb
mov
xor
fnstsw
ja
and
outsl
dec
decb
push
test
cmpsl
cld
xor
in
js
pusha
ret
cmp
shlb
into
inc
add
mov
adc
inc
aaa
xor
stos
enter
adc
call
std
pop
loope
add
ret
je
daa
push
cmp
jno
int3
stos
sbbb
xchg
loope
mov
push
or
mov
movsb
jle
les
lds
dec
sub
push
test
movsb
js
pop
outsl
cmp
into
inc
jge
mov
outsl
test
lret
xchg
loope
mov
mov
arpl
ret
add
cli
xchg
negl
pop
jl
sbb
inc
mov
jg
fisttpll
pop
xor
cmpsb
movsb
inc
and
mov
sub
sbb
cmpb
jl
cld
mov
xchg
jne
movsb
pop
sub
loopne
push
push
pop
mov
jl
pmuludq
adc
mov
adc
rorl
fidivrl
xchg
mov
sub
andl
test
push
pusha
xchg
mov
std
jp
or
adc
ja
xchg
lcall
data16
imull
dec
aaa
xchg
pop
nop
test
xchg
mov
cmp
sub
nop
andl
push
loop
jae
popf
pop
push
lcall
cmpsb
js
add
pop
scas
xchg
adc
mov
sbb
jns
dec
push
adc
int3
cmpsl
cltd
dec
scas
mov
call
mov
inc
sarl
in
enter
adc
sbb
test
xchg
xchg
adc
mov
adc
pop
je
out
js
jne
mov
jge
and
movsb
xorl
dec
jb
mov
fsubl
and
int3
adcl
outsb
scas
mov
hlt
fwait
movsl
sub
add
cmp
sti
push
cmpb
xchg
icebp
sahf
mov
sbb
xchg
jns
add
pop
scas
push
roll
or
and
mov
and
jbe
stc
and
mov
das
aas
stc
lcall
jg
sbb
icebp
sbb
fldt
push
shlb
test
xchg
and
fidivl
rcr
sbb
dec
or
cmp
mov
stos
push
add
mov
lret
dec
pusha
and
inc
add
aad
jecxz
xchg
push
std
xor
jg
adc
jle
in
jne
sub
adc
mov
aad
pop
aad
jmp
xchg
fnstenv
mov
mov
mov
cmp
and
mov
pop
sub
cmp
aas
dec
into
psrlw
dec
jo
pop
mov
mov
push
xor
jge
dec
int
jle
fdivrl
jb
orl
pop
pop
or
mov
dec
jl
dec
xchg
dec
dec
ds
cmpsl
mov
loopne
add
or
sub
dec
xchg
dec
cmc
mov
aas
aad
into
das
add
and
pop
out
inc
jle
jmp
into
lods
push
dec
ljmp
stc
lahf
pop
out
rol
push
inc
cmc
jecxz
enter
out
mov
rorl
in
les
outsb
mov
xchg
int3
sbb
add
subb
out
daa
jbe
fistps
xchg
push
pusha
push
and
fs
test
leave
pop
stos
dec
test
push
cld
test
scas
dec
daa
mov
pop
pusha
imul
mov
hlt
sub
cli
ljmp
push
dec
lods
out
or
je
mov
sub
inc
dec
leave
icebp
out
in
cmp
fimuls
popa
cli
ja
lock
fistpl
pop
mov
push
dec
insl
decl
sbb
add
aaa
sahf
out
jg
xor
xchg
sbb
aaa
jmp
mov
sub
leave
mov
in
repnz
addr16
mov
loope
iret
out
dec
mov
clc
sbb
cmpl
jb
repnz
mov
fisubs
fsub
jecxz
test
inc
ret
ds
test
hlt
mov
test
mov
jns
mov
and
stos
mov
adc
jbe
out
imul
adc
jle
cmc
xchg
lret
sbb
jae
mov
push
mov
push
outsl
dec
sub
sahf
or
sbb
and
push
sub
cmpsb
mov
push
jge
ficomps
xor
fucomp
cmp
and
leave
inc
or
pop
aas
jb,pn
fidivs
popa
push
jno
jns
cmp
inc
mov
dec
push
idivb
ficomps
shl
dec
out
jmp
and
xor
pop
pop
xlat
sbb
and
in
fistpll
test
pop
std
cmp
into
iret
dec
mov
pop
out
ds
popa
push
mov
cmpb
loopne
dec
or
push
insb
cmp
pop
push
pop
inc
xchg
movsb
mov
stos
and
jae
dec
jbe
dec
sbb
mov
lret
xor
and
sbb
push
pop
call
std
push
or
in
insb
icebp
dec
arpl
mov
test
or
jb
xchg
jecxz
inc
sbb
mov
sub
jecxz
stos
test
ss
adc
xor
jp
arpl
or
mov
or
hlt
and
jl
add
sti
lcall
cwtl
out
mov
push
shlb
mov
xchg
stc
sbb
push
pop
mov
add
sbb
lock
out
mov
sub
scas
shl
sbb
xor
cmp
fisubrl
xchg
int
fwait
fisubrl
jnp
lahf
dec
sub
mov
and
jns
mov
add
sbb
xchg
pop
add
mov
push
xor
int3
jecxz
push
pop
adc
fcompl
out
movsb
fisttps
mov
std
inc
xor
mov
lret
dec
pop
lret
sbb
pop
sbb
mov
lods
outsl
jno
cmp
test
xchg
lret
notb
movsl
pop
jbe
sbb
bound
push
dec
jp
faddl
cmp
stos
dec
fbstp
in
xlat
sub
and
xlat
dec
mov
adc
hlt
pop
aam
aas
mov
push
popf
push
jp
addb
sub
test
pop
add
add
push
or
insb
jb
add
pop
sub
outsb
call
or
int
out
in
sti
into
pop
gs
ret
xchg
insb
or
shrl
insb
push
adc
das
jmp
or
es
addr16
mov
and
lret
adc
xor
dec
mov
nopl
pop
popl
dec
dec
adc
pop
sub
or
lods
xchg
jns
test
data16
mov
pop
sbb
popa
mov
pop
add
push
mov
cltd
mov
stos
pop
push
xor
jg
or
inc
mov
pop
mov
mov
adc
or
mov
mov
jmp
mov
xlat
ljmp
enter
inc
dec
int3
std
jno
mov
adc
add
pop
lods
icebp
lods
or
xchg
adc
xor
jmp
lret
push
cmp
ss
addr16
sub
mov
add
dec
cwtl
mov
popf
pop
out
clc
jl
xor
movsb
int3
iret
int
mov
adc
inc
inc
cltd
lahf
add
cmp
mov
ret
xor
sbb
mov
test
push
xor
repz
into
push
xchg
push
sbb
hlt
mov
lods
nop
jl
gs
jmp
push
ds
sbb
dec
mov
mov
enter
and
int
adc
sub
pop
push
pop
lret
adcb
decl
movsl
xchg
std
out
push
stos
stos
cmp
mov
aaa
mov
movntps
mov
out
cmp
insb
add
ljmp
mov
fucom
daa
xor
lret
push
mov
shlb
aam
orl
std
les
ficoms
shrl
in
inc
sub
cwtl
negl
addr16
dec
pushf
dec
add
rcll
ret
mov
push
jge
mov
inc
testl
out
ficoml
pusha
cs
pop
test
cmp
enter
mov
fstps
adc
dec
mov
dec
jl
push
nop
call
test
sub
dec
xlat
sti
jae
leave
xchg
daa
xchg
rorl
sbb
add
adc
or
xchg
les
cld
push
xchg
cld
pop
aad
jmp
or
mov
xchg
adc
xchg
mov
icebp
pop
push
aas
xor
std
xchg
gs
inc
lgs
and
dec
clc
shl
in
out
cmpl
inc
ret
faddl
inc
imul
fistpl
insl
sbb
adc
xor
test
roll
dec
xchg
test
xor
and
pushf
rcrl
fwait
es
shlb
xchg
lret
pop
das
js
sbb
jae
addb
and
scas
adc
lret
push
dec
fisubrs
pop
adc
js,pt
sbb
jne
mov
dec
xchg
jmp
pop
adc
fcmovnbe
test
adc
lcall
mov
gs
xchg
mov
push
push
out
or
and
add
sti
mov
jg
movsl
jle
sbb
stos
out
xchg
loope
movsl
cmpsb
cmp
mov
mov
cs
and
and
icebp
aaa
sbb
mov
movsb
xchg
incb
lea
adc
scas
mov
mov
mov
jae
push
xchg
lds
mov
dec
sarb
leave
imul
mov
mov
in
in
push
pop
fisubrs
ljmp
and
imul
test
adc
xchg
mov
mov
fbld
mov
loope
fiaddl
in
push
mov
mov
mov
ljmp
cltd
cwtl
iret
fisubrs
not
mov
lods
dec
test
sub
ljmp
cltd
add
js
subl
xor
cmp
mov
ss
sub
das
or
int3
mov
orb
std
or
inc
xchg
jo
mov
scas
call
es
pop
inc
lds
dec
xor
cmp
cs
jmp
cmpsb
into
movl
test
jne
ret
ja
pop
fdivs
or
aam
sub
lea
inc
mov
pop
je
call
movq
pop
sbb
movsl
sub
mov
out
stc
in
push
xchg
icebp
adc
jbe
and
imul
arpl
lret
or
or
fildl
jg
lahf
push
push
outsl
fbld
in
lea
outsl
mov
sbb
xchg
lds
sub
data16
insl
fldt
add
in
mov
mov
pop
pop
sbb
xorl
push
pop
call
xor
mov
pop
pop
fimull
mov
or
ja
data16
les
inc
scas
mov
dec
dec
ja
pop
hlt
push
lcall
mov
fstpt
push
nop
mov
mov
dec
push
dec
inc
pop
push
je
mov
ret
or
out
or
imulb
add
ss
cmpsb
or
jbe
xchg
pop
mov
inc
or
aam
ret
dec
lea
jp,pn
jg
mov
cld
testl
cmpl
adc
sbb
xor
and
sub
outsl
jge
call
jge
cmp
jnp
dec
jns
add
inc
jo
iret
cmp
mov
sbb
push
cld
sub
jbe
xchg
cmp
aaa
xchg
cmp
xor
cmc
mov
and
mov
add
and
xcrypt-cbc
cmpsl
adc
aad
cmp
lcall
add
mov
jmp
sahf
and
in
rclb
pop
sbb
mov
mov
or
add
popf
push
jnp
scas
inc
jl
and
fwait
push
fdiv
sub
out
inc
stc
je
orl
inc
xchg
xor
ret
sbb
loop
test
pop
lret
mov
jle
cmp
or
mov
adc
dec
int
sub
pop
cmpsl
testl
sbb
out
ljmp
mov
inc
imul
shl
repz
push
testb
data16
lcall
fs
dec
push
or
mov
xor
ret
mov
jo
xor
pop
out
jge
outsb
sbb
pop
in
sti
xor
xchg
cmp
inc
jmp
pop
inc
mov
jg
fldt
dec
xchg
xchg
lcall
adcl
push
xor
sub
hlt
mov
jp
or
pop
filds
xchg
fistpl
ja
jl
je
es
lock
rorb
adc
test
dec
and
push
addl
fmul
adc
insl
mov
scas
xor
xchg
mov
push
mov
sbb
push
call
and
mov
outsb
mov
cmp
aam
jmp
sbb
lcall
mov
enter
jns
jae
mov
mov
aas
add
pop
xchg
adcb
fcomps
lea
or
je
test
js
sbb
orl
std
jp
lds
xchg
leave
pop
cmpsl
fdivl
cmp
inc
inc
andl
add
cmp
stos
mov
xor
mov
sbb
pop
pop
or
jne
daa
jmp
imul
push
out
add
popf
cmpsl
sbb
jne
ret
jnp
adc
dec
xchg
mov
xor
je
pop
lods
lahf
jle
cmpsb
add
icebp
test
add
sub
nop
xor
sub
xchg
inc
sub
int
inc
add
movsb
lcall
or
sti
sub
inc
sub
push
scas
lahf
out
outsb
aas
sub
mov
pop
and
jmp
repz
mov
sbb
sti
jg
std
popa
xor
cld
cmp
and
push
add
mov
push
sbb
xlat
mov
out
push
pop
add
adc
dec
mov
out
lret
push
insb
xchg
xchg
sbb
loopne
xchg
fsubrp
out
ds
mul
xchg
cmp
inc
sbb
push
loopne
aaa
xlat
jle
pop
and
popl
stc
or
testl
js
sbb
mov
popf
sub
fbstp
nop
inc
pop
mov
xlat
xor
icebp
stc
inc
mov
ss
fwait
sub
rcll
addr16
lret
stos
and
jle
arpl
xlat
lcall
mov
rcrl
mov
and
aam
adc
cmp
fisttpl
gs
in
aad
adc
pop
sub
test
repnz
jp
jle,pn
lods
push
fnsave
fs
pusha
jb
mov
jno
imul
fistps
jl
jmp
dec
sub
jecxz
sbb
xlat
or
cmp
mov
jg
cld
adc
mov
das
dec
outsl
in
loopne
stos
int
mov
out
inc
sub
push
data16
mov
mov
iret
jns
and
outsb
jns
xor
cmpl
mov
pop
mull
lahf
sbb
xchg
out
mov
pop
jne
loop
adc
enter
repz
and
xor
sub
dec
jp
rcrb
pop
aas
stos
std
int
in
fistpll
dec
xchg
cli
cmp
aaa
xchg
push
mov
imul
das
pop
hlt
in
xor
roll
mov
dec
add
ja
imul
rolb
imul
and
popa
pop
repnz
and
mov
mov
mov
stos
pop
aas
test
mov
imul
cmp
rorl
and
aaa
enter
push
and
out
out
mov
insl
pusha
leave
outsb
mov
add
addr16
adc
jg
dec
mov
inc
popf
jbe
cmc
cmc
xchg
sbbl
insl
or
push
push
push
int
cmp
mov
rcl
add
call
lock
cld
jg
mov
ret
mov
popf
addr16
and
and
add
loopne
sbb
gs
push
mov
mov
dec
jo
jb
pop
or
jmp
mov
mov
xchg
xchg
aad
outsl
movsl
rclb
adc
add
and
add
xchg
fdivs
pusha
pop
pop
stos
sbb
movsl
gs
js
mov
mov
inc
mov
push
add
dec
mov
dec
loope
or
xlat
ret
pop
pop
mov
jne
pusha
xchg
icebp
fnsave
mov
mov
dec
or
jne
push
mov
mov
addr16
cmp
sub
lret
shll
push
jb
ror
scas
addl
lcall
xchg
andl
fld
dec
cltd
nop
icebp
cmp
mov
je
sahf
cmp
les
addr16
or
mov
xor
fcmovu
mov
in
pop
aad
push
dec
cmp
jmp
sbb
mov
add
jno
repz
pop
and
cmpb
out
lods
fmul
in
cmp
push
neg
cmp
fs
adc
sub
ds
pop
mov
dec
cmpsb
pop
repz
push
xlat
test
pop
loope
xchg
insb
sub
push
iret
mov
daa
js
fs
in
nop
not
rclb
ds
add
add
xlat
cltd
mov
out
sbb
icebp
cmpsl
or
xor
dec
mov
std
xor
fsubs
sub
xchg
jl
mov
pslld
inc
jmp
mov
mov
sahf
inc
dec
and
cwtl
lea
xchg
out
test
mov
iret
mov
push
jae
jp
xor
xlat
jl
pop
adc
inc
out
cmp
push
inc
cmp
ror
rorb
iret
addb
sub
pop
pop
cmp
es
pop
movsl
and
pop
cld
jp
jl
dec
les
and
fcompl
loope
or
out
pop
inc
repnz
inc
lret
mov
mov
test
mov
stos
push
repnz
sbb
es
cltd
or
in
xor
fadd
sub
insb
les
in
int3
adc
pop
outsb
xchg
cmpsb
repz
push
adc
cmp
mov
shll
sub
xor
mov
fucomip
mov
or
cmpsb
adc
pop
jl
adc
ret
imul
shll
enter
out
in
std
notl
leave
adc
push
cli
call
int
scas
or
popf
and
aas
mov
jl
xor
lret
sbb
push
subb
xor
ljmp
pop
xor
pop
sub
inc
sub
aad
cmpsb
mov
adc
addr16
cmpsl
call
adc
in
mov
sub
imul
out
pop
leave
dec
sbb
push
mov
aas
ss
mov
jae
gs
and
stos
lret
lods
pop
jo
daa
subb
sbb
and
sbb
sar
movsb
mov
add
cld
fcmovbe
sub
adc
std
out
and
dec
sub
cmp
out
fbstp
aaa
xchg
and
push
mov
dec
outsb
in
xor
repz
js
mov
sub
xchg
adc
or
cmp
mov
or
sbb
pop
inc
iret
mov
jecxz
sbb
dec
sbb
mov
mov
pusha
push
test
pop
jecxz
sub
bswap
push
mov
mov
movsl
addr16
mov
out
inc
xchg
cmp
mov
mov
add
lcall
xchg
xor
imul
mov
in
dec
add
jecxz
push
into
cmc
xchg
and
scas
aaa
mov
mov
sub
shr
hlt
in
jns
lcall
inc
and
cld
add
and
ret
push
test
addr16
sbbl
mov
cmp
stos
inc
push
flds
in
pop
mov
popl
int
or
and
lock
sbb
test
scas
pushf
ljmp
xchg
shrl
jecxz
mov
and
mov
mov
sbb
add
or
mov
stc
ss
mov
das
ret
xchg
inc
outsl
pop
dec
cltd
pop
rcll
pop
shll
hlt
nop
loopne
es
lret
in
data16
inc
mov
inc
ret
lods
dec
sub
pop
mov
fildll
sarl
sbb
test
repnz
and
lret
inc
in
xchg
test
mov
adc
sarl
das
pop
shlb
call
mov
dec
addb
arpl
push
cmp
jno
es
aam
ss
xlat
sub
mov
cmp
sbbl
sahf
add
out
mov
js
movsb
test
and
sub
sub
dec
icebp
and
ja
and
fsub
add
lret
clc
xchg
sub
add
sub
cmp
popa
dec
unpckhps
out
push
and
gs
dec
setge
xchg
notl
inc
adc
inc
test
mov
jns
sub
sbb
ret
sbb
outsl
add
sbb
mov
je
sub
sbb
out
jb
arpl
pop
sbb
add
push
popf
stos
jecxz
cli
push
and
jle
inc
adc
cltd
xchg
xchg
mov
scas
push
cs
and
mov
fistl
sbb
std
in
lods
lret
aas
in
pop
cltd
cmp
filds
sbb
jne
pop
sbbb
mov
mov
pop
out
loopne
sbb
popa
es
mov
push
dec
or
shl
mov
push
dec
mov
sub
pop
jge
loopne
sbb
and
fldl2t
inc
adc
ret
inc
std
cmc
pop
popa
jge
loopne
add
mov
sub
mov
mov
fadds
mov
adc
int
or
dec
fsubrs
out
cmp
fcompl
ror
adc
lcall
sub
jbe
out
pop
or
popa
lret
pop
inc
lods
adc
nop
cwtl
fwait
fwait
inc
sbbl
punpckhbw
les
mov
mov
jge
movsb
dec
mov
push
and
jae
sarb
lret
pop
leave
mov
pop
mov
mov
cld
fstpt
lahf
cmp
js
pop
fdivrs
xchg
addr16
in
sti
or
adc
je
xor
xor
fisubl
shl
lcall
mov
mov
sub
aaa
scas
outsb
test
ljmp
jmp
pop
insb
fldenv
shlb
cmp
jmp
test
les
mov
pop
mov
and
add
outsb
imul
pusha
andb
daa
insb
and
test
test
lods
lock
sub
xchg
xor
mov
aam
mov
push
mov
mov
xchg
xchg
pop
pop
add
push
push
adc
dec
push
in
push
adc
je
insl
push
test
cmp
mov
insl
add
mov
adc
aaa
popa
imul
rol
cltd
es
mov
dec
sbb
pop
arpl
sub
dec
jnp
pop
and
sti
add
scas
cmpsb
and
push
xchg
sub
insl
mov
arpl
mov
mov
push
sbb
jnp
or
jae
fbld
add
pushf
fisubs
mov
fcomi
rolb
add
adc
pop
cld
cmp
and
adc
push
adc
mov
sub
inc
jecxz
dec
les
std
xchg
jle
pop
cltd
mov
dec
mul
xchg
lcall
daa
inc
pop
stc
jle
cmp
in
mov
sbb
dec
inc
or
inc
mov
dec
add
push
in
mov
aam
mov
ja
stos
and
fcoml
dec
push
sbbl
fisttpll
scas
inc
in
hlt
jnp
add
fstpt
xchg
jecxz
cwtl
cltd
jnp
mov
or
dec
idivl
sbb
fldenv
repz
dec
mov
aam
dec
sti
jbe
aad
test
mov
lahf
cmp
inc
rorb
fisubs
jg
aad
or
jl
or
mov
add
insl
arpl
and
sbb
push
lret
mov
es
jl
pop
xchg
int3
dec
daa
test
data16
loopne
sarb
test
xor
ds
cmp
repz
xchg
jl
nop
std
xchg
sbb
ficompl
data16
inc
jb
cmpb
in
fistpl
inc
rolb
std
jecxz
fsubr
jo
lahf
cmpb
daa
mov
mov
mov
adc
add
push
inc
cld
dec
cmp
or
dec
hlt
pop
push
inc
aad
scas
adc
sbb
xchg
jmp
out
and
scas
loope
sti
fimuls
xlat
and
mov
movsl
sub
sahf
aam
inc
or
fsubrl
push
cmp
test
xor
clc
data16
xchg
sub
xor
sarb
out
jecxz
rcrl
dec
test
and
jg
sbb
xchg
mov
outsl
cs
dec
mov
testl
mov
jbe
sarb
sbb
mov
pop
test
adc
das
push
es
mov
pushf
xchg
test
mov
cmp
call
sub
pop
imul
sub
mov
scas
cltd
stc
icebp
loopne
sub
and
popa
cmp
scas
adc
sub
or
xchg
push
insl
lods
xor
jl
mov
arpl
xor
jp
out
jle
sub
inc
adc
into
stos
mov
push
pop
or
dec
nop
iret
add
inc
shlb
movsl
aaa
mov
add
leave
mov
add
in
mov
in
into
fwait
out
push
arpl
pop
adc
dec
shr
dec
xor
inc
negl
xchg
movsl
mov
jns
insl
inc
mov
cmpsb
adc
sub
test
repz
or
jecxz
pop
xchg
xchg
pop
inc
lods
mov
stc
lods
xor
xchg
dec
and
fnstsw
sub
aad
jo
sarb
or
xlat
sbb
test
dec
or
sub
adc
xlat
inc
loopne
or
test
xchg
je
imul
and
es
fisubl
inc
divl
fdivrp
cmp
or
ret
leave
stos
stos
xchg
aas
shl
xchg
das
dec
and
mov
nop
pop
cmp
mov
mov
add
mov
and
add
sbb
lods
arpl
add
cmp
pop
add
clc
jp
negl
hlt
fnstenv
in
adc
add
inc
ss
add
test
pop
ljmp
add
lahf
and
push
mov
cmpsb
lds
adc
jb
mov
jo
dec
hlt
insb
inc
fnsave
push
push
das
mov
xchg
mov
stos
fcmovbe
jno
xor
mov
jb
movsb
test
insb
mov
sub
inc
xor
push
cmp
loop
bound
clc
push
jo
in
js
lds
test
inc
push
mov
mov
adc
xlat
rolb
jp
pusha
fbstp
fadd
inc
in
daa
add
pop
xor
pushf
repnz
les
push
mov
inc
insl
fdivl
lea
xchg
mov
mov
cld
imul
and
or
outsl
jae
cmpsl
xor
cli
mov
push
sbb
lcall
ret
jae
outsb
lock
sub
mov
xchg
sub
pop
mul
sbb
push
cmp
pusha
test
sbb
aad
ljmp
pop
push
or
sbb
jae
fldcw
lds
iret
jp
pop
fistpll
inc
ret
stos
bound
xchg
popf
movsl
add
sub
xchg
jle
jbe
pop
inc
out
enter
scas
and
jo
fwait
pop
leave
scas
pop
pop
sbb
js
inc
or
inc
push
or
nop
test
inc
xchg
xchg
notb
pop
loope
repz
cmp
out
shrl
adcl
or
into
aas
inc
std
cmp
pop
inc
jle
push
mov
pusha
out
sbb
sbb
pop
push
out
adc
mov
lock
lret
mov
imul
hlt
mov
enter
scas
xor
int
lods
pop
test
sar
fnstcw
loope
push
dec
int3
pop
pshufw
adc
ret
mov
mov
pop
xor
xor
jno
leave
dec
xor
or
in
je
fiaddl
or
je
rol
dec
and
xor
lea
push
pop
or
cwtl
pop
fs
add
pop
and
int
mov
sbb
jg
pusha
pop
outsl
enter
dec
add
and
movsl
xchg
sub
std
xchg
mov
pop
xor
shlb
cmp
push
mov
adc
clc
mov
sbb
aas
mov
lock
add
adc
xor
sbb
push
pop
pop
pop
out
cltd
adc
pop
cmpsb
sub
xor
jecxz
loop
fisttpl
movsb
pop
rorb
cmp
sub
fildll
pusha
and
popf
shr
out
jge
fcomp
mov
xchg
hlt
mov
jno
mov
pop
stos
inc
testb
mov
push
cmp
korw
jg
pop
jp
aam
dec
test
cltd
cmc
mov
push
jno
test
pushf
out
mov
ret
out
add
sti
cmp
icebp
mov
xor
and
dec
add
movsl
jns
mov
lret
aad
mov
jnp
addr16
into
sub
push
xlat
scas
loopne
jnp
aam
push
cmp
outsl
in
leave
mov
cmp
jbe
mov
and
shrl
sub
in
bound
pop
dec
test
push
inc
pop
dec
stc
pop
jl
pop
out
sub
xchg
cmp
daa
and
imul
popf
inc
push
das
jno
mov
std
jns
jne
repz
lret
push
pop
addl
xor
das
dec
inc
mov
in
aam
in
lea
push
xchg
in
cltd
imul
scas
test
push
in
repnz
clc
mov
aad
out
mov
sub
xchg
mov
shlb
cmp
pop
mov
sti
gs
jge
mov
stos
leave
icebp
mov
xlat
mov
jne
lahf
push
repz
push
jb
repz
jl
xchg
fstpt
cmp
mov
inc
movsl
xchg
sbb
sub
cli
inc
xchg
xor
mov
sarb
or
ret
faddl
popf
dec
fidivrs
pusha
dec
sbbb
into
enter
stc
jmp
jb
cmp
push
repz
jb
test
xor
inc
sub
mov
or
loope
movsl
xorb
lods
xor
push
mov
movb
and
mov
sbb
addr16
fcmovu
push
das
loope
sub
sarl
dec
xchg
into
fwait
push
sbb
inc
jp
inc
cmp
fistpll
fcmove
lock
mov
fisubrs
xor
pop
dec
sbb
adc
test
leave
push
sbb
pop
retw
sbb
xchg
xor
lahf
fwait
adc
push
push
hlt
int
repz
cmp
jge
ja
test
adc
aad
mov
or
pop
jecxz
push
mov
push
stos
cmp
dec
inc
pop
sti
xorl
add
sub
in
jno
repnz
mov
repnz
icebp
jo
sub
add
ljmp
int3
jne
and
adc
jp
mov
dec
inc
adc
jb
mov
fwait
scas
push
mov
sbb
jns
fwait
sbb
mov
or
loope
push
leave
push
mov
repnz
test
jne
mov
es
adc
cld
test
mov
lret
outsb
sarb
mov
ret
mov
sub
cmp
stos
aam
call
movsl
dec
call
adc
add
and
push
sarb
cmp
fwait
cmpsl
mov
jno
cltd
jmp
or
or
sub
dec
aaa
sub
or
adcl
mov
jl
leave
loope
xchg
out
xor
fs
es
push
negb
mov
sbb
mov
int
lret
fstpt
es
rol
mov
adc
sti
nop
dec
mov
push
cmc
mov
test
outsb
mov
add
icebp
inc
loopne
getsec
std
fwait
dec
jnp
sub
inc
out
mov
mov
stos
pop
xchg
aaa
pop
test
mov
addr16
ja
sbb
pop
scas
sbb
mov
xor
nop
cltd
rorb
jmp
test
cld
stc
scas
popa
lds
or
ja
add
pop
dec
inc
int
adc
test
push
daa
or
ss
fidivrl
pop
int3
addr16
sbb
cmp
push
cwtl
loop
pusha
add
sbb
cmp
fmuls
inc
mov
inc
imul
loope
icebp
xchg
pop
mov
cltd
cmpsb
nop
inc
popa
mov
mov
mov
push
outsb
popf
daa
xor
roll
lret
push
pop
jbe
in
adc
pop
push
out
adc
lock
pusha
int3
test
cmp
push
xchg
inc
pop
test
in
icebp
mov
subl
out
outsl
push
xchg
mov
sub
pop
jnp
cmp
dec
jmp
stc
xchg
cld
push
nop
jae
sahf
outsl
loope
addl
aam
cs
inc
jle
retw
fwait
mov
int3
int3
add
nop
mov
and
hlt
notb
les
cmp
xchg
lret
mov
les
push
sti
fimuls
in
mov
lods
mov
xchg
imul
sbb
cmp
cmpsb
les
das
loopne
mov
lret
sti
das
cmp
inc
hlt
xlat
repz
pop
insl
push
push
mov
ficoml
ficompl
sbb
and
inc
sbb
xor
adc
subb
mov
inc
push
and
push
push
jo
inc
jmp
and
adc
inc
aam
repnz
inc
mov
pusha
or
mov
sub
loopne
adc
jb
mov
sti
jae
mov
mov
loop
inc
push
xor
dec
nop
add
or
pop
sbb
lods
dec
or
fildll
mov
jnp
imul
xchg
mov
jmp
ljmp
xchg
std
xchg
int
aaa
fwait
sti
in
xor
jno
inc
jp
jae
popf
mov
mov
sbb
mov
lods
or
xor
stc
hlt
cltd
mov
lret
sarl
inc
xchg
in
lods
addr16
fistl
scas
jmp
cmp
stos
dec
inc
call
ds
jge
es
clc
adc
ljmp
cmp
adc
loopne
xor
ror
and
pushf
jo
sahf
push
loopne
push
insl
cwtl
loop
leave
sbbl
and
pop
loop
and
out
in
call
or
mov
dec
xchg
push
push
jmp
inc
jp
cmp
push
negl
js
mov
imul
cli
xchg
mov
in
call
iret
jb
sub
xchg
aaa
lahf
mull
jle
dec
xor
js
sbb
iret
int3
sub
add
fs
scas
les
jmp
mov
mov
and
cmpsl
xor
icebp
sbb
cmp
imul
mov
inc
sbbl
fs
pusha
jecxz
fdivrs
pop
cmp
ss
or
loope
dec
enter
pop
loope
fisttpl
mov
aad
pop
mov
pushf
test
pop
test
jle
lods
jbe
jns
push
movsb
adc
xchg
push
mov
imul
sub
sbb
jecxz
mov
dec
jmp
cs
push
repz
loopne
cli
out
scas
xchg
add
insl
inc
arpl
imul
sub
leave
frstor
dec
jg
jb
cli
les
daa
push
push
and
and
scas
ja
fidivrs
dec
adc
enter
and
aas
rorl
rclb
jno
cmp
lret
outsl
pop
stos
cmp
loopne
scas
roll
dec
loopne
std
stos
jnp
clc
jne
cmp
daa
cmp
adc
scas
repnz
hlt
mov
mov
out
adc
mov
popf
cltd
xchg
std
lret
nop
popa
leave
xor
das
fcmovnu
call
sub
aas
inc
pop
mov
and
repnz
sbb
test
outsl
out
push
ror
push
jmp
subb
rolb
inc
xchg
insb
divl
push
fisubrl
repnz
and
aad
jcxz
push
iret
cli
fsubs
push
xor
or
out
call
xchg
mov
push
fcmovnbe
lret
dec
js
sub
leave
iret
mov
jg
movsl
es
xor
inc
movsl
mov
sub
pop
bnd
jnp
loopne
mov
push
cmp
lock
rorb
loope
rcr
data16
xor
or
in
mov
sbb
mov
jp
inc
add
push
shl
pop
movsl
mov
pop
flds
adc
xchg
out
add
popa
rcr
pop
fwait
in
rorb
add
bound
and
cmp
push
jo
aad
xchg
mov
xlat
xchg
adc
ljmp
sbb
daa
popa
sub
push
inc
test
daa
push
cmp
jae
bound
lcall
and
lds
cs
scas
and
sbb
inc
and
push
pop
xchg
mov
test
mov
nop
mull
cmp
pushf
mov
iret
mov
data16
shl
icebp
xor
cmp
pushf
sbb
lock
mov
popa
std
mov
aaa
rcrl
arpl
or
dec
orb
jp
shrb
in
in
pop
cs
push
or
jg
xchg
xor
int
arpl
cmp
insl
or
incb
repz
xchg
xor
push
cmp
cmp
repnz
xchg
fsts
rcrb
scas
lcall
and
movsl
xor
jnp
hlt
lds
sbb
sbb
and
add
out
add
daa
cmpsb
pop
inc
sub
lea
or
pop
jb
mov
push
cmp
adc
popf
and
std
cmpl
add
loopne
dec
mov
xchg
mov
mov
add
pop
adc
jbe
cmp
mov
shlb
mov
push
push
ficoml
dec
leave
cmp
sub
or
fildll
mov
push
jp
add
aaa
cli
xbegin
mov
loope
mov
lods
inc
or
mov
xchg
xchg
andl
cs
inc
cmp
ficoms
je
aaa
mov
mov
xor
add
notb
clc
add
imul
gs
sbb
repnz
push
ret
or
cmc
mov
xchg
scas
das
daa
pop
mov
mov
lahf
mov
sti
clc
mov
mov
add
ucomiss
in
xor
iret
mov
and
cmc
jg
inc
loope
xchg
inc
into
in
imul
or
dec
das
fimull
shl
movsb
insl
std
fwait
pop
mov
jns
xchg
pop
outsb
gs
push
in
lods
inc
mov
or
enter
jmp
in
mov
gs
aaa
stos
imul
mov
popf
add
sub
lds
shl
mov
xchg
push
ror
insb
rorl
add
dec
push
pusha
js
cwtl
repnz
xor
push
test
out
cli
loope
xor
aam
aaa
push
xor
outsb
fs
testl
les
sub
sub
repnz
xorb
inc
xlat
adc
xlat
aas
sbb
push
shrb
lock
ljmp
push
in
movsb
idivl
fwait
pop
addr16
xorb
scas
jno
out
dec
idivl
cmp
mov
push
sbb
mov
xchg
gs
sub
and
mov
loope
mov
push
cli
jmp
add
cmp
sbbl
int3
or
out
xor
movsl
pop
pop
xor
inc
stos
sbb
idivl
xor
mov
and
inc
push
mov
push
fstpl
jecxz
inc
mov
adc
test
adc
call
push
xor
and
call
popf
mov
xor
mov
inc
adc
fadds
dec
pop
jl
lds
adc
repnz
data16
popa
clc
inc
jmp
adc
sub
push
dec
testb
insb
movsl
jb
adc
inc
fs
nop
bound
sub
lea
inc
out
sbb
mov
mov
cs
xchg
stc
adc
cmp
test
fnstcw
sbb
push
out
pop
pushl
xchg
sbb
push
je
mov
sbbl
cwtl
jo
push
movsb
cwtl
movsl
and
into
addl
je
mov
insl
lea
sbb
pop
dec
adc
mov
clc
pop
fcomip
imul
aam
sub
lret
xor
cmpsb
das
cmpl
cmpsb
cmp
cwtl
in
push
cld
push
dec
xorl
andl
cwtl
fmuls
in
pusha
sahf
addr16
nop
fs
jae
arpl
das
push
mov
sub
jmp
cltd
sub
jbe
cs
enter
jle
fabs
cmc
loope
mov
ret
sbb
or
icebp
push
addr16
or
pop
push
scas
pop
out
pop
test
and
sub
mov
fcoms
aas
jp
test
gs
stos
push
mov
push
test
xchg
push
cmpsb
xor
fbstp
add
pop
push
icebp
cld
add
outsb
cmp
mov
push
popa
int3
mov
sbb
mov
push
dec
mov
adc
insl
inc
mov
js
and
mov
mov
lcall
mov
or
mov
or
mov
pop
sub
mov
add
cld
jno
out
ds
inc
sub
mov
jo
into
in
jne
dec
cltd
pop
xchg
and
fadds
sub
cmp
std
shll
sbb
jo
or
filds
popa
cmp
pop
insl
inc
mov
pop
inc
int3
cmp
push
mov
loopne
jno
pop
mov
xchg
inc
jbe
push
lds
jnp,pt
jo
cmp
stos
test
cmp
inc
dec
ficoml
pop
inc
pop
dec
xchg
mov
popa
lods
aaa
popf
movsb
mov
mull
mov
in
leave
push
stc
add
pop
inc
and
scas
pavgw
jns
out
push
lcall
cmp
mov
cmp
xchg
add
setle
mov
stos
dec
jnp
inc
hlt
xchg
fisubrs
mov
pop
mov
and
fdiv
inc
out
jnp
pop
lcall
ss
in
or
in
popf
pop
arpl
lods
ret
sub
xlat
jnp
mov
xchg
fwait
cmp
lahf
xlat
loop
push
imul
pushf
aas
enter
ret
stos
cmp
push
xchg
pop
xchg
cmp
inc
xchg
aad
jno
imul
sti
xor
pop
lret
mov
mov
xor
test
lcall
jmp
inc
and
test
cmp
rclb
mov
rorb
enter
xor
lcall
inc
pop
cmc
in
stos
int
xchg
push
push
sub
dec
or
cmc
mov
pop
bound
shrl
nop
and
std
mov
sarb
inc
adc
mov
adc
sbb
adc
cmc
mov
jns
xchg
jge
mov
inc
fs
imul
js
sub
xchg
ficomps
xor
jmp
mov
jnp
mov
in
int3
xchg
dec
dec
sbb
xchg
and
inc
mov
mov
xorl
std
push
adc
dec
xchg
and
mov
inc
mov
mov
lcall
cmp
outsb
hlt
in
pop
lea
inc
cmp
pop
dec
popf
jge
add
mov
and
push
std
ret
sub
leave
les
pop
iret
adc
push
pop
in
loope
lea
fdivrs
ficompl
lock
rorl
enter
sbb
aad
decl
pop
mov
xchg
mov
lods
xlat
cmpsb
ljmp
push
cmpsb
mov
mov
enter
fs
and
dec
sub
push
out
aad
pop
dec
mov
jg
cli
cmp
jecxz
push
add
mov
jecxz
jl
int
incb
xchg
lock
jbe
lret
inc
je
or
add
nop
call
mov
pop
mov
fcomps
cmp
lock
sbb
iret
loope
sub
xor
or
bound
jns
stos
or
outsl
xlat
mov
xlat
xchg
dec
cmp
cmpsb
lea
sbb
cmc
ret
mov
sub
xchg
mov
push
popa
outsb
lods
xchg
dec
lret
inc
xchg
data16
adcl
inc
repnz
movsb
aad
mov
dec
and
push
mov
mov
sbb
and
mov
mov
loopne
mov
out
cmp
in
xchg
pop
in
ja
cmp
outsb
xor
lcall
push
shrb
daa
mov
mov
ljmp
pop
jns
add
push
fisttpll
or
sbb
fnsave
pop
push
jbe
jg
jbe
les
mov
pop
or
ret
fldt
sarl
and
mov
and
out
lods
inc
cs
mov
mov
lret
mov
enter
adc
pop
jbe
adc
jp
sbb
lock
lods
mov
inc
divb
mov
call
iret
push
xorl
xchg
fdivrs
or
aas
sub
sbb
in
or
mov
sti
mov
push
notl
and
pop
popa
in
lret
add
xchg
mov
mov
inc
push
inc
in
sbb
and
pop
mov
out
hlt
int
lret
out
psubusb
mov
inc
shl
clc
sti
scas
sub
xlat
mov
and
repnz
cld
adc
sbb
mov
cli
xor
idiv
cld
pop
jl
push
pop
and
adc
int
arpl
test
cmp
fs
mov
iret
lahf
ljmp
mov
fwait
lcall
or
pop
cwtl
jge
jno
shr
inc
fwait
into
jmp
adc
cmpsb
jne
jl
add
inc
sbb
mov
pop
sahf
pushf
xchg
xlat
cmp
enter
sbb
fmuls
fmul
pop
push
jl
xchg
or
out
out
xor
xor
movsl
imulb
test
jmp
xchg
sub
push
or
jmp
mov
popa
mov
adc
mov
es
sbb
or
es
sbb
std
add
mov
jmp
out
mov
lods
scas
jg
andb
fisttpl
inc
mov
int
cmpsb
pop
mov
aam
iret
adc
mov
and
dec
pop
aad
mov
and
cmp
repz
push
sbb
cmpl
pusha
fcompl
enter
movsl
lods
sub
cmp
scas
mov
pusha
test
xchg
sub
mov
inc
pop
mov
xchg
inc
mov
stos
call
inc
adc
jp
add
jg
and
adc
aaa
mov
testb
pop
shl
pop
ds
jg
mov
sahf
mov
cmp
push
outsl
dec
sub
jnp
mov
jmp
rolb
test
insl
cmpsb
push
fimull
out
dec
popa
sti
pusha
dec
cmpsl
sub
fs
adc
rcrb
pop
pusha
cmp
dec
psadbw
sub
scas
dec
push
rcrb
mov
stos
jb
xchg
add
xor
repnz
inc
adc
push
out
ja
xlat
insl
mov
xor
leave
ret
shll
mov
clc
sub
pop
sarb
push
sub
dec
jmp
bound
jae
push
xchg
gs
mov
mov
scas
lods
push
mov
jnp,pt
mov
jnp
push
in
xchg
and
push
mov
push
pop
iret
xchg
mov
xchg
sub
inc
cmp
sub
add
or
enter
and
in
rcrl
sbb
outsb
adc
fidivs
enter
bound
or
mov
and
arpl
dec
xchg
push
test
cmp
cmp
mov
jae
mov
mov
xor
jle
inc
dec
popa
inc
inc
mov
cmpsl
mov
cmp
movb
mov
xor
lock
or
lret
sub
xlat
xor
ss
ret
adc
mov
mov
cwtl
nop
enter
jne
aam
inc
sbb
xchg
fisttps
inc
xchg
insb
pop
or
xor
insl
enter
call
mov
into
cwtl
dec
xor
mov
in
jecxz
cwtl
cwtl
push
lret
test
inc
les
mov
and
adc
push
xchg
fnstenv
xchg
adc
test
loope
mov
xor
enter
lods
loopne
aas
push
hlt
mov
adc
orb
pusha
in
aam
roll
frstor
pop
cmpsb
jecxz
dec
rcrl
mov
adc
in
test
es
fsub
xor
repnz
mov
insl
in
gs
or
cmp
lods
iret
stos
leave
lods
pop
push
mov
mov
xchg
das
jmp
ds
and
jno
mov
adc
sub
popa
idiv
jge
jno
dec
mull
add
loope
inc
xor
cmp
dec
leave
int
sahf
outsl
cmp
cmp
adc
jp
push
mov
push
test
imul
mov
fwait
push
adc
push
add
ljmp
mov
cmp
xor
arpl
or
pop
mov
cltd
mov
adc
push
cmpsb
xchg
dec
jb
outsl
dec
mov
mov
cltd
xchg
mov
sub
mov
outsb
mov
push
sub
test
mov
xchg
sarl
cltd
mov
fisubs
popa
int3
and
shlb
out
mov
xor
push
add
in
cmpsb
or
sbb
sbb
pop
mov
movl
sbb
addr16
nop
xchg
iret
push
xor
negl
mov
insb
xor
sub
into
xor
dec
or
je
sub
cld
and
xor
dec
lahf
add
scas
movsb
jg
in
je
inc
pop
xchg
aaa
in
mov
xchg
fisubrl
push
mov
mul
and
mov
and
fs
jmp
inc
cld
xchg
push
ja
lret
adc
out
scas
data16
sbb
pop
mov
inc
out
lret
jg
sahf
add
jo
pop
xor
loopne
sahf
jle
rclb
push
cld
movsb
loopne
in
invlpg
lods
push
aaa
mov
lret
add
jmp
pop
test
test
lods
mov
mov
in
orl
sbb
arpl
cmp
movsb
repz
pop
or
dec
popa
and
push
in
testb
scas
mov
hlt
out
and
sub
cmpsl
and
fists
popa
sahf
pop
mov
adc
or
fnstcw
and
pop
rorb
popf
or
mov
mov
xor
mov
pop
mov
test
lds
movsl
pop
imul
test
ret
pop
dec
push
int
xchg
lods
bound
pop
into
push
mov
ss
xchg
add
sub
dec
cmp
lds
std
cmp
mov
outsl
bnd
cmp
pop
fsubrl
scas
fsubrl
sub
adc
movsb
mov
ljmp
lods
in
roll
lret
push
xor
or
lret
pop
add
jnp
lret
push
cmp
mov
sti
andl
xor
pop
call
inc
push
aad
push
sub
lock
scas
mov
inc
pop
ret
dec
mov
pusha
and
not
mov
lahf
push
push
cmp
inc
in
xchg
bound
and
pop
clc
mov
aaa
stc
js
lahf
pop
sbb
mov
fprem
cmp
cltd
sub
nop
mulb
and
add
pop
mov
inc
push
add
cmp
hlt
mov
and
sub
mov
jns
adc
sub
aaa
pusha
ret
or
inc
inc
or
inc
mov
mov
adc
stos
mov
leave
out
pop
loope
push
add
int3
or
mov
or
inc
mov
inc
inc
into
mov
jbe
leave
outsl
sub
adc
push
dec
ret
lods
and
call
pop
fmuls
fnstcw
xor
xor
out
inc
out
push
mov
in
rcrb
dec
xchg
ds
jb
sub
stos
adc
popf
pop
xlat
aad
or
sti
aam
stos
aas
xor
repz
es
push
jge
jp
pushf
scas
scas
cs
stos
ja
out
mov
push
pop
jge
pop
xchg
mov
scas
fsubr
nop
rol
sub
das
rolb
jp
or
int3
stos
jnp
rolw
add
pop
rcr
inc
dec
or
xchg
pop
mov
xchg
mul
inc
push
ds
mov
dec
or
sub
loop
outsb
pop
lds
mov
and
jns
pop
push
aam
gs
jb
stos
in
or
dec
in
dec
pop
and
jle
lods
sub
inc
or
or
cmp
push
or
push
mov
inc
xchg
lds
pop
insl
mov
repnz
pushf
lods
sbb
mov
outsb
arpl
lods
popa
aam
mov
add
pop
out
dec
xlat
push
insb
mov
inc
mov
xchg
or
je
inc
mov
stos
or
imul
call
push
popf
icebp
and
into
jp
xchg
sub
bound
push
ret
fcoml
fcoml
sub
test
sub
bound
inc
ss
fs
pop
xchg
mov
pop
mov
stc
xor
je
dec
es
mov
es
fsubl
pop
stos
testl
mov
outsb
jnp
leave
push
jle
int3
lcall
daa
mov
fwait
sub
push
sub
xorl
xchg
jmp
enter
dec
cmp
push
pop
in
dec
dec
pop
xchg
sbb
dec
xor
cmp
xor
mov
xchg
adc
aaa
out
dec
push
loop,pt
xchg
scas
arpl
xchg
int
add
cltd
pop
cltd
push
arpl
sbb
cmp
and
enter
fadd
xlat
outsl
scas
push
mov
out
and
lods
iret
add
inc
dec
jb
inc
scas
jbe
add
pop
jge,pn
arpl
mov
pop
cmc
pushf
or
xchg
push
loopne
jns
in
imul
inc
pop
add
and
ret
sub
xchg
mov
int3
or
sub
sub
jle
cld
lea
loop
xchg
dec
and
lret
das
std
mov
cmpsb
pusha
jge
into
sub
or
add
mov
loope
jl
xor
int3
mov
inc
fs
pop
or
fstpl
add
inc
cmp
fs
insb
jae
roll
loopne
cmpsb
rclb
xchg
jge
or
mov
pusha
in
hlt
xor
dec
sti
fidivs
shlb
xchg
sar
inc
mov
cwtl
adc
push
or
insl
mov
test
fisubrl
add
out
push
pop
lds
cmp
sar
loopne
loop
in
fwait
shll
jl
adc
popa
test
mov
shrl
add
in
stc
arpl
jg
xchg
std
sahf
je
ja
aaa
push
dec
or
add
jle
fcmovu
andb
repnz
and
data16
test
fwait
add
pop
xor
jle
push
aaa
mov
mov
dec
mov
adc
sbb
xchg
adc
dec
negl
lods
sub
cld
jg
mov
sub
int
cmpsl
pushf
test
push
repz
lret
enter
mov
je
dec
sbb
mov
dec
pop
in
inc
mov
xlat
lret
mov
in
xchg
leave
lea
lea
mov
lahf
fdivr
in
adc
push
call
mov
loopne
and
idiv
inc
push
pop
lret
lret
xchg
stos
jno
ret
aaa
add
and
xlat
pop
sbb
mov
mov
add
jae,pn
popa
subb
lea
stos
lods
pop
jmp
sarb
jnp
in
leave
dec
sub
jb
mov
xor
and
lret
lods
aas
stc
rcll
lret
xchg
movsl
pop
or
loopne
cmp
hlt
arpl
jle
xchg
shrl
jbe
popl
push
and
imul
mov
scas
lret
adc
or
sbbl
movl
shlb
and
push
movl
push
or
jb
mov
jnp
fadd
fiaddl
xor
fsqrt
rol
lret
jg
or
fwait
adc
and
cli
clc
out
xchg
jecxz
adc
jae
inc
mov
test
push
test
ret
push
mov
cmc
lea
outsb
scas
add
xchg
jle
in
or
xchg
stc
inc
adc
scas
adc
jecxz
sub
cmp
stc
dec
adc
push
mov
sbbl
xor
testl
aad
pop
inc
aad
mov
push
pop
inc
sbb
arpl
dec
cmp
mov
or
repnz
jmp
mov
push
outsb
test
pop
stos
fistpl
cltd
call
int
xor
mov
pop
xchg
cltd
xchg
dec
mov
fdivr
jmp
mov
cmp
into
addr16
sti
lret
mov
mov
jecxz
mov
mov
iret
pop
loopne
mov
mov
cltd
pushf
repnz
ja
jnp
cwtl
test
sub
cmp
xchg
or
out
fcomps
add
fistl
jmp
adcl
or
pushf
jle
mov
cmp
push
loopne
in
jmp
lea
outsb
pushf
push
mov
dec
call
insb
jle
or
ds
xchg
jnp
jecxz
lahf
jo
mov
push
sub
mov
test
cltd
out
pop
call
pop
sub
jge
pusha
pop
popa
mov
or
sahf
test
inc
por
adc
mov
enter
cmp
mov
int3
cli
cmc
cmc
mov
test
fistl
pop
jge
shrb
or
push
jl
aad
sbb
jg
rorl
mov
jne
xor
xchg
out
test
mov
ja
mov
faddl
add
mov
insb
data16
stc
fiaddl
cltd
mov
cmp
in
mov
in
andb
add
je
mov
addr16
aam
pop
mov
pusha
xor
push
and
ret
mov
insb
mov
ljmp
test
js
mov
mov
jle
daa
jo
mov
test
lahf
mov
loopne
stos
out
dec
flds
lds
ss
iret
jae
les
repnz
cmpsl
cmc
push
rcr
into
cmp
push
jae
add
push
xor
shll
inc
xorb
fs
aam
dec
sbbl
adc
or
push
push
mov
mov
xchg
inc
insl
xor
sub
iret
fwait
ss
daa
xlat
pop
jb
lods
mov
fistps
xchg
mov
jp
js
mov
xchg
xor
iret
leave
push
xor
push
mov
ficompl
imul
jbe
jne
xor
fwait
mov
addl
nop
cs
movl
call
push
and
cmp
xor
mov
subb
insb
clc
insl
lock
sbb
stos
push
dec
adc
out
iret
fstl
dec
sahf
pop
mov
std
dec
pusha
mov
xor
cmp
pusha
pop
outsb
jmp
cmpsl
notb
sub
clc
mov
cs
pop
movsb
loop
inc
xchg
enter
push
jb
lcall
jmp
fsubrs
xor
lahf
notl
lcall
cltd
mov
and
cmpsl
push
cmp
jecxz
pop
cmpsl
mov
ret
mov
mov
cmp
adc
jle
and
xor
fisttpll
cmp
xor
inc
shll
data16
mov
push
add
cmp
rorl
push
rorl
das
pcmpeqw
shll
jge
jmp
rcr
mov
fsqrt
mov
repz
or
nop
dec
aad
call
mov
mov
dec
mov
cld
mov
cmp
aaa
lds
rcr
mov
pop
pop
shlb
dec
sbb
mov
lret
jg
xchg
aas
sub
ja
loop
and
hlt
and
ja
lods
shrb
sbb
bound
popa
xor
imul
repnz
push
push
jp
idiv
xor
nop
sarb
xor
loop
and
shr
push
repnz
mov
lahf
and
xor
mov
je
jnp
lea
push
outsl
std
jg
add
fcomps
adc
dec
cmp
fucomip
inc
xchg
cld
push
pop
lret
movsl
push
cmc
scas
jmp
adc
mov
insb
sti
out
xchg
in
lods
mov
pop
in
movsl
mov
jno
xor
mov
xor
add
jmp
push
xchg
xchg
xchg
cmpb
jg
push
nop
arpl
into
aas
inc
lcall
pop
outsl
xlat
insb
outsl
fwait
mov
imul
scas
pop
mov
cmc
cltd
pop
lcall
out
test
fbstp
fucomip
pushf
pop
popa
cmc
cmpsb
xchg
xchg
and
sub
sbb
jg
addr16
std
add
pusha
sbb
push
sbb
insb
clc
cmp
xor
aam
jmp
push
aas
test
mov
nop
fmulp
jb
lcall
jp
jnp
inc
ja
jne
push
jl
imul
sub
pop
shr
mov
out
jmp
imul
adc
int
push
pop
mov
loop
movsl
cmp
mov
mov
xchg
cmp
sub
push
adcb
iret
cmp
hlt
out
jp
sub
insb
int
andb
jle
jns
arpl
cld
fdiv
addr16
into
call
jle
push
lods
nop
pop
hlt
pop
aaa
popf
movsb
jbe
push
dec
shl
cld
inc
cli
shrb
pop
sbbl
out
push
adc
mov
loopne
ja
test
mov
scas
lret
pop
test
inc
iret
mov
add
dec
xor
cmp
stos
mov
pop
rcll
movsb
xor
mov
lret
mov
mov
sahf
orb
push
lret
cmp
outsb
daa
cmp
aad
std
ret
pop
push
mov
xchg
fwait
xor
cmp
lcall
xor
in
xchg
ds
rcrb
mov
xchg
and
iret
lods
mov
cmp
imul
jmp
jns
shrl
xlat
dec
mov
out
fadds
or
js
lds
paddusb
out
orb
popa
and
call
cs
popa
jb
shll
insl
mov
lock
push
stc
aad
fcmovnb
insb
jne
or
jne
movsb
ds
fcmovb
cmp
lret
popf
int
sbb
or
mov
pop
fdivl
push
pop
mov
jne
sub
mov
sar
cli
cltd
jnp
mov
ret
out
inc
cmp
xchg
in
iret
fisttpl
jne
sbbl
enter
iret
sub
mov
push
mov
vpxor
mov
repnz
fsubrp
xchg
fsubs
pop
push
xlat
rol
dec
stos
lahf
jns
sub
jg
fildl
sub
adc
mov
dec
pushf
adc
push
mov
mov
mov
gs
mov
test
ss
cs
ja
fsubrl
xchg
pop
push
add
cmpb
sbb
scas
cmc
ss
pop
dec
pop
jo
jle
and
aad
jge
and
mov
sub
push
and
inc
movsb
inc
sub
sbb
xchg
rcrl
imul
lret
xor
mov
jp
pop
imul
sub
pop
sti
pop
es
sbb
add
sub
lcall
rorl
inc
dec
and
das
push
les
movl
pushf
xchg
sahf
insl
out
cmc
mov
rcll
adc
inc
jp
es
lahf
insl
ret
mov
or
loopne
xchg
test
xchg
fs
sbb
in
inc
pop
push
push
cmp
out
js
sbb
loope
or
lock
repz
fcoml
jecxz
leave
jno
mov
pop
aas
pop
outsl
pop
stc
xor
in
xor
inc
imul
out
xlat
or
add
ds
add
or
lods
mov
xchg
daa
test
xchg
cmc
mov
dec
cmp
jbe
nop
test
xor
jbe
adc
or
loop
xchg
mov
das
dec
fdivr
mov
imul
data16
and
nop
xor
mov
test
insb
loope
mov
out
fs
jae
add
cmpsb
imul
outsl
xchg
lea
lret
lahf
loopne
sub
add
inc
push
call
jp
add
lock
xchg
or
jo
fdivrs
orb
xor
jae
sbb
adc
xor
call
inc
ljmp
shlb
or
add
sahf
push
popa
inc
sahf
cmp
cli
xchg
fimull
mov
cmpsb
jmp
mov
lahf
jmp
push
push
mov
stos
dec
cmpb
les
mov
adc
mov
mov
mov
jnp
aaa
ljmp
mov
aad
rclb
int
fldl
cs
rorb
popf
xor
cltd
jns
sahf
cmp
addr16
mov
cld
test
fucomp
cmpsl
push
cmp
lods
cld
sub
adc
repnz
imul
or
in
lods
mov
inc
and
icebp
mov
mov
or
das
and
test
fldt
lret
adcb
pushf
test
hlt
mov
add
cwtl
sbb
insl
xchg
mov
push
sbb
je
aad
pop
test
inc
cli
pop
dec
in
ficomps
das
push
adc
mov
insb
or
aaa
mov
inc
rorl
adc
xor
fimull
leave
hlt
out
loop
jno
inc
and
pushf
test
orl
rorl
sub
pop
rcll
jno
adc
add
push
push
push
xchg
jl
lret
aam
out
dec
push
adc
push
ljmp
and
sahf
lds
mov
lret
inc
popa
test
mov
negl
jmp
mov
xlat
adc
cs
rorl
outsb
or
jl
fbld
cmp
jge
push
cltd
inc
pop
xchg
jbe
mov
mov
jae
push
ds
mov
dec
je
mov
or
mov
comiss
sub
mov
dec
xchg
test
mov
dec
ret
bound
addr16
ss
sub
dec
dec
imul
push
out
inc
adc
push
inc
pop
scas
call
xorl
pop
jl
jg
cmp
mov
and
stos
sbb
xor
or
lea
and
movsb
bound
push
loop
popw
sahf
repz
mull
dec
inc
insb
pop
dec
xchg
jns
push
insl
hlt
add
fbstp
cmpsb
mov
pop
int
jge
fcomip
lsl
outsb
decl
pop
pop
dec
daa
fildll
mov
adc
push
stc
clc
loop
sahf
sti
popf
je
icebp
jge
out
stos
in
push
push
jmp
pop
mov
in
and
mov
loop
outsl
add
jmp
or
inc
pop
aas
int
aad
mov
push
lahf
loope
cmp
adc
xor
lcall
jb
mov
mov
mov
icebp
inc
dec
inc
pop
out
jnp
pusha
xor
test
dec
inc
or
das
xor
dec
mov
jp
ss
inc
ret
jb
arpl
test
sbb
test
sbb
ljmp
das
lcall
popf
gs
jg
imul
lock
adc
jge
daa
je
subl
call
cli
sbb
test
stos
fbld
pop
push
mov
cmpsb
and
adc
ja
mov
xchg
push
mov
pop
hlt
js
jg
scas
mov
stc
sbbb
xor
pusha
lret
insb
notb
jno
ret
pop
int3
sbb
mov
hlt
std
inc
inc
lahf
sti
or
dec
jne
test
inc
pop
loopne
jns
xchg
xlat
pop
jnp
out
pop
shrl
xor
mov
jle
cld
jmp
icebp
in
adc
fldcw
fwait
pop
and
sti
mov
lret
mov
jb
cmpsl
and
js
movsb
sub
ror
inc
jecxz
fadds
cmp
cmp
iret
sarb
push
xor
ja
faddl
ja
jbe
add
inc
repnz
inc
xor
mov
cmp
fs
mov
loope
push
jge
test
in
sbb
ret
mov
cwtl
push
out
xchg
movsb
lods
imul
aas
mov
out
movl
adc
mov
jns
out
aam
jmp
std
xor
push
cwtl
movsl
mov
hlt
ja
cltd
push
jnp
xor
in
jno
jno
stos
xchg
insb
cmp
daa
fnsave
sahf
sbb
inc
push
sbb
push
mov
pusha
mov
push
stos
mov
push
jo
cmp
cmp
mov
test
sbb
jne
pop
shrl
adc
adc
jbe
jp
pop
lods
rolb
jns
mov
sbb
jo
dec
stos
test
pushf
imul
stos
cmp
cmp
aas
mov
cli
aad
inc
dec
into
pop
add
jno
adc
sahf
faddl
jmp
xchg
outsb
negl
push
and
popa
out
faddl
pop
fucom
pop
push
jbe
scas
fisttpll
add
cmp
sub
add
ja
std
das
sbbb
cmp
dec
rcrl
mov
cld
call
mov
ljmp
sbb
xchg
push
add
ret
mov
add
cmp
ja
mov
push
cltd
stos
pop
cmp
pop
inc
mov
or
imul
fwait
sbb
push
or
xchg
pop
sarb
adcb
and
test
or
ja
sbb
mov
cmp
sbb
das
shl
test
in
movsl
imul
ja
das
test
or
push
cld
fwait
popa
pop
and
out
pop
dec
jbe
mov
fcmovnu
rcll
add
arpl
int
jle
jmp
lcall
mov
mov
mov
and
fldcw
loop
pop
cmpsb
lods
insb
pop
push
xchg
test
inc
mov
fstpl
lods
sbb
in
int
push
add
lds
and
sbb
psrlw
push
add
fs
push
push
dec
lret
push
sub
mov
ljmp
lret
pop
int3
jecxz
out
pop
sbb
lret
pop
adc
mov
outsb
adc
push
push
sti
testl
inc
pop
pop
pop
cmp
mov
pop
mov
jne
gs
push
jmp
dec
jb
test
adc
pusha
ljmp
std
or
xor
je
aas
testl
mov
jbe
inc
mov
mov
mov
jbe
sbb
xor
cmp
cmc
loope
inc
inc
imul
jecxz
xor
sbb
fidivs
mov
jecxz
shlb
jns
std
aaa
shl
fldenv
aaa
stos
addr16
jno
mov
xchg
stos
push
fwait
push
pop
jno
stos
sub
add
jne
jmp
stos
inc
shll
sbb
fsubrs
leave
movswl
fildl
and
pop
xchg
les
cmpsb
jl
mov
aad
lds
push
add
clc
mov
mov
or
insl
daa
sub
mov
mov
imul
repz
loop
into
movsb
mov
in
sub
lret
fldt
sub
lods
outsb
pop
inc
fs
pop
mov
inc
js
cmp
push
xor
pusha
subb
mov
ret
or
inc
popf
mov
mov
fisttpll
leave
pop
outsl
or
and
movsb
aas
mov
inc
push
push
jp
mov
clc
out
push
cwtl
loope
jmp
mov
add
jecxz
add
pop
sbb
mov
dec
pop
dec
xor
ss
sbb
orb
orl
or
xor
lret
outsb
mov
mov
push
pushf
pop
test
push
mov
sub
aaa
hlt
push
ficompl
pop
mov
pop
sbb
and
add
and
mov
or
or
adc
aas
imul
insl
mov
push
xchg
jo
outsb
scas
repnz
jg
sbb
inc
mov
call
or
add
pop
cs
mov
adc
loope
cmp
xlat
mov
imul
cli
lock
sbb
cmpsb
or
in
popa
loopne
test
test
ljmp
test
xor
or
out
std
lods
out
jle
lods
lea
sub
mov
cmp
jecxz
sahf
inc
xor
sbb
push
sub
or
test
fistl
adc
loope
mov
jns
jo
mov
and
push
pop
push
das
and
mov
mov
mov
pop
movsl
stc
or
or
xchg
jmp
push
push
aad
les
mov
mov
cmp
mov
fcoml
sahf
pop
dec
and
add
inc
sub
lret
mov
or
xor
js
scas
loop
mov
xchg
fcoml
mov
sub
inc
aad
and
inc
sarb
je
mov
adc
fadds
cwtl
jb
dec
push
popf
sarl
inc
insb
das
ret
loopne
in
sub
xchg
repnz
push
sub
js
or
xor
arpl
cwtl
imul
jp
test
sbb
pop
in
mov
cmp
icebp
add
call
arpl
jge
sbb
movl
mov
jb
sbb
enter
in
inc
imul
cmp
decb
in
cmc
push
call
xchg
mov
xor
pop
sbb
decb
out
xchg
sub
jecxz
icebp
mov
fnstenv
push
call
cmp
test
or
ja
or
sub
cmc
cltd
dec
dec
sub
pushf
mov
inc
fisttpll
pop
xor
mov
inc
ret
xor
jns
movsl
xor
dec
push
and
cs
int
mov
int
fsubrp
jo
xor
test
in
jg
aam
loope
push
daa
bound
cmp
xchg
xchg
inc
out
push
movsl
out
call
fsubrs
cmp
pop
stc
mov
cmpsb
xchg
dec
dec
ret
arpl
outsb
mov
sub
jl
mov
rolb
stos
dec
ret
or
mov
imul
cs
pusha
fmull
inc
bound
dec
les
add
test
push
add
mov
jb
xlat
in
mov
or
xor
pop
fwait
jp
loopne
shll
test
hlt
test
mov
sbb
lds
inc
int3
push
rorb
or
push
shrd
pop
outsl
fnstsw
imul
inc
xor
call
xor
aad
dec
loop
jmp
dec
add
icebp
push
or
inc
nop
dec
adc
std
xchg
adc
imul
test
push
pop
or
mov
mov
jae
outsl
mov
fimull
loop
or
inc
out
push
push
pop
pop
cmpb
add
pop
push
dec
push
inc
or
xor
sub
lret
push
cli
jmp
in
pop
dec
dec
push
dec
inc
dec
sarl
fwait
sbb
adc
sub
mov
jns
mov
scas
inc
add
sbbl
dec
xchg
or
fcmovne
pop
lea
ss
rcrb
shll
rorl
es
jl
js
push
jle
das
mov
xchg
popa
jmp
insb
mov
mov
mov
dec
int3
int
mov
sub
mov
dec
shr
test
inc
pop
clc
fs
popf
pop
ret
fs
aad
aad
aas
inc
xor
ljmp
xchg
mov
cmp
or
mov
insl
adc
jno
sti
rcl
mov
adc
aaa
cmp
imul
loope
dec
leave
jle
pop
movsb
int
jns
sub
mov
mov
cmp
adc
in
cmpsb
lods
cltd
scas
xchg
push
orb
jo
adc
mov
stos
xor
push
xchg
test
xchg
mov
sub
mov
leave
icebp
cmp
fmulp
repnz
out
test
inc
push
popf
cmc
cmp
das
push
push
loope
popa
pop
ret
jle
cmp
js
fsubl
pop
enter
add
jl
aas
movsl
imul
stos
sbb
push
sub
add
pusha
and
mov
fldt
or
push
jns
bound
jns
mov
les
push
adcb
adc
xor
enter
pusha
out
jb
mov
mov
adc
pop
popw
inc
xlat
push
sub
jp
aaa
std
inc
bound
lock
iret
pop
inc
popa
mov
cltd
mov
push
jnp
mov
fwait
pop
rcrl
push
test
mov
dec
outsl
xchg
xchg
inc
fldenv
bound
clc
mov
cmp
in
shrl
insl
lret
cmpsl
outsl
mov
jmp
adc
lds
jmp
lea
pushl
test
sub
icebp
inc
pop
cwtl
rorb
fld1
int3
lahf
xor
jmp
int
push
xor
popa
mov
rcr
pop
mov
and
sahf
pop
jb
idivl
push
cmp
scas
adc
call
adc
dec
xchg
xchg
daa
aas
fsts
ret
push
ss
pop
pop
fwait
dec
mov
cli
xor
arpl
or
mov
mov
xchg
mov
jl
mov
xchg
stc
or
daa
jmp
int3
call
ret
in
test
int
int3
subb
add
push
loopne
jns
or
jb
sbb
cltd
adc
sbb
mov
mov
adc
scas
dec
mov
enter
jp
jnp
mov
add
lock
lret
outsb
jns
scas
in
ss
std
sub
out
int3
aaa
sub
into
jno
mov
lcall
push
cmpsb
jne
sarl
mov
jl
cwtl
mov
les
pop
mov
cmp
xor
mov
imul
inc
sti
jns
inc
adc
repnz
div
xchg
enter
sbb
test
mov
sub
ret
notl
pop
mov
lcall
ffree
es
fildl
or
pushf
add
jle
mov
dec
shufps
pushf
aad
ss
aas
push
insl
movsl
jbe
lret
add
scas
dec
lret
xor
addl
loope
sub
pop
into
dec
pop
and
push
stc
mov
add
add
push
sbb
orb
cmp
loop
inc
mov
push
aad
push
mov
lea
or
addl
and
fidivs
push
pop
inc
mov
add
and
lret
nop
movsl
lret
ja
add
xchg
xor
ljmp
leave
in
daa
test
pop
sub
out
jg
pop
adc
movsb
and
adc
mov
push
ss
mov
mov
xlat
sub
daa
popl
in
pop
sub
mov
addr16
ja
loop
mov
push
mov
pop
jmp
into
bnd
fiaddl
imul
push
insl
insb
push
xchg
dec
lret
sub
inc
pop
movsb
rolb
andb
shl
jl
fldt
out
loopnew
hlt
ss
mov
cmp
enter
cmp
movsb
jecxz
jb
call
std
xor
mov
adc
lcall
xchg
xchg
push
test
cli
jmp
and
fcomp
mov
jbe
ja
ja
popf
add
sub
pop
shlb
push
add
imul
xchg
movsl
stc
out
mov
daa
cmp
mov
xor
push
xchg
loope
dec
ret
in
lret
pop
pop
pop
cmp
cmp
push
xchg
jmp
xor
mov
mov
clc
fldcw
lret
fisubl
inc
mov
fidivrl
cmpsb
inc
xchg
rcl
sbb
test
cmc
xchg
loope
fcom
in
loopne
mov
stc
push
xchg
call
enter
lods
fiaddl
dec
or
push
xchg
fmull
adc
ret
test
inc
les
ljmp
aaa
mov
xchg
out
jl
inc
in
data16
stos
mov
jb
jne
jo
nop
mov
addb
inc
test
popa
xchg
dec
mov
lock
and
je
dec
fcompl
xor
sub
in
ja
jmp
cmc
adc
mov
lock
jg
pop
call
jae
ljmp
xchg
faddp
pop
loopne
popa
sub
adc
shrb
test
nop
jle
jns
cltd
pop
ljmp
iret
adc
aad
sbbb
sub
dec
loope
mov
jl
aam
ljmpw
jno
push
lds
into
add
es
dec
ljmp
sub
lea
je
mov
xor
jnp
dec
std
aaa
sarl
and
and
lea
divps
mov
into
ds
out
xchg
xor
push
std
sub
cmpl
shr
pop
repz
cmp
push
dec
sub
lret
push
push
rcr
mov
addr16
pop
xchg
imul
pop
fwait
shrl
add
inc
dec
push
mov
inc
lods
int3
mov
fdivs
cmp
xor
roll
ror
sbb
sbb
pop
or
dec
repz
cli
push
mov
or
xor
lcall
and
cwtl
cli
sbb
sbb
sbb
sbb
adc
xchg
subl
mov
mov
mov
mov
mov
sbb
stc
dec
pushf
pop
mov
ret
pusha
addr16
fcomi
or
fisubl
in
mov
jne
jl
les
cmp
jg
lods
jo
repz
addl
jns
in
dec
adc
stos
jno
or
fdivrp
xchg
and
fidivrl
pop
cvtps2pd
mov
fldt
pop
in
cmp
sub
sbb
jg
insl
sub
lock
adc
repnz
and
and
xor
push
cmc
aad
fwait
push
pop
jecxz
sbb
mov
in
sbb
sbbb
push
scas
ja
xor
scas
test
xchg
int
mov
sti
aam
test
or
in
fnstsw
das
out
jge
mov
dec
loop
aaa
jle
sbb
xlat
push
imul
fadds
jae
add
insl
cli
or
sub
jmp
adc
add
cmp
out
or
mov
cmpsb
mov
pop
mov
int
loop
mov
lods
xchg
mov
pop
test
pusha
push
fadds
jb
add
repz
sub
pusha
lds
out
icebp
enter
push
test
and
inc
imul
add
pushw
jb
mov
in
popa
adc
jecxz
adcl
mov
int3
daa
repz
je
sbb
int3
stos
test
adc
push
push
inc
adc
mov
jo
sbb
int3
mov
cmp
mov
cwtl
repnz
aad
xor
add
clc
rcrl
push
inc
int3
js
and
and
xchg
imull
xchg
inc
xor
jne
xchg
bound
daa
lods
popa
sub
lahf
or
push
pushf
lods
mov
and
out
mov
shll
icebp
cmp
jle
and
sub
jae
xchg
arpl
dec
std
pop
pushf
pop
outsl
call
pop
adc
out
jo
or
fcompl
lret
lcall
in
jns
jns
lret
jp
adc
outsb
mulb
pop
push
icebp
push
aas
stos
dec
aad
into
jge
mov
call
jecxz
imul
or
sub
fidivrl
mov
sbb
aas
xor
mov
mov
fimull
dec
stos
push
push
adc
or
jo
insl
cmp
push
push
into
sbb
mov
cmp
int
sub
and
mov
mov
or
fsubl
addr16
or
pushf
sbb
cltd
jmp
mov
cmp
cmp
jns
pop
and
scas
cmp
mov
ss
xchg
dec
push
push
lcall
in
aad
jns
mov
cmp
jne
imul
out
add
stc
inc
addr16
fisttpll
mov
dec
out
dec
mov
imull
sbbb
mov
mov
xchg
cmp
lods
inc
mov
hlt
stos
jl
lahf
out
dec
push
pushl
sbb
cmc
xchg
outsb
push
pop
mov
into
mov
add
addr16
adc
mov
cmc
sbbb
pusha
mov
rcl
ss
and
lds
in
mov
and
shlb
push
sub
lods
shll
aas
scas
mov
call
inc
shr
adc
pop
cwtl
cld
in
int3
pop
repnz
repz
pop
ja
cli
sbb
push
mov
pop
test
leave
jae
lds
adc
push
lds
push
int
mov
ret
lret
test
cmpsl
or
out
daa
lahf
cwtl
fucomp
mov
fsubrl
xchg
sub
sub
push
jmp
inc
sub
lods
mov
insl
cmpsl
leave
and
ret
out
aad
dec
jno,pn
daa
and
sub
push
push
lret
gs
push
or
outsb
xchg
push
mov
push
cs
das
adc
es
push
rcr
imul
push
fiadds
loopne
dec
dec
jb
jl
pop
mov
xchg
mov
loop
mov
or
and
mov
mov
inc
repnz
outsb
pop
fisubl
add
test
add
orb
in
mov
dec
cmp
mov
aas
xchg
push
orl
xchg
incl
pop
xchg
mov
inc
sub
jnp
mov
inc
mov
test
in
or
ret
imul
ljmp
sbb
insb
in
mov
push
loopne
lea
ds
roll
into
mov
mov
sbb
leave
test
mov
push
xorl
stos
and
adc
aad
mov
scas
jb
outsl
add
inc
push
pop
and
pushf
test
fidivrl
or
push
andl
xchg
pop
and
push
mov
aam
lret
sub
stos
sysenter
inc
cli
and
push
mov
or
inc
scas
mov
cmp
int
lcall
add
push
jmp
in
rcrl
dec
sti
in
and
jne
leave
insl
and
mov
pop
mov
pop
dec
mov
out
dec
or
movsl
sbb
pusha
cmc
adc
mov
add
out
sbb
dec
daa
movb
in
mov
cli
dec
push
dec
pop
mov
ss
pop
sbb
push
sub
fsub
data16
fstps
rcrb
or
clc
jo
and
repz
repnz
xor
xchg
mov
cwtl
mov
and
pop
outsb
fnstcw
pop
push
call
or
insl
cmp
sub
jno
sbb
popf
lods
jo
icebp
pop
cld
jnp
mov
call
adc
cld
or
imul
fstl
arpl
push
hlt
jno
mov
gs
push
aad
pop
aas
stc
xchg
fisubrl
xchg
jecxz
ljmp
mov
or
jp
popf
cld
aaa
jecxz
push
add
inc
les
xor
lret
adc
jo
into
jno
ljmp
mov
pop
bsr
fwait
stos
jae
mov
fisttpl
sub
cwtl
enter
inc
and
sub
mov
jbe
addb
sbb
into
ret
dec
dec
jmp
shrl
cltd
adc
sti
test
sub
lods
mov
adc
jne
add
arpl
push
lret
push
test
add
movsl
mov
and
popa
sahf
push
icebp
cli
push
and
outsl
ret
xchg
loopne
adc
lret
push
cmp
popa
mov
xchg
loopne
add
push
int3
add
push
pop
ja
test
daa
jecxz
sbb
imul
pop
dec
es
ljmp
adc
popf
lret
test
or
cld
adc
push
imul
loopne
pop
mov
pop
mov
sub
push
cmp
lea
jge
and
iret
add
shrl
fcoms
mov
pop
movsl
into
sbb
cmp
mov
and
popf
sub
mov
xlat
mov
js
cld
inc
sbb
xor
adc
fcoms
xor
test
mov
jb
add
jo
ljmp
int3
insl
bound
mov
lock
dec
cmp
lcall
xor
test
sub
jo
das
push
leave
push
js
xor
jmp
cmp
mov
fildl
imul
sub
inc
pop
mov
mov
fiaddl
sbb
jo
lds
scas
insb
movsb
je
fsubs
mov
sub
dec
mov
rorl
cmp
dec
inc
push
int
cmpsl
aam
inc
jmp
int
mov
push
inc
lret
xor
add
cmp
xlat
pop
pop
out
push
xor
mov
test
pop
fwait
outsl
stos
xchg
sub
testb
or
xchg
cltd
out
xor
std
shlb
sti
mov
mov
push
loopne
dec
rcrl
mull
int3
lret
or
aad
xchg
and
cwtl
inc
inc
inc
aad
imul
push
pop
negb
icebp
mov
and
push
mov
scas
xor
adc
movsb
sub
add
add
inc
xchg
fldenv
scas
insb
aas
clc
das
mov
sbb
inc
add
cmp
inc
pop
push
lods
mov
mov
outsl
pop
pop
imul
lea
aaa
push
xchg
cld
lahf
adc
fists
fisttpl
sbb
sub
loope
or
push
adc
push
inc
or
adc
xlat
in
push
aaa
jns
enter
sub
and
imul
lods
call
cmp
mulb
mov
jae
out
mov
stos
xor
mov
mov
or
adc
insl
pop
mull
xchg
ljmp
inc
add
pop
stos
rorb
aas
out
enter
push
shlb
and
push
lods
aam
jns
push
pop
push
sbb
cmc
pop
add
xchg
adc
cli
repz
out
and
mov
insl
loop
pop
dec
inc
rorl
jnp
hlt
movsb
test
loope
xor
jg
and
cmpsl
ret
jp
fcom
pop
inc
es
xor
sbb
inc
ret
jnp
aaa
pop
mov
ja
or
cmpsl
dec
mov
inc
adc
jmp
loop
cmpsb
outsl
mov
cmpsb
inc
arpl
iret
ds
push
gs
cmpb
movsb
mov
adc
lock
test
pop
or
out
pop
lret
or
stc
sbb
inc
filds
pop
add
mov
jbe
push
pop
xchg
mov
sti
ret
sarl
xchg
imul
jo
imul
dec
jno
ret
dec
pop
jne
aad
into
notl
cs
xlat
jp
js
ror
cmp
adc
xchg
jecxz
pop
arpl
fcmovne
xchg
xor
mov
xor
dec
jno
push
cmp
add
paddd
inc
ds
adc
sbb
ja
out
ja
sbbb
xor
xchg
sub
push
sti
or
jns
in
push
cmp
push
stc
aas
sub
xchg
in
and
cmp
lahf
inc
push
les
jne
lds
adc
adc
mov
insl
adc
sbb
lods
lods
je
movsl
cli
aas
lret
xchg
adc
inc
ds
sub
mov
scas
mov
shrl
loopne
add
pop
scas
in
mov
inc
aas
loopne
add
xchg
divb
xchg
das
popa
lds
setb
mov
jecxz
call
xor
pop
test
shrl
into
or
mov
xor
in
sbb
and
xlat
inc
xor
ss
push
xor
adc
jns
inc
push
dec
lret
loopne
xor
pushf
sub
js
lret
jb
les
fistpll
mov
lods
out
xor
pop
pop
mov
mov
orl
in
mov
or
adc
subl
je
in
mov
mov
mov
adc
pop
adc
and
adc
das
xchg
fidivrs
decb
imulb
into
lock
nop
or
into
jne
mov
sbb
xchg
mov
and
jp
cmovnp
jl
push
xchg
pop
inc
push
sbb
dec
bound
push
stc
fs
and
idivl
aam
or
loop
and
dec
stc
cmpsb
add
mov
nop
cmp
dec
sub
popf
mov
ljmp
push
mov
mov
dec
cmpsb
stos
test
repnz
out
sub
int3
mov
out
mov
loop
or
add
dec
cmpsl
leave
insb
les
jle
outsl
and
xchg
push
sbb
mov
push
inc
sub
dec
hlt
cmp
mov
rorb
enter
popa
fwait
mov
adc
das
outsl
mov
cmp
or
loopne
int3
xchg
sbb
out
outsl
not
xchg
sbb
push
add
jno
loope
cltd
jbe
mov
jp
rol
adc
push
bound
sub
inc
arpl
into
lcall
les
lea
lods
subb
fadds
adc
xchg
scas
push
cmp
cmp
cmp
loopne
xchg
sub
mov
loop
xchg
imul
sbb
add
enter
xchg
fs
cmp
addb
push
mov
test
cmp
mov
shlb
cld
pop
add
lds
aas
gs
mov
xor
inc
aad
jnp
mov
adc
bound
mov
sti
movsb
adc
or
adc
je
pop
nop
cmp
or
mov
mov
fsubs
fsubs
adc
not
addr16
push
enter
push
cli
xchg
test
jo
call
pop
adc
insl
xchg
add
mov
pop
popa
and
jle
push
jl
mov
and
and
pop
std
addb
aam
loop
pop
out
in
dec
pushf
push
sbb
addl
pop
add
mov
enter
sbb
jge
data16
jp
jge
push
or
neg
jb
or
xor
push
shll
push
xchg
add
in
cld
and
pop
mov
xchg
pushf
out
mov
dec
inc
js
push
mov
xchg
daa
dec
jnp
mov
inc
insb
mov
stos
bnd
popf
std
in
fstl
fmuls
or
shlb
pop
push
insl
lock
push
or
inc
aaa
enter
inc
push
cmpsl
xchg
popa
adc
in
push
test
or
or
mov
lahf
xchg
loope
cwtl
ja
repz
pop
icebp
scas
adc
out
rorl
cmp
adc
mov
es
xor
push
testl
clc
lret
scas
test
scas
push
mov
daa
push
inc
mov
sub
jecxz
sub
fstps
das
push
sub
jecxz
imull
std
lret
sbb
arpl
dec
push
pop
and
mov
shrl
std
cmp
clc
xchg
and
sbb
insl
dec
pop
add
mov
pop
push
mov
pop
iret
notb
push
adc
sub
dec
les
sub
call
inc
inc
fisubrl
or
xor
cwtl
jnp
cmp
jl
push
fs
push
dec
sub
cmp
sti
and
jno
xchg
dec
in
sub
imul
ljmp
and
inc
stos
mov
stos
xor
outsl
out
mov
dec
das
loope
stos
outsb
notl
and
inc
iret
pop
inc
rclb
cmp
mov
js
and
sbb
ficompl
stc
into
sahf
popa
mov
xor
repz
cs
sub
jg
test
fistl
inc
ret
fs
push
xor
xchg
add
push
jne
or
sbb
mov
ss
jp
repnz
sbb
shl
aaa
cmpl
in
popf
pop
adc
mov
out
stc
add
les
pusha
outsb
repz
jnp
repz
out
lods
lea
out
ljmp
fs
inc
xchg
inc
dec
std
inc
call
sbb
adc
pop
or
push
add
mov
dec
mov
scas
aaa
sbb
or
addr16
cld
mov
and
cmp
pusha
jbe
in
jge
in
pop
nop
xchg
jge
inc
sub
inc
push
or
adc
in
lret
cmp
daa
xor
pop
xor
sbb
daa
fistpll
and
cmp
add
popf
or
stos
sti
fs
mov
aas
fdivr
insb
sub
mov
popf
arpl
push
pusha
xchg
jl
inc
rclb
stos
cs
inc
mov
out
shrb
lea
daa
inc
pushf
or
outsl
fsubl
imul
iret
cli
test
gs
sub
fstl
jp
gs
xchg
in
push
cli
push
jmp
jge
sahf
pop
test
xchg
mov
in
test
std
insb
xchg
test
stos
vmptrld
xchg
es
mov
enter
push
aaa
addr16
fcoms
roll
mov
ss
mov
xchg
push
mov
mov
push
icebp
fwait
xlat
aam
fisttps
jmp
inc
out
inc
mov
cld
fisttps
adc
andl
leave
and
push
and
mov
fildll
inc
lods
adc
out
pop
jb
mov
pop
xchg
adc
insl
jge
sbb
push
lsl
pushf
sbb
sti
dec
inc
call
sti
xchg
sub
test
cmp
pusha
jne
mov
sbb
rcl
in
out
scas
arpl
scas
mov
repnz
ds
jge
loope
cmpsl
aad
ds
adc
xor
test
jns
lods
and
jg
sub
sbb
imul
out
dec
jbe
cmp
inc
popf
xor
outsb
xor
dec
add
mov
push
setp
push
ds
mov
in
pop
mov
add
jp
aam
cld
mov
out
inc
stc
add
sahf
jmp
repz
sub
pop
sub
sub
mov
xchg
test
lahf
sub
jg
xor
sbb
pop
pusha
movsb
and
sbb
out
push
fildl
sbb
sub
ljmp
bound
cs
lea
cltd
xchg
adc
testl
jbe
fcompl
hlt
mov
out
inc
gs
into
movb
das
add
add
imul
mov
inc
xchg
repnz
pop
adc
push
aas
subb
int3
cmpsl
movsb
xor
in
push
lea
mov
out
push
in
jecxz,pt
cltd
rcl
fwait
jnp
movsl
insl
pop
and
add
out
mov
push
add
rcrl
int3
sub
xchg
jmp
lods
xchg
jb
enter
pop
mov
jo
xchg
out
les
mov
mov
mov
aad
testl
sbb
push
aam
lcall
subl
push
scas
shrl
out
push
mov
orl
fbld
mov
push
xor
inc
mov
jecxz
sti
out
jg
xchg
fildl
xchg
jne
or
movsb
cmp
add
jg
cmp
sbb
mov
data16
shrl
jbe
xchg
cwtl
and
jno
dec
mov
xchg
dec
dec
mov
xorb
push
add
or
aam
test
out
mov
test
inc
sbb
fmuls
movb
outsb
cmp
mov
out
mov
enter
outsb
out
cwtl
sub
arpl
sub
movb
dec
rcll
enter
cmp
mov
pop
jmp
and
sub
sub
xor
out
mov
mov
adc
add
push
mov
dec
inc
fdivs
adc
cmpsl
out
aaa
fucomip
testl
jne
add
loope
lcall
movsl
movsb
cmp
pop
jno
mov
stos
xor
pop
lods
pop
push
lahf
xchg
adc
add
stos
fcoml
add
cld
loopne
dec
and
arpl
fnstcw
lcall
sbbl
fdivs
pop
cmpsl
xchg
cmp
xor
outsb
mov
or
cmp
pop
stc
into
fs
jae
sbbl
jle
push
int3
stos
clc
cs
rclb
ret
cmp
cmpsl
insb
cmp
cli
pusha
sbb
lock
add
xchg
call
les
inc
sbb
cmp
or
mov
pop
sbb
pop
ljmp
mov
jnp
cmp
aaa
mov
or
faddl
sub
cmpsl
cwtl
jecxz
in
test
jb
pushf
lods
fwait
cwtl
cwtl
icebp
or
movb
and
ret
xchg
popf
mov
cli
pop
or
cmp
or
dec
sarb
mov
cmpsb
adc
insl
dec
xor
imul
xchg
lods
insl
clc
adc
jns
aad
mov
daa
mov
cmp
cmp
dec
inc
pop
cmp
sub
out
mov
aaa
or
dec
mov
out
movsb
call
mov
out
cs
mov
das
dec
pop
cmc
nop
cmc
jmp
jl
repz
cmp
jns
inc
xor
stc
xchg
adc
mull
in
dec
dec
insb
out
push
pop
int
xor
xor
pop
inc
cmp
cmpsb
les
in
imul
ret
jo
jmp
xor
xor
or
or
sbb
jle
insl
je
mov
in
or
adc
imul
dec
push
fildl
lret
leave
and
sbb
js
jl
inc
jge
cmc
testl
bound
movsb
test
cmp
sub
cmp
in
lods
imul
add
aaa
les
push
mov
xor
loope
mov
and
xchg
cmp
enter
ja
pusha
xor
loop
imul
cmp
jns
or
cmpsl
pushf
iret
push
jns
push
mov
xor
dec
fsubl
aam
lret
push
sub
sti
sub
jmp
sub
cltd
insb
add
fiadds
in
bound
jbe
jmp
add
push
adc
test
test
sub
push
xor
xchg
mov
call
sti
gs
jae
adc
cltd
sbb
push
data16
adc
fwait
in
pop
aaa
mov
dec
adc
sub
mov
mov
ret
or
sub
hlt
and
sbb
and
aam
scas
jecxz
mov
jo
lcall
cmpsl
ret
stos
out
xor
pop
mov
cmp
les
xchg
cmpsl
sbb
jg
inc
rcrl
es
into
push
mov
sub
mov
sarb
pop
xor
ret
or
or
lcall
mov
insb
stos
aas
and
das
aas
enter
cld
jp
divl
cwtl
push
xor
fists
push
push
inc
lods
inc
add
aas
dec
mov
sub
sub
testb
ret
adc
jle
mov
addr16
scas
push
mov
adc
xor
shrl
fwait
jne
adc
pop
clc
mov
mov
pop
mov
sbb
mov
xchg
xchg
xchg
mov
orb
andb
adc
rclb
or
mov
sbb
enter
test
or
inc
pop
into
mov
outsl
push
fwait
cmp
push
mov
lahf
mov
ds
pop
jle
mov
repz
cli
fsub
cmpsl
cltd
dec
test
jp
push
add
into
cmpsb
and
xor
pop
mov
cmp
aam
adc
fmull
add
jae
cmp
scas
aad
inc
cs
lahf
pop
mov
int
sub
cmc
fs
ficoms
test
mov
sbb
xor
mov
adc
adc
leave
fwait
aad
jle
insb
out
mov
daa
jae
ljmp
and
adc
inc
sbbl
enter
movsb
sbb
cmp
xor
cmc
sbb
fs
shll
and
adc
sub
inc
out
testb
js
dec
lods
scas
dec
dec
fcmovu
xlat
jo
xor
out
mov
test
imul
pop
mov
or
or
adc
add
sbb
int3
mov
xchg
adc
lea
repnz
xchg
xchg
popf
inc
mov
imul
and
sub
push
lods
scas
je
sbb
insl
sub
sbb
sub
cmpsb
mov
icebp
fmuls
and
data16
out
shll
adc
insl
mov
mov
inc
aas
adc
mov
aam
aaa
shll
xchg
imul
lods
pop
lahf
mov
pusha
in
inc
add
inc
push
sbb
stc
inc
push
jp
add
sub
aaa
imul
and
sub
jl
mov
lea
shll
mov
lret
lret
cmp
mov
pop
int
iret
xlat
sub
cmp
add
jmp
inc
pop
dec
mov
xchg
dec
or
out
mov
outsl
je
add
nop
loopne
pop
pop
loop
or
mov
sub
xchg
fdivrs
aaa
inc
shl
faddl
mov
bound
push
sar
shl
in
dec
gs
and
jno
pop
xchg
stos
jmp
jae
and
push
mov
xor
fsub
jle
fsubrs
jb
popf
shrl
idiv
add
mov
or
into
inc
aaa
out
and
mov
dec
jae
pop
xchg
cmpl
addb
pop
dec
mov
aad
inc
push
popa
dec
cmp
or
mov
xor
dec
divb
out
imul
cmp
sub
inc
xchg
call
push
loope
mov
jl
add
dec
pop
add
adc
mov
jb
fstpt
mov
or
push
inc
fidivs
dec
fs
inc
cmp
int
daa
inc
scas
inc
inc
sub
pusha
mov
clc
sbb
jae
cmpsl
popf
adc
rorb
sub
inc
mov
ret
mov
xchg
mov
add
pop
popf
xlat
sarb
cmp
aas
dec
sub
rclb
cltd
movsb
divb
push
aas
mov
pop
mov
inc
repnz
jo
jle
xchg
jo
clc
cmp
or
push
cmc
repnz
xchg
mov
stos
sbb
jnp
lret
loopne
adc
imul
adc
push
adc
dec
sub
pop
shll
cli
cltd
inc
dec
pop
test
imul
mov
scas
outsb
sbb
xchg
and
pop
push
bsr
shl
ljmp
mov
iret
jae
and
xchg
mov
mov
inc
adc
xlat
loope
mov
popa
add
adc
sbb
push
cmpsl
cmc
jmp
dec
xor
inc
cmpsl
sub
adc
test
js
mov
mov
mov
mov
xorb
das
xor
mov
jb
cld
gs
xchg
add
out
repz
dec
xchg
xor
cmp
inc
bound
jl
sub
into
mov
cs
add
fwait
pop
call
push
or
shlb
or
dec
jge
pop
insl
push
jnp
ljmp
add
cmp
dec
inc
xchg
imul
mov
and
mov
adc
ret
mov
jle
subb
outsl
hlt
shl
in
mov
cltd
ljmp
testl
pop
inc
fistpll
jg
aas
push
rcrl
sarl
mov
inc
test
insb
push
add
daa
and
sub
stc
dec
or
push
pop
push
sbbb
ficomps
adc
das
ds
cmp
orl
mov
inc
mov
leave
inc
mov
xor
push
shrl
ljmp
rcrl
xor
pop
std
in
rol
imul
lret
mov
add
cltd
mov
jmp
cld
imul
add
in
jl
or
and
cmp
ds
xor
enter
inc
xchg
int3
or
sbb
out
xor
adc
into
xlat
adc
ficoml
pop
dec
in
stc
xchg
ljmp
fwait
add
movsl
loopne
insl
cmp
cwtl
test
fisttpl
addr16
mov
adc
call
mov
jle
dec
xor
push
jle
jne
lods
repz
test
je
push
jle
sub
mov
sub
cmp
out
insl
mov
out
sbb
push
cmp
mov
or
test
adc
inc
js
lcall
mov
outsl
in
mov
faddl
or
ret
lds
mov
decb
push
sbbl
mov
clc
mov
sub
into
xor
sbb
xchg
xor
call
gs
cmpsb
mov
mov
imul
fiadds
mov
or
adc
das
inc
pop
outsb
pop
push
push
pop
push
aad
pusha
loopne
jae
mov
fmuls
mov
sbb
mov
fnstcw
xchg
pop
sbb
mov
insb
adc
adc
xchg
dec
aaa
addb
aad
mov
push
xchg
xor
cmp
dec
popf
jo
pop
pop
cmp
rclb
adc
dec
pop
mov
fcmovnu
inc
les
adc
sbb
mov
inc
jg
insb
push
sbb
fld
bound
stos
cmpsb
push
ljmp
push
add
mov
jge
out
ret
mov
mov
fimuls
jbe
jge
mov
fimuls
lret
push
mov
mov
repz
xor
or
dec
dec
xorl
pushf
imull
fnsave
data16
insb
mov
cmpsl
xor
jp
sbb
mov
repz
pop
outsb
mov
mov
out
bound
lods
mov
movsl
ja
and
mov
lahf
inc
cmc
adc
stos
mov
add
lea
sub
loope
imulb
cmp
ss
push
add
dec
add
lret
push
out
out
enter
inc
push
sub
cmp
and
push
je
dec
popa
aas
mov
out
ljmp
ja
mov
inc
lret
dec
jecxz
dec
sbb
stc
jb
mov
jbe
mov
jmp
add
adc
sub
fistl
push
out
or
inc
mov
mov
enter
dec
test
xor
mov
sbb
or
cwtl
mov
pop
orb
cwtl
xor
xor
mov
mov
add
ja
imul
push
sub
add
sbb
or
ds
stc
arpl
loop
adc
into
popf
imul
dec
cmp
test
mov
in
sbb
mov
cmp
mov
or
xchg
mov
push
shlb
lahf
jno
arpl
mov
push
insb
sbb
cmpsl
pop
movsb
sub
lea
jl
rcll
mov
jns
fadds
mov
pushf
lods
andl
mov
cmp
pop
pop
mov
je
inc
rorb
jge
and
rcll
cld
mov
and
imull
adc
lahf
test
xor
inc
ljmp
mov
aas
call
inc
out
sbb
push
pop
jb
addr16
arpl
ret
add
pushf
lods
nop
jp
cmpsb
add
push
popaw
aad
dec
loop
leave
jmp
bound
psubq
ret
jo
leave
adc
iret
aaa
into
sub
jae
decb
call
dec
push
inc
mov
addr16
add
dec
or
and
notb
jns
push
cwtl
leave
mov
leave
jno
adc
pop
mov
test
mov
sbb
mov
xor
push
call
push
add
cmp
pop
je
or
rcrl
fs
aam
aad
cmp
clc
in
popf
jnp
dec
nop
outsb
adc
sbb
sub
mov
mov
xorb
bound
xor
mov
add
dec
sahf
shll
push
mov
scas
jae
ret
mov
mov
or
fdivl
xchg
pop
inc
xchg
ret
adc
test
dec
jo
sti
outsl
mov
inc
inc
stc
dec
lea
sahf
sti
pop
pop
pop
outsb
cmp
shr
mov
cmp
scas
jl
sbbl
xlat
inc
icebp
cmp
out
into
mov
andb
fstpl
add
mov
imul
jle
push
push
pop
xor
pop
cmp
xchg
pop
pop
xlat
and
les
add
xchg
jg
push
lcall
dec
jb
or
icebp
cmp
fwait
js
sbb
int
or
mov
jb
pop
push
imul
rcrb
add
jl
out
sub
lret
into
jno
fidivrl
xorl
sub
fsts
adc
lds
lcall
cmp
and
and
insb
imull
divb
mov
pop
xor
fcmovnu
and
sysenter
or
jl
mov
rcrb
shlb
insb
sbb
aaa
jo
sub
lods
dec
cli
push
out
mov
adc
mov
and
mov
jo
pop
push
frstor
mov
push
cs
and
out
mov
xor
rorl
mov
or
loope
test
fnstcw
xchg
cwtl
les
lds
mov
adc
daa
sar
sub
fwait
cmc
push
leave
jns
stos
outsl
test
sbb
jl
adc
inc
cld
push
sbb
mov
xor
mov
add
mov
lods
imul
jmp
or
js
test
orb
lock
sahf
dec
dec
sbb
jle
pop
lock
and
or
xor
lea
inc
mov
xchg
lret
xchg
mov
sbb
movsl
arpl
cmp
inc
adc
adc
sub
in
aam
outsl
loop
inc
add
pop
inc
xor
dec
and
push
mov
stos
imul
inc
fisubs
or
xlat
jmp
outsb
dec
push
mov
daa
mov
or
cwtl
dec
mov
jne
out
cmpsl
nop
adc
repz
sbb
sbb
sbb
in
cmpsb
sbb
daa
ret
std
shl
call
ljmp
scas
inc
stc
cmp
fildl
or
xchg
push
mov
inc
rcl
mov
adc
outsb
or
lock
aad
aam
pop
add
add
cltd
ss
mov
lret
dec
call
xchg
mov
mov
sub
add
and
dec
iret
xchg
add
push
cli
inc
push
mov
aam
cltd
adc
xchg
je
pop
scas
stos
and
mov
jg
pusha
dec
loope
xlat
scas
dec
push
mov
out
dec
nop
rorl
sbb
sbb
loopne
cmp
repz
sarb
fwait
cmp
and
dec
popa
bound
and
in
xchg
mov
loopne
add
adc
sbb
out
cmp
jo
sub
xor
inc
cmp
fimull
and
in
pushf
mov
cmpsb
stc
and
cli
cmp
xchg
aas
sbb
mov
and
aas
push
xlat
aaa
add
push
sub
sbb
jo
hlt
pop
jo
stc
nop
cmp
iret
inc
das
clc
mov
dec
cmpsl
bnd
pop
mov
push
cmp
or
inc
shl
xchg
xchg
and
insl
cltd
pop
cmpsb
xchg
mov
rcrb
xchg
enter
jmp
fisubrs
rcrl
xchg
ja
add
push
pusha
iret
mov
pop
imul
cmpsl
mov
icebp
xor
pushf
inc
mov
lock
jae
icebp
add
loope
out
daa
fcomip
bound
mov
ss
sbb
jmp
aaa
in
inc
leave
xchg
adc
mov
lcall
idiv
mov
insb
dec
lret
imul
stos
or
and
movsl
popf
imul
pop
test
cmpb
mov
das
call
or
test
push
xor
fucomi
lds
popa
arpl
es
mov
stos
jne
insb
cmp
pushf
push
sahf
out
xchg
cmp
sti
rclb
shrl
fiadds
mov
outsl
push
shll
cmp
add
inc
int
jmp
mov
xchg
imul
xor
aad
rep
sbb
pop
sub
sub
lret
jg
cli
xor
bound
inc
sarl
sarl
dec
nop
add
aas
or
fstpt
dec
imul
call
js
lds
cmp
push
mov
push
out
testl
inc
xchg
ficoms
loop
int3
jno
mov
mov
arpl
mov
pop
idivb
push
repz
insl
dec
sub
dec
dec
dec
roll
loopne
jmp
adc
stc
mov
sbb
repnz
inc
movsb
lock
push
repz
xchg
jecxz
or
push
pop
arpl
adc
std
mov
lahf
inc
xor
or
jno
fistpl
and
mov
cli
es
cmp
lods
movsb
sbb
test
xchg
clc
push
xchg
add
insb
sbb
f2xm1
mov
pop
xchg
sbb
and
cmp
push
mov
fwait
es
cmp
mov
mov
jmp
insb
sbb
mov
push
sbb
xor
arpl
add
pop
insb
pop
ja
jmp
mov
shll
rcl
cmp
mov
cmpsb
out
test
push
dec
ret
mull
sbb
jnp
mov
scas
mov
sub
stc
clc
mov
xchg
mov
dec
test
sub
lret
mov
orl
mov
cmp
mov
into
fs
adc
push
mov
jb
mov
push
dec
cmpl
sub
cmpsl
aaa
or
ret
dec
adc
out
mov
push
jnp
inc
cld
inc
mov
fsubs
addr16
out
dec
fdivrl
jb
idivb
push
loop
data16
icebp
mov
inc
xor
add
lret
faddp
dec
icebp
std
jo
sahf
jae
adc
test
pop
dec
test
push
fs
imul
and
aas
bound
mov
push
out
pop
add
iret
arpl
xchg
mov
leave
in
lods
outsb
inc
and
aas
mov
xor
add
jnp
add
out
pop
frstor
jnp
sub
add
aam
scas
pmullw
out
rolb
rcrb
idivl
loop
out
insb
repnz
pop
adc
mov
int3
mov
loopne
fcompl
nop
sub
pop
xor
inc
mov
inc
adc
cmpsb
sbb
mov
sahf
arpl
lock
or
cwtl
add
cmp
mov
shll
adc
sar
or
inc
jg
ljmp
stc
imul
sar
xor
and
sbb
push
pop
leave
add
jno
in
xchg
hlt
xchg
pop
add
xchg
ret
jns
mov
mov
fmul
cmp
xchg
xchg
push
test
or
adc
xlat
and
lcall
push
mov
or
inc
dec
fldl
xor
cmpsl
pusha
lock
mov
inc
outsb
icebp
daa
add
mov
or
int3
jp
cmp
push
cs
popa
mov
push
xor
cwtl
or
dec
out
sub
cltd
mov
lcall
sbb
shll
jo
xor
inc
adc
mov
pop
sbb
nop
jp
xor
pop
ss
sub
nop
pop
mov
movl
jb
push
xchg
sub
mov
add
adc
mov
dec
cmc
les
in
mov
mov
add
or
fwait
pushf
add
aad
xchg
jmp
adc
push
lret
aas
test
inc
aaa
pop
add
mov
repz
add
xor
cld
mov
inc
out
ret
inc
insb
xchg
inc
push
sub
mov
lret
inc
push
inc
add
je
fildl
test
mov
loope
stc
in
sub
xor
scas
or
test
mov
inc
push
int
outsl
mov
cmp
jecxz
push
decl
xchg
jl
rorl
aad
in
cs
pop
fdivs
adc
mov
sbb
inc
push
or
dec
fisubl
dec
pop
sbb
push
add
call
mov
pop
jle
sub
test
and
enter
lcall
inc
lret
enter
pop
push
mov
or
bound
test
inc
sbb
pop
imulb
adc
das
das
adc
fcompl
cmc
fsubp
mov
push
pop
leave
xlat
pop
loope
mov
mov
jne
ja
cmp
mov
or
inc
icebp
in
jecxz
pop
test
cmp
cmp
sbb
inc
sbb
push
jo
and
or
xor
out
adc
xchg
cmpsl
inc
push
add
cs
cmp
add
cmp
repz
cltd
or
rcrb
mov
mov
add
mov
stc
mov
pushf
and
lcall
js,pt
mov
mov
mov
xchg
dec
dec
ljmp
jne
mov
cmp
icebp
mov
out
int
dec
movsb
bound
mov
aad
xor
mov
ret
mov
popf
sbb
mov
inc
ret
jp
add
and
dec
nop
pop
pop
xchg
adc
jl
xchg
sbb
jbe
in
pop
push
scas
aam
xchg
mov
jmp
into
ret
fs
xor
jnp
pop
lock
loopne
ret
adc
xchg
lods
test
add
mov
fidivrl
lods
jns
push
dec
sbb
lods
jp
ja
insl
mov
or
jo
push
nop
mov
mull
adc
aad
dec
sbb
lea
sub
xchg
shlb
shl
stos
fnstcw
out
push
imul
or
in
lret
cld
push
sbb
movsb
dec
icebp
test
pushl
sbb
adc
in
int
mov
sbb
sbb
and
aaa
shll
pop
dec
bound
daa
sub
or
push
pop
jo
mov
jbe
adc
mov
subb
xchg
stos
mov
cltd
xchg
addr16
push
fcoms
fsubrl
aaa
mov
or
in
stos
iret
push
jmp
xchg
int3
cmp
js
dec
cmpsb
xor
test
cld
add
loope
xlat
xchg
pop
jbe,pt
das
adc
scas
mov
retw
add
jl
xlat
test
lret
cmpsb
xorl
fucomp
lock
cmc
das
push
dec
das
test
arpl
shlb
pop
into
leave
mov
hlt
jecxz
imul
aas
push
push
imul
jb
inc
in
push
ljmp
xchg
cmp
sub
mov
fildl
movsb
pop
lahf
or
add
inc
je
jmp
mov
sub
int3
mov
popa
and
jmp
test
aam
push
add
in
jmp
ljmp
cmc
adc
adcb
jb
push
sub
rcrl
push
in
in
ficomps
iret
lock
xchg
pop
push
out
jnp
sbb
lret
repnz
ret
int3
mov
and
xor
sub
enter
jl
sbb
jg
pop
idiv
das
imul
mov
leave
shrl
in
pop
scas
subb
adc
insl
bound
push
das
iret
and
jge
lods
mov
repz
jns
or
adc
xor
iret
hlt
outsl
or
hlt
cmp
stos
pushf
cmpsb
mov
decb
ja
inc
comiss
mov
xchg
mov
fbstp
pusha
add
mov
mov
mov
mov
mov
aam
xor
aad
sub
xor
ds
fnsetpm(287
push
stc
cmp
idivb
mov
sub
pop
jle
mov
into
add
test
mov
cli
xor
shll
or
out
fs
iret
jae
insb
into
rcrb
cmpsl
and
stc
dec
sbb
lea
lock
hlt
icebp
loop
sub
jne
sub
out
dec
es
inc
sahf
das
add
scas
mov
ficoms
xor
jnp
sbb
inc
mov
or
data16
stc
dec
jle
mov
mov
sbbl
pop
mov
stc
push
lock
adc
ret
fsub
mov
xchg
push
das
dec
fsts
mov
je
mov
xor
outsl
fwait
mov
ja
std
xchg
test
inc
loopne
sarl
jno
jo
push
pushf
jae
int
fadd
sbb
mov
test
pushf
mov
setb
push
xor
add
sub
std
es
mov
xor
cmpsl
pop
adc
push
ja
and
sbb
fadds
std
lret
push
fistpll
lods
inc
mov
xchg
lret
ljmp
mov
mov
mov
jg
push
fists
rcr
and
inc
xchg
xor
and
lcall
cli
repz
stos
xlat
pmaddwd
stc
out
int
mov
xchg
mov
cmpsl
inc
mov
shl
ret
enter
testl
mov
push
popf
orl
cmp
xor
jns
fsubrp
repnz
dec
pop
mov
sub
stos
sbb
add
sti
mov
subl
jns
loope
rorb
mov
cwtl
pop
rcll
mov
fistps
pusha
mov
lcall
das
xor
clc
dec
daa
push
repz
pop
push
mov
in
push
adc
out
sti
xor
in
mov
pop
push
mov
jmp
cld
mov
popa
xor
mov
push
sub
sbb
mov
pop
iret
jne
mov
mov
pop
xchg
clc
inc
dec
mov
ret
dec
roll
add
or
mov
xchg
lea
cmp
andb
or
cmp
mov
sbb
aam
mov
rcrl
xchg
sub
jns
and
addr16
jbe
adc
xor
out
mov
scas
add
cwtl
lret
xchg
dec
adc
or
dec
push
lea
cmp
sub
pop
dec
inc
stos
stos
dec
loope
cld
pop
mov
dec
int
adc
aas
sahf
mov
int3
sub
lret
mov
out
lea
add
inc
cmpsl
repz
jne
cmc
jae
push
lret
lods
fidivl
rcll
sbb
xchg
stos
xchg
or
xchg
shll
idivb
adc
jmp
addl
push
push
scas
mov
dec
outsl
or
int
jns
fildll
pop
pop
out
vcmpps
or
loop
andb
jne
ljmp
loopne
aaa
lcall
jo
es
adc
mov
add
xlat
jno
cmp
fmuls
pop
mov
mov
sbb
mov
sahf
xchg
jae
ljmp
mov
sub
test
lahf
stos
fistl
adcl
decl
xchg
rclb
mov
shll
dec
adc
adc
popa
scas
lods
mov
push
or
xor
out
dec
jnp
inc
enter
repnz
push
jl
jp
rolb
or
or
adc
mov
xchg
jbe
les
jecxz
xchg
mov
cmp
shl
fidivrs
out
mov
iret
push
fs
aas
mov
mov
lea
lock
je
xchg
lds
out
dec
add
popa
jns
sbbb
test
mov
stc
adc
pop
cmp
jns
or
push
lahf
in
in
repz
in
loopne
xor
movsl
push
mov
sbb
movsl
jecxz
jmp
nop
bound
cmpsl
adc
xlat
dec
ret
jb
cmpsb
ljmp
cmp
jb
xchg
mov
hlt
or
lods
imul
addr16
adc
cmp
sub
fmuls
mov
mov
push
fidivrs
ljmp
iret
jp
dec
xchg
sub
xchg
out
fisubrl
dec
mov
xor
dec
loop
decl
push
vsubss
and
fwait
incl
xchg
lcall
push
xor
push
insb
pop
mov
loop
push
jne
sbb
push
shrb
dec
sbb
pop
or
fidivrs
div
pop
rcll
jl
vandnpd
xchg
loop
pop
pop
push
loope
jmp
jns
jecxz
xchg
push
xor
test
dec
push
push
aad
or
lret
push
je
cli
inc
nop
jl
daa
sbb
out
mov
icebp
insl
inc
sub
clc
inc
lret
inc
aad
sbb
nop
daa
and
test
lods
jno
stos
shll
enter
shrl
data16
pop
ljmp
push
jns
and
xchg
shlb
cld
cmp
pop
out
test
cmp
pop
xchg
jns
pop
mov
mov
pop
xchg
sbb
lea
adc
pop
and
mov
push
sub
sbb
inc
mov
sbb
aad
inc
sahf
in
xchg
jg
pop
mov
mov
into
mov
mov
cmp
mov
push
js
leave
mov
das
js
jle
adc
xor
adc
jecxz
imul
sahf
lods
xor
ss
cltd
jne
cmpsl
or
fstl
jmp
and
les
ret
mov
sub
pop
or
loopne
push
imul
lret
pop
je
jns
jecxz
fwait
in
fcompl
test
jge
inc
cmp
or
jg
test
mov
inc
outsl
sub
lea
sub
cli
aad
pop
xchg
rorl
aas
add
clc
or
or
add
cmp
ja
pop
pop
pop
nop
loope
jle
in
sbb
add
bound
push
xchg
mov
xor
sub
and
dec
repz
subb
lahf
inc
outsl
push
push
push
movsl
or
mov
jbe
std
enter
mov
push
es
lock
addr16
fiaddl
push
lret
xor
dec
inc
lods
shl
or
rolb
sti
pop
jae
adc
and
jns
loopne
fsubrs
dec
fisttpll
sub
adc
sub
xchg
out
sbb
fnstcw
xchg
mov
jp
sub
lock
mov
mov
inc
imul
sub
je
mov
imul
out
adc
fsubrl
movsb
ret
jmp
loopne
sbbl
mov
sub
push
test
cmp
jl
fsubs
cmp
xor
cli
sbb
scas
je
shlb
daa
loop
mov
outsb
mov
ds
lds
mov
nop
mov
aad
in
jns
ljmp
rolb
mov
pslld
sub
repnz
clc
fld
cmp
dec
imul
pop
xchg
jle
jno
movl
inc
pop
mov
dec
out
and
subb
cs
push
scas
test
inc
aam
jno
xlat
fsub
ss
cmp
jae
xchg
cmp
mov
mov
add
jecxz
cld
ds
xor
lret
xchg
enter
pop
stc
ss
xorl
lods
jmp
xlat
out
xchg
mov
pushf
fisttps
pop
testl
mov
xor
inc
lds
xchg
sbb
sub
orl
dec
cmp
add
mov
jmp
or
mov
adc
xor
das
xchg
fistps
fistpll
ja
mov
andl
pop
neg
cli
dec
mov
push
add
mov
adc
nop
enter
mov
cmp
lret
jno
les
sub
jnp
sub
and
sub
adc
xorl
sbb
aas
push
sbb
aaa
sbb
jns
or
out
call
xor
mov
cmp
sti
dec
adc
mov
pop
loopne
mov
sub
or
mov
pop
xchg
mov
mov
sahf
mov
fwait
dec
cmpsl
popa
test
dec
fwait
mov
sahf
stos
xor
mov
ds
xchg
push
and
test
adc
rcrl
inc
nop
mov
mov
int
sub
insl
and
cmp
out
pop
inc
mov
sub
or
jno
push
xor
sbb
cmpsl
add
pushf
call
fstp
xlat
cmc
pop
repnz
pusha
data16
adc
leave
js
or
js
inc
sub
mov
xchg
mov
fwait
rorl
jbe
int
xor
sbb
mov
es
sbb
cltd
jge
mov
test
inc
int3
fdivrp
xor
lret
jb
pop
xor
test
sbb
jno
and
lret
popl
inc
fcomps
loope
iret
cli
js
jae
pop
and
pushf
outsl
test
push
iret
fcoms
cmpsb
sarl
rcr
jg
std
iret
popl
lods
cmp
arpl
mov
mov
mov
mov
imul
push
or
sbb
mov
js
xchg
xlat
xchg
scas
js
jg
cmp
adc
out
and
fcoms
testl
adc
iret
daa
loope
fisttps
mov
test
call
and
popf
cltd
dec
mov
mov
cli
sbb
sbb
nop
lods
cmp
gs
adc
out
pusha
lret
movhps
rcrb
addl
sub
in
mov
xor
inc
aad
sar
int
sbb
leave
or
pcmpgtd
fistpl
cmp
pop
or
jmp
cli
insl
fildll
arpl
fwait
sub
mov
nop
das
rolb
push
xchg
dec
adc
xor
push
scas
int3
or
jmp
mov
cmp
stos
add
int
out
adc
lret
pushf
mov
cmp
aas
jae
or
jb
dec
rcrb
stos
testl
mov
sub
lods
fldt
imul
xchg
fs
mov
pop
dec
rcll
mov
fldenv
sub
xor
inc
xor
pop
pusha
mov
inc
mov
shll
mov
pop
out
mov
or
data16
dec
jp
dec
or
mov
out
jns
dec
or
mov
xchg
fsts
sbb
aas
cltd
lcall
inc
mov
push
fiaddl
out
mov
lods
mov
pop
adc
sbb
int
push
push
cmp
aam
add
scas
arpl
and
repz
xchg
or
push
push
fdivs
sbb
lea
or
inc
cmp
mov
and
test
jae
daa
leave
jae
inc
rolb
push
jo
add
std
divl
sbb
add
push
push
xchg
push
mov
repnz
mov
add
into
cmp
or
arpl
sahf
inc
pop
cmp
add
sbb
push
adc
ljmp
inc
xchg
jp
mov
dec
bound
pop
cli
pop
rcl
dec
cld
xchg
jg
lea
adc
inc
push
loope
insl
testb
sbb
push
dec
repz
xchg
aaa
test
lret
das
out
adc
sub
popa
int
cmp
sbb
nop
mov
int
mov
dec
xchg
mov
or
add
mov
lret
insb
out
push
pop
fildll
movsb
mov
lret
lock
cld
aam
testb
inc
cld
pop
divl
push
jbe
dec
jbe
xor
cli
xchg
jl
sub
push
popf
test
sbb
push
add
cmp
fadd
pushf
ja
je
or
xchg
insb
xor
push
xchg
jl
addb
std
xor
dec
iret
out
cld
or
stos
mov
xchg
bound
cmpl
loopne
jbe
adc
xor
data16
pop
mov
pop
dec
outsb
shll
sbb
mov
lock
jmp
or
dec
jp
jecxz
arpl
push
stos
sbb
or
mov
in
mov
popf
mov
scas
xor
jmp
push
push
xor
xchg
adc
pop
xor
push
or
arpl
fs
xchg
in
dec
shlb
loope
aas
xor
jle
xchg
pop
fsubl
or
pop
loop
dec
cmpsb
test
cmp
cmp
add
push
mov
cwtl
pop
movsl
inc
sub
cmpsb
int3
fildl
xor
ljmp
sub
mov
rclb
leave
imul
and
or
jo
pop
xlat
jg
lcall
inc
mov
xlat
sbb
add
in
push
push
mov
cwtl
pushf
jl
dec
fsubl
mov
xchg
or
je
nop
fcom
sti
in
mov
hlt
jbe
ja
add
loopne
mov
mov
fwait
cwtl
add
out
loop
addr16
fs
into
mov
fbld
divb
jo
imul
xor
mov
xchg
cmp
addr16
in
lods
mov
xchg
scas
arpl
pop
xchg
ret
fldenv
mov
dec
dec
jnp
into
mov
shlb
add
decl
cwtl
outsb
pushf
ret
adc
lret
xor
mov
adc
dec
hlt
cld
lret
jnp
outsl
xchg
das
lret
rcr
xchg
pop
adc
dec
insb
pop
sbb
pop
xor
je
and
mov
scas
pop
pop
xchg
stc
xor
jnp
lock
ss
dec
inc
fcoml
xchg
pusha
jno
imul
daa
scas
xor
push
jne
orb
adc
loopne
call
hlt
mov
cmp
jno
arpl
das
fsubr
adc
adc
fidivrl
scas
pop
out
ret
popa
mov
arpl
int3
sbb
in
outsb
xor
aam
mov
outsb
inc
mov
push
sbb
arpl
fs
pop
push
mov
outsb
xchg
rcrl
ljmp
out
add
mov
inc
xor
adc
imul
movsb
mov
fidivs
clc
pop
aad
xchg
mov
cmp
push
xlat
mov
xlat
mov
jbe
add
jge
and
and
clc
cmpsl
orb
mov
add
mov
lret
dec
push
jno
and
pop
xchg
into
add
jbe
dec
inc
add
js
gs
shl
pushf
aaa
sahf
adc
cmp
cmp
shll
mov
in
icebp
sbb
push
pushf
sti
pop
jb
enter
cli
out
scas
mov
fucomip
xor
popl
mov
cmp
cltd
sub
sbb
test
lret
jg
mov
push
out
sbb
clc
icebp
fists
cmp
arpl
mov
repz
fucom
lcall
cltd
mov
outsl
sub
lds
pop
pop
pop
xchg
jns
jmp
jge
sti
movsb
scas
pop
or
addr16
rcl
sub
inc
rcrb
add
test
mov
je
ljmp
shrl
sub
fstps
fstps
gs
nop
inc
xchg
sbb
popa
aad
sbbl
fsubs
hlt
add
push
push
push
or
daa
push
push
ss
mov
fisttpl
lahf
cwtl
cs
pop
hlt
je
dec
dec
movsb
mov
fsubs
mov
imul
das
stos
push
jnp
lods
and
sub
jnp
je
cmp
ss
and
clc
mov
inc
jge
mov
mov
fcmovnb
les
sub
neg
push
cmp
out
jmp
add
gs
idivl
adc
dec
adc
jne
mov
xchg
rcrb
mov
sbb
insl
icebp
xchg
arpl
add
cmp
aaa
incb
pusha
cmp
add
aam
shl
jae
mov
xor
inc
add
ss
xchg
popa
fcomps
sub
sbb
and
test
cmp
enter
aad
divb
sbb
scas
sub
sub
push
movsl
lcall
inc
into
dec
andb
adcb
fs
fistps
sti
jp
insl
mul
adc
sarb
dec
imul
add
aam
cmp
push
and
aam
pop
mov
mov
push
jecxz
clc
scas
lahf
enter
cmpsb
push
and
or
cs
xchg
hlt
xchg
add
leave
lret
ret
in
lea
inc
in
outsb
and
mov
stc
adc
dec
jbe
es
jp
std
lea
push
or
xor
scas
pusha
inc
inc
pop
jge
pop
imul
shll
jo
fistpll
dec
lock
outsl
sub
inc
mov
jg
xchg
call
dec
shll
loopne
mov
xor
roll
and
mov
pop
jae
test
iret
fmull
ret
add
add
aad
popa
lret
fisttpl
xor
call
in
cltd
lods
shl
jg
xlat
scas
cmp
aaa
icebp
int3
cmp
or
xchg
ud0
pop
std
pop
sbb
lret
or
int
testb
inc
cmp
call
mov
sub
repnz
scas
andb
popa
push
or
aaa
stc
or
and
imul
outsl
sbb
xor
fldcw
cli
je
lret
jg
pop
std
or
adcb
sub
jecxz
mov
pop
scas
xor
adc
es
negl
fiadds
fcomip
pusha
pushf
in
dec
push
add
fidivs
in
popf
push
push
dec
push
mov
jle
cmp
jle
gs
imul
jo
push
xchg
out
lea
sub
mov
pop
dec
inc
orb
test
clc
scas
sbb
xor
pop
in
dec
in
mov
sarb
loope
and
sbb
sbb
mov
xor
push
rol
lea
mov
xor
sbb
subl
push
test
sarl
fstl
nop
das
aaa
xchg
out
movsl
dec
cmp
cmpsl
xchg
aas
jl
test
cwtl
and
pop
mov
into
add
pop
inc
add
inc
mov
ficoml
add
ja
test
iret
cld
call
xchg
in
jge
and
cltd
ret
adc
jns
sbb
mov
js
fisubl
sub
lret
push
aaa
scas
imul
dec
or
sbbb
sub
xchg
in
jno
cmp
pop
sub
mov
xchg
xchg
mov
add
mov
pop
cmp
xchg
cmpsb
cmp
and
pop
mov
daa
repz
pop
xor
ret
pop
sahf
cwtl
jno
iret
lret
shlb
xor
push
ss
and
loopne
add
addr16
aas
movb
add
fsub
pop
lea
lods
shrb
popf
pop
test
stos
rcr
xor
sub
and
mov
mov
fldpi
push
outsb
xor
inc
pop
dec
inc
movsl
frstor
cltd
arpl
push
dec
in
addr16
rclb
dec
std
push
mov
sub
pop
xchg
scas
cli
sub
xchg
ss
pop
add
cmp
imul
std
cwtl
sbb
sub
mov
xchg
in
or
pop
push
xchg
push
pop
lahf
sub
sbb
push
inc
and
jne
pop
pop
adc
sbb
js
pop
fcoms
lds
sbb
sub
jnp
add
xor
in
push
dec
cmc
fbld
xor
and
addb
cmpsl
sbb
pop
inc
mov
mov
cltd
repnz
int3
lock
xchg
jge
cmp
cli
lds
jae
outsl
paddd
mov
inc
cmp
call
jno
xchg
dec
adc
cmp
sub
loope
jae
mov
lea
imul
sbbl
mov
push
jnp
and
jb
add
and
jnp
popa
cltd
sub
ret
lods
repz
mov
iret
sub
dec
std
and
inc
push
cld
mov
insl
mov
fisubl
pop
or
ljmp
mov
xor
fildll
hlt
mov
sub
mov
or
rcrb
shll
out
sbb
fdivrs
test
rcll
jns
jge
scas
imul
push
xchg
dec
adc
cs
inc
push
push
cmc
cmp
in
xor
movsl
pop
inc
add
fimuls
inc
popa
int
mov
shlb
jg
repnz
inc
addr16
aas
scas
out
or
outsb
clc
ret
in
xchg
cmp
test
mov
lret
mov
lods
fucomi
push
pop
stos
call
dec
mov
inc
or
dec
jle
add
pop
movswl
pop
in
adc
rcl
je
aam
mov
call
jnp
cld
out
xchg
call
xor
sub
std
cmp
andb
mov
jbe
push
fstpl
jo
cmp
call
mov
lock
loopne
bound
dec
dec
es
fwait
loop
popf
pop
data16
xor
loope
mov
loop
sub
jno
popf
push
cld
dec
imul
sub
add
mov
inc
lea
pop
sbb
jg
add
xchg
popl
jp
mov
xor
stc
aam
sbb
subb
dec
orl
movsb
aam
cmp
daa
push
xchg
pop
pop
leave
jbe
jbe
daa
aad
xchg
bound
sahf
inc
imul
sarb
dec
or
fsubrs
mov
test
mull
mov
xor
mov
lret
push
adc
xor
push
ja
ret
cmp
inc
add
cltd
dec
daa
mov
jg
jno
add
mov
push
mov
js
or
xor
ja
cwtl
out
add
xor
and
jg
add
add
mov
cmc
xchg
push
test
popf
sbb
test
out
xor
pop
pop
mov
jb
add
cmp
sahf
mov
sub
or
ds
fiaddl
dec
mull
inc
in
push
jle
aad
push
push
ret
ljmp
es
fs
imull
add
adc
inc
jnp
push
mov
sub
ret
imul
inc
sub
sbb
je
out
aad
popf
loope
xchg
mov
xchg
jne,pn
adc
out
fidivs
loope
sbb
cmpsl
or
mov
stc
add
les
mov
mov
cmp
out
insb
pushf
rcrb
mov
loop
push
xchg
subb
lcall
ja
popa
lods
mov
ficompl
aad
pop
loopne
mov
test
mov
mov
mov
sbb
fwait
xor
leave
sbb
xchg
jns
rolb
testl
test
jge
mov
pop
jbe
jb
nop
jb
push
cmpsl
xchg
out
xchg
dec
jl
dec
adc
nop
faddl
mov
cmp
sarl
pushf
in
pusha
mov
stos
mov
insb
sub
jle
jns
adc
xor
inc
fstl
xor
fisubrl
daa
popf
pop
mov
iret
out
or
mov
lret
adcl
add
cs
fwait
cmp
inc
mov
orl
push
scas
in
pop
aas
loop
in
xchg
arpl
inc
inc
pop
cmp
in
jb
nop
stc
mov
or
push
push
icebp
sti
cmp
jg
mov
jp
jle
dec
cli
sub
mov
jl
sti
andl
hlt
or
stc
push
leave
fistl
lcall
aad
repz
fisttpll
neg
movsl
or
outsl
jp
pop
pop
das
cmp
gs
cltd
cmp
mov
fwait
hlt
cli
aad
out
iret
mov
popa
aad
jge
sub
popa
xchg
add
lods
addb
mov
or
sub
test
cs
xor
and
or
pushf
fs
into
addr16
push
dec
scas
push
mov
push
mov
pop
xchg
xlat
scas
es
es
xor
or
movsb
in
push
jg
popf
lret
ret
ljmp
adc
icebp
dec
pop
pop
or
test
xor
cmpsb
and
in
rorl
pop
xor
rcrl
push
mov
adc
aam
sub
int
lea
fwait
ret
push
add
sbbb
pop
mov
nop
mov
sahf
pop
outsb
mov
aam
sbb
in
rorb
pop
adc
sbb
xchg
adc
into
jb
mov
mov
stos
jns
hlt
test
in
stos
or
mov
sub
int3
clc
subb
jnp
inc
aaa
mov
test
out
sbb
pop
inc
mov
sub
into
sbb
dec
cmpsb
jb
mov
pop
push
xor
mov
xchg
xor
adc
lds
int
sbb
mov
aaa
xchg
out
mov
add
push
pop
cwtl
loopne
mov
lcall
pop
sti
push
inc
xchg
xor
add
sub
in
jmp
mov
gs
in
out
mov
mov
cmp
fs
mov
sbb
fcmovnu
mov
dec
mov
fld
pop
inc
mov
sub
xchg
nop
lea
jno
mov
pop
pop
in
roll
mov
pop
cmp
repz
jne
out
inc
cmp
std
mov
pop
or
outsl
fiadds
clc
rcl
js
mov
dec
cmpsl
push
aam
in
mov
jns
lsl
stos
sar
xor
mov
leave
fstl
xor
insl
push
addl
lahf
add
xchg
outsb
or
test
adc
jo
dec
bnd
sti
cs
into
shlb
outsl
pusha
mov
ficomps
mov
ficoml
das
jmp
test
out
movsb
mov
mov
push
mov
rcr
mov
cltd
add
add
cmp
les
lods
push
pop
jae
fsubrl
mov
mov
xor
mov
pop
sub
cwtl
cmp
xor
fisttps
mov
popf
pop
loop
xchg
jno
repnz
lret
ljmp
adc
test
aad
cmc
lahf
fdivs
or
mov
in
sbb
fsts
mov
outsl
cmpsl
or
mov
daa
cwtl
jle
pusha
in
xor
mov
or
jae
leave
mov
or
repnz
fldcw
lahf
cld
mov
mov
pop
pop
sub
lock
mov
mov
test
popa
xor
xchg
into
in
sbb
xor
pop
insb
iret
lock
mov
imul
nop
daa
inc
pop
xchg
push
lret
aaa
push
out
mov
mov
stc
dec
pushf
add
lcall
jmp
insb
cmpsb
xchg
push
arpl
mov
pop
and
loope
add
pop
jo
nop
leave
insb
sub
pop
cmp
inc
dec
mov
add
fisubs
lods
mov
jecxz
pop
mov
dec
into
xor
lret
mov
shrd
cmp
popf
fnstcw
bound
pop
adc
pop
ljmp
add
iret
enter
leave
lret
out
push
or
mov
add
add
lcall
out
push
xchg
and
dec
dec
out
xchg
and
test
xchg
daa
fists
rcrl
in
rolb
movsb
scas
out
dec
test
xchg
or
sub
mov
jmp
cmp
adc
or
out
aam
jp
fs
dec
shlb
jne
ljmp
jo
add
mov
stos
int
and
bound
cmp
insb
or
es
leave
imul
sbb
and
cmp
jae
ss
repnz
or
aaa
xor
fldl2t
sbb
jne
faddl
xor
fldlg2
test
lods
and
sbb
leave
or
int3
mov
or
stos
fisttpl
in
movsl
sbb
cmpl
fcmovu
dec
jne
ds
vphaddubw
sbb
repz
insb
cmp
inc
aam
mov
sti
mov
mov
mov
das
shll
out
xlat
mov
add
adc
cmpsb
fs
xchg
xchg
aad
fucomp
cltd
mov
jns
inc
cmp
jne
or
insl
lahf
leave
push
sub
xorb
cmpsl
pop
jo
mov
cli
and
fisttpll
dec
ljmp
loop
xor
mov
push
mov
or
and
mov
inc
mov
cmpsb
mov
dec
and
xchg
ret
push
sub
xchg
add
jecxz
or
sbbl
sbb
aas
xor
mov
mov
add
or
pop
je
jns
xor
out
movsl
outsb
int
test
mov
scas
ret
arpl
loopne
jp
mov
or
fs
push
dec
mov
adc
mov
cmp
cmp
cmp
cmp
dec
enter
add
pop
push
aas
mov
std
aaa
nop
xchg
mov
xor
ficomps
xchg
jp
jle
mov
push
cltd
lock
push
mov
sahf
ficoms
pop
ja
movsl
sbb
jb
xor
add
cwtl
pop
inc
pop
pop
adc
popfw
adc
fidivs
aas
in
jnp
arpl
sbb
push
push
in
dec
sub
push
cmp
push
dec
bound
jmp
jns
jmp
pop
push
add
mov
sub
adc
xchg
adc
pop
mov
insb
loop
stos
aas
jne
movzwl
imul
loop
enter
inc
dec
mov
xor
and
ss
cmp
or
loopne
add
movsl
neg
imul
sbb
das
mov
add
inc
popa
sar
jmp
popf
scas
inc
and
xor
adc
ret
insl
push
in
fxch
adc
addr16
daa
adc
inc
adc
push
or
popa
jmp
mov
mov
xchg
inc
xor
hlt
or
pushf
out
testb
das
inc
mov
jb
inc
out
adc
testb
leave
jg
mov
into
xor
into
flds
fucomi
lcall
lret
insl
js
sbb
fildl
push
jae
sbb
cmp
jmp
cmpb
imul
mov
in
push
sets
adc
sub
and
nop
int
bnd
fs
lcall
jbe
push
adc
fdivl
packssdw
mov
call
sub
insb
out
dec
stos
je
les
sbb
jno
fwait
adc
lds
push
in
mov
imulb
mov
sub
jp
lcall
insl
jmp
xchg
cmp
adc
cmp
mov
or
pop
loopne
shll
hlt
pop
les
leave
iret
cmpsb
jmp
push
cwtl
fsubrs
sbb
dec
rorl
cmpb
mov
add
arpl
or
push
rcr
sbb
call
std
pop
out
mov
push
cwtl
aaa
mov
dec
test
enter
jb
pop
push
aas
pop
test
lahf
jmp
sbb
imul
push
xchg
mov
sub
xor
mov
xor
xchg
ficoms
pop
mov
fiadds
test
int3
pop
or
jb
or
add
cmp
outsl
and
aam
je
mov
pop
lods
ljmp
pushf
outsl
jno
cmp
outsl
in
jo
out
arpl
test
loop
dec
fstl
pop
inc
jge
pop
mov
dec
aam
mov
call
fisubrs
jbe
xchg
iret
push
or
icebp
in
lcall
jnp
lahf
stos
push
idivb
or
or
enter
rorl
lea
cmc
cmp
mov
mov
mulb
ret
loopne
jno
jb
and
clc
sahf
pop
scas
fisubrs
and
scas
ret
dec
rolb
lock
out
adc
sub
imull
subb
mov
pop
fs
icebp
ficomps
sarl
loopne
pushf
inc
in
js
jb
cmc
sbb
push
negl
dec
mov
dec
mov
int3
xchg
xchg
in
adc
jge
leave
fldcw
or
in
mov
sbb
clc
mov
jge
inc
fwait
aas
push
call
ret
add
mov
dec
sub
es
dec
js
insl
sbb
jns
imul
sbb
sub
or
lret
xor
lea
jge
fcomps
adc
mov
outsb
xor
roll
sbb
mov
mov
add
jmp
dec
jmp
out
loop
xchg
add
pop
out
xchg
in
or
push
or
nop
out
imulb
sub
rol
cvtpi2ps
xchg
std
xor
negl
and
pop
pop
mov
inc
clc
jg
or
icebp
into
stos
add
int
out
sub
sub
bound
and
icebp
popa
jmp
out
xor
lock
push
push
xchg
pop
dec
scas
scas
adc
and
loopne
xchg
mov
mov
add
inc
push
into
dec
outsl
adc
xchg
or
test
ja
lcall
mov
xchg
inc
or
fmuls
pop
cmp
mov
cwtl
jge
push
and
mov
mov
jbe
cmpsb
popf
xlat
cmp
out
ja
ret
shl
gs
out
pop
std
push
xchg
lret
jg
inc
loop
jge
cli
mov
sub
sbb
cmp
or
jp
inc
shl
popf
xchg
scas
pop
shr
iret
shlb
mov
mov
dec
mov
sti
ret
pop
push
jmp
shrb
enter
push
xorl
test
mov
out
scas
sahf
aaa
or
ret
movsb
jb
imul
cmp
xor
sbb
je
test
add
jno
sbb
bound
sub
cmp
lods
jg
adc
cli
lods
lret
cmp
dec
mov
jmp
pop
xchg
fs
cmp
pushf
ret
call
xchg
clc
nop
push
loop
pusha
std
inc
cli
mov
lret
mov
pop
lods
sbb
scas
ret
in
int3
adc
add
cli
jne
outsl
adc
pop
bound
inc
rcl
mov
das
inc
aad
sbbb
and
mov
mov
movsbl
mov
loope
popa
mov
stos
push
outsb
sub
push
les
sbb
and
xchg
mov
cmpsl
roll
jmp
adc
aaa
cld
mov
inc
inc
dec
dec
push
xor
jbe
imul
mov
or
cmp
sub
push
push
push
mov
and
popf
push
mov
jg
insl
movsb
fxch
inc
pop
mov
dec
push
jp
stc
pushf
ja
hlt
mov
arpl
fwait
shll
adc
sub
adc
mov
lcall
inc
and
add
aaa
stos
addr16
mov
data16
mov
sbb
les
push
and
mov
movsb
aas
mov
jg
decl
or
sub
jne
inc
jb
in
jno
cmp
adc
stc
push
icebp
push
cltd
adc
stos
jo
in
push
test
rcll
emms
rol
mov
jmp
adc
pusha
mov
test
and
lods
mov
pop
dec
clc
inc
dec
mov
cmp
jle
and
mov
push
and
push
movnti
pop
and
xchg
adc
out
push
repz
and
add
push
mov
push
dec
pop
leave
push
xor
popa
mov
stos
push
inc
scas
inc
shrb
sbb
mov
shrl
mov
fxch
jmp
push
mov
sarb
pop
mov
jp
jle
dec
xchg
jne
sub
repz
je
jae
sub
adcb
push
jbe
shlb
lahf
insb
sub
icebp
je
cli
xor
mov
add
testb
inc
sub
movsb
sarl
test
pusha
mov
aad
loop
out
adc
jecxz
mov
dec
mov
adc
inc
lods
pop
dec
std
dec
pushf
lock
scas
fisubs
outsl
mov
aam
jge
pop
or
in
sbb
adc
lods
jg
test
push
sahf
pop
nop
cmp
pop
inc
int3
add
dec
into
mov
xchg
lods
scas
das
cltd
jb
fisttpll
fiadds
nop
int
sub
sbb
fcomp
outsl
mov
rcrl
nop
adc
pop
and
or
scas
in
xor
inc
imul
cmp
mov
cli
mov
and
xor
jg
enter
push
fisttpll
call
push
test
loopne
push
and
nop
add
lods
rcr
cmp
fdivr
jb
cmp
mov
push
movsb
aas
rcl
push
xchg
sbb
adc
adc
out
je
pop
add
xchg
jmp
jne
sbb
outsl
fcmove
adc
mov
xchg
aas
popf
cmc
les
in
push
popf
adc
roll
mov
call
fimull
dec
cmp
imul
jl
call
dec
push
leave
mov
sbb
and
xchg
inc
xchg
dec
je
and
xor
cmp
pop
mov
pop
imul
jnp
arpl
pop
mov
sbb
mov
nop
pop
dec
iret
mov
mov
scas
inc
cmpsb
cmp
adc
cltd
pop
jg
repnz
push
adc
scas
shlb
sub
cmp
push
mov
mov
xchg
or
pop
jns
leave
and
add
js
call
std
lea
mov
sub
fdivl
inc
inc
or
shrb
add
push
inc
rcrb
add
xor
or
ret
mov
xchg
jns
xor
lods
dec
lcall
cltd
push
and
cmpsl
push
aad
sbb
sub
je
and
adc
add
jb
lcall
cmp
fwait
xor
shrl
xchg
push
push
cmpsb
jne
stos
mov
push
xor
xchg
jge
pop
je
jle
les
mov
push
stos
xchg
out
push
sub
xchg
sbb
adc
jae
cwtl
dec
cs
adc
pusha
sti
sbb
dec
test
mov
push
xor
mov
push
adc
dec
in
imul
insl
or
xchg
adc
loop
enter
cmc
fdivs
data16
jg
arpl
enter
stos
cli
push
int3
in
sbb
mov
sahf
cmp
jne,pn
inc
mov
dec
int
mov
adc
xor
xchg
mov
out
jns
lahf
iret
sarl
cmpsb
xchg
pop
and
push
scas
inc
out
ds
rorb
cmc
decb
xor
mov
subl
add
cmc
jge
push
pushf
imul
das
cli
dec
pushf
xchg
orb
sbb
sbb
inc
pop
sti
int3
mov
int
out
loope
mov
adc
push
sbb
pop
shlb
icebp
and
mov
mov
or
andb
sbb
jo
push
cmp
movsl
adc
dec
inc
insb
jle
test
inc
jl
cs
fstps
cli
and
ret
sbb
push
mov
pop
sbb
xor
aam
jg
imul
mov
loop
pop
subl
mov
inc
jge
rclb
cmpsb
xorb
pushf
mov
in
dec
test
shlb
bound
dec
cltd
cmc
je
and
or
fcmovnu
outsl
mov
test
in
sub
xchg
jns
int
stos
inc
jl
in
lds
sbb
das
inc
pop
movq
loope
popa
jmp
jmp
add
fadds
lock
stc
sti
out
adc
xchg
xchg
pop
js
and
imul
pop
stos
or
mov
ret
or
jl
jmp
xchg
mov
mov
rorb
xchg
cmp
or
pop
fld
jno
sub
nop
cmpsb
sar
out
daa
scas
push
into
sub
subb
push
xor
outsb
add
and
and
pushf
popf
jecxz
fs
cs
push
adc
cmp
push
arpl
loope
mov
js
jns
mov
add
push
mov
sbb
repz
mov
jle
fprem
mov
inc
and
imul
fs
jle
add
jge
fsubrl
in
sub
pop
inc
mov
sub
addr16
outsl
rclb
fidivrs
xchg
pop
outsb
gs
insb
jmp
mov
add
adc
inc
mov
jg
push
xchg
mov
or
cmp
mov
jmp
shll
mov
lock
push
mov
jge
fistps
mov
inc
pop
xchg
sbb
rclb
scas
outsb
out
push
out
out
movsl
addr16
dec
lods
mov
repnz
pushf
sarb
jge
mov
mov
cmp
dec
repnz
popf
mov
sub
test
xor
sub
cmpsl
sub
shlb
ret
mov
es
push
or
and
dec
jg
push
fstpt
faddl
add
sub
out
rcr
cmp
jmp
and
pop
push
insb
mov
mov
out
mov
sub
cli
fiadds
push
sbb
dec
hlt
sti
cli
sbb
jae
mov
mov
or
xchg
ds
pop
push
jmp
or
movsb
jecxz
jbe
bound
fistpll
mov
fadds
pop
mov
andps
loope
add
mov
mov
mov
ret
aaa
stos
jnp
mov
dec
xchg
ja
mov
repz
inc
push
dec
xchg
aaa
fdivrl
insb
sbb
xchg
loop
loope
xchg
sub
aam
insb
repz
mov
clc
push
enter
sub
inc
add
xor
into
mov
mov
jo
addr16
andb
pop
cli
mov
scas
jno
push
aaa
rclb
mulb
and
leave
xchg
xchg
stc
jno
arpl
cmp
xorl
sub
jns
jb
dec
shll
push
fisubrl
pop
aaa
cmpsl
mov
and
inc
rorl
jmp
test
or
xor
push
mov
jo
dec
mov
ljmp
cs
repz
lahf
int
xlat
lret
adc
loopne
repnz
pop
mov
dec
xchg
cmp
call
pusha
cmp
or
adc
jns
int
lds
inc
fsubr
and
dec
cmpl
jo
int
jno
dec
movsl
mov
mov
dec
lret
in
ljmp
int
mov
cli
les
frstor
mul
push
cmpsl
add
pop
lahf
test
dec
or
dec
and
push
fnsave
sbb
icebp
push
xor
sbb
aam
imul
xor
int
aam
xor
iret
inc
sarl
adc
jecxz
pop
lock
pop
int
aad
pop
dec
sub
jecxz
insb
test
nop
jmp
adc
xor
xor
add
add
jp
rol
frstor
fucom
lods
ror
mov
sub
jo
jl
jl
pop
push
jns
dec
dec
test
xchg
scas
pop
test
push
in
pop
test
stc
dec
aas
sarl
outsl
cmp
push
push
sahf
lods
dec
ljmp
bound
stos
and
aad
and
mov
jmp
js
xchg
ds
outsb
icebp
enter
out
adc
jno
cmp
arpl
pop
outsl
mov
out
imul
push
lock
bound
xchg
ss
sub
mov
jle
iret
call
enter
shr
jecxz
int
or
sub
cmp
js
ret
add
mov
lcall
mov
xchg
mov
andps
or
and
xor
or
or
fs
scas
pop
xor
add
notb
je
ret
lret
daa
aad
inc
dec
fwait
test
pop
idiv
pop
popa
pusha
sbb
mov
test
jo
fbstp
cli
bound
outsl
push
pop
inc
aad
ss
pop
xchg
dec
imul
clc
inc
fisubl
test
jg
test
pop
lahf
ljmp
rcll
mov
inc
ret
fsubp
ljmp
js
repnz
psubsw
insb
mov
adc
cld
lret
or
inc
test
sbb
pop
pop
test
insl
inc
lods
or
lahf
leave
fnstcw
or
cmp
or
dec
dec
sbb
test
jl
dec
sub
sub
adc
lahf
cmpl
aam
aam
push
jle
inc
icebp
enter
jecxz
test
ret
xor
push
adc
fstps
cmpsb
sub
into
pop
adc
fisubrs
popa
js
cmp
mov
bound
cwtl
test
cmpsb
in
ret
out
jns
and
pop
faddl
mov
bound
sub
stc
dec
and
movsb
and
pop
into
push
xorb
ljmp
xchg
sub
jg
or
in
pop
sbb
fisttps
mov
sub
repnz
into
xlat
fmuls
lret
daa
mov
je
or
push
popf
mov
jb
xchg
push
addr16
rorb
int
je
int
aas
in
cmpsb
mov
add
jg
xchg
push
dec
lock
jecxz
mov
jge
xlat
shlb
dec
pop
or
jle
loopne
or
adc
sub
cmp
sahf
sbb
adc
adc
je
mov
mov
push
sbb
cwtl
adc
or
call
mov
and
ja
pop
in
sbb
jmp
push
pop
cld
mov
mov
out
jno
or
jmp
push
inc
lock
xor
in
xor
mov
xor
jmp
cmp
and
repz
lcall
cmp
jae
fucomi
scas
pop
mov
fdivr
pushf
or
dec
aam
mov
mov
mov
pop
push
pop
add
arpl
nop
and
mov
ds
lea
or
and
aas
ljmp
sbb
mov
pusha
cmp
lea
out
jno
ret
int3
pusha
loop
iret
loopne
and
clc
addr16
and
and
sub
xchg
dec
ljmp
mov
push
mov
out
or
pop
out
adc
and
add
xchg
mov
aad
mov
cltd
movsl
ret
idivb
fcomps
mov
imulb
sub
rorl
inc
bound
mov
or
into
daa
test
frstor
arpl
push
cmp
cmp
fstl
inc
or
push
xchg
lret
ja
add
mov
in
imul
call
and
mov
test
je
lcall
outsb
mov
pop
jns
xrelease
jb
lds
xor
and
push
sahf
jo
fcmove
pop
jnp
inc
mov
adc
push
out
test
nop
mov
lods
jbe
inc
push
inc
jns
pop
popf
imul
mov
and
and
jnp
mov
adc
test
repnz
mov
mov
mov
jne
insl
mov
jle
add
jbe
mov
push
mov
testb
test
xor
test
cli
in
fcomps
push
mov
popf
pop
cltd
jp
cmp
sbb
rorl
mov
mov
test
dec
add
outsb
adc
repz
stc
mov
jmp
jmp
jle
sbb
or
push
popa
push
mov
rclb
fistpl
dec
popf
mov
flds
into
loope
xor
jno
test
sbb
jnp
loope
addl
scas
sahf
in
and
fs
sub
mov
sbb
xchg
loope
jb
mov
sbb
mov
or
movsb
repz
lods
xchg
pop
shll
into
in
arpl
pop
in
xchg
mov
clc
jb
stos
mov
popf
sbb
push
ret
cmp
lcall
sub
nop
mov
mov
jg
lea
pop
or
popf
aas
cmp
dec
and
cmp
icebp
popf
xchg
jmp
xorb
inc
pop
pop
dec
jmp
xchg
scas
insl
and
out
lret
pop
int
out
cmp
push
jno
pop
add
jo
scas
or
mov
sub
dec
imul
cmp
ror
xor
adc
dec
sbb
lds
aad
lahf
or
inc
push
fiadds
jl
in
jne
dec
sbb
dec
inc
mov
sbb
popa
mov
cmp
inc
mov
mov
ljmp
inc
addl
dec
jo,pt
cwtl
jne
mov
divl
push
jl
ret
add
jecxz
push
and
mov
adc
in
mov
test
cmp
andb
inc
ret
inc
cmp
or
pop
jbe
jmp
cwtl
std
lods
mov
xchg
pop
xor
pop
push
push
mov
sub
xor
daa
adc
lret
mov
sarl
xor
fdivl
jmp
xchg
xchg
sarb
pop
xor
popf
clc
gs
jmp
sarl
popf
or
scas
fnsave
adcl
aas
mov
out
outsl
pushf
das
inc
mov
dec
xchg
enter
inc
mov
cmp
jns
aaa
jb
sub
add
stc
inc
loope
cmp
jl
or
inc
lock
pop
pop
dec
inc
jg
test
push
lahf
cmp
pop
bnd
loope
push
xchg
xor
loopne
sbb
adc
lret
ret
mov
incl
fidivs
daa
jne
imul
or
push
sub
les
sbb
stos
orl
mov
mov
xor
out
enter
sub
cwtl
push
jle
nop
aad
sbb
repnz
xchg
mov
loop
in
incb
les
push
fs
sub
call
mov
mov
sahf
add
dec
in
cltd
sub
outsl
movl
inc
ret
cmp
mov
jmp
loope
nop
mov
add
or
adcb
jns
and
add
call
cmp
and
pop
inc
sub
leave
std
dec
adc
dec
gs
mov
aam
mov
adc
insl
scas
sti
cs
sti
adc
dec
push
insb
xorb
fsubrs
push
xor
sbb
add
popf
sbb
incb
push
push
aam
and
cmpsb
movsb
dec
jnp
jne
je
aam
or
inc
mov
dec
dec
xor
test
sarl
mov
insl
lret
aam
jmp
or
inc
xchg
push
aad
int3
xchg
xor
mov
jmp
gs
lods
jne
sub
clc
pushf
xchg
cmp
push
inc
pop
clc
cld
aas
fstl
jl
xchg
bnd
shll
addr16
jmp
mov
mov
dec
adc
inc
dec
ss
sub
mull
mov
clc
xor
mov
mov
sbb
in
aaa
push
push
mov
mov
clc
push
mov
andl
rol
addr16
rcll
pop
jbe
fs
ljmp
sbb
mov
fucomip
add
idiv
negl
mov
clc
and
shlb
bnd
inc
and
lret
pop
inc
repnz
rcll
bound
loop
popf
test
sbb
enter
cmp
add
cmp
int
cmp
fdivr
inc
mov
stos
aad
outsl
push
cmp
mov
mov
adc
lret
xor
adc
pause
test
pop
sti
lea
fisubs
scas
stc
mov
cli
arpl
sbb
mov
test
dec
cmpsl
pop
xor
cwtl
dec
xor
add
pop
stc
ss
daa
cmp
and
dec
add
and
adc
mov
outsb
push
stos
xor
mov
popf
ret
outsl
aaa
mov
movsb
loopne
nop
xchg
mov
xlat
mov
fldcw
pusha
xor
cmp
push
outsl
scas
jae
xchg
shl
or
mov
push
jg
mov
mov
icebp
pushf
out
mov
out
push
add
add
fs
fistpll
cmpsl
in
pop
subb
adc
dec
scas
fldt
ret
sub
hlt
test
call
mov
inc
dec
in
dec
mov
cli
fidivrl
add
add
dec
cmp
sbb
fmuls
in
leave
sbb
addb
sbb
mov
test
mov
jle
rcll
shrb
lret
es
jmp
and
paddsb
clc
pop
lods
pusha
repnz
test
daa
mov
insl
dec
aaa
or
pop
xor
adc
pop
mov
clc
ret
dec
pop
add
pop
or
jns
xchg
and
addr16
adc
and
pop
out
dec
repnz
mov
pushf
inc
jl
jo
sbb
mov
fwait
lds
xor
cli
push
js
push
sub
outsb
and
loope
xorl
data16
shlb
test
and
mov
and
aaa
ret
hlt
xchg
mov
inc
xorl
int
out
adc
scas
pop
into
fiadds
in
mov
jmp
repz
dec
jge
sub
inc
in
sahf
mov
mov
mov
mov
inc
cltd
mov
lods
loope
rcrl
out
shlb
movsb
mov
je
imul
shlb
repz
push
test
mov
xchg
popf
or
adc
bound
push
pop
fidivl
in
xlat
sbb
rcrl
pop
rorl
ds
add
clc
mov
fcoms
add
les
sub
rorl
push
mov
mov
push
xor
mov
and
mov
sub
pslld
movsb
jae
popf
sahf
nop
imul
sub
xchg
shrb
push
das
push
sbb
mov
outsl
fwait
xorb
inc
rcrb
xor
and
icebp
scas
subl
xlat
leave
dec
mov
popf
fs
das
pop
fisttpll
call
nop
cwtl
xchg
xchg
sarb
es
mov
adc
jns
mov
jmp
in
cmp
movb
cmp
mov
push
scas
aaa
lret
fs
pop
insl
inc
adc
pop
jecxz
cmpsb
jle
jp
pop
rcl
in
incb
fwait
hlt
insb
cwtl
xchg
pusha
mov
cmovle
or
cmp
and
or
push
gs
loope
ret
fists
xchg
lret
cmc
or
inc
je
frstor
cmp
out
sbb
inc
push
mov
fdivrl
stc
lods
std
clc
xchg
mov
lcall
mov
insb
push
fisttpll
aam
cmp
insl
inc
and
xor
lahf
test
inc
test
jle
mov
icebp
jmp
out
icebp
rorb
pop
jns
mov
or
xor
test
mov
adc
pop
push
mov
das
fisttpl
add
xchg
fcmovne
push
loop
and
add
cmc
cmp
das
fisubrs
test
lcall
sbb
mov
pop
xlat
jo
xor
mov
push
aad
enter
or
jbe
inc
sbb
dec
adcb
nop
lcall
int3
es
in
or
out
sarl
add
cmp
sti
pop
or
jne
dec
lods
insl
and
arpl
pusha
rcrb
xor
adc
cmp
insb
icebp
call
push
insb
test
lods
push
add
test
xchg
jl
gs
or
lret
fmul
rcl
shll
pushf
mov
mov
sbb
dec
nop
pop
xor
test
or
lret
mov
ret
std
pop
mov
pop
fstpt
cmp
mov
repnz
adc
and
add
push
add
inc
push
cmp
mov
fdivr
mov
push
es
stos
pop
imul
and
in
and
xchg
mov
test
and
and
push
out
mov
sub
insl
bound
orl
frstor
test
cwtl
sbb
daa
sub
push
scas
nop
mov
pop
cmp
dec
cmp
out
pop
xchg
adc
xor
add
insl
ret
lea
push
sahf
test
ds
jae
mov
sbb
out
cltd
xchg
push
fsts
cs
push
adc
not
mov
sub
lods
adc
roll
mov
or
mov
out
jb
les
shrl
in
dec
lahf
leave
movl
xchg
ss
jmp
adc
out
mov
gs
lret
in
iret
mov
sbb
and
push
push
outsb
xor
push
adc
addr16
jb
aas
push
xor
repz
mov
dec
leave
movsb
push
push
pop
std
jne
mov
mov
adc
sti
jp
or
cltd
in
cli
cmpsb
mov
or
ljmp
xor
rorb
push
xor
fnstsw
imul
inc
or
or
lds
sub
pop
insl
jb
mov
pop
cmp
adc
mov
loopne
repz
push
mov
dec
xchg
daa
jo
out
sbb
icebp
sub
cltd
pusha
arpl
dec
add
outsb
orl
mov
xchg
pop
mov
loopne
mov
xor
sub
cwtl
cld
pop
jp
sbb
cmp
insl
movsl
inc
cmpb
imul
insb
cmp
xchg
in
sub
lcall
mov
jle
ud0
sbb
mov
in
xchg
out
stos
addl
xor
addr16
cmp
mov
mov
or
dec
jmp
inc
push
fs
jae
push
outsb
lds
adc
jae
stos
icebp
int
push
pop
inc
mov
add
pusha
es
jecxz
sub
arpl
ljmp
cmp
fsubs
mov
aaa
cld
hlt
pop
ds
int3
fst
sub
cld
es
repnz
shr
ss
ds
inc
sbb
jo
cmp
daa
mov
pop
out
cli
adc
and
push
mov
test
aam
rcr
cmp
sbb
pop
inc
add
jbe
sub
icebp
jae
add
dec
jmp
test
flds
jno
ds
outsl
and
test
jp
lcall
xor
add
push
xchg
lods
movsl
fwait
push
sub
inc
jle
in
pop
mov
sti
cmp
mov
cmp
jne
fld
xchg
rorl
neg
dec
push
xchg
popf
jecxz
jl
pop
and
fldl
insb
pop
movsb
inc
in
push
adc
xor
adc
cwtl
or
dec
push
inc
das
jae
xchg
imul
jle
int3
push
mov
jb
lret
out
clc
sbb
test
mov
lods
xor
mov
outsl
popa
pusha
jo
fsts
jle
fisubrl
xor
ja
xor
cmc
or
pop
push
inc
sbb
add
lock
aam
test
jmp
jne
mov
or
cmp
popa
into
out
xchg
ja
jl
out
mov
lret
xor
mov
loope
fiaddl
rcl
cmpsb
ret
mov
js
push
cmc
jnp
icebp
stos
mov
fs
jo
push
xor
sbb
inc
push
cwtl
popf
jo
push
dec
and
cwtl
push
push
push
push
clc
mov
lods
mov
xor
enter
mov
add
mov
fsubrl
push
push
nop
mov
fstpt
lea
pushf
mov
out
push
sub
or
lods
dec
push
adcb
add
aaa
mov
clc
insl
mov
cwtl
xchg
jns
jbe
add
push
pop
mov
jno
push
leave
and
leave
mov
lods
mov
aad
mov
xchg
cwtl
adcb
fbld
andb
jmp
add
std
pop
pandn
cmp
adc
rol
shll
into
jb
cmp
add
lock
push
or
sbb
push
pop
cmp
push
cmp
test
add
jl
inc
xchg
xlat
sbb
lcall
jnp
mov
sbb
inc
iret
pop
push
push
ss
sbb
cli
mov
mov
cmp
jl
lods
cmpsb
push
int3
push
xor
insb
mov
ljmp
dec
jae
cmp
jbe
mov
cwtl
or
inc
sub
sub
inc
jge
cwtl
in
in
negl
mov
lret
sbb
inc
push
pop
or
ret
bound
popf
aam
xchg
and
in
and
xchg
jne
jnp
loop
mul
in
out
pop
repz
andb
insb
loop
mov
cmpsb
out
xor
cwtl
push
jns
fsts
and
dec
cmp
loopne
fnsave
punpckhwd
adc
and
push
mov
fwait
jns
cmp
xchg
mov
xorb
jmp
cltd
fmul
xor
add
mov
mov
mov
cltd
jne
aas
and
mov
test
mov
bndcu
jno
jo
in
test
add
loope
aam
pop
dec
call
out
insb
inc
cld
hlt
imul
adc
call
jmp
std
repz
out
fists
or
push
cmp
hlt
xor
int3
or
fcompl
jge
mov
xchg
push
lods
faddl
out
fwait
clc
sarl
push
sbb
mov
imul
inc
hlt
jno
aaa
or
adc
pushf
out
cmp
mov
mov
ljmp
dec
or
lock
add
and
outsl
push
lret
and
sub
xchg
mov
inc
cwtl
or
sbb
pop
cmc
or
cmp
dec
ret
sarb
jmp
leave
ja
cmp
mov
in
sbb
mov
cmpsb
xchg
cs
lds
lret
imul
inc
jp
fwait
out
xor
int
mov
imul
xchg
in
lret
inc
loopne
xchg
std
xor
imul
dec
fisubrl
std
sub
xor
push
shl
xchg
mov
fdivs
test
in
int3
sti
mov
push
xor
or
sub
rcl
xlat
sarl
mov
int3
in
aad
or
fs
pusha
or
mul
in
add
loope
cmp
mov
cmp
cwtl
xor
sbbl
or
in
mov
push
pusha
jno
sti
push
cmp
divb
test
dec
fnsave
clc
push
stos
pop
inc
movsb
imul
mov
mov
mov
popa
cmpsb
ljmp
loope
fwait
icebp
add
push
sub
xchg
out
stos
xchg
xor
mov
je
xchg
arpl
push
dec
or
or
jno
enter
adc
fiaddl
cmpsl
lcall
ss
jne
xor
dec
sub
sub
xchg
mov
leave
cmp
sbb
in
imul
xorb
sbb
stos
and
dec
xlat
stos
repnz
cli
pushf
in
xor
jae
mov
xchg
mov
xor
xchg
subb
jns
cmp
jns
std
xchg
aaa
mov
or
and
mul
ljmp
pop
out
mov
test
shrb
cmp
inc
add
arpl
jae
mov
mov
ss
stc
push
pop
mov
sbbl
cmpsl
dec
xor
hlt
dec
or
es
sbb
pop
sahf
fcompl
adc
xchg
aad
fcomp
fxch
sub
data16
jp
mov
push
fwait
in
sbb
jl
jp
sbb
lods
and
icebp
or
movsl
jo
flds
cltd
jl
in
test
dec
xor
lods
mov
ja
imul
mov
xlat
popf
mov
sub
push
cmp
fisttps
pop
cmp
stos
mov
mov
lret
jecxz
pop
loope
cmp
xchg
sub
pop
cmp
mov
test
stos
xchg
movsl
mov
add
popa
lock
jmp
repnz
pop
mov
addr16
mov
push
out
xchg
xlat
jne
ljmp
loope
jg
xor
pop
xorl
xor
pop
ds
std
das
mull
test
divl
lds
in
loop
fcoml
dec
push
lock
in
lds
clc
ss
fs
add
cmp
xlat
inc
dec
sbb
repz
xchg
push
arpl
inc
xchg
mov
inc
xor
xchg
xchg
mov
add
sub
iret
test
test
and
imul
xor
mov
adc
sbb
loopne,pt
lods
sahf
daa
imul
push
or
mov
addr16
hlt
daa
ds
fwait
iret
fidivs
shll
imul
sub
mov
rorl
out
pinsrw
mov
add
sub
sti
fsubl
cmp
imul
inc
mov
xor
not
sbb
in
les
das
frstor
xchg
push
mov
dec
repnz
sub
insl
mov
jb
pop
clc
sub
movsb
inc
xor
or
stos
sbb
stc
pop
aas
nop
sbb
inc
jmp
outsb
jecxz
dec
mov
shrb
cmp
adc
bound
mov
fisttpl
jb
int3
popf
stos
ja
jl
inc
lock
into
push
or
aad
jmp
mov
add
dec
shlb
arpl
adc
jmp
pop
xchg
add
sti
and
pop
std
cmp
mov
cpuid
rorb
add
mov
sbb
jnp
in
aaa
inc
gs
out
and
xor
mov
jmp
xor
dec
pop
mull
ja
lods
rol
xchg
pop
push
jae
sub
pushl
cwtl
dec
xlat
push
jg
pop
dec
and
pop
cwtl
push
mov
ret
jmp
dec
jns
mov
popf
out
add
jns
dec
adc
sarb
fldl
fimuls
ds
fwait
xor
dec
test
or
lock
sub
mov
mov
lods
adc
iret
into
xor
pushf
sbb
sub
jge,pt
movl
mov
cmp
mov
in
in
test
sti
push
inc
inc
les
cli
subl
cmpsl
xor
stc
cli
cmpsl
pop
jmp
push
mov
test
jno
or
gs
pop
cmp
xchg
pop
add
cmp
aaa
cmp
sub
or
mov
cmp
adc
cmp
imul
and
cmp
bound
lea
sarb
jbe
lret
jno
fsubrl
sub
or
mov
arpl
xor
dec
xlat
pop
push
imul
pop
clc
dec
push
xor
loopne
inc
xor
pop
mov
lea
int
rol
call
or
sti
inc
jg
cli
mov
push
pusha
sbb
in
inc
xchg
push
rolb
ljmp
lret
mov
call
pop
aad
cmp
dec
push
and
stos
scas
loope
sbb
xor
popa
sti
mov
int
popf
cwtl
ret
leave
cli
fstpl
add
das
aas
pop
jge
dec
push
add
js
jmp
sub
mov
mov
mov
jns
imul
decl
sub
push
test
ja
and
push
aaa
sub
je
fucomip
push
mov
xchg
mov
lds
ja
dec
pop
and
ja
ljmp
push
insl
lahf
add
jb
adcb
pop
cmp
adc
jno
scas
into
imul
lret
add
pop
ljmp
imul
scas
mov
jns
aas
in
repz
pushf
inc
int3
or
xor
and
in
out
in
and
loopne
sub
adc
ss
jns
xor
int
adc
inc
pop
mov
cld
iret
stos
mov
pop
dec
add
sbb
cwtl
stos
imul
sub
dec
adc
mov
mov
mov
pop
push
inc
das
xchg
push
pop
aaa
movsb
sbb
out
aad
test
dec
push
lds
je
jne
test
push
test
cld
sub
jb
mov
mov
dec
nop
xor
ja
xlat
imul
fdivrs
test
les
sbb
sysenter
and
out
in
mov
and
mov
rorb
dec
lea
mov
jns,pn
nop
push
xor
jb
mov
dec
pop
lcall
xchg
addr16
and
addr16
dec
js
push
sahf
cmc
sbb
into
hlt
pop
sub
loop
outsl
and
cltd
sub
mov
mov
mov
js
stc
jg
repz
sti
out
xor
jo
push
stos
jo
sarl
inc
xchg
in
insl
movsb
jl
shl
xorb
pop
into
add
loop
shrl
pushf
test
jne
jge
lret
cmpsb
push
pop
scas
jne
and
call
xchg
jge
cmp
jo
das
mov
jb
mov
outsb
fimull
mov
add
enter
pop
fisubs
fsubl
sub
pop
pop
int3
push
add
pusha
outsl
insl
or
test
adc
xchg
pop
or
mov
je
loop
fisubs
lods
xor
mov
push
or
repz
pop
adc
add
mov
sbb
push
roll
jns
cwtl
fistpll
in
imul
sub
aam
inc
inc
xor
fiadds
jbe
aam
jecxz
das
lret
bound
cmpl
outsl
cmp
fs
push
out
mov
lret
iret
mov
add
cmp
cli
pusha
in
dec
loopne
out
mov
ss
xchg
mov
xchg
test
fs
lret
mov
aas
fmul
xor
inc
sub
icebp
xor
insl
adc
pop
sbb
ja
clc
aam
repz
mov
inc
xor
nop
dec
pushf
pop
xchg
cmp
sub
enter
sarb
roll
aad
cmp
sbb
in
andb
jg
xor
lods
scas
xor
dec
jl
outsl
cmp
lods
jp
fdivl
lcall
xchg
cmp
subl
or
pop
out
xor
xchg
icebp
xlat
cmpsl
or
in
in
push
clc
sbb
daa
out
sbb
sub
mov
sub
push
test
mov
add
inc
data16
adc
popf
ss
cmc
dec
cmc
ja
lods
daa
mov
pop
scas
lods
mov
in
outsl
mov
push
cmpsl
xchg
mov
mov
cmp
jmp
pushf
or
and
push
mov
loopne
fwait
test
int3
add
scas
mov
sbb
int3
pop
jecxz
ret
lret
dec
mov
orb
dec
jo
xor
stc
cltd
xchg
outsl
sbb
or
sbb
push
je
xchg
or
out
adc
jb
movsl
adc
xor
frstor
scas
and
and
mov
cs
pop
imul
insb
decb
sbb
jle
gs
bound
cld
gs
mov
data16
sub
sbb
in
mov
ja
nop
fs
dec
inc
dec
jle
adc
fwait
jnp
lods
sarb
dec
add
sbb
jge
add
jge
fbld
add
and
es
es
mov
jmp
popa
pop
xchg
in
mov
or
flds
mov
in
mov
mov
outsb
xchg
fdivr
ljmp
xchg
repz
push
mov
or
sahf
fcmovnb
fiaddl
sub
sahf
inc
test
call
adc
or
mov
out
ja
outsl
daa
leave
lahf
adc
dec
roll
xchg
and
lcall
into
fmull
rorb
mov
aaa
lea
fwait
dec
sub
cs
or
mov
ljmp
mov
rclb
lea
mov
cltd
add
bound
inc
out
mov
adc
insl
outsb
lods
jg
jle
mov
or
mov
push
shlb
adc
xchg
mov
lret
mov
fdivrl
adc
sbb
ret
mov
das
shlb
leave
dec
cmp
add
mov
test
test
xor
dec
mov
sahf
sbb
add
call
xchg
mov
sub
sti
movsb
cli
cmp
stos
xchg
lret
leave
pop
xchg
xor
out
ret
mov
gs
xlat
int
test
ja
cmpsl
rcll
lahf
adc
shlb
xchg
mov
out
xchg
or
sbb
popa
mov
jno
or
xchg
and
mov
arpl
push
enter
pop
dec
out
xchg
jne
bound
mov
loopne
mov
rcl
sbb
fidivs
scas
dec
jmp
or
arpl
dec
xorl
jge
jns
leave
mov
test
jmp
and
mov
pop
test
cld
out
outsb
js
mov
sbb
mov
push
ljmp
and
sub
stos
cmp
out
clc
push
pusha
or
and
adc
imul
mov
dec
dec
jno
inc
jle
mov
pop
sbb
lea
jnp
jp
les
aaa
aam
push
jp
push
out
and
or
push
into
adcl
inc
sbbb
fidivl
or
xchg
xchg
push
mov
xchg
lock
loop
movsb
adc
movsb
in
ljmp
mov
scas
xchg
ret
sarb
int3
aaa
mov
ret
xchg
int
loopne
test
cld
aas
add
bound
fnsave
and
insl
xchg
pop
ror
cmpsb
fldcw
adc
int
jo
sbb
push
movsb
or
sbb
das
test
mov
daa
add
rcrb
sbb
mov
fwait
xchg
mov
jae
xor
int3
mov
push
repnz
mov
xadd
lods
xor
jo
jp
xchg
xor
loop
sahf
stc
pop
inc
loop
push
inc
mov
pusha
fst
xchg
or
dec
xor
jmp
push
sub
xabort
ss
out
cwtl
imul
adc
movsb
sub
jmp
imul
push
push
add
lods
xor
sub
mov
sub
xchg
cmp
test
pop
dec
sub
stc
in
cld
imul
mov
je
dec
in
mov
pop
mov
xchg
mov
subl
cld
ds
icebp
sub
rcrl
nop
mov
mov
add
rcll
jmp
mov
xchg
push
and
ficomps
ds
fcomps
mov
cmp
shll
mov
push
adc
add
addb
xorb
insb
popa
cmpsl
xchg
imul
cwtl
cmp
mov
gs
lcall
popf
loop
xchg
sbbl
movl
push
jecxz
cmp
sub
cld
enter
pop
jns
pop
cltd
call
push
xor
ret
sbb
fnsave
pop
mov
adc
frstpm(287
mov
fldl
insl
pop
fdivs
xchg
outsl
inc
cmp
insl
xor
int
sti
lock
loop
pop
cmp
pop
adc
push
and
inc
sbbl
jns
or
in
dec
rcrb
inc
xor
cld
mov
das
dec
sti
je
add
in
stc
sarb
lods
sub
daa
xchg
sbb
push
add
add
xor
in
sbb
das
cld
xchg
xchg
andb
shlb
movsb
push
xchg
pop
popf
mov
sahf
jo
js
cmp
ror
xchg
lret
sub
lock
sub
leave
lahf
in
mov
and
mov
xchg
movsb
push
cmp
popa
adc
or
imul
rorl
dec
cmpsl
inc
in
fcoms
stos
flds
mov
pop
fwait
pop
bound
in
add
lcall
jbe
mov
dec
inc
dec
imull
adc
adc
jg
cmp
ret
stos
sub
jae
xlat
movsl
jo
mov
es
aam
loope
sub
mov
jnp
or
outsb
dec
aaa
jb
xchg
outsb
mov
fldcw
dec
lret
or
out
adc
and
arpl
shll
mov
inc
inc
repz
cli
lods
mov
daa
rcrl
cmpsl
add
call
dec
aas
xchg
imul
mov
test
hlt
mov
lret
sub
pop
mov
dec
dec
and
fcomp
or
xchg
mov
xchg
in
aad
enter
mov
dec
test
scas
arpl
ffree
scas
pushf
xor
pshufw
sahf
lock
lret
in
push
lock
adc
repnz
xchg
lds
fs
addl
popf
jge
push
or
push
xor
xor
add
test
cmp
pop
ret
sbb
push
pop
movsb
test
sub
pop
adc
enter
inc
jnp
mov
clc
jge
mov
jl
idivb
das
test
adc
in
mov
mov
push
std
out
daa
orw
aad
aaa
push
pop
mov
adc
dec
jno
icebp
cmp
fiadds
sbb
mov
fs
push
out
stos
mov
into
test
push
add
imul
scas
ja
cmp
sbb
mov
mov
fucom
sahf
dec
push
cwtd
xchg
mov
jmp
je
test
add
sti
push
sarb
push
aad
adc
loope
sbb
inc
fxch
xorl
lods
push
aaa
push
mov
jp
lret
mov
movsb
pop
dec
lea
lea
and
sub
pop
xchg
mov
stc
pop
mov
std
mov
aas
pop
movsb
pop
inc
std
orl
enter
shll
mov
inc
mov
daa
xchg
add
repz
jl
in
lock
push
push
nop
mov
outsl
ficomps
xlat
and
int3
xchg
jecxz
ds
pop
jle
add
hlt
stos
insl
mov
nop
fisttpl
xor
push
int
inc
popa
out
adc
es
imul
sbb
mov
mov
aaa
or
mov
cmpsl
mov
scas
stos
cmp
andb
jae
mov
dec
push
cmpsb
cmpsb
or
in
sti
inc
fs
imul
test
jge
or
sarb
fdivs
push
pop
xchg
test
push
mov
pushf
push
jmp
outsl
popa
jbe
in
mov
push
cmc
or
rcr
xor
cmpl
inc
jge
fdivrl
push
pop
movsb
das
adc
rorl
inc
and
ds
fistpll
jno
fsubl
icebp
repz
jg
jle
cmp
mov
push
jmp
or
loop
ja
notb
hlt
insl
pop
popf
pop
lahf
and
lods
jno
fnstsw
mov
adc
mov
dec
cmp
rcrb
cld
in
int
shrl
pop
push
movsb
xor
mov
push
xchg
push
sub
pop
xchg
iret
jecxz
mov
xor
iret
jno
jge
mov
test
cmpsb
out
int
sub
sahf
sbb
andb
sbb
fcmovnbe
or
mov
enter
not
shrb
arpl
xchg
lret
mov
or
mov
dec
ss
cmp
mov
ret
call
movsl
ljmp
dec
repz
pop
jle
push
jne
xor
jae
jge
pop
jle
daa
add
loop
and
pop
sub
roll
popa
out
jecxz
divb
and
pop
mov
cmp
pop
mov
fdivrs
ret
xor
push
lods
in
lcall
jmp
pusha
ja
scas
mov
dec
cmpsb
cli
cmp
je
test
bound
movsl
call
push
lret
jl
loopne
fnstcw
xchg
ret
ret
jp
push
xor
adc
fmul
mov
xlat
mov
mov
mov
and
lods
pop
das
test
shrb
and
cli
nop
test
or
mov
icebp
push
lahf
xor
add
nop
jbe
mov
jge
and
sub
sub
es
stos
add
test
cmc
popf
add
lret
int3
hlt
and
lods
pop
scas
out
lods
loopne
pop
push
int3
aaa
push
inc
iret
insb
leave
imul
mov
cmp
jb
cmp
or
add
lds
shlb
or
cld
or
add
leave
push
test
add
scas
mov
xchg
adc
lea
or
push
mov
leave
or
lahf
xor
adc
mov
ss
pop
dec
in
pop
jb
imul
subb
addb
mov
push
xor
jle
rep
inc
pop
imul
or
push
data16
pop
mov
ss
mov
das
push
sub
mov
push
ljmp
iret
xor
fstpt
push
pop
insb
out
pop
xorb
add
fcoml
sarb
push
loopne
repnz
push
or
pusha
loop
xor
mov
xchg
mov
pop
add
cmp
outsb
cmpl
pushf
daa
or
adc
add
jecxz
hlt
adc
adc
or
fildll
popf
add
call
mov
je
lods
int
in
cwtl
pop
sub
rolb
inc
enter
out
aad
adc
jle
test
push
lahf
adc
insl
das
adc
jae
xor
cmp
jo
inc
lret
and
lods
inc
vmulpd
and
cmpl
xchg
pop
sub
push
mov
xor
or
or
mov
fldcw
push
das
inc
sub
loop
pusha
pop
sahf
stc
inc
mov
mov
add
sub
std
into
sub
pushw
push
test
jnp
lea
mov
dec
add
mov
cmp
rcll
jle
stos
pop
insb
fcoms
xor
inc
mov
cmp
push
fisubl
inc
test
inc
lods
andl
xchg
push
or
mov
add
data16
push
push
jnp
mov
addr16
sub
mov
das
push
mov
inc
push
cmp
pop
xor
and
sub
sbbb
inc
xor
sub
addr16
adc
outsl
xchg
lret
scas
adc
aaa
add
lahf
fcoms
pop
mov
mov
test
scas
stos
stos
xchg
push
xor
pop
loopne
xlat
pop
std
fucomp
inc
inc
pop
pop
scas
mov
mov
gs
xchg
add
push
sbb
fwait
outsb
outsb
xchg
inc
pop
jge
aaa
mov
xor
xchg
icebp
mov
mov
push
lods
aam
adc
xchg
fs
aas
dec
adc
push
sti
cltd
or
mov
lods
sbb
scas
push
sar
testb
sub
in
jne
mov
fsts
jmp
enter
mov
sahf
ljmp
rcll
lock
mov
mov
and
ss
jae
jmp
cli
in
xor
pop
sub
push
js
mov
mov
or
and
addl
xchg
inc
adc
lods
dec
fnstenv
stc
mov
jge
inc
jno
xchg
and
fildl
xor
sti
and
cmp
js
outsb
sub
es
sub
pop
sbb
xchg
xor
fistl
aas
ret
aaa
mov
iret
mov
incl
loopne
cmp
push
ljmp
gs
cmpsl
sbb
loopne
mov
dec
inc
ljmp
fildll
stos
or
or
lock
and
push
and
mov
test
inc
add
scas
adc
jno
in
pop
stos
jmpw
sbb
lcall
sbb
lret
push
popf
push
popa
jp
movl
add
sbb
xlat
pushl
mov
loop
out
pop
das
xor
sub
int3
xchg
xchg
adc
jl
xlat
jno
lds
leave
in
fcmovu
sbb
mov
xchg
mov
jae
push
xchg
sub
arpl
js
mov
or
cmp
jecxz
sub
mov
push
pop
mov
push
or
and
jecxz
imul
mov
inc
std
shl
pusha
push
or
lret
pop
sysret
xorl
enter
daa
test
inc
sti
testb
dec
neg
fidivs
negl
sti
sbb
and
xlat
jmp
pop
and
jge
pop
pop
popa
int3
xchg
aam
cmpsl
mov
dec
xchg
cmp
adcb
ss
dec
lock
sbb
adcb
cmp
and
dec
pop
sbb
sub
cli
inc
fdivs
cmpsl
je
add
inc
out
mov
cld
popa
test
mov
jbe
insl
fsubrs
push
lods
inc
stc
outsl
pop
out
xchg
mov
sub
out
shll
ds
in
inc
inc
jnp
cmpsl
lods
pop
and
outsb
dec
mov
push
push
add
dec
out
pushf
dec
cmp
jecxz
jb
stos
fistps
je
mov
subl
mov
icebp
pop
pop
je
aas
mov
or
mov
mov
sub
inc
sbb
aam
leave
dec
xchg
add
dec
scas
rorl
insb
sub
xchg
divb
inc
pop
leave
inc
pop
lcall
mov
sbb
sub
push
mov
fdivs
mov
clc
aam
daa
jmp
jle
mov
pop
lods
ja
rep
repz
jl
cld
push
pop
mov
addr16
cmpsb
in
enter
sub
shrb
sub
or
pop
sbb
idivb
fldt
inc
out
lahf
movsl
cmp
mov
push
push
int3
and
in
or
out
push
jg
adc
std
fisubl
mov
loope
pop
enter
aas
add
mov
movsl
je
pop
cmpb
ljmp
test
mov
insl
rcrl
mov
sbb
rolb
mov
push
adc
jbe
push
popa
iret
call
push
jae
je
data16
clc
das
adc
rcl
aad
jno
add
xchg
rcrb
mov
arpl
je
dec
xchg
arpl
sbb
lods
dec
std
jne
in
loope
nop
arpl
in
push
mov
cmp
addr16
pop
les
movsl
xor
add
jne
pop
cmp
sahf
jb
pop
imul
xchg
arpl
mov
aas
roll
adc
xchg
test
daa
pop
ja
mov
xchg
jmp
jp
or
pop
insl
mov
xchg
mov
sub
mov
jecxz
sti
imul
nop
test
lods
push
pop
enter
loop
cmpsl
divb
sbb
aaa
cltd
cwtl
test
sahf
repz
mull
dec
xor
jno
pop
gs
packsswb
jle
adc
pop
or
xchg
inc
gs
lea
popf
enter
push
or
cmp
cwtl
mov
out
mov
mov
cltd
or
and
cmp
jl
jecxz
das
in
outsb
lock
mov
sti
out
lret
rcr
loope
push
test
das
adc
cmc
test
cmp
sahf
negl
aas
mov
cmp
in
or
mov
xor
mov
dec
test
popf
popa
ret
mov
add
in
jecxz
xorl
mov
lea
stc
addr16
pop
mov
xchg
fs
push
pop
inc
or
pop
mov
fwait
leave
pop
mov
insl
mov
and
mov
sarb
adc
shl
xlat
push
xor
addr16
mov
stos
insl
or
pop
test
mov
out
pop
push
mov
lret
jne
imul
test
add
aam
movsb
push
shl
push
and
out
cwtl
xor
aad
mov
sub
inc
movsl
icebp
stos
mov
pop
aaa
inc
les
popf
xorl
fnstsw
lods
push
jnp
inc
loop
pxor
fsubs
jmp
jmp
pop
in
and
add
sbb
jb
fnsave
pop
xor
scas
and
or
push
in
inc
dec
mov
or
dec
mov
jo
fldl
arpl
ds
xchg
push
mov
sub
movb
jg
and
xchg
scas
addr16
adc
orb
int3
mov
mov
dec
imul
mov
jmp
repnz
lods
stos
mov
insb
pop
push
popa
mov
mov
inc
fdivrs
mov
out
mov
sahf
xchg
dec
ljmp
inc
es
sub
inc
sub
mov
xchg
shll
mov
stc
adc
outsb
xor
outsb
movsb
mov
or
xchg
ss
inc
xchg
cmp
pusha
push
push
or
add
mov
add
cmp
subl
push
push
enter
sbb
xor
aaa
sub
sbb
push
xchg
or
rorb
fistpll
xor
push
pop
stos
sub
push
test
pop
nop
cmp
xor
inc
jno
or
and
or
shr
mov
and
dec
add
pop
jbe
dec
mov
repnz
mull
adc
rol
xor
ja
sbbb
lcall
xor
pop
sbb
lods
scas
enter
sub
sub
test
mov
in
int3
fidivs
sub
add
mov
in
and
xchg
pushf
loop
pop
add
gs
mov
in
jmp
push
scas
mov
pop
movsb
xchg
xor
data16
stos
fcmovnbe
sahf
pop
dec
mov
cmpsl
xchg
sbb
push
jp
pushf
add
and
lock
int
outsb
mov
xor
mov
pop
outsb
pop
mov
mov
jno
xchg
dec
jbe
jnp
test
xchg
and
fistps
inc
jecxz
aam
inc
and
fcompl
and
sbb
sbb
sar
out
inc
xchg
mov
lahf
xor
add
icebp
imul
lcall
jb
push
pop
jae
aas
mov
int3
int
and
inc
pop
mov
sbb
cmc
xor
cs
out
pop
imul
aas
addr16
or
cmp
bound
arpl
xchg
ljmp
das
push
shrb
mov
push
lock
pushf
jge
in
mov
jnp
je
mov
mov
jecxz
add
pusha
jae
jp
mov
pop
adc
loope
mov
mov
in
push
pop
push
in
movsl
mov
inc
fstp
pop
and
add
inc
jnp
jg
adc
or
data16
push
adc
sub
mull
daa
adc
sbb
out
jo
lcall
sbb
lods
jne
jmp
mov
sbb
lea
lret
or
movsl
pop
movb
stc
adc
mov
fimuls
lret
std
mov
xor
decl
sub
out
iret
push
lret
divb
jmp
stos
mov
in
push
pop
mov
cmp
fucomp
sbb
or
inc
pop
sub
jg
ja
cmp
mov
sarl
lret
cld
mov
jno
cmp
in
je
dec
fidivs
popf
ja
sub
xor
mov
sub
jbe
pop
or
cli
mov
dec
js
iret
stos
push
adc
pop
popa
xchg
mov
dec
mov
dec
adc
sbb
adc
push
mov
xlat
aam
js
adc
xlat
rcll
sub
fwait
test
lcall
dec
push
mov
mov
and
fs
fsubl
cmc
aam
daa
enter
xor
ds
rorb
mov
xchg
pop
mov
jne
sub
repnz
shll
imull
popf
inc
mov
cli
push
test
arpl
sub
xchg
lahf
into
cltd
testl
das
and
pop
out
lcall
jnp
insb
scas
cmp
xchg
test
lahf
xor
aas
xchg
outsl
pop
push
push
gs
push
sbb
or
das
inc
pop
fistl
adc
adc
sub
nop
fists
pop
pop
push
sub
sub
pop
xor
cmpsb
jno
fwait
cmovp
icebp
pop
cmp
jae
jecxz
cli
hlt
jmp
mov
int
jb
lds
xor
xlat
test
sub
or
lods
jmp
je
mov
inc
incw
add
mov
dec
push
push
rcrl
lar
xor
sub
xor
js
mov
int
lds
mov
inc
pop
inc
into
aam
cs
stos
lds
add
test
or
icebp
bound
sub
adc
aaa
scas
mov
mov
adc
add
lods
stos
cmp
inc
mov
dec
or
rep
orl
cmp
mov
in
iret
push
xchg
push
fs
lahf
shlb
mov
dec
inc
adc
fcomps
call
xchg
or
rcr
fwait
push
mov
dec
int
jg
pop
sbb
cmpsl
inc
pop
adc
xlat
aad
mov
stos
faddl
mov
idivl
lds
add
imul
sarl
and
sbb
xchg
add
fistl
push
xor
or
lods
movsb
test
add
into
dec
xlat
into
push
dec
sahf
addl
iret
flds
dec
lock
shrl
lods
call
test
mov
scas
mov
xchg
mov
inc
lcall
sbb
test
xchg
outsb
cltd
pop
lods
fidivs
stc
enter
dec
sbb
addl
mov
mov
roll
push
dec
cld
ljmp
sti
pop
mov
insl
test
push
fs
mull
jae
imul
adc
lods
inc
adcl
clc
sbb
push
sbb
mov
xor
xchg
sbb
sbb
in
push
lods
xchg
mov
out
mov
sbb
push
jnp
jl
pop
sub
inc
stos
xchg
inc
sub
aam
xor
loop
mov
lds
outsb
fcompl
add
push
test
testb
nop
test
mov
je
fsubr
fdivrl
ja
arpl
cltd
ss
repz
mov
clc
enter
je
xchg
scas
aas
ljmp
mov
scas
outsb
mov
jl
ds
cmc
scas
xor
sarl
hlt
loope
push
mov
repnz
lahf
in
fdivrp
ja
jno
imul
or
sub
in
les
lods
xor
js
mov
cmp
rcrl
cmp
mov
dec
mov
xchg
push
mov
in
and
pop
xlat
sahf
in
add
mov
addb
xor
push
sti
jl
sahf
dec
pushf
shlb
jg
push
test
pushf
dec
inc
pop
xor
add
test
or
xor
inc
ljmp
stos
sub
jmp
fstpl
cs
out
gs
cmpsb
out
dec
movsl
leave
sub
dec
jle
lds
cltd
add
call
dec
lods
sbb
icebp
ror
mov
pop
pusha
dec
shll
or
das
test
mov
pop
push
sbb
sub
scas
pushf
jae
mov
mov
movsl
add
sub
inc
inc
mov
sub
out
mov
pop
lret
or
dec
in
xchg
mov
jbe
mov
pop
lret
jge
pop
icebp
mov
jo
inc
inc
cmp
pop
in
add
into
cwtl
inc
mov
inc
jle
jns
pop
icebp
jae
lods
inc
jne
inc
and
imul
jnp
incl
fwait
inc
xor
rcll
lahf
fdivr
int3
add
fdivl
pop
and
dec
mov
hlt
push
xchg
mov
cmp
mov
mov
cltd
cltd
push
cwtl
repz
mov
aas
push
pop
decl
jl
push
add
adc
int3
dec
sahf
pop
lret
lock
aas
aad
jecxz
cmp
mov
fsubs
or
jns
popf
mov
sbb
mov
inc
mov
mov
sbb
or
in
movsb
jmp
cmp
pop
mov
shr
pop
dec
sub
pop
sub
mov
outsl
sbb
mov
pop
mov
pop
ss
pop
inc
aad
push
fnop
les
aas
adc
ficomps
fistpll
mov
mov
call
mov
adc
dec
aas
outsb
push
jmp
sarb
aam
cmp
push
sub
pop
mov
mov
outsb
insb
jbe
jecxz
mov
pusha
inc
cmp
add
fsts
add
and
shrb
and
and
pusha
xchg
shrb
mov
sbb
setp
loop,pt
and
xor
outsl
es
xchg
scas
lods
mov
push
hlt
cmpsb
mov
lret
clc
sbb
add
push
cmp
jae
push
ret
ljmp
movb
lods
xchg
bnd
insl
cmpsl
mov
movsl
mov
dec
sub
dec
or
enter
push
cli
bound
push
xor
mov
mov
stc
cmp
shr
nop
mov
es
out
call
addr16
stos
lcall
es
leave
scas
mov
or
scas
cmpsb
lret
es
stos
mov
out
cmc
xor
or
scas
inc
sub
mov
les
scas
jns
sbb
fbstp
pop
lahf
sub
push
jecxz
loop
push
xchg
jb
outsb
mov
mov
add
xor
scas
add
push
js
imul
fnstenv
or
pusha
sahf
andl
and
sahf
sbb
sbb
pop
jle
fcmovb
filds
es
addb
pop
leave
push
sbb
push
sahf
jge
fs
pushf
sbb
inc
push
ss
shll
xor
inc
push
jb
pop
repz
inc
call
aas
mov
add
je
mov
por
jnp
cltd
cmp
sbb
dec
inc
and
mov
dec
test
or
je
mov
pop
inc
cmp
jno
lahf
pop
push
int3
and
iret
mov
fldl
jl
rorl
inc
aaa
addl
and
adc
lods
cmp
cmc
out
mov
lcall
jbe
into
addr16
push
lods
leave
pop
and
fstpl
stos
adc
sarb
aam
mov
in
int3
jecxz
dec
dec
mov
ja
arpl
flds
inc
dec
repz
dec
fdivrs
jg
fcomi
dec
adc
push
test
dec
aaa
fldcw
insb
insb
iret
add
cmp
add
mov
testb
jmp
out
sbb
iret
int
dec
mov
pop
sub
jge
sarb
cmp
adc
dec
test
out
enter
jbe
xor
mov
insb
push
mov
jnp
push
pminsw
push
repnz
xlat
mov
push
or
hlt
jle
dec
adc
mov
loopne
mov
sar
mov
std
test
push
test
das
andb
pop
orl
jg
das
rcrb
es
jno
add
je
or
popf
scas
pushf
push
dec
gs
xor
bound
gs
jmp
inc
out
lret
mov
jmp
fdivrs
pop
inc
or
jb
pop
dec
aas
push
pop
jg
enter
stc
mov
mov
dec
subl
imul
cmpsl
inc
cmp
faddl
std
loop
add
les
cmp
adc
nop
cs
mov
mov
andl
jnp
cmp
lahf
xchg
ret
and
jmp
or
push
das
cmpsl
pushf
out
es
xchg
adc
mov
push
mov
inc
mov
sub
push
fisubs
mov
push
sbb
xor
fists
call
add
jp
lahf
dec
pop
sti
test
sbb
xor
dec
aad
subb
incb
int
into
iret
lret
dec
insb
adc
out
scas
shll
mov
ds
std
subb
popl
push
les
sub
sub
insb
adcb
shlb
movhps
mov
mov
dec
lret
aaa
add
arpl
call
add
push
cmp
xor
mov
xchg
xor
insl
mov
jg
jne
outsl
test
pop
cltd
adc
mov
fistl
pop
mov
mov
movsl
fmulp
test
shlb
js
idivl
xchg
repz
jp
ds
inc
xor
dec
push
push
out
push
or
popa
ds
sti
mov
xor
addr16
fimull
push
or
movsl
add
xchg
fidivs
pop
insl
not
add
ficomps
inc
dec
aam
fimull
mov
inc
push
jae
mov
mov
pop
pop
sub
adc
sarl
and
and
push
push
enter
out
adc
and
jnp
in
repnz
inc
or
icebp
add
mov
fldenv
sub
sub
xchg
jae
rclb
jecxz
ds
sarl
packsswb
jbe
push
adc
lods
jnp
jo
dec
and
mov
pusha
mov
jmp
adc
adc
mov
repnz
scas
sbb
test
cmp
iret
xchg
stos
ljmp
mov
imul
aad
or
cmp
fs
das
ja
popa
inc
sbb
shr
mov
icebp
pop
cmp
mov
cmpl
repz
cwtl
or
ret
test
popa
pop
insl
aas
cwtl
sti
jae
mov
mov
insb
sbb
pop
cmpsb
add
lret
out
jge
cmp
cmp
xchg
outsl
jns
dec
sarl
mov
fucomp
roll
pop
test
mov
aam
fiadds
push
add
scas
mov
rolb
sbb
sub
sbb
mov
lret
mov
lods
fdivrl
inc
fidivs
xchg
fs
call
sbb
push
inc
ja
and
or
push
stos
into
das
xor
daa
mov
dec
rcrl
inc
dec
sahf
pop
std
or
inc
fcmovnbe
test
xchg
xchg
xor
xorb
push
scas
sbb
rolb
fcomi
mov
add
fadds
popf
sub
sarl
test
jno
mov
call
mov
mov
mov
icebp
or
adc
sahf
push
test
cmp
aas
cld
repnz
mov
fs
fwait
mov
scas
in
lods
idivb
pop
pop
into
cmpsb
pusha
inc
dec
dec
jbe
sbb
cli
cmp
add
outsb
scas
movl
dec
out
mov
es
stos
push
aad
push
mov
jbe
xchg
aas
pop
out
push
xchg
outsl
or
jmp
fdivrs
push
mov
pop
adc
scas
sti
scas
mov
cmpsl
outsb
mov
mov
outsb
cld
dec
cs
add
mov
cmpsl
jae
or
dec
out
sbb
adc
scas
xchg
mov
xchg
outsb
mov
imul
add
inc
jnp
jnp
scas
popf
pop
int3
imul
les
mov
imul
mov
mov
movsb
mov
push
xchg
cmp
and
mov
fs
cmpsl
incl
dec
pop
xchg
push
iret
dec
rolb
inc
mov
les
sahf
cmp
sarb
xorb
mov
pop
out
wbinvd
inc
idiv
cmpsl
pop
sbb
ret
dec
lea
pop
pop
stos
ss
leave
jecxz
stc
jns
clc
push
mov
pusha
adc
fisubrs
je
pop
rcrb
outsb
push
outsb
adcb
push
push
test
stos
inc
mov
andb
mov
mov
aam
sti
movsl
push
cs
lods
adc
jae
xor
enterw
xor
xor
xor
add
data16
popf
out
leave
or
mov
push
sbb
stos
jno
subl
addr16
sarb
xor
or
orb
pop
add
push
xor
pop
lods
jmp
cmp
hlt
sbb
movsl
test
cmc
push
andl
rolb
test
pop
mov
sti
xlat
pop
add
push
mov
adc
stc
xchg
xchg
icebp
push
sbb
mov
and
fcoml
and
xor
inc
outsl
cli
jb
lahf
scas
dec
jbe,pn
into
into
insl
mov
lcall
scas
adc
and
in
xor
dec
gs
cmpsl
shlb
jnp
jp
push
sub
adcl
xchg
mov
insl
push
out
fcmovu
iret
lock
push
jo
adc
sub
jg
push
scas
filds
mov
popf
pop
mov
lcall
push
and
hlt
pop
xchg
xchg
mov
in
xor
add
push
nop
fcompl
pop
push
in
decb
in
push
pop
dec
xor
jo
mov
and
ret
ss
mov
ds
cmp
mov
sub
fmuls
cld
mov
jmp
iret
repz
popf
add
stos
inc
outsb
orl
sti
mov
js
and
jnp
dec
jmp
cs
jg
or
push
cmpsb
pop
cs
stos
inc
push
dec
cmpsb
test
adc
out
stc
dec
or
mov
mov
xchg
add
push
fdivs
stc
xchg
cltd
mov
jl
in
rcrb
push
xchg
adc
mov
dec
jno
mov
cld
scas
iret
cmp
arpl
xchg
loope
fsts
add
in
push
dec
ja
jno
xchg
sbb
mov
popf
repnz
jp
sbb
sbb
push
not
inc
call
fisubrl
or
xchg
mov
push
insb
out
jne
enter
enter
enter
dec
dec
testl
adc
scas
das
iret
insl
jecxz
test
outsl
sbb
mov
mov
xchg
negb
mov
subl
pushf
cmp
jge
fisttpll
xor
ds
jnp
and
imul
cmp
lahf
inc
pop
mov
jp
cmp
in
jb
sub
pusha
jle
scas
sbb
andl
fchs
fiadds
outsb
push
jp
cmp
push
jbe
sti
push
jle
aas
pop
adc
xchg
fisubs
jecxz
into
xchg
sti
adc
or
mov
add
add
jo
jb
add
jbe
pop
add
jp
or
out
pop
inc
add
ja
sti
pusha
xchg
imul
sbb
mov
or
je
adc
jle
gs
add
idiv
out
sub
lcall
mov
xor
mov
movsb
dec
xchg
mov
pusha
les
sbb
xor
and
push
add
sub
pop
sub
test
add
jo
sbb
cmp
pop
out
es
pop
inc
mov
xchg
decb
xlat
xor
mov
push
sbb
inc
daa
pop
arpl
scas
addr16
dec
add
cmc
inc
rolb
inc
popa
sbb
mov
lods
pop
mov
sbb
sbb
inc
fsubrl
stos
mov
xlat
mov
addl
xchg
or
cmp
pop
adc
cmp
loope
fs
pop
aad
cmp
clc
aas
hlt
jb
sbb
int
ss
aaa
and
shll
jnp
fwait
lods
das
dec
ljmp
jne
test
and
mov
outsb
xor
ss
xor
and
inc
div
aas
add
insb
xchg
xchg
enter
jecxz
scas
lea
cmp
jl
sti
in
fidivrs
mov
push
addr16
in
les
pusha
mov
xor
add
and
sub
je
mov
jp
sub
add
xor
jecxz
jns
ret
or
sysenter
inc
xchg
mov
aaa
out
sub
mov
and
sbb
adc
scas
cs
mov
mov
popf
xchg
mov
inc
add
cli
add
xchg
or
mov
push
mov
in
inc
int
cwtl
scas
pusha
xlat
add
xchg
movsb
add
lods
add
xor
mov
cmp
shl
mov
inc
lds
ficoms
mov
dec
sahf
dec
xor
mov
inc
xor
ds
ret
mov
xchg
xorl
jae
mov
std
movsl
testb
fwait
sbb
and
inc
mov
mov
fists
pop
ss
mov
out
or
adc
out
adc
inc
cltd
push
adc
xor
lods
ljmp
sbb
out
dec
aas
sub
movhps
or
jnp
repnz
stc
es
pusha
xchg
cmp
rcr
mov
lods
and
pop
mov
mov
mov
in
fnsave
movsl
or
fwait
xorl
fidivrl
clc
add
dec
jl
dec
dec
addb
rorl
ljmp
sbb
or
pop
mov
inc
dec
adc
outsl
mov
arpl
mov
subl
popf
or
sbb
cld
daa
dec
cmpsb
in
push
mul
jo
divl
inc
pop
pop
notl
scas
stos
xchg
xchg
outsb
inc
ror
sub
jo
roll
mov
xchg
imul
sahf
xchg
mov
imul
mov
idivl
mov
pop
jns
punpckhbw
popa
sub
aad
sub
imul
jmp
dec
out
aad
or
or
aad
bsf
cmp
pop
ffreep
std
or
les
jmp
dec
pop
in
xchg
dec
inc
jmp
or
pop
dec
sbb
aaa
cs
push
xchg
inc
pusha
jp
mov
ljmp
je
in
mov
loop
xor
rorb
mov
dec
xchg
inc
and
mov
das
popa
movsl
ja
fisubrs
idivl
loopne,pt
jns
mov
inc
outsb
pushf
call
cs
sarb
adc
sbb
dec
jnp
arpl
inc
push
sub
movsb
xchg
out
faddl
pop
dec
int3
sti
jle
sbb
add
int
scas
lods
and
mov
insb
push
dec
or
movsl
loope
push
jmp
xchg
push
loope
dec
sub
sti
cmp
jle
xchg
pop
stc
pop
shlb
push
shr
jecxz
stc
mov
call
arpl
adc
dec
inc
xor
lret
int
daa
add
clc
mov
push
popf
pop
mov
mov
push
scas
lock
int3
mov
cli
mov
iret
cld
lcall
sub
mov
push
fiaddl
pop
cmp
cwtl
jmp
mov
inc
outsl
insl
cld
pop
hlt
imul
mov
repnz
pop
stc
jmp
jl
jno
aam
iret
aaa
push
ss
push
test
hlt
inc
push
xchg
cmp
pop
jbe
enter
and
mov
pop
and
mov
and
xor
add
pop
jnp
jle
leave
test
test
loop
push
dec
into
push
loopne
packsswb
popa
push
lcall
addr16
push
xor
jp,pt
aas
scas
loopne
ret
movsb
mov
mov
ja
mov
mov
and
ja
mov
add
loopne
jne
jp
mov
enter
sub
clc
cmp
push
sahf
push
jno
enter
cmp
call
fistl
int
sub
lds
cmpl
sbb
mov
mov
leave
in
sub
jg
repz
lret
xor
push
sbb
sub
xor
pop
mov
xchg
ret
std
out
fidivrs
jnp
mov
xchg
mov
sahf
fbstp
pushf
mov
or
xor
mov
and
mov
sbb
popl
sbb
popa
mov
mov
movsl
jbe
pop
and
push
cli
xchg
jno
and
add
dec
jbe
nop
test
aad
pop
push
ja
insb
addr16
adc
outsb
les
insl
lret
les
cmpsl
imul
mov
in
pushf
fucomi
and
or
dec
ficoml
jmp
add
fistps
fnstenv
jnp
sahf
inc
lret
sub
push
sub
dec
mov
outsl
mov
ljmp
push
fiaddl
dec
test
int3
insb
loop
clc
cmp
xor
cs
mov
and
ret
fidivl
mov
cmp
mov
fadds
test
orl
jge
xchg
out
push
out
mov
add
xchg
sub
add
aad
pop
dec
lret
clc
pop
lds
int3
jp
adc
jbe
jl
lret
push
or
insl
rol
jg
add
and
fs
out
sbb
ja
inc
mov
lods
pushf
mov
imul
in
mov
dec
out
xchg
pushf
lret
shl
in
fwait
mov
jnp
hlt
lods
cmpsb
in
dec
fmulp
sub
shl
sub
jmp
dec
test
cs
mov
in
bound
test
hlt
pushf
cli
adc
or
mov
push
xor
shrl
scas
xchg
inc
jp
add
cmpsl
js
push
push
mov
push
ret
inc
fnop
mov
push
push
pop
ljmp
jbe
clc
cli
rclb
inc
dec
xor
inc
scas
dec
stos
repz
ljmp
push
sahf
shll
mov
push
shl
jp
xchg
or
jle
add
adc
call
pop
mov
push
dec
xchg
mov
ret
in
lea
popa
stc
mov
pop
dec
fsub
mov
and
andb
pop
adcb
pop
push
sub
ds
lods
sti
push
pop
shlb
iret
fidivl
clc
lock
mov
sub
aas
fiaddl
out
rcrb
in
push
push
sbb
dec
daa
xchg
stos
inc
pop
scas
lret
imul
xor
sbb
ret
test
jo
mov
daa
lret
out
mov
rolb
jmp
pushl
jns
cmp
clc
lods
pop
lods
add
sub
shl
test
sti
jb
ret
mov
and
or
mov
sbb
jns
aas
and
and
mov
fisttpl
ljmp
lods
sub
out
adc
imul
cmp
sahf
mov
pop
fisttpll
mov
int3
leave
jmp
iret
outsl
scas
idivb
shlb
push
ror
in
jmp
shl
sub
syscall
jo
hlt
pop
in
jns
xor
xchg
mov
inc
outsl
pop
jmp
jge
sbb
insl
iret
jge
popa
inc
pushf
or
aaa
cmp
mov
mov
popa
add
movsb
lock
ja
mov
xor
sbb
add
pop
push
jecxz
mov
jae
jno
outsb
push
xchg
jns
mov
notb
mov
aam
loop
inc
sahf
imul
mov
inc
mov
ret
sbb
or
or
mov
mov
aad
mov
dec
loop
dec
mov
ret
mov
jmp
and
add
inc
and
stos
iret
popf
mov
push
aas
aam
and
popf
or
push
or
or
fwait
ja
lods
push
mov
lds
bswap
out
test
pop
xchg
inc
fimuls
mov
and
cmp
mov
dec
push
shrb
jg
push
cltd
test
scas
jmp
sbb
mov
jp
out
fxch
jno
ss
pusha
addr16
xchg
mov
jns
loope
mov
pop
inc
repz
adc
jp
aas
out
cmp
dec
in
test
fnsave
inc
pop
dec
sub
out
sbb
arpl
push
lret
cmpsb
cltd
inc
jbe
sbb
inc
push
pop
push
mov
repz
ss
lea
inc
in
popf
mov
test
dec
dec
push
in
adc
jge
int3
jmp
je
jp
ja,pn
imul
std
fs
punpcklwd
cmc
daa
aad
scas
sub
movsl
dec
or
cmpsb
movsl
jle
lods
arpl
or
mov
xchg
cld
or
push
jnp
in
sub
push
inc
mov
in
cwtl
inc
xor
call
pop
ret
xchg
inc
test
fidivl
or
imul
sti
xchg
inc
ds
sbb
xor
or
dec
mov
leave
je
movsb
mov
fisubrs
mov
out
pop
test
sbb
repz
cs
dec
mov
out
stos
cli
push
shll
jg
or
shlb
dec
out
shlb
movsl
inc
jo
mov
mov
mov
shl
daa
test
out
popa
pop
std
imul
mov
cmp
imul
into
xor
or
into
inc
subb
scas
addr16
inc
in
cmpsb
mov
jg
lods
pop
shrl
xchg
fisubl
sbb
pop
jae
sbb
add
or
pusha
fimuls
inc
adc
out
fdivs
addr16
stos
mov
lret
inc
pop
std
pop
and
pushf
mov
pop
xchg
pop
sbb
cmp
mov
repz
pop
or
jb
jbe
mov
iret
sbb
push
das
cmp
adc
jmp
cmc
sbb
packuswb
push
mov
ficompl
mov
data16
mov
dec
dec
add
mov
mov
dec
in
pop
or
cmp
push
and
es
orb
enter
mov
cmp
sbb
xchg
jnp
cmp
push
insb
in
mov
mov
mov
call
loopne
dec
daa
mov
cs
inc
lds
int
aaa
jo
inc
and
jne
add
cmp
push
sub
push
ja
sahf
sub
add
jle
sahf
cld
bound
int
or
or
pop
insb
dec
nop
std
rclb
or
inc
cmpsb
aas
lret
push
mov
cmp
pop
jne
lds
sarl
sub
jb
cmpsl
fistpll
fisubs
add
stos
push
ds
out
push
aad
add
out
lock
cmp
cli
repz
aam
mov
int3
movsl
dec
jg
pop
and
cmp
aaa
mov
mov
shll
sub
mov
cli
dec
mov
or
cmp
add
cltd
jo
arpl
jae
lret
jno
test
xor
imul
inc
adc
rclb
ret
push
cmpsb
bound
adc
xchg
fnstenv
xchg
in
std
xchg
outsl
clc
xchg
push
mov
mov
loop
or
mov
lock
jge
cld
pop
mov
adc
addr16
ss
lods
aas
xor
add
imul
movsl
mov
cs
stos
mov
adc
fimuls
dec
lods
add
or
out
push
add
es
clc
cmc
outsl
xchg
movsl
fidivrl
jno
jae
lods
inc
jb
mov
std
push
mov
bound
cmpb
or
mov
inc
mov
push
faddl
call
mov
inc
mov
inc
and
shl
fistpl
jecxz
pop
inc
sub
outsb
lret
pushf
sub
jg
cltd
xchg
mov
mov
clc
inc
enter
pop
add
mov
mov
inc
jne
rclb
int
lcall
scas
pop
adc
outsb
sbb
jne
sbbb
popf
or
ret
push
not
and
xchg
or
add
mov
lock
and
fnsave
stos
xor
adcb
or
xchg
or
jp
jle
xchg
insb
enter
mov
fcoms
mov
cmpsb
pushf
sarb
xchg
lea
or
loopne
jbe
mov
adc
mov
xchg
push
mov
push
mov
push
dec
adc
fwait
lahf
aam
aaa
inc
mov
loope
xchg
scas
cs
outsl
xor
das
shl
or
stos
iret
push
out
pop
xor
int3
ret
lods
data16
and
pop
out
subl
mov
inc
adc
popf
pop
mov
dec
mov
or
loopne
or
lret
popf
jb
hlt
xchg
mov
xchg
dec
add
outsl
out
sbb
call
fistps
call
or
jnp
enter
add
cmp
xchg
movsb
mov
iret
into
nop
incb
bound
insl
add
pop
xchg
rcrl
movsb
mov
dec
inc
insl
and
roll
es
cmp
pop
aad
dec
jmp
mov
psrlq
cld
in
xor
xchg
cmp
jo
mov
scas
stos
xor
push
mov
adc
cmpsl
pop
mov
lcall
jmp
sub
cpuid
test
xor
imul
pushf
fwait
cmpsl
mov
jo
jl
in
leave
add
cli
xor
inc
jae
sarb
mov
insl
mov
mov
push
jnp
pop
clc
push
mov
cmp
fcoms
bsf
mov
test
xchg
adc
mov
imulb
adc
scas
mov
mov
push
push
das
xchg
pop
enter
lods
xor
cmc
pop
adc
inc
out
shlb
dec
movsb
adc
jnp
jmp
stos
test
pop
inc
in
je
lret
movsb
inc
xchg
mov
mov
fstl
flds
adc
adc
jne
or
rcl
data16
rcll
in
cmpl
inc
loopne
add
in
es
push
add
pop
in
out
out
add
mov
pop
mov
mov
cmp
stos
arpl
movsb
shll
lcall
aaa
fmuls
sub
jbe
and
insb
sub
pop
fsubr
push
push
aas
in
or
shll
pop
cmp
fcomps
adc
mov
sbb
cmpsl
or
and
fs
leave
and
dec
inc
sti
mov
fadds
cmpsb
mov
push
xchg
dec
jb
insb
cmp
mov
jns
js
sub
cmp
movsb
xlat
imul
lods
clc
push
cltd
addr16
popa
adc
jb
xchg
das
mov
repz
sahf
mov
xlat
sbbl
stos
pop
push
nop
sbb
out
add
sbb
pop
les
push
je
loop
fwait
push
inc
enter
imul
call
pop
and
pop
movsb
push
push
xchg
lcall
pop
es
inc
loope
mov
outsb
inc
in
cmp
cmp
push
ss
stos
cmp
fldt
or
js
icebp
loope
jbe
fsin
mov
dec
std
adc
cmp
test
shl
jno
push
add
xor
mov
push
mov
pop
jbe
or
push
fldt
mov
into
stc
bound
and
lea
lock
fsubs
xchg
js
testl
mov
sbb
push
sub
xchg
jg
fcomp
mov
lea
push
push
pushf
rcrl
scas
mov
pop
mov
outsb
push
push
xchg
jb
push
loop
aam
ljmp
pop
nop
inc
adc
roll
lods
mov
sbbl
lret
int
adc
sbb
push
int3
call
cwtl
fmul
loope
out
mov
ljmp
and
test
xchg
pop
dec
loopne
mov
mov
fmuls
fxch
ret
fisttpl
scas
mov
je
shll
mov
dec
or
jnp
and
rcl
push
dec
mov
mov
pop
sbb
jl
jmp
xchg
ret
xor
and
pop
mov
repnz
pop
or
jge
xchg
std
push
call
daa
mov
lahf
jo
pop
or
arpl
dec
bound
cmp
sarl
stc
cmp
dec
outsb
jecxz
sub
mov
cmpsl
push
mov
push
mov
loopne
mov
punpckhwd
sub
orb
les
cmpsb
std
pop
jl
fstpl
mov
push
mov
leave
mov
push
cs
adc
push
jb
push
and
add
lret
outsb
jle
out
push
pop
sbb
cs
push
clc
stos
dec
pop
jno
loope
gs
or
xchg
outsl
ffree
inc
mov
movsl
lcall
jns
cltd
push
roll
repz
int
sti
imul
cmpb
push
lds
sub
test
push
clc
mov
rcl
sahf
mov
sahf
lahf
andl
popa
jnp
test
dec
ret
cmpb
cmpsl
inc
nop
mov
popf
paddq
mov
or
fiadds
mov
sarb
inc
out
mov
test
addl
mov
xchg
lret
imul
inc
repnz
pushf
dec
mov
sub
xlat
sub
mov
negb
pop
loop
pop
add
repnz
jno
cmovnp
js
mov
mov
jg
daa
sahf
push
xchg
dec
add
pop
pusha
pop
icebp
addr16
or
mov
jnp
mov
jl,pn
mov
xchg
cmp
inc
arpl
aaa
lods
fmulp
nop
pop
push
scas
out
inc
pop
jbe
rcr
pusha
or
sbb
add
fildl
and
sub
test
sbb
push
lret
xor
gs
dec
rol
bound
xchg
mov
scas
mov
bound
inc
sahf
das
mov
push
mov
cmp
adc
mov
test
lahf
jno
pop
sbb
push
or
or
mov
inc
adc
xor
inc
lcall
lods
aas
jp
sbb
add
pop
mov
mov
lahf
xchg
xor
pop
sahf
xor
rolb
out
mov
pop
xchg
aam
sbb
sub
xchg
aam
test
push
fildll
sbb
push
test
cmp
ljmp
push
arpl
out
mov
sbb
mov
push
sbb
mov
iret
add
fs
rcrl
or
pop
or
cmp
pop
hlt
add
push
or
ret
clc
jp
imul
mov
sub
popl
mov
lds
fldenv
or
pop
mov
popf
push
dec
and
xor
leave
je
push
mov
mov
outsl
push
repnz
lea
xor
sub
xchg
xchg
imul
das
inc
les
gs
imul
cmp
adc
mov
pop
subl
repz
fadds
or
pop
push
pop
arpl
scas
sahf
shll
ret
scas
pop
jmp
mov
out
xchg
inc
sub
push
mov
aad
mov
xlat
or
pop
mov
xor
pop
std
mov
es
or
mov
adc
xchg
aas
xchg
xor
mul
or
test
cli
sbb
loopne
loop
insl
push
mov
cld
jle
sbb
cmpb
xor
loop
movsl
in
pop
push
cltd
shl
sub
call
cmp
xchg
mov
cmc
data16
xchg
mov
inc
jb
mov
test
dec
mov
nop
jno
jmp
jmp
fs
mov
rcrb
lret
into
loope
cltd
ss
out
mov
push
stos
bswap
outsb
imul
push
leave
les
data16
or
xor
ss
sub
pop
sbbb
jae
add
adc
sub
xor
lret
cli
xlat
mov
adc
aaa
pop
js
add
hlt
mov
push
fimull
js
test
pop
cmpb
lods
test
arpl
adc
je
add
loope
lcall
push
clc
ja
lock
sub
outsb
fistpll
mov
adc
mov
lods
les
sbb
mov
sbb
pop
mov
mov
mov
push
xor
xchg
jmp
lret
adc
xor
xchg
inc
movsb
jecxz
adc
enter
cmp
adcl
lahf
xchg
mov
scas
jl
cmp
cli
push
and
jnp
fcoml
lret
xor
jb
sbb
pop
int3
and
aam
cmp
adc
test
mov
popa
movsb
test
and
pop
lds
inc
cmp
insl
jmp
test
stc
test
nop
inc
cmpsl
scas
aaa
push
xchg
mul
add
lods
or
jns
sub
shll
popf
inc
enter
jnp
push
xchg
add
les
push
test
mov
mov
mov
inc
or
inc
notl
ljmp
data16
mov
mov
pop
jl
bound
repz
insl
pop
hlt
out
imul
ds
add
bsf
rcrb
in
xlat
das
cmp
dec
dec
xchg
stos
jae
sbb
and
int
stos
cmp
dec
xchg
mov
xchg
jl
not
enter
int
mov
out
jle
roll
fldt
lods
dec
jno
out
fsts
fisubrl
adc
fsub
xor
test
mov
insb
jecxz
xor
test
pop
sahf
xchg
xor
pop
mov
imul
push
push
out
cmp
ret
mov
xor
stos
popa
push
cmc
call
or
inc
insl
ficompl
inc
test
add
mov
jp
mov
push
xchg
mov
les
dec
scas
das
jmp
fimuls
shl
push
bound
cmp
rcll
xchg
adc
negl
adc
jae
adc
in
testl
mov
mov
lret
fcomps
aad
dec
mov
push
out
loope
mov
jb
xchg
cld
mov
push
ficoms
mov
add
test
pusha
lds
enter
sbb
les
sbb
aad
orb
dec
cli
rcr
mov
nop
push
jle
mov
cmp
sub
scas
ss
fsts
or
aas
dec
out
mov
iret
dec
ret
cmp
cmpl
mov
add
fwait
in
dec
dec
fidivrl
fnstsw
scas
cld
dec
ret
mov
mov
lcall
clc
ss
xor
jns
mov
sar
cmp
stc
pushf
pop
sub
dec
adc
mov
xor
or
addr16
and
cmp
dec
xor
es
ss
stos
xchg
xor
cmp
push
addr16
xor
fisttpll
inc
repz
aaa
arpl
jg
lds
test
push
pop
sub
jno,pt
dec
cld
mov
mov
sti
mov
out
das
into
dec
push
sbb
cmovo
push
inc
into
add
icebp
adc
fnstenv
mov
cld
dec
je
add
push
inc
sbbl
data16
int3
sbb
ret
xlat
push
clc
scas
dec
inc
sub
xchg
push
scas
jmp
test
es
mov
in
into
mov
das
addr16
xchg
sbb
jb
icebp
fisubrl
lock
test
adc
cmp
jge
push
jno
test
inc
cltd
push
sbb
push
jb
nop
jb
imul
cmc
mov
dec
mov
cld
out
xlat
test
sbb
and
xchg
add
cwtl
pop
js
xlat
dec
loop
ficoms
inc
mov
dec
rorl
or
into
cmp
xor
rorl
fcomi
andl
inc
or
call
lret
cmp
mov
jns,pn
fcmovnu
push
lret
mov
mov
psubsw
ds
ljmp
and
mov
insl
loopne
jp
push
repnz
adc
jne
out
adc
addl
cltd
scas
jecxz
pop
insb
dec
arpl
movsb
jno
sbbl
sbb
sub
push
iret
dec
adc
mov
insb
rcrl
in
xor
lds
push
adc
and
iret
jge
fwait
rcl
pop
dec
cmp
pop
inc
fcomip
les
pop
jecxz
repz
pop
mov
nop
or
sub
jnp
xor
arpl
in
arpl
push
or
mov
cmp
incb
and
inc
popa
mov
sbb
sbb
inc
ss
out
inc
jno
sar
das
xchg
mov
in
std
stos
or
sub
push
std
cmp
inc
pop
pop
xchg
jae
rcll
pop
jl
lods
icebp
jmp
cwtl
in
lcall
jg
sahf
sbb
mov
ss
fs
pop
mov
adc
ret
jp
or
outsb
adc
rcll
mov
push
clc
pusha
pop
cmpsl
jns
test
loop
sbb
mov
dec
inc
inc
test
and
cmp
int
jno
pop
and
xchg
sub
xchg
push
fs
jae
mov
push
pop
fistpl
lret
out
aas
bound
aas
ja
xchg
scas
mov
pop
mov
pop
filds
test
shlb
pop
adc
cli
xchg
andb
mov
and
nop
xchg
iret
or
sbb
add
pop
movsb
loop
or
inc
fbstp
jo
pushf
jmp
and
cmp
daa
adc
insb
pop
pop
push
mov
mov
out
or
xor
stc
xchg
adc
sbb
pop
ljmp
sub
repz
xor
cli
mov
into
lcall
mov
dec
add
add
in
addl
ds
popf
jge
rolb
inc
adc
les
jg
mov
test
shll
and
out
jl
sarb
out
mov
sbb
jecxz
fistpll
push
movsb
bound
mov
cs
xchg
jne
call
mov
xchg
push
mov
sti
dec
dec
in
fiaddl
flds
inc
fbld
pop
inc
fstpl
out
lods
mov
adc
fistpl
and
push
scas
mov
mov
adc
cmp
mov
xchg
pop
lock
pop
setno
mov
in
add
mov
mov
pop
adc
aaa
mov
rorb
sbb
loope
xor
xchg
jbe
push
sbb
jmp
nop
push
sub
inc
in
in
hlt
lret
xchg
dec
xchg
dec
add
mov
jp
leave
js
pushf
mov
mov
in
and
push
ret
lahf
fnstenv
jle
insb
or
inc
xchg
dec
pop
push
jns
int
pop
sahf
or
adc
add
fsubl
xchg
cmp
fistpl
pop
ja
inc
add
inc
mov
inc
std
fwait
mov
rclb
xchg
pop
jbe
pop
inc
add
cli
aad
and
sbb
movsl
xchg
mov
sbb
ret
cwtl
mov
sub
and
emms
into
test
popf
pop
in
dec
ret
mov
mov
movsl
out
mov
cmp
ret
movsl
push
sub
dec
icebp
push
push
cmp
add
sbb
arpl
xchg
pop
in
subl
cwtl
jmp
sub
stc
test
add
pushf
test
cmpl
xlat
mov
iret
sbb
jl
dec
aas
aam
xor
and
scas
or
mov
faddp
int
mov
roll
jg
rclb
mov
mov
bound
stos
scas
shll
mov
fdivs
xor
test
mov
leave
mov
movsl
and
pop
ja
int
cmp
or
in
sti
inc
xchg
fdivs
mov
aad
inc
adc
jl
inc
sub
mov
lret
lods
push
mov
aad
lahf
pop
sub
fiadds
xchg
in
lock
mov
push
data16
stc
call
xchg
or
inc
mov
pop
xlat
cmp
sarb
mov
cs
dec
subl
add
addr16
sbb
fcoms
xchg
xchg
cli
sbb
test
dec
dec
cltd
cmp
xlat
subl
jmp
in
mov
adc
or
xchg
mov
test
pop
ss
push
mov
cmc
xor
jno
sbb
pop
inc
mov
jecxz
shl
fcmovbe
xor
loopne
addr16
lea
out
popa
clc
sub
xor
inc
mov
scas
aas
pop
mov
sarb
and
pusha
cwtl
xor
test
mov
and
inc
jmp
mov
add
pop
push
stos
shlb
pop
push
xchg
dec
push
mov
mov
daa
sbb
jne
aam
add
lea
in
xor
mov
mov
ucomiss
repnz
jns
jne
cmpsb
ljmp
gs
popa
sbb
outsl
pop
arpl
pop
pop
shl
push
inc
add
add
cmp
enter
inc
fs
push
movsb
xor
dec
cmp
pop
inc
clc
mov
iret
or
test
sbb
mov
cmp
inc
inc
pop
and
bound
scas
mov
rol
movsl
rcl
ds
pusha
mov
mov
cmp
cs
or
or
and
inc
push
push
pop
sbb
cmpsl
push
lahf
cmp
push
mov
sahf
add
stc
aam
mov
test
jns
mov
push
sub
mov
scas
push
cmpsb
mov
pmaxsw
cmp
dec
xchg
push
jl
fs
rolb
push
das
jno
ljmp
inc
rolb
fidivrs
repnz
test
sub
es
pop
lcall
xor
xchg
adc
xor
cmpsl
test
inc
jns
loope
and
and
sbb
adc
lods
xchg
es
mov
jmp
push
imul
sub
mov
push
sub
push
insb
inc
mov
push
cltd
popa
mov
xchg
dec
mov
xchg
pop
mov
push
push
push
out
inc
mov
aas
mov
lea
mov
mov
push
xchg
pushf
xlat
pop
xchg
mov
and
jo
subb
push
xchg
xor
test
jb
call
ds
cld
ret
dec
divl
push
adc
xchg
stos
subps
outsl
mov
mov
pop
jb
mov
outsl
sbb
pop
mov
mov
addb
mov
add
lea
inc
pop
or
pop
xor
sub
test
cmp
call
mov
inc
lods
inc
xor
insb
test
lret
cmp
jmp
cmpsb
ret
ja
stc
popa
outsl
enter
and
sbb
xor
pusha
xchg
lds
aad
xchg
testb
fldcw
jno
popf
imul
pusha
stc
mov
lret
jp
inc
jecxz
addr16
in
dec
int3
fiadds
outsl
mov
dec
cmp
mov
push
push
call
pushf
popf
or
or
fmuls
pushf
in
cwtl
int
pushf
jl
nop
outsl
push
or
mov
andb
push
push
xor
stos
outsl
fidivl
cmpb
lret
add
xor
adc
int3
ret
mov
aas
push
pop
fsub
adc
sti
mov
push
sub
inc
mov
xchg
or
rorb
inc
arpl
jp
ret
mov
mov
test
pop
mov
mov
ja
cmp
jg
pop
idiv
mov
mov
test
stos
sub
cmp
add
or
mov
in
mov
pusha
xor
dec
enter
ss
aas
pop
push
xchg
or
inc
outsl
stos
cmp
push
insb
movsb
jle
and
fmuls
lcall
imul
jns
shrl
and
lds
rcrb
mov
cld
add
shll
pop
jle
inc
or
leave
out
xor
data16
or
cmc
and
push
mov
jmp
jae
mov
notb
dec
jns
mov
in
push
inc
jmp
repz
pop
sub
adc
cmp
adc
ror
mov
push
push
test
or
cltd
mov
add
and
lcall
repnz
cmp
stos
scas
push
cs
mov
sar
orb
imul
mov
test
ret
xchg
xchg
pop
sbb
es
sbb
sbb
xchg
fbstp
outsb
xor
pop
fisubrs
hlt
lods
fs
aad
cmp
xor
mov
jns
jle
and
shl
mov
pop
jno
mov
test
iret
fdivr
mov
pop
push
push
stos
or
cwtl
pop
push
push
sub
xor
pop
out
pushf
test
sti
jmp
sahf
outsb
pop
adc
sbb
hlt
cltd
cmpsb
int3
or
jp
lret
cmp
test
jp
sub
or
mov
subl
add
sbb
addl
int3
mov
enter
dec
ss
ja
mov
mov
or
push
aaa
add
xchg
xchg
pop
sbb
sub
mov
lea
mov
adc
out
and
shl
enter
mov
loopne
mov
xlat
dec
xor
add
pushf
and
push
pop
addb
cmpsb
iret
and
test
xchg
sbbb
clc
rolb
scas
mov
aad
outsb
rcrl
gs
jne
shr
stos
es
aas
xchg
cmc
mov
stos
sbb
pop
push
loopne
outsb
cmp
hlt
jae
sti
pop
ret
mov
xchg
pop
gs
and
add
inc
aad
imul
inc
lea
xchg
adc
ss
pop
outsl
inc
iret
mov
loop
and
pusha
jge
sub
repnz
mov
add
aad
inc
or
push
cltd
fdivl
lcall
pop
inc
pop
push
sbb
push
push
aad
pop
ja
icebp
pop
mov
mov
or
mov
into
jnp
mov
and
aad
ja
lret
ja
inc
mov
iret
fdivr
addr16
test
push
cs
dec
xchg
pop
and
sub
push
ss
dec
inc
adc
inc
pop
dec
movsb
aaa
xlat
cmc
inc
loope
inc
inc
pop
sbb
cwtl
pop
pop
cmp
mov
enter
adc
xchg
sahf
xchg
out
lcall
jecxz
xor
mov
push
into
mov
jmp
push
xchg
fcom
pop
in
jg
mov
pop
inc
push
xorb
pop
rolb
out
in
jno
mov
cmp
push
movsl
daa
pop
xor
cmp
and
inc
mov
sub
push
hlt
shlb
add
lods
push
or
push
jmp
pop
sbb
in
in
lock
adc
mov
test
xchg
add
das
jne
pop
xchg
add
stc
sbb
mov
dec
mov
xlat
push
repnz
xorb
lds
inc
out
insl
xchg
scas
fmulp
in
fldcw
cmp
adc
pop
mov
mov
push
rcrb
add
add
add
mov
stc
and
stc
out
sbb
mov
fiadds
cmp
stos
dec
sbb
scas
sbb
cld
push
clc
xor
es
mov
mov
mov
push
stos
cmpb
or
mov
jo
shll
inc
ljmp
in
pop
sub
xor
stos
jge
jbe
dec
imul
fisubrl
enter
call
aam
sbb
std
outsb
clc
push
mov
pop
roll
cmp
mov
dec
mov
sbbb
push
dec
inc
push
fdiv
enter
gs
push
add
sti
call
scas
stos
stos
add
inc
sbb
nop
mov
inc
aas
pop
pop
imull
imul
mov
imul
mov
inc
mov
cmp
lods
inc
out
ljmp
xchg
inc
call
jns
in
sbb
xchg
sub
pushw
dec
inc
outsl
data16
xor
sarl
shlb
pop
in
es
sub
pop
add
xor
xchg
mov
pop
cwtl
dec
roll
xor
loopne
leave
scas
and
dec
jge
adc
mov
ljmp
cmpsb
cltd
into
imul
je
pusha
or
pop
inc
and
and
mov
push
mov
xchg
adc
sbb
mov
sbb
in
mov
adc
sbb
insl
pop
mov
ficomps
in
lods
adc
pop
lcall
push
insb
dec
pop
jne
popf
mov
mov
fistpll
push
cmc
sub
push
mov
adc
in
das
inc
iret
andl
jmp
mov
fdivrs
mov
std
sahf
dec
adc
scas
sahf
xchg
and
loope
sub
enter
push
iret
mov
add
pop
pop
stos
mov
into
orb
jns
cld
adc
cmp
rcrb
jmp
ss
push
mov
sub
dec
rcrl
lock
xchg
ficompl
mov
in
sarb
lret
xor
inc
xor
enter
xchg
mov
dec
pop
hlt
or
and
mov
or
in
xchg
mov
or
inc
sarl
xor
pop
jbe
xchg
jnp
or
xorb
aad
and
and
sti
notb
push
add
cmpsl
ficompl
mov
pop
stos
daa
cmp
mov
mov
jbe
lcall
dec
or
stos
push
enter
add
add
cmc
ficomps
cld
pop
in
inc
into
jecxz
mov
test
lahf
xor
mov
push
inc
sbb
adc
pop
and
inc
xor
jb
je
jnp
xchg
or
and
sub
orb
insl
pop
outsl
xchg
mov
xor
xor
or
repnz
jns
mov
lcall
lahf
push
mov
mov
jmp
xor
lcall
fistps
push
lods
fucom
lds
pavgb
add
and
sub
stos
shlb
cmp
pop
es
mov
sbb
add
mov
andl
loopne
call
cmp
jo
arpl
xor
nop
mov
and
inc
ss
push
mov
push
clc
mov
in
xor
adcb
aad
fiaddl
dec
jge
test
xlat
push
ds
addr16
adc
mov
mov
cli
or
push
and
mov
shrl
stos
or
jne
adc
inc
mov
add
pushf
fs
mov
test
repnz
lahf
data16
xchg
lds
push
adcb
fsubrp
mov
aaa
pop
cmpsl
xchg
jmp
pop
out
mov
xchg
lret
xchg
ljmp
mov
push
fsubr
pop
imul
incl
dec
icebp
imul
mov
jmp
cmp
ss
aas
cmp
cmp
stc
jb
jb
dec
pop
mov
mov
sub
imul
movsl
mov
mov
and
mov
fnstenv
sub
mov
aad
dec
cmp
jnp
adc
pop
ljmp
out
in
push
iret
das
mov
insl
leave
bound
xchg
add
adc
imul
fdivl
imul
das
or
jae
mov
lds
icebp
push
dec
xchg
push
or
bound
or
flds
jne
fldcw
loopne
push
mov
mov
mov
mov
outsb
decl
cmp
lods
fmuls
pop
or
call
sbb
jns
pop
jbe
sbb
inc
aam
xor
ja
mov
add
lcall
leave
sub
aad
or
pushl
jg
mov
pop
lds
icebp
pop
loop
stos
das
xchg
xor
hlt
ds
sub
push
add
mov
mov
ret
int
pop
xchg
and
ds
dec
imul
insb
loopne
jno
test
repz
cmp
cwtl
cmpsb
inc
mov
inc
js
jecxz
inc
lahf
test
out
negb
negb
scas
xorl
pushf
mov
fidivrs
cli
je
push
jno
xchg
push
mov
cmp
adc
add
dec
pop
movsl
loop
lock
leave
cmp
stos
adc
inc
nop
jmp
pop
pop
add
fucomi
rcll
xchg
inc
jle
je
xchg
mov
xor
dec
lret
mov
fs
add
nop
and
mov
push
mov
lea
push
jle
sbb
stos
shrb
testl
rcrl
mov
ffree
imul
jns
xor
das
and
iret
xor
int3
cwtl
jb
insl
fsubrl
lret
cmp
add
subb
dec
mov
int3
xor
sub
sahf
mov
pusha
push
insl
mov
loope
xchg
stos
bound
fldl
mov
push
dec
testb
pushf
cs
fsubs
push
mov
inc
adc
inc
es
dec
add
mov
mov
cld
cmp
int3
call
orb
adc
jae
mov
cmpsl
push
incl
mov
jg
stos
add
and
sub
push
mov
aad
push
out
fcmovne
push
mov
xchg
inc
cmp
push
push
movsb
imul
mov
movsl
in
fdivp
add
dec
out
push
mov
mov
cmp
inc
cmp
insl
pop
insb
jl
mov
sbb
dec
push
lahf
jg
adc
ljmp
repz
jg
xor
rclb
or
cmp
sub
insb
cmp
sahf
jno
icebp
and
fistps
mov
sub
xor
icebp
in
and
dec
jbe
add
int
jb
test
idiv
gs
cwtl
ffreep
iret
stc
jne
les
xor
icebp
popf
mov
mov
pushf
jmp
insb
cmp
dec
mov
outsb
pop
outsl
pop
inc
inc
mov
or
jl
push
ljmp
jge,pt
sbb
mov
pop
inc
idiv
icebp
leave
jmp
sbb
das
sbb
xchg
sahf
xor
add
and
push
sbb
or
sbb
les
inc
dec
and
mov
cmpsb
xor
mov
mov
pop
popf
adc
inc
lea
or
cmpb
enter
lods
and
adc
addr16
mov
lds
or
mov
sbb
mov
pop
repz
cmp
frstor
push
ja
push
xor
in
loop
push
in
jae
mov
xchg
rcrl
popl
mov
ljmp
push
xchg
cmp
sub
cltd
dec
sti
mov
bound
xor
rorl
mov
inc
mov
movsb
mov
mov
sub
jge
mov
pop
jno
into
gs
add
xchg
dec
inc
jmp
xchg
jae
adc
mov
sub
adc
xchg
loop
out
jnp
mov
imul
add
add
and
cmp
loop
imul
jl
incb
movsl
fldenv
loopne
pop
out
cmp
mov
stos
stc
mov
cld
pop
iret
iret
inc
in
int
imul
jb
pop
je
iret
cmp
jmp
mov
adc
push
adc
mov
scas
adc
push
mov
mov
maskmovq
divl
mov
pop
pop
dec
test
nop
mov
dec
les
and
adc
jl
xor
mov
push
lret
es
scas
repz
xor
je
sub
add
cltd
sbb
decl
push
inc
enter
ds
xor
mov
xchg
stos
cwtl
pop
mov
dec
or
dec
lret
push
out
sub
adc
and
roll
push
push
sub
aam
mov
jl
cmp
xchg
dec
jge
dec
scas
sarl
fdivrs
jmp
cmp
add
pop
mov
pusha
mov
mov
int3
out
jnp
jg
in
mov
adc
stc
mov
bound
or
sub
test
xlat
dec
add
adc
mov
push
insl
pop
cwtl
xchg
jmp
outsb
ds
clc
lds
adc
fidivrl
stc
inc
mov
or
xchg
int3
lock
js
xor
aas
jno
lret
or
repz
pop
adc
sub
mov
inc
sub
cmpsb
mov
out
inc
or
enter
inc
int
rolb
adc
mov
jnp
mov
xorb
dec
or
and
mov
or
adc
mov
insl
pop
push
insl
lds
push
adc
jge
or
imul
shrl
pop
out
or
mov
outsb
adc
data16
cmp
ja
daa
mov
sub
inc
fildl
sarb
insl
mov
mov
test
xor
fisttps
cld
test
cmovae
aam
mov
mov
mov
xchg
and
std
cmp
inc
leave
mov
sub
jne
outsb
out
sbb
sub
xor
test
pop
roll
inc
in
sahf
clc
lahf
lahf
aam
add
aaa
inc
mov
sbb
dec
mov
push
add
insl
loopne
sub
add
repz
xor
xor
lods
push
aaa
test
outsb
mov
inc
push
fisttps
scas
les
pop
xchg
jecxz
mov
cwtl
adc
cmpsl
cltd
sub
add
mov
mov
ljmp
mov
push
addb
mov
add
aaa
xchg
and
dec
das
jl
fldt
scas
xchg
inc
mov
stc
push
xchg
mov
ret
jb
inc
jmp
in
push
bound
push
imul
mov
std
sub
jbe
sub
mov
aas
out
jb
les
sub
pop
lds
insl
stos
or
dec
pop
mov
fsubl
call
ret
mov
mov
fwait
mov
mov
pop
stos
or
push
mov
loop
xor
cmp
and
rcr
outsl
nop
js
popa
jp
cwtl
outsl
cwtl
jecxz
xchg
pop
fs
jge
cmp
cmp
xor
loop
sbb
adc
std
inc
xchg
enter
inc
xor
fildll
inc
mov
dec
mov
movsb
jmp
inc
lcall
mov
ret
mov
add
inc
stos
imull
lret
add
inc
popa
pop
es
pop
test
divb
mov
js
data16
sub
jne
push
lcall
pop
adc
shll
jg
aad
iret
lcall
mov
add
and
pop
cmp
je
inc
stc
mov
cmp
jne
testb
repnz
pop
arpl
pop
mov
xlat
fists
scas
or
call
mov
fcoms
jp
mov
sbb
in
cmpsb
push
cmpsl
lret
pop
adc
mov
outsb
push
cmp
fisubs
inc
popa
test
out
out
mov
add
jl
imul
lret
mov
adc
inc
adc
sub
scas
inc
out
mov
rolb
xor
cmp
cmpl
dec
pop
pop
inc
sub
sub
ret
lds
aam
dec
jae
dec
dec
pop
ret
sbb
mov
push
inc
add
and
lds
sbb
add
cmovp
jl
push
mov
pop
sub
rdpmc
popa
jnp
ljmp
xorl
lods
mov
stos
loop
pop
repz
and
jge
gs
pusha
xchg
xor
and
and
pop
mov
cmp
or
cmp
leave
push
cmp
xor
outsb
xchg
fsubs
cld
lods
fs
gs
out
dec
jns
or
dec
sbb
sub
repnz
mov
fisubrs
int3
pop
mov
jle
jge
test
xor
xchg
sub
ret
shll
out
mov
cmc
inc
lock
cltd
and
jne
push
loopne
mov
xchg
test
push
out
dec
outsb
addl
mov
or
pop
cmc
dec
cld
inc
aam
push
fmul
mov
cmp
xchg
pop
ret
inc
push
sbb
out
pop
pop
xchg
mov
xor
ja
push
dec
mov
sub
jl
dec
sbb
je
sbb
mov
shrl
push
sub
sbbb
ret
clc
cli
aaa
fiadds
cmp
loop
adc
and
lahf
adc
and
dec
or
add
push
repnz
repnz
jae
push
mov
fnsave
lcall
jnp
jb
test
cmpsl
or
mov
loop
xor
mov
insl
movsl
shll
cmc
lock
shl
mov
cmp
test
adc
ret
inc
test
mov
xchg
or
push
push
sbb
clc
testb
fsubl
scas
pop
jns
ja
pop
push
inc
sbb
imul
add
mov
fs
dec
cmp
mov
sbb
aas
lds
or
jne
fsubrs
push
ja
xor
mov
sbb
lcall
mov
rol
xor
mov
ds
pop
sub
sarl
add
aas
and
jl
and
aas
bound
das
shll
cmp
dec
and
insb
mov
dec
roll
test
into
pop
out
imul
push
out
mov
pop
enter
fwait
or
dec
aas
cmp
mov
or
or
or
adc
js
enter
sub
inc
dec
aas
jbe
movsl
es
test
sub
lahf
stos
xchg
add
push
in
push
lea
sar
cmp
dec
jno
es
xor
je
int
fsubrl
js
adc
sub
mov
cmpsb
cmp
arpl
call
lods
stc
sbb
xor
mov
sbb
jbe
cwtl
sbb
push
xor
cmp
loope
fnstenv
cwtl
sahf
in
hlt
cmc
lock
dec
fldcw
jecxz
in
cmc
xorl
and
negb
xchg
jg
mov
adc
sub
xor
xor
repz
xchg
sbb
pop
xchg
push
xchg
mov
insb
or
call
int
cld
roll
fcompl
xor
jae
cmp
inc
aas
cmc
std
push
xor
mov
fcoms
and
lods
ret
mov
inc
into
popl
adc
aad
and
mov
adc
add
xorl
ret
push
outsb
int
in
mov
sub
inc
repz
mov
bound
in
mov
mov
mov
inc
sbb
in
adc
xchg
cmp
xor
cmp
jmp
mov
out
xor
cmpsl
clc
adc
and
in
sbb
jnp
sub
mov
imul
dec
lds
cmp
fdiv
imul
out
ficoms
xchg
cmp
popf
aas
cli
adc
aam
pop
push
out
pop
pop
addr16
inc
pushf
pop
adc
bound
add
fs
sarl
nop
por
out
push
jp
push
push
fwait
gs
cltd
cmpsb
int
fcoml
loope
dec
ficoms
js
dec
pop
dec
mov
daa
push
xchg
das
insl
cmp
incl
lods
and
pusha
outsl
or
fcmovb
adc
xor
lret
pop
xchg
push
sbb
ja
jnp
jl
ljmp
or
xor
jle
adc
cwtl
pushl
les
dec
dec
dec
xchg
jae
lock
in
dec
xchg
add
mov
xor
cld
scas
push
shlb
push
mov
xor
mov
inc
test
ret
and
or
mov
aaa
dec
mov
data16
mov
xlat
ljmp
xlat
in
iret
jns
xchg
xor
pop
test
pop
jno
jb
andl
push
pop
add
aad
cwtl
enter
imul
cltd
cs
adc
mov
fucomip
cmpsb
adc
jmp
and
xchg
jnp
sub
or
xchg
pushf
pop
shll
clc
mov
roll
aam
cld
mov
sub
pop
fstpt
leave
mov
aam
out
mov
pop
lods
jl
mov
jns
sbb
mov
mov
add
fisubs
push
cmp
inc
xor
mov
adc
loopne
lods
xchg
dec
mov
sbb
aaa
es
imul
and
cmc
pusha
mov
add
push
stos
cmp
mov
adc
adcb
je
lret
stos
imul
les
xchg
add
inc
mov
movsb
and
fildll
push
cmp
stos
xor
xor
lods
pop
sti
ss
ljmp
fdivr
lcall
loop
sbb
iret
lret
add
xchg
lcall
and
fisubrs
mov
jp
sub
ret
divb
nop
mov
push
add
mov
cmpsb
out
sub
loope
dec
fmull
std
pop
pop
inc
jne
add
mov
fsubrl
enter
cmpsl
ljmp
fimuls
adc
sub
movsl
insb
jmp
pusha
adc
push
inc
pop
roll
flds
push
mov
or
jmp
sub
sub
push
fists
call
test
pushf
aad
or
jp
ficompl
cmp
inc
out
xchg
inc
dec
add
fstl
shrl
cmp
stos
mov
mov
lretw
testl
jmp
lcall
mov
inc
sbb
pop
movsb
or
mov
shr
roll
xor
adc
inc
les
sbb
push
mov
xchg
or
jmp
xchg
inc
cmp
cltd
inc
mov
mov
pop
faddp
fpatan
mov
lahf
pop
dec
sub
pop
mov
push
outsb
fcomps
lods
jmp
icebp
test
inc
mov
and
fs
std
xor
or
xchg
mov
repz
loopne
push
popf
in
divl
or
push
cmp
jl
sti
or
loope
out
xchg
fcmove
mov
popf
mov
xchg
xchg
xorb
and
je
fsubr
test
inc
inc
jns
jo
mov
push
mov
mov
push
test
pop
mov
push
xchg
lcall
sbb
in
or
popf
fwait
xor
andl
jno
sbb
jp
cmp
jle
mov
jmp
dec
leave
mov
adc
imul
or
arpl
ds
mov
mov
fmuls
ss
lcall
cmp
mov
or
fs
cmp
ds
mov
inc
xchg
sbb
xchg
push
hlt
sub
jp
xchg
sub
jnp
mov
fiaddl
arpl
lea
rclb
and
test
lret
loopne
icebp
push
and
icebp
xor
iret
into
test
sub
add
xlat
lret
inc
cmp
mov
lods
add
xor
fsubr
push
mov
aaa
sarl
cmpsl
icebp
ret
shrl
lret
or
dec
push
rorb
fidivrl
loopne
aad
pop
pop
test
inc
adcb
out
inc
std
jnp
pop
je
mov
lahf
pop
push
lret
aas
sbb
sub
jbe
movsb
add
and
inc
in
in
inc
xor
cmp
xor
or
cmp
dec
movl
xchg
stos
stos
cmpsl
sahf
les
movsb
pop
in
sti
and
bound
loopne
cmp
xchg
push
sti
cmp
fsubs
call
call
cmpb
ljmp
sbb
dec
cld
mov
or
jnp
mov
loop
sub
popf
sbb
pop
push
push
cvtps2pd
mov
jo
jno
push
jmp
out
insl
mov
xchg
mov
in
pop
cltd
xor
adc
sbb
call
int
cmp
mov
sbb
and
or
and
insb
dec
sub
xchg
or
cmp
push
orb
pop
data16
and
mov
out
xchg
in
inc
and
push
jle
xor
mov
int
mov
aaa
inc
cmc
icebp
push
adc
jmpw
jno
add
or
stos
outsl
daa
test
inc
test
imul
out
push
in
and
enter
fsubl
mov
or
loope
pop
inc
sbb
test
ret
pop
pop
or
mov
sub
push
push
xchg
dec
imul
fs
cmp
jg
push
dec
sub
cmp
push
fs
aam
jnp
dec
cmp
push
mov
jb
cmp
aas
repnz
icebp
sbb
mov
in
xor
mov
int3
mov
stos
and
xchg
or
incl
mov
sbb
dec
cmp
lahf
iret
lret
xchg
mov
jcxz
and
aam
cmp
pop
jo
mov
mov
movsl
aam
sub
push
pusha
cs
aad
sbb
je
adc
ljmp
aas
mov
pop
test
dec
aas
idiv
data16
xchg
ret
ret
add
test
pop
mov
mov
dec
repz
test
inc
pop
mov
add
fucomip
out
out
jp
repz
shrl
or
lcall
bound
xor
and
into
push
xor
sub
sub
xchg
cwtl
fbstp
dec
movsb
test
fnstsw
sbb
call
dec
out
clc
daa
decl
enter
into
pop
cmp
xorb
push
ds
lods
push
sub
lds
and
loop
mov
fildl
cld
xrelease
xchg
lcall
push
dec
xchg
mov
push
push
cmc
fcoml
lret
push
mov
subl
iret
inc
mov
cli
push
or
inc
push
fs
inc
pop
or
fstpt
insb
adc
imul
jo
movsb
call
push
xchg
xchg
sub
or
push
xor
xchg
sarb
add
mov
mov
fs
jp
lret
mov
adc
mov
push
lahf
and
lock
pushf
xor
sbb
add
lods
xor
ljmp
stos
iret
mov
lahf
aas
stc
inc
sub
jns
and
inc
ljmp
pushf
call
dec
xchg
dec
or
scas
pop
nop
cmp
dec
jge
cmp
mov
insl
bound
push
aas
popa
mov
out
sub
negb
imul
push
fistpll
jl
jno
lahf
pop
ljmp
inc
imul
xchg
mov
push
xor
sbb
and
pop
inc
fdivr
in
pusha
insl
jns
leave
push
xchg
mov
sub
or
sbb
je
cs
es
mov
movsb
aaa
cmp
sti
pop
in
jbe
xor
xchg
out
jnp
dec
xchg
sub
inc
into
leave
xchg
nop
mov
push
ret
lcall
out
push
adcl
sahf
mov
dec
into
or
lock
sahf
data16
sarl
fsubp
or
xchg
mov
push
mov
cmp
mov
push
xor
rclb
das
aaa
int3
xlat
xor
push
cmpsl
std
outsb
cwtl
xchg
js
jne
sbb
orl
mov
cmp
or
mov
pop
popf
dec
cmp
orl
dec
ficompl
inc
data16
inc
arpl
lcall
addr16
sbb
or
adc
push
cmp
adc
push
fcoms
movsb
fs
xchg
into
mov
movsb
pop
pop
jae
inc
popa
enter
out
movsb
xchg
jnp
push
dec
inc
push
call
fsubr
fisubrl
rcrl
int3
xchg
negl
icebp
sti
xlat
xchg
ret
stos
aam
mov
nop
int3
fnstsw
sub
add
jns
outsb
insl
fs
mov
mov
pop
sbb
adcl
sub
mov
insl
fisttps
ja
cli
mov
push
cwtl
stos
push
hlt
add
jmp
push
cmp
out
mov
xor
push
pop
adc
data16
mov
push
xchg
pop
idiv
out
jo
or
andl
mov
inc
cmp
fistps
pop
push
mov
jns
mov
jae
aaa
dec
fsubrl
mov
fs
aad
mov
fimuls
dec
cmpsl
push
sbb
add
pushw
inc
push
inc
xchg
iret
jnp
xchg
xchg
test
jle
inc
push
mov
sub
add
into
cmpsl
cmp
rorb
popf
and
pop
add
movsb
rclb
sti
sbb
dec
js
cltd
sbb
imul
jge
pop
jmp
add
xor
sub
loopne
jle
cld
jle
gs
scas
cmp
rclb
aam
inc
rorl
loopne
jge
mov
sub
sti
mov
push
adc
arpl
jmp
mov
jmp
fs
mov
shll
inc
push
xchg
bnd
adc
call
lock
int
push
into
mov
jp
mov
mov
clc
cwtl
sbb
fwait
aam
push
xchg
mov
jl
int
or
pop
push
and
mov
add
mov
sbb
push
in
in
jmp
aad
mov
fstpl
jecxz
sbb
adc
movsb
fists
cmp
push
mov
push
mov
jg
imul
clc
bound
leave
xor
mov
cmp
cltd
in
ss
dec
rorb
xchg
inc
xchg
jbe
push
mov
adc
cmpsl
stos
mov
jg
sub
je
xorb
clc
jnp
jne
stos
sub
fsts
stos
insl
dec
xor
sub
aas
or
loopne
cmpsl
sbb
pop
or
mov
pushf
xor
mov
pop
cmp
sbb
cmpsb
xor
int
mov
dec
sub
mull
fs
and
jbe
in
xchg
cmp
mov
pop
hlt
popf
or
pop
push
pop
mov
mov
mov
pop
ficoms
add
in
das
cwtd
imul
ss
and
cmpsl
aam
pop
or
jae
mov
popf
xchg
lret
mov
test
adc
rcrl
std
loopne
inc
insl
xor
std
push
scas
ja
test
sub
and
pop
shrl
mov
stos
xchg
mov
mov
xor
ficoms
push
cs
xor
stos
cmp
xchg
test
das
mov
call
cmp
fisttpl
test
adc
inc
add
test
dec
push
mov
pop
movsb
punpckhwd
ret
adc
dec
and
data16
fwait
lods
insl
and
sahf
jo
lock
cmp
es
xchg
cmpsl
adc
mov
adc
iret
sahf
mov
cmp
test
sbb
inc
out
cmp
ja
addr16
test
sbb
lods
dec
mov
insb
test
adc
fbstp
xchg
and
pop
xchg
push
dec
aas
pop
sbb
cmp
push
mov
flds
pop
sbb
push
mov
xor
fdivrl
dec
sub
orb
pop
mov
add
rcll
fwait
lahf
lret
std
in
add
lds
sub
cltd
sbb
pushf
inc
sbb
lret
movsl
jmp
int
xorb
mov
fisttps
jmp
outsl
mov
xchg
sbb
pop
push
repz
xchg
mov
dec
fistl
arpl
leave
sub
cmp
pop
inc
xorb
pop
mov
sbb
lcall
mov
pop
push
mov
rcr
pop
and
cs
xlat
in
loope
xchg
mov
push
shlb
cmp
cmp
and
lock
lret
add
in
clc
push
mov
bound
xchg
pop
cwtl
je
mov
rolb
loope
mov
sub
mov
fcmove
add
testb
orl
fs
mov
shrl
in
mov
jge
cmp
cmpsl
cld
xchg
push
in
cld
jl
repnz
mov
jae
push
and
stos
jns
mov
mov
movsl
add
shlb
cwtl
mov
or
aas
push
cmpsl
xchg
add
jb
stos
aam
add
sub
sarl
arpl
pop
out
dec
xchg
xchg
in
jb
add
cwtl
fnstcw
out
loope
xor
insb
cmp
mov
mov
imul
cmpsl
loope
icebp
pop
test
mov
mov
popf
out
dec
xor
xor
jmp
nop
jbe
mov
ja
add
movsl
cltd
sub
sub
or
shlb
or
test
movsb
iret
jns
aad
data16
repz
test
push
jbe
jnp
pop
fs
or
fucomp
loop
test
push
movsb
in
xchg
cmpsb
pop
into
scas
or
push
inc
in
push
rolb
enter
jmp
pop
or
dec
in
xchg
mov
fsub
push
dec
ja
gs
sub
mov
jmp
xor
cmc
dec
fwait
xlat
gs
inc
out
cwtl
fstpl
rcrl
dec
mov
add
inc
push
fwait
jle
fidivl
ja
aas
movsl
xchg
mov
xchg
push
daa
xchg
jecxz
andb
xchg
and
jle
push
add
ljmp
pop
bound
adc
mov
sub
mov
pop
lds
push
mov
inc
rcrl
mov
sub
xor
orl
pop
pop
pop
into
iret
aaa
push
lods
mov
ss
push
or
dec
xor
or
xchg
add
push
mov
jns
test
mov
testl
cmc
cmp
leave
popl
mov
pop
aas
sub
in
outsl
sahf
enter
dec
xor
and
hlt
mov
dec
mov
ficoms
outsl
icebp
fwait
pop
mov
aaa
inc
and
and
sub
push
mov
adc
jnp
shlb
inc
xchg
mov
sbb
icebp
stc
adc
movsbl
xor
outsb
xchg
inc
push
push
daa
cmc
or
iret
push
pusha
add
fistpll
das
xchg
std
insb
out
cmp
ret
xchg
inc
jl
jnp
mov
jp
push
adc
cmpsl
lods
incl
daa
daa
movsl
les
arpl
cld
cltd
jmp
push
push
xchg
inc
mov
mov
dec
sub
xchg
add
popa
push
shl
int3
xchg
cmp
dec
hlt
pop
pop
shlb
add
les
jno
imul
mov
ljmp
mov
pusha
jnp
jns
loop
xlat
mov
lods
jle
mov
or
push
add
adcl
loop
dec
repz
pop
sahf
sar
pop
sub
ret
xor
cmpsb
sar
jl
aam
outsl
push
cmp
pop
enter
test
jnp
std
nop
data16
add
mov
mov
dec
ljmp
or
adc
xchg
or
and
mov
pop
outsb
adc
lds
jge
cs
and
hlt
xor
into
subl
push
sub
jne
and
bound
sbb
mov
or
inc
xor
dec
mov
cmc
cwtl
pop
cmp
mov
or
mov
lea
adc
in
lret
jl
mov
mov
jno
inc
sbb
pop
in
insl
xchg
lahf
out
jl
sbb
mov
and
sbb
addr16
add
sbb
lods
sub
je
sbb
popa
pop
addr16
std
call
cmpsl
out
xchg
lret
mov
rorl
push
insl
add
cmp
inc
popf
clc
js
sbb
je
sti
pushf
jbe
add
mov
add
sbb
jno
lcall
mov
xor
test
sbb
adc
test
mov
dec
push
bound
inc
jge
mov
xchg
imul
fiaddl
jns
dec
call
jne
sbb
stos
cmp
test
idivl
clc
pushf
cltd
icebp
bound
xor
dec
test
push
inc
inc
lods
xchg
mov
test
inc
mov
movsl
stos
mov
inc
cmp
test
jne
dec
add
gs
push
ret
fadds
rcrl
pop
bound
cmp
rcll
iret
stos
inc
enter
or
pop
sbbl
jb
inc
das
data16
ljmp
cmp
out
sbb
pop
sub
clc
pop
xlat
stc
jo
cmp
pushf
loop
pusha
jmp
jne
pop
mov
mov
idivb
ds
mov
adc
and
and
push
test
jb
and
shlb
cmpsb
mov
cld
in
or
xlat
popf
addb
cmp
fstl
xor
xlat
repz
out
sbbl
subl
jecxz
fisubrl
mov
dec
outsl
or
sub
aas
ret
cmpsb
and
jmp
loope
lea
fld
fnstsw
int3
push
out
xor
mov
lahf
push
mov
jne
aad
movsb
mov
rcrb
movsl
mov
push
add
cmp
pop
xlat
push
adc
push
or
jle,pt
sub
cltd
sarl
and
mov
movsl
daa
flds
dec
sbb
jo
in
inc
inc
cmc
pop
dec
dec
popf
addl
and
out
les
jbe
mov
cld
test
mov
xchg
push
rcr
dec
movsb
xor
push
enter
jmp
or
dec
lods
push
xchg
test
push
test
xor
das
mov
outsl
roll
xor
jo
test
scas
in
push
or
push
jae
dec
daa
jnp
scas
push
xor
fsts
out
push
hlt
sbb
mov
xchg
push
pop
clc
sbb
push
xor
jb
lds
jecxz
pushf
push
cmpsb
mov
in
jno
jne
mov
test
rclb
inc
inc
dec
dec
inc
arpl
ret
mov
fdivl
mov
sar
popf
mov
mov
jecxz
ljmp
cmp
sbb
cmpsb
inc
sbb
add
std
fcoml
rclb
cltd
push
mov
inc
xor
in
push
in
lock
jmp
xchg
pop
daa
je
adc
iret
jl
outsl
push
xor
sbb
daa
repnz
stos
outsl
mov
add
mov
jo
or
repz
daa
loop
addb
pushl
mov
lods
arpl
enter
inc
jbe
jnp
jnp
add
and
ret
inc
loopne
add
mov
xor
and
push
adc
fcomps
jno
ret
pop
dec
xchg
hlt
xlat
mov
xor
out
and
mov
xor
mov
add
divb
jmp
pop
adc
dec
mov
bound
mov
xchg
divb
cmpsb
mov
imul
jnp
ret
daa
cmp
adc
aas
mov
pop
out
imul
fs
lret
dec
and
xchg
rcll
repz
ss
std
jp
shl
xorb
andb
dec
lahf
scas
xor
int3
sub
popf
lock
xor
aaa
jge
outsl
sti
ret
mov
mov
pusha
cmp
lds
add
cmp
inc
out
inc
dec
inc
push
dec
jns
push
mov
jnp
mov
jle
je
outsb
and
pusha
xchg
int
push
push
int3
inc
fucomp
push
inc
sub
jbe
arpl
push
mov
xchg
dec
clc
lret
push
adc
lock
push
lds
xlat
out
rcrl
mov
lock
daa
fs
fdivrl
or
dec
jmp
mov
arpl
imul
jmp
test
cmp
jp
movsl
pushl
push
jne
cld
jno
fucom
das
xchg
and
xor
aaa
movsb
xor
adc
testb
fsubrl
mov
loopne
jmp
fidivrs
add
sbb
cli
cmpsb
call
cmpsl
or
outsb
in
mov
dec
out
mov
adc
adc
jne
dec
pop
popa
and
push
fcoml
pushf
je
fdivr
xchg
pushf
cmpsl
sub
push
movsb
mov
call
roll
lahf
adcl
jae
pop
test
jno
push
push
jnp
xlat
lret
in
sbb
das
mov
stos
fcompl
jae
das
xchg
in
pop
fsubl
mov
dec
int3
shrl
lods
mov
nop
fs
ja
sti
pop
cmp
jbe
cli
shl
call
jp
adc
or
adc
jge
push
inc
int3
sub
fdivp
and
adc
test
push
popa
jl
rcrl
stos
inc
dec
mov
xchg
fdivrs
cmpsl
test
sub
sub
adc
loopne
stos
push
xchg
mov
cmp
add
jmp
mov
xor
push
hlt
sbb
sub
xor
data16
mov
imul
push
sbb
fnstcw
stos
xor
pop
add
xor
inc
dec
mov
addr16
shll
sbb
xor
out
xchg
sbb
test
push
cwtl
jge
mov
fs
and
ljmp
aaa
aaa
mov
outsb
adc
divb
mov
rcrl
inc
es
and
xor
mov
add
add
sub
mov
adc
push
mov
loope
ret
xchg
aam
mov
lahf
add
enter
mov
mov
fsubrs
pand
andl
mov
inc
sbb
stos
fiaddl
inc
or
add
adcl
js
int
push
es
inc
cwtl
adc
mov
aam
lret
imul
xchg
inc
std
iret
shlb
jb
add
loope
push
jnp
lock
mov
clc
lock
outsb
push
and
adc
cmpl
in
das
movsb
mov
jbe
gs
dec
xor
push
jne
std
jge
xor
push
fistl
sahf
rorl
call
sbb
mov
pushf
cmp
inc
sar
dec
pop
cmp
jne
fisubl
or
or
push
xchg
lock
ds
cli
cmp
das
outsl
lret
nop
xor
sub
aas
fisubrl
dec
or
sahf
cwtl
inc
in
addr16
scas
out
jbe
nop
out
daa
pushf
and
or
jg
stc
push
shrb
push
pusha
sub
xlat
sahf
lock
std
and
adc
sbb
repnz
jno
mov
repnz
pop
xchg
pcmpgtb
push
mov
sbb
pushf
sub
icebp
std
dec
cs
cmpsl
add
mov
sti
ret
add
popf
loop
mov
ja
or
dec
sub
mov
mov
out
sbbl
fidivrl
and
pop
je
fmuls
ss
push
and
fcmove
xchg
and
xchg
add
cltd
pop
xlat
mov
std
cmp
add
push
sarb
inc
add
ja
mov
xchg
ret
lds
lahf
xchg
jne
mov
cmp
fs
pushf
outsl
cmp
and
popa
adc
or
pushf
jge
mov
lock
cwtl
leave
mov
pop
mov
test
sbbl
jmp
scas
sub
inc
and
js
xchg
cltd
inc
leave
enter
pop
outsb
in
xchg
pop
cmp
xor
cmpsb
nop
mov
sti
data16
mov
add
adc
mov
mov
testl
xor
jnp
arpl
jle
mov
mov
sub
jmp
fistpll
decl
cmp
push
js
mov
cli
in
testl
and
fnstsw
pushf
ret
loop
mov
mov
xlat
adc
sbb
xor
cmpsl
test
hlt
mov
loopne
iret
cmpb
sub
xor
pop
push
xchg
pop
in
js
dec
push
bound
mov
fwait
cli
int
sbb
jne
test
cs
mov
sub
imul
cmp
sbb
or
fisttps
inc
adc
lcall
sub
fbstp
loop
jg
push
inc
test
repnz
lret
sbb
sarl
adc
add
es
lret
push
mov
mov
mov
sbb
jb
lods
cwtl
xchg
xor
mov
or
xchg
lahf
push
push
daa
loop
pusha
xor
mov
hlt
fildl
mov
mov
inc
add
xor
in
movsl
pop
sbb
jno
mov
mov
ret
je
gs
movsl
loop
ljmp
mov
lret
cmp
xor
sub
jno
jmp
jo
in
xstore-rng
cmpsl
xchg
mov
pop
divl
lods
pushl
loop
push
cmp
popa
sub
adc
out
cltd
add
xchg
or
cs
leave
mov
sahf
lcall
xchg
bound
jb
icebp
dec
lods
insb
inc
inc
xchg
bound
mov
add
test
push
jae
movsb
iret
push
iret
stc
cmp
aas
hlt
into
sbb
in
or
xor
jge
ds
in
xchg
mov
add
insb
out
arpl
jl
cltd
xchg
shll
subl
cmpsb
push
in
adc
add
cmp
cmp
or
les
pop
sub
sub
test
movsl
and
mov
mov
les
outsb
mov
sub
addl
and
jns
sbb
dec
sbb
jmp
add
lock
movsb
in
push
mov
sub
out
or
loopne
xor
adc
es
or
push
push
mov
dec
xlat
cmp
cmp
test
add
xchg
ja
xor
xchg
rorl
xor
ds
mov
push
js
out
mov
das
sub
dec
dec
jbe
scas
pop
inc
or
out
repz
jecxz
test
aad
jo
cmp
sahf
in
dec
push
cmpsb
dec
push
cwtl
sbb
jb
mov
cmp
mov
insb
mov
ljmp
lahf
sahf
sti
pop
pushl
sbb
mov
and
or
or
pop
movsb
daa
push
dec
mov
fisubrl
cmp
xchg
adc
out
inc
and
lock
lahf
fwait
sub
jg
and
mov
frstpm(287
icebp
cld
inc
movsb
les
test
jo
cmpsl
int
inc
adc
stos
mov
jbe
sub
jle
sub
je
sarb
or
jb
aad
cmp
jmp
rorb
repz
in
arpl
jbe
add
repnz
push
and
jg
pop
pop
and
scas
adc
mov
and
cld
insl
xor
clc
lea
mov
pop
stos
ja
roll
scas
and
hlt
mov
stos
divl
and
popa
fimull
test
lock
sbb
cmp
and
add
das
call
outsl
shl
xchg
push
adc
mov
ja
mov
push
dec
dec
rorl
test
stc
mov
xchg
les
mov
or
insb
pop
fidivs
jo
in
cmp
add
mov
test
in
jle
pop
push
js
adc
inc
adc
cmp
ljmp
into
xchg
inc
mov
xor
cmp
push
repz
std
push
pop
std
shrb
cmp
fiadds
int
test
or
enter
xchg
cmp
mov
mov
or
aas
sub
pop
int3
lods
mov
cli
xor
stc
jne
ffree
inc
lods
bound
mov
movsb
sahf
lcall
popa
adc
out
push
int3
push
xchg
out
test
push
ret
pushf
mov
clc
loope
repz
ret
cmc
sbb
dec
and
or
pop
pop
or
xor
xchg
xchg
pop
pop
das
sub
scas
xchg
aaa
push
pop
insb
mov
out
push
jecxz
scas
fsubrp
cld
mov
mov
js
movsb
stos
push
add
xor
push
call
aad
fcmove
sbb
addr16
std
jl
out
leave
and
pop
pop
xchg
outsb
push
jns
imul
mov
nop
sti
adc
stos
out
movsb
jp
sub
xchg
xchg
insb
sbb
mov
jo
xchg
sub
aaa
push
je
or
or
stos
inc
clc
mov
ficoms
lods
inc
into
xor
xor
sbb
sub
inc
cmpb
ja
cld
dec
xor
fwait
sub
jp
cwtl
sbb
jp
inc
je
out
mov
cmp
mov
in
int3
xor
lret
mov
mov
cmp
sub
in
mov
push
mov
lods
shrb
pop
inc
mov
inc
sub
jmp
jp
mov
pop
outsb
jmp
add
or
mov
inc
push
push
mov
mov
and
lods
shlb
adc
xchg
cmpsl
xor
or
and
sbb
lods
lret
dec
shlb
add
out
pop
mov
ljmp
dec
push
add
lock
stos
mov
or
and
cmp
inc
or
add
and
mov
push
test
sbb
fs
mov
sub
popa
jae
adc
or
or
lret
cli
shll
loope
sub
lds
cmpsb
testl
jae
and
fldenv
push
push
std
inc
pop
movsl
jmp
adc
mov
test
sbbb
mov
lds
mov
xor
into
stos
lret
add
adc
sbb
repz
iret
sti
mov
fdivl
push
dec
cmp
pop
push
iret
xchg
fwait
jae
pop
int3
or
xchg
in
mov
daa
pop
sub
test
mov
dec
cli
push
iret
aas
and
inc
lret
test
lret
dec
fcompl
mov
xchg
sub
inc
fisttps
outsl
cld
sbbl
push
xor
cltd
jns
add
ds
mov
adc
xchg
cwtl
stc
cmp
das
jg
pushf
xchg
jns
les
inc
sbb
fwait
divb
inc
adc
out
xor
jnp
lods
xchg
insb
pusha
repz
xchg
push
clc
push
scas
dec
je
jmp
push
cmp
sub
add
jle
mov
js
push
mov
sbb
inc
inc
test
and
sbb
movsl
cmpsb
mov
xor
pop
dec
repnz
pop
lret
aam
xlat
enter
add
dec
add
mov
test
cmc
mov
outsb
sbb
rorb
mov
jecxz
push
mov
or
insb
mov
push
mov
scas
shl
push
xchg
bnd
push
sti
in
add
or
shrl
imul
int
ja
lods
sbb
jae
ljmp
mov
jne
sti
mov
cmp
cmp
cmp
cmp
cmp
es
data16
push
inc
adc
jmp
mov
push
mov
lea
sub
push
iret
rcrb
sbb
push
scas
push
mov
dec
inc
fwait
jmp
mov
fwait
out
out
fnsaves
and
loopne
shrb
fldcw
test
dec
jne
in
jecxz
or
or
cmpsl
mov
lock
push
ss
popf
sub
mov
push
test
bswap
sub
push
ljmp
cmc
or
push
repz
gs
aad
jp
jne
fdivrs
dec
sbb
and
je
inc
pop
dec
push
jb
addb
out
nop
rorb
ror
lea
das
pop
pop
lcall
push
fcmovbe
decl
ret
test
mov
sbb
sbb
mov
or
and
stc
inc
jno
sub
in
and
mov
dec
lods
stos
cwtl
sub
push
xor
fdivp
addr16
push
add
pop
cmc
loope
test
pop
aad
xchg
push
fucom
nop
xchg
aad
iret
pop
cmp
fnstsw
pop
or
add
push
enter
inc
sub
adc
ret
popf
or
jns
mov
ret
pop
inc
adc
and
mov
sub
or
bound
jge
enter
test
cmp
sbb
js
fldcw
sub
jae,pn
mov
inc
lcall
push
hlt
ja
jecxz
and
lcall
mov
iret
sub
test
push
sub
jmp
jo
lret
xchg
scas
jne
test
ret
sbb
adc
aas
add
cmp
enter
hlt
rorl
xchg
xor
movsl
int
push
movsb
mov
shll
cmp
lods
pusha
es
cs
xchg
inc
jno
push
mov
je
cmp
aaa
bound
or
lods
scas
addl
test
outsl
jmp
repnz
sbb
popa
adc
jmp
mov
inc
insl
lahf
jbe
sub
scas
push
mov
fbld
xchg
mov
sub
and
cld
cmp
inc
nop
xchg
mov
movaps
adc
xchg
ss
xchg
popf
and
mov
ss
jo
jecxz
pushf
mov
mov
mov
mov
shr
pushl
add
cmp
mov
movl
mov
jp
or
out
mov
jp
cmpsl
mov
outsl
or
fwait
push
xlat
sahf
sti
cld
int
imul
aad
xor
decl
and
inc
push
repz
lahf
and
sub
push
in
sub
xchg
or
pop
loop
xor
ss
adc
sbb
xor
ds
shrb
hlt
adc
out
xor
and
out
dec
loop
aam
or
mov
int3
lock
decl
or
jb
pusha
ffreep
les
xchg
cld
pushf
jbe
mov
cmp
mov
pop
add
push
mov
addr16
add
cmp
int3
mov
pop
cmpsb
ss
cmp
pop
shll
dec
cwtl
add
repz
into
repz
out
data16
ljmp
xor
aas
pop
pop
shrl
jl
sbb
test
adc
mov
pop
lds
mov
pop
sbb
mov
mov
dec
mov
test
add
lods
jmp
xchg
aas
xchg
push
in
cltd
mov
js
pop
xor
test
repnz
mov
sub
push
jmp
cmpsb
rorl
adc
or
push
dec
cmc
sub
jnp
mov
leave
fsts
cmp
or
ret
inc
out
and
insb
inc
push
out
push
into
cmp
sbb
pop
imul
xchg
pushf
fistpl
ljmp
inc
cwtl
sbb
int
xchg
inc
jo
cmp
popa
inc
popf
test
jmp
push
jp
hlt
lods
movaps
or
dec
ss
stc
xor
jl
dec
fs
add
in
mov
sbb
push
pushf
lock
or
mov
jns
pop
mov
cli
pop
push
ficomps
inc
inc
test
xor
adc
rorb
pushf
xchg
rol
andl
mov
mov
jbe
mov
dec
mov
inc
mov
dec
adc
das
insl
cmpsb
jns
and
pushf
js
dec
lods
mov
jns
ret
lea
fadd
dec
cmpsb
jle
gs
mov
pushf
xchg
jecxz
imul
gs
addps
cld
pop
push
add
es
mov
mov
arpl
and
xlat
out
sti
nop
xchg
stos
add
mov
test
addb
sub
pop
test
inc
lock
cld
and
cld
sahf
popa
xchg
popa
icebp
xchg
icebp
cmpsl
cmp
add
cmp
pushf
push
pop
push
inc
or
pop
movb
addr16
test
push
pop
stos
mov
dec
ds
outsl
cltd
mov
sub
xor
fmuls
jge
push
leave
in
fs
jns
ljmp
hlt
and
daa
sbb
subl
popa
mov
pop
ret
mov
hlt
xor
sub
and
mov
enter
test
push
mov
cmp
xchg
fsubrp
cmc
add
mov
mov
xchg
and
xor
inc
or
xor
insb
push
push
inc
in
mov
aad
enter
push
xchg
push
jno
jno
divl
and
xor
xchg
sub
nop
cltd
rcrb
xor
push
pop
rorb
negl
into
jg
out
in
cmp
orl
and
add
ret
add
push
sbb
or
movsl
cmp
int
ret
xor
out
mov
inc
pushf
cld
fwait
sbb
pop
out
mov
mov
sub
push
cwtl
rcrl
rcrl
lds
cmpsl
into
pop
mov
pop
lret
push
pop
push
imul
sub
fwait
jae
pop
dec
jl
stos
xor
lock
in
mov
fwait
orl
push
test
inc
test
in
xor
or
ret
add
xchg
add
int3
dec
pshufw
dec
push
cmpsb
fs
cs
sub
popa
je
dec
xchg
and
xor
test
push
cld
mov
in
icebp
cmp
int3
iret
dec
cld
lock
mov
repnz
xchg
sub
push
or
in
adc
pop
push
shlb
xchg
cmp
xlat
ret
push
mov
cmp
mov
jne
aaa
xor
inc
sub
mov
and
hlt
cmp
out
xchg
or
loopne
or
mov
test
sub
mov
mov
sbb
mov
xor
mov
sbb
inc
pushf
pop
cli
pop
lret
add
ret
js
cmpsb
inc
xchg
mov
lea
mov
sti
push
push
enter
inc
adc
add
mov
xor
add
pop
lds
sbb
or
sub
nop
xchg
pop
pop
mov
xor
mov
pop
cmpb
in
es
js
imul
fisubrl
sbb
xchg
aas
test
and
repnz
pop
mov
enterw
pop
daa
popf
hlt
cs
cmpsb
jns
jbe
cld
xor
jp
lods
sbb
xor
in
pop
orb
decb
mov
or
pop
xchg
jne
or
mov
mov
mov
stos
sti
mov
push
mov
out
xor
dec
add
pop
subb
mov
sbb
bound
cwtl
mov
lcall
cmp
jae
lahf
stos
popf
or
cs
jge
bound
dec
or
nop
incl
push
iret
imul
dec
jbe
pop
mov
add
pop
add
sbb
pop
mov
fcomi
imul
mov
popa
arpl
in
jmp
pusha
scas
or
push
xor
dec
into
scas
sbb
andps
les
dec
popa
or
jg
dec
outsl
pop
aas
and
cmp
sbb
sbb
mov
pop
mov
out
nop
mov
xchg
sbb
mov
test
adc
gs
cmc
jne
xchg
aam
aas
nop
xchg
cmp
mov
pop
gs
add
cmpsb
mov
cmp
adc
and
mov
jne
push
push
add
jae
cmpsl
std
les
sbb
pushf
adc
clc
dec
xlat
sarb
test
ds
iret
cmpsb
pusha
sub
pop
pop
sti
stos
test
add
inc
cmpsl
pop
hlt
sbb
push
lock
es
stc
in
dec
dec
or
loop
mov
arpl
sarb
sbb
sbb
pop
jecxz
ja
in
les
bound
aas
outsb
pop
enter
mov
push
in
pop
faddl
out
or
jbe
push
inc
pop
stc
rorb
insb
xchg
sahf
lret
mov
sbb
sub
or
push
adc
dec
mov
flds
add
push
stos
lcall
test
push
or
shl
stc
mov
ss
lret
push
aad
test
xor
int3
ja
loop
mov
hlt
clc
push
or
dec
test
push
inc
jbe
bnd
or
fiadds
lahf
sbb
bound
rcrl
dec
push
jl
sbbb
adc
insl
stos
scas
hlt
xchg
pop
shrb
jbe
pop
pop
lret
push
dec
outsl
mov
inc
fisubrl
lock
xchg
mov
xchg
lcall
hlt
jl
sub
mov
mov
push
mov
mov
repnz
mov
imul
sub
in
jmp
mov
sti
or
push
inc
insl
jp
lcall
sub
decl
ror
hlt
mov
xchg
aad
loopne
jo
and
filds
cwtl
cmpsb
sub
jae
xchg
pop
cmp
push
dec
jnp
fdivl
push
xchg
jp
adc
and
pop
insb
les
lret
and
mov
roll
repz
xor
xchg
mov
cli
stc
mov
xchg
mov
sbb
ret
mov
mov
scas
and
fsubl
insb
and
roll
xlat
sub
popa
lock
data16
mov
loop
adc
mov
adc
data16
cmp
push
or
jo
clc
cmp
mov
cld
cmp
dec
or
int
out
loope
push
inc
push
pop
jl
js
push
jmp
popa
out
fcompl
pop
imul
inc
jb
pushf
xchg
and
mov
into
mov
or
pop
jge
mov
sbb
pop
lea
dec
clc
dec
jno
pmaxsw
je
mov
ja
insl
xchg
std
dec
aaa
cmc
sti
dec
add
sti
scas
fdivs
pop
leave
or
movsl
adc
adc
pop
sub
dec
lcall
mov
jae
lret
pop
ficoms
ja
call
xchg
mov
mov
addr16
or
cmp
out
arpl
das
out
dec
iret
cmp
insl
ss
push
cmp
fdivs
imul
dec
sahf
adc
and
imul
arpl
repz
cmpsl
sbb
dec
dec
add
mov
adc
sysexit
pop
sub
or
xchg
sahf
lods
faddl
arpl
and
mov
sar
dec
aas
fsubs
mov
push
pop
notl
jo
and
and
mov
inc
jmp
cld
ss
movsl
inc
push
inc
sub
jge
mov
xor
sub
popf
xor
mov
lret
jno
imul
mov
push
scas
push
ds
sti
fisubs
sub
je
iret
xchg
add
adc
inc
xchg
lahf
les
jmp
or
roll
out
pop
xlat
repnz
popa
jmp
es
movl
sbb
inc
stos
jne
scas
sbbl
rcrl
int
inc
ljmp
lock
add
xchg
xor
xchg
cmp
mov
mov
inc
xchg
loop
or
cwtl
inc
and
int3
dec
in
lahf
clc
leave
lcall
add
pop
das
cmp
jo
add
test
mov
jg
push
cmp
lods
push
repz
xchg
frstor
movsb
orl
mov
or
push
or
dec
aam
hlt
pop
jnp
or
aas
ret
lock
dec
xchg
pop
jp
jle
or
xchg
sub
push
push
hlt
push
inc
mov
out
mov
fs
scas
outsb
jno
lret
dec
inc
push
and
dec
out
xor
and
mov
fimuls
nop
mov
cmp
sub
jnp
gs
test
inc
mov
dec
into
pop
pop
push
lock
mov
dec
fmull
out
bound
cmp
push
mov
sub
cmpsl
popf
ja
andb
xchg
xor
and
push
adc
iret
rorb
cwtl
mov
pop
mov
shll
idiv
mov
xor
ret
jg
push
aas
dec
sbb
xor
in
arpl
sub
ficompl
inc
sbb
dec
imul
hlt
or
sub
sarl
ret
inc
mov
sbb
jbe
and
gs
test
mov
sub
jle
in
shll
mov
pop
call
xor
jo
outsl
add
mov
and
xor
mov
jmp
xor
jne
mov
jle
push
aam
pushf
sbb
adcl
mov
repnz
addr16
xor
std
pop
test
mov
push
fcoml
bound
jo
adcb
stos
add
dec
cmp
push
stc
xchg
jg
jmp
outsb
test
jl
fwait
dec
mov
pop
mov
aad
push
out
push
push
sub
xchg
js
ss
adc
lcall
sti
mov
jmp
stos
test
jne
push
adcl
shl
push
pop
ljmp
cmp
fidivs
in
aam
add
cli
testb
mov
or
lcall
std
adcl
push
mov
adc
inc
add
push
push
lahf
push
aas
push
out
jae
dec
cmp
inc
aaa
loop
out
and
cs
lods
mov
in
push
pop
in
iret
ja
inc
pop
movsb
test
loop
loopne
xchg
push
or
push
cs
adc
icebp
int
and
xchg
add
jae
test
fnstenv
mov
mov
or
mov
add
adc
lret
or
dec
lea
pop
mov
lods
adc
stc
pusha
sbb
cmp
cmp
jne
enter
push
fisubs
add
movsl
pop
insb
dec
insb
mov
and
fcoml
cmp
cld
jp
jo
ret
cmpsl
int
aas
mov
sbb
scas
mov
jnp
shrb
and
xchg
sti
out
adc
enter
mov
jae
lret
sbb
pop
loopne
inc
cltd
movsl
nop
insl
pushf
pushf
pop
mov
cli
jno
es
mov
sbb
jo
pop
in
filds
fdiv
outsb
adc
xorl
or
mov
adc
mov
je
xor
mov
or
icebp
repz
jbe
pop
pop
test
cmc
mov
mov
and
sub
fsub
dec
inc
fwait
into
adc
and
adc
and
in
cmpsl
in
sub
test
data16
imul
push
outsb
jg
jecxz
pushf
insb
mov
add
xor
xor
neg
enter
inc
loop
mov
gs
sbb
pop
sub
adc
jecxz
and
adc
loop
push
lcall
js
les
and
ret
or
bound
ficoml
mov
ljmp
sub
cmp
icebp
pushf
cmp
dec
cmpsl
pop
shr
jae
loope
test
and
int
sarl
ret
int3
hlt
repz
pushf
addr16
pop
inc
sbb
lcall
inc
cmc
frstor
mov
clc
add
mov
cltd
lcall
inc
loop
enter
les
mov
cs
insl
mov
cs
rorb
dec
sets
sarl
pop
movsb
mov
or
aad
insl
dec
xchg
in
stc
fiadds
dec
lds
js
xor
push
mov
addl
dec
fwait
xchg
mov
rorb
jmp
in
popa
js
mov
fs
scas
nop
mov
jp
push
mov
xor
mov
push
pop
std
jae
mov
std
sub
mov
sub
cld
in
lds
shrb
aas
or
sub
inc
stos
repnz
jbe
xchg
cmpsl
add
pop
test
push
push
pop
orb
and
test
int
fildl
imul
and
mov
outsb
negl
mov
mov
jle
or
out
in
leave
loop
jle
mov
test
outsl
dec
inc
js
sub
jmp
adc
mov
mov
lret
push
icebp
dec
push
push
movsb
sub
dec
femms
insb
xor
call
leave
je
add
sbb
xchg
pop
mov
sar
frstor
dec
pop
inc
push
bound
push
push
scas
mov
in
or
in
jae
test
mov
add
dec
fwait
mov
outsb
sub
mov
cltd
mov
xchg
and
dec
pusha
jb
cmp
xlat
and
outsb
mov
out
loopne
fidivs
sub
inc
mov
xchg
lcall
call
or
push
rorl
cmpsl
pop
aaa
adc
addr16
ss
test
imull
jno
dec
inc
mov
stos
mov
sahf
je
mov
pop
rcll
mov
sarl
xchg
jecxz
jnp
or
pop
pop
test
jle
sub
jb
push
sub
mov
mov
sar
lahf
sbb
mov
mov
dec
mov
xchg
addb
push
lcall
sub
mov
mov
loopne
rcr
mov
notl
insl
sub
cwtl
aad
cmpsb
mov
fwait
lock
inc
in
push
and
sub
mov
cmpsl
fdivp
outsb
mov
mov
je
xchg
rcll
xor
insl
insl
add
lret
jle
pop
ljmp
testl
ljmp
jmp
mov
faddl
repnz
jo
xor
call
test
sub
push
stos
outsb
push
call
fxch
xchg
je
mov
bound
inc
inc
scas
icebp
stc
inc
lea
andb
jmp
cltd
push
pushf
fiadds
pop
pushf
and
sbb
pusha
mov
leave
push
aad
mov
mov
pop
jae
ret
clc
pop
leave
dec
in
enter
iret
mov
lock
stos
test
je
jae
sysenter
out
mov
or
dec
dec
cmovl
ret
scas
adc
and
sbb
sbb
gs
ficomps
push
testb
loope
andb
sahf
inc
jne
xor
cld
add
xor
mov
int
pop
jl
shrl
pop
xor
dec
jg
sub
sti
and
pop
xchg
and
xor
outsl
mov
call
add
push
mov
jp
and
or
ds
push
push
ja
add
xorb
stc
sahf
lock
adc
stos
pop
fidivl
repz
mov
jle
push
xchg
dec
inc
ds
cltd
sbb
sti
je
pop
loop
jg
cmp
int3
and
es
popf
fs
dec
inc
test
dec
cmove
fidivs
pop
inc
loopne
hlt
xor
push
pop
dec
adc
les
adc
sti
dec
pushf
sbb
dec
xlat
orl
shll
fbld
aas
jecxz
sbb
sti
jge
cmp
jbe
pop
popa
stos
inc
inc
jb
xor
es
pop
out
ffree
push
jae
mov
cmp
mov
insl
jbe
mov
xchg
lret
and
stc
idivl
mov
adc
sub
roll
lods
adc
inc
or
out
jg
pop
shrb
sub
shlb
and
sub
jp
push
bound
xor
push
jne
jp
popf
in
dec
adc
dec
push
int3
sbb
adc
inc
int3
inc
rol
and
cmp
jns
popf
inc
outsl
dec
or
iret
or
or
inc
pop
popa
pop
jnp
clc
gs
xor
adc
inc
cli
stos
mov
sub
lea
sbb
xchg
mov
test
xchg
push
cwtl
in
mov
outsl
cmp
neg
dec
inc
popf
ss
push
fnstcw
filds
cmc
jle
sbb
test
scas
outsb
xor
pop
out
inc
xchg
cmp
xchg
adc
jo
sbb
div
fisttpll
cmp
push
fs
stos
ja
and
in
jge
adc
rorl
and
fstp
push
test
xor
std
loope
lcall
dec
test
and
dec
cwtl
mov
sahf
rcr
pop
cmp
xchg
mov
pop
call
sarb
std
pop
add
adc
test
add
minps
rcrl
fnstcw
adcl
fcomip
out
push
ljmp
pop
out
push
pop
sar
mov
xor
pusha
jno
sub
mov
out
ficomps
int3
mov
lret
mov
out
sbb
aam
jmp
stc
fcmovnu
icebp
pop
shlb
mov
es
sbb
imul
fs
mov
push
push
insb
pop
daa
daa
jp
ja
mov
sbb
sub
out
cmp
ja
test
dec
inc
divb
cld
push
sbb
fbstp
push
adc
in
sbb
add
mov
sub
cmp
lds
fimull
pop
xchg
or
cmp
leave
or
shll
xor
xchg
fiaddl
pop
sbb
add
lret
je
loope
add
iret
mov
or
out
stos
adc
mov
xchg
adc
xchg
dec
mov
push
mov
sbbl
xchg
cltd
or
mov
es
cmp
icebp
movsl
test
push
jl
inc
int
nop
scas
fmull
cmpsb
sbb
popw
scas
movntq
data16
jp
es
scas
sbb
push
cmpsb
mov
lds
xchg
nop
std
lret
pop
pop
outsb
daa
fildll
scas
fstl
adc
push
push
insb
and
dec
ds
and
cmp
in
into
xchg
ret
xor
sahf
mov
push
jmp
or
cmp
mov
bound
ja
inc
mov
pop
in
adc
cld
sub
pop
incl
push
jmp
scas
cltd
popa
cmp
sub
clc
lahf
ljmp
out
data16
or
stos
push
aas
out
or
dec
dec
mov
fnstenv
adc
sarl
lods
dec
outsl
adc
pop
data16
popa
and
sbb
int3
adc
push
push
lods
jb
xchg
or
loopne
sbb
xlat
ss
cli
mov
ljmp
in
inc
leave
sub
dec
cmpsl
adc
xor
sbb
cmp
je
adc
lods
push
bsf
xchg
ljmp
jg
or
mov
push
mov
sbb
cmp
imul
sbb
mov
adc
adc
or
push
push
xchg
or
ficompl
inc
jge
popf
mov
mov
fcoms
and
stos
pop
sbb
sarb
xchg
iret
in
fisttpl
lds
inc
fs
and
push
xchg
xchg
push
das
outsb
les
test
lock
dec
shlb
push
fwait
test
out
mov
sahf
push
stos
ljmp
call
out
rorb
xchg
push
aam
les
ds
in
cmp
rcrb
repnz
jbe
sub
divb
or
mov
scas
xorl
adc
adc
dec
loopne
nop
jmp
pop
loop
adc
jecxz
mov
int3
add
sbb
test
mov
dec
adc
sub
int
das
or
dec
nop
outsl
adc
adc
mov
lea
sub
das
cmpsl
fld
stos
repnz
mov
andl
mov
test
xlat
or
aaa
int3
cli
inc
fisubrl
add
dec
sub
movsl
std
mov
es
pop
ja
jg
mov
dec
or
cwtl
xchg
addl
cmp
stos
in
add
mov
mov
loope
mov
ret
jnp
lret
add
and
add
jg
sti
mov
push
cmp
pop
cwtl
inc
push
and
jl
xlat
decb
xchg
sbb
js
sbb
std
es
ret
daa
lret
scas
cpuid
fwait
pop
loope
cmp
adc
jo
into
cmc
mov
mov
xchg
xor
test
push
arpl
sbb
and
jnp
xor
mov
pop
jae
xor
mov
add
orl
xor
push
mov
or
pushf
stos
pusha
sub
dec
iret
insl
lods
cmp
jp
in
mov
cmp
repnz
shrb
or
inc
aad
out
lahf
call
push
mov
test
pop
imul
arpl
jge
pusha
pushl
mov
jns
bound
clc
and
cld
js
jno
shll
sbb
popa
push
push
mov
inc
sub
nop
shlb
jae
jbe
dec
inc
push
bound
in
inc
push
aad
xchg
sbb
adc
das
and
lcall
les
xor
in
jae
push
fmuls
dec
lret
in
cmpsl
scas
sbb
fs
xor
out
add
mull
mov
xchg
inc
addr16
sti
loopne
sahf
cmpsl
jge
fidivs
fs
push
mov
sbb
and
sub
jne
scas
jmp
pop
sbb
mov
pop
and
pop
das
xor
xor
rcrl
jnp
adc
lcall
push
into
xchg
inc
fwait
cli
cmc
adc
sbb
call
xchg
imul
fdivs
xor
mov
add
loopne
incb
lahf
mov
jge
loop
into
cmp
push
mov
sbb
sbb
das
notl
aaa
cmp
dec
repnz
xchg
inc
int3
push
lods
or
mov
sub
shl
icebp
clc
mov
xor
cmp
pop
iret
xchg
jecxz
push
pop
and
mov
jg
jo
mov
testl
sub
jecxz
pop
pop
mul
lret
mov
xlat
and
cltd
sub
adc
out
out
mov
sahf
adc
andb
jge
xor
and
inc
cwtl
les
pop
in
insl
out
cmp
adc
xor
push
dec
jmp
leave
je
pop
ret
leave
fdivrl
jge
or
cltd
and
pop
push
popf
mov
lret
inc
in
outsb
add
dec
jmp
fidivrl
ret
sub
pop
inc
sahf
jnp
fwait
leave
out
cs
mov
lahf
jge
dec
mov
inc
test
and
jle
mov
or
repz
mov
or
loopne
pop
xor
lret
insb
jecxz
int3
mov
cmp
test
inc
aaa
mov
stc
xor
pop
fsts
ss
dec
mov
pushf
rcrl
mov
outsl
jg
xor
lock
jl
push
out
and
jb
push
xor
lods
int
into
addr16
add
xchg
and
das
add
jle
sbb
inc
out
pop
test
pop
jnp
fs
cli
sahf
fidivs
enter
jl
in
lock
gs
add
mov
adc
push
pop
push
js
cmp
mov
sti
inc
aaa
adc
call
jno
fistpl
add
xchg
cmpsb
sahf
subb
xchg
or
ljmp
dec
mov
shrl
stos
sysexit
sub
push
das
jecxz
lret
jmp
loopne
repz
movsl
ret
pop
pop
or
pop
mov
inc
sbb
cmpsb
jp
or
sti
push
push
repnz
das
dec
inc
fstpt
outsb
outsl
sbb
notl
jl
jne
pop
ss
test
outsb
fucomp
test
xor
cld
lea
scas
stos
imul
pop
push
adc
cmpsb
repnz
mov
dec
mov
popa
xchg
out
mov
cmp
idivl
pop
shll
dec
fs
or
mov
xchg
in
xchg
pop
inc
and
or
and
loopne
jns
test
dec
and
subl
cmpb
aaa
pop
sbb
mov
sub
jg
fwait
jae
mov
mov
cmp
stos
lea
jl
inc
test
mov
pop
pop
lock
movsb
sub
add
fucom
lea
std
adc
pusha
pop
fsubp
lods
or
lea
mov
out
test
inc
repz
dec
fnstcw
shrl
inc
in
dec
fstpt
and
leave
es
ficoms
in
nop
fs
or
xchg
lret
pop
dec
decl
and
lds
and
pop
hlt
rolb
ja
movl
stos
test
in
push
mov
add
shll
sti
xchg
mov
ss
arpl
pop
cmpb
xor
mov
mov
xor
aad
xor
or
jle
fiaddl
pop
xchg
pop
in
mov
jmp
xchg
or
jne
jae
pop
dec
adc
loopne
lcall
out
dec
push
subl
or
int3
out
push
xchg
stos
orb
inc
out
or
jbe
insb
rolb
mov
push
sub
imulb
pop
mov
faddp
push
pop
cmp
xchg
lret
stos
jns
mov
stc
and
cld
js
and
lahf
or
mov
cmp
mov
inc
mov
mov
es
fwait
jge
fwait
pop
and
shrl
or
mov
fldl
sti
pop
out
rcrb
int
inc
jns
sbbl
je
lods
pushf
jns
adc
cwtl
jp
ljmp
mov
push
pop
xchg
rcr
std
or
add
inc
push
repnz
mov
int
flds
dec
push
orb
nop
fbld
addr16
std
test
cmp
push
aas
xchg
xor
mov
push
xchg
gs
lds
mov
dec
rol
push
bound
lods
outsl
out
adc
add
out
es
mov
push
ret
cmp
icebp
scas
push
and
clc
dec
push
lods
cmp
mov
in
cmp
jl
pop
hlt
xchg
incb
mov
stos
jns
adc
jno
fnsave
enter
inc
mov
testl
mov
ret
jp
mov
dec
sbb
mov
imul
inc
ss
outsb
imul
cmpsl
inc
imul
mov
xchg
cmp
bound
les
imul
pop
in
fwait
cld
jg
mov
push
cmc
repz
nop
mov
icebp
jbe
sbb
fbstp
movsl
xchg
adc
js
mov
dec
add
cwtl
dec
push
hlt
icebp
adc
aad
into
push
jl
add
jno
nop
mov
rorb
icebp
jge
and
notl
mov
andb
ficomps
ss
xor
cmp
ret
xor
subl
lods
or
cmpsb
jp
int
add
cmpsl
inc
push
jne
fidivs
lods
psubq
insl
mov
sbb
aam
push
jl
mov
gs
lcall
test
sub
push
out
or
xlat
outsb
sbb
jo
ja
loopne
push
mov
fs
nop
or
arpl
je
sub
jb
dec
jns
xchg
jecxz
push
mov
xchg
cmp
jae
das
dec
ret
fbstp
ja
dec
insl
fwait
shlb
push
inc
pop
dec
test
fcomps
in
push
lcall
pop
scas
pop
push
ret
add
cmp
xchg
rcl
mov
aad
pop
inc
xor
push
jecxz
int
jns
outsb
roll
cmc
in
int3
pushf
xchg
imul
xchg
fldenv
in
inc
inc
cmp
jo
test
pop
xlat
cmc
xchg
aaa
add
fs
lcall
nop
ret
ljmp
shll
xchg
adc
pop
push
test
clc
push
xor
imul
xlat
xor
jp
xchg
aas
lcall
lahf
sub
mov
rcll
mov
insl
imul
hlt
jp
aam
call
sbb
mov
push
testb
je
sub
fstpl
daa
push
pop
mov
aad
add
cmc
lods
shlb
cld
arpl
decb
push
push
pushf
mov
push
ret
xor
dec
add
xlat
imul
rcrl
pop
popl
loope
orl
or
mov
aaa
sub
sbb
add
push
dec
jbe
or
dec
adc
dec
sub
int3
test
and
movsl
mov
inc
ror
push
sbb
inc
mov
loope
cld
adc
arpl
adc
sarb
pusha
lock
push
out
das
repnz
xchg
loopne
sub
roll
mov
xor
jmp
xchg
sub
mov
jnp
pop
in
jo
lea
ljmp
outsb
out
xchg
in
or
pop
call
fstl
and
sub
inc
sbb
rep
sub
mov
dec
ret
jns
fsubrp
popa
cld
lock
jo
fldl2t
jmp
sarb
jmp
jbe
mov
adc
stos
sub
jmp
cmp
gs
jle
das
lret
mov
loope
pop
popa
xlat
inc
fstpt
shrb
mov
fcmovnbe
out
xor
divps
mov
setnp
mov
push
xor
adc
xor
xchg
pop
aad
lcall
stos
ljmp
cli
mov
jmp
lock
lret
out
popf
clc
les
rcrb
dec
jl
ffreep
adc
add
mov
insl
pop
push
push
inc
outsb
cwtl
sub
fwait
sub
das
rol
mov
and
in
mov
in
mov
fisttpl
sarl
call
repnz
jne
xchg
jne
sbb
mov
rclb
jns
xchg
xchg
repnz
data16
mov
pop
int3
stos
dec
fdivs
ja
add
push
add
jle
xchg
leave
inc
les
inc
push
test
inc
in
hlt
lods
jnp
scas
insb
mov
ret
xchg
sbb
adc
jae
push
and
pop
and
dec
pop
mov
enter
sub
xchg
dec
mov
shl
pop
scas
gs
es
or
das
call
sti
cltd
jns
sbb
mov
orl
xchg
lcall
mov
or
clc
in
and
xchg
xlat
jecxz
pop
inc
ret
cs
incb
xorl
pop
inc
shrl
and
bound
mov
into
push
sbb
push
shll
into
aas
xor
push
pusha
jg
pop
cwtl
xchg
in
cmp
mov
aam
fdivp
popa
popf
addr16
xlat
adc
jno
mov
push
push
unpcklps
leave
jg
push
aaa
int3
jno
out
sbb
mov
outsb
pushf
shrb
add
data16
aas
inc
pop
insb
loop
adc
leave
dec
rcrb
dec
test
pop
inc
je
inc
insl
adc
jl
es
mov
adc
inc
cltd
or
adc
ret
dec
aas
je
test
ret
clc
fdiv
popa
lret
test
jle
bound
xor
push
sti
push
add
or
sbb
in
add
jle
cs
repz
mov
jl
add
std
or
ret
mov
dec
jbe
dec
push
test
jo
xchg
aad
sub
fldt
xchg
pushf
push
movsb
xor
aaa
cld
jl
test
fstp
lock
cmp
pushf
mov
stos
ret
fmull
in
dec
shll
test
cmpsl
adc
mov
sahf
inc
sub
imul
addl
repz
adc
dec
and
lret
cmpsb
sti
xchg
nop
test
inc
push
loopne
jne
orb
adcb
and
cmpsb
push
ds
adc
movsb
in
stos
pop
mov
pop
or
test
inc
ljmp
mov
dec
rcrb
mov
push
into
push
lock
adc
out
stos
pop
and
insl
sbb
mov
cwtl
pop
add
xchg
dec
test
xchg
push
xchg
sub
jns
inc
xor
sbb
jecxz
adc
lock
jg
out
add
xlat
mov
dec
inc
int
mov
jp
dec
jg
stc
inc
outsl
pushl
or
addr16
fsubrl
mov
cltd
testl
dec
mov
push
fcmovne
inc
jns
xor
pop
push
add
rcrb
cmp
fnstenv
movsb
ret
ljmp
mov
mov
mov
out
scas
je
cld
icebp
xchg
popf
sbb
out
jle
ds
add
lds
insb
add
push
dec
add
jp
fstpt
dec
subb
fs
fmull
fsin
test
pop
cmp
outsb
sbb
add
sbb
ret
xchg
outsb
sub
jne
push
out
lods
daa
popf
xchg
cmp
lds
xchg
gs
clc
pop
jg
jg
xchg
int3
out
mov
ss
xlat
das
aaa
lret
xor
jo
cmp
sahf
addr16
add
mov
ficomps
loopne
insb
stos
xlat
dec
or
jnp
jo
repnz
and
mov
ret
or
jnp
movsb
cmc
jne
pusha
jp
dec
sahf
add
mov
and
les
test
xchg
mov
jle
jge
leave
xchg
testb
dec
fsubrl
jg
dec
cld
jns
faddp
test
and
aam
fsubrp
imul
mov
mov
push
adc
ret
ret
adc
int
dec
cmp
repnz
add
and
mov
in
pop
aad
arpl
mov
inc
mov
push
hlt
lea
push
inc
ret
lea
jae
adc
mov
pop
and
clc
push
xlat
je
cmp
cmc
jle
dec
push
cmpsl
adc
sub
push
xchg
leave
call
dec
cmc
pop
sarl
divl
sbb
mul
inc
push
iret
dec
js
je
out
call
dec
push
add
jg
cli
jnp
out
mov
das
or
sarb
push
in
fwait
mov
pop
aad
outsb
jb
inc
xchg
pop
jmp
leave
xor
pop
cmp
rol
sub
dec
cmpsl
mov
xor
fcoms
sti
add
and
lods
sub
sub
mov
sbb
mov
sub
orb
xchg
int3
mov
add
int3
push
lods
fnstsw
sub
das
fwait
enter
fwait
mov
fisubrl
aad
imul
add
inc
add
mov
mov
jae
fwait
movl
xchg
sbb
and
xchg
fidivs
mov
int3
movsl
sbb
sub
daa
cwtl
cmpsb
inc
adc
push
mov
mov
mov
dec
xchg
mov
mov
pusha
fstps
xchg
xor
popf
push
jnp
out
push
fiaddl
jnp
dec
cmpsb
test
jmp
xor
hlt
cmp
mov
mov
sbb
test
push
mov
movsl
cmp
movsb
adc
xchg
xor
cmpsl
subb
sbb
add
aaa
jecxz
sti
stos
and
out
es
out
xchg
pop
das
or
push
arpl
xor
dec
cmpsl
in
push
jns
sti
andl
out
jne
insl
incb
repnz
testl
dec
lods
xor
stos
dec
xor
mov
sub
pop
lds
lock
dec
inc
and
xlat
mov
push
cld
test
addr16
push
js
in
or
jno
sub
pop
popf
push
cs
sbb
xor
sub
pop
das
mov
sub
leave
repz
int
xorl
cli
lods
jne
mov
bound
loope
cmp
sub
call
or
test
icebp
sbbb
std
adc
pop
push
xor
outsl
or
icebp
add
jmp
mov
imul
test
pop
jl
lods
sarl
pop
add
sbb
jp
pop
outsb
xchg
adc
and
pop
and
mov
pop
xor
negl
xchg
mov
aad
aas
or
sbb
xor
and
js
cmp
scas
cmp
outsl
or
fiadds
movl
adc
pop
jb
out
popf
bound
and
inc
lret
int
push
inc
pop
add
add
push
dec
mov
mov
or
dec
int
xor
sbb
push
cld
or
or
or
xchg
pop
mov
xchg
int
clc
fmul
mov
negb
test
divb
cli
cmpsl
std
out
jns
mov
ficompl
xchg
loopne
add
cmc
fisubrl
je
jnp
mov
adc
xor
sub
xchg
cmp
and
mov
dec
pop
sub
xchg
nop
shlb
scas
repz
push
cmp
aad
push
test
clc
inc
push
out
js
cmpsl
xor
xor
jb
icebp
test
and
mov
xor
jno
mov
adc
repz
sub
dec
push
adc
fsubl
jbe
xchg
stos
inc
icebp
in
mov
aam
add
fsubs
add
xchg
mov
sbb
addb
cmpsb
call
xchg
fildl
xchg
xchg
push
xor
push
call
insl
cld
ljmp
ja
fbstp
jp
in
mov
mov
clc
pop
cwtl
fwait
mov
iret
push
mov
lods
sub
pusha
ror
mov
xchg
sarb
mov
jns
out
push
jno
mov
cmp
cld
enter
jb
inc
iret
or
stos
inc
test
xchg
inc
shrb
sub
out
add
out
repnz
mov
inc
fsts
pop
cwtl
add
cmc
movsl
push
or
insl
lret
out
fdivrs
mov
inc
test
aad
aaa
insl
pop
xchg
in
lods
insb
addl
mov
xor
aaa
xchg
jae
mov
mov
sub
pop
mov
push
aas
loopne
jae
add
xor
or
enter
movsl
leave
and
jno
sub
mov
xchg
xchg
fcomps
push
lock
sbb
jmp
add
clc
pop
sbb
cmp
into
enter
adc
xor
sub
sbbl
std
push
pop
lock
mov
movsb
xchg
icebp
sub
fcom
lods
jno
adc
push
lahf
jo
xor
in
push
cmp
sub
adc
jns
jns
aaa
out
xchg
add
stos
xchg
xchg
stos
insl
mov
cmp
sub
xchg
repz
push
xor
popf
mov
imul
xchg
adc
jg
xchg
test
mov
mov
fidivs
cmpsl
sbb
mov
orb
gs
out
hlt
rorb
xlat
mov
bnd
ja
neg
outsl
daa
pop
pop
sti
push
f2xm1
pushf
or
mov
sub
test
xchg
inc
loop
pop
in
shll
mov
jmp
cmpsb
add
xchg
and
idiv
push
dec
and
jns
adcb
int3
pop
push
push
mov
xchg
and
cmp
and
sub
mov
and
int3
jnp
push
mov
add
cmp
jl
hlt
mov
les
jbe
fwait
jg
scas
js
jecxz
loop
test
jae
das
outsl
imul
pop
push
add
jns
dec
sbb
cld
into
lea
scas
sbbb
mov
jne
pop
push
push
mov
xchg
std
arpl
pusha
xorl
pop
repz
mov
cwtl
cmp
xchg
or
lock
dec
das
mov
push
pusha
pop
stos
sub
xchg
add
stc
mov
cmp
mov
rcrb
or
pop
dec
jle
jns
jne
mov
clc
mov
imul
insb
jecxz
or
adc
and
xchg
adc
add
pop
mov
in
out
enter
jmp
cmpsb
jnp
shl
rcr
xor
xchg
orl
fucomi
and
mov
or
mov
test
push
sub
dec
inc
push
inc
sbb
and
adc
cmp
xor
fldenv
jae
xchg
mov
rolb
push
test
cmp
mov
sarb
xor
sbb
ljmp
sbb
in
jg
movsb
bt
fwait
arpl
jae
jg
std
popa
pop
insb
mov
jo
mov
rcrl
push
mov
fcmovb
andb
lea
adc
cli
or
nop
cmp
cwtl
pop
sti
lods
sti
mov
nop
sahf
or
xor
dec
sub
fistps
in
push
pushf
clc
xchg
aas
xchg
ret
xchg
sbb
pop
add
xor
push
js
mov
push
scas
push
out
fdivrs
jns
mov
in
xchg
cwtl
mov
cmp
fisubl
imul
pop
fisubs
test
subl
fs
shll
adc
or
cmp
push
xor
jmp
insl
daa
cmp
sub
xlat
adc
aam
mov
cmp
fistps
push
cmp
xchg
push
or
insl
inc
sub
jg
test
inc
inc
cmpsb
xchg
negl
pop
push
and
jb
or
push
mov
fdivl
xchg
outsl
ljmp
adc
adcl
popl
or
ss
cmp
mov
lea
lock
rcrb
xchg
jle
loop
mov
lret
and
add
adc
adc
pop
aas
mov
jge
dec
loopne
je
fstl
ror
mov
cmp
mov
shll
rorl
dec
pop
rcr
loop
mov
cld
rorl
xchg
fmulp
pusha
xchg
xchg
lea
or
dec
pushf
adc
dec
mov
add
inc
rcrl
lods
xlat
push
hlt
sub
in
xchg
cmp
lret
add
mov
in
popa
xchg
and
test
cmp
in
mov
add
add
dec
jo
aad
jle
loop
in
mov
jne
ds
enter
jo
jg
add
imul
sub
mov
or
and
xchg
sti
scas
repz
insb
movl
or
inc
push
imul
xor
xchg
ja
push
mov
dec
dec
icebp
stos
add
mov
in
out
jnp
mov
xadd
ljmp
loope
inc
pop
mov
pop
psubsb
test
cwtl
push
lods
out
pop
xor
mov
and
sbb
call
jo
mov
xor
jge
dec
mov
pop
sub
repnz
sub
adc
ljmp
insb
ficomps
repnz
jp
mov
adc
loope
scas
inc
dec
mov
clc
xor
push
lret
dec
jecxz
loope
ljmp
and
sub
cs
js
jle
pop
ljmp
enter
pop
adc
ds
mov
mov
outsl
fbstp
or
xchg
sub
and
xchg
fs
dec
int3
xlat
pushf
sub
jnp
mov
in
jp
fadds
mov
inc
push
xor
xchg
and
push
and
imul
jb
stos
inc
sbb
fcmovne
in
imull
mov
push
mov
aam
cmp
lods
loop
repnz
and
aam
dec
in
mov
pop
xor
insb
ljmp
dec
and
sub
movsl
in
pop
imul
inc
hlt
cltd
adc
xor
sbb
inc
inc
imul
mov
and
imul
loope
bound
pop
push
out
push
daa
push
xor
cs
repnz
and
arpl
es
lret
adc
test
lahf
mov
fisubrs
cmp
cltd
repnz
xor
adc
dec
outsl
jo
and
and
push
loop
cmc
and
jge
xchg
push
loop
lods
jmp
int
lock
push
mov
insb
ret
loope
ds
jnp
cwtl
pop
or
push
lret
fmull
outsb
push
pop
sub
call
mov
out
pop
stos
imull
jl
mov
test
lds
push
xchg
push
sti
fwait
jge
daa
ds
out
push
inc
push
inc
adc
dec
mov
cmp
fcomi
mov
outsb
fsubrl
or
loop
cwtl
sarl
data16
cs
lahf
dec
inc
pop
orl
inc
push
mov
cmp
and
xor
stos
stos
mov
xchg
imul
and
les
mov
xchg
in
xor
iret
push
shll
mov
cmp
fdivrs
push
jle
mov
pop
adc
inc
push
jb
rolb
pop
fldenv
push
xchg
sbb
jns
test
sub
add
insl
xor
hlt
add
stos
cld
mov
in
pusha
add
jns
aad
bound
mov
jge
mov
stc
dec
mov
jge
andl
and
xorb
jp
pop
loopne
ret
add
cli
mov
mov
push
dec
sarl
xchg
sbbb
jge
mov
jae
ss
std
dec
inc
or
adc
das
sbb
push
pop
idiv
inc
xchg
jno
and
cmpsl
push
xchg
xor
sub
xchg
lret
lea
gs
cmp
addr16
rclb
adc
ret
fimull
fisubl
pusha
and
sti
mov
sbb
les
pop
sbb
lock
cmp
jnp
dec
lret
into
jno
push
adc
fmul
sub
shrb
idivb
sbb
call
pop
in
dec
jg
xorl
push
lock
jb
imul
add
mov
mov
fidivrl
idiv
jp
cmp
aad
into
and
loop
sub
lret
and
pop
mov
js
mov
clc
push
lret
cmp
rcl
mov
fcomp
xchg
fisubrl
outsb
test
in
and
mov
dec
hlt
icebp
adc
dec
mov
pop
mov
mov
stos
xor
jecxz
cmp
sbb
pop
sbb
test
xor
pop
mov
repnz
xor
scas
lods
iret
neg
sub
test
insb
lds
dec
lret
or
leave
add
dec
mov
sbb
and
cwtl
jg
mov
add
xor
xchg
jmp
xor
in
inc
aas
or
inc
and
sbb
sbbb
add
push
dec
dec
sub
cmp
mov
push
pushf
xchg
mov
decl
lcall
es
test
fiadds
pop
rol
insl
xchg
jmp
loope
dec
pop
pop
es
dec
mov
aad
pop
mov
std
push
nop
add
mov
insb
js
fildll
jle
jl
xor
dec
js
ret
adc
cmc
daa
movsb
add
popf
test
add
test
or
or
xchg
pop
pop
subl
cmp
sbb
and
mov
mov
das
fmuls
outsb
xchg
pop
xor
shlb
inc
add
repz
cmp
add
jb
loop
lahf
xchg
lcall
aam
jmp
and
scas
cli
pusha
push
daa
mov
lcall
out
pop
jno
jbe
orb
jns
and
cltd
lods
mov
push
int3
in
out
jecxz
cwtl
stos
popf
mov
xor
sbbb
cmp
addr16
inc
rcl
dec
sub
into
cmp
sbb
out
stos
lahf
push
xchg
dec
mov
out
xor
jno
jbe
das
ficompl
cwtl
jb
out
dec
push
inc
sub
in
aad
in
inc
or
xor
outsb
xor
sahf
std
addl
test
xchg
adc
add
out
xor
notb
jnp
out
test
int
push
mov
sub
dec
addb
repnz
in
dec
sti
push
mov
inc
fs
push
mov
gs
dec
adc
arpl
fnsave
sub
inc
les
mov
mov
mov
mov
es
and
and
ret
cmp
lahf
mov
adc
test
pop
adc
mov
pop
jmp
mov
loopne
testl
sub
rorl
in
xor
aam
xchg
adc
pop
mov
xorl
adc
mov
xchg
jne
push
lock
and
cmp
fistpll
adc
mov
push
push
sarb
sbb
pop
dec
mov
adc
dec
fwait
sbb
cmp
jo
jg
mov
xlat
mov
pop
mov
jo
cmp
xchg
push
imul
scas
scas
subb
cmp
pushf
rcrb
push
mov
jmp
neg
das
sub
and
sub
or
decb
sti
mov
cmp
loopne
in
nop
iret
aam
sub
test
jecxz
test
xchg
pop
mov
jecxz
mov
cmp
adc
jecxz
xchg
shl
pop
lods
xor
cmp
pop
xchg
push
mov
mov
rcrl
xor
push
je
ds
xor
pusha
in
int3
std
imul
xor
push
xchg
outsl
mov
sub
xchg
mov
sub
jge
pop
ret
fscale
std
bound
push
xlat
or
add
mov
xor
push
jnp
gs
test
jecxz
dec
or
data16
cmp
popa
sub
test
or
jb
jmp
mov
stos
das
cld
and
les
icebp
inc
inc
xor
xchg
adc
cltd
mov
vpsubsb
mov
hlt
out
ret
jb
cmp
in
and
pop
mov
insb
jmp
push
mov
sub
xor
cmp
iret
add
cmp
sub
ja
push
push
add
sub
sbb
cli
in
push
jmp
loopnew
add
cmp
popa
mov
adc
fbstp
push
sbb
cmp
mov
cmc
sbb
call
jge
ds
cmp
orb
sbb
xchg
movsl
mov
and
sub
repnz
xlat
sbb
cmp
inc
lds
enter
mov
cmp
xor
js
push
stos
in
dec
mov
pop
sarl
jno
ljmp
cmpsl
sub
outsb
mov
xor
inc
rcrl
xor
mov
and
nop
mov
mov
add
pushf
mov
or
jae
mov
movsl
adc
out
stos
sub
lock
test
dec
pop
ljmp
inc
fnstsw
out
imul
leave
lock
pop
adcb
into
icebp
lea
mov
sahf
sbb
fs
mov
icebp
xor
lcall
mov
nop
sub
mov
mov
scas
inc
mov
dec
aaa
inc
lock
jae
jg
or
daa
adcl
sub
sub
aaa
jp
mov
mov
fdivrp
jp
je
out
and
std
cmp
in
xchg
inc
sub
cmp
jmp
inc
xchg
arpl
mov
push
lods
pop
icebp
inc
jns
stos
xchg
sub
mov
mov
cmpsl
imul
negb
cli
adc
cli
xchg
pop
std
imul
push
stos
clc
scas
test
inc
push
adc
push
icebp
jae
jbe
inc
in
fbld
or
ss
hlt
cmc
outsl
or
out
movsl
je
popa
mov
add
fisubs
lcall
icebp
push
decl
cmpsb
imul
sahf
into
cmp
jae
sti
dec
and
fsincos
mov
mov
dec
outsb
mov
leave
jnp
add
mov
mov
inc
push
movsb
push
xchg
fs
jmp
rorl
mov
shlb
mov
ja
pop
es
inc
dec
push
pusha
fildl
xor
mov
xchg
cmp
sbb
jb
addr16
loop
adc
inc
bound
test
mov
nop
scas
sub
jp
xchg
in
adc
xor
sub
sub
inc
cmp
dec
sbb
add
xchg
and
adc
stos
lret
stc
pop
jns
lock
rolb
sub
stc
or
iret
and
pop
inc
add
leave
data16
pop
dec
add
fnstcw
xor
xchg
int3
lcall
aas
dec
sti
cwtl
arpl
mov
or
xchg
call
jbe
push
jne
out
addl
stc
stos
push
add
or
imul
mov
jge
fcoml
bound
pop
ja
jo
mov
fisubrl
das
dec
adc
aad
push
les
sub
mov
adc
jge
sbb
lahf
sub
movsl
adc
lods
sub
mov
frstor
loope
mov
jnp
mov
lods
stos
mov
fcompl
movd
rcrl
inc
addl
mov
dec
enter
sar
push
std
in
jle
testl
sub
movsl
std
lahf
push
mov
outsl
and
inc
fs
in
ja
lcall
dec
add
insl
stos
test
push
leave
lods
push
pop
or
and
cld
push
test
scas
pop
or
lcall
mov
cmp
dec
mov
std
xchg
movsb
out
mov
sar
fs
lods
add
je
mov
rcr
pop
pushf
outsb
shr
into
push
cld
jbe
pop
pop
fiadds
push
jno
push
lret
subl
adc
sub
cmp
sahf
mov
adc
push
add
cmp
xchg
jo
repz
imul
jb
cmp
mov
icebp
sbbl
popf
into
lret
jne
push
mov
xchg
sti
mov
push
inc
fisubs
add
and
out
sarl
inc
add
in
push
mov
cmp
pop
dec
xchg
jae
push
leave
fdivl
shrb
repnz
mov
pop
movsl
lock
xchg
repnz
dec
mov
dec
xor
imul
xor
clc
ret
and
push
xor
pop
dec
fnstsw
jl
pop
fidivl
data16
loopne
cmp
fldenv
mov
add
sub
pop
lods
add
pop
int3
xchg
and
jno
and
adc
add
adcb
pop
cli
movsl
iret
sub
aad
scas
repz
sbb
js
and
imulb
das
fcompl
add
inc
adc
cmc
xchg
sbb
fsub
sbb
dec
sbb
bound
iret
lcallw
cmp
lds
mov
pop
fld1
std
sahf
mov
sbb
mov
fucomp
cld
and
xor
mov
ja
es
fdivs
xchg
xchg
add
or
inc
inc
xchg
jbe
sub
in
scas
sbb
xchg
scas
sarl
cmp
adc
lea
mov
and
pop
push
push
mov
scas
div
sbb
jl
add
pop
jmp
jle
xorl
lcall
mov
js
pop
inc
jno
pop
adc
xchg
sub
lea
int3
icebp
adc
cmp
mov
hlt
sbb
pop
adc
js
shll
xchg
rolb
cmpsl
cltd
out
dec
sub
add
imul
scas
in
cwtl
int3
and
sahf
mov
ret
mov
adc
stos
les
push
aam
lods
pop
jne
mov
xchg
cltd
xchg
into
out
jge
or
iret
add
test
xchg
sub
pop
popf
dec
push
mov
push
jae
xor
call
sub
icebp
rcrb
pushl
mov
pop
dec
pop
les
inc
cmp
data16
punpckhdq
pusha
cmp
dec
mov
add
pop
in
pop
pop
sub
and
jg
cmc
mov
or
lcall
cld
pusha
pop
stos
sub
sbb
cld
push
movsb
mov
mov
jb
dec
sbb
jle
adcl
push
cmp
mov
repnz
add
fchs
lock
jmp
add
xchg
pop
mov
xor
shrb
or
xchg
jecxz
aas
mov
movsl
imul
mov
out
shl
ret
inc
lret
enter
inc
je
dec
adc
ficompl
mov
and
or
fidivrs
sarl
mov
test
xchg
sub
daa
shr
mov
xor
mov
or
adc
xor
sbb
sub
pop
lahf
es
jecxz
cli
lods
push
pop
pop
sbb
push
and
sbb
mov
xor
mov
pop
xchg
dec
dec
add
popf
mov
xchg
mov
cwtl
mov
jno
pop
sti
push
hlt
push
inc
mov
lock
test
fistps
movsb
idivb
scas
loop
lcall
in
push
mov
jp
call
fnsave
shrb
inc
sahf
inc
and
xchg
and
xchg
adc
ss
mov
aaa
and
cmpsb
cmpl
xchg
iret
adc
sarl
enter
scas
sub
into
and
cld
retw
out
ss
xor
add
enter
cmpsl
add
jmp
mov
loop
jns,pn
mov
cltd
fs
and
jg
cmp
lret
jbe
pop
sbb
lret
subl
loope
popf
pop
in
gs
adc
in
adcl
insl
sub
or
jg
das
xchg
jecxz
push
daa
mov
daa
mov
out
cmp
lret
jg
xor
and
sbb
adc
and
inc
dec
pop
cltd
cli
push
jo
or
inc
mov
hlt
gs
outsb
add
int
popf
repnz
out
pop
push
bound
inc
adc
push
add
sbb
xor
inc
mov
adc
shlb
pop
cwtl
sbb
push
cltd
jbe
mov
or
out
addr16
inc
ljmp
js
fsts
inc
out
shr
mov
sub
flds
fnstenv
mov
lods
gs
roll
mov
xchg
mov
mov
push
sbb
adc
xchg
mov
and
push
mov
jg
cmp
lods
ret
sbb
jb
in
in
jle
lock
push
movsb
jb
fwait
mov
sub
popa
mov
pop
sub
rorl
jg
in
and
fldt
fidivs
sahf
int3
jl
fucomip
bound
push
and
leave
mov
std
push
mov
sahf
inc
push
jle
cmpsl
addb
and
lods
push
xchg
mov
ljmp
mov
inc
xchg
insl
cmp
notb
jbe
dec
cs
cmp
insb
jp
mov
pop
and
mov
mov
lods
scas
negb
out
out
lods
fildl
and
cmp
dec
sahf
stc
adc
push
cmp
pop
mov
mov
fisubs
outsl
arpl
inc
loope
xchg
sbb
jg
lods
inc
cmp
sub
cltd
pop
hlt
mov
faddp
aad
mov
xor
out
mov
std
inc
pop
repnz
cmp
daa
jecxz
cmp
rol
dec
jnp
shll
insl
sbb
shrb
add
das
mov
sub
mov
push
dec
aaa
out
lahf
roll
sbb
push
jle
jns
pop
mov
xor
mov
xor
leave
pop
inc
cmp
cmp
mov
sbb
jno
fsubs
ret
adc
cwtl
stos
mov
fnstsw
mov
and
test
lea
mov
pop
fisttps
les
push
aaa
adc
hlt
pop
ffreep
daa
subb
mov
sti
sbb
dec
insb
sbb
cmc
push
jo
pop
lcall
inc
mov
arpl
hlt
dec
jp
test
push
push
sub
ja
cli
jle
stos
movsl
mov
outsb
sub
push
sub
xlat
ret
mov
sbbb
fsubrl
setp
mov
test
mov
xorb
dec
dec
rcl
loopne
movsb
xchg
fcmove
and
pusha
mov
rcr
inc
cld
cmp
adcb
dec
into
je
into
jmp
popf
icebp
xor
cmp
pop
sub
cmc
or
es
outsb
aam
adc
adc
in
movl
loope
leave
mov
xchg
bound
adc
lcall
test
stos
dec
aas
repnz
clc
add
or
push
test
adc
sub
addr16
and
out
imul
xorl
push
outsb
pop
mov
xchg
mov
idiv
and
adc
cmp
pop
lods
aas
mov
mov
cmpsl
mov
pop
xor
fwait
das
daa
popa
cmp
fstl
push
data16
test
push
sbb
js
aam
das
adcl
push
jno
leave
pop
pop
ret
xchg
cmp
adcb
andl
ret
mov
xchg
outsb
pop
rclb
cmpsl
loop
mov
mov
fistl
insl
mov
inc
lods
or
xchg
sub
sub
mov
test
mov
out
int3
loope,pt
inc
js
lock
or
jno
test
cmp
push
mov
mov
int3
push
test
inc
cltd
imul
sbb
mov
shll
mov
jae
popa
push
sub
jno
adc
inc
sbb
add
repnz
leave
adc
enter
fidivrl
bound
ret
subl
icebp
sbb
testb
or
cwtl
push
sub
repnz
test
lret
lock
sub
inc
and
or
jne
test
cwtl
push
xor
inc
and
mov
mov
adc
cli
jb
xchg
out
jns
rcr
cli
roll
mov
fwait
mov
xchg
fisubs
stos
push
icebp
leave
testl
inc
fadds
pop
pop
xchg
dec
cmp
inc
mov
xor
sarb
loop
mov
pop
sbb
pop
icebp
imul
sub
lret
mov
dec
test
add
xchg
fsubr
popa
pusha
in
xor
add
xchg
jmp
inc
jg
xchg
lret
pushf
and
add
or
jle
mov
mov
mov
inc
lret
pusha
mulb
fbstp
jg
lods
pop
jge
sbb
clc
adcl
cmpsb
dec
rcll
and
ja
cmc
int3
inc
ljmp
adc
cmp
jbe
mov
pop
push
ss
icebp
cli
cli
mov
xchg
loope
push
vmovlps
call
jecxz
testl
sub
mov
js
cmpsl
fldcw
test
mov
lahf
xor
test
jb
cmpsl
dec
lcall
xchg
fs
pop
mov
imul
sbb
imull
sub
aas
cli
aaa
xorl
push
cs
bound
fnstsw
add
mov
scas
aas
stc
lcall
dec
and
testl
out
xchg
loopne
cmp
stc
adc
inc
loopne
into
test
ret
push
addr16
push
add
cld
popa
sbb
dec
cltd
data16
xchg
jg
xorl
jo
add
mov
and
mov
mov
addr16
clc
mov
xor
push
jnp
lods
lret
ss
ja
imulb
mov
pusha
push
add
cmpsb
fisttpll
fldenv
mov
nop
pop
sti
bts
xor
sar
mov
mov
cmpsl
dec
ss
fsubrs
test
push
ss
adc
jo
cmp
enter
mov
cwtl
sbb
dec
jge
sbb
imul
jg
cmp
test
sarb
iret
aam
xchg
jne
rorb
js
xorl
pop
addr16
fisubrl
in
inc
shlb
push
repnz
push
mov
in
arpl
inc
inc
lea
roll
add
aam
scas
cmp
sub
test
xlat
dec
clc
fs
xchg
dec
movsb
gs
mov
rol
test
jp
mov
lock
mov
or
sarl
mov
popf
lret
adc
sbb
out
add
movzwl
sub
xlat
in
cmp
or
adc
pop
push
aas
or
xchg
daa
into
arpl
sub
mov
mov
and
cmp
or
mov
fdivrp
lds
dec
test
mov
sub
mov
xchg
push
sti
cmp
mov
adc
stos
mov
ret
inc
jmp
sbb
jo
push
push
mov
lods
into
stos
inc
int3
lods
pop
nop
pop
cld
std
jp
mov
lcall
rorb
into
cld
dec
fmul
fcmovne
cld
aas
lret
dec
push
nop
push
inc
cmc
and
stos
lods
pop
cmc
jge
jns
or
data16
rcll
dec
push
pop
cs
cmc
lcall
mov
pushf
push
pushf
add
sub
inc
jae
dec
and
mov
jmp
mov
sbb
shl
pusha
add
push
push
xchg
xor
mov
fwait
mov
push
cmpb
int3
testb
pop
xor
fs
cltd
mov
into
or
frstor
fsts
arpl
aas
repnz
bound
js
mulb
idivl
sbb
xchg
pop
stos
add
mov
ljmp
inc
add
xor
cwtl
xor
xor
cmpsb
nop
outsb
adc
jecxz
cmp
adc
inc
sbb
mov
jmp
leave
add
addr16
xchg
jnp
push
jne
cmp
jnp
test
cld
fildl
pop
push
lret
cltd
sarl
jge
mov
hlt
pusha
dec
or
xor
arpl
icebp
inc
sbbw
or
jp
push
jnp
xor
fiadds
icebp
gs
cmp
jno
cmp
add
sub
jae
mov
xchg
std
cmpl
in
stos
xchg
inc
add
xor
rorb
cld
mov
xor
test
cmp
jge
cmp
add
xchg
mov
dec
in
call
fbld
popa
daa
push
mov
inc
dec
dec
in
cmp
movsl
shl
fsubr
push
mov
out
mov
mov
mov
jns
out
popa
psubsw
inc
inc
pop
and
insl
cmp
je
mov
xlat
adc
lcall
ljmp
mov
pop
jnp
test
mov
push
dec
xor
and
sahf
push
fwait
and
packuswb
mov
mov
imul
test
lahf
push
repz
xor
jg
push
cmp
test
loope
xchg
popa
sub
jnp
mov
mov
cmp
cmp
je
push
sbb
cmp
cmp
or
inc
sub
pop
jl
bound
push
fbld
shrl
pop
push
fstps
mov
push
sbb
mov
mov
mov
push
shll
jnp
jbe
shlb
jmp
outsl
mov
mov
insl
fiaddl
test
loope
pop
lcall
push
in
outsb
sbb
xor
sbb
mov
cmpsl
pop
xchg
pop
pop
out
jmp
mov
cmp
sub
or
and
ss
xchg
pop
cmpsl
sbb
out
aam
test
xchg
loopne
mov
mov
push
stos
out
das
inc
sbb
add
pop
mov
cltd
repnz
psubsb
xor
pop
insb
cltd
cli
lahf
int3
jge
push
stos
push
mov
cwtl
sbb
es
xchg
cmp
ss
int
inc
insl
aas
sub
jle
push
adc
push
add
and
inc
cmp
cmp
mov
and
test
cmpsb
jp
ljmp
inc
hlt
push
std
dec
into
pop
fs
movsb
dec
adc
mov
xor
loop
sti
mov
ljmp
add
sub
out
pushf
sub
sub
adc
stos
xchg
add
add
ljmp
rorl
pop
int3
jmp
cwtl
in
pop
repnz
or
dec
jecxz
adc
insb
pop
popa
push
std
xchg
jge
xor
xchg
ljmp
mov
popa
xchg
cli
pusha
lods
mov
in
push
lods
fiadds
dec
pop
or
cmp
inc
dec
scas
jmp
lcall
clc
sbbb
jbe
dec
inc
lods
and
hlt
push
sub
rolb
stos
xor
sub
push
and
dec
inc
pop
orl
or
jmp
inc
mov
pop
or
push
sbb
lds
dec
fsubs
aad
faddp
sub
adcl
pcmpeqd
lock
lret
repnz
popf
mov
or
enter
dec
das
xor
push
and
sbb
out
sub
test
addb
add
or
mov
stos
adc
jo
lds
and
or
push
add
mov
push
bswap
mov
call
add
cld
lods
pop
cmp
lock
push
cmp
pushf
dec
cmpsb
scas
push
cmp
dec
sahf
cmc
das
lea
out
jbe
add
sub
inc
jns
mov
jnp
jo
push
jne
dec
sti
xchg
fistps
sub
daa
mov
push
sti
cs
fwait
stos
jno
stc
dec
ljmp
bound
insl
call
aam
outsl
cmpsl
sbbl
stc
mov
mov
mov
out
int3
xor
jae
stos
rolb
xchg
fdivp
cmp
popa
xorl
insl
std
ds
xlat
pop
nop
fldenv
aad
push
fsubs
cld
xor
frstor
outsb
mov
loopne
out
pop
jno
jecxz
jl
sub
ds
stos
dec
dec
lahf
loope
xchg
and
cld
movsl
sbb
rclb
push
xchg
xchg
push
pusha
sbb
adc
jb
cmpsl
and
shll
sub
sbb
fs
sub
pop
aam
sbb
mov
push
sub
sbb
test
xlat
pop
xchg
ret
sti
mov
sbb
push
push
into
cli
insb
pusha
inc
pop
idivb
mov
xor
xor
inc
ret
scas
xor
test
pop
fnstsw
data16
iret
stos
inc
sbb
dec
sbb
push
mov
sub
lods
call
jno
adc
jmp
xchg
lcall
shlb
jmp
call
sub
dec
arpl
jge
ret
movsl
call
test
mov
sbb
out
test
adc
repz
jns
or
popa
scas
in
push
addb
jno
hlt
pop
pushl
pushf
sub
dec
hlt
fucomi
adc
mov
jbe
xchg
adc
push
xor
test
lahf
dec
pmulhuw
cmpsb
int3
or
dec
test
pop
push
push
push
enter
xor
mov
xor
mov
push
inc
mov
ret
cli
scas
mov
outsb
imulb
sbb
jg
mov
mov
or
retw
call
inc
cmpsl
dec
not
push
jecxz
nop
push
sti
scas
stos
cmpsb
andl
sbb
adc
lahf
lahf
and
jbe
cwtl
std
fs
out
aad
mov
jmp
inc
fs
pop
jns
dec
mov
adc
dec
aaa
dec
sub
sub
push
shrl
daa
adc
sub
mov
repz
fsubrs
mov
ja
cltd
add
jb
testl
cli
mov
je
lret
stc
decl
sbb
sahf
popa
xor
cli
pop
mov
in
je
mov
inc
xchg
ds
scas
jno
call
cld
leave
int3
out
mov
push
sbb
sub
xchg
into
dec
cmp
cmpsl
push
mov
inc
leave
lcall
xchg
mov
sahf
jbe
loope
jbe
or
jecxz
out
push
mov
jae
mov
mov
mov
adc
gs
or
xchg
imul
mov
push
ljmp
cli
pop
mov
add
mov
rcrl
and
out
insb
mov
mov
jl
push
pop
add
ja
or
pop
fisubrs
xor
aam
push
jmp
jp
jns
sub
or
adc
movsl
int
cmp
push
or
daa
mov
popa
push
fsubp
mov
xchg
xchg
xchg
inc
fs
push
pushf
jge
roll
xor
lds
fsubs
add
outsb
dec
loope
adc
sub
cmp
push
pop
dec
mov
sub
outsl
loop
xchg
push
mov
sub
adc
mov
jno
pop
and
clc
mov
jmp
push
jb
adc
cs
mov
mov
data16
rorb
jle
cvttps2pi
mov
ret
add
push
push
test
mov
xchg
mov
xchg
daa
sub
cli
add
clc
sub
mov
in
push
stos
push
stos
mov
les
bnd
insb
daa
jg
rclb
mov
sub
cli
mov
cmpsl
addr16
cmp
cli
xchg
mov
mov
rolb
icebp
int
mov
xchg
hlt
pop
lret
loop
in
xor
push
fsubr
lret
imul
daa
push
loop
sahf
cmp
mov
stos
xchg
xchg
mov
xchg
and
call
xor
stc
xchg
jle
xchg
clc
aas
add
mov
mov
dec
cmp
in
call
mov
std
push
push
xor
or
sbb
imul
stc
addr16
jecxz
mov
rcrb
ljmp
out
in
xor
cs
aas
inc
push
sbb
xor
mov
loopne
callw
and
int
push
xlat
push
push
cmpsl
ds
sub
cmpsl
mov
mov
clc
test
mov
or
dec
add
stos
dec
fs
scas
lcall
push
sahf
in
dec
adc
dec
and
xchg
ss
add
add
push
xchg
insl
jne
aam
cmp
out
xchg
xchg
into
inc
mov
aas
and
push
mov
out
les
sti
test
sub
mov
rcrb
daa
movsb
in
insl
arpl
out
stos
mov
push
and
dec
adc
repnz
xchg
sub
ficoms
les
inc
inc
cmp
jmp
bound
daa
sub
idivl
or
mov
clc
enter
mov
lods
fisubl
cmp
out
loop
popa
sar
mov
repnz
xor
push
imul
jo
push
cwtl
je
jl
out
notb
push
movsb
int3
cld
movsb
loop
xor
fcomps
push
aam
xchg
pop
call
jge
adc
inc
pop
push
xchg
pop
inc
jmp
xor
in
cmp
jnp
lods
sbb
outsl
jecxz
addb
je
inc
fisttpll
pop
add
pop
jbe
mov
outsl
sahf
mov
pop
push
clc
and
pop
div
shlb
jns
adc
mov
outsb
xor
lea
xor
in
push
xchg
fldenv
dec
outsb
xchg
scas
nop
cli
xor
insl
add
xchg
out
addr16
or
mov
faddl
mov
cmp
mov
ret
pop
sbb
dec
mov
addb
stos
nop
out
pop
scas
dec
lock
jmp
in
test
rolb
ja
shl
addl
mov
adc
scas
aaa
lahf
int
stos
inc
inc
mov
fs
mov
cmp
das
dec
push
je
icebp
nop
imul
imul
push
mov
imul
ljmp
imul
inc
mov
rcll
sbb
imul
cmp
iret
mov
idivl
je
std
xchg
mov
sub
mov
adc
xchg
ficompl
add
mov
daa
and
mov
inc
mov
cmp
pop
sbb
loope
sar
add
xchg
xchg
in
ja
adcb
ljmp
in
cmp
push
cmc
adc
mov
insb
orb
ja
sub
add
mov
aas
aaa
push
adc
and
jecxz
pop
dec
fcmovu
jg
jge
xchg
push
add
sbb
inc
mov
js
out
xchg
aad
mov
int
pop
ret
and
sub
jp
add
adc
jle
sub
mov
mov
add
mov
fidivs
push
inc
jo
jbe
or
imul
ds
sti
jle
call
add
adc
add
jns
mov
pop
adc
sbb
adc
and
fldenv
push
inc
jae
xchg
movsb
ficoml
ds
sub
scas
cmpsl
shrl
adc
or
sub
cmpsl
xchg
adc
jb
test
cmp
call
push
test
xchg
push
jno
push
mov
movsb
cmpsl
lcall
mov
in
ret
xchg
stc
and
in
cli
xchg
cmp
dec
dec
sbb
xchg
inc
jns
and
subb
popa
or
test
or
mov
push
xor
in
sti
jmp
add
sbb
push
daa
out
outsb
mov
cltd
lret
out
mov
out
adc
popa
mov
xchg
stos
test
push
sbb
inc
push
xor
jle
push
je
js
xor
pop
ss
jmp
cmp
ljmp
popf
imul
or
jge
and
enter
mov
mov
inc
push
mov
fbstp
adc
jb
rcl
out
push
add
pop
aaa
test
jno
divl
test
cmp
cmp
pop
and
sub
cmc
aad
test
push
test
dec
stos
stos
sahf
xor
iret
mov
pop
into
js
mov
sub
pop
sub
test
addr16
lock
and
fstpt
push
pop
mov
aam
jmp
push
hlt
loopne
and
in
es
aad
jl
aas
pop
fnstenv
ljmp
test
and
cmp
lods
aaa
ds
jae
cli
lret
cltd
cmpsb
sbbl
push
ficomps
mov
jnp
inc
sbbl
pop
test
es
xchg
mov
inc
call
imul
jle
push
pop
adc
pop
dec
xchg
int
add
jge
call
fldcw
push
mov
or
mov
loop
ror
push
add
cwtl
jge
test
mov
ljmp
cmp
pushf
hlt
mov
cmp
push
or
frstor
pop
incl
outsl
shrb
xchg
int
sub
xchg
orb
sbb
pop
and
and
cli
leave
adc
jp
test
lcall
ja
sbb
ljmp
or
cmpb
mov
dec
je
leave
aas
xlat
mov
xchg
cmp
xor
test
dec
idivl
cmp
jg
out
mov
sub
and
sbb
or
cmpsl
loop
inc
stc
dec
in
pop
lea
adcl
sub
mov
dec
sub
mov
pop
xor
and
mov
sub
or
in
dec
dec
sbb
adc
mulps
push
insb
inc
sbb
sarl
and
sbb
mov
or
in
insl
adc
mov
mov
popf
and
loop
sti
cmp
das
cmp
bound
add
nop
dec
sbb
and
lock
bound
and
bound
jge
imul
inc
sub
ds
mov
cmp
pop
ds
jo
dec
cs
out
sub
int3
cmp
sbb
or
rolb
in
addr16
je
jnp
fnsave
imul
cmp
not
pop
je
cmp
dec
mov
or
mov
out
push
stc
mov
fmull
test
les
cltd
xchg
sbb
test
rcrb
or
pop
mov
lods
and
inc
cmp
repnz
sarl
pop
jb
test
test
mov
daa
dec
fidivl
dec
sub
cmp
jmp
das
or
mov
hlt
xchg
jno
dec
push
push
pop
ret
imul
lods
arpl
adc
rorl
stos
push
adc
clc
add
push
fimuls
les
les
add
imul
repnz
push
jo
mov
jl
leave
js
repnz
xchg
rclb
cmp
imul
insl
lods
sbb
lret
in
stos
scas
fsubrs
inc
inc
or
pushl
adc
stos
lds
mov
cli
sbb
stos
lcall
cmp
or
jg
xchg
cmp
popf
loop
std
xor
pop
leave
int
andb
xchg
pop
push
inc
jecxz
push
cld
fucom
subb
dec
aam
mov
fwait
hlt
jne
inc
test
mov
cmp
pushf
jge
mov
push
add
in
in
pop
xchg
push
push
jns
jno
xchg
push
sbb
xor
push
fidivrl
and
shrl
pop
sbb
mov
xor
in
les
push
js
mov
mov
mov
aam
aaa
mov
bound
sub
cmpsl
jmp
add
lea
test
xor
jecxz
sub
rcll
lret
mov
adc
add
and
jmp
daa
negb
xchg
xlat
clc
cmp
jmp
mov
out
mov
cmpsl
lock
sub
adc
sbb
jb
inc
sub
clc
bound
push
adc
dec
jg
dec
inc
xor
xchg
inc
jnp
adcb
out
pop
stos
repz
jge
punpckhwd
lods
jge
inc
pop
nop
ret
jb
js
pop
call
mov
stos
mov
cmpsl
mov
mov
xchg
jno
push
push
int
mov
dec
popa
shll
jb
ss
repnz
push
popf
int3
mov
dec
ljmp
push
mov
cmovne
pcmpeqd
je
lods
pop
jmp
in
sbb
pop
lret
mov
dec
fbld
and
je,pt
xchg
aaa
lahf
xchg
jge
mov
jne
sarb
or
add
dec
out
into
popa
test
ljmpw
scas
fdivrs
jne
or
push
dec
into
cmc
ret
jmp
adc
es
mov
xlat
dec
adc
cmpl
je,pt
imul
xchg
and
xchg
cltd
rcll
scas
movsl
jb
out
mov
cmpsl
push
dec
ds
push
es
cmp
clc
inc
into
testb
and
cltd
mov
loop
mov
adc
enter
imul
xchg
stos
inc
push
xchg
mov
loope
pop
xchg
mov
push
dec
sbb
arpl
scas
pop
int
push
lret
mov
pop
xor
cmp
icebp
lcall
sub
jl
xchg
fnstenv
pop
inc
js
cmp
leave
scas
adcl
cwtl
xchg
pop
imul
notb
testb
sbb
adc
mov
je
jbe
mov
add
mov
ds
pop
sahf
jmp
pop
xor
dec
repnz
lods
mov
mov
adcl
aaa
push
jmp
mov
jns
dec
xor
cmp
sbb
sbb
cmp
pop
inc
push
mov
es
dec
pop
jp
rorb
loop
pop
cmp
ja
and
repnz
cmp
jmp
sbb
imul
dec
or
shlb
pop
cmpb
pop
orl
xchg
mov
in
dec
ror
psllw
rcll
cmp
pop
mov
pop
adc
bound
loope
mov
cmpsl
mov
je
jb
jg
lcall
ja
xchg
mov
lea
jg
hlt
jl
movsb
sahf
and
lret
pop
ljmp
fstl
into
jae
fcompl
inc
add
adc
add
dec
pop
scas
sub
adc
stos
sub
sahf
dec
xchg
jp
adc
fisttpll
adc
movsb
cmp
iret
jp
gs
mov
repnz
es
dec
lea
dec
cmpsl
lcall
ja
push
icebp
outsb
das
out
dec
sbb
mov
push
shr
cmp
mov
gs
jb
into
and
roll
ret
cmpsb
jnp
es
adc
cmp
mov
add
pcmpgtb
int3
pop
add
mov
jae
xchg
hlt
lods
dec
sbb
push
push
xor
lcall
movsl
je
fcoml
rcl
pop
or
inc
push
jp
sti
in
enter
std
inc
les
pop
rclb
fisttpll
decb
sub
xor
xor
xchg
cmpsl
mov
mov
repnz
clc
mov
test
jbe
xchg
in
imul
adc
pop
loopne
xor
repz
fadds
and
and
cltd
fstl
xchg
inc
icebp
cmc
pop
cmc
sub
xchg
push
add
popf
in
fwait
adc
sahf
lahf
dec
inc
pop
add
xlat
mov
xor
jb
push
push
frstor
sahf
mov
es
jae
jno
aad
xchg
iret
test
add
inc
dec
aad
xor
bound
lret
into
lahf
sbb
movb
fbstp
adc
add
sbb
inc
loopne
dec
cltd
sbb
jne
imul
jns
cli
mov
sbb
mov
jp
scas
testl
push
mov
dec
cmp
fwait
sti
into
jmp
push
or
and
mov
inc
dec
movsb
inc
or
or
sbb
push
fsubrs
cmp
sub
dec
lods
popa
lea
or
rorb
rorl
mov
add
sbb
lahf
inc
loop
push
outsl
mov
ds
or
lock
xor
dec
mov
cli
sub
popf
dec
stos
mov
sahf
cld
out
inc
and
sti
jle
cs
push
pushf
lret
lea
and
repnz
pop
dec
scas
push
mov
fnsave
push
addr16
mov
leave
sub
dec
add
insl
jo
scas
inc
push
aad
cmp
fdivrs
iret
or
popa
popf
ds
dec
sbb
sbb
sub
lahf
or
out
push
push
sti
cltd
dec
add
cmp
add
sbb
hlt
mov
aas
push
mov
and
loope
icebp
lcall
mov
repnz
jecxz
dec
or
jbe
mov
add
dec
mov
sbb
xchg
push
xor
imul
nop
lcall
jno
mov
add
jo
js
pop
jno
xchg
mov
sbb
sub
popf
mov
dec
icebp
cld
mov
sahf
mov
fs
out
arpl
cmp
aaa
int3
testb
dec
sub
mov
test
pop
movsb
fsubl
cld
sub
add
mov
cltd
dec
mov
dec
xchg
add
inc
loop
pop
rclb
loop
das
sbbl
adc
mov
lods
addr16
out
jnp
loop
mov
jo
mov
mov
and
lcall
out
test
mov
jge
push
loop
inc
pop
inc
addr16
and
std
and
mov
inc
cmp
xchg
ds
rcrl
jle
cmp
jp
pop
test
arpl
repnz
jecxz
pushf
aaa
jmp
loope
mov
nop
nop
jns
flds
pop
push
outsb
or
lcall
and
and
pop
pop
nop
adc
mul
sub
dec
jmp
dec
jnp
cmp
test
insl
nop
pop
sarb
push
dec
pop
and
imull
and
sbb
add
cmp
enter
hlt
testb
jo
les
mov
pusha
pop
ja
lods
sbb
xchg
cmc
cmc
lret
xor
cmp
push
addl
lea
sahf
fisttpll
push
cmpsb
lcall
inc
xor
ficoml
mov
aaa
insb
or
push
push
movsb
lret
jle
jbe
add
aaa
mov
or
incb
ja
jle
popa
lcall
or
mov
popa
xchg
dec
rcll
pop
xchg
mov
aad
scas
adc
jle
push
addr16
mov
sbb
cli
xor
movb
lods
mov
mov
fsts
sbb
cmc
icebp
andb
lods
mov
xchg
insb
imul
lods
sbb
sbb
add
cmc
and
pop
xchg
cmp
adc
ljmp
mov
add
aad
jnp
es
xchg
outsb
push
push
adc
popf
jl
pop
lods
ss
fstps
jle
jmp
hlt
negb
jg
mov
mov
in
loopne
xlat
fstpl
aaa
xor
add
in
repnz
fcmovbe
inc
pop
jp
fcmovbe
mov
scas
sarl
jns
movsb
pop
scas
mov
mov
adc
loop
jg
shrb
jmp
out
imul
into
scas
stos
push
mov
pusha
lahf
sti
add
pushf
popf
icebp
add
std
pop
mov
cmp
outsb
ja
xchg
jecxz
sub
cmp
lods
push
inc
cld
adcb
out
lods
pusha
lea
dec
or
movsl
dec
jmp
fs
je
sti
ret
ret
mov
pop
xchg
popf
loopne
xor
xchg
fimuls
mov
dec
sti
fwait
subl
xor
mov
cmpsl
jo
clc
jae
xor
cmp
jae
aam
outsl
dec
repz
add
mov
mov
cmpsb
sub
lahf
es
xchg
addr16
orw
mov
out
adc
dec
mull
cmp
sub
lret
mov
cmpsl
pop
scas
xor
mov
adc
add
xor
pop
mov
aas
jbe
in
xlat
js
mov
adc
lods
and
adc
add
jp
xchg
lea
movsl
aaa
iret
xor
mov
jg
test
sbb
popa
nop
dec
gs
pop
pop
rorl
sub
xchg
pushf
out
or
stos
sub
faddl
rorl
cmovge
push
imul
mov
aaa
xchg
repnz
inc
xchg
mov
jp
inc
ret
adc
dec
push
xchg
lods
data16
push
mov
xchg
mov
out
scas
mov
pushf
jmp
repnz
call
std
mov
es
lcall
jae
xchg
sub
mov
dec
fiaddl
test
loopne
test
adc
adc
add
mov
enter
aaa
iret
cmp
fs
xchg
mov
gs
clc
gs
cld
xor
aaa
mov
test
mov
xor
fwait
xchg
ss
into
rcrl
test
jne
adcb
jae
fadds
or
jl
les
pop
pop
push
adc
mov
in
inc
fistpl
add
and
out
dec
mov
cmp
or
sbb
sahf
jbe
or
aad
cs
lret
pushf
sbb
aam
test
adc
popl
add
jbe
fdivs
fwait
mov
ja
cld
or
fwait
bnd
push
jl
icebp
xchg
mov
pushf
or
cmp
aam
push
sbb
and
sub
jb
jnp
stc
mov
sahf
scas
xchg
es
test
sub
add
mov
pop
sub
mov
scas
mov
cs
in
add
std
and
aam
sub
mov
push
hlt
add
mov
lds
imul
jmp
lcall
push
insb
lock
mov
pop
into
sbb
notb
insl
pusha
pop
push
dec
or
jae
dec
dec
cltd
pop
mov
das
or
xor
push
inc
aam
bound
mov
xlat
mov
sub
adc
sub
sbb
mov
mov
cmp
inc
into
out
lahf
loop
es
int
sti
sar
jb
xchg
or
fnstenv
push
in
ret
xchg
gs
jge
jns
mov
imul
pop
arpl
pshufw
test
push
dec
mov
jge
xchg
lods
out
mov
adc
xor
int3
xor
mov
gs
jge
mov
out
push
lods
jbe
mov
std
pop
inc
xlat
fwait
push
imul
xor
mov
xor
hlt
mov
shl
int
pushf
push
inc
aas
cmp
push
mov
jnp
cltd
push
movsb
jbe
xchg
je
fmul
icebp
inc
pop
jge
imul
sbb
addr16
lahf
clc
int3
fxch
dec
push
cli
fmul
xor
fcompl
pop
lods
mov
push
decb
leave
push
xlat
dec
mov
sbb
xor
inc
jp
nop
dec
daa
stos
jmp
sub
sbb
mov
inc
test
aaa
out
out
test
inc
out
js
scas
cmpsl
push
out
lcall
push
lret
mov
out
outsb
push
mov
sbb
cmp
fcmovbe
push
lds
dec
dec
sbb
lret
jecxz
push
jmp
shrb
push
mov
mov
mov
inc
push
mov
enter
lret
pusha
iret
cmp
icebp
dec
sti
cmp
jge
push
cmpsl
movsl
call
fdivp
int
xchg
jecxz
jmp
scas
jle
xor
push
rolb
lds
ret
repnz
in
fcompl
jne
mov
mov
inc
xchg
test
lds
call
or
push
xchg
or
aaa
jecxz
jo
mov
shlb
hlt
pop
lret
icebp
jb
mov
lcall
leave
add
loope
inc
fistpll
jno
mov
dec
add
push
sub
push
ret
inc
mov
out
adc
lahf
jmp
loopne
ucomiss
sbb
mov
ret
sahf
sub
add
jbe
call
mov
cmp
cmp
mov
cmp
inc
popa
imul
fdivs
add
int3
dec
sub
xor
loopne
lock
lahf
inc
mov
push
rcrl
mov
mov
ss
lds
into
leave
and
stos
bndstx
xor
stos
fnstsw
sub
adc
adc
in
adc
xchg
insb
mov
rcrl
adc
rorl
push
xchg
jmp
cmp
or
xchg
imul
sbb
shll
push
or
repz
jae
cmp
add
pushf
and
and
rcll
jle
sbb
popf
pop
dec
mov
pop
xchg
insb
loopne
jne
xor
xor
mov
dec
pop
fcoms
add
js
add
scas
std
dec
sub
xor
mov
fcoms
jb
sti
int
in
xchg
orb
lods
mov
sbb
cmp
jb
das
sub
dec
lds
cmp
fnsave
sub
lds
bound
mov
and
fdivrs
push
ds
in
adc
xchg
addl
aad
or
cmp
or
mov
shl
shlb
xorl
out
loope
test
shlb
pusha
int
les
mov
decl
fwait
loop
aad
xchg
icebp
mov
shlb
pop
push
sbb
dec
test
cmp
jl
imul
cmp
push
inc
icebp
loop
jns
inc
adc
stos
ljmp
test
xor
xlat
out
adc
push
cwtl
lret
cmp
dec
das
push
pop
stos
stos
mov
es
loope
xchg
sbb
xor
repnz
lds
or
mov
fcmove
push
xor
into
mov
cli
jb
mov
xor
pop
addr16
aaa
ja
jo
ds
fsubl
test
dec
ja
jne
popa
mov
es
ljmp
sbb
add
xor
pop
test
cs
inc
leave
mov
xchg
insl
push
dec
push
sahf
in
jp
dec
sbb
sub
lcall
mov
dec
mov
inc
lds
lock
dec
mov
cmp
dec
bound
out
xor
sbb
mov
xor
xchg
std
stc
mov
mov
and
cmpsb
fwait
xor
fcomps
daa
adc
and
sti
push
stos
insl
cs
add
inc
push
mov
inc
xor
mov
push
divb
outsl
jo
loopne
fs
aam
push
dec
mov
or
mov
xchg
mov
jnp
add
xchg
push
and
pop
cmpsb
add
push
pop
jne
push
nop
testb
cs
mov
xchg
push
cmp
push
lds
testb
rcl
ror
repz
inc
jbe
loope
sub
pop
mov
adc
lock
push
sarl
cmp
cmp
fmull
lea
sbb
nop
jnp
imul
xor
dec
rorl
movsb
adc
shll
adc
dec
in
sbb
test
xchg
xchg
jnp
stos
mov
mov
push
loope
mov
shl
sub
rorb
sub
xchg
or
sbb
mov
lcall
and
rolb
loopne
jo
sarb
rcll
cmp
out
inc
jge
inc
cmp
pop
pop
lret
mov
mov
ret
ja
push
add
fistpl
add
and
les
push
jnp
mov
clc
mov
push
gs
ja
xchg
pop
cmpsl
jb
mov
dec
jb
add
mov
sub
enter
popa
mov
enter
sbb
sub
add
push
int3
xchg
fcom
add
cld
mov
popf
test
cs
out
out
es
iret
pushf
mov
push
mov
js
mov
ret
pusha
lret
adc
insl
xchg
adc
scas
addr16
xchg
and
sbb
and
jge
mov
cmp
lock
repnz
fwait
inc
xor
push
out
bound
pushf
ret
ja
fwait
sub
xchg
ret
push
xor
rol
mov
xchg
push
loope
sub
mov
mov
jno
ficomps
mov
cmpsl
fbstp
pop
fsubs
sti
xor
dec
inc
mov
jae
push
fcomp
cmpsb
mov
xchg
ja
fcoms
nop
out
mov
fwait
xchg
pop
or
fwait
addr16
mov
cmp
jmp
adc
data16
jno
cmpsb
in
enter
inc
dec
repz
shlb
cld
mov
scas
pop
pusha
mov
sbb
outsb
adc
jmp
nop
movsb
movsb
xlat
fyl2xp1
xchg
mov
jne
lahf
jg
push
fadds
pop
sub
push
pop
sti
mov
jle
cltd
inc
cs
call
cmp
push
jl
sub
or
and
and
jmp
mov
dec
cmp
or
xor
push
fwait
and
mov
popa
push
and
data16
inc
stos
mov
out
push
fistps
or
cmp
loope
insb
add
pushf
pop
movsb
cmpsl
xchg
movsb
ret
pushf
bound
mov
xor
add
imul
xchg
into
dec
imull
inc
push
ret
pop
xor
jl
lret
test
mov
mov
fyl2xp1
inc
adc
jmp
scas
fwait
lock
xchg
and
in
xor
jns
or
pop
inc
aam
outsl
ficoml
push
arpl
out
fwait
cmp
fdivrl
test
dec
jb
push
shl
out
lahf
loopne
addb
mov
gs
sub
stos
ret
loop
jbe
xchg
xchg
push
pop
mov
sbb
fsubp
push
ja
dec
sahf
ja
aas
sbb
insb
or
adc
mov
ret
or
mov
cs
js
mov
sbb
lds
std
mov
sub
lods
cmp
ljmp
adc
xor
or
cmp
daa
fucomip
aad
inc
or
sbb
test
xchg
fisttpl
jp
dec
in
or
xchg
mov
adc
cs
jnp
cmpsl
jp
jp
ja
and
add
mov
adc
in
jl
dec
lret
lret
cmc
movsb
lods
sbb
xchg
pop
stos
fs
add
mov
pop
mov
idiv
sub
out
cmp
xchg
das
and
sti
in
ljmp
push
loop
and
xchg
enter
or
sub
popa
xor
push
loope
add
adc
lcall
sbb
mov
xchg
loopne
fxch
xlat
fmull
sar
mov
bound
rorl
jmp
cmc
out
jg
pop
mull
mov
popa
push
shl
or
push
out
out
mov
jbe
rclb
push
popa
es
push
dec
or
inc
or
outsl
mov
das
jecxz
adc
orb
movsb
aam
data16
sbb
sub
push
mov
xchg
xchg
or
outsb
mov
sahf
pop
out
jmp
out
out
lock
jecxz
pop
jo
pop
push
sub
ljmp
jns
fcompl
std
add
xlat
push
mov
arpl
xchg
push
pusha
in
inc
imul
adc
cmp
test
out
test
xor
sub
dec
sub
push
hlt
jnp
lahf
mov
jnp
push
outsl
cmc
xchg
mov
xchg
mov
push
mov
data16
shlb
imul
pushl
je
gs
sbbl
repnz
cmpsb
xor
adc
push
push
pusha
iret
xchg
xor
ss
mov
push
shrl
in
fcompl
js
paddw
pop
cmp
out
xchg
arpl
pop
nop
mov
rolb
repz
leave
arpl
xchg
and
mov
fs
cmc
dec
lock
lahf
fwait
and
jno
out
push
repz
dec
pusha
cmp
mov
lods
out
cld
cmpsl
pop
jns
fsin
sbb
pop
into
lods
cmpsb
sbb
jo
cli
popa
jne
syscall
xlat
test
dec
jmp
or
addr16
insl
loopne
sub
xor
cmp
add
pop
inc
call
pop
mov
sub
jnp
pop
xor
lea
xor
addb
mov
into
pop
test
out
scas
rol
std
and
xchg
jae
loop
pop
dec
inc
in
xchg
ja
mov
adc
sbb
inc
push
lret
lods
inc
out
into
sti
mov
out
adc
xchg
cmp
add
mov
cwtl
mov
jle
mov
mov
gs
cmpsb
test
lods
dec
mov
aam
push
push
and
lea
xor
xor
or
out
jno
aaa
test
mulb
ljmp
fwait
movsl
cmp
jae
scas
cwtl
daa
roll
jo
jecxz
inc
inc
ss
lods
aam
adc
adc
inc
adc
aaa
pop
fcoml
sti
xor
xlat
mov
cmp
pop
jg
and
daa
loop
fists
push
add
push
insb
cmpsl
std
idiv
daa
outsb
mov
aam
mov
mov
aaa
loop
stos
mov
jmp
cmp
loop
mov
pop
popa
jno
cmp
lahf
ja
mov
mov
jp
jne
out
pop
sbb
sub
lds
dec
ljmp
insl
pop
xor
mov
inc
scas
aam
adc
fwait
rol
sbb
int3
mov
ljmp
sbb
in
inc
pusha
dec
cmp
adc
mov
stos
pop
sbb
or
dec
popa
mov
xor
iret
dec
jb
adc
mov
push
inc
repz
sbb
dec
mov
cmpsb
mov
pop
mov
jne
ds
cs
xchg
cmp
loope
jnp
ja
jmp
test
aaa
push
sbb
push
sbb
lahf
lcall
hlt
jo
call
mov
mov
aaa
jae
mov
enter
movsb
pop
inc
lret
fucom
dec
divl
sbb
stc
dec
cmpb
push
mov
cmp
in
jno
mov
loope
cmp
jns
pusha
xor
add
bound
idivb
sbb
das
loope
dec
outsl
lcall
mov
xchg
sahf
dec
or
and
adc
loopne
cmpsb
jmp
lock
cmp
cmpl
pushf
in
jns
shrl
mov
xchg
mov
aas
in
mov
fstp
dec
pusha
dec
fld
inc
insb
pop
or
xor
pop
inc
stos
sbb
cli
mov
mov
mov
mov
loope
test
imul
dec
out
inc
sub
mov
cmp
push
incl
mov
insl
rolb
and
das
inc
add
xlat
cwtl
fisubrl
cli
dec
es
call
cmc
scas
out
jecxz,pt
out
cli
fwait
cmpsb
push
fs
jnp
dec
or
leave
lock
scas
rol
iret
fisubl
adc
out
ficoml
xchg
add
sbb
in
sub
add
cmpsl
shl
mov
cmp
rcll
and
adc
ds
pop
jns
mov
mov
xchg
rcr
les
mov
loopne
jg
cmpsl
out
cmp
adc
insb
or
dec
jg
divb
leave
pop
outsl
sbb
fwait
inc
sub
xor
and
mov
dec
dec
lret
data16
es
cmp
outsb
xor
add
mov
out
aad
push
ret
lcall
push
or
cmp
mov
and
sub
inc
push
fdivs
out
sbb
sub
pop
or
xchg
mov
out
int
insl
popa
sub
add
sub
mov
rcrl
in
icebp
and
xchg
jnp
push
imul
fmulp
mov
adc
std
leave
adc
sbb
inc
leave
dec
mov
push
fsubrp
sub
test
push
shll
cld
shll
jno
or
sahf
sbb
sbb
or
push
aad
mov
mov
mov
sub
sarl
idivb
xchg
addr16
push
push
jmp
outsb
addr16
inc
dec
mov
or
std
stos
sahf
rsm
pop
popf
and
mov
clc
push
push
jge
sbb
inc
inc
gs
movsb
mov
fists
sub
xor
stc
adc
xchg
push
inc
cmpsl
dec
inc
xorl
mov
mov
mov
hlt
add
insl
sub
scas
jecxz
loop
les
lret
add
dec
jmp
xchg
out
clc
mov
sub
stos
jecxz
mov
sahf
test
lcall
cltd
in
jno
push
add
inc
mov
add
sbb
aas
repnz
cld
divb
scas
jns
fprem1
sub
nop
xchg
or
vpunpcklbw
add
and
maxps
and
sub
pop
jecxz
add
inc
mov
inc
sbb
xchg
pop
or
jne
testb
pop
adc
js
in
add
pushf
adc
jmp
xchg
sub
jle
sti
sub
add
cmp
inc
add
inc
repz
mov
cmp
jp
fucomip
mov
movsl
jmp
shr
js
jmp
jp
push
inc
sti
std
cltd
inc
pop
dec
stos
xor
mov
jnp
sbb
ficomps
or
bnd
int
add
xor
fidivs
rorl
xchg
push
js
cmp
neg
lahf
in
jg
enter
out
push
jl
ss
and
lahf
adc
outsl
test
pop
add
mov
sbb
arpl
sub
xchg
and
mov
in
movsb
adcb
jnp
xchg
jae
bound
push
outsb
mov
xchg
mov
icebp
sti
loop
popf
gs
lods
and
mov
insl
lcall
gs
sbb
movsl
xor
test
mov
dec
testb
mov
sub
repnz
scas
pop
xor
or
push
sbbl
adc
push
sahf
fcoml
cmpl
sbb
mov
scas
pop
add
push
mov
call
xchg
mov
lds
xchg
cmpb
leave
add
in
add
inc
hlt
xchg
stos
dec
dec
mov
lock
xchg
nop
stos
adc
pusha
out
and
sbb
jnp
inc
les
and
xor
mov
xor
dec
mov
xchg
adcl
in
outsb
mov
call
lcall
hlt
test
xchg
std
clc
xchg
push
icebp
inc
lods
mov
mov
xchg
sete
cwtl
fs
cmp
cltd
and
jmp
sbb
jle
jecxz
shll
leave
sbb
fdivr
push
fucomip
sbb
sub
cmc
push
pushf
jo
inc
incl
popf
xor
xchg
pop
out
scas
pop
inc
dec
or
mov
repz
adc
push
sbb
cmp
xor
lahf
fstpt
test
cmc
out
push
out
add
fwait
sbb
stos
rcrb
xchg
aad
addr16
in
pop
fildl
int3
nop
insl
jne
adcl
pop
in
pop
loopne
jg
clc
xor
cmc
popf
xchg
push
mov
mov
mov
xor
push
in
pop
jmp
in
sbb
imul
sub
loopne
repz
stos
pop
sub
imul
mov
pop
adc
jmp
or
imul
fistpl
xchg
push
mov
stc
inc
int3
out
scas
fwait
adc
dec
add
cwtl
pop
inc
popf
ret
fbld
pop
inc
sbb
loope
aaa
push
out
popa
cwtl
aam
and
in
lods
sub
and
fnstenv
lods
mov
imul
outsl
outsb
lcall
pop
out
lret
int3
insl
pusha
sub
ret
mov
lret
jns
and
dec
call
test
dec
push
xchg
dec
fstpt
loopne
sbb
push
ror
dec
inc
adc
pop
filds
aas
pop
sub
adc
jg
adc
dec
loop
sub
stc
test
jmp
jo
cwtl
cmpsl
pop
push
outsb
aam
test
mov
jp
int
std
cmp
jmp
push
movsl
mov
sub
scas
dec
cmpsl
jo
or
jge
cld
pop
xchg
mov
push
mov
daa
mov
outsb
in
push
xchg
push
jl
pop
les
cltd
xchg
xor
aad
inc
dec
add
jo
cmp
in
in
push
adc
mov
fs
adc
and
mov
adc
xchg
jb
cmpsl
fwait
mov
pop
or
lea
lret
loope
sbb
xchg
cs
pop
adc
jbe
sub
add
sbbb
sti
push
imul
inc
enter
pushf
scas
test
jecxz
loopne
iret
cmp
mov
jnp
aas
inc
mov
cmp
jle
pop
sbb
es
and
jle
mov
pop
cmp
mov
cmp
aad
push
rcll
sub
lods
and
loopne
inc
adc
ds
inc
jecxz
aam
aas
mov
aas
fdivrs
aad
adc
ret
inc
pop
out
push
popf
inc
pop
jb
imul
cmp
lods
lods
imul
adc
cs
aas
jo
sub
inc
sarb
and
shll
push
sbb
add
faddl
nop
inc
or
sarb
or
imul
inc
shlb
add
stc
cmpsb
add
dec
insb
mov
sti
sar
ljmp
inc
out
xchg
ret
lea
jp
idivb
cmp
mov
loope
mov
adc
hlt
lds
xchg
and
iret
dec
and
jle
mov
movsl
das
in
mov
ja
cmp
imul
popf
in
and
aas
push
xor
divps
jne
sbb
cmp
pop
cld
aaa
adc
adc
aas
and
ret
bound
rorl
xor
lahf
sub
and
mov
jno
loopne
add
addr16
mov
push
xchg
nop
es
push
adc
sbb
sub
imul
mov
imul
popa
cmp
mov
inc
mul
sub
jg
es
clc
shrb
xchg
ljmp
push
push
ret
lods
pop
in
test
xor
enter
lret
push
or
dec
jg
stos
iret
sub
ficompl
fdiv
or
das
arpl
gs
cld
sbb
sti
cmp
ret
mov
outsb
jl
and
sbbb
jbe
subb
sbb
imul
js
leave
mov
sub
ss
xchg
mov
pop
inc
mov
inc
jns
mov
and
add
pop
dec
mov
cmpsb
sbb
xchg
or
test
sahf
mov
jge
and
push
lods
push
mov
or
pop
pop
pop
aas
xchg
xor
loop
sub
sti
or
cmp
push
and
push
xchg
xchg
and
sbb
dec
add
loope
incl
out
xor
cmp
cmp
dec
mov
adc
dec
fcompl
cltd
in
mov
testb
inc
outsb
sbbb
and
aaa
cmpb
cmp
cmpsl
fwait
push
mov
xchg
out
dec
mov
aas
pop
loope
lods
inc
insb
out
push
arpl
mov
inc
mov
pop
js
sbb
cltd
shlb
xor
cmpsb
xor
cmp
xor
lahf
sti
leave
lahf
shll
xor
mov
bnd
adc
xor
lahf
dec
rclb
jmp
inc
divb
lods
adc
inc
or
repnz
xchg
lock
enter
jle
mov
cmp
pop
loope
push
movsl
ss
pop
jno
pushf
xor
cltd
into
mov
add
push
rcrl
adc
inc
fnsave
leave
decl
mov
and
dec
pop
inc
inc
repnz
stos
mov
jb
int3
pop
jg
or
push
push
stos
dec
push
pop
xor
and
cwtl
je
out
xchg
push
jo
ss
push
xchg
dec
mov
addr16
aam
push
int3
cs
sub
imul
or
pop
mov
or
ljmp
mov
packsswb
leave
sti
xor
mov
out
dec
jge
pusha
push
jp
push
and
enter
inc
or
nop
lock
push
lret
dec
mov
jae
and
dec
add
mov
outsl
jle
push
push
xchg
mov
repz
sub
loop
idivl
push
adc
mov
movntps
or
xchg
mov
sub
data16
js
xor
add
lret
call
ror
jmp
in
xchg
push
mov
push
cwtl
mov
cmp
jl
pushf
cmp
push
sbb
pop
adc
xchg
and
movsb
into
inc
aas
sahf
scas
lods
es
push
mov
cli
scas
insb
icebp
jb
add
sub
jb
lret
js
jnp
out
ss
lods
mov
add
adc
dec
lds
mov
clc
test
push
adcl
jbe
sbb
or
test
pop
xchg
cli
pop
movsl
aas
mov
fbld
imul
adc
pushf
rorl
add
std
pop
jns
ret
xchg
shrl
push
je
add
cltd
dec
push
insb
ret
into
cmp
xchg
mov
cmp
cltd
rcrb
out
out
movsl
mov
xchg
lret
cmc
inc
inc
dec
outsb
sbb
push
mov
jno
mov
inc
addl
sbb
dec
jne
mov
push
push
cwtl
add
lods
or
mov
scas
jb
lds
and
cltd
add
rclb
out
insl
pop
lahf
test
pusha
dec
cwtl
dec
xor
test
sbb
cmpsb
cmpsb
cltd
out
ret
je
add
mov
pop
fisttps
jp
shrb
pop
and
daa
lret
cmp
fs
ljmp
outsl
inc
jne
cmp
cmp
sub
push
xlat
inc
ret
mov
lods
shl
mov
cmp
cmpb
fwait
lret
cmpsl
das
xlat
shrl
mov
adc
pop
loopne
fisttps
xchg
mov
jo
int
divb
popf
xor
imul
pop
xor
shr
shrb
data16
or
cmpsb
rcll
stos
les
ficoml
loop
aas
arpl
mov
ret
divb
inc
adcb
orb
mov
inc
aam
rcrb
stos
insb
push
add
imull
fs
xchg
xor
pop
fwait
sub
add
shrb
movsb
das
fstpt
jp
cmp
addr16
dec
mov
out
lahf
and
xlat
mov
xorl
push
cmpsl
dec
bound
aas
es
insb
adc
xchg
scas
shlb
add
add
leave
les
pop
jmp
dec
sbb
sub
and
mov
cmpsl
pop
mov
cmc
mov
dec
mov
xlat
loope
mov
sbb
sarb
rorb
push
mov
fnsave
inc
call
pop
mov
inc
jb
xor
in
fistl
andl
outsl
test
aam
ret
or
sti
pushf
push
push
out
jb
mov
jge
sub
pusha
pusha
sub
lds
js
xchg
mov
icebp
adc
and
push
fwait
sbb
push
shr
push
dec
leave
push
jle
or
in
les
mov
ja
faddl
negb
or
push
fldt
icebp
aad
rcll
cltd
sysenter
mov
inc
mov
push
sbb
fwait
xchg
scas
mov
sbb
aaa
xor
add
adcl
mov
ljmp
ret
lret
rsqrtps
imul
repz
adc
iret
stos
or
sbb
pop
aas
jns
lods
hlt
push
cmpsl
shrl
mov
rclb
sub
aaa
jmp
or
xchg
cmp
in
cs
sbb
cmp
dec
mov
adc
scas
test
ljmp
rolb
jmp
das
ja
mov
add
pop
fdivs
daa
outsb
les
dec
aaa
inc
sahf
in
mov
or
jne
sarl
popf
fwait
mov
popf
rorb
cs
sarl
insl
pusha
lret
jmp
jae
inc
fstl
fidivs
jg
gs
cli
hlt
fcomi
stos
jp
push
mov
aam
pop
inc
cmp
into
hlt
leave
popf
push
leave
ds
lods
dec
cmpsb
sbb
cwtl
sub
inc
xchg
popa
dec
or
ljmp
das
adc
movsl
and
fwait
inc
in
pop
push
mov
adc
and
push
sti
xchg
ljmp
sbb
sub
pop
and
scas
stos
repnz
and
jns
sti
xor
test
or
shl
mul
cmpsl
pop
mov
jb
loope
pushf
ret
pop
loope
cmpsl
movsl
sub
addr16
test
mov
ds
lods
sbb
add
lcall
movsl
aaa
mov
inc
ficoms
sbb
mov
scas
divb
aas
fs
aaa
cmp
mov
aam
mov
fstps
out
mov
mov
out
sbb
test
adc
in
es
jle
cli
inc
pop
insb
mov
mov
jo
cli
push
ljmp
adcl
icebp
lds
das
mov
stos
ret
pushf
mov
in
xchg
mov
pop
out
out
faddp
and
leave
aas
fstl
lock
xlat
js
add
mov
adc
int3
stos
loop
adc
loopne
dec
sub
aaa
int3
fisubrl
mov
push
push
xchg
xor
dec
in
push
cs
push
adc
lock
fnsave
iret
cmp
repz
add
or
sbb
or
shrl
mov
jmp
stc
dec
lret
pop
jl
push
or
shll
out
push
into
cpuid
push
ficoml
lret
fs
mov
inc
xor
idivl
sub
gs
jmp
call
and
lea
cli
lret
mov
add
push
cmp
mov
inc
mov
ja
fwait
movsl
sub
pop
call
je
push
test
xor
push
sahf
mov
jp
mov
gs
pop
das
push
shrb
sub
test
ljmp
clc
mov
pop
jnp
fstps
fsub
jge
jb
call
cmpsl
jo
test
or
jbe
xor
mov
lahf
mov
test
dec
aas
hlt
jmp
movsb
push
sbb
sub
stos
inc
imul
inc
fdivrl
xchg
in
popf
jae
xor
xor
cmpsb
mov
ja
arpl
in
cmc
incb
ss
mov
add
pop
lods
roll
loope
xor
test
fs
fstps
shlw
mov
sbb
sbb
pushf
lds
xor
mov
les
std
jbe
dec
mov
and
xchg
cmp
jmp
lock
lret
mov
loopne
mov
stos
js
repz
decb
mov
movsl
roll
clc
push
in
imul
repnz
mov
jnp
and
popf
push
movsl
ja
cltd
jno
cld
je
mov
or
xchg
lods
movsl
push
pop
push
lock
jmp
mov
dec
jle
lcall
push
cmpsb
lret
cli
lods
icebp
jae
push
dec
loopne
fiaddl
xor
les
xor
cltd
push
jl
and
test
mov
sahf
scas
jp
dec
push
clc
jge
xor
mov
xchg
inc
pop
mov
jge
jmp
mov
mov
stos
es
aam
sahf
fsubrl
cmpsb
mov
es
out
push
mov
ds
das
jecxz
lea
rorl
xchg
mov
cmp
mov
xlat
jmp
mov
cmpsb
jmp
sub
sub
into
or
leave
mov
push
xchg
test
jmp
rcrl
rcll
pop
scas
out
cli
push
addb
sti
mov
movsl
mov
xchg
jns
les
popf
inc
das
cli
shl
xchg
add
nop
repz
enter
imul
pop
sub
mov
add
sti
je
fld
movsl
pop
ss
jb
das
sbb
std
enter
rcl
sbbl
push
sbb
push
mov
mov
fs
inc
repz
sbbb
add
out
repz
push
xchg
psrld
jl
add
orl
xorb
sahf
dec
and
enter
das
jmp
int
mov
adc
pop
enter
aam
test
sbb
push
and
loop
lea
subb
int3
ds
cltd
cmp
cltd
or
int
loope
dec
sbb
ficoml
inc
mov
data16
inc
xlat
jge
jae
dec
test
scas
out
jnp
lcall
mov
rcr
adc
lds
pusha
aas
in
push
xchg
dec
ret
xchg
jmp
ljmp
and
or
jge
jecxz
dec
jecxz
test
jle
imul
lods
mov
sahf
cmc
mov
shrl
cwtl
inc
in
xchg
or
iret
popa
push
push
push
sub
push
pop
sbb
addr16
std
push
xchg
dec
addl
pop
addr16
push
jne
repnz
pop
xor
fldl
arpl
hlt
mov
xor
lods
adc
mov
xlat
out
push
in
mov
dec
dec
enter
dec
jp
fldt
jge
stos
in
popa
inc
mov
sub
pop
jno
pop
ret
test
inc
mov
shll
xor
pop
dec
pushf
repz
popa
or
push
stos
stc
das
adc
movsb
pop
cmc
lods
or
in
push
movsb
pop
xlat
push
cmp
shrb
dec
adc
push
ss
mov
dec
cmc
pushf
aam
out
mov
push
adcb
inc
mov
jns
sti
les
jnp
mov
add
sbb
sti
insb
fs
repz
imul
mov
rclb
aad
pop
push
shll
push
in
xchg
xor
popf
add
mov
iret
movsl
jl
ficoml
aaa
mov
repz
and
push
lock
push
sahf
xor
mov
mov
pusha
mov
das
cmpsb
push
mov
xor
stos
dec
mov
mov
in
jns
pop
inc
sbb
jnp
or
cmp
pop
aas
xor
jl
sbb
push
dec
mov
imul
xchg
dec
fwait
aaa
cltd
mov
fldenv
in
push
into
jb
add
jmp
xchg
add
aam
adc
cmc
cmpsb
movsl
or
jae
or
lods
pop
pop
mov
jmp
xor
mov
fistpll
xchg
std
aad
lods
fwait
es
popa
lahf
sti
cs
mov
mov
ss
push
int3
jae
mov
xchg
or
shlb
cltd
std
ret
test
pushf
jmp
xchg
xchg
dec
sbb
outsb
nop
arpl
xchg
movl
repnz
push
sbb
pop
mulb
sbb
mov
dec
mov
cmpsl
fwait
sbb
lret
imul
out
or
cli
jne
sub
inc
xchg
cli
cmp
movb
sub
and
jge
jmp
cmp
das
fidivl
in
mov
ret
or
hlt
mov
int
mov
push
sbb
adc
popf
rcll
shlb
jmp
cld
and
inc
cltd
fistpll
icebp
add
cmp
xchg
mov
xor
pop
cmpl
lock
adc
xor
int
mov
fs
out
add
cmpsl
and
mov
negl
test
mov
sti
in
dec
fstpl
jno
xlat
and
mov
faddp
decl
mov
loop
sahf
les
mull
dec
mov
aaa
jle
mov
repnz
dec
je
mov
and
dec
fucomp
jbe
loop
pop
mov
aam
fst
jbe
pop
hlt
lcall
andl
push
int3
pop
pop
sbb
sbb
xchg
mov
push
insl
adc
cmp
add
and
jne
cmp
xchg
in
pop
lret
xor
sub
lahf
loopne
mov
ja
pop
sahf
mov
fmuls
cmp
sti
into
mov
dec
leave
xchg
mov
mov
dec
gs
sub
cmp
xor
sub
xlat
jmp
adc
scas
movsb
xchg
lcall
mov
sarl
int3
lods
loop
aaa
rcrl
insb
iret
sti
mov
dec
mov
insb
xor
cmc
mov
push
sub
xchg
adcl
inc
es
cmp
roll
and
dec
clc
dec
outsb
push
push
fcomi
divb
test
sbb
xchg
xor
rol
cld
ljmp
sti
sub
xor
jo
sbb
jo
addr16
scas
dec
decb
mov
ret
lods
in
mov
shll
insl
ss
push
mov
xorb
xor
mov
sub
mov
ror
push
push
fwait
test
push
sbb
sbb
xor
and
jns
cmpsl
jp
outsl
adc
mov
loop
or
insl
shll
mov
les
lods
popf
or
pop
pop
adc
stos
jle
inc
in
pushf
mov
ss
into
dec
arpl
mov
sub
sbb
dec
sub
and
dec
enter
xor
enter
movsb
out
mov
into
leave
imul
mov
adc
fnsave
loope
jge
add
ds
mov
adc
mov
and
inc
hlt
cmpl
rorb
imul
imul
in
lcall
push
stos
sub
mov
inc
push
imul
cmc
cmp
cli
pusha
fimuls
sub
jge
push
pushf
xchg
dec
mov
aaa
test
dec
ror
pop
xchg
mov
dec
div
mov
int3
mov
fimull
mov
push
mov
addr16
ret
clc
lock
sub
repz
lock
stos
jb
jmp
fcmovu
sub
repnz
outsl
into
or
int
enter
pop
mov
outsl
shlb
lahf
dec
sbb
push
daa
cmpsb
xor
and
flds
xchg
mov
sbb
in
jg
inc
jle
mov
arpl
repz
xlat
lahf
dec
inc
mov
scas
icebp
jbe
and
pop
shll
xchg
sub
xor
scas
cmpsb
leave
dec
andb
mov
or
jnp
pop
test
and
or
pop
repz
jae
rolb
xchg
in
push
rorl
or
scas
popf
popf
adc
pop
push
aas
mov
bound
stos
or
nop
pop
mov
pop
js
addr16
xchg
and
clc
rolb
dec
sbb
in
jns
cltd
jne
cltd
fisttps
dec
mov
mov
mov
mov
arpl
xchg
pop
pop
sbb
mov
gs
jb
lahf
push
nop
cld
mov
pop
enter
scas
fninit
stos
movsl
pop
adc
dec
cmpsb
jecxz
dec
dec
es
ss
hlt
outsl
adc
popf
mov
xchg
sahf
sbb
mov
in
adc
shrb
ljmp
mov
push
out
pop
push
sbb
pop
pop
ret
and
xlat
jg
dec
fidivl
mov
xchg
cmpsb
aas
es
daa
imul
sbb
push
les
mov
mov
sbb
and
loop
cmp
scas
adc
outsb
or
fwait
mov
add
inc
sbb
popf
inc
inc
add
inc
fisubs
mov
cmpsb
xchg
inc
add
out
pop
jbe
mov
outsl
xchg
jb
jecxz
stc
cwtl
jns
mov
mov
pop
mov
cmp
ja
mov
jno
add
add
mov
js
mov
jl
dec
scas
mov
loopne
fsqrt
repz
in
jne
filds
out
adc
xchg
xrelease
sub
mov
xor
pushf
mov
addr16
sbb
js
adc
xchg
pop
out
sahf
sbb
inc
xchg
xchg
push
inc
les
or
test
adc
inc
movsb
inc
cmp
sub
xlat
ljmp
xchg
mov
cmp
loop
cmp
sub
xor
into
outsl
and
push
sahf
fadds
lds
test
lret
push
std
into
mov
mov
dec
cmc
in
scas
and
iret
mov
cmp
sub
jnp
push
inc
or
cltd
cld
sbb
pop
add
pop
stc
push
pop
xlat
and
fdiv
inc
popf
cs
lods
jo
or
or
mov
frstor
xchg
dec
lea
xor
sbb
mov
xor
xor
lds
xor
mov
nop
cwtl
lock
or
mov
mov
sub
mov
clc
pop
pop
push
or
orl
cmc
push
push
pop
mov
mov
xor
sub
popf
sub
add
mov
fisubrl
add
ret
jle
pop
addr16
fisubl
xchg
imul
fs
cwtl
mov
add
xchg
lahf
push
jne
and
stos
pusha
and
in
jecxz
or
insb
cld
fwait
xchg
loopne
and
scas
mov
testl
int
out
or
xor
mov
sti
rolb
test
push
push
cmp
dec
xlat
xor
test
mov
fldt
push
cli
xor
or
cmp
mov
jl
add
dec
inc
mov
jbe
lock
fnstcw
push
cmpsb
and
ret
add
cld
push
mov
lds
ficoml
xor
sub
int3
or
or
ljmp
mov
pop
ret
ss
cmp
pop
push
push
mov
mov
in
aas
xchg
repz
dec
jnp
scas
cld
lea
roll
xor
lret
push
inc
das
inc
or
divb
inc
xor
xor
ljmp
push
jnp
push
test
push
dec
sbb
cmp
mov
hlt
jge
lods
fldenv
jl
or
mov
notl
in
pop
sub
cmp
inc
push
mov
xchg
inc
in
es
je
fmull
mov
pushf
inc
das
adc
pop
or
jbe
mov
int3
cmp
in
mov
push
mov
cmp
insl
adc
lcall
int3
sbb
mov
in
xor
idivl
jo
sbb
add
cwtl
jns
daa
push
je
ljmp
jb
jns
aad
mov
and
adc
mov
cmpsl
insb
scas
cwtl
add
fldt
testl
pop
pop
dec
push
and
movsb
enter
jl
push
mov
adc
or
sbb
or
mov
inc
lcall
jb
clc
mov
sub
or
push
test
pushf
pop
inc
fcoml
mov
sub
lret
imul
and
inc
arpl
hlt
mov
loop
shrl
dec
cmpsl
js
xor
or
insb
adc
pop
xchg
push
push
movl
dec
dec
sbb
stos
aaa
fmul
icebp
cli
xor
adc
xchg
incb
out
sbb
test
andb
xchg
cmp
pop
mov
or
lahf
mov
lea
aad
out
sub
sahf
mov
outsl
shrl
sahf
push
mov
push
stc
push
pop
bound
fwait
pop
xor
insl
mov
fdivs
cld
jo
loope
xor
jecxz
jl
push
and
jne
or
scas
arpl
stc
pop
out
inc
dec
mov
andb
ds
iret
leave
in
loopne
pop
mov
cmpsb
mov
sbb
mov
out
mov
into
mov
mov
pop
jno
jge
scas
push
push
sub
pop
pop
aaa
sub
iret
in
outsl
in
sub
movsl
imul
push
xchg
inc
or
ret
cmp
push
add
jle
mov
mov
sbb
out
enter
sub
adc
xor
inc
cmpsb
rcl
push
mov
jge
cmp
mov
xchg
mov
or
sahf
or
adc
lret
cwtl
sub
lods
pop
lcall
fadds
inc
mov
or
cltd
pop
mov
sbb
cmp
fsubl
cmpb
xor
jp
aas
stc
stos
clc
aas
shrl
jb
xor
xor
adc
add
dec
dec
jbe
or
in
sti
fstpt
ljmp
imul
shl
cmp
xchg
out
std
test
fstpl
cld
xchg
out
adc
mov
aas
cmp
push
cs
push
jl
imul
dec
push
xlat
cmp
xor
lret
and
movsl
push
div
aaa
xorb
xchg
xlat
sbb
jp
jb
orb
std
insl
lods
cmp
sbb
inc
xor
mov
mov
outsb
sub
pop
mov
xor
cmp
push
lahf
cld
xor
daa
pushl
clc
pop
mov
int3
loopne
rolb
insb
int
dec
in
xchg
int3
jle
mov
adc
inc
ror
push
mov
mov
or
push
mov
add
cli
sbb
daa
pop
cwtl
movb
ret
pushf
fsub
pushf
clc
out
and
cltd
xchg
pop
fwait
sub
es
shlb
cld
mov
ljmp
push
fnstsw
and
sub
cmp
push
loopne
jmp
cmp
mov
pop
add
leave
inc
or
xchg
shlb
mov
inc
lods
adc
ja
push
jle
das
mov
cld
insb
push
cmpsb
push
mov
jnp
and
pushf
cmp
in
das
sub
daa
andl
nop
mov
or
inc
aas
jns
jns
and
mov
rorl
xchg
faddl
mov
jge
call
mov
cld
outsl
cs
pop
movsb
movsb
inc
mov
ss
pop
data16
rorb
loopne
xor
cmp
aas
int3
sub
fs
jb
xchg
xor
and
mov
xchg
lock
ror
fcmovnu
dec
lret
sub
mov
inc
in
cmp
sub
xchg
out
ret
cmp
add
add
insb
mov
jle
ucomiss
adc
cmc
or
cltd
mov
cwtl
leave
repz
mov
shrb
sbb
outsb
clc
dec
and
add
pop
push
jo
les
andl
jno
pushf
lock
xchg
cmp
enter
jno
and
cs
mov
outsb
push
mov
mov
mov
pop
fmull
jecxz
ffreep
xchg
clc
push
fnstsw
insl
stos
negl
xchg
add
xchg
add
jb
cmp
std
bound
sub
cmp
adc
fisttpl
jb,pn
xchg
lods
nop
xor
sbb
xchg
adc
lret
hlt
adc
jno
and
ss
daa
sub
xchg
jae
ficoml
lds
sbb
shll
lea
out
sbb
mov
mov
out
cmpsb
sub
dec
lcall
sub
or
push
fsubs
cli
mov
mov
push
and
data16
cmpsl
mov
sbb
in
jecxz
inc
outsl
mov
gs
or
mov
add
dec
sub
push
imul
mov
xchg
enter
jb
ret
pop
fcoms
or
adc
add
pop
push
xchg
arpl
push
lahf
inc
ljmp
mov
nop
jecxz
add
xchg
lret
xchg
pop
mov
jg
add
xor
and
or
sbb
mov
scas
testb
sti
out
jge
popa
jo
mov
push
repz
sub
jl
jno
ljmp
inc
stos
outsb
mull
or
jo
push
je
mov
movsl
cmpsl
cmp
into
mov
mov
shrb
testb
rclb
mov
add
inc
inc
ds
sub
test
adc
test
adc
add
test
shll
jecxz
pop
mov
rep
push
add
lret
dec
xor
aaa
pop
orb
sbb
pop
mov
mov
fcompl
aam
ljmp
popa
dec
xor
adc
bound
push
test
push
dec
xchg
pop
pop
fistpl
enter
xor
sub
popf
jmp
jns
push
outsb
inc
xchg
aam
sub
xor
repnz
lahf
sbb
dec
dec
add
iret
mov
adc
jg
popa
test
or
ljmp
test
push
xor
sub
sub
in
out
aaa
pop
pop
pop
mov
lock
or
cmpl
or
push
or
pop
add
fstps
in
cs
mov
add
imul
je
ss
mov
lea
pop
mov
out
inc
sub
xchg
pop
shlb
xor
dec
sub
mov
xchg
stos
push
das
pop
cltd
cmpl
insl
mov
cmp
ret
lock
in
add
xchg
xchg
das
mov
loope
enter
lahf
xchg
movsb
inc
loope
dec
adc
xchg
sbb
pop
pop
aad
cmpsl
sbb
xchg
adcl
movsb
xchg
jp
xor
mov
pop
aaa
bswap
lret
mov
movsb
mov
jge
xchg
inc
insl
push
leave
shll
arpl
mov
add
push
push
add
push
idivl
movsl
mov
inc
neg
add
stos
adc
mov
lcall
pop
repz
jp
or
out
insl
xchg
push
dec
inc
sti
loopne
into
jne
cmp
test
cmp
pop
mov
jo
xor
xor
outsb
push
jnp
cli
loop
jo
push
repz
movsl
adc
out
jnp
cmc
mov
and
jmp
das
ror
sbb
out
outsl
jg
fistl
ss
pusha
jo
xchg
xchg
jb
dec
sub
cwtl
or
and
pop
ljmp
test
rcr
leave
jmp
mov
mov
in
scas
add
inc
movsb
test
xchg
pop
arpl
fmuls
pusha
dec
push
jns
fldenv
loope
xor
cmp
inc
adc
loope
cmp
enter
cmp
sub
push
or
inc
sbb
aad
mov
cmp
inc
mov
aam
nop
mov
cmp
lcall
push
dec
imul
sub
or
inc
and
mov
ss
das
jns
pop
add
sbb
push
shlb
add
xlat
jnp
mov
jecxz
scas
add
xchg
push
cmp
mov
push
jecxz
ja
cmp
cld
mov
xchg
icebp
test
jno
repnz
ret
lcall
mov
scas
mov
pop
ljmp
and
shr
inc
fmull
mov
out
addr16
xchg
imul
adc
jnp
cmp
xchg
lahf
pop
and
sbb
fildl
stos
xor
sti
inc
shr
pop
or
xchg
or
push
icebp
xor
cmp
gs
in
cmp
call
roll
lret
or
ljmp
repnz
sahf
jae
movsb
push
or
adc
test
mov
pusha
outsb
das
je
xchg
decl
cs
pop
lret
sub
stos
push
fcom
repz
push
mov
xchg
ret
jnp
push
not
adc
fistpll
mov
scas
and
xorl
jle
scas
inc
jbe
cmpsb
jl
cmp
fldt
mov
cmpsl
addl
repnz
loop
rolb
xchg
mov
fiaddl
movsl
inc
les
cmpsb
stos
push
fbld
into
mov
fs
bound
xor
pop
js
fadd
push
xor
sarl
lock
fstpt
cmpsb
xor
int3
xor
jo
mov
mov
pop
call
loope
pop
mov
mov
jbe
jnp
stos
adc
jb
push
cmp
cmpb
ja
test
mov
xchg
test
pop
push
dec
fldcw
fistps
or
inc
pop
inc
adc
fstl
jne
sarl
sub
add
xor
lock
inc
add
mov
lret
shll
in
fildll
mov
lahf
test
add
jge
mov
mov
dec
shlb
aad
insl
cmpsb
jecxz
out
dec
push
pop
dec
mov
xchg
roll
mov
xchg
das
pop
dec
dec
xor
sub
hlt
pop
int3
aad
mov
iret
sub
add
fsubl
cmpsl
pop
loopne
dec
ss
mov
sub
dec
pop
or
arpl
je
jmp
add
add
inc
fxch
dec
pop
enter
push
sti
cwtl
fdiv
fs
jns
dec
js
sub
mov
daa
sbb
mov
sub
mov
pop
int3
xchg
xlat
mov
mov
or
sahf
xchg
in
and
pop
sbb
sbb
adc
sbb
mov
jno
add
sbb
repz
mov
in
les
xchg
into
arpl
mov
clc
sub
mov
mov
inc
imul
xor
xlat
xor
push
and
hlt
or
xor
subl
rolb
push
lahf
sub
cwtl
int3
add
or
rorl
xchg
popf
lea
xchg
lcall
cltd
xchg
pop
xchg
jno
adc
push
into
xchg
aas
rorl
test
mov
dec
mov
mov
push
mov
stc
imul
push
test
mov
xor
enter
adc
cmpl
jge
cmpsl
cwtl
subb
push
dec
sbb
sar
and
sbb
add
hlt
rcrb
xchg
sub
mov
push
in
sbb
add
loop
int3
hlt
sbb
std
popl
push
jb
pop
cmpsl
pop
cltd
dec
stc
add
pop
fnstenv
adc
dec
mov
inc
ljmp
sub
mov
jle
jmp
or
lock
cmp
in
int
jo
add
stos
cmp
push
push
pusha
mov
repz
cwtl
ljmp
rorb
push
push
scas
add
sub
dec
lret
addl
pop
cmp
xchg
mov
divl
movsl
rclb
sbb
outsl
aaa
out
shrl
loopne
cld
pop
mov
rcr
ja
insl
mov
mov
inc
test
shlb
stos
test
mov
sbb
mov
outsb
add
and
pop
mov
mov
add
icebp
pop
sub
sbb
rcrl
dec
test
sub
clc
fimuls
pop
repnz
pop
sbbb
daa
jno
inc
aam
sbb
or
push
cmp
xchg
je
cltd
xor
stc
test
popa
mov
inc
mov
clc
and
mov
ja
push
xchg
popf
popf
jae
je
push
mov
insb
mov
data16
adc
mov
xor
inc
dec
push
jmp
xchg
jmp
lahf
ret
or
xor
ret
cmc
or
or
pop
inc
add
and
push
test
addr16
dec
icebp
mov
mov
inc
xchg
pop
adc
sub
xor
add
sub
add
dec
mov
xchg
leave
aas
jae
cmp
pusha
xchg
mov
into
push
pop
or
mov
out
add
in
addr16
lods
stos
leave
scas
adc
push
rcrl
addr16
cwtl
enter
inc
or
xchg
mov
push
dec
xlat
xor
xorl
cmp
mov
xor
jp
fistpll
sar
cld
jb
xchg
adc
int3
mov
inc
jno
ja
subl
push
dec
pop
xchg
xchg
xchg
stos
idivl
call
pushf
fsts
in
mov
and
and
mov
enter
pop
inc
loopne
and
jbe
cmp
dec
clc
pop
lret
hlt
jb
and
addr16
int
push
add
add
mov
test
pusha
ljmp
imul
mov
push
sbb
jg
lret
jns
cs
int3
in
xchg
rolb
ljmp
mov
rcr
adc
xchg
sub
adc
dec
and
fistpl
mov
xchg
push
outsl
pusha
stos
les
aas
pusha
outsl
rcrb
or
inc
stc
and
out
jnp
lock
call
scas
mov
jl
sub
mov
ja
adcb
jmp
aas
mov
inc
es
jmp
xchg
jl
xchg
insb
push
out
pop
div
xchg
xchg
cmp
fs
xor
push
xor
mov
xor
outsl
out
enter
insb
lods
fnstenv
shlb
lcall
mov
sub
int3
movsl
in
fwait
lret
jecxz
in
or
je
lock
dec
cwtl
out
mov
iret
mov
sub
addr16
xchg
pop
outsb
pop
inc
cmp
pop
jle
inc
jg
adc
out
push
adcl
mov
popf
lret
das
mov
or
aaa
add
into
lcall
push
scas
push
popf
xchg
push
es
sub
mov
xor
push
testl
aaa
arpl
mov
inc
icebp
lock
push
and
scas
and
call
popf
aad
sbb
sub
repnz
pop
cs
sti
inc
sahf
jns
pusha
xor
jmp
les
mov
clc
or
mov
fucom
sub
adc
in
mov
lahf
inc
fldenv
shlb
lock
pop
cmp
sbb
inc
sub
fidivrl
mov
adc
dec
mov
fucom
mov
jl
outsb
test
rclb
mov
push
lret
movsl
xchg
jecxz
add
inc
xor
fistpll
test
and
mov
ja
loope
gs
xcrypt-ctr
cmpsl
pop
push
mov
int3
fldl
adc
shrb
mov
or
setle
cmp
push
or
mov
pop
sbb
pop
test
out
xchg
pop
loopne
mov
pop
xor
mov
popa
sbb
scas
jae
pop
stos
jmp
stc
fcomi
inc
or
inc
aaa
les
arpl
es
pop
clc
bound
dec
dec
mov
es
xor
xacquire
mov
and
pop
mov
inc
push
fiaddl
jecxz
scas
icebp
xchg
test
je
pop
push
or
pop
jmp
push
pushf
lea
dec
adc
push
stos
xchg
ffreep
and
and
outsb
ja
dec
cltd
xor
int
dec
and
in
push
mov
push
jge
les
aad
in
add
or
pop
loope
push
mov
shrl
into
xor
push
insl
xor
push
dec
jno
sahf
shlb
push
inc
test
sbb
inc
inc
jge
adc
pop
inc
iret
sbbb
inc
icebp
lahf
ror
inc
fidivl
xchg
xchg
popf
jle
dec
mov
push
sbb
repz
inc
fcompl
jp
jp
mov
or
es
pop
jne
or
ja
das
leave
fdiv
push
fwait
cmp
xor
jns
icebp
sbb
stos
add
or
or
imul
pusha
cltd
stc
mov
js
bswap
sbb
mov
leave
and
jmp
adc
sti
mov
fwait
or
mov
fwait
sub
cmp
xor
sbb
mov
cmp
jecxz
dec
cs
xchg
fcompl
push
xor
fisttpl
adc
mov
popa
cmp
clc
mov
cs
aad
rcl
add
jmp
bound
dec
and
sahf
or
inc
insl
fisubrl
cli
cltd
roll
shrb
add
push
adc
sub
mov
xor
test
adc
xor
frstor
scas
cmpsb
outsl
in
or
ja
dec
sbb
imul
push
jmp
cmp
cmpb
xorl
sbb
jb
outsb
xchg
out
jb
sbb
movl
cld
fdivr
mov
lret
or
jge
add
and
in
push
and
addr16
fisubrs
jb
or
mov
and
xchg
sub
jge
and
shll
xchg
sbb
adc
test
mov
dec
test
fistps
sbb
test
cmpsl
popa
repz
ja
cmp
les
out
fs
xchg
mov
prefetch
or
dec
jnp
ret
cltd
iret
mov
daa
pop
mov
or
add
in
or
lret
icebp
repnz
cmp
rorl
aad
out
push
xchg
mov
or
jg
insb
fldl
or
mov
das
ljmp
jp
cld
sbb
push
rorl
or
imulb
push
roll
arpl
xchg
push
orl
push
fwait
sbb
cmp
int3
das
iret
cltd
adc
leave
orl
stc
in
in
sub
js
jp
xor
mov
pop
inc
dec
pop
mov
flds
rolb
adc
fidivrs
push
adc
sbb
mov
das
out
les
das
imul
mov
jns
xchg
andl
jle
sbb
push
jmp
mov
sti
inc
mov
fistps
inc
out
in
out
push
insl
push
in
aaa
cmp
shlb
jp
pop
mov
adc
cmp
or
and
xor
repz
loope
das
lahf
cwtl
lret
fs
aas
data16
rcrl
xor
stc
insb
out
inc
or
xchg
int3
mov
xlat
mov
lock
enter
loop
inc
mov
jle
mov
push
mull
lods
adc
pop
ja
mov
sub
into
push
pop
mov
call
sub
and
mov
movsb
pop
hlt
in
fldl
push
or
repnz
cmp
push
popa
and
jmp
push
xor
xor
mov
pop
pop
and
sbb
sub
push
add
mov
test
add
cmp
xor
lcall
daa
imul
jecxz
dec
rcl
shlb
mov
cs
and
push
out
roll
pop
add
lahf
in
mov
js
xchg
sub
dec
cld
jns
outsl
in
fsubl
addr16
into
jne
or
loopne
das
mov
sbb
mov
mov
sbb
or
inc
ret
xchg
pop
in
jae
ficomps
sub
add
repz
iret
outsb
fsubs
aaa
out
dec
jno
insb
pop
and
std
or
sbb
arpl
inc
imul
inc
ja
outsb
and
mov
mov
lea
push
lods
push
push
insl
or
into
xor
pop
leave
mov
xchg
jmp
sub
pusha
test
pop
outsl
push
xchg
and
mov
xor
popl
mov
cs
push
nop
adc
loop
lock
sar
xchg
jo
orb
mov
jge
fnsave
faddl
mov
scas
mov
leave
adcb
aam
jge
ret
ljmp
adc
ret
sub
cmpsl
add
ja
out
push
fcoms
push
pop
add
push
pusha
andl
icebp
scas
or
out
ljmp
enter
or
sub
push
adc
adc
xchg
in
sub
sbb
lcall
out
cmp
sub
ficompl
mov
pop
adc
negl
add
in
aam
mov
icebp
pop
pop
ss
dec
lret
jnp
loope
inc
jg
cmpsb
fidivl
cmp
cli
fadds
push
jge
xchg
jo
adc
imul
test
add
shr
cmp
jo
sarl
mov
rcr
clc
and
or
in
cmpsb
out
cmp
xor
loop
inc
push
jb
imul
imul
push
lret
loope
outsb
add
pop
ret
sbb
loop,pn
mov
push
or
mov
push
mov
ss
push
sub
dec
or
ljmp
shl
mov
jnp
mov
and
xchg
lea
push
inc
imul
pop
push
push
or
fisttpl
mov
in
ss
and
test
xchg
xchg
rorb
sub
xchg
imul
mov
cs
stos
mov
sti
mov
flds
cmp
adc
mov
cmp
pop
adc
lods
inc
mov
add
aas
sbb
inc
push
imul
icebp
sub
ss
or
mov
and
jp
inc
add
inc
pushf
inc
sub
notb
pop
arpl
arpl
or
xchg
pop
sub
mov
cmc
jne
das
xor
adc
in
mov
mov
cmp
xor
hlt
scas
fistps
inc
aaa
int3
leave
xchg
and
push
fisubrs
outsl
cmp
and
rcll
push
xorl
daa
cmpsl
mov
aam
adc
cmp
push
dec
xchg
sbb
ljmp
inc
mov
loope
lret
arpl
cmp
int
adc
xchg
lods
leave
dec
nop
jns
and
sub
sub
dec
repnz
cmp
mov
cli
jne
jle
xor
lods
adc
ror
cmpsb
mov
jbe
xchg
fstpl
mov
sub
idivb
cmp
iret
push
pushf
insb
jb
lret
xor
xor
or
xchg
jns
mov
add
lods
dec
sub
repz
ljmp
mov
adc
add
push
sub
dec
jmp
mov
in
sbb
xchg
cmp
jle
xor
add
dec
push
xor
dec
fwait
ss
pop
mov
sbb
insl
and
push
push
imul
aad
test
or
mov
sub
sbb
mov
stos
xor
into
sbb
inc
sub
stc
insb
add
outsb
ficoml
pop
cmp
mov
xchg
pop
or
outsl
fwait
ljmp
inc
sub
mov
aas
mov
cmp
cltd
inc
in
and
mov
cmpsb
sbb
test
rolb
mov
pop
add
adc
sbb
loop
dec
dec
add
push
xchg
mov
sub
scas
dec
shlb
rcr
jae
or
or
push
cmp
jnp
fildll
mov
sbbb
fadd
dec
shlb
aaa
not
jno
sbb
mov
adc
or
push
adc
mov
loopne
pop
int3
jmp
repz
cmp
add
and
push
jo
mov
xor
pop
repz
aad
jo
rcrl
rcll
ja
pop
xchg
hlt
in
enter
mov
cmpl
clc
pusha
xor
les
je
push
imul
mov
rcrl
adc
jmp
fcom
jne
aam
and
sub
insb
flds
mov
mov
push
xor
mov
push
dec
sub
fwait
and
jns
xor
cli
adc
cmc
hlt
cmp
dec
pop
pushf
push
cmovle
xor
dec
jp
aaa
shlb
das
lds
out
xchg
cli
fdiv
pop
inc
pushf
pop
popa
stc
divl
cmp
popf
outsb
inc
jmp
xchg
cld
test
push
push
neg
bound
aas
dec
pop
xchg
mov
push
adc
lret
pop
inc
mov
pop
shlb
imul
inc
stos
push
or
mov
add
add
mov
mov
inc
ljmp
mov
pop
mov
cmp
and
sahf
lahf
inc
inc
mov
dec
bound
sarb
mov
jno
or
sbb
jnp
cltd
dec
stc
adc
outsb
pushf
fnstsw
and
inc
fiaddl
clc
incl
imul
ret
repz
mov
pop
dec
lea
mov
or
lahf
lock
orb
test
cmp
idivb
or
fisubl
loope
movsb
mov
scas
sub
fwait
cld
stos
imul
fwait
push
sbb
cmp
mov
leave
lcall
mov
jbe
bound
mov
aam
cmc
mov
sbb
pop
imul
fidivrl
aaa
outsb
jo
mov
faddl
push
aam
adc
test
shrl
jo
shl
nop
in
adc
mov
iret
gs
jl
ja
mov
imul
shll
sub
fs
cmpsl
mov
mov
pop
lret
xor
push
cmc
sub
movsb
imul
dec
das
push
push
mov
or
or
or
mov
xlat
cmp
add
adc
inc
std
mov
popa
test
shrl
fisubs
push
aas
ret
pop
pop
jb
mov
cmpsl
dec
out
call
pop
and
adc
mov
fstl
subl
test
xchg
icebp
repnz
sbb
sub
pop
mov
mov
mov
or
adc
cmpsb
sbb
mov
add
sbb
loopne
rcl
loopne
and
and
lret
dec
pop
outsl
in
sub
je
ljmp
cld
push
popf
and
mov
icebp
fdivp
dec
cmpsl
daa
lahf
jb
mov
cli
cs
inc
jle
xchg
int
push
mov
mov
fcom
sbb
sbb
jns
inc
or
xor
in
xor
jnp
in
xchg
jmp
in
int
sbb
lea
push
bswap
dec
into
push
test
pop
fisubl
dec
mov
push
mov
jp
xchg
push
mov
in
sub
inc
addr16
pop
test
and
xor
outsl
pop
xchg
or
or
and
push
add
stc
flds
repz
pushf
ret
push
inc
jnp
pop
sub
xchg
push
fwait
mov
rolb
sbb
jns
bound
paddsb
test
cmpsl
jg
enter
xor
jg
mov
out
inc
jne
inc
scas
sub
vphaddbd
push
clc
push
dec
add
call
mov
sbb
xor
or
insb
ret
fsubrs
int3
pop
jp
mov
push
mov
fiaddl
mov
push
call
add
cmpsb
loope
mov
jnp
inc
mov
into
out
mov
dec
int3
imul
outsl
lcall
dec
mov
pushf
dec
es
jecxz
dec
stc
out
in
imul
cli
mov
dec
clc
mov
dec
ja
mov
pusha
pop
adc
pop
call
fs
repz
and
jnp
bound
inc
js
pop
xor
mov
subl
mov
push
bound
cmp
fisttps
lock
das
jb
adc
inc
out
bound
mov
sub
jle
sub
mov
jecxz
or
mov
ja
dec
insb
and
add
in
add
cmc
rcrl
frstor
bound
je
mov
mov
pushf
fisttpl
bound
push
cld
insl
xor
xor
shr
mov
jp
fmulp
jecxz
lock
pop
pop
lds
fs
add
inc
lcall
cmp
jecxz
scas
out
dec
pop
sub
les
into
xchg
push
add
imul
jmp
push
xor
mov
or
les
sarl
fs
loopne
mov
fimull
cmpsb
dec
push
out
or
int
mov
cli
cmp
ds
pop
push
sub
mov
leave
jns
lret
repnz
or
inc
imul
pop
shlb
mov
insb
in
sbb
gs
inc
div
xlat
cmpsl
adcl
add
inc
push
push
mov
lds
jg
mov
jecxz
xor
xchg
mov
cmp
jns
lret
jmp
adc
and
pop
test
xorl
lods
scas
pushf
inc
lods
mov
xchg
dec
addb
dec
roll
gs
push
jnp
mov
mov
push
outsl
in
add
jmp
cs
and
mov
mov
mov
pop
pop
arpl
push
adc
testl
inc
sbb
mov
xchg
sub
inc
push
iretw
pop
out
mov
repz
sbb
adc
mov
cmp
mov
in
lock
out
pop
or
adc
loope
leave
push
daa
and
mov
iret
sbb
or
loope
shll
pop
ja
sub
mov
jno
lcall
cmp
in
dec
rcll
je
jg
ds
or
and
cmp
and
adc
imul
in
or
push
pop
std
jecxz
pop
jmp
insb
push
jg
xor
out
testb
test
push
mov
nop
mov
mov
inc
add
xchg
pusha
dec
jl
mov
repnz
or
fs
out
popf
sub
outsl
stos
std
pop
pop
jno
js
xor
add
inc
cmc
push
sarb
or
push
xchg
hlt
lret
pop
outsb
leave
push
push
dec
mov
pop
inc
mov
cmp
dec
rolb
popf
pop
cmpb
or
roll
fmuls
jo
bound
cmc
sbb
xor
loope
mov
mov
ja
idiv
outsb
sbb
mov
test
sub
movsb
leave
jno
or
mov
cli
push
popf
scas
mov
xor
mov
out
test
fxtract
pop
shrb
xchg
leave
jl
in
aaa
fiaddl
sub
sahf
movhps
mov
pop
fidivrs
sti
jno
out
movsb
and
in
jg
out
popa
lods
andl
lret
stos
xor
xorb
ljmp
in
pop
xor
in
loope
mov
dec
call
mov
xor
insl
dec
and
es
test
ss
and
je
inc
add
int
xor
adc
jbe
or
test
mov
fadd
fsubrs
pop
out
pushf
or
jo
or
push
inc
cmp
add
iret
mov
repnz
pop
dec
cli
dec
mov
push
dec
cmpsl
mov
mov
inc
adc
sub
mov
mov
xchg
inc
arpl
adc
pusha
inc
xchg
cmp
aas
jp
aas
arpl
rol
xchg
or
in
lahf
idivb
jmp
insb
aas
dec
add
and
gs
and
xchg
push
divb
fbstp
cmp
addr16
inc
inc
mov
xor
xchg
bound
or
mov
repnz
pop
iret
je
nop
sbb
push
mov
sbb
inc
in
push
pop
test
cmpsb
and
mov
mov
movsb
sub
aas
and
lret
mov
into
jg
push
stc
add
arpl
and
mov
pop
lock
cmp
sbb
aad
sbb
scas
aad
test
and
imul
repz
loopne
je
or
jl
mov
mulb
sbb
push
mov
outsl
insl
dec
adc
xchg
inc
adcb
cld
leave
jp
and
fimull
lret
push
cmp
or
popa
test
pushf
dec
stc
push
shll
push
repz
decb
xchg
loope
pop
je
jg
mov
push
addl
jecxz
jns
and
add
jb
xor
pop
mov
jecxz
lret
jmp
push
call
xchg
adcb
or
cmc
ljmp
cmp
stos
movsl
daa
das
aas
mov
pop
cmpsb
pop
xchg
ret
pop
je
icebp
or
call
fstl
repz
jge
xchg
fstl
fdivs
or
test
das
movsl
xrelease
in
mov
cltd
xchg
add
mov
xacquire
int
xchg
rcll
xor
or
sub
sub
insl
xor
test
movsb
cmpsb
jns
stc
push
fmull
jecxz
push
sbb
loope
inc
pop
mov
pop
inc
in
aam
jae
mov
fistps
mov
and
jno
xor
dec
pusha
jl
pop
push
lods
dec
sahf
dec
in
add
fmuls
outsb
xchg
mov
mov
scas
das
cmpsl
dec
xchg
dec
pushf
outsl
hlt
fstp
pushf
inc
jnp
mov
bound
popa
lods
xor
lods
test
scas
test
lahf
daa
jge
rdmsr
and
addr16
ss
mov
cmpl
stc
sbb
sbb
ja
xor
test
pop
mov
dec
dec
lods
pop
mov
mov
std
or
cli
xor
pop
arpl
push
sbb
pop
lahf
adc
mov
stos
scas
jge
pop
inc
and
nop
popf
lock
mov
mov
jne
and
pop
ljmp
in
push
pop
push
xchg
popf
pusha
or
and
inc
and
pop
add
inc
aam
xor
incb
and
mov
push
aam
fs
nop
ret
lods
lcall
fs
and
orl
pop
add
mov
mov
es
push
popf
push
enter
push
shr
jno
xor
inc
adc
enter
sbb
dec
loope
stos
xchg
sbb
jecxz
add
out
testl
stos
cld
pop
dec
adc
mov
or
dec
jo
imul
add
lcall
loope
dec
shll
jecxz
push
inc
aad
mov
data16
ss
mov
sub
fmull
filds
inc
pop
mov
jne
push
dec
out
in
and
adc
xchg
sahf
iret
xrelease
mov
shl
sbb
pusha
sbb
jp
push
test
mov
cmp
adc
icebp
shll
pavgb
jae
sbbb
jne
jmp
fstpt
shll
rorl
and
sbb
lds
sub
sarb
dec
mov
or
cmpsl
xor
xchg
jp
adc
outsl
sbb
loop
call
inc
rcrl
add
jmp
xchg
lds
data16
push
and
fsts
cmp
pop
addl
xor
inc
cmp
ror
push
aas
push
in
into
lcall
mov
inc
rolb
outsb
and
movsb
adcl
pop
and
imul
dec
mov
jp
push
out
inc
adc
in
aam
arpl
stos
int3
out
mov
xor
out
out
mov
xchg
xchg
push
inc
jbe
mov
or
or
pop
adcb
dec
fcmovb
test
and
iret
jl
jae
add
sarl
dec
les
fistps
outsl
xor
fstps
dec
enter
cld
push
aas
cmp
shlb
push
lret
cmp
mov
ja
addr16
ja
fnstenv
inc
push
mov
hlt
out
and
mov
lahf
jp
clc
mov
jne
xchg
mov
in
xchg
inc
or
fnstenv
shrb
and
xor
inc
movsl
cmp
movsl
xchg
adc
insb
inc
xchg
lods
js
xor
cs
pop
and
mov
in
rorl
jb
sbb
adc
fwait
shll
mov
iret
adc
cltd
mov
adc
inc
div
orb
cwtl
or
mov
xchg
pop
lret
push
ss
sub
adc
cmp
out
stos
pop
push
mov
in
in
outsb
cld
js
test
icebp
jle
mov
cwtl
je
cmp
push
push
add
orl
outsb
push
out
pop
unpckhps
jp
and
xchg
in
dec
insl
adc
sahf
jae
loop
jo
and
arpl
rcrb
out
push
fwait
cmp
jo
mov
nop
mov
enter
mov
test
jnp
or
fdivrl
add
fs
call
xchg
ret
in
push
xchg
loope
data16
jle
mov
push
pop
adc
js
adc
dec
gs
leave
cmpsb
mov
adc
add
adc
test
push
cli
dec
arpl
out
scas
lods
pop
adc
mov
negl
mov
sarl
mov
push
pushf
arpl
out
push
bt
pusha
mov
test
sub
lea
idiv
sub
das
pop
sub
cwtl
mov
push
pop
xchg
push
cwtl
fnstenv
rcrb
ja
hlt
aam
xor
pop
in
fbld
xor
inc
xor
or
add
xchg
inc
push
push
std
sbb
in
je
lret
fcompl
popa
in
lret
addr16
jnp
std
dec
xor
mov
push
pop
stos
sub
or
push
sub
and
sbb
stc
jl
fmuls
sub
aad
loopne
push
sbb
mov
pop
pop
int3
sahf
pusha
out
lahf
test
add
jecxz
pop
outsl
pushl
sbb
mov
popl
cmp
sahf
fsubs
adc
jb
fs
fldcw
add
fnstcw
clc
fs
jle
out
mov
push
sarl
pop
je
aad
enter
dec
lcall
fisttps
cmc
sub
and
addr16
xchg
leave
xchg
andb
insb
xchg
pop
jecxz
mov
fdivrl
cmpl
xchg
addb
jmp
and
jae
jb
sub
out
shlb
sbb
push
cli
jge
xor
push
sti
xor
pop
dec
push
pop
out
aas
jp
sahf
imul
inc
add
jl
lret
cmovb
mov
out
inc
dec
sti
bound
subb
dec
bound
or
rorb
dec
decl
cmp
dec
insl
push
xlat
adc
add
pushf
xchg
mov
push
dec
xchg
out
adc
sbb
in
and
jl
mov
adc
cmp
cmp
mov
jecxz
mov
jnp
adc
or
push
inc
push
fmull
mov
pop
adc
cmp
jg
mov
test
scas
pushf
sbbl
testb
into
add
dec
cmc
sub
sbb
out
cli
mov
sbb
adc
stc
mov
scas
cli
mov
mov
jmp
enter
clc
popa
movsl
popf
inc
outsl
xor
xor
xor
xor
dec
push
pushf
and
arpl
mov
lret
jl
sub
loopne
dec
xor
inc
arpl
adc
or
xor
gs
int3
cs
sbb
pop
roll
scas
dec
mov
dec
mov
aad
ja
rolb
sub
aad
mov
xlat
mov
pop
fucomi
pop
jb
ret
push
or
inc
subl
mov
add
pop
test
mov
out
js
push
mov
xchg
aas
jecxz
movsb
enter
inc
es
inc
cwtl
cmc
xchg
out
push
sbb
pusha
fs
jnp
jnp
adc
sbb
xor
inc
xchg
shrb
icebp
jb
push
and
aad
icebp
xchg
nop
sti
inc
shl
cmp
mov
sbb
or
pop
jbe
ss
jg
mov
xchg
xchg
dec
mov
inc
in
add
or
int
aam
or
repz
das
cmc
and
inc
sbb
scas
pop
int
mov
push
jnp
mov
mov
aaa
add
push
pop
fistpll
add
ljmp
cmp
stos
stos
sahf
daa
icebp
out
call
and
jmp
jae
add
ljmp
push
adc
cld
loop
out
push
cmp
fwait
push
pop
jns
jae
jle
jmp
adc
loopne
push
in
icebp
add
add
xchg
xchg
in
mov
jno
rolb
ja
stos
neg
xchg
pop
movsl
adc
insb
lds
sahf
mov
les
adc
cld
xchg
dec
xchg
loope
inc
cmp
add
out
and
js
cmp
fmuls
xchg
pop
adc
cltd
cmc
fisubrl
fsubl
cmp
jb
xor
prefetcht0
bound
jl
mov
cmc
xchg
movsb
loope
pop
jne
xchg
and
jae
push
jge
test
jb
fidivrs
aas
sub
mov
pop
mov
lahf
lds
sub
jno
push
adc
or
or
fldt
sahf
adc
mov
scas
mov
cld
aaa
lea
jae
jae
mov
dec
push
insb
sbb
ss
je
test
jb
cld
loope
mov
mov
add
test
push
dec
addr16
loope
inc
jbe
sub
and
mov
sub
cmc
xchg
repz
into
cmp
lock
out
aaa
dec
popf
mov
sub
xchg
and
fwait
lods
add
loopne
or
out
and
or
ja
sar
mov
or
iret
js
xchg
mov
enter
xchg
nop
xchg
xchg
xchg
adc
adc
scas
and
mov
insb
or
push
ret
and
mov
repz
pop
in
xchg
fdivl
int3
loop
or
clc
add
dec
clc
lahf
imul
pop
pop
fstps
outsl
mov
ret
ja
push
mov
mov
dec
mov
or
pop
push
fucomip
repz
incb
idivl
outsl
fsubr
and
pushf
out
pusha
cmp
cmc
lock
shrl
push
rol
mov
lea
decb
and
in
arpl
pop
or
sti
cli
addb
lcall
test
testb
or
shll
bnd
dec
xor
fld
dec
xor
ffreep
pop
fistpl
jge
push
inc
pop
movsl
sarb
mov
sbb
lahf
mov
add
pop
pop
lcall
or
jge
in
mov
sub
add
or
mov
mov
lods
cmp
mov
xor
jge
mov
loopne
mov
iret
inc
jl
and
scas
add
push
jbe
sarl
cmp
jle
mov
lea
xchg
test
jmp
xchg
shl
fidivl
das
mov
jle
sbb
mov
add
cmp
push
cmpsb
mov
cli
test
mov
cmp
test
xor
test
or
push
mov
data16
jg
or
roll
xchg
test
push
cmp
add
pop
pop
cwtl
pop
mov
lock
rcr
mov
lods
sbb
and
lret
or
xchg
outsb
imul
gs
in
sbb
or
pop
int3
leave
insb
ss
mov
aam
dec
je
scas
mov
push
jl
out
stos
hlt
add
test
cltd
clc
adc
add
sti
or
mov
mov
xor
cwtl
ficomps
dec
mov
xchg
into
xchg
pop
icebp
dec
hlt
push
repnz
sbb
pop
lds
fistpl
xor
cmc
call
xor
in
cs
mov
mov
xchg
and
adc
sub
ret
fwait
xor
mov
sbb
jbe
dec
mov
repnz
push
push
les
add
pop
les
adc
mov
add
pop
ja
ljmp
dec
lahf
mov
dec
push
push
movsb
push
int
movsb
pop
leave
mov
mov
jp
push
arpl
mov
jg
jno
sbb
jbe
ret
dec
movsb
loope
call
pop
push
pop
or
or
sub
bswap
mov
incb
incb
xor
cmp
mov
stos
dec
lret
lret
adc
sbb
fincstp
xchg
mov
dec
and
jb
cmpsl
mov
mov
lock
jns
imul
xchg
in
mov
andl
addb
inc
mov
movsb
imul
push
add
imul
mov
mov
lods
fisubl
int
movsl
and
or
je
sbb
and
mov
lahf
neg
xchg
xor
add
pop
fldenv
push
push
jmp
cmpsl
test
or
outsl
test
jmp
minps
add
subl
pop
jno
es
lahf
ret
stos
lahf
adc
scas
lods
push
fs
lea
int3
mov
loop
cmp
dec
mov
test
jbe
fisubs
dec
mov
ret
add
sbb
sbb
cmp
shrb
pusha
mov
inc
push
aas
pop
scas
push
xchg
shlb
sub
adc
daa
adcb
cmpsb
mov
dec
lret
cmp
xchg
xor
xor
test
and
cmp
ret
mov
or
mov
jp
fists
scas
jmp
incl
mov
and
test
aad
add
fs
test
add
mov
je
pop
and
loop
cmp
test
jb
mov
sub
push
jmp
or
xchg
std
js,pn
mov
cmc
inc
mov
jg
sub
cmpb
es
dec
push
jge
clc
sub
repnz
push
inc
adc
jmp
xor
jo
jg
xchg
push
movsb
pushf
inc
adc
movsl
dec
pop
cmp
daa
inc
mov
add
jle
sahf
add
adc
and
arpl
outsl
test
add
cmp
xor
lods
dec
sbb
adc
xlat
mov
pop
add
divb
jb
stc
into
fldcw
inc
out
xchg
sbb
add
sbb
mov
inc
fildll
adc
call
add
sbb
or
stc
mov
movsl
xor
out
lods
sbb
sbb
mov
aam
push
push
and
mov
adc
popf
imul
cltd
data16
insl
jl
pop
shll
sub
insl
cmp
mov
dec
test
cli
bound
cs
setne
lods
pop
adc
in
test
and
nop
and
push
dec
orb
mov
sub
jcxz
add
mov
shl
iret
sub
in
mov
xchg
add
int3
insl
ja,pt
aad
mov
test
call
push
xchg
add
mov
clc
jle
xchg
test
bound
in
adc
loope
mov
cmp
jnp
sbb
or
call
fs
popa
jne
sub
fnstsw
cmpsl
mov
fcoml
faddp
shl
pusha
mov
push
ds
jg
add
cmp
mov
adc
and
cmp
into
mov
add
hlt
mov
cmp
xor
int
mov
adc
stc
xchg
mov
sub
mov
inc
cmc
mov
sbb
xor
daa
or
sbb
cmp
xor
xor
lock
mov
mov
sbb
imul
mov
adc
call
lcall
jge
xchg
jo
call
xchg
sub
int3
mov
fidivrs
xlat
dec
into
push
out
xor
js
dec
orl
mov
adc
xor
lret
pop
das
sbb
fdiv
shrb
adc
cmp
outsl
sub
sarl
inc
and
pop
ds
mov
sub
imulb
push
enter
ja
add
mov
lods
mov
fs
mov
xchg
mov
test
adc
repz
scas
sbb
arpl
jnp
jne
push
or
xor
jge
jmp
or
or
aad
fistpl
push
jge
lods
sbb
mov
xchg
popf
xchg
js
insl
mov
bound
push
mov
ret
inc
cltd
xchg
ljmp
int3
or
stos
inc
sbb
dec
or
fldln2
scas
and
cmp
push
xchg
push
gs
loopne
cmp
les
not
sub
test
popa
fmull
int
mov
dec
xchg
sub
insl
xor
pop
jo
gs
in
mov
inc
adc
pop
adc
ljmp
adc
ret
push
fidivs
push
jg
test
aad
fsubr
xchg
lods
mov
jnp
stc
out
cmp
int3
sub
mov
xchg
jae
repz
lds
mov
push
rorb
sti
push
addr16
leave
filds
sbb
dec
ror
dec
repnz
adc
add
ljmp
sub
outsl
jns
add
sub
pop
loope
enter
outsb
shrb
mov
push
sti
jns
and
scas
inc
sbb
cmp
mov
clts
or
mov
or
jae
push
ss
ror
in
and
imul
decb
xor
cmpsb
int3
sbb
popf
repz
shr
lods
ja
adc
xchg
cwtl
add
les
es
mov
push
and
pushf
mov
mov
pusha
pop
imul
icebp
roll
cmp
jmp
fdiv
inc
lret
popa
push
inc
aad
icebp
xor
gs
xchg
test
inc
stos
pop
xor
es
cs
test
leave
test
pop
mov
sbb
popf
jg
ja
jne
jns
adc
pop
jl
jns
adc
out
lret
rcll
dec
push
adc
movsb
ljmp
cmc
test
ljmp
pop
fldln2
inc
or
xlat
mov
scas
sbb
sub
fmull
add
push
mov
test
push
mov
fldt
out
mov
adc
icebp
jo
cmpl
pop
or
or
out
add
shl
subb
add
in
dec
shll
outsb
into
mov
call
scas
aas
dec
orb
test
cmc
pop
pop
lret
push
loopne
and
push
and
sub
test
ja
push
pop
and
pop
pop
push
in
divb
loopne
roll
inc
mov
aas
mov
je
push
and
mov
mov
mov
testb
dec
test
add
ss
cltd
mov
arpl
sub
daa
push
pop
add
xchg
sub
ss
mov
add
fstpl
jge
push
clc
jg
add
xor
loope
pop
addr16
je
xchg
outsl
cmp
mov
add
pop
jmp
clc
lods
dec
rorl
sti
les
mov
mov
out
jae
push
sub
cmp
loope
stos
insl
mov
adc
popf
sub
jecxz
sbb
add
fxch
and
sbb
cmc
pop
sti
out
xchg
sbb
push
sub
xor
iret
push
ror
jmp
outsl
pop
mov
cmp
pop
inc
cmp
add
cld
lock
cmp
dec
inc
mov
leave
frstor
dec
or
xor
mov
sub
cmp
mov
inc
pop
mov
cmp
scas
mov
cs
and
addl
xor
cmp
and
xchg
or
rcrb
lods
dec
lock
sbb
jecxz
sub
jae
call
pop
jle
test
int
lret
adc
es
mov
push
pushf
sar
xchg
inc
rolb
mov
push
xor
pop
gs
es
add
mov
cmc
xorl
mov
call
outsb
mov
cmpsb
in
call
in
or
adc
jbe
andb
insl
test
movsb
fidivs
adc
mov
xor
insl
cwtl
loope
jae
mov
insb
enter
push
push
add
int3
mov
pop
fsubr
rcll
pop
sbb
push
mov
inc
movsl
mov
imul
sbb
mov
rcll
sub
cmp
pop
aam
ljmp
dec
sbb
xchg
jnp
jl
mov
sahf
cltd
pop
mov
jbe
in
or
jne
icebp
movsb
fdivrs
fnstsw
ss
out
adc
add
cmpsb
add
bound
test
push
pop
inc
xor
cmc
faddl
rolb
stos
adc
sbb
mov
xor
push
pop
dec
je
jl
inc
adc
fidivl
pop
scas
or
into
pop
lea
or
nop
cmp
cmpsl
dec
sti
cmp
pop
and
loope
fwait
xor
mov
and
adc
in
jle
jne
sahf
pop
sti
hlt
arpl
data16
pusha
and
loop
imul
ror
ffree
cmp
ret
cld
inc
mov
push
sar
push
scas
xor
lahf
add
insb
push
mov
scas
push
adc
repnz
xchg
cmpsl
dec
fildl
xchg
es
sbb
xchg
mov
test
dec
jmp
test
fisubrl
xchg
add
jle
adc
lods
pop
pop
or
push
sub
or
out
scas
ss
jg
pop
inc
js
fistpl
push
icebp
pop
test
adc
scas
mov
jnp
ja
mov
jb
mov
and
cmp
subb
fists
sbb
test
ret
iret
mov
ret
jl
pop
sti
lahf
xchg
js
push
push
dec
jnp
and
add
icebp
mov
stos
push
lcall
std
lcall
dec
sbb
xchg
mov
mov
mov
movsb
shlb
cmp
push
mov
mov
xor
mov
dec
cli
lcall
jne
pushf
sbb
or
adc
in
or
jnp
fstpl
lret
sub
push
imulb
xor
lods
mov
push
push
sbb
mov
push
mov
mov
dec
je
loopne
jno
or
sub
mov
sahf
fsubs
sub
sub
int
pop
popf
push
in
xchg
je
andb
ja
dec
mov
dec
sub
js
xchg
insl
gs
xchg
ds
movsl
out
clc
fldl
dec
or
sub
adc
in
hlt
mov
dec
and
xor
lret
mov
fisttpll
inc
std
mov
xchg
or
cld
pop
add
mov
xchg
pop
pop
pop
dec
jp
and
adc
insl
mov
pop
insl
lock
jne
test
mov
jle
xchg
mov
adc
adc
dec
xor
push
xchg
pop
xor
add
scas
fiadds
popf
sub
imul
and
inc
out
and
lds
test
pop
jecxz
jmp
jbe
or
mov
clc
xchg
xor
push
in
orl
rolb
ret
push
push
cwtl
or
sti
mov
in
pop
jnp
js
mov
jne
jg
add
mov
xchg
stos
mov
out
cmc
sub
out
push
mov
mov
clc
clc
inc
int
dec
mov
sbb
xchg
jne
and
sub
repnz
sub
or
sub
inc
int
rcr
insb
nop
cld
or
push
cmp
mov
mov
xchg
sub
ja
loop
cmp
outsb
xor
lods
out
jg
gs
adc
dec
pop
aad
dec
xchg
hlt
loope
add
adc
inc
stos
gs
testb
sti
jl
andl
adc
jp
cmovg
fwait
xorl
leave
out
into
mov
cmp
pushf
into
push
adc
adc
pop
push
jo
sub
testl
sbb
sub
insb
in
sub
lock
jo
andb
lock
jecxz
mov
push
xchg
mov
mov
test
sub
sbbl
sbb
inc
movsl
jb
cmpsb
add
xor
xor
aam
mov
mov
push
jg
inc
adc
mov
stos
xsha256
cmpsb
adc
loope
xor
adc
stc
pop
sub
push
jp
mov
cmp
inc
push
jo
lcall
push
stos
lret
inc
pop
mov
test
cmp
outsl
inc
xchg
push
lret
pop
int3
addl
icebp
sub
je
aad
loop
pushf
test
push
loope
in
pop
roll
into
pop
push
mov
mov
pop
icebp
dec
leave
pop
sub
mov
rolb
xchg
xchg
stos
inc
outsl
cld
xor
les
lcall
sub
mov
in
int
in
or
inc
inc
mov
hlt
imul
lock
pop
mov
pop
sbb
xchg
mov
adc
aaa
pop
inc
adc
xor
rcll
fnsave
jle
test
sbb
ja
jp
xchg
cmp
lds
ret
cld
inc
add
les
inc
inc
movsl
aad
adc
imul
iret
test
pop
outsl
pop
hlt
xchg
test
push
mov
gs
push
or
push
cmp
lahf
or
adc
jb
adc
imul
mov
dec
and
fcom
add
xorl
sbb
leave
pop
stos
push
sbb
or
xchg
push
stos
rcll
cmp
jb
xor
gs
jecxz
mov
mov
lcall
cmp
jbe
push
mov
cs
popa
shlb
xor
xor
insb
add
or
out
scas
test
mov
cmp
stos
xchg
push
dec
sub
jb
inc
pop
and
and
into
mov
mov
pop
dec
mov
out
cmpsb
arpl
xchg
dec
rorl
out
sbb
cmp
pop
loop
mov
inc
adc
adc
cmp
add
jns
pop
pop
inc
rclb
mov
cmpsl
pop
loop
inc
pusha
fwait
pop
or
mov
fisttpll
jne
push
jne
xchg
sbbb
insb
test
ret
test
sub
mov
sub
mov
and
jae
xchg
cli
pop
outsl
sub
pop
add
push
jo
dec
dec
aam
lods
ljmp
xor
sarl
push
popl
scas
int3
loope
repnz
scas
fildl
je
mov
sub
fcomps
xor
inc
incl
xlat
adc
bnd
xchg
add
aas
sbb
push
pop
mov
fisubrl
sub
mov
ja
push
aam
fildl
push
inc
inc
fadds
add
or
imul
inc
mov
pushf
ret
add
jb
and
push
and
or
cwtl
pop
adc
dec
xor
loope
sbb
out
cmovbe
mov
movsl
xor
xchg
jecxz
nop
scas
mov
ss
arpl
frstor
push
mov
add
and
scas
inc
mov
jae
fidivl
and
in
pop
loopne
jns
cmpsl
dec
insl
and
adc
insl
or
jo
mov
je
mov
mov
leave
jmp
jp
cmp
mov
imul
ja
lods
addr16
push
pop
jne
je
add
jno
push
cmp
inc
ja
mov
xchg
fnsave
pop
sub
hlt
jns
nop
push
and
sub
dec
mov
ret
cld
clc
jg
mov
into
rclb
sub
imul
push
inc
lcall
movsb
insl
gs
inc
aam
add
and
push
jns
sbb
fcomi
fwait
out
std
add
into
sub
test
addb
push
push
std
pop
cltd
movsl
imul
cmp
lahf
ret
jne
push
or
xor
lods
cwtl
inc
mov
mov
and
add
push
or
inc
bound
xor
mov
mov
dec
pusha
xchg
jae
sub
xchg
das
rorl
loope
adc
in
lods
ficoms
fnstenv
loop
rorb
jno
mov
mov
loop
and
movsl
das
in
sub
dec
arpl
test
cld
jle
mov
xchg
mov
into
lahf
aaa
dec
push
xchg
in
mov
pusha
xor
push
repnz
fisubl
mov
inc
sbb
mov
fistps
push
rclb
insl
dec
ja
push
sarl
insb
ret
out
mov
or
movsl
adc
cmpsl
gs
inc
orb
xchg
jmp
insb
push
ret
add
test
jno
or
jae
add
stos
xchg
push
stc
jbe
or
adc
test
sub
enter
fisubs
adc
sbb
out
test
mov
xchg
sbb
loop
jp
int
ret
or
daa
or
mov
loopne
sub
bnd
pop
aam
inc
ret
in
enter
or
in
jmp
push
stc
dec
xlat
and
test
sti
loopne
shr
in
jg
lret
xchg
fwait
inc
out
aad
mov
fistl
cmp
insl
call
repz
add
les
sbb
mov
add
pop
pop
shrl
je
dec
pop
adc
pop
xchg
pop
mov
pop
jl
lea
push
mov
xchg
fsubrs
dec
inc
bound
xchg
mov
das
test
and
shrl
aad
jge
lods
les
lds
aas
daa
jne
cmp
out
addr16
mov
and
and
out
test
xor
push
fdivs
jg
mov
xor
bound
js
pop
lcall
xchg
and
push
shll
cmp
ja
jge
xor
adc
inc
popw
mov
xchg
data16
aaa
jno
pop
pop
cmp
fdivr
add
add
notb
and
ljmp
sbb
cltd
xor
les
test
fs
dec
rcll
iret
jecxz
adc
inc
sbb
insl
inc
test
sub
stos
pop
rolb
xchg
ds
jbe
or
adcl
mov
js
cmp
hlt
pop
pop
sbb
push
std
aas
int3
aaa
push
loop
sub
xor
or
pop
iret
inc
hlt
pop
lahf
cmp
and
lret
pop
xor
fcmovnu
cmpsb
in
mov
adc
ret
xor
push
pop
mov
lea
jl
dec
cmp
test
lods
or
repnz
sbb
lods
daa
add
xchg
popa
call
insb
jmp
add
rcll
lea
push
fildll
xor
icebp
sub
sbb
pop
fwait
pop
sbb
inc
cltd
in
dec
aam
xchg
pop
iret
arpl
pop
cmp
shr
jge
add
shl
subl
enter
dec
jle
outsl
xchg
test
lock
loope
inc
in
or
movsb
inc
cmc
xchg
xchg
imul
cltd
test
fdivrs
sub
sbb
mov
aad
test
cmp
jp
dec
lods
ds
cmp
mov
cli
rorl
adcb
adc
cmp
pusha
imul
bound
into
or
mov
xchg
pop
hlt
mov
jecxz
stos
and
adc
popa
inc
imul
lods
bound
jb
lret
clc
fisubrl
mov
rolb
mov
or
stc
add
popf
xor
in
rcll
les
nop
pop
sbb
or
jecxz
je
push
pop
outsb
xchg
xchg
lret
push
jno
mov
fisttpl
movsl
mov
std
mov
inc
mov
lods
ret
inc
sahf
ja
dec
mov
and
lahf
xor
lods
shll
adc
jb
mov
out
cmpsb
add
int
je
fwait
mov
inc
adc
inc
dec
fimull
mov
or
loop
imul
int3
movsb
push
jp
inc
xor
xor
sub
mov
sahf
test
out
repnz
test
lret
dec
pop
sub
fdivs
cmp
sub
loop
mov
pop
sub
xchg
sti
push
sub
loop
sbb
adc
add
push
rorb
add
pop
pushw
cld
shr
push
sub
pop
adc
jp
dec
pop
dec
pop
xor
shr
sbb
push
push
push
jecxz
inc
cltd
mov
inc
imul
dec
ljmp
fcmovbe
jl
ss
inc
sbb
sbb
push
mov
subl
sbb
sti
dec
mov
shr
js
pop
inc
inc
out
cmc
mov
mov
jns
aaa
cmp
decb
lret
cvtps2pi
in
push
ret
xchg
lret
xchg
gs
pop
test
stos
cmpsb
insl
repz
mov
stos
xchg
js
cmp
dec
mov
cmp
sbb
push
adc
call
cmpsb
push
lods
fmul
scas
sbb
cmpsl
clc
xor
repnz
dec
mov
dec
push
jmp
enter
imul
mov
or
std
jle
ljmp
push
cs
ja
imul
aaa
rorb
pop
add
in
jbe
and
shrb
ret
fidivrs
lock
pop
add
loopne
das
cs
inc
fiadds
sub
adc
fstpl
pop
dec
xchg
testb
add
mov
xchg
mov
int
sub
and
out
out
call
jns
xlat
and
add
sti
mov
cltd
outsb
xlat
mov
mov
add
xor
aad
pop
add
and
frstor
and
aas
xor
fnstcw
nop
cmp
mov
push
jle
outsb
pop
jae
xchg
out
mov
mov
out
repnz
aad
pop
sahf
cmpsb
pop
aam
mov
mov
cmc
ja
call
mov
leave
sub
ret
sbbb
incl
enter
xchg
notl
mull
mov
cmpb
xor
gs
in
xchg
adc
jmp
dec
xchg
leave
sub
mov
pop
push
inc
ss
insb
sarl
popf
adcb
in
xlat
loopne
xchg
popa
cmpsl
out
sti
fldcw
sub
adc
or
cld
mov
fnsave
pop
sbb
pop
cmp
in
push
mov
inc
nop
nop
xchg
and
aas
pop
pop
fwait
clc
jle
jecxz
pop
imull
addr16
dec
or
je
inc
push
mov
enter
addr16
jecxz
das
gs
jnp
dec
xor
cltd
movsl
jmp
sub
std
jbe
mov
and
cmpsl
push
enter
jle
adc
out
dec
jp
push
pop
mov
push
jnp
pop
pushl
lea
jno
sub
lret
adc
iret
pop
fildl
or
outsb
les
mov
or
xor
pop
pop
mov
cltd
aam
aad
fildl
jle
cmc
xor
sti
shl
fidivrs
mov
bound
gs
adc
es
jns
mov
imul
ds
pusha
inc
mov
adc
ljmp
fisubs
sbb
jge
mov
imul
outsb
mov
pop
jbe
xor
dec
add
pushf
inc
mov
jae
xor
mov
jge
popa
dec
push
aas
test
mov
push
aaa
stc
insl
pop
fwait
xchg
jge
mov
lea
push
xor
icebp
xor
je
fs
ficoml
mov
and
lds
std
adc
pusha
jne
or
inc
inc
sbb
jecxz
aad
inc
jp
mov
mov
or
scas
aad
test
ffree
cmp
lcall
lock
jle
push
pop
jecxz
mov
add
mov
into
cmc
jle
sti
fs
pop
cmp
outsb
cmp
movsl
lods
mov
pop
push
add
adc
adc
pop
xlat
cmp
jae
pop
stos
pop
aas
ret
sub
mov
and
inc
shll
adc
or
push
push
and
lock
loope
int3
outsb
sub
sbb
pop
cwtl
fistpll
shrl
hlt
call
imul
icebp
xor
mov
aas
push
push
mov
mov
jbe
fsubl
fcomip
lcall
push
pop
lret
mov
mov
inc
call
lods
scas
enter
std
pop
pop
dec
imul
stc
mov
dec
cmp
xchg
shrl
out
and
sub
pushf
mov
mov
call
or
xchg
mov
iret
xchg
sbb
mov
aam
xchg
sbb
sti
mov
and
sahf
inc
push
popa
stos
pop
sarl
lahf
not
in
pop
fs
in
fnsave
cmp
mov
xchg
enter
or
mov
imul
enter
sti
and
xchg
inc
lret
in
mov
mov
in
in
fnstenv
repz
popa
sbb
fwait
nop
cli
shl
stos
scas
xor
xchg
and
pusha
rcll
outsl
inc
nop
fadds
push
cltd
std
jno
mov
sub
leave
clc
popa
ret
mov
call
push
out
sarl
and
xchg
popa
jge
adc
movsb
pop
mov
lahf
mov
mov
sub
jns
popa
mov
dec
jnp
clc
push
clc
fldln2
ljmp
cld
pop
xor
push
xchg
mov
cltd
xchg
mov
pop
pushf
imul
and
pop
and
cmpsl
daa
js
push
in
mov
mov
mov
xchg
fisttpll
mov
mov
mov
or
sar
and
pop
xor
dec
adc
jbe
bound
inc
test
mov
cmp
mov
insb
push
push
cli
scas
mov
out
fidivl
mov
subb
mov
jae
mov
pop
sbb
and
flds
and
cli
inc
js
jae
das
xchg
gs
or
add
int
jne
sarb
push
xchg
out
into
int3
dec
mov
rcrl
sub
fcom
imul
shlb
ljmp
jbe
jle
sub
cwtl
mov
lret
lea
sub
inc
rcr
push
fidivl
add
js
popf
std
xor
push
sbb
mov
push
aam
mov
jmp
movsb
jae
js
mov
cwtl
xchg
mov
in
gs
mov
add
lea
xchg
xchg
and
pop
add
sub
push
and
rcl
mov
xchg
mov
push
cli
mov
xchg
xchg
cmp
adc
jg
insl
jmp
shll
jo
scas
andb
mov
outsb
cmp
or
add
jmp
mov
fsubl
pop
jge
arpl
mov
or
inc
jne
adc
outsb
test
arpl
out
fadds
jecxz
cmpsl
sbb
aas
pushf
sub
ror
sbb
or
pop
mov
testl
dec
mov
lret
mov
mov
arpl
add
arpl
pop
push
cmpb
mov
lea
sub
xchg
add
xchg
xchg
xchg
lcall
pusha
add
pop
add
clc
shrl
or
xchg
fwait
ss
in
pop
push
xor
jp
mov
dec
lock
insl
and
fdivrl
pop
sub
data16
inc
mov
sbb
adc
xchg
das
rolb
and
push
and
stc
jge
rolb
add
popf
icebp
dec
inc
push
ret
adc
sbb
pop
xchg
and
fs
or
jns
and
xchg
addr16
rol
mov
test
bt
cltd
mov
xchg
pop
gs
jae
xor
lods
mov
mov
mov
lret
aaa
mov
repnz
xor
fs
cmp
lods
add
mov
jg
rcl
xchg
negl
or
cmp
mov
inc
and
inc
popf
inc
pop
xchg
xlat
imul
jge
std
pop
inc
ficoml
ret
push
lods
sbb
pop
mov
or
jb
mov
ret
xor
imul
mov
push
pop
lods
fcmovnb
fldenv
std
dec
test
sbb
movsl
enter
in
dec
push
imul
cmp
fwait
iret
cli
cmpsl
movsb
ss
cld
inc
cmp
stc
pusha
jno
stc
sub
das
loope
add
les
test
bnd
jmp
sub
pop
movsl
adc
shlb
push
xor
mov
inc
hlt
xchg
push
xchg
sub
int3
inc
dec
lds
lock
dec
xchg
dec
std
mov
loop
cmp
rorl
in
xchg
test
lcall
mov
push
push
push
out
inc
mov
sbb
sub
cmc
jecxz
pop
jno
repz
mov
sbb
out
mov
cmp
xor
stc
repnz
push
push
dec
test
std
and
add
lret
mov
shll
fcoms
xor
pop
adc
xchg
adc
sbb
push
dec
stc
iret
je
adc
cmp
cmp
xchg
and
push
dec
pop
inc
out
inc
or
test
out
jae
mov
xchg
mov
mov
mov
push
pop
nop
mov
clc
push
mov
imul
sti
pmulhw
subl
js
sub
mov
adc
pop
xchg
and
ljmp
cmp
fs
decl
lret
dec
mov
mov
pop
sub
xchg
negl
push
shr
pop
mov
outsb
lock
push
or
nop
mov
push
mov
cmp
iret
mov
dec
aad
mov
pop
nop
std
lret
sub
aam
pop
mov
test
mov
add
mov
js
jae
test
lods
add
rcrl
imul
or
mov
push
stos
clc
xchg
xchg
or
sti
daa
mov
xchg
push
xchg
pop
xchg
cld
or
xchg
test
in
in
mov
icebp
and
nop
push
in
add
pop
push
sbb
fcoml
lea
inc
fiadds
xlat
fwait
and
loop
movsb
lcall
and
cwtl
push
cmpsb
sar
add
stos
and
test
and
dec
cmp
divb
mov
sub
mov
mov
lahf
push
add
stc
imul
sub
mov
call
test
cmp
aad
shl
fwait
bound
push
int
mov
pop
outsl
push
int3
xchg
xchg
daa
jb
icebp
pop
xor
cs
adc
adc
inc
mov
sarb
pop
mov
and
jb
add
nop
in
sbb
mov
mov
dec
cmpsl
test
mov
mov
adc
mov
out
mov
mov
pop
push
jp
jo
sbb
sbb
xchg
shlb
out
inc
xchg
mov
outsb
loopne
shlb
ja
xchg
xchg
ja
sub
ds
adc
add
out
mov
inc
cmc
es
inc
pushf
jmp
rcl
xlat
in
loop
loope
aaa
jne
mov
xchg
adc
sbb
imul
or
les
mov
stc
xor
clc
repnz
mov
sarb
sbb
xchg
dec
dec
fcompp
imul
mov
sub
into
cmp
sbb
in
pop
aaa
mov
out
sub
xchg
daa
jmp
push
mov
adcb
adc
enter
rorb
push
loopne
insl
popf
mov
mov
cmp
in
xor
bound
lods
test
imulb
push
sahf
or
pop
movsl
in
xchg
sub
fadd
shrb
and
gs
dec
or
mov
jecxz
icebp
ja
and
jo
mov
arpl
dec
jl
mov
loope
push
cltd
sbb
jmp
push
dec
mov
pop
lods
movsl
test
and
lea
or
lods
dec
push
xchg
add
in
mov
je
divb
jnp
fcoml
xor
inc
inc
nop
jmp
mov
sub
filds
int
xchg
in
and
push
add
xor
sahf
icebp
push
mov
push
call
in
lods
bound
jae
sbb
ljmp
cwtl
aam
insb
mov
dec
sbb
stos
sub
fdivrs
fcmovu
inc
mov
test
cli
adc
or
fwait
xchg
pop
aas
cmpsb
scas
mov
jl
enter
movsl
push
fmull
or
jo
imul
ljmp
pop
xor
loope
frstor
and
iret
push
pop
inc
sbb
lods
imul
mov
test
enter
xchg
cli
adc
add
icebp
jo
push
xchg
pop
out
adc
test
xor
aaa
or
aas
mov
dec
xchg
ds
inc
push
addr16
add
inc
xlat
mov
fdivrs
call
test
add
jl
outsb
movsl
rcr
ret
addl
in
faddl
loope
inc
sbb
push
pop
or
sahf
xchg
push
inc
aad
loopne
mov
leave
enter
ret
jp
fucom
sub
lock
mov
xor
push
add
or
or
subb
insb
sarl
not
sti
xchg
push
adc
outsb
or
stc
int3
or
arpl
int3
mov
push
bound
mov
mov
jo
cmp
cld
pop
inc
in
sub
mov
imul
adc
insl
sbb
ja
jg
test
rsm
xor
out
dec
pushf
jecxz
inc
cmp
in
scas
sub
pop
pop
es
out
outsl
sbb
push
test
cltd
lahf
mov
imul
cmp
sbb
add
inc
fcmovbe
cld
push
add
push
mov
icebp
call
or
cltd
xor
xchg
inc
std
push
push
jb
pushf
inc
sbb
adc
jbe
ss
fsubl
mov
hlt
pop
cltd
mov
clc
pop
xor
mov
inc
cmp
xlat
test
test
xchg
push
jns
ljmp
mov
ja
mov
fists
or
sbb
in
or
call
out
daa
lcall
negl
fldt
ret
mov
jp
aad
sub
push
dec
sub
cmp
sbbl
sahf
mov
sbb
or
xor
fwait
or
jl
rorl
fsts
inc
xor
fcmovne
into
test
lods
jno
ds
sahf
sbbb
mov
mov
sbb
xchg
testl
push
dec
sbb
adc
jae
outsl
data16
dec
sahf
jmp
popa
pop
pushf
add
mov
jbe
mov
aam
cmp
outsb
dec
jmp
mov
aas
dec
sbb
pusha
jmp
ror
xor
cmc
inc
push
movsl
jge
add
add
sub
ljmp
push
pop
int3
cmp
call
mov
fcompl
mov
das
out
arpl
add
lods
mov
sub
lock
dec
sub
lahf
rcrb
mov
dec
xchg
sub
mov
sub
pusha
sub
fisttps
stos
xor
inc
sbb
sbb
cmc
mov
sbb
pop
pop
jmp
adc
and
xor
xor
cs
sub
xlat
fstpl
sbb
nop
push
mov
mov
lds
jle
or
iret
cmc
pop
sub
mov
mov
pop
sbb
mov
dec
outsb
mov
pop
insl
jae
dec
js
data16
cmpsl
repz
dec
popa
in
cmp
sub
sbb
int
outsb
arpl
dec
out
jnp
arpl
fstl
hlt
pop
xchg
mov
in
cltd
dec
bound
add
je
jne
cwtl
mov
out
xchg
aad
aaa
mov
sub
sub
int
pop
mov
lds
dec
iret
mov
add
xchg
inc
lcall
test
cwtl
mov
xor
mov
divl
test
add
fwait
insl
pop
ds
inc
xchg
jg
cmp
inc
inc
lock
push
and
adc
test
mov
jnp
ds
shrb
xchg
jp
mov
or
sub
xchg
or
ret
pop
mov
sbb
cs
lea
ss
mov
gs
or
sahf
scas
mov
out
cli
das
rolb
mov
int3
xor
xor
cld
cltd
push
ret
jb
in
mov
jb
jb
std
mov
and
or
adcl
dec
and
jge
adc
mov
dec
and
lods
lds
push
fstpt
cmc
mov
push
dec
lea
mov
push
stos
insl
fsub
mov
xchg
enter
fstl
xchg
bnd
cmpsl
cmc
cmpsb
pop
insl
fstpl
in
sti
add
pop
jmp
cmp
mov
pushf
sar
pop
sbbb
xor
push
call
inc
or
xchg
les
adc
push
std
add
mov
xlat
inc
xchg
pusha
in
arpl
lods
and
fidivl
push
pop
xchg
loop
xlat
iret
add
pusha
inc
or
stc
push
push
pop
or
mov
lret
fsubrs
out
mov
sar
outsl
mov
jge
jge
mov
pushl
sahf
cld
les
and
loop
and
and
leave
data16
pushf
aam
inc
add
cmpsl
adc
dec
popf
cmp
sub
aam
enter
test
adc
jo
insb
sahf
jae
pop
mov
scas
ss
inc
sub
jbe
lahf
add
xchg
jno
iret
sbb
jp
xorb
adc
inc
int3
xchg
cli
adc
adc
outsl
inc
lret
ficoms
inc
mov
in
and
outsl
push
jl
or
mov
xchg
repz
sub
jmp
sbb
push
out
push
sub
inc
add
add
pop
outsb
adc
jo
cmp
lret
add
jns
jg
into
icebp
adc
cltd
mov
pop
rclb
jbe
movsl
popf
inc
ss
mov
cmp
sub
mov
imul
rcrl
cmp
lds
sub
mov
loop
push
dec
xchg
mov
pop
sbb
inc
lcall
arpl
in
mov
cwtl
inc
push
xchg
mov
outsb
dec
in
les
adcl
mov
fcmovbe
mov
push
cpuid
pop
outsb
outsl
sahf
shll
shrb
call
loope
iret
mov
ds
subl
dec
ds
ret
and
pop
sbbb
mov
outsl
xor
add
sbb
push
stos
add
dec
outsb
pop
push
pop
rcrb
ds
push
adc
cmp
cmc
dec
in
or
enter
add
add
inc
pop
push
mov
push
and
mov
stos
cmp
dec
shlb
test
in
in
pop
lret
fdivl
jp
xchg
pop
push
push
pop
lock
out
adc
dec
cmp
mov
push
ds
add
adc
and
cmp
add
loop
push
ret
sub
mov
mov
imul
cmc
cs
loop
mov
sbb
jmp
cmp
xchg
dec
aaa
mov
nop
sahf
das
and
in
xchg
mov
xor
lahf
add
xchg
scas
int
in
das
mov
loopne
test
mov
repnz
loopne
inc
rol
sub
rcrl
and
sbb
adc
rcrb
adc
mov
mov
and
test
rcrb
xchg
callw
xchg
mov
jbe
hlt
jb
rcll
in
pop
out
push
inc
out
push
pop
push
add
mov
push
mov
sub
dec
mov
lock
mov
je
enter
or
leave
jmp
mov
pop
mov
mov
mov
adc
icebp
lea
test
scas
push
stos
xor
dec
imul
fsubrs
or
jnp
push
popf
nop
sub
cmpsb
fiadds
jmp
int3
leave
push
shll
mov
ret
ljmp
add
jns
mov
mov
cli
and
arpl
sub
rcrb
pop
inc
dec
xchg
inc
and
cmp
fstpl
rclb
filds
pusha
lahf
addr16
and
cmp
pop
dec
cli
sub
jg
add
jmp
inc
aaa
xor
mov
cmp
iret
mov
in
jecxz
jmp
pop
or
sbb
movsb
pop
ret
or
mov
es
int3
pop
cmp
lock
cmp
imul
xor
pop
sub
pop
lahf
fadds
mov
lock
sub
aad
div
mov
sub
dec
cs
stos
scas
sti
sti
outsl
push
sbb
inc
std
dec
js
test
test
cwtl
and
pop
inc
inc
inc
push
jge
sbb
mulb
sub
test
inc
jl
add
inc
adc
inc
pusha
inc
add
pop
dec
xchg
in
loopne
lods
xor
pop
insl
jbe
xchg
aad
inc
shlb
idiv
mov
inc
rorb
mov
jl
and
inc
push
cmp
hlt
xchg
sbb
and
adc
inc
lods
cmc
int3
jmp
mov
xchg
fdivs
iret
ss
push
cmc
into
inc
and
dec
dec
js
jmp
jg
xchg
imul
scas
xlat
in
cmp
and
and
and
cli
movsl
stc
lahf
pop
sub
daa
xlat
decl
imul
and
clc
push
inc
test
mov
push
push
inc
ds
jecxz
mov
test
ret
sbb
leave
repnz
fdivs
jb
dec
push
es
add
dec
loopne
pusha
fidivrl
sbb
adc
nop
addr16
mov
out
mov
jno
xor
frstor
insb
dec
xchg
push
jne
mov
inc
out
dec
xor
jae
mov
push
jp
xor
into
sbb
push
mov
lods
sub
fcomps
sbb
adc
jmp
icebp
xlat
push
mov
sbb
fnstsw
imul
leave
adc
mov
out
mov
jne
imul
pop
pop
push
mov
movsl
mov
mov
mov
call
inc
cld
mov
mov
rcr
daa
jg
out
mov
in
xor
clc
lods
ss
jne
xchg
push
call
dec
lea
jnp
cmpsb
fdivrs
cmp
sahf
jnp
add
dec
xchg
xchg
out
xchg
loopne
hlt
stc
jg
mov
adc
add
push
fmuls
arpl
mov
mov
xor
repz
test
out
outsb
rorl
fwait
push
aad
inc
sub
std
das
mov
or
jnp
xor
push
inc
and
jmp
sbb
popl
fstps
mov
pushf
stos
shlb
jl
dec
xchg
mov
xchg
jmp
loope
lahf
in
mov
pop
ret
hlt
inc
insb
mov
xor
pop
popa
orb
xchg
sub
js
dec
leave
shl
cs
inc
mov
dec
sqrtps
pop
push
inc
push
into
int3
and
mov
mov
inc
sub
cmc
insb
std
in
dec
sub
fistl
ja
lds
test
dec
or
mov
mov
cld
mov
popl
cmc
push
call
sbb
popa
test
xlat
imul
sti
and
ret
orl
lahf
lods
movsl
loopne
inc
aad
shrb
and
xor
inc
or
test
pusha
dec
xchg
cltd
jnp
les
xor
pop
lret
inc
sub
fdivl
mov
push
icebp
xchg
lods
dec
movsl
fisttpl
inc
dec
cmp
andl
or
scas
aad
mov
jne
pop
lahf
outsl
pop
inc
dec
addl
sbb
andb
xor
mov
pop
imul
call
mov
jl
orl
test
in
pop
lcall
mov
scas
cwtl
mov
sarb
mov
push
ret
mov
adc
cmp
lds
inc
push
mov
popl
fiadds
jle
dec
mov
test
test
jmp
sbb
jo
aas
int3
shll
cmp
int3
jge
dec
mov
cmpl
jne
bound
lcall
clc
mov
pop
mov
cmp
dec
or
test
jne
and
dec
int3
cmpsb
jno
inc
xor
in
js
or
mov
pop
mov
add
fs
scas
and
jo
scas
xchg
mov
loop
and
push
mov
movsb
jne
cwtl
out
lds
das
gs
in
nop
test
aas
call
add
or
lcall
cmc
sarb
fwait
cltd
mov
add
cmp
adc
cmp
adc
mov
inc
jbe
inc
xchg
xchg
mov
mov
or
sub
popa
jae
sbb
fmull
das
push
or
out
test
sbb
lods
mov
mov
lds
fadd
mov
cli
add
pop
cmp
cmp
add
pop
hlt
out
mov
les
push
daa
cli
lcall
jmp
dec
mov
add
sub
xor
pop
and
ja
movsl
roll
xchg
mov
push
aas
jg
sub
sub
cmpsb
cmp
jno
dec
enter
shr
stos
imul
mov
mov
xor
loop
ss
repz
sub
ja
fwait
scas
addr16
push
jo
int3
and
jo
scas
mov
adc
std
adc
inc
dec
les
and
das
push
movsl
scas
jge
jo
dec
jg
xor
divb
fsubrl
inc
sbb
jns
sbb
sbb
jo
test
movsl
add
mov
cmp
ljmp
out
fmuls
lds
and
mov
and
pop
jns
jl
cmc
lea
popa
inc
and
or
shll
ljmp
dec
push
addb
cwtl
cwtl
jmp
cli
mov
mov
aad
je
insl
sarl
jb
cmpsb
inc
in
adc
aas
jno
sbb
insb
insb
mov
adc
shrb
sti
rcrl
pop
add
scas
sahf
fsubl
fists
lahf
std
in
std
std
dec
inc
mov
in
jge
xor
dec
jo
outsl
sub
sbb
push
das
decb
pop
cmp
inc
mov
dec
outsl
fcoms
pop
lea
out
cli
scas
rcrb
dec
xor
push
rorb
loop
mov
test
data16
aas
or
adcl
rcrb
ret
xorb
sti
ja
adc
inc
cmp
or
pop
movsb
mov
js
unpcklps
add
push
push
jmp
pop
fistl
jbe
cld
bound
fwait
add
repz
push
loope
in
mov
sbb
and
repnz
and
mov
cs
xor
arpl
ljmp
or
aas
mov
inc
or
lods
mov
add
pop
jae
pop
mov
mov
inc
mov
mov
je
hlt
pop
or
inc
mov
js
out
or
ret
leave
pop
xor
adc
mov
stos
push
inc
mov
mov
adcb
fs
fisubl
rolb
mov
push
icebp
movsb
sti
mov
xchg
sbb
sub
xor
push
mov
sub
pop
iret
movsl
fisttpll
shlb
xlat
jnp
mov
pop
bound
lret
mov
jge
testb
adc
mov
dec
mov
xchg
xor
xor
inc
lret
test
test
inc
dec
mov
imul
mov
idivl
xchg
add
cmp
gs
sub
jno
lahf
xchg
lahf
mov
add
add
imul
sbb
jl
add
aam
mov
xor
mov
push
mov
enter
jle
or
ret
pop
inc
gs
fwait
lcall
add
shll
popa
jle
sub
fsts
add
aam
movsb
gs
cmpsb
pop
mov
xor
mov
jne
xchg
ja
movsl
pop
adc
ret
bound
lds
std
daa
imul
and
pusha
popa
lret
or
fwait
and
leave
fmull
sub
lcall
and
mov
loopne
pop
push
push
ficompl
ds
jle
mov
cmc
mov
sbb
sarb
adc
mov
aad
scas
adc
rorl
dec
xchg
and
adcl
es
cmp
clc
aam
cmp
mov
aad
andl
push
lcall
jo
pop
jl
fs
hlt
popf
nop
add
lock
add
mov
stc
sub
ds
mov
or
aaa
push
adc
pop
es
repnz
xor
adc
fnstenv
leave
ret
adc
and
shl
scas
fs
xor
and
jnp
stos
les
inc
aam
pop
repnz
mov
xor
int
mov
jecxz
int3
mov
sub
add
and
cmpsb
insl
lds
push
mov
addr16
mov
mov
pop
cmp
sub
mov
std
test
mov
jo
add
add
jle
outsb
in
std
daa
insb
scas
adc
lahf
mov
loop
cmc
mov
mov
pushf
subl
cli
jne
push
nop
lds
push
and
mov
adc
xchg
rol
xor
jmp
push
outsb
jp
mov
and
add
repnz
push
lret
mov
lcall
push
gs
pop
add
imul
dec
shrb
fdivrl
jns
cmpsb
pop
cmp
dec
cmp
jle
xchg
mov
sub
leave
jg
loop
sti
push
test
pop
cmp
aam
aad
xorb
dec
mov
or
ja
push
xor
xchg
iret
xchg
cltd
outsl
dec
in
dec
jg
addb
stc
clc
mov
lret
jmp
jno
and
hlt
shld
test
pop
mov
xchg
jecxz
iret
cmpsb
jl
sbb
mov
xchg
mov
dec
cltd
xor
rcrl
mov
inc
adc
xor
out
cmp
inc
mov
inc
lea
insl
enter
arpl
ljmp
outsb
cmp
cmpsl
and
pushl
cmpsb
fisttpll
jle
mov
jle
inc
xor
or
inc
lret
pop
arpl
test
imul
jbe
lods
sbb
push
and
stos
dec
imul
xor
scas
or
pushf
inc
xchg
adc
mov
out
sbbb
pop
in
ret
movsb
repnz
aas
xchg
sub
pop
and
mov
sbb
pop
push
test
xchg
xorl
push
push
push
idivb
testl
ds
ficoms
push
or
negb
scas
xchg
cltd
pop
mov
xchg
xchg
mov
add
out
xor
pushf
sbb
movb
or
sbb
das
dec
rclb
pop
inc
and
leave
das
add
roll
xor
xor
mov
add
outsl
stos
mov
cs
jo
xlat
movsb
nop
outsl
aaa
rolb
sbb
jmp
mov
shll
test
push
mov
sbb
mov
bound
add
push
test
rcrb
pop
mov
and
fst
data16
mov
cmp
mov
pop
in
imul
daa
sti
faddl
ljmp
and
cmp
cmpsb
iret
daa
sbb
mov
pushf
and
je
sbb
dec
out
push
push
sbbl
pop
out
xor
les
lds
mov
jno
mov
sbb
xor
in
shr
ljmp
dec
icebp
mov
js
in
sbb
jns
sbb
jmp
adc
jo
in
cs
into
mov
loopne
test
sahf
push
mov
in
leave
mov
pushf
adc
out
lods
mov
mov
inc
push
xor
dec
stos
aam
cwtl
xor
or
sub
ret
push
adc
icebp
push
mov
lods
fcoms
or
add
and
jp
mov
xor
push
call
pusha
add
jne
sbb
mov
add
ret
push
addb
lret
rolb
rorb
sbb
add
sub
cmpsb
out
adc
out
lcall
lcall
shl
aaa
divb
cmpsb
mov
mov
arpl
push
in
fstl
push
ds
test
in
jbe
pop
in
mov
add
fs
mov
dec
mov
sub
add
loopne
fs
mov
adc
repz
rorl
dec
jg
cwtl
scas
xor
lea
lcall
push
js
ret
mov
outsb
ret
mov
jecxz
mov
jge
fwait
sti
shlb
jo
push
mov
xchg
dec
jg
pop
cs
add
xor
sub
dec
ret
cwtl
pop
les
sarl
xchg
test
xchg
movsl
xor
pop
insl
es
ja
push
repnz
and
sbb
ficompl
adc
test
cmpsb
pop
sbb
stos
dec
push
mov
or
inc
mov
mov
xor
mov
addb
inc
loope
into
xchg
cmpb
arpl
add
pop
in
xor
les
mov
lret
aam
sbb
jge
add
icebp
sub
cmp
in
imul
mov
pop
jb
mov
pop
pop
divb
dec
adc
dec
enter
imulb
bound
dec
out
ja
and
fsts
lods
insb
cmp
sar
lret
outsb
dec
xor
nop
dec
sbb
cmpl
jne
ret
cmp
in
ret
andl
pop
sbb
and
incb
cmp
aam
cs
mov
rorb
jb
inc
adc
dec
in
scas
or
inc
push
mov
idivb
outsb
movsb
sub
lods
out
and
lahf
push
sub
mov
push
scas
sub
xchg
cwtl
movsl
mov
aaa
lock
dec
rcrw
loope
insb
rolb
inc
push
and
dec
push
mov
cld
xor
cmp
cli
test
inc
insl
xchg
pop
int3
popa
mov
mov
pop
mov
dec
int
or
xor
testl
add
cmp
sub
jo
lea
push
gs
loopne
and
ret
xchg
pop
sahf
dec
shrb
int3
or
das
pop
jge
ret
sahf
movsl
push
lret
sbb
cmp
or
sub
mov
scas
js
lret
jnp
sub
push
push
int
mov
xchg
insl
shll
popf
cmp
shlb
pushf
sti
mov
mov
adc
mov
lock
push
dec
xchg
add
addr16
mov
xor
push
rcl
mov
push
mov
pop
incb
lods
iret
inc
push
sbb
popf
mov
jnp
cmp
xchg
mov
repz
lahf
arpl
lods
sub
jbe
ficoms
lret
mov
xchg
into
jmp
cs
and
pop
or
jo
out
push
sbb
or
mov
jp
push
cmp
push
mov
jno
cmpl
mov
pop
bound
xor
mov
add
leave
js
out
frstor
out
in
cmpsb
cltd
addb
and
dec
popf
sbb
test
cmp
leave
cli
adc
cmc
and
push
mov
cmp
push
push
shrl
dec
cmpl
sub
mov
and
push
lcall
loop
js
adc
dec
add
jmp
shrb
mov
lock
or
mov
add
loopne
in
sub
clc
aad
inc
ret
sub
gs
mov
jl
das
data16
outsb
insb
movsb
call
jnp
push
in
mov
enter
mov
mov
inc
mov
movsl
xor
stos
inc
dec
jae
mov
sbb
cltd
add
push
sub
mov
pop
out
setae
imul
ja
adc
inc
lods
jle
fmull
sahf
mov
or
sbb
shrb
data16
xchg
movsb
fcoms
push
cli
loopne
mov
mov
jns
fstpl
mov
add
mov
in
jmp
cmpsl
std
sub
dec
clc
inc
add
and
mov
pop
adc
sarl
jns
cltd
dec
and
mov
xor
push
outsb
ret
and
mov
mov
adc
enter
jecxz
es
xor
pop
mov
mov
scas
rol
jmp
xlat
loopne
bound
add
and
gs
add
loopne
cs
imul
push
add
lcall
jnp
lods
pop
dec
ja
ss
and
in
jb
cmp
add
dec
xor
dec
xchg
ljmp
in
cmp
xchg
mov
cmc
ret
pop
mov
fstps
inc
xchg
pop
push
dec
push
out
sahf
subb
test
or
insb
xchg
mov
mov
jecxz,pt
aam
jbe
adc
cmp
jns
jp
popa
push
rol
mov
push
mov
jb
aaa
fildll
push
cmp
sub
xchg
pop
xor
mov
icebp
in
jmp
push
cmp
pop
mov
xor
jg
arpl
imul
popa
or
lret
lret
test
jle
aam
arpl
adc
and
add
daa
fsubrl
out
sub
lret
jae
add
or
inc
pop
and
mov
push
out
push
mov
push
dec
data16
pop
cwtl
adc
and
or
dec
fs
ds
shlb
subb
rolb
push
xor
or
lock
cmpb
or
pushf
mov
lods
cli
std
add
fimuls
dec
mov
cmp
jecxz
inc
cmc
popf
sbb
insl
int
push
sub
int
in
out
sub
mov
xorb
test
or
push
insl
dec
ds
inc
pop
into
imul
mov
cmpsb
add
jnp
mov
jo
cmc
push
loop
setle
cwtl
aad
adc
outsb
lcall
push
xchg
cmp
ss
orl
jle
xchg
out
aam
mov
adc
or
xor
cli
pop
sub
shll
sbb
pop
dec
sub
in
push
pop
dec
popa
push
mov
pop
popf
cmpsb
or
push
out
je
mov
movsl
ljmp
mov
inc
and
or
call
ds
dec
rol
mov
out
cli
lcall
lock
mov
icebp
sub
lret
sub
push
mov
das
xor
add
jl
into
lcall
imul
mov
fdivs
xchg
roll
loop
mov
sbb
dec
mov
lods
sbb
dec
test
sub
adc
push
xlat
movsl
sub
add
in
testl
push
idivl
jmp
clc
arpl
movsb
dec
mov
add
push
xchg
jae
stc
push
ret
jl
inc
sub
add
sbb
stos
jmp
mov
lods
cli
push
push
in
icebp
mov
pop
jnp
loopne
mov
stos
jnp
mov
push
sbbb
or
mov
jp
cwtl
std
add
push
mov
scas
divb
arpl
and
inc
in
jg
rolb
jbe
gs
idivb
mov
jno
and
std
enter
jl
je
cmp
rorb
rcll
loope
jo
sahf
das
shlb
lahf
cwtl
in
push
fwait
cli
pshufw
std
lahf
jle
add
popa
jecxz
adc
sub
and
xchg
ds
add
or
data16
sbb
pand
jmp
push
adc
fwait
adcb
fiaddl
sahf
cltd
lea
movsl
mov
or
mov
jg
adc
xor
xor
mov
ds
and
sarl
sbb
xor
add
ss
gs
cmp
int3
int
mov
mov
test
movsb
int3
out
ror
sub
fisubs
fnstcw
bound
fisttpll
xchg
arpl
add
jecxz
cmpsb
mov
jg
insb
ret
pop
cmpsb
jb
lods
arpl
cmp
subb
hlt
push
lahf
mov
cmp
scas
dec
cs
pop
adc
out
mov
push
xor
push
xchg
push
cmp
pusha
int3
cmp
lret
jge
xchg
mov
mov
inc
mov
cmp
imulb
iret
out
test
mov
arpl
mov
mov
push
mov
scas
leave
dec
push
push
mull
mov
and
inc
adc
loop
cmc
fwait
loopne
mov
in
loopne
dec
outsl
pop
decb
jle
pop
mov
and
pop
sbb
sbbb
push
jmp
fidivrs
shlb
xchg
jp
pop
clc
xchg
pop
popf
ficompl
imul
in
lock
or
popa
cmpsb
pop
aad
pop
and
dec
fisubrs
data16
mov
shll
sub
adc
ror
in
loopne
idivl
jp
ss
push
jg
or
cltd
mov
imul
jnp
add
pop
or
test
mov
adc
mov
imul
jno
lods
aas
mov
dec
push
jns
mov
or
es
test
std
mov
and
imul
fwait
jmp
ror
xchg
ficoms
inc
push
imul
add
rorb
xor
xchg
add
inc
push
pop
inc
or
xchg
sbb
imul
push
xor
mov
cli
adc
xchg
fistpll
out
aaa
jp
mov
and
xor
je
ja
dec
add
sub
mov
aas
outsl
icebp
fisubrl
mov
out
xchg
adc
mov
xchg
sbb
dec
inc
dec
pusha
push
xchg
pop
into
ss
stos
add
mov
xchg
mov
mov
or
pop
bound
in
fisttps
mov
lods
and
call
scas
dec
sub
test
inc
cmpsl
imul
mov
adc
popa
jmp
lock
sbb
jge
sub
ds
sub
mov
inc
push
push
out
dec
loopne
or
pushf
jae
aam
loope
pop
xor
test
pop
int
cwtl
into
out
xor
add
nop
push
and
jbe
mov
jbe
fcmovu
dec
ficomps
icebp
or
sbb
pop
scas
mov
and
add
adc
cwtl
mov
fdiv
mov
lret
mov
je
jnp
push
xor
popf
cld
repnz
je
frstor
push
pop
jo
shlb
stos
jmp
dec
mov
icebp
dec
jmp
int3
xchg
test
pushf
xchg
mov
sub
inc
cmp
aad
xor
cltd
jl
pop
xor
jecxz
in
xor
jge
call
aaa
mov
fcompl
fisttpll
xor
sbb
or
inc
mov
push
inc
call
push
iret
negl
incb
cs
jp
mov
jne
sti
rclb
inc
push
pop
cmp
popa
mov
das
inc
loop
jle
pop
adc
dec
mov
push
lods
js
pusha
pop
mov
mull
mov
insb
push
mov
stos
pop
faddp
lcall
mov
sub
jns
scas
mov
jmp
pop
xorl
mov
ficoms
jp
repz
ja
or
frstor
push
push
inc
pusha
dec
xchg
in
stos
xchg
std
test
pop
lds
dec
test
fidivrs
and
imul
pop
addl
mov
mov
inc
gs
je
pop
xchg
test
cmp
adc
pop
pop
scas
pusha
imul
inc
into
xlat
loop
sbb
sub
dec
out
sar
jo
or
cld
aas
mov
lcall
lea
mov
cwtl
or
mov
lret
adc
push
call
pop
fs
adc
jae
push
and
sub
jbe
add
jmp
xchg
or
inc
add
adc
xchg
sti
xchg
out
sahf
sub
cmpsb
xchg
inc
xchg
mov
test
pop
sbb
rolb
push
dec
mov
movsl
outsb
push
sub
inc
std
lcall
jbe
cmp
pop
push
flds
jb
les
xor
push
clc
mov
iret
in
jbe
subb
sub
adc
das
gs
inc
add
ret
cmp
mov
sbb
lcall
xchg
ds
lahf
pop
cs
xor
mov
mov
mov
stos
adc
arpl
jb
inc
neg
shll
mov
ljmp
loop
mov
scas
movsb
fcompl
or
jg
add
mov
stc
push
negl
sbb
out
push
leave
pop
bnd
push
jb
fwait
pop
lcall
or
ljmp
loop
fildl
xor
sahf
push
rcrb
sub
xor
std
sti
int
dec
data16
imul
and
stc
fiaddl
pop
jecxz
sbb
loopne
push
sbb
xor
shl
daa
xorb
xorb
mov
push
mov
movsl
add
cli
idivb
lahf
dec
int
lds
add
adc
pop
mov
add
adc
lds
mulb
aam
outsb
fs
push
lods
mov
sti
or
jle
xchg
lds
lahf
xlat
mov
mov
xchg
shlb
cld
aaa
stc
idivl
lods
dec
fnstcw
cld
mov
aam
aas
sarl
fxch
fildl
xlat
ret
lods
xchg
jg
jmp
cmpsb
and
xlat
xchg
mov
fwait
jmp
push
inc
cmp
incb
repnz
add
bound
call
dec
ret
push
sbb
pop
sbb
les
or
aas
push
int
pop
icebp
arpl
nop
xlat
test
bound
ss
loopne
mov
push
push
or
pop
adc
pop
in
aaa
mov
mov
jae
jl
pop
jbe
adc
mov
xchg
aaa
push
mov
lods
mov
insb
call
call
vmread
or
jno
not
loope
in
ja
pop
inc
fidivl
cmc
cltd
inc
sti
add
fdivp
adc
popf
adc
push
mov
xchg
cltd
movsb
and
xchg
out
push
inc
clc
fsubl
or
push
push
data16
test
sbb
nop
mov
loop
mov
pop
mov
pop
jne
lods
push
ret
xchg
xor
lods
mov
in
sbb
adc
fildl
insb
jg
inc
inc
outsl
push
orb
sbb
add
mov
imulb
insl
test
xor
and
insb
js
ffree
aaa
or
xchg
adc
lret
lods
push
inc
push
sbb
add
xchg
xchg
cmp
dec
lcall
jecxz
fs
and
lret
jne
mov
mov
into
mov
sbb
jecxz
mov
fwait
add
pop
mov
mov
xor
mov
sbbb
pop
xchg
jg
pop
es
scas
ja
and
into
push
fs
cltd
pop
sarl
adc
xor
inc
mov
jns
rep
stc
push
clc
xchg
lahf
and
shrl
rcrl
lahf
mulb
jne
lret
jb
insb
bound
adc
jecxz
push
inc
fldl
pop
repz
sbb
into
outsl
repz
push
inc
fsts
out
call
dec
push
add
mov
jl
or
pop
aaa
leave
cmp
cmp
ficomps
movsb
jae
and
mov
scas
fucom
jne
inc
pop
push
pop
repnz
adc
push
or
mov
xchg
sub
cmpsb
rcr
xchg
push
push
jne
dec
in
loopne
pop
and
movsl
xchg
mov
aas
gs
push
jo
jbe
mov
cmp
lret
lret
sub
stos
mov
xchg
inc
dec
fdivrs
ficoml
mov
arpl
xor
sbb
xchg
aaa
outsl
lds
mov
lret
lcall
jmp
inc
and
sub
add
push
xor
inc
int
stos
push
inc
sahf
flds
mov
aam
arpl
pop
xchg
mov
fnstenv
mov
test
cmp
mov
xor
xchg
jb
icebp
call
jecxz
add
stos
mov
sbb
pop
mov
ljmp
rclb
int
mov
adc
in
push
xor
mull
pop
cmp
ss
adc
pop
or
repnz
in
xor
stos
pop
mov
cmp
stos
push
test
lret
call
negb
sbb
pop
adc
jp
cmpsl
push
xor
in
cmp
cmpsb
xchg
scas
jne
and
sti
mov
adc
std
aad
jb
out
xchg
push
dec
adc
add
inc
imul
out
jae
mov
push
sub
pusha
and
out
icebp
jg
xor
pop
inc
into
orl
dec
lea
mov
stos
mov
mov
and
std
jge
je
cmp
shlb
insb
inc
sbb
push
cmp
sub
cmp
push
jmp
and
and
insl
popa
mov
adc
xchg
push
mov
cmpb
add
sbb
into
cs
jae
xchg
lods
lea
inc
or
mov
or
sbb
xchg
jno
push
outsl
jle
sbb
out
mov
adc
out
mov
xchg
test
cli
shlb
jns
and
movsl
lret
xor
sbbb
ljmp
add
rorl
pop
xchg
into
jno
or
push
ret
cmp
lea
push
aam
jne
or
popa
adc
mov
fidivs
stos
sbb
adc
sarl
into
notb
icebp
pop
jge
cli
stos
nop
outsb
fs
jb
sub
rcll
mov
adc
out
or
mov
pop
add
bound
testb
dec
fistpl
outsl
xchg
shlb
mov
or
mov
adc
insb
incl
fnstsw
sbb
inc
pop
stos
xor
stos
and
addr16
mov
out
iret
loopne
adc
leave
jp
xchg
test
cmpsl
cmp
add
sti
add
inc
and
and
xlat
rolb
gs
pop
push
std
xchg
add
sub
push
lret
sub
dec
out
sarb
xor
sub
push
fs
frstor
ficompl
push
divb
aaa
sti
mov
dec
mov
xor
mov
fidivl
aas
dec
push
ss
mov
xchg
pop
sub
add
pop
in
rcr
std
jge
and
cmpsb
lds
subl
push
sub
pop
xor
out
add
lret
mov
pop
cltd
add
adc
cmp
rcrb
ljmp
inc
movsl
push
lcall
mov
pop
stos
mov
push
pop
mov
xor
sbbb
push
push
es
dec
xor
jl
sub
pop
data16
xchg
or
push
arpl
and
fisubs
cmp
sbb
and
add
dec
in
mov
mov
add
push
dec
mov
dec
addr16
lahf
mov
adc
sub
lret
sub
mov
push
xor
xchg
out
xchg
pop
xor
pop
cmpsl
sbb
sub
into
push
sbb
sahf
inc
pop
enter
and
loope
sbb
inc
ds
add
int
test
mov
mov
mov
xchg
rcll
subb
shlb
mov
mov
dec
in
fdivrl
fstpt
andps
mov
or
stos
lret
or
sbb
sbb
icebp
ss
xor
aam
jo
movsb
push
cli
lods
int3
inc
push
leave
xor
fisttpl
dec
sbb
jb
repz
shll
mov
mov
gs
push
ljmp
lcall
jmp
loop
xor
xchg
aad
mov
mov
cwtl
hlt
std
add
push
sub
mov
repz
jns
xor
or
cmpsb
adc
xor
das
mov
cmpsl
xor
punpcklwd
xchg
xor
cmpb
mov
sub
pop
mov
push
loope
loop
adc
push
mull
push
add
jmp
into
mov
adc
in
mov
jb
inc
imul
push
xor
and
aam
push
dec
shrl
stos
xchg
daa
inc
movsb
in
inc
pop
sbb
mov
jg
xchg
jo
jns,pt
pop
fdivr
mov
aad
dec
jecxz
mov
inc
and
lahf
dec
and
cmp
and
ljmp
jg
jnp
into
dec
mov
pop
xor
sti
pop
add
in
sbb
mov
mov
test
xchg
fs
xlat
pop
mov
push
jnp
imul
add
mov
inc
inc
mov
testb
gs
mov
inc
dec
in
xlat
jne
shrb
jg
sub
push
mov
add
jp
xchg
int3
lods
mov
cmp
push
push
lret
add
lret
jno
adc
test
outsl
pop
xor
adc
mov
jmp
es
sub
adc
push
mov
in
js
fsubl
movsb
inc
roll
sbb
leave
sbb
adc
fwait
xchg
pop
xor
xchg
lock
cli
pop
push
mov
push
and
std
stos
cmp
into
repz
scas
add
ljmp
sti
cwtl
sbbb
and
pop
mov
dec
iret
or
inc
mov
or
insl
and
inc
sbb
dec
clc
fiadds
sub
jl
cmp
adc
nop
add
fisttpl
sbb
cli
shll
movswl
mov
aaa
add
or
mov
mov
stos
das
mov
jns
insl
sbb
nop
cmp
jle
xchg
cs
hlt
imull
repz
mov
adc
popf
test
sarb
out
push
fldt
cmp
push
rcll
add
repz
xchg
jns
xchg
cmc
jae
jg
xchg
push
push
xchg
arpl
push
jp
cmp
fld
or
cmpb
push
aad
lods
xor
adc
jae
pop
pushf
xchg
mov
jge
jae
shrl
jns
xor
fisttpl
pop
insb
arpl
in
idiv
hlt
jae
mov
xchg
ja
pop
inc
add
ret
xor
movsl
test
fimuls
fcmovb
stos
jge
aad
faddl
fdivs
jle
mov
push
sub
insb
inc
fstl
xor
lret
push
pop
ds
and
adc
addr16
pop
repnz
cmpsl
mov
xchg
lds
in
push
xchg
mov
pusha
jmp
outsb
cmc
inc
test
mov
push
xchg
pop
cmp
mov
pushf
movsb
lcall
sbb
jbe
data16
and
out
adc
push
cmovnp
dec
popa
addr16
lret
cmc
fwait
pusha
jno
mov
push
and
push
lret
add
loop
pop
stc
pop
sub
or
mov
addl
and
mov
lahf
out
sub
jle
fcoms
shr
orb
and
cmc
push
rclb
jge
push
mov
xchg
sbb
sub
int
sub
push
fs
mov
sbb
and
xor
mov
add
push
add
jns
pop
dec
bound
pop
pop
mov
ret
xchg
mov
pop
divl
cmp
cmp
test
insb
pusha
cmpb
and
ljmp
out
in
pop
xlat
shlb
mov
lret
inc
jp
jg
jecxz
mov
inc
jnp
mov
jl
aad
xor
xchg
cmp
rcrl
mov
fcomps
in
in
push
jecxz
add
mov
cmp
push
ret
mov
imul
pusha
or
aaa
mov
and
cmpsb
aas
andl
xchg
ss
pop
mov
xchg
jae
or
adc
inc
sub
arpl
dec
neg
pushf
insb
push
jbe
iret
dec
outsb
mov
pop
sub
cwtl
insl
pop
popf
adc
sbb
fistps
imulb
adc
push
stc
sahf
fs
push
ret
loope
jne
jae
push
subl
sbb
clc
mov
inc
sbb
fnsaves
bound
pop
mov
in
mov
arpl
mov
dec
dec
insl
aaa
cltd
jmp
push
mov
stc
out
aaa
adc
lret
cmp
test
int
shlb
push
fdiv
std
loope
mov
movsl
scas
mov
scas
cwtl
sub
jp
lret
jge
divb
cmp
out
push
pop
xchg
int
in
pop
cmpsb
inc
and
jge
test
add
cmpsl
clc
popl
inc
mov
xchg
cld
fcoms
gs
clc
sbb
ss
lods
jns
sub
sub
addl
sti
cmp
js
xor
dec
xchg
leave
add
popf
cmp
pop
mov
xchg
jg
icebp
pop
dec
sti
and
pusha
or
cld
cmovns
andps
xchg
mov
push
out
int3
nop
test
jno
xchg
sub
push
daa
insl
test
push
lods
mov
fidivrs
pop
lahf
pop
adc
testl
mov
pop
sub
imul
inc
or
rol
dec
outsb
push
das
out
mov
push
popf
enter
xor
cmp
xorb
and
hlt
push
iret
xchg
cmp
or
testl
xor
xor
jecxz
imulb
sarl
leave
add
ss
pop
rcl
mov
out
insb
sbb
pop
add
gs
lret
addr16
adc
and
add
push
or
push
mov
mov
adc
les
shll
outsl
into
stc
js
outsb
fsubrl
fistpll
mov
repz
fidivs
mov
out
or
pop
mov
xor
es
mov
dec
addr16
mov
das
dec
hlt
pop
out
cmpsl
int
imul
push
sbbl
out
je
mov
push
fistl
jno
movsl
mov
jae
lods
lcall
js
inc
aas
push
cmp
mov
or
push
sub
pop
mov
pop
fwait
mov
aas
imul
mov
xor
dec
cld
icebp
test
mov
test
aas
pop
adc
out
or
sbb
mov
push
xchg
and
inc
js
mov
lret
fnstenv
dec
popa
add
jns
popf
decl
loope
in
and
jmp
jge
or
out
jle
jg
shrb
lods
sbb
jbe
or
stos
sub
push
xor
mov
call
and
mov
xchg
jge
repz
xchg
inc
test
inc
add
cli
fst
arpl
sub
gs
iret
sbb
push
call
testl
jg
dec
pop
add
xchg
outsl
dec
das
pop
pop
stc
cmp
outsb
shlb
pop
les
ljmp
or
mov
popf
lds
push
daa
mov
mov
and
push
outsb
cli
fimuls
xor
lcall
nop
les
movsb
xor
lahf
ror
sub
lods
push
pop
mov
mov
js
jl
add
mov
mov
shll
xchg
push
push
cmpsl
cmovb
cwtl
mov
movsl
cmc
sub
rcrb
add
das
jbe
jg
into
gs
jbe
hlt
aad
fisttpll
repnz
or
inc
xlat
in
ficomps
hlt
sbb
ret
addl
mov
add
cli
in
mov
mov
testb
out
cmp
fidivrs
adc
lock
clc
fsubl
lahf
add
movsl
popf
outsb
and
arpl
ljmp
jl
mov
lahf
and
std
jb
and
push
arpl
in
gs
mov
xchg
imul
pop
sbb
lock
mov
js
shlb
insl
lods
adc
and
iret
ss
cltd
or
mov
fists
fcoms
cli
mov
insl
int3
mov
fisttpll
cmp
int3
and
aaa
lock
dec
push
pushf
pop
cmpsl
xchg
movsl
icebp
ds
enter
add
adc
push
stos
mov
or
stos
aas
and
add
mov
scas
fildll
aaa
pop
cwtl
pop
imul
mov
mov
fxch
arpl
nop
cli
loopne
jmp
sub
adc
xchg
lret
fs
pop
in
gs
pusha
ds
pop
xchg
lock
scas
bound
lods
les
jle
cmp
data16
mov
inc
stos
sbb
jp
lcall
call
fldt
ret
daa
and
das
movsl
jnp
jg
and
sub
mov
jo
enter
mov
cmp
lea
adcb
in
jbe
and
nop
addr16
cmp
scas
icebp
mov
mov
lods
push
add
pop
mov
repz
sub
cmp
jno
aad
xchg
ret
sahf
jmp
call
sub
aad
pop
inc
push
add
mov
aam
xor
sub
xchg
aaa
frndint
rcrb
mov
pop
clc
lcall
push
std
mov
je
push
ss
jp
xor
sbb
jecxz
pop
mov
cs
mov
enter
or
dec
push
push
xlat
orb
add
xchg
sbb
jns
lret
fst
test
out
pop
sub
aaa
imul
roll
sbb
push
adcb
call
and
loope
call
and
test
mov
pop
push
or
push
lcall
dec
addr16
dec
aad
int3
xor
xchg
test
scas
daa
sub
fwait
rclb
repnz
jb
cmp
bnd
ficomps
add
jp
popf
ljmp
loop
push
pop
mov
push
fstpt
and
out
push
add
jns
mov
dec
cmp
cmp
jmp
push
test
fcomps
test
repz
ljmp
mov
push
pop
lods
rolb
stos
dec
out
repz
mov
movsl
xor
mov
jae
mov
and
in
in
bound
test
ljmp
jge
fstp
adc
sbb
pop
popf
ja
pop
xchg
or
mov
push
xor
jae
inc
xchg
mov
data16
mov
fsubr
xchg
jns
dec
jb
sub
pop
fnsave
cmc
push
adc
pop
cmc
pop
xlat
movsb
push
addr16
ret
aaa
add
addr16
pop
push
xchg
lea
xor
mov
dec
shll
rcrb
mov
aas
sub
das
push
idivb
xchg
jg,pt
lock
leave
sahf
cmp
scas
es
ljmp
xchg
xor
pusha
mov
mov
pop
pop
ret
bound
mov
push
push
mov
lods
daa
lods
lods
in
movd
pop
vmovntps
mov
movsl
cmp
popf
es
lcall
jnp
sub
inc
ja
js
cli
add
pop
lret
mov
mov
ret
out
popa
sbb
fs
mov
mov
jmp
inc
and
xchg
pop
pop
in
or
push
push
in
lds
xor
xchg
loopne
mov
sub
ss
ret
sbb
ljmp
or
or
adc
mov
shrl
pop
push
push
divl
xor
repz
push
in
lock
jge
jnp
xor
sub
rcrb
dec
in
xchg
adc
xor
mov
decb
arpl
bound
enter
mov
jne
lods
dec
mov
inc
dec
cld
scas
int
dec
ja
xchg
cmpsl
xor
inc
in
popa
cmp
adc
nop
rcl
sti
in
stos
dec
mov
lds
push
shlb
mov
aam
fsubs
push
bound
imul
add
mov
xchg
mov
mov
or
adc
mov
push
mov
fs
lea
cmc
xor
bound
mov
mov
cmp
out
in
cmpsl
jp
sbb
or
jns
jns
movl
sbb
mov
sbb
xorl
fiaddl
daa
fdiv
jmp
sahf
mov
jb
and
or
sahf
hlt
test
or
push
xor
sub
popa
mov
mov
xchg
mov
das
cmp
push
jns
lods
mov
inc
pusha
xchg
and
push
mov
xor
xor
mov
add
jle
out
or
pop
push
sbb
jl
lcall
xor
sub
sub
and
xorl
jmp
adc
mov
xchg
xchg
mov
add
pop
adc
imul
adc
repnz
lret
xchg
xchg
scas
and
mov
dec
repnz
sarl
add
xor
xor
or
dec
inc
jne
sbb
les
test
jmp
push
mov
ss
cld
jmp
mov
inc
sbb
mov
cld
push
movsb
xchg
dec
cwtl
add
sub
push
test
ja
push
mov
inc
inc
into
jo
in
sti
dec
mov
cli
cmp
movhps
sbb
push
rcrl
xlat
jae
dec
cmp
inc
fisubl
js
mov
cmp
je,pt
std
das
out
hlt
mov
inc
les
sub
cltd
outsb
jns
adc
popa
pop
stc
es
jne
hlt
es
jae
or
adcl
xchg
jmp
ret
push
push
pop
fldt
daa
icebp
jbe
in
mov
push
cld
lea
jle
int3
mov
in
fists
mov
mov
adc
inc
ja
inc
das
and
fs
push
inc
enter
mov
pop
cmpb
pop
mull
jno
xchg
outsl
and
nop
pop
js
push
aaa
adc
mov
sub
mov
mov
test
adc
fwait
loop
xchg
scas
arpl
ljmp
int3
xchg
icebp
dec
sub
lahf
iret
test
icebp
fimull
aas
mov
and
outsl
mov
std
es
fwait
add
and
xlat
push
push
mov
sub
stos
decb
mov
enter
outsl
inc
mov
cmp
inc
pop
sub
insb
pop
icebp
xchg
outsl
push
js
add
mov
aad
mov
dec
xor
cmp
mulb
mov
and
add
call
inc
aad
push
loopne,pt
xlat
jne
mov
dec
push
push
push
inc
nop
cmp
push
push
call
push
sbb
add
out
pop
cmp
xchg
test
xlat
xchg
pop
cmp
and
adc
push
imul
xchg
repz
sub
into
mov
lret
pxor
sbb
js
inc
pop
fwait
shrb
jo
jbe
addl
std
jecxz
pop
fisttpl
mov
lock
leave
insl
loopne
xor
lret
stc
mov
sub
pop
lods
cmp
sahf
pop
adc
push
in
mov
inc
push
or
shll
or
cmpsb
xchg
xchg
fs
cwtl
cmc
or
in
inc
pop
inc
pop
xchg
aaa
into
clc
mov
sbb
mov
sbb
inc
imul
int
xor
jns
in
into
lret
jmp
pop
or
out
out
imul
incl
repz
and
mov
jle
sbb
xchg
orb
dec
sbb
movsl
into
xor
mov
clc
ret
xor
inc
inc
xchg
shl
setne
jge
push
lret
and
xchg
push
xchg
lods
out
push
out
cld
js
adc
cld
cld
cmp
ret
push
dec
dec
dec
or
ds
sub
fdivrl
mov
xchg
int
insl
cmp
mov
negl
jge
push
cmc
aam
add
push
sub
jge
pusha
mov
cwtl
lret
pop
jns
or
cmpl
fcoml
push
and
fnstsw
adc
xchg
pusha
stos
adc
jge
push
lret
push
or
sahf
mov
sbb
xor
ret
lds
inc
ja
xchg
testl
test
out
out
sub
jp
add
fimuls
mov
push
std
in
mov
and
decb
xlat
inc
rcrl
movsl
mov
mov
cmc
mov
dec
dec
adc
add
inc
push
cmc
cwtl
jle
shr
jle
rcrb
mov
jle
adc
inc
mov
sbb
lock
pop
pop
in
xor
cli
imul
fsubrs
lret
into
rcl
in
add
insb
sub
lods
push
stc
mov
adc
adc
out
mov
and
sub
push
push
xchg
in
movsl
sub
mov
loope
stos
mov
xor
jl
and
dec
popa
dec
cli
jecxz
push
pusha
sarl
fucomp
pop
jmp
sbb
orl
push
xlat
jle
fwait
sbb
sub
mov
inc
inc
insl
or
or
fs
sub
cmpsl
ret
outsb
mov
aas
pusha
rcrb
xchg
xchg
sbb
sub
loope
sbb
inc
push
add
icebp
xchg
mov
outsb
sbb
cwtl
mov
lds
test
xchg
adc
cmp
aas
out
pop
std
lret
push
sti
inc
movsb
test
leave
lds
aad
add
imull
addb
pop
imul
popa
mov
xor
insl
jns
dec
mov
in
lods
popf
in
sub
call
cmpsb
mov
jle
sbb
dec
xchg
xchg
stos
mov
add
jge
xchg
aam
adc
mov
call
add
dec
nop
push
push
aas
inc
les
push
sbb
xchg
xchg
fnstcw
mov
test
les
cmpsb
lret
jo
sahf
aam
add
mov
push
mov
sub
enter
or
push
sbb
sbb
dec
sub
les
or
dec
cltd
idivl
cmp
js
cli
and
dec
test
mov
rorl
push
mov
sbb
push
shll
clc
cmp
or
imul
outsl
sub
arpl
add
jo
dec
or
fwait
push
rorl
push
mov
das
mov
xor
or
push
fnstenv
lods
jae
sub
in
pop
adc
mov
pusha
and
sbb
daa
loopne
and
jle
add
outsb
pop
popa
in
aaa
or
in
jp
lods
and
std
sub
pusha
fwait
js
aas
ljmp
out
lods
notb
ret
push
aas
and
sbb
mov
sbb
ss
or
jne
lock
or
adc
in
ljmp
adc
mov
out
xor
fwait
pushl
cli
adc
and
fisubrs
aas
add
mov
addl
mov
cli
push
push
add
xor
xor
repnz
rolb
push
xchg
pop
scas
sbb
icebp
mov
inc
push
dec
mov
pop
inc
or
popa
mov
inc
cwtl
cmp
test
or
jno
fistpl
aad
test
pusha
dec
aam
or
imul
lock
mov
andb
out
jo
pop
mov
push
ss
cs
data16
rcrb
imul
fs
cmpsl
xor
es
std
jno
leave
sbb
xor
test
mov
les
ljmp
clc
mov
push
ds
inc
pop
jnp
inc
fisubrs
xor
pop
mov
jno
cli
lcall
scas
add
sbb
xor
sbb
mov
loopne
aaa
ljmp
mov
adc
inc
lock
pusha
in
test
lods
movsb
fwait
inc
jl
inc
scas
xor
cmp
cltd
xchg
fadds
ret
push
cltd
fwait
add
or
push
cmpsl
add
pushf
cmp
fdivs
cmpsl
das
clc
in
push
add
outsl
dec
mov
and
popf
cmc
dec
test
adcb
dec
insb
imul
push
dec
cltd
mov
or
scas
nop
aaa
dec
lea
cmp
test
adc
xchg
arpl
xor
out
in
or
pop
add
cmpsb
mov
and
subl
xchg
mov
xchg
cmp
rcr
ss
xchg
xorb
cmp
xor
mov
cmpsb
dec
enter
jg
mov
stos
int3
sub
jg
fadd
cmpsl
into
inc
mov
push
jo
jne
mov
inc
xchg
in
or
pop
dec
and
xchg
iret
inc
jmp
decb
out
test
sbb
fstps
add
test
mov
mov
fwait
sbb
mov
dec
lds
xor
inc
int3
rolb
mov
les
pop
cmp
inc
lods
scas
in
fcomps
aas
jp
sub
sub
xor
xchg
lock
jno
and
and
pop
cmp
mov
imul
add
dec
in
sbb
es
xchg
test
repz
loop
ret
stos
push
js
clc
inc
jge
dec
pop
not
adc
jno
stos
hlt
shrb
add
add
mov
mov
arpl
enter
xor
loopne
xor
mov
jae
je
sub
xchg
mov
cmp
xchg
out
clc
movsb
xor
movsb
mov
icebp
adc
dec
pop
sbb
out
push
xchg
mov
push
rcll
test
inc
lock
jo
mov
pop
fwait
movsl
mov
xchg
pop
cmpsl
mov
loope
fs
xor
push
mov
and
mov
jae
pop
aad
push
xlat
unpcklps
xor
aam
lods
mov
inc
je
movsb
outsb
inc
enter
mov
mov
mov
mov
cmpsl
push
roll
fisubrs
repnz
jbe
adc
xchg
sbb
xchg
cmc
push
push
bound
sbb
scas
and
sub
sbb
fs
jge
in
pop
js
xchg
push
adc
ret
adc
pop
aam
cmp
xor
je
lcall
push
xor
test
adc
and
js
mov
jp
fnsave
ss
lea
jle
mov
movsb
ljmp
cmp
mov
in
xchg
add
aam
xor
push
jmp
pop
xchg
rcrb
inc
aam
pop
popa
push
or
adcl
and
fs
adc
mov
xor
shrb
bound
mov
andl
pop
fs
add
inc
je
push
add
add
or
cmp
shlb
mov
in
insb
out
pop
dec
cmpsb
subl
dec
mov
xchg
sbb
pop
sar
mov
das
pop
popa
mov
xor
mull
filds
sbb
outsl
sub
pop
ja
cmpsb
fisubrl
jecxz
dec
jo
rcll
cmp
int
sbb
imul
cli
push
lcall
mov
or
fwait
inc
xchg
sub
ret
ljmp
mov
fldenv
inc
loopne
push
xor
xchg
mov
mov
pop
sbb
mov
rcll
dec
or
lahf
dec
imul
in
mov
insl
xchg
mov
jle
imul
mov
imul
test
lret
xchg
enter
cltd
jmp
imul
into
jl
daa
or
mulb
sub
pusha
pushf
push
test
pop
outsl
fnstenv
arpl
push
in
xchg
push
adc
popf
or
sbb
in
push
mov
out
xchg
mov
cmp
mov
xlat
jno
jmp
mov
jp
sbb
and
lock
jae
stos
cmp
or
mov
pop
shrb
faddl
ret
push
pmuludq
xor
add
mov
fidivl
sti
cwtl
push
call
cmp
adc
mov
cmp
push
inc
ret
jnp
push
jp
insl
xchg
fisubrs
leave
fistps
push
mov
iret
lcall
gs
aaa
out
jl
test
out
cmp
sub
sti
int3
push
pop
arpl
xchg
popa
xchg
mov
mov
movsl
call
hlt
lods
pop
jbe
pop
jb
aas
cmp
stos
push
pop
xchg
daa
out
in
inc
addr16
shll
and
dec
call
data16
scas
and
cmc
add
inc
hlt
xchg
mov
bnd
add
fisubrs
dec
loop
imul
lret
arpl
mov
inc
dec
stos
sti
jg
inc
sbb
xor
loope
lret
rcrb
mov
movsb
sub
dec
inc
xchg
push
mov
lahf
sub
mov
mov
jg
or
cmp
out
xor
adc
fldl
pop
sbb
out
test
loope
sub
sub
shlb
test
sbb
or
adc
cmp
jmp
jbe
jmp
mov
pop
and
rcrb
les
sbb
negb
xor
cs
xchg
cld
adc
and
in
scas
xchg
dec
ds
divl
xor
jge
pop
test
je
sbb
dec
pop
and
jmp
mov
lods
xchg
sbb
les
outsl
stc
sti
add
jp
aas
fsubr
push
mov
add
jmp
and
ret
cmc
rorl
cmp
jle
or
aam
repnz
jbe
icebp
getsec
imul
lea
push
mov
imul
sub
loope
lret
lret
pop
fidivrs
pop
inc
sub
test
jmp
cmp
insb
sub
push
jecxz
gs
mov
add
mov
pop
inc
dec
mov
cmp
mov
mov
scas
sub
repnz
xor
dec
push
shrb
es
mov
dec
std
or
stos
jnp
popa
repnz
in
sbb
and
jnp
rcl
sbb
mov
jne
xchg
push
movsl
pop
mov
mov
insb
shl
jg
add
pushl
test
fldt
xchg
test
jp
cmpl
and
call
xchg
push
jbe
xor
test
xor
mov
mov
fsts
insb
adc
sbb
mov
sbb
std
in
sbb
or
out
ret
fisubrs
push
sub
push
icebp
lods
mov
pushf
push
shll
push
push
jbe
pop
aas
dec
or
inc
or
repnz
mov
pop
lahf
bound
ret
jp
xchg
insl
sub
das
or
jl
arpl
loope
out
cs
rolb
dec
xchg
and
cli
dec
imul
push
iret
in
xor
test
mov
aam
adc
ret
pop
dec
sub
pop
xor
adc
xor
sub
in
jno
in
stos
test
dec
int3
frstor
cmp
stos
adc
dec
test
mov
adc
and
cmp
inc
cs
jg
std
xchg
gs
fwait
xchg
scas
fstpl
or
aaa
sbb
cmp
arpl
fabs
mov
jbe
lods
inc
add
enter
mov
loopne
shll
adc
repz
outsl
pop
cli
dec
inc
aas
sbb
xor
mov
outsl
mov
test
mov
jp
stc
xchg
or
push
jno
pop
mov
mov
push
pop
lods
data16
cli
jmp
cmp
mov
adc
pop
jno
mov
jmp
lock
out
jnp
inc
pop
mov
fstps
adc
mov
add
or
pop
push
xlat
xchg
pop
loopne
jle
rcrl
pop
add
repnz
push
add
xor
js
xrelease
jecxz
iret
inc
lods
hlt
es
sub
xor
jno
mov
ja
xchg
adc
fistpl
xchg
ljmp
dec
xor
loopne
test
cmpsl
aaa
les
mov
sahf
mov
push
add
inc
sti
jne
in
push
in
je
push
inc
cmp
push
and
pop
notrack
inc
cmp
inc
les
jbe
cmpsl
shlb
or
and
mov
xchg
jo
aas
sub
ds
mov
and
cltd
lret
int3
pushf
outsl
loop
movsl
pop
popa
jge
cmp
push
subb
pushf
jle
add
pop
std
inc
clc
es
xor
jb
testb
adc
xlat
xchg
push
mov
es
xchg
call
jecxz
sahf
cmpsb
ljmp
dec
inc
mov
push
cmpsb
mov
cmp
push
xchg
iret
js
sub
mov
sub
in
adc
push
sbb
data16
or
in
mov
test
push
aad
mov
jle
cmc
movsl
push
cli
dec
aas
xchg
out
dec
mov
aad
mov
jge
gs
dec
cmp
push
fisubs
inc
loop
aas
pop
stc
jne
scas
sbb
sub
sub
repz
xchg
xchg
push
xchg
mov
sbb
push
or
aas
enter
pop
sti
jg
adc
ret
leave
xlat
jo
add
jno
pop
mov
std
pushf
bnd
cli
inc
loop
cmp
mov
adc
movsl
xchg
inc
mov
movsl
add
xchg
xchg
into
movnti
dec
dec
push
popf
ficoms
mov
repnz
pop
xchg
daa
mov
pop
shrl
or
loop
xor
mov
cmp
inc
pop
push
sbbb
xor
imul
sub
fadds
sbb
cmc
leave
push
scas
lret
sbb
aam
push
ljmp
jne
lock
dec
outsb
jge
lahf
gs
add
int3
or
xor
lock
sbb
out
mov
sbb
push
dec
push
shll
imul
ljmp
lea
pop
cmpsb
push
or
cmp
rolb
aad
fidivs
sub
mov
daa
push
xchg
jnp
cmc
iret
nop
nop
nop
pop
lods
mov
xchg
in
mov
xchg
mov
aam
leave
into
cmpsl
and
data16
sub
sbb
ds
xchg
push
jns
jmp
xor
jb
in
fisubrl
or
out
adc
movsb
insb
adc
test
ss
add
push
sbb
mov
cmp
outsl
push
xor
cwtl
outsl
and
mov
pop
and
jmp
xorb
xchg
into
sub
and
pop
xorb
cmpsl
xchg
int3
pop
fsubrp
jle
sbb
mov
xchg
inc
sub
push
xchg
jb
pop
outsb
xor
ljmp
push
in
nop
arpl
pop
adc
inc
fisubs
std
jle
inc
test
out
sahf
aad
in
xchg
xchg
clc
adc
xchg
sub
mov
les
clc
jp
aam
push
out
dec
xchg
lret
mov
popa
enter
cmpsl
push
hlt
push
and
xchg
dec
and
adc
aam
add
push
adc
pop
fldt
push
sbb
push
stos
pop
jns
pop
mov
aas
test
mov
out
dec
gs
ja
mov
jg
fsubrl
adc
pop
add
add
sbb
popl
push
repz
les
jl
or
movq
mov
xor
iret
mov
adc
push
fstp
inc
push
jp
and
cmpsl
push
cli
in
jnp
shll
ret
int
cmp
adc
dec
mov
mov
adc
test
xlat
jle
mov
jnp
push
sti
or
adc
xchg
inc
mov
andb
divb
int3
cmpsb
mov
arpl
push
loopne
xchg
sub
lret
xor
sbb
add
push
stos
lods
sub
adc
insl
jne
add
inc
test
fsubrs
sub
shl
jb
fdivrp
pop
push
repz
rolb
out
xor
mov
flds
jns
negl
cmp
aad
adc
neg
outsb
and
sbb
push
mov
cmp
mov
mov
lret
mov
xorl
sub
mov
ss
sbb
sti
and
popa
xchg
pop
add
mov
ljmp
xor
bound
sbb
lock
data16
push
movsb
orl
std
mov
sti
icebp
adc
dec
add
js
sti
jne
out
int3
cltd
xor
or
fldenv
sub
xchg
lock
mov
mov
mov
mov
stos
fistl
lcall
sub
inc
mov
sti
push
sarl
mov
in
sbb
rcr
incl
lret
les
movsl
jle
repnz
add
sti
rol
sub
adc
xchg
shl
pop
or
xchg
inc
push
into
add
roll
testl
sub
pop
xchg
out
pop
movsl
mov
cmp
cmc
aas
sub
sbb
adc
jae
cmpsb
jp
xchg
adc
lods
dec
leave
dec
sub
das
stos
dec
xchg
daa
jne
ret
cmp
dec
sbb
jp
mov
lret
sbb
rcrb
mov
lds
popa
jae
out
ja
pop
pop
jne
sub
mov
or
dec
aas
outsb
sbb
or
into
popa
mov
lods
inc
rorb
add
nop
jg
fidivs
aam
fists
or
jp
sub
or
adc
dec
movsl
push
ja
jg
stos
push
loope
push
aam
dec
mov
push
sub
lcall
cmp
cltd
mov
hlt
jl
sahf
ret
push
xchg
pop
jge
scas
push
mov
or
incb
sbb
sub
shrb
cwtl
adc
not
decb
imul
int
sub
pop
mov
out
loope
shlb
adc
mulb
adc
mov
and
mov
shll
movsb
cmp
in
inc
loop
ret
nop
xlat
xlat
xlat
jb
push
rorb
or
pop
jae
std
test
mov
mov
sbb
jge
mov
insb
sub
push
sbb
fwait
pushf
mov
cmpsl
cmp
jmp
inc
mov
pop
pop
jns
outsl
add
cld
lret
and
xor
pusha
cld
xchg
xor
pusha
xor
ret
into
daa
int3
negl
scas
fstps
test
insl
scas
mov
stc
test
xlat
push
jns
divb
ret
pusha
jno
xchg
cltd
jl
sbb
dec
jecxz
or
xor
cwtl
add
mov
jmp
test
arpl
inc
jp
pop
mov
mov
push
inc
scas
into
scas
sti
dec
aam
aaa
inc
xor
inc
sub
test
xchg
mov
push
xor
xor
scas
into
inc
mov
mov
cmp
aad
leave
mov
mov
add
cs
ret
cmp
je
cs
arpl
cmp
mov
mov
leave
push
mov
push
mov
aaa
stos
mov
loopne
pop
je
pop
lock
int3
pop
pop
stc
into
push
fisttps
xor
in
test
add
shll
pop
notl
pop
aas
sub
pop
push
rol
lods
sub
imul
pop
stos
jg
jbe
bound
push
push
popf
mov
xor
in
dec
ss
adc
rclb
idivl
inc
mov
xchg
fadd
gs
shll
das
mov
sarl
data16
and
xchg
outsb
rcrb
dec
lret
fisttpll
cmpb
mov
rcrl
ja
mov
data16
and
lret
nop
cmp
scas
add
loope
fs
adc
clc
adc
decl
outsb
inc
inc
call
rolb
in
dec
in
in
insl
mov
mov
pop
jbe
xlat
lods
nop
jecxz
jmp
push
test
sub
dec
dec
stos
adc
je
adc
mov
stos
ret
and
jl
cmc
data16
movsl
sub
xchg
sub
sbb
and
cmpsb
and
and
push
iret
add
mov
push
push
jne
add
cmp
bnd
jbe
jge
push
mov
xchg
popa
and
ret
imul
sbb
inc
xchg
jmp
lret
pop
mov
dec
inc
mov
push
push
xchg
lds
rorb
xchg
mov
jo
mov
dec
xchg
mov
loop,pt
pop
add
xor
xchg
insl
retw
lret
lret
popl
lret
iret
xchg
and
sti
repz
xor
push
add
imul
or
loopne
mov
jmp
and
xchg
xchg
push
int
push
push
test
test
xchg
arpl
inc
int3
sbb
or
fidivl
cmp
push
rorl
dec
loopne
enter
push
test
int
pushf
in
and
push
add
mov
aam
sahf
add
popa
lret
jns
sbb
clc
int
dec
cld
push
gs
mulb
xchg
xor
dec
jbe
sbb
mov
sbb
add
pop
call
insb
call
and
inc
inc
push
mov
adc
mov
lds
sub
mov
lods
jmp
movl
cmp
lret
cmpsb
fisubl
mov
ror
lods
cmp
or
mov
mov
imul
xor
test
xchg
dec
addb
pop
and
cld
xchg
jp
pop
rorl
into
ret
jg
xchg
sbb
lahf
xchg
push
test
out
cs
sub
ss
insl
pop
in
mov
test
sub
mov
dec
pop
pop
dec
xor
sti
in
push
lcall
xlat
aad
cmp
mov
fdivrl
dec
shlb
call
lret
cmpsl
aad
fcoml
mov
cld
insb
inc
xor
adc
mov
repnz
call
ss
or
sti
xor
test
pop
stc
xchg
aam
push
pop
push
jg
mov
scas
xchg
sub
mov
sbb
mov
push
lods
mov
ret
or
pop
fwait
stos
mov
inc
popf
mov
cmpsb
test
test
ljmp
add
jns
pop
xor
stos
xlat
sarb
sbb
mov
shlb
mov
iret
xor
pop
and
push
cmp
jg
inc
fcomi
out
sub
push
andb
insl
mov
aaa
push
xor
movb
lahf
sti
shufps
inc
dec
push
jnp
pop
inc
lahf
outsb
lea
cmp
and
mov
sbb
or
test
cmp
andb
adc
enter
gs
and
xchg
pop
mov
push
movsb
xchg
mov
ja
inc
xlat
sbb
cli
ret
cwtl
and
cmpsb
scas
lods
xchg
push
dec
mov
add
pmullw
sub
in
js
sbb
jg
testl
sbb
jns
into
imul
mov
mov
ret
dec
cmpsb
je
aam
clc
loopne
out
cld
inc
xchg
scas
lret
test
jmp
pop
push
pop
pop
mov
dec
vrsqrtps
pop
stos
fs
xor
push
stos
cmp
push
mov
ljmp
test
iret
pop
pop
dec
push
rcl
adc
mov
jecxz
daa
push
sbb
push
mov
ja
test
or
ja
adc
fdivrl
lret
sbbb
cs
inc
dec
loop
sub
adc
jns
dec
pop
or
mov
cmpsb
fmul
iret
into
xchg
dec
das
and
push
js
les
pop
ds
sub
mov
xor
mov
incl
test
js
dec
mov
xchg
sahf
dec
dec
push
adc
popa
in
sbb
push
cli
iret
or
jno
jae
mov
cli
jl
addr16
push
repnz
movsl
cmp
dec
xchg
cmp
adc
jecxz
sbb
inc
aam
lods
and
insl
les
insb
xchg
xchg
imul
or
inc
sti
push
xor
jge
divl
xor
push
add
insb
inc
cmp
cmp
add
ret
call
insb
adc
insb
push
mov
inc
adcl
out
lret
xchg
xor
pop
enter
fimull
cmp
add
and
and
je
add
dec
insl
cmp
shrl
adc
clc
sahf
jle
pusha
jecxz
push
xchg
sub
xor
aam
jmp
pop
sbb
mov
rorl
lock
cmpsb
jge
pop
push
add
xchg
xorl
cmp
aam
gs
sub
push
arpl
push
es
fiadds
testb
push
inc
insl
cmp
and
adc
pop
jo
cmp
mov
mov
mov
dec
dec
out
ret
out
jl
xlat
idiv
outsb
dec
clc
push
push
fdivr
lds
popa
add
outsl
push
in
lcall
jnp
cmpsl
xor
dec
ficoml
dec
pop
inc
jle
xlat
mov
loope
push
inc
test
sbb
lods
lea
cmp
shr
addr16
or
xor
push
lcall
cmp
int
movsl
stos
push
dec
fsubs
cmp
add
push
mov
add
cmp
xchg
dec
hlt
xchg
and
xor
cmpsl
mov
int3
in
add
loopne
xchg
lcall
mov
mov
pop
fldl2t
lret
jp
sbb
pop
or
add
pop
aaa
dec
stos
or
xchg
and
lds
inc
cmp
mov
pushf
test
nop
bound
push
xchg
or
inc
mov
mov
ja
xchg
xor
test
cli
stc
test
adc
test
sti
daa
adc
cmpsl
testb
xchg
pop
insl
add
sahf
jge
mov
shlb
cmp
lret
jecxz
lock
lea
out
mov
or
xlat
push
inc
iret
out
icebp
xor
pop
cld
cmpsb
mov
rcll
pop
pushf
dec
adc
mov
mov
xchg
addr16
xchg
or
addr16
ja
jnp
das
inc
add
lods
pop
ret
bound
mov
jo
ficomps
es
xchg
mull
ret
push
jmp
push
loop
test
adc
xor
ss
adc
push
jns
test
cmc
test
mov
and
xor
mov
addr16
je
andl
out
dec
fstp
mov
fcoml
rorl
and
xchg
add
pop
inc
pop
mov
lret
fcoms
mov
dec
lods
fs
sub
ret
push
sub
pushf
adc
xlat
pusha
dec
adc
mov
ss
clc
adc
shlb
imul
cmp
aaa
sbb
sub
popf
call
cmpl
push
dec
adc
repz
orl
add
stc
mov
xchg
jmp
out
push
add
inc
cmc
pop
fsub
shlb
jbe
xor
xchg
xor
incl
pop
push
cmc
clc
mov
xor
mov
aam
cmp
repz
and
mov
jp
mov
out
clc
dec
jp
fdivr
push
jbe
jg
mov
in
and
pop
outsb
rcrb
pop
pop
in
aam
gs
xor
rcrl
mov
mov
fwait
pop
mov
jo
cmp
ret
mov
aaa
xchg
jnp
and
out
xchg
dec
adc
and
ds
or
repnz
or
vpermb
cltd
inc
imul
ss
mov
push
mov
jmp
aad
and
je
in
fiadds
adc
adc
pop
hlt
xor
pop
inc
mov
stc
and
hlt
sbb
sbb
push
loop
rcl
push
dec
cmpsb
stc
cmp
pushf
adc
cmp
push
xor
nop
xchg
stc
popa
cmp
mov
mov
imul
and
and
int3
mov
mov
dec
mov
cmp
int
inc
dec
aas
adc
push
fsubrs
and
mov
mov
pop
dec
daa
pop
xchg
mov
cmp
add
push
repnz
xchg
fbstp
js
push
in
inc
pushf
fnsave
out
loope
inc
out
lock
clc
push
repz
gs
sbb
movsb
cmp
cmpsb
movsl
lods
cli
sub
or
loope
push
pusha
sbb
xor
sti
inc
and
ds
mov
dec
adc
vandnpd
popf
sbb
dec
in
dec
jecxz
gs
fs
iret
jl
loope
in
pop
xchg
or
xchg
push
mov
adc
cmp
and
jns
mov
les
fisubrl
sbb
ret
xchg
inc
cmp
mov
or
pop
xchg
je
mov
xchg
fiadds
xor
add
xor
sbb
aam
dec
jo
das
mov
pop
cmp
iret
mov
mov
push
or
mov
shrb
jae
movsl
inc
gs
jmp
cmc
mov
push
sub
aas
nop
loop
repz
sub
cmp
sbb
xor
inc
stos
cmp
xor
lret
cmp
mov
add
mov
mov
sbb
movzbl
std
shlb
xchg
sar
std
mov
ss
xchg
push
cmp
add
test
cmp
cmp
pop
sbbb
jecxz
pop
inc
mov
or
imul
pusha
pop
stos
outsl
add
jp
testb
sub
test
push
push
jg
les
inc
insl
adc
icebp
les
pusha
cltd
xor
or
sbb
lcall
sub
in
adc
in
repz
push
pop
mov
push
movsb
push
adc
std
stc
add
cmpsl
sbb
sbb
xchg
in
dec
mov
add
push
add
ret
sub
inc
push
xlat
or
push
sarl
mov
jmp
out
and
dec
std
clc
inc
pop
aam
pop
inc
sbb
scas
idivl
inc
or
std
psubq
mov
loopne
push
repz
push
bsr
and
adc
sbb
adc
fnsave
shll
xor
jno
dec
nop
ja
xchg
and
adc
hlt
and
pop
jmp
xchg
das
mov
out
test
xor
ret
push
jns
or
cmp
cmp
or
stc
xchg
sub
lea
int3
ds
fistpl
dec
dec
ret
enter
ret
xchg
mov
sbbl
mov
imul
loope
sub
repnz
dec
jae
push
and
out
shrb
pusha
push
mov
sbb
mov
out
inc
or
sub
pop
push
adc
xor
dec
xchg
xchg
lret
stos
mov
addr16
movsb
cmp
sbb
xchg
je
rcrl
in
xchg
icebp
mov
lods
les
lods
stc
add
xlat
imul
test
repz
dec
in
mov
in
pop
ds
shll
arpl
jno
xor
popf
sbb
xor
lods
and
xor
cmp
mov
push
call
mov
stos
imul
jns
repnz
in
cmp
pop
sbb
loop
clc
sub
loopne
add
and
xor
xchg
xchg
inc
movsb
inc
xchg
pusha
lahf
cmpsl
xchg
lcall
inc
shr
cli
mov
and
jg
sbb
cmp
jp
pusha
scas
and
aad
dec
dec
or
sti
add
andl
and
les
sahf
sbb
imul
into
fucompp
xor
popa
sbb
or
enter
pop
les
aaa
pop
in
out
icebp
sub
push
sbb
inc
push
aam
cltd
cli
sahf
jge
jge
sahf
cwtl
clc
repz
add
xor
in
insb
or
ss
pushf
add
and
lcall
xorl
rcl
jne
and
mov
cmp
push
into
cmp
sti
fidivrl
imul
in
cmp
xlat
out
out
mov
mov
dec
ret
and
jo
xor
insb
sarl
mov
inc
ss
scas
inc
dec
pop
add
or
and
insl
mov
ss
loope
xor
dec
fld
scas
roll
sbb
mov
pushf
fimuls
jle
xor
ret
je
mov
out
jle
loop
cs
mov
mov
test
pop
mov
cmp
inc
js
mov
lcall
and
mov
stos
sub
jle
test
mov
cli
mov
roll
cltd
pop
cmp
ljmp
movsl
loop
in
push
stos
cmp
and
aad
pop
push
inc
inc
addw
dec
xchg
push
xchg
shrl
jl
cmp
lods
mov
jmp
sub
dec
xchg
stos
daa
mov
test
scas
fucomp
movsb
aaa
ss
or
add
outsl
loope
das
mov
fstpt
into
stos
aas
cld
lret
hlt
aas
lahf
mov
pop
inc
xor
push
lahf
cmc
pop
inc
xchg
xor
jg
imul
mov
data16
xchg
pop
jle
sbb
scas
sub
inc
add
ds
in
adc
sbb
movb
loop
or
inc
mov
and
fnsave
dec
inc
aam
fcoml
mov
xchg
aas
hlt
push
enter
daa
push
xchg
mov
daa
push
fisubrl
sbb
fstl
sbb
jae
js
or
fldl
mov
jl
sbb
fwait
jl
pop
filds
addr16
jb
movsl
sub
stc
xor
cmpsl
in
sbb
inc
pushf
cmpb
movsb
push
cmp
ret
xchg
jg
inc
xor
int
xor
adc
dec
fsubl
and
sti
clc
mov
fwait
cltd
xor
dec
into
adc
mov
dec
cli
xchg
jns
clc
pop
cs
leave
inc
cltd
movsl
push
divps
lock
je
mov
xlat
mov
sub
pop
gs
dec
aad
dec
mov
mov
hlt
scas
rcrb
push
repnz
in
int
sub
xor
inc
dec
inc
jbe
fisubrl
gs
insb
and
es
adc
call
pushf
add
ja
mov
stc
sbb
fcomps
gs
sbb
movb
xchg
into
pop
mov
popa
sahf
clc
mov
mov
fsubs
cmp
jnp
insb
cltd
push
stos
nop
test
jo
inc
pop
fdivl
sbb
adc
dec
call
lret
xchg
dec
popl
in
xor
mov
or
push
addb
dec
popa
or
or
mov
dec
jl
out
icebp
shll
mov
inc
imul
orl
inc
push
xlat
or
jnp
and
or
mov
pop
shrb
outsb
scas
mov
mov
pop
repnz
jnp
mov
in
std
das
test
mov
inc
dec
jbe
pop
mov
shrb
test
js
scas
inc
fimull
fs
and
scas
stos
out
push
xchg
mov
push
dec
jbe
adc
cs
mov
jae
lret
or
out
lock
cmp
mov
push
insl
in
push
int
int
insl
cmc
shll
arpl
adc
add
adc
std
cmc
stos
cmpsl
jbe
dec
pop
push
aas
pop
out
dec
in
xor
jno
sarl
push
stos
int3
adc
enter
into
cmp
add
jle
out
adc
ss
push
pop
inc
and
xchg
lret
add
loop
fldt
scas
adc
bound
lea
fwait
mov
mov
lcall
pop
mulb
and
fimuls
lods
xchg
std
lret
outsl
or
lods
imul
jno
in
push
lret
xor
insl
hlt
mov
mov
push
xchg
in
lcall
mov
dec
dec
loop
xchg
dec
xchg
outsb
or
mov
jne
shrb
mov
push
loop
nop
mov
jecxz
insl
fst
fildll
fs
dec
add
cmpl
pushf
into
sbb
xchg
xchg
mov
aam
mov
loopne
lea
dec
sub
or
sti
sbbb
pusha
mov
xor
cltd
in
jne
adc
mov
pop
and
push
cld
jbe
in
mov
cmpsb
outsb
add
addr16
or
imul
add
outsb
movsb
enter
loop
insb
loopne
cld
mov
shlb
xchg
sbb
pop
mov
cltd
test
hlt
adc
jns
movsb
fcompl
jmp
add
daa
push
sub
jmp
fstl
in
xlat
pop
mov
mov
mov
add
enter
mov
in
int
xor
jns
xchg
fxtract
popf
cmp
jb
pusha
rorl
or
xchg
popa
cmpb
sbb
lods
rcrl
push
ja
xor
and
cmc
xchg
add
dec
pop
leave
push
icebp
mov
enter
lcall
cli
cwtl
movsl
mov
mov
fstpt
pop
insl
js
sbb
mov
mov
je
rclb
mov
push
pop
mov
lahf
fildl
icebp
inc
imul
xchg
orl
sbb
mov
sub
es
jae
js
fmuls
pop
cld
mov
call
sub
jl
and
daa
mov
lret
mov
insl
clc
dec
pop
mov
dec
add
mov
mov
xor
push
mov
adc
jo
mov
cwtl
sbb
or
ret
push
mov
xchg
mov
pusha
adc
insl
adc
dec
into
jae
ljmp
and
sub
adc
jne
mov
mov
mov
and
inc
repz
inc
adc
lods
dec
mov
and
stc
cld
jo
or
mov
negb
sub
dec
loopne
jge
cmpsl
inc
sbb
enter
jge
add
pop
fcoms
mov
push
pop
sub
movsb
inc
divb
xchg
mov
lods
sub
sub
sahf
inc
andl
or
mov
add
push
pop
fidivl
and
pop
clc
imul
shll
aad
sbb
daa
fsubrl
xor
mov
mov
or
xchg
push
jmp
adc
insb
mov
mov
das
subb
andb
dec
jmp
jle
sub
pop
movsl
fisubrl
xor
popf
xchg
notb
lret
fucom
fistps
outsl
aam
insl
push
jg
mov
push
ljmp
dec
stos
je
mov
daa
sbb
pop
pop
aad
in
mov
fcoms
stc
loope
lea
push
push
cmp
mov
testb
icebp
add
sub
out
iret
mov
aas
pop
andb
or
inc
movsl
outsl
dec
subb
xchg
sbb
shrb
leave
sub
sar
push
cmp
jecxz
cmpsl
arpl
aad
out
lods
push
jl
adc
ret
inc
jb
jno
rorl
mov
ja
mov
or
inc
xlat
and
or
mov
bound
pop
mov
outsb
cmp
and
jne
int
insl
pop
cmp
in
mov
cmp
lock
mov
ret
insb
xor
repz
movsl
xorb
xor
lahf
shl
lea
test
jnp
out
pop
xchg
xchg
or
sahf
clc
lret
iret
imul
lods
das
imul
hlt
fmull
xchg
mov
pushf
mov
mov
mov
fscale
pop
and
inc
push
mov
mov
enter
popf
inc
movl
outsl
lret
cli
inc
fistps
fwait
xchg
sti
push
sbb
mov
aam
iret
inc
jl
inc
inc
rclb
xchg
fucom
and
aam
dec
clc
dec
cs
fisubs
mov
jp
arpl
mov
jb
mov
loop
push
push
cmp
dec
xchg
das
inc
mov
push
pop
pop
loopne
lock
stos
and
mov
clc
es
push
xor
jp
mov
push
shll
xchg
arpl
pop
xor
add
lea
or
xchg
mov
xchg
xor
mov
jg
insl
cltd
pop
add
mov
dec
ja
fmulp
aam
sub
sbb
jns
ds
inc
ficomps
test
pop
jne
add
loopne
sbb
sub
jl
jo
jg
daa
into
dec
add
or
cmpb
mov
mov
mov
inc
lods
stos
enter
inc
js
mov
ret
and
pop
jne
jne
jle
stos
jne
xchg
sarl
test
and
rclb
sub
inc
jb
test
mov
aad
pusha
mov
xchg
test
out
jmp
inc
sarb
nop
sbb
lcall
and
test
icebp
mov
in
adc
mov
je
or
clc
out
jmp
mov
or
pushf
xchg
fs
test
mov
xchg
insl
das
out
aad
fcomip
or
xor
jns
jne
out
mov
inc
cmp
xor
aam
cmpsl
and
xor
mov
das
imul
addl
mov
popa
mov
ljmp
cmc
mov
popf
xchg
mov
jp
cmc
mov
sbb
and
pop
insb
sbb
loope
gs
rcrl
mov
mov
rcll
sub
xlat
movsl
loop
out
testb
mov
push
sub
cld
mov
and
xor
lea
or
fstpl
push
setns
call
dec
movsl
ficomps
add
es
adc
ja
jmp
std
repz
sub
dec
jle
cmp
into
adc
dec
and
mov
xchg
dec
fcmovb
add
ret
leave
negl
mov
movl
xor
add
sbb
add
and
cmp
ljmp
daa
cwtl
and
mov
sub
scas
push
sbb
lds
stos
pop
cmp
pop
pop
inc
inc
xor
sub
mov
lods
mov
dec
pop
push
mov
lret
popf
inc
cmp
cwtl
fldl
test
jne
cld
mov
sub
dec
add
or
addl
sub
leave
pop
int
frstor
pop
imul
push
xor
jl
cmp
cmpsb
mov
cmp
outsb
or
testl
inc
dec
push
out
sbb
and
and
dec
out
int
outsl
cmp
xchg
cmp
popa
mov
mov
fstpt
das
mov
test
mov
sbb
dec
std
aaa
cwtl
push
ja
mov
pop
push
mov
dec
aas
int3
jge
adc
dec
adc
pop
cmp
imul
mov
add
inc
adc
xor
add
sti
stc
rcll
add
push
rcrb
and
push
dec
fidivrs
xor
rcll
std
push
push
call
loope
cs
sub
jno
pop
push
fsub
dec
das
divl
lock
add
orb
jl
xchg
sbb
addl
jo
mov
inc
das
ljmp
xor
mov
pop
or
stc
mov
ret
fistl
mov
scas
jo
cli
gs
test
in
xchg
mov
adc
test
dec
fdivrl
or
in
fstl
sub
call
test
std
pusha
imull
pop
mov
jb
cmp
shr
mov
sub
mov
ja
inc
stos
imul
in
push
lods
je
jmp
dec
fnstcw
pop
mov
xor
inc
aam
mov
testl
sarb
cmp
adc
sti
outsb
je
xchg
mov
pop
inc
pop
idivb
push
js
fs
stc
add
repnz
test
loope
cmc
lods
imul
xchg
push
out
cmp
cli
cmp
inc
scas
mov
xchg
pushaw
mov
push
pop
popf
movl
jmp
scas
mov
inc
movsl
pop
jne
fimuls
lods
xor
cltd
rolb
push
sub
jne
mov
xchg
insb
add
cmp
mov
out
scas
test
mov
dec
cmp
xchg
ficompl
xchg
sahf
mov
in
xchg
dec
cmp
aam
push
xchg
in
scas
dec
or
adc
ret
jp
push
mov
dec
icebp
fisubs
mov
data16
sbb
rcrb
insb
enter
mov
xlat
and
sub
pusha
nop
xlat
movsb
jo
leave
jnp
and
jmp
push
shlb
jb
aas
imul
inc
or
mov
add
inc
imul
repnz
push
xchg
pop
ja
out
and
lea
lret
and
xchg
pop
dec
scas
ret
pop
cmp
sub
xor
insl
mov
or
imul
insb
std
pop
lea
add
shr
imul
mov
mov
adc
jno
mov
cli
insl
and
inc
loopne
cs
push
clc
mov
ds
popa
xor
fnstcw
mov
push
mov
cmp
pop
sbb
xor
mov
add
sbb
jl
inc
mov
std
jo
fucomip
push
inc
mov
scas
add
test
iret
mov
shll
jle
cmpsl
cmp
mov
mov
lds
inc
dec
lahf
xchg
lods
iret
jmp
mov
imul
mov
and
add
mov
pop
pop
mov
xor
mov
mov
imul
popa
stc
adc
pop
inc
sub
ljmp
mov
fnstsw
xor
pop
ret
cltd
jno
inc
sbb
lods
mov
jae
sbb
mov
lds
jne
scas
stos
jns
mov
add
add
ljmp
cli
sbbl
or
and
add
mov
dec
jg
dec
push
pop
mov
jo
push
jle
add
dec
pop
adcl
mov
or
out
test
sub
fstpt
lock
cmp
mov
mov
mull
test
jle
out
shl
inc
mov
pop
lret
lods
out
add
fistpl
cli
mov
jecxz
xchg
sub
negl
pushf
mov
mov
push
add
insb
add
cmp
mov
and
xchg
jns
inc
in
icebp
add
push
sbb
cwtl
fwait
sub
jecxz
je
dec
icebp
mov
cmpsl
mov
add
stos
xor
imul
cmp
push
mov
sub
adc
movsb
insb
movsl
xchg
insb
and
adc
insb
cmpsl
fdivrs
adc
xchg
cmp
xorl
and
leave
int3
xchg
cmp
addr16
icebp
pop
jbe
fstpt
cmp
es
insl
xchg
aaa
mov
cli
outsb
cmp
pop
int3
cmc
dec
ds
jno
mov
mov
jg
lock
mov
sbb
inc
or
jp
inc
and
jbe
or
enter
mov
mov
dec
andb
test
mov
cmp
insb
in
jns
pop
mov
icebp
push
cwtl
popf
adc
fwait
sub
lods
xchg
inc
and
scas
inc
jg
enter
enter
adc
xor
repz
and
fs
jne
cmc
fstl
mov
jg
adcl
aam
test
add
insb
out
mov
xor
push
pop
pop
fcmovu
shrb
lds
mov
mov
xchg
sub
mov
xor
pushf
push
jmp
test
subl
xor
cmp
pop
cltd
repz
lahf
mov
adc
jl
dec
test
outsb
iret
sbb
xor
test
cs
loope
xchg
pop
shr
lea
cmp
outsl
xor
pop
add
push
push
nop
cs
lea
jl
sbb
xchg
mov
dec
or
arpl
mov
aas
mov
sub
xchg
xchg
push
stos
inc
adc
fldcw
jmp
bnd
inc
cld
pop
out
lahf
jae
add
mov
fwait
add
fistpl
fsubp
cmp
push
lea
jmp
popf
fs
jnp
in
int
mov
xchg
fimuls
xchg
loop
mov
sbb
pop
scas
imul
xchg
push
sbb
push
ljmp
mov
jle
and
int
repz
mov
xorb
dec
and
mov
cmpsb
aam
fisttpll
xchg
hlt
pop
cs
push
test
mov
mov
xlat
in
mov
inc
fidivl
or
sbb
lock
cmp
sbb
cmc
xor
pop
jno
xchg
adc
mov
out
mov
jg
cmp
cmp
clc
xchg
mov
mov
adcb
cmc
fs
jp
push
bound
leave
insl
cmp
dec
lcall
out
add
std
push
xchg
out
aaa
ret
imul
shlb
les
sbb
mov
jae
jmp
inc
inc
adc
mov
lahf
add
imul
rcrl
test
loope
fnstenv
push
xor
frstor
in
mov
push
sahf
lahf
cs
inc
pop
imul
xor
dec
cmpsl
mov
push
dec
lret
hlt
cmp
cmpsl
and
orb
sbb
add
push
and
push
mov
aad
lds
pop
sub
sub
jg
in
decl
gs
testl
add
inc
and
out
inc
pusha
cmp
lods
jb
ficompl
stos
in
push
mov
fs
sbb
dec
add
ljmp
sub
ljmp
enter
inc
xchg
xchg
add
mov
adcb
cmp
pop
lods
xchg
pushf
js
xchg
xchg
mov
xor
jae
and
add
xchg
mov
lahf
add
fisttpll
add
push
pop
pop
lahf
pop
test
dec
lods
ret
shl
aaa
pop
addl
mov
xchg
xorl
sbb
fldl
add
std
and
fisubl
test
movsl
push
js
cmp
lods
lret
inc
cmp
add
rclb
jo
shlb
pop
out
or
push
push
sub
cs
jmp
loope
mov
pusha
sub
clc
aad
int3
dec
adcb
adc
cmpl
imul
fld1
stos
test
and
inc
loopne
pusha
sbb
imul
inc
push
push
cmp
cmpsb
dec
pop
adc
repz
mov
shr
insl
pop
inc
push
xchg
mov
mov
xor
jae
test
shll
imul
add
xchg
icebp
inc
mov
sub
mov
scas
or
bound
lds
js
popf
stc
lock
lods
pop
lea
sbb
cmc
outsl
push
pop
sbb
cmp
fst
and
mov
clc
xor
mov
mov
push
sbb
sub
fstpt
jg
jle
pop
movsb
test
dec
ret
push
xchg
lahf
add
mov
out
subb
inc
into
or
or
jge
sbb
jl
xor
jns
sbb
pop
loope
push
loope
test
scas
dec
fstl
nop
dec
mov
add
fidivrs
daa
arpl
outsl
andb
out
mov
mov
or
scas
mov
or
cmp
imul
mov
sub
pop
popw
aam
arpl
sub
cmp
jns
fnsave
int
loope
xor
inc
out
ss
add
shrl
add
fimuls
mov
cmp
mov
adc
sbb
pop
test
pushf
sub
call
rolb
in
sbb
ret
icebp
mov
outsb
ljmp
loop
addr16
jb
pushf
adc
pop
or
sbbl
outsl
mov
sbb
mov
outsl
inc
push
fdivrp
inc
adc
out
jg
xlat
arpl
fdivl
scas
aad
jp
or
pop
cmc
popa
mov
std
sub
shlb
fcompl
xor
cmpb
ds
test
adc
cwtl
xchg
dec
shl
cld
add
mov
lret
test
xchg
leave
divl
pop
mov
jp
cmpsl
cwtl
lret
push
mov
xchg
or
scas
pop
mov
adc
pop
nop
jmp
dec
psubusb
dec
sub
xchg
add
push
nop
enter
mov
sbb
adcl
pop
or
sahf
add
mov
push
hlt
inc
aaa
movd
fadd
mov
cmpsl
sbb
xor
aad
loopne
push
and
ja
fildl
add
sub
ret
test
hlt
xchg
xor
out
pop
aam
aaa
xchg
and
adc
xchg
cld
and
pop
pop
daa
movsb
jmp
popa
movsl
in
and
inc
xor
xchg
mov
lods
xorl
cmp
lret
pushf
sub
insb
mov
aas
clc
mov
js
cmpsl
sbb
mov
daa
cli
mov
jle
arpl
mov
rcll
sti
dec
mov
xor
mov
pop
shlb
shll
out
add
incl
mov
or
jl
icebp
incl
rol
pop
pop
inc
loop
repz
daa
jo
pop
mov
nop
repz
scas
xor
xchg
rcrb
shrb
xchg
pop
adc
mov
popf
test
orb
int
pop
add
rcl
or
mov
mov
aad
icebp
cltd
cmpsb
cld
mov
mov
cwtl
push
push
imul
and
lret
mov
cmp
orb
lods
mov
aaa
mov
aad
inc
and
mov
cmp
mov
rcl
jno
sbb
xchg
div
add
pop
add
jo
push
fldl
sbb
pusha
fistps
jb
dec
ss
imul
insb
fdivs
cltd
cli
rorb
in
jecxz
pusha
and
fcom
mov
movsb
mov
and
inc
mov
adc
mov
sub
cmpb
imul
lods
pop
test
cmpsb
xchg
js
push
rclb
mov
icebp
add
pop
fsubl
jle
cmc
scas
push
cltd
lahf
jno
mov
mov
lahf
and
adc
mov
pop
int
mov
movsl
lods
mov
xor
mov
sahf
js
testl
add
subl
and
int3
jns,pn
push
daa
adc
jo
cmp
in
popf
mov
pop
jae
mov
popa
lock
mov
mov
or
testl
xor
xchg
insb
shrl
imul
insb
in
adc
jb
mov
fs
lock
dec
enterw
mov
sbb
add
cmpsl
mov
lahf
xchg
sbb
fimull
sbb
pop
rcll
repz
and
cmp
jmp
int3
jb
aad
aad
stc
lret
mov
mov
adc
rcrl
mov
out
arpl
ucomiss
sub
add
fisubrs
mov
adc
jne
xor
enter
fs
sub
xlat
jbe
pop
sbb
mov
mov
in
mov
loopne
clc
dec
xorl
mov
push
iret
leave
xor
fmull
test
mull
push
jp
adc
ret
push
arpl
sub
jae
dec
sti
push
insb
jno
pop
adc
rorb
fbstp
lods
enter
xor
imul
movl
mov
and
lcall
fisubl
hlt
and
xlat
adc
sbb
mov
mov
push
mov
testb
push
out
and
jle
pop
lds
add
je
inc
cltd
xchg
mov
les
lods
in
push
jecxz
in
jge
inc
les
and
lods
js
mov
aaa
ds
jmp
test
popa
nop
shrb
pop
push
leave
in
mov
cmpsl
pop
fnstenv
and
cmp
dec
adc
sbb
or
jmp
ret
in
adc
insb
scas
xor
cmp
pushf
ret
xchg
inc
cld
xor
les
imul
inc
decb
ja
movl
je
push
push
fildll
mov
adc
bound
mov
and
sbbb
test
push
push
in
add
mov
sti
cwtl
enter
ret
fidivrl
mov
push
roll
lods
dec
pop
fbstp
lods
jge
and
mov
out
jns
sub
lods
xor
cmp
ficomps
lahf
mov
jge
stos
add
scas
and
fxch
insl
jmp
jecxz
push
out
cmp
pop
call
into
add
mov
xchg
imul
mov
mov
loope
or
pop
enter
mov
loopne
in
inc
repz
filds
push
dec
mov
mov
cmpsl
pop
test
pop
mov
sbb
dec
cld
cmp
ss
lds
std
addr16
stos
aad
and
les
push
test
mov
adc
push
pop
and
out
mov
mov
jo
or
or
xor
sahf
push
xor
stos
shlb
shrl
imul
iret
test
out
lock
movsb
rcr
addr16
pop
pop
aaa
outsb
ja
js
imul
fcmove
fnstsw
loope
cmpsb
adc
ror
or
xor
or
je
popa
loope
mov
je
cmpsl
mov
push
jecxz
cmp
and
xor
mov
ja
sbb
mov
mov
jae
out
jmp
imul
add
xchg
aaa
adc
xor
fdivrs
jo
sub
imul
lods
pusha
lock
push
jmp
mov
or
jge
or
arpl
fsubr
push
jle
dec
pop
test
lock
jp
jne
int
jge
push
idivb
ss
cmc
mov
or
adc
test
adc
dec
xchg
ret
xorb
push
mov
in
or
imul
pop
pusha
popa
add
gs
loopne
sub
mov
or
sbb
xorl
mov
cmp
pop
les
ljmp
push
xor
int
jle
or
adc
dec
lock
pop
ljmp
in
xchg
pop
es
mov
mov
add
sbb
add
rcrl
fisttpll
mov
lcall
xchg
ljmp
sahf
sub
push
cmp
outsl
sbb
fimuls
mov
inc
mov
ja
cmp
cli
fidivrl
cld
add
jle
jg
jecxz
divb
and
jo
stos
iret
test
dec
shll
sub
pop
mov
mov
sub
and
mov
jge
lea
loope
fcmovbe
cmpsl
lea
rcrl
dec
shrl
add
mov
stc
add
not
and
cmp
inc
js
hlt
ret
stc
and
add
std
mov
push
sub
xchg
xorl
mov
andb
mov
aad
adc
pushf
sbb
hlt
pop
pop
imul
mov
das
mov
dec
inc
addr16
mov
xchg
xlat
xchg
xor
repnz
inc
dec
jns
push
loopne
js
fadds
popa
mov
mov
int
add
jne
es
cld
adc
insl
adc
out
arpl
mov
xchg
xchg
or
dec
or
dec
outsb
popa
xchg
notl
push
outsb
in
into
xorb
ds
push
loope
sbb
fdivr
inc
mov
pop
sti
mov
in
xchg
ficoml
ja
adc
add
jo
dec
cs
test
xchg
andb
pop
adc
ljmp
jge
fildll
mov
xchg
ja
mov
xchg
mov
and
scas
cmpsl
jb
jb
xor
sub
jbe
xchg
imul
outsl
into
jl
dec
cmpb
movsl
mov
sarl
lods
lods
lods
mov
mov
and
push
dec
test
xchg
xchg
outsl
lret
aam
movsb
cmc
and
es
mov
mov
pop
jg
out
lcall
xor
push
inc
fwait
adc
xchg
sbb
xchg
inc
lahf
insb
mov
arpl
mov
push
xchg
pop
mov
lcall
into
push
in
push
ret
push
pusha
push
sub
rol
xlat
enter
xchg
int3
push
mov
test
scas
mov
cmp
sbb
or
add
stos
les
dec
sub
orl
sbb
out
arpl
aam
dec
jns
sub
mov
jno
jae
gs
mov
jle
inc
cmpsl
fisubs
ljmp
cmp
sub
mov
pop
mov
fisubl
icebp
movsl
out
ljmp
xor
stos
pop
sbb
or
gs
pusha
imul
jle
inc
rep
loop
in
or
inc
xchg
shll
testl
cmpsl
pop
clc
fs
dec
mov
dec
in
or
and
loope
add
ja
or
rorb
loop
loop
mov
adc
mov
cmpxchg8b
inc
inc
movsb
jo
in
rcll
stos
sti
push
lock
mov
ret
lahf
cmp
aaa
popf
xchg
jae
jl
pop
clc
lock
in
repnz
add
and
and
pusha
xchg
aam
mov
dec
out
mov
ret
divl
push
bound
push
inc
dec
scas
xchg
int
cmp
shr
hlt
int
push
lock
jae
fstpl
mov
add
sub
push
das
test
xorl
ret
sub
dec
jmp
jecxz
sbb
inc
xor
cmp
sub
mov
cmpsb
mov
into
mov
aas
out
sub
movsl
loop
xorb
test
repz
lret
xor
add
ss
loopne
out
sub
jb
icebp
aaa
pop
fwait
push
cmovnp
sar
mov
lea
addr16
test
push
daa
jle
and
inc
cmp
int
add
sub
cli
sub
or
jmp
xor
test
les
punpcklbw
pop
or
mov
fidivrl
movsl
enter
xorl
xlat
flds
leave
mov
push
adc
dec
dec
mov
lret
icebp
gs
mov
pop
mov
cmp
shlb
adc
sub
add
pop
pop
mov
push
push
cmp
mov
sbb
fcom
mov
outsl
fs
mov
dec
xor
push
mov
jae
mov
and
push
fdivrs
mov
je,pt
mov
xchg
cld
push
pusha
sarl
push
arpl
inc
mov
mov
pop
sub
int
addr16
scas
testb
imul
pop
rcr
dec
jmp
mov
pop
ss
sarl
mov
xor
out
rcl
xlat
nop
push
das
sbb
dec
pop
insb
jle
and
imul
lret
call
call
repnz
insb
dec
call
mov
bound
dec
mov
or
xchg
aaa
pop
sub
jns
out
cmp
sub
mov
imul
sub
inc
pop
loope
pop
fwait
sbb
pop
and
movsl
test
push
pop
loop
xchg
aaa
daa
arpl
cmp
data16
hlt
pop
or
es
enter
sub
fcoms
xchg
mov
mov
cmp
mov
or
repz
lock
pop
bound
push
and
jmp
notl
lods
test
sarb
insl
adc
sub
fdivrl
sbb
loope
int
mov
jge
sub
and
push
add
mov
int3
cmp
and
out
mov
pop
push
stc
cmp
aas
fxsave
repnz
out
add
pop
loope
pop
and
xor
or
mov
inc
dec
cld
mov
adcl
lock
pop
push
xor
es
and
or
emms
outsl
xlat
loop
ss
adc
fnstcw
dec
mov
ret
mov
inc
jne
shlb
lret
jo
inc
adc
jecxz
test
mov
jle
imul
inc
xor
pop
movsl
sti
subl
or
mov
jmp
or
mov
mov
xchg
dec
aad
pop
jecxz
sub
daa
popa
mov
fildll
mov
enter
lds
pop
fstl
jb
fs
adc
movsl
cltd
scas
jg
fcompl
sbb
xchg
lret
push
mov
scas
imul
shrl
es
or
cli
adc
mov
shrb
xor
fstl
mov
fwait
bound
sub
fucom
shlb
stc
imul
xchg
fwait
test
mov
std
dec
jmp
mov
fistpll
jg
mov
es
lret
or
jmp
nop
imul
xchg
imul
lds
or
mov
jg
into
inc
nop
dec
gs
mov
lods
sbb
ds
and
enter
jecxz
inc
sbb
adc
imul
jb
add
or
add
push
jbe
fidivs
mov
pusha
clc
sti
mov
xchg
stc
jecxz
pusha
imul
jp
dec
jecxz
jg
fstpt
mov
pop
inc
sbb
shll
dec
adc
stos
in
or
fbstp
int3
int
xchg
sbb
and
inc
jg
cmc
jbe
mov
int3
ljmp
push
mov
add
addr16
rcr
js
cmp
jp
mov
cmpl
sub
mov
addb
jge
fisttpl
sti
sbb
pop
jns
out
sarb
mov
cwtl
hlt
frstor
jbe
lret
add
nop
xor
dec
shrl
je
push
test
jnp
imul
inc
das
icebp
insl
dec
jl
push
lods
inc
and
dec
std
fmuls
mov
shll
popf
hlt
iret
cmp
sub
push
and
ja
fildl
add
fimuls
mov
pop
ds
rcll
cmp
outsl
mov
addr16
jne
mov
push
das
notl
jle
lret
sub
cmp
jbe
xchg
fwait
mov
fbld
mov
inc
nop
inc
out
mov
loopne
mov
mov
adc
ds
sbb
stos
in
out
sbb
pop
sarb
dec
push
push
mov
lret
xor
pop
rclb
mov
mov
push
add
xchg
rcll
cmp
inc
inc
inc
repnz
xor
data16
dec
or
sar
hlt
out
out
leave
cmpsl
ror
push
iret
mov
fsubrs
in
jg
cmp
fwait
loopne
jo
push
mov
insb
into
push
rorb
sahf
inc
nop
lock
andb
aad
out
repz
push
loope
pop
fiadds
dec
loopne
cmpsl
lcall
mov
jae,pn
js
lea
movsl
or
add
test
loope
in
inc
les
xchg
lahf
sub
fcmovu
popf
sahf
jp
insl
adc
push
mov
mov
mov
cltd
fbld
add
aas
xchg
jmp
out
mov
sbbl
inc
sbb
pop
or
xor
and
sbb
and
push
push
ret
cs
lcall
xchg
xor
sub
xor
fsubr
aam
cmpsl
pop
pop
mov
dec
ss
fwait
scas
cmp
add
inc
xchg
mov
mov
cmc
loop
test
mov
mov
fcmovnb
mov
push
push
test
or
in
enter
pop
or
mov
and
sub
mull
and
jne
sbb
xor
mov
mov
movsl
repz
push
sbb
lret
cld
movl
inc
repz
pop
mov
pop
mull
or
jecxz
je
leave
test
cs
mov
scas
mov
sbb
lret
addr16
jp
ds
jmp
or
pop
ret
pop
jno
sti
dec
aam
scas
scas
int3
out
cmpsb
enter
fdivrl
sbb
ss
aam
inc
sub
pop
jmp
roll
xchg
dec
mov
stos
pusha
mov
test
mov
lcall
popa
adc
fisubs
push
pushf
mov
rcll
cmpsl
dec
lock
sbb
pop
enter
add
and
mov
push
mov
hlt
push
aaa
lds
addl
push
and
clc
mov
cld
in
push
inc
in
mov
mov
pop
shr
scas
fimuls
sbb
clc
lahf
push
sbb
std
insb
mov
xchg
or
fwait
jns
inc
xor
push
push
inc
fnstenv
dec
les
divl
sbb
in
xchg
sub
push
scas
imul
rcrl
into
pop
pop
jle
outsl
xchg
orl
mov
int3
in
sbb
jo
adc
mov
xchg
sub
arpl
adc
pop
rolb
js
fisttpl
insb
cld
jns
sub
add
pusha
outsl
ds
mov
mov
jmp
mov
add
in
fistpll
mov
mov
pushf
xchg
test
hlt
or
pushf
pop
loopne
xor
add
insb
loope
xor
aam
inc
cmc
ret
mov
std
push
mov
add
adc
stos
or
subl
enter
sbb
in
dec
shl
imul
cmpsl
xor
out
leave
jo
scas
dec
sub
out
mov
cmp
sbb
or
mov
push
in
mov
or
mov
adc
fs
dec
ret
imul
into
jecxz
ret
adc
push
pop
scas
sbbb
cli
lods
mov
lcall
std
push
loop
cmp
sbb
lahf
xchg
filds
icebp
sub
into
into
lods
repnz
mov
xrelease
push
hlt
xchg
mov
lds
stos
cmp
leave
mov
push
fcomps
clc
and
jl
outsb
leave
je
jb
out
add
pop
pop
sub
xor
adc
adcb
inc
jb
push
xlat
pop
pop
sbb
jmp
cs
es
mov
fimuls
xchg
adc
scas
lds
rol
mov
rcrb
mov
repz
lods
pop
repnz
das
push
cmc
pop
int3
fadds
js
xchg
aam
sub
and
mov
cmc
xchg
xchg
push
arpl
data16
inc
push
inc
bound
dec
fldcw
scas
or
and
xchg
loopne
jmp
mov
dec
lret
and
adc
sub
xor
xchg
stc
sub
cmp
inc
push
lahf
jo
xor
adc
xor
test
repnz
push
cmp
int
sub
xchg
sub
sbb
out
nop
je
popa
add
xor
fdivrs
add
add
and
and
xor
mov
mov
xchg
scas
sti
jp
pop
dec
mov
loop
rcl
int
dec
shrb
fcmovne
pop
ret
cmp
push
shlb
and
xorb
push
pop
inc
jns
mov
mov
das
sub
inc
adc
sub
mov
enter
lret
jnp
jl
fdivrl
les
subl
pop
cmpsl
adc
jne
xor
fisttpl
call
mov
push
sub
jae,pt
es
pop
lahf
cmpsb
mov
mov
lcall
jno
jb
repz
adc
push
bound
xor
ret
test
and
insb
in
push
add
xchg
mov
jecxz
leave
je
cltd
xchg
adcb
pushf
stos
fs
dec
arpl
and
mov
incb
leave
jbe
sbb
add
movsb
sbb
out
inc
cmpsl
test
fsubrs
cmp
add
in
cli
mov
in
inc
lods
out
adc
jns
call
rorl
sub
mov
cld
jno
aas
sti
and
inc
stc
xor
repnz
out
fisubl
lods
mov
jne
pusha
iret
mov
push
test
pusha
lret
mov
imul
cwtl
insl
push
repz
fmull
cli
testb
fdivs
out
gs
and
sbb
cltd
hlt
aam
fisubrl
xor
pop
icebp
int3
xor
scas
mov
int3
sub
in
cmp
loope
and
js
add
out
cs
aas
jo
cmp
lock
jmp
lods
cmp
enter
fcomp
shll
lea
jl
test
pop
mov
jmp
mov
jnp
lret
cmp
add
aas
push
mov
into
inc
js
in
add
sub
xor
jnp
std
ret
xchg
xor
gs
ss
push
cwtl
loop
cwtl
jl
scas
cmpsb
sub
ss
jl
ds
cmc
xchg
xor
xor
sub
ljmp
inc
pop
sbb
xchg
scas
sbb
fsts
decl
jae
push
insb
sub
xchg
dec
rorl
push
loopne
ss
mov
mov
sub
sub
stos
dec
sub
js
mov
push
shrl
sbb
inc
aam
xlat
sub
call
jb
inc
push
jb
lretw
ret
shr
pushf
xchg
lods
and
dec
fildll
jl
pushf
add
mov
leave
or
push
fisubrs
cmp
lods
jbe
xor
mov
or
inc
loope
dec
sbb
jl
pop
mov
or
outsl
and
push
jmp
cmp
mov
or
test
shl
std
sbb
pop
or
sub
lea
jmp
jge
ja
fcmovb
daa
std
aas
aas
fs
fs
mov
sbb
enter
shll
call
jg
dec
push
inc
xor
rcrl
testl
dec
scas
jecxz
dec
imull
je
xchg
mov
inc
int
out
sbb
insb
test
int3
xor
icebp
lcall
cmp
popa
addr16
or
xor
cmp
cmpb
shlb
es
enter
cmovae
mov
orl
aas
and
movsb
data16
jl
popa
dec
jno
mov
enter
jae
mov
dec
out
mov
dec
pop
inc
es
pusha
decb
sti
or
lds
leave
push
in
or
mov
jae
xor
lods
mov
or
jns
gs
cltd
xchg
iret
xor
xorb
out
mov
adc
std
arpl
adcb
xorl
je
pop
stc
je
addr16
in
popf
fdivl
adc
test
out
jbe
scas
mov
add
push
leave
popf
pop
cmpsl
push
sbb
and
xchg
adc
adc
sub
push
cli
dec
mov
outsb
arpl
pop
xchg
push
orb
ja
shlb
ret
inc
sar
or
mov
cmp
mov
mov
stc
push
lods
and
fs
xchg
cmc
imul
add
pushl
pop
stc
loop
sahf
shlb
cwtl
sbb
jge
xchg
push
test
je
cmc
jns
sbb
movsl
daa
pop
std
sahf
push
ljmp
jp
rcrl
mov
cmpb
sub
data16
sbb
push
icebp
imul
ss
daa
jo
xorb
or
sbb
mov
roll
ds
sbb
ljmp
int3
xchg
dec
add
dec
sub
push
push
cmp
dec
les
sub
pushf
call
xchg
aaa
jle
stos
loope
addr16
push
fcmovbe
mulb
scas
out
add
dec
push
int3
mov
lods
mov
mov
ss
jno
push
fsubrp
test
push
div
lret
insl
movsb
sbb
rcll
dec
push
or
int
rcll
into
ljmp
test
ds
outsb
cmpsb
add
repz
mov
dec
loop
mov
divb
pop
inc
and
cwtl
clc
sub
sub
in
sub
nop
mov
xchg
push
je
mov
inc
jge
jnp
mov
xadd
dec
add
js
mov
or
add
pop
leave
gs
lock
inc
loope
cmp
loop
sbb
call
or
mov
mov
push
dec
nop
stos
repz
lret
mov
adc
jmp
jle
xor
adc
cwtl
pusha
leave
nop
ficompl
xchg
negb
ficoms
fcmovbe
jg
pop
or
out
ret
out
cmp
pop
cmpsb
jecxz
rcrb
mov
sbb
sbbl
adc
mov
rorl
jecxz
scas
pop
mov
push
jns
and
jg
cmpsl
xchg
pop
mov
pop
sub
fstp
lock
mov
gs
fwait
mov
add
stos
adc
xor
push
out
sub
js
fs
insl
ficoms
aas
in
push
fst
popa
fnstcw
mov
mov
mov
iret
add
mov
ds
mov
mov
sub
test
insl
movsb
imulb
cli
pop
and
je
push
or
inc
sub
sbb
testb
jmp
cmp
divl
je
xor
xor
imul
or
mov
dec
cli
xor
testb
aas
jle
cmp
jl
and
dec
pop
loope
mov
scas
jle
std
mulb
sub
call
popa
cltd
mov
movsb
and
daa
rclb
mov
int
and
in
and
sub
add
and
xchg
push
ffree
outsl
mov
or
cmpsb
mov
inc
aam
cmp
cld
pusha
in
pop
pusha
pop
ficoml
xor
and
pop
rorl
cmp
clc
xchg
mov
xor
add
sbb
lret
sub
call
adc
pop
and
dec
mulb
clc
scas
imul
cwtl
mov
fstl
cli
notl
mov
insb
addr16
pop
cltd
pop
rdtsc
add
pusha
fists
in
dec
in
rcrb
adc
inc
das
repz
iret
cwtl
and
shll
outsb
sbb
or
or
and
lods
mov
loop
adc
rol
pop
int
addr16
ja
sub
xchg
xchg
mov
inc
pop
pop
out
inc
dec
inc
cmc
test
cltd
mov
push
subps
int
fstpt
fs
cli
sub
add
in
loope
loop
push
sbb
test
fdivl
fwait
adc
xchg
cmp
pop
and
sub
jo
stc
mov
mov
test
lea
shlb
sahf
cld
and
xchg
lods
ret
jle
xchg
lcall
test
imul
mov
push
into
lcall
add
cwtl
nop
pop
adcb
mov
push
and
xor
push
test
lcall
mov
rcll
sbb
mov
rclb
stc
dec
mov
lods
in
push
cld
lods
pop
mov
lret
icebp
jg
pop
mov
clc
push
mov
fistpl
data16
and
aam
cmovb
adc
imul
pop
dec
hlt
and
cmpsl
add
les
xor
mov
std
cmp
scas
push
jne
push
hlt
fisttpl
iret
sbb
hlt
stc
jge
pop
jge
mov
and
into
jne
mov
fstpt
xor
jecxz
add
jmp
scas
popa
adc
dec
inc
movsb
mov
inc
xor
mov
rcr
cltd
test
pop
bound
sti
icebp
inc
or
nop
outsb
scas
push
call
iret
in
mov
outsb
testb
jae
mov
inc
xchg
jecxz,pn
and
addr16
mov
sbb
add
jmp
testl
rcll
inc
fisubrs
cmp
and
jle
aad
sti
jae
into
adc
rorb
cld
int
pop
insw
pop
out
lahf
fstps
cltd
or
xchg
shr
jle
cmc
mov
outsl
sbb
outsl
stos
subl
mov
scas
stc
adc
xchg
cmpsb
adc
mov
outsb
xor
adc
mov
pop
lea
daa
or
outsb
jns
pop
or
fidivrl
in
mov
cli
xchg
pop
gs
push
cmpb
mov
fstpl
sbb
jo
outsb
cmp
nop
push
sti
cmp
int
inc
and
aad
icebp
ja
sbb
into
push
gs
and
push
add
popa
and
add
or
push
cmp
inc
push
xlat
jl
and
dec
addr16
or
sbbb
lds
repz
jnp
fwait
jbe
stos
loopne
xchg
jb
pop
int
jno
mov
fldenv
sub
dec
js
stc
jp
fwait
mov
les
shll
ret
sub
mov
mov
movsl
or
subb
dec
scas
aam
jns
jmp
scas
shlb
stc
pop
rol
adc
mov
inc
and
mov
loop
push
jbe
jg
jecxz
mov
mov
insb
mov
inc
xchg
shrl
out
test
daa
jno
or
jb
mov
lret
dec
mov
xchg
cs
loop
sbb
shlb
roll
jle
je
mov
jb
fistpll
cli
mov
lods
ljmp
popa
mov
ss
popf
out
fs
shl
pop
and
pop
fcomp
scas
clc
pop
aam
loop
mov
lods
mov
xor
sub
out
and
test
sbb
fldpi
scas
mov
pop
lock
test
fildl
cmp
shlb
outsb
in
lret
ret
mov
pushf
inc
xor
mov
stos
andb
in
xor
in
sub
ds
add
sub
add
lds
or
cmpsb
outsb
mov
inc
lret
popa
xor
mov
nop
cmc
push
ret
and
cmc
xchg
adc
inc
xlat
data16
ja
in
sbb
imul
mov
fbstp
pusha
stos
jecxz
loope
inc
inc
test
aas
outsb
lods
test
add
jne
cmp
or
mov
lods
mov
test
jne
pusha
mov
out
iret
stc
push
push
lock
jb
mov
inc
push
cmp
stos
ret
mov
stc
and
lock
sbb
push
sub
outsb
out
aas
sbb
lret
stos
test
or
sbbl
mov
test
sub
or
adc
stc
mov
stos
and
les
mov
cltd
cmp
mov
pusha
mov
dec
mov
xchg
mov
mov
jp
in
popa
idiv
pop
fisubrs
pop
sbb
in
and
out
lods
aas
xchg
cld
and
stos
cmp
xorl
sbb
stc
or
jge
aas
inc
adc
lods
and
hlt
push
daa
vunpckhpd
enter
xor
ss
lea
pop
sub
fwait
mov
mov
pushl
and
push
into
test
mov
je
xchg
mov
jecxz
mov
inc
push
lock
sub
mov
jne
sti
sti
lods
sub
andl
inc
and
push
imul
ds
push
ficomps
push
stos
movsl
in
fiadds
sub
std
jb
pop
pusha
mov
scas
add
cmp
mov
mov
pushf
stos
cwtl
mov
jnp
or
xor
pop
add
loope
js
pop
jne
rclb
rorb
ret
sahf
or
mov
aam
mov
jge
aas
mov
adc
lds
dec
repnz
lock
xlat
mov
push
ja
adc
cmp
mov
pop
xchg
dec
lret
cli
repz
dec
lcall
je
mov
ret
xlat
testb
aaa
test
cli
fnstsw
mov
lods
xor
xchg
jp
push
out
addr16
pop
nop
pop
out
jnp
stos
fsubrl
dec
lret
mov
adc
enter
into
dec
sub
insl
enter
sbb
cmp
dec
inc
dec
fsubs
mov
fsubp
cwtl
test
mov
cs
call
and
fimuls
mov
out
push
jge
stos
mov
dec
jmp
shlb
mov
inc
in
cmp
fildl
aas
ret
fstl
iret
cmp
les
dec
adc
rclb
mov
pop
imul
es
je
test
aam
mov
lret
das
sahf
jg
pop
popa
js
out
testb
add
jno
jno
mov
movsb
xchg
cmp
leavew
and
cmpsb
outsl
pop
ret
push
jbe
subl
nop
jno
jne
test
lcall
lea
pushf
je
scas
and
scas
out
leave
mov
movsb
xor
pop
scas
mov
fmuls
and
mov
subl
xchg
cli
lock
lret
faddl
out
mov
ljmp
mov
aas
mov
sub
add
in
xchg
push
jmp
aam
outsb
sub
test
jecxz
data16
mov
out
rcrb
push
test
inc
sub
push
stos
aas
pop
movsb
dec
in
filds
add
shrl
mov
add
sbb
mov
mov
jp
lret
inc
mov
fisubs
xchg
xlat
cmp
sub
sub
rcl
js
ret
cli
sub
sub
and
inc
or
loop
test
add
and
mov
ljmp
push
xchg
ret
es
movsl
fnstcw
xchg
add
in
es
mov
adc
or
ds
pushf
adc
mov
out
cli
repz
mov
xor
sub
xor
cmp
xchg
aad
xlat
repnz
or
ljmp
sub
adcb
lret
push
cmp
daa
lret
outsl
pop
jg
push
lea
movsb
lret
mov
fwait
mov
sub
test
adc
andb
sub
rcrb
mov
add
mov
xchg
cmp
mov
cmp
push
clc
jno
jge
fldl
adc
and
decb
sbbl
xchg
add
sub
vmptrst
outsb
jnp
push
pushf
mov
lods
sbb
andb
call
imul
je,pt
dec
mov
popf
lds
pusha
mov
mov
in
lret
cmp
shlb
clc
jbe
sbb
push
out
pop
js
clc
jg
addr16
idivl
mov
into
rorb
rorl
push
jae
fstps
jns
mov
inc
jmp
push
sbb
cmp
sahf
dec
lods
push
xchg
dec
cmpsl
sbb
pop
mov
pop
rorb
mov
push
icebp
loopne
pop
lods
xorb
inc
divl
test
aas
rolb
jecxz
aam
push
dec
jmp
xchg
sbb
ss
jno
cli
mov
xchg
aam
cmp
mov
aam
pop
imul
jl
movl
sbb
in
adc
xor
in
or
pop
dec
clc
leave
sub
jbe
shrl
pushf
sub
mov
fstpt
mov
and
xor
bound
cmp
jo
dec
ljmp
in
stc
ficomps
mov
lock
addr16
out
pusha
pusha
push
push
sub
call
popa
inc
adc
subl
in
mov
lcall
cmc
jne
jno
stc
cwtl
lret
std
adc
push
jg
xchg
into
sub
mov
adc
loope
add
inc
mov
aam
clc
xlat
lods
xchg
and
jns
into
test
jo
push
inc
cld
rcl
dec
aas
shll
lret
bound
inc
daa
aad
jno
lahf
in
paddsw
or
clc
xchg
jae
mov
xchg
sbb
dec
mov
aad
call
mov
push
fisubs
xor
mov
lods
or
mov
cmpsl
and
mov
push
inc
cmp
repz
popa
jle
fsubrs
or
pop
int
mov
lahf
sub
pop
inc
inc
sahf
jno
movl
fsubl
lahf
jo
mov
pop
dec
lods
hlt
pusha
jnp
mov
inc
mov
test
add
sub
inc
or
and
dec
cmp
mov
cwtl
pop
sub
sub
xchg
jno
pop
lcall
jle
pop
test
mov
int3
and
mov
cmp
sbb
mov
dec
sbb
fstp
mov
xor
int3
insb
in
shl
pushf
sbb
jo
subl
mov
mov
mov
or
mov
ret
adc
dec
dec
inc
popa
popa
mov
xchg
push
les
xchg
mov
push
pusha
mov
pusha
insl
push
inc
inc
dec
lea
repnz
in
and
jnp
fnclex
xchg
sti
add
mov
mov
movsb
imul
push
cmp
pushf
test
clc
cmpsb
xor
cli
clc
imul
dec
imul
arpl
sbb
lods
xchg
xor
and
pop
cmp
xor
imul
xchg
hlt
fbstp
jecxz
push
ss
test
xor
scas
sbb
adc
inc
cltd
lock
mov
mov
sti
push
imul
and
inc
push
frstor
jg
gs
adc
aam
sarb
mov
setp
push
push
push
push
mov
arpl
repz
mov
xor
hlt
cld
mov
clc
test
outsl
roll
xor
into
sbb
mov
xchg
mov
mov
iret
xor
pop
lahf
enter
outsb
add
jmp
aad
insb
jne
push
test
lds
jecxz
outsb
popa
enter
bound
add
inc
and
and
out
or
lcall
xchg
xor
jne
shld
in
mov
mov
push
aam
ret
lea
and
fwait
mov
push
pop
dec
cltd
into
or
fldcw
sub
std
out
mov
cmp
lods
push
dec
xor
xor
jns
lods
xchg
jns
fstpt
icebp
shrl
xor
ja
scas
push
jo
mov
loope
gs
arpl
mov
push
sbb
insb
mov
push
jmp
mov
cltd
pop
rcrl
xor
xor
fwait
out
repnz
test
sar
add
stos
fwait
adc
mov
mov
xor
push
movsl
cmp
or
jl
xor
pusha
push
push
xor
dec
aaa
cmp
insb
loopne
xlat
arpl
fxch
mov
add
sub
fwait
push
pop
pop
div
mov
stos
nop
cwtl
test
jmp
outsl
adc
dec
test
repnz
pop
loope
mov
xor
test
outsb
mov
xor
cmpsb
jle
xor
pop
in
xor
out
xor
add
lret
push
mov
push
pop
push
push
adc
pop
xor
inc
fsubl
lea
mov
add
addr16
es
lret
shrb
mov
into
pop
mov
loopne
pop
inc
jne
shrl
push
and
sub
dec
jns
int
sahf
xor
xchg
sub
and
jns
xchg
or
mov
adc
adc
fwait
aam
xchg
shll
xor
and
icebp
repz
andl
out
pop
xor
mov
cltd
jle
inc
addb
lods
movsl
xchg
scas
idivl
xor
jne
or
adc
jbe
cld
dec
push
cld
pop
hlt
arpl
leave
es
jns
dec
dec
enter
insl
push
imul
or
lcall
sub
sub
sub
jl
js
rclb
pop
les
jl
push
sbb
adc
in
cmc
mov
outsb
arpl
jbe
jp
lods
clc
mov
insl
dec
mov
aaa
mov
lret
pushf
jl
jns
push
pop
frstor
jmp
cwtl
adc
push
inc
cmp
xchg
xchg
xchg
pushf
pop
les
out
pop
inc
jbe
cmc
fstl
mov
mov
idiv
jle
aas
push
and
adc
cld
fwait
mov
fwait
xchg
add
addr16
jle
mov
xor
sbb
fstps
test
loope
mov
int
rolb
orb
fldt
inc
jb
mov
outsl
lahf
dec
pop
jp
or
icebp
add
inc
mov
das
jmp
jp,pn
sahf
rep
inc
mull
out
pop
loope
jb
xchg
mov
lods
push
push
sub
test
mov
add
xchg
pushf
iret
cmp
jg
sbb
xor
inc
out
sahf
sub
adc
pop
push
cli
scas
dec
pop
daa
xchg
cli
push
mov
aas
dec
mov
push
add
into
out
out
movsl
push
test
test
sbb
dec
xor
ds
mov
test
cmp
loope
and
les
mov
cltd
sbb
push
push
jae
jno
in
rolb
data16
xchg
dec
bound
and
lds
cmp
stc
repnz
xchg
incb
dec
lahf
jl
lcall
fmuls
mov
or
js
icebp
inc
push
dec
loope
inc
xor
in
out
xchg
out
imul
xor
aas
in
filds
xor
test
jo
cmc
push
rcl
std
xchg
fs
in
jmp
in
js
adc
jg
and
xor
xchg
ljmp
scas
cli
lea
xchg
loope
cltd
pop
or
inc
pop
pop
repnz
or
adc
cmp
addr16
repnz
dec
shl
popa
cmc
pop
pushl
movsl
mov
adc
inc
cs
and
mov
pop
outsl
aaa
jo
roll
mov
lods
enter
fdivrl
sbb
cli
or
or
jno
inc
mov
cmp
mov
pop
popf
iret
lds
adc
les
es
inc
loop
jle
push
ret
sbb
in
aaa
fnsave
ja
or
pop
jl
dec
aad
mov
rol
mov
jl
test
les
dec
xor
mov
cmp
mov
add
and
cmpsl
lret
xor
andl
lods
cmp
mov
cmp
pop
aam
sti
push
push
adc
mov
dec
fildll
add
or
insb
repnz
les
jg
in
pop
sub
pop
xor
cli
push
incb
lcallw
test
add
ljmp
ret
add
jo
inc
push
dec
movsb
pop
mov
nop
in
rorl
jne
jns
mov
aam
bound
jne
jns
iret
and
push
out
fistps
ds
movsb
xchg
dec
and
inc
add
lock
add
sbb
fcoml
jmp
pop
push
sbb
sbb
dec
rcll
in
inc
mov
loope
adc
and
xor
xchg
inc
jecxz
jno
mov
fcomi
sbb
sahf
rorb
pop
xchg
hlt
mov
mov
adc
or
xor
cli
cmp
dec
pop
dec
leave
mov
mov
mov
adc
enter
pusha
int3
popf
and
push
cmp
jmp
cmpsl
adc
in
nop
xor
cmp
xchg
push
push
xchg
add
add
sbb
call
les
jcxz
leave
pusha
int
push
push
add
cli
lods
add
arpl
pop
ret
xchg
std
and
imul
pop
daa
mov
xor
or
insb
cmpsb
lds
dec
inc
je
sbb
inc
imul
cmp
imul
arpl
jae
cwtl
icebp
enter
jge
xchg
jg
lods
loopne
sub
dec
jae
mov
xor
das
pop
std
cli
cmp
jne
xchg
mov
xchg
push
fidivrs
fcoml
cli
jnp
addr16
cmp
add
loope
push
in
into
adc
pop
mov
jne
or
xchg
dec
jno
loop
dec
or
pop
mov
cmovne
and
mov
jb
in
cmp
lock
dec
sub
loopne
mov
js
test
imul
jne
push
jno
in
in
leave
mov
mov
cmpsb
push
push
leavew
push
mov
inc
bnd
pop
aas
stos
int
xchg
gs
dec
sti
addr16
push
je
int
pushf
pusha
sub
mov
mov
sub
xchg
or
gs
cmp
cs
pop
dec
hlt
adc
add
adc
xchg
ret
ljmp
jle
nop
inc
fdivrs
out
mull
inc
jb
cmc
cwtl
out
int3
xor
movsb
js
dec
loopne
faddl
xchg
cmp
orb
lock
cmp
mov
add
pop
mov
filds
pop
mov
out
cmc
xor
or
and
out
inc
add
sub
dec
or
imul
aas
sbbb
or
mov
xchg
lock
aad
adc
jo
test
jbe
xchg
and
add
or
lret
sarb
lds
cmpsb
dec
out
jle
js
or
notl
xchg
out
pop
fidivrs
dec
adc
and
push
jns
mov
ret
movsl
push
mull
or
dec
add
int
aad
imul
sub
push
and
inc
jno
cmp
das
nop
push
in
push
lea
mov
loopne
in
cmpsb
cmpsl
pop
sub
jbe
in
roll
in
in
mov
mov
or
out
jecxz
notl
jb
ds
shrb
jl
imul
sub
pop
stos
push
aad
push
dec
dec
pop
data16
aad
repnz
and
ja
bound
lcall
add
cmp
jp
stc
mov
shl
cmp
lahf
adc
ret
pop
push
ret
mov
fs
shrl
into
jns
jns
mov
cmp
lcall
mov
jo
out
pop
pop
bound
out
jns
sub
mov
sub
pmulhuw
push
lret
stos
dec
mov
mov
out
test
dec
xchg
lret
sub
inc
mov
inc
jecxz
dec
stos
call
pusha
hlt
mov
jne
xchg
xchg
sub
adc
es
repz
shrb
pop
andl
ja
ret
sub
pop
bnd
in
test
in
dec
dec
cld
mov
adc
adc
flds
dec
and
mov
or
fsubl
mov
stos
test
je
add
cmp
sti
or
xchg
xchg
mov
xor
lock
mov
xchg
push
sub
cmc
xor
insb
and
cmpsb
xchg
sbb
insl
lock
add
mov
sub
lods
mov
clc
aaa
pop
lea
imul
push
xor
fdivrl
imul
jnp
push
test
outsb
push
hlt
sub
push
dec
push
xchg
jo
and
pop
cmpsb
adc
and
je
sbb
xor
std
fnsetpm(287
adc
cmp
sub
fisubs
aam
leave
mov
xor
int3
scas
push
in
lods
or
into
mov
ljmp
imul
cmp
fabs
cmp
jnp
repz
hlt
out
and
pop
nop
cmp
out
mov
sbb
stc
outsl
inc
adc
push
gs
ret
out
pop
negb
mov
mov
hlt
push
insb
in
jb
adc
sbb
jmp
hlt
mov
data16
jo
mov
xor
dec
and
lds
hlt
mov
lock
or
movsb
sbb
stos
mov
sbb
inc
add
insl
gs
adc
shll
inc
lods
or
cmp
jmp
mov
sbb
mov
or
sahf
pop
aad
mov
shrl
pop
out
imul
dec
fbld
xor
adc
ja
mov
jo
and
inc
fldt
dec
hlt
sub
ret
imul
sub
pushf
xchg
inc
out
jmp
fldt
mov
cld
xchg
ror
int3
out
jb
xor
outsb
sbb
insl
enter
sub
stos
mov
addr16
lcall
fdivl
insl
xchg
je
or
or
mov
das
fsubrs
or
pop
cmp
movsb
pop
mov
shlb
push
sbb
or
int
aad
fsubs
pop
xchg
add
jg
fdivs
insl
nop
pop
pop
mov
and
out
push
push
pop
or
ss
mov
pop
pop
clc
je
sbb
xchg
leave
mov
pop
mov
push
xorb
ds
push
test
enter
sarb
inc
adc
cmp
mov
mull
jecxz
sub
fcomps
mov
jl
lods
icebp
js
push
cmp
stc
or
pushf
ret
pop
pushl
roll
inc
dec
ja
mov
shrb
sbb
mov
in
cld
xchg
sbb
setnp
push
lcall
mov
or
xchg
inc
jp
push
inc
push
and
leave
push
xor
jg
shl
pop
xor
fucomi
dec
jmp
xor
fwait
sub
cltd
out
fmuls
out
nop
xlat
mov
stc
adc
hlt
data16
in
test
cmp
or
pop
pushl
pop
filds
and
sahf
adc
jge
pop
fadds
ljmp
loope
lds
xor
push
in
push
imul
adc
lret
or
jb
aaa
jg
aam
sub
sbb
add
mov
addl
sbb
lahf
lahf
inc
adc
lea
dec
roll
loopne
pop
dec
cmpsb
sbb
jl
stos
add
pop
ljmp
movsb
adc
cld
xchg
imul
mov
pusha
sbb
jno
subb
js
fbstp
rcrl
aas
fdivp
mov
sub
les
test
adc
fcmovb
data16
cwtl
mov
push
pop
and
cmp
cmp
mov
mov
adc
mov
gs
mov
int
mov
cmc
xchg
xor
mov
stc
sbb
push
jmp
test
sub
jge
xor
rolb
pop
pop
out
mov
fstpt
mov
mov
sbb
fdiv
push
mov
mov
mov
push
nop
mov
mov
xorl
div
pop
or
aad
jle
out
lock
lods
inc
jne
pushf
test
adc
jb
dec
jo
and
sub
popf
push
mov
jg
lods
ret
outsl
inc
pop
je
pop
mov
or
lea
mov
jno
jge
mov
fisttpll
sub
pop
sbb
jecxz
aam
dec
mov
inc
bnd
or
test
xchg
lret
xlat
fsts
out
jb
pop
sti
aaa
cmpsb
in
daa
mov
jl
xchg
outsl
sub
nop
enter
incl
mov
sarl
or
pop
cs
xchg
push
jnp
roll
test
aad
lahf
icebp
mov
pop
es
shll
pop
pusha
adcb
xchg
in
sub
cli
jae
mov
test
out
xor
in
jnp
mov
cmp
pop
mov
sub
cmc
lahf
jne
mov
mov
mov
sub
negb
ret
out
mov
jmp
add
jl
sbb
push
pop
inc
mov
inc
cmpsb
xorb
xchg
aaa
leave
cmp
clc
mov
xchg
push
mov
es
ficomps
lea
rep
lahf
shlb
fwait
and
xor
movsb
push
adc
jg
js
jnp
push
add
sbb
hlt
mov
addr16
pop
mov
repnz
stos
lods
mov
inc
nop
xor
mov
rcrl
adc
lds
out
jno
sub
lods
std
dec
jno
mov
sbb
xchg
mov
je
sbb
aaa
pop
ror
add
fldt
inc
mov
push
mov
and
call
mov
and
adc
mov
mov
sub
pop
loope
and
sti
fadds
push
mov
into
ss
shl
xchg
cltd
insb
mov
lret
mov
fidivrl
int
adc
and
mov
and
sub
scas
pop
pop
add
loope
shrb
and
inc
addb
out
pop
test
ja
repnz
cmp
mov
mov
arpl
or
test
xchg
cmc
rcrl
loop
xchg
dec
imul
mov
add
sarb
mov
xor
les
mov
fs
pushf
inc
xorb
xlat
fstp
sub
sub
inc
ss
enter
sub
mov
mov
in
mov
lock
xchg
pop
adc
jbe
mov
mov
cld
aas
rep
inc
idivl
jmp
add
movl
cmp
push
out
loop,pt
mov
pop
mov
popf
orb
decb
sbb
lret
out
inc
pop
mov
cmp
and
jb
stos
mov
jae
xchg
roll
stc
je
mov
pop
fistl
adc
push
mov
xor
pop
aas
xchg
sub
shrl
jg
mov
pop
lcall
icebp
stos
adc
xorl
mov
sbbb
popa
clc
leave
aad
xchg
test
icebp
in
mov
xor
push
jb
pop
cli
push
out
xchg
pop
pop
loop
ror
stos
ds
cli
inc
inc
pop
fstpt
adc
call
push
les
dec
push
fwait
mov
inc
js
mov
js
xchg
sahf
mov
jnp
add
pop
movsl
xchg
es
filds
xchg
push
xlat
or
xchg
sub
mov
xchg
lret
rcl
xchg
or
push
sub
mov
push
mov
mov
aam
movsl
movsb
add
lock
sbb
sar
fbstp
sbb
in
mov
mov
in
fwait
cmpsl
jae
jmp
mov
imul
cmpsl
hlt
xchg
out
aas
add
and
sub
repnz
or
push
je
pop
ljmp
and
into
jl
mov
or
test
or
out
inc
ljmp
loop
rolb
dec
ss
add
int3
outsb
add
jl
cmp
aam
or
sub
adc
scas
fadd
pop
popl
cmc
orl
mov
ljmp
dec
pop
and
add
pop
mov
adc
lods
cmp
in
lods
test
xchg
xchg
shlb
cmpsb
pushf
int
cmp
mov
xchg
mov
add
mov
add
loop
pop
jo
lahf
fs
fdiv
cmovae
xor
mov
jp
fs
daa
xchg
stos
pop
into
sub
pusha
into
fs
aaa
gs
mov
iret
test
out
mov
rcrb
jae
arpl
mov
dec
mov
mov
xor
xadd
popf
cltd
in
insl
xor
mov
mov
outsl
xchg
incb
inc
push
xlat
stos
inc
sbb
ss
in
scas
mov
mov
or
jmp
lret
addr16
adc
jmp
lret
andb
out
xchg
inc
push
xchg
cmp
push
in
mov
leave
enter
lret
inc
xchg
dec
mov
xchg
xchg
mov
inc
xchg
jne
in
dec
test
sub
sub
gs
nop
lods
and
add
mov
addr16
fistl
into
aad
cmp
lahf
enter
lock
std
mov
mov
shrw
into
push
push
sbb
aad
jnp
leave
xchg
int3
clc
aam
mov
or
mov
loope
stos
mov
mov
xchg
mov
pop
sub
insl
jp
stos
inc
mov
stc
adc
or
ja
fs
cmp
lss
mov
movsb
inc
sub
jge
fsub
and
jcxz
jne
pop
pop
xchg
outsl
out
jecxz
jae
lods
ja
sbb
cmc
test
or
add
jecxz
xor
dec
sub
out
sub
xchg
mov
add
inc
push
stos
lods
and
xchg
shll
loope
fs
add
mov
pop
sbb
dec
scas
lahf
inc
int
inc
add
inc
and
rorl
je
mov
stos
nop
push
ffree
cmp
and
push
sub
pop
aad
lahf
mov
add
imul
inc
std
fs
jle
leave
xor
jmp
add
movsb
movsb
aaa
cmpsb
dec
insl
mov
lods
out
mov
jae
add
inc
sbb
jp
mov
mov
in
add
in
ret
sub
pop
mov
jo
inc
push
imulb
mov
add
xchg
cmpb
je
popa
cmp
sub
sub
or
mov
test
sub
mov
mov
mov
jbe
popf
inc
imul
int3
xor
mov
pop
gs
stos
lods
hlt
and
fwait
push
sahf
cmc
push
xchg
xor
stc
cwtl
sbb
stos
lret
push
sub
fs
out
cld
jge
xchg
jb
sub
cmpsl
out
mov
dec
sub
movsb
shll
cmp
adc
xchg
sbb
out
xlat
ljmp
cmc
fmul
rorb
pop
mulb
dec
mov
test
shrl
stos
std
outsl
mov
rorl
cmc
ficompl
fisubl
push
sbb
add
sbb
push
pop
xchg
adc
and
pop
add
mov
or
jns
mov
out
push
fisttpll
fyl2x
imul
xor
loopne,pn
jne
push
cmp
jae
ret
pop
pop
mov
incb
and
popf
cmp
call
mov
imul
loope
xchg
pop
dec
pop
stc
out
mov
xchg
cmp
daa
popa
xorl
sbb
mov
loop
xor
scas
add
ret
jae
mov
das
cmp
data16
mov
loop
xchg
clc
in
jne
insl
push
cli
dec
lea
outsl
fsubr
ret
addl
ss
test
mov
mov
mov
sbb
pushf
sub
push
mov
mov
jp
add
aas
sub
popf
adc
sbb
push
sub
fcoml
xor
pop
scas
mov
adc
fisubl
push
push
mov
loope
jns
cmp
sub
mov
xchg
sbb
mov
pop
mov
or
lods
adc
jns
sbb
incb
je
pop
sbb
lods
push
test
inc
pusha
inc
aas
std
vcvtpd2psy
mov
pop
sbb
sbb
lock
pop
out
add
or
jp
xor
jae
testb
sbb
sar
pusha
dec
aad
je
in
in
mov
adc
scas
xchg
into
insl
adc
sti
int
fwait
dec
dec
mov
push
mov
sub
ret
fisttps
dec
mov
adc
sbb
cwtl
shlb
cld
mov
xchg
and
mov
mov
or
rcl
jp
scas
sahf
scas
add
sbb
lods
lds
iret
cmpsb
inc
xlat
rcrb
adc
sub
and
dec
lahf
push
lret
jp
in
cltd
push
sub
sbb
sub
or
mov
mov
das
xor
xchg
inc
mov
aas
aaa
and
idivb
mov
push
lods
jmp
in
iret
sub
sahf
pop
ror
xorb
test
rclb
mov
hlt
adc
adc
out
icebp
insb
push
mov
lods
outsb
xchg
xor
mov
sti
pop
pop
pop
lret
mov
and
pop
outsb
aas
push
dec
fistpl
inc
out
inc
pop
and
iret
insl
aas
cs
scas
sbbb
outsb
xchg
mov
xor
adc
mov
or
mov
rcl
add
dec
stc
lock
jl
sub
cmp
aam
scas
add
inc
sub
pop
cli
arpl
push
or
push
xor
cmp
jo
cli
push
jne
popa
jl
ljmp
xchg
leave
adc
lret
ljmp
lahf
push
jge
sbb
mov
dec
scas
xchg
sbb
add
mov
stc
push
add
jle
jp
dec
inc
mov
mov
clc
pushw
cmpsl
or
xchg
xchg
sub
inc
ja
inc
enter
jne
pushf
fcoml
push
pop
scas
aad
pushf
jnp
ror
mov
jns
or
mov
enter
aad
outsl
mov
hlt
add
xacquire
xor
push
cli
in
loop
sbb
lock
push
sub
mov
push
push
rcl
roll
adc
adc
mov
cmp
shll
loopne
es
ds
sub
cmp
adc
mov
mov
rorl
sbb
and
jge
call
in
repnz
mul
sub
jmp
push
int
pop
sti
fiadds
fsubp
loopne
and
in
jne
push
cmp
les
and
mov
jae
xchg
test
adc
stc
xlat
add
outsl
mov
orl
and
sbb
xchg
push
push
lock
jle
gs
les
popa
decb
inc
cmp
stos
sbb
hlt
adc
mov
arpl
orb
scas
push
mull
inc
rcl
popw
or
dec
mov
lret
popa
cmp
clc
xchg
lret
pushf
xchg
pushf
pop
fstps
cli
mov
and
mov
pop
mull
push
gs
sbb
adcl
aas
arpl
mov
movsl
lea
int3
fildll
and
adc
xor
ds
add
mov
imul
push
mov
xchg
add
lcall
fsubs
ret
loopne
cld
push
push
mov
mov
and
jmp
cmpsl
flds
jge
into
ljmp
hlt
dec
lret
sti
push
or
andb
rcrb
mov
fistpl
lret
cli
out
cwtl
fdivrl
lods
lds
imul
sbb
xchg
pusha
lock
sbb
and
xor
mov
aam
cs
orb
mov
call
test
sub
call
add
call
sbbl
jmp
cmc
lret
movsl
ret
sub
sbb
push
fldenv
subb
pop
dec
roll
sarb
pop
mov
gs
in
leave
adcl
push
adc
out
xchg
or
nop
fucomip
out
daa
mov
mov
pop
pop
data16
hlt
mov
xor
inc
mov
xchg
or
int3
adc
pop
jae
daa
pop
adc
adc
and
sub
fs
popf
adc
or
cmp
pop
rcll
and
mov
data16
jno
dec
cwtl
aam
dec
testb
ja
sbb
and
pop
jnp
pushf
cwtl
pop
bound
push
add
pusha
ja
les
or
imul
loopne
jmp
cmp
mov
mov
fdivs
psrld
negb
sahf
xor
push
test
flds
mov
and
mov
sub
push
cmc
leave
imul
icebp
cmp
add
jmp
scas
jnp
jge
sbbl
sarb
das
imul
mov
xchg
push
jbe
mov
shr
fcoms
scas
mov
lds
dec
sarl
xor
fcmovbe
out
in
leave
add
mov
cmp
andl
stos
dec
lds
lods
push
sti
mov
cli
sbb
jbe
test
mov
mov
jns
and
jo
dec
shl
cmp
and
ret
cmpsl
or
mov
sbb
leave
jle
sub
andl
dec
and
fstps
gs
pusha
out
jne
pop
sub
mov
test
sbb
or
add
push
mov
imul
lods
cmpsl
or
adc
inc
lcall
nop
je
inc
jmp
mov
data16
pusha
ret
ja
sub
sub
into
mov
mov
sbb
pop
and
repnz
mov
xchg
int
mov
add
mov
daa
jne
jae
pop
scas
mov
push
inc
orb
adc
les
popa
cld
xchg
lret
xchg
push
xor
test
pusha
mov
mov
insb
xchg
fs
cmp
xor
push
jo
jbe
add
cmp
dec
fwait
pop
push
shrb
stos
mov
jmp
cmp
xchg
dec
dec
mov
fcom
cmpnltps
jnp
pop
dec
ljmp
jecxz
test
pop
inc
mov
sahf
add
int3
mov
bound
in
sar
js
fisubrl
mov
inc
add
ret
fidivrl
into
in
fidivs
adc
loope
aam
cmp
movsb
movsl
jnp
jp
daa
imul
jle
jp
imul
jl
notb
aaa
mov
fisubrs
push
push
jp
lcall
mov
mov
adc
mov
scas
ss
dec
shlb
sbb
pop
mov
xor
stos
or
xchg
call
jmp
orb
lret
mov
dec
jne
imul
fs
mov
push
add
inc
or
inc
push
xor
lcall
fldcw
insb
sbbb
scas
sarl
fsub
mov
adc
lret
and
es
dec
dec
test
or
daa
testl
and
push
mov
dec
mov
xchg
sub
outsb
mov
pop
leave
insl
push
in
push
decl
lahf
mov
loope
fstl
add
lret
mov
decl
sbb
fdivl
pop
cmp
adc
pop
mov
jge
lahf
test
adc
fdivs
cli
leave
fs
in
pushf
scas
in
enter
jne
aaa
ja
mov
es
jg
paddb
inc
je
cld
loope
fistps
in
push
mov
push
fldenv
sbb
mov
iret
mov
outsl
and
repz
or
imul
push
cltd
cmp
mov
lods
dec
addr16
int3
add
int3
gs
add
mov
rorl
cmp
xchg
das
push
sbb
movsl
dec
inc
xor
or
xchg
xor
pop
sti
lds
aaa
jne
jno
xor
notrack
loop
inc
push
outsb
loop
xlat
fwait
and
mov
push
popf
imull
ret
add
mov
or
stos
loop
xchg
sub
mov
lds
jg
andl
push
pusha
inc
ret
cmp
arpl
lcall
sbb
inc
fistpl
dec
pop
jge
fs
xor
test
stc
aas
and
xor
lahf
jns
aaa
notb
add
outsl
fs
sub
pop
jl
add
test
sub
jb
aas
aad
pop
adc
cli
shl
cmp
in
scas
xor
mov
cmp
ret
mov
adc
or
dec
movsb
jnp
mov
pop
pop
jae
fdiv
add
fists
add
pop
mov
and
iret
jno
push
lret
mov
scas
jbe
cmpsl
popf
aam
leave
addr16
imul
fcoms
sub
cmp
xlat
pushf
xchg
pop
addb
sub
pop
push
cmp
imul
mov
data16
imul
jae
push
jl
inc
jecxz
cmp
jge
clc
dec
pop
mov
xchg
pop
and
cltd
dec
sbb
subb
xchg
push
repnz
repz
lcall
mov
add
push
inc
and
rolb
and
sub
or
lods
popa
jge
test
scas
popf
call
cmp
sbb
lret
adc
adc
push
adc
fdivr
fcoml
js
fisubrs
pop
stos
jnp
push
int
fs
scas
out
mov
lcall
or
push
and
aad
or
sub
adc
push
jl
xchg
pop
adc
icebp
arpl
xor
cwtl
pop
enter
mov
orb
cmpsb
inc
mov
sub
loope
insb
mov
mov
out
xchg
mov
ja
sub
mov
xor
push
xchg
loopne
aas
into
mov
mov
popf
inc
mov
add
dec
fidivl
sub
jl
pop
jo
js
and
repnz
lahf
mov
loopne
adcb
or
adc
pop
jae
adc
fmull
imul
inc
mov
xchg
repz
int3
add
getsec
fcoml
jns
mov
ja
cmp
out
mov
mov
jp
outsl
pop
cld
mov
adc
and
int3
mov
ficoms
out
mov
insl
push
dec
mov
mov
pop
add
sbb
mov
and
icebp
into
aam
cmpsl
js
test
jb
sub
das
ss
roll
dec
and
dec
movsl
mov
mov
lret
std
test
inc
lcall
push
push
and
mov
inc
adc
mov
jnp
data16
inc
add
out
and
xchg
mov
and
imul
jns
shrl
or
das
push
mov
jge
insb
aaa
and
imul
gs
and
loope
addr16
adc
jbe
ret
dec
cmc
cmp
xchg
stc
cmpsl
xor
rcrl
push
nop
pop
pop
out
cwtl
or
jl
mov
out
mov
es
dec
xlat
les
ja
aam
test
gs
add
sbb
dec
sub
fwait
scas
cmp
sub
std
daa
out
int
mov
in
lock
enter
in
cmp
or
push
jne
mov
push
sbb
outsl
jecxz
adc
je
out
fcomps
sbb
stos
push
fimull
sbb
iret
outsb
lds
mov
or
sbb
fsubs
pop
stos
cmpb
sbb
in
mov
sbb
mov
jg
out
in
mov
jbe
data16
push
cld
add
js
xchg
xor
inc
push
xchg
cmpsl
lret
and
sub
push
or
repnz
mov
das
fcmovne
mov
xchg
imul
loop
and
adc
fidivs
imul
in
loope
push
jb
inc
repnz
int3
jge
dec
fsubs
cld
sti
jg
sub
pextrw
add
dec
pop
insl
push
iret
mov
mov
mov
or
leave
push
pop
xchg
sub
js
fwait
cmpsl
div
fwait
mov
popf
insb
leave
sbb
pop
pushf
cmp
pop
inc
mov
rorw
dec
pop
cltd
xor
dec
push
shll
cmp
push
xchg
mov
insl
jge
out
loop
inc
push
enter
mov
xor
enter
xor
cs
dec
mov
sbb
stos
rcrb
lret
add
aaa
and
xor
jp
and
mov
pop
push
sahf
fyl2x
sub
mov
lods
pushf
dec
loope
sub
sbb
fidivs
push
fistps
fildl
push
adc
int3
std
xchg
cmc
cmpsl
push
loop
add
dec
sub
cmpsl
jne
pop
shr
jge
jecxz
aas
sbb
push
mov
inc
inc
inc
mov
lahf
bound
es
add
push
gs
mov
dec
dec
cltd
xchg
mov
xchg
adc
aad
mov
jne
imulb
or
bound
loop
adc
lock
jl
test
lods
sbb
xor
push
testl
lea
adc
jb
shrl
jae
jge
lods
notb
and
jmp
test
data16
shlb
dec
xchg
cmp
insl
push
pop
xchg
jnp
ss
cmpsb
pop
xor
push
sbb
lret
push
out
ud1
jnp
sbb
push
int
pop
cmc
int
stos
aam
je
movsb
popa
test
fldt
inc
jae
add
and
mov
cwtl
or
mov
out
repz
add
in
call
outsl
ss
adc
lods
bound
push
jne
xchg
mov
andl
dec
sub
xchg
imul
pusha
roll
xor
addb
cltd
fildll
negl
into
jmp
arpl
push
adc
out
jmp
or
mov
or
movb
and
push
xchg
dec
cmp
hlt
out
xor
scas
add
fistpll
mov
insb
cmc
xorl
dec
rolb
gs
mov
sti
push
in
gs
sub
sbb
pop
aam
lea
std
xor
ret
pop
push
insb
int
fdivr
fistps
stos
mov
jecxz
sub
push
fsts
add
pop
mov
rol
mov
cmp
inc
sub
mov
add
jb
pop
fwait
push
and
out
mov
jp
pop
pop
test
jl
xor
loopne
xor
inc
out
sbb
lods
xchg
xor
ret
dec
jge
dec
cwtl
mov
push
push
call
gs
std
dec
fiadds
cmpsb
lods
push
insb
popa
pop
test
or
shrl
pop
jnp
inc
mov
repnz
daa
xor
pop
xchg
cltd
adc
mov
int
cld
pop
add
mov
mov
sbb
inc
lds
int
xorb
cmp
adc
ret
out
aad
push
xor
xor
dec
push
xchg
mov
cmp
lock
pop
sub
fdivrs
jl
inc
ds
push
xor
dec
shrl
xchg
fisttpll
popa
cmp
mov
xor
fwait
icebp
lods
std
hlt
out
repnz
push
outsl
jecxz
cmp
xchg
or
cmp
cmpsb
add
test
cmp
out
adc
andl
mov
call
mov
repz
sbb
add
cmp
sub
cmpsl
lods
add
outsb
mov
in
mov
popa
mov
lock
adc
test
xorl
adc
and
mov
xor
xchg
cltd
sti
dec
mov
inc
test
adc
jno
pop
loop
inc
jne
pxor
std
mov
push
insl
icebp
pop
lret
cmp
hlt
adc
mov
cmc
js
movaps
cmpb
or
repz
stos
stos
mov
mov
adc
push
dec
hlt
cmp
rcrl
sbb
pop
lock
sbb
bound
jl
mov
jg
and
cwtl
xchg
dec
or
notl
lods
inc
mov
pop
or
push
in
enter
push
das
loope
or
mov
subl
xchg
loopne
sti
push
test
cmp
aaa
stc
inc
pop
notl
ja
loope
adc
pop
mov
out
mov
lcall
jmp
popa
mov
sbb
ret
pop
jb
push
into
inc
movsb
pop
shrb
fsubs
cli
bound
rolb
jmp
popf
testb
cs
nop
jmp
cwtl
rorb
inc
pop
jb
mov
pop
mov
pop
cmc
or
pop
jbe
jl
negl
jno
daa
dec
neg
push
push
jg
xlat
dec
dec
lret
test
mov
sub
into
jno
push
rcr
andl
les
ret
sbb
sbb
adc
lahf
mov
xchg
bound
ret
loope
out
fwait
cmp
movb
jle
outsl
pop
hlt
pop
das
jns
dec
repz
fadd
adc
sub
xchg
in
shlb
adc
aas
shr
iret
bound
cs
mov
negl
arpl
cs
sbb
repnz
sbb
clc
xor
daa
repz
rcr
scas
cld
pop
xchg
sbb
rol
dec
stos
int3
ljmp
out
inc
leave
fidivrl
xchg
out
cmp
mov
scas
cld
push
dec
lods
adc
ss
dec
add
dec
jg
xor
push
sub
hlt
dec
xlat
or
add
int
mov
mov
dec
mov
dec
into
and
push
inc
arpl
sub
push
jecxz
and
mov
inc
pushf
loop
into
popf
jno
pop
mov
sub
loopne
ret
shl
lahf
mov
dec
outsb
icebp
fsubrs
push
jns
or
call
pop
ss
aam
pop
adc
mov
cmpsl
or
mov
inc
test
nop
pusha
push
bound
data16
inc
pushf
ss
adc
pop
fbld
rclb
leave
cmp
and
jae
pop
jg
sub
sub
pop
fsubl
je
fdivl
dec
jbe
sti
test
sub
inc
cmp
jns
imul
cld
shrl
sub
pushf
movsb
adc
decb
loopne
arpl
repnz
fstps
jmp
inc
loop
mov
mov
mov
jbe
push
pop
fidivs
pushf
and
dec
pop
loop
mov
cs
cmp
cmp
inc
idivl
fcompl
mov
pop
inc
push
push
jo
sbb
in
in
xor
out
push
test
xchg
mov
scas
mov
xchg
mov
fistpl
stos
movsl
sahf
pusha
pop
inc
jl
push
mov
add
mov
and
mov
mov
stos
push
inc
lea
jp
push
dec
fidivs
cmp
push
rcr
fdivrs
aam
jmp
cmc
sbb
mov
dec
xor
pop
inc
inc
out
pop
jb
inc
add
insl
pop
cmp
adc
rclb
outsb
mov
arpl
mov
lods
mov
mov
sub
mov
cmpsl
sbb
and
xchg
popf
pop
dec
and
mov
lods
loope
cmpsl
test
icebp
and
das
add
mov
pushf
cmp
pop
repnz
orb
mov
cmp
lds
sub
sbb
daa
mov
jo
fsub
inc
es
jge
rolb
push
scas
pop
gs
sub
jns
shrb
sub
dec
ret
cmp
sub
ja
loope
mov
mov
or
dec
int3
xchg
mov
xchg
lea
sub
mov
decl
fwait
aas
js
cmp
js
imul
mov
mov
xorl
sub
push
aam
sbb
add
rorb
movsl
jb
jae
inc
in
out
stc
inc
sahf
mov
icebp
outsl
pusha
push
sbb
movsb
cmp
jecxz
icebp
rolb
sahf
divb
shl
stos
mov
lret
pop
js
adc
mov
iret
pop
ja
jp
dec
mov
push
jg
pusha
imul
mov
and
lds
ffreep
test
push
and
test
enter
mov
push
stos
clc
cmp
mov
ret
mov
imul
js
mov
bound
cmp
xchg
push
call
push
jns
call
push
outsl
mov
iret
mov
int
sub
sbb
add
dec
jbe
scas
adc
adc
mov
cs
xchg
lahf
push
nop
pop
push
pop
or
fisttpll
sub
push
gs
jo
loop
and
sahf
sub
mov
jns
add
jbe
mov
cltd
stc
data16
inc
pop
rcll
or
out
jecxz
addr16
out
std
jge
push
mov
push
stos
and
gs
add
cmp
cmp
jl
cmp
and
fucomip
cmp
pop
cmpsl
ficoml
mov
sbb
mov
pop
sbb
xor
aaa
call
arpl
add
loope
cmpsb
push
fisttps
xchg
and
stos
or
cmp
test
xchg
lcall
dec
jnp
adc
mov
mov
mov
movsl
jnp
dec
insb
sub
aad
iret
push
cltd
ds
jnp
clc
push
cmp
cmp
sub
xchg
iret
mov
jno
into
jno
out
fldcw
jo
pusha
hlt
mov
clc
iret
xchg
jo
inc
test
cmp
and
pop
mov
mov
inc
stos
fwait
push
dec
rorb
mov
push
mov
push
mov
xor
sub
or
pop
insl
or
jno
push
dec
in
fnsave
cmp
enter
fildll
rclb
xor
mov
dec
fwait
mov
jecxz
adc
loop
sbb
jmp
sarb
mov
stc
jno
stc
sub
cs
mov
and
inc
aas
sub
insl
lds
pop
mov
test
dec
jae
mov
or
popa
sbb
sub
fcmovne
mov
insb
mov
or
mov
mov
nop
stos
mov
inc
lds
xor
icebp
inc
pop
mov
sub
test
and
fwait
test
push
xchg
push
scas
mov
loop
jmp
test
sbb
fnsave
xchg
and
push
xchg
jecxz
xor
push
daa
clc
xor
cmpb
fcmovb
cmp
arpl
mov
cmp
jmp
and
mov
and
jge
pop
fnstcw
mov
cmpsb
lods
push
jno
outsl
cmc
adc
cmp
scas
inc
cmp
das
mov
mov
inc
mov
dec
push
ret
daa
jns
push
int
movsl
icebp
arpl
xor
js
or
adc
mov
pushf
daa
roll
ljmp
push
push
push
loop
jo
lret
sub
imul
mov
sbb
lret
mov
or
mov
movb
xor
outsb
jb
and
dec
imul
push
jno
mov
mov
insb
push
cli
push
mov
cmpsl
enter
jmp
adc
sbb
inc
mov
and
jle
vshufpd
push
sahf
mov
lahf
mov
sbb
out
or
out
mov
aad
xchg
pop
dec
leave
pop
mov
jo
subb
push
jmp
hlt
test
and
sbb
mov
jle
ds
pop
dec
sbb
push
adc
insb
mov
test
xchg
dec
aas
mov
jno
aaa
xor
cmp
ret
mov
push
jl
xchg
xchg
dec
imul
andl
cltd
hlt
lea
mov
cmp
sbb
hlt
dec
sbb
mov
xorl
arpl
push
add
mov
test
and
jnp
xchg
push
and
loop
sbb
test
cmpsb
cmp
cmpsb
adcl
xchg
mov
je
mov
mov
inc
loop
icebp
mov
push
adc
pop
cmpsb
mov
or
add
loope
ret
sti
stos
or
js
ret
movsb
pop
imul
stos
pop
arpl
bound
clc
movsb
leave
test
scas
sub
or
leave
int
sarl
daa
inc
xlat
incb
lock
push
pop
sbb
push
repz
mov
mov
xchg
loop
outsb
out
push
call
sub
out
hlt
jg
add
jno
test
test
mov
lahf
insl
jmp
push
jbe
jmp
inc
clc
andb
loopne
scas
lret
jns
pop
pop
add
dec
or
mov
xor
push
mov
lcall
mov
sti
sub
fsubl
add
xor
xchg
push
loop,pt
dec
mov
and
push
repz
out
sub
or
fwait
repnz
pop
dec
xchg
xor
in
pop
movsb
mov
xchg
sbb
and
mov
js
sub
mov
jmp
jae
mov
inc
lret
shlb
das
push
nop
lock
sahf
jno
lahf
sbb
add
std
cmp
mov
test
jecxz
notl
movsb
push
xor
xor
mov
insl
jl
mov
sub
fbstp
cmp
pusha
mov
sbb
jge
lret
jns
rcr
cld
push
add
pop
shl
into
aaa
push
inc
shlb
sub
bound
insl
hlt
roll
stos
movsb
outsl
iret
nop
mov
repnz
push
inc
aam
jb
gs
mov
mov
xchg
mov
inc
sbb
push
xchg
mov
mov
mov
dec
xor
lahf
ds
sub
mov
fsubl
lret
clc
and
dec
xchg
andps
icebp
sti
int
rclb
std
enter
adc
pop
fs
mov
push
out
stc
out
call
insl
je
clc
fcomip
lods
aas
inc
xlat
xchg
mov
xchg
loopne
xor
cmpsb
push
mov
dec
nop
pop
mov
imul
jne
sbb
stc
fistpll
aam
lods
xor
mov
idivl
movsl
lock
daa
mov
sub
pop
mov
jl
add
pop
das
lods
pop
inc
inc
dec
and
dec
xchg
sbb
int3
aaa
sbb
xchg
test
inc
cs
or
push
dec
cltd
add
stos
subps
or
loopne
sti
or
outsb
pop
adc
lds
imul
aas
jb
jb
lahf
adcb
movsb
pop
xchg
xchg
jge
pop
or
ja
sub
mov
mov
pop
xchg
in
imul
dec
lods
lahf
adc
inc
aad
sbb
mov
inc
rol
test
outsb
repz
adc
mov
daa
lret
push
fucom
add
xchg
dec
jecxz
shrl
movsb
mov
pop
adc
lahf
mov
mov
dec
and
xor
add
or
int3
dec
mov
push
jo
lods
lock
imul
adc
mov
jge
push
into
movb
xchg
std
adc
mov
into
out
or
jecxz
clc
loope
xor
je
push
sbb
mov
push
repz
arpl
inc
mov
cmp
pop
xor
sahf
mov
pusha
cmpsb
lods
pop
test
lahf
xor
dec
fldenv
stos
scas
push
mov
inc
test
scas
loopne
xor
lahf
lcall
jne
andl
jl
pop
mov
sbb
lret
ret
lcall
lock
push
sbb
negb
not
mov
subl
or
push
push
pop
aaa
push
mov
mov
test
out
cmc
sub
push
xchg
xor
loopne
pop
mov
rclb
sub
jnp
inc
repnz
dec
jp
xchg
push
jge
jp
ret
xchg
in
es
xchg
push
int
sub
push
add
mov
lret
jns
lods
inc
push
pusha
cmp
adc
mov
sub
imul
popa
mov
and
dec
dec
xchg
insb
dec
or
jns
xor
inc
pop
push
arpl
push
sbb
jmp
lcall
xlat
push
aam
gs
sbb
inc
mov
lods
repz
in
jbe
jg
cltd
or
movsb
pop
pop
out
scas
mov
fnstenv
ret
sbb
sub
fcoml
push
fs
xchg
mov
jecxz
xchg
jl
inc
mov
sub
mov
sbbb
fldenv
dec
in
sbb
mov
or
loopne
jne
test
xor
je
test
xchg
sub
call
dec
mov
adc
xor
inc
mov
inc
ja
mov
cmpsl
mov
outsl
dec
jbe
inc
dec
fcoms
and
pushf
push
mov
leave
inc
add
call
xor
add
stos
icebp
repnz
popf
ret
ja
or
fadds
iret
pop
fisttpl
dec
and
sub
mov
xchg
aaa
cmpsb
ror
mov
cmp
inc
clc
es
loope
cmc
loopne
xor
and
sarl
inc
repnz
jo
xchg
sub
loop
or
bound
xchg
inc
xchg
mov
sub
sub
fdivs
cmc
adc
add
out
inc
mulb
loope
mov
dec
and
jge
lock
push
sbb
stc
adc
aad
into
cmpsb
dec
push
in
scas
in
hlt
push
pop
pop
ja
dec
call
inc
pop
fwait
inc
mov
add
imul
popf
dec
mov
pushf
pop
aas
ds
imul
add
scas
or
xchg
outsl
add
jecxz
sub
adc
and
sbb
iret
push
sub
mov
mov
insl
inc
jecxz
and
sahf
dec
add
cmp
int3
outsb
imul
sti
jnp
ret
push
push
sub
pusha
push
aam
jo
je
int3
xor
mov
int
mov
xor
lea
cmpsl
inc
out
mov
jbe
arpl
fcmovu
test
xchg
and
roll
lahf
lea
inc
popa
push
xor
cmc
test
out
les
insb
sub
in
test
mov
mov
push
and
cs
aam
cmp
jp
outsb
stos
out
sbb
das
xlat
sahf
mov
sub
push
mov
pop
xchg
or
mov
xor
sarl
dec
jnp
pop
mov
jmp
es
mov
jecxz
js
cmp
lret
push
lds
sti
loop
mov
enter
inc
lahf
ret
incl
scas
add
out
mov
xor
aaa
imul
pop
adc
mov
jns
out
dec
adc
cmp
scas
push
mov
jge
mov
mov
je
cmp
gs
sahf
pop
aas
push
pop
sbb
or
or
or
test
in
lahf
jmp
mov
cwtl
fstl
hlt
xor
mov
jne
int
xchg
fldcw
loopne
xor
idivl
inc
jo
cwtl
sub
nop
mov
popa
andl
xchg
int
jns
sub
bound
test
out
adc
or
mov
decl
jbe
jg
or
rcll
popf
lods
push
mov
mov
cmp
xchg
pop
les
das
jne
and
cmp
xlat
jne
int
stos
or
pop
scas
std
or
mov
cmp
cs
sub
lods
pusha
rorb
xorb
aam
lea
sbb
dec
es
stos
mov
clc
sbb
mov
aad
push
aam
push
loop
jl
sbb
jnp
fsts
roll
xchg
push
xor
aam
insl
jmp
cltd
push
leave
jbe
lock
xchg
cmp
rorl
sahf
rclb
lds
imul
jmp
lock
mov
lea
cmpb
add
popf
xor
test
add
in
push
and
cmp
add
fisttpll
sbb
in
jg
or
fisubrl
outsb
cmp
icebp
sbb
and
dec
cmpsb
cwtl
sub
test
mov
cmpsb
mov
fiaddl
sbb
insb
in
js
or
nop
xor
jbe
mov
aaa
subl
lods
push
and
sub
xchg
push
cltd
pushf
ficomps
cmp
xchg
shr
in
pop
mov
loopne
shlb
data16
mov
test
jle
into
jmp
les
pop
popf
xchg
jb
xchg
adc
mov
mov
testl
mov
and
dec
stos
xor
arpl
cltd
push
lahf
je
mov
lods
sbb
jl
data16
mov
outsb
add
test
std
xor
pushf
mov
dec
ret
int3
and
pushf
jmp
cmp
xchg
dec
roll
out
in
test
lret
mov
inc
cmp
call
pop
xchg
jecxz
roll
mull
pop
and
jecxz
inc
repnz
cli
cmp
insb
jo
dec
stc
and
flds
mov
add
mov
push
int3
adc
inc
mov
lsl
mulb
push
pop
or
mov
mov
aad
out
pop
loope
pop
lret
inc
mov
imul
add
js
je
sarb
jp
outsb
sahf
bnd
push
jle
and
aaa
idivl
jbe
push
hlt
sbb
lcall
inc
in
push
scas
in
les
fldcw
ret
jbe
hlt
scas
sbb
push
cmp
cmc
test
adc
scas
outsl
xchg
xchg
cmpsl
pop
cwtl
and
fisttpl
lods
inc
or
ror
sti
push
sbb
add
fs
mov
push
cmp
xor
xchg
and
mov
std
push
dec
cmpl
jnp
fldcw
subb
jno
adc
mov
sub
xor
addr16
arpl
pop
cmp
nop
imul
fbld
jo
cmp
jb
or
add
in
pop
fadd
hlt
enter
cmp
out
in
es
movsb
pushw
mov
pop
arpl
sub
jb
jecxz
xorb
xor
out
in
fs
inc
push
add
cmpsl
sub
roll
loopne
mov
cmp
loop
add
aaa
inc
push
lea
iret
jns
jge
sub
sbb
sar
test
push
jo
pop
lock
mov
mov
sbb
je
cwtl
add
sub
pop
les
xor
movsb
inc
imul
out
cmp
inc
arpl
iret
dec
lock
arpl
dec
sarl
jno
sahf
sub
add
enter
push
imul
push
mov
pop
dec
cmpsl
xor
push
rcl
mov
cmp
jmp
ret
aad
ja
lods
pop
fwait
popa
sarb
stos
push
xor
ljmp
or
clc
xor
jmp
in
outsl
rclb
repz
push
jbe
mov
sbb
sbb
sub
scas
inc
cmpsl
push
inc
mov
pusha
push
stos
mov
push
jno
adc
mov
hlt
mov
inc
jae
mov
stc
inc
stos
dec
lods
mov
daa
ret
push
push
push
xchg
pop
adc
jge
jbe
leave
mov
cmc
pushf
cmp
movsl
nop
fs
mov
scas
jmp
mov
xchg
imulb
sahf
js
aam
add
cmp
xchg
test
jecxz
or
inc
scas
ja
int
rcll
out
popa
add
lret
loope
outsb
icebp
dec
push
dec
pop
sbb
add
inc
outsl
stos
js
sbb
std
jbe
and
das
jmp
out
rorl
pop
fistpl
and
int3
xor
out
popa
dec
out
xor
cmp
inc
mov
inc
ret
push
ret
into
cmp
lcall
and
lea
mov
mov
mov
dec
push
pop
hlt
imul
and
cs
push
cli
sti
cmp
jbe
iret
mov
mov
push
adc
cwtl
xchg
shll
les
aas
es
xchg
into
sub
movsl
pop
cs
imul
fists
out
mov
jne
mov
and
cmp
xchg
mull
popa
jo
inc
pop
sahf
rcll
lahf
jb
adcb
cltd
ficomps
cltd
mov
push
xlat
shlb
orb
pusha
mov
mov
pop
les
repnz
inc
nop
mov
dec
inc
aam
scas
jl
scas
pop
movsb
fstl
out
cwtl
popf
lret
or
lds
or
lock
movsl
sahf
movsb
or
cmpsl
loope
push
push
push
pop
sub
cmpsb
aam
imul
sbb
in
inc
sub
shrb
or
xor
stos
movsl
mov
loope
sub
sub
xchg
push
lret
jb
out
or
cmp
cmpsb
imul
xchg
mov
and
mov
sbb
and
scas
std
dec
into
or
imul
paddsb
fistpl
xchg
cmp
jg
fucomi
and
push
dec
pop
push
sub
loopne
pop
nop
imul
cmp
movsl
jo
and
pop
add
addr16
xor
jp
and
and
aas
loope
pop
imul
mov
outsb
into
cmp
inc
into
into
sbb
mov
push
sti
sti
lea
pop
cld
jl
fidivrs
inc
repnz
cmpsb
jmp
ss
xchg
cmpsl
add
jle
mov
mov
loope
adc
call
mov
fld1
data16
pop
jno
push
dec
xor
inc
jg
out
jle
jl
hlt
repnz
sar
call
xchg
adc
jp
pop
out
data16
push
incb
cmpsl
clc
mov
xchg
fidivrl
push
xchg
in
sbb
clc
push
push
push
int
jl
add
dec
jge
fucomip
or
les
and
adc
cli
ljmp
jns
es
nop
fdivr
and
mov
outsb
aas
fs
adc
out
arpl
clc
xlat
insl
inc
sar
inc
icebp
xchg
xrelease
inc
ljmp
pop
insl
xor
sbb
and
cmp
sub
xchg
cmc
bound
subb
xorl
mov
in
lods
leave
stc
inc
notl
scas
fsubrs
rcrl
push
fs
sbb
jno
cs
inc
or
fcoml
xchg
test
fisubrl
stc
dec
lods
adc
mov
add
cmpsb
mov
bound
gs
stc
dec
ja
rolb
jp
xchg
mov
dec
fs
insl
push
iret
stos
repnz
dec
fnstsw
adc
adc
in
je
cmp
pusha
inc
cmc
push
int
es
or
outsl
dec
mov
mov
ss
lret
xlat
hlt
jmp
xchg
jb
xchg
insb
ljmp
or
pop
add
rolb
out
or
push
sub
lret
sub
cld
cwtl
xlat
shl
add
jno
fdivl
loop
mov
scas
lahf
adc
xor
scas
scas
int3
inc
gs
pop
add
or
outsb
jb
mov
lret
fbld
pop
inc
pop
push
inc
xor
mov
icebp
movl
imul
push
fidivrl
testl
xchg
std
add
mov
hlt
pop
mov
add
push
icebp
mov
jbe
cltd
imul
aad
and
movsb
das
dec
sub
fsubs
stos
std
imul
es
incl
dec
jo
sbb
andl
imul
aas
adc
inc
hlt
lret
pop
dec
mov
incb
in
flds
mov
test
daa
dec
mov
test
les
test
test
shl
orl
and
fsub
inc
stos
add
fimuls
cld
cmpsb
push
aaa
pop
cmp
es
addb
jle
push
adc
add
and
lret
cmp
inc
sti
mov
xlat
mov
cmpsb
push
push
daa
in
pop
dec
mov
rol
divb
xchg
testb
mov
mov
std
jg
cmpsb
mov
pop
stos
sub
cltd
dec
xchg
jbe
xlat
test
jmp
rcrb
pop
fs
add
arpl
loope
cmp
leave
pop
mov
je
cld
shll
lea
leave
rorb
xor
lret
cmp
arpl
pop
push
mov
les
lods
jo
and
aaa
add
cmpsb
incl
data16
ljmp
lret
jne
ljmp
aaa
mov
prefetch
or
push
inc
cmc
outsl
ljmp
fwait
mov
into
sarb
jge
pop
filds
outsb
xchg
push
in
sub
mov
inc
inc
mov
mov
jo
aam
int3
xlat
hlt
nop
add
adc
xchg
stos
ret
into
pop
add
cmp
push
rcll
adc
int3
decb
pop
pop
es
inc
popf
push
inc
cmp
fbstp
cmp
sub
mov
lahf
push
cmp
mov
sub
popf
iret
push
lcall
cs
fbld
jmp
adc
mov
sub
sbb
xchg
mov
loop
sti
ss
adc
fadd
jg
jp
subb
mov
jle
dec
mov
cltd
jns
xor
ret
or
xor
sub
pop
fisttpll
js
dec
xor
xlat
xchg
mov
inc
clc
or
mov
hlt
das
sbb
les
xchg
out
sbb
xchg
icebp
call
fidivrs
pop
sub
stc
add
jg
dec
gs
dec
jnp
scas
push
jo
imul
test
lock
les
xor
roll
push
loope
pop
push
xor
jnp
mov
cld
jnp
inc
mov
adc
mov
push
sbbl
sahf
enter
ret
movsl
jg
xor
xchg
inc
leave
dec
mov
cmpsb
arpl
std
nop
aam
inc
sbb
sbb
or
sbb
imul
stos
insb
jp
insb
pop
or
cwtl
cmp
xor
xor
cld
stos
lods
pop
inc
mov
xchg
adc
data16
xchg
nop
and
scas
mov
or
cmp
popf
push
pusha
fmull
mov
jmp
push
mov
fstl
arpl
les
jae
push
and
push
mov
sub
pop
dec
movsb
mov
pop
subl
mov
sub
xchg
push
rolb
push
mov
xchg
outsb
cs
mov
cmp
imul
fdivl
decl
mov
js
mov
mov
out
adc
mov
mov
or
scas
mov
inc
sbb
cmp
sub
mov
gs
bound
jnp
sub
pop
inc
cmp
lret
jo
or
xor
mov
xchg
bnd
iret
test
fwait
jb
fadds
push
aad
dec
inc
add
lret
roll
push
imul
test
sahf
mov
xor
js
sub
fwait
les
in
mov
cmp
push
mov
pop
dec
inc
mov
inc
or
pop
icebp
js
filds
dec
shr
movsb
popa
jecxz
pop
repnz
cmp
sahf
add
aad
xor
cmp
adc
jo
ljmp
js
aad
lea
push
rcll
ljmp
jnp
inc
and
enter
pop
dec
sbb
sbb
adc
and
mov
mov
push
mov
test
inc
in
out
lcall
and
push
pop
nop
popf
jge
test
xchg
mov
inc
test
es
scas
in
js
leave
mov
test
fdivl
mov
mov
mov
lods
inc
cmp
dec
lcall
mov
fimull
movsl
adc
in
dec
push
jo
cmp
and
test
adc
ds
ret
jp
push
ds
fmuls
roll
lret
fcmovnu
out
sub
push
and
imul
mov
push
xchg
xlat
cmp
fadds
stos
and
pop
xchg
in
jb
jb
lcall
in
sbb
cmpb
mov
stos
mov
jo
out
outsb
bnd
inc
std
mov
add
dec
add
pop
dec
loop
xchg
stos
cli
and
or
cwtl
mov
sub
pushw
loop
cmpsb
push
clc
sbb
out
adc
ljmp
shll
adc
jg
xchg
adc
mov
mov
bt
sub
dec
mov
inc
pop
rorl
rclb
or
dec
repnz
jl
ret
pop
rol
lcall
in
jb
test
in
sbb
mov
iret
inc
jmp
outsl
push
xor
xchg
add
lock
jecxz
xor
cmp
in
shr
mov
dec
aas
push
mov
push
cmp
dec
add
icebp
xor
dec
loop
sbb
dec
sbbl
insb
fwait
orl
jg
popa
dec
inc
add
dec
adc
xor
scas
xchg
dec
mov
jg
dec
call
cmp
mov
adc
in
dec
or
or
adc
mov
mov
shr
mov
jmp
in
ss
jmp
cltd
fnstenv
fnstsw
loopne
into
lds
cli
inc
sbb
mov
and
fstps
mov
pop
lcall
inc
call
mov
subb
gs
xchg
cltd
gs
loope
cmp
mov
or
push
stc
sub
inc
cwtl
sub
sub
cmp
pop
mov
cmc
or
lret
or
sbb
push
aas
in
daa
cmp
or
xchg
jno
xor
pop
push
or
xor
inc
adc
sbb
cmpsl
daa
pushaw
fists
xchg
notl
sbb
shll
mov
rorb
add
sbb
mov
fcomps
add
notl
lcall
aam
push
aas
pushf
xchg
push
mov
ljmp
mov
push
or
xchg
rcl
ret
leave
lcall
xlat
mov
xchg
xchg
add
mov
arpl
add
add
xchg
rolb
sbb
out
imul
push
mov
mov
gs
mov
add
pop
in
jno
ret
sbb
and
push
sbb
mov
lods
loop
dec
xor
imul
outsl
imul
dec
mov
dec
andl
add
idivl
dec
stos
cld
inc
fdivrs
mov
adc
nop
mov
lods
test
outsb
out
aaa
and
mov
or
sbb
or
or
jnp
adc
or
jmp
xlat
adc
fsubrl
xchg
test
lods
pushf
inc
sbb
je
inc
xchg
fsubr
pop
jbe
sahf
out
or
inc
push
pop
mov
inc
imul
pop
lahf
test
xor
add
xor
cmpsl
icebp
inc
jecxz
popa
data16
sub
lahf
xor
sub
cmp
sbb
push
cmp
add
or
cmp
push
and
sti
out
xchg
pop
fst
cld
cltd
inc
push
adc
and
jbe
loopne
fdivr
jmp
and
sub
dec
dec
or
inc
in
dec
movsl
dec
scas
dec
test
mov
mov
mov
and
mov
lds
xor
loope
stos
pop
popa
dec
in
sub
add
add
xchg
in
daa
or
sbb
sub
mov
int3
adc
sbbb
push
mov
dec
cld
push
js
mov
xchg
add
repnz
mov
mov
fstp
push
pop
or
ja
inc
adc
jle
add
shlb
push
hlt
inc
mov
vdivss
nop
sbb
jp
push
jo
inc
aad
mov
dec
dec
pushf
in
mov
in
mov
pop
jp
inc
daa
lock
add
iret
jno
insb
jae
adc
pop
decl
sub
call
or
pop
adc
cmp
pop
sbb
lcall
addl
es
sub
sahf
repz
mov
inc
cmc
push
lret
pop
pop
out
aaa
mov
es
out
out
xor
incb
mov
mov
mov
outsl
es
pusha
movsb
push
lds
mov
push
pusha
fldl
adc
pop
jmp
fsubs
xor
clc
push
adc
shlb
rcrl
xchg
inc
pop
testb
xor
inc
xchg
inc
mov
adc
test
insl
and
xor
push
mov
mov
das
test
jo
out
fwait
jl
push
mov
fsubrs
cmc
or
inc
inc
pushf
aas
fprem1
xchg
insl
lods
movsl
push
dec
daa
in
sarl
mov
fwait
mov
sbb
ljmp
sbb
mov
mov
dec
xchg
dec
out
addb
stc
lahf
mov
jnp
jl
lods
cli
add
cwtl
push
sub
cmpl
pop
xor
push
jp
shl
sub
sub
int3
xchg
popa
jae
pop
pop
cmp
push
pop
jge
xlat
or
out
inc
daa
xor
pusha
daa
push
adc
stc
sub
cli
push
mov
stos
adc
and
mov
inc
push
sti
xchg
sub
js
jae
mov
popf
xchg
loope
push
and
mov
xlat
mov
jp
stos
cmc
mov
push
or
ss
insl
mov
test
sub
jae
mov
mov
xchg
jmp
mov
in
in
pshufw
fstpt
mov
icebp
mov
js
xor
xlat
mov
mov
imul
out
fcmovbe
ficomps
sbb
ljmp
test
ret
out
lret
call
dec
adc
adc
mov
sub
dec
icebp
rorb
mov
sbb
jns
or
es
pop
cmp
fbstp
jg
xor
in
jbe
dec
inc
sahf
in
test
xchg
rolb
xchg
loop
popl
aam
mulps
das
cmc
mov
ds
lret
mov
and
pop
mov
sub
or
dec
pop
incb
fstps
bound
and
clc
sbb
repz
pop
or
notb
lds
cltd
push
in
xchg
sahf
fsubs
es
bound
jle
fimuls
jmp
mov
stos
jp
and
test
dec
and
addr16
adc
fbld
xchg
xchg
mov
pop
jecxz
add
jmp
pop
lods
outsl
popf
pop
outsb
lcall
insb
xchg
int3
mov
notb
push
and
stc
jle
xchg
inc
sti
cltd
xor
pop
mov
pop
movsb
adc
xchg
or
xor
or
jg
pop
into
stc
mov
and
ret
mov
mov
fstps
add
jmp
loopne
shll
nop
loop
xor
mov
test
test
jl
mov
mov
sub
push
shufps
gs
test
call
push
mov
repz
jns
jae
daa
movl
addb
hlt
sub
mov
popa
dec
add
or
mov
fwait
test
or
mov
add
cmp
ja
bndldx
bnd
imul
xlat
pop
les
enter
lret
sbb
xor
fstl
mov
jbe
lods
mov
cmp
rorl
or
fwait
jp
loope
push
adc
shr
repz
mov
pop
lods
leave
sub
pop
movsl
and
leave
imul
movsb
fcomi
sbb
xlat
das
inc
mov
mov
cltd
mov
xor
sub
push
xor
sbb
sti
mov
sti
je
nop
cmpsb
cmp
adc
lods
push
fldt
jns
mov
test
scas
jne
mov
leave
lods
adc
dec
pop
mov
cli
lcall
inc
adc
lea
inc
orps
sbb
loope
filds
call
xorl
push
mov
hlt
sbb
mov
xchg
in
xchg
xor
push
mov
in
mov
inc
pop
adc
insl
jl
jae
mov
addl
xchg
xor
push
aad
leave
fistps
mov
inc
or
adc
pop
cmc
jp
es
mov
jnp
aam
idivl
xchg
enter
test
cld
cs
repz
mov
cmp
dec
inc
sub
cmp
dec
or
movsb
pop
call
hlt
vunpckhps
add
lea
jbe
inc
adc
movsl
sti
dec
inc
out
bound
mov
sbb
mov
mov
xlat
out
mov
inc
lahf
sarl
cld
int
or
add
dec
cmp
push
stc
aas
dec
addr16
push
jmp
out
ret
xchg
push
icebp
cmp
fcoml
pop
lahf
jnp
imul
inc
shlb
fsubrs
fdivs
inc
xorb
push
lds
sahf
ja
das
fists
rcr
mov
scas
and
mov
test
enter
stos
cmp
push
int
mov
stc
lock
stc
dec
mov
dec
push
push
fucom
and
das
add
pop
mov
movsl
cld
adc
cmp
jecxz
pop
pop
mov
shlb
mov
push
mov
add
jae
cltd
xor
ss
vmread
andl
fwait
dec
test
inc
push
fwait
in
xor
out
aaa
fwait
in
je
inc
dec
addl
int
into
cmc
cmp
and
in
sub
outsl
out
xor
leave
mov
out
mov
push
xor
in
push
xor
data16
ja
or
shll
mov
std
jno
scas
leave
ja
and
fdivr
inc
popa
mov
dec
cmpsb
shlb
sub
mov
sub
testl
ss
adc
enter
pop
cmp
mov
cmc
scas
ret
push
push
adc
shrb
fidivrl
mov
xor
sbb
adc
adc
push
xor
and
or
pop
insb
mov
mov
movsb
ss
xchg
lahf
add
add
push
adc
fistpl
shrb
cmpsl
repnz
negb
and
xchg
cmpb
cmpsl
in
push
sbb
push
imul
sar
pop
decb
xchg
jl
rorb
dec
gs
insl
xchg
loop
adc
addr16
cmp
fiadds
loop
xor
pop
out
adc
mov
sub
sbbl
push
mov
cmp
or
xchg
into
xorl
cmp
int
shll
push
mov
add
addb
ja
dec
pop
sbb
shll
dec
push
sbb
sbbb
jbe
sahf
mov
or
cmp
lock
push
push
call
popf
shrl
test
and
fidivrs
push
xor
pop
loopne
addr16
inc
push
cmp
ja
push
cmp
pushf
jnp
testb
sbb
js
cmp
fistpll
inc
fmuls
cmc
inc
xchg
xchg
inc
mov
ret
or
push
leave
rcr
lods
mov
mov
sub
push
sti
pop
jae
xchg
lods
pop
mov
add
or
xchg
mov
into
insl
lock
jno
inc
adc
lea
push
xchg
push
aam
into
push
jbe
cmpb
pop
jo
test
aam
imul
enter
cld
scas
je
jb
outsl
and
jecxz
testl
negb
jo
sbb
add
enter
fs
test
addr16
xor
in
cmc
insb
xchg
iret
popf
sub
and
sbb
ja
pushf
inc
les
jns
pushw
xchg
stc
cmp
icebp
insl
hlt
icebp
iret
add
push
cltd
or
mov
jecxz
pop
ret
into
xchg
sub
dec
mov
js
out
cmc
bound
xchg
mov
jb
mov
ror
dec
mov
test
cmpsl
shrl
dec
and
add
inc
rcr
fsubrs
addr16
mov
dec
sbbl
fstpt
xor
push
cmp
xchg
leave
dec
and
in
mov
int
cmp
push
orl
xchg
dec
dec
jne
xchg
and
insb
pop
rclb
inc
out
in
pop
repnz
pop
pop
pop
in
fwait
rclb
cltd
or
mov
or
pop
aaa
mov
int3
pop
jl
insb
push
inc
or
out
mov
xor
je
sar
dec
mov
mov
sahf
xchg
loope
dec
je
imul
mov
mov
pop
ficomps
std
add
sub
mov
mov
xchg
out
cmp
and
jno
test
mov
xchg
cmp
push
pop
movsb
sbb
in
jle
cmp
push
cs
jae
mov
push
lea
and
pop
xchg
ret
mull
jne
jecxz
fsubrl
adc
mov
or
or
in
jne
arpl
mov
xchg
inc
lods
jbe
repnz
stos
adc
fnstenv
subb
dec
push
cmc
or
pop
sbb
inc
mov
imul
mov
insb
pop
dec
xchg
add
pop
adc
sbb
loopne
or
sbb
inc
in
and
push
mov
dec
push
pop
add
adc
mov
cmpsl
mov
test
shrb
popf
add
sub
push
inc
icebp
xor
inc
ror
adc
aam
sub
dec
mov
ja
sbb
je
or
addr16
cs
mov
jae
sbb
rclb
rcl
js
and
mov
cmpsb
adc
or
mov
mov
sub
jbe
sbb
inc
sub
xor
mov
add
rclb
adcb
sub
lret
or
arpl
lsl
mov
aad
xchg
mov
jns
dec
mov
dec
pop
mov
js,pt
inc
stos
loope
mov
popa
adcl
sti
jmp
sub
dec
rcll
popf
xorb
adc
sbb
test
cltd
sbb
dec
or
in
mov
test
cmpb
ret
dec
or
or
xchg
mov
icebp
xchg
movsl
sti
cld
or
arpl
in
insl
push
jge
jns
push
iret
dec
sub
aad
repz
call
push
dec
sub
jbe
js
insl
ja
jp
addl
and
or
xchg
out
ss
call
loop
inc
adc
push
andb
out
push
mov
sbb
std
mov
xor
jo
cli
test
push
inc
jo
jo
jmp
lret
push
inc
adc
js
lea
mov
pop
xor
addr16
mov
rcrb
dec
inc
int
outsl
mov
xchg
or
outsb
xor
repz
adc
push
xor
jge
sub
jns
loopne
jg
mull
dec
fiaddl
sbb
pop
mov
arpl
lods
xchg
lcall
andb
movsb
jge
stos
repz
pusha
adc
outsb
int3
fists
in
ja
xor
jle
mov
sahf
adc
cmp
jle
fs
adc
dec
inc
xchg
jo
sub
adc
mov
jne
mov
mov
sub
push
xchg
ret
jmp
ss
inc
loopne
les
int
rcrl
hlt
enter
addr16
roll
pop
loop
lea
push
cmp
pushf
faddl
iret
mov
add
psraw
adc
add
aam
stc
cmpsl
popl
pusha
or
fcoms
jno
mov
add
adc
inc
pop
push
xor
mov
roll
adc
xor
lea
lods
cltd
dec
insb
mov
repz
popa
out
cwtl
ljmp
and
shll
ljmp
repz
mov
or
mov
or
or
dec
in
fldt
inc
daa
xchg
inc
testl
and
xorl
push
push
cmc
jp
mov
lret
je
aam
mov
lds
jae
lret
sub
pop
push
add
push
push
rolb
push
out
loop
mov
in
and
jb
jecxz
add
xchg
data16
dec
pushf
andl
sbb
shll
fdivp
outsl
lret
lret
or
es
jae
inc
mov
jo
push
in
shrb
or
addr16
arpl
mov
sbb
jp
inc
xchg
nop
jp
call
pushf
push
xor
xchg
aas
push
mov
cmc
jo
push
scas
mov
dec
adc
sti
sub
mov
in
dec
add
scas
call
jle
or
or
into
mov
inc
ja
fcomi
mov
cmpsl
call
mov
xorb
sar
push
xor
cmp
dec
aam
arpl
and
outsl
idiv
push
or
jg
mov
fwait
ss
sbb
insl
pop
push
xor
arpl
mov
cmp
imul
jmp
mov
iret
enter
rcrl
inc
fucomip
testl
pop
dec
sti
loop
sub
in
ds
jo
ret
dec
es
es
aam
aaa
jne
adc
dec
lock
inc
mov
pop
rcrb
std
int3
addr16
add
push
sub
dec
int3
mov
mov
jbe
ret
loope
cmpb
xor
inc
mov
mov
sbbl
or
testb
adc
setle
into
lahf
xchg
jp
pop
push
fsubl
push
jp
xor
and
out
sahf
movsl
sti
mov
dec
das
pop
je
adc
push
xchg
bnd
and
movsb
sbb
gs
aad
add
mov
iret
or
sbb
ret
arpl
inc
add
lret
push
inc
xlat
sbb
pop
jle
sbb
mov
cmp
sbb
xchg
add
inc
pushf
rol
daa
and
or
inc
lea
mov
outsb
xor
xchg
mov
aad
push
inc
mov
sti
outsl
and
inc
pop
and
fwait
loopne
imul
push
xor
fstps
mov
lcall
xor
cmc
mov
enter
cmp
jl
xor
push
in
mov
inc
ja
and
cmc
xor
cmp
mov
dec
xchg
stos
jmp
cmp
jge
push
xor
add
in
hlt
clc
sbb
add
jl
adc
je
rcrl
inc
ljmp
xor
pop
push
ficomps
jg
sbb
sub
xor
fsubrp
addb
inc
jo,pt
shrl
jae
stos
jge
inc
ljmp
and
push
xlat
dec
jmp
shlb
sub
and
repnz
fs
push
pop
and
out
pop
xor
pop
aam
sti
sahf
adc
push
cli
pop
adc
aaa
lds
nop
outsl
sbb
out
sbb
in
lret
mov
out
stos
xchg
test
arpl
mov
ret
cmp
int
mov
das
loop
xor
pop
mov
divl
ss
push
out
arpl
cmp
imulb
add
mov
pop
aam
loope
push
jp
sbb
push
cmp
icebp
insl
scas
insl
and
aad
sub
es
xchg
fbld
mov
into
and
lret
insl
out
ds
ret
in
test
lods
dec
mov
pop
xor
fmuls
dec
ds
pop
jmp
movsl
mov
push
pop
adc
adcb
xchg
and
and
cmp
dec
jbe
dec
sub
inc
cmp
cld
repz
std
xor
outsl
je
call
imul
push
jp
mov
mov
mov
insb
and
inc
das
pop
out
daa
jg
xchg
xor
mov
jo
dec
ds
xor
dec
jg
rcrb
push
lahf
lret
andl
lret
adc
xlat
popf
mov
jge
dec
fdivl
popf
xor
fdivr
xchg
xchg
xchg
dec
sub
jno
mov
pop
inc
cmpsl
insb
or
adc
icebp
push
pop
jne
daa
pop
aaa
xchg
pop
jnp
jecxz
pop
add
rolb
scas
mov
aam
call
mov
mov
cmp
inc
jne
mov
and
loopne
mov
fstl
hlt
rorl
lret
in
scas
rclb
ja
test
or
shr
jmp
and
lea
pushf
adc
cmp
xorb
mov
and
and
push
or
pop
out
mov
push
mov
inc
testb
inc
sarl
fsubl
outsl
rcll
cmc
and
cmpsl
and
nop
dec
std
pushf
push
pusha
cli
addb
in
mov
fistps
mov
inc
jmp
clc
jbe
ret
enter
push
jge
lret
xchg
mov
lods
jg
add
test
dec
loopne
adc
cmp
mov
sbb
sub
imul
inc
lret
cmp
icebp
jnp
je
jge
loopne
scas
add
lds
popf
xchg
inc
mov
das
mov
mov
inc
ljmp
pop
mov
stos
call
scas
in
adc
ja
add
rcr
mov
mov
push
shr
and
sahf
push
shl
ss
mov
mov
mov
sti
pop
aam
loope
fwait
sub
sub
mov
mov
das
shll
ss
scas
cmp
in
mov
test
nop
mov
andl
dec
push
hlt
xchg
jle
sbb
pusha
or
sti
adc
test
or
insb
rorl
or
adc
cmp
mov
shrl
ret
sbb
rorb
movsb
xor
sahf
add
pushf
outsb
xchg
repz
es
lods
aam
push
push
push
imul
mov
nop
mov
lock
cmp
std
push
xchg
imulb
in
cltd
inc
mov
sub
or
pop
mov
push
xor
xchg
mov
sbb
mov
shlb
jg
jp
lret
dec
sub
push
pusha
sbb
ret
xor
xchg
jae,pn
mov
pop
push
lods
xchg
test
dec
inc
addr16
cmp
scas
push
sub
sbb
aas
xchg
nop
hlt
adc
ljmp
xchg
pop
pop
clc
dec
sbb
jo
in
or
pop
fsubrs
test
sub
sub
fcoms
in
scas
repnz
sbb
aam
aas
fists
add
rolb
bound
jne
jp
mov
xchg
cmpsl
stos
pop
push
xorb
mov
jne
addr16
pop
xor
cmp
icebp
sub
mov
add
jge
or
bound
out
sub
lret
lods
xchg
popf
sbb
fdivrl
mov
xchg
xchg
imul
fwait
loop
cmp
les
loop
cs
test
mov
jl
mov
fcoml
jo
int3
roll
shll
sbb
push
enter
inc
rcrl
jecxz
pop
sahf
daa
loope
sbbl
dec
lods
stc
imul
ss
sti
inc
cmp
dec
jnp
adc
add
js
mov
insb
int
mov
sahf
scas
popl
jno
jmp
clc
or
in
std
add
fwait
scas
insb
mov
push
mov
sbb
out
inc
dec
mov
dec
xor
add
gs
sbb
fcom
cmpsl
xor
push
jl
dec
lret
loop
fidivl
ljmp
test
call
repnz
lldt
xor
stos
dec
fsubrs
lahf
add
lret
mov
lahf
push
stc
bound
jae
dec
xor
or
mov
ja
addr16
arpl
dec
into
repnz
es
inc
cmp
ds
repz
test
jecxz
add
jbe
jae
mov
push
mov
sbb
and
mov
mov
lcall
mov
js
jmp
xor
fidivs
sub
lods
lret
or
or
add
movsl
arpl
sbb
mov
test
shrl
jmp
push
rcrb
adc
and
push
mull
jl
imul
ret
or
xor
into
jb
inc
mov
dec
cwtl
xchg
add
insl
std
test
pxor
add
cmpsb
cmpsb
sbb
ljmp
push
mov
mov
lock
and
jg
jge
daa
cli
dec
stos
mov
pusha
das
repnz
mov
pop
sahf
mov
push
mov
test
enter
cmp
pop
xchg
inc
shl
sub
movsl
mov
jg
inc
cmp
hlt
mov
add
mov
or
add
fwait
loop
add
pop
xchg
pop
cmc
jp
lods
cwtl
repnz
lods
mov
bound
sub
mov
fbstp
and
into
sbb
test
cmc
xor
mov
sti
out
fisubrs
cmp
and
pop
xchg
cmp
inc
pushf
mov
jnp
packsswb
and
mov
inc
inc
dec
imul
or
push
pop
dec
rorl
xchg
mov
cmp
rorl
and
push
jp
stos
movsb
icebp
mov
test
scas
push
mov
xchg
ss
sub
scas
ffree
ljmp
or
mov
xchg
push
mul
xchg
stc
imul
testb
fcoml
mov
scas
popf
jo
and
sbb
aad
lret
dec
push
mov
jp
inc
enter
jle
sti
cmp
or
and
movsb
push
push
mov
aad
xchg
mov
xchg
xchg
out
mov
and
push
dec
cmc
fistpl
filds
cltd
inc
push
inc
sbb
divb
fistpl
add
mov
filds
push
push
test
jnp
rclb
cmpxchg
fldt
js
mov
cmp
mov
ret
dec
daa
iretw
jo
stc
aad
and
inc
mov
and
dec
mov
inc
in
jb
xlat
adc
out
add
mov
sbb
adcl
dec
hlt
mov
xchg
pop
sarl
aad
pop
jg
and
mov
jnp
sub
mov
movsb
adc
and
sbb
fisubrl
ds
out
xchg
rcll
dec
sub
push
sahf
sar
data16
and
or
mov
lret
fcmovnu
into
mov
fdivrl
jbe
and
mov
lock
wbinvd
mov
adc
adc
push
sub
fidivs
pop
das
push
sub
cmp
mov
pop
sbb
and
lret
xchg
gs
xchg
lar
cmp
push
add
shl
movsb
std
cs
sbb
lock
xor
pop
push
mov
leave
outsb
mov
mov
sahf
imul
push
jns
pop
xor
xchg
sti
lret
repnz
push
mov
lret
push
mov
repnz
insl
mov
cmpsb
punpckhwd
lahf
mov
mov
stos
lds
push
aad
sbb
xchg
jmp
dec
cmp
in
lret
cmp
and
pop
xor
jo
xor
fcmovbe
adc
push
mov
mov
aad
xor
sub
mov
sub
bswap
wrmsr
nop
mov
loopne
mov
or
fdivs
inc
addr16
lods
jl
lret
scas
rcrb
mov
mov
loop
rep
outsb
xor
outsb
mov
or
mov
movb
es
xorb
and
loopne
popa
xchg
loop
cmp
jp
push
popf
ss
sbb
mov
sbb
push
popa
mov
les
sbb
pop
popa
popa
sub
push
push
push
rcrb
add
imul
aad
pop
sub
scas
push
cli
scas
das
push
call
dec
ss
aam
add
xchg
jae
xchg
into
xchg
stos
pop
test
loop
adc
xor
test
jg
stos
mov
inc
bound
mov
pop
xor
imul
nop
xchg
into
jae
pop
in
aaa
in
sahf
sub
jno
es
sub
mov
inc
notb
and
std
shl
pop
and
add
inc
push
and
sbb
adc
mov
jae
mov
jbe
jg
and
mov
shrb
loope
adc
ret
sub
sbb
adc
mov
lock
push
xor
arpl
dec
cltd
xchg
add
movsb
aas
cmpb
mov
and
outsb
mov
mov
lcall
addr16
aam
scas
aam
das
out
xlat
push
fwait
dec
or
hlt
inc
mov
dec
in
shll
cmp
clc
mov
add
or
push
xchg
stos
mov
jbe
cmp
inc
jne
popl
inc
stc
test
cmp
rol
mov
sub
dec
mov
sbb
pusha
mov
jecxz
fnstenv
cs
pusha
or
dec
push
fstps
sub
gs
in
xchg
dec
add
xchg
int
push
and
outsl
lods
in
pop
adc
mov
xchg
sbb
fnsave
call
jne
pop
ret
or
jb
inc
insb
dec
lock
sub
jle
nop
cmp
cli
xchg
sbb
push
cmp
enter
imul
add
sahf
sbb
fldcw
mov
mov
xor
sbbb
scas
lret
pushf
pop
mov
mov
xchg
xchg
adc
pop
sub
scas
arpl
push
cmpsb
and
insl
lret
jnp
pop
fidivs
xchg
mov
icebp
jnp
test
divl
aaa
ror
pop
inc
mov
pop
jae
jmp
mov
cltd
out
subl
lds
in
xchg
push
mov
and
ja
pop
cmp
jbe
out
jne
pop
test
cmpb
shr
add
mov
lock
jp
icebp
xlat
mov
jl
dec
and
shrb
into
sub
xor
xor
adc
cmpl
arpl
mov
mov
nop
dec
bound
and
mov
adc
movsl
fiaddl
je
xor
sbbl
push
ret
mov
into
sar
cmc
dec
out
lret
dec
and
sub
push
jle
inc
xor
ret
push
ds
adc
mov
ret
adc
jb
jbe
and
push
nop
dec
dec
and
add
cmp
cmp
gs
jg
cltd
mov
pop
dec
icebp
lret
divl
sub
xchg
cmp
sub
cmp
ja
stos
call
into
andl
cld
andb
ja
push
lret
and
loopne
mov
xchg
add
lock
test
add
movsl
push
lcall
or
stos
popf
in
sar
hlt
pop
dec
mov
daa
push
addb
mov
inc
pusha
push
jo
mov
hlt
jns
stos
ja
inc
fcoml
ret
nop
in
adc
stos
pushf
xchg
or
cld
popa
lahf
jns
dec
push
dec
iret
nop
inc
mov
lahf
cmpsb
orb
mov
sbb
mov
scas
mov
inc
jmp
push
imulb
mov
fs
mov
sbb
mov
in
mov
xorb
xchg
push
adc
testb
and
mov
aam
aas
mov
leave
mov
inc
xchg
jmp
mul
pop
lds
inc
in
pop
lret
push
xor
fcoms
movl
mov
lret
fisubs
pop
sub
pop
jecxz
xor
jo
arpl
mov
mov
mov
enter
leave
lret
fwait
xchg
movsl
cmp
mov
xor
stos
dec
inc
cmp
fwait
inc
popa
or
and
dec
push
ficomps
mov
adc
pop
ss
icebp
jno
fstl
lahf
jg
dec
push
jae
das
mov
push
or
inc
stc
cmp
das
mov
mov
das
jne
sbb
mov
nop
insl
cmp
mov
jae
xchg
mov
fsubl
and
jno
mov
inc
mov
inc
gs
sub
mov
loop
sub
dec
fsubrl
jbe
add
push
inc
sbb
out
inc
add
mov
orl
and
xchg
cmpsl
push
mov
pusha
push
scas
scas
push
into
mov
mov
test
repnz
pop
sbb
xor
lock
sbb
ficoms
fimuls
in
xor
fwait
or
mov
icebp
sahf
or
nop
cmp
int3
es
dec
pop
mov
push
cmp
mov
xor
push
adcl
les
in
repnz
and
sub
rcrl
or
test
je
jae
pop
xorb
ret
test
push
xchg
inc
inc
pop
aad
fsubl
mov
jo
in
inc
nop
add
mov
sbb
cmp
cmp
scas
and
call
pop
sub
jmp
inc
mov
ljmp
rorl
dec
loop
inc
call
fbld
icebp
outsb
imul
mov
fwait
dec
fmuls
ja
sub
or
inc
rcrb
adc
pop
and
leave
rol
jbe
test
jbe
inc
fwait
pop
xchg
and
dec
mov
into
adc
mov
push
jge
cld
add
mov
add
sti
bnd
add
popf
nop
lcall
outsb
movsb
push
lock
mov
mov
loop
repnz
aam
cmp
dec
add
add
rclb
mov
test
xchg
mov
xchg
test
int
cmpsb
and
push
sbbl
and
adc
or
or
arpl
mov
dec
das
jecxz
test
push
pusha
cmpb
int3
pop
xor
xor
xchg
fsts
and
clc
xchg
jns
sti
fistpl
push
out
ret
push
xor
and
mov
sarb
xchg
out
pop
aam
es
fmuls
fstpt
pushf
repz
adc
fldl
or
cltd
xor
push
rclb
test
mov
aam
mov
jae
cmp
push
cmp
clc
or
faddl
push
idivb
add
xor
xor
and
adc
hlt
xlat
and
scas
and
pop
xor
lahf
mov
es
or
add
ds
sti
cmp
pop
or
cmpsb
lea
lods
or
inc
rcrb
mov
and
in
xchg
and
pop
xor
fisubs
xchg
cmp
dec
jbe
pushf
mov
ss
scas
fsubrl
pop
pushl
stos
add
jl
dec
sbb
adc
cld
mov
repnz
scas
adc
push
test
pop
lahf
jb
mov
pop
push
adc
xor
arpl
shlb
and
mov
mov
or
xchg
or
loopne
push
jmp
lods
mov
in
pop
dec
add
movsb
fisubs
pushf
rcl
aam
inc
sbb
push
clc
xchg
push
ret
movsl
inc
xor
dec
add
bound
int
mov
adc
fdivrs
mov
adc
add
jg
add
rorl
mov
mov
mulb
cmp
aaa
pop
xchg
sub
xor
lret
jge
das
push
xchg
es
sbb
pop
imul
lahf
rcrl
outsb
mov
inc
adc
aam
lret
and
pop
adc
mov
roll
mov
insl
or
xor
add
xchg
mov
mov
push
fneni(8087
test
adc
aaa
fwait
pop
push
xchg
add
mov
push
xor
call
jg
pop
mov
xchg
mov
xlat
ja
jp
and
jmp
data16
movsb
int3
sub
xchg
xchg
sbb
and
pop
mov
cmp
pop
clc
aas
sbb
es
cli
sub
js
das
lahf
in
aaa
push
sub
mov
jnp
dec
pop
push
sarl
inc
xor
mov
mov
enter
test
les
mov
sub
dec
stos
imul
gs
xor
lcall
cli
in
fdivr
imul
cmpl
int
adc
xchg
adc
test
stc
fdivs
pop
ja
xchg
test
sahf
nop
xchg
push
incb
and
loop
adc
lea
popf
in
enter
lret
fldenv
or
jmp
arpl
inc
psubusw
in
adc
adc
xor
and
lock
stos
xorb
scas
call
cmpsl
and
mov
inc
inc
scas
ret
dec
push
aam
mov
push
sub
aam
and
stc
rorl
fisubrl
push
ss
or
inc
addr16
out
mov
or
outsl
push
es
or
and
pop
or
dec
movsb
inc
mov
pop
fcompl
notl
mov
rorl
dec
or
data16
push
sbb
inc
into
repz
mov
loope
dec
in
cmp
jne
imulb
pop
scas
into
adc
movsb
jae
in
rclb
lret
daa
notb
mov
mov
outsb
adc
mov
inc
imulb
pop
std
dec
jl
data16
add
sbb
adc
and
sub
jne
inc
fmulp
in
fldl
pop
sar
inc
mov
mov
adc
loope
repz
loop
jge
testb
sub
adc
pop
jns
jns
jb
jle
jo
xchg
clc
adc
scas
or
pop
sbb
mov
shlb
call
dec
xchg
inc
repz
adc
repz
xor
rcll
andb
push
mov
pop
xchg
ret
cmc
iret
imul
xor
jecxz
add
cmpsb
fldt
std
in
js
orl
sub
in
rcrl
and
ljmp
lods
sbb
adc
pushf
or
rcll
mov
cmp
test
pop
sub
dec
inc
popf
sbb
andb
in
inc
inc
stos
in
push
lahf
sti
fs
test
pop
mov
add
negl
stc
xor
xchg
jns
jl
popf
jmp
xchg
fisttpl
pop
mov
lahf
cs
jle
roll
dec
mov
insb
mov
stos
lds
xor
aas
loop
pop
sbb
adc
test
ss
icebp
cmpsb
push
aam
pop
mov
adc
ljmp
subl
subl
and
cmp
jp
dec
pop
hlt
jnp
add
fs
movsb
adc
mov
cmp
push
cmp
and
call
pusha
enter
pop
mov
aaa
add
add
pushf
movsb
movsl
in
test
sbb
dec
mov
pop
ljmp
push
or
pop
xor
movsb
mov
or
andb
lods
jg
les
out
cwtl
jmp
mov
jl
fnstsw
mov
negb
push
cmp
loopne
push
aad
aad
push
sub
ds
cld
sub
xchg
pushf
push
mov
ja
adc
das
jle
nop
add
xchg
mov
dec
fistl
int
push
pop
jp
jo
fcomps
add
imul
inc
jno
jle
pop
fld
mov
ljmp
mov
mov
and
scas
or
mov
mov
ss
aam
cmpsl
adc
decl
rcrb
out
int3
and
sub
arpl
add
adc
ds
dec
or
pusha
sub
stos
testb
aad
jmp
jne
decb
outsb
and
pop
clc
sbb
adc
cmpsl
jg
or
mov
pop
testb
mov
popf
sub
data16
pop
pop
lret
int
mov
pop
xchg
cmp
enter
mov
and
inc
mov
mov
and
subb
shlb
xor
pushf
aam
fisubl
xchg
adc
sub
add
push
into
lea
adc
dec
sub
jmp
outsb
push
int
idivb
mov
in
mov
push
cmp
cmp
add
dec
pop
add
jecxz
xchg
sbb
push
push
sub
pop
jg
push
into
jo
shr
lods
jecxz
push
loope
pop
jno
xchg
pop
scas
dec
data16
xchg
mov
jge
or
cs
pushl
cwtl
fisttps
shrl
outsb
sbb
adc
test
sub
test
orb
and
cltd
insl
mov
cmpsb
jecxz
call
imul
and
addb
inc
dec
mov
mov
test
stos
inc
jae
sbb
xor
aad
in
cmp
add
cld
mov
adc
sbb
sub
out
enter
in
mov
or
push
and
and
xchg
or
vmptrld
cmp
out
cli
scas
pop
fwait
and
cltd
test
test
fsub
or
sbb
mov
add
cmp
out
inc
repz
out
push
in
pushf
mov
and
pop
pop
sbb
data16
stos
sbb
jp
or
arpl
and
xor
out
fistpl
mov
dec
daa
addr16
mov
mov
lcall
popf
mov
cmp
jp
sbb
stos
insb
test
inc
sub
pop
pop
jns
inc
bound
xchg
out
xor
das
scas
lock
fld1
dec
or
push
mov
jne
sbb
jle
inc
imull
mov
je
add
ja
loope
lock
jno
call
movb
mov
ds
hlt
ljmp
bound
inc
jbe
inc
inc
scas
or
push
enter
scas
push
inc
popf
lret
aas
movsl
movsb
cmp
stos
imul
scas
and
in
lahf
not
outsb
add
repz
push
mov
test
pop
or
jmp
loopne
cs
out
mov
rcll
mov
dec
jmp
or
cmpsl
add
movsb
sub
nop
pop
pop
add
icebp
push
xchg
jp
adc
mov
sbb
subb
das
push
mov
popf
dec
xchg
pop
int3
pop
loopne
and
loope
adcl
out
pushf
pusha
les
inc
sbbb
in
das
loopne
enter
push
or
call
push
test
loopne
sub
dec
call
data16
cli
insl
pop
inc
jge
in
sub
jmp
cmc
pop
sti
inc
enter
ffreep
and
xor
inc
stc
in
inc
vcvtpd2ps
scas
aad
xbegin
xchg
shrb
xchg
dec
sbb
cmp
jecxz
lahf
repnz
adc
adc
in
test
sbb
cmc
icebp
inc
inc
imul
jae
icebp
ds
xor
outsb
test
addr16
cmp
sbb
mov
popf
push
mov
pusha
outsb
fdivs
repnz
cmp
mov
cltd
dec
sub
pop
sbb
dec
lahf
pusha
aam
pop
mov
lret
sub
cmp
pop
push
add
or
push
pop
clc
filds
pop
cmpsl
out
inc
out
je
inc
stos
add
daa
negb
mov
insl
jae
fwait
clc
lret
cld
and
sub
jle
fwait
cs
sbb
lcall
les
mov
js
jle
shl
loopne
test
stc
repz
mov
addr16
dec
pop
leave
in
cmpsb
adc
aad
pushf
push
or
inc
inc
push
mov
scas
lcall
jne
cmc
into
or
js
lahf
jo
adc
cmp
push
adc
lret
sub
in
aam
push
jl
cs
cmp
mov
lahf
dec
out
daa
scas
mov
arpl
xor
imul
insl
pop
add
add
aas
add
pop
add
sub
push
cmp
out
shrb
or
xor
sub
subb
xchg
stc
mulb
mov
fcomp
xchg
out
xchg
rcrl
inc
mov
sarb
xlat
data16
sub
adc
and
out
jle
pop
sti
outsl
sub
test
and
jp
inc
inc
lcall
mov
jp
into
mov
movsb
xor
push
das
insb
xor
es
lock
out
push
pushf
loop
ljmp
pop
sub
or
lahf
pusha
out
and
jae
push
and
inc
jo
jb
lcall
mov
add
popf
das
xor
rcr
add
mov
decb
mov
jns
inc
cmp
mov
sbb
add
cmp
dec
fisubs
sahf
pop
in
les
ljmp
dec
mov
push
push
add
dec
sub
mov
outsl
pop
bound
push
outsl
repnz
push
dec
mov
or
pop
mov
fsubl
xchg
xchg
add
push
push
aam
into
addr16
jbe
push
lods
mov
scas
cmp
int3
call
or
repnz
shr
js
js
push
mov
xor
xchg
add
sbbb
inc
daa
lahf
pop
out
cmp
jl
fucomp
mov
sub
xor
stos
insb
or
pushf
dec
stc
adc
push
and
push
xor
ret
push
iret
jp
push
fs
sahf
aaa
xchg
xlat
imul
popf
mov
in
xchg
in
fwait
and
mov
cmp
sbb
enter
inc
loope
cmp
mov
pop
xor
mov
stos
pop
pop
sbb
push
stos
add
xor
xchg
cs
xchg
mov
dec
ret
mov
pusha
mov
test
fisubl
fnstenv
clc
cmp
sbb
and
dec
outsb
mov
or
mov
fs
lea
sub
iret
mov
fstps
shrb
xchg
idivl
testb
inc
nop
and
and
pop
adc
jg
mov
mov
pushf
jmp
cmpsb
mov
js
jge
ss
or
and
xor
fistps
adc
testb
icebp
and
js
sbb
jl
dec
pop
ss
aas
pop
adc
out
fidivs
jl
aas
inc
leave
jg
jp
or
or
fistpll
scas
inc
scas
loope
jg
stc
jp
pop
std
cmpsb
inc
cmpsl
pop
iret
adc
cmp
cld
xchg
adc
cmp
sti
ret
call
rolb
jg
jl
dec
and
mov
fiaddl
lods
inc
add
shlb
fstpt
pusha
in
or
shl
dec
jl
mov
dec
sarl
test
xchg
cmpsl
call
cmp
or
int
mov
lds
cmc
xor
inc
pop
push
loop
imul
clc
or
and
push
jecxz
fnstsw
loop
xchg
ret
pop
out
shrl
push
sbb
mov
mov
xchg
js
call
xor
jo
xchg
orb
fbld
mov
scas
and
inc
push
arpl
lcall
sbb
mov
lds
and
js
lret
push
xor
mov
lret
into
xor
xorb
dec
cmc
jge
loop
xchg
fistpl
lcall
jae
lock
jne
mov
mov
inc
xchg
fistps
sbb
push
in
je
int3
outsl
jno
shrb
add
xchg
sbb
mov
xchg
push
cmp
je
mov
xor
cmpb
dec
insl
cltd
and
jecxz
sbb
mov
stos
lock
lsl
jnp
repz
cmpsl
and
xchg
dec
loop
jb
mov
cwtl
test
ja
sti
lods
mov
inc
jns
icebp
popf
push
fdivrs
loope
or
pop
repz
loope
lock
leave
or
stc
dec
out
inc
ja
sahf
test
mov
jmp
lcall
push
in
or
shlb
in
dec
sarl
push
adc
pop
jmp
xor
push
mov
scas
cmpsl
inc
inc
lea
mov
jp
mov
jbe
cmp
sub
inc
adc
loope
hlt
and
loope
sub
mov
cs
lods
push
insl
in
mov
mov
fstl
xchg
decb
out
pop
sbb
jbe
sub
bound
pop
out
add
cmp
ds
cmp
popf
rorb
test
xor
cmp
sub
jl
jbe
stc
inc
dec
addr16
dec
std
and
jmp
xchg
and
jne
sbb
jo
sarl
mov
mov
xlat
fldt
cltd
push
adc
xchg
xchg
mov
std
mov
jl
lcall
cmc
jbe
js
outsb
jne
xchg
inc
cmp
lcall
add
xchg
xchg
inc
mov
mov
push
jnp
imul
jb
in
mov
mov
jne
xchg
jmp
mov
push
ljmp
cmpsl
pop
dec
fcoml
outsl
popa
ljmp
add
fucom
pop
jne
dec
sbb
xor
and
xchg
pusha
mov
xor
rorl
jb
cltd
sub
add
inc
pop
scas
push
popa
sub
mov
jbe
dec
cli
and
xchg
lods
xor
or
popf
loope
adc
shrb
aaa
ja
xchg
ds
sbb
ret
sti
mov
cmp
inc
bnd
dec
cmpsl
aad
pusha
jmp
popa
inc
std
stos
cmpsb
sub
push
daa
add
sar
inc
repnz
sbbb
aad
add
es
gs
pop
lcall
repz
pop
xchg
les
pop
fisttpl
movl
push
int3
and
dec
ja
lock
mov
ljmp
ret
scas
out
cmp
mov
cmp
bound
out
xor
shlb
scas
hlt
stos
rorb
jmp
add
cmpsl
bound
mov
lods
repz
xchg
mov
roll
mov
lcall
aaa
mov
sub
fisubs
inc
sub
xor
push
cmp
int
in
dec
or
adc
je
ljmp
jnp
jg
popf
push
jp
xchg
push
nop
pusha
push
dec
xchg
sub
sub
mov
jne
xor
testl
xchg
nop
inc
jl
je
ljmp
push
syscall
rolb
and
dec
and
imul
xor
push
push
fisttpl
and
cmp
or
out
or
dec
mov
xchg
xor
test
add
push
les
gs
fisubrl
pop
pop
cmp
ficoms
mov
mov
or
pusha
les
mov
mov
inc
cmpsl
mov
pop
sub
loopne
mov
push
push
data16
push
in
in
push
push
xchg
pop
push
aad
shl
jae
mov
lahf
jb
popa
xchg
mov
lcall
orb
inc
push
or
lret
jecxz
lcall
shrb
adc
sub
xchg
stos
adc
xchg
test
sub
adc
mov
jmp
mov
icebp
fiaddl
and
jmp
movsl
andb
mov
cmp
inc
xchg
int
rcrl
testb
sti
push
scas
in
je
push
leave
sub
sbb
mov
jno
cmp
push
push
out
mov
cmc
jb
mov
push
inc
mov
xchg
ds
jbe
adc
mov
std
dec
bound
sbb
cmp
sub
mov
and
call
mov
xchg
jne
clc
push
sub
jmp
aam
xchg
out
sbb
push
jno
ja
fildll
and
add
jp
jae
stc
shlb
adc
insl
jno
mov
lock
push
sub
and
loope
dec
clc
mov
bound
dec
in
cmp
in
insb
mov
daa
andb
add
push
popa
push
xchg
push
cmp
xor
sub
mov
pushf
es
jecxz
scas
out
adc
mov
adc
add
inc
mov
sub
subb
push
sarb
stos
pusha
inc
xor
fisttpl
sub
push
lret
out
mov
arpl
mov
shl
cltd
sub
pmaddwd
imul
push
shrl
inc
int3
mov
jecxz
mov
jb,pn
pushf
into
stos
out
pushf
dec
fs
fwait
and
adc
out
mov
mov
cmp
push
in
test
cmp
pcmpeqw
pop
ss
popf
icebp
mov
daa
lock
cs
xlat
jl
lret
pop
mov
repnz
adc
std
xchg
or
sub
inc
rcrl
fmull
mov
inc
sbb
cs
jbe
in
test
outsl
push
scas
in
xchg
mov
lahf
inc
mov
int
scas
insl
std
int
jns
adc
cmpsl
lods
pop
inc
jle
aaa
pop
mov
pop
push
jbe
cmpsb
sbb
dec
lds
mov
mov
jne
les
fidivs
sub
push
hlt
dec
lods
out
adc
sub
xor
mov
push
movsl
xor
movsl
add
sbb
push
popf
xor
mov
test
cmp
jno
xchg
or
ss
sub
cmp
out
cmp
faddl
xor
xor
push
sub
xor
cmp
lret
cmp
push
jge
push
leave
and
xor
push
mov
cs
cmc
leave
scas
dec
mov
pop
xchg
sbb
cmp
push
arpl
pop
mov
mov
mov
mov
loopne
aam
jns
aad
xor
cmpsl
icebp
push
cmpsb
outsl
mov
sbb
mov
mov
aad
xchg
push
xchg
pop
fnstenv
scas
dec
xorl
addr16
jp
xor
stos
lret
testl
leave
cmpsb
out
xchg
mov
test
inc
mov
jne
sub
cmp
mov
inc
fucomip
xchg
sbb
mov
sahf
inc
lret
outsb
adc
inc
mov
jge
into
add
pop
pop
lret
int
or
mov
test
scas
mov
out
fwait
ljmp
lock
cmpsl
lret
add
pop
jecxz
mull
or
pop
dec
shl
lahf
ret
lods
pop
jnp
mov
cmp
je
sub
ja
dec
sub
xchg
stc
pushf
pusha
or
mov
or
and
pop
pusha
dec
adc
mov
popa
pop
mov
mov
sbb
je
jecxz
push
cmp
aam
inc
jmp
ja
popf
imul
cmp
inc
mov
sbbb
mov
lods
inc
push
or
stc
orl
and
jge
sub
clc
adc
sub
call
pusha
fsubl
pop
push
or
pop
cmp
jmp
dec
lods
push
stos
push
adc
in
aam
inc
mov
imul
popf
in
notl
dec
mov
stos
test
mov
lds
cwtl
jno
sub
xchg
jbe
inc
mov
loope
xor
cmc
test
outsb
push
push
dec
movsb
inc
mov
fimull
lea
inc
lret
adc
or
aam
mov
sar
call
stc
xorl
sahf
or
or
loopne
lret
fisttps
add
dec
pop
dec
push
ja
xchg
outsl
das
stc
mov
adc
out
inc
repnz
test
pop
mov
add
addl
mov
jo
xor
cli
xorb
popf
lret
mov
mov
int3
xchg
add
adc
in
sbb
push
fsubl
enter
mov
dec
and
in
in
insb
inc
xor
lods
and
adc
fcmovne
mov
sub
xor
inc
add
shrl
mov
push
roll
mov
clc
xchg
pop
sbb
push
adc
cwtl
pop
fnstcw
nop
cmp
or
jb
and
imul
cmp
hlt
push
jge
jae
cwtl
xor
pop
xor
mov
xchg
mov
and
popl
movsl
dec
cmp
push
fwait
jnp
jnp
mov
xor
adc
pop
jl
and
sub
lds
out
inc
jno,pt
cli
mov
mov
fst
icebp
xor
mov
test
mov
arpl
pop
pop
addl
popf
or
les
or
lret
mov
pop
jns
punpckhdq
out
sti
lods
pushf
loop
insl
clc
insl
jns
xchg
jne
pop
into
add
imul
add
push
dec
push
stos
aad
adc
sbb
sbb
pushf
mov
sbb
in
pusha
mov
cmc
inc
mov
push
sbb
das
jle
sub
jge
std
cmp
xor
fsub
outsb
sbb
sub
cmc
insl
xor
jbe
mov
adc
fidivrl
jmp
imul
lods
or
pop
mov
sub
mov
loop
sbb
sub
lods
xchg
call
sub
adc
cmp
xor
sbb
jecxz
and
sub
mov
in
ljmp
mov
inc
fisubrs
out
bound
mov
ljmp
or
imul
mov
xchg
hlt
js
sbb
mov
je
inc
inc
fildll
pop
mov
or
bnd
adc
cmpsb
movsl
cli
xchg
xchg
mov
test
outsl
pop
sahf
xchg
in
scas
movsl
jne
or
out
add
out
sbbl
call
add
cltd
dec
sbb
pop
movsl
or
cmp
mov
dec
aas
orb
inc
push
add
mov
sti
adc
faddl
notb
lods
cmp
cli
sbb
xchg
pop
mov
push
xchg
sub
xor
rorb
ret
fisttps
sysret
push
dec
ja
in
cmp
test
xchg
xor
push
cmpsb
xor
fs
add
dec
sbb
dec
enter
aad
aam
mov
repz
lods
sbb
adc
ja
rcr
sahf
repnz
scas
push
push
dec
and
fmuls
sub
adc
icebp
jl
rcr
jns
pop
aad
fisttps
dec
daa
add
mov
and
push
inc
adc
mov
sbb
cmp
adc
adc
pusha
jge
fisubrs
sbb
jne
mov
cmp
or
sbb
out
mov
loope
inc
in
push
shrb
imul
shrl
ljmp
out
dec
cmp
and
push
fs
sbb
mov
push
aaa
jg
cltd
into
out
hlt
mov
jecxz
andb
ficoml
rcr
cmc
push
or
je
mov
div
nop
xor
fs
lods
push
inc
and
shl
xor
mov
sbb
pop
lahf
xchg
icebp
dec
jmp
fists
mov
lret
aas
mov
push
nop
popa
pop
push
inc
cmp
dec
and
es
movsb
jne
lret
pop
jl
orb
ljmp
notb
hlt
outsl
sub
cwtl
inc
mov
mov
jno
aaa
inc
repz
mov
sub
cmpl
fwait
js
jmp
xor
aas
fwait
movsl
cmp
mov
loop
push
push
and
sbb
stc
jns
xor
arpl
mov
incb
adc
ja
or
mov
mov
lahf
fstps
add
add
and
lods
or
mov
pop
push
sbb
pop
test
xchg
movsb
in
adc
mov
out
inc
scas
sbb
add
lret
aaa
lods
mov
jge
ljmp
pop
jmp
mov
lcall
mov
sbb
xor
int
xchg
dec
xlat
push
mov
sub
xchg
sbb
pop
mov
or
lods
or
ret
dec
outsb
jb
add
out
add
dec
arpl
dec
mov
negb
xchg
ret
pop
xchg
pop
ret
mov
adc
jno,pt
cmp
push
out
and
repz
or
cmp
idivb
ljmp
and
adc
xor
iret
mov
mov
enter
dec
mov
dec
sbb
xchg
stc
int3
push
ljmp
sbb
mov
mov
ljmp
fdivrs
scas
push
jle
xchg
mov
mov
sbb
xchg
icebp
gs
lahf
rcrl
dec
xor
push
int
aaa
mov
test
dec
mov
cld
add
lds
movsb
add
sub
sbb
inc
cmpsl
popf
sbb
ret
std
pop
jbe
fwait
add
push
inc
jnp
xchg
imul
pop
pop
cmp
shl
sub
inc
mov
dec
sbb
or
and
xor
fildll
lahf
fmull
rcll
mov
add
cmp
adc
aam
repz
xchg
add
icebp
hlt
lret
lahf
fstpl
lock
inc
ret
shl
lods
enter
jbe
test
mov
cmpsb
sbb
push
mov
imul
xchg
and
out
scas
cli
fnsave
inc
jbe
int3
pop
inc
xor
or
test
inc
and
ret
lods
enter
insb
jne
nop
pop
inc
and
jo
movsl
inc
xchg
mov
das
mov
cmpsb
sub
mov
push
mov
out
and
enter
lods
into
punpckhbw
or
pushw
mov
pop
cmpsb
ret
dec
jbe
jne
mov
or
rcrb
mov
adc
outsb
cmp
jge
add
in
jge
enter
insb
and
and
rcrl
ret
push
cmp
lcall
sahf
iret
inc
fcoms
jp
pushf
fsubs
sbb
dec
aas
imul
adc
sub
in
jo
lods
mov
lret
out
or
clc
lret
pop
jp
in
jns
inc
cmpsl
mov
fisttpll
push
sbb
cmp
in
adc
xor
inc
insl
inc
rcrb
push
jge
xchg
sbbl
shlb
mov
fs
sbb
lret
adc
jae
imul
mov
loope
sarb
andl
push
data16
sbb
movsb
or
mov
jecxz
push
rclb
stc
push
fidivrs
cmp
pop
addr16
adc
lahf
adc
shrb
das
fst
push
hlt
and
mov
xor
mov
jg
sahf
mov
jp
shlb
aam
iret
hlt
mov
and
mov
and
cmp
xor
dec
xchg
repz
and
cltd
pop
jp
scas
push
sti
jl
push
dec
lret
mov
mov
iret
sbb
jge
icebp
int
xchg
jp
add
sub
repz
sbb
or
popa
xor
cltd
and
mov
nop
push
mov
dec
cwtl
mov
cmc
iret
push
pop
fscale
repnz
cmpsb
sub
jns
enter
insl
sub
inc
insb
scas
or
cmp
insb
mov
add
xchg
into
jmp
inc
outsb
jecxz
lods
loop
or
mov
loopne
int
sti
out
loopne
popa
cmpsl
outsl
mov
dec
sub
imul
insl
mov
pushf
cld
rolb
push
dec
mov
out
jbe
out
inc
test
jb
js
fisubrs
loope
mov
lret
jae
addb
sub
scas
push
inc
pop
aaa
mov
add
inc
dec
test
mov
out
rcrl
mov
pop
sub
adc
inc
adc
fsincos
push
sub
repz
mov
sbb
hlt
pop
shrl
cld
jg
movsb
sub
push
fs
mov
sbb
leave
insb
mov
xorb
pop
mov
fsubrl
xlat
orl
mov
lret
aaa
cmp
mov
test
in
add
in
imul
popa
mov
repz
movsl
popf
in
std
cmp
hlt
fildll
lret
rep
js
cmp
xor
xor
sti
jle
push
shll
push
or
lods
mov
cmc
insl
inc
xor
or
es
or
adc
push
sub
adc
or
shrb
dec
jmp
call
pop
ret
xchg
insb
xchg
adc
jle
sbb
int3
out
std
mov
or
xchg
sti
enter
jl
test
maxps
mov
test
pop
ljmp
testb
dec
rcrl
gs
adc
dec
sti
mov
sbb
outsb
dec
push
add
addr16
jg
jo
xor
dec
xor
push
sbb
inc
jge
adc
mov
daa
push
int3
adc
or
leave
fidivs
data16
daa
pushf
jg
jae
pop
rolb
sahf
jge
mov
dec
push
push
xchg
inc
pop
orps
nop
or
push
outsl
dec
sbb
adc
xor
loopw
push
mov
adc
mov
add
sub
inc
cmp
mov
fwait
mov
push
jne
fisubrl
adc
in
into
push
int
xchg
push
in
xchg
pop
xchg
mov
jmp
out
jmp
xor
or
xlat
push
call
cmp
out
cmp
movzwl
imul
dec
push
pop
stc
dec
sub
imul
in
xchg
pushf
cmpsb
negb
mov
mov
ds
adc
xchg
xor
xor
pop
pop
andb
pop
xlat
rorb
xchg
stos
fimuls
cmp
pop
loop
or
push
xor
mov
push
add
adc
sub
loopne
dec
in
mov
mov
fdiv
jge
fs
mov
imul
pop
dec
arpl
pop
add
add
jnp
push
fadds
int3
mov
loop
out
push
lea
ficomps
cmp
cmp
or
cmp
aas
inc
cmc
notl
out
loope
adc
stc
pusha
or
je
jnp
rep
in
and
and
sbb
loopne
sub
adcl
repnz
cmp
out
idivb
mov
jge
ja
adc
cmp
push
and
jecxz
mov
lock
jns
les
cmp
xor
xchg
pop
or
push
adc
sub
cmp
out
lahf
mov
subl
flds
int
or
sbb
cmp
dec
and
pop
mov
addb
sub
xchg
sub
in
out
loope
jmp
fs
repnz
fwait
cmp
jmp
sub
cmpl
sbb
adc
xchg
mov
sbb
dec
pop
dec
sbb
rclb
sub
mov
out
iret
imul
adc
loop
cmp
jl
call
mov
or
pop
ret
push
js
xchg
popa
inc
mov
mov
loopne
bound
test
out
xchg
loop
mov
jo
jle
xor
fiaddl
mov
add
adc
lods
xor
rorl
call
lock
add
pushf
rolb
insl
xchg
arpl
mov
jne
pop
add
push
add
pop
loope
cmp
push
dec
inc
int
jmp
mov
imul
sahf
xor
lret
cwtl
push
ret
or
inc
in
xlat
les
jo
cmp
dec
ds
adc
mov
mov
inc
inc
jl
fisubl
cmp
or
aas
dec
jne
or
jns
iret
push
mov
xchg
roll
dec
inc
pusha
cld
push
sti
mov
stos
data16
rcr
pop
mov
ret
dec
aad
pusha
jg
mov
add
loop
pop
bound
test
dec
insb
inc
pop
jg
loopne
das
ror
adc
clc
stos
push
dec
lret
sub
fxtract
cmpsb
and
xlat
in
addr16
sbb
popf
fwait
lret
jle
stos
xchg
aaa
popf
out
aaa
pushf
mov
aas
or
ret
aad
lods
shr
inc
adc
adc
lods
sub
dec
xchg
rolb
test
jo
or
pop
xchg
lea
mov
dec
sub
andl
xchg
pop
aas
push
pop
je
imul
add
incb
xor
add
lret
lods
jnp
push
xchg
jae
jns
inc
in
jnp
adc
cli
bound
jle
out
or
add
arpl
xchg
insl
push
dec
mov
pop
mov
cmpsl
ret
adc
add
xlat
add
in
lea
shrb
fstp
mov
out
dec
aam
add
mov
outsb
adc
add
xchg
lock
outsb
in
dec
pushf
inc
pop
pop
int3
out
mov
jno
sub
loope
pop
mov
inc
leave
fsubs
repz
dec
maxps
jnp
lcall
add
inc
push
data16
fisubs
sbb
jo
cld
cmpsl
inc
stos
inc
adc
ljmp
sbb
jg
dec
daa
sbb
addr16
cmp
pop
out
icebp
xchg
aaa
jg
aas
addr16
ljmp
je
push
xor
push
push
lods
push
in
mov
xor
lahf
cmp
lcall
fldt
mov
xchg
mov
sub
jl
outsl
outsb
fistpl
clc
ret
jle
fcmovu
jne
les
leave
ljmp
inc
xor
insb
dec
cs
mov
mov
mov
cmp
test
insl
popa
push
in
mov
dec
push
aam
cs
jmp
popa
or
fstpl
leave
data16
xchg
repnz
in
insl
jg
and
adc
ss
loop
sbb
add
push
dec
mov
xor
sub
cld
notl
mov
dec
repnz
xlat
pop
add
add
stos
sahf
repnz
ja
in
push
pop
sub
aad
cmp
cmp
and
add
mov
mov
outsl
inc
daa
lcall
mov
int3
xor
push
cmpsl
xor
movsl
ret
jno
mov
push
cmp
daa
sub
xor
cmpsb
dec
cmp
pop
fstl
test
lahf
repnz
fbld
inc
stos
imul
stos
sub
js
mov
sub
cmc
mov
pop
cld
int3
xchg
mov
lcall
movsb
jl
sub
push
hlt
fdivrl
and
inc
inc
mov
pop
scas
sbb
sbb
es
popa
and
push
stc
add
mov
sbb
mov
jge
adc
lock
cld
shll
mov
es
aaa
ret
jmp
sub
daa
fldl
jmp
into
fidivrl
xor
pop
and
js
sbb
mov
xchg
xchg
aas
cltd
inc
dec
cli
sub
lods
adc
push
shr
test
mov
sbb
or
pop
mov
lea
and
xchg
inc
aad
jne
and
jp
cmp
lea
shlb
aas
aam
test
sub
lcall
mov
mov
stc
xchg
xchg
push
sub
push
push
jmp
repnz
inc
into
loop
cmpb
inc
movsl
and
hlt
in
xchg
adc
sub
push
pop
clc
sub
ret
stc
inc
cmp
repnz
add
dec
clc
push
dec
clc
lea
aas
in
loopne
testl
mov
jecxz
fbstp
dec
push
jae
or
inc
xchg
xor
ss
pop
inc
call
mov
stos
sub
jl
and
dec
imul
xor
xor
test
xchg
std
adc
inc
lods
pushf
jbe
ss
inc
xor
and
jno
imul
cmp
cmp
cld
mov
adc
loop
xor
cmp
subl
or
cld
outsl
sub
mov
aad
ret
inc
repz
cmp
xlat
arpl
push
adc
jb
out
pusha
mov
jae
insl
into
jnp
arpl
jo
mov
adc
jg
sbb
sbb
outsb
loopne
outsb
mov
in
or
je
add
icebp
xor
in
xchg
shll
cmp
and
clc
aad
xor
push
and
cmp
lea
cld
insb
cs
jp
insl
and
mov
mov
xchg
xor
cmp
pop
ljmp
cld
mov
and
lods
cs
push
pop
in
fsubrl
out
ficoml
inc
in
add
inc
mov
lahf
movsb
call
aas
mov
mov
fisttpll
pushf
jl
mov
notb
stos
into
js
pop
addr16
loope
dec
test
mov
filds
enter
adc
popa
lock
inc
hlt
scas
cli
pop
jp
xorb
xor
in
inc
and
lods
sub
lea
mov
imul
mov
and
mov
out
adc
and
mov
into
xor
mov
mov
push
leave
cmp
xchg
test
in
imul
mov
lods
inc
clc
loopne
push
push
mov
lods
mov
repnz
and
pop
insb
jecxz
pop
or
arpl
test
pop
mov
xor
in
or
sbb
inc
xchg
and
ret
ret
or
pop
push
xor
jp
int3
imul
ljmp
sub
nop
jnp
mov
test
rclb
clc
push
idivl
cs
test
pop
mov
adc
mov
loopne
sub
or
mov
lds
negl
int3
cmp
xchg
lret
mov
ret
lret
into
lea
ljmp
add
xor
dec
outsl
fwait
insb
jl
adc
mov
xchg
xor
sub
ret
fadd
adc
icebp
pop
jmp
push
js
pop
mov
repz
add
in
jl
cmp
dec
adc
cmp
jecxz
xchg
out
arpl
pop
sub
and
jb
out
push
jle
xor
and
scas
cmp
nop
inc
in
inc
mov
mov
jp
pushf
dec
mov
cmpsl
popf
xchg
dec
mov
jmp
push
ror
fldenv
aaa
mov
jns
inc
mov
gs
enter
fs
movsl
mov
movsb
mov
testb
aas
inc
jmp
cmp
sbb
lds
dec
ljmp
pop
or
aas
dec
sbb
call
mov
sub
stc
scas
push
mov
lret
cwtl
push
mov
std
cltd
sub
pop
jmp
xchg
pop
popa
cwtl
lds
xchg
and
mov
inc
fsubrl
mov
sbb
jo
add
repz
jbe
dec
daa
stc
dec
xchg
or
or
mov
dec
dec
dec
and
mov
fldt
xchg
es
movsl
mov
xor
in
and
jno
pop
sub
mov
stc
scas
or
repnz
scas
aad
push
add
jmp
push
daa
mov
inc
xchg
lods
jb
or
test
xor
subl
pop
fidivs
fidivl
sbb
in
mov
scas
mov
notl
adc
cld
leave
add
or
fdivs
pop
lea
or
ljmp
imul
dec
daa
pop
fcompl
xorl
lds
cmc
sbb
sub
inc
mov
add
adc
je
fildll
cltd
ljmp
pop
setbe
ja
das
inc
mov
in
mov
cli
jb
mov
aam
xchg
subb
pop
and
adc
mov
mov
xor
pusha
cld
pop
out
scas
cmpsl
pop
jae
push
xor
mov
les
dec
movsb
stos
pop
mov
aad
ss
or
popa
mov
pop
add
fwait
es
mov
pop
fucomip
xchg
fwait
mov
lock
jne
pop
sub
jmp
mov
inc
loop
dec
pop
fisubl
enter
and
lea
pop
mov
mov
aam
imul
iret
add
bsf
mov
fmul
jb
adc
clc
sbb
ror
movsl
dec
ficoml
js
cmpsb
out
adc
jb
pop
lret
addr16
pusha
or
jnp
mov
and
rcrl
xor
push
subb
call
incl
mov
imull
incb
mov
or
nop
mov
jge
in
mov
mov
sahf
enter
pop
ss
xor
xlat
pop
repnz
or
int
adcl
fistl
pop
fdivr
push
fcmovbe
mov
aaa
es
push
jg
fwait
ds
jbe
add
cmp
pop
inc
ret
adc
xor
pop
xor
inc
adc
jb
test
add
ret
outsb
inc
in
pusha
and
add
or
arpl
addl
mov
mov
push
sbb
test
popf
pop
mov
loop
das
adc
scas
xchg
pop
fsubs
lock
in
jne
js
and
cmc
pop
adc
stc
sbb
scas
int
inc
dec
cmp
xchg
add
cltd
xchg
jns
inc
or
data16
lods
sbb
jo
nop
sub
add
pop
pop
inc
or
dec
fidivrl
inc
sub
pop
fmuls
or
ds
aaa
mov
lods
out
cli
dec
jmp
test
out
sub
aad
pop
mov
imul
sbb
push
push
xor
into
in
cmp
pop
sub
sbb
or
je
cmp
std
sub
test
mov
mov
mov
jne
pop
inc
mov
stos
fnstenv
jae,pn
movsl
rcrb
mov
xor
aad
ret
mov
nop
and
adc
sub
mov
imul
ljmp
push
lcall
push
or
jnp,pn
mov
in
fisubrl
xchg
mov
pop
pop
add
dec
jbe
es
loop
test
xchg
inc
push
stos
shl
dec
cmpsb
aad
sbb
xchg
sahf
in
imul
push
pop
inc
push
mov
jb
sbb
je
iret
aam
jge
outsl
xchg
scas
lock
sbb
ret
ret
and
pushf
dec
test
pop
sbb
xor
test
sbb
push
rcrl
push
mov
int3
push
aas
enter
repz
jmp
add
pop
add
mov
js
lret
xchg
adc
add
inc
or
mov
push
pop
lcall
cmpsb
movsb
ja
cmp
sub
sarb
cli
pop
pop
call
imul
dec
repz
in
ja
mov
or
xor
add
les
jnp
les
jo
ds
xchg
xchg
jne
stos
jecxz
sub
cmp
scas
insb
jg
arpl
mul
sti
nop
lcall
fcmovu
fwait
inc
push
sti
dec
hlt
adc
add
and
arpl
cli
jp
pop
mov
push
mov
scas
adc
cmp
es
sub
jb
jle
adcl
mov
push
sbb
clc
cmpsl
int3
mov
testb
out
push
or
repz
mov
nop
addr16
dec
stos
jmp
push
aam
jle
repnz
sbb
inc
int
cmp
test
pop
jnp
mov
ja
add
mov
jg
xchg
notb
push
jl
cmp
data16
jmp
xchg
sub
mov
fistl
sub
js
cltd
jns
cmpsb
pop
inc
dec
mov
arpl
stos
jle
cmp
mov
pusha
leave
out
inc
notl
out
stos
nop
fbstp
mov
push
cmpsl
cs
in
sub
push
rolb
inc
pusha
fwait
stos
mov
xlat
js
cld
add
pop
mov
cli
mov
jnp
out
mov
jg
pop
pusha
xor
ret
push
pop
jo
mov
dec
mov
loopne
adc
push
ja
in
pop
pop
dec
out
scas
xor
mov
out
mov
jo
lcall
xlat
jb
loop
dec
push
out
cltd
adc
arpl
cmp
mov
jle
mov
jae
dec
aad
dec
mov
mov
cli
jno
jbe
mov
les
cld
add
push
subb
dec
test
push
xchg
cli
cld
fnstenv
mov
dec
in
lcall
mov
outsb
lea
push
aad
test
nop
out
aad
dec
pop
repnz
inc
pop
test
fcoml
sub
push
jl
mov
jae
outsl
stos
es
mov
sbb
lods
mov
or
lret
mov
push
stos
mov
adc
out
insl
divl
and
test
sub
pop
dec
xlat
dec
shrl
out
les
movsl
push
dec
jnp
and
ss
test
iret
cld
mov
shr
cmp
pop
or
jle
adc
mov
push
xor
xchg
decb
int3
mov
pop
lock
ret
adc
pop
mov
aam
inc
bound
cmp
mov
daa
nop
stc
adc
adc
nop
lea
xor
sbb
push
mov
cld
inc
inc
sub
or
inc
push
lods
add
cmp
mov
sbb
enter
xchg
xor
lea
sub
pop
dec
sbb
push
cs
cmp
push
lret
lea
popf
and
fnstcw
ret
call
clc
dec
stos
mov
iret
sbb
imul
mov
add
lret
fcompl
nop
fnstcw
pop
mov
mov
and
pop
xlat
aad
and
mov
in
xor
cmp
jno
lods
push
scas
mov
sub
lods
jmp
int3
sbb
push
pop
jbe
jl
add
stos
negb
and
loope
je
cmpsb
mov
and
stos
pop
dec
and
ds
nop
push
or
pop
and
arpl
imul
mov
jbe
fmull
jle
mov
xchg
mov
xchg
int
outsb
bound
lods
sbb
cmp
lret
xlat
rol
shll
aad
dec
mov
add
mov
movsb
xor
cltd
push
mov
xor
loopne
lods
out
inc
mov
xchg
insl
xlat
dec
outsl
jne
shll
mov
fnsave
frstor
mov
inc
scas
inc
data16
bound
loopne
or
mov
and
sarb
mov
add
xchg
shll
adc
xchg
sbb
cmpl
cmp
jmp
call
jge
jnp
stos
js
outsb
dec
jb
sub
loope
cs
jo
mov
xchg
push
mov
inc
add
movsl
adc
daa
insl
mov
dec
adc
lds
cmpsl
rcll
negl
test
inc
push
loopne
pop
fldl
shlb
mov
gs
js
xorl
jmp
lret
negl
sti
fstpt
les
sub
jmp
push
sbb
xchg
xchg
xor
lret
ds
pushf
dec
ss
xor
pop
jae
clc
sub
sub
fsubl
jle
hlt
xor
addb
es
push
pop
jns
mov
xlat
adcl
int
mov
pop
sub
jecxz
in
xor
sbb
in
xor
xor
jnp
push
xor
push
aaa
jno
lret
mov
and
jns
lods
pop
ljmp
lock
mov
cs
mov
rorl
mov
les
int3
add
jo
cmp
sbb
mov
dec
test
xchg
les
cmp
sub
xor
andl
mov
enter
mov
iret
adc
xchg
xor
sub
inc
mov
mov
and
jne
stc
pop
rcrb
mov
rcl
sub
pusha
mov
add
jmp
pop
rol
fucomi
int
fwait
sbb
adc
and
and
add
int
arpl
out
dec
or
fisubrl
mov
sub
jbe
popf
inc
push
clc
rclb
cwtl
xchg
fstpt
lds
es
push
cmp
outsb
or
sub
hlt
imul
imul
jl
ror
insl
test
enter
lods
xchg
test
mov
mov
sub
es
dec
mov
jmp
insb
dec
inc
adc
cmpsb
push
pop
lds
stc
dec
mov
leave
adc
ljmp
movsb
sub
adc
sarl
jbe
bound
cmp
cmpsb
inc
cmpsb
cmpsl
push
or
pop
scas
mov
xlat
or
pusha
push
inc
mov
push
sbb
sbb
xor
cmpsl
adc
push
pop
mov
xchg
sub
or
dec
inc
adc
fisubrl
push
inc
adc
jns
pop
and
js
pop
imul
mov
mov
sbb
mov
leave
or
in
adc
lea
icebp
inc
sbb
mov
loop
dec
insb
pop
rol
sub
sbbb
ret
cmp
dec
icebp
sbb
jns
test
popa
in
jl
dec
adc
mov
cltd
loop
imul
inc
xor
ds
int3
lea
mov
push
push
jne
pop
sti
and
shrl
insb
mov
mov
sbb
out
and
and
bound
out
fsubr
test
lcall
jp
dec
loopne
or
or
cmp
loopne
dec
xor
mov
mov
jnp
mov
and
pop
daa
jmp
sub
imul
lods
decl
mov
out
mov
addr16
shlb
inc
cmp
cmpsb
test
jae
jecxz
leave
adc
clc
cli
das
lret
adcb
jg
xor
notb
dec
cmp
pop
mov
dec
sub
or
sub
mov
mul
pop
movsb
inc
mov
test
or
pop
pop
cmpsl
sbb
add
shll
hlt
xorl
and
xor
mov
or
hlt
mov
jmp
mov
inc
jnp
fs
mov
pusha
ja
push
into
jae
mov
push
jl
and
ret
lock
ret
and
sub
adc
je
repz
out
inc
addl
and
push
and
xchg
lea
in
addr16
int
lock
int
lahf
cmp
and
loope
mov
mov
add
cmp
or
out
jmp
aam
movsl
fnstenv
and
and
ds
scas
push
push
cld
iret
movsb
pop
add
gs
pop
pop
popf
and
jnp
call
bound
jae
in
xchg
icebp
xchg
cmpsb
je
mov
xor
arpl
enter
push
mov
aad
imul
inc
inc
test
arpl
ficoms
inc
and
addl
lds
repz
lea
stos
mov
test
test
push
bound
arpl
std
je
das
and
es
ss
add
icebp
sub
push
insl
in
fwait
and
lods
mov
mov
inc
dec
or
ret
pop
and
sahf
fnsave
jle
mov
add
or
aas
int
sbb
lods
test
xchg
adc
mov
or
and
jmp
popa
lcall
pop
pop
iret
sub
dec
lock
imul
jo
scas
inc
mov
ret
xchg
mov
mov
rcl
xchg
sbb
rcrl
mov
xchg
lahf
clc
xchg
insb
insl
dec
test
add
enter
xor
fsubrs
sub
outsb
pop
insb
fsubrl
lods
jne
xor
xor
mov
cltd
roll
lret
shlb
inc
int
push
sarl
lea
imul
jge
jne
aam
cmp
int3
loope
push
mov
sbb
pushf
xor
test
add
mov
popa
or
pushf
xchg
dec
out
test
stc
inc
add
in
rcrl
jl
sbb
jb
ljmp
push
sahf
mov
test
incb
sub
xor
ret
fstpt
das
mov
mov
xchg
mov
loop
add
jge
push
ss
mov
pop
je
aam
mov
leave
push
or
ljmp
pop
inc
pop
cmp
sub
adc
cwtl
rorl
mov
jbe
hlt
sub
addb
fadds
or
mov
repz
push
inc
or
stc
jp
jp
inc
clc
in
arpl
outsb
dec
lret
es
mov
sub
in
movsb
nop
push
fwait
xchg
and
jmp
push
into
movsb
loop
dec
mov
fwait
adc
jmp
out
cli
call
jbe
std
mov
mov
cmp
lods
lds
mov
dec
loopne
mov
lods
inc
sti
inc
gs
mov
mov
push
xor
add
jmp
sub
push
push
sti
cli
and
in
cmp
icebp
xchg
shr
mov
dec
stc
jbe
xchg
sub
push
rcrb
inc
jp
sub
inc
popa
sar
cmpb
add
inc
sub
scas
sub
dec
lds
dec
mov
fiaddl
orb
addl
sub
mov
pop
xor
push
cmc
stos
inc
js
and
or
shrb
pop
fstl
pop
lret
xchg
jo
hlt
mov
dec
xchg
push
pop
mov
mov
out
dec
cli
arpl
and
cmp
mov
cmpsl
arpl
popf
imul
mov
mov
in
adc
jno
xorb
sbb
push
add
xor
lret
fimull
add
push
es
test
popa
mov
divl
ss
in
mov
aas
ficomps
shlb
adc
inc
adc
add
es
mov
add
mov
xchg
add
mov
bnd
pushf
shlb
fldcw
cmp
pop
testl
shrl
cmp
cmc
movsb
lret
ds
push
inc
adc
jb
pop
sbb
addr16
lock
inc
add
push
sahf
sbbl
ss
xchg
mov
insb
sahf
aas
cmpb
dec
test
push
push
bnd
sahf
jno
sub
out
push
fadds
aaa
cmc
mov
iret
insl
pop
push
js
jno
jnp
mov
jp
outsl
shlb
fiadds
mov
lcallw
xlat
inc
imul
jno
mov
cmp
mov
fxch
les
sets
jp
push
pop
and
mov
iret
ret
or
xlat
xchg
bound
in
jmp
jge
cmp
lods
inc
hlt
xchg
inc
sub
xchg
faddl
enter
xchg
int
cmp
sbb
jmp
out
push
adc
lret
xor
pop
enter
arpl
add
decb
mov
adc
addr16
lods
out
std
cmc
mov
stos
icebp
push
aam
and
arpl
popa
dec
jne
cmp
pop
stos
aad
test
outsb
xor
fisubrl
mov
adc
sub
dec
dec
xchg
dec
insl
push
ss
mov
push
das
inc
lea
andb
mov
xorb
push
lcall
mov
add
cmp
xchg
xchg
push
push
and
mov
shrb
xchg
xchg
sti
ss
aad
xor
es
add
or
lods
cmp
mov
lret
xchg
out
insl
push
sbb
in
popf
push
push
mov
pop
sbbl
pop
xor
sbb
out
iret
test
cld
lods
lret
or
aad
sub
sub
lret
aad
pushf
loopne
loopne
loope
mov
cwtl
sqrtps
pop
into
out
nop
jge
sbb
inc
lret
sbb
rcrl
shll
mov
insb
dec
inc
xor
mov
test
dec
lahf
inc
imul
push
into
pop
nop
fnsave
ds
popf
sbb
dec
pop
cwtl
sbb
idivl
mov
mov
mov
stos
push
mov
push
cmp
mov
mul
push
or
out
das
aad
cmpb
or
mov
js
addr16
push
je
loop
pop
mov
daa
push
xor
shrb
js
adc
mov
jns
pushf
push
imul
out
dec
or
adc
ret
xchg
rclb
leave
and
lods
ret
lock
and
les
pop
dec
push
pushf
xchg
decb
in
lds
shr
or
aam
or
stc
orl
cld
push
xor
dec
ret
mov
scas
sbb
outsl
dec
insl
mov
mov
cmpsb
mov
data16
lret
out
push
das
jle
pop
icebp
mov
push
and
stos
cmp
push
mov
cmp
insl
in
aaa
pop
inc
pop
pop
pop
rcrl
pop
dec
shlb
jnp
pusha
test
out
and
mov
mov
call
mov
aad
xchg
arpl
stos
shl
xchg
movsl
or
ffree
rol
mov
jns
fs
insl
inc
divb
jl
push
clc
ret
std
add
cld
jle
cmp
ret
adc
xor
aaa
or
xchg
fcomi
dec
mov
lcall
clc
adc
push
idivb
inc
scas
dec
in
or
dec
out
xchg
cwtl
jns
mov
jnp
mov
pop
lcall
in
inc
xchg
lds
addl
xor
movsb
nop
xor
das
mov
push
and
adc
shrl
sub
xchg
push
sarl
xchg
mov
or
aas
and
inc
ljmp
out
mov
pop
mov
es
test
pop
xlat
aad
push
add
lret
outsl
or
arpl
fdivs
xchg
mov
rcll
xor
jmp
adc
mov
sub
cmp
insb
fildll
lods
xchg
xor
shlb
imull
sbb
cmp
data16
dec
je
add
insb
dec
psubq
or
ret
inc
sub
push
in
std
or
out
outsl
out
cmpsb
lea
xchg
pop
dec
sub
lds
pop
shlb
out
inc
aam
cli
cmp
adc
clc
pop
dec
cmpl
mov
dec
aaa
add
dec
shll
dec
or
cltd
jo
mov
subb
cs
cmp
push
xlat
or
loopne
sub
push
xchg
inc
pusha
inc
cmpsl
ret
push
mov
sti
jge
daa
push
out
xlat
sbb
fwait
sub
pop
es
fnsave
push
leave
imul
dec
inc
inc
sbb
or
in
mov
push
or
pop
mov
mov
rorb
jne
mulb
mov
enter
iret
jns
push
arpl
pop
mov
and
ret
jns
inc
clc
orb
or
stos
subl
outsl
out
pop
xor
rcl
inc
add
mov
jl
pop
cmp
pushf
loop
xor
stc
mov
mov
sub
or
push
mov
lods
in
mov
mov
sub
ss
cltd
jecxz
lds
les
bound
pop
push
mov
addr16
in
daa
mov
adc
scas
cmpsl
xor
lret
sub
mov
jmp
jmp
mov
sbb
sbb
inc
jns
cmp
jno
dec
adcb
inc
pushf
sub
sub
push
outsb
lret
xorb
cltd
mov
or
test
pop
fsts
imulb
mov
rcrb
arpl
inc
fisttpll
pop
cld
jne
pop
inc
andb
or
out
fwait
fs
fcoml
dec
int
mov
out
insl
cmp
adc
sub
dec
outsl
incl
jge
or
test
pop
lds
test
fs
jae
mov
add
ljmpw
or
rorl
mov
fildll
mov
fiadds
sahf
rcrb
insl
mov
pop
pop
push
jg
in
jo
jmp
shrl
adc
ret
sub
xchg
jge
pop
mov
xchg
stc
push
push
dec
pusha
gs
mov
pop
aas
mov
and
lea
fsubrl
jo
es
pop
fstpl
scas
movsb
and
shlb
shr
mov
lcall
jae
mov
add
ret
lods
roll
mov
scas
test
std
xchg
cmp
roll
mov
sahf
in
jp
jle
movsb
rorl
pop
pop
add
mov
sbbb
stc
mov
incl
pop
mov
pop
pop
sub
js,pt
inc
leave
scas
mov
in
gs
jg
sbb
mov
push
pop
sti
jg
push
xor
bound
push
into
push
mov
repnz
add
inc
inc
cmp
arpl
mov
mov
jmp
cmpsb
pop
mov
daa
or
out
jp
mov
xor
pushf
fidivl
lods
add
test
push
xchg
xor
mov
jl
add
pop
push
sub
push
jge
add
outsb
insl
ja
dec
jmp
lock
inc
or
and
test
inc
in
gs
push
push
jb
cmp
mov
fstpt
dec
enter
addr16
mov
lods
mov
leave
loope
sbb
or
mov
adc
pushf
cmp
lods
add
push
and
movl
sbb
jb
mov
xchg
repnz
pushf
outsl
xchg
loop
xchg
or
jnp
dec
mov
mov
fnstenv
jno
or
adc
xchg
stos
mov
adc
xchg
lea
enter
addr16
dec
lret
push
sub
xor
inc
insl
ret
loop
test
fisubs
fsubl
movl
add
rcl
xor
aaa
aaa
dec
xchg
in
push
ret
popa
inc
outsl
fisubrs
mov
movsl
sbb
lcall
jle
cmp
daa
popf
arpl
mov
aad
or
sti
lahf
pop
arpl
jae
shr
mov
div
ja
loope
mov
das
hlt
fadd
cmp
movsb
push
xchg
into
pop
jp
mov
inc
mull
fwait
cld
cltd
xor
sub
lods
and
movsb
dec
int
cmp
aas
lcall
or
std
jne
adc
es
dec
cli
fisubl
ficoml
lea
daa
mov
add
push
stos
test
push
jns
dec
sub
ret
pushf
sahf
lock
fsts
sbb
sahf
jae
stc
dec
sbb
sub
call
jno
pop
addl
ror
push
xchg
cld
mov
sar
xchg
test
loopne
adc
stos
jbe
mov
pop
ret
outsb
jmp
dec
cld
adc
fucom
pop
pop
mov
push
fdivl
and
ret
dec
dec
enter
rorl
or
out
mov
sti
int
shlb
cmp
shl
loop
sub
hlt
lock
add
mov
ljmp
subl
push
int
test
mov
lock
out
xor
push
test
xchg
inc
daa
cmpb
fidivs
stc
sbb
mov
cmp
mov
sbb
cltd
mov
insl
jmp
mov
inc
ret
out
xchg
lock
xor
push
cs
dec
mov
int
aaa
mov
mov
lret
dec
lock
mov
push
dec
aad
aas
sahf
test
adc
paddsw
adc
lret
inc
push
lods
fstpt
pop
cmp
mov
scas
call
sahf
nop
cwtl
mov
rolb
push
and
divb
stos
mov
adc
sar
add
scas
cmp
inc
sub
cmc
lods
test
xor
lahf
subb
shll
ja
fadds
lret
shr
aaa
dec
xchg
fcomi
lcall
cs
imul
in
cmpsb
leave
shrl
push
cmpsb
mov
mov
clc
pop
cmpsb
ret
pop
out
adc
enter
addr16
fisttpll
jecxz
fnstcw
popa
cli
xor
loope
sbb
out
in
std
pushf
xlat
mov
and
dec
cmp
jae
repz
mov
add
cmp
push
mov
xor
popa
ds
push
lcall
scas
xchg
adc
fnstenv
dec
xchg
rclb
pop
sub
stos
jne
mov
pop
jno
les
sub
aas
aad
pop
mov
out
roll
ljmp
xchg
pop
popf
jbe
cmp
enter
in
orl
xchg
out
inc
imul
inc
push
sahf
inc
adc
or
mov
xor
dec
inc
outsb
or
pop
xor
fildll
inc
and
xchg
push
fs
mov
jge
testl
push
dec
fcmovne
cmp
outsl
stc
jne
sub
push
xor
fwait
aam
mov
sbb
mov
mov
dec
add
and
scas
loope
lods
test
inc
sub
push
mov
shrl
loopnew
adc
ds
mov
lahf
adc
sahf
test
in
inc
cs
cli
adc
pusha
mov
xchg
sarl
jae
add
mov
out
in
clc
sti
adc
mov
andl
xor
loop
lock
daa
dec
cmp
arpl
lods
add
andb
mov
stos
cmp
repnz
jae
pushf
lods
stos
sbb
pop
into
fwait
test
fidivrs
mov
or
mov
xor
nop
mov
jne
add
repnz
and
xchg
mov
out
lret
jnp
ljmp
rcrl
adc
xchg
pop
fbstp
jns
and
inc
mov
push
rol
xchg
stos
movsl
mov
aad
movsb
push
sub
xor
out
testb
pop
jg
cmpsl
jnp
lds
mov
sub
and
mov
sarb
test
dec
sarb
inc
lret
cmpsl
das
fldl
data16
cmp
shr
outsb
jge
pop
and
lods
sub
mov
rcl
mov
test
aaa
jns
out
push
lds
insl
cmp
into
pop
pop
aaa
xlat
sbb
hlt
sbb
push
sub
pmulhw
out
push
sbb
push
outsl
outsl
mov
insl
bound
fidivs
imul
pop
iret
test
dec
cmp
push
ljmp
cmp
dec
pop
push
mov
add
fmul
bound
cmp
stos
pop
jnp
and
in
fsub
cwtl
push
sub
jle
aad
test
dec
aas
or
xchg
ja
cmp
sub
mov
data16
aaa
and
aaa
cli
pushf
in
inc
jp
add
add
pop
and
and
movl
mov
in
lods
jle
hlt
xor
add
push
subl
aam
pop
out
jae
cwtl
lret
cmp
pop
aas
jge
and
inc
pusha
push
xor
loop
ljmp
jo
fisttps
mov
lcall
pushf
sbb
pop
push
stc
push
clc
outsl
mov
jle
jmp
stos
mov
lret
lea
mov
or
icebp
test
std
add
out
hlt
jg
test
loopne
inc
aas
mov
cmpsl
adc
inc
scas
xor
inc
pop
and
dec
cmc
jo
arpl
cmp
jge
sub
ds
dec
repnz
and
jnp
xor
add
faddl
dec
jp
pusha
les
fsub
test
test
std
into
lock
mov
jp
dec
jbe
sbb
aaa
movsl
fs
stos
xor
xchg
sbbl
jmp
sbb
adc
mov
fimull
jbe
lret
jecxz
pop
lods
dec
push
fmulp
je
adc
clc
inc
lds
in
add
dec
nop
lods
test
fwait
inc
jp
cltd
or
ja
dec
aam
mov
push
jae
es
loop
jge
push
loop
xchg
lcall
fsubrs
popa
pop
sbb
adc
xchg
cmpb
lods
sbb
xchg
lahf
xor
mov
fistps
stos
mov
push
jle
and
jmp
xchg
and
loope
xor
mov
sbb
lret
movsl
push
adc
jbe
cmp
mov
cmp
xchg
lahf
int3
inc
mov
pop
in
lea
clc
fisttpll
shlb
fildll
int
pop
pop
mov
stos
sub
outsb
stc
pop
sub
push
popa
mov
bound
das
inc
mov
pop
rorb
xchg
ss
out
push
xchg
hlt
les
xchg
aad
pusha
data16
adc
cmp
dec
dec
clc
jle
add
jne
mov
hlt
mov
pop
cwtl
fdivrs
ljmp
adc
jae
mov
loopne
daa
inc
or
loop
jle
imul
not
pop
pop
jp
sti
xor
dec
jle
jo
adc
push
rclb
push
add
cmp
fldcw
fdecstp
mov
mov
insb
and
stos
ljmp
testl
mov
add
mov
dec
and
sbb
push
icebp
pop
test
or
push
icebp
mov
and
insb
stos
xor
and
mov
fistps
mov
inc
mov
bound
xlat
lods
add
or
xchg
into
aas
sub
in
fwait
int
loope
sub
xor
jnp
shrb
mov
mov
test
pop
nop
push
adc
push
outsl
imul
lcall
outsb
push
je
push
fwait
pop
repnz
adcl
cmp
adc
or
mov
dec
sbb
mov
nop
cwtl
adc
add
out
ror
mov
sbb
repnz
push
pusha
and
imul
sbb
cld
pop
adc
rcrb
jle,pt
adcl
cmp
xchg
xlat
sbb
jle
cmp
sub
add
push
lret
pusha
mov
pop
arpl
repnz
lods
or
mov
insb
imul
bound
popa
lea
adc
loope
adc
pop
cld
mov
sub
lea
les
xchg
pop
inc
sub
inc
loope
jp
push
mov
cltd
jo
dec
dec
stc
popf
mov
test
es
in
cmpl
add
inc
ror
inc
cmpsl
popa
cli
sub
mov
dec
xor
and
fwait
pop
jl
in
imulb
and
mov
imul
mov
divl
jb
iret
xor
mov
loope
sub
cltd
xor
daa
movsl
test
push
jge
bnd
pop
xchg
mov
lea
mov
lret
xchg
sub
push
xchg
repnz
idivb
jo
stos
lock
test
lcall
scas
das
fldcw
inc
les
fwait
jne
and
lcall
jne
inc
leave
xchg
inc
jl
pop
mov
pop
sahf
jbe
inc
repz
or
sub
fs
add
jns
cs
fnstenv
enter
outsb
push
lcall
sub
pop
pop
adc
adc
mov
sarl
ss
orl
adc
xor
xchg
xorl
mov
fisubl
pop
rorl
call
pop
je
mov
sub
mov
sbbl
and
lock
push
and
call
addb
push
call
dec
jo
cmpsb
xchg
fcmove
sub
daa
dec
and
or
jg
mov
xor
xchg
stos
les
pusha
test
sbb
or
push
fdivs
ja
pop
fnstsw
hlt
xor
pop
popf
push
sahf
js
mov
in
stc
jmp
mov
sub
movsb
sub
aaa
push
aad
test
jbe
fmull
daa
fcoml
push
xchg
pusha
xor
ret
push
loopne
repnz
pop
sub
stc
mov
loopne
cwtl
and
lods
setle
pop
aam
pop
inc
mov
mov
lds
dec
xor
mov
cld
mov
xor
xor
nop
cmp
push
push
and
jp
sahf
cmc
mov
mov
sbb
popf
aaa
mov
in
jl
mov
jmp
mov
lods
fsubrs
clc
js
cmc
insb
stc
ficompl
xlat
mov
jmp
fidivrl
xchg
lock
jmp
mov
js
out
pushf
or
inc
mov
xor
insb
jle
mov
mov
movsl
jmp
pop
mov
popa
fsubrl
outsl
data16
in
sub
sti
mov
ss
mov
push
test
jno
adc
shll
out
fisttpl
jge
dec
fdivrs
adc
mov
int3
testb
ja
adc
pop
sub
sahf
stos
jb
pop
loopne
xor
add
and
sub
push
adc
mov
rcrb
mov
aas
mov
into
mov
repnz
js
fwait
jl
mov
in
push
ret
push
jge
sbb
xor
push
mov
addr16
adc
pop
test
dec
inc
push
dec
and
clc
inc
pop
cmp
or
jg
sbb
cmc
out
add
decl
lret
aas
and
pop
cmpsl
stc
adc
enter
sbb
ss
int
daa
xchg
icebp
add
popf
icebp
lods
jo
cltd
fsts
das
test
popa
jmp
rcrb
fwait
sbb
ss
mov
std
jnp
rcrb
mov
in
adc
test
xchg
push
ror
out
add
push
lcall
dec
xchg
in
add
sbb
cmp
or
es
in
insl
dec
jns
inc
ss
xchg
xor
xor
xchg
stos
cmp
in
out
and
add
test
fisttpll
cmp
and
inc
cld
movsb
cmp
std
inc
outsl
adc
rolb
dec
add
jmp
rcr
jnp
sahf
lds
inc
aaa
out
shll
mov
inc
cmp
subb
cs
call
dec
fldcw
push
mov
jmp
jnp
lcall
scas
cld
mov
xor
mov
sub
out
repz
gs
pop
mov
dec
daa
pop
pop
xor
mov
pushf
and
xor
dec
stc
fists
sbb
inc
mov
sub
cmp
movsl
pop
inc
and
testl
popf
xor
mov
sub
fisttpl
or
push
fwait
rcrb
push
pushf
leave
dec
push
jmp
and
not
or
std
hlt
stc
repnz
sahf
push
std
iret
mov
dec
xchg
out
iret
sub
test
mov
lahf
movsl
lds
mov
into
aas
or
dec
push
rclb
into
lea
pop
mov
sbb
xor
adc
and
repnz
in
dec
cmp
pop
fistl
fimuls
cmpsb
mov
sti
ret
mov
xor
shll
jge
cli
xchg
int3
cli
test
mov
push
jnp
jmp
cmp
scas
sbbb
out
orl
push
cwtl
cwtl
pusha
fsubs
pop
or
cmpsl
fwait
stos
xor
xchg
xor
mov
loop
pusha
add
adc
cwtl
cmpb
movsb
pop
pusha
and
mov
cmpb
cmpsl
daa
adc
aam
and
popa
fst
orl
push
dec
insl
sbb
shll
mov
cmp
setb
mulb
add
in
into
sub
dec
bound
fcomps
movsb
cmp
cmpl
inc
movl
test
addr16
adc
jo
mov
jmp
in
lods
xchg
jl
xchg
jl
loop
mov
pop
lcall
xchg
jg
and
mov
shll
lock
pop
mov
xor
push
cmpsb
dec
jg
jno
push
jbe
xchg
mov
or
adc
pop
jb
inc
fwait
pop
fisttpl
mov
stc
xchg
dec
inc
xor
fldpi
mov
adc
xchg
shll
or
out
mov
pushf
or
push
pop
scas
mov
adc
cmp
mov
push
cli
jne
inc
mov
xchg
lcall
sub
stos
cmp
push
into
rep
icebp
outsb
mov
push
sbb
movsb
hlt
inc
sub
int3
pop
fadds
in
pop
dec
mov
leave
xchg
jg
mov
xchg
loop
sbb
sbb
in
rcrb
aaa
fistl
imul
lret
mov
sbb
in
sar
rcrb
pop
movsb
push
movsl
cmpsl
test
jne
in
jo
mov
loopne
fnstenv
xchg
adc
xchg
daa
jp
add
clc
inc
lret
stos
scas
mov
ss
rolb
push
adc
dec
mov
mov
inc
cmpsb
lcall
fildl
mov
jb
lret
aas
adc
pop
dec
adc
mov
and
pop
xchg
cmp
daa
sub
movsb
mov
xor
sbb
and
mov
or
mov
lds
addr16
mov
dec
push
aas
inc
add
sbb
cli
mov
xchg
sbb
or
dec
jbe
sub
ret
lahf
outsl
mov
mov
sub
pop
xchg
shlb
push
push
int3
dec
inc
cmpsl
mov
jns
fsub
add
add
and
jae
push
and
loope
push
mov
jae
and
or
pop
inc
or
or
jp
loop
inc
push
iret
cltd
push
aam
aaa
movsl
into
dec
xchg
movsb
or
lods
pop
cmpsb
imul
imul
and
repnz
add
push
mov
gs
mov
adc
push
nop
and
and
mov
lock
xchg
rcll
cli
incb
lcall
mov
adc
int
addr16
dec
inc
imul
cwtl
sub
aad
and
pop
arpl
outsb
movsl
xchg
popf
mov
and
jl
sbbl
sbbl
les
xor
push
mov
jb
pop
dec
push
and
inc
mov
scas
jnp
jecxz
pop
pusha
fxch
sbbb
test
dec
out
mov
dec
pop
or
movsl
lock
bound
cmp
negb
xor
lahf
ss
test
out
pop
imul
stc
jle
adc
pop
jg
out
or
rcrb
xlat
fbstp
mov
xchg
shrl
push
wrmsr
int
push
icebp
std
xor
mov
out
sub
bound
outsb
mov
subl
add
stos
jl
ss
movsb
out
push
mov
jp
jns
mov
shrb
lret
sub
dec
addb
pop
push
cltd
test
jbe
or
shll
push
sub
and
movsb
bound
imul
ss
xlat
jns
jge
orl
sbb
loope
jp
mov
ljmp
std
sub
jno
push
add
xor
arpl
leave
push
pop
lret
or
xchg
or
notl
shlb
or
sahf
stos
mov
pop
movsb
inc
mov
xchg
dec
int
sbb
les
pop
push
mov
inc
xor
fiaddl
and
and
in
dec
inc
sbb
pop
sub
into
js
jae
leave
mov
addl
stos
mulb
out
pushf
bound
bound
gs
movsl
jne
hlt
xchg
inc
aaa
sbb
icebp
sbb
xchg
xor
or
mov
xchg
shrb
push
push
stc
call
clc
movsl
sbb
push
cmpsl
cwtl
cltd
sar
adc
popa
inc
sahf
sbb
xor
nop
and
sub
sub
mov
idiv
pop
lret
push
mov
inc
shl
shl
les
fcoml
mov
and
stc
jmp
add
inc
xchg
push
ficoml
rorl
push
and
out
xchg
and
mov
sbbl
mov
add
mov
jmp
mov
int
lret
mov
pop
jae
lcall
into
pop
mov
loopne
clc
or
xchg
push
inc
adc
jns
repz
jge
cmp
js
jp
call
fucomip
pop
mov
aam
jle
mov
pop
add
aas
push
fildll
std
add
lcall
add
sbb
add
addl
cmp
repnz
icebp
pop
aas
stos
insb
ret
sub
jmp
pusha
int3
cmp
lea
fwait
push
xchg
aas
in
bound
xor
sbb
xor
sbb
mov
das
cmpl
adc
mov
lea
outsl
cmc
xor
out
es
sbb
xor
jb
pop
inc
fcmovnb
xchg
ficoml
xor
mov
xchg
mov
pop
push
popa
push
out
out
nopl
cmc
pop
cmp
sahf
jl
sub
dec
test
inc
adc
dec
jmp
push
dec
rolb
jle
ljmp
mov
lcall
in
out
test
inc
and
jg
xchg
xchg
imul
les
pop
rorl
adc
scas
and
pop
into
and
out
xor
ret
xorl
addr16
dec
testl
dec
jecxz
fisubs
xor
xor
pop
pop
mov
mov
cmp
enter
mov
cwtl
orl
inc
pop
ficoms
ja
add
cmp
and
pop
and
mov
cltd
jbe
dec
rcll
pop
ljmp
fwait
addr16
incb
pop
jp
and
imull
mov
add
divb
xor
arpl
ret
out
xor
cmc
xor
ljmp
bound
sbb
andb
out
cs
inc
std
mov
ss
out
sbb
negl
pop
xor
cld
mov
add
lret
mov
pop
dec
or
xchg
mov
test
pavgb
cmp
jg
adc
add
adc
pusha
or
adc
test
mov
adc
push
popa
cs
insl
xchg
mov
adc
xor
sub
loopne
ficompl
cmpsl
push
add
mov
ljmp
add
fisubl
sbb
arpl
lahf
roll
out
jle
shll
movsl
cmp
enter
decl
push
cmc
out
push
jns
rolb
pushf
cmp
pushf
outsl
and
sbb
cmp
pusha
fldl
repnz
pop
test
daa
in
clc
mov
pop
jl
outsl
stos
sbb
jecxz
xchg
adc
in
xchg
mov
mov
test
push
jecxz
ljmp
pusha
lret
dec
stos
sarb
sub
dec
or
inc
or
push
outsl
xchg
inc
jecxz
lock
scas
nop
imul
cmp
inc
bound
addr16
and
cmpsl
push
or
ds
lret
add
mov
sbb
inc
clc
sub
idivl
loope
push
ja
push
and
test
fsubs
cld
dec
arpl
xor
gs
das
cmp
xchg
jle
fwait
data16
pop
frstor
cmp
jb
add
inc
in
jmp
cltd
sti
cmpl
lods
gs
pop
sub
adc
arpl
imul
dec
fwait
jp
roll
jne
push
in
mov
push
cmp
jne
jmp
dec
in
addr16
sub
inc
fadd
mov
push
jo
ds
xchg
or
xchg
insb
ljmp
mov
pop
xchg
int
mov
shl
popf
rolb
xchg
mov
lock
pop
mov
sub
roll
aam
imul
dec
push
cmpl
mov
xchg
repz
inc
mov
jmp
vpsubusw
dec
pop
mov
cmp
jbe
or
xor
mov
xchg
mov
sub
inc
jl
push
aam
scas
mov
sti
jb
fucomp
pop
xorl
add
adcl
mov
jmp
mov
pop
mov
jns
cmp
je
addr16
fimull
cmp
lock
das
add
inc
shrl
add
dec
rcr
imul
mov
and
cmp
cmpsl
mov
sbb
rcr
xor
jp
push
mov
repnz
pop
jnp
mov
sbb
in
jae
stos
xor
js
scas
mov
mov
cmp
cmp
ret
mov
loopne
fldl2e
mov
pop
cmpsb
hlt
mov
in
sub
lods
jle
cmpsb
test
mov
test
push
cwtl
sub
mov
dec
mov
mov
mov
lods
test
xchg
int
outsb
and
pop
xlat
inc
insl
ss
xchg
sub
ret
dec
xor
xchg
test
frstor
inc
pop
xor
imul
neg
fwait
jmp
lock
je
jmp
push
pop
dec
out
fucomip
pop
pushf
aad
scas
int3
outsl
pop
xchg
push
daa
xchg
ret
inc
and
mov
push
sbb
int
cli
lods
test
add
cmc
inc
jg
inc
and
pusha
stc
pop
dec
imul
jmp
movsl
add
gs
lock
test
out
lahf
les
ret
dec
and
lods
sbb
jo
cmp
lahf
repnz
lea
push
ljmp
adc
scas
adc
sub
push
fdivs
mov
cmp
push
jbe
in
dec
ret
aad
jae
js
and
jae
retw
xor
jmp
popa
mov
mov
xchg
inc
sub
fimull
rclb
mov
fs
mov
sarl
mov
ret
and
imul
pop
xchg
sbb
fcompl
push
and
jle
jge
add
xchg
jbe
jmp
add
sub
loop
jae
fsubr
faddl
mov
dec
sub
cmc
out
ret
pop
scas
cs
aaa
ljmp
into
fstpt
push
xchg
ret
push
sbbl
push
mov
xor
pusha
adc
push
pop
sbb
and
push
test
ret
insl
outsb
stos
mov
lea
sti
adc
fwait
cmp
xor
rorl
inc
loop
repz
xchg
fmull
addr16
push
cli
cmp
inc
cld
icebp
mov
and
xor
in
cmpb
out
imul
arpl
mov
into
out
enter
adc
sbb
sbb
lahf
pop
scas
iret
sbb
shlb
scas
iret
push
xor
and
push
inc
sahf
orb
pop
imul
push
fbld
push
xor
jae
fisttps
insb
adc
mov
mov
xchg
cmp
mov
add
cltd
outsb
mul
add
adc
push
mov
pop
xchg
jae
scas
leave
daa
sub
mov
push
dec
int
ljmp
add
lods
mov
scas
add
sti
jg
fidivs
imul
enter
loop
aam
or
push
jmp
loop
je
inc
jb
xor
ret
enter
adc
mov
lahf
sbbb
cmp
sbb
pop
jnp
and
push
ljmp
mov
adc
jns
adc
sbb
sbb
push
push
xorl
fists
ss
loope
push
pushf
add
daa
mov
test
popf
and
sub
pop
push
aam
enter
cmp
adc
inc
sub
shl
mov
sub
fldenv
xchg
pop
repz
mov
xchg
repz
jbe,pn
xor
clc
divl
xor
add
les
cmp
movsb
cmpsl
sbb
pop
mov
out
xor
pushf
test
sti
test
hlt
out
jmp
inc
xchg
add
sub
and
movsb
sbb
mov
movsb
andb
addl
adc
dec
mov
mov
stos
loopne
shrl
fldpi
mov
movsb
xor
faddl
notl
in
add
sbb
aam
fidivl
mov
dec
pop
out
mov
and
movsb
ljmp
xor
movsl
icebp
in
xchg
fdivl
cvttps2pi
xor
in
js
movsb
inc
inc
push
iret
jb
outsb
cwtl
jge
and
mov
and
inc
cmp
mov
fistpl
sub
pop
andl
sub
adc
lock
cmpb
push
mov
add
sahf
insb
mov
lahf
cwtl
std
mov
cld
xchg
add
mov
push
daa
imulb
fmull
adc
ffree
mov
dec
fidivs
cli
xchg
xor
cmc
sub
js
cmp
xor
mov
and
push
cmp
cwtl
shr
mov
cmp
scas
mov
loope
or
adc
aad
xchg
clc
aas
mov
and
sub
mov
push
lods
sbb
mov
sbb
andl
loope
and
add
mov
popa
push
test
cmp
mov
mov
inc
sub
pop
lret
pop
fildl
cmp
dec
mov
push
sub
xchg
dec
orb
jb
pop
pop
add
out
push
mov
xor
xchg
negb
xchg
aad
mov
sub
lods
mov
xchg
dec
mov
pop
popa
sbb
push
loop
pop
adc
lock
dec
fmul
xor
sbb
xor
push
lcall
leave
mov
inc
mov
int3
out
sub
clc
xchg
scas
cmpsb
jle
shlb
sub
cmp
jno
sub
mov
ds
jns
mov
pop
call
icebp
pop
mov
push
scas
sbb
lea
std
mov
jae
cmp
dec
mov
movsb
dec
jbe
jecxz
adc
mov
ja
shlb
cmp
shlb
sbb
xchg
dec
pop
sbb
shl
pop
pop
fwait
mov
mov
or
hlt
lock
sbbb
mov
sbb
lds
popf
and
jp
int3
popl
jmp
pop
inc
rcll
lods
and
and
adc
sbb
jge
aad
add
pusha
scas
push
dec
sbb
sarb
xchg
jo
mov
push
adc
mov
xchg
add
insl
mov
xchg
fisttpll
or
incl
fsubrl
sbbl
push
cmp
push
pop
pop
fnsave
xchg
cmp
ja
pop
out
in
movl
movsl
jns
xor
ljmp
ret
jg
aas
in
dec
clc
pop
icebp
sbb
mov
scas
lret
pop
int3
hlt
in
pop
fsts
push
push
or
filds
push
mov
jno
call
shlb
pminub
adc
hlt
and
adc
ret
aam
stc
fwait
icebp
inc
push
stc
fistl
dec
cmp
insl
inc
sbb
sub
test
adc
mov
subl
sub
ds
out
dec
ss
adcb
fcoml
cmp
mov
ja
jl
inc
xchg
scas
push
int3
cmp
stos
int3
mov
lods
lea
out
arpl
jmp
xor
outsl
data16
jbe
xor
cmp
in
shlb
dec
jg
fsqrt
sub
pop
insb
fnsave
jmp
lret
jo
inc
xchg
push
mov
adc
icebp
jae
jle
addr16
add
mov
add
pop
jp
dec
popa
outsl
out
incl
lahf
cmpsl
mov
es
mov
int3
int
pop
cmp
jmp
sub
out
pop
mov
stos
add
aaa
or
into
ret
mov
sub
push
sub
push
out
xchg
ja
jo
jnp
subb
scas
lret
mov
mov
fimuls
mov
rclb
in
dec
in
or
cmp
imul
sub
mov
ret
test
in
mov
lcall
lahf
aaa
int3
xchg
sub
xchg
insl
mov
lret
adc
enter
xor
hlt
add
fisttps
adc
dec
outsl
xor
add
sbb
xchg
add
subb
or
xchg
push
inc
je
fs
mov
cmpsb
cmp
pushf
fsts
push
xchg
xchg
jg
imul
cltd
outsb
test
and
jmp
in
fbld
test
ds
ljmp
jecxz
out
mov
outsl
or
je
sub
out
push
push
data16
enter
cmp
adc
mov
repnz
push
adc
lds
mov
or
jo
add
pop
mov
or
lret
shl
ret
sbb
pusha
subb
and
sub
and
int
dec
jmp
push
xchg
loopne
imul
dec
nop
ds
ret
add
pop
sti
fimuls
into
in
cld
and
in
into
xor
loope
cwtl
insb
int
clc
mov
icebp
push
ret
dec
or
mov
pop
cmp
cmpsl
pop
or
pop
lds
loopne
jmp
loope
addr16
cmp
dec
loope
shr
xor
sbb
inc
mov
loope
ds
mov
mov
jecxz
xchg
mov
cmp
push
test
or
sbb
jns
sbb
pop
push
int
les
xorl
mov
mov
sbb
in
cmc
add
jmp
sbb
push
add
mov
mov
or
cmp
jns
lock
mov
fnstsw
xchg
movsl
in
mov
mov
mov
dec
jns
mov
scas
pop
inc
sahf
arpl
ljmp
aas
hlt
out
test
movsb
dec
dec
arpl
mov
push
nop
jno
jns
subl
stc
ret
mov
rcll
ljmp
loopne
sahf
push
stos
mov
push
loope
aas
pop
out
xor
xchg
pop
mov
mov
sbb
adc
imul
lds
fisubs
xor
sti
or
out
mov
cvtps2pd
xchg
sub
push
push
mov
mov
movsl
xor
in
aam
mov
ret
and
ljmp
lods
fcoml
bound
divb
or
sub
and
sub
into
es
xlat
sbb
cld
push
mov
inc
dec
fcmovnbe
fdivp
mov
in
ret
pop
mov
mov
es
imul
cs
cli
dec
into
mov
pop
out
cmpsb
jmp
sti
hlt
pop
sbb
ds
lahf
orl
jae
pop
sub
sbb
faddl
dec
sub
faddl
lcall
xor
pop
test
mov
movsb
in
icebp
mov
dec
mov
std
jbe
outsb
insb
sbb
inc
in
push
test
mov
stc
loop
nop
mov
rcrl
add
rcrl
aam
pop
xor
in
jmp
mov
pop
xor
add
sub
int3
mov
data16
scas
or
lods
mov
or
rcrl
xor
mov
jnp
js
inc
imul
shrb
aaa
negl
out
sarl
mov
xchg
dec
and
adc
pushaw
or
les
sub
and
push
call
cmp
sub
cmp
sub
repnz
or
add
sbb
pop
inc
mull
nop
in
imul
and
das
adc
push
repnz
jns
ja
hlt
inc
adc
mov
jb
sub
pop
adc
mov
das
jmp
pop
cwtl
xchg
sbb
and
gs
mov
leave
and
adc
pop
push
inc
cmpsl
inc
mov
cli
xchg
push
jmp
outsl
dec
int
or
push
mov
hlt
or
pop
or
rcl
sbb
fs
mov
imul
lods
cmp
popa
pop
adc
cmc
xchg
lods
jp
add
clc
mov
std
xchg
mov
ljmp
jl
inc
gs
pop
mov
push
xchg
test
jg
addr16
or
mov
cs
daa
ret
fsubs
mov
roll
and
adc
sbb
jmp
pop
cmpsl
mov
lock
mov
nop
xchg
das
ficoml
cmp
faddp
lds
nop
push
inc
movsb
cmp
lret
mov
addr16
mov
int3
sub
fists
push
xor
mov
fldln2
lret
or
es
mov
jb
add
cmp
mov
stc
xchg
cli
cwtl
shlb
jns
imul
xor
push
push
lock
int3
xor
xlat
or
adc
adc
push
daa
outsl
dec
and
sbb
jecxz
xor
ds
jae
imul
dec
mov
pop
cli
lds
shl
gs
test
push
pop
jbe
and
leave
in
fcompl
push
xchg
cmp
xor
prefetch
inc
decb
push
mov
sub
adc
lret
pusha
test
dec
push
das
fstpl
repz
cmp
inc
loopne
or
adc
rclb
pop
cmp
and
dec
xchg
xchg
clc
out
in
fwait
mov
jne
out
cwtl
xchg
sarb
add
xor
test
decl
push
jecxz
adcb
aas
aas
pop
cli
cltd
cmpsl
cmp
in
sub
movsl
fs
sub
mov
or
or
int3
adc
or
adc
int3
push
push
mov
out
mov
pop
ffree
mov
xchg
xchg
adc
cmp
sub
fnstcw
repz
cmp
lcall
lret
jae
in
shll
pop
dec
cmp
aad
lods
scas
dec
jb
fdivrs
xor
rcl
xchg
pop
out
std
mov
mov
testl
xor
jo
int
in
push
fildll
js
inc
dec
jle
xchg
sbb
addb
repz
xchg
dec
or
dec
and
mov
int
push
ds
and
ds
in
arpl
inc
sub
in
test
loope
divb
pop
pop
jns
push
insb
test
loopne
divl
xlat
mov
add
push
rcr
mov
xor
jno
lock
add
jmp
jmp
dec
pop
loop
dec
js
inc
cs
push
sub
ljmp
and
add
pushf
shll
insb
inc
popf
mov
bound
dec
insl
mov
inc
xchg
jecxz
mov
mov
push
jg
ja
mov
fnsave
int
pusha
mov
fxtract
add
push
call
insb
jmp
cmp
stc
jb
inc
jno
pop
insb
js
mov
movsb
out
cld
into
pushf
lret
ret
lods
push
mov
fwait
ret
mov
inc
inc
stos
adc
or
push
xchg
call
pop
jecxz
mov
cmp
pop
add
ljmp
cs
adc
int3
sarl
sbb
into
imulb
inc
and
mov
loope
push
add
fidivs
jbe
cwtl
popf
sbb
add
shll
orb
addr16
push
out
stc
add
adc
subb
out
push
jecxz
cmp
pop
addr16
adc
es
loop
cmp
dec
cld
int3
inc
arpl
dec
mov
push
push
dec
hlt
ljmp
or
cld
ds
inc
mov
push
imul
xorb
gs
mov
iret
mov
stos
outsl
or
mov
je
movsl
jne
xor
leave
test
sbb
sbb
into
push
xchg
popa
jmp
pop
mov
rcrb
jmp
pop
addb
daa
fistl
sbb
arpl
cld
in
adc
ret
in
sbb
inc
add
xchg
movhlps
mov
dec
repnz
shrb
fildll
scas
sbb
xor
xor
and
dec
push
pop
mov
in
pop
aas
sub
imul
imul
jae
ss
mov
pop
push
push
std
jo
lahf
cmpsl
fs
mov
mov
xchg
and
xchg
sub
xor
pop
mov
xor
shll
aas
mov
shrb
mov
pop
fcomps
jp
cmpsb
sti
sbb
leave
xor
dec
cmp
call
or
inc
adc
adc
add
push
les
js
push
jnp
push
cltd
sbb
cmc
and
or
or
cmp
cltd
push
sub
std
mov
push
pop
add
fsts
ss
fs
mov
orb
pop
sbb
pushf
jg
ret
dec
push
inc
cltd
jl
jno
jp
in
push
jge
sbb
dec
das
mov
icebp
adc
dec
ds
cmc
jbe
xchg
out
cmc
in
xorb
pop
xchg
jne
and
cmp
xlat
jl
rcr
dec
jae
movb
cmp
mov
add
mov
outsb
aas
loop
sahf
adc
pop
not
jnp
sub
and
cmp
push
js
icebp
mov
mov
cmpb
icebp
sub
scas
sbb
and
cmc
lcall
xchg
jg
sub
and
sub
and
mov
test
out
push
rclb
mov
jno
mov
bound
shrb
mov
movsl
jp
ss
sbb
shrb
test
int3
cs
inc
in
or
jno
inc
and
testl
pop
sub
lea
xchg
mov
cmp
ljmp
cmpsb
aad
xlat
adc
xchg
pop
push
shl
test
add
push
daa
mov
aas
andb
or
out
lods
mov
cli
inc
sarb
pop
das
inc
test
push
lahf
cli
pop
sbb
sbb
sti
xchg
fs
dec
stc
inc
xchg
idiv
sub
lods
daa
mov
out
adc
ret
in
sub
pop
insl
xchg
sti
xor
ss
fiadds
bound
push
xchg
inc
scas
outsl
das
and
add
add
push
outsl
lods
or
xchg
xchg
or
loop
xchg
xchg
jne
cmp
inc
ja
cmp
call
push
mov
andl
in
cltd
jns
dec
sub
popf
popf
repz
es
sbb
cmp
pop
push
loope
iret
mov
pop
in
aad
lret
fdivrl
lods
and
jp
cmp
xor
neg
sbb
aaa
aad
stos
pop
cmp
les
mov
stc
mov
push
fmull
mov
lcall
mov
adc
sub
lret
pusha
push
push
inc
mov
hlt
inc
mov
cmp
lret
pop
dec
jb
aam
in
aam
dec
sub
popa
dec
xor
jo
cmp
xlat
pop
hlt
fnsave
push
insl
add
les
push
mov
imul
cmp
loope
insl
sahf
lea
adc
enter
mov
pop
lods
add
xchg
pushf
hlt
pop
in
out
addr16
jae
out
sahf
je
movsb
xor
subl
adc
push
sub
test
subl
mov
push
repz
pop
popl
fnstcw
cli
push
mov
push
imul
jge
imul
mov
mov
mov
pop
jmp
loopne
pop
jno
cli
push
rcll
add
xchg
pop
mov
sub
test
mov
je
jns
cltd
push
js
pop
movsl
pop
stos
xorb
add
mov
test
inc
rol
xor
add
repz
adc
arpl
xor
mov
mov
mov
jbe
ljmp
lock
lea
stos
addr16
or
push
mov
ljmp
cmp
add
xor
nop
adc
and
mov
mov
adc
sub
cld
add
aad
cli
inc
jae
ret
clc
shrl
sub
hlt
shrl
ficoml
and
dec
jmp
pop
xor
pop
inc
loop
test
xchg
insb
inc
nop
dec
dec
clc
lret
inc
mov
cmp
jns
mov
into
pop
pop
pop
dec
jno,pn
ficoms
imul
pusha
jle
add
pop
cld
mov
pop
and
or
jb
arpl
dec
and
mov
mov
into
cmc
adc
dec
cmp
mov
jo
pop
imul
adc
pop
jp
fnsave
repnz
test
sbb
out
jecxz
xor
add
int
insl
xchg
insb
cltd
sub
stos
dec
fiadds
push
movsb
fstps
mov
and
in
das
pop
mov
mov
mov
push
ds
xchg
out
jbe
in
inc
xchg
mov
js
cli
push
xchg
xorl
outsb
cmp
sbb
shrl
test
rolb
daa
repnz
subl
adc
jl
iret
mov
add
dec
repnz
stc
std
outsb
push
sub
faddl
sbb
pop
pop
lock
jns
stc
ja
mov
adc
lret
test
jno
xchg
cmp
sub
push
inc
fistl
in
push
bound
add
jae
push
mov
dec
das
pop
adc
subb
pop
rolb
push
rclb
sti
std
dec
sub
movsb
test
sub
rcll
fcmovne
xchg
ljmp
out
pusha
subl
subl
pop
mov
cmc
arpl
mov
cmovo
adc
jb
jmp
ja
or
inc
jle
cmp
sbb
jmp
mov
fdivrl
out
rorb
dec
pushf
dec
adc
inc
jns
pop
mov
in
mov
es
push
inc
xor
inc
push
mov
mov
aas
in
outsb
ficoms
dec
xorb
xchg
mov
pop
mov
sub
or
mov
sbb
mov
cmp
test
std
add
das
cltd
dec
leave
sahf
mov
or
call
adc
lock
insb
lcall
mov
lret
push
loopne
adc
js
sub
insl
out
add
mov
cmc
ljmp
jb
jl
cltd
xor
in
or
xchg
clc
pop
jl
cwtl
jmp
sbb
mov
sub
and
das
int
aaa
xchg
xchg
inc
rcll
mov
xchg
jb
dec
xor
mov
arpl
inc
loope
dec
jno
pop
mov
and
in
cmp
mov
test
or
adc
repnz
subb
mov
lret
adc
push
out
adc
jnp
push
xor
iret
fcmovnb
mov
imul
insb
movsb
scas
movsb
mov
fidivrl
faddl
pop
aaa
loope
sub
cli
dec
sahf
lds
sub
xchg
icebp
push
mov
das
and
mov
rcrb
out
and
arpl
xrelease
iret
add
int
sub
hlt
dec
fs
or
add
or
cli
dec
cmc
iret
js
imul
xchg
xorl
mov
jle
cmp
call
das
dec
cmc
repnz
fs
jbe
idiv
shlb
push
push
pop
mov
xlat
jmp
adc
and
ret
in
aad
mov
sbb
and
int
lock
mov
out
cwtl
add
inc
leave
xor
mov
pusha
and
dec
dec
clc
enter
sbb
jae
and
dec
cmp
dec
xlat
cmpsb
sbb
mov
adc
iret
mov
mov
inc
xchg
and
sub
imul
je
lcall
jne
mov
mov
cmc
push
cmp
mov
shll
sarl
mov
sahf
pop
sbb
adc
xchg
fstpt
imul
int
lcall
into
jecxz
out
adc
add
inc
imul
les
out
sub
adc
xor
push
sbb
fsts
pop
push
enter
test
jns
xchg
xchg
adc
push
inc
inc
mov
enter
lock
sbb
test
pop
inc
movsl
push
cmp
int
dec
mov
xor
push
mov
push
push
nop
fnsave
pushf
in
arpl
ret
rcll
mov
aas
lods
xor
pusha
or
loop
movsb
popf
pop
movsb
xchg
push
inc
or
fwait
mov
ds
jae
xorb
pop
jecxz
repz
jle
jo
flds
les
std
xchg
inc
loopne
mov
jb
dec
pop
in
push
mov
push
inc
lcall
sbb
adc
rcrl
sbb
jb
sbb
adc
pop
xchg
fists
dec
xchg
add
sbb
pop
adc
add
imul
push
mov
pop
sub
nop
iret
dec
dec
movl
pop
fmul
cmp
jecxz
fwait
movsb
js
or
lret
inc
adc
lret
or
add
mov
cmp
scas
xchg
push
enter
int3
sbb
xchg
imul
sbb
out
add
ja
test
mov
pop
xchg
imul
lods
xchg
jg
and
jb
mov
pop
mov
test
lret
dec
mov
addr16
sbb
ljmp
test
arpl
dec
movsl
cli
jne
cltd
or
jecxz
adc
pushf
imul
cltd
cmpsl
push
sub
dec
cltd
adc
mov
int
inc
jbe
movsl
enter
jo
subl
xchg
push
cmp
add
outsb
dec
fs
cld
mov
outsb
pop
sbb
adc
in
aad
or
xor
lcall
fwait
jo
dec
arpl
or
fs
rcll
dec
mov
rep
rorl
rcrb
lret
mov
and
mov
pop
and
ja
std
outsl
push
decl
jno
xchg
inc
jle
inc
and
out
neg
xor
dec
sbb
out
fs
xchg
lcall
and
adc
dec
cmp
ljmp
sub
jecxz
andb
xchg
add
push
inc
and
pop
adc
jnp
int
ficoml
rorb
cmpsb
xchg
push
mov
lret
mov
adc
pusha
sbb
dec
xchg
xor
ss
push
stos
push
mov
xchg
mov
push
mov
and
std
shl
jecxz
add
mov
movsl
fidivl
fsts
jp
std
in
out
iret
xchg
cld
testl
add
push
or
fstpt
push
icebp
cmp
pop
xor
mov
aaa
xchg
ret
dec
mov
js
push
mov
js
mov
dec
cs
mov
ds
fcompl
cld
xlat
xchg
adc
pop
out
and
cli
xchg
call
mov
mov
mov
dec
mov
sahf
mov
mov
xor
mov
pop
jle
xchg
sub
push
lret
jg
sbb
pop
sub
insb
mov
mov
in
int3
mov
pop
cmp
clc
fdivrl
sbb
xor
push
adc
sbb
or
lods
loopne
jp
fwait
outsb
push
sti
add
adc
rcrb
jns
jmp
pushw
xchg
test
into
cmp
push
popa
int
jae
or
data16
push
ret
adc
jecxz
add
dec
push
fstpl
faddl
or
pusha
into
add
xchg
mov
fidivrl
sub
push
xor
and
pop
fstpt
cs
rcrl
mov
fistpl
ja
rcrb
leave
cmc
lret
ss
inc
mov
dec
and
dec
or
cmp
xchg
push
enter
cltd
outsl
xor
hlt
out
jge
test
dec
rcl
mov
dec
inc
mov
cld
test
test
loop
mov
or
mov
xchg
dec
clc
stc
in
sbb
add
lret
add
fstl
in
jp
pop
push
xchg
sub
fistl
testb
jo
movsb
loop
inc
jnp
add
ficompl
jnp
incb
mov
push
and
xchg
mov
cmpsb
mov
mov
mov
push
out
xor
dec
lods
pop
sub
ljmp
push
int
mov
cmp
and
jnp
outsb
addr16
push
jmp
and
pop
repnz
pop
xchg
adc
add
push
gs
popa
dec
outsb
cmpl
lcall
mov
xor
pop
popf
adcl
sti
push
aas
sub
movsb
pop
inc
xor
leave
std
inc
scas
imul
cmpsb
xchg
nop
fldt
int3
mov
outsb
mov
sub
xor
ss
xor
repnz
imul
cmc
pop
or
or
sbb
addl
xchg
das
test
fildl
pop
dec
and
dec
xchg
mov
push
loop
adc
mov
movsb
inc
and
pop
mov
xchg
enter
sbb
xchg
mov
movsl
mov
adc
push
add
clc
icebp
push
lods
mov
test
cmpsb
pop
movsl
lea
mov
xchg
cmp
push
and
and
adc
mov
sub
ss
rolb
ds
cmp
mov
inc
xchg
imul
pop
movsl
mov
xlat
xor
aas
dec
jo
or
ud1
into
adc
xchg
out
push
sub
mov
rclb
push
mov
push
or
jno
repz
sbbb
pushf
add
hlt
mov
mov
push
mov
inc
add
mov
push
and
popa
arpl
push
or
loop
les
fs
pop
stos
inc
js
int
sub
mov
icebp
sub
je
out
js
icebp
jecxz
fs
sbb
shlb
push
cmpsl
push
add
inc
je
cs
frstor
stos
add
pop
or
mov
fucom
mov
fsubrs
fnsave
das
fs
push
sub
mov
stc
pusha
push
cli
jb
out
lds
pop
mov
faddl
jo,pn
inc
and
stos
adc
adc
stc
ja
dec
pop
sbb
mov
xchg
ret
xchg
pop
inc
jl
cmp
add
jmp
fcomps
sbb
adc
sti
pop
cmp
dec
scas
xchg
and
stos
mov
dec
pop
movsb
scas
jge
jno
xchg
push
mov
subl
add
movsb
sub
add
ret
lds
push
repz
jge
push
xchg
imul
jbe
pop
mov
jo
rorb
ret
xorb
pushf
inc
ljmp
mov
xchg
int
and
xchg
aad
and
mov
or
xchg
insb
gs
xor
xor
pop
mov
out
cmp
hlt
xchg
dec
rcr
fidivs
xorb
loop
pop
inc
push
push
lds
and
lods
imul
dec
movsb
lea
mov
fldcw
addr16
insb
push
pop
jne
stc
fnstenv
call
cmp
dec
std
and
lods
sub
decl
pop
ret
dec
popa
rclb
pushf
fsubrl
lcall
jmp
jb
or
jo
mov
les
std
pop
or
adc
push
out
addr16
dec
push
repnz
xor
and
test
shll
cmpsb
pop
or
icebp
call
sub
out
nop
dec
int
test
ret
xor
add
cmpl
jmp
hlt
test
jl
xor
push
mov
push
cmp
notl
xchg
fptan
outsb
xchg
nop
dec
scas
mov
lahf
int
cmp
dec
cs
lcall
add
stc
pop
lcall
out
or
sbb
add
lret
aas
ret
mov
cmc
nop
das
mov
lret
mov
pushf
and
loope
xchg
sti
jl
xchg
cltd
shrb
mov
leave
aam
xlat
popl
into
sti
dec
add
fs
sti
test
fnsave
cltd
mov
arpl
pop
jp
movsl
inc
jmp
aas
dec
pop
adc
fwait
sbbb
dec
fdivp
sbb
in
mov
addr16
push
mov
int
pop
cmpsb
leave
xor
cwtl
repnz
hlt
xchg
xor
push
dec
add
sub
push
push
daa
es
cmp
fstpl
clc
and
sub
cmp
dec
push
outsb
mov
bound
cmpsl
fnstsw
sbb
and
arpl
mov
cmpsb
stos
sub
scas
movsb
xor
mov
mov
lahf
cmp
pusha
arpl
fwait
lret
fnstenv
mov
in
daa
pop
push
lcall
repnz
rcrl
test
adc
cmp
xor
or
xchg
ds
mov
jp
movsb
inc
mov
stos
adc
jae
mov
cld
inc
mov
jge
out
clc
or
hlt
jg
push
pop
shlb
gs
jbe
mov
icebp
push
mov
jg
test
or
xorl
sahf
jbe
jecxz
cmc
test
jle
push
xchg
mov
xor
mov
add
xchg
and
es
lods
rolb
push
push
mov
test
divb
aam
xlat
sub
in
inc
add
pusha
push
fs
ja
xchg
mov
sub
lret
lahf
adc
push
scas
sub
frndint
push
clc
jo
adc
jno
mov
addr16
jecxz
sub
sbb
pop
arpl
icebp
lret
push
mov
sahf
dec
mov
mov
adc
les
xor
movsb
divb
pop
jne
add
jne
sub
out
out
lret
and
push
pop
popa
cmp
les
push
xchg
ljmp
sub
mov
das
xchg
inc
aaa
inc
cltd
push
xchg
cmp
adc
gs
push
std
aam
ss
pop
fldenv
xchg
pop
lock
adc
gs
or
int3
ljmp
stos
test
jmp
jp
fstpt
ds
mov
or
adc
lret
dec
cwtl
loopne
lods
inc
sbb
decb
pushf
dec
jecxz
xchg
xorb
lcall
outsl
cmpsl
mov
lcall
and
pop
jle
clc
negl
mov
mov
shrb
repnz
sti
lods
out
repz
mov
cmp
xor
in
iret
dec
or
cltd
jecxz
adc
jg
repnz
cmp
lock
mov
movsl
sbb
mov
out
cmp
mov
hlt
push
mov
outsb
cmp
shll
dec
rol
outsb
cmp
lods
ss
nop
stc
dec
adc
mov
out
cwtl
xchg
jl
cmc
jb
xor
pop
mov
cmp
out
ret
mov
xor
loop
leave
addl
sti
dec
mov
stos
mulb
repz
mov
aad
ja
jg
loopne
pop
test
push
pushf
dec
mov
stos
mov
std
xor
out
push
or
jnp
lods
das
insl
mov
xor
fisttps
daa
mov
mov
negl
push
push
out
jns
loopne
ficomps
xchg
jp
mov
leave
mov
pop
xlat
icebp
sarb
mov
jg
ffree
cmp
dec
jg
dec
inc
fs
add
ljmp
imul
cmp
and
dec
rorb
cwtl
test
in
bound
in
mulb
push
je
cmp
inc
aad
sub
mov
mov
push
in
scas
xlat
push
les
addr16
cmpsb
xchg
dec
inc
xorl
mov
xor
faddp
jecxz
aas
out
xor
adc
fnstenv
movsl
push
xchg
fs
cmc
dec
ret
shr
sub
faddp
xor
fisubs
adc
call
adc
inc
sub
or
in
lret
xchg
sbb
cli
push
mov
loopne
or
fdivrs
jo
ds
mov
xchg
test
xorb
or
rcrl
aad
sub
in
loope
shr
or
das
mov
fstpt
jb
add
ds
mov
jo
mov
addr16
test
mov
cmp
lret
rorb
fsubrl
test
out
add
ds
xchg
jb
lods
clc
mov
fadd
sub
subb
stos
inc
mov
loope
insb
mov
les
mov
out
loopne
jbe
push
cmp
push
mov
fistpll
pop
inc
or
or
mov
fisttpl
fcompl
lret
xchg
pop
daa
adc
aam
adc
nop
xchg
dec
scas
xchg
push
push
aaa
pusha
xor
dec
push
addb
cmp
sub
ror
in
and
loop
sbb
jmp
push
jno
mov
adc
fildll
test
arpl
inc
stc
jns
nop
lods
ret
int
in
divl
cmp
lds
push
in
dec
js
iret
ja
js
shrl
inc
bound
movsb
jbe
and
xchg
pop
xchg
int
cmp
jbe
fsubrl
mov
adc
adc
mov
popf
inc
cltd
cmpsl
xor
popl
mov
mov
sub
pop
jnp
sahf
cmp
pushf
stos
push
enter
pop
jg
push
lods
out
dec
gs
les
sbb
pop
jns
pop
nop
pop
xor
js
sar
jp
pushf
sbb
cmp
sub
sbb
push
dec
jl
pop
xor
jge
jmp
in
xor
sahf
push
jnp
jne
inc
jecxz
scas
mov
cmp
adc
xor
xlat
inc
sub
jl
xchg
jb
mov
cs
daa
and
cmp
cmpsb
pop
and
mov
fs
push
sbb
mov
and
in
je
jbe
fmul
mov
pop
xchg
test
mov
hlt
xor
xor
and
orb
dec
lahf
push
in
fmull
dec
pop
add
cwtl
mov
mov
xorb
xor
inc
mov
out
outsl
mov
test
dec
testb
sub
push
pop
push
imul
mov
out
div
out
rcll
jge
adc
dec
sbb
lock
mov
cmc
jmp
jo
repz
or
inc
mov
jle
test
popl
mov
sub
jne
decl
inc
xor
dec
cmp
pushf
dec
pop
arpl
sub
test
loop
xor
insl
push
repz
lods
cmc
push
push
add
sti
push
les
mov
and
dec
in
xchg
push
jns
lcall
jg
into
jmp
dec
cmp
mov
mov
mov
shr
mov
jne
lcall
xchg
in
sbb
stos
scas
test
jbe
mov
cmc
fsubr
mov
test
mov
cmp
iret
rcr
cmovae
dec
je
outsb
in
mov
jmp
cmp
mov
mov
add
sbb
jae
add
shr
insb
pop
shlb
icebp
cli
pop
push
inc
sbb
push
cs
pushf
or
jge
xor
repz
lods
movb
shll
push
mov
ror
jns
out
xor
jae
xor
sub
xor
lea
int3
adc
outsb
fs
or
movsb
push
imulb
mov
push
sbb
mov
and
sbb
xor
mov
xor
test
xchg
xchg
xchg
mov
xor
fnstcw
jno
inc
clc
and
push
sbb
popa
das
mov
stos
dec
adcl
push
cmc
out
ja
insl
dec
mov
jo
mov
test
arpl
fwait
gs
add
push
adc
mov
sbb
inc
pusha
xchg
fsubr
je
andb
xor
ja
inc
add
xchg
xor
inc
arpl
jl
or
js
pop
jbe
imul
das
mov
into
mov
lahf
icebp
xchg
scas
gs
jbe
int
sub
sub
icebp
shrw
addr16
mov
jne
push
ret
aaa
cmp
inc
sub
ror
mov
mov
mov
out
dec
and
scas
xor
inc
pop
lret
jecxz
mov
ficoml
pushf
insb
and
jbe
xor
mov
shrd
push
xchg
mov
push
inc
sub
sub
cmpb
mov
jmp
int3
int3
dec
push
cmc
aad
lea
mov
ficomps
rolb
scas
xchg
insl
cwtl
cld
nop
ss
iret
shlb
scas
push
xchg
out
push
rcrb
dec
mov
mov
rcrl
mov
fistpll
jo
add
out
jl
pop
in
mov
mov
insb
out
jnp
mov
es
sbb
pop
xchg
mov
gs
stos
rolb
mov
clts
popf
shlb
fsts
lods
and
and
push
mov
out
push
movsl
or
cs
inc
test
cmpsl
add
ret
call
stos
mov
push
mov
arpl
jno
mov
mov
outsl
fisttpll
jae
and
pop
pop
mov
andl
pusha
or
insb
adc
cmp
fmuls
sti
cmpsb
vcvtdq2pd
cmpsb
cmp
push
cld
lea
ficomps
cmp
inc
jge
jae
push
cmp
jg
orb
inc
push
fsubs
push
movl
movl
mov
fchs
pusha
pop
push
push
sub
adc
inc
test
cmp
xor
or
rol
add
pusha
mov
std
xchg
mov
lock
inc
insl
and
pop
pop
pop
movsb
out
out
ds
push
xor
cmp
int3
test
or
add
jge
mov
shl
pop
inc
sub
mov
loope
aaa
sti
imul
popl
mov
insl
out
lret
jnp
test
or
cld
mov
inc
xchg
adc
or
js
lret
test
cmpsl
loope
jmp
mov
lret
or
push
orb
std
in
mov
movsl
out
out
daa
add
jle
inc
mov
mov
es
rorb
stos
sub
jmp
mov
cltd
mov
mov
mov
add
mov
jmp
adc
xchg
fnstenv
cltd
ja
mov
push
sub
subb
or
or
pop
or
in
lahf
bnd
mov
mov
or
das
dec
lret
das
push
les
aam
dec
lods
xchg
push
hlt
in
rol
lods
or
push
fsubs
in
xchg
cwtl
add
pop
imul
mov
in
push
push
add
cmp
loope
jge
int
xor
add
das
addb
movsb
in
jle
inc
adc
test
adc
or
stc
xchg
inc
enter
iret
dec
pop
jbe
xchg
jbe
pop
scas
cmp
xchg
out
push
mov
into
out
in
sub
jl
sti
mov
fnstcw
cmp
out
les
push
add
adc
jge
mov
mov
roll
insl
in
cmpsb
rorb
dec
nop
mov
fs
jno
lods
adc
and
push
xchg
mov
mov
mov
mov
dec
mov
cwtl
data16
mov
dec
pushf
adc
pop
mov
pop
or
scas
sub
xor
out
and
jmpw
xor
sbb
mov
arpl
add
dec
bound
pop
fcmovnu
arpl
mov
imul
jae
mov
movsl
shll
stos
rolb
push
and
cli
xchg
jle
je
sbb
sahf
inc
pop
lods
fwait
in
stos
jmp
insl
mov
mov
xchg
addr16
imul
pop
ss
lock
push
lcall
dec
sub
lahf
pop
and
or
cli
xchg
addr16
loope
mov
cli
ficoml
jno
aas
int
mov
adc
test
dec
subb
mov
or
sbb
xchg
fidivs
sbb
xchg
mov
mov
and
insl
popf
out
sti
sbbl
sarl
das
subl
push
mov
push
fdivr
test
sub
cmpsl
hlt
mulb
fistl
sub
mov
popf
adc
andl
int
insb
jl
out
sbb
jbe
sbb
mov
sbbl
dec
xor
mov
cwtl
out
push
cltd
or
mov
mov
jg
jg
push
xchg
pop
and
push
inc
ret
push
dec
mov
adc
out
push
outsb
lahf
ret
cwtl
ret
imul
inc
cli
popf
pop
mov
into
jo
outsl
mov
lcall
mov
aam
jmp
inc
mov
pop
add
lea
push
sub
sub
cmp
sbb
and
mov
mov
add
mov
and
insl
mov
pop
out
mov
les
ret
push
jge
push
imul
jae
mov
and
mov
in
rcrb
iret
mov
push
push
enter
pop
shl
adc
mov
aam
mov
arpl
mov
pop
incb
ja
cmp
lret
testb
jg
adc
add
aaa
outsl
sub
mov
std
lret
es
ljmp
cmp
xor
outsl
mov
mov
pop
and
scas
mov
push
mov
mov
scas
mov
mov
dec
cmp
jmp
sahf
lcall
pushf
add
adc
movsl
and
sub
xlat
cmc
sbbb
cmp
loop
das
lcall
iret
cmp
xchg
jb
cld
jb
stc
xlat
xor
outsl
sub
mov
mov
mov
xchg
pop
roll
or
aaa
add
pop
int
mov
loopne
mov
addr16
jo
or
or
adc
repz
bound
out
out
xor
testb
idiv
xchg
insb
mov
add
inc
pop
xor
cmpsb
xor
xchg
push
pop
mov
lret
cs
hlt
inc
push
jmp
add
sbb
popf
mov
add
xchg
pop
loope
icebp
mov
and
jno
hlt
jb
in
or
push
ret
push
mov
mov
aam
out
fdiv
mov
pushf
out
lcall
pop
jle
pop
push
out
mov
cmp
das
or
push
mov
add
outsl
lods
call
cmp
movsb
ss
mov
leave
xchg
jno
ljmp
dec
adc
xchg
xor
insb
test
mov
or
mov
mov
dec
pop
sbb
sub
ds
and
pop
pop
ret
mov
push
sbb
arpl
sub
mov
ficomps
enter
imul
sar
or
lahf
fnstenv
inc
orb
test
fisubrl
sahf
xchg
mov
xor
aam
js
and
sub
pop
out
pop
mov
add
pop
sbb
or
cmpsl
hlt
std
jmp
insb
call
push
jecxz
jne
mov
push
push
es
bnd
jg
mov
add
fwait
pop
ret
dec
mov
dec
lock
mov
int3
cli
jle
xor
jne
pop
js
jae
das
xor
mov
jmp
and
cmp
mov
cmc
aam
push
adc
push
mov
adc
xchg
call
sbb
pop
xchg
pushf
out
add
adc
push
mov
repnz
pop
pushw
cmp
loopne
push
lods
icebp
pop
xchg
int3
outsl
ds
in
mov
xlat
lret
jb
sti
inc
push
in
jns
cmp
or
sub
subl
ret
out
mov
push
jnp
pop
mov
cmpsl
divl
inc
mov
mov
std
stos
lods
imul
dec
addr16
sub
int3
sbb
or
cmp
sbb
jns
mov
jge
or
leave
sbb
fidivrs
ficomps
test
mov
fs
add
or
ss
inc
cmp
push
jnp
lea
and
test
inc
sub
jge
xchg
mov
popa
cmp
adc
out
dec
jae
pop
xor
idivl
int
dec
enter
inc
jno
ljmp
cmp
jno
xchg
sbb
mov
push
ja
fiadds
cmpsb
icebp
in
dec
iret
xchg
in
enter
pop
mov
ss
mov
js
mov
mov
mov
pusha
negb
sbb
dec
fs
mov
mov
xor
aam
mov
es
test
aad
sbb
inc
xchg
popa
rorb
ret
cmp
cmp
mov
int
jle
notl
faddl
mov
and
cmp
ret
testl
sbb
leave
mov
sbb
hlt
mov
repz
aas
gs
push
pandn
inc
mov
mov
shl
cmp
pcmpgtb
mov
faddl
jbe
xchg
loope
stos
shl
xor
jmp
call
sbb
aam
xor
leave
decl
enter
cmpsl
inc
push
push
dec
outsl
push
inc
and
fstpt
sti
inc
loope
or
mov
arpl
inc
inc
sbb
scas
call
lahf
pop
xor
adc
xor
jnp
mov
cmpl
iret
popf
pop
jb
or
fwait
rclb
scas
mov
popa
in
scas
cmc
cmp
cld
repnz
popf
loopne
dec
adc
cmpsl
xlat
jnp
jp
cmp
pop
scas
xor
lret
xor
rolb
in
add
repz
aam
mov
insl
pop
ss
rcrl
out
or
push
sub
les
jno
mov
das
rcll
pop
and
sbb
push
add
cmp
cmc
or
mov
inc
test
inc
lret
stos
mov
xor
pop
xchg
push
nop
scas
push
cmp
fstpl
imull
repnz
jbe
hlt
sub
add
xchg
push
cmp
and
das
loop
call
andl
cmp
mov
mov
inc
popf
fistpl
lret
mov
das
or
ja
imul
bound
scas
adc
add
and
int
lea
dec
sbb
in
rclb
sti
popa
mov
cwtl
fucomi
push
adc
fldt
lahf
adc
jge
inc
fwait
insl
fwait
add
xlat
mov
xorb
insb
cli
clc
out
cmc
scas
xor
hlt
clc
xor
pop
jecxz
insb
push
lahf
inc
pop
cmp
push
roll
mov
sti
testl
push
mov
ds
dec
push
pop
cmp
mov
call
push
cld
jno
call
pop
inc
stc
or
sub
lds
rcl
dec
xor
adc
or
adc
rclb
and
incb
jnp
ss
fisubrs
je
gs
inc
xchg
subb
inc
or
dec
pop
mov
out
loopne
imul
aam
push
subl
push
jp
and
shll
cmp
nop
es
loopne
xor
arpl
push
aad
and
ja
push
iret
cmp
mov
lret
push
push
shlb
pop
loope,pt
popa
push
imul
pusha
xor
jo
std
cmp
arpl
subb
cs
stos
or
imul
fldl2e
mov
pop
in
bound
sub
dec
out
loop
mov
jg
sub
dec
in
dec
mov
xor
mov
xchg
or
in
pop
adc
nop
or
cmp
cmp
fs
xchg
push
popf
sub
or
mov
pop
sub
rorl
sub
gs
dec
imul
lret
cli
movsb
mov
xchg
and
xchg
repz
out
je
xchg
mul
sbb
jmp
adc
push
adc
jbe
push
mov
push
sahf
testl
cmpsb
daa
inc
cmpsl
lods
xchg
mov
pop
incl
sbb
mov
jge
in
sbb
movsl
jl
in
mov
movsb
sti
stc
arpl
ret
pushf
push
cmp
xchg
btsl
pop
pop
mov
lahf
loope
addr16
or
outsl
adc
dec
hlt
or
leave
je
pop
push
orb
test
pop
xchg
outsb
test
aad
adc
mov
cmc
or
repz
test
repnz
mov
xchg
aam
mov
icebp
mov
adc
lahf
fidivrs
in
inc
int
jge
and
sub
lret
sub
pop
aas
cltd
dec
shrl
adc
mov
aam
out
push
arpl
pop
loopne
push
jp
sbb
outsb
xchg
adc
mov
add
push
xchg
movsl
insl
dec
jnp
nop
mov
ja
cmc
cmp
jae
test
int
sbb
into
pop
inc
testl
and
loop
inc
and
aam
sbb
sbb
adc
fisubl
cmpl
mov
cmc
sub
rol
cmc
movsl
hlt
fwait
jl
add
enter
and
jne
cmp
inc
je
or
js
dec
push
mov
aam
push
xor
ret
shlb
bound
cmp
in
mov
mov
pop
sti
adc
sbb
cltd
jb
outsl
addr16
pop
out
mov
adc
and
cld
aad
subl
jg
popa
push
xor
popa
addr16
xor
and
adc
mov
jge
scas
pop
mov
cmc
ja
xlat
mov
mov
outsl
xchg
enter
shll
mov
cltd
sub
in
mov
inc
push
mov
bswap
jne,pn
cmp
sbb
adc
mov
outsb
jg
mov
dec
insb
push
ds
loope
rcrb
pusha
lahf
push
cmpsb
dec
dec
mov
mov
mov
ds
xchg
lds
mov
inc
and
jno
inc
shr
inc
pop
testb
adc
ds
push
and
add
faddl
repz
fimuls
outsl
add
jmp
xchg
je
std
push
nop
test
ficomps
stos
in
or
pop
outsl
and
pop
rcrl
xor
pop
mov
lods
fs
cmp
insl
mov
mov
mov
jb
jg
push
cmp
out
dec
imul
stos
std
inc
lea
dec
sub
push
dec
sub
mov
popa
inc
loopne
mov
sbb
push
xor
cmp
mov
lret
inc
mov
popf
loope
rorl
arpl
into
pop
icebp
insl
sub
fbstp
push
jmp
push
adc
mov
add
push
or
push
pop
sti
cmpsb
inc
rorl
and
fnstcw
mov
aas
cmc
lea
ret
roll
sbb
daa
ret
fcmovnb
pop
loope
cmc
int3
sub
imul
aam
jnp
push
repnz
xlat
inc
jbe
jns
cmpsb
sub
dec
inc
test
mov
aad
inc
cmc
jnp
out
xor
xor
mov
mov
lret
dec
insl
into
int3
cmp
sub
or
aaa
cli
fldt
fldcw
jmp
ja
inc
mov
outsb
aaa
scas
xchg
sub
cmp
movsl
repz
into
jge
movsl
lcall
sub
mov
in
ss
in
xor
add
pop
icebp
mov
loop
cwtl
mov
ljmp
mov
sbb
imul
imul
test
ret
movsl
ljmp
fisttpll
push
jns
pop
movsl
nop
andps
add
insl
in
test
pop
scas
movb
cmpsl
lock
inc
inc
dec
scas
xchg
cmp
jb
out
lahf
repnz
inc
push
insl
out
stc
xchg
sahf
jae
sbb
jle
mov
mov
sbb
inc
xchg
jno
mov
xchg
xor
testl
hlt
jge
aas
xchg
sub
movsb
push
xorl
stc
pushf
stc
inc
jl
aaa
or
xor
out
nop
push
sarb
dec
or
out
sub
jne
push
in
scas
inc
or
add
xor
and
pop
pop
cmp
sub
stc
fidivs
jae
into
mov
in
imul
pop
frstor
jb
cmp
mov
sti
clc
add
and
inc
lret
push
dec
int
pop
int
mov
rolb
scas
out
rsm
test
jno
leave
sub
adc
std
icebp
pop
popf
add
sti
mov
loope
icebp
xchg
cli
insl
or
aas
shl
xchg
fldl
dec
cmpsl
arpl
jge
dec
lods
push
push
loopne
mov
mov
rdmsr
mov
sub
push
mov
inc
pusha
negb
fadds
inc
pop
dec
orl
loopne
lret
sbbb
xor
dec
mov
aam
out
adc
out
sub
ss
mov
push
xchg
imul
rcr
sub
jae
arpl
shl
adc
negl
cmp
inc
push
jbe
ja
repnz
fisttpll
push
dec
xor
and
mov
jbe
inc
jbe
cs
jbe
mov
fnstcw
xchg
jecxz
pop
movsb
pop
cld
imul
push
dec
and
jbe
xor
jnp
or
rcll
sbb
cmp
lock
inc
mov
loopne
or
xchg
cmpsb
cmpsl
lods
xor
sti
notb
out
push
fcoml
mov
add
adc
fldenv
pop
fdivrs
mov
dec
xor
pop
jns
outsl
mov
dec
adc
jb
aaa
mov
cltd
push
mov
adc
push
inc
add
add
outsb
int3
sbb
jmp
push
vmread
clc
xchg
mov
andl
std
push
jo
cmpsb
add
fwait
rolb
xchg
lcall
or
inc
sbb
fwait
bswap
pusha
jge
les
cmp
sub
jmp
imul
jne
or
mov
shr
or
or
push
mov
cmp
das
and
push
addl
pop
daa
xor
dec
int3
xor
xchg
sarb
xchg
imul
dec
cwtl
xor
js
xor
inc
dec
out
insl
adc
jns
cmpsl
sub
in
lods
xor
add
cmp
inc
int3
ret
mov
or
xor
ss
mov
into
or
and
add
movsl
push
lahf
shlb
arpl
mov
leave
ret
daa
rorb
rorb
cmp
ja
int3
cmpb
mov
rcrb
popa
pop
pusha
fistl
gs
cli
xor
cmpsl
dec
cmp
jecxz
sub
add
adc
lods
popf
inc
repnz
mov
out
call
cmp
test
mov
into
mov
or
mov
jbe
and
xchg
fsubl
mov
out
mov
mov
call
stos
test
mov
sti
sub
aad
out
push
inc
push
mov
imul
hlt
sbbl
add
fsts
inc
ljmp
inc
sub
push
xlat
data16
and
loop
sbb
dec
jne
pop
and
or
in
and
andl
les
add
jle
mov
test
test
icebp
mov
jmp
out
stc
movsb
dec
decl
pop
mov
sbb
test
int
fcomp
icebp
pop
pop
dec
mul
sbb
sbb
jle
std
or
inc
xchg
push
shr
cwtl
mov
stos
mov
subb
xor
lock
push
dec
xchg
int
rolb
pop
pop
sub
mov
xor
rcrb
xor
dec
mov
adc
dec
mov
xchg
lods
push
xor
pop
cmp
das
jecxz
pop
cmp
testb
mov
test
xchg
pop
roll
mov
cli
adc
cmp
fdivr
mov
inc
adc
xlat
mov
or
insb
test
or
outsb
movb
lret
push
mov
pop
dec
femms
inc
in
cmp
sub
push
imul
sub
insb
xchg
inc
sbb
enter
adc
outsb
fs
xor
jb
push
and
or
dec
in
mov
sti
push
pop
cli
int
or
pop
ss
xchg
and
lea
sbbb
sahf
dec
fsubl
out
lea
mov
dec
stos
xor
sbb
cmp
jo
push
pop
mov
leave
cmp
push
mov
adc
lds
iretw
xchg
mov
ds
aaa
pop
lahf
xor
gs
jne
or
lcall
or
cmp
pop
cmp
and
orb
push
add
pop
pop
lret
insb
in
stc
inc
lahf
mov
mov
mov
push
xchg
adc
iret
decb
mov
cmpsl
inc
sti
test
enter
bound
data16
jecxz
mov
rclb
into
inc
pushf
cmp
xor
rcll
dec
pop
xor
gs
inc
xlat
out
addr16
jge
fs
ja
mov
int3
xchg
mov
jmp
les
imul
pop
rorb
sti
push
fdivrs
loop
daa
sbb
cld
inc
dec
mov
mov
mov
xchg
popa
je
pop
punpckhdq
push
fcoml
mov
xlat
pop
icebp
out
dec
pop
aaa
dec
andl
add
xorb
adc
mov
cmp
cld
into
adc
mov
stos
mov
inc
mov
addr16
sbb
adc
in
adc
stc
lret
xlat
and
ss
inc
mov
mov
xchg
movsl
push
mov
dec
cmpl
inc
cmp
inc
xlat
sahf
in
mov
call
int3
xchg
pusha
jb
movsl
int3
lods
dec
push
test
imul
add
mov
xchg
cwtl
mov
aam
in
stos
repnz
and
movb
push
cmp
pop
stc
xlat
push
out
dec
insb
inc
in
aas
push
std
or
outsl
cmpsb
push
xchg
jb
or
leave
je
and
dec
adc
call
pushf
dec
mov
stos
aaa
das
out
push
mov
xchg
push
pop
rclb
mov
xchg
xchg
add
fadds
sti
cmp
push
insl
cwtl
daa
hlt
mov
repz
mov
adc
in
xchg
lahf
push
inc
jno
adc
xor
mov
push
out
inc
ficompl
and
in
popa
outsl
dec
add
dec
pop
ja
mov
dec
movl
lock
xchg
cmp
mov
loop
add
pushf
dec
xor
jmp
jmp
xor
je
in
pop
test
cmp
movsl
inc
push
loopne
jecxz
dec
mov
repnz
sahf
inc
ret
movsl
leave
and
jb
sub
lea
pop
xchg
test
call
stos
in
cmp
out
xchg
xchg
mov
add
add
jno
jo
jae
lret
js
out
mov
stos
clc
pop
jno
insb
sahf
insb
jae
sub
push
jne
sub
ljmp
lcall
int
adc
cwtl
dec
test
sbb
add
add
xchg
insb
xor
pop
lea
mov
aas
sbb
mov
aaa
repz
jmp
arpl
iret
stc
jmp
and
jno
lcall
iret
lret
insl
sbb
or
imul
mov
les
ja
xchg
xor
icebp
popf
aad
dec
dec
jnp
mov
testb
or
xchg
in
push
cli
cmpsl
xchg
push
jne
jmp
clc
mov
mov
sti
push
lea
mov
lcall
nop
dec
or
imul
je
lock
fisubs
or
jns
jle
and
add
xchg
mov
lcall
jae
cmp
mov
mov
lods
mov
push
aas
jnp
jmp
mov
iret
sbb
ljmp
xchg
fwait
mov
cmpsb
push
jb
push
fdivrs
stos
roll
sbb
fs
xchg
add
sbb
stc
nop
stos
repz
dec
dec
cwtl
push
dec
nop
cmpsl
pop
in
mov
or
test
pop
fwait
cli
lea
enter
scas
lret
cmp
bound
pop
in
daa
mov
jge
loope
mov
push
mov
push
sti
mov
jp
fmul
jg
loop
sbb
movsl
pop
mov
adc
add
insl
loope
mov
xlat
pusha
mov
popf
clts
idivl
pusha
aam
adc
test
test
out
cwtl
jmp
and
test
or
pop
jle
inc
inc
dec
das
cmpsl
xchg
cmp
inc
into
ds
fwait
shl
fsub
adcl
pop
scas
mov
daa
jb
jge
xor
push
adc
jl
stos
inc
dec
push
fsubr
cmp
lea
stos
fsubr
stc
icebp
adc
push
push
scas
pushf
push
es
rol
push
hlt
leave
push
and
imulb
pop
out
icebp
sbb
push
push
test
enter
or
data16
and
push
aaa
cli
dec
mov
loop
dec
loopne
cmp
data16
sub
gs
jo
mov
mov
dec
jg
adc
test
sub
and
lret
lret
leave
xchg
add
mov
pop
inc
jns
jno
sub
movsl
out
sbb
xlat
and
pushf
sub
push
movb
call
imul
push
xchg
dec
ds
outsb
inc
mov
mov
test
jle
sbb
jo
pop
test
add
dec
rcll
jnp
jp
add
xor
cmpsb
icebp
sub
ror
sub
daa
or
mov
out
cmp
mov
mov
sbb
cmpsb
lea
fnsave
pop
inc
sahf
fdivrl
mov
imul
cmp
xor
inc
orb
shlb
cmp
adc
or
or
popf
add
lods
xchg
xchg
ret
daa
insl
inc
xor
lcall
dec
jnp
shrl
les
push
jnp
or
push
mov
stc
test
ljmp
scas
popf
xor
enter
jl
push
enter
xor
insl
xor
mov
fnsave
lret
sub
push
mov
dec
mov
xchg
mov
mov
xchg
xor
insl
sahf
xchg
mov
jo
frstor
orb
sub
or
repz
icebp
pop
mov
das
das
xchg
daa
cmp
out
xlat
stos
cmp
int3
xor
mov
pushf
std
adc
sub
mov
xor
loope
mov
mov
sarl
or
jns
or
inc
cmpsl
dec
pushf
popa
xchg
jno
cli
ror
inc
gs
cmpb
cmc
daa
adc
leave
push
lock
hlt
jp
test
sti
je
int
fstpt
or
xchg
pop
push
push
inc
gs
std
xchg
fistps
loopne
test
jle
or
xchg
ja
mov
jp
xchg
sarb
xor
push
cmp
mov
ret
cmp
popf
dec
je
lret
push
mov
or
inc
xor
movsl
jbe
ss
iret
pop
xchg
sub
xor
pop
repnz
icebp
adc
dec
pushw
test
mov
push
mov
xchg
pop
push
sti
shlb
pop
nop
test
mov
sub
lods
jecxz
and
xchg
mov
push
adc
dec
push
test
adc
movsb
jae
js
sub
cwtl
xor
hlt
ds
mov
inc
data16
stos
pop
xor
jb
jg
sub
or
sbb
push
mov
mov
ficoml
xchg
stc
inc
cmp
jle
sbb
repz
and
loope
hlt
incl
xchg
cmp
imul
add
jbe
mov
sub
sbb
movd
inc
int3
mov
mov
dec
js
xchg
aas
xchg
shrl
sbbl
xchg
dec
lcall
sti
hlt
push
push
mov
cli
outsb
fucomi
inc
jae
add
rorb
add
das
cmp
jp
inc
xchg
sub
mov
sbb
push
push
xor
ja
add
jbe
mov
sub
sub
jmp
add
mov
sti
shll
mov
push
ss
mov
mov
mov
mov
out
jnp
mov
pop
jno
imul
pop
xchg
insb
pop
arpl
cmp
add
push
xchg
mov
cmp
mov
ret
outsb
mov
out
jg
xchg
dec
jl
mov
xor
and
mov
pop
fst
leave
mov
fcmovbe
xor
mov
mov
inc
lahf
mov
cmp
in
push
cmp
fisttps
and
stc
das
outsl
xchg
jmp
out
roll
mov
out
pop
popa
or
cmpb
adc
and
scas
mov
addr16
mov
test
imul
jo
test
pushf
or
clc
fldcw
jb
pop
sti
je
inc
call
inc
imul
jb
dec
insl
faddl
mov
mov
jle
dec
mov
fcmove
ret
jae
jmp
pop
fadds
cs
mov
push
sub
adc
push
or
jle
dec
pusha
bnd
pop
cmp
cmpsb
adc
jns
aaa
mov
jg
mov
pop
dec
enter
loopne
jp
lock
std
pusha
scas
pop
fisttpll
push
push
jge
adc
adc
dec
insl
jg
loopne
fstl
or
jne
sub
arpl
ss
popl
mov
mov
jecxz
aas
mov
dec
rcll
loope
cltd
jmp
mov
mov
pop
jae
testb
mov
lock
xor
cmp
call
loopne
jno
mov
mov
sbb
sub
loop
pushf
pop
in
sbb
add
jg
and
mov
cmpsb
mov
or
adc
int
jae
push
push
fcmovnbe
loope
cltd
mov
xor
mov
push
test
jnp
push
sti
add
jecxz
jle
scas
nop
dec
insb
push
inc
push
iret
test
push
aaa
in
daa
icebp
mov
loopne
mov
sub
cmpsb
sbb
lahf
movsb
fstl
mov
test
fisttps
mov
push
in
and
sub
das
subb
daa
or
test
cld
aas
outsl
xor
push
mov
in
push
push
mov
push
std
add
jno
cld
add
or
inc
lcall
aaa
xor
jmp
out
lods
out
cmp
loope
scas
lods
mov
in
xor
in
sbb
sbb
fs
ljmp
cmc
in
leave
and
mov
inc
jmp
or
lods
mov
ret
jno
ffree
insl
shlb
sahf
jmp
in
push
aam
dec
sub
add
push
mov
push
and
cmp
push
mov
xchg
push
inc
je
adc
jecxz
rclb
push
push
inc
pushf
mov
jl
pop
xor
in
icebp
sub
inc
fidivrl
repnz
sar
cmp
cltd
pop
test
push
pop
dec
sahf
jbe
lods
mov
sub
mov
mov
xchg
addr16
cmpsb
jb
pop
xchg
mov
mov
int
jle
lahf
data16
shl
rol
ret
call
inc
dec
aam
cmp
ljmp
imul
insb
divl
sbb
sbb
rorb
xchg
scas
push
decl
inc
xor
xchg
loop
xor
pushf
pop
inc
xchg
adc
idiv
mov
hlt
sar
dec
push
jbe
fs
mov
mov
mulb
sahf
inc
mov
repz
in
js
sbb
and
jl
adc
loope
lcall
iret
adc
pop
in
rcr
xchg
pop
mov
add
jle
sub
adc
mov
jge
adc
mov
es
adc
sub
inc
dec
decl
hlt
sub
cwtl
test
dec
mov
jmp
popl
push
arpl
cmpsl
int
sbb
push
fcom
inc
jae
push
mov
adc
add
jecxz
push
leave
scas
sahf
push
ret
lret
popf
andb
sub
jl
mov
mov
into
xchg
sbb
ficomps
push
daa
test
sub
add
aam
jno
cmpsb
in
aam
les
push
imull
repnz
cmp
cltd
pop
pop
sti
aad
popa
dec
jno
nop
mov
ret
cs
out
inc
or
das
into
leave
mov
es
push
repnz
push
pushf
add
mov
outsb
gs
test
mov
jbe
rcrb
jge
ret
lock
mov
icebp
fldenv
js
enter
call
daa
add
xchg
je
sub
xchg
xchg
push
out
cmp
mov
sub
sbb
or
aaa
sbb
into
lahf
push
push
cltd
mov
cwtl
jae
in
and
or
jecxz
fbld
shlb
nop
inc
in
inc
xchg
rcl
push
iret
mov
cmp
push
ja
xchg
jae
cmp
cs
dec
mov
jb
hlt
mov
jb
xor
cmc
cmp
push
cmpb
movsl
pop
pop
dec
xor
xor
add
xor
push
mov
test
out
loopne
push
insb
cmp
loope
xor
push
or
inc
or
sbb
xor
inc
aaa
in
cltd
sub
mov
popa
lds
fcompl
dec
jge
inc
fwait
xor
jb
pusha
hlt
inc
cmp
mov
mov
repz
mov
jo
scas
pop
adc
cmc
outsl
mov
insl
push
call
lret
push
xlat
nop
xchg
shlb
add
nop
in
adcb
ja
clc
xchg
sbb
ds
add
fdivp
movsb
in
sbb
mov
sub
adc
xor
cs
aad
or
jg
adc
dec
push
fs
cli
cltd
rcll
add
cmp
pop
pop
mov
mov
or
push
stos
loopne
cwtl
fcomps
in
sbb
pop
jle
imul
xchg
test
dec
leave
lods
outsl
sbb
mov
cmc
ja
outsl
out
or
mov
repnz
iret
mov
pop
iret
addr16
lods
push
fwait
sub
dec
mov
mov
leave
je
inc
adc
add
loop
repnz
jg
and
push
fucom
or
or
outsl
xor
add
sbb
icebp
jno
mov
mov
dec
ret
fldcw
movsb
out
push
rep
pop
outsb
sbb
xchg
test
aas
incb
xor
pop
adc
push
cmc
pop
mov
cwtl
fsub
mov
test
xchg
xor
ljmp
push
pop
fnstcw
add
popa
adc
or
in
arpl
loope
mov
pusha
jne
into
dec
cmp
cmp
test
sub
jle
xchg
pop
scas
and
loop
cwtl
pop
icebp
fcompl
mov
xchg
mov
in
dec
outsl
movsl
pop
lods
inc
cmpsb
cwtl
nop
stos
or
stos
mov
adc
xchg
dec
mov
adc
dec
jle
xchg
xor
inc
outsb
xchg
mov
shrb
xor
jns
jbe
jns
mov
dec
inc
subb
outsb
neg
imulb
outsb
cmc
adc
dec
idivl
jl
enter
outsb
mov
inc
sbbl
in
popa
xchg
imul
into
and
xchg
fiadds
or
fucomip
xchg
imul
loope
cmpb
inc
mov
hlt
xchg
ja
test
mov
int3
lock
sbb
jnp
fdivs
or
push
das
sub
outsb
bound
mov
clc
sahf
test
xchg
mov
fcomip
outsl
push
addr16
lods
andb
pop
mov
xchg
lods
xchg
movsl
add
adc
sub
insl
loop
pop
sbbl
jp
insl
call
add
in
add
mov
pop
add
adc
push
cmc
dec
insb
xor
dec
clc
nop
test
les
sbb
icebp
fstpl
icebp
lahf
in
shll
cld
cmp
lds
or
mov
push
sub
mov
in
mov
divl
lret
cmc
push
mov
inc
xchg
inc
into
and
mov
faddl
cmp
stc
filds
xor
in
popf
out
xchg
jnp
pop
std
aas
jl
cmpsl
std
into
and
dec
pushf
xor
ja
roll
ret
lds
mov
cmp
sub
ss
mov
ret
scas
fcomps
insl
dec
jns
pushf
mov
mov
cmp
cltd
inc
sarb
jle
and
out
jns
roll
ja
cmp
xlat
fldt
xchg
clc
mov
mov
sbb
cmc
nop
out
lock
aam
pop
nop
mov
push
or
push
sbb
mov
fcompl
pop
add
mov
inc
shlb
in
xchg
sbbb
adc
lods
lods
mov
mov
mov
daa
in
fwait
jb
sti
fucomi
jmp
xchg
test
and
dec
scas
sub
mov
xchg
sbb
cmp
push
or
push
outsl
fiaddl
jb
lcall
in
push
or
pop
ljmp
cmpb
mov
cli
push
lods
ud1
hlt
jl
dec
stos
je
inc
out
xchg
ja
loopne
sarb
leave
mov
fucomi
mov
sub
testb
dec
enter
loope
in
lds
aaa
mov
pop
pop
push
push
push
mov
inc
jle
and
inc
ret
pop
lahf
int3
and
pop
pop
dec
xor
subb
jmp
into
outsb
pop
iret
test
pop
xor
pop
xchg
jnp
add
or
mov
dec
jbe
or
jecxz
popf
pop
or
cmp
andb
xchg
pop
pop
imul
cmp
pop
cwtl
mov
xchg
or
ljmp
xchg
sahf
cli
sbb
insl
xchg
iret
sub
imul
add
xor
xchg
shlb
rol
enter
ds
icebp
push
pop
dec
pop
or
out
lret
fwait
call
xchg
sub
in
mov
scas
lods
shrb
fcoms
or
mov
xor
cs
cltd
stc
cwtl
out
mov
push
xor
lret
in
jmp
movsb
inc
mov
mov
mov
xchg
xchg
jae
je
dec
imul
sbb
sbb
pusha
das
in
lcall
cld
push
test
jne,pn
or
es
inc
test
jl
mov
sti
xor
mov
ret
xchg
or
cltd
dec
addl
add
pusha
adc
leave
orb
cmc
stos
mov
mov
mov
push
mov
lea
jo
mov
rolb
jl
imul
and
sbb
or
lret
outsl
dec
jbe
push
mov
xchg
dec
ljmp
sub
je
vmread
mov
xor
jae
adc
nop
add
stc
lahf
imul
sub
gs
movsb
lahf
leave
mov
pushf
sbb
push
js
mov
cmc
pop
jg
pop
scas
jo
out
sub
jb
lods
jne
pop
gs
xchg
sti
and
or
outsl
mov
mov
lock
xchg
ljmp
or
dec
jbe
hlt
imul
inc
and
imul
jle
jp
dec
mov
inc
pop
push
lods
cmc
push
sub
cmp
jmp
fnstcw
mov
jmp
mov
xor
xor
xor
aad
inc
aam
mov
sti
in
or
test
stc
mov
insl
clc
or
sbb
jb
imul
xor
inc
outsb
sbb
add
mov
push
xlat
cltd
cmp
or
scas
mov
jmp
xchg
or
inc
jge
xchg
dec
cmp
mov
in
jg
and
cmpb
jns
mov
xor
adcl
sbb
scas
pop
out
cld
push
jo,pt
test
cmp
adc
xchg
sub
cmpsb
lret
cs
int3
add
jo
push
popf
jg
insb
adc
frstor
pusha
push
add
sti
mov
sbb
mov
loop
push
mov
and
es
fs
bnd
sbbl
mov
in
rolb
mov
pop
dec
mov
pop
adc
mov
xchg
xor
test
fstpl
sti
dec
push
in
lock
aas
jg
pop
sbb
divl
sub
xor
pop
cwtl
push
int3
faddl
mov
test
inc
fcomip
inc
push
ds
cmc
jns
gs
mov
fsubrs
shll
cs
pslld
aaa
hlt
adc
or
push
out
out
adc
adc
jno
mov
sbb
mov
jge
into
shrl
push
dec
cld
sbb
out
sbb
or
out
ret
je
inc
fildl
out
inc
fdivrs
pop
repz
movsl
adc
aaa
jge
scas
test
das
xchg
sbb
cmp
pop
pop
test
popf
mov
mov
adc
jle
inc
jb
sub
into
cld
xchg
nop
pop
add
or
fnstenv
cmpsb
lock
cmp
je
ss
daa
cmpsb
push
shll
mov
jno
mov
cli
rolb
mov
es
sbb
call
adc
aam
lods
jb
stos
mov
jmp
xchg
paddw
call
outsb
clc
adc
cmp
mov
xor
test
push
jp
xchg
mov
jno
or
xchg
or
test
jae
fildl
iret
cmp
cmp
adc
jbe
cmp
mov
negl
jl
inc
xchg
orl
outsl
dec
add
out
arpl
xchg
into
jge
divb
fsubs
push
inc
popl
add
outsb
jo
jg
test
iret
out
push
cltd
dec
jo
das
cmp
movsl
or
dec
adc
sbb
sbb
sub
push
sub
inc
mov
inc
fisttpl
pop
add
jg
mov
je
jne
xlat
andb
or
push
cmp
in
sub
or
or
in
testl
sub
and
jmp
rol
add
jg
xchg
repz
and
ja
jle
inc
scas
mov
add
pop
inc
sbb
push
or
add
adc
dec
mov
dec
adc
jl
lods
cld
add
and
das
mov
push
cmpsl
sub
lods
mov
xchg
jge
inc
jo
cmp
cld
jo
sub
sbb
daa
outsl
push
test
inc
jb
popf
outsb
sbb
leave
inc
jb
out
shl
cmp
push
xchg
clc
or
out
sub
add
cld
jg
lods
das
dec
sti
adc
cmpsl
imul
outsb
out
adc
jne
out
stos
cmp
xor
adc
mov
lret
gs
jmp
hlt
xor
add
mov
imul
sbb
jno
imul
jp
xchg
pop
and
add
insb
xchg
adc
addr16
cmp
leave
push
mov
pop
pop
sub
movsl
sub
imul
mov
or
push
arpl
cmpsb
fwait
sbb
daa
inc
inc
std
aaa
fnstsw
cmpsl
pop
cmp
test
mov
lahf
mov
push
dec
scas
fistpl
cs
mov
push
loope
jge
dec
dec
inc
pop
lcall
outsl
imul
pop
or
dec
outsl
push
mov
std
sbb
adc
push
stc
or
sbb
in
push
ss
xchg
popa
icebp
adc
sub
dec
ja
ljmp
adc
scas
daa
mov
jle
loope
sub
push
scas
or
lahf
shll
mov
sti
xor
xor
leave
inc
shrl
dec
add
xchg
stos
cmp
test
pushf
test
cmpsl
jns
repnz
add
pop
shll
mov
jle
call
dec
lds
cmpsl
pop
sti
xor
pop
cltd
mov
lcall
loopne
xchg
mov
mov
jbe
mov
fiaddl
dec
nop
mov
jns
sbb
mov
iret
add
addr16
or
fwait
pop
aas
push
fs
push
add
xchg
rcll
daa
sarl
out
into
ds
inc
xchg
aad
aad
jo
sbb
mov
in
add
daa
in
lea
fsubl
push
mov
jp
add
and
inc
int3
ds
and
cmp
popf
mov
out
jne
jle
xchg
ret
cmpsb
xor
in
data16
insl
gs
cmp
enter
dec
std
push
add
repnz
xchg
daa
dec
arpl
cmp
add
pop
shrd
cmp
nop
aam
ror
push
fwait
shl
cmp
mov
mov
std
mov
cld
or
cli
jno
movsl
flds
dec
cli
call
jmp
dec
mov
sbb
int
push
lock
inc
cmpsl
mov
fucomip
cmp
push
mov
mov
rcrb
pop
pop
sub
in
xlat
cmp
in
inc
xchg
les
loopne
mov
sub
mov
mov
bound
addb
xor
xchg
fxch
mov
mov
dec
movsl
pop
or
mov
cwtl
inc
int
ret
test
cli
mov
jns
or
mov
inc
add
xchg
sub
mov
ret
push
add
insb
push
jge
cmpsb
jbe
xor
flds
xchg
ss
sbb
repnz
or
sub
popa
adc
mov
ficoml
or
test
fiaddl
mov
jae
sub
jp
xlat
inc
sbb
mov
sbb
imul
cs
test
std
sbb
es
xor
sbb
lock
or
or
or
push
add
jge
lods
pop
jge
cmp
xlat
pop
xor
pop
push
in
iret
xchg
cmpsl
push
mulb
sar
jno
out
sbb
xchg
clc
sub
aam
sbbl
sbb
inc
movsl
and
push
sbb
xchg
lods
fadds
or
push
repnz
pop
cmpsb
outsb
xchg
mov
xorb
neg
js
cltd
mov
add
xor
lret
fwait
popa
pop
je
push
fimuls
arpl
in
lods
mov
shrl
cmp
xchg
std
pop
mov
outsl
call
sti
sti
scas
mov
jge
rcr
and
cmc
xor
or
inc
push
adc
mov
test
sahf
sbb
or
mov
pop
add
jo
jle
xchg
and
jne
adc
loopne
jp
push
mov
pop
ja
xchg
imul
mov
cwtl
lock
mov
dec
pop
inc
fcompl
movsl
add
mov
das
frstpm(287
mov
cmpsb
hlt
or
jle
add
xchg
xor
cli
inc
xchg
es
cld
movswl
rcl
insb
fstps
mov
pop
xor
icebp
jnp
sbb
data16
or
sar
icebp
mov
and
popf
push
push
int3
jo
mov
fsubrp
lcall
fcompp
popf
xor
jle
fisttpll
pop
cmp
dec
or
xor
xchg
fidivrl
lea
ds
nop
loopne
mov
popf
mov
scas
pop
mov
push
or
sub
mov
sahf
jmp
xchg
xchg
bound
hlt
lds
mov
dec
mov
test
scas
push
bndstx
loopne
xchg
clc
dec
push
stc
push
imul
pusha
fcmovnb
iret
jae
movsl
add
jns
or
pop
mov
ljmp
cmpsb
fchs
xchg
notb
push
push
test
sbb
jne
sbb
xchg
jbe
dec
cli
enter
cs
jp
xchg
push
mov
ficoml
mov
scas
enter
cltd
push
or
enter
pop
shlb
and
jne
pusha
mov
and
pusha
pop
insl
pop
data16
xor
add
fisubs
jno
inc
push
xor
jge
jno
push
sub
mov
int3
gs
mov
mov
scas
adcl
jmp
mov
sbbl
popa
mov
test
cwtl
daa
jno
adc
or
jge
inc
xor
in
lret
lods
aas
xchg
push
out
jle
nop
scas
push
jnp
fs
stos
mov
movsb
movsl
and
sti
cmc
clc
jle
test
aad
xlat
jo
xor
lds
outsl
inc
test
sahf
or
lcall
setg
pop
cmp
icebp
sub
inc
adc
mov
push
or
mov
jp
mov
jmp
jg
mov
bound
lret
test
sub
or
adc
lea
imul
jno
inc
jg
scas
sbb
scas
mov
dec
shlb
loope
mov
cmovs
out
push
cld
inc
dec
xlat
arpl
xchg
addr16
stos
sub
sub
jmp
ds
je
sub
imul
or
gs
in
scas
lcall
and
mov
fistl
ficomps
jae
pop
add
outsb
cmc
pop
in
inc
fldenv
lcall
in
xchg
lret
rclb
mov
inc
jp
push
rol
inc
mov
cwtl
pop
dec
dec
bound
sub
adc
push
add
ljmp
jp
imull
push
lods
xor
cwtl
push
cmp
mov
push
stos
add
fisubs
pop
fcompl
push
xchg
inc
ds
clc
and
pop
shlb
jl
rorl
fstpt
push
int3
mov
sub
mov
sbb
orl
sbb
cmp
jle
cmp
push
insl
pop
xchg
cmp
add
fmulp
and
or
pop
adc
add
icebp
push
jle
in
xor
outsl
push
int
andb
push
data16
xchg
js
jmp
or
jno
sub
jg
add
adc
mov
inc
adc
mov
mov
ljmp
push
icebp
jge
repnz
mov
mov
dec
inc
sub
cmp
adc
movsb
push
loopne
mov
das
mov
xchg
jge
mov
cmp
shl
jge
lahf
fabs
pop
sbb
sub
xor
out
lds
xor
fs
gs
icebp
mov
sbb
sbb
sub
aam
mov
pop
lret
lcall
dec
cltd
stc
div
sbb
push
std
aas
mov
les
ja
add
xchg
add
sub
sbb
rcll
cmp
jl
or
mov
stos
lods
daa
sbb
xchg
pop
mov
stos
xchg
rolb
mov
scas
cs
scas
imul
jmp
sbb
stc
fnstsw
loop
mov
add
jg
push
lcall
imul
mov
mov
call
push
scas
lahf
insl
mov
xor
inc
decl
xor
cmp
or
mov
sahf
jbe
and
push
js
repnz
pop
push
pop
or
dec
add
cmp
sahf
inc
jmp
ds
jmp
in
jle
cmp
test
add
cmpsl
cmp
pop
insl
xchg
push
in
mov
fildl
jl
mov
cmp
add
push
mov
les
sub
mov
sbbb
mov
fwait
loop
and
xchg
fisubrl
insb
fwait
and
ret
or
mov
dec
xor
adc
dec
out
sub
stos
es
sub
push
xchg
outsl
pop
mov
pop
in
orb
mov
push
mov
std
cmp
outsl
add
inc
insb
aas
mov
or
adc
das
jmp
adc
dec
or
mov
and
jae
out
sub
fnstcw
nop
mov
add
lret
mov
mov
cs
popf
test
pop
dec
jecxz
sub
inc
fdivrs
ret
and
push
imul
jg
lods
rcr
repnz
ret
sub
xchg
mov
mov
iret
pop
sub
pop
loopne
sub
test
ja
dec
jbe
mov
pop
sub
aad
aam
rol
jl
ret
inc
mov
shlb
cmpb
or
aas
mov
adc
push
aam
mov
repnz
mov
enter
mov
add
add
aaa
insl
lahf
mov
add
mov
cmpsl
js
sbb
jle
test
aas
paddusb
enter
pop
jo
xchg
sub
ljmp
mov
scas
or
adc
lds
mov
cmp
mov
mov
mov
xchg
and
mov
pop
mov
roll
mov
addr16
lds
jb
xor
shl
sbb
xlat
sub
xchg
mov
pop
mov
adc
repnz
cmp
pop
dec
pusha
xchg
scas
movl
add
adc
dec
pop
scas
mov
sarb
add
rorl
testl
pusha
cmp
adc
popa
mov
stos
hlt
mov
mov
xor
fwait
lret
add
mov
mov
std
cmovo
pop
lea
vunpcklps
insl
imulb
js
pop
adc
into
mov
into
out
rcr
xor
lods
sbb
cs
lret
rcl
inc
frstor
iret
or
jg
call
daa
and
jmp
adc
lea
mov
jle
loope
add
or
daa
adc
loopne
aad
mov
ret
push
in
fst
lods
dec
out
sbb
stos
cmpsl
lret
or
fldt
push
std
sbb
cmp
xor
mov
scas
repz
test
mov
enter
rcl
orb
mov
jo
pusha
out
add
cmp
dec
sarb
adc
cld
pop
mov
arpl
adc
mov
dec
clc
fadd
jo
xchg
push
jg
test
mov
popf
shlb
ret
pop
push
imul
loop
sub
enter
xor
cmp
and
mov
sbb
iret
ficoms
dec
cltd
fmuls
sahf
test
imulb
nop
cwtl
sub
mov
push
jg
je
lods
iret
mov
add
push
mov
xchg
mov
jno
push
enter
xor
loop
or
mov
cli
dec
insl
dec
test
dec
jns
shrl
push
add
fwait
mov
xchg
xor
lret
cmp
in
pusha
ret
cwtl
dec
jbe
scas
push
fnstsw
sbb
cwtl
add
ficoms
sarl
rorb
mov
ds
fbld
or
and
mov
popa
nop
leave
add
add
pushf
pop
mov
mov
inc
into
dec
gs
ja
call
andl
lret
inc
and
adc
inc
push
mov
ss
mov
gs
mov
fwait
mov
pop
test
push
xchg
insb
cli
call
mov
inc
inc
and
jns
sub
cmc
push
mov
jp
jge,pt
add
dec
dec
push
mov
in
arpl
in
cmp
rcr
push
push
out
jb
rcll
movsl
or
mov
loopne
add
lret
mov
or
sub
shlb
jbe
jle
stos
mov
jne
add
mov
addb
sbbl
cli
int3
movsb
mov
dec
jp
jl,pn
out
repnz
jno
sub
push
pop
jbe
fcompl
fisttpll
int3
cld
icebp
xchg
push
mov
cmp
out
enter
and
sbb
pusha
or
sub
adc
cli
xchg
pop
push
ret
jge
idiv
bound
std
jp
push
test
subl
lahf
xchg
stc
push
sahf
push
add
push
lods
lea
sub
das
ret
push
cmp
mov
testb
jbe
sbb
lcall
mov
jns
mov
lds
pop
xchg
cmc
and
dec
rcl
mov
push
scas
pop
fsts
adc
enter
inc
xor
rcr
push
les
mov
or
mov
jo
push
sbbl
stos
and
push
sbb
daa
jnp
push
movsb
xor
dec
fisttpll
cld
xchg
mov
das
jns
ds
xchg
dec
dec
sbb
mov
dec
add
xchg
mov
fsubl
sarb
xor
xor
call
adc
xchg
jp
mov
xor
or
pop
xchg
pop
outsb
sbb
pop
repz
mul
xor
mov
push
je
out
in
pop
notb
mov
test
je
jnp
xor
inc
xchg
incl
mov
lcall
fisubs
xchg
sub
je
outsl
inc
cli
shrb
test
movsl
loop
push
incb
xor
inc
mov
pusha
inc
cwtl
push
sub
inc
out
mov
int3
in
mov
enter
inc
dec
xchg
sub
mov
mov
jle
or
rcl
xor
push
fdivl
jmp
fstp
lcall
cs
shll
push
jo
inc
jl
out
xchg
lcall
stos
adc
xor
pop
inc
mov
add
xchg
rorb
dec
pop
in
inc
mov
sbb
xchg
mov
mov
ljmp
bnd
push
mov
insl
sub
jg
popf
cwtl
imul
sub
cwtl
fistl
pop
insl
add
add
xor
xchg
rclb
or
or
mov
mov
dec
loope
cmp
sbb
ja
fsubs
lret
inc
cmpsl
xchg
mov
sbb
into
inc
mov
mov
dec
push
pop
mov
into
and
lea
or
xor
mov
inc
je
pop
outsb
xchg
sub
iret
or
das
jnp
pop
dec
cmp
loopne
repz
repnz
dec
push
movsl
mov
mov
jo
mov
add
or
ret
xlat
xchg
repnz
flds
into
sub
mov
fisttps
cmp
jno
imul
xchg
push
xor
jb
cmp
loopne
pop
sbb
cmp
stos
loope
outsb
mov
fwait
insb
fisubs
pop
je
arpl
sub
sahf
jno
pop
testl
lea
icebp
imul
mov
pop
push
add
jle
and
cmp
sbb
movsl
call
mov
nop
mov
xchg
out
shrl
or
adc
out
clc
sar
inc
lods
scas
and
cld
sbb
out
xor
lahf
lret
movsb
inc
xchg
pop
xchg
pop
and
mulb
mov
enter
jb
incl
mov
ja
sahf
push
lods
addr16
je
sbb
add
and
out
dec
adc
xor
push
sbb
fdecstp
push
cmp
sbb
add
pop
pop
lret
inc
test
and
sbb
leave
adc
inc
push
or
push
stc
mov
insl
sbb
dec
imul
iret
cs
loop
js
xlat
jp
mov
mov
sbbb
fwait
stos
cmpsl
push
cmovl
xlat
int
mov
bound
add
repnz
mov
bound
jnp
sbb
cmp
push
jo
cwtl
inc
jp
add
push
sbb
inc
inc
pop
dec
cmp
pop
into
cld
sbb
cmp
push
out
ljmp
test
pop
ja,pt
sbb
dec
and
mov
lods
aas
enter
icebp
inc
pop
call
dec
dec
push
insl
inc
or
sbb
cwtl
adc
ret
or
pop
fsubrp
push
js
push
movsl
inc
push
xor
andps
mov
cmp
pop
sub
fistpll
mov
scas
xor
xor
in
xorb
pusha
enter
add
shlb
jg
mov
test
fisubl
mov
mov
sub
adc
pop
push
cmc
or
fs
aaa
cmp
push
imul
xchg
xor
arpl
lahf
mov
inc
fsubl
inc
sbb
sbb
xchg
fistpl
ss
or
call
in
notb
gs
gs
inc
lahf
add
or
idivl
cld
cmp
popf
mov
xor
lret
adc
mov
cmpsl
insb
adc
jno
push
inc
and
in
movsl
and
push
dec
std
subb
out
pop
xchg
dec
xor
and
add
push
pop
or
pop
mov
std
add
aad
pusha
push
inc
cmpsb
cmp
sub
sbb
inc
xor
sub
enter
int3
fsubr
xchg
sbb
push
or
fcmovu
cli
jmp
xchg
mull
js
adc
and
push
and
enter
inc
leave
xor
stos
xor
popa
std
lock
pop
xchg
sub
sub
scas
jns
jg
jg
push
sub
add
test
and
pop
insl
mov
test
xchg
xor
push
inc
jp
xchg
iret
inc
mov
insb
cmp
inc
inc
pushl
jg
imul
out
lret
aaa
mov
adc
add
push
adc
cmp
cmp
inc
hlt
dec
out
in
mov
add
cld
mov
push
push
fimuls
icebp
data16
fnstcw
fistl
xchg
push
sub
cmp
push
jae
or
jge
jne
mov
push
pop
test
loopne
xlat
cmp
or
push
push
ficoml
enter
push
dec
mov
jge
inc
cwtl
push
pusha
flds
xor
pop
test
mov
xchg
lahf
int
mov
loop
je
jae
pop
lret
sub
dec
mov
pop
icebp
rolb
divb
and
xchg
test
push
mull
ret
xchg
pop
out
mov
lret
jmp
aam
fstpl
in
mov
lret
jns
popa
ror
and
testb
cwtl
xor
cmpsb
fcmovnbe
test
repz
icebp
or
stos
xchg
xchg
push
jbe
je
cmp
outsb
adcb
in
loopne
loop
shlb
inc
jmp
push
movsl
or
das
inc
add
sbb
pop
push
pop
mov
pop
mov
dec
hlt
in
mov
xor
pop
insl
xor
movsl
jecxz
test
sti
xor
in
mov
fucomi
ficompl
outsb
movl
dec
fdivrl
dec
lcall
adc
push
pop
jne
jb
mov
shrl
sub
mov
push
jg
mov
jmp
mov
ret
mov
lods
inc
push
int3
outsl
and
loope
outsl
cmp
xchg
lods
xchg
rcll
pop
fsub
xchg
shrl
idivl
fs
and
jbe
pushf
jmp
ret
sub
stos
xor
shl
les
cld
mov
test
or
aas
bound
cmp
je
icebp
leave
pop
in
jmp
test
sbb
mov
gs
daa
fs
push
sahf
sarb
test
jae
mov
aad
dec
push
push
adc
sarl
mov
fcompp
out
adcl
scas
pop
addr16
pop
jns
mov
and
mov
sti
jmp
std
enter
enter
add
je
pop
lock
cmp
push
xchg
mov
out
pop
fists
pop
stos
mov
mov
mov
add
lds
fmuls
sub
push
sbb
leave
fldt
mov
rcrb
outsl
or
cld
iret
xchg
mov
mov
mov
cmp
add
mov
mov
and
popf
dec
enter
push
cmp
int3
add
gs
stos
inc
or
ret
mov
int3
cs
push
cmpsl
loopne
daa
outsb
mov
xchg
bound
jmp
shlb
mov
fimuls
lock
xchg
mov
pop
hlt
aam
into
jns
add
rcrb
cltd
lcall
rcrl
inc
js
decl
mov
inc
lret
cmp
aad
and
stos
xorl
mov
icebp
adc
movsb
jbe
push
insl
fmuls
xor
mov
fwait
jno
rcr
icebp
jae
lahf
push
faddl
popf
mov
sbb
xchg
mov
mov
shlb
mov
and
push
cld
scas
jle
pcmpgtb
sbb
sti
data16
data16
es
adc
cltd
jmp
loop
out
mov
bswap
xchg
sbb
lahf
hlt
pop
stc
pop
sub
lods
pop
and
out
pusha
pop
and
dec
inc
bnd
loope
xchg
out
xchg
add
xlat
mov
cmp
outsl
inc
iret
je
lods
int
mov
cltd
mov
add
daa
pop
mov
aas
xor
jge
cwtl
fcmovnu
sbb
cmpsb
and
mov
adc
mov
test
pusha
loope
mov
mov
xchg
mov
outsl
mov
fs
sub
xor
call
pop
ret
push
aaa
lods
testb
jne
and
test
popa
pop
lds
or
mov
push
int3
push
stos
repz
test
bound
sub
test
das
shl
xorl
add
pop
jns
lcall
jg
cmpsl
mov
daa
stc
or
mov
sub
inc
stc
adcb
fisubrl
sbb
xor
cmc
cli
popa
cmpsl
sbb
jb
pop
shrl
mov
xlat
push
or
mov
mov
sbb
cli
fwait
and
and
or
fwait
shlb
xchg
push
dec
insw
rcrb
cwtl
nop
leave
stos
or
cmpsl
pop
inc
pop
movhps
movb
jae
and
shl
out
stos
mov
pop
mov
stos
outsb
fidivl
xlat
adc
scas
fwait
nop
arpl
dec
lret
scas
mov
xchg
mov
pop
test
jg
bound
push
xchg
pop
aas
xor
pop
dec
or
lock
add
jns
jge
rcll
mov
jg
sub
in
sbb
inc
pop
jp
es
or
xor
hlt
push
mov
out
or
jle
andl
adc
xor
lret
sub
repz
pop
mov
xchg
inc
ds
leave
sub
jno
ret
mov
pop
mov
inc
mov
ficoml
add
push
pop
pop
pop
and
cmp
dec
xor
cli
pop
xor
insl
outsl
loop
mov
subl
jns
fdivr
scas
sub
pop
js
test
mov
scas
mov
cmp
xlat
mov
mov
xchg
jp
in
divl
inc
mov
or
repnz
orl
pushf
pusha
xor
in
sbb
insl
mov
and
sarb
mov
cltd
xchg
pop
lahf
xchg
pusha
mov
cmp
mov
in
jnp
subl
add
aas
inc
aad
cmp
push
dec
repz
testl
inc
or
mov
xchg
sahf
mov
icebp
mov
jmp
add
loop,pt
cmpsl
pop
test
push
cmp
adc
push
pushf
and
mov
bound
aam
mov
in
in
ss
int
mov
xchg
mov
ficomps
adc
sbb
sub
test
add
fsubrl
jne
push
sbb
xchg
std
mov
pop
lret
mov
push
dec
sti
jo
clc
mov
xchg
call
mov
imul
jp
nop
movl
in
test
dec
fldl
mov
or
aas
sarb
and
popa
xor
pop
dec
xchg
xor
adc
data16
mov
jbe
pop
push
inc
mov
xchg
mov
test
pop
loop
leave
xor
clc
mov
fsubrl
in
xchg
jle
test
mov
enter
js
push
lret
jnp
sub
in
mov
sub
add
out
push
dec
andb
add
cmp
adc
stos
inc
pop
or
cmp
std
push
mov
aaa
pop
fisubrl
push
jmp
in
stos
data16
hlt
sahf
arpl
cld
in
std
inc
test
pop
jmp
icebp
pop
mov
mov
mov
push
popf
inc
jb
arpl
mov
enter
push
dec
jae
insl
adc
icebp
pop
xor
iret
scas
push
jge
jo
out
test
cli
push
mov
xchg
pop
sub
dec
aam
call
out
sbb
mov
rcrl
and
in
mov
pop
jnp
mov
call
mov
pusha
sahf
imul
cmp
in
dec
scas
out
lods
add
addr16
sub
ljmp
jne
pushf
sub
inc
out
or
inc
nop
pop
cmp
inc
dec
cmp
xchg
add
push
push
subl
and
lahf
xor
ret
ljmp
movsl
lret
fdiv
jge
call
jns
xchg
insb
push
std
leave
jnp
leave
mov
cmpsb
push
les
pushf
or
in
add
sub
loope
and
pop
inc
daa
scas
loop
add
inc
ds
adc
iret
in
clc
stos
jmp
stc
test
or
enter
popa
xchg
jne
push
adc
and
jns
pop
fnstenv
cltd
sbb
push
orl
in
loope
mov
imul
loopne
push
imul
adc
pop
jnp
in
ror
fldcw
ret
xchg
lods
loopne
js
add
stos
push
xor
inc
nop
imul
test
in
inc
sbb
push
dec
into
pop
mov
add
jg
rcl
lock
push
add
cmpsb
aam
shlb
and
idivl
int
cmpsl
sbb
push
orb
sahf
mov
lea
aaa
lret
loop
cmp
repnz
fistl
int
sbb
dec
adc
cwtl
dec
jmp
int
push
pop
sahf
pop
jle
fwait
out
push
lods
jl
test
cmp
cmp
mov
fildll
inc
adc
call
outsb
ret
in
pop
push
pop
cmp
sbb
addr16
sbb
mov
xor
jnp
repnz
lea
jg
out
push
rorb
shl
shr
xor
cmp
push
sete
orl
leave
mov
push
or
mov
lret
lods
adc
lds
lea
ss
lods
pop
mov
aam
divl
xlat
cli
push
mov
mov
iret
test
jg
cmpsl
cmpsl
push
xchg
in
sub
mov
jle
lret
sbb
movsb
dec
or
popl
push
and
mov
lods
outsl
inc
loope,pn
or
xlat
lahf
cmpsb
in
bound
leave
imul
dec
mov
jle
in
lahf
call
inc
push
addr16
repz
pop
lods
jb
sahf
jmp
movsl
test
cmc
sub
fistpl
ret
mov
and
xor
inc
vaddps
cmp
int
jecxz
into
mov
sti
pushf
lea
data16
fnstcw
pusha
aad
into
sbb
ret
xchg
imul
or
outsb
jl
adc
inc
or
or
loopne
int
jne
out
lret
lods
psllw
clc
sbb
push
dec
insl
shll
or
push
jae
out
dec
aas
push
addl
fcoms
cmp
xchg
push
lret
ret
fadds
outsb
fildl
pop
dec
test
callw
stos
inc
add
adc
jnp
cmpsb
jae
int3
mov
in
or
adc
inc
test
in
sbb
push
loopne
add
test
xorb
mov
inc
or
jo
outsb
adc
out
cld
lret
jno
mov
jle
pop
pop
in
xor
jno
and
mov
repz
cld
inc
mov
jbe
popf
ds
inc
inc
inc
mov
mov
dec
mov
xor
mov
xchg
mov
mov
je
aaa
rcl
push
dec
push
inc
adc
sahf
xchg
jg
jno
xor
aam
xchg
in
je
jg
mov
mov
ss
out
daa
push
sub
arpl
xchg
jmp
and
sbb
cmp
test
ss
xlat
in
and
xchg
mov
cmp
fsubl
xor
sub
shl
dec
sub
jo
mov
lods
pop
leave
mov
pop
lret
shrb
lsl
aad
push
leave
iret
jnp
notb
mov
jne
stos
cli
insb
pop
cmpsl
fs
inc
lods
and
mov
inc
xor
fdivrp
push
xchg
pop
pop
mov
rolb
loope
mov
gs
jns
arpl
adc
push
out
icebp
jno
sbbb
xchg
mov
ficompl
out
jle
iret
inc
pop
xlat
loope
jbe
leave
outsl
jo
pcmpgtw
pop
fwait
out
sarb
push
repz
mov
dec
or
cmp
push
pop
notb
dec
or
rorw
sbb
pop
mov
cmc
push
bound
mov
repnz
or
pop
scas
in
insl
shrb
mov
int
stos
mov
test
ss
xchg
dec
mov
pushf
push
sub
mov
adc
dec
stos
mov
xchg
mov
inc
fists
pop
lret
inc
clc
jg
mov
jle
push
pusha
les
ficompl
xorl
xchg
jecxz
aaa
sub
xor
mov
dec
xchg
xor
cmp
pop
outsb
stc
jp
addr16
xor
inc
adc
insb
sbbl
pop
out
mov
roll
sbb
jne
mov
divb
mov
icebp
pop
lea
sbb
lods
in
out
mov
dec
leave
test
movb
mov
test
cmp
pop
sti
lds
lret
mov
inc
add
cmp
dec
aam
dec
jmp
mov
pop
dec
into
lea
sbb
repz
mov
dec
fxch
ret
lea
mov
jbe
pop
es
fbld
out
popl
sbb
int3
in
orb
stc
pop
mov
fsubrl
lret
jns
jg
xor
dec
bound
test
mov
icebp
insl
test
inc
xor
push
pop
sbb
add
xchg
pop
lret
mov
or
xor
iret
enter
jle
test
incl
lods
test
sub
repz
repnz
lcall
mov
rorb
imul
adc
xchg
vcvtpd2psy
les
insl
sub
repz
jecxz
mov
add
jle
scas
je
imul
movups
sbb
popf
rol
jno
lods
mov
je
lods
pop
sub
fimuls
dec
mov
pushf
xchg
lds
xor
fidivl
jno
sbbb
add
xchg
push
add
mov
loop
push
jae
int
scas
out
and
mov
int3
jmp
pop
in
push
mov
sbb
mov
bound
inc
mov
fld
pop
ja
cmp
cmp
mov
or
sbb
xchg
adc
fstl
xor
lea
mov
push
pop
or
adc
sub
scas
cmp
sub
pop
leave
jnp
inc
inc
xor
lods
mov
in
das
adc
daa
inc
jg
adc
inc
cwtl
into
movsl
pop
movsb
and
sub
addb
loop
cmp
loop
or
aas
aaa
xchg
into
inc
imul
jne
movsl
push
mov
dec
negb
xor
out
add
mov
sbb
lret
sub
dec
pusha
xor
push
xor
cs
stos
ljmp
jl
sbb
sub
negl
inc
and
jo
xchg
pop
jmp
xor
push
or
pop
mov
test
daa
int3
jg
ljmp
pop
rorl
jne
and
mov
out
data16
ja
cmpb
int3
mov
and
shll
sbb
int
fucomp
loop
orl
ds
add
nop
out
fwait
sarl
xor
dec
test
cs
call
jne
imul
xchg
mov
xchg
push
lods
cltd
lret
popf
pusha
ret
repz
xchg
adc
push
cmc
rcrl
cli
pop
cmp
pop
out
mov
pop
xchg
out
sub
push
adc
test
add
out
mov
lahf
push
xchg
inc
or
sub
sub
decl
leave
lahf
fimull
es
mov
pop
adc
cmp
inc
push
mov
jns
out
xchg
lock
std
leave
jmp
pop
dec
pop
mov
clc
adc
lock
xchg
dec
sub
outsl
stos
flds
insb
sub
mov
jle
mov
pushf
mov
bound
mov
frstor
outsl
repz
outsl
mov
pop
notb
push
aam
imul
out
mov
movd
orb
push
cmp
in
shl
push
adc
push
test
xchg
clc
inc
dec
add
mov
mov
or
lds
dec
insl
mov
mov
test
lcall
stc
gs
lret
imul
je
mov
jns
add
shlb
imul
xor
jecxz
sbb
ret
fld
repnz
mov
mov
push
mov
fcoml
test
je
out
lret
les
lods
fbld
nop
mov
mov
sbb
stc
scas
dec
data16
push
push
cs
testl
mov
aam
test
xor
cmp
sahf
roll
sbb
adc
sbb
imul
imul
cs
xchg
nop
leave
adc
pop
leave
insl
in
rclb
fildll
sbb
stc
outsl
pop
cmp
jbe
prefetch
sub
lods
cmp
jno
int3
mov
fsts
mov
push
jae
ds
mov
dec
xor
add
pop
jnp
push
jno
mov
lahf
mov
andb
push
lds
jmp
ss
flds
cmp
sarb
or
addb
mov
push
cmpsb
imul
scas
and
or
scas
xchg
xor
sub
xor
fwait
icebp
or
inc
adc
sbb
lods
es
outsb
and
xor
inc
mov
mov
inc
pop
shll
jg
jo
cmp
adc
push
insl
or
inc
adc
scas
xor
adc
rorb
pop
push
sub
ljmp
or
insb
lods
or
leave
test
fcompl
test
adc
cmpsb
aad
gs
test
pop
pop
and
sbb
xor
scas
notb
adc
push
inc
mov
mov
mov
lock
aas
adcl
or
imul
inc
adc
add
adc
add
jnp
adc
aad
adc
fsubl
push
push
movsb
push
cmpsl
mov
aas
icebp
mov
or
add
add
lret
imul
inc
mov
out
jne
arpl
fs
popf
pop
cmpsl
lea
js
out
pop
mov
inc
dec
sub
insl
jns
test
add
mov
pop
cmpb
ja
adc
jbe
dec
int3
inc
jo
hlt
daa
orb
je
xchg
cltd
lds
mov
or
mov
stos
aaa
js
push
imulb
push
and
mov
shlb
pop
out
xor
jo
or
jl
xlat
mov
lods
inc
icebp
push
sub
xor
cmp
mov
nop
jecxz,pn
xchg
cmp
sbb
scas
add
rclb
pop
and
nop
sub
fimuls
adc
sbb
jno
mov
adc
cs
jno
mov
sbb
fwait
xor
mov
in
enter
cld
dec
inc
or
or
enter
xlat
int3
iret
cli
ret
pop
sub
inc
and
fsubr
pop
jns
xchg
inc
bound
loop
xor
push
mov
pop
jle
push
jns
sbb
shll
xor
outsl
sti
mov
sub
jnp
xchg
sbbl
push
ljmp
data16
xchg
dec
jmp
sub
addr16
jno
cmp
xor
call
adc
sbb
dec
scas
testl
add
scas
sahf
sbb
add
filds
cmp
int
xchg
rorl
out
bound
lods
sti
mov
fsubrl
popa
jmp
push
inc
in
push
xor
fcoms
mov
mov
add
mov
lea
pop
pop
cmp
out
out
pop
gs
lds
xchg
aaa
aam
xor
out
cmpsl
pminub
and
mov
dec
sbb
push
xchg
sub
xchg
pop
xchg
jmp
outsb
adc
adc
scas
std
push
fnstenv
loope
mov
mov
pop
lea
adc
jg
add
push
jmp
mov
cmp
pop
imul
mov
pop
fidivrs
mov
mov
mov
mov
lahf
pusha
dec
cmp
inc
sbb
inc
fucomip
repnz
cmp
cmp
scas
and
xor
push
and
or
in
push
fwait
test
fildl
mov
shrb
mov
adc
outsl
in
sahf
loope
verw
xor
inc
scas
inc
mov
sub
and
pusha
outsl
dec
mov
and
dec
hlt
incb
shlb
in
and
pushf
and
push
inc
sbb
orl
cmpsl
pop
sbb
mov
push
sbb
and
popl
scas
jmp
and
test
add
ljmp
push
inc
aam
inc
test
arpl
inc
pop
sbb
adc
lcall
add
jnp
jae
minps
pop
ljmp
mov
lcall
mov
inc
mov
and
shll
jle
add
cli
cmp
sub
push
sahf
add
mov
icebp
pop
push
sub
lcall
sub
rsm
js
aaa
ds
out
mov
aad
jp
xor
sub
jge
xchg
xchg
movsl
cli
mov
imul
dec
es
xlat
adc
stos
xchg
mov
and
xchg
sub
leave
dec
int3
or
jp
mov
call
push
hlt
shrb
mov
pop
sbb
data16
shlb
cmpsb
leave
and
ja
ret
mov
rol
mov
daa
or
xchg
jno
fisubs
cmpsb
push
divl
dec
or
fwait
cltd
sub
mov
pop
jae
or
or
add
sub
push
sbb
imul
jb
push
js
mov
dec
xor
push
xor
cli
lds
das
pop
movsl
pushf
mov
or
jo
rcl
push
cmp
mov
jno
out
insl
roll
call
iret
xchg
mov
ficoml
jno
sbbb
std
js
test
or
divl
and
mov
adc
into
sahf
clc
add
add
sub
or
je
xchg
cmp
imul
mov
call
xorb
jmp
jp
pop
xor
and
popa
cmpsb
rcr
pushf
mov
cmp
les
pop
adc
xor
lods
imul
decb
cmp
mov
fbstp
push
pusha
shrb
lahf
mov
test
inc
fldl
pop
dec
insl
addr16
data16
mov
pop
je
push
fistl
lock
inc
adc
imul
push
adc
xlat
je
and
repz
sub
rolb
dec
sbb
mov
push
pop
sub
jne
add
adc
es
cmpl
fldl
or
int3
sarb
mov
enter
test
dec
cld
pop
loopew
sti
loopne
fs
jecxz
add
cmpb
xchg
fisubrs
ds
cwtl
ja
out
iret
mov
and
xchg
popf
mov
pop
jne
aas
call
cwtl
inc
icebp
xor
ret
rep
fucomip
sbb
and
mov
lcall
add
sub
in
add
lahf
mov
mov
incl
dec
mov
pop
fimull
sbb
push
sub
lods
xchg
movsl
mov
push
xchg
or
cwtl
add
jns
pmuludq
roll
inc
dec
sbb
out
lods
inc
xlat
lods
aas
icebp
rolb
push
jno
push
mov
cmp
inc
stos
sub
fwait
pop
rorb
xor
out
cmp
mov
out
ret
icebp
ljmp
push
int3
mov
shrl
dec
shrb
into
push
fdivs
push
dec
fildl
out
sbbl
jnp
adcl
adc
adcb
test
repz
rolb
adc
fdivrl
out
dec
add
mov
mov
shrl
xchg
jp
adc
mov
add
jle
in
inc
mov
xchg
subl
and
push
add
add
pop
hlt
out
repz
pop
cs
push
arpl
iret
mov
mov
pop
inc
scas
fildll
mov
fwait
xchg
out
push
fnstenv
mov
dec
or
mov
push
cmp
movsb
push
test
stos
fwait
push
insb
jle
cmc
and
popf
xchg
andb
cmp
lds
lret
scas
test
and
mov
nop
mov
in
dec
std
repnz
mov
sbb
dec
incl
and
aaa
loope
or
sub
push
mov
mov
scas
aaa
mov
aam
stos
sarl
fisttps
jle
out
add
aas
test
loope
xor
xchg
mov
sub
xor
mov
lods
shl
adc
jb
aad
pop
cs
sub
aad
data16
and
es
jecxz
and
jl
daa
mov
adc
pop
or
leave
jl
jmp
dec
cmp
sbb
xor
dec
fnstsw
push
test
add
jbe
xor
pop
fwait
and
mov
mov
and
pop
push
adc
cmp
mov
push
jae
js
xchg
mov
jno
mov
add
loop
movsl
jge
dec
dec
jns
cmp
enter
mov
and
xchg
lcall
xchg
stos
or
sbbl
repnz
xchg
stc
xchg
imul
out
push
mov
dec
ret
mov
rol
adc
addr16
icebp
mov
mov
dec
stos
sbb
test
stc
rcrl
push
popa
adc
pop
inc
jb
inc
pusha
or
sbb
adc
and
lds
les
aas
jmp
xchg
or
call
ja
fnstcw
inc
mov
jo
push
mul
nop
and
jmp
ret
or
scas
xlat
push
aad
daa
ret
in
inc
test
inc
pushf
in
ljmp
pop
pop
mov
sub
rclb
insb
jno
ljmp
sub
or
mulb
push
push
shlb
and
adc
das
mov
xchg
mov
cmc
or
sbb
sbb
jo
add
xchg
daa
mov
movsl
ljmp
mov
loopne
dec
int3
mov
aas
test
rclb
aas
ret
sub
test
jno
lds
lahf
pop
mov
mov
adc
cltd
call
push
inc
xor
test
dec
or
std
fdivr
xor
popa
push
mov
out
adc
mov
inc
cmp
decb
push
out
cld
in
add
sbb
jmp
mov
and
lahf
xor
push
jecxz
push
xchg
mov
push
pushf
pop
or
movsb
mov
mov
stos
cwtl
ficoms
xor
jne
inc
and
in
adc
or
nop
jnp
js
and
pop
or
mov
std
jge
sbb
popaw
stos
sbb
ja
jmp
enter
xchg
adc
sub
mov
or
jmp
out
in
jle
popa
notb
fs
movsb
mov
iret
fwait
out
out
cmp
daa
push
push
das
jp
pop
mov
imul
sub
sbb
cld
dec
jge
rclb
and
loope,pn
fsubr
inc
or
pop
inc
xor
sti
lds
imul
xchg
mov
and
sbb
cmpsl
mov
inc
lcall
fimuls
and
sbbb
push
xorl
fimuls
push
mov
xor
jbe
xlat
sub
fwait
mov
shr
jle
lret
rol
push
adc
sbb
ss
sub
cmp
fiaddl
push
out
div
adc
mov
mov
jge
fistps
in
dec
ret
das
scas
lsl
sahf
sbb
mov
inc
cmp
lea
lods
movl
push
mov
sbb
bound
pop
xlat
jo
aas
adc
es
mov
test
negb
xor
gs
jle
adc
mov
xor
or
and
and
fdivl
mov
js
bound
pop
jae
jns
cli
mov
out
jl
mov
jo
jae
sbb
dec
in
xor
pushf
mov
fldl
and
fbstp
or
mov
pop
dec
mov
xchg
cmp
add
mov
dec
xchg
aaa
stos
in
jl
mov
scas
xchg
loopne
dec
or
cld
sub
cmp
push
lock
mov
and
cltd
out
push
das
xor
jb
adc
xlat
push
push
sub
int3
mov
add
in
rcrl
leave
push
sub
fisubl
pop
cmp
into
outsw
sub
icebp
push
imul
pop
push
ja
pop
pop
ret
adcl
jnp
pusha
scas
xor
dec
push
ss
mov
sbb
outsl
sti
ja
test
cld
dec
sbb
mov
inc
lret
xchg
movsl
sarb
js
sbb
std
push
and
lcall
in
adc
mov
cmp
mov
lret
test
inc
lods
jno
xchg
cmp
or
popf
sub
mov
jnp
ja
cmpb
icebp
or
cli
adc
jg
mov
dec
inc
aaa
cmp
jne
dec
mov
jnp
add
incb
jb
sti
outsl
mov
int3
pop
popf
aas
daa
bound
mov
fiadds
cmc
cmp
and
mov
add
out
cmc
xchg
xchg
scas
imul
xchg
es
mov
hlt
xchg
push
lcall
cmp
into
cltd
dec
bound
cld
imul
cmpsb
sarl
jo
mov
cmp
out
in
fimull
adc
clc
xor
adc
adc
in
std
lods
cmp
into
leave
jae
mov
inc
sub
xchg
mov
fisttps
addl
idivl
jbe
inc
cmp
cwtl
iret
mov
xchg
mov
mov
mov
mov
cltd
lret
dec
lret
aas
or
mov
dec
mov
pop
ret
sahf
or
rorl
sub
dec
xor
fmuls
inc
fstp
das
mov
dec
dec
cmc
jle
sbb
sbb
jb
test
adcl
cmp
mov
gs
adc
pop
cmp
cmc
es
decb
push
jb
jl
xlat
pop
xorb
adc
arpl
pop
gs
lret
dec
inc
ljmp
in
es
inc
xor
adc
jbe
pop
pop
rclb
dec
iret
jl
in
inc
aas
int3
idivb
adc
pop
popf
mov
test
divb
mov
jb
ja
mov
imul
pop
xorl
in
and
aas
repz
mov
dec
aas
jmp
lods
sbb
mov
adc
imul
mov
push
dec
dec
stos
repz
inc
mov
add
and
fcompl
mov
or
jmp
movsl
mov
mov
jo
jl
cmp
fdivp
pop
lahf
sub
sbb
dec
or
ret
and
dec
push
pop
jmp
cmp
cvttps2pi
sar
cmc
insl
roll
stos
inc
stc
lock
shlb
mov
add
repz
mov
enter
scas
imul
inc
mov
inc
icebp
lock
lea
clc
lods
or
pop
pusha
repnz
cmp
loopne
in
push
dec
ljmp
mov
cmp
sub
pop
ljmp
fnstsw
out
dec
and
cltd
or
test
and
loope
aam
pop
xchg
push
sar
and
adc
iret
xchg
cld
push
jbe
movsl
xchg
sbb
jecxz
adc
int
pop
mov
and
inc
popf
mov
or
arpl
dec
shl
lea
sbb
testl
sub
sbb
shll
push
push
mov
out
push
in
cmp
mov
mov
popa
sbb
test
add
sbb
cmpb
mov
add
sbb
jb
pop
cmpsb
jecxz
out
push
dec
loope
pop
test
int3
repz
xlat
and
bound
push
dec
out
call
and
push
pop
shl
frstor
push
mov
pop
aas
stos
sahf
cs
daa
jle
inc
mov
sub
orl
mov
jnp
into
jns
cli
xor
mov
or
pop
xor
out
mov
ja
in
dec
subb
sbbb
sub
rolb
dec
pop
das
pop
add
rorl
and
imul
xor
and
das
sahf
rcr
out
inc
pusha
and
sub
inc
mov
idivb
nop
push
fdivrl
xor
rclb
xor
and
test
adc
out
mov
mov
mov
push
test
roll
and
push
pop
inc
das
adc
adc
and
outsb
outsb
scas
subb
nop
test
cmp
sbb
cmp
xlat
xchg
jae
outsb
movl
add
xchg
ds
in
or
sbb
mov
pop
aaa
xchg
jae
sbb
push
jb
test
cmpsl
in
ds
pushf
cmp
adc
movsb
dec
adc
mov
adc
adc
xchg
push
jl
into
jge
leave
adcb
cmc
xchg
xor
jno
loop
xor
mov
mov
loopne
mov
mov
xchg
icebp
or
insb
or
sbb
decb
xchg
sub
inc
mov
xor
test
nop
fwait
daa
mov
adc
dec
add
adc
ja
adc
xchg
fs
inc
cltd
bound
dec
mov
push
xor
sbb
pop
fiadds
mov
aam
inc
pop
shrb
out
pushf
mov
fisttpl
fidivrs
in
int3
and
hlt
mov
in
xor
aam
or
mov
nop
mov
lcall
pop
aaa
rcrb
sbb
push
lds
xchg
pop
stc
arpl
sub
nop
test
push
sbb
in
lret
dec
mov
pop
out
cmp
mov
pop
aam
sub
sbb
outsb
sti
jle
and
dec
cli
xorb
sbb
mov
insb
xor
mov
pusha
test
pusha
pop
fidivs
pop
add
and
dec
and
ret
adc
mov
movsb
jmp
push
add
jle
outsl
mov
sub
pop
and
dec
loopne
and
mov
mov
pop
adcb
xchg
adc
lret
scas
cltd
repz
and
sbb
mov
xchg
js
stos
and
mov
inc
adc
imul
sbb
cs
push
jne
or
mov
imul
cmp
out
or
push
fsubrl
cmp
jle
pop
and
rclb
push
fcmovnbe
push
sub
sahf
leave
js
pusha
mov
xor
xor
inc
repz
push
sbb
push
gs
fsts
sbb
in
sarb
mov
das
sar
ljmp
jmp
lcall
adc
push
fs
out
cmc
jg
enter
fs
aas
adc
nop
and
mov
sub
rcl
mov
and
scas
jp
jmp
pop
xchg
dec
pushl
dec
ss
push
stos
das
movsl
sbb
fldcw
mov
loop
lds
stc
sub
test
aam
and
mov
jmp
bound
dec
ljmp
rcrl
movsl
pop
daa
mov
lcall
leave
out
mov
sbb
mov
mov
cmp
inc
inc
jmp
sarl
test
sub
push
aam
push
outsl
push
stos
cmp
nop
sti
pop
faddl
loop
clc
clc
jecxz
mov
xor
push
in
adc
sbb
push
daa
mov
sub
out
es
fadds
punpckhbw
push
cwtl
leave
not
call
out
fxch
mov
icebp
xchg
clc
orb
lea
mov
outsl
mov
fisubrs
jmp
notb
test
in
mov
xchg
cmp
lret
mov
in
fldl
push
divps
shlb
cmp
lret
adc
mov
inc
shrb
scas
pushl
aaa
incl
xor
sbb
scas
out
ljmp
in
jo
lods
sub
sbb
fsub
pop
dec
push
cmp
clc
jp
dec
mov
inc
mov
dec
fisubs
and
icebp
loopne
fistl
push
mov
in
sbb
xchg
jp
xor
iret
xor
push
push
imul
inc
jmp
adc
in
pusha
xchg
loope
jns
shl
imulb
bound
lcall
scas
pop
xlat
loope
dec
int
push
xchg
pop
cli
cltd
std
das
fiadds
loop
sbb
jle
out
add
push
imul
insb
nop
mov
xor
sub
bound
clc
idivb
loop
call
pop
sbb
dec
iret
mov
or
push
out
pop
xchg
xchg
aas
cmc
pop
inc
sub
cltd
cli
int3
cmpsl
xchg
dec
movl
xor
data16
dec
lea
jns
push
dec
push
push
pop
mov
scas
out
sar
xor
pop
mov
or
movsb
xor
aaa
fwait
loop
rcrb
adc
cli
jp
pop
mov
out
sbb
sarb
sub
sbb
andl
sub
pusha
imull
xchg
sub
add
add
add
inc
mov
sar
xchg
adc
or
mov
cmp
mov
mov
xchg
fidivrs
in
cli
pop
inc
xor
inc
js
ret
dec
pop
adc
push
and
cmp
adc
push
jno
loop
out
mov
push
stos
test
or
rcl
iret
and
mov
push
jmp
add
dec
iret
and
add
jno
dec
jle
xor
enter
sbb
imul
hlt
push
xchg
mov
lock
clc
cs
adc
gs
mov
fnstsw
ljmp
push
in
sub
ja
xor
xchg
add
mov
lcall
stos
mov
loop
insl
adc
repnz
cmp
xchg
fldenv
pop
sbb
or
scas
xor
xchg
aaa
ret
and
xchg
dec
or
subl
fs
leave
sar
xor
mov
adc
xchg
pop
sbb
push
arpl
or
or
push
jle
repnz
mov
imul
mov
cbtw
jl
rclb
push
jmp
lods
dec
lahf
sarb
inc
cmpsl
inc
fidivl
add
mov
cld
bound
lods
or
fisttps
inc
stos
subl
pop
clc
push
xchg
or
mov
repz
nop
fmull
iret
pop
mov
dec
pop
imul
cli
dec
and
sub
mov
cli
sahf
sub
fiaddl
sbb
rorb
ljmp
jnp
mov
nop
dec
jge
loope
fstl
sub
and
outsb
adc
mov
imul
sbb
lret
mov
add
fbld
iret
fisubrs
add
inc
push
jecxz
mov
adc
inc
test
into
xchg
daa
mov
mov
mov
sub
jl
aaa
pop
xlat
mov
xor
or
mov
lret
adc
cmp
push
dec
aaa
ficompl
or
fstpt
and
mov
adc
adc
rcl
iret
cmp
push
cmp
sub
aaa
test
xchg
stos
and
sahf
push
loope
mov
fldt
xor
mov
rorb
rcrl
adc
cld
ljmp
cli
adc
xor
in
cli
inc
scas
push
push
cwtl
stos
or
and
xchg
dec
mov
out
push
orl
fisubs
or
rcll
jecxz
xchg
stc
and
js
out
scas
mov
in
lock
pop
adc
cmp
and
and
mov
out
pop
loop
enter
add
push
shlb
hlt
sahf
data16
ror
hlt
dec
xor
push
cmp
daa
mov
xor
outsb
outsl
sbb
lahf
divb
sahf
and
cwtl
sub
ds
aaa
or
scas
cli
cwtl
imul
pop
ret
std
popf
pop
out
push
inc
xchg
adc
sbb
icebp
jmp
out
jmp
repz
daa
in
stc
xchg
dec
sti
sbb
dec
and
pop
pusha
shl
sbb
fisttpl
mov
mov
jmp
sub
jge
and
mov
dec
or
cmp
xchg
sbb
outsb
mov
jecxz
cmc
xor
out
pop
push
jl
push
sub
mov
dec
mov
cmp
xchg
jl
in
mov
jmp
mov
insl
cmp
fstpl
xor
bound
and
push
stc
cmp
jmp
xchg
fmull
mov
inc
push
jb
dec
das
rorb
ljmp
loop
clc
cmpsb
or
cmp
fwait
adc
push
call
je
push
dec
adcl
sbb
xchg
xchg
out
aaa
repnz
iret
or
inc
jge
iret
lods
sbb
dec
pop
mov
push
jg
jnp
ffreep
addr16
adc
adc
sbb
xor
pop
cmpsb
fidivs
movsl
cmp
rcr
outsb
lret
dec
repz
pop
jecxz
lods
dec
mov
or
mov
cld
je
in
adcb
xchg
mov
iret
adc
xor
ljmp
aaa
shr
lret
push
add
fsub
sub
adc
outsl
pop
fcom
sub
mov
xacquire
fs
jno
rcrl
pushf
loopne
cld
in
sub
stos
inc
fisttps
push
sbb
push
in
jnp
mov
lods
add
adc
or
shlb
inc
xchg
mov
dec
leave
xor
cmp
int
jae
lahf
lea
in
add
int3
or
es
loope
insb
mov
test
idivl
xor
and
jecxz
mov
cs
pop
mov
movsb
inc
sbb
sub
loopne
push
stos
stos
or
fsubs
push
push
repnz
inc
mov
iret
sahf
jo
std
jns
repnz
pop
add
jnp
loopne
jne
dec
inc
sub
xchg
cmp
es
jo
fstps
imul
mov
jp
insb
and
push
gs
xor
add
jno
cmp
adc
push
ss
daa
movsl
cmp
popa
push
insb
not
loopne
push
out
addr16
in
push
adc
sub
xchg
lods
neg
cmc
insl
mull
xor
push
mov
mov
or
add
or
add
stos
lret
push
in
push
scas
push
xchg
in
outsl
mov
call
cmpsl
sarb
outsb
ret
pop
pop
out
popf
movsl
dec
xor
mov
pushf
adcb
sbb
inc
xchg
outsl
push
fs
xchg
xchg
lret
pop
cwtl
loop
mov
popf
xor
inc
or
jecxz
mov
cmpsb
cmpsl
scas
adc
inc
cmp
add
leave
cmp
and
fbstp
add
scas
jl
mov
popa
int
aas
arpl
and
mov
clc
in
frstpm(287
xchg
lods
add
fimull
cld
test
je
ss
aaa
stos
or
cmp
cmp
jmp
push
scas
mov
js
ljmp
scas
adc
pop
xlat
push
mov
cmpsl
imul
mov
inc
xchg
leave
loop
lds
pop
add
xchg
lcall
or
gs
insl
inc
scas
popa
lods
outsb
lods
ss
outsl
mov
mov
inc
in
fnstsw
ss
pop
rcrl
sbb
push
inc
cld
sbbl
orl
enter
jge
fildl
es
aad
aad
cli
sub
lcall
and
lods
mov
fcmovbe
push
push
jg
mov
cmp
xchg
jae
mov
fsubp
xor
imulb
jmp
mov
lock
add
fldenv
cmp
jp
mov
es
sbb
jmpw
aad
mov
add
bound
jnp
sub
std
mov
inc
hlt
or
jp
mov
or
or
push
sbb
cmp
bound
pop
dec
inc
out
daa
inc
pop
pop
mov
ret
cmp
pop
mov
gs
xchg
int
fildll
fs
lahf
lahf
lds
loope
sub
jae
pop
xchg
bound
pop
data16
fisubl
add
add
out
push
fldcw
fnsave
xor
jns
adc
mov
fbstp
mov
cmp
jmp
pusha
fcmove
or
xchg
xor
jecxz
or
data16
movsb
pop
addr16
xor
outsb
xor
in
mov
mov
sbb
negb
xor
fildl
adc
or
pop
xchg
into
out
jle
sarl
arpl
test
dec
ja
lock
outsl
mov
lds
xor
xchg
mov
icebp
push
clc
mov
adc
push
clc
lods
mov
push
lds
int
push
or
xchg
into
insb
stos
pop
fstps
mov
and
mov
inc
sti
lods
movsb
scas
js
pop
or
adc
add
jns
insl
pop
ficomps
mov
out
mov
test
fstps
mov
insl
inc
and
xor
mov
int3
sub
xor
sbb
mov
stc
icebp
xchg
xchg
out
loop
cs
xlat
lods
add
adc
sbb
fs
es
lret
lahf
xchg
imul
addr16
mov
add
jo
aam
mov
pop
sbb
sbb
into
shll
mov
shrb
into
adc
inc
adc
dec
addl
mov
adc
dec
dec
stos
sub
xchg
adc
scas
xchg
movsb
sub
inc
mov
and
add
push
sbb
sub
divb
into
push
sbb
xchg
and
and
mov
pop
cmpsl
in
fadd
std
xor
addl
xchg
mov
lock
daa
sub
sub
push
andb
dec
shl
jmp
mov
fisubrs
sbb
lcall
mov
jb
jmp
jbe
sarb
cltd
cs
out
fcmovnu
xchg
jne
int3
imul
imul
aas
cmc
adc
repz
cltd
add
mov
inc
pop
sbb
fs
mov
repz
int3
mov
mov
mov
outsb
les
jbe
pop
sbb
sub
xor
or
imul
and
cmpsl
lret
inc
xor
mov
jb
stos
mov
mov
mov
pop
in
mov
xor
or
ret
cmp
stos
xor
repz
or
je
adc
fdivrl
iret
mov
fstcw
xchg
mov
cltd
std
push
add
add
test
jl
mov
inc
add
imul
adc
addr16
push
cmp
mov
mov
and
add
sbb
lahf
adc
sub
mull
stos
daa
enter
mov
dec
loopne
repnz
mov
cmp
fs
and
test
lods
clc
push
pop
shrl
mov
mov
insb
icebp
cmp
xchg
cmp
cmp
jge
pop
mov
push
cmp
inc
jb
dec
ss
push
xor
cmp
mov
xchg
sbb
cwtl
bound
sbb
in
lret
or
sub
inc
dec
popl
outsl
sub
cmc
out
fcmove
mov
pop
jmp
enter
push
rcrl
xor
dec
shll
sbb
pop
cmp
out
mov
inc
sub
jmp
and
cld
insl
jne
mov
dec
in
mov
movsb
mov
gs
cmpsl
push
ret
sbb
cmpsb
roll
leave
jl
mov
outsl
insl
jns
or
jne
addl
xor
add
cmc
loop
xchg
cwtl
xor
sbb
cmp
sbb
pop
push
inc
gs
shlb
fimuls
jl
outsl
mov
push
add
lret
cmp
hlt
in
push
jle
fidivl
ds
xchg
mov
or
adc
push
fisttpl
or
xorb
popa
clc
loopne
pop
xor
pop
mov
xchg
inc
in
pop
add
mov
popa
test
jns
xor
into
pop
or
lret
mov
sti
sbb
adc
xor
mov
add
jnp
push
ljmp
adc
jmp
icebp
lods
fiadds
lret
fwait
cli
cld
jge
popf
scas
xor
inc
pop
jg
dec
jl
xchg
bound
in
imull
idiv
mov
aas
mov
imul
mov
push
mov
movsl
mov
cmp
test
aad
sbb
xor
fs
sub
inc
nop
fstpt
adc
sbb
pop
push
aaa
lret
stc
into
push
sar
pop
inc
test
ja
and
mov
in
call
push
loopne
cmp
mov
jno
mov
pop
push
dec
inc
scas
mov
adcl
mov
add
or
icebp
push
xchg
ljmp
lods
test
push
outsb
repnz
in
scas
imulb
pop
addr16
push
test
mov
jns
or
mov
std
or
vshufps
jmp
ds
fbld
nop
lea
lret
daa
cwtl
or
cmpsl
enter
push
ret
scas
dec
inc
jbe
or
mov
xlat
mov
xor
mov
add
or
inc
jb
xor
mov
fldl
scas
mov
mov
loop
fidivrs
xor
lds
fsubl
mov
lea
dec
cmp
ret
sahf
mov
shlb
into
aam
lcall
jp
and
pop
dec
sbb
jo
mull
lods
in
push
inc
js
and
and
jns
and
adc
aad
aas
mov
and
pop
pop
or
dec
pop
insb
in
mov
add
and
clc
jns
ss
xchg
mov
fmuls
fsubp
inc
ljmp
xlat
adcb
and
shlb
in
or
or
cmpsl
sub
push
mov
stos
addr16
xchg
adc
push
rorl
mov
out
imul
xchg
insb
mov
or
rclb
les
cmp
popf
inc
scas
shrl
mov
jmp
popf
out
arpl
test
in
mov
jo
aas
xor
mov
mov
jns
inc
enter
je
retw
repz
add
pop
push
inc
add
loop
movsl
in
repz
dec
pop
outsl
pop
mov
push
xlat
mov
or
mov
xorb
dec
ret
dec
aaa
sub
sbb
imul
int
lock
and
push
jb
call
inc
popa
xchg
call
int
pop
out
jae
cmp
mov
or
mov
pop
xlat
sbb
aas
shl
add
lds
movsb
shlb
in
cli
jno
pop
mov
int3
or
cmp
sahf
xchg
rcrb
in
xor
ja
hlt
ss
lret
jne
mov
aas
aam
nop
jno
daa
test
and
jns
lcall
loop
or
iret
add
lret
fiadds
aad
ja
cmpsl
jnp
push
aas
ret
movsb
lock
sub
pop
ljmp
out
jbe
loope
adc
push
xchg
pop
outsb
jmp
jp
test
insb
lret
mov
movb
pop
jbe
repz
pop
pop
and
and
xchg
fwait
clc
push
mov
fidivl
iret
cmp
repz
pop
push
pusha
sub
push
mov
pop
outsl
or
pop
dec
sub
icebp
std
xorb
rorb
or
pop
jmp
cltd
shll
out
cmp
out
mov
stc
out
mov
cltd
jnp
mov
cmp
cmc
pusha
jne
popa
sub
mov
in
je
sbb
sbb
mov
lret
dec
loope
fcmove
push
test
in
mov
stc
je
rcll
mov
fsts
sbb
jecxz
pop
push
and
filds
mov
fcom
cmpsb
inc
sti
pop
and
inc
push
vpunpckhdq
scas
or
imul
rcll
jl
push
enter
loopne
bound
pop
icebp
lea
dec
iret
bound
sub
dec
push
mov
ret
stos
jge
push
sub
pop
jo
in
cmp
xlat
xlat
pop
mov
imul
xchg
xchg
jecxz
inc
or
pop
xchg
es
adc
movsb
add
and
daa
daa
sarb
sub
std
pop
sub
xor
ljmp
inc
orl
lahf
sbb
or
jb
pop
mov
bound
xlat
in
mov
dec
mov
adc
cli
mov
fcompl
mov
dec
sbb
sub
sub
push
aad
in
cltd
or
inc
xchg
data16
pmaxsw
rcll
jl
jge
jge
jp
pop
push
in
mov
lcall
insl
push
sar
lock
enter
mov
pushf
mov
pusha
mov
push
sub
sub
orl
push
mov
pop
inc
jb
ret
popa
push
ret
pop
icebp
dec
je
cli
xchg
sahf
ret
sbb
out
mulb
stos
lea
pusha
in
xchg
mov
int
das
xor
jae
mov
xchg
mov
jge
das
ljmp
push
inc
mov
mov
xlat
flds
push
cmp
out
and
mov
mov
out
adc
inc
push
push
popf
xchg
jo
rcll
imul
add
pusha
add
pop
ds
mov
mov
insl
xchg
imul
jne
sub
mov
lea
in
adc
insl
mov
das
mov
add
adc
jae
jb
mov
stos
inc
cmpb
fcoml
popf
mov
insb
inc
ss
mov
lock
pop
mov
inc
mov
pop
or
mov
ljmp
fadd
popa
pop
sbb
jp
cmpsb
sbb
xor
cmpsb
int
sbb
sbb
jno
push
pop
mov
xchg
icebp
test
sar
clc
cwtl
sbb
push
dec
ds
inc
movsl
pop
les
movsb
daa
stos
sbb
ja
and
or
scas
stc
int3
sbb
mov
adc
mov
jecxz
pop
mov
mov
push
test
cmc
fsubl
scas
sub
pop
ljmp
xchg
mov
test
fcoml
scas
insb
rolb
es
sbb
xor
mov
xchg
adc
cmp
jo
rcl
jnp
inc
xchg
cmp
pop
in
repnz
aad
fmuls
xchg
add
jne
pop
pop
inc
jbe
shr
test
ret
cmpl
pop
mull
lret
fisttpll
mov
hlt
in
sub
ret
push
ret
sub
push
stc
sti
push
inc
movsb
ret
fcomp
cmp
out
xor
jge
sbb
fucom
ds
push
or
fdivp
sbb
add
jecxz
inc
vmovups
fsubs
fnstcw
iret
mov
cmp
dec
sub
sahf
pop
ja
fisubrs
push
cmp
add
mov
sti
push
ss
fldl
jmp
insb
cwtl
fs
pop
xor
xchg
insl
jle
push
xlat
push
pop
push
sbb
mov
aad
out
enter
sbb
lret
xlat
int3
cmp
push
and
xchg
rorl
sub
testl
cltd
shll
rsqrtps
mov
int3
in
imul
jl
inc
scas
pop
push
xchg
iret
or
out
and
sbb
js
les
mov
jno
dec
mov
push
mov
in
mov
xor
pop
loope
push
inc
inc
sti
pop
repnz
iret
add
and
lcall
jmp
shll
dec
adc
lds
ds
inc
xchg
outsb
int3
xchg
ret
data16
push
sarb
ffree
add
iret
fildll
pusha
inc
pop
test
and
insb
mov
int
inc
pop
fdivrp
imul
lea
movsl
test
ljmp
aaa
or
mov
popf
jne
jmp
cld
je
sbb
mov
imul
fidivrl
fptan
repz
and
stos
jno
movsl
fwait
add
aam
lahf
mov
xor
ds
sbb
jo
xchg
add
jne
mov
cli
sbb
push
xor
inc
jg
mov
repz
shrb
mov
fcomps
add
movsb
pop
sbb
inc
movb
divb
sti
inc
loopne
mov
and
mov
in
jmp
sarl
adc
mov
xchg
or
dec
stc
inc
out
adc
or
div
rolb
test
add
mov
sbb
lock
imul
sbb
xor
fisubl
dec
pop
cli
sarl
data16
or
xchg
fs
enter
xchg
push
sarb
xchg
push
jecxz
xchg
or
sbb
mov
sbb
mov
jbe
add
cmpsl
pop
cld
cmp
lds
addr16
jnp
pop
dec
adc
push
icebp
add
popa
add
repz
pop
inc
adc
int
mov
or
nop
jl
xchg
negl
push
add
test
outsl
push
dec
test
pop
or
mov
test
mov
sub
pop
push
aaa
cmc
xchg
mov
out
ret
pop
fidivrs
push
mov
rcrb
cmpsl
dec
loop
or
lcall
dec
jae
in
lret
aaa
clc
das
cli
cmp
dec
mov
mov
inc
xor
or
shrl
in
in
or
fmull
mov
push
xor
mov
cmp
jecxz
sar
jno
mov
fcoml
lods
adc
push
les
popa
cmp
push
popa
push
push
adc
roll
fs
testl
cmp
xor
xor
jb
inc
mov
sarb
dec
inc
arpl
jl
movsb
dec
cmp
cli
or
xor
out
sbb
fldcw
add
mov
xor
mov
jns
movsb
mov
mov
mov
inc
or
hlt
bound
and
xor
insb
mov
fldcw
xchg
sub
mov
jg
call
test
and
arpl
push
add
dec
insl
les
std
dec
outsl
dec
cld
in
into
xor
lret
iret
mov
mov
insb
dec
cld
inc
push
sbb
ficoml
outsl
jbe
jb
minps
divb
mov
popa
adc
cli
frstor
push
inc
movb
icebp
std
jns
divb
mov
das
pop
inc
mov
into
aad
leave
sub
cmp
add
mov
pusha
xor
mov
int
dec
pop
mov
jecxz
aad
dec
shrb
cld
xchg
jle
icebp
test
sar
pop
leave
pushf
and
push
daa
xor
rorb
mov
mov
xor
sub
lods
sub
mov
insb
inc
scas
idiv
data16
xor
or
sub
inc
lahf
scas
jo
inc
bound
pusha
mov
inc
sub
std
dec
fistl
js
mov
mov
jecxz
lds
test
inc
js
insb
movsb
jl
jne
mov
lds
dec
push
jmp
pop
shlb
mov
xor
push
mov
xor
lods
and
lahf
sbb
add
in
andb
push
cmpsl
cltd
mov
int3
push
inc
iret
mov
sub
or
jo
test
cmp
mov
mov
adc
cwtl
jns
lcall
xlat
inc
enter
pop
mov
cmp
insl
ret
or
jo
cmp
push
movb
adcl
xchg
cltd
add
mov
cmp
fistps
bound
jp
xor
mov
xor
imul
decl
fcmove
pop
push
movsl
in
inc
pop
xor
out
xlat
push
das
or
mov
mov
mov
rclb
xchg
fdivs
inc
ss
xchg
icebp
pop
dec
add
and
ret
mov
addr16
js
call
lods
cli
sub
mov
jl
and
inc
cwtl
test
ret
inc
fwait
out
jle
fadd
jo
push
dec
cmc
adc
roll
cmpsb
jbe,pn
imul
pop
iret
int3
int
dec
leave
fistl
test
push
repz
sub
mov
sub
pop
xchg
movb
xlat
pop
stos
sub
ds
mov
cmovp
call
out
int
mov
ret
jb
loop
in
xor
xchg
fcom
cmc
adc
inc
push
das
pop
es
or
addr16
xor
adc
rcr
pop
mov
js
leave
jecxz
cs
adc
mov
int
dec
jno
add
test
and
jle
lds
sahf
jbe
push
cs
jno
adc
mov
cmc
jmp
daa
inc
daa
xor
iret
xor
mov
jbe
jmp
in
adc
push
std
call
mov
inc
clc
movsl
sub
dec
jnp
and
stos
stos
mov
outsb
dec
andb
cmp
int3
imul
ljmp
add
jb
and
inc
pop
mov
mov
testl
int
inc
xlat
bound
dec
xchg
push
cmpsl
ss
mov
xchg
dec
push
lret
pop
leave
jp
jge
mov
jno
sti
jno
pusha
xorb
jp
negb
int
cwtl
sub
and
es
ds
add
fdivl
adc
test
incl
xor
mov
rcr
cmp
cli
or
mov
sub
fs
mov
mov
out
repnz
arpl
aad
scas
addr16
cmp
push
push
sarb
cmpsl
fmull
mov
ljmp
pop
add
into
add
inc
cmp
repnz
outsl
or
push
lock
ja
mov
adc
call
mov
mov
adc
or
mov
xchg
notb
xor
push
jge
dec
aam
in
pop
dec
jb
lret
les
inc
cmp
push
cmp
rclb
ja
call
add
lret
push
cli
in
jmp
xchg
andl
cmp
fisttpll
mov
pop
cmp
push
push
push
sub
add
xor
adc
sub
test
or
xor
sub
aas
filds
cmp
sub
xor
imul
out
fstpt
push
xor
mov
addb
cmp
adc
int3
pop
repz
and
jb
shr
jo
psrad
and
shll
cmp
and
inc
mov
repz
enter
push
mov
ret
add
aas
and
add
xor
lds
push
clc
popf
mov
mov
addr16
dec
aas
addr16
mov
fs
xchg
pop
test
clc
lahf
insl
mov
jnp
sahf
jmp
add
outsl
sarb
xchg
out
out
cmpsl
adc
jg
inc
sub
testb
pop
cmp
cmp
clc
mov
sbb
filds
push
cmp
add
int3
pop
sarb
xor
adc
pushf
mov
not
pop
cs
push
lahf
inc
cmpsb
int
ret
test
lea
pusha
sub
sbb
stos
das
icebp
or
mov
out
inc
jge
xor
mov
sbb
jae
vmovhpd
jmp
jmp
xor
push
inc
in
fidivs
fidivrs
xchg
loope
sub
ljmp
mov
sub
out
jo
add
or
push
aam
cmc
or
hlt
cwtl
clc
and
pop
flds
jae
enter
lcall
jae
clc
test
lahf
sbb
xor
or
adc
adc
ret
xchg
sub
adc
sahf
cs
lock
xor
nop
push
loop
lock
shlb
sub
xor
in
outsb
aad
mov
and
mov
dec
inc
xchg
out
adc
and
and
mov
mov
jo
in
enter
lea
mov
mov
mov
lock
out
add
push
stos
jno
sahf
and
and
push
xchg
jmp
mov
mov
jp
inc
loop
sbbl
xor
mov
leave
hlt
mov
xchg
jmp
test
stos
lret
jb
int
inc
add
imul
movsl
mov
cmp
ret
and
rcl
pushf
sbb
aaa
inc
adc
in
mov
dec
lods
ja
cmpsl
pop
or
xchg
scas
pop
jge
pop
mov
leave
inc
lcall
cmp
ds
mov
add
adc
xchg
icebp
dec
inc
xor
mov
cmc
pop
iret
inc
push
jg
call
dec
mov
or
xchg
xor
dec
lcall
leave
jne
push
push
cmp
sti
xor
in
out
lea
adc
rcrl
xor
cmpsl
fdivl
imul
and
sub
sbb
push
rclb
ss
sub
add
mov
xor
push
add
ljmp
pop
mov
test
sbb
lods
push
in
imulb
add
cmp
scas
push
mov
pop
dec
pop
out
push
fidivrs
lea
adc
faddp
push
mov
jg
cmp
fistpl
rorl
jmp
hlt
jns
mov
lcall
cwtl
aaa
aaa
mov
divb
xchg
or
int3
pop
or
imul
push
xor
lea
loopne
fwait
xchg
cmp
call
add
add
in
test
mov
psubusw
jno
movsl
fisttpl
lods
popf
hlt
stos
enter
sbb
mov
scas
scas
cld
shl
push
addr16
je
enter
push
jp
pop
jp
xchg
ja
mov
jns
pop
out
xchg
inc
push
lcall
sub
mov
adc
imul
mov
aas
or
call
repnz
cmp
sahf
ss
xchg
ljmp
jge
cmp
dec
sbb
push
aaa
out
push
pop
repz
mov
sub
and
dec
sub
lcall
inc
ja
jecxz
jle
and
fwait
xchg
jmp
adc
and
push
sbbl
sti
clc
arpl
push
sbb
in
and
xor
ret
in
inc
push
dec
fcompl
not
fwait
jbe
push
mov
insl
nop
out
xorl
movb
fcomp
and
push
and
lret
shrd
jne
ljmp
sbb
pop
ret
jnp
cwtl
mov
adc
std
and
ret
in
dec
add
std
mov
scas
push
aas
in
pop
shrb
and
sub
xor
in
push
call
lcall
xlat
jle
adc
and
xlat
int3
push
sbbl
addr16
and
mov
aad
sub
out
push
mov
into
lock
movsl
push
mov
mov
in
adc
popl
sbb
push
sub
and
add
inc
das
decl
or
ret
add
xor
into
xchg
inc
and
rorl
shl
into
out
add
inc
dec
sbb
dec
loope
push
jecxz
xor
fyl2xp1
mov
push
mov
nop
int3
mov
xchg
jl
or
push
lock
jo
mov
repz
ds
loop
push
popf
dec
ficomps
leave
add
xchg
push
cmp
pushl
pop
insl
shll
mov
sub
and
mov
jle
mov
pop
jp
in
and
movsb
pop
inc
xor
sbb
push
cmp
pushf
inc
adc
and
push
inc
dec
inc
inc
cmp
sbb
or
jns
lcall
mov
ret
jecxz
outsb
push
dec
mov
mov
rcr
sbb
add
pusha
or
in
jl
inc
fwait
pop
sbb
sub
add
jp
arpl
pop
cmp
sub
cltd
xlat
xchg
jmp
cli
adc
xchg
insl
cmc
sub
xchg
dec
jnp
adc
lea
data16
cmp
gs
pop
mov
in
jnp
movsl
adc
call
clc
push
call
or
sub
cmc
dec
or
inc
xor
and
mov
inc
xchg
into
push
push
push
clc
in
mov
sbb
fidivs
inc
xchg
mov
loope
rorb
jbe
push
out
push
fcoml
mov
adc
faddp
ret
jmp
movsb
pushf
mov
jmp
cmp
pop
mov
pushf
jno
das
adc
rcr
pop
arpl
push
jmp
les
jo
push
ffree
loopne
cmpsl
test
and
adc
js
in
inc
pop
and
mov
cli
test
aaa
add
lcall
in
adc
fwait
jns
dec
and
dec
push
sub
mov
in
dec
inc
test
pop
or
dec
in
in
and
rcrl
roll
jl
cmpsl
dec
jmp
or
push
xor
movsl
lret
inc
sub
call
sub
lds
inc
push
add
push
into
out
andb
sbb
adc
mov
push
sub
mov
cmp
pop
fiaddl
xchg
push
loope
repnz
lcall
xor
sub
pushf
stos
push
jecxz
pop
jp
jns
xor
cmp
and
jecxz
mov
or
pop
mov
insl
call
rcrl
movsl
repz
mov
movb
call
lds
sub
aas
and
pop
push
inc
sbb
cld
pop
mov
xchg
mov
addl
push
mov
cmp
pop
inc
cmp
sbb
mov
mov
inc
jle
mov
fwait
sbb
push
cmp
int
jae
mov
mov
or
jl
mov
sbb
mov
pop
aaa
int
mov
inc
gs
mov
push
xchg
sahf
fcom
inc
fisttps
sub
dec
and
mov
xor
pop
sbb
push
aaa
mov
cmp
gs
lret
jnp
cmp
fwait
adc
mov
adcb
aad
mov
lods
jle
in
add
test
inc
fistl
lahf
cltd
push
imul
cld
pushf
adc
loopne
call
jb
jmp
mov
in
add
xor
inc
sbb
xchg
and
mov
divl
out
sub
xchg
dec
and
push
pop
jge
outsl
mov
and
mov
gs
fcoms
jo
push
mov
mov
sarl
std
stos
or
jp
outsb
lods
or
mov
in
roll
mov
xchg
arpl
aad
fwait
jne
push
jbe
leave
movsb
in
lock
movsb
fcomps
aas
std
inc
push
xchg
popf
popf
dec
mov
adc
ja
mov
cmp
pop
xchg
hlt
push
fwait
iret
and
push
dec
xchg
je
sub
xchg
aam
cmpsl
cld
adc
lds
xchg
dec
dec
jecxz
sti
cltd
mov
sbb
sbb
daa
cmp
dec
subl
in
jle
push
in
add
inc
test
mov
int
js
mov
or
xchg
cmpl
adc
aam
icebp
fbstp
ljmp
int3
dec
pop
fistpll
pop
cwtl
rorb
jo
aad
sub
test
fistpl
inc
test
hlt
sbb
mov
test
xchg
jne
cmp
mov
sahf
shlb
and
sbb
cmp
lock
shll
cmpsl
negb
mov
cwtl
das
mov
aad
jg
call
call
adcl
pop
xchg
cmp
aad
pushl
cmp
fs
popf
push
pop
jne
fimull
xor
call
nop
cmc
call
sbb
xor
cwtl
mov
in
mov
arpl
lods
stc
lahf
sbb
cmp
mov
or
pop
push
cmp
add
in
mov
outsl
inc
ja
movsb
lods
stc
addr16
jp
xor
subb
pusha
jae
xor
jns
cli
andb
sub
sub
jecxz
ljmp
pop
and
fildll
inc
mov
mov
iret
push
cmp
outsl
jecxz
push
inc
sub
lcall
dec
add
adc
push
and
xor
lock
in
mov
dec
pushl
stc
repnz
cmc
add
psllw
inc
mov
clc
xchg
and
js
loop
xor
mov
pop
out
cmpsl
push
imul
mov
mov
test
cmpsb
sarl
in
int3
lds
movsb
insl
xor
xor
idiv
adc
xor
cltd
pop
out
outsb
pop
daa
js
inc
lcall
loope
std
pushw
jecxz
sub
cmpsl
test
test
jmp
sbb
lcall
sbb
lods
mov
and
add
push
xor
rcr
sbb
jle
inc
jae
arpl
add
jne
pushf
mov
stos
jo
repz
jp
and
sub
mov
pop
les
cmpsb
test
adc
repz
iret
inc
mov
mov
xchg
push
ja
stos
dec
lds
mov
sub
imul
mov
mov
mov
pop
and
inc
mov
or
into
mov
testb
arpl
pop
xlat
cmp
sbb
inc
and
lcall
pop
mov
sub
mov
jbe
sub
mov
push
clc
xchg
pushf
loope
adc
cli
mov
xchg
fdiv
push
jecxz
lods
mov
push
pop
dec
cmp
push
xchg
loop
mov
pop
movsb
lods
sub
into
cmp
in
loopne
fwait
and
xor
cmp
rclb
cmp
add
push
scas
lea
inc
mov
cmpsl
sub
jo
mov
or
test
out
xchg
mov
cli
dec
xchg
sbb
loope
aaa
sbb
loopne
inc
xchg
stc
mov
fs
cld
add
xchg
ja
leave
cmp
outsl
and
sahf
test
push
bound
lcall
fisttps
and
testl
xor
xor
stc
movsb
jb
std
cmc
mov
cmp
and
or
inc
sbb
mov
push
jge
test
pop
cmpsb
lock
and
imul
push
lret
mov
inc
jp
imul
dec
jge
cld
push
daa
xor
pop
mov
and
add
outsb
xchg
or
mov
in
and
call
sti
adc
xchg
add
jg
iret
sahf
inc
mov
mov
into
mov
int3
inc
mov
fstl
jne
prefetch
dec
test
and
in
pop
pop
mov
shl
xchg
js
shrl
imulb
inc
popf
lds
addr16
pushf
mov
inc
push
mov
fs
mov
and
fwait
dec
arpl
dec
jg
inc
int3
push
mov
pushf
mov
lahf
push
xor
lret
mov
mov
addl
xchg
mov
dec
sub
arpl
cmpsl
mov
or
scas
ret
push
jo
dec
fstl
push
xor
fimuls
push
cmpsb
cmpsl
out
mov
push
lods
mov
fdivs
ficoms
cli
hlt
pop
mov
mov
mov
xchg
aas
subl
jne
ret
fdivl
mulb
fucom
cmp
cmpsb
pop
scas
pop
out
mov
push
and
jae
sub
je
mov
loop
aad
in
or
mov
xchg
ret
mov
stc
cld
popa
enter
sbb
push
jle
sbb
testb
pop
ficoml
lret
ss
in
aam
add
pop
xor
das
mov
lret
dec
aad
adc
xchg
roll
lods
xchg
inc
push
fldl
in
pop
fdiv
in
jge
imul
jnp
pop
push
add
adc
je
xchg
adc
inc
repz
in
adc
lds
sbb
lods
adc
adc
int
mov
ss
or
pop
pop
pop
mov
jb
sub
nop
scas
pop
mov
cmc
icebp
pop
mov
xor
popf
fisttps
fdivrl
xchg
dec
cmp
fs
cmp
pop
pusha
dec
xor
or
xor
rcpps
fcoms
dec
jne
scas
fldl
mov
or
dec
sub
sbb
movsl
adc
leave
dec
dec
shl
aas
aas
cmp
movsl
dec
jle
aam
test
addb
mov
jle
out
faddl
js
arpl
adc
jmp
pop
push
out
lret
lods
movsb
dec
xchg
rcrl
cli
shl
adc
jg
cmpsl
mov
stc
and
lea
jae
sbb
hlt
add
frstor
rolb
dec
fiadds
dec
push
imul
mov
cwtl
mov
int3
in
inc
popa
in
mov
and
in
xchg
cmp
cwtl
fadds
jg
push
nop
add
shll
jnp
fldl
subl
mov
push
inc
mov
les
loope
stos
or
dec
mov
repz
jmp
xchg
mov
mov
jle
adc
xchg
jl
jl
add
push
inc
daa
xchg
sbb
dec
leave
push
adc
lea
push
jns
bound
mov
push
or
xor
stos
jp
sbb
mov
xor
neg
mov
imul
jbe
int3
adcl
push
mov
insb
sbb
dec
sar
pop
mov
push
addr16
enter
aam
xor
mov
add
dec
mov
lds
push
lret
inc
shl
mov
imul
mov
aad
das
fs
pushf
pop
cli
add
imul
das
mov
pop
adc
loopne
xchg
andl
sbb
orb
mov
or
xchg
bound
add
loopne
lret
inc
xchg
xchg
movsl
add
and
pop
stc
sti
sti
pusha
mov
add
mov
cld
jo
mov
xor
xchg
dec
inc
push
lahf
ss
movsl
lods
jg
cmp
or
testb
leave
imul
lret
jl
mov
pop
push
iret
sbbb
sbb
imul
cmp
rcrb
lock
push
outsl
cld
mov
xor
rclb
orb
xchg
inc
jae
xchg
mov
mov
push
into
pop
movsl
pop
fisubs
jns
call
and
mov
pushf
xor
test
dec
mov
cltd
daa
mov
rcl
and
je
icebp
add
push
push
sub
aad
mov
sub
jo
cmp
jno
insb
push
jg
sbb
xchg
fimuls
dec
lods
or
in
add
outsl
icebp
dec
or
mov
fcmove
jge
xor
lods
pop
mov
mov
and
xor
sbb
xorl
aas
insl
and
popf
imul
cmp
nop
adc
out
ret
cmp
lods
das
ljmp
inc
dec
mov
jle
rcll
sahf
push
xchg
sti
jle
enter
add
pop
mov
repz
fstpl
rorl
sbb
repnz
inc
cltd
outsb
outsl
cli
jp
sub
cmp
lods
popa
shlb
fistpl
pushf
in
jbe
jge
pop
mov
or
push
push
dec
pop
lcall
mov
sbb
leave
pop
mov
sarl
sub
pop
shl
xchg
adc
into
loope
hlt
daa
les
mov
and
inc
xor
jg
adc
pop
mov
icebp
out
mov
or
jecxz
mov
sti
stos
or
jmp
outsb
test
push
and
mov
out
add
xor
or
sti
adc
xor
aaa
push
cs
cld
jne
ljmp
push
cmp
push
int
inc
sub
pusha
xchg
popf
adc
stos
and
out
or
decl
xchg
adc
xchg
sbb
lock
sbb
outsb
cwtl
dec
xchg
xor
aam
popf
bound
xlat
in
pop
pushf
xor
mov
orl
dec
jae
das
mov
loopne
mov
adc
iret
sbb
jae
pop
vpsrlq
es
fcomps
mov
push
jle
imul
and
fnstenv
cmp
jnp
shrl
sub
outsb
or
xor
push
lds
cwtl
cs
jg
into
leave
lods
ret
sarb
pop
push
insl
xor
add
inc
inc
scas
insl
xchg
test
jecxz
out
shrl
mov
fwait
mov
insb
testl
add
fwait
out
xor
or
pop
stc
lcall
xchg
push
fwait
mov
and
mov
push
faddl
add
push
jae
cmc
adc
lea
cwtl
mov
js
pop
sub
xchg
movlps
sub
insl
sbb
cld
lret
nop
sti
aam
insb
jp
mov
test
call
repz
imul
clc
popa
test
lods
pop
cld
mov
cmc
rolb
xor
fdiv
sbb
inc
jne
adc
orl
cmp
out
in
pop
dec
test
cmp
out
or
lahf
popa
ss
les
jg
mulb
push
or
pop
mov
lock
ret
test
and
mov
xchg
dec
test
test
mov
sbb
mov
sub
mov
xchg
fistps
lret
ret
dec
cmc
and
sbb
mov
ljmp
sub
sub
loope
adc
ret
enter
mov
imulb
mov
cmpsl
stos
mov
in
pop
loopne
cli
xchg
bound
or
ffree
inc
xlat
bound
arpl
lock
clc
or
hlt
cmpsl
mov
xor
jae
cmc
mov
into
jo
jnp
push
dec
je
test
xchg
aad
aaa
jg
lahf
and
mov
ljmp
inc
add
push
shr
insb
outsl
pop
mov
movb
outsl
cmp
lock
dec
ret
push
or
mov
insb
inc
push
sub
push
in
addr16
cltd
or
fmul
xlat
cmp
xor
sbb
in
lret
das
pop
int
testl
xchg
jl
lret
dec
adc
clc
xorl
adc
push
ror
test
das
daa
ficomps
test
movsl
and
adc
dec
sub
jno
mov
sub
dec
mov
ja
xchg
lret
mov
push
pop
loopne
shll
xor
push
scas
movsb
xor
push
xchg
pop
and
adc
push
and
insb
adc
cmpb
adc
jno
mov
cmc
faddl
call
aad
or
adc
sti
lds
dec
lods
es
push
out
sub
insb
sahf
inc
test
add
adc
popf
out
and
add
mov
test
sarb
jmp
cmpsl
mov
roll
stos
jnp
pop
pusha
insb
rcll
imul
cmp
dec
xchg
jnp,pt
pop
lret
imulb
mov
mov
mov
test
insb
cmc
mov
sti
lods
jb
xor
and
testb
bound
push
ret
testl
jns
pop
inc
mov
sub
adc
dec
sub
pop
mov
pop
push
lea
inc
clc
inc
aad
cmp
jno
sbb
mov
addl
add
pop
pushf
cwtl
setne
xor
pushw
fisubrs
mov
fcoml
pop
jb
mov
mov
pop
mov
mov
lcall
sub
cmp
dec
test
mov
bound
pop
mov
insb
or
aaa
sub
cs
sti
stos
scas
sahf
sub
sarb
arpl
adc
sbb
and
shrl
inc
xchg
cs
xor
dec
jge
aad
adc
mov
subb
xor
xchg
pusha
jo
or
jl
shll
insl
fdivs
andl
mov
xchg
mov
lods
jb
push
mov
test
leave
xor
popa
push
lahf
xor
push
insl
pop
jne
mov
mov
and
sub
mov
cltd
cld
setnp
sbb
mov
in
dec
inc
inc
lret
out
fwait
add
pop
imul
inc
fildll
and
xor
out
bound
test
push
xchg
mov
cmp
enter
cltd
rcrb
ljmp
add
mov
fimuls
pop
iret
pop
push
testl
pop
or
mov
pop
xchg
clc
jnp
sub
bound
out
mov
adc
mov
jmp
xchg
cltd
mov
shlb
xor
dec
mov
iret
xchg
aam
test
fs
push
xor
xor
fisttpll
xchg
ret
lea
xor
push
mov
sbb
or
xor
fnstsw
and
inc
enter
outsb
sarl
into
or
mov
xchg
test
repz
clc
fists
add
or
cmp
shll
mov
xor
outsb
inc
movsb
fidivs
incl
inc
daa
stos
aam
cmp
aam
popf
or
sar
xchg
jmp
lods
mov
addr16
fcomi
dec
pop
in
and
gs
std
add
cmp
es
dec
inc
sbb
lret
mov
movsb
aas
jb
loope
in
in
cmpsb
adc
and
repz
icebp
sub
jle
cmp
out
adc
sbb
fdivl
dec
jl
xchg
cmpsl
push
add
cmp
push
andb
cmc
push
bound
xchg
pop
dec
xchg
ds
mov
enter
arpl
shlb
xchg
mov
fsubp
in
nop
fcoml
cmp
inc
sub
lock
xchg
roll
sbb
pop
and
jae
pop
hlt
fstpl
mov
cli
or
push
testl
jp
sbbl
jg
adc
fsubrl
adc
int3
outsl
les
pushf
cmp
xchg
scas
and
aas
into
jne
out
jecxz
inc
nop
sbb
mov
je
scas
mov
jl
dec
sbb
cwtl
movsb
arpl
vpmovsxwd
xor
test
cmp
sarl
stos
push
stc
pop
pop
lcall
xor
cld
shrl
add
fucom
lret
mov
aam
das
xchg
leave
cmp
js
mov
or
mov
cld
pop
jg
mov
add
push
inc
into
je
cmp
xchg
popf
in
push
xchg
pop
fmuls
inc
testb
dec
push
mov
mov
fnstenv
sbb
and
ds
dec
mov
test
xor
arpl
fstpl
push
xchg
adc
adc
int3
icebp
add
push
pop
mov
or
mov
movsl
lods
rcl
rcll
push
out
xchg
je
push
ficomps
fisubrs
mov
push
sbb
addb
js
call
inc
das
inc
sub
hlt
xlat
clc
mov
jb
lds
loop
adc
cli
lahf
in
subl
es
jg
mov
pop
pop
lar
data16
andb
ret
stc
imul
mov
in
adc
xchg
test
pop
jle
pop
or
daa
sub
jmp
xchg
jecxz
mov
cmc
in
sbb
je
pop
xor
movsl
push
test
hlt
xlat
jmp
xchg
out
push
mov
mov
dec
ljmp
add
lea
jo
andl
mov
xchg
mov
inc
mov
inc
dec
imul
fsubr
cmp
loopne
push
loop
imul
clc
xchg
je
test
and
push
ja
int3
ficoml
mov
jl
out
jb
mov
aas
stos
jns
or
je
lods
std
jle
fsubl
xchg
movsl
jmp
xor
xchg
jne
adc
in
lock
lock
loope
int3
pop
nop
pop
out
or
dec
add
sti
inc
add
lds
divb
aam
inc
aam
icebp
aas
movsl
testb
dec
push
jnp
sub
mov
jnp
mov
repnz
inc
mov
notb
mov
mov
arpl
xchg
arpl
stos
movsl
les
jbe
call
icebp
pop
mov
sbb
jno
das
dec
fidivrl
mov
pop
add
mov
ss
mov
cmpsl
nop
add
inc
icebp
push
out
dec
in
push
mov
rcrl
adcb
push
inc
int3
aad
fdivl
icebp
shll
and
jmp
cmpsl
add
mov
mov
fwait
xchg
mov
rol
lods
imul
jle
js
xor
sbb
movsl
jo
sbb
out
scas
sahf
and
xchg
gs
in
or
subb
or
shlb
sub
imul
cli
arpl
pop
aam
add
sub
cld
sbb
addr16
test
jnp
mov
stc
adc
add
ret
mov
pop
add
out
les
inc
dec
jl
xchg
movsl
push
lock
cmp
mov
dec
imul
sbb
or
push
push
push
sub
mov
cmpsb
push
in
push
mov
daa
mov
xchg
cmpl
pop
xorb
clc
roll
adc
lea
or
mov
add
nop
and
lahf
movl
cld
add
mov
mov
ret
xchg
bound
ljmp
push
sti
xchg
sbb
pop
sti
push
lret
push
loopne
sub
es
fbstp
mov
fcoml
addb
and
mov
sub
dec
add
inc
cmpsl
imul
jns
subl
or
dec
push
cwtl
jnp
cs
bnd
fwait
rcl
or
mov
sti
popf
pop
cmc
roll
ss
sub
test
or
mov
sub
iret
xor
orl
jnp
mov
jp
idiv
lcall
div
or
addr16
or
arpl
inc
popf
dec
test
mov
jle
push
push
pop
xchg
add
sbb
out
jnp
add
mov
aam
cmp
das
jge
icebp
leave
and
lock
sahf
jbe
ltr
loop
fwait
in
nop
dec
or
popa
push
jmp
cli
jge
dec
jne
jmp
call
inc
das
scas
shlb
icebp
mov
fwait
hlt
scas
fldl
popl
xchg
push
mov
cwtl
ja
ja
shll
pop
xchg
xchg
mov
lea
dec
lods
call
jnp
jp
sbb
sub
out
or
and
push
lea
cmc
clc
adc
mulb
xchg
nop
pop
xchg
add
push
cmp
test
loopne
addr16
sbb
push
mov
inc
sub
pop
dec
lret
mov
sbb
sbb
mov
jno
andl
pusha
out
sbb
ucomiss
jl
fcompl
aas
push
sub
sub
sarb
dec
je
or
lcall
push
jecxz
inc
test
pop
sbb
mov
jo
push
int3
icebp
popf
je
or
xorb
pop
xlat
ja
or
loope
mov
popa
jmp
stos
divl
cltd
sub
mov
int
xor
aas
movsb
and
rolb
imul
loopne
inc
insl
daa
jecxz
ljmp
je
loopne
jle
and
enter
ljmp
jno
dec
adc
cs
mov
out
xchg
push
xor
ret
gs
inc
repz
mov
xchg
inc
stos
cmp
stos
addr16
mov
mov
pop
pop
fs
insl
pushf
jbe
pop
xlat
pop
out
add
adc
jle
jecxz
mov
push
das
outsl
jae
jno
test
cmp
xchg
xchg
push
pop
insl
add
cwtl
insl
imul
popf
out
inc
loop
out
pop
jb
xor
into
and
or
rorl
ds
loopne
push
movsb
pop
loopne
aaa
fiadds
fidivrs
int
pop
imul
push
mov
sbb
fdivrp
pusha
xlat
out
ds
int
add
mov
stc
addb
sub
mov
out
xor
push
push
aaa
es
cmc
out
sbb
pop
hlt
mov
xor
xchg
and
jno
ret
jne
fneni(8087
fs
int3
push
and
jae
push
xor
je
test
pop
sub
mov
repz
aaa
std
js
pop
push
imul
push
inc
mov
sub
xchg
cwtl
xor
mov
push
repz
or
pop
or
xchg
xchg
icebp
sub
add
or
mov
push
filds
ljmp
les
adc
jno
push
xchg
xchg
inc
movsb
mov
or
out
out
cltd
cmp
adc
mov
inc
ds
fnstenv
jo
sbb
imul
mov
stos
call
fsubs
push
fwait
jno
lcall
out
jmp
cmpsl
adc
dec
test
push
xchg
mov
lret
lock
push
cld
adcb
push
clc
rolb
or
cmp
fimull
cld
mov
test
call
aam
popa
pusha
cmp
pusha
mov
mov
cmp
dec
dec
lods
xor
lahf
scas
mov
mov
test
pop
repnz
adc
pop
cmp
mov
aas
cmpsb
or
dec
addl
xlat
test
inc
idiv
es
test
loop
nop
pop
mov
add
pop
into
jb
sbb
sahf
push
rolb
test
ja
mov
movsb
sbb
and
push
mov
divb
test
mov
and
shrl
leave
cmp
movsl
push
mov
and
jnp
sub
repnz
popa
mov
xchg
cltd
fstpl
mov
jge
cmp
push
movsl
sbb
dec
test
sbb
in
push
add
mov
mov
mov
sbb
xchg
cmp
push
aaa
sub
inc
hlt
je
add
movb
pushf
dec
insb
and
or
lret
xchg
cmp
push
sahf
aam
dec
sub
addb
push
lcall
lcall
test
dec
insb
addb
jp
fs
fidivrl
cmc
movsb
fsubr
xor
out
mov
or
sub
or
cmpsb
out
inc
cmpsb
xchg
ret
or
lret
lahf
sbb
cmp
pop
jl
adc
test
pop
mov
mov
aaa
test
xchg
mov
xor
and
pop
jp
push
sti
int3
hlt
gs
cmp
or
in
and
dec
fstpt
and
jge
loope
xor
add
mov
and
push
stc
add
dec
testb
cmp
popf
jo
lods
bound
sbb
push
xlat
ljmp
sub
cmc
incl
sub
jge
add
aad
cmp
mov
adc
inc
push
sub
popa
xchg
ljmp
push
popa
jecxz
sub
mov
jno
mov
das
pop
and
repz
dec
xor
jecxz
mov
lods
push
add
mov
movsl
imul
andl
adc
cmpsb
mov
mov
lcall
cmp
pop
mov
cmp
or
lods
cmp
or
aas
jnp
jg
mov
enter
clc
push
out
or
push
and
cld
and
sub
sub
cmc
jle
pop
add
repz
push
sahf
pop
inc
dec
pop
xchg
adc
pusha
adc
cli
leave
outsl
popf
out
sbb
cmp
test
inc
decl
jecxz
ret
add
std
rcl
add
sub
sbb
cwtl
fcmovne
add
mov
cmpl
cmpsl
mov
dec
mov
jno
mov
out
add
mov
push
movsl
jl
int
xor
popf
clc
std
in
dec
jo
fisubrl
cmpsb
cs
or
push
aad
stos
mov
shll
clc
imul
push
push
xchg
cmp
cs
push
mov
lret
enter
mov
push
push
jmp
xor
loope
xor
pop
push
stc
mov
xlat
aas
mov
inc
data16
fs
mov
mov
std
jbe
ds
mov
mov
pusha
stc
sub
cmp
in
sahf
ljmp
inc
or
fisttps
ret
mov
lahf
shrl
nop
sub
int3
xchg
dec
lcall
out
mov
std
adc
inc
lds
stos
push
adc
jb
lret
push
jo
dec
jno
daa
mov
sbb
inc
sub
dec
add
mov
xorl
fld
mov
mov
jae
inc
inc
fimuls
sub
pop
loope
into
call
add
sub
push
or
clc
xlat
ret
cmp
xor
int3
sbb
iret
cld
xor
mov
sar
scas
and
jb
pop
push
scas
xlat
test
xchg
jmp
lods
enter
adc
and
cmpsb
cs
orl
scas
pop
push
mov
mov
xchg
loope
xor
pushf
push
mov
in
mov
push
cmc
aaa
mov
aad
arpl
add
leave
push
cmpsb
adc
popf
fsubl
mov
stc
mov
jecxz
mov
xor
inc
dec
clc
inc
sbb
enter
testb
push
andl
pop
dec
dec
pop
test
mov
test
push
addr16
jle
int
movsb
aas
daa
lock
mov
xor
xchg
pusha
test
mov
xchg
sarb
dec
or
adc
xor
inc
inc
aad
mov
rol
xorb
out
sti
addr16
and
add
dec
fwait
push
es
jno
ja
jbe
xchg
mov
sbb
rolb
cwtl
imul
lret
mov
call
scas
push
in
call
jbe
dec
cmp
xor
nop
sbb
inc
test
pop
xchg
repnz
mov
pop
cli
push
cmpb
pop
cmp
jns
repz
push
scas
jns
pop
dec
sub
bound
mov
sbb
lock
mov
popf
cmp
sti
movsb
jle
adc
push
sete
js
js
and
daa
loop
push
out
push
xchg
xchg
push
aaa
sbb
out
inc
inc
jae
cmp
lahf
test
mov
fstp
fcmove
in
stc
lds
inc
out
nop
stc
inc
xchg
sti
xchg
xchg
cmp
aad
lock
cs
sti
and
push
push
dec
rorl
ret
in
inc
aas
jo
scas
and
pop
and
popa
sub
lret
in
pminub
test
dec
mov
cmpsb
std
pop
cmp
nop
fidivs
inc
inc
jg
xchg
mov
push
dec
pushf
xchg
xchg
adc
das
es
loopne
into
frstor
repz
pop
mov
in
cmp
aas
or
pop
jae
sub
ret
roll
mov
dec
jns
adc
jle
mov
sub
repnz
mov
jnp
iret
sub
add
sub
push
lods
adc
sub
fstps
push
push
shl
rcrl
inc
pushf
cmp
and
lea
xchg
cli
fdivr
movsb
jg
inc
mov
jne
aas
pop
leave
jnp
add
dec
std
cs
or
or
in
sub
push
mov
mov
les
xor
or
movsb
pop
rclb
mov
sbb
and
mov
into
inc
cmp
test
dec
xor
and
jae
pop
lock
cmpsb
sbb
sarl
out
pop
cmpsb
add
mov
shl
jno
mov
adc
xchg
addl
jle
xor
vshufpd
inc
pop
data16
daa
sahf
ja
mov
xor
loopne
fistl
xor
mov
imull
loopne
xchg
cltd
xor
xchg
int3
in
mov
fwait
pop
sub
cmpsb
mov
les
jae
pop
repnz
cli
mov
lods
sub
cmpsl
jp
les
pop
pop
inc
loopne
cmp
sub
push
fxch
outsb
adc
xorb
sbb
gs
add
std
dec
imul
loope
pop
cmp
xorb
and
call
out
jno
adc
push
lods
orl
shlb
cwtl
out
sahf
inc
jl
subb
jge
outsb
pop
das
int
add
int3
mov
ds
outsw
mov
dec
inc
xchg
mov
cmpsb
push
mov
pop
aaa
js
cli
push
adc
xchg
and
subl
ss
mov
mov
adc
inc
mov
xlat
add
and
mov
jp
mov
lock
and
sbb
loop
dec
jl
push
arpl
imul
loop
sbb
lea
mov
loopne
fisttpll
add
in
mov
mov
outsl
popa
mov
mov
push
push
xchg
pusha
fistps
int
sbb
fcmovnb
jle
test
js
loop
inc
shlb
pop
arpl
outsb
loop
sub
aam
lds
add
dec
xchg
mov
rorb
xor
xor
xchg
lahf
stos
xor
jnp
je
mov
xchg
sub
add
fimull
mov
stos
push
sar
in
cmpsb
sarb
push
das
xchg
dec
xchg
mov
sub
scas
jl
sbb
fwait
int3
pop
cmp
popa
push
test
push
in
push
inc
jmpw
pop
cmpsl
adc
mov
cmpl
jge
ja
jmp
sti
popa
popa
or
xchg
test
enter
mov
andl
and
sub
mov
sub
movd
aaa
leave
incb
cld
mov
pop
sub
sbb
fstpt
dec
add
mov
std
ss
mov
push
lret
mov
lret
and
rcll
inc
add
outsb
and
jecxz
lahf
int
inc
imul
aad
push
or
jp
cwtl
pop
push
dec
movsb
pop
adc
mov
lods
mov
nop
imul
inc
pop
pop
adc
movsl
and
sub
adc
pop
test
dec
xor
andb
sbb
jno
adc
or
fwait
adc
push
xor
adc
popf
scas
les
hlt
stos
jecxz
sbb
add
dec
jo
aam
mov
mov
or
add
push
pop
shlb
push
push
push
ud2
sbb
aam
mov
adc
jge
repnz
xor
daa
jp
mov
sub
daa
mov
cmp
fxch
dec
mov
mov
mov
js
mov
ljmp
faddl
jl
movsb
adc
movsl
in
fwait
xor
stos
lea
adc
movsl
dec
shll
inc
dec
call
imul
iret
out
mov
imul
xchg
sbb
fcmovb
pop
jnp
ja
jp
sbb
push
call
lahf
test
mov
rorb
ret
inc
dec
fdivs
inc
sub
dec
pop
jb
or
jno
adc
mov
clc
sti
call
pop
arpl
fstl
daa
push
notl
jno
aam
xor
cmpsb
test
repnz
dec
outsl
fcomip
xor
fwait
cmp
enter
clc
add
adc
xor
pop
add
shr
inc
mov
int3
andl
loop
hlt
dec
push
movsl
lods
inc
pop
mov
jl
pop
mov
sbb
mov
ds
sub
mov
stos
mov
lds
jbe
sbb
sub
xchg
fsubrs
bound
push
je
adc
mov
and
push
xchg
xor
cld
xchg
popf
mov
jns
push
and
xchg
fld
xor
gs
nop
and
fldl
hlt
mov
dec
mov
les
mov
xchg
andl
insb
mov
les
fisubl
inc
lcall
out
sbb
adc
popf
xchg
ret
and
bnd
in
cwtl
sub
shl
push
push
xlat
pop
xor
push
jns
fildll
js
pop
adc
aad
xchg
dec
lods
xchg
xor
inc
pop
cmpsl
int3
pop
stos
mov
mov
inc
pop
in
mov
jae
sbb
fucomi
push
xchg
int
aas
inc
bound
cmp
addr16
mov
insb
sbb
out
dec
jne
pcmpgtw
mov
cmp
push
inc
je
xlat
mov
clc
lds
add
mov
adc
std
add
add
push
ret
push
ficoms
mov
movsl
adc
push
mov
das
jne
clc
je
loopne
xlat
rolb
mov
popf
sub
shlb
iret
enter
inc
xchg
hlt
push
maxps
imul
ljmp
ljmp
out
lods
in
aas
in
repnz
enter
push
push
push
movsl
rcl
and
int
das
int3
push
stos
push
std
into
dec
pop
lahf
stos
mov
jno
xorl
pop
and
xor
fisubl
adc
pop
daa
push
cmovo
inc
out
scas
adc
cli
dec
adc
mov
add
inc
cld
outsl
add
pop
xchg
stos
and
cmc
mov
mov
mov
pop
fsubs
xlat
fldt
pop
scas
mov
push
push
mov
mov
sub
or
dec
pop
mov
scas
outsl
pushf
rep
arpl
shrl
adc
jb
sbb
xor
stos
in
repz
mov
jl
cmp
cmp
xor
into
cmp
aaa
in
test
mov
pop
push
sbb
test
sar
mov
sub
test
inc
cmp
test
or
jp
cld
in
movsl
jmp
pop
push
xlat
adc
fdivrl
fdivl
sub
sbb
mulb
mov
or
or
dec
ss
xchg
xor
cmp
jo
mov
sbb
mov
pop
andb
les
jns
xor
pop
es
push
cmp
mov
inc
mov
shlb
xchg
xor
ss
inc
dec
xor
xchg
jo
jg
add
icebp
sbb
sub
sbb
xor
dec
adcb
cmp
arpl
push
or
lcall
aaa
pop
mov
jmp
mov
mov
dec
das
dec
cmp
fnstenv
rcll
xchg
mov
adc
mov
lahf
jle
adc
xchg
faddl
out
jbe
push
add
sub
jl
sar
cmp
cmpb
clc
fimuls
ror
mov
stos
movsl
jmp
out
fmul
es
cmp
adc
mov
and
jne
pop
pop
mov
xchg
decb
shll
pop
out
fiadds
jp
stos
inc
cmp
int
lds
fnsave
mov
loop
mov
cld
mov
sbb
sub
and
and
jo
insl
mov
stc
or
arpl
dec
test
add
dec
loopne
test
pushw
mov
cmp
xchg
and
push
lcall
mov
shlb
or
lods
sbb
leave
push
add
mov
cld
lds
shlb
test
dec
test
aam
aam
jno
adc
lret
push
add
jl
insb
mov
jnp
adc
pop
cmpl
adc
pop
cmp
fnstenv
dec
push
mov
test
inc
xor
lds
rclb
jo
push
sub
jmp
and
and
es
clc
mov
cmp
mov
aad
cmpsl
cmp
mov
pop
mov
in
pop
adc
in
xchg
icebp
adc
aam
hlt
cld
inc
test
lea
and
mov
mov
int
sbb
movsb
repz
push
push
xchg
pop
dec
imul
ret
and
outsb
es
add
adcw
inc
jp
scas
lock
jp
push
scas
xor
cmc
js
jp
js
jmp
sub
rcrb
sbb
xchg
js
dec
pop
loopne
out
loope
ret
sub
sbb
push
fistpll
sbb
cmpsl
jnp
test
adc
fdivr
dec
bound
mov
mov
add
lock
test
out
mov
adc
outsl
add
ficoms
cmp
mov
jl
int3
aad
mov
idivb
rclb
mov
mov
mov
adc
inc
cs
jg
jg
aaa
jo
add
xchg
jecxz
aas
cwtl
push
outsl
ja
fnstsw
hlt
sahf
icebp
rcrb
adc
stc
xorl
dec
outsb
sub
mov
inc
insb
or
mov
loop
inc
fwait
les
es
push
enter
jno
nop
ret
jnp
pop
imull
mov
sti
add
jge
mov
jae
mov
jae
test
add
test
int3
in
push
dec
stc
mov
scas
cmp
loopne
popf
mulb
xor
add
push
add
mov
dec
and
cmp
jp
pop
adc
sbb
jle
xchg
sbb
popf
mov
dec
xchg
inc
xlat
lea
popa
cmp
mov
imul
or
mov
stc
test
iret
adc
into
push
movsl
xchg
mov
add
inc
xor
ret
jl
sub
inc
int
sub
or
push
mov
movsb
fnsave
jb
aam
sbb
adcb
mov
jge
imul
outsl
mov
mov
xchg
jecxz
pushf
mov
dec
in
mov
int3
add
andb
iret
mov
mov
shlb
mov
mov
fadds
popf
xchg
or
daa
cltd
push
jae
add
ret
ret
hlt
mov
mov
insb
arpl
clc
int
fcomps
das
dec
cli
and
insl
pop
leave
in
mov
or
xchg
push
push
hlt
shll
pop
push
movsb
sub
cwtl
sub
cmp
pop
push
dec
add
jge
mov
sub
xchg
scas
add
jno
mov
cmp
push
xor
es
outsl
fldcw
mov
xor
add
push
insb
add
std
add
cmc
repz
inc
dec
lods
add
movsb
sbb
sahf
or
iret
aad
adc
movsl
imul
and
leave
fildll
call
lcall
jp
es
shlb
gs
adc
push
jmp
mov
fcompl
js
or
mov
sbb
sahf
xchg
fnsave
ja
mov
mov
popf
test
xchg
sahf
xchg
ss
push
or
mov
pop
aaa
mov
or
sub
pop
call
gs
xor
std
ret
cmpsb
jne
add
fcomi
and
imul
add
add
dec
shrb
test
loope
dec
ja
inc
push
push
inc
jge
xor
mov
dec
insl
xlat
int
popf
push
out
jo
daa
fldenv
iret
mov
mov
jmp
sbb
loope
sar
xchg
aam
ss
and
mov
xchg
jg
dec
push
xor
jp
jb
test
xchg
cli
inc
pop
push
mov
sarb
dec
cmpsl
add
xchg
popa
icebp
mov
mov
or
hlt
mov
int3
loopne
lea
out
nop
sub
xchg
fstl
div
jle
and
movsl
hlt
sbb
popf
test
int
scas
adc
lods
lret
adc
dec
pop
jmp
fnstenv
repnz
pop
test
test
outsb
or
push
push
popf
jg
shll
pop
movsl
pushf
in
les
cmp
dec
sbb
shl
sbb
cmp
test
lcall
fdivrs
cmp
add
jmp
sbb
ja
jle
rorl
jno
shll
mov
arpl
shrl
cmp
jl
mov
add
cmp
clc
or
push
repz
movsl
enter
test
inc
xor
jmp
fwait
adc
ljmp
lds
nop
fisubs
push
xorb
out
xchg
sti
scas
test
xchg
push
jg
jge
fs
mov
adc
lret
rolb
outsb
fildl
cmpsl
push
leave
aaa
inc
outsl
inc
movsl
arpl
jns
fsubp
mov
sbb
sbb
shll
push
mov
cmp
movsl
imul
inc
test
stos
flds
iret
sbb
pop
nop
sub
push
fldt
mov
push
push
lds
mov
cmpsb
daa
ja
sets
stos
push
xlat
sub
leave
mov
jmp
orl
sub
sbb
leave
mov
pop
popf
outsb
daa
fdiv
mov
stc
xlat
cmpsb
and
inc
lcall
adc
punpckhdq
jg
cli
mov
cmpsb
sti
mov
sahf
cwtl
insl
mov
inc
pop
mov
xor
or
and
loope
lret
not
aad
test
push
shlb
lea
mov
jnp
pop
push
cltd
pop
cli
and
scas
sbb
pop
fimuls
rorl
insb
mov
shrb
cmp
mov
sbb
js
je
jl
lods
xor
iret
loop
push
cmpsl
fnstsw
popf
out
jbe
vaddsd
mov
fldcw
movsl
lret
dec
and
mov
dec
jmp
xchg
jns
sbb
xor
xchg
push
ficoml
inc
jae
add
push
lret
adc
mov
lea
test
int3
mov
cmp
lods
adc
aad
xor
cli
je,pt
loope
push
add
push
aaa
sub
xor
cmp
inc
or
pop
dec
daa
jmp
mov
roll
pop
mov
fs
lds
test
mov
jns
repnz
dec
adc
jb
jmp
dec
push
jae
and
pop
popf
pop
lahf
inc
inc
int3
adc
xchg
mov
dec
xchg
mov
and
fwait
scas
pushf
dec
fwait
outsl
arpl
push
call
aas
fs
loopne
jo
push
mov
jne
add
mov
arpl
aam
imul
iret
mov
and
fldl
ret
adc
test
mov
out
cmp
xchg
sbb
or
repnz
mov
sub
adc
mov
negl
cmp
xor
aas
cltd
dec
movsb
outsl
cmp
jne
inc
lcall
idiv
inc
movsl
push
push
inc
in
jbe
or
cmc
outsl
out
in
cwtl
ret
xchg
aam
inc
cmp
push
cmpsl
in
pop
pop
xchg
xchg
movsb
mov
sahf
adc
test
test
stos
pushf
lods
xor
jo
test
pop
add
xchg
mov
cmc
lahf
leave
pop
faddp
shlb
idivl
add
stos
movl
cmc
and
pop
nop
aas
ljmp
sbb
pop
iret
or
add
pop
xor
out
add
inc
dec
movsl
andl
fstpl
push
aas
xor
dec
push
push
dec
inc
jb
loopne
cwtl
sahf
xchg
dec
sub
loope
stos
dec
pop
in
jmp
lods
inc
fisttpll
mov
or
jle
stc
rclb
and
push
mov
in
lods
shrb
xchg
dec
xchg
inc
insb
mov
aam
xor
into
cwtl
test
mov
mov
repz
lods
addr16
adc
and
fwait
out
sub
movsl
pop
pop
nop
mov
insb
xchg
cmpsb
inc
sub
inc
orb
cmp
pop
mov
cmc
mov
mov
repz
pop
mov
mov
test
adc
cs
push
xchg
xchg
sti
jecxz
jno
sub
pop
les
pop
lahf
adc
pop
loopne
arpl
imul
ficompl
and
gs
or
sub
push
and
pop
movsb
gs
aaa
xchg
pop
cmc
test
xchg
mov
mov
sete
and
loop
mov
push
jmp
ljmp
roll
ljmp
leave
enter
lods
jmp
subb
or
mov
mov
cli
out
sbb
data16
sub
inc
mov
jmp
rcll
sahf
adc
mov
inc
xor
adc
adc
lock
mov
xchg
xor
adc
push
mov
or
iret
mov
xchg
scas
fwait
movsb
pop
cmp
push
or
pushf
adc
jecxz
int
shrb
roll
lea
stc
and
xchg
jecxz
pop
pushf
mov
xorl
leave
push
stc
je
mov
cmp
insl
sub
mov
inc
and
fisttps
push
sbb
mov
fbstp
dec
cmp
push
mov
cmp
dec
int
push
adc
insb
and
and
add
dec
dec
jne
pop
imul
jle
push
pop
sub
jge
sti
inc
and
movsb
push
mov
jno
sub
out
push
iret
test
pop
jge
xor
in
popa
out
xor
fimull
jno
xchg
push
cmp
push
testb
pop
push
jge
push
fcmovbe
pop
mov
mov
xor
shll
or
int3
ljmp
out
push
cli
fstpl
popf
mov
pusha
xor
pop
mov
dec
outsl
aas
mov
xlat
cli
sub
cwtl
out
ss
add
xor
fisttpll
adc
adc
int
xor
push
clc
cld
shl
clc
fs
dec
addr16
negb
test
lea
adc
add
sahf
andps
rolb
xor
lea
adc
cmp
or
loopne
mov
pop
dec
cwtl
mov
popa
mov
fwait
mov
mov
sbb
hlt
pop
sbb
outsl
or
pusha
pop
inc
pop
in
es
push
orb
sbb
dec
pop
nop
mov
dec
shlb
inc
mov
stos
rorl
test
xor
jno
pop
movsl
sbb
add
xchg
xchg
mov
sbb
lea
cmp
sti
or
sahf
out
or
cmp
cwtl
xor
int3
shl
bound
jnp
push
outsl
mov
insb
cmovo
addr16
mov
fildl
sbb
jg
cmp
adc
movsb
or
mov
pop
xor
aam
loop
fwait
jle
or
test
scas
add
test
pop
imul
sub
pop
imul
lods
cmp
repnz
jno
or
stos
test
adc
call
lods
xchg
add
lock
cs
jge
sahf
insb
push
loope
imul
stos
mov
mov
pop
int3
pop
enter
ja
xchg
andl
rol
cmp
jno
mov
ja
movsl
adc
sub
test
ljmp
xchg
ret
inc
and
sti
jp
enter
fsubrl
ss
inc
sbb
leave
ds
imul
aam
shl
jl
push
sahf
sbb
pop
or
es
movsb
jno
push
test
test
sbb
xchg
repz
xor
and
fildl
fwait
xchg
mov
jne
mov
xor
jmp
cld
int
xor
into
jmp
lcall
and
ret
fsubs
mov
xchg
sbb
mov
pop
das
outsb
jp
cmovb
xor
mov
fidivrl
scas
and
inc
fsts
mov
mov
jnp
stos
mov
or
gs
cwtl
out
inc
shrb
xor
sub
jns
mov
and
and
lods
lret
rorl
inc
pop
dec
ja
shlb
or
add
int
or
insl
stc
test
mov
mov
xchg
out
adc
jnp
clc
add
sub
test
mov
add
mov
fidivrs
pop
inc
int3
pop
fadd
arpl
xor
mov
fdivrs
outsb
daa
add
enter
outsb
lcall
add
sub
jl
pop
and
mov
out
xchg
adc
mov
or
push
push
in
out
lods
fisttps
add
pop
mov
pop
es
xchg
sub
outsb
add
negb
std
pop
mov
jecxz
aad
mov
rorb
ret
repnz
clc
sbb
ret
outsb
xor
cmpsl
sbb
enter
inc
mov
sub
sub
test
or
mov
std
dec
test
js
leave
push
cli
shrb
fistl
js
xchg
xchg
mov
push
xchg
pop
rorb
jp
icebp
or
xchg
push
and
jle
mov
mov
addl
jnp
imul
scas
inc
inc
xchg
out
and
out
xor
xchg
cmp
clc
pop
jmp
xchg
clc
xchg
sub
jo
cli
push
imul
pusha
movsb
cmpsb
fwait
cltd
fcoms
outsl
mov
nop
pop
out
jp
adc
sbb
insl
inc
popa
cld
outsb
add
pop
daa
nop
pop
shrl
or
test
test
hlt
add
decb
lahf
jo
test
mov
mov
outsl
adc
push
dec
pop
xchg
mov
dec
xchg
in
push
test
mov
aas
sahf
lods
cltd
in
xchg
mov
dec
mov
adc
das
mov
cmc
in
bound
push
pop
btc
int3
sbb
xlat
xchg
or
add
dec
xor
mov
sub
xchg
cltd
mov
idivb
mov
xor
adc
insb
js
mov
push
call
jnp
sar
cmp
xchg
ret
movsl
es
mov
push
out
arpl
and
sahf
loope
dec
inc
adc
xchg
push
xor
rcrb
push
pop
lret
pop
mov
xchg
outsb
orb
lret
mov
into
in
adc
arpl
push
shr
push
mov
push
repnz
jbe
sti
mov
mov
es
stos
cwtl
loopne
push
idiv
into
cmp
test
sahf
insb
pusha
jge
lret
sti
cld
pop
aas
dec
repz
sbb
dec
jb
popf
iret
mov
inc
sub
lret
mov
xor
rcl
xor
sbb
dec
dec
jg
mov
mov
insb
je
xor
inc
jbe
lret
bound
in
xor
mov
sub
inc
xlat
repnz
arpl
fsubrp
adc
dec
imul
fldl
mov
test
fmul
dec
push
lock
int3
pop
insb
pop
setle
mov
les
pop
mov
push
bnd
pop
mov
pop
arpl
mov
mov
sub
popa
cmp
mov
movsb
in
pmuludq
in
out
cmp
xchg
aaa
in
jp
fdivrl
lock
xchg
leave
dec
xchg
dec
mov
in
fiaddl
ficoms
les
aaa
test
jae
sub
dec
mov
cmpsl
adc
pop
divl
cmc
xor
sub
fisubrl
in
pop
mov
jae
pop
decb
lds
pop
xchg
xchg
popf
mov
cli
mov
cmp
add
add
aas
jp
xor
inc
adc
inc
sbb
adc
cmp
scas
ret
xchg
les
mov
inc
or
int
aas
xor
or
cmp
dec
test
jecxz
mov
fsubr
lock
fs
jge
pop
les
mov
in
mov
or
iret
lcall
and
xor
cmpsb
xor
adc
cmpsl
scas
aas
mov
stc
divl
je
xor
jo
test
cli
mov
or
inc
push
int
push
xchg
dec
cld
or
outsb
jbe
xchg
in
lock
cmp
out
pop
popf
cmpsb
pop
mov
xchg
xor
mov
pop
mov
sbb
insl
sbb
and
cli
sub
xchg
dec
scas
push
mov
inc
sbb
mov
mov
mov
hlt
in
int
push
xchg
jbe
mov
lods
and
pop
jno
fistpll
pop
jbe
je
movsb
sbb
add
xchg
icebp
add
cmp
add
into
cmp
push
xchg
lret
out
lahf
push
xchg
bound
les
daa
scas
jbe
inc
es
stos
xchg
xchg
imul
jno
fdivl
nop
sub
xchg
repnz
stc
jbe
mov
inc
and
xchg
dec
adc
jle
xchg
movsl
imul
popa
pop
cs
mov
out
sbb
sub
add
lods
lock
sbb
mov
sub
subl
xor
pushf
mov
mov
xor
rcll
pop
das
sbb
jnp
xor
add
or
int
imul
inc
or
xor
mov
ss
test
pop
jnp
gs
mov
jno
jb
int
sbb
adc
pop
loop
ret
ss
cld
shr
arpl
push
icebp
subl
cmp
repnz
arpl
sbb
push
push
xchg
inc
xchg
inc
adc
rolb
roll
inc
cwtl
jbe
sbb
inc
out
sub
lock
pop
popa
sbb
nop
cmp
inc
loop
mov
orl
arpl
add
xor
mov
sahf
sub
mov
daa
out
mulb
out
dec
lods
fprem
pop
jbe
sarb
cmp
ret
pop
jmp
jnp
neg
mov
push
sar
ja
hlt
shr
es
add
sbb
out
mov
xchg
fidivrs
push
ljmp
or
pop
outsb
lds
repnz
lods
sarb
loope
mov
pop
sbbl
jp
xchg
rclb
addb
add
jns
xor
lock
mov
add
jg
nop
and
push
or
adc
mov
sti
inc
sub
into
dec
icebp
push
or
cmp
out
pop
xor
and
fildll
pop
movsl
xchg
adc
add
mov
test
rclb
mov
mov
pop
cltd
insl
movsb
sahf
lds
mov
pop
cmp
push
aad
or
jg
ss
xchg
in
cwtl
push
cld
test
int
stos
loop
pop
testl
fidivl
dec
xor
cmp
jne
inc
iret
sarl
fdivr
jne
mov
ss
cltd
out
pushf
inc
pop
jp
xchg
jp
mov
jmp
and
mov
cltd
inc
and
sub
inc
test
pop
es
insl
inc
sub
or
cltd
xor
jnp
test
or
addr16
imul
cwtl
arpl
addr16
jae
rclb
inc
jo
gs
loopne
or
jle
inc
pop
test
sbb
lods
jno
pop
push
pop
inc
sub
test
sbb
mov
inc
cmpl
ret
mov
xchg
dec
test
xchg
stc
fmulp
dec
lods
inc
mov
pop
sbb
sbb
inc
imul
mov
xor
roll
cli
leave
jecxz
sbbl
jecxz
mov
and
xchg
cmc
je
mov
add
lcall
frstor
jno
cmpsl
sbb
daa
mov
fld
cmp
mov
test
ss
arpl
lahf
stc
std
imulb
fwait
push
mov
mov
dec
xchg
mov
pop
adc
into
jecxz
fildll
stc
cmp
jp
imul
lret
stos
aas
xchg
into
ss
xor
push
push
push
sub
enter
xlat
movsl
pusha
scas
xchg
test
repz
shrb
rclb
data16
adc
push
pop
ficoms
js
movsb
in
mov
jnp
ja
and
jge
nop
push
sbb
in
adc
lret
cli
bnd
int3
je
cmp
add
xor
cmp
lret
loop
mov
sub
fadds
insl
mov
or
test
pop
shll
dec
push
jle
cmpsl
mov
mov
leave
pop
hlt
les
jns
nop
xchg
and
dec
lea
cmp
cmpsl
int3
lahf
jns
mov
mov
loope
pop
jns
mov
push
xchg
imul
arpl
stos
mov
push
inc
mov
fldt
jne
mov
cmp
idiv
popa
stos
js
pop
les
pushf
dec
mov
sarb
int
rorb
mov
or
mov
inc
dec
stc
adc
scas
shr
mov
sub
pop
das
add
psubw
mov
pop
push
mov
test
orb
mov
nop
test
dec
pop
es
xchg
mov
shlb
pop
fsubl
aam
ljmp
mov
add
scas
jae
data16
jne
xor
and
push
sahf
add
jmp
insl
pop
dec
fldl
xchg
pop
fldcw
jne
push
aaa
aas
mov
jge
lods
shlb
add
mov
xor
adc
sub
fucompp
rorl
aaa
lods
or
icebp
mov
mov
xchg
pand
inc
mov
pusha
ret
aad
adc
push
lods
ret
jbe
adc
arpl
int3
push
xchg
pop
std
je
mov
lret
add
lahf
out
and
xchg
xor
jne
and
popf
xor
xchg
das
or
stos
mov
push
mov
xor
push
adc
xor
addl
or
pop
xchg
addl
pop
shrb
daa
mov
adc
xchg
test
cmp
and
mov
xor
ret
lods
loope
lds
scas
bound
aam
xchg
mov
xor
das
ljmp
fsubrs
and
filds
push
jge
mov
cmpsb
movsb
lahf
int
es
xor
xchg
and
mov
arpl
dec
jge
gs
mov
cwtl
in
cltd
daa
fldcw
lock
mov
pop
jp
pop
cmp
jbe
scas
or
sbb
iret
loopne
jmp
lods
movl
dec
jns
add
fsubs
mov
pushf
ficoml
xor
xor
inc
sbb
shll
cmpsl
push
sbb
lods
ds
stos
dec
fldcw
mov
add
push
out
cmc
xor
das
push
gs
jecxz
les
shr
sbb
mov
xorl
int
imul
ss
in
cmp
lahf
test
shrl
or
lds
fidivrs
xchg
outsl
loopne
loope
and
fcoml
mov
lahf
loope
xchg
xlat
pop
mov
xor
in
jp
sub
pop
add
inc
push
dec
call
stos
movsb
es
cmc
jb
dec
xchg
sbb
and
hlt
adc
or
or
xor
lods
in
pop
xchg
addr16
loopne
data16
or
lds
in
aas
mov
out
dec
cmp
into
adc
jb
lcall
adc
or
scas
cmp
cwtl
fildl
and
mov
jge
mov
pop
mov
or
movb
mov
ljmp
cmp
jp
daa
stc
and
stos
stos
sbb
push
out
inc
in
pop
xchg
push
mov
movsb
clc
jge
ret
pop
inc
lret
adc
outsl
cmp
pop
add
add
jg
adc
mov
in
test
movsl
or
pop
fs
mov
pushf
push
or
jnp
movsl
xor
arpl
add
movsl
das
fsubl
or
jno
lods
mov
mov
js
xlat
ja
adc
sub
mov
loopne
inc
inc
sbb
adc
push
iret
or
mov
data16
pop
ret
outsl
or
insl
sub
adc
pusha
cmp
daa
push
pushf
xor
divl
rclb
movsb
xor
sbb
and
aam
pop
popf
xor
or
inc
jo
cmpsw
jmp
cmp
or
pop
out
xor
mov
sub
xchg
sar
hlt
out
jo
mov
lret
adc
push
out
cmc
lret
adc
lahf
pop
sbb
push
pop
xor
call
adc
clc
jae
add
out
push
imul
aaa
jb
mov
cvtpi2ps
inc
orb
movsl
jp
mov
jne
jae
pop
pop
into
jmp
adc
test
cmp
movsl
mov
ljmp
ret
es
jns
jg
xchg
dec
cmc
sbb
push
adc
popf
mov
push
sahf
scas
mov
add
outsl
fstpt
ret
jle
loopne
arpl
and
xorl
dec
mov
das
adc
jl
hlt
fists
loope
dec
out
stc
or
mov
cmp
jo
cwtl
adc
pusha
hlt
outsl
or
inc
in
shr
stos
outsl
imul
dec
push
rcll
push
and
sbb
and
xchg
and
xsaves
cmp
pextrw
and
loope
cwtl
aad
xlat
cmp
pop
mov
or
les
xchg
movsb
scas
cs
pop
add
rcrl
and
jp
leave
sbb
jno
daa
push
mov
int3
rcr
mov
test
ds
outsl
mov
inc
gs
cmp
dec
jle
std
shll
cmp
add
jnp
in
sbb
lcall
fmulp
inc
ss
xchg
pop
dec
repz
push
adc
fs
mov
adc
add
sbb
and
push
lock
xor
scas
xchg
or
lret
inc
inc
lret
in
mov
add
push
mov
rol
jnp
xchg
xor
ficoml
mov
in
cmp
xadd
out
mov
mov
xor
xchg
test
pop
rcrb
mov
rolb
dec
or
orl
rorl
push
ds
jne
mov
hlt
mov
cmpb
inc
cmp
push
or
inc
xchg
push
pop
sbb
xchg
fldenv
je
aaa
mov
sbb
cmp
mov
mov
mov
scas
xor
lcall
push
call
fdivl
xor
in
lods
adc
pop
cmpsl
cmp
das
leave
xchg
push
and
sahf
xchg
lock
mov
leave
std
cmp
mov
mov
push
xor
pop
xchg
shl
push
mov
loopne
pop
or
decl
mov
dec
push
in
cmp
movb
mov
jmp
adc
add
cmp
xchg
and
jo
push
sbb
es
xor
cs
das
mov
xchg
lea
js
push
cmpsl
cltd
lods
scas
add
lock
pop
jp
pusha
ja
adc
int
mov
aad
jo
mov
mov
mov
in
notb
cmc
sbb
xchg
popa
outsb
out
dec
adc
mov
or
sub
sub
in
mov
xor
rcrb
int3
jmp
fwait
pop
push
adc
repnz
popl
and
inc
filds
movsb
shlb
add
fistpll
lock
fisubl
mov
aaa
xchg
xor
sahf
push
cmp
inc
pop
repz
out
popa
ja
ds
cmpsb
adc
cmpsl
or
fs
loopne
fmuls
push
loop
cltd
mov
push
cltd
pusha
ret
fs
jb
lea
pmaxsw
test
orl
inc
scas
or
int
test
push
sbb
movsl
xor
push
bndstx
push
push
clc
mov
stos
dec
sbb
stc
xchg
repz
cmp
mov
out
jno
ret
xchg
insb
fisttps
pop
out
mov
push
pushf
aaa
jbe
dec
push
pop
cs
popf
cmc
fiadds
xor
mov
push
pop
clc
or
loop
outsb
jbe
xor
lret
xchg
jge
aas
hlt
add
pop
jnp
das
test
dec
jg
adcl
jns
cmp
popf
jae
fisttpl
repz
mov
inc
pushf
inc
fsubr
data16
inc
rcrl
test
shll
cmpsl
mov
data16
ret
pop
mov
xor
loop
push
mov
fmulp
scas
mov
in
scas
shrl
loope
dec
test
dec
loop
xor
popa
and
push
mov
jge
icebp
mov
sarl
orl
xlat
pop
xchg
js
shrb
xchg
fidivrl
jmp
mov
xchg
sbb
push
fnstenv
mov
lock
mov
jns
mov
adc
pop
sub
and
out
dec
or
or
lock
outsl
xchg
outsl
mov
sbb
adc
int
adc
xchg
daa
fmulp
aas
xchg
dec
into
ficompl
pusha
les
cmp
mov
jbe
iret
adc
xchg
and
cs
pop
frstor
js
xor
test
mov
sahf
xor
fwait
into
mov
test
xor
xlat
sub
jne
sub
xor
xchg
pusha
ret
int3
test
xchg
mov
push
cmp
xchg
rorb
mov
int
push
jle
and
rcr
fldcw
jg
cld
push
or
xor
lods
loope
popa
inc
push
mov
mov
fldt
pop
leave
fst
shrb
lcall
pop
imul
fcmovnu
jmp
mov
dec
ljmp
sahf
std
xchg
loop
xchg
dec
aaa
dec
pop
sbb
mov
pop
or
mov
and
ror
jbe
jecxz
or
test
mov
inc
push
jle
jne
mov
sarl
sub
mov
cmc
addr16
fmulp
jle
cli
adc
dec
cli
dec
push
loopne
rcll
data16
addr16
je
mov
insb
arpl
sbb
pop
push
mov
stos
mov
jl
add
mov
jmp
fisubs
repz
dec
ret
fwait
pop
mov
nop
clc
sarl
mov
sub
add
cmpsb
cmp
leave
cmp
fisubl
cwtl
dec
and
mov
pop
lods
mov
ret
inc
cmp
jg
sub
subb
clc
push
pop
fs
and
enter
dec
adc
sarl
daa
or
push
fdivrp
je
lret
xchg
mov
scas
jbe
push
adc
push
leave
add
lret
cmpsb
xor
mov
inc
xor
xor
outsl
dec
push
or
call
push
push
mov
gs
fsub
sub
cs
mov
shrd
cld
jae
adcb
mov
jno
fimuls
fidivs
loopne
inc
cld
ror
fbld
mov
mov
imulb
test
or
push
lret
repz
sti
dec
or
shlb
mov
outsb
push
dec
pop
xchg
lds
jne
jp
pop
fists
xchg
repnz
mov
or
jno
adc
sbb
lahf
sbb
adc
stos
mov
data16
fnstenv
and
push
movsl
clc
out
movsb
adc
push
popa
shrb
pop
lcall
lock
and
jge
inc
push
xchg
mov
popa
pop
xor
inc
fisttps
jle
call
or
dec
mov
push
or
pop
div
pusha
add
cli
fstps
sbb
pop
lret
lea
rorb
test
ret
pop
sub
pop
pop
scas
enter
jg
push
jne
xchg
ret
jg
lods
es
and
xchg
ja
mov
pop
cli
mov
inc
xchg
mov
movsl
into
xchg
pop
fcomi
dec
stos
roll
and
dec
jle
sarl
stos
scas
sahf
dec
fnstcw
xor
dec
adc
push
mov
jecxz
pop
cmpsb
rorb
and
pop
push
outsb
sub
enter
mov
pop
loop
in
fmull
lock
test
ficomps
mov
adc
sub
outsb
cmp
mov
or
nop
cmp
mov
xchg
inc
faddp
adc
xchg
mov
pop
and
fistpll
pop
hlt
outsl
push
fdiv
test
out
pop
cmp
pusha
push
mov
sbb
aam
in
lods
repnz
mov
int3
inc
cmp
lahf
fcoml
sbb
sub
popa
sbb
dec
xchg
icebp
es
push
jmp
sub
lcall
into
xlat
lcall
pusha
push
sub
into
mov
ja
pop
mov
pusha
or
add
dec
mov
insb
mov
mov
jmp
mov
pop
imul
fidivrs
push
or
mov
sub
pushf
lcall
xchg
imul
rol
xchg
enter
xchg
mov
out
cmp
in
xchg
call
lret
data16
cltd
xor
lret
mov
sub
and
icebp
mov
cmpb
icebp
jmp
imulb
imul
dec
aad
movsl
adc
out
mov
loop
pop
pushf
add
out
cmp
xor
cmp
std
mov
jmp
dec
int3
cmpl
mov
lods
and
add
out
stos
flds
orl
dec
leave
out
scas
cmpl
ljmp
pop
push
mov
shrl
in
sbb
add
aas
mov
popf
xor
and
into
adc
jl
adc
sub
or
pop
pop
mov
cli
mov
sbb
jle
in
mov
aas
mov
fisubrs
mov
bound
ret
rcl
lods
xchg
fisubrs
mov
pushf
stos
jg
inc
ret
cmp
lahf
push
negb
mov
pop
arpl
push
and
int3
xorb
add
clc
mov
fadd
sar
mov
shrl
fisubrs
in
add
pop
ret
mov
les
fsubrs
fnstcw
test
adc
add
cwtl
sub
sub
dec
lods
sub
xchg
and
xchg
adc
push
popf
mov
shll
in
mov
xchg
lret
lock
or
pop
pop
test
adc
pusha
jle
pop
mov
adc
push
ljmp
out
loopne
les
push
xchg
dec
std
mov
cmp
lret
push
ret
fwait
xchg
ljmp
sbb
fldt
dec
ja
je
inc
repnz
dec
icebp
idivl
pop
shlb
and
es
mov
es
in
repz
pop
lcall
cwtl
je
adc
cltd
and
aas
pusha
clc
cmp
mov
cmp
in
mov
or
jmp
inc
mov
pop
fisubl
add
mov
xor
mov
test
idiv
xor
pop
adc
incl
imul
jns
movsb
rolb
fisubs
push
lahf
sbbl
cmp
mov
lret
ret
test
lcall
fidivl
xchg
int3
test
mov
int3
push
imul
mov
mov
int3
fisubrl
ja
inc
dec
mov
fiaddl
rorl
lods
ljmp
mov
incb
jae
dec
imul
sti
xchg
clc
leave
jns
fsts
and
cmpsb
pushf
adc
lock
fs
mov
and
mov
fsubrs
fcompl
mov
lret
and
xchg
imul
jp
mov
mov
insl
dec
mov
mov
mov
leave
jne
dec
add
mov
push
pop
lods
loope
mov
out
stc
mov
lret
movsb
or
fidivl
pop
mov
fisubrs
jge
pushf
jns
jge
jmp
sub
mov
mov
push
outsl
outsb
xchg
or
sub
sub
sub
pop
jg
inc
lods
adc
lret
mov
mov
xchg
pop
push
sbb
dec
sbb
xor
sahf
jl
sub
sbb
xchg
idiv
addr16
lds
aam
insl
dec
push
xchg
cltd
iret
xchg
push
mov
divb
jmp
or
push
cmpsb
mov
movsb
pop
or
daa
sub
ds
cmp
sbb
xchg
loopne
mov
or
dec
scas
adc
add
movsl
mov
aaa
add
pushf
add
jns
aaa
mov
in
sub
popf
pop
fucomp
mov
push
add
mov
int3
arpl
jge
fdivs
push
or
lock
cmp
sbb
sub
test
aam
add
push
mov
ds
inc
mov
cwtl
stc
stos
rclb
cmp
sbb
ja
push
enter
xlat
mov
dec
insl
fcmovne
in
ss
mov
mov
xchg
rcr
cmp
dec
jb
push
iret
adc
pop
imul
jp
or
pop
cltd
adc
scas
std
and
push
add
mov
mov
clc
lret
cwtl
in
dec
xor
jecxz
jecxz
jae
mov
add
push
mov
into
call
xchg
add
lods
outsl
push
fucomp
push
and
mov
add
xor
js
hlt
xor
lret
int
punpcklwd
xor
clc
mov
cmpsb
sti
pop
lret
mov
sub
cmc
loop
adc
or
ret
fistps
sbb
adc
dec
fdivl
add
xor
aam
std
jmp
jl
mov
mov
cmp
inc
mov
arpl
xor
cmc
push
add
movb
mov
jnp
outsb
rcll
sub
cmpsl
sub
cmc
loopne
mov
pushf
in
mov
ret
inc
jp
cmp
pop
leave
mov
or
sbb
mov
popf
mov
or
cs
mov
aam
gs
xor
mov
add
adc
push
std
xchg
and
clc
hlt
push
sub
or
pop
cld
inc
fmuls
outsl
jae
pusha
sbb
mov
cli
rcl
add
pop
hlt
test
xlat
movsb
sub
pop
push
test
popa
and
push
xchg
rolb
fwait
inc
clc
int3
mov
gs
insb
rcrl
int
or
adc
jecxz
mov
popf
enter
xchg
sarl
mov
xchg
sti
push
mov
or
enter
fistl
and
lcall
and
pop
dec
mov
mov
pop
and
xchg
push
mov
cld
icebp
jl
fdivl
sarb
dec
cmp
clc
or
nop
add
fcmovnbe
push
adc
roll
mov
es
enter
insb
or
shll
xor
mov
sti
in
cmp
vprotw
cs
push
clc
cmp
or
add
cmpsl
je
push
push
movsl
lahf
mov
scas
sub
mov
add
mov
in
jmp
push
push
stos
inc
out
ja
and
sarl
aad
ret
xchg
mov
adc
inc
adc
cmpsb
shll
add
jmp
test
jb
jl
cs
das
jnp
sbb
adc
int
mov
inc
fnstsw
add
iret
aaa
or
sbb
repz
je
aaa
pop
adc
int
or
data16
dec
and
bound
jg
mov
xor
mov
pushf
fsubl
or
inc
lods
or
mov
and
mov
loop
sub
femms
sub
mov
aaa
push
add
je
mov
dec
jo
in
test
int3
xchg
mov
push
adc
pop
in
mov
leave
fwait
add
push
stos
jns
add
sbb
int3
mov
cmp
adc
pop
push
ret
add
fimuls
or
fwait
js
loopne
mov
xor
dec
push
push
pop
pop
xor
icebp
lds
ret
mov
outsl
pop
add
rorl
mov
mov
int3
cmp
push
repz
jmp
and
lcall
movsl
ret
jns
roll
loope
ljmp
mov
std
xchg
pop
test
cli
cmc
mov
add
push
rol
inc
adc
mov
sub
outsb
xchg
movsl
push
inc
inc
cld
push
sahf
fcompl
ljmp
sub
movsl
iret
mov
divl
mov
push
pop
mov
push
mov
cmp
adc
mov
es
or
cmp
pop
sub
cmp
dec
in
adc
fimuls
stos
dec
ds
shl
sbb
cmp
clc
cmp
mov
scas
mov
mov
fcomps
outsl
sbb
out
ret
mov
cs
ljmp
loope
outsb
addr16
int3
xlat
fcompl
ljmp
xor
ljmp
cltd
pop
mov
adc
pop
fs
int
mov
xchg
movsb
popa
mov
out
lods
push
or
scas
push
stos
mov
mov
fs
xchg
jo
mov
cmpsb
xchg
jae
adc
push
xor
xchg
es
xor
mov
xchg
pop
pushf
cmp
xchg
pop
push
jge
mov
rcrl
and
and
or
fbld
lret
jmp
xchg
popa
rol
fcos
sbb
aas
nop
aas
or
das
add
xchg
and
mov
and
imul
btr
cmp
sbb
ja
lcall
lock
aad
movsl
adc
mov
lahf
sub
jge
mov
and
push
push
mov
imul
test
jecxz
xchg
mov
lods
push
dec
pop
xchg
mov
lds
jecxz
mov
pop
aas
adc
xchg
adcl
fstp
clc
cmc
pusha
movsb
ljmp
mov
xchg
sub
cld
mov
rcr
lret
stos
xorb
ja
xchg
roll
test
outsl
cs
call
mov
mov
ss
call
xchg
sbb
xchg
cmpsb
cmp
mov
inc
cmp
dec
mov
lret
or
add
push
mov
or
mov
mov
xor
add
sbb
push
imul
push
scas
xchg
adc
jl
mov
mov
xor
push
clc
hlt
inc
pop
sub
scas
cmp
lods
fdivrl
and
jo
stos
xchg
dec
cmp
fwait
int3
mov
xchg
push
ljmp
jmp
xor
leave
inc
loopne
fimuls
and
and
in
mov
xchg
or
push
jmp
cmp
jns
loop
adc
mov
inc
cmp
jbe
jecxz
and
testb
in
fsubp
adc
jl
movsl
inc
sub
clc
in
mov
sub
sbb
push
and
fucom
fcomps
jo
loopne
daa
addr16
mov
mov
cli
loopne
nopl
push
mov
repz
aaa
sbb
mov
aaa
fwait
inc
or
sbb
xchg
or
pusha
loopne
dec
not
xlat
sub
sub
movb
xchg
mov
dec
mov
cld
jp
andl
add
xor
push
das
test
aad
mov
mov
sti
cmp
sub
push
mov
or
movsl
je
cmc
xchg
lds
pop
insb
or
and
and
mov
adc
xchg
dec
jae
stos
sub
aad
sbb
out
adc
dec
cmp
test
rcr
bnd
lods
add
xchg
gs
rcl
leave
popa
mov
les
fidivl
push
mov
inc
fistpll
out
fsubp
push
sar
clc
xor
lahf
popf
sub
mov
mov
repnz
addr16
fsts
sub
push
inc
dec
nop
push
aas
mov
and
ds
and
mov
stos
pusha
fidivrs
ja
push
insl
aas
jge
or
xor
imul
mov
pop
or
push
or
ret
push
fisttpl
sbb
jge
fstl
cmp
mov
imul
dec
dec
add
clc
pop
add
jnp
ret
aaa
fcomps
movsb
cltd
xor
xor
jge
dec
movsb
aas
add
pop
pop
fs
push
shll
js
mov
mov
mov
xlat
sbb
sahf
xor
test
notb
aas
repnz
sub
movsl
add
mov
add
xor
test
daa
push
test
jle
hlt
pop
mov
xor
sbb
dec
mov
push
pop
cltd
call
aam
cmpsl
lret
test
pop
daa
inc
cmpsl
mov
jge
xchg
int3
sti
push
and
push
push
adcl
loop
push
lcall
pop
jo
push
cwtl
or
add
inc
mov
lock
mov
xchg
lds
outsl
iret
mov
and
mov
mov
push
lods
leave
mov
bound
jmp
jne
stos
sub
test
std
jne
mov
add
daa
xchg
mov
and
arpl
pop
hlt
pop
fucomi
pop
call
xor
out
xchg
and
inc
cmpsb
jne
or
ja
or
and
push
cmpsb
or
movsl
les
int3
or
pop
xchg
imul
fcmovbe
sbb
mov
ficoml
mov
in
stc
imul
xchg
ljmp
dec
dec
fiadds
mov
arpl
ret
mov
lret
jl
add
jbe
sbb
lcall
mov
inc
fisubrl
adc
jmp
dec
sub
sub
pop
add
jmp
mov
cmp
fildll
ja
or
stc
mov
push
mov
push
and
push
xlat
add
dec
mov
cmp
in
dec
orb
or
rcrb
sub
adc
lea
movsb
sbb
adc
mov
xor
dec
pop
inc
xlat
dec
lahf
mov
aam
fidivs
and
lods
and
push
jnp
popa
flds
negl
lahf
xchg
dec
fprem1
fnstsw
jg
add
adc
mov
shlb
ja
lds
negb
xor
sbb
mov
mov
aas
cs
jmp
shll
cmpsl
jp
ja
dec
repz
insl
cld
ret
orb
mov
mov
jl
arpl
xor
sahf
cmp
push
push
sub
adc
mov
incb
mov
aas
mov
outsb
fisubrs
pop
lea
out
inc
insl
mov
inc
sbb
arpl
test
push
int
jecxz
sbb
push
and
jb
popf
or
adc
pop
mov
xchg
cmc
orb
mov
xor
std
iret
inc
adc
dec
sbb
or
mov
idiv
test
in
repnz
das
pop
inc
and
inc
hlt
adc
jbe
js
into
movsb
ret
jb
sub
scas
and
adc
push
push
jp
xchg
aam
push
jnp
mov
testl
addl
nop
cmp
lret
mov
shl
rol
pop
xlat
mov
xchg
cmp
jmp
cmc
fwait
int
cmp
add
inc
cmp
fstl
inc
loopne
addb
adc
xchg
mov
int3
imul
test
cmp
gs
stc
insl
hlt
add
imul
add
insl
ljmp
fildl
fisubrl
xor
or
ds
jne
xchg
lock
mov
loop
adc
cmpsb
cmp
insl
xchg
les
sti
fdivrl
xor
out
pop
movsl
jae
sahf
add
sub
ss
insb
lds
sub
mov
or
stc
mov
and
or
lods
sub
test
stc
fnstenv
sbb
xchg
add
dec
and
lcall
mov
inc
data16
add
adc
lahf
xchg
jge
in
dec
test
je
popa
mov
std
bound
add
lods
rorl
mov
dec
push
fldt
xlat
sbbb
xchg
push
dec
loopne
sbb
sub
dec
xor
aaa
adc
xchg
push
cwtl
imul
aam
mov
xchg
jb
and
loope
pop
lahf
push
in
addr16
and
aam
aam
jnp
or
xchg
popa
in
dec
ja
in
insb
stos
add
xchg
data16
test
xor
mov
sahf
and
scas
mov
xlat
mov
int3
cli
stos
aas
test
jo
add
adcl
out
sbb
xor
lret
sub
insb
jb
insb
adc
aad
push
inc
cmp
xor
lret
add
int3
loop
ss
popf
sbb
out
andb
mov
push
cltd
rcr
popa
jge
ret
cmp
mov
push
das
mov
pushf
pop
les
push
jl
jno
jbe
cmp
or
cli
xor
push
or
das
inc
xchg
fidivs
das
out
shl
shl
and
iret
push
push
and
cwtl
mov
popf
lcall
and
int3
into
lods
sub
mov
adc
mov
fwait
mov
and
in
mov
and
test
push
sub
scas
ljmp
and
addr16
leave
inc
pop
mov
adcb
jge
mov
lds
dec
mov
mov
lea
mov
mov
inc
orb
mov
je
incb
jmp
and
mov
or
js
test
jbe
loope
cmp
fbld
push
xor
mov
inc
jl
jo
mov
sahf
test
std
loope
incb
and
fidivs
lods
sub
xchg
std
ficoms
inc
popa
jbe
xor
jae
dec
mov
in
enter
cwtl
add
mov
rolb
or
jne
push
nop
mov
inc
jae
inc
lahf
mov
sbb
or
shrb
mov
shlb
sub
push
stos
mov
mov
dec
push
movsl
sti
push
cwtl
lcall
outsl
scas
sbb
jecxz
loopne
cmc
push
cmp
and
dec
xchg
or
jge
mov
or
or
xchg
out
adc
add
es
cmp
cmp
push
jl
mov
pop
jmp
fdiv
loopne
inc
add
daa
dec
mov
adc
addr16
mov
xchg
mov
sarl
push
dec
addr16
and
ja
ret
out
sbb
insl
into
mov
ret
clc
add
pop
imul
sub
out
pushf
jbe
push
in
mov
sub
push
clc
jnp
cmp
sub
dec
movsb
adc
push
cltd
mov
push
lret
out
or
ud2
test
xchg
rclb
test
xchg
mov
dec
mov
jns
adc
dec
mov
and
push
loope
stos
sbb
inc
add
xchg
pop
sub
loopne
fisubl
adcl
loop
push
inc
out
das
mov
push
xor
out
jecxz
and
pop
rclb
jns
aas
push
inc
inc
movsl
hlt
xchg
and
iret
ljmp
xor
mov
popa
adc
or
or
jo
lahf
xor
int3
or
ret
cmpsb
mulb
mov
sbb
cmp
lds
push
popa
out
cmp
out
fists
mov
xor
sub
xor
pop
push
aas
pop
clc
test
or
gs
sar
mov
mov
adc
add
movsl
xchg
je
xor
jecxz
sub
sub
roll
cltd
mov
in
ret
in
gs
les
cwtl
rorl
in
js
mov
pop
jmp
sbb
loopne
stos
sbb
pusha
add
mov
out
sahf
and
mov
mov
shlb
adc
sub
in
aad
movl
jmp
lods
mov
fmulp
inc
pop
aaa
lret
jns
pop
hlt
scas
push
js
loope
sti
cmpsl
into
lahf
mov
into
mov
push
inc
insb
icebp
xor
xchg
jg
in
rol
ret
sub
es
mov
xchg
pop
push
sbb
cmc
sbb
inc
lock
mov
dec
inc
subl
adc
sbb
dec
xchg
int3
inc
cmc
mov
mov
sbbb
mov
inc
cltd
or
das
xchg
push
dec
add
decb
cmp
sub
xchg
push
adc
mov
ficomps
movsl
cld
jns
sub
inc
inc
mov
loop
aas
mov
cmp
test
sahf
loop
sbbl
jno
cs
ja
sbb
ret
aas
in
stc
or
call
push
or
sub
addr16
push
clc
and
jle
mov
sbb
fadds
data16
lods
aaa
and
sub
fcmovb
mov
adc
sbb
sbb
nop
das
imul
outsl
mov
jb
dec
sbb
movsb
clc
hlt
xchg
mov
pusha
jecxz
mov
dec
xor
cmp
mov
push
mov
out
inc
pop
hlt
mov
aas
and
adc
in
nop
sbb
js
lcall
test
dec
pop
adc
jbe
repnz
out
cmp
fdivl
xchg
jo
out
aas
rcrl
push
outsl
jmp
cmpsl
and
jae
ljmp
sub
shrl
test
push
test
mov
and
or
test
leave
lods
or
inc
out
lds
jl
lret
mov
ret
nop
cld
mov
loopne
je
into
out
inc
dec
mov
or
in
pop
adc
testb
jnp
das
adc
decb
cmp
xor
mov
adc
stos
pop
xchg
call
mov
cwtl
pop
jecxz
lcall
outsl
pop
pushf
rcr
mov
out
and
sub
inc
fwait
lret
cwtl
jns
xchg
dec
shrb
lock
aad
jo
push
data16
push
mov
sbb
pop
or
xorb
pop
js
jne
roll
sbb
mov
xor
iret
lods
dec
cltd
sbbb
add
sub
sbb
dec
jbe
or
les
push
cmpsl
pop
jnp
inc
lret
rcrl
jne
push
dec
pop
jmp
mov
out
xchg
addl
xchg
jl
jmp
in
loop
lret
xor
stc
pop
push
xchg
mov
adc
mov
adc
rorb
ficoml
imul
xor
loop
orl
movsb
cmpb
jge
pop
aas
repnz
cld
dec
daa
repnz
mov
cmpb
out
xchg
pop
test
pop
je
ljmp
xchg
adcb
ret
inc
mov
repz
mov
jle
mov
pop
and
jbe
xchg
adc
rcl
rcll
add
sarb
rcrb
cmp
cmp
cmp
mov
sub
aad
movsl
or
test
cmp
cli
inc
mov
adc
pop
mov
loopne
fsubp
fldl
fldcw
out
jne
jl
mov
fimuls
rorl
incl
aad
add
lods
fadd
sbb
fsubrl
and
mov
jp
inc
jmp
add
ret
sbb
cltd
cmp
jae
pop
dec
add
test
inc
sub
xchg
mov
or
fists
cmp
add
mov
out
dec
inc
jbe
daa
push
ljmp
enter
and
push
pop
mov
mov
int3
or
push
xchg
das
notl
stos
inc
fisubl
imul
push
data16
outsl
jbe
jmp
inc
lahf
stc
loope
jnp
add
jmp
push
sahf
jnp
mov
dec
adcl
leave
adc
inc
rorl
gs
jmp
cmp
push
mov
xchg
aad
rcr
and
adc
call
xchg
cmpsb
lret
aas
sub
sbb
xor
adc
mov
cmp
pop
push
cmp
lret
dec
pop
cmp
and
and
and
ret
mov
out
push
js
and
arpl
ret
imul
scas
lahf
adc
push
push
lcall
into
sbb
jb
push
vpopcntd
repz
pushf
addr16
adc
cltd
fcmovnbe
daa
mov
in
popa
or
mov
xor
test
mov
dec
cmc
jne
aaa
sbb
add
loop
xorb
fadd
sbb
movsb
mov
or
push
add
or
ss
mov
push
stos
and
out
adc
xchg
xor
add
stos
out
mov
sahf
xchg
push
push
xor
xor
push
inc
pcmpeqw
shll
inc
nop
iret
push
mov
nop
movsl
scas
inc
add
sub
mov
xchg
or
add
orl
arpl
cmpsb
push
aas
test
xchg
cmp
mov
inc
int3
and
jne
and
imul
fsubs
mov
cmpsl
or
mov
push
das
pop
in
sbb
popa
sbb
test
dec
pop
sahf
test
outsl
mov
mov
dec
pop
cmp
rcrb
xor
out
imul
adc
add
and
push
pushf
cmp
jp
ret
adc
mov
fidivs
int3
jno
fcmovbe
adc
clc
outsl
mov
mov
dec
xchg
fldl
mov
mov
repz
sbb
mov
dec
sar
pushf
insl
imul
movsb
aaa
out
jecxz
dec
or
push
add
xchg
gs
pusha
cltd
cs
call
inc
mov
sub
pop
mov
pop
jecxz
lods
jns
xchg
daa
gs
sbb
out
jne
add
imul
and
push
mov
push
push
cmpsb
jmp
sahf
pop
iret
fdivrl
icebp
cmp
pop
cwtl
dec
or
push
pushf
dec
popf
fidivrl
out
int
lcall
sahf
dec
rcr
sbb
aad
mov
sub
test
in
int
popa
test
std
push
ss
icebp
int
adcb
jp
sbb
inc
pop
ret
call
test
pop
xchg
cmpb
mul
mov
ficoml
repz
scas
xchg
mov
pop
rorl
cmpsb
loopne
insb
xchg
pusha
leave
imul
shll
jb
cmp
xor
pop
mov
sub
nop
jno
pusha
pop
add
outsb
outsb
loop
pop
add
mov
jo
incl
cmpsl
and
mov
popa
pop
mull
sbb
mov
cmp
fdivr
inc
in
in
aam
adc
inc
add
mov
push
mov
jns
add
jnp
pop
aaa
and
mov
bswap
aam
sbb
push
in
das
sub
cmc
cmpl
out
adc
mov
cltd
lcall
movb
xor
cmp
mov
imul
mov
bound
xlat
into
dec
sub
scas
fcompl
arpl
leave
scas
out
imul
fisttpll
and
test
push
ret
loop
repnz
jl
iret
cmp
in
pop
and
aaa
stc
jbe
push
dec
adc
subb
aam
movsl
lods
jne
cmp
lods
mov
jae
and
ss
pop
and
mov
cli
mov
in
xorl
cmpb
lret
fwait
aaa
cmpsb
out
repnz
test
in
int3
xchg
mov
cmp
hlt
xchg
mov
pop
jb
mov
shrb
lds
mov
adc
and
ret
add
fs
jno
push
int3
stos
mov
lods
push
out
ja
xor
jg
add
shrl
push
int
shlb
push
popf
xchg
in
push
cld
sbb
icebp
xor
xor
mov
dec
push
mov
out
xchg
or
xchg
mov
xor
jbe
mov
jno
jmp
sub
pop
jp
cli
pop
cmp
and
push
repz
imul
fisttps
dec
scas
cwtl
test
sbb
or
xchg
sahf
push
push
ret
xchg
add
jecxz,pn
popa
or
adcl
inc
dec
add
popf
es
or
movsl
pop
outsb
lods
inc
or
pop
jae
xchg
in
and
cltd
pop
test
sti
push
xchg
out
and
fidivl
hlt
jge
push
jecxz
sarb
xchg
jl
addr16
stc
xor
stc
jbe
mov
xchg
mov
dec
pop
dec
es
dec
movb
mov
or
fcomps
loopne
jns
mov
jg
push
movsl
in
fdivrs
push
lds
insl
icebp
insl
addr16
mov
xchg
hlt
sti
mov
sub
push
in
stc
pop
mulb
jbe
insb
adc
push
std
int
adc
call
sub
cmc
jge
out
mov
cmp
or
and
and
push
outsb
in
aaa
ret
add
jno
mov
fiaddl
sahf
jns
out
and
in
xlat
in
mov
mov
mov
rolb
mov
inc
in
or
lea
add
xor
lods
int3
xlat
fcmovne
inc
xor
mov
icebp
dec
int3
lea
sub
xchg
cli
add
imul
mov
mov
bound
sbb
sbb
add
mov
daa
mov
fsubrs
inc
data16
fisttpll
push
mov
ret
push
popa
cmpl
insb
clc
pop
test
and
mov
push
out
inc
imul
xor
or
xchg
rcrl
mov
std
pop
aam
shlb
cld
scas
xor
scas
mov
insb
mov
xor
js
inc
pop
sub
mov
ja
mov
mov
xchg
imul
sbb
cmp
addl
dec
out
xchg
mov
loop
fnsave
push
nop
lret
add
lods
adc
pop
jae
push
pop
adc
xor
rcl
das
cmpsb
out
insb
shl
rorl
in
or
cmp
push
jmp
jno
pushf
movsw
pushf
pop
jge
inc
xor
sahf
add
xlat
mov
xlat
pop
mov
push
dec
push
jnp
xor
and
in
in
jnp
int3
jnp
cmp
insb
pop
addr16
xlat
push
xor
mov
push
rcrl
test
cltd
ret
sub
loopne
or
pop
mov
cmc
sti
inc
iret
repz
pop
xor
pop
incb
xor
in
scas
jbe
or
stc
xor
mov
jg
imul
mov
inc
fsubrs
js
mov
pop
jg
ss
mov
and
stos
mov
in
sti
scas
mov
and
loop
adc
xchg
cmpsb
movsb
adc
in
mov
jge
scas
fstpt
ret
cmc
push
jo
stos
xchg
fldt
test
mov
inc
mov
stos
aam
dec
fbld
add
out
clc
pop
jns
or
lds
mov
sbb
dec
aad
cld
sub
xor
andb
pop
and
add
sbb
das
repnz
mov
rol
mov
push
imul
sti
lock
and
xchg
mov
dec
pop
and
loope
outsb
jb
push
nop
fwait
scas
outsl
addb
inc
shl
or
dec
sub
cs
mov
pop
jno
mov
mov
loope
pop
and
push
mov
movsl
test
mov
ds
push
aad
or
pmaxub
das
mov
xor
arpl
xchg
flds
inc
dec
push
out
mov
rolb
roll
sub
cmp
sbb
out
mov
mov
test
pop
inc
push
and
popf
and
mov
jl
adc
dec
mov
out
mov
add
lret
cli
lds
xchg
sbb
adc
mov
ds
mov
cmp
pop
les
sub
cmc
outsl
jnp
ss
xor
scas
insl
out
pusha
jp
and
sub
cmp
shll
jecxz
fidivs
cli
lds
jno
ret
les
call
rcrl
adc
out
insb
int
lret
mov
repz
inc
scas
jno
rcrb
and
imul
lods
in
dec
jo
jle
ds
movsl
add
jne
cld
inc
xor
sub
shrl
dec
xchg
sub
jp
xchg
loopne
cli
test
movsb
das
mov
lret
repnz
sbb
mov
xor
icebp
addr16
cs
lahf
jmp
std
lret
hlt
pop
ds
sbb
push
fisubrl
jns
data16
inc
xchg
push
jecxz
scas
fs
push
test
xchg
ss
pop
sbb
mov
cwtl
roll
fnstenv
add
std
cmp
mov
jb
adcl
repz
pop
pop
and
mov
notl
mov
test
mov
cmp
in
jge
test
cld
jbe
les
ljmp
leave
aam
dec
popf
xchg
mov
rclb
add
sbbb
jne
mov
push
adc
cs
pusha
inc
fdivr
test
push
xor
imul
ds
int
mov
mov
jno
cwtl
repz
cmp
cmp
inc
inc
add
mov
sbb
xchg
pop
cmp
cmpsl
jo
mov
push
roll
ret
cmc
scas
sub
or
outsl
sti
arpl
or
mov
pusha
iret
cmpsb
std
push
in
mov
mov
scas
nop
mov
sbb
ffree
lods
cmpsl
rol
adc
out
sub
and
pop
mov
xchg
xor
inc
sbb
adc
mov
pop
mov
mov
iret
lret
mov
xor
pop
cmp
into
mov
push
insl
dec
je
push
xor
pop
sbb
xchg
mov
jmp
dec
inc
std
jge
jne
inc
xor
shll
cmp
sbb
or
out
sbb
adc
sar
fbld
outsl
pop
xchg
pop
sub
push
mov
pop
ret
pushl
out
outsb
popf
dec
push
fisubrl
jno
mov
dec
daa
add
aam
push
jns
pop
xor
mov
dec
enter
jmp
push
aaa
add
xchg
outsb
and
sbbb
fildll
or
out
jmp
out
dec
loope
mov
pop
das
loop
dec
xchg
cs
ljmp
pop
sbb
imul
adc
icebp
lods
inc
xchg
les
jl
add
fsubs
push
mov
enter
aas
lret
mov
jg
or
int3
xlat
fnstsw
repz
clc
int3
jb
jp
add
inc
ss
push
insb
inc
gs
xchg
ss
xor
js
fsubrp
jg
jae
inc
mov
int3
jo
jecxz
js
xchg
cli
jp
fst
mov
push
insl
and
cltd
pop
and
mov
inc
das
cmpl
pop
dec
fcomip
adc
mov
push
push
and
sbb
sub
ret
loop
jg
jl
push
push
cwtl
sbb
xchg
mov
loopne
aaa
roll
cmp
mov
aas
dec
mov
fsts
sbb
pop
dec
and
icebp
pop
adc
addb
lcall
into
lds
loopne
aad
lods
adc
ret
lds
test
pop
notl
xor
daa
cltd
jno
jle
sbb
insb
jo
rol
mov
xchg
out
jg
pop
xor
add
push
std
test
out
orb
cmp
lds
das
add
add
repnz
lcall
inc
cmc
mov
xchg
fstl
loope
cmpb
jo
orb
xchg
in
jns
jo
and
or
dec
or
cmpsb
scas
cmpsb
lods
pop
les
jp
push
out
call
das
pop
cs
sti
mov
loopne
mov
cmpsb
push
mov
push
mov
mov
test
dec
outsl
jo
and
and
dec
stc
out
clc
sub
pop
mov
xchg
cmp
mov
das
jecxz
cmp
sub
xchg
mov
jg
inc
repnz
aad
mov
fstpl
das
ret
mov
in
stos
lret
pop
ja
and
xchg
jnp
aaa
loopne
push
imul
cwtl
int3
jo
mov
cmp
ljmp
ret
sarb
cmc
xor
dec
test
pop
push
adc
xor
sub
sbb
hlt
mov
adc
repnz
insb
sbb
icebp
movsl
loope
adcl
pushf
ja
cmp
ret
movsb
push
cmp
pop
hlt
sti
addr16
in
mov
lret
sbb
faddl
jbe
fadds
aas
ds
mov
mov
or
fs
ss
fcompp
xor
xor
mov
inc
and
sub
js
push
es
fisubs
dec
decb
cli
push
loope
mov
movl
cmp
out
mov
dec
xor
mov
dec
call
in
or
mov
faddp
and
addb
add
or
pop
sahf
outsl
leave
cmp
jl
push
jbe
or
cs
iret
dec
rol
cld
andb
pusha
or
jge
push
cmp
sbb
push
call
test
ss
xchg
lds
insb
iret
jg
push
adc
mov
ljmp
das
add
test
mov
lahf
enter
test
mov
cmp
sbb
inc
sbb
mov
stos
cld
fsubr
xchg
jmp
sub
dec
stos
jne
fstps
mov
adcb
xchg
jbe
addb
rcrl
cs
lods
inc
fdivrl
dec
mov
fs
mov
sbb
lock
sub
push
data16
jecxz
and
jge
cmp
sbb
push
lcall
movsl
jmp
ljmp
xchg
aaa
jb
push
cwtl
add
mov
mov
push
add
movsb
add
add
loop
loope
cltd
xor
inc
push
pusha
cmp
push
or
shl
xchg
jb
mov
push
int
nop
dec
add
sbb
pop
xchg
push
jne
push
lock
sbb
push
jbe
fadds
das
repnz
lods
sub
pushf
fisubs
mov
aas
js
xlat
addb
jmp
fwait
aad
lahf
cmp
or
sbbl
add
mov
mov
push
mov
jp
add
cwtl
mov
shrb
push
aas
in
jb
or
test
ljmp
sub
xor
or
xor
addb
cmp
mov
pop
imul
inc
div
mov
jle
xor
jo
shrl
jne
adc
xor
sub
lea
movb
xor
mov
mov
pushf
jmp
jge
cli
jg
int3
sub
int3
push
and
daa
adc
inc
pop
push
pop
ror
sbb
jbe
fdivr
nop
push
mov
imul
aam
sbb
cmp
ficompl
ret
or
int3
xor
xor
jo
les
inc
std
addr16
xor
out
es
push
sub
pop
lods
mov
push
insb
xchg
cmpsb
repnz
aad
inc
imul
imul
ljmp
jne
pop
jne
jle
or
mov
push
daa
int
lcall
repz
out
into
in
cmpsb
push
test
adc
mov
sarl
daa
inc
push
popf
pop
rol
fistpl
mov
xor
fcom
pop
push
and
scas
pop
sub
sub
xchg
into
andb
fisttpll
or
pop
popa
roll
mov
pushf
jbe
pop
inc
shrb
sbb
lahf
push
sub
jp
xchg
gs
jb
inc
mov
rcrb
shll
dec
xchg
insl
out
call
jmp
adc
in
inc
lods
and
mov
test
and
mov
mov
push
xor
jae
in
adc
ficompl
pop
xor
push
cmp
shlb
pop
push
inc
add
and
nop
sub
mov
clc
xor
ss
lahf
mov
fldcw
neg
mov
cmp
mov
cmp
sub
adc
lcall
dec
cmp
cmpsl
leave
mov
aam
shrl
jne
pusha
sub
icebp
or
out
fimuls
jge
imul
adc
jge
and
sub
test
inc
jae
jl
enter
xchg
sub
hlt
es
xor
sarb
test
push
or
dec
in
mov
add
sbb
xor
mov
lds
fdivr
sub
push
lea
jb
mov
pop
mov
outsb
mov
pop
lret
mov
xor
mov
cld
pop
lods
movsb
das
jl
ror
nop
pop
adc
jp
adc
movsl
popf
cmpsl
and
in
movsb
int
push
and
xchg
gs
jo
std
les
cmp
divl
ret
jle
cmp
jno
in
fcomps
sar
in
das
adc
adc
lods
pusha
sbb
popa
loop
add
ljmp
xchg
fs
stc
mov
mov
pop
adc
icebp
xor
mov
cmp
pop
enter
xchg
push
popf
jnp
push
js
mov
sbb
test
roll
lods
jo
sti
xor
fmul
ss
out
clc
fists
add
daa
xlat
adc
cmp
cmc
push
push
lds
int
adc
jae
inc
pusha
jl
int
push
ret
gs
and
nop
lods
xlat
shl
inc
popf
push
test
outsb
mov
enter
pop
dec
xorb
ret
lahf
scas
js
mov
inc
imul
jbe
fbld
inc
push
jmp
insl
aam
test
jge
addb
orb
pop
cmpsb
imul
pop
gs
dec
fld
jl
dec
push
jne
ljmp
call
push
shrb
or
pop
jo
mov
jl
sub
xor
pop
pop
in
sbb
cs
cmpsl
mov
lods
pop
call
ret
push
mov
fisttps
outsl
in
pop
xor
mov
or
jo
ss
movsb
in
inc
ficoml
cmpsb
addr16
or
repz
pop
insb
dec
mov
ljmp
das
fistl
adc
negb
sarl
stc
aas
adc
mov
jb
or
cmpsb
jmp
ds
sahf
mov
je
sub
sub
sub
add
xchg
or
mov
xlat
fldenv
mov
mov
sbb
xchg
imul
mov
inc
cld
scas
repnz
jmp
or
jle
push
movsb
add
and
xchg
xor
popf
add
sbb
and
push
dec
js
mov
xor
dec
dec
xor
adc
decl
inc
push
xor
mov
rorl
arpl
sub
in
cmp
jp
test
xlat
jp
sarb
jmp
cltd
sbb
jp
mov
or
sub
cmc
dec
adc
test
add
stos
mov
adc
and
mov
mov
ljmp
out
and
test
repz
punpcklwd
jne
mov
lods
xchg
mov
fs
lods
or
rcl
lahf
jmp
cmp
insl
pop
dec
push
jge
xor
push
push
cmpsb
and
inc
sbb
pop
roll
icebp
inc
inc
xchg
rorb
imul
clc
inc
jb
shll
pop
mov
mov
in
fsts
je,pn
pushf
sbb
mov
dec
and
mov
pop
push
fcomps
xchg
xchg
mov
cmpsb
add
in
xchg
jbe
aas
and
push
les
inc
jl
xor
lock
pop
mov
xor
xchg
add
mov
dec
in
dec
inc
jb
int3
insl
into
int3
cli
jp
int3
push
push
mov
leave
add
cmp
ret
mov
xor
mov
push
mov
outsl
testl
mov
outsl
fsubrl
sbb
insb
rcrb
add
sbb
jbe
aad
jecxz
xor
insl
pop
xchg
dec
mov
into
sub
and
mov
cltd
ret
push
sbb
jg
push
or
mov
or
mov
sbb
xchg
rcrb
ds
xchg
ficompl
jecxz
inc
cwtl
inc
insb
lahf
out
sub
push
sub
pop
mov
mov
xchg
sbb
das
mov
test
fisttpll
inc
mov
pop
adc
xor
pop
mov
xchg
cld
jg
cmpl
dec
pop
aad
dec
or
mov
fcoms
fildl
in
mov
inc
jno
addl
arpl
xchg
cmp
push
cld
xlat
and
mov
jg
add
sub
mov
rcll
adc
cwtl
cmc
sub
sub
and
mov
in
daa
adc
adc
inc
dec
rolb
sarl
out
shll
in
popa
negb
fisttpl
outsl
mov
pcmpgtw
fs
xchg
cmp
pop
xchg
scas
xor
icebp
mov
and
inc
in
ds
dec
xor
add
das
pop
mov
sbb
jns
mov
adc
add
mov
mov
push
add
mov
shrb
fnstcw
in
rolb
int3
hlt
ror
push
or
fs
int
andl
mov
hlt
pop
lahf
cmp
rclb
jg
in
xchg
pop
push
sub
mov
mov
inc
cmpsl
leave
push
pop
mov
fxch
loope
add
cwtl
dec
sbb
cs
adc
dec
xchg
pop
scas
push
movsl
and
push
jns
out
in
mov
and
sbb
push
xchg
popf
hlt
stos
xor
ret
pop
xor
test
inc
mov
sbb
int3
sbb
cmp
mov
lods
out
lods
jl
repz
and
adc
jecxz
dec
roll
mov
sar
arpl
lods
inc
jge
inc
push
jle
call
and
loopne
aas
outsb
and
popf
or
mov
popa
loopne
cmp
shrb
movsb
fdiv
loop
xlat
dec
adc
push
jmp
adc
mov
dec
xchg
xlat
jno
xor
out
loop
stc
pushf
sub
lea
into
xor
sbb
jle
jmp
inc
arpl
cmp
mov
dec
clc
dec
js
xchg
es
mov
rclb
jge
jp
or
lret
and
inc
or
js
lods
frstor
jae
ja
sub
pop
fimull
sbb
icebp
daa
and
addr16
pop
push
add
lods
in
lahf
xchg
push
lods
push
inc
add
repz
mov
pop
popf
mov
insl
cmp
mov
inc
or
cmp
sbb
jns
push
push
cltd
mov
cmp
stos
lea
adc
cmp
pop
fidivl
dec
gs
xchg
push
push
pushf
ss
loopne
iret
popf
cmp
out
cmp
pop
add
cltd
mov
mov
sbb
hlt
mov
fdiv
push
ret
scas
aam
adc
lods
ret
ret
sub
insl
loop
add
inc
adc
or
pop
mov
or
cltd
ja
pop
mov
fidivrl
lret
aad
sbb
jmp
xchg
mov
lcall
popf
ss
sbb
int
dec
pop
into
push
cmpsb
insl
mov
lods
or
xchg
mov
xor
or
ss
int
mov
xchg
pop
xor
cwtl
cmp
xchg
popa
fcoms
and
adc
inc
push
xchg
adc
aad
mov
fwait
sbb
cmp
inc
fwait
outsb
loop
cli
dec
lds
inc
sub
mov
ret
cmpsb
stc
mov
in
stos
dec
daa
test
jl
xchg
and
xor
and
imul
imul
sub
sub
inc
gs
push
cli
test
pop
mov
and
or
jno
or
inc
xor
push
pop
in
cmpb
jb
or
clc
aaa
ss
lret
cltd
mov
out
inc
dec
cld
loopne
addl
and
popf
pop
jg
aas
sbb
pop
add
and
lea
inc
psubsb
testl
inc
popa
dec
mov
adc
scas
mov
imul
jns
out
cmpl
test
jmp
lock
and
test
sbb
pop
adc
jbe
xchg
fisubrs
xchg
mov
out
in
inc
cli
jl
push
or
cmp
pop
dec
jb
insl
daa
adc
push
push
mov
in
add
fnstsw
rol
mov
add
mov
add
jp
mov
out
shll
xchg
loop
jb
inc
push
lea
adcl
push
rclb
loopne
push
imul
ror
xchg
xchg
mov
aaa
mov
cltd
mov
loope
outsb
push
lahf
stos
push
je
or
push
inc
add
loope
xor
imul
rcr
out
sbb
dec
push
popa
out
adc
sub
out
pop
int
pop
xchg
int
pushf
test
add
pop
cmp
xor
daa
in
cmpsb
jne
mov
imul
and
jb
or
pop
dec
movsl
and
stos
add
add
das
sbb
fidivs
fists
pushf
cmp
xor
jg
cmp
outsb
mov
and
xor
mov
lds
jmp
inc
addr16
nop
cmc
sub
push
add
pop
xchg
cmp
dec
mov
cmp
sbb
movsb
lret
imulb
cmp
add
add
xchg
xchg
mov
test
mov
loop
cmp
push
dec
jecxz
fistpl
fisubrl
xchg
call
mov
and
xchg
addr16
push
cmp
mov
push
outsb
nop
push
mov
pop
fnstcw
mov
mov
call
mov
cmp
iret
sbbl
mov
cmp
repnz
loope
lret
sbb
adc
fiaddl
stos
leave
add
aam
pop
push
fiadds
xchg
and
push
adc
out
das
sbb
adc
das
cld
push
test
addl
nop
dec
mov
xchg
dec
dec
je
arpl
or
cmp
jno
into
fsubrs
jae
push
dec
add
xor
pop
xchg
sbb
scas
mov
cmpsl
fdiv
mov
xchg
insb
sbb
pop
ja
fwait
aam
push
rorb
mov
das
shr
ja
jnp
subb
jge
movsb
leave
cli
ret
mov
out
fwait
lods
mov
pop
lock
hlt
shl
jmp
mov
mov
cmp
jg
pushf
xchg
mov
push
adc
push
std
cltd
std
jne
into
push
mov
repnz
dec
mov
xor
cmpl
pop
lret
xchg
pop
inc
mov
xor
lods
sub
fs
arpl
aam
rcll
dec
xorl
mov
ret
xchg
inc
jl
xchg
xor
mov
call
push
and
je
movsb
jae
jg
out
sub
aam
icebp
adc
or
dec
adc
push
das
enter
mov
fwait
pusha
xchg
lods
fwait
or
faddp
call
fucomip
lock
sub
xor
mov
cmpsb
int3
mov
out
inc
and
fs
push
fstps
xchg
mov
lcall
lods
push
and
lcall
jg
lock
icebp
out
pop
push
mov
ret
dec
inc
int
mov
jno
mov
mov
or
into
mov
fdivrs
mov
test
loopne
mov
pop
lds
sbb
push
sti
adc
loopne
dec
mov
jnp
rcrb
cmp
rorb
xor
mov
fildl
and
mov
loopne
icebp
aam
inc
jp
jg
add
clc
dec
push
cmpl
hlt
fisubrs
xor
lahf
push
or
lock
decb
cmpsl
jno
fidivs
and
cmp
cld
pop
fbstp
dec
ja
or
push
xchg
mov
jmp
sbb
xor
sbb
sti
push
mov
mov
mov
mov
cli
loopne
cmpsl
jp
pop
mov
aad
mov
ss
repnz
push
jns
subb
daa
out
subl
gs
lock
mov
inc
mov
sub
cltd
or
inc
push
adc
and
outsb
mov
in
push
mov
stos
jo
push
xchg
scas
mov
and
sbbl
mov
push
jge
pusha
add
and
cli
xor
cli
rcr
inc
int3
pop
pop
cmpsb
cmovbe
imul
jge
sahf
in
std
jnp
sbb
movsb
imul
xor
popf
xchg
ds
repnz
daa
dec
popf
popa
adc
pusha
in
lods
sub
push
or
bound
jnp
dec
pop
sbb
sub
jp
jmp
jecxz
dec
ss
imul
jl
xor
stos
lds
mov
xorl
sbb
das
movsb
sahf
pop
orl
mov
cld
es
out
out
mov
cmpl
pop
cltd
cmp
in
insl
sbb
mov
push
sub
cld
xchg
jo
push
mov
pop
lahf
jae
in
mov
lock
in
push
mov
xchg
call
xorl
push
mov
cmp
mov
ret
lret
ret
xchg
mov
test
sar
jns
inc
dec
push
test
pop
aad
cmp
inc
cmp
pop
inc
test
mov
push
js
lock
filds
inc
or
adc
in
or
sar
insl
mov
rcll
add
mov
aad
cmp
notb
sub
mov
sarb
push
cwtl
jnp
cmp
mov
aam
push
xor
jmp
inc
in
mov
sbb
cs
movb
mov
mov
add
jmp
push
or
into
jnp
cmpsb
xor
jle
sahf
int3
push
loope
mov
sub
and
inc
lods
lahf
stos
repz
mov
mov
mov
sbb
pushw
in
stos
mov
push
jmp
aam
les
mov
inc
ret
adc
adc
mov
subb
add
dec
js
in
lret
dec
repnz
sub
dec
sbb
add
movsl
xor
aad
xchg
adc
lea
int
xchg
push
fdiv
mov
jge
push
cmpl
icebp
and
jnp
pop
gs
arpl
sahf
lea
jno
sbb
jbe
leave
scas
aad
push
and
clc
pop
in
out
lret
xchg
pop
loope
ja
dec
int3
leave
enter
sub
out
in
cmp
and
xchg
fbstp
cmpsl
cmpsb
inc
inc
lods
mov
es
cmp
pop
xchg
pop
daa
mov
or
mov
sar
push
sub
mov
xchg
int
dec
cmc
into
xor
jae
pushl
sahf
test
and
sti
inc
jmp
pop
or
insl
ret
shr
push
add
mov
lea
dec
fistl
leave
add
pop
dec
orl
andl
fldl
scas
push
inc
dec
shlb
nop
lea
hlt
inc
cmpsl
lods
inc
mov
mov
cmc
es
jnp
ss
ret
mov
or
or
js
jp
hlt
out
mov
adc
pop
pop
jnp,pt
push
mov
pop
push
xchg
pop
loop
mov
ret
out
nop
xor
sbbb
push
fldcw
push
lods
mov
push
lret
mov
add
lds
dec
fdivl
je
cli
hlt
adc
je
pop
lahf
sub
sub
shrl
or
pop
dec
imul
mov
scas
sub
fcoms
test
ret
das
fisubrl
data16
lcall
pop
hlt
sbb
lret
scas
sub
in
xor
pop
jp
cmp
pop
fldl
xchg
pop
fldl
push
movsl
call
dec
sbb
dec
fs
daa
cmp
mov
cmp
clc
mov
int
or
jl
sarl
loope
lds
adc
jnp
fs
inc
push
dec
xor
cmp
xor
cltd
leave
push
and
dec
xor
cs
flds
imul
pop
mov
pop
sub
sub
or
int
repz
xor
jo
sarb
mov
incb
xlat
sti
pop
out
test
mov
addr16
nop
xor
cmp
insb
inc
jns
mov
sub
fsubrs
orb
roll
rorb
cmc
pusha
or
lahf
jg
in
add
sbb
inc
mov
lods
add
mov
rolb
lcall
sti
into
or
int3
sub
xchg
add
xor
test
lock
add
popf
ret
cmp
loope
movsl
mov
mov
ja
mov
movsb
mov
or
pop
sahf
sub
in
and
push
jmp
dec
stos
insb
aas
push
lcall
out
pop
push
pop
clc
cmp
xchg
aam
outsl
in
enter
jmp
dec
arpl
in
pop
xchg
aas
lret
mov
bound
cli
jmp
sub
mov
sub
inc
int3
std
rolb
int
mov
add
adc
lahf
outsl
push
and
xchg
pushf
into
sbb
movsb
mov
popf
fdivl
stos
jb
and
add
xchg
inc
aas
mov
add
push
fistps
mov
jp
aam
lods
insl
or
cmp
adc
cwtl
subl
enter
rcll
cmpl
mov
fildl
cld
fdivs
xlat
push
adcl
cmp
stos
sahf
pop
call
xchg
jbe
jle
or
add
jp
enter
sub
movsb
mov
fsubl
out
sti
mov
mov
cmp
and
mov
and
xchg
idivl
mov
push
mov
ret
push
cmpsl
and
mov
xor
insb
mulb
std
fwait
jle
push
push
mov
xor
xchg
sti
pop
js
cmp
jne
mov
jns
and
sti
arpl
mov
or
mov
lcall
add
mov
push
frstor
repz
inc
xor
popl
inc
sbb
jg
cld
mov
out
lods
loop
mov
sbb
jo
scas
mov
addr16
addl
sub
ret
lahf
dec
das
and
gs
ss
inc
adc
aas
shl
lret
mov
inc
lock
rorb
add
inc
and
adc
xchg
mov
adc
pop
pop
mov
mov
sbb
xlat
fisubs
mov
push
adc
and
ljmp
movsb
scas
repz
test
and
test
out
pop
pusha
in
icebp
sub
lods
pop
mov
out
popa
add
aaa
cmpsb
movswl
cwtl
dec
outsl
mov
add
fwait
inc
fmuls
lods
dec
push
outsl
adc
daa
jl
mov
cmpsl
insb
jo
clc
hlt
dec
shl
inc
insl
es
mov
outsb
cld
inc
testb
in
inc
add
and
cmp
or
sub
loopne
mov
cltd
stc
test
ret
into
insb
lcall
es
faddl
pop
loop
pop
outsl
fs
les
icebp
daa
outsl
dec
dec
mov
popa
pop
adc
js
jmp
cmp
xor
sbb
repz
and
les
mov
jge
and
int3
adc
addr16
loopne
ja
mov
sbb
pop
ljmp
aaa
cltd
enter
in
mov
fs
nop
xor
pop
dec
shr
fidivrs
jb
incb
push
int3
lret
or
mov
pop
push
dec
mov
test
lods
movsl
fidivl
decl
pop
push
dec
inc
shlb
sbb
cmp
push
xchg
fisubrs
jae
xlat
xor
xor
jmp
aam
lret
mov
add
pop
std
dec
mov
ds
rcll
hlt
mov
lods
mov
mov
or
bound
dec
js
cmp
pop
jns
out
add
and
adc
nop
lcall
pushf
icebp
push
aaa
pop
sub
ss
call
pop
andl
xchg
xchg
aad
cli
push
cmp
das
xor
cwtl
insl
ljmp
xchg
pop
cmpsb
ficompl
jno
cmp
or
dec
cltd
mov
xlat
mov
push
imul
insl
jo
into
jnp
jecxz
push
cmpsl
pop
push
std
repnz
out
inc
dec
pop
popa
nop
lods
push
mov
outsl
inc
fsubrl
mov
fidivl
test
leave
jno
out
lock
pop
adcl
hlt
pop
mov
daa
or
push
dec
cltd
sub
sbb
mov
or
mov
js
ljmp
jp
jmp
repz
arpl
sbb
mov
movsl
daa
push
or
push
cli
idivb
cmp
and
std
clc
mov
test
xchg
xor
mov
mov
adc
inc
incl
shr
dec
outsb
in
jle
and
data16
and
scas
mov
pushw
mov
adc
push
ja
pusha
add
pop
adc
and
push
mov
in
cmp
lahf
stc
xor
jp
loop
cmpsb
mov
into
add
pusha
or
push
xchg
lods
mov
cli
inc
aaa
sti
xchg
pop
shll
cwtl
push
movsb
and
out
shll
fadds
test
sbb
pop
outsl
mov
sbbl
rcr
gs
jno
ja
ja
ss
iret
scas
sets
aam
addr16
jnp
ds
movsl
add
xchg
divl
mov
mov
ret
mov
mov
pop
incb
sub
mov
pop
jne
cmpsb
adc
incl
lds
pop
iret
out
cmc
dec
lahf
jmp
test
push
or
mov
xchg
inc
dec
push
jo
cwtl
mov
inc
dec
mov
ds
mov
cs
xor
mov
aam
pop
or
mov
mov
add
dec
add
inc
jbe
das
imul
xchg
cmp
in
rcrb
pop
fs
rol
add
decl
fcompl
stc
movsb
mov
pop
xchg
pop
jl
icebp
push
loopne
int3
mov
lds
mov
add
or
mov
mov
xlat
adc
sahf
jp
sbb
pop
stc
jle
adc
adc
imul
and
rorb
and
das
cmp
subl
movsl
jno
or
add
std
cmc
out
js
popa
push
sbb
pop
jne
into
or
and
test
xor
insb
xlat
inc
out
repnz
aam
mov
mov
sub
lods
xor
imul
ss
mov
loopne
in
les
in
xchg
cmc
xchg
outsl
pop
inc
repz
jmp
daa
ds
xlat
jl
daa
or
ljmp
je
adc
sub
jo
clc
mov
add
in
add
leave
loop
sti
or
dec
stc
pop
fcomp
mov
aam
adc
push
adc
cld
cmpsb
pushf
push
jg
adcb
call
bound
xor
cmp
push
mov
in
push
mov
gs
mov
clc
inc
inc
pop
inc
push
in
jnp
push
inc
fnsave
sbb
add
scas
ss
in
ret
xor
cli
sbb
jne
shlb
out
stc
movsl
xor
add
xlat
pop
loop
nop
pop
or
push
jbe
pop
sbb
push
cli
pop
insb
jmp
pushf
jle
inc
push
testb
jl
mov
jle
cs
in
or
scas
pop
inc
mov
adc
dec
jp
mov
sti
xor
in
in
cwtl
cwtl
lret
jg
mov
ljmp
mov
xorl
loop
vaddsubpd
sti
fidivrs
sbb
nop
popf
xchg
adc
mov
or
mov
repnz
test
sub
mov
aas
icebp
mov
pop
hlt
xor
arpl
je
aam
rcrb
sub
mov
sar
in
pusha
sbb
sbb
dec
xchg
cltd
aas
push
xor
movsl
gs
xchg
dec
push
icebp
mov
aam
out
or
and
add
xchg
fwait
outsl
loope
sub
dec
push
mov
xchg
dec
pop
shrb
cs
jge
shrl
and
repnz
hlt
scas
dec
dec
loope
or
scas
iret
icebp
popa
out
sub
out
mov
jno
xlat
cmp
test
adc
pop
int
lret
mov
shlb
lahf
mov
add
push
out
ret
or
cmp
push
dec
lahf
in
jge
inc
lods
stc
mov
xor
or
aam
pop
gs
pop
dec
out
mov
cmc
adc
or
js
sub
shlb
loopne
pop
popf
xchg
nop
pop
subb
dec
mov
fisubl
adc
mov
in
and
cmp
jge
inc
decl
push
mov
test
rorb
jle
xor
hlt
push
lds
push
cmpsl
incl
pop
push
mov
and
ds
pop
loope
lock
mov
cltd
xor
test
inc
mov
push
lods
loop
nop
cld
movups
xor
rcl
rorb
mov
loop
push
adc
cmp
in
js
inc
cmp
add
lret
cmp
mov
or
add
out
dec
in
mov
xchg
add
mov
mov
dec
jp
jp
popf
out
arpl
push
push
inc
push
loope
inc
leave
mov
mov
gs
mov
or
int3
ret
rcl
icebp
in
outsb
clc
pop
cwtl
out
sahf
mov
and
or
repnz
iret
pop
loop
pause
adc
repnz
std
cmp
pop
pop
negl
dec
int3
mov
or
xor
sbb
add
or
mov
incl
inc
sbb
sbb
or
lds
fs
shlb
loope
mov
lahf
loope
mov
les
movsb
jecxz
rcll
cmp
xor
mov
pop
sahf
test
add
test
push
adc
push
bound
ret
call
loope
ljmp
lret
stos
ja
jnp
mov
fs
sar
in
jge
mov
mov
mov
sbb
sbb
jg
ret
push
adc
cs
inc
stos
ret
pusha
sub
repz
and
jne
xchg
jge
lret
mov
adc
pop
xchg
jae
push
push
es
aam
jne
dec
pop
std
cmp
pop
xchg
inc
adc
jecxz
xchg
mov
fs
mov
inc
lcall
insl
inc
adcb
sbb
cmc
sub
mul
dec
add
popf
mov
add
in
imul
cmp
loop
xor
std
adc
lods
loopne
sub
cmp
lds
test
loop
xor
les
ljmp
or
loope
inc
scas
into
shlb
sub
sti
jmp
jo
imul
stos
jno
cmp
aas
mov
lahf
push
xlat
lock
mov
xor
fs
push
push
jl
jae
and
mov
das
dec
rcrb
sbb
mov
lcall
dec
pop
cmp
xchg
jbe
add
inc
pop
mov
adc
jns
scas
and
mov
sbb
cmp
sbb
mov
call
adc
mov
cmc
xorl
xor
sbb
mov
es
je
mov
mov
push
sahf
mov
div
sbb
xchg
mov
scas
sbb
repz
jns
psrad
cltd
loopne
mulb
cmp
add
jmp
pop
pop
movsl
sbb
pop
pop
insb
stos
push
pop
mov
mov
jecxz
and
pop
push
push
pop
sahf
mov
pop
push
jmp
or
sbb
inc
jg
loope
pop
sub
sbb
jg
clc
xor
ds
mov
lds
xor
xchg
mov
mov
push
lcall
dec
add
test
jecxz
pop
repnz
lcall
lret
stc
pop
inc
or
jecxz
xor
shlb
es
mov
cmp
data16
js
or
mov
pop
addr16
in
sbb
sub
arpl
xchg
jecxz
mov
cld
rcl
in
pminsw
cmc
shl
pop
mov
add
lahf
fnsave
in
push
imul
nop
push
pop
sbb
jge
int
xor
cli
push
xor
test
adc
stc
cmpsl
loopne
add
popa
sub
lock
int3
cltd
movsb
cmp
mov
dec
inc
mov
cmc
add
je
adc
xchg
aam
stc
mov
jo
loop
inc
or
sbb
cwtl
into
mov
daa
jg
decl
fwait
daa
or
bnd
scas
mov
outsb
addl
sbb
outsb
jne
call
adc
mov
je
inc
loopne
sahf
mov
lods
jno
shr
scas
enter
ds
jp
push
xchg
push
insl
movsl
dec
mov
jmp
lret
jae
mov
fbstp
dec
mov
out
repz
ret
jl
std
pop
sub
sub
js
int
push
mov
fnsave
repz
cmpsl
cld
xchg
sbb
leave
cmpsb
mov
inc
outsb
add
inc
mov
xchg
mov
stc
scas
lret
push
jno
lret
ret
jmp
fisubl
scas
insl
enter
orl
stos
xchg
stos
dec
mov
mov
aam
pushl
shrl
stos
mov
inc
mov
dec
neg
and
xor
int
jg
jb
enter
xchg
inc
iret
mov
in
or
mov
add
mov
mov
je
pop
jns
mov
popa
cwtl
mov
push
aas
cmp
fnop
dec
das
insb
jge
repnz
adc
cmp
jp
imul
add
sub
cvtps2pd
jg
nop
inc
ficomps
sarl
aas
mov
mov
push
sub
fwait
sub
mov
notb
lahf
jge
ret
aaa
and
and
jg
push
inc
jns
ret
mov
mov
pop
mov
mov
jno
push
or
cld
aam
mov
lcall
ja
addb
and
adc
dec
lret
jge
cmp
ret
dec
lea
and
pop
fcmovbe
notb
inc
xlat
jecxz
push
inc
rcrb
dec
je
nop
jnp
pop
xor
and
jle
mov
pusha
enter
inc
in
inc
sub
pop
mov
adc
jae
xor
cmc
xor
outsl
sub
adc
dec
in
mov
mov
jo
jnp
jb
mov
mov
mov
jmp
push
into
notl
cmp
and
adc
mov
jbe
cmpsb
cmp
pop
inc
pusha
add
jecxz
or
std
inc
mov
lret
imulb
fistps
xchg
xchg
cmpsl
pop
push
xor
add
adc
scas
pop
pop
out
mov
dec
inc
cltd
out
loope
inc
test
fdivr
add
jb
or
jo
inc
jecxz
sub
movsb
push
mov
ja
jecxz
mov
mov
and
fldenv
addr16
stc
sbb
jbe
mov
out
les
out
ret
cs
sub
pop
lret
loop
insl
icebp
dec
or
jne
cltd
mov
mov
cmc
ljmp
arpl
cmp
and
fnstcw
rolb
push
call
mov
fcomp
push
pop
fcmove
stos
sbb
scas
add
lcall
sub
popf
aaa
pop
scas
shrl
call
or
jae
stc
in
fidivs
xchg
lods
push
cld
daa
iret
mov
negb
mov
nop
cmp
hlt
pushf
mov
adc
test
adc
xor
movsb
sub
fwait
jne
sbb
rorb
add
dec
adc
or
out
sbb
les
out
push
pop
mov
inc
mov
mov
sbb
les
ret
in
mov
fsubrs
mov
iret
cli
xchg
inc
stos
repnz
pop
cmp
jne
imul
iret
push
mov
dec
cmpsl
mov
loope
inc
cmc
jle
mov
iret
and
xor
xor
adc
xor
std
jmp
dec
outsl
out
lahf
addr16
cmp
jl
and
add
push
mov
xchg
push
fildll
inc
adc
xor
pop
rclb
daa
add
sub
inc
xor
loopne
lods
add
jns
cmp
cmp
jns
push
out
scas
popa
aad
sbb
ds
out
movsl
mov
or
nop
int
fimull
push
cmp
push
add
hlt
xchg
loop
test
aad
lds
addb
sbb
sbbl
pop
lcall
or
push
int3
cmp
inc
push
rcrl
pop
jl
arpl
jp
mov
dec
push
dec
or
add
outsl
rolb
dec
push
div
cmp
icebp
out
nop
cmpsl
pop
mov
jo
cwtl
mov
cmp
dec
jae
hlt
and
cltd
inc
cwtl
mov
sbb
lret
daa
lds
sar
js
sub
jo
xchg
fildll
into
mov
xchg
add
adcb
mov
pop
jnp
xor
sub
fstpl
cmpsl
mov
cmp
push
bnd
add
lret
imul
lcall
pop
jns
dec
mov
and
shlb
pop
pop
mov
sub
mov
dec
out
fiadds
xor
add
out
adc
pop
cmp
mov
movsl
fcmove
and
sub
mov
inc
pop
shll
cvtps2pd
dec
add
orl
paddusw
mov
std
out
lods
mov
jp
adc
dec
popa
push
in
out
cmp
ret
push
cld
inc
lahf
repz
and
xlat
fists
sbb
push
call
bound
out
aas
loopne
jecxz
movsb
jne
ja
stos
fiaddl
adc
adc
cltd
pushf
mov
mov
pop
push
sbbl
dec
push
pushf
test
push
jmp
push
scas
movsb
icebp
les
pop
mov
fmuls
dec
dec
sbb
push
jl
inc
cmp
or
mov
out
pop
xchg
mov
int3
sbb
shrb
mov
add
fimuls
sub
adc
push
dec
sbb
mov
ja
nop
adc
leave
aas
push
dec
xchg
movl
pusha
fwait
pop
sbb
add
pop
mov
ret
pop
pop
jne
test
push
icebp
sub
inc
es
stos
mov
dec
testl
insl
add
cmp
sahf
lahf
pop
gs
pop
outsb
sbb
sahf
inc
cmp
rcr
inc
push
repz
dec
mov
push
out
aas
add
in
call
jmp
sub
xlat
xorb
pop
jb
mov
sti
cld
xor
mov
or
dec
mov
jecxz
inc
mov
popf
loope
mov
in
jne
sti
xor
sbb
sbb
mov
sub
xorl
movsb
in
loope
xor
xchg
sub
push
fwait
mov
dec
mov
jle
ret
fmul
addb
dec
xchg
outsb
sti
icebp
pop
mov
cltd
mov
cmc
insl
clc
sbb
mulb
fnstenv
mov
mov
inc
int3
gs
scas
mov
popf
sub
rclb
jp
xor
push
push
jno
mov
cmc
pop
cmp
mov
daa
out
mov
xlat
cli
dec
aad
icebp
cwtl
iret
repnz
pop
repz
sbb
pop
adc
jmp
xchg
push
aad
sbb
adc
mov
xor
mov
and
mov
push
out
jl
push
or
dec
call
add
clc
dec
aaa
push
repz
imulb
stos
dec
push
jle
mov
jb
pop
dec
push
fwait
imul
lret
es
scas
cld
loope
sbbb
test
cmpsb
mov
jno
and
in
and
scas
or
popl
je
iret
ja
or
daa
cli
mov
insb
and
arpl
push
aad
sahf
jp
roll
clc
xchg
mov
aad
insl
and
rcrb
mov
cmp
sbb
xchg
cli
repz
lret
or
rorb
sti
fstenv
xor
fwait
jl
cltd
mov
mov
int
cmp
sub
outsl
mov
popa
push
cmp
shll
add
push
bound
aam
dec
add
lcall
cmp
hlt
hlt
add
sbb
daa
add
jne
dec
mov
or
sbb
mov
clc
bound
mov
or
jnp
mov
mov
add
stos
adc
add
inc
aad
popa
imul
pop
fwait
adc
mov
dec
aaa
mov
and
test
stc
addr16
dec
cmp
sub
ljmp
stc
jbe
xchg
xor
stos
push
xchg
enter
push
fstps
rcrb
or
shlb
cmpsb
xchg
or
std
or
sub
out
bswap
push
rcrb
jmp
xchg
loopne
enter
pop
arpl
repnz
mov
call
in
movsl
pop
cmp
ds
jp
repz
mov
test
fisubl
jecxz
les
cmp
cmp
mov
jb
jbe
stos
idivb
lods
repz
test
stc
pop
or
inc
jbe
cmpsl
sbb
pop
push
cld
sub
push
gs
je
wbinvd
xchg
call
xor
es
in
xor
ret
lahf
cmp
dec
test
lcall
in
iret
std
cmpsl
adc
lock
jmp
add
and
das
add
cmc
adc
add
sub
stos
imul
sub
jb
popf
and
shll
cld
lock
cmp
or
ja
fnsave
jae
lret
push
jnp
outsb
mov
aad
dec
nop
push
mov
shlb
and
je
pusha
mov
cmp
arpl
xor
and
pusha
cmpb
inc
ljmp
js
jmp
dec
jb
ficompl
cmp
cmpsb
das
icebp
mov
pop
push
and
sub
in
cmp
and
je
pop
or
inc
testl
pop
pop
xor
and
adc
outsl
inc
dec
jbe
sub
sbb
push
test
pop
into
push
call
outsl
outsb
sbbb
mov
cltd
aaa
sbb
aam
dec
rolb
sbb
mov
mov
lock
movsl
fstpl
cmp
mov
test
or
mov
cmp
and
loope
xlat
cmp
rorl
aam
pop
and
jg
xchg
out
ss
inc
movsl
lret
outsl
inc
adc
cmp
daa
pop
data16
popl
loope
jns
repnz
pop
sbb
jbe
push
mov
jo
adc
stc
lds
rol
sub
mov
sbb
outsb
repnz
movb
repnz
lret
cmp
out
insb
mov
push
imul
lea
and
cmp
cmp
sub
sub
mov
add
orl
int
ljmp
mov
and
pop
dec
imul
cmc
or
adc
or
roll
cmpsb
into
bound
out
cli
test
in
roll
add
mov
push
jmp
dec
xor
jae
cmp
sub
loope
hlt
jmp
xchg
in
lods
mov
aad
dec
xchg
imul
or
inc
and
and
in
xor
stc
rclb
cld
sti
add
inc
dec
sub
stc
lcall
jmp
xor
stos
test
mov
mov
fldt
push
pop
enter
push
xor
sti
mov
outsl
rolb
cmpsb
mov
popf
and
or
lret
in
imul
xchg
out
mov
outsb
cmp
mov
add
pop
mov
movsb
cmp
sub
dec
cli
xor
xor
loop
push
cmc
push
aam
leave
std
and
icebp
enter
ss
inc
dec
and
and
push
mov
sbb
jge
sbb
fwait
cmpsb
cld
mov
jp
jge
and
outsl
push
push
jle
mov
shrl
enter
iret
mov
mov
cmpsb
shlb
cmpsb
mov
add
lcall
jno
and
std
arpl
pop
rclb
sti
adc
stos
jbe
xor
xorb
jns
ret
fmull
divl
xchg
mov
dec
cwtl
jne
push
in
lods
sub
xor
mov
inc
into
add
inc
mov
sub
dec
xor
out
fwait
test
push
ret
jne
cld
add
arpl
sarl
jb
outsb
mov
ficomps
in
imul
fidivrl
pop
and
repnz
sarl
xchg
push
cwtl
es
dec
loope
cli
dec
jg
pop
mov
dec
stos
test
call
jg
out
mov
sbb
pop
std
or
xchg
pop
mov
pmulhuw
mov
lret
push
pushf
add
push
faddl
sub
jne
dec
decb
xchg
sub
mov
adc
ret
repz
mov
cmp
inc
inc
test
push
popa
mov
xlat
fs
test
in
repz
sti
fistps
add
mov
out
outsb
mov
and
lea
pop
xchg
inc
mov
mov
daa
mov
je
inc
rcrl
jge
pop
rolb
jecxz
mov
cmp
xor
mov
xlat
inc
insb
push
gs
leave
pop
ds
js,pn
jo
insb
or
iret
add
fmuls
decb
xor
fildl
adc
add
andl
xchg
or
repnz
mov
or
lret
adc
fldl
daa
xchg
xchg
sti
add
jne
orb
bound
or
lods
movsl
iret
insl
or
in
scas
add
xchg
push
clc
sbb
insb
xchg
stos
lret
cmp
ljmp
stc
add
aas
mov
push
insb
jmp
pop
adc
sbb
arpl
jne
jnp
sbb
sub
mov
or
or
jmp
ret
dec
scas
sbb
pop
add
cmp
cmp
nop
xchg
or
sub
fcoms
test
mov
sub
repnz
lcall
push
out
pop
fwait
call
pop
sub
push
or
ret
divps
adc
lcall
sub
or
push
add
xchg
stos
adc
pop
out
mov
fidivl
pop
jnp
inc
sub
jno
movntq
jno
or
dec
xchg
daa
enter
or
pop
js
sarl
mov
push
stos
sub
fs
mov
jns
adc
cmp
cltd
fdivr
mov
out
xor
mov
pop
or
add
jg
or
dec
call
xchg
and
add
int
cmp
lret
iret
pop
movsl
fdivrl
push
movsl
js
std
jo,pn
cltd
push
leave
scas
jne
or
stos
adc
aam
fimuls
fldt
es
loope
loopne
inc
push
filds
mov
mov
jg
cwtl
push
pop
jge
dec
pop
jnp
orl
xchg
daa
icebp
mov
adc
or
inc
mov
and
mov
cmp
cmp
clc
pop
jae
cltd
mov
mov
or
sub
int3
cmp
cli
addr16
fisubrs
mov
pop
lcall
scas
or
scas
mov
xor
pop
cmc
dec
mov
mov
je
push
xor
cmp
xchg
adc
pop
ja
adc
mov
xchg
cmp
push
lret
out
xchg
mov
jae
je
mov
mov
cmp
imull
fmull
cwtl
imul
cmp
xor
cli
push
outsb
ret
arpl
push
lds
adc
scas
mov
sbb
rcrb
outsl
pop
inc
stos
pop
into
xchg
sbb
popf
in
pop
shll
xchg
fsubs
add
jge
lret
repz
push
mov
sarl
jnp
mov
xor
inc
lret
pop
aad
iret
test
fldt
dec
cmp
push
popa
cmp
pushf
sar
movb
cmpsl
mov
inc
popf
imul
or
xorl
xlat
pop
sub
mov
add
mov
jb
outsl
push
dec
xor
mov
ljmp
xor
fists
adc
push
loopne
adc
aam
push
mov
cmp
scas
leave
lock
mov
push
sarb
push
std
lret
out
repnz
pop
or
adc
stos
xchg
or
sbb
sub
cmp
pop
push
pop
sbb
push
sahf
pushf
cld
cld
das
add
mov
inc
or
mov
push
cmp
mov
stos
mov
push
fs
cmp
mov
and
shrb
cld
mov
push
sub
jns
dec
aad
cs
insb
int3
pop
push
and
add
shll
cmpsb
cmp
movsb
ret
sub
mov
inc
mov
outsb
mov
inc
gs
imul
xchg
outsl
mov
ret
mov
mov
jge
movsb
lock
mov
sub
mov
xor
pusha
out
cmp
mov
fxch
lods
jb
pop
xchg
xchg
dec
stos
jno
pop
add
pop
stc
mov
ljmp
xchg
das
int3
and
dec
or
bnd
ja
mov
into
xor
push
mov
inc
fs
sti
ret
adc
filds
insb
shll
sub
insl
push
inc
xchg
xchg
lret
das
inc
stos
stos
stos
push
jmp
cmp
cs
jnp
push
cwtl
notl
pushf
push
div
xchg
sbb
ljmp
test
pop
nop
mov
jl
inc
fisubrl
fsubl
arpl
sahf
lods
dec
mov
stc
sbb
sub
adc
fdiv
rol
cltd
push
movsl
gs
sbb
xchg
sub
push
loope
xor
shlb
sbb
dec
incl
push
xor
adc
mov
neg
sub
jge
add
loopne
movsl
xlat
imul
insl
comiss
mov
add
mov
in
mov
add
lods
es
cmp
push
lea
insb
inc
cmp
lods
pop
cmp
ret
jae
mov
stos
movsb
inc
aad
sub
stos
cmp
cmc
sub
mov
jge
loop
sbb
cmp
test
mov
dec
cmp
dec
fisubl
sbb
stos
xlat
shll
out
inc
add
mov
pop
les
pop
mov
pushf
add
sbb
cld
popa
pop
cld
int3
push
inc
divb
lods
aaa
mov
or
test
inc
xchg
jno
cli
mov
addr16
fidivrl
test
and
push
sti
insl
hlt
mov
lret
mov
gs
stos
popa
and
in
inc
mov
enter
cmp
cltd
rolb
mov
mov
insl
jle
out
arpl
das
jp
mov
adc
mov
inc
mov
adc
movsl
and
into
lahf
dec
push
pop
mov
mov
dec
test
icebp
pop
ss
lcall
xchg
aam
jmp
rolb
cmp
cmp
loopne
cs
xchg
dec
test
gs
cld
xchg
add
aas
cmp
shll
xor
fistps
jmp
sahf
fidivl
xchg
pop
out
imul
fwait
pop
daa
push
or
sub
mov
pop
lea
dec
inc
hlt
or
fidivrl
inc
fs
mov
stos
xchg
rclb
cmpsl
mov
aam
mov
scas
jg
outsl
xchg
mov
pushf
xchg
mov
add
xor
mov
gs
hlt
clc
mov
into
mov
daa
mov
imul
jge
call
outsl
lock
in
jmp
mov
out
pop
push
push
in
mov
push
ror
imul
movsb
movsb
inc
push
adc
adc
scas
in
fcmovbe
fcomps
dec
cmpsb
mov
aaa
jbe
adc
push
or
ds
ljmp
fnstsw
icebp
mov
sbb
pop
in
outsl
and
pop
pusha
ljmp
arpl
or
inc
dec
xorl
fwait
insb
mov
ja
jmp
stc
mov
int3
paddusw
add
cmp
sub
mov
sti
int3
addr16
jbe
push
sbb
xchg
ss
sub
and
and
das
or
imul
repnz
pop
push
aaa
adc
subb
cmp
jmp
lret
icebp
inc
pop
mov
and
fnsave
in
fsubs
out
jo
fs
and
imul
xchg
out
repnz
add
aad
add
aam
ror
push
mov
pop
dec
cmp
fwait
or
and
insl
xor
adc
push
stos
or
insb
jp
cmove
addr16
lea
mov
nop
test
adc
mov
arpl
pop
xchg
rcr
push
negb
sti
jno
mov
cmp
mov
filds
in
loope
repnz
cmp
out
aas
xchg
cmp
mov
xchg
pushf
stc
push
test
cltd
push
rcll
xchg
sarb
pop
sub
lcall
iret
add
xchg
test
pushf
imul
cmpsl
mov
sarb
fwait
jmp
mov
adc
out
andb
aad
xchg
or
mov
cli
push
lret
xor
call
sub
lods
movsb
cmpb
inc
or
inc
loope
das
sub
or
sub
icebp
push
jle
adc
movsl
mov
jns
inc
popl
add
cld
xadd
and
adc
ja
jno
dec
cmp
add
sbb
xchg
and
jl
in
in
shlb
stos
or
mov
dec
xchg
mov
hlt
sub
or
orb
xchg
test
pop
fisttpl
repz
adc
sahf
arpl
outsl
int
mov
xchg
dec
scas
adc
div
sbb
pop
mov
mov
bound
push
outsb
lods
in
jno
inc
and
std
mov
dec
mov
lock
repz
mov
sub
icebp
sub
cmp
call
inc
mov
pushf
stos
inc
cmp
pusha
xor
mov
push
push
jbe
add
sbb
loopne
cltd
and
int3
repnz
push
inc
xor
in
xchg
lods
jb
out
mov
pop
pop
jg
cmp
popf
fnsave
jmp
fimull
or
xchg
mov
shlb
and
subb
jecxz
sti
fldenv
je
outsl
mov
pop
orb
in
inc
enter
sub
arpl
xchg
push
aaa
clc
cmp
mov
mov
or
add
add
xchg
mov
mov
jle
jno
xlat
rorb
pop
pop
out
push
jo
mov
mov
xlat
hlt
push
insb
or
in
shrl
mov
jb
movsb
adc
jp
ja
negb
pop
inc
xchg
mov
mov
dec
cmp
cmp
ret
in
fsubr
push
cli
test
popa
cmp
sbbl
or
popa
movsl
or
movsb
pop
mov
mov
mov
adc
pop
in
fldl
cs
dec
stos
jg
jno
mov
inc
in
inc
lods
aam
push
flds
xchg
xchg
std
mov
mov
jl
xor
sbb
fidivrs
push
inc
jg
mov
jo
fwait
sbb
roll
js
dec
iret
pop
mov
inc
ss
in
xor
fwait
hlt
insl
xchg
andb
sbb
pop
negl
cmc
test
jb
mov
ja
adc
repz
or
add
cmp
inc
xor
mov
jns,pn
push
daa
ljmp
fistl
mov
scas
scas
push
div
pop
sub
pop
fwait
pushf
push
pop
ret
cmc
lahf
xlat
mov
jbe
pushf
ret
pop
in
adc
xor
inc
nop
in
fisubl
lea
xchg
fwait
add
jecxz
insl
mov
test
pop
add
scas
jle
scas
movsb
cmpb
imul
loope
pushf
loope
cli
cmc
fs
jmp
push
sub
push
pop
pop
mov
and
es
fs
lods
cmp
push
sbb
enter
pop
push
and
clc
lcall
xchg
xor
divb
stos
dec
cmp
fiadds
sbb
or
fsubrl
xor
nop
xlat
aad
cltd
push
movsl
mov
lcall
xchg
aaa
and
frstor
pop
stos
jg
arpl
push
or
jle
sbb
xor
and
mov
xor
imul
in
pop
fdivs
cwtl
daa
sub
cmp
fsubrs
cwtl
addl
popf
mov
lods
xor
or
xor
or
xchg
push
repz
lods
cli
mov
dec
and
insl
and
scas
cmpl
imulb
add
frstor
es
sbb
insl
jg
fstpt
mov
pop
push
scas
xchg
sub
stos
pop
add
je
cmpsl
shlb
loop
test
adc
out
xchg
icebp
int3
dec
mov
add
jmp
add
or
mov
adcl
cltd
inc
xchg
cmp
out
cmpsb
aam
cmp
aaa
xor
dec
bound
add
mov
jne
repnz
sbb
je
enter
lock
pop
xor
gs
xchg
push
xor
inc
iret
xor
jno
mov
sub
jge
mov
xchg
es
xor
lods
cli
pop
sub
loop
push
add
mov
sub
sbb
faddl
mov
sub
test
dec
mov
add
imul
iret
decl
iret
mov
in
out
xchg
inc
enter
or
or
faddl
mov
xor
xchg
unpckhps
stos
lahf
cmp
int3
shll
stc
sbb
pop
shl
or
inc
cltd
mov
adc
xchg
add
jne
jae
sub
sub
dec
jae
ss
inc
nop
mov
lods
lds
mov
cmpsl
nop
fsubl
jp
into
jae
push
into
cmc
aam
jno
pop
pop
out
push
lock
les
aad
dec
pop
sahf
xor
les
dec
imul
jne
lock
icebp
shr
fdivl
fisttps
push
std
cli
out
and
bound
jae
data16
and
ss
into
jno
lea
icebp
push
shrl
sub
dec
lret
outsl
or
push
jne
sub
filds
push
cli
mov
xor
jmp
fwait
and
fcompl
stc
hlt
subl
fsubs
dec
and
jmp
mov
nop
mov
test
aaa
mov
roll
sahf
scas
push
leave
fimuls
loopne
int3
movsl
sub
jne
pop
xchg
cmp
sbb
fs
shll
mov
jns
pop
cld
or
jmp
js
cmp
sahf
orl
mov
dec
popf
mov
sub
pop
xor
push
mov
xor
inc
aaa
sbb
inc
test
popa
sti
xor
push
sbb
add
mov
inc
scas
test
orl
incl
je
mov
cmp
mov
push
lock
sbb
out
lock
cmp
idiv
xor
in
jl
leave
lea
sub
loope
icebp
cld
pop
push
push
and
int3
das
inc
adc
or
pop
dec
imul
push
popf
leave
jbe
pop
xchg
ftst
dec
loope
xchg
dec
clc
add
outsb
icebp
lods
loopne
sbb
div
cmpsl
dec
xchg
imul
test
popf
adc
xor
test
mov
iret
and
mov
pop
cmpsl
dec
push
mov
xchg
add
shll
jge
push
and
xor
dec
stc
arpl
dec
xchg
pop
jne
pop
xchg
mov
mov
pushf
sub
ds
ja
sbb
nop
xor
out
fwait
insb
add
jb
mov
sbb
arpl
pusha
sbb
cltd
lds
cmc
lret
xchg
jmp
pop
imul
or
loopne
xorl
cwtl
lret
dec
and
mov
arpl
or
imul
xor
mov
cmc
or
ds
or
aas
xchg
fdivp
call
mov
mov
mov
mov
int
mov
xchg
mov
fwait
push
xchg
adc
push
into
or
sub
dec
xor
fdivrl
hlt
rcr
ss
and
sbbl
out
add
flds
push
sub
mov
sbb
jp
ret
fistpll
cmpl
mov
hlt
cmp
in
adc
clc
cs
or
popa
xchg
aas
addr16
lods
lahf
sub
lds
int3
iret
lahf
les
subl
and
cmp
adc
mov
cmp
jno
adc
push
mov
push
in
mov
popf
arpl
lods
xor
rcr
imul
mov
jae
icebp
inc
in
xor
adc
cmpb
jno
sub
ja
push
xor
push
jns
and
push
jns
cwtl
xchg
movsb
xchg
jg
pushf
and
cwtl
add
pop
xor
xlat
cmp
or
inc
mov
jle
bound
sub
xchg
mov
inc
stos
leave
sahf
mov
xor
dec
adc
push
add
xlat
test
test
pop
es
push
mov
loope
add
mov
clc
test
inc
mov
xchg
js
push
cmp
cs
sbb
popl
fdivr
ja
fs
xlat
in
ds
adc
ds
test
in
into
arpl
leave
xor
js
mov
add
xlat
in
loop
jae
push
gs
pop
lahf
pop
shll
scas
fnstsw
jmp
mov
loopne
sar
inc
pop
jg
mov
insb
out
add
mov
jg
mov
ret
jge
dec
ss
ret
hlt
jns
aad
inc
push
inc
mov
adc
adc
repz
lods
cmp
dec
pop
mov
ficoml
xchg
cmp
dec
lods
or
xchg
js
mov
sahf
sahf
push
js
lods
mov
divb
test
or
ss
push
shrl
and
icebp
divl
cmp
inc
dec
push
xor
push
icebp
pop
pop
scas
mov
sbb
cli
adc
testb
loopne
mov
push
jecxz
xlat
pop
out
mov
pusha
adc
ficomps
pop
jl
testb
lea
dec
subl
mov
mov
xor
test
push
inc
test
push
call
sub
push
mov
pop
arpl
out
sub
push
lcall
loope
sub
cmc
pop
adc
add
cwtl
or
outsl
mov
movsb
xchg
ret
push
cmp
mov
pop
dec
xchg
outsl
dec
sahf
cmp
das
cwtl
imul
popa
fisubrs
mov
scas
ffree
mov
xor
movsb
xchg
mov
jl
fisubrs
push
lahf
insb
inc
fcomip
dec
loope
iret
outsl
addr16
aad
jbe
dec
mul
imul
jecxz
jns
into
popa
dec
inc
insl
cmpsl
enter
lret
inc
data16
mov
idivl
pop
clc
sbb
das
out
mov
mov
je
lock
pop
loopne
or
sbb
std
adc
pushaw
test
nop
jmp
push
mov
outsb
popf
mov
inc
xchg
dec
mov
jne
sbb
iret
xor
inc
jne
loop
je
xorb
or
lods
xchg
adcl
insl
rorl
sub
sbb
dec
sbb
pop
push
les
ljmp
sbb
xchg
or
adc
add
inc
lea
push
lods
pop
jle
into
sbb
push
pop
fnstsw
lods
subb
xor
aam
sbb
insl
fildll
sbb
out
push
sbb
stos
sbb
cmp
and
les
stos
in
in
push
aad
add
inc
xchg
dec
lds
daa
enter
push
xor
int
mov
mov
mov
sub
add
icebp
std
in
lods
dec
aam
mov
and
inc
cs
and
lahf
arpl
cwtl
adc
cmc
jae
loope
cmpsb
pop
push
and
jle
adc
fstl
mov
out
mov
ljmp
cltd
js
js
xlat
pusha
enter
or
jb
pop
movsl
aam
das
jae
rcll
pushf
add
imul
dec
lcall
aas
mov
fiadds
adc
scas
jl
filds
cmc
test
jge
dec
push
cmp
mov
and
mov
xchg
ret
sahf
sub
or
mov
loope
xlat
leave
push
or
dec
sbb
sbb
adc
xchg
push
in
pop
aas
scas
stc
jge
xchg
mov
aad
lods
jmp
sub
mov
add
hlt
cli
ret
xor
pop
pop
mov
pop
popf
xor
in
pop
and
arpl
xor
cmpsb
mov
ds
mov
dec
push
fidivrl
bound
clc
out
test
push
add
mov
cmp
cmp
iret
add
mov
testl
rcr
daa
js
push
xchg
push
cmpsl
imul
test
out
dec
inc
icebp
and
fdivl
fnstcw
cmp
or
enter
mov
loop
je
cmp
push
add
xor
aaa
repz
jbe
xchg
scas
cmp
sub
push
or
inc
push
ret
mov
inc
int
xor
dec
fistpl
test
ljmp
push
movsb
xchg
stos
aaa
dec
jge
jb
inc
lea
dec
es
ljmp
sahf
das
add
movsl
out
stos
push
loope
push
sbb
pop
mov
add
sub
push
stos
dec
mov
adc
xchg
pop
xchg
roll
dec
mov
iret
je
loop
out
cmp
aad
popf
sbb
mov
jnp
sbb
stc
jae
mov
inc
bound
pop
jle
dec
sub
push
add
outsl
mov
mov
push
jge
lds
lods
mov
lcall
ja
sub
mov
sub
add
call
mov
xor
mov
iret
movsb
mov
aad
mov
sbb
fcoms
mov
cwtl
push
aad
xchg
js
lret
les
inc
pop
ret
cld
and
and
jnp
faddl
mov
cmp
aad
sbb
xchg
jno
incb
int3
mov
dec
xchg
call
dec
jp
orb
jge
cmp
leave
jecxz
xchg
push
mov
lods
push
les
out
xchg
insb
mov
adc
fsubr
sbb
cmc
add
xlat
add
ljmp
or
inc
cmp
cmp
pop
add
mov
iret
aad
fidivl
fimuls
mov
nop
insb
imul
call
dec
cwtl
nop
notl
mov
pop
add
je
repnz
push
inc
daa
lea
subl
jmp
mov
in
adc
push
arpl
lods
leave
jno
out
jp
mov
mov
mov
push
in
and
ss
fs
adc
in
les
repz
push
or
push
adc
ret
rclb
bound
sbb
push
push
or
call
sti
test
inc
pop
std
push
jne
push
sub
xchg
push
jne
jnp
lret
xchg
pusha
pop
adc
sub
mov
test
push
pop
js
ds
lret
lock
ret
mov
add
nop
scas
dec
cwtl
test
imul
mov
mov
and
adc
mov
sbb
insl
xchg
cmp
or
lret
outsb
cmpsl
xor
cltd
mov
jae
dec
mov
bound
push
jae
inc
int3
and
subb
or
xchg
inc
pop
aaa
mov
out
inc
sbb
icebp
inc
fsubl
pop
scas
xor
push
xchg
outsb
clc
dec
fidivrs
push
add
jno
adc
push
pop
cld
std
dec
xchg
rorl
lahf
jp
push
add
lds
xchg
scas
rorb
lock
roll
lods
icebp
repnz
bnd
mov
sti
add
sbb
push
xor
sub
lds
aaa
mov
or
iret
test
mov
push
pop
push
push
testb
adc
push
outsb
pslld
push
mov
divl
or
mov
mov
aaa
cs
shl
scas
or
sbb
xchg
add
mov
mov
sbb
inc
outsl
mov
frstor
jmp
addl
cmp
cmpsl
xor
push
insb
je
xor
jbe
addb
pop
adc
lret
hlt
stos
adc
das
lret
push
repz
ret
imul
inc
sbb
repz
jp
sub
mov
je
shlb
test
jne
rclb
mov
dec
mov
subl
sahf
mov
je
fsubl
sarl
pop
pop
in
sbb
xor
incl
sbb
jecxz
mov
ficompl
and
stos
aaa
sbbb
mov
inc
dec
inc
rolb
jno
push
push
dec
xchg
stc
inc
pop
sbb
fcompl
aam
popa
cmp
inc
mov
adc
leave
pop
sbb
fildll
sub
rol
test
pop
cmpsb
rorb
xchg
or
ja
arpl
sbb
mov
push
fisttpl
enter
fsubs
inc
or
pop
sbb
in
mov
insl
ja
outsl
movsb
and
inc
dec
icebp
shl
les
xor
lds
and
sub
push
push
and
and
pusha
addr16
das
jl
xor
jnp
nop
addr16
aam
adc
hlt
scas
mov
pop
or
jg
cmpsl
mov
pop
inc
mov
jnp
inc
pop
js
shrd
pop
cltd
test
and
xchg
cmpsb
popa
je
test
fidivs
leave
out
dec
mov
in
xchg
or
in
scas
add
movsb
test
lods
sbb
into
lahf
and
mov
shl
ret
dec
and
stc
lds
mov
out
push
xchg
sbb
xor
mov
fs
adc
sbb
xchg
mov
repnz
mov
adc
add
lcall
rcl
mov
cmc
adc
sbb
cmp
js
jg
mov
or
cld
leave
idivb
sub
pusha
xor
mov
jbe
scas
mov
out
mov
jle
aaa
dec
xor
fmull
stc
lods
nop
ja
mov
xor
dec
stos
test
sub
iret
dec
aad
inc
and
push
jecxz
out
cmp
movsb
mov
pop
push
fldcw
fistps
fdivp
repnz
push
add
mov
insl
lcall
cli
pop
or
test
bnd
bound
aad
cld
lea
pop
js
sub
sbb
inc
push
loope
dec
mov
loopne
dec
popa
and
mov
push
lahf
adc
stc
pop
ret
mov
roll
das
push
sbb
das
pushf
xor
mov
or
lods
cmc
out
movsl
push
cmc
aam
mov
mov
leave
jg
sub
int3
enter
mov
arpl
orb
add
and
pop
mov
stc
adc
popf
dec
imul
loop
inc
in
es
in
adc
cmp
fs
adc
stc
subl
call
xchg
mov
jle
mov
mov
mov
sbbb
mov
fistpl
int
cmc
mov
or
or
jnp
aad
xchg
in
int3
or
ret
sub
and
push
test
xlat
or
push
lds
in
fsubrl
jecxz
sahf
push
out
movsb
movsb
sub
pop
stos
mov
inc
dec
sbb
mov
and
cmp
movsl
fmulp
mov
repz
jmp
adc
mov
jmp
mov
sbbl
into
sbb
and
dec
das
inc
cmpsb
int3
fcomps
inc
jp
add
add
idivb
lret
dec
pop
and
cmp
imul
movsl
xchg
fisttps
pusha
cmc
shr
fimuls
pop
aam
cli
jge
leave
test
mov
inc
adc
and
lcall
sbb
adc
loope
jbe
cwtl
jne
dec
cmp
cmp
adc
rorl
mov
pop
sub
andl
cmp
lds
cmpsl
jg
das
mov
fsubrl
aad
rolb
xchg
jge
orb
subb
and
xchg
std
fcomp
je
mov
mov
iret
cltd
in
test
iret
dec
jle
jmp
xchg
lret
sub
sbbl
pop
into
cwtl
and
ret
les
ja
or
lds
mov
and
out
mov
popf
movsb
int3
and
pop
outsl
adc
lods
adc
addr16
push
pop
test
dec
xor
and
inc
mov
or
xchg
jo
mov
push
jle
test
out
addr16
adc
cs
xor
inc
xor
push
mov
add
out
mov
dec
pop
je
loope
mov
lock
add
inc
push
fiadds
loope
fcoml
pop
xchg
cmpsb
inc
sti
shr
aam
rclb
xor
scas
out
mov
inc
push
inc
aas
mov
xchg
aaa
hlt
xlat
push
or
pop
sbb
dec
push
ret
fimuls
scas
cmpsl
inc
sub
lods
cli
push
pop
sub
sbb
pop
push
shl
ja
inc
sub
pop
jp
cmpsl
dec
out
and
pop
lret
fbld
jmp
lahf
cli
dec
mov
lcall
and
in
sbb
addr16
pusha
dec
cltd
push
stos
adc
jb
stos
jp
pop
mov
aaa
pop
sti
push
pop
mov
ret
es
xor
pop
cltd
cmpsb
rclb
sbbb
xchg
cmp
fbstp
adc
push
iret
adc
jno
sti
push
out
and
fs
pop
mov
cmpsl
inc
into
or
dec
mov
and
mov
push
push
scas
sbb
sub
into
repnz
jns
aam
out
ja
jg
mov
popf
lret
pop
adc
scas
dec
pop
mov
loope
jno
mov
push
adc
xor
jnp
loope
jno
shl
mov
jle
movsl
or
subl
out
rcrb
add
mov
or
add
test
test
ja
les
scas
arpl
testb
sub
sub
data16
jle
push
dec
mov
sarb
rorl
pop
sub
popf
mov
push
or
fisubs
cmpl
test
adc
mov
cmp
cmc
repz
into
sbb
mov
test
jb
dec
rorb
adc
cmpsb
jns
lock
inc
gs
fmul
push
int
leave
fwait
dec
icebp
shll
out
ds
int3
mov
addr16
push
push
call
aaa
dec
jge
pushw
xchg
xchg
sarl
mov
out
inc
push
and
or
shrb
ss
ret
dec
push
frstpm(287
inc
adc
jnp
adc
les
mov
std
popa
jb
xor
fisttpll
in
inc
pop
mov
lret
scas
stos
movsl
xor
pop
mov
push
movsb
fwait
vrsqrtps
adc
pop
in
jae
or
jno
ljmp
aas
adc
and
aam
pop
push
inc
insl
push
jb
lret
push
cld
pusha
mov
dec
lods
outsb
rol
xor
mov
mov
adc
sub
xor
pushf
cmpsl
es
stos
insb
dec
sbb
ret
mov
add
mov
pop
mov
pop
mov
jl
movsl
outsb
stos
pop
mov
test
mov
adc
popf
aaa
fs
scas
pop
pop
addl
jmp
sub
jnp
hlt
in
jb
or
arpl
cwtl
pop
and
jmp
sbb
pop
fnstcw
int
rep
icebp
arpl
sbb
test
aas
cmp
fcmovb
ja
lcall
fsubl
mov
mov
daa
movsl
arpl
gs
mov
push
and
fdivs
mulb
push
jg
mov
or
xchg
jb
push
dec
mov
fwait
push
rcrl
mov
and
jp
pop
insl
sbb
adc
jg
aas
push
fldt
enter
into
idiv
and
push
or
pop
pop
pop
dec
sbb
inc
arpl
nop
mov
jge
push
jne
fldcw
xchg
in
rorb
jns
mov
jp
inc
pop
leave
fildll
cwtl
mov
xchg
mov
cmp
mov
stos
cmp
pop
inc
aaa
xor
mov
mov
in
shll
inc
or
test
sub
push
fcmovnb
sbb
or
test
cmp
jmp
mov
inc
inc
mov
jecxz
out
cmp
ja,pn
add
push
adc
jmp
insl
insl
xor
pop
or
add
pop
or
cmp
daa
pop
mov
sbb
insb
cli
fstps
lods
mov
int3
stos
xor
dec
clc
cmp
xchg
mov
adc
decb
dec
cmp
popf
sub
test
jo
sbb
addr16
pop
inc
sub
imul
mov
lret
xor
psadbw
fdiv
loopne
dec
add
imul
and
pushf
xchg
sub
shl
jnp
add
in
loopne
in
scas
inc
dec
mov
mov
mov
lahf
inc
pop
xchg
bound
inc
les
aas
pop
rcll
mov
push
push
cmp
jae
mov
mov
adc
mov
mov
sbb
lret
xchg
lds
ljmp
int
cmp
int3
in
adc
pop
push
xor
imul
int
adc
gs
and
inc
jae
and
mov
push
xor
movsl
arpl
lea
push
dec
mov
xchg
push
fdivrs
cmp
ficompl
add
cmp
lahf
sub
xchg
add
rorl
imul
mov
test
push
ja
pop
adc
fs
clc
and
cmc
or
daa
gs
xor
jmp
test
jbe
cmp
push
out
jnp
pop
fs
aas
pop
mov
call
icebp
iret
sbb
std
mov
and
fs
push
adc
pop
pusha
clc
loope
fwait
jae
push
mov
call
jle
xchg
mov
das
jmp
pop
jo
or
pushf
jmp
dec
mov
iret
ret
imul
in
insl
cli
aas
push
cmp
jl
iret
xchg
sbb
sbb
repnz
mov
lds
test
scas
nop
adc
arpl
and
mov
lods
inc
movsl
inc
pushf
movsb
mov
loop
add
add
js
cmc
insl
enter
add
lret
mov
dec
jns
xchg
cmp
loopne
idivl
sub
cld
hlt
inc
add
sub
mov
sbb
in
lret
push
mov
sub
jle
das
dec
cmp
pop
gs
push
negl
add
sub
iret
in
cmp
mov
mov
aam
popa
sub
jbe
sub
add
or
mov
fmul
rcll
clc
arpl
jo
pop
push
sahf
inc
repz
sub
sub
push
dec
popa
and
ds
push
mov
jl
xchg
cmpsl
mov
push
scas
fisttpl
sbb
test
shl
stos
lahf
arpl
sbb
and
dec
inc
inc
sub
jb
stos
nop
lcall
sti
rclb
xchg
mov
insb
rorb
xor
pop
jns
and
xor
mov
xchg
pop
test
test
and
data16
sarl
popf
loope
testl
mov
xchg
mov
addr16
jg
sub
stos
icebp
lods
aad
push
sbb
dec
fbstp
push
sbb
bound
adc
imul
test
shlb
jne
pop
pop
hlt
push
cmp
push
ljmp
mov
mov
add
fidivrs
dec
inc
aam
iret
arpl
push
lock
mov
in
adc
std
add
inc
xchg
mov
jmp
out
sub
push
jae
les
lock
adc
out
mov
jae
fisttpll
jp
dec
jl
mov
adc
push
int3
jecxz
cmpsb
mov
shrb
jecxz
pop
mov
in
cmp
xlat
aam
loope
add
pop
test
lahf
popa
stc
stos
lcall
stos
xorb
in
mov
cmp
cltd
imul
fists
call
inc
and
push
shr
lock
mov
shll
jp
push
add
sbb
ret
lea
js
out
or
push
and
js
ret
fimull
jp
ret
andb
movsb
cmp
xchg
int
sbb
lret
fs
pop
cmp
lock
push
fcomps
nop
in
in
sub
imul
mov
popa
test
push
jne
stos
and
cmpsb
repnz
gs
shrl
push
adc
and
loopne
jae
fnstcw
or
mov
xchg
cwtl
shlb
fisubs
push
test
outsb
add
sub
push
shlb
imul
icebp
jbe
hlt
rcl
out
xor
jbe
pusha
stc
xchg
popf
mov
push
sahf
movsb
les
cwtl
pop
nop
push
adc
arpl
out
test
sbbb
mov
jg
mov
scas
repz
scas
cmp
aaa
aam
bound
mov
mov
sbb
pop
int
lock
sar
mov
ljmp
fimull
mov
loope
xor
aaa
mov
in
xchg
mov
sbb
xor
test
add
inc
add
das
inc
fistpl
jns
mov
inc
sub
cwtl
int3
fimull
iret
xor
inc
dec
mov
sub
and
cmp
push
dec
inc
push
in
mov
or
imul
pushf
sub
add
rorb
nop
pop
sub
fstpl
outsb
test
cld
aaa
add
nop
aam
nop
test
or
mov
add
lods
sub
mov
or
jne
hlt
fidivs
mov
dec
sub
xor
iret
pop
sbb
popa
enter
xor
cltd
push
leave
leave
arpl
mov
addr16
mov
out
shll
adc
cmp
xchg
sbb
std
clc
mov
pop
jg
andl
into
dec
iret
xor
add
leave
sbb
outsl
int
stc
cmpb
jmp
add
xchg
dec
mov
adc
std
int
fwait
lret
and
addr16
adc
xor
arpl
sbb
out
sub
out
add
in
outsl
mov
sub
orb
adc
mov
ss
shrb
pop
sub
inc
hlt
repz
mov
and
mov
into
sub
xchg
xchg
and
pop
pop
pop
iret
xor
cmp
jmp
loopne
sarb
aaa
rclb
sti
out
cmp
out
inc
push
mov
sbb
mov
or
inc
mov
ret
fnstsw
test
cmp
sbb
lods
jno
jmp
sbb
pop
push
stc
fsub
mov
fnstenv
lds
sarl
jl
leave
mov
push
jp
xchg
mov
mov
hlt
sbb
popf
dec
jbe
adc
arpl
pusha
jl
add
adc
loop
call
xor
bswap
sbb
sub
inc
cmpsl
cmc
shl
rorl
xor
cli
ds
pop
cmp
mov
in
dec
in
xchg
pop
stos
or
xor
fimuls
xchg
sbb
shll
or
jbe
jecxz
fidivl
cmpl
jnp
hlt
js
inc
add
jb
fcmovbe
xor
xor
cmp
dec
std
scas
inc
push
movsl
mov
xor
out
movsb
repnz
loope
rcrb
insl
push
daa
rcr
xchg
icebp
push
push
pop
cmp
xor
pushf
mov
xor
popa
inc
dec
mov
mov
and
mov
sub
scas
xor
loopne
es
lahf
dec
mov
dec
inc
jae
jmp
mov
data16
paddb
or
mov
stc
jl
in
or
aas
sub
or
cs
cld
cli
or
movsw
mov
cli
insb
dec
dec
push
int3
out
dec
nop
mov
fidivs
mov
lea
sbb
sti
mov
mov
pop
and
mov
mov
lcall
xor
or
xchg
xor
test
and
sarl
je
flds
sbb
xorb
iret
xchg
loop
jge
test
pop
sbb
out
xor
or
pusha
popf
cld
dec
inc
sbbl
jle
or
sub
fsubr
test
repnz
mov
popa
pushf
jle
test
lcall
mov
daa
jno
xchg
mov
cmp
inc
xor
mov
jnp
mov
movd
mov
out
jns
loopne
lods
icebp
xchg
cld
negl
cmp
sbb
jo
push
fcoms
cli
shrb
mov
adc
xchg
jmp
add
jno
or
cs
pop
fildl
lcall
ja
std
or
lcall
fstpt
and
mov
xchg
xchg
loope
cmpsl
add
push
outsb
and
xchg
mov
jb
inc
cld
fisttpll
sbbl
ret
or
int3
xlat
daa
inc
jns
jle
ljmp
cmp
popa
pop
pop
std
sarb
aaa
cmp
sbb
arpl
popa
out
cmpsl
xor
add
lahf
out
cli
pop
xchg
inc
and
nop
pop
sti
lcall
sarb
mov
loopne
add
jecxz
xchg
decl
sub
movsl
imul
popf
jne
fsubl
js
fisubrs
mov
rcll
pop
pop
add
lret
pop
mov
fidivl
movsb
cmpsl
or
add
jmp
sbb
mov
or
fmull
pop
fwait
or
outsl
into
mov
cmp
cld
mov
jge
push
test
adcl
lahf
adc
mov
mov
sbb
test
mov
xchg
dec
push
or
sbb
dec
mov
ret
js
push
mov
sbb
adc
test
addr16
jb
lcall
xlat
and
aaa
aaa
dec
sbb
add
add
push
sbb
pop
data16
std
pop
sarb
jno
cltd
jmp
push
add
sbb
sub
stos
imul
or
mull
push
xchg
mov
outsb
inc
cwtl
cli
push
mov
jbe
lret
sbb
mov
inc
negl
mov
jge
jno
adc
ror
int3
test
mov
mull
sbb
imulb
popf
test
jp
into
not
push
leave
xlat
sub
test
ljmp
jge
fcmovne
cmp
aam
push
pop
and
xchg
outsb
inc
inc
push
repz
pusha
add
scas
in
call
xchg
sbb
xlat
es
pusha
cmp
xchg
out
andb
out
jp
pop
mov
xor
jb
dec
in
int
inc
cld
popa
stos
pop
mov
movsl
jns
pop
inc
xchg
mov
mov
repnz
push
nop
cmp
enter
fcompl
loope
jb
xchg
cmp
dec
jmp
mov
jge
sub
xchg
cld
sbb
jmp
aaa
xchg
xchg
loopne
test
mov
inc
mov
ljmp
call
ret
mov
mov
int3
jae
mul
out
ss
clc
dec
daa
sbb
sub
lods
rclb
fwait
clc
push
lods
sub
mov
scas
adc
ds
mov
push
mov
adc
adc
and
pop
stos
fldcw
inc
leave
aad
loope
clc
pop
roll
je
jo
or
sahf
sub
movsb
arpl
jl
movsb
mov
lock
xor
int3
test
cmpsl
test
inc
leave
xor
mov
das
cmp
test
aam
xor
and
mov
xchg
push
dec
out
inc
das
sub
sub
push
push
test
and
rcll
sub
sub
pop
repz
lahf
inc
dec
subb
leave
dec
addr16
aas
inc
cmp
leave
std
test
push
adc
sbb
std
dec
push
out
fists
dec
sarb
and
mov
dec
xchg
push
jb
xchg
cmpsb
mov
hlt
ds
fldl
lock
mov
lahf
xor
cmp
cwtl
outsl
call
cld
jl
add
sub
insl
inc
les
cmp
adcl
lret
hlt
pop
adc
lods
xor
in
stos
fisttpll
inc
add
xchg
mov
out
sti
or
sbb
arpl
mov
pop
jl
xlat
outsl
inc
arpl
int3
and
push
hlt
test
sbb
ljmp
lcall
sbb
cmp
enter
out
fpatan
stos
xlat
xchg
pushf
mov
stos
xor
push
inc
cmp
notb
pusha
jo
mov
pop
jne
adc
push
add
jg
js
lcall
out
imul
mov
cs
xchg
hlt
test
cs
pop
ja
stc
sbb
call
jl
or
cmc
cmp
mov
sub
fs
std
out
xchg
push
inc
rcrb
scas
xor
hlt
mov
xchg
cmp
int
mov
rorb
into
sub
mov
xor
in
pop
aad
inc
scas
ficoms
jp
cli
lds
out
jae
mov
ret
cmc
cmc
mov
lods
dec
add
inc
adc
jp
adc
adc
lcall
adc
aam
adc
inc
inc
mov
bnd
jmp
cmc
daa
or
fldcw
cmc
mov
xchg
jbe
inc
movsb
xchg
cmp
inc
sbb
cmp
fwait
inc
ds
in
ret
add
aaa
into
mov
and
cli
jl
les
xor
mov
dec
jb
jae
loop
dec
fwait
inc
call
test
xchg
adcl
and
lock
addr16
or
cld
push
fistl
shl
ror
dec
jns
jl
xorl
dec
xor
lds
and
mov
cmpsl
fs
nop
sub
arpl
pop
call
fnstenv
adcl
test
or
std
scas
jne
dec
mov
pop
movsb
fistl
rorl
insb
xor
out
dec
xlat
sti
xchg
je
cmpl
enter
idivl
mov
test
imul
jle
cmpsl
ja
mov
insb
sub
std
repnz
cmc
loop
sub
cs
fsubrl
sarl
pushf
xlat
or
arpl
outsb
stc
mov
imul
jl
xor
push
stc
adc
cmp
fs
sbb
xchg
pusha
adc
dec
push
nop
sbb
add
adc
mov
rcrl
mov
gs
aad
inc
dec
sub
xor
add
lcall
mov
fs
lea
dec
loopne
fisubrs
in
out
xor
jo
dec
and
in
sub
fstl
mov
jl
pop
xchg
jl
out
or
inc
jle
sub
scas
jae
dec
call
cmc
cwtl
pushf
sbb
push
jmp
jg,pt
negl
push
js
adc
fwait
push
cli
imul
sbb
or
dec
mov
and
push
es
or
cmp
in
pop
jns
repnz
xchg
mov
repnz
cmp
fcmovnb
inc
lock
or
jmp
xchg
sub
push
or
incl
lods
xlat
test
cmc
data16
jp
ret
scas
pusha
or
pop
addr16
out
lock
out
sbb
xorb
mov
icebp
adc
mov
in
jge
push
arpl
mov
aad
sub
les
daa
das
mov
pop
and
jg
jne
xor
mov
pop
adc
sahf
xor
cmp
or
ror
insl
insb
push
push
or
and
les
lret
stc
test
repnz
pop
jl
sbb
push
and
js
push
cli
dec
mov
daa
dec
clc
fs
adc
mov
mov
test
jb
inc
ds
mov
stos
jbe
into
jp
mov
and
mov
sub
pushf
lea
out
cmpsl
push
roll
push
jae
stos
xor
mov
cltd
pusha
inc
lret
call
xchg
sbb
cmp
pop
cmpsl
pop
ss
gs
sub
mov
fcmovbe
cmp
nop
jo
xchg
xor
adc
aam
stos
sbb
cmpsb
pop
ja
popf
pop
pop
mov
int
cld
stos
outsl
sbb
xor
cs
dec
aam
out
nop
lods
lock
xor
mov
dec
stc
icebp
loop
faddl
xor
dec
mov
movsl
dec
in
sbb
test
in
in
pop
push
test
mov
push
jbe
add
lret
adc
inc
popl
andb
pop
mull
inc
sbb
movsb
out
rorb
rclb
and
mov
aad
push
into
sbb
and
add
popa
ficoml
jecxz
arpl
mov
and
fistpl
sbb
mov
xchg
cmp
adc
pop
xchg
jne
push
sub
aad
ss
jmp
sub
jecxz
fs
loopne
aam
mov
out
jmp
jnp
in
loopne
jge
inc
sub
mov
pop
cltd
mov
sbb
loope
imul
jns
xchg
aad
lahf
inc
sbb
push
push
loop
push
jle
and
sbb
icebp
xchg
xor
push
dec
push
add
popa
xchg
cmp
mov
inc
jno
inc
adc
pop
dec
push
add
push
dec
pop
icebp
popf
leave
ret
cmp
push
jmp
mov
inc
mov
imull
ds
xchg
jnp
js
stos
push
mov
test
cmpsb
jns
inc
pop
fcoml
mov
add
stos
repz
and
adc
dec
fcomip
mov
jo
mov
repz
test
pop
out
inc
out
push
mov
sub
cld
stos
pushf
add
mov
ret
test
outsb
adc
ss
movsl
xor
icebp
mov
out
ljmp
cmp
popf
mov
popf
dec
push
iret
dec
or
lods
pop
xchg
mov
dec
mov
xor
mov
mov
xchg
mov
fwait
lret
lcall
aas
lods
lds
push
out
jb
mov
jmp
mov
or
les
fcoml
xor
mov
in
push
inc
push
xchg
lds
xor
outsb
xchg
test
imul
stc
loopne
out
xlat
scas
mov
mov
pop
je
add
sbbl
jno
addr16
bound
sarb
jne
std
leave
aaa
ret
add
ret
add
aad
jnp
divl
stc
push
mov
and
out
int
cmpsl
lods
xor
and
pop
and
jl
pop
les
mov
fbld
js
cmp
sbb
ret
ret
cmp
inc
mov
jbe
push
push
pop
cmc
rolb
orl
mov
scas
cld
es
movsb
test
and
inc
daa
mov
hlt
mov
imul
sbb
stos
decl
cmpb
sub
cli
push
out
xchg
jns
mov
adc
xchg
inc
inc
sbb
mov
push
int
or
xchg
adc
test
sbb
cwtl
push
push
jns
in
pop
xor
hlt
dec
movsb
jle
mull
es
jae
push
xchg
mov
imul
mov
push
aam
cmp
dec
les
push
je
stos
push
adc
pop
and
sbb
scas
adc
fsub
jnp
out
jbe
sbb
test
add
jge
sti
or
iret
fidivrl
cmp
inc
or
xchg
int3
popa
mov
rol
cmc
or
pop
and
mov
jl
fwait
mov
popf
int
aad
das
push
mov
inc
rclb
or
pop
idiv
jbe
dec
push
add
lea
int3
adc
mov
mov
inc
mov
sbb
mov
xor
enter
or
jne
xchg
cmpsl
imul
mov
addr16
dec
push
push
pop
das
cmp
lret
push
in
inc
jle
jno
stos
dec
mov
scas
popf
jl
out
jo
pop
xor
pop
mov
cmpsl
xchg
push
ds
jo
sarl
popf
cld
inc
mov
pushf
lea
cmpl
jle
add
push
nop
mov
pop
xchg
dec
loopne
sub
push
lods
shlb
mov
or
lods
mov
idiv
pop
adc
rcrb
loope
test
add
adc
rcll
std
stc
mov
jp
inc
mov
fwait
ljmp
ljmp
xchg
jmp
adc
inc
cmp
hlt
pushf
es
in
pop
sbb
test
fwait
rclb
sbbb
cli
sbb
xor
pushf
fisubrl
filds
out
xor
testb
aaa
jmp
arpl
addr16
test
imul
sub
jmp
xchg
loope
int3
test
pushf
mov
xchg
mov
aam
mov
push
or
pop
sub
fnstenv
fadd
add
imul
imul
fucomi
xchg
add
divl
ja
inc
pop
pop
mov
mul
sub
dec
mov
mov
ss
out
in
push
mov
testb
dec
pop
mov
xor
pop
add
aas
sti
add
push
add
jo
mov
xlat
nop
ljmp
subl
sti
insl
andb
push
dec
mov
imulb
jmp
push
mov
inc
cmp
fucom
sbb
in
mov
lock
adc
cli
mov
inc
in
lds
pop
lds
pop
add
shrl
inc
insb
dec
ljmp
mov
enter
fwait
and
ljmp
ss
inc
xchg
cwtl
jns
mov
xor
nop
cmp
mov
lds
imul
jbe
popf
xor
adc
sub
lods
xchg
sbb
rcll
pop
inc
pushf
cmp
data16
stc
es
mov
cld
xchg
mov
loopne
inc
fidivrl
mov
lahf
push
out
out
das
dec
jge
shlb
jmp
stos
outsb
lds
cmp
inc
add
cmpsl
bnd
outsb
xchg
mov
imul
roll
mov
jb
icebp
xchg
ja
or
pop
sub
cmp
inc
jns
repnz
mov
loopne
stos
cmp
sbb
call
mov
cmp
or
push
adc
cwtl
mov
sti
jmp
sbbl
es
add
in
mov
movsl
mov
ja
cmp
jg
test
sbb
cmp
inc
pop
xor
dec
dec
xor
mov
aad
test
adc
mov
loop
and
xchg
sti
insl
sahf
and
fs
shrl
scas
sub
xorl
enter
stos
mov
mov
cmp
decl
scas
out
aad
cli
jns
aam
cmp
push
ret
test
cltd
out
xor
jae
outsb
in
xchg
add
adc
nop
shr
lods
imul
xchg
xchg
xor
adc
arpl
cmp
mov
ja
xor
stc
fsubrs
data16
sarb
icebp
mov
xor
insb
adc
sub
pop
xor
stos
mov
aaa
dec
and
ror
jne
mov
mov
lods
or
pop
cmp
int
mov
imul
pop
xchg
pop
fisttpl
xlat
lahf
pop
fucom
and
aad
cmp
shl
push
pop
cmc
xor
aam
and
adc
cmp
pop
inc
daa
ljmp
das
push
adc
imul
cmpsb
aad
jnp
in
and
inc
clc
pop
sbb
adc
jmp
or
enter
scas
xchg
and
xor
dec
cmp
aas
es
movsb
push
inc
pushf
fsubs
aam
jne
roll
fsts
dec
cmp
and
jp
out
mov
mov
int3
adc
mov
sbb
scas
lods
xchg
testl
push
add
jbe
dec
mov
scas
xchg
outsb
aam
lds
xor
mov
mov
adc
jns
mov
sub
xor
rol
enter
les
enter
jb
dec
insl
enter
jle
stc
or
sahf
shrl
jae
ja
add
pushf
rcrb
jno
jp
arpl
mov
lds
mov
dec
pop
xor
adc
dec
cmp
xchg
popl
adc
jno
push
pop
xchg
mov
adc
mov
pop
push
push
cmp
push
xor
push
jne
outsl
jne
scas
sbb
insb
xchg
or
inc
sbb
insl
es
mov
mov
mov
les
sub
inc
mov
add
fldl
fistpll
mov
dec
mov
sbb
and
rorl
shrl
in
pop
sub
test
ret
mov
pop
rorb
mov
adc
xchg
fistl
fs
push
cli
nop
filds
add
faddl
out
lret
pop
int3
push
fcmove
hlt
lahf
aad
std
nop
jmp
lret
push
stos
xor
jecxz
shrb
mov
lods
lret
and
call
add
roll
dec
push
mov
or
lret
mov
sub
mov
adc
xchg
test
fcom
in
mov
push
adc
out
add
dec
mov
or
rol
adc
testl
bound
fwait
mov
clc
aas
adc
cld
mov
mov
addr16
push
in
mov
push
and
jmp
add
jno
das
fcom
dec
sbb
lret
shll
stos
adc
xchg
sti
push
fptan
rolb
xchg
addr16
mov
pop
sbb
jp
jl
stos
pop
xlat
mov
push
lahf
jg
or
test
lahf
and
sahf
and
ljmp
inc
and
adc
es
push
inc
pop
push
ret
fwait
and
enter
dec
adc
mov
imull
call
inc
jle
dec
ja
cmp
mov
adc
add
cmc
pop
jle
repnz
xchg
xchg
imul
add
shlb
enter
inc
add
fisttpll
out
or
mov
pop
push
fstpt
das
iret
xor
cmp
or
jle
mov
and
shll
test
sub
clc
mov
iret
add
push
push
hlt
push
jmp
or
sub
sarl
xor
mov
mov
cltd
inc
js
dec
imul
rclb
mov
ds
xchg
push
cmc
icebp
lds
mov
dec
andl
mov
aaa
in
pushf
test
addr16
aaa
cmpsb
into
adc
in
rorl
cmp
sub
icebp
jno
imul
inc
mov
or
mov
dec
push
add
fs
add
lcall
enter
mov
sub
sub
jl
sbb
arpl
test
ja
ret
dec
inc
lret
xor
inc
xorb
mov
add
ret
cmp
test
ror
xchg
lret
lds
mov
into
lods
subb
ret
mov
jp
jmp
std
movsb
mov
add
cmpsl
into
sub
add
sbb
add
test
sahf
cmc
xchg
ds
fmuls
adc
xchg
jp
mov
into
xchg
cwtl
cs
cli
sub
xchg
mov
jp
sub
push
jne
add
jns
gs
jle
ror
mov
cld
add
leave
mov
decb
mov
and
stos
mov
xchg
rclb
add
mov
cmp
mov
mov
js
adc
int3
cmp
cmp
pop
in
inc
int3
adc
popa
or
jle
push
or
or
push
mov
mov
mov
and
fsubl
insb
add
outsl
fs
call
loop
filds
stc
mov
mov
add
pop
lret
add
mov
xor
jnp
add
sbb
cmp
mov
jae
inc
mov
shlb
les
mov
xor
jge
inc
std
stos
push
inc
mov
mov
jb
cmpl
call
or
lret
pop
and
rorl
loopne
cwtl
xchg
fxch
push
loop
daa
push
add
notl
xor
xor
rcrl
fisubs
ja
inc
jmp
inc
scas
sti
mov
dec
test
scas
pop
xlat
adc
int3
pop
sbb
movsb
repnz
mov
mov
cs
in
das
mov
rcl
iret
xor
cwtl
lea
inc
pop
mov
mov
inc
pop
ret
jo
out
jae
mov
xchg
test
ds
xchg
sub
loope
addr16
test
pop
cld
aam
fs
push
popa
cmp
into
and
cmp
or
decl
xchg
dec
pop
pop
pop
sbb
repnz
or
jae
cltd
mov
push
pop
dec
adcb
fyl2x
lret
loopne
sbb
mov
xchg
sarb
or
dec
cs
mov
imul
pop
pop
cmp
and
add
mov
add
adc
inc
ja
insb
out
mov
cmp
test
dec
out
mov
insb
outsl
mov
cltd
mov
jle
mov
mov
inc
outsl
mov
bound
jg
push
jnp
out
into
movsl
daa
addr16
adc
pop
pop
xor
addr16
push
cmp
daa
mov
adc
lock
call
mov
clc
dec
mov
sub
scas
jecxz
push
and
push
in
sub
lock
adc
sub
lahf
xor
xchg
mov
fisttpll
add
push
aam
pushf
jnp
scas
hlt
dec
icebp
jo
call
test
dec
mov
pop
jnp
jge
bound
xchg
cwtl
mov
sbb
adc
or
mov
cmp
insb
mov
sbb
in
push
lahf
pop
xchg
mov
jbe,pt
repz
nop
cld
lcall
cmc
fistps
ss
nop
jge
outsl
aaa
into
mov
stos
jl
sbb
pop
fs
int
inc
pop
push
push
jmp
xor
mov
cs
movsb
pop
pop
insl
jge
cmpsb
clc
nop
jle
mov
jbe
imulb
xlat
lds
pushf
ret
gs
xor
inc
mov
ss
dec
pop
lcall
and
push
mov
punpckhbw
pop
imul
push
rcrb
outsl
insb
push
jecxz
or
cmpsb
mov
add
push
arpl
and
das
adc
cmp
xchg
popa
push
push
push
gs
dec
fst
jbe
mov
daa
jle
ljmp
pop
leave
shrd
or
mov
cmp
les
push
test
pop
stos
push
mov
dec
popa
out
or
lds
cmpsl
scas
and
pop
sbb
inc
cmp
mov
xchg
jbe
addb
jb
lock
mov
pop
imul
adc
jge
xlat
pop
icebp
call
push
js
mov
out
xlat
adc
inc
jnp
and
inc
xchg
jno
inc
jmp
lods
dec
push
loop
jo
loopne
jle
insb
insl
jge
les
jns
repz
cwtl
sub
in
xchg
loopne
outsl
lods
and
pop
mov
test
ret
pop
cmpsb
inc
dec
dec
jae,pn
inc
push
inc
adc
arpl
jmp
mov
insb
orl
stos
inc
lret
jo
sarl
cltd
sub
shr
cmp
mov
outsl
iret
add
add
adc
dec
dec
cwtl
jecxz
mov
in
es
shl
bound
cwtl
adc
dec
leave
arpl
stos
shl
push
faddl
cmpsb
sbb
repz
stos
adc
jp
push
mov
rorl
dec
mov
test
shrl
xor
in
mov
inc
mov
inc
sbbl
inc
add
add
loopne
mov
and
jecxz
adc
mov
subb
push
jmp
sub
loope
ss
adc
pop
xor
xchg
push
mulb
clc
aas
movsb
adc
dec
push
stos
adc
jp
sbb
sbb
daa
inc
xor
jnp
inc
cltd
mov
in
add
mov
lds
mov
pop
mov
sub
mov
pop
add
xlat
mov
xchg
mov
gs
popf
mov
lea
adc
xlat
lret
mov
jnp
xor
jle
outsb
xor
adc
popf
les
les
or
fcmovb
daa
inc
xchg
testl
jmp
mov
and
adc
mov
loop
mov
lds
add
or
mov
pop
addr16
aas
xor
jecxz
sbb
pushf
pop
je
out
sahf
sbb
popf
out
inc
and
stos
xchg
lea
aad
inc
xchg
or
out
pusha
cmovg
dec
dec
std
popa
xchg
loope
jmp
mov
push
push
insb
dec
inc
std
decb
xchg
fs
push
inc
inc
sbb
sub
insl
add
push
add
mov
in
and
add
std
jle
iret
insl
jle
fcoms
sbb
push
in
orb
int3
sub
mov
ficompl
sahf
push
gs
fucomp
mov
pop
mov
inc
cs
xchg
test
jp
mov
xlat
ss
mov
in
xor
push
jno
add
nop
leave
je
xchg
inc
mov
adcl
bound
jmp
push
daa
xor
call
push
inc
and
adc
inc
xor
imul
mov
add
gs
mov
xorb
cmpsl
test
adc
repnz
mov
es
popf
mov
mov
lahf
leave
stc
mov
sti
sub
in
outsb
adc
mov
out
ss
sbb
mov
imul
aaa
es
notl
repnz
subb
fisubs
mov
push
ret
push
cwtl
mov
das
jbe
sub
jl
xchg
xchg
or
pusha
out
jne
dec
cmpsb
inc
out
scas
or
roll
mov
sub
in
call
nop
test
pop
fstpt
pop
and
js
or
and
test
sarb
or
fwait
sub
push
jge
sahf
stos
sub
or
xor
popf
push
inc
xorl
cmp
and
es
dec
cmpsb
les
adc
adc
nop
nop
push
sbb
inc
mov
in
hlt
mov
fwait
cli
pushf
inc
out
loope
cmp
or
xor
stos
inc
dec
fwait
jp
lods
dec
mov
sbb
xchg
bound
outsl
test
add
decb
clc
inc
or
add
push
mov
in
pop
jae
addl
xor
and
lahf
mov
mov
scas
cld
adcb
dec
lcall
mov
lods
add
xchg
in
mov
arpl
sub
mov
pop
pusha
cmp
mov
lock
test
mov
cli
repnz
loop
pop
popa
jns
imulb
es
push
out
xchg
popa
call
add
xchg
ret
movsl
lahf
cmp
js
test
out
sahf
pop
fadd
cmp
mov
stos
aas
and
jnp
xor
divl
out
adc
jo
push
jno,pt
inc
std
sbb
adcl
pop
or
mov
loop,pn
mov
adcl
pop
mov
xlat
jle
or
subb
mov
pop
jbe
out
insl
sbb
push
dec
fs
std
cld
pushf
or
es
cmpsb
inc
xchg
mov
mov
mov
insl
mov
inc
insb
pop
pushf
xor
es
sub
je
test
jp
cmp
add
icebp
sub
mov
jno
mov
xchg
in
adc
int
lods
shrl
fnstcw
jo
inc
mov
jo
movsb
icebp
sbb
or
adc
and
hlt
dec
fisttpll
rol
jmp
lcall
xor
fwait
ljmp
push
mov
mov
lcall
inc
sbb
mov
adc
fs
repz
fiadds
int3
pop
or
add
add
push
aam
je
aas
xchg
in
mov
scas
outsl
or
repnz
pop
pop
push
or
loop
adc
xor
adc
jne
jns
pop
xchg
jne
ror
sub
add
xor
addr16
mov
add
movsb
fnsave
cli
bound
cmpl
mov
loopne
mov
jnp
imulb
data16
adc
scas
cld
xchg
adc
inc
jl
pop
insl
test
xor
in
lods
mov
jl
push
cli
aas
mov
adc
imul
mov
push
and
add
cmp
xchg
lcall
cld
aam
fcmovne
insb
inc
stos
out
pop
lock
test
out
cld
add
xor
jbe
movsl
and
inc
push
cltd
outsl
jo
pop
outsb
test
mov
push
out
xor
sbb
jle
add
sub
inc
pusha
sub
mov
mov
dec
int3
add
out
fidivrs
out
int3
jnp
xchg
push
pop
fcmovb
fwait
shl
cmp
lcall
loope
inc
jp
cwtl
loope
mov
jo
jo
cmp
repnz
mov
and
add
push
negl
std
adc
xchg
push
xor
aas
ret
ds
mov
insb
xchg
stc
stos
push
jecxz
int
fcomps
lock
xchg
mov
jl
inc
fs
mov
add
inc
dec
dec
mov
js
sbb
and
or
mov
cmpsl
add
add
sahf
iret
fdivrl
adc
xchg
pop
dec
xchg
mov
push
pop
popa
loop
mov
nop
sbb
cmc
jne
ds
xabort
jge
popl
movsl
clc
cmp
test
lret
or
std
or
jmp
push
mov
xor
mov
insl
sar
sbb
mov
ljmp
push
mov
popa
xor
pop
aaa
pop
push
cmpsl
out
jbe
sbb
xchg
fst
xchg
aam
lahf
mov
stos
lcall
insb
test
lcall
insb
push
jl
in
cs
inc
es
push
loop
out
les
push
out
pusha
ret
mov
out
mov
add
cmp
mov
pop
add
push
andb
rcl
push
xchg
jno
xchg
int3
movsb
aam
gs
xor
mov
add
xor
test
scas
imul
pop
adc
test
enter
minps
repnz
cmc
sahf
lret
dec
std
xor
popl
insb
adc
fs
jo
pop
add
pop
jb
int3
ret
lea
cmp
pop
mov
sub
inc
leave
push
cmpsb
xorl
popa
dec
es
add
fs
sbb
lds
or
pop
neg
aad
in
fisubrs
ja
and
gs
daa
mov
jge
ret
inc
cli
sbb
test
js
test
jno
jnp
mov
scas
je
or
sub
inc
pop
inc
and
push
loop
mov
mov
pop
cmpsl
mov
mov
lds
pop
mov
vmovapd
lods
loop
stos
push
sub
push
dec
loop
sub
inc
fnstenv
xchg
in
fwait
cltd
addr16
mov
jnp
jne
test
fadds
jl
in
fstpt
imul
idivl
sahf
repnz
xchg
int3
push
fstpl
xor
cmp
ret
cmp
dec
and
dec
mov
das
clc
xchg
push
xchg
mov
stc
test
push
icebp
jle
iret
pop
out
int3
cmp
jp
push
ds
xor
cli
add
scas
imul
sbb
sbb
repz
scas
test
adc
out
data16
mov
mov
loop
lcall
out
js
leave
xchg
adc
adc
add
sub
lock
or
mov
push
mov
xchg
adc
jno
mov
clc
jmp
mov
jns
adc
push
push
mov
iret
inc
pop
cmp
xchg
push
test
adc
xchg
jb
test
xchg
cli
cmp
das
cmp
pop
dec
xor
js
mov
xor
and
push
in
jae
shll
and
or
adc
mov
int3
cmpsl
jns
sbb
mov
mov
fildl
clc
fldenv
jmp
fildl
sbb
lods
push
sbb
push
lock
lods
mov
ss
adc
adc
pop
jbe
cmp
fsubl
insb
inc
push
outsl
cmp
sbb
ds
add
cmpsb
inc
or
mov
mov
mov
dec
push
nop
jecxz
adc
sub
outsl
sub
jnp
inc
mov
pop
cmp
out
dec
aam
jae
testb
decb
jnp
pop
pusha
cmpsb
leave
push
push
or
test
scas
xlat
and
push
in
ljmp
lods
jg
dec
inc
xor
xor
sub
lods
mov
std
outsl
sub
jl
xchg
inc
jb
xchg
fildl
es
xor
push
fdivl
arpl
cmp
leave
pusha
cli
xor
pop
sub
sbb
mov
pop
mov
xchg
sbb
mov
dec
dec
mov
or
shlb
aas
sub
jp
scas
loope
push
mov
test
out
jnp
push
lds
loopne
sbb
pusha
push
dec
clc
xchg
repnz
cld
adc
push
jnp
jne
jmp
mov
or
in
loope
pop
lods
bound
and
cmp
add
and
mov
test
lret
jp
inc
push
mov
scas
or
cli
or
popa
jae
aas
into
mov
or
cmpsb
and
jns
add
sub
lock
pop
test
daa
pushf
outsb
or
push
fwait
lea
xor
jns
cwtl
add
and
and
mov
or
pop
inc
ret
cmp
lods
incl
jp
jae
push
or
daa
repnz
ret
popf
popf
xchg
add
pop
in
inc
push
cmp
arpl
fs
adc
adc
out
add
and
movsl
cltd
mov
or
add
pop
movsb
std
repnz
sahf
jne
inc
repz
mov
dec
in
dec
and
lods
mov
xchg
loopne
or
inc
enter
test
int3
aas
sti
cs
leave
enter
rorl
outsb
je
adc
aam
arpl
pop
stc
mov
sub
mov
jno
cwtl
xor
test
or
scas
mov
inc
int3
jb
mov
add
xchg
hlt
loopne
xrelease
ret
sub
data16
in
jnp
clc
lahf
rclb
jg
or
fiaddl
ds
scas
inc
movsb
mov
mov
clc
xchg
sub
js
dec
sbb
mov
mov
cli
jle
nop
popw
movsb
mov
cmpsb
icebp
loop
inc
and
pop
cwtl
jge
sbb
cmp
out
cmp
push
xor
add
or
pop
jmp
sti
clc
inc
and
xchg
sub
jae
lret
hlt
out
stc
add
out
sub
idiv
icebp
jno
ret
fimuls
shlb
adc
push
and
decl
sbbb
jno
mov
push
xor
in
out
and
fistpl
adc
addr16
sahf
pop
push
sub
cmpsl
rcr
ja
pop
xchg
xorb
fisttpl
pop
nop
or
mov
in
jl
test
sbb
jo
sub
lea
add
loop
std
dec
loope
shrl
mov
movsb
push
rcrl
xchg
jne
into
in
adc
pop
out
add
dec
inc
and
pop
or
jecxz
iret
or
outsl
sbb
in
cmp
cld
sbb
loope
and
cmpsl
dec
pop
scas
push
iret
sbb
cli
pop
nop
add
push
ds
cli
push
lret
mov
fidivs
xchg
aaa
test
and
or
mov
mov
fadd
or
addr16
sub
or
cltd
popa
sub
je
cmp
pop
shrb
mov
stos
fs
inc
stos
pop
popa
dec
xlat
aam
cmp
fistps
add
mov
leave
mov
xor
lahf
cwtl
shlb
in
ret
or
xor
dec
enter
sti
adc
jle
dec
cmpsb
push
xchg
xor
hlt
cmpsb
das
cld
push
xchg
pop
icebp
arpl
lret
pop
and
pop
test
mov
xchg
mov
int
arpl
lock
mov
pop
leave
xchg
ljmp
mov
jae
or
ja
out
clc
pop
xor
sarl
ret
xchg
mov
xchg
mov
nop
or
add
sub
fistpl
fisubrl
sbb
add
rcll
xchg
imul
int3
mov
mov
inc
push
pandn
lcall
jge
out
inc
xchg
loop
sbb
dec
mov
push
mov
add
hlt
loope
movsb
sarb
jnp
sbb
xchg
mov
rolb
in
lods
fisubrs
cmp
push
mov
insb
lock
pop
or
aas
cwtl
movsb
test
cmpsl
mov
adc
arpl
and
in
loop
sti
xchg
push
dec
fdivrl
fmulp
mov
pop
push
or
pushf
popf
push
outsb
mov
jns
sahf
push
mov
pop
dec
sbb
sbb
imul
fildl
xor
fwait
and
sti
and
loope
iret
sbb
inc
push
mov
mov
jo
and
test
dec
les
aad
test
xchg
and
cld
test
enter
mov
add
std
es
clc
popf
rclb
imul
add
jb
in
stos
jmp
stos
fsubrl
in
outsl
cs
subl
and
mov
xchg
jno
stos
inc
fidivl
inc
add
fsubl
dec
dec
push
jle
push
js
stos
adc
stc
xor
adc
cs
dec
pop
pop
orl
cmc
daa
add
sub
jg
adc
popa
out
movb
or
mov
pusha
addb
test
and
popa
xchg
ret
or
jbe
sbb
mov
xlat
dec
sbb
call
jmp
add
mov
sub
out
xchg
decl
push
lret
insb
call
mov
test
mov
rolb
mov
sbb
cmpsl
lahf
dec
test
cmc
or
mov
xchg
mov
push
jle
adc
mov
movsb
sub
mov
jmp
dec
in
pusha
jp
xlat
sub
mov
fimuls
xchg
insl
shlb
stc
in
and
xchg
pusha
cs
repz
ret
int3
or
cmp
jp
loopne
sub
add
shll
mov
xor
popf
movsb
mov
or
ret
out
cli
jg
inc
adc
jge
movsb
negl
dec
stos
mov
sahf
frstor
orb
popa
iret
pop
push
into
pop
jns
sbb
adc
test
mov
into
ret
adc
adc
test
test
int3
pop
sub
imul
cmp
dec
ds
mov
pop
add
outsb
push
sub
popf
mov
rclb
push
push
ret
out
sahf
mov
leave
int3
and
add
jae
xchg
jle
cmp
hlt
lds
nop
ret
push
jmp
call
scas
fwait
push
push
jae
adc
lcall
xchg
arpl
shrl
das
mov
or
lcall
cmc
mov
fcoms
dec
std
inc
jne
sarb
fdiv
lahf
outsb
mov
lcall
push
dec
shrb
cs
pop
dec
inc
fisubrl
inc
mov
incb
jmp
fldenv
das
inc
mov
add
in
loop
ret
cmc
cmpsb
sub
xchg
dec
xor
ret
or
ret
jle
out
fs
jle
adc
add
mov
ficompl
shr
stc
lret
and
popf
mov
sub
enter
push
xchg
aaa
lcall
pushf
xor
or
sahf
pushf
into
and
mov
mov
shr
push
dec
add
loopne
fcomps
out
sub
push
inc
fbld
ss
fs
iret
xchg
test
dec
adc
popf
mov
movsb
push
cmp
shlb
leave
mov
sub
rcll
jnp
xchg
fwait
pop
lcall
imul
fstl
lods
cmp
mov
mov
xor
in
push
rcrl
test
jne
cmp
into
sbb
dec
add
jns,pn
mov
in
cli
movsb
push
pop
lcall
add
dec
add
fs
jbe
xchg
push
test
inc
adc
pop
mov
xchg
cwtl
cmp
lock
out
hlt
mov
js
sub
mov
adc
stos
sbb
and
aad
int
fucom
push
xorl
mov
fwait
push
adc
movl
xor
fisubl
mov
jo
iret
bound
push
lcall
pop
cmp
adc
fcmovb
test
pushf
add
filds
les
repnz
jg
and
or
lahf
orl
inc
ja
and
xchg
xchg
inc
sub
sub
add
mov
or
adc
lods
testb
jl
sahf
outsb
stos
clc
xor
jle
shlb
dec
mov
imul
add
into
in
and
call
xor
cli
out
das
gs
mov
movsb
rcrl
cmp
xlat
outsl
scas
je
jbe
ja
loopne
bound
ds
jno
mov
mov
xchg
jg
lods
or
cmpsl
out
add
xor
outsl
iret
jb
ret
cmp
bound
dec
push
sbb
and
jnp
jne
or
dec
cmpsb
mov
pop
rcrb
mov
cmp
insb
ja
mov
sahf
not
cmpl
xor
fdivrl
inc
stos
in
imul
test
inc
fwait
add
ss
inc
pop
add
and
dec
jne
jb
xchg
xchg
inc
cmp
cmp
adc
test
iret
jp
call
pusha
lcall
aam
add
lcall
out
dec
inc
ret
sub
push
pop
dec
xchg
cmc
mov
je
adc
dec
imul
std
push
push
ds
lods
pop
mov
push
or
rcl
cld
xchg
jne
pushf
push
cmc
imul
lcall
mov
xchg
enter
sbb
icebp
adc
mov
mov
hlt
packsswb
adc
loopne
lret
dec
dec
into
add
js
cs
iret
mov
popa
sub
push
push
mov
rcrl
push
sbb
dec
rorb
mov
in
hlt
pop
bound
cwtl
shrb
mov
fdiv
xchg
cmp
je
xchg
and
addb
or
std
clc
fwait
or
ret
rcr
popa
daa
out
sub
cmp
adc
or
movsl
cmp
mov
push
add
add
inc
xor
xchg
jns
xchg
cld
or
xchg
jne
cwtl
adc
sbb
pop
fnstenv
add
insl
jo
adc
jne
ss
daa
jbe
loopne
out
dec
icebp
jbe
adc
fs
push
scas
mov
je
stos
in
out
mov
mov
mov
mov
imul
mov
fsub
loop
jl
pop
sbb
clc
inc
jg
cltd
adc
mov
lea
out
cmp
push
dec
jb
imul
movsl
or
shrb
mov
pop
and
mov
jmp
and
pop
mov
jb
mov
jecxz
xchg
inc
lock
mov
mov
pop
fwait
pop
push
xlat
in
clc
hlt
outsl
cmp
mov
xchg
pop
add
or
stos
push
mov
jb
cmc
mov
add
xchg
ljmp
in
rcrb
cs
lods
out
test
shl
push
inc
push
sahf
mov
mov
jns
mov
dec
lock
add
xlat
stos
mov
test
dec
loope
mov
cli
xor
add
stos
xchg
mov
and
add
jl
dec
add
inc
adc
mov
adc
js
shrl
push
cmp
lods
ja
insl
push
push
scas
cmpsl
cmp
pusha
outsl
mov
test
jno
insl
push
int
sti
inc
ljmp
mov
jp
testl
rol
mov
jno
loop
push
cmp
and
aaa
mov
cmp
cli
ret
adc
dec
mov
pop
cmpsl
jmp
testl
sahf
push
out
neg
cmp
push
imul
cld
sub
mov
xor
push
lahf
jl
inc
sub
xor
gs
xlat
add
test
mov
mov
cmpsl
outsb
fwait
loope
ret
lea
pop
insl
call
add
mov
loope
aaa
insl
cli
and
testb
mov
loopne
xchg
andl
jge
sysenter
loopne
popa
por
xor
pop
mov
mov
jbe
cmp
stc
int3
fldl
pop
jns
push
or
pop
push
popa
std
push
dec
or
in
lret
mov
pop
lcall
jb
scas
cmp
mov
adc
or
fcomps
pop
xchg
fbld
nop
xor
or
cmp
or
fnstsw
dec
pop
add
lcall
cmpsb
daa
dec
push
xchg
push
xchg
and
add
xlat
negb
or
lods
inc
stos
into
xacquire
pop
mov
nop
xchg
rclb
addl
notl
cmp
jnp
cmpsb
ljmp
cld
cmp
out
mov
adc
mov
in
pop
out
into
adc
push
add
movsb
dec
cmpsl
sarb
cmp
fiadds
sub
and
cmp
das
push
ljmp
mov
jg
add
insl
push
insb
imul
cld
jae
andb
pusha
scas
bound
sahf
push
dec
mov
ret
jg
lods
lods
lock
cltd
repz
sbb
adc
push
stos
or
ds
sti
lahf
inc
adc
out
dec
inc
mov
jno
mov
mov
pop
mov
cld
hlt
sub
aad
ret
cwtl
test
push
cmp
push
lock
pop
ljmp
cmc
mov
fdivr
sti
lods
popf
inc
inc
sub
push
lcall
xlat
mov
jmp
sti
out
aaa
mov
jle
or
lods
imul
bound
ljmp
pop
xor
jo
sbb
lret
mov
and
pop
fistpl
push
xor
add
data16
pop
fnstcw
or
push
int3
lret
in
mov
pop
xchg
pusha
imul
ss
sub
or
jb
inc
pop
jns
or
arpl
xorl
popf
or
xor
loopne
xor
dec
subb
shrl
sub
jecxz
popf
jge
and
mov
jmp
cmpsb
jo
mov
add
cmp
jb
push
and
sub
jecxz
adc
cmpsb
sbb
divl
inc
mov
bound
push
jl
and
stc
stos
imul
xor
add
daa
mov
pop
jo
mov
pop
push
or
jae
out
jg
rorl
popa
xchg
je
fidivrl
xor
xchg
lods
pushf
mov
push
mov
jle
jns
jp
adc
cmp
adc
adc
jmp
mov
inc
nop
lcall
pop
std
testl
mov
fwait
push
mov
daa
push
and
dec
sbb
hlt
loope
and
fs
rcrb
loop
push
mov
testb
pop
push
adc
arpl
shll
cld
std
jnp
test
loope
bnd
add
bound
mov
and
or
mov
scas
mov
aaa
pushf
js
and
es
in
pop
rolb
aam
push
and
dec
and
inc
lods
or
lcall
jmp
cmp
scas
jmp
scas
out
shl
add
or
iret
aas
aam
add
bound
std
repz
xchg
mov
sbb
aaa
imul
and
mov
call
sbb
cmp
mov
add
mov
add
xlat
push
shll
or
hlt
mov
mov
jns
ja
adc
xor
test
ret
int
jno
cmp
jnp
addr16
arpl
and
mov
or
bound
repnz
mov
cmp
cmpsl
or
lods
dec
outsl
fs
stos
sti
add
xchg
add
cmc
jmp
dec
gs
aaa
mov
pop
sbb
and
aam
lds
mov
and
push
sub
rol
adc
xchg
mov
mov
dec
sub
rorb
icebp
xchg
jge
rolb
outsb
dec
xor
xchg
adcb
nop
pop
xchg
dec
adc
xor
mov
icebp
mov
in
push
incl
subb
jne
jmp
mov
rclb
mov
in
push
mov
jge
mov
mov
int3
call
sub
lret
mov
jp
cmp
cli
push
and
or
push
mov
data16
sub
sub
test
mov
nop
mov
push
lcall
popa
pop
xrelease
mov
imul
mov
add
xor
pop
js
cmc
mov
xchg
push
sbb
sbb
adc
adc
loopne
add
sbbl
sti
jmp
arpl
dec
jo
sti
lods
imul
add
pop
sbb
xor
cmpb
loopne
dec
ficoml
xor
movsl
insb
daa
jmp
push
test
xor
test
call
aad
xor
pop
xor
xchg
mov
in
rcrl
pop
dec
jbe
sub
mov
xor
mov
mov
inc
ret
popa
popl
xlat
daa
pushf
das
inc
dec
test
lods
clc
test
inc
jbe
ss
and
shrb
mov
cmp
push
ljmp
add
test
xor
sub
mov
cmpsl
jo
les
push
lock
in
out
pop
xchg
push
push
jge
repz
aam
loope
mov
push
jo
jle
enter
call
lds
mov
xor
add
mov
xor
cmp
add
cmp
cli
mov
push
ds
test
inc
cmp
push
cld
and
and
fwait
adc
aad
mov
xchg
lret
sub
loopne
mov
fstpl
inc
or
jge
pusha
pop
loopne
insb
iret
lods
test
int
mov
lds
mov
fcompl
adc
dec
dec
ficoml
push
insb
mov
outsl
ror
sub
push
and
jb
mov
loope
and
lea
mov
int
inc
mov
fmull
lods
mov
repz
inc
lret
push
aaa
sub
push
inc
inc
add
mov
add
or
out
pop
into
lret
and
jg
cs
sqrtps
fnstcw
push
in
js
test
xchg
add
les
inc
jle
stos
rolb
xchg
es
mov
popf
mov
xchg
aas
pusha
daa
adc
push
enter
mov
add
cmpsl
in
aad
movsl
sbb
inc
test
inc
lret
out
in
aaa
jbe
adc
movl
lahf
dec
nop
lods
push
lds
ja
push
cmp
xchg
inc
pop
lea
movsb
aas
loop
mov
addb
imul
loope
or
xchg
mov
and
lods
adc
fwait
push
cmp
js
sub
mov
sub
shll
and
fcomps
or
add
xchg
and
pop
jo
jbe
jmp
xor
or
cmp
int
push
incb
inc
add
mov
movsb
inc
in
jbe
or
push
movsl
jmp
jp
jb
dec
sub
mov
xchg
hlt
std
inc
sbb
push
imul
lcall
push
in
shll
popf
lcall
imul
ret
jns
ss
add
sbb
sahf
sbb
push
test
sti
ljmp
scas
sub
aam
lret
iret
pop
loopne
std
addb
mov
or
mov
dec
lods
sbb
shlb
das
xor
and
mov
mov
scas
sti
lret
jns
cltd
imulb
xor
and
lret
push
out
and
and
xor
mov
or
dec
mov
outsb
add
sti
in
fnstcw
loopne
xchg
ljmp
test
repnz
adc
lods
push
xchg
fldl
andb
or
adc
dec
jp
and
ss
mov
fsubrs
cltd
inc
test
in
dec
mov
aas
lds
xchg
loop
scas
stos
cmpsb
push
pop
push
movsb
add
loope
out
xor
mov
push
push
mov
dec
loope
dec
sahf
mov
ja
aaa
int3
ficomps
mov
push
sarb
cmp
lret
icebp
jb
xor
adc
int3
dec
cld
fnsave
movsb
enter
fcoms
cli
mov
out
sarb
std
out
mov
cmp
add
data16
add
pop
loopne
add
ds
push
push
vmread
jg
insb
inc
test
mov
cmpl
int
popf
sub
cmpb
adc
repz
mov
pop
jle
cmp
push
inc
in
lret
lcall
xor
insl
add
ljmp
pop
push
or
cmp
je
repz
rcr
xchg
mov
outsb
mov
dec
mov
mov
add
sbb
sbb
mov
jae
or
jl
mov
sbb
in
or
lds
rcl
add
pusha
inc
adc
dec
iret
xchg
or
lock
sar
xor
jns
ja
dec
push
sub
das
sahf
push
ret
cs
sbb
cwtl
push
jae
imul
push
inc
aaa
fcompl
and
clc
lods
sbb
jnp
cmpsb
outsb
sti
push
in
inc
xchg
cltd
cmp
inc
adc
push
fsqrt
ds
mov
push
and
pop
out
fidivrl
popa
imul
push
mov
decl
notb
xchg
or
mov
dec
int
fldt
cmp
jae
jmp
jae
adc
insl
clc
jmp
lods
filds
dec
sub
mov
mov
push
dec
push
or
adc
sbb
sahf
jae
mov
aas
push
sarl
andl
mov
lahf
push
xchg
fldl
sbb
stos
aam
pop
ds
and
daa
add
stc
sarb
fwait
mov
jecxz
pop
fwait
test
or
sub
sti
mov
mov
mov
sub
inc
push
mov
mov
sbb
dec
nop
dec
inc
dec
test
mov
mov
xchg
mov
roll
push
pop
jns
imul
jb
mov
or
push
prefetch
sub
mov
aaa
xorb
scas
or
shl
xlat
in
adc
dec
fistpll
pop
fwait
dec
loopne,pt
rep
push
sbb
cli
mov
cmp
mov
sbb
mulb
adc
jmp
or
jne
and
sub
mov
test
mov
or
jl
xchg
jno
in
push
or
ja
das
into
mov
les
mov
bound
mov
bound
sbb
jnp
inc
cwtl
cs
shl
adc
insl
pushf
inc
das
push
xor
xor
arpl
push
test
shlb
or
mov
je
dec
js
outsl
insl
xchg
pop
xor
pop
and
and
pop
push
aad
dec
fstpl
adc
das
jecxz
cs
dec
or
icebp
jbe
mov
xchg
adc
cmp
test
enter
lods
cs
xchg
push
mov
movsb
insl
sub
xchg
dec
add
addb
jnp
pop
mov
sbb
xchg
xlat
mov
inc
je
sub
xchg
aam
add
sub
mov
out
add
pop
dec
fcompl
dec
adc
jae
jp
std
sarb
imul
mov
scas
mov
fdivl
pop
jae
pop
clc
pusha
jp
jo
adc
mov
push
jmp
fldl
jns
xchg
jge
dec
push
xchg
pop
mov
push
dec
fstpl
arpl
ljmp
pop
loopne
push
push
dec
pusha
pop
or
push
dec
fdivs
mov
in
in
test
fwait
loopne
lahf
cmp
add
jns
pop
lcall
pop
inc
das
rcr
je
sbb
or
es
aaa
mov
ljmp
sbb
loopne
repz
cli
fucomip
add
cld
sub
adc
subb
push
mov
fst
mov
dec
stos
int
inc
xchg
ja
cmpsl
jns
adc
iret
dec
mov
dec
add
mov
int3
xor
xchg
cmpsb
sub
pop
mov
jnp
popf
test
ficoms
and
fadds
roll
shll
movsl
inc
inc
xchg
cmpsl
int3
aad
cs
push
fsubl
sub
fadds
int3
lcall
dec
mov
scas
out
arpl
cmp
jns
loope
loop
addr16
mov
xchg
out
cmpb
or
and
and
adc
arpl
sub
sbb
rcrb
nop
pop
insl
sub
aas
push
lcall
jg
fimull
dec
incb
clc
jb
jb
push
fwait
xor
and
cmp
aaa
pusha
xor
cmp
movsl
repz
xchg
pop
mov
int3
mov
imul
inc
decl
insb
aad
cwtl
andl
cmp
cld
cwtl
clc
mov
xchg
pop
pop
adc
ror
loop
jne
mov
inc
in
into
in
inc
push
mov
ja
mov
add
outsb
lea
insl
daa
inc
fwait
imul
popf
movsb
xlat
and
mov
cmp
sbb
xchg
push
imul
push
aad
xlat
sbb
mov
mov
jae
jns
aas
mov
mov
mov
stc
das
test
cmpl
dec
cmp
adcb
add
aad
fdivs
pop
inc
cmp
pop
iret
pop
gs
lcall
mov
gs
jb
vsubsd
popa
aam
or
jp
and
add
xchg
daa
fists
adc
push
stos
push
sub
scas
lcall
or
adc
clc
sub
pusha
ss
clc
sbb
jge
jns
xor
jp
lods
mov
xchg
inc
jl
mov
push
push
pusha
cs
add
mov
push
or
dec
cmpsb
pusha
xchg
subb
dec
stc
lcall
cltd
jecxz
loop
fadds
mov
and
inc
or
cmp
in
xor
aaa
push
or
sbb
shll
pop
jb
mov
xchg
dec
and
push
jg
scas
mov
loop
cmc
aam
into
ret
enter
repz
pop
ljmp
insl
mov
outsl
movsb
xchg
jle
aaa
or
inc
jle
jb
inc
xor
ret
xor
mov
push
or
jg
mov
push
add
movsl
repz
sbb
call
cld
dec
in
iret
lahf
sbb
dec
or
stos
addl
repz
add
push
in
sub
shl
clc
sahf
push
jl
cmpsl
clc
lret
lods
aam
lret
rclb
and
inc
cld
sbb
mov
nop
mov
mov
sbb
sarl
std
je
sbb
std
loopne
sbb
test
sbb
and
mov
stos
cmpsl
dec
sbb
gs
gs
sahf
dec
inc
adc
outsb
stos
xor
xor
sbb
mov
mov
and
call
inc
shll
xor
xor
pop
jg
stc
std
pop
and
imul
fdivl
mov
pop
sub
pop
jecxz
jne
movsb
stos
adc
xchg
xchg
mov
gs
jae
and
aad
and
adc
icebp
xor
jae
push
dec
xor
jnp
xchg
pop
fwait
sahf
testl
mov
fbstp
dec
leave
sti
mov
xchg
mov
xor
mov
dec
inc
and
dec
xchg
out
call
mov
gs
jmp
mov
loopne
fwait
movsb
cmp
cmpsb
aas
adc
xor
xchg
in
std
movsl
les
or
mov
ret
stos
out
addr16
movsl
lahf
dec
pop
mov
lods
xor
mov
xor
mov
and
push
pusha
jnp
inc
push
mov
rcll
sub
inc
cli
cli
add
adc
and
adc
add
mov
aad
dec
push
xchg
pop
and
jbe
fdiv
ja
or
fs
test
add
pop
shll
adc
jmp
mov
fwait
jmp
mov
ss
es
arpl
insl
movsb
jnp
or
push
std
xchg
outsl
jmp
fsub
xor
scas
outsl
ud1
xchg
mov
js
mov
cmp
or
ret
cmp
fsub
js
mov
test
pop
test
mov
call
sar
scas
test
push
std
xor
ja
and
xchg
negl
pop
das
dec
and
cmp
xchg
or
add
xchg
xchg
fwait
pop
ret
test
sbb
insb
adcb
lods
out
movsl
jb
das
jbe
andb
mov
mov
jle
jo
pop
cli
sbb
loop
mov
add
mov
dec
pop
hlt
fidivrl
xor
push
adc
push
pop
hlt
mov
inc
sarb
dec
fwait
pop
jns
cli
jge
pop
mov
sub
jns
push
or
push
test
pop
lods
je
push
fs
test
mov
cmpsb
add
int3
ficompl
in
dec
mov
int
cmp
cmpsl
fdivl
or
cmp
inc
add
leave
lock
repnz
fwait
sbb
mov
mov
mov
daa
dec
fdiv
idiv
and
xchg
sub
pop
adc
mov
add
repnz
outsl
imul
out
mov
mov
arpl
sbb
call
jns
mov
mov
mov
add
repz
mov
pop
fstps
imul
or
enter
stos
into
pop
aas
out
fbstp
dec
and
jp
in
stos
fimuls
cmc
shll
daa
cld
cmp
pop
out
jecxz
lods
fnsave
or
adc
add
fwait
call
je
testl
ret
outsl
popf
mov
ds
les
mov
daa
sbb
andb
notb
cmp
icebp
fnsave
sbb
test
and
test
pushf
push
sbb
popa
jp
adc
inc
idivl
pop
cmp
jmp
aaa
imul
loopne
push
mov
jns
imul
mov
mov
mov
push
or
sbb
push
repnz
inc
or
ret
rorb
int
jl
js
mov
jge
fbld
hlt
jle
fcompl
inc
jae
push
jge
xchg
add
test
cmpsb
add
cmp
mov
popa
or
adc
pop
mov
es
sbb
hlt
push
mov
push
xchg
fcomps
or
lret
into
jge
cmpsb
and
aaa
adc
dec
sub
mov
or
test
ss
adc
pop
hlt
xorb
adc
je
inc
dec
adc
movsl
jo
adc
cmpsb
cmp
push
out
lock
cli
insl
xchg
test
es
int
lahf
out
jnp
dec
cltd
sbb
test
lcall
mov
or
jmp
divl
cmp
lahf
pop
popa
pop
lahf
xor
and
ljmp
mov
push
mov
lds
notrack
jmp
cmp
and
stos
sub
in
mov
pop
stos
loop
popa
stos
rclb
xchg
push
push
and
xchg
mov
inc
pop
push
in
aad
pop
fadd
mov
and
mov
lock
lea
ljmp
lcall
mov
jp
jl
cmp
adc
inc
dec
cli
sbb
adc
add
in
push
cmpsl
ja
or
mov
nop
mov
adc
mov
sbb
ret
jb
aad
adc
iret
in
sbb
or
lcall
mov
pushf
add
in
fs
sub
je
popf
jge
test
xor
stos
xor
sub
sub
andl
or
out
mov
xor
add
lods
in
adc
imul
mov
pushf
xor
jb
frstor
sub
imul
mov
xchg
nop
jo
sub
or
fildl
mov
data16
push
loope
push
jo
adc
call
xor
popf
push
jmp
ss
stc
mov
cltd
insl
mov
push
sub
mov
movsl
jbe
xorl
and
jb
mov
xchg
xchg
icebp
mov
repz
xor
jl
pop
or
pop
adc
pop
sahf
and
ret
jns
aaa
lret
xor
push
dec
cmp
int3
cmpsl
repnz
lcall
mov
adc
cs
xchg
inc
leave
pop
rcrl
xor
xchg
dec
je
lods
dec
jo
mov
lahf
push
repz
les
repz
push
test
mov
fstl
xor
test
jle
push
add
adc
cs
xor
in
popa
sbbl
leave
cwtl
scas
movsb
mov
jmp
rorl
aaa
out
mov
ret
lret
mov
dec
int
les
dec
out
xchg
jg
jb
pusha
and
and
insb
cmp
outsb
adc
add
add
adc
pop
lds
add
out
into
pop
enter
dec
addr16
push
mov
add
xchg
or
cmp
xchg
cmc
mov
add
inc
xchg
or
mov
inc
or
pop
mov
cmc
mov
mov
mov
popf
aas
and
inc
in
push
mov
xor
fwait
enter
dec
dec
test
cmpsb
int
fidivrs
and
in
mov
or
mov
sysexit
js
aam
mov
in
data16
leave
fcmovnb
ficompl
sbb
mov
repnz
loope
cmp
in
jmp
fcom
or
test
push
adc
inc
test
sbb
shlb
nop
ret
cltd
adc
push
xor
jne
data16
push
xchg
mov
je
dec
stc
outsb
inc
xchg
jle
jp
idiv
dec
mov
push
ss
daa
mov
iret
xchg
pop
mov
lods
pop
cmp
les
sbbb
mov
mov
rclb
add
andl
hlt
fwait
mov
out
int3
pushf
nop
xor
dec
cs
repz
mov
mov
ret
push
jg
popa
ljmp
dec
jmp
imul
popa
cld
int
repnz
insl
and
aas
aaa
out
sahf
lds
les
fsubrs
je
mov
sarb
mov
or
das
rorl
test
push
outsb
pusha
daa
push
idivb
fwait
cmp
inc
jg
cmpsb
aam
sti
cli
sbb
popf
cmp
xor
flds
mov
outsl
adc
jp
jbe
xchg
mov
xlat
xlat
pop
push
push
adcb
or
test
repnz
leave
mov
int3
dec
lret
cmc
scas
xchg
xchg
jecxz
xor
int
fstl
pushf
inc
mov
push
push
outsb
pop
movsl
mov
in
xor
xchg
int
in
lret
pmaxsw
sbbl
sbb
cmp
push
std
fdivrp
pop
test
adc
mov
jns
mov
aas
pop
jo
sbb
dec
mov
dec
insl
add
mov
adc
jno
shll
rol
fisttpll
jbe
inc
sbb
fisubrl
test
pusha
gs
sbbb
xchg
cmp
fwait
jg
or
adc
loop
mov
stos
pop
pop
es
std
jecxz
jbe
in
cmp
push
jge
and
dec
setl
pop
sbb
inc
movsl
das
xor
jmp
jnp
push
push
or
in
ja
int3
xor
inc
cwtl
add
pop
repnz
push
mov
cmp
adc
push
push
lds
add
pusha
iret
inc
jne
pusha
jp
xor
push
ficoms
aam
pop
adc
pop
sbb
lahf
xlat
cmp
addr16
xorl
mov
mov
movsb
test
adc
dec
mov
or
and
clc
or
mov
fdivs
cmp
stc
stc
adc
lret
imul
enter
sub
insl
lea
push
loopne
rolb
lahf
sbb
mov
xor
das
sbb
movsl
movsl
fucomi
jno
lock
scas
sbb
cltd
push
test
dec
fsubrl
xchg
je
xor
push
jns
daa
iret
push
popf
test
xchg
out
jecxz
mov
mov
cli
dec
test
lods
shrb
xor
in
mov
scas
mov
data16
fldl
fildl
icebp
and
aad
xor
pop
xor
lret
mov
xor
testb
pop
std
cmp
in
fists
popa
mov
jns
stc
fbstp
push
jp
sbb
sub
cs
jbe
scas
pop
cmp
lods
jno
sbb
mov
pop
mov
jbe
xchg
adc
jg
push
test
lcall
pop
pop
insb
jmp
std
stc
shlb
sub
sub
mov
fistpl
or
push
xor
add
in
or
int3
ret
jnp
jp
fildl
jnp
and
lret
mov
cwtl
in
jno
adc
xchg
addr16
test
add
push
xchg
xor
add
adc
and
and
lret
inc
fnstcw
mov
in
cltd
pop
clc
xlat
push
xchg
repnz
nop
mov
dec
push
add
pop
mov
lcall
inc
inc
je
cld
fucomip
adc
jg
in
dec
dec
inc
push
inc
rcrl
cmp
rorl
aam
push
sbb
mov
mov
pop
inc
cli
push
arpl
in
xchg
mov
into
popa
pop
sub
or
xchg
dec
scas
out
jle
inc
mov
mov
int3
sbbl
pop
pop
mov
sar
jge
insb
out
inc
sub
sbb
sbb
push
dec
lahf
jmp
inc
stc
sbb
push
stc
int
rorw
and
adc
insl
out
pop
cs
rorb
mov
and
mov
popf
lret
repz
pop
std
or
call
movsl
fdivl
mov
mov
lret
dec
jae
add
std
loop
cs
cmpsl
push
cmpsb
mov
call
ds
jecxz
pop
pop
call
dec
lods
lahf
cld
lahf
ret
aad
call
pop
int
push
adc
sbb
and
nop
push
push
cltd
out
add
pushf
fstp
jnp
mov
insb
sub
xchg
lret
enter
aam
out
arpl
in
or
add
clc
and
mov
jl
ss
dec
sti
push
jle
jp
sub
scas
jecxz
xor
add
cmp
lahf
test
cmp
pop
cmc
es
les
fldpi
popf
cmp
pop
mov
in
mov
ss
daa
push
xor
jnp
jl
popa
mov
pushf
xchg
add
push
jae
xlat
repz
repnz
je
add
icebp
cltd
int
stos
cwtl
or
stos
mov
inc
mov
xchg
pop
cmp
fidivrl
push
pop
xchg
dec
andl
add
imul
cwtl
frndint
push
dec
shll
push
and
sub
mov
mov
mov
jl
cmp
mov
sub
in
pop
inc
sbb
lock
andl
inc
or
in
xchg
xlat
push
or
jp
lret
pop
movsl
mov
push
out
int3
lahf
jae
lods
das
mov
xchg
cltd
add
lods
mov
pop
xor
mov
arpl
loopne
rorb
adc
sub
jb
loop
push
pop
mov
push
rcrl
arpl
mov
fstpt
bound
decb
addr16
scas
sbbl
ret
inc
cmp
ds
aam
mov
jmp
jo
mov
push
mov
xlat
into
mov
inc
div
lcall
ret
mov
jmp
mov
jmp
mov
push
lret
std
cmp
or
and
or
stos
jo
outsb
das
mov
mov
mov
insl
outsl
sub
sbb
jnp
xchg
repnz
xchg
mov
adc
jbe
leave
mov
test
rcr
ljmp
cli
out
cmpb
lret
xor
gs
lea
sahf
inc
test
jmp
fistpll
push
arpl
push
fcomp
dec
pop
push
ret
out
shrb
outsl
jl
fidivrl
mov
sub
loop
loope
jecxz
inc
adc
pushf
xchg
mov
mov
dec
sub
arpl
mov
adc
out
rcr
inc
stos
movl
insb
fwait
sbb
iret
jecxz
mov
fsubrs
sub
icebp
outsl
inc
jecxz
and
dec
mov
jp
pop
xchg
mov
loope
push
inc
jo
adc
xlat
pop
lahf
mov
das
mov
scas
ds
mov
dec
jns
cmpsb
xor
cld
mov
pusha
cs
ja
mov
mov
xchg
repnz
jle
repz
mov
fld
jmp
lds
mov
push
xor
int
add
cmp
sbb
inc
xchg
mov
shl
mov
std
push
ja
lret
leave
lahf
and
xor
aam
into
pop
mov
dec
mov
pop
out
mov
xchg
stc
dec
jmp
ss
mov
sub
fucomi
xorl
cltd
xor
sbb
xor
loopne
faddl
adc
or
jge
or
scas
out
ss
lods
int
shlb
orb
stc
xchg
mov
stc
jp
jl
push
and
int
push
sub
xchg
cld
inc
daa
leave
fisttpll
test
and
cltd
jno
fs
aaa
out
mov
imul
ret
adc
jne
std
mov
mov
mov
out
scas
cmp
mov
out
data16
pop
daa
jge
push
xor
js
sbb
out
lods
xor
and
idivb
scas
mov
lsl
rorb
sbb
jno
dec
sbb
xchg
testb
imul
hlt
mov
stos
cmp
pusha
aas
pop
adc
push
jae
test
ret
int
and
mov
data16
in
mov
mov
dec
mov
pop
mov
iret
ja
xchg
icebp
inc
xor
cmp
push
mov
mov
loopne
push
sahf
nop
mov
jne
lock
or
addr16
or
out
icebp
xchg
push
js
add
xchg
test
pop
lea
fsubl
and
and
pop
inc
dec
pop
call
mov
sub
jne
or
fsubrl
pop
nop
testl
fst
mov
aam
mov
inc
lds
jnp
aaa
sub
dec
sub
fisttpll
out
push
lret
fidivrs
les
push
ret
jo
push
loop
stc
fadds
sub
push
ficoml
mov
push
pop
ret
add
loopne
call
add
es
cmp
add
dec
iret
das
jle
cld
or
iret
jb
adc
mov
push
pop
dec
decl
dec
adc
es
call
aas
jns
dec
lds
fmuls
pop
dec
inc
jge
mov
jg
imul
adc
jp
aam
fldl
rcrb
pop
mov
fs
inc
mov
inc
xchg
ds
pop
outsb
pop
sbbl
dec
sbb
adc
gs
out
mov
rolb
pop
and
repz
mov
inc
sbb
inc
stc
scas
or
xchg
jno
out
lds
lahf
pop
xor
lds
iret
int
push
out
aam
inc
stos
movsb
add
lods
shr
and
dec
out
imul
fidivrs
cltd
rcll
mov
scas
sub
inc
jle
cmpsl
inc
xlat
ret
push
lea
jecxz
cltd
mov
stos
adc
or
popa
sbb
loopne
and
xchg
gs
daa
push
call
lret
das
int
faddl
enter
movb
scas
leave
fistps
outsb
insb
mov
ja
ret
mov
mov
imul
sbb
mov
fcomip
or
adc
mov
movsl
pushf
fisttpl
sub
outsb
jno
jae
aam
jb
mov
pop
das
lret
jo
jl
sbb
cli
mov
scas
push
leave
lret
jb
stos
dec
xlat
mov
bound
xchg
lahf
cli
jmp
insl
and
pop
adc
add
subb
roll
or
xlat
imul
movsl
lods
dec
fldt
sbbb
nop
aas
sub
inc
dec
jecxz
and
cmp
cmp
test
add
int
add
mov
loope
xor
sbb
cmp
testl
dec
ljmp
fidivrs
cmp
add
cmpsb
je
xchg
mov
lock
lcall
adc
ret
add
ljmp
shl
mov
ds
sti
adc
add
out
mov
xchg
mov
arpl
cwtl
jno
adc
stc
jo
mov
or
mov
xchg
loopne
or
call
adc
mov
shlb
test
mov
lods
cs
xchg
inc
das
int3
daa
imul
jg
mov
push
and
push
mov
cmc
cmp
lea
adc
xchg
cld
pop
mov
xchg
push
lods
add
xor
pop
add
jno
shr
sbb
cmp
popf
inc
test
push
std
xor
leave
mov
push
mov
xchg
lea
mov
inc
lahf
jo
cmpsl
stos
pop
mov
sbb
sub
ret
iret
push
loope
jg
ret
jge
fwait
imul
test
jecxz
push
jne
mov
je
outsb
sahf
lahf
xchg
fldcw
mov
pop
stc
and
jnp
jns
dec
add
aam
jns
ds
jns
mov
cli
in
iret
ret
lock
test
inc
jb
adc
fs
jecxz
push
or
cmp
sti
add
mov
cmp
ljmp
mov
jns
xchg
or
dec
sbb
aad
or
gs
decl
pop
sub
or
pop
jle
mov
int
lret
cs
sub
xor
push
das
test
es
cs
cs
stos
push
out
xchg
cmp
xchg
sbb
aam
inc
xor
jb
inc
mov
call
xor
cmc
dec
mov
fs
mov
push
std
and
xor
je
fs
mov
test
pop
cwtl
sub
dec
xchg
xchg
pop
jb
sbb
pop
mov
jmp
fsubs
sbb
push
adc
sbb
sub
je
arpl
adc
and
into
mov
popa
add
subl
and
lods
xor
shr
or
sbb
out
jge
pop
mov
dec
xchg
icebp
sbb
shll
xchg
mov
pop
xchg
fistpll
into
into
push
mov
xor
push
cmp
sti
mov
mov
cltd
icebp
ja
inc
inc
adc
pop
aas
push
jge
sub
sbb
or
mov
scas
jb
xchg
inc
sbb
mov
rol
or
xor
pop
mov
or
test
nop
dec
mov
push
cwtl
sti
xlat
mov
aas
mov
push
or
or
cmc
lea
shrl
hlt
adc
cwtl
mov
es
inc
jg
arpl
pop
js
movsb
add
call
ffree
jmp
or
cwtl
in
lahf
inc
fistpll
movsl
dec
sbb
pop
mull
inc
adc
jnp
lret
or
and
adc
mov
in
shlb
sub
in
in
popa
cmp
imulb
cmpsl
xchg
jle
mov
add
popl
mov
push
add
cmp
test
mov
jnp
dec
data16
xlat
aad
test
adc
or
nop
mov
ja
scas
enter
in
cld
aaa
xorl
jge
movsl
push
jle
shr
rcrb
jae
test
adc
add
dec
mov
inc
jo
pop
shrl
rclb
push
stos
adc
cltd
clc
sbb
dec
xchg
xor
push
scas
mov
aaa
xorl
xchg
sbb
adc
push
insb
pop
dec
rcll
mov
dec
xchg
lahf
cmp
scas
fs
insl
aad
or
sub
out
mov
ret
cmpsb
fcmovb
icebp
xlat
add
arpl
lods
addr16
sbb
fs
jne
pop
sbb
js
mov
data16
xchg
mov
push
adc
mov
push
lock
out
setb
xchg
jb
ret
addr16
dec
mov
sbb
push
iret
ds
hlt
mov
cmp
and
push
mov
ljmp
or
adc
js
mov
pop
push
repz
in
xor
loope
push
add
mov
xchg
cmp
fisubrs
aaa
push
mov
jnp
inc
push
out
js
pop
add
add
mov
fistps
inc
pop
xchg
pop
psubd
and
and
repnz
sbb
dec
mov
stos
lcall
adcb
xor
inc
add
push
mov
call
pop
push
sub
das
xor
incl
stos
call
test
sbb
jg
movsl
aaa
sub
and
in
or
adc
into
add
mov
dec
fpatan
imul
in
mov
jnp
add
lret
testl
pop
pop
aam
adc
and
sbb
andl
sub
sub
or
test
push
imul
mov
mov
ret
inc
jne
jmp
mov
add
push
movb
dec
xor
xchg
push
sub
movsl
out
mov
adc
inc
repz
push
fimull
fadds
inc
les
insb
sbb
rcrl
jp
and
sarl
out
push
dec
hlt
call
add
lret
mov
fisubl
movsb
fdivr
mov
fsubrs
xchg
push
stos
jp
pop
sti
std
sbb
cmp
mov
mov
scas
orl
dec
negb
insb
or
ds
push
repnz
adc
orb
add
icebp
repnz
or
repnz
push
sub
mov
mov
or
lcall
inc
push
mov
orl
ss
fdivrl
nop
pusha
les
fldl
push
pop
and
sub
mov
pop
inc
imul
jmp
fcomps
popa
add
addr16
sub
or
xchg
test
inc
pop
push
out
add
je
dec
test
and
pusha
stos
xor
pop
and
lea
shll
cld
xor
push
flds
xchg
test
rcrl
decb
mov
jae
push
pop
jg
out
ret
frstor
jmp
push
mov
iret
fimuls
jmp
cmpsb
or
mov
or
inc
mov
fs
xchg
push
js
inc
aad
fsubr
es
cli
push
inc
push
cmp
outsl
xor
mov
hlt
mov
cmp
adc
outsb
fisubrl
and
mov
repnz
arpl
mov
cmp
adc
push
pop
cltd
cmpsl
sbb
inc
push
mov
or
ds
dec
push
and
sti
out
cmp
add
sbb
fdivrl
fs
mov
repnz
out
add
xchg
pop
mov
push
cmp
bound
inc
and
pop
add
sbb
imul
lahf
out
pop
xor
mov
std
shl
add
daa
and
in
gs
xor
fisttpl
adc
pushf
clc
ss
in
dec
std
or
jnp
mov
adc
push
mov
jle
pop
in
inc
hlt
jns
popf
out
mov
cmp
xlat
in
sbb
pop
xchg
test
into
push
mov
inc
fcmovnu
fldcw
pop
cmp
ret
adc
jecxz
dec
arpl
das
stc
out
addr16
call
mov
fsubrs
mov
sbb
pop
pop
movsb
jecxz
adc
mov
iret
mov
mov
enter
popa
lds
roll
sub
jnp
or
add
xor
repz
addr16
mov
push
icebp
imull
sbb
stos
sub
xchg
sbb
and
stc
stos
cltd
ret
ljmp
out
cmp
into
add
stos
ja
adc
popf
xchg
gs
pop
insl
mov
es
mov
cmpsb
sahf
jl
mov
and
les
sarl
sbb
inc
in
orb
in
int
jecxz
test
pop
rcl
or
push
or
ds
out
lret
or
jns
cwtl
sbb
popf
push
or
fildl
repz
scas
push
enter
sahf
push
out
cwtl
mov
rolb
mov
loop
or
push
sbb
daa
mov
push
inc
lcall
mov
subl
pop
and
inc
mov
jp
out
arpl
loope
mov
notb
sbb
jne
mov
orb
jmp
mov
fidivrl
xchg
sbb
mov
inc
sbb
addb
orb
or
pushf
xchg
cmc
sbb
ret
lods
push
push
int
sbb
push
arpl
adc
ret
mov
cmp
test
add
mov
insb
shll
and
lahf
pmullw
loope
in
scas
xchg
insb
in
out
loope
mov
or
cld
cs
testl
ds
rcrb
mov
iret
dec
cld
jne
sti
sbb
dec
pop
push
cmp
out
lret
pop
aaa
mov
test
push
mov
and
repz
or
and
cmp
shrb
pop
xchg
pop
pop
mov
push
pop
inc
test
jl,pn
imul
dec
daa
into
sbb
shlb
ret
sbb
jns
sbb
in
stc
ret
push
mov
jg
pop
fwait
in
loop
adc
xchg
dec
add
or
outsl
push
xor
shl
test
fidivrl
mov
es
push
dec
pop
fmul
mov
fs
adc
xchg
add
mov
jle
jns
dec
and
jecxz
in
cli
bound
insl
sarb
cmpsb
xor
and
mov
sbb
int3
pop
dec
push
aad
mov
les
faddl
notb
mov
push
rcr
or
paddsb
lcall
jnp
rorb
push
rorb
loop
push
sbb
add
inc
mov
sbb
sbb
add
stos
jmp
pop
cmovge
and
xor
and
cli
lea
mov
shlb
mov
push
sub
shrb
dec
adc
inc
dec
bnd
cltd
inc
xchg
loope
push
mov
xchg
adc
mov
jb
xor
mov
pop
insl
std
lock
sbb
add
xchg
add
pop
pop
movsl
push
xchg
loope
inc
imul
jno
lcall
sbb
dec
lcall
adc
push
push
imul
inc
cwtl
push
sub
add
push
mov
cli
jmp
jmp
add
cwtl
mov
addr16
lods
cmp
sbb
mov
add
mov
movb
in
cli
clc
dec
cmp
dec
add
shll
es
dec
popa
mov
sahf
in
push
mov
notl
xchg
ljmp
fists
rcrl
mov
or
test
out
test
xchg
ljmp
call
xor
rolb
out
les
jecxz
mov
addr16
cmp
mov
das
cmp
loopne
stos
adc
pusha
sub
imul
gs
sub
aam
cmp
loop
in
repnz
icebp
inc
dec
in
xor
sub
stos
mov
gs
push
fidivrl
pop
adc
jbe
adc
loope
shl
adc
jae
sbb
push
aas
inc
insb
mov
repnz
call
sub
gs
lret
mov
and
dec
mov
je
dec
ret
mov
clc
jno
gs
cld
xlat
mov
mov
stc
xchg
scas
clc
and
jmp
mov
in
sbb
cmp
xchg
mov
cmpsb
int
xor
popf
sub
scas
in
mov
mov
fbstp
test
push
pop
fisubrl
cmp
or
push
imul
sub
and
inc
pusha
in
insl
scas
in
add
jns
xor
aas
xchg
xor
loopne
xchg
xor
js
mov
mov
scas
aas
jl
push
std
sub
test
xchg
mov
mov
mov
add
mov
sbb
ds
xor
mov
shrl
cmp
int3
mov
cs
sbb
push
cmp
and
inc
jecxz
xor
movsb
pop
jle
mov
jne
out
lret
xor
rcrb
filds
jne
dec
mov
mov
pop
pop
sbb
inc
sbb
repz
xor
icebp
clc
pop
pusha
dec
outsb
daa
mov
in
xor
jmp
pop
nop
fsubrl
imul
jmp
cmp
pop
push
mov
sbb
ret
lods
cmp
xor
gs
or
mov
xchg
cmp
jge
shll
vpaddw
jmp
cld
out
es
jle
add
pop
fsts
pop
xchg
mov
nop
inc
in
movsl
and
faddp
pop
dec
add
mov
rclb
je
repz
fistl
or
insl
int3
iret
inc
xchg
imul
push
dec
xchg
jp
popa
lods
mov
cmp
xor
xor
push
lock
and
mov
jp
int3
test
cmpsl
insb
cmp
cmp
push
sbb
sbb
mov
mov
dec
jns
xlat
pushf
lret
cld
mov
lahf
movsb
sbb
inc
pop
dec
jg,pt
xchg
fwait
cwtl
sub
sahf
insl
mov
sahf
jbe
cmp
insl
push
push
loope
jb
push
xor
into
iret
fdivl
push
stos
adc
rolb
xchg
push
mov
xchg
and
in
cmp
imul
cmovp
js
or
mov
add
xchg
nop
push
adcb
xor
and
jne
adc
loop
ror
cmp
mov
stos
fisttps
push
dec
and
ljmp
lock
in
inc
jl
fsubrl
test
mov
inc
ljmp
inc
shll
xchg
jmp
sbb
bound
sub
inc
idivb
pop
pop
addb
jb
sub
rclb
pop
scas
sbbl
testl
cli
cmpsb
scas
adc
lock
inc
cltd
mov
and
ja
mov
idiv
adc
data16
rorl
cmpsl
lods
xlat
sbb
je
dec
xchg
push
mov
js
and
cmpsl
int3
mov
sbb
in
cmp
sbb
xlat
pop
xor
push
jmp
cmpb
lret
mov
xchg
xchg
imull
pusha
fcoml
mov
stos
adc
in
out
pop
mov
subb
mov
loope
test
mov
in
clc
jbe
insl
adc
jge
xor
data16
push
or
mov
cmpsb
mov
int3
mov
insl
cmp
adc
mov
inc
inc
jg
in
jg
fwait
dec
cli
cmp
push
addb
outsb
pop
push
insl
jmp
js
daa
inc
inc
push
pop
adc
mov
push
insb
mov
cltd
scas
sbb
dec
out
pop
imul
mov
rcrl
mov
lcall
lretw
jge
xchg
fistps
aaa
add
cmp
repz
jl
popa
add
ss
pusha
jp
cwtl
and
or
fwait
fwait
in
stc
arpl
xor
shrl
hlt
xchg
test
adc
es
and
jmp
inc
mov
aas
fwait
dec
leave
sbb
cwtl
adc
jno
fisttps
popf
sub
push
out
sbb
sbb
scas
inc
push
dec
pop
xchg
outsl
cmp
pop
jo
imul
hlt
fildl
jae
call
adc
cmp
mov
nop
mov
sbb
mov
xor
cltd
cmpsb
adc
dec
mov
mov
cli
pushf
or
jb
mov
push
vandpd
mov
pop
or
pop
adc
dec
mov
or
fdivrs
ds
aas
mov
fdivrl
enter
aad
fdivl
popa
xchg
inc
jp
stos
aaa
fists
fmuls
inc
mov
movsb
and
sub
add
gs
jns
inc
lcall
shrl
ret
adc
jnp
shlb
xor
dec
jb
jmp
int3
dec
sbb
push
enter
movsb
test
xor
sbb
push
or
xchg
mov
push
lahf
rolb
push
mov
into
xlat
leave
push
in
mov
xchg
mov
fildl
cli
mov
out
mov
inc
jge
testb
shrb
cli
in
mov
xchg
sbb
xor
mov
inc
data16
cmp
test
and
xor
push
jp
out
dec
xor
fs
mov
mov
and
xor
loope
jge
xchg
fwait
nop
imul
or
out
push
push
ds
aaa
test
shrl
sbb
lea
or
stos
mov
popa
or
fmuls
adc
call
dec
insb
xchg
call
inc
gs
adc
test
mov
sbb
loop
push
jmp
popa
mov
jae
mov
inc
mov
sbb
mov
popa
lret
lods
outsl
cmp
in
aaa
pop
or
and
mov
les
and
inc
mov
inc
mov
or
push
into
call
push
mov
push
and
in
test
sbb
push
cmp
pop
roll
fisttpll
ss
xchg
adc
cmc
pop
mov
ja
movsl
dec
popa
outsl
movsl
xchg
lea
out
push
mov
cmp
add
or
mov
aad
arpl
cmp
mov
pop
movsl
in
ja
mov
inc
pop
out
push
clc
fmull
or
mov
sub
sahf
and
es
test
iret
push
test
mov
es
jmp
or
lret
ljmp
pushf
jne
decl
dec
out
xchg
shr
add
mov
inc
jo
add
sbb
adc
fwait
jmp
mov
call
cmp
test
lods
into
or
pop
test
repz
leave
ja
xor
jo
cmp
mov
jae
pushf
lret
xor
jns
sub
lds
int3
inc
roll
shrb
pop
dec
push
in
inc
movsb
hlt
xchg
pushf
mov
ds
or
xchg
fildl
sahf
jmp
cmp
popa
sub
mov
jns
inc
out
adc
jae
movsl
dec
insb
sahf
xchg
mov
shrb
push
push
inc
sub
and
sub
sarb
js
push
fidivs
jl
mov
cmpsl
mov
cmp
pop
and
dec
add
fidivrs
insl
lret
mov
push
or
xor
cli
or
pop
push
cmpsb
pop
mov
int
jnp
mov
push
xchg
dec
test
cmp
pop
das
out
scas
aaa
imul
in
pushf
xchg
mov
xchg
mov
cmp
les
push
jb
xchg
dec
aas
or
dec
nop
sbb
jg
xor
enter
lcall
test
mov
and
out
in
push
es
aam
mov
mov
adc
cmp
jg
cmpsl
fldl
jns
ret
xor
enter
xor
lea
inc
adcl
xchg
popa
lock
adc
lods
inc
sub
mov
ror
push
pop
mov
cmp
xchg
cltd
imul
sub
jne
outsb
call
in
lret
mov
idivl
scas
xor
sub
or
mov
mov
jns
sti
lods
xlat
xchg
inc
cltd
mov
lret
aaa
aas
adc
pushf
pusha
call
pushf
leave
aam
fwait
push
je
mov
mov
orl
aam
mov
fucomp
lahf
mov
imul
adc
dec
jle
sbb
push
call
enter
ljmp
xor
imul
mov
aas
loopne
aaa
mov
lock
and
scas
insl
shlb
inc
sbb
cmpsl
mov
repnz
push
clc
jnp
pop
clc
test
pusha
sti
jne
xchg
mov
cmp
mov
and
jmp
push
test
jns
fnsave
xor
xor
cmp
insl
arpl
cmpsb
icebp
adc
push
adc
out
and
stos
loop
fidivrl
fbstp
mulb
imul
cmp
inc
test
mov
gs
ret
jmp
into
jne
add
xchg
xchg
xor
jmp
mov
mov
add
mov
xchg
pop
sarb
push
adc
and
or
add
xor
add
and
js
das
adc
mov
sbb
or
xchg
jnp
or
mov
incl
push
out
loop
cmp
xchg
aad
cmp
push
lahf
cmp
jb
jge
ja
imul
inc
syscall
add
out
bound
cmp
into
pop
xor
cltd
in
inc
mov
fcoml
imul
add
adc
and
hlt
out
inc
js
push
ljmp
cmc
jb
cmp
sbb
dec
fsubrs
sub
dec
sti
shll
cld
xchg
pop
jns
jae
in
flds
mov
scas
sbb
jno
mov
inc
and
jae
popf
adc
jne
xchg
mov
push
jno
dec
fdivl
push
mov
insl
cwtl
repz
mov
jmp
mov
sbb
int3
rcll
je
enter
sub
enter
cmp
roll
jge
jecxz
mov
aaa
xor
incl
shrb
sub
ds
and
lea
pop
push
pop
pushf
js
add
cmc
add
lcall
rcrl
lds
fnstcw
and
test
dec
call
icebp
loop
repnz
ficoms
test
add
mov
je
or
lret
mov
and
push
add
mov
sub
sub
mov
out
add
push
mov
adc
or
sbb
mov
mov
shll
cltd
insl
adc
js
mov
push
mov
sub
jge
cwtl
push
add
stos
mov
loopne
pop
inc
mov
aaa
and
inc
dec
or
push
push
dec
sub
mov
inc
clc
testl
rcrb
rorb
push
pop
cmp
push
ss
shll
jne
cli
mov
xor
push
jl
imul
cld
mov
or
add
sbb
mov
cmpsb
xchg
sbb
gs
lahf
xchg
xor
enter
scas
jp
sub
fistps
aad
dec
mov
mov
and
adc
fistl
out
push
xor
lret
negb
int
adc
jp
xchg
mov
rol
pop
xchg
bound
scas
incb
mov
sti
push
out
xchg
mov
call
or
pushf
icebp
cmp
ficoms
cld
jno
cwtl
aaa
mov
negl
xchg
mov
jg
inc
sub
pop
mov
jb
add
add
scas
pop
sub
push
fisttpll
mov
fistps
lock
cltd
xor
jae
rcrl
dec
mov
push
mov
cmp
and
inc
mov
mov
aam
inc
xor
or
insb
cwtl
sahf
xchg
and
mov
lock
rcrl
loopne
push
and
xor
add
lcall
arpl
aam
dec
sub
pop
adcb
push
ret
jg
add
dec
out
stos
mov
cld
jae,pt
mov
shll
fnstenv
stos
xchg
and
shlb
ret
ja
xchg
fisttps
cs
cltd
ret
xchg
mov
je
pop
and
fmuls
mov
fimull
mov
dec
ror
sub
jge
xor
or
cs
stos
rcl
push
mov
or
inc
cmp
cltd
pop
daa
loopne
test
ret
daa
lods
cltd
push
je
cmp
scas
jmp
or
xchg
mov
sbb
xchg
and
icebp
ja
cmp
insw
xor
popa
test
sub
in
dec
xor
or
in
mov
leave
fisubl
lea
push
add
popf
mov
in
out
subb
xor
pop
sbb
divb
sbb
ljmp
mov
enter
daa
mov
add
mov
in
push
mov
mov
push
push
add
mov
insb
jge
addr16
stos
sbb
xchg
dec
cmp
push
cwtl
mov
movsl
icebp
leave
rcrb
mov
sub
out
or
leave
inc
mov
dec
and
out
xchg
lods
xadd
cs
adc
xchg
loope
insl
xchg
add
xor
outsl
sub
jne
imul
lret
stc
cld
call
and
fisubl
cmp
dec
mov
mov
xor
xor
icebp
fimuls
add
xchg
xchg
inc
test
pcmpgtw
test
std
lahf
rclb
adc
cltd
add
imul
xchg
lea
pop
movsb
jns
jg
arpl
lahf
xchg
adc
movw
cs
ljmp
push
adc
jmp
lock
sbb
rcl
jne
ss
and
mov
and
sbb
test
das
arpl
adc
xor
ret
ret
movsl
int3
movb
jecxz
iret
jns
fcomp
loop
imul
int3
mov
icebp
jl
xor
push
jmp
adc
fwait
insl
adc
pop
enter
xchg
fildll
imul
test
push
out
in
inc
mov
and
sub
negl
push
mov
ss
push
iret
cmpsl
mov
fildll
sub
push
out
outsl
fsubs
jbe
push
adc
and
xchg
shll
clc
iret
enter
cmp
sub
add
mov
jge
and
cmp
dec
movb
add
inc
sbb
loop
inc
cmp
fildll
adc
iret
jle
movsb
fsts
fdivrl
icebp
icebp
shlb
cmp
pop
insl
push
les
sti
sub
cs
outsl
sub
dec
mov
and
xchg
and
jo
lret
mov
lret
mov
neg
shrl
jmp
sahf
lcall
jg
out
pop
call
mov
adcb
jg
out
sbb
mov
popf
mov
push
insl
in
insl
jae
icebp
icebp
fcmovne
adcb
call
sti
mov
jno
sbb
push
or
movb
lock
push
fstp
lret
sub
mov
insl
in
mov
xchg
test
fisttps
dec
pop
push
add
xor
stos
insl
adcb
aam
rclb
repnz
std
rep
mov
sub
xchg
mov
test
fstps
repnz
xchg
aaa
lcall
ficoms
lahf
mov
sub
test
repz
mov
test
mov
or
xor
or
movsb
hlt
test
mov
dec
xlat
mov
test
movsb
xor
pop
jmp
aad
sar
dec
das
xorb
test
fwait
inc
or
in
imul
inc
or
cmp
and
sub
test
loop
scas
add
repnz
stc
adc
adc
xchg
frstor
mov
fidivl
cmp
in
sub
jle
addb
pop
subl
cmp
icebp
mov
push
orl
xchg
jg
mov
leave
jle
mov
adc
cltd
aaa
pop
test
cli
ret
fs
mov
push
xchg
out
push
xchg
jae
fidivs
outsl
leave
mov
mov
setno
pop
add
iret
push
mov
push
push
js
std
std
mov
add
rcrl
mov
xchg
daa
shr
mov
jbe
push
push
pushf
jnp
and
jne
push
xor
inc
sti
repnz
sbb
xchg
jg
sbb
and
sub
cs
test
inc
xchg
mov
pop
je
jmp
pop
push
popa
insl
aas
iret
rorb
jmp
out
enter
mov
sub
repz
call
sarb
xor
arpl
mov
mov
mov
out
rcll
fnstsw
adc
repnz
aaa
ds
pusha
or
imul
sub
jnp
jnp
xchg
lret
jle
nop
test
cmp
jb,pt
shrb
out
adc
mov
mov
push
or
lods
in
pop
jg
ljmp
out
mov
xchg
int
hlt
mov
push
in
fiaddl
decl
cmp
lret
xor
push
xchg
or
mov
lds
pop
adc
popf
test
push
mov
aad
js
int
mov
cmp
or
and
push
ss
push
ljmp
pusha
mov
or
lcall
aad
popa
shll
and
rol
std
insl
out
or
sbb
inc
mov
pop
dec
pop
dec
cld
mov
push
mov
xor
and
fisttpll
notl
jo
cmp
lea
push
jnp
dec
ret
push
aas
je
pop
push
cltd
aam
jo
repz
sahf
aaa
mov
or
xchg
and
call
dec
lods
push
leave
sbb
and
lret
pusha
mov
and
push
xchg
fdivs
or
or
xchg
lea
test
push
xchg
data16
into
and
mov
sbb
imul
test
xchg
xor
jge
gs
jb
xor
fidivrs
push
test
mov
pushf
push
ljmp
pop
nop
or
sub
lock
movsl
inc
pop
jbe
out
inc
mov
in
fidivrl
fidivrs
idivl
imul
mov
xchg
mov
jge
rclb
clc
hlt
jecxz
push
push
fstps
push
pop
jns
cmp
or
pop
inc
loop
mov
xchg
das
inc
xchg
and
and
into
outsl
test
inc
mov
andb
mov
xchg
daa
xchg
xor
shll
adc
sti
or
pop
aad
pop
adc
into
add
pop
cli
add
xor
mov
jg
lret
push
inc
neg
push
das
daa
fildl
std
ss
and
aaa
cmpsl
outsb
xor
rcr
incl
addr16
add
xchg
les
xchg
std
pushl
int3
adc
cmp
les
sahf
fldt
dec
mov
adc
adc
mov
mov
nop
fsts
ds
fbld
ss
jecxz,pn
ret
mov
inc
fsubs
xor
mov
imull
in
outsl
lahf
arpl
repnz
mov
cmc
outsb
add
rorl
add
das
dec
cmp
and
xchg
data16
xor
mov
imul
push
mov
mov
repz
adc
and
mov
inc
and
call
mov
jb
push
sbb
inc
scas
xchg
lcall
sbb
sti
scas
clc
scas
add
or
push
push
mov
es
jmp
fs
push
add
pop
add
les
xchg
jle
sti
fsub
test
mov
or
xor
mov
sub
in
insb
mov
outsb
sbb
jae
cld
pusha
inc
pop
add
dec
mov
pop
pop
mov
shlb
gs
xchg
lods
pop
lods
push
mov
faddl
mov
test
pop
ja
fidivrs
les
cmp
test
mov
sti
fcompl
es
inc
ljmp
cmp
cmp
jmp
xor
add
cld
bound
cmp
jnp
insb
sbb
push
and
dec
or
loop
pop
enter
ret
sbb
jg
and
fidivrl
jns
pop
push
idivl
repz
adc
xor
sbb
mov
add
icebp
out
insl
adc
mov
dec
inc
push
int
jmp
pusha
jo
or
imulb
xchg
mov
push
in
xchg
jg
lret
mov
pop
loopne
stc
mov
imul
xlat
push
jne
mov
xor
xor
add
in
aam
jg
adc
andb
sub
mov
mov
imul
jp
cmpl
mov
stc
movsl
mov
xchg
je
cmp
shrb
add
sub
test
scas
push
leave
das
pusha
xchg
adc
stos
pop
scas
in
push
mov
jecxz
pushf
add
xchg
sub
mov
lret
cmp
inc
hlt
mov
jne
mov
cmp
sbb
add
and
clc
je
sbb
call
clc
and
bound
xchg
mov
and
jge
sbb
arpl
xchg
dec
insb
lcall
popa
add
mov
aaa
xor
and
pop
push
xchg
push
add
div
loop
cmpsl
mov
mov
test
imul
enter
lret
add
pop
pop
imul
adc
cmp
adc
cltd
pushf
imul
add
out
fdivs
lds
into
mov
test
sahf
xlat
xor
int3
xlat
enter
outsl
pusha
mov
dec
in
mov
cmc
jl
mov
ds
mov
icebp
pop
shrb
pop
jg
xchg
pop
mov
push
adc
jo
dec
mov
fs
adc
aaa
ljmp
mov
pop
and
pop
int3
ficoml
push
push
pop
pop
and
in
test
sbb
cmp
gs
xchg
mov
aad
sub
push
push
popa
sub
mov
jecxz
js
outsl
push
mov
jbe
test
push
push
lret
pushf
xchg
lea
dec
mov
jnp
add
jb
sbb
jne
mov
or
and
leave
adc
sub
gs
inc
pusha
pop
lahf
dec
daa
xchg
imull
cmpsb
jmp
out
inc
lods
dec
mov
xor
scas
ss
mov
add
push
ret
popa
imul
in
inc
mov
loopne
pop
mov
and
packssdw
pop
and
stos
add
pop
dec
push
mov
jl
mov
loopne
xor
jnp
dec
jb
dec
mov
push
sti
addr16
mov
cmp
or
add
in
mov
pop
call
adc
insl
je
repnz
jbe
add
bound
mov
jns
mov
jmp
cli
cmpsl
or
pop
bound
add
hlt
push
pop
cmp
cmp
jae
and
loop
cmp
in
out
dec
push
push
or
movl
mov
xchg
ss
scas
jb
test
mov
in
inc
and
jae
lcall
ds
and
jb
push
mov
ds
jle
sub
lea
aaa
mov
jbe
sbb
push
mov
and
jnp
pop
xchg
out
xorb
aaa
inc
gs
lret
rcrb
aaa
cmpsl
out
je
jo
mov
or
cmpb
daa
sub
lcall
jle
inc
xor
inc
push
jnp
jecxz
imulb
push
sub
xor
mov
dec
incb
jns
sbb
inc
jb
adc
or
sarb
mov
sub
rcl
adc
andb
daa
pop
adc
enter
test
xchg
loopne
cld
jl
inc
fldcw
inc
call
dec
pop
sar
sbb
fisubrs
push
push
or
mov
push
jl
fildll
push
inc
add
inc
fnstsw
mov
ja
sbb
pop
lds
mov
psubq
mov
add
add
push
pop
mov
inc
pushw
mov
dec
add
test
dec
jno
enter
dec
or
mov
sub
jnp
mov
add
pop
adc
lds
xor
cmpsb
aaa
pop
ret
lods
add
push
inc
movsb
scas
mov
jb
sahf
push
stos
insb
add
fld
push
shrl
lea
popa
sub
cmp
int
jmp
jno
cmp
mov
mov
jecxz
jl
outsb
cltd
lahf
jne
stos
out
jp
and
stc
mov
imul
jb
insl
clc
test
daa
sbb
les
out
sbb
les
xor
or
sbb
stc
hlt
std
outsb
data16
or
jl
clc
adc
xor
xchg
xor
xchg
jb
pusha
mov
cmp
scas
dec
je,pn
pusha
jno
adc
sti
mov
mov
jp
or
xchg
add
inc
sti
aaa
test
shl
push
inc
add
fwait
mov
inc
mov
sti
jp
sub
jge
cmp
scas
std
cmc
sub
pop
ror
add
push
ja
lods
xor
je
fisubrs
fwait
add
and
push
sub
pop
dec
repnz
and
or
xchg
adc
out
shll
jge,pn
popf
add
in
popf
sub
xchg
sti
fistl
jecxz
cs
aad
stos
push
xor
nop
fcoms
outsl
lock
xor
test
jecxz
jp
dec
rcrb
push
xchg
push
mov
mov
jb
pusha
mov
push
lods
push
xchg
inc
jnp
jbe
push
mov
mov
xchg
adc
dec
jecxz
lock
cmp
sub
pop
fildll
push
dec
adc
mov
inc
mov
dec
lret
inc
test
sub
sub
add
outsb
adc
inc
nop
aas
add
or
int
pop
imul
or
mov
or
inc
cmp
xchg
arpl
loope
mov
lds
add
outsl
mov
push
outsb
cmp
and
mov
sbb
popa
popf
jae
adc
mov
shrb
jns
testl
cmp
pop
negl
jp
push
out
fdivrl
mov
in
loopne
push
int3
bound
lock
jbe
fmul
pop
lds
mov
out
in
xor
sbb
sub
leave
pop
repnz
ja
addr16
xchg
xor
cld
inc
inc
push
addl
push
aad
cmp
sub
sbb
mov
ja
cld
daa
js
aad
jno
out
out
xor
inc
into
arpl
inc
or
scas
jne
fnstsw
pop
xchg
ja
mov
ss
lods
jp
xchg
or
ds
adc
jg
cmp
enter
inc
fistps
lock
ss
dec
negb
daa
int3
out
aam
dec
sub
aam
pop
shrb
scas
push
int
aad
jb
adc
adc
cli
out
mov
std
dec
inc
and
loop
cmp
mov
xor
mov
fnstenv
mov
aas
push
dec
pop
lcall
ss
adc
xchg
arpl
pop
lret
lcall
sbb
push
sub
add
std
inc
pop
pushf
adc
push
xor
mov
or
int
and
lahf
xchg
add
popf
and
dec
sub
outsl
nop
repz
lods
ficoml
pop
lods
cmp
testb
test
fs
xor
sub
cmp
shlb
gs
in
dec
and
ja
cmpsl
ss
mov
call
ret
mov
aas
xchg
mov
adc
and
cmpsl
pop
mov
stos
cli
mov
mov
lcall
or
lds
mov
sbb
arpl
jnp
hlt
imull
std
jae
leave
inc
je
hlt
jle
lods
mov
es
test
pop
sub
cs
mov
push
or
rorb
scas
xchg
lea
lods
jne
in
lock
das
cmp
jae
jle
daa
sbb
mov
movsl
add
sub
xchg
add
js
adc
ret
jmp
cmp
jp
ret
arpl
les
fildl
cli
mov
sti
jns
rol
and
cmp
sbb
cmc
adc
push
leave
sub
sahf
cmpsl
subb
in
dec
jns
add
sub
cmpb
pop
mov
inc
repz
repnz
dec
or
cwtl
push
mov
in
and
mov
sub
out
pop
arpl
cli
ficompl
jbe
data16
xchg
out
shl
push
xor
jno
stc
pop
insb
dec
fisubl
jno
cmp
movsb
jl
roll
stos
push
scas
pop
add
and
push
pop
and
adc
btr
repz
popf
imulb
pop
mov
sub
enter
sbb
bswap
push
xor
push
push
mov
mov
test
pop
cmpsl
xlat
lret
sub
mov
inc
rcr
dec
sub
hlt
in
or
mov
lods
es
repz
cwtl
into
pop
fsubr
cld
mov
jmp
push
es
mov
sub
jp
push
jecxz
jmp
xor
cmpsb
sbb
movsl
cmpsb
cmp
and
push
movsb
pop
xor
mov
in
insb
xlat
mov
mov
fidivs
outsl
xchg
repnz
in
jae
jp
dec
lahf
mov
stc
xchg
mov
cmp
inc
popf
inc
das
arpl
mov
in
leave
cltd
in
and
test
push
lret
pusha
outsl
xor
stc
pop
notl
notl
mov
pop
addr16
xchg
mov
jp
lods
push
mov
and
enter
adc
sbbb
leave
jns
bound
mov
and
mov
sub
mov
daa
jl
loop
mov
push
daa
mov
icebp
and
cmpsb
pushf
mov
dec
fwait
push
jmp
pop
enter
int
jae
and
inc
pop
js
ret
in
pop
iret
dec
inc
xor
sbb
or
adc
or
pop
cmpb
loopne
xor
dec
insb
orb
dec
xor
imul
pop
pop
mov
push
repz
cltd
jmp
push
repnz
xchg
cmpsb
mov
pop
jl
idivl
lods
testb
inc
lods
hlt
pusha
dec
mov
adc
js
add
sub
jl
pusha
xchg
mov
lods
add
pusha
push
incb
add
popf
cmp
add
jns
subb
je
xor
cld
popf
dec
btr
loop
xor
scas
out
mov
xchg
xchg
cmp
movl
sub
or
and
cmpsl
cli
and
xlat
xchg
push
dec
sbb
xor
xor
jmp
rcll
fadds
pop
adc
push
xchg
ljmp
sbb
jae
lods
into
test
sub
aad
and
add
dec
movsl
sahf
pop
push
outsl
xchg
aam
ja
sub
scas
loopne
rorb
gs
test
sub
push
xchg
inc
es
stos
scas
sbb
test
leave
out
xor
jns
mov
jge
and
xchg
test
addr16
sub
sarb
sub
pop
in
out
rorl
bound
or
jae
dec
mov
iret
fcmovu
sbb
fs
movsb
mov
jne
or
mov
add
dec
mov
xchg
sbb
ja
in
fs
repz
dec
dec
in
xor
push
iret
fwait
in
inc
xchg
data16
and
ljmp
aaa
mov
or
ret
jmp
push
mov
jne
icebp
or
adcl
xor
stos
push
dec
daa
adc
push
js
adc
in
icebp
push
xchg
xor
mov
xchg
bound
fdivl
int
cmp
aad
add
incb
orl
lcall
clc
sbb
mov
repz
je
adc
add
ljmp
add
fstpl
jle
rolb
xor
or
notb
add
clc
push
mov
push
jp
jo
mov
into
out
adc
sub
imul
and
packssdw
sub
test
out
jo
aad
dec
clc
stos
dec
inc
mov
adc
mov
movsl
imul
cmc
addr16
sub
movb
insb
xchg
hlt
int
ja
push
push
stc
pop
xor
mov
lods
mov
xchg
push
or
pop
push
sub
sub
imul
mov
jo
sahf
std
dec
push
sub
hlt
or
incb
mov
add
icebp
insb
pop
ljmp
int3
movsl
sub
les
cmp
mov
sbb
mov
push
je
cmp
add
iret
mov
in
inc
pop
xor
stos
adc
outsb
jno
mov
adc
mov
push
mov
push
in
movsb
add
ret
jp
into
lret
or
fnstcw
fadd
decb
sbb
shll
outsb
jno
cmp
subl
rorb
and
jmp
or
push
in
ds
pop
int
lods
cmp
test
cmpb
push
or
lods
in
push
std
pop
test
movsb
cmpsl
sbb
loope
cmpsl
cld
or
sbb
stos
jo
scas
mov
dec
loop
mov
push
xlat
add
inc
stos
mov
xchg
frstor
loopne
shrl
mov
add
add
iret
lock
push
mov
jp,pn
rclb
cli
test
jmp
cmpsb
jmp
das
lret
popa
sub
sbb
jo
shll
add
outsl
shll
ret
xchg
pop
pushf
cli
shll
push
jne
add
test
shll
push
leave
out
sub
sti
add
lret
sub
push
sub
les
or
sbb
jno
push
xlat
cmp
addr16
fcoms
int3
and
mov
add
sti
lret
test
xchg
lea
mov
ljmp
sbb
into
inc
push
repnz
shll
cwtl
mov
je
xor
lock
fadds
movsb
mov
mov
test
test
lret
hlt
les
adcb
int3
pop
push
pop
daa
test
inc
arpl
loope
mov
add
adc
hlt
pop
cmp
jle
xchg
sbb
inc
std
and
sub
push
cmpsl
pop
fbstp
xchg
call
adc
into
scas
pop
mov
add
movsb
pop
outsl
daa
lahf
adc
sub
inc
add
mov
pushf
or
shl
sub
sarl
addr16
idivb
push
push
jp
inc
lcall
pop
push
mov
push
pop
lret
mov
xchg
dec
or
push
sub
xchg
sbb
lock
popf
fldenv
jae
xor
mov
scas
xchg
mov
popf
adc
pop
shll
jge
ja
gs
roll
scas
testb
add
sub
pop
out
jl
jae
int3
fisubrl
dec
aad
lods
mov
inc
inc
sti
add
popa
lods
shrl
pop
jecxz
mov
aas
pop
xchg
mov
add
push
hlt
ret
sub
dec
les
and
test
lods
mov
movsl
cmp
pusha
jecxz
std
or
sub
into
pop
lea
sub
cmp
sbb
hlt
and
xlat
cmp
js
add
shrl
pop
insb
jl
testb
or
sbb
aad
jnp
inc
and
outsl
call
and
movsb
push
repz
pop
daa
dec
or
fdiv
sti
ret
dec
cmp
mov
push
repnz
ja
rolb
adc
fst
mov
mov
test
lret
jmp
mov
sbb
xor
and
or
or
push
jnp
rclb
fcompl
sbb
inc
inc
ja
cmp
push
sahf
mov
out
pop
cmp
jne
mov
stos
mov
or
push
xor
push
pop
xlat
sbb
js
sbb
jno
lock
push
sahf
push
rolb
push
imul
xchg
inc
xchg
jmp
jns
arpl
dec
fidivl
mov
aad
stos
jno
jne
sub
jge
jp
jo
push
mov
push
into
xchg
inc
andb
inc
push
lret
lret
in
jge
sahf
cmpsl
pop
pop
mov
sub
aas
add
push
in
cmp
and
and
addr16
mov
pop
out
push
je
mov
mov
pop
sbb
pop
dec
push
sahf
fdiv
sti
ret
pop
and
cli
retw
enter
mov
les
lret
rcl
jge
cmpsb
mov
filds
cmp
sub
adc
test
inc
push
in
inc
push
mov
xchg
imul
dec
lods
mov
xor
jo
out
pop
loop
in
jl
cmp
mov
adc
jmp
movsb
enter
or
and
mov
sub
scas
orl
js
bound
outsb
mov
and
cwtl
mov
mov
adc
push
xor
cltd
or
dec
mov
mov
mov
or
or
jne
nop
inc
insl
cmpsl
jae
fnsave
pop
dec
xor
fsubrs
jmp
pop
es
shlb
mov
in
and
mov
inc
iret
jb
push
pop
movsb
fmul
add
lods
iret
bound
pop
jae
xchg
jae
mov
xchg
sub
cmp
iret
pop
xor
cmp
jp
and
xor
popf
or
push
fcmovne
jbe
jbe
mov
push
shll
add
sbb
ret
mov
je
or
cltd
mov
dec
push
stos
imul
out
pop
dec
repz
leave
lods
push
movsb
movsl
cwtl
jecxz
push
mov
jecxz
sbb
sub
leave
push
loope
popa
notl
cmp
jmp
sbb
shll
push
jnp
in
adc
xchg
int3
filds
pop
or
jg
xchg
adc
push
dec
dec
mull
jb
cmpsb
jmp
mov
pushf
aaa
es
xchg
jo
mov
push
insl
cmpsl
shrd
bound
xor
jp
jecxz
out
mov
stos
stos
mov
mov
dec
inc
je
movsb
ret
in
in
push
cmp
or
push
add
push
jne
or
cmp
insb
in
mov
jbe
and
ficoml
push
stos
jmp
dec
jle
pop
fsubp
inc
adc
insb
jmp
fs
xchg
clc
mov
or
or
cmpsb
mov
sub
xchg
mov
sub
sub
or
mov
fisttpll
gs
jno
mov
or
in
pop
push
mov
add
adc
sti
int
xchg
ret
xchg
dec
jge
ds
lret
or
mov
les
add
jecxz
push
aas
sbb
out
movsl
notb
leave
lcall
xor
cmc
rolb
leave
cmpsb
cmp
inc
aad
in
shr
stc
jle,pt
sub
int
jae
psrlw
mov
inc
push
mov
xor
test
gs
pop
mov
adc
imul
and
sbb
scas
push
jge
push
mov
xchg
and
ja
cmp
call
daa
subl
cmpsb
jbe
leave
bnd
push
adcl
dec
aad
lahf
insb
cmp
jge
imul
add
mov
stos
outsl
testl
and
ja
loopne
mov
inc
ficoml
int
aam
fmul
insl
sub
repnz
cmp
adc
sub
cmp
pop
mov
bound
push
les
adc
ret
je
pop
pop
sub
stos
fdivrl
icebp
or
dec
int
in
mov
jg
popa
and
ja
orl
adc
push
jbe
ljmp
or
fisttps
pop
push
cltd
ficoms
das
and
cmp
pop
fwait
int3
add
stc
mov
cld
clc
mov
jmp
dec
mov
jo
outsb
pop
inc
dec
cmp
cs
fistps
sub
js
out
int
mov
insb
clc
pop
xor
jne
in
xchg
movsb
fwait
mov
lea
sub
mov
dec
les
sbb
ret
push
clc
cmc
es
popf
dec
push
push
imul
push
shll
push
adc
mov
push
mov
inc
rcr
mov
pop
fisubrs
push
fwait
xchg
shl
add
icebp
lret
test
and
lret
mov
mull
cmp
xchg
mov
insb
adc
pop
mov
adc
test
in
add
ds
std
aas
jmp
push
push
js
int3
adc
dec
sbbb
test
dec
faddl
pop
push
out
jae
fstl
in
pmulhuw
nop
insl
inc
int3
fdivrp
xor
out
dec
ja
push
inc
pop
rorb
into
sbb
les
xchg
stos
and
xor
inc
insb
movl
sub
and
push
add
add
aaa
inc
pop
pop
movl
rolb
and
bound
es
mov
pop
outsl
mov
subl
call
sbb
add
inc
mov
cmp
adc
ds
fldenv
int3
sbb
test
imul
mov
test
mov
loop
mov
test
sub
loop
xor
xchg
push
add
fisttpll
inc
stos
cmpsb
cmp
jb
stc
adc
jecxz
ret
fcomps
les
cmpsb
aas
repnz
rorl
scas
ret
cwtl
adc
adcl
lds
inc
ret
adc
add
dec
in
sarb
fwait
test
sub
pushf
sbb
jns
out
cmp
stos
pop
iret
mov
dec
jmp
xor
pop
inc
inc
mov
ljmp
add
jle
fcoms
add
push
mov
test
sbb
and
in
adc
in
pop
pop
sbbb
pop
mov
loop
jns
ja
stos
dec
xchg
xchg
or
and
xchg
loop
cmpsb
pop
and
lods
stc
ja
and
stos
sub
xchg
xchg
in
ds
in
enter
ficoml
mov
xor
mov
push
pop
das
jns
or
jnp
add
adc
and
inc
movsl
pop
adcb
mov
sbb
stc
jmp
adc
mov
and
imul
mov
push
scas
sbb
inc
xor
loope
mov
insl
popa
fisttpl
dec
outsl
scas
pop
lcall
mov
sub
fs
inc
push
mov
orl
nop
inc
mov
mov
dec
jbe
nop
xchg
mov
enter
jnp
insl
imul
cltd
xor
hlt
dec
push
or
insb
mov
push
dec
push
jge
out
jb
repnz
mov
adc
jg
mov
jbe
dec
ja
push
inc
jg
stos
stos
sub
es
add
nop
xor
push
sbb
mov
add
jbe
xor
pop
pop
xor
adc
movsl
into
addr16
xor
mov
clc
cmpsl
icebp
addr16
xchg
stc
ljmp
mov
pop
dec
ss
int3
mov
fildll
pushf
stos
in
mov
xchg
hlt
push
ss
push
jb
outsb
cmp
cld
ja
notb
int
xlat
inc
mov
stos
lret
dec
loope
or
dec
pushf
sbb
mov
pop
into
rorl
jo
out
mov
xchg
xor
or
iret
test
or
orb
jl
adc
call
inc
xor
stos
test
int
out
sub
bound
loopne
inc
stos
push
sub
jg
ret
pusha
and
lret
scas
mov
pop
xchg
icebp
test
fnstcw
lret
stos
dec
lods
jge
cmpsl
fadd
leave
dec
pop
jae
cwtl
cwtl
mulb
mov
sbb
cmp
les
sub
pop
lds
test
push
jecxz
jno
cmpsb
rolb
mov
ss
dec
idivl
dec
lahf
jae
pop
mov
cmpsl
orl
jno
lods
jae
sub
fidivl
mov
mov
int3
mov
sub
fs
push
clc
imul
xor
push
flds
mov
push
fsubp
or
xor
popf
fcoml
into
add
repnz
jns
dec
imul
xchg
aad
movsb
hlt
push
dec
jl
leave
jmp
xor
mov
mov
addr16
stos
jl
jae
dec
outsb
adc
add
mov
loopne
loop
hlt
jecxz
fwait
cld
aam
and
js
or
mov
and
xor
mov
xor
pop
mov
inc
movb
adc
jno
mov
jne
mov
sub
test
adc
push
mov
mov
movsl
and
pusha
lret
xlat
adc
test
outsb
mov
sbb
add
aam
cli
lahf
push
pop
mov
movsb
bound
int
fadd
movl
mov
ss
gs
fsubs
pop
pop
jns
daa
push
dec
scas
cmpl
test
push
inc
mov
dec
in
mov
mov
xchg
add
mov
pop
push
jns
cmp
pushf
aas
jge
pop
mov
pop
jge
mov
popf
xchg
cmpsl
jle
mov
cs
loope
mov
sub
mov
cmp
xor
mov
nop
xchg
lret
fwait
pop
inc
inc
push
mov
in
inc
or
jns
in
mov
sahf
ret
mov
int
mov
mov
jbe
das
loop
pop
inc
jg
jle
outsb
or
sbb
lea
sarb
lock
xchg
or
push
adc
cmpsl
push
inc
pop
adc
hlt
in
outsb
lods
jne
add
xor
aad
sbb
or
sti
paddd
addr16
mov
or
and
scas
dec
jl
orb
xlat
pop
inc
mov
sub
and
sbb
fidivl
pop
rcll
jno
jp
pop
inc
or
insb
es
and
dec
xor
out
in
fistl
xchg
cmp
pop
mov
xor
and
add
sub
push
fiadds
mov
neg
mov
inc
xchg
adc
jecxz
gs
rcll
sarl
push
mov
xchg
lods
bound
xor
out
and
jae
xlat
outsb
xchg
ljmp
fdivrl
lea
or
clc
mov
clc
pop
shrb
arpl
mov
divl
lock
inc
sbb
xor
iret
imul
jl
mov
inc
imul
loop
add
jecxz
fst
scas
sti
pop
sbb
lods
sbb
aad
xor
std
std
setae
idivb
mov
lret
xor
sbb
and
inc
pop
and
lcall
repnz
data16
and
movsl
xchg
jmp
add
inc
and
and
pusha
sub
dec
test
and
mov
mov
cmp
add
xor
add
mov
mov
fidivrs
fstpl
aam
adc
popa
sti
mov
cmpsl
mov
test
pop
out
xor
push
lods
push
pop
mov
xchg
xor
xor
jecxz
fsubl
jl
pop
shrb
test
push
adc
jbe
pop
std
mov
lods
jp
popl
je
mov
fdivs
rclb
xor
repz
sbb
vmovsd
jns
rorb
and
sbb
cmpsl
iret
stos
mov
xchg
push
in
js
dec
jb
pop
mov
mul
aad
lock
int3
mov
ljmp
arpl
jae
ss
xchg
pushf
lahf
in
std
das
ljmp
pop
xor
pop
ja
cmc
lock
call
cmc
inc
inc
mov
cmp
jge
jecxz
ficoml
int3
adc
adc
jbe
ja
je
lcall
adc
bound
push
adc
pushf
inc
clc
xchg
imul
fsubrs
lods
xchg
sbb
dec
sub
cmp
adc
ljmp
xchg
mov
gs
xor
sbb
decl
inc
pop
lds
push
jno
in
in
int
icebp
sahf
cmp
xor
call
xor
xor
fldcw
insb
push
iret
sbb
pusha
cld
int
in
add
add
inc
cmp
jno
adc
pop
cltd
int3
sub
outsl
pushf
dec
xchg
lcall
icebp
sahf
inc
mov
inc
inc
or
and
pop
xor
mov
pop
mov
test
aam
lods
lcall
cmp
mov
or
mov
xchg
repnz
push
ret
fdivl
push
dec
es
in
divl
cmpsb
or
cmpsl
jecxz
mov
xor
inc
mov
sbb
loopne
mov
or
add
cmpsl
out
inc
lret
mov
or
pushf
inc
icebp
mov
mov
std
popf
dec
jno
out
cltd
jg
cvtpi2ps
pop
sub
cli
xchg
mov
js
cli
xchg
incb
addl
adc
into
xchg
add
xchg
lods
xor
scas
dec
cs
and
cmp
or
push
adc
jecxz
les
sub
lods
dec
outsl
jne
mov
cs
mov
fstl
xchg
sub
add
mov
cmp
rclb
jo
adc
mov
les
sbb
sub
leave
jmp
vpsllq
insl
inc
pop
mov
sub
mov
pop
and
cltd
mov
dec
and
fld
stos
add
mov
push
cli
lock
push
fstps
sub
pop
pop
mov
aam
inc
cmc
fistpll
cmpsl
icebp
pop
out
push
stc
or
out
sarl
add
les
cmp
xchg
scas
xchg
mov
aam
xor
or
in
icebp
cwtl
icebp
xor
inc
push
pop
fiaddl
js
or
push
push
jb
add
xchg
sub
adc
pop
aad
mov
outsb
sub
pop
or
leave
xor
mov
sbb
aad
inc
xlat
cmp
popa
dec
xchg
cmp
pop
int
mov
call
or
in
stc
mov
out
in
insl
mov
gs
jmp
inc
bound
cmp
popf
repz
cmp
lret
aad
mov
subl
rol
repnz
mov
call
leave
aam
xchg
sbb
lret
mov
cmpsl
mov
out
xor
sub
sub
mov
inc
pop
shlb
cmp
leave
lds
xchg
ss
xchg
loopne
rol
mov
sar
cmc
imul
loope
mov
inc
sbb
das
test
sarb
jle
pop
sti
xchg
add
pop
push
push
stos
jmp
js
lahf
mov
mov
pop
mov
daa
imul
push
pushf
xchg
loopne
pop
ret
push
popa
stos
jae
xchg
cmc
mov
fsubrl
or
stos
jo
andl
and
add
jne
bound
out
xchg
push
pavgw
cmc
in
cmp
scas
adc
pop
adc
js
jo
adc
pop
jbe
xchg
sti
mov
mov
mov
out
inc
mov
xchg
fcoms
das
fcomip
pop
adc
stos
cmpsb
xchg
daa
les
gs
or
xchg
sarl
xchg
fdivl
les
dec
ret
inc
ret
repz
shr
sbb
in
sarb
dec
ret
lret
push
stos
xchg
sbb
in
or
jge
fstl
mov
out
adc
iret
xor
int
cld
jle
xchg
inc
mov
add
movhps
nop
lods
fwait
cmp
pop
scas
mov
shll
cltd
jnp
cmp
mov
pop
sbb
xor
ja
inc
test
int3
cltd
sahf
roll
sbb
arpl
mov
bnd
sub
into
add
jl
movsl
xor
mov
add
mov
mov
pushf
xchg
cmp
arpl
mov
xor
mov
push
das
fldenv
or
mov
and
pop
dec
xor
push
push
and
xchg
xor
pop
cmc
mov
test
iret
push
or
pop
mov
xor
add
jmp
push
mov
inc
inc
lret
add
gs
push
cwtl
divl
push
cs
outsl
out
lea
push
cmpsb
sbbl
hlt
xchg
jmp
adc
xchg
jno
mov
test
add
dec
jo
and
add
xor
push
and
testb
orl
es
jns
jle
flds
jg
shll
imul
mov
pop
in
imul
fwait
xorl
dec
incl
movsb
insl
sub
shlb
nop
sahf
fcmovnb
dec
ja
xchg
push
mov
je
imul
jae
mov
dec
test
loop
xor
ficompl
push
push
lret
adc
cmp
sbb
sub
lds
movb
aad
lret
xchg
insl
lods
lret
enter
gs
push
push
lret
clc
aam
mov
xor
or
push
lock
inc
cmp
in
adcl
outsb
jbe
out
add
push
repz
add
adcb
lea
fdivl
push
aad
scas
jns
sbb
push
outsl
test
pop
and
shl
add
inc
inc
ret
pop
loope
gs
pop
or
ss
push
fisubrs
adc
int3
mov
dec
bound
push
scas
lea
popw
out
gs
icebp
mov
testb
scas
push
xor
xchg
aas
xchg
in
adc
fnstenv
in
pop
mov
xchg
jmp
or
shr
setp
pop
and
out
and
jmp
decl
add
fsubp
sub
inc
mov
sarl
stos
lahf
sbb
jge
fidivl
cmp
je
fiaddl
jns
xchg
in
lea
push
fcoms
adc
dec
xchg
jecxz
mov
mov
mov
dec
mov
mov
shl
lock
data16
jbe,pt
fdivl
sbbl
stos
push
arpl
mov
sub
pop
adc
inc
cmc
aam
cmpsb
aas
pop
sub
jae
das
dec
mov
hlt
mov
adc
dec
lahf
sub
mov
adc
dec
out
lcall
sbb
jp
bound
movsb
mov
popf
shll
out
xchg
add
inc
in
ljmp
xor
add
in
cmp
cltd
int3
cmp
cmp
aad
les
cmpb
xchg
nop
xor
and
sbb
insl
xor
fwait
push
sbb
inc
sahf
mov
jnp
dec
jle
int3
scas
stos
xor
dec
xorb
and
aam
inc
mov
xchg
loopne
cli
cmpsl
mov
shlb
aaa
das
iret
jo
cwtl
ret
or
ja
sbb
outsl
lds
test
js
test
inc
in
dec
jb
jns
mov
cmpsl
push
push
movsb
or
dec
inc
xor
fldcw
ds
jo
or
and
jbe
dec
mov
fsubrl
outsb
imul
mov
xchg
in
pop
and
loope
xchg
je
out
aam
xor
cmp
imul
aad
add
cwtl
push
xchg
pop
mov
dec
push
or
pop
pop
ds
xchg
mov
adc
inc
outsl
jp
test
adc
cli
and
scas
push
outsb
into
cli
mov
fisttpl
xchg
clc
ljmp
ret
pop
cmpsb
popf
cmpsb
pop
xchg
lcall
cmp
cmp
xchg
idivl
fimull
add
inc
loopne
imul
push
jno
dec
push
xchg
mov
xor
cmp
stc
test
lahf
je
xchg
fucompp
ficoml
adc
adc
stos
sub
xor
pop
fistpl
push
ficoml
jg
je
movb
jnp
ja
loop
inc
dec
jmp
je
cld
mov
mov
jns
jne
push
mov
mov
rcr
int3
cwtl
jg
insb
scas
xor
in
and
in
push
inc
or
sub
ljmp
lds
xchg
or
in
je
or
ret
loope
lcall
ljmp
call
clc
inc
stos
adc
dec
fnsave
fsub
jae
pop
push
push
pop
fisubrs
xchg
mov
push
clc
adc
and
jecxz
add
aam
and
sbb
repnz
or
or
sarl
in
add
mov
rdmsr
loop
inc
fldl
jmp
cmp
scas
pop
xchg
shrl
xchg
loope
ss
cmp
jp
lds
and
cmp
cmc
dec
push
mov
inc
rorb
inc
cwtl
insl
inc
fwait
scas
xor
iret
mov
jnp
sbb
pop
repnz
out
xor
popf
out
mov
hlt
in
cmpb
movsb
imul
cs
mov
xor
movntq
mov
push
fsubrl
dec
mov
mov
scas
lock
jae
decb
fnstenv
push
clc
bound
adc
mov
leave
addr16
pop
xchg
mov
fs
jns
inc
mov
cmpsb
pusha
lcall
sbb
xchg
adcb
cmovo
sub
fstpt
pushf
cmpsl
mov
lock
cmovl
scas
dec
fisubl
mov
out
or
insb
inc
mov
clc
test
jnp
push
push
dec
shll
inc
into
lret
xor
in
shl
xor
ljmp
xor
sbb
xchg
es
sub
js
cs
frstor
push
into
cmp
push
out
mov
or
mov
enter
leave
mov
insl
movsb
pop
xchg
aad
adc
aam
loope
adc
push
push
mov
pop
push
int3
dec
cli
or
jbe
movsl
adc
mov
push
push
jo
xchg
bound
push
or
pusha
add
fcoms
shll
dec
inc
daa
dec
inc
push
push
shlb
pop
inc
dec
xorl
flds
sbbb
push
mov
mov
bound
movsb
movsb
cmp
jae
xchg
aaa
mov
or
inc
in
shrl
lds
mov
pop
jae
mov
jnp
inc
xchg
and
xlat
add
aam
cli
xor
jecxz
cmp
out
xor
rcl
pushf
jne
je
outsl
sub
jb
in
cmp
jb
ja
out
push
jg
pop
or
mov
loopne
scas
jmp
cmp
jne
mov
cmpsb
push
xchg
lcall
push
jae
and
mov
pop
mov
lret
inc
mov
push
rolb
fwait
int
jnp
inc
jg
inc
and
cmp
test
mov
fwait
add
pop
cmp
mov
inc
pop
mov
push
insb
orl
test
loope
xor
dec
mov
fs
roll
ja
lds
aam
imul
adc
inc
lret
jne
inc
add
sbb
push
cs
stos
add
clc
dec
or
fucomi
push
clc
push
enter
jmp
cmpsl
insl
aas
arpl
xor
or
mov
xor
out
pop
push
outsl
inc
sub
adc
stc
adc
int
dec
int
outsb
sbb
scas
arpl
cmp
mov
push
pop
cltd
mov
push
inc
cld
rcll
jnp
adc
sub
push
push
add
push
sahf
dec
aas
mov
out
cmp
jmp
add
xor
mov
mov
adc
xor
adc
and
xor
es
push
dec
xchg
mov
ror
cmc
sub
imul
mov
add
push
pushf
lds
cmpsb
cmp
jns
jbe
mov
orps
insl
adc
adc
mov
les
lahf
mov
outsl
pop
fs
pop
sbb
sbb
addr16
inc
add
sbb
incl
scas
call
jbe
xchg
cmp
pop
mov
rorl
pop
jnp
sbb
lcall
leave
mov
arpl
cs
push
sbb
inc
adc
cld
sbb
add
or
pop
aas
adc
mov
insl
cmp
pop
inc
sub
push
les
fsubs
push
fldenv
lods
aad
in
popa
xchg
mov
call
sti
mov
xchg
xchg
faddp
jns
push
push
dec
jge
dec
or
shrl
mov
repnz
mov
lock
popf
lock
cwtl
neg
mov
adc
mov
aad
or
test
dec
fldt
fldl
nop
clc
ss
bound
fnstcw
stc
das
insl
ret
push
outsb
xor
movsb
test
dec
in
aad
xor
repnz
inc
jb
cmp
mov
je
pusha
aaa
xchg
and
ja
mov
jecxz
mov
sub
adc
ds
imul
insl
jle
ffreep
xor
mov
out
dec
gs
into
push
add
fidivs
sub
sub
cmp
dec
add
out
test
rclb
idiv
cmp
enter
repz
sub
cltd
fwait
inc
loop
dec
loopne
dec
mov
mov
inc
cwtl
mov
cmc
shrl
daa
add
shll
cmp
jp
jnp
ret
sbb
loopne
jns
mov
sub
pop
jae
mov
roll
and
push
gs
inc
jnp
jbe
jmp
push
pop
cmpsb
popf
pop
mov
push
mov
imul
and
lahf
in
xchg
adc
push
pop
push
push
les
jmp
sub
mov
add
cli
sub
out
adc
fs
bswap
popl
push
mov
fimuls
push
stos
rclb
ljmp
cli
pop
mov
jo
cmp
subl
inc
arpl
mov
outsl
adc
adc
rorl
cmp
fcmovu
adc
lods
mov
fnsave
pop
adc
push
sbb
push
jne
or
shr
xchg
mov
stc
push
mov
mov
dec
arpl
pop
or
fwait
sub
stc
mov
xchg
xor
cmpsb
and
push
enter
into
jo
std
mov
inc
inc
add
adc
loope
push
mov
and
sti
push
add
mov
push
neg
int3
stos
adc
das
and
sbb
xchg
and
pop
aam
scas
pop
adc
xor
jnp
lahf
fiadds
outsl
inc
sbb
loopne
addr16
mov
mov
sub
add
les
cmc
cmp
js
push
pop
into
jl
in
jns
dec
xchg
add
push
dec
fnstcw
mov
xchg
aaa
icebp
fcoms
decl
push
imull
or
mov
adc
stos
push
imul
and
fstl
push
adc
push
mov
das
xor
imul
sub
pushl
cmc
iret
mov
mov
sub
stos
lods
jnp
xor
xchg
popa
mov
lahf
lods
mov
jmp
mov
xor
adc
pop
and
loopne
out
inc
jp
sbb
into
fadds
mov
sub
xor
mov
lret
pushf
mov
fdivr
mov
repnz
adc
sti
inc
mov
jl
push
cwtl
movhps
popf
and
sub
push
mov
aaa
adc
jmp
pop
fxch
shrl
push
xor
jge,pn
je
and
cli
dec
sahf
cmp
inc
clc
out
xor
jmp
xor
fisubl
xchg
adc
imul
xchg
aam
xor
lods
fcompl
mov
push
and
pop
jp
jns
mov
call
out
jecxz
inc
jns
ja
es
jp,pn
pushf
and
inc
mov
icebp
mov
xor
aas
pop
fwait
mov
push
inc
leave
mov
or
dec
pop
pusha
push
jnp
xor
stc
rclb
adc
rcrl
sbb
bound
fcoms
rclb
scas
fmulp
mov
xor
loope
je
repnz
loopne
iret
addr16
repnz
inc
jecxz
mov
dec
xchg
loopne
cmp
and
xchg
mov
adc
js
aam
jnp
scas
mov
or
and
mov
int
add
push
fidivl
mov
int3
adc
inc
mov
cs
stos
das
mov
cmpsl
mov
and
pop
xchg
push
sbb
popl
clts
bound
inc
jl
add
je
repz
addb
divb
mov
sub
lods
xchg
jle
and
lret
ss
pop
icebp
mov
xchg
mov
repnz
mov
out
push
and
mov
mov
sbb
inc
repz
mov
outsb
xchg
fwait
aam
stos
gs
xor
cmc
xor
lods
cmp
mov
jle
out
ds
nop
ss
jl
in
insl
dec
lea
fucomp
int
cmp
jle
dec
and
lret
addr16
mov
cmp
je
outsl
adc
orl
ljmp
sub
cmpsl
das
fcoms
jl
push
sub
loopne
sub
push
mov
enter
in
xor
leave
push
lods
xor
call
outsb
shl
mov
dec
lret
sbb
jg
ljmp
insb
pop
js
imul
jb
jp
or
adc
jnp
jb
test
lock
stc
adc
clc
arpl
mov
call
cli
cmp
or
cmpsl
mov
sbb
xchg
jb
dec
loop
adc
enter
mov
inc
push
push
shlb
aas
inc
pushf
std
shl
bound
add
mov
call
fldcw
sbb
sbb
fildl
and
mov
push
hlt
sbb
xlat
add
sub
dec
or
dec
data16
mov
lcall
fs
repnz
clc
sub
insb
test
hlt
inc
cmc
xlat
notl
fmuls
sub
inc
mov
in
push
scas
xor
clc
push
test
ret
fstpl
jg
push
addr16
jge
jecxz
ljmp
and
push
mov
cmp
hlt
mov
arpl
inc
popl
jno
lds
cli
xchg
fldl
imul
cmc
xchg
push
pop
xor
js
push
push
xchg
ss
fwait
pop
sarb
mov
sbb
in
cmpsl
scas
mov
insl
adc
cmc
jl
mov
popf
sub
jbe
das
ret
add
mov
ss
pop
push
jp
imul
stc
inc
roll
pop
nop
lahf
dec
les
pop
test
jnp
icebp
push
cmp
sahf
xrelease
loope
xor
aaa
pushf
pushf
add
cvtps2pd
jg
jbe
clc
arpl
cmc
in
mov
adc
je
popa
push
cmp
mov
addr16
inc
lahf
pushf
sbb
cld
loopne
fidivrs
loop
cwtl
fnstsw
dec
mov
andl
pop
xor
jbe,pn
loope
jbe
adc
cld
lahf
cmp
sub
aas
xor
repnz
cmp
cmp
xor
lahf
repz
and
mov
push
mov
xor
pop
mov
mov
pop
lret
clc
and
pop
jg
clc
lcall
or
jne
stos
frstor
xlat
pop
repnz
push
cmpsl
sub
std
jle
lods
xchg
and
cmp
lods
mov
dec
fistps
mov
xor
inc
pop
loop
mov
jo
imul
push
stos
mov
sub
mov
xchg
leave
fs
mov
xor
fcoms
push
lahf
sbbb
imul
ja
jb
shrb
dec
mov
out
mov
lods
test
shl
jae
imul
lods
leave
shlb
aad
adc
dec
ror
push
popf
es
call
mov
pop
les
inc
lock
mov
xlat
lret
mov
inc
push
addr16
cmp
fbld
mov
mov
rclb
mov
push
fwait
hlt
icebp
imul
repz
popf
rcl
mov
jb
dec
push
lahf
fcomps
xchg
pop
and
into
ret
sbb
adc
inc
into
hlt
sub
call
mov
cld
xchg
dec
fdivp
and
cmp
pushf
stc
sbb
add
xor
pop
sbb
push
xor
fidivrl
loopne
aad
ret
pop
popf
out
ret
notl
pop
jmp
sar
or
cmp
jle
mov
sbb
push
fldl
sbb
add
dec
cli
jbe
into
adc
shrb
jnp
jmp
push
test
sub
incb
xchg
pop
add
lods
into
mov
jno
call
or
push
aaa
fdiv
jo
fiaddl
cmp
in
pop
lods
mov
fsts
loopne
dec
sbb
sbb
push
xlat
mov
pop
xor
sub
in
cld
sub
fimull
pop
out
mov
incl
jo
push
loopne
pop
pop
stc
mov
pop
out
insb
adc
outsl
lock
sub
repz
mov
jp
pop
popl
mov
jecxz
xchg
push
flds
and
pusha
or
jo
cwtl
push
loopne
mov
pusha
in
jno
mov
xchg
aas
sbb
inc
stos
fdivrs
cmp
in
add
push
jo
iret
sbb
pop
xor
sub
hlt
xchg
sbb
loope
add
xchg
xchg
push
ds
pop
pop
mov
inc
jbe
imul
andb
arpl
dec
loope
int3
mov
cmp
test
lret
adcb
pop
inc
subb
sub
lock
xchg
cmp
adc
fldt
jae
xor
xor
xchg
mov
sbb
lea
jno
pop
mov
mov
mov
xor
xor
add
cmc
mov
inc
pop
fxch
jno
inc
jge
sahf
mov
pop
pop
push
pop
add
lds
gs
sub
add
add
cltd
pop
push
ret
test
mov
mov
pop
sbb
xchg
cmp
addr16
sti
das
jo
and
out
lcall
mov
mov
iret
cs
clc
cwtl
mov
cmpsb
aam
roll
adc
xchg
mov
idiv
ds
icebp
enter
jbe
adc
test
notl
mov
push
xchg
arpl
repz
in
push
pop
aas
push
xchg
pop
jns
sbb
sub
out
push
ds
pop
xchg
xor
ficoms
pop
fcompl
jp
and
jge
mov
add
cli
pop
and
push
jmp
xchg
fdivrs
jnp
mov
cmp
dec
out
push
int3
les
or
iret
mov
aas
subl
push
cltd
push
jge
sbb
les
ficoms
or
lret
fildll
xor
sbb
test
inc
cld
jl
fisttpl
push
jmp
inc
mov
aam
mov
das
int3
out
movsl
dec
enter
in
cmp
xor
in
sti
addr16
ds
iret
aas
rorb
push
mov
sub
adcb
mov
test
or
into
ljmp
shl
lret
push
jne
mov
stos
cmp
pop
mov
jno
mov
pop
add
pop
sahf
in
mov
lahf
gs
loope
jo
jl
rcrb
sub
fdivrs
out
inc
call
out
mov
notl
movl
aad
jl
sahf
sub
xor
cmp
cmp
mov
cwtl
cmp
jg
sbb
fcompl
jae
fldt
and
dec
jmp
dec
lods
sub
bound
clc
in
cmpsl
lods
xlat
divl
repz
jb
xor
jbe
mov
sub
mov
mov
inc
xor
mov
pushf
xchg
leave
mov
gs
cmp
cltd
inc
outsb
jecxz
jnp
mov
jno
arpl
inc
aam
push
sub
jnp
in
add
lret
sahf
lods
xlat
add
insl
cltd
jle
je
xchg
sub
inc
daa
add
sub
cmp
mov
mov
mov
cmpsl
lret
push
insb
or
push
push
inc
jle
fdiv
out
stos
inc
jp
add
adcl
and
jle
into
bnd
xchg
cmp
jle
cmpsl
lcall
mov
jo
xchg
scas
push
into
rcll
fucom
loope
in
and
add
push
xor
lea
fstpl
lods
js
and
in
in
push
xchg
push
add
pop
gs
popa
mov
arpl
sbb
insl
mov
sbb
inc
sub
xor
xorb
mulb
dec
xlat
testb
cmp
sbb
loopne
lcall
mov
adcb
out
hlt
test
insl
xorl
rcrl
inc
dec
repz
andb
sub
cltd
xor
cmc
push
leave
mov
insl
and
push
je
adc
int
xchg
jbe
pop
fmulp
or
pop
arpl
cmpsb
push
in
cltd
repz
repnz
inc
aad
add
inc
bnd
movsb
imul
mov
push
cwtl
fdivl
stos
fs
inc
idivl
stos
js
pop
cltd
xorb
in
lret
push
sub
or
or
fs
sbbl
mov
adc
mov
cmc
js
sub
dec
cs
add
sub
mov
fdivrs
fcmovbe
outsl
cwtl
jnp
jnp
sti
xchg
lds
pop
call
push
jnp
dec
lock
push
adc
jp
sbb
mov
leave
es
sub
mov
jg
cmc
fcom
dec
add
jnp
int
aas
loop
mov
xchg
or
loope
fdivl
pop
and
scas
inc
mov
cmpsb
cltd
cmp
lahf
or
add
aad
cwtl
push
xor
popw
icebp
aad
push
or
mov
xchg
pop
jo
jge
and
arpl
inc
jno
sub
xor
xor
mov
sub
fxam
daa
fistpll
mov
inc
or
mov
sbb
lahf
and
xchg
into
imul
mov
push
fimuls
adc
push
aas
shll
sbb
outsl
repz
cmpsl
cmc
mov
jb
dec
pop
nop
pop
pop
rolb
dec
into
movsl
pop
cmp
adc
iret
dec
pop
pop
fldl
stos
or
fwait
sbb
mov
inc
pop
out
pop
or
add
and
stos
adcl
adc
lahf
pop
out
into
ljmp
pop
cld
push
lret
mov
push
movsl
cld
gs
in
sbb
lea
mov
mov
roll
sbb
inc
cwtl
or
mov
out
sarl
in
gs
in
test
test
pop
cmp
jle
mov
ret
mov
push
xchg
outsb
adc
push
cmp
dec
out
addl
test
pop
push
int
jle
add
dec
aam
dec
cli
jno
inc
outsb
or
pop
push
mov
pop
xchg
or
jns
std
sbb
jnp
icebp
xchg
xor
loope
mov
adc
and
push
cmpsl
mov
mov
movsb
arpl
test
push
fsubl
in
sbb
stos
xchg
inc
pop
push
inc
sarl
push
jg
incb
dec
rcll
iret
ret
jne
rolb
dec
jge
xor
addl
xchg
jg
and
int
xchg
xor
fiadds
mov
and
fldt
cmp
dec
and
sbb
xor
push
sbb
add
xlat
xchg
sub
adcl
hlt
mov
addr16
push
dec
out
hlt
pushf
loopne
cmp
add
sbb
ficoml
push
lahf
insb
out
push
jge
repnz
mov
cld
cmpsl
add
gs
pop
cmp
or
jge
loopne
cmpsb
out
lahf
sub
xchg
jecxz
inc
mov
and
lcall
outsb
xchg
sti
inc
sahf
jbe
cmpps
ljmp
icebp
sub
aad
jge
call
jl
and
arpl
mov
lahf
inc
and
in
push
xor
xchg
call
int3
je
leave
add
inc
cmp
enter
movsl
ret
dec
mov
mov
mov
mov
lret
push
out
idivl
xchg
repz
xchg
mov
adc
dec
outsb
push
add
mov
sub
jnp
pop
xchg
jo
cmp
xchg
xchg
cmpsb
and
pop
push
pop
mov
push
cmp
out
xor
xchg
fcmovnbe
repnz
or
push
and
jbe
jae
fildl
shll
gs
gs
loope
test
push
sub
sbb
cs
pop
roll
sahf
jmp
sbb
and
and
sbb
rorb
push
xchg
mov
clc
inc
jnp
mov
sahf
int
and
jbe
or
and
lret
mov
pop
stos
in
mov
sbb
push
add
adc
leave
dec
jbe
adc
jle
push
and
dec
in
cmp
add
in
test
jmp
cltd
and
pop
mov
rcr
je
mov
lcall
xor
repz
inc
xchg
cli
jns
addr16
inc
popa
and
sahf
pop
dec
mov
mov
clc
dec
mov
sub
cmpsl
test
xor
insl
mov
dec
js
ljmp
xchg
scas
xchg
cli
xchg
pop
or
pushf
mov
into
dec
mov
ljmp
mov
lcall
dec
xor
negb
aam
int
mov
sbb
sbb
mov
jp
add
xchg
jecxz
or
fstps
stos
fistpll
out
add
loop
ret
add
insl
push
jle
push
sub
fstpt
test
push
and
dec
lret
sbb
inc
cmp
movsb
xchg
mov
loop
cwtl
add
mov
jp
xchg
ficompl
sbb
add
enter
xlat
sbb
push
in
rolb
addr16
add
xor
hlt
push
or
adc
stos
test
fdivr
pushf
add
push
xchg
ret
in
aad
cld
addr16
loope
imul
adc
scas
jecxz
and
gs
sub
and
cmpsb
or
popf
pop
rclb
push
das
or
insb
inc
cvtps2pi
mov
out
out
mov
leave
inc
xchg
dec
js
or
test
xchg
fwait
cmpsl
out
outsb
mov
js
cmp
repnz
and
pop
or
div
and
push
push
insb
mov
mov
mov
inc
add
loopne
push
sub
adc
jno
int
scas
inc
add
add
adc
outsb
shlb
popa
movsb
mov
jbe
stos
cmc
mov
sbb
imul
sub
pop
or
inc
ret
addr16
jae
sub
rcrl
js
leave
jl
mov
scas
data16
jle
jl
movsb
dec
mov
ficomps
arpl
push
ret
mov
or
jecxz
cmp
sbb
push
outsb
lods
je
jno
push
mov
out
mov
andb
mov
je
or
insl
loop
jo
jns
mov
xlat
push
mov
ror
jbe
push
adc
pop
nop
or
popa
sub
fucomip
push
jb
ret
aad
jae
fldt
cmp
mov
out
into
dec
jg
and
inc
sbb
xor
pop
idivl
mov
push
stos
pop
fwait
cmp
xchg
aad
jnp
insl
mov
jae
sub
es
mov
push
xor
jae
adc
inc
jns
aad
out
xchg
add
je
stos
mov
loop
and
jge
adc
or
mov
xor
add
movsb
ljmp
cli
aaa
mov
out
sub
out
or
ffree
lods
ds
or
enter
xchg
or
stc
and
pusha
adc
inc
fwait
mulb
lret
pusha
fwait
jnp
pop
scas
iret
mov
dec
add
js
add
imulb
push
call
sbb
scas
mov
or
lret
jge
cli
popf
ja
inc
stos
popf
aas
jp
mov
and
ja
movsl
push
fildll
rorb
inc
lahf
loop
sti
mov
iret
fs
test
xorb
adc
jge
push
aaa
lock
cmp
sbb
inc
inc
mov
out
dec
mov
cli
push
sub
or
mov
jg
cmovb
mov
repz
jle
das
stos
add
xor
stos
push
loope
dec
cwtl
out
iret
out
adcl
fmull
lret
lahf
push
repnz
pop
pop
sarb
jnp
cltd
aam
mov
nop
add
mov
test
testb
pop
push
mov
push
aam
inc
notb
arpl
jns
je
sbb
insl
scas
xchg
adc
out
pop
mov
stc
andl
push
jno
mov
sub
pop
push
cmp
pop
loopne
mov
test
sbb
sub
mov
dec
add
and
fidivl
mov
fs
out
jbe
cli
inc
dec
cmp
mov
jge
push
pop
mov
cmp
push
mov
fdivp
ds
xor
adc
decl
mov
xchg
pop
ja
or
in
inc
pop
dec
mov
lods
sbb
cmpsb
sub
xchg
iret
jl
aad
clc
pop
jg
xor
push
lret
test
and
das
jae
sbb
pop
outsb
add
fldl
cmovnp
mov
mov
fmul
fwait
lods
xor
mov
cmp
push
xchg
cli
into
ss
or
repnz
scas
out
push
jmp
or
inc
sub
rol
pop
imul
mov
inc
jp
add
mov
imulb
rolb
bound
popa
xor
arpl
cmp
xchg
orl
gs
ret
push
aad
fiaddl
xchg
cs
movsl
or
jno
add
cmp
sbb
test
mov
es
adc
test
mov
movsl
xorb
jle
test
data16
add
popa
cli
hlt
sub
push
js
adc
ret
pop
fcompp
aas
xor
mov
sub
andb
xchg
dec
lods
cwtl
inc
addr16
xor
inc
dec
sbb
aaa
fwait
mulb
icebp
add
adc
out
adc
aad
pop
iret
imul
lea
test
fwait
mov
pop
sbb
lcall
xor
or
adc
in
xchg
mov
mov
outsl
in
dec
jle
sub
sbb
cmc
mov
jle
movsb
popa
xchg
lret
xchg
sub
jecxz
dec
pop
add
lahf
cmp
arpl
cmp
add
xlat
mov
dec
pop
lds
jo
mov
ss
push
xchg
pop
loopne
std
push
stos
cltd
in
cld
push
nop
loop
fildl
nop
cmp
shlb
fbld
push
int3
mov
pop
cmp
xchg
add
les
out
popf
or
mov
lret
mov
popf
push
sbb
jmp
jmp
lods
mov
flds
lock
dec
pop
inc
jbe
loope
sub
imul
mov
imul
xchg
xchg
sahf
push
outsl
jmp
movsb
ljmp
notb
dec
pushf
in
shr
mov
repz
lret
sbb
mov
lock
fidivrl
mov
stos
pop
ljmp
jle
xchg
in
in
int3
push
mov
xchg
xchg
mov
push
cwtl
sbb
or
push
jbe
in
loopne
aam
jb
jl
sbb
out
xchg
ret
stc
add
test
dec
sbb
mov
test
ds
fwait
jnp
mov
adc
fldenv
icebp
mov
xor
shlb
xchg
lahf
push
add
dec
insl
inc
std
push
sub
push
inc
mov
jne
push
into
fs
loope
test
fsubl
sbb
sbb
cmpsb
fnstsw
push
add
or
adc
stos
xor
push
or
cli
sti
aad
test
popf
cwtl
mov
pop
pop
lods
int3
or
xor
jp
dec
xchg
popf
jecxz
iret
or
jns
push
sahf
inc
and
xchg
cmp
pop
icebp
fldenv
ret
repz
enter
mov
push
jg
lret
pop
sbbb
loope
dec
adc
cmc
outsb
in
lock
ds
cltd
cmp
mov
pop
sub
pop
ljmp
mov
jmp
roll
insl
movsl
invd
cs
shl
loop
shrb
xchg
or
adc
jne
or
jb
pop
inc
inc
push
loopne
lret
aam
mov
pop
mov
sbb
dec
inc
pop
xchg
or
mov
add
cmpsl
fstl
iret
imul
fldcw
repnz
test
jns
das
mov
xor
cmp
arpl
jmp
aaa
imul
xchg
xchg
jp
rorb
dec
lcall
push
pop
or
dec
xor
fisttps
vphaddbw
xchg
cmp
enter
into
nop
mov
negl
push
dec
data16
in
test
lret
or
dec
lods
loop
xchg
push
xchg
aad
cmp
outsl
das
xchg
je
test
cmp
or
jbe
dec
adc
jnp
pop
stos
pushf
lods
iret
jns
scas
inc
sub
mov
add
sub
cs
inc
aaa
pop
xchg
mov
push
mov
fisttps
dec
sbb
addb
pop
cwtl
lret
mov
jmp
in
shll
int3
xor
cmp
sub
and
pop
add
pop
mov
negb
cmpsb
test
mov
cmp
mov
insl
movsl
filds
xor
ja
jbe
or
mull
pop
fwait
dec
dec
jnp
xchg
fistps
pop
mov
push
data16
loope
cli
ja
mov
jbe
dec
xchg
je
mov
movsl
adc
or
inc
movsb
mov
cmp
jle
jle
fcompl
testl
cmp
adc
push
dec
push
stos
lea
rorl
jecxz
test
jns
xchg
fcoml
mov
leave
lcall
test
and
inc
pop
daa
test
cld
frstpm(287
mov
test
dec
push
add
mov
cmpsb
mov
cmp
adc
loop
pop
js
or
pop
xchg
and
push
cmp
gs
or
sub
cmp
outsl
mov
mov
sbb
dec
xor
or
jg
sub
sbb
xchg
xchg
cmc
pop
pop
jno
inc
jecxz
mov
scas
ret
xor
out
jne
jo
mov
testl
jb
enter
mov
popf
adc
add
cwtl
cmp
mov
movsb
addr16
push
mov
cmp
clc
negl
mov
xchg
cltd
loop
cmpb
shl
enterw
jmp
in
aam
aad
push
sahf
xchg
mov
xchg
or
adc
lods
insb
xchg
sahf
xchg
repnz
lods
jns
fidivrl
mov
cmp
xor
pop
jge
scas
mov
pusha
xor
dec
call
addr16
xchg
adc
ret
jge
or
in
iret
ret
inc
cmp
inc
sub
jg
jge
mov
mov
sub
jecxz
fwait
iret
pop
pop
dec
out
or
out
mov
pop
cmp
testl
mov
push
repz
fstl
cld
cmp
test
jle
ljmp
jle
pop
mov
inc
cli
mov
jmp
cltd
lods
daa
push
adc
fldt
mov
loopne
and
jo
inc
cmp
sub
popf
xchg
iret
adcb
lret
fisubs
in
stos
jno
lods
shrl
xchg
mov
xor
punpcklbw
cltd
xchg
push
into
call
scas
pop
mov
push
es
inc
ret
xor
dec
sub
stos
outsl
fisubrs
int
and
ret
ret
addr16
sub
mov
adc
jp
inc
out
outsl
stos
pop
or
lea
jmp
sub
outsl
or
and
mov
or
leave
aam
fdivp
jbe
loope
rcr
dec
clc
add
out
pcmpgtb
pusha
icebp
aam
aad
pop
mov
xor
pushl
cltd
icebp
fisubrl
je
sar
lahf
jl
mov
jge
or
movsl
push
xor
clc
outsb
xchg
cmp
clc
repnz
fildll
push
add
dec
ret
add
and
mov
fstl
sub
mov
dec
ret
sti
jge
inc
xchg
rolb
lret
mov
jge
dec
push
adc
je
mov
mov
jb
out
inc
hlt
pop
sbb
mov
mov
xor
insl
jp
int3
push
fwait
jp
movsl
inc
std
out
push
fcomp
push
xchg
sub
cwtl
sbb
xchg
mov
fnsave
fisubl
push
jge
rcrb
inc
adc
add
out
ss
mov
test
cmp
lock
imul
sahf
imul
in
dec
and
ret
pop
rcll
addl
cmp
xchg
iret
jle
sbb
jg
insl
mov
subb
mov
nop
mov
mov
xor
mov
and
sahf
push
out
imul
sub
inc
int
mov
pop
xchg
je,pt
aaa
inc
stos
sub
cmpsb
enter
pusha
lock
jns
ljmp
xchg
push
repnz
dec
sub
loope
mov
cltd
ss
rolb
imul
mov
cmp
pop
xor
aad
mov
dec
nop
les
xchg
push
enter
inc
aad
and
fldl
lods
ja
fcoms
xchg
xor
mov
test
mov
int3
jecxz
add
push
cs
adc
pop
test
mov
mov
adc
ficomps
push
hlt
cmp
aam
pop
bound
pop
stos
add
shl
cmp
jle
jg
xchg
mov
mov
mov
mov
jp
scas
push
leave
xlat
enter
aaa
xlat
mov
mov
push
xchg
sbb
pop
and
adc
pushf
je
mov
cmp
les
cmp
imul
aad
cmp
push
popa
mov
pop
sahf
ja
xor
les
fs
cmp
and
xor
mov
inc
lcall
lcall
ss
adc
push
push
sub
xor
or
sub
mov
and
shrl
xchg
jecxz
in
psubsb
pusha
lds
inc
jecxz
imul
and
xchg
mov
sbb
or
movsb
cmp
push
sub
inc
xchg
inc
iret
jnp
je
stc
push
mov
mov
mov
cmpb
and
arpl
ret
mov
lods
jp
adc
dec
mov
and
call
mov
lds
pop
xchg
xor
cmp
rcll
pop
cmp
das
ret
or
inc
mov
enter
and
and
sub
push
fcomip
mov
pop
ljmp
fwait
xchg
adc
push
pop
jg
inc
jl
pop
inc
push
leave
cmc
gs
xorb
pop
and
xchg
sub
push
inc
bound
out
xor
add
push
push
movsl
cltd
mov
and
mov
dec
das
xor
dec
movsl
icebp
sbbl
pop
pop
or
cs
lea
fiaddl
pop
cmc
enter
xor
jecxz
fisubs
cmp
je
mov
xchg
cmp
sub
or
inc
aad
mov
sub
mov
add
rclb
dec
xchg
cltd
movsl
test
or
aas
sub
jp
inc
jnp
mov
adc
cmp
jp
sub
cs
add
fmull
pop
adc
out
test
inc
mov
out
sbb
rclb
mov
inc
cmp
je
xor
mov
push
inc
insb
jl
js
mov
test
inc
lock
adc
popa
sbb
movsl
iret
add
dec
xor
jecxz
enter
mov
cli
xchg
jecxz
cmpsl
dec
push
ret
int3
cwtl
pop
inc
leave
jbe
xchg
cwtl
je
jb
xor
pop
fwait
sarl
call
test
and
clc
rorb
sti
ja
pop
and
mov
js
int
outsl
mov
sub
pop
loopne
dec
insb
mov
fisubrl
inc
dec
inc
cmp
lahf
xor
roll
ret
mov
inc
lret
or
push
popw
xlat
cmp
flds
jle
cmp
mov
add
rcrl
mov
loop
jae
pop
lret
stc
rolb
ds
lods
mov
js
repz
or
mov
iret
out
fmul
pop
call
sti
jl
in
les
dec
dec
jbe
pop
jne
sbbb
mov
gs
dec
xchg
fiaddl
mov
cmpsl
sarl
insb
mov
inc
mov
inc
inc
mov
ljmp
mov
lock
sub
cmc
icebp
cmp
dec
pop
insl
test
sub
shrb
mov
jp
sbb
icebp
adc
in
push
xchg
mov
jmp
adc
cmp
and
aas
fisubl
mov
inc
in
mov
pop
xlat
push
fmuls
fs
int
cmp
ljmp
outsb
sarl
push
inc
push
scas
mov
lods
data16
testb
xadd
nop
out
mov
mov
push
mov
sub
test
rcrb
inc
add
pop
sub
icebp
bound
mov
xchg
aaa
pop
mov
addr16
ds
in
sbb
int3
jne
cli
sub
mov
dec
lods
js
mov
hlt
push
adc
fs
mov
sarb
fidivrs
cld
jg
and
repnz
ret
outsl
fdivrp
fists
aaa
adcb
xorl
lcall
mov
vpmulhuw
imul
scas
jns
mov
inc
push
push
bound
sti
inc
addl
int
cs
aad
push
xor
cld
mov
mov
test
popf
scas
fmull
pusha
adc
pop
xor
pop
iret
ljmp
stos
sub
mov
loop
shrl
clc
pop
add
mov
dec
jb
pop
cli
in
sti
inc
test
iret
and
ljmp
cmp
out
jmp
dec
shll
mov
jo
sub
sbb
iret
xlat
js
cmp
hlt
adc
xchg
or
aad
les
call
mov
imul
shl
cmp
mov
adc
xor
add
mov
loopne
std
addb
test
arpl
dec
pop
xor
aad
push
test
xorl
lcall
sbb
imul
ds
pushf
sub
fildl
xor
jmp
fiaddl
enter
lods
pop
inc
sbb
mov
push
xor
imul
sahf
sub
dec
xor
test
cmc
cld
stos
and
pop
push
and
mov
fimull
push
cs
out
jb
push
adc
bound
xor
in
push
hlt
mov
call
inc
in
test
lods
inc
mov
jmp
mov
stc
mov
inc
and
adc
or
xchg
test
mov
push
std
int3
add
addb
hlt
into
call
test
inc
es
push
pop
xchg
xchg
lods
dec
in
pop
pop
stos
into
cltd
mov
dec
add
mov
test
test
lods
fldcw
out
insb
cld
xchg
ret
jle
jnp
mov
imul
loopne
enter
push
or
jb
mov
sbb
add
or
out
std
mov
jbe
cli
inc
les
pop
push
mov
ja
dec
and
cmpsl
imul
je
test
outsb
dec
push
dec
iret
mov
gs
dec
inc
mov
xchg
mov
sub
cmp
inc
fwait
sbb
test
adc
push
nop
fsub
inc
ljmp
or
xchg
cli
test
mov
sbb
jg
fimuls
cltd
rcrb
cld
popa
fs
cmp
adc
push
fs
fistpl
jmp
sarb
imul
ljmp
lods
shlb
lods
xor
mov
scas
xchg
in
sub
cwtl
movsl
mov
inc
dec
push
xchg
mov
and
aaa
inc
mov
jmp
sbb
loop
xchg
sub
xchg
sub
xchg
sbb
or
add
xor
inc
jge
mov
lea
adc
and
mov
and
idivl
jg
ja
mov
and
push
mov
mov
pop
xlat
dec
iret
push
mov
gs
fs
jle
aas
out
mov
and
in
std
filds
jg
mov
jg
mul
jae
and
pop
imul
or
mov
repnz
mov
mov
dec
insb
cmp
push
scas
sbbl
shlb
stos
cld
xlat
pop
xchg
xchg
xlat
js
sub
adc
mov
inc
mov
ljmp
jo
fcoms
and
in
add
mov
inc
stc
mov
in
mov
jne
jecxz
xor
mov
out
pop
and
xor
sbb
xor
xlat
inc
and
xor
popa
adc
loop
xor
mov
iret
cld
ret
scas
int3
adc
mov
out
int3
sbb
xor
rorb
outsl
data16
fsubrl
xor
test
sub
jmp
mov
pop
lcall
xchg
decb
jo
test
repnz
hlt
daa
pop
clc
sub
shll
pop
add
daa
xlat
fsubrl
sahf
add
cmp
push
movsb
dec
dec
xor
addb
xchg
lds
mov
adc
pop
ss
xor
mov
stos
or
xchg
xor
cmp
div
std
fisubrl
mov
sbb
sub
pop
sbb
loope
xlat
add
push
nop
adc
cmpsl
lea
lods
mov
test
mov
adc
adc
rcl
outsb
cmpsb
jge
movsb
mov
fmuls
push
mov
dec
sbb
scas
stos
xor
cmpsl
jae
pop
add
out
clc
notb
or
scas
adc
cmp
ds
mov
fs
cmp
push
mov
add
test
mov
cwtl
xorl
hlt
cmpsl
and
pop
shll
test
lret
in
mov
and
and
popa
addb
xchg
cmp
cmp
inc
adc
loopne
jecxz
inc
cmc
je
jle
outsl
mov
lock
shrb
mov
mov
jmp
pop
add
push
outsb
movsb
add
xor
pushf
xchg
aad
sti
cmp
mov
dec
sbb
xor
into
mov
mov
arpl
gs
mov
push
push
inc
test
xchg
or
movsl
pop
cmc
or
jae
mov
pop
stos
xchg
or
daa
xchg
jg
and
xor
mov
mov
lods
scas
jecxz
into
daa
das
and
adc
cmp
xor
jb
frstor
dec
adc
mov
stos
mov
and
ljmp
dec
mov
mov
push
xchg
sbbb
repnz
xor
or
insb
xor
setge
clc
aad
pop
dec
cmp
dec
leave
mov
data16
and
inc
add
jle
xchg
ret
cmp
cmp
leave
cmp
lcall
sub
or
mov
push
lods
das
or
mov
pop
js
shr
leave
and
push
xor
mov
mov
jns
push
push
mov
ds
and
pop
jb
sub
push
cmp
call
arpl
push
pop
dec
push
in
xchg
enter
aam
cld
sbbb
out
enter
fldl
adc
xchg
cmp
daa
push
lock
sti
ds
push
aam
fldt
dec
sub
js
mov
fstpt
push
fcmovnu
sti
mov
and
sbb
push
lret
adc
fnsave
fwait
cmpb
xchg
cmp
mov
aam
xorl
pop
inc
or
cli
push
xchg
inc
cld
inc
xor
mulb
shrb
xchg
enter
sahf
sbb
xchg
mov
nop
pop
fs
jo
xorl
aad
aam
les
jecxz
sub
push
lods
pop
and
fs
mov
add
mov
xchg
cld
int
popf
jg
xchg
loop
push
ljmp
push
repz
and
or
loope
jns
jbe
push
cmp
mulb
inc
cli
std
mov
sti
push
int
bnd
sub
jmp
ljmp
adc
loop
orl
pop
js
dec
insb
fs
in
sbb
jne
xor
enter
test
push
cmp
sbb
mulb
andl
lds
xchg
adc
popa
xchg
add
loop
cli
sbb
jo
test
jns
into
xchg
push
out
jbe,pt
pusha
ljmp
jg
xchg
js
pop
out
loope
jp
pop
scas
rclb
int
dec
inc
xor
pop
je
sbb
pop
test
push
out
movsl
cli
aam
push
dec
negb
and
push
imul
repz
xor
fistps
or
pop
xchg
adc
mov
push
test
jb
ret
sbb
xor
lret
jecxz
pop
fs
mov
ror
dec
lds
in
mov
inc
jno
scas
cmpl
sbb
jp
lock
cli
sub
jb
pop
ds
cmp
out
jge
lods
pop
or
negl
mov
dec
into
and
cmc
aam
or
sbb
roll
das
xchg
mov
lds
mov
inc
mov
or
out
push
jge
popa
leave
or
mov
ror
das
ret
push
push
push
lea
es
punpckhbw
adc
repz
dec
mov
fisttpl
xchg
outsb
and
xchg
xor
call
repnz
lock
pop
lret
movsl
jo
mov
inc
mov
inc
dec
stc
pop
or
mov
inc
hlt
xchg
das
mov
add
sub
adc
aas
or
hlt
loop
stc
ret
roll
inc
test
adc
and
test
xor
pop
cmp
in
pushf
es
mov
and
test
fistpll
dec
xchg
or
aad
rcrl
push
jae
bound
in
int
popa
add
push
cmpb
adc
mov
sub
and
inc
dec
fidivrl
xor
insb
lahf
jbe
daa
mov
mov
dec
ds
adc
adc
push
and
jae
adc
jo
mov
repnz
loopne
stos
xchg
sti
pusha
mov
outsl
pop
mov
pop
mov
and
rcl
pushf
movsl
and
push
sbb
shrb
ret
jne
daa
sbb
sub
stc
les
and
pop
xor
shr
jne
and
js
rclb
xchg
lods
sub
sub
jo
or
movsb
lahf
sub
and
daa
stos
jns
pop
movsb
mov
xor
jmp
xchg
fsubrl
dec
psubusb
movsl
or
in
push
sarl
pop
mov
ret
dec
lods
loop
xor
mov
mov
mov
add
rcrl
aad
je
out
sbb
sahf
jno
push
loopne
adc
iret
xchg
into
pop
in
xchg
cmpsl
dec
lret
mov
arpl
pop
dec
jne
and
mov
sub
fildll
popl
adc
repz
adc
xchg
xchg
daa
loope
push
inc
imul
insl
mov
int3
lock
sbb
pop
xchg
jns
xchg
std
push
orl
std
xor
shl
add
sbb
dec
mov
ret
inc
xlat
mov
add
pop
fdivl
dec
rcrb
loopne
xchg
adc
sbb
stos
out
rcrb
out
push
fs
lock
jge
mov
cmpsl
clc
fisttpl
insb
or
push
cmp
add
lods
movsb
add
ja
aaa
int3
loope
sub
pop
sub
cmc
or
gs
pop
flds
mov
push
xor
pusha
xor
fucom
data16
xor
into
sbb
int3
jnp
jg
dec
push
icebp
in
pop
mov
mov
mov
inc
xor
jl
xchg
mov
insl
push
in
mov
and
leave
mov
sbb
repnz
inc
stc
pop
imul
in
sub
aaa
cli
jecxz
push
cmp
sti
inc
xor
jbe
xchg
jae
fwait
in
sub
cs
push
lods
ror
cltd
fsubrl
pop
cmp
ror
mov
sahf
or
xchg
jecxz
sub
dec
cmp
out
insb
mov
mov
push
mov
decb
fwait
and
mov
and
sub
dec
adc
push
arpl
and
fwait
and
and
leave
xor
loope
dec
std
and
sbb
jnp
aaa
sub
test
dec
pop
pusha
xor
jmp
push
fldenv
mov
lock
and
test
sbb
in
adc
bound
cmp
rol
lcall
and
cmp
mov
sub
cmc
je
or
int3
push
or
dec
inc
cmp
xchg
into
in
aam
cmp
movsb
sub
sbb
mov
ljmp
mov
xor
aaa
sub
mov
in
mov
xor
sub
pop
sbb
xchg
pushf
insb
loop
test
cld
pop
sub
fcmovnu
lods
subl
push
push
mov
test
jmp
insb
jae
push
pop
mov
adc
jo
andb
repnz
mov
lcall
inc
clc
pop
andl
xorl
inc
lods
dec
outsl
je
pushf
jmp
inc
or
jbe
mov
dec
adc
mov
pop
or
pop
cmpsl
push
clc
pushl
pop
sahf
adc
pop
pop
push
adc
flds
movsl
pop
and
mov
and
fisubrl
inc
aaa
add
and
sarl
pop
push
jb
cs
cmp
xor
sti
add
rorb
scas
mov
rcrl
loopne
sti
and
push
lock
scas
repnz
adc
dec
push
lock
or
lock
scas
jg
jl
subl
jno
or
adc
pop
dec
jmp
jne
push
dec
xchg
jnp
mov
pop
sub
xchg
xor
mulb
cltd
adc
mov
pop
shrl
push
stos
add
pop
lea
xor
movsl
sbb
add
mov
sbb
adc
pop
ret
in
jnp
in
xor
push
dec
xor
iret
xor
cli
jmp
dec
shl
hlt
and
push
inc
fdiv
mov
xlat
ret
rcrb
popa
push
mov
mov
xor
loop
or
mov
leave
aas
je
mov
out
pop
fisubrl
cmp
je
push
pop
push
dec
lret
out
mov
xor
inc
inc
fcmovnbe
pop
cmp
and
or
push
mov
filds
mov
js
mov
xchg
nop
mov
adc
jg
mov
clc
jge
mov
mov
sub
inc
push
sub
xor
insl
push
adc
pusha
scas
sub
cwtl
cli
lcall
cmp
sbb
in
push
sar
lods
subb
jp
xchg
in
dec
dec
add
movsl
xchg
dec
xor
jp
in
mov
fsubrl
sub
call
mov
scas
popa
pop
rorb
mov
fldt
mov
ljmp
jae
mov
cmp
out
push
mov
int3
jno
mov
bound
ficoms
dec
rcr
mov
neg
inc
iret
cmpsb
pop
mov
sub
jo
pop
or
dec
sub
cmp
sbb
sbbb
fcoml
xor
mov
mov
ret
imul
addr16
pusha
loop
jns
call
shlb
mov
mov
hlt
pop
mov
push
jne
addr16
sar
mov
push
push
cmp
cmp
mov
pop
sti
add
or
push
dec
aas
ja
and
out
inc
test
push
push
aas
or
mov
dec
adc
fs
mov
insl
dec
popf
sub
adc
and
dec
jge
inc
pusha
repnz
int
cli
xchg
mov
mov
pop
dec
and
sub
dec
inc
push
xor
out
in
pop
out
jae
add
in
mov
mov
mov
cs
jmp
mov
or
adc
xchg
and
movsl
pop
jl
jne
adc
sub
in
bound
aad
ss
adc
outsl
jmp
lret
add
cmp
pop
and
mov
cmpsb
mov
xchg
xchg
sbb
lret
add
push
ljmp
fxch
cmp
xor
push
mov
sub
std
inc
jl
pop
and
cltd
adc
xchg
into
xchg
fcomps
xor
int
jle
sahf
jns
and
push
mov
mov
mov
xchg
ret
lret
pop
cwtl
orb
dec
decl
aas
mov
cli
cwtl
cltd
pop
adc
imul
pop
xor
test
out
xchg
stc
clc
dec
push
out
filds
orb
mov
jb
pop
pop
shlb
mov
sbb
or
mov
lock
into
push
dec
lods
adc
leave
mov
mov
ljmp
int
test
ret
xor
adc
nop
sbb
inc
jae
inc
xor
pop
insb
sahf
outsl
mov
mov
sbb
cmpsl
out
push
mov
rorb
loopne
ret
pop
cmp
lods
xchg
mov
imul
insb
jmp
mov
insl
movsl
pushaw
rorb
cs
mov
fnstcw
nop/reserved
shlb
cli
add
aad
imul
xor
inc
adc
dec
mov
push
mov
jl
jg
mov
push
in
xchg
fistpll
outsb
aaa
or
xchg
mov
stos
imul
xor
jbe
add
bound
lea
inc
test
inc
push
pop
lods
test
jle
sbb
in
fwait
rolb
inc
ja
mov
push
pop
sarb
in
mov
dec
and
fcoml
cmp
cmp
jmp
rclb
pop
shrl
pop
stos
fs
cmpsl
dec
jg
lcall
mov
cwtl
fsubrl
pusha
stc
mov
nop
ljmp
bound
jge
or
lea
push
cvtpi2ps
ud1
and
cli
dec
clc
addr16
mov
pop
xorps
rorl
sub
push
fwait
or
lcallw
lret
mov
pushf
popa
mov
xor
orl
push
cmp
mov
mov
loop
sub
sub
xchg
push
inc
les
pusha
push
pop
and
cmc
xchg
and
icebp
out
addl
mov
xor
shrb
out
bnd
int
stos
jae
pusha
and
pop
dec
mov
loop
dec
adc
rclb
add
sub
pop
xor
shll
add
adc
std
in
hlt
data16
stos
imul
test
mov
xor
inc
sbb
push
xchg
cmp
inc
lret
mov
adc
fildll
mov
adcl
scas
mov
add
ret
jg
mov
xchg
les
aas
jbe
inc
mov
adc
xor
adc
push
test
or
popa
cmpb
shl
xchg
mov
xor
mov
xchg
adc
cmp
mov
nop
pop
xchg
shll
and
adc
sub
inc
jo
jae
adc
xor
add
push
or
pop
fcmove
in
mov
pop
dec
std
repnz
pusha
dec
xchg
push
test
scas
daa
or
lret
fildll
data16
fldenv
out
stos
imul
cmpsb
jmp
mov
adc
add
call
push
cli
sbb
sahf
jo
mov
pop
popa
loope
mov
iret
add
cmp
jnp
mov
int3
push
cwtl
leave
and
inc
or
xchg
inc
xlat
jle
lcall
in
imul
repz
data16
seta
mov
pop
adcl
roll
je
add
out
dec
lods
inc
adcb
sub
ja
mov
adc
cmp
hlt
loop
lock
sbb
lds
test
mov
insb
aaa
enter
mov
pusha
clc
cmp
push
inc
or
loope
xor
cs
es
repz
mov
mov
stc
imul
mov
arpl
test
fsts
jbe,pn
add
xlat
jo
out
cmpsl
add
stos
lahf
insl
in
xor
out
sub
movsb
popa
loopne
push
jo
xlat
iret
test
xor
call
mov
dec
lods
test
jno
and
fcmovb
mov
sbb
sub
mul
fsqrt
fadds
lahf
fwait
movsb
mov
sub
test
loope
fmul
shrl
lahf
jnp
mov
xchg
add
sbb
clc
rcll
stc
add
pop
push
jle
mov
pop
movsb
mov
out
insb
jg
movsb
mov
je
out
mov
decb
cmpsb
stos
mov
pop
adc
test
test
inc
movsb
xchg
sub
mov
or
add
shll
jl
les
xchg
stc
inc
movsl
sbb
into
mov
dec
fnsave
pop
scas
test
or
pop
mov
pop
mov
and
add
les
sbb
jl
data16
xchg
repz
xor
jge
and
int
xchg
insl
mov
and
pop
sub
push
mov
sti
jbe
dec
data16
pusha
das
lea
mov
inc
pop
mov
or
int3
push
jmp
ja
aaa
push
or
rcll
cmp
cltd
xor
or
sbb
fbstp
shll
in
loopne
lret
orb
mov
and
inc
add
mov
adc
lret
jle
bound
icebp
in
sahf
jae
ljmp
cs
cmp
imulb
js
sub
sbb
push
jne
mov
cmpb
out
lock
leave
fimuls
sbb
sub
into
sbbb
sub
lahf
mov
sbb
pop
or
jecxz
mov
lods
sbb
cmp
inc
dec
sub
mov
loope
fwait
repz
pop
jle
dec
lods
mov
dec
sbb
mov
xchg
fsubr
pop
cld
test
loopne
ss
fs
clc
mov
mov
in
int
movsl
and
lods
popf
sub
add
std
imul
js
lret
loope
loop
gs
mov
imul
cmp
in
pop
and
data16
adc
cltd
imul
popl
test
stos
mov
repnz
movsb
stos
xchg
scas
mov
jns
scas
test
push
or
aam
in
jmp
dec
negl
pushf
xchg
mov
mov
movsl
mulb
adc
out
ds
sub
es
sub
mov
mov
fidivl
cld
jmp
in
xchg
and
mov
shrb
mov
xchg
ret
mov
sti
cmp
cld
inc
arpl
icebp
jge
mov
dec
mov
push
flds
adc
or
js
add
nop
dec
js
or
ja
add
ljmp
cmp
outsl
adc
adc
mov
pusha
les
mov
jae
test
sbb
inc
jae
shlb
sbb
add
mov
gs
pop
xor
adc
push
in
aaa
ljmp
push
add
loop
inc
or
jo
inc
sub
adc
xorl
scas
movsb
movsl
subl
jns
dec
xchg
sub
clc
push
xor
iret
jne
sbb
mov
loope
inc
sarl
aam
in
cwtl
xor
inc
fbstp
adc
adc
inc
sub
push
es
adc
and
push
inc
jmp
xor
push
test
cmpl
or
aaa
sbb
test
xchg
lret
sbb
xor
pop
ljmp
das
repz
mov
mov
fimull
dec
mov
pop
pop
ja
add
scas
cmp
popa
dec
fiadds
jge
aad
push
iret
sbb
push
inc
pop
cmp
mov
jae
xchg
repnz
xchg
lahf
arpl
jnp
dec
insl
mov
mov
push
pop
and
jae
pop
ja
std
call
inc
pop
int
jge
aam
xchg
in
cltd
pushf
lret
idiv
es
dec
lret
lret
fs
or
add
dec
ljmp
mov
imul
lea
xchg
clts
arpl
add
scas
mov
pop
stc
adc
test
mov
add
pop
ss
mov
bound
mov
xor
js
pop
fs
sbb
dec
mov
push
dec
out
fisttps
sub
in
jp
jb
outsb
mov
dec
cmp
out
in
movsl
jnp
fcoms
test
jg
cmp
int3
loope
dec
xor
insl
dec
push
das
pusha
push
sub
rolb
push
mov
jno
xchg
stc
jecxz
jae
std
and
dec
push
and
sbb
sub
push
xor
decb
out
xlat
and
ljmp
push
scas
jecxz
popf
xchg
adc
push
dec
fwait
imul
ret
adc
jae
inc
push
mov
mov
mov
cmc
mov
loop
pop
mov
push
int
sub
das
inc
popa
xor
shrl
shlb
cmp
jp
jns
and
dec
xchg
insl
mov
test
clc
pop
data16
push
dec
push
fildll
mov
icebp
jge
jae
stos
fistpll
out
mov
adc
cmp
xorl
lds
mov
pusha
out
sbb
pop
idivl
sbb
fidivs
fldenv
adc
test
mov
jg
xor
ja
rolb
rolb
add
jp
test
test
dec
aaa
sub
xor
mov
les
ljmp
movsl
adc
cmpsl
into
or
lahf
or
enter
notl
xor
outsl
popa
sub
jl
push
jne
xor
cld
mov
hlt
scas
jbe
add
in
xor
in
mov
pop
pop
xchg
jp
sar
sub
mov
mov
xor
jl
lea
xchg
test
in
imul
or
xor
or
dec
mov
dec
mov
mov
mov
cs
faddl
sbb
in
xor
sbb
adc
mov
rclb
xor
xor
adcl
inc
dec
lods
loop
sub
popa
es
inc
pop
mov
sbb
ss
adc
pop
push
leave
inc
lahf
loope
sti
movsb
mov
cmp
hlt
jmp
sbb
inc
mov
push
out
mov
sub
pop
mov
or
movsl
inc
rcrl
push
fs
mov
out
pop
es
scas
push
dec
bound
imulb
stc
int3
xchg
jle
xor
sbb
fimull
xor
iret
pop
fmuls
pushf
mov
push
cwtl
or
mov
dec
fisttpll
outsb
xor
in
add
leave
imul
sbb
mov
inc
add
mov
dec
jae
dec
aas
mov
sahf
xor
test
lods
xchg
lahf
shll
in
pop
popf
jns
push
addr16
ret
test
mov
and
std
mov
out
adc
imul
jp
push
add
lods
rcr
sti
push
inc
jl
fwait
and
cwtl
out
cmp
pop
pushf
out
push
lcall
ss
stos
xchg
pop
jbe
cld
leave
inc
push
cli
mov
push
xor
sahf
lods
jle
push
dec
aad
ljmp
fdivl
fwait
test
sbb
in
push
adc
mov
movsb
and
jae
lods
cs
xor
lcall
or
call
repnz
fcomi
xor
mov
add
jp
fadd
subl
lods
jne
int
arpl
push
and
pop
stos
gs
test
sbb
fistpll
mov
cmpsl
jbe
scas
insb
test
dec
xor
pop
fstps
xor
scas
lret
addr16
mov
popa
or
add
outsl
popf
rol
sub
adc
sbb
add
inc
cmp
jae
cmp
icebp
ljmp
sub
pusha
jne
les
les
jmp
pop
stc
dec
and
das
lahf
add
aad
shll
aas
sbbb
sbb
push
add
pop
rcrb
rcrl
rolb
aam
in
test
sbb
mov
xchg
int3
push
cli
jno
mov
adcl
add
sbb
shrb
scas
xchg
mov
stos
std
fsubl
xor
iret
xor
push
mov
mov
das
xor
fcomps
stos
add
stc
imul
clc
rol
leave
mov
shrl
sbb
inc
out
and
loopne
and
push
or
aad
pop
and
mov
dec
aam
add
cmp
shrl
loope
or
and
xchg
xchg
xor
repz
mov
sbb
pushf
clc
push
data16
popf
push
xchg
add
mov
pop
comiss
stc
popf
xchg
icebp
out
nop
fdivrs
sub
in
inc
cmp
and
sub
xor
xor
lock
xor
mul
sbb
adc
sub
in
mov
cmp
cmc
dec
mov
popa
xchg
inc
shlb
xchg
xor
sbb
stos
add
jb
xorl
movsl
xchg
pop
enter
mov
sub
inc
dec
adc
adc
in
movsl
mov
incb
imul
inc
push
test
or
push
cmp
jecxz
jle
push
pusha
adc
sub
mov
mov
xor
call
mov
clc
pop
lcall
xor
push
cmp
inc
les
add
call
std
addr16
out
mov
pop
mov
xor
push
lods
icebp
lea
popa
lea
repz
xor
ja
push
inc
sub
add
pop
call
jns
sub
xor
aaa
dec
sahf
out
movsb
mov
pop
iret
daa
stos
and
ret
lods
mov
dec
pop
add
cmc
rcl
stos
push
inc
or
mov
decb
dec
mov
mov
mov
pop
push
and
in
out
cltd
jle
ljmp
jge
cmp
arpl
sbb
enter
test
or
fucomip
push
pusha
inc
repz
nop
ja
pop
lahf
inc
fstpt
cmpsb
cs
loop
fcompl
and
cmp
inc
rcrb
testl
out
clc
out
xor
or
push
je
mov
inc
call
rcr
dec
out
xchg
mov
fcompl
push
cmp
cmp
jnp
mov
into
call
ljmp
adc
add
mov
sti
jo
jae
aad
lea
push
ss
cwtl
mov
lea
or
push
mov
inc
popa
nop
test
jbe
add
jp
shrb
call
movsl
cmp
jb
lret
in
outsb
cmpsl
dec
fld
in
pop
out
push
test
insl
pop
pop
lret
cld
and
push
xor
mov
lds
nop
out
dec
cli
jae
sub
ljmp
mov
loop
or
mov
jle
testb
mov
cmc
out
fsub
sub
ret
outsl
int
mov
push
out
jo
xor
test
mov
rolb
lods
roll
in
imull
xor
sbb
add
mov
sbb
mov
mov
mov
ds
mov
xchg
iret
add
jb
pop
pop
test
pusha
decb
sbb
mov
insb
add
fwait
inc
mov
hlt
inc
popf
jo
inc
xor
sbb
flds
add
push
ficomps
daa
pusha
add
jp
fs
pop
or
in
sub
fcmovne
mov
dec
les
jnp
sbb
enterw
add
push
sub
nop
gs
sbbb
push
jl
gs
fwait
lods
inc
push
sahf
jg
lea
xor
push
out
jle
pusha
lahf
pop
andl
mov
mov
dec
pop
mov
dec
movsb
dec
lock
and
inc
notl
xchg
lea
add
cmp
cmp
push
fldcw
int3
pop
ds
xchg
and
movaps
push
shrl
push
sar
lcall
mov
dec
and
movsl
outsb
jbe
dec
popf
mov
sub
dec
inc
femms
cmp
lcall
iret
jge
push
add
sub
mov
adcb
push
pop
orl
fwait
dec
sahf
out
mov
jne
and
pop
mov
xlat
iret
dec
mov
xor
and
test
cs
mov
subl
xor
scas
push
fsubrs
xor
pop
pop
add
leave
in
mov
int3
dec
test
adc
add
popf
movsl
ds
and
scas
in
push
nop
loopne
ss
mov
and
aam
mov
test
jecxz
pop
sbb
pop
jno
imul
dec
xor
xchg
je,pn
sbb
jle
scas
sub
mov
mov
mov
and
iret
pop
push
dec
dec
push
pushf
xchg
pop
mov
pop
fistpll
jle
cmpsb
lods
push
adc
push
clc
cmp
adc
sbbb
hlt
lcall
cmp
cmp
mov
inc
mov
out
push
roll
leave
inc
cmc
mov
cwtl
cmpsb
xor
xor
inc
inc
out
ljmp
loopne
rcll
pusha
scas
add
lret
xchg
movsl
out
pusha
push
fmull
fsubp
xchg
fcompl
mov
cmc
or
test
test
inc
sbb
cwtl
xor
lea
in
ret
je
test
jl
mov
in
cmp
jp
jecxz
bound
pop
cmp
sbb
mov
cltd
shll
sub
and
mov
or
jmp
jae
lods
aad
stos
push
out
dec
mov
mov
sub
xchg
cld
int
lods
faddp
ret
pop
dec
lret
cs
dec
ja
mulb
bound
fists
mov
mov
jle
mov
fnsave
lea
ss
sbb
js
jmp
push
mov
iret
lahf
sti
and
xlat
in
mov
push
pop
ror
popa
test
insl
xor
inc
test
daa
mov
popf
scas
movsb
sarl
mov
sub
jg
xchg
xor
inc
inc
imul
inc
imul
inc
push
mov
gs
adc
sub
popa
loopne
cmpsb
pop
incl
sbb
stc
xor
outsl
pushl
adc
or
push
sbb
in
orb
out
fiadds
mov
int
add
sub
mov
inc
pop
xchg
pop
push
pop
addr16
xchg
fwait
popf
sbb
out
pop
shl
fisttpll
and
cs
mov
add
and
or
and
stos
loope
arpl
int
or
pusha
pop
pop
jo,pt
outsb
and
mov
or
dec
mov
data16
mov
out
les
xchg
adc
iret
int
and
push
mov
icebp
call
pop
adc
cld
ret
adc
addr16
pop
add
out
stos
or
dec
popf
mov
test
fldcw
push
jmp
cld
push
xlat
or
les
inc
push
cmp
dec
out
lods
fisttps
aaa
repnz
lret
scas
outsb
and
imul
xor
inc
stos
addr16
lea
cmp
inc
repnz
sub
jae
scas
mov
hlt
pop
imul
mov
cmp
mov
adc
mov
ljmp
dec
cmp
push
fidivrs
sbb
sub
mov
out
scas
mov
daa
popa
sahf
daa
jae
mov
bound
test
and
xor
in
add
outsl
out
or
jle
jno
pusha
test
cmpsl
pop
in
mov
push
jns
icebp
and
adc
arpl
ss
xor
xchg
stos
adc
arpl
je
jmp
add
xchg
xor
std
and
ficoms
mov
fsubrl
jae
xor
lods
push
jge
jbe
pop
xor
xor
mov
jge
cmp
fsubr
imul
aam
scas
push
out
out
sti
sbb
dec
inc
lcall
es
mov
sub
sarl
icebp
push
and
int3
movsl
in
fisttps
xchg
addr16
jl
adc
nop
outsb
imul
push
loop
pop
cwtl
sbb
dec
xchg
mov
fmull
push
cmp
inc
push
push
adc
stos
cmp
sbb
cmp
xor
xchg
xchg
ror
popa
pop
inc
add
subl
stos
int3
push
data16
iret
push
leave
mov
inc
ja
pop
or
js
dec
push
lods
mov
mov
andb
pop
jns
adc
aaa
jl
call
inc
and
es
lret
xor
loope
outsb
dec
fsubrl
mov
cmp
inc
sbb
sbb
mov
leave
outsl
in
roll
ret
inc
mov
fildll
das
mov
subb
pop
mov
mov
inc
dec
lods
mov
lock
push
mov
and
mov
mov
jns
bound
shrl
ljmp
lods
rcrb
sbb
int3
cmpsl
inc
sbb
std
sbb
dec
mov
or
mov
inc
pop
push
sub
std
outsl
iret
inc
and
mov
cmc
daa
xchg
stos
and
adc
std
xor
lret
sbb
jnp
mov
pop
sbb
or
movsl
cmp
pusha
cwtl
inc
cmp
je
push
xor
test
add
sub
cmp
push
xlat
push
sbb
lds
orl
icebp
scas
leave
fsubs
mov
fcoms
js
dec
cltd
in
mov
in
jbe
pop
iret
cmp
lahf
inc
push
test
add
flds
inc
fidivl
pop
mov
stc
scas
fcmove
hlt
ljmp
cmp
inc
cmp
enter
mov
ficoms
xor
test
or
mov
push
xchg
cltd
push
es
and
mov
int
shlb
outsl
enter
add
dec
iret
aas
insl
push
sub
repz
xlat
sti
es
js
jb
pop
xor
addr16
inc
and
mov
repz
mov
cmp
shll
or
adc
sub
lods
clc
pop
xchg
or
xor
int3
xor
add
std
pop
shlb
add
mov
sub
xchg
imul
jne
insb
push
fs
in
rolb
push
adc
aaa
test
mov
mov
cltd
inc
es
add
aam
cltd
mov
push
lret
and
repnz
or
sbb
xlat
or
inc
mov
cwtd
push
subb
xchg
jp
popl
outsl
push
movsb
iret
loop
push
cld
clc
bound
das
movd
ret
out
out
sub
in
dec
cmpsb
and
pop
ret
pop
out
hlt
nop
mov
inc
push
mov
mov
jns
inc
cmp
cmp
in
inc
imul
int3
popf
adc
inc
mov
ss
push
test
sbb
test
test
mov
fildl
lods
add
push
movsl
std
mov
fwait
out
orb
push
pushf
scas
sub
mov
xchg
push
or
push
fnstsw
jecxz
shll
fstpt
mov
push
push
aad
pop
pop
test
add
cmpsb
cmp
cmp
fistps
push
cli
imul
inc
rcrl
cmp
mov
pop
dec
or
inc
aad
ja
prefetch
xchg
mov
xor
dec
icebp
xor
repnz
push
lods
outsb
popf
dec
add
in
xchg
or
int3
std
xchg
mov
jg
mov
push
movsb
fidivrl
sub
or
out
jl
dec
jmp
adcl
adc
jl
insl
repz
std
push
push
insl
lcall
xchg
add
fisubs
jb
push
add
in
hlt
imul
and
lahf
imul
xchg
int3
pop
sbb
dec
adc
add
sub
outsb
dec
jmp
mov
sbb
and
idiv
cmpsb
test
mov
pushf
xchg
xchg
or
sub
jg
inc
xchg
int
pop
sub
sbb
call
test
push
sbb
shr
jb
stos
mov
ds
jp
adc
hlt
pop
test
inc
mov
shl
sahf
negb
add
xlat
add
cmp
push
movsb
sbb
popa
mov
cmpsl
jae
mov
mov
arpl
fstpt
subb
jne
sarl
pop
add
lret
xchg
add
leave
adc
stos
rcrl
sti
ljmp
loope
addr16
push
iret
shll
pop
fnstcw
aad
orl
mov
mov
lods
and
out
scas
cwtl
stc
add
ljmp
in
ljmp
cmpl
or
xorb
inc
or
fcomi
cmp
leave
push
lret
jecxz
jnp
jnp
xchg
mov
jnp
or
or
jne
lods
ret
push
pop
and
test
xor
xor
cs
cs
mov
sub
je
fwait
jns
mov
sbbb
dec
test
pop
jmp
push
push
sbb
push
daa
inc
ret
mov
into
cmp
aad
mov
pusha
fsubl
pop
pop
enter
dec
popa
mov
add
in
ja
mov
sbb
adc
shll
mov
mov
repz
add
popf
cmp
stc
aad
adc
aam
in
dec
testl
xor
add
aad
xor
jge
adc
inc
sub
rolb
dec
and
xor
pusha
jecxz
in
xor
dec
push
loope
dec
jns
js
jbe
mov
aad
push
mov
imull
mov
push
test
rcrb
fildl
xchg
das
add
xchg
sarb
adc
xchg
push
call
leave
or
jmp
add
js
hlt
fsubrl
sbb
nop
loopne
std
in
into
call
int3
fcomp
lods
mov
mov
xor
xchg
inc
ffreep
sub
incb
enter
movsb
test
xor
outsb
out
dec
cmpsb
lret
mov
mov
mov
cld
insb
mul
lods
jnp
out
mov
in
jl
push
mov
jmp
scas
mov
cmp
lahf
mov
hlt
mov
test
addr16
ja
dec
mov
push
daa
ss
shlb
shl
push
call
push
cs
std
lahf
in
imul
int
xor
outsb
stos
mov
sub
add
adc
stos
sahf
pop
mov
cs
addr16
mov
mov
push
pusha
pop
sub
mov
ret
cli
xor
sbb
xor
insb
jno
pop
loop
dec
jo
sub
mov
push
insb
mov
stos
sub
in
push
push
movsl
cmp
rclb
leave
and
mov
sub
out
xor
inc
scas
mov
lret
add
push
sub
xchg
in
mov
in
sbb
cmpsb
xor
aad
push
mov
mov
and
mov
inc
and
repnz
fdivrl
sub
fists
xchg
dec
iret
call
add
je
push
xchg
mov
sbb
loope
pusha
stos
out
adc
icebp
mov
mov
inc
pop
sbb
push
mov
sbb
mov
jo
fwait
jecxz
pop
shll
pop
pop
ss
or
daa
iret
mov
jbe
mov
and
popa
pop
fs
iret
dec
and
int
push
or
push
mov
sbb
push
jmp
daa
cmp
jo
sahf
sub
popa
in
or
dec
popf
or
mov
bound
in
push
shrl
sub
aas
and
add
ljmp
xor
jmp
dec
jno
xchg
adc
dec
and
mov
test
pusha
or
dec
mov
sbb
adc
sub
aam
and
cli
sub
je
mov
js
jno
lret
clc
dec
push
lret
outsb
pop
push
outsb
rcll
dec
inc
mov
and
pop
pop
jnp
sbb
mov
andl
xor
mov
je
insl
mov
sti
adc
dec
rol
ror
iret
andl
cmp
outsl
rcl
shll
dec
leave
mov
pop
cmp
add
movsl
rclb
fs
push
in
das
mov
sub
mov
cld
adc
cmc
sub
xchg
xlat
xchg
adc
pop
xchg
and
fnstsw
popa
xor
push
cmp
jg
pop
aad
fwait
es
shlb
add
fdivs
adc
mov
popf
jbe
sbb
ljmp
jae
cld
pop
sbb
mov
test
mov
daa
inc
popf
mov
popa
movsl
cmpps
cltd
inc
in
fdivs
fbstp
call
pop
mov
cmpsb
int3
xlat
je
mov
sahf
cmp
setp
or
aaa
in
mov
and
mov
mov
iret
int
in
scas
add
xchg
inc
and
jle
mov
xchg
pushf
test
dec
aaa
ja
aas
lret
push
mov
out
out
aad
mov
cltd
cli
jns
mov
roll
in
ret
mov
adc
fdivrs
mov
add
pop
and
adc
push
incl
mov
mov
adc
cld
stos
push
loopne
scas
ja
test
mov
rorl
jne
mov
cmp
cmp
in
sarb
fisttpll
pusha
dec
fucomip
inc
or
cmp
or
jl
pop
into
int3
mov
out
aas
stos
lea
adc
test
push
jnp
popf
inc
lock
rol
fcompl
push
push
lods
sbbb
xor
sub
sahf
or
or
test
notb
lcall
sub
xor
outsb
mov
push
jmp
xchg
push
jmp
push
dec
push
sti
fadds
mov
cmp
mov
outsb
fmul
xchg
or
push
es
cmc
cmp
bnd
mov
and
adc
dec
dec
dec
mov
sti
std
or
dec
std
aad
inc
rcr
mov
cmp
lods
xor
xor
dec
fdiv
ja
clc
xchg
clc
push
xor
loope
dec
aam
xor
shlb
jl
mov
adc
test
xchg
push
insl
popf
lock
test
jge
add
push
push
in
mov
int
adc
insl
out
cli
xchg
ret
sbb
aad
int3
int
cmp
sbb
jnp
sub
clc
cli
ljmp
push
enter
aam
mov
insb
divl
jl
movsb
loopne
cmpsl
lret
push
loop
inc
xor
icebp
movsl
or
push
cmp
sbb
sbb
pop
mov
repnz
sub
sub
loope
movsl
adcb
mov
out
fsubrl
loop
lret
jns
and
or
dec
stos
data16
xchg
incb
mov
out
add
sub
rep
mov
mov
insb
bound
cs
push
push
sbb
daa
test
hlt
inc
shlb
repnz
inc
movsb
daa
and
adc
and
mov
xchg
and
test
inc
jp
clc
roll
mov
push
fidivrs
in
adcb
mov
ret
popf
xor
sti
cmc
add
sub
scas
rcrb
dec
ds
aam
in
and
negb
lods
jne
push
xlat
xchg
push
xor
out
mov
stos
sahf
or
push
add
inc
jne
out
push
push
mov
nop
call
sbb
add
icebp
ret
mov
mov
incl
mov
or
mov
jns
jg
loop
jmp
mov
mov
cld
inc
mov
loope
clc
mov
mov
fsubrl
insl
in
adc
addr16
add
mov
in
and
push
xor
jl
and
jmp
test
insb
mov
andl
and
test
push
or
sarb
cmp
dec
adc
mov
aas
jo
mov
ds
cmp
sbb
daa
inc
cli
dec
cli
cwtl
out
and
dec
adc
mov
into
gs
mov
xlat
push
call
mov
and
orl
jns
icebp
popa
mov
sub
ja
mov
cmp
or
sbb
sbb
or
mov
ficompl
jno
or
lods
mov
mov
push
popa
jne
add
insb
jne
jle
flds
or
mov
add
outsb
enter
cmc
jecxz
lahf
push
xor
cli
cmp
loope
mov
loope
inc
icebp
gs
dec
mov
push
jmp
mov
int
xchg
les
fisubl
bound
jbe
xchg
sbb
adc
lods
ljmp
pop
sub
jmp
add
inc
sub
and
jae
adc
mov
mov
mov
sub
outsl
lret
rorl
fldcw
sub
data16
push
sub
pop
lock
xorb
subb
xor
rcr
sbb
leave
pop
jge
cwtl
pushf
fiaddl
popf
inc
jle
mov
nop
leave
push
jne
jl
sti
lea
add
fsubs
mov
dec
dec
adc
iret
mov
mov
ss
roll
imul
or
lcall
adc
or
test
clc
cmp
stos
les
stos
sbb
sbb
sbb
inc
inc
dec
iret
push
inc
xchg
adc
add
xor
out
or
add
pop
nop
stos
cmpsl
add
inc
mov
xchg
aas
mov
imul
and
jno
inc
or
sbb
jge
pop
test
aad
sbb
jg
add
push
pop
mov
out
or
cmc
jle
push
mov
addr16
jbe
or
xorb
loop,pn
cli
cmp
mov
loope
pop
pop
jno
add
mov
ss
fs
add
xchg
pop
pop
mov
add
leave
cmp
cmp
sub
das
sub
xchg
movsl
cs
and
fisttps
imul
pop
testb
sbbl
out
or
pop
cmc
sbb
xchg
xchg
test
cltd
sbb
movsb
xchg
fwait
sbb
add
loopne
roll
sub
ret
mov
adc
lods
push
or
dec
test
bound
out
mov
jbe
ret
jno
mov
outsl
or
lcall
sub
aad
arpl
sub
jne
mov
repz
pop
lret
in
lods
in
sbb
sbb
scas
lcall
sbb
adc
in
xchg
pop
dec
pop
faddl
sub
push
jge
test
mov
lahf
fldenv
cwtl
push
xor
aas
cmp
fcmovbe
mov
addb
cmpsb
mov
xchg
out
push
pop
add
fwait
cmp
out
xchg
mov
jo
nop
or
div
inc
pop
jl
mov
fisubs
xchg
and
es
mov
repnz
mov
mov
ret
push
js
mov
xchg
es
daa
fwait
lret
xor
xlat
jns
mov
setnp
jg
xor
mov
adc
inc
repz
xchg
xorl
mov
xor
and
das
call
xor
pop
stos
and
fsubs
adc
jle
lock
xor
add
in
jbe
gs
gs
js
pop
cld
lds
jle
loopne
adc
jne
cmc
dec
dec
mov
dec
movb
pop
xchg
ljmp
in
mov
pop
inc
or
cmpsl
mov
jecxz
mov
sub
mov
mov
xchg
pop
cmc
push
dec
out
xchg
lret
scas
out
insb
or
mov
or
adc
daa
pop
dec
cmp
fistpll
pop
cwtl
cltd
dec
ret
call
fidivl
hlt
cltd
popf
sbb
push
sbb
xchg
cmpb
addr16
pop
mov
outsb
sbb
daa
jns
and
movsl
enter
cmp
or
mov
push
repz
jg
out
inc
dec
rcrl
mov
inc
pop
stos
daa
inc
mov
mov
sti
cmp
addr16
scas
aaa
push
ds
addr16
xorl
xchg
add
push
mov
rcrl
xchg
sub
inc
scas
cmp
push
push
pop
sub
in
bound
out
push
sub
xlat
add
pop
xchg
je
push
xchg
insl
rolb
xor
mov
jne
sbb
psllw
popa
stos
out
inc
fldenv
xchg
imulb
xchg
sbb
mov
mov
std
imul
add
jle
mov
push
movlps
pop
imul
rcl
sub
sbb
or
fdivrs
inc
imul
lret
mov
lods
rorb
rcll
xchg
jp
fisttpl
push
pusha
jo
inc
add
jge
jne
data16
sbb
xchg
jl
int
or
dec
or
mov
frstor
lret
dec
sbb
dec
push
ja
gs
fisttps
cmpsb
stc
push
fistpl
add
int
mov
and
xchg
lret
sbb
stos
cmp
notb
jle
xchg
xor
pop
pop
lock
add
fstpt
imulb
dec
jbe
pop
addr16
sub
inc
js
mov
sbb
xchg
shlb
loope
imul
shrl
xchg
fwait
add
pop
cmp
dec
sbbb
xchg
leave
insl
mov
movsl
test
xchg
jl
popl
fbld
xor
enter
movsb
ss
pop
mov
mov
add
cmp
dec
pop
iret
insb
gs
sub
sbb
add
mov
dec
inc
sbb
sbb
adc
arpl
mov
mov
fs
push
mov
ds
mov
jne
sub
adc
xchg
pop
inc
cwtl
sbb
rorb
aad
xor
jl
test
push
lahf
data16
xor
rcrl
pop
mov
mov
jb
mov
push
pop
rcl
ja
jo
xchg
iret
stc
mov
push
aaa
cmp
cmpl
fimull
out
movsl
addb
xchg
enter
roll
jmp
cmc
xchg
pop
ds
les
scas
mov
out
andb
jbe
pushl
lock
out
mov
add
pop
push
int
cmp
scas
cs
add
jbe
mov
pop
icebp
mov
xchg
and
in
mov
nop
push
frstor
mov
lock
mov
aam
dec
pop
add
fimuls
push
jle,pn
xlat
int3
insb
mov
cwtl
loope
aad
sbb
cmc
int
mov
fbstp
cmc
stos
add
loopne
add
ljmp
pop
aas
lods
aad
mov
jge
ret
popa
mov
xor
sar
repz
xor
mov
inc
cld
and
rcrl
mov
push
int3
popa
outsl
or
test
push
pop
stos
divb
jp
add
repnz
cmpsb
sbbb
loop
movsb
out
popf
push
cmove
xchg
aam
sbb
cmc
adc
popf
int3
mov
insl
xchg
push
cld
jns
rcrb
add
cmp
dec
fcomp
cltd
push
cmpsl
adc
xchg
push
clc
dec
xor
shll
jge
jp
in
pop
mov
xchg
in
test
dec
int3
and
lods
pop
scas
rol
push
add
loop
mov
xchg
stos
jo
push
pop
icebp
push
stc
mov
neg
std
or
pop
pop
mov
ljmp
dec
subb
imul
addr16
ret
mov
in
mov
insl
mov
mov
pop
adc
xorl
xchg
xor
icebp
outsb
lea
gs
add
cs
xchg
into
add
aas
fisttpl
cmp
adc
enter
cmp
and
push
dec
jbe
testl
insb
jle
jecxz
div
mov
test
in
push
shrl
pop
lds
lds
stc
pop
add
mov
lods
stos
sbb
bound
mov
inc
or
xlat
clc
jg
mov
jmp
fdivrs
mov
les
adc
rcll
insl
sub
popa
cld
sub
insl
or
mov
addr16
adc
cmp
xor
hlt
adc
lds
pop
pop
sti
and
lahf
mov
arpl
pop
outsl
cld
repz
in
stos
fistpl
pop
jne
fiaddl
in
jbe
test
inc
outsb
xor
mov
jecxz
icebp
pop
loop
hlt
xchg
andl
es
ja
pop
insb
or
cs
orl
xor
mov
sahf
adc
sub
xchg
movsl
push
sub
aas
cmp
cmc
mov
enter
lds
pushf
pop
mov
daa
clc
mov
fisubrl
add
mov
mov
jne
add
xchg
mov
and
frstor
xor
cmp
sub
lods
sub
in
xchg
aad
or
inc
in
or
gs
ljmp
call
mov
push
jmp
cmp
scas
pop
pop
ffree
in
or
nop
xchg
xor
xor
jno
push
lcall
adc
sbb
jne
cwtl
mov
shl
call
lcall
pop
pop
mov
data16
cmpsb
dec
mov
xchg
add
dec
mov
xchg
mov
mov
mov
leavew
ss
movsb
test
mov
out
fidivs
sub
xorl
nop
ljmp
fimuls
popf
xchg
outsb
or
orb
jmp
sub
fadd
dec
pusha
enter
mov
push
lds
or
xor
sub
sub
xchg
movsl
xor
mov
pop
xchg
push
dec
jmp
cltd
xchg
stc
fsubs
and
mov
pop
sahf
movq
test
add
mov
pop
dec
aaa
push
push
mov
or
xchg
bound
sbb
negb
mov
or
daa
jnp
stos
mov
outsw
add
fimuls
adc
or
and
movb
std
test
add
sbb
cmp
daa
push
clc
mov
gs
jmp
dec
push
xchg
pop
lahf
insl
sti
out
cmp
hlt
adcb
jne
and
lds
js
jo
jp
cmp
pop
mov
out
push
test
rcrb
pushf
outsl
fdivrl
mov
mov
imul
lret
ja
mov
pop
push
cmpsl
test
daa
cli
ljmp
push
inc
nop
mov
sub
ljmp
rol
or
xor
lods
mov
cld
cmp
jmp
jbe
mov
push
outsl
mov
cmp
adc
test
inc
pusha
dec
out
repnz
inc
pusha
icebp
xchg
fistpll
jg
test
push
jne
push
es
or
enter
xchg
jbe
sub
sbb
jl
mov
aad
movsl
lock
fbld
imul
divb
inc
sub
loop
xchg
mov
push
scas
cmp
insb
pushf
cltd
adc
jns
repz
mov
jge
mov
mov
cmp
in
cmp
or
xor
dec
push
in
add
ljmp
xchg
scas
stc
push
dec
sub
test
out
dec
aam
xchg
shlb
mov
movsb
fstl
mov
mov
push
jae
out
mov
xlat
es
add
mov
stc
adc
mov
test
pop
mov
mov
sub
sbb
cmp
mov
in
rorb
mov
push
stos
ret
mov
aam
jno
jo,pt
lea
dec
out
sbb
in
mov
mov
lcall
push
mov
nop
mov
loop
push
jmp
inc
mov
lcall
popf
test
call
daa
xor
jne
sti
mov
hlt
xchg
mov
jb
nop
adc
ljmp
xor
xchg
xchg
xchg
dec
sub
add
mov
jns
test
push
movl
cmp
lods
adc
and
inc
cmpsb
xchg
dec
lcall
lods
xchg
aam
push
mov
pop
push
inc
bound
or
jns
aas
inc
pop
cwtl
xor
std
pushf
test
mov
cwtl
cli
jmp
push
and
mov
inc
enter
xchg
fimull
inc
sbb
mov
dec
in
dec
sbb
mov
outsl
iret
ljmp
gs
push
sub
or
sub
out
lods
sub
dec
and
int3
adc
jmp
dec
mov
or
cwtl
dec
insl
sbb
adcb
daa
cmp
aam
or
fidivl
movb
dec
inc
imul
ja
push
jmp
cli
jns
mov
lds
cs
xor
movsl
and
lods
push
fldt
or
fidivrl
test
fcmovnu
add
mov
mov
xor
shl
mov
dec
dec
xchg
ret
pusha
lret
fs
js
sahf
ss
inc
or
inc
inc
rcrb
or
testb
push
fsubrs
sbb
flds
add
leave
ret
jg
cltd
jns
call
stc
data16
sbb
jge
fstl
stos
mov
adc
sbb
mov
sbb
xchg
repnz
arpl
cli
sahf
jo
pop
or
jo
imul
test
jmp
leave
adcl
aam
cmpsl
stos
dec
loopne
sbb
lds
rclb
icebp
adc
mov
lock
int
jl
arpl
xchg
je
xchg
sbb
mov
sub
mov
lea
int3
dec
stos
mov
in
or
jne
xor
and
cltd
add
pop
push
jl
mov
test
imul
sahf
mov
hlt
test
jl
loop
xor
dec
jp
inc
push
mov
in
fstps
iret
repnz
sub
mov
push
push
pop
dec
mov
arpl
pop
pushl
cld
mov
adc
jns
mul
scas
repnz
xor
mov
std
adc
js
sbb
sar
faddl
addr16
orl
ret
data16
sub
lahf
ds
fsubp
push
jo
adc
sub
lock
cmp
std
push
mov
push
sti
ret
dec
subb
fimuls
and
jnp
xor
rol
call
mov
aad
arpl
xchg
pop
hlt
pusha
add
int
mov
fildll
push
xlat
and
jnp
mov
mov
cli
pop
mov
insl
sbb
adc
cmpsl
fldl
leave
test
stos
mov
xchg
test
xchg
fdivl
dec
fnsave
imul
pop
add
mov
and
mov
shr
mov
or
sub
lock
js
arpl
sarb
push
pop
pop
mov
imul
lock
lret
int3
rcll
push
xor
subl
inc
ret
jg
push
mov
mov
pop
push
cmpsl
arpl
push
sahf
stos
test
pop
imul
mov
sub
jmp
aam
add
cmc
cmp
inc
xchg
dec
sub
mov
mov
jnp
pop
mov
in
std
jb
add
inc
inc
repnz
lret
dec
cmpsb
into
inc
push
fidivrl
and
mov
or
xor
popa
mov
add
xlat
movsb
cmpb
adc
ss
in
sub
xchg
aas
push
call
sbb
jl
cli
adcb
sub
xchg
mov
shll
ds
xchg
jne
shrb
dec
jo
gs
lret
mov
int
shlb
shlb
and
lds
mov
aad
js
push
insl
jb
cmpsb
dec
imul
clc
jne
test
ret
pusha
cld
loopne
dec
push
adc
and
nop
xchg
mov
ljmp
xchg
in
jp
or
and
gs
nop
sbb
fs
stc
dec
add
and
sbb
xor
mov
jge
test
js
xchg
fwait
icebp
cmp
cmp
cmpsl
shll
cli
ss
movl
rolb
push
xor
imul
sbb
push
xor
fistpl
push
jecxz
push
pop
dec
fwait
xor
leave
cmpsl
dec
pop
fs
test
or
mov
mov
xor
sbb
xchg
mov
add
std
or
inc
mov
cli
sub
gs
mov
jp
bound
xor
movsl
stos
mov
jp
sbb
jg
push
sbb
add
clc
jge
adc
pusha
push
movsb
pop
xlat
mov
pop
outsl
push
xchg
dec
jmp
hlt
lret
lods
pushf
movsb
sbb
xor
pop
out
popa
cmpsl
into
push
or
jo
lret
adc
push
jae
jb
daa
repz
jns
lock
pop
bound
xchg
and
xor
or
pop
fisttpl
mov
pusha
clc
into
push
sub
addr16
xorl
lds
punpcklbw
leave
in
popf
out
pusha
das
add
imul
mov
pusha
sbbl
cmp
insl
dec
std
arpl
jl
xor
data16
lods
addb
rorl
cmpsl
push
inc
cmp
insb
push
sbb
sbb
nop
sarl
test
xor
cmp
fmuls
sbb
fidivs
lahf
orl
jae
xchg
mov
aaa
in
and
jle
jg
sub
popa
push
add
lahf
inc
pop
imull
das
out
popa
sti
mov
aaa
add
mov
arpl
sub
cli
out
mov
push
icebp
scas
adc
mov
push
add
stos
adc
add
aam
or
rcr
cmp
cmp
pop
cmpsb
testl
je
add
jle
jg
xchg
leave
sbb
movsl
ja
cmpsl
imul
push
sbb
mov
xchg
push
ljmp
push
repnz
xchg
mov
mov
add
mov
sbb
mov
cmp
sahf
hlt
and
fnsave
xor
cmpsb
jge
pop
orl
scas
xchg
ss
cmp
cmp
push
insl
lods
sbb
inc
out
lret
xor
in
inc
stos
sarl
mov
xchg
fwait
dec
add
cmpsb
movsb
imul
pop
add
dec
iret
sub
cmc
stos
in
pop
jns
xchg
mov
lods
out
jl
xchg
mov
mov
enter
sub
jb
mov
fs
or
and
insb
div
push
out
mov
rcrb
dec
sbb
dec
pop
out
movsl
jb
jbe
dec
mov
mov
data16
sti
iret
imul
mov
rorl
and
mov
pop
sub
mov
inc
mov
push
sbb
xchg
cmp
lcall
notl
cmp
inc
int3
outsl
xchg
loop
jne
in
movb
jbe
jnp
mov
wbinvd
hlt
in
mov
mov
jp
mov
movsl
sarb
mov
mov
test
adc
pop
add
cmpsl
test
shrb
enter
aad
iret
jo
lds
mov
mov
xchg
dec
hlt
mov
lgs
adc
enter
jl
and
icebp
mov
iret
xchg
jp
repz
pop
out
int3
mov
mov
mov
mov
xchg
mov
cld
cmp
mov
repz
imul
dec
mov
push
clc
sub
test
fcomp
mov
mov
rcr
push
push
jle
dec
insb
jp
sbb
cs
mov
stos
sarl
push
sub
cmp
jns
mov
xchg
stos
dec
pop
mov
clc
xor
push
mov
in
xchg
es
xor
xchg
xchg
dec
cmpsl
jle
inc
popa
xchg
push
dec
inc
scas
push
mov
repz
sarl
fistl
add
out
test
gs
mov
jno
pop
mov
sub
xor
push
add
push
aad
jl
scas
fmul
in
add
xor
pop
and
add
and
mov
lds
push
sub
lea
cmp
inc
dec
xor
or
es
or
push
lods
or
scas
sbb
xchg
outsl
mov
xchg
lahf
rolb
xor
test
insl
adc
inc
and
scas
int
outsl
mov
adc
sub
sub
sub
push
cmp
fadds
faddp
dec
sbbl
fldcw
or
cmpsb
mov
pop
jae
ret
out
jnp
dec
and
call
andl
sub
int3
jo
stos
rorb
popa
mov
xor
mov
or
arpl
popa
or
test
jae
cmp
insl
mov
mov
aas
jne
fistps
xor
inc
jmp
pop
rolb
imul
in
and
jo
dec
ss
sahf
add
pushf
lea
popa
sbb
shr
adc
dec
cld
into
imul
pop
and
sbb
or
mov
xchg
jb
xor
sub
repz
inc
test
je
in
roll
mov
lods
pop
repz
lock
popf
pop
in
repnz
rcll
jge
jb
jb
and
stc
dec
dec
push
fisttpll
in
mov
cmp
jge
cmp
repnz
movsb
test
call
cmpsb
inc
mov
shll
rcr
mov
adc
mov
les
jp
xor
lds
bound
jb
jmp
ljmp
dec
mov
push
or
mov
outsl
in
jmp
pop
int3
stos
mov
into
push
jnp
mov
psubq
add
mov
into
sbb
clc
test
mov
jl
push
in
cli
aad
mov
mov
lret
out
pop
or
cmp
pop
push
add
mov
mov
pop
rcrb
outsb
pop
popf
push
je
adc
aas
pop
xchg
bound
test
insb
cli
or
mov
mov
in
ja
mov
clc
cmp
sub
ret
sub
adc
roll
gs
les
sub
xor
jbe
cwtl
push
xchg
aaa
mov
sti
mov
pop
adc
imulb
pusha
add
sub
mov
cmp
mov
and
fs
lret
scas
xor
loopne
cwtl
enter
and
inc
test
ja
push
dec
push
jmp
inc
mov
fisubrs
mov
sub
faddl
cmp
hlt
sti
aas
insb
sbb
adc
sub
push
add
inc
in
jge
push
add
lret
test
xchg
mov
xor
fistl
adc
movl
lret
xchg
stos
test
dec
push
orl
cmpb
fdivl
cmp
ficompl
sbb
inc
mov
jl
js
push
dec
add
shl
hlt
nop
mov
mov
enter
jne,pn
lretw
jecxz
loopne
xchg
xlat
sbb
dec
lret
popa
xchg
mov
jp
mov
add
test
add
pop
add
jnp
adcb
and
lahf
pop
jnp
cmp
cmpsb
stos
cmpsl
sbb
in
movsb
mov
inc
mov
xchg
push
pop
jb
add
or
fidivl
out
stc
mov
push
sahf
dec
and
call
push
push
cmp
insb
xor
adc
imul
lahf
maskmovq
negl
call
and
inc
loop
addl
repz
fildl
jo
add
or
outsb
stc
jle
fldenv
xchg
cmp
invd
pop
cwtl
test
mov
pushf
add
loope
sub
scas
inc
xchg
stos
jg
test
pop
cvtdq2ps
add
cmp
lock
cli
jno
mov
aas
std
outsl
push
incl
loopne
mov
call
pop
jb
and
and
adc
lods
imul
sbb
pop
mov
or
loopne
lahf
popf
std
adc
fnstsw
xchg
push
in
vpaddw
or
repnz
mov
in
push
mov
das
es
test
decl
repnz
nop
daa
mov
mov
pushf
lock
mov
in
xlat
mov
dec
aam
roll
adc
scas
cs
js
inc
nop
cmp
roll
pop
xchg
xor
mov
cmp
movsb
xchg
pop
push
in
dec
sbb
xchg
es
inc
add
aad
cmc
enter
jmp
sarl
sub
mov
mov
pcmpeqb
fbstp
push
cmpsl
negb
lock
dec
js
mov
clc
int
loopne
push
addb
mov
lahf
sahf
rorl
into
or
xchg
dec
cmp
lea
jne
adc
loope
jo
dec
sbb
jle
mov
scas
xor
cwtl
xor
inc
jg
xchg
mov
je
xchg
jno
xchg
or
outsb
es
ss
pop
mov
pop
sub
xchg
add
pop
lahf
sbb
mov
bound
sbb
ss
inc
adc
xor
or
xchg
mov
sti
sub
ja
xchg
es
mov
mov
jae
rolb
enter
and
sub
pop
sti
jmp
popf
dec
cs
ljmp
xchg
xchg
mov
xor
xchg
and
push
lds
jg
subb
mull
cmpsl
jae
push
dec
mov
in
cs
imull
xor
shlb
adc
and
sub
adc
lahf
push
jnp
jg
or
add
mov
clc
fbstp
aas
cld
cmp
sub
out
mov
sarl
ret
pushf
mov
push
mov
fiaddl
hlt
icebp
push
jmp
pop
push
movb
loopne
pushf
in
xor
mov
pop
in
xor
inc
in
pop
cmpsb
cltd
cmpl
xchg
fsub
xor
mov
pop
add
sub
sub
in
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
les
xchg
adc
pop
gs
dec
mov
sbb
test
mov
sbb
fdivl
mov
jl
push
cltd
lahf
sbb
add
ss
adc
mov
outsl
scas
scas
icebp
add
or
lret
call
je
test
mov
mov
pop
in
pop
rcll
lret
cmpsb
push
aad
fcmovu
xchg
shlb
shrl
xor
mov
iret
sahf
xor
sahf
pushf
rcl
xor
cmpsb
jge
out
or
push
fcompl
jg
js
scas
mov
xor
mov
rclb
cmpsb
cmpsb
int
shrl
div
jne
push
dec
lcall
push
dec
int
or
flds
mov
stc
mov
ret
xchg
subb
and
pusha
mov
stos
divb
mov
xchg
cmc
loope
xchg
jl
sub
sti
adc
cmp
ret
push
lods
sbb
ret
pop
cmpsl
push
insl
inc
outsb
push
lret
mov
mov
adc
mov
inc
lea
xchg
inc
push
jge
cmpsb
stos
std
sub
sbb
roll
lock
inc
outsb
pop
out
pop
fnstenv
test
or
test
xor
pop
in
xor
pop
push
rol
push
pop
fidivl
int
adc
xchg
inc
nop
and
or
push
repnz
icebp
jp
sar
adc
outsl
out
xchg
leave
xlat
or
insl
sti
das
cmp
or
ja
mov
push
push
test
push
daa
clc
adc
lock
jnp
mulb
sub
adc
add
add
fsts
push
je
or
xchg
or
test
out
or
loopne
rcrb
pop
cmp
shrb
push
mov
xchg
call
jns
push
dec
push
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
mov
