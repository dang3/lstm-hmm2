sbb
add
mov
int
push
xchg
mov
cli
stc
mov
and
push
pop
sarb
jmp
lret
xchg
dec
outsb
inc
mov
fsubrs
sti
ror
rol
sbb
or
popa
add
jle
cltd
push
push
out
jmp
cmc
jle
enter
or
call
lods
shll
aad
sahf
mov
outsl
sub
pop
mov
or
imull
mov
xor
inc
cs
cmpsb
or
add
loopne
in
jp
pushf
or
or
mov
pop
inc
ss
jnp
out
xchg
dec
jns
xor
shlb
movsl
mov
in
cs
sahf
jmp
mov
das
sub
stos
or
add
and
aad
addr16
sub
inc
sub
dec
mov
dec
pop
and
cmc
jne
cmp
out
adc
ficomps
or
idivb
push
dec
mov
lcall
loopne
cld
rcll
mov
call
mov
add
push
jno
mov
pop
les
hlt
loope
pop
sbbb
mov
xchg
and
cmp
cmpsl
insl
shrl
fdivrl
sub
cwtl
or
inc
insb
fs
jl
push
sub
sbb
add
test
push
mov
repnz
jbe
shll
sub
mov
scas
sbb
sahf
aam
mov
cmpsl
or
mov
outsl
out
daa
popa
jmp
adc
sbbl
mov
movsb
xchg
mov
idiv
push
sarl
adc
lcall
dec
js
mov
push
scas
shrl
shll
fistpl
mov
or
jp
sbb
nop
repnz
inc
mov
loope
ds
out
xchg
test
inc
mov
inc
xchg
lea
in
xchg
inc
aad
push
sbb
out
inc
mov
mov
scas
out
cmp
dec
push
adc
xor
js
popf
stos
int
into
idivl
cmp
out
dec
adc
push
lret
or
cmc
add
shlb
cmc
iret
mov
sbb
loop
pop
push
sub
lds
js
adc
mov
and
cmp
pop
pop
ficoml
push
cwtl
mov
test
sbb
mov
push
inc
jne
mov
xchg
dec
imul
dec
cmp
xorb
iret
xorl
scas
cmpsb
or
xchg
dec
shl
sti
test
pop
scas
push
pop
jno
ret
out
xor
add
add
dec
pop
dec
push
push
icebp
icebp
ljmp
inc
push
mov
sahf
cmp
jmp
jne
sahf
cwtl
mov
shl
mov
dec
xor
mov
add
sbb
adc
sti
enter
jp
adc
das
fwait
mov
stc
cmp
pushf
std
data16
pushf
mov
adc
jo
fstpl
mov
cmp
in
imul
stos
out
lea
pop
push
ficoms
dec
cltd
or
lock
pop
jecxz
jl
adc
icebp
ffree
jle
cltd
lds
lds
pop
dec
xchg
dec
inc
mov
mov
data16
in
inc
out
nop
out
mov
int3
aad
cltd
popf
xchg
lret
movsl
and
pop
inc
pop
test
cld
fs
pop
mov
mov
push
lock
jne
test
hlt
mov
inc
jne
lret
dec
mov
ss
stc
jae
jge
fs
xchg
outsl
cmp
lret
iret
int3
sub
push
test
sbb
push
shrb
fsubr
pop
sub
jns
nop
xchg
repnz
orps
jp
adc
mov
in
fimuls
cwtl
insb
inc
loope
mov
test
out
in
push
inc
cs
jmp
movsb
fcoms
and
out
lds
sub
cmc
movsl
adc
adc
sub
addl
in
lods
pushf
add
xchg
arpl
test
insl
ljmp
cli
das
cmp
inc
cmp
add
and
sub
mov
adc
ret
bound
call
push
ficomps
jbe
push
cmp
mull
ret
imul
ljmp
dec
xchg
inc
cmpsl
jp
push
push
push
sbb
inc
xchg
das
bound
fcoms
xchg
dec
repnz
jmp
movl
adc
sahf
lret
xchg
adcb
and
inc
xchg
fsubs
cmpsb
test
sbb
lds
sbb
sub
pop
sub
cmp
outsb
ds
dec
imul
dec
xchg
mov
xor
shlb
adc
push
fnstcw
lret
into
popf
fisubrs
push
repz
hlt
sub
repnz
add
adc
js
jae
pop
mov
inc
inc
xchg
or
xor
test
out
mov
jnp
push
adc
insb
adc
sar
pushf
mov
int3
jo
inc
inc
inc
mov
lea
inc
mov
push
xorl
pop
add
loopne
pop
add
cwtl
inc
dec
jns
je
xchg
xchg
inc
jg
push
dec
into
and
sub
fldenv
mov
das
fisubl
add
mov
add
sub
jg
adc
pusha
add
outsb
push
add
mov
jae
push
sub
lock
pop
xchg
or
adc
fucomp
adc
cld
mov
sbb
add
cs
cmp
stc
fs
ret
inc
jmp
dec
lea
fnstenv
sub
push
sub
sbb
pop
cmp
ret
push
sub
push
dec
jb
gs
push
imul
rcrb
idivl
adc
xor
jge
xor
mov
clc
mov
jmp
outsl
dec
mov
testb
or
mov
mov
add
jb
test
xor
mov
roll
fbstp
rorb
pop
sub
xchg
iret
sbb
pop
cmp
push
stos
insl
push
enter
fwait
adc
lock
mov
test
mov
mov
xchg
sbb
push
or
and
loope
ljmp
pop
mov
popf
cmc
lcall
sub
xchg
inc
pop
insl
mov
inc
inc
test
notl
inc
push
jbe
das
sbb
cltd
jecxz
aad
loopne
dec
cmp
aam
cmp
loope
mov
out
adc
mov
inc
push
pop
out
sti
mov
movsb
mov
out
mov
bound
xlat
mov
and
orb
mov
scas
data16
hlt
mov
fwait
in
dec
mov
in
add
mov
push
lods
mov
inc
push
stc
pop
or
rclb
cmp
test
dec
xchg
sti
pusha
jnp
cltd
inc
mov
ds
add
xchg
mov
mov
mov
shll
ja
jae
add
js
push
pop
lea
mov
mov
inc
pop
ljmp
mov
xchg
mov
leave
mov
jns
fwait
adc
sub
add
lods
in
jle
mov
and
out
pop
mov
mov
cmp
in
mov
int3
addr16
ds
mov
icebp
and
lods
in
adc
stc
inc
push
out
cmp
push
in
ret
out
outsl
xchg
add
mov
pushf
aaa
mov
add
ss
pop
addl
hlt
sarb
mov
or
adcl
imul
pop
xchg
sbb
jae
aaa
xor
stc
mov
fs
lods
and
pushf
roll
dec
sub
shlb
pop
xor
sbb
test
fldt
aaa
pop
mov
sbb
aas
fistpll
jge
sbb
jns
inc
fxch
pop
jb
push
cmp
xchg
adc
dec
js
and
sub
xor
fistpll
mov
mov
stos
js
cmpsb
rorl
pop
adcb
push
inc
sti
mov
rolb
jg
jnp
and
sbb
mov
test
in
adc
jmp
inc
and
fwait
pop
out
jle
shll
or
xchg
mov
in
ret
loope
ds
orb
or
negb
add
xchg
in
cmp
call
xor
add
dec
dec
push
frstor
call
dec
push
add
aaa
loope
cmpsb
leave
mov
fidivl
inc
add
fnstsw
ljmp
add
mov
and
fstpl
jo
jno
push
test
jmp
xchg
mov
lods
add
inc
test
lret
lret
out
mov
add
or
mov
shll
addr16
mov
es
in
pop
adc
lods
pop
sub
scas
fsubs
sub
test
out
gs
roll
cltd
outsl
jnp
xor
or
stos
mov
mov
imul
adc
cmp
mov
mov
loope
push
jbe
push
pop
outsl
add
push
mov
inc
pop
stc
pushf
xlat
decl
jmp
xchg
mov
fcmovnbe
pop
mov
adc
es
xorl
int3
aaa
popa
hlt
jb
or
imul
scas
dec
test
mov
dec
rorl
out
sahf
jecxz
cmp
mov
cld
pop
roll
lods
jl
cs
mov
push
movsl
call
mov
cmp
mov
pop
lcall
out
add
ds
xchg
xor
lock
xchg
imul
popa
les
out
jl
rcrb
imul
jb
push
imul
and
std
incl
cs
cmc
pop
or
outsb
cmp
leave
lds
mov
lret
test
add
mov
das
fmulp
std
pop
mov
out
lock
jge
gs
int3
mov
xchg
sub
test
inc
xchg
mov
xor
cmp
mov
test
test
cmc
and
and
sub
jge
dec
push
jo
fwait
push
scas
sbb
pop
scas
pop
xchg
inc
test
loope
xor
rcll
sub
mov
sbb
push
mov
jb,pt
mov
mov
dec
xor
fucomip
sub
lods
inc
lahf
jg
sbb
fcomip
sbb
push
cmpsl
sbb
mov
test
loop
add
nop
pop
int3
ficompl
fiaddl
lea
das
popf
sbb
bound
pop
sub
or
pop
push
sar
xchg
outsb
stos
adc
xchg
sub
imul
popa
int3
jge
xchg
sub
jge
rcr
sub
je
inc
insl
lahf
sub
dec
std
inc
inc
xchg
faddp
inc
inc
jmp
popa
xchg
je
adc
add
lds
xchg
sub
movsb
lahf
xchg
cmp
inc
cmp
call
inc
jno
scas
fstps
mov
push
insb
mov
cwtl
cmpsb
ret
sar
mov
dec
sub
jl
sbb
adc
xchg
ljmp
jns
cmp
out
aas
out
fidivl
mov
mov
and
jo
mov
sti
or
stos
int3
movb
mov
xchg
insl
dec
fbld
jmp
xor
xor
popf
sbbl
adc
out
cmp
add
xor
mov
cmpsb
pop
inc
ror
test
mov
jb
mov
adc
xchg
dec
stos
sarl
out
fnstcw
pushl
out
fwait
add
stos
dec
aas
xor
xchg
je
sbb
stos
adc
mov
imul
inc
pop
inc
movsl
xor
push
jae
popl
adc
ja
aad
pop
jl
fldpi
in
call
sbb
fimuls
jo
cmc
push
xor
jecxz
icebp
iret
adc
cmpsl
mov
mov
stos
sahf
cmpsl
js
jecxz
cmp
ds
adc
dec
mov
dec
push
jg
sbb
sbb
int3
jg
jle
shll
gs
add
inc
es
loopne
movsl
push
sbb
mov
cwtl
jo
daa
adc
rcrb
sbb
ret
scas
stc
mov
cmp
sub
sub
enter
xor
popf
in
pop
js
jnp
scas
push
cltd
shll
popl
and
adcl
test
lods
lahf
popf
es
inc
xchg
jnp
in
inc
xchg
and
out
stc
or
adc
push
dec
sbb
sbb
in
jecxz
pop
or
shrl
hlt
addr16
inc
xchg
andb
dec
imul
lods
cmpsl
fldl
rcll
push
jp
adc
add
sbb
xor
jmp
sbb
fiaddl
mov
sbb
outsb
cwtl
ja
test
dec
xchg
addr16
test
sub
or
int
xor
jne
or
into
add
loop
popa
xchg
adc
jo
and
mov
mov
mov
sti
pop
inc
cwtl
stc
sbb
subb
dec
inc
imul
adc
pop
jecxz
rorl
das
flds
sub
xor
lret
sbb
jl
sub
pop
push
push
mov
les
inc
jge
in
mov
push
clc
push
mov
in
pushl
push
fnstcw
filds
sbb
sub
mov
push
adc
leave
rcrl
popf
xchg
sbb
push
insl
xchg
push
sub
inc
lock
pop
jp
dec
fs
pop
test
cmp
sub
stc
cmp
jg
test
mov
fildl
outsb
xchg
pop
jge
adcl
decb
dec
int3
adcl
sub
jns
xchg
rcr
jne
xor
into
imul
mov
in
sti
push
jp
dec
adc
ljmp
dec
adc
push
mov
movsl
mov
fsub
adc
ds
xor
ficoml
mov
adc
jp
xchg
ret
mov
stos
xchg
rclb
shrl
scas
lret
sahf
daa
add
aad
push
mov
sub
jnp
jecxz
dec
push
mov
add
jmp
js
stc
mov
mov
sub
lods
fisubrs
add
lcall
cs
fdivr
js
loopne
lods
jbe
sub
push
insb
ds
shrl
push
mov
mov
xchg
inc
jno
mov
lods
pop
outsl
in
xor
xchg
and
sbb
sbb
loop
mov
jb
push
xchg
jbe
lods
jbe
cli
jo
sub
mov
sbb
mov
adc
orl
xchg
jo
sti
sar
cmp
ja
out
mov
inc
xchg
shll
cmc
popf
iret
icebp
in
pop
insb
rolb
push
dec
dec
cltd
mov
outsb
jo
inc
int3
je
fdivr
push
pusha
xchg
pop
adc
cmpb
cmp
call
push
adc
mov
les
or
add
adc
cmp
mov
adc
aas
mov
pop
movq
mov
in
xchg
ficompl
cmpsl
inc
inc
dec
sub
inc
stc
scas
mov
leave
and
clc
out
mov
leave
cltd
shl
jmp
std
push
das
inc
push
call
and
scas
mov
cmpl
cmp
shl
xchg
fnstsw
data16
lock
sarl
jo
in
pop
xorb
shll
jbe
adc
lock
lcall
fistl
jg
sahf
mov
outsb
out
lods
cmpsl
dec
adc
jb
cli
pop
push
pop
mov
movsb
xchg
push
or
lahf
inc
or
dec
pushf
cmp
cmp
dec
loope
sbb
das
fistpl
lock
mov
adc
shlb
daa
and
push
push
mov
shl
mov
inc
mov
lcall
sub
sub
shll
es
mov
push
jl
insl
mov
in
push
and
push
mull
adc
cmp
cmc
ja
push
cmpb
mov
dec
jns
dec
cmpsb
mov
andb
testl
ja
mov
bound
xor
sahf
cli
idiv
add
pop
ret
test
pop
repnz
xchg
out
outsb
sbb
pop
lea
sahf
jg
xlat
push
rolb
pushf
icebp
jne
js
jle
adc
mov
xor
jle
jg
insl
aam
out
cmp
addr16
pop
or
rcr
movsl
inc
pop
stos
dec
lcall
incl
imul
cmp
xchg
cli
out
sbb
add
idivb
shlb
xchg
pop
pop
call
pop
out
sbb
ficoml
mov
mov
push
sbb
dec
je
test
lds
jg
imul
sbb
les
add
in
sbb
outsb
fimuls
lock
mov
fisubrs
mov
jp
dec
sbb
sub
outsb
outsl
cmp
loopne
sbb
push
test
mov
push
cmp
xchg
sahf
out
xchg
fsubl
add
data16
loope
test
cld
lret
pusha
mov
sub
and
fwait
sbb
lret
or
cmpsl
andl
insl
push
rorl
mov
shrb
jnp
add
pop
lret
scas
cmp
xchg
faddl
mov
jnp
ds
fnstsw
pop
add
lock
add
mov
push
fs
add
xchg
xor
inc
lahf
mov
sti
xor
cmc
andl
sti
out
xchg
pop
sti
or
mov
ljmp
dec
pop
sbb
loope
pop
loop
mov
jae
xor
dec
pop
and
cmpsl
pop
xchg
jae
xchg
xchg
mov
cmpl
shl
push
jmp
inc
mov
pop
divb
dec
sub
mov
repnz
pop
inc
pop
mov
jge
cmpsb
and
sahf
aas
mov
imul
sbb
into
add
pop
dec
aad
cmp
mov
jns
lock
scas
bound
push
popa
cmp
mov
bound
jno
dec
fld
popl
inc
ds
push
imul
sbb
out
ljmp
sbbl
call
sbb
jns
xchg
icebp
movsl
cmp
pusha
add
rorb
jge,pt
or
and
test
xchg
jnp
jae
adc
adc
adc
inc
or
adc
insl
fisttpll
jb
rcr
pop
pop
cmpsl
imul
and
push
inc
addr16
ret
jbe
js
push
leave
dec
lods
and
int3
mov
in
mov
sbb
lcall
dec
mov
push
pop
dec
pop
push
mov
adc
sub
int3
int
jecxz
mov
sub
mov
pushl
dec
adc
and
and
sbb
arpl
pusha
mov
cmp
or
testb
ret
mov
mov
xor
jmp
sub
or
mov
mov
in
mov
sbb
sbb
inc
pop
and
shll
inc
aas
int
jno
jl
and
mull
daa
lea
aad
sub
push
stc
test
cmp
mov
dec
mov
fcomps
loopne
jnp
and
mov
jmp
jbe
add
jae
mov
out
lods
cmpsb
les
shl
adc
test
or
adc
daa
or
mov
xor
lods
bound
data16
mov
push
sbb
push
pop
pushf
js
aas
je
mov
insl
fists
jne
sarl
popf
lods
les
dec
jle
xor
jge
stc
jp
cltd
inc
mov
cld
insb
fmul
pop
sbb
dec
insl
fistpl
mov
and
xchg
mov
push
sbb
cmpsl
out
cmp
clc
pop
mov
ret
jne
xchg
cli
sub
mov
jp
in
jae
jle
push
popa
mov
jbe
outsb
rolb
fistps
aas
jae
filds
cld
ljmp
mov
or
loop
mov
and
sub
cmp
fs
cld
pusha
jno
cmp
mov
sub
dec
cmp
movsb
fnstenv
pop
iret
dec
adc
push
jge
and
inc
mov
mov
ja
aas
scas
and
push
pushl
shrl
push
sub
outsb
stos
sub
jg
sub
xchg
mov
cmc
pop
hlt
call
ja
xchg
or
pop
cmp
push
in
mov
or
xchg
aad
test
addb
mov
jecxz
mov
cli
sub
fistps
scas
out
fisubl
and
mov
shl
lods
jnp
lea
arpl
sbb
xchg
pop
loopne
insl
int
int
shll
inc
push
punpcklbw
in
dec
movsl
add
adc
xchg
ja
xlat
cmp
cmpl
xchg
xchg
aaa
xor
adc
xchg
sbb
mov
sub
sub
adc
push
data16
out
clc
cs
or
movl
cmpsb
mov
push
shr
jle
fsubs
outsb
adc
je
mov
mov
aaa
scas
xchg
mov
aas
outsb
ret
mov
decb
es
mov
jle
and
dec
dec
rcll
addr16
dec
insb
outsb
idivb
js
into
mov
subb
push
int3
test
sub
lods
pushf
popa
cmp
das
shr
and
pop
jbe
inc
jl
jge
imul
mov
adc
cltd
lods
aas
cltd
inc
loopne
loop
mov
mov
mov
mov
mov
push
fdiv
lds
sbb
inc
loope
inc
mov
cltd
js
push
pop
xchg
xor
pop
popf
jb
das
mov
repz
xchg
push
into
cwtl
sti
inc
and
scas
jae
insb
rolb
cmp
jnp
pushf
inc
ret
sub
push
loope
inc
jae
sub
or
idivb
jmp
xchg
les
dec
pop
imul
popf
std
push
stos
or
sbb
mov
shll
push
leave
or
les
test
mov
add
and
sbb
mov
sbb
mov
and
in
loopne
rclb
imul
sbb
lea
sub
xor
cs
cmpsb
pusha
js
push
and
fwait
push
or
pop
out
push
stos
sbb
cmovle
push
dec
or
xchg
xchg
jp
popa
mov
xchg
aam
inc
ficoms
pop
daa
nop
fiadds
lret
sub
xlat
pop
dec
dec
out
xchg
mov
movsl
fcompl
inc
movups
cmpsb
sarb
fists
popa
scas
mov
add
ret
xor
mov
mov
adcl
fwait
das
push
fiadds
ja
sub
xchg
jns
cmp
inc
loopne
cmp
push
std
outsl
leave
jae
inc
dec
and
xor
out
dec
movsl
and
lods
cli
sar
rclb
cmpsb
ret
jno
and
outsb
pop
adc
sub
xor
ds
stos
mov
test
jg
mov
movl
enter
in
jge
push
call
dec
xchg
pop
int
sbb
das
aas
clc
jmp
pop
mov
cld
jbe
and
sbb
inc
orl
insl
mov
sub
in
fdivrp
mov
sbb
stos
or
leave
sub
cwtl
xchg
fs
stos
jp
or
sub
xor
stos
mov
int3
ljmp
pcmpgtb
mov
adcl
dec
add
push
dec
stos
aam
jp
push
daa
inc
sbb
daa
pop
or
sbb
pop
mov
loopne
mov
xchg
sahf
sub
push
mov
enter
xchg
sbb
fstps
lret
mov
add
mov
outsl
pop
xchg
lret
addr16
mov
mov
xor
dec
std
mov
mov
aad
or
sbb
notb
sbb
dec
add
mov
lret
inc
scas
sbb
test
pop
xchg
and
mov
lock
rcll
push
js
mov
mov
xor
dec
loope
jae
cmp
std
dec
shl
pushf
in
outsl
pop
sub
dec
ss
jl
mov
std
push
bnd
mov
out
cld
pusha
cltd
jb
cmp
push
fldt
loopne
addr16
jmp
xor
fiaddl
mov
in
aam
push
jg
mov
popa
inc
sub
insl
and
nop
dec
mov
pop
out
lds
inc
outsl
roll
adc
adc
jns
jl
inc
movsl
mov
insb
std
dec
mov
push
or
imul
fldl
or
dec
dec
add
in
cmp
cltd
and
pop
cmp
or
es
and
and
je
popa
push
je
int
test
sub
fisubrl
cld
jp
push
subb
scas
jecxz
and
outsb
fcmovne
mov
out
sub
pop
or
push
mov
popl
dec
jp
jno
push
filds
stos
sbb
lock
test
xchg
rcrb
fildll
je
mov
or
sahf
inc
les
insl
add
push
lahf
repz
mov
xchg
in
lds
leave
push
pop
icebp
pop
mov
into
scas
movsl
dec
mov
mov
shlb
ljmp
jbe
cmp
aas
jae
add
js
adcl
jg
mov
repz
dec
or
xor
mov
push
push
xchg
icebp
mov
sbb
cmp
jg
or
fsubrs
add
sub
js
sahf
sub
fs
mull
cmp
mov
dec
push
enter
fistps
xor
addr16
pop
or
mov
and
and
adc
fstpt
bound
pop
adc
pop
das
jne
pop
aam
push
cwtl
stos
sub
call
in
sahf
adc
ljmp
pop
sar
stc
mov
test
mov
shlb
hlt
add
mov
dec
mov
fwait
mov
leave
xor
fs
jle
stc
add
lret
mov
jne
scas
mov
rolb
fsubrl
mov
mov
xchg
imul
fidivl
rep
sahf
pop
mov
inc
jae
add
xor
in
sub
ror
mov
ret
lods
lret
mov
inc
push
movsl
roll
pop
sub
cmpsb
loop
mov
dec
push
sub
out
jne
pop
std
outsb
insl
lret
xlat
jbe
inc
mov
add
jo
cmpsl
dec
or
out
sahf
nop
jae
add
test
shrl
pop
jbe
cs
jmp
lahf
lahf
sub
or
loope
fidivrl
es
push
js
pop
jge
xchg
inc
adc
sbb
lret
insb
outsb
push
in
bound
xchg
pop
jb
add
out
mov
push
adc
loope
xchg
push
ljmp
xorb
mov
shl
pop
pop
mov
xchg
sub
lods
lods
lock
mov
orl
sub
in
sbbb
in
push
pop
xor
lock
adc
xchg
adc
xor
stos
xor
sub
jnp
das
cwtl
leave
mov
xchg
push
popa
loope
je
add
andl
fstpl
lret
xchg
adcl
add
mov
nop
leave
insl
rcll
add
paddusw
rclb
scas
les
lock
popa
mov
out
aaa
sarb
inc
mull
or
gs
jp
xchg
inc
cwtl
aas
sbb
sbb
jp
lret
mov
xlat
jns
jle
cmp
or
sti
dec
mov
ljmp
scas
xor
cmp
cld
inc
push
mov
jmp
or
and
loopew
mov
mov
jmp
out
aaa
jno
stos
mov
call
out
and
pop
js
es
fistpll
in
notl
orb
inc
fdivs
sti
fistpl
lahf
and
pusha
fs
mov
out
jl
das
rorl
mov
xor
xchg
mov
xor
mov
push
sub
call
adcb
out
jp
ret
xchg
loop
push
rclb
push
incb
jl
or
clc
lret
xor
fs
jnp
push
and
aas
pusha
xor
out
inc
popf
stc
sub
jmp
cmc
fwait
xchg
inc
int
shlb
pop
lea
cmp
push
push
jmp
pop
into
push
jne
inc
adc
shlb
xor
repnz
mov
jg
jns
push
push
mov
mov
pushw
aaa
pop
mov
gs
and
ret
repz
sbb
and
pushf
adc
adc
xor
inc
in
push
movsl
fnstenv
jbe
sub
or
cmpsb
jae
dec
test
sub
cmp
mov
cmc
inc
xor
mov
call
in
inc
xor
or
fs
mov
push
stos
push
fdivr
jb
xchg
sub
ja
cs
out
mov
std
mov
out
aam
das
roll
push
fs
mov
xchg
test
lods
repz
lahf
pop
mov
push
pop
add
sbb
lea
out
dec
xor
fisttps
fstpt
mov
out
or
add
xchg
outsl
in
stc
out
test
cmp
mov
call
xor
xchg
mov
mov
in
jl
add
in
popf
out
adc
fildll
cmpsl
mov
mov
scas
insb
pop
xor
push
xchg
out
js
xor
jg
push
enter
mov
sbb
jo
imul
leave
or
lds
pop
xorl
iret
orl
cmc
ret
pop
das
mov
shll
cmp
jbe
xchg
push
lock
pop
push
lret
xchg
mov
push
mov
outsb
mov
or
push
mov
jb
call
fisubl
leave
out
sbb
cmpsl
test
sub
xor
xor
sub
ds
fstl
pop
or
lea
call
fsubl
inc
dec
inc
dec
retw
xor
int
push
out
jecxz
popa
cmp
mov
sub
std
mov
xchg
sti
adc
push
adc
lret
gs
call
sbb
cmp
lock
test
in
clc
xor
mov
pop
sbb
sahf
ljmp
test
sbb
push
sbb
inc
aas
pop
adc
mov
into
aaa
insb
xchg
inc
rorl
iret
int3
and
lret
fcoml
pop
add
or
inc
subb
adc
jb
adc
lds
adc
sbb
movl
shl
sbbl
stos
clc
inc
fisubrl
adc
neg
mov
adc
stos
push
lock
mov
les
int
sahf
imull
stos
pusha
ljmp
cli
mov
xchg
lea
enter
fstp
int3
sub
sub
ret
pushf
mov
dec
repnz
jecxz
add
outsl
pop
jno
sub
and
add
and
push
fcompl
dec
push
cmp
popa
stos
mov
sub
add
pop
xlat
xlat
inc
sbb
testl
cmpsb
lds
cli
cmp
cmp
sub
int
mov
mov
lret
cwtl
in
movsb
xor
jo
cmp
pop
dec
outsl
lods
sahf
sahf
jle
repnz
mov
jnp
pushf
cltd
leave
inc
cmp
or
mov
sbb
and
mov
mov
test
adc
ds
mov
lahf
mov
sbb
and
adcb
pushf
or
xor
popa
faddp
repnz
in
mov
cmp
dec
out
push
xor
mov
jne
stos
xchg
loop
add
mov
sbb
and
mov
and
add
mov
lret
jo
pop
xchg
loopne
es
jnp
ret
mov
adc
ror
pop
outsl
hlt
and
adc
xor
sbb
cmp
dec
mov
mov
es
and
add
sbb
call
sbb
inc
add
insl
aam
hlt
or
es
loopne
xchg
mov
adc
push
jns
aad
jp
neg
outsb
ds
mov
or
mov
xchg
mov
adc
mov
inc
adc
mov
out
add
bound
cmpsb
sub
jmp
or
mov
or
cmp
xchg
loop
dec
mov
jmp
pop
xor
mov
add
push
or
pushf
daa
or
clc
push
sbb
rep
shll
xchg
pop
dec
xchg
add
iret
add
sub
pop
int
cmp
add
ds
daa
cmpsb
push
mov
inc
push
mov
das
aam
mov
or
movsb
push
cs
xor
mov
cmpsb
fiadds
and
push
int
adc
bound
xchg
fisubs
decl
sbb
lea
call
push
ret
add
fidivl
ss
add
add
or
mov
out
imul
fdiv
jae
mov
cmpsb
xor
pop
bound
add
jmp
fnstsw
mov
dec
cwtl
sti
idivl
dec
roll
jns
sbbl
dec
pushf
stos
out
pop
fisubrs
movl
xchg
pop
in
mov
mov
in
stos
mov
mov
aaa
lods
mov
pop
test
or
call
mov
fwait
out
mov
shll
pop
insb
push
dec
adc
add
lock
cmp
cmpsb
pop
lcall
sub
pop
out
iret
call
mov
cmc
xchg
lods
incb
mov
cmp
ficoml
xor
stos
cwtl
call
inc
lcall
daa
das
sbb
sti
mov
enter
mov
imul
jnp
nop
adc
dec
stc
jl
shl
fs
adc
enter
sub
aam
jg
lds
dec
repnz
shrl
xchg
les
xchg
push
push
int
dec
mov
dec
inc
sarl
fadds
stos
xchg
ja
xchg
sbb
cmp
mov
add
add
jns
leave
fsubr
dec
sbb
outsl
outsl
sti
cli
or
leave
sub
pop
shrl
out
pop
mov
mov
push
out
rcl
dec
out
or
into
cld
pop
push
add
jb
or
sub
inc
sbb
adc
lds
fisttpll
fisubrs
incb
call
out
mov
cmp
push
negb
daa
add
pop
mov
dec
add
pushf
mov
test
int3
testb
ret
scas
loope
adc
add
xlat
and
xchg
push
outsb
mov
jnp
gs
cltd
push
inc
adc
xchg
rcl
mov
sbb
shlb
mov
mov
adc
or
rcr
dec
jp
cmpsb
std
mov
inc
lods
xor
inc
daa
imul
cmp
clc
adc
mov
loope
fnstsw
jp
movsb
cmp
dec
pusha
lods
divb
movsl
pop
fisttpl
scas
jecxz
jns
lock
and
test
scas
aas
icebp
pop
setne
xchg
pop
mov
inc
xor
lret
jae
xchg
inc
fdivl
mov
cwtl
test
mov
dec
shll
mov
pop
pop
scas
fcoml
data16
mov
adc
sbb
loopne
xchg
inc
and
idiv
cmp
sahf
xchg
mov
rorb
push
xchg
filds
dec
stos
dec
cld
or
jae
sub
lds
sbbb
mov
sahf
clc
and
popf
ja
addr16
cmp
lds
xchg
cld
mov
iret
pop
xchg
pop
dec
cmp
mov
jno
in
clc
sub
sbb
sbb
scas
add
jp
cmp
sbb
ret
push
add
leave
fwait
mov
outsb
ret
bound
sub
xor
cmp
mov
add
dec
in
loopne
test
cmp
popf
pop
ja
aas
fs
test
xchg
lods
les
ja
aas
adc
fistpll
jne
dec
push
fisttps
lahf
hlt
jecxz
repnz
and
lret
jp
dec
outsb
pop
adc
into
push
fistl
loop
xor
mov
mov
pop
jl
hlt
xchg
sbb
pop
das
push
mov
xor
ds
sbb
mov
repnz
and
xchg
cmpsb
je
fwait
vprotd
insl
arpl
int3
movsb
sub
test
aad
and
fisttps
scas
insb
fwait
stc
fisubl
jns
jg
test
adc
int
xlat
pop
test
daa
test
push
sbb
jmp
lock
add
sub
adc
sub
das
cmp
cmp
hlt
mov
movsb
icebp
fimull
sub
jns
cmpb
sbb
sub
imul
mov
xor
inc
inc
cmp
roll
mov
sbb
arpl
movsl
shll
mov
cmpsl
and
into
mov
loopne
arpl
shll
mov
inc
pushf
sbb
sub
mov
loope
cli
addl
outsl
shlb
add
pop
mov
pop
or
fs
lods
dec
fnstsw
out
xchg
sbb
mov
sub
jno
mov
ret
int
add
push
jno
pop
fimuls
cmp
ret
pop
scas
aad
popf
ret
les
addl
add
and
jae
dec
push
rcr
cwtl
mov
int3
push
lret
in
int
les
fimuls
mov
out
or
xchg
push
mov
call
sbb
or
cmpsb
sbb
push
dec
pop
adc
in
movsb
xor
loop
adc
pushf
adc
inc
out
negl
mov
mov
cmpb
add
sahf
mov
test
rolb
jo
pop
inc
sbb
dec
rcrb
push
sti
orb
sti
dec
inc
mov
stos
mov
loope
cmpsl
mov
arpl
inc
loop
int
das
jge
xor
fisubl
fwait
mov
sahf
cmpsb
sub
push
shrb
mov
jge
xor
fadds
mov
daa
test
filds
sub
mov
push
cmp
cmpsl
fcompl
mov
jo
xor
ljmp
cmc
scas
mov
lods
mov
and
and
fsubp
add
jns
sbb
cwtl
sbb
add
xor
and
stos
jl
push
inc
sahf
dec
xchg
stos
sub
add
packuswb
mov
inc
cli
rcrl
fisubrs
scas
xchg
test
call
mov
dec
push
mov
imul
dec
mov
int3
jb
in
mov
xchg
push
imul
aam
mov
cli
icebp
and
cltd
cmp
push
xor
cmpsb
pusha
and
nop
xor
fisubrl
and
das
and
pushf
ljmp
pop
mov
ds
fistl
cmp
pop
xchg
jmp
adc
mov
dec
dec
xchg
push
outsb
out
and
jmp
std
daa
adc
jecxz
jmp
pop
ret
jl
int3
imul
inc
xchg
push
xor
lods
sbb
int
or
js
sbb
es
fistps
pop
jl
daa
inc
mov
nop
inc
add
inc
shlb
or
dec
inc
ds
cmpsl
dec
and
xor
jno
enter
and
std
maskmovq
divl
fsubl
sub
and
stos
xorb
stos
jge
adc
cmp
dec
repz
pop
lcall
push
into
push
pop
stos
faddp
pop
outsl
js
imul
and
jmp
dec
fwait
cmp
shl
fcomi
adc
test
mov
and
push
jnp
das
gs
adc
jge
test
push
sub
pop
frstor
or
cmp
pop
in
xchg
mov
fwait
or
mov
adc
lcall
es
sbbb
sbb
push
mov
or
orl
pop
pop
cmp
ret
fidivrl
outsb
xchg
jmp
cmpsb
pop
je
jbe
or
xor
dec
xchg
xchg
inc
inc
mov
lods
shlb
and
jg
divb
pop
pop
jg
dec
aas
sub
fnstcw
jae
push
add
sbb
push
and
push
pop
out
dec
das
imul
dec
aas
lahf
or
push
jp
scas
stos
loop
sbb
mov
lods
test
pop
push
daa
mov
popa
cwtl
adc
shlb
ljmp
add
and
jg
push
out
pushf
or
push
mov
dec
dec
sub
je
dec
mov
into
in
adc
fcomp
adc
mov
mov
mov
inc
inc
or
int3
add
mov
dec
sbb
adc
pop
mov
jnp
sbb
repnz
xor
clc
add
jne
in
pop
fsubr
mov
in
rcl
xchg
push
xor
fadds
int
cmpsl
int3
imulb
lgs
adc
loop
add
xchg
jns
cmp
inc
add
outsl
lock
sbb
jno
inc
or
cmpsl
dec
pop
adc
adc
imul
arpl
mov
mov
xchg
inc
ja
lcall
fisttps
je
adc
cmp
cmp
push
xchg
cmpsb
xchg
xchg
dec
notb
mov
jl
jae
push
pusha
xor
aas
mov
aas
aad
mov
xchg
lret
call
in
or
lcall
jg
mov
dec
test
pusha
test
call
es
hlt
and
jmp
stc
push
and
cmp
and
mov
dec
sbb
inc
jl
mov
into
test
jb
roll
push
dec
mov
cmp
add
cmp
loopne
mov
rclb
popa
jg
mov
daa
outsb
jg
pushf
sti
sbb
xchg
enter
pop
dec
cltd
cmpsb
mov
sbb
jne
mov
xor
cmc
mov
loope
inc
fcoms
aam
sahf
add
int3
adc
movsl
jae
sub
hlt
dec
add
sub
mov
add
mov
loop
dec
movsl
shrl
mov
cmp
sub
andl
inc
mov
das
mov
aam
shrb
inc
push
sbb
decb
or
cmp
mov
cmp
dec
out
sub
ret
out
and
inc
enter
mov
inc
pop
pusha
gs
clc
cltd
rorb
outsl
or
xchg
repz
mov
sarb
push
lods
xchg
cmp
inc
adc
lretw
addr16
dec
cmp
lea
sub
cmpsb
roll
adc
pop
mov
mov
mov
fsts
pop
test
sti
cmp
sub
fadds
enter
dec
lret
or
cmp
aam
xchg
addr16
jle
adc
nop
adc
mov
sbb
push
mov
add
mov
push
scas
add
cs
add
leave
dec
xchg
and
es
sbb
lods
and
push
in
jge
cmp
rorb
sbb
sbb
mov
dec
fidivl
sbbb
pop
xor
sub
mov
cli
scas
jns
pop
mov
inc
fdivrl
cmpsl
lret
and
cld
and
jle
sti
lock
flds
pop
scas
enter
push
ret
pop
sbbl
xor
or
test
aas
adc
inc
cmp
and
lods
and
ljmp
cmpsl
push
jnp
int3
dec
ja
pop
scas
sub
dec
xchg
insl
pop
fisubrl
rcr
push
jge
adc
aad
inc
xor
jo
add
stos
call
mov
fsubs
xchg
sbb
je
cmp
imul
cmp
add
aaa
shl
adc
movsl
mov
aad
push
jns
mov
fwait
movsl
and
adc
mov
jmp
mov
sbb
xchg
or
mov
mov
dec
or
or
mov
adc
dec
and
cli
loope
pop
push
enter
icebp
dec
shl
mov
mov
sbb
scas
jns
scas
aam
sub
pop
je
pop
jg
std
adc
mov
das
dec
cmp
xchg
pusha
cmp
int3
mov
inc
push
add
sub
je
xchg
sub
pop
mov
mov
popa
mov
fildl
loope
popf
imul
lret
vpunpcklbw
es
cli
add
adc
dec
sub
mov
push
frstor
push
daa
and
fcoml
jbe
mov
inc
inc
loopne
ljmp
jns
sti
fstpl
xor
lahf
lret
or
icebp
fwait
mov
pushf
shlb
fistpl
adc
pop
mov
sub
loope
fwait
sub
movsb
mov
jecxz
iret
pop
fimuls
and
xor
inc
divb
dec
dec
fsubrs
aaa
jg
inc
dec
dec
dec
es
pop
adc
xchg
sbb
cmpsb
sbb
repz
cld
mov
orl
mov
das
shlb
xchg
add
outsl
cmp
adc
jl
sbb
je
inc
cmp
xchg
pop
jns
pop
mov
mov
aaa
sub
nop
stc
test
adc
pop
jo
sti
mov
sbb
shrb
jg
mov
xchg
sahf
int
cltd
mov
sbb
bt
cltd
leave
ljmp
cli
cld
sbb
psubsw
sbb
lock
pop
mov
pop
jl
pusha
cmp
xchg
xchg
loope
mov
jns
dec
je
xchg
in
sub
push
mov
movsb
fsubrs
test
cmpsb
or
mov
xlat
rolb
or
adc
cmp
sbb
sub
notl
xchg
pusha
enter
inc
cmp
and
jmp
or
jecxz
into
fidivrl
mov
xor
or
cmc
mov
mov
jp
call
lret
push
pop
in
scas
xchg
dec
int
call
mov
sbb
lea
mov
mov
mov
pop
fsubs
call
sbb
mov
repz
int3
mov
xor
loop
sbb
pop
jmp
shll
jmp
lods
movsl
dec
and
push
shll
mov
ficoml
stc
fimull
push
nop
xor
fdivrl
popf
lods
pop
loopne
jp
mov
inc
aaa
add
cs
xor
fdiv
ss
int
cmpsl
cltd
xchg
add
dec
fwait
mov
push
nop
xor
mov
iret
xor
in
mov
and
inc
mov
cmp
push
icebp
cltd
push
ret
adc
pop
jo
mov
xchg
and
aas
jmp
test
jnp
popa
add
loop
mov
mov
out
mov
test
icebp
add
push
movsl
dec
pop
fcomps
xor
push
dec
mov
lock
mov
dec
hlt
arpl
gs
dec
xchg
daa
xor
bound
ret
mov
orl
adcl
adc
adc
sub
and
pop
mull
inc
sub
into
lods
xchg
push
in
enter
test
loop
jg
les
dec
jno
popa
in
or
aad
repz
je
add
add
cmp
xor
test
jno
adc
out
adc
adc
cmp
int
and
lods
xor
push
or
xor
mov
test
ljmp
jne
clc
cmp
push
es
push
push
mov
fisubs
inc
push
ds
popf
mov
insb
ja
in
icebp
flds
lock
dec
andl
mov
je
pop
scas
dec
inc
es
add
nop
stos
pop
loope
rcrl
subl
and
sub
popa
fisubrs
sub
cwtl
pop
shll
aam
shll
aas
icebp
std
mov
and
mov
aad
dec
std
ds
mov
sti
and
mov
fadds
outsl
cli
xor
fwait
int
jne
sbb
pop
call
cmp
test
shll
aaa
dec
add
mov
gs
ret
cmp
pop
jns
imul
inc
push
test
leave
ficompl
jne
adc
adc
bsf
imul
pop
cmp
das
push
inc
adc
jg
les
pop
mov
lcall
add
jg
pop
fldt
ficoms
jne
out
sbb
or
popa
idiv
loop
xchg
in
and
mov
lods
cmpsl
movsb
or
xchg
outsb
std
fsubrs
or
and
movsb
les
push
ss
test
lods
ret
or
mov
out
or
imul
lahf
addr16
jo
push
cmp
scas
out
nop
dec
je
mov
lds
sbb
cmp
lods
aad
push
jg
mov
sbbb
adc
addr16
das
inc
sub
mov
daa
scas
and
std
mov
scas
push
idivb
add
xor
dec
mov
mov
or
inc
aad
sub
sub
jle
pop
mov
shrb
je
pusha
hlt
lods
jmp
lock
outsb
adc
mov
je
dec
mov
lret
mov
outsl
push
pop
test
fildl
pop
mov
mov
push
xchg
mov
or
jne
dec
cmp
out
mov
outsl
aam
hlt
pop
jae
push
in
jbe
mov
mov
daa
imul
lcall
mov
xor
lcall
or
test
jge
fcomi
cmp
xor
inc
add
mov
xchg
xchg
pop
inc
in
inc
ret
mov
lcall
ret
in
jns
stos
push
or
xchg
add
lret
xchg
fiaddl
mov
pop
jae
push
sub
sub
ret
mov
mov
xor
fucom
mov
pop
mov
icebp
int3
addl
addr16
es
out
sub
jp
inc
insl
test
stc
es
les
rolb
sbb
cmp
lret
in
sahf
push
adc
push
push
movsb
fiaddl
in
sub
nop
jb
popf
imul
add
arpl
hlt
mov
dec
mov
clc
rcl
outsb
fisttpll
cltd
jnp
inc
ret
or
mov
daa
dec
xchg
std
adc
cs
mov
mov
andl
ljmp
mov
ret
sarl
push
std
xchg
popa
stc
in
jp
dec
fucomip
sbb
or
sbb
stos
bound
jbe
jg
mov
jg
loop
jecxz
fldt
adc
rorl
rcrl
sbb
lods
xchg
xchg
aad
cmp
imul
lret
ljmp
stos
int3
sub
insl
movsb
mov
jnp
xor
and
pop
and
js
out
es
cli
shlb
fisttpll
ss
xor
sub
out
loop
pop
or
ds
mov
xchg
cmp
cltd
and
cmp
js
arpl
sbb
pop
out
cmpl
out
hlt
xor
testl
jnp
repz
adc
fisubl
test
imul
lods
mov
pop
cmpsb
jle
adc
cmp
push
mov
mov
lahf
xchg
jle
push
push
aaa
shlb
fs
mul
cli
adc
icebp
clc
inc
loope
aas
mov
mov
push
lahf
dec
test
sti
or
mov
and
inc
mov
getsec
mov
xlat
rcl
sbb
fnsave
dec
push
aad
mulb
mov
push
xchg
xchg
or
jbe
popf
test
dec
in
dec
mov
cmc
mov
jae
jbe
xor
xor
mov
inc
ficoms
cltd
jno
and
pop
mov
data16
sbb
into
and
inc
pop
sar
jo
jnp
xchg
gs
call
inc
mov
insb
fmuls
pop
scas
fisubs
dec
lahf
xor
mov
jns
popf
idivb
mov
mov
ret
xchg
cmpsl
sub
xchg
leave
cmp
test
mov
mov
or
popa
loop
mov
movsl
shlb
add
xor
mov
inc
jecxz
subb
lahf
cmp
pop
enter
xor
sub
es
scas
sbb
fidivrl
mov
push
mov
or
push
insb
inc
arpl
movsl
test
or
cld
mov
scas
sub
cmp
aaa
dec
scas
aas
subl
jp
jo
movsb
test
pusha
ljmp
das
loope
cmp
movsb
mov
movsb
mov
xor
pop
mov
cmp
clc
roll
stc
addb
imul
fsubs
outsb
cmp
test
repz
jbe
arpl
in
shr
out
mov
xchg
pop
dec
xchg
loope
sbb
gs
pushf
jmp
nop
dec
or
xchg
cmp
mov
add
dec
push
xor
sbb
lcall
popf
outsb
and
bnd
fldl
add
mov
pushl
int
lock
popa
pushf
cs
cmpsl
xchg
cli
inc
cmp
xchg
adc
adcl
aas
out
fcoms
mov
inc
repnz
sub
cmp
les
imull
lods
call
cltd
cmp
leave
call
dec
cmp
je
cmp
mov
jp
jp
push
rcrb
addb
negl
stos
push
or
test
mov
pop
cmp
xchg
icebp
ljmp
and
std
push
mov
jno
push
shl
pop
test
movsb
fs
movaps
xchg
fsubrl
subb
mov
mov
fs
add
jns
jmp
mov
ja
int3
xor
std
sbb
pop
dec
popf
in
jl
mov
les
and
sbb
imul
pop
jge
adc
fisttpll
clc
test
xor
aaa
lcall
loopne
jmp
add
mov
loop
ss
mov
enter
jae
fldl
outsb
ljmp
lods
in
inc
pop
roll
xchg
outsb
cmpsb
add
mov
xor
mov
mov
je
aam
adc
cmp
adc
frstor
jbe
arpl
jmp
pushf
push
push
mov
or
pop
imul
inc
jp
into
sub
sbb
ror
mov
std
ja
mov
mov
lahf
test
mull
les
mov
mov
mov
add
pushf
or
ds
xchg
xchg
xor
in
pop
sbb
aaa
fstps
fisubrl
mov
sbb
iret
xor
pop
jae
mov
rcrb
nop
adc
cmp
xorl
mov
cmpsl
dec
inc
lret
xchg
aad
sbb
and
push
idivb
mov
xor
popl
fnstsw
mov
jg
daa
jmp
dec
jmp
add
mov
xlat
and
adcb
push
inc
push
dec
lds
lods
mov
testb
jl
jg
leave
sahf
mov
mul
pop
adc
xlat
inc
sub
aaa
jbe
mov
add
push
add
mov
mov
xchg
or
fistpl
mov
repnz
subl
div
mov
outsb
add
cmc
ljmp
adc
fmulp
shll
ret
fstpl
loope,pn
scas
jno
or
mov
dec
pop
es
cltd
popf
mov
je
in
mov
cmp
stc
jnp
cmp
movsb
leave
out
sarl
sbb
jmp
lahf
xchg
push
sub
orl
cmpsb
mov
inc
jb
aaa
adc
xor
xchg
je
mov
adc
add
data16
aam
dec
fistps
sbb
push
mov
movsb
cmc
jne
mov
push
daa
jecxz
jg
nop
lcall
mov
pop
out
scas
rcll
sbb
cs
xchg
xlat
xor
arpl
outsl
or
jb
shr
das
fisubrl
xor
dec
or
mov
lcall
test
fstps
xchg
xchg
jle
lahf
sub
mov
leave
movsb
mov
sbb
jo
mov
jbe
xchg
cmp
arpl
jo
icebp
adc
xor
cmpsb
cmpsl
jo
nop
int3
fisubrs
notb
cmpsb
adc
sbb
lods
inc
xchg
dec
insb
inc
xorl
popf
xchg
clc
outsb
dec
or
mov
mov
dec
xchg
adc
scas
or
cmp
sti
mov
jo
test
dec
fcmovu
sub
dec
mov
mov
ds
jl
mov
lret
andl
enter
enter
shll
les
mov
inc
int3
jp
subl
lods
lret
fisubs
aad
stc
xor
jle
push
mov
outsl
in
fimull
cmp
enter
aam
insb
mov
inc
arpl
rorb
loope
xchg
loope
push
pop
mov
push
xchg
mov
cmpsl
xor
push
push
shl
xchg
es
outsb
inc
fildl
cmpsb
xor
sub
and
pusha
cmp
mov
lods
xor
mov
sub
aad
adc
or
xchg
dec
pop
aad
cmp
ss
push
or
push
jecxz
inc
push
mov
pusha
add
int3
or
adc
mov
inc
push
in
pop
or
loopne
out
mov
xchg
cmpsl
divl
pop
sbb
dec
mov
repz
les
adc
add
outsl
push
dec
cwtl
or
test
xchg
and
sbbl
into
test
rclb
lock
clc
ret
faddl
inc
nop
jae
jns
adc
add
repnz
mov
and
sbb
cmp
in
aad
adc
loop
gs
sti
sub
lahf
loopne
xchg
mov
push
rclb
cmp
lret
ficompl
mov
sbb
filds
sub
add
sarl
in
dec
mov
push
gs
mov
or
push
mov
incl
sub
jo
sbb
xchg
xchg
cmpsl
fbstp
shll
iret
mov
lahf
push
inc
xchg
lcall
pop
loop
sub
movsb
je
cmp
and
loop
sub
push
mov
popa
mov
jge
imul
mov
lcall
adc
cltd
push
ljmp
movsb
lcall
ss
inc
cmp
dec
xchg
nop
loop
lods
xor
jmp
mov
push
pop
jmp
fstl
int
pop
data16
imul
push
std
jb
cs
cmpb
je
addr16
or
fcoms
jge
or
jnp
sbb
jb
cmp
push
cmc
and
xchg
sbb
movd
fcoms
xchg
sbb
and
xlat
xchg
test
fwait
cli
fcomps
mov
adc
loop
ficomps
add
dec
rcrb
pop
test
pop
addb
cmpsb
insl
pop
and
lret
in
adc
pop
xchg
mov
push
test
xor
cli
popa
mov
test
jecxz
in
pushf
mov
outsl
rol
push
sbb
mulb
orb
aas
and
mov
push
jnp
sbb
aaa
shll
push
fldcw
cmp
cmpsb
mov
ds
mov
mov
punpckhbw
inc
lods
jo
sbbb
test
insl
loopne
sub
pop
mov
loop
mov
leave
lahf
repz
dec
jmp
cmp
or
dec
arpl
enter
idiv
addr16
add
fldenv
inc
xor
testl
fistpl
iret
jnp
mov
xchg
dec
dec
fists
int
icebp
loop
mov
xor
stos
das
push
fwait
shlb
lock
or
jp
push
aaa
ja
frstor
and
and
cmp
inc
push
outsb
push
sbb
add
lock
xor
push
xchg
repnz
bound
or
mov
adc
ret
das
outsl
lahf
mov
adc
pop
fptan
dec
push
sub
or
cld
dec
rclb
lcall
push
frstor
orl
movb
lret
sub
cmc
mov
cmp
fimull
std
push
movsl
ja
call
inc
jp
pop
xor
xchg
cltd
inc
push
sarl
cmpb
xchg
sbbl
cmc
aad
rcrl
ja
dec
dec
movsl
dec
and
ds
jmp
fldt
daa
or
push
es
aad
fmulp
xchg
pop
or
mov
clc
sar
leave
ss
push
loopne
xchg
xchg
scas
or
add
and
aam
sub
mov
push
or
int3
stos
add
inc
call
pop
dec
push
and
pop
pop
and
mov
popa
cmpsl
out
cltd
ljmp
mov
gs
jns
and
ds
jae
jb
mov
iret
cmp
addr16
xor
lock
add
mov
mov
fcomp
push
cmp
xlat
bound
fwait
mov
sub
aas
mov
jl
andl
sbb
cmp
aad
sub
stos
adc
mov
dec
fs
fwait
and
push
jp
cli
jno
rolb
rclb
xchg
pop
xchg
cmpsl
inc
push
xchg
mov
push
imul
fcoml
jge
inc
in
cmc
or
out
pop
dec
push
das
xchg
fnstenv
into
pop
cld
sub
notb
call
adc
inc
int
inc
jae
mov
movsl
inc
inc
filds
divl
fwait
imull
lcall
adc
xchg
pop
clc
cmp
sti
lcall
push
push
pop
dec
cli
mov
stos
mov
rorb
mov
js
mov
inc
cmp
push
inc
push
xor
int3
rcr
xor
nop
mov
jns
sti
xchg
add
sarl
sub
sbb
mov
in
and
mov
sub
xchg
sub
stc
push
movsl
push
xchg
pusha
out
dec
pop
jmp
daa
push
mov
mov
outsb
mov
nop
hlt
outsb
ljmp
inc
inc
test
daa
inc
outsl
mov
getsec
cmpsb
push
cmp
xchg
cmc
add
aam
jns
add
roll
subb
xor
and
jns
dec
push
cmpsl
mov
ss
mov
sbb
faddp
mov
ljmp
int3
popf
fdivrs
popa
iret
idivl
and
data16
push
bound
stos
sbb
repz
jg
mov
dec
cwtl
fs
mov
mov
fisttpl
insb
inc
call
mov
push
inc
in
sysexit
xlat
mov
sbb
je
and
add
jecxz
lea
mov
and
sbb
adc
mov
mov
lcall
movsl
xorb
sub
les
inc
lcall
jmp
jp
and
les
xchg
aam
or
insb
lds
aaa
sahf
or
mov
leave
and
cmp
mov
mov
fwait
call
jge
pop
xor
cmp
xor
sbb
pop
push
movsl
or
sub
xor
in
ret
into
ds
sbb
dec
mov
jo
mov
imul
adc
icebp
or
and
jnp
rcr
mov
test
icebp
jnp
cmp
scas
mov
jp
mov
mov
subl
lret
cld
sub
scas
mov
lods
dec
lods
test
push
inc
insl
ds
mov
xchg
std
push
sti
repz
jnp
into
lods
insl
scas
xchg
les
ret
dec
andl
sbb
sub
loop
stos
jno
cmc
jp
insb
popf
add
movsb
sub
mov
pop
mov
mov
mov
xor
pop
adc
or
insl
sbb
aad
pop
mov
inc
in
and
cmp
stos
test
pop
cmpb
lock
pop
lret
shr
jmp
dec
sub
mov
jo
pop
dec
mov
flds
mov
jns
in
clc
push
stos
xor
xor
xchg
ss
adc
ds
scas
pop
pusha
xor
sbb
push
je
sub
clc
insl
jg
addr16
dec
shll
mov
jle
push
mov
xchg
xchg
jbe
mov
in
cmp
lock
das
add
sbb
into
push
push
dec
cmpsl
cmp
sub
jecxz
add
mov
fiaddl
sbb
push
lds
lds
gs
xchg
mov
in
inc
push
and
fnstenv
jbe
dec
insl
lds
ja
mov
rorb
jl
scas
mov
out
ret
xchg
push
cs
std
in
cmp
jecxz
cmpsl
push
in
cmpsb
les
adc
aam
jbe
adc
hlt
inc
data16
cli
cmp
and
in
sub
dec
push
xchg
les
jb
cmp
mov
ret
and
lret
fnstenv
and
cltd
jbe
xchg
lahf
cld
and
ror
dec
frstor
push
cmp
sahf
loope
iret
jb
fstpl
test
dec
insb
mov
push
fcoml
rorb
pop
orl
jno
call
sbb
push
and
ss
insl
xor
push
xor
fidivrl
test
mov
push
or
xor
jnp
leave
sub
ret
jg
xchg
mov
insb
inc
jo
dec
aam
mov
sub
movsl
xor
jae
inc
inc
mov
adc
push
lods
ja
fcmovne
cmp
push
test
adc
adc
ljmp
mov
daa
mov
lcall
jp
inc
aam
adc
adc
dec
add
rorl
cmp
loop
pop
mov
dec
nop
loop
dec
mov
cltd
cmp
adc
mov
icebp
and
jns
loopne
mov
or
jnp
sbb
cmp
add
or
fidivrl
cli
cmp
push
cmp
pop
adc
imul
outsb
cltd
shrl
dec
pop
aam
in
shlb
dec
or
and
cmp
xchg
push
cmpl
cli
aaa
les
call
mov
mov
jnp
jmp
test
dec
pop
daa
repnz
hlt
ret
jbe
push
stc
sbb
add
mov
incl
fwait
adc
inc
jl
scas
mov
cmp
pushf
mov
mov
sbb
add
fildl
mov
sbb
pop
xchg
xorl
ret
push
dec
outsb
lea
adc
jp
sub
push
ret
mov
cmpsb
sahf
les
mov
lret
mov
lock
pop
cmp
push
mov
stc
testb
push
movsb
xlat
lahf
inc
orb
fistps
add
cmp
pushf
mov
xor
test
mov
fwait
sbb
into
xor
xor
test
test
pop
shl
inc
jo
daa
movsb
sbb
lcall
cmp
and
out
scas
inc
mov
nop
dec
and
clc
insb
rclb
ds
mov
mov
inc
jle
mov
mov
lds
lret
ss
xchg
cmpsl
ljmp
jl
in
or
or
in
inc
mov
mov
testb
xor
inc
dec
pusha
into
sbbb
js
out
sbb
fisttps
imul
pop
sbb
jl
in
adc
mov
and
jl
mov
sahf
insl
pusha
stc
jnp
pop
or
shll
lds
push
pop
mov
lock
adc
cli
jge
sub
pushf
xchg
ds
cmp
inc
decl
stos
add
scas
mov
inc
out
mov
enter
in
jnp
jne
xor
push
or
faddl
jbe
or
stc
sub
inc
adc
pop
adc
aad
xor
mov
mov
arpl
adc
dec
mov
scas
xchg
aam
test
mov
adc
js
cmpsb
out
pop
pop
int
push
jb
fidivrl
jae
shl
loopne
cmp
sub
mov
out
imul
cmp
in
sbb
adcl
jg
xchg
call
mov
lods
push
xor
inc
pop
xchg
cli
and
mov
mov
outsb
jbe
sub
rolb
and
in
and
mov
out
jb
mov
mov
jmp
push
xorb
mov
mov
pop
sbb
cwtl
sub
outsl
dec
mov
sub
mov
and
outsb
mov
add
jbe
lea
jp
and
xchg
push
ret
pop
and
shlb
fs
dec
je
pop
xchg
test
dec
add
mov
adc
daa
push
inc
rcll
imul
xchg
xchg
fidivrs
xchg
fistpll
cmpl
add
pushl
dec
xchg
loopne
stos
push
shll
sub
fs
fwait
ja
push
push
in
bnd
loope
out
aam
popa
sub
test
imul
adc
jns
sub
jge
xor
out
xor
lods
das
fnsave
scas
or
mov
leave
jl
repz
lds
out
xor
mov
or
xor
cltd
xchg
sbb
test
push
arpl
test
push
pop
xchg
xor
adc
mov
pusha
enter
movl
and
jne
dec
out
cmp
js
or
fbstp
test
pop
xchg
out
arpl
push
adc
inc
and
loopne
mov
pop
ficoml
mov
push
adc
adc
shlb
lea
push
mov
sbb
jno
inc
subl
notl
pop
cmp
and
ds
stos
push
and
adc
inc
jb
fdivrs
imul
leave
mov
incb
cld
mov
dec
push
sub
or
mov
push
push
jns
insb
jae
aaa
sbb
mov
sub
mov
mov
pop
and
push
lods
outsb
gs
or
loope
or
rcrl
xor
and
rcll
fs
in
les
xor
mov
gs
mov
cmp
ljmp
push
jle
xor
xor
in
je
ja
sub
and
test
push
cmp
aas
stos
dec
fldt
push
sub
cmp
fisubs
push
pushf
cs
stos
lods
in
mov
push
ljmp
lea
icebp
stos
dec
in
iret
mov
mov
leave
pop
cltd
sub
jbe
lock
int3
mov
ljmp
sbb
insl
in
leave
out
dec
pop
and
loope
mov
add
shrb
and
ficoml
mov
pop
rcr
xor
add
int
jns
sbb
or
sub
repnz
shlb
aad
jp
lods
in
stos
dec
sbb
les
cld
test
xchg
ret
dec
cmp
mul
add
pop
outsb
mov
and
xlat
das
mov
outsl
dec
movsb
out
jge
mov
scas
sub
ja
cld
jl
mov
sub
push
mov
jnp
pop
xchg
xor
xchg
fidivrl
test
fchs
loopne
mov
imul
cmp
mov
inc
out
test
mov
inc
mov
push
pop
dec
ljmp
cld
inc
jg
push
cmp
std
hlt
push
arpl
push
add
lret
mov
sahf
inc
rol
jns
es
int
leave
mov
push
call
jne
push
scas
lea
movsb
add
jg
mov
lret
inc
test
mov
fwait
fs
insb
aas
adc
pop
inc
mov
ret
or
cmp
stos
out
cld
pop
dec
lods
or
movb
xor
jecxz
xchg
jo
std
inc
in
mov
inc
imul
mov
xor
rol
sbb
inc
sbb
cmpsb
call
inc
and
loop
add
aad
mov
aaa
mov
insl
movsl
lahf
test
std
cmp
pop
inc
jns
xlat
mov
mull
jno
aam
loopne
and
in
adc
repz
test
sbb
in
mov
or
sub
cli
imul
sbb
mov
pop
cmc
test
dec
xorb
add
xchg
cwtl
pusha
sti
loope
dec
and
hlt
adc
pop
sbb
daa
mov
lret
jge
test
pusha
rcrl
pushf
dec
sub
dec
popf
mov
sbb
imull
lods
pop
fstl
rorl
jne,pt
enter
push
mov
xchg
hlt
lret
test
xchg
lods
add
cmp
ds
xchg
movsl
mov
push
cli
insl
popf
lcall
xlat
icebp
ss
lods
pop
add
in
out
mov
mov
jmp
pusha
dec
je
jp
cmpsb
jo
and
scas
loopne
mov
test
jne
fcompl
jp
jecxz
arpl
pop
jnp
push
mov
dec
out
rcrl
sub
pop
cmp
pop
jecxz
aas
jne
sub
cmp
add
sbb
out
xchg
lea
mov
call
test
imul
pop
mov
mov
add
cmpsb
rcll
cmp
xchg
adc
push
and
mov
cwtl
das
cmp
dec
pop
inc
mov
xor
fidivl
out
push
das
inc
clc
adc
jno
or
mov
push
loope
ljmp
sub
xor
add
xorb
lea
pop
insl
jo
sbb
mov
in
cmp
rcr
scas
enter
adc
lahf
inc
pusha
call
nop
push
pop
hlt
cld
mov
mov
inc
adc
add
mov
fists
dec
imul
xchg
sti
mov
aam
xorb
dec
inc
mov
sub
int3
mov
pop
sbb
in
jge
xchg
mov
aad
test
shll
xor
repz
lods
imul
mov
lea
pop
aaa
popf
mov
cmc
or
xlat
lret
sbb
mov
or
dec
xchg
push
jbe
ljmp
popa
dec
sahf
lcall
inc
mov
mov
mov
out
pop
push
xchg
mov
mov
dec
or
and
xor
and
xor
inc
cmp
ret
loope
ja
cmc
loope
sbb
ja
test
lret
or
cmpb
mov
arpl
fidivl
jbe
mov
fs
fs
sti
jecxz
cwtl
mov
dec
adc
jb
in
icebp
insb
fildll
jbe
dec
ja
sti
adc
movsl
pop
mov
xchg
dec
dec
pop
ret
ja
sbb
loope
cmp
pop
jns
xchg
lret
jg
jae
mov
pop
jbe
dec
pop
inc
mov
add
movsl
dec
je
rcr
jp
mov
imul
push
and
pop
mov
leave
imulb
gs
ja
or
add
mov
add
pop
inc
pusha
jl
inc
out
xchg
sub
int
mov
mov
mov
jnp
pop
cs
xor
xor
inc
pop
cmc
addr16
mov
pop
lock
fwait
mov
jnp
xor
test
aam
adc
sbb
enter
mov
cli
repnz
xor
dec
mov
xchg
push
pop
loope
add
mov
inc
xor
sub
xor
lret
fidivl
add
rcl
scas
ds
dec
insb
filds
mov
mov
or
or
popa
dec
push
stc
adc
movsl
add
ffreep
cmp
stos
nop
mov
movsb
sub
mov
pop
test
mov
xor
in
sahf
ret
repz
mov
inc
imul
mov
cmp
outsl
adc
bound
je
jmp
mov
aam
cmp
cmc
push
arpl
jmp
jle
fld
xchg
stos
clc
lcall
sarb
ljmp
xor
or
or
adc
int
jge
pop
sub
sbb
xlat
xchg
inc
jmp
repnz
push
enter
cltd
stc
sbbb
mov
cmp
stos
jle
jae
je,pt
in
imul
jnp
xor
or
aas
mov
lahf
inc
aas
xchg
sbbl
xchg
mov
shrl
mov
fdivs
xlat
jb,pn
adc
jnp
mov
movsb
shrb
push
cmpl
cmp
fnstcw
jo
push
push
rol
fwait
fwait
dec
xor
bound
mov
movsb
or
or
jl
lods
sbb
insl
lret
push
test
xchg
int3
orb
popf
xchg
xor
repnz
xchg
xor
icebp
sub
sbb
out
jne
and
jns
mov
mov
sbb
lret
iret
stos
ret
jl
test
or
add
push
push
add
mov
pop
or
jae
pop
cmpsl
lret
hlt
add
test
fnstsw
or
in
mov
push
imul
js
mov
jno
loop
add
ret
inc
das
out
inc
arpl
mov
mov
loope
rcrl
and
mov
lds
add
sub
sub
pop
mov
repz
jae
add
call
out
outsb
je
jecxz
dec
mov
sub
pop
and
push
xlat
js
mov
rcll
fidivl
cmp
push
and
adc
lahf
cmc
outsl
inc
push
push
xor
rcrl
add
sbb
mov
xchg
jge
lahf
or
std
mov
mov
adc
scas
adc
adc
mov
mov
mov
fistps
pusha
icebp
adcl
push
adc
dec
rol
jge
je
mov
adc
fcmove
imul
mov
inc
lret
jg
movsb
enter
pop
arpl
insl
out
rcrl
xchg
sahf
mov
jge
and
cmpsb
das
xchg
orl
iret
push
adc
xchg
movaps
lods
cmpsb
jp
lock
mov
sub
stos
and
jl
add
test
xchg
nop
sbb
sub
dec
iret
add
cmp
mov
outsb
das
jb
mov
stos
push
cld
dec
sub
nop
mov
cld
int
and
xchg
and
sbb
inc
jmp
cs
fisubs
jo
adc
test
xor
repz
jb
ror
xor
jle
push
aam
or
pop
pop
mov
mov
int
loope
cmp
data16
and
mov
inc
cli
mov
jae
cmp
sub
rolb
push
out
leave
push
shr
add
pop
jmp
add
divl
fisubs
push
les
push
insb
fwait
dec
mov
add
push
out
jne
test
jecxz
in
mov
jp
push
fcmovnu
pop
mov
mov
xchg
mov
shll
mov
hlt
pop
cmp
lret
enter
icebp
xchg
or
leave
push
aaa
stos
loop
pop
lret
insl
adc
iret
pop
xchg
mov
jmp
out
xchg
sub
lods
pop
arpl
sub
pop
jbe
stos
imul
inc
xor
cltd
add
mov
mov
lock
pop
xchg
out
jnp
cmpsb
jp
in
sbb
sub
mov
cmc
cmpsl
jl,pt
push
subl
ret
popf
cmp
popf
addr16
sbb
add
in
jl
xchg
cld
xor
popa
insl
daa
push
les
fs
sbb
inc
mov
repnz
push
das
push
jb
add
add
add
cmp
sub
mov
jne
push
fs
std
std
lods
in
lcall
mov
cmp
inc
inc
mov
fsts
push
cld
push
imul
ret
add
loop
sbb
add
sbb
mov
jl
mov
xchg
ret
lcall
push
xor
xor
mov
mov
js
call
loope
or
sub
sbb
add
xchg
xor
mov
fs
xor
push
mov
enter
xchg
pop
out
sbbb
jecxz
int3
inc
mov
lea
dec
into
stc
pop
pop
bswap
or
mov
jne
mov
mov
loope
jp
gs
fcos
insb
pop
daa
pop
mov
pop
loope
or
jl
jne
lods
enter
jbe
and
add
movsl
cmp
flds
xlat
sub
mov
dec
in
mov
out
mov
xchg
scas
jae
dec
mov
and
outsb
loopne
addr16
xchg
clc
fldt
jb
xor
cmp
not
mov
in
inc
mov
imul
pop
cmp
fdivl
jp
push
sub
nop
lret
sbb
cmp
inc
sub
std
cmp
pop
test
data16
lcall
or
out
mov
orb
jno
das
inc
mov
pop
xlat
rorb
push
jmp
ret
xchg
mov
or
mov
pop
mov
mov
fimuls
and
mov
outsl
add
mov
out
sbb
jg
fcmove
mov
test
cwtl
testl
inc
push
sbb
ret
xor
es
testl
icebp
data16
mov
movb
fstpl
pop
ss
sub
outsl
rcrl
pop
push
out
pop
push
push
jne
lcall
dec
mov
ret
add
scas
adc
das
jbe
and
inc
pop
aas
mov
sbb
lods
ljmp
out
add
pop
mov
xor
ret
js
jge
and
adc
mov
cli
xchg
scas
jns
mov
sub
lea
sarl
loope
gs
sti
fbstp
jecxz
adc
push
ljmp
xchg
dec
and
sahf
int3
outsl
inc
add
xchg
cmp
xchg
or
xor
dec
add
mov
cs
push
inc
cmc
test
ljmp
dec
jbe
pop
outsb
add
les
ja
ror
lods
lahf
add
mov
mov
enter
mov
mov
sub
mov
xchg
call
adc
xor
das
ds
inc
xchg
bswap
mov
ljmp
pop
adc
mov
pop
jo
fs
or
sbb
outsl
les
lea
gs
fyl2x
movsb
into
repz
shr
sub
and
fsubrl
jecxz
adc
pushf
in
aad
cmp
sbb
adc
pop
rolb
iret
xchg
lret
jp
imul
mov
imul
dec
test
ficompl
gs
test
shlb
dec
adc
and
push
mov
sbbb
dec
outsl
pop
call
push
aaa
cmpsb
in
stos
in
dec
out
xchg
pop
in
stos
movsb
nop
sub
movsb
xor
xchg
call
aaa
loope
adc
xchg
out
subl
mov
cmp
add
mov
enter
cmp
int3
test
lds
mov
dec
dec
sub
ret
ret
in
cmc
loope
lret
sbb
or
pushf
cwtl
ret
sti
sbb
leave
imul
cmpl
jnp
jp
inc
ss
and
lret
cwtl
movsb
inc
xor
insl
dec
popf
xor
mov
sbb
and
inc
in
imull
sub
dec
cmp
jp
fadds
jne
hlt
xchg
mov
inc
fstl
add
js
jno
or
add
inc
mov
or
les
jle
add
filds
stos
sbb
and
xchg
sub
mov
test
inc
nop
mov
xchg
repnz
inc
mov
iret
lcall
fstl
sbb
shrb
fildll
jae
aam
cmpl
push
mov
test
cld
mov
test
hlt
test
mov
subl
pop
cmp
in
xchg
push
add
pop
outsl
enter
and
std
sbb
shll
mov
adc
cmp
xor
scas
mov
cmp
dec
fwait
push
sahf
cmpsb
xchg
cmp
insb
mov
js
gs
mov
xchg
jb
xchg
xor
leave
xchg
adc
repnz
xor
incl
shl
cmc
ss
dec
test
outsl
add
std
sar
sub
movsl
push
mov
ja
clc
fistps
faddp
mov
xchg
mov
inc
mov
inc
addr16
popl
dec
pop
push
movb
arpl
add
or
or
insb
adc
fidivs
lods
rol
mov
psrlw
jmp
lds
sub
out
mov
les
push
jno
popf
in
pop
addr16
lret
das
f2xm1
push
jmp
sti
xchg
sub
xchg
xchg
cmpsl
adc
aam
mov
enter
lods
movsb
jbe
pop
mov
inc
bound
test
sbb
adc
mov
das
faddl
jl
add
aam
sbb
sbb
loopew
js
jns
dec
xchg
xchg
sub
call
sub
mov
inc
adc
mov
sbb
and
inc
out
cmpsb
or
loope
cltd
outsl
xchg
lock
sbb
shll
push
adc
daa
sub
cmc
add
pusha
sbb
clc
cmpsl
push
pop
mov
dec
aaa
mov
jg
and
mov
sbb
mov
sub
pop
xchg
mov
add
jae
lds
pop
lahf
dec
cmp
mov
sub
inc
pusha
lcall
pop
inc
ss
minps
ret
sbb
pusha
in
sub
int
add
ficomps
ret
rorb
shlb
daa
pop
int
and
xchg
inc
xor
inc
xchg
out
xchg
mov
scas
and
cmpsl
test
int
loopne
sbb
xchg
fadds
repz
jl
mov
push
mov
mov
frstor
push
sub
imul
xchg
loopne
out
nop
sub
sub
jg
jb
mov
popf
shrl
jne
out
fldl
sbb
jmp
dec
jp
testl
xor
fs
jecxz
mov
xor
mov
jle
stc
and
add
ret
xor
or
nop
mov
xchg
nop
lahf
pop
mov
in
aad
enter
ret
in
lea
xor
les
lods
out
mov
out
pushf
push
jmp
sbb
cltd
jl
sar
mov
inc
lret
lock
adc
lahf
push
jmp
pop
daa
push
push
mov
hlt
aaa
sub
fstl
stos
cli
icebp
imul
pop
push
aas
test
mov
scas
loopne
bound
bound
push
or
enter
mov
out
notb
les
and
lea
xlat
add
mov
fadds
or
mov
out
pop
fcoms
dec
das
cmp
mov
mov
xchg
pusha
inc
jae
sub
aam
push
and
test
push
sub
test
pop
xchg
mov
dec
int
mov
push
icebp
mov
mov
pop
and
mov
feni(8087
xchg
jb
adc
push
push
sub
sbb
rcrb
es
lods
inc
sbb
mov
mov
mov
scas
push
xor
mov
into
lds
in
xchg
and
sbb
mov
test
dec
mov
xchg
jl
out
mov
les
lahf
addr16
stc
xor
mov
sub
imul
rcll
lahf
hlt
movsb
std
push
popf
mov
imul
inc
mov
cld
mov
and
lds
mov
inc
jg
jnp
jmp
loop
loope
rol
mov
std
rorb
popf
sub
mov
cmp
bound
push
insl
clc
insl
int
out
popf
in
add
aad
scas
inc
mov
adcb
icebp
hlt
incl
leave
or
std
fcoml
adc
push
test
enter
out
iret
push
dec
sbb
pusha
cwtl
scas
dec
jle
and
leave
fmuls
mov
sbb
inc
lods
sbb
clc
outsb
cmp
fsubr
fadds
cmp
push
pushf
lods
cmpl
inc
fcoml
mov
jl
pop
cmp
adc
pop
leave
stc
psubq
cltd
fidivrl
decb
gs
cwtl
jle
fucom
data16
add
push
loope
and
lods
imull
fldt
decb
bound
cmpsl
xor
js
xchg
adc
xor
add
xchg
sub
int
push
sbb
pop
push
jns
cwtl
xor
lret
jle
xchg
cld
inc
dec
push
and
mov
adc
cld
or
mov
cmp
mov
dec
leave
rorb
ds
pop
xor
sbb
loope
mov
sub
adc
repnz
nop
scas
xchg
xor
or
dec
ret
pop
mov
cmpsb
std
add
scas
test
aam
cltd
or
lcall
jne
imul
in
cmp
push
xlat
out
call
inc
lret
mov
iret
insl
bnd
mov
das
push
js
mov
mov
scas
lcall
inc
inc
or
and
or
lods
je
icebp
xchg
lods
jbe
dec
or
xor
xor
daa
cmp
dec
in
pop
inc
or
mov
jb
pop
pop
sub
lret
cmc
jnp
inc
add
push
movsl
pop
inc
imul
test
pop
xchg
lcall
fucomi
xchg
rcrb
stos
sub
inc
lret
add
push
jecxz
or
aad
push
and
add
iret
aaa
sub
or
test
mov
pushf
cmp
inc
lods
mov
mov
sbbb
sbb
and
cli
jmp
les
icebp
adc
pop
and
in
aas
in
roll
mov
sub
adcb
in
sub
adc
or
icebp
cltd
xorb
fwait
jl
jecxz
jnp
add
or
fiadds
pop
dec
cli
inc
loop
bound
xor
sbb
push
or
outsb
ret
jecxz
dec
dec
jnp
adc
icebp
es
xor
add
roll
inc
pminub
sti
cmp
dec
lret
pop
test
ljmp
jge
xlat
adc
xchg
mov
push
sahf
add
jae
pushf
sbb
mov
cmp
xchg
mov
sarl
and
inc
test
je
scas
mov
stos
hlt
fs
mov
mov
pop
cmc
negb
mov
js
icebp
sub
jae
and
inc
mov
lcall
fdivrl
lea
dec
pop
pop
push
mov
or
fstpt
cmp
inc
inc
add
mov
fisttpll
xchg
bound
push
mov
jns
addr16
mov
push
stos
and
inc
push
js
inc
jmp
jnp
cltd
pop
jnp
das
in
xchg
dec
shlb
dec
pushf
sbb
fbld
xor
push
out
out
scas
testl
inc
and
cmpsb
mov
jge
popa
cmp
mov
pop
pop
mov
ds
add
mov
cmpsb
mov
xor
adc
cmp
test
ja
jne
pop
and
in
fbld
stos
iret
sbb
in
cmpsl
jnp
int3
loopne
sbb
dec
add
inc
sub
loop
lock
mov
into
lahf
stos
inc
adc
iret
sarl
mov
mov
mov
xor
sti
and
iret
pop
mull
jge
and
ret
or
out
and
dec
pop
les
pop
pop
mov
hlt
mov
out
mov
shlb
cmp
inc
pop
mov
cltd
scas
jae
xor
cmp
push
lahf
jo
and
lret
insl
xor
push
cwtl
jnp
aas
sub
cmpsb
dec
adc
testb
xlat
mov
jmp
push
and
inc
dec
lahf
gs
sbb
call
inc
or
pop
pop
mov
jo
add
enter
add
and
fcmovne
adc
repz
add
imul
add
iret
test
testb
roll
das
push
inc
mov
scas
adc
aad
fcomi
aam
fisubrl
push
subl
cmpb
ja
nop
or
arpl
fchs
sub
mov
xor
mov
adcl
sahf
into
jg
dec
mov
fcomps
inc
aaa
gs
outsb
sub
pop
movl
mov
mov
and
inc
scas
fwait
cld
jb
insb
cmp
mov
loopne
sti
jns
pop
les
out
adc
xchg
jo
dec
insb
jns
outsb
add
jge
cld
ds
adc
in
pop
or
aas
repz
out
cmp
cmp
fidivrs
lea
int
xchg
pop
movsl
xchg
dec
xchg
lret
aad
sub
stos
sub
mov
pop
fisubs
jecxz
cmpsb
sub
and
xchg
xchg
fnstcw
pop
pop
stos
mov
stc
jge
mov
ja
pop
repz
test
cmp
xor
dec
jle
mov
cmp
dec
xor
mov
dec
pop
pop
std
adc
mov
inc
pop
dec
inc
inc
hlt
sti
hlt
test
mov
cmpl
mov
pop
dec
pop
mov
sbb
ja
add
or
addb
or
cmp
jecxz
sub
sbb
rol
jbe
add
push
cs
jecxz
cmpsb
and
add
aaa
mov
pushf
cmp
iret
mov
in
adc
pop
aad
pop
mov
fnstcw
dec
mov
jl
push
js
inc
adc
sub
into
int
insl
stos
imul
push
pop
addr16
pop
cmp
jecxz
ret
pusha
insb
adc
pop
push
or
decl
or
jne
pop
lcall
pop
gs
popa
mov
push
mov
pop
inc
int3
rolb
and
dec
test
and
push
mov
test
jle
jmp
sub
ret
pushf
xchg
jmp
fs
cs
jle
cld
jle
nop
fs
jmp
xchg
loopne
out
adc
jno
pop
shrb
rcrb
fcom
in
jmp
repz
xorl
or
sbb
out
xor
dec
lea
mov
cmpsb
jo
inc
jo
push
rolb
loop
jns
in
adc
clc
push
sbb
push
sub
xchg
aad
mov
add
pop
out
daa
xor
ror
cld
ret
daa
mov
mov
mov
jb
and
mov
test
push
insl
pop
or
cltd
mov
lods
pop
mov
mov
xor
sahf
cwtl
inc
int
mov
fsts
push
out
outsl
xor
cmpsb
addr16
mov
lahf
xchg
clc
jo
adc
scas
mov
int3
jp
into
nop
jo
mov
xchg
and
adc
jo
xchg
icebp
adc
mov
xchg
push
mov
inc
rorb
jl
push
mov
fimuls
pop
or
mov
push
xor
sbb
push
mov
std
imul
addr16
mov
and
cmp
or
cld
pop
pop
pop
subb
sub
sub
testl
ret
mov
or
addr16
ficomps
insb
mov
mov
movsl
stos
or
or
in
xchg
push
es
sub
pop
out
inc
mov
push
or
or
movsl
mov
scas
mov
sbb
cmp
lcall
xchg
dec
ds
dec
push
adc
or
std
stc
das
dec
dec
idivl
and
stc
dec
push
mov
fxam
push
arpl
jmp
pop
inc
ss
cmpsb
mov
push
mov
out
push
int
icebp
inc
or
push
nop
mov
add
or
in
int
sub
bound
push
fcmovnb
or
add
in
jmp
jb
sti
shll
andb
ret
sbb
lds
icebp
int3
cmp
cmpsb
fisttpll
icebp
push
dec
cmp
sub
jp
call
sbb
aad
out
jge
dec
or
mov
mov
and
mov
mov
adcb
sub
cmp
push
cmp
sbb
or
mov
fsubl
daa
cmc
inc
rol
lods
sub
jl
jbe
pop
mov
push
cmp
push
push
mov
mov
fisttps
mov
test
daa
add
out
and
push
cmp
mov
or
pusha
mov
call
sarl
or
cmpsb
out
mov
inc
cld
jmp
sub
xor
fildll
cmpsl
cmpsb
andb
inc
lods
mov
rolb
repz
sub
lods
jmp
pop
pushf
cmp
add
dec
mov
shl
insb
lods
dec
xchg
lds
lahf
dec
xchg
pusha
out
inc
mov
mov
notb
fcmovbe
test
mov
sbb
and
je
popa
mov
shlb
push
out
xchg
in
xor
and
sbb
xor
pop
fldl
aad
fistl
sub
in
sbb
gs
xchg
sahf
pmaxsw
ss
pop
xchg
sub
jne
das
stos
jge
fsubrs
in
fsubrl
cltd
mov
iret
test
popl
mov
stos
imul
dec
push
cmp
jo
dec
or
jnp
adc
cmpb
mov
push
xchg
insb
fisttpll
vminsd
ret
iret
out
sub
adc
or
add
mov
push
outsb
add
jno
dec
orb
rcll
jne
cmp
inc
or
dec
or
stc
jecxz
inc
mov
push
mov
cmp
or
fsubs
lds
lods
pop
std
dec
int3
jl
das
negb
adc
iret
imul
mull
cmc
out
pop
jns
clc
scas
jmp
mov
daa
jns
repz
xorb
xlat
sub
sti
jb
mov
addl
push
jne
xor
test
pop
jb
nop
int
sbb
shl
fnstsw
push
add
lret
mov
sub
scas
fst
out
aad
mov
mov
subb
xchg
test
cmpsb
mov
mov
fsubr
icebp
jb
test
shrb
cmp
fwait
adc
dec
pop
jno
push
push
pop
lods
dec
pop
repz
push
popa
test
sbb
fdiv
aad
push
leave
cmp
lods
aaa
aam
stos
mov
mov
jp
notb
mov
xor
add
adc
stc
scas
cs
outsb
idivl
inc
mov
bound
cs
mov
scas
jns
sbb
push
push
xchg
sbb
pop
rorl
mov
test
sti
sub
lds
mov
fsubr
fstps
cltd
mov
out
scas
jns
dec
push
in
jo
push
cmp
das
out
shll
loopne
pop
cmp
xchg
adcb
or
or
data16
andb
out
movsl
xor
mov
icebp
sbb
cmp
fbstp
inc
std
jb
push
mov
jmp
lret
dec
xchg
or
and
and
addl
xor
add
adc
cmp
cmc
xor
or
out
pop
orl
flds
andb
lahf
cld
test
and
test
dec
cmpsb
sti
scas
mov
fwait
and
cmp
stos
adc
clc
push
insb
scas
pop
aaa
jbe
cmpsb
mov
xchg
in
ss
outsl
and
xor
roll
popf
and
das
push
sarl
sahf
pusha
sti
repz
and
call
dec
mov
lock
stos
push
lods
add
mov
scas
jno
mov
jns
xchg
mov
aas
fiaddl
jp
int3
jecxz
push
sahf
xchg
loop
cwtl
pop
pusha
insb
out
cmpsb
enter
out
pop
fiaddl
cld
xchg
ss
push
pusha
pop
popf
inc
pushl
xor
cmp
mov
outsb
lcall
xchg
xchg
cmp
fdivs
outsb
pop
mov
and
pop
add
cli
movups
sub
mov
loopne,pt
outsl
shl
popf
mov
sub
add
dec
add
cwtl
sub
push
push
idiv
dec
in
inc
add
repz
lock
xor
lock
and
dec
scas
cltd
shrb
sbbl
sub
xchg
mov
orl
decb
jb
jmp
jo
jg
lret
dec
dec
jnp
or
push
push
push
stos
aas
mov
loop
jo
sysenter
jmp
mov
xlat
mov
daa
cmc
jmp
add
loopne
sbb
call
hlt
lcall
mov
leave
scas
leavew
lret
dec
icebp
push
add
out
pushf
daa
pop
mov
jno
fistpl
push
inc
pushw
aas
mov
psraw
pop
mov
fsubrs
mov
loopne
loopne
test
push
push
inc
sbb
call
cmp
push
lock
sahf
push
ffreep
adc
dec
inc
sbb
jno
mov
adc
mov
push
mov
out
mov
push
or
add
test
into
push
ja
std
and
fcmovb
adc
int
fnstcw
stos
mov
movsl
insl
mov
cmc
mov
les
out
cmp
xchg
test
outsl
xlat
jb
mov
pop
push
xor
sub
jae
fadd
xor
ret
or
adc
aaa
push
icebp
jl
fs
push
stos
adc
fistpll
add
adc
jae
inc
or
sub
pop
arpl
fucom
mov
mov
test
outsb
sti
lea
jl
or
dec
jo
dec
int3
cmpl
push
fistpl
jp
jg
prefetch
mov
dec
aaa
call
in
jnp
imul
sarb
test
mov
pop
loopne
jmp
mov
dec
xlat
enter
cmp
jno
jecxz
jmp
mov
test
xchg
ss
xchg
push
mov
mov
std
pusha
jno
xorl
push
out
mov
dec
xchg
loop
or
in
fmul
call
mov
push
jno
aas
mov
dec
push
sti
sub
inc
movsb
or
adc
out
in
ja
inc
adc
add
dec
xor
loopne
nop
push
in
outsl
out
push
inc
int3
fsubl
cmpsl
xchg
and
movsl
add
sbbb
jnp
daa
cmp
lcall
pop
xor
iret
lret
notl
inc
gs
mov
rcrl
imul
cmp
fwait
add
dec
xchg
push
sub
pop
sub
xor
push
mov
in
fwait
xchg
inc
jnp
fwait
aam
pop
xchg
cli
fldcw
loope
add
hlt
testb
lods
and
loop
insb
nop
jg
fstps
loope
mov
sub
or
lahf
mov
and
fwait
hlt
xchg
mov
fmull
sbb
jge
clc
push
and
bnd
testl
pop
into
and
sub
xchg
inc
jno
aad
loopne
enter
dec
jg
call
or
adc
add
xchg
imul
mov
mov
sti
push
fidivs
dec
sbb
adc
icebp
cmp
jge
push
mov
dec
xor
jns
mov
push
adc
xlat
movsb
jb
xchg
in
notl
inc
xchg
cmpsl
lock
in
lret
mov
or
pop
ret
add
sub
xchg
jb
jnp
sarb
or
cltd
adc
mov
test
ds
inc
shrb
adc
fdivs
mov
push
imul
jge
xchg
cmpsb
cmp
arpl
sahf
cmp
push
sub
pmaxsw
enter
enter
mov
lahf
xor
push
sub
arpl
popf
test
or
ficompl
sub
je
shrb
stc
loopne
dec
repz
jbe
fstl
repz
or
cmp
add
in
inc
cli
ret
out
shlb
add
js
cmp
sbbl
or
add
xor
mov
jne
inc
xor
fwait
out
sub
clc
add
pop
in
mov
in
xor
push
jg
pop
jmp
int3
sbb
push
push
mov
mov
cld
or
xor
cli
jg
lods
xor
lds
in
push
jge
cmpsb
xchg
in
adc
jecxz
es
rcrb
xchg
inc
scas
cli
push
in
rolb
jecxz
imul
sub
xchg
out
xor
jae
sub
xchg
cltd
mov
imul
xor
scas
nop
sbb
mov
loope
cmp
bound
pop
jns
ss
push
sbb
add
mov
mov
sub
ljmp
inc
ja
negl
das
xchg
xchg
fidivrs
push
mov
cmp
mov
fistps
stos
rcl
mov
xor
aad
mov
dec
cmp
jo
lret
loope
jmp
gs
pop
test
cmpsl
addr16
aaa
lods
fwait
push
or
dec
vmovaps
repnz
lahf
mov
inc
pop
mov
sub
pop
xor
inc
flds
mov
gs
push
or
cmp
pushl
add
inc
leave
and
inc
lods
xlat
xchg
xchg
imul
loope
jne
ficoml
and
sbb
divl
and
and
adcl
or
sbb
arpl
lea
push
xchg
pop
pushf
test
jne
scas
arpl
sbb
mov
mov
push
push
in
leave
sbb
cmpl
cs
arpl
lods
pushf
jns
mov
jp
fs
clc
jae
clc
xor
cli
lahf
outsl
dec
or
mov
int3
inc
std
lahf
mov
or
lret
adc
outsb
push
cmc
dec
adc
pop
dec
mov
push
pop
adc
repz
push
jl
popa
mov
mov
pop
xor
add
pop
add
cmp
pop
shlb
push
sbbl
xchg
mov
mov
adc
fistps
ret
div
dec
adcl
aas
and
shrb
hlt
inc
enter
mov
imul
mov
lahf
popf
lock
pop
sub
stos
adc
xor
insb
adc
xor
push
aam
mov
enter
sbb
push
dec
insb
lea
es
sub
xchg
addr16
mov
mov
xor
fnstcw
pop
popa
mov
jmp
jmp
ror
mov
and
mov
hlt
inc
into
push
movsl
mov
adc
sarb
jo
mov
nop
pop
sub
push
sub
es
cmp
mov
stos
inc
mov
sti
ljmp
pop
movsb
and
or
cld
ffreep
test
adc
js
add
in
adc
cmc
mov
ja
test
rol
jmp
pop
adc
push
mov
lcall
andl
or
cltd
pop
in
shrl
and
push
or
aam
sti
jge
push
xor
and
add
jmp
pop
lcall
bound
dec
into
in
mov
lods
mov
movsb
std
popf
sbb
arpl
mov
rclb
mov
dec
fidivs
cmc
jp
out
arpl
or
adc
movsl
mov
add
pop
aas
add
fisttpll
bound
or
cmpsb
push
jns
idivl
add
leave
stos
fbstp
shll
les
dec
add
cwtl
call
jge
into
push
mov
fs
ljmp
inc
dec
loope
inc
aaa
and
pop
lret
je
cmp
test
enter
shll
mov
mov
sbb
in
mov
ret
test
cmp
xchg
stc
cld
dec
jbe
shlb
push
in
lahf
in
push
int
pusha
ljmp
xchg
adcl
push
mov
inc
out
add
int
or
mov
jno
inc
xor
pop
sub
mov
cld
jmp
pop
mov
push
popa
inc
out
xchg
test
ficoms
mov
mov
jne
adc
shl
cmc
mov
aaa
mov
fwait
fsubrl
ret
fsubrl
inc
cmpsb
inc
into
jo
aad
or
cmp
push
int3
nop
mov
movsl
enter
mov
and
stos
xchg
movswl
jmp
les
jp
fsubrp
and
xchg
push
jae
jb
imul
out
adc
push
mov
push
mov
lock
das
mov
pop
mov
or
inc
xor
add
popf
mov
out
fadd
es
push
add
fcomp
dec
sbb
or
xchg
imul
ljmp
mov
inc
inc
adc
rcll
jecxz
jl
xchg
jp
iret
iret
dec
xchg
mov
mov
push
fistl
cli
js
and
xchg
cld
push
cld
rcll
mov
bound
cmp
in
fs
arpl
fidivl
fldlg2
fcoms
cli
pop
mov
push
add
fldln2
mov
loope
fsubrl
ja
xor
xor
mov
and
jns
rorb
pop
or
arpl
flds
pusha
nop
popl
lcall
jle
stc
mov
xor
daa
fnstsw
lret
mov
repz
add
mov
repz
adc
push
outsl
jno
mov
cmp
lods
push
adc
popf
sub
cmpsl
lods
jno
in
imulb
inc
adc
test
cmp
loope
lea
adc
push
dec
jbe
sub
mov
mov
ret
clc
movsl
cmp
call
ljmp
cmpsb
mov
pushl
imul
enter
adc
inc
int3
sti
fisttps
inc
out
ljmp
sbb
arpl
jecxz
push
push
mov
stos
insb
pop
push
int3
dec
repnz
fnstcw
ret
dec
jnp
mov
jle
fdivrs
pop
mov
cld
ret
loope
inc
xor
mov
mov
sbb
jp
lea
cwtl
imul
inc
lcall
xchg
xchg
and
sarb
adc
push
out
xor
cmc
push
and
or
cmpb
shlb
sbb
jne
lock
xchg
lea
insb
jns
imul
dec
jnp
or
subl
mov
mov
lea
jne
mov
inc
jecxz
iret
ret
sub
ljmp
sbb
jnp
push
in
loope
lds
movsb
pop
cmp
xor
xchg
xorl
push
stc
pop
fsubrl
sub
jl
sbb
xlat
out
dec
stos
out
arpl
jnp
jle
xchg
cmc
out
shrl
push
into
jb
pop
xorb
mov
or
dec
cmpsb
or
mov
inc
pusha
mov
imul
mov
sti
push
cmpsb
outsl
mov
cwtl
pop
mov
negb
push
mov
adcb
imul
data16
jae
mov
inc
es
inc
daa
jb
cmp
push
sub
inc
mov
std
repz
inc
movsl
inc
cld
imul
ljmp
ds
shll
popf
stc
aam
push
mov
pop
xchg
movsl
xchg
mov
jo
pop
mov
fisttpll
into
jge
adc
mov
adc
clc
ljmp
cmc
jle
sub
push
sbb
or
ja
jle
sub
xor
mov
sbb
fsub
cmc
ja
inc
jnp
mov
lea
fcmovbe
bnd
jne
jb
inc
mov
cmpsl
loope
cmp
inc
pop
and
mov
dec
icebp
leave
sbb
jp
ret
push
adc
pop
push
pop
pop
movsb
sbb
in
and
mov
fistpl
push
xor
lods
cltd
jecxz
inc
cmp
push
fmull
sahf
jbe
scas
mov
or
shlb
sahf
dec
or
clc
adc
jp
mov
pop
out
mov
repnz
mov
rol
in
into
das
jnp
lret
sbb
lods
out
les
pop
inc
cmc
fcomps
xchg
addr16
push
das
daa
cs
aad
dec
inc
mov
sub
cwtl
jg
fwait
sub
dec
adc
out
arpl
or
int
push
scas
push
popf
jecxz
std
sub
or
shll
cwtl
mov
fnsave
ljmp
cmp
pop
push
repz
mov
lea
gs
mov
mov
hlt
dec
cmp
xchg
mov
jnp
mov
cmp
pusha
outsl
sahf
in
jo
inc
xchg
dec
mov
lock
movsb
pop
sbb
je
movsb
sbb
ds
xor
aas
push
pop
sub
pop
xor
mov
lcall
or
mov
psadbw
cwtl
stc
fchs
xor
xchg
jne
cs
sahf
js
in
mov
sub
test
or
mov
sub
out
andl
push
cmc
sti
inc
mov
xchg
mov
cmpb
push
in
push
ja
cmp
mov
xchg
adc
stos
add
rcrb
xchg
adc
loopne
adc
lds
and
dec
icebp
add
cltd
xor
mov
fadds
push
sbb
push
sbb
xchg
mov
and
jo
out
flds
xchg
mov
xchg
and
cltd
call
push
or
xchg
mov
out
mov
cmp
push
sub
jns
ret
xchg
push
scas
int
jle
frstor
out
and
or
out
jbe
xchg
lcall
popa
daa
xchg
cmp
aaa
pop
jl
mov
into
iret
iret
and
icebp
cmp
push
push
sbb
pushf
cmpsb
mov
add
scas
repz
jne
call
and
or
jge
mov
adc
adc
repz
ja
pop
sti
push
lods
inc
icebp
pop
rol
rcll
mov
push
fistl
stc
mov
hlt
test
xchg
mov
pop
ret
and
rcrl
push
xlat
jno
inc
test
lods
lahf
fisubs
repz
aaa
adc
out
test
lock
fsubrs
pushf
cmp
and
mov
addr16
in
cmpl
mov
and
xor
sub
sub
sbb
xor
mov
xor
hlt
push
mov
cs
frstor
mov
push
shll
sub
mov
sbb
lds
stos
add
adc
cmp
pop
addr16
stos
mov
or
lret
xlat
dec
in
add
mov
sti
mov
cmp
imul
ret
pushl
push
das
rcpps
test
pusha
lock
push
lods
pop
ljmp
jns
push
xor
sbbl
jb
ds
push
inc
pop
push
ret
xor
jns
or
cmp
mov
in
push
inc
xchg
cmp
jae
push
push
mov
das
dec
lret
lret
push
mov
mov
add
jno
mov
fcomps
scas
pop
mov
pop
repz
sti
dec
les
rsm
in
shl
stos
mov
std
call
jnp
lret
inc
outsl
std
mov
ret
les
mov
repnz
lods
cmp
jle
push
and
jo
inc
and
sbb
mov
sbb
pop
outsb
movsb
xchg
icebp
and
ret
call
lds
mov
cmpl
sub
sbb
sbb
hlt
adc
xor
mul
mov
jecxz
adc
insl
test
cmp
push
test
mov
jno
insl
and
daa
in
fcompl
loopne
cmp
sub
in
cmpsb
popa
adc
int
sbbb
outsb
into
or
dec
pop
push
adc
push
ss
repnz
adc
jl
xor
addr16
pop
loopne
enter
mov
add
aaa
add
mull
cmp
pop
sub
das
das
mov
or
push
mov
pusha
fxch
jno
sub
mov
pop
push
xor
loopne
xorl
adc
sub
stos
lahf
aas
xlat
lret
out
sub
and
add
jg
out
rcrl
mov
outsl
mov
loope
pusha
dec
or
outsl
sbb
sub
mov
lahf
add
sub
mov
jns
and
inc
sub
xor
xchg
dec
xchg
cmpsb
sub
xor
pop
repnz
insl
jno
xchg
jle
insl
xor
arpl
xor
mov
and
orl
lea
test
pop
xchg
mov
loop
dec
mov
mov
ret
mov
jl
roll
and
sbb
test
popa
push
add
sahf
sbb
jae
adc
mov
rol
call
cmp
mov
pushf
and
das
push
lcall
clc
sarb
and
push
jmp
ja
jb
aas
test
lcall
movsb
aas
popf
xor
scas
je
rol
cld
shlb
dec
and
xor
aad
aaa
adc
xchg
adc
xor
fwait
jg
inc
push
add
push
ja
shll
fucom
adc
lcall
push
hlt
and
lods
xlat
adc
in
mov
inc
ss
jp
ds
in
pop
rcrl
cmc
or
and
push
pop
aas
jb
inc
adc
stos
sbb
out
sbb
inc
cmc
mov
dec
jo
in
test
pop
jnp
femms
js
bound
mov
sub
sahf
scas
cltd
lods
ljmp
das
nop
inc
js
mov
mov
stos
cmp
mov
adc
pop
cmc
jl
test
inc
std
lea
and
movsl
xor
mov
pop
cmp
bound
and
and
or
sbb
imul
add
mov
mov
push
psubusb
add
test
and
mov
inc
sbbb
mov
scas
pop
cmpb
push
pop
cli
flds
adc
xor
push
call
cld
orl
notl
std
xor
cmpsl
or
adc
pop
mov
sbb
xor
dec
or
mov
sub
lea
sub
jl
sbb
xchg
sub
adc
jns
loop
sbb
addl
mov
stos
out
insb
cmpsl
dec
rcrb
gs
and
popa
inc
push
jmp
sub
adc
addr16
lods
mov
ljmp
cmpsl
xor
sbb
jno
lods
data16
mov
andb
test
pop
std
js
movsb
dec
out
fimuls
cld
push
pop
or
inc
and
sbb
xor
repz
inc
test
adc
xor
fdivp
xlat
inc
cmp
fstps
inc
jnp
ljmp
xor
test
pop
mov
fwait
cmpsb
cmp
dec
je
mov
ss
mov
mov
cmp
pop
aas
push
adc
add
jns
enter
adc
push
shrd
lods
ret
adc
push
clc
test
mov
cs
mov
in
std
movsb
jbe
mov
fdivrs
movsb
dec
inc
call
fwait
ljmp
pop
pop
or
stos
jo
cmpsb
int
test
jmp
jo
loop
dec
xchg
mov
mov
mov
out
xor
xchg
imul
inc
or
ss
rclb
mov
shll
pushf
jp
jg
lcall
scas
adc
or
in
outsl
in
sub
sbb
arpl
inc
or
scas
outsl
add
mov
add
mov
popa
dec
push
fdivrs
xchg
in
gs
or
imul
repz
call
jl
pusha
fcmovu
mov
hlt
enter
pusha
jge
popf
add
push
pop
scas
cs
testb
and
sub
les
sub
push
push
mov
sub
sbb
xor
pop
add
cmp
cmp
cmpsb
dec
sbb
js
xchg
jecxz
repnz
mov
inc
xlat
dec
pop
xor
cmp
push
xchg
jnp
leave
xchg
leave
add
lret
sub
pop
std
mov
inc
ss
cmp
ljmp
ss
popa
ljmp
mov
fdivrl
inc
stc
sarb
mov
nop
adc
movl
jae
arpl
pop
arpl
mov
lods
push
fistps
pop
xor
or
test
ss
in
jne
mov
add
loopne
cmp
mov
and
or
jnp
mov
test
adc
lahf
pop
sarb
mov
xor
fwait
mov
push
mov
rclb
aad
add
lahf
inc
sbb
hlt
shrb
stos
mov
jb
loopne
jge
ljmp
cmc
mov
push
sub
sbb
in
mov
out
popf
push
push
je
xor
jns
pop
mov
sbb
cmc
adc
xchg
adc
push
iret
mov
cwtl
pop
cld
fs
xor
push
int
dec
inc
dec
and
mov
fisttpll
sub
xlat
dec
cs
jmp
and
jno
xor
les
push
hlt
cmpsl
stos
push
mov
cmp
xchg
leave
arpl
xchg
xchg
xor
aad
mov
pop
sti
lds
pushf
xchg
test
pushf
mov
out
jge
mov
out
cwtl
arpl
hlt
and
arpl
clc
rcll
push
jo
xor
ja
pop
idivl
js
cmp
repz
mov
jl
push
in
outsb
sbb
hlt
rorl
scas
adc
cltd
push
addr16
pop
dec
mov
jecxz
inc
xorb
pop
iret
fdiv
dec
xchg
jae
loopne
push
or
lods
andl
xor
ret
out
inc
xor
rclb
pop
jl
das
adc
dec
xchg
pop
fisttpl
and
in
cmp
mov
jne
or
jne
ret
pop
dec
fs
in
inc
and
inc
sbb
dec
jae
enter
pusha
xor
mov
fucomi
xorl
xchg
sub
addr16
cmp
jl
in
fiaddl
xor
xlat
jb
push
add
push
dec
jl
or
repnz
cmp
add
scas
adc
jb
test
js
cltd
mov
mov
lods
test
sub
xchg
sbb
aam
sub
in
stos
pop
ss
add
out
mov
jo
sbb
nop
aam
lret
jnp
aam
aaa
dec
repz
fwait
aam
sahf
loope
mov
mov
fnstsw
pop
daa
and
xchg
aas
gs
int
xchg
mov
add
dec
or
ret
ds
dec
aaa
in
mov
push
sub
and
jecxz
test
test
or
mov
insl
xchg
test
mov
sbb
frstor
mov
test
stc
shrl
or
jns
push
xor
xor
mov
cmp
ljmp
jns
push
popf
fcompl
sahf
xchg
mov
xchg
pop
pop
sbb
shlb
rcrb
adc
call
je
push
pop
cmp
sub
jns
push
lock
add
xchg
filds
sub
nop
out
and
aaa
jnp
mov
pop
pop
push
xchg
cmpsl
jb
jb
fidivs
cmp
dec
rol
addr16
xchg
vpermil2pd
les
pop
sub
outsl
mov
iret
xchg
mov
jp
xor
inc
mov
dec
mov
gs
mov
mov
stc
and
add
test
pop
out
mov
mov
mov
fildll
jno
repz
vmread
cli
insl
xor
mov
pop
in
lret
int3
subb
sbb
sbb
or
stos
rcrl
xchg
push
insl
sub
scas
sub
daa
pop
or
push
stos
cwtl
pop
jb
add
je
push
lds
mov
js
add
sub
movsl
pop
jb
and
push
cmc
fimuls
xor
mov
sub
cltd
out
popa
xor
adc
xchg
mov
sbb
pop
inc
aad
in
cltd
mov
mov
push
adcl
xchg
pop
or
addr16
adc
rcll
leave
fisubl
mov
in
sub
mov
inc
add
add
into
mov
and
imul
insb
fs
jae
andl
jae
sub
cmp
test
leave
sbb
inc
test
cwtl
test
add
pop
lea
clc
pop
sti
pop
rorb
xchg
aas
loop
lea
jge
data16
fstps
cmc
pushf
or
fisttps
adc
scas
xchg
imul
fnsave
ret
mov
fs
ret
xchg
xchg
ljmp
jne
pop
inc
imul
mov
inc
lea
icebp
and
out
sub
adcl
lret
mov
test
dec
mov
pop
outsb
add
pop
xlat
mov
mov
hlt
sub
dec
adc
lock
fnstcw
shll
adc
push
dec
cmp
in
ljmp
jp
js
in
js
cmp
or
xchg
in
js
scas
pop
fidivs
dec
mov
movsl
pop
xchg
dec
cmp
lock
sub
pop
repz
fcoms
mov
mov
jmp
mov
push
orl
dec
repnz
push
loop
loope
mov
das
jo
add
sarb
lds
mov
roll
dec
sub
cmp
add
pop
cmpsl
or
clc
xchg
jmp
pop
ficompl
adc
xchg
jbe
or
jnp
pop
adc
fldcw
push
or
es
jmp
nop
add
push
scas
stos
popw
bound
mov
outsb
mov
popf
or
fs
std
cmp
lea
mov
adc
shrl
jecxz
adc
or
inc
cmp
sub
insb
rcrb
adc
fcoms
movsb
cwtl
cwtl
sub
mov
mul
ret
inc
in
popa
adc
pop
ret
jno
cmpsb
or
xor
stos
aaa
aas
sti
cmp
mov
fldt
loopne
jp
loope
in
jmp
xchg
mov
dec
push
xor
in
leave
pop
cmpsl
mov
mul
loop
dec
in
mov
sbb
cwtl
daa
loope
adc
mov
push
fwait
xchg
xchg
hlt
adc
push
xor
fld
popl
in
adc
and
jg
pushf
fmull
movsl
dec
lret
pop
les
clc
sbb
insb
popf
push
mov
cmpsl
leave
mov
pusha
pop
push
test
shll
stc
pop
mov
pop
or
ja
in
cmpsb
enter
xchg
cmp
xor
popa
and
out
inc
cltd
pop
mov
cs
fneni(8087
sub
mov
mov
sub
dec
out
jl
adc
jb
adc
ljmp
cwtl
hlt
out
sub
jbe
je
and
stc
sbb
ljmp
lea
addr16
out
add
pop
jb
les
cmp
mov
fmuls
fs
popf
aaa
ret
outsb
push
addr16
fs
lret
imul
aaa
adc
push
dec
inc
aaa
mov
or
es
or
insl
imul
adc
push
pop
int
lods
mov
dec
out
in
ljmp
mov
arpl
stc
leave
mov
cwtl
faddp
jae
add
iret
sbb
cli
push
xchg
cmp
sub
pusha
std
pushf
adc
in
jle
jbe
push
jo
mov
enter
xchg
jg
adc
aad
or
mov
cld
enter
sub
cwtl
add
mov
jns
jbe
ret
sbb
jne
mov
lcall
stos
jns
inc
mov
out
jbe
lret
adc
hlt
jle
int3
ret
shlb
imul
jo
out
adc
andb
fdivrl
test
xor
mov
pop
ret
mul
jbe
pop
ret
movsl
mov
shl
dec
outsb
ja
test
inc
mov
repnz
insb
and
mov
fs
out
cmc
pop
arpl
inc
fistpl
adc
negb
push
lea
pop
pop
ret
jmp
xor
ljmp
addb
and
jb
sub
rcrb
jmp
mov
in
call
xchg
cli
push
jge
stos
aad
popf
loopne
jg
mov
pop
mov
leave
rolb
js
jno
xor
xlat
in
int3
sbb
adc
cs
adc
mov
push
int
xlat
aam
inc
arpl
or
jl
push
pop
xchg
mov
cltd
sbb
das
fildll
xor
mov
or
pop
xor
or
sub
sti
sarb
sbb
mov
xor
cltd
mov
out
pop
inc
lret
sub
add
or
or
fsubl
add
push
ds
cli
std
leave
aam
cmp
mov
pushf
pop
pop
pusha
add
lret
fstpt
xchg
xchg
mov
arpl
shlb
shrb
mov
cltd
in
mov
pop
repnz
loope
in
std
movsl
lea
repz
enter
add
adc
daa
jnp
jne
popf
lds
fsubrl
pushf
lahf
inc
rorb
imul
sub
push
xchg
and
out
xchg
mov
mov
inc
xchg
jecxz
add
ljmp
sbb
mov
xchg
scas
shll
xchg
cmp
pop
sar
loop
fimull
in
cli
cmp
fs
int
mov
mov
jno
out
xchg
jns
insl
push
jb
jns
std
cwtl
add
and
dec
es
mov
pop
and
mov
imul
mov
shrb
mov
sub
clc
scas
lahf
int3
mov
sbb
test
xchg
js
or
incb
and
in
in
cmp
int
outsl
cmp
scas
sub
mov
lea
fcomps
mov
xlat
jns
xor
jecxz
xor
xchg
sbb
data16
add
insl
stos
pop
nop
lds
sub
incl
or
lods
add
sbb
shrd
fcmovnu
cmpsl
inc
fwait
leave
adc
clc
shl
jg
imul
mov
and
lock
pop
testl
arpl
dec
inc
aas
cmp
imul
add
lea
xor
fstps
call
pushf
out
and
sbb
or
lret
xor
call
fwait
pop
mov
in
fwait
cmpsl
sub
fcoms
mull
inc
hlt
mov
fwait
rcll
push
dec
xlat
jle
or
movsl
mov
sbb
cmp
cmc
and
sbb
mov
andl
mov
int
clc
add
mov
je
xor
xchg
xchg
rorl
fisubl
push
mov
pusha
cmc
mov
loopne
fsubp
sahf
add
pop
lds
ret
loop
lds
stos
out
sti
sub
sbb
xchg
in
out
pushf
or
dec
repnz
std
leave
in
sub
dec
xchg
test
cltd
add
sub
adc
out
add
insb
mov
mov
dec
lahf
lods
xor
add
adc
rcl
xor
sbb
adc
bound
mov
aad
dec
sti
xchg
xchg
and
test
insl
std
in
mov
stos
insl
mov
mov
fucomp
dec
adc
aad
ss
sbb
jge
not
dec
lods
fnsave
jecxz
in
push
mov
adc
dec
xchg
jns
lds
mov
sub
pop
std
aad
ss
rolb
insl
dec
clc
mov
fists
lea
mov
jo
push
out
push
cmpsl
sti
daa
jmp
inc
daa
nop
inc
in
inc
ds
mov
and
jg
xchg
dec
pushf
ficoms
and
push
jecxz
xor
push
fildl
sbb
pop
mov
ror
push
shlb
roll
mov
adc
insb
push
lret
out
pop
fiadds
data16
jl
sbb
out
sbb
outsl
in
xchg
sub
sub
mov
icebp
fistpl
cltd
movsl
sahf
test
test
inc
lret
sarb
nop
repz
ss
loope
pop
pushf
sbb
jge
mov
insl
es
lret
inc
lcall
cmpsl
ds
cld
dec
test
cmp
insl
fists
inc
push
inc
leave
cmp
das
loopne
push
push
nop
aam
dec
inc
gs
mov
dec
int3
dec
jns
dec
int3
out
or
fcoms
and
dec
push
mov
icebp
iret
sbb
mov
jecxz
jge
loopne
or
mov
push
data16
enter
das
idivl
push
inc
mov
into
inc
mov
mov
or
lock
xlat
aam
cmp
pop
addr16
aas
daa
push
fldenv
clc
lock
adc
movsb
sub
movsb
arpl
mov
lcall
loopne
and
dec
int3
test
subl
outsb
cmpsl
dec
inc
aad
ljmp
je
sbb
jg
rorb
inc
shlb
pushf
jns
ja
out
push
push
icebp
sahf
cld
fdivrs
push
movsb
adc
cld
inc
sbb
adc
sbb
mov
sub
dec
pop
or
es
sub
pusha
push
jle
dec
bound
xchg
mov
push
sbb
into
call
lret
mov
xchg
jo
or
stc
add
mov
xor
addb
jp
adc
in
dec
into
cmp
repz
mov
insl
loope
es
xor
lretw
ds
mov
xor
mov
pop
fidivrs
sbb
xchg
nop
push
popa
inc
or
jmp
and
aas
cmpsl
addr16
test
mov
mov
repz
pop
cmp
jnp
leave
sahf
jne
ret
mov
mov
ss
pop
mov
and
cmp
rolb
insl
mov
out
ret
push
jp
and
or
inc
popf
dec
sub
inc
add
xor
fimull
mov
mov
lea
jae
sub
into
imul
or
aam
dec
test
ds
sahf
loope
loopne
add
mov
sti
fs
je
sbb
push
pop
pop
jo
and
xchg
push
push
jb
testl
scas
stc
mov
mov
popa
bound
dec
or
fsubrl
add
pop
jge
jbe
jg
cmpb
out
pop
xchg
test
xor
xor
adcl
test
mov
inc
test
stos
xor
jecxz
sub
mov
add
dec
add
push
inc
mov
add
jle
sub
arpl
repz
fsubl
cwtl
insb
out
aas
or
mov
sbb
cli
add
adc
jnp
decb
push
ljmp
adc
and
and
loopne
lea
fwait
mulps
mov
xchg
adc
jbe
pop
out
gs
pop
jb
cmp
cmpsl
jae
cmp
or
mov
out
dec
push
jnp
lcallw
xchg
and
shrb
fisubrl
mov
lea
and
pusha
nop
jmp
lcall
push
or
fcoms
mov
jb
cli
sbbb
adc
sbb
mov
or
sub
stos
movb
xor
xorl
sahf
mov
or
push
cltd
inc
cmp
inc
jp
inc
dec
cmp
jns
fdivrl
add
outsl
pop
imul
push
xchg
mov
int
loop
outsl
inc
push
mov
flds
mov
pop
aas
lea
pop
enter
mov
fiadds
fisttpl
dec
and
add
movsb
or
xor
sub
je
push
add
insl
shrb
ds
test
mov
mov
xchg
or
leave
das
mov
mov
cmp
pop
fcmovne
xchg
add
mov
add
ret
inc
repnz
xchg
adc
dec
mov
adc
mov
adc
dec
int
in
loopne
pop
xor
mov
test
dec
aam
mulb
lcall
push
push
adc
jae
sbb
xchg
add
push
add
xor
xchg
jg
jle
inc
mov
fld
jecxz
pop
sbb
jbe
loope
or
mov
sub
shll
sbb
leave
fisttps
sbb
outsl
clc
sub
cwtl
cmpsb
mov
cwtl
loopne
mov
or
and
cmpsl
sahf
jb
cltd
clc
jns
adc
inc
inc
out
pop
xchg
or
sbb
arpl
mov
call
jns
icebp
cmp
loopne
outsl
add
and
pushf
decb
pop
xchg
adc
mov
adc
fs
jae
pop
cmp
cli
mov
pusha
rcr
lahf
shl
inc
add
cmpl
and
adc
jbe
sbb
lods
pop
sub
inc
das
sbbl
adc
cmp
ret
movsb
jno
inc
lods
dec
push
or
rolw
repnz
arpl
daa
add
cmp
lcall
arpl
add
cmpsb
jge
or
and
dec
jno
push
jge
mov
xor
add
les
je
push
fsubs
js
cli
inc
adc
jbe
and
push
repnz
push
mov
int3
jae
int
pushl
xorb
fsubp
sub
lock
sbb
xchg
fwait
mov
sarb
es
test
or
loop
std
addb
lods
arpl
sub
sarb
enter
dec
dec
or
aam
fmull
sbb
insl
dec
nop
mov
dec
xchg
cmp
push
test
jg
cli
mov
test
test
xor
roll
push
dec
aam
pushf
jnp
fnstenv
popf
insl
std
or
fdiv
inc
or
pcmpeqd
jge
inc
out
dec
cli
imul
or
sub
push
call
dec
push
imul
and
sahf
xchg
or
pop
inc
ret
jae
dec
aas
sub
pop
inc
push
jo
or
mov
push
bound
sti
push
pushw
fwait
mov
insl
jae
mov
dec
and
scas
into
in
and
orb
pop
and
lret
test
shll
jno
mov
fnstsw
fidivrs
aad
and
sub
loope
xor
outsb
sbb
sub
pop
adc
and
in
fdivrs
js
roll
sarl
sbb
xchg
fidivl
out
popf
cmpsb
mov
sbb
adc
pop
mov
add
jb
test
daa
sti
negb
lds
cmpl
int
sub
lods
lret
mov
movsb
fldl
and
and
rorb
lret
mov
mov
pop
pusha
cld
ja
das
leave
dec
inc
add
cltd
subb
cmpsb
test
pop
add
push
push
sbb
ds
cs
lods
cs
sbbb
enter
dec
adc
roll
ret
fucomi
xchg
sub
movsb
mov
dec
repz
std
imul
aam
mov
push
adc
mov
inc
inc
push
fisttpll
adc
daa
lods
dec
xor
or
mov
leave
and
lds
pop
test
jge
repz
xor
xchg
daa
cld
or
jecxz
push
dec
add
or
sub
cmp
xor
jbe
loop
mov
jo
mov
push
ja
icebp
es
out
xchg
pop
in
inc
rorb
ficompl
enter
movsl
jge
jg
dec
leave
pop
call
pop
imul
sub
pop
xlat
std
imul
ds
fbstp
push
pop
sbb
stos
mov
xor
popa
int3
sub
inc
in
adc
inc
das
inc
mov
inc
arpl
cmc
pop
fistpl
jb
lods
std
inc
add
mov
ljmp
daa
dec
or
xchg
sbb
aas
inc
dec
setg
rcrb
cmp
xchg
mov
jge
adc
stos
rcll
push
adc
adc
pop
adc
mov
cmpsl
and
push
mov
cmp
dec
or
pop
data16
push
adc
mov
fidivs
mov
imull
stc
fwait
mov
sbb
cmc
jl
into
outsb
dec
dec
pop
adc
das
dec
jge
es
jmp
push
cmovbe
xor
and
mov
popa
lahf
daa
dec
inc
shl
mov
cltd
sarl
sbb
sub
out
vpaddw
stos
test
jl
or
cmpsl
and
jb
sub
push
das
into
and
cli
add
mov
and
rcr
loope
shlb
sbb
adc
rorl
loope
and
sub
fldenv
ljmp
nop
fs
jae
dec
xor
outsb
adc
pop
push
dec
mov
cmp
inc
xor
inc
sbb
xchg
or
mov
pop
insl
inc
je
xor
mov
repnz
into
lret
stos
inc
ret
sbb
je
and
xchg
test
orb
mov
insl
ffree
sahf
loop
cmc
xor
ljmp
xchg
xlat
jo
dec
and
sbb
repnz
xchg
shrb
xor
dec
add
xor
rol
sbb
and
out
fcompl
cwtl
xor
cmpsl
fs
add
inc
add
lds
dec
testl
aam
sbb
icebp
pop
sbb
jae
faddl
jge
mov
insb
ret
in
fld
xor
pop
in
imul
cli
and
test
fcoml
push
mov
sub
xor
mov
pop
mov
xchg
add
adc
jno
mov
sub
fs
fcoms
cmpl
mov
aas
fwait
jae
loope
pop
or
mov
add
insl
stos
xor
stos
sbbb
or
insl
rorl
out
mov
int3
mov
dec
jmp
push
faddl
mov
pop
mov
fnstenv
mov
fcoms
lods
notb
or
mulps
and
inc
nop
rol
push
sarb
nop
xorl
adc
mov
mov
gs
out
mov
shrl
rclb
inc
in
adc
in
mov
xchg
arpl
push
sbb
fiaddl
jle
iret
es
mov
xchg
test
inc
movsb
dec
xor
or
aaa
cmp
cmp
push
cmp
cmp
lret
xchg
jb
mov
aas
les
adc
pop
out
in
or
sbb
pop
aam
mov
jbe
pop
and
addb
fsubl
cld
loop
xchg
ja
xchg
mov
je
push
cmp
jg
cmp
mov
cmp
mov
dec
push
mov
div
sub
jbe
call
mov
jle
test
adc
jl
jle
sbb
gs
xor
insl
mov
imul
addr16
dec
insl
jns
pop
mov
ficomps
aas
inc
hlt
pusha
and
sbb
mov
loope
imull
iret
adc
mov
ret
xor
pop
dec
and
pop
fcoms
das
test
sbb
mov
pop
leave
lods
mov
xor
push
lret
fwait
sub
fldenv
in
xchg
repz
or
xlat
lods
nop
mov
jb
into
gs
mov
shll
mov
cmp
stos
jo
out
inc
fbld
dec
xor
xchg
mov
dec
shl
inc
xchg
inc
adc
pop
xchg
cmpl
push
fistpll
push
jbe
lret
jg
sbb
out
dec
outsl
jg
pop
and
or
ja
mov
or
out
inc
mov
sbb
pop
outsl
js
incl
movsl
mov
mov
test
pop
pop
pop
ret
cmp
xor
fnstsw
nopl
inc
int
inc
jl
out
mov
dec
pop
mov
adc
cmp
test
aaa
adc
std
pop
jmp
stc
jno
push
call
mov
mov
int
out
sahf
pusha
and
clc
ljmp
fsubr
cs
adc
mov
dec
dec
pop
jecxz
push
xor
xchg
iret
cltd
and
mov
inc
jle
stos
fists
jl
out
loope
ljmp
js
xor
test
cwtl
inc
roll
fsubrs
das
xchg
fiaddl
std
dec
push
adc
cmp
clc
es
popa
mov
dec
pop
sub
xorl
int
out
adc
cmp
test
addl
jo
inc
mov
out
sti
outsb
call
or
data16
sbb
cmp
push
loope
js
jle
sbb
ds
sub
fsubrs
add
jae
das
jp
in
push
jno
xchg
andb
add
and
aas
and
push
jo
mov
icebp
jne
sbb
jno
loopne
or
sbb
push
in
or
dec
pop
inc
ss
cmpsb
stc
fidivl
adc
xchg
pop
jo
cmpsb
xchg
mov
repz
inc
cmp
push
lret
mov
ss
push
xchg
roll
adc
mov
and
mov
ret
mov
jns
inc
mov
jo
cmp
std
cmp
mov
pop
in
cmp
pop
dec
xor
sbb
scas
cmp
out
aaa
test
hlt
sbb
sarb
push
aam
mov
mov
sub
out
insl
in
cmp
mull
mov
imulb
jae
and
push
mov
pop
jp
daa
push
loopne
adc
sub
int3
sbb
sti
sub
sbb
rcrb
fldl
fiadds
out
loop
push
sub
inc
imul
add
or
xchg
push
lret
fwait
loope
inc
gs
add
lahf
inc
movsl
pop
add
dec
sbb
es
xor
adc
in
mov
out
and
aas
dec
add
loope
sbb
ja
scas
fwait
in
sahf
sub
mov
mov
push
nop
inc
and
mov
pop
jg
test
xor
xchg
cmpsl
mov
faddp
stc
and
fsubrs
scas
jns
enter
inc
mov
jp
inc
mov
mov
movq
cltd
jns
xlat
movsl
inc
sub
adc
aas
out
in
sub
add
bound
pop
dec
mov
push
lock
jp
mov
ret
jo
mov
push
in
mov
push
jecxz
cmp
dec
dec
xchg
faddp
js
aaa
int3
or
int3
dec
mov
lock
fdivl
mov
or
ds
pop
jecxz
lahf
pop
stos
sub
mov
mov
out
cltd
and
push
mov
pushf
rolb
loopne
gs
sbb
icebp
loop
aam
push
daa
and
xchg
scas
cs
jns
test
js
or
sbb
cld
or
out
pop
cmp
fcmovnb
insl
pop
cld
push
aam
and
cltd
sar
cmp
sub
pushf
adc
xchg
adc
scas
insb
mov
mov
adc
jnp
mov
add
inc
mov
mov
jno
cmpsb
pop
jecxz
inc
dec
arpl
jne
mov
sbb
adc
jns
shrb
and
loop
fisubrs
shl
jnp
bound
nop
test
rcl
dec
cmpsb
cmpsl
sub
or
add
mov
mov
test
pop
lods
loop
je
inc
lea
dec
in
fnstenv
mov
out
out
add
shl
icebp
xchg
adc
testb
xchg
jge
ss
mov
cld
pop
sub
dec
iret
shrb
in
cli
sbb
pop
sbb
add
pop
shlb
dec
pushl
mov
sub
cli
test
inc
sbb
cs
gs
push
xor
and
jl
push
dec
mov
cmp
add
adc
push
sbb
xchg
aas
dec
add
mov
push
int
enter
xchg
sub
jecxz
popl
push
mov
in
setae
pop
inc
das
sbb
outsb
inc
cltd
mov
jb
jle
push
shll
ret
cltd
out
pop
jmp
xchg
mov
push
xchg
or
pop
insb
repz
xchg
mov
filds
pop
pushf
cltd
sbb
sbb
insb
daa
cwtl
lods
lret
cmpsb
sub
xorl
cli
fists
dec
adc
fucomi
dec
outsl
es
mov
xchg
pushf
sub
push
xor
bound
mov
jle
inc
jb
push
test
inc
jns
leave
push
mov
fwait
push
shrl
in
mov
fwait
inc
adc
inc
lret
inc
int
int
das
cwtl
cmp
imul
rorl
outsb
mov
pop
andb
and
fwait
sub
sub
jl
sub
aaa
push
popf
xchg
ficoml
ds
pop
mov
bound
out
popf
hlt
push
jg
sub
in
push
pop
in
les
cmp
and
fisttpl
cmpsl
xor
pop
cltd
js
inc
insb
mov
scas
or
lods
push
xchg
xchg
scas
cmp
xchg
sbb
add
aad
mov
adc
shl
push
imulb
cmc
dec
or
fsubrs
add
xchg
inc
lret
jb
out
pop
cmp
push
repnz
js
mov
aad
sti
rcll
push
xchg
hlt
pop
pusha
sub
xor
mov
mov
int
adc
mov
jle
sub
dec
sub
outsb
insl
rorb
bound
outsl
jle
ret
test
stos
rcll
repz
mov
scas
test
inc
popf
dec
mov
pop
stc
outsb
mov
pop
je
xchg
hlt
mov
push
mov
fwait
or
mov
mov
clc
jae
in
mov
adc
mov
sarb
aad
sbb
aam
jne
inc
repz
mov
pop
sub
lcall
aaa
in
cmp
shlb
ds
cmp
fstps
jmp
or
jno
paddusb
cli
pop
dec
sub
data16
cmp
cltd
jge
int
and
and
or
jae
rol
xchg
lock
add
mov
stc
xlat
popf
sbb
xor
xor
cmp
mov
dec
add
test
xchg
and
dec
push
xor
popf
push
mov
fstpt
add
icebp
push
mov
cmp
lcall
movsb
xor
scas
mov
stos
fs
adc
mov
mov
cs
frndint
pop
pop
adcb
xor
xchg
or
fs
xchg
mov
cmp
adc
outsb
jb
push
cwtl
pop
pop
push
ret
fadds
push
mov
xor
mov
or
lock
sub
ret
pop
incb
aas
or
and
into
cmp
repz
sub
pop
cmp
ds
add
cvtps2pi
test
stos
mov
nop
adc
imul
mov
sbb
adc
lea
scas
iret
popa
and
push
adc
sub
jmp
sub
stos
rcrb
mov
push
sub
int
add
rclb
std
out
push
lods
imul
and
loopne
sarb
sub
xchg
push
notb
lock
into
and
icebp
mov
push
fwait
adc
mov
scas
insl
decb
cmpsb
pop
jae
or
dec
aaa
push
pop
mov
aad
int3
fdiv
mov
mov
dec
sub
jbe
dec
xchg
mov
push
sti
pop
das
lea
mov
arpl
xor
ret
loopne
enter
mov
ljmp
push
sbb
pushf
das
rcrb
sbb
into
gs
jle
sbb
hlt
ljmp
int
js
jne
ds
imul
je
mov
icebp
pop
in
int
stos
lcall
jg
rcrb
dec
cwtl
in
mov
je
cmp
movsl
lock
add
push
push
icebp
movsl
leave
adc
inc
jmp
adc
sub
orb
jbe
and
pusha
rcl
stos
repz
into
aad
mov
int3
sbb
mov
adc
into
divb
jl
push
or
dec
fcoml
loopne
in
pop
pusha
push
sbb
rol
hlt
pushf
adc
movsl
and
sub
jb
ljmp
adc
dec
stc
pop
pop
ljmp
mov
add
iret
cmp
in
jp
pop
inc
iret
dec
pop
test
xor
test
sbb
mov
add
add
mov
scas
push
sub
sub
adc
add
mov
adc
mov
sahf
adc
stos
cmp
adc
into
fbstp
idivl
sub
out
stc
decl
pop
xchg
lcall
arpl
and
cmpsl
fwait
ss
fmul
adc
add
imul
push
in
pop
sub
adcb
cmp
std
int
or
enter
in
loopne
xchg
cwtl
rorl
jno
lods
lret
loopne
mov
cmpb
sub
test
dec
mov
sbb
lds
bound
push
push
xor
jge
sbb
jbe
lcall
push
mov
inc
mov
mov
out
or
and
jle
scas
scas
dec
jns
loop
jbe
ljmp
call
adc
cmp
jae
or
sub
adc
es
mov
inc
cwtl
stc
popa
out
dec
ret
add
cli
cmpsb
sub
jp
jmp
les
fistl
fmull
cmp
add
into
out
xor
je
dec
lock
jbe
notl
sbb
xchg
xor
mov
lock
xchg
addb
jg
imul
xor
mov
test
loope
cmc
xor
cmp
adc
and
sarl
add
ss
jno
in
sahf
xchg
stos
cmp
mov
pop
inc
sbb
push
pop
cmp
pop
jae
add
fstp
add
sub
and
es
mov
sbb
lods
lahf
test
xor
mov
or
xchg
adc
mov
int3
jne
pop
mov
aam
negb
repnz
push
sbb
movb
adc
xor
jl
mov
fsubs
std
out
aam
cmp
push
jecxz
fisubrl
js
mov
sub
int3
call
cs
out
jae
icebp
sbb
cmpsb
jno
imul
mov
rorb
mov
sbb
mov
icebp
sbb
mov
testl
cmp
in
inc
scas
xchg
imul
ds
jl
stos
aas
shlb
inc
sarl
mov
aam
add
loop
dec
pusha
adc
mov
adc
push
stos
xchg
inc
in
ljmp
jnp
cltd
in
rcrl
cmp
inc
dec
out
lds
xor
cld
add
add
imul
or
js
les
mov
fwait
or
jne
mov
dec
in
outsb
sub
jmp
jns
iret
sbb
jae
aam
sub
mov
in
arpl
mov
es
adc
mov
pop
rcr
xor
or
adc
adc
dec
aaa
mov
lret
aad
mov
cmpsl
loope
insb
pop
sbb
push
in
mov
insb
adc
fcoml
add
cli
ljmp
sbb
or
fisttpl
aaa
mov
jecxz
sub
es
pop
stc
js
idivl
rcr
sub
cwtl
clc
into
outsb
ret
push
loope
jb
mov
lcall
out
xchg
sbb
xchg
cmp
pop
push
jbe
bound
xchg
sbbb
je
or
inc
js
pop
push
sub
sub
xchg
xchg
push
push
pop
mov
dec
jmp
hlt
adc
sbb
imul
nop
pop
ja
or
cmpsb
gs
loopne
insl
int
mov
les
into
lcall
loopne
rolb
shrl
mov
or
lods
or
inc
dec
adc
leave
mov
mov
ljmp
aas
mov
cmp
fucom
rcrl
mov
mov
pop
or
xor
sahf
fildl
mov
fcmovnb
cltd
mov
inc
adc
mov
fsubl
scas
xchg
or
ficoms
cmp
ficoml
add
in
lcall
xor
fs
dec
sub
sub
sub
ljmp
ljmp
aam
jmp
mov
lret
sti
add
cmp
dec
dec
add
jge
pop
or
data16
dec
orb
pusha
or
leave
push
outsl
pop
jg
cmp
push
dec
cld
icebp
push
jbe
lahf
jno
xor
and
and
jno
mov
addr16
pop
xlat
xchg
cli
je
nop
out
repz
or
iret
mov
in
in
sbb
mov
mov
push
pop
jge
out
jp,pn
adc
mov
xchg
out
xchg
or
or
and
movd
mov
aam
pusha
push
dec
inc
test
popf
pop
mov
xor
or
aad
mov
push
or
inc
pop
sbb
mov
jle
out
jg
loop
loope
push
cld
adcb
stc
xchg
push
cmp
xor
inc
sbb
mov
xor
pop
xor
mov
cs
dec
mov
mov
pop
or
ret
xor
add
sbb
out
ficomps
imulb
inc
fdivrs
aas
lds
pop
lahf
fimull
pushf
add
adc
lahf
scas
fsubl
mov
mov
add
adc
mov
adc
rcll
sbb
jle
fdiv
iret
push
or
into
repnz
sti
repz
movsb
subb
fwait
sarl
fildll
or
dec
adc
lea
mov
and
mov
and
mov
sub
jb
shl
mov
cmc
xchg
std
and
lds
sti
sbb
loop
pop
jg
scas
mov
rcll
xchg
add
sbb
dec
sbb
mov
or
pop
pop
hlt
sub
iret
add
cmp
push
adc
cmp
pop
xor
jp
and
lahf
lcall
aad
jp
mov
lret
push
inc
cmp
mov
das
rcr
fistps
push
lea
inc
add
xchg
mov
inc
or
dec
fucomi
dec
outsb
lret
addr16
rcl
xor
data16
insl
scas
cltd
sbb
dec
lahf
push
dec
test
mov
mov
mov
mov
decl
sahf
enter
sbb
js
enter
test
jmp
mov
in
cmp
lcall
ret
push
dec
mov
xchg
icebp
mov
push
fsubl
sub
mov
cmp
pop
ss
xchg
cld
or
add
xchg
dec
repz
mov
mov
lods
sbb
mov
add
lods
or
hlt
adc
call
repz
aad
sub
mov
pop
into
cmp
mov
cmpsb
lea
jl
fsts
lods
jne
ss
fwait
test
cli
jmp
lods
jb
mov
aam
push
cld
jp
add
cli
adcl
scas
xor
cmp
xchg
push
stos
mov
in
xor
adc
inc
jmp
cmp
shll
cmp
xchg
cmp
jmp
repnz
mov
les
fadds
popa
adc
stc
scas
mov
push
js
loope
fisubs
push
or
mov
or
adc
add
insl
dec
mov
mov
push
int3
inc
jbe
mov
dec
hlt
cli
cwtl
sub
push
and
lret
test
xchg
lret
push
mov
stos
push
out
ss
std
mov
fucomip
jl
push
lea
fstpt
ds
xor
sub
fwait
xchg
or
sahf
inc
xchg
xchg
sahf
mov
fwait
cmp
adcb
dec
jo
mov
cmpsb
pop
lods
shll
pop
imul
jae
cmp
dec
ss
push
mov
out
adc
xchg
xchg
jb
cwtl
xchg
mov
lahf
xchg
lahf
adc
shrl
pop
cmpsl
add
int3
jecxz
stc
daa
test
js
int
adc
cs
pushf
fisubrl
sub
dec
aad
or
movsb
xor
inc
iret
scas
mov
xchg
adc
mov
add
lret
daa
mov
cmpsl
fs
pop
ror
cmp
shrb
push
cli
adc
sbb
and
mov
hlt
rolb
adc
and
daa
addr16
jl
xchg
pop
in
adc
xchg
mov
clc
aad
insb
arpl
repnz
cld
mov
ja
popf
and
jp
int3
cmp
and
les
xchg
mov
push
or
cmpsb
ss
add
mov
test
cwtl
sub
enter
outsb
inc
add
dec
sub
popf
jbe
lock
jns
stos
popa
out
cmp
es
iret
outsl
jmp
inc
test
push
sub
mov
ds
mov
jnp
push
idivb
lods
inc
insb
movl
popa
inc
mov
jl
out
sub
cs
mov
in
scas
pshufw
icebp
pop
fstl
setp
mov
stos
inc
mov
mov
push
negb
call
mov
inc
cmp
mov
mov
aas
ja
enter
shrl
mov
sub
fdivp
loop
faddl
jp
cmp
es
jle
xchg
aad
mov
and
in
cmc
push
je
rcrb
sub
dec
orl
insb
xchg
jge
fld
pushf
cmpsl
aaa
dec
pop
sbb
xchg
mov
push
mov
xor
stos
pop
repz
daa
sahf
and
mov
push
and
mov
scas
sbb
pop
inc
inc
xor
or
inc
jmp
sub
cmp
ficoms
sub
popf
ret
xor
push
adcl
or
testl
add
add
je
dec
call
cmp
lock
ret
xchg
ljmp
mov
and
jle
in
or
iret
insb
loop
mov
test
call
dec
pop
and
jnp
cmp
push
adc
sub
popa
xchg
hlt
les
outsb
fwait
cli
fmull
push
pop
in
push
sbb
inc
sub
dec
aas
fmull
jb
shll
clc
mov
inc
xor
dec
outsl
es
xchg
push
sbb
stc
cpuid
mov
inc
mov
inc
mov
pop
lock
cmp
in
mov
pop
cmp
les
and
leave
cwtl
cwtl
cmpsb
pop
imul
mov
dec
mov
inc
fbld
jne
shlb
sbb
pop
imul
mov
aam
test
and
jnp
je
nop
aas
shrb
cwtl
fucom
or
jecxz
rorb
mov
inc
add
int
pop
cmp
jp
sub
in
call
sarb
fisubl
arpl
sbb
fistpl
mov
fadds
sub
repnz
or
add
xchg
push
mov
imul
lret
xor
adc
adc
lcall
movzwl
inc
mov
mov
cmp
movsl
xchg
test
xchg
popa
xor
outsl
and
xchg
es
or
loopne
sbbb
jmp
aas
or
daa
cltd
sbb
jae
sbb
push
cmp
int
pop
int3
push
cli
add
xchg
cmpl
mov
sti
movsb
mov
and
fistl
das
push
cs
aad
pop
rol
add
les
adcl
or
and
in
shr
mov
clc
lods
pushf
inc
push
out
push
cli
std
cmp
xor
lcall
lret
pop
insb
stos
icebp
pop
pop
popa
jmp
pop
fldt
add
sub
arpl
mov
dec
shrl
jg
pop
mov
inc
shl
add
mov
je
inc
lea
mov
test
std
mov
ss
scas
iret
xlat
jg
jno
lods
xor
lods
cli
inc
adc
stos
pop
push
bound
in
jno
pop
jne
call
adc
push
outsl
jne
arpl
cmp
sub
xor
push
daa
jg
push
add
in
in
dec
jl
ds
mov
jmp
add
addr16
mov
das
outsl
icebp
loope
loopne
mov
push
std
mov
stc
cmp
stos
adc
fisubrs
test
add
sti
jmp
cmp
push
inc
daa
fiadds
psubd
mov
ret
jbe
xchg
add
mov
fs
fwait
call
xor
test
adc
xchg
xchg
dec
cmp
shlb
popa
out
orb
sub
mov
push
aad
and
test
sub
jg
lods
pop
aas
cli
roll
aam
popf
dec
testl
outsb
push
adc
sahf
jg
mov
sub
mov
jo
mov
mov
addr16
jb
jo
mov
sbb
xor
dec
js
xor
pop
das
cld
ljmp
movsl
rorb
cmp
fidivs
loope
dec
cmp
and
and
mov
lock
push
pop
dec
pop
mov
cmp
pop
jne
arpl
or
sub
repz
cmpsl
shlb
xchg
cmp
int
popa
and
call
test
mov
out
shlb
imul
push
scas
stos
jp
loope
sub
and
push
sbb
sub
sti
mov
sbb
jnp
rcr
xor
lock
jge
pusha
add
dec
lods
xchg
pop
lahf
pop
movsb
jne
or
fisubrs
jmp
cmpsl
fisubrs
mov
and
pop
push
dec
xor
sub
pop
xchg
add
adc
sbb
lahf
bound
pop
negb
dec
inc
jecxz
inc
gs
jne
or
jecxz
xor
cmp
sbb
xchg
inc
fiaddl
call
xor
imul
cltd
pop
pop
dec
mov
xchg
xchg
xchg
mov
mov
sub
inc
icebp
mov
sub
xchg
inc
shlb
and
jb
pop
push
aas
adc
push
and
mov
xor
scas
mov
rolb
and
subl
cmc
sub
jl
popf
ss
cmp
xlat
cmp
movsb
lods
mov
mov
jg
rcrb
mov
sub
ficoms
dec
cmpsl
iret
rcrl
adc
push
push
mov
dec
add
dec
push
shrl
xchg
jne
mov
jmp
jge
mov
rcrb
pop
call
sahf
mov
dec
or
xlat
or
cli
pushf
ss
shrl
mov
jge
xchg
xor
adc
incl
mov
sahf
int3
loopne
push
ja
sub
adc
rcr
adc
enter
mov
leave
sti
mov
xor
xor
xor
psrld
sti
hlt
sub
mov
inc
out
negl
jno
cmpsl
add
pop
addr16
out
lods
cmp
shlb
sub
add
fimuls
sub
pop
mov
imul
and
cmp
dec
sbb
jle
push
loope
sub
jl
ds
cmp
lret
cmp
mov
jo
inc
jge
or
inc
shlb
out
dec
pop
fcompl
lods
cmp
in
popl
mov
xor
dec
into
push
mov
testb
sbbb
std
out
cmp
or
inc
or
inc
jl
inc
or
int
cmp
lods
js
add
adc
cmp
fnstsw
mov
inc
sbb
addr16
out
xchg
mov
push
cwtl
mov
jp
or
push
cli
mov
jp
jno
movsl
insb
mov
test
decl
out
sbb
inc
mov
lods
sbb
xchg
das
addb
aas
xor
pop
mov
lahf
cmp
out
or
push
daa
mov
xor
mul
dec
testl
stos
in
gs
mov
mov
adc
dec
adc
xchg
jo
cltd
into
mov
jg
cld
inc
rcr
popa
mov
jmp
insl
outsl
in
repz
dec
cmpsb
jecxz
push
xor
add
fidivs
jo
mov
je
ja
sub
rcll
pop
imul
shll
mov
es
dec
add
or
inc
ficompl
bound
scas
mov
arpl
pusha
mov
cs
push
mov
lcall
imul
ret
inc
mov
add
insl
out
scas
mov
int3
mov
inc
shlb
push
mov
mov
int
dec
les
pop
in
or
fisttpl
sbbb
imull
cmp
inc
int3
sub
les
adc
arpl
xor
cld
adc
out
sbb
or
xchg
dec
rol
and
lret
dec
add
dec
dec
inc
jl
mov
mov
std
push
inc
dec
movsb
jge
mov
dec
ja
xorb
out
enter
dec
insb
int3
mov
out
push
stos
inc
jge
clc
push
jp
push
dec
test
mov
dec
adc
xchg
xor
xchg
sbb
test
mov
xlat
ja
cmpsb
and
into
es
pusha
cmp
mov
fwait
and
mov
cmp
in
pop
fiaddl
adc
sbb
mov
and
daa
dec
sub
insl
mov
inc
xchg
andl
popl
fcoms
pop
cmp
add
lea
lret
cltd
push
mov
hlt
addr16
fucomi
aas
or
pop
mov
clc
cmpsb
imul
push
ficoml
aas
inc
mov
mov
fdivrs
pop
push
ret
pop
inc
arpl
sbb
xor
or
in
xchg
inc
js
push
jns
pop
jp
mov
mov
mov
mov
test
add
adc
int
push
mov
lea
loop
cmp
jg
push
and
jmp
fdivrl
jle
ficompl
inc
pop
dec
push
loopne
dec
mov
lods
xrstors
fsubs
xchg
jno
push
sarb
jge
jge
jg
test
lret
xchg
loop
mov
sub
sub
test
out
add
clc
jo
cmp
sub
xchg
shl
lods
movsl
cmp
lock
test
push
cmp
xor
lret
sub
and
pop
pop
divl
and
cs
shll
jo
in
cmp
dec
mov
in
add
daa
or
lret
inc
scas
xchg
jp
push
ror
test
xchg
std
pusha
jne
dec
pop
shll
test
popa
adc
adc
mov
cmpl
xchg
sbb
repz
cltd
add
rcrl
outsb
jb
push
gs
aaa
out
jne
dec
cli
fwait
xor
test
rcr
mov
rcrb
jge
adc
mov
sub
dec
or
push
jmp
std
xchg
mov
sbb
fisubl
jecxz
jl
xorl
roll
lods
cld
jecxz
push
mov
clc
clc
das
sub
pop
sub
inc
inc
xor
les
xchg
cmp
ret
push
inc
cli
adc
mov
test
cmp
fisttpll
adc
rol
mov
aas
outsl
pop
sbb
xchg
pop
rolb
push
ja
sbb
aam
pop
test
in
in
mov
fs
and
jmp
xchg
cs
pop
sub
pop
inc
sub
out
mov
rolb
test
sub
pop
sti
inc
sub
xchg
lret
jno
stc
mov
orb
stos
cwtl
pop
mov
adc
xorb
jmp
cmp
adc
fidivrl
jp
nop
jo
dec
pusha
sbb
fcomps
cmp
cwtl
fstps
add
dec
inc
xchg
mov
aaa
cs
popa
mov
mov
cmpsl
sub
jle
cmp
jmp
mov
pop
iret
inc
pop
movsb
cmp
mov
sub
cmp
pop
hlt
out
lret
dec
test
scas
scas
pop
mov
sub
jne
xchg
xlat
xor
popf
jo
push
cmp
pop
push
mov
xor
sti
dec
mul
jmp
pop
inc
scas
xor
aas
repnz
sbb
ret
cmp
out
jecxz
or
inc
mov
fldl
mov
cmpsb
jae
rorb
push
jmp
jp
or
iret
push
push
and
add
out
pop
xor
jne
or
push
mov
cmp
insl
push
cwtl
es
jno
mov
xor
cmpsb
or
add
xchg
cmp
sbb
out
stos
shlb
mov
ja
inc
and
sar
sub
sbb
hlt
mov
das
dec
out
mov
cli
pop
jo
dec
iret
cmp
movsb
lock
loopne
decl
jecxz
push
jno
repnz
cmp
sbb
pop
notl
mov
pop
xchg
imul
daa
mov
inc
arpl
push
inc
sbb
xor
mov
ficomps
pop
sub
mov
inc
push
jbe
stc
aam
fs
es
or
shlb
ret
bound
lds
outsb
pop
testl
dec
push
sub
sub
popf
xchg
push
dec
ror
jecxz
movsl
jnp
xchg
mov
in
jbe
add
es
loope
mov
icebp
test
popa
add
cmpsb
clc
in
fcmovbe
sarl
popa
daa
testb
js
mov
jge
mov
js
cmp
mov
pop
xchg
cmp
les
pusha
movsb
sbb
push
out
pop
jnp
xchg
jae
out
jl
cmc
inc
pushf
popa
cltd
xor
dec
pop
in
ret
push
pop
into
inc
xchg
clc
sbb
out
mov
pop
sbb
mov
sti
jge
mov
fistl
shrl
out
adc
mov
pop
repz
leave
mov
icebp
or
ja
and
arpl
cmpsb
mov
sar
sub
mov
inc
stc
aaa
iret
wbinvd
cld
push
fcoml
sub
push
add
or
pop
aad
pop
pop
dec
outsb
shll
sbb
outsb
test
andb
call
push
jmp
ret
out
repz
mov
mov
ss
sub
push
out
lret
popa
daa
inc
mov
lods
mov
push
shrl
insb
repz
mov
or
test
fcmovnbe
imul
inc
mov
mov
fistpll
loopne
jp
pusha
xor
les
cwtl
push
xchg
sbb
mov
jg
ror
ret
repz
adc
dec
ret
mov
aaa
and
fwait
adc
loop
nop
fstpt
fsin
push
mov
adc
add
and
fdiv
adc
mov
or
shl
sti
outsb
rcl
mov
or
dec
icebp
jae
sbb
mov
cmpsl
mov
and
bound
cwtl
stos
push
pushf
push
add
cli
orl
repz
lret
stos
insl
test
fisubl
push
pusha
and
pop
mov
sub
dec
sub
jge
or
mov
sbb
data16
arpl
mov
or
cmc
movsb
ljmp
mov
mov
xor
push
pusha
push
cmp
xor
mov
add
gs
mov
lcall
push
jge
jae
pop
or
loopne
mov
sbb
incl
jp
or
xor
mov
sbb
cld
popf
daa
sti
call
add
cmp
lea
fstl
testb
inc
es
imul
out
mov
adc
js
pop
scas
pushf
pop
mov
push
out
ret
dec
and
clc
sub
cmp
xor
jl
sti
mov
repnz
cmpl
push
mov
push
sub
or
ljmp
inc
adc
mov
jmp
sub
cli
movsl
mov
fadds
mov
fsubrl
test
flds
repz
sub
fwait
mov
mov
push
aad
add
pop
mov
cli
jno
js
rorl
fstpl
das
call
inc
push
jbe
push
pop
mov
mov
pop
push
call
jl
in
cmpsl
xchg
cmp
or
jbe
std
mov
insb
repz
cmc
mov
dec
sahf
sub
out
je
sbb
nop
jge
sub
cwtl
stos
lods
and
push
js
jo
lds
or
xor
add
sub
in
or
add
test
cmp
aam
jg
mov
hlt
pop
or
add
pop
lods
mov
mov
jb
dec
inc
test
repz
add
pop
mov
pop
xor
mov
xorl
or
push
sti
sbb
fwait
xor
icebp
dec
xchg
sbb
add
xor
xchg
icebp
and
mov
fwait
pop
fmuls
fimull
add
fdivl
sbb
negb
xchg
inc
xchg
test
pop
lcall
pop
pop
mov
cmc
lea
mov
mov
lods
jae
enter
fildl
push
repz
add
mov
testb
clc
dec
push
and
into
pop
out
pop
jecxz
in
je
pop
out
movsl
bound
arpl
aam
dec
and
scas
leave
clc
ficomps
pop
sub
jp
filds
fdivrs
fcompp
xor
frstor
test
cs
into
add
movsb
iret
int3
out
cmpsl
jnp
mov
pop
sbb
stos
lret
sub
dec
xchg
lret
mov
adc
icebp
scas
sbb
imul
cs
sub
xor
jns
push
cmp
inc
or
cmp
xor
shrb
mov
mov
push
cmp
mov
ss
xor
inc
dec
scas
inc
cmp
mov
lods
and
push
add
fdivl
iret
xchg
jg
inc
sbb
xor
nop
xchg
ftst
jp
mov
add
cmp
scas
ret
adc
mov
push
dec
loop
and
scas
push
mov
and
xor
and
mov
ljmp
push
sub
push
mov
aad
and
adc
repz
mov
jge
rcr
int3
jne
cld
fidivrs
inc
adc
cmp
out
iret
mov
fnsetpm(287
sub
push
sbbb
adc
xchg
fimuls
jle
add
fistps
ret
out
pop
movsb
out
stos
lea
jp
xlat
es
fcomip
add
xor
aas
sbb
dec
xchg
adc
in
jmp
fcomps
xlat
xor
lahf
sbb
push
mov
adc
mov
inc
jl
gs
push
sub
out
pop
xor
imul
xchg
cmp
pop
fucomip
into
mov
stc
sar
mov
sbb
pop
sub
xor
pop
je
loopne
clc
popf
repnz
and
push
mov
jb
and
fidivl
cmp
push
daa
ja
fildl
fld1
adc
pop
stos
add
out
push
lods
aam
cli
pushf
push
int
dec
lcall
clc
pop
rorb
sbb
out
jnp
pop
aad
and
insb
xor
int3
xor
enter
jg
aad
inc
fadd
push
xor
cmp
xor
add
out
movsl
push
cmp
call
xor
mov
pop
pop
test
test
hlt
jne
jmp
sbb
inc
jl
pop
sub
pop
inc
stos
bound
push
lods
pop
out
sahf
inc
aaa
out
adc
pop
jnp
push
or
dec
mulb
push
pop
xchg
sbb
lds
push
movsl
mov
rolb
push
xchg
mov
test
sub
pop
dec
lahf
clc
mov
pop
sbb
rclb
das
push
cltd
mov
fwait
aaa
scas
ret
inc
aam
push
movsl
jb
lret
inc
jg
test
ret
xor
push
adc
inc
inc
dec
pop
inc
aam
insb
outsl
into
cli
mov
mov
pop
jmp
and
sbb
pop
out
inc
add
sub
int
int3
dec
lea
fisttps
xchg
shrl
sub
sti
dec
jge
out
outsl
dec
xchg
cmp
test
fdivrl
mov
rolb
in
cli
loope
je
fdivl
pop
jae
dec
and
mov
adc
in
stc
shlb
sbb
adc
loope
std
jmp
dec
je
movsb
outsl
push
xor
outsb
cmp
mov
shlb
fildl
add
in
out
adc
xor
inc
in
and
shl
xchg
xor
sub
and
lahf
add
test
sbb
dec
and
rcr
adc
push
je
xor
mov
xchg
mov
test
pop
stos
or
push
test
int3
jge
jb
enter
mov
jne
sub
cli
pop
ret
sub
push
clc
loop
insb
int3
fistps
sbb
mov
and
xorb
int
inc
mov
mov
mov
aas
in
mov
dec
outsb
adc
icebp
pop
pop
pop
push
testb
mov
ficoms
pop
loope
or
call
mov
pop
bnd
lods
mov
xchg
pop
orl
push
xor
js
pop
mov
insb
movsb
sub
xchg
dec
mov
outsb
jno
push
test
inc
sub
push
sbb
repz
add
jg
cmp
dec
pop
sub
pop
cmp
jmp
lcall
movsl
xor
inc
pop
mov
lock
pop
bound
cmp
je
xor
iret
and
mov
cmp
loope
in
imul
cwtl
jne
push
adc
push
aas
jno
lcall
scas
xor
dec
add
mov
clc
jnp
add
cmp
sbb
pop
mov
mov
ljmp
mov
in
icebp
fs
xchg
insl
mov
or
cli
popf
sub
loop
pop
mov
dec
mov
loopne
xchg
jnp
lods
xor
sahf
dec
lods
add
push
pushf
sbb
icebp
icebp
daa
mov
fsub
shll
movsl
inc
icebp
dec
cwtl
sub
insl
xchg
mov
fsubs
shrl
loop
mov
add
adc
and
mov
cmpsb
push
cmp
enter
jge
cmpsb
sub
xor
mov
push
ja
adc
aam
and
mov
jle
inc
cmpsl
or
jle
and
shr
movsb
test
insl
adc
sub
and
mov
xor
inc
adc
push
rep
cmp
mov
jecxz
iret
inc
cwtl
fwait
jp,pt
shll
ss
sub
in
fnstsw
addr16
push
adc
sar
out
mov
les
and
cmp
sub
mov
imulb
sub
mov
hlt
dec
outsb
and
push
mov
sbb
jmp
popf
xor
mov
pop
mov
or
lcall
mov
jmp
push
pop
clc
xchg
lret
out
popa
imul
cmc
push
push
in
cwtl
clc
test
into
mov
popa
pop
and
adc
mov
leave
or
and
cwtl
xchg
out
stos
ljmp
or
xor
mov
mov
insb
repz
dec
sbb
outsl
popa
pop
inc
jl
push
inc
add
mov
fldl
sahf
mov
fimuls
inc
es
jb
frstor
mov
or
lcall
test
loopne
push
push
das
xlat
test
inc
xchg
data16
mov
and
mov
push
sbb
pop
xlat
mov
jle
cmp
xchg
orl
add
pusha
push
xchg
mov
push
sbb
jne
div
pusha
fdivs
xor
imul
xorl
pop
jno
jbe
dec
mov
dec
pushf
push
pushf
mov
add
jecxz
dec
shll
push
ficoms
jl
add
in
inc
xchg
adc
xchg
fistpl
and
sub
cmp
jnp
dec
mov
loope
inc
mov
push
xchg
pop
addr16
in
xchg
xlat
out
idivl
movsl
sub
lcall
push
lret
rorb
xchg
xchg
mov
dec
repz
pop
popf
mov
iret
jnp
fmull
push
add
sub
frstor
fwait
int3
xchg
jo
adc
pusha
movsb
xlat
xor
push
sub
fldenv
mov
or
jae
addr16
lods
jne
pushw
outsb
inc
add
cli
jl
rorb
cs
mov
inc
shlb
push
shrb
addl
pmovmskb
jns
sbb
add
jge
sbbl
xor
pop
jnp
add
mov
sbb
ds
aas
test
or
aad
and
sarb
sbb
hlt
mov
scas
les
push
and
pop
mov
sub
pushf
scas
sub
mov
jl
ljmp
xchg
bound
inc
les
dec
sub
or
lret
cs
inc
or
sbb
inc
pop
iret
in
cwtl
outsb
stc
dec
inc
icebp
ret
and
cli
mov
imul
mov
jae
fdivl
xor
and
repnz
cmpb
mov
fucompp
addr16
sub
data16
cmp
insb
cwtl
inc
and
loop
adc
push
dec
mov
inc
cs
movsb
mov
out
and
into
jb
rolb
insb
cmp
xchg
fildl
xor
mov
shll
ss
sbb
push
cmp
stc
cmp
pop
loop
jl
lea
mov
js
mov
sub
mov
cmp
sbb
cmp
iret
adc
push
mov
popa
mov
loope
cwtl
insl
les
fidivrl
or
mov
push
cltd
test
lret
imul
adc
cmpsb
pop
shlb
out
dec
enter
mov
scas
mov
mov
decb
push
mov
pop
fiadds
icebp
gs
add
jns
imul
xor
insb
cmp
push
sub
mov
add
push
pop
mov
std
xchg
and
mov
and
into
stc
xchg
sub
push
lock
test
mov
lds
jle
test
stc
jmp
mov
xchg
imul
pop
inc
sar
mov
jg
fistpll
lock
mov
imul
mov
pusha
les
sbb
fwait
adc
aaa
jnp
push
into
outsb
xor
cmp
loopne
lods
fmull
dec
dec
cmp
out
int
jmp
fmuls
xchg
jmp
in
fisttps
dec
lcall
movsb
mov
clc
das
xchg
test
fmull
adc
les
mov
dec
call
xchg
jl
test
paddd
data16
faddl
test
mov
sbb
test
jmp
jecxz
das
xchg
push
and
add
insl
xchg
es
imul
adc
jb
xchg
pop
fsts
sub
clc
xchg
cmpsl
mov
imul
sub
stos
pop
stc
addr16
jno
ja
add
enter
icebp
cmc
or
stos
jl
data16
jge
mov
pushw
mull
cmp
nop
lds
and
mov
pop
stc
inc
mov
pop
jg
pop
imulb
pop
mov
pushf
jecxz
fwait
xchg
or
lcall
stos
push
popa
stos
out
and
jo
dec
push
inc
xchg
dec
sub
scas
rcrb
loope
fbstp
aad
mov
mov
inc
mov
inc
or
movsb
lock
sbbl
and
ret
cmp
cs
and
and
fsubs
mov
push
sbbl
sbb
out
mov
push
and
sub
mov
repnz
pop
cmpsb
fmuls
lret
inc
dec
out
mov
sti
cmc
jp
ljmp
dec
push
aaa
xor
clc
test
mov
cwtl
push
cmp
mov
jne
or
mov
and
js
fucomp
pop
push
xor
aas
push
test
ret
cli
dec
pusha
mov
pop
in
push
jbe
adc
mov
cmpsb
out
jl
or
andb
test
sub
rcrl
xchg
mov
mov
mov
lret
pop
xchg
push
mov
shl
data16
xorb
adc
movsl
sbb
repz
mov
jp
cmpsb
stc
cmp
pop
stc
pop
dec
test
push
repz
xchg
mov
inc
fimuls
push
loopne
lret
lcall
inc
fwait
rcr
arpl
dec
jmp
cmp
jmp
lret
adc
bound
aaa
cmp
cwtl
daa
jbe
ficomps
leave
adc
ds
icebp
std
sub
mov
or
cmp
es
xor
movsl
mov
stc
sti
push
mov
jne
out
push
aam
ds
push
int3
inc
test
cmpsb
lods
clc
xchg
xor
sub
in
jae
sti
pop
shld
jg
mov
ds
aaa
mov
dec
mov
sbb
jp
push
test
dec
sbb
pop
sbb
mov
xor
insb
ss
dec
xchg
xchg
jecxz
aam
mov
sahf
add
inc
test
in
adc
mov
or
add
sub
clc
jp
imul
test
lods
popf
push
dec
xor
outsb
popf
or
xor
dec
sub
xor
lahf
je
and
mov
insl
dec
in
fs
jb
scas
cltd
ljmp
xchg
sbb
clc
xor
std
cmpsb
mov
rclb
out
int3
xor
lods
lcall
xchg
adc
and
mov
enter
or
arpl
xchg
lret
movsl
mov
movsl
je
aad
add
jnp
add
sub
std
fmul
mov
lods
int3
repz
shlb
into
pusha
push
orb
dec
pop
std
les
and
cmp
jb
sub
rcrl
shll
push
cmp
test
shlb
rcrl
and
mov
mov
xchg
cwtl
jle
stc
testb
jl
push
in
xchg
sub
jle
mov
xchg
xor
or
mov
xor
cmpsb
cmp
pop
pusha
dec
jle
fneni(8087
and
cmp
fs
jp
pop
gs
inc
cmp
cli
rcrb
push
add
xchg
test
orl
cltd
repz
gs
add
ds
aad
mov
mulb
dec
jbe
add
in
sbb
loopne
roll
push
mov
sub
adc
sbb
out
sbbl
rol
xor
or
loope
xor
aad
ja
cld
xchg
push
push
add
inc
jno
sub
test
decl
push
xchg
mov
pop
mov
jmp
gs
fldenv
aas
sbb
adc
lods
enter
repz
outsb
add
push
sbb
insl
nop
sarb
xchg
test
mov
lds
ljmp
adc
xor
inc
into
sbb
dec
xor
push
dec
lds
xchg
or
jo
pop
push
fsubrs
dec
iret
lret
in
popa
xchg
scas
jno
xor
add
jnp
mov
in
aas
dec
popa
xor
xor
gs
xor
bound
cltd
addr16
xchg
jns
out
les
xor
lret
pusha
jbe
repnz
in
hlt
cmp
mov
push
xchg
mov
cld
adc
and
jnp
fnstcw
add
les
push
xor
shlb
push
sbb
adc
cmpsl
lods
jmp
ror
cli
xchg
add
sub
subl
pop
fwait
das
cmp
pop
ss
inc
mov
push
mov
adc
sub
dec
test
sti
mov
xchg
int
lds
pop
xor
mov
sub
push
test
insl
daa
insl
xor
and
jnp
mov
xchg
in
mov
dec
shlb
lods
lahf
push
adc
loope
jge
jnp
or
pop
add
pusha
and
mov
gs
dec
cs
jp
adc
pushf
mov
jo
call
jno
jb
ds
mov
pop
jle
test
dec
adc
mov
pusha
outsl
and
sbb
int
dec
xor
push
testl
clc
jo
scas
cli
mov
mov
cmp
rcl
xchg
dec
or
lods
repz
popf
push
push
test
fs
out
lret
lods
sub
les
pusha
or
fmuls
adc
clc
push
inc
push
nop
sub
pop
ret
mov
mov
dec
and
rorb
movsb
adc
dec
mov
dec
push
fucom
test
cmpsb
pop
lret
imul
repnz
std
jae
xor
sahf
xchg
xchg
xor
in
not
mov
fmuls
mov
je
add
lea
rcrl
cmp
lcall
xchg
push
dec
jecxz
out
test
xchg
stos
in
rclb
movsb
call
icebp
and
cmp
mov
dec
cli
cmp
inc
cmp
jo
movsb
popf
jae
add
dec
and
or
nop
test
jne
pop
sbb
inc
lahf
or
and
xorl
addr16
jae
ja
mov
sub
inc
and
dec
mulb
movsb
scas
int
mov
or
data16
movsl
out
js
dec
mov
xor
xor
sub
scas
mov
cwtl
lds
mov
pop
mov
inc
mov
icebp
ja
push
dec
fidivrl
mov
daa
lcall
lods
pusha
imul
aaa
mov
push
ficompl
jl
inc
addl
xchg
mov
push
and
mov
shrl
lahf
or
imul
scas
xor
jg
dec
andb
je
scas
fnstenv
mov
dec
dec
je
addl
mov
repnz
inc
jo
push
nop
iret
cmp
sub
cmc
in
fdivr
xchg
bswap
popf
lods
imul
pop
mov
cwtl
mov
aas
pop
arpl
lods
scas
loopne
sbb
sbb
outsl
push
lcall
cmp
add
scas
pop
jae
jbe
lods
or
sahf
dec
mov
insb
daa
xchg
add
in
adc
stos
ret
xchg
fdiv
hlt
mov
push
dec
test
cmp
push
mov
pop
mov
jae
sub
mov
xchg
or
fisubl
mov
sar
jbe
mov
xor
ljmp
stos
insb
adc
push
or
sbb
iret
adc
in
lcall
or
mov
call
outsb
lea
sbb
adc
sbb
inc
adc
xchg
test
mov
pop
inc
xor
sbbl
popf
mov
iret
insl
xlat
cmc
out
inc
add
mov
pop
mov
ret
idivb
idivb
sbb
add
cmp
mov
xchg
sub
jecxz
pop
jo
out
pop
divl
xor
and
push
in
jp
fldcw
xchg
mov
sbb
jmp
jns
xor
dec
scas
and
fisttps
call
mov
push
in
rorb
lret
jge
je
sahf
push
xchg
or
scas
inc
cmp
leave
scas
stc
jno
xchg
js
mov
test
in
cli
lcall
mov
call
xor
stc
idivb
cmp
adc
test
push
ficomps
mov
adc
push
jb
mov
jmp
dec
cmp
js
and
out
imul
ljmp
jno
and
adc
add
adc
pop
xor
lret
mov
mov
ds
and
hlt
hlt
enter
hlt
mov
loope
fwait
insl
orb
push
add
inc
mov
test
and
cmp
push
loop
jne
sub
outsl
lock
or
and
movsl
cmpl
sbb
inc
subl
push
aaa
mov
popl
cmp
mov
lock
adcb
sub
scas
stc
loop
fsubs
and
push
iret
lods
icebp
mov
jne
inc
sub
mov
mov
ds
insl
sbb
dec
jns
jb
fimuls
out
lret
data16
insl
divl
mov
inc
lea
or
mov
inc
mov
mov
mov
loop
dec
mov
jp
fwait
mov
adc
cmc
out
sbb
mov
jmp
lret
xchg
sub
adc
sub
jl
inc
push
or
or
dec
sbb
xor
inc
pop
movsb
or
sbb
lcall
inc
outsl
jbe
lds
sbb
je
cli
mov
push
xchg
cmp
pop
fisttps
adc
sbb
inc
push
dec
pop
jbe
mov
pop
push
call
push
lret
mov
outsb
sbb
jl
adc
pop
sbb
add
inc
xchg
sub
lcall
popf
into
pop
add
xchg
xor
shl
sar
mov
ret
rorb
aam
loope
sub
xor
fisttps
int
movsb
push
xor
incb
push
pop
das
xlat
lods
xchg
fisttpl
daa
push
mov
leave
pusha
mov
dec
clc
inc
push
aam
imul
dec
jns
mov
adc
les
mov
xchg
inc
cwtl
out
sub
notl
dec
nop
out
jae
sbb
dec
divb
stos
pop
negl
inc
divb
lods
sub
push
int
mov
jno
dec
call
pop
pop
mov
aad
dec
push
add
pop
sub
stos
in
push
xorl
inc
and
bnd
or
and
out
jg
mov
pop
stc
jb
flds
jbe
lahf
sub
mov
push
jb
mov
cmp
mov
jmp
shl
neg
addps
stc
lcall
xor
js
divb
std
cltd
test
mov
and
mov
fildll
enter
dec
jns
imul
testb
movsl
mov
inc
aaa
ljmp
sub
cmp
dec
in
es
jns
push
xchg
mov
cmp
add
out
sbb
and
mov
dec
icebp
fdivrl
push
jle
jle
decl
sub
sub
mov
dec
push
pushf
add
cmp
jb
xor
dec
pop
pop
shrb
outsl
push
or
icebp
and
xlat
pushf
xchg
mov
pop
push
pop
pop
iret
xchg
mov
ja
sub
adc
cmc
pop
pushf
shlb
mov
or
outsl
xchg
inc
in
pop
xchg
loopne
arpl
add
in
enter
sub
or
adc
std
jo
adcl
out
int
mov
in
rcll
dec
imul
popa
repnz
std
ret
test
loop
or
popf
mov
andl
cltd
out
or
or
mov
add
cmc
int3
jnp
stos
xor
pop
add
stc
test
xor
inc
roll
sbb
scas
sti
out
in
lds
mov
push
enter
mov
xor
scas
xchg
sbb
and
mov
or
hlt
shr
cwtl
pop
xchg
fmuls
mov
cmp
push
pop
or
jne
icebp
mov
cmp
fwait
in
adc
mov
jnp
gs
push
add
repz
loope
jge
addb
pop
add
pop
out
and
shll
lds
mov
mov
int3
in
or
pusha
and
out
ret
popa
rcrl
dec
sbb
push
xor
ja
ret
dec
and
mov
in
pop
iret
jg
xorl
int3
xchg
push
movsl
in
jge
pop
inc
adc
push
scas
inc
stos
push
lds
popf
hlt
adc
sbb
ds
sbb
adc
pusha
jg
jle
inc
out
clc
inc
cmpsb
mov
outsb
pop
inc
lahf
add
sbb
sub
sub
xchg
mov
dec
mov
sbb
incb
adc
hlt
test
daa
xchg
outsl
or
xchg
xchg
cmp
jle
ret
sahf
dec
fbstp
in
lds
inc
lret
add
xor
into
arpl
adc
sub
add
rcrl
cld
in
jo
stos
cmp
inc
mov
dec
xchg
and
inc
out
aam
pushf
out
fimuls
dec
pop
mov
mov
lods
xacquire
or
adc
cmpsl
sub
test
lods
dec
leave
fnstcw
xchg
ret
mov
sti
nop
jnp
iret
and
fsubrl
imulb
mov
call
mov
les
dec
xchg
loop
push
pop
sub
pop
fisttpl
data16
div
mov
sbb
mov
pop
push
sub
addr16
mov
test
mov
cmpsb
push
sub
mov
pushl
in
and
push
and
gs
das
jecxz
fcompl
push
movsl
dec
jge
mov
mov
sub
push
push
scas
movlps
pop
inc
fbstp
pop
in
jge
mov
out
nop
outsl
cmp
sbb
and
pop
pop
dec
std
jb
or
mov
out
das
orb
stos
push
mov
jmp
cmpsl
jge
and
stc
mov
xor
into
lea
loop
mov
or
push
mov
xchg
mov
repnz
mov
add
pop
push
shll
in
pop
aad
adc
repz
cs
xchg
stc
sbb
adc
inc
popf
xorb
jae
stc
cmp
imul
std
aaa
pop
or
xchg
mov
xor
stos
cwtl
ret
xchg
xchg
pop
pushf
sbb
cmpsl
std
mov
clc
mov
and
iret
lea
push
sti
xchg
xor
lds
adc
ja
dec
fisubrl
repnz
pushf
add
dec
sub
icebp
rorb
insl
shll
mov
fistl
cmp
das
push
sbb
js
xchg
jns
and
cmp
dec
fcoml
dec
dec
rcr
sbb
fdivs
xor
int3
cmp
cwtl
fldl
rolb
pop
into
inc
enter
out
mov
xchg
cmp
lock
iret
push
lea
imul
scas
insl
fcoms
pop
cld
jo
push
repnz
loop
push
decl
mov
jo
cmp
cwtl
mov
mov
push
stc
mov
lret
mov
lock
das
and
loope
pushf
cs
aas
mov
sub
not
cmc
mov
sbb
pop
idiv
xor
icebp
mov
mov
addl
and
mov
sbb
adc
xor
inc
inc
and
push
sbb
sbb
xlat
add
ret
sub
out
or
xor
js
fidivrl
popf
mov
aam
dec
xor
outsl
insb
xor
xchg
xchg
in
mov
orl
pop
test
outsb
aam
and
fldenv
addr16
inc
inc
fistpl
sub
repnz
lods
shl
loope
sbb
addr16
fmull
pop
pushf
cmp
nop
in
push
inc
xchg
idivl
add
testb
mov
bound
sbb
popa
pop
pop
push
into
test
adc
jge
test
lahf
out
inc
inc
inc
and
repnz
xor
shlb
sub
daa
mov
outsl
data16
rorb
jle
push
push
setns
inc
pop
inc
fwait
mov
lods
jnp
stos
repz
xchg
mov
fadd
mov
test
ret
aaa
fsubl
mov
sbb
fcompl
dec
add
mov
in
jb
lcall
lret
inc
xchg
insb
adc
push
jg
dec
loope
into
lcall
jbe
push
jg
jp
dec
mov
adc
xor
mov
cli
cld
psadbw
inc
mov
cmpb
pop
mov
outsb
repnz
jmp
stos
push
notb
xchg
add
jnp
ss
cmp
mov
ss
sub
add
enter
out
les
adc
pop
jg
jle
jno
cltd
pop
jne
inc
sub
xchg
es
or
pusha
idivb
inc
pop
add
jl
into
and
imul
jne
push
popa
jecxz
add
pop
and
bound
mov
add
test
dec
in
mov
jp
or
andl
xchg
in
fsub
data16
mov
sub
push
pop
lret
lods
out
loope
fwait
jecxz
outsb
inc
adc
sub
jnp
push
inc
je
imul
nop
xor
insb
insl
repz
dec
cmp
lods
out
sub
aad
mov
dec
int3
push
xchg
cwtl
mov
fistl
fcoms
out
imul
sbb
lea
pop
dec
add
mov
sbb
xor
pop
repnz
aas
cld
mov
enter
xchg
popa
push
pop
or
push
call
xlat
add
and
fwait
std
pop
and
and
popa
jno
mov
push
cmc
jo
or
scas
xorl
popf
or
add
or
pop
dec
jno
fistps
xchg
cld
out
lea
xchg
clc
nop
sbb
mov
push
cltd
test
cmp
pushf
ffree
mov
xchg
in
imul
and
mov
sbb
fsubs
idivl
arpl
movsl
lahf
faddp
imul
repnz
xchg
lods
jo
fdivrl
add
insl
mov
sar
xchg
dec
test
xchg
bound
dec
jb
imul
mov
xor
pop
push
dec
into
sbb
mov
xchg
test
les
setle
mov
popa
stc
sub
cwtl
sbb
lahf
ficoml
dec
mov
jno
in
rcrl
sbb
cmp
movsb
inc
sub
in
mov
movsb
cmpsb
and
cmpsl
xor
xor
ljmp
or
addb
jg
jae
xor
out
mov
outsl
adc
es
xchg
cmpsb
xor
lea
jb
push
mov
pop
pop
mov
out
xchg
push
imul
std
lds
add
xor
xor
aas
rcrb
mov
ja
out
leave
stos
mov
stc
mov
sbb
movsb
outsb
sbb
adc
hlt
mov
aaa
xor
and
xor
out
lret
cs
ret
lea
mov
les
or
lea
pop
adc
push
inc
mov
xlat
mov
xor
jge
mov
arpl
mov
xor
dec
cmp
in
and
aad
fs
ror
jmp
sub
out
xorb
hlt
pop
fidivrl
mov
scas
pop
repnz
stos
je
hlt
fwait
imul
mov
leave
insb
dec
cmp
outsb
daa
out
pop
je
outsl
stos
out
pop
push
icebp
fidivrl
jg
jns
mov
leave
adc
mov
mov
data16
push
mov
jbe
jl
lea
imul
movb
ror
pop
push
pop
inc
and
leave
cmp
inc
leave
iret
pushf
dec
pop
mov
push
shrl
icebp
add
sub
lret
fdivp
fistpl
xchg
xchg
mov
cld
mov
dec
test
xor
cmc
and
pop
sub
adc
loopne
jo
fistl
loope
cwtl
aad
fcoms
mov
push
movsb
cld
jmp
xchg
mov
push
stos
movsl
mov
xor
out
rclb
cmp
or
xchg
in
out
mov
ret
mov
sub
and
addb
popa
adc
hlt
lods
iret
inc
xchg
test
ret
and
lret
loopne
xchg
int3
and
pop
xchg
mov
cmpsb
and
addb
cmp
sbb
pop
rcrl
adc
fs
ret
repz
pop
pop
xchg
rcll
add
dec
add
std
out
mov
xchg
xor
enter
jnp
ret
or
cmpb
or
mov
inc
inc
sarl
lock
dec
test
pop
mov
jns
pop
sbb
xor
lods
adc
test
sti
pop
sub
jns
jecxz
push
mov
mov
xlat
mov
push
pop
sbb
mov
jns
mov
mov
jne
data16
hlt
jbe
xor
xchg
cmpsl
jg
lret
push
inc
clc
jbe
xchg
push
repnz
rol
mov
stc
mov
dec
popa
mov
hlt
add
and
sub
lret
je
xor
or
pop
push
sbb
sbb
mov
push
ja
dec
mov
loope
mov
roll
lods
mov
lock
cwtl
scas
dec
lret
mov
lds
xor
and
pop
in
sub
mov
jo
sub
fidivl
pusha
and
jnp
stos
stos
xor
aas
imul
loop
mov
out
push
dec
pop
xor
push
dec
jg
xchg
cmpsl
push
dec
inc
mov
dec
iret
pop
pop
ret
xchg
shl
adc
jo
insb
cmpsl
enter
stos
xorb
aaa
dec
push
xor
mov
aam
data16
push
dec
and
lods
inc
or
xor
jecxz
divl
and
add
adc
sahf
add
test
or
inc
jo
jnp
enter
pop
jge
mov
ret
lahf
cmc
xor
in
lds
dec
jmp
in
mov
popf
test
dec
xchg
imul
lret
iret
clc
mov
into
adc
xchg
and
mov
fcomp
pusha
ficoml
push
repnz
sti
sbb
testb
iret
mov
fisttps
js
movntps
inc
or
sub
mov
or
and
dec
or
inc
mov
jnp
cli
mov
sbb
sbb
xor
xor
push
mov
mov
pop
pop
mov
pop
scas
hlt
and
aad
dec
sub
cmpsl
jecxz
stc
xchg
adc
out
xchg
or
mov
mov
pop
xchg
ficoml
rcl
scas
out
xchg
lcall
adcl
mov
xlat
pop
add
mov
loope
or
cmp
cmp
cli
shr
xchg
or
mov
popa
sbbb
mov
xchg
jp
inc
push
sub
scas
cmp
loope
xor
xchg
ljmp
lods
cli
or
testb
xorb
popa
jne
insl
imull
fsubrs
jl
insl
out
xchg
fistps
or
out
arpl
or
or
insl
shufps
ret
mov
lods
sbb
dec
mov
push
and
sub
idivl
or
fcmovne
push
bound
mulb
xor
adc
into
popf
xor
clc
into
adc
add
lods
xchg
sahf
xchg
test
cltd
insl
xorl
fiadds
add
scas
out
and
movsw
mov
popf
cmp
push
inc
stos
push
subl
insl
and
push
neg
mov
mov
push
cmp
sti
les
adc
inc
mov
icebp
test
outsb
mov
xor
mov
jmp
fiadds
loope
and
repz
xchg
mov
mov
cld
fidivrs
idivl
fs
inc
repz
fbld
loop
ja
or
sbbb
js
scas
jmp
add
js
and
ret
sub
jno
mov
sub
cmp
cmp
rcl
stos
lcall
fisubs
jp
jmp
mov
add
add
sub
orb
dec
xor
mov
xchg
jne
xchg
pop
js
xor
push
adc
cmp
or
mov
xor
stos
mov
out
inc
insl
add
inc
and
cwtl
shrb
ds
mov
dec
or
jl
inc
js
call
inc
xchg
xchg
inc
xchg
ficompl
sti
aas
mov
stos
repz
jae
sbb
dec
outsl
jg
aad
pop
cmpsl
mov
jo
or
mov
mov
push
mov
loope
aam
insb
es
loope
fs
sti
jecxz
nop
pop
mov
mov
cwtl
into
push
push
xchg
lret
jle
mov
xchg
rcll
dec
cmpsl
mov
push
and
jecxz
sbb
sbb
jg
popa
push
sub
mov
jmp
push
stc
xchg
mov
sti
std
cmc
mov
leave
call
insl
out
xchg
mov
xchg
mov
dec
or
sbb
out
ja
xchg
jge
jno
icebp
ret
pushf
je
pop
mov
pop
mov
add
mov
mov
scas
adc
jge
pop
xchg
pop
clc
jmp
mov
dec
jb
loop
addr16
push
fdivs
cmp
cmp
jbe
or
sub
push
stc
call
jl
jae
and
push
popa
sub
push
push
mov
and
bound
inc
xor
or
jae
ret
lahf
xor
outsl
jns
or
mov
fisubs
mov
jbe
xor
push
or
xchg
enter
mov
mov
push
mov
push
lods
lret
or
stc
jmp
fs
mov
mov
fsubrl
and
mov
inc
les
in
das
dec
xor
test
ficoms
xchg
mov
mov
icebp
add
int3
arpl
enter
push
pusha
and
adc
mov
xchg
push
test
out
or
push
or
outsb
mov
xor
push
mov
push
mov
popf
pop
imul
dec
mov
and
popf
test
pop
mov
gs
sub
repnz
lds
int
sbb
pop
mov
sub
mov
xchg
es
test
adc
sub
stos
stos
cmp
sbb
out
xor
pop
scas
int3
cmpsl
lret
mov
jns
lods
in
scas
sbb
cmp
js
shlb
fcoms
mov
aad
inc
dec
int
enter
sbb
dec
jae
add
adc
enter
test
orl
and
or
cmp
jnp
pop
out
outsl
or
xchg
jb
pushf
lea
loope
push
jnp
jp
scas
xchg
xor
push
jbe
adc
popf
mov
cmp
lea
xchg
push
leave
adc
cmp
test
mov
shlb
arpl
rcll
test
rcrb
in
sahf
inc
mov
sub
pop
hlt
mov
dec
sub
dec
fldl
add
es
jae
test
sbbl
insl
sbb
mov
arpl
mov
fstp
lret
das
xor
add
cmpsl
insl
pushf
mov
mov
or
adc
gs
data16
rcl
lods
ljmp
mov
ret
jbe
pop
dec
mov
pop
jg
inc
or
cmp
inc
inc
std
popa
daa
jle
lret
mull
xchg
sub
push
mov
cmp
dec
sub
mov
sahf
hlt
add
ljmp
movsb
cmp
pop
sahf
out
rcrl
ret
pusha
jbe
jo
xchg
ret
pop
ret
rorb
pop
movsl
cmp
xor
imul
lods
sub
mov
leave
aas
lods
dec
xchg
xlat
sbb
pop
xor
dec
jbe
js
mov
pusha
jo
mov
inc
mov
gs
mov
pop
cmpsb
pushf
push
pop
pop
ss
inc
mov
sbb
movhps
imul
xor
into
popa
push
mov
push
jno
enter
add
sahf
pop
je
mov
das
jp
cmpsb
or
call
stos
inc
ror
cmp
out
inc
jecxz
push
pop
daa
sub
xchg
inc
leave
lds
cld
enter
mov
jbe
sbb
mov
leave
cmp
cmpl
inc
mov
or
sbb
test
sti
mov
fwait
jno
jge
push
mov
daa
ljmp
lret
push
push
mov
iret
xchg
mov
aam
sbb
and
hlt
mov
pop
insl
pushf
push
aaa
syscall
push
inc
lahf
test
int
sub
push
pop
data16
xor
cmp
jnp
andb
pop
sub
outsl
cltd
xchg
into
rcrl
mov
and
xor
push
and
lcall
ret
dec
popa
push
lea
push
inc
adc
mov
in
aaa
jmp
movsl
pop
xchg
push
aad
mov
and
lods
stos
mov
push
xchg
inc
ficomps
mov
imul
jl
adc
adc
pop
in
cmpb
in
or
xchg
inc
cmc
mov
add
mov
mov
sbb
pop
and
sub
shl
xor
fmuls
jmp
lock
push
push
xor
cmc
or
test
clc
add
xchg
div
or
jne
cmp
push
xor
ret
add
cmpsl
jmp
pop
rol
cmp
fimuls
xchg
and
aam
jmp
cmpl
adc
int
and
mov
sbbl
and
push
push
inc
cmpl
in
popa
pop
add
inc
mulb
pop
cmpsb
cld
sahf
hlt
adcl
cmpl
jmp
test
ds
sub
aas
pop
add
addr16
sbb
scas
lods
repz
cmc
jne
cmp
es
ret
loop
dec
insl
cmc
dec
cwtl
pop
push
pop
push
or
mov
xlat
rcr
loop,pn
sbb
push
stos
js
jno
mull
mov
sbb
mov
xor
daa
xchg
lcall
movsb
pop
mov
lods
sahf
adc
repnz
ret
mov
jge
mov
xchg
xor
or
xor
push
fsin
xor
adc
add
push
or
and
sbb
mov
mov
mov
mov
mov
pusha
and
inc
xor
jl
hlt
xchg
push
mov
subl
cmpl
inc
mov
pop
das
pop
mov
fadd
adc
stos
xchg
jle
mov
or
xchg
aaa
adc
daa
fmul
rcr
rorl
mov
xor
inc
insl
movsb
jbe
adc
cmpb
jp
lods
jae
xchg
jcxz
sti
mov
lcall
cli
fidivrl
inc
addr16
test
dec
push
inc
sbb
idivl
insl
jle
jge
dec
fsubl
shrb
cmp
adc
mov
popa
cwtl
xor
loop
aaa
xchg
dec
mov
jnp
enterw
sub
dec
in
pop
imul
lahf
cmp
xor
popf
and
jmp
push
xchg
mov
ret
rcrb
mov
loope
cmp
adc
shlb
push
in
stos
pushf
fadds
popf
ljmp
mov
test
xchg
push
scas
mov
mov
inc
add
addl
or
add
mov
push
iret
sbb
rorl
mov
ret
ja
cmp
sub
and
repz
lock
in
test
stos
cmp
addl
stos
out
sub
push
sub
mov
dec
rclb
js
je
dec
vandnps
jno
test
je
rcl
sbb
cwtl
iret
push
adc
int3
dec
outsl
and
dec
add
stos
in
sub
and
mov
mov
sub
mov
ud1
icebp
lods
mov
jbe
pop
dec
sbb
jno
lods
push
dec
push
sbb
xor
and
mov
imul
nop
cli
aaa
nop
pop
js
sbb
sub
js
int3
mov
cmpsl
ret
xor
rcl
cmpsb
loopne
jnp
jnp
mov
and
int3
mov
inc
dec
scas
sbb
icebp
sbb
lahf
xchg
pop
inc
pusha
cmc
lret
movsb
repz
mov
aas
pop
mov
sub
mov
push
lods
jle
addb
and
mul
inc
pop
push
xor
lea
push
outsb
sbb
sub
mov
dec
in
cmp
dec
imul
out
and
dec
jge
insb
and
adc
lea
stos
outsl
movsl
inc
pop
xchg
scas
loopne
cmp
lcall
adc
ret
xor
push
and
fwait
and
jecxz
mov
clc
mov
test
sbb
lock
hlt
push
lock
sbb
jns
sahf
xor
fisttps
fistps
jo
out
jbe
stc
lret
xor
insl
movsl
hlt
lret
dec
sbb
sbb
lock
push
enter
divl
frstor
in
jae
rcrb
cmp
shr
in
push
and
ret
inc
into
clc
dec
popf
fmull
repnz
stos
push
push
aaa
cld
das
in
sbb
push
inc
adc
inc
xchg
xchg
loopne
jno
lods
out
sub
adc
les
aam
jp
push
mov
das
hlt
sub
adc
shrb
loope
lea
jge
lock
push
xlat
roll
mov
pop
pop
sbb
push
into
sbb
jge
leave
mov
incb
int
adcl
test
pushf
das
dec
test
jne
jae
sub
pop
xchg
mov
int
push
mov
clc
push
cltd
pop
and
pusha
test
push
push
bound
loopne
ficompl
add
ljmp
push
xor
popf
add
fsubrl
xlat
ja
jecxz
lret
xchg
xor
mov
std
les
pop
or
fnstcw
repz
in
insb
sbb
loopne
repz
pop
xchg
inc
push
add
and
pop
icebp
jb
rolb
jnp
sti
push
jno
mov
push
add
pusha
sahf
pop
les
int3
adc
xchg
jp
lret
lret
ss
mov
jb
icebp
add
add
hlt
or
fidivrs
dec
xchg
les
sysexit
gs
xor
mov
bsr
out
jae
mov
xor
sahf
lds
sub
rcpps
loop
jnp
loopne
rcl
insb
test
mov
sbb
and
aam
sub
push
mov
lods
jb
in
cmc
pop
dec
jno
into
xlat
fs
sbb
cli
iret
sub
inc
mov
cmp
sti
pop
ss
ljmp
xchg
popa
cmp
je
lock
arpl
mov
adc
mov
lods
addr16
cs
jb
sbb
nop
adc
fld
leave
aas
iret
repnz
cmp
sahf
addb
inc
or
subb
xchg
inc
iret
inc
xchg
les
scas
mov
pop
push
cmp
sbb
cwtl
cmc
insb
sub
dec
loop
lods
aas
pop
dec
inc
rcll
mov
mov
add
dec
pop
lock
xchg
and
imul
fldt
push
mov
mov
dec
push
cmp
es
ret
mov
int3
or
stc
hlt
sub
mov
pop
push
addb
cmp
inc
cmp
pop
fdivr
cmp
jecxz
xchg
sbb
data16
pop
ja
int
mov
add
and
lods
std
jmp
cmp
push
in
or
jecxz
xchg
sbb
and
ss
sub
das
and
adc
call
jl
out
data16
outsb
jmp
xchg
xchg
out
inc
mov
ja
repz
insb
dec
xor
shll
mov
push
and
jne
les
vpmulhw
daa
nop
insl
repnz
xchg
loopne
mov
cmp
mov
je
les
xchg
cmp
lds
or
adc
cltd
and
xchg
ljmp
out
push
xor
jecxz
and
pop
mov
test
movups
xchg
push
push
fisubs
inc
rclb
sbbl
or
stos
iret
scas
mov
popa
pusha
mov
pop
xchg
aam
aaa
mov
push
mov
inc
pop
repnz
movsb
mov
test
sbb
daa
mov
mov
sub
xchg
fs
lea
jno
jmp
mov
jecxz
shrb
add
mov
aad
inc
out
jne
and
mov
adc
dec
jp
mov
inc
pop
ret
fstps
adc
cwtl
gs
inc
pop
sub
insl
inc
or
test
mov
push
out
fisttpll
js
js
sub
ficomps
leave
push
popf
test
add
mov
sbb
mov
shlb
adc
sbb
cmp
jne
xchg
sbb
cmpsl
popf
cmp
xchg
mov
data16
inc
frndint
lods
dec
sub
push
mov
jnp
push
cwtl
fistpl
cwtl
rolb
outsl
or
sub
or
mov
or
sub
jle
fwait
rclb
jo
xlat
fbstp
ret
lds
mov
fstpt
ret
mov
pusha
xchg
jbe
lea
shl
ds
lahf
lahf
sbb
pop
arpl
cli
ret
push
pop
data16
jg
push
mov
fwait
xchg
sysexit
outsl
add
outsb
xchg
mov
dec
loope
inc
pop
or
addr16
push
lods
cmpsb
and
repz
test
cld
push
adc
aas
jl
mov
aad
fs
xor
adc
jle
mov
and
cli
std
pop
jle
ret
xor
loop
adc
stc
mov
and
outsl
scas
cli
pop
inc
cmpsl
ljmp
adc
bsr
pop
test
jb
push
push
rdtsc
movsb
or
mov
das
push
std
sbb
add
xor
adc
and
sub
lret
out
popa
adc
test
scas
sub
xchg
arpl
mov
andl
inc
add
aad
lds
mov
aaa
adc
daa
sar
mov
lret
pop
sti
sub
stc
shll
fs
pop
or
sbb
inc
cmp
sbb
test
pop
adc
popa
push
inc
and
imul
pusha
aas
push
popa
je
lret
push
or
mov
in
stc
inc
cld
cmpsl
push
push
xchg
movsl
incb
pop
addr16
mov
imul
es
stc
and
mov
mov
jbe
lret
cmpsb
xchg
xor
lds
cld
and
lcall
lods
jl
push
sbb
push
xorb
ret
addr16
in
push
dec
inc
push
jns
repnz
xchg
mov
xor
repnz
aaa
rcr
fdivrs
leave
shl
rorl
jecxz
aam
shrb
cmc
je
mov
jp
into
rorb
jmp
dec
ljmp
fiaddl
push
jg
fsubl
popf
push
repnz
dec
push
shrl
inc
les
imul
psubsw
mov
imul
andb
test
into
and
std
push
or
filds
add
popa
inc
or
pop
sbb
inc
lds
mov
mov
stc
ja
or
sub
push
and
mov
std
popa
cmp
xor
mov
aas
cmc
push
fidivrs
dec
stc
pop
loop
into
sbb
cwtl
ss
adc
data16
popa
jnp
fs
cmp
dec
add
pop
setbe
jno
and
rorl
in
lcall
movsb
mov
mov
sbb
jle
shrb
inc
push
bound
jae
pusha
int3
mov
lods
add
mov
dec
xor
pop
pop
adc
push
mov
js
cmp
stos
mov
lods
mov
sbb
call
dec
addr16
add
sub
shlb
push
push
pop
push
jle
or
sub
xchg
sbb
rorl
sti
jg
add
aaa
ss
inc
lret
insb
jp
dec
add
sub
cltd
sub
inc
dec
mov
cmc
mov
test
fcompl
add
fwait
pop
or
lea
mov
andl
repz
daa
fadd
repz
fistpl
std
lcall
xor
shl
jge
dec
enter
outsl
shll
pop
dec
fcom
rclb
sub
cmp
inc
enter
mov
ftst
jae
fndisi(8087
setbe
pop
xchg
push
cmp
or
sub
adc
pop
xchg
mov
dec
ja
aam
repz
and
hlt
sub
in
sbb
fiadds
mov
popa
int
cmc
xchg
xor
jns
sub
dec
arpl
xchg
or
ret
xchg
xchg
cli
dec
pop
jg
mov
sahf
mov
and
ret
shrl
rcl
fwait
sahf
ret
xlat
cmpsb
and
xchg
pop
pop
lcall
jae
push
sbbb
cmpsl
out
xchg
outsb
sub
stc
xor
lcall
mov
int3
mov
and
pop
fistpl
push
lods
jge
mov
push
stc
and
adc
dec
xor
popa
inc
popa
int
push
pop
into
pop
sub
sbb
mov
pusha
pop
mov
push
in
jmp
insb
push
mov
lods
testl
sub
add
imul
sti
dec
jmp
push
push
mov
nop
inc
mov
call
das
wbinvd
jbe
ljmp
cli
je
xlat
cmpsb
mov
mov
add
xor
nop
clc
dec
loopne
lahf
rorl
rorb
fwait
push
jp
out
sbb
dec
mov
filds
jmp
dec
mov
and
pop
decb
inc
pop
jno
push
inc
pop
push
cmpsb
jno
add
arpl
dec
xor
rolb
pop
lock
dec
mov
loopne
mov
stc
or
jge
or
jbe
cmp
pushf
xorl
mov
sbb
std
push
notb
dec
fsubs
ret
stos
jl
and
mov
xor
rclb
xor
outsb
xor
cld
fidivrl
sub
out
das
mov
adc
and
jp
cmp
hlt
negl
arpl
ss
add
xchg
enter
dec
inc
pop
scas
stc
mov
insb
stc
mov
or
jle
gs
repnz
dec
pop
xchg
daa
xchg
cmpb
insl
mov
mov
jmp
pop
stos
push
ss
fucom
and
pop
pop
in
in
fimull
loope
insl
xchg
leave
or
orb
lcall
adc
push
mov
aaa
fisubl
push
sub
sbb
dec
pop
sbb
xor
or
dec
sub
sub
loop
sbbb
xchg
xchg
jmp
mov
cwtl
mov
jae
les
sbb
out
int
loope
das
inc
out
ret
lea
xchg
cmpsl
rcrb
xor
aad
add
xor
fistpl
adc
inc
imul
sarl
dec
hlt
cmc
subl
test
jae
adc
lahf
adc
and
jbe
cmp
sbb
jnp
adc
lds
inc
in
ror
movsl
clc
push
mov
xchg
or
fwait
inc
popa
dec
lds
addl
icebp
sbb
xchg
adcl
push
jle
adc
scas
sub
sbb
mov
mov
and
lods
lea
mov
rorb
jno
pop
lret
sub
cs
pop
fistpl
cmp
cwtl
inc
adc
addb
mov
insl
lods
cmp
push
cmp
outsb
fdivrl
push
mov
movsb
xor
mov
xchg
outsb
cmp
jg
pushf
ret
xchg
mov
pop
test
movsl
ja
push
ret
shlb
adc
movsb
lock
inc
jno
jmp
mov
xchg
xchg
xchg
in
dec
xor
ret
fnsave
bound
add
dec
stc
jno
mov
andb
pop
sbb
push
adc
imul
mov
test
add
jp
xchg
out
cmp
mov
sti
bound
xchg
mov
leave
and
in
xorb
adc
add
fwait
inc
dec
mov
fimull
sub
movsl
mov
ficoms
adc
imul
mov
sarb
sbb
inc
loopne
cmpsl
fisubrs
popa
out
scas
out
cmp
leave
stc
insb
lea
dec
dec
fsubrl
lahf
cmp
adc
mov
jo
call
pop
and
rcl
and
adc
adc
jnp
rcl
outsl
jg
mov
cli
sbb
xchg
mov
loopne
dec
mov
adc
ret
test
inc
cld
or
mov
div
adc
or
out
lds
lahf
or
jp
fpatan
add
sbb
cmpsb
mov
cmpsb
jge
inc
or
mov
ret
pop
xlat
sbb
adc
stos
jne
enter
scas
dec
in
pop
scas
clc
jbe
xchg
cmp
mov
inc
das
xchg
inc
pushf
jl
loopne
xchg
mov
andb
ljmp
pop
xor
popa
add
mov
pop
das
mov
out
dec
mov
jge
pop
or
cmp
insl
ja
xchg
icebp
shll
aad
push
jbe
fiadds
std
std
enter
pusha
pop
fwait
mov
js
lea
fcmovnu
into
jmp
and
cmp
sbb
loope
inc
test
pop
leave
pop
cmp
icebp
in
mov
or
movsb
stc
mov
inc
cwtl
mov
and
sub
sbb
mov
jl
insb
pushf
cltd
fildl
mov
mov
add
push
iret
jb
loopne
mov
nop
push
cs
mov
mov
dec
xchg
inc
push
pop
dec
out
adc
and
clc
pop
mov
mov
dec
test
jbe
xor
inc
inc
cli
call
inc
and
push
mov
pop
sub
mov
loopne
sbb
xor
cld
mov
enter
repnz
inc
imulb
push
int3
pop
mov
arpl
stos
shlb
xchg
dec
mov
sub
lods
popa
lock
cmc
sub
push
dec
ror
or
aaa
in
and
std
daa
push
jge
xchg
or
or
dec
pop
and
mov
push
xchg
sub
mov
inc
inc
out
pop
stc
jp
jnp
inc
mov
lock
lock
push
push
push
dec
jg
inc
jge
xchg
lahf
cli
push
cmp
lds
and
or
xchg
mov
int3
xchg
jle
pop
mov
out
push
cmp
hlt
sub
repnz
jne
and
pusha
and
inc
loop
shl
mov
pop
mov
and
mov
inc
jp
xchg
lods
and
cmpsb
ret
arpl
lret
mov
subb
shl
jle
es
lahf
cltd
mulb
add
jne,pt
mov
push
or
mov
daa
andb
sub
or
adc
or
push
addb
fcoml
and
outsl
mulb
jnp
jno
adc
int3
clc
jg
cmp
xor
inc
popa
mov
int
sarb
pop
pop
repnz
testb
push
mov
scas
nop
pop
lcall
push
xchg
push
hlt
push
mov
adc
adc
and
or
add
sub
rcll
jne
aad
gs
addr16
cmpsb
das
push
adc
mov
adc
es
les
fistpl
push
in
xor
push
das
adc
push
into
imul
lods
jp
mov
cmp
test
add
enter
loop
sub
cli
shlb
jle
or
insl
outsb
mov
adcb
pop
adc
jle
ss
mov
add
cmpsb
scas
ss
mov
idivb
mov
pop
mov
pushf
or
or
jno
popa
mov
inc
push
sbbb
xor
xlat
insl
cli
xchg
clc
adc
mov
adc
and
mov
pop
or
bound
mov
aas
outsb
repz
mov
insl
adc
shrb
addr16
fwait
mov
cmp
push
mov
addl
out
dec
mov
or
push
shl
jae
or
or
or
out
and
cmp
sahf
das
lret
jle
dec
out
sub
sub
sub
jecxz
xchg
cmc
push
into
adc
sbb
add
fsubl
mov
lds
xchg
mov
jno
imul
sub
inc
pop
cmc
shlb
pop
movsb
sbbl
adc
mov
nop
nop
jmp
inc
and
enter
adcb
jmp
call
fimull
and
cmp
or
or
adc
add
dec
cmpsl
mov
rorl
or
outsl
mov
lods
mov
stos
mov
xor
ret
jp
adc
sar
sbb
cltd
sarb
xchg
fdivs
rclb
cmp
sub
mov
sub
pop
aam
ljmp
mov
aaa
jmp
aad
push
jl
lcall
add
cmpsb
mov
loopne
sti
stos
por
cmp
mov
into
nop
jp
out
ret
sarl
sbb
fdivr
cltd
dec
adc
test
cmp
loope
jg
sub
dec
insb
out
sub
xlat
sahf
pop
pop
sbb
imul
andl
repz
xchg
call
cli
xchg
out
clc
gs
mov
call
xchg
into
sbb
sub
repz
dec
inc
test
dec
iret
out
mov
aam
inc
pop
lahf
test
in
pusha
sub
ficomps
fs
xor
stc
dec
js
push
lods
push
out
dec
mov
pushf
jge
push
push
pushf
daa
adc
or
rcll
push
cld
pop
adc
fstps
xchg
mov
mov
aaa
cmp
notb
popf
sub
or
jb
or
lea
add
aas
mov
gs
mov
lea
jnp
and
jl
clc
dec
test
cwtl
stc
in
mov
mov
xchg
in
bound
xlat
cmp
in
jns
and
andl
jl
dec
and
repz
mov
pop
push
inc
fcomps
lods
pop
xchg
inc
aam
notb
lods
xor
rcll
aaa
out
cmp
mov
cmp
lret
ljmp
and
js
and
sbb
and
les
ds
mov
adc
mov
out
mov
xchg
ret
cmp
icebp
pop
aaa
ljmp
jl
push
or
dec
or
movsl
lretw
adc
pusha
inc
icebp
cmp
fdivs
jecxz
lea
test
push
fstps
daa
bound
cmp
adc
mov
sbb
mov
cmpsb
cmp
inc
add
jle
mov
daa
gs
int
ret
testb
negb
popf
jne
test
jecxz
jle
push
daa
pop
lret
test
dec
nop
popa
mov
aaa
sub
pop
popf
test
movsb
cltd
mov
loope
pop
or
and
xor
jae
das
sub
inc
sbb
xor
int
inc
pop
rol
loop
xchg
das
jb
movsb
xor
jno
cmp
data16
mov
ja
lret
xlat
ss
dec
xchg
adc
cmp
jae
mov
popf
stos
xchg
sbb
inc
out
dec
inc
sbb
inc
lds
cld
cltd
xchg
je
gs
jge
ret
lret
es
pushl
push
pop
and
mov
dec
jns
add
pop
cmp
imul
cmp
sub
sub
push
jnp
fstl
or
in
sahf
mov
test
adc
fstps
push
leave
pop
fldcw
sub
pop
mov
push
mov
repz
pop
ja
mov
fsub
push
loopne
loopne
insb
popa
push
xchg
lahf
jge
and
iret
ret
or
cltd
add
dec
mov
push
lret
mov
jb
testl
xor
insl
fs
fstps
xor
nop
adc
repz
lea
repz
scas
mov
adc
fadd
or
mov
add
cmp
sub
add
icebp
cmp
es
sub
add
inc
push
mov
sbb
lock
or
sub
test
insb
mov
pop
mov
lret
shll
pop
rcrl
jnp
into
sbbb
nop
cmp
xlat
dec
in
enter
je
add
push
and
push
push
cmp
mov
xor
adc
popf
mov
imul
dec
sarl
outsb
sbb
push
jmp
sub
jbe
mov
iret
sbb
xchg
cli
jb
bound
push
pop
insb
xor
push
dec
push
scas
shlb
adc
fwait
imul
jl
or
add
inc
lea
in
dec
mov
inc
push
adc
pop
adc
push
and
push
call
mov
cmp
daa
sbb
ss
mov
inc
adc
push
jno
aam
xchg
pextrw
loop
in
sub
mov
inc
aam
mov
sbb
inc
fs
call
lahf
mov
popa
cmc
xchg
out
xchg
sbb
mov
dec
repz
insb
daa
push
xchg
imul
std
pop
test
pop
dec
sbb
xchg
or
stos
dec
mov
xchg
pop
mov
popf
inc
sbb
into
mov
lea
push
sahf
cmp
das
mov
xchg
clc
mov
shrb
xchg
push
sti
or
mov
fsubs
or
and
push
ss
or
mov
or
and
repz
cmpsb
and
out
adc
mov
sub
bound
xchg
jg
mov
xor
mov
inc
aad
xor
bound
mov
mov
gs
and
pop
dec
pop
cli
es
cmp
sbb
ss
movsb
sub
mov
and
dec
lds
add
mov
js
pop
leave
xor
sarl
ss
pop
mov
xor
inc
aam
xor
stos
and
xchg
xor
pop
shll
jo
mov
std
insl
cmp
repz
es
loop
inc
out
ret
outsb
clc
mov
cmc
inc
mov
andps
inc
mov
repz
cmp
pop
aad
and
add
mov
cmpsl
aas
nop
outsl
dec
rol
ret
pop
xlat
loop
mov
inc
sub
pop
xchg
and
out
int
mov
ret
repz
loop
repnz
inc
ja
repz
hlt
pop
xchg
push
outsb
jge
pop
sbb
lock
ret
sub
in
loop
outsl
fcmovnu
and
imul
repnz
out
int3
bound
shl
je
xor
insb
shl
mov
int3
dec
in
jecxz
dec
scas
out
mov
xchg
shr
mov
pop
push
jge
xor
push
add
add
into
jmp
mov
cli
mov
mov
int3
xchg
movsb
dec
mov
xchg
push
jle
test
ljmp
dec
fdivp
out
ret
jp
mov
sahf
rcr
scas
mov
ja
add
test
stos
and
mov
adc
cmpsb
sub
inc
test
push
pushf
test
mov
jmp
jecxz
push
lock
test
repz
mov
jne
in
lcall
mov
jne
push
add
xor
inc
mov
inc
mov
and
scas
inc
cmc
aad
jne
frstor
jns
js
mov
mov
pop
arpl
cmpsb
lret
aad
shrl
mov
fs
loopne
out
sub
xchg
jmp
inc
cs
movsl
insb
xchg
lcall
daa
dec
mov
cmp
xor
mov
pop
push
xchg
sti
std
lods
push
mov
stc
push
pop
dec
divb
ret
push
clc
outsb
xchg
pop
js
sahf
adc
sbb
cli
sbb
fstps
call
fmull
int3
mov
xlat
cli
push
nop
rorw
negb
out
aaa
shrl
xor
ret
repnz
mov
jo
les
movsb
icebp
push
stos
lds
push
daa
loopne
lret
add
imul
pushf
sub
sub
popa
sbb
adc
stos
je
mov
jmp
xor
mov
push
xchg
lcall
dec
adcb
mov
push
jmp
mov
push
das
aas
fwait
rcl
push
sub
xchg
add
int
cmp
dec
and
jbe
pop
xor
xchg
imul
inc
enter
je
push
or
sub
test
outsl
cli
inc
cli
mov
mov
jbe
or
sub
push
pop
ja
sbb
sub
push
mov
cmp
lea
aas
rol
das
or
push
out
adc
inc
or
xchg
mov
cmpl
movsb
pop
xlat
or
add
sbb
xchg
lea
ss
in
loopne
pushf
hlt
stos
sbb
mov
cmpsb
push
dec
mov
hlt
sbb
cmp
mov
xor
or
int
subb
addb
pop
push
mov
aam
lock
xchg
xchg
testb
std
cmp
into
mov
push
js
pop
inc
jecxz
stos
adcl
add
xchg
fmull
ja
mov
sub
jl
cld
cld
sbb
xchg
daa
lods
cld
adc
push
mov
mov
aam
push
insl
mov
add
les
dec
mov
mov
push
sbb
adc
icebp
mov
push
add
pop
insb
and
stos
icebp
sub
repz
add
fstl
add
pop
mov
testl
frstor
push
push
pusha
jb
stc
nop
push
stc
mov
mov
xor
cmp
mov
rcll
negl
mov
mov
nop
jecxz
push
test
jbe
push
insw
xor
push
cmp
shrb
cmp
adc
sub
call
out
subb
jno
add
mov
fistpll
inc
pop
cmpsb
sti
xchg
and
rorb
sub
loop
cmpsl
outsb
cld
movsl
loopne
dec
mov
shlb
mov
sahf
int3
fmull
dec
mov
addb
add
mov
add
arpl
mov
mov
add
xor
dec
add
cmp
xor
push
rolb
push
sbb
loop
xchg
dec
and
mov
jae
sbb
sbb
inc
shrl
pop
inc
out
fsubs
popf
push
add
push
ret
in
inc
and
inc
ja
bound
repz
insl
add
adc
mov
push
dec
fbstp
inc
lea
inc
adc
dec
mov
arpl
push
popa
mov
or
daa
mov
call
or
movntps
add
rorb
loopne
out
inc
data16
movsl
mov
cmp
add
adc
stc
popfw
mov
loop
xor
xor
pop
push
push
jne
into
lods
outsb
lret
lods
push
scas
mov
out
xorl
and
add
jg
adc
xchg
inc
mov
push
lods
in
add
dec
repnz
dec
cld
in
add
jns
test
sbb
jecxz
addr16
fs
sub
sbb
sub
in
jge
jecxz
mov
jg
xchg
adc
outsb
int3
movsb
daa
into
inc
adc
popf
pop
dec
scas
cmp
mov
mov
fmull
jae
je
xor
adc
popf
xchg
mov
jo
ret
idivb
lahf
inc
and
push
push
or
pop
lcall
sub
mov
sbb
sbb
add
cmp
sbb
cmp
sahf
mov
stc
jo
adc
out
pop
shl
popf
es
cmp
or
stc
hlt
mov
lods
int
pop
bound
push
push
push
out
add
testb
xchg
outsl
cmp
dec
mov
jbe
push
jbe
push
jle
jmp
mov
popf
movsb
dec
cmp
pop
testb
inc
xchg
push
lds
fwait
aad
add
mov
fsts
pop
leave
pshufw
jge
push
lods
dec
rclb
sahf
cmc
dec
mov
sti
ret
add
dec
fsub
adc
jno
loopne
call
adc
fimull
or
fs
fsubp
cmpsb
mov
xchg
xor
pop
adc
data16
in
jmp
or
pop
ds
dec
add
pop
mov
and
iret
adc
sarl
mov
mov
sbb
sbb
xchg
test
xor
jecxz
gs
jle
out
push
push
gs
pop
adc
rcl
xor
cmp
xchg
mov
loop
aas
pop
pop
xchg
leave
imul
mov
sbb
push
xchg
xchg
ret
and
shr
daa
jl
xor
pushf
fistpl
iret
fsts
sarl
imul
xchg
lock
adc
test
stos
adc
leave
xchg
lcall
loope
jg
jmp
out
movsb
mov
out
jns
into
add
test
das
jb
sti
xchg
push
pop
pop
repz
popa
or
fldenv
xor
lods
ret
adc
mov
inc
xchg
pop
pop
cld
cli
or
pop
and
scas
cmp
movsb
les
movsb
lret
roll
in
dec
nop
add
aas
push
mov
add
sbb
in
orl
or
in
mov
aad
jle
aad
cmp
jnp
pop
popl
mov
inc
inc
sub
aaa
out
inc
outsl
mov
push
xchg
addl
in
leave
add
xchg
sbb
mov
push
jl
icebp
push
test
les
mov
fwait
sar
xor
mov
xchg
jb
push
pop
jnp
gs
cli
xacquire
mov
gs
adc
stc
das
and
pop
rorl
popf
and
ret
add
pusha
cmc
ss
xorb
sbb
bound
mov
cwtl
dec
fistps
movsb
add
lock
mov
jnp
cmovno
in
and
adc
ror
dec
and
movb
pushf
out
ret
inc
xchg
pop
mov
ja
cmp
jbe
imul
mov
push
jmp
and
stos
pushf
ljmp
outsl
cwtl
cli
rorb
in
je
or
iret
ret
subl
pop
jecxz
pop
scas
in
inc
xchg
gs
test
pusha
lret
in
andl
into
insl
lcall
adc
mov
scas
aas
fdiv
sub
sti
mov
ror
fcmovu
rcr
mov
push
or
mov
mov
inc
fisubs
and
push
jb
mov
mov
popf
mov
ret
adc
xorb
push
in
test
ds
sub
lret
and
icebp
dec
xchg
sahf
pop
or
sbb
xor
jge
sbb
adc
push
cs
loopne
lea
lret
and
xchg
pop
sbb
inc
dec
xorl
mov
sarl
cmp
orb
xchg
out
adc
dec
xchg
push
inc
xchg
xchg
ss
cmp
pop
pop
pop
stos
cld
and
xor
fs
or
fmulp
pop
out
test
test
mov
dec
popa
leave
lret
mov
repz
xchg
mov
adc
adc
loopne
jmp
dec
cli
or
mov
icebp
adc
or
aaa
in
lahf
clc
mov
lret
push
arpl
xor
cmp
push
mov
xor
es
xor
sbb
sub
test
mov
iret
and
stos
in
dec
sbb
bound
fcoml
push
lods
inc
fcompl
negl
jne
out
push
push
pop
dec
sbb
popf
data16
arpl
iret
cli
pop
and
push
adcb
mov
jmp
add
or
pop
cmpsw
pop
xor
sbb
cmp
in
add
and
mov
and
fs
ret
xor
cmp
and
fsubrs
inc
sub
in
lret
sub
push
dec
jne
cmp
xor
and
cli
mov
push
or
std
and
aaa
out
jne
add
fsubp
shlw
dec
iret
jnp
xor
out
loope
jle
imul
xor
call
les
add
fstpt
inc
outsb
repz
inc
lds
sbb
imul
ja
xchg
bound
add
adc
and
cwtl
sbbl
xor
lret
andb
jae
pushf
xchg
pop
sbb
cmp
in
and
pop
pop
mov
gs
into
jg
cmp
dec
dec
push
cltd
outsb
mov
arpl
fiadds
out
cmc
lret
mov
jle
push
jle
popf
cmpsb
xchg
sub
insl
arpl
push
mov
jecxz
aas
add
andb
jecxz
mov
mov
mov
mov
out
lret
jnp
cmc
lret
orl
ror
fistpl
mov
mov
mov
nop
xchg
andb
test
movl
out
push
lods
aas
mov
dec
ret
jae
push
jp
sub
push
cli
inc
mov
mov
cmp
adc
insb
mov
stc
andw
andb
cmp
shlb
out
add
cmp
cmpb
mov
sti
stc
out
shll
cmc
adc
xor
pop
lods
inc
pop
jnp
mov
lret
push
addb
lock
xchg
cmp
out
cmp
clc
pusha
xor
pop
mov
loopne
xchg
enter
cmp
in
scas
xchg
push
in
add
inc
jmp
adc
jge
dec
test
int3
pop
mov
sub
and
scas
adc
push
adc
push
jg
jl
loopne
and
pop
ja
pop
out
insl
mov
jne
sbb
mov
add
mov
add
or
adc
adc
sahf
inc
inc
dec
dec
cmp
xchg
mov
fstl
mov
stc
daa
mov
mov
mov
pop
movsl
lock
arpl
jl
xor
sub
cmp
jmp
cmp
jne
pop
shlb
mov
ja
addr16
fdivl
out
lds
mov
dec
call
or
mov
sub
test
push
jp
rorl
inc
rcll
ficoms
add
inc
push
je
jg
xlat
andb
popa
mov
pop
add
pop
in
add
fisttps
fwait
rorb
xor
repz
push
sub
jo
mov
sbb
into
fildll
cwtl
xor
popa
shll
push
arpl
shrl
dec
mov
mov
mov
aaa
xchg
stos
cmp
loopne
dec
adc
push
dec
jb
xor
inc
cmpl
das
xchg
pop
mov
add
sbb
shl
pop
pusha
fmull
dec
dec
lea
jle
add
or
out
pop
cld
stc
xor
fcmovnb
add
sbb
mov
iret
mov
jne
adc
iret
shll
data16
adc
icebp
push
dec
or
jmp
dec
dec
popf
bound
stos
sub
add
repnz
or
scas
sbb
mov
lcall
cmc
sbb
sbb
push
out
iret
xchg
mov
jge
fs
and
push
in
push
dec
enter
or
jmp
push
push
push
lahf
popf
and
cmp
xchg
mov
add
imul
outsl
in
adc
insl
leave
xor
xor
inc
jmp
lods
xchg
sub
mov
inc
shll
jmp
dec
mov
pop
rol
ljmp
call
out
inc
sbb
jbe
jns
aad
xor
and
sbb
sbb
mov
push
push
into
cwtl
lock
mov
gs
jmp
or
sbb
je
fimuls
divb
xchg
pop
movsb
loopne
push
sbb
sahf
dec
stc
mov
enter
xor
pop
pop
fs
pop
dec
insl
shl
dec
cmpb
cld
in
into
adc
mov
adc
jge
dec
sbb
in
mov
adc
scas
sbb
scas
sbb
stos
scas
ss
mov
daa
nop
pop
jmp
mov
pop
sub
inc
icebp
rclb
add
imul
jnp
negl
cmp
out
cld
jle
int
inc
int
xor
jp
and
jae
push
fwait
mov
push
fstpl
inc
cmp
mov
mov
fcmove
cs
cmpsb
lahf
xchg
pop
int3
sbb
xchg
stc
test
stc
xchg
dec
out
in
imul
stos
les
push
rorb
mov
sbb
xchg
push
or
xor
and
inc
mov
fnstcw
pop
aas
inc
xchg
movsl
cwtl
cmp
dec
mov
xorl
mov
xor
pushf
inc
outsb
mov
jmp
push
dec
jae
sarb
mov
aam
arpl
xor
ja
xchg
insl
cmp
cmp
stos
into
out
sub
andb
mov
clts
sbb
cwtl
scas
xchg
xchg
pop
cltd
call
je
cs
xchg
test
cmc
jl
ret
in
mov
xchg
xchg
fcomi
ret
inc
dec
stos
dec
and
fsubl
ret
arpl
pushf
in
push
dec
jmp
in
xchg
enter
and
xchg
lret
jbe
pusha
sbb
insl
fimuls
mov
jg
hlt
outsl
mov
outsb
ret
inc
pushf
or
dec
xchg
shl
out
sbb
dec
cwtl
xorb
test
and
pushf
pop
lods
push
lret
jge
addr16
add
xor
or
movsl
lock
loope
lahf
and
pop
fidivs
pop
xor
mov
out
adc
mov
jmp
int
pop
xchg
mov
push
das
dec
inc
adc
cld
sarl
cmp
shll
lods
jmp
xor
dec
mov
cmp
leave
lahf
mov
out
nop
mov
out
push
dec
mov
ja
dec
add
mov
jns
adc
adc
aaa
dec
jmp
sub
push
loopne
adc
decb
sbb
hlt
in
mov
dec
outsl
mov
call
ficomps
ret
sbb
je
cld
sbb
data16
es
pop
jns
lods
or
std
fisubrl
test
in
xchg
sub
push
push
es
or
cmp
pop
fwait
xchg
std
test
pop
xchg
jp
int
pop
sbb
and
dec
fmull
xchg
rclb
xor
and
or
or
scas
inc
mov
lahf
icebp
inc
out
jno
sbb
add
iret
mov
pop
jnp
popa
ror
jae
xchg
mov
insl
xchg
pop
or
fwait
and
ljmp
jo
cmp
outsl
and
dec
sub
in
mov
ret
push
pop
cli
ja
and
outsb
add
cli
cld
cltd
add
pop
dec
xchg
and
pushl
sbb
out
dec
pop
cmp
dec
push
daa
xorl
aas
push
rol
inc
and
lahf
dec
sbb
in
adc
adc
lret
clc
loope
jne
inc
pop
popa
mull
loope
mov
out
mov
cli
push
nop
dec
inc
test
icebp
mov
adc
ret
and
dec
jl
in
mov
sbb
idiv
loop
push
ret
mov
es
mov
push
mov
int
pop
xlat
int
arpl
fdiv
xor
cli
adc
pushf
fdiv
shr
sub
pushf
shll
push
dec
dec
pop
adc
rcrl
push
and
xchg
in
cli
std
cwtl
fsubrs
jb
aaa
push
adc
mov
fldlg2
cmc
aaa
add
orl
test
stc
mov
push
mov
lahf
dec
xchg
shl
les
divl
cmp
dec
aas
add
test
lret
push
jge
sti
inc
outsb
loopne
leave
and
aaa
dec
mov
sbb
mov
and
mov
popa
je
les
out
rcll
xchg
pop
test
jl
push
mov
xchg
popa
pshufw
in
mull
inc
imulb
xor
icebp
xchg
xchg
push
push
mov
xor
pop
into
negb
ret
and
pop
mov
outsl
add
stos
mov
movsb
mov
adcb
fs
jb
cwtl
fildll
cmp
popf
xchg
add
add
aad
jae
dec
cwtl
mov
in
cmpsl
test
push
push
add
fbld
pop
aas
push
mov
push
aam
xorb
ja
ja
stc
addr16
gs
or
les
add
jg
loopne
repz
mov
xor
dec
ds
xor
xchg
lret
xor
pop
ss
mov
push
movsb
insl
xchg
or
jl
ljmp
cli
mov
mov
scas
shll
pop
sbb
push
sbb
cmp
lret
pop
lret
mov
in
cmp
shrl
cmp
sbb
cmp
jg
and
fcom
push
pop
mov
sub
dec
repnz
pop
in
xor
shlb
mov
lea
enter
cld
enter
add
mov
shl
and
scas
test
push
adc
loop
popf
dec
pop
fisubrs
sbb
add
fstl
mov
imul
fsts
aam
pop
lds
pop
repnz
mov
push
ljmp
imul
xchg
bound
out
ljmp
jl
popf
jge
cwtl
jae
jo
mov
test
xlat
inc
and
dec
ja
pusha
fildl
mov
push
sub
into
xchg
push
rolb
jmp
call
test
les
mov
adc
adc
xor
push
sbb
inc
fidivrl
pop
push
pop
push
mov
insl
dec
push
xlat
movsl
mov
xor
push
jae
mov
out
jns
lods
adc
adc
push
repz
sahf
push
scas
pop
or
int3
mov
aad
pop
popa
xor
aam
dec
push
sub
mul
jbe
fs
mov
rcrl
fdivl
sub
ret
dec
inc
jp
mov
imull
je
cwtl
sub
out
cs
lret
inc
rcll
jns
xor
jb
pop
and
jae
push
stc
sbb
sbb
out
ja
push
lock
push
pusha
ds
push
aaa
lea
or
push
cmp
push
pushf
scas
movsl
jle
repz
push
pop
mov
sbb
int3
insb
scas
inc
out
aaa
adc
movsl
sub
or
addr16
lahf
add
push
adc
test
fimull
repz
outsb
cmp
js
mov
jbe
repnz
jns
jmp
leave
inc
mov
inc
or
in
fucomi
js
mov
mov
test
and
mov
and
cmp
push
test
scas
xchg
test
scas
adc
mov
outsl
xor
movl
jg
and
repnz
pop
popw
call
outsl
jge
jmp
pop
inc
cmpb
mov
lock
arpl
push
mov
xchg
adc
jbe
ret
or
dec
in
mov
xchg
sbb
insb
add
sub
xchg
sub
pop
cmp
cs
mov
mov
stos
imul
negb
add
mov
mov
mov
je
push
xor
push
ret
div
lret
dec
mov
push
or
pop
je
and
jl
cld
sti
ss
mov
pop
pop
xor
sub
cltd
jecxz
ret
sub
cmp
xor
cld
jp
dec
adc
stos
cmp
lret
sub
pushf
int3
sbb
orb
lcall
cld
lock
inc
dec
ret
sub
fistl
xchg
fcoml
pop
ficoml
push
xor
imul
loope
jg
enter
push
loop
fmuls
jmp
fstps
out
dec
movsb
jo
adc
xlat
and
cmp
cmpsl
add
out
mov
imul
mov
cmp
push
sbb
mov
add
jecxz
lds
test
jne
sub
xor
push
xorb
dec
add
pop
cld
cmp
icebp
sbb
adc
add
push
imul
out
push
cltd
jb
loope
test
mov
pop
mov
aas
pop
rcll
test
subl
dec
movsl
iret
mov
xchg
dec
pusha
hlt
pop
or
jmp
mov
pop
in
ljmp
cwtl
mov
rcll
add
mov
pop
lea
push
add
cmp
fistpl
xchg
int
inc
jae
xchg
xor
cli
jae
mov
hlt
push
dec
sti
mov
mov
scas
cld
mov
sbbb
jp
jno
call
imul
push
stos
aad
mov
jp
je
sbb
stos
sub
arpl
sbb
mov
imul
xlat
test
push
ret
pusha
roll
lds
push
pushf
cmpsb
mov
loopne
cmpsb
mov
or
jle
jmp
or
rcrl
stc
lock
aad
or
out
insb
sbb
mov
aam
fmulp
std
or
stos
pop
cld
enter
movsb
enter
or
jge
sbb
mov
and
out
lret
cmp
xor
jle
and
xor
inc
stc
in
and
lea
or
xchg
leave
mov
push
das
sti
dec
jns
lret
fsincos
jbe
jp
xchg
enter
scas
decb
outsl
adc
fwait
mov
dec
add
imul
test
mov
imul
ja
add
shl
daa
lret
xchg
push
mov
xchg
lock
mov
jbe
fsubrp
jb
imul
imul
aas
ror
lock
or
xchg
out
adc
out
test
push
push
lods
out
dec
cmc
fidivl
into
push
lods
sub
dec
push
lods
addr16
cmp
inc
xchg
in
adc
mov
sahf
pop
dec
and
lods
js
hlt
loop
or
idivl
mov
sbb
imul
shrl
dec
pop
in
jbe
lods
xor
rorb
sbb
push
mov
iret
nop
dec
test
jo
ja
jbe
mov
and
inc
cltd
packssdw
push
dec
add
push
push
ret
enter
aaa
ss
fisubs
inc
cmp
ret
sbb
push
sub
sbbl
jmp
das
mov
pop
and
enter
pushf
lds
out
cmp
pop
ss
icebp
fs
iret
mov
fistpl
xlat
xlat
xchg
nop
inc
xor
fldl
mov
jae
repnz
adc
outsl
enter
mov
jg
out
fsubr
jp
mov
in
std
pop
in
sub
aas
sub
outsl
out
out
cmp
enter
or
popa
aaa
enter
jo
lret
inc
out
enter
sub
and
pop
aas
bound
mov
pop
ret
test
sarl
ss
fcmovbe
aaa
repz
movsb
cmp
cmp
pop
and
and
push
hlt
xor
xchg
ds
icebp
push
or
in
inc
scas
xchg
fsubrs
xor
xor
jecxz
test
or
dec
cltd
fcom
lock
test
push
push
fsubs
test
or
push
jecxz
hlt
and
adc
aam
jge
das
mov
int3
sub
cmp
and
insb
mov
cmp
mov
adc
int
jge
jmp
sbb
pusha
imul
mov
fisttpll
sbb
hlt
int3
insl
push
cmp
mov
jecxz
test
in
cld
movsl
xchg
in
es
dec
popa
sub
addr16
pop
mov
mov
jb
fdivl
inc
cmc
test
test
aad
pusha
jmp
pop
dec
shll
cmpsl
or
xlat
cmc
fwait
xlat
out
push
ret
fbld
mov
mov
sahf
addr16
sahf
lret
push
aad
push
xorl
ficoml
call
cmpsb
dec
in
sub
mov
rol
push
xor
lret
jmp
enter
cltd
mov
int
push
push
inc
out
adc
cwtl
mov
out
xor
mov
popf
mov
insb
imul
inc
sarl
lahf
push
pop
cmc
ret
in
das
stos
clc
adc
dec
mov
xchg
xchg
in
lret
sub
mov
sbb
lea
mov
mov
push
jp
leave
icebp
and
jl
test
outsb
pop
pop
sub
testb
rcrb
mov
adc
push
cli
mov
cld
imul
sub
add
push
lret
hlt
hlt
test
mov
jl
scas
js
sub
sahf
xchg
js
sub
ds
adc
mov
cmp
mov
mov
cmp
jbe
aam
lcall
ret
movsl
int3
push
daa
cmp
adc
loopne
lock
in
cmpsb
jl
jb
movb
adc
push
cmpsl
adcb
test
mov
sub
negb
test
pop
cmovb
sub
ftst
inc
add
sub
and
add
fistpll
addr16
jnp
xchg
jbe
jo
js
or
cld
ja
and
jp
mov
fsubrp
js
pop
sub
or
mov
add
icebp
sbb
and
inc
cmp
nop
inc
mov
fdiv
pop
ds
mov
shl
sub
lcall
lods
and
movsb
stos
xchg
lods
push
nop
cwtl
dec
adc
out
pop
aas
and
aas
xchg
cmp
aam
stc
rcr
addr16
mov
scas
add
or
mov
sbb
das
fcompl
and
daa
in
pop
int3
roll
jecxz
jl
xchg
jo
inc
cmpsl
int
dec
or
push
int
and
movsl
push
pop
inc
sub
and
pusha
push
jo
mov
sar
cmpsl
add
push
push
inc
dec
rclb
in
iret
sbb
mov
fcomps
lds
fisttpl
loope
dec
dec
or
mov
mov
pop
popa
mov
sbb
sub
call
in
lahf
adc
xchg
inc
and
sahf
adc
dec
and
test
jb
mov
mov
cs
outsl
lret
dec
movsl
repnz
stc
adc
and
lret
cmp
sub
cmp
stos
mov
xchg
push
ss
push
fcomps
fstpl
xchg
push
and
dec
push
ss
call
jne
jo
cmp
lcall
lods
mov
or
mov
lret
leave
or
jl
jp
lret
inc
stos
ss
orl
adc
jae
cmp
mov
inc
jbe
or
shll
int3
enter
xchg
clc
ficoml
aam
insl
divb
scas
mov
ljmp
cmp
mov
mov
fs
cmc
fisubrs
sbb
jmp
adc
jbe
popa
int3
stc
or
adc
inc
fisttpl
ret
fmulp
or
sti
std
xchg
dec
mov
or
inc
xchg
shl
jbe
add
sbb
mov
insl
jl
mov
adc
sbb
testl
insl
jmp
fcmovne
fiadds
pop
enter
lret
rcl
ja
sbb
or
in
dec
andb
dec
shl
jo
test
pop
dec
inc
and
ss
popf
ljmp
fisubl
inc
mov
add
lret
ret
outsl
cmp
or
int3
frstor
ds
test
fldt
adc
mov
push
lret
jne
add
xor
fldt
ds
ja
mov
cmp
fisubl
pop
ss
cmp
push
notb
fstps
mov
lods
aam
es
adc
ljmp
mov
and
arpl
sbb
pop
jns
jns
xlat
rorw
imul
mov
inc
int3
movsb
pop
fidivs
fs
pop
cmp
lea
dec
jno
frstor
sub
jo
xchg
out
cltd
mov
popf
addr16
fisttpl
outsb
pop
mov
data16
inc
xlat
dec
mov
mov
popf
pop
mov
aam
or
out
lcall
and
pop
not
jmp
jbe
mov
fistl
and
xor
loop
or
sub
adc
inc
in
je
push
xchg
sahf
shrl
mov
call
add
adc
mov
test
clc
inc
xchg
xchg
sub
or
xlat
jnp
dec
pop
jns
gs
jge
and
repnz
arpl
dec
push
sub
push
cmp
cltd
dec
lds
or
cwtl
fsub
fmulp
mov
xor
repz
popa
add
es
int
addb
jl
ds
add
push
shrl
rep
addr16
sbb
mov
xchg
mov
ret
or
ret
leave
mov
lods
inc
sub
inc
addr16
inc
mov
fsubp
push
imul
cmpsb
popa
mov
sub
add
aam
inc
data16
mov
push
dec
repz
ds
mov
sub
loop
std
sbb
xor
mov
shlb
js
cmp
mov
movsb
mov
ucomiss
dec
add
fsts
ja
dec
dec
jle
ss
ret
loope
adc
aaa
cmp
sbb
loop
gs
cs
push
and
or
push
aam
xchg
int3
inc
nop
gs
adcl
out
fsubrp
jb
jp
and
movsl
mov
and
cld
mov
mov
and
inc
aas
loop
hlt
push
dec
fndisi(8087
sbb
dec
push
push
mov
sbb
adc
cld
lcall
orb
push
jge
dec
push
push
pop
in
push
push
enter
jg
cmp
add
das
dec
pop
scas
pop
sbb
lods
clc
loop
js
mov
sbb
mov
mov
test
es
push
out
lahf
rep
dec
fwait
xchg
mov
in
sub
ror
adcb
inc
pop
out
pusha
or
jl
shrb
in
popf
cmp
xchg
loopne
mov
sbb
xor
sbb
cwtl
cmp
inc
jecxz
aad
hlt
push
adc
insb
fbstp
imul
cmpsb
aad
push
mov
and
adc
addr16
das
imul
insb
movsl
pop
iret
insl
sahf
test
jg
sub
xchg
roll
cwtl
pushl
aam
push
mov
int3
fucomip
mov
xchg
in
push
decl
jne
les
lock
mov
ficompl
cmpsl
sbb
xorb
sbb
cmpb
jb
push
or
test
imul
xor
mov
or
inc
das
xlat
mov
and
es
insl
gs
xchg
sub
int
or
sti
mov
cmpsb
cmp
ljmp
inc
dec
iret
cmc
xchg
in
jge
sub
pop
out
out
imul
add
inc
dec
daa
ljmp
inc
adc
cmp
test
fld
insb
jnp
pop
iret
push
add
dec
pop
sahf
test
cld
rorb
mov
subl
xchg
mov
xchg
and
aad
cmpsb
loop
add
arpl
outsb
popa
mov
push
mov
cmpsb
sti
in
sti
in
shrl
jo
push
mov
add
ds
in
xchg
push
cmpsl
stos
lcall
loop
iret
fstpt
in
xchg
test
iret
mov
cmp
jp
popa
fwait
push
aas
adc
mov
movsl
mov
sub
push
push
jmp
out
in
jle
or
aam
mov
es
inc
mov
inc
test
rclb
push
pop
or
ds
stos
xchg
fs
dec
mov
in
mov
jne
xchg
clc
cs
popf
cmpsl
fcompl
sahf
sbb
dec
cmpsl
push
xlat
inc
out
and
sub
loope
or
fstps
in
add
and
add
sbb
push
adc
lahf
dec
aaa
mov
cld
mov
pop
arpl
jb
int3
dec
and
mov
adc
xchg
xor
outsb
sbb
pop
sbb
sti
fst
mov
lahf
pop
add
int
in
imul
mov
cld
pop
cmp
bound
push
cmp
jl
push
lcall
outsl
adc
rcrb
push
orb
fldt
lods
mov
jmp
arpl
mov
and
mov
mov
mov
mov
mov
sti
pop
mov
lock
inc
or
lret
js
ljmp
push
dec
sarl
cmp
stos
sti
mov
sub
mov
sahf
and
cmp
ficoms
and
adc
repz
mov
mov
inc
pop
mov
dec
repz
add
out
bound
daa
and
inc
popa
loop
adc
test
or
out
je
imul
inc
test
stos
push
jbe
mov
fdivl
sti
xchg
orb
dec
rcrl
mov
fcos
popl
imul
xor
dec
ss
shrl
jmp
pusha
inc
jecxz
clc
dec
sbb
and
je
sarb
cmp
cltd
arpl
out
push
dec
fiaddl
xor
movsb
adc
stos
lock
faddl
mov
dec
cmpsl
mov
cltd
push
call
lods
and
roll
mov
and
cmpsb
push
or
js
jle
lock
lahf
dec
out
or
mov
jge
aas
fwait
mov
xlat
xchg
mov
cmp
jo
jns
xchg
or
xchg
jge
popf
adc
jo
dec
jbe
dec
pop
sub
push
cmp
xchg
cmpsl
cwtl
adc
pop
inc
clc
lods
cmpsb
fisubrs
mov
cmp
in
test
insl
jno
mov
mov
ljmp
mov
mov
pop
out
xchg
test
out
add
fdivr
aam
xor
fcmovnb
mov
sub
inc
test
add
stc
rorl
out
and
testl
inc
sub
lds
push
push
sub
mov
loopne
push
or
jge
cld
data16
ret
add
sbb
sbb
mov
or
lods
and
imul
push
mov
adc
and
jg,pt
clc
jecxz
fwait
in
in
dec
inc
push
mov
dec
mov
pop
inc
cmp
test
imul
inc
lds
inc
sub
jl
jnp
or
cmp
xor
icebp
push
fcompl
aas
loop
arpl
lock
pop
cmpsb
cmpsb
es
xchg
xchg
push
add
outsb
mov
xchg
adc
mov
sub
push
stc
inc
cmp
ss
orl
fistpl
call
enter
loope
nop
mov
nop
mov
push
add
lahf
mov
stc
rcrl
les
dec
sti
push
mov
int3
gs
push
cmp
sbb
int3
push
aam
push
paddusb
bound
int
push
lret
adc
xchg
cwtl
and
mov
pop
repnz
pop
scas
or
push
ja
arpl
fsubs
push
push
out
dec
xchg
inc
dec
test
dec
les
andb
sti
mov
ja
sub
out
aam
jnp
mov
mov
inc
mov
jp
jp
sbb
mov
es
adc
inc
imul
fldl
pop
repnz
and
rolb
lahf
sub
pop
adc
leave
adc
mov
incl
imul
add
jmp
adc
loop
add
scas
sbb
jnp
je
and
stos
add
adc
int
xchg
hlt
pusha
xor
arpl
and
cmpsl
movsl
xlat
lret
andl
outsl
fsubs
mulb
jecxz
dec
mov
ret
xchg
divl
sub
test
xchg
cli
dec
arpl
pop
out
or
pop
fwait
cltd
push
add
inc
adc
lret
sbb
push
cs
in
or
ds
into
outsl
xor
push
rorl
insl
xor
loopne
out
mov
inc
cmp
pop
mov
xchg
add
pop
sub
ret
add
outsb
je
mov
rcll
jnp
xor
cmp
and
add
xor
pop
enter
mov
xchg
movsb
repz
pop
loope
scas
pop
insl
pop
pop
loop
add
testl
mov
and
adc
mov
and
lock
push
and
movsb
in
pop
dec
iret
mov
inc
mov
loopne
inc
mov
test
out
mov
xchg
xchg
int
xlat
pop
sbb
pop
cmp
jbe
dec
rcll
push
or
push
in
mov
sbb
fnsave
push
scas
jle
int
aaa
loope
jb
cltd
mov
cld
mov
repz
add
ja
mov
sub
sbb
pusha
mov
add
das
lcall
mov
cwtl
add
adc
gs
roll
inc
lea
movsb
mov
cmp
call
sbbl
stos
cmp
lret
mov
push
xchg
mov
dec
cwtl
inc
icebp
pop
mov
outsb
lods
mov
jne
icebp
jle
dec
cmp
add
inc
push
mov
mov
pusha
es
lds
push
pop
fldt
repz
dec
sbb
icebp
fs
mov
mov
and
jg
jmp
lock
push
je
jge
xchg
ret
xchg
gs
mov
aad
mov
mov
hlt
test
sahf
mov
hlt
mov
sub
inc
mov
add
test
mov
icebp
arpl
mov
cmp
loope
mov
jg
adc
pop
scas
dec
iret
sub
push
xchg
push
xor
and
inc
fs
push
dec
push
insb
sti
pop
push
mov
das
adc
les
sub
lahf
jo
push
ds
lret
jp
push
push
dec
aaa
fisttps
mov
mov
nop
jmp
mov
jne
mov
ljmp
mov
or
fnstsw
xchg
adc
iret
jae
adc
add
fwait
mov
nop
push
lods
or
push
mov
mov
mov
movsl
das
jmp
jno
jns
add
mov
rorl
lahf
dec
shlb
out
pushf
aad
lahf
icebp
and
dec
fs
into
ljmp
or
enter
out
xor
std
cmc
shl
xor
mov
xchg
mov
nop
xchg
inc
lods
stos
cmpsl
push
dec
pushf
decb
arpl
sbb
mov
shlw
inc
push
mov
mov
fcomp
or
sub
dec
pop
mov
cmpsl
xor
in
cmp
adcl
mov
jecxz
pop
pop
sub
xlat
jmp
rcrb
lods
push
sar
loope
xchg
push
push
sbb
rorl
mov
sbbb
sbb
stos
mov
test
adc
cmc
sbb
sub
mov
add
lcall
push
and
or
add
in
push
and
dec
and
or
mov
push
scas
test
xor
sarb
xlat
sbb
cmp
fsubs
pop
imul
lods
sbb
daa
test
cld
imul
dec
enter
ret
jg,pn
addr16
mov
jecxz
shrb
pop
in
enter
inc
and
lret
push
in
xor
jl
jmp
ds
lock
pop
scas
add
pushf
mov
paddw
subl
cwtl
mov
jg
ds
ss
loope
aaa
push
bnd
cmc
lret
sbb
leave
imul
jns
dec
jns
out
lret
mov
outsb
jecxz
je
scas
data16
arpl
test
push
push
mov
mov
jmp
mov
xchg
jae
push
sahf
mov
and
mov
lea
std
std
enter
cwtl
scas
adc
mov
dec
mov
xor
jmp
adc
in
pop
test
mov
sti
xchg
std
into
mov
pop
nop
lods
jp
nop
or
fwait
pop
leave
mov
sub
mov
pop
sub
add
pop
pop
inc
or
cmp
in
cmc
fbld
add
mov
std
add
pop
shl
mov
fimull
lcall
push
loopne
lret
mov
mov
mov
loope
test
pop
and
loopne,pt
jns
movsl
repnz
add
shrl
dec
xor
lods
hlt
aaa
cmp
push
inc
mov
loop
mov
xor
mov
mov
daa
pop
xchg
jns
add
sub
sbb
addr16
aas
stos
mov
pushf
call
in
add
jne
mov
cld
push
push
setge
or
dec
std
mov
out
and
cmp
in
aaa
mov
pop
or
mov
sub
sub
loop
lock
jnp
inc
js
sbb
aas
pop
int
inc
adc
mov
push
sbb
push
mov
test
lcall
mov
testb
inc
push
adc
inc
push
mov
lock
mov
sub
mov
sub
mov
jb
lahf
push
or
clc
roll
and
xor
nop
in
call
cmp
vpmaxub
outsb
cmc
call
lcall
mov
jg
ficoml
iret
lret
ret
lea
and
subl
test
fwait
pushf
cltd
dec
sbb
dec
cmp
fldln2
push
leave
mov
js
test
add
lods
xchg
or
subl
lods
xchg
jne
xorl
jnp
insb
mov
mov
lret
loope
mov
hlt
or
idivl
xchg
fiaddl
shlb
ja
and
nop
sbb
pop
lods
lcall
or
mov
mov
loop
push
xlat
ss
je
dec
aaa
jmp
das
xchg
mov
mov
push
xchg
hlt
cmp
push
faddl
and
scas
jp
in
iret
pop
fs
nop
jmp
ss
test
inc
push
or
push
adc
dec
xor
imul
test
add
adc
repz
inc
mov
fdivs
and
test
nop
cs
in
sub
inc
lret
fadd
shlb
mov
aas
push
in
es
cmp
test
and
add
sub
test
stc
ds
adc
jbe
dec
bound
cli
sbb
fildl
jnp
imul
inc
and
aad
fucompp
sub
cli
dec
enter
xchg
add
fwait
out
lds
xor
mov
insl
cs
mov
in
cmc
movsl
sti
inc
push
mov
call
repnz
insb
sub
push
sub
jmp
add
inc
pop
add
jmp
mov
pop
insl
push
push
test
filds
or
xor
mov
sti
out
xchg
sahf
or
xlat
cli
mov
aaa
loopne
mov
lcall
out
pop
popa
lcall
xchg
mov
sbb
aam
dec
repnz
mov
cmpsl
enter
mov
insl
faddl
lcall
ror
mov
sub
sub
fdiv
xchg
setp
push
pop
into
push
test
lahf
je
pop
cmp
xor
ja
data16
dec
xlat
push
mov
mov
mov
jnp
out
scas
jl
or
inc
fisttpll
test
cmp
dec
insl
jecxz
mov
inc
mov
sti
out
push
js
hlt
inc
ja
add
jge
xor
leave
cmp
and
inc
ss
or
push
adc
out
cmp
mov
xchg
fdivrl
scas
out
call
cmp
push
ljmp
arpl
loope
jle
jbe
jl
enter
mov
les
lods
push
sbb
adc
xor
pop
dec
pushf
push
adc
loopne
int3
lret
sub
xchg
sub
cmp
dec
frstor
push
nop
lock
push
rorb
imul
popa
in
stos
int
rclb
inc
ds
cld
inc
outsb
loopne
push
in
and
mov
jp
mov
lods
push
and
aaa
sbb
adc
loop
popf
sbb
adc
aaa
or
xchg
cli
rcl
ret
movsb
xor
jb
ss
push
nop
dec
ret
xor
mov
outsb
jb
pop
into
inc
inc
repz
inc
insb
cmpsb
stos
enter
cmp
push
xchg
insb
ds
lods
aas
jbe
out
stos
add
out
cmp
lea
pop
xlat
fistl
pop
fildl
repz
movsl
adc
sub
lahf
cmp
inc
les
pop
xchg
jbe
mov
or
stc
dec
in
jg
xor
mov
mov
addr16
out
loopne
sub
pop
mov
sti
cs
cmp
std
div
cld
mov
in
ljmp
lret
inc
xor
repnz
and
test
cmpsb
arpl
xor
inc
daa
ss
sub
es
add
push
addb
pop
adc
inc
test
dec
sbb
insb
stc
xor
adc
pop
pop
subb
inc
nop
loope
and
rclb
fs
in
je
lcall
add
mov
jns
es
dec
sub
lock
cmp
pop
pop
call
sub
mov
stos
cmc
jne
stos
or
out
cmpsl
cmp
sar
mov
mov
cs
mov
lea
popf
jnp
jno
ret
or
jns
scas
sub
ret
mov
mov
jnp
cmpsl
ljmp
ficoms
call
sub
das
mov
pop
jne
pusha
dec
add
ror
adc
ja
xor
stos
jmp
movsb
mov
movsb
arpl
sub
enter
and
add
clc
ljmp
fdivr
pop
stos
cmc
adc
mov
jne
addr16
push
jge
mov
daa
cwtl
adc
cmp
push
pop
push
test
cmovp
cld
jl
dec
xchg
xchg
jl
ret
push
lcall
pusha
subl
push
sbb
sub
ja
push
lock
jl
add
andb
xchg
xor
pop
mov
jmp
stos
or
stos
popa
add
mov
movsb
cmp
push
lret
mov
ret
data16
and
movsb
dec
inc
push
aaa
adc
adc
mov
es
andl
imul
sub
cli
aad
xchg
mov
dec
sub
mov
ljmp
in
xor
out
or
pop
stc
cmpsl
arpl
push
in
sbb
loope
adc
and
out
xor
xor
je
or
in
or
sahf
leave
into
test
adc
nop
outsl
or
xchg
jle
popf
orb
fsubl
repz
adc
dec
es
dec
inc
sbb
sub
lcall
mov
pop
mov
mov
lods
ss
lea
clc
mov
jecxz
test
add
ficoml
mov
test
out
scas
or
mov
push
shll
dec
into
sub
adc
dec
mov
dec
push
mov
ds
ret
and
sbb
das
in
mov
push
out
push
movb
movsb
sbb
leave
test
pop
inc
into
shl
add
mov
ss
repnz
imul
aas
pop
add
sbb
aad
pop
les
stos
adc
rcrb
xor
sti
in
jae
jmp
rcrl
clc
ss
nop
or
xchg
push
sub
mov
adc
push
gs
stos
pop
inc
negb
cmpsb
insl
dec
inc
push
pop
cmpsb
mov
sahf
adc
into
out
mov
seto
lcall
loopne
lret
jne
stos
inc
push
pushf
dec
adc
mov
iret
adcb
sub
mov
add
mov
inc
in
mov
lahf
inc
mov
push
mov
mov
out
inc
sahf
xor
popa
mov
push
test
xchg
aad
bound
hlt
adc
sub
push
mov
punpcklbw
stos
call
leave
mov
cmp
clc
cmp
jl
int3
dec
adc
dec
or
dec
add
and
shl
and
mov
repz
xor
cs
pusha
loopne
xchg
cli
jl
test
imul
addr16
or
mov
sbb
je
lods
sub
int
adc
mov
pusha
add
or
stc
push
in
mov
push
fwait
pop
dec
fxch
push
or
sbb
aam
add
loop
fistpll
sub
push
sub
aaa
sub
pop
and
mov
push
dec
pop
loop
loop
js
addr16
es
int
test
out
xchg
xchg
mov
pand
fwait
aad
insl
fcomps
mov
and
ss
sbb
ss
popf
ret
pop
mov
xor
insb
loope
jp
cmp
jnp
xlat
in
lret
xchg
cmp
jne
jno
pop
and
mov
sbb
cmp
iret
push
jp
lods
sub
test
hlt
sbb
mov
cltd
add
cwtl
sbb
ret
loopne
or
shlb
stos
inc
and
fdivl
test
dec
pop
lock
push
push
or
icebp
cmp
mov
or
push
mov
loopne
arpl
ret
jl
sbb
sti
jbe
cld
jp
push
push
repz
les
ljmp
xor
inc
shl
mov
lock
clc
push
call
push
mov
ds
cli
jp
mov
enter
jae
fs
push
push
jbe
mov
jle
inc
aad
roll
and
cld
sbb
cltd
mov
rcll
add
js
add
outsl
dec
shll
mull
sbb
orl
sub
push
movsb
hlt
jo
sbb
and
push
std
dec
inc
cmc
mov
pop
cmpsl
mov
orb
es
mov
in
jo
xchg
inc
sbb
inc
mov
setno
mov
stc
adc
popf
cmpsl
lock
arpl
add
xchg
lock
iret
xor
bound
imul
repz
xchg
imul
test
sbb
arpl
mov
jne
sub
je
dec
sbbl
fbld
ja
xchg
dec
addr16
lods
in
xor
cmp
ficompl
fimuls
mov
lahf
mov
int3
stos
les
out
popa
test
or
icebp
sub
movsb
or
and
idiv
sbbl
adc
cli
push
cmp
mov
xchg
shl
in
je
scas
inc
cwtl
or
dec
sub
jnp
mov
sbb
add
xchg
ret
mov
push
dec
addr16
aam
lahf
aaa
sub
das
fimull
das
pop
lahf
push
das
add
push
cmc
mov
dec
test
sbb
rcrb
loop
lock
loope
pushf
mov
inc
mov
sub
push
jne
and
pusha
or
ret
cmp
mov
andl
cwtl
imul
xchg
push
dec
mov
push
mov
pushf
pop
inc
bound
out
jg
jae
jne
ss
push
lea
cmp
hlt
jmp
cmp
xor
in
in
jmp
and
aas
insb
addr16
or
leave
and
ljmp
adc
inc
dec
addr16
push
dec
shll
nop
pop
popa
lret
in
dec
mov
sub
mov
loop
and
add
xchg
cltd
pop
sbb
inc
test
push
nop
mov
mov
ret
popf
fldt
sub
icebp
cwtl
popa
push
xlat
jmp
cmp
jne
aad
inc
lea
loop
sub
jp
lods
retw
jne
mov
or
sahf
mov
mov
inc
or
cmp
mov
mov
push
stos
pusha
add
sbb
cwtl
xchg
sub
hlt
sahf
aad
fcomi
iret
popf
mov
mov
stc
fidivs
inc
adc
pop
aas
rcrb
sbbl
cmpsb
add
test
cmp
xchg
push
adc
adc
sub
add
pop
sbb
lret
leave
add
xor
rclb
adc
push
jp
xchg
into
sub
jno
add
xchg
ljmp
pop
jb
add
pop
push
nop
mov
add
loopne
jnp
or
lods
cmpsl
push
fldenv
push
or
jl,pn
aaa
push
iret
jle
mov
adc
int
or
pusha
test
popa
xchg
ret
into
xchg
test
adc
lds
push
add
cli
inc
mov
mov
pop
or
popa
scas
lds
loopne
inc
cmp
je
push
enter
sbb
inc
pop
pop
sub
push
push
sahf
into
xchg
inc
mov
pushf
cmp
enter
ja
fildll
adc
inc
nop
add
jmp
xchg
lret
mov
mov
sub
add
pop
mov
outsl
inc
pushf
or
lock
add
jl
xchg
cmpsl
outsl
mov
xchg
mov
rorl
push
test
nop
dec
cli
mov
ds
scas
sub
cmp
sub
dec
add
mov
push
insb
push
in
repnz
dec
and
push
aaa
inc
out
pop
xor
fnsave
pop
stos
xchg
pop
xchg
movsb
jp
dec
inc
mov
and
mov
insb
jge
dec
mov
insb
add
mov
dec
mov
cmp
stc
xchg
mov
mov
arpl
enter
rcl
mov
pushf
jo
insl
cmp
in
adc
inc
aaa
sub
lock
or
pop
xor
lea
insl
imul
sub
bound
fcomp
repnz
jo
rcrb
cmpsb
js
icebp
testb
xlat
mov
mov
add
add
jg
arpl
pushl
cwtl
sub
shll
ja
addr16
aaa
in
inc
pop
int3
movsl
lods
push
sub
mov
movsb
loope
cmp
sbb
dec
lahf
les
push
test
popa
je
popf
xor
add
scas
test
int
inc
repz
fisubrl
hlt
xchg
in
popa
cmp
adc
cmp
stos
notb
cld
stc
out
jnp
lea
sbb
mov
hlt
pop
push
xor
fwait
les
push
mov
repz
fnstsw
mov
js
divl
stos
shll
fwait
int3
pop
cmp
jecxz
adc
add
jns
cmp
push
in
stos
mov
push
orl
or
lock
add
cmp
int
jp
imul
lea
sbb
xchg
push
mov
jmp
jnp
and
or
and
adc
dec
repz
xchg
daa
mov
cmc
fstpl
mov
sub
mov
fs
xlat
adc
mov
ficompl
mov
nop
adc
push
fcomps
push
lock
xchg
stc
into
pop
push
jno
mov
outsb
push
add
xchg
or
sub
pop
xor
mov
clc
mov
inc
lcall
jno
mov
mov
sub
jne
faddp
sbb
andl
lock
sub
in
inc
je
insl
incl
std
or
push
cmp
jl
idivb
ljmp
mov
push
mov
jecxz
jmp
add
int3
mov
fdivl
std
xchg
jecxz
test
test
bound
fdivrs
fsts
mov
or
cmpb
sbb
leave
xchg
aas
add
cmp
mov
xor
push
lods
inc
cmp
test
add
repz
testl
and
notb
loop
jb
leave
add
dec
adc
sub
rcrl
mov
std
test
push
mov
cmpsl
xchg
cmpb
cwtl
out
movsl
hlt
imul
cmp
out
xor
cld
paddw
adc
ljmp
out
jnp
ss
mov
xor
fwait
xor
rcll
and
adc
xchg
loope
pop
jae
dec
das
aam
mov
mov
mov
hlt
dec
inc
in
lock
mov
push
nop
lods
jae
mov
fs
iret
shl
cmp
mov
repnz
xchg
lea
stos
mov
dec
jno
jb
and
call
xchg
jne
and
out
lds
and
ficoms
imul
or
jbe
cmp
and
mov
popa
push
fcoml
inc
je
aad
lods
dec
std
call
stos
adc
ror
and
test
imul
dec
inc
mov
clc
outsl
repz
inc
ds
dec
jo
inc
dec
push
lahf
pushf
jg
fidivrs
imul
xchg
fdivrl
push
lret
loop
mov
mov
ret
push
sti
inc
pusha
andl
repnz
into
das
adc
loope
nop
or
outsb
dec
imul
das
push
mov
xchg
popf
in
xchg
in
cld
mov
pop
sbb
bound
cmp
shrb
lock
and
fdivrs
adc
ret
and
jne
jge
dec
in
mov
jp
cmc
inc
movsb
fs
test
shlb
push
mov
sbbl
mov
push
add
sub
mov
shrb
clc
fidivrs
xchg
mov
push
push
mov
sbb
xchg
jo
xlat
sub
dec
mov
imul
mov
and
dec
mov
cli
push
jmp
add
ljmp
test
clc
loope
shr
cmp
sysret
lods
pop
arpl
mov
fnstcw
dec
pop
pop
and
adc
cmp
mov
ret
xorb
lcall
or
adc
adc
jne
lcall
add
repnz
mov
stos
pop
dec
xchg
je
mov
addr16
fwait
inc
dec
xor
mul
push
add
push
imul
fiadds
pusha
fisubrl
and
mov
lahf
sub
sti
mov
inc
in
cmc
lods
mov
in
loopne
mov
mov
clc
adc
jecxz
stos
addr16
test
movsl
mov
lock
mov
push
sub
mov
ret
sub
dec
xchg
inc
mov
push
in
inc
outsl
push
jb
shlb
stc
sbb
sahf
xchg
jns
daa
inc
sbb
cmpsb
xchg
xor
js
add
jbe
jns
add
mov
jns
lahf
shl
movsb
mov
mov
xchg
mov
scas
dec
std
and
in
adc
aam
inc
cmpsb
mov
mov
pop
subb
les
aaa
jnp
sub
push
jne
and
sub
or
or
icebp
dec
mov
imul
and
adc
inc
aaa
shll
dec
mov
popf
repnz
cmp
nop
push
push
divb
dec
test
adc
fnstcw
popf
dec
dec
enter
inc
mov
push
cmp
push
sbb
bound
cmp
mov
inc
mov
cmpsl
imul
ret
cli
mov
ret
adc
pop
fsubrl
cmp
gs
call
mov
and
and
mov
in
cltd
ds
sarb
cmovae
gs
mov
add
push
imul
inc
in
addr16
adc
push
mov
ret
mov
rcrb
filds
test
icebp
cmp
ror
aas
pop
push
add
inc
mov
call
xor
dec
push
or
insb
push
ficompl
sbb
cmpsl
dec
lds
in
jno
sarb
or
pop
mov
jmp
lea
fidivs
sbb
xchg
mov
rorl
push
pushf
and
inc
sbb
or
sub
rclb
shrb
loop
mov
add
in
xor
mov
adc
clc
scas
sub
movb
pop
sub
cwtl
pop
movsb
pop
gs
fnstsw
xor
mov
incb
sbb
test
mov
repz
push
imull
rcrb
arpl
out
cwtl
cmp
push
pop
lcall
in
push
mov
lea
sub
mov
subb
mov
scas
sti
test
mov
mov
inc
int3
dec
sahf
js
adc
in
int
cs
out
aad
out
enter
fisttpl
scas
mov
add
dec
in
or
and
ficomps
int
pop
popa
mov
icebp
push
dec
hlt
mov
push
jo
cmp
mov
out
lods
mov
aad
inc
inc
dec
clc
push
pop
enter
fadds
sti
in
aad
jno
cltd
jno
call
sbb
push
or
sub
mov
cmp
adc
inc
cwtl
loop
sbb
sbb
mov
mov
fstps
xlat
hlt
inc
mov
mov
outsb
popa
pop
int3
adc
fwait
mov
mov
enter
icebp
sbb
insb
inc
add
arpl
or
adc
dec
lods
cmp
push
pop
movsl
push
ss
sbb
cmp
xor
mov
ds
insb
xor
adc
pop
into
inc
into
sbb
adc
jns
adc
data16
dec
cmp
and
inc
cli
lea
add
cltd
test
mov
mov
lcall
dec
or
mov
or
mov
mov
cmp
sub
lcall
jg
loopne
inc
adc
lods
sbb
pop
cli
mov
in
mov
add
pop
in
sbb
out
aad
jo
and
pop
add
fisttpll
sub
loop
xchg
loopne
subl
xchg
jb
xor
aam
js
mov
insl
mov
scas
dec
mov
shlb
test
mov
cmpb
xor
xchg
pop
in
enter
jo
icebp
push
notl
dec
fnsave
pop
in
and
stos
call
cmp
pop
ljmp
mov
loop
push
inc
push
daa
xchg
cli
iret
push
aad
jg
push
mov
outsl
jne
shlb
or
cld
push
sub
inc
cmpsl
push
pop
or
es
jmp
lds
mov
icebp
lahf
or
push
stos
push
mov
dec
rolb
shrb
pushf
sbb
xchg
rcpps
ds
ret
cmp
add
add
imul
push
das
fldenv
cmp
mov
out
cmp
enter
stc
enter
sbb
mov
cmp
or
movsb
lock
mov
or
mov
out
mov
jl
lahf
jmp
dec
jmp
push
inc
and
and
cmp
outsl
push
enter
cltd
xor
lods
push
pop
enter
sbb
dec
out
lock
mov
sahf
pop
inc
lods
xchg
xor
sbb
lahf
insl
out
popa
and
insb
insl
scas
fs
mov
test
pop
rorl
push
cmc
xchg
fs
sub
push
movsl
xchg
sti
sbb
dec
jns
test
into
mov
jmp
mov
frstor
xchg
and
movsb
mov
jle
jno
push
xchg
into
icebp
xor
mov
xchg
repz
sub
ljmp
mov
and
xor
inc
sbb
out
popa
sub
xchg
repz
jo
ss
adc
mov
dec
lcall
pop
xlat
movsl
adc
xor
add
sub
lds
adc
mov
pop
xchg
mov
cmc
push
pop
imul
aad
pop
enter
sub
lcall
add
stc
inc
ljmp
xor
aad
cld
and
jbe
mov
movaps
add
lcall
cmp
stos
pushl
fadd
shll
or
inc
insb
pop
lea
test
push
xchg
push
icebp
enter
jg
out
fimull
xchg
clc
bound
in
and
add
pusha
call
pop
jae
inc
mov
aam
pop
imul
mov
add
sub
push
outsl
cmc
dec
fcoml
je
lods
lock
lcall
mov
ret
mov
sbbb
shll
inc
fdiv
jbe
hlt
sub
and
xor
cmp
sub
sbb
lahf
pop
pushf
xchg
and
es
leave
les
push
pop
stos
int
in
nop
test
cmp
or
movsb
pop
pushf
rorl
xor
loopne
mov
cmp
push
jo
xchg
out
ret
sub
jno
mov
lock
mov
jg
cmp
xchg
mov
jno
push
in
jo
xor
mov
test
out
pop
cmc
fldcw
fisubrl
mov
jmp
or
push
mov
jno
mov
dec
push
and
pop
and
lds
sbb
or
cli
jecxz
mov
in
or
sbb
loope
inc
xchg
jge
daa
lock
ret
ljmp
cmp
adc
fs
rcrb
fisubrl
insb
cld
xchg
cltd
mov
jle
cld
adc
pop
xor
push
lea
push
cmpl
mov
aas
scas
shrl
lea
cmp
leave
and
lret
or
gs
lock
push
mov
jnp
and
sbb
scas
daa
pusha
inc
mov
push
or
sbb
xor
cmp
xchg
dec
dec
xchg
pop
pushf
pop
mov
in
pusha
dec
mov
fsubrs
rcrb
sbb
mov
test
sbb
dec
mov
fmull
in
in
imul
outsb
sbb
sub
sub
icebp
push
std
fsubr
cmpsb
or
mov
add
imul
les
push
push
call
push
inc
mov
lcall
add
cwtl
dec
fsubl
pop
das
jno
nop
imul
insl
jmp
sbb
addr16
mov
in
stos
ljmp
inc
popf
into
xor
mov
lret
rcrl
or
jle
or
testl
mov
sbb
ljmp
sub
jecxz
cmp
mov
loope
cli
cs
cmp
fstpl
push
push
sbb
iret
pop
loopne
fwait
daa
out
daa
adc
cmp
jbe
cmc
outsl
push
adc
pusha
cmc
ret
icebp
mov
sub
aas
lods
push
push
mov
lock
hlt
dec
int
popf
pop
bound
xor
in
gs
loope
fstps
outsl
push
roll
jge
mov
adc
and
adc
add
loope
xchg
out
addl
mov
adc
mov
pop
mov
mov
test
es
fimuls
jle
insl
in
inc
cmpsl
test
cwtd
insl
pop
mov
push
cli
stc
scas
out
mov
es
movsl
adc
sahf
jp
jmp
mov
rep
adc
mov
jns
aaa
or
jo
sbb
ja
pop
jb
stos
mov
ds
adc
lea
mov
mov
stos
inc
fimull
adc
jecxz
xor
push
push
movsb
ret
cs
xorb
sar
dec
and
cmp
es
out
jge
or
xor
mov
mov
pusha
jne
add
jne
jecxz
sahf
aaa
mov
xchg
inc
jge
add
shr
xchg
lcall
mov
rcll
nop
cmpsl
dec
cmc
and
push
mov
xor
push
and
in
daa
call
and
mov
in
push
fcomps
je
jmp
aad
and
in
inc
jae
and
fsubrl
popf
imul
and
add
jle
add
jle
out
popa
sbb
jns
inc
and
adc
aad
insb
shlb
sbb
subl
mov
xor
dec
cld
ret
push
dec
mov
pop
sahf
aam
lea
outsb
out
arpl
xchg
xchg
mov
icebp
xor
insb
inc
cmpsb
out
arpl
fists
into
add
pop
sti
lock
adc
pop
ljmp
faddp
hlt
and
and
sub
adc
ret
inc
cmpsl
adc
fidivrl
lcall
enter
ja
lock
addl
dec
leave
adc
cmpsb
or
jg
mov
push
cs
mov
adc
loopne
adc
lds
movsb
fidivrl
loope
fnstcw
fdivs
sahf
in
in
ljmp
scas
sub
cld
fcoms
cmp
push
jl
cmp
bound
and
pop
scas
leave
bound
inc
fs
aaa
push
dec
sbb
mov
ficoms
jmp
pop
pop
sti
je
mov
not
out
mov
std
dec
push
dec
xor
das
mov
sub
inc
ss
pop
add
loop
mov
sub
dec
jg
jns
push
call
imul
pop
out
dec
test
lret
aaa
jl
mov
ret
add
clc
pop
aas
push
out
clc
icebp
inc
in
sbb
outsb
js
inc
pop
rcll
clc
mov
repnz
ret
add
icebp
aas
dec
pop
push
cmpsb
xlat
insb
ret
dec
add
jne
sbb
ds
mov
cmp
aad
pop
addr16
pop
mov
movsb
out
mov
mov
dec
mov
add
ljmp
dec
fsubrl
xchg
out
mull
mov
mov
das
mov
int
xchg
scas
scas
addr16
xchg
nop
or
cmpsl
imul
pop
enter
jecxz
adc
test
xchg
inc
xor
rolb
std
movsb
sbb
pushf
cltd
or
daa
ds
and
fdivrs
imul
dec
or
push
out
xor
movsb
test
mov
std
pop
jle
dec
out
push
add
push
testb
dec
xchg
stc
mov
dec
pop
dec
pop
mov
mov
inc
mov
lahf
mov
stos
sbb
jecxz
xorb
push
sub
mov
popa
jge
adc
cld
xchg
inc
cmp
pop
pop
adc
cmpsl
aaa
sub
xchg
push
add
mov
es
sbb
loop
arpl
addr16
mov
pushf
xor
stc
shll
mov
fidivl
or
xchg
sub
lock
inc
daa
inc
arpl
xchg
jo
dec
jbe
inc
xor
in
mov
inc
call
inc
std
mov
cli
and
fnstenv
mov
js
fadd
jnp
mov
and
push
push
hlt
adc
mov
imul
stos
pusha
fldenv
xchg
xchg
rorl
mov
dec
je
mov
int
pop
push
in
stos
add
sbb
cmp
ret
xchg
in
outsb
insl
xchg
push
adc
fisubrs
sbb
jbe
push
js
mov
pop
sub
mov
in
movsl
pop
fidivs
or
repz
inc
mov
inc
incb
bound
ret
jnp
pop
lds
pop
and
mov
mov
push
daa
lds
mov
stos
cmp
test
notl
dec
nop
pop
loope
add
les
mov
mov
sub
mov
pop
add
gs
stos
std
or
loop
sahf
lods
inc
push
cli
sbb
pusha
jge
pop
test
test
dec
mov
aas
pop
and
and
push
cmpsl
dec
fisubrs
fisubs
cmp
cmp
xchg
fsubl
loopne
push
xor
maskmovq
popa
lret
loop
mov
jp
cmp
dec
push
pop
inc
sbb
ret
jae
ss
adc
jl
aaa
adc
sub
sbb
arpl
dec
or
jns
and
inc
loopne
add
test
in
into
fisubrs
inc
addr16
jmp
fld
inc
xchg
mov
jne
dec
movsl
push
addr16
dec
daa
ret
adc
sub
in
and
outsl
jecxz
dec
mov
mov
adc
cmp
xor
iret
dec
insl
cmp
and
test
adc
aam
xchg
rolb
jl
ret
cli
mov
or
lret
lods
pop
xchg
imull
mov
repnz
test
sbb
push
mov
fwait
sbb
je
jg
aaa
pop
inc
rclb
sbb
sti
es
sub
ljmp
mov
bound
aad
mov
mov
adc
jmp
popf
mov
mov
cmp
insl
jbe
and
divb
imull
and
sahf
mov
rclb
cmp
lods
cmpsl
push
inc
cmpl
sub
ret
test
xchg
cmp
dec
mov
into
movsl
stos
mov
jge
and
decl
pop
cmpsl
jns
mov
cld
call
shll
jp
inc
cmp
inc
mov
in
das
or
sub
xchg
cli
add
ficoms
push
xor
adc
or
sbb
leave
in
clc
cmp
and
xchg
jecxz
xchg
das
pop
stos
cmp
loopne
push
pop
sbb
fadds
pop
jb
dec
js
xchg
cmp
addl
lock
popf
icebp
stos
inc
jns
popa
test
test
scas
jmp
fldl
aas
or
push
std
pop
cltd
leave
add
aam
scas
sub
push
cmpsb
jno
pop
push
pushf
jno
fs
and
roll
sub
shll
mov
cs
adc
push
bound
add
add
hlt
cs
dec
jns
pop
gs
mov
mov
lret
nop
out
and
dec
adc
mov
inc
pop
shlb
fldenv
xchg
stos
mov
jne
iret
cmp
aad
sbb
xchg
mov
sbb
dec
lcall
repz
negb
jns
mov
inc
jae
test
dec
add
inc
shll
cmpsb
pop
inc
mov
mov
inc
lret
mov
sbb
test
fisttpll
jb
lcall
cmp
or
xor
add
dec
negl
mov
mov
cld
out
mov
cmp
add
inc
cld
adc
dec
mov
dec
xor
push
rclb
push
icebp
scas
pop
mov
jne
int3
dec
and
inc
in
xor
push
orl
in
insb
out
push
repz
xchg
rcr
ds
and
pop
add
push
xor
sub
pop
sahf
stos
mov
test
incl
or
imul
fnsetpm(287
cli
cmpsb
add
pusha
inc
jle
xchg
cld
push
aad
jge
xchg
mov
pop
int3
sub
lahf
lret
leave
cmc
std
xchg
mov
mov
rol
popa
lods
xchg
mov
push
ja
pusha
dec
rcrb
push
out
daa
push
sbbb
inc
cmc
inc
std
out
rcl
xchg
lods
add
fstpt
test
fisttpll
out
adc
mov
dec
test
rcll
xchg
mov
inc
inc
xchg
cmc
push
jl
cmp
and
and
xchg
sarl
mov
mov
mov
jo
insl
test
xchg
neg
je
sub
sbb
je
test
push
out
pop
lods
stos
clc
insl
jo
enter
sbb
out
xor
std
js
and
mov
dec
cmp
jno
pushf
test
fisttps
adc
sub
jo
icebp
pop
cmp
sub
or
inc
sub
hlt
pushf
push
push
repz
adc
fs
xchg
idivb
dec
iret
cmp
mov
outsl
push
nop
jbe
mov
insl
inc
icebp
xor
lcall
or
stos
mov
ja
xchg
movsb
add
cmp
fsubs
popl
aam
pusha
out
dec
mov
mov
int3
cmp
icebp
jl
cltd
inc
xchg
cmp
test
stos
add
xchg
mov
int3
ja
sbb
loop
into
adc
cltd
adc
pusha
dec
popa
adc
rcpps
push
ss
sbb
sub
aas
xchg
fsubr
add
xchg
or
adc
lds
jo
cmp
and
push
jg
mov
jg
push
cmpsb
mov
fbstp
ficompl
add
dec
and
aas
inc
pop
aaa
mov
scas
cmc
lcall
mov
repnz
push
fwait
mov
pusha
out
jo
or
and
xchg
mov
test
push
push
xchg
dec
adc
cmp
lahf
in
mov
outsl
in
sbb
adc
test
mov
or
push
add
nop
pop
jmp
inc
call
sub
xor
or
sub
in
ret
or
add
cli
or
pop
mov
and
mov
pop
stos
negb
xor
mov
outsb
mov
inc
inc
mov
mov
lds
imul
je
sub
movsl
les
repnz
mov
xor
push
test
das
jle
insl
dec
sbb
rcrb
insb
push
xor
adc
inc
mov
ss
insl
ret
push
decl
aad
or
notl
sub
dec
xor
shl
lods
mov
xor
cmc
dec
and
pop
loop
adc
xor
out
pop
cmp
mov
aam
jle
and
insl
inc
cmpsb
loop
mov
jmp
mulb
mov
ss
pop
mov
pop
mov
fwait
or
adc
jbe
dec
aaa
mov
and
out
xor
mov
addr16
and
lds
inc
insb
ss
cmpsb
ds
test
int
xorb
dec
leave
adc
aas
mov
icebp
sub
push
cmp
mov
pop
in
into
sbb
fsubrs
jnp
cmpsl
pushf
sbb
pushf
xchg
mov
and
loopne
in
jbe
imul
into
test
mov
push
lea
mov
lret
fsub
sbb
icebp
mov
lcall
pop
mov
icebp
shr
cmc
dec
sahf
sbb
sub
pop
lahf
fwait
or
push
repz
ds
sub
fwait
adc
jo
test
enter
fnstsw
in
add
pushf
inc
repz
jle
shll
dec
das
or
mov
dec
cmp
rcrb
xchg
ds
cmp
mov
dec
lcall
sub
stos
arpl
out
leave
in
js
andl
jns
ret
outsb
dec
add
shll
ret
mov
insl
loopne
or
enter
outsl
stos
cmp
in
or
cld
jp
inc
mov
sub
shr
or
lods
test
xor
mov
pop
sbb
clc
add
sbb
pop
call
pop
ret
push
pop
sbb
add
fistpl
mov
dec
pop
xchg
mov
std
shll
and
out
adc
mov
flds
adc
cmp
sbb
in
sbb
mov
pop
frstor
mov
xchg
mov
fs
cmc
push
jo
lcall
mov
fistps
repnz
fsubs
cwtl
fisubl
fists
out
movl
pop
xchg
out
iret
push
and
cmp
mov
sub
lret
clc
call
sti
mov
repnz
divb
iret
mov
je
aaa
cmp
fcompl
imul
dec
imul
ds
xor
dec
in
aas
test
inc
adc
jne
fsubrl
cmpsl
ss
in
jno
sub
pop
mov
fdivl
fisttpll
lods
push
mov
mov
aaa
xchg
pop
fs
push
loop
push
mov
in
aaa
aam
stc
xor
sub
and
pop
xchg
push
push
std
cmp
seto
fadds
pop
sbb
lret
ret
ret
loopne
mov
lds
and
mov
in
jno
jne
fldt
int3
std
les
scas
adc
in
clc
mov
aaa
mov
add
xchg
insl
movsb
sbb
sub
mov
ret
mov
mov
sbb
xchg
rcl
daa
int
jae
in
and
addr16
js
adc
mov
pop
enter
ret
mov
or
imul
rcl
imulb
insb
andl
clc
mov
out
imul
adc
pushl
sbb
mov
jmp
or
push
jae
and
adc
jmp
push
repnz
inc
addr16
dec
pop
aam
test
cmc
mov
fucom
xchg
addb
sub
mov
sahf
jmp
je
mov
push
mov
repz
repnz
jmp
cwtl
xor
push
jne
lods
int3
or
in
arpl
int3
in
add
or
xlat
enter
sahf
ficomps
mov
idiv
cmp
inc
mov
and
stc
rcrb
sbb
or
push
inc
and
decl
or
outsl
test
js
pop
xor
mov
mov
cmpsl
aad
and
cmpsl
aam
push
or
pusha
xlat
sar
iret
push
data16
inc
fld
push
lea
dec
jmp
or
cs
cmpsl
mov
mov
mov
int
aam
loope
std
cmpsb
cmp
pop
sub
cli
and
lahf
nop
aas
popa
xor
push
insb
fsts
sub
sahf
enter
mov
arpl
sub
ds
into
dec
push
orl
femms
je
sub
xchg
ficoml
sbb
mov
cs
pop
bound
hlt
cs
clc
fs
iret
cmp
push
fwait
out
inc
jnp
arpl
xor
outsl
aad
iret
cmp
and
cld
xchg
jb
inc
mov
in
sbb
pop
push
mulb
fnstcw
xchg
fimull
out
jl
stos
ds
xlat
lcall
mov
addl
jb
sbbl
out
mov
out
ja
push
jae
jbe
or
push
mov
scas
aad
movsb
mov
lret
mov
mov
sub
bound
je
shr
cltd
jg
gs
add
mov
mov
xlat
lcall
push
ljmp
ljmp
cli
jge
shr
popf
push
mov
scas
or
cmp
pop
sub
das
or
push
jmp
adc
push
add
sub
mov
xor
or
push
inc
inc
sbb
or
cwtl
enter
nop
lcall
mov
mov
std
outsl
insl
jg
std
lods
in
lea
test
cmp
xor
jno
sub
enter
sub
cmp
stc
mov
xchg
add
test
dec
xorl
dec
inc
adc
lea
lods
xor
cli
ljmp
xchg
cmp
jno
xchg
and
jbe
lock
fstl
sub
add
jb
ficoms
jb
stos
outsb
das
fucom
push
adc
insl
pop
mov
into
jne
jbe
ret
add
iret
pop
cmpsb
push
inc
pop
pop
or
xchg
nop
cltd
adc
dec
xchg
jmp
roll
dec
inc
jne
lret
jo
pop
sbb
jno
xor
fs
xchg
shrl
jo
cmp
jl
mov
or
xorl
jmp
fcoml
icebp
adc
ror
xor
mov
rcl
out
filds
movsl
js
test
jle
cmpsb
and
iret
mov
insb
call
mov
lret
adc
cmp
adc
sub
cmc
and
fs
mov
jp
mov
push
adc
xlat
fcomi
mov
cmp
xchg
cmp
dec
negl
lret
fmuls
xchg
scas
push
divl
fidivs
pop
mov
pushf
call
mov
pusha
insl
std
mov
xor
xchg
imul
xchg
es
xchg
ja
jecxz
pushf
and
cmp
or
pop
mov
imul
pop
cmp
mov
mov
ror
push
xor
mov
cltd
std
mov
and
jns
ds
and
out
cmp
pop
ds
pop
mull
call
push
inc
fmull
pop
xor
clc
push
adc
rcr
add
and
jns
mov
cmp
movsl
xor
push
repnz
pop
stc
inc
cmc
jns
adc
jl
push
push
sbb
ret
daa
sbb
icebp
or
ret
popf
add
lods
andl
add
fildl
scas
mov
faddl
sub
es
jge
enter
mov
sbb
xchg
mov
maxps
pop
jl
mov
pop
mov
xchg
lods
testl
pop
and
mov
jno
testl
push
fsts
data16
push
add
dec
loop
rorb
xor
dec
and
xchg
xchg
mov
bswap
pop
sub
mov
jg
push
sbb
clc
outsb
mov
test
push
mov
cmpsb
fs
push
and
xor
dec
dec
ret
add
pop
pop
lds
push
lret
icebp
fmull
addr16
dec
or
jae
xchg
pop
pop
iret
pop
mov
xor
mov
pop
mov
dec
sub
fnstsw
pop
sub
out
repnz
rcll
mov
cmp
fdivr
scas
xchg
stos
pop
jecxz
push
das
bound
ja
or
inc
mov
mov
push
ljmp
mov
cs
sahf
adc
jp
cmp
mov
fcmove
divb
add
jb
jge
add
shll
call
popf
movsb
popa
add
fmuls
mov
mov
add
xchg
fcoml
sub
push
aam
jle
sub
lret
or
dec
mov
inc
popa
out
cmc
cld
lock
inc
adc
cld
jmp
int
inc
int3
jle
aam
les
and
mov
xlat
cmp
jnp
test
scas
out
push
fimull
test
pop
xor
fs
sbb
jecxz
ret
sbb
cltd
pop
lock
or
push
je
xchg
fstpl
xchg
sbb
bound
jmp
cmp
dec
ja
fs
xchg
cmp
insl
ss
popa
xorl
sbb
gs
fwait
pop
add
cmp
leave
push
xor
mov
andl
jae
sbb
lcall
addb
js
jo
mov
je
adc
loope
mov
mov
jno
sbb
ds
sub
mov
cmp
adc
push
sbb
xchg
repz
js
push
mov
imul
cmp
ds
mov
movsb
inc
inc
push
adcl
aad
fldl
in
lds
cmpsb
sbb
sbb
sti
fdivrl
push
cld
pusha
adc
push
push
mov
lret
sti
jp
insl
xchg
aam
sbbl
data16
outsl
sub
push
pop
jo
push
mov
mov
imul
mov
fxch
aam
inc
lcall
push
rolb
xor
out
sarl
jmp
jb
or
cmpsb
mov
mov
inc
push
test
xchg
loope
hlt
fdivp
dec
dec
rolb
clc
sahf
add
incb
ja
pop
push
shll
cltd
or
bnd
out
outsb
mov
sub
cld
push
xchg
xor
mov
mov
cli
pop
dec
jge
xchg
mov
pop
jge
outsl
mov
mov
pop
pusha
and
push
mov
xchg
push
out
or
mov
arpl
movsb
or
js
clc
inc
push
insl
pushf
mov
push
jmp
daa
jns
je,pt
lds
pop
mov
dec
or
adc
icebp
stos
mov
xchg
sbb
push
les
pop
gs
push
push
filds
int
aaa
jae
insl
mov
or
int3
inc
sub
rorb
cmpb
scas
int
les
add
jnp
and
mov
lcall
xchg
add
jle
sbbb
xchg
adc
dec
cmp
rcll
mov
xchg
ds
imul
jp
mov
test
cmpsb
mov
jmp
ret
adc
xlat
pop
flds
sbb
scas
jmp
add
push
dec
xor
pop
lret
cmp
dec
hlt
addr16
sahf
mov
adc
mov
enter
mov
aam
mov
lods
or
xchg
pop
in
outsb
mov
test
fstps
test
insb
scas
push
pop
fsincos
cmp
pop
int3
orb
div
cmp
stc
fucompp
mov
mov
mov
xor
mov
or
cmp
cmp
std
ds
je
lods
dec
outsl
add
mov
mov
xchg
inc
jne
adc
ficomps
sbb
cwtl
cmovbe
inc
fadds
xchg
pop
mov
arpl
pushf
xor
bound
jge
xchg
scas
dec
jbe
mov
xchg
ljmp
fwait
xor
scas
notl
es
cmp
cld
cmp
dec
stos
pop
insl
outsl
mov
cmp
out
sub
mov
cmp
mov
jbe
mov
mov
mov
jne
mov
mov
fstpt
in
mov
gs
lahf
jo
push
cmp
sbb
and
or
or
hlt
dec
push
xor
pusha
jo
cmp
pop
xor
jns
dec
push
iret
loopne
in
test
sub
pop
xchg
add
cmp
mov
js
pop
mov
enter
or
in
pop
stc
std
mov
pop
mov
mov
jb
out
clc
adc
repnz
adc
xor
cli
adc
aas
sbb
jp
sbb
sub
xchg
and
sbb
test
dec
xor
cltd
nop
das
jp
adc
push
cmp
jmp
mov
scas
adc
add
les
jbe
sbb
int3
sub
pop
xlat
cmc
or
jmp
mov
or
push
dec
call
xchg
nop
xchg
lds
mov
test
je
and
lods
inc
xchg
jns
push
out
adc
mov
std
dec
out
xor
and
inc
pushf
push
stc
cmp
inc
aad
imul
insl
call
std
mov
and
sub
or
jle
mov
jmp
pop
cmp
jne
sub
xchg
dec
daa
push
arpl
mov
lock
mov
adc
xor
inc
jno
pusha
push
in
adc
leave
and
fs
bnd
mov
add
insb
cmpsb
lds
cld
jg
jl
test
xchg
jmp
pop
andl
hlt
and
and
mov
test
int
inc
sbb
das
in
imul
movsb
pop
es
mov
jle
mov
fldenv
sub
loopne
nop
sub
fbld
pop
inc
sbb
repnz
mov
leave
cmp
ret
insl
xlat
sti
test
test
je
cld
jnp
call
sbb
cmp
push
pop
and
inc
add
inc
stos
js
fs
arpl
outsl
scas
inc
fwait
mov
je
jne
cmp
xor
cmc
mov
int
jns
pop
cmp
ds
mov
test
aaa
xlat
push
fisubrs
mov
aaa
xor
rclb
or
mov
scas
sbb
outsb
loopne
call
adc
inc
xchg
leave
jno
mov
xor
mov
lret
jb
movsl
or
mov
sub
mov
fcoml
lods
push
ror
hlt
xchg
out
sarb
xor
mov
push
fisubs
pusha
int3
push
jle
je
nop
adc
rorl
jle
add
andl
cmp
loopne
push
stc
sbb
out
xchg
push
pop
xlat
inc
push
mov
rclb
out
loope
cltd
test
arpl
outsl
and
std
sti
sbb
dec
xchg
push
imul
enter
push
jne
xchg
repz
pop
dec
jle
lret
and
push
scas
jne
sbb
ja
or
rcrl
arpl
ljmp
addr16
rclb
call
fisttps
push
lea
call
les
sbb
dec
cmp
cmp
jmp
xor
test
enter
push
and
test
adc
jbe
ljmp
es
push
scas
or
ja
jl
sbb
push
cmp
pop
imul
or
dec
and
jne
ret
xchg
sahf
jg
test
cmpsl
mov
xchg
or
pop
jnp
iret
loop
pop
and
in
je
xor
popa
mov
xlat
jns
and
pusha
cmp
mov
lods
mov
xorl
das
gs
stos
clc
push
fcoml
sbb
imul
push
sub
jo
and
jl
add
pop
aaa
push
mov
std
sbb
mov
xor
xor
lcall
ret
shlb
sar
xor
jp
rclb
xchg
inc
and
inc
shrl
mov
and
or
daa
lea
mov
pop
sub
addr16
add
dec
inc
mov
movsb
jle
xchg
push
orl
cmp
xorl
fsubrp
cmp
inc
es
out
nop
dec
mov
scas
testb
dec
dec
dec
sub
push
pop
test
mov
fimuls
cmp
mov
xlat
popf
cld
ss
aas
jbe
cltd
rol
imul
xorl
test
jo
mov
dec
es
lock
xchg
leave
or
mulb
lods
sub
leave
inc
jo
pop
lock
addr16
jge
int
add
adc
out
inc
aam
cmpxchg
ds
dec
dec
cli
add
negb
je
icebp
lods
sbb
subb
and
mov
mov
inc
xor
iret
xchg
push
sbb
mov
mov
push
sahf
icebp
xorl
inc
jge
pop
fsubrs
xchg
or
sbbb
inc
addr16
mov
lock
xchg
outsl
xchg
add
push
and
cmp
sti
iret
lret
pusha
test
mov
pop
test
fisubl
pop
sbb
mov
inc
cld
in
mov
xchg
sbb
call
lods
dec
call
mov
mov
mov
jb
dec
push
pop
mov
sahf
aaa
dec
es
popa
mov
push
dec
mov
xchg
nop
sub
mov
insl
xor
jnp
je
popa
clc
cmpsl
mov
call
cmp
sbb
or
xchg
or
sbb
cs
sti
clc
outsl
dec
jl
js
pop
fldl
loop
sub
in
pop
subb
pop
xor
lcall
mov
fs
pop
mov
std
lret
xor
jecxz
fisubs
outsl
inc
shl
shrl
adcl
xor
pop
pushf
xor
outsl
call
int
and
scas
rcpps
dec
fstl
jne
mov
jl
fcom
loop
push
adc
mov
push
mov
std
push
pop
xor
out
pop
mov
dec
mov
fbstp
fs
push
pushf
jle
xlat
mov
jp
lret
mov
sbb
pop
test
mov
in
and
ficoms
scas
mov
xor
int3
sahf
lods
or
mov
inc
jl
scas
aad
adc
fidivl
lock
adcb
adc
jnp
fisttpl
xchg
mov
xchg
push
ja
adc
mov
or
xchg
pop
dec
pop
enter
iret
mov
and
jbe
jecxz
inc
enter
outsl
mov
xchg
push
daa
sub
inc
cmp
add
inc
les
pusha
lret
mov
mov
inc
mov
sbb
sub
dec
push
fisttpll
add
xor
and
xchg
sbb
adc
pop
cmc
sub
xor
out
mov
pop
cmpsb
repz
mov
add
xor
mov
xor
sub
xchg
in
push
dec
fs
push
lds
iret
cmc
mov
sbb
mov
inc
arpl
cmpsb
add
jp
mov
mov
ds
outsl
dec
fcmove
mov
sbb
aaa
filds
fsubrs
enter
xor
lcall
pop
inc
gs
and
movsb
sub
gs
add
push
fsubl
shrl
mov
and
fs
push
cli
in
and
loop
inc
dec
jge
rorl
sbb
mov
fidivrl
cmp
push
lea
jge
ljmp
inc
sarb
sub
mov
inc
jae
shrl
mov
xlat
stc
addl
rorb
pop
inc
ret
and
inc
xor
push
lcall
js
aad
rolw
jecxz
and
jmpw
dec
nop
cld
scas
adc
jmp
and
xor
adcl
fsubrp
ljmp
cmp
jnp
mov
mov
insb
ret
mov
jnp
xor
mov
push
ss
popa
cmp
lret
cmp
sbb
add
push
cmp
std
sub
fwait
mov
lahf
inc
sub
xlat
mov
lret
push
scas
mov
icebp
cli
mov
insl
pusha
rorb
xor
adc
outsl
divb
mov
andl
pop
ljmp
mov
aad
pop
mov
mov
pop
aaa
push
cmp
call
fwait
sub
out
je
stos
adc
xchg
fimuls
xchg
std
xchg
or
lret
scas
lds
pop
sbb
xlat
and
ljmp
sub
sbb
add
cld
in
add
mov
aaa
out
mov
mov
cmpsl
test
inc
push
movsl
es
push
out
xchg
adc
cmp
lock
sahf
bound
sbb
cmp
sub
and
iret
das
mov
rclb
push
cmpsb
stc
mov
adc
out
xor
inc
mov
test
push
push
xor
nop/reserved
enter
jge
mov
add
or
gs
sbb
dec
xor
sbb
push
insb
dec
inc
cmp
sbb
xchg
jl
ret
jge
add
mov
jle
ret
mov
push
jnp
push
and
mov
insl
and
cmp
clc
xor
popf
mov
rcll
mov
mov
sub
xor
adc
call
pop
movsb
ret
popf
stc
mov
stos
push
pop
decl
shr
repz
mulb
aaa
and
jge
or
cmp
fisubrs
iret
jle
mov
add
std
jbe
out
pop
mov
jb
mov
popa
shll
jecxz
sub
fsubs
jle
int3
pop
flds
push
cmp
dec
sub
jnp
dec
loopne
sub
xor
and
jle
mov
lods
imul
dec
mov
lret
mov
in
add
das
push
hlt
pop
and
xchg
adc
mov
andl
les
adc
push
jns
pop
js,pt
je
push
xor
sahf
sbb
pop
xor
cmpsb
mov
sbb
mov
sub
jmp
lea
pop
xorb
int3
lock
adc
cwtl
jo
aam
loope
sahf
mov
xchg
dec
adc
popa
out
jo
repnz
mov
push
mov
ss
mov
pop
out
aad
jne
or
test
fists
jle
scas
stos
xlat
in
bound
xchg
fcomps
in
mov
lods
rclb
mov
inc
push
xchg
mov
pop
shrl
lock
sub
pop
pop
xlat
imul
push
in
test
fistpll
imul
test
mov
fiaddl
jecxz
fmull
rcl
inc
xchg
add
fmuls
fcompl
adc
sbb
inc
das
sub
mov
scas
cld
imul
mov
xchg
mov
movsb
add
rcl
xchg
pop
test
mov
jno
sub
shrb
or
sbb
pushf
or
out
lcall
pop
jmp
int3
push
pop
push
out
dec
push
fcomps
xor
cli
popa
cmp
mov
mov
and
int3
into
mov
sarl
or
out
pop
mull
data16
xor
insb
shlb
imul
lea
mov
xchg
jl
loop
ficompl
inc
rcrl
fistpl
xchg
sub
cmpl
mov
mov
pop
cmp
cmp
loope
test
mov
cmp
xor
or
xor
dec
fsub
jb
sbb
in
insl
int
clc
in
je
jb
and
xchg
stc
xchg
aas
adc
filds
dec
jae
popa
sar
mov
jl
push
adc
popf
outsb
fwait
inc
cmp
sub
pop
pushf
repnz
loopne
sub
out
loopne
xchg
inc
push
pushf
mov
gs
popa
jl
push
mov
cmp
sub
cmp
inc
test
int
inc
js
scas
dec
xor
pop
aas
leave
int
mov
inc
push
push
das
mov
clc
mov
mov
in
inc
cmp
notb
cmpsb
mov
and
pop
shlb
cmp
dec
gs
addps
in
or
icebp
movsb
jae
lds
mov
xchg
xor
or
rcrl
cmpsb
adc
movsl
imul
cmp
scas
jg
cwtl
sub
adc
cmp
mov
mov
lds
sbb
push
subl
iret
add
cmp
fmuls
aas
push
loope
loope
sub
xchg
clc
sbb
xchg
push
mov
stos
xchg
sub
xchg
mov
sbb
outsl
ss
mov
sahf
jg
mov
out
sahf
xor
and
mov
dec
sbb
fistl
or
jecxz
jg
js
rorl
push
and
mov
aas
scas
out
pop
sti
mov
jo
iret
xor
js
jo
mov
push
inc
pop
sahf
pushf
mov
pop
enter
xor
loop
in
arpl
and
push
push
sbbl
xchg
mov
cs
pop
in
or
or
int3
mov
mov
loop
xor
mov
push
out
or
mov
jp
je
scas
mov
jg
sbb
cli
sub
jno
sbb
xchg
int
js
adc
mov
cmc
into
push
adc
inc
pop
nop
ljmp
ds
sbb
in
mov
sahf
adc
push
push
inc
add
popfw
cltd
xlat
add
pop
mov
stos
rorb
and
pop
in
call
test
xor
sub
sub
xchg
xor
data16
xchg
addr16
iret
push
xor
jp
mov
test
sub
inc
test
outsl
cltd
cmp
call
and
aad
mov
data16
inc
loop
lret
scas
inc
mov
cmpsb
fstl
push
scas
mov
ficoml
inc
fstl
jp
hlt
cmc
xor
enter
adc
leave
jne
push
push
cwtl
xchg
stos
jae
incb
scas
mov
and
or
push
xor
test
add
rcr
loope
lds
stc
popf
aad
mov
xchg
push
lret
in
push
cmp
dec
pavgw
mov
andb
pop
cmp
div
in
push
cs
adc
pop
mov
outsl
fldt
lods
cmpsb
cmp
mov
xchg
adc
fiaddl
repz
adc
xchg
cld
sarl
push
sbb
add
inc
sarb
notl
loopne
lahf
push
stos
out
adc
fists
inc
gs
push
pop
pop
sbb
jns
adcb
das
push
and
push
lret
ss
mov
lds
shlb
es
xlat
xchg
incb
jo
sub
loope
dec
add
xor
stos
lea
iret
inc
xor
movsb
sbb
in
mov
or
push
push
loop
scas
jbe
push
sub
fstps
iret
rcll
jb
xchg
sub
rep
jnp
inc
inc
les
fcoml
movsl
outsl
xchg
or
fmul
movsl
mov
pusha
in
jb
xlat
fiadds
pop
dec
lds
filds
mov
daa
out
xor
ficomps
sti
movsb
jb
xchg
push
jo
sbb
roll
jge
mov
addr16
loope
dec
das
ja
gs
int3
cmpsb
pop
movsl
push
stos
or
int
xlat
movsl
push
add
jmp
jp
lretw
insl
aas
dec
cmp
xor
dec
sarb
sub
or
xor
popa
notl
pop
shrl
shlb
imul
lea
testl
mov
ss
mov
aad
cs
enter
rcr
jp
stos
and
lds
addl
and
test
shrd
pop
jge
mov
inc
ficoms
sarb
adc
sbb
movsl
arpl
je
fldt
pop
orb
push
jl
pop
sub
cmp
mov
int3
and
outsb
mov
sub
cmp
imul
mov
mov
xor
sbb
jmp
lret
imul
es
lods
ljmp
push
adc
xchg
fidivrs
aad
sub
push
nop
mov
inc
fprem1
popa
fcmove
pop
or
jbe
xchg
dec
mov
sar
aad
pop
in
shr
daa
fwait
scas
pop
jle
daa
js
dec
push
add
movsb
jle
repnz
sub
xor
ror
insb
sub
push
lods
cmpsl
clc
std
and
or
jae
and
aad
jmp
and
mov
mov
cmp
pop
mov
sahf
jg
faddl
mov
pusha
xor
stos
sub
mov
inc
addr16
sbb
lahf
mov
xor
fsubrs
pushf
bound
popa
scas
jno
out
mov
mov
fstps
mov
jle
push
mov
aaa
pop
outsb
jo
ret
in
pop
push
jns
lds
jge
popa
sub
jb
enter
popa
xor
out
xchg
pop
repnz
fcomp
sub
imulb
aaa
add
adc
sub
and
sub
ret
dec
lret
loopne
inc
repz
sub
jo
jnp
fdiv
fcomps
mov
and
sub
dec
pusha
dec
add
int
inc
push
inc
mov
inc
ror
xor
insl
adc
jmp
std
mov
addr16
push
mov
inc
jmp
scas
shlb
sahf
jg
out
mov
pop
in
or
pop
mov
scas
scas
jne
fnstenv
out
lcall
mov
gs
mov
out
lods
pop
sub
mov
mov
mov
nop
andb
icebp
sbb
ljmp
stos
jne
adcl
pop
mov
fcmovnb
mov
cwtl
hlt
xor
ret
pop
sub
sub
fdivl
add
mov
inc
pushf
int
stos
cmpsl
cmp
ret
push
push
adc
test
pop
imul
scas
sti
cmpsb
jp
inc
test
js
inc
xchg
cmpsl
movsl
mov
adc
cmp
fisttps
test
hlt
js
ds
jge
ja
dec
xor
aad
xchg
push
cld
inc
and
cmp
inc
dec
cmp
jle
stos
lret
or
popa
inc
jg
jae
scas
cmp
lods
cld
adcb
rclb
adc
xchg
adc
les
insl
testb
push
pop
rcll
out
jmp
popa
push
and
pop
pushf
xchg
mov
imul
xorl
cmp
dec
aad
fbld
stos
lock
mov
push
pushf
or
xchg
jge
jns
add
into
dec
sub
xor
fisubs
and
stos
dec
push
arpl
adc
jg
push
mov
sub
mov
mov
mov
fldl
shll
add
in
pop
jecxz
sub
jmp
dec
and
xchg
adc
push
push
les
shll
clc
data16
fdivrs
cltd
xor
in
mov
dec
fwait
mov
jbe
leave
push
mov
rcll
xchg
fisubl
dec
pop
pop
cmpsl
mov
movsb
das
shl
mov
add
cli
xor
scas
orb
sbb
push
sbb
test
mov
fwait
mov
mov
cmp
in
xor
mov
fiadds
scas
cmp
jmp
mov
mov
out
push
aas
and
mov
int3
ja
cli
push
dec
arpl
lahf
ss
clc
insb
and
aad
lea
les
jbe
lea
movsl
jle
mov
or
out
adc
mov
xor
out
dec
into
out
adc
leave
jb
fstl
adc
es
inc
dec
movsl
fbld
in
cmpsb
mov
mov
push
loope
xchg
mov
std
mov
xchg
nop
enter
popf
jno
imul
cmp
mov
push
insb
mov
inc
or
cmp
cmp
push
pusha
or
sub
cli
div
push
outsl
arpl
cmp
push
pop
test
dec
inc
mov
loopne
and
push
popf
fiaddl
int3
xchg
lock
es
cmp
insl
inc
lds
or
lods
and
aaa
dec
push
repz
clc
jge
or
add
sub
xor
xchg
mov
fs
mov
lea
jl
scas
iret
sbb
int3
sbb
bound
push
ljmp
mov
or
sbb
in
enter
psubsw
dec
xor
sub
stos
cmp
xchg
jp
add
into
xor
or
js
bsr
into
testb
in
sbb
cmp
cmpsb
mov
mov
jne
xor
push
scas
cld
hlt
push
ficoms
sahf
sbb
sub
adc
repz
leave
dec
cmp
pop
bound
popf
mov
or
or
adc
mov
in
je
aad
outsl
sub
adc
mov
out
xor
outsl
sub
ret
lock
xchg
ljmp
pop
push
iret
in
inc
sbb
jbe
enter
sub
and
cmp
push
rcr
loopne
ss
iret
mov
sbb
or
stos
inc
add
arpl
out
pop
mov
test
cli
sbb
or
cmc
or
xor
repz
int
sbb
inc
cmpsb
pop
inc
jg
push
in
sub
mov
inc
fwait
push
xchg
xchg
or
mov
sub
xor
into
or
or
loope
sbb
cld
out
mov
inc
xchg
mov
gs
ljmp
pop
aad
jbe
loop
sub
sahf
xor
sub
or
loopne
sar
and
mov
mov
enter
push
jge
rorb
inc
mov
adc
pop
cmp
cmc
nop
das
jns
add
or
sbb
sbb
dec
cmp
mov
mov
jbe
pop
movsl
shl
jle
xor
xchg
mov
out
sbb
mov
add
fcmovne
push
jnp
cmp
dec
pop
mov
jge
gs
sub
pop
jecxz
dec
lock
lock
push
cli
icebp
in
add
jp
sbb
fwait
add
xchg
dec
push
comiss
dec
inc
pop
imul
mov
and
mov
aas
add
rcrl
popa
dec
jo
ja
add
sbb
push
cmpsl
in
in
dec
mov
cmpsl
fs
testl
gs
fst
inc
adc
xchg
cld
sub
fiadds
aam
inc
sahf
jne
adc
fdivrs
scas
xchg
xchg
aad
outsl
rcrl
aas
inc
xor
iret
adc
and
pop
sarl
cmpsl
rcll
shl
cmp
jns
fwait
dec
xchg
mov
dec
add
mov
mov
xchg
sti
clc
dec
sar
xchg
jg
mov
jle
jns
adc
cmp
movsb
out
push
enter
clc
ret
xor
cmpsb
test
sub
je
adc
lret
addl
imul
dec
sahf
dec
and
sbb
sub
in
or
cltd
cli
lcall
shll
push
inc
cld
dec
pop
xor
mov
jb
enter
and
outsb
int3
popa
lock
pop
call
or
adc
test
fs
jae
xchg
or
push
and
pop
divb
ret
dec
insb
ja
dec
cmp
push
mov
into
adc
xor
adc
mov
vpaddq
or
dec
and
mov
cmp
fdivr
mov
rcrb
push
out
dec
or
dec
addr16
aas
jle
out
add
enter
lea
cmp
jg
pop
movsb
add
in
jne
xchg
mov
or
sbb
ret
pop
mov
push
sub
adc
adc
cmp
mov
mov
cmp
jb
add
sub
aas
dec
dec
push
stc
dec
bnd
push
inc
bound
sub
fwait
push
adc
inc
mov
mov
call
cmp
mov
repnz
mov
pop
sub
rol
dec
cwtl
lcall
add
inc
inc
fwait
out
inc
daa
dec
sbb
add
into
sub
sbb
pushf
movb
das
dec
inc
adc
imul
xchg
push
xor
lds
push
imul
adc
gs
mov
sbb
icebp
add
mov
ret
stos
mov
je
out
xlat
dec
dec
dec
outsl
cmc
daa
push
adc
push
add
stos
mov
lods
fcompl
outsl
xor
leave
cmp
outsb
out
cmp
or
cltd
inc
push
and
lahf
dec
or
fisubs
pop
and
and
mov
data16
andb
xor
data16
sbb
add
cs
scas
aaa
sub
mull
je
addb
jno
in
jno
repnz
bound
sub
cld
mov
imull
sbb
inc
or
pop
aas
adc
pop
adc
js
rcrl
or
pop
jl
loopne
cs
push
ljmp
shl
add
je
dec
xor
in
sub
loope
imull
fs
jbe
dec
or
pushl
mov
add
stos
aam
jmp
shlb
out
mov
bound
fwait
adc
sub
aaa
jne
xlat
lock
xchg
outsb
and
mov
add
or
jl
jge
pop
pushf
mov
inc
rclb
out
mov
lea
sbb
into
test
loope
mov
js
push
push
mov
stc
cmp
adc
jne
xchg
addl
mov
bound
jl
xchg
push
jnp
jns
lds
push
loopne
mov
xchg
sbb
adc
lret
movsb
fsubl
stos
cmp
lock
outsb
pop
outsl
inc
add
aam
and
mov
sbb
mov
ja
xor
xchg
pop
mov
repnz
inc
jbe
sbb
mov
addr16
lock
ss
cld
scas
adc
test
and
jecxz
clc
test
jmp
in
and
les
cmpsl
jecxz
test
jle
inc
fs
movsl
cld
adc
sub
in
and
shrb
or
or
or
mov
mov
mov
xor
lret
sub
xor
stos
insl
cld
sti
mov
fisubs
sbb
sbb
fistps
cmp
push
nop
jge
cmc
jmp
aam
shr
scas
pop
jno
fnstenv
sbb
inc
sub
std
inc
cmpb
mov
inc
xor
int3
jno
scas
call
lock
xor
in
dec
mov
cmp
fcomip
arpl
jbe
adc
pop
fldenv
fwait
inc
mov
sahf
outsb
rol
out
stc
outsb
inc
rorb
dec
push
xor
dec
push
pop
jp
shrl
out
leave
push
adc
dec
into
andb
push
sti
daa
fldl
jb
jmp
push
jle
mov
pop
adc
xchg
js
pop
and
lret
xor
fwait
push
pop
lods
cmpsb
lea
mov
add
incb
cmp
mov
mov
icebp
push
jle
cmp
sbb
cmp
jmp
inc
sar
sub
and
sub
cmc
push
outsb
data16
repnz
add
bound
pop
cs
adc
jmp
and
sbb
and
addr16
mov
push
insl
dec
daa
jmp
lds
jns
jg
sub
pop
dec
mov
inc
insl
imul
mov
les
sar
cmp
jnp
cwtl
cmpsl
and
cs
xchg
cmp
xor
call
iret
shr
jge
xchg
test
sti
xchg
aad
xor
xor
jnp
insb
jl
xchg
xor
popf
xor
adc
test
adc
stos
lock
enter
clc
jmp
push
mov
mov
in
cmp
dec
not
pusha
iret
mov
repz
mov
xchg
imul
xor
in
sarb
aaa
aad
adc
loope
call
scas
or
mov
jne
lret
pop
arpl
in
jnp
lods
ss
adc
jno
push
dec
call
fs
mov
fcomps
jge
imul
cmp
xchg
adc
cmpsl
bound
fwait
pop
out
lret
jbe
nop
push
test
outsl
or
sbb
push
and
repz
scas
jl
add
test
in
pop
inc
push
ret
iret
mov
or
mov
int3
xchg
xor
mov
out
mov
mov
jo
and
sbb
xchg
mov
push
lcall
minps
lahf
sahf
cmp
inc
jg
jae
es
mov
addr16
pop
loop
repnz
pop
jb
iret
lret
inc
into
or
push
sbb
pop
inc
and
sub
clc
pop
lahf
cmpsl
fldl
daa
push
adc
push
jmp
insl
add
jle
push
dec
add
arpl
mov
push
cltd
xor
push
jmp
mov
or
cmp
push
cmpb
add
clc
xchg
cmp
aam
in
mov
insl
jge
mov
push
sarb
outsb
fst
movsb
jae
cmpsb
pushf
add
dec
pusha
test
xor
ficoms
lcall
mov
mov
mov
arpl
out
out
aad
into
xchg
sbb
in
test
lods
test
push
repz
dec
inc
mov
and
int
adc
lret
sbbl
jae
or
dec
lcall
add
dec
jle
arpl
cmp
pop
test
add
fistpll
fisubrs
dec
xor
lock
inc
pop
rorl
sub
ss
push
and
movsb
cmp
shrl
fs
dec
sub
gs
loop
adc
rorl
inc
out
adc
xchg
mov
lret
xchg
and
lcall
push
insl
shll
idiv
and
xchg
adc
je
add
inc
mov
xchg
jg
clc
cwtl
sub
jns
inc
addr16
aam
mov
loope
cmp
leave
fidivrs
adc
sbb
cli
mov
push
and
fld
or
sbb
push
lret
sbb
push
popa
cwtl
dec
sub
scas
les
jp
adc
fisttpll
leave
popf
enter
out
or
int
mov
jmp
in
lcall
xor
xlat
pop
mov
adc
fs
cli
test
add
bound
jmp
insl
or
dec
cmp
pop
ja
int
inc
loopne
test
ss
pop
xchg
gs
stc
pushf
mov
out
adc
jno
pop
xchg
inc
mov
sbb
cmpsb
sub
and
cmp
in
gs
bound
jne
or
and
mov
ret
sbb
pop
cmp
fwait
jecxz
push
lock
cli
sub
mov
push
mov
inc
call
pop
xchg
fs
dec
mov
int
lods
ss
mov
lds
jb
out
mov
or
cmpsb
xlat
pop
jmp
dec
imul
or
pop
lahf
inc
inc
fmuls
es
pop
insl
mov
testl
mov
xlat
cmpsb
jb
insb
lods
aad
pop
adc
repnz
xrelease
je
cmp
push
jecxz
xorl
shrl
es
or
xchg
scas
sti
pop
leave
adc
and
mov
pop
ds
test
push
push
cltd
div
push
sub
xchg
cmp
aas
fs
test
push
mov
or
lds
mov
cmpsl
std
pushf
test
dec
dec
pop
imul
jmp
xchg
push
lcall
adc
sbb
clc
cmp
mov
daa
jns
cwtl
das
jae
leave
mov
mov
sub
pop
or
inc
and
mov
xor
test
or
jae
xor
push
mov
mov
outsb
lcall
mov
and
iret
jo
mov
je
aad
fwait
mov
into
xor
in
clc
inc
lret
bound
insb
jo
scas
test
lret
fistl
mov
jb
ljmp
lock
mov
mov
test
rorl
xor
and
jo
popl
in
mov
fcompl
aas
jbe
addr16
loop
insl
add
xchg
inc
sub
pop
push
sbb
aas
das
mov
sahf
addr16
loope
mov
pushf
and
cmp
sub
and
adc
fstps
js,pn
adc
or
mov
ret
nop
sbb
fcmovnb
mov
es
jb
loopew
out
dec
movsb
and
push
je
sub
lcall
je
adc
cmp
xor
adcb
in
pop
pop
pop
jnp
aas
outsb
inc
decl
inc
loopne
lret
in
sub
pop
push
mov
test
and
mov
movsb
flds
push
jbe
sti
es
jg
cwtl
mov
add
ja
stos
mov
loop
or
ret
nop
inc
mov
loopne
lds
or
rcrb
xchg
stos
mov
inc
lea
inc
out
sbbb
mov
fdivl
int3
fimuls
divl
into
push
sub
cmp
mov
jnp
andb
xchg
xchg
xchg
add
dec
add
shl
mov
jbe,pn
out
xchg
fadds
jo
pop
std
sbb
inc
lahf
scas
cmpsl
test
xchg
in
xchg
popa
mov
xchg
cli
addl
jbe
mov
mov
shlb
jge
shrl
sarb
aam
mov
rep
sub
stc
sti
and
fs
ja
sbb
or
nop
loope
mov
mov
std
and
repnz
sbb
ret
jo
jne
fldt
test
sbb
mov
mov
mov
inc
fiadds
add
daa
push
out
and
mov
idiv
aam
pusha
fimuls
imul
call
jbe
mov
decb
repz
jae
mov
dec
inc
inc
jae
sbb
jne
imul
inc
pop
test
scas
frstor
add
andb
push
and
dec
jmp
jbe
stc
inc
dec
int
gs
xor
mov
movsb
shll
js
sbb
sub
les
sbb
mov
lods
adc
js
movsl
jl
arpl
mov
fcompl
cmp
stos
jl
fadd
rcpps
ret
xchg
mov
xchg
test
fistps
push
adc
imul
call
cmc
jp
mov
lds
cmpsb
clc
inc
enter
testb
repz
add
xor
fcomps
push
push
cltd
mov
jnp
les
mov
call
insb
aaa
insl
and
mov
dec
scas
stos
mov
mov
add
pusha
into
or
push
sub
push
mov
scas
loope
sbb
ss
stos
fdivrs
push
lods
mov
dec
call
into
or
and
xchg
ljmp
jae
pop
adc
push
gs
pop
icebp
fisttpll
jmp
loope
icebp
push
mov
cmp
mov
loop
xchg
or
mov
repz
out
outsb
push
loop
sub
fadds
or
test
xchg
sti
out
xor
ja
aaa
pusha
xor
xor
out
enter
adc
ret
mov
or
int
dec
fbld
lods
xor
push
repz
mov
hlt
push
test
xchg
andl
loope
repz
idivl
add
pop
das
xor
mov
insb
dec
cwtl
sub
jle
dec
addr16
sbb
pop
mov
xchg
and
xchg
jge
lcall
mov
movsb
mov
repz
and
adc
cmp
push
jge
adc
sub
xchg
mov
nop
lock
enter
mov
and
xchg
mov
cmp
sti
gs
mov
push
movsl
cltd
pusha
mov
pop
jecxz
push
fnsetpm(287
push
cmp
sub
aam
orl
mov
outsl
dec
test
or
pop
rcrb
ds
in
div
fucomi
mov
xacquire
ss
sbb
xor
and
jmp
sub
xor
cwtl
and
cwtl
sub
shl
jae
jp
jb
inc
xchg
fnstenv
add
shlb
inc
lods
loope
lds
frstor
inc
popa
xlat
cmp
daa
jne
sti
push
fsubrs
inc
lock
imul
xor
or
adc
or
sub
sub
pusha
aas
jecxz
mov
pop
xchg
js
jg
int
aam
fisubrs
xor
inc
and
ds
int
mov
jb
loopne
rcrl
ja
xchg
and
sbb
aas
sbb
stc
mov
add
xchg
into
cwtl
in
push
mov
dec
jge
gs
ret
adc
inc
int
lret
faddp
mov
dec
lea
fdivp
andl
data16
mov
push
add
pop
cmpb
arpl
scas
add
jne
fsubr
int
rcl
inc
imul
mov
je
pusha
or
inc
dec
xchg
push
and
arpl
xor
pop
inc
inc
mov
sbb
or
rcrb
push
jo
jo
cmp
jg
xchg
int3
jmp
xor
inc
in
lds
icebp
dec
jp
pop
das
adc
mov
loopne
scas
mov
mov
adc
popa
sbb
mov
pop
lods
mov
sahf
mov
fnstsw
or
into
xchg
xor
dec
mov
jmp
add
lea
inc
test
rcl
lret
jbe
cmovl
mov
scas
data16
test
cmp
pop
and
or
mov
and
shll
jl
jle
push
cmp
es
mov
ljmp
nop
adc
lcall
mov
lods
xor
aas
push
insl
mov
sbbb
adc
outsl
inc
mov
xor
pop
sub
add
pushf
pushf
add
push
scas
imul
fistpl
add
mov
push
ret
cld
sub
mov
add
rcr
outsb
jo
push
fbstp
xchg
xchg
sub
bswap
ljmp
fcmovbe
sub
int3
mov
fidivl
test
test
pop
xchg
add
daa
pop
cmp
or
add
or
push
xchg
out
jp
insb
inc
jge
rcrb
xlat
aam
pop
out
mov
fimull
cs
popa
pop
pop
jle
inc
sbb
pop
mov
xor
les
mov
out
and
inc
testl
in
pop
mov
negb
inc
dec
push
jmp
sub
cmp
dec
rorb
add
sub
jno
sbb
or
fiaddl
inc
mov
outsb
sub
loope
pop
add
divb
pop
lods
repnz
data16
repnz
jnp
jg
inc
sub
bound
mov
adc
fcmovnbe
mov
gs
mov
lahf
lret
push
mov
arpl
push
rorl
lock
mov
inc
sbbb
cs
adcb
jecxz
add
add
push
outsb
ja
mov
pushf
lcall
mov
and
pop
xchg
adc
iret
sub
xor
jnp
dec
lret
adc
dec
in
mov
add
lret
test
bound
pop
push
dec
test
shlb
add
cmp
pusha
fmul
gs
test
popf
aad
test
stos
aad
push
vphaddwq
pop
mov
mov
lock
cmp
pop
push
imulb
xor
or
xor
aaa
or
clc
pop
les
sub
roll
cmp
cmp
ds
in
std
aaa
in
inc
jecxz
mov
jno
mov
stos
pusha
fidivrs
push
add
movsb
scas
pop
lahf
ja
adc
adc
sbb
fwait
ds
adc
inc
and
jle
dec
push
fidivrl
hlt
jge
je
xor
ret
lret
sub
sahf
dec
xor
fisttpl
jne
mov
fisubrs
les
adc
hlt
nop
mov
arpl
cmp
nop
cwtl
mov
neg
pop
repnz
push
mov
adc
popa
frstor
dec
pusha
xlat
outsb
cmp
movsb
dec
lock
pop
cmp
mov
rcrl
pusha
mov
mov
scas
fwait
sub
ja
fidivl
lods
cmp
mov
cmp
lock
jmp
or
add
out
push
pushf
and
lds
dec
loop
fwait
mulb
fs
lret
lea
gs
dec
cmc
scas
sbb
cmpsb
gs
push
jmp
jne
push
lret
mov
jnp
orps
push
dec
lahf
cmp
movsl
call
jp
movsb
xchg
fcompp
in
adc
jae
es
ret
lcall
cmp
lods
sbbb
mov
out
shlb
mov
push
adc
bound
mov
bound
icebp
push
jl
pop
scas
cmp
test
pop
int
push
movsl
fxch
sbb
adc
push
inc
xchg
and
add
lods
int
jo
pusha
into
cmp
dec
mov
xor
fisttpl
notl
xor
sbb
daa
mov
xor
cmp
fistps
fistl
fdivrs
test
addr16
popa
and
pushf
lea
mov
test
lods
imul
push
loopne
sarl
popa
xor
pop
cmpsl
cmp
jbe
cmp
pop
jle
ficompl
movsl
xor
jecxz
in
fisubrs
leave
fxch
lret
adc
lods
mov
cmc
inc
inc
mov
fwait
lods
mov
mov
inc
outsb
xchg
jno
sbb
pop
sbb
push
inc
xchg
xor
out
clc
cmpsb
and
ds
mov
fsubr
fsubrl
and
stos
jp
cmpl
sahf
mov
dec
in
shr
ret
or
mov
push
fsub
int3
mov
mov
sub
push
imul
jne
das
movsl
lcall
sub
push
or
cmp
iret
xor
pop
cltd
loope
sbb
repnz
xor
iret
mov
push
popf
popf
inc
cmpsb
pop
add
xlat
test
lds
int3
aas
insl
mov
das
and
sub
fcomps
mov
in
mov
pop
clc
cmc
push
sub
jbe
lahf
mov
mov
jp
je
dec
push
jno
stos
xchg
jp
xor
in
lea
lea
push
sbb
fdivrs
cmpsl
sub
jns
mov
test
leave
mov
xor
out
push
mov
xor
pop
mov
popa
dec
outsb
dec
mov
imull
clc
aam
xor
test
inc
push
sub
push
lods
call
mov
div
test
push
mov
ret
rcll
adc
nop
out
outsb
jns
mov
in
jbe
jg
iret
lahf
mov
inc
scas
dec
inc
movsl
mov
push
xchg
or
jbe
push
mov
or
mov
test
ret
push
lret
iret
adc
fs
dec
mov
xor
aaa
mov
jbe
mov
cmp
repz
xlat
sbb
mov
clc
dec
mov
adc
fisubrl
mov
enter
adc
dec
sbb
push
ljmp
cmp
and
cmp
lea
sub
bound
adc
idivl
push
imul
cs
or
ljmp
test
fs
out
dec
xchg
popf
hlt
mov
clc
and
and
mov
lods
mov
outsb
lods
dec
scas
jle
cli
out
xlat
push
push
jbe
ss
cmpsl
jecxz
dec
jg
and
cmc
pop
xchg
out
jge
outsb
jb
cmp
fisttps
inc
mov
bound
inc
decl
jne
lcall
jmp
mov
imul
adc
pop
adc
xlat
xor
mul
inc
das
ret
sub
lcall
jle
and
mov
lret
movb
jecxz
push
add
cmp
jnp
mov
stos
rcll
mov
push
adc
adc
ljmp
push
mov
inc
out
xchg
mov
add
push
gs
cmp
xor
fxch
aad
mov
lea
push
incb
xchg
inc
push
pop
enter
pop
xchg
inc
imul
add
lret
scas
out
add
shl
xchg
sub
or
aas
aam
add
out
iret
movntps
mov
dec
push
ret
arpl
xchg
js
xchg
shll
adc
mov
daa
push
sbb
cs
add
jge
mov
call
imul
ds
gs
mov
in
dec
in
lds
pop
inc
adc
gs
cmp
fidivl
xchg
push
xchg
in
jmp
push
clc
and
inc
hlt
inc
or
push
lcall
xor
in
in
sbb
mov
mov
adc
dec
stc
jno
loopne
push
inc
inc
out
lret
adc
mov
fnstcw
adc
mov
mov
incb
lock
xor
sub
outsb
hlt
jbe
and
movsb
mov
xchg
ds
adc
or
out
or
mov
push
mov
xor
inc
xchg
xor
int
sarb
rorb
jle
xchg
in
mov
xchg
push
adcb
sbb
xchg
cmc
push
ret
add
insb
mov
cmpsl
sub
pusha
das
fucomip
or
in
lret
in
ret
inc
pushf
adc
jmp
xchg
in
jb
or
pop
or
inc
in
lret
mov
pop
js
ret
cmpsb
cmpsl
test
adc
aam
adc
sahf
iret
in
les
add
imul
add
stc
roll
jmp
out
das
cli
js
dec
ds
pop
movhlps
popa
xor
sbb
and
or
sbb
sbb
out
mov
push
push
jmp
fiadds
rclb
pop
jbe
enter
or
mov
lret
cwtl
jnp
and
adc
mov
fcompl
jp
cmp
push
jno
jb
jl
fxch
mov
lods
sbbl
fdivs
sbb
cmp
add
enter
cmc
cmpsl
cmp
js
mov
mov
mov
xorb
insl
mov
jl
mov
mov
inc
out
cmpsb
xchg
test
cmp
xor
or
mov
dec
mov
mov
xlat
lea
stc
lahf
pop
ja
clc
insl
aas
dec
sti
pop
push
mov
stos
inc
aad
pop
add
xor
push
xchg
arpl
jns
inc
jns
into
mov
sbb
adc
int
jno
jo
cmpsl
sbb
and
push
inc
jl
mov
jae
cmp
xlat
pushf
cmpsl
into
fs
dec
xchg
mov
fcoml
shlb
xchg
mov
stos
mov
add
push
mov
cld
sahf
arpl
jns
ds
outsb
call
push
xchg
es
xchg
nop
jne
inc
adc
out
mov
xlat
outsl
sbb
pushl
inc
lcall
scas
in
mov
mov
jl
push
xlat
aad
sub
mov
js
inc
das
and
test
test
pop
sbb
cmpl
std
rclb
and
rcrl
push
xor
lods
pop
add
test
in
addr16
dec
ss
outsb
aas
ljmp
scas
xor
lea
cmp
jmp
ds
push
sbb
mov
mov
mov
mov
push
sbb
fisttpll
repnz
dec
pop
dec
stc
or
jae
fcomps
adc
add
call
jne
inc
xor
in
jns
xor
and
xchg
cmp
pop
mov
adc
lret
lret
stos
push
lcall
sti
insb
jmp
sbb
mov
cmp
fists
jge
addb
or
adc
sbb
sbb
mov
inc
mov
dec
scas
add
daa
fdivs
pop
pop
xor
and
sub
loope
shl
dec
test
lret
mov
push
incl
xchg
pop
nop
and
jnp
xchg
xchg
mov
or
or
ja
sbb
je
out
mov
repnz
mov
lea
push
das
mov
jae
jmp
bound
mov
or
adc
in
xor
pop
or
imul
jmp
in
arpl
test
fwait
into
mov
mov
push
xchg
mov
in
idivl
or
mov
mov
enter
mov
mov
jnp
jnp
xor
mov
fistpll
inc
into
andl
adc
sbb
xor
les
mov
xchg
scas
sub
int
mov
lret
pop
push
xor
dec
nop
push
xor
pop
add
pop
and
outsl
cs
in
xor
pop
jl
add
inc
aam
or
mov
dec
mov
jmp
adc
mov
pop
jl
cmp
aad
idivl
mov
lcall
jae
ljmp
push
pop
xchg
popf
adc
push
cltd
cmp
and
gs
mov
mov
aam
xor
sti
cmp
adc
mov
addr16
clc
test
mov
hlt
jl
ret
inc
xor
in
mov
xchg
add
cwtl
std
adcb
andb
push
cs
dec
and
aad
dec
push
push
pushf
inc
dec
push
hlt
push
loop
add
mov
cs
jno
clc
cli
and
mov
xchg
stos
rol
push
xor
pop
dec
jmp
or
add
cmp
and
ds
mov
and
test
fmul
cwtl
int
mov
add
cmp
pop
lods
mov
aaa
aas
stos
bound
divb
add
insb
ret
inc
cld
jg
push
or
inc
inc
test
popf
mov
pop
cmp
lret
pop
xchg
mov
jae
rcrl
insb
pop
ficoms
mov
cmp
inc
pop
mov
roll
and
mov
fcmovne
mov
popa
mov
popf
dec
std
or
aad
or
adc
nop
fwait
cmp
pushfw
pop
hlt
jecxz
jp
les
dec
hlt
xlat
mov
popa
cs
shll
stos
sub
incb
imulb
shl
sbb
xor
rcrl
out
lods
sub
sti
roll
mov
cmp
pop
mov
mov
test
stos
adc
dec
mov
adc
xor
mov
scas
inc
pop
in
pop
and
push
adc
push
shll
mov
mov
pop
add
arpl
add
pop
cwtl
aas
lods
adc
test
in
adc
lcall
and
scas
js
mov
cltd
jae
test
aam
in
popf
dec
mov
fbstp
pusha
in
stc
jno
shr
stc
les
sti
enter
ret
cmp
in
cli
rorb
add
adc
in
mov
sbb
jl
dec
scas
clc
mov
fucomp
cmp
js
lcall
sub
lock
inc
call
daa
cltd
aad
push
xor
in
std
shlb
in
sar
in
pop
dec
add
popa
push
ret
je
add
jbe
leave
push
mov
pop
scas
jmp
cmpsb
pop
je
or
pop
add
lock
jp
sbb
jnp
inc
rol
popf
fstps
inc
dec
xchg
mov
cmp
icebp
xchg
dec
adc
adc
sbb
addb
inc
mov
test
mov
push
pop
lret
jle
sahf
sti
rorb
cmp
scas
jne
or
xor
adcb
and
rol
or
xchg
and
sbb
gs
divl
pop
cmpl
jo
iret
insl
jg
fcmovnu
test
pop
sbb
mov
xchg
cmp
and
jne
ret
xlat
icebp
lahf
shrb
jle
lea
pusha
loope
mov
lods
sbb
mov
lods
inc
jo
fsubp
push
add
push
lret
xchg
rep
and
bound
inc
xchg
rorb
mov
cmpb
mov
pusha
mov
xchg
fs
push
and
sarl
bound
sbb
dec
test
xor
sbb
inc
pop
out
fwait
cmpsl
fstl
pop
lcall
jp
ja
cli
inc
lds
and
lods
cmp
jg
add
popf
lcall
outsl
dec
add
jmp
and
and
inc
addr16
mov
fs
add
lock
dec
jp
and
adc
sub
lock
loop
adc
push
in
lret
mov
xchg
and
test
push
push
lret
push
fnstsw
mov
cmp
xor
cmp
into
test
icebp
lods
orl
add
loope
mov
jmp
cmc
pushf
icebp
mov
dec
iret
fcompl
inc
mov
mov
push
stc
push
fnsave
enter
insl
push
rorb
fidivrs
pop
cmp
push
xor
jnp
in
ret
mov
pop
hlt
pop
adc
add
push
stos
ja
pop
jbe
in
shr
xchg
outsb
bound
xlat
cmc
sub
out
xor
jecxz
inc
sbb
test
mov
scas
cmp
inc
rorb
lahf
icebp
pminsw
cmpsl
push
adcl
cmpsb
pusha
mov
inc
dec
imul
out
xchg
cmc
add
xor
mov
setae
int
outsb
dec
jb
or
and
cmpsl
cmp
and
mov
or
and
push
adc
loopne
cwtl
sbb
mov
or
mov
cmp
adc
daa
mov
mov
cltd
shll
push
jle
test
mov
mov
out
fidivs
xchg
bound
push
adc
xchg
mov
sti
xchg
push
mov
and
popf
ret
push
or
jle
sub
int3
push
mov
jbe
lods
call
adc
sbb
aad
sub
popa
add
fxch
xchg
out
ljmp
xchg
sub
add
push
push
xlat
sbb
push
adc
lods
jge
xchg
shlb
inc
aad
mov
test
out
and
dec
fwait
loopne
or
cmp
cmp
jge
add
cmp
ss
dec
mov
and
filds
scas
jecxz
mov
adc
pop
mov
pop
and
xlat
push
xchg
sub
jns
pop
mov
xchg
fcoml
rolb
in
jl
inc
mov
adc
xchg
and
insb
mov
je
or
in
add
xor
pop
ss
leave
jno
dec
sti
test
push
daa
nop
jb
clc
sti
hlt
mov
adc
xor
das
call
pop
mov
addb
fistps
insb
pop
jmp
mov
mov
mov
out
js
out
cmp
stos
aad
xchg
icebp
adc
xor
dec
cmpsl
push
and
daa
dec
push
ljmp
orb
rcll
cmp
xor
lret
jp
call
aad
mov
mov
jb
push
jns
adc
mov
pop
jae
iret
cmc
stos
xor
inc
jae
outsl
pop
loopne
and
dec
in
or
push
or
sub
test
xchg
iret
ffreep
cmpsb
imul
rorl
in
scas
mov
icebp
or
into
stc
flds
cmp
jp
mov
push
mov
xchg
or
cltd
call
stos
and
mov
jle
mov
and
cld
mov
test
dec
ret
fwait
push
daa
cli
sar
jle
subb
dec
xor
imul
adc
stos
sbb
lcall
jle
insl
in
shl
mov
push
das
cmp
cmpsl
mov
sub
push
daa
inc
or
mov
pop
or
xor
pop
cmpsl
push
push
adc
leave
mov
in
gs
aam
imul
jae
sbb
movsl
and
mov
jmp
dec
sub
lock
jnp
push
out
out
nop
sub
mov
in
mov
outsl
mov
rorl
inc
daa
loopne
sahf
or
inc
jbe
popf
jmp
fs
imul
imull
imul
sbb
ss
insb
pop
dec
push
scas
in
scas
and
cmc
dec
jmp
test
and
jbe
sub
ret
pop
sti
and
stc
mov
test
mov
test
sarb
and
mov
ds
jne
sbb
jmp
mov
mov
pop
int
fisubs
and
rcrl
jl
stc
test
push
jp
ja
mov
pusha
loopne
loopne
xor
mov
sbb
xchg
test
mov
mov
ret
sahf
repnz
pop
ja
dec
insl
lea
adc
or
cmp
arpl
cmpsb
sub
mov
mov
jno
enter
mov
sub
es
movsb
inc
sub
and
fdivrs
je
cmp
stos
stc
mov
xchg
adcb
mov
inc
push
push
scas
in
decb
aad
ret
mov
xlat
xchg
mov
xor
push
ljmp
lcall
std
hlt
in
mov
or
jns
cmp
out
aaa
adc
jecxz
mov
or
cmp
cmpsl
push
mov
adc
and
shlb
inc
cmp
into
leave
arpl
in
cmp
or
xor
mov
or
int
outsl
push
push
divl
bound
and
hlt
xor
xchg
dec
mov
push
xlat
test
jns
and
iret
push
pop
inc
pop
jg
bound
jecxz
in
cmp
mov
jb
mov
push
cmp
jle
sub
orl
lock
loope
xchg
sbb
push
inc
je
outsl
sarb
shlb
ds
in
add
or
rorb
inc
sahf
into
adcb
mov
divb
mov
fucomip
mul
int
cmp
js
rcll
loope
dec
lods
mov
lods
mov
lret
xchg
andb
in
loopne
je
stos
movsb
jns
test
xor
clc
mov
push
popf
mov
sbb
into
inc
sub
mov
lret
cmp
xor
jle
mov
or
xor
sub
orb
xor
mov
pop
cmc
xor
fsubr
je
xlat
add
fdivrs
ja
dec
iret
push
sbb
sub
and
call
or
pop
in
xchg
jbe
dec
loopne
pop
adc
mov
cld
mov
sub
and
or
add
into
cmpsb
in
cmp
cmp
fadds
shrb
sbb
in
inc
stos
icebp
push
repnz
push
fucomip
loop
out
bnd
scas
xor
movsb
xor
push
lock
outsl
incl
sub
push
push
mov
add
mov
and
fldenv
fcomps
jg
mov
scas
cs
pop
pop
push
scas
pushf
xchg
pushl
lea
jle
orl
mov
adc
pop
sbb
push
lret
ret
xor
cmpsl
xchg
dec
stos
xchg
ret
xor
cmp
sbb
push
clc
repnz
or
xchg
fs
and
dec
rolb
cmp
roll
nop
int
push
cld
pop
test
push
mov
jns
pop
push
sbbb
outsl
cmp
pushf
stos
xchg
popa
inc
add
dec
push
jmp
inc
push
sbb
mov
push
jle
xlat
xchg
outsb
lods
pusha
fst
and
sub
adc
mov
rcr
idivb
ja
mov
push
mov
popf
jp
or
cmpsl
mov
outsb
jnp
sbb
or
clc
lret
inc
test
int
filds
jl
es
xor
dec
mov
xor
cmp
jne
mov
pop
adc
add
jb
mov
fsts
divb
aaa
pop
mov
sub
xchg
stc
add
inc
mov
dec
push
xchg
sahf
mov
or
inc
rcrl
mov
mov
test
pop
pop
xlat
lcall
or
ja
xor
sar
inc
fsub
cwtl
dec
mov
leave
push
or
out
jne
add
sub
pop
mov
popf
mov
std
aad
sar
push
je
mov
inc
xor
fidivrs
dec
out
out
ljmp
ret
dec
roll
sbb
test
sbb
mov
cli
cmpsb
dec
cmp
fnsave
testb
cmp
push
std
and
insb
cmp
pop
loopne
xor
sti
pop
lods
rorb
cmpsb
fidivl
test
fimull
or
cmp
aas
jmp
leave
xor
test
cld
sub
pop
sbb
sub
pop
ficomps
imul
and
shll
xor
ja
pop
aas
pop
cli
rclb
loop
mov
arpl
in
aad
cwtl
fildl
xorl
arpl
mov
push
sub
jmp
leave
sbb
xchg
shlb
add
jle
ss
mov
or
jle
push
cmpsl
jmp
inc
addl
and
xchg
idivl
pop
aaa
mov
aam
sub
ss
push
cli
inc
mov
pop
push
das
int
push
add
mov
scas
mov
cltd
gs
mov
lcall
jmp
jb
fisubrl
inc
hlt
or
adc
sti
addr16
mov
fdivrs
push
and
add
mov
mov
or
jge
inc
sub
mov
gs
das
push
loopne
jb
dec
pop
rcrl
xchg
jns
sbb
in
mov
andps
addr16
cwtl
xor
sbb
stos
imul
ja
or
sub
pcmpeqb
es
into
imul
xlat
or
nop
mov
inc
mov
push
xlat
xor
stos
int3
pop
pop
mov
sarb
mov
test
add
xchg
xor
dec
sub
imul
clc
outsb
test
push
cmpl
cld
push
sub
clc
push
dec
lret
pop
and
add
xchg
loope
mov
sarl
cmp
pop
jbe
movsb
cwtl
xor
push
lea
mov
ljmp
lea
enter
lahf
inc
fs
lahf
aaa
inc
inc
cwtl
in
xchg
mov
jmp
lahf
aas
cmc
and
add
addr16
inc
test
xchg
sub
lods
sahf
cmp
xor
rcr
push
jg
xchg
push
jb
out
xchg
popa
add
out
cltd
aas
scas
pop
adc
aas
insl
cmpsl
cmp
imul
int3
jge
lcall
call
jl
sub
daa
cli
push
jns
push
aas
xchg
and
sbb
xor
scas
sbb
add
mov
fistpll
cltd
mov
rcrb
test
inc
fcoml
sbb
rolb
mov
pop
push
mov
inc
inc
pop
inc
cmp
repz
aam
scas
stc
sbb
adc
out
jp
push
add
jns
das
cli
movzbl
jbe
loopne
push
loop
fs
cltd
aas
jl
sub
and
outsb
in
or
test
bound
jp
pusha
xor
pop
scas
push
xor
mov
xchg
push
or
out
inc
lods
push
dec
jge
push
mov
cmp
or
rol
or
daa
sahf
jo
sub
jno
jl
dec
jno
sub
cmpsb
inc
mov
inc
jmp
xlat
loop
sar
imul
js
adc
sarl
jnp
add
clc
arpl
fs
stos
mov
lea
fidivrl
addr16
testl
rolb
or
dec
mov
bound
adc
bound
in
xchg
and
inc
add
and
inc
push
fsubrs
xor
mov
xor
lods
stc
out
dec
pop
test
leave
mov
or
mov
mov
imul
pop
pop
mov
mov
push
mov
mov
mov
es
aas
xorb
loopne
out
dec
cld
cmc
xor
push
daa
dec
cld
mov
dec
mov
jmp
add
xor
push
mov
insl
push
sbb
popa
mov
or
jge
add
push
test
imul
mov
adc
dec
scas
sbb
add
and
pop
je
test
je
mov
xchg
sub
cld
push
mov
int
inc
mov
inc
pushf
lret
inc
mov
adc
push
aas
enter
shlb
inc
repz
xchg
repz
loopne
sub
push
es
ficoml
and
shlb
in
dec
mov
or
mov
ret
decb
icebp
fcoml
addb
inc
mov
ret
out
stos
mov
ficomps
shll
xchg
cwtl
pop
mulb
jae
pop
iret
pusha
sbb
mov
mov
cmpsl
lds
jns
test
imul
mov
outsl
fwait
enter
inc
scas
mov
pop
imul
ret
cmp
mov
and
shll
out
gs
ljmp
mov
cmpl
push
shlb
ret
cmpl
jns
push
cltd
dec
int
sbb
mov
ljmp
lods
dec
pminsw
sub
push
sub
sub
in
push
mov
push
or
push
mov
jnp
rep
shll
jecxz
enter
lock
scas
inc
andl
push
pop
out
xor
test
mov
ljmp
push
unpcklps
dec
dec
pop
lods
push
pop
fcomip
dec
mov
gs
mov
push
mov
pop
pop
push
mov
notb
add
dec
sbb
dec
lahf
pop
xchg
fcompl
cmp
sarl
cld
xor
ret
or
lahf
mov
outsb
xor
adc
pop
outsl
cld
pslld
cmc
out
xchg
inc
test
sub
xlat
xorl
add
shlb
cmp
cmp
or
inc
and
pop
fwait
shlb
xor
push
jb
imul
dec
adc
sarl
inc
ja
das
dec
out
rcl
xchg
inc
adc
xchg
or
out
popf
mov
jp
cmpsl
push
addr16
xchg
push
sbb
xchg
loope
xor
imul
imul
fs
sub
sbb
stos
mov
pop
cmpsb
movsb
push
sub
aad
xor
rcll
push
incb
sub
loope
push
xchg
push
ljmp
pop
es
adc
mov
pop
dec
pop
push
in
inc
pop
push
out
cli
inc
pop
inc
or
cmp
push
inc
testb
jbe
loopne
sub
sub
bound
mov
xchg
sbb
icebp
sub
add
inc
test
xor
or
pop
push
push
repnz
inc
push
fisubl
dec
fsubs
repz
cltd
faddl
mov
bound
xor
fcomps
sbb
push
jns
and
movsb
enter
pop
loop
push
mov
jno
pop
lret
int3
mov
cmp
fwait
sahf
mov
fdivrl
in
out
fwait
pop
dec
mov
aam
call
inc
rcl
inc
cli
add
and
cs
scas
adc
pop
decl
lods
cmp
dec
dec
xchg
sub
fscale
lea
xor
test
pop
jno
cld
loopne
sub
cli
iret
mulb
stos
inc
cs
mov
mov
pop
cmpsb
rcll
es
mov
jmp
adc
jmp
rorb
dec
sub
je
insb
and
daa
mov
mov
mov
inc
push
leave
bound
jp
cmp
fsubl
cmp
sbbb
and
nop
sbb
xor
add
hlt
stc
add
loopne
pop
sbb
xchg
mov
mov
sub
fwait
shlb
and
jbe
sbb
pop
mov
lods
mov
sahf
out
js
call
xor
xchg
jmp
sti
arpl
mulb
lret
les
pop
inc
add
cmp
lods
pop
push
idivb
test
push
aas
gs
cltd
dec
sub
leave
es
inc
xor
rcrb
loop
xor
mov
incl
pop
jno
jl
inc
scas
sub
mov
test
test
fimull
mov
jne
call
xchg
xchg
and
dec
add
out
cmc
push
push
cmc
xorps
lcall
std
xchg
or
lock
xchg
int
movsb
nop
js
rol
push
popf
sbbl
mov
jne
repz
rolb
or
es
pop
into
push
fisubrl
mov
dec
xor
add
movaps
sbb
xchg
test
or
xor
fdivr
scas
jg
push
ss
or
push
cmpsl
pop
test
sbb
test
pop
jmp
add
shlb
fildll
insb
jl
int3
fstl
cmp
or
into
jbe
xorl
icebp
xchg
nop
arpl
out
fadds
dec
notl
fisubs
mov
fwait
adc
or
ffreep
jo
and
je
mov
push
adc
xchg
addb
and
outsl
testl
aaa
insl
int3
rclb
arpl
shll
pop
ret
jle
cmp
cmp
pop
sbb
push
pop
decb
std
sub
inc
rcrb
ret
add
sbb
mov
pop
sbb
sbb
in
cmp
sbb
and
stos
push
xchg
sahf
pop
clc
mov
loop
mov
xor
loop
sub
shll
push
leave
xchg
into
aam
push
push
fisttpl
repz
dec
rorl
out
cmp
pop
push
mov
sbb
mov
mov
aam
xchg
les
icebp
sbb
mov
pushf
mov
das
sbb
jp
lcall
xchg
pop
xchg
inc
and
ljmp
fwait
repz
push
fsubrl
mov
mov
inc
pop
lret
pushf
mov
loope
cmp
xchg
and
out
jbe
jb
inc
cmpsl
out
xor
mov
add
or
ljmp
dec
sti
insl
inc
xchg
jae
xor
out
cmpsl
in
movsb
andb
push
xchg
out
mov
sbb
testl
fistl
adc
cmp
cltd
sbb
mov
testl
movsb
mov
pop
vmread
dec
stos
add
aad
add
pop
mov
in
fsubrl
push
xor
stos
adc
or
cmp
cli
pop
cmp
std
pop
lock
jo
ret
mov
adc
xor
jge
mov
cmc
enter
push
mov
pop
xchg
ljmp
decl
adc
dec
or
cmpsb
jmp
jo
or
xorb
fcompl
mov
inc
cmp
jbe
sbb
out
inc
fs
ficoml
mov
fistl
aaa
jecxz
mov
adc
sbb
jns
sbb
divb
repnz
es
in
add
add
call
enter
cmc
add
dec
pop
setp
movsl
dec
fisubrs
pop
dec
jne
pusha
call
xchg
jo
mov
jmp
mov
loope
pop
gs
icebp
es
xchg
dec
xchg
dec
or
cmpsl
dec
push
push
lahf
shlb
dec
push
and
enter
mov
sbb
jle
cmp
lds
pop
inc
inc
mov
lods
sbb
push
repnz
cmc
mov
sub
test
lahf
les
cmp
xor
icebp
xchg
add
mov
or
mov
iret
pop
jg
xchg
pop
je
jne
je
cmc
in
or
mov
jl
xor
jmp
lods
ljmp
or
mov
lods
in
outsb
cmp
cmc
icebp
scas
jb
dec
test
push
or
inc
sub
push
pop
leave
arpl
leave
adc
or
inc
xchg
into
push
pop
fldl2t
lods
insb
js
cmp
push
mov
xor
mov
arpl
int
xor
inc
xchg
lock
mov
cmp
aam
xchg
or
insl
outsb
andl
les
push
les
popf
cmp
mov
cli
jb
jp
repz
popf
lods
pop
neg
push
and
js
out
mov
push
mov
adc
aaa
jno
lret
testb
mov
arpl
mov
sbb
jle
sti
jecxz
pop
pop
mov
lcall
push
out
mov
push
sti
lret
stc
or
orl
insb
jo
lods
dec
nop
mov
inc
adc
mov
loopne
rolb
icebp
jb
pop
pop
cmp
scas
mov
cs
in
adc
hlt
push
mov
inc
test
xchg
mov
cmp
sti
dec
insl
cmp
shl
lcall
inc
cmpsb
adc
test
movsb
sbb
push
test
adc
cmp
test
sarb
sbb
iret
inc
imul
lahf
shll
push
decb
rolb
stos
xor
das
sub
arpl
adc
mov
push
les
sub
neg
cmp
imul
pop
sbb
pop
sub
cmc
add
hlt
in
je
repz
dec
jnp
push
xor
jg
aam
daa
adc
shll
push
inc
cmpsb
lret
add
nop
loop
adc
dec
inc
loop
dec
push
add
cwtl
test
push
imul
push
lock
jo
xchg
lods
stc
dec
adc
jo
xor
aam
outsb
cmp
sbb
mov
jmp
fisubrl
es
scas
sub
cld
jle
addr16
xor
rclb
test
push
push
in
and
andl
insb
int
xlat
iret
jb
fdivrp
mov
imul
movsb
cmp
loop
or
lcall
sbb
inc
sbb
inc
mov
fld
fbld
pop
adc
js
into
sbb
push
stc
test
mov
inc
xor
push
jg
sub
int
fimull
ds
sahf
mov
stos
ss
dec
adcl
adc
scas
out
cmp
int
xchg
push
add
sub
lods
sub
out
imulb
or
add
repnz
xlat
mov
sub
adc
push
divb
xor
sbbl
jmp
sub
pop
scas
lods
fwait
mov
cmp
sahf
iret
jne
jb
pop
sbb
xor
movsb
and
jp
test
push
cmc
sbb
and
lahf
ret
fldl
int3
sti
xor
sub
imul
rcl
sub
jnp
out
jg
add
outsb
les
sbb
mov
cwtl
sub
fbstp
setp
inc
jo
mov
add
sbb
adc
adc
jge
xchg
outsb
in
mov
xchg
mov
pop
flds
lahf
outsl
lret
adc
ret
aad
mov
aas
and
add
or
repz
out
mov
add
bound
sub
sbb
test
xchg
in
xchg
sbb
ss
xlat
dec
mov
in
mov
jb
repnz
inc
dec
dec
pop
repnz
pop
mov
fistpll
ljmp
push
mov
sbb
jns
jo
test
sub
lods
sub
push
mov
call
fcoms
jp
push
xchg
cmp
or
mov
imul
mov
xchg
xchg
pop
jp
leave
dec
mov
inc
cmpb
hlt
test
in
pop
divl
push
mov
sbb
insl
mov
pop
adc
les
sbb
cmp
lret
sbb
and
jnp
int3
jns
leave
mov
add
push
adc
movb
dec
stos
ja
push
jno
inc
xorb
pop
loope
xor
fs
push
test
popl
xor
xor
imul
aad
filds
fldcw
add
mov
xor
xchg
xchg
rorb
cmpsb
dec
insb
sti
jns
jmp
clc
insl
push
sbb
aaa
loope
add
out
sub
push
push
test
popl
adc
pop
out
sub
mov
cmc
rolb
push
repnz
pop
xor
pop
rcr
cwtl
jo
cmp
data16
adc
jmp
out
push
or
data16
lret
jg
das
push
mov
shll
push
xchg
jnp
sti
fs
rcrl
imul
sar
inc
daa
cmp
std
cmp
inc
push
push
sub
push
jno
cmpsb
js
and
sbb
mov
pushf
daa
push
push
cli
mov
sub
incl
push
inc
lea
cmp
jne
jg
xchg
and
sub
xor
and
or
ja
xchg
xlat
push
pop
daa
inc
jns
dec
aad
std
addr16
call
pusha
loop
push
mov
jmp
push
in
and
test
mov
in
xor
mov
mov
addb
and
adc
inc
mov
test
js
mov
les
pop
add
xchg
sub
mov
sbb
mov
jno
push
filds
cmpsb
mov
mov
shlb
sahf
sub
adc
out
mov
and
clc
sarb
cli
xor
hlt
sub
movsb
jle
lret
or
jp
ja
mov
sbbb
lds
popa
shll
pop
dec
ss
pop
jnp
push
mov
arpl
mov
jb
lods
lahf
cld
mov
cmp
xor
dec
or
inc
jg
dec
mov
jbe
and
xor
sbb
sbb
mov
add
mov
ret
cmpb
lcall
dec
insl
jo
mov
sbb
cld
enter
sub
cmp
and
jecxz
ret
lret
and
nop
movsb
jmp
movsb
test
xchg
mov
mov
sbb
leave
imul
test
cmp
cmp
cmc
jle
movsl
into
sub
lret
mov
das
call
fwait
addl
mov
inc
gs
js
pop
repz
cmp
in
cmc
and
jg
lods
sbb
lods
push
idivb
rcrl
adc
loopne
add
shll
in
pop
mov
in
sbb
xchg
insb
loop
cld
sub
jmp
into
mov
in
std
or
pop
aad
xor
dec
insb
or
mov
pop
and
inc
pusha
mov
dec
outsl
mov
push
xor
adc
mov
adc
mov
int3
inc
sbb
mov
repz
insl
push
push
int3
movsb
jbe
push
jb
into
loope
mov
mov
popf
sbb
mov
mov
sub
xchg
int3
aas
add
leave
push
mov
negb
sbb
lcall
or
jge
push
sub
sbb
cs
and
stc
mov
jno
xlat
pop
jmp
or
outsl
mov
fimull
push
fmul
jo
or
jnp
pop
push
in
sub
and
sub
mov
sub
fwait
sti
mov
dec
imul
xchg
xlat
ret
ret
in
inc
test
mov
fcmovne
cmp
jp
jo
fcomp
lahf
fisttps
movsl
in
dec
int3
push
pop
int3
push
push
pushw
outsl
dec
inc
lretw
mov
rcrl
hlt
pop
flds
sbb
dec
in
mov
fs
push
fwait
inc
dec
shl
ljmp
and
xchg
pop
push
adc
pop
aaa
rorb
sbb
and
push
loope
popa
test
cmp
sub
pop
cld
lahf
pop
and
and
clc
les
pop
push
jno
push
jnp
int3
and
test
pop
ds
push
int3
pop
jp
stos
xlat
mov
mov
jo
aaa
xchg
xchg
lcall
push
pop
cmc
pop
xchg
aam
mov
js
sub
rcrl
outsl
out
cwtl
xor
aas
mov
xor
sbb
and
mov
xor
mov
repz
in
mov
les
dec
jge
fidivrl
popf
add
mov
into
in
test
cli
shr
insl
inc
dec
sbb
aad
inc
cld
push
cmp
movsl
push
ljmp
jmp
std
movsl
outsl
dec
fldcw
xchg
sbb
dec
stos
lahf
sub
bnd
push
add
push
repnz
jne
inc
add
fcmove
pop
insb
aaa
inc
daa
pop
int
or
test
dec
xchg
aaa
out
mov
inc
lahf
out
mov
inc
xchg
jae
ss
adc
lods
cld
xchg
jno
cmp
mov
iret
scas
movb
repnz
fcompp
fsubs
and
sbb
mov
sub
vpsubsw
jae
adc
mov
sbb
jmp
or
fildl
iret
stc
sti
cmc
push
negl
cmc
in
imul
ja
inc
repz
ljmp
stos
sub
adc
mov
mov
pop
inc
xchg
into
jno
sbbb
adc
xorb
xor
jl
add
lods
out
or
mov
cmc
fs
repz
xor
mov
nop
mov
push
and
push
and
push
and
xor
adc
or
xor
mov
sub
and
inc
mov
and
pop
aam
movsl
pusha
sub
mov
test
sbb
and
pop
cmpb
jo
sub
pop
or
iret
jb
mov
pop
sahf
popa
ret
stc
adc
imul
ss
push
jmp
sub
mov
jecxz
xor
push
pop
lret
in
inc
dec
popa
test
or
push
aaa
or
sti
and
lret
cmp
xor
jp
call
or
lahf
je
dec
xchg
jne
jbe
mov
popa
push
sbb
inc
add
ds
push
js
push
mov
add
cmp
mov
sub
iret
xchg
push
add
pop
repz
int
pop
enter
insb
hlt
or
cs
push
or
lahf
mov
or
dec
decb
popa
test
xor
pushf
xchg
loopne
cltd
add
sub
pop
int3
mov
rcl
pop
cmp
mov
imul
hlt
movl
xor
inc
xchg
pop
mov
pop
flds
dec
cld
hlt
mov
mov
adc
cmp
das
mov
cmp
cmc
sub
jge
push
adc
jp
dec
pop
fstpt
ss
mov
sub
fcoms
cmp
testb
lods
pop
jno
out
test
cmp
or
jo
mov
imul
adc
into
shll
popa
fimuls
add
cmp
pop
gs
adc
wbinvd
cld
cwtl
addr16
cmp
movsl
dec
inc
test
bound
pop
adc
pop
add
test
outsl
add
in
sbb
lret
xchg
cld
xchg
xchg
and
xor
cmp
lock
int
sbb
pop
and
pop
int3
stc
fisttpl
popa
iret
es
sbb
pop
stc
mov
cmc
loopne
ja
lock
mov
xchg
mov
push
sbb
xor
in
mov
inc
pushf
inc
inc
pop
sub
sub
pop
js
jp
sub
jecxz
add
inc
jae
sub
inc
add
dec
xor
push
sub
not
mov
popa
mov
cmp
adc
xchg
btr
or
icebp
mov
cld
mov
jp
mov
or
sub
icebp
sub
xchg
scas
push
jle
jle
pusha
cmpsb
cmpsl
ror
xchg
popa
subb
adc
and
addr16
push
mov
shll
mov
and
sub
and
insb
lahf
push
lret
push
les
xor
pop
push
pop
or
iret
xor
mov
jne
shrl
stos
mov
imulb
fistl
xchg
bound
push
call
pop
fidivrs
ja
pop
cmp
das
inc
pusha
in
adc
adc
lahf
fs
scas
adc
outsb
fisubrs
jp
jne
in
ret
dec
inc
adc
bound
loope
pushf
and
inc
ja
flds
cld
into
jle
and
adc
sti
sbb
ds
xor
or
scas
mov
xchg
mov
mov
jle
out
jle
sarb
adc
fs
mov
xchg
xchg
mov
insb
mov
mov
xchg
aas
pushf
in
outsb
jl
jmp
cwtl
cmp
push
notl
lds
pusha
leave
cmp
clc
outsb
out
jnp
mov
dec
jle
add
mov
and
icebp
out
lahf
mov
pop
mov
pshufw
lahf
scas
imul
stos
dec
sahf
cli
add
inc
mov
fiadds
popf
mov
adc
mov
inc
xchg
inc
repz
or
sub
test
orb
ljmp
lret
outsl
inc
xchg
mov
stos
or
sbb
test
dec
push
and
jbe
sub
and
mulb
shl
subl
add
cmpsb
inc
movsl
vsubpd
xchg
ret
jmp
xchg
add
mov
adc
pop
in
stos
jns
add
mov
pop
addr16
mov
or
push
mov
sub
sbb
adc
cmpsb
scas
push
bound
pop
jge
std
cmp
mov
call
popa
push
mov
sub
adc
mov
sbb
inc
dec
jge
outsb
push
mov
mov
sub
f2xm1
xlat
mov
push
xchg
push
or
mov
xchg
dec
mov
out
int
pop
jl
mov
sahf
xchg
jle
das
inc
sbb
pop
lea
aas
pop
outsb
insb
loopne
in
push
cmp
test
push
insb
fidivs
add
out
push
inc
cmp
shlb
and
lds
mov
sbb
lods
push
add
lds
cmp
sbb
xor
sub
adc
mov
out
jp
sub
push
sub
mov
mov
fistps
cmpb
das
push
aaa
mov
mov
or
xchg
add
mov
mov
add
fistl
es
mov
add
clc
addl
mov
pushf
fsubrl
ds
inc
sbb
or
mov
or
stc
xor
movsl
sub
sub
xchg
sbb
push
mov
lahf
push
push
inc
sbb
add
xorb
cmp
pop
jo
pop
mov
lcall
dec
cli
cmp
jle
mov
cmp
mov
lahf
xchg
imul
adc
subb
xchg
cmp
adc
push
cld
fisubl
add
dec
lahf
in
adc
xlat
aam
adc
pop
dec
add
adc
inc
mov
xorb
jbe
push
add
fists
mov
pop
bound
dec
out
movsb
pop
push
mov
movsb
cmp
out
pop
fisttpl
fs
xchg
ret
mov
shlb
mov
cmp
dec
std
mov
fs
mov
cmpsl
std
shll
cld
cmp
loop
inc
pop
lahf
jne
je
mov
mov
aam
mov
cmpsl
rolb
or
mov
cmp
ret
adc
push
sarl
mov
mov
hlt
mov
scas
lea
fmull
stc
aaa
or
ljmp
xchg
sub
inc
adc
xchg
aad
repz
sbb
scas
adc
and
mov
sbb
outsl
dec
ljmp
xchg
cmp
mov
add
bound
aam
cmpsl
jne
or
aam
pop
sti
lods
add
or
jg
sub
xor
sbb
jbe
movsl
ret
add
mov
adc
test
mov
ror
in
in
dec
aad
fisubrl
mov
sub
mov
xor
call
xchg
and
xor
jp
add
rcll
es
cmp
pop
inc
mov
stos
pop
pop
add
jbe
dec
xchg
and
or
shl
loope
jne
jae
aas
cmp
push
sub
loopne
add
push
xchg
scas
or
mov
jg
in
mov
aad
ja
mov
dec
jg
pop
add
rclb
pop
lock
cmpsl
jbe
hlt
stos
cmpsb
pop
lods
mov
popf
jnp
jno
outsb
mov
into
cwtl
adc
jecxz
out
std
or
movsb
and
mov
jo
js
fwait
mov
stos
dec
jmp
test
mov
sub
dec
js
jne
sub
sub
subb
xor
ret
sar
rol
mov
mov
out
outsb
dec
jno
inc
adc
and
bound
in
aas
sti
mov
dec
and
outsl
jle
gs
nop
or
mov
xchg
dec
push
arpl
rorb
pusha
sti
jg
mov
lea
inc
cmp
lret
into
push
or
out
cld
loopne
js
repnz
mov
push
adc
xchg
fldt
pop
enter
fwait
pop
lret
imul
scas
mov
cmp
cmpb
adc
ret
adc
add
cs
gs
int
lock
ljmp
gs
bound
jl
sarb
pop
cmp
mov
popa
mov
push
mov
mov
push
fdivr
xlat
cmpsl
mov
into
xchg
push
jno
sbb
mov
out
xor
sbb
xchg
int3
fidivrl
sbb
out
cmp
and
adc
sub
in
out
clc
nop
sub
mov
and
adcb
mov
dec
insb
pop
cmp
loopne
lds
mov
mov
ficoms
inc
repnz
push
idivb
push
xchg
jl
and
push
push
mov
sarb
es
push
xor
mov
fs
lds
or
adc
cmp
pop
xchg
adc
xor
in
push
xchg
lods
mov
xor
lahf
ret
insl
std
ficompl
fimull
xor
mov
movsl
mov
or
jbe
mov
mov
inc
dec
xorl
adc
or
lods
mov
adc
sti
inc
bound
sbb
jg
insl
loopne
cs
and
push
sbb
dec
xor
ljmp
in
mov
aaa
xchg
in
jbe
fs
push
pop
mov
std
insl
push
pop
mov
jmp
repnz
or
push
push
mov
cli
pop
adc
fwait
mov
decl
int3
jl
mov
xlat
mov
inc
lret
cmp
test
jl
lahf
ds
adc
or
lahf
pop
add
enter
inc
orl
mov
inc
sub
pop
dec
fsubl
jp
ja,pt
js
xchg
lret
mov
jmp
rorl
cmpb
fisubrl
mov
xor
sbbb
pop
add
dec
jb
sbb
arpl
adcl
std
outsb
scas
stos
inc
inc
lds
aad
test
sti
jmp
mov
pop
iret
aaa
loop
fidivrl
lock
inc
jmp
repz
pop
push
push
out
mov
out
jmp
insb
dec
ficoms
gs
mov
push
push
jae
dec
decb
outsl
push
fbld
xchg
sub
ret
stos
movsb
mov
push
lret
or
xchg
in
cltd
xor
cmp
fisttpl
adcb
jns
cmp
jl
std
nop
pop
cmpsl
or
aaa
xor
lcall
sub
arpl
add
nop
lods
popf
mov
dec
mov
mov
fadds
dec
sti
push
and
pop
lock
xchg
sbb
arpl
mov
pop
push
cmp
jnp
lods
pop
hlt
jle
mov
pop
fstpl
pop
adc
ds
xchg
pop
xor
dec
lcall
mov
pop
mov
jmp
jge
clc
jecxz
sahf
test
cmp
in
out
test
es
andl
leave
dec
add
adc
mov
sbb
lret
sbb
dec
jb
mov
adc
mov
testb
push
xlat
imul
fsubrl
xchg
ret
shll
in
xor
test
fdivrs
pop
adc
cmp
cmpsl
cltd
mov
cld
fimull
and
decb
sub
or
add
adc
or
push
movsb
cmpsl
xchg
js
in
test
sub
mov
inc
jl
and
ds
scas
out
jp
sti
mov
xchg
ds
stos
mov
jne
stc
filds
xchg
lods
sbb
sbb
mov
movsb
lock
and
and
sbb
jl
sbb
cld
cmp
inc
push
aaa
push
fistl
cmp
fcoms
inc
xchg
fwait
jmp
imul
jle
dec
cli
add
jge
into
stos
sbb
test
aas
mov
pop
mov
inc
es
add
add
dec
pop
jecxz
xchg
mov
movsb
adc
fwait
subb
pop
shll
adc
ret
push
push
scas
fldcw
dec
in
test
mov
fcompl
call
stos
push
bound
aaa
mov
pop
and
push
pop
js
push
inc
popf
mov
insb
sbb
test
jl
mov
cmp
scas
xchg
dec
orb
mov
pop
add
pushf
xchg
and
out
sbb
inc
ss
and
mov
jl
aad
xchg
std
mov
andb
mov
sbb
and
imul
arpl
movsl
push
les
mov
jne
mov
daa
imul
out
mov
jbe
dec
pop
push
neg
push
lods
mov
cwtl
inc
sub
out
xor
jecxz
int3
and
push
filds
enter
adc
stos
jmp
push
inc
punpcklwd
leave
adc
mov
fimuls
pusha
push
cmpb
or
sub
dec
xchg
scas
push
in
jne
inc
out
stos
aad
popa
cmpl
gs
xor
sarb
dec
cmovl
leave
test
fs
cltd
jmp
sbb
nop
ja
push
stc
rcl
sub
call
jl
sti
pop
jg
int3
fs
cmc
imul
jno
fisubl
lret
mov
hlt
add
frstor
call
push
ror
shll
cmpsb
rcrb
in
lods
inc
mov
scas
fistpll
testl
inc
das
mov
outsb
fldenv
push
insb
add
testl
and
es
gs
adc
xor
jns
fldt
sbb
decl
xor
js
sbb
lods
sbb
movl
inc
ret
add
xchg
mov
sub
and
adc
xlat
mov
in
repnz
lret
or
mull
in
loope
aad
mov
and
jmp
aam
mov
sarl
inc
adc
enter
fsubrl
rcrb
cld
stos
into
mov
adc
cwtl
xchg
mov
icebp
lds
fildl
mov
sub
xor
push
pop
fisubrs
push
or
or
mov
and
inc
inc
xchg
bound
and
add
mov
fimull
sub
push
test
cld
push
stc
sbb
lea
aam
jo
push
xor
xchg
inc
enter
sbb
mov
sub
mov
and
mov
push
sar
daa
insb
mov
sbb
sahf
or
and
into
push
mov
idiv
cwtl
mov
insl
cltd
hlt
push
aaa
xor
mov
repnz
mov
xchg
cmpsb
push
ja
add
test
jge
aas
mov
shll
cmp
or
or
cli
xor
or
xor
mov
mov
cmp
cmp
lret
jnp
cmpsb
xor
imul
and
test
enter
dec
mov
aam
les
jmp
push
dec
imul
int
ljmp
and
mov
mov
jg
cmpsb
enter
pop
jge
fists
mov
dec
and
or
repnz
xchg
outsb
push
rcrb
cmp
dec
jne
subps
mov
jnp
mov
and
mov
mov
faddp
push
adc
push
outsl
mov
ret
sub
leave
add
loope
fdivr
ds
test
aam
filds
and
out
sub
clc
or
sub
shll
xchg
lock
xchg
rorb
xchg
aad
test
mov
pop
out
add
enter
das
cmpsb
push
imulb
mov
cwtl
rcll
lret
scas
fidivrl
rcrl
xchg
mov
lods
and
js
lock
inc
xchg
adcl
mov
insl
xorb
xor
push
addr16
dec
inc
mov
je,pn
fwait
push
pop
lcall
rolb
jno
ss
rcrb
xchg
xor
ss
adc
inc
and
adc
icebp
rcr
jo
dec
imul
shr
pop
xchg
mov
fidivrl
lahf
pop
jg
aas
icebp
in
lea
fiadds
imul
mov
xchg
mov
cmp
imul
dec
pop
imul
lret
scas
fsubr
push
imul
mov
sub
js
popf
mov
pop
aas
cli
pop
inc
pop
repnz
int3
jae
inc
dec
adc
push
push
sbb
subl
mov
sbb
dec
scas
test
call
lods
add
xchg
inc
mov
pop
jge
movsb
sbb
jl
enter
inc
pop
mov
scas
ds
and
pop
jae
cmp
lret
sbb
xor
add
mov
mov
adc
jae
into
or
push
popf
scas
outsb
ret
daa
sub
popf
cs
xchg
dec
and
and
ja
xchg
sbb
jmp
lahf
cmp
insl
dec
inc
jmp
aaa
arpl
divl
xchg
mov
push
sti
idivl
scas
popa
arpl
and
push
lds
push
int3
jno
ds
testl
push
sub
pop
cmc
cli
mov
mov
gs
pop
add
aad
and
insl
call
inc
add
xor
cs
es
scas
int
dec
inc
mov
insl
test
popa
in
dec
repnz
je
mov
andb
stc
push
mov
add
test
pop
repnz
jne
add
jae
inc
sbb
in
out
outsl
sti
sbb
mov
aaa
mov
add
mov
test
clc
cwtl
dec
dec
xchg
lahf
push
adc
pop
push
pop
mov
inc
insl
nop
xorl
push
xchg
add
hlt
dec
xor
cli
hlt
movsb
jae
inc
push
pop
and
loope
pop
mov
gs
out
das
mov
mov
sahf
lea
lahf
cmp
xor
sbb
dec
sub
mov
leave
sub
pop
sahf
mov
imul
scas
aam
mov
adc
movsb
sbb
sbb
js
mov
dec
pop
outsl
rcrl
and
sbb
movsl
test
push
xchg
mov
fyl2x
jg
lss
pushf
pushf
add
mov
adc
push
cmpb
rorl
sbb
lahf
pushf
dec
pop
lret
mov
push
mov
out
and
or
cmp
mov
jne
fs
mov
jl
cmp
in
jp
and
imul
pushf
mull
leave
pop
push
cltd
sbb
or
lahf
mov
in
imul
mull
daa
jecxz
xor
or
cmp
into
dec
cmpsl
arpl
cld
int
xor
pop
sub
pusha
mov
lods
adc
in
dec
mov
sub
xchg
jb
ror
xchg
jns
dec
inc
sub
mov
sub
andl
ja
in
movsb
push
out
cli
testb
repnz
movsb
lcall
sbb
lea
test
arpl
pusha
dec
ds
stc
sub
or
adc
or
mov
pop
mov
sbb
push
mov
sti
mov
xor
pop
sbb
inc
fistpl
push
jns
inc
lret
adc
mulb
pop
jge
mov
call
xchg
adc
aam
es
and
jl
push
test
sti
mov
cld
out
xor
movsb
dec
jg
jge
lea
in
push
aam
mov
push
clc
mov
sarb
pop
nop
clc
push
fcompl
sbb
jge
sahf
out
mov
cmp
icebp
push
mov
mov
sahf
dec
mov
add
aad
jge
imul
mov
sub
cmp
mov
add
fs
or
aad
in
loope
sbb
jmp
or
ret
mov
mov
pop
pop
push
mov
cmpsb
jle
inc
or
movsl
fdivrl
add
cld
sub
and
mov
adc
adc
or
adc
fiadds
loope
mov
sbb
lret
sbb
jno
je
push
mov
mov
not
jge
into
movsb
out
ret
and
loope
pop
mov
xor
inc
pop
jbe
lods
cmp
pusha
push
sub
dec
sbb
into
mov
imul
cs
jb
scas
fistpl
xchg
gs
cwtl
pusha
xchg
jle
int3
into
popa
testb
adc
cmpsl
icebp
aaa
xchg
jge
push
inc
mov
fsts
stos
pusha
pop
mov
add
lcall
push
jno
loope
dec
mov
push
test
out
or
sub
aas
orb
in
and
push
push
fs
sti
jp
ret
cmp
popa
push
fsubl
jecxz
lods
inc
cmpsl
jo
push
scas
adc
pop
cld
mov
jno
jbe
inc
ret
xchg
ret
ret
pop
jns
jle
inc
popf
jo
and
repnz
ss
ljmp
jl
or
hlt
sarb
jecxz
and
lods
adc
mov
dec
xchg
out
jle
stos
scas
mov
push
repnz
push
push
stc
pushf
fldt
vorps
dec
cwtl
outsl
mov
xor
pop
pop
mov
xor
push
pop
ret
mov
test
push
mov
sbb
test
lods
xor
sub
xchg
loop
dec
push
push
scas
in
mov
fcomps
mov
in
xchg
pop
inc
out
movsb
jae
sub
and
sub
jmp
imul
adc
out
xchg
jmp
push
cs
jae
sti
lods
mov
and
aas
les
mov
cmp
jbe
ficomps
adc
cmpl
and
inc
test
sbb
loopne
aad
rcrb
lcall
pop
xchg
mov
mov
es
cmp
jl
mov
cmp
stc
in
sub
push
dec
dec
sbb
xchg
jl
cmp
mov
lcall
adc
xchg
xor
dec
mov
mov
lods
push
gs
pop
xchg
sub
mov
stos
push
dec
test
scas
dec
jg
adc
pop
clc
pop
mov
int
inc
jbe
mov
inc
cld
mov
fwait
cli
bound
fmuls
ret
cwtl
test
sub
add
pop
xchg
dec
out
lock
push
sbb
loop
mov
dec
mov
mov
stc
mov
das
nop
sub
in
in
and
sub
shrb
or
ljmp
cmp
cmp
push
mov
in
movsb
iret
les
loop
sub
ljmp
cmp
rorl
jo
fdivrs
les
aas
pop
xor
int
repnz
ljmp
xchg
fisttpl
test
inc
call
les
ret
pop
test
pop
ljmp
sbb
test
test
stos
int3
adc
jmp
sub
push
xor
and
lret
and
out
idiv
add
movsb
je
ret
dec
jns
mov
imul
jp
lods
mov
jp
jmp
cmpsl
test
xorb
pop
int3
jle
jmp
adc
test
jae
lret
les
mov
insl
leave
lods
mov
xchg
int3
cmc
test
push
lock
mov
in
in
xor
or
add
ss
or
xor
iret
cli
fcomps
dec
fidivl
jg,pn
dec
out
lcall
sub
pop
cmpsb
mov
inc
loopne
dec
clc
xchg
ja
fdivp
ret
mov
insb
mov
enter
out
jmp
clc
mov
rorb
cmp
push
jae
mul
inc
xchg
lcall
mov
mov
lods
mov
fdivs
sub
sub
mov
orl
jo
outsl
fs
into
mov
pop
pop
fisubrl
adc
adc
xchg
xor
cs
sub
js
mov
mov
and
incl
or
cltd
mov
and
cmp
sbb
out
mov
insb
movsb
insb
aad
inc
iret
in
popf
gs
test
mov
rcrl
pop
dec
fsubl
lea
outsb
mov
stos
adc
adc
mov
js
and
cli
mov
out
sbb
dec
jp
aas
lcall
es
in
mov
jae
ror
push
in
pop
mov
ljmp
repnz
icebp
mov
cmc
push
dec
out
hlt
jae
cmp
outsb
ret
push
or
xchg
push
xor
xlat
lock
mov
xor
or
movsb
xchg
jno
adc
dec
sbb
shlb
inc
sbb
xor
pop
out
sub
outsl
sahf
adc
jne
loopne
test
pop
data16
sti
dec
mov
and
lret
insb
mov
arpl
shll
dec
sbb
pop
out
andl
aad
xor
push
dec
mov
rclb
push
mov
mov
hlt
mov
push
xor
and
jno
inc
imul
mov
sbb
gs
ss
jnp
aaa
je
jbe
xor
loopne
fsubr
xlat
adc
push
cwtl
or
ja
outsb
jno
jo
mov
push
xchg
rolb
push
inc
nop
xchg
pop
fldt
call
jge
shll
lret
jbe
mov
sbb
jge
xor
stc
sub
mull
xchg
xchg
insl
rcrb
adc
cmpsl
and
xor
movsb
lcall
into
in
stos
fldcw
inc
sarb
mov
mov
lods
cwtd
in
into
cmpsl
and
stc
xchg
push
cwtl
jne
or
sub
cli
cmp
pop
cmp
xchg
fdivrs
xor
cmp
sub
mov
arpl
inc
in
aad
xlat
leave
insl
mov
stc
mov
or
xor
xchg
pop
fnsave
push
test
mov
mov
cmp
scas
cmp
enter
dec
sbb
insb
push
and
test
leave
lea
sub
dec
jo
scas
jno
inc
pop
adc
adc
and
es
imul
pop
push
cmp
insb
push
int3
insb
pop
adc
out
aaa
popf
fstl
pop
cli
inc
notb
xchg
or
insl
xchg
std
xor
push
dec
xchg
adc
adc
push
adc
xchg
mov
imul
bound
jle
out
inc
mov
jle
jbe
incl
test
push
xchg
fnsave
mov
xchg
and
cld
lods
mov
push
js
push
inc
subl
testl
adc
mov
iret
add
in
out
aas
add
aam
pop
jge
pop
push
cmpsl
dec
pop
and
out
fcomi
mov
insb
cmpsl
fdivr
adc
mov
ficomps
add
mov
aam
fwait
jecxz
inc
es
xor
mov
cmc
mov
test
call
add
dec
add
sub
fldenv
cltd
sub
xor
icebp
mov
xchg
mov
sbb
pop
xchg
cmp
jno
or
lods
add
std
inc
test
adc
ljmp
cmp
std
test
push
outsl
push
js
mov
scas
xlat
xor
dec
aam
and
jg
or
mov
push
sti
cmp
adc
aaa
in
fs
lret
add
nop
dec
hlt
adc
inc
mov
xor
pop
mov
mov
aas
jecxz
in
xchg
fstpl
sti
sub
and
sub
and
add
in
dec
jnp
incb
leave
lods
adc
jno
jle
cmp
lods
ja
adcl
xchg
xchg
movsl
cmp
jae
bound
pushf
jmp
push
mov
jb
arpl
arpl
mov
or
or
cmpsb
mov
xchg
inc
inc
pusha
push
ror
add
mov
fistps
add
loopne
in
add
jne
add
and
aad
adc
int
inc
and
push
xor
sbb
cmp
pusha
jp
bound
pop
in
inc
movsb
xor
js
les
dec
leave
aad
in
out
and
scas
add
sub
xor
lea
cmp
or
filds
mov
sbb
int
lds
sub
enter
jb
int
jo
inc
out
ret
push
and
sbb
xchg
data16
xor
lods
mov
push
adc
mov
mov
fildl
sub
push
push
mov
in
stos
out
test
fldl
mov
jle
das
lock
push
mov
xchg
cmp
fwait
xchg
daa
dec
jge
cli
cs
and
fldenv
jne
scas
imul
add
arpl
inc
insb
push
mov
and
xchg
in
push
and
ror
dec
imul
outsb
dec
fs
out
xchg
std
jp
cmpsl
dec
roll
call
add
push
mov
add
js,pt
icebp
insb
and
jg
jo
push
inc
addr16
and
arpl
out
sbb
xor
xor
or
fwait
mov
push
sub
into
test
enter
fnstcw
mov
sub
xchg
inc
push
in
xchg
inc
cli
xor
and
xchg
add
or
mov
mov
lcall
cld
xchg
mov
out
in
rcl
movsl
bound
int
repz
mov
aaa
repz
inc
jo
call
iret
cmp
jb
xchg
vpsadbw
scas
in
pop
xchg
jp
pop
outsl
stos
jg,pt
jge
mov
popf
mov
lock
testl
lcall
cltd
outsb
dec
mov
cmpsl
das
xorl
stos
mov
es
push
jecxz
pop
or
ljmp
ret
cmp
rclb
rclb
sub
and
adc
push
adcl
hlt
aas
popf
outsl
jns
stos
lret
inc
dec
sbb
es
cld
xor
bound
or
dec
out
ja
rcr
mov
pop
rcrl
iret
mov
je
loopne
outsl
lcall
lahf
sub
adc
mov
addl
fwait
dec
or
stos
fstl
mov
push
xorb
popw
pop
test
push
sar
dec
push
lahf
push
in
mov
mov
int3
call
sub
push
in
adc
cmc
lock
stos
sub
adc
adc
test
loopne
inc
out
jne
dec
push
addr16
in
lods
mov
lret
sub
rcll
into
cld
mov
mov
ret
arpl
xor
sub
pop
fstl
inc
out
into
sub
pop
pop
or
xor
mov
push
xchg
xor
pushf
test
loop
mov
in
sahf
arpl
xor
repz
pop
scas
jo
or
fwait
lods
lock
pop
dec
mov
jmp
sbb
sbb
push
xlat
popf
inc
lds
lods
cmpsl
jmp
int3
and
lock
dec
sub
in
into
stc
int
imul
inc
int3
push
aam
icebp
sbb
loop
mov
lds
insb
in
loop
sbb
std
mov
fcomps
cld
mov
jbe
insb
loope
adc
pop
stc
mov
xchg
and
xor
test
inc
popa
in
ja
das
inc
icebp
xchg
or
scas
rolb
int3
or
or
cltd
mov
inc
or
mov
out
fs
ds
cmpsl
cwtl
pop
rcl
into
lods
cs
inc
lods
hlt
int
mov
sahf
mov
nop
rcll
pop
imul
mov
fdivr
cltd
and
out
sbb
xchg
xor
jge
aas
sub
std
sti
je
xchg
jg
pop
sub
mov
and
lcall
sub
push
lret
push
or
in
out
rcl
jg
and
shll
cltd
aad
outsb
add
and
lahf
push
or
jle
pop
adc
inc
xchg
cwtl
loopne
je
stos
out
lcall
adc
push
dec
ret
mov
push
xchg
movsl
andb
arpl
das
test
aas
adc
icebp
mov
add
mov
js
jmp
pop
ljmp
cmp
icebp
or
rcrl
jno
fldl
pop
test
mov
test
scas
int
and
mov
or
and
lret
stos
or
mov
jle
mov
in
mov
leave
bound
sbb
jecxz
pop
ja
cmc
mov
jle
insb
mov
call
jp
pop
neg
xchg
dec
and
xor
inc
ja
pop
cmp
pushf
stos
aas
push
adc
jnp
or
push
ds
xchg
pusha
cmp
add
jno
and
mov
push
pop
and
cmc
xchg
mov
lcall
push
mov
jmp
in
ret
loope
xor
mov
push
jecxz
and
rol
jae
sbb
pop
popf
ret
clc
xchg
jmp
xor
fsubs
daa
sbb
daa
mov
imul
jg
inc
mov
mov
add
shl
add
aaa
inc
mov
xchg
cld
jmp
fldcw
xchg
mov
in
popa
xor
icebp
loope
cli
inc
loope
ja
movsl
arpl
pop
or
add
jl
movsb
mov
fiaddl
negl
xor
test
jg
xchg
movsl
enter
push
jmp
aam
movsl
mov
inc
lock
sarl
lock
call
xor
sahf
in
or
push
addr16
push
dec
out
test
adc
popa
testl
into
nop
mov
movsl
add
jge
and
mov
mov
daa
jne
test
insl
stc
jle
pop
je
jecxz
push
adc
lds
pushf
jecxz
sbb
xchg
outsl
cmpsb
ret
xor
test
mov
or
cmp
pop
int3
mov
idivb
add
das
enter
into
andb
test
lods
ret
and
out
jo
sbb
mov
inc
xchg
add
mov
setge
mov
cmp
dec
pop
mov
popf
sub
fildl
jns
push
inc
xchg
push
popa
imul
sbb
jnp,pn
js
xchg
fstpt
test
adc
adc
test
out
inc
sbb
dec
xor
in
inc
repnz
scas
xor
nop
bswap
or
cmpl
or
cld
pop
dec
imul
cmpsb
icebp
inc
stos
dec
sbb
push
cmp
pop
daa
add
pop
push
mov
adcl
aaa
push
push
inc
cmp
dec
xlat
loop
filds
outsl
enter
xor
mov
insb
jnp
push
fiaddl
dec
fsubl
dec
mov
xchg
add
testl
in
insl
lret
addr16
call
mov
adc
xchg
xchg
mov
push
push
inc
jle
push
stos
or
xor
hlt
insl
in
call
test
push
notb
and
dec
cmp
mov
fnsave
out
push
stos
mov
xor
xor
jne
gs
adc
fiaddl
icebp
xor
les
mov
into
mov
imul
sub
or
mov
or
shll
int3
ret
icebp
punpckhdq
fs
insb
outsb
lcall
int3
cmpsl
out
and
fldt
call
data16
imul
mov
and
stos
orb
repnz
push
push
les
iret
arpl
rorb
and
xchg
lea
std
movsl
adc
mov
push
data16
shrb
mov
jnp
out
sahf
sub
outsb
into
xor
into
mov
or
stc
movups
inc
out
dec
in
leave
lods
and
sbb
cmc
movsl
ffreep
mov
popf
movsb
pop
iret
sti
aas
mov
movsl
mov
mov
dec
aam
pusha
and
mov
push
testb
repz
or
das
lret
cmp
inc
or
movsl
loop
sbb
pop
sahf
cmp
dec
add
or
or
fnstcw
js
ja
js
clc
or
jb
and
sub
pop
lods
or
dec
fisubrs
lds
lret
mov
adc
imul
pop
aas
lret
ljmp
outsl
add
bound
mov
lahf
pop
adc
cld
leave
or
fldcw
les
sbb
pop
scas
pop
bnd
cmpb
ud0
jmp
jecxz
xchg
pop
mov
fs
cmp
enter
inc
nop
stos
pusha
repnz
movsb
pop
adc
adc
dec
cmpsl
lret
ds
and
xor
sub
mov
aaa
out
adc
mov
rclb
or
cld
testb
xchg
cwtl
and
ds
cmp
mov
xchg
scas
mov
int3
stos
lock
mov
sbb
call
clc
or
jp
mov
hlt
jae
xor
and
mov
jmp
bound
lock
add
cmpsb
xchg
cwtl
sbb
sahf
int3
lods
out
mov
or
jl
sub
enter
cmpl
jne
sbb
test
test
adc
sub
or
inc
cmp
mov
inc
fsubp
xlat
push
lahf
ds
xchg
ljmp
pop
repnz
mov
lds
inc
xchg
imul
cmp
jo
push
jae
push
add
sbbb
mov
data16
sbb
mov
mov
xor
or
outsb
lret
push
xchg
push
and
jbe
xor
cltd
enter
sub
jg
dec
std
rcr
mov
pop
out
iret
or
sbb
cmp
aaa
push
adc
mov
les
js
push
inc
mov
jp
cmpsl
call
push
sarb
enter
aaa
fadds
sub
dec
inc
cmp
iret
ss
dec
test
mov
in
pop
pop
sbb
sbb
lods
ljmp
push
dec
mov
jo
mov
mov
pop
push
cli
mov
adc
cld
push
cltd
sahf
add
popa
inc
pop
sarb
jle
pop
push
and
pop
xchg
inc
call
out
add
insb
cmp
shrl
cmpsl
xor
inc
test
mov
push
and
and
dec
inc
pop
and
xorl
test
mov
inc
lcall
ret
jl
call
mov
mov
insl
cmpsl
xor
mov
mov
ja
or
popf
pop
shll
shrl
iret
pop
mov
cmc
test
mov
scas
xlat
xchg
mov
pop
jl
loope
cmp
call
mov
clc
out
and
imul
xchg
shrb
test
mov
sub
jmp
cmc
inc
dec
cmp
fwait
insl
shll
mov
or
sub
jp
pop
inc
pop
and
movsb
mov
into
icebp
shl
dec
xchg
test
add
sub
sbb
repz
sbb
ss
mov
pop
cmp
addl
scas
mov
mov
mov
xchg
test
stos
cwtl
movsb
jnp
xchg
xchg
adcb
addr16
scas
scas
mov
sub
sbb
aas
or
pop
add
and
push
cs
xlat
cmp
mov
in
jle
lods
shll
movsl
jb
loopne
hlt
inc
dec
dec
mov
pop
mov
push
adc
sub
mov
into
sbb
scas
ja
cli
and
imul
mov
test
push
ror
pop
xchg
repz
je
out
pop
inc
adc
std
ret
nop
push
xor
cmp
int
cmc
push
cmp
mov
sub
gs
pop
lcall
fwait
jle
mov
lea
fwait
mov
sbb
cs
mov
fwait
mov
or
mov
lods
inc
dec
sub
adc
adc
aam
add
pop
sbb
mov
bound
nop
mov
fwait
and
orb
push
inc
adc
or
jge
and
scas
bound
mov
in
jp
inc
sub
jo
jge,pn
fcomps
mov
pop
sbb
xor
add
aas
xor
ss
ret
out
sub
sbb
mov
push
pop
add
shll
ss
inc
jnp
test
mov
hlt
inc
pop
push
sub
aas
leave
int3
pop
jp
adc
lret
dec
sub
xor
pop
xchg
movsl
cmp
mov
push
lret
stos
addl
adc
pop
mov
insl
mov
shll
lea
pop
sub
inc
cmp
mov
subb
pop
mov
xchg
and
push
ret
jge
or
mov
inc
lret
aad
jne
pushf
loop
pop
push
and
mov
fsubrp
push
or
mov
adc
rorl
push
mov
dec
sahf
cmp
lea
dec
lea
test
mov
cmp
loopne
dec
cld
and
cmp
inc
jecxz
mov
sub
lahf
ret
adc
addr16
insb
repnz
jo
and
mov
leave
repnz
fldt
inc
adcl
mov
mov
jne
out
data16
or
inc
sbb
lods
push
dec
and
fcomip
mov
jnp
xchg
or
fistl
les
iret
mov
pop
lea
and
lods
xor
push
mov
mov
mov
cmpsb
lcall
clc
cmp
xchg
insb
insl
lds
out
ret
xor
cs
or
movsl
jb
aam
aad
xlat
repz
and
inc
aaa
jecxz
push
ljmp
cmp
cmp
cmpsl
mov
xor
jbe
inc
shll
adc
pop
lahf
sub
fdivs
lds
cwtl
lret
fwait
xchg
es
and
filds
mov
xchg
int
mov
push
sbb
je
fisttps
mov
ss
dec
sub
ljmp
cmp
inc
fdiv
fld1
ljmp
xchg
or
push
jno
dec
sub
nop
sub
adc
jb
ss
out
jnp
mov
lods
sti
adc
mov
dec
movd
cmpsl
xchg
inc
callw
aad
std
fwait
es
mov
xor
sbb
out
insb
inc
xor
xchg
xchg
out
or
or
bound
fsts
iret
xchg
movsl
sub
dec
fcompl
mov
fdivl
mov
call
push
xor
out
test
leave
repz
lahf
sbb
fwait
mov
mov
xchg
aaa
add
jecxz
stc
cmp
xchg
dec
adc
rcrl
push
mov
andb
mov
fldenv
addr16
sub
out
inc
loopne
shl
adc
test
gs
insl
lods
movsb
and
in
es
lods
ret
cltd
out
push
jo
ljmp
jb
ret
clc
xchg
hlt
mov
pushl
mov
sbbb
fbld
push
add
cld
lds
test
pop
xchg
test
mov
bound
stc
outsb
stos
jl
repnz
in
fisttps
repnz
cmpsl
cmpsb
jle
jp
cmp
fwait
pop
outsb
ret
jge
test
cwtl
fcomip
fsubl
mov
jecxz
popa
add
pushf
mov
sahf
add
movsl
jne
pusha
jmp
aam
movsb
fwait
scas
out
mov
jmp
iret
jmp
repz
fadds
das
clc
mov
ljmp
out
sbbl
es
mov
and
andb
xchg
xor
sarl
movsb
shrl
jl
jge
sub
cld
pushf
mov
add
xchg
sbb
xchg
je
jp
ljmp
jno
xor
push
dec
mov
xor
or
fldt
mov
sbb
in
lahf
adc
ret
sbb
push
mov
push
scas
inc
adc
popf
dec
imul
mov
scas
stc
out
mov
mov
clc
inc
inc
fdivl
icebp
mov
mov
jb
dec
fidivl
imul
pusha
xor
mov
adc
cmp
je
outsb
sub
fidivrl
ljmp
or
push
inc
loopne
pop
ds
test
mull
fcomip
or
fists
inc
les
jecxz
jg
mov
fimuls
cmp
popf
daa
adc
jno
lcall
jmp
stos
lea
mov
push
mov
cwtl
sbb
test
data16
pop
ds
or
fsubrl
outsl
loop
out
subb
int3
add
push
nop
fucomp
and
imul
aas
add
pop
fs
fldcw
mov
ja
jo
fmull
lea
sbb
dec
clc
push
sub
in
cwtl
jae
sbb
xor
push
in
mov
gs
or
inc
sub
jge
jbe
mov
adc
outsb
je
dec
std
fisubl
popf
mov
cmp
jo
repnz
rep
data16
inc
fsts
mov
js
push
inc
jne
mov
icebp
insl
push
inc
jecxz
xor
sub
add
xchg
or
sub
and
xor
pop
repnz
test
imul
adc
jge
or
addl
pop
and
imul
dec
xchg
fs
sub
jnp
insb
popa
leave
mov
nop
aad
sbb
cmp
mov
scas
into
or
loopne
popf
cmp
xor
fnstenv
cmp
stc
inc
xor
xor
movsb
rcrl
jo
add
push
push
pop
in
cmpsb
subb
mov
adc
shr
sub
jns
mov
scas
adc
inc
push
stos
mov
into
sub
pop
cmpsb
jmp
adc
mov
repnz
daa
inc
push
int3
idiv
aad
sbb
pop
test
fsubrs
enter
xchg
pop
jo
pop
enter
pop
fadd
push
xchg
sahf
outsl
push
xor
fildll
xchg
stos
sub
mov
xor
popa
xor
xchg
pusha
mov
cmc
inc
xor
adc
fnsave
and
out
sbb
lods
jae
into
lods
pop
repz
cltd
or
dec
xchg
push
cmp
fstp
int3
inc
stos
xor
shrl
popf
add
jmp
popf
nop
rorl
xor
fidivrl
pop
fs
ja
dec
lods
cmp
xchg
mov
inc
pop
xor
jno
icebp
outsb
adc
pop
inc
adc
ljmp
cmpsl
ret
xchg
shlb
bswap
into
loopne
in
notb
jg
mov
mov
jg
mov
mov
jbe
orb
xchg
out
mov
stos
rolb
push
loopne
cli
scas
cmp
xor
scas
ret
int3
push
mov
ret
stos
pop
add
mov
aas
push
add
enter
and
adc
sub
xor
mov
ret
fsubr
lret
mov
scas
lret
cmp
fldcw
inc
jns
pop
adc
lds
and
dec
cwtl
stos
inc
popf
xor
push
popf
mov
lods
mov
dec
inc
dec
push
xchg
fxch
das
or
fdivrl
insb
in
push
mov
inc
dec
sbb
pop
shlb
sub
sbb
sbb
rorb
fs
xchg
cmp
dec
push
xchg
adc
mov
test
xor
push
mov
push
cmc
push
dec
xchg
cmp
imul
int3
fbstp
in
push
jns
jp
dec
lret
push
pusha
addr16
sub
cmpsl
push
mov
or
push
push
jle
das
lods
mov
inc
das
lcall
mov
dec
sub
jecxz
jg
jg
inc
mov
inc
int
pop
push
xchg
shll
adc
rclb
aad
lea
mov
or
sbb
pushf
sub
aam
sbb
js
out
leave
nop
outsl
lods
add
and
mov
stos
cmpsb
sbb
inc
xor
fstps
add
jbe
jmp
jmp
add
fldl
bound
push
js
and
test
inc
mov
popf
sub
or
daa
jno
pushf
int3
test
jno
loopne
stc
std
mov
lret
js
std
jno
mov
lahf
sbb
mov
arpl
mov
sbb
repz
xor
pushf
stc
popa
pop
jle
cmpsl
sbb
imul
jo
and
shrb
push
sub
adc
dec
inc
mov
mov
cmpsb
cwtl
mov
cltd
test
cmp
ret
sbb
lcall
fcoms
pop
lcall
or
in
adc
ds
mov
jae
lret
xor
add
mov
lret
ret
pop
sub
pop
and
sbb
mov
dec
imulb
call
xor
lcall
jbe
test
mov
cmp
sbb
scas
xor
daa
clc
sbb
xor
std
xchg
rorb
js
add
jge
cmp
add
std
shl
pop
hlt
push
add
int3
mov
push
mov
loop
lock
jmp
and
mov
scas
lret
rclb
outsb
xlat
and
lds
xor
stos
sarb
in
lcall
in
fwait
sub
lea
aad
sbb
push
cmc
mov
std
idivl
ja
cs
lods
pop
push
jo
out
shl
mov
mov
pop
in
js
icebp
fnclex
push
add
and
cmp
rolb
jmp
scas
pop
xchg
rorb
xchg
mov
mov
loope
mov
lds
mov
xchg
iret
decl
lea
jmp
testl
jae
pushf
movsl
cwtl
push
cltd
pop
push
xchg
outsb
dec
lret
xchg
mov
add
cmp
lcall
fwait
leave
fdivs
jl
sub
cmp
incb
cltd
negb
inc
sbb
cmp
outsb
test
xor
in
add
xorl
mov
jne
fucomp
sbb
bound
cld
test
mov
xlat
imul
out
into
jg
dec
adc
jecxz
and
loopne
sbb
adc
daa
scas
outsl
lcall
mov
sub
jl
inc
sahf
mov
mov
sbb
xchg
shl
sti
inc
cwtl
insb
jnp
or
sti
loopne
iret
mov
sahf
ds
add
adc
icebp
xchg
adc
lret
stc
sub
sub
push
inc
adc
xor
fistpl
pop
scas
fnstenv
rorb
inc
icebp
jg
es
lahf
in
orb
movsl
xor
inc
ljmp
sbb
int
mov
cmp
adc
lcall
int
setns
jo
mov
movsb
test
mov
pop
jb
dec
pop
sarl
inc
jge
mov
add
ss
cmp
int3
mov
adc
daa
jecxz
mov
jno
scas
push
adc
jg
mov
in
inc
adc
imul
popf
jge
rcrb
test
pop
or
cmpl
mov
jbe
mov
das
lahf
sub
repnz
add
add
xchg
cltd
cmpsb
std
repnz
loope
or
jg
movl
js
lahf
and
repnz
jmp
xor
mov
mov
mov
mov
addr16
ret
jg
push
dec
add
and
mov
sbb
or
popf
adc
mov
les
xlat
lock
sbb
std
and
repz
in
xchg
or
sub
imul
pop
cwtl
sbb
sub
pushf
imull
xlat
jae
jbe
sbb
rclb
negl
mov
lret
mov
test
stos
fbld
outsl
mov
enter
push
mov
stc
xor
or
pop
xchg
add
sahf
mov
js
and
jno
mov
ss
scas
jnp
addb
mov
cld
rorb
cmpsl
fnstsw
aam
mov
adc
fsubr
aam
lds
cld
cmp
jecxz
je
adc
test
jno
mov
push
pop
cmpsl
pop
out
dec
and
aad
jne
mov
add
xor
fnstsw
enter
sbb
xor
dec
jge
jge
lock
in
rcl
mov
cmp
bnd
mov
add
insl
mov
pop
push
xchg
cli
adc
ja
push
fwait
cmp
das
mov
push
inc
test
and
addl
loop
stos
js
cmp
sub
fs
pusha
pusha
lcall
addr16
adc
out
push
cmp
pop
int3
test
or
test
mov
jecxz
out
sbbb
mov
add
mov
stc
push
cmove
mov
test
stc
ds
daa
jmp
fcomi
ror
shll
in
mov
mov
xchg
pop
jne
out
xchg
fdivl
cld
hlt
push
loope
sti
aad
adc
mov
push
out
push
xorb
divb
mov
mov
ja
ds
aad
les
addr16
js
adc
pop
cmp
ret
repz
push
in
pusha
cld
adc
out
enter
mov
sbb
xchg
jecxz
cwtl
mov
xchg
pop
sbb
or
icebp
and
mov
jmp
jg
xor
jge
jmp
dec
and
xchg
adc
shl
inc
sbb
mov
adc
pop
or
cmp
xor
xor
clc
mov
popa
mov
lock
pop
in
sbb
lret
cmp
std
shl
add
inc
stos
movsl
aad
mov
inc
pop
ret
pop
jge
xchg
ret
jae
fsub
mov
xchg
mov
ret
xor
pop
lods
xchg
xlat
arpl
sub
jns
xchg
cs
popf
inc
push
inc
add
daa
fwait
das
fldenv
outsb
out
jecxz
cmp
mov
test
xchg
push
inc
mov
popa
xor
pop
or
mov
aas
cld
mov
cmp
jmp
sarl
mov
fs
pushf
pop
push
shll
mov
cmpsl
mov
sbb
fdivrp
jmp
int3
mov
rcrl
and
ret
mov
out
lahf
cmpsl
jo
ret
dec
inc
mov
fnstenv
addr16
aad
shrb
fdivl
jo
ret
add
or
insl
fstpl
mov
inc
lcall
stos
add
mov
lds
lds
mov
shrb
fdivl
rcrb
je
jp
jg
mov
add
jnp
mov
mov
add
std
adc
xor
and
in
pop
fimull
sub
test
sub
mov
mov
lret
out
out
es
insb
mov
lcall
xor
sub
jmp
mov
popa
xchg
and
jl
cmp
int3
mov
mov
dec
sub
push
bound
sbb
mov
add
sti
test
stos
cld
cmp
fnstenv
add
es
popf
outsb
cmp
nop
mov
cli
xor
or
pop
daa
negb
stos
sahf
pop
icebp
add
insb
addr16
sar
or
adc
dec
push
lea
jbe
je
inc
imul
cld
pop
dec
lret
mov
jp
test
mov
cmp
mov
sarl
ja
les
push
push
xor
mov
mov
or
push
das
and
sbb
les
pop
dec
stc
mov
push
in
xor
bound
cmpsl
jecxz
daa
mov
es
xchg
ret
and
mov
mov
pusha
fs
stos
outsl
xchg
aaa
lods
shll
nop
fimuls
jns
or
or
add
inc
mov
rcll
dec
add
pop
es
and
fiaddl
dec
imul
test
movsb
jae
jnp
mov
je
adc
pop
adc
testl
icebp
dec
test
leave
xchg
test
fisubs
pop
fcompl
jbe
sbb
loopne
pop
fcompl
push
xchg
or
mov
or
jmp
mov
hlt
xorb
gs
aad
repnz
cmc
mov
jge
cmp
dec
xchg
pop
mov
add
add
inc
push
lods
popa
xor
stc
pop
xchg
mov
sub
sub
xchg
dec
cmp
int
sti
das
mov
sbb
pop
sbb
inc
cs
jl
ljmp
insl
das
xchg
loope
sbb
test
cmpsb
mov
leave
lods
lret
in
push
xor
clc
leave
loop
inc
and
mov
and
mov
adc
adc
add
add
mov
into
inc
arpl
in
inc
fwait
or
bound
out
mov
sbbl
movsb
mov
push
xchg
mov
mov
or
jle
int
fisttps
adcl
test
iret
inc
in
cmp
sub
adc
out
outsl
jl
jnp
imul
pop
data16
push
lea
xchg
sub
fidivs
cmpsb
push
popa
adc
pop
fwait
xor
pop
je
inc
ljmp
scas
aas
jl
inc
cmp
incb
mov
outsl
aaa
test
adc
jbe
mov
aaa
sub
mov
cmpsb
ret
shlb
std
addr16
sti
icebp
push
push
les
dec
fimull
lahf
push
inc
popa
mov
fs
add
xor
pop
inc
jl
dec
insb
mov
mov
and
or
out
inc
imul
in
movsl
xchg
in
gs
data16
adc
lods
xchg
bound
les
imul
int3
stos
push
mov
out
mov
mov
xchg
pop
push
mov
mov
xlat
aaa
gs
scas
shll
mov
test
call
je
lock
dec
arpl
loop
lret
jl
rcll
int
add
jne
js
iret
inc
and
std
mov
pop
xchg
inc
adc
stc
in
cmp
xchg
dec
out
mov
faddl
push
test
mov
fldcw
insl
enter
jge
adcb
mov
lods
push
loope
push
aam
subl
rclb
sub
add
popf
jnp
inc
add
cli
int3
jmp
jbe
push
inc
sub
xchg
cmp
ficoml
popf
jle
movsl
pop
pop
sbb
pusha
lcall
stos
xchg
sub
test
pop
shlb
adc
jecxz
pop
mov
dec
dec
xchg
aad
cmp
adc
cmpsl
inc
push
repnz
hlt
loopne
xor
test
test
mov
add
sbb
jbe
and
pop
out
sbb
sbb
or
lret
xor
mulb
dec
pop
xchg
pop
dec
test
or
push
xchg
push
push
xchg
lds
jne
jp
sub
popa
jp
and
jge
push
ljmp
movsb
jae
pop
mov
dec
push
dec
fistpll
sarl
fstpt
test
addr16
pushf
dec
xor
mov
xchg
stc
cli
cwtl
xchg
in
push
jb
addb
xor
es
imul
cmp
popa
cltd
add
hlt
cmpsb
aaa
mov
adc
repnz
add
es
lret
loop
nop
push
inc
insb
jbe
fcmovne
sarl
mov
int
xor
or
xor
in
aad
mov
stos
adc
das
pop
rcl
pop
xchg
cli
pushf
push
sbb
xor
dec
aad
mov
fs
mov
pop
in
lcall
and
pop
xchg
test
xor
pop
dec
hlt
xlat
addl
jne
sbb
sbb
lret
fs
xchg
mov
or
arpl
iret
ss
jp
aaa
sbb
dec
pop
push
ss
imul
jp
push
repz
out
ss
xor
add
add
mov
lret
cmc
mov
or
mov
test
sbb
cltd
cld
into
mov
out
jl
cltd
mov
mov
out
orb
scas
push
cmp
pop
adc
xor
xchg
in
adc
adc
add
cmpb
sbb
sarb
int
xchg
jnp
outsb
xchg
repz
push
jmp
cmpsl
push
cmp
mov
and
mov
imul
mov
jge
pushf
stos
cmpsl
pop
mov
insb
fidivs
xor
adc
out
cmp
sti
les
adc
mov
inc
xor
ja
pop
push
push
std
shl
fcmovu
lret
fstpt
rcrb
lods
push
cmpsl
mov
mov
sub
cmp
mov
push
shlb
inc
bound
lea
scas
insl
sbb
sub
or
xchg
in
rolb
sub
cli
pop
or
mov
inc
cmp
icebp
and
and
imul
mov
in
test
negb
mov
cli
pop
fadd
push
jbe
loop
dec
imul
cmc
mov
jns
pop
pop
jnp
mov
jecxz
cmp
xchg
insl
mov
test
hlt
and
imul
xchg
les
adc
js
fmuls
cmpsl
push
das
lahf
pop
test
imul
jecxz
adc
dec
pop
cmpsb
cmpl
inc
push
jne
xor
cmp
sbb
aas
std
clc
shrl
inc
jl
mov
leave
mov
mov
stos
push
jo
mov
mov
js
dec
rolb
enter
mov
js
fwait
sub
icebp
int3
cmc
lahf
adc
fdivl
arpl
or
and
dec
jbe
mov
ret
mov
push
xchg
push
xor
xchg
or
pop
mov
add
repz
pop
push
cmp
mov
pop
dec
or
fwait
sbb
insl
pop
lods
inc
mov
jb
mov
sti
dec
mov
js
sub
stos
in
jg
lahf
int3
jl
stos
push
pop
test
pop
in
jecxz
and
ds
clc
in
xchg
and
sbb
pushf
cwtl
push
gs
jne
jmp
mov
andl
test
daa
inc
int3
sbb
out
cli
pop
pop
popf
jb
pushf
jmp
mov
ja
mov
lret
imul
mull
arpl
and
jecxz
leave
push
and
dec
add
mov
jbe
jnp
push
jb
dec
cli
mov
mov
xor
and
mov
jle
mov
sti
loope
ja
pop
fdivs
jns
mov
pop
inc
out
loopne
shl
mov
fiadds
dec
iret
loope
or
arpl
inc
adc
dec
dec
cmp
arpl
icebp
out
ss
mov
sbb
jno
sub
cmp
mov
mov
hlt
dec
movsb
adc
xchg
lret
scas
jns
xchg
mov
push
data16
out
sbb
inc
outsb
in
orps
jp
push
and
xchg
into
test
shll
pop
dec
or
outsl
xchg
aas
pop
ror
sbb
loope
lds
notb
dec
mov
mov
jo
pop
adc
pop
cwtl
test
mov
test
cwtl
jns
mov
xchg
jbe
pop
fsub
push
sbb
add
jbe
and
int
or
fsubr
add
ds
pop
sahf
mov
dec
insb
or
inc
adc
mov
out
push
cmp
iret
push
jp
int
mov
rcll
cmp
sub
out
aad
std
mov
mov
and
jb
idivb
es
dec
movsl
dec
movsb
repz
pcmpgtb
pop
mov
dec
add
inc
cwtl
mov
dec
ja
cmpsl
lea
data16
imul
push
xchg
jbe
ljmp
mov
push
shlb
loop
popa
cmp
int
in
lds
loope
popa
xchg
ljmp
andb
ss
test
adc
aam
adc
xor
mov
mov
xchg
sub
cmp
sbb
sti
fldt
push
popa
js
or
data16
lods
imul
into
or
insl
leave
mov
clc
out
and
jmp
imul
hlt
pop
mov
outsb
in
fcom
pop
int3
jecxz
sub
or
cmp
push
fistps
push
sub
inc
or
in
mov
inc
push
imul
iret
clc
shrb
je
pop
dec
jno
pop
xchg
inc
dec
out
nop
mov
in
outsb
mov
mov
xchg
jno
mov
or
pushf
loope
inc
xor
mov
push
push
pop
pop
popa
ss
stos
sub
mov
pop
sub
sbb
and
jecxz
insb
and
sub
or
scas
sbb
jbe
xchg
mov
sbb
fdiv
test
loopne
inc
bound
mov
push
imul
jno
jg
mov
in
aad
jecxz
push
jl
test
in
aad
pop
mov
and
jl
sub
push
xchg
lods
outsl
dec
ficomps
adc
add
jnp
sub
sahf
loopne
xchg
sub
xorl
or
cmpb
sbb
and
push
popf
and
adc
add
je
jmp
add
dec
out
fucom
xor
mov
jecxz
aas
in
cmpsl
ja
movsl
insl
lea
test
inc
fcomi
xor
addr16
cltd
lods
sbb
out
insb
jns
and
mov
push
mov
in
out
fs
insl
bound
enter
insl
shl
jo
leave
add
rolb
fadds
scas
inc
popa
shll
pop
xor
ja
jbe
jno
ds
lock
repnz
mov
push
daa
sbb
enter
pop
mov
test
push
insb
lea
jb
xchg
xor
inc
or
mov
add
daa
lods
xor
int
adc
mov
out
push
cmp
push
je
sub
mov
js
add
loopne
mov
or
fistpll
aam
mov
add
ljmp
dec
int3
shlb
int
out
ds
sub
pop
dec
roll
mov
out
mov
xor
addb
mov
add
lahf
aaa
js
sub
and
mov
fwait
and
in
fsubr
inc
add
jb
cs
adc
xchg
stos
loop,pn
dec
mov
or
arpl
repz
loope
pop
or
sub
imul
fs
stos
fbld
xchg
jl
pop
aas
push
notb
cli
adcl
insl
ret
test
imul
adc
aas
mov
loopne
mov
sub
mov
push
mov
mov
divps
mov
int
push
sub
ficomps
mov
fidivrs
mov
adc
fildll
loope
xchg
mov
aam
fs
aaa
lods
out
jge
out
pop
icebp
lret
cmp
sbb
subb
push
hlt
dec
leave
in
mov
loop
mov
push
fstpl
mov
shll
cmp
sub
xor
pop
xchg
dec
in
into
popf
cmpsb
push
mov
jg
ljmp
add
call
xor
mov
ror
int3
inc
mov
jae
dec
hlt
test
shl
cmpb
divl
xchg
mov
ss
push
mov
xchg
lret
dec
cmp
push
lret
movl
sub
jno
int3
mov
pop
pop
pop
fnsave
test
outsl
and
nop
imul
push
ja
xor
mov
sub
sbb
das
xor
lds
and
and
cld
into
mov
repnz
int
mov
jle
jecxz
shr
xchg
repz
hlt
popf
outsb
lahf
sbb
jge
lods
xor
cmpsb
fdivrs
sbb
cmp
push
pop
sbb
int3
ja
dec
pop
js
mov
aas
lahf
jmp
or
sti
inc
cwtl
inc
in
loop
into
xor
sub
cmp
add
and
push
aad
xchg
dec
mov
or
mov
lahf
sti
mov
ss
dec
pop
in
addr16
out
push
push
push
add
movb
fisttpll
xor
inc
fidivrl
jo
lea
icebp
or
push
xor
or
mov
lret
int3
clc
outsl
jle
data16
flds
mov
pop
divl
aad
es
outsl
negl
jmp
xchg
adc
enter
mov
cmpsb
ljmp
pop
outsb
pop
adc
loop
movsb
xor
lock
repz
mov
popa
or
push
repnz
push
jg
loope
test
adc
dec
sub
mov
xchg
push
lock
cmp
or
jns
sub
add
popa
pop
out
decb
add
rorb
fwait
jne
xlat
pop
test
sub
imul
mov
and
pop
fs
or
sbb
pop
arpl
jmp
sbb
add
in
xchg
sbb
rcr
out
lods
lods
mov
and
outsb
mov
shll
es
sbb
xor
loop
movsb
dec
das
sub
xchg
mov
cli
lock
pop
pop
int
jp
outsb
jno
sub
notb
iret
inc
fsubl
out
movsb
push
jae
sub
dec
sub
inc
mov
sbb
imul
lret
mov
adc
test
add
mov
jae
xor
push
int
in
xor
ret
sbb
lods
fdivs
sbb
mov
call
icebp
sahf
mov
sub
dec
subl
sub
call
les
mov
cmpsb
rcl
inc
lea
ret
in
xchg
jmp
mov
pop
mov
adc
sahf
push
movsl
push
mov
adc
add
jne
dec
and
and
jno
arpl
fcmovnu
cmp
cmpsl
mov
mov
add
sbb
std
xor
cmp
fcompl
push
dec
loop
or
mulb
test
leave
loopne
xchg
push
pop
ret
jg
aas
and
out
inc
push
xchg
rorb
dec
les
outsb
add
mov
jns
stos
xchg
fs
enter
pop
and
fdivrs
hlt
std
pop
mov
inc
lock
nop
xchg
cmpsb
imul
cmp
add
mov
js
xchg
push
rol
xlat
mov
lods
in
and
adc
xchg
iret
cld
std
arpl
add
push
xor
imul
enter
sbb
stos
cmp
ja
sub
mov
push
add
mov
cmpsl
stos
fstpl
or
and
jmp
js
cwtl
jle
xchg
xchg
mov
push
ror
mov
adc
xchg
mov
call
lock
fstpt
test
js
xchg
push
jb
fsubrp
push
mov
cli
sub
pop
dec
dec
jae
gs
cmp
shrl
xor
stc
mov
adc
lock
pop
push
add
mov
loopne
movsb
es
add
mov
iret
loopne
cli
jae
or
fimuls
lds
movsb
stos
mov
fsubl
icebp
in
sbb
jmp
push
push
mov
mov
push
je
sub
or
xchg
test
jl
xor
popa
pop
test
push
jmp
ds
mov
sti
mov
rorl
push
push
add
popf
loop
xor
hlt
outsb
aas
sub
test
lock
push
xchg
mov
nop
or
ret
xor
mov
push
stos
imul
cmp
mov
push
into
rolb
test
into
int
dec
or
inc
mov
xchg
inc
pop
sub
adcl
sub
push
push
in
push
mov
inc
fists
jge
pop
pop
and
sub
push
js
pop
js
xchg
decl
sbb
add
mov
add
rolb
mov
lahf
cli
xchg
loop
daa
imul
jno
pusha
jb
aam
dec
popa
mov
pop
xchg
mov
repz
mov
xchg
push
insl
jecxz
negb
jl
into
lods
fnstenv
adc
hlt
fildll
mov
sahf
add
and
loope
cmp
pop
mov
or
mov
xchg
stos
lock
ljmp
cmp
inc
push
jnp
sub
mov
xor
jbe
add
mov
jmp
sar
jmp
mov
pop
scas
loopne
lret
rcll
das
or
call
pop
std
pushf
addr16
cli
loope
xchg
inc
xor
mov
mov
jb
test
aaa
js
cmp
hlt
in
mov
xor
add
sti
dec
xor
push
insl
es
sbb
mov
sub
bound
testl
sbb
add
cmp
fiaddl
rclb
inc
cmp
iret
repnz
out
in
mov
jge
imul
add
sbb
mov
es
xchg
mov
dec
add
or
sbb
ljmp
jp
push
pop
insb
push
shll
loope
sub
popa
or
xchg
mov
loop
add
outsb
pushf
repz
out
sub
mov
sbb
xchg
jo
mov
pop
nop
and
jmp
pop
and
in
lahf
sbb
lods
xor
arpl
insb
movsb
test
ds
sub
xlat
lret
xor
jo
pop
pop
mov
mov
push
push
ss
cmpsl
sbb
mov
popf
xchg
mov
out
mov
mov
and
xchg
dec
jbe
stos
sbb
ret
cli
pop
iret
dec
mov
mov
cltd
test
xor
ret
mov
jbe
sub
jno
mov
jo
int3
push
add
jno
stos
mov
jno
mov
jns
testl
test
test
loop
mov
es
or
repnz
sub
sti
loope
iret
sbb
dec
mov
rcl
adc
lock
push
in
ljmp
push
sub
mov
pop
inc
fstps
cmp
xchg
aam
jbe
fsubrs
ds
jge
jnp
cs
push
leave
lret
xchg
mov
push
push
dec
sub
mov
jno
sub
sbb
mov
in
insl
cmp
cmp
pop
in
sbb
or
mov
or
push
stos
and
ljmp
cmpsb
lods
sbb
mov
jle
push
pop
or
sub
jmp
xchg
ds
lcall
sbb
into
and
sti
xor
jne
pop
fiadds
cmpsb
xchg
lock
mov
repnz
fwait
lods
sti
push
cwtl
inc
pop
popf
rolb
inc
inc
in
xorb
movsl
flds
pop
xchg
neg
sbb
in
xor
and
push
ret
dec
sahf
pop
push
popl
test
or
fisubrl
dec
mov
and
cmp
mov
pop
mov
inc
fcompp
jp
loopne
push
jo
inc
cmp
fxch
loopne
push
shrl
mov
es
call
adc
dec
lods
lcall
lds
test
into
lea
outsb
ja
imul
bound
or
inc
xor
jle
nop
shll
stos
hlt
addr16
ds
and
push
jae
inc
xchg
out
xor
jno
mov
sbb
dec
pop
jb
dec
les
mov
mov
test
cs
add
mov
cltd
icebp
popf
hlt
push
aas
ret
mov
fildll
cltd
sar
or
jle
fwait
arpl
xchg
shrb
jl
repnz
sbb
fidivs
filds
ja
dec
sbb
or
lcall
adc
xorb
lock
jp
push
enter
xchg
add
sub
cli
sub
add
push
ss
das
test
pop
dec
and
xor
and
xchg
rolb
push
jl
add
aaa
push
adc
sbb
lret
cmc
int3
add
push
cmp
cmp
enter
subb
cmc
jae
rorl
stos
cmp
jae
lahf
into
lret
adc
fldl
fsubrp
adc
mov
mov
out
jae
add
sbb
dec
ja
adc
push
pop
jns
cli
aad
dec
out
arpl
push
dec
mov
dec
push
imul
lret
das
rolb
daa
push
js
fidivl
std
scas
pop
push
adc
fnstcw
push
inc
test
inc
add
mov
insb
sbb
pop
jo
jnp
sbb
cli
mov
in
js
loop
xor
pop
add
pop
repnz
fwait
daa
ljmp
das
sbb
scas
inc
cmc
outsl
and
cmp
xchg
negb
sbb
adc
adcl
inc
push
pop
sbb
push
mov
sub
mov
icebp
xchg
je
sub
in
sub
dec
pop
pop
dec
push
pop
pop
inc
dec
ss
lcall
js
adc
xor
call
rcrl
push
and
js
sub
hlt
and
jle
outsl
mov
xor
push
mov
sub
je
pop
jl
mov
xor
in
mov
dec
jno
and
sub
in
pop
mov
fildll
push
int3
aaa
data16
and
pusha
push
xor
enter
ljmp
mov
fbstp
adc
cwtl
into
xor
nop
int
cltd
push
xor
or
jns
push
sbbb
mov
push
scas
in
testl
mov
in
int
push
pop
dec
or
stos
push
arpl
xchg
sbb
sarl
push
mov
mov
adc
loop
int3
fistpl
pop
push
popf
enter
in
jg
xlat
in
in
cs
xchg
inc
jg
lds
scas
sbb
and
std
jge
sbbl
jb
lcall
mov
xchg
in
js
stc
or
add
sub
xchg
fildl
cmp
test
mov
push
sub
out
or
pop
int
out
lds
xchg
jle
add
arpl
xchg
mov
lahf
mov
jae
les
or
in
sub
mov
andl
in
lods
cld
and
mov
cmp
shl
insl
call
stos
mov
mov
jbe
movsl
repz
xchg
insl
push
jge
addr16
pop
ds
ljmp
pop
xchg
sar
push
mov
jecxz
fiaddl
pusha
sub
pop
xor
neg
mov
stos
xlat
pop
div
sbb
les
test
repnz
push
mov
lret
out
ret
mov
ds
xor
push
bound
iret
clc
insl
enter
sbb
iret
das
test
and
and
arpl
inc
sub
mov
loope
adc
jo
ss
aas
adc
ret
and
jno
repz
adc
mov
fmuls
fimuls
cmp
jbe
or
jne
mov
mov
pusha
popf
lods
and
test
sub
dec
jmp
or
out
cs
push
out
xlat
in
shll
es
mov
dec
xor
pop
jl
add
xor
xchg
lds
adc
in
idiv
and
cld
add
push
das
adc
insb
out
inc
imul
test
inc
stc
adc
pop
adc
pop
cmc
mov
xchg
lds
dec
arpl
icebp
mov
popf
cmp
mov
push
fcos
fsubrp
fiadds
push
insl
mov
xchg
xor
lock
popa
xor
pop
arpl
clc
sub
test
jg
inc
rol
xchg
ja
mov
ffree
pop
cltd
jp
inc
xor
cmpsb
mov
push
inc
lds
pushf
mov
sub
insb
scas
lea
repz
out
mov
hlt
cwtl
jp
inc
jmp
dec
jg
adc
je
loopne
cmpb
cmp
pusha
popf
jbe
push
xchg
in
dec
add
add
xor
punpcklbw
xchg
mov
pushf
rcl
rolb
mov
push
in
sub
fwait
pop
mov
xchg
bound
das
pop
fisubrs
iret
fdiv
xor
mov
ljmp
mov
imul
cmp
cmp
mov
xchg
jo
add
lahf
mov
lds
mov
loope
add
cmp
sarb
jmp
loope
test
aam
jnp
loop
test
push
sub
ret
sbb
and
jp
fbstp
or
lea
jmp
fadds
jne
jmp
dec
or
mov
cwtl
fildll
in
mov
or
and
sbb
jns
and
or
outsl
push
loop
pop
fists
fiaddl
cs
pop
adc
pusha
into
sarb
ret
scas
push
pop
jmp
inc
cmp
les
and
mov
xchg
mov
sbb
out
add
cmp
sub
mov
mov
xchg
push
hlt
cmp
mov
arpl
fadds
dec
gs
mov
jge
push
fcoml
sub
out
dec
jmp
ja
cli
xchg
clts
mov
xchg
push
xchg
mov
mov
push
cmp
rcr
xor
gs
repz
loopne
and
cltd
jno
ss
or
mov
dec
imul
roll
repnz
add
push
mov
dec
cltd
inc
mov
add
add
and
and
andl
mov
cmp
mov
in
das
sbb
frstor
jns
mov
xor
mov
fdivrl
frstor
push
rcrl
andb
loopne
cmp
xchg
mov
and
mov
loop
es
push
or
push
add
xor
out
push
pusha
cmpsl
sub
dec
aaa
aas
dec
push
and
cwtl
pop
jp
sbb
mov
adc
adc
mov
test
test
je
xor
mov
and
ret
es
loopne
dec
mov
pop
pushf
cmpsl
adcb
iret
push
sub
aam
pop
cmp
aas
xlat
mov
xlat
pop
enter
adc
int3
or
mov
xchg
lock
adc
adc
sub
add
sbb
push
push
ss
jbe
test
out
loopne
rcl
dec
dec
xor
nop
rorb
aam
les
and
push
int
dec
or
or
xchg
xchg
jmp
hlt
cmp
pop
or
cmc
test
movsl
out
sbb
sbb
lcall
mov
aad
out
gs
test
jp
xor
aaa
jle
lret
dec
std
jecxz
pop
movsb
and
lock
aad
outsb
cwtl
lods
inc
xchg
pop
in
repnz
mov
iret
into
aas
hlt
mov
sbb
push
fxch
cs
fidivl
nop
xchg
rorl
mov
jle
push
clc
mov
or
dec
ljmp
sti
add
mov
pusha
sub
rcrb
cmp
jg
sti
mov
xor
xchg
mov
stc
lock
pop
jle
inc
jbe
and
rorb
and
mov
ret
inc
push
mov
cmp
sub
pop
jp
mov
dec
inc
lcall
loopne
jmp
sub
xorl
sub
inc
mov
lret
sbb
shl
or
movsb
jmp
add
enter
sahf
leave
insb
sub
popf
sub
cwtl
rdtsc
arpl
and
dec
out
and
push
scas
sbb
popl
icebp
jno
sub
mov
stos
int3
jle
mov
subl
xchg
pushf
cld
jbe
test
pop
pop
in
and
jb
out
mov
cmp
ss
sub
jo
and
xor
flds
pop
cmp
pusha
mov
js
push
dec
xchg
and
sti
iret
jge
add
or
pop
lods
dec
xchg
jecxz
sbb
mov
stos
sysexit
xlat
add
and
add
xchg
pop
les
or
enter
jne
shlb
imul
push
and
push
sub
jle
jmp
xchg
xchg
push
xor
cwtl
dec
inc
cmp
add
js
loopne
inc
jnp
lret
lea
test
mov
int3
adc
xchg
repnz
sbb
fnstsw
in
sahf
in
xchg
xlat
call
cmp
xor
jns
pop
pushl
hlt
jbe
xor
fsts
loop
xchg
add
add
lds
nop
cmpsb
hlt
adc
mov
push
dec
adc
push
cld
lds
lcall
lods
jmp
mov
loop
lods
imul
add
inc
sub
fisubl
icebp
repnz
sbbb
sbb
and
stos
push
cmp
inc
nop
int
gs
add
loop
push
jl
jecxz
jmp
push
push
xor
test
sbb
mov
call
push
pop
loope
enter
adc
cmpsb
adc
mov
aad
mov
insl
mov
xchg
sub
adc
dec
cmp
out
mov
or
mov
adc
xchg
pusha
xchg
mov
sbb
xor
imul
repnz
lret
inc
lea
loope
loope
jg
mov
js
adc
mov
lret
lcall
xor
push
ss
pop
mov
loopne
adcb
loop
cltd
nop
xor
fs
out
rclb
pushf
lcall
and
cmp
cmpsl
cmp
bound
jno
or
cmp
adc
cmp
mov
out
xor
push
sbb
nop
sahf
and
sbb
mov
sub
add
cmc
pop
push
lcall
cmp
orb
adc
gs
jns
pop
insl
jb
es
add
dec
pop
out
imul
je
mov
inc
shlb
mov
inc
inc
outsl
lds
mov
xor
stos
sub
dec
notb
adc
sbb
jbe
xchg
test
das
sub
inc
jns
pop
mov
or
std
fisubs
mov
mov
scas
push
sbb
into
loope
and
dec
loopne
test
mov
fs
pop
pop
fisubrs
lcall
xchg
lahf
inc
in
pop
sub
es
into
shrl
or
xlat
inc
mov
push
adc
stos
cli
loopne
push
cld
ljmp
call
outsb
mov
fcomi
test
add
sub
add
jae
xor
mov
inc
and
mov
inc
hlt
test
mov
in
lock
popf
cmpsl
cltd
loopne
test
sub
sbb
and
shrb
inc
xor
popa
xchg
in
stos
jle
stos
lods
std
jmp
adc
cmpsb
rorl
mov
pop
xlat
push
js
fistps
shll
sub
add
mov
lret
aaa
loope
jg
xchg
jne
mov
cmp
mov
shll
push
dec
cwtl
sub
sub
dec
lcall
les
inc
mov
push
out
shr
pop
push
gs
push
sti
xchg
mov
pushf
loopne
add
mov
repnz
outsl
or
lret
sbb
sbb
sbb
xchg
popf
aas
int3
dec
scas
sbb
inc
test
push
cmc
test
xchg
xchg
sbb
jae
js
ljmp
sbb
into
xchg
push
lods
sbb
fiaddl
fisttps
nop
lods
enter
js
inc
faddl
cmp
xchg
mov
stos
add
fldl
xchg
add
imul
cmpl
fidivrl
cli
dec
dec
pop
inc
pop
mov
and
xchg
ret
shlb
outsb
out
fs
std
fdivr
sbbl
adc
in
sub
jnp
movsb
pop
out
and
mov
push
ja
push
and
inc
xor
jp
aam
add
cmp
aas
pop
lea
notb
pop
ret
inc
int
stc
cli
push
fdivrs
and
xchg
js
dec
nop
daa
loopne
sbb
mov
and
je
dec
mov
cwtl
aad
ret
mov
inc
jmp
jno
sbbb
mov
lods
or
jbe
xlat
aas
bnd
mulb
cli
testl
dec
push
xor
mov
mov
lret
push
cmp
fucomp
addr16
mov
adc
stos
push
xchg
aam
mov
test
push
adc
xchg
jbe
cmc
ss
sbb
cmp
adc
add
and
mov
out
and
inc
ficompl
push
dec
or
aas
enter
cwtl
mov
fwait
sbb
ret
xchg
push
les
sbb
push
xor
cmp
pop
lret
xor
in
xor
orb
xchg
out
cmp
enter
arpl
stos
outsl
fists
pusha
push
sub
mov
mov
scas
cwtl
mov
out
mov
pop
xchg
jecxz
pop
mov
xorl
nop
es
jmp
pop
inc
fisttpl
pushf
xchg
leave
cld
pushf
and
dec
sub
sub
add
js
push
adc
or
mov
dec
data16
xchg
das
xchg
cmp
and
clc
adc
xor
mov
or
ret
out
mov
rcrl
and
inc
mov
mov
mov
rcr
ljmp
jp
ficomps
nop
repnz
mov
pop
and
jo
jmp
lock
les
aad
mov
pop
pushf
nop
cwtl
or
cmp
mov
sbbb
subb
inc
lret
xor
mov
sahf
mov
push
cwtl
enter
movsl
sub
mov
pusha
xchg
rcrb
inc
or
cmp
jl
gs
mov
jg
push
in
mov
aaa
xchg
nop
sub
cmc
aad
push
fbstp
into
dec
repnz
dec
xchg
fmul
mov
jae
rclb
or
fcoms
ret
ja
and
and
and
xlat
xor
jle
shr
add
out
pop
sub
hlt
lahf
and
push
push
sub
jp
aaa
fxch
push
sub
or
mov
jge
popf
pop
cmp
adc
add
pushf
sbb
mov
sub
dec
in
pop
inc
popa
fimull
and
adc
mov
int3
in
sub
push
mov
dec
push
lock
pop
xchg
mov
inc
sbb
mov
in
sub
mov
add
xchg
ret
adc
and
imul
mov
inc
iret
ret
test
add
test
xor
movsl
add
jp
pushf
aaa
push
mov
aas
pop
aaa
insb
adc
jmp
sbb
bound
lock
mov
sbb
pop
les
jecxz
mov
and
std
or
mov
jge
dec
out
jl
cli
xor
outsb
adc
and
daa
mov
sub
decl
inc
push
add
stos
movsl
test
out
adc
fwait
addl
xchg
imul
into
mov
out
and
les
add
sub
add
sub
mov
arpl
in
sbb
jnp
cli
jb
inc
movsl
sahf
fldt
mov
pushf
jp
test
adc
into
fwait
xchg
imul
inc
cmpl
sub
loop
push
mov
add
and
inc
inc
cmc
and
les
mov
ljmp
pop
inc
adc
push
mov
or
into
fcoml
outsb
and
mov
mov
jnp
insb
xor
xlat
aaa
ja
xchg
fstpt
in
mov
pushf
add
or
js
fcoml
rcll
dec
mov
push
sub
dec
jecxz
cmpsl
bound
dec
jo
and
imul
push
adc
out
lret
xchg
jns
cmpsb
and
push
insl
push
jne
je
scas
dec
mov
jb
js
cmc
mov
inc
push
stos
insl
push
sahf
rorl
repz
xchg
mov
mov
and
cmp
popa
lds
mov
arpl
jl
sub
cmp
out
call
or
jg
test
xor
out
repz
sub
cmp
pop
cmpsb
ljmp
pop
push
xor
lcall
pop
and
push
add
lcall
pop
test
fildl
aas
les
add
ret
cmpsl
js
adc
xor
es
add
sti
mov
dec
jmp
jmp
mov
outsb
sub
sbb
and
lcall
daa
in
push
fidivrs
push
ja
mov
adc
push
cmpsb
adc
dec
add
lods
adc
mov
dec
xor
roll
fists
push
pop
addr16
sahf
add
sub
sub
stc
push
scas
sub
jae
pop
data16
aas
xchg
and
and
xchg
ss
sub
out
sub
jno
loope
push
push
dec
test
xor
in
pusha
jae
mov
cmp
adc
xchg
lcall
lahf
cld
inc
sar
jno
sahf
arpl
xchg
xor
inc
push
push
adc
mov
pop
jg
clc
mov
sub
push
inc
push
jb
icebp
adc
push
and
jecxz
push
inc
mov
sub
adc
jno
push
xchg
jl
xor
mov
repnz
mov
adc
out
aam
cmp
xchg
aas
aam
xchg
loopne
adc
mov
xchg
test
mov
fldenv
scas
imul
sti
js
imul
fbld
cltd
inc
bnd
jae
loope
loopne
jnp
adc
cmc
push
xchg
shlb
and
int3
jns
je
pop
push
popa
and
fstpl
pavgb
adc
xchg
cmp
pop
cli
cmp
sub
fcomp
in
dec
jne
adc
sbb
lock
orb
sbb
sbb
mov
stc
xor
mov
dec
push
cmc
shrl
push
rclb
adc
jae
xor
lods
sub
es
fidivrs
push
pop
jnp
cmp
mov
shlb
gs
mov
andb
inc
pop
shlb
ret
pop
test
test
adc
shr
stc
xchg
loop
adc
xor
pop
dec
jnp
mov
jmp
mov
mov
jnp
cmp
mov
fucomip
push
je
cmpsb
repz
data16
pop
mov
mov
out
imul
push
sub
push
push
sahf
addps
sbb
orl
ds
mov
in
imull
pop
or
xchg
mov
mov
push
popf
mull
inc
mov
mov
dec
fsubrl
mov
dec
add
das
fcoml
popf
testb
scas
lds
js
es
or
jb
push
adc
and
les
ficoms
mov
les
hlt
xchg
pop
ret
pop
lcall
sysenter
push
sub
aas
repz
or
mov
inc
push
pop
adc
and
push
fildl
dec
cmpsb
mov
repz
and
lds
push
mov
gs
cs
lods
xchg
jne
arpl
cmc
or
fstpt
fcmovnb
dec
in
arpl
and
test
and
sar
and
mov
negl
mov
les
aas
or
in
ds
sti
jns
test
push
test
lret
mov
and
aaa
push
repz
mov
int
fldt
cmp
jo
add
popf
jns
aam
popf
pop
push
xchg
int3
rcll
cmpsl
dec
inc
lods
push
shlb
rcrl
pop
cmp
mov
jnp
or
bound
pop
call
xor
inc
mov
lds
add
cmp
pop
mov
cltd
inc
push
imul
bnd
and
ret
ja
mov
xor
loope
xchg
cld
mov
or
rcrb
jmp
adc
sub
sub
stos
ljmp
add
inc
jecxz
push
dec
loopew
or
js
pushf
in
mov
mov
stos
loop
movsb
adc
jnp
cli
mov
jae
pop
jmp
add
movsb
insb
fcompl
sti
adc
mov
push
mov
movsl
rcll
or
xchg
movl
lret
ja
jge
outsb
test
or
mov
mov
xchg
push
mov
xchg
fistpl
out
movsb
mov
lock
clc
es
aas
icebp
sbb
add
xor
xchg
mov
jmp
pop
xchg
call
ljmp
in
xchg
loope
call
jnp
xor
xor
addr16
fs
mov
mov
mov
test
roll
pop
rcrl
icebp
lods
loope
fwait
imul
call
mov
aas
orl
or
add
in
movsl
mov
in
je
shll
ljmp
jo
lahf
shl
inc
push
cmpsb
adc
sahf
mov
push
jl
cmpsl
imul
in
stos
adc
pop
push
mov
stc
push
lea
inc
and
pop
mov
sub
fdivs
jecxz
xor
jns
std
mov
into
pop
ja
mov
jge
lods
dec
dec
cmp
out
ret
xor
roll
cmc
shrl
pop
cli
enter
lret
scas
xchg
xlat
adc
mov
std
sahf
mov
mov
xor
jne
insl
pop
or
adc
addb
dec
test
or
adcb
jb
cs
int
jecxz
pop
pop
out
pop
pop
lret
fistl
inc
orl
and
pop
mov
mov
mov
add
mov
adc
lock
aas
hlt
xor
test
and
dec
dec
xchg
outsb
fisttpl
push
call
pushf
das
das
xchg
getsec
and
pop
les
hlt
lock
in
jae
test
movsb
add
mov
pop
sbb
fisttpll
cmpsl
xchg
es
mov
xchg
mov
pop
mov
push
test
jno
or
cmp
jne
pop
and
pop
sub
sub
push
jns
into
les
sub
inc
adc
ss
sbbb
loope
xchg
add
out
inc
and
leave
out
imul
mov
movsb
aas
in
movsb
xlat
dec
dec
jnp
cmpsl
sub
add
push
lods
jecxz
test
fwait
xor
int3
ret
add
in
push
pop
cltd
gs
addr16
xchg
adc
aam
imul
movsb
inc
pop
fsubl
add
lret
arpl
push
jmp
or
incl
add
in
aam
test
icebp
enter
inc
adc
sahf
pop
jecxz
dec
lahf
jl
push
shll
add
and
cmp
xchg
jmp
push
nop
addr16
sbb
mov
pop
pop
rolb
in
test
enter
fidivrs
jecxz
mov
rcrb
insb
stos
std
xchg
test
or
test
int
fistps
mov
inc
xor
and
mov
shl
and
mov
scas
stos
into
fs
cmc
dec
movsl
mov
jb
stos
xchg
out
add
movb
xchg
sub
mov
pop
jle
mov
xor
pop
and
lret
sbb
sti
sbb
shr
xchg
loope
sub
xchg
loopne
adc
jp
sbb
jno
es
movsl
and
dec
pop
and
or
dec
mov
test
int3
call
jle
cmp
mov
mulb
lods
pop
push
dec
imul
sub
int
stos
in
push
scas
mov
jle
adc
mov
xchg
stos
mulb
dec
jnp
push
sbb
mov
adc
out
daa
jge
bound
and
pop
addr16
mov
insl
cltd
enter
lods
ffreep
or
out
mov
stc
iret
mov
sarb
test
jne
popa
and
rcll
clc
cs
dec
mov
push
adc
pop
inc
sbb
pop
sub
mov
xchg
mov
mov
aaa
sub
out
fstpt
adc
mov
or
std
mov
pop
xor
mov
scas
ficoms
icebp
mov
mov
add
jns
icebp
dec
push
mov
jns
and
mov
xor
insl
xor
stos
inc
gs
loop
add
outsl
jl
adc
sbb
push
xchg
and
inc
or
fcomi
or
hlt
sub
ficompl
loope
pusha
adc
out
mov
outsl
int
rolb
fistpl
xchg
add
insl
mov
jo
ljmp
insb
xchg
sub
jl
cwtl
pop
mov
cwtl
cmp
arpl
xlat
sbb
adc
jp
xchg
negb
sarb
push
inc
cmp
out
push
adc
or
jo
mov
xchg
push
sub
cmp
rorl
in
in
leave
bound
aam
push
lods
mov
hlt
std
mov
xchg
mov
addr16
test
and
int
lcall
sbb
rorb
and
fisubs
movsb
outsb
das
loop
rcll
inc
cmpsb
mov
scas
daa
xor
jl
test
cmc
add
sub
jg
movsb
adc
roll
aad
insl
mov
pop
pop
aas
xchg
xchg
inc
mov
in
jae
sbb
mov
pop
decb
jg
cmp
xor
add
mov
pop
dec
inc
mov
call
xchg
inc
sarl
cwtl
xchg
lret
add
pop
xchg
push
out
pushf
fbld
imul
mov
dec
std
popa
sub
iret
sbb
xlat
into
pop
call
inc
fcoms
sub
mov
addl
int
add
stc
add
je
cmp
addl
adc
inc
cmc
and
pop
xor
pop
cmpsl
je
inc
xchg
and
push
mov
push
mov
insb
push
mov
jecxz,pt
cmp
mov
jnp
clc
push
adc
mov
or
xchg
mov
sub
outsb
test
icebp
jo
push
xor
fnsave
push
sub
pop
sub
xchg
dec
xchg
add
in
es
ss
or
lds
dec
lds
mov
push
jl
rclb
shll
lods
xor
repz
lret
mov
push
lods
imul
and
ljmp
push
movsl
aas
inc
cld
cmpb
insb
out
stc
sbb
mov
mov
or
mov
push
ds
popf
xor
xor
jae
cmp
pop
outsl
sbb
scas
mov
mov
std
daa
mov
sbb
xor
inc
inc
xchg
and
sbb
daa
mov
iret
inc
jo
shlb
lods
in
push
stc
aaa
push
ret
mov
push
out
movsl
call
sbb
dec
inc
xchg
push
sbb
jmp
aam
cmpb
addl
mov
sub
or
adc
and
mov
mov
and
mov
popf
dec
push
cmpsb
jbe
pop
pop
lods
cmpsl
mov
ret
aam
je
idivl
jg
out
je
mov
add
pop
inc
pusha
dec
fidivrs
mov
mov
out
das
dec
arpl
xor
pop
jns
popf
xchg
mov
rclb
popf
test
xor
cmp
and
pop
push
outsl
cmc
rol
in
and
xorb
out
xchg
add
lret
popf
mov
addr16
sub
push
add
fsubrs
and
daa
jl
dec
fsubp
lods
outsb
xchg
mov
cmpsb
mov
pop
push
push
insb
addr16
xor
sbb
inc
inc
mov
outsl
add
loopne
and
xchg
inc
or
lcall
out
loope
pop
jns
mov
int
lock
xorb
iret
pop
loopne
inc
loope
loop
icebp
or
iret
push
push
xchg
js
aaa
shr
cmc
lea
mov
add
lods
es
daa
push
bound
or
outsl
xor
insl
mov
ss
gs
aaa
cmc
sub
xchg
mov
mov
mov
or
rcrb
nop
sahf
adc
dec
xchg
add
sbb
mov
cli
and
jno
shl
adc
push
movsb
sahf
rcrl
dec
mov
in
out
je
divb
pop
pop
cmp
arpl
fsts
xor
adc
xchg
jmp
test
fildll
jae
ret
mov
xchg
outsb
pop
adcb
xor
jns
mov
movsl
aam
cld
movsl
mov
aam
sbb
stos
dec
fisubs
add
xchg
and
je
or
mov
cmpsb
insb
call
push
ret
push
mov
pushf
cmp
push
push
xchg
stos
dec
gs
mov
add
loopne
outsl
aaa
mov
inc
loop
sub
xchg
jnp
jl
mov
in
nop
mov
fsubrs
stc
aad
cmp
xor
jne
aam
enter
mov
div
bound
cs
mov
testl
mov
xchg
lods
leave
pusha
mov
out
lods
fidivrl
icebp
dec
mov
xor
ljmp
pop
testl
mov
sbb
aaa
orl
jb
call
push
pushf
ret
hlt
jns
roll
aaa
pop
test
loop
push
cli
insb
in
mov
arpl
in
xchg
xchg
push
pop
jmp
mov
xlat
jb
sub
add
enter
dec
sahf
add
andl
les
in
pop
lret
xor
sub
jns
roll
stos
adc
sti
mov
ret
cwtl
fisttpll
int
jl
sub
std
push
sub
lods
push
mov
or
xlat
imul
popa
pop
inc
fdivs
or
add
testl
pop
movsb
pop
hlt
notb
insl
out
scas
jmp
or
mov
jb
addr16
test
fsubs
lret
loopne
jl
cli
stos
sub
or
es
repz
mov
lret
pop
ss
fcmovne
loopne
xor
sub
adc
nop
mov
js
aam
add
aad
leave
xchg
sahf
add
stos
add
jecxz
rcrb
sbb
cs
jnp
add
lods
xor
pop
xor
dec
or
push
mov
add
fmuls
mov
mov
add
jo
cmp
enter
test
call
mov
int
push
sub
pop
push
pushf
pop
mov
jmp
inc
adc
push
addr16
inc
dec
cmc
fwait
sbb
sub
jb
scas
adc
push
test
insb
jge
cmp
xchg
je
mov
inc
out
out
add
mov
das
xchg
test
inc
jp
push
cmp
hlt
xchg
repnz
cmp
cs
les
jg
stos
ret
adc
fbstp
or
mov
mov
push
mov
or
mov
arpl
pushf
mov
pop
push
add
cltd
cmpsl
pop
dec
out
lods
dec
fs
push
sbb
outsl
fdivl
mov
sub
push
int
and
insb
std
sub
jnp
mov
or
or
jl
and
sbb
rcll
insb
loop
loope
lds
loop
pop
cmp
or
or
xor
cmp
push
ret
mov
cwtl
push
fwait
aam
das
aaa
fldenv
jg
rclb
popa
cmc
and
pop
jne
inc
aas
jns
mov
adc
es
ds
lods
int
pop
cmp
xlat
cmc
fnstcw
xor
cwtl
ljmp
inc
pop
int
insb
mov
push
mov
js
repnz
mov
inc
andl
pop
sbb
mov
sbb
mov
mov
jp
pop
cmc
clc
lods
xrelease
test
por
imul
sub
push
mov
or
push
push
push
nop
xlat
dec
sbb
pop
js
jnp
movsl
fsubl
mov
add
scas
stos
imul
out
imul
aaa
insb
mov
ficoms
sbb
loope
inc
fldl
data16
pop
pop
adc
addl
test
push
and
xlat
inc
push
or
adc
pusha
pop
inc
mov
mov
jno
pop
sbbl
icebp
xorb
mov
in
cmp
lea
add
adc
or
ds
add
popf
in
pop
fildll
push
fld
pop
vcvtdq2ps
pop
dec
sbb
fs
enter
cmp
lcall
add
or
sbbl
inc
pushf
xchg
cld
cmp
rcrl
mov
adc
and
rcll
shll
je
jg
dec
jge
mov
cli
xchg
stos
leave
ss
popf
andl
cld
std
push
xchg
popa
and
test
and
lret
aad
out
bound
and
xchg
adc
fneni(8087
dec
xchg
pop
sbb
sbb
jne
flds
lods
je
pop
lahf
cmpb
adc
bound
and
lcall
lcall
jbe
mov
or
dec
mov
orl
inc
shlb
wbinvd
adc
push
dec
lret
mov
iret
negb
pop
sbb
cmp
adc
aaa
mov
test
shrb
dec
shll
rorl
in
mov
and
bound
and
and
ja
mov
into
movsl
pop
jecxz
stc
sbb
lahf
icebp
mov
cmc
mov
adc
jno
popa
test
mov
rcrl
add
and
push
cmp
filds
fisttps
repnz
or
ja
shr
nop
leave
push
xor
mov
in
sub
mov
push
in
sbb
fxch
jo
push
js
call
cld
in
pop
or
push
jbe
mov
arpl
mov
mov
mov
sub
jge
xchg
pop
bound
jnp
insl
xchg
int
das
inc
nop
inc
das
mov
cld
or
jecxz
or
adc
mov
xchg
fdiv
aaa
pop
not
cmp
hlt
adc
sbb
pop
inc
cmc
and
enter
enter
dec
insb
inc
mov
ds
add
lcall
pop
mov
into
lcall
sub
addr16
mov
filds
push
adc
inc
out
mov
inc
cwtl
push
mov
jl
ret
push
ret
lds
sbb
xchg
adc
adc
insb
loop
lret
popf
and
scas
jno
hlt
aas
cmp
pusha
pop
or
aaa
cld
fnstenv
mov
je
fidivl
fs
mov
vpsrld
fidivrs
pop
mov
xchg
jmp
scas
sbbb
dec
dec
push
dec
repnz
and
xchg
mov
inc
add
dec
enter
push
mov
lea
jne
mov
in
notb
pop
and
movsb
sub
cmp
outsb
imul
ss
fistpl
loop
imul
and
ja
lcall
sbb
lret
jbe
neg
outsl
dec
cmpsb
mov
popf
xor
std
icebp
fsts
mov
sbb
jae
gs
mov
jno
inc
scas
sbb
stos
fists
loopne
and
ds
sahf
roll
push
std
adc
mov
xor
xorb
dec
rcrb
lea
scas
dec
and
xor
pop
push
xor
sbb
fs
lcall
cmp
add
sbb
push
addl
mov
test
adc
mov
not
test
adc
or
cmp
xlat
mov
fadds
xchg
loop
int
clc
push
mov
mov
popa
movd
jno
sub
push
fisttps
xchg
jnp
dec
push
mov
ds
stos
shl
lock
mov
in
in
loope
cmp
shl
aam
js
mov
cmp
fists
fsubl
mov
jns
addr16
xor
sbb
sbb
mov
sub
dec
cmc
sbbb
les
mov
leave
pushf
lock
sub
lods
in
js
lahf
jbe
push
or
int3
ret
popa
mov
call
ret
add
xchg
aad
push
lods
xor
arpl
xlat
lock
pop
clc
repz
adc
insb
xor
pusha
sahf
push
push
insl
dec
dec
jae
and
lock
sbb
cmpl
ss
dec
mov
iret
jo
data16
bound
out
inc
cwtl
xorl
mov
pop
or
push
out
enter
push
in
fxch
fistpll
pop
mov
lahf
mov
mov
in
inc
mov
push
inc
fisubs
addl
cli
xorl
std
cmc
sbb
and
push
pop
xor
loope
inc
dec
lret
pop
into
push
sub
mov
out
add
jo
or
mov
les
outsl
sbb
ss
mov
xchg
shll
add
sbb
hlt
pushl
mov
pop
das
ds
sbb
pop
sub
mov
mov
cmpsl
repnz
jo
idivl
jle
and
jecxz
mov
lods
shl
cmpsl
and
movsl
inc
dec
push
rcl
repnz
aas
fdiv
cmpsb
mov
sbb
mov
push
cmp
sub
jbe
dec
jnp
dec
push
negl
mov
jl
sbb
push
inc
push
push
pop
or
js
push
mov
inc
and
in
and
jle
or
leave
adc
aas
out
hlt
test
insl
add
mov
push
mov
notl
lea
daa
into
ficoms
sbb
das
push
int
ret
dec
aas
insb
loop
jge
sub
bound
mov
jns
insl
adc
mov
enter
dec
jno
fistl
adc
cwtl
jecxz
xor
xor
popa
pop
inc
or
cmpsl
daa
pop
imul
jecxz
out
je
roll
shlb
mov
je
pop
pop
add
imul
ds
sarb
lock
pop
cmp
xchg
xchg
rolb
mov
mov
mov
add
bound
ss
xchg
jmp
cmp
dec
push
jnp
pop
jo
cmc
cld
dec
push
sahf
insb
data16
mov
dec
inc
and
xchg
lahf
inc
adc
xchg
imul
or
push
in
or
mov
pop
xlat
sub
xchg
dec
lods
sub
jns
adc
push
sbb
cs
in
mov
push
andl
jae
mov
dec
daa
cmp
xchg
sub
xchg
cli
sub
sbbl
jge
arpl
lds
add
std
ss
push
pop
push
icebp
loope
pop
js
jns
jmp
fidivl
in
adc
jg
pop
add
sub
and
push
jp
das
rclb
pushf
add
test
push
imul
daa
dec
lods
jnp
movups
push
pushf
rep
leave
mov
ret
pop
andb
aam
inc
xor
or
sbb
fisubrl
mov
outsb
add
arpl
int3
leave
addr16
dec
mov
push
mov
adc
add
pop
mov
lock
cmp
stos
sbb
stos
mov
outsl
adcl
lea
pushf
dec
out
stos
pop
std
out
jl
stos
sub
test
jo
mov
inc
shlb
cltd
shll
rorl
jl
cmp
adc
jmp
push
ljmp
dec
lret
fldl2e
and
arpl
loop
int3
inc
daa
jae
xchg
and
into
insb
mov
clc
pop
mov
les
sbb
cmpsl
push
ret
lods
in
mov
ret
je
sbb
mov
adc
jle
scas
cmp
xchg
in
inc
xchg
mov
fwait
shll
mov
cmpsl
lods
test
mov
and
testb
fidivrl
and
in
out
arpl
std
out
jae
push
movsl
sub
mov
test
int3
loope
pop
shl
inc
jmp
push
lods
adc
adc
xor
cwtl
xor
push
mov
lahf
adc
xchg
and
xchg
or
test
movsl
lock
movsb
cmp
inc
lret
inc
and
cmc
ds
add
xchg
push
loope
shl
and
lret
cld
xor
jge
push
in
sahf
and
add
test
jo
sbbl
sahf
jecxz
mov
icebp
pop
dec
inc
std
cmpsb
fildl
inc
and
stos
leave
and
or
je
mov
dec
mov
push
mov
out
bound
jmp
stos
add
pop
sahf
aad
call
jb
and
inc
loope
or
addr16
loop
push
inc
nop
out
pop
arpl
mov
in
out
mov
rolb
outsb
lods
pusha
pop
mov
jbe
imul
shll
jge
push
int3
lcall
push
xlat
add
test
fsubs
addl
outsl
pop
shll
push
xchg
and
push
or
mov
jp
mov
mov
jbe
sub
dec
sub
sbb
mov
shll
inc
mov
es
and
cld
push
mov
sub
mov
mov
mov
mov
sahf
repnz
mov
xor
shrb
cmp
xchg
cmp
jl
loopne
insl
push
pop
sub
push
out
cld
out
jp
lods
rcll
es
arpl
and
mov
xor
test
cmpsl
mov
dec
dec
mov
jecxz
xor
pop
ja
call
pop
ret
pushf
sub
xchg
jge
jnp
push
cmpsl
inc
or
fstps
push
sar
fsts
mov
ret
test
and
lds
xor
nop
sub
add
cmpsl
xor
lcall
mov
popa
jp
pop
enter
adc
repnz
mov
jmp
sbb
push
mov
jmp
push
push
push
scas
push
mov
pushf
mov
inc
pop
movsb
or
es
xor
xchg
xor
call
imul
into
inc
out
cli
mov
out
into
jmp
loopne
jo
mov
or
lret
xchg
out
insb
aas
mov
dec
push
or
or
pop
loop
iret
lret
inc
mov
and
out
fs
repz
out
lds
bound
mov
cli
out
pop
xchg
mull
iret
popa
and
sub
mov
lcall
cmp
mov
stc
aas
inc
inc
pop
outsl
mov
nop
push
mov
mov
cmp
icebp
outsl
insl
leave
jo
lock
enter
repnz
mov
mov
add
dec
inc
rorb
fs
inc
add
in
je
cmc
push
out
or
mov
jb
push
stos
into
je
dec
and
mov
fstl
in
std
or
aaa
sub
jae
hlt
mov
xor
shr
cmp
and
in
loop
mov
sub
ret
and
add
cmp
and
outsl
dec
insl
rorb
das
scas
nop
mov
cld
push
inc
fwait
xor
sbb
lcall
lret
imul
frstor
cwtl
cmp
stos
movsb
leave
push
pop
icebp
cmp
dec
fadd
pop
mov
fdiv
jae
fiaddl
sbb
lcall
lea
adc
mov
inc
ja
mov
shl
mov
push
dec
mov
in
cmp
push
jecxz
es
inc
xchg
jl
mov
mov
mov
test
adc
fldenv
jae
add
cmpsl
add
ljmp
mov
in
andb
push
mov
pop
andl
push
pusha
mov
dec
jmp
pop
leave
and
adc
dec
jnp
mov
popf
xlat
inc
dec
pop
jae
stc
lcall
rcrb
lods
mov
and
lret
jmp
jge
stc
into
fwait
lea
push
mov
mov
mov
cwtl
inc
stos
stos
pop
das
xchg
shrl
xor
lock
imul
pop
dec
mov
inc
cmc
push
and
dec
lret
dec
dec
ss
insb
jno
ret
inc
call
shlb
sbb
mov
mov
pop
imul
mov
add
inc
fidivrs
add
arpl
orb
xor
ljmp
scas
xor
mov
jae
xchg
sub
lcall
pop
xor
push
pop
add
mov
aam
aam
icebp
popa
mov
lret
mov
aaa
in
sub
outsl
inc
mov
sub
out
sahf
cmpsb
fistpl
jno
or
pop
scas
int3
lahf
mov
hlt
or
dec
clc
repnz
inc
out
fiaddl
sub
inc
bound
dec
push
shl
and
in
pop
fs
jbe
dec
lahf
push
mov
loop
aam
add
stos
jb
jo
dec
loop
push
daa
sub
dec
xor
in
inc
daa
lahf
mov
and
popf
jne
xlat
jle
enter
in
push
out
ret
inc
xchg
or
lcall
scas
call
pusha
pop
daa
mov
pop
adc
pop
dec
cmpsl
insb
jmp
rcr
xchg
push
xchg
pop
insb
xorl
in
cmp
cmc
les
add
rorb
repnz
pop
lock
divb
loopne
out
pop
clc
scas
or
test
leave
jl
insb
ds
jnp
into
xchg
loop
rcll
negb
pop
gs
add
inc
cmpsl
cwtl
mov
scas
ret
sti
ret
mov
jbe
shl
mov
sbb
mov
nop
xor
jp
push
xor
mov
adc
movsl
sub
int
inc
inc
outsl
xchg
inc
sbb
add
int
and
cmpsl
rorl
and
mov
inc
lret
orl
pop
cmpsl
daa
inc
adc
arpl
mov
pop
outsl
add
pop
jmp
inc
add
mov
push
outsb
mov
stos
mov
jb
fnsave
dec
out
jno
lock
sti
lahf
xor
mov
insb
clc
faddl
insl
push
das
xor
xchg
iret
xor
clc
sub
int
ss
sbb
mov
push
gs
sbb
xchg
or
int
pop
mov
fs
ret
aad
bound
inc
fsubrp
mov
fldt
jbe
or
orb
dec
iret
fdivrs
and
leave
mov
scas
inc
mov
pop
push
test
movsl
sahf
std
fidivs
add
lahf
sub
vdivps
and
imul
stos
pop
insl
aas
lods
lea
lret
push
sbb
sub
sub
or
in
dec
jbe
and
sub
xor
popa
es
ret
lcall
out
and
subl
xor
mov
sarl
mov
xlat
movq
jl
inc
jle
add
xchg
loopne
pmulhw
sbbl
and
out
mov
xor
mov
xchg
fs
sbb
jbe
out
add
adc
xchg
pop
mov
or
sahf
push
xchg
adc
call
addl
push
sbb
push
or
sub
xchg
fiadds
mov
mov
test
inc
xor
sbb
dec
dec
sub
aaa
jbe
xchg
lods
xor
sub
mov
jno
lock
xchg
mov
mov
nop
mov
lret
lock
movsl
psadbw
jnp
cmp
jmp
mov
fdivrs
fs
pop
outsb
andl
dec
sbb
outsl
pop
cmp
xchg
pop
enter
dec
push
mov
cmp
popa
fwait
les
dec
push
stos
jmp
cmp
aas
lahf
push
add
adc
pushf
movsl
outsl
push
outsb
mov
mov
xchg
std
notl
mov
int3
push
bound
adc
addr16
jb
or
mov
xor
pop
ret
idivl
mov
into
loopne
std
jo
cmp
es
cmp
pop
dec
lret
sarb
mov
ror
notb
pop
aam
and
cwtl
int3
xor
inc
and
shl
and
xchg
add
cmp
pop
ljmp
cltd
push
loope
lods
dec
fisttpll
pop
lcall
dec
fs
lds
cmpsb
xchg
push
mov
pop
mov
mov
mov
xor
and
pop
decl
pusha
mov
add
and
xor
fdivrs
cmp
testb
aam
fstpt
lods
in
add
sbb
xor
ret
lds
cmp
lahf
ds
outsl
cli
imul
fistl
test
mov
loope
mov
rcll
mov
xor
outsb
lods
dec
dec
sub
push
cld
shll
pop
lahf
and
mov
cmp
aas
loop
mov
dec
cmp
adc
dec
or
ror
and
dec
and
shrl
pop
stos
cmp
inc
push
je
mov
pop
and
mov
mov
repnz
dec
mov
sbb
xchg
pop
inc
xor
mov
das
cmpsb
cmpsb
jg
xchg
call
cmp
pop
jno
or
mov
mov
fs
adc
fsts
je
fcoml
mov
mov
insl
dec
and
rolb
push
and
adc
mov
gs
dec
xor
adc
into
lock
mov
cwtl
cmpsb
pop
xchg
out
fiaddl
dec
push
ret
jecxz
sub
mov
push
pop
mov
mov
or
sarl
fisubrl
jmp
add
inc
jmp
xor
lods
xor
inc
out
shr
and
test
ljmp
dec
cmp
rcl
enter
dec
inc
mov
mov
mov
pushf
mov
inc
pop
out
leave
incl
xchg
dec
leave
sub
addb
cwtl
test
dec
lcall
std
aaa
cmp
add
adc
outsl
mov
iret
push
nop
iret
gs
fisttpll
inc
lock
jns
stos
hlt
lretw
arpl
nop
add
psrld
outsl
mov
adc
pop
das
out
ds
out
jb
sub
dec
test
mov
rorb
lret
cmpl
and
xchg
pop
or
xor
inc
and
je
loope
stos
stc
mov
or
push
lcall
ficoml
inc
jg
fmuls
cmpsb
adc
and
insl
push
out
pop
jp
insl
mov
mov
cmpsl
cltd
movsl
jb
and
mov
jns
insb
pop
pop
imulb
and
pusha
mov
stos
stc
inc
sbb
rorb
cmpb
aas
lcall
jle
jns
push
popf
push
bound
jno
jo
xchg
cmp
pop
add
sbb
cli
test
rclb
andl
push
pop
cmpsl
testl
jnp
div
daa
imul
aas
jp
push
cmp
jecxz
out
rol
cltd
mov
je
push
sbb
shl
fwait
pop
jns
fs
mov
loope
out
lods
repnz
fucomp
scas
push
and
xor
sub
das
sbb
add
shl
pop
dec
sahf
or
sub
loope
ljmp
lahf
cs
inc
cmp
stos
push
cmpsb
in
sbb
inc
xchg
pop
repnz
add
std
cmp
inc
lret
stos
scas
popa
sbb
fwait
ljmp
sub
sub
popf
dec
push
pop
xchg
cs
ficompl
test
adc
dec
repz
mov
dec
dec
sbb
add
fcmovnu
push
sub
scas
pop
fcmovne
sti
loopne
sub
push
stos
js
cmp
out
mov
les
cmp
pop
out
paddusw
mov
leave
inc
js
sbb
jmp
add
and
or
mov
sarl
psrld
add
popa
or
stos
mov
filds
jne
mov
mov
lret
push
xchg
out
sarl
loope
mov
add
dec
add
stos
fs
sbb
mov
jl
push
sub
pop
jo
cmpsb
mov
mov
xor
lcall
xchg
jbe
testl
lock
jb
icebp
jge
xchg
mov
xchg
adc
sub
mov
clc
cld
mov
xor
in
out
stos
dec
stc
adc
stos
jl
movsb
fisubl
adc
stos
call
and
adc
sbb
andl
adc
cmp
icebp
dec
sbb
ljmp
sub
sbb
loope
cmp
cwtl
pop
loope
sub
jno
dec
add
cltd
push
popf
ds
dec
pop
dec
out
mov
or
cmpsl
in
aad
iret
dec
fdivs
inc
cli
sub
jno
xchg
icebp
cltd
rorb
cmp
lods
aas
push
pusha
cmpsl
pop
repnz
pop
ror
pop
sub
cmpsb
inc
jle
pop
and
clc
add
outsb
jl
je
outsb
dec
cs
jo
or
sub
sahf
fcmovbe
inc
jle
pop
jne
test
daa
mov
mov
push
add
fstpl
mov
cld
push
pop
inc
aam
fcompl
movsl
adc
dec
imul
les
cli
mov
mov
sbb
jp
test
out
add
gs
std
push
ljmp
mov
stos
xor
push
and
repnz
cmp
xor
pop
aad
test
fldl
aas
add
andl
jae
pop
fistps
push
fstcw
sub
jne
sbb
das
or
imul
nop
shrl
push
cli
pop
rclb
loop
ja
test
or
mov
mov
iret
jae
push
pop
mov
iret
mov
icebp
xor
mov
aas
adc
cmc
js
lcall
inc
pop
add
lret
popa
into
hlt
lret
cmpsl
fwait
dec
lock
adc
and
adc
cli
mov
xor
popa
push
out
lods
and
sarl
loope
add
lods
mov
adc
add
arpl
jns
pop
or
fldcw
in
xchg
mov
loopne
xchg
pop
mov
mov
mov
mov
and
fld
outsb
dec
lds
jnp
push
aaa
leave
xlat
rorl
lds
xchg
test
dec
aad
pop
stc
cmc
lds
scas
pop
mov
fbld
mov
and
test
push
loop
shl
cmpsl
adc
xchg
mov
popf
fdivs
loope
test
xor
or
test
ret
and
int
jg
repz
jnp
jmp
jns
int
repnz
jnp
and
nop
insl
call
sahf
in
test
mulb
mov
push
pop
jo
mov
adc
add
imul
dec
iret
jle
fstps
inc
je
inc
push
add
or
loop
inc
imul
and
jecxz
ret
mov
incl
push
xor
test
ret
sbb
ds
mov
out
push
cmp
cmp
mov
outsb
dec
call
xor
push
cmp
ljmp
pushf
pop
lea
sbb
ljmp
sarl
cwtl
jle
insb
js
mov
jo
cwtl
sub
repnz
test
mov
dec
pop
pop
adcl
imul
and
mov
in
les
xchg
and
cli
scas
adc
into
pusha
gs
push
call
push
xchg
xchg
rclb
fcoml
mov
mov
jge
mov
mov
xchg
repz
sub
leave
shrl
jp
popf
repz
test
enter
mov
cmp
pop
ljmp
gs
stc
cmp
or
add
or
xorl
or
mov
sbb
ja
jecxz
or
pop
fcompl
outsb
pushf
jb
arpl
rcrl
adc
fcoms
sub
sub
dec
addl
ret
xor
dec
enter
sub
xchg
or
pop
leave
dec
pushf
jno,pt
sbb
arpl
jg
int3
insb
popf
imulb
mov
mov
movsb
movsl
sub
lock
cmp
cmp
nop
repz
lds
xchg
sbb
in
lcall
cmp
cmp
insl
jo
mov
jno
jns
aam
mov
mov
out
mov
mov
mov
out
in
test
mov
fmul
push
je
and
mov
in
sub
ljmp
out
pop
ja
add
mov
jl
and
adc
sarl
adc
mov
pop
lods
stc
push
inc
ret
adc
pop
scas
mov
lea
cmp
xor
es
mov
jecxz,pt
or
test
mov
or
adc
xor
dec
fs
mov
sbbl
push
mov
loopne
loope
shll
push
movsl
in
jne
push
in
mov
sub
pop
fmuls
lods
and
mov
lea
clc
jbe
xor
call
outsl
stc
sub
je
inc
add
out
aaa
mov
or
mov
pop
push
test
pop
in
shll
je
cmp
sahf
movsb
sbb
stc
push
lahf
push
data16
adc
cmp
dec
ret
out
out
mov
adc
mov
rorb
push
orl
insl
movsl
imul
addr16
ljmp
cmpsl
ud0
loop
das
add
in
out
mov
fwait
pop
mov
imul
out
lods
inc
or
scas
mov
jle
pop
clc
xor
push
imulb
add
mov
mov
pop
xchg
adc
iret
adc
sub
std
insl
clc
jbe
xor
cmp
stc
ror
xor
add
roll
sbb
aas
mov
xor
jb
jmp
jae
loop
mov
das
and
outsl
cmp
push
or
shrl
test
push
cwtl
mov
mov
push
fistps
jb
xchg
push
inc
xchg
mov
pop
pusha
int3
data16
fcmovb
stos
jecxz
in
push
pusha
dec
pop
aas
mov
jecxz
aad
mov
repz
and
mov
shll
sbb
mov
outsb
bound
cli
sbb
push
xor
mov
cmp
inc
movsb
fcmovnu
add
addr16
jecxz
xchg
jl
daa
aad
mov
std
sub
mov
mov
mov
js,pt
push
dec
push
jbe
imul
or
cs
loop
sub
mov
add
sbb
ja
dec
cmp
pop
push
sub
lret
xor
popa
daa
lea
lock
lods
out
mov
mov
push
out
cmp
mov
gs
movsb
movsb
sbb
pop
inc
sbb
fsub
cmp
jne
lods
cmp
aaa
jecxz
push
mov
pop
test
mov
leave
fldt
cmpsb
dec
mov
ret
fsincos
cld
je
jle
mov
sub
mov
add
adc
pop
int
pop
sbb
sbb
outsl
cmpsb
push
add
pop
into
lret
pushf
test
lcall
xchg
mov
ret
adc
test
mov
jmp
dec
sbb
pop
push
xchg
mov
lret
or
out
mov
xor
add
or
xor
adc
mov
dec
push
decl
pushf
in
push
cwtl
mulb
cmpsl
outsl
cmp
push
mov
sbb
inc
cmpsb
mov
pop
mov
imul
ja
mov
sbb
arpl
arpl
sub
dec
sub
imul
mov
sub
lods
adc
pop
fdivrl
fimull
pop
movsl
mov
or
aad
fwait
dec
mov
xchg
pop
mov
mov
push
stos
rorl
push
mov
sub
pop
idiv
push
std
jo
cmp
and
stos
mov
jp
mov
setne
and
in
xor
addr16
mov
in
xchg
mov
and
jo
movsl
jmp
cld
pop
fwait
data16
lret
pushw
scas
outsb
pop
loope
push
pop
pop
loope
ja
mov
imul
sar
pusha
mov
pop
aam
and
pop
jmp
jecxz
je
sbb
xor
popf
ror
jp
sub
push
fstpl
out
outsb
mov
aas
push
frstor
imul
xor
dec
or
nop
addr16
add
sub
mov
loope
mov
sbb
xchg
mov
pop
data16
mov
xlat
cmc
imul
sahf
jl
mov
inc
dec
xor
pop
int3
xor
inc
xchg
dec
xchg
shll
jbe
inc
ljmp
push
mov
cmp
sbb
inc
xchg
pop
xor
fmul
xorl
cld
lock
xchg
fsubrs
jae
rclb
mov
jmp
enter
mov
push
popf
subb
bound
fadds
push
mull
inc
test
imul
popa
dec
and
inc
pushf
and
pop
jle
xor
add
pop
mov
pop
sub
inc
mov
mov
xor
pop
jecxz
inc
pop
pop
mov
mov
jns
mov
and
aaa
push
adc
ret
xor
dec
out
roll
xchg
mov
push
outsl
das
aas
stc
sub
or
movsl
popf
js
dec
mulb
xchg
rorb
cmp
insb
push
pop
mov
jmp
enter
or
push
test
mov
dec
xor
test
or
decb
clc
out
aad
and
scas
mov
cli
rcll
add
sub
lahf
add
jmp
icebp
pop
dec
mov
and
cmp
mov
or
ror
sbbl
xor
mov
mov
lods
dec
loope
sahf
cmp
mov
mov
insl
stos
cmp
pop
mov
jg
imul
xor
xchg
ret
fsubrl
mov
fstl
xor
jmp
shrl
jge
stos
pusha
daa
mov
lea
jle
xor
jmp
jbe
inc
add
subl
sub
xor
mov
dec
out
mov
push
mov
jb
pop
pop
test
cmp
inc
icebp
mov
mov
cld
push
movsb
daa
aad
and
xor
pushf
mov
xor
sub
mov
ds
rorb
shr
mov
jbe
loopne
xchg
ss
fdivl
cmp
mov
adc
lods
or
pushf
dec
sub
pushf
push
mov
test
or
adc
stos
test
pop
nop
jecxz
cmp
mov
jne
sub
pop
mov
int
xor
fimull
push
or
pushf
out
mov
jbe
les
addl
sti
mov
sbb
mov
and
mov
inc
aam
pop
insl
loop
insl
or
shrl
jecxz
sbb
scas
add
cmp
adc
dec
fistpll
adc
jne
lret
jecxz
cmpsb
push
adcl
xchg
jmp
and
cmp
ret
inc
dec
pop
xchg
in
cmp
push
fldl
int3
jne
cmp
mov
xlat
adc
push
lds
jl
sub
push
outsb
inc
add
xlat
jne
out
test
jg
dec
lcall
mov
and
jnp
bound
xchg
loope
das
test
jno
aaa
xchg
imul
rcll
mov
rcll
orb
sub
xchg
sbb
adc
ds
and
sbb
add
ret
scas
rcrl
mov
or
xchg
mov
sti
jmp
push
inc
out
xchg
cmp
adc
or
sahf
shlb
jae
dec
stos
sbb
lret
xchg
xchg
xor
addb
cmc
sub
test
mov
mov
inc
push
shlb
xchg
dec
repz
jmp
xchg
mov
fildl
ds
or
fcomps
jns
add
sbb
ljmp
test
sbb
cmpsb
and
in
lcall
cwtl
xor
xchg
popaw
mov
popa
inc
das
stc
sub
cmpl
xchg
mov
leave
or
ret
inc
fwait
sbb
loope
mov
dec
sbb
loope
push
cmpsl
rcr
add
imul
xor
cwtl
dec
add
cs
insl
xor
out
pop
dec
sbb
push
stos
pop
bound
push
lock
sub
rcrb
test
jo
add
push
std
mov
push
rcrb
cli
dec
popf
fld1
cmp
sbb
mov
and
scas
or
repnz
mov
out
or
dec
out
push
insl
inc
inc
mov
cltd
add
lret
roll
xchg
mov
mov
into
out
out
add
dec
mov
mov
das
mov
sahf
imul
dec
push
mov
xor
imul
push
cs
mov
adc
mov
mov
insl
and
mov
push
push
inc
mov
push
aam
and
inc
loopne
and
ljmp
mov
mov
das
pop
bound
cmpsl
je
add
test
inc
fnstenv
scas
outsl
pushf
cmp
push
or
filds
fwait
clc
imul
add
adc
shrb
enter
movsl
and
es
test
cmp
dec
or
mov
or
ret
mov
sbb
int3
fnsave
mov
mov
pop
movsb
rcr
push
test
lret
in
add
roll
push
mov
in
cltd
cmpsl
cwtl
mov
adc
sbb
add
mov
lds
rol
and
mov
mov
push
push
das
sbb
jp
mov
cmp
mov
scas
insl
cs
mov
and
aad
cmp
in
inc
loopne
cmpsb
mov
int
outsb
scas
and
test
js
cmp
xor
or
sahf
cmp
mov
cmc
popf
lea
sbb
in
sub
loope
xor
movsl
insb
jbe
loope
mov
orl
sbb
in
rorl
pushl
aad
bound
xor
inc
sub
inc
arpl
or
mov
add
and
inc
inc
iret
ret
insb
pop
xor
cmp
imul
fisttpl
jmp
adc
cmpsl
call
dec
pop
add
pop
mov
jmp
push
mov
cmpsb
mov
pop
xor
jle
add
repz
cmpsb
outsl
cmpsb
pop
mov
iret
arpl
in
jge
adc
js
ficoml
sub
mov
jb
inc
push
scas
sbb
lods
shl
and
mov
iretw
and
jg
lahf
shll
es
xchg
dec
pop
add
lcall
roll
pop
jg
fwait
inc
loope
mov
dec
sub
mov
cmp
testl
push
or
cmp
repnz
mov
negb
orl
add
or
hlt
push
daa
mov
mov
nop
sahf
xchg
pop
pushf
test
jno
dec
mov
jg
loopne
push
mov
cli
cmp
jns
mov
cmp
mov
fldt
mov
inc
pop
xlat
je
dec
or
test
mov
arpl
sub
insb
ja
xchg
push
adc
emms
pop
push
xor
mov
sbb
pop
loop
cs
test
jns
lea
sahf
pop
cld
mov
jnp
or
jne
aam
cmc
xchg
or
jo
leave
inc
mov
cmc
jb
mov
dec
adc
pop
repnz
sahf
out
ljmp
cmp
and
dec
xchg
push
stos
push
mov
cmp
lea
ja
ss
or
or
imul
cmp
lods
mov
out
fcomps
pop
pop
fdivrl
shlb
inc
mov
imul
incb
das
adc
or
daa
lods
push
dec
adc
sub
sar
cmpsl
sarb
test
sahf
sub
add
pusha
adc
and
call
insb
in
in
sub
mov
adc
repnz
push
orb
fisubrs
lcall
mov
outsl
lods
aaa
iret
daa
pop
out
ret
inc
push
cmp
or
and
mov
dec
movsl
div
notl
sahf
jge
movsl
mov
or
mov
aas
fcmovnu
mov
icebp
cmp
pop
aas
lret
sbb
pop
pop
mov
hlt
fstpl
imul
imul
and
scas
jb
rclb
mov
pushf
xor
lcall
leave
das
ljmp
inc
jb
or
sbb
pop
or
push
rol
adc
sbb
cld
cmp
mov
push
push
or
pusha
filds
pushf
jg
pop
ret
scas
fildl
mov
jns
outsb
push
jmp
ror
mov
jb
jge
loopne
cmp
add
ljmp
loop
mov
sub
pop
scas
out
leave
repnz
lahf
jbe
lods
push
jno
jbe
push
lret
gs
jae
xchg
xchg
orl
xchg
sub
jmp
mov
das
repnz
test
jecxz
mov
jo
push
xchg
mov
cld
in
jle
push
sahf
mov
in
adc
push
loop
or
shll
popf
xchg
push
fldt
test
imul
cmpsl
and
sbb
cmpsb
mov
ret
mov
mov
ljmp
pop
lret
pop
cmpsb
out
in
ljmp
cli
or
enter
pushf
add
jae
mov
mov
int3
mov
insl
rcl
adc
fs
mov
lret
gs
ds
or
lock
jo
push
in
ret
push
fimull
xor
fistps
jecxz
or
lret
fcmovnu
sbb
mov
sti
movsb
push
dec
repz
xchg
inc
clc
popf
fcompl
test
push
cmp
jne
sbb
mov
cmp
shrl
push
shlb
es
fnstcw
pusha
inc
icebp
mov
bound
pop
and
mov
pop
pop
xor
in
adc
in
push
inc
fmuls
or
xor
scas
lahf
jl
sbb
dec
jmp
xchg
imul
mov
jb
sti
mov
xor
mov
adc
jg
inc
push
sub
adc
mov
ja
cmpb
sbb
jecxz
popf
iret
out
or
aaa
in
fwait
adc
or
arpl
shl
js
inc
mov
mov
mov
mov
cmp
in
add
leave
in
xchg
push
xor
not
xchg
daa
xor
ljmp
push
adc
shll
pusha
repnz
push
fcomip
mov
pop
adc
mov
decl
mov
add
mov
mov
or
pop
cli
xchg
push
lds
mov
mov
or
test
inc
scas
mov
push
pop
data16
sub
adc
adc
ret
mov
adc
mov
sar
mov
fistl
sbb
out
push
inc
pop
jnp
in
sub
outsb
sub
or
push
sahf
lcall
cld
lahf
xchg
sub
add
cmc
jnp
jmp
nop
pop
cmc
cmp
stos
leave
loope
jne
ret
iret
mov
xchg
les
shll
out
mov
xchg
cmp
lret
sbb
andl
pop
jnp
rorb
dec
ret
pop
pop
push
mov
push
daa
and
sub
idivl
sbb
ljmp
xchg
pop
cmp
outsb
dec
loop
das
xor
bndldx
push
mov
gs
and
loop
xlat
jl
je
fisttps
mov
std
xchg
mov
jbe
js
daa
and
mov
imul
mov
cmp
jp
sub
nop
cmp
pop
jo
cmpl
out
popf
xchg
pop
jae
in
sub
fwait
jmp
mov
ss
jns
push
out
mov
in
inc
mov
mov
jmp
push
sub
cltd
mov
mov
sti
xchg
inc
mov
stc
and
dec
arpl
lahf
shlb
add
push
mov
inc
sub
mov
xchg
es
sarb
aam
fnstenv
xchg
cmpsl
clc
add
fs
call
and
imul
cmp
push
sbb
and
sub
jp
xchg
fisubrl
jecxz
cld
adc
mov
into
push
movsl
mov
stc
push
push
push
xor
mov
cmpsl
les
dec
and
inc
sub
sbb
idivl
popa
aaa
adc
xor
loop
cmovp
push
or
vmwrite
popf
loope
mov
aad
stc
dec
adc
fnstenv
dec
gs
movnti
dec
loopne
lods
push
inc
ret
in
xchg
sbb
jbe
lds
rcrl
adc
and
lret
cmp
dec
cmp
hlt
mov
imul
mov
pop
loopne
test
imul
sbb
in
int
adc
ja
lahf
cmp
test
inc
pop
orb
add
outsl
inc
push
sarl
test
sbb
cli
int3
pusha
sbb
sbb
adc
adc
shrb
pop
adc
mov
not
fdivr
push
mov
cmpsb
je
cld
testb
cld
dec
pop
dec
xor
adc
imul
mov
loope
xchg
or
clc
push
mov
ja
dec
test
les
add
int
fs
push
stos
das
call
and
dec
leave
aas
xchg
push
cmp
lea
lods
mull
sbb
lds
xchg
sub
icebp
ret
fistl
cwtl
or
inc
scas
jo
icebp
pop
test
jecxz
pop
into
sub
cmp
shr
pushf
movsb
das
popa
divb
cli
cmpl
popf
adc
mov
lock
xor
push
xor
xchg
add
mov
xchg
lret
popa
insl
cli
xchg
xchg
fdivl
xor
ss
pushf
stos
pop
push
xchg
loop
jmp
mov
sbbb
xchg
shrl
inc
xchg
in
push
mov
stos
pop
popa
iret
call
rdtsc
repz
js
sti
js
nop
rolb
arpl
and
mov
mov
decl
repnz
cmp
orl
into
mov
add
xchg
mov
nop
cltd
pop
push
shlb
shll
mov
sbb
call
jae
mov
movsb
cmp
pop
sub
hlt
mov
xlat
adc
cmpsl
testb
outsb
icebp
and
sub
sar
lock
xchg
mov
aam
inc
xor
scas
testb
add
xchg
rcr
push
out
pop
mov
pop
mov
and
sti
mov
dec
sub
mov
lods
insl
jge
mov
sbb
outsb
inc
in
addr16
xor
icebp
sbb
jno
pop
or
movsb
popa
push
test
and
and
punpckhdq
mov
jp
mov
or
and
add
adc
inc
or
jl
int
fwait
pop
push
xor
loopne
xor
xchg
bound
adc
mov
cmpsb
pop
add
icebp
xor
in
xchg
mov
jnp
mov
stc
xchg
sub
pop
subb
pop
lret
jb
add
imul
bound
enter
dec
std
push
mov
call
mov
in
add
fistpl
jp
jo
lods
xlat
xor
lahf
adc
and
push
dec
adcl
sarb
jne
jbe
and
cs
icebp
inc
dec
cwtl
loope
fnstenv
mov
movl
daa
push
insl
aaa
dec
imul
rcrb
add
sahf
mov
sbb
mov
fwait
pop
rcl
shll
cs
in
popf
stc
enter
shr
xchg
js
jae
dec
scas
test
sub
jnp
lcall
testl
fistl
pop
pop
std
mov
lods
out
cmp
imul
ja
lahf
sbb
pop
sub
fs
pop
orl
cmpsb
les
adc
cld
sbb
bound
cmp
hlt
mov
xor
rorb
xchg
popa
xchg
scas
jmp
js
loope
out
fists
add
ret
xchg
into
inc
fists
insb
push
les
push
and
pop
cmpl
and
push
sti
xor
pop
insl
ljmp
mov
or
mov
arpl
push
or
test
push
dec
mov
lcall
pusha
mov
nop
push
lcall
mov
stos
mov
push
inc
sbb
js
inc
dec
into
or
jg
cli
iret
xor
flds
sub
lea
test
xchg
mov
xor
mov
cmpsb
xor
and
dec
inc
cmp
pop
and
mov
pop
ret
xchg
push
in
fdivs
mov
subps
test
jp
sub
repnz
aas
xchg
xchg
shrl
jle
push
adc
arpl
xor
xchg
out
xor
add
push
test
push
dec
scas
pusha
ret
xlat
inc
jl
lret
push
jecxz
aaa
or
rcl
adc
popa
xor
xchg
fs
aam
lds
popf
cmp
push
sub
jg
jmp
fistps
inc
xchg
std
aad
cmp
loop
adc
aaa
sbb
cmp
xlat
popf
ja
xchg
cmp
jae
jecxz
jnp
ljmp
sub
addr16
and
add
iret
mov
jl
std
mov
pusha
jae
pop
arpl
cmpsl
popa
lret
jnp
jecxz
cwtl
inc
aaa
push
push
push
shrb
dec
or
rcrl
lods
add
sbb
sub
cmp
in
jle
sbb
test
xchg
cmpsb
push
enter
ror
iret
fwait
insl
jb
leave
pop
les
xor
popa
mov
mov
movsb
pushl
inc
inc
dec
pop
test
mov
ret
and
scas
sarb
out
lds
dec
mov
sub
shrl
into
push
test
jae
stos
rcrb
jg
push
xchg
outsl
sub
jb
loope
cmp
jle
jo
mov
iret
adc
clc
adc
cmp
inc
cmp
sbb
dec
das
dec
xor
mov
push
or
xor
in
xor
jne
shr
push
sbb
aas
es
fmull
sarl
mov
push
lock
mov
mov
rcrb
or
dec
aaa
fildl
jp
js
stos
ja
lock
cmp
xchg
jl
push
stc
sub
sub
and
push
cwtl
dec
sub
push
xchg
xor
cwtl
or
mov
cmc
mov
jle
stc
iret
faddl
lock
in
inc
and
mov
sub
or
adc
cmp
dec
test
push
xchg
dec
cmp
jmp
rolb
sbb
push
aas
pop
scas
loopne
jecxz,pn
sarl
sub
imul
mov
mov
lahf
mov
mov
jnp
clc
jecxz
adc
inc
sub
fisttps
mov
mov
and
ret
les
sub
mov
xchg
orl
xchg
insl
mov
lock
cli
jne
subb
and
lret
lock
inc
sub
cmp
xchg
pop
int3
mov
and
pop
orl
cltd
inc
sub
repz
mov
mov
add
fwait
jmp
out
sub
cmp
popa
and
aaa
sbb
mov
insl
dec
movsl
mov
xor
aad
xor
push
jns
movsl
sbb
or
add
pop
pop
lods
arpl
pushf
or
inc
jb
xlat
sti
adc
call
pop
data16
mov
mov
mov
popf
stos
sbbb
fmul
sbb
movsb
icebp
in
or
dec
dec
jp
lods
lret
ja
adc
out
jbe
mov
aaa
dec
stc
dec
leave
mov
call
push
stc
push
pop
push
test
gs
movsl
add
pop
jbe
xor
sbb
ss
pop
mov
mov
icebp
fsubs
or
sub
sub
test
adc
cmpps
les
test
fsubrp
insl
lcall
insl
call
addl
xor
cmp
insl
mov
repnz
dec
shrl
in
sti
fmulp
mov
movsb
sub
mov
sub
adc
push
outsb
sub
xor
or
in
mov
insl
clc
sbb
in
test
popl
gs
call
jge
fbld
fsubs
and
cmp
js
scas
fdiv
fs
stos
mov
addl
xchg
je
push
lcall
loope
sub
aam
movsl
lea
scas
xchg
cmpl
add
movl
mov
mov
push
nop
testb
or
push
jo
cmp
out
adc
push
jg
push
out
or
ror
movsb
cmpxchg
sub
pop
dec
xlat
push
stos
imul
jmp
sbb
test
cmp
jns
sbb
xchg
stos
es
sbb
aam
xlat
rolb
mov
cmp
dec
jnp
xlat
fwait
xchg
pop
test
xchg
fdiv
xchg
pushf
mov
lods
mov
jo
popa
adc
inc
add
xor
and
mov
pop
mov
les
dec
cwtl
mov
xor
rcll
jnp
test
notl
add
faddl
inc
popf
sub
insl
adcl
jle
imul
lods
mov
scas
xor
in
dec
adc
sbb
sub
sahf
xor
mov
mov
push
gs
bound
mov
xor
push
cmp
std
mov
add
jbe
ret
add
addb
cmpsb
xor
mov
push
test
insl
addr16
test
pop
mov
adc
out
mov
testb
inc
outsb
jae
pop
add
xor
frstor
and
sbb
cmp
jle
jbe
sub
cmp
pop
aam
mov
mov
leave
cmp
cltd
dec
adc
mov
jnp
xchg
xchg
xchg
and
cmp
xchg
sub
fnstcw
cmpsl
clc
cmp
mov
dec
dec
imul
cmp
pop
in
clc
and
and
pop
movsl
lret
fsubrp
sbb
push
stos
sbb
sub
mov
jmp
lcall
pop
xor
ret
sbb
cli
popf
push
inc
or
inc
nop
push
ror
cmpsl
stc
aas
mov
fwait
pop
addb
lret
adc
mov
pop
sub
loop
and
xchg
into
sbb
xchg
or
sbb
lock
test
jecxz
sar
nop
cld
mov
jecxz
inc
enter
test
js
or
dec
mov
mov
loop
and
push
stos
sbb
stc
inc
out
xchg
xchg
outsl
nop
push
or
sti
jns
out
push
scas
sarl
dec
sbb
ljmp
enter
sub
cld
or
test
pop
fisttps
push
mov
mov
orl
sbb
rep
xchg
mov
cmp
sbb
inc
adc
repnz
clc
dec
adc
cmc
push
rcrl
cmp
sub
pop
cmp
rolb
sbb
adc
pusha
es
ret
pop
sub
lods
pop
clc
mov
xor
jns
ret
dec
jbe
nop
jns
test
fldt
xor
test
lcall
int3
dec
push
xchg
jbe
inc
inc
aam
int3
and
mov
mov
ret
push
cmpsb
mov
mov
pop
imul
iret
pop
stos
loopne
leave
les
rolb
js
or
aas
adc
mov
mov
iret
cmp
test
scas
inc
stos
adc
xor
xor
int3
in
inc
dec
mov
test
and
loopne
adc
and
fs
shlb
push
int
std
scas
icebp
xchg
mov
test
mov
cmpl
rcr
mov
push
xor
jae
test
inc
xor
add
lock
mov
inc
push
mov
jb
mov
fwait
sti
mov
in
mov
sbb
jne
mov
dec
mov
je
dec
stos
pop
mov
sbb
in
cli
vprotq
or
std
adc
imul
adc
and
cs
test
movsb
shr
mov
mov
je
frstor
mov
je
pop
xchg
in
call
rcrl
es
cli
hlt
jae
adc
adcb
fcmovb
mov
mov
popa
aad
cltd
mov
xor
or
shll
lods
cmp
inc
xchg
daa
pop
mov
jg
jl
push
mov
shll
sbb
into
lcall
repnz
aam
jmp
lret
gs
jge
insl
sub
sub
jecxz
test
push
icebp
pushf
movsb
fmulp
insl
aas
adc
inc
clc
movsb
mov
imull
call
inc
std
shlb
outsb
xchg
push
aas
out
cmp
ficoml
cmp
cmp
loopne
xchg
inc
xlat
bound
aam
sub
mov
cmp
or
xor
inc
pop
je
mov
rorb
mov
int3
clc
stc
ret
inc
mov
dec
into
out
mov
sub
push
lods
or
push
cmpb
dec
mov
push
xor
or
sub
loope
pop
xchg
lahf
cmp
sbb
mov
adc
sub
popf
pop
dec
push
cmc
roll
push
mov
nop
lds
out
out
push
xor
fwait
jl
test
pop
leave
or
and
in
xor
sub
in
inc
repz
int
divl
fisttps
popa
cmpl
aad
int
sti
xor
sbb
jne
fwait
pop
dec
push
cmp
jae
mov
pop
movsb
stos
push
xor
jg
leave
shrl
cld
int3
shrb
fwait
cld
pusha
gs
jle
jmp
jne
jle
sti
mov
cwtl
movsl
fs
xor
inc
sarb
movsb
push
mov
push
xor
jmp
mov
ficomps
pop
das
xchg
dec
push
adc
ret
xchg
popa
mov
clc
movsl
jno
test
movsb
scas
mov
int3
mov
xchg
pop
xor
das
int3
pand
rcrb
cmp
sbb
fisubs
out
test
sbb
inc
inc
js
mov
out
inc
je
push
iret
or
cmpsl
xor
test
xor
xchg
stos
insb
mov
mov
inc
idivb
divl
inc
pop
adc
sub
xchg
cmp
mov
or
std
shrb
add
adc
out
cmc
lcall
lcall
adc
dec
aad
inc
and
mov
adcb
jb
push
push
pop
mov
shrb
push
jl
dec
data16
or
cmp
push
inc
shlb
outsb
ljmp
popf
sub
jb
pop
ret
mov
mov
pop
orl
cmp
inc
fcomi
inc
mov
fidivs
push
xchg
mov
mov
adc
out
inc
pop
lahf
std
ss
daa
dec
jl
pop
pop
and
adcb
push
cmp
gs
aam
adc
insl
int3
mov
adc
jl
sbb
xchg
int
repz
orb
xor
push
xchg
aam
testl
in
sub
xor
sbb
daa
jae,pn
daa
andb
cld
popa
cwtl
lods
xchg
adc
movsb
andb
xor
shll
push
dec
xchg
mov
divl
das
cmc
pushf
lcall
hlt
ret
out
adc
push
fdiv
rorl
imul
loope
sbb
xchg
in
sbb
add
lahf
lahf
ja
out
pop
xlat
out
and
popf
jle
in
ss
dec
push
lahf
or
jecxz
enter
mov
add
inc
pusha
inc
mov
xchg
lods
lret
in
insb
lock
rcll
int
inc
rol
iret
insb
test
inc
push
push
xor
clc
andl
sub
jnp
cli
and
mul
push
les
mov
mov
fdivrl
jns
movsl
out
inc
int3
adc
sub
test
push
push
scas
cli
and
jge
sbb
or
andb
add
mov
and
aam
and
push
mov
in
fidivl
mov
outsb
mov
push
sahf
and
xchg
clc
inc
add
push
dec
add
pop
adc
jp
xchg
push
adc
mov
mov
cmp
test
jp
mov
push
mov
pop
lret
mov
fsubrs
pushl
sahf
mov
nop
sub
fidivrs
push
mov
push
xchg
stos
movsl
jle,pn
jo
jecxz
mov
and
push
mov
aas
cmp
mov
imul
dec
cltd
xchg
ret
jg
add
xor
add
xchg
aas
insb
ja
div
cmc
popa
ljmp
mov
jne
mov
cmp
loope
popf
ds
xchg
and
mov
call
mov
pusha
sub
call
xchg
add
leave
mov
push
repnz
jb
lcall
push
lcall
fiaddl
rol
inc
stc
iret
push
push
mov
jge
shlb
mov
mov
fld1
xchg
mov
push
ljmp
push
xorl
int
pop
mov
lods
lea
mov
push
out
or
sbb
xor
addr16
or
call
insl
in
or
add
hlt
cmp
sub
or
mov
xor
icebp
push
push
sbb
add
cli
clc
popf
hlt
inc
adc
out
cmp
mov
int
das
jle
xor
xlat
int3
fistpll
pop
inc
roll
pop
xor
push
rcrb
fmull
sbb
ljmp
in
es
pop
push
xchg
jge
mov
mov
pop
inc
out
pop
mulb
and
leave
and
cmp
or
jnp
stos
mov
leave
mov
cmp
mov
sub
repnz
in
adc
push
pop
lods
xchg
sti
lods
std
jo
clc
insl
aad
jl
cmp
mov
in
filds
dec
dec
mov
mov
mov
xchg
inc
in
sub
inc
dec
adc
push
sbb
pusha
lods
scas
cmp
dec
jge
subb
jo
stc
fsubs
pop
inc
sbbl
scas
sbb
movsl
mov
addl
cmp
js
and
push
pop
out
adc
pop
xor
test
mov
je
inc
lcall
icebp
iret
mov
add
rcrb
mov
inc
pop
inc
pusha
push
xorb
xchg
sub
test
ret
shlb
inc
xor
aas
mov
in
inc
pushf
push
jae
cltd
mov
cmp
adc
call
mov
ljmp
je
shr
cwtl
es
adc
push
insb
sbb
add
cmc
sbb
lahf
cmpsl
xchg
add
push
dec
adc
int3
adc
and
fsubrs
add
pop
add
mov
xchg
xchg
mov
aad
inc
and
test
push
add
or
mov
cmp
addr16
pop
aas
mov
jp
xor
rcrl
lods
insb
nop
sbb
or
pop
xchg
mov
mov
rclb
shl
cmp
xor
fbstp
cmp
xchg
push
mov
dec
add
rcl
rclb
push
rol
jo
addb
imul
pop
leave
scas
in
add
cmpb
data16
add
push
inc
mov
dec
test
gs
ret
fiadds
rcl
adc
sarl
adc
adc
repnz
lea
dec
jbe
out
xchg
lea
adc
push
sub
mov
stc
ret
push
mov
xlat
dec
andb
fwait
test
in
leave
xchg
xchg
pop
test
inc
ret
inc
fimull
bound
mov
pushf
push
pop
fidivs
inc
and
xor
call
hlt
outsl
neg
sub
lods
dec
add
adc
out
mov
rclb
stos
jns
cmp
outsl
jo
or
and
jno
loopne
sub
test
mov
icebp
mov
pop
xchg
mov
pop
movl
inc
cmp
jle
test
add
adc
and
icebp
mov
aad
fistpll
dec
mov
cmp
roll
pusha
xor
arpl
lods
popf
xchg
xchg
sub
mov
in
popa
pushf
lahf
inc
lods
std
push
jmp
movsl
pop
cmp
push
leave
sbb
inc
sub
lods
sti
stc
scas
push
in
push
out
fimuls
add
sub
lds
test
fistpll
leave
push
cmp
aaa
cwtl
aad
mov
inc
adc
outsl
sbb
outsl
mov
out
dec
pop
jno
push
lods
xchg
sbbl
cmp
adc
icebp
and
jno
push
push
int3
mov
pop
xlat
push
inc
add
cmp
xor
xor
xor
jns
insl
lret
fldenv
imul
cld
loope
cld
cltd
dec
xchg
mov
cld
in
test
fdivrs
pop
sub
or
pop
clc
push
xor
mov
xchg
enter
mov
dec
sti
sub
fucomp
mov
and
mov
push
cwtl
imul
adc
aam
adc
sub
jmp
aas
je
mov
stc
test
frstor
insb
cmp
sub
dec
push
lds
fdivr
leave
adc
adc
inc
dec
les
lods
rcr
pop
dec
xor
cmp
jnp
into
cmpsb
enter
inc
xor
or
hlt
test
adc
push
and
xor
or
fwait
xchg
pushf
mov
jnp
imul
shlb
xlat
xchg
fistpll
or
ss
std
pop
scas
adc
cld
fstpt
mov
or
fwait
mov
pop
xor
sub
les
dec
xchg
and
es
mov
sub
mov
and
nop
dec
cmp
sbb
push
inc
sbb
mov
je
mov
fcoms
lock
add
pop
jnp
fwait
loopne
sbb
mov
push
mov
ljmp
lds
xchg
ds
mov
imul
inc
roll
mov
cmp
in
xchg
and
pop
mov
repz
push
dec
popf
rorl
das
dec
ret
mov
mov
jp
icebp
test
orl
es
mov
sbb
xor
mov
lahf
mov
ret
nop
shll
add
mov
mov
push
subl
xlat
push
ret
pusha
xchg
pop
or
xorb
test
and
notl
lahf
dec
xchg
push
iret
lcall
ficompl
lret
inc
mov
xor
movsl
imul
lods
iret
popa
pop
lock
fs
mov
es
jmp
imul
mov
mov
aam
or
push
les
dec
pop
and
rcrl
jg
or
adc
fnstenv
adc
add
mov
and
out
ljmp
push
jg
int
or
push
xchg
push
and
loop
sub
sub
sbbl
enter
push
repz
dec
adc
pop
inc
into
ja
inc
arpl
cmp
imul
fsubrl
xlat
mov
jns
add
xor
addr16
xor
sub
sbb
addr16
adc
addr16
movb
adc
pop
movsl
adc
test
out
pop
jne
and
test
in
mov
fmulp
lods
dec
mov
push
cmp
sub
jbe
add
jae
inc
mov
and
xlat
call
sbb
mov
pusha
sarb
sbb
inc
mov
pop
aad
mov
sub
push
aaa
repz
jecxz
adc
and
adc
add
in
fmuls
sbb
lods
loope
or
sub
sbb
push
divl
inc
mov
jbe
sbb
and
dec
cmpsb
jo
xlat
call
inc
mov
ret
cmpsb
inc
inc
adc
fistps
jl
cmp
adc
sub
dec
sti
mov
xlat
loopne
roll
ror
call
ss
fs
or
jae
mov
lods
pop
push
add
xlat
mov
and
je
sti
repz
inc
cmpb
movsl
jmp
lock
mov
sub
mov
je
aad
mov
lahf
push
push
scas
in
pop
lahf
mov
fwait
ret
mov
jo
sub
inc
inc
push
les
out
and
pop
in
mov
pop
dec
fcmovu
add
xchg
and
cmp
pop
mov
inc
xlat
sub
push
lods
jecxz
sbb
jno
cmpsl
lds
fdiv
jne
push
popa
fwait
push
push
lods
push
das
mov
pop
adc
cmc
sub
addr16
add
push
jnp
push
cwtl
xchg
mov
scas
pop
adc
cltd
hlt
mov
sbb
std
add
cmp
dec
xchg
push
lahf
aas
add
mov
dec
xchg
xor
call
loopne
mov
arpl
cmp
dec
in
jmp
pop
inc
jmp
fimuls
pop
mov
xor
out
add
in
fisubrs
xor
rcrl
mov
dec
daa
jg
pop
add
and
lds
fldl2t
mov
push
outsl
cmc
popa
test
popa
subb
in
mov
fsubs
out
push
rol
jge
sbb
insb
or
xchg
lret
pop
roll
xchg
nop
inc
pop
or
cltd
fcmovnbe
xchg
mov
incl
mov
mov
dec
fidivl
pop
adc
mov
push
aam
jle
imul
xchg
outsl
mov
mov
xchg
jmp
repz
jae
sub
shrl
inc
insl
or
in
test
rolb
and
inc
dec
lret
push
xchg
stos
mov
jo
jo
mov
xchg
mov
dec
cmp
or
mov
jmp
mov
mov
sbb
jg
lds
lods
sbb
mov
enter
fistps
daa
sbb
sub
sub
stos
jl
push
ljmp
mov
pushf
sbb
or
mov
xor
lret
leave
jb
js
or
dec
adc
push
pop
scas
jge
mov
cmpsl
loopne
pop
pop
lea
fldpi
enter
jae
daa
pop
dec
mov
mov
stc
inc
push
and
ror
int3
push
stc
dec
imul
add
call
arpl
push
mov
cmpsb
lret
jp
mov
sub
sub
push
cs
stos
inc
xor
pushf
outsb
iret
daa
je
pop
ret
out
sub
pop
mov
out
stos
adc
pushf
lock
pop
dec
and
dec
loopne
mov
scas
cwtl
pop
and
aam
and
and
arpl
fisubs
int
sbb
jl
rolb
pop
jge
fucom
jl
push
scas
sti
int3
sahf
int3
add
sbb
push
adc
mov
inc
jns
shl
dec
dec
pop
jg
ror
pop
jmp
fstpl
mov
adc
jge
xor
jns
cmp
int
aaa
das
ja
mov
test
and
adc
dec
jmp
ret
inc
mov
cmp
fsub
jecxz
inc
std
insb
cmp
icebp
call
movsb
dec
lahf
shlb
mov
xchg
jp
xchg
sahf
fbld
pushf
sahf
ljmp
mov
ljmp
cmpsb
mov
add
and
ja
mov
insb
loop
jl
sub
rcrb
sti
add
arpl
adc
je
fsubrs
add
jecxz
pushf
mov
mov
cmp
inc
out
jnp
outsb
hlt
pop
jno
arpl
inc
cs
mov
cmpsb
mov
add
stos
inc
das
in
adc
jne
add
xchg
jne
test
hlt
sbb
fwait
imulb
xchg
xor
pop
cwtl
std
dec
mov
jns
mov
cmp
mov
add
jo
cmp
fsub
xor
xchg
mov
enter
outsl
js
xchg
imul
add
imulb
andl
push
cwtl
pop
bnd
js
push
xlat
jnp
xchg
cmpl
jmp
cs
inc
js
inc
sbb
adcb
cwtl
outsl
fldl
in
fmul
cltd
mov
sar
add
faddp
or
lahf
xor
sub
int3
and
gs
sbb
sub
push
ficomps
xor
sub
mov
stos
mov
inc
cmp
sbbl
push
lds
arpl
sbb
mov
or
dec
and
test
les
icebp
imul
mov
shrb
js
xor
pop
push
shlb
sbb
pop
lret
pop
mov
pop
lret
jne
shrl
iret
sbb
sbb
bnd
xor
dec
sti
and
int3
mov
test
nop
mov
mov
sub
jge
add
shr
test
cmovs
pop
pmaxsw
iret
pop
mov
pop
pop
inc
xor
push
je
fsub
nop
or
jle
enter
sbb
ljmp
test
pop
sti
test
fmull
cmp
and
xor
cwtl
sbb
or
out
sar
repz
push
test
xlat
adc
fdivs
sar
jno
inc
pop
cmp
add
dec
out
test
out
outsl
push
js
ret
cli
sbb
lds
popf
pop
lea
into
scas
scas
sub
pushl
pop
aaa
sub
ds
into
mov
xor
sbb
push
movl
imul
lret
mov
out
sub
jns
or
mov
cs
icebp
mov
in
adc
mov
sbb
orb
in
pop
gs
adc
sub
rcr
gs
xchg
jno
inc
jae
hlt
ds
ss
xor
lret
rcrb
int3
jne
mov
pop
adc
jne
ljmp
add
outsl
imul
dec
jo
or
inc
mov
clc
jb
sub
cmp
cmp
xchg
nop
idivb
cli
push
cmp
mov
test
jnp
das
outsb
cmp
sarl
sbb
inc
shrl
rol
mov
push
fcmovnu
into
andnps
mov
pop
sub
loop
mov
into
rcll
or
aas
pop
cmp
data16
stc
in
repnz
js
pop
nopl
or
out
test
mov
mov
iret
jecxz
rclb
cmp
fisubl
lahf
push
cmp
call
cwtl
and
pushf
out
cmp
mov
mov
fdivrl
std
jmp
loop
xchg
cltd
and
jge
push
jns
es
movsb
icebp
pop
fistl
mov
jno
outsb
cmpsb
daa
mov
shr
clc
lods
fwait
leave
jne
jae
push
enter
pop
push
and
push
clc
or
jle
in
hlt
loop
icebp
add
cmp
les
pop
test
int
iret
sub
daa
pop
sbb
test
out
addr16
je
cmp
push
mov
ret
int3
pop
or
adc
popa
mov
dec
add
cmc
mov
xor
aad
dec
rcr
cmp
push
sbbl
lea
jns
and
push
push
adc
and
mov
push
js
mov
xor
test
enter
lcall
iret
and
sbb
clc
test
imul
pop
addr16
iret
jmp
sbb
daa
ljmp
pop
outsl
jge
mov
cmpsb
jnp
cmp
mov
filds
jecxz
jle
imul
lret
pop
mov
insb
cmp
sub
adc
mov
das
lods
mov
and
rorl
data16
jo
pop
orb
stos
xchg
gs
out
xor
fwait
xor
sub
ja
imul
jb
mov
or
mov
fildll
push
mov
negb
sub
out
subl
xor
mov
xchg
adc
jns
push
rorb
and
loop
test
jp
mov
xchg
clc
inc
inc
add
repnz
mov
mov
xchg
xor
call
pop
mov
jae,pt
pop
in
popf
movsl
cmp
sbb
mov
cmpsl
and
inc
jns
lods
popa
dec
cmp
test
dec
pop
imul
mov
or
inc
xor
dec
sub
add
lret
bound
mov
lods
mov
or
icebp
jmp
push
jmp
push
cmc
jecxz
fucom
ficompl
orb
mov
idiv
int
jp
jae
xchg
aam
jo
jne
mov
inc
dec
sahf
or
das
mov
popf
in
push
lret
out
add
mov
ficoms
push
cmpsl
ljmp
sbb
or
out
cs
mov
lds
out
push
in
inc
ljmp
lea
ret
xchg
push
jno
xlat
dec
jno
or
xchg
push
ss
lahf
shrl
dec
xor
cmp
scas
cltd
js
pop
ja
mov
or
das
sbb
mov
int
pop
gs
mov
mov
jge
mov
movsb
jbe
sub
scas
xlat
jne
adc
ljmp
cmp
movsl
add
imul
and
mov
lcall
imul
loopne
push
loop
dec
in
std
repnz
xchg
cmp
leave
xor
scas
fwait
lea
mov
pop
mov
mov
cwtl
dec
adc
cmp
push
lcall
das
jle
mov
loope
mov
pop
add
and
sti
lret
mov
ret
push
jo
movsl
mov
push
add
or
jae
pop
popa
sahf
icebp
and
mov
lods
andb
add
sub
ror
mov
dec
push
in
mov
cmp
data16
gs
pop
int
pop
ds
pop
jle
mov
and
fwait
data16
call
das
cmpsl
addr16
mov
xchg
dec
inc
inc
dec
and
dec
xor
lahf
test
rorl
inc
push
iret
dec
add
jmp
sub
aad
ret
jle
and
or
lock
pop
lcall
movsl
negl
scas
ret
adc
cltd
sub
sub
jmp
xor
fnstenv
adc
xor
aas
ret
stc
push
std
dec
pop
mov
adc
popl
add
jnp
sub
push
pusha
sbbb
pop
mov
ss
or
and
js
popa
mov
cwtl
loopne
dec
jne
out
icebp
stos
sbb
loope
mov
repnz
mov
iret
out
testb
rol
pop
imul
xchg
xchg
and
xor
int3
insl
fcoml
lahf
pop
mov
mov
sub
je
cmp
call
dec
sub
rcrb
xchg
subb
repnz
lods
dec
xor
inc
cmp
and
in
mov
cld
cmpsb
rclb
jne
pop
add
ret
jecxz
jmp
adc
jns
rol
scas
lods
mov
add
jmp
fcompl
popa
stos
stc
or
or
jae
push
mov
je
test
arpl
mov
sbb
sbb
movsb
or
or
imul
inc
aad
push
pop
loope
xlat
and
push
mov
lret
xchg
mov
xlat
fcoml
jbe
in
mov
dec
pop
daa
lahf
js
xlat
es
cmp
aad
js
xchg
or
int3
inc
mov
push
adc
xor
test
xor
mov
xor
shrb
pop
out
mov
push
scas
incl
dec
push
push
pop
dec
lahf
lods
in
cli
sub
loope
ja
mov
jle
int3
and
bound
fnstsw
jbe
hlt
and
push
ret
outsb
nop
add
lcall
stos
add
loop
sbb
iret
jns
iret
cmp
in
sub
fpatan
inc
pop
pop
sbb
lret
lret
fucompp
push
push
call
xchg
sahf
xor
movsb
icebp
fadd
adc
push
loope
outsb
sub
out
fwait
jle
push
mov
scas
movsb
jge
je
add
subl
inc
dec
pop
faddl
and
insb
int3
hlt
cs
xor
jne
aam
mov
fisubs
mov
rcl
pop
bswap
fsubrl
or
and
xlat
pop
pop
clc
inc
scas
test
roll
push
push
mov
fcom
repz
push
jg
sub
sbb
lock
jbe
pop
sbb
inc
sahf
outsl
pusha
cmp
out
out
inc
clc
cmc
fisubrs
sbb
xor
leave
push
adc
xor
mov
xchg
cltd
ja
les
mov
mov
mov
fmuls
adc
xchg
cmp
inc
aam
mov
pop
fidivrs
gs
or
mov
jo
insb
or
inc
sub
xor
and
mov
adc
aam
mov
sbb
ror
out
out
and
mov
call
fsubl
sbb
push
enter
movsb
add
jb
shrb
shlb
mov
call
leave
test
rcr
pop
push
sbb
inc
add
jmp
jnp
call
pop
jecxz
sub
xor
mov
inc
shr
dec
cli
loope
clc
divl
cmpb
push
inc
inc
addr16
inc
sbb
cmpsb
addr16
test
mov
in
jnp
inc
sbb
fcoms
mov
sub
jb
loop
adc
pop
cmpb
sbb
popf
dec
div
imulb
fcomps
adc
call
dec
repz
lret
lret
je
pop
movsb
pusha
shr
mov
das
out
mov
or
inc
cs
les
xorl
in
xchg
or
pop
cwtl
arpl
ljmp
push
lcall
add
pusha
repz
xor
and
cmp
jo
lods
cmp
faddl
and
jo
or
ljmp
or
mov
arpl
dec
scas
int
lret
movsb
js
shr
jno
cmp
loop
sahf
test
xchg
xchg
decl
aas
mov
push
stc
add
mov
hlt
add
jns
add
xor
add
mov
fnstcw
cmp
jle
mov
pop
fimull
bndldx
xchg
repnz
jmp
fcomps
testl
pop
in
cmp
or
push
jno
mov
roll
mov
inc
nop
mov
jo
xchg
std
lea
lret
sbb
inc
lret
shr
mov
fisubs
jge
cmp
or
insl
inc
stc
repz
movsl
push
and
pusha
jo
ret
pop
push
popf
ja
mov
xlat
imul
paddsb
sti
shrb
arpl
xchg
fidivrs
and
jbe
das
inc
push
cmp
shlb
arpl
mov
mov
cmp
sbb
fisubl
fldt
dec
or
bound
or
mov
js
add
fcmovu
adcb
push
pushf
adc
mov
data16
add
sbb
mov
push
test
repnz
rcrb
stos
jle
pop
pusha
aad
jno
clc
and
push
std
adc
in
outsb
lea
mov
int3
xchg
cwtl
and
imul
orb
scas
out
jnp
int
adc
inc
out
scas
sbb
inc
cmp
adc
jnp
out
mov
mov
xchg
pop
pop
clc
sub
cmpsl
cli
or
cld
adc
lret
xchg
daa
jb
push
sbb
jmp
sub
mov
loopne
adc
jae
push
cwtl
dec
mov
aam
stos
mov
mov
xor
pop
cmp
sub
dec
or
mov
or
shl
loopne
mov
rclb
idivb
stos
jbe
rorl
mov
sahf
stos
popa
inc
pushf
movd
icebp
mov
push
aas
pop
add
and
or
int
addr16
enter
jo
inc
insb
clc
insl
or
dec
sbb
mov
aaa
popf
cmpsl
pop
in
push
add
dec
mov
cmpsb
mov
gs
call
aam
das
neg
arpl
dec
dec
popf
cwtl
std
push
xchg
mov
lahf
pop
mov
shrw
aaa
cltd
cs
add
imul
pop
fwait
mov
jp
ficoml
add
push
std
icebp
lock
xorl
pop
bound
cmp
sbb
dec
subl
fsub
lea
mov
cmp
aam
dec
imul
les
mov
rcrl
int
repnz
push
or
cmp
pop
mov
mov
imul
jae
shlb
fnstenv
jle
cli
dec
hlt
loopne
dec
mov
sbb
lods
dec
jmp
dec
push
inc
loop
lcall
adc
in
imul
xchg
or
jne
repz
xchg
insl
xchg
inc
xchg
adc
mov
and
xor
and
push
rcll
shll
mov
mov
jp
xor
cs
sbb
mov
mov
add
shl
add
add
mov
sbb
xor
test
lea
inc
bound
call
insl
pushf
test
jl
or
icebp
inc
imul
push
xchg
ljmp
jns
mov
cmp
dec
or
fsts
mov
in
jno
fisubrs
and
cld
lret
cmp
adc
rcrb
lds
call
mov
and
rdpmc
in
fwait
mov
fisubrs
ja
mov
cs
icebp
xor
cwtl
adc
dec
xchg
add
lret
cltd
xor
dec
loopne
repz
inc
pop
dec
jmp
movsb
pop
push
dec
add
jb
movsl
sub
push
inc
clc
inc
push
pop
insl
orl
fisubrs
jae
and
aaa
jbe
fisubrl
mov
dec
pushf
dec
jmp
pusha
les
mov
lahf
cmc
dec
icebp
je
inc
das
cli
ja
fwait
push
and
test
sahf
mov
shrl
cmp
pushf
lea
sub
data16
xchg
mov
fcoml
dec
add
and
out
sbb
scas
cmp
cmp
and
cltd
je
inc
out
ja
mov
dec
lds
dec
imulb
inc
pop
movsl
movsl
and
jp
jg
std
push
and
mov
add
shrl
push
sti
pop
jo
add
daa
pop
lret
and
jns
outsb
scas
mov
outsl
pmaxsw
imul
push
js
ret
pop
xorl
mov
and
cmpsb
sti
lcall
cli
jne
or
jno
jle
imul
mov
mov
out
enter
lods
outsl
adc
mov
fwait
sbb
pop
dec
sbb
pop
fisubl
pusha
aad
inc
mov
pop
push
mov
inc
test
mov
jge
cltd
lcall
lods
insl
cmp
cmp
repnz
mov
jno
out
test
nop
pop
popf
enter
push
ja
add
adcl
mov
outsl
sub
jo
xchg
ds
adc
xor
pop
movsb
aad
mov
add
insl
test
push
std
subl
xor
insb
scas
imul
add
push
hlt
test
cmp
push
addb
or
outsl
cmp
xchg
or
pop
addr16
lea
enter
push
pop
rcl
push
imul
int3
imul
out
divl
pusha
enter
fmuls
lret
aam
sbb
push
dec
outsl
mov
inc
and
mov
cmpsl
fs
lcall
mov
cmc
fildl
mov
and
out
xchg
jle
cmp
jo
lods
lds
cmp
popf
pop
jnp
xchg
sub
rcr
add
mov
sarl
add
push
dec
cmp
fwait
push
fldenv
sbb
aaa
sub
pop
pop
add
pop
popa
aas
jl,pn
cmp
adc
jp
push
mov
popf
jns
mov
push
mov
sbb
sub
ja
loopne
mov
inc
ja
inc
sub
mov
cmp
stos
sub
subb
out
xchg
dec
addb
mov
shlb
call
int
rcrb
gs
loopne
inc
xor
adc
and
enter
pop
pop
jg
iret
sub
push
xchg
or
cmpsl
mov
adc
push
push
jmp
jb
xor
rclb
sahf
pop
popa
jnp
cmc
mov
jnp
insb
xor
adc
sub
push
adc
jnp
repz
fs
xor
stos
jb
lret
cmp
mov
push
ja
and
add
fdivs
mov
cmc
cld
iret
inc
sub
xchg
xchg
inc
push
jl
out
cmp
mov
dec
addl
lods
xor
sub
leave
lock
mov
scas
das
movsb
xor
xchg
jp
adc
test
or
imul
sahf
andb
fiadds
lret
jo
scas
sub
pop
inc
andl
sbb
sub
adc
xor
dec
jnp
and
imul
cmc
mov
clc
pop
xchg
loopne
push
adc
lret
sub
xchg
cwtl
and
push
call
mov
push
into
hlt
insb
mov
push
push
adc
mov
popf
gs
cltd
push
iret
adc
mov
mov
and
stc
push
jne
popf
and
cmp
cmc
sub
ret
xchg
or
idivl
fstpt
sub
push
xlat
sub
or
pop
not
or
mov
mov
fwait
jno
mov
mov
bound
out
addr16
stos
push
leave
loopne
jge
push
jecxz
enter
cmp
addr16
sbb
xchg
mov
xor
mov
push
sub
aaa
xor
js
mov
ljmp
or
xchg
inc
cmp
sub
lods
addl
pop
cwtl
cmp
add
xor
and
xchg
sub
fildll
push
add
leave
push
lea
stos
pop
lods
cmp
jl
dec
aas
cmovo
xor
inc
and
mov
movsb
into
addl
mov
xchg
popf
popa
into
jb
arpl
cmp
add
ds
mov
xchg
mov
imul
adc
iret
xor
ret
adcl
pop
cwtl
mov
loopne
idivl
jmp
xchg
pop
push
sahf
mov
pop
jmp
loopne
out
mov
rorb
movb
pop
rcr
out
ficompl
xchg
or
cltd
cmp
lds
pop
out
ret
in
sub
mov
add
xchg
pop
sub
scas
movsb
adc
pop
shl
jbe
std
sti
dec
jns
add
fs
lahf
rclb
fcoms
xor
or
sbbb
out
pop
lea
cmp
pop
fsubrl
aam
movsl
dec
jae
fdivrp
bound
repnz
or
inc
test
ljmp
dec
push
xchg
jbe
xorb
rorb
jmp
imull
out
or
shll
xchg
cmpl
inc
dec
dec
dec
cmpsb
popa
sbb
cmp
outsb
jge
adc
mov
lret
add
test
in
jne
lds
jp
ss
inc
das
adc
call
loope
lods
add
pop
pop
mov
mov
cmp
push
cmp
test
dec
int3
mov
mov
bound
xlat
mov
scas
or
idivl
mov
jb
pop
leave
adc
mov
and
les
fstpl
push
mov
jns
cmc
xor
dec
xchg
outsl
lret
jmp
xchg
cwtl
leave
data16
mov
cmp
fucomp
cmpsb
push
adc
or
icebp
mov
imul
rorb
mov
mov
les
stos
outsb
fsubs
jno
loopne
and
sub
hlt
out
mov
jmp
lods
lcall
lahf
fs
bound
cmpl
leave
pop
fdivrs
ja
push
sbbb
cmp
mov
xor
outsl
push
jns
xor
cmp
dec
lahf
addr16
cli
sbb
iret
int3
idiv
aad
mov
mov
xor
jecxz
or
lea
ss
or
into
mov
test
rcr
data16
clc
je
loope
fsub
or
stos
push
out
mov
insl
mov
sbb
mov
mov
les
pop
mov
xor
pop
pop
and
cmp
dec
cmp
push
sub
scas
mov
lods
xorl
xchg
notl
aas
add
aam
jge
inc
adc
jbe
jge
or
add
mov
xchg
cld
fildl
leave
jecxz
loope
adc
and
mov
ret
cli
add
mov
aad
push
rcll
jne
cmp
data16
std
pop
push
xor
addl
jne
inc
inc
repz
add
mov
push
pushl
sbb
adc
and
jl
sbb
pop
lods
lods
jg
sahf
pop
pushf
cltd
dec
mov
inc
ss
ret
jnp
mov
jne
lock
out
dec
jns
jle
lret
mov
jle
dec
in
enter
sub
inc
sub
push
mov
rcl
lods
jns
shrb
mov
cmp
add
into
ja
ret
inc
dec
lcall
add
popf
mov
andb
jo
lock
sub
mov
jle
out
pushf
xchg
mov
xchg
adc
xor
cmp
std
syscall
sbb
pop
jmp
fimuls
loopne
addb
decl
test
pushf
std
sti
and
sarl
push
dec
sub
mov
xlat
in
mov
hlt
jb
dec
push
sbb
cmpsb
mov
es
push
repz
mov
js
rcrb
mov
pop
jo
aas
popa
push
jnp,pn
lcall
movsl
nop
stos
sarb
loop
call
and
pop
or
mov
fsubrp
sbb
lahf
sbb
ds
mov
ds
pop
dec
data16
jl
mov
add
mov
mov
xchg
push
mov
sbb
fwait
or
andl
repz
addr16
dec
mov
mov
nop
xchg
xchg
jnp
into
xchg
cli
frstor
mov
adc
loope
fsubrl
mov
push
pusha
and
jmp
ljmp
lret
xchg
icebp
lcall
std
fwait
cmp
les
int
fsubrs
cli
and
sbb
jne
ljmp
je
out
mov
addr16
jge
mov
rolb
in
jne
stos
cs
jg
or
mov
pop
daa
fimull
shll
shl
mov
cwtl
xchg
inc
les
mov
shrb
pop
xor
sbbb
cld
enter
fs
in
cwtl
test
sub
add
xchg
pusha
fidivs
aas
lods
movsb
push
mov
rorb
jecxz
in
sub
mov
mov
pop
and
and
fucom
fmull
insb
out
mov
jle
dec
or
inc
rcpps
mov
sub
das
sub
dec
sti
loop
cwtl
mov
pop
xchg
cwtl
sbb
pop
fiaddl
shl
inc
adc
hlt
cmpl
pop
sbb
dec
repz
ja
cld
ss
cmp
orb
and
ja
pop
int
sub
dec
xchg
mov
jge
fidivrl
cmp
add
mov
ret
jecxz
push
xchg
lret
enter
dec
cs
insl
jae
in
stos
sub
xlat
mov
cmp
fs
push
jnp
pop
mov
push
nop
movsl
inc
int3
arpl
ja
inc
mov
fiadds
stos
test
stos
imul
mov
outsl
loop
and
or
scas
add
leave
daa
jecxz
mov
xchg
lods
fwait
int3
cmpsb
mov
pop
cmp
mov
jae
jbe
je
orl
add
movsb
or
adc
jne
mov
outsl
push
movsl
decl
nop
sarl
arpl
pop
repnz
subl
dec
mull
and
das
jo
adc
ss
add
cld
call
sbb
jle
pop
rcrl
js
add
fwait
push
ror
xchg
je
out
cmp
mov
call
xchg
push
and
sub
add
scas
stc
and
xor
inc
xor
loopne
push
in
push
ffreep
xchg
xor
jg
movsb
lahf
pop
test
in
mov
jmp
mov
adc
out
insl
sub
xchg
adc
negb
inc
sti
sarb
adc
nop
inc
jns
stos
aas
jle
push
pop
push
mov
rcll
fidivl
mov
outsw
cwtl
cmovl
jge
fiadds
push
push
jne
js
add
xchg
push
mov
fwait
pause
push
cwtl
mov
ret
add
pushf
pop
divb
mov
hlt
int3
data16
cli
cwtl
icebp
xor
push
and
xchg
negl
cmp
repz
lea
jl
push
jmp
xlat
in
xor
sbb
pushf
xchg
jmp
jno
sbb
es
je
divb
pop
mov
xchg
shr
in
mov
mov
add
sub
cltd
jne
xchg
lods
mov
mov
andb
xchg
add
int
test
aam
xorb
cmpsb
popa
xor
addb
push
mov
fadd
mov
inc
and
jae
gs
xchg
or
int3
pop
sub
orl
cld
mov
rorb
adc
mov
mul
mov
adc
xor
inc
adc
mov
cmpsb
ftst
adc
and
pop
xorb
mov
data16
std
pop
fcomi
sahf
mov
jge
rclb
rorb
push
out
mov
movsl
pop
gs
popf
mov
test
push
mov
fldl
out
fldt
dec
push
test
sub
sub
fsubr
push
fwait
push
mov
and
inc
inc
cli
ret
xor
xchg
loopne
inc
andl
mov
in
loop
jmp
or
add
jle
jo
int3
cwtl
enter
xor
pop
into
mov
ret
push
cwtl
or
pusha
push
test
fdivrl
jae
mov
fidivrs
lret
imul
jne
push
dec
popf
cmp
sbb
enter
out
xchg
aam
fstpt
adc
pop
xchg
jp
pop
imul
sub
mov
sub
fisubs
xor
jge
pop
pop
fldl
mov
jge
rcrb
test
cmp
popa
jecxz
subl
cmp
inc
push
push
xor
xchg
aam
imul
daa
sbb
xchg
lret
push
in
in
cwtl
out
jmp
push
inc
loop
push
adc
insb
dec
in
sub
adc
lds
xchg
and
leave
dec
jle
movntq
push
pushf
jns
mov
and
insb
and
mov
insl
outsb
decl
add
fsub
idivl
sub
icebp
xchg
in
inc
xchg
add
push
mov
call
ficoml
fwait
push
pop
ja
adc
shll
decl
data16
cwtl
lret
pop
mov
inc
mov
sub
mov
jmp
mov
mov
jno
dec
and
int3
test
sahf
inc
push
lea
sbb
adc
adc
xchg
add
mov
push
and
cmp
call
stos
leave
push
dec
dec
dec
mov
inc
push
and
add
ficomps
sub
inc
jg
iret
jg
jg
xor
aaa
pop
sbb
add
sub
dec
aad
iret
jecxz
mov
addr16
outsl
pop
mov
ret
test
adc
in
adc
mov
mov
aaa
sbb
leave
mov
mov
int3
pop
loopne
fwait
mov
je
sbb
rorl
dec
pop
lods
movsb
test
and
sbb
pusha
xor
jnp
fsubrl
or
add
dec
cli
loop
mov
pusha
test
add
mov
movsb
hlt
test
lret
inc
out
aaa
adc
cli
pushw
sbb
ds
mov
lahf
into
int3
psadbw
cmp
lcall
adc
push
daa
sbb
inc
cwtl
loopne
mov
loope
or
and
jnp
push
sahf
loope
sub
mov
and
xor
dec
adcl
sbb
das
mov
lea
hlt
mov
iret
sub
enter
jge
scas
loope
xchg
js
sbb
fwait
shll
dec
jno
popf
adc
push
jl
jne
and
push
cmpl
add
pop
imulb
xchg
jne
lds
mov
stc
dec
loop
cmp
inc
jbe
xchg
insl
orl
sbb
sti
movsb
loope
repnz
jb
xor
jbe
sbbl
out
out
jne
mov
pop
inc
cmpsl
arpl
cs
mov
sahf
out
pop
sub
sbb
xchg
dec
xor
out
inc
lods
nop
mov
inc
xchg
mov
xor
pop
push
pop
or
mov
add
mov
jbe
push
in
adc
add
aaa
cmpl
repnz
add
jne
mov
rcrl
or
icebp
dec
dec
out
cltd
xorb
testb
stc
icebp
inc
int3
push
jbe
push
lcall
sbb
in
addr16
dec
jne
push
sbb
out
mov
lldt
and
fs
inc
and
dec
xor
mov
pop
mov
adc
pop
imul
lods
lock
dec
cmp
stc
xor
push
adc
or
push
enter
sbb
and
jne
pop
add
push
add
sub
fsub
jne
inc
lea
cmpxchg
inc
jo
xchg
lock
jb
fcmovb
int3
mov
xlat
dec
mov
popf
idivl
adc
sti
dec
repz
mov
mov
push
hlt
jge,pt
in
arpl
add
cmpsl
dec
sahf
push
fildll
ret
loope
mov
cli
mov
xchg
mov
imul
and
hlt
out
test
pushf
or
pop
and
pop
jbe
outsb
rcr
and
lods
clc
pop
test
or
rcll
rclb
stos
lock
pop
sbb
sub
lods
and
pushf
mov
insl
mov
orl
xor
sahf
popa
mov
repnz
sub
add
xchg
js
pop
cmc
mov
adc
aas
inc
rolb
aad
inc
dec
ljmp
sub
ret
je
add
or
xchg
test
iret
sbb
ud0
hlt
fwait
sub
fnsetpm(287
fwait
shll
inc
push
in
test
mov
call
mov
into
pop
jecxz
dec
pop
add
lds
sahf
xchg
cmpsb
pop
mov
loop
push
insb
lcall
fnstsw
sub
fldl
imul
fistpl
jl
add
pop
xor
lock
repnz
std
nop
out
jno
int
leave
repnz
inc
xchg
test
pop
ja
loop
mov
dec
scas
sub
and
loope
dec
and
add
aad
inc
adc
mov
or
rcr
xchg
dec
and
mov
clc
insb
mov
or
mov
fcomps
hlt
xchg
xor
jb
pop
dec
mov
xchg
sbb
or
jae
call
aam
scas
scas
sbb
nop
repnz
rcrl
add
sbb
popf
mov
adc
daa
lock
add
cli
stos
stc
daa
add
sarl
cli
jmp
scas
cmp
pop
lret
xchg
inc
hlt
push
pop
imul
inc
and
mov
cmc
cmc
cmpsl
aad
xor
shr
jbe
test
lods
repnz
idivl
les
mov
xlat
cmpsl
je
mov
jecxz
nop
arpl
pop
jmp
aas
pop
pop
cli
into
adc
jp
cli
dec
xchg
ret
mov
addr16
sub
fdivrp
and
dec
mov
mov
add
xchg
in
dec
in
fistps
xor
jae
jns
pop
repz
popa
jno
xchg
push
mov
pop
or
insl
push
fbld
cmp
fsts
lcall
rorl
mov
lods
pusha
mov
fnsave
loop
sub
stc
call
repnz
mov
dec
cmovp
pop
notl
xor
pop
push
loop
pop
into
mov
xor
enter
jns
js
in
ret
mov
dec
adc
jmp
pop
inc
sub
mov
adc
lahf
shrl
shll
cs
pop
aas
iret
cmp
popa
sbbb
mov
xor
cld
inc
cmp
out
pop
notb
pop
adc
xchg
cmp
jo
sbb
ret
popl
test
pop
loope
call
cmpb
sub
nop
fdivrs
push
xor
lea
lds
dec
lret
movsl
push
out
test
cmp
mov
std
xlat
mov
mov
dec
sbb
mov
cmc
stos
or
scas
mov
jnp
pop
pop
data16
mov
nop
dec
iret
and
int3
lods
ror
pop
xchg
sahf
sbb
mov
insl
sub
mov
jge
mov
jl
jbe
add
sub
xlat
call
pop
sbb
or
lret
mov
imul
jmp
inc
jo
adc
pop
jo
frstpm(287
xchg
cmp
inc
jecxz
pusha
sbb
or
imull
nopl
adc
rcrl
inc
jns
xor
mov
test
scas
sbb
pop
dec
enter
movsb
das
addr16
loop
vmovntps
jle
pop
sti
add
std
out
jb
in
in
aas
push
and
out
or
addr16
rclb
icebp
test
mov
xchg
adc
inc
jecxz
out
or
jnp
xchg
repz
int3
and
or
push
adc
pop
mov
cld
dec
jecxz
test
sub
adc
cmp
out
push
adc
xor
and
pop
aaa
fistl
orb
sub
xchg
add
sub
xor
leave
sub
popa
aam
orl
push
pop
outsb
sbb
push
inc
sbb
shlb
mov
sub
or
add
add
or
lahf
lock
nop
inc
loope
dec
cli
cmc
dec
std
xor
aad
inc
xor
sbb
lret
add
inc
in
pop
sub
xor
jp
ds
pusha
pop
test
sbb
or
push
ja
dec
adc
inc
test
loope
mov
adc
fcompl
ficoms
mov
jne
and
nop
aad
jle
inc
out
dec
add
notb
lret
mov
adc
adc
into
ffreep
mov
lret
test
int
pop
xor
and
push
cmp
bound
std
fidivs
rolb
sub
add
fisttpl
sub
jb
shrb
jle
xor
je
push
jno
jno
pop
jp
xchg
xor
iret
cli
out
mov
sbb
lret
popf
xchg
ret
push
inc
inc
test
fiaddl
fstps
mov
mov
inc
add
sub
pop
lods
push
mov
pop
fmull
push
stos
cmpsl
pushf
sbb
mov
rcll
leave
movsb
push
mov
test
push
mov
sbb
scas
jno
xchg
repnz
xor
inc
mov
jnp
sub
nop
xchg
adc
hlt
insl
fisttpll
add
mov
test
ret
and
add
movsl
icebp
adc
mov
sub
dec
add
movsl
pusha
cmc
cltd
xor
sbb
lcall
mov
outsb
test
mov
jnp
push
leave
aaa
lahf
pusha
mov
dec
xchg
xchg
mov
inc
into
and
hlt
and
mov
pop
sbb
push
inc
arpl
jle
sub
lds
mov
ss
xor
cmpsl
bound
mov
cwtl
jmp
adc
mov
mov
sub
jbe
nop
adc
test
inc
xchg
push
shr
repnz
mov
jmp
je
or
bound
xor
xor
jp
popa
mov
stos
addr16
jno
popf
push
mov
test
or
pop
adc
out
hlt
inc
pop
push
adc
sub
mov
cmp
inc
js
and
add
sub
push
ret
out
es
sbb
vphaddwd
mov
fildll
jmp
gs
ljmp
sbb
and
ror
push
testb
xor
mov
inc
sub
lods
cmc
jo
jmp
es
lahf
enter
in
mov
int3
iret
fisubl
jae
testb
clc
popa
mov
inc
ja
cltd
xchg
jge
jecxz
mov
xchg
repz
int
mov
add
cltd
xchg
and
mov
fidivrl
ss
adc
lds
xor
cmp
lret
lea
xor
mov
mov
stc
int
aas
subb
mov
ror
fsubp
sub
into
int
movsb
mov
insb
rcrb
jge
push
mov
insl
sbb
inc
or
lcall
fcmovb
aad
negl
aas
jge
icebp
dec
imulb
add
jp
xlat
loop
pop
aad
std
and
add
cmp
ljmp
jno
push
cmp
bound
fidivl
notl
shrl
jg
aaa
xlat
add
inc
mov
and
sub
mov
push
pushf
push
jmp
stos
and
fs
push
outsb
cmp
dec
xor
and
push
popl
mov
lea
sub
dec
push
push
sub
xor
jo
arpl
rorl
or
jbe
call
movsl
and
mov
cwtl
or
add
int3
sbb
pop
adc
aad
shll
aam
sbb
push
jnp
push
icebp
shrl
jno
push
enter
rcrb
repz
fnsave
shlb
lcall
mov
cmp
lahf
cmc
test
pushf
test
mov
push
push
xchg
pop
dec
test
repnz
rorl
pop
add
mov
mov
xchg
sub
jecxz
jo
sub
cmpsl
icebp
iret
test
popw
insl
jmp
jge
sbb
ljmp
popf
lret
dec
xlat
repnz
adc
outsl
ja
push
or
aam
bound
push
repnz
iret
out
adc
addr16
jnp
cmp
in
ficomps
movsl
aad
sub
xchg
xor
dec
stos
jae
lds
inc
pop
js
call
xchg
iret
icebp
inc
mov
pop
jg
jle
daa
sarb
cs
jne
mov
push
fsubr
sbb
stos
lea
cmp
das
push
rorl
add
jl
lret
sub
repz
sarb
mov
sbb
mov
mov
mov
pop
int3
add
xchg
fs
push
mov
out
inc
pop
dec
and
mov
out
mov
call
in
add
int3
pop
ret
adc
ffreep
or
xchg
sbb
xchg
mov
aaa
pusha
jbe
bound
fisubl
mov
lahf
hlt
fnstsw
add
loopne
aas
pop
sbb
push
cmp
stc
xor
mov
inc
stos
xorl
adc
mov
and
pop
mov
sub
aam
mov
mov
mov
fcoms
out
xchg
push
dec
in
insb
adc
inc
fdivrs
and
stos
push
inc
cltd
xchg
mov
scas
xchg
jmp
in
js
pop
and
xor
icebp
adc
xchg
andb
loope
loopne
add
sub
sbb
in
adc
mov
push
dec
inc
add
add
adc
xchg
xor
leave
cmpl
mov
adc
jle
inc
xchg
insb
jl
push
leave
sti
sub
cld
stos
dec
dec
lods
cmp
mov
inc
cmp
mov
inc
inc
push
repnz
call
cli
aaa
sti
xor
pop
inc
int3
adc
add
aas
push
adc
cmpsb
pop
icebp
bound
add
rcr
xchg
gs
pop
sbb
out
xchg
mov
mov
cmp
data16
test
or
jge
or
or
xchg
movsb
mov
movsl
ss
fidivs
mov
add
out
cmp
mov
jmp
jbe
push
in
hlt
xor
nop
pop
sub
in
mov
pop
dec
aaa
pop
daa
push
jnp
xor
outsl
jmp
dec
dec
xchg
add
jb
inc
xchg
fldenv
ds
std
lock
pop
mov
mov
fbld
mov
pop
test
cmpsb
xchg
pop
lods
movsb
out
jmp
fdivrl
mov
and
push
ds
mov
icebp
ret
movsb
loop
loope
std
aam
lahf
dec
shr
pop
and
mov
pop
dec
adc
sbb
stc
mov
leave
or
test
jbe
popa
push
add
rorb
jb
cs
dec
push
inc
pop
push
or
add
imul
xor
xor
xchg
push
jmp
shrl
jb
fidivrl
int
inc
inc
test
jne
mov
xchg
push
and
loopne,pn
call
sbb
movq
loopne
loop
orl
push
mov
cmp
xchg
mov
jl
sub
xor
dec
xor
xor
mov
mov
xlat
insl
fs
adc
das
fdivrl
out
test
cmp
adc
adc
imul
pop
adc
mov
or
xor
pop
mov
pop
roll
dec
lods
nop
sbb
imul
mov
in
testb
mov
sub
icebp
rcrb
sub
sbb
push
mov
out
push
dec
and
shlb
xor
popa
es
sbb
xchg
pop
mov
sub
scas
cmp
int
xchg
inc
test
adc
cmp
loopne
inc
jl
push
push
pop
fs
or
pop
xchg
inc
mov
pop
insl
and
mov
int
pop
pop
mov
inc
or
addr16
xor
out
sub
sbb
mov
dec
inc
pop
inc
roll
data16
inc
idivl
adc
shrl
inc
mov
push
xor
add
and
imul
dec
mov
pop
mov
js
ja
je
add
adc
cmp
and
xor
jmp
mov
ror
and
outsl
adc
mov
test
ljmp
mov
mov
mov
inc
imul
stos
shll
fwait
jns
inc
jno
insb
sub
mov
lret
mov
outsl
adc
loope
jecxz
inc
or
daa
jg
faddl
push
hlt
andb
decb
inc
cld
ficomps
pop
pop
cmc
xchg
mov
jbe
mov
das
adc
nop
xchg
ret
fimull
jp
lds
enter
jnp
mov
adc
mov
shlb
jo
sub
std
cmpsb
in
sarl
decb
push
inc
adc
pop
enter
fs
sub
jecxz
jp
add
xor
sub
ret
sbb
cs
addb
jbe
xchg
mov
bound
in
mov
scas
gs
fs
mov
and
shr
mov
out
sub
lock
aas
fisttpl
or
fildl
xor
dec
popa
test
out
adc
mov
sub
addr16
fstps
mov
cli
jb
push
fmulp
dec
push
lods
cmp
push
inc
jbe
pop
push
xchg
push
rol
pop
add
or
adc
or
xchg
in
pop
push
dec
jns
or
mov
or
int
dec
sbb
mov
dec
pop
dec
sbb
adc
ljmp
insl
jb
aam
je
jbe
lcall
xchg
cld
orb
aam
mov
pop
jbe
data16
stos
mov
adc
dec
add
pop
aad
insb
cmpsb
xor
cwtl
sti
test
jnp
mov
cmpsb
lret
sub
ret
leave
cmp
mov
sbb
fisttps
sti
insb
cmp
pop
in
mov
insl
pop
cli
push
loopne
mov
mov
shll
adc
cs
jns
inc
ret
adc
inc
lods
leave
mov
cld
cmpsb
aaa
movsl
lahf
cmp
dec
push
inc
imul
outsb
mov
fnstsw
ds
in
test
xchg
cmp
add
inc
cmc
dec
add
test
lock
fiadds
in
lock
cwtl
jmp
adc
adc
std
bound
and
ljmp
mov
push
or
in
dec
int
lret
jecxz
notl
fildl
cmpsl
push
int3
pop
enter
aas
dec
xchg
iret
shlb
xchg
ljmp
arpl
jb
ja
or
ljmp
loopne
push
stos
stc
or
push
inc
bound
jl
sub
rcrb
mov
aam
push
xlat
push
push
ja
lcall
adc
xor
pop
push
in
loop
jo
sarl
mov
test
cmpsb
xchg
hlt
pop
inc
or
push
in
sub
jne
cmc
adcl
sub
test
pop
pop
xlat
adc
push
test
sbb
add
inc
aam
dec
pop
sub
insl
mov
xchg
sbb
ret
rcr
dec
ret
pop
sub
int3
test
adc
jp
idivb
lahf
mov
push
xchg
in
ss
xor
ss
push
punpcklwd
fistpll
push
hlt
xchg
out
lea
adcb
mov
je
mov
xlat
jno
pop
add
ja
mov
inc
push
int3
push
xchg
je
ret
adc
fiadds
mov
push
mov
sbb
cld
repnz
push
inc
xchg
outsb
push
jo
xchg
shrb
sbbb
fidivs
mov
adc
adc
mov
mov
push
sub
mov
outsb
arpl
jg
mov
mov
sbb
fsubs
aas
clc
jnp
cmp
test
mov
sti
test
rolb
jb
sub
dec
pusha
js
and
out
sub
loopne
std
or
pop
add
xchg
pop
insl
scas
jno
stos
shlb
sub
mov
cmc
adc
cmp
stos
int3
dec
movsl
mov
and
fstpt
cmpsb
ret
mov
xchg
cli
cmp
lcall
pushf
movsb
rclb
mov
xchg
push
sti
push
cltd
fsubrs
stc
daa
subl
shll
data16
mov
inc
jl
lds
mov
pushf
fmull
mov
mov
and
or
cli
jno
stc
mov
fisttpl
ds
in
xchg
jo
xchg
insb
cmp
inc
popf
repnz
repz
add
js
lock
rcrb
sub
mov
aaa
je
jb
jbe
push
mov
daa
jne
jge
xchg
ret
sbb
cmp
ret
enter
or
adc
sbb
mov
mov
imul
in
push
bound
pop
jle
inc
test
xchg
xchg
pop
mov
fcmovbe
pop
ret
mov
mov
lcall
loopne
pop
enter
pop
sbb
fdivrl
sahf
fsubl
cmp
push
je
sbb
xchg
jp
jno
ss
jae
sbb
dec
pusha
xorl
sub
or
inc
push
inc
hlt
fadds
cmp
daa
in
sbbl
pop
divl
ss
lret
nop
iret
in
call
popa
lahf
add
push
je
iret
and
mov
or
xor
and
pop
inc
arpl
loopne
insl
or
mov
scas
add
iret
shlb
or
hlt
rolb
cmpsl
pop
roll
popf
jl
xchg
lods
add
test
je
pop
subl
psadbw
push
scas
add
jae
push
xor
shrb
mov
jmp
test
ret
and
sbb
xor
pop
jae
rcrl
add
xchg
push
lret
rcrb
pop
push
jl
dec
add
mov
mov
imul
mov
lcall
pop
loope
push
test
mov
mov
jno
mov
dec
mov
rorb
aaa
lret
pop
adcb
dec
sbb
bound
push
cmp
add
out
shl
aam
cmpsb
hlt
leave
pushf
pop
leave
into
inc
cmp
push
and
jno
iret
lods
or
adc
das
dec
or
out
ficoms
fcmovnb
ret
je
inc
mov
push
leave
cli
xchg
js
loope
leave
cmp
pop
icebp
ds
push
loop
daa
adc
dec
inc
adc
inc
add
mov
jbe
inc
aaa
cmp
cmp
fs
test
inc
xor
dec
adc
or
imul
repnz
pop
ret
shlb
stos
popa
cs
nop
push
adc
xchg
outsb
fbld
dec
ror
movsl
mov
mov
mov
push
mov
int
lods
add
add
mov
gs
sbb
rcrl
dec
pop
fbld
shrl
sbb
mov
pushf
les
add
adc
repnz
loopne
mov
mov
add
xchg
pop
lahf
in
jp
rcl
pop
push
filds
xor
popa
scas
mov
xchg
adc
mov
push
andl
dec
in
sbb
sbb
and
mov
adc
loopne
jp
sbb
out
adc
inc
bound
inc
xchg
mov
mov
jecxz
decb
xor
int3
aas
jge
and
out
in
je
xor
inc
outsb
and
lods
jns
out
jmp
addr16
icebp
sahf
sub
ds
das
fwait
dec
or
sbb
or
iret
mov
inc
loop
sahf
call
push
adc
sbb
test
ret
js
rcr
or
adc
and
and
jne
pop
cwtl
xchg
inc
mov
mov
cmp
adc
jno
jnp
add
xor
push
xor
insb
rcrl
cmp
xor
sub
stos
insl
imul
or
mov
call
mov
xor
scas
test
and
pushf
and
mov
pop
movsb
pop
pop
imul
sahf
cmp
mov
pop
cmp
pusha
dec
adc
push
push
sub
inc
insb
aad
loop
cmpsb
punpckhwd
push
lock
mov
cmpsl
cmp
xchg
mov
mov
push
push
sbb
stos
je
sahf
sti
inc
sbb
inc
insb
adc
test
push
enter
and
sbb
lock
rcll
leave
sti
inc
and
mov
mov
in
xlat
out
push
jnp
cmp
pop
insl
xor
ss
mov
jmp
mov
inc
pop
lods
or
mov
iret
sbbl
lds
loop
pop
cmp
dec
popa
popf
sbb
das
xchg
fsubrs
jae
add
out
loopne
xchg
test
repnz
loop
mov
pop
sub
aad
mov
test
out
shrl
mov
lcall
xchg
out
inc
repnz
or
fcom
sbb
ret
rclb
fnsave
mov
notl
call
sti
loope
test
lret
mov
mov
scas
addr16
mov
mov
xchg
inc
gs
or
popa
and
andb
gs
adc
lds
cmp
sbb
punpcklbw
inc
or
cmp
mov
sub
testl
push
scas
std
push
fnstcw
push
loopne
sbb
lret
arpl
aas
jns
and
mov
mov
adc
dec
cmpb
sub
cmpsl
ljmp
mov
jecxz
sub
mov
enter
int
pop
cmp
adc
push
push
sub
pop
add
loopne
sub
js
loope
scas
and
pop
sbb
sarl
adc
xchg
int
in
mov
push
inc
cmc
mov
mov
or
dec
mov
lods
pop
xor
sbb
sub
mov
and
stc
mov
in
cmc
sub
mov
sbb
or
popa
daa
jge
mov
popf
mov
mov
out
and
xchg
fiadds
mov
shlb
sbb
add
or
and
push
pop
xchg
stos
mov
xchg
sbb
lea
jg
enter
sbb
adc
xchg
xor
inc
mov
xlat
inc
ret
out
lods
lea
or
pop
mov
dec
popf
push
lahf
mov
xor
push
imul
pop
das
xor
insb
call
ss
dec
icebp
cld
and
das
popf
daa
pop
ja
repnz
test
and
pop
push
out
jno
mov
and
mov
aad
out
cmp
dec
dec
cltd
in
lcall
test
cwtl
mov
movsl
test
cmpsl
sbb
inc
mov
jno
js
jb
enter
mov
fwait
sbb
jne
jnp
push
bound
ficomps
and
jne
lea
mov
shlb
filds
jge
filds
mov
sahf
or
xchg
cmp
jg
or
js
xlat
fcompl
and
test
popf
scas
pop
adc
pop
addr16
ret
xor
ret
testb
adc
push
push
mov
aad
lock
xchg
lret
sub
and
sbb
lods
in
cmpsl
mov
push
pop
pop
arpl
loop
clc
negl
test
ja
test
call
jge
adc
loope
popa
stc
xor
add
xor
sbb
popf
push
filds
gs
stos
cmp
not
sbb
arpl
in
push
add
jbe
lds
jle
loopne
inc
addr16
cld
dec
mov
stos
jmp
mov
out
cli
push
sbb
stos
es
jnp
xchg
in
ja
mov
outsl
pop
or
jno
adc
adc
xchg
and
or
sub
mov
rorb
jecxz
mov
sarb
jae
into
push
imul
addb
pop
out
subl
or
jp
and
jle
in
insb
xor
or
test
iret
jecxz
shlb
xchg
scas
fisubs
shll
jo
jmp
in
repnz
or
xchg
movl
mov
outsb
xor
xchg
fldenv
mov
mov
pop
cmp
in
fimull
xor
mov
xor
sbb
mov
test
ret
filds
xchg
xchg
out
push
icebp
xchg
daa
call
clc
or
ja
xchg
jo
mov
push
int3
jge
inc
sar
mov
and
repz
inc
add
cmp
and
adc
xchg
jle
repz
inc
div
mov
xchg
iret
movsl
sbb
lret
shl
dec
mov
mov
mov
lahf
inc
mov
sub
cwtl
stc
hlt
or
ljmp
pop
or
mov
xchg
jno
sbb
pop
jnp
push
bound
push
ds
cmpsb
scas
xchg
inc
fidivs
sbb
xchg
movsl
pop
sarb
pop
popf
dec
imul
scas
xor
outsl
in
inc
sbb
add
and
xchg
jmp
in
cmc
fsubrp
push
cmp
addr16
or
push
out
sbb
sub
dec
pop
sbb
rcrb
mov
push
cmp
int3
dec
stos
pop
popa
sbb
outsl
push
outsb
sub
or
xchg
cmp
adc
cs
jge,pn
shr
dec
enter
add
insb
ret
jle
or
stos
mov
xor
cmc
inc
cmc
jge
bound
push
mov
push
add
adc
mov
dec
jne
or
jg
jns
adc
pop
imul
fmuls
jns
insb
lds
sar
sbb
cmc
ja
test
test
ds
dec
sub
cmpsb
xchg
out
bound
aad
pop
jp
or
pop
jl
and
add
pop
push
pop
or
iret
int
xchg
xchg
adc
sbb
mov
mov
mov
stos
sbb
xorl
add
out
and
pop
xor
movsb
jne
mov
and
std
inc
mov
xchg
mov
pop
mov
mov
js
int
cmp
je
sarl
dec
insb
adc
inc
test
pushf
sub
and
mov
push
frstor
ss
mov
adcl
dec
cmpsl
dec
insl
js
or
mulb
int
adc
xchg
push
dec
sub
leave
sub
gs
jo
jp
mov
aaa
adc
xchg
shr
xor
movsl
mov
xor
mov
or
mov
push
and
outsb
jns
adc
fildl
push
into
lret
gs
cmp
pop
pop
hlt
inc
sbb
insb
pop
enter
xor
cs
dec
mov
pop
push
lock
dec
xlat
sub
xchg
add
aam
cmp
and
jnp
xchg
push
cmpl
loope
or
in
arpl
std
jle
mov
dec
frstor
enter
lret
inc
ret
loopne
out
fcomp
ret
mov
or
outsl
je
sub
lods
sub
in
jne
pop
popa
sbb
pop
pop
out
das
push
jecxz
rcr
xor
pop
cmp
cli
mov
or
in
pusha
addl
insb
cmp
fcmovnu
xor
imul
pop
mov
stos
cmp
ljmp
imul
lret
mov
sub
sbb
mov
and
std
sbb
fs
push
push
imul
sbb
in
and
ret
sbb
std
fucom
sahf
fsubs
add
les
addb
popa
jns
out
repz
adc
mov
sbb
cmp
insb
pop
lcall
pop
fbstp
pop
dec
mov
ss
subb
or
ret
xor
je
push
lret
jecxz
pop
xchg
orb
adc
push
pop
jecxz
add
ret
imul
jo
imul
add
push
repz
lahf
jo
jmp
insb
push
xchg
int
arpl
repnz
inc
rcrb
xorl
cmp
fwait
lds
filds
loope
loopne
addr16
push
in
pop
inc
jne
xchg
je
mov
mov
push
add
nop
inc
lahf
fwait
loopne
inc
mov
aaa
sub
aam
add
sub
push
sbb
add
xlat
ss
jg
inc
repz
aas
dec
out
lods
loopne
fsubs
mov
xor
in
outsl
arpl
mov
in
scas
daa
cmpsl
out
je
sbb
jnp
shl
fisttpll
or
add
and
je
or
lret
add
jo
notl
mov
mov
pop
cwtl
and
lret
inc
out
in
jo
das
arpl
outsl
pop
push
lret
pop
dec
loope
loopne
cmp
std
adc
cs
jl
enter
adc
ficomps
mov
cli
inc
cmp
adcb
mov
jmp
xchg
sub
scas
or
xchg
push
fistl
cmc
enter
fsubrl
insl
jnp
adc
in
add
mov
fucomi
daa
aas
push
insb
or
sbb
outsb
pop
cmpsl
lds
push
dec
inc
pushw
jmp
out
imul
roll
dec
js
pop
cli
inc
icebp
stc
jno
pop
lahf
ja
into
sahf
outsb
shr
popf
cmp
inc
fstps
mov
call
andb
xchg
dec
and
popl
mov
test
inc
les
cmp
enter
cltd
or
pushf
sti
out
inc
xor
sti
out
push
orl
popa
xor
inc
outsb
test
xchg
xor
dec
push
inc
mov
xor
nop
imul
xorl
lds
in
dec
popf
push
lret
cmpsl
rcrb
mov
shlb
movsl
in
pop
ljmp
push
movsb
lret
mov
push
inc
imul
and
xchg
jbe
xlat
mov
scas
and
sub
outsb
pop
cmp
and
inc
imul
mov
sti
mov
jg
cld
filds
idivb
enter
scas
mov
daa
pushf
mov
push
loopne
dec
cltd
cmp
rcrb
sub
jae
ss
push
je
test
pop
es
cs
cmpsl
dec
jg
shlb
fsubrl
and
cmc
mov
xchg
jno
sbb
or
sbb
push
rcrl
pcmpgtw
arpl
arpl
jmp
pop
outsl
inc
fidivs
cmp
mov
pop
pop
adc
dec
test
push
cmc
add
stos
mov
cld
jp
cmc
mov
mov
mov
xchg
adc
inc
adc
inc
prefetch
std
pop
insb
dec
cmpsb
loope
mov
and
xor
jae
xchg
pusha
mov
and
cmp
idivl
sbb
leave
add
rol
nop
sbb
pop
shl
add
mov
jnp
cmp
sbb
jns
jle
cmp
cmp
xchg
mov
imul
jmp
movsb
les
xchg
scas
decb
out
lea
loopne
pop
cmc
push
adc
dec
xor
pop
movsb
gs
mov
cmp
xchg
ljmp
mov
into
jmp
movsl
or
sub
mov
lahf
or
clc
out
push
imul
mov
lock
test
gs
mov
mov
movsb
push
xchg
call
fxch
dec
mov
add
cltd
shll
dec
leave
cmp
lds
lds
mov
pop
sahf
pop
cmp
mov
je
sti
orl
cld
fidivrl
xor
jge
test
xchg
mov
fstpt
and
or
ret
testb
fadds
mov
or
push
sub
mov
jg
mov
lret
in
and
adc
ss
pop
sub
testb
mov
jmp
push
aam
adc
shrl
adc
in
sub
push
push
popw
mov
jbe
dec
dec
xchg
mov
xor
aas
cltd
std
out
push
cld
dec
es
and
outsb
cwtl
sbb
daa
cmp
mov
dec
mov
icebp
pop
sbb
or
mov
repnz
and
pushf
add
mov
clc
enter
clc
ss
xchg
dec
stc
bound
std
daa
mov
mov
int3
pop
jmp
jo
or
movsl
or
or
pusha
cld
addb
mov
sbb
adc
out
imul
mov
ret
and
std
and
shll
cli
pop
imul
rcrl
lret
ss
mov
add
push
cltd
or
aad
push
imul
movsl
jle
mov
rcll
das
dec
lds
mov
ss
dec
test
add
pop
test
test
fildll
mov
fidivl
inc
inc
ss
sbb
arpl
mov
sbb
xchg
xor
out
pop
add
lahf
adc
jnp
mov
ret
pop
push
scas
scas
cmpsl
stos
popf
outsl
jl
jb
sbb
pusha
xchg
jge
out
xlat
out
not
insl
movsb
mov
nop
add
fwait
jne
aas
pushf
int3
cmp
xor
popa
jge
xlat
jmp
inc
pop
push
imul
mov
fistps
lahf
mov
jbe
mov
popa
jge
cmp
pop
pop
sbb
adc
fadd
push
xchg
or
lods
dec
daa
xor
test
mov
mov
movsb
out
and
sbb
mov
sub
cmp
andb
xchg
idivl
les
gs
stos
outsl
dec
inc
dec
cmc
inc
js
stos
lret
mov
cmpsb
fidivs
fcomi
daa
inc
inc
mov
xchg
loope
add
sbb
cmp
lret
add
dec
sbb
scas
lods
push
mov
dec
outsl
lcall
fdivr
dec
movsl
push
inc
xor
insl
clc
mov
mov
out
sub
std
fisubrl
lock
fnstenv
xor
shrl
sub
add
jne
dec
lcall
in
mov
and
mov
cli
jmp
cltd
test
sub
jmp
add
mov
mov
lds
aam
cmp
aam
dec
sub
dec
leave
add
jne
fcmove
push
mov
add
rolb
insl
jbe
insl
sahf
xchg
sub
out
cmc
gs
push
pushf
push
out
mov
fiadds
adc
sub
jo
push
push
dec
push
or
pop
in
cmp
pop
mov
and
sahf
jbe
dec
cmp
repnz
aad
scas
mov
lods
mov
xchg
mov
notl
jo
cmpsl
mov
lods
mov
cmpsb
ds
loope
adcl
jb
ret
lds
jno
mov
sub
dec
out
dec
iret
dec
leave
clc
jg
pop
les
ss
fidivrl
imul
jge
sarb
push
mov
lods
mov
mov
and
mov
mov
add
dec
out
mov
or
jmp
xor
or
adc
xchg
cmp
out
add
adc
int3
pop
mov
cwtl
mov
daa
fs
addr16
notb
ret
decb
mov
arpl
leave
ja
sti
mov
jge
dec
dec
adc
and
mov
sbb
flds
fwait
movzbl
and
daa
imul
dec
mov
std
dec
push
std
inc
push
push
pop
movsl
xor
cmp
push
scas
pop
cwtl
out
shlb
repz
rorl
jp
aad
pop
inc
mov
mov
inc
fpatan
cmp
mov
add
lods
xor
mov
mov
inc
fildl
and
push
pop
sbb
and
outsb
scas
mov
data16
fs
ljmp
mov
aas
movsb
xor
cmp
mov
popa
mov
inc
enter
fimull
dec
daa
sub
test
nop
ret
and
sub
cmp
xlat
aad
push
xchg
push
pop
pushf
xchg
das
adc
in
pusha
push
adc
push
imul
cld
loop
lahf
jg
sbb
pop
xor
sub
inc
push
xchg
repnz
outsb
sub
aas
fstp
jb
push
jge
insl
jbe
or
shll
into
test
lock
andb
cmp
orb
mov
test
pop
and
lea
pop
mov
ret
xchg
mov
mov
addr16
dec
mov
adc
stos
jnp
and
inc
add
dec
mov
aad
cmpsb
dec
pushf
xor
sbb
dec
mov
das
mov
pushf
xor
xchg
pop
or
add
inc
ds
sarl
sbb
dec
xor
rorb
ret
inc
push
into
mov
cmp
test
out
inc
sbb
sbb
andb
xor
ds
faddl
xchg
js
inc
xor
outsl
mov
rolb
rcll
sbb
test
inc
les
les
mov
and
aas
and
push
pop
jmp
mov
out
mov
icebp
push
xchg
cmp
faddl
cmp
into
into
push
xor
call
ja
and
fisubrl
jne
sub
inc
mov
xchg
sbbl
lahf
lcall
pushf
movsb
bound
sbbl
sbb
mov
sbbl
xchg
mov
pop
test
jmp
mov
adc
lods
fdivr
xchg
popa
test
xchg
mov
pop
fdivs
dec
mov
push
daa
gs
xor
loope
mov
jo
push
movsb
and
jb
inc
in
cmp
insl
jle
push
popa
push
fwait
aas
ss
jne
call
mov
add
push
fstl
mov
mov
adcl
data16
hlt
add
cmp
out
and
hlt
mov
xor
mov
stc
sti
imul
pop
cld
popa
xchg
sub
lahf
dec
mov
pusha
movb
mov
dec
adc
add
xchg
gs
sbb
inc
push
sbb
adc
cmp
inc
mov
add
packssdw
or
push
enter
add
pop
push
sub
jge
push
add
loop
adc
mov
iret
aad
inc
cmp
pop
dec
xchg
inc
xchg
sub
cmc
mov
jge
and
lsl
loope
push
ss
imul
fbstp
pop
fcoms
xor
mov
lock
std
jns
xchg
pop
mov
and
hlt
ficoml
scas
push
jns
lea
clflush
cmp
repz
push
push
or
cmp
jecxz
cmp
pop
push
pop
idivl
andl
xchg
jp
push
mov
mov
cmp
cmp
push
in
mov
pop
frstor
aas
sub
dec
jle
scas
pop
mov
cmp
inc
mov
cli
insl
jae
pushf
and
bnd
and
in
shll
mov
inc
pop
mov
insb
xor
cmp
pop
xlat
adc
imulb
fsts
add
inc
and
sbb
pop
xorl
outsl
xor
push
out
imulb
call
inc
test
push
and
mov
mov
push
js
mov
push
loop
mov
add
mov
pop
andl
testb
jne
popf
test
and
xor
pop
pop
inc
mov
inc
cmp
or
cmp
inc
push
dec
mov
icebp
xchg
mov
cli
mov
ret
ficompl
add
pop
movsl
inc
jbe
add
loope
lods
cmp
cmp
inc
and
rorl
mov
es
lret
adc
fld
mov
push
test
or
pop
push
push
jp
roll
xchg
into
mov
dec
aad
pop
jle
repnz
or
jmp
ret
and
mov
mov
loopew
inc
std
ret
cmp
sahf
push
push
cmp
notb
js
lret
fldenv
popf
lea
lea
mov
sbb
inc
xchg
jle
dec
repz
and
insl
das
shlb
mov
push
pop
and
mov
mov
inc
cmp
jp
divb
sbb
add
mov
xchg
lods
aad
lods
fstps
mov
call
mov
mov
sbb
jo
in
or
pop
jp
pop
lret
sbb
dec
imul
enter
fwait
and
outsb
in
sbb
outsl
leave
jp
mov
pop
and
das
in
into
fucom
sbb
ficoms
mov
xlat
pop
push
push
sbb
aad
lret
jmp
xlat
or
jge
sub
add
int
mull
int
jge
cltd
mov
sbb
cwtl
pop
test
dec
sti
adc
cmc
mov
push
lds
xorl
jmp
fisttpl
mov
sbb
ficompl
addr16
aad
in
jns
stc
insb
mov
repz
xlat
clc
sbb
rorl
mov
mov
inc
mov
xchg
ljmp
bound
mov
imul
mov
stos
bound
repnz
adc
sub
shl
movsl
filds
lods
xchg
dec
xchg
mov
addr16
mov
mov
fwait
lods
jae
adc
cmc
popf
add
push
jg
pop
sbb
scas
or
icebp
add
xchg
frstor
stc
cmp
adcb
lahf
fwait
call
or
cld
xchg
out
or
nop
xchg
and
xor
mov
lock
notl
repnz
sbb
ret
pop
into
ret
cmp
jmp
inc
loopne
gs
push
cs
das
fs
mov
jmp
and
cltd
scas
dec
jg
add
les
inc
dec
jge
adc
push
shr
insb
js
je
sbb
or
sub
push
push
xlat
mov
insl
leave
rdtsc
into
pop
sbb
test
fisubrl
sarb
loope
movsb
rcrb
popf
jo
test
out
push
jecxz
pop
loope
push
in
mov
ret
int
jl
push
xchg
mov
cli
inc
in
adc
and
dec
or
xchg
or
or
je
nop
mov
cmp
fcoml
lods
mov
fstps
sub
cmp
insb
mov
xlat
xchg
dec
add
fildl
enter
push
ret
pushf
loope
and
fcoml
dec
pop
dec
enter
jge
andl
mov
xchg
fs
lock
fdivl
test
bound
pop
fwait
sbb
aad
cmc
dec
jg
pop
lcall
int3
aas
inc
xor
xchg
cmp
jmp
push
push
in
xchg
andb
mov
bound
shlb
mov
cltd
jbe
lds
mov
cli
shrb
dec
fidivrl
jbe
inc
fcmovnbe
jg
and
or
fsubr
cmpsl
mov
cmovl
loop
inc
dec
popa
repz
xchg
xchg
lods
push
mov
cli
add
pop
jae
push
andl
jle
or
outsl
out
add
repnz
push
ds
daa
mov
jns
push
or
movsb
mov
and
mov
jg
cltd
incb
xchg
push
test
adc
push
jns
pop
div
push
add
gs
lea
int
dec
out
mov
nop
fwait
pop
sbb
ljmp
imul
adc
call
cmpsb
jo
and
dec
jne
add
jo
push
cmpsl
jmp
inc
cld
scas
jecxz
pop
out
aad
addb
and
push
and
pop
jnp
add
cmc
sub
xor
movb
push
or
add
dec
push
cli
xlat
das
icebp
dec
ret
jp
loop
popa
addr16
test
jmp
xchg
aam
lods
sti
mov
pop
add
xorb
xchg
jae
mov
ret
add
inc
push
push
imul
ljmp
out
pop
xchg
add
dec
loope
mov
into
int3
sbb
cmp
sbb
inc
fwait
jle
cmp
int3
and
mov
jnp
scas
xchg
lods
inc
add
adc
lods
dec
sub
pop
popf
inc
jp
jmp
xor
sbb
sti
das
loopne
mov
inc
cmp
jb
nop
and
sarb
cltd
inc
jnp
mov
sbb
mov
in
push
inc
cld
fs
sub
shlb
js
mov
jne
addl
dec
test
sbb
mov
gs
cmp
mov
mov
pop
mov
mov
cmc
xchg
jl
je
sbb
xchg
lock
mov
andb
pop
cmpsl
icebp
cmc
data16
pop
xor
cmpsb
adc
sub
pop
leave
pop
hlt
add
mov
pop
adc
cmp
xchg
push
lret
jo
dec
cmpsb
fnsave
mov
lret
push
outsl
jns
test
jecxz
pop
arpl
cmp
sahf
cwtl
movsb
or
jae
shrb
fdivrl
or
aad
out
setge
int3
adc
or
fists
les
or
adc
dec
ret
es
add
scas
std
mov
inc
out
testb
imul
xchg
mov
push
lret
mov
mov
imul
mov
aas
mov
testl
lods
mov
andb
mov
mov
jno
and
inc
movsl
ss
jbe
out
xor
mov
jge
dec
mov
mov
jp
cmpsl
stc
jne
repnz
mov
lahf
dec
clc
imul
fisubrs
mov
sbb
push
cmp
lods
ljmp
test
jmp
je
add
cmp
jo
push
loope
scas
repz
and
sub
jl
xchg
insl
cmpsl
xor
mov
in
fsubrs
add
or
lcall
insl
pusha
fnstenv
xchg
aaa
mov
test
popa
pop
lock
icebp
ja
dec
aas
add
mov
xor
xchg
push
lahf
test
and
dec
pmaxub
js
jbe
cmpb
jnp
jno
inc
stos
adc
js
rolb
decb
mov
xlat
xor
mov
mov
xchg
loop
fcmovbe
pop
mov
loop
cmp
jmp
dec
mov
vpsrld
pop
xchg
sub
aam
push
dec
and
std
mov
popa
dec
sub
cmp
push
cmp
sarl
dec
loopne
test
push
push
adc
lods
test
inc
mov
jne
add
jp
or
xor
mov
rcl
stos
repnz
inc
mov
les
nop
test
mov
xlat
dec
pushf
enter
and
push
les
rclb
adc
dec
jnp
xchg
outsl
out
mov
test
bound
or
insl
je
sub
out
mov
loop
aas
or
int3
jb
lea
lea
mov
icebp
pop
push
lcall
in
dec
gs
mov
cmp
divb
xor
inc
into
lahf
add
pusha
lods
push
add
aad
xchg
or
test
xchg
jecxz
push
cld
or
negl
mov
push
ficompl
fldl
fiadds
mov
xor
out
pop
and
mov
sbb
push
rcrb
call
ja
int
and
mov
mov
or
fbstp
mov
and
push
cmpsb
mov
stos
cwtl
cmp
mov
jo
or
ffree
xchg
and
add
push
popa
push
or
lock
xchg
xchg
or
sbb
les
sub
dec
bound
stc
out
int3
sahf
dec
lcall
cmp
lretw
pop
inc
inc
icebp
sahf
ljmp
inc
ret
or
in
fwait
push
xchg
mov
mov
clc
adc
lods
outsb
inc
call
sbb
mov
mov
inc
shrl
imul
ja
cmp
dec
jl
xor
test
dec
cli
push
cmp
mov
and
jle
fbld
stos
lret
imul
sub
scas
inc
cmp
or
add
out
dec
push
adc
aas
iret
subl
sbb
mov
xchg
xor
push
pop
or
dec
lea
jnp
xlat
pop
cmpsl
mov
push
add
fs
fnstcw
fisubrs
pusha
or
repnz
or
mov
negw
rol
lea
scas
aad
fwait
push
jb
shrb
bound
pop
sbb
pop
fmuls
pop
dec
dec
xor
cld
sub
sbb
inc
dec
ret
cmp
jnp
andl
lds
mov
xchg
in
es
out
and
inc
xchg
xchg
dec
inc
sar
inc
jg
or
pop
push
adc
rclb
jmp
cmp
xchg
cwtl
movsl
fmul
and
dec
ret
fidivs
mov
mov
insb
adc
fdivs
inc
je
fmull
test
iret
fcoms
xor
loopne
cmp
inc
pop
xchg
sub
xchg
loopne
js
and
push
xchg
test
test
cs
add
gs
movl
sub
roll
sbb
jle
mov
enter
cmpsl
mov
cmp
fwait
mov
jno
push
shll
fstpl
mov
or
test
lahf
mov
sbb
dec
scas
and
pop
pusha
pop
pusha
sub
sbb
add
and
cmp
loope
ljmp
das
sub
pop
aam
movsb
adc
inc
addr16
mov
xor
cmp
inc
or
pop
jp
aas
xchg
inc
fisttpll
jmp
mov
int3
and
push
dec
arpl
mov
dec
push
push
dec
insb
fwait
ja
lock
inc
ret
cmp
xlat
popf
in
cmpsb
add
lock
test
sub
lret
hlt
xchg
add
daa
jg
mov
dec
add
add
scas
mov
mov
js
push
cltd
inc
filds
aas
jno
outsl
hlt
popf
cs
insb
cmpsl
jns
test
and
or
sbb
mov
xor
xor
add
adc
inc
fld
pop
inc
pop
mov
pop
pop
test
jle
popf
lcall
push
push
pop
fidivs
repnz
jg
inc
stc
inc
shlb
and
mov
je
imul
lods
nop
out
adc
sub
mov
into
push
incb
mov
addr16
jno
outsb
dec
lods
xor
iret
sub
fldl
cmpsb
pop
xchg
xor
fs
sub
push
adc
pop
insl
clc
sbb
aam
adc
into
xchg
stos
dec
lods
jno
fstpt
std
out
dec
jle
and
in
adc
mov
mov
add
inc
mov
inc
sbb
int3
pop
mov
ret
popa
fs
inc
test
lcall
inc
fidivl
setge
lahf
mov
adc
sub
fs
sbb
lods
call
jno
scas
in
mov
mov
sbb
shlb
sahf
fstpl
filds
xchg
fcompl
ss
in
outsb
ja
icebp
mov
scas
sub
je
outsl
xchg
add
mov
sbb
xchg
and
jo
mov
inc
out
mov
scas
xor
xchg
jg
test
and
into
mov
mov
out
jecxz
shll
xor
je
shrb
cmp
in
adc
pushf
data16
and
ja
in
stos
pop
mov
sti
lret
stos
mov
repnz
xchg
dec
or
jge
lret
fwait
in
fiaddl
hlt
lds
jae
or
js
test
ret
inc
push
mov
adc
loop
inc
pop
sbb
arpl
pop
orb
pop
cmp
sub
scas
pop
aas
mov
clc
fdiv
mov
test
adc
mov
test
jecxz
fists
fadds
rcrb
in
in
mov
sbb
in
inc
mov
fimull
jno
pop
cmp
incl
lods
dec
fstps
es
sahf
cltd
imul
jns
in
push
fisubs
outsb
std
popl
sti
scas
jp
pop
mov
xchg
jge
idiv
in
leave
js
sub
push
sub
loope
out
or
sub
or
jno
mov
lahf
ret
mov
sub
daa
test
imul
cmp
gs
das
stos
nop
mov
leave
mov
cld
je
shlb
mov
lcall
std
cmp
lods
inc
sbb
pusha
mov
mov
xchg
pop
arpl
mov
fistpl
xchg
outsb
arpl
popa
mov
dec
cld
hlt
out
lahf
stc
mov
sarl
jno
adc
inc
adc
scas
xchg
imul
enter
and
inc
sub
mov
lods
add
jle
aas
jg
sub
lcall
xchg
aas
jg
bound
rcll
and
movsb
loop
adc
arpl
neg
push
js
add
mov
xor
cmp
test
int
xchg
ljmp
paddusb
test
inc
jnp
pop
or
int
adc
das
mov
lret
popa
adc
dec
ljmp
out
xchg
es
jnp
cmp
pop
int
jle
mov
xor
outsl
imul
mov
leave
adc
cli
lods
sbb
in
or
test
lret
xor
mov
or
imul
jo
lods
mov
push
scas
fwait
enter
pusha
adcb
sarb
and
aas
jo
rcrl
sti
out
mov
cmp
xor
in
movsb
loope
cmp
dec
sahf
dec
inc
jp,pt
popf
mov
xchg
mov
sub
fistl
lods
inc
lock
pop
xor
sub
lcall
imul
xchg
into
mov
mov
sub
in
insl
mov
mov
or
inc
outsb
les
in
lahf
push
rcrl
dec
cli
fnsave
rep
mov
push
subb
jbe
mov
add
adc
stos
into
fistps
pop
mov
inc
call
push
adc
lahf
fldt
inc
pop
dec
pop
and
jecxz
mov
pop
loopne
mov
push
pop
insb
inc
clc
popl
sbb
xchg
and
flds
jne
mov
fimuls
sub
cwtl
xchg
pop
xor
push
fwait
mov
rorl
sbbl
dec
mov
mov
or
xor
out
outsb
cltd
in
xchg
lcall
fcmovb
add
scas
lock
jbe
pop
mov
pop
test
daa
dec
insl
movsb
xchg
jg
rcrl
dec
cmp
mov
stos
push
stc
test
cli
jns
sbb
jecxz
pop
push
iret
xchg
cmp
and
ds
add
aas
mov
sbb
stos
dec
sbb
fnstsw
xor
add
call
lock
push
lcall
popf
in
cltd
mov
pop
and
std
lret
data16
leave
or
xor
pop
dec
out
push
pusha
rol
in
nop
fstpt
pop
gs
lcall
xchg
push
adc
push
les
mov
inc
addr16
cmp
cmpb
push
fsubrp
and
mov
xor
aas
or
xor
or
pushf
fisubs
sub
or
jo
sbb
dec
and
adc
mov
jmp
sbb
add
cmc
in
pop
cmp
clc
push
adc
fisubrl
mulb
loop
vandnps
xchg
push
fbld
and
pop
aaa
xchg
in
push
mov
pop
pop
jecxz
ret
xor
out
scas
push
jne
cmp
out
fdivl
lea
in
int
cmpsl
dec
mov
push
test
es
sub
inc
jge
xorb
sub
sub
xor
mov
mov
stos
xorb
cmp
ret
fwait
insb
cmc
xchg
test
mov
daa
ljmp
pop
leave
or
inc
dec
sbb
fwait
cmp
mov
loope
push
shll
shll
sbb
pop
out
cmpl
xlat
push
lcall
lcall
dec
movsl
add
sar
out
pushf
cmpsb
mov
inc
call
pop
dec
je
add
js
pop
and
lcall
xor
fs
mov
out
mov
adc
ret
mov
mov
adc
cwtl
testl
scas
iret
in
xchg
mov
pop
imul
push
notl
jp
pop
stc
outsl
addr16
xchg
inc
dec
arpl
push
ret
xchg
push
adc
adc
and
xor
xchg
xor
pop
scas
jae
dec
cmp
call
in
adc
or
dec
test
rcrb
cmpsl
add
fs
rcr
sub
jecxz
or
iret
mov
in
rcr
sub
mov
xchg
push
cmp
sti
jle
sahf
sub
in
xchg
sub
lods
dec
fcompl
xor
cs
adc
stos
pushf
sbb
out
insl
mov
xchg
out
jmp
ffree
xor
mov
test
mov
xchg
das
scas
push
ljmp
ret
je
jecxz
cmp
dec
dec
in
and
rcr
and
das
xor
and
cli
lea
imul
repnz
repz
mov
ja
fistl
and
iret
cmp
mov
scas
xor
cmpsb
loope
sbb
ljmp
jo
loop
out
pinsrw
sbb
sbbl
inc
add
push
dec
movups
sub
xor
sbb
cmpsl
mov
cwtl
lret
stc
push
imul
xchg
push
outsb
jl
dec
push
int3
das
loope
jg
cmp
push
jno
lods
cltd
addr16
sub
test
and
cld
sbb
loop
negl
dec
gs
and
jecxz
cmp
dec
aam
push
mov
outsb
dec
pop
arpl
repnz
stos
mov
test
push
sub
xchg
dec
mov
lahf
je
and
ret
ret
xor
jge
adc
inc
pop
insb
out
fs
mov
out
ret
popa
icebp
pusha
and
int3
jns
insb
lds
inc
add
testb
rcl
rcll
mov
insb
ljmp
data16
icebp
in
scas
sub
enter
clc
cmp
add
mov
stc
push
or
adc
adc
enter
nop
add
fucom
mov
shl
mov
out
fwait
xor
cmp
out
xor
rolb
adc
or
incl
xchg
mov
aaa
jle
aad
sarl
fildl
adc
cmp
lods
stos
push
jg
xchg
lret
push
bound
ljmp
insb
outsb
xor
and
aas
data16
mov
inc
adc
push
pop
imul
sbbl
bound
int3
push
rol
adc
fisttps
fsubl
sub
in
call
mov
lret
adc
loop
pop
adc
jne
xchg
gs
arpl
push
fisttps
popf
lds
mov
mov
push
mov
sbb
sub
mov
lds
push
ds
dec
mov
imull
test
sbb
sub
rol
jge
test
jnp
sbb
pop
lods
out
popf
xchg
jno
mov
jmp
xchg
fmull
jge
inc
dec
sub
adc
xchg
mov
mov
filds
enter
stos
mov
insl
or
jp
jmp
loope
cli
mov
cltd
loopne
mov
ret
push
fwait
mov
adc
pusha
and
push
inc
ds
test
sub
movsl
int3
lret
xchg
jae
push
addl
scas
fistl
pop
outsb
inc
mov
stc
clc
out
dec
pop
push
add
jne
rorl
mov
sbb
popf
gs
inc
cmp
jnp
stc
and
sbb
cmp
fnstsw
add
inc
mov
lods
addr16
test
inc
mov
movl
mov
mov
ss
inc
add
pusha
fdiv
sar
mov
jo,pn
pop
fcmovb
pop
adc
sahf
dec
inc
jmp
pop
jb
cmp
inc
cltd
ret
ja
addb
jmp
xchg
cmp
into
inc
les
and
mov
add
cld
ss
sbb
cmp
push
or
idivl
jne
mov
or
lcall
pop
dec
ss
push
add
and
test
mov
add
movsb
test
and
mov
add
add
call
imul
dec
jle
inc
xchg
and
loope
lods
jle
insb
or
rcrl
jp
sbb
test
cmp
je
inc
dec
mov
cmp
stos
movsb
cmp
xchg
rep
repz
jp
inc
jo
mov
ret
xchg
xor
inc
inc
daa
and
enter
cmp
xchg
xor
cld
dec
test
scas
adc
mov
adc
lds
mov
xchg
mov
xchg
push
movsl
je
and
movsb
leave
dec
leave
repnz
push
scas
xchg
mov
mov
lea
push
pop
imul
and
test
sbb
push
mov
add
xchg
scas
jno
fwait
jnp
bound
aad
sbb
aad
and
xor
andb
pop
and
cs
repz
mov
xlat
pop
cli
pop
xchg
out
ficompl
inc
mov
fwait
xchg
mov
add
or
mov
fdivrl
into
imull
das
pop
fisttpl
sbb
insb
mov
into
out
adc
ds
inc
hlt
adc
cmc
xchg
pop
and
push
es
xor
pop
jp
movsb
mov
outsl
jmp
rorb
dec
in
pop
pop
fisubrs
loop
lock
fs
in
xchg
dec
stos
ret
leave
loop
outsl
pop
gs
jl
aad
jno
inc
add
jno
cmp
xchg
jno
or
out
xchg
adcb
jns
push
push
mov
test
push
xchg
mov
adc
push
repnz
push
ja
cmp
aas
jmp
fisubs
push
mov
out
mov
lock
jl
mov
test
pusha
xlat
mov
call
adc
push
adc
rolb
adc
rolb
jl
fcompl
fdivr
mov
add
or
mov
bound
test
out
lods
and
inc
mov
pop
lret
xchg
lcall
sub
in
mov
or
out
adc
ja
xchg
outsb
jo
test
inc
push
lahf
push
popa
out
adc
push
dec
xchg
orl
cs
nop
or
mov
adc
out
aam
cmp
xor
jno
inc
pop
aad
clc
cmovb
dec
add
inc
lock
sbb
cwtl
dec
push
xchg
push
cld
je
mov
mov
mov
pop
je
dec
push
dec
cmp
inc
pop
fwait
nop
out
fwait
shl
ret
inc
or
jnp
sbb
icebp
mov
vmwrite
movsb
jns
inc
in
sbbl
leave
dec
xchg
mov
push
add
mov
orl
js
dec
xchg
mov
inc
dec
jb
push
pop
cmpsl
enter
push
cmp
dec
lock
mov
insl
mov
in
xchg
addl
je
jnp
scas
test
movsl
nop
add
add
int
lahf
mov
aas
shlb
mov
dec
sbb
cmp
and
in
fcomps
or
ja
cwtl
mov
repnz
nop
test
cs
xor
lcall
mov
jnp
insb
mov
xchg
mov
and
fisttpl
popa
das
lods
nop
stos
es
inc
into
leave
push
add
scas
inc
das
push
jmp
pop
add
add
insb
es
or
mov
and
lcall
mov
mov
ss
xchg
mov
mov
pop
mov
push
and
sbb
bound
imul
das
adc
insl
cli
leave
pop
cmp
jg
ja
shl
fnstenv
filds
xor
rorb
mov
loope
shrl
or
xchg
cmp
push
push
test
xlat
scas
into
sbb
ss
aad
jmp
daa
or
dec
enter
adc
out
jle
mov
jp
mov
mov
gs
enter
sbb
xchg
xor
or
jb
pop
scas
mov
sub
adc
lea
cli
xor
xor
and
sub
pop
shr
addr16
cltd
fldenv
sbb
scas
or
nop
clc
jbe
ss
shlb
aad
xor
cmpsb
out
push
scas
and
rcl
test
movsb
or
fidivrs
push
outsl
insl
loop
xor
jmp
out
xchg
in
push
xor
in
or
popf
pop
call
or
ret
add
sbb
xor
int
mov
bound
mov
cmp
fidivrl
aas
hlt
int3
sbb
cmp
sub
push
mov
dec
insl
sub
sub
outsl
cli
das
js
pop
dec
cmpsb
and
cmp
popa
xorb
aaa
jl
cli
rorl
mov
popf
ret
jge
cli
aam
lret
fbstp
lods
fcmovu
test
inc
add
and
cli
pop
sti
cmpsl
inc
lds
mull
ja
fistl
leave
lcall
xchg
sbb
adc
cmp
test
dec
jp
ret
int
cmp
pop
xlat
cwtl
cltd
push
or
sub
aas
fstpl
in
pop
push
adc
int
scas
cmpsb
xchg
lea
icebp
jg
xadd
out
add
adc
jnp
test
cmp
and
push
aaa
push
pop
fdivl
cmp
jp
pop
push
pop
lret
cmp
push
std
ja
insb
pop
outsl
pop
add
ss
call
mov
test
pop
in
mov
push
mov
jns
data16
arpl
adc
popa
push
cmp
xchg
ja
int3
push
push
jne
mov
xchg
ljmp
rcrb
cmp
ds
dec
push
mov
stos
or
dec
pusha
pop
inc
jmp
daa
xor
mov
ret
push
mov
adc
sbb
jae
xchg
mov
push
call
je,pt
and
push
adcl
rclb
test
lods
jae
jle
les
test
cmc
dec
sub
push
shlb
das
cmp
push
xchg
jge
push
loopne
test
dec
cli
dec
jecxz
jns
les
pusha
in
pop
daa
xchg
in
push
xchg
sahf
xlat
and
aad
subl
pushf
call
mov
mov
ss
xchg
or
mov
sub
stos
je
sbb
in
mov
mov
dec
fcoml
fists
mov
fiadds
and
mov
loop
mov
sbb
enter
adc
dec
adc
or
xchg
mov
jno
xchg
xchg
mov
pop
pop
pop
mov
arpl
sub
in
sbb
inc
xchg
test
inc
sti
mov
scas
insl
call
pop
pusha
test
aaa
iret
pop
and
les
sbbb
pushf
cs
fisttpl
xchg
mov
cwtl
push
fisttpl
aam
cmp
clc
push
xlat
lret
fisubrs
mov
or
or
sbb
mov
clc
jecxz
pop
mov
call
sti
fstl
inc
ds
jnp
fimuls
mov
adc
popl
mov
aaa
mov
ljmp
repz
mov
adc
mov
out
sahf
repz
add
addr16
lret
ds
cmp
lcall
std
mov
rclb
ss
fcompl
dec
sbb
fcoms
sahf
sarb
cs
mov
adc
and
js
push
inc
mov
pop
push
pop
sahf
fwait
cmp
xchg
aad
pop
mov
js
je
sub
fwait
std
xor
mov
cld
sub
mov
xchg
dec
aad
mov
mov
xchg
push
jno
fwait
lock
xor
faddl
and
loop
add
pop
repnz
std
xchg
sbb
ja
cmp
mov
mov
jecxz
in
in
xchg
aas
ljmp
xor
decb
imul
cli
fs
sub
sub
mov
mov
push
mov
and
jl
mov
add
push
sub
mov
jp
jl
push
inc
sar
sbb
fwait
xor
cmc
sbb
jle
mov
mov
ljmp
mov
mov
ds
or
pop
aaa
dec
pop
insl
std
sub
push
pop
insl
movsl
sarl
fsubrl
scas
mov
into
mov
lock
inc
adc
jmp
pop
lahf
call
lock
inc
mulb
call
mov
lret
ret
nop
push
mov
sub
xor
adc
lods
add
jecxz
sbb
inc
push
lcall
pop
cli
mov
sub
sub
cmp
dec
mov
out
dec
punpckhwd
out
xchg
push
mov
jo
jmp
xchg
pop
pusha
push
repnz
mov
xchg
mov
addr16
xchg
sub
push
or
adc
scas
ret
sbb
in
adc
bound
ret
xchg
lea
pop
lret
jle
mov
jae
xchg
lret
inc
sbb
addb
dec
push
push
xchg
inc
inc
dec
idivl
imul
jno
push
sbb
jb
pop
and
cmp
push
add
call
sub
mov
sub
push
xchg
popf
aas
popa
clc
lds
imul
mov
dec
jbe
sbb
push
or
in
mov
gs
aas
mov
dec
inc
xchg
sbb
mov
sbb
push
or
push
adc
insb
and
mov
data16
cs
in
lods
cmpsb
xor
mov
hlt
lahf
cmp
gs
jns
in
and
das
push
adc
xchg
scas
scas
xlat
outsb
or
hlt
cmp
dec
pop
mov
stos
pop
mov
mov
fcompl
inc
adc
je
xor
inc
scas
jae
sub
xchg
pop
push
pmulhw
lcall
fwait
xchg
or
cs
shr
mov
sbb
sub
cmpsb
ja
xor
adc
jecxz
sub
lds
scas
adc
fisttpll
outsb
repz
fwait
clc
xor
js
or
mov
in
add
cmp
add
sub
into
xchg
dec
aad
stc
call
pop
lods
mov
movl
add
xchg
rcrb
sub
imul
mov
and
out
jle
and
scas
or
xchg
mov
dec
fs
add
fsubp
pusha
xor
xor
stos
rcrb
xchg
cmpsl
mov
sbb
adc
cld
dec
pop
shrb
xorb
jg
cmp
add
pop
imul
push
inc
pusha
js
dec
pusha
mov
popf
mov
out
subb
push
std
test
ret
lea
push
sub
pop
dec
ljmp
not
xor
cmp
mov
scas
pop
mov
loope
rcrb
les
mov
jle
leave
push
stos
jno
adc
sbb
mov
lret
xor
mov
mov
and
in
mov
aas
cmc
dec
out
sbb
lahf
sahf
inc
mov
inc
add
pop
into
divl
lea
fnstcw
inc
xor
lret
lcall
adc
ljmp
aas
xchg
jge
loop
lret
jle
or
and
xor
fs
mov
test
or
or
and
popf
add
leave
cltd
fnstcw
imul
xor
pop
out
inc
jmp
orb
fnsave
mov
or
rorb
cmpsb
test
bnd
ret
pop
aad
jmp
sub
push
adc
adc
iret
cltd
xchg
jne
xchg
fidivrl
push
popf
ret
xor
data16
adcb
jge
pop
push
cmp
clc
loope
popf
jle
mov
dec
sbb
aam
idivl
ljmp
mov
push
mov
in
mov
orb
leave
pop
mov
fs
enter
cltd
cli
lret
push
or
fwait
xchg
ja
inc
jl
in
stos
ret
inc
in
mov
clc
hlt
insl
loopne
test
paddd
out
aam
iret
rcll
in
cld
pop
add
xchg
aam
push
xlat
or
xchg
add
movsl
jge
pop
xor
lea
inc
cltd
xor
jmp
add
jne
out
xchg
jnp
test
inc
iret
xchg
and
mov
test
cmp
and
pop
push
dec
adc
cli
sub
cmc
leave
jmp
pop
aaa
pop
jecxz
decl
fstpt
ljmp
stc
mov
imul
jecxz
stos
cmp
in
es
dec
out
or
xor
and
dec
xor
shrb
jle
cs
stc
in
inc
push
adc
mov
xchg
sub
dec
pop
xor
inc
xchg
xor
fidivs
lahf
mov
xor
mov
out
sbb
shr
fimull
idivl
clc
sub
mov
ja
or
lahf
push
fwait
in
scas
loop
sub
or
fs
push
push
or
leave
and
nop
xor
aam
mov
and
subb
shr
jmp
jmp
push
cs
xchg
adc
mov
or
cli
jo
cld
push
jge
xchg
pop
pusha
fistl
insb
shr
ja
inc
jle
call
mov
pop
lret
sahf
outsb
les
idivb
pop
xor
add
into
in
out
xor
cmpb
lahf
ds
clc
gs
inc
or
sbb
push
in
dec
adcl
insb
cmp
arpl
imul
bound
dec
push
loop
xchg
xchg
loopne
dec
loopne
mov
in
inc
xchg
jmp
aam
dec
adcb
cmp
inc
adc
pop
pop
add
je
lret
lock
test
mov
dec
movsb
push
cmp
ja
xchg
jmp
sbb
add
popa
out
jecxz
dec
mov
mov
fwait
inc
hlt
repz
jg
in
sbb
sub
push
sbb
ss
jecxz
mov
pop
dec
mov
roll
jmp
lcall
gs
cltd
sahf
rorl
jp
movsl
xchg
push
adc
cmp
xor
jne
dec
jne
rorb
pop
jmp
xchg
shrl
push
and
xor
fucomip
loop
cld
or
mov
mov
test
adc
xor
mov
push
xchg
push
ss
lods
hlt
ds
test
mov
and
jmp
push
lahf
add
xchg
mov
aam
imul
in
scas
mov
sbb
stos
fstpl
jae
jno
inc
out
inc
aas
popa
mov
sahf
push
addr16
fdivrs
cmp
popf
or
xchg
minps
out
xor
jno
adc
and
icebp
imul
dec
cmp
pushf
xor
je
subl
add
xor
xchg
out
dec
pop
out
pop
pcmpgtb
ret
xor
inc
ds
mov
leave
sub
xor
inc
xor
or
xor
mov
lods
addr16
mov
sub
daa
bound
lea
into
out
adc
cmp
int
pop
je
test
clc
loopne
mov
adc
dec
sub
insl
cmpsb
jno
mov
ja
xchg
push
test
adc
fstp
jns
loop
divps
jmp
insb
fwait
and
les
pop
pusha
rcrb
inc
or
fs
push
push
cmp
insl
inc
inc
lds
call
cwtl
mov
rorl
jge
adc
loopnew
shll
aas
leave
fstp
cmpsb
push
cmp
sub
xor
repz
push
cld
jg
dec
fucomip
imul
xchg
add
mov
add
lock
loope
xchg
hlt
orb
test
call
lret
jmp
sbb
mov
in
leave
pusha
jg
shlb
stc
icebp
popa
fdivrs
xlat
dec
movsl
sub
mov
inc
xor
sbb
fsubs
test
pop
and
jb
dec
jb
pusha
or
outsb
pop
and
lds
jbe
in
mov
dec
jno
imul
sbb
jg
mov
mov
push
inc
mov
xor
arpl
xchg
out
xchg
call
stos
scas
pop
emms
insl
mov
fldenv
int3
inc
lds
jne
cli
out
lods
sbb
movsb
movsl
int
xchg
punpcklwd
ljmp
aam
hlt
sbb
inc
ret
addl
ljmp
add
mov
fcompl
mov
jbe
cmp
inc
mov
sbb
mov
adc
jbe
xor
xor
push
mov
outsb
in
out
lret
add
daa
in
ljmp
pop
xchg
fwait
mov
ds
cltd
lods
out
mov
gs
clc
fidivl
jns
inc
jae
lret
push
sbb
in
jp
xor
add
pusha
out
cmp
xchg
mov
push
xlat
cmc
inc
pop
mov
inc
xlat
inc
loope,pn
loope
push
fsubrs
cwtl
in
sbb
nop
jg
je
sahf
mov
aam
sahf
cmp
adc
push
js
and
add
das
fisubl
mov
fwait
pop
les
lahf
lret
scas
rol
fnsave
mov
dec
sub
inc
jge
cld
imull
dec
fiaddl
sub
mov
push
and
call
rcrb
mov
iret
pushw
je
test
inc
lcallw
popf
push
sub
rclb
hlt
push
inc
ret
jge
xchg
insl
mov
aas
mov
sub
sbb
in
jecxz
push
repz
movsl
repnz
divb
repnz
dec
fwait
test
sbb
jl
dec
imul
dec
mov
adc
lea
push
cli
add
inc
mov
push
mov
push
jl
lds
je
sbb
hlt
sbbl
lock
pop
ss
rolb
xchg
inc
imul
dec
cmp
and
adc
push
cmp
ja
xchg
and
js
and
adc
call
jno
movl
xchg
push
clc
pop
fnstsw
cmp
into
adc
pop
pushf
push
inc
fisubs
or
xchg
stos
jae
mov
push
cmp
ja
jo
xchg
lods
pop
les
mov
push
sbb
bnd
add
stc
pusha
dec
lock
inc
jb
xlat
pop
jbe
ss
mov
add
sti
pop
mov
push
aam
out
mov
jl
dec
push
dec
scas
nop
sarl
roll
mov
push
cmpsb
fs
loopne
cmp
lret
enter
jno
pop
and
out
mov
push
xchg
enter
xor
push
lods
pop
mov
xor
sbb
sub
sbb
mov
str
cmpsl
jecxz
jecxz
leave
das
into
mov
sub
sar
dec
in
lods
and
in
je
xor
or
jl
ss
add
and
jecxz
cmp
aas
adc
ja
pop
pop
pushf
in
mov
lcall
daa
push
aam
push
mov
pushf
fadd
mov
xlat
scas
push
and
sahf
pushf
pop
fstps
inc
dec
mov
imul
ret
hlt
fs
sub
mov
add
aad
outsl
jo
lret
cmp
cli
xchg
adc
in
jnp
xor
dec
mov
pop
js
pushf
dec
fst
popf
sahf
int
jge
loopne
dec
insb
and
rolb
aaa
leave
lea
adc
jp
scas
mov
mov
iret
scas
fistpl
xchg
aaa
mov
int
ret
mov
add
bound
cmp
shll
jbe
mov
dec
popf
ss
stc
stos
inc
lret
out
xchg
ljmp
inc
jmp
adc
sbb
fidivrs
pop
jge
int3
xorl
add
sti
jecxz
lret
movsb
lea
push
mov
pop
mov
adc
insl
cmpsl
aaa
jno
out
xor
mov
sub
mov
jp
adc
rorl
lods
push
sub
xlat
sbb
bound
mov
aas
inc
mov
and
shr
cwtl
daa
cmp
inc
sti
outsl
cmp
scas
lret
mov
jle
and
and
fnstcw
push
dec
les
xor
cltd
inc
in
fisttpl
push
mov
sti
jne
dec
mov
jl
jns
mov
sti
jbe
jno
add
inc
mov
out
xchg
push
js
les
jp
push
aad
pop
inc
pop
xor
aad
pop
sahf
scas
mov
sbb
das
int
jae
ret
addr16
add
dec
push
loope
add
leave
mov
mov
xor
dec
adc
maxps
jge
cmp
push
or
add
jne
jne
push
cwtl
push
leave
test
in
jb
or
out
ret
push
lods
aaa
adcb
jbe
or
mov
pusha
imul
xchg
pushl
bound
lahf
ljmp
imul
sub
pusha
es
cwtl
gs
out
mov
out
fisubrl
outsl
cmpsb
mov
in
outsb
gs
adc
cs
into
add
fwait
pop
mov
idiv
mov
clc
sub
mov
sbb
je
sub
adc
scas
xchg
mov
int
mov
adc
dec
cmp
andl
test
out
adc
push
shll
mov
insb
cmp
inc
push
mull
lods
mov
mov
fwait
jo
mov
inc
add
mov
mov
icebp
outsb
gs
aam
pop
push
mov
fwait
incb
xchg
int
icebp
ja
inc
cld
test
sbb
out
dec
test
mov
lods
cwtl
mov
ljmp
push
push
rep
mov
jns
adc
jmp
leave
scas
and
inc
mov
mov
lcall
das
jecxz
push
xchg
and
cmp
mov
fiadds
into
xor
imul
call
mov
gs
xor
pop
popa
dec
ret
xor
js
stos
jmp
jo
push
jno
xchg
movsl
subb
lret
out
divl
mov
and
jae
fisubrl
jmp
sub
mov
push
fisubrl
ret
mov
xor
bound
push
and
mov
mov
out
call
sub
pop
cmpsb
pop
sub
lret
loopne
fs
cmp
loop
and
fwait
cld
js
adc
pop
imul
dec
stc
push
cwtl
pop
mov
data16
adc
inc
mov
add
or
sbb
icebp
pop
mov
or
popf
out
in
ficomps
push
or
sub
lcall
ret
fistpl
test
sbb
cltd
lods
or
dec
xor
cmp
test
fwait
jp
leave
sbb
jbe
jmp
mov
imul
mov
loope
iret
movsb
mov
dec
dec
push
jl
ljmp
call
lret
pop
lods
adc
popf
adc
cwtl
cmc
push
ds
mov
lret
xchg
xor
mov
push
pushl
stos
fs
sbb
sbb
insb
popf
imul
adc
add
push
push
adc
jno
cmp
add
negl
pop
lods
jl
or
xor
mov
repz
ljmp
loop
xchg
shlb
or
lret
pushf
loop
pop
stos
iret
in
dec
mov
mov
or
fcmovbe
movsb
dec
xor
xchg
sti
decb
outsl
into
cmpsb
jae
cmp
sahf
fidivrs
push
data16
inc
jmp
add
inc
or
mov
ret
push
xor
faddl
mov
das
in
jae
and
adc
ss
ds
jb
inc
dec
ret
jp
arpl
push
clc
or
and
fsubrs
in
xlat
mov
ret
mov
push
sbb
leave
jns
in
and
xchg
or
cmpsb
inc
adc
dec
notl
outsb
and
sub
or
xchg
dec
pop
js
xchg
adc
push
fcoms
fwait
jl
dec
les
or
cmc
xchg
sbb
movsl
out
jge
pusha
mov
lret
inc
dec
push
clc
mov
inc
cltd
es
sub
addl
cld
jnp
mov
mov
add
or
fdivrs
mov
addb
add
stos
push
data16
push
bound
xchg
or
jg
adc
inc
pop
xchg
mov
pop
cmc
fsubrs
sub
jmp
dec
out
ret
xor
sbb
rcrl
fsub
pusha
inc
or
in
cmpsl
pop
add
inc
lahf
call
push
popa
push
mov
mov
imul
out
sbb
inc
pusha
pop
or
lods
dec
xchg
mov
test
pusha
pop
fwait
pop
test
lods
dec
cltd
jmp
xor
into
loopne
mov
xchg
das
push
call
das
stos
push
push
sbbl
add
nop
add
mov
addr16
js
cmp
in
ss
filds
aad
push
mov
dec
push
pop
popf
daa
dec
adc
push
and
sub
int3
and
enter
xchg
sti
nop
inc
js
jns
and
mov
sti
pusha
mov
fdivrl
mov
xchg
mov
mov
imul
mov
das
ret
bound
movsl
enter
and
shlb
mov
bound
adc
mov
and
lret
pop
cmp
xor
cld
xor
or
ficomps
idivl
lods
ret
push
pushf
xor
in
pop
cld
icebp
dec
xchg
and
pop
ret
dec
subl
adc
sub
imul
imul
adcl
xlat
int
push
cmpsl
mov
lret
lock
int3
jl
adc
jecxz
sub
adc
push
mov
inc
mov
inc
or
xlat
icebp
push
insl
jnp
cltd
mov
and
ss
loopne
adc
jo
jne
movsb
cmpsb
adc
cld
out
imul
cmp
inc
mov
jne
jle
rcrb
outsl
gs
push
or
sub
daa
and
dec
cmc
int3
push
jne
and
mov
aas
xor
aam
push
dec
jge
mov
mov
cwtl
outsl
push
xor
cmp
push
fs
cmpsb
jnp
insb
filds
icebp
imul
mov
je
sbb
xor
mov
pop
mov
sti
jns
clc
jle
sub
xor
and
roll
push
or
push
rorb
jo
xor
shlb
test
adc
incl
cli
out
fisttpl
adc
mov
filds
dec
cmpsb
in
cmpsl
xor
int3
cli
mov
loop
mov
ret
hlt
mov
je
jmp
imul
fcoml
rcrl
gs
jne
and
or
fisttpll
pop
mov
inc
mov
aaa
and
hlt
inc
addb
lcall
add
fs
xchg
xor
arpl
cmp
movsl
mov
mov
testb
xchg
push
inc
push
stos
ja
loope
movb
int
fbld
xor
push
pop
push
push
out
imul
sbb
mov
cmpsb
addr16
mov
dec
les
lret
jmp
xchg
inc
fst
push
pop
push
jmp
test
inc
jmp
push
add
or
cmc
jl
stc
adc
mov
jne
push
push
cmp
lahf
cmp
and
int3
das
gs
sub
imul
insl
jge
ret
lret
jne
cmpsb
std
add
cmp
push
inc
cmpsb
lods
cltd
jbe
enter
dec
mov
decl
cmp
xor
cli
test
ret
stos
xchg
or
jecxz
repnz
cmpl
mov
sahf
adc
mov
dec
loopw
jp,pt
dec
dec
int3
fisttps
stos
stos
jno
aaa
fistpl
popa
xchg
pop
ds
pop
aaa
jl
popa
lahf
fstl
sub
jb
sbb
adc
jmp
xchg
arpl
jae
xchg
popf
cmp
test
adc
ret
sub
adc
scas
stos
insl
fisubl
nop
addr16
cmpsb
xchg
dec
push
cltd
scas
scas
cmpb
cs
scas
psrad
sti
mov
adc
push
bound
sub
and
movsl
data16
imul
lods
jb
mov
imul
jb
mov
sbb
test
test
inc
dec
icebp
shll
or
sbb
stos
mov
push
pop
gs
xor
add
cld
mov
or
xchg
xchg
pop
sub
pop
and
adc
cmp
sbb
mov
imul
fisubs
out
xlat
or
add
lcall
sbb
xchg
push
adc
movsl
dec
cltd
fwait
movsl
jo
add
repz
pop
adc
hlt
mov
mov
lret
add
pop
dec
jno
jle
xor
push
movsl
imul
xor
and
lret
test
rcrl
xchg
mov
rcll
fimull
aaa
cmp
xchg
pop
cs
dec
xor
mov
push
pop
pusha
les
jns
jne
dec
jo
les
mov
mov
pushw
adc
rcll
sbb
jecxz
pop
neg
cld
imul
addr16
mov
sbb
les
pop
in
fdivrs
mov
lahf
popf
loope
push
mov
pop
push
dec
mov
incb
adc
xchg
shll
mov
xor
push
xor
or
stos
push
lods
jmp
xor
shlb
pop
mov
notb
push
xchg
jne
lods
mov
dec
pop
sbb
sub
sti
into
jge
jl
repz
push
jp
inc
mov
incl
out
sub
rorb
xchg
push
jb
pop
lret
jne
mov
nop
or
movsl
into
and
xchg
mov
lds
cmp
adc
rclb
jecxz
sub
popl
ficomps
je
imul
jl
adc
sbb
mov
stos
lea
sub
sub
bound
lea
jg
data16
cmp
out
imul
cvttps2pi
repnz
call
mov
repnz
fstps
jp
pop
movsb
jae
scas
cld
mov
xlat
leave
mov
out
shrb
cld
push
and
lods
mov
jo
dec
mov
scas
and
hlt
pop
test
xchg
xchg
loope
ja
pop
xchg
xchg
sub
subl
sbb
adc
and
push
push
iret
ret
pop
push
das
adc
sbb
cmp
insl
ficomps
adc
lahf
push
xor
mov
cwtl
inc
xor
mov
fstps
repz
push
mov
cs
shrb
pop
insb
daa
jno
scas
mov
mov
cmpsl
push
popa
inc
inc
rcrl
outsl
mov
lds
and
dec
cmp
inc
lds
lahf
jge
xor
push
pop
sbb
inc
mov
push
nop
xchg
jno
out
mov
insl
xchg
nop
xor
ffree
and
cmp
xor
and
rolb
rol
call
sbb
or
add
sub
push
aad
push
add
ja
int3
xor
xchg
inc
inc
dec
mov
dec
and
sbb
loop
sub
rcll
cwtl
movsb
push
xadd
sub
mov
arpl
jl
xor
pop
inc
mov
pop
mov
or
lods
addr16
jge
sub
jecxz
jmp
xchg
mov
lea
and
sub
jmp
xchg
ljmp
cmp
decl
pop
mov
mov
mov
xor
cs
or
ffreep
cli
adc
fadd
sub
inc
imul
or
psubb
sahf
mov
or
pop
cltd
add
mov
jae
inc
subl
sbb
mov
and
inc
add
and
scas
and
dec
imul
or
outsl
inc
push
fiadds
mov
popf
mov
add
repz
loop
insb
xor
test
aaa
iret
es
lcall
jb
outsl
shl
inc
jnp
or
xchg
out
jl
pop
add
int3
insl
sahf
loop
stos
inc
leave
ret
sub
jecxz
aad
leave
sub
push
xchg
add
add
dec
mov
cwtl
test
jge
and
bnd
test
test
jecxz
mov
shr
je
or
sbb
pop
pop
and
fwait
pushf
xchg
sahf
fsubs
popf
loopne
popa
xchg
add
aad
loop
mull
xchg
adc
cltd
mov
mov
jp
sbb
mov
imul
mov
imul
mov
adc
imul
ss
testl
push
stc
loopne
dec
std
icebp
and
push
fmuls
xchg
std
cmp
sbb
inc
enter
dec
ja
fs
data16
inc
scas
fisttpl
call
lock
jo
jns
aad
sub
sub
mov
xor
jne
sub
inc
test
scas
mov
std
push
inc
or
add
pop
mov
xchg
addr16
dec
pop
js
xor
jp
mov
lods
xorb
mov
dec
addb
dec
pop
fwait
test
or
jg
mov
testl
jns
fwait
arpl
and
js
xor
es
xchg
insb
mov
mov
and
gs
outsb
das
out
pop
jge
out
in
adc
ret
fsubrs
or
ret
dec
addr16
fistps
sarb
fwait
lods
push
gs
cld
je
dec
insb
sbb
adc
fistps
test
aam
sahf
sub
test
xor
or
jae
pop
leave
inc
inc
sbb
jae
hlt
mov
cld
pop
and
and
loop
cmpsb
adc
movl
das
cmp
test
inc
ror
add
jne
adc
mov
sahf
or
mov
inc
iret
push
aas
jbe
push
and
out
xchg
enter
test
out
inc
cwtl
ret
cmp
addr16
mov
cmp
mov
xchg
outsl
or
pop
inc
or
leave
bound
and
and
out
xor
cmp
imul
push
sub
pop
mov
dec
rorl
cmp
ds
jmp
rorl
lods
in
mov
fwait
mov
sub
ds
incb
pop
push
mov
sbb
aaa
cmp
push
push
xchg
mov
lock
and
call
sti
dec
arpl
pop
cltd
pop
push
mov
pop
std
mov
jle,pn
mov
pop
add
jl
dec
fdivrl
push
xchg
pop
in
int3
movb
stos
mov
inc
arpl
repnz
rclb
inc
jp
push
jb
or
insl
imul
inc
inc
mov
stos
and
mov
fbld
rcrl
mov
pop
mov
mov
mov
test
jb
cmc
fwait
push
fidivs
sbb
add
pop
mov
add
test
test
gs
jecxz
mov
std
xor
pusha
outsl
lret
xchg
pop
xchg
pop
push
fists
das
mov
adc
arpl
push
fistl
jno
and
arpl
sbb
mov
inc
movsb
scas
in
gs
mov
enter
test
jge
insb
nop
and
sub
dec
loopne
and
jnp
inc
fidivrs
int
loope
jnp
icebp
pop
jp
es
xchg
mov
lea
xchg
ljmp
loop
testl
cld
std
stos
jmp
dec
pop
enterw
insl
or
shrb
xchg
data16
aaa
test
sub
sbb
adc
jg
icebp
cmp
jno
dec
add
xor
inc
frstor
hlt
xor
dec
add
dec
repnz
pop
fidivrl
push
cmp
pop
cmp
dec
addl
or
aam
pop
and
daa
add
lods
and
test
sub
stos
adc
push
sbb
arpl
add
push
fmul
push
inc
push
sbb
xor
rcll
iret
pop
and
pop
loopne
mov
cmp
inc
rolb
inc
dec
sub
xor
or
cmpsl
fs
test
adc
into
xchg
pop
fisttps
out
jge
xchg
push
pop
es
add
or
and
mov
imul
nop
stos
sbb
xchg
pop
mov
cs
addr16
add
jae
cmc
outsw
movsl
lcall
popf
xchg
popa
mov
cmp
ds
xchg
daa
inc
test
xchg
add
sub
cli
ss
movhlps
xlat
cmpl
outsb
stc
mov
loope
ja
sarb
andb
push
pop
push
xchg
inc
mov
pop
cld
mov
push
mov
shr
jnp
movsb
scas
dec
dec
sub
sarb
cmp
cmp
inc
mov
pop
push
sahf
mov
add
push
movsl
lea
push
stos
add
or
ja
cmpsl
int
imul
mov
push
movsl
sbb
pop
into
rolb
out
nop
xor
cmc
xchg
scas
mul
pop
cwtl
pop
cmp
fldl
mov
jo
fmull
pop
jl
fdivrp
inc
insl
cmpb
pop
test
sbb
fistl
data16
das
test
in
cmp
cmp
ja
hlt
in
mov
xor
dec
inc
leave
dec
mov
pop
bound
popa
stos
dec
and
pop
xchg
or
adc
loope
and
nop
pop
adc
repz
mov
popa
sbb
mov
xchg
xor
in
fdivl
add
in
mov
cmp
mov
es
and
lods
movsl
xchg
pop
xchg
cmp
cmp
jecxz
mov
mov
and
sub
cmp
adc
fstpt
loope
jl
ja
mov
lds
fbld
stos
in
sub
out
leave
test
stos
arpl
xor
xlat
icebp
adc
js
cmp
sti
inc
cld
mov
shrb
cltd
aam
sbb
pop
cmp
and
dec
jo
loopne
aas
inc
and
lods
adc
test
adc
xchg
or
loope
lret
or
pop
or
cmp
outsl
push
mov
stos
mov
les
cmc
cli
dec
addb
shlb
mov
dec
inc
repz
test
mov
jge
lea
mov
fildll
insb
out
xor
jo
fiaddl
xor
cmp
sub
pop
popf
dec
dec
leave
call
popa
push
inc
icebp
mov
inc
dec
xchg
leave
fisubrl
cmp
enter
mov
sub
jb
fistps
insb
jnp
sub
loope
xor
fcomps
fmuls
sti
lods
lds
lret
lret
add
popf
enter
popf
xor
add
cmpsb
movsb
add
aaa
negl
jge
adc
xor
loop,pn
lcall
pop
sbb
adc
movsb
sbb
dec
sub
scas
imul
mov
jge
sti
jno
fstps
cmp
mov
out
std
dec
push
pushf
out
adc
gs
push
xchg
lret
push
xor
test
xchg
jg
adc
loopne
xchg
adc
cld
adc
imulb
push
cmp
js
repnz
jle
jecxz
dec
push
or
adc
aaa
mov
fcmovu
fistpll
xor
faddp
pop
ret
jmp
and
idivl
minps
test
xor
out
roll
aad
inc
mov
add
aaa
shl
cmp
pop
sbb
mov
cmovbe
repz
sti
adc
xor
lods
jno
pop
test
mov
fdivr
push
cli
loope
repnz
fsubrl
icebp
in
xchg
mov
das
nop
out
inc
push
mov
scas
mov
es
mov
dec
movsb
inc
add
cmp
inc
dec
mov
xor
xchg
dec
out
das
in
jp
cmpw
call
add
fisttps
mov
in
lret
jb
popf
jle
jle
ljmpw
jo
sub
or
mov
mov
addl
mov
cmp
scas
insb
xchg
cmpsb
lahf
aas
mov
gs
mov
jmp
fnstsw
fnstsw
pop
xchg
dec
push
xchg
fdivrp
out
xor
pop
inc
in
inc
pop
jge
enter
stos
cmp
ret
icebp
rorl
lds
push
fdivrs
inc
call
dec
mov
add
jl
in
mov
and
and
xchg
out
xor
fisubl
push
andb
stos
imul
mov
dec
jmp
test
jle
push
xchg
mov
jo
sti
orb
push
pushf
out
cmp
ret
sub
aaa
and
pop
lahf
push
pop
jo
rcl
jmp
test
in
ret
lea
mov
or
fisubrs
and
push
shrl
jo
add
inc
ja
cmp
das
mov
into
sbb
scas
mov
mov
addr16
jbe
jg
or
cltd
shrl
inc
bound
dec
mov
fildll
cmp
adc
cmpsb
mov
mov
sbb
out
insb
push
rorl
scas
dec
mov
jl
mov
mov
popa
xchg
das
pop
aaa
arpl
adc
inc
lock
loop
mov
xor
gs
ja
pop
inc
and
inc
lods
pusha
cli
movsb
jo
xchg
paddd
test
test
jno
sub
ret
sub
adc
out
jge
cltd
jne
inc
sub
adc
pop
fwait
xchg
sub
xchg
imul
cmp
insl
in
pop
call
jno
fbstp
mov
xor
add
ljmp
mov
fidivrs
xchg
or
pop
call
test
pusha
rcll
lret
ds
arpl
xor
push
add
xor
jno
out
call
les
push
mov
or
inc
outsb
outsl
cltd
repz
adc
movsl
insb
dec
add
push
or
mov
xchg
push
inc
js
aaa
loope
incb
sub
lods
pop
fcompl
ret
inc
ljmp
xchg
mov
fsubl
inc
push
pop
pop
mov
xchg
cmp
jmp
pop
popf
mov
xor
enter
into
sahf
mov
call
call
mov
jno
push
sub
clc
push
mov
out
sub
mov
sub
std
xor
add
pop
push
xchg
mov
iret
sub
or
test
push
cli
mov
cld
inc
lods
xchg
test
into
xor
mov
insl
pop
xchg
stc
icebp
push
or
xchg
inc
aaa
xchg
cmp
cwtl
xchg
jge
and
sbbb
loope
cltd
cmp
xor
aas
mov
pavgw
rorb
fisubrl
jmp
loop
mov
negb
and
cmp
sbbb
shl
mov
orb
fbstp
loopne
lret
out
mov
push
xrelease
loope
test
mov
out
lods
rol
dec
pop
dec
testl
jecxz
repz
mov
push
mov
ret
mov
rclb
xchg
aas
jp
ds
sub
ss
ret
popf
rcrb
jno
hlt
xor
mov
lock
xchg
xchg
mov
scas
push
loope
fprem1
dec
mov
fstpt
or
dec
jmp
mov
out
adc
iret
shr
outsb
and
jo
or
mov
movsb
fdivrl
test
push
xlat
dec
popf
inc
push
sbb
inc
xchg
adc
mov
mov
and
mov
cli
adc
loop
lret
mov
ja
movsb
lods
sbb
popf
sbb
cmp
and
lret
jle
push
mov
scas
jmp
lret
sbb
push
mov
lcall
scas
ja,pn
mov
stc
sub
mov
shl
les
fs
inc
movsb
jge
xchg
jecxz
xchg
cmp
pop
mov
lods
out
mov
adc
or
jae
adc
push
roll
ret
jno
ret
andb
push
adc
mull
inc
pop
dec
sbb
nop
scas
jmp
fs
push
and
adc
fs
mov
jnp
jbe
and
jbe
jno
pop
push
iret
into
mov
cld
adc
mov
adc
mov
mov
cs
movsl
lret
adc
jno
pop
fiadds
jae
xchg
aad
xlat
mov
test
test
xor
cltd
iret
pop
lcall
adc
sub
faddl
cmp
mov
pushf
jo
stc
dec
lcall
xor
pop
push
xchg
mov
mov
dec
add
bound
dec
xchg
dec
rolb
test
rcr
xchg
pop
sahf
mov
ljmp
outsb
repz
push
rorb
enter
adc
lock
sub
lods
jp
hlt
xor
outsl
stos
xor
push
jmp
fwait
inc
add
mov
movsb
sub
xor
in
xor
or
lret
js
cwtl
iret
dec
dec
and
xor
hlt
movsb
add
repnz
or
fdivs
cltd
inc
int3
mov
ljmp
xchg
ljmp
cltd
adc
push
inc
xchg
adc
ss
test
xchg
mov
and
jecxz
dec
mov
int3
or
jne
ficompl
sub
inc
pop
pop
sbb
push
int
lret
dec
fwait
jecxz
xchg
mov
mov
mov
aad
out
pop
jge
repz
push
incl
jbe
scas
xchg
jno
mov
adc
data16
rclb
push
mov
jg
lcall
inc
and
nop
mov
adc
sub
or
cmp
xor
ljmp
cmpsb
cltd
and
mov
xor
lock
inc
or
das
or
inc
out
jne
mov
imul
int3
mov
jmp
mov
mov
insb
adc
jge
nop
rorl
loope
shll
sbb
cmpsb
bound
xchg
xchg
cltd
test
mov
add
or
mov
mov
push
data16
and
popa
jp
sub
push
movsb
push
outsl
cli
xchg
cltd
push
sbb
mov
jno
dec
scas
cmp
mov
scas
sbb
lahf
scas
adc
xorb
dec
popa
lahf
jae
in
or
or
aaa
xchg
mov
cmp
jae
ljmp
leave
out
jl,pt
outsb
add
adc
jo
inc
mov
sub
movsl
andl
push
or
push
mull
cmpsl
push
lahf
cli
ja
shll
push
roll
jmp
pop
sub
gs
stos
ja
roll
out
cmc
jb
cli
fxch
fistpll
incb
xchg
push
push
fcmovnbe
leave
loope
push
sub
mov
movsb
lods
das
dec
data16
and
sbb
xchg
out
or
or
sub
pop
jmp
adc
mov
push
mov
int3
cmpsl
inc
fisttpll
clc
pop
or
adc
repnz
xchg
imul
std
mov
rorb
xchg
mov
lret
jp
or
es
jecxz
cmp
aam
jmp
arpl
add
inc
dec
mov
adc
sub
sar
xlat
data16
add
push
call
and
add
cmp
adc
bound
movsb
aaa
pop
lods
add
je
jb
and
mov
sbb
int
outsb
pushf
stos
pop
dec
movsb
inc
or
ror
pusha
jne
cmp
mov
mov
and
mov
pop
cmp
and
dec
mov
mov
adc
fwait
and
outsb
int
dec
sar
xor
adc
pop
cli
mov
jnp
sbb
mov
sbb
fdivp
clc
mov
stc
lock
rol
mov
and
jns
cmc
clc
call
pop
sbb
jp
enter
scas
es
add
add
outsl
pop
test
es
fcomps
mov
push
fnsave
mov
or
jne
push
mov
mov
cltd
je
mov
lcall
mov
mov
dec
in
push
mov
inc
mov
push
dec
mov
int3
ret
push
ds
int3
cli
lahf
fidivs
xchg
int
lods
jp
faddl
pushf
inc
pop
imul
push
xchg
push
insb
nop
roll
pop
sbb
fsubrp
and
mov
mull
lods
movsl
sub
div
inc
xor
sti
movsl
sti
and
aam
addr16
test
inc
out
out
mov
jmp
jns
stc
lods
lret
pushf
cmc
arpl
popf
scas
ja
pop
in
or
addr16
and
push
dec
jnp
add
addr16
outsb
push
aaa
sbb
dec
sub
cmpsl
push
outsb
jl
ret
les
mov
add
cmp
dec
ret
or
inc
push
lea
shll
into
ljmp
push
sbb
inc
jno
inc
mov
movsl
mov
pop
sub
mov
sub
jecxz
aaa
xor
fbstp
movsl
or
jmp
dec
or
xchg
adc
ficomps
push
shlb
or
cmp
stos
pop
pop
mov
xchg
cmp
xor
loope
jb
pop
push
pop
xor
scas
xchg
pop
es
inc
stos
inc
lds
cmp
rcr
enter
outsl
aad
lcall
addb
jle
push
mov
cli
sub
shlb
mov
and
notl
loopne
into
dec
push
call
pop
inc
jp
pop
cltd
stos
sysenter
cmp
lock
rolb
pop
dec
cmpsl
pop
pop
sbb
test
test
mov
cmp
dec
or
rorl
jnp
mov
push
or
mov
int3
or
inc
sbb
das
jg
fsub
sbb
dec
jb
mov
cld
insb
pop
push
stos
aas
sub
jmp
in
xchg
test
pushf
cmp
jg
jo
jmp
add
jle
xchg
pop
ror
gs
orl
sbb
fdivrl
mov
mov
ret
cmpsb
les
sub
mov
out
mov
push
sbb
mov
outsb
xchg
sub
loopne
ja
cli
mov
or
mov
pop
cmpsb
leave
cmp
sub
jecxz
test
push
pop
mov
push
xchg
jnp
outsl
test
pop
jno
inc
jnp
add
into
scas
stos
add
dec
jnp
mov
pop
sbb
lods
push
out
cmc
fcoml
enter
add
add
stc
cmpl
stc
mov
movsl
imul
cmp
int
and
push
push
out
sub
inc
in
out
xchg
jl
shll
scas
mov
stos
push
in
mov
sbbl
stos
mov
sbb
mov
shll
add
adc
push
xchg
jl
stos
fwait
push
test
fwait
inc
or
mov
cmp
push
adc
add
aam
add
xor
sub
mov
decb
mov
mov
xorl
arpl
dec
call
insl
pop
push
cli
imul
movsb
fidivs
sbb
add
jbe
cmp
and
push
roll
es
add
sbb
push
sub
hlt
es
dec
lods
in
add
imul
loopne
jp
push
adc
mov
inc
fisubrs
push
mov
repz
in
lret
sub
mov
or
jp
or
mov
clc
jnp
xor
aas
fldcw
sbb
stc
lret
push
push
hlt
loop
sub
adc
pop
bound
addl
add
mov
or
scas
dec
xor
add
and
sub
mov
and
or
das
stc
test
fsubrl
imul
aad
in
faddl
mov
rclb
popa
mov
leave
cmpsl
pop
mov
mov
sahf
bound
and
out
xor
xor
outsl
lods
pushf
pop
rorl
sub
jge
or
push
cmc
pop
sub
js
push
xor
jle
das
movsl
loopne
cli
in
mov
std
dec
dec
fbld
call
mov
pop
dec
dec
pop
cmp
pop
mov
stos
into
stos
mull
mov
imul
flds
cltd
pop
pop
addr16
movsl
mov
testl
fidivs
lret
scas
jae
xor
push
lods
adc
repz
loop
out
imul
in
xchg
inc
jns
and
dec
mov
movsl
dec
pop
cmpb
loope
out
xlat
inc
out
xchg
js
cmpsb
pushf
jg
loope
out
add
jmp
outsb
shlb
loope
or
into
lret
inc
in
hlt
or
aas
dec
pop
mov
test
sub
pop
iret
pop
xor
loop
push
push
aad
stos
cmp
popf
jp
lds
stc
dec
and
addl
cltd
lock
inc
push
mov
dec
mov
lahf
leave
in
add
outsb
cmp
ret
sub
mov
mov
ficomps
fst
and
imul
mov
add
push
insl
adcb
enter
cld
out
movsl
push
mov
pop
sbbl
jb
sbb
daa
rclb
insl
mov
mov
xor
sub
jmp
inc
pushf
sub
sbb
rcl
inc
jno
dec
das
xor
jne
pop
fnstcw
jecxz
int3
stos
gs
adc
mov
mov
mov
jecxz
aaa
push
int
sti
or
jl
lds
mov
fcoml
mov
icebp
mov
cli
jecxz
mov
jb
out
pop
repz
lahf
dec
fwait
cmpsl
cmp
pop
out
mov
add
sbb
mov
dec
push
mov
dec
dec
push
loope
push
lahf
stos
sub
lahf
ss
pusha
sbb
push
lcall
test
dec
sub
fbstp
mov
push
fdivrl
aam
ds
ss
push
stos
sbb
lcall
inc
mov
mov
pop
sub
call
mov
mov
jns
cld
idivb
mov
adc
dec
mov
nop
mov
mov
leave
pop
fistps
loopne
adc
add
fmull
add
add
dec
je
insb
jmp
xchg
xlat
pop
idivw
pop
sti
nop
jae
movsb
insb
outsl
leave
and
and
inc
sub
ljmp
and
xchg
cli
ljmp
sbb
jl
hlt
push
pop
les
or
popa
jge
fsub
xor
mov
jbe
js
jo
mov
jecxz
pusha
enter
cs
xlat
add
pushf
sub
inc
in
int
cmp
jbe
daa
push
cmc
ss
popa
aad
push
jp
popa
call
or
jg
push
mov
ds
shll
data16
jmp
jmp
fdivrs
lea
mov
inc
mov
rcrl
mov
fs
xchg
sub
sub
or
ljmp
addl
cs
push
mov
scas
mov
lea
jp
dec
ss
jae
lret
std
mov
cmp
xor
jo
adc
sbb
addb
add
mov
jmp
add
adc
cmc
testl
lods
ret
movsl
pop
movsl
scas
ja
xchg
push
fdivp
xchg
mov
jmp
ja
cmp
aam
fstpl
xor
pop
or
std
bound
mov
mov
fmull
loope,pn
out
mov
mov
loop
dec
ss
fstpt
leave
in
inc
hlt
adc
push
int3
call
mov
nop
push
test
popf
sbb
jbe
movsl
insl
and
shlb
pop
cmp
lahf
ret
stc
aad
xchg
jecxz
outsl
fcomps
mov
js
adc
inc
test
jle
test
mov
sbb
mov
mov
sub
das
mov
ret
shrb
cmp
inc
inc
repz
and
sahf
xlat
in
xor
nop
xchg
inc
cmpsb
inc
lock
loopne
cld
popf
push
shrl
xor
cli
rol
repnz
out
nop
inc
sarl
mov
jo
leave
jbe
adc
add
jb
mov
dec
mov
pushf
fisubs
sub
xchg
add
repnz
lret
jns
mov
xchg
insb
std
fs
in
pop
scas
arpl
pop
or
mov
or
jmp
cld
pop
fs
jge
insb
dec
add
jbe
push
leave
lahf
lods
mov
fidivs
dec
mov
mov
push
sbb
outsl
adc
andb
fmuls
fnstsw
push
mov
pop
enter
stc
repnz
push
adc
dec
add
xchg
add
jmp
jb
mov
arpl
jge
cli
imul
add
jge
clc
xchg
jmp
rcrl
lds
leave
xchg
cltd
push
cmp
fcomps
push
lahf
in
cwtl
inc
jge
gs
fnsave
inc
mov
push
ret
cmp
mov
xor
je
xor
or
pop
inc
daa
imul
add
lock
cmp
cmpsb
lods
inc
sarl
jne
lret
lahf
jge
jne
shlb
std
je
pop
mov
push
fisubrl
mov
mov
out
push
xor
dec
in
mov
daa
cmpb
inc
mov
mov
outsb
scas
cld
std
sbb
mov
jbe
cli
or
or
adc
pushf
pop
jp
mov
xor
xor
lahf
mov
imul
mov
out
outsb
addr16
sbb
sarl
mov
subb
jo
add
mov
inc
mov
xlat
mov
jmp
punpckldq
add
sub
inc
stos
mov
sbb
mov
or
cli
fnstcw
xchg
jae
andb
sarb
pushf
sub
or
add
inc
gs
mov
cmpsl
xchg
sbb
adc
pop
xchg
jg
inc
jb
idivb
fstps
push
adc
mov
andl
gs
repz
sbb
dec
std
pop
repnz
int3
dec
daa
fistpll
sbb
add
clc
repz
enter
ret
lea
inc
pusha
push
jge
cmp
dec
cmp
push
icebp
mov
movsl
dec
stos
popf
popa
add
paddb
arpl
sub
push
xchg
inc
cltd
aam
stc
lea
test
cmp
inc
lret
xor
xchg
frstor
mov
stos
adc
stc
lahf
xor
pop
jl
push
or
or
outsl
lcall
jecxz
xchg
push
test
lcall
jne
cmp
popa
jne
ja
and
fcompl
push
add
movsl
push
add
jg
push
stc
pop
and
popf
les
aam
inc
scas
jl
cmp
push
leave
shll
data16
add
into
or
cmpsb
sbb
xchg
insb
cmc
sub
or
sub
test
inc
xor
loop
insb
lret
ljmp
or
stos
xchg
sub
aas
push
in
dec
cmp
cmp
fbstp
gs
cli
sub
adc
ljmp
pop
test
jns
xor
xchg
jmp
pop
lcall
push
push
mov
sub
loope
inc
outsb
inc
fistpl
cwtl
cltd
pop
ret
add
notb
cmp
and
cmp
mov
adc
in
inc
xchg
pop
mov
cmc
aam
andb
dec
mov
sbbl
pop
mov
sbb
or
xchg
pop
lret
gs
pop
pop
arpl
adc
push
and
sbb
lock
push
pop
das
xchg
xchg
sub
outsl
sbb
mov
fucomp
cld
lcall
or
pop
push
ljmp
imul
add
into
bound
and
sub
inc
in
mov
add
lret
mov
cmpsl
cwtl
xchg
sub
data16
xchg
jo
and
cmc
scas
sub
mov
into
aaa
sbb
aas
and
dec
cmp
mov
and
test
mov
mov
xchg
pop
adc
push
icebp
in
test
and
orb
mov
dec
add
jne
push
gs
push
ret
mov
push
fstps
jp
clc
sbbl
xchg
xor
cmp
adc
mov
push
aas
mov
je
push
ret
cmp
nop
fs
outsb
or
cmp
fildl
cli
mov
add
int
loopne
andb
jae
or
lods
ficoml
or
into
xchg
movsb
pusha
xor
ret
push
ret
pushf
dec
cs
xchg
ds
mov
push
pop
mov
push
inc
cs
jo
push
cli
aam
repnz
dec
xlat
imul
mov
pushf
xor
movsb
xchg
mov
lock
jbe
jbe
jo
xchg
mov
mov
xchg
jne
loope
add
aas
sti
cli
adcl
adc
fnstcw
imul
add
shlb
inc
shl
addb
pop
inc
or
ficomps
sub
loope
rolw
testl
imul
loopne
and
pushf
pusha
add
and
sbb
pop
xchg
push
cmp
jg
sub
dec
sub
mov
or
fcomps
jb
sahf
sbb
mov
loop
pop
xchg
cs
lahf
pop
dec
mov
cmp
aas
push
lods
pop
mov
jae
testl
ljmp
sub
add
pop
addr16
ja
popf
xchg
and
and
imul
adc
fnsave
insl
sbbl
xor
repz
pop
in
mov
xor
pusha
pop
push
push
mov
icebp
cmp
sub
aad
aad
xchg
fnstenv
cmc
mov
arpl
psrad
das
inc
fidivrs
adc
push
adc
sbb
or
xchg
ljmp
xor
mov
jbe
gs
cltd
sub
lds
icebp
shlb
lods
cmp
mov
ds
jp
jecxz
mov
mov
lds
inc
imull
std
divl
movsl
cmpsl
imul
std
test
int
je
leave
lea
out
addl
or
mov
daa
je
iret
les
aam
sub
push
sub
jle
inc
test
xchg
pop
fdiv
into
test
dec
xchg
lret
and
and
pusha
test
xchg
push
push
rcll
adc
into
cmp
lret
je
mov
and
pop
xchg
cmp
out
dec
pop
mov
mov
mov
dec
mov
imul
stos
push
mov
rolb
in
mov
mov
mov
insl
sbb
and
mov
popa
jno
sub
sarb
jmp
sbb
test
jae
push
lahf
mov
repnz
push
or
fdivrl
cmp
test
cli
xor
push
fstpt
and
scas
out
loope
xor
pop
je
bound
or
sbb
sbb
mov
sbb
jle
sti
jno
movsl
mov
dec
jno
add
cmp
mov
imul
dec
push
push
out
jns
pop
and
push
ja
inc
das
mov
flds
and
sub
lods
aas
inc
mov
push
adc
out
out
ljmp
mov
nop
cwtl
xchg
cmp
lea
fdivrl
pop
outsl
or
jno
cmc
mov
add
and
clc
jbe
nop
rcrl
add
repz
sbb
loop
sbb
aaa
lods
imul
xor
inc
stos
inc
xchg
and
movsl
in
sahf
mov
xor
pop
cmpsb
xor
xor
xchg
aad
adc
and
jle
lahf
test
mov
movsb
xchg
das
ljmp
outsl
lcall
pop
mulb
popa
fimuls
cmp
mov
mov
into
repz
filds
pop
mov
xlat
cs
add
lret
mov
fscale
push
outsb
mov
mov
scas
jmp
add
test
xlat
ret
mov
dec
lds
mov
jmp
pop
mov
imul
das
add
pop
push
cltd
xor
das
cmp
test
movsb
pop
xor
pop
and
aam
lahf
jp
mov
xor
xor
js
inc
pop
in
jbe
and
xor
out
test
lods
leave
or
sub
les
repz
jle
orb
dec
dec
xchg
inc
scas
mov
insl
pop
out
out
push
lret
js
cltd
lret
mov
add
jp
loope
out
gs
mov
cli
add
movsb
outsl
fcoml
mov
int
add
xchg
push
shlb
jo
xor
fldcw
addr16
mov
repnz
movsb
mov
mov
nop
jg
or
push
xor
sub
dec
ret
fidivl
cmp
add
test
lret
daa
bound
adc
xchg
or
bound
xchg
pop
stos
adc
int
sub
cmp
call
xchg
fwait
das
loope
sbb
lret
jp
aam
sub
push
mov
movsb
dec
dec
andb
or
outsb
mov
pop
pop
inc
jge
lods
mov
cwtl
or
adc
xchg
and
aad
add
sbb
adc
mov
fs
stc
lock
mov
and
push
jae
mov
pop
mov
cmp
shll
mov
xchg
leave
fdivrs
stc
xor
mov
adc
push
and
stc
cmp
lods
addr16
adc
sbb
in
push
lds
sbb
push
out
and
ud0
test
mov
seto
ret
mov
mov
mov
sub
jecxz,pt
iret
test
push
mov
mov
jne
imul
add
xchg
jae
xor
mov
cmpsl
jp
xchg
sbb
xor
ds
add
stos
div
jle
lods
shlb
pop
shll
ja
add
repnz
les
lds
pusha
sbb
add
add
subb
mov
mov
mov
fsubr
shll
xor
test
push
aam
lcall
test
fmul
cli
add
sbb
add
lods
cwtl
or
xor
out
leave
push
into
cs
jle
fs
je
sbb
out
dec
mov
fwait
jb
adc
clc
inc
loop
push
xchg
push
mov
inc
sahf
mov
sub
xchg
cmp
add
int
cmp
xchg
mov
movsb
sub
sti
repz
jmp
in
mov
pop
js
pop
rorl
dec
xor
xor
dec
in
lahf
outsb
pop
shrl
jl
xor
test
outsb
in
xchg
stos
scas
xor
or
xchg
mov
add
pop
insl
sub
xor
aam
and
ret
mov
mov
push
dec
std
or
fistps
fstl
or
bswap
bound
insb
pop
mov
xor
leave
push
push
cmp
mov
sbb
fwait
cmp
jge
fstpl
jecxz
lods
repnz
inc
inc
dec
ss
cs
adc
xor
or
xchg
addr16
mov
ljmp
sub
pop
orb
xor
sti
icebp
xorl
inc
sub
mov
and
insl
xchg
lret
cmp
je
add
inc
mov
push
mov
sti
sbb
inc
cs
and
out
mov
xchg
jp
push
rol
sbb
and
repnz
jle
aas
pop
insb
pop
test
dec
stc
adc
mov
mov
push
mov
inc
sub
leave
xor
pushf
test
enter
cmp
cmp
out
push
lea
test
mov
ss
scas
fisubrs
xchg
ljmp
nop
jae
xor
mov
xchg
movntq
xchg
sbb
sub
repnz
dec
sub
xchg
dec
add
cld
sub
adc
stc
ds
pop
test
ljmp
or
inc
pop
jae
dec
leave
cmp
test
xchg
leave
loopne
xor
test
aad
data16
push
adc
test
loope
cwtl
pop
cmpsb
or
aam
push
fisubrs
dec
stos
inc
ret
mov
adc
lcall
or
jecxz
and
repnz
xchg
shll
mov
mov
add
lret
or
xor
in
lcall
xchg
push
xor
js
cld
ficomps
fmul
add
jg,pt
fnstcw
jb
js
pop
cld
jnp
add
std
shrl
lods
push
sbb
scas
outsl
or
cltd
leave
add
jmp
sub
dec
mov
or
push
mov
mov
or
mov
arpl
aam
call
lahf
push
jbe
and
mov
iret
jno
xlat
and
or
loope
mov
add
mov
shll
je
cmpsb
sub
push
and
es
push
add
aam
jb
gs
jo
pop
inc
inc
cmpsl
sbb
mov
jne
das
sbb
pop
cmp
mov
iret
cmc
sbb
xor
sub
inc
push
xor
sbb
jp
and
cmp
cmp
out
std
arpl
or
loopne
popa
xchg
xlat
dec
adc
cmpsl
lock
cmp
cmpsl
mov
mov
icebp
iret
push
testl
mov
fistpl
sbb
cli
push
outsb
mov
and
add
dec
mov
mov
sbb
shr
lret
xor
mov
popf
push
mov
pop
sub
push
add
pop
cmp
outsb
push
inc
sbb
xchg
iret
jg
ret
arpl
ret
fcompl
jne
dec
jmp
std
and
mov
push
outsb
xchg
push
insl
sub
inc
cmc
mov
rcrl
loope
sbb
pop
std
inc
ds
fsubs
into
cmp
into
fists
jmp
rcrl
out
mov
notl
fistl
mov
jle
lock
jne
out
and
and
loope
es
push
lods
fbld
mov
push
dec
and
sbb
and
or
inc
cmpsb
add
push
fcomip
jecxz
adc
mov
hlt
cmp
or
jmp
jnp
pop
pop
insl
dec
xchg
fwait
lods
adc
out
les
and
movsb
clc
inc
leave
jns
push
cmp
in
test
pop
ljmp
into
imul
imul
cmp
sbb
pushl
add
les
aaa
lods
or
mov
les
cltd
pop
mov
add
push
stc
dec
jp
iret
lret
pop
inc
jp
lock
jo
fldlg2
xor
lcall
jecxz
pop
push
jmp
stc
mov
mov
popa
xor
add
sti
jo
push
dec
pushf
popf
add
arpl
scas
mov
push
jbe
add
xor
pop
cli
imul
pop
in
sub
inc
mov
fmuls
cld
cmpsb
movsl
xor
fcmovbe
pop
or
jnp
dec
adc
filds
push
pushf
mov
jg
data16
add
adc
outsb
dec
dec
pop
roll
jnp
int
rclb
dec
push
faddp
xor
and
inc
out
sahf
sub
jns
out
dec
jne
pop
xor
das
les
xor
or
jl
or
jle
ljmp
mov
xorb
xchg
jbe
mov
jo
sub
test
pop
jecxz
mov
dec
inc
inc
and
pop
mov
test
popa
push
movsl
sbb
and
xchg
adc
sbb
xor
rcl
jg
xor
jecxz
loopne
or
hlt
cld
loope
ret
in
leave
and
out
pop
lahf
sbb
setnp
push
into
and
xchg
mov
lret
nop
daa
in
into
outsb
xchg
push
mov
cmpl
pushf
and
xchg
adc
inc
xor
or
outsb
aas
mov
out
cli
inc
inc
mov
sbb
mov
adc
mov
sar
dec
adc
neg
test
mov
insb
dec
jnp
mov
mov
test
adc
sbb
outsb
inc
pop
stos
out
jecxz
fsubrs
push
fdiv
jle
stc
dec
sbb
mul
inc
fwait
ds
pop
leave
inc
frstor
push
inc
in
cmc
and
jmp
xchg
pop
mov
cmc
add
mov
clc
push
rolb
adc
lods
cltd
mov
mov
xchg
xor
ljmp
hlt
jns
fstpl
adc
sbb
inc
mov
sbb
or
sbb
or
mov
mov
stos
cwtl
pop
cmp
arpl
paddusb
cmp
sub
cmp
and
sbb
mov
push
out
iret
aad
rolb
mov
mov
pop
add
mov
neg
popf
sub
mov
lods
orl
jle
sbb
sub
inc
or
sub
rolb
mov
xchg
outsl
rcr
xchg
and
push
jae
retw
testl
je
xchg
cmp
mov
add
aam
inc
iret
xor
pusha
xchg
pop
cs
clc
pop
ds
mov
loop
roll
pop
loope
ja
ret
sub
jnp
ds
dec
xchg
repnz
mov
dec
cli
jb
ljmp
inc
test
xchg
sbb
in
xchg
cmc
in
repnz
push
sbb
out
adc
cmp
push
ss
sbb
dec
cs
ljmp
dec
sbb
test
adc
inc
xchg
fdivs
lock
jecxz
cmp
in
pop
mov
sub
je
mov
cli
pop
sub
push
mov
stos
mov
fists
test
add
lods
pop
sbb
adc
jne
repz
inc
mov
add
dec
jmp
inc
sarl
or
and
loop
adc
andb
test
mov
sub
mov
push
cmp
mov
clc
jle
data16
pop
cmp
insb
push
dec
filds
or
dec
out
and
push
mov
lods
lahf
loope
das
bound
mov
lock
jge
sti
daa
mov
push
cmp
xor
in
push
add
lcall
cmp
xchg
cmp
iret
mov
into
push
pop
or
stc
stc
xor
sbb
xchg
sahf
pop
dec
xor
arpl
fidivl
mov
lcall
inc
push
inc
mov
icebp
xchg
pushf
fbstp
subb
mov
loop
pop
or
aaa
fdivrs
out
loope
xchg
icebp
adc
cmpsl
cwtl
or
out
loope
pop
xchg
sub
cmp
or
jle
das
sub
movsl
lock
subl
inc
mov
sub
pop
icebp
das
pop
push
pop
pop
fs
inc
loope
mov
xorl
sti
mov
daa
hlt
cwtl
and
sbb
adc
mov
push
movsl
pop
leave
imul
cmpsb
cmp
xchg
iret
push
test
fbstp
mov
clc
xor
mov
pop
fistpll
mov
aaa
push
mov
dec
cld
dec
inc
adc
push
mov
es
in
lods
jecxz
iret
cmpsl
fstp
mov
and
das
into
mov
and
pushf
sbb
dec
jle
clc
cmp
sbbb
test
xor
jne
xor
nop
cmc
fiadds
xchg
cwtl
mov
adc
cmp
insb
xchg
clc
call
mov
inc
jne
ret
gs
xor
cld
jg
pop
in
mov
loope
movb
andl
daa
mov
fisubrl
out
dec
xchg
dec
cmc
adc
aad
ret
rcrb
mov
mov
sbb
xor
aad
cmp
inc
jne
adc
add
pop
pop
bound
sbbl
adc
xor
mov
inc
scas
test
xchg
jl
nop
shll
insl
pop
icebp
repnz
mov
flds
fs
jmp
and
repnz
shlb
test
cltd
sub
daa
mov
movsl
jbe
add
add
mov
test
and
xchg
leave
jo
add
outsl
shll
lea
and
xor
and
pop
scas
cld
or
and
mov
mov
mov
mov
jle
pop
movsl
inc
outsl
scas
fwait
xor
pop
or
cld
mov
cltd
scas
lods
pop
push
add
mov
and
cmp
ds
fwait
mov
andb
sbb
inc
leave
out
in
adc
or
xor
sub
sbb
fcompl
mov
push
cwtl
push
clc
mov
or
shll
sub
dec
popf
and
lahf
jnp
mov
daa
repz
mov
mov
mov
lahf
mov
lock
pop
decb
mov
test
stos
jb
and
cmc
sub
div
imul
mov
jbe
mov
mov
push
rol
fbld
push
fistpl
ret
jmp
jg
dec
or
mov
test
cmp
or
cmc
and
mov
mov
pop
add
pop
sbb
mov
sahf
nop
fs
mov
add
shlb
in
cmpsl
pop
xchg
jb
push
and
and
fcomi
jmp
pop
les
mov
sub
jb
jo
dec
pop
add
dec
fistl
push
adc
daa
inc
xchg
adc
pusha
es
cmp
push
mov
adc
rcr
jbe
icebp
pusha
xchg
movsb
inc
jg
imul
shlb
testb
nop
cmp
jmp
lahf
dec
in
lods
mov
into
test
jns
inc
mov
or
cs
fstps
ss
xchg
ror
mov
xchg
popf
or
xchg
jecxz
sbb
xor
sahf
sbb
outsb
hlt
pusha
push
mov
call
or
popf
mov
lds
cmp
fs
sahf
xchg
cmp
inc
rorb
mov
jl
adc
xor
mov
xor
mov
cs
push
adc
push
cmp
cmp
clc
jl
inc
pop
sarl
fists
or
or
xchg
sub
in
inc
sbb
rcl
jno
jnp
sbb
shl
push
bound
mov
push
fs
sub
sti
rolb
repz
mov
mov
mov
bound
outsb
out
mov
cmpsl
pop
stos
inc
pop
lock
xchg
fidivrs
ljmp
sub
dec
insl
or
ss
push
jnp
xorb
call
mov
mov
lret
dec
gs
xor
pop
ret
lret
inc
das
les
js
loop
sub
mov
pop
mov
icebp
lods
adc
push
rolb
test
jp
cmp
push
pushf
mov
paddusw
fistpll
test
lods
lcall
add
pop
sub
loop
or
push
cmp
mul
ja
jb
fs
sbb
dec
leave
push
stos
or
lods
ja
aam
xor
mov
push
push
sbb
push
sub
jecxz
xor
cli
fimuls
or
sub
jge
xchg
test
jge
pop
sub
outsb
hlt
xor
popf
insb
arpl
sub
mov
scas
cmpsl
xchg
aad
push
inc
mov
cltd
mov
or
xchg
fwait
mov
inc
xchg
loope
mov
xor
mov
or
pop
xor
cmp
pop
jmp
push
lea
cmp
insb
lds
into
xchg
cmp
push
lods
idivb
dec
add
cmp
lds
je
dec
cld
iret
mov
xchg
jmp
mov
int
jae
fwait
sub
mov
dec
rorb
pop
dec
subl
loope
mov
in
outsb
sti
xchg
jge
xor
lods
cli
sti
jbe
imul
or
test
jge
xchg
xor
ss
outsb
subl
gs
repnz
scas
fildl
mov
inc
sbb
test
cli
pop
icebp
hlt
loopne,pn
mov
inc
xchg
add
inc
push
mov
popa
xor
pop
inc
xor
push
cmp
inc
into
fsubrp
jbe
sub
jg
icebp
fnstenv
out
jle
push
pushf
loope
mov
out
fs
jne
std
dec
and
adc
jp
inc
int
aam
mov
pop
addr16
call
dec
lret
cmp
pop
stc
pop
lds
cmp
dec
inc
stc
mov
xlat
mov
js,pt
mov
int
push
mov
sbb
inc
in
mov
dec
mov
mov
in
mov
nop
add
stc
jbe
ljmp
xchg
roll
mov
or
cmp
mov
leave
add
push
dec
jg
and
and
mov
std
icebp
adc
xchg
cltd
cld
stos
addr16
sbb
fwait
bound
dec
stos
sbb
xchg
jle
push
cmp
ds
sti
inc
addr16
cmpsb
sbb
cmp
fs
ja
scas
lret
in
push
fiaddl
aad
pusha
jp
mov
aad
inc
cltd
jecxz
xchg
pushf
mov
push
insb
xor
push
test
adc
jmp
inc
dec
push
cs
adc
inc
sbb
mov
leave
fwait
popl
lahf
inc
jbe
das
mov
push
nop
imul
push
inc
rclb
cmp
fldt
jae
test
fidivs
jb
jno
xchg
ljmp
es
in
xchg
inc
shlb
mov
rorl
jg
lea
sub
push
mov
mov
push
movsb
mov
bound
ljmp
test
and
push
jg
in
mov
outsb
inc
popa
test
adc
adc
dec
add
nop
jne
adc
loope
arpl
xchg
pop
or
lcall
mov
pushf
sbb
ret
movsb
mov
insl
lret
and
filds
add
insl
stos
and
jno
or
pop
pop
cmp
subb
and
shr
sub
mov
lea
into
in
pop
sti
jnp
movsb
sti
and
push
test
daa
in
adc
loopne
mov
les
mov
test
jae
lds
dec
push
xchg
lret
xor
inc
lods
inc
xchg
gs
jecxz
iret
stos
sbb
loope
or
jmp
dec
clc
imul
sbb
push
mov
mov
jo
adc
pop
leave
roll
fiaddl
inc
movsb
xchg
jns
rcrl
leave
cmp
cmpsb
lods
mov
daa
mov
mov
test
rcrb
cmp
dec
jo
push
or
repnz
cs
push
pop
mov
push
test
xchg
push
ja
add
sub
fiadds
mov
pop
dec
iret
data16
pop
ficoml
call
repnz
jb
sub
je
lods
jecxz
fidivl
jb
dec
adc
std
scas
lahf
xchg
mov
loopne
and
outsb
mov
fstpl
mov
ja
dec
cmp
cmp
out
dec
idiv
icebp
ret
ficomps
ljmp
shrl
dec
push
cmc
add
mov
and
shrl
loopw
dec
cmp
mov
cmpsb
and
push
js
ljmp
cmpsb
sub
test
ret
enter
cltd
jmp
in
insb
popa
cwtl
aad
popa
cmpsl
aam
outsb
decl
mov
divb
cmp
fiaddl
xor
test
sbb
jb
cmp
out
loopne
fstpl
sarl
add
call
aaa
dec
xor
push
cmc
cmp
cmpsl
mov
cwtl
insl
mov
mov
pop
push
mov
inc
add
fnstenv
mov
mov
cmp
lahf
ljmp
outsb
add
loope
adc
out
jge
mov
or
loop
out
pop
pop
xor
les
mov
test
xor
mov
sbb
cwtl
leave
movsb
push
mov
roll
sub
movsl
aad
inc
xchg
add
xchg
pusha
scas
cltd
js
jge
cmp
inc
int
les
adc
pop
aad
popa
jg
mov
mov
and
sub
xchg
repnz
stos
loopne
or
push
cmp
mov
rolb
add
jae
hlt
jae
in
mov
mov
mov
sbb
jns
push
mov
iret
rcll
xchg
mov
pop
push
lcall
lods
dec
cli
jecxz
sbb
loop
adc
pusha
pop
mov
inc
add
add
in
pop
arpl
das
pop
inc
lahf
enter
jb
sbb
repnz
jns
xchg
pop
cld
add
and
xchg
outsb
push
xor
out
sbb
ljmp
mov
mov
jbe
frstor
pop
jae
xchg
sarb
cld
mov
icebp
jne
int3
mov
aaa
insb
fildl
jno
adcb
push
cwtl
int
and
iret
fnstcw
cwtl
pusha
push
xor
iret
rcrl
pop
mov
aad
ja
mov
ds
sbb
push
fisttps
dec
pinsrw
scas
sub
jnp
xchg
mov
pop
xor
and
pop
insb
pop
cmc
mov
bound
and
push
es
pop
xchg
xor
lea
mov
ret
sub
das
jge
pop
and
popf
faddp
ret
push
sbb
movnti
sub
sar
and
xor
je
daa
inc
pop
arpl
cmp
xchg
cmc
jns
pop
aam
movsl
lcall
into
rcr
insb
xorl
and
in
and
dec
dec
cmp
pop
xor
out
test
sti
push
outsl
call
mov
dec
loopne
ret
xor
popa
enter
push
in
cs
push
scas
dec
iret
and
ss
mov
jge
clc
dec
shll
jbe
icebp
jecxz
lea
jge
pop
mov
dec
stos
dec
push
movsl
sub
jnp
mov
inc
aas
jg
cmp
sbb
sarl
or
sbb
cmp
mov
mov
xor
jge
cltd
inc
lods
addb
mov
cmp
adc
or
in
inc
test
int
aad
notl
sti
jp
and
outsb
orb
cltd
mov
imul
inc
dec
movsb
jnp
jnp
adc
add
or
fsts
jae
mov
mov
sub
dec
call
das
dec
enter
gs
sbb
sub
push
popf
pop
test
and
xor
xchg
imul
sub
out
nop
pop
xor
call
cmp
jne
or
lods
jno
ficoms
pop
or
mov
repnz
dec
pop
stc
inc
call
les
stc
mov
cmpsb
flds
gs
pop
sub
and
fdivs
xlat
xor
test
cwtl
enter
jne
outsl
popa
and
sahf
and
inc
mov
adc
xchg
dec
jmp
mov
movsl
data16
lods
sbb
cmc
or
jno
sbb
sub
pop
mov
sbb
test
clc
inc
les
mov
dec
int3
adc
fs
stos
fstpl
out
inc
mov
cmpsb
jle
xchg
lahf
mov
fabs
cmpsb
es
push
subl
sbb
arpl
push
stc
repnz
pop
mov
outsb
mov
fs
sbb
mov
in
sub
cmp
cmp
jl
mov
mov
int
mov
inc
call
gs
nop
ja
pop
std
cmp
out
es
pop
inc
into
in
or
push
jae
xchg
sbb
outsb
int
xchg
jae
jbe
hlt
inc
mov
test
jl
jne
fnstcw
call
sub
lahf
pushf
dec
add
xorb
arpl
sbb
push
add
incl
es
adc
les
jno
jo
pop
push
out
inc
mov
xor
push
je
inc
imul
inc
in
inc
xor
addr16
fsubs
test
out
or
insb
daa
push
lcall
loopne
push
push
or
push
dec
and
outsb
sub
inc
cli
icebp
inc
in
dec
idivb
test
mov
sub
add
repz
or
jmp
mov
and
fsubrs
enter
fs
repnz
mov
test
cmpsl
mov
ds
movsb
fld
sbb
repz
xchg
nop
int3
sti
out
cmp
sbb
fisubrl
add
fnsave
inc
or
mov
ja
xor
lock
cmc
lret
mov
adc
lret
fcoml
adc
sub
sbb
fsts
mov
and
loop
mov
sub
jo
out
lahf
dec
incb
mov
cmp
nop
sub
ds
rorb
cmpsl
push
pminub
jno
out
add
repz
sbb
data16
pop
cmp
xor
or
inc
cmp
cmc
cmpsb
xor
mov
ss
fdivrs
inc
add
xchg
jo
outsl
in
lret
imul
imul
lahf
aam
stos
fisubrl
shll
and
and
dec
sbb
add
test
mov
pop
xor
sbb
rcl
lcall
test
mov
adc
repz
jg
cmc
clc
int3
push
jge
in
fimuls
xchg
jecxz
in
in
fwait
sub
dec
push
mov
popa
mov
int3
jmp
lret
pop
sub
mov
xor
sub
nop
pop
push
outsl
mov
lret
test
outsb
clc
cld
push
popa
dec
dec
rcll
cmpb
pop
cmp
jmp
sti
sahf
stos
dec
in
mov
and
out
pop
and
or
insl
rcrb
mov
xchg
stc
aas
cmp
cli
mov
in
out
ss
je
xchg
je
cli
idivb
mov
add
gs
mov
shll
sbb
mov
mov
xor
push
pop
fstl
int
int
iret
adc
iret
xor
das
mov
icebp
push
jnp
das
outsl
loope
mov
push
add
fdivp
inc
or
cmp
cltd
scas
push
fsts
inc
dec
mov
cmc
mov
and
lods
ret
shll
stc
ret
test
adc
pusha
lahf
mov
popf
fildl
stc
xchg
les
mov
dec
pop
adc
add
pop
or
cmp
lahf
cmp
mov
pop
cs
fucompp
jo
dec
mov
mov
sarb
out
xor
int
xorb
pmulhw
addl
mov
cltd
daa
adc
pop
loop
cmp
sbb
leave
ret
xchg
adc
fstpt
pop
adc
push
xchg
push
push
mov
and
out
test
popl
bound
push
iret
int3
mov
mov
mov
or
mov
sub
mov
addr16
cli
fimull
mov
cmp
mov
rorb
lods
jne
inc
jmp
cmc
mul
mov
cmc
shl
nop
mov
insb
mov
fstps
mov
dec
insb
sbb
popa
sub
aad
adc
fdiv
push
mov
jp
jg
cmp
testl
pop
rclb
xchg
mov
pop
push
outsl
or
push
out
mov
test
movsl
push
ret
xor
jns
roll
inc
cltd
xchg
je
inc
mov
inc
ret
or
imulb
or
sub
jecxz
cwtl
es
push
test
call
out
outsb
in
ja
xchg
addl
in
jo
mov
mov
xchg
shll
fisubrs
xchg
inc
out
dec
inc
repz
pop
push
mov
adc
xchg
mov
lods
test
xor
cmp
ret
loope
and
js
push
dec
push
repz
test
rorl
lods
mov
add
into
fs
fisttpl
pop
pusha
mov
pushf
or
jp
loop
ljmp
cld
push
xchg
aad
ret
jp
sbbb
adc
xor
pop
push
lcall
cmpsl
mov
pop
mov
or
sub
push
dec
xor
in
lret
jle
mov
mov
add
test
insb
xchg
cld
push
cwtl
fmull
cmpl
inc
iret
sub
das
pop
out
sub
jle
lret
in
js
das
pop
lcall
xor
test
push
mov
out
sbb
stos
adc
pop
mov
cmpsl
cmpsl
inc
dec
lods
sbb
xchg
test
sub
jnp
sbb
scas
cwtl
lret
push
and
jle
cwtl
mov
nop
mulb
lret
jb
pop
mov
mov
cli
fldcw
pop
cs
pop
jmp
fistps
pop
movsb
rorb
or
sub
jecxz
repnz
jns
add
in
mov
mov
lret
ja
aam
xchg
or
mov
add
jns
push
lock
sub
inc
mov
aad
push
jno
adc
pop
push
push
sbb
dec
stos
sub
sub
xchg
mov
imul
imul
std
pop
dec
mov
and
mov
lret
cmpsl
aas
les
or
ret
arpl
sbb
push
pop
out
mov
jg
enter
adc
xor
dec
ds
arpl
mov
ret
pop
fistpll
xchg
cld
mov
jecxz
pop
or
mov
cmp
jp
cmp
outsl
adc
or
mov
lret
cmp
shl
xor
lahf
inc
add
inc
adc
sahf
iret
push
fsubr
pop
mov
lea
jnp
mov
les
or
inc
in
mov
data16
cmpsb
pop
inc
mov
int3
xor
ja
andb
mov
mov
and
cmpsb
cmp
jecxz
jl
jne
cmpsl
iret
scas
xchg
add
and
subb
xchg
fs
mov
cld
mov
loope
test
movsl
sar
aad
ljmp
mov
xchg
push
mov
popa
xchg
jp
push
push
lret
inc
out
rcl
inc
out
xor
setno
lahf
sub
add
aad
adc
inc
rorb
sbb
leave
mov
jae
aaa
cmp
cmpsl
dec
lock
adc
sub
popf
add
sbb
rcrb
mov
into
dec
rcr
jl
cwtl
mov
mov
rcrl
push
jecxz
aaa
fs
push
ja
nop
mov
mov
rcrb
inc
pop
pusha
jns
test
xor
frstor
xchg
add
cmp
aaa
insb
dec
sub
sbb
inc
nop
lods
cwtl
jns
bnd
lods
test
adc
lods
jo
orb
gs
mov
ja
dec
addl
pop
mov
mov
and
ret
mov
shlb
xor
push
pop
and
inc
jmp
xor
rcr
pop
add
adc
stos
mov
cltd
idivb
pop
mov
jnp
int3
mov
ds
adcb
cmc
movsl
bound
cmc
dec
adc
adc
call
jo
cmp
sahf
ljmp
test
pop
lods
pop
and
mov
fwait
push
repnz
sbb
adc
dec
cmp
std
clc
push
cvttps2pi
and
mov
mov
mov
cmp
push
ja
lock
jg
out
in
leave
ja
ja
sbb
xor
roll
dec
mov
scas
jg
mov
divps
cli
lds
pusha
cmp
lea
loop
loop
fxam
icebp
jl
cmp
adc
jmp
mov
js
push
cmp
and
out
cs
mov
inc
mov
pusha
addl
in
in
aas
mov
dec
std
in
sub
popf
push
sub
call
jle
ljmp
pop
lret
add
stos
dec
sbb
mov
sub
sahf
loopne
shrl
mov
mov
mov
sub
or
call
inc
push
jb
inc
fsubrs
jne
adc
call
adc
lcall
inc
or
mov
jmp
xchg
jecxz
sub
xchg
cmp
minps
sbb
push
femms
adc
les
repnz
xchg
lret
jmp
dec
test
mov
mov
aam
xorl
arpl
cwtl
jp
icebp
mov
mov
push
jnp
shrb
pop
mov
ds
jg
outsl
jp
ret
subl
push
dec
repnz
xchg
dec
pop
push
out
cmp
fisubl
test
push
mov
mov
pusha
std
adc
xchg
pop
les
cmp
fistps
nop
fidivs
frstor
enter
cmpb
loop
ja
sub
stc
adc
cmpsb
push
pop
frstor
mov
dec
push
das
mov
cld
and
xchg
xor
pushl
inc
mov
pop
jno
and
sarb
mov
xchg
xorl
loopne
pop
jg
sub
testl
test
dec
pop
flds
mov
pushf
mov
inc
adc
insl
inc
xor
push
jb
movb
nop
fwait
push
push
mov
daa
sti
fwait
test
negl
pop
data16
fdivrs
add
adc
dec
mov
push
jnp
pop
loope
jmp
pop
push
xor
mov
ljmp
shlb
adc
test
inc
fisubrl
xchg
add
inc
pop
movsb
clc
add
test
aam
push
rolb
xlat
push
xchg
jno
popa
gs
sub
rcl
movsl
imul
imul
or
int3
jb
cmp
ja
out
shlb
or
push
and
xor
pop
mov
es
jl
sahf
fistpll
mov
mov
sbb
cmp
mov
ret
xor
push
stos
int3
push
aad
lds
ret
dec
jbe
cli
addb
adc
xorb
or
cmp
fldt
mov
push
lcall
xor
movsb
insb
in
pop
sbb
sbb
aad
mov
xor
sbb
sub
clc
push
adc
clc
cli
push
pushf
test
jnp
out
jg
in
fs
packuswb
movsb
and
adc
in
lea
fimuls
sub
movl
mov
notb
mov
push
cmp
stos
and
dec
lea
fisttpll
adc
jle
outsb
popf
dec
clc
enter
pusha
mov
sub
fs
and
test
in
movsl
stos
sbb
sub
in
arpl
lahf
sub
jb
sbb
push
leave
mov
add
adc
mov
and
push
cmpsb
add
ret
sub
xor
fcomps
jns
mov
jmp
jno
cs
out
arpl
pushw
aaa
fmuls
sub
mov
xor
mov
lret
ret
jle
inc
mov
cmpsl
daa
mov
loopne
daa
lds
cmp
sbbl
data16
andb
mov
xchg
mov
fcmovne
pop
or
add
xor
mov
adc
dec
push
ret
sub
lds
pop
rol
ret
add
sub
stc
push
hlt
shrl
push
xchg
imul
es
xlat
sub
pop
or
gs
jnp
or
addr16
sahf
or
in
inc
xchg
sub
pop
mov
scas
add
clc
cli
mov
xlat
les
lcall
cmc
or
cmp
dec
adc
mov
in
adc
mov
adc
xchg
fimull
pop
sbb
mov
pusha
xchg
mov
mov
or
mov
popf
std
inc
and
or
xchg
scas
jbe
sub
ds
fbstp
hlt
xchg
stc
mov
cmp
pushf
scas
pop
pusha
rolb
jae
fldenv
mov
jmp
jbe
mov
inc
push
ss
xorl
cmp
or
cmp
sbb
sub
lcall
cmp
add
out
push
xchg
jmp
mov
cmp
stos
aam
cmp
lea
lahf
or
push
data16
incl
lcall
rcll
icebp
in
adc
sub
neg
xor
pusha
jbe
add
decl
in
pop
arpl
ja
cmp
fldl
pop
mov
and
jno
xor
sbbl
mov
xor
xchg
scas
nop
mov
pop
pop
lea
les
int3
or
sarl
adc
clc
not
das
push
shll
xchg
clc
xlat
xor
pop
push
xor
dec
jns
xor
fldenv
mov
inc
push
mov
shlb
inc
and
jbe
jb
ret
rorb
clc
movsl
jecxz
je
pop
sbb
mov
xchg
imul
rcrb
imulb
jp
ret
mov
or
pop
aas
clc
jge
ret
fwait
int3
enter
mov
movsl
popa
pop
sarl
pop
and
lds
sbb
lock
add
add
ficoml
test
adc
sbb
mov
sbb
fisubs
out
dec
cmp
cmp
enter
xchg
mov
or
je
daa
xchg
dec
xchg
xor
scas
enter
cmp
sbb
mov
sub
outsb
xor
or
call
cmp
mov
or
adc
or
push
cmc
scas
xor
add
add
data16
outsb
es
jae
adc
repnz
pop
and
sbb
dec
cmp
mov
inc
ret
scas
xchg
cmp
hlt
test
adc
mov
mov
into
push
jb
ret
imul
add
add
loope
leave
mov
lcall
rolb
sti
cmp
inc
in
push
mov
inc
hlt
mov
mov
cmc
dec
in
sub
xor
dec
push
js
js
xor
push
cmp
xchg
xor
or
dec
pop
mov
xor
adc
pop
addr16
bound
sbb
dec
lods
daa
in
loop
or
fists
mov
add
bound
jnp
insb
mov
dec
sub
mov
or
mov
push
mov
sub
xchg
outsb
cmp
jo
outsl
test
cwtl
pop
test
pop
jp
imul
in
add
sbb
xchg
fwait
xchg
pop
jnp
inc
outsl
lock
lods
dec
adc
dec
cmp
popf
or
in
shr
clc
or
leave
jb
sbb
pop
ds
dec
leave
push
pop
cmp
mov
push
jmp
adc
push
jno
cmp
stos
jns
imul
data16
pop
dec
jg
in
mov
bound
lcall
mov
popa
push
or
jg
clc
imul
cltd
jnp
sar
pop
inc
lea
jno
cmp
pop
pop
stc
jne
mov
imul
int3
inc
mov
push
insl
inc
or
inc
cmp
repz
cmpsb
mov
mov
xor
mov
inc
sbb
or
rcl
inc
mov
cld
xchg
mov
or
cmp
mov
lock
out
inc
test
push
xor
sub
add
lock
or
jns
lcall
adc
push
in
push
int3
cltd
repnz
sarl
test
pop
pop
mov
cmpsl
pop
push
cmp
jne
push
and
or
mov
sti
mov
movsl
mov
shll
imul
sbb
adc
stos
fwait
cltd
mov
mov
pusha
mov
out
movsl
outsb
inc
sbb
cmpl
repz
popa
test
pop
adc
push
mov
int
push
scas
fldl
js
push
xchg
add
push
mov
rorb
and
mov
dec
mov
outsb
add
dec
cmp
faddl
push
dec
cld
push
mov
pop
push
enter
jmp
scas
dec
mov
cld
mov
pop
roll
mov
and
ret
and
pop
cs
jae
lahf
pusha
xchg
addr16
jno
mov
dec
sti
cmpb
jmp
jb
movsb
jb,pn
add
lcall
or
jnp
popf
out
push
inc
pop
imul
and
mov
cmp
inc
movsb
test
call
pop
imul
xor
cmp
push
push
cli
in
or
rcr
sub
dec
loopne
mov
filds
fldt
add
movsb
dec
rcrb
pop
test
insb
xchg
mov
jb
rcll
pop
ja
adc
repnz
jge
mov
and
test
rol
jbe
jmp
push
popa
pusha
xchg
xchg
mov
mov
shlb
mov
gs
mov
jl
push
jl
insl
adc
lahf
je
add
imul
cmp
jle
pop
mov
sub
inc
shrl
fsts
mov
pop
sbb
rcrl
jno
loopne
fimuls
movsl
or
insb
push
inc
fbstp
out
popf
add
mov
jae
leave
xor
xchg
cmp
push
xchg
or
pop
loopne
sbb
pop
dec
mov
push
out
mov
xor
add
in
sbb
fmuls
mov
faddl
negl
adc
imul
xchg
sahf
out
jns
jns
ret
adc
sub
and
mov
mov
iret
loopne
xchg
mov
inc
orl
mov
add
mov
mov
gs
and
xchg
or
add
mov
sti
shll
cltd
jl
test
mov
jb
icebp
pop
mov
fisubs
fwait
sbb
xchg
adc
repnz
std
and
out
mov
inc
mov
jns
scas
inc
inc
add
jmp
dec
sbb
sub
mov
push
xlat
pop
pop
jae
call
pop
adc
das
inc
sahf
test
inc
pushf
iret
push
and
or
ljmp
mov
loopne
lcall
cwtl
pusha
sbb
imul
jno
add
enter
out
inc
mov
dec
mov
or
mov
out
sbb
loopne
pop
shrb
xchg
leave
icebp
push
xor
sbb
repnz
and
aaa
push
or
fadd
sub
dec
ret
push
fists
or
sbb
ret
mov
fisttps
fnstsw
mov
and
cli
fucomp
sbb
lret
push
aas
mov
imul
movq
aad
and
cwtl
js
pop
add
or
arpl
jo
cld
cmp
daa
bound
and
mov
sbb
mov
sub
incl
sub
jae
mull
dec
icebp
into
mov
fisubrs
fildll
test
pop
xchg
adc
iret
lret
or
dec
inc
lret
shl
jecxz
fsubr
cs
test
jb
inc
mov
test
or
into
popl
xor
push
push
xor
pop
test
mov
int
push
xor
lods
and
inc
ror
hlt
xchg
jo
push
dec
xchg
or
in
push
lds
push
int3
sub
push
jecxz
xchg
mov
sub
xchg
int3
lahf
cwtl
push
cmpsb
mov
xor
push
xchg
mov
xchg
push
lcall
jne
push
add
inc
iret
add
lds
ljmp
xor
aam
add
adc
sti
mov
stc
andb
pop
mov
adc
pushl
lcall
adc
inc
pop
push
jbe
cltd
iret
pushf
hlt
insb
xchg
push
rcll
push
mov
sbb
inc
sahf
lea
aad
aaa
mov
push
sbb
imul
jmp
sbb
adc
or
xchg
and
push
cwtl
and
dec
adc
dec
mov
mov
inc
and
cmpsl
jmp
out
mov
mov
and
adc
lret
sub
dec
mov
lds
pushf
push
test
lcall
or
std
mov
and
inc
lock
dec
jo
pop
ud0
stos
jmp
sarl
add
ds
jmp
jae
incb
sbb
rep
push
inc
jb
adc
pop
xor
jb
nop
mov
aas
lock
sbb
cwtl
inc
pop
arpl
and
pop
dec
cs
push
mov
std
sub
lods
clc
cwtl
xchg
jo
data16
lods
adc
inc
mov
lret
nop
inc
jne
out
adc
faddl
in
xor
fidivrs
insb
xor
push
mov
and
ljmp
inc
push
push
lret
clc
lret
out
test
mov
or
sahf
sub
call
aaa
adc
or
iret
mov
xor
movsb
push
cmp
add
sbb
push
mov
xchg
sti
addr16
cmp
adc
pop
dec
dec
aas
lds
pop
clc
or
or
ljmp
int3
outsl
sahf
push
sub
movsl
mov
fcoms
adc
sub
sbb
and
inc
lcall
clc
inc
sarb
jo
or
dec
mov
cmpsl
xchg
not
divl
andl
out
icebp
sbb
fs
cwtl
mov
sysenter
sub
inc
adc
fsubp
jae
ljmp
jbe
xchg
sub
mov
sub
push
cmp
ds
jge
stos
lret
inc
cltd
xlat
adc
mov
xor
xchg
outsl
push
cmp
mov
adc
dec
movsl
repnz
fmull
xor
pop
out
stos
sub
jle
mov
add
addr16
sbb
cmpsb
movsb
aaa
xor
cwtl
pop
sbb
mov
shlb
les
sub
jecxz
mov
rorl
xor
leave
mov
xor
ljmp
push
adc
mov
sub
leave
repnz
mov
icebp
sub
or
add
aad
js
nop
in
inc
int
xchg
clc
mov
gs
mov
sbb
movsb
jp
rolb
hlt
mov
push
sub
std
fistps
repnz
lea
inc
jo
adc
rcrl
inc
jae
nop
adc
lret
sahf
sarb
and
mov
jo
jle
mov
adc
xchg
jne
jno
ljmp
popf
int3
loop
scas
lahf
inc
pop
fsubr
std
adc
outsl
dec
mov
jp
divb
lcall
mov
pop
icebp
fwait
ljmp
daa
popa
in
pop
push
lock
cld
xlat
xchg
push
sub
fdivs
jmp
out
cmp
xchg
adc
aam
push
in
jecxz
sub
jo
pop
adc
loopne
popf
es
xor
mov
jecxz
push
add
aad
push
pop
or
cmp
repz
gs
fwait
push
test
pop
cli
insb
es
mov
sbb
aaa
adc
xlat
cltd
xchg
push
add
clc
adc
jge
clc
cmp
gs
inc
leave
mov
sbb
mov
mov
repnz
xchg
push
fwait
jns
sbb
mov
push
cmp
ds
inc
nop
mov
jp
bound
lcall
xor
popa
mov
ret
pop
cmp
stc
into
mov
cs
fdiv
test
lea
and
and
dec
xchg
cmp
pop
loop
and
lret
dec
adc
sub
daa
aad
jae
fidivl
sub
aad
sarb
test
dec
jne
xchg
cmp
cs
call
and
push
push
popf
xor
popf
jmp
or
ljmp
jecxz
inc
das
mov
adc
xor
popa
pop
mov
jecxz
mov
dec
loopne
push
int3
js
ret
or
loopne
pushl
addr16
in
dec
jae
daa
mov
decb
ljmp
jne
test
dec
and
arpl
scas
mov
lret
daa
in
movsl
in
mov
mov
xor
inc
orl
push
lcall
sahf
movsb
out
jmp
pop
cld
aam
int3
push
fcmovnbe
jne
add
mov
cld
and
rcrb
hlt
cmp
lods
insl
fstpl
icebp
in
jno
push
daa
sub
cmp
inc
mov
push
sub
mov
outsb
mov
sbb
mov
xchg
aaa
or
test
and
dec
push
pop
xor
ds
mov
fildl
jl
outsb
mov
or
inc
out
dec
push
jo
shl
mov
cmc
out
repz
ljmp
xchg
nop
and
ret
mov
adc
gs
cmp
mov
jg
mov
mov
arpl
stos
xlat
lcall
push
scas
imul
mov
mov
sbb
pop
push
push
xchg
ror
push
daa
cmc
pop
sbb
imul
push
shl
pop
dec
les
lcall
shll
xchg
out
jg
mov
mov
nop
adc
in
insb
inc
es
and
insb
or
test
push
mov
mov
add
push
mov
sbb
fdivs
in
cmp
pop
lahf
leave
cmc
addr16
out
jmp
jnp
xor
inc
pop
pop
push
mov
sub
aas
push
mov
shr
mov
xlat
stos
outsb
aad
or
cmpsb
xor
mov
pusha
dec
sub
xlat
aam
add
mov
stc
leave
pop
mov
in
out
sub
out
jns
jbe
das
dec
pop
pop
aad
int3
add
push
cmp
movsl
jo
stos
xchg
mov
sbb
in
xor
mov
mov
add
bound
mov
and
xorl
loopne,pn
and
into
xchg
fcomip
in
loopne
sbb
xchg
sub
daa
test
cltd
mov
push
pop
fildll
test
push
lock
fsubr
sbb
sarl
pop
or
add
or
movsl
mov
pop
mov
leave
or
sahf
push
xor
insl
and
enter
or
popf
push
push
enter
and
inc
popa
aad
test
pop
mov
mov
cli
jle
add
sub
push
sbb
push
out
nop
xchg
aad
mov
daa
sbb
lcall
xchg
inc
add
or
mov
outsb
aaa
pop
aam
mov
dec
inc
add
inc
sbb
in
xlat
mov
std
adc
pushf
lea
roll
sub
aam
adc
mov
cmpsb
mov
out
insb
adc
cmp
popf
push
and
jmp
rorl
xchg
lds
jb
out
or
push
fstps
cmp
mov
and
ret
and
jnp
cmp
ljmp
repnz
mov
xchg
push
pop
dec
cmp
jo
out
je
xor
das
das
imul
adc
xchg
mov
xchg
pop
aad
push
inc
lcall
and
xchg
dec
mov
pusha
nop
lock
out
mov
mov
decb
cmp
es
das
jnp
outsl
gs
cmp
sbb
leave
mov
out
std
aad
dec
int3
into
adc
push
dec
sahf
ljmp
push
xchg
cmpsl
jno
inc
daa
add
xchg
hlt
ljmp
xchg
and
imul
incb
ret
loop
mov
pop
mov
mull
mov
call
jb
ret
jle
test
loope
adc
or
inc
je
add
add
inc
add
jl
xchg
and
lock
aam
cli
test
movsl
xchg
push
push
mov
jne
out
mov
mov
outsl
call
ret
add
add
lods
ljmp
dec
xchg
lock
sahf
mov
jge
imul
fwait
enter
and
lds
cmp
dec
ja
insb
incl
cmpsb
adc
stc
fldenv
in
adc
push
adc
sahf
out
jb
mov
mov
pop
sbb
sub
iret
dec
cmpl
dec
ja
les
cli
cli
int
jno
add
sub
pusha
scas
je
sbbl
add
fisubl
cmpsb
imull
push
sub
add
je
test
xchg
jae
inc
push
fistl
out
xor
stos
and
pusha
lods
es
cmpsb
lock
test
or
inc
sbb
into
orps
or
call
pop
dec
mov
sbb
test
pushf
pop
jp
sar
adc
pop
cltd
fs
cmpsl
mov
or
ljmp
inc
icebp
mov
out
imul
push
hlt
dec
sarl
je
in
into
pop
inc
add
sar
mov
or
lahf
push
jb
jns
clc
lea
add
dec
cmp
sub
sbb
and
imul
mov
xchg
loop
dec
pop
push
stc
pop
push
sbb
jae
mov
repnz
std
mov
add
xchg
sub
sahf
sbbl
add
inc
repz
fdivrl
mov
ret
mov
sbb
cmpsl
mov
mov
lea
fiaddl
lods
inc
or
mov
sbb
inc
pop
mov
imul
shrb
add
mov
xchg
cmp
mov
aaa
rcrl
lock
gs
int
ds
out
loopne
jp
cmp
imulb
ljmp
std
pop
jne
sbb
rcrb
push
and
test
mov
cli
jecxz
fdivp
cli
fisubrl
jg
test
iret
sbb
mov
sub
mov
adc
sbb
push
rcrl
sub
push
inc
dec
xchg
jp
inc
popf
sbb
cmpsl
dec
sbb
addr16
repz
cmpsl
cld
jge
gs
popa
mov
pop
rorl
pop
shl
pop
stc
mov
xlat
cmp
cs
sub
ss
sbb
pop
insl
loope
or
gs
movsb
xchg
cmp
mov
or
out
cltd
fisubrl
push
ds
sbb
sub
fiadds
mov
cltd
xchg
in
je
hlt
js
cwtl
cmp
and
shl
mov
movsl
cmpsl
or
mov
sarb
loopne
out
mov
mov
dec
cmpsl
jno
cmpsl
push
jns
mov
and
inc
pop
inc
or
sbb
sub
lret
rol
xchg
adc
outsl
ret
adc
test
dec
aas
mov
xor
push
sub
in
ror
les
in
mov
fcoms
repz
bound
mov
and
cld
add
push
pop
mov
fisubl
lea
cmpsb
sbb
roll
cmp
xor
daa
insl
fwait
scas
movsl
mov
stc
xchg
xchg
xchg
cmp
decb
or
aam
jle
js
jno
adc
mov
popa
pop
js
push
nop
push
pop
bound
out
arpl
aas
dec
push
pop
std
jge
gs
int
std
mov
leave
cmp
shll
mov
sbb
nop
cmp
xchg
dec
cmp
fwait
lret
ljmp
pushf
shlb
lret
push
xor
xchg
int
mov
ljmp
adc
inc
adc
scas
es
pop
lods
jne
mov
add
jno
push
mov
hlt
negl
gs
push
aas
negl
popa
mov
lock
notb
inc
pop
mov
movsb
inc
pop
and
jl
jbe
lods
mov
pusha
sub
fisttpl
sbb
lret
adc
or
inc
inc
add
sbb
je
mov
push
cwtl
enter
ds
stc
mov
add
aad
into
leave
outsl
popf
movsl
test
es
int
imul
shrl
sbb
pop
pop
call
cmp
jae
fisubrl
push
inc
cmc
dec
sahf
or
incl
jecxz
dec
ljmp
adc
push
push
fimull
jmp
popf
cwtl
mov
stos
jo
sub
stos
adc
xor
mov
xor
lret
stos
mov
aam
dec
cmpsb
enter
clc
in
ror
or
test
test
cmp
push
xchg
lahf
inc
outsl
and
sahf
adc
or
jne
arpl
sbb
out
cmpsl
mov
jbe
loope
mov
ljmp
call
or
test
fwait
jle
cmp
negb
inc
mov
pushfw
popf
in
mov
lods
mov
mov
or
lret
imul
jne
ja
mov
mov
mov
adc
out
inc
mov
repz
ret
dec
daa
add
jle
push
jmp
cmc
ret
jns
cmp
xchg
shlb
xchg
xor
mov
xchg
xchg
inc
bound
jns
outsb
add
xor
ja
clc
pop
adc
dec
popf
les
inc
sarl
jno
adc
fsts
jge
lods
adc
leave
adc
jmp
mov
lcall
inc
stos
xorb
inc
dec
mov
push
adc
inc
cmc
xor
mov
or
mov
outsl
or
mov
push
lods
push
stc
movsb
out
inc
sbb
jle
loop
lret
push
xchg
test
xor
dec
jae
gs
cmp
daa
sub
test
aas
jl
insb
scas
add
pop
popa
sub
lods
test
out
mov
push
xor
xor
fisubrl
in
add
out
sbb
push
das
call
pop
int
ljmp
add
pushf
sti
mov
filds
std
hlt
mov
loop
mov
addr16
xchg
cltd
mov
cmp
push
cli
jns
add
xor
loopne
pop
pop
cmp
pop
lods
dec
push
xor
repnz
push
jge
std
adc
ret
sub
dec
jmp
out
xchg
sub
mov
lods
insb
jns
ret
cmp
xchg
ret
add
cli
loope
pop
cmp
adc
inc
ds
cld
jnp
mov
popf
shll
cmpsl
mov
das
jno
inc
test
sub
jmp
mov
pop
push
mov
mov
cs
dec
or
mov
insl
push
loope
iret
or
imulb
xchg
sbb
out
adc
cmc
inc
mov
mov
movsl
retw
dec
in
mov
and
xlat
cmpsb
mov
data16
aad
nop
xchg
pop
cmp
mov
daa
inc
loopne
mov
sbb
out
cld
add
daa
aad
shll
push
loopne
mov
sbb
movsl
data16
cmpb
push
mov
jle
adc
or
negb
shl
jne
mov
push
xchg
push
in
cwtl
inc
mov
sti
mov
loopne
daa
mov
in
rol
adc
dec
pop
sub
inc
cmpsb
mov
mov
add
jae
and
or
fs
je
lahf
cmpsb
push
add
test
inc
jge
outsl
mov
sub
lret
daa
out
fwait
sbb
repnz
cli
mov
xchg
dec
and
and
add
xchg
sub
push
ds
xor
and
fldenv
mov
es
les
inc
add
cmp
addr16
sub
pop
adc
in
xchg
fs
push
xchg
sbb
and
mov
aaa
movsl
and
mov
pop
cli
adc
in
dec
lods
iret
mov
xorl
xchg
mov
mov
mov
sub
and
out
pop
or
sub
pop
scas
xor
mov
icebp
mov
jns
jae
movsb
scas
jne
out
stos
cmpb
dec
test
jl
out
or
in
mov
xchg
je
fwait
fs
nop
inc
aaa
mov
sahf
and
jl
jge
ljmp
cmp
aas
xchg
mov
movsl
lahf
inc
dec
sbb
add
into
sar
or
out
and
dec
clc
inc
inc
or
mov
adc
mov
or
lods
hlt
xchg
stos
or
sbb
arpl
dec
and
xchg
popf
push
test
add
inc
mov
or
sub
pusha
in
sub
dec
push
lret
clc
fnsave
and
nop
popaw
mov
in
sbb
mov
in
int
and
jae
mov
add
in
cmp
js
gs
jae
pop
loopne
mov
fs
pop
mov
jb
push
pop
push
int
scas
mov
mov
dec
pop
fistps
or
mov
ficompl
jg
jb
pop
div
cwtl
add
out
sahf
stos
inc
lods
into
hlt
and
fdivrl
fdiv
mov
out
lods
xorl
inc
ss
lahf
xchg
jecxz
into
inc
inc
xor
inc
movsl
je
mov
push
mov
jno
pop
cltd
aam
jo
and
ja
ficompl
movb
shlb
push
arpl
iret
iret
loopne
fwait
cld
xchg
cmp
fildl
dec
push
imul
mov
call
jp
adc
or
test
mov
dec
sub
mov
mov
out
lea
shlb
dec
and
jl
pop
popa
cli
lods
push
adc
xchg
jno
jp
mov
push
fwait
mov
sub
fnstsw
dec
sbb
add
dec
shlb
cmpl
popf
cwtl
pop
repz
shl
je
mov
iret
mov
xchg
xor
pop
std
jle
pop
xor
dec
mov
push
sub
scas
xchg
lods
jg
cli
leave
test
add
and
scas
fwait
push
cmc
jp
mov
lahf
cmp
mov
xchg
mov
push
outsl
aad
pop
xor
in
std
pop
cmp
cmp
out
test
pop
dec
xchg
mov
jnp
jmp
lahf
inc
fs
mov
and
sbb
pop
adc
push
jecxz
daa
test
cmpsb
mov
and
pop
or
call
leave
out
push
insb
jecxz
les
test
jbe
mov
je
outsl
int
call
jno
pop
popf
call
push
jmp
das
add
aaa
or
ret
xchg
and
adc
call
and
sub
nop
xor
cmp
push
std
stos
push
mov
inc
jmp
sub
out
sub
cs
addr16
mov
jmp
push
cmp
fcomi
loop
pop
mov
lock
push
jne
xor
out
add
incb
add
call
popf
lret
push
push
push
imul
mov
aas
pop
lods
cmp
jnp
push
inc
test
lar
das
imul
insb
push
jmp
or
aaa
cwtl
sbb
mov
mov
nop
enter
mov
mov
lods
mov
push
sub
add
sti
sub
insb
repnz
cmp
in
xchg
sti
shl
scas
pop
sbb
out
sbb
inc
call
cmp
mov
inc
adcb
mov
or
sub
roll
push
lahf
icebp
int
in
push
fmull
pop
inc
pop
xor
push
in
mov
adc
cmc
lret
push
addb
lds
popf
pop
std
jb
pop
cld
insl
enter
jmp
xchg
inc
mov
sbbb
inc
xchg
test
xor
pusha
xchg
sub
fwait
jne
les
cmp
sub
fdivr
cmp
mov
rol
push
into
iret
daa
jle
shll
nop
jmp
or
scas
ss
xchg
cmp
cmovnp
les
jnp
jecxz
dec
pop
int3
addr16
pop
inc
pop
mov
stc
pop
dec
and
aaa
pop
sub
iret
jne
push
pusha
stc
aas
mov
mov
jge
sbb
or
inc
lcall
into
cmp
xor
imul
pushf
xor
out
ror
test
sar
imul
dec
cmp
mov
pop
fiadds
fs
es
xor
cmp
dec
mov
adc
out
push
add
and
jb
or
cmpl
sbb
inc
fbstp
addr16
jp
test
and
cmpsb
xor
int
cmp
arpl
mov
test
cmp
pop
fwait
mov
in
dec
lahf
dec
inc
es
pop
pop
add
push
jb
insl
lcall
xor
pop
int
xchg
sub
or
lcall
fisttpl
pop
pop
dec
pop
pop
into
cmp
ficoml
xchg
loop
mov
mov
or
imul
cmp
xchg
ret
add
icebp
enter
pop
cmp
xchg
fildl
clc
mov
push
xchg
aaa
add
xchg
xlat
push
ret
ret
pmulhuw
test
push
sti
pop
aam
or
std
inc
jne
repz
lods
in
lret
add
cmp
dec
add
dec
ds
adc
push
fdivr
les
mov
cmp
xor
mov
orb
aaa
lret
stc
ljmp
clc
mov
and
and
dec
pop
mov
lea
test
pop
in
xlat
push
sbb
sahf
bound
sbb
sub
mov
or
test
sarl
sahf
mov
addr16
cmp
sti
js
es
jbe
mov
outsl
push
jecxz
iret
jge
lock
lods
mov
pop
or
mov
fidivrl
stos
es
xchg
sahf
dec
push
in
popf
add
mov
mov
out
and
sub
test
in
push
fisubrs
iret
xor
lret
sbb
scas
push
mov
pop
jmp
mov
jl
xchg
mov
mov
ret
cmp
int
cmp
stos
push
mov
push
sarl
pop
out
push
dec
jmp
or
cltd
sub
fs
inc
inc
call
inc
pop
xchg
jle
jb
fistl
cmp
inc
xchg
inc
cwtl
fimull
sbb
out
inc
pop
sbb
xor
test
mov
in
adc
jmp
adc
je
dec
push
push
sub
mov
xchg
add
loop
jns
jbe
mov
sbb
or
or
inc
dec
xchg
fstps
adc
or
sub
jb
pop
sahf
ret
mov
inc
dec
jb
ret
jmp
adc
movsl
aam
cmp
add
andl
mov
jbe
xorl
mov
addr16
add
mov
mov
push
sti
cmp
cli
and
stos
fstpl
test
cltd
xor
test
clc
push
icebp
ja
jg
test
push
fildl
ja
xor
into
fcmovnbe
std
movsb
ljmp
cli
imul
xor
or
cmpsb
pusha
push
outsb
cmp
adc
jl
repnz
les
dec
stos
and
jge
andl
icebp
sbb
or
stos
mov
adc
enter
dec
ljmp
pop
pop
test
inc
mov
out
push
add
mov
lods
out
add
ljmp
aas
cmp
out
jmp
popf
cwtl
mov
mov
dec
jmp
adc
inc
scas
xchg
mov
push
or
xchg
jecxz
adc
icebp
daa
inc
xlat
or
cs
xchg
adc
fcmovb
mov
inc
mov
mov
lds
scas
push
dec
repz
push
add
pushf
out
xchg
movsl
sbb
or
lods
das
push
insb
push
jmp
sub
dec
inc
mov
inc
icebp
jnp
mov
test
pop
lods
mov
mov
ds
cmp
sbb
or
add
addr16
push
inc
cmc
adc
inc
xchg
call
hlt
mov
pushf
adc
leave
push
xlat
cmp
je
cmp
pop
loop
adc
mov
test
add
sub
into
xchg
insb
mull
dec
mov
jno
test
sub
xchg
and
shr
mov
or
rol
adc
incl
xor
xchg
ljmp
mov
call
add
fwait
rclb
imull
push
aam
frstor
mov
repz
je
and
in
xchg
inc
sub
paddusb
xor
add
dec
incl
insb
mov
iret
ror
push
call
lcall
mov
jbe
dec
subb
mov
xor
mov
xlat
push
in
mov
xor
stos
cmp
sbb
cmp
ficomps
imul
pop
scas
inc
mov
cmpsl
sbb
mov
push
mov
and
sub
aaa
push
int
daa
xchg
in
rcll
mov
test
pop
movsl
insb
loope
stos
jno
rcrl
sbb
jmp
aam
inc
push
cmp
or
aad
stos
xchg
out
adc
rcll
or
pop
subl
lock
push
cmpsb
test
dec
xor
cmp
and
arpl
xchg
fldcw
scas
mov
sub
and
jle
adc
lods
cmp
lret
sarb
sub
loop
push
aaa
rolb
mov
int3
cmp
push
mov
inc
imul
das
jp
mov
push
jnp
jo
das
mov
ficompl
fs
je
push
mov
pop
mov
pop
pop
or
sub
stc
stos
xchg
std
pop
lea
add
pop
loopne
shrb
mov
or
mov
sub
push
pop
push
lret
into
shrl
xchg
add
std
mov
jp
cwtl
inc
dec
sub
test
xchg
movsl
call
fwait
shll
cmp
inc
pop
sbb
jb
xchg
mov
mov
out
inc
daa
mov
push
cmpsb
sarb
mov
or
imul
stos
xor
xchg
out
inc
mov
ds
pushf
fldcw
mov
jl
shl
add
xor
sbb
mov
or
nop
imul
or
stos
add
test
lret
jb
xchg
int3
adc
mov
mov
xor
jg
sub
pop
popa
inc
outsb
cli
xchg
dec
jns
jle
and
push
cs
lret
xchg
adc
loope
loope
pop
fsubs
sbb
lock
mov
rorb
lcall
out
xor
xchg
in
es
mov
adc
or
jmp
mov
test
int3
add
inc
ret
stc
movb
rcrb
xorl
mov
ljmp
pop
xor
sub
dec
pop
cmp
sahf
inc
push
loope
cmp
cmp
rcl
push
stc
jecxz
sbbl
es
xchg
es
mov
outsl
dec
shrl
and
xor
imul
test
pop
pop
cmp
das
lods
std
adc
push
mov
sub
adc
lods
shll
jl
mov
xor
jae
inc
test
mov
mov
cwtl
xchg
imul
movsl
aaa
xchg
push
out
mov
mov
sahf
jno
aas
fstpt
clc
in
ret
call
in
dec
gs
je
out
xor
add
push
mov
and
into
ss
push
dec
scas
mov
andl
add
dec
or
or
push
call
mov
sti
test
ret
add
out
not
cmp
pop
jg
mov
push
adc
subl
scas
fscale
lret
pop
movsl
xor
popf
lcall
lock
push
sti
pop
popa
shlb
xchg
movsl
mov
imul
inc
insl
hlt
cli
lcall
cmpsl
mov
stos
pop
push
cld
mov
mov
push
add
mov
inc
sub
mov
scas
pop
lds
mov
loope
push
mov
mov
pop
mov
ficoml
int3
mov
or
and
lahf
mov
xchg
jecxz
pop
mov
lea
lahf
clc
popa
test
ljmp
fldcw
cwtl
icebp
push
shll
xchg
pop
xchg
sti
clc
aam
sub
imul
pushf
lret
adc
test
fidivs
push
rep
ds
sub
mov
mov
adc
loopne
dec
mov
cltd
lcall
cmp
jle
xchg
ljmp
cwtl
or
xchg
in
jle
roll
ficompl
sbb
dec
lock
ret
pop
cmp
inc
pop
and
jno
lods
mov
adc
icebp
in
push
mov
call
icebp
or
movsl
and
fmuls
or
ja
dec
notb
cli
mov
pop
jne
push
imul
lock
repnz
xor
xchg
aam
ja
or
stos
mov
push
xor
insl
sbb
mov
rorb
pop
add
jns
or
push
jno
jl
push
and
inc
out
leave
push
push
movsl
or
cmp
xor
mov
add
mov
in
fidivrs
dec
push
cmp
int
je
lcall
mov
adc
sub
cli
cmpsl
popa
mov
aaa
push
mov
bound
mov
outsl
sbb
pop
out
jns
mov
add
xor
push
pop
aas
sbb
cmpl
ss
out
pop
lods
loop
ficompl
or
test
jp
mov
xchg
xor
call
inc
rolb
cmpsb
add
out
mov
pushf
cld
je
mov
mov
mov
mov
ret
inc
dec
cwtl
pusha
push
test
xchg
orl
repz
scas
int3
in
xlat
cwtl
inc
mov
jl
ret
addr16
add
dec
mov
in
daa
vaddss
push
ficoms
pop
aas
aam
shll
call
xor
mov
sahf
arpl
cmp
ss
mov
sub
cli
sbb
enter
jae
shrl
bound
cmpsl
xchg
popf
dec
pop
stos
push
in
xor
or
sarb
call
adc
loopne
pop
sub
adc
inc
idivb
out
pop
mov
es
pop
mov
cmp
sbb
push
pop
mov
sarl
cli
std
movb
daa
jmp
cmpl
pop
aas
mov
jecxz
incb
outsb
add
out
pop
cmp
mov
dec
lret
cmp
push
arpl
ss
add
rcrl
and
mov
fsubs
jmp
pop
sbb
sub
adc
cwtl
adc
lods
out
cmp
inc
imul
mov
adc
mov
cmp
push
and
sbb
dec
psubsb
adc
cmp
push
push
sarl
push
add
call
fnstsw
jl
mov
cmp
inc
pop
xchg
cmp
jecxz
jecxz
sbb
lret
fbstp
mov
ja
out
mov
ret
pusha
push
sbb
es
mov
mov
lret
icebp
jne
and
pop
push
jmp
add
adcl
call
adc
std
add
cmpsl
iret
push
xchg
add
and
shrl
sub
fldt
outsl
mov
jmp
lcall
es
cmp
xchg
mov
leave
aaa
push
pop
rcr
rcl
daa
lock
inc
sub
xchg
test
out
test
jnp
int3
scas
dec
js
push
repz
imul
push
jg
cwtl
jl
test
lock
adc
xchg
in
stos
mov
push
fs
push
push
inc
mov
outsl
sub
aaa
movzwl
cmc
inc
in
add
aaa
cmp
je
imul
adc
mov
movsl
xor
and
fsubs
lret
shl
inc
xor
push
jl
lahf
add
inc
mov
loopne
push
std
mov
lds
sbb
xchg
xchg
out
dec
mov
insl
push
adc
or
dec
aas
dec
test
add
mov
mov
addl
xchg
cmp
aaa
shll
inc
push
aaa
pop
mov
les
jmp
pop
enter
test
out
jnp
fs
fdivl
cmc
out
inc
mov
cmpxchg
fwait
aam
ss
and
mov
test
call
clc
push
mov
inc
rolb
or
sar
sbb
arpl
and
or
test
ret
jbe,pt
mov
dec
scas
add
sbb
mov
push
mov
push
rorl
and
sub
pop
mov
cwtl
sbb
aam
stos
xchg
sbb
movsl
icebp
loop
jle
pop
xor
add
cmp
push
lcall
nop
out
push
ret
std
cmp
popf
cmp
popf
inc
iret
rclb
mull
nop
rorl
test
mov
jp
lcall
dec
xchg
sbb
xor
cmp
xchg
add
mov
fsubrl
push
in
mov
lods
adc
mov
int3
mov
das
pushf
loopne
pushf
arpl
mov
adc
add
jl
adcb
mov
or
jo
xor
pushf
and
mov
pusha
mov
out
mov
mov
aas
xor
aas
adc
adc
jg
or
inc
hlt
push
push
jno
fs
sbb
adc
jo
sub
push
push
sub
adcb
in
pop
add
ret
lahf
lret
dec
add
sub
sub
cmp
lret
sbb
js
mov
aam
adc
mov
jno
pop
ret
adc
fnstsw
sub
int3
jnp
lock
aas
ds
mov
rorl
push
add
add
pop
or
or
fwait
dec
xchg
cmp
int3
rol
das
jb
add
mov
and
js
sbb
filds
cld
stc
pusha
cld
xchg
cmp
inc
mov
mov
pop
adc
outsb
adc
div
cmp
cs
mov
mov
cmp
jg
lods
lods
cmc
jp
pusha
and
mov
add
mov
xor
pop
jae
int3
flds
jne
pop
adc
das
out
ljmp
adc
sbb
pop
inc
cmpsl
push
mov
ret
adc
in
mov
cmp
repz
sbb
push
cmpsb
inc
and
ds
aad
rorb
mov
bnd
dec
jns
adc
enter
push
jge
jo
pop
jno
adc
rorl
call
mov
mov
aam
mov
ljmp
dec
ror
mov
sbb
lock
jmp
xor
aam
addr16
dec
mov
fistps
sbb
ss
jnp
inc
fadds
mov
pop
sub
cs
sbb
cltd
sub
jo
push
movsb
repnz
mov
cmp
xorb
shlb
rcl
pushf
inc
push
jno
imul
ficoml
sub
cmp
pop
push
mov
loop
ss
jo
fisttpl
in
jo
mov
repnz
push
sub
out
ja
pop
lret
sub
test
adcl
fsubp
pop
movsb
push
pusha
shrl
adc
or
mov
cmp
inc
jg
addr16
imul
pop
test
popl
jne
add
adcl
cltd
xchg
or
add
inc
popf
nop
mov
pop
es
inc
mov
sbb
mov
adc
mov
in
adc
repnz
int3
fdivrs
mov
jle
into
loop
lret
pop
stc
lret
aam
cmp
add
xchg
mov
mov
std
jmp
repz
sub
sbb
pop
mov
js
call
pushf
adc
mov
add
pop
push
lods
jb
mov
cmp
lds
jb
or
mov
in
mov
ficomps
ljmp
dec
ljmp
mov
mov
js,pn
fisttpl
and
orb
mov
sti
sub
xchg
pop
shlb
mov
and
fldl
cwtl
or
mov
scas
mov
rcll
aas
pop
push
push
in
push
in
cs
push
cmpsl
xchg
rcrl
dec
sub
fldcw
dec
les
rdpmc
into
call
dec
mov
lea
insl
inc
or
mov
add
add
hlt
lahf
stc
aas
add
sbb
xor
cwtl
rcrb
mov
aas
jmp
fiadds
dec
dec
add
push
orl
loopne
mov
add
fsub
repz
std
and
ljmp
mov
or
pop
out
sbb
shr
lock
add
sub
imul
adc
dec
roll
push
in
rorl
repnz
sti
pushf
jmp
int3
shll
scas
test
test
lcall
sub
outsl
jbe
cmpb
into
in
stc
dec
mov
in
adcl
mov
cmp
dec
clc
ljmp
xor
sbb
push
sbb
xor
aam
xchg
fs
out
pushf
test
inc
js
mov
mov
push
jmp
push
cmp
mov
sub
cmp
sub
or
outsb
push
ret
sub
outsb
test
cld
and
cld
sub
sub
mov
xor
xchg
stos
sub
inc
rcll
mov
in
cmp
fisttpll
repnz
jge
jae
pop
or
outsb
xchg
mov
addr16
mov
mov
cmpsl
jg
test
xor
js
pusha
pop
fidivrs
bnd
cltd
add
adc
mov
sbb
adc
or
xchg
movsb
lock
cmc
cmpl
pop
inc
clc
xchg
in
leave
push
orb
mov
insb
jnp
mov
adc
fildll
xor
mov
jb
int
xchg
jae
addr16
and
addb
enter
mov
jno
inc
in
cmp
pop
lahf
fs
mov
cmp
ret
filds
inc
or
outsb
or
sbb
popf
pushl
mov
vprotq
mov
pop
aaa
aaa
sbb
arpl
xchg
je
adc
pop
out
adc
mov
push
jo
mov
out
pop
enter
jmp
clc
fcomip
rcrl
in
insb
dec
mov
mov
adc
daa
aas
cmpsl
xchg
or
xchg
inc
aas
andb
push
mov
mov
into
push
sbb
add
int
cwtl
rolb
pusha
push
mov
adc
push
test
cmp
aas
lcall
divl
jo
sub
push
jge
in
fcoms
cmpsb
adc
shrl
lock
fcompl
cmp
inc
aam
mov
jns
ss
jno
or
inc
clc
mov
sub
mov
scas
cmp
mov
adc
roll
cmp
or
xor
sub
test
rolb
mov
shlb
repnz
hlt
lahf
sbb
add
ss
push
or
lret
dec
mov
out
mov
daa
mov
in
xor
int3
add
mov
sub
ljmp
mov
jns
sarb
sub
dec
int
inc
nop
pop
leave
xchg
hlt
mov
popf
adc
iret
inc
sub
cmp
fldenv
pop
jge
push
frstor
movsb
lock
lahf
lret
adc
dec
jb
iret
dec
sti
shr
clc
fistl
adc
jbe
pop
lahf
cmp
std
jns
sahf
xchg
add
pop
idivb
into
xor
addr16
in
inc
in
arpl
pop
pop
movsl
das
mov
jge
insl
pop
jns
popf
mov
mov
push
adc
pop
orb
repnz
cmpsb
push
jmp
aaa
mov
dec
and
mov
jecxz
lods
or
xor
fiaddl
arpl
push
xchg
cmp
dec
roll
add
jle
or
mov
test
pop
rclb
scas
mov
jbe
mov
negl
sbb
xlat
rcll
xchg
daa
adc
ss
lahf
mov
int3
cmpsb
test
aas
push
cld
test
pop
enter
xorl
in
popa
cmpsb
mov
test
push
jg
sti
cmp
cmc
testl
pop
xchg
pop
daa
test
dec
insl
pushf
mov
mov
stos
or
movsb
push
jmp
jmp
dec
push
stos
andb
xor
aaa
push
aas
mov
js
stc
dec
sub
jbe
outsb
mov
inc
bnd
inc
out
xchg
push
call
ret
ficompl
fadds
clc
ja
sbb
inc
dec
pop
mov
jnp
push
incb
cmpsb
xchg
adc
mov
fwait
dec
push
push
mov
xor
sub
repnz
sbb
pop
je
int
pop
push
fwait
mul
cmpsb
adc
and
sbb
push
jb
test
daa
or
xor
or
mov
popf
call
outsl
int
repnz
addr16
cld
push
cmp
imul
or
mov
jge
jae
cmp
in
xor
shrb
fsubrs
mov
mov
xchg
cmpsb
jge
rcr
cmc
rcrl
cmpsl
dec
add
or
xor
xchg
sbb
data16
sub
sbb
mov
shll
js
adc
pop
jmp
cmpl
push
out
add
fildll
call
dec
mov
scas
mov
mov
aaa
jecxz
inc
sbb
aad
jbe
xor
out
xchg
fsubs
push
mov
into
pop
shrl
das
mov
adc
cmp
cmpsl
cs
dec
mov
mov
or
dec
pop
xor
push
cmpsb
mov
push
leave
xchg
or
mov
insl
jbe
xchg
pop
lahf
cltd
jb
jl
and
movb
mov
jmp
leave
scas
rolb
xchg
cmp
xorl
jg
pop
fsubrl
arpl
jne
pop
sti
in
inc
jbe
push
mov
add
adc
and
adc
scas
lea
je
fidivrl
sbb
loopne
ror
xchg
jns
cmc
shl
std
in
mov
test
daa
stc
negl
dec
dec
ljmp
or
pop
addr16
popf
shr
rolb
cmp
adc
pushf
mov
pop
jno
pusha
xor
mov
and
lods
rorb
push
shll
mov
push
ds
scas
scas
popf
clc
push
jecxz
add
shr
int3
add
sub
adc
testb
outsl
push
mov
ror
mov
add
lea
jg
sarl
inc
insl
jb
shll
pop
sarl
dec
les
sbb
mov
jecxz
jmp
dec
lcall
ret
sub
pop
test
dec
dec
loopne
sub
aas
add
push
fdivs
xchg
jg
xor
mov
xor
xchg
add
sub
aaa
fsubrl
adc
cmpsl
sbb
mov
out
push
subb
inc
rol
push
sahf
adc
pop
shll
xchg
mov
push
xor
push
xlat
mov
cli
jno
daa
das
pusha
jb
adcb
pusha
sbb
or
add
jb
movsb
mov
xorb
sub
aas
xchg
dec
sbb
sbb
lret
mov
dec
stos
out
and
stos
add
jge
cmp
cmp
das
adc
sbb
mov
fisttpl
sbb
cld
aaa
rolb
mov
pusha
xor
es
or
pusha
cmc
inc
mov
fiadds
stos
jge
and
pop
pop
dec
in
fidivrs
or
std
or
call
aad
dec
mov
into
pop
aam
pusha
cltd
pop
arpl
and
leave
mov
mov
dec
mov
lds
jae
ret
mov
in
jne
dec
sbb
lea
dec
lock
push
add
dec
out
call
mov
mov
xchg
mov
inc
mov
push
insl
mov
mov
call
adc
xlat
mov
add
pop
mov
jb
test
dec
outsl
mov
add
and
inc
mov
jp
inc
cmp
add
bound
xchg
movsl
adcb
cmp
dec
jmp
daa
push
jb
jb
repz
pushf
mov
aaa
lahf
pop
test
insl
jl
cmp
outsb
fdivrs
orl
aas
or
push
leave
dec
mov
dec
test
add
fists
xchg
sarl
push
lods
mov
pop
ret
hlt
sbb
xor
ljmp
insb
hlt
or
js
cwtl
mov
dec
dec
adc
xor
cmpsb
repnz
es
lret
outsl
das
jnp
sbb
xor
cwtl
mov
cmpl
fists
sub
jae
sbb
mov
out
dec
cltd
jo
jno
in
rcrb
and
scas
cs
push
mov
lea
ror
leave
pop
in
orl
adc
sub
jle
mov
jmp
daa
sbb
outsb
not
aad
lods
sub
mov
pop
mov
addl
movsb
xor
repnz
mov
and
subb
and
std
rcr
sbb
mov
in
lea
aas
out
xor
add
sub
and
push
or
or
add
mov
inc
mov
xchg
mov
or
cmc
ljmp
cmp
pop
stos
and
inc
adc
sub
and
das
jns
jo
xor
or
imul
and
stos
xchg
popf
jp
pop
and
cmp
add
test
fisubrl
fimull
or
iret
inc
imulb
jno
scas
and
repz
les
jb
fildll
pop
xchg
in
xor
mov
xchg
dec
xor
shr
fisubl
test
push
or
cli
pop
sub
add
nop
mov
cs
in
iret
push
push
daa
push
lret
mov
insl
ret
pop
clc
push
adc
bound
jns
adc
les
mov
pop
xchg
lret
js
jecxz
xchg
push
add
cmp
adc
and
sar
stos
fildll
dec
ror
and
cmp
dec
pop
sahf
sbb
cwtl
jbe
pop
ljmp
dec
sub
cs
dec
insl
push
sahf
mov
fcomi
add
scas
pop
push
out
arpl
popf
xor
dec
stos
pop
mov
pop
rcrb
test
pop
mov
or
add
xchg
add
es
lds
arpl
mov
ds
rol
div
ret
inc
fwait
mov
notb
and
scas
mov
xor
jg
sti
mov
push
or
adc
sahf
mov
lahf
push
cmc
iret
je
push
sbb
int3
int
mov
scas
das
cmp
stos
ret
icebp
and
mov
test
call
movsw
inc
lret
stos
mov
push
cmpsl
push
mov
test
les
or
mov
sbb
movsl
mov
pusha
jge
jno
and
mov
clc
pop
out
xchg
movsl
push
imul
push
fwait
hlt
push
push
imul
cmp
lahf
or
fsub
lret
and
xchg
lods
rorb
and
adc
fistps
mov
push
popf
jno
call
shrl
aaa
aas
jle
dec
stos
and
and
pop
fbld
popw
jp
mov
jnp
dec
ficoms
leave
mov
mov
repnz
mov
insl
loopne
icebp
ljmp
insl
fstpt
cmp
les
and
cmp
inc
jmp
mov
xlat
jns
cmp
test
pop
xchg
push
or
adc
shll
dec
ret
mov
mov
jge
push
stos
dec
lds
stos
das
or
fcmovnu
and
test
aam
das
rcl
sbb
dec
aam
mov
mov
in
rorb
jb
sub
jbe
popa
aaa
stos
loope
ja
sahf
xchg
sti
fiaddl
popa
push
dec
cld
mov
int3
dec
lret
aam
daa
es
repnz
testb
cwtl
mov
fldl
sub
enter
and
iret
sbb
jp
in
lock
lock
cwtl
xor
nop
adc
adc
hlt
cs
fmuls
mov
shr
mov
xor
jmp
inc
jecxz
imul
jno
push
dec
push
jp
stos
lods
dec
sbb
rol
repnz
dec
pop
shrb
jg
stos
icebp
shrl
or
aaa
mov
xchg
push
mov
fdivrl
ljmp
lahf
faddp
ds
pop
inc
xchg
lods
enter
movsb
ret
into
les
xchg
sub
mov
mov
or
loope
push
mov
hlt
das
sti
push
xchg
repz
xchg
pop
xor
sbb
jmp
pop
test
in
push
mov
icebp
mov
fs
je
fwait
cmp
and
in
iret
mov
imul
shl
testb
pop
lret
outsl
xchg
xchg
xchg
mov
cmpsl
nop
jnp
cmp
inc
into
inc
jle
jmp
faddl
cmpl
popf
dec
xor
push
xchg
inc
mov
and
out
call
jg
push
out
jnp
pop
inc
aas
fistpl
xor
add
push
push
sbb
ret
pop
or
mov
icebp
mov
call
adc
xor
add
pushf
in
rorb
loopne
std
mov
add
lds
xchg
push
sbb
or
outsl
sub
fsubl
jle
xchg
and
bound
insl
insl
add
mov
sub
sub
xchg
out
xor
xorl
push
in
add
jb
inc
jecxz
or
cmc
aaa
test
dec
jo
mov
les
mov
push
leave
mov
lock
mov
subl
js
lcall
mov
pop
and
insb
clc
popf
jnp
jbe
jae
sti
mov
jbe
aam
xchg
sbb
rol
mov
lahf
fsubp
mov
push
xchg
fsubs
xchg
inc
sub
pushl
ret
popa
cli
frstor
jnp
daa
out
outsl
mov
lods
es
push
jmp
add
dec
mov
pop
stc
scas
adcl
inc
or
stos
push
movsb
rclb
imul
out
jg
fiadds
adc
hlt
jle
jo
inc
mov
mov
add
je
xor
jg
hlt
hlt
or
push
sbb
mov
aad
mov
dec
sbb
push
bnd
loopne
call
aad
cmp
sti
adc
sbb
jb
dec
inc
xchg
fcoms
lds
rorl
das
push
lods
inc
icebp
or
push
add
cli
dec
repnz
dec
pop
mov
frstor
add
sbb
sbb
push
push
adc
jecxz
jmp
sbb
push
adc
push
inc
pop
adc
fldz
add
stos
mov
movsb
scas
aas
and
push
aam
arpl
insb
push
fld1
mov
es
dec
and
inc
es
pusha
pop
push
jmp
pop
test
inc
aas
icebp
dec
lret
test
push
xor
mov
cmp
pushf
mov
cmc
lret
add
xchg
mov
data16
and
push
test
cmpsb
sub
pop
cmp
mov
xchg
lds
out
push
loop
push
push
dec
cmp
mov
pop
and
and
add
cld
call
fstpt
std
test
mov
sbb
or
jae
push
fdivrs
loop
pop
cli
repnz
push
insl
punpckldq
je
xchg
pusha
sbb
lods
rorl
repnz
in
mov
xchg
adc
enter
pop
mov
in
and
int
sbb
push
inc
popf
jnp
arpl
and
or
fimull
outsb
jmp
adc
push
add
mov
mov
pop
jb
cmp
das
push
push
mov
testb
inc
mov
pop
push
loop
mov
cmc
cmp
inc
fisttpll
dec
insl
sub
or
aam
cmpsl
sub
xchg
adc
les
or
testb
jl
lcall
lea
pop
cmp
lock
or
movlhps
movsl
and
jnp
rclb
xlat
push
add
test
fbld
cmp
push
xchg
test
mov
add
xchg
xor
xor
push
ret
xchg
test
push
ljmp
sub
cmp
sub
xchg
jb
mov
fidivrs
lods
rcl
sbb
mov
sbb
jl
cli
or
inc
iret
rclb
shl
lock
adc
mov
xor
mov
loopne
mov
sbb
jle
inc
xor
out
or
mov
or
faddl
push
mov
gs
imul
movl
sti
dec
lcall
shlb
sub
dec
push
xchg
or
inc
rolb
jns
cmpsl
mov
add
jmp
repz
mov
mov
push
aad
pop
or
in
pop
xchg
mov
in
sbb
cmp
or
test
dec
cmpsb
jno
xchg
xchg
das
jecxz
add
fsts
push
bound
mov
jns
mov
imul
cmp
insl
mov
outsb
in
mov
in
add
lock
jbe
and
ljmp
xchg
dec
call
imul
mov
sbb
dec
xchg
ret
das
add
sub
sbb
scas
adc
xchg
stos
ss
cmp
mov
pop
ficoml
aad
push
arpl
stos
pop
and
in
add
fstpt
mov
add
fstpt
lock
jg
xchg
sarb
jge
dec
inc
outsb
xchg
and
repz
cmp
mov
mov
or
sbb
std
gs
adc
insb
pop
rol
inc
test
rclb
in
fsub
aas
ret
lock
dec
push
xchg
ret
cli
xchg
lods
lahf
out
std
std
jmp
cmc
pop
jle
iret
xchg
daa
jmp
decl
mov
and
mov
mov
aas
mov
adc
mov
push
sub
movsl
xor
pop
sarb
stc
cmpsl
js
nop
jl
and
popa
and
sti
cmpsl
in
ljmp
pop
fwait
roll
dec
pop
and
bound
or
jmp
cmpsb
sub
pop
jne
loop
repnz
push
push
nop
mov
or
pop
sub
mov
arpl
inc
xchg
imul
scas
sub
inc
xor
imul
push
jbe
dec
xlat
mov
leave
pop
outsl
add
sbbb
es
out
rcr
dec
bnd
xor
ret
push
jl
pop
jge
data16
cmpsl
mov
xor
xor
rcrl
pop
pushf
inc
push
shlb
sub
clc
rcll
cli
and
xorl
and
fists
inc
xchg
adc
add
lcall
test
es
or
lahf
xchg
and
jne
or
rorl
pop
pop
ja
sbb
fs
inc
lcall
fwait
test
mov
loopne
test
in
and
mov
out
lahf
push
addr16
out
or
mov
jmp
test
mov
stc
daa
aad
adc
insb
cmp
shl
pop
cmpsl
cs
ds
ret
gs
sarl
gs
aam
adc
movsb
or
pop
mov
pop
lret
fadd
aaa
jge
imul
xchg
stc
sub
push
mov
je
and
sti
rcll
imul
push
and
and
insb
push
cmp
arpl
sbb
loopne
test
mov
mov
push
sub
or
add
loop
mov
scas
sbb
pop
repnz
lds
adc
xchg
outsl
xchg
cs
shrb
sbb
scas
pop
movl
lock
dec
ret
es
push
in
imul
xchg
push
out
pop
adc
int3
push
mov
stc
fcmovb
mov
adc
jecxz
mov
mov
aam
jmp
mov
and
popf
loope
inc
xchg
pop
in
aas
xchg
jbe
push
cmpsl
mov
sub
mov
pop
mov
repz
cmpsl
fsubr
sbb
cmpsl
sbb
push
testl
xchg
pop
pusha
mov
add
cmp
aam
xchg
and
jo
lods
rorb
mov
mov
iret
mov
push
push
iret
inc
bnd
imul
inc
cmp
mov
data16
inc
enter
cld
popa
inc
push
dec
stc
xor
xchg
adc
dec
cmpsb
cmp
or
int
lods
and
or
iret
sahf
mov
jl
test
in
into
movsb
push
mov
call
mov
mov
sbb
jmp
sbb
or
mov
inc
push
xchg
jp
pop
popf
inc
push
outsb
movb
pop
or
cmpsl
mov
pop
out
pop
aaa
sub
js
movsb
add
ljmp
mov
jmp
stos
push
jno
xor
add
and
mov
ret
cmp
lods
mov
jle
cmpsl
das
jns
mov
push
ret
ret
pop
or
jg
xor
and
icebp
enter
ljmp
mov
nop
inc
mov
outsl
sbb
pop
movsb
lret
or
cwtl
aaa
lds
aas
aaa
js
std
push
add
sbb
ss
xchg
in
lahf
add
sbb
cmp
imul
sarl
rcrb
paddd
add
cmp
test
std
fidivs
decl
xlat
mov
ror
inc
push
sbb
ffree
repz
inc
sahf
out
enter
jo
xor
jb
inc
loop
sbb
pop
push
clc
lods
repz
ds
mov
mov
stos
dec
xchg
jg
push
xchg
pop
and
lret
popf
fcoml
mov
dec
out
sahf
shr
sbb
push
mov
mov
fs
sub
js
sub
mov
lret
ss
xchg
mov
pop
daa
arpl
cld
dec
sbb
gs
or
scas
in
cmp
cmpxchg
mov
aas
jae
outsl
xchg
out
jge
push
dec
mov
sub
inc
pop
testl
les
subl
push
xorb
out
les
imul
mov
lret
out
inc
cmp
loopne
scas
jns
jne
outsl
outsl
push
jo
sub
loopne
popf
inc
inc
loop
mov
loope
outsl
xchg
icebp
jp
add
hlt
arpl
dec
pop
nop
nop
nop
cmc
xor
mov
enter
push
dec
mov
sbbl
and
jle
jns
sub
pop
shrb
pop
dec
pop
mov
add
je
addr16
inc
xor
daa
dec
mov
push
dec
scas
mov
pop
shrb
sti
in
jns
jo
pop
mov
sarb
dec
frstor
or
imulb
hlt
mov
fcomi
ja
insl
and
sbb
test
jns
and
pop
lods
js
mov
je
and
lods
pop
stc
dec
ret
push
and
fidivl
or
sub
mov
lret
repnz
dec
push
or
mov
ret
sbb
sbbb
call
shll
repnz
or
je
xchg
shlb
popf
xor
dec
addr16
movsl
mov
jb
add
push
push
adc
pop
xchg
fwait
stos
shl
cmp
mov
pop
daa
and
test
stc
xchg
je
push
adc
jg
icebp
lods
dec
data16
es
sbbl
lods
push
hlt
dec
test
adc
lret
sub
mov
test
add
sub
int3
je
nop
clc
xchg
hlt
aam
mov
repnz
mov
addr16
out
stos
xlat
mov
hlt
cld
push
or
jl
push
pop
lcall
jnp
or
outsl
leave
jmp
lods
shll
out
inc
sti
andl
mov
xor
roll
fmul
insl
jns
pop
ja
cld
jg
sahf
sbb
fstpl
test
or
sbb
push
mov
jns
inc
pop
test
or
inc
mov
xchg
int3
movsb
pop
or
dec
repnz
push
or
xor
jno
fstps
jo
mov
add
out
rcrb
push
out
cltd
mov
xchg
imul
outsb
sbb
mov
mov
or
negl
enter
mov
xor
out
repnz
inc
jne
sub
jno
jae
repnz
pop
jg
lods
adcb
xor
cmp
cltd
or
lret
mov
ja
inc
push
and
loop
inc
ret
cltd
adc
jo
fmul
sub
inc
imull
ds
pop
jmp
in
push
jne
nop
adc
aad
sub
fmuls
jmp
cmp
xor
dec
and
inc
jge
mov
bound
mov
cmp
pop
sub
loope
cld
inc
inc
pop
les
adc
add
das
xchg
mov
push
push
cwtl
mov
cmpsl
push
fwait
mov
jle
push
xchg
dec
pop
add
sahf
out
lret
dec
cmp
cmp
mov
lret
out
lcall
push
sbb
jp
mov
cltd
push
or
ss
dec
inc
adc
push
pop
jmp
sarb
fnstenv
add
cmpsb
adcb
or
pop
push
aas
or
lret
mov
pop
dec
icebp
cmp
adc
daa
xchg
cli
add
dec
mov
roll
out
iret
dec
adc
and
push
into
lret
popf
icebp
pop
or
push
mov
jne,pt
xor
mov
push
add
mov
pop
cli
sbbl
mov
nop
dec
fisttps
mov
arpl
enter
sbb
add
sub
lahf
fwait
lds
scas
clc
push
cmp
push
or
aaa
pop
lods
lods
push
or
dec
cmpsl
arpl
sar
inc
incl
shrl
dec
mov
dec
push
mov
stos
lods
inc
cmp
sbb
fs
adc
aad
ss
sahf
lock
xor
mov
push
pop
fidivs
in
rcrb
inc
mov
mov
and
cld
inc
aam
or
mov
or
mov
sub
cmp
inc
call
cld
rcrl
fidivrs
jnp
hlt
scas
lds
xchg
pop
ja
data16
fdivrs
ret
xor
mov
add
pop
mov
sarb
adc
frstor
shlb
je
and
cmp
jne
sub
out
inc
insl
sub
popl
sub
xchg
adc
mov
ja
or
idivb
jnp
mov
and
sbb
push
dec
rcll
dec
jp
xchg
mov
decl
inc
pop
idiv
xor
mov
rolb
aaa
test
ds
in
fsubrs
xchg
inc
mov
jecxz
mov
rorb
mov
and
jae
aad
lcall
adc
inc
fcmovb
jae
mov
or
xchg
pop
xor
ljmp
iret
and
orl
repnz
adc
stos
mov
subl
sub
sbb
ljmp
and
aas
cmpsl
sub
int3
stos
or
mov
leave
cmpsb
sbb
gs
sbb
jb
pop
pop
sub
sbb
xchg
dec
xorl
or
jne
add
jecxz
adc
in
xor
data16
jl
mov
cmpl
es
imul
mov
sub
cmp
pop
push
ljmp
stos
rclb
jns
mov
fs
push
loop
cmp
sbb
jecxz
dec
adc
xor
jl
sti
mov
aas
adcl
xlat
in
pop
dec
jle
in
mov
pop
xor
insl
jl
sti
mov
pusha
jl
sbb
ss
cmpsb
iret
cmp
bound
pop
jmp
js
in
jp
fwait
jae
sub
dec
mov
leave
fnstsw
clc
pop
test
mov
cmp
icebp
pop
fs
cld
int3
pusha
add
sbb
int
push
dec
mov
adcb
push
mov
fdiv
inc
test
mov
call
jl
popf
sahf
mov
punpcklbw
imul
int3
in
mov
popf
pop
push
pop
push
lods
mov
rcll
paddq
inc
stos
mov
in
mov
scas
cld
in
out
mov
jmp
mov
mov
xlat
cmp
das
xchg
add
lret
or
xor
stos
and
fdivrs
arpl
sbb
add
mov
xchg
fnstenv
mov
jno
ljmp
loopne
in
shr
lods
jno
jno
iret
inc
out
xchg
dec
nop
das
lret
sbb
xlat
mov
mov
repnz
add
cmp
inc
test
cltd
xchg
xchg
stos
sub
pushf
inc
outsl
cmpsl
mov
jle
bound
sti
add
mov
pop
add
aad
fldcw
cmp
xor
stos
pop
ret
adc
push
call
push
push
out
cltd
aad
je
cmpsb
out
sbb
mov
pop
mov
imul
mov
xor
daa
sub
test
sahf
pop
sti
addb
out
inc
rcrl
rcrb
movsb
jno
push
out
mov
xchg
fs
insb
sub
push
iretw
add
imul
arpl
jmp
adc
pop
cmp
js
cmp
fmull
out
outsl
div
sbb
mov
cmp
jmp
test
pop
shll
xor
or
outsl
jg
inc
or
movsb
add
adc
mov
dec
add
cltd
in
dec
cmpsb
in
push
imul
out
outsb
xchg
aas
push
faddl
mov
js
loopne
scas
int
outsb
aad
lret
in
int
xchg
or
mov
xor
arpl
xchg
rcrb
lahf
jns
and
aam
mov
dec
daa
xchg
xlat
cmp
outsb
dec
shrb
cmp
jmp
fmull
not
fstps
cmpb
popa
push
daa
push
xor
push
adc
icebp
pop
jno
xchg
inc
jae
stos
sub
test
int3
gs
mov
in
mov
lret
inc
loop
leave
xlat
jae
faddp
hlt
daa
ror
and
and
sub
push
rolb
subb
rcrb
and
cwtl
int3
gs
imul
push
outsb
mov
inc
pop
shll
cmp
dec
roll
jp
in
mov
xchg
cmc
sbb
fwait
outsl
ret
je
lods
pop
jecxz
repz
push
pop
pop
push
jle
cs
movsb
mov
xchg
cld
loopne
imul
addr16
pop
cmpl
mov
pop
and
xchg
sub
and
sbb
inc
fbld
mov
mov
aas
pop
imulb
insl
xchg
mov
jnp,pn
jecxz
popf
xchg
dec
lods
outsl
pop
xlat
ds
push
clc
cwtl
fisttpll
das
pop
lock
push
mov
pop
lods
in
and
xchg
push
mov
out
push
dec
daa
mov
sbb
stos
mov
xchg
test
inc
arpl
adc
imul
inc
sub
imul
sbb
dec
and
out
mov
ret
or
mov
rcll
sti
rclb
sbb
fwait
pop
mov
aaa
pushf
pop
cs
ret
sub
not
pop
call
xchg
sarl
mov
aas
call
aas
jmp
call
mov
cmp
daa
ret
mov
pop
push
in
pop
or
push
and
scas
pop
xor
jo
add
sbb
sbb
mov
lds
lds
lret
sbb
in
rcl
or
ss
leave
in
in
lret
jl
loope
js
pop
dec
enter
push
jb
push
jg
outsl
mov
add
jnp
pop
divb
std
xor
cmp
or
hlt
sbb
mov
fadd
mov
push
fsubs
push
sub
mov
xchg
cmp
jp
iret
shrb
adc
out
bound
fcomi
jae
and
rol
fstpt
add
clc
fldcw
fisttps
pushf
xorl
loopne
and
sbb
fucomp
fisubs
outsb
pop
fsts
test
lahf
imul
add
pop
sbb
cmp
adc
mov
ret
sub
mov
rorb
sub
pop
sbb
pusha
push
push
test
shll
rorb
ljmp
lret
cli
subl
push
xor
and
mov
mov
pop
icebp
pop
and
push
jnp
hlt
sbb
flds
and
xchg
jp
fidivl
adc
push
xchg
repz
jge
ret
mov
out
dec
fcoms
es
mov
pop
inc
jns
xchg
pushf
enter
pop
inc
repnz
les
xchg
sub
cs
sbb
shrl
xor
cmpsb
push
rclb
iret
xchg
mov
and
ret
jns
or
insl
ja
push
fiadds
outsl
and
pop
or
xchg
pop
out
push
xor
rolb
sbb
pop
add
xchg
sahf
repz
lahf
dec
std
mov
pop
sbb
lcall
jge
fcmovne
sbb
xor
push
out
mov
shrb
pop
push
xchg
inc
jp
ficoml
mov
loope
hlt
leave
adc
or
int
test
mov
sub
dec
into
lods
push
or
out
data16
mov
rcl
fsubrp
mov
push
jle
loopne
jno
cmp
js
mov
jecxz
rorl
mov
inc
push
in
popa
in
pop
pop
inc
xchg
stos
les
sbb
mov
fcoml
ret
fisttps
addr16
sub
insb
cmpsb
mov
mov
ja
flds
gs
xor
sub
mulb
and
roll
pusha
pop
dec
inc
test
sbb
xor
push
mov
shr
or
sbb
inc
dec
push
out
xor
mov
inc
xor
sub
test
out
shll
jmp
sti
ss
jle
insl
mov
jno
sub
xchg
mov
add
push
std
xor
out
pop
cmpsb
push
xchg
pop
push
rorl
mull
aad
stos
jno
cmp
adc
mov
mov
outsb
xchg
mov
mov
sbb
stc
jle
clc
lcall
mov
sti
jno
and
repnz
and
mov
jp
shl
sbb
add
clc
ja
xchg
xchg
mov
iret
push
cmp
push
arpl
dec
pop
cli
popa
sarl
pushf
nop
cli
adc
jecxz
mov
jb
lods
outsl
addr16
pop
jge
popf
test
adc
hlt
test
aas
inc
xlat
mov
cltd
out
adc
call
pop
jnp
dec
jle
push
enter
xor
cmpb
test
roll
das
sbb
or
ss
sbb
out
mov
push
mov
fidivl
or
add
movsb
jl
xchg
mov
inc
mov
in
int
icebp
sub
inc
pusha
fistpl
and
aad
les
popf
lret
imulb
stos
dec
pop
or
int3
lret
dec
enter
cld
sub
xchg
fstp
xchg
mov
std
mov
loope
and
outsb
hlt
dec
xor
push
dec
ficomps
insb
add
sub
arpl
mov
dec
and
mov
mov
iret
mov
into
sbb
or
adc
jns
dec
mov
aaa
leave
fldt
jecxz
enter
movsl
fs
cmp
pop
out
add
and
gs
lods
push
jbe
fadds
mov
dec
stc
push
aam
rcl
dec
push
fld
pop
std
or
andb
js
jbe
and
cmp
pop
je
call
movb
out
cmp
jnp,pn
mov
jg
movsl
cmp
xchg
ss
stos
out
adc
mov
cmp
fdivs
xor
scas
cmpsb
stos
fnstenv
cmp
mov
cmpb
pop
push
xor
push
sub
adc
into
sub
or
cmp
es
adc
and
jle
xor
xor
ljmp
and
shl
jbe
rol
sbb
pop
pop
and
insb
cmp
inc
jnp
test
fistpll
std
enter
sub
out
lods
cmp
mov
mov
popa
iret
inc
inc
daa
stc
sbb
or
in
adc
daa
movsl
sbb
mov
dec
push
add
sbb
out
repz
cmpsb
sbb
lock
hlt
or
xchg
fnstenv
fs
add
pop
out
shrl
adc
into
mov
xchg
push
mov
xlat
fstp
outsb
cmp
ja
decb
imul
mov
test
lods
popf
dec
cs
mov
popf
fdivrp
sub
and
pop
ja
add
stc
add
mov
add
call
jb
iret
push
mov
outsb
push
outsb
shrl
mov
xor
das
lods
adc
sbb
lea
fidivrl
int3
jo
fldl
cld
ljmp
cmpsl
iret
shl
bound
xchg
rcrb
pop
xchg
call
cmp
scas
adc
addr16
popf
shlb
dec
sti
sub
xchg
jg
imul
mov
xchg
or
add
xor
leave
sahf
sahf
inc
mov
sbb
cmpsb
test
hlt
rcrb
out
icebp
pcmpeqd
xlat
push
fstpt
mov
popa
sub
enter
or
jp
rclb
lods
faddl
popa
lods
sbbl
mov
push
add
inc
sahf
mov
add
insb
and
ja
insl
inc
std
xor
dec
movsl
pop
sub
jmp
adc
test
test
in
xchg
jle
pop
sub
popf
dec
cmpsl
push
das
pop
std
jae
test
mov
lret
jmp
stc
das
popa
popf
jg
or
mov
lods
xchg
es
cmp
pop
xor
add
cmp
add
sbb
and
lea
jbe
sbb
xor
repnz
mov
std
cmp
mov
xchg
and
mov
loopne
aam
mov
jp
add
je
das
sub
jg
pop
repz
mov
mov
cmp
fcomps
repz
addr16
pop
cli
add
loopne
jae
sbb
jl
arpl
cmpsb
gs
sub
jg
out
nop
jg
push
repnz
out
sbbl
push
jp
mov
stos
shll
ljmp
jo
popa
insl
lahf
cmp
jecxz
add
shrl
scas
push
push
cwtl
aad
mov
dec
push
and
gs
sbb
sub
mov
icebp
or
push
loop
jno
mov
pop
fmul
cmpsb
jecxz
mov
jecxz
pop
adc
add
or
aaa
or
mov
xchg
enter
adc
daa
lock
fcmovbe
fstpt
push
inc
int
xchg
dec
xor
push
adc
roll
mov
jl
shlb
ret
lret
fcomi
cmpsl
cmpsl
daa
push
and
out
or
inc
push
or
dec
mov
pop
and
lods
inc
clc
daa
into
or
push
or
cmp
sub
outsb
and
add
jb
lret
xor
cmp
add
nop
lret
psraw
aad
sar
mov
cli
insb
scas
sbb
add
cmp
les
cs
daa
ret
call
mov
xchg
jle
rcr
inc
jns
xchg
adc
ljmp
adcl
mov
mov
mov
and
jp
out
cmpsl
adc
pop
sbb
jb
mov
and
loope
inc
push
push
xor
push
scas
dec
out
pop
cmp
arpl
outsl
inc
insb
jne
push
scas
decb
xchg
flds
dec
les
xchg
std
jmp
das
nop
iret
add
into
or
add
mov
sub
inc
mov
lods
rcl
xchg
inc
sbb
xchg
decl
out
cmp
out
sub
xchg
or
addb
aas
dec
inc
add
mov
stc
or
cmp
sbb
pusha
sbb
push
ret
das
dec
shl
cld
dec
jbe
cmp
je
loopne
dec
mov
inc
push
out
jbe
in
pop
push
shl
pop
daa
clc
pop
or
ja
push
or
loope
bound
stc
aam
mov
pop
push
mov
adc
pop
or
addb
inc
popa
movsb
jle
outsb
xchg
in
int
sbb
and
lods
lods
sub
gs
imul
shlb
enter
enter
fcoml
lahf
sbbl
dec
jl
push
addr16
lods
rcll
bound
popa
shrb
jl
movsb
scas
mov
ds
sub
mov
push
jl
or
xor
test
scas
adc
int3
pop
hlt
mov
data16
push
dec
repz
fistpl
arpl
sbb
mov
jne,pn
test
cld
xor
jg
push
sarl
jno
mov
subb
cmpsl
cltd
jbe
mov
dec
ret
lods
and
sbb
imul
pop
inc
and
jo
ror
dec
mov
ret
int
addb
sbb
iret
jmp
and
add
sub
mov
mov
xor
push
lock
xor
xchg
sub
or
lods
cmp
cmp
fdivrl
sbb
pop
cmpsl
pop
mov
and
cmp
xor
loop
mov
inc
aas
fisubl
adc
or
pop
mov
shrb
cli
in
xchg
loopne
inc
in
aam
push
or
mov
lods
cmpsb
fdivrs
imul
fdivs
cmp
push
push
inc
shrb
cmp
out
jae
addr16
cmp
mov
movsb
add
clc
and
jle
cmc
dec
mov
push
ds
dec
aam
lret
enter
gs
pop
lahf
mov
xor
aas
ja
adc
dec
notl
mov
pop
push
lea
and
inc
pop
jne
lock
xlat
addr16
aas
mov
jl
and
lea
lret
idivl
mov
mov
lods
in
rcrl
cli
rcll
dec
inc
jl
push
cwtl
lea
test
mov
stos
cmp
int
ljmp
cmp
inc
sub
ret
mov
sbb
scas
fisubrl
ret
popa
pop
leave
push
push
mov
xorl
addl
push
mov
dec
bound
pop
hlt
popf
xchg
repnz
adc
popf
mov
dec
ja
rolb
pop
push
hlt
shlb
cwtl
sti
int3
outsl
imul
loopne
pop
ljmp
movsb
ficoms
pop
mov
push
neg
dec
mov
xchg
outsb
dec
pop
jb
sub
xchg
mov
xor
pop
and
stos
fcomps
notb
jne
addl
or
fisubrl
imul
test
std
dec
fsubrs
pop
xor
push
jns
jmp
clc
push
cmp
or
push
imul
cli
mov
dec
xor
adc
and
aas
pop
inc
dec
add
push
adc
jmp
jmp
sbb
xor
scas
in
jg
add
mov
aam
lds
jp
int3
das
imul
in
dec
pop
ja
jle
jmp
jne
hlt
pop
mov
mov
notb
pop
call
lcall
lock
inc
arpl
jno
dec
sbb
filds
testb
xor
sarl
push
jge
cmp
jg
out
popf
loopne
mov
das
xchg
aad
or
int3
jg
pop
push
pop
jne
mov
jg
leave
mov
push
ss
sbb
push
cmp
jnp
lods
jnp
jae
jle
test
aad
ja
and
xchg
lret
test
dec
pop
sti
jbe
sub
xor
js
stos
inc
mov
sub
cli
enter
es
xlat
loop
loop
mov
out
into
sbb
rol
addr16
fimull
int
and
dec
or
iret
mov
inc
jo
setnp
fisubrl
push
adc
add
mull
sub
xor
cmpsb
inc
dec
rclb
lea
mov
mov
pop
enter
fwait
in
cmp
push
pop
lds
sub
test
mov
mov
dec
inc
out
mov
or
add
shrl
pop
inc
mov
inc
inc
mov
dec
jns
sub
fwait
inc
divl
inc
pop
adc
sub
addl
lahf
mov
pop
pusha
push
inc
movq
rcll
add
inc
push
or
cltd
ret
or
mov
in
sti
mov
xchg
pop
mov
subl
push
nop
sti
mov
leave
hlt
xlat
cmc
dec
push
add
and
outsb
aaa
push
ljmp
or
mov
pop
dec
stos
pusha
pushl
mov
mov
sub
xchg
popa
dec
sub
xchg
push
out
test
sub
stos
cmpxchg8b
enter
repz
pop
xchg
repnz
xchg
dec
xor
adcb
aad
mov
dec
or
adc
inc
add
add
sub
faddp
and
dec
gs
sahf
pop
dec
inc
cmp
mov
xchg
jbe
stc
sbb
adc
dec
adc
and
sarl
lahf
mov
fnsetpm(287
jmp
or
pop
mov
pop
mov
nop
lods
inc
data16
stos
lahf
pushf
int
push
enter
clc
gs
lret
movsl
jl
ljmp
lret
cmc
mov
bound
mov
jmp
adc
pop
xchg
outsl
mov
xchg
ds
out
pusha
fsts
lods
pop
fcmovb
fwait
js
std
sbb
pop
dec
adc
repz
pop
scas
popa
xchg
scas
test
jl
cmp
mov
mov
jo
inc
jle
push
ret
mov
arpl
adc
mov
mov
inc
pop
push
mov
repnz
pushf
xchg
xchg
add
push
hlt
push
cld
xor
cmp
into
ret
popf
push
test
adc
lea
sbb
add
or
mov
jo
mov
mov
jb
pop
in
stc
pop
or
mov
imul
ja
aas
add
or
repnz
mov
insb
mov
shll
std
enter
leave
es
inc
int3
test
adc
mov
pop
fwait
push
jns
jnp
fidivs
mov
inc
bnd
mov
js
mov
into
sbb
mov
jl
mov
shr
dec
and
in
xor
xchg
adcb
xor
je
sub
call
loop
jp
ret
aas
pop
mov
divl
ret
mov
sbb
loope
je
xchg
pop
lea
dec
cld
mov
push
push
cmp
mov
lock
mov
pop
js,pt
in
ja
sub
sbb
sbb
lock
fucomp
popf
aaa
adc
lahf
push
adcl
data16
xchg
into
add
adc
and
das
xchg
std
inc
mov
sbb
pop
insb
in
mov
aam
xor
hlt
pop
mov
add
fldt
xlat
pop
dec
inc
xchg
adcb
out
aad
fidivrs
inc
iret
and
dec
push
rorb
cmp
adc
sbbb
pop
imul
shrl
jns
lret
and
ja
mov
sub
es
or
mov
jne
cmp
cld
pop
and
inc
or
xor
mov
fwait
push
sub
xor
mov
movsb
pop
mov
lods
sbb
into
aas
mov
lret
xor
pop
out
adc
lret
pop
mov
xchg
inc
jbe
int
adcl
adc
inc
xchg
lahf
mov
dec
ljmp
mov
in
ficomps
int3
out
sub
aad
hlt
in
jl
push
add
lcall
scas
pop
dec
jno
adc
arpl
neg
mov
adc
push
scas
pop
inc
lret
sub
jge
add
pushf
sbb
stos
xchg
shlb
stos
xchg
pop
pop
lds
repz
pusha
repnz
loop
push
mov
sub
add
xchg
pop
xchg
arpl
pop
loope
mov
aas
mov
mov
push
add
lock
xor
orl
shl
mov
lret
in
adc
jnp
sbb
lret
fwait
cld
pusha
mov
xlat
and
loopne
enter
and
js
movsb
sbb
adc
lret
in
jl
mov
test
fwait
sbb
lods
test
pop
sub
addr16
adc
inc
std
xor
or
leave
dec
lea
jp
fists
lods
dec
sbb
inc
cmp
fsubrp
jge
xor
int3
jae
dec
or
mov
scas
xchg
ja
sub
lods
adc
sub
std
fisubs
mov
out
mov
or
xchg
adc
fstpt
scas
fsubl
and
cs
add
shll
jne
pop
inc
xor
dec
aad
sub
or
or
and
mov
jno
mov
add
xor
inc
iret
sbb
shr
shl
je
js
pop
mov
jmp
jmp
jae
loope
push
pop
jle
cmpsl
sub
out
cltd
xlat
sub
add
stc
pop
xchg
lcall
call
lods
mov
mov
xor
loopne
jo
mov
movsb
add
bound
mov
cmp
ficoml
insl
cmp
in
fsubl
dec
scas
lds
pop
out
and
or
mov
aad
sti
ljmp
push
sbb
inc
add
nop
and
xchg
inc
mov
aad
mov
clc
pop
lods
inc
in
in
cwtl
faddp
inc
das
ret
xor
leave
fs
sahf
sarb
sbb
insb
jmp
mov
jae
dec
scas
push
fwait
ds
adc
inc
and
or
push
mov
cli
fcoml
xchg
es
test
mov
int3
dec
rol
bound
mov
sbb
aad
rcll
repz
std
insb
lock
sbb
jmp
daa
dec
xchg
jg
aas
jne
add
outsb
pop
xor
shl
into
inc
push
xchg
shrl
mov
jge
xor
mov
outsb
scas
sub
test
adc
jo
repnz
in
popf
cli
inc
sub
or
ja
lret
cli
cmp
stos
mov
mov
mov
or
lahf
sbb
mov
insb
xchg
and
or
into
dec
inc
jecxz
fwait
xchg
addb
sti
mov
push
push
and
out
test
lds
loope
pop
cmp
or
adc
stc
imul
cmp
sub
test
jle
mov
pushf
pop
iret
in
push
dec
frstor
xor
mov
xchg
jnp
ds
dec
adcb
dec
sbb
cmpsb
mov
fcmovnb
scas
inc
pop
xor
mov
pop
insl
loop
push
pop
dec
sbb
jg
popa
push
inc
cmp
mov
adc
push
cmp
test
or
mov
in
sarl
adc
mov
ss
test
dec
cmp
stos
sub
loope
mov
fcomps
xchg
and
lret
lea
shl
cmp
push
cmc
roll
mov
mov
inc
jb
sbb
mov
test
mov
pop
push
push
or
or
xor
jle
sbb
rcr
jecxz
lahf
or
mov
lods
add
enter
cmp
data16
cmp
sbb
mov
pop
add
insl
sbb
cmp
jns
fwait
test
aas
mov
iret
sub
mov
lods
cmp
fldl
mov
xor
neg
test
int
jecxz
xchg
sub
adc
icebp
adc
xor
mov
mov
rcr
lods
and
sub
push
lods
pop
add
xor
xor
sub
mov
mov
cwtl
xrelease
pop
icebp
das
iret
js
and
mov
scas
sbb
mov
jle
int
outsb
push
stos
test
adc
int
cmp
imul
dec
fisubrl
push
xor
push
popa
cmpsb
push
sbb
out
cmp
cmpsb
or
sarl
int
ficoms
sbb
nop
jbe
add
add
jle
fwait
mov
push
scas
inc
jb
xchg
std
pop
fstpl
pop
fs
fcoml
cmp
je
mul
out
js
test
movsl
xchg
lock
inc
xchg
hlt
mov
xor
jbe
insl
loop
movsl
icebp
dec
sbbl
ljmp
das
stos
dec
mov
push
jmp
xorb
pop
les
adc
pop
inc
out
lret
mov
mov
mov
xor
scas
cmp
xchg
inc
cmp
pop
jb
stc
lods
dec
inc
adc
arpl
mov
repz
ficoms
xchg
repz
cwtl
sbb
adcl
lods
faddl
sbb
data16
pop
or
fisubl
popa
in
mov
pop
push
xchg
cmp
popf
xchg
xchg
push
fildll
std
cmp
jecxz
xor
mov
cmp
sbb
adc
popa
imul
repz
xor
ljmp
xor
dec
jnp
xor
inc
imul
fisttpll
dec
pop
cmp
inc
inc
out
stos
out
inc
rcl
movsl
rcll
mov
in
jge
cld
inc
shlb
fidivrl
cmp
dec
leave
imul
jnp
sarb
pop
push
je
jp
dec
inc
push
jmp
je
inc
mov
aas
pushf
cmpsl
out
mov
movl
aas
add
dec
in
or
inc
out
pop
inc
cmp
mov
pop
into
int
shlb
adc
mov
out
mov
add
out
iret
je
addr16
pop
xor
adc
sub
call
outsl
xchg
clc
mov
pusha
shrl
push
mov
xchg
mov
aad
es
ret
jns
das
sahf
mov
ss
mov
pop
mov
sbb
or
aad
sub
cmp
pop
or
repnz
dec
sbb
cmpsb
lds
mov
lret
xchg
inc
testl
stos
ja
xor
lret
in
lret
das
lock
push
lock
fldenv
dec
lcall
or
add
jecxz
ret
mov
sbb
ret
js
mov
clc
jmp
pop
lahf
pop
sbb
sbb
xor
sbb
inc
cmpsl
ret
shlb
lea
call
and
add
lahf
cmp
push
das
repz
inc
icebp
mov
jae
push
and
adc
addr16
mov
sub
jo
cmp
fdivrs
push
sbb
loopne
mov
and
insb
jecxz
mov
mov
sub
add
mov
lock
and
enter
jle
dec
cmp
scas
jnp
idivb
cmp
mov
mov
fnsave
cli
dec
xchg
enter
fildl
icebp
rclb
adc
mov
sbb
xor
pushf
adc
ljmp
mov
inc
or
repz
and
xor
imull
pushl
pusha
cmp
stos
sarb
mov
adc
popa
mov
pop
andl
and
mov
jge
cmc
sub
ret
std
je
dec
and
nop
xor
inc
movsb
mov
pop
lea
or
mov
cmp
push
popf
ja
sub
mov
mov
and
popf
or
sub
sbb
popa
sbb
filds
push
jne
daa
and
cltd
pop
ds
sub
mov
outsb
dec
jecxz
xchg
or
and
test
or
shl
jae
add
lret
daa
loopne
lods
faddl
daa
jne
or
es
jecxz
or
jge
mov
rcrb
jg
jp
inc
dec
dec
or
shll
enter
xor
jg
ljmp
dec
lcall
out
jle
xchg
aad
inc
pop
mov
jae
lods
jns
fdivrp
ja
push
jbe
cmp
arpl
out
jle
ljmp
mov
insl
dec
insl
repz
roll
lods
bound
test
ret
inc
pop
fnstenv
sahf
dec
std
jp
call
insl
mov
lock
fs
loope
pop
repnz
pop
stc
sbb
sub
push
outsl
call
pop
addr16
cmp
pop
fimull
cmp
rorb
mov
daa
sub
shll
jmp
scas
push
jmp
mov
hlt
rcrl
fildl
dec
loopne
push
enter
in
in
mov
call
sbb
jecxz
out
lods
pop
jle
inc
cmc
lds
and
gs
ja
arpl
xlat
mov
mov
ja
sbb
xor
ret
in
loope
fsubrs
subl
hlt
loopne
scas
int3
adc
fistl
pushl
or
push
xlat
mov
addb
iret
mov
cmp
jno
fisttps
push
pop
hlt
mov
ds
pop
adc
sbb
mov
push
mov
pop
xchg
pavgw
push
fildll
mov
cmpsb
imul
sarl
inc
sbb
lds
mov
int
and
cmp
cmp
cmc
xchg
xor
inc
popa
lcall
fwait
adc
jmp
jg
imul
push
ljmp
sub
fs
gs
mov
jmp
mov
adc
jno
jl
je
dec
xchg
stos
out
lds
sti
lods
icebp
shlb
cmp
popa
mov
and
idivb
sbb
inc
cmp
mov
xchg
sbb
into
ret
rcll
or
cmp
cwtl
pusha
cmp
movsl
mov
enter
or
sub
cmpsl
mov
fistl
xchg
mov
mov
inc
jb
xlat
lcall
lods
xchg
xchg
ret
and
push
sub
cmpsl
pop
add
aad
cmc
dec
repz
aad
sbb
bound
ljmp
pop
adc
xor
into
xorb
mov
sbb
gs
mov
shrb
xchg
mov
jle
and
scas
dec
jb
scas
das
mov
pop
sbb
scas
leave
inc
pop
dec
lret
mov
push
mov
xor
or
out
cmp
divb
ljmp
mov
jb
ja
add
add
dec
pop
js
cmpsb
push
rcrl
xchg
add
in
push
divl
iret
jae
pop
cmp
daa
push
adc
xlat
notb
andl
push
std
and
cmpsb
bound
xchg
mov
xchg
push
pop
out
xor
aaa
and
push
mov
out
repz
xor
push
outsb
mov
adc
repnz
test
pop
mov
dec
loope
mov
inc
mov
pop
jne
pop
mov
jl
outsb
add
lcall
jp
arpl
dec
aas
scas
mov
call
xchg
mov
nop
pop
xchg
push
fisttps
add
xor
negb
daa
mov
cmc
mov
add
xchg
xchg
push
mov
orb
fwait
or
jne
mov
dec
cltd
cmc
repz
in
push
xchg
pop
fisubrs
xchg
push
pop
popf
mov
fstps
jecxz
mov
je
in
pushf
aas
push
push
aaa
lahf
mov
lcall
loop
jb
cmp
lods
cmp
push
stos
jge
ret
add
cmp
and
add
sbb
and
pop
jp
test
jl
das
fmuls
xchg
subb
imul
cld
pop
cmp
cwtl
mov
mov
dec
cmp
lret
pop
or
push
fldt
jl
mov
xchg
xchg
insb
mov
inc
cmp
adc
mov
in
lret
es
fnstenv
ljmp
or
stos
jle
in
jecxz
jle
add
aam
add
sub
int3
movsl
mov
push
mov
sbb
pop
shlb
sarl
iret
cmp
mov
gs
push
mov
jge
jae
lahf
and
mov
lock
icebp
xor
ret
xchg
mov
stos
add
jns
test
mov
test
imul
outsl
out
shrb
fimull
mov
mull
shll
loopne
sbb
arpl
js
popf
dec
insl
mov
data16
movsl
jp
add
test
push
dec
and
out
pop
iret
mov
cmp
push
mov
push
lret
push
or
push
mov
cmp
sbb
jge
mov
pop
sub
rcrl
cmp
jge
clc
jle
stos
mov
push
add
adc
mov
and
leave
ret
in
dec
adc
xor
or
out
xor
xchg
addb
and
sahf
pop
pop
inc
into
in
and
imul
inc
hlt
icebp
push
icebp
mov
or
jo
fs
stc
loopne
jne
stc
jl
mov
inc
xlat
js
xchg
jnp
cmp
rolb
sbb
push
ljmp
lea
mov
popa
xlat
xor
mov
les
repz
shlb
or
pop
add
xlat
loop
and
cld
shrl
aaa
dec
frstor
in
lgs
sbb
fistpll
xchg
cmp
mov
int
jmp
pop
mov
xchg
clc
push
sbb
and
mov
fwait
loopne
jle
lret
fcomps
out
pop
test
xchg
sar
inc
out
or
pop
jg
popl
and
push
jp,pt
sarl
xor
outsl
incl
and
addr16
rcrl
mov
inc
cmp
sub
pushf
sbb
rorl
pop
cmp
push
cli
loopne
ja
divl
les
cmp
mull
popf
in
lret
andb
mov
push
dec
arpl
gs
mov
mov
in
test
shll
lock
das
push
int3
fwait
cmpb
gs
xor
add
adc
je
or
push
fwait
imul
cmp
adc
in
pop
xchg
lods
cmp
mov
dec
nop
and
mov
jp
push
fwait
ds
dec
testb
mov
dec
aam
call
mov
mov
xor
push
aaa
and
sub
mov
mov
out
outsl
and
repz
aam
dec
or
in
stc
add
fldenv
xor
push
mov
mov
lock
mov
sub
pop
shll
jg
xor
sub
sbb
rolb
mov
jns
jns
add
test
shll
ja
mov
movsb
daa
mov
jecxz
jp
sti
or
adc
mov
mov
scas
jle
jnp
fistpl
cmp
jnp,pt
pop
push
xchg
inc
mov
push
add
mov
cli
scas
sarl
pusha
xor
jne
sbb
lret
cmpsb
mov
aam
cmpsb
mov
xor
xchg
repnz
mov
enter
pop
ds
sbb
cs
and
xchg
lret
jns
enter
ja
pop
stc
cld
mov
mov
int3
sti
test
movsb
jmp
jb
xchg
sbb
add
pop
mov
and
jns
mov
in
or
xlat
popl
repnz
xor
aaa
sub
loop
and
fmull
pushf
in
lret
jne
in
fsubrs
in
add
add
fisttps
scas
mov
sarb
icebp
movsb
sbb
jae
shrb
rolb
pusha
pop
cmc
cmp
psrad
mov
push
mov
mov
repz
sahf
cltd
mov
fmuls
fwait
es
mov
push
and
std
mov
jp
push
pushf
fs
int3
mov
adc
mov
shll
sub
jns
scas
bound
fstps
imul
nop
add
mov
adc
adc
lret
push
add
mov
mov
sbb
and
outsb
movsb
je
cli
pop
outsl
outsl
ds
aaa
add
push
dec
pop
loopne
add
arpl
outsl
xorl
lods
ja
cmp
pop
pop
les
cltd
mov
out
leave
test
dec
cltd
in
and
mov
or
mov
inc
adc
add
in
mov
insb
sub
sbb
pop
jecxz
nop
pushf
dec
imul
or
push
or
pop
xor
addr16
adc
add
addr16
mov
mov
lock
test
dec
scas
mov
mov
mov
or
sbbl
mov
push
and
mov
cltd
daa
cs
test
fwait
inc
mov
dec
sbb
mov
ret
call
lea
pop
add
rcrb
movsb
jne
shl
ljmp
push
gs
lcall
cmpsb
sarb
adc
call
repz
pop
sbb
iret
cmp
cmp
cmc
sub
inc
scas
jnp
mov
dec
mov
rclb
dec
sbb
cli
iret
push
or
inc
fwait
test
mov
outsl
mov
sbb
fiaddl
add
cmp
mov
dec
sub
mov
sbb
out
arpl
xchg
and
add
cmp
adcb
adc
pop
scas
xor
and
or
ret
mov
leave
je
xchg
out
into
stos
sbb
daa
and
and
dec
daa
push
je
xor
jns
bswap
andl
adc
push
fbstp
mov
sub
mov
inc
idivl
jg
pop
insb
fstl
pop
push
out
ja
pop
in
ds
mov
mov
inc
xchg
jge
and
xchg
lock
leave
mov
loop
cmp
repnz
or
cltd
cmpsb
cmp
jecxz
test
mov
cmp
add
dec
pop
testl
sub
sub
call
fs
test
dec
ja
out
jle
xchg
fcmovb
push
rcll
loope
enter
jge
jge
or
dec
lock
test
fwait
idivl
ss
shl
das
ror
fsubs
jo
lcall
cmp
insl
call
ljmp
xchg
leave
xchg
mov
mov
jge
in
xchg
arpl
add
sbb
add
mov
mov
fstl
push
data16
pop
or
lcall
inc
iret
jmp
cmpsl
jne
mov
scas
lods
push
jns
push
jg
cmpsl
test
jnp
xchg
loope
enter
jne
xchg
jne
jmp
loope
sub
dec
insl
shll
adc
andl
push
pop
jmp
xchg
and
rclb
in
mov
arpl
jbe
lds
out
dec
add
les
stc
movsl
nop
in
lds
insb
push
sub
movsl
xchg
fistpl
inc
sahf
mov
fldcw
or
ret
sub
sbb
push
ss
or
cmp
and
addr16
sar
dec
insl
outsb
jmp
xchg
inc
xchg
push
add
or
adc
aas
sbb
jno
icebp
xchg
es
loope
and
psrad
jne
push
inc
fldt
es
aam
popf
insb
or
jge
jle
push
jp
call
je
jnp
adc
loopne
push
out
xor
cmp
les
imul
cmpsl
fmull
jge
mov
out
mov
mov
ret
xor
sub
bnd
pop
jbe
dec
fldenv
pusha
addr16
lahf
inc
jae
std
pop
cld
jns
rorb
mov
dec
adc
ret
ret
xor
mov
dec
ret
imul
lds
addb
bound
xor
dec
sbb
js
mov
jg
loope
cmc
repz
fdiv
add
inc
pop
bswap
pop
ret
mov
add
xchg
adc
fs
jbe
test
jl
cmc
mov
add
clc
mull
and
sub
pusha
test
mov
dec
cmpsb
je
bound
iret
sbb
adc
add
repnz
push
adcl
mov
push
jb
mov
ret
orb
jl
nop
inc
push
sbb
test
mov
jp
adc
adc
cmpsl
clc
stos
fsubl
jg
test
mov
repz
xor
xor
fwait
hlt
in
inc
add
ds
mov
cmp
insl
mov
adc
fsubs
cmpb
in
jl
loope
rorb
es
push
rclb
jo
mov
or
cmp
insb
pusha
adc
xchg
push
xchg
fisubrl
into
cmp
lret
and
mov
jns
add
push
cmc
cmp
push
imul
xor
xor
xor
inc
pop
mov
xchg
fadds
mov
repnz
sub
push
adc
aaa
daa
add
adc
xchg
xchg
lea
mov
mov
adc
sub
out
mov
push
out
and
xchg
inc
push
cli
lods
lret
xor
adcb
leave
sub
lahf
je
enter
repz
movsl
decb
outsb
movl
jecxz
adc
enter
sub
xor
lods
ret
add
lods
push
inc
jno
cld
lret
cmp
jp
fdivrl
mov
cwtl
in
mov
sbb
mov
popf
dec
loop
xor
das
cmp
outsl
or
xor
test
dec
xchg
pop
lcall
pop
frstor
push
das
add
jg
sbb
fdivl
xor
or
dec
and
sub
and
mov
jg
ja
inc
lret
fs
push
mov
push
jbe
lds
fisttps
icebp
das
sahf
mov
mov
mov
das
and
outsl
jp
xchg
cmp
sub
xor
mov
cmp
mov
pop
fs
subb
andb
orl
sub
xor
enter
pop
lahf
xchg
ss
pop
aas
inc
push
out
cmc
dec
xor
xchg
jge
cmp
stos
cs
jno
cmp
mov
xchg
fsubrl
push
fisubs
pop
in
fsubl
cmp
adc
repz
pop
int
aaa
add
cmpsl
bound
fisubrs
sub
mov
sbb
and
movsb
movsb
std
pop
in
movsl
cmp
rolb
in
push
out
inc
inc
inc
mov
js
mul
iret
xchg
adc
aam
in
adc
sub
std
nop
ror
push
dec
sbb
mov
cmp
jg
mov
arpl
mov
pushf
pop
mov
stc
push
idivb
ret
inc
xchg
mov
fimuls
xor
ret
inc
pop
sub
jmp
inc
sbb
lret
add
cltd
ret
pop
movsl
lcall
lods
leave
es
imul
in
push
fistps
add
shld
sbb
jmp
xor
scas
dec
mov
mov
movsb
outsl
mov
lods
ret
jbe
or
jmp
add
cmp
mulb
je
fldl
lods
inc
cld
lahf
push
cli
mov
scas
fldcw
or
pop
and
sar
mov
mov
je
out
add
mov
pop
jae
sbb
sbb
push
ljmp
pop
jp
push
rol
push
loop
push
inc
adc
mov
stos
pop
stos
mov
push
inc
jns
into
push
out
mov
jmp
xchg
mov
in
lret
sbb
adc
mov
mov
push
popa
inc
jne
mov
insb
cmp
in
lods
and
push
cld
jle
sub
and
dec
stc
mov
inc
fimuls
jecxz
dec
jbe
test
xchg
clc
lods
mov
jle
lret
shrb
xchg
ds
outsb
jb
adcb
insl
jl
or
cmp
jne
push
lret
adcl
decb
sbb
filds
clc
test
leave
and
mov
nop
mov
cmp
dec
mov
xchg
cmpsb
push
test
les
xchg
cmpsb
cmp
sub
movsb
test
adc
bound
loopne
add
jbe
add
sub
fld
add
pop
pop
push
mov
or
test
andw
xchg
mov
adc
in
jae
adc
pop
mov
call
mov
out
inc
jb
inc
add
repnz
test
clc
cmpsb
jmp
xlat
std
movsl
popa
cs
pop
fwait
das
pusha
and
js
push
mov
or
inc
into
push
push
mov
adc
push
jecxz
add
or
jne
fimull
sub
mov
cmp
je
mull
mov
loop
popf
test
mov
inc
js
stos
mov
cs
push
cmp
or
pop
int3
clc
cltd
mov
and
arpl
jae
pop
ror
in
jmp
mov
lret
adcb
xchg
adc
out
movsb
lahf
jne
into
jbe
daa
mov
add
mov
add
call
shrl
ret
adc
out
ss
inc
arpl
and
hlt
addr16
repnz
movsb
sub
repz
arpl
pusha
pushf
not
cmp
in
add
jecxz
xor
stos
add
jno
xchg
inc
mov
xor
adc
push
fiadds
mov
out
pop
adc
daa
dec
lahf
cmpsl
sbb
jle
jae
mov
call
idivb
loope
cmp
jae
or
shll
cmp
fmuls
add
arpl
ret
inc
push
sbb
in
dec
aas
pop
js
stos
into
fsub
insb
clc
je
int3
jecxz
push
mov
repz
rcrl
sub
jb
mov
aaa
pusha
iret
aam
push
pop
jmp
lahf
rcrb
ficomps
aas
or
or
cmc
pop
xor
mov
in
dec
xlat
pusha
movsb
stos
ds
scas
cwtl
mov
pop
inc
inc
dec
and
outsb
push
fs
fs
sub
or
jg
inc
mov
jle
cmp
cmp
and
test
pop
cmpsl
repnz
mov
fldl2t
ss
inc
sub
outsl
push
arpl
movsl
repz
lret
inc
popw
lcall
rcll
inc
repz
sub
cmp
add
push
stos
in
jecxz
inc
dec
rcrb
pop
xchg
push
scas
xchg
xchg
jmp
add
stos
xchg
jge
add
inc
push
adc
daa
mov
mov
push
loopne
cmp
jae
jmp
adc
or
in
or
inc
jno
pusha
or
jg
iret
xchg
fs
fwait
jl
sbb
fcoms
mov
jg
push
insl
push
adc
mov
mov
mov
dec
test
dec
lea
enter
hlt
jl
lods
pop
popa
jl
xchg
mov
aaa
pop
ss
movsl
mov
mov
sbb
push
push
hlt
shlb
mov
push
mov
rolb
rep
or
fmuls
std
push
inc
fisubs
mov
lcall
imul
mov
je
aad
lret
mov
ja
cli
mov
push
push
subl
pop
es
sbb
jae
pushf
cmpsl
xor
int
ficompl
test
jp
imul
push
jmp
jge
sub
jns
mov
int
sbb
stos
adc
popf
inc
xor
xchg
mov
xor
jb
and
and
daa
stos
lahf
cmpsl
xchg
pop
sub
fwait
xchg
sbb
jne
hlt
mov
adc
mov
mov
out
lock
add
adc
and
pop
mov
lds
cmc
push
inc
cli
rorb
sbb
jge
outsl
stos
xor
test
jle
pop
cmp
into
push
faddl
fstl
mov
fidivrs
cmpsb
bound
ds
fwait
mov
cmp
xlat
mov
xchg
push
pop
ret
jmp
xor
jnp
out
insl
lods
in
or
push
stc
add
mov
test
int
xlat
fdivrl
push
cltd
mov
push
cltd
push
sbb
fimull
inc
mov
sbb
leave
je
clc
jmp
imul
inc
test
cmp
pop
lcall
cmp
out
add
xchg
dec
mov
cmpsl
repz
mov
xor
xor
lret
fbstp
or
jl
mov
mov
pop
test
xor
mov
push
or
lock
js
pusha
gs
stc
int
xchg
pop
lahf
lret
daa
outsl
in
xor
das
mov
adc
inc
rcl
add
cmp
jns
mov
add
je
les
cmp
pop
or
mov
cltd
arpl
jg
mov
push
leave
lcall
add
dec
outsl
mov
cld
push
and
repnz
adc
sarb
sti
or
xchg
pop
movsl
cmp
jge
lods
push
sbb
xorb
ss
cld
mov
xor
dec
add
adc
mov
cmp
int
mov
nop
aaa
lret
dec
jg
mov
mov
arpl
dec
cs
and
push
fistpll
sub
fbstp
adc
mov
mov
mov
in
push
je
mov
xlat
xlat
jg
sbb
shl
jb
ret
xchg
mov
daa
sbb
adc
stos
inc
popf
mov
mov
inc
sbb
mov
ret
add
xchg
cmpsl
mov
jae
mov
xor
testl
cmp
in
in
jne
aam
pop
lea
aam
cmp
fsubrl
or
test
f2xm1
pop
test
sbb
mov
sbb
lods
dec
aam
outsb
inc
jle
adcb
xor
jecxz
add
shl
or
dec
jb
arpl
dec
loope
jp
sub
out
xchg
int
pop
nop
xchg
in
in
jg
into
lock
and
mov
leave
in
cmp
sahf
fs
cld
push
sbb
and
fadd
xlat
pop
das
repnz
inc
in
and
jmp
mov
dec
cmp
inc
cmp
xor
cmp
mov
cmp
add
push
stc
jmp
mov
mov
pop
xor
cwtl
mov
jle
or
outsl
negb
cmp
inc
sub
pop
push
icebp
inc
sub
mov
sarl
inc
mov
pop
nop
cmpl
js
clc
push
xchg
cltd
cmpl
ret
jns
out
add
sbb
cmp
fdivp
cmp
aad
dec
sti
inc
into
repz
push
add
sub
xor
cltd
popf
pcmpeqb
pop
subb
sub
addr16
xchg
scas
inc
hlt
sbb
jmp
sub
ffreep
pop
xlat
shrb
mov
dec
enter
aad
mov
cwtl
cmp
js
test
fimuls
addl
cmp
movb
xor
repz
imul
or
sahf
cmp
nop
push
scas
cmp
fs
cmpsb
test
pop
sbb
adc
cmp
jecxz
sub
inc
jmp
test
leave
in
dec
sub
mov
fsubrs
mov
out
ret
jmp
jbe
adc
jle
cmp
out
push
pop
ja
js
int
movsl
out
or
pop
test
cmp
jnp
fidivrs
add
ss
icebp
clc
sbb
cmp
mov
mov
test
xor
mov
mov
and
xchg
das
cli
cmpb
lods
cld
push
and
push
cmpsl
lcall
xor
insl
lock
push
sub
jecxz
movsb
mov
ljmp
jno
adc
lea
stos
stos
jae
ficoml
fisubrl
jge
les
push
xchg
add
lea
add
dec
jmp
and
sar
push
in
jo
lahf
pop
mov
cmp
addr16
les
mov
ds
sbb
mov
dec
jbe
mov
xchg
xor
push
cli
fsubrl
cmp
loopne
shufps
sahf
push
sbb
int3
test
inc
mov
mov
es
dec
data16
mov
jne
pop
sub
test
adc
push
adcl
xchg
fimull
sbb
push
mov
sbbl
testb
dec
push
pop
outsl
mov
dec
and
sbb
arpl
ret
int
insb
subb
or
andl
stos
pusha
push
scas
sbb
mov
sub
in
repnz
or
cmpsl
sub
push
sub
nop
icebp
imul
jb
pop
mov
jp
xchg
mov
test
mov
mov
jp
loopne
or
adc
mov
adc
in
or
ja
jmp
hlt
mov
jns
push
fsubp
or
ljmp
leave
std
mov
ret
sti
pop
pop
jecxz
ret
dec
popa
pop
xchg
js
xchg
dec
push
repnz
stos
xchg
in
inc
sar
mov
addr16
repz
bound
jmp
pop
imul
je
and
repnz
inc
and
inc
mov
jno
dec
in
addr16
jae
aam
inc
add
jp
jns
inc
js
testl
mov
stos
sub
fsubrs
and
cmp
pop
inc
xor
lods
fistps
dec
xchg
dec
dec
arpl
mov
jle
filds
or
mov
sub
fcoml
subb
aam
imul
pop
jg
or
inc
jecxz
pop
aas
xchg
stos
xchg
push
jle
stc
hlt
and
xchg
adc
ja
faddp
jge
sbb
sahf
cltd
clc
push
and
ja
sarb
cs
out
call
push
sbb
xchg
or
sbb
es
and
add
mov
cwtl
shl
or
dec
xchg
xchg
popa
cmc
adc
and
mov
adc
enter
in
fists
lds
xchg
xchg
mov
scas
xor
push
add
aaa
mov
jae
jbe
shl
add
jbe
fsubl
pop
aam
add
test
jne
outsb
lods
vandnps
add
stos
pop
jp
pop
inc
pop
add
or
mov
loopne
sbb
or
xchg
sub
jg
lods
imull
push
mov
jbe
iret
in
dec
icebp
push
call
fcoml
mov
pop
inc
outsl
pop
sbb
in
xchg
cs
jae
xlat
jge
stc
mov
cmc
mov
imul
or
adc
jg
int
xor
pushf
daa
inc
xor
rcl
jle
ja
fdiv
dec
std
mov
cmpsb
and
add
sbb
aas
insl
ljmp
divl
mov
mul
aad
lods
test
fs
mov
mov
mov
push
repnz
pusha
stos
subb
mov
lret
leave
loop
ljmp
pusha
dec
cmpb
addr16
sbb
xor
mov
push
mov
arpl
lahf
dec
mov
xchg
loop
jb
cvtpi2ps
ss
lret
xchg
push
sbb
arpl
aaa
ss
push
and
pop
push
or
fsubl
push
or
jno
ja
adc
cmp
movsb
jbe
jmp
push
iret
fimull
pop
dec
cmpsb
jns
in
jecxz
aad
sbb
jo
cltd
mov
xchg
adc
and
aaa
sub
jge
inc
mov
mov
dec
test
push
sbb
cmp
das
or
xchg
lock
sar
test
inc
jecxz
leave
arpl
ds
or
call
fdivl
xor
test
cmp
scas
out
add
xchg
jge
fwait
sub
push
and
mov
testb
aas
jb
pop
ss
fistps
jl
mov
or
adc
insl
lds
jbe
inc
and
pop
cmpsb
jg
jbe
je
sub
lret
push
fimuls
repz
add
and
int3
dec
dec
xchg
mov
cltd
ficomps
call
adc
in
jmp
mov
and
jne
sbb
sub
xchg
mov
in
test
push
pop
xor
mov
adc
xchg
xchg
xchg
pusha
mov
jl
sub
loopne
and
jo
stos
dec
adc
ja
cmpsb
mov
mov
push
test
push
mov
cwtl
cmpsl
cmp
aam
ret
dec
jno
pop
mov
fistpl
mov
mov
daa
fisttpl
inc
and
popa
or
sbb
xchg
out
mov
rorb
add
cmc
lret
outsl
mov
lcall
mov
and
mov
in
or
push
pop
daa
ljmp
xchg
jo
and
iret
xor
cli
jbe
inc
dec
mov
adc
cmp
xchg
mov
cld
jo
pop
or
lock
xor
stc
lock
in
les
jae
scas
out
fucom
call
cmp
xchg
pushf
ret
inc
mov
inc
inc
lods
pop
add
testb
mov
mov
mov
xchg
push
in
std
sbb
pop
stc
into
pop
into
jle
jbe
cmp
fmuls
fcoms
aad
cmp
cltd
out
add
movsb
dec
mov
movsl
sub
ficomps
leave
cmpsl
repz
sbb
cld
addr16
mov
loopne
push
cmp
jno
add
mov
or
inc
push
pusha
repnz
inc
in
jl
ss
dec
jge
and
or
xchg
ja
add
xor
pop
scas
enter
adcb
les
adc
fdivl
xor
push
xchg
test
mov
xchg
jb
ljmp
fcmovu
pop
jge
adc
test
icebp
pop
and
pop
cmp
addr16
scas
xchg
dec
fimuls
iret
push
dec
cmpsl
push
adc
fidivs
lea
mov
addb
or
and
xchg
pusha
cmp
out
aam
fadds
sub
push
lock
sbb
dec
loop
fcomps
jl
sbb
cmp
rcrb
mov
dec
xchg
jae
aam
outsl
adc
xor
jecxz
inc
jno
ficoms
or
loopne
mov
fdivp
mov
sbb
inc
cmp
add
jno
push
dec
inc
cmp
add
cmp
xor
inc
inc
call
out
mov
lea
push
cltd
and
sub
and
add
push
and
fisubrl
inc
movsl
mov
push
mov
in
mov
push
dec
mov
and
mov
out
xor
cmp
sbb
movsb
push
cmp
sti
add
out
inc
das
adc
push
nop
mov
jmp
cwtl
sub
insb
mov
sub
dec
iret
clc
dec
ret
ja
mov
xchg
jb
lret
xchg
cmpb
mov
subb
imul
imul
ss
nopl
aam
les
rcll
adc
inc
cmpsb
arpl
test
dec
iret
xchg
jns
cltd
in
test
ds
mov
lret
mov
mov
jmp
xchg
and
push
mov
bound
xor
outsl
aad
push
sbbb
inc
mov
lahf
inc
jg
add
outsb
pop
stc
mov
fucomi
fisttps
out
pop
jb
daa
mov
dec
or
mov
jbe
clc
aas
dec
mov
push
orb
outsb
add
cmp
loopne
adc
hlt
cmpsl
popf
dec
fcmovnb
pop
xorl
mov
mov
push
or
popa
push
lds
cld
popl
or
push
mov
testb
mov
stos
clc
cmpsl
dec
aas
rcrb
or
idivl
scas
ret
pop
dec
mov
xchg
adc
daa
loope
push
repnz
mov
sbb
imul
lock
mov
mov
out
jp
push
or
sarl
jo
inc
aad
or
push
xor
mov
ret
mov
mov
jecxz
fs
sbb
mov
inc
repnz
xor
inc
xchg
adc
adc
ljmp
jg
das
push
push
push
xchg
leave
lock
mov
shl
out
cmp
cmpsb
xor
mov
jae
out
mov
out
jmp
mov
mov
xchg
push
lahf
jp
or
cmpsl
jno
add
mov
sbb
cmp
adc
es
jecxz
pop
sub
mov
xor
dec
pop
movsl
ficomps
pop
xor
cld
jecxz
xchg
aad
shr
jp
popf
pop
gs
xchg
mov
imul
mov
cltd
fdivr
mov
scas
data16
xchg
cmp
jmp
xchg
jns
hlt
mov
int3
dec
cmp
ret
js
cmp
out
enter
add
cmpsb
lcall
inc
dec
leave
fwait
jnp
cs
xchg
xchg
std
cmp
add
stc
or
imul
inc
mov
mov
int
or
jmp
mov
mov
lock
sbb
sarb
push
addl
lsl
es
pop
cltd
push
lods
inc
sub
imul
cmp
dec
popa
insb
fmull
inc
push
lret
es
rcll
mov
adc
sbb
test
enter
notrack
lahf
add
adc
std
sub
mov
lcall
mov
lahf
iret
sti
out
xchg
loopne
into
js
push
jae
cmp
sbb
mov
fdivl
dec
pop
push
jl
sbb
add
into
xor
push
fmul
sbb
sbb
test
sub
ds
fcmovnb
daa
mov
dec
test
jbe
jae
or
sbb
loope
mov
jb
and
xor
out
mov
jae
adc
lds
add
xchg
push
jp
sub
jmp
push
push
popf
xchg
bound
push
cs
stos
es
or
mov
test
dec
dec
fidivs
je
jge
mov
lea
and
fbld
jecxz
lods
pop
inc
leave
push
add
push
push
xchg
pop
pop
lret
sbb
pop
mov
fsubs
xchg
mov
xor
dec
mov
aas
xor
pushf
in
sar
test
inc
sub
jle
daa
dec
pop
mov
fistps
cwtl
push
mov
inc
pop
ret
dec
or
inc
loope
mov
dec
cltd
push
lea
daa
or
mov
mov
movsb
mov
jmp
loop
sbb
cmpsl
mov
leave
insl
ret
jne
aam
jnp
and
ss
inc
adc
fistpl
dec
xchg
icebp
cmp
bound
or
in
mov
xchg
lock
cwtl
xor
adc
ljmp
ds
xchg
sub
cmp
cmp
inc
inc
mov
cmp
xchg
cwtl
push
and
pop
xchg
rcl
push
test
push
mov
sarb
pop
je
inc
jne
push
xor
out
adc
jmp
add
mov
into
xchg
jnp
push
sahf
pop
out
lret
mov
loop
xchg
inc
pop
mov
ret
mov
sub
lock
ficomps
mov
dec
or
xor
imul
icebp
dec
sbb
mov
inc
insb
sub
mov
cmp
cmp
pop
pop
jne
out
or
jb
dec
xchg
lcall
inc
js
cmpsl
test
dec
mov
mulb
arpl
cmp
arpl
sahf
in
loop
xchg
mov
sahf
test
jo
sub
jg
adc
or
push
lods
icebp
adc
in
out
lea
mov
cli
mov
pop
pusha
std
inc
aad
sub
sbb
and
push
addl
pop
jns
sbb
inc
jp
int
aas
test
clc
push
pop
or
int
sub
push
je
insb
outsb
test
mov
cmp
dec
in
and
adc
int3
hlt
sub
dec
scas
movsb
sub
sub
sbb
cmpsl
xor
jno
cmp
and
iret
into
lahf
cmp
pushf
pop
rcl
loopne
cmp
ror
out
pop
lcall
sbb
push
clc
shrl
movb
jle
into
and
xchg
cmp
fwait
xchg
or
xor
addr16
mov
fiaddl
fists
fistps
jmp
movsb
ss
add
and
jmp
sub
and
lds
pop
adc
mov
mov
fwait
sbb
fists
into
jns
hlt
cmpsl
mov
scas
popf
xchg
jp
mov
pop
cld
out
pop
mov
clc
das
aad
pop
jge
out
loop
xlat
or
shr
fldl
push
imul
cmc
inc
ljmp
and
jno
pop
rcll
pop
ficoms
enter
push
push
cmpsb
adc
clc
repnz
xchg
ja
adc
push
ret
mov
outsb
test
xchg
daa
xchg
mov
rcll
leave
testl
in
dec
mov
xchg
mov
insb
sbb
push
and
imul
cmp
movsb
test
subl
ror
aaa
push
pop
mov
jb
adc
mov
mov
xchg
or
call
or
in
aas
loop
imul
xchg
sahf
xchg
mov
addr16
scas
lods
jmp
stos
pop
push
pop
cmp
mov
popa
mov
mov
add
push
in
cld
aaa
sti
test
fucomp
cmp
sbbb
lret
xchg
dec
jnp
pop
push
loope
imul
scas
daa
add
xchg
in
lock
or
fmul
inc
imul
rcrb
es
insb
dec
std
jnp,pn
stos
xlat
jo
lret
push
pop
lea
sbb
and
shlb
and
iret
iret
fs
or
xor
pushf
add
sub
xor
popa
inc
fwait
lds
leave
xorb
test
rolb
lea
push
mov
xchg
faddl
sbb
xor
loop
xor
insl
outsb
pop
popa
sub
sbb
mov
sahf
test
push
mov
inc
sbb
sahf
je
jae
loopne
xchg
out
and
enter
lods
push
cmp
nop
mov
xor
jg
cmpsb
lret
push
test
xor
cmpsl
cmpsb
in
lods
sahf
movsb
and
cmpsl
icebp
fidivs
xchg
inc
jp
loop
xadd
aaa
dec
aad
int
mov
hlt
or
xchg
mov
sub
lcall
es
dec
lods
xchg
xchg
aas
aas
out
cld
mov
mov
ss
dec
enter
arpl
loope
mov
xor
jg
add
je
add
into
lods
lahf
and
sub
jg
ss
inc
daa
add
nop
rcr
stos
es
push
cli
sub
or
jl
out
fdivrp
aaa
test
xorb
fs
push
shl
mov
xchg
lahf
sub
das
repz
mov
mov
dec
ftst
popa
mov
jnp
punpcklbw
movsb
push
sti
pop
fsubl
pop
mov
adc
mov
insb
sbb
mov
cld
scas
push
enter
insl
pop
jno
dec
mov
xor
nop
xchg
adc
sub
push
inc
xchg
inc
mov
xlat
push
lret
lret
les
sbb
pop
adc
repz
mov
push
and
rol
test
inc
movsl
xor
stos
jp
jnp
adc
jns
fs
fcmovnbe
jp
mov
mov
xor
fstps
xor
loop
mov
enter
dec
hlt
or
repnz
sbb
mov
rolb
inc
jnp
lret
gs
dec
stos
lret
adc
jne
or
pop
xorb
and
xchg
mov
and
ss
pop
sub
hlt
sub
in
jbe
fldt
icebp
and
test
test
mov
and
jbe
xchg
test
mov
aas
outsb
mov
int3
cmc
mov
mov
inc
pop
cmp
pop
shr
in
dec
xor
inc
lods
dec
in
and
pop
lea
pop
orl
lods
out
pop
es
and
mov
call
jle
jo
lods
adc
cmp
scas
push
lahf
lods
loopne
push
les
fwait
shufps
aas
mov
insl
mov
ljmp
pop
daa
cmpsb
adc
sbb
push
aam
pop
push
pop
adc
dec
pop
shlb
cs
mov
pop
lock
lds
adc
in
aaa
xor
bound
lods
or
cmp
add
divb
imul
jno
jne
jbe
push
mov
test
lret
enter
adc
sbb
add
shlb
or
mov
sbb
or
fs
lds
adc
pop
xor
mov
je
les
xor
call
divb
jno
insl
sub
pusha
push
xchg
dec
fwait
pushf
lods
stc
repnz
pop
push
lods
jo
test
lcall
cld
sub
mov
mov
dec
inc
xchg
sub
pop
out
push
mov
cmp
cmp
int3
mov
mov
sub
popa
cmp
lods
push
aaa
push
fs
ss
cld
test
in
dec
mov
popa
stos
xchg
out
adc
push
inc
xor
cltd
iret
sahf
sbb
pop
pop
negb
mov
pop
push
test
jp
repz
dec
mov
sub
dec
jb
popf
pop
repnz
jmp
and
or
lret
mov
stos
aam
and
shl
and
in
pop
aaa
out
add
jb
mov
pop
gs
in
lds
dec
adc
lcall
fldt
cld
lock
add
aas
pop
out
lods
cmp
mov
insl
ljmp
push
ficomps
pusha
imul
cltd
sarl
sbb
jbe
dec
and
cwtl
xchg
adc
push
mov
in
lods
mov
lock
sbb
xchg
shlb
imulb
add
xchg
cmp
testb
push
outsl
jg
cmp
mov
stos
cmp
inc
fs
push
stos
inc
jb
push
les
icebp
pop
les
adc
xor
xlat
push
ret
fidivrl
xor
popl
pop
cmp
jnp
sbb
es
dec
ret
pusha
mov
mov
jns
jne
add
push
inc
xchg
loopne
push
inc
push
cwtl
cli
imul
in
lock
testb
dec
imul
mov
js
pop
insl
add
and
nop
andb
stc
sub
enter
adc
imul
ds
pop
loopne
stos
fldenv
in
xchg
inc
mov
es
in
jecxz
cmp
inc
jo
dec
push
xor
shr
call
rcrl
sti
cmp
cmp
cwtl
lahf
mov
mov
es
dec
fdiv
or
shrb
adc
jp
shlb
lahf
fidivl
fwait
cmpsl
pop
or
addb
leave
mov
xchg
pop
enter
stc
cld
add
xchg
test
jge
cmpsb
in
lea
pop
enter
mov
loope
jb
fsubl
add
mov
aas
mov
movb
mov
fcoml
testb
sbb
repz
outsb
inc
sbb
xlat
iret
addr16
sub
and
loopne
ja
add
cmp
daa
push
lcall
dec
inc
fldcw
xor
sub
jne
cmp
pop
fmull
lret
mov
sbb
push
mov
mov
jmp
iret
cmpsl
or
push
jno
iret
leave
xor
add
adc
dec
insb
pop
cmp
add
sub
jo
pop
dec
daa
push
pop
pop
dec
xchg
jecxz
ret
mov
aas
daa
mov
in
nop
pushf
test
ficompl
pop
push
insl
sbb
push
gs
push
aam
fstps
inc
push
inc
in
addr16
fmull
xchg
lock
stc
jb
jp
pop
or
out
jge
and
sbb
add
and
adc
cwtl
cmp
iret
andb
or
lahf
in
mov
fidivs
daa
fmull
lea
inc
nop
mov
sbb
js
repnz
mov
lcall
xor
rclb
and
shl
mov
add
mov
pop
aam
or
xchg
inc
aaa
cmpsb
inc
enter
pop
jp
ja
xchg
push
or
filds
xchg
push
outsl
test
jnp
mov
out
jno
xchg
sbb
aad
fcmovu
lahf
lods
and
in
add
add
into
sbb
lahf
jns
imul
out
and
out
js
add
and
xchg
fisttps
mov
test
fnsave
ret
insl
cmc
js
sub
pop
cli
aad
push
push
mov
fimuls
mov
pusha
xlat
fimuls
data16
xor
and
jp
stos
sbb
cmpb
insl
arpl
js
mov
cmpsl
pop
mov
xchg
scas
xchg
roll
fwait
aas
push
imul
fbstp
fs
cmp
sahf
pop
jle
test
sbb
xchg
scas
inc
push
mov
cmpsl
loope
or
imul
nop
addl
sub
cmc
shll
imul
outsb
jmp
daa
jbe
daa
jmp
loope
dec
xor
jp
xor
or
or
sbbb
daa
mov
ljmp
repnz
sub
loop
stc
cmp
lret
pop
mov
cs
xchg
pop
jecxz
aaa
xchg
lret
cmp
or
into
mov
pop
pop
xor
mov
mov
fdivrs
sbb
pusha
mov
sbb
and
inc
ficompl
popl
push
pop
cmpsb
outsb
and
xchg
pop
adc
mov
data16
ljmp
push
adc
pushf
call
cmc
mov
arpl
jle
jae
movsl
sub
xchg
jge
popa
fwait
or
mov
dec
xchg
xchg
and
pop
lea
fcoms
in
and
inc
xor
fs
mov
sbb
daa
icebp
push
es
pop
jg
fwait
mov
repnz
sub
addr16
xchg
aam
jge
out
xchg
mov
cmpsb
xchg
and
adc
in
lock
mov
mov
fs
jg
in
mov
mov
push
fldcw
and
pop
mov
ficomps
pop
bound
jb
out
inc
mov
xor
repz
jbe
mov
mov
xchg
enter
mov
sti
movsl
iret
push
sub
sbb
and
bound
int
rcrl
add
into
xor
shrl
jne
js
pop
repz
push
ds
pop
lret
fwait
movsb
lea
repz
jg
push
pop
addr16
mov
mov
push
cld
adc
xchg
rcl
sub
or
push
inc
adc
mov
jle
inc
xor
rcll
jo
xor
stos
lahf
xchg
roll
cltd
lahf
int3
outsb
lret
xlat
mov
cmpsl
push
or
inc
aas
lret
cltd
and
and
jmp
je
stos
push
or
or
inc
lock
outsb
sbb
mov
cmc
mov
adc
int3
jp
daa
push
add
jmp
inc
fdivl
popf
pop
jbe
outsl
addl
dec
sbb
fisubl
push
adc
mov
out
adc
inc
rorb
iret
lcall
mov
jge
mov
mov
mov
in
cmp
push
push
sub
adc
in
mov
xchg
popl
ret
jo
dec
andl
scas
ja
outsl
add
jb
scas
jl
cmc
mov
je
xchg
sub
push
mov
lea
dec
loope
std
out
add
push
cmp
lock
out
jle
pop
pop
scas
mov
nop
in
or
ss
testl
lock
mov
hlt
and
loope
ret
jp
test
xchg
test
mov
int3
xchg
inc
imul
inc
mov
pop
pop
or
out
fsubrl
pop
jns
push
xlat
out
jne
call
jle
dec
movsl
jecxz
hlt
push
movsb
push
sub
pop
lret
push
dec
add
leave
rcr
ret
adc
or
mov
add
lret
je
jbe
fdivr
aaa
adc
adc
fsubrs
cmp
test
mov
jp
inc
inc
mov
test
lret
push
icebp
cmp
push
js
mov
mov
mov
xor
test
outsb
push
or
sub
xor
test
je
pop
xchg
stos
call
pop
hlt
jae
jp
addl
mov
call
fldcw
mov
das
fwait
lds
lret
jno
std
mov
stos
stos
test
enter
mov
push
mulb
aad
test
scas
pop
scas
xchg
popf
daa
shll
mov
push
push
jp
mov
push
adc
add
mov
inc
rclb
ret
cwtl
lret
les
or
js
jnp
fwait
stos
sub
inc
and
xchg
pop
inc
imul
inc
lcall
mov
mov
dec
sbb
add
sahf
mov
mov
mov
mov
and
clc
jecxz
dec
mov
pop
imul
lcall
cltd
jmp
or
mov
pinsrw
dec
clc
add
gs
insl
push
and
fwait
add
mov
pop
push
fsts
rcrl
aam
pop
scas
insl
cmp
lea
insl
inc
ret
es
and
jle
and
por
imul
aaa
and
movsb
test
dec
xchg
dec
sub
dec
dec
mov
sbb
call
sbb
cmp
cltd
out
inc
sub
scas
ljmp
pop
cmp
inc
push
jmp
jbe
sub
push
movsl
lods
sarb
xor
pop
adc
pop
fnstcw
fimuls
or
insl
jl
lock
mov
pop
pop
loop
mov
adc
pop
dec
jecxz
cmp
repz
push
lret
pop
adc
lock
inc
mov
ja
in
xchg
out
mov
jecxz
mov
imul
push
lock
subl
push
loope
inc
sbb
lods
push
nop
and
adc
pop
das
cmpsl
adc
inc
clc
add
mov
lret
fwait
cmp
jo
sbb
lcall
mov
popf
shrb
push
cmp
lds
inc
scas
mov
mov
ficompl
cmp
test
xchg
jb
and
insb
ret
ljmp
addl
jns
sub
cmp
or
lcall
adc
mov
fidivs
mov
ja
mov
addl
test
pop
pop
and
or
cmp
popa
jno
divl
cmpsl
rorl
xchg
lret
adc
mov
jno
cmc
int3
xor
addl
lock
dec
je
pop
or
mov
cmc
popl
arpl
and
dec
push
repz
inc
movsl
mov
movsb
mov
mov
jne
xchg
mov
and
imul
mov
cmp
dec
movsb
out
mov
lcall
push
mov
lea
sbb
fs
pop
adc
rcl
cwtl
inc
mov
xlat
cs
or
loope
cmp
sub
ret
adc
lret
popf
lds
mov
cmpsb
add
sub
mov
mov
mov
rclb
cli
dec
test
or
je
bound
les
js
jp
push
cmpsl
pop
adc
jecxz
push
mov
ja
movsb
adc
stos
sti
stos
scas
xchg
in
mov
loopne
daa
arpl
les
bndstx
cwtl
mov
cmp
mov
cmpsb
rorl
pop
xor
sub
inc
aas
loopne
jmp
sbb
movsb
iret
idivl
outsb
test
incl
pop
push
stc
sbb
and
dec
inc
inc
mov
jbe
jecxz
scas
mov
mov
push
add
mov
pop
in
xchg
scas
test
out
insb
mov
jb
pop
dec
call
aas
hlt
and
push
test
mov
adcb
pop
bound
inc
mov
shll
arpl
lret
shrb
sub
mov
push
adc
and
jno
jns
or
and
mov
lret
adc
fwait
mov
mov
out
inc
mov
mov
or
orb
jle
or
cmp
fxtract
loope
in
mov
or
dec
or
jbe
inc
stc
and
ret
mov
in
or
jmp
sbb
arpl
cmp
and
fisubrl
lret
sahf
mov
and
sbb
mov
inc
cmc
pushf
cmp
mov
cmp
add
faddl
push
xor
sbbl
fdiv
xor
popf
cmp
xchg
out
inc
ljmp
inc
pop
xchg
mov
jnp
push
cltd
push
inc
lea
and
inc
mov
jb
sub
or
arpl
orb
fisttps
adc
adc
lods
in
dec
jo
test
outsb
lock
sbb
or
push
sub
cmc
cmp
push
aad
adc
neg
aad
cld
into
xchg
mulb
movsb
cmpsl
dec
xor
jo
scas
or
dec
or
inc
leave
jno
aas
pusha
pop
lcall
repz
nop
movsb
pop
stc
adc
mov
shlb
movsl
xor
jne
shlb
mov
rol
push
repz
xlat
jge
iret
out
inc
loop
je
sub
sbb
dec
ret
cmpsl
inc
fcomip
pop
sub
fsubl
pop
inc
stos
lahf
iret
cmp
mov
add
sahf
icebp
pop
into
leave
mov
or
rclb
aad
xchg
adc
cmp
add
fcmovnb
pop
je
sub
jmp
fidivs
ja
adc
jle
scas
jecxz
adcl
aad
addb
loop
inc
mov
xchg
js
aad
or
insl
cmp
mov
adc
icebp
inc
inc
push
pcmpgtd
or
adc
jle
push
mov
dec
imul
or
fistl
sbb
imul
in
popa
mov
jle,pt
push
mov
leave
popf
xor
insb
out
ljmp
xorb
cmpsl
mov
and
add
mov
fldl
or
popf
push
push
mov
es
movsb
xchg
pop
jne
jle
push
fnstcw
subb
mov
es
sbb
cmp
add
mov
sub
icebp
sub
sbb
jmp
jnp
les
clc
sbb
sub
and
sti
test
adc
inc
sub
inc
cltd
add
lcall
push
xchg
or
repnz
jl
js
cmp
ret
jnp
cmp
cmp
push
adc
outsb
fidivrl
shrb
pop
mov
movsb
aam
adc
fbld
out
dec
or
mov
push
sub
ret
filds
stos
and
and
ljmp
aaa
xor
inc
push
call
ljmp
outsl
in
jecxz
test
movsl
scas
sub
test
xchg
test
mov
movsb
pushf
mov
cmpsl
xor
sbb
icebp
ret
jmp
out
jge
mov
vcvtsi2ssl
jg
sbb
add
cmc
mov
pusha
popf
pushf
push
loope
add
jge
sbb
ret
loop
add
xor
mov
cwtl
in
cmp
stos
xchg
sub
push
popa
sub
xchg
sub
ja
shl
ret
adc
or
and
popa
jp
lea
jmp
scas
inc
mov
sbb
or
mov
fldt
andl
inc
js
jmp
push
cmp
sbbb
clc
int3
outsb
sarb
pop
mov
jge
add
daa
pop
ret
mov
mov
sbb
pop
cmc
ret
clc
pop
mov
jb
adc
sub
fstps
add
int
addr16
mov
sub
or
sarb
cmp
adc
sahf
xor
jp
cmp
mov
jno
push
and
add
shll
mov
xchg
cmpsb
sbb
in
jl
incl
popa
loopne
das
repnz
lods
mov
data16
jo
pop
add
mov
mov
in
jg
inc
mov
inc
sbb
shll
aad
cmpsb
jmp
test
scas
jecxz
aaa
das
push
jbe
out
lcall
mov
pop
inc
sub
arpl
mov
out
popa
icebp
stos
stos
popa
loop
dec
mov
addr16
inc
sub
dec
sub
cli
hlt
int3
add
ljmp
lcall
in
data16
or
pushf
cmp
xor
adc
adc
xor
push
add
inc
inc
xchg
out
pop
jge
mov
pop
jo
push
push
mov
lods
ss
aas
scas
in
in
xor
or
push
or
or
ds
sbb
filds
scas
push
inc
sbb
icebp
sbb
pop
out
lods
sbb
xchg
add
test
push
cltd
push
push
aam
mov
xchg
pushl
negb
loopne
pusha
mov
mov
cmp
push
push
adc
sbb
dec
sub
movsl
sbb
call
mov
or
test
ror
mov
ffree
push
cwtl
movsl
popa
test
push
and
mov
inc
lret
ss
cmpsl
maxps
lcall
inc
cmp
popa
popf
xor
mov
incl
popa
lods
stos
jmp
in
pop
les
aaa
popa
adc
fs
lahf
popa
pop
jne
shl
cmpsb
cmc
popf
scas
sub
das
popa
cmpl
scas
xor
pop
fdivl
mov
sub
enter
lock
xchg
adc
ss
fcoml
and
shll
outsl
mov
cmp
daa
mov
inc
cmp
jne
adc
sub
xor
aam
stos
mov
xchg
hlt
scas
aaa
je
iret
insl
xor
xor
mov
test
xchg
lods
xor
mov
cmp
add
scas
std
sbb
mov
mov
std
dec
or
adc
aaa
cmp
pop
or
and
cwtl
hlt
cmp
dec
fwait
pop
js
cli
pusha
adc
lods
lahf
mov
cmpsb
scas
mov
cmp
xor
sbb
scas
jle
mov
jo
push
cmp
ficomps
adc
fbld
sti
testl
mov
and
aaa
imul
shlb
iret
push
mov
mov
loop
xor
fstps
or
ficompl
cmpsb
jne
pusha
subl
cmp
addr16
es
lods
cwtl
jle
daa
out
loopne
les
mov
fistpll
jle
loope
andl
ret
jae
cltd
push
xchg
mov
bound
cmc
stos
std
xchg
push
jge
int3
push
mov
mov
fists
rolb
pop
ljmp
dec
repz
clc
lock
xor
mov
data16
pop
adc
jecxz
repnz
call
xchg
outsl
dec
cmp
fnstsw
or
dec
scas
rcll
and
hlt
mov
jge
out
es
sub
sub
cld
scas
daa
jl
arpl
sub
xor
cli
inc
lods
repz
add
dec
push
dec
int3
mov
scas
pop
ret
testl
mov
nop
mov
adc
or
mov
jne
enter
mov
mov
adc
lret
push
cmpsb
lahf
mov
repnz
sbb
adc
lcall
pusha
lods
out
test
mov
or
jle
sbb
popf
cs
addr16
inc
das
fsubl
mov
push
push
dec
pop
mov
les
into
jnp
sti
push
mov
sub
mov
xor
inc
jbe
sbb
cmp
js
unpckhps
in
jne
dec
sbb
jno
sbb
cmp
leave
push
jns
mov
or
cmp
nop
shll
enter
jmp
stos
dec
mov
or
add
lret
sub
jne
pushl
jle
cmc
mov
scas
mov
lds
add
mov
jp
push
inc
outsl
aaa
add
dec
cmp
jmp
lret
dec
ja
pop
test
add
push
orl
sarb
and
inc
mov
push
mov
mov
cmc
xor
mov
push
loopne
je
jae
dec
jge
add
mov
cmp
stc
xor
shlb
mov
xchg
mov
enter
xor
repnz
mov
xor
inc
xchg
arpl
aad
aad
jae
jo
sbb
pushf
ud1
dec
hlt
mov
jmp
das
insl
cmp
inc
out
out
adc
out
sub
idivl
outsl
ret
jb
outsw
add
mov
scas
je
push
test
int
cmc
sbb
dec
popf
jg
cmp
xlat
stos
out
dec
stos
jle
mov
xchg
mov
movsb
ret
sahf
xchg
ss
ja
js
mov
push
xchg
and
pop
cmpsl
stos
lret
and
mov
adc
sti
fcoms
sbb
insb
ret
fdivrl
jl
popl
mov
cs
sbb
data16
add
cmp
movsb
add
std
negb
clc
lds
sub
add
div
stos
or
scas
jne
filds
xor
jmp
das
imul
stos
ja
daa
mov
cmp
adc
push
cmp
jg
frstor
push
cmp
sbb
fs
fs
xor
aad
movsb
cmp
cmp
xor
inc
outsl
movntq
outsl
lcall
pop
mov
pushf
jl
or
add
scas
repz
mov
nop
mov
insb
inc
js
movsb
popa
push
inc
add
outsb
adc
jg
lods
loop
mov
fidivl
adc
dec
mov
jl
sbb
fldt
mov
pop
dec
cmp
add
imul
xorb
dec
or
xchg
xchg
cs
shrb
inc
pop
mov
popf
cli
sbb
inc
repz
xchg
add
shlb
mov
jns
cmp
adc
and
mov
dec
ret
in
popf
jae
or
and
xor
mov
test
push
fwait
add
scas
mov
icebp
cmp
clc
inc
rcll
jae
xchg
sub
mov
cwtl
lcall
xchg
mov
addl
and
push
xlat
lret
jae
jp
les
dec
jecxz
mov
or
lahf
dec
cmp
sbb
add
imulb
test
cvtps2pd
mov
popf
adc
and
fcmovnbe
pop
pop
cmp
jns
test
pop
inc
add
mov
jg
out
cwtl
pop
fdivrs
xchg
inc
and
test
js
dec
jg
ss
push
push
jge
das
nop
mov
or
cmp
popf
push
faddl
mov
mov
pop
jecxz
imull
sub
pop
cli
jns
lret
fiadds
movsl
out
out
mov
mov
int
cmp
mov
adc
adc
add
shll
cmp
and
dec
pusha
push
mov
loope
jp
xor
push
aaa
sub
sarl
out
sar
mov
inc
stos
clc
loope
daa
fstps
add
scas
dec
ja
mov
adc
arpl
inc
fcmovnbe
mov
leave
loopne
sbb
popf
imul
or
jno
sub
push
sub
and
enter
pop
xchg
daa
xchg
mov
out
pop
inc
add
stos
xchg
fidivl
fisubrs
xor
mov
fsubl
inc
sar
add
into
pusha
xchg
out
jmp
into
fimull
xchg
mov
dec
in
xchg
sarb
add
add
sti
cmp
xchg
dec
insb
loop
cmpsl
or
xchg
push
sbb
jo
or
inc
in
mov
cmpsb
test
js
add
sub
cmp
gs
sbbb
mov
test
or
or
sub
xor
xor
pop
or
out
loopne
adc
mov
push
push
sbb
xlat
sbb
xorl
and
sub
sub
xlat
in
jno
xor
movsl
xchg
jno,pt
lret
dec
adc
push
mov
mov
xchg
fisttpll
stc
mov
rcll
in
fldenv
sbb
lock
stos
mov
jg
test
cs
loop
pop
xchg
std
popf
notl
xor
xor
mov
mov
call
mov
adc
leave
sub
pop
daa
jnp
xor
push
and
test
or
dec
xchg
xor
adc
inc
sbb
data16
mov
sub
jge
sub
mov
push
cld
cmp
dec
and
hlt
mov
xchg
pop
andb
dec
sbbb
cmp
and
js
lahf
sbb
mov
mov
dec
in
pop
dec
sbb
add
cli
mov
xchg
lret
jbe
lods
xor
imul
add
mov
or
aas
lret
rcrl
or
fdivrs
fdivp
out
faddp
popf
push
xchg
shlb
stc
pop
jle
addr16
stos
jl
sarl
mov
out
sub
outsl
cmpsb
in
insl
pop
inc
lock
xchg
add
call
out
movsb
test
fldenv
xlat
aaa
loop
lcall
out
sbb
movsb
inc
lahf
cmpsb
push
fimull
cs
mov
push
dec
into
mov
call
push
sub
jns
sbb
pop
sbb
or
cmp
call
movsl
fsubs
add
mov
mov
jnp
mov
fsubrs
mov
dec
dec
adcl
fmul
popa
test
mov
push
adc
gs
in
cmp
pop
shrl
inc
cs
jmp
lods
iret
mov
inc
insb
orb
les
int3
jnp
out
fisubl
imul
std
fmuls
clc
cmc
adc
sti
mov
or
aaa
outsb
push
jmp
mov
sar
mov
mov
out
mov
cmp
mov
pop
or
daa
iret
mov
xchg
cmpsb
movsb
cmpsl
addr16
xchg
enter
mov
or
leave
and
sbb
stos
cmpsb
pusha
xor
add
cli
cmp
cmp
pop
xchg
mov
adc
pop
out
sub
adc
xchg
xchg
jmp
test
fistl
ret
je
sub
mov
xchg
mov
push
mov
lods
stos
bound
out
daa
into
xchg
mov
inc
shrl
aas
ss
in
clc
jp
add
dec
mov
dec
out
sbb
and
and
dec
rclb
dec
xchg
xor
lds
mov
mov
movsl
lret
inc
icebp
dec
jecxz
int
cmp
mov
inc
jnp
shlb
dec
mov
test
ja
mov
lods
mov
jl
cmpsb
shrb
ds
xchg
add
sub
bound
sub
jb
jo
dec
fldt
sbbb
lods
jg
negb
xchg
push
cmp
xor
jne
lods
pop
sbbb
dec
repnz
dec
repnz
sub
mov
lods
inc
pop
push
jge
aam
cmpsl
dec
jg
add
les
jb
fwait
repz
pop
mov
jp
aaa
aas
int3
xor
cmp
cmc
jge
repnz
jae
movsb
data16
fldl
hlt
imul
ret
lock
pop
dec
aaa
and
lcall
lds
adc
push
dec
es
mov
and
jg
in
adc
ja
xchg
fsubs
mov
sub
mov
je
inc
xchg
mov
imul
sbb
xchg
mov
cmp
pop
movsb
ret
jg
mov
scas
loope
test
stos
pop
aam
bnd
mov
mov
or
sarl
and
btc
pop
xchg
mov
ret
xor
into
mov
aad
push
mov
in
mov
and
push
sbb
sub
cwtl
shll
inc
xor
cli
lods
jl
mov
push
jecxz
inc
xchg
mov
fcoml
fcomip
call
leave
aam
scas
dec
pusha
push
mov
cmp
inc
inc
int3
pushf
dec
sub
dec
imul
xchg
pop
scas
movsl
lods
pop
mov
cmp
push
loop
popa
push
enter
mov
stc
jp
mov
nop
mov
sti
xor
cmp
out
cmpsb
lods
data16
mov
push
stc
add
cmp
shr
negb
stos
sbb
cmpsb
repnz
add
xchg
sbb
fsub
jecxz
lret
repnz
inc
mov
test
lcall
bswap
pusha
rcll
and
mov
fwait
jbe
pop
mov
jle
shll
jne
jno
mov
adc
adc
mov
and
enter
cmp
cltd
call
pop
enter
jg
mov
cmc
cwtl
mov
push
mov
fwait
sub
sbb
fidivrs
repnz
pop
inc
and
jge
sub
and
fstl
mov
cmp
xchg
jnp
xor
and
inc
adc
or
adc
dec
repz
inc
lods
mov
scas
fstps
std
inc
loop
out
cmpsl
xor
fisubrl
aaa
push
outsl
push
outsl
ljmp
mov
inc
mov
fidivs
jmp
fcomps
cmpsb
or
push
and
popf
mov
and
arpl
popf
leave
xchg
push
outsl
mov
ret
ret
and
test
int
cmp
inc
mov
lds
sub
stos
pusha
xchg
arpl
fcmovnbe
adc
in
mov
sbb
fstpl
rclb
iret
adc
jns
lds
and
bound
testl
inc
test
enter
insb
les
sub
loopne
mov
xor
clc
inc
sbb
xchg
int
sub
add
ljmp
pop
lock
mov
adc
push
cmpsl
mov
add
sub
inc
jns
or
lret
fs
sti
dec
xchg
and
out
fwait
push
ret
outsb
fldt
dec
outsb
xchg
inc
push
push
push
int3
repnz
inc
shr
sbb
stos
mov
fidivrl
pushf
jb
pop
insl
mov
inc
stos
in
pop
movsb
dec
aam
pusha
scas
xchg
je
xchg
loope
leave
add
aaa
shl
xchg
outsl
test
mov
out
aad
mov
mov
push
lods
sub
shlb
popa
and
call
roll
add
push
mov
int
lea
sarl
rclb
cmpsb
arpl
sbb
cmp
or
arpl
mov
cmpsb
mov
lds
mov
pop
and
out
loop
xchg
cmpsb
mov
scas
pop
cwtl
add
lods
dec
ja
inc
out
xchg
pop
add
arpl
bound
lock
xor
and
mov
fs
pop
dec
inc
ljmp
mov
lea
lock
enter
adc
push
hlt
push
dec
jo
repz
sbb
push
js
mov
bound
shrl
or
icebp
cmp
into
xchg
and
push
fs
dec
xor
push
adc
mov
pop
mov
outsl
shlb
lods
in
sbb
mov
fcmovnu
aas
leave
jns
cli
sub
pop
mov
cld
inc
cmpsb
enter
lret
mov
cmpsl
dec
push
mov
fbld
scas
or
shll
inc
sbbb
mov
popf
pop
stos
out
lds
lahf
call
int3
and
add
or
mov
ds
das
stos
cmp
sbb
sbb
mov
nop
dec
add
scas
mov
pop
cmc
outsl
ficoml
xchg
leave
dec
insl
ror
push
arpl
call
ja
out
insl
push
cmp
and
js
iret
push
addl
int
mov
mulb
mov
xor
xor
dec
mov
fwait
push
sbb
mov
pushf
das
xchg
lds
leave
insl
push
push
mov
scas
dec
add
mov
xchg
xchg
mov
aas
mov
push
test
xchg
in
fnstenv
push
ss
mov
or
xchg
inc
aaa
ret
mov
push
cltd
out
and
das
int3
out
sahf
jle
push
outsb
push
mov
shll
dec
pop
cmp
dec
sbb
arpl
mov
dec
sub
sbb
test
inc
movl
inc
dec
mov
xor
dec
and
adc
fdivrp
movsb
test
jns
cmp
lods
int
ret
int
aad
add
push
in
adc
out
aaa
pop
test
addr16
add
addr16
das
xchg
js
andb
stc
xor
cltd
ljmp
xor
insl
movb
out
scas
aas
pop
ja
pop
cmpsl
inc
dec
aas
push
xor
test
mov
arpl
push
jo
xor
inc
inc
data16
jnp
or
pop
mov
inc
push
pop
dec
push
cltd
jle
gs
aaa
scas
jp
aam
dec
leave
fisubl
std
push
pusha
addr16
cmp
call
pop
sbb
jmp
mov
push
mov
stos
stc
xor
or
mov
sbb
cmpb
mov
or
mov
jb
jmp
rcl
in
inc
js
sarl
dec
cmpsb
jge
dec
or
pop
shll
inc
inc
iret
gs
loope
mov
xchg
inc
ret
cmc
cmp
dec
adc
ljmp
cwtl
pushf
push
dec
fwait
push
dec
pop
xor
incb
pop
mov
inc
inc
cltd
test
outsl
lods
lods
mov
rorb
and
pop
imul
jb
xchg
lea
mov
repnz
mov
lahf
push
push
lods
mov
inc
xchg
popf
call
sahf
mov
das
jb
jae
in
stos
cmpsl
fcoml
insb
sbb
pop
mov
loop
int3
in
push
fnstenv
out
nop
mov
imul
call
lret
ss
out
cmpsb
rolb
xor
cmp
add
mov
mov
pop
repz
nop
sub
subb
mov
xchg
addr16
loopne
or
cmp
mov
sub
adc
xor
push
es
xor
push
dec
sub
sub
or
test
mov
fsts
mov
mov
push
iret
sub
xchg
mov
or
xchg
mov
mov
or
cmp
sbb
add
sbb
push
inc
in
stos
mov
out
or
cmpsl
stos
inc
push
cli
and
and
aas
xor
outsl
push
fisttpl
test
dec
aam
pop
stos
icebp
jl
aam
test
fldenv
inc
xchg
dec
xlat
sbb
orb
xor
xchg
or
inc
xchg
xor
daa
test
mov
out
in
mov
test
pop
lret
sbb
xchg
xchg
insb
push
sub
dec
repz
fistpll
sbb
ret
gs
shr
jge
ss
test
clc
ret
mov
sbb
sahf
cltd
sub
ss
fdivp
clc
and
jmp
mov
movsl
enter
ds
scas
jno
or
push
push
mov
lea
bound
sub
fsubs
mov
inc
mov
cltd
fwait
sti
lret
std
movsl
rcrl
xor
outsl
lea
jae
jnp
lret
dec
mov
rcr
xchg
dec
outsb
jb
subl
les
dec
mov
push
or
sub
pop
mov
and
fdiv
jnp
in
movsb
fsubl
or
add
jecxz
mov
stc
repnz
ret
fcompl
push
stos
fmuls
lcall
lahf
xchg
shll
imul
push
add
popf
loop
adc
mov
mov
mov
mov
pusha
shll
xchg
lahf
mov
sbb
xchg
dec
pop
or
enter
push
in
outsl
add
and
fildl
std
sub
mov
loope
or
lret
pushf
push
push
out
jb
adc
jp
fdivs
or
cld
jecxz
mov
cmp
cli
push
pop
cwtl
cmp
mov
orb
jg
addr16
mov
pushf
mov
push
test
jbe
dec
pop
cmp
push
roll
nop
icebp
aad
push
orl
dec
scas
or
rcrb
mov
cmp
and
out
sahf
xchg
into
lds
push
addr16
cmpsb
adc
shl
inc
sbb
shrb
push
xlat
mov
movsb
nop
pop
aam
scas
pop
fbld
pop
cmp
mov
adc
aaa
or
clc
rcrl
ret
icebp
add
pop
lahf
mov
out
mov
dec
cmpl
push
pop
test
jae
sub
iret
js
in
cltd
push
jae
push
iret
outsl
lock
push
xorl
or
sbb
or
fdivr
ret
cld
xchg
sbb
test
xlat
faddl
mov
insb
or
cli
mov
lahf
mov
jb
dec
loop
mov
clc
daa
into
std
mov
xchg
fisubl
nop
cmpsl
push
and
sub
ljmp
hlt
in
or
mov
dec
xor
push
cmp
mov
sbb
call
test
lea
push
mov
cmc
xchg
push
sub
std
sub
arpl
adc
loopne
sub
push
push
add
pop
sub
xor
call
push
and
jb
or
ljmp
xchg
pop
clc
jp
loop
mov
daa
adc
jp
dec
and
dec
iret
sbb
stc
fnsave
sbb
loopne
daa
adc
insb
sub
jns
mul
ret
cmp
mov
loope
adc
in
adc
mov
dec
jl
cmpsl
bnd
jnp
test
mov
xor
shlb
in
enter
mov
pop
pop
xor
jle
ja
sub
xor
push
mov
sbb
mov
inc
gs
lcall
movsl
push
push
add
in
mov
sarl
dec
mov
mov
stos
xchg
sub
xchg
xchg
sbb
pop
sti
test
fxtract
xchg
gs
ficoml
repz
push
es
pop
aad
mov
xor
test
xor
sbb
inc
leave
and
mov
int
add
mov
mov
mov
sbb
sub
ret
aaa
mov
test
lcall
aaa
scas
sbbb
shl
int3
push
pop
insb
add
rcrl
mov
pop
sbb
pushf
movsl
inc
repz
pop
std
cwtl
stos
pop
dec
mov
out
dec
imul
push
arpl
pop
test
jle
add
mov
repnz
jl
jl
lods
sub
test
pop
in
adc
mov
int
mov
cwtl
cmpb
mov
rcl
cmp
loopne
stos
xchg
ds
mov
pop
sub
enter
pop
xor
fldcw
jnp
add
and
out
icebp
pop
aas
aaa
clc
xchg
push
sub
lods
mov
out
cltd
jle
orl
repnz
lcall
jns
add
sbb
dec
jl
ja
ds
andl
sub
repnz
clc
adc
adc
inc
rcll
inc
sub
aaa
fptan
inc
outsl
data16
xor
jo
add
sahf
dec
nop
gs
xchg
test
mov
mov
xchg
pop
push
fiaddl
mov
push
insl
add
insb
enter
mov
mov
icebp
and
lcall
add
insb
mov
push
cs
arpl
or
es
pop
test
pop
cltd
popa
cld
adc
popa
pop
xor
sbb
and
pop
test
mov
imul
mov
jo
call
das
sbb
jmp
scas
or
add
lret
jl
add
ss
add
ljmp
in
or
movsl
and
cli
lret
repz
aas
out
cmpsb
dec
lcall
movb
xchg
adc
mov
push
xor
push
sub
cltd
fucomp
andb
mov
fwait
mov
add
lods
mov
mov
sbb
das
hlt
xor
jp
mov
adcb
jnp
dec
mov
leave
and
xchg
insl
push
sbb
xor
scas
in
adc
int
or
add
add
sbb
mov
imul
scas
rcrb
pushf
std
cmpsb
cmpsb
mov
sbb
stos
icebp
xchg
mov
mov
test
mov
cmp
lcall
mov
jne
je
jp
rorb
cmp
es
inc
repz
js
push
xorl
pop
xor
jmp
inc
mov
sahf
jbe
or
into
clc
je
push
jp
gs
imul
mov
pop
mov
orl
testb
shll
shl
stos
out
dec
lock
fcoms
add
mov
or
test
imul
inc
cld
xchg
mov
push
dec
dec
sbb
pop
lea
popf
and
and
movsb
inc
imul
sub
sbb
pusha
jecxz
mov
movsl
xchg
ljmp
jl
outsl
lret
loopne
out
repz
mov
fcomp
xor
nop
sbb
loope
es
inc
xchg
cmp
mov
int3
inc
sti
aam
int3
inc
mov
fimull
mov
out
inc
stos
cmpsb
daa
shrb
push
inc
mov
xor
pop
gs
insb
cwtl
jae
push
mov
or
loop
xchg
mov
call
adcb
pcmpeqd
gs
cld
pop
mov
cwtl
int3
mov
dec
mov
sub
inc
mov
cmc
dec
in
xchg
inc
mov
jbe
xor
mov
ja
mov
aaa
insl
stos
aam
jb
sbb
cmp
mov
push
rol
jl
pop
std
jp
jno
dec
inc
popf
xchg
jo
jmp
sub
dec
cmp
push
pop
outsl
mov
cmc
jno
nop
jo
adc
lods
sbb
imull
movsb
xchg
add
arpl
out
mov
cmp
cmp
int3
movsl
test
icebp
mov
data16
in
jle
jns
repnz
xchg
ja
icebp
cmpsl
movsl
lds
pop
cmpsb
xchg
test
out
mov
stos
insb
mov
mov
cmp
push
mov
xor
aam
int
into
pop
xor
add
sub
dec
jbe
flds
mov
js
sbb
inc
pop
xchg
mov
out
dec
mov
dec
aam
enter
mov
sub
or
xor
into
mov
mov
lods
ror
xor
adc
cmp
push
pop
add
jecxz
cmp
out
mov
sub
dec
scas
enter
xor
out
mov
lods
push
shrl
cld
xlat
lahf
test
inc
pop
adc
push
xchg
mov
mov
in
cli
imull
orb
push
pop
repz
das
aaa
stos
divb
scas
sti
xchg
add
mov
cmp
inc
sub
cmpl
out
mov
push
aam
jg
std
cmp
xlat
dec
addr16
dec
subb
clc
lret
sbb
mov
lock
stos
out
dec
pop
call
mov
inc
out
cmpxchg8b
mov
ljmp
shll
and
hlt
ret
dec
imul
sbb
movsb
divb
xor
add
mov
mov
xchg
loop
mov
ja
loop
cmp
xlat
aam
inc
sbb
dec
fdivrl
das
inc
ret
dec
or
fmul
mov
stc
mov
dec
xor
cld
ljmp
jmp
push
jne
cli
push
push
mulb
orb
dec
and
test
in
repz
push
lock
clc
jecxz
fs
lcall
ret
mov
and
shrb
scas
and
pop
add
push
imul
xor
es
jns
rcr
loop
cli
testb
inc
popf
mov
mov
add
aad
sbb
cmp
push
loopne
je
xchg
das
dec
in
cmpsl
inc
jle
or
aad
add
mov
mov
arpl
enter
jp
inc
dec
fbstp
shll
in
dec
xor
enter
mov
mov
ljmp
and
fwait
and
test
pushl
setl
mov
mov
mov
jae
cmc
imul
insl
mov
cwtl
pop
push
sbb
and
addl
aaa
jnp
push
or
jb
mov
dec
ret
into
xchg
cmc
pop
xor
loopne
mov
mov
cmc
lcall
push
pop
add
xor
nop
mov
add
lret
fsubs
xorb
test
dec
jle
mov
test
adc
cmp
push
out
shlb
xchg
sub
out
xchg
adc
mov
cmpsl
in
push
xor
push
lcall
push
pop
or
xorb
xor
sbb
xchg
jg
mov
bound
xchg
loop
js
pop
dec
xchg
jo
int3
push
aam
inc
aas
mov
or
mov
rcl
xchg
movsl
or
jle
mov
ja
sub
dec
shlb
sahf
pop
popa
or
sarl
mov
in
out
adc
pushf
lods
pop
or
dec
aaa
das
xchg
dec
cmpsb
je
xchg
daa
sbb
push
cltd
arpl
pop
xchg
test
bound
add
xor
loop
fucomip
mov
cmp
push
out
jnp
addr16
mov
mov
pusha
das
aas
xchg
add
fadd
inc
jmp
jmp
cmp
inc
or
test
xchg
insl
jge
xor
mov
cmpsb
daa
test
js
dec
in
ja
xchg
add
jp
les
jp
fsubrs
lock
xor
dec
mov
outsl
sbb
gs
push
sahf
mov
cmp
inc
nop
sub
adc
stos
mov
aad
xchg
dec
imul
add
cmp
aas
ja
cltd
insb
sbb
sub
push
std
leave
and
dec
push
cmpsb
ficompl
inc
rorl
iret
hlt
mov
add
in
mov
adc
sub
and
mov
mov
and
movsl
pop
push
mov
pop
inc
add
xor
loopne
imul
cmc
xor
out
dec
jle
sti
and
inc
dec
popf
xchg
movsl
shll
fisubrs
xor
push
rorl
popf
ficoml
dec
loopne
add
ret
xchg
cmp
xlat
xchg
adc
int3
jns
dec
clc
lcall
repnz
aam
push
mov
jge
aad
ret
xchg
sysexit
jle
and
sbb
data16
loopnew
inc
inc
inc
jg
cmp
inc
sbb
inc
aas
jp
sti
movsl
leave
mov
sbb
cli
or
pop
push
push
mov
mov
and
mov
mov
add
sbb
push
sbb
dec
xchg
inc
movsb
lock
ljmp
xor
lods
or
mov
or
xchg
mov
adc
push
cmp
popa
sarl
xchg
mov
inc
sbb
push
or
or
mov
mov
xchg
outsb
inc
inc
mov
rcll
jge
mov
pop
adc
stos
sub
aaa
mov
xor
popa
movsb
mov
ds
mov
cmp
loopne
and
dec
xlat
jecxz
mov
sar
sub
jns
stc
add
jb
gs
adc
scas
rcl
adc
and
outsl
ror
lods
icebp
xchg
repz
test
shrb
sub
or
jmp
rolb
xorb
adc
pop
mov
adc
add
fsub
sbbl
xchg
rcrl
mov
idiv
or
dec
cs
mov
jecxz
insl
cmp
outsb
idivl
es
popf
push
shll
sbb
sbb
aas
aas
outsl
push
cmc
or
loope
mov
fcmovbe
mov
adc
xor
jle
in
std
int3
jbe
cmpsb
sti
stos
mov
aaa
jae
mov
push
js
push
daa
sbb
push
or
test
rorl
cmp
mov
inc
pop
mov
aam
mov
wrmsr
bound
sub
aaa
inc
popa
push
in
inc
inc
jp
adc
push
xchg
mov
jne
add
sbb
mov
pop
lea
stc
add
into
inc
fsubrs
enter
mov
aad
je
outsb
icebp
mov
es
aas
xchg
leave
mov
lcall
xlat
lds
jo
mov
xchg
xor
je
or
in
dec
sti
ljmp
in
mov
mov
test
into
pop
mul
or
xor
cmc
jno
cmp
pop
adc
insl
add
pop
arpl
jg
push
xchg
push
push
xor
hlt
cmp
jmp
pushf
inc
mov
jg,pt
cmp
inc
fs
pop
pushf
push
cmp
int
or
add
mov
xlat
mov
hlt
mov
insb
cmp
out
loop
clc
sbb
cmp
mov
and
cwtl
stos
lret
lret
mov
add
std
sbb
aaa
inc
cmp
popa
jo
xchg
jo
cmp
mov
pusha
xchg
lea
fists
jns
frstor
pop
test
jecxz
stos
into
stc
das
aam
imul
loop
jecxz
sub
jmp
js
lods
mov
outsb
ret
push
xor
mov
cs
cmp
add
mov
lods
cli
orl
je
int
pop
pop
je
insb
mov
pop
and
pop
dec
xchg
mov
xchg
rclb
jmp
mov
lds
insl
mov
jg
imul
orl
nop
dec
loop
imul
push
sarb
mov
adcl
out
insl
jg
and
hlt
in
mov
adc
addr16
das
in
fldcw
dec
and
in
cs
jns
negb
addr16
outsl
mov
je
in
imul
jg
lods
pop
nop
push
push
xchg
imul
mov
and
push
cmp
add
and
shll
nop
movsb
mov
iret
cmp
pop
adc
add
ja
rorb
dec
mov
dec
xchg
adc
cli
xchg
shrb
push
jecxz
adc
dec
loop
ljmp
das
in
xor
mov
or
or
and
mov
hlt
cmpsl
sub
mov
jb
pop
sub
pushf
jg
or
adc
nop
insl
push
fstpl
jns
or
mov
inc
daa
pop
mov
aad
adc
aam
addr16
aad
jae
sahf
fdiv
mov
imul
inc
mov
data16
lods
clc
repz
mov
jp
aaa
out
es
push
push
pop
jbe
xchg
dec
jge
cmpl
cwtl
adc
iret
jecxz
mov
call
out
or
or
and
ja
adc
hlt
ffreep
xor
push
add
cmpsb
rcl
mov
mov
mov
repnz
adc
sbb
inc
xchg
jge
mov
sub
mov
pop
movsb
adc
mov
inc
repz
lret
inc
xor
iret
pop
lock
mov
push
sub
push
fmuls
cmpsb
lea
mov
je
or
arpl
mov
jmp
and
insb
lock
adc
mov
pop
adc
js
sbb
inc
aaa
pop
lods
flds
ret
cmp
cltd
push
push
mov
out
add
xchg
aad
or
enter
test
rcll
xor
mov
shrb
pop
dec
jnp
rol
imul
in
add
mov
mov
jne
xorb
testb
shll
dec
fwait
xor
adc
repz
add
push
lods
test
push
mov
mov
inc
xor
xchg
jnp
nop
sub
stc
popa
cmp
sbb
test
mov
adc
imul
xor
lods
sub
mov
cmp
mov
popf
dec
lahf
inc
out
mov
mov
mov
inc
out
ja
int
push
or
cmp
dec
sub
inc
xchg
insb
xchg
sarb
cmp
adc
push
movb
dec
push
and
rcll
cmp
jo
pop
inc
int
xadd
bound
not
insb
mov
pop
repz
popf
testl
add
xor
aad
jbe
loopne
cmpsb
js
push
xchg
stos
pop
and
lock
stos
aam
mulb
mov
jno
dec
xor
lret
out
or
movsb
roll
inc
sub
inc
fisubl
inc
xchg
mov
or
aam
xchg
adc
pop
xor
divb
fwait
cs
sub
adc
pop
push
pop
insl
cltd
push
pusha
xchg
ljmpw
jmp
jle
mov
cli
push
xor
sbb
adc
testb
lods
dec
and
sub
push
inc
mov
jnp
mov
roll
icebp
and
fcoms
lds
jno
cmc
mov
xchg
mov
insl
sub
dec
mov
jmp
loope
dec
movsl
xchg
mov
fs
xor
xchg
movsl
pop
mov
leave
mov
lea
cmp
sarb
sti
xchg
lods
xor
jns
sbb
mov
and
stos
clc
adc
mov
loopne
fcoms
xor
aaa
push
xor
pop
in
iret
imul
adc
push
push
adc
into
jle
dec
insb
sub
push
jo
cmp
cmp
repz
and
mov
std
dec
leave
add
into
dec
negb
mov
pusha
inc
imul
xchg
sahf
push
sub
xlat
lods
nop
mov
mov
fldl
jne
cmc
or
loop
out
or
mov
mov
push
js
xchg
mov
aaa
mov
add
jns
fldcw
in
mov
mov
push
sti
lret
pusha
push
sbb
mov
sbb
add
pop
dec
push
cmp
push
fsubrs
sub
push
push
cs
into
cld
push
aaa
sbb
into
scas
or
sbb
sbb
and
test
push
dec
hlt
push
inc
and
cmp
xchg
sbb
mov
mov
push
fildl
sbb
lods
test
sub
lods
pop
fs
insl
lahf
stc
mov
subb
test
push
push
cmc
cmp
shl
add
sub
aas
fcoml
rcl
arpl
in
fs
mov
mov
jo
out
mov
inc
mov
dec
push
sbb
cmc
fdivrs
pop
push
test
outsb
neg
lods
push
ret
adc
push
sbb
in
pop
movb
and
orb
sbb
mov
int
inc
popf
out
fwait
dec
dec
out
in
push
imul
pop
gs
iret
xor
mov
push
and
mov
push
outsl
cwtl
lea
inc
loope
insl
out
xchg
and
mov
adc
cmp
or
xchg
rcll
jb
stos
cmpb
movsl
jne
xchg
pushf
xchg
hlt
out
add
cmp
out
scas
pop
push
jo
aad
mov
sahf
inc
shl
fcompp
inc
sub
add
mov
jnp
pop
addl
rorb
pop
lret
sbb
and
popa
loope
push
cld
dec
cmc
aas
xor
xlat
out
jno
xchg
out
lret
cmp
dec
mov
xor
jb
jno
les
mov
fistps
lea
lcall
push
fcomps
mov
jmp
mov
nop
stos
sbbb
mov
push
mov
adc
jo
bound
idivb
jnp
or
sbb
neg
and
push
out
in
dec
or
push
imul
dec
mov
in
int
mov
ja
lds
dec
iret
test
js
mov
jb
inc
push
sar
ret
adc
pop
jae
out
cs
push
mov
das
lcall
test
xchg
in
push
in
pop
mov
push
addr16
cmp
xor
notl
std
call
ss
in
shrl
xchg
xor
xchg
mov
jl
in
or
jnp
flds
aas
pop
pop
subl
scas
cltd
iret
xor
jb
sbb
std
adc
dec
jne
ss
sub
int3
adc
loope
int3
out
scas
lods
dec
mov
xor
cmp
clc
push
pushf
popa
mov
push
test
xor
xchg
mov
lds
xor
xchg
and
out
rol
test
rorb
push
iret
in
cltd
cs
push
enter
jle
in
mov
loope
movsl
jl
aam
lods
out
add
test
inc
lods
inc
call
mov
adc
push
inc
adc
sbb
ret
pop
add
mov
rcl
pop
add
dec
push
mov
test
pop
adc
cmp
movsl
cwtl
mov
jmp
or
or
jle
pop
mov
cli
xor
dec
aad
scas
add
adc
xchg
lcall
xor
int3
sbb
test
push
std
test
mov
popa
xchg
leave
cmp
lea
jnp
jge
daa
or
dec
jl
addr16
insl
dec
mov
mov
sahf
lahf
lcall
inc
in
fisubl
pop
mov
and
movsb
addb
sbb
lcall
out
stos
push
mov
pushf
inc
pop
mul
movsb
pushf
mov
pop
aas
in
lock
xchg
mov
ds
jge
cld
insb
pop
push
and
sbb
cmp
out
pop
xor
adc
loopne
sub
clc
jno
cmpsb
and
pusha
cmp
or
cmp
int3
cmpsb
push
add
push
leave
mov
xlat
mov
pop
inc
lods
into
es
push
sti
dec
faddp
clc
fiadds
sarb
repnz
add
test
fidivrs
not
mov
es
inc
inc
add
and
int
cmpsb
bound
cmp
mov
andb
jae
ret
mov
pushf
cli
mov
mov
mov
mov
cmp
xlat
lods
movsl
cmp
and
sbb
sub
push
mov
push
cmp
xorl
fcompl
mov
dec
mov
popf
icebp
and
sub
dec
das
push
aas
icebp
es
repnz
mov
outsl
inc
push
mov
push
xchg
hlt
mov
sbb
imul
adc
popf
sbb
lret
push
mov
jmp
pop
xor
or
cs
sahf
icebp
ss
or
aam
lds
mov
xor
in
das
adcl
mov
in
dec
int
ss
mov
fiaddl
testl
jmp
dec
addr16
dec
cmpsb
loope
rorl
mov
es
out
pop
push
in
mov
lcall
negl
push
mov
or
sarb
sbb
jnp
mov
aas
sub
push
iret
fcomps
jae
out
testl
or
jp
cltd
mov
pop
arpl
push
in
loopne
fsub
iret
push
pushf
nopl
pusha
ss
movl
int3
popa
push
add
fisubrl
push
daa
add
pusha
loopne
xchg
in
cmp
faddp
cld
mov
cli
mov
or
inc
adc
in
mov
pop
push
or
mov
sbb
imul
cmove
fisubs
ret
cli
lock
lcall
fcmovnbe
pop
cmp
or
and
mov
test
mov
pop
int
mov
enter
push
and
adc
out
and
push
xor
xor
pushf
je
pop
neg
in
mov
adc
jp
imul
cmpsl
std
dec
scas
or
nop
in
mov
jg
into
or
push
repnz
call
div
sarl
jecxz
and
popa
add
jbe
stos
push
mov
stos
das
adc
add
dec
xorb
inc
in
jle
mov
xchg
lods
popa
imul
enter
test
inc
lcall
push
hlt
xchg
aam
sub
aas
iret
inc
sub
test
cmp
lahf
add
adc
pop
ds
adc
enter
xor
push
lret
les
hlt
sub
jp
pushf
mov
pop
jno
fmull
xchg
movsb
jnp
sti
clc
fsubp
les
stos
jo
idiv
pop
xor
jne
lods
into
or
pushf
xor
loope
xchg
add
inc
sbb
push
ret
pop
leave
inc
adc
scas
sub
mov
xchg
imul
mov
mov
push
dec
hlt
les
mov
adcl
add
sahf
push
shrl
stos
int3
xor
adc
popa
add
push
push
das
mov
iret
inc
addr16
clc
rclb
sbb
mov
jns
add
insl
add
in
clc
adc
mov
loopne
or
and
cwtl
icebp
addr16
fldenv
subb
lret
xchg
jbe
xchg
jp
test
dec
dec
cmpsb
xchg
jge
adc
cli
jnp
fisubs
jl
addr16
dec
fwait
xchg
test
xor
cmp
insb
lock
cld
ds
and
pop
xchg
and
and
mov
xor
dec
add
aaa
out
ja
enter
loop
jle
movsl
xlat
rcll
ljmp
mov
or
aas
xchg
lods
push
ja
jge
xor
push
ja
jmp
sarl
nop
mov
int
jecxz
test
mov
push
push
icebp
lock
in
call
and
xor
test
or
lahf
and
or
cmp
fcompl
shlb
add
jb
adc
adc
dec
dec
mov
push
mov
stc
cmpsb
adc
sbb
aas
stos
test
mov
ds
push
inc
loopne
cmp
sbb
pop
or
ljmp
insb
ret
mov
sbb
fldenv
scas
mov
std
data16
sbb
jo
iret
push
stos
pop
add
mov
popa
cmp
icebp
lret
lret
inc
sub
push
lret
push
push
mov
std
mov
jge
dec
jbe
dec
idiv
pop
or
call
cld
cmp
jbe
lock
push
adc
jmp
lcall
sub
jns
push
jp
mov
cmp
ret
cltd
femms
fstps
or
rcrb
inc
jbe
cmp
insb
dec
dec
mov
xor
unpckhps
sub
add
movsl
pushf
in
decb
mov
pop
inc
movsb
dec
or
out
filds
out
call
shlb
daa
sbb
pop
in
lds
in
mov
enter
out
hlt
aad
frstor
leave
cs
sahf
std
cmc
fadds
insl
jl
imul
inc
xor
pop
imul
xchg
inc
imul
xor
iret
pusha
jbe
xor
sbb
jle
nop
or
jmp
jg
dec
fisubrl
mov
clc
jnp
mov
pop
orl
mov
cmp
in
sbb
fdivp
and
xchg
movsl
loop
sahf
jno
das
into
xchg
mov
fldt
sar
push
jne
repnz
sub
js
dec
xor
pusha
les
int
test
test
in
test
mov
stc
pop
mov
dec
adc
pushf
adc
add
mov
mov
stos
sub
and
cmp
push
iret
lret
pop
mov
aam
xchg
adc
push
enter
push
mov
mov
cltd
je
mov
push
in
xor
mov
cld
sbb
pop
outsb
popf
jb
notl
aas
add
mov
cmpsb
mov
mov
xchg
in
pop
sbb
lret
rcr
repnz
scas
dec
orps
test
sub
enter
ja
mov
or
push
imul
jns
clc
push
psrld
pushf
outsl
push
ret
sub
lret
mov
in
or
adc
xchg
loope
xchg
loop
jae
xchg
stc
xchg
push
nop
stc
cmp
sub
fiaddl
jns
or
push
mov
xchg
lock
jne
mov
jae
and
lods
jmp
inc
in
adc
xor
bound
fstps
les
ss
push
out
dec
loop
data16
gs
clc
movsb
call
push
clc
mov
jb
push
test
fstps
lcall
adc
fstpt
jg
enter
adc
repnz
sbbl
cmpsb
ljmp
cmp
decb
bound
rcll
xor
add
nop
mov
dec
jg
sub
and
in
ror
inc
ficomps
mov
fdivrp
or
push
xchg
ret
cmp
mov
sti
lock
fidivrl
jo
cmpsb
fsubp
and
pusha
pop
rcll
mov
mov
xor
subl
sbb
inc
arpl
mov
mov
sub
add
fistpl
lock
inc
nop
mov
inc
rorb
and
enter
cli
pop
lret
and
cwtl
push
addr16
out
test
ss
sbb
adc
pushf
mov
jl
push
stos
xor
pusha
and
mov
push
xchg
pop
cs
mov
push
jns
adc
mov
out
fisubl
pop
pop
push
ret
fmul
scas
jle
gs
std
test
lds
fstp
xchg
push
sbb
mov
aam
or
jp
jmp
notb
sahf
sub
mov
jmp
mov
out
fwait
xchg
xor
push
push
sahf
inc
jbe
fsubs
xor
mov
mov
inc
out
pop
in
and
push
lea
push
gs
xor
cmpsl
stos
out
jns
adc
out
jnp
inc
stos
stos
pop
inc
pop
loop
mov
pop
sbb
inc
ljmp
mov
xchg
mov
js
enter
xor
xlat
xor
add
je
sbb
dec
mov
or
and
fs
ljmp
call
dec
ljmp
movb
lods
or
sti
xchg
stos
aaa
pop
and
inc
inc
repnz
ja
sub
add
xor
mov
into
inc
out
add
into
lcall
lcall
add
sub
inc
and
bound
bound
cld
push
sub
pop
daa
imul
pop
xchg
es
adc
pop
push
fimull
aam
mov
mov
pop
movb
mov
cmpsb
dec
jnp
xor
inc
popf
orl
fcom
cmp
push
out
ljmp
sbb
pop
jl
test
cmp
mov
int
xor
inc
aam
addr16
loop
dec
pop
popf
out
jb
dec
fdivs
mov
push
inc
jne
xchg
cli
fwait
inc
pop
jae
jmp
xlat
rorl
lahf
pop
sub
dec
sbb
and
jb
popf
push
or
or
or
push
push
ss
cmc
imulb
ss
jle
adc
les
push
adc
mov
mov
outsb
or
inc
jmp
fdivrs
leave
sub
xchg
icebp
mov
xor
fisubrs
push
cmp
add
inc
int
jae
cmp
push
jno
mov
pop
popf
push
fcmovnb
incb
fisubs
lahf
mov
push
pop
ljmp
or
jne
xorb
adc
inc
test
push
mov
sti
and
adc
fidivrs
aam
mov
mov
lock
cli
adc
imul
fistpl
dec
in
ljmp
jle
popf
and
insl
lds
mov
xchg
aas
jmp
test
inc
add
test
lock
shr
ficompl
xchg
push
mov
fistl
pop
mov
mov
pop
call
repz
icebp
ss
aas
sbb
push
cwtl
adc
dec
sbb
dec
out
popl
dec
cwtl
std
or
or
xor
fisubs
cmpsl
mov
fdivr
das
and
cmp
mov
or
jmp
cmp
ljmp
inc
out
mov
lret
pop
hlt
push
out
inc
inc
sub
jmp
or
nop
cmpsb
xchg
test
jg
sub
int
jp
sbb
sti
jg
rcrb
add
jo
rcrb
pop
dec
mov
inc
out
hlt
pop
pop
pop
or
sbb
xor
bound
inc
fwait
adc
jl
repz
adc
mov
jl
movsb
mov
in
repnz
aas
ret
mov
jne
test
sub
add
rclb
or
mov
lods
pop
rorl
jnp
mov
out
icebp
sti
push
pop
cmp
popa
adc
icebp
shll
push
xorl
adcb
jb
test
outsb
shlb
sarl
push
leave
hlt
and
shlb
mov
sbb
stc
movsl
cmp
xchg
pop
test
cmp
jmp
lahf
aam
and
pop
and
mov
fcomi
aam
push
cld
add
bound
cmpsl
push
mov
sub
hlt
mov
jmp
adc
bound
pop
inc
mov
enter
mov
inc
pushf
jns
sub
movsb
mov
xchg
mov
lret
mov
sbb
fimuls
cmp
popf
ret
pop
dec
push
add
push
stos
push
adc
shlb
adc
push
push
stc
movsb
cmp
lods
mov
mov
jne
test
adc
adc
sahf
dec
out
push
idivl
movsb
imul
rcl
sbb
sub
mov
inc
mov
mov
or
inc
mov
jne
lret
mov
sub
mov
cmp
jl
mov
dec
movsl
mov
add
xor
dec
xor
daa
xor
mov
mov
in
pop
leave
xchg
push
fwait
rcrb
addr16
mov
jno
imul
lods
push
ljmp
insl
rolb
shlb
cmp
pop
xor
and
fists
and
mov
pop
lret
push
xchg
and
adc
xchg
cmp
popa
dec
ja
sub
mov
aad
push
loop
lods
adc
or
fsub
xchg
cmp
dec
inc
fldl
jb
or
repz
shrl
lock
daa
ror
dec
inc
add
gs
pop
popa
sub
lods
pop
jle
out
scas
imul
sbb
push
nop
repnz
stc
nop
jle
mov
js
cwtl
mov
mov
out
lcall
inc
push
test
xchg
xchg
int3
jl
fcmovne
push
ficoms
inc
sarl
insb
lahf
mov
sbb
fadd
mov
mov
ret
dec
sub
into
pop
push
mov
mov
bound
cs
inc
cli
push
xlat
out
and
cmpsl
lock
push
xor
xchg
dec
ficoml
out
and
add
xor
cmc
mov
mov
lret
fs
test
push
into
cmp
and
mov
fsubr
or
pop
and
outsb
scas
mov
cld
jge
shrl
cmpsb
into
jno
sbb
sub
mov
and
jge
or
clc
push
ret
imulb
out
rcrb
push
out
add
push
pop
xor
int3
fs
mov
imul
aas
lret
hlt
jno
sbb
mov
icebp
sub
pop
cld
sarl
cmpsb
mov
pop
mov
jmp
push
mov
adc
cmpsb
pop
cmc
mov
pop
out
fbstp
test
mov
mov
cmp
in
xor
cmp
pop
sbb
dec
stos
sarb
adc
xchg
aas
push
in
cmpsb
push
outsl
mov
outsl
inc
xor
jle
and
and
shl
push
or
lods
es
inc
sub
push
pop
dec
loope
or
movsl
repnz
repz
pop
test
pop
inc
mov
xlat
mull
in
sar
mov
pop
mov
int3
xor
mov
popa
push
dec
mov
or
fucom
xchg
adc
inc
jmp
daa
and
or
add
xlat
mov
jge
and
lock
add
mov
sub
roll
push
in
sbb
movsb
mov
jge
mov
mov
jmp
push
cmc
pop
rcrl
inc
add
jnp
jns
arpl
mov
mov
repz
or
aas
xchg
scas
maxps
rcll
ret
das
cltd
mov
gs
insl
sahf
test
mov
lret
nop
push
mov
or
sub
pop
out
and
dec
push
sub
push
sub
das
inc
mov
jecxz
lods
test
pop
mov
scas
jo
out
adc
out
xchg
pop
ficomps
or
bound
stc
js
imul
icebp
inc
lock
ret
push
and
xchg
into
leave
cli
imull
das
dec
jg
loop
outsb
shrb
addb
xor
std
adc
int
test
add
fdivrs
cmp
jae
nop
stos
lret
push
or
inc
repnz
xchg
mov
jns
dec
mov
and
mov
call
sbbb
sti
pop
cmp
inc
push
push
and
mov
sub
std
inc
sbb
fwait
mov
jns
std
loopne
cmp
or
rcl
jle
sub
adc
jo
mov
sti
push
adc
in
cltd
lret
cmp
adc
in
add
add
cmpl
notb
pushf
mov
lret
cmpsl
mov
ret
and
stos
push
inc
xlat
imul
push
mov
mov
arpl
outsl
push
and
lret
loop
add
mov
je
stc
inc
pop
push
ja
into
xchg
pop
popf
jno
push
in
rol
mov
dec
jge
sbbl
ljmp
ja
loop
mov
aam
jbe
pop
fadds
stos
adc
jnp
mov
xacquire
xor
adc
mov
or
xchg
xor
mov
dec
sar
push
jl
sbb
cmc
adc
mov
xchg
and
sub
int3
ja
test
add
stc
add
xchg
ret
inc
lcall
or
mov
fiaddl
mov
clc
jl
cs
or
xchg
int
test
shlb
push
push
dec
push
pop
lock
push
enter
cmp
aaa
pop
xor
jnp
and
add
cmpsb
push
addr16
lret
xchg
cwtl
rclb
popf
pop
pop
loop
and
into
and
pop
push
jb
daa
pushf
testl
cmp
std
int
inc
push
and
cmp
mov
sub
ljmp
loop
jge
loopne
gs
iret
push
call
out
inc
aas
jmp
shrb
xor
lret
jmp
dec
push
push
movsb
mov
pop
adc
ja
mov
mov
cld
dec
negb
rep
inc
mov
clc
cmp
mov
in
jae
xchg
outsl
cmp
sbb
jg
xor
xor
adc
mov
sahf
pop
pop
cmp
adcl
insb
ss
test
and
movsb
call
adc
mov
lcall
cmp
fmull
shrb
jnp
in
icebp
xchg
jmp
xor
rorb
lahf
push
xor
inc
xlat
out
dec
imul
jne
adc
and
sub
in
adc
mov
cmp
call
dec
fs
call
and
push
aaa
mov
cwtl
adc
mov
int
les
pop
stos
out
push
mov
movsb
jp
daa
add
lret
das
outsb
iret
scas
pop
ret
in
pop
ja
nop
sbb
sub
and
hlt
add
popl
mov
ds
xor
sbb
mov
std
fmull
fsubrs
mov
in
mov
enter
sbb
in
jg
mov
fmull
add
pop
mov
les
nop
lods
bound
add
fbld
pop
test
test
push
jbe
sbbb
mov
sub
add
out
add
insb
dec
mov
test
addb
outsl
mov
xchg
mov
inc
repnz
lds
daa
dec
jecxz
pop
aaa
imul
mov
out
imul
adc
cwtl
sub
mov
jmp
xchg
jo
loop
add
sub
sub
add
sub
in
push
test
lret
stos
lods
sub
fidivrl
push
dec
pop
push
xchg
sub
addr16
sub
dec
inc
inc
bound
mov
int3
xchg
scas
cltd
push
inc
sarb
jecxz
outsb
jne
pop
jbe
jb
pop
and
int3
push
push
add
es
inc
pop
and
pop
stos
jbe
sub
in
lock
icebp
fwait
mov
shll
in
sbb
xchg
mov
js
ljmp
and
sbb
mov
adc
shll
int
ja
mov
cmpsb
push
push
pusha
lret
fcomps
jg
loop
loope
bound
jo
add
mov
aam
into
pop
sbb
pop
or
in
jo
push
and
cmp
aaa
pop
sub
movsb
repz
bound
cwtl
ds
mov
cmpsl
xchg
jo
lock
js
cmp
pop
sbb
add
int
xchg
clc
xchg
adc
mov
xchg
adc
leave
int
adc
int3
mov
ficoms
dec
mov
test
xlat
in
mov
lret
xor
std
cmpsb
inc
rorb
sub
out
sub
jle
arpl
andb
mov
outsl
adc
mov
or
sub
mov
push
xchg
jb
mov
shr
dec
rorb
xor
sbb
push
scas
inc
out
add
aaa
cmp
cmpsb
lds
push
pop
in
pusha
aaa
mov
inc
cmpsb
xchg
cmpsb
hlt
cmc
hlt
pop
mov
loope
xchg
mov
or
dec
iret
jmp
outsb
cmp
sbb
add
pop
or
insb
addb
out
lods
lret
sub
pop
jle
mov
ficomps
sub
test
pop
stos
daa
adc
sub
mov
movsl
mov
outsl
icebp
pusha
lods
out
ds
sbb
cmp
push
fildl
sbb
jecxz
in
inc
jle
xor
dec
sahf
sbbl
popa
jmp
jo
out
ja
mov
fwait
adc
adc
sbb
dec
push
or
push
iret
pop
je
xor
push
inc
cmp
insl
jne
gs
xchg
add
push
push
in
jmp
icebp
adc
push
sbb
xchg
out
dec
rclb
cli
sub
push
xor
push
fiadds
adc
push
enter
jge
fdivr
in
push
inc
xlat
sbb
push
pop
std
rcll
xchg
or
jle
cmc
jge
add
dec
mov
sub
sbb
jb
mov
sahf
insb
push
shrl
repnz
xchg
dec
or
jb
je
mov
iret
shlb
outsb
setp
add
or
movsb
pop
xchg
ficomps
fdecstp
loope
mov
ret
xchg
lods
out
cld
sysenter
and
inc
xchg
mov
adcb
dec
ret
pop
add
sub
cmc
repz
aad
sub
fisttpl
mov
insb
sbb
pop
xchg
les
popf
gs
cwtd
pop
lret
cmp
sti
imul
insl
push
aas
push
pusha
mov
push
repnz
mov
push
inc
sti
call
aaa
xchg
data16
aaa
pop
inc
mov
stos
dec
cli
imul
cmp
iret
cmp
movsb
push
stos
jne
fdivr
ret
push
nop
sub
imul
push
das
pop
in
cmp
imul
mov
sbb
fstpl
and
daa
dec
mov
ds
inc
cld
adc
mov
in
cmpb
sub
sub
in
adc
mov
xchg
mov
adcb
xchg
sbb
aam
stc
popa
addr16
into
and
lcall
sti
and
mov
fisttps
pop
xchg
arpl
adc
sbb
mov
in
popf
cmp
cmp
pop
dec
and
cmpsb
mov
xchg
std
out
leave
fs
notl
xchg
test
pop
fidivrl
add
push
fsubs
push
out
inc
mov
mov
sarl
xchg
xchg
dec
dec
les
mov
into
movsb
fdivs
sub
mov
js
js
loopne
int3
push
lea
sub
jp
ds
out
aam
adc
xchg
add
addl
mov
adc
jbe
ret
das
xchg
je
jmp
data16
es
pop
cmp
xor
cmp
sbb
mov
push
cltd
sarl
lock
lret
rorl
pop
cmpsb
sarb
cmp
test
pop
outsb
shlb
push
cmp
loop
or
hlt
imul
jmp
mov
js
int
hlt
push
mov
add
pop
cmp
mov
iret
push
movsb
movsl
sub
cmp
xlat
popf
push
push
addr16
or
xchg
add
xchg
inc
arpl
xor
rolb
sub
in
xchg
scas
jne
fcoms
dec
push
stos
push
mov
dec
pop
adc
mov
clc
inc
mov
sub
js
inc
jecxz
rorl
enter
push
lea
imul
jp
mov
xchg
xchg
pop
cmpsb
xchg
push
popf
icebp
sbb
stos
push
ds
call
fnstsw
mov
adcl
in
ds
and
add
xor
icebp
mov
cmp
push
jp
jle
adc
outsl
fsubs
sbb
add
mov
xchg
in
pop
xchg
lock
loope
lods
roll
push
into
push
xor
popa
cltd
cmp
add
pop
xchg
addb
jge
test
sahf
ds
imul
popa
or
stos
cmp
int3
aaa
jnp
arpl
mov
lret
pop
jo
mov
add
and
test
dec
add
cmp
xorl
pop
iret
dec
fwait
mov
jl
mov
leave
dec
scas
xchg
mov
nop
aad
insl
enter
stos
mov
fdivs
lcall
mov
cmp
sub
cmp
aaa
lret
imul
test
ret
or
sub
pop
mov
sbb
push
jmp
daa
stos
icebp
jl
or
lock
push
int
pop
test
or
xor
sahf
cmp
sub
inc
ja
loop
jle
rol
dec
mov
repnz
push
sub
call
scas
sbb
or
pop
pop
negl
mov
adc
pop
lods
xchg
xor
pop
mov
mov
push
cmp
imul
pop
inc
adc
outsl
lock
nop
sub
cmp
xchg
fsubrs
jle
aad
or
das
jnp
push
incl
repnz
mov
test
int3
movsb
mov
xchg
xor
scas
push
push
fcmovu
ds
mov
jae
pusha
loope
inc
lahf
xchg
xchg
inc
lret
test
sbb
push
xchg
pop
and
mov
mov
incb
xor
aad
mov
mov
xchg
addr16
mov
cmp
imul
lret
les
or
out
xchg
repz
inc
add
mov
xor
cmp
pop
in
movsl
mov
sbb
fs
pop
mov
push
add
jb
imul
xor
mov
outsl
dec
scas
pop
sbb
inc
lret
scas
xchg
mulb
jnp
popf
pop
pusha
scas
shl
pop
outsl
push
xchg
or
test
test
xchg
out
fwait
scas
sti
jle
mov
mov
out
movsl
add
add
add
fst
push
or
int3
push
push
pop
jecxz
xchg
test
dec
add
mov
dec
dec
xchg
inc
popa
mov
je
sub
xor
js
pop
aas
push
movsl
fst
out
adc
and
push
xchg
popa
add
lcall
lret
jecxz
sub
jle
enter
fldl
sub
adc
sbb
lret
push
shl
or
addr16
testl
cmc
adc
lods
xor
bound
les
lods
in
and
inc
outsl
cmpsl
stos
cmpsl
or
scas
mov
loopne
push
mov
cwtl
dec
rorl
dec
jg
cmpb
add
push
jns
gs
xchg
sahf
inc
sarb
repz
mov
adcb
cld
ds
push
inc
mov
cmp
jne
cmp
push
movsb
cwtl
dec
xor
pop
cmp
inc
pop
ror
sbb
out
sarl
out
push
cmpsl
adc
shrl
jnp
lret
push
cltd
loope
push
inc
scas
pop
pop
adc
push
cltd
xor
mov
imul
pop
orb
dec
inc
test
push
or
mov
push
push
int3
int
fstl
stc
fs
sub
mov
inc
inc
or
mov
or
cs
mov
mov
aas
call
out
or
outsl
jns
mov
loopne
pop
cmp
rcrl
sbb
aas
rorl
push
enter
in
repnz
addr16
test
pop
mov
stos
mov
push
lods
xchg
push
arpl
or
cmc
pop
jg
int
xchg
lods
xor
xorl
fs
imul
daa
in
pop
inc
jo
mov
mov
and
sbb
xchg
insb
rorl
or
lret
stos
out
clc
arpl
ds
test
leave
test
bound
jbe
fwait
inc
in
popa
mov
stc
fcoml
xor
cltd
das
lcall
mov
test
adc
and
mov
fdivrs
repz
pop
jne
xchg
lcall
mov
pusha
pop
xchg
xchg
inc
pusha
adc
rcl
add
shl
push
fdivrl
xor
cmpsl
cmp
lret
jecxz
xor
stc
stc
pop
cmc
mov
lahf
fidivl
adc
cmp
or
push
jb
xchg
ret
pusha
or
cmp
pop
xor
mov
mulb
cltd
and
in
sahf
adc
jl
push
mov
icebp
popl
mov
mov
test
mov
xor
out
out
aam
ret
cmp
adc
das
gs
inc
fmul
and
lahf
xor
movsb
repnz
cmpsb
push
fwait
xchg
or
mov
mov
cltd
xchg
scas
cmpb
sbb
xchg
xchg
add
mov
mov
int
rcrl
fstps
cmp
dec
loop
and
mov
push
out
aaa
pop
jno
sbb
pop
dec
inc
jmp
dec
outsl
andb
inc
push
dec
pop
or
push
mov
lahf
sbb
mov
les
enter
pop
xchg
out
in
sbb
pop
sbb
cwtl
pop
sub
test
aas
fcoml
cltd
pop
out
xor
mov
jb
sbb
lret
cmp
cs
cmp
popa
xor
jp
pop
pop
fdivrl
ror
xor
popf
xchg
sar
cltd
xlat
mov
push
inc
fwait
inc
pop
add
pop
fstpl
mov
cmp
push
aas
adc
fstp
dec
sbb
div
add
or
dec
mov
outsl
cli
mov
pop
pop
movsb
add
add
test
jnp
shl
add
mov
ja
adc
insb
push
mov
sahf
movsb
inc
jb
popf
sbb
jg
mov
mov
imul
cmp
add
lds
scas
sbb
dec
pop
mov
add
pop
jno
dec
scas
aam
dec
cli
enter
andl
das
add
or
cmpsb
mov
mov
aad
dec
and
adc
cwtl
inc
gs
push
and
ja
mov
add
inc
out
mov
inc
insb
lods
xchg
add
loop
sbb
ss
jne
inc
fwait
into
cmpsl
repz
out
mov
iret
pop
movsb
dec
push
out
fs
nop
jmp
sahf
loop
adc
sbb
bound
rol
mov
jg
xlat
daa
mov
pop
ficompl
fcomi
in
mov
int3
mov
sti
jae
and
lcall
cmp
xor
int3
pop
pop
cmp
shll
mov
inc
out
adc
enter
leave
lods
out
fwait
sbb
jl
in
shll
cmp
das
and
repz
or
or
adcl
ds
sbb
mov
sahf
mov
scas
mov
dec
stos
jecxz
arpl
xchg
call
mov
cmpsb
jae
cmp
and
dec
cli
mov
insl
gs
ret
mov
adc
popl
pop
inc
dec
lods
xchg
mov
mov
push
jecxz
out
xorl
dec
cmp
jbe
stos
cmp
or
cwtl
adc
push
adc
loope
pop
int
in
add
cld
push
test
push
inc
jne
out
mov
popf
jns
sub
inc
mov
jnp
daa
push
fwait
in
pop
jns
fcomi
dec
aam
mov
addr16
fnstcw
in
cmp
and
stos
popf
sub
mov
mov
mov
mov
pushfw
ror
sub
cmc
icebp
push
sub
ds
mov
rorb
repz
imul
dec
int3
sub
add
cmpsb
mov
or
cmp
enter
inc
or
push
add
aaa
loopne
lcall
add
mov
iret
or
pop
mov
inc
rcrb
cmp
popf
nop
or
arpl
mov
push
and
fstpt
and
mov
xchg
loope
hlt
int
or
fldenv
ret
or
pop
shrb
jecxz
testb
fs
sub
sbb
sub
je
jecxz
outsl
daa
roll
dec
mov
lock
cmp
cmp
inc
sbb
ds
sti
xlat
popa
int3
jbe
jle
nop
sti
cmp
lcall
mov
std
push
dec
pop
xchg
test
call
push
scas
test
sahf
loope
dec
xchg
cltd
sbb
in
xchg
lods
jp
ror
xor
add
sub
ja
sbb
or
pop
xchg
enter
fstl
div
rolb
ss
cmp
gs
shlb
sbb
mov
mov
adc
testb
clc
ds
and
fmulp
jle
xchg
fidivs
stos
mov
mov
mov
fldt
pushf
jne
pop
cmp
out
mov
pcmpgtd
or
xor
iret
dec
push
adc
out
jmp
outsb
or
mov
or
xchg
mov
xorl
sahf
mov
call
nop
pop
cwtl
or
push
js
aad
sarl
in
add
xchg
pop
mov
out
pop
ljmp
add
mov
out
in
jo
lcall
jnp
and
xchg
arpl
add
iret
sub
jecxz
inc
jle
jl
dec
enter
sbb
lds
fisttpll
cmp
pop
ljmp
test
dec
jecxz
jmp
lds
cmp
int3
jmp
cmc
in
inc
xorb
fwait
ss
out
mov
xchg
jecxz
jecxz
add
shlb
ret
aas
fdivs
call
mov
fsub
push
dec
push
adc
push
jmp
rcrb
test
cld
stos
pushf
pop
leave
icebp
inc
mov
inc
mov
xor
pop
sbb
xchg
in
or
xor
sub
jnp
sub
out
mov
pop
lret
dec
sti
mov
call
xor
push
and
lods
adc
jo
loop
jge
jmp
cmp
pop
sbb
sub
or
sub
fisttpll
mov
sub
mov
jp
test
inc
out
test
pop
push
pop
cld
scas
call
xor
in
mov
mov
in
or
sbb
js
and
jle
push
popf
push
fmul
in
jne
push
out
scas
popa
add
loopne
iret
inc
mov
mov
bswap
mov
or
push
jae
test
mov
ss
ljmp
jne
ret
mov
js
aas
aad
and
pop
in
pop
movsb
or
test
cld
call
dec
scas
mov
cld
xchg
jbe
outsl
pushf
movsl
mov
pop
pusha
cmp
movb
sbb
clc
insl
inc
nop
mov
out
xchg
add
scas
jge
sbb
pushf
mov
mov
jle
lret
inc
fldcw
add
sub
add
call
dec
xchg
jmp
adc
out
rorl
inc
sub
fcomip
xor
mov
jg,pt
mov
push
ret
push
jno
mov
loope
in
jne
mov
push
test
cwtl
fldl
inc
inc
adc
clc
jp
cld
dec
fisubrl
popf
loop
iret
mov
lds
jne
sub
out
pushf
lds
sbb
lods
add
aad
data16
cmp
mov
mov
ja,pt
jl
xchg
popa
xchg
fwait
insb
pop
mov
pop
sub
xor
mov
enter
pop
mov
mov
in
mov
out
dec
cmpsl
cmp
jae
jecxz
in
mov
in
mov
lods
fcmove
mov
jo
aas
mov
imulb
inc
fiadds
pop
iret
sbb
xchg
sub
cmpsl
mov
in
jns
daa
inc
aas
mov
mov
jg
pop
daa
inc
and
mov
outsl
jg
std
add
mov
mov
divl
insl
int
nop
into
cmpsb
es
xchg
and
pop
hlt
mov
adc
mov
or
dec
lea
xor
or
add
mov
or
data16
dec
and
push
insb
fistpl
jmp
popa
push
sti
mov
add
pop
or
subb
enter
lahf
cld
enter
stc
gs
adcb
jl
mov
ret
push
mov
mov
enter
sbb
repz
je
lock
fidivrl
jns
test
cmp
and
mov
jmp
sbb
dec
add
lods
mov
call
bound
mov
ds
mov
stos
cmp
pop
insb
dec
fwait
cmpl
testl
dec
cmpsl
mov
mov
xchg
fcmovne
sbbl
dec
in
jno
popa
sbb
lcall
imul
loop
and
rcll
shlb
clc
sbb
jno
xchg
mov
ja
xchg
sub
cmpsl
test
mov
mov
cvtdq2ps
xchg
xchg
mov
sbb
lods
pop
fcmovne
pushf
out
sub
dec
loope
mov
stos
fs
test
xchg
jecxz
ss
into
rorb
push
add
iret
xor
mov
xchg
jp
pop
pop
test
or
int3
mov
push
les
adc
and
fcompl
hlt
in
cmp
lret
push
fnstenv
je
loop
pop
pop
push
add
mov
mov
xor
pop
mov
cltd
and
xchg
jbe
mov
jecxz
sub
sti
push
push
andb
aaa
xorb
push
xchg
out
imul
stos
popa
out
movsl
inc
mov
test
adc
movsb
jp
push
sub
or
mov
push
dec
add
lahf
cli
sub
ficoml
pop
iret
lds
rolb
sub
ss
fsubs
pop
adc
test
lods
imul
xchg
pop
cmpsb
pop
ret
aad
fs
shr
jmp
cmpsl
mov
jmp
and
pusha
leave
jecxz
ds
sbb
arpl
sbb
cs
lock
mov
aaa
mov
or
leave
adc
es
mov
dec
data16
data16
push
push
out
jl
inc
es
daa
je
stc
in
or
fst
aas
mov
cmp
in
mov
and
dec
shrl
cli
mov
ja
inc
ds
jne
xchg
push
push
les
pusha
outsl
arpl
push
shll
or
rcl
rcrb
and
lods
and
cmp
loop
jmp
inc
lret
jle
cld
pop
inc
or
imul
pop
sbb
cwtl
mov
or
scas
stos
xor
cmp
dec
mov
lahf
es
sbb
out
cmc
pop
or
test
movsb
jae
mov
arpl
scas
rcl
jo
in
xbegin
pop
fcmovnu
mov
push
jo
daa
mov
jle
jl
adc
cmc
mov
cli
xor
jle
das
xchg
or
in
shll
lds
inc
adc
fucompp
movsb
lods
lods
or
cmp
stos
jg
and
pop
sub
push
lods
pop
leave
jo
sub
pop
adc
out
dec
xor
in
adc
int3
cmpsl
addl
push
xchg
dec
xor
das
mov
xor
fisubl
cmpb
in
pop
loope
pop
lods
es
and
fadds
lock
cmp
or
call
jle
fucomip
pop
mov
mov
lock
inc
fs
add
loopne
fdivrs
std
jnp
insl
push
xor
inc
jge
punpcklbw
test
push
or
mov
into
jge
das
repnz
add
rcrb
mov
mov
jmp
jo
jg
xchg
ret
pop
ds
insl
cmpsb
in
imul
subl
add
mov
aaa
push
jae
movsl
jmp
inc
xchg
cmp
pop
sub
jg
addr16
lock
inc
inc
pop
mul
sbb
fcmove
setne
loopne
pop
addr16
test
inc
xchg
hlt
xor
pop
jne
mov
insl
push
jnp
rcrl
sbbb
f2xm1
or
cmp
sbb
js
cmc
and
int
push
push
mov
push
xor
xor
aas
xor
imul
push
dec
jle
pusha
xor
inc
mov
repz
pop
sbb
and
cmpb
inc
inc
or
jo
xchg
rclb
jg
add
idiv
xchg
fcoms
and
pop
and
lods
pop
adc
jg
movsb
push
sarl
adc
add
push
arpl
fstps
or
and
imul
sub
mov
dec
aaa
sub
dec
jmp
add
scas
mov
cmp
add
push
dec
call
rcrb
mov
int
mov
lea
je
and
pusha
sbb
adc
inc
shrb
cmpb
aad
pop
dec
gs
or
sub
stc
ljmp
jbe
mov
aaa
cmp
out
icebp
insl
dec
into
loope
mov
in
push
mov
or
push
mov
jnp
es
mov
xchg
sbb
or
lods
cmp
cwtl
inc
jne
lcall
out
push
out
aas
adc
ja
nop
add
sub
pop
jge
fwait
or
decl
ficompl
jecxz
leave
decb
and
push
jl
xor
shll
adc
cmp
cmc
pop
movsb
push
test
adc
lahf
sub
lret
scas
fs
inc
mov
dec
sbbb
cmp
xor
lea
rcll
mov
mov
aad
adc
lds
sub
fimuls
sub
clc
imul
das
add
or
mov
xchg
setne
jne
push
cmp
inc
out
test
dec
dec
cld
fdivrl
cmp
lock
outsl
outsb
int
push
outsl
add
add
fs
les
dec
xor
clc
cmp
xchg
mov
jbe
out
nop
ja
pop
gs
push
jmp
add
pop
inc
jge
jno
xlat
mov
push
icebp
mov
jns
mov
test
leave
or
int3
test
sub
xlat
popa
fimull
xchg
jns
push
mov
jo
sub
ja
pop
lods
push
mov
add
sti
andl
hlt
popf
mov
sbb
inc
int
or
cld
adc
js
clc
mov
dec
leave
scas
ffreep
and
lahf
pop
push
adc
xchg
lret
mov
xchg
rcrb
scas
push
arpl
shrb
push
adc
fadds
sbb
cmp
sub
push
imul
popa
fildl
fs
sub
int3
cs
pop
fcompl
out
xor
adc
push
js
cmp
rcrl
xchg
add
xor
inc
lret
inc
gs
aam
sub
add
lds
and
clc
push
iret
mov
xor
add
jge
daa
sbb
dec
repnz
pop
push
aam
inc
nop
rorl
mov
sbbb
cmp
fimull
xlat
lret
mov
cmpsb
mov
mov
in
pop
adc
rol
sqrtps
add
jle
hlt
fimull
lahf
mov
inc
mov
lods
sbb
test
sahf
mov
pushf
xor
popa
test
mov
push
adc
divl
out
movsl
cwtl
dec
iret
stos
pop
add
jb
cld
sbb
iret
sti
push
mov
data16
shr
jl
mov
sub
insb
daa
mov
adc
scas
stos
in
sbb
dec
rcrb
fstpl
sub
popf
das
jle
movb
movsb
jnp
std
jnp
add
inc
mov
cltd
jbe
js
jg
into
pop
jb
mov
or
icebp
repnz
adc
jge
flds
pop
or
cs
jecxz
fcompl
mov
cwtl
xchg
or
sub
hlt
jns
push
jno
leave
jle
aas
inc
fs
sahf
dec
xchg
pop
sbb
jge
stos
out
sbb
inc
mov
adc
ret
inc
adc
push
std
jb
pop
mov
jl
jne
ret
sbb
imul
ficoms
dec
mov
sbb
add
movsl
sahf
add
cmp
pop
jb
mov
push
cmp
add
mov
jne
mov
scas
or
popa
jns
stc
mov
fists
pop
and
fcmove
sarl
daa
jb
xchg
out
cmpb
sub
jb
or
loop
icebp
fsubl
lods
or
dec
addr16
test
lret
cwtl
aaa
jmp
dec
mov
xchg
jmp
lret
clc
xorl
mov
ss
inc
iret
rcr
fistpll
mov
aas
jo
inc
cmp
add
cmc
ret
jns
popf
cwtl
sub
out
movsb
sahf
mov
mov
fbld
xchg
cmp
xlat
pop
xchg
lods
sahf
out
xchg
lret
loope,pt
xor
adc
xlat
aam
mov
xor
jge
out
into
and
pop
scas
jno
test
ja
cld
cli
mov
icebp
add
movsl
pop
mov
jns
mov
in
cltd
stos
xchg
push
dec
icebp
pop
leave
sub
jmp
and
in
sbbb
jle
mov
aam
xor
sub
jl
jb
mov
cwtl
ljmp
hlt
jbe
mov
sahf
push
lahf
or
jae
jecxz
orb
pop
call
movsb
je
stos
shrb
das
mov
sbb
sub
inc
cltd
scas
addr16
subb
inc
rorl
jge
movsl
scas
nop
cs
fbld
ss
mov
pop
jno
mov
mov
jbe
xchg
or
lret
faddl
sub
push
aas
cmp
and
xchg
and
loop
pop
push
addr16
movsb
fcompl
jnp
aad
arpl
xchg
rcrb
mov
xchg
xchg
popa
mov
insb
enter
push
dec
mov
les
sub
sub
sub
inc
dec
xor
stos
ret
filds
jp
mov
sbb
pop
sbb
mov
jle
pusha
daa
inc
sub
clc
and
mov
xor
xchg
push
out
nop
sahf
pop
inc
sarl
clc
scas
dec
adc
and
sti
pop
push
shrb
jno
out
stos
jae
fmul
nop
mov
push
inc
mov
cmpsb
mov
das
jl
jl
int3
mov
gs
aas
jmp
cwtl
cmp
lcall
dec
nop
pop
sahf
stc
sub
ret
cwtl
pop
ror
fwait
jmp
test
mov
pop
adc
inc
cs
fimuls
stc
je
stc
fidivs
xchg
push
mov
dec
mov
inc
xchg
dec
add
aaa
jg
xorb
sbb
pop
lret
xchg
cs
sbb
mov
xchg
aam
sahf
adc
mov
mov
lea
ret
xchg
cmp
mov
sahf
imul
fbld
in
and
jl
jg
dec
pop
sub
fisubrs
int
cmc
jno
sub
fdivr
lods
dec
push
in
sbb
movsl
jge
ljmp
sbb
aam
outsb
jae
jbe
or
lret
jae
fdivrs
pop
arpl
adc
inc
cwtl
xchg
cs
dec
and
mov
int
push
mov
sub
out
dec
pop
sbb
or
mov
loop
popf
test
repz
gs
pop
int
in
mov
dec
mov
jo
cmpsl
and
daa
xor
stos
enter
jo
cmp
add
ret
push
aad
inc
cmp
fucomi
rcr
xchg
cmp
inc
aas
pusha
inc
mov
jp
ljmp
push
loope
lcall
add
ficoms
pop
mov
cmpsb
icebp
inc
cmp
mov
sti
ja
dec
jmp
jb
sbb
inc
sahf
push
inc
mov
gs
push
lcall
push
pop
je
add
pop
and
pop
xchg
cmp
pop
push
mov
push
fistpl
sbb
in
cmc
into
pop
push
out
stc
mov
push
icebp
add
xlat
enter
mov
adc
pop
xlat
je
and
ror
mov
sti
test
mov
outsb
cmp
std
cld
lret
sbb
insb
or
jno
stos
jp
pop
je
cmp
flds
aad
fisubl
cli
and
lods
insb
inc
insb
and
sub
gs
mov
lock
xchg
iret
jns
lret
mov
jbe
pop
fcmovnbe
pop
hlt
sub
push
adc
and
cltd
inc
movsl
adc
bound
sub
sbb
jae
mov
mov
xchg
aad
sbb
jl
insl
pop
xor
dec
add
into
les
jecxz
sub
adc
hlt
mov
shlb
mov
insl
jmp
shll
or
dec
cmpsl
ss
mov
cltd
push
orb
xchg
push
ret
test
jb
pop
jecxz
sbb
mov
add
mov
pop
out
out
mov
mov
sub
sub
push
out
push
push
and
cmp
pop
add
vsqrtpd
mov
inc
aam
clc
adc
push
int3
mov
add
je
and
pop
mov
or
inc
jbe
dec
or
inc
adc
jb
mov
jecxz
xchg
dec
dec
pop
ja
cwtl
sub
les
std
pop
xor
notl
push
mov
in
lea
push
jb
and
pop
sub
out
in
icebp
fisttpl
movsb
pop
shlb
fistpll
imul
lds
mov
stc
mov
aad
or
imul
stos
mov
jo
sahf
fistpll
inc
adc
pop
fsubrl
pop
push
xchg
mov
and
lahf
or
inc
shl
or
pop
jecxz
je
rclb
lock
jp
cltd
adc
pusha
scas
mov
mov
pop
adc
out
pop
aas
addr16
incl
popa
repnz
je
push
push
jo
xor
jno
mov
rol
mov
movsb
imul
and
gs
xchg
negb
add
ficomps
pop
in
cmp
add
nop
lahf
push
pop
or
sbb
stos
push
push
mov
or
jne
ds
cmpsb
test
add
lret
pop
mov
pop
sub
out
rcrb
movsl
lahf
or
inc
and
mov
je
adc
not
pop
cmpsl
mov
int
das
rcrl
mov
cmp
fcoms
jl
sahf
iret
pop
js
dec
aam
jno
and
cmp
add
cmp
gs
mov
orb
cli
sbb
sbb
mov
addb
add
sub
and
loopne
sarl
in
ret
in
sub
cmp
movb
aam
stos
add
mov
adc
cmpsb
lods
mov
mov
jl
dec
mov
outsb
lret
outsl
loope
popa
test
and
push
insl
push
dec
pop
fcmovne
mov
test
mov
cmp
sbb
cmpsl
dec
xor
dec
imull
divl
xchg
enter
sub
xor
dec
jno
and
inc
lods
dec
and
add
aaa
sahf
mov
mov
jno
and
lret
adc
sub
jb
pop
xor
push
mov
mov
xlat
and
enter
vpslld
mov
and
loop
insb
stos
orl
loop
fwait
dec
int
cwtl
pop
outsl
enter
movsb
mov
imul
dec
xlat
cld
cmp
push
addb
and
sub
adc
xorl
lret
in
mov
mov
dec
dec
lods
xor
pusha
loope
mov
in
mov
xor
aaa
jecxz
test
imul
sahf
and
int
and
jbe
adc
jge
mov
mov
push
dec
lret
sbb
add
xchg
jge
mov
js
shr
test
pop
lds
xor
jg
and
sub
and
sbb
in
lret
and
adc
add
movsb
movsl
cld
mov
mov
loope
cmp
imul
cmp
daa
lock
insb
inc
repz
jge
sub
inc
arpl
stc
sub
push
cltd
sub
cmpsb
cmpsl
sbb
aad
or
push
add
add
mov
aaa
jae
mov
aaa
jecxz
lods
or
adc
cld
stos
push
and
cmp
lret
push
add
mov
jecxz
push
cmp
mov
lcall
jecxz
fs
aaa
test
xor
cwtl
insl
pushf
xor
dec
mov
leave
pop
outsl
mov
or
and
ret
sti
aam
lods
mov
stos
in
test
es
adcl
cmp
fs
in
mov
sbb
std
out
stc
ficoms
xchg
push
inc
out
sar
dec
pop
movsb
lock
push
jg
test
cmp
rcrl
dec
jmp
jne
lret
inc
outsb
mov
or
mov
scas
cmpsl
loop
jge
popa
mov
cmp
push
out
jns
add
mov
xchg
pop
push
bound
dec
inc
in
dec
cltd
hlt
pop
mov
pop
mov
in
arpl
fmuls
jnp
lret
test
mov
dec
into
jae
sbb
arpl
std
cmpsb
push
push
xchg
adc
xchg
mov
out
push
jno
std
mov
adc
mov
push
movsb
out
sub
push
movsl
cli
flds
jb
cwtl
inc
mov
ss
clc
lods
pop
clc
pop
jmp
xchg
jecxz
clc
dec
xchg
mov
fbstp
xor
loop
scas
lock
cmp
jmp
mov
test
and
adc
gs
bound
fistps
cmc
push
and
push
fldl
insl
sbb
mov
sbbl
outsb
adc
mulb
sub
xor
fstp
xor
inc
lret
push
aaa
rolb
rcl
gs
gs
call
fldcw
mov
cmp
mov
pop
pop
mov
std
sbb
jmp
lock
shll
jnp
pop
mov
mov
pusha
dec
xor
mov
stos
in
lods
xchg
dec
loopne
add
push
mov
mov
and
mov
into
mull
push
cmpsb
push
xor
or
inc
sub
xchg
cmp
movsb
loopne
cmp
pop
js
enter
jno
movsb
lahf
lds
jge
and
in
inc
scas
xor
mov
cltd
and
aaa
fs
cs
aad
imul
cmp
sahf
cld
imul
cmp
call
lock
mov
nopl
scas
addr16
pop
and
in
sbb
push
mov
or
xchg
int3
mov
xchg
inc
jle,pt
mov
cmp
xchg
dec
and
or
int3
jle
jge
aas
jmp
fistpll
addr16
call
pop
dec
mov
ds
addb
sbb
mov
dec
out
lods
jne
sbb
pop
pop
insb
decl
mov
hlt
imul
push
addb
lds
sbb
xchg
add
cli
or
insb
mov
jno
xchg
jle
dec
adc
add
sbb
mov
add
xor
ja
loope
sub
fsubs
sub
out
pop
xchg
dec
xchg
ret
inc
jecxz
mov
lods
sub
push
push
sbb
xor
or
pop
out
shrb
decb
or
xor
mov
das
push
leave
in
cmpl
addr16
mov
lds
mov
repnz
sub
and
pop
popf
inc
pushf
push
orl
pop
xor
jg
push
cmp
inc
stos
add
pop
push
mov
sbb
jle
out
rcl
push
je
add
rolb
xchg
out
test
jb
data16
aas
or
cmp
lods
and
aam
ss
pop
out
loop
jo
stc
in
out
cltd
or
pop
addb
mov
test
movsb
stc
gs
inc
pop
dec
fucom
enter
pop
aaa
xchg
xchg
ja
out
movsl
loopne
or
clc
in
nop
sub
dec
xchg
dec
adc
adc
mov
sarb
push
cmp
push
insb
out
push
shrb
orb
insb
shlb
xchg
pushf
pop
sub
lcall
in
push
cli
subl
insb
push
pop
mov
mov
std
imul
shrb
in
lods
xor
test
xor
push
loopne
add
adc
and
jl
mov
dec
dec
mov
mov
fistpll
sti
outsl
xchg
popa
imul
inc
xchg
dec
adc
aam
push
ret
jne
and
cmp
fcompl
int3
cmp
jg
add
push
jae
imul
out
adc
divb
jg
dec
xchg
or
jb
lret
test
loopne
add
pop
imul
pop
mov
push
mov
loope
ret
jl
sub
das
mov
jns
add
sbb
int3
jno
push
mov
outsb
xchg
inc
rcl
ss
mov
sarl
or
xor
pop
adcb
add
add
jl
xor
pushf
outsb
aaa
int
adcl
adc
stc
fstps
adc
xchg
sbb
dec
loop
xor
es
mov
ja
push
jecxz
mov
lods
adc
sbb
or
xor
jne
sahf
push
enter
cmp
stc
cmc
xchg
lea
movsb
sub
aas
mov
mov
fld
aas
mov
pop
add
push
adc
in
adc
or
int
sbb
shr
inc
add
in
rolb
xchg
stos
enter
dec
mov
push
mov
mov
hlt
jle
add
cli
je
add
jo
fistpll
ljmpw
jl
and
nop
movsl
ret
mov
mov
push
or
and
mov
ljmp
stos
repz
xor
inc
hlt
ret
add
stos
inc
out
inc
cltd
sbb
lahf
pop
jle
mov
xor
dec
rolb
dec
test
rolb
rorb
mov
pop
int3
lods
inc
je
mov
jge
dec
lahf
enter
jg
stos
or
xchg
out
or
add
lcall
dec
inc
test
insl
pop
jns
fmull
out
add
sbb
jl
sbb
imul
jp
fstpt
movsb
test
sbb
inc
sets
xorb
cmp
sbb
addr16
xlat
mov
dec
movsb
cli
mov
dec
nop
push
lea
xor
int3
ret
and
mov
fcmove
cmc
mov
inc
fwait
sub
add
inc
roll
mov
pop
enter
pop
adc
ror
or
int
arpl
aas
push
xor
testl
mov
scas
pop
mov
adc
mov
cld
inc
stos
xchg
adc
arpl
clc
mov
add
daa
dec
mov
xchg
stc
mov
fldt
mov
or
mov
jae
lock
jmp
and
in
push
push
and
add
or
jmp
add
rcr
loop
mul
and
repnz
popa
push
xchg
idivb
insl
int
scas
mull
test
das
and
das
add
mov
pop
add
loope
popa
jo
push
out
jno
and
popa
pop
fcoms
mov
mov
test
gs
xchg
jno
faddl
sti
cmp
cmc
gs
jecxz
loop
fdivs
scas
enter
rclb
pop
and
nop
jmp
sahf
daa
lahf
icebp
adc
daa
push
jg
mov
scas
jecxz
add
dec
inc
xor
add
xor
sbb
mov
sbb
nop
aam
cmp
mov
pop
jge
rolb
add
sub
addr16
data16
or
fsubr
cmp
push
jae
shl
push
int
cmpsl
fsubs
fcmovne
add
push
xchg
add
movsl
in
enter
pop
in
aaa
les
sbb
xor
rcll
cwtl
jnp
push
jnp
out
loopne
add
popf
repnz
push
lea
leave
leave
ret
shll
mov
fwait
pusha
mov
push
dec
push
jg
movl
add
fldenv
sub
jb
aam
mov
dec
addr16
jp
xchg
movsl
pushf
fucomip
gs
mov
dec
add
push
insl
push
or
mov
xor
int3
cli
dec
jne
je
mov
leave
iret
pop
ljmp
fldenv
mov
sub
xchg
jge
push
xchg
mov
xor
mov
add
sub
insb
mov
jb
pop
es
into
daa
add
stc
dec
sub
outsl
jmp
mov
pop
popf
mov
xlat
pop
cmpsb
mov
ss
mov
inc
mov
xor
xchg
sub
jle
js
cld
jae
in
or
and
nop
lds
cld
int
fdivl
xor
sbbl
imul
adc
stos
insb
inc
mov
jle
jbe
xchg
call
cs
pushf
mov
scas
mov
and
adcl
mov
push
jmp
lahf
or
fidivrl
lods
stos
lcall
bound
inc
push
add
sbb
notb
push
mov
add
fcomps
loopne
mov
popf
test
sub
aas
push
dec
test
jmp
pushf
ss
mov
cwtl
imul
jl
repnz
jg
repnz
and
jecxz
adc
mov
insl
testb
cmp
call
mov
test
ffreep
mov
dec
sti
pop
dec
adc
enter
push
or
movsl
test
decb
aam
add
shrw
dec
iret
sbb
jg
adc
pop
xor
stos
sub
ret
xchg
into
or
inc
mov
popa
xor
in
mov
loope
cmpl
sub
xchg
repnz
repnz
mov
dec
andl
mov
out
xlat
xor
adc
out
xchg
scas
cli
and
mov
adc
push
mov
push
pop
adc
das
mov
iret
mov
xchg
roll
push
push
es
shll
inc
adc
pushl
fsubp
mov
add
test
in
aaa
cmp
fxtract
int
sti
addr16
sub
shl
adc
inc
pop
jbe
pop
xorb
jge
pop
push
push
mov
or
inc
mov
xlat
repz
lcall
insl
jmp
subl
jle
and
out
mov
mov
aaa
loop
push
pop
popf
popa
fstps
loope
lods
and
xor
nop
pop
jbe
add
mov
jle
xchg
add
insl
pop
popa
inc
mov
adc
adc
inc
xchg
xchg
mov
cmp
mov
mov
dec
icebp
fs
jecxz
pop
adc
fucomp
cmc
pop
jns
adc
scas
roll
xchg
xlat
cltd
cmp
xchg
inc
test
cs
lods
sbb
out
xor
mov
das
stos
push
push
es
ds
call
mov
inc
push
test
xlat
icebp
rorb
xchg
inc
inc
push
out
test
add
adc
hlt
dec
into
ds
xor
adc
mov
gs
adcb
outsl
push
add
nop
dec
xchg
rolb
mov
testl
or
push
adc
cli
loop
dec
jl
pop
movsl
jae
mov
pop
pushf
test
add
mov
lock
cmpl
mov
imul
mov
je
and
mov
sbb
fadds
clc
pop
imulb
lret
enter
dec
jne
sub
inc
in
js
pusha
jnp
sub
orl
mov
pop
ds
cli
sbb
cltd
or
jle
hlt
mov
xchg
repnz
mov
inc
jo,pt
add
xchg
movsl
repz
jl
push
clc
inc
add
pusha
or
dec
shll
es
or
popf
and
cld
cmp
add
leave
sub
sub
aad
and
imul
fs
and
cwtl
outsb
jnp
arpl
pusha
cmc
mov
or
inc
pop
test
cmpb
imul
and
or
movsl
pop
cmc
and
jle
add
sbb
orb
and
push
ljmp
jl
inc
sbb
and
inc
jnp
cmp
call
adc
jno
call
sahf
out
jns
shrl
or
mov
sub
cmp
outsb
or
inc
cs
scas
cmpb
adc
xor
scas
aam
lods
mov
pop
push
lock
add
lock
mov
aas
imul
mov
je
xchg
pop
push
mov
scas
xor
pop
pop
cmp
rorl
stos
les
mov
jne
popa
dec
and
xor
insb
out
aas
pusha
ret
in
pop
fimuls
pop
push
mov
test
rorl
xchg
clc
jae
add
jne
lea
fldl
mov
and
xor
add
lret
sbb
push
pop
add
pop
lcall
mov
or
into
jg
jg
xlat
mov
shr
jge
mov
rorl
and
decb
rorl
stc
mov
addb
adc
out
push
jl
push
mov
mov
lock
cmp
pop
push
movsb
add
dec
pop
pop
xchg
xor
push
sbb
loop
jbe
mov
aaa
sbb
inc
daa
scas
and
test
xchg
xchg
mov
and
dec
push
orl
or
sbb
repz
push
cli
mov
call
inc
aas
rcrl
dec
cmp
xchg
cmp
xchg
fbstp
mov
jge
xchg
cmpsb
inc
in
popa
adc
leave
mov
dec
jns
add
jae
fnstcw
dec
push
loope
mov
xchg
dec
xchg
dec
lods
push
cld
jg
sub
inc
add
loop
lods
subl
push
push
adc
add
outsl
and
mov
ret
outsb
add
inc
icebp
shl
inc
stc
or
adc
cltd
mov
in
or
pop
push
sahf
or
mov
mov
cmpsl
pop
outsl
mov
pop
jl
test
jg
mov
xchg
mov
scas
lcall
lret
dec
jl
jbe
mov
adc
mov
fnstcw
sub
adc
jno
rep
mov
mov
mov
jg
sub
adc
or
gs
cwtl
shlb
lret
jmp
int3
push
push
sub
xor
lds
dec
cmpb
movsl
pop
add
divl
int3
int
negb
loope
mov
fucomp
jle
enter
inc
sub
adc
repz
or
pusha
hlt
add
or
mov
cwtl
idivl
popl
inc
mov
in
adcb
ds
or
repz
rol
cmc
push
cwtl
mov
and
testb
pop
outsb
icebp
out
into
push
cld
nop
pusha
adc
into
xchg
addr16
mov
rclb
popl
jbe
mov
stos
xchg
adc
push
mov
cs
arpl
mov
sub
or
adc
mov
les
stos
insl
fxch
pop
lcall
scas
sbb
lods
bound
dec
sti
adc
and
ss
mov
cmpsl
add
add
mov
pop
mov
shr
jno
ss
lock
stos
mov
lods
adc
add
insb
popf
push
loope
fsubrl
sub
movsb
int3
add
leave
out
aad
dec
orl
dec
sysexit
pusha
xorb
pushf
jmp
sbb
iret
jle
sub
scas
xor
jle
inc
iret
daa
aam
je
mov
mov
xor
test
rolb
push
je
dec
and
and
cmp
scas
and
xor
pop
arpl
enter
pop
iret
xor
xor
dec
pop
lock
add
enter
xlat
hlt
mov
ja
bound
cwtl
dec
lahf
aam
shlb
ret
jl
xchg
cmp
pop
pop
sarb
lock
push
inc
roll
mov
in
pop
fdivrs
outsb
pushf
fisubs
pop
push
nop
xor
xchg
inc
inc
out
dec
imul
inc
fwait
or
in
inc
imul
in
es
mov
addr16
dec
jno
rolb
outsl
dec
std
fwait
pusha
les
ret
push
sti
clc
shr
incl
mov
push
out
sub
daa
testl
add
adc
jmp
clc
add
loopne
gs
fs
pusha
dec
dec
inc
cmpsl
sti
mov
andb
lret
add
xor
pop
and
nop
pop
je
cmpl
daa
and
push
mov
cmpsb
mov
cmc
sbb
cs
decl
sub
int
adc
lods
inc
adc
in
gs
rorl
and
lret
out
and
mov
jae
ficoml
out
cltd
mov
sbb
mov
nop
fldl
ficoms
data16
mov
fdivp
sti
xchg
dec
out
fwait
loope
mov
das
pushf
pop
mov
add
call
pop
icebp
fidivrl
out
push
mov
mov
xchg
fiadds
les
xchg
pusha
mov
lods
in
xor
insb
pop
cltd
cmp
rorl
imul
loop
mov
loopne
rolb
iret
int
int
mov
mov
pusha
sub
ds
outsl
testl
sub
pop
adc
mov
adc
mov
fs
call
adc
insl
mov
stos
das
xchg
mov
push
dec
xchg
dec
in
inc
jb
cmpsb
adc
or
pop
xchg
cmp
sub
pushf
jmp
cmp
repz
mov
xchg
dec
int3
push
mov
and
xchg
push
bound
mov
enter
loop
inc
dec
cmp
cmp
jno
mov
mov
jecxz
xchg
insb
lret
and
mov
notb
jne
mov
add
or
out
in
add
es
sbb
sbbb
jno
or
cmpsb
add
lret
add
pop
pop
lea
aaa
ret
repnz
lods
xchg
sub
add
out
mov
cmpl
push
xchg
idivb
ror
jae
shl
fstps
or
jg
pop
sbb
sub
test
and
xorb
jae
aaa
xchg
cli
push
insb
adc
in
call
insb
fistpl
push
call
jecxz
addr16
pop
mov
out
adc
cmpsl
xor
xorb
mov
cmp
lret
lds
cld
movsb
call
xlat
mov
rcll
outsb
adc
sbb
iret
outsb
outsb
pop
cmp
scas
loopne
xor
mov
jns
lret
xor
add
xor
pop
mov
adc
adc
loop
les
cmpsb
loopne
sbb
sbb
push
sub
fmul
popf
dec
add
xchg
xor
incb
dec
xchg
imul
into
dec
ljmp
int3
jg
xchg
push
jle
lahf
out
ret
sbb
mov
cltd
and
out
dec
lcall
nop
xorb
jne
mov
ficoms
inc
push
data16
sbb
push
ret
rcl
popf
loopne
mov
dec
loop
add
inc
loop
adc
adc
test
incb
fists
sub
push
xchg
aaa
adc
add
repnz
mov
lods
cld
rcll
inc
int3
sbb
adc
dec
popf
xlat
stc
sahf
lret
cli
les
jl
imul
cmp
repnz
movsb
incb
pop
xor
popf
je
inc
movsl
mov
out
xlat
sub
sub
loopne
repz
fcoms
les
mov
popa
mov
addr16
sub
arpl
pop
subl
int
push
push
push
mov
popf
lods
add
xchg
divl
ret
mov
jmp
mov
inc
loopne
into
push
or
aad
and
fucomp
in
js
cmpsl
std
loop
xchg
insb
shr
repnz
sub
lock
xchg
push
mov
loopne
out
sbb
sti
mov
out
xlat
pop
negb
dec
into
mov
negb
dec
es
add
out
movsb
sarl
add
rcl
in
shll
lret
cmp
or
fdivs
dec
out
ret
add
dec
lcall
rcll
pop
cmc
fsubl
test
jmp
inc
mov
mov
or
sub
sub
daa
inc
cli
adc
sbb
js
outsl
subl
xchg
fnstsw
aad
test
mov
cld
inc
mov
jp
or
inc
test
pushf
lret
ret
xchg
icebp
add
push
mov
mov
fimull
pop
int
xchg
xchg
popf
adc
lods
mov
cmp
inc
xlat
mov
jp
pop
and
mov
push
mov
add
fistpll
pop
ss
test
mov
icebp
dec
mov
jmp
mov
or
mov
jg
xchg
inc
mov
pop
dec
and
mov
mov
add
pop
ja
sbb
inc
shl
arpl
cmpsb
fwait
cli
js
cmp
aas
hlt
cs
and
mov
pop
jb
add
xchg
dec
bound
jo
inc
outsl
arpl
mov
cmp
jmp
lcall
jg
test
mov
repnz
fidivl
xor
mov
sbb
dec
ja
mov
and
subl
mov
dec
out
cltd
jno
aaa
cmpsl
ret
stos
call
addr16
in
out
das
mov
int3
aam
push
movsl
push
cmp
out
mov
repz
sbb
sub
mov
add
stos
sub
jmp
das
dec
pop
and
jmp
aaa
int
ljmp
inc
iret
or
cmpsl
loop
cmp
rcll
rorl
leave
imul
out
adc
xchg
sbb
in
mov
adc
lea
inc
jecxz
ss
mov
xor
mov
jns
xlat
push
stos
sbb
dec
jae
jae
jae
xchg
push
mov
pop
mov
aas
xor
add
jb
jbe
in
out
lds
pop
cli
test
cwtl
push
lds
xor
int
mov
xchg
or
aad
outsb
aas
rcll
fsubr
jne
gs
jb
das
leave
cmp
scas
pop
js
mov
adc
std
fistpl
pop
scas
and
mov
inc
mov
pop
aad
lcall
cmp
jge
mov
lcall
icebp
sub
xchg
sub
sub
leave
mov
ljmp
fistpl
jge
dec
sbb
xor
stos
xchg
jae
scas
push
stc
push
jbe
nop
loope
push
cmp
lahf
aas
cmova
loope
lods
pop
dec
xor
add
xorl
xor
lret
add
in
mov
daa
or
cmp
pop
inc
jae
bound
mov
sub
icebp
lock
lret
dec
dec
rorb
jo
adc
push
ljmp
jl
jb
cmp
stc
jmp
sub
mov
add
inc
loope
dec
jbe
sub
mov
jns
dec
lock
adc
leave
sub
cmc
mov
pusha
mov
jb
push
test
mov
js
pop
sbb
cmp
pop
mov
imul
pop
jb
push
movsb
push
lahf
mull
pop
mov
cmpsb
mov
push
mov
stos
dec
xlat
aas
test
dec
out
lock
and
or
imul
outsb
or
and
cli
cmpsb
pop
test
jo
outsl
mov
in
xchg
add
pushf
mov
std
pop
testl
add
cmp
and
cld
rcrl
imul
mov
outsb
adc
dec
jno
cwtl
icebp
cld
es
mov
insl
cld
lahf
or
sahf
adc
cld
scas
and
xor
adc
xchg
mov
jle
or
les
and
lret
dec
data16
add
inc
push
push
hlt
inc
repnz
pop
scas
enter
push
aas
into
hlt
mov
cmpsb
test
lds
scas
sahf
sbb
out
in
mov
int
push
inc
jae
std
gs
sahf
sub
xchg
arpl
loop
pop
rcr
xchg
lret
jg
cwtl
cli
mov
mov
sub
inc
scas
sub
scas
add
icebp
imul
sub
cmp
pop
pop
mov
inc
lahf
les
jecxz
stos
clc
fdivp
mov
sub
push
dec
push
fs
cmpsb
pop
fidivrl
out
insb
inc
pop
scas
jmp
mov
hlt
jns
mov
push
and
inc
leave
jns
adc
dec
pop
jne
addb
pop
cmp
mov
jae
leave
pop
test
cli
dec
call
enter
xor
xor
mov
push
mov
leave
mov
mov
scas
mov
xor
call
fbstp
fsubs
push
dec
sarb
xchg
sbb
mov
mov
leave
inc
sahf
jne
fnsave
xlat
add
push
pushl
push
imul
inc
cmp
sbb
lahf
fxch
pop
cmp
jno
xlat
shlb
pushl
mov
dec
outsl
add
cli
xchg
adc
aad
mov
fists
insb
lcall
mov
xchg
iret
add
dec
adc
fwait
movsb
xchg
jbe
movsl
fcompl
adc
test
test
inc
test
push
out
cmc
jl
mov
nop
sub
mov
jl
or
push
mov
sbb
jo
mov
jns
scas
mov
scas
or
pop
popf
push
nop
out
stc
adc
mov
pusha
int3
call
inc
sbb
fbld
cmpsb
ja
fdivl
pop
insb
adc
movsb
cmove
cs
dec
les
add
arpl
scas
pop
andb
xchg
ljmp
mov
mov
nop
mov
push
cltd
xchg
repz
add
gs
adc
mov
cltd
jg
in
mov
pop
sbb
push
push
jp
or
loop
in
sub
jle
cmp
mov
xor
pop
sbb
sti
lret
fcmovb
jae
ja
cld
mov
and
cmpsb
ja
pop
add
pop
aam
fists
push
xor
movsl
out
movd
imul
movsl
pop
push
insb
cmc
push
cmp
dec
sbb
sbb
jp
xchg
sbb
adc
sbb
inc
fwait
jo
cmpsl
cli
or
or
cmp
dec
adc
mov
sbb
mov
sbb
mov
mov
xchg
into
jbe
fcmovnb
fldt
lret
daa
fidivs
std
lds
rclb
jne
cld
push
andl
mov
and
mov
lods
notl
mov
fldcw
xchg
popf
stos
out
pop
lods
mov
jb
nop
subl
pusha
outsb
or
cmp
sub
enter
pop
fsubl
xchg
lret
pop
mov
adc
mov
xchg
ljmp
cld
insl
dec
fsub
add
mov
mov
mov
and
lods
push
pusha
xchg
pusha
lods
inc
rol
sub
xor
sahf
mov
xchg
fdivr
test
aam
push
push
push
cmc
mov
xchg
scas
pushf
and
sbb
out
pushf
add
push
mov
mov
std
dec
rol
adc
insl
ret
adc
pop
xlat
jbe
mov
mov
out
mov
mov
xor
sbbb
or
inc
call
aam
push
jg
scas
cmp
jle
insb
mov
adc
lea
out
mov
gs
scas
fisubl
mov
nop
xor
push
pop
xor
sub
push
and
cmp
lahf
movsb
repz
sahf
aam
push
mov
xor
push
int3
inc
xchg
ret
push
mov
add
push
xor
test
pop
inc
popf
cmpsb
pop
jno
cmp
enter
addr16
lret
inc
rcl
mov
mov
test
mov
and
push
lea
jecxz
mov
in
popa
xchg
enter
mov
adc
mov
sarl
arpl
push
xchg
shll
into
pusha
dec
lods
mov
movsb
mov
call
sub
push
xchg
fldcw
pusha
repz
cmc
loope
xchg
stos
cmp
jmp
inc
neg
dec
nop
cld
mov
pop
adc
nop
adc
and
jo
cli
push
sub
cmpsl
sub
push
call
flds
sti
push
idivl
and
add
dec
shrl
movsl
xchg
popa
pop
test
movsb
scas
addl
and
loop
aad
adc
pop
xchg
mov
push
test
sub
jnp
jl
sarb
sbbl
cmpb
movsb
xchg
outsl
lret
pop
adc
cld
or
add
movsl
mov
pop
xlat
ja
mov
or
jb
and
mov
movsl
out
int3
sub
push
lcall
mov
mov
add
pushf
mov
pop
mov
idiv
popa
or
daa
sub
mov
mov
iret
test
ja
mov
xchg
aas
xor
cmp
lods
sub
jne
les
dec
inc
mov
push
mov
test
shll
int
enter
outsb
adc
lock
or
and
jno
loopne
scas
fnstenv
add
lock
pushf
mov
out
dec
cltd
ficoms
xchg
bnd
outsb
insb
sub
xchg
and
out
xchg
loop
pop
inc
mov
add
inc
push
cmp
inc
sub
inc
mov
rcrl
fidivl
stos
or
int3
pop
sahf
mov
ja
aad
push
icebp
popf
les
jp
daa
imul
daa
out
adc
lds
shrl
inc
jb
mov
inc
cmpsb
rolb
insl
mov
inc
sbb
icebp
push
adc
scas
or
mov
cwtl
aad
popa
mov
push
pushf
cmp
in
stos
ss
dec
push
nop
xchg
call
xor
js
sti
aad
cmpsb
sbb
push
jb
bound
popa
stos
xchg
mov
in
push
out
mov
dec
push
in
dec
xor
adcb
xchg
sub
or
ret
xchg
test
int3
pop
sti
lcall
cld
xor
and
xchg
cmp
aaa
inc
inc
sub
sub
mov
inc
stos
xor
sbb
out
cli
js
ret
adc
pop
xchg
stc
and
xor
jge
std
jge
pop
cs
push
push
js
xor
xor
jle
sbb
lcall
mov
sti
lods
xchg
cmp
jnp
mov
mov
inc
xor
test
jae
lods
icebp
rcrl
xchg
dec
negl
js
scas
mov
addb
adc
cs
cmpsl
idiv
mov
shrl
out
cltd
stc
adc
inc
repz
add
pop
sub
sbb
xor
call
push
mov
mov
xor
repnz
test
das
mov
rorl
js
jp
and
aas
test
divl
xor
cmpsb
or
mov
xor
ret
cmpb
cmp
scas
in
and
add
dec
ret
popf
jmp
dec
pop
or
push
mov
aas
jecxz
shll
inc
in
aam
int3
mov
test
push
jnp
leave
mov
outsl
popa
je
push
int3
push
cmp
test
xchg
stos
sbb
lock
jb
les
inc
imul
cmp
mov
movsb
into
in
ret
je
dec
cmpsb
repz
lret
sub
out
add
pop
mov
insl
jle,pn
xchg
adc
sub
and
cwtl
inc
mov
leave
mov
fisttpll
pop
ret
movsb
popa
stc
popa
out
push
inc
or
add
push
sbb
or
dec
and
xor
sbb
test
mov
lods
and
jge
adc
dec
popf
pop
xchg
or
insb
mov
mov
js
loop
cmpsl
jne
inc
sub
mov
ret
jne
repnz
sbb
xor
cltd
xlat
push
jecxz
pushf
stc
add
setb
ss
sarl
ss
xor
and
mov
add
jns
out
xor
xor
addl
ljmp
scas
dec
int3
dec
sti
xchg
or
mov
pop
mov
daa
pop
lods
push
enter
cmova
shll
divb
dec
mov
addr16
sub
and
sbb
adcl
cmpsl
pop
cli
aam
and
mov
jne
addr16
push
popa
xor
insb
pop
lods
lods
shrb
popa
cli
add
xor
jmp
sbb
movsb
or
scas
or
lods
push
aas
pop
xor
les
out
inc
push
mov
xchg
pop
std
inc
jge
push
jns
pop
daa
push
mov
bswap
je
cwtl
repnz
shrl
xchg
cmc
jo
mov
and
adcb
fnsave
xchg
ljmp
fdivs
sub
dec
insl
jge
push
idivb
inc
push
stos
lock
sbb
pop
and
sub
rcrl
ret
fsubp
push
shlb
nop
lahf
fsubl
mov
lock
jno
into
xor
jp
mov
xor
mov
mov
push
cwtl
mov
scas
aas
adc
popf
add
adc
addb
rcll
jae
jle
xchg
rorb
clc
fcoml
aas
das
sbb
dec
je
and
cltd
fstpl
js,pn
sbb
xchg
das
jle
cmp
lcall
js
cltd
push
inc
adc
fidivl
xor
lods
cld
sti
mov
lret
sbb
sbb
cld
insl
push
jae
push
mov
dec
jns
fs
pop
fldt
mov
xor
jbe
cld
roll
sub
inc
adc
dec
xor
adc
sti
pop
mov
sbb
xorl
sub
mov
test
gs
push
sbb
mov
dec
repnz
ret
andl
lods
sarl
aaa
loopne
shl
outsb
xor
js
push
adc
insb
adc
xchg
adc
inc
leave
mov
push
imul
adc
and
push
pop
mov
fstpl
test
in
push
sub
rcrl
fnstenv
pop
dec
xchg
adc
lods
pop
sbb
je
aam
dec
dec
add
and
fdivr
shr
into
mov
add
xorb
dec
pop
add
loopne
xor
jns
push
fisubs
dec
jbe
int
rorb
rorb
and
mov
into
cmpsl
adc
out
push
xor
repnz
jg
push
push
adc
jno
dec
bound
inc
mov
sub
push
jo
shrb
jl
mov
lock
cmpsl
push
inc
push
cmpsl
mov
xchg
fldenv
dec
enter
sub
lret
insl
push
pop
icebp
fldcw
pop
clc
adc
loope
add
lods
shlb
sub
lock
fisttps
and
scas
inc
or
mov
fnstenv
stos
in
nop
cwtl
stos
stc
repnz
sub
adcl
jmp
xchg
mov
arpl
data16
add
repnz
mov
movsl
shrl
xlat
dec
sub
mov
clc
fdivs
stc
lock
xchg
push
dec
inc
scas
repz
sti
mov
jmp
negb
xor
jp
lea
pop
adcb
add
stos
bound
dec
cli
xchg
idiv
adc
mov
sub
mov
insb
imul
push
xorl
ficoml
adc
xchg
push
and
sub
dec
sub
xchg
movsl
mov
lret
cmp
pop
js
inc
push
cmp
xor
mov
fadds
mov
stc
fwait
icebp
insl
jo
lds
inc
scas
lahf
inc
mov
push
pop
or
ljmp
aaa
ljmp
jb
icebp
cltd
cltd
mov
sbb
jge
scas
test
arpl
fdivrp
cltd
push
hlt
and
add
xlat
movsl
adc
fcomps
aas
add
or
scas
rclb
jne
movsl
and
mov
gs
and
lret
or
scas
outsb
adc
pusha
mov
mov
xchg
dec
push
leave
pop
and
add
mov
jecxz
pop
inc
and
cmpsb
sub
popf
inc
int
xor
xor
mov
in
mov
mov
sbb
inc
sbb
sbb
xchg
call
dec
mov
out
or
loopne
add
imul
adc
imull
aaa
lret
mov
ret
in
jb
bound
outsb
icebp
pop
mov
add
imul
sti
aad
cmp
sub
ficoms
leave
ss
jle
mulb
or
mov
adc
sahf
test
outsb
add
and
adc
or
cld
daa
das
sarl
pop
sahf
outsl
dec
loop
orb
push
jnp
outsl
mov
ror
loope
stc
push
push
fdivrl
mov
mov
xor
push
sbb
test
rorl
hlt
sub
lahf
push
lock
pop
pop
adc
and
div
loopne
or
mov
pop
aaa
inc
mov
and
mov
and
push
inc
adc
push
pop
inc
mov
and
cmp
scas
sub
test
std
xchg
test
jle
adc
add
clc
xchg
scas
inc
mov
dec
xchg
aad
aaa
add
jge
lret
lock
icebp
clc
inc
out
or
roll
je
xorb
and
leave
popa
jno
or
push
adc
mov
pop
mov
mov
dec
push
les
fists
pusha
pop
aam
ror
xchg
loop
xchg
insl
sar
out
and
js
sbb
jae
lea
call
mov
jns
gs
xchg
cmp
bnd
movsb
pusha
mov
pop
inc
cli
sbb
les
sub
add
adc
mov
scas
fisubl
arpl
dec
addr16
or
xchg
xchg
dec
dec
mov
ret
jge
push
and
cmpl
enter
lcall
add
jle
adcl
hlt
ljmp
mov
mov
add
fildll
dec
sbb
sbb
cmp
sub
mov
repnz
adc
out
push
add
xor
xlat
jecxz
jg
in
dec
dec
jne
sbb
push
push
lds
dec
or
pop
fcomip
lods
test
adc
add
pop
xor
lods
dec
inc
pop
in
daa
out
add
in
outsb
inc
nop
mov
popf
inc
push
push
daa
js
orb
lds
add
cld
mov
hlt
in
into
or
loopne
into
movsb
pop
ss
pushf
and
mov
xchg
test
add
add
insb
cmp
aaa
adc
jb
cmp
mov
sub
push
test
push
ds
mov
gs
movsl
mov
xchg
xorl
mov
es
mov
pop
and
orb
out
mov
arpl
gs
loopne
addl
mov
mov
push
lea
inc
mov
bound
out
std
push
imul
dec
std
jne
out
pusha
rclb
and
cmpb
in
inc
nop
inc
add
jecxz
fistps
pop
pushf
mov
inc
pop
mov
movsl
or
lahf
pusha
xchg
mov
mov
sbb
mov
aaa
mov
inc
call
bound
lret
aas
sub
into
inc
and
add
mov
inc
jg
das
mov
mov
push
subl
push
movsb
jg
loopne
outsl
lahf
adc
adc
repz
mov
outsl
daa
xchg
mov
icebp
lock
sub
mov
adc
pop
sbb
and
inc
sub
dec
lret
pop
fmuls
cmp
test
mov
leave
mov
out
xchg
cmp
stos
sub
sub
inc
dec
aad
sbb
rolb
push
call
jge
sbb
and
mov
out
pop
mov
jo
ret
cli
and
jg
test
xchg
mov
jo
ss
aaa
sbb
push
addr16
dec
fidivs
lods
sub
xchg
cltd
cmp
shl
call
cmp
mov
mov
stos
jae
cmp
sub
test
movsb
sub
mov
inc
pop
mov
in
cmpsb
test
repnz
repz
jb
ss
loope
push
adc
cld
xchg
fidivrl
iret
sti
jl
dec
dec
stc
fwait
xchg
sbb
mov
pop
sahf
or
mov
push
adc
das
rclb
jo
aad
add
mov
ret
jae
pushf
mov
mov
fsts
cmp
jmp
xchg
bnd
movsbl
in
cmpsb
dec
mov
lahf
imul
jb
adc
rorb
orb
mov
push
fs
loopne
nop
mov
stos
and
xchg
pop
rcl
inc
sub
cmp
pop
stos
dec
adc
dec
pop
jmp
pop
not
jne
mov
inc
pop
adc
loop
test
out
mov
sub
mov
stos
out
dec
imulb
mov
jae
adc
cmp
cmp
test
test
push
mov
scas
dec
sub
hlt
mov
cli
enter
out
xchg
jae
push
ret
lret
int3
cmp
add
in
xchg
es
inc
dec
mov
mov
jo
in
aaa
fwait
cmpsb
out
inc
ja
or
inc
xchg
data16
push
cs
daa
or
pop
scas
mov
les
lods
cwtl
dec
pop
xor
fnstenv
fisubs
adc
push
jl
mov
jns
inc
mov
sub
jge
add
cld
in
push
pop
fists
or
fwait
es
push
sbb
mov
cwtl
das
xlat
cltd
imul
test
cs
sub
xor
jl
pop
and
inc
aam
sub
test
mov
lret
mov
sub
stos
jmp
repnz
js
ja
in
add
push
push
dec
loop
xchg
jae
loope
sub
iret
xor
lea
push
das
int3
jo
into
in
outsl
mov
mov
inc
or
jns
jno
pop
orl
in
sub
aam
pop
popa
fimuls
jb
inc
cltd
sbb
or
and
shl
jmp
iret
inc
movsl
popa
flds
dec
ret
and
xchg
out
xor
repnz
adc
data16
lcall
mov
adc
test
xchg
rcr
in
arpl
pop
mov
mov
and
jp
add
gs
lock
push
call
divb
int
cmp
stos
sub
inc
xchg
sub
adc
jp
out
aas
sub
enter
aaa
int
and
jecxz
popf
in
out
ja
mov
or
enter
pop
clc
in
xchg
popa
pusha
scas
jle
jecxz
cld
cmp
outsl
jge
mov
iret
add
insb
test
jl
mov
stos
xchg
mov
mov
xor
cs
xchg
fiaddl
inc
adc
iret
dec
and
xor
and
icebp
ds
adc
pop
adc
rcrb
out
xor
mov
movsb
roll
std
dec
dec
sub
and
cs
iret
mov
xlat
int3
pop
loope
add
mov
adcl
inc
push
movb
call
fimuls
xor
lods
das
or
adc
and
cld
push
jo
in
cmp
or
pop
or
insl
lods
add
shlb
xchg
push
or
movsl
pop
mov
mov
and
sahf
adc
and
repnz
ret
sti
dec
dec
jmp
push
ficoms
jl
mov
idiv
es
cmp
popa
mov
add
or
nop
pminub
or
loop
imul
xor
jp
pop
jns
jge
xchg
add
ss
pop
or
mov
jmp
call
sahf
pop
ja
xor
adc
pop
sub
xor
mov
fisttps
sti
dec
adc
scas
loope
aas
jge
sub
out
cmp
pop
pushl
mov
popf
in
lcall
push
xor
bound
movb
or
aam
iret
push
loopne
mov
or
push
out
mov
scas
and
test
xchg
mov
mov
cmp
jmp
sbb
sub
push
fwait
mov
stc
push
inc
mov
iret
je
sbb
and
shrl
fucomp
adc
pop
mov
inc
fmuls
jecxz,pt
iret
imul
xlat
inc
test
insl
bound
pop
mov
xor
pop
push
sub
push
sahf
out
pop
lcall
push
fwait
jne
and
cmpb
jbe
mov
decl
ss
mov
rorb
jae
lahf
shll
cmp
movsb
lods
aad
scas
out
loope
or
mov
bound
movsb
mov
clc
cmp
jo
dec
and
divb
imul
cmp
mov
cmc
mov
add
push
xchg
inc
mov
jb
mov
out
lahf
cmp
xchg
nop
inc
add
mov
add
mov
cli
dec
cmpsw
xorb
sar
mov
out
fldt
mov
aaa
push
rcll
repnz
pop
push
jmp
xor
jne
add
mov
inc
lods
sub
and
stc
leave
and
stos
cld
inc
add
mov
hlt
push
mov
or
test
xchg
mov
mov
callw
loopnew
gs
js
lahf
pop
movl
and
cltd
shlb
adc
push
adc
cli
inc
mov
gs
loop
popa
std
rclb
call
mull
xor
int
in
clc
add
mov
mov
testl
orl
jb
repnz
callw
lds
mov
rcll
push
cltd
popf
dec
loop
pop
add
popf
or
ss
in
arpl
dec
xchg
adc
ss
mov
lret
and
int
ja
in
mov
pop
sub
mov
mov
jl
fnclex
pop
clc
popf
inc
das
cmp
mov
adc
xchg
cmpsl
cli
fs
jb
and
dec
test
jo
jo
add
out
pusha
pusha
sub
and
xchg
aas
int
test
in
add
aad
test
sub
inc
jp
mov
movsl
ret
loope
lcall
movsl
inc
jge
adc
jl
jne
testb
jne
adc
ret
mov
scas
mov
push
das
shrl
jns
push
mov
jo
test
test
pushf
or
lret
adc
push
or
rcrl
aaa
mov
add
xchg
and
xor
xchg
jb
add
mov
int3
and
mov
mov
stc
mov
jmp
inc
adc
in
xrelease
adc
cwtl
fwait
push
dec
pop
sbb
jae
loop
cmp
das
leave
ficoms
xor
movsb
scas
movsb
pop
pop
ficompl
adc
push
enter
jnp
push
addr16
mov
incl
xchg
pop
das
aam
pop
pop
in
cmp
mov
imul
mov
fildl
iret
pushf
push
xor
imul
aad
movsb
lods
mov
es
pop
sub
mov
add
scas
pop
mov
mov
push
lcall
shrb
arpl
lods
cld
aas
ss
scas
xchg
js
xchg
mov
cmpsb
dec
adc
mov
xor
cltd
cltd
xor
pop
adc
sub
cmp
jmp
mov
cmp
push
ja
jne
mov
mov
stos
lahf
mov
pusha
sub
aam
inc
sbb
or
mov
movsb
jmp
mov
cmc
mov
in
pop
dec
imul
out
std
lret
mov
pushf
outsl
inc
lret
mov
orl
inc
aam
sub
cmp
lret
ret
and
cli
lcall
pop
call
iret
popf
sub
or
in
out
mov
xchg
out
mov
lods
pop
data16
leave
dec
popf
repnz
mov
inc
push
inc
lret
mov
sbb
jnp
movl
test
mov
dec
data16
mov
jnp
iret
ja
pop
jb
shrl
mov
jnp
mov
movsl
pop
popf
test
sbb
loop
sar
add
fdivr
push
daa
into
testl
pusha
adc
pop
inc
popf
pop
das
adc
loop
ret
loopne
test
add
pop
mov
push
ret
jg
ret
push
mov
push
test
mov
jbe
mov
les
mov
imul
jo
jmp
int
aam
sbb
lahf
cmpsl
sbb
xchg
test
movsb
mov
leave
stc
ret
dec
or
aad
out
insl
addr16
mov
jl
pop
xchg
adc
push
add
aam
int3
sbb
push
pop
pop
outsb
push
lret
movsb
outsb
xor
scas
xlat
mov
mov
mov
sbb
push
shl
or
int
adc
sbb
xor
sbb
daa
inc
pop
fcmovbe
mov
fwait
test
sub
pop
hlt
cs
adc
lods
mov
push
or
dec
sbb
xchg
xchg
call
dec
lcall
es
fsubp
test
sbb
aas
push
pushf
add
mov
rolb
xchg
pop
sub
std
negl
sub
ss
mov
mov
xor
push
sbb
in
xchg
sub
mov
addl
je
daa
or
xchg
outsl
push
in
mov
fsubrl
out
cli
imul
aas
and
jne
or
movsb
stos
inc
mov
and
add
jb
sub
dec
fs
rorb
dec
loope
and
rcl
cmp
fmull
imul
scas
cmpb
mov
mov
adc
adcb
sub
dec
add
jge
adc
shl
nop
dec
fcoml
fs
or
cmp
popf
inc
les
inc
lcall
js
movsl
lcall
jecxz
repnz
xchg
cmp
jo
mov
pop
dec
sarl
ss
shrl
faddl
push
imul
cmp
inc
dec
std
or
add
xchg
fbstp
std
add
icebp
cwtl
push
in
lods
ret
fwait
cmp
push
xlat
sbb
and
and
push
xchg
insl
pop
jmp
es
std
jmp
xchg
popa
je
pop
jg,pn
into
push
mov
mov
paddusb
pop
cmp
repnz
lret
int
xchg
cltd
rcrb
in
mull
cmp
ljmp
cwtl
push
add
xchg
xchg
lock
xor
lahf
andl
xchg
pop
sbb
mov
fisubrl
sar
loopne
mov
repnz
cmp
xchg
and
outsb
mov
mov
stos
lahf
jbe
int3
dec
testl
cltd
push
pop
je
loopne
fs
mov
fdivs
daa
insl
mov
outsl
add
and
icebp
pusha
push
jmp
inc
daa
dec
scas
loope
jbe
cs
cmpsl
in
mov
xchg
push
push
cmpsb
addr16
frstor
inc
aam
mov
inc
aaa
add
outsb
out
jb
mov
loopne
mov
std
pop
pop
aaa
bound
addr16
push
dec
pop
dec
add
mov
movb
imulb
das
jns
push
inc
mov
push
stc
mov
pop
push
and
test
mov
enter
sti
cmp
xchg
jl
out
sub
sti
jnp
cld
jo
repz
incb
push
sarl
cld
movsb
push
xlat
sbb
cmp
cs
mov
mov
or
out
leave
jne
push
dec
dec
loope
and
jecxz
jbe
or
inc
loope
fcoms
jnp
push
cmp
sub
pop
dec
ret
ret
ljmp
add
inc
in
push
sbb
jecxz
dec
in
lret
call
lods
dec
nop
movl
adc
sbb
xchg
mov
inc
cmp
mov
enter
nop
pop
cmp
shlb
popf
jo
loope
orl
enter
popf
jmp
sar
jle
nop
jg
or
cwtl
ljmp
inc
ljmp
insl
adc
inc
enter
ss
out
or
rcll
jo
repnz
cmpsb
mov
fidivs
clc
or
and
gs
inc
xor
push
lods
or
pop
adc
mov
adc
pop
jge
sbb
jno
adc
cs
sbb
loop
mov
jo
mov
int3
and
push
jle
sti
and
stos
nop
xchg
sbb
jno
mov
xor
loope
sbb
xor
addr16
pusha
inc
dec
mov
xchg
roll
pushf
sub
sub
push
stos
pusha
jmp
xor
xor
push
add
orl
les
mov
ljmp
les
add
aas
fisubs
lret
adc
sub
jle
stc
jno
dec
mov
or
imul
mov
sbb
cltd
fistpl
xlat
inc
jne
movsl
xchg
lea
inc
clc
pusha
test
popl
movsl
push
or
sbb
cltd
pop
push
in
mov
mov
mov
add
mov
sub
iret
int
sub
nop
ds
repnz
lea
subl
push
jle
jnp
pop
and
sub
push
jb
test
icebp
or
dec
lds
pop
sahf
mov
mov
mov
test
and
mov
jns
add
test
pop
test
in
jo
pop
inc
and
out
mov
gs
pusha
or
push
push
add
popa
stos
xchg
dec
xchg
xor
mov
fsubl
out
pop
into
add
jl
xor
leave
lock
lahf
ds
or
dec
sbb
std
dec
adc
leave
lods
add
inc
repz
inc
jge
and
inc
sub
ss
push
imul
ret
imul
push
inc
scas
das
or
xchg
push
push
ja
sub
loop
imul
scas
pop
lcall
jle
into
sbb
shll
out
rcrl
movsl
or
mov
repnz
cltd
icebp
pop
mov
outsl
stc
mov
stc
ja
cmp
loope
adc
pop
cmc
dec
pop
pop
inc
into
sbb
xor
lahf
js
stos
nop
mov
jne
test
out
mov
out
dec
adcl
and
pop
lahf
shl
mov
inc
xlat
rclb
mov
jle
in
jl
mov
arpl
xor
fldt
sub
sub
insl
pop
sbb
in
popa
pop
leave
and
shlb
inc
cmp
mov
test
fwait
test
sti
add
test
inc
in
cld
dec
cli
adc
call
sub
push
js
inc
fistps
fistpl
sbb
imul
imul
jmp
imul
xor
mov
mov
mov
sahf
push
dec
aaa
dec
ds
inc
popf
popf
dec
xchg
mov
int3
cmovs
ja
inc
mov
mov
scas
cli
into
pop
jns
roll
or
hlt
decl
mov
sub
lret
mov
jmp
sbb
dec
push
sbb
pop
cmp
iret
loope
scas
or
aam
mov
jb
addl
and
xchg
cmpsb
pusha
mov
mov
les
aaa
sbb
ret
pop
sub
push
enter
mov
add
inc
or
lods
fdivl
notb
or
pop
pop
pop
test
cs
outsb
fadds
push
pusha
ss
loop
xchg
xchg
mov
push
test
sub
and
mov
cmpsl
shll
movb
test
mov
daa
out
sub
sub
pusha
mov
mov
dec
push
jae
inc
pop
xor
xor
pop
test
stc
call
enter
dec
out
jbe
xor
das
ficomps
rcr
cmp
pop
pop
daa
aad
cmp
mov
mov
ret
lahf
out
ss
adc
out
rorb
push
mov
inc
cmc
sub
dec
cmovo
sbb
fisubs
test
loopne
mov
hlt
bnd
jge
add
mov
ljmp
aas
cmc
mov
xchg
out
lods
add
and
cs
pop
ret
cmp
sbb
inc
cli
clc
push
into
jmp
adc
lahf
dec
rcrb
jns
inc
int
into
mov
stos
cmp
sbb
mov
or
xor
jae
repz
test
decb
loope
mov
jle
sarb
leave
aam
adc
stos
int3
movsb
sub
fldcw
popf
aaa
in
dec
sarl
repnz
jg
dec
pusha
sbb
addb
adc
push
pop
pop
sub
pop
sahf
adc
mov
hlt
sub
in
imulb
popa
fadd
jns
cmpl
sbb
or
bound
ja
or
cmp
in
mov
fs
mov
push
int3
and
or
add
rcrb
iret
and
push
mov
adc
aas
mov
popf
push
jge
lock
inc
jo
add
gs
push
xchg
inc
stc
stc
xchg
lea
mov
dec
sub
push
inc
and
shlb
or
add
stos
stos
xor
addr16
adc
rolb
mov
xchg
subl
and
pop
push
test
or
jo
mov
repnz
mov
dec
and
fdivrs
test
add
pop
inc
negl
pushf
and
mull
lahf
or
call
mov
cmc
lcall
xor
adc
push
dec
fsts
sub
adc
xchg
ljmp
add
sbb
ret
or
fimull
mov
jb
hlt
outsl
aaa
shll
sbb
pop
and
inc
loope
jnp
roll
inc
xchg
adc
jge
outsl
loope
bound
mov
ds
stos
jg
enter
mov
add
js
aad
sbb
jecxz
pop
adc
in
ret
cmp
repnz
call
adc
add
iret
lods
cld
rclb
adc
icebp
enter
adc
repz
es
cmpsb
jnp
mov
scas
shr
mov
jge
jno
xor
lahf
adc
push
in
rcl
sbb
out
outsb
xor
je
ret
add
jge
mov
and
repz
jnp
aad
ss
icebp
sub
inc
pushf
enter
outsb
push
jno
jmp
sbb
stos
mov
imul
xchg
lods
cmpsl
into
arpl
cmp
add
xorb
lock
sbb
test
and
mov
outsb
adc
xlat
jno
adc
arpl
icebp
fwait
mov
ss
rclb
aas
hlt
fcomps
dec
es
subb
cli
mov
jecxz
jp
sbb
aas
pop
sbb
std
stos
add
adc
or
decb
dec
or
fwait
fs
or
jl
push
hlt
dec
leave
loop
pop
xchg
fcmovbe
testb
ja
inc
or
jmp
in
adc
lahf
aam
mov
push
jo
mull
cli
push
jecxz
ds
inc
arpl
test
sbb
frstor
iret
outsl
shll
movsl
lret
addl
bound
mov
push
cs
mov
mov
loop
push
cmp
or
push
popf
inc
inc
outsb
ficoms
sub
testb
std
insl
sub
jne
push
aam
mov
shll
gs
mov
loopne
hlt
push
dec
mov
cmp
nop
adc
test
cmp
imul
sub
or
sub
lds
lahf
pop
mov
adc
popf
jle
jo
insb
lcall
aas
cmp
repz
fstpt
pop
mov
into
adc
jecxz
cmpsb
push
shrb
std
dec
into
pop
jae
and
setb
scas
sub
adc
pop
bnd
jl
adc
insl
pop
in
xlat
mov
lock
mov
sahf
cwtl
fisttpll
mov
fdivrl
dec
imul
jb
sbb
orb
mov
daa
fcmovnu
sbb
shr
and
ljmp
push
test
les
mov
xchg
popa
cmp
test
insb
adc
mov
dec
dec
adc
dec
jae
scas
mov
dec
inc
xor
add
aam
lahf
int
rclb
adc
out
xor
imul
cmpb
sub
jns
mov
and
in
or
add
cld
jb
in
lret
dec
hlt
movsb
mov
pusha
fists
jl
test
mov
sbb
inc
xor
mov
sub
in
lds
xor
clc
fwait
adc
add
adc
mov
or
scas
lret
repnz
ret
and
xchg
fstpl
inc
insl
stos
mov
xor
xor
push
fucompp
fimuls
out
and
addb
popf
push
mov
mov
inc
rcr
mov
xchg
lahf
mov
sub
jge
mov
pusha
in
pushf
pop
es
sahf
dec
mov
lock
pop
inc
adc
push
daa
pop
rcr
jmp
jae
dec
add
pop
xchg
fs
cmp
loopne
xchg
clc
cmpsl
jp
inc
dec
lahf
mov
sbb
jecxz
cmp
roll
fstps
popa
sub
or
mov
mov
lret
push
daa
mov
xchg
pop
pop
popa
in
sbb
mov
mov
stos
mov
ret
stos
add
test
adc
mov
leave
in
jnp
mov
and
sbb
jmp
fidivrl
and
adc
jge
rcll
lret
mov
aam
mov
aaa
cmp
insb
mov
xor
insb
test
jns
js
pushf
jmp
push
or
mov
popf
dec
sbb
pop
jns
jle
cs
mov
test
lods
out
lcall
mov
daa
out
cmc
sub
mov
pop
pop
pop
test
stc
enter
pop
push
movsl
xor
vpmacssww
pusha
push
ss
pop
mov
add
popa
cmp
iret
cld
stc
mov
push
aas
scas
leave
aas
mov
and
push
das
adc
jno
ja
lds
xchg
enter
push
add
loop
test
lds
imul
sbb
scas
loopne
inc
adc
sub
ds
lahf
mov
cmp
mov
adc
filds
jae
leave
inc
ret
and
fbstp
pop
fnsave
cltd
imul
ljmp
jnp
movsb
pop
and
stc
push
mov
push
pop
jbe
jb
icebp
or
or
mov
adc
fdivs
inc
adc
mov
mov
fmull
cmp
jge
cmp
sub
pop
xchg
sbb
lds
mov
mov
xor
lret
adc
inc
aam
mov
xchg
nop
add
roll
jns
pop
movsl
leave
sub
adc
fisttpll
in
xor
dec
lds
push
pop
sbb
mov
cmpsb
ss
fimull
jnp
into
lods
pop
stc
aas
push
insb
icebp
insb
push
mov
test
adc
xchg
xor
int
cli
pusha
test
btr
lret
mov
scas
mov
lcall
xor
push
cli
sbb
cs
stos
push
adc
cmp
jne
fwait
add
jo
push
push
ss
sti
and
lret
popa
cmpsb
dec
and
lret
and
cmp
ljmp
xchg
adc
dec
adc
adc
pop
and
rcrl
jns
sbb
inc
filds
ja
aam
fwait
jmp
fisttps
cwtl
xchg
hlt
jge
fnsave
fs
out
fst
test
mov
lahf
inc
or
das
arpl
in
push
aaa
mov
xchg
push
stos
cli
jno
and
cmp
and
inc
imul
jecxz
pop
jge
mov
test
popf
add
imul
jp
push
dec
mov
sbb
jg
cli
test
sub
mov
and
push
and
scas
mov
mov
pop
lret
adc
das
daa
mov
cmc
fcom
adc
cs
sbbb
outsb
adc
ljmp
push
test
xor
decb
xlat
shlb
or
mov
es
sub
stos
or
faddl
jecxz
add
lret
decb
aam
cs
divb
mov
mov
es
jae
mov
mov
stc
push
mov
iret
add
fwait
or
test
fstp
jbe
int3
mov
cltd
dec
dec
jb
int3
les
jb
dec
movsl
std
in
lahf
sarl
iret
loop
pop
cmp
out
mov
add
imul
loop
out
js
leave
gs
mov
idivb
loopne
mov
cmp
mov
cmp
cld
dec
mov
lock
fistpll
dec
xchg
mov
fwait
mov
and
pop
popa
test
ja
js
xor
jp
inc
loop
into
loop
in
test
loopnew
adc
inc
incl
mov
repz
inc
pop
or
inc
jmp
jne
loope
js
sarl
sbb
fiaddl
jo
xor
mov
or
scas
negb
dec
or
push
push
andb
insb
adc
andb
ret
cli
lret
aaa
mov
pop
ret
mov
js
jp
js
pop
fildll
lret
mov
pop
sbb
sarb
add
sub
adc
xor
inc
push
sti
and
cs
cli
xchg
cmp
jge
aaa
movsl
out
sarb
inc
idivl
xlat
jb
and
mov
frstor
xor
dec
jb
mov
repnz
in
test
jmp
adc
or
lcall
cmpsl
xchg
rcll
shlb
negl
cmc
mov
jns
sub
pop
and
add
and
push
pop
push
xorl
inc
stc
sahf
rorl
adc
movsb
adcl
movsb
popa
scas
add
dec
mov
jns
mov
sub
mov
pop
mov
scas
test
jecxz
lds
sub
pop
jmp
pop
pop
jns
cltd
xchg
jne
cmp
rcr
inc
mov
dec
scas
shrl
call
xor
sub
push
mov
mov
mov
es
leave
call
inc
scas
sub
inc
test
cmp
dec
xchg
jle
mov
ds
push
das
sahf
mov
je
push
insl
iret
or
dec
les
in
aaa
loopne
es
dec
jp
push
aam
dec
leave
in
jne
ja,pn
dec
bound
pushf
dec
inc
call
js
fcmovne
std
mov
inc
je
aad
pop
xlat
rclb
xor
repz
outsb
xchg
in
mov
sub
mov
mov
or
mov
sbb
out
loop
dec
add
arpl
out
test
cmpsl
adc
adc
inc
adc
jnp
sbb
jmp
sub
lcall
aad
stc
fs
jnp
out
lret
inc
or
sahf
and
mov
scas
jb
pop
push
out
xor
pushf
in
orl
adc
cmp
loop
mov
ficomps
or
mov
mov
outsl
out
xchg
shlb
cld
and
dec
and
push
movsb
inc
lret
inc
sbb
enter
mov
das
loop
jg
lea
outsb
bound
popa
mov
scas
mov
in
lods
or
das
imulb
notl
daa
ja
jecxz,pt
lcall
loopne
mov
repnz
jb
jge
pop
loope
das
inc
daa
cmp
in
push
fsubr
mov
fsubs
jo
stos
dec
add
lahf
imul
aaa
ljmp
xor
iret
movsl
and
call
aas
sbb
out
cs
cmpsl
sbb
and
mov
call
mov
and
adc
or
cs
or
sub
pop
jno
mov
or
or
outsl
sub
mov
or
xor
int3
repnz
add
enter
aas
out
cmc
test
nop
fsubl
push
mov
icebp
addr16
push
sub
xlat
mov
hlt
xlat
xchg
push
adc
fmull
in
push
mov
std
adc
aas
shrl
mov
movl
js
lea
xchg
push
push
mov
fmull
aad
add
cmp
test
leave
and
dec
mov
pop
imul
or
mov
pop
movsb
fistpll
lods
int
repnz
dec
dec
and
lret
cmp
int3
add
insb
add
jae
in
hlt
add
xor
popa
stos
pop
xor
xchg
in
dec
fstpt
orl
repz
jp
adc
mov
les
insb
push
mov
cmp
out
stos
mov
sub
arpl
lock
inc
insl
pop
dec
in
mov
sbb
jle
xchg
jno
pop
jmp
dec
mov
test
fnstcw
lahf
adc
cmp
nop
fdivs
inc
mov
cmc
das
ret
cmc
mov
outsl
pop
fnstsw
int
cmpsb
std
adc
fdivrs
repz
test
cs
mov
fs
fiadds
loope
mov
lret
push
fidivrs
inc
gs
push
out
loope
aad
inc
mov
in
xchg
lock
or
cmp
pop
and
or
lock
mov
in
or
adc
or
adc
inc
out
sbb
iret
rolb
dec
out
arpl
push
lahf
movq
mov
or
int3
out
aad
sbb
out
stos
fxch
js
stc
xorl
scas
add
push
xchg
jno
aaa
pushl
insl
mulb
add
xchg
dec
jecxz
insb
and
pop
dec
pop
imul
inc
adc
je
dec
mov
ljmp
adc
out
leave
pop
mov
xchg
add
and
push
aad
sbb
adc
pop
add
mov
lret
cltd
sbb
add
mov
xor
test
repnz
aam
cli
fistl
lea
mov
mov
cmp
pop
pop
jge
mov
xor
nop
jns
loope
scas
adc
cmpsl
dec
mov
cmp
dec
int3
aas
mov
loopne
fisubrl
fimull
adc
cmpsl
adc
mov
dec
mov
jecxz
les
lret
pushf
lcall
cmpsl
sahf
cltd
icebp
push
das
adc
pop
arpl
xor
xchg
lret
lds
cmp
lea
std
xor
pop
arpl
push
inc
xchg
push
push
cmpsl
movsl
inc
lret
pop
in
stos
lods
mov
xchg
cmp
hlt
push
shll
sti
pop
repnz
das
mov
loop
push
push
in
cmp
xlat
mov
in
lods
jg
xor
enter
js
andb
sub
fbld
jnp
inc
dec
fs
mov
in
push
jg
xchg
mov
clc
add
cltd
add
movsl
jl,pn
mov
adc
sti
int
movsl
sub
in
orb
inc
mov
sarb
dec
mov
jle
dec
arpl
insb
icebp
lret
outsb
jno
jmp
les
jo
movsl
lret
in
fnstcw
in
stos
je
sbb
add
push
xchg
xor
je
daa
imul
std
roll
aad
mov
testb
jl
adc
cmp
xor
adc
jl
push
cltd
cmpsb
lods
xor
pop
bnd
lock
and
imul
xor
jmp
dec
xor
aad
lods
jb
fwait
pop
cmp
xchg
imul
in
push
adc
and
in
insl
cs
adc
dec
arpl
lret
ljmp
pop
dec
jnp
daa
push
arpl
cli
dec
and
int
mov
roll
adc
mov
out
push
jl
mov
cli
out
jl
push
dec
add
sub
sub
dec
xor
inc
jecxz
mov
sti
ja
fsubrs
cmpsb
clc
out
jle
stos
jns
data16
rorl
arpl
pop
cmp
sahf
repz
xor
aaa
arpl
mov
push
jge
idivl
mov
adc
inc
xchg
jne
mov
dec
add
leave
and
gs
cmc
sti
clc
jl
cli
clc
clc
repnz
xor
jecxz
inc
cmc
shrl
mov
data16
xchg
or
jbe
loop
js
mov
out
sti
push
fiaddl
add
adc
sbb
sbb
mov
cwtl
shrl
jbe
sub
scas
mov
rep
cld
push
cmp
loopne
jno
std
aad
mov
out
enter
pop
add
pop
xchg
xor
daa
cli
sbb
insb
adc
xor
inc
xor
dec
shr
faddl
iret
rcrl
mov
cmp
sti
xor
pop
mov
iret
add
pop
nop
push
sub
shll
in
mov
loopne
nop
mov
sti
sub
mov
orl
ret
js
outsb
cltd
mov
jbe
inc
mov
xchg
or
jnp
cmpsl
inc
cwtl
test
sbb
or
inc
adc
int
rcl
sub
ja
push
and
movsb
xor
js
rolb
repz
pushf
repnz
sti
enter
sub
dec
ljmp
shl
cmp
fbld
mov
or
je
test
dec
push
subb
jle
out
add
xchg
stos
rolb
and
cmp
mov
inc
fwait
stos
mov
xchg
pop
loop
in
xor
xor
xchg
or
dec
scas
cmp
sbb
and
gs
jg
leave
mov
mov
filds
out
xor
xchg
jle
push
and
lea
jmp
jbe
shrb
fnstsw
repz
fdiv
test
or
and
repz
and
dec
add
mov
test
add
lret
push
icebp
nop
or
inc
and
inc
xchg
dec
jmp
es
jp
rcrb
call
add
in
fpatan
je
cmp
inc
dec
jns
mov
fstpt
push
roll
fcmovnu
xor
jo
add
lods
stc
fmuls
testb
pop
cmp
mov
xchg
dec
nop
loopne
add
add
cltd
mul
pop
and
push
xor
in
pop
add
ret
xor
test
mov
popf
out
js
dec
popf
stos
cwtl
cli
sub
loop
fidivl
nop
cmp
inc
testl
dec
fcmove
std
jb
sub
jmp
in
movsl
roll
test
fwait
mov
or
fisubrs
inc
push
sbb
or
jbe
inc
js
stos
inc
insb
jbe
cmp
push
lock
scas
push
lret
int3
in
sub
cmp
loope
into
je
shr
cmp
pop
cld
js
jb
xor
in
add
testl
shrl
clc
dec
cmc
mov
mov
sbb
fsubs
jmp
cmp
dec
jbe
push
fistl
sub
mov
cmp
rorb
je
fabs
outsl
push
xlat
inc
cmp
cwtl
xchg
add
pop
xchg
cmp
andb
inc
ja
push
loope
int3
fwait
xor
ljmp
cmp
neg
mov
daa
ret
mov
out
jno
lret
mov
xor
fwait
aaa
xchg
iret
adc
ss
xlat
inc
movb
rcr
jle
jno
fcomps
lcall
xor
inc
shl
popl
or
pop
jnp
int3
jle
add
cmp
pusha
adc
sbb
xor
sub
cmp
xor
add
xchg
lods
jne
mov
xor
cmp
lods
add
jle
push
inc
add
dec
push
mov
jbe
mov
shll
mov
push
cmp
jae
pop
aaa
adc
rolb
and
sbb
popf
dec
inc
mov
lods
scas
stos
arpl
push
push
or
sub
sub
int3
loop
les
cmc
pop
xchg
ja
stos
pop
shlb
das
jl
insl
xchg
sbb
mov
add
cmp
xchg
or
jecxz
cwtl
sbb
mov
stos
scas
arpl
and
sub
mov
pop
mov
add
pusha
fldl
or
sub
add
xor
push
cmc
or
and
push
mov
cwtl
outsl
repnz
pop
mov
sbb
push
aam
in
inc
and
ljmp
out
decl
in
test
push
icebp
enter
enter
f2xm1
ficoms
ss
adcl
fdivrl
insb
mov
mov
insl
ja
out
cmp
pop
push
movsl
inc
cmpsl
sub
ret
loop
cmp
xor
and
and
dec
inc
xlat
clc
mov
mov
mov
xor
scas
jo
xor
mov
ja
idiv
insl
adc
sub
sbb
js
je
mov
test
repnz
imul
cmp
test
fsub
mov
fnstcw
pusha
sbb
cli
shl
rolb
lods
push
and
add
xchg
or
mov
pop
xor
adc
loope
test
stos
mov
cwtl
inc
imulb
js
cltd
pop
mov
gs
sbb
add
dec
out
lcall
sub
pop
aas
dec
and
push
cmp
sahf
mov
mov
clc
ljmp
in
jge
rcr
stos
mov
ljmp
push
call
cmpsl
push
test
ja
sarl
push
call
es
stos
imul
int3
scas
cltd
fwait
jecxz
xadd
aas
and
dec
imull
xor
fisubrs
loope
cmp
jae
pop
adc
js
sti
cmp
xorl
xchg
cmpsl
loop
mov
shrb
inc
jp
or
add
sbbb
icebp
decb
addr16
jno
xlat
dec
daa
aad
mov
mov
shrb
cmc
xchg
xchg
xor
mov
test
mov
xchg
aam
movsb
add
pop
fdivrs
add
cmp
test
push
in
sbb
je
sub
fs
cld
dec
stos
mov
xor
scas
add
push
add
and
xchg
pop
arpl
enter
in
xchg
daa
or
pop
rcrl
pop
jge
jg
mov
sbb
pop
hlt
ljmp
enter
fs
in
inc
cwtl
movsb
add
les
test
inc
pop
pushf
sub
inc
int
lahf
inc
pop
cmp
xor
adc
sbb
inc
push
add
jne
mov
ds
cmpsl
rolb
adcl
lcall
cs
out
mov
fimuls
sahf
out
nop
jl
loope
out
ret
pop
jae
push
pop
loop
mov
fidivrs
cmp
push
mov
leave
outsl
xor
push
jb
add
xchg
push
xlat
pop
push
add
or
cltd
and
or
xor
sarb
out
inc
sbb
xchg
movsl
pushf
insb
lret
mov
pop
imul
cmp
outsl
sbb
ja
loop
inc
fsub
ljmp
inc
lcall
sbb
out
fs
cwtl
arpl
sub
xchg
sbb
aaa
push
or
xchg
xchg
sti
je
pusha
xchg
push
imul
push
sbb
sub
clc
mov
andb
mov
aam
mov
dec
int
ret
pop
jl
inc
adc
xor
filds
jp
push
repnz
punpckhwd
adc
lock
xchg
pop
repnz
out
dec
clc
shlb
push
add
mov
stc
adc
incl
push
cmp
les
mov
movsl
fisttpl
dec
inc
test
sub
fwait
in
xor
jecxz
push
sub
arpl
and
test
cli
dec
daa
pop
push
push
in
test
rolb
xchg
lcall
mov
cld
ljmp
dec
arpl
pop
push
mov
leave
inc
test
lret
aaa
pop
and
add
push
test
inc
add
mov
add
cld
fisttps
imul
adc
xchg
hlt
ljmp
mov
xchg
orl
in
sahf
xor
test
adc
xchg
and
arpl
lcall
shll
mov
adc
xlat
out
mov
ljmp
and
lcall
add
push
insb
outsl
xor
pop
inc
clc
ret
std
in
popf
sbb
sbb
ud0
xchg
dec
insb
scas
inc
fwait
scas
dec
sbbb
stc
xchg
out
add
jge
aaa
mov
sub
popf
fisubrl
mov
inc
icebp
or
aaa
rcl
aad
mov
push
subl
cmp
push
imul
jmp
push
bound
sbb
add
in
or
sub
lahf
aam
cmp
lods
rcrb
mov
mov
daa
sarb
dec
dec
loopne
clc
push
sub
cmp
cmp
mov
mov
mov
je
add
in
dec
sarl
loopne
mov
xlat
add
fisubs
dec
adc
xor
dec
out
push
mov
fidivl
adc
sti
jle
sahf
mov
je
out
mov
gs
and
push
adc
ds
rcrl
push
push
imul
push
or
aam
pop
dec
pop
push
mov
xchg
and
or
mov
dec
adc
and
or
or
out
sub
in
sbb
inc
mov
mov
test
mov
mov
test
pop
push
out
flds
xchg
cmp
fisubs
xchg
icebp
jecxz
imul
mov
or
jb
jge
dec
scas
pop
push
dec
popa
bnd
sub
xchg
sbb
inc
mov
aaa
inc
pop
jno
jge
mov
fdivrs
mov
imul
icebp
push
xchg
rcr
push
pop
test
test
adc
insb
dec
xchg
cltd
bnd
fiaddl
mov
mov
test
inc
inc
push
sbbb
lea
push
cld
movsb
mov
leave
es
or
cmp
adc
icebp
jb
lock
jecxz
imul
sbb
lret
pop
fiadds
ljmp
jmp
inc
repnz
cmp
sub
xchg
push
out
sub
arpl
push
cmp
sub
ja
je
adc
aas
test
stos
inc
jge
hlt
divb
jg
inc
movsb
or
lods
xchg
mov
mov
orb
enter
jo
test
out
test
push
test
es
ret
notl
push
and
add
mov
dec
jne
scas
sbb
sbb
fdivl
adc
cld
pushl
add
dec
lods
test
int3
dec
shrl
fists
sbb
mov
cwtl
xor
pop
cmc
pop
adc
cs
lret
cld
or
nop
lret
movsl
add
ljmp
jae
or
stos
stc
push
xchg
sub
xlat
inc
sub
push
add
in
mov
dec
in
fadd
lds
dec
jo
xor
ja
push
and
mov
xor
push
sub
sub
adcl
mov
or
mov
in
cwtl
fisttps
fcomip
adc
dec
push
loope
or
fs
shlb
repnz
lock
das
cmp
jns
lds
aad
fidivl
add
mov
das
out
mov
aas
insl
pop
pop
dec
lds
and
mov
xchg
push
push
adc
cmp
sbb
mov
xor
stos
outsb
push
hlt
movsl
test
jle
mov
inc
jge
mov
ret
mov
out
xchg
roll
sahf
loope
and
dec
lea
mov
inc
jmp
sbb
jg
mov
sub
es
sub
scas
dec
mov
fsubrs
pop
stos
insl
dec
hlt
mov
adcb
jns
jp
fchs
xchg
fnstsw
or
sub
sub
xor
inc
sub
inc
push
out
repnz
ja
inc
inc
es
inc
mov
stos
stos
mov
or
fiaddl
lcall
sahf
fcomps
mov
outsb
xor
dec
mov
jg
flds
pop
insl
addl
add
outsl
jns
xor
imul
out
shl
in
imul
jmp
test
sahf
mov
pop
bswap
push
cmp
lahf
leave
dec
test
xor
dec
ss
test
xchg
jns
xchg
fstps
cmp
xchg
bound
jmp
jns
sarl
xor
xchg
inc
sahf
mov
sbb
lods
loope
jns
mov
sub
or
mov
shlb
repnz
mov
es
pushf
mov
cmc
fmuls
adc
scas
cli
bound
xchg
out
sub
xor
dec
addl
test
mov
ljmp
mov
mov
hlt
mov
sar
in
jp
div
mov
rcr
in
dec
bound
xchg
fcomp
dec
lock
in
pop
pop
insb
cmpsb
dec
fs
fprem
cmpsb
sahf
sbbl
sarl
andl
sub
jae
cmp
adc
insb
mov
or
lret
pop
dec
imul
ss
mov
stos
xlat
mov
cmp
sub
out
mov
mov
dec
or
out
sar
jecxz
push
lods
cmp
lahf
xor
icebp
lcall
push
adc
sbb
adc
fadd
jae
adc
jmp
inc
mov
ret
push
js
fldenv
push
testl
loop
pop
jns
add
repz
inc
js
adc
cmp
cs
xchg
ret
sub
sbb
inc
mov
xchg
cmpl
ja
mov
cmc
cmp
pusha
out
rcrl
cmp
or
jae
xchg
int3
xchg
imul
mov
jo
mov
mov
stos
or
xor
popf
nop
dec
out
jecxz
in
imul
xchg
in
and
and
aad
jnp
sahf
lret
leave
push
dec
aad
out
call
enter
jp
stos
testb
inc
bnd
xchg
inc
faddl
nop
xor
push
js
cmp
lret
nop
and
loopne
jo
jo
xchg
rcrl
mov
or
nop
stos
or
pop
xchg
je
xorb
mov
stos
add
shl
mov
inc
mov
lahf
out
in
push
insb
divl
mov
adc
es
leave
icebp
mov
fs
sub
dec
and
jbe
bound
test
dec
leave
adc
or
adc
fstl
mov
sbb
fwait
add
xor
imul
inc
and
sbb
mov
lock
shll
cmc
cmp
push
lret
push
repnz
push
adc
cmp
adc
outsl
push
js
call
repz
aas
outsl
push
cltd
sahf
pop
or
mov
lret
push
jg
pop
mov
daa
jecxz
mov
or
shll
stc
cld
insl
inc
adc
outsl
not
xlat
mov
push
dec
ljmp
into
dec
loopne
int
lahf
mov
cmpl
cmp
adc
dec
dec
mov
cmp
fidivrs
pop
and
xor
jecxz
inc
inc
in
rcl
pop
int
movsl
xor
adc
adc
pop
ret
loope
xchg
pusha
pop
test
mov
ljmp
push
dec
daa
mov
and
lea
mov
fnstenv
add
cmp
mov
pop
cli
cmpsl
lods
push
lret
xchg
inc
sti
dec
andb
mov
aaa
jo
add
jl
loopne
dec
sti
in
mov
adc
mov
insb
ja
jae
xor
xor
ret
aad
xchg
cmc
sub
mov
and
push
jg
stc
aad
mov
and
mov
addr16
cmp
jmp
loopne
xor
sbb
repz
ret
fidivl
xchg
pop
dec
sub
cmc
jno
and
xchg
cwtl
cmpsl
jg
sub
pop
sarb
frstor
aad
adc
and
cmpsl
dec
fbstp
fdivr
push
cmp
ret
dec
adc
cmp
ror
movsb
scas
mov
repz
jg
cltd
cmp
cmp
mov
dec
dec
arpl
outsb
clc
jo
cmc
pop
ret
adc
fsubrs
cmpsl
adc
xchg
fstl
out
xor
jne
int3
adc
out
mov
jb
stos
mov
cld
pop
push
out
imul
sti
add
rcrb
inc
loopne
fimull
push
hlt
pop
in
es
push
cltd
hlt
or
fs
inc
lock
mov
lock
dec
add
pop
and
jmp
adc
out
jb
dec
ss
or
ljmp
gs
test
std
ljmp
sub
test
jl
jbe
roll
sbb
rcrb
call
and
or
aaa
and
out
xor
sar
inc
mov
lret
iret
iret
mov
lods
adc
jge
pop
add
sahf
xor
stos
lcall
jge
jmp
test
xchg
pop
pop
mov
xor
rolb
add
adc
cmp
dec
faddl
and
dec
inc
aam
shl
rorl
xchg
dec
insb
mov
pop
adc
jae
aas
adc
inc
rcrl
dec
mov
jl
ja
lock
sti
sub
mov
and
gs
push
mov
scas
pop
lods
xor
popf
out
gs
cs
rcll
push
cmp
stos
cmp
ss
pusha
jge
icebp
repz
push
add
jne
mov
xchg
andb
push
es
cmp
fdivs
ss
mov
mov
mov
mov
dec
mov
fcoms
lahf
aad
add
adc
jno
dec
sub
loope
or
inc
cmp
mov
xlat
stos
stc
inc
or
mov
sub
jmp
add
aas
dec
xor
test
in
les
lds
sbb
cs
sar
ja
popf
iret
push
xchg
add
push
pop
pop
jne
mov
dec
xor
push
xchg
sti
inc
adc
lcall
and
pop
sub
stc
adc
add
out
jg
mov
push
sub
stc
adcl
sub
push
cmp
pop
xchg
mov
scas
leave
mov
mov
pop
sbb
cltd
adc
push
incb
jmp
adc
sub
mov
inc
pushl
insl
mov
xor
cmp
jecxz
or
dec
sub
rcll
cmp
sub
push
nop
pop
adcb
les
xor
ja
add
and
push
sbbb
inc
stos
lods
lock
or
in
repz
in
mov
shrl
push
jne
mov
dec
mov
adc
jmp
in
pop
xchg
icebp
popa
adc
lock
xor
ljmp
ffreep
sbb
sbb
pop
test
add
dec
in
jns
in
and
cmp
inc
dec
ss
push
data16
outsl
addr16
inc
ds
sub
orl
mov
lcall
lods
inc
jo
adc
xchg
mov
pop
push
jmp
jg
psllq
push
add
inc
push
mov
out
packsswb
cld
fdivr
push
jp
stos
aas
mov
dec
ja
outsl
mov
adc
addr16
add
sahf
sub
jp
mov
cs
add
push
js
add
bound
fsubrs
scas
aam
push
gs
scas
out
push
outsl
ret
push
cmp
pushf
in
or
test
dec
jb
mov
pop
cmc
sbb
xor
cmpsb
ja
lret
mov
jae
lahf
popa
sub
stc
addr16
sub
jno
pop
sbb
aad
into
xchg
lock
xor
mov
test
nop
cmp
repz
sub
jmp
leave
stos
les
xchg
lahf
xor
shll
cmp
sbb
mov
je
call
push
cmp
hlt
aas
pushf
add
orl
xor
mov
mov
cmp
mov
xchg
out
push
test
or
out
out
outsb
mov
xchg
pop
in
sbb
pop
fldt
ret
jbe
push
and
lods
mov
jg
sub
mov
popa
xchg
daa
into
mov
cmp
mov
mov
add
movsl
loope
lahf
mov
fld
inc
mov
mov
and
sti
ret
mov
adc
xchg
std
xchg
adc
add
cmp
push
add
shrb
fcmove
sub
aad
es
push
cli
hlt
mov
mov
and
sbb
lds
add
test
cwtl
rep
ret
lea
das
ss
shll
xchg
dec
enter
shlb
std
lods
outsl
imul
inc
cltd
sahf
ja
jo
cmp
push
sub
xor
add
stc
mov
sub
adc
push
sbb
lods
jmp
sarb
pop
cmp
dec
push
mov
fdivs
xchg
ds
lea
push
int3
outsl
jl
stc
nop
es
stc
je
xchg
xchg
iret
insb
pop
sar
push
call
dec
int
int3
notb
push
mov
insl
push
sub
fnstsw
pop
idivb
inc
insl
ja
repnz
int3
lret
mov
icebp
adc
mov
mov
mov
push
add
or
inc
or
push
pop
movsl
rclb
dec
mov
inc
dec
or
dec
stos
jmp
clc
xchg
clc
ficoml
neg
xor
xchg
out
xor
popa
cmp
and
jl
inc
push
cmp
pop
or
ret
pop
mov
mov
popa
cmc
scas
cmp
lea
jno
cmp
adc
dec
inc
insl
jbe
test
adcb
cmp
das
enter
cwtl
jge
dec
loop
in
lods
aam
data16
fidivs
mov
fwait
enter
outsl
imul
rclw
and
xchg
insb
testl
aam
ds
loope
xor
adc
jnp
and
or
and
cltd
dec
cmp
lret
stc
fistpl
fstps
mov
lret
add
pop
mov
sbb
add
jmp
das
std
das
mov
mov
arpl
pusha
mov
cmp
fstps
nop
enter
int
js
stc
test
add
xchg
push
loop
fisttpl
ja
add
cmovae
ljmp
pop
mov
fs
rclb
push
clc
psrlw
or
iret
or
add
xor
mov
fistpll
pop
xor
sbb
jge
push
aam
mov
shr
xor
xor
and
stos
out
shrl
lahf
pushf
aad
sbb
cmp
and
add
imul
bound
addr16
and
pop
add
test
testb
jp
xchg
and
push
popf
enter
aaa
int
imul
add
sub
xlat
jge
inc
mov
repz
push
icebp
mov
add
mov
mov
mov
or
sub
mov
fidivrl
jecxz
scas
jnp
mov
add
mov
jne
insl
leave
decb
imul
inc
imul
movsl
imulb
sti
cmpsb
mov
call
fmull
in
add
xor
adc
jle
pusha
xor
test
cmc
mov
outsb
aas
scas
xchg
pop
sub
popf
clc
lahf
inc
xchg
mov
or
cmp
xchg
mov
adc
inc
cwtl
in
mov
jbe
mov
dec
orl
je
cli
jnp
ds
pushl
mov
mov
fwait
ret
cmpb
incl
push
js
sbb
sbb
sbb
sub
dec
cmpl
fwait
addr16
sbb
testb
or
lods
inc
hlt
xorl
sub
inc
jge
leave
pop
mov
add
add
out
mov
fisttpl
push
in
out
scas
mov
ds
xchg
clc
fiadds
inc
aas
lods
out
and
imul
add
jl
push
ds
mov
adc
das
push
ja
dec
cmpsl
pop
jnp
add
adc
ret
mov
scas
aas
and
out
mov
jns
cmpsb
mov
and
popf
icebp
pop
aad
int
test
test
sub
pusha
cmc
cmc
je
cmp
jns
addr16
test
xor
or
sub
bound
mov
movsb
mov
adc
cmp
fldt
xchg
sub
mov
loop
push
mov
or
mov
sbb
iret
test
pop
dec
adc
aaa
jbe
es
imul
pop
out
in
dec
outsb
or
sub
mull
xchg
fwait
popf
scas
ret
push
movsl
push
add
add
jmp
addr16
cmc
add
dec
jnp
xchg
repz
push
mov
ret
jns
adc
and
dec
dec
mov
cld
xchg
loopne
js
lcall
and
pushf
adc
cmc
data16
ficompl
jnp
inc
mov
out
sbb
dec
xorl
iret
xor
mov
lods
lcall
xor
daa
imul
or
add
push
scas
pop
and
loopne
bound
pop
loope
add
sbb
mov
ss
rcrb
xchg
dec
mov
mov
filds
test
mov
test
out
jns
push
add
lahf
pushf
inc
fcoml
xor
sahf
std
adc
and
lret
and
imul
jl
cmc
xor
push
add
mov
xchg
test
jnp
test
popa
stc
inc
xchg
leave
sub
mov
mov
inc
xchg
shrl
data16
mov
stc
or
mov
out
lds
inc
mov
rclb
les
test
jmp
cs
pop
push
cli
mov
cli
rcrb
add
mov
cwtl
cmp
pop
in
cltd
or
mov
call
iret
xchg
xchg
cld
je
mov
out
xchg
in
jmp
ficoms
loope
sbb
or
xchg
fcomip
les
push
sbb
je
fbstp
mov
mov
adc
inc
lahf
xchg
jge
cmpsb
scas
dec
sub
fnclex
or
pop
push
jmp
xchg
inc
cmp
out
cltd
or
or
shrl
xchg
push
sub
push
mov
ret
fdiv
idivb
mov
insl
cmp
divb
jp
insb
dec
mov
mov
inc
jle
pop
sbb
mov
pop
push
popa
js
pop
and
pop
lds
mov
pop
sbb
mov
pop
sub
dec
cs
xor
in
scas
jno
outsl
test
sub
pop
lret
repz
mov
or
sarb
lret
out
fadd
adc
sbb
int
xorl
pop
push
addr16
pushl
and
pusha
cld
dec
mov
push
imul
sub
repz
add
xchg
xchg
retw
mov
cs
je
cwtl
lea
mov
test
xchg
test
cmp
test
sub
pop
inc
imul
inc
test
pop
inc
pop
sub
ficompl
jne
sub
adc
sbb
mov
out
test
aad
push
inc
sbb
add
jg
push
xor
lret
pop
adc
jns
jbe
inc
inc
pusha
push
in
mov
dec
repz
int3
divl
dec
in
rorb
repz
jne
movswl
xchg
sahf
mov
ror
fs
mov
or
or
jmp
cmpb
movsb
pop
and
leave
repnz
mov
les
ds
pop
test
or
aad
cmp
ljmp
cmpsl
notl
push
inc
sahf
aas
rclb
test
jnp
iret
pand
sub
xchg
inc
xor
xor
or
mov
testb
push
lds
out
inc
mov
jmp
fnstcw
and
cltd
dec
dec
in
xchg
push
popa
ds
and
inc
cmp
xchg
xlat
mov
or
pop
repz
xchg
add
pushf
es
dec
sbb
mov
lcall
mov
int
into
int3
pop
inc
sbb
or
mov
cmp
jmp
sahf
imul
and
mov
cs
imul
push
out
clc
ds
dec
xorb
or
mov
jbe
adc
ret
and
cmpsb
out
sahf
stos
jecxz
sub
insb
xchg
cmp
pop
cmp
sbb
loope
push
js
test
xor
movsb
daa
cmp
loop
sub
xlat
iret
or
lret
mov
or
stos
lret
daa
mov
xlat
xchg
xor
add
gs
sub
add
iret
fcoms
cmp
fstl
and
shll
dec
fildl
inc
xchg
sbb
call
int
stos
xchg
jle
mov
mov
rorl
aas
sarb
test
aas
pop
mov
pop
or
subb
lahf
jns
rorl
mov
inc
enter
mov
lods
sti
test
ficoms
mov
xchg
adc
icebp
scas
sub
xchg
push
cmp
ljmp
jge
or
mov
adc
jmp
hlt
icebp
pop
sub
dec
pop
mov
inc
jnp
cs
ss
rcrb
cmp
push
fmuls
ret
pop
rolb
insl
dec
or
add
xor
cmc
jle
sbbl
out
cltd
sti
inc
and
aam
xchg
or
movsb
stos
and
jmp
int3
das
add
stos
mov
fs
xchg
das
lahf
call
out
xor
jp
xchg
fcoms
lock
dec
jnp
fnsave
movb
addr16
xor
xchg
lods
and
ret
jns
cltd
push
pop
data16
daa
add
add
lods
adc
mov
nop
subb
jge
mov
loop
xor
dec
and
mov
jmp
insl
add
insl
xor
cwtl
mov
push
nop
push
xorb
xor
mov
mov
mov
mov
lock
xor
mov
adc
mov
sub
or
test
adc
sbb
pop
lock
mov
adc
sub
lcall
leave
pop
xchg
cmp
lahf
push
lock
mov
lods
lods
or
pop
pop
jl
pop
in
icebp
jno
cmp
pop
in
dec
bnd
es
decl
ljmp
jno
in
push
out
mov
mov
fsubrl
int3
movsl
add
dec
mov
jecxz
xor
inc
aas
sti
iret
shlb
movsb
mov
scas
imul
xchg
repz
xchg
inc
popa
cmp
push
movsb
pop
pushf
mov
push
mov
sti
addb
inc
jno
roll
enter
test
push
push
jns
hlt
out
enter
mov
or
aas
jecxz
loope
mov
cmc
out
decl
sbb
pop
pop
lret
setae
and
dec
pop
xlat
shl
jnp
add
or
int
mov
fsub
and
or
pop
push
arpl
sbb
sub
pop
mull
iret
cmp
xor
inc
add
xor
sub
push
das
and
or
hlt
sbb
leave
clc
push
sar
repnz
pusha
cmp
into
pop
xchg
add
aad
int
enter
mov
adc
test
and
stos
mov
mov
xor
pushf
sbbb
enter
add
pusha
push
mov
and
sbb
jg
push
ljmp
mov
sbb
dec
and
enter
or
test
neg
fdivrs
cmp
rol
mov
dec
sbb
arpl
cmp
cmp
in
rorb
sti
mov
add
mov
out
test
sbb
sub
sti
divb
invd
mov
in
cmpsb
push
int
jno
paddsw
out
movsb
jnp
adc
pop
add
in
cltd
js
inc
call
leave
daa
pop
pop
jp
test
ret
add
movq
push
inc
fsubl
adc
push
push
mov
lods
je
in
movsb
je
add
xchg
jmp
decb
sbbb
test
xchg
das
or
sub
add
cmp
das
ss
pop
aas
jle
cmc
or
sbb
outsb
dec
out
lret
or
fistpl
xor
ret
sbb
mov
nop
inc
rcll
mov
mov
arpl
add
dec
pop
cmp
cs
ds
sbb
push
test
mov
fisubrs
inc
lea
xlat
mov
lahf
int3
insb
add
and
jae
mov
or
mov
xor
mov
sub
or
mov
outsb
adc
cmp
test
jmp
mov
xchg
xor
fimull
cmc
test
push
je
jl
fnsave
filds
fisubrl
pop
mov
loope
mov
or
jge
push
ss
in
and
sarl
iret
outsb
push
jecxz
popf
and
xchg
popa
testl
cmpb
daa
push
jo
jmp
xchg
mov
mov
mul
sub
jae
sub
add
and
icebp
out
sbb
out
sub
mov
adc
pop
push
incl
test
mov
jmp
mov
jge
sbb
xchg
sarl
test
dec
push
out
mov
test
or
jno
clc
insb
lods
lcall
pop
mov
ret
mov
adc
and
int
jmp
fidivrs
popa
jno
cmp
inc
daa
add
cwtl
dec
icebp
orb
gs
jae
inc
outsb
fildl
std
insb
repnz
shlb
and
ljmp
mov
shrl
scas
sbb
jnp
inc
aaa
mov
dec
popf
dec
daa
dec
pop
push
cmp
or
pop
imul
inc
cmpsl
aaa
std
and
test
add
fcoml
xor
inc
mov
jg
imul
add
cwtl
fcom
sbb
sub
adc
pushf
inc
xchg
imul
out
aam
cmp
fldcw
and
int
enter
cli
les
inc
push
cmp
push
sub
popf
sub
push
cmp
test
iret
and
fcoml
inc
leave
jne
mov
loope
rcrl
sbb
bound
cmp
pop
test
stc
dec
sbb
mov
cmp
cmp
inc
mov
fs
xchg
xchg
mov
mov
dec
cmpsb
mov
sbb
inc
push
xor
inc
xchg
inc
xchg
or
mov
dec
and
icebp
adc
sbb
dec
sub
adc
idivb
out
stos
inc
and
scas
cmp
lods
cmp
les
cltd
mov
out
sub
adc
mov
incb
imul
lret
mov
dec
js
pop
inc
cwtl
loop
mov
jbe
sub
in
sbb
fs
mov
cmp
arpl
ja
or
aad
daa
ja
push
dec
jmp
pop
stos
sub
or
push
and
xchg
jge
out
fsubrl
int
repnz
les
add
test
pop
stos
add
or
add
jge
jge
inc
dec
jp
cmpsb
xchg
ret
fidivrl
fsub
pop
int3
add
xchg
sbb
cmp
sarb
sbb
adc
add
jecxz
jbe
rclb
and
bound
push
test
jecxz
movsb
orl
mov
or
xchg
mov
xchg
loope
in
inc
imul
shll
js
jnp
sbb
dec
xor
xchg
lock
hlt
stos
jg
and
xchg
inc
sub
adc
sub
inc
cmpsb
cmp
mov
inc
fcmovnu
mov
fucomp
inc
push
in
mov
push
into
pop
dec
pop
or
fdivrs
pushf
iret
cli
test
fimuls
jns
jne
fmuls
inc
mov
jb
test
pop
fstl
aas
push
lcall
dec
adc
adc
jae
out
lcall
add
xchg
hlt
pop
out
addr16
mov
xchg
adc
daa
xchg
rol
inc
ret
test
loopne
outsb
int
mov
jl
inc
and
in
mov
data16
xchg
mov
sbbb
mov
jge
cmp
and
jb
cmp
cmc
sbb
and
popf
stc
adc
jae
or
ficomps
lds
or
cmp
mov
xchg
sub
xor
jae
mov
mov
jge
jmp
test
push
pop
test
dec
sbb
xor
jl
mov
add
imul
je
mov
aaa
lret
dec
add
mov
sbb
stos
fildl
fs
and
lock
fwait
popf
mov
or
or
inc
shrb
mov
cmp
and
fldenv
dec
sbb
mov
mov
arpl
cltd
je
popa
mov
inc
hlt
push
cwtl
sub
jne
push
rclb
xor
cmc
pop
fidivl
mov
fistl
push
dec
arpl
shrl
or
jl
pop
into
lcall
push
jno
mov
es
or
call
sub
fucom
je
push
cli
cmp
fstl
mov
outsl
push
add
int3
dec
fsubrs
cmp
dec
outsl
int
mov
pop
addl
pushf
pop
addr16
sahf
imul
enter
das
xchg
mov
stos
fcmovb
push
cmp
inc
fs
mov
pusha
or
mov
scas
stos
xor
shrl
std
or
popf
es
and
cmpsl
jne
pminsw
out
cmp
outsb
rclb
insl
push
add
or
mov
int
xchg
push
movsb
cli
imul
fwait
rcll
add
inc
xchg
enter
mov
sub
xor
dec
out
les
mov
shll
cli
cli
sub
sub
jne
or
mov
jecxz
loopne
xchg
enter
and
dec
test
push
and
jae
sub
orl
shll
dec
into
sbb
mov
xchg
mov
sub
cmp
repz
push
loope
lcall
cmpb
cli
sub
mov
jmp
fbld
jle
pushf
mov
icebp
fbstp
mov
push
xchg
outsb
sarb
cmp
jo
inc
andb
and
add
aas
inc
in
test
int3
rorb
fwait
lret
jne
mov
adc
cmpsl
or
inc
xor
fdiv
add
setno
jle
nop
or
jno
jnp
jl
pop
test
pop
popf
aad
idiv
bound
add
sub
mov
jg
mov
xchg
xor
insb
fisubl
dec
push
roll
std
lahf
jl
incb
andl
loop
cs
and
pop
repz
mov
xor
xor
fcompl
push
mov
add
call
int3
shrl
mov
adc
dec
jle
ret
movsl
aad
mov
inc
insl
lods
jno
inc
pop
imul
fs
or
pop
outsb
xchg
pop
fistpll
orl
or
push
ficompl
push
add
cmpl
sub
push
sbb
inc
dec
stc
mov
movsl
xchg
adcb
and
imul
pop
push
jp
push
loopne
hlt
hlt
lcall
or
or
mov
and
xor
pop
mov
xor
pop
sti
jecxz
jne
pop
negl
sub
jb
out
add
pushl
aaa
insl
xor
sub
mov
inc
jl
xchg
push
out
scas
fsubl
lock
daa
xlat
dec
jmp
push
mov
mov
mov
sub
sbb
mov
arpl
mov
int3
ja
sub
sbb
inc
jmp
mov
sub
and
mov
inc
mov
movsb
push
bound
sbb
faddp
loopne
cli
pop
pop
push
call
xor
pop
push
add
sbb
test
add
gs
dec
mov
jg
rcrb
mov
not
pop
outsb
mov
jmp
das
xchg
and
adcb
in
mov
sarl
cmpsl
sbb
inc
mov
out
cmp
bound
ss
int3
add
mov
data16
fcom
cmpsl
lds
mov
and
bound
out
push
push
fs
repnz
xchg
mov
cmp
or
mov
lods
mov
add
out
jl
sbb
xchg
pop
repz
and
rclb
xor
adc
xchg
scas
imul
sbb
mov
ss
jbe
insw
neg
ficompl
inc
mov
int3
cmpsb
int3
sbb
pop
mov
sbb
test
xor
dec
ja
and
sub
xchg
mov
xor
stos
add
movsb
aam
sub
daa
fcomip
jno
jle
jb
ja
out
xchg
inc
push
push
jge
sahf
mov
mov
or
mov
fdiv
push
clc
jno
decb
cmp
int3
add
dec
js
sub
loop
mov
repnz
jbe
jl
mov
test
inc
sbb
arpl
test
dec
add
rcrb
js
jge
and
cwtl
callw
and
push
daa
imul
and
jbe
mov
mov
ja
push
lahf
xor
stos
outsl
or
xchg
xchg
int
outsl
cmp
adcb
jb
push
imul
cmp
push
or
fidivl
fwait
inc
jp
aam
add
jbe
dec
stos
repz
ret
fdiv
gs
out
or
xor
adc
imul
loop
cmp
inc
inc
pop
mov
out
mov
in
insb
mov
add
xchg
mov
or
popa
gs
sarb
pusha
jmp
jle
add
add
popa
inc
orb
push
cmp
arpl
mov
imul
sarb
add
sub
out
je
dec
pop
bound
movsl
jl
repz
cmpsb
icebp
cmp
inc
sub
lea
insb
sbb
bound
je
arpl
loope
lds
mov
dec
cmp
clc
xchg
dec
sub
add
aad
push
jno
fmull
arpl
pop
std
push
addl
fwait
mov
in
push
mov
mov
inc
in
test
fildl
stc
arpl
lds
insb
popf
inc
mov
arpl
pop
jle
sti
cmp
mov
imul
daa
repz
mov
mov
imul
pop
repnz
dec
mov
fdivs
sbb
cmp
push
andb
inc
and
pop
mov
xchg
bound
push
xor
loop
and
and
xor
fbstp
out
inc
hlt
lods
push
arpl
inc
push
lret
xor
pop
aam
ljmp
imul
fdivr
sbb
inc
jmp
scas
adc
mov
sbb
jne
push
dec
inc
push
push
mov
stos
mov
mov
inc
xchg
inc
mov
loope
mov
lret
cmp
cli
nop
aam
pop
jmp
dec
popf
and
stc
jno
movzbl
mov
inc
jp
das
lret
push
jbe
lea
ds
in
or
push
push
xor
inc
and
sub
mov
mov
iretw
and
test
call
cmp
imulb
das
loop
cmc
shlb
sub
cmc
shrb
in
lcall
sub
std
cmp
and
call
and
test
mov
loop
cmc
ljmp
mov
out
ret
ja
loope
lahf
jle
sti
or
sub
movsb
push
push
pop
leave
mov
fnsave
cmp
insl
inc
sbb
sbb
mov
xchg
and
and
or
pop
nop
stos
in
lcall
divb
xchg
jp
mov
popa
out
xor
push
fisttpl
cmp
sub
jge
loop
rep
or
sub
mov
popf
insb
xchg
mov
rol
iret
aad
gs
lods
mov
xchg
mov
inc
stc
xchg
push
push
mov
jbe
sub
jle
lret
inc
mov
arpl
es
out
popa
ljmp
pushf
pop
push
rcll
pop
lock
push
or
aam
cmp
sbb
mov
pop
jg
fucom
jno
dec
mov
fs
adc
cli
dec
cmc
mov
test
sbb
testb
lds
cmc
cmpsl
nop
cwtl
les
sub
sub
inc
int
pop
add
push
daa
paddusb
int
in
jecxz
mov
fs
or
int3
dec
in
pop
mov
mov
sti
nop
push
call
or
jns
bound
frstor
mov
cmp
adc
into
pop
sbb
dec
fwait
push
shrl
push
sub
aad
sub
in
fucomip
xchg
push
sub
and
jns
push
cmp
cmp
sbb
ret
arpl
xchg
mov
ficomps
fs
inc
adc
out
out
add
pop
xchg
lret
int3
mov
add
loop
std
and
ret
push
pusha
cmpsl
xchg
dec
aaa
cmpsl
mov
push
or
lahf
pushf
cmpsb
fimull
daa
dec
adc
sbb
insb
xchg
cmpsl
sub
out
mov
mov
lahf
addr16
repnz
adc
push
push
dec
ds
into
ret
push
fsub
jmp
fucomp
inc
sbb
add
aam
popf
pop
push
data16
popw
pop
jns
sbb
sbb
fwait
jge
nop
jbe
xchg
in
pop
aad
jbe
lods
sub
pop
les
jns
or
mov
mov
sti
add
mov
mov
and
sub
add
outsl
nop
inc
or
sbb
addr16
dec
mov
dec
into
ljmp
insb
xchg
mov
int
dec
pop
pop
jo
lods
xor
loope
mov
stos
pop
scas
push
mov
xchg
inc
not
lods
adc
arpl
jmp
outsb
ds
sub
or
loop
rol
outsl
cmp
pop
les
push
adc
jmp
pop
data16
xor
push
jbe
mov
gs
repz
test
mov
into
dec
or
and
mov
shr
daa
xchg
inc
xchg
sbb
in
aaa
scas
dec
cmp
mov
bound
stos
mov
pop
addb
ja
mov
and
aaa
push
pusha
std
ljmp
add
xlat
adc
pop
jnp
test
jge
addl
test
and
and
jg
jle
xchg
xchg
js
lods
xchg
int
stos
ds
fs
xchg
add
adc
scas
push
mov
data16
outsb
rcrl
add
sbb
push
sti
sub
xor
dec
adc
imul
adc
sub
add
push
jo
movsb
jle
fisubrl
aaa
jg
jnp
sub
add
add
stc
inc
sahf
das
or
lcall
stc
pop
push
repz
push
cmc
cmp
xchg
xor
sub
sub
or
mov
xchg
icebp
ljmp
jne
das
or
push
adc
pop
movsl
pop
pushf
aad
adc
mov
mov
daa
es
lret
mov
out
int3
and
dec
jb
in
dec
scas
lret
inc
push
lds
imul
ret
dec
push
push
in
cmp
in
add
clc
and
imul
pop
scas
lret
add
push
int3
hlt
aad
fwait
mov
les
out
iret
stos
dec
ret
mov
jmp
pop
cmp
sub
in
mov
ret
gs
jns
push
or
loop
pop
arpl
fsts
inc
xor
xor
adc
and
or
fildll
mov
sbb
insb
div
lock
shl
xlat
or
jne
es
adc
mov
xor
idiv
inc
fildll
mov
cmp
xchg
add
mov
xor
repz
pop
imul
mov
loopne
jecxz
insb
sbb
stc
in
fwait
sbb
rcrb
push
add
call
fcoml
mov
out
pushl
fs
dec
mov
std
dec
lahf
cmp
test
arpl
outsb
mov
add
imul
xchg
sub
pusha
popf
fsubs
fstps
inc
insl
aam
outsb
cmpsl
jecxz
adc
adc
sbb
jne
ja
inc
cmp
push
call
cltd
hlt
sbb
lret
sbb
je
or
cmpb
ljmp
and
lret
mov
mov
push
mov
mov
fucomip
jmp
sbb
test
adc
push
mov
mov
mov
pop
movsl
adc
ljmp
or
mov
popf
fidivrs
jb
mov
pop
lret
pop
cmp
and
sahf
test
sbbl
out
aas
push
mov
mov
int3
loopne
popa
sbb
inc
test
test
jle
gs
clc
jb
stc
cmpsl
icebp
or
jle
sub
jnp
cltd
mov
jl
mov
adc
push
jo
push
imul
call
popa
aas
xlat
pop
cwtl
jge
xor
push
push
cli
push
iret
pop
jne
cmpsb
jmp
inc
mov
sti
test
pop
aaa
in
shrb
dec
dec
mov
pop
and
in
xor
and
cmp
and
mov
outsl
pop
andl
adc
dec
addr16
lcall
adc
fisttpl
fwait
outsb
xchg
inc
lret
mov
mull
adc
clc
push
mov
insl
stc
mov
push
popf
lcall
daa
loope
shlb
push
dec
cmp
dec
xor
outsb
adc
adc
sarl
loope
mov
ret
stos
aad
out
adc
cltd
sub
mov
and
arpl
sub
pop
lods
das
or
movsl
sbb
xchg
ret
addr16
arpl
mov
mov
mov
mov
dec
sub
les
fs
sti
scas
xchg
shl
jae
test
cmp
pop
out
cmp
lods
lret
repz
sbb
or
ja
cli
lods
push
push
lods
jge
movsl
cltd
mov
push
fisttpll
push
fsts
pop
pop
aam
das
imul
jge
lret
jb
cmp
adc
mov
mov
pop
cmpsb
jmp
mov
cmp
insl
and
jne
leave
hlt
call
insb
inc
fcoms
mov
lds
in
adc
pop
sbb
test
xchg
sbb
wrmsr
cmc
dec
lret
cmp
gs
clc
mov
inc
mov
push
fcomi
mov
int
jecxz
stos
gs
repz
xchg
dec
jb
pop
in
divb
jmp
leave
lock
leave
inc
cwtl
mov
dec
nop
lea
jle
add
push
mov
lcall
push
outsb
int3
stos
cmp
or
push
sbb
sub
stos
in
dec
popa
dec
inc
outsl
or
and
fists
and
adc
push
pop
push
xchg
xor
pushf
popa
push
notb
or
cld
mov
fldt
jbe
pop
and
xchg
jp
or
adc
inc
inc
jmp
jae
aaa
cmp
rorl
clc
and
push
loope
fcom
arpl
fcmovne
js
int3
sahf
mov
and
inc
push
dec
test
pop
jmp
in
push
sub
xorb
mov
xchg
imul
adc
fwait
insl
fsubl
in
incl
stos
sub
push
push
lods
fst
dec
insb
pop
push
jcxz
inc
jno
mov
stos
aam
dec
dec
and
outsl
xor
fsts
cld
add
adc
and
inc
or
pushw
xor
into
jecxz
sti
adcb
or
jge
sbb
not
shr
shlb
cmp
xorb
xorb
int
in
daa
sti
jecxz
push
fimuls
pop
ds
push
jae
jl
clc
ljmp
mov
stc
ret
repz
jne
jo
push
xchg
fwait
mov
mov
aaa
mov
adc
test
pop
popa
iret
scas
push
int
in
xchg
dec
fwait
in
test
cli
pop
mov
icebp
push
push
mov
push
jne
dec
mov
push
sub
fldl
into
push
sbb
or
mov
jge
xor
mov
add
pop
add
fucom
subl
pop
dec
repz
push
and
outsb
sbb
push
sub
aad
or
mov
inc
add
xchg
mov
mov
inc
stos
push
lahf
bound
push
push
decb
lea
imul
mov
add
xchg
fst
jle
outsb
arpl
test
cmp
outsl
mov
sbb
dec
ficoms
addl
ret
dec
jge
mov
add
add
fsub
repz
lret
inc
push
xchg
adc
and
xchg
jmp
int3
daa
dec
mov
push
sbb
popf
and
dec
loope
pusha
inc
mov
push
stos
imul
mov
jge
xchg
in
cmp
adc
sub
repz
subl
pushl
jnp
js
mov
rorb
sbb
in
shrb
adc
xchg
std
out
dec
out
ror
out
inc
xor
test
pop
sarl
test
sbb
dec
outsb
xchg
int3
xor
jecxz
enter
pop
jecxz
aaa
in
movsb
inc
push
dec
popf
or
adc
icebp
lock
or
aaa
scas
mov
sti
test
dec
sbb
lods
add
lret
push
xchg
sbb
icebp
mov
faddl
or
mov
mov
push
sub
xor
sbb
mov
cmp
aaa
imulb
dec
pop
lods
jno
sahf
fistpll
sub
pop
bound
pop
or
popa
or
in
cli
je
loopne
nop
pop
mov
clc
imul
add
pushf
js
push
and
mov
aaa
outsb
pop
dec
lahf
fildll
mov
repz
lret
les
imul
mov
test
iret
imul
aas
in
lret
cmp
out
dec
call
pop
into
inc
jge
test
add
fstpl
repnz
test
push
add
movsl
pop
jg
inc
jg
add
dec
loope
subl
mov
lock
pop
das
push
stc
xchg
cmp
jns
ret
and
jg
enter
sti
jbe
push
dec
or
negl
push
cs
pushl
loop
nop
in
lods
jp
pop
or
xlat
lock
out
or
push
pop
pop
add
fdivs
sbb
rcll
in
lret
or
push
or
ss
adc
dec
mov
mov
das
jb
mov
incl
mov
adc
xor
adc
push
fcomps
lret
movsb
sbb
roll
shrl
jae
cltd
ss
adc
mov
push
jb
push
scas
shl
dec
mov
add
int3
sbb
xor
cmp
stc
aaa
mov
rorl
sub
inc
fsubrs
and
xor
xor
add
push
add
jbe
imul
xlat
ljmp
jno
stc
inc
fsubrl
sub
arpl
fnstenv
frstor
and
dec
shlb
lods
add
jo
mov
add
pop
dec
clc
je
lcall
adc
adc
scas
lret
lea
jae
cli
cmpsb
scas
push
sahf
aam
or
sub
jmp
push
push
cli
cld
dec
add
int3
xchg
fadds
insb
leave
test
cmp
clc
push
iret
bound
stos
aam
inc
dec
lods
insl
data16
inc
adc
aam
stos
push
mov
jb
mov
out
dec
pop
incb
adc
js
mov
push
xchg
dec
gs
rorb
mov
adc
ljmp
jg
stos
pushl
push
push
sti
xchg
push
dec
pop
mov
dec
sbb
mov
push
mov
dec
xchg
sub
inc
adc
cmp
mov
ret
jae
and
inc
jb
mov
push
popa
mov
push
xor
xor
aam
xchg
inc
jbe
push
test
fwait
lret
push
xchg
add
popa
bound
jge
arpl
sbb
in
cmp
cmp
pop
bound
cld
loop
insb
stos
int
ret
sti
in
lahf
or
inc
xor
inc
or
mov
cmp
sub
aad
jmp
push
aaa
imul
pop
aas
ja
add
sbb
and
div
les
lods
inc
inc
cmc
addl
mov
or
xchg
iret
movsl
push
or
outsb
loopne
mov
or
push
hlt
int3
jle
add
insb
insl
dec
mov
sbb
insl
adc
imul
sbb
stos
shl
scas
out
xor
in
push
lahf
mov
xlat
faddl
insb
jecxz
adc
mov
lods
outsb
and
xor
imul
sbb
xchg
or
hlt
ret
xchg
and
add
setb
pusha
outsb
fs
flds
int3
ret
push
out
inc
sbb
pop
repz
add
sarb
xchg
push
cld
movsb
lcall
loop
incb
jl
pushf
sbb
insb
icebp
insb
mov
xor
jge
xchg
or
mov
sbb
xor
mov
inc
add
pusha
test
sbb
adc
pop
and
data16
dec
insl
repz
int
clc
mov
inc
push
lret
movsb
xor
push
mov
rorb
mov
mov
or
ret
lahf
cwtl
add
inc
push
pcmpeqb
icebp
push
xchg
movsl
scas
int
repz
test
les
and
cltd
inc
arpl
addr16
mov
mov
imul
inc
mov
or
push
clc
and
lcall
cmp
cmp
mov
mov
in
mov
adc
cmpb
cltd
and
pushl
out
push
or
xchg
sub
inc
pushf
ja
in
sbb
andl
push
ret
rclb
jno
push
fnsave
aas
movsl
test
add
xchg
popf
cmp
lret
sub
loopne
push
push
mov
insb
ds
loope
mov
clc
sub
fwait
daa
filds
pushf
mov
ret
fwait
ss
pop
jmp
data16
cmp
imul
fwait
dec
fstps
xchg
movsb
daa
push
in
rcll
cltd
dec
push
xor
arpl
adc
dec
sbb
mov
and
xor
test
or
and
in
in
in
adc
adc
inc
xor
add
jecxz
and
int
es
ffree
pop
fsubs
cmp
les
scas
jo
push
pop
clc
adc
push
pop
inc
mov
push
ss
fbld
fidivrs
mov
subb
lahf
xor
push
pop
bound
int3
in
out
xor
repnz
mov
repnz
stos
mov
dec
out
es
sbb
push
xor
sub
adc
inc
aaa
add
xor
adc
in
or
das
lcall
sub
jmp
and
call
out
push
sbb
pop
sub
rolb
icebp
fiaddl
popf
in
jns
push
or
dec
fwait
fwait
add
and
and
rcrl
int
mov
adc
xchg
lcall
push
cmp
sbbb
pop
outsl
pop
popa
aaa
shr
lahf
mov
or
add
pushf
adc
arpl
cmp
mov
xchg
xchg
push
fs
sahf
sbb
jmp
call
push
sbb
icebp
add
xor
push
insb
push
inc
mov
xchg
aas
movsl
call
and
adc
ja
insb
aam
inc
or
xchg
push
pop
call
push
bound
shr
in
jns
jo
lea
clc
xchg
pop
sbb
ss
lods
in
dec
daa
shlb
fs
cmp
jo
pop
sbb
xchg
or
sti
mov
sbb
mov
cli
sbb
cli
xchg
nop
leave
dec
outsb
sbb
mov
inc
lret
pop
insb
cmp
push
aad
scas
stc
lods
pushf
hlt
clc
fnstenv
mov
adc
add
pop
mov
add
mov
dec
push
icebp
fsubrl
and
push
cmp
adc
cmp
sbb
mov
lcall
mov
js
fmul
cmp
adc
mov
icebp
out
mov
lret
test
std
shrl
mov
add
repz
out
jbe
pushf
push
dec
inc
add
loopne
cmpl
add
in
pop
dec
mov
pop
insb
out
mov
jle
ljmp
add
or
sub
stos
pop
cs
addb
rorb
icebp
mov
dec
cmp
add
pop
movsl
pop
pop
xchg
cld
lods
jno
and
cmp
adc
sub
arpl
sbb
or
dec
push
arpl
cmc
mov
call
add
sub
push
aad
out
sahf
sarb
push
mov
insb
fldt
push
fisttpl
adc
xchg
xor
xchg
and
xorb
mov
dec
sbb
test
inc
movsb
jb
and
enter
ficomps
popf
nop
dec
js
xlat
adc
xor
jg
je
sbb
and
lock
jl
mov
fcomps
pop
pop
mov
inc
xchg
test
fidivl
jp
ror
in
push
push
outsl
jge
rcrb
push
xlat
cmp
shlb
inc
addl
add
dec
out
sahf
xlat
js
pusha
out
mov
js
rcr
imul
test
dec
insl
xchg
sbb
and
jg
add
adc
push
xchg
imul
stos
add
iret
add
negb
loop
and
pop
xchg
xchg
lock
lret
jne
push
imul
pop
mov
and
out
cmp
jno
mov
cmc
cld
into
inc
or
in
in
clc
arpl
mov
dec
pop
lret
cltd
idivl
loopne
cmp
js
and
aad
inc
shrl
dec
aas
movsb
sub
insb
call
addr16
ret
mov
mov
out
test
icebp
xchg
cltd
stos
mov
cmp
push
int
loopne
les
in
call
mov
xor
jp
pop
orb
add
inc
popf
or
mov
cmc
ficompl
out
cli
test
cli
inc
push
push
mov
xchg
dec
pusha
int
add
xchg
sbbl
dec
mov
dec
pop
push
outsb
rcrb
push
popf
cwtl
xchg
imul
scas
mov
cmpl
test
pushf
mov
add
enter
popa
pusha
mov
inc
loope
push
xchg
xor
push
addr16
popf
and
sub
aaa
cli
mov
jg
sub
test
dec
jns
inc
stc
pusha
jne
hlt
insl
out
jb
mov
sbbl
cmp
xor
fmull
xchg
arpl
sub
jne
adc
test
or
bound
mov
repz
stos
test
cmp
fcoms
icebp
mov
xchg
lret
xorb
xchg
pushf
pusha
cld
push
stc
test
cmp
out
mov
push
xchg
insb
and
sub
inc
cmp
cltd
mov
les
pushf
cmpsl
or
daa
adc
clts
aaa
repz
frstor
lods
adc
inc
push
add
shll
testl
pcmpgtd
push
jnp
call
inc
ss
sti
mov
xlat
push
je
insl
cwtl
test
stos
and
fucomp
push
icebp
cmpsl
movsb
aas
fdiv
mov
stos
mov
cmp
in
scas
leave
sub
add
fcmovnbe
xchg
popf
jns
mov
sbb
out
testb
stos
scas
fidivrl
rcrl
dec
data16
xchg
push
les
ds
push
fistps
repnz
mov
push
adc
movsb
push
stos
int3
repz
sbb
roll
stos
aam
mov
xchg
and
inc
ret
pushf
jo
jo
xchg
and
xchg
repz
and
mov
push
mov
sbb
cld
cmp
mov
pop
and
int3
mov
rolb
jmp
sbb
in
adc
or
push
imul
fdivr
mov
dec
cli
push
lods
pop
rorb
mov
scas
inc
mov
mov
stc
sub
sub
and
push
mov
jp
push
int
call
fstps
or
in
jmp
cmp
test
add
dec
les
and
fdivrs
ljmp
and
dec
movsl
dec
ds
jb
mov
pop
pop
or
mov
dec
repnz
cwtl
dec
jno
cmp
fstps
and
adc
test
push
pop
or
cmp
iret
adc
pop
inc
lahf
into
sbb
rep
enter
popf
cmp
push
dec
sahf
dec
popf
jg
les
sub
ja
cwtl
cltd
adc
pop
shlb
push
mov
cld
and
ja,pt
pop
into
call
std
xchg
jnp
sbb
test
lea
sub
adc
or
ds
imul
ret
subb
call
cli
clc
xchg
cmp
movsb
adc
sbb
cmp
jg
nop
inc
aam
mov
mov
fisubl
out
cmp
in
sub
je
stos
jne
mov
cmp
and
cltd
ret
jg
lahf
stos
jp
push
xchg
mov
test
pop
fsubrp
xchg
cmpsl
outsb
mov
data16
sbb
pop
sub
push
outsl
mov
inc
cltd
test
or
and
fstps
sbb
xchg
rorl
fsubrl
sub
jecxz
cs
mov
add
and
mov
mov
andl
mov
sub
mov
pop
mov
sub
std
mov
xchg
mov
enter
setnp
mov
das
push
push
or
mov
orl
mov
imulb
mov
lea
pop
nop
add
movups
cmp
and
je
nop
daa
mov
rcl
dec
cs
insl
dec
popaw
mov
hlt
imul
dec
add
sbb
xchg
scas
push
xchg
fisubrs
out
or
ret
inc
dec
or
loope
dec
push
int
push
repnz
leave
stos
iret
int
or
cs
fwait
popa
cmp
in
pop
sbbb
xor
loope
ljmp
xchg
stc
or
sbb
xor
xorb
adc
shrb
xchg
enter
mov
movsl
xor
mov
sub
sub
in
mov
lods
imul
push
cmpsb
push
rcrb
aas
pop
mul
cmc
scas
cmpsb
dec
dec
icebp
movsb
test
stos
or
xchg
adc
out
ret
mov
aaa
add
xchg
sub
lahf
rorl
dec
gs
sub
repnz
mov
stos
push
ret
adc
hlt
cltd
push
mov
or
dec
mov
pop
std
out
lods
fwait
scas
jne
xor
sbb
jne
stos
sbb
shl
push
pop
xchg
mov
adc
sub
and
sbb
stos
adc
std
test
mov
repz
aad
pop
xor
repnz
pop
xchg
cmp
insl
cmp
dec
inc
filds
repnz
sub
test
mov
sub
dec
fists
movsl
es
lods
mov
in
daa
pusha
jne
aam
mov
pop
sbb
add
add
add
pop
daa
adc
mov
js
subl
sbb
jecxz
loopne
fidivl
iret
adc
roll
push
and
lret
sbb
ret
or
and
ss
ds
divb
lods
ds
sti
gs
nop
les
std
sti
add
push
mov
into
lret
incl
test
push
roll
outsb
adc
jno
adcb
imul
in
mov
sbb
push
jp
xchg
push
enter
inc
mov
jne
mov
jle
sub
dec
nop
sbb
mov
ja
pop
jmp
ja
push
loop
mov
lret
mov
stos
mov
pop
lcall
xor
sti
mov
jae
dec
jmp
push
mov
or
xorps
ja
sub
das
lds
scas
stos
sub
jb
ja
rol
sbb
mov
pop
sbb
pop
sar
ljmp
jg
popf
adc
test
outsl
and
jge
in
test
fs
rcrl
sbb
mov
es
and
xchg
jg
jl
js
loope
iret
movsb
mov
push
cwtl
aas
sbb
mov
xchg
loope
push
push
adc
outsb
cltd
addb
pop
dec
jo
fisubs
movsb
lret
and
and
sbb
pop
imul
in
popa
sbb
cmp
xlat
sti
bnd
and
dec
mov
mov
sbb
xchg
push
in
fs
cli
mov
xchg
pop
test
cmp
mov
das
test
add
inc
enter
xor
sbb
bound
fstps
cli
jne
dec
shl
jno
shrl
sbb
sub
jp
dec
ljmp
rorb
gs
inc
mov
dec
mov
sbb
pusha
cli
sub
dec
cltd
lods
popf
push
int3
sbb
aas
dec
or
sub
icebp
xchg
int
and
adc
add
push
mov
and
push
and
inc
pop
push
push
aam
mov
stos
sub
or
add
lock
aaa
sarb
cmpl
cmp
loop
outsl
push
dec
cmp
push
faddl
pop
mov
add
sbb
adc
je
lods
xchg
popf
shrb
push
jl
jmp
xor
cli
mov
pop
test
push
cld
xlat
mov
xor
int3
add
sub
push
sahf
adc
cmp
sbb
in
ja
pushf
bound
in
insb
hlt
xchg
es
test
adc
imul
in
leave
add
adc
aaa
js
arpl
movsl
out
dec
adc
pusha
jmp
in
adc
push
out
lock
fstpl
xchg
jae
dec
enter
pop
pusha
inc
or
xchg
inc
jp
outsl
cwtl
popa
xor
xchg
push
jg
lock
and
pusha
out
mov
inc
add
imul
sahf
mov
outsb
xchg
mov
sbb
mov
cmp
pop
dec
add
mov
cmp
inc
aad
les
mov
push
or
jae
sbb
xor
addl
pop
test
aam
daa
aaa
and
pop
push
mov
ret
loop
loope
testb
rorb
mov
mov
push
sbb
mov
in
cmp
jecxz
fnstenv
lret
and
cmp
mov
sarb
popa
pop
pop
jbe
jmp
mov
xchg
fbstp
or
adc
push
out
jmp
stos
cmp
xchg
xlat
sub
out
adc
inc
stos
inc
xor
and
xorl
aam
cmp
mov
add
gs
in
adc
leave
jae
jne
push
push
rorl
mov
loop
cmp
dec
mov
pop
inc
leave
movsl
nop
mov
push
je
xchg
pop
mov
imul
jo
pusha
aad
jo
repnz
fdivrs
jo
pop
mov
jnp
pop
cli
scas
xor
pop
cli
dec
dec
les
mov
cs
inc
cmp
ljmp
dec
sub
or
xchg
adc
cmpsl
xchg
dec
add
out
add
add
mov
add
scas
sub
outsl
cwtl
sbb
or
clc
mov
in
fmull
inc
lret
sub
sbb
dec
outsl
hlt
mov
mov
mov
sahf
xlat
xlat
xor
dec
iret
in
push
fidivs
das
and
adc
pop
push
push
add
mov
ljmp
dec
ffreep
idivb
hlt
push
xor
pop
aad
xchg
cmp
push
inc
dec
push
and
dec
pop
test
mov
cli
pop
cmp
fdiv
pop
outsb
fidivrs
fbld
adc
dec
cs
mov
jge
stc
jns
shll
sbb
and
insb
incb
in
push
outsl
js
fildl
and
push
fbstp
loop
jno
and
lods
mov
mov
rol
daa
jb
or
cmp
push
add
mov
test
xor
lods
leave
ror
fcomps
mov
cmp
xor
pop
pop
imul
push
fs
shlb
xor
or
out
jno
pop
jbe
aad
xchg
or
sti
leave
mov
add
orb
pusha
test
stc
test
dec
fistpll
rcrl
push
movsl
stos
rcrb
outsl
pop
cmpsb
ljmp
and
mov
mov
mov
push
pushf
sbb
jge
out
or
mov
outsl
cmp
push
mov
fisubs
sub
lret
into
mov
pop
jne
jae
cli
jecxz
stos
std
cmp
inc
jns
in
inc
cmpsl
sahf
sbb
mov
push
cmp
in
sbb
ret
cmpsb
stc
sbb
adc
mov
cltd
notl
adc
test
in
sub
adc
sub
jg
data16
addr16
shrl
mov
ss
xchg
cmpsb
stos
lcall
loopne
or
jno
rcrl
jmp
mov
ret
pusha
pop
push
imul
push
xor
cmp
pop
push
push
and
mov
repnz
sarb
notb
xchg
xchg
pop
ret
hlt
jb
je
add
pop
arpl
imul
ret
mov
leave
sbb
pusha
pop
jmp
xor
mov
shr
ret
aam
fldenv
bound
mov
out
lock
dec
lcall
xor
jmp
testb
jl
popa
mov
or
sahf
rcll
aaa
sub
inc
dec
xor
adc
mov
pop
loope
insb
cmpsl
repnz
push
movsb
adc
xor
lret
xchg
faddl
xchg
ja
xlat
out
gs
mov
inc
sahf
and
imul
lods
mov
das
mov
movsl
sub
xor
mov
push
mov
shr
pop
ds
fs
cmpsb
into
and
cwtl
push
nop
movsl
mov
sbb
sub
fists
imul
lock
xchg
outsl
pop
enter
ljmp
pop
or
add
xchg
mov
imul
shl
mov
push
call
sub
cmp
jbe
pop
and
rol
cli
fldt
adc
mov
addl
je
out
repz
cmpsb
push
out
in
sbb
outsl
and
mov
mov
bound
fmull
adc
sbb
out
dec
jle
jecxz
outsl
jge
shl
inc
out
pop
sahf
pop
dec
fsts
jns
cmp
mov
pop
cld
inc
mov
pslld
lds
fildl
subl
add
mov
pop
stos
test
mov
mov
test
jns
mov
jecxz
sub
int
mov
mull
rorl
jl
lret
sub
push
int3
push
sub
rcl
dec
icebp
popa
scas
daa
xlat
out
test
je
cmpsl
push
cmp
mov
cs
and
pop
icebp
sub
jmp
imul
and
test
push
add
jb
adc
in
push
cmp
inc
inc
insl
pop
mov
add
test
mov
xchg
push
cmp
jge
sub
jne
dec
cmp
mov
adc
sub
xor
adc
cmp
sti
rcr
test
mov
fcmovne
xor
add
scas
lods
in
lret
push
push
mov
mov
cmp
cmp
call
rcll
bts
into
lret
xlat
test
sbb
xchg
imul
dec
test
xchg
idiv
fsts
aas
xor
sub
bound
mov
push
ret
jge
int3
cmp
pop
xchg
mov
fs
dec
lss
ja
add
mov
lods
xchg
sub
js
stos
dec
lahf
dec
pushf
les
add
stos
stos
and
mov
jne
pop
push
and
sub
adc
and
sbb
mov
mov
lock
push
jl
out
outsb
call
aad
inc
mov
jno
shll
popf
sbb
cli
pop
dec
add
lret
cmp
stos
and
pop
push
sub
inc
push
jno
inc
sbb
fldenv
mov
push
mov
repz
jns
or
shr
mov
mov
xchg
xchg
push
loop
jns
aaa
sub
xlat
add
sub
push
mov
xchg
and
dec
int
cwtl
fnsave
shlb
aad
mov
ret
mov
jle
movsl
popa
lock
nop
jb
lods
dec
inc
sbb
pop
push
ret
cli
stos
cld
test
jne
dec
insl
stos
sub
adc
mov
inc
sub
mov
add
popa
cld
loop
lods
xchg
dec
dec
std
inc
inc
test
in
test
cmc
inc
mov
cli
insl
loop
inc
xor
loop
jnp
add
push
test
rclb
jl
jle
mov
or
sarl
aad
fldcw
pop
aam
push
pop
in
dec
xchg
xchg
mov
out
ret
and
add
inc
mov
mov
inc
sub
dec
or
leave
mov
movsl
mov
or
xchg
iret
sub
lret
and
and
add
mov
movsl
mov
bound
pop
push
arpl
add
rolb
imul
fstpl
lahf
loope
lahf
call
push
nop
outsb
jbe,pn
jno
jp
jp
dec
and
lahf
pop
jg
and
mov
mov
fsubrs
psubusw
out
push
jb
aad
pop
leave
mov
inc
repnz
loopne
jp
popa
loope
incl
outsl
mov
daa
pop
jp
inc
mov
mov
mov
mov
int
jecxz
nop
nop
xchg
in
mov
mov
pop
mov
imul
push
push
addr16
inc
pop
push
fwait
ret
mov
call
mov
fistpl
xor
jle
dec
pop
xlat
xor
mov
loop
les
cmc
sub
jae
sub
or
loop
inc
clc
jne
addr16
sbbb
ljmp
ljmp
pop
and
fisttpl
or
mov
fdivrl
or
sub
mov
arpl
jno
pop
push
jmp
jae
xchg
mov
jg
inc
sbb
dec
loope
inc
into
addb
in
insl
mov
mov
stos
and
cwtl
jle
cmp
mov
xchg
ret
movsl
loopne
mov
int3
push
xchg
test
push
ret
mov
aaa
sbb
mov
and
mov
dec
pop
jge
or
add
scas
xchg
sahf
into
flds
jle
repz
jecxz
mov
sti
add
fldcw
xchg
xor
call
xchg
add
in
jae
pop
sbb
je
repz
les
add
push
pop
mov
lcall
xlat
mov
shll
jecxz
scas
sbb
push
jg
dec
leave
test
xchg
out
mov
adc
test
and
cmpsl
dec
cmpsl
out
aam
adc
dec
mov
inc
xchg
ret
lret
imul
jo
fnstcw
jg
mov
cmc
mov
push
ss
cmpsb
cmc
xor
mov
andb
inc
or
add
adcl
shlb
sbb
cmp
sub
arpl
out
sub
rcl
sub
lea
lds
jmp
sahf
or
xchg
ret
mull
sti
add
mov
jne
push
pop
shlb
and
fucomi
push
jmp
xchg
sbbb
test
sub
aam
jge
push
cmc
stos
fs
push
mov
inc
rolb
lcall
push
int
icebp
push
cmp
xor
jmp
fs
repnz
loopne
lods
xchg
inc
stos
push
movsl
cmp
lea
je
add
test
push
adc
enter
jns
push
imul
sub
je
fxch
fisubrs
sbb
fisttpl
je
test
inc
mov
xor
orb
clc
pusha
add
adc
lea
rclb
daa
push
push
pop
or
cmpsb
sub
sahf
pop
andb
mov
xchg
mov
dec
cmp
mov
push
mov
xchg
mov
dec
sbbl
rorl
pop
add
jle
ds
divps
mov
aam
test
pop
inc
jae
lods
lock
or
es
lret
incl
daa
cmp
hlt
jb
sar
lea
clc
nop
shrb
divl
inc
inc
mov
mov
mov
cmp
pop
sub
iret
mov
pop
mov
push
pop
add
xchg
clc
fdivp
inc
xchg
xor
pop
sbb
xchg
mov
push
sbb
pushf
fwait
dec
sub
popa
data16
pop
cmp
pop
bound
mov
loop
hlt
sbbb
xchg
movsb
fiadds
jl
pusha
aas
dec
push
outsl
add
dec
mov
cltd
add
fcompl
jne
cwtl
pop
test
and
stc
fstp
dec
jg
xchg
or
inc
fstps
inc
xlat
push
add
pop
push
mov
dec
xchg
inc
inc
sbb
xchg
mov
and
mov
fstps
inc
sub
cmpsb
xchg
add
mov
lock
aam
xchg
aad
inc
jb
scas
sub
insb
or
sub
data16
lret
nop
clc
movsl
fnsave
mov
pop
lret
cmc
xchg
js
cmp
inc
push
adc
xor
mov
and
xor
fwait
xor
mov
repnz
xchg
mov
mov
mov
mov
sub
mov
sub
mov
and
fistpl
fisttpll
push
es
inc
add
in
mov
dec
roll
adc
xor
pop
popl
xor
out
lahf
jo
inc
cwtl
mull
push
pop
sub
xor
lahf
out
ja
add
lret
pop
push
aas
jne
jo
jle
jl
cmpsb
lock
xchg
xor
pop
xor
hlt
pusha
movsb
cmpsl
stos
push
rol
xor
cmp
push
testl
stos
xchg
xchg
sub
movsb
js
add
stos
aas
aad
out
outsl
cmpsl
inc
scas
lds
test
test
dec
std
cli
mov
pop
xlat
add
sahf
and
loopne
sub
adc
fisubs
ss
fadds
out
inc
cmp
cmp
push
pop
inc
add
bound
cmp
arpl
mov
mov
sub
xchg
faddp
loopne
jge
cs
ljmp
and
testl
mov
mov
jp
and
add
loop
loope
aad
pop
enter
fidivs
int
stos
pushf
mov
scas
mov
jge
or
xchg
ja
ja
pop
xchg
adc
cmp
pop
mov
clc
adc
mov
xor
dec
cmp
leave
adc
ficoms
cmp
loop,pn
adc
dec
xor
hlt
or
test
xchg
pop
movsl
cmp
mov
sub
dec
js
xchg
icebp
sub
pop
movsb
ret
pop
out
cli
popa
or
rolb
int
jmp
dec
adc
pop
or
cmc
pop
pusha
fmul
outsb
dec
xchg
mov
lods
out
adc
cmp
pop
cwtl
jmp
nop
sti
adc
pop
adc
int
sbb
out
icebp
lods
or
mov
shl
push
out
and
sub
fnstcw
jno
sub
inc
xchg
pop
push
xchg
sbb
and
cmc
outsl
std
adc
pop
inc
pop
mov
imul
dec
lock
cmp
dec
fsubs
inc
push
xor
incb
cltd
ret
mov
add
mov
call
dec
add
gs
ret
mov
push
out
ljmp
pop
popl
gs
je
mov
adc
adc
mov
ret
cmp
fildl
ret
jbe
dec
and
dec
push
pop
cld
aas
xchg
pop
ljmp
iret
pop
or
mov
jp
mov
add
int
xchg
push
cmp
scas
ret
mov
pop
aam
movsl
mov
movsb
in
push
push
lds
cmpl
cmp
pushl
jno
leave
mov
fsub
jns
cmpsb
rcll
jnp
ret
mov
adc
rcrl
lret
add
sbb
inc
add
loopne
xor
mov
and
cmc
bnd
aas
jge
xor
fxch
lds
xor
dec
mov
mov
dec
decb
bound
sti
lds
jle
vprotb
lods
push
push
sahf
je
and
mov
rorl
imul
pop
sbb
arpl
testb
push
jmp
nop
or
outsl
xor
fiadds
mov
rep
movsl
ds
mov
into
dec
ss
push
dec
faddl
mov
sub
jecxz
gs
push
inc
movsb
ss
and
idiv
lea
sti
xchg
push
jle
sub
sub
lods
repz
adc
mov
push
push
adc
mov
ja
adc
jo
dec
or
call
dec
push
fadd
jns
and
fwait
inc
loope
lcall
scas
popf
xchg
jb
mov
xor
je,pn
jmp
xor
mov
test
jmp
imul
pop
push
mov
mov
jno
lock
push
or
mov
mov
pushf
mov
js
sbb
xlat
cmpl
das
pusha
or
inc
mov
loope
stos
clc
sub
rcll
clc
fistps
test
pop
cmc
pop
xor
imul
sbb
hlt
test
insl
cmc
cmp
jns
lret
out
inc
outsb
ja
dec
lret
cltd
adcb
inc
jg
mov
mov
test
pop
sbb
test
arpl
test
lret
nop
jo
loop
test
pop
lea
sub
inc
push
aaa
out
jle
xor
xor
xchg
sbb
insl
fnstenv
mov
push
or
int3
xor
pop
xchg
mov
mov
repnz
adc
leave
je
inc
mov
or
aaa
dec
pop
cmp
adc
xor
jp
xlat
lds
jo
repz
push
dec
scas
mov
js
nop
lret
lods
clc
push
scas
cli
aad
cld
ja
test
lcall
gs
imul
les
mov
or
pop
dec
push
cmp
mov
out
fadd
fnstsw
push
cmpsb
add
orb
daa
fstpl
pop
sbb
imul
sbb
cwtl
in
pushf
or
mov
mov
fcmovb
push
mov
cli
std
cli
lahf
pusha
movsb
repnz
les
aam
leave
jno
or
in
aaa
ret
das
mov
adc
adc
lods
lods
pushw
sbb
mov
cmp
cmp
dec
daa
lcall
cmp
scas
ds
xor
or
mov
mov
push
addr16
movsb
idiv
xor
subl
pop
mov
and
sub
rol
mov
mov
mov
cwtl
inc
iret
jne
mov
icebp
mov
pop
stc
rorb
push
pop
out
jle
or
and
xchg
or
push
mov
movsb
jp
sbb
dec
pop
sbb
sub
out
notl
adc
mov
xor
add
scas
mov
push
cmp
lcall
lds
into
je
ror
std
cmc
mov
inc
mov
out
sub
mov
or
daa
xchg
sub
and
jge
dec
and
imul
sbb
sub
cltd
jge
push
add
es
lods
in
add
out
iret
mov
lock
movsb
call
into
lret
xchg
data16
add
mov
pop
imul
sbb
in
push
xor
test
jb
cmpsl
rclb
cwtl
aas
in
add
lods
repnz
jmp
mov
sbbb
inc
xor
enter
pop
shlb
es
dec
xor
iret
jl
and
fsubs
cmpsb
mov
pop
fdivl
mov
mov
test
mov
dec
pop
orl
push
push
inc
and
cltd
mov
outsl
out
dec
lret
stos
lret
mov
jmp
sbb
cmp
inc
stos
aaa
ficoml
xchg
mov
mov
pop
es
add
jno
jnp
mov
inc
lahf
mov
leave
cld
inc
dec
loopne
adc
in
push
jecxz
mov
ret
dec
push
into
sub
mov
mov
and
inc
insb
adc
stos
cmp
js
adc
xchg
push
loopne
jmp
adc
and
or
inc
jecxz
cmp
mov
xchg
xchg
rcr
or
testb
cwtl
jmp
or
ret
notl
aas
dec
adc
inc
or
jnp
cltd
arpl
pop
imul
out
dec
cmpsl
fildll
inc
cmp
inc
inc
inc
lcall
xchg
dec
lods
inc
mov
sahf
xor
jl
jns
in
xor
jmp
lock
cmp
fs
xor
js
inc
scas
push
pop
adc
mov
inc
in
sub
and
push
pop
sub
mov
sti
ficoms
outsb
mov
jno
inc
bound
xorl
mov
mov
test
ss
leave
test
add
xor
out
scas
mov
mov
push
test
ficompl
aas
and
inc
sbb
gs
fmull
cmp
mov
pop
lods
lds
mov
or
pop
fldenv
adc
fldl
pop
lcall
out
sbb
out
leave
adc
xor
loope
fwait
and
aaa
mov
mov
cmpsb
xchg
prefetcht0
mov
inc
or
scas
mov
test
clc
movb
jge
pop
xchg
ss
jge
ljmp
xchg
loopne
rol
clc
mov
fldcw
out
fwait
push
add
rol
pop
jl
lods
or
adc
inc
jp
lahf
adc
xchg
inc
add
test
add
cmpsb
cmpsb
xlat
pop
stos
jno
pop
adc
adc
push
jnp
sbb
into
cmpsb
loop
data16
aaa
dec
loopne
mov
or
int3
and
adc
outsb
jl,pt
ljmp
push
idivw
cmp
adc
inc
cld
or
hlt
jp
dec
sahf
ja
push
pusha
xchg
aam
ret
add
nop
aad
dec
rcll
sub
mov
into
push
lods
adc
pop
push
pop
sbb
int
das
shr
lahf
dec
repnz
xorl
xchg
mov
xor
int
fistl
sahf
ja
mov
cmp
inc
mov
or
scas
add
call
mov
and
int3
lcall
mov
xchg
iret
subl
adc
arpl
ffree
loope
mov
dec
inc
fwait
xor
inc
pop
jb
andb
mov
cvtps2pd
cld
jp
xor
test
mov
imull
mov
cmp
xchg
jle
inc
dec
and
test
sahf
mov
test
jp
test
push
push
jle
jno
in
je
and
add
jns
shrb
and
xor
test
fadd
push
inc
cmc
inc
aad
fdivrs
cli
clc
fcmove
add
inc
sub
cmp
inc
mov
movsb
loope
pop
xchg
sti
mov
push
cwtl
popa
jns
sbb
mov
sbb
pop
xchg
dec
add
lret
stos
push
xchg
pop
cmc
lahf
insl
dec
mov
mov
or
mov
es
cli
and
lret
test
mov
sbb
cmp
fdivrl
sub
jp
push
bound
popa
lods
mul
mov
gs
mov
add
mov
das
in
push
pop
push
mov
imul
push
dec
cltd
inc
add
xor
cltd
inc
ja
loop
mov
adc
hlt
xor
sbb
xchg
dec
jmp
insl
fwait
fs
jmp
xchg
cmp
sbbl
xor
adc
or
push
icebp
mov
xchg
mov
shll
add
inc
nop
xor
push
in
lock
scas
push
fsubrs
mov
repnz
add
cmp
xor
mov
mov
pop
jbe
sub
test
jecxz
jge
cmpsb
mov
jecxz
cmp
xor
jg
xor
push
and
mov
shl
lock
dec
lahf
ret
jb
jp
andl
cmp
dec
add
outsl
into
sbbb
fistpll
js
sbb
or
adcl
cli
scas
push
fisubl
dec
cmp
xor
in
jo
mov
mov
and
loopne
cmpsb
push
lock
ficomps
xchg
add
cmpl
fadd
jmp
movsb
in
inc
ss
stos
mov
or
and
aaa
icebp
cmp
testb
addr16
out
out
fsub
push
dec
cmpsl
jecxz
mov
xchg
sahf
or
sbb
lods
add
inc
lcall
jb
aam
sub
mov
push
test
std
adc
outsb
das
sbb
jno
mov
scas
xchg
negb
pop
stos
loope
cmc
ss
cmp
jmp
xchg
fwait
fwait
add
js
dec
aad
mov
cmp
mov
jle
jns
mov
mov
stos
mov
pushf
mov
js
inc
adc
cmp
sti
xchg
mov
mov
mov
adc
cwtl
lods
lcall
imul
repnz
mov
adc
xor
sub
push
inc
or
or
icebp
mov
scas
sub
sbb
cmp
jae
xor
rcll
dec
addl
inc
cmc
lret
pop
bound
or
inc
xlat
xor
push
add
add
outsb
ja
xchg
or
mov
sub
fistpl
mov
push
jge
and
cmp
mov
bound
movsb
xor
sbb
in
xchg
xor
cmp
mov
rcll
enter
test
jns
js
mov
out
lods
cmp
fdivr
sbb
sub
xor
mov
mov
jae
cmpsb
and
lea
movl
movsl
iret
lahf
xchg
jmp
nop
lahf
or
inc
repz
and
call
or
daa
fsubrl
pop
jle
repnz
xor
vpunpckhqdq
loopne
push
movsl
das
popa
push
fistpll
fnstcw
fxtract
lret
cmp
fisttpl
xchg
jp
sbb
adc
loope
adc
jns
ss
cmp
lahf
loop
cmp
xor
pop
out
cwtl
sub
and
dec
jmp
popf
mov
xchg
in
mov
jbe
fwait
xor
mov
and
add
cmpsl
push
xor
outsl
les
and
loop
out
mov
jo
pop
sti
out
je
loop
cmp
dec
loopne
cwtl
arpl
cmp
xchg
mov
mov
iret
cwtl
mov
mov
push
in
cld
scas
sbb
pop
mov
sbb
xlat
pop
jo
mov
aad
add
jb
xlat
pop
dec
mov
pop
sbb
rorl
xchg
divl
jns
pop
int3
xchg
in
xor
xor
int3
lcall
aad
add
pusha
stos
test
mov
mov
es
sbb
cltd
cmp
ja
mov
iret
push
mov
jmp
scas
mov
rclb
dec
xchg
gs
xor
or
sbb
je
jle
and
in
cmp
pop
dec
pop
fnsave
inc
mov
pop
stos
push
ljmp
mov
fstps
jb
addb
pop
push
sbb
xor
sahf
sahf
push
jno
sarl
mov
jo
xchg
xor
fwait
lahf
enter
ljmp
out
pusha
jle
pop
jmp
cmp
cmp
lcall
movsb
shr
push
jo
xchg
jge
inc
mov
dec
mov
cmpsl
pop
mov
xor
faddl
mov
adc
das
in
cmp
rcrl
scas
call
mov
sbb
popa
insb
bound
mov
lahf
lahf
push
frstor
aas
outsl
lods
jae
dec
xor
inc
rcrl
insl
sub
sarl
adc
jp
je
pop
movsb
popa
loopne
or
outsb
push
mov
xchg
fdivs
push
mov
cmp
push
cmp
ret
clc
and
out
dec
adc
cmp
cmpsb
pop
roll
push
fdivl
js
cmp
repz
aad
fisttps
stos
les
pop
or
ficoms
pop
xchg
insb
aad
in
out
in
add
stc
jmp
movsb
push
daa
adc
and
mov
mov
pop
nop
xor
neg
lods
push
adc
movsb
int
add
pop
ja
arpl
xchg
push
dec
fst
outsb
push
adc
and
cmp
mov
dec
add
int3
sbb
mov
pop
pop
rcrb
fwait
popl
pop
xor
jg
adc
adc
mov
mov
inc
jae
push
dec
loope
sbb
fisubs
push
leave
pop
push
pop
and
cmpsl
add
xchg
jns
sbb
aaa
sub
lods
sbbl
push
push
test
add
movsb
imul
cld
stc
out
dec
aas
pushf
cmp
add
daa
dec
mov
lcall
mov
mov
and
sbbb
repz
lds
ds
pop
mov
xchg
or
adc
adc
mov
push
sub
lret
gs
leave
lds
pushf
add
cmp
mov
frstor
das
jno
jb
ja
pusha
inc
js
and
filds
stos
mov
int3
sub
rorl
push
sub
jae
sub
out
mov
pop
mov
cwtl
xorb
aad
sbb
mov
xor
mov
jb
xchg
ss
aam
imul
mov
xchg
jbe
mov
cmc
add
adc
mov
ja
hlt
scas
add
cmp
mov
adc
sbb
aam
jg
roll
cmc
lods
jne
xchg
stos
jne
mov
in
mov
in
addr16
loopne
add
loopne
or
ss
negb
xor
lea
hlt
and
pcmpgtd
shrl
pushf
push
loop
loop
adc
jbe
push
pop
hlt
mov
xchg
mov
add
inc
jns
mov
pop
mov
test
rcll
outsb
addr16
cmp
mov
cmpl
xchg
pop
pop
xor
cwtl
or
pop
daa
out
mov
xor
cltd
repnz
jl
pop
dec
cwtl
addr16
insb
mov
inc
jbe
ss
add
cmpsl
dec
fwait
lahf
pushf
aad
rolb
adc
sub
das
es
mov
mov
out
or
jg
dec
stc
lods
cwtl
jbe
insl
push
mov
cmp
cltd
sub
outsb
dec
mov
hlt
sbb
pusha
add
cmp
ficoml
sbb
cmp
jbe
in
xchg
sub
in
repz
push
push
test
imul
testl
mov
popf
pop
adc
jb
mov
aaa
ja
pop
cmpl
out
pop
rcl
sbb
xchg
enter
xchg
or
repz
mov
mov
out
jbe
and
or
xlat
pop
push
mov
mov
cmc
aam
mov
pop
negb
sbb
mov
je
sarl
fcmovb
pusha
test
es
movsl
mov
mov
out
outsb
pop
loope
mov
js
xor
xor
pop
pop
or
and
lods
jb
test
outsb
sub
jno
jg
and
jg
mov
and
fldt
sahf
and
cltd
cmp
add
xchg
inc
sub
inc
xchg
dec
sub
and
mov
add
inc
mov
jmp
dec
xor
mov
or
mov
insb
pop
dec
push
xchg
movsb
adc
lahf
pusha
xor
fistpll
cld
jae
sbb
lret
pop
push
fistpl
popa
xchg
push
das
inc
mov
je
xchg
pop
mov
loopne
mov
mov
and
xor
push
pop
cwtl
cmp
inc
mov
fwait
xchg
adc
ljmp
fidivrs
rolb
test
loope
mov
mov
adcl
mov
push
pop
es
movsl
push
movsl
js
jne
lods
mov
mov
in
fsubs
xor
aas
mov
mov
jb
call
cmp
cld
fsubrs
es
inc
outsl
addb
push
das
arpl
push
pushf
scas
popa
fucomi
fisubrs
jnp
outsb
inc
dec
fnstenv
cmpsl
int3
dec
outsb
insb
push
pop
push
xchg
mov
mov
stc
arpl
sbb
stc
or
xor
jecxz
and
push
push
mov
addr16
sbb
in
sbb
adc
ljmp
aad
sti
jmp
mov
int
sbb
int
sub
mov
push
or
and
or
sbb
aas
lea
insb
xor
or
loopne
ljmp
rol
insl
movsl
sub
leave
pop
sub
xorl
in
call
outsl
cmp
sub
cli
inc
and
stos
ja
enter
cmpsb
mov
sub
sbb
pushf
mov
lock
sub
inc
cmpsl
addr16
pop
inc
jno
jns
sti
leave
sub
sbb
in
fildl
stos
fists
and
pop
sub
inc
xchg
fidivs
popa
popa
iret
pop
inc
xchg
dec
cmpsb
cmpsl
lret
jns
sbb
inc
rcrb
xchg
outsb
inc
push
xlat
xlat
jnp
mov
dec
test
add
jl
mov
aad
inc
jno
sub
lret
mov
test
pop
fdivr
stc
orb
mov
sbb
xchg
push
arpl
fsts
subl
lods
imul
loop
mov
inc
loopne
jmp
fdivl
sti
lock
inc
test
sbb
in
stc
leave
insb
loope
push
pop
cs
cs
roll
add
pop
push
call
and
mov
or
pop
das
push
xor
push
mov
and
cltd
jns
cs
xchg
sbb
fs
mov
and
dec
and
loop
mov
daa
mov
mov
or
rorb
mov
push
xchg
aas
mulb
cwtl
jno
and
mov
decb
insl
gs
movsb
ret
lret
enter
outsb
adc
push
stos
clc
mov
psllq
mov
or
je
push
jb
jne
les
scas
inc
in
popa
movsl
xchg
out
sbb
fcmovnb
js
xor
xchg
rorb
sti
loop,pt
mov
mov
sahf
push
js
push
inc
xor
nop
add
lods
dec
inc
out
test
rol
pop
lods
pop
jns
pop
inc
nop
mov
das
pop
ja
push
outsl
mov
clc
xchg
and
dec
das
dec
sub
pop
cld
sbb
sub
push
stos
push
pop
lock
mov
pop
jmp
bound
mov
lds
mov
lahf
ret
into
mov
dec
cltd
adc
dec
icebp
dec
or
jmp
jns
or
int3
rcl
push
mov
ja
popa
into
jmp
sub
fwait
pusha
cwtl
jge
lcall
cmp
fldl
jle
mov
mov
lcall
sub
sbb
imul
ret
mov
je
sbb
sbb
ss
dec
loop
ror
or
insl
lcall
jp
scas
aaa
cmp
movsl
cmp
jmp
mov
mov
mov
jecxz
push
jp
inc
xchg
or
xchg
bound
and
leave
cld
movsl
jb
xchg
ret
pop
xchg
stos
pop
cmp
cltd
push
xor
sahf
xor
repz
xchg
add
cmpsl
and
subl
cmp
jp
inc
scas
movsb
xbegin
pop
idivl
xor
and
iret
mov
in
lret
cmpsb
cmp
cmp
adc
les
and
int3
mov
or
into
pop
adc
jae
mov
inc
fimull
jne
in
lahf
add
iret
xchg
sbb
cmpb
scas
scas
dec
jns
repz
jle
pop
dec
ljmp
inc
enter
mov
adc
or
dec
cmp
outsl
inc
test
cs
adc
mov
jmp
xchg
dec
xor
jne
mov
mov
push
mov
hlt
pushf
mov
flds
ficoml
or
into
lock
sahf
add
lahf
repz
ljmp
sbb
pop
das
sbbb
std
dec
cmpsl
test
cmp
lahf
int3
fidivrl
mov
rolb
jle
mov
int
mov
aam
lods
insb
es
pop
sbb
mov
repnz
dec
adc
adc
inc
data16
mov
enter
and
mov
ds
pop
ja
cmpsl
in
cld
outsb
xor
xchg
sub
jnp
sub
push
dec
dec
loope
dec
sub
push
lea
cs
imul
lahf
nop
or
xchg
mov
and
lods
leave
mov
xor
inc
jle
jecxz
iret
aas
mov
mov
xchg
ljmp
out
push
mov
mov
or
pop
pop
mov
push
and
adc
mov
sti
out
add
inc
xor
cmp
jae
out
xchg
push
adcl
andl
jmp
mov
aad
xor
push
adc
mov
popfw
dec
jb
jbe
inc
or
cmp
add
sbb
jbe
push
add
pop
ss
adc
inc
pop
out
adc
push
xor
out
out
mov
adc
lret
inc
fmull
out
xchg
dec
stc
jns
cld
inc
cltd
mov
jnp
mov
dec
pop
jmp
outsl
xchg
fdiv
fldenv
cltd
jg
or
jp
and
bnd
xchg
sbb
stc
adc
inc
dec
mov
cmp
pop
jle
cmp
data16
shrl
add
mov
mull
pop
jne
mov
sbb
andb
adc
ss
sub
das
adc
pushf
shrl
pushf
cmc
and
mov
mov
orl
loopne
add
and
std
add
lods
inc
out
aas
movsl
jbe
xor
into
sbb
jecxz
xor
fistpl
ja
ret
int3
and
jp
scas
ss
ret
xchg
jns
cmp
add
dec
in
xchg
out
mov
mov
sbbb
ret
add
pop
dec
and
cmpsl
and
out
lcall
jl
inc
mov
dec
shlb
lret
add
repnz
pop
and
xchg
movsb
into
sbb
cmpsl
cmc
add
stos
shll
cld
mov
scas
aad
sub
stos
jl
clc
scas
push
dec
pushf
jl
insb
hlt
data16
mov
imul
mov
inc
out
push
mov
pop
outsb
adc
cmp
sbb
hlt
mov
mov
pop
jbe
daa
mov
mov
not
popf
jns
pop
xor
and
lock
daa
or
repz
inc
sbb
fcoml
mov
mov
jno
into
push
aad
bnd
cmp
rol
add
test
js
fildll
aas
loope
jbe
lahf
add
mov
leave
xchg
dec
cmp
into
lea
loop
test
sub
out
sti
and
mov
jge
pop
inc
xchg
push
adc
nop
pop
xlat
mov
aad
mov
popa
int
lock
das
sbb
mov
xor
sub
mov
inc
xchg
pop
xor
shlb
mov
mov
gs
jns
xchg
mov
dec
js
add
imul
clc
pop
cli
in
sub
or
fimuls
cmp
shll
add
xchg
mov
std
std
xor
fsubrl
fistpl
pop
mov
addl
push
cwtl
dec
lea
and
inc
push
push
sbb
mov
and
out
pop
pop
sub
lods
int3
loope
ss
mov
mov
push
push
jo
out
shl
cmpsl
mov
sbb
ret
rcr
pop
xor
notl
in
rcll
ja
push
out
ss
pop
pop
push
rcr
outsl
jb
mov
dec
xchg
mov
aas
testl
mov
mov
push
jmp
pusha
in
fnstsw
mov
loope
mov
leave
call
pop
cwtl
lea
mov
mov
adc
fstl
iret
stos
inc
sbb
ljmp
in
fists
call
xor
mov
jle
ds
pop
es
jns
cmp
adc
jmp
rol
aas
call
adc
xchg
es
cltd
test
jge
lret
jg
push
ret
lock
xchg
imul
aam
imul
or
jns
push
and
mov
fnsave
push
pusha
ds
insl
mov
xlat
jecxz
lahf
add
mov
and
data16
mov
cltd
xor
xlat
adc
mov
inc
pop
addr16
ret
rorb
sub
mov
xchg
sub
insl
lods
mov
mov
movl
sub
lret
lcall
jo,pn
aas
push
push
scas
jno
and
xor
dec
and
jo
in
inc
xchg
ss
sub
pop
stc
and
add
and
pop
sub
outsl
mov
das
clc
fistl
add
int3
mov
sub
jnp
loopne
xchg
mov
xchg
adc
aad
xor
test
insl
push
mov
push
repz
enter
loope
mov
lods
jo
sub
lock
push
into
out
clc
or
es
dec
mov
cmp
repz
or
mov
adc
int3
lock
mov
out
cmc
push
dec
adc
jae
jae
xor
lret
popa
inc
test
jo
jb
pushf
mov
cmp
push
and
int3
loope
in
ss
add
rcrl
in
push
aam
push
cs
faddl
or
fisttps
mov
and
fcmovnu
xchg
sub
rcrl
fldl
adc
loop
jno
mov
scas
mov
je
inc
arpl
pushf
cltd
es
add
outsl
push
sahf
cli
call
cwtl
dec
aam
mov
std
ja
enter
sub
ss
xor
hlt
xor
and
or
cld
js
xor
mov
cwtl
push
es
mov
adc
js
sbb
cmpsl
or
out
ja
rcrb
and
jge
push
sahf
push
pop
lcall
faddl
rorb
mov
in
sarl
and
mov
clc
xor
scas
enter
jg
or
in
outsb
xor
repnz
push
xor
leave
adc
mulb
stos
call
mov
movsb
fsts
pop
dec
mov
cmp
xor
lcall
or
add
dec
mov
jno
lret
sbb
xor
jnp
push
pop
or
dec
mov
jo
dec
fdivrl
jecxz
rclb
mov
adc
gs
push
scas
insb
jmp
and
fidivs
adc
cmp
add
lcall
and
movsl
push
mov
data16
mov
sbbb
jns
mov
scas
mov
jmp
jge
out
inc
rcll
subb
xchg
jb
sbb
aaa
and
push
xchg
inc
aad
idivl
jecxz
and
les
inc
popa
jae
cld
push
mov
popa
repnz
xchg
push
enter
mov
std
pop
or
bound
jnp
rclb
dec
xchg
out
mov
outsb
sbbl
lcall
enter
leave
xor
mov
inc
enter
and
inc
pop
pop
mov
push
push
test
insl
sub
fisubrl
mov
int
add
and
xor
cmp
fbld
movsb
mov
repnz
ss
inc
mov
aas
ds
mov
in
sti
scas
pop
sbb
xorl
push
mov
push
nop
push
push
rcr
lahf
in
lock
push
imul
test
xchg
outsl
rol
inc
adc
orb
jmp
jno
mov
fwait
pmaxub
sub
xchg
dec
daa
sub
adc
fstl
in
push
mov
jmp
mov
inc
clc
xchg
xchg
into
lock
jecxz
push
loopne
push
filds
into
sti
push
pop
fstp
aaa
shlb
movsl
dec
push
pop
and
bound
mov
pop
in
ss
dec
pushf
cmp
lret
jge
xor
sbb
mov
call
scas
inc
das
movsl
sub
das
iret
cmp
and
subl
inc
idivb
pop
mov
xchg
and
jle
mov
jg
fxch
inc
insb
div
fsubs
sbb
rolb
cmpsb
lret
mov
sbb
aam
lret
mov
cmp
mov
dec
push
mov
sub
jo
adc
add
pushf
insl
mov
stc
idiv
cltd
adc
add
mov
in
xor
xor
pop
add
xor
or
add
mov
and
cli
dec
insl
pop
ret
out
mov
or
cmc
lods
cmp
add
imul
movsl
cmp
loopne
rorb
adc
mov
sahf
lods
shlb
push
dec
xchg
imul
inc
cmpl
sahf
out
cmp
mov
mov
xor
mov
cmpsb
cmp
lcall
shlb
xchg
mov
and
mov
cmc
clc
sub
and
loope
lahf
jo
and
pop
mov
push
dec
shr
sbb
repz
mov
jecxz
mov
sub
cmc
scas
dec
or
mov
data16
mov
out
test
sub
loopne
mov
lods
dec
push
pop
fistpl
cltd
ret
stos
std
inc
cmp
cmp
ficoml
and
pop
sub
mull
jbe
mov
jle
movsl
push
and
repnz
cmpsl
addr16
outsb
xchg
imul
dec
fdivl
stos
int3
cmp
out
add
dec
test
pop
rorl
mov
pop
xor
pop
sub
aad
ljmp
jne
jmp
hlt
scas
jl
ja
add
push
leave
data16
lahf
popf
pop
and
nop
adc
jge
mov
sbbl
xor
or
aas
push
clc
mov
xchg
je
or
xorb
dec
ret
pusha
adc
jecxz
and
das
fwait
push
jb
ljmp
add
rcl
inc
inc
xor
roll
fcompl
dec
sub
mov
dec
inc
mov
hlt
and
mov
xor
leave
jns
push
icebp
cli
pushf
jns
call
ficomps
jge
dec
push
or
int
fwait
in
push
nop
outsb
or
add
std
cmp
in
lret
push
mov
sub
out
mov
lock
xchg
ret
dec
xor
mov
mov
mov
mov
cmp
mov
add
fisttpll
pop
mov
add
fstl
out
push
jae
iret
fwait
xlat
sub
fdivrs
outsl
lods
mov
or
repnz
adc
adc
inc
sti
aaa
push
cmc
add
add
cmp
ss
popf
gs
jge
in
xchg
rcr
sahf
addr16
mov
pop
adc
jecxz
sub
add
das
add
mov
sub
std
and
mov
mov
cmp
aam
sub
xchg
push
inc
fisttpll
inc
outsb
pushf
aam
insb
dec
mov
cld
jbe
arpl
addr16
test
das
out
test
jecxz
push
lock
pop
xor
mov
lods
cmc
ror
mov
lcall
add
cmp
lahf
test
outsl
jle
mov
leave
inc
add
push
cmc
dec
pop
lahf
fucomp
shlb
cmpl
pop
sub
pop
dec
pop
sbb
inc
rclb
stos
or
test
shll
pusha
es
outsb
or
fwait
hlt
enter
scas
inc
xchg
fstp
fcoml
xchg
adc
cmp
adc
test
and
pop
jns
fsubrs
inc
jbe
hlt
dec
jmp
jp
mov
lret
arpl
fdivrl
xchg
and
loop
pop
or
jg
inc
cli
pop
or
inc
push
sysenter
int
or
out
push
fnstsw
add
aad
jp
and
mov
pop
scas
mov
mov
pop
insl
cmovle
push
jp
mov
mov
ljmp
out
pop
cmp
adcb
aas
repnz
ljmp
and
push
jg
rclb
xor
cmp
sbb
inc
pop
cmp
cmp
sbbb
fs
aas
pop
negl
test
mov
fcmovnbe
jno
xchg
add
add
push
insl
aas
repz
lcall
xor
pop
cmp
or
sub
test
aas
or
mov
and
in
inc
pop
js
out
hlt
dec
hlt
test
mov
lock
fwait
jg
fwait
add
jbe
sub
xchg
mov
ficoml
fldcw
pop
ds
sub
sub
ret
or
pop
cld
cwtl
hlt
mov
hlt
sbb
mov
iret
loope
rcll
add
or
in
cmp
inc
movsb
loop
lahf
cmp
cmp
push
into
push
dec
add
mov
jmp
add
sub
adc
mov
inc
movsl
rcr
jge
inc
mov
pushf
pop
lcall
repz
jecxz
and
and
add
or
add
dec
pop
xchg
mov
lret
mov
push
xchg
mov
ljmp
out
and
movsb
jg
mov
sbb
or
lea
sbb
jae
repnz
push
adc
aam
push
xlat
xlat
sbb
lcall
sbb
pop
in
dec
popf
add
int
sbb
les
sub
ret
test
cmp
lcall
fisttpl
xchg
xchg
sbb
xor
sub
scas
in
cli
jmp
adc
mov
mov
lcall
aas
xor
or
dec
xchg
jl
mov
jbe
add
shrb
jbe
aam
adc
push
sahf
mov
and
loopne
sbb
dec
movsb
loopne
rep
mov
sub
int
mov
hlt
in
adc
pop
push
insb
int
cmp
xor
and
adc
adc
notb
push
fisubrl
ret
ja,pn
jmp
pop
aam
orl
sti
sub
aaa
int3
loopne
out
push
mov
scas
add
mov
sub
and
push
xchg
mov
repnz
inc
cwtl
cwtl
xchg
notb
and
insl
pop
xor
sahf
mov
popf
fsubl
out
jl
pop
cmp
stc
sbb
pop
scas
out
les
nop
in
fs
and
inc
and
lock
mov
movsl
sar
pop
jae
loopne
pop
insb
shlb
movsb
mov
dec
cmpsb
pop
gs
ljmp
lods
lret
pop
ror
jge
push
xchg
das
push
mov
mov
loop
cmp
cld
xor
jl
jae
cmp
mov
test
pop
pop
pop
in
imull
jnp
les
repz
sub
dec
sub
xchg
loop,pt
or
aas
cmp
push
aas
push
hlt
fwait
lds
or
stos
stc
add
sub
dec
mov
loopne
out
aaa
stos
outsl
push
push
fbld
pop
je
gs
pop
rcrb
xor
out
or
shrl
movsb
loopne
mov
jge
das
and
xchg
out
cmpsl
arpl
loope
mov
popa
cmp
in
dec
sbb
adc
mov
adc
clc
xchg
fcoms
or
in
mov
xor
mov
adc
xor
daa
out
scas
mov
push
mov
rcrb
mov
cli
sbb
arpl
push
xor
xchg
lret
sub
call
sub
data16
das
pop
insl
leave
into
out
call
mov
mov
add
jg
fcmovbe
and
loope
je
fsts
popa
enter
or
fs
dec
push
cltd
xor
aaa
sti
xchg
mov
cli
dec
hlt
out
xor
dec
adc
mov
fnstsw
dec
xchg
imul
lods
jns
add
pushf
inc
ss
and
and
and
fucomi
iret
ljmp
fimuls
mov
test
les
lods
jb
jo
mov
stc
sti
fnstcw
pop
lahf
xor
inc
into
push
adc
fucomip
xor
push
jnp
call
aaa
stos
pop
push
jp
or
sbb
inc
mov
cmp
shlb
scas
lods
lods
bound
outsl
test
out
pop
pop
cs
lcall
mull
mov
bound
xor
or
test
enter
sbb
or
mov
mov
jbe
shll
fwait
inc
cs
or
mov
add
fmul
sbbl
fcmovu
sub
loop
jg
adcb
aad
cmp
scas
mov
fs
adc
daa
inc
cli
ja
push
dec
fisttpl
pop
push
sti
xchg
negl
jmp
cltd
lret
cwtl
inc
mov
xchg
mov
cmpsb
fnstsw
pop
mov
roll
ficompl
ja
add
push
mov
xor
lret
loopne
jp
add
mov
fisttpl
mov
les
es
jbe
ret
mov
repnz
xchg
lahf
jbe
cld
pop
fnstenv
pop
clc
adc
mov
sbb
cltd
js
xchg
dec
test
roll
ficomps
movsl
hlt
mov
push
shll
jp
sti
enter
add
or
aaa
push
testl
subb
fcompl
xor
pop
repz
sbb
ret
jne
cmpsl
in
cld
mov
jg
out
xchg
jae
ljmp
sub
pop
lahf
scas
in
sbb
xchg
cmc
fwait
out
in
fs
mov
inc
pop
sarb
xchg
dec
dec
sahf
mov
test
cmpsb
cmp
insb
lcall
scas
ljmp
cwtl
or
push
push
pop
lret
mov
inc
adc
hlt
dec
imul
mov
mov
das
add
push
jbe,pn
adc
fstp
dec
jecxz
clc
pop
mov
jp
std
subl
sub
pop
pop
xchg
test
push
adc
insl
cmp
xlat
test
lods
cmpsb
sti
sub
lcall
insb
jecxz
sbb
out
aam
mov
sbb
imul
fwait
push
jno
xor
pop
mov
arpl
sub
hlt
mov
push
in
imul
orb
or
inc
out
mov
popa
data16
mov
mov
inc
stc
ja
stos
sbb
jp
mov
push
test
iret
mov
xor
mov
jmp
xchg
aas
dec
nop
mov
xchg
lock
jo
xchg
xchg
scas
test
repnz
dec
sahf
jno
jnp
je
dec
call
xchg
fwait
shll
ja
sbb
call
std
ds
scas
pop
xlat
jae
insl
sub
pop
lods
xchg
insb
dec
je
stos
dec
xor
leave
pop
mov
test
sbb
push
clc
adc
cmc
sbb
leave
push
add
adc
mov
sbb
adc
imul
pop
xchg
xlat
fwait
jg
pushf
iret
mov
mov
lcall
jg
bound
repz
xor
xchg
mov
pcmpeqb
mov
shlb
fldcw
fldcw
hlt
fistpll
jl
repnz
xorl
and
and
and
push
add
mov
lds
xor
push
cmp
cmp
mov
incb
ret
js
in
je
repz
inc
bound
jo
inc
sub
xor
inc
cmp
scas
adc
push
popf
repnz
pop
daa
pop
xorb
dec
xchg
loopne
cmpsb
mov
jne
cltd
hlt
xchg
xchg
and
dec
out
out
dec
cmp
dec
or
xchg
or
lods
pop
jmp
adc
test
xchg
das
out
stc
add
inc
mov
or
gs
repnz
inc
pop
clc
push
push
pop
dec
les
mov
addr16
cmp
push
mov
jns
sub
or
xchg
out
popa
jbe
fwait
adc
xor
stc
add
jmp
icebp
add
add
add
insb
mov
sbbb
aam
inc
mov
xor
push
cmp
jecxz
cli
pusha
fwait
popa
xchg
clc
add
pop
pcmpeqb
pushf
jns
aam
xchg
out
mov
dec
aaa
loopne
push
pop
xchg
mov
pop
movsl
cmc
fisubrl
cmp
hlt
sub
push
push
hlt
lret
dec
loopne
in
push
fnsave
lea
insl
xlat
mov
and
out
pop
dec
enter
out
pushf
dec
sahf
ljmp
xchg
and
mov
inc
bound
add
xchg
jmp
jg
mov
xchg
stos
std
pop
xlat
in
xchg
sbb
adc
fdivr
pop
jg
insb
imul
std
jns
mov
adc
ret
rcrb
push
push
and
add
mov
aaa
pop
out
push
inc
push
jge
sub
cwtl
sbb
or
imul
into
pop
push
jb
dec
pop
out
inc
xchg
cld
jbe
sub
mov
rcrb
fs
shll
insb
pop
sarl
sti
sbb
dec
jp
mov
testb
pop
cmp
jle
in
jno
scas
xchg
test
pop
xor
jno
inc
xor
sahf
adc
call
cmp
push
cmpsb
inc
jle
mov
jno
aad
movsb
ds
push
enter
fisubrs
add
xor
testb
rorl
adc
ljmp
fistps
bound
push
pop
and
aam
push
fbld
mov
push
mov
fistpll
adc
je
pop
insb
mov
sbb
int3
sbb
std
xor
sub
adc
test
aas
and
lret
jp
lea
out
jle
jecxz
mov
sar
dec
cmp
add
dec
inc
ja
mov
lcall
fnclex
cmpb
out
test
xchg
xlat
gs
mov
cmc
and
mov
xchg
and
pop
movsb
outsl
testl
xchg
insl
mov
adc
fildl
les
and
inc
add
int3
mov
sub
into
sub
stos
cs
xchg
xor
aaa
popf
xchg
jg
cmp
stc
mov
mov
iret
gs
mov
xchg
sub
sti
jecxz
lcall
sbb
mov
dec
ja
lret
repnz
sub
xchg
dec
in
addr16
or
jo
pop
pop
ret
mov
jmp
std
push
xlat
lock
adc
scas
das
test
ret
mov
out
and
mov
push
and
pop
mov
pushf
sbb
pop
es
pop
mov
lahf
fdivrl
lods
mov
add
adc
lret
mov
cmp
outsb
inc
outsl
and
push
js
mov
iret
sub
lods
jmp
dec
dec
sahf
jbe
push
xor
inc
test
divl
pop
mov
inc
adc
sub
cmc
push
inc
int3
mov
jae
in
push
std
fld
ss
rorb
adc
lds
fdivrs
inc
cmpsb
pause
insl
std
pop
sahf
xchg
nop
dec
and
dec
adc
andb
por
mov
pop
iret
dec
pop
push
push
hlt
in
sbb
and
pop
movsb
and
jl
jns
jp
mov
bound
xor
xchg
mov
ret
mov
mov
push
mov
ja
fsubr
cmpl
repz
xchg
cmp
mov
dec
std
jge
adc
adc
inc
repz
xor
icebp
enter
jnp
fstpl
push
mov
fwait
and
jne
in
mov
mov
pusha
pop
cmp
cmpsb
dec
push
pop
mov
pop
stos
fs
or
stc
clc
int
cmp
add
fbld
cli
fisttpll
cmc
sbb
insb
jne
push
pop
cmovge
mov
cmp
jae
daa
in
rolb
pop
push
mov
ret
sahf
cmc
in
pop
xchg
and
lock
adc
xor
test
push
loop
dec
cmpsl
dec
xchg
dec
xchg
negl
cmp
cmpsb
sbb
scas
out
pop
repz
and
hlt
push
cs
jns
mov
in
fs
cltd
cld
decl
icebp
insb
xor
repnz
aas
lods
ret
ss
pop
in
cmp
fs
dec
divb
jg
imul
outsb
jno
sub
add
cmp
dec
sub
add
mov
xor
adc
push
imul
jns
ja
sbb
jb
dec
leave
add
xor
add
jp
xchg
adc
inc
inc
sbb
cmp
push
xor
andl
push
jns
lods
call
imul
xchg
add
jae
ret
sbb
xchg
mov
dec
test
call
int
mov
movsl
decl
jl
adc
sarb
nop
mov
mov
fidivl
pop
push
or
fdivrs
movsb
nop
into
stos
int
cld
jge
rol
cmp
dec
sub
imul
in
out
aad
dec
lds
pop
mov
inc
pushf
mov
mov
inc
mov
xchg
sbb
add
lcall
aad
cmp
xchg
add
cli
inc
ret
pushf
pushf
mov
xchg
jns
adc
push
and
push
orl
adc
cmpsb
test
xorb
fcom
adc
or
cmp
cld
sbb
mull
pop
leave
mov
mov
mov
loop
mov
enter
add
divl
push
outsb
sbb
cmpl
rolb
lahf
sub
jle
icebp
sub
xchg
or
mov
xorl
leave
sbb
jb
je
test
repnz
mov
stos
ss
data16
jb
add
dec
int
mov
and
cmp
lods
sub
cmc
icebp
imul
call
mov
hlt
stos
cmpb
xor
gs
adc
jbe
inc
cmp
sbb
fistl
jb
mov
xchg
je
sub
sbb
cmpsb
mov
inc
mov
push
js
sti
mov
mov
js
filds
mov
mov
mov
hlt
jle
imul
jno
push
push
push
pop
cmp
mov
fiadds
sbb
and
push
xchg
xor
cmp
icebp
add
jo
std
je
add
jns
jmp
lea
adc
jb
inc
xor
packsswb
mov
adc
aam
in
fistpll
jp
adc
faddp
dec
jle
sbbl
push
jge
stc
adc
mov
xchg
outsb
in
fldenv
lcall
xchg
ret
js
sti
imulb
xor
mov
sbb
pop
mov
std
addr16
out
or
push
push
je
xchg
mov
orb
mov
pop
lds
inc
and
mov
outsl
rcrb
mov
ds
push
stc
invlpg
dec
jne
jnp
roll
fmul
cld
and
nop
pop
arpl
jbe
jmp
push
sar
cltd
in
sti
fiaddl
and
mov
mov
add
inc
ljmp
jae
push
mov
popf
jo
dec
jl
sbb
dec
rclb
or
test
sub
pop
scas
jl
rcrl
xrelease
xadd
push
cmp
adc
lea
in
jb
mov
arpl
pop
push
adc
les
repz
sub
mov
mov
leave
stos
mov
jbe
adc
mov
push
dec
ja
dec
mov
ds
test
scas
lods
or
mov
sahf
adc
test
jle
repnz
roll
repnz
into
dec
jnp
xchg
mov
pop
std
sbb
pop
dec
movsb
test
sbb
jecxz
or
les
jo
sub
enter
lcall
and
add
out
lock
sti
popf
dec
dec
dec
push
xchg
xchg
xchg
decb
sub
sbbl
adc
mov
daa
mov
movsl
or
cwtl
mov
das
out
dec
rclb
adc
les
imul
and
movzwl
and
inc
imul
dec
ret
fwait
lcall
orl
push
in
and
call
test
int3
mov
ret
push
sub
dec
cmpsb
pop
adc
fsubrl
push
mov
out
inc
adc
jg
cmpsl
ret
daa
xchg
sahf
jmp
mov
test
aaa
xor
push
sbb
fcomp
ja
ss
mov
xor
loop
mov
push
mov
lret
sbb
stos
test
cli
das
xchg
incl
pop
mov
cmp
rclb
test
cmp
jmp
jnp
ljmp
das
fldenv
xor
mov
pop
movsl
or
bound
pop
ret
xor
add
in
push
aas
fisubrs
push
adc
es
mov
jmp
mov
mov
pop
sbb
sahf
out
jecxz
stos
pop
jmp
add
fistps
jmp
sbb
push
dec
mov
xchg
ret
mov
jge
fdivrs
xlat
push
in
loopne
lea
xchg
stos
cld
inc
pusha
or
push
adc
mov
aas
xor
mov
mov
add
dec
sahf
push
aas
jno
mov
mov
loopne
adc
push
sub
mov
jno
or
dec
add
lret
and
push
and
push
adc
or
or
nop
je
stos
int3
push
inc
cmp
lock
sbb
sbb
outsb
lea
mov
push
mov
es
sbb
sbb
test
pusha
sub
and
std
push
pusha
sbb
popa
in
lods
pop
in
stos
mov
xchg
xchg
push
leave
pop
dec
sbbl
add
xchg
lods
jno
cmpsl
es
jo
jo
mov
das
popa
lcall
punpckhwd
cwtl
adc
dec
pop
testl
outsl
push
call
cmp
push
xchg
sub
out
cltd
add
mov
jecxz
jnp
inc
jno
mov
adc
test
dec
daa
or
outsl
into
lea
cmpsl
mov
jnp
sahf
sti
in
das
jl
and
aas
sub
mov
push
outsl
inc
mov
mov
and
ret
adc
inc
outsb
mov
jbe
cs
mov
jae
aam
pop
hlt
fs
mov
insl
add
mov
sbb
leave
sub
enter
in
pop
popf
and
and
xchg
leave
mov
int3
mov
sbb
adc
push
xor
movsb
mov
mov
out
cmp
in
fsub
jo
dec
dec
sbb
stos
push
mov
je
add
push
ficompl
sub
inc
in
push
lock
mov
in
inc
add
and
outsl
pop
les
xchg
addr16
or
jl
aad
mov
aam
xlat
in
add
cli
mov
addr16
xchg
mov
pushf
xchg
cmc
inc
add
sub
inc
daa
clc
stc
cwtl
mov
add
scas
mov
xlat
push
xchg
stc
lcall
das
pop
mov
aad
push
int3
jb
xor
outsl
push
movsl
rorl
and
or
dec
movsb
mov
in
fidivrs
ret
jecxz
add
jne
lret
push
cmp
call
scas
cmp
dec
jecxz
fisttpll
jg
mov
sbb
pop
jmp
fbstp
inc
aas
sar
inc
faddl
and
cmpsb
sub
pop
icebp
fwait
push
cmp
jl
enter
xchg
lods
out
adc
icebp
sbb
in
ficompl
arpl
add
xchg
nop
shrb
xchg
in
mov
add
inc
jecxz
rorb
fisubrs
cmp
imul
sbb
lods
pop
icebp
int3
in
outsb
add
call
xor
fsubrl
andw
pop
cmpsb
push
pop
pop
push
or
mov
fsts
add
cmp
sbbb
loope
test
mov
out
mov
pop
stos
sbb
pop
mov
push
inc
aad
inc
shll
inc
mov
xchg
push
out
inc
pop
mov
rcr
loope
ja
js
jmp
cmp
and
movsb
in
or
cs
jle
jp
ja
ret
inc
ret
xchg
outsl
push
push
push
hlt
push
inc
inc
jae
sahf
adc
sub
sub
add
dec
push
pop
add
mov
arpl
insb
pop
popa
inc
jmp
mov
xchg
ret
xchg
xor
adc
jmp
xchg
jmp
lret
out
mov
fiadds
aad
adc
loopne
into
gs
lods
test
dec
push
adc
cwtl
clc
xlat
rol
mov
in
or
stos
and
push
pop
xor
jmp
sub
adc
lcall
or
push
jl
and
ret
and
or
imul
mov
jo
ja
mov
push
daa
cmp
ds
jecxz
neg
aaa
fidivs
xchg
cmp
pop
add
test
les
dec
xlat
lods
or
push
mov
xor
fwait
jno
pop
insb
or
lea
mov
mov
or
inc
dec
popf
inc
insb
adc
fcmovnb
dec
call
mulb
shl
dec
mov
mov
dec
fwait
pop
sub
gs
xor
xchg
ja
sub
popa
out
loopne
cs
sbb
mov
mov
xchg
inc
cmpb
jnp
xchg
pop
fnstcw
or
sar
add
adc
sbb
pop
int
mov
cwtl
stos
lret
jmp
mov
addr16
jmp
out
jno
dec
jge
mov
int
cmp
xor
xchg
mov
push
lcall
sub
les
lret
cld
push
cld
pop
mov
test
imul
fnstsw
xchg
xchg
andb
ljmp
lds
xchg
inc
sub
mov
inc
add
add
xchg
sarb
aas
mov
fistpll
inc
jmp
mov
pop
inc
popa
lea
xor
jp
push
mov
stos
sub
lret
rcr
mov
insb
rcrb
sbb
mov
iret
push
lcall
add
mov
or
push
sbbl
lcall
iret
aaa
and
cmp
cmpsl
imul
mov
shrb
xchg
jecxz
jbe
testl
mov
inc
ret
rolb
cmp
into
cmpsb
pusha
pop
inc
lret
iret
imul
push
popf
lcall
fsubrl
jl
insb
lds
jge
jge
pop
in
pop
push
mov
mov
sub
mov
push
aam
cwtl
stc
jno
mov
pusha
cli
loope
test
push
inc
imulb
cmp
clc
adc
xor
js
in
push
sub
lods
sub
ja
cmp
sahf
imul
mov
into
fnsave
jne
sub
dec
adc
mov
in
mov
xor
cld
add
jnp
cld
into
jb
pop
lock
sub
jne
dec
mov
addb
mov
dec
imul
mov
cli
adc
add
rcll
dec
mov
fstpt
fimull
js
dec
stc
mov
cmpsb
mov
mov
lods
lods
xchg
sarb
out
in
xchg
xchg
mov
clc
outsl
ret
pushf
mov
or
mov
loope
dec
push
jo
add
xlat
imul
call
mov
sub
jl
cli
push
dec
mov
jle
mov
es
rcrl
inc
or
jbe
cmp
mov
loop
fdivrl
or
push
fstp
setb
test
pop
cmp
sub
ret
inc
push
xchg
mov
mov
or
add
cmp
dec
aaa
cmpsl
xchg
xorb
push
push
xchg
cltd
mov
push
in
imul
adc
outsl
add
cmp
xor
lods
jb
into
mov
mov
jb
aaa
cwtl
cwtl
and
cli
insb
lret
ror
loope
sbb
adc
push
pop
jge
les
xchg
inc
stc
mov
lods
scas
sbb
mov
jnp
sub
addr16
fistpl
push
dec
out
ja
push
jo
out
pop
or
jp
sti
jno
icebp
stos
mov
inc
pusha
jne
test
jg
ret
loope
add
cmp
jle
xchg
fidivrs
push
jl
adc
cs
xchg
loopne
adc
push
sub
mov
mov
sub
cmc
pop
mov
in
ret
or
mov
xchg
out
es
lods
in
loopne
xchg
xchg
jl
dec
lret
out
daa
jae
add
fdivs
inc
and
sub
jnp
test
insl
dec
outsl
jmp
pop
sbbb
lock
cmp
aad
out
dec
jb
repz
or
add
and
mov
rcr
int
popa
sbb
fsubrs
bound
pop
ja
jmp
push
xchg
clc
pop
pop
sbb
sbb
dec
cs
xchg
scas
sarb
sti
mov
jmp
push
mov
loopne
pop
es
add
stos
rclb
push
insb
jp
test
xor
js
dec
rcll
into
xor
fistl
sub
sbb
dec
movsb
xchg
and
aad
cmp
sahf
sub
xchg
jno
pusha
mov
and
mov
pop
outsb
mov
ret
jg
inc
and
sbb
call
mov
cltd
outsb
pop
dec
hlt
cmp
jecxz
mov
sub
pop
fmuls
sbb
lds
ljmp
repnz
lahf
scas
mov
lret
cli
cmc
pop
and
push
lock
push
push
pop
cmp
xchg
fdivs
sub
in
loopne
xchg
lcall
add
jg
inc
cmpsb
push
rol
mov
js
or
push
sbb
push
jl
xor
test
ss
xor
adc
shlb
mov
cmp
mov
push
xor
les
sub
ss
cmc
mov
cmpl
cmp
xor
stos
or
jmp
roll
mov
jnp
mov
jbe
mov
jnp
cmc
pop
clc
add
xorb
mov
stos
call
sahf
addr16
fs
lock
xor
call
push
test
sbb
stos
lods
push
sarl
adc
lret
and
cli
xor
repz
fmul
stc
pop
movsb
leave
jmp
fcompl
insl
xchg
cli
cmp
jno
dec
jecxz
pop
xchg
add
imul
and
push
xchg
icebp
out
mov
jg
scas
nop/reserved
lds
popf
stc
repnz
icebp
jbe
popf
mul
xor
test
inc
xchg
sahf
dec
jmp
sub
outsb
loopne
lds
cltd
scas
xchg
lock
movsl
fsubrp
sti
mov
cmc
sbb
add
or
subb
push
dec
mov
outsl
and
jae
push
rcrb
fcomps
xchg
pop
xchg
adc
inc
add
and
xorl
mov
mov
into
push
je
rcll
mov
scas
adc
adcl
push
mov
jp
repz
call
aas
data16
int3
sub
push
jge
jge
xchg
pop
insl
and
jns
je
push
insb
gs
orb
jg
test
loopne
add
sub
mov
daa
push
test
xor
mov
dec
sahf
lock
jge
daa
imul
inc
repz
ds
sbb
loopne
and
sahf
sub
cs
scas
lret
jecxz
cmpb
loopne
andb
outsl
sbb
pop
hlt
cs
push
mov
mov
popa
add
sbb
movsl
xor
adc
dec
lahf
mov
inc
inc
in
mov
test
iret
sub
aaa
xorl
out
aam
fistpl
sar
jecxz
inc
fldenv
mov
dec
pop
in
jno
aad
mov
out
xchg
aad
rcrb
push
push
mov
add
rolb
mov
test
in
outsb
add
aas
adc
shl
xor
or
cli
xor
push
lcall
and
and
bound
adc
lods
test
mov
cmp
xchg
sub
pop
cwtl
fmuls
xor
mov
gs
or
add
aad
lods
push
insl
inc
cmp
imul
xor
pop
mov
hlt
aaa
xchg
out
popf
decl
jle
into
xchg
fwait
push
push
icebp
mov
stos
or
js
add
sub
xchg
stc
pop
pushf
leave
add
cmpsb
push
push
add
push
adc
adc
jmp
jo
xchg
inc
jl
scas
inc
cs
rcll
sbb
add
mov
cmp
pop
pusha
fnstsw
or
jnp
push
jns
jns
mov
or
in
test
addb
cmpsb
xchg
movq
outsb
pop
fcmovb
sub
inc
cmpsl
push
movsl
cmp
add
shl
adc
in
or
add
mov
in
sub
pop
shrl
leave
sub
mov
jns
xor
iret
xchg
scas
cmp
test
out
fadd
adc
xlat
scas
pop
fisubrs
sbb
push
aad
mov
std
addr16
jo
in
xchg
lcall
ret
mov
mov
lods
or
sub
pop
into
das
inc
fwait
push
pop
fucomp
stc
hlt
mov
inc
jmp
jnp
lods
or
cmpsl
outsb
and
xchg
add
ret
rcll
fld
mov
ret
mov
pop
pop
sbb
test
jnp
push
stos
sub
sti
mov
xchg
dec
mov
add
sub
in
xor
aam
or
test
inc
shl
add
insb
dec
loope
outsl
sbb
xchg
out
push
dec
push
out
pushl
add
out
add
ja
out
mov
fs
jns
pop
adc
dec
mov
sub
jns
stos
inc
stos
and
lahf
xchg
cmp
xor
xor
jmp
jle
cmpsl
adc
mov
mov
leave
test
add
je
cmpsl
adcl
push
jo
dec
or
incl
pop
inc
jb
sbb
dec
push
adc
push
addr16
aam
push
adc
mov
and
test
or
scas
movsb
push
data16
push
std
mov
int
in
cmp
shl
xor
sub
sub
leave
aaa
adc
fdivr
ret
sub
inc
xor
mov
leave
xchg
xor
ss
addr16
mov
imul
push
mov
push
push
xchg
sub
sub
dec
hlt
inc
packssdw
adcl
movsl
aad
push
fs
pop
mov
loopne
dec
or
push
orl
inc
ja
loopne
add
pop
mov
fsqrt
dec
fwait
mov
ljmp
inc
fs
lds
iret
push
inc
add
mov
jae
movsb
in
es
stos
sbb
xchg
aam
ret
imulb
xor
adc
jae
inc
pop
xchg
sar
insb
and
in
mov
daa
lret
imul
icebp
lret
sub
icebp
push
shlb
adc
movsl
testl
lret
lret
pop
outsb
adc
popf
ret
jb
movsb
cwtl
subl
cmp
test
int3
jge
stos
fnstenv
insl
push
xor
xor
fstp
bound
push
daa
jb
iret
push
rclb
adc
xchg
sbb
xchg
mov
or
mov
data16
pop
mov
dec
push
sub
mov
sbb
mov
push
pop
scas
and
repz
lods
lahf
mov
sbb
movsl
sbb
arpl
jns
jmp
movl
cmpsl
jae
in
mov
or
xchg
fdivl
fimuls
out
call
bound
pusha
inc
fadds
add
js
jge
pop
sbb
sbbl
in
mov
lahf
stos
mov
jmp
pop
fmull
sbb
in
or
test
pop
pop
pop
pop
mov
and
sti
xchg
jb
sahf
leave
jb
sub
mov
push
pop
cwtl
std
adc
insb
loope
notb
sub
pop
insl
out
idivl
pop
cmp
repnz
fs
pop
dec
or
imul
mov
dec
push
sbb
cli
mov
ficoms
push
mov
pop
sub
decl
lods
mov
dec
mov
mov
dec
pop
das
ljmp
add
movsl
and
xchg
pop
out
add
mov
ss
jno
and
mov
imul
xor
out
lock
daa
hlt
lret
movb
andl
or
in
mov
and
int3
or
sub
loopne,pn
or
push
sub
pop
out
push
ret
or
lcall
lds
repnz
jmp
push
push
jecxz
fidivrs
and
popf
gs
movsb
lret
out
insb
inc
lahf
mov
pop
out
imul
popf
dec
addr16
jle
inc
push
test
adc
inc
xor
add
int
mov
adc
inc
outsb
push
mov
test
ret
repz
sub
pop
lds
or
and
loope
ljmp
shl
test
lock
cmpsl
fldt
ss
dec
mov
sub
lods
and
and
add
mov
lcall
xchg
xchg
daa
sub
pop
push
adc
int
loope
je
mov
push
sbb
dec
jno
imul
xor
push
mov
imul
xor
cmpb
je
popa
pop
mov
push
fisubrl
pop
jle
les
in
arpl
sti
dec
int3
xchg
movsb
bound
xchg
sarl
dec
push
mov
dec
scas
sbb
xorb
jne
cwtl
lea
inc
je
sbb
out
fs
leave
sahf
into
test
mov
inc
testb
mov
gs
test
stc
test
repz
inc
pushf
xchg
or
imul
cs
cwtl
cmp
add
jp
pop
notl
cwtl
sbb
mov
add
jnp
cmc
cmp
cmpsb
pop
mov
cmp
test
sbb
jmp
sbb
sbb
inc
jmp
add
sub
mov
push
adc
mov
enter
enter
popf
and
call
es
popa
xchg
in
sub
int
lock
dec
inc
out
push
jecxz
add
adc
and
mov
imul
mov
imul
inc
sbb
jnp
sbb
push
push
add
in
mov
push
leave
add
jle
inc
pop
jge
xor
stc
dec
push
stos
test
dec
sbb
loope
fcmovnbe
push
pop
ljmp
inc
icebp
inc
jo
adc
and
xchg
lea
js
cli
inc
lahf
dec
aam
jp
imulb
je
ret
add
mov
lds
call
mov
pop
rclb
stc
data16
push
in
bound
icebp
scas
xchg
loop
pop
inc
std
sbb
dec
int
pop
xor
push
sbb
dec
dec
fcmovne
cwtl
pushf
xchg
dec
adc
push
rcll
clc
clc
sub
mov
pop
sbb
sbb
pusha
movsl
andb
jge
adc
jns
mov
call
add
stos
mov
popa
and
aam
jno
in
mov
ficoml
movsl
mov
inc
dec
mov
jg
int
int3
xor
ret
jecxz
andb
test
pop
leave
les
dec
scas
xchg
xchg
mov
das
cmp
lahf
call
jg
push
sub
movsl
pop
sbb
int3
pop
or
pushf
fiaddl
adc
pushf
dec
lret
std
into
pusha
pop
cld
dec
nop
pop
clc
or
popa
push
push
pop
sbb
fmuls
test
out
push
roll
popf
jg
add
faddl
add
int
xchg
leave
std
sbb
addr16
cmp
fstl
lock
sti
add
adc
sbb
sub
mov
dec
jno
push
sub
popf
fimuls
adc
adc
iret
in
repnz
mov
loope
fcomps
sahf
bnd
mov
ftst
or
mov
fimull
mov
dec
popf
call
push
ficoms
add
add
aad
sbb
cmp
icebp
jmp
jg
enter
std
imul
lret
and
rcrb
jae
xor
cli
movsl
hlt
and
addr16
cmp
jae
test
mov
xor
test
sbb
mov
ret
adcb
rorl
lcall
inc
inc
xorl
sub
inc
add
mov
stos
add
and
sbb
mov
inc
adc
push
mov
pop
xor
xchg
lret
cmpb
add
mov
push
pop
in
push
js
wbinvd
lcall
in
mov
out
roll
cld
cmpsl
xor
loop
pop
fwait
xor
inc
lret
add
jp
adc
lock
popf
movsb
adc
dec
mov
int3
xchg
ljmp
mov
push
dec
sbb
rcr
loope
jmp
adc
sbb
inc
into
call
xchg
dec
adc
mov
pop
sub
dec
test
fsts
push
mov
popf
clc
out
dec
addr16
popa
sbbl
and
popf
push
cs
pop
sbb
adc
sbb
loop
mov
adc
mov
add
mov
icebp
ret
outsl
das
add
mov
and
and
and
cmp
xor
mov
inc
dec
mov
and
push
shlb
fnstenv
jg
gs
xor
into
sbb
test
dec
dec
inc
mov
das
adc
test
inc
shl
push
dec
dec
out
ret
idivl
int3
test
popf
and
pusha
push
lcall
cmp
cmpsl
sbb
xor
insl
sub
sbb
push
arpl
mov
push
fisttps
lret
out
or
add
ret
and
cmpsl
adc
mov
inc
add
sub
add
cld
push
sub
adc
rolb
outsb
jge
shlb
xchg
les
xor
cmp
popf
fsubp
inc
cmp
out
cmpsl
jae
or
ss
cli
cmp
ljmp
mov
fisubs
mov
add
xchg
je
leave
inc
into
dec
loopne
fdivl
and
cmp
and
arpl
inc
fcomp
stc
test
and
pop
arpl
inc
das
add
popa
mov
jb
jge
dec
push
inc
mov
rclb
dec
les
add
outsl
dec
dec
xor
xorl
sbb
mov
push
fwait
mov
lahf
mov
push
dec
lods
sub
xchg
xchg
and
std
jne
and
xor
out
scas
jl
iret
mov
cmp
lcall
push
sbb
cld
xor
jge
jbe
push
fadds
sub
push
lods
call
das
adc
fnstcw
test
testb
push
jno
xchg
sti
mov
aam
ror
mov
out
out
stos
mov
mul
push
jno
mov
adcb
dec
mov
mov
sub
mov
in
mov
out
push
cli
mov
popf
adc
repz
cmp
adc
pop
test
mov
mov
push
adc
or
stc
roll
sub
cmp
repnz
sbb
shr
ja
inc
out
or
rcr
jl
pushf
aaa
idivl
mov
xorl
adc
pop
mov
std
out
test
outsl
les
or
imul
and
pop
sub
pop
jne
mov
xor
inc
or
adc
repz
jno
out
pop
test
push
inc
clc
cli
imul
mov
loope
xchg
insb
xchg
test
repnz
fbld
adc
inc
fadds
adc
mov
movsb
inc
xchg
xchg
nop
push
cmc
push
pop
pop
add
jp
mov
push
pop
mov
ja
cwtl
add
loopne
cli
out
add
pop
or
enter
dec
or
rcrl
inc
push
jae
mov
mov
pop
in
mov
inc
mov
loopne
lds
push
adc
insb
push
fimull
jmp
int
add
dec
in
repz
pop
loope
shl
add
sti
sahf
lds
addr16
ss
cld
ss
ret
ljmp
cmpsl
aas
ret
pop
daa
pop
pop
mov
test
sbb
das
mov
int3
in
mov
dec
lea
mov
cmp
push
xor
aad
arpl
lock
arpl
int3
aad
dec
and
mov
dec
lret
or
fwait
cltd
insl
xor
jecxz
inc
push
in
out
adc
mov
pop
push
call
fdivl
inc
cmpsl
lods
mov
bound
jp
jg
add
add
cmp
jp
bound
cltd
push
push
rorb
fwait
stos
cmp
push
lret
xchg
pop
xchg
xor
dec
data16
aaa
jmp
mov
cmp
mov
lahf
movsl
inc
sub
xchg
lcall
push
xchg
pop
fld
and
fstl
ficompl
xlat
mov
mov
jno
test
aam
movsb
imul
mov
unpckhps
mov
aas
cli
cwtl
jl
jns
orb
mov
fcomip
mov
xchg
test
xor
mov
or
xchg
and
scas
xchg
and
bound
popa
out
inc
sub
fstpt
mov
xchg
pop
xchg
cmp
or
sub
inc
ds
lcall
xchg
xor
pop
sub
jle
push
movsl
icebp
adc
movb
mov
jbe
lock
test
outsb
clc
xor
inc
hlt
mov
adc
and
mov
push
ficoms
xor
or
bound
add
pop
pop
mov
add
or
dec
ds
adc
mov
inc
and
adc
dec
scas
bound
je
inc
pushf
dec
xlat
xor
fwait
mov
and
adc
inc
sahf
pop
push
jl
xchg
shld
xor
adc
rcrb
aas
push
mov
stos
mov
pop
pop
pop
les
xor
pusha
sub
ret
and
sbb
mov
push
cmp
pop
fwait
or
arpl
sti
lcall
outsl
mov
into
ffree
loop
roll
mov
adc
cmpsl
stos
jo
daa
mov
outsl
mov
dec
pop
inc
push
and
mov
xchg
fcmovu
add
mov
sub
add
sub
ja
jne
out
repnz
pop
test
push
int
xor
aam
rcr
or
popl
test
pop
adcb
sbb
xchg
xor
fisubrl
mov
pop
pushf
jne
jae
in
xchg
aam
or
pushf
fisttpl
jb
jmp
data16
iret
icebp
outsb
inc
dec
pushf
dec
xchg
add
les
inc
xchg
and
aam
imul
arpl
loopne
mov
mov
std
xchg
pushf
mov
lahf
sub
mov
test
xchg
or
ret
mov
int3
adc
out
mov
mov
lret
mov
fcoms
push
jecxz
mov
cmp
es
sar
or
mov
adc
repz
xlat
insl
pop
cli
nop
xchg
pop
push
mov
or
in
cmc
push
adc
cmp
into
subb
push
or
sbb
fwait
or
jle
lods
sub
out
outsb
idivb
push
addr16
or
mov
gs
loope
inc
and
aas
cmp
lods
repnz
out
movl
sar
dec
pop
cmp
inc
cmc
bound
stos
fs
mov
mov
mov
mov
push
mov
jae
jl
pop
push
adc
push
xchg
sub
inc
out
dec
or
popa
out
and
rclb
pop
xlat
cmp
aas
bswap
jle
inc
lcall
in
inc
mov
repnz
lret
out
mov
dec
lret
mov
frstor
mov
in
cmc
jno
pop
mov
scas
rclb
mov
mov
xchg
daa
into
push
movsl
and
sbb
dec
push
adc
ds
pop
movsl
popa
lcall
subb
es
jbe
cmp
and
lret
mov
pop
cmc
pop
popa
lahf
sub
xor
pop
mov
jl
mov
jmp
inc
lods
enter
js
mov
mov
sbb
in
inc
dec
notl
sbb
leave
inc
jnp
insb
dec
bound
mov
push
gs
scas
or
jecxz
xor
repnz
shrl
jmp
add
js
mov
pop
mov
outsl
mov
push
js
scas
divb
and
jle
cs
mov
outsb
inc
mov
mov
arpl
jb
lret
sub
in
pop
lcall
bound
lea
jo
sub
addr16
int
stos
mov
add
jl
xchg
aas
mov
outsl
rclb
dec
cs
inc
shl
jae
and
jmp
mov
xor
je
mov
loop
addr16
push
add
aad
fnstenv
or
pop
sub
popf
andb
decb
in
mov
inc
test
imul
mov
in
lods
int3
pushf
push
fstpl
sub
out
loopne
push
pop
lods
cmp
jle
cli
ret
movsb
sub
mov
cmpsl
test
outsl
inc
scas
into
mov
bound
dec
adc
sub
jecxz
iret
sti
movsl
les
fsubl
pushf
xchg
add
xchg
ja
or
out
jno
jne
iret
mov
fwait
push
ror
cmp
insl
push
mov
pop
addr16
jne
cmp
test
mov
xor
adc
xor
mov
xchg
push
cmp
or
daa
jmp
and
stos
in
inc
out
test
out
inc
int3
subl
add
test
or
mov
lret
sbb
inc
push
xor
js
xchg
inc
aad
mov
xchg
sub
in
pop
sbb
jp
adc
sub
and
ja
inc
lods
cmp
cmp
sub
cmp
and
fcoml
or
movsl
imul
pop
cwtl
in
nop
mov
inc
divl
xchg
test
test
jbe
test
das
pop
pop
in
enter
xchg
fldl
mov
cs
adc
insb
mov
push
popa
and
fidivrl
fsub
pop
ja
mov
xor
xor
or
stc
sysret
mov
rorb
or
cli
mov
mov
out
sti
push
stos
push
std
push
loop
mov
lea
out
or
aas
scas
rcr
ret
cltd
lea
jg
repnz
cmp
inc
mov
jbe
inc
and
loope
push
xor
inc
mov
mul
cld
insl
or
pcmpeqb
sbb
daa
mov
icebp
popf
jge
dec
dec
test
popl
jecxz
pop
clc
out
fistpl
icebp
imul
mov
inc
popl
stos
sub
inc
insl
inc
shrb
stos
cmpsb
test
lcall
loope
inc
mov
jb
scas
fmuls
cmpb
lret
scas
xchg
imul
lods
movsb
jno
lret
stos
fstpt
pop
mov
or
roll
dec
mov
pop
clc
lods
repnz
push
sub
and
mov
cs
jmp
lret
aam
shrb
pop
lret
lea
push
and
add
jno
lods
and
test
push
pop
pusha
and
xor
mov
mov
cmp
test
xor
push
ss
mov
sbb
jg
xchg
nop
dec
lea
mov
xlat
int3
scas
or
ret
repnz
lds
xor
pop
or
and
mov
std
jb
mov
xorl
pop
mov
xor
xor
sbb
mov
xor
add
sub
and
inc
js
sarb
jae
push
cmc
mov
fldcw
insl
dec
push
cmp
pop
fnstsw
out
cmp
gs
fcoml
daa
inc
pusha
loopne
mov
pop
push
and
mov
inc
loop
lds
inc
push
sbb
dec
inc
pushf
insl
rcrl
pop
jae
adc
pop
and
lock
jno
pop
popf
xchg
insb
lcall
or
mov
sahf
mov
push
mov
mov
cwtl
mov
out
push
mov
sbb
inc
enter
xchg
xor
cmp
outsl
mov
mov
mov
frstor
lea
loope
pop
add
mov
cmpb
js
xchg
or
pop
inc
lock
jge
push
pop
adc
or
cld
das
mov
sbb
pop
out
adc
rcl
pop
mov
int
jae
cmpsl
cmp
lds
dec
dec
or
mov
pop
lods
pop
lfs
je
xor
int3
rorl
lods
shrl
inc
pop
js
mov
xor
mov
test
sarb
ss
cmpsl
fcompl
mov
je
jne
clc
add
cmp
cmp
add
and
sub
dec
psubsw
insb
neg
loopne
cli
dec
cmp
sbb
ficomps
aas
mov
cmpb
add
push
aas
and
test
icebp
add
arpl
and
repnz
div
pop
xchg
push
lea
adc
mov
xor
out
and
xchg
fildl
xor
pusha
rcll
sub
loope
fildl
or
cs
inc
cld
out
js
clc
jns
cmp
push
push
and
push
mov
pop
mov
divb
imul
test
sub
mov
push
cmp
movsl
stos
btc
fmuls
jl
jp
jo
fnsave
sub
cli
jecxz
stos
insl
imulb
mov
lea
mov
mov
push
fidivs
cmp
jecxz
enter
push
scas
inc
xor
cs
mov
add
xlat
jns
nop
fstpt
in
push
aas
cmp
int
clc
mov
xor
stos
in
jmp
or
push
xchg
sub
jmp
xor
push
xlat
pop
dec
inc
pop
push
and
rcrl
inc
lahf
sub
ret
dec
push
out
stc
sti
jp
pushf
sub
mov
lret
pop
pusha
sbb
rcl
lret
je
test
repnz
add
push
mov
and
test
les
bsf
std
push
adc
xchg
mov
inc
lret
outsb
pop
mov
in
dec
test
cmp
fdivp
test
jle
mov
in
jmp
add
cwtl
cmp
in
mov
testl
mov
pusha
sbb
pop
adc
pop
mov
push
xor
repz
outsb
sub
test
popf
cmpl
xor
mov
shll
lret
pop
mov
inc
mov
cmc
jo
xchg
test
and
mov
or
out
adc
adc
test
dec
arpl
lock
clc
insl
sar
push
in
nop
or
fisubrl
sbb
mov
inc
xor
jno
inc
movsb
jmp
add
cmp
inc
xchg
push
nop
mov
pop
inc
sbb
and
mov
rcrl
repz
xor
roll
xchg
leave
fdivr
nop
gs
push
fstpt
xor
ss
fs
ret
hlt
les
mov
test
xchg
jge
scas
lock
test
mov
hlt
xchg
inc
icebp
inc
sbb
mov
scas
insb
pop
pop
push
mov
mov
cmp
xor
mov
xor
int3
or
xchg
mov
stos
inc
stc
outsl
cmp
ss
nop
pusha
adc
mov
int
sbbl
lahf
cli
sub
ljmp
xchg
insb
test
xchg
lahf
std
lods
test
shlb
mov
rcll
pop
add
or
bound
push
cmc
mov
push
push
scas
cmp
xor
pop
adc
ljmp
inc
fdivrl
cmp
dec
xchg
jg
inc
push
sub
icebp
pushf
ficoms
sub
jne
cmp
inc
xor
sarb
mov
ret
lcall
mov
adc
fdivr
adc
mov
pop
push
sub
adc
fucompp
push
lret
lds
jge
jl
ljmp
test
mov
mov
push
or
ffreep
pop
incb
mov
xor
rcrl
sbb
pop
into
popl
xor
cs
push
aad
in
imul
pop
add
push
or
jb
in
adc
repnz
mov
mov
in
daa
pop
cmpl
mov
or
add
pop
mov
mov
lret
fwait
adc
dec
pop
add
mov
shl
dec
scas
dec
lret
inc
aam
test
in
nop
fs
ja
arpl
leave
sbb
pop
mov
inc
movsl
shl
xchg
xchg
add
scas
xor
xor
inc
scas
adc
sub
nop
dec
popf
sub
cmp
dec
jbe
sbb
jo
jne
stos
gs
sub
mov
ja
out
cmp
std
mov
outsw
adc
push
jns
in
push
jns
add
push
clc
push
inc
pop
fld
out
fcomp
push
test
fs
cmp
sub
pop
xor
test
mov
adc
lret
fidivrl
mov
jg
cs
pop
std
add
add
mov
mov
add
ds
xor
int3
add
xor
add
mov
jae
sub
mov
mov
jle
shlb
sub
and
fs
sub
mov
mov
mov
in
nop
dec
out
xchg
ud2
lods
ss
push
sbb
loop
push
pop
xchg
dec
enter
jns
xor
dec
xor
xchg
cmp
addr16
xchg
jecxz,pt
shll
dec
xlat
jnp
into
enter
xchg
mov
and
push
ja
fnstcw
addb
fsub
push
jecxz
insb
out
call
popa
mov
out
insl
rcrl
cmp
insl
divl
xchg
lcall
and
jmp
sahf
jbe
out
pushl
xchg
pusha
aas
nop
push
cmp
push
enter
xchg
cwtl
iret
xchg
and
add
scas
inc
push
flds
cltd
dec
repnz
dec
mov
neg
test
cmpsl
and
xor
movsb
mov
roll
sti
out
in
cmpsl
les
mov
jnp
popa
popf
popa
daa
arpl
lea
sarl
add
xchg
jmp
pushf
jns
out
aad
adc
pop
sarl
cltd
and
je
fmulp
mov
int
orb
sbbl
std
insb
push
test
repz
cmp
push
jmp
aam
adc
sub
xchg
xchg
sub
xor
push
add
out
cmp
mov
cmp
scas
jl
push
sbbb
daa
pop
div
cld
test
fisttpll
fnstcw
in
stc
jmp
mov
into
xchg
lret
daa
movsb
mov
sbb
mov
cmp
sbb
ret
loopne
xchg
scas
icebp
mov
std
jbe
movsb
cmp
fimull
pop
inc
inc
adc
nop
push
sub
sbb
mov
push
push
imul
fcompl
insl
cld
cmp
hlt
pop
call
cmovl
test
das
lds
jle
rcll
mov
add
or
rorb
cld
mov
push
mov
or
rorl
arpl
cmp
fistps
hlt
cmc
icebp
loope
in
mov
stos
xchg
popl
xchg
mov
push
xlat
mov
and
addb
lods
aam
fisubs
stos
inc
mov
and
ret
push
aaa
mov
stos
sbb
hlt
js
push
xchg
and
test
push
aam
mov
add
xor
mov
sarl
add
adc
jnp
cmpsb
mov
xchg
shll
sub
out
mov
inc
loope
add
mov
mov
mov
inc
push
jb
nop
cmpsl
in
jge
push
ljmp
aam
bound
pop
jnp
cmp
xor
mov
imul
test
shrl
js
mov
push
lret
lods
jne
adc
aas
loope
rcr
jne
sub
jle
or
daa
clc
or
in
jge
outsl
cmp
ljmp
or
mov
enter
in
out
js
imul
jo
hlt
test
jmp
inc
mov
insb
mov
cmp
jp
push
and
call
out
and
out
test
mov
insl
xchg
test
mov
roll
mov
dec
push
shrl
lret
lcall
sbbl
jge
cmpsb
scas
nop
sub
jo
rcrl
loope
mov
and
out
add
ds
cmp
dec
repz
outsl
loopne
cltd
push
stos
in
sbb
xlat
mov
cmpsl
pop
test
cld
mov
xor
out
xchg
gs
out
popf
pop
mov
push
out
popa
sti
sbb
inc
pop
cmp
out
jns
out
ljmp
xor
or
add
xchg
jmp
nop
cmp
lock
add
push
shl
aad
in
or
mov
repz
clc
cmp
adc
mov
scas
hlt
add
jmp
in
or
fcmovnb
sti
mov
ret
adcl
mulb
fidivs
test
fwait
shl
pop
cmp
dec
insl
add
stos
cmp
in
out
inc
dec
les
or
xchg
jae
shl
jb
sbb
sub
or
test
repnz
sbb
cli
mov
mov
addr16
lahf
aam
push
ret
lret
inc
jno
les
jno
inc
cs
xlat
cmp
pop
inc
ret
rorl
inc
cltd
xchg
push
mov
xchg
mov
daa
mov
aad
cwtl
insl
jne
fisubrs
push
aam
fucomi
xchg
jae
add
pop
addr16
shrb
ret
out
cltd
sub
sub
push
pop
inc
push
mov
clc
xchg
mov
call
loopne
xor
or
xchg
movsb
je
inc
fildll
adc
jmp
push
adc
adc
xor
sbb
jnp
mov
push
mov
rcrb
mov
decb
mov
addr16
les
push
decl
sbb
cmp
in
xor
mov
testl
sbb
lahf
fmuls
adc
cmp
lret
icebp
aad
pop
push
fbstp
out
stos
xchg
inc
mov
std
cmp
sub
dec
add
add
jnp
addb
pop
sub
pop
mov
out
sbb
adc
mov
xor
push
xchg
popf
adcl
es
pusha
loope
pusha
dec
sti
test
sub
shrb
inc
adc
and
add
cmpsl
push
test
hlt
pop
or
insb
imul
arpl
cld
jb
mov
fnstenv
jne
adc
push
test
daa
loopne
pop
sub
pop
loope
fimull
adc
sbb
jb
or
add
sbb
mov
mov
jmp
pop
cmp
dec
push
je
cltd
mov
mov
xor
fwait
adc
cmpsb
divl
mov
sbb
add
or
fistpll
mov
push
aam
fcomps
xchg
fmuls
lea
fstpl
push
cmp
fsubr
adc
xchg
lahf
fnstenv
adc
int
lds
enter
clc
or
insb
xor
cmp
mov
movsl
loopne
ret
jae
imul
arpl
testl
dec
fwait
divw
repnz
and
dec
clc
pop
movsb
push
rolb
mov
cmp
jecxz
or
push
cs
cltd
xchg
xchg
cmp
cwtl
mov
or
inc
loopne
ret
push
in
insb
mov
jbe
scas
rolb
out
and
inc
ss
int3
mov
or
xor
add
outsb
aam
mov
cmp
add
sub
push
cltd
aam
and
fcomp
jge
xor
xor
lods
adc
fcoms
mov
insb
dec
outsl
inc
test
pusha
sub
call
addr16
push
repz
xlat
pop
xor
dec
pop
mov
leave
repz
push
addr16
push
and
out
daa
dec
cmpsl
cmp
outsl
pop
xchg
jmp
scas
jo
std
clc
add
xor
add
xor
mov
stos
xchg
icebp
jnp
js
je
pop
dec
stos
lods
dec
out
andl
push
xor
aad
mov
lret
adc
sub
jb
pop
mov
ret
stos
addb
orl
mov
mov
jecxz
outsl
xchg
cmp
mov
sti
sbb
push
in
bound
dec
and
jecxz
pop
mov
popa
lret
xor
xchg
mov
sti
pop
into
add
mov
sti
cli
sbb
loope
adc
fstl
jmp
pop
outsl
bound
in
hlt
jae
jbe
mov
mov
jno
int3
out
pop
arpl
or
dec
sbb
int3
loop
push
or
test
sub
dec
mov
dec
inc
daa
inc
sub
sub
adc
cs
mov
dec
adc
mov
mov
aam
ljmp
mov
push
xchg
decb
inc
pop
jno
aas
dec
pop
fucomi
pop
clc
dec
dec
cmp
sub
pop
push
js
out
cwtl
inc
lret
pop
jae,pn
mov
jbe
xchg
inc
dec
push
les
xchg
mov
lcallw
je
ret
pop
repnz
mov
adc
xor
or
jae
mov
xchg
adc
adc
jbe
mov
adc
xchg
push
and
mov
jae
pusha
scas
dec
cli
sub
aam
push
loop
sub
lods
mov
mov
out
dec
int
jae
loopne
aas
jecxz
mov
xor
je
sarb
pop
pop
push
repnz
imul
mov
adc
gs
jp
orb
sbb
mov
imul
insb
movsl
or
cmpsl
inc
rolb
mov
addr16
dec
popa
loope
lret
sub
lods
mov
xor
int
dec
lret
les
sbb
push
aas
inc
fs
cli
jecxz
jle
push
mov
ljmp
sbb
jbe
daa
in
cli
mov
fisttpll
stos
int
lock
jb
ret
ss
jne
sbb
xchg
js
daa
lods
pop
sbb
xor
sub
add
iret
add
sub
mov
fistpl
jb
cmpsl
and
xor
xor
cmp
add
and
fwait
sub
and
push
mov
mov
xchg
and
dec
jp
outsb
lret
jge
jg
sbb
push
jb
jmp
movsl
into
lcall
push
and
aaa
inc
push
ret
call
unpcklps
in
xchg
push
and
push
sub
stos
in
xlat
or
in
idivl
xlat
push
fildl
pop
outsl
mov
mov
je
push
dec
jecxz
xchg
test
jmp
and
shr
cwtl
js
not
adc
in
loop
mov
inc
enter
or
addr16
es
mov
pop
call
mov
push
pop
mov
xorl
aaa
jl
aaa
daa
pusha
adc
pop
rep
inc
pop
adc
mov
aam
xor
aaa
cmp
xchg
scas
mov
xchg
and
jge
pop
ljmp
hlt
lret
fnstenv
inc
ds
jb
lock
jp
stos
and
je
push
xchg
gs
leave
movsl
push
jbe
leave
or
jbe
movsl
xchg
push
out
and
or
fucomip
leave
add
xchg
fsubp
rorb
sub
pop
fcmovnb
sahf
or
rcll
mov
dec
xor
push
dec
jle
sub
in
cmp
dec
sbb
mov
test
pop
pushf
cmp
int
adc
pop
push
xlat
test
outsb
cmc
icebp
inc
lods
mov
jp
push
push
in
and
rolb
lods
icebp
mov
aad
andl
xor
cmpsb
jg
loopne
imul
nop
adc
shrb
out
fistpll
outsl
lahf
lret
out
jo
xchg
sbb
xor
orb
mov
mov
in
stos
insb
push
cmp
cmp
jmp
mov
addr16
aas
stos
je
pop
cmp
dec
repnz
mov
lock
inc
mov
lahf
push
mov
pop
fwait
push
std
stos
cmpsl
ja
push
jecxz
lcall
insb
dec
lcall
icebp
cmp
or
lcall
push
addr16
popa
mov
lods
dec
xchg
mov
rcll
stos
mov
cmp
pop
sbb
pop
je
jge
mov
int3
enter
pop
std
sub
mov
aas
movsb
push
pop
scas
aam
scas
xrelease
jecxz
testl
hlt
jp
or
xorb
sbb
push
rorl
les
xor
out
pop
int
push
push
fdivrl
inc
cli
std
or
cmpsb
pop
and
je
xchg
test
mov
imul
fcoml
pop
and
jge
mov
or
mov
cmpb
jmp
push
je
xchg
push
mov
inc
aaa
mov
sbb
test
arpl
xchg
ret
mov
pop
mov
jns
and
adc
inc
sub
imul
mov
enter
sbb
pop
clc
jl
add
inc
aam
or
mov
or
arpl
hlt
sti
dec
aam
add
xchg
xor
lods
jmp
stos
sub
std
das
xchg
sub
popf
push
jnp
shll
cld
aas
bound
cs
cs
das
test
popf
sbb
mov
mov
add
xor
dec
scas
pop
int3
jbe
hlt
fcompl
or
mov
and
ss
cs
jle
addl
inc
sbb
in
fimull
xchg
loope
push
enter
fdivrp
in
mov
pop
sub
mov
es
fstpt
adc
inc
out
fadds
sub
cmc
fcoms
pusha
mov
mov
pop
es
and
stos
xchg
adc
push
jnp
xor
stc
mov
pop
xchg
sti
mov
into
xchg
into
pop
cmp
lret
xchg
rorb
jne
and
cmp
sbb
jns
lahf
loope
push
loope
mov
push
scas
ljmp
faddl
xor
in
ljmp
pusha
dec
frstpm(287
pop
repnz
cmpsl
and
add
movsb
push
or
dec
or
cmp
or
cmp
xchg
fisubs
push
inc
sbb
cmp
popf
sub
cmpsl
push
js
xchg
stc
rorb
jne,pn
xchg
pop
add
dec
mov
testl
mov
ret
lahf
or
mov
mov
imul
xchg
mov
adc
pop
or
xor
aad
test
les
out
and
mov
mov
xchg
sbb
loop
cmp
leave
dec
stos
xor
rcr
or
mov
mov
jecxz
out
add
fcom
loop
pop
cmp
std
mov
mov
or
lahf
sarb
js
test
outsl
adc
jecxz
push
xor
or
cmovo
add
dec
push
test
fistpl
ja
push
add
adc
mov
jbe
repnz
jmp
or
loope
jmp
cmp
je
dec
pop
jbe
xor
insb
fldl2t
sbb
sbb
clc
or
mov
ljmp
cmpsb
xor
cltd
jge
cs
movsl
mov
rcrb
adc
xor
or
jp
lret
mov
and
sbb
adc
lds
mov
sahf
int
out
xchg
add
dec
ljmp
add
inc
ljmp
in
cmp
adc
mov
repnz
arpl
testb
in
jbe
lcall
or
and
cltd
add
jae
xor
adc
clc
or
mov
jmp
lock
or
mov
std
in
jmp
cmp
into
rclb
xchg
xchg
xor
cmpsb
xor
aad
cmp
and
sbb
movsb
push
xlat
out
fmuls
pop
add
aaa
sub
arpl
pop
insl
mov
inc
inc
leave
cmpsl
int
adc
and
cltd
add
or
shlb
and
fsubrs
into
inc
fnstsw
nop
xchg
loope
pop
adc
mov
out
sub
xchg
cmp
inc
aas
std
test
mov
cmpsb
lea
loop
int
mov
sbb
into
add
shrl
mov
bound
stos
insb
mov
sub
ja
pop
inc
call
lods
cmpsb
and
jmp
mov
in
pop
hlt
pop
imul
stos
mov
iret
dec
mov
adc
mov
mov
movsl
sbb
mov
mov
xchg
add
add
add
movsb
andl
mov
sub
js
xor
cs
out
jno
mov
sbb
lahf
pop
ret
test
mov
push
or
lods
dec
cmp
or
jns
mov
loope
gs
in
or
nop
stos
aaa
mov
loopne
or
mov
insb
xor
in
fidivs
shrl
add
push
cltd
in
out
cmp
test
insb
test
pushf
je
cld
popl
pop
insl
jbe
push
mov
roll
mov
or
aaa
sti
cmp
fcmove
jmp
sbb
loop
and
test
data16
in
inc
scas
dec
add
cs
mov
test
enter
cmp
cmp
mov
stc
xchg
push
inc
lds
loopw
iret
mov
ja
movsl
cs
das
pop
xor
jecxz
adc
sub
aaa
mov
ret
push
xchg
into
fdivrs
or
inc
popa
and
pop
jmp
and
push
loop
add
xchg
push
ja
sbb
loope
jnp
fcomi
pushf
mov
ret
adc
ss
push
aaa
xlat
test
inc
insl
jge
cmp
imul
es
into
push
ror
or
pusha
icebp
les
movlps
push
sbb
or
xchg
andl
sbb
sub
call
pop
addb
loop
jl
ror
mov
in
mov
xchg
lret
mov
fnsave
repnz
leave
dec
or
and
int3
adc
inc
or
jae
inc
aaa
ds
and
pop
lock
shr
cmpsl
iret
pop
mov
sbbl
pop
adc
inc
jb
add
adc
xor
lahf
lcall
mov
out
aad
xchg
ss
ljmp
jns
test
cwtl
push
movsb
add
in
mov
ret
add
lds
xchg
nop
es
lods
shr
stos
lret
popf
pop
and
mov
aas
inc
pusha
sbbl
add
xchg
sub
clc
test
sbb
rcr
popf
pop
iret
mov
adc
fdivrl
lods
inc
mov
imul
fnsave
fwait
aaa
xor
xor
mov
push
jbe
iret
sbb
push
mov
mov
mov
sub
cwtl
ds
imul
cmc
push
lret
push
add
jns
inc
push
lods
sbb
inc
rcl
cmp
test
iret
test
xor
cmpsl
jnp
inc
lock
xchg
dec
or
pop
push
sub
push
movnti
enter
ret
mov
mov
inc
test
dec
in
sub
adc
fmull
adc
xchg
rcrl
jecxz
push
mov
xchg
mov
in
insl
mov
fldcw
lods
fistl
decl
jle
add
movsl
fstps
mov
jl
sbb
fld
lds
xchg
xchg
sub
pop
in
scas
and
inc
nop
shll
cmpsl
add
lahf
inc
mov
xor
cmc
add
dec
hlt
lahf
or
and
xorl
test
or
xlat
and
insb
cmp
adcl
xor
ja
push
cmpsb
sbb
test
xor
es
xor
add
xchg
xchg
or
push
inc
dec
lods
push
sub
into
mov
jb
xor
fsubl
xchg
data16
xor
push
in
fsubrs
add
xchg
jle
push
push
filds
iret
cmp
sub
xchg
shrl
mov
mov
adc
cli
mul
mov
add
sub
xor
sbbb
mov
pop
fadds
dec
sub
ret
arpl
cmp
sti
cmpsb
jnp
adc
mov
xchg
xor
pop
mov
cltd
inc
outsb
movsl
bound
rclb
mov
xchg
mov
outsb
in
sub
mov
mov
frstor
pop
xchg
dec
jmp
movsb
xorl
enter
test
imul
icebp
shll
add
shlb
aaa
xchg
pop
scas
nop
adc
sbb
sbbl
jns
fbstp
inc
mov
aaa
inc
into
pminub
pop
and
jecxz
push
mov
test
adc
inc
xchg
test
and
rcrl
lods
negl
xchg
popa
add
aas
loopne
lods
aam
mov
iret
xchg
pushf
lret
lret
test
pop
fdivrp
cmp
mov
std
push
xor
aas
repz
sbb
inc
push
add
loopne
mov
js
and
notb
push
add
adc
ret
imul
push
pop
lret
shr
lea
add
or
sarb
ficompl
cmp
dec
pushf
push
cwtl
push
not
ljmp
inc
mov
inc
pop
fisubrl
test
test
dec
push
inc
out
jb
jno
loope
les
das
rcr
jne
jmp
jae
xchg
mov
xchg
sub
dec
pop
mov
xorl
or
pop
shll
jp
or
jns
pop
push
lret
cmpsl
pop
jecxz
movsb
cmp
or
aam
cmc
jbe
addr16
dec
dec
sub
pop
loope
enter
leave
mov
lock
repz
mov
idivb
xor
push
lods
nop
adc
pop
add
aam
scas
movsb
fucom
sbb
xchg
pop
add
pushf
sub
xchg
pop
sub
jbe
mov
pushf
test
mov
jbe
cmpsb
xor
xor
mov
leave
stos
pop
adcb
mov
dec
sub
xor
mov
jbe
xlat
dec
fstps
jae
dec
mov
cmpsl
lret
sbb
in
sub
dec
xor
xchg
leave
int3
into
jbe
and
cmp
je
dec
sbb
inc
aam
aaa
ret
mov
jl
shl
pop
mov
mov
lret
jg
xor
mov
cmc
xchg
loopne,pt
sub
shlb
mov
jne
ret
add
or
inc
push
xchg
xor
fcompl
js
test
and
and
movsl
dec
add
adc
xchg
lods
jnp
sbb
int3
cmp
ret
push
cmpsb
pop
out
dec
mov
dec
das
pop
lret
sbb
mov
repnz
shll
pop
adc
add
sbbl
jne
idivb
das
adcl
jnp
xchg
inc
bound
mov
push
adc
js
pop
xor
push
js
sub
aas
jg
mov
cs
add
mov
in
dec
sbb
inc
mov
aam
stc
and
sub
mov
jp
dec
cs
mov
push
dec
mov
push
pusha
push
mov
fistl
dec
sbbl
stos
push
inc
mov
mov
pop
repnz
jge
fcomip
dec
push
fildl
mov
ljmp
inc
jmp
pop
ss
ja
jno
inc
mov
pop
sbb
cmpsl
sub
cs
pushf
xchg
test
icebp
mov
xchg
and
sbb
mov
cmp
push
addr16
aam
sub
jp
out
pop
add
stc
test
int3
dec
scas
in
sti
mov
jmp
inc
push
lret
rcl
sahf
push
push
adc
and
mov
outsl
xchg
ret
push
lahf
das
mov
scas
and
jno
sbb
fwait
xor
cmpsb
int
mov
mov
je
mov
jb
icebp
or
icebp
dec
pop
inc
push
je
mov
pop
pop
adc
pop
cmp
fistpll
mov
std
lret
jecxz
ljmp
add
lcall
xor
fcoml
jo
and
pop
or
lret
add
std
in
lahf
cmp
incb
sbb
sbb
cmp
cmp
lods
and
cmp
aaa
and
fstps
cmp
mov
cmp
jle
dec
cltd
jl
mov
lret
clc
mov
inc
mov
jp
jae
push
pop
loopne
iret
int
repnz
mov
mov
pop
mov
loopne
jnp
js
enter
adc
cmp
jne
outsl
push
jno,pt
inc
sti
or
test
js
mov
in
fldln2
jb
imulb
sub
push
clc
movsl
sbb
adc
xchg
or
sbb
or
enter
imul
sahf
xchg
cmp
sub
negb
outsb
and
push
jle
mov
aam
test
pop
and
sub
inc
pop
push
dec
jecxz
mov
xchg
ret
xchg
cltd
dec
pop
rcl
adc
add
pushf
inc
enter
push
ret
push
arpl
lcall
or
or
jecxz
dec
sbb
jp
push
jmp
add
xor
aad
popa
inc
out
mov
sub
lods
scas
push
int3
add
mov
repz
lds
add
bound
adc
or
jns
inc
mov
sbb
add
pop
mov
cltd
js
sub
cwtl
mov
pushf
ret
xchg
mov
pop
out
cli
jle
mov
inc
int3
arpl
int3
pop
gs
bnd
jecxz
inc
jno
xchg
das
push
adc
inc
push
enter
xchg
dec
int3
ficoms
pop
mov
bound
mov
mov
jp
ret
adc
cmp
cli
fwait
push
aaa
movsl
jl
fsubl
sbbl
dec
mov
jb
loop
mov
mov
inc
fistps
cmp
ljmp
mov
jg
fwait
add
jbe
adc
insl
mov
iret
add
fwait
in
mov
mov
js
pop
out
test
xor
mov
pop
scas
inc
faddl
cmc
xchg
sub
ret
pop
test
add
mov
dec
and
xor
lock
mov
cmp
mov
nop
daa
xor
rclb
cs
push
popa
and
out
std
out
lret
fstpl
out
xor
mov
fs
jle
andl
push
adc
fdivl
sub
mov
repnz
test
jnp
scas
jge
addr16
mov
cmp
in
pop
mov
add
fiadds
daa
negl
pusha
or
or
mov
mov
out
es
sbb
jp
and
cmp
pop
push
int3
js
or
dec
mov
xchg
cs
sbb
cs
in
repnz
mov
adc
sarb
push
mov
pushf
xchg
in
mov
mov
inc
inc
add
xor
or
das
out
inc
sti
jae
rcl
lret
mov
jle
divps
rcll
out
sarl
xchg
fldt
stos
xchg
int
xchg
rorl
xchg
push
es
mov
xor
ljmp
pop
lock
lcall
xchg
pop
jb
daa
cmp
gs
dec
xchg
and
dec
call
dec
pop
cld
fcomps
or
out
cmc
in
es
pop
mov
xchg
or
jne
iret
adcb
stc
fnstcw
dec
jo
cmp
push
shlb
xor
jg
popf
andb
sub
jns
mov
pop
es
mov
cmc
mov
shr
cmp
pushf
or
sbb
jnp
sbb
mov
rcl
cmc
adc
scas
push
mov
push
xor
mov
cmp
roll
sarl
jno
lds
cmpsl
iret
mov
scas
flds
inc
fmul
sub
movsb
push
cli
out
jmp
or
or
jne
add
jecxz
push
andb
adc
nop
mov
iret
inc
sub
jecxz
punpckhdq
jmp
fdivr
outsl
call
or
mov
mov
pop
add
sub
jb
sahf
in
shlb
mov
das
enter
movsb
pop
roll
add
jl
xchg
in
jnp
movsl
or
jecxz
aaa
repnz
ss
es
je
test
inc
int3
sub
dec
inc
xchg
mov
xlat
mov
mov
jge
jecxz
jmp
and
sbb
repz
xor
xlat
xchg
mov
fdivl
clc
aam
dec
push
lock
dec
adc
or
or
out
jmp
addb
xchg
add
testb
std
jnp
sbb
adc
push
loop
ss
xchg
inc
push
add
add
mov
outsb
or
jbe
push
ret
add
roll
dec
lret
sub
dec
pop
mov
fs
or
dec
mov
xlat
je
push
loopne
jns
jp
mov
push
or
push
fisttps
xor
dec
and
insb
push
sarl
es
jbe
inc
into
pop
jg
xor
int
mull
out
sub
xchg
sub
dec
test
aaa
aad
dec
lods
shrb
mov
nop
cmp
rclb
ret
xchg
sub
ss
or
rcrl
pop
fstpt
cmpsl
pop
pop
movsl
sub
adc
dec
aam
mov
test
mov
cmpsb
cmp
les
push
push
jl
cmp
jmp
stc
cmp
mov
jne
jmp
push
inc
cmpl
or
and
outsb
shl
repz
cmpsl
and
test
dec
jne
mov
testl
jle
test
mov
fstl
lcall
addl
and
nop
orb
lea
pusha
and
int3
clc
jb
ds
fwait
jge
in
mov
aas
and
ds
imul
jmp
pop
lret
enter
and
jo
daa
in
add
mov
testb
xor
adc
cmc
shll
mov
pop
pop
dec
arpl
inc
cmp
xchg
sub
fidivs
out
mov
fimull
xchg
mov
rol
jbe
stc
loopne
lret
mov
lods
mov
push
xor
push
shrl
es
jp
pop
sbb
cli
out
push
push
ficoml
adc
jb
cmp
or
lret
or
in
or
in
mov
fwait
aaa
mov
movsl
jne
xchg
or
jmp
inc
mov
fs
jne
sti
stos
insl
and
jg
pop
mov
stc
add
xor
xchg
rcr
into
cmp
mov
sub
mov
mov
sahf
inc
mov
xchg
pop
adc
test
fs
imul
es
int
test
jb
in
in
sub
sub
dec
and
xchg
sub
push
int
xor
or
and
jecxz
int
lea
lret
clc
arpl
mov
flds
jg
lcall
mov
xchg
lahf
lods
dec
add
cmp
jge
xor
cmp
orb
cmp
mov
adc
cmp
es
and
mov
or
jg
or
cmpsl
rcrl
movsl
lcall
pop
outsl
cmc
cmp
xchg
lahf
add
and
gs
frstor
push
rolb
xchg
mov
jg
push
xor
sbb
jge
dec
add
cmp
nop
push
dec
inc
cmp
xchg
lret
nop
fdiv
daa
repz
push
pusha
dec
icebp
loop
jae
mov
jne
add
jne
mov
mov
int3
imul
jae
fwait
rcrl
mov
or
adc
add
mov
ja
es
loop
jae
mov
pushf
mov
repz
les
cmpsb
xchg
xchg
sbb
scas
cmpsb
sub
ficoms
xchg
in
cmpsb
fcmovnbe
leave
iret
scas
lret
push
repz
pushf
aad
aam
jo
jg
mov
xlat
rcrb
popf
bound
xor
jno
cltd
daa
dec
ret
jbe
loope
pop
syscall
push
mov
je
inc
xchg
jecxz
sbb
cmp
repz
cmp
outsl
sbb
fsubrl
push
stos
inc
test
and
push
sbb
stos
dec
cmp
mov
or
test
mov
pop
mov
in
dec
fisubl
aam
jg
shr
ret
mov
test
dec
scas
xchg
pop
or
pusha
jbe
call
rcr
push
add
sbb
arpl
fildl
ret
inc
test
mov
sub
sbb
jge,pt
pop
adc
add
and
fwait
or
idivb
pop
fisttps
push
sbb
xor
mov
add
pop
int
cmp
jb
daa
arpl
cmp
xlat
out
adc
xlat
iret
ss
sub
fisttpl
and
mov
mov
add
jmp
in
leave
fwait
xchg
rcrl
test
adc
add
push
cmp
xor
insb
sahf
pop
iret
xor
iret
divb
loop
and
ja
push
push
cltd
filds
and
dec
or
xchg
cli
mov
sub
daa
mov
sub
jg
adc
jmp
int
lcall
jno
sbb
les
cld
ds
mov
shll
scas
add
xor
andl
cs
adc
add
lahf
xchg
and
fiaddl
leave
sar
or
push
mov
jl
jl
mov
incb
pop
jb
sub
pop
xchg
pop
jo
aas
pop
lods
jecxz
mov
adc
scas
repnz
and
pushf
filds
pop
sbbb
pop
test
mov
dec
adc
mov
push
dec
movsl
mov
insl
pop
popa
idivl
add
inc
in
aaa
mov
ss
lods
push
and
iret
stc
cmc
scas
jns
jp
pop
gs
flds
int
fisubl
sbb
cmp
mulb
sub
outsb
jns
mov
gs
sub
repz
mov
dec
mov
sub
out
scas
les
mov
sbb
lock
or
in
mov
out
subl
rcrb
inc
inc
sub
cwtl
fisubrl
mov
pop
sar
push
xchg
add
lds
cmc
dec
aam
ss
ret
pusha
push
fwait
insl
lret
push
mov
pop
dec
jne
shlb
inc
dec
ficompl
push
iret
fwait
lret
jle
testl
insb
mov
repz
mov
xchg
jg
imul
lds
mov
jge
repz
sbb
mov
mov
shll
cwtl
inc
cmp
stc
dec
mov
sti
jb
mov
test
cmp
jne
cmc
or
push
sbb
sti
cmp
sub
mov
out
mov
filds
adc
xlat
push
cmp
lcall
enter
xchg
arpl
or
movsb
xchg
call
rolb
mov
retw
mov
add
imul
add
fwait
ljmp
das
daa
xorl
cmpb
and
pop
int
mov
popf
aaa
or
out
nop
jo
scas
xchg
mov
push
sbb
fdivp
das
mov
adc
inc
jp
lcall
and
pop
popa
pop
pop
jg
and
loopne
mov
push
sub
jbe
repnz
lcall
out
fdivrl
mov
sub
fisubrl
cmpsb
and
sbb
mov
mov
mov
ljmp
jo
dec
imul
aaa
mov
pop
jecxz
xchg
insb
push
je
stc
mov
push
orl
push
nop
mov
mov
fmuls
mov
fisttpll
xor
popf
int3
sub
sub
insb
xchg
fld
je
push
leave
adc
jae
aaa
mov
pop
dec
cmpsl
xchg
cmp
aad
insb
hlt
push
or
out
aad
stos
push
out
repz
shrl
rolb
dec
shrl
mov
fildl
ja
dec
ret
push
aam
cwtl
outsl
jns
rcrb
mov
ljmp
shlb
mov
fwait
out
sbb
out
cmpsb
jl
fwait
js
mov
fcomip
sub
rep
push
dec
in
in
add
test
add
xor
dec
movl
gs
out
pop
inc
in
out
mov
xchg
ja
popa
ljmp
stos
or
stos
or
pop
jp
cwtl
movsl
mov
test
lret
popa
inc
lods
mov
int3
mov
mov
je
jge
lahf
xorb
lea
movsl
xor
xor
in
mov
inc
or
pop
jbe
fsubs
mov
pop
mov
add
pop
sbb
ret
dec
xor
xchg
add
mov
scas
xchg
movsl
out
xor
hlt
insb
push
sti
xchg
pop
jle
pop
aam
pop
dec
pop
push
je
push
enter
gs
or
pop
dec
push
cmp
jl
sbb
pop
dec
inc
data16
push
cmp
xchg
and
inc
rcrl
cmc
inc
ljmp
popa
jg
push
sub
pop
mov
xor
push
cmp
ss
daa
mov
pushf
adc
outsb
rorb
mov
sbb
push
orb
fsubr
leave
icebp
cmp
outsb
in
call
mov
enter
or
mov
lcall
fists
mov
inc
ja
je
inc
xchg
sbb
mov
in
push
mov
cs
cmp
pushf
fwait
scas
add
or
rorl
push
lret
mov
push
in
or
gs
mov
and
aaa
pop
mov
inc
data16
arpl
ja
fs
sti
cmc
or
aas
out
inc
mov
mov
cmp
int
push
xchg
add
pop
call
pushf
mov
rclb
jb
dec
xor
cmp
sarb
push
mov
inc
das
adc
dec
in
jge
icebp
sub
mov
popf
sbb
int
sub
inc
jns
hlt
sbb
mov
adc
mov
sub
faddl
out
push
or
idiv
mov
fdivl
nop
sub
sar
call
pushf
xor
test
outsl
repnz
sbb
out
xchg
push
std
leave
jbe
pop
lret
test
jmp
mov
inc
jae
cli
cmp
push
data16
cmp
ss
mov
out
sub
push
adc
mov
mov
popa
dec
mov
dec
jge
and
push
xchg
lahf
xchg
sub
jno
mov
icebp
call
ficoms
inc
jl
test
scas
dec
adc
xor
in
pushf
mov
jp
leave
jle
pop
js
fsubrs
mov
push
ror
lret
jbe
in
mov
fisubrs
icebp
xchg
mov
arpl
add
lds
mov
mov
fdivrl
mov
pop
mov
jmp
jg
xor
repz
lods
dec
push
jo
jo
dec
or
insb
push
in
dec
aam
jmp
rcll
jmp
pop
rol
inc
xchg
test
out
and
repz
in
daa
xchg
and
in
rolb
or
fidivrs
or
add
or
paddw
cli
test
daa
mov
imul
pop
sbb
push
outsl
idivb
adc
js
dec
outsl
into
shl
insb
mov
in
repnz
xchg
pop
cmc
mov
in
addb
sub
jmp
jl
mov
add
jo
push
dec
add
xor
xchg
xor
mov
mov
fmuls
lock
call
adc
xchg
je
dec
ds
adc
popf
das
aas
mov
scas
sahf
std
ficoml
xor
and
cmp
cli
outsb
sub
mov
arpl
xchg
outsl
xor
push
cli
sub
sub
sbb
decl
je
cmp
adc
dec
dec
sbb
fisttps
idivl
ljmp
dec
test
rclb
dec
clc
push
mov
push
imul
shrl
les
jae
enter
xchg
xor
popf
mov
and
repz
pop
xchg
dec
fwait
inc
dec
pusha
pusha
out
cld
add
or
into
int3
in
fsts
sarb
sub
sub
cmp
sbb
add
add
mov
pop
jbe
scas
movsb
fcompl
stos
sbb
adc
aad
pop
pop
pop
das
add
lahf
loopne
xchg
in
into
test
or
subl
push
jno
stc
push
pop
adc
nop
cmp
and
push
mov
inc
or
icebp
inc
dec
xchg
jae
pop
ds
xlat
mov
clc
scas
jp
sub
test
fs
out
pop
and
test
pop
idivb
ret
adc
lock
sbb
xor
push
mov
push
out
in
push
mov
jmp
aaa
mov
dec
cld
ret
dec
mov
lock
es
adc
or
add
sti
leave
sub
lahf
pop
jg
sub
and
push
or
bound
cmp
leave
jl
fnstsw
das
dec
or
push
shr
lahf
sbb
subb
dec
mov
sbb
out
push
mov
frstor
cmp
mov
test
cmp
inc
ss
sti
jbe
or
sub
pop
xchg
loope
cwtl
enter
fidivrs
arpl
push
daa
mov
cltd
ljmp
jnp
sbb
jecxz
pop
loopne
inc
icebp
gs
je
jne
adcb
ss
int
push
add
xor
ljmp
push
in
aad
xor
push
dec
adc
inc
and
adc
xor
insl
jmp
or
cs
inc
ffree
xchg
dec
mov
mull
mov
sbb
xchg
gs
test
and
xchg
ljmp
or
xchg
pop
insl
ljmp
arpl
dec
std
inc
jno
pop
mov
int3
push
cmpsl
pop
dec
leave
fwait
addl
or
xchg
pop
int
loope
push
out
aad
jl
jno
pushf
xchg
mov
dec
addb
pop
leave
mov
mov
push
out
lock
sbb
faddl
js
mov
or
test
aam
ret
jp
stc
cmpb
cmpsb
sub
cmpsb
mov
pusha
or
ds
cli
pushf
mov
pusha
pop
xchg
push
jecxz
sarb
aam
lret
lods
xchg
sub
fmul
adc
inc
inc
dec
ja
or
mov
mov
pop
data16
scas
xor
cmpsl
repz
pop
mov
test
sbb
push
push
xchg
jb
scas
repnz
fcomp
movsl
xchg
lock
jns
test
xchg
cmpsb
subl
add
push
cs
sub
mov
push
cwtl
push
enter
xor
movsl
mov
cmp
cmp
xor
adc
add
inc
leave
xchg
add
cli
mov
add
iret
sub
push
push
test
pop
or
mov
in
andl
pushf
mov
mov
cmp
push
add
add
mov
loope
dec
in
notb
mov
mov
xchg
or
xchg
mov
jmp
repnz
cltd
lret
xlat
jbe
xchg
mov
dec
mov
out
aaa
lcall
fidivl
jne
in
in
out
jbe
xlat
dec
lods
push
push
das
jg
mov
fldl
sbb
xor
sub
sbb
sbb
stos
cmp
inc
pop
stos
push
repz
out
jle
adc
push
jns
leave
cmp
inc
xor
sub
add
popf
xchg
jmp
or
in
mov
je
ss
jl
aas
vcvtsi2sd
sub
push
jmp
jbe
mov
cwtl
inc
fists
xchg
neg
sbb
pop
fbld
loop
cmp
out
adc
repnz
jbe
lcall
aam
pop
mov
sbb
lret
jecxz
adc
outsb
fst
inc
push
bound
es
stc
and
iret
cmp
fs
and
lret
mov
xchg
daa
push
or
push
in
push
outsl
call
xchg
outsb
clc
sub
pop
and
cmpsl
jnp
or
cmp
popf
mov
mov
sbb
lahf
ljmp
roll
es
jle
insb
fidivl
dec
add
push
jnp
inc
xchg
or
xchg
gs
leave
cmp
ljmp
in
fistpll
pop
and
das
sub
int3
cmp
pop
inc
pusha
inc
mov
jl
pop
cmp
rcll
es
mov
add
lock
andb
pop
imul
pop
cmc
mov
lds
enter
mov
mov
repz
inc
clc
int3
lock
xor
mov
and
test
lods
cmp
xor
fmuls
mov
push
xchg
jp
sub
sahf
lods
cmp
jl
ja
daa
in
mov
adc
fbstp
sti
adc
pop
stos
mov
mov
shl
xor
xchg
lahf
pop
into
push
inc
ficompl
jbe
inc
or
mov
clc
sbb
jmp
loope
jmp
lods
icebp
xchg
push
push
sbb
and
imul
lea
add
cmpsl
int3
insl
mov
xchg
sbb
pop
inc
pop
fs
push
dec
lods
or
xor
dec
stc
iret
add
xor
add
test
scas
jg
leave
adc
mov
cmp
or
add
int3
cmp
dec
jo
bound
lcall
movsl
and
mov
gs
jle
jecxz
movl
mov
adc
movsl
imul
xchg
lcall
or
mov
arpl
sbb
into
mov
add
mov
clc
lods
scas
xchg
fstps
cmp
aaa
add
push
adc
popa
pop
pop
insl
hlt
roll
add
rcrl
outsl
ret
imul
adc
int
in
fs
int
ret
jmp
ret
lret
lock
mov
mov
in
arpl
or
sahf
mov
pop
ss
or
sbb
and
and
or
imulb
push
pop
or
cwtl
adcb
mov
lods
jge
repz
add
cmp
pushl
shll
jmp
sub
idivb
lret
movsb
sub
ljmp
pop
push
add
clc
mov
jp
dec
and
out
inc
xchg
lret
out
push
push
push
pop
fld
jb
jae
push
je
adc
cmp
rcrb
fldl
out
fcmovb
push
int3
mov
or
adc
mov
mov
jbe
js
adc
lods
sti
call
leave
or
push
pop
and
fidivrl
cmp
push
jecxz
push
sbb
cli
addl
scas
sbb
mov
lock
sub
cmp
cld
stos
dec
cs
test
adc
les
xchg
jbe
push
lahf
push
sbb
inc
test
mov
cli
adc
imul
push
pop
sub
ja
fstpt
mull
jp
fs
dec
cwtl
push
gs
jmp
push
xor
pop
insl
out
in
cmpsl
or
les
push
das
and
inc
sahf
jb
addb
inc
lock
rcll
arpl
ret
out
call
jo
mov
icebp
scas
jle
xchg
dec
icebp
cs
call
bound
mull
repz
dec
int
push
sbb
cmc
mov
clc
jge
and
inc
fwait
sti
mov
lods
out
or
inc
pop
push
or
jle
ret
mov
out
testb
repz
mov
fcoms
inc
insl
fwait
lcall
push
ret
mov
in
sbb
insb
loop
in
shrb
loopne
jecxz
enter
adc
movl
out
xor
nop
decb
sahf
inc
mov
mov
pop
inc
jl
ss
clc
fsubrl
adc
or
cmp
out
push
xchg
mov
ret
xchg
mov
mov
mov
sub
mov
out
mov
push
leave
sar
mov
loop
pop
sub
xchg
push
xor
mov
mov
mov
pop
out
xchg
mov
and
je
les
mov
or
mov
inc
lret
xor
data16
nop
mov
xlat
sahf
xor
fdiv
dec
cmpsl
adc
sub
xorb
push
in
sub
and
shrb
aaa
data16
and
enter
aad
mov
icebp
aad
lods
popa
lods
mov
sbb
ss
ja
xor
in
lds
push
mov
mov
pop
and
je
sti
test
mov
jmp
add
xchg
pop
push
cwtl
sub
pop
push
push
mov
movb
aad
mov
mov
aam
test
jp
xor
bsf
pop
add
or
sbbl
and
into
adc
mov
insb
pop
jns
push
dec
popl
sub
cwtl
fsubs
aaa
ret
mov
rolb
pop
xor
jl
fwait
inc
push
mov
adcb
push
outsl
subb
arpl
mov
push
and
lea
leave
insl
ror
mov
pop
cld
adc
stos
push
arpl
inc
out
push
mov
cmp
loopne
inc
push
pop
test
mov
notl
xlat
pusha
lods
mov
push
sub
xor
jg
loope
fwait
inc
push
sti
fcomip
xor
dec
mov
mov
jle
mov
jl
inc
push
sub
pop
in
clc
repnz
out
das
mov
jo
lret
ljmp
scas
mulb
ljmp
adc
push
andb
mov
jmp
adc
push
cmp
mov
cmpb
mov
fisubs
scas
lds
out
fstpl
dec
adc
cmpsl
rorb
jle
push
lret
cwtl
mov
stos
dec
and
lahf
xor
out
in
loopne
loopne
cltd
stc
inc
sub
aaa
xchg
jmp
push
cmpsl
push
or
fisttps
gs
stos
mov
fldcw
mov
sub
negl
mov
cmove
addr16
imul
in
mov
push
test
je
xchg
xor
pop
ja
mov
cld
dec
lods
enter
inc
js
es
push
shlb
adc
les
and
shl
add
add
test
notl
jmp
pop
loope
clc
mov
xchg
addb
std
stos
or
or
or
addb
xchg
pop
rcrb
sub
mov
mov
or
jp
pop
ljmp
sbb
ror
sub
loop
xor
xor
orb
inc
fwait
addl
lcall
mov
jnp
and
xchg
inc
incb
jae
sahf
lret
cmp
lods
enter
mov
imul
pop
xchg
out
mov
pop
test
and
pop
and
lds
mov
jecxz
das
pop
lock
ljmp
inc
sub
mov
leave
jns
mov
hlt
mov
push
xchg
push
jg
cmpsl
push
leave
jo
mov
cltd
xchg
sub
sbb
sbb
jmp
xchg
mov
test
mov
or
xchg
andl
adcl
dec
bnd
cmp
out
sarb
add
std
mov
lret
mov
cmpsl
adc
mov
cmpsl
cmp
dec
sbb
xor
iret
push
fnstcw
aaa
mov
push
cli
inc
adcl
mov
add
rcll
jo
sub
cmpsl
pop
add
mov
pop
and
sub
add
jg
mulb
dec
test
out
cltd
xor
faddl
xor
sub
and
jb
push
and
xchg
inc
leave
sub
sub
lods
lock
mov
test
jae
les
sbb
xchg
jecxz
mov
lcall
cmpsb
inc
dec
and
push
mov
inc
push
negl
mov
test
imul
roll
jge
cltd
insl
add
xchg
lock
pop
add
mov
dec
sub
cmp
test
std
push
adc
dec
vpsllw
lea
push
aad
js
xor
popf
or
inc
out
cmp
divb
inc
mov
mov
cmp
test
cmp
in
fistl
mov
sahf
jge
pop
or
mov
fstps
addr16
jno
push
fs
sbb
or
aad
adcl
push
mov
cmp
jbe
negb
jle
loop
mov
inc
clc
scas
test
ja
sbb
int3
xchg
and
xor
ficoms
and
mov
movsl
jbe
add
fistps
xor
pop
push
imul
pop
jg
imul
inc
push
adc
jns
cmpsl
sbb
popa
or
ljmp
mov
loopne
jecxz
cli
mov
iret
add
std
xor
jno
push
mov
xor
nop
rclb
call
and
les
push
je
xchg
or
jne
data16
insb
pop
and
and
lcall
inc
insb
push
pop
jecxz
notl
push
add
cmp
and
test
daa
mov
rorl
mov
fldt
jo
jnp
jg
sbb
xchg
pop
in
push
pop
mov
inc
cs
mov
xor
daa
out
je
sbbl
pop
fcmove
in
movb
les
push
lods
and
in
pop
cmpsb
ret
pop
insb
jl
and
jbe
rcll
and
xchg
jb
jp
add
int3
fldl
popf
sbbl
add
jmp
push
mov
scas
out
pop
fnstsw
les
jl
mov
movsl
mov
sub
pop
mov
loopne
sahf
stos
jp
jp
sbb
enter
sub
or
shrl
aam
mov
sub
sub
mov
nop
or
push
repz
aaa
int3
jo
adc
push
es
gs
cmp
leave
in
jns
push
adc
pop
sub
ss
adc
sbb
gs
push
fisttpl
fmuls
xchg
xchg
mov
imull
lcall
movl
sub
mov
sbb
sbb
and
mov
pop
fwait
div
add
or
in
sarl
dec
ficompl
test
rep
sbb
mov
pop
js
das
xchg
call
xorl
mov
mov
mov
mov
dec
xor
rolb
pop
mov
mov
js
jl
insb
jbe
dec
push
frstor
mov
sub
dec
xchg
in
es
xor
inc
insb
xchg
xor
rcll
iret
fistps
or
jb
lcall
mov
mov
sub
and
inc
clc
mov
imulb
cmpsl
popf
loope
mov
pop
test
into
or
dec
repnz
xor
xor
xlat
in
les
popw
js
push
push
repz
lret
xchg
hlt
mov
hlt
push
adc
pop
pop
cmp
jno
fsqrt
inc
pop
roll
add
rclb
movsl
dec
mov
xchg
cmp
in
sub
adc
jmp
or
loope
add
mov
enter
cmc
push
lret
fldcw
xchg
or
pop
clc
shrl
sub
pop
int
mov
sbb
adc
xchg
test
pop
je
stc
push
mov
popa
pop
add
mov
sbb
call
movl
push
add
scas
fmuls
fnstsw
fs
decb
pop
xchg
shll
cmp
aam
add
and
fadd
sti
lods
sub
sub
aam
jmp
loopne
mov
cmp
ss
ja
and
jne
add
das
lods
sbb
das
enter
pop
cmp
decl
jmp
mov
sub
leave
and
mov
addr16
lea
mov
sbb
pop
ficoml
cmp
or
pop
add
sar
into
xchg
cltd
pop
in
mov
mov
push
dec
push
insl
repz
adc
stos
pop
arpl
out
out
mov
repz
xor
ret
inc
mov
in
push
imul
inc
nop
push
lret
adc
frstor
inc
mov
pop
ljmp
mov
ficoms
bound
jg
gs
adc
in
mov
repnz
orl
in
loope
sbb
addl
jae
pop
pop
out
std
jge
dec
adc
mov
mov
out
cmp
pop
or
lret
fcompl
mov
gs
jg
std
sbb
pop
lahf
inc
sbb
sub
add
push
push
fcomp
add
mov
push
push
jno
es
mov
fsub
ss
arpl
rclb
jmp
stc
pusha
cmpsl
and
mov
imul
sub
xchg
cmpsl
out
dec
imul
dec
mov
dec
push
and
and
pop
or
xchg
jne
dec
addr16
cmp
push
or
lcall
aam
mov
add
idivl
mov
mov
bound
or
loop
punpckhbw
inc
lds
aaa
outsb
mov
and
jle
pop
mov
or
lods
inc
dec
mov
and
fstps
inc
mov
repz
inc
sti
cs
xor
jbe
or
sldt
inc
push
add
xchg
sbb
mov
mov
test
push
cmp
jno
xor
and
test
lods
and
fisubrs
add
inc
mov
fcomip
clc
adc
mov
jbe
jmp
leave
insl
pushf
les
inc
rcrl
daa
mov
sbb
and
sub
push
andl
xchg
mov
dec
cmp
subb
int
or
pop
or
fiadds
and
xor
xor
in
inc
adc
popa
mov
filds
sub
ds
xchg
xor
cmp
jb
pop
mov
lcall
and
push
lret
mov
jp
sub
into
out
fnstcw
inc
call
xchg
add
das
fwait
cli
sarl
mov
jno
lret
cmpsb
dec
cmp
inc
cmpb
dec
jmp
loopne
fsubr
inc
pop
bound
int3
out
push
add
stos
push
add
andl
jecxz
add
enter
imul
dec
lock
push
add
inc
icebp
int3
push
mov
or
iret
mov
adc
mov
and
jne
popa
cmc
push
scas
dec
or
adc
pop
outsb
rorb
insb
in
jp
out
xchg
shlb
inc
xchg
shlb
xchg
ss
pop
xlat
dec
and
jl
add
xor
pusha
xor
cmp
fiaddl
fistpll
mov
loop
ds
xor
or
stos
fwait
inc
pop
cmp
cwtl
push
pusha
rcl
mov
rorb
arpl
pushl
enter
add
cmp
mov
aam
dec
jle
ret
insb
pop
jb
xchg
lret
repz
sbb
adc
aaa
fdivp
sbb
mov
insb
loope
push
lret
lret
jmp
pop
sbb
mov
hlt
sbb
and
jne
xor
ret
addl
outsl
dec
cmp
mov
jge
cli
push
add
sbb
sub
sub
mov
std
push
xchg
fidivrs
mov
movsb
js
jecxz
or
xchg
scas
insl
enter
sbb
sub
mov
iret
push
sbb
inc
xlat
aam
xor
xchg
cmpsl
div
dec
inc
sub
sahf
push
pushf
inc
sbb
imul
loopne
dec
fists
xor
add
les
adc
aaa
push
inc
data16
in
inc
xchg
iret
mulb
fcompl
dec
cmc
cld
in
and
cmp
xor
test
jle
in
mov
jmp
mov
jne
push
jae
aas
sub
add
mov
mov
dec
mov
dec
aam
mov
xchg
daa
jmp
jo
call
xor
out
jl
pop
mov
add
xor
out
xchg
int
push
sbb
ljmp
pop
xchg
jle
adc
push
or
xor
aam
outsl
jnp
aad
add
outsl
pop
jecxz
mov
cmp
cmp
in
pushl
aaa
jge
sarl
out
sbb
adc
pmulhw
jp
shrb
jg
mov
fimuls
mov
cmpsl
cmp
ja
pop
in
jp
rorl
sub
fdivrs
outsb
ja
mov
push
popa
adc
adc
inc
adc
iret
inc
test
adc
xor
xchg
adc
pusha
mov
mov
dec
jnp
in
in
cmp
xchg
and
aaa
fwait
inc
fidivl
stos
jb
adc
jmp
sbb
int
mov
mov
jnp
sbb
xor
lret
rolb
ja
in
pop
add
repnz
mov
cwtl
inc
xlat
jle
pusha
pop
stos
fsts
loop,pt
dec
stc
or
push
es
adcl
sub
clc
sub
xor
pusha
jle
iret
ja
outsl
rcrl
ret
mov
cltd
inc
push
movsb
pop
icebp
fisubl
dec
push
bound
ss
push
push
repnz
pop
mov
fcomps
fcmovbe
int3
mov
jecxz
dec
bound
mov
xchg
push
dec
mov
jle
test
mov
mov
lods
push
loopne
add
jo
scas
and
mov
filds
lods
sarl
jne
mov
xor
jne
jno
sbb
loopne
fistl
mov
dec
in
arpl
push
sbbb
inc
jo
xchg
jae
dec
dec
scas
daa
xchg
in
mov
dec
add
cmp
cmp
scas
je
mov
push
test
inc
xchg
push
fsubr
or
ficompl
push
pcmpeqd
sub
pusha
jb
inc
addr16
sbb
test
iret
mov
or
lock
cld
sub
cltd
fmull
push
aaa
cmp
jne
movsl
nop
push
or
outsb
cltd
lret
icebp
cmovp
pop
aam
bound
les
popa
lret
push
in
mov
hlt
ficoms
hlt
xor
pop
js
push
decl
daa
pushf
pop
aaa
hlt
jbe
cmp
push
test
xchg
mov
mov
cmpsb
mov
mov
orl
push
stos
mov
cs
repz
xchg
sub
jg
push
stos
xor
and
sarl
addr16
add
or
das
call
nop
test
lret
leave
ja
imul
out
gs
cmp
xor
clc
xor
xchg
cmc
push
insl
testl
add
mov
ret
pop
push
cmp
mov
mov
mov
and
in
orl
aaa
and
xor
cmp
sbb
push
cmp
cmp
jecxz
and
lds
pop
sub
sarb
sub
jg
nop
mov
bound
adc
and
inc
in
lret
les
lock
jecxz
push
subb
sbb
xlat
jmp
mov
sbb
lcall
push
sbb
mov
lea
jb
or
das
movsl
clc
aam
les
cwtl
call
dec
ja
jmp
out
inc
insl
lcall
ret
lea
clc
mov
adc
jnp
adc
aaa
repnz
pop
mov
mov
xchg
ss
lods
push
leave
mov
test
or
cmpsl
mov
sbb
shll
test
arpl
in
test
sbb
sub
mov
test
and
mov
pushf
xchg
mov
pushf
fs
pop
int
test
imul
out
dec
out
outsb
imul
js
xchg
jmp
dec
mov
jnp
adc
mov
sbb
outsl
adc
repz
ds
test
pop
mov
sbb
push
jl
jb
pop
pushf
bound
mov
pop
xlat
xor
hlt
mov
xchg
push
sbb
iret
std
xor
aam
jmp
add
dec
jno
scas
out
ljmp
popa
inc
cmp
aaa
pop
pop
cwtl
dec
dec
inc
jns
subb
rcl
mov
movsbl
xchg
pop
dec
adc
je
and
daa
adc
xchg
mov
sub
daa
mov
pop
ss
fwait
lcall
lds
mov
sbb
mov
jno
hlt
test
in
cmp
push
push
pop
sbb
ss
or
test
or
test
cmc
aas
pop
jle
lods
dec
mov
mov
xchg
cld
ljmp
std
mov
cmpsl
inc
jmp
sbb
cmp
xorl
enter
data16
xlat
cmpsl
cmp
mov
pop
das
cmpsl
or
sbb
and
pop
test
loope
dec
push
cld
mov
fadds
or
push
ror
mov
xchg
dec
sub
cs
fsubs
sbb
adc
loope
inc
mov
mov
and
shrb
mov
or
dec
rcl
ljmp
outsl
dec
jno
sub
addr16
adc
sti
lret
int
push
pop
inc
sub
sub
popf
jmp
push
cmp
push
mov
adc
movsb
pop
mov
jne
xchg
bound
push
call
mov
pop
frstor
add
dec
lret
sub
int
mov
dec
ljmp
gs
es
cmp
mov
sahf
inc
pop
push
lock
xor
cwtl
and
les
fildl
js
lods
mov
dec
lahf
jno
test
ljmp
sti
and
xor
shl
les
add
jl
jbe,pn
xchg
push
bound
cld
pop
mov
stos
mov
cltd
cltd
xchg
jge
sbb
lock
xorl
mov
leave
mov
push
and
fadd
nop
xor
xchg
sbb
xor
mov
push
mov
mov
sub
pop
dec
jecxz
cmp
mov
xor
arpl
adc
add
adc
int
dec
sub
not
imul
test
outsl
insl
ret
cs
and
cld
pusha
add
sub
sub
jno
cwtl
pop
mov
jg
subb
inc
inc
xor
push
jmp
mov
sti
push
cmc
ret
sbb
test
sbb
pop
mov
mov
nop
xchg
iret
mov
int3
sub
sub
aaa
aaa
jne
inc
pop
inc
lea
ret
fsubrp
fsub
mov
mov
loopne
sbb
fsubrp
movsb
mov
pop
adc
cmpsl
jo
iret
fstl
and
or
in
movsb
mov
dec
or
mov
ret
dec
lahf
adc
ljmp
mov
ds
lahf
pushf
pop
xchg
bound
xchg
outsb
cmp
mov
pop
jns
stos
int3
scas
mov
sbb
inc
dec
inc
cmp
mov
push
or
mov
dec
lret
inc
pop
mov
stos
push
scas
mov
push
dec
nop
adc
pop
sbb
out
cli
sbb
les
mov
dec
fmuls
mov
aam
adc
push
jnp
xchg
mov
test
pop
jbe
and
test
mov
aad
mov
cmpsl
jp
sub
scas
stc
jecxz
lgs
arpl
add
mov
imul
testb
int3
push
jge
add
out
xchg
mov
jae
mov
mov
cmovnp
mov
cmp
repz
jne
daa
fistps
pop
add
push
jnp
sbb
xchg
xor
fidivl
out
mov
xchg
mov
sbbb
lds
je
mov
inc
sub
add
mov
add
xor
shlb
leave
jb
lods
test
movl
sbb
add
aas
sahf
decb
cmp
lret
addr16
std
imul
inc
loopne
dec
daa
loopne
and
or
fisttpll
push
imul
jae
cwtl
addb
sti
enter
ljmp
pop
int3
roll
popf
repnz
nop
out
cli
and
mov
adcl
mov
cmp
xchg
test
sbb
mov
push
or
xor
pop
add
cmp
push
divb
jl
mov
int
cmpsl
leave
idivb
cmp
test
dec
add
leave
icebp
in
out
mov
sbb
jmp
subb
pop
idivb
mov
dec
and
or
jo
mov
jg
sbb
jle
xchg
sub
les
out
xor
loope
adc
cmpsl
les
cmp
xchg
shlb
and
xor
xchg
cld
mov
cmp
pop
in
testl
mov
mov
lret
add
scas
into
test
jns
mov
xchg
insb
mov
push
jae
mov
adc
push
in
jge
aam
mov
mov
pop
imul
mov
fwait
xor
sbb
fidivrl
dec
cltd
std
in
in
lods
or
js
pushf
pop
add
cmp
xor
movsl
lcall
dec
movsl
cmc
add
xchg
lret
mov
jns
jp
cld
ljmp
xchg
sbb
les
xor
mov
ret
mov
inc
das
adc
sub
loope
scas
loop
mov
cmp
das
push
mov
pushf
lret
inc
frstor
out
xchg
xchg
sti
int3
sahf
xor
xor
pop
inc
xor
aas
aas
sub
pop
sbb
push
cli
mov
lret
push
pop
ja
out
jns
or
pushf
bound
icebp
repz
leavew
sub
out
sub
push
and
lock
sti
mov
add
or
sbb
iret
imul
das
sbb
push
ljmp
pushf
inc
fldenv
testb
fstl
aad
pop
loope
clc
js
or
push
mov
ljmp
mov
cmp
imul
dec
add
push
nop
insb
gs
fdivs
sti
xchg
jo
xor
mov
cwtl
ljmp
roll
pusha
push
cltd
inc
mov
mov
ds
pop
xchg
int
sbb
ret
pushf
shll
mov
js
repnz
and
movb
pop
loopne
jbe
fsts
add
inc
lret
jmp
add
xchg
jmp
mov
aam
ret
jbe
mov
mov
cmp
mov
xor
inc
nopl
dec
dec
pushf
fiaddl
jl
cmp
xor
and
sub
mov
cltd
jns
and
mov
loop
push
mov
xchg
cld
cmp
jp
dec
sti
adc
sub
xorl
leave
sub
mov
sub
gs
sbb
cmp
lods
adc
in
repz
add
mov
imulw
bound
cmc
loopne
dec
cwtl
jne
mov
cli
loope
inc
les
mov
lods
xchg
inc
pop
cltd
out
repnz
scas
cmp
outsl
mov
daa
imulb
shl
xchg
or
enter
lret
dec
and
jnp
js
or
mov
fnstsw
leave
cmp
ficompl
in
int
jns
mov
adc
rclb
loopne
shl
jne
or
sub
mov
aas
sbb
inc
cld
lods
sbb
lret
int
loopne
out
mov
push
mov
inc
jl
das
mov
push
mov
loopne
cmp
ljmp
xlat
int3
xor
fimuls
push
cld
icebp
dec
mov
int3
cltd
out
test
sub
add
sbb
lds
stc
mov
xor
movsl
and
pop
or
inc
jne
push
inc
insl
ljmp
mov
and
cmp
push
and
es
inc
mov
mov
push
test
mov
scas
mov
ficompl
xchg
inc
lock
mov
mov
cwtl
out
and
sarb
daa
jnp
push
sbb
and
pushf
cmp
insb
jbe
mov
add
or
pusha
jl
or
adc
lds
inc
push
shrb
push
and
sbb
insb
xchg
call
add
mov
add
mov
push
and
dec
dec
insl
sub
push
inc
jbe
xchg
xchg
scas
mov
rcr
xor
or
cmp
sarb
pushf
add
push
insl
add
outsb
add
push
je
cmpsb
mov
jo
icebp
popf
js
dec
rolb
test
f2xm1
and
hlt
and
pop
mov
pop
xor
or
mov
data16
xchg
jle
and
cs
pop
push
inc
push
ja
adc
cwtl
icebp
call
mov
cmp
lods
mov
push
fdivrl
jge
dec
scas
pop
or
fdivr
mov
pusha
xor
jecxz
cmp
cmpl
popa
sti
or
hlt
cmpl
mov
mov
add
cmc
mov
mov
call
push
movsb
outsl
jl,pn
ficoml
movsb
sbb
pop
and
in
push
push
jl
sub
cmc
xor
jecxz
jle
imul
neg
mov
sbb
or
jns
sti
mov
mov
cmp
popa
fldenv
jbe
mov
add
ss
pop
movsb
imul
lea
int3
sub
sub
jae
cmpsb
loopne
fisttpll
add
fisttpll
loope
ljmp
sbb
mov
cld
sbb
insl
sbb
imul
sub
xor
gs
sahf
sub
imul
add
outsl
dec
aad
jl
jns,pt
repz
pop
jne
pusha
fldl
adc
xor
mov
bound
cmp
sub
mov
popa
or
mov
jp
xchg
and
fsubrl
pop
les
push
inc
imul
add
in
inc
mov
inc
xor
sub
adc
push
ja
adc
imull
adc
leave
xor
mov
sub
cli
adc
xchg
sub
xor
mov
jns
cmp
mov
cmp
scas
cltd
popf
jae
test
cmp
mov
fstpt
jle
push
inc
in
mov
pop
xor
idivb
sub
insb
sub
mov
in
pop
jnp
mov
stos
xadd
add
outsl
fldt
movsl
aam
lea
mov
test
mov
dec
stos
pop
fmull
fistpll
adc
cld
push
cmpsb
mov
sub
jno
mov
insl
cmpsl
and
insl
adc
mov
xor
popa
aam
gs
pop
stos
dec
mov
pop
repz
or
arpl
jae
gs
push
xchg
lret
iret
jmp
pop
mov
ja
jae
movsl
pop
or
sub
call
inc
and
jmp
push
jbe
inc
xchg
rcrl
shrl
cmp
pop
cmp
xor
repz
scas
loop
sub
and
mov
push
mov
or
inc
pop
cmp
repnz
sub
insl
je
popa
cmp
adc
ljmp
out
adc
lret
mov
testb
jae
mov
sbb
sub
and
jmp
jbe
shll
insb
jp
aaa
cld
addr16
sti
cmp
adc
inc
sbb
arpl
loope
push
mov
jnp,pt
dec
pop
into
xchg
cmp
jl
jno
push
xchg
cmpsb
gs
es
test
in
sub
sbb
test
in
xchg
aas
adc
mov
addl
sub
add
ret
stos
jmp
sbb
xor
int3
push
cmp
xchg
push
roll
adc
aas
call
rcr
es
jnp
js
adc
adc
jnp
cwtl
imul
fiadds
xchg
cmp
or
inc
lds
push
adc
mov
loope
push
aaa
adc
movsb
gs
shlb
cmp
inc
outsb
push
xor
lret
les
or
je
mov
xchg
popf
sub
sub
leave
push
xchg
adc
test
fldln2
jbe
sub
in
jecxz
pop
gs
mov
imul
cmpsb
mov
jnp
in
inc
push
xchg
cmp
repz
inc
out
pusha
rcr
cld
scas
cli
xchg
jo
xchg
sbb
and
adc
nop
mov
popf
daa
jmp
insl
cmp
xchg
mov
femms
pop
clc
mov
icebp
mov
aam
shlb
test
cmp
dec
vpunpcklbw
imulb
jmp
jp
xchg
xchg
and
sbbb
ljmp
dec
push
pop
call
sbb
insb
stc
aad
ret
or
mov
data16
fldenv
cli
popa
bound
jecxz
jmp
add
iret
xor
pop
pusha
pop
repnz
aam
cmpsl
push
add
out
mov
ret
inc
pop
out
xchg
sub
cmpb
or
data16
dec
cwtl
inc
enter
push
cmp
push
jne
dec
mov
pop
xchg
adc
je
outsl
ds
sub
movsl
sub
cmpsl
es
fcmove
sbb
xor
imul
sbb
xchg
mov
lods
sub
mov
int
cmp
daa
mov
inc
adc
pop
adc
mov
movsb
jl
sbb
xor
xlat
mov
inc
dec
scas
inc
aaa
push
icebp
adc
jp
in
and
subb
sbb
popf
push
push
mov
out
insb
test
orl
sub
mov
xchg
mov
arpl
inc
std
lds
mov
mov
cli
insl
scas
xor
add
push
mov
test
dec
sub
stos
lods
stc
pusha
or
scas
push
add
inc
fimull
xchg
push
cmp
cmp
mov
jns
sub
mov
fists
dec
inc
dec
cmp
bsf
out
lcall
not
and
pop
sub
xchg
subb
fwait
dec
push
cmp
xchg
inc
inc
or
ss
adc
shrb
ret
sbb
jb
and
and
test
fdivrs
or
or
shl
lods
jo
fcmove
sub
inc
lahf
js
pop
inc
out
lret
insl
push
popa
push
mov
scas
ficoml
inc
daa
add
push
test
sub
in
out
mov
aaa
lret
loope
pop
pop
xchg
xor
or
or
outsl
push
xor
pop
xor
sub
dec
call
stc
pusha
or
pusha
mov
clc
sahf
inc
mov
jmp
ficoms
data16
dec
push
sbb
dec
divl
xsha256
cmpsb
push
and
movsl
sbb
mov
je
test
ret
enter
daa
xchg
mov
jle
sti
jl
jl
push
int3
inc
popf
xor
rolb
outsl
leave
aas
sub
scas
mov
fcmove
fwait
mov
pop
jns
imul
xor
fwait
sarl
and
mov
push
sub
pop
pop
lret
out
pop
mov
push
lcall
add
xlat
xor
aad
icebp
icebp
mov
loopne
cmc
out
sbb
pop
lahf
aam
push
add
jp
paddusw
in
jle
aad
sub
xor
mov
lods
push
xchg
imull
sbb
push
push
popf
jae
ret
xor
scas
push
cmc
add
add
dec
fnsave
sub
aaa
in
dec
adc
insl
mov
mov
stos
or
pop
cmp
or
pop
push
das
fxtract
pop
dec
into
pop
fnsave
adc
sbb
in
or
mov
cmp
lods
dec
inc
and
adc
jl
xlat
add
mov
fiadds
mov
stc
and
icebp
xlat
clc
sti
cmpsb
jle
xor
imul
sub
pusha
lret
movsl
out
dec
xchg
pop
jo
daa
cmp
xor
mov
pop
testl
in
push
mov
ret
push
mov
add
das
xchg
jb
xor
and
sahf
aad
test
enter
mov
cmpsl
lahf
stos
das
pop
cmp
in
jmp
sbb
in
pop
push
in
add
sub
push
out
sbb
add
in
xor
jecxz
and
pop
mov
dec
test
push
sub
lds
testb
cmp
pop
pmulhuw
in
pop
in
repz
pop
adc
mov
fs
xchg
mov
je
and
fsts
aam
mov
xor
adc
test
jmp
in
add
dec
and
cwtl
inc
sub
mov
adcl
test
and
pop
jle
fidivrs
in
pop
sub
cli
es
xchg
enter
sbb
aas
aam
push
es
jge
and
imul
fucomp
mov
cmp
int
mov
mov
dec
mov
sub
mov
movsl
int3
mov
push
jg
ds
mov
jae
push
ret
adc
lods
mov
jle
adcb
mov
xchg
dec
xchg
bound
shlb
imul
cmp
cmp
mov
xor
jae
sbb
out
adc
push
mov
mov
mov
test
ret
cmc
and
orl
jo
jl
add
fcomps
out
lahf
pop
sub
pop
cmp
in
in
int3
cmpsb
pop
jbe
testb
cmc
in
push
rcll
sbb
fdecstp
enter
sub
add
rol
xchg
push
xchg
pop
xor
xor
cmp
or
imul
out
push
add
xor
outsl
movb
dec
push
lret
pop
inc
lcall
adcb
nop
imul
imul
xor
dec
aam
daa
aaa
push
lds
ror
testb
inc
and
mov
jb
dec
jnp
pop
mov
fdivs
sub
fisubrs
mov
movl
lock
mov
inc
popl
in
xor
dec
xchg
pop
fxch
test
je
jbe
or
aam
daa
cmpsb
js
mov
pop
lods
or
push
jo
ljmp
movsb
mov
add
sub
mov
mov
and
adc
inc
stc
push
pop
int3
into
or
mov
xor
and
shlb
std
pop
aad
cltd
push
jno
adc
insb
jg
jmp
loop
lahf
repnz
je
inc
push
ret
mov
xchg
int
out
lahf
jne
dec
ds
dec
jae
mov
add
jmp
pop
sbb
test
outsl
scas
adc
mov
negl
in
or
lods
ja
inc
scas
pop
dec
xchg
leave
mov
push
test
in
inc
sbb
cmp
dec
xor
dec
mov
dec
sbb
ficoms
test
imul
or
sbb
cmp
fimuls
andb
jmp
adc
mov
fisubrs
test
inc
rolb
jo
addr16
mov
pop
jns
cmp
pop
mov
repz
lcall
push
movl
aaa
sub
fistl
jno
push
out
test
inc
loope
into
pminsw
rclb
fnstenv
mov
ds
xlat
popa
shrl
pop
inc
cmp
jmp
mov
inc
stc
aam
icebp
mov
jne
xchg
movsb
andb
lods
outsb
lea
orb
pop
and
aam
jl
out
push
xchg
pop
adc
mov
clc
jo
add
nop
dec
inc
insb
insl
jecxz
xor
int3
mov
sti
inc
shl
cmp
cmc
scas
ds
inc
jne
mov
sbb
xchg
fldenv
pop
mov
mov
lock
inc
pop
mov
icebp
and
push
fstl
ja
cs
push
mov
mov
in
mov
adc
mov
repnz
cmp
pusha
add
jbe
jge
movsl
rolb
ja
mov
xchg
sbbl
orb
sbb
or
sub
movsl
cmp
sbb
out
sbbl
stos
sbb
xchg
clc
jb
call
loopne
popf
addb
leave
leave
lds
cmp
cltd
ljmp
and
sbb
pop
adc
addl
out
es
adcb
data16
jns
out
cmp
jno
movsb
dec
cmp
imull
out
push
cmc
sbb
int
ret
addr16
inc
xor
rcrl
pop
cld
fidivl
mov
pop
unpckhps
cld
sahf
adc
inc
outsl
scas
jmp
cs
sub
mov
sar
inc
movb
jbe
lock
inc
nop
test
cmp
pop
mov
or
sti
or
sub
xchg
pop
mov
arpl
enter
jmp
jae
mull
lods
dec
into
pop
cmc
jns
scas
in
push
shll
dec
scas
xchg
sbb
lcall
mov
int
pop
add
sub
add
mov
outsl
stos
int3
lahf
cmp
push
jle
dec
outsl
add
jns
dec
pop
ret
mov
stos
testl
sub
add
or
roll
xlat
add
push
in
imul
push
scas
stos
clc
adc
dec
xorb
jge
int3
mov
and
jb
test
dec
sbb
sbb
int
pusha
sbb
dec
or
std
ud0
sub
in
sbb
and
adc
mov
fs
shrl
xchg
enter
insb
mov
add
lock
or
xchg
aad
shlb
enter
jns
push
fucomi
in
pushf
aam
sub
push
inc
aad
pusha
pop
int3
je
ret
sbb
mov
push
xor
adc
ja
and
stc
sbb
sub
arpl
mov
dec
scas
xchg
rcll
dec
in
push
leave
pop
xchg
into
loopne
incb
jno
push
inc
lret
jne
daa
inc
or
add
xor
mov
sub
pusha
adc
mov
pop
dec
xorl
push
jle
sahf
negb
into
mul
test
fldt
pop
hlt
loopne
lcall
subb
in
leave
mov
add
inc
sar
jno
fwait
outsl
repnz
fcmovu
shl
jp
cltd
mov
pop
xor
inc
das
outsb
pop
cld
xor
mov
out
sub
sahf
out
lret
insl
cltd
aaa
cmpsl
out
xor
repnz
jo
or
jnp
ss
insl
fstps
sbb
jno
mov
and
adc
jb
sub
int
decl
cmpsl
aam
mov
mov
and
sub
xor
and
in
lret
dec
mov
lods
mov
jno
test
cmc
mov
ret
jmp
lcall
ds
mov
xor
mov
lcall
shr
dec
push
in
jno
std
and
jns
roll
lret
test
mov
sbb
sarb
insl
sbb
add
std
dec
decb
jnp
jg
sbb
daa
push
nop
and
jo
sub
lock
rcrb
andb
mov
xlat
mov
movl
in
ljmp
sbbb
mov
mov
xchg
clc
into
adc
arpl
movb
cmp
mov
rorb
xor
test
popf
push
in
mov
aaa
pop
mov
sbb
jge
lock
xchg
mov
cmp
lods
cmp
fwait
inc
sub
sbb
ret
cs
mov
jg
cmp
imul
dec
scas
cmp
aas
stos
test
insb
out
pop
out
lahf
inc
xchg
sub
jl
push
jbe
mov
xchg
jns
lock
pop
ja
dec
inc
mov
jecxz
mov
out
jno
or
in
jb
addr16
ss
lock
pop
idivl
jnp
in
pop
push
dec
out
in
movl
xlat
jecxz
sbb
push
pop
push
mov
xchg
in
loopne
xchg
jmp
pusha
xchg
sbb
cmp
pop
sbb
add
add
push
sbb
repnz
movb
cltd
popf
ja
cmpl
mov
shlb
loopne
jbe
push
bound
jl
cmp
adc
sub
sub
cmp
scas
gs
xchg
cmp
cli
cmp
or
cmp
sub
ljmp
aaa
mov
popf
jae
jb
rorb
xchg
mov
and
add
call
fdivrs
xlat
out
aam
or
sbb
or
loop
or
push
loop
lret
sub
mov
adc
idivb
shll
lret
repnz
dec
rorl
in
in
sbb
xchg
dec
fidivl
loopne
movsb
xor
mov
daa
ud0
lcallw
xor
pop
jl
mov
bound
mov
iret
sub
jb
mov
push
adc
mov
jns
pushf
xchg
aaa
mov
insl
ljmp
int3
and
jno
iret
jl
xor
imul
xchg
and
pop
iret
mov
in
test
cltd
jp
xchg
or
inc
mov
loopne
xchg
ror
cmp
sub
add
mov
pop
sbb
xlat
or
mov
pusha
imul
movb
in
push
mov
pop
push
sti
mov
js
adc
fdivs
xchg
jecxz
mov
pop
sub
mov
jmp
lahf
jb
pushf
or
iret
cmp
mov
int
mov
repz
pop
imulb
inc
pop
int
je
cmpsb
icebp
out
movsb
into
lret
adc
or
cwtl
jns
cltd
ds
cmpsl
scas
jbe
dec
hlt
jne
js
or
ret
pop
inc
out
ret
mov
cwtl
mov
arpl
add
popa
ret
rcrb
push
hlt
jmp
stos
mov
add
dec
inc
sbb
add
gs
or
out
hlt
xor
push
mov
xchg
in
mov
cmp
sahf
sbb
cs
xor
fcomi
push
call
stc
sarl
and
mov
fcompl
addr16
inc
jo
dec
push
jg
imul
sbb
div
sub
jbe
sbb
or
dec
icebp
jmp
push
cmpsl
sbb
leave
test
fistpl
outsl
or
bound
adc
lahf
ljmp
pop
ret
jbe
sbb
cmpsl
lock
js
ljmp
jecxz
dec
mov
leave
int3
adc
inc
pause
test
repz
je
mov
lret
mov
aaa
xchg
cmpsl
xor
loope
jmp
inc
sar
pop
mov
mov
hlt
sbb
mov
pusha
cmpsb
push
stc
lcall
jno
ds
icebp
negl
fdivl
pushf
inc
xor
cmp
jno
movsb
mov
sbb
mov
scas
dec
pop
xchg
add
aas
sbb
mov
popf
repnz
data16
add
cwtl
dec
ds
popa
mov
and
mov
dec
int
xchg
sub
jle
cltd
pop
popa
cmc
or
into
push
xchg
cmp
das
jo
pop
pop
pusha
jae
out
add
outsl
out
in
add
arpl
je
cmp
pop
les
adc
sbb
xchg
mov
sbb
xchg
cmp
lock
cmpsl
and
gs
lock
call
or
fsubr
sbb
jecxz
add
es
inc
adc
lret
in
das
test
or
xor
and
mov
cwtl
addr16
mov
popa
out
pop
ja
fisubs
popf
push
xchg
je
xor
icebp
sub
shl
ret
dec
shll
iret
mov
mov
aam
sbb
call
xor
jb
pop
shlb
imul
pop
push
fwait
insl
jecxz
loop
pop
movsl
xchg
pushf
int3
icebp
mov
cs
fcmovbe
ficoms
test
sahf
push
les
mov
stc
xor
mov
sar
shrb
xorl
imul
and
int
ficoms
lock
cmp
aaa
rolb
jne
pop
cmp
xlat
and
cli
cmc
in
and
icebp
mov
adc
push
mov
push
mov
push
imul
roll
push
adc
gs
enter
clc
das
out
xchg
mul
vsubss
leave
xchg
jno
mov
ss
mov
or
sub
dec
mov
xor
xor
mov
in
mov
sbb
imul
lahf
pop
push
jno
sti
movsb
and
cwtl
ljmp
and
mov
push
jbe
dec
ds
mov
lea
rclb
outsb
shll
repnz
punpcklbw
loopne
loopne
xlat
pushf
and
mov
push
xchg
out
mov
cmp
cld
in
push
xchg
aas
scas
in
repnz
dec
xor
cmpsb
pop
push
jbe
sbbb
fnstenv
push
adc
or
mov
or
in
fwait
sahf
into
push
xchg
les
lods
iret
out
mov
lods
jle
pusha
sbb
add
fs
mov
or
mov
jecxz
sub
out
in
lods
and
aas
repz
push
lret
or
add
pop
adc
das
pop
shlb
push
in
mov
xchg
insb
mov
push
inc
bound
aam
test
repnz
rolb
fisubrl
cs
inc
mov
push
aas
inc
imul
adc
mov
sbb
sub
sbb
in
call
mov
icebp
adc
ljmp
fwait
mov
inc
push
sub
sub
jns
sahf
jl
inc
xor
scas
fstps
jmp
xorb
inc
jmp
xchg
mov
and
les
pop
and
roll
pop
cmp
mov
pop
cmp
stos
inc
lret
addr16
lahf
scas
icebp
loop
mov
dec
or
xchg
addps
aaa
lock
dec
out
push
mov
inc
adc
dec
gs
push
or
mov
jb
xor
and
jp
sub
push
xor
jge
fnstenv
pop
push
mov
mov
add
mov
inc
mov
pop
cmpsb
mov
cmp
sub
and
in
add
imul
pop
dec
and
pushf
test
rol
gs
sub
leave
cld
js
lahf
je
lret
dec
int
int
mov
adc
push
sbb
sbb
jno
fnsave
mov
sbb
or
pop
gs
fucomp
pop
adc
pop
push
scas
sub
in
jl
fsubrl
cmpl
dec
iret
dec
stos
mov
pop
inc
fisubl
inc
dec
frstor
push
es
and
xlat
mov
call
jae
jmp
jb
mov
into
cmpsl
sub
mov
pushf
lret
sub
or
loope
jmp
popa
sti
rcrl
mov
movb
movsl
mov
shll
ss
iret
jge
loopne
add
out
and
cmp
xchg
pop
imul
lods
inc
iret
or
cmpb
jmp
sub
fiadds
ja
cmpsl
jmp
sbb
notb
dec
loopne
daa
mov
mov
xor
inc
daa
adc
push
xchg
cmp
in
loop
or
sti
sbb
shrb
out
repnz
dec
enter
jbe
adc
pop
xor
push
xor
negl
jg
repnz
inc
xchg
leave
in
mov
mov
icebp
xor
ret
push
ret
daa
mov
int3
mov
hlt
cli
mov
xor
cmp
pop
adc
sub
lea
sub
mov
mov
clc
popf
sarb
pop
jp
jmp
sbb
mov
lods
add
loop
lds
xlat
sbb
jge
pop
dec
movsb
daa
sbb
hlt
cmp
adc
inc
scas
sbb
xchg
mov
sbb
pop
and
shrl
or
jmp
cld
push
sub
xchg
adc
cmp
add
xor
pop
cmp
addl
int
pop
cld
fisubrs
and
or
cltd
sbb
cli
daa
push
and
mov
les
pop
int3
jnp
loope
and
xchg
cmpsl
inc
fisubl
lcall
mov
or
pop
xchg
sahf
pushf
mov
loope
loopne
mov
cmc
enter
incb
lods
fwait
or
mov
gs
in
add
aad
faddl
cmp
push
mov
mov
icebp
jne
inc
jbe
dec
fld
push
sub
xor
jns
jle
mov
jl
out
addr16
adc
fidivs
adc
movsb
aam
gs
arpl
push
int3
mov
pop
outsb
insl
inc
and
add
mov
popa
mov
xor
sbb
adc
movsb
add
lock
sbbb
mov
xchg
into
sti
pop
pop
lret
stos
add
in
sub
cmp
in
or
jl
popf
movsb
loop
jo
push
outsb
cli
push
sahf
push
fsub
repz
adc
cmp
jns
addr16
in
add
addr16
in
stc
cs
push
lahf
stos
and
mov
les
pop
xchg
dec
jne
loopne
rcll
cmp
cmpsl
popf
movsl
shll
dec
mov
sub
cmovle
mov
fadds
fisttpll
cmp
adc
push
sbb
mov
xor
lods
mov
sti
dec
mov
sub
out
fsubl
into
gs
push
ret
dec
push
stos
sub
outsb
ja
ds
test
or
lods
push
aad
xor
inc
jmp
sbb
mov
hlt
cmp
in
inc
mov
imul
rcl
fbld
dec
sub
xchg
add
lahf
fs
sahf
xchg
mov
pop
lret
aas
adc
inc
ja
fcomps
sub
movsb
mov
cmp
call
xor
adc
das
nop
and
adc
push
jmp
mov
fsubl
dec
out
jge
or
aaa
stos
push
pop
in
stos
xorl
mov
xlat
fwait
push
test
mov
cmp
or
shll
popa
mov
or
lock
scas
and
cmpsl
push
lods
add
mov
loope
fisubrl
mov
rorl
sbb
push
mov
fdivp
push
sbb
inc
lret
stos
dec
pop
pop
jns
add
rcll
loope
jge
enter
cltd
ljmp
daa
in
shlb
clc
leave
inc
in
data16
jo
lea
xchg
inc
cs
cli
xchg
adc
adc
iret
push
jecxz
hlt
sets
insl
inc
stos
fsts
lret
xor
test
ror
add
or
aam
mov
cmp
fsub
xor
mov
sub
push
les
jne
divl
bound
sub
out
cmp
inc
test
cmp
call
push
mov
fwait
aaa
mov
rcrb
rorb
mov
push
fcoms
add
gs
in
lea
pop
fdivr
mov
addl
ret
into
push
sbb
mov
mov
fisubs
ror
push
xchg
inc
in
cs
imul
in
icebp
icebp
xor
aam
add
or
call
ljmp
out
outsb
xchg
jbe
into
fsubs
mov
nop
je
jg
jge
mov
inc
sbb
insl
aam
adc
or
sbb
fsin
adc
jle
popaw
jp
out
flds
pop
bndstx
stos
sysret
inc
roll
divb
sbb
dec
or
stos
jb
mov
pop
jns
push
orb
or
test
cmp
in
std
cmp
andl
loopne
lods
enter
ja
pop
pop
jo
pop
fldenv
push
iret
cmp
cwtl
test
negl
pushf
mov
clc
inc
mov
mov
sub
jle
xlat
mov
jecxz
out
or
dec
outsb
gs
imul
push
cld
mov
adc
adc
and
cmp
mov
mov
and
mov
stos
pop
mov
adcl
and
int3
repz
stc
xchg
fstl
aas
aad
clc
mov
mov
mov
movsl
rolb
adc
incb
les
mov
mov
inc
mov
jge
xor
lods
adc
ret
stos
sub
subl
ds
push
test
rcrb
jne
pop
rcll
or
lahf
sub
push
and
jno
xor
and
jl
sub
mov
mov
leave
push
mov
in
inc
jb
xor
mov
sbb
push
push
push
movsl
fmull
nop
dec
hlt
mov
jnp
push
sub
cmp
dec
jl
mov
and
push
rcrl
or
call
pop
xchg
dec
setp
sbb
aam
add
fdivrl
pop
ja
sbb
aas
int3
test
fmulp
push
xchg
fidivs
jp
lods
ja
scas
stos
icebp
movsl
daa
sub
adc
cmp
cmpsl
int3
sbb
sbb
jl
xchg
lock
or
scas
loopne
sub
les
cltd
jb
jge
xor
fistpl
inc
xor
or
xchg
xor
mov
fsub
adc
adc
ja
push
bound
xchg
xchg
inc
mov
push
gs
jp
mov
loope
mov
stos
les
sbbl
and
call
xlat
dec
test
fwait
insl
fisubrl
cli
movsl
adc
inc
js
mov
call
inc
jae
les
cmp
add
mov
jbe
add
xlat
push
adc
or
xchg
andb
and
dec
pop
xor
push
mov
pop
mov
mov
in
or
push
push
movsl
dec
stos
mov
je
lea
jno
sub
push
push
sti
imul
movsb
into
push
sub
mov
nop
pop
popa
movsl
jl
scas
cmpsb
sbb
dec
jle
push
adc
stos
xchg
jne
nop
mov
ss
das
xchg
arpl
jnp
push
ljmp
and
cmp
inc
out
sub
pop
mov
pop
lcall
mov
xchg
les
dec
lcall
push
push
das
nop
lret
hlt
mov
xchg
inc
scas
pusha
hlt
call
jnp
mov
sahf
loop
popf
inc
xchg
push
jnp
fidivrl
jbe
scas
lds
icebp
ja
imul
data16
mov
jl
pop
lea
dec
arpl
pop
adc
fldenv
iret
pop
push
sbb
xorb
test
jle
lods
ljmp
xchg
mov
mov
sahf
fldt
pop
lret
xchg
xor
inc
push
loop
mov
test
inc
fisttps
cmp
rolb
push
sbb
jo
scas
jle
cld
lcall
clc
stos
pop
mov
outsl
stos
push
sbb
jb
mov
ret
lds
mov
sbb
rcll
push
cmp
push
and
and
mov
rclb
lret
insb
mov
pop
push
out
pop
cli
push
sub
dec
jno
jl
bound
inc
and
xorl
cmp
jle
je
int3
pop
pop
push
dec
xor
and
dec
ficomps
and
inc
cmp
mov
repz
addr16
jo
pop
lds
movsb
jp
add
bound
inc
sub
pushf
fsubs
adc
dec
out
jge
adc
insb
andb
mov
hlt
mov
dec
fcoml
dec
aad
sbb
mov
cmc
pop
pop
jle
lds
rol
cmp
fidivl
cmp
adc
adc
sbb
lret
filds
push
outsb
cmp
dec
xchg
js
faddl
mov
and
test
mov
xor
cmp
out
cmp
xor
loop
adc
mov
mov
popa
cwtl
sbb
push
fistps
inc
andl
and
jp
pop
inc
js
mov
inc
inc
jl
in
cs
xlat
aaa
jge
daa
pop
inc
repz
adc
push
push
jo
dec
push
aam
mov
repnz
add
out
in
cltd
pusha
jmp
out
lahf
nop
add
lret
cli
jb
mov
leave
adc
fdivrs
ret
out
fdiv
stc
adc
test
fildl
sbb
lds
mov
xchg
mov
or
pop
pop
xor
shrl
mov
nop
out
or
dec
push
fwait
xchg
out
sti
and
mov
loopne
push
adc
jl
js
dec
add
lret
push
jne
sbb
xchg
fdivrs
test
in
ja
pop
push
cmp
popa
xchg
aam
mov
ret
mov
incl
mov
ja
repz
and
cltd
shlb
cmp
inc
mov
outsl
ficompl
sub
insl
xor
pop
clc
mov
ss
mov
adc
push
sub
cmp
xchg
mov
stc
xor
out
insb
cltd
daa
pop
adc
and
mul
pushf
hlt
ret
insb
es
pop
or
addr16
mov
fcomi
mov
xor
pop
sbb
aam
test
cs
jne
mov
aad
jb
dec
fildll
aad
insb
and
daa
xchg
loopne
stc
jmp
mov
adc
or
rcrb
lea
dec
add
in
pop
mov
push
mov
lret
dec
cmp
inc
adc
movsl
lret
xadd
mov
add
std
inc
fcmovnu
add
sbb
cli
mov
cmpsb
int
insl
dec
in
jno
sub
test
jmp
fdivrl
xchg
test
sub
inc
push
rclb
movsb
pop
or
rolb
cmp
inc
sahf
push
inc
sub
and
out
or
addl
inc
pushf
xor
in
shrb
loopne
stos
jns
into
decb
es
push
popf
popf
inc
dec
xor
inc
xchg
or
xor
dec
sub
cmp
and
addr16
cmpsb
add
jl
cmp
stos
sbb
xor
push
aam
imul
jae
lret
cmc
mov
test
inc
push
inc
lret
loop
push
sbb
add
shrl
push
shll
inc
inc
int
rcll
ss
movsl
in
and
mov
fwait
mov
fimull
fdivp
dec
jns
cmpsl
repz
cmp
jge
and
cmpsb
repnz
inc
pop
push
movsb
rol
cmp
shlb
jge
pop
mov
call
cmp
jmp
adc
addr16
scas
xor
and
or
dec
cmp
repnz
cmp
push
clc
nop
into
jb
jae
cwtl
stos
jl
movntq
aad
lds
or
add
int3
ret
stc
loopne
or
xor
lret
dec
les
xor
mov
mov
rcl
arpl
notb
test
jb
xor
add
pop
popf
aas
insl
ljmp
out
xchg
loope
iret
repz
xor
sub
cmp
adc
add
out
gs
jl
js
add
mov
and
cmp
sti
add
sti
cltd
push
mov
invd
jb
sbb
sbb
aas
push
pop
xchg
add
repz
nop
fnstenv
pushf
test
adc
pop
cmp
xchg
jno
mov
in
sti
add
jbe
add
jne
leave
mov
add
jl
icebp
ss
xlat
sbbl
lret
gs
scas
divl
sub
sbb
gs
sub
cmpsb
scas
mov
popf
sti
or
cltd
pop
push
pop
mov
pushf
mov
outsl
push
sahf
inc
roll
push
cmpsb
shrb
pop
jns
push
fs
xor
out
fadds
iret
xchg
xor
push
shr
adc
stc
lahf
sbb
in
mov
ret
in
jge
jbe
inc
pop
leave
test
push
add
cmp
fs
pop
data16
aas
faddp
movsb
mov
xor
stos
pop
scas
shlb
movsl
shlb
das
test
in
xchg
out
inc
xlat
test
xchg
add
mov
pop
jb
in
or
mov
jecxz
in
mov
mov
test
iret
imul
cmc
sub
in
mov
movb
test
in
add
pop
in
xchg
cwtl
push
mov
sub
scas
subl
fimull
and
cli
xchg
out
das
sub
fwait
clc
pop
push
aam
and
ss
scas
rorb
ljmp
add
mov
cmpsb
inc
sti
add
jno
mov
adc
adc
push
aad
xor
xchg
push
pop
aas
icebp
push
es
das
inc
cmp
dec
mov
inc
sub
scas
or
out
and
pop
pop
les
adc
imul
imul
jp
xchg
push
lret
lods
dec
pop
sbb
es
data16
cmpsl
xchg
je
nop
clc
lcall
bndldx
add
hlt
or
xchg
rcr
pop
sbb
daa
adc
and
jmp
fcmove
mov
jp
hlt
xor
mov
lahf
shrb
and
sub
leave
dec
xchg
jl
inc
push
fnstcw
nop
andps
out
clc
mov
cltd
inc
dec
loopne
adc
push
xchg
aam
in
lahf
sbb
nop
cmpsl
iret
mov
sub
inc
dec
xchg
stos
xor
cmpb
dec
mov
icebp
cmp
imul
mov
xlat
scas
in
jne
add
cmp
mov
and
mov
fcoms
in
scas
push
jnp
daa
outsl
cmp
jmp
mov
std
pusha
sbb
rcrb
and
outsl
mov
pushf
aad
and
outsb
aas
fdivrs
repz
imulb
mov
push
data16
pop
pop
mov
movsb
pop
xchg
dec
cmc
mov
cmpsb
test
and
xchg
fdivrp
or
jns
fisubrs
mov
add
xchg
jae
or
lcall
cmp
test
addr16
inc
mov
add
cli
push
lret
pop
leave
shrb
add
sti
dec
lret
adc
cmpsb
dec
add
inc
push
popf
mov
jmp
in
add
mov
lds
mov
outsl
add
and
mov
xor
jae
pop
inc
incb
inc
xchg
scas
stos
out
push
pop
idivb
shll
imulb
repnz
pop
cwtl
leave
push
dec
arpl
gs
and
sti
call
pop
pushf
aas
sub
shlb
mov
mov
fnsave
sti
shr
rorb
fwait
jno
inc
daa
pop
dec
lock
loopne
pop
mov
mov
lods
sbb
les
test
mov
frstor
mov
mov
mov
mov
mov
aaa
inc
cmp
mov
test
enter
xchg
cmp
adc
out
and
aad
push
dec
cltd
getsec
aas
xchg
pushf
jl
outsb
sub
nop
popa
cmc
push
cltd
and
jb
movsb
lods
push
xor
mov
mov
in
pop
dec
inc
add
add
push
int3
inc
jnp
orl
or
push
imulb
ds
push
jne
add
mov
lds
ret
sbb
pop
aad
sub
call
shrb
mull
mov
and
mov
iret
data16
mov
mov
pop
push
jo
pushf
pop
pop
jbe
cmp
jge
mov
add
fdivr
xchg
lret
test
bound
arpl
add
xor
fstp
repnz
cmp
aam
cwtl
mov
inc
pop
js
icebp
push
ret
and
movsl
adc
push
sub
push
lret
dec
mov
call
and
aas
inc
jnp
push
push
fidivl
or
inc
mov
xorl
in
shll
scas
jl
xlat
push
add
or
mov
sahf
pop
jb
and
addr16
inc
push
sub
or
stos
lock
scas
push
icebp
stos
jb
call
into
mov
xlat
sti
xchg
sbb
fs
xchg
mov
out
cmp
call
cs
ss
imul
aas
dec
das
das
cmp
clc
aas
mov
or
fndisi(8087
out
pop
loopne
ss
test
sub
pop
add
cs
aam
pop
pop
jne
rolb
lock
adc
fsubl
loopne
sbb
in
pop
pushf
arpl
jmp
mov
loope
shrb
jmp
cmp
repnz
adc
sbb
xchg
mov
push
test
jmp
ljmp
pop
jo
cmpsl
and
data16
enterw
mov
mov
add
push
add
testb
push
std
enter
outsl
fists
dec
mov
sub
xlat
mov
aaa
add
movsl
or
aaa
mov
loop
mov
scas
je
sub
scas
dec
inc
lret
xor
add
push
cli
out
pop
loopne
jb
inc
mov
stos
cmpsb
mov
cmc
jecxz
mov
jo
xchg
dec
into
scas
mov
dec
mov
adc
mov
pop
xor
jns
and
or
fs
into
dec
popf
and
repnz
pop
std
out
int3
subb
lret
xor
dec
cmovnp
test
shlb
dec
pop
push
pop
mov
les
dec
addr16
addr16
cmp
arpl
cmc
divb
lret
data16
sti
test
mov
mov
or
enter
ds
insl
cmp
push
jns
add
pop
je
or
cmp
mov
and
inc
xor
sti
fimuls
fstps
xchg
push
mov
enter
and
fcomps
and
sti
mov
js
stos
ja
into
mov
mov
std
stos
outsl
cmpsl
into
push
adc
shll
sti
xor
xchg
clc
mov
jb
hlt
outsb
and
cwtd
fdivr
xchg
notl
sbb
fucomi
jne
fs
jne
jae
mov
rcrb
jmp
js
cmp
shl
mov
imul
jb
xchg
mov
cmpsl
dec
outsl
add
cld
into
sahf
inc
icebp
mov
inc
cmpl
icebp
in
add
cmp
mov
sti
fdivl
incl
js
in
sarl
movsl
adc
mov
adc
inc
jmp
scas
dec
mov
out
xchg
jns
xchg
lret
sbb
pusha
lods
cmc
movsl
pop
loopne
and
xchg
push
sbb
sahf
cld
aas
push
movsb
mov
cltd
pop
stc
dec
imul
pusha
or
loope
out
pop
dec
test
rcrl
in
in
gs
fisubrs
negl
add
xchg
in
push
xor
hlt
cwtl
add
aad
add
int3
add
into
insl
outsb
repnz
das
xchg
sub
xchg
inc
mov
cmp
mov
jp
push
jo
jmp
sbb
aas
data16
fsub
xor
jle,pt
cwtl
jb
or
call
jg
mov
lcall
sub
and
adc
fstl
mov
push
inc
les
and
cmpsl
aaa
jmp
mov
sub
and
xor
icebp
out
lret
imul
dec
jp
lahf
sahf
adc
lcall
add
outsb
jnp
mov
pop
inc
push
insl
lret
outsl
cmp
in
lahf
pop
and
mov
cmp
cmc
hlt
and
inc
pop
sub
jae
inc
xchg
or
enter
rcll
lods
mov
movsb
mov
lods
fwait
popa
sub
mov
cwtl
stos
inc
jmp
inc
inc
mov
add
mov
test
pop
fwait
cmp
or
daa
repnz
sti
jle
gs
fldl
adc
std
ljmp
mov
pusha
pop
enter
xor
je
add
repz
and
jg
dec
cwtl
jp
mov
jb
repnz
loop
sahf
push
inc
lcall
mov
sub
cwtl
outsl
mov
popa
xchg
push
jge
stc
add
in
push
shlb
jo
mov
cmpsb
sbb
pop
add
ficoml
fwait
ljmp
outsl
jmp
and
jecxz
outsb
and
push
ljmp
xchg
fwait
pusha
inc
push
xor
pusha
xor
dec
or
out
fdivrl
mov
mov
stos
mov
pop
scas
addr16
or
outsb
jecxz
pop
and
cwtl
mov
xor
movsl
push
mov
es
testb
jne
jle
pop
jns
daa
les
or
rorb
lods
add
push
jp
add
iret
add
push
lods
fisubrl
fs
repnz
cli
jl
jecxz
mov
mov
ljmp
cmpsl
fmulp
xor
or
jge
jbe
inc
inc
scas
or
mov
or
outsb
pushf
cmc
push
cmp
mov
jns
push
cmpb
add
ss
rcll
sarl
push
aad
dec
lahf
call
mov
push
inc
mov
imul
pusha
adc
shl
pushf
scas
es
out
push
xchg
cmp
pop
divl
push
jmp
in
inc
arpl
movsb
sub
out
jmp
sbb
sbb
inc
jmp
mov
add
push
sbb
cli
or
mov
jp
repnz
xchg
mov
adcb
mov
repz
push
cs
fisubrs
xchg
mov
mov
jne
cmpsb
cltd
xchg
sub
dec
push
or
pusha
pop
mov
test
lret
std
add
mov
movsl
loope
or
add
sub
add
mov
aad
sub
sbb
sub
jecxz
dec
lods
cmpsb
xor
jnp
sbb
stc
icebp
call
test
out
ficompl
lods
mov
mov
mov
inc
fadd
insl
out
mov
call
pop
out
sub
rolb
and
cmp
sub
lcall
bound
pop
rolb
and
pop
je
cwtl
and
push
push
mov
or
ljmp
pop
inc
push
pop
or
stc
lods
lcall
and
mov
into
mov
mov
and
xchg
out
jg
mov
inc
mov
popa
cld
mov
xchg
es
mov
adcb
xor
sar
adc
rorl
jge
aad
popa
pop
xor
ret
aad
xchg
inc
and
into
or
and
sub
das
out
xchg
xor
int
iret
out
addl
ss
dec
push
and
stos
and
lcall
aas
lret
lods
das
jl
pop
push
xor
push
ficoml
test
or
rol
adcl
cli
loopne
or
xchg
insb
scas
test
sbb
dec
or
in
pop
mov
cli
ret
pop
dec
fs
fsubs
inc
cmp
push
push
adc
pop
cmc
and
add
lods
mov
sbb
mov
pop
cwtl
push
mov
sub
xor
aaa
xchg
push
dec
dec
cmp
lods
out
add
scas
xchg
xchg
popf
jmp
popf
in
pop
test
mov
add
nop
or
sar
adc
pop
iret
lahf
test
inc
push
add
loope
in
mov
adc
xlat
ds
jns
aas
jae
adc
cmc
int3
xlat
fisubrs
fwait
pop
push
add
sarb
lock
out
sub
stos
sub
push
adc
insb
dec
out
inc
xor
sahf
aad
popf
imulb
icebp
lret
sbb
test
cmpsl
dec
mov
pushf
aad
lods
jnp
jl
add
aad
fldcw
dec
cmp
pop
shrb
mov
pop
sub
lock
dec
mov
popf
sarl
mov
sbb
pop
dec
and
addr16
jmp
pop
scas
cwtl
hlt
push
sbb
pop
sub
in
outsl
test
test
cltd
in
mov
pop
mov
dec
xor
insl
shl
adc
and
mov
sbb
test
xorb
sbb
test
push
xchg
sbb
and
into
pop
mov
push
cmp
int
and
inc
adc
add
sti
in
mov
and
pop
pop
loop
imul
jmp
movsl
jno
sub
xor
andb
fidivs
fisubs
cmp
movsl
icebp
sbb
cmp
or
arpl
sbb
in
inc
push
mov
ds
mov
mov
inc
push
dec
sti
push
xchg
shlb
pushf
dec
bound
pop
and
mov
stos
sub
vmovdqa
push
and
test
shll
test
movsb
mov
pushf
daa
adc
add
sbb
ret
mov
outsl
repz
dec
repz
inc
gs
xlat
das
decb
jmp
jecxz
fs
fs
ds
jl
idivl
out
jl
imul
daa
jg
incl
lret
sarb
or
dec
pushw
mov
sub
sbb
pop
int
adc
shrl
adc
adc
fwait
es
or
test
loopne
fistpl
push
dec
popa
jle
cmp
or
or
sub
adc
outsl
or
adc
jnp
addb
dec
xlat
popf
mov
popa
lods
mov
mov
fcomi
sqrtps
xchg
push
sbb
jge
es
mov
sub
push
sbb
inc
pop
mov
push
cld
adc
fimull
andl
sbb
dec
jmp
pop
jl
cmp
xchg
popf
test
or
adc
js
xchg
out
scas
testl
sub
adc
xor
adc
add
inc
and
sarl
dec
das
mov
push
lret
fisttps
mov
dec
ds
mov
jae
cmp
cli
adc
add
rcll
xchg
lahf
jns
mov
dec
insl
fwait
cwtl
mov
push
xchg
rcrl
in
cltd
shrl
vmread
jo
xor
lods
sub
dec
clc
push
cmp
fidivs
xchg
nop
aaa
jae
ds
xor
aaa
push
lret
loope
orb
stos
inc
dec
mov
into
pop
mov
scas
add
sti
mov
adc
adc
int
pop
mov
or
jbe
xchg
ds
push
leave
dec
ret
iret
adc
dec
pop
dec
fidivs
or
or
mov
ret
and
mov
sub
mov
xchg
inc
popf
jb
pop
mov
or
jno
rcrb
xchg
mov
mov
cmc
adc
gs
mov
cs
xchg
push
cmp
add
push
imul
shl
stos
loope
xchg
mov
jmp
pushf
scas
pop
dec
std
int
xor
and
jns
cwtl
cs
mov
ja
add
fsub
flds
push
xchg
roll
jge
push
push
and
adc
in
lds
sub
addr16
hlt
das
enter
xchg
dec
mov
xchg
dec
and
leave
mov
add
cmp
scas
out
in
movsl
xor
lea
insl
fdivrl
test
push
xchg
fisttpl
lret
test
mov
inc
mov
sbbl
pop
enter
jb
adc
repz
fistl
push
push
incl
movsb
sub
nop
and
push
outsl
lret
mov
cmc
jae
outsl
int
fucomi
sub
hlt
sub
test
lcall
sub
jp
cmp
push
sub
rcrl
inc
cmpsl
pop
bnd
loop
iret
xor
ss
push
push
es
adc
mov
fisubl
inc
insl
jns
pop
or
repnz
imul
mov
mov
and
jge
lods
das
push
movsb
or
mov
test
ja
cmp
out
mov
jl
lret
sbb
leave
push
push
xor
push
push
enter
outsl
or
and
roll
jge
rcr
repz
jmp
cwtl
gs
sbb
mov
cmc
push
pop
imul
repnz
xchg
mov
sbb
adc
dec
nop
fimuls
fcompl
jae
mov
nop
mov
sahf
call
jge
pop
inc
sbb
sub
cmpsb
stc
outsl
enter
xchg
out
xchg
inc
or
in
mov
push
adc
mov
mov
movsl
test
data16
xchg
xchg
xchg
test
dec
mov
lods
add
push
xor
xor
leave
adc
call
sbb
outsl
sub
inc
mov
stos
in
bound
push
scas
dec
stos
mov
fsubrs
push
repz
xchg
stos
iret
jb
ficoms
jmp
push
or
jp
jns
stos
lock
jecxz
aaa
jmp
push
push
sbb
adc
jle
mov
add
push
leave
cmp
mov
insb
pop
jecxz
mov
cmp
mov
mov
add
xor
pop
dec
mov
ljmp
hlt
into
and
popa
pop
std
dec
jno
in
add
sub
sub
fildl
sbbl
jmp
arpl
xor
cs
hlt
fisubl
pop
ss
mov
cwtl
cltd
and
sub
jge
std
js
adc
jle
lahf
jmp
fcmove
mov
push
les
sar
inc
js
in
out
shr
aad
cmp
stos
push
xor
push
jbe
cmp
sub
iret
or
nop
ret
or
cmp
mov
push
dec
jo
or
out
mov
sbb
pop
mov
fsts
jge
lods
out
test
and
jo
jp
mov
outsl
cmp
fstpl
repnz
adc
xchg
cs
pop
xchg
js
mov
mov
shrb
and
into
js
cmp
into
sub
mov
ret
leave
cwtl
jle
out
adc
xchg
xlat
adc
lret
cli
imul
mov
hlt
mov
adc
mov
pop
sar
je
pushf
inc
mov
icebp
stos
mov
imul
imul
shrb
dec
in
in
icebp
push
into
jnp
jae
inc
testb
mov
cmp
outsb
sub
xlat
les
dec
js
mov
popa
dec
inc
or
nop
add
and
adc
stos
jge
addb
hlt
loopne
inc
fistl
rdtsc
addl
lds
aaa
jle
pop
imul
int3
iret
xor
cmpsb
jo
jno
mov
shlb
cmp
push
ret
loope
dec
loopne
pop
orl
ror
xchg
imul
out
enter
dec
add
add
ret
jo
inc
mov
and
pop
and
xor
or
mov
pushf
xchg
fmull
cmp
sar
jmp
mov
push
in
pop
mov
ret
jle
in
ret
jp
add
adcl
push
decl
shl
daa
scas
mov
ficoml
mov
repz
pop
loope
lcall
test
insb
loop
or
mov
xchg
lcall
loop
rcrl
faddl
sub
orl
adc
loopne
jnp
push
or
ret
dec
add
cltd
inc
inc
leave
fldcw
pop
out
int3
shlb
adc
xlat
xchg
out
loop
faddp
imul
leave
adc
fstl
in
int3
mov
add
mov
sub
shll
sub
sub
lea
enter
fsub
int3
mov
and
push
mov
roll
sbb
add
aad
sti
and
pop
jne
sub
je
push
jp
jb
movsl
jno
dec
or
aas
aad
pop
mov
xchg
fisubs
bound
adc
ror
xor
or
fimull
outsl
xchg
mov
add
sbbl
leave
sbb
jecxz
psrad
or
loopnew
enter
inc
in
xchg
incb
xchg
js
adc
xorl
and
notb
push
lods
jmp
xor
push
ret
movsb
cmpsl
pop
out
jecxz
hlt
movsb
ret
cmpsb
add
lahf
imul
push
inc
mov
fisubrs
mov
push
cmp
sbb
inc
daa
icebp
add
clc
cmovo
repz
arpl
xlat
aad
push
cmp
mov
mov
insb
ficomps
cwtl
or
aas
push
push
jmp
test
push
sub
popa
sub
jne
imul
and
mov
icebp
cmp
jecxz
push
xchg
inc
stos
xchg
dec
inc
and
or
sarb
loopne
je
out
in
lahf
mov
and
ljmp
jecxz
mov
fisttpl
add
sub
insb
movb
or
sbb
and
insb
das
mov
pop
xchg
outsb
fistl
outsb
fidivrs
mov
push
adc
dec
es
or
mov
pop
xchg
push
popf
xorb
mov
pop
hlt
push
repz
js
dec
sbb
add
adc
jnp
jp
adc
out
cmp
out
or
lret
cmp
pop
pop
sub
ja
dec
test
mov
jbe
cmp
mov
mov
push
mov
mov
dec
pop
mov
xor
or
ja
jecxz
in
cmp
push
repz
stc
shl
in
movsb
inc
daa
xor
icebp
pop
fnsave
sub
pop
push
lcall
and
lds
out
aas
xchg
jns
and
cmpsb
mov
push
enter
div
sub
inc
pop
divb
das
sub
mov
dec
add
push
inc
fmull
ljmp
aad
push
adc
movsl
jg
jle
xor
in
mov
lahf
or
cwtl
and
push
or
push
dec
popf
pusha
pop
inc
fadds
xor
sbb
inc
mov
sahf
pop
dec
je
loopne
into
sub
push
xchg
jns
fisubl
lret
lods
loop
mov
sbb
inc
mov
xor
fmul
loop
dec
inc
ljmp
mov
jo
aas
cmp
setp
cltd
test
lret
mov
cwtl
int
lret
push
sahf
repz
xor
int
dec
rorl
decl
aam
bound
idivb
stc
sti
adc
mov
in
jno
lds
sbbl
add
test
cwtl
jl
xor
enter
xchg
pop
inc
in
hlt
in
call
mov
out
ret
adc
lds
aad
jno
or
aam
xor
mov
sti
movsl
outsb
adc
mov
add
jmp
aaa
repnz
mov
imul
pop
loop
add
cmp
les
xchg
test
mov
sarl
aam
outsb
push
cmp
pop
dec
xchg
fisubrl
iret
and
scas
das
jl
mov
sarb
fistps
int
scas
lods
fadd
test
enter
push
ss
inc
and
push
test
cltd
or
add
ljmp
in
movsl
sahf
dec
jle
mov
xchg
lret
lret
jge
ds
pop
jp
out
fsts
inc
xchg
mov
sub
jmp
adc
out
pinsrw
jg
sbb
inc
rep
and
inc
repz
xchg
jmp
outsb
cmc
hlt
lahf
test
xor
mov
lods
hlt
cmc
flds
stc
pop
outsb
pop
lret
daa
popf
mov
jge
cs
xchg
fstl
and
jl
jl
add
jae
das
dec
in
push
loope
fnstsw
sub
push
adc
mov
mov
cli
push
xchg
stos
push
cmp
xchg
psllw
rorb
jecxz
pop
mov
lret
mov
les
pop
or
and
test
sub
sbb
ffree
out
dec
pusha
sbb
stc
push
ds
xor
mov
ljmp
xchg
mov
leave
sbb
mov
pop
jbe
xchg
adc
jecxz
xchg
stos
ret
movb
les
and
loope
and
inc
xchg
and
and
int3
adc
add
mov
sbb
mov
add
cmp
and
inc
orl
push
dec
jl
xlat
or
jge
push
mov
scas
loop
adc
push
ret
lcall
in
lret
ds
and
xor
movsl
loopne
xor
jmp
test
xor
lock
xor
sub
outsb
int
test
into
dec
mov
cmp
xchg
scas
xchg
adc
push
mov
sub
sbb
or
mov
test
pop
jmp
or
mov
jmp
rep
clc
push
es
inc
pop
inc
lcall
in
cmp
inc
and
pop
popa
mov
push
cwtl
pop
test
dec
mov
cmpsb
xor
in
bound
mov
xchg
pop
psrld
jecxz
mov
roll
mov
je
lock
adc
push
leave
pop
decl
and
xchg
xor
stos
loop
mov
pushf
push
xchg
mov
dec
cld
cmp
ret
cmp
push
cmp
pop
add
cli
inc
or
mov
dec
insl
mov
mov
repnz
clc
hlt
mov
lods
xor
add
mov
int3
dec
jae
push
add
xchg
insb
aaa
jno
mov
fnstcw
sarl
pop
lahf
push
xchg
addr16
and
pop
fsubrs
mov
sbb
mov
mov
popl
int3
adc
pop
inc
outsl
outsl
stc
mov
sub
adc
push
inc
mov
aas
fs
mov
scas
es
sbb
sub
pushf
cld
push
iret
xlat
stos
pop
ljmp
adc
inc
push
popa
xor
inc
rcl
pop
jne
cmpsb
pop
in
mov
push
mov
or
clc
xchg
inc
pushf
jge
mov
lcall
dec
jecxz
push
adc
push
cltd
add
jae
or
or
pusha
jmp
ds
adc
cli
push
cmp
or
and
pop
jg
mov
in
xchg
jmp
shl
jno
push
pop
add
hlt
and
xlat
xchg
xor
jmp
andb
das
nop
cltd
cmp
jns
outsb
jecxz
mov
movsb
cmp
xchg
data16
insl
shll
mov
inc
test
mov
or
out
addl
add
idivb
fsubrs
mov
out
cmpsl
add
test
xchg
add
mov
mov
int3
lret
jno
jae
inc
xchg
ret
dec
jge
jmp
popa
outsb
pop
xchg
pop
in
jne
aaa
xchg
cmp
dec
clc
push
lret
dec
daa
inc
jnp
leave
jnp
mov
ljmp
mov
xchg
pop
mov
jmp
out
adc
mov
in
cmc
inc
punpckhdq
shlb
or
xorl
imul
mov
push
jno
idivb
mov
xor
mov
bound
out
sub
pop
xor
mov
div
pop
les
call
addr16
inc
addr16
mov
dec
sbb
fcmovbe
pop
repnz
sbb
aam
push
pusha
push
insb
popa
lret
and
and
xor
push
mov
jp
xor
pop
xlat
sbb
loopne
in
sub
fstpt
mov
shlw
lret
sbb
mov
xchg
adc
push
std
cmp
sti
ret
cltd
cmpsb
mov
hlt
mov
mov
mov
pop
test
xor
ret
lods
hlt
mov
xchg
scas
mov
lea
sbb
addb
adc
andb
movsl
aaa
sub
dec
nop
adc
push
outsl
call
cmc
pop
dec
or
add
repz
jnp
pop
pop
test
fwait
sbb
fcompl
and
jg
rcll
int
addb
shl
mov
outsb
cmpsb
jb
jle
push
xchg
and
xchg
aaa
fsubs
jecxz
ss
das
pop
mov
insb
sbb
jb
lcall
adc
cmpsb
adcb
shll
xor
add
dec
imul
push
push
sub
pop
xlat
imul
pushf
loopne
ret
jbe
push
add
stos
fists
test
add
mov
std
pop
stos
int
out
cmp
xchg
mulb
cmp
add
and
popa
imul
sub
pop
cmp
out
sbb
sbb
jge
stc
add
and
mov
lahf
arpl
inc
ds
dec
orl
xchg
xchg
lcall
or
lods
mov
mov
xchg
xchg
jb
jg
cmpsl
pop
xor
rclb
rorb
jnp
test
xor
ja
mov
xor
cmp
dec
or
addr16
dec
mov
les
stos
jo
or
ds
jp
cld
lahf
xchg
int
cltd
pop
scas
or
ret
sub
imul
sub
add
fistpll
or
or
and
inc
jecxz
inc
popa
pop
incb
sub
dec
jbe
or
mov
rcrb
xor
sub
cld
mov
cmp
ljmp
popf
fnstenv
shlb
cmpsl
pop
xor
add
adc
loopne
pop
imul
adc
jecxz
add
js
ret
sbb
cmp
mov
dec
jle
jno
sub
icebp
nop
js
ret
sbb
in
push
hlt
pop
mov
inc
sub
mov
push
repz
sahf
pop
out
and
sarb
sub
les
inc
mov
cs
sbbb
mov
iret
jmp
rcl
sbb
pop
test
push
scas
aam
pop
push
xchg
xchg
aas
mov
mov
adc
pop
out
fcoms
jg
in
cwtl
fucomip
negb
aaa
lret
popf
in
jle
or
add
das
jmp
out
into
mov
mov
xor
sub
aam
sub
pop
push
movsl
add
nop
or
xlat
loopne
add
sti
rclb
stos
adcb
cmp
int
les
ljmp
inc
pop
mov
sub
aam
pop
push
call
cmp
fs
mov
cmp
and
add
cmovbe
fwait
outsl
mov
mov
mov
mov
hlt
sub
add
xor
mov
push
rcl
cvtdq2ps
and
and
outsb
or
cmp
movsl
inc
sub
pop
inc
stos
push
dec
test
add
leave
push
je
sahf
mov
outsl
and
mov
fwait
ja
nop
cmp
addr16
pop
xchg
mov
loope
xor
xchg
cmp
jge
mov
adcb
daa
hlt
adc
sub
jo
popf
push
cmp
jge
iret
mov
add
pop
xor
fisubrl
dec
dec
fistps
vpshaq
lret
cmpsl
dec
pop
es
call
mov
mov
adc
dec
mov
mov
pop
cmp
outsb
lcall
in
cmpsb
nop
imul
fldl
sti
sub
repnz
push
mov
clc
jmp
shll
mov
jle
dec
xor
stc
mov
inc
insl
stc
cmp
and
jbe
pop
fadd
sbb
roll
pushf
pop
fs
or
sub
dec
xchg
sbb
scas
xor
lahf
and
test
ret
dec
lahf
cltd
jmp
roll
ja
ds
lcall
repz
mov
popf
mov
or
daa
call
fnsave
gs
push
jg
push
test
push
aad
in
test
xchg
fwait
jbe
push
cmp
push
add
fbld
sub
imul
and
lods
lds
push
out
mov
or
xchg
cwtl
push
inc
or
testb
jecxz
lods
or
jle
add
or
adc
xor
int3
mulb
pop
mov
mov
test
cmpsl
pop
cwtl
jl
fdivrl
mov
mov
or
push
mov
cmp
jbe
out
pop
push
mov
fcompl
mov
pop
adc
add
add
inc
pushf
cli
sub
mov
and
popf
call
xor
lret
push
push
sbb
push
pop
push
jnp
into
scas
sbb
sub
sbb
sub
mov
fwait
cmp
std
mov
stc
cmp
or
xlat
loopne
outsl
mov
fcompl
sub
test
or
and
xlat
jne
lahf
in
and
ret
ret
mov
lcall
dec
stc
fldenv
sub
sbb
es
jbe
pop
push
divb
mov
push
popl
ja
dec
add
xchg
lret
mov
mov
iret
cltd
pop
mov
or
jb
push
add
jae
pop
mov
adc
adc
sarb
cmp
sub
lret
cli
rcl
xchg
repnz
xchg
sti
jne
loopne
sub
cmp
fstl
mov
iret
xlat
and
je
and
scas
and
lret
mov
adc
jo
insl
insl
repz
shll
mov
xchg
je
in
jne
push
add
outsl
mov
mov
aam
xchg
sahf
fcompl
iret
xchg
and
lret
xlat
scas
lea
mov
inc
jno
pop
pushf
js
or
push
sbb
inc
sti
icebp
pushf
cli
outsl
rcll
mov
mov
out
jge
gs
add
iret
loop
push
cmp
inc
mov
ljmp
leave
mov
pop
pop
fisubs
pop
adcb
cmp
in
mov
fmul
imul
int
in
cs
jo
pop
xor
mov
or
mov
and
pop
and
jo
sbb
out
and
shlb
push
push
adc
insb
jg
add
loopne
in
adc
mov
or
or
out
les
dec
divb
mov
into
sahf
inc
or
or
fdivs
inc
cltd
mov
pop
xchg
sub
jle
jb
fidivrl
dec
sbb
insb
testl
mov
xchg
mov
push
cld
dec
cli
ja
xor
jl
cmp
int3
or
roll
xchg
sbb
pop
fs
cs
aad
outsl
sarl
lret
push
jecxz
test
movsb
xchg
mov
lods
mov
add
mulb
mov
imul
push
adc
imul
pushaw
rolb
jb
jmp
push
jbe
cmp
nop
push
push
pop
out
adc
xchg
jmp
lcall
pop
call
inc
lret
sub
mov
stos
mov
lret
jl
adc
dec
jmp
sti
out
pop
int
into
sbb
mov
push
ja
push
es
jne
mov
mov
hlt
lea
jae
cmp
adc
push
subb
and
jbe
mov
cmp
out
roll
movsb
lods
push
cli
lods
sbb
or
sub
xchg
cmp
fidivrs
mov
lds
cmp
sti
fwait
cwtl
outsl
stos
js
mov
sbb
in
shrl
cmp
push
jne
or
add
jo
push
fcmovnbe
pusha
sbb
add
sbb
lods
lods
and
scas
add
or
jae
pusha
loop
ljmp
sbb
repz
scas
xchg
and
inc
xor
mov
and
in
xchg
xor
cmp
mov
cmp
jge
mov
dec
or
jae
xchg
leave
dec
xor
pop
hlt
xchg
nop
push
dec
stos
inc
pop
sbb
add
enter
xchg
sub
pop
dec
or
pop
int
sti
cld
dec
out
xchg
xorb
fsubrl
cmp
in
inc
mov
xchg
adc
push
mov
mov
mov
adc
jns
aaa
adc
mov
in
outsl
cmpsl
incl
iret
ja
adc
sbb
dec
inc
mov
sbb
repz
arpl
mov
out
ds
jle
stc
mov
add
lea
mov
ss
inc
xchg
bound
and
add
sub
lahf
cmpsl
jbe
push
inc
jae
jmp
scas
cwtl
pop
jecxz
jmp
xor
push
xchg
mov
and
xlat
sub
lods
jg
push
xor
data16
sbb
mov
dec
dec
movsl
sti
jno
push
xchg
jmp
mov
loope
or
aam
xlat
aaa
pusha
fst
aas
xor
jl
cmpsb
stos
pop
ss
fisttpl
scas
dec
ds
sar
add
push
lret
dec
adc
dec
add
cmp
mov
cs
insb
repnz
popf
mov
pop
push
lds
mov
mov
orl
add
push
push
imul
lods
aaa
std
mov
lret
push
mov
shrb
add
xchg
push
mov
pop
adc
pop
add
imul
mov
push
push
aaa
pop
jo
adc
inc
aaa
in
cmpsl
pop
push
and
scas
daa
sbbb
jne
push
and
jbe
insl
sub
data16
out
or
mov
call
sbb
aas
lds
inc
push
dec
mov
sbb
jo
add
cmpsb
mov
repz
mov
jns
subb
test
and
popf
in
cmp
cli
les
and
adc
or
jecxz
adc
test
lcall
jns
pushf
xor
fwait
push
and
jl
pop
mov
mov
mov
fiaddl
and
test
push
test
push
inc
pop
lock
call
inc
icebp
inc
orb
pusha
pushf
sub
dec
lcall
aas
jmp
sbb
sbb
pop
and
xor
cmp
out
cmp
test
mov
xchg
push
xchg
push
mov
push
pop
hlt
pop
bound
sbb
insl
stos
punpckhdq
inc
ret
xor
and
inc
cmp
inc
add
jne
in
shlb
pusha
mov
cmp
data16
push
jnp
lods
inc
fcomps
mov
and
mov
dec
call
mov
or
pop
and
std
cmp
or
xorb
cmp
in
dec
push
xor
jbe
cld
mov
and
lret
pop
sbb
sbb
mov
add
testb
scas
cmp
xor
jae
gs
and
cmp
rcr
inc
sub
mov
sbb
jmp
mov
xchg
mov
and
xor
xchg
cmp
scas
js
das
mov
jmp
dec
or
rol
std
andb
mov
jge
sarl
aad
stos
mov
mov
add
mov
daa
lods
adc
sbbl
dec
push
shl
cmc
insb
or
nop
hlt
aas
mov
clc
outsl
dec
pop
mov
mov
or
bound
aam
jmp
cmc
mov
ret
mull
mov
or
in
xor
adc
cmpsl
dec
add
fcoml
movsb
xor
div
in
sub
dec
jmp
test
mov
out
xchg
daa
dec
pop
stos
xor
iret
lret
dec
int3
test
orl
shrl
out
add
jne
jmp
mov
dec
pop
adc
xor
mov
add
int3
xor
cs
xor
pop
dec
bound
test
xchg
adc
mov
test
jmp
push
cmp
sbbb
in
sbb
add
stc
inc
js
cld
sub
cmp
enter
cmp
pop
push
sub
ss
push
push
testl
fistpll
imul
push
sbb
jmp
mov
andl
lock
and
hlt
ljmp
cld
icebp
mov
mov
jae
fstps
xchg
in
dec
sub
xchg
sahf
push
fimuls
mov
ja
pop
lds
mov
adc
fnstenv
sbb
push
aam
add
movsb
push
xchg
sbb
ss
or
adc
inc
push
pop
ja
aaa
inc
xor
push
std
and
mov
stos
mov
flds
xor
mov
sbb
push
lcall
idivl
insb
jmp
repnz
leave
cs
test
fisttps
inc
jmp
pop
push
xchg
mov
sbb
lsl
and
lahf
std
sbb
cli
sbb
push
mov
dec
sbb
scas
push
or
mov
scas
jns
adc
out
pop
pop
jp
arpl
mov
aaa
ljmp
outsl
or
fidivrs
rorl
jmp
dec
out
testb
sub
mov
frstpm(287
rolb
in
ja
xchg
aaa
rcll
push
jge
mov
pusha
jae
dec
sub
xor
ljmp
mov
sbb
mov
into
int3
dec
mov
push
dec
xor
ss
loope
call
fwait
ret
push
fisubs
fcoml
fwait
rol
and
fwait
ret
xlat
jb
loop
repnz
ja
dec
out
mov
movsb
jmp
insb
lea
adc
nopl
es
nop
adc
outsl
insb
cltd
mov
mov
mov
jae
icebp
sbb
mov
sti
orl
dec
rcll
inc
popf
rcl
pop
subb
aam
xor
out
adc
out
fcom
lret
push
cmp
cmp
and
pop
std
mov
shll
repnz
pushf
cmp
jmp
out
xor
cwtl
jg
test
adc
sub
in
or
mov
enter
lods
and
adc
inc
rolb
daa
ror
adc
cmp
aaa
mov
fmull
cld
push
xor
cmp
xchg
mov
fs
loop
andb
ljmp
inc
movsb
push
jge
rcl
je
fidivl
sub
add
mov
mov
or
dec
jecxz
cmpsb
addr16
mov
dec
pusha
mov
ror
orl
xlat
fmuls
iret
mov
and
leave
inc
inc
add
push
cmp
sub
out
xchg
dec
xchg
mov
or
dec
xchg
insl
in
cltd
push
fldenv
fst
fstpl
inc
filds
and
or
sti
lahf
adc
push
cmp
jp
in
daa
pop
dec
add
in
je
je
lret
fwait
ds
xchg
push
mov
cltd
dec
cli
mov
in
cltd
add
sub
cmp
adc
xlat
xchg
movsb
jl
jae
aam
mov
fwait
adc
popf
xor
divl
cwtl
add
mov
mov
jge
out
das
xor
mov
cmp
pop
xchg
movsb
ds
adc
cmpsb
jno
arpl
jmp
aaa
and
shl
inc
daa
and
call
cli
sbb
jo
mov
xor
outsl
adc
mov
out
cmp
sbb
shrb
shll
out
in
push
cmp
adc
pop
mov
sti
mov
xchg
pop
mov
and
insl
stos
lods
pop
not
mov
jbe
fiadds
andl
adc
and
add
mov
adc
loope
or
out
std
clc
inc
xor
push
push
fadds
add
jbe
roll
add
adc
fsubs
pushf
sbbb
mov
aas
fdiv
cld
dec
cli
sbb
mov
andb
pop
neg
in
out
mov
jnp
mov
and
ret
xor
ficompl
cli
dec
mov
or
mov
pusha
pop
dec
add
out
cmp
scas
std
in
add
add
xchg
and
loope
mov
inc
xlat
sti
or
lcall
rolb
pop
jbe
out
pusha
adc
mov
mov
call
mov
outsb
xor
in
je
stos
mov
push
mov
lret
xchg
sub
and
bound
enter
inc
rcll
test
pop
sub
xchg
push
and
or
mov
xchg
push
mov
rolb
xor
leave
mov
jmp
mov
call
adc
lea
pop
es
mov
pusha
clc
or
sub
outsb
out
and
fbstp
or
adc
iret
pop
je
idivb
pop
xor
loope
aas
jmp
out
cmovns
xor
fistl
mov
test
push
popf
xor
and
inc
stos
pushf
and
les
mov
fstl
jns
aad
or
lods
repnz
push
aaa
shrb
push
insl
xlat
idivb
pop
pop
pop
jnp
dec
xlat
or
scas
out
adc
jg
or
outsb
xor
addr16
mov
out
stc
add
and
add
stos
mov
pop
movsb
out
adcl
into
push
push
test
push
jnp
cmp
xor
cmpb
or
pop
ljmp
add
sbb
ja
add
jecxz
adc
ljmp
push
xor
inc
fs
arpl
dec
or
jbe
sub
mov
and
jne
fwait
sti
popa
cmc
jp
cmpsl
pop
or
or
std
cmp
xchg
mov
outsb
lods
sbb
cmp
outsl
sbb
pop
cmpsl
test
nop
out
mov
mov
std
es
cmp
mov
cmp
insb
xchg
loopne
xchg
push
xchg
pop
xchg
fwait
das
int
mov
aad
ret
or
add
out
sbb
push
jg
mov
int
sti
repz
insb
mov
repz
pandn
xlat
ficoms
ret
mov
mov
jmp
shl
mov
mov
aad
fmul
fmul
xor
in
xchg
mov
push
cmp
sub
xchg
pop
sbb
sub
push
fldt
adc
mov
or
and
rcrl
testb
push
fsubrs
mov
push
pop
pop
fs
int3
xor
adc
or
or
mov
dec
lds
sbb
sbb
mov
xor
ficoml
movsl
sahf
mov
xor
inc
jmp
jb
dec
fdivr
xchg
xor
inc
inc
addr16
jecxz,pt
add
xor
add
inc
and
inc
fs
fldenv
enter
fcoml
shlb
xor
notl
push
add
lods
shl
insl
push
jae
outsl
scas
call
scas
stos
lcall
jnp
andb
lret
fisubl
pop
jmp
sbb
leave
add
pop
fimull
fwait
lret
cmp
out
push
push
lahf
loopne
jmp
test
push
repnz
imul
andb
loope
cmpsl
push
int
call
or
test
dec
imul
cs
call
outsl
jmp
xor
aad
jl
movsl
je
stos
popf
mov
fcmovne
movsb
mov
das
jbe
fmulp
test
mov
aam
mov
fdivs
shlb
add
adc
xor
or
add
scas
addr16
ror
and
fdivrl
mov
mov
fwait
pop
outsb
jb
fdivrs
push
divl
pop
cmpsb
rorb
fsubl
repnz
push
into
out
mov
lcall
and
mov
in
adc
mov
ja
shrl
or
pop
push
incl
das
or
xor
pop
nop
outsb
divl
jns
jae
and
adc
pop
fxch
fwait
sbbl
enter
rcrl
lds
test
xor
cmpb
in
in
fst
cmp
arpl
jb
lods
packssdw
jle
pop
xor
scas
in
mov
inc
push
push
bound
mov
adc
xor
ret
sub
mov
dec
int
mov
scas
mov
pop
sbb
jmp
imul
sbb
push
pop
sbb
xchg
ljmp
pop
push
lods
adc
add
in
lret
out
dec
push
xchg
orb
repnz
mov
subl
jae
test
jns
adc
lret
fnstcw
out
push
lcall
test
mov
xor
imul
jmp
add
dec
loope
pop
lahf
inc
pop
cmp
ret
sarb
loop
push
out
mov
aaa
pop
lods
xor
add
mov
out
mov
shl
and
push
arpl
dec
rclb
test
push
push
sub
inc
fdivrs
xor
jg
xor
lods
xchg
sbb
jg
jmp
mov
jl
movsl
ret
icebp
lock
cmpsb
xor
pop
and
scas
lret
insl
loopne
jp
pop
bound
mov
add
mov
shrb
stc
stos
adc
ret
iret
sbb
pop
mov
fistpll
shl
push
or
ja
negb
stos
cli
jb
pop
cs
mov
lcall
cs
push
and
sub
push
ja
ret
leave
shr
adc
jne
sub
lods
sub
clc
push
inc
sub
stos
stos
scas
imull
and
loopne
frstor
push
dec
mov
mov
sti
mov
jne
sub
ds
fcmovnb
mov
jne
adc
jecxz
jge
dec
inc
aaa
pop
cwtl
add
mov
loop
shll
lret
add
or
rcrl
push
mov
push
pop
push
stc
sub
in
mov
inc
fistpll
pop
rol
cmp
push
lea
pop
push
jne
pushf
add
sub
ss
xchg
dec
insl
adc
sub
or
insl
insb
fldenv
das
mov
adc
std
movsl
mov
popf
dec
mov
jo
mov
leave
cmp
cmp
je
cmpsb
inc
xchg
mov
mov
insl
das
sbb
pop
sub
pop
andb
add
mov
loop
fdivrp
jg
jl
and
mov
xor
mov
jae
scas
test
jp
xor
sub
pop
movsl
dec
es
stos
sbb
sub
cmc
jmp
ret
repnz
sarb
mov
sub
jns
mov
or
cmc
adc
push
inc
cmpsb
jl
and
fimuls
shrl
inc
and
subl
sbb
jl
cmpsl
fsubrl
dec
scas
test
hlt
mov
mov
or
cmpl
mov
mov
shlb
dec
pop
xor
stos
push
enter
cmp
jnp
pop
call
mov
xlat
push
loopne
jo
rorb
mov
cmp
mov
cmpsl
mov
int
mov
mov
lret
sbb
mov
cmp
pop
test
cwtl
lock
enter
mov
inc
cmp
jnp,pn
add
lret
mov
or
dec
jb
and
xchg
cmp
inc
inc
es
mov
jg
jae
dec
jnp
pop
adc
xchg
cmpsb
dec
sbbb
cwtl
stos
dec
dec
jb
sahf
jg
push
jl
cmc
leave
aad
push
fs
push
shr
mov
pop
aas
xor
sbb
pop
ret
sarl
push
outsb
cmpsb
xlat
and
jecxz
add
push
pop
cwtl
mov
push
push
push
lahf
std
arpl
pop
jl
cmp
fsubrl
cmp
xchg
test
jl
in
leave
fdivr
test
popl
or
ret
mov
loope
orb
jae
lods
jbe
cmp
pusha
push
xor
mov
cmp
lahf
jle
pop
and
cmp
add
lock
nop
xchg
mov
in
into
iret
xor
andl
dec
fstpt
stos
sahf
push
aad
pop
and
scas
jbe
mov
pop
jnp
dec
and
icebp
mov
or
dec
ret
push
xor
mov
xchg
jl
jecxz
dec
icebp
pop
movsl
test
cmpsl
movsb
sahf
dec
scas
mov
xchg
outsl
gs
mov
jnp
xor
jbe
repnz
addr16
ljmp
addr16
test
aaa
mov
arpl
mov
add
jle
pushf
lods
add
andb
test
mov
add
mov
not
loope
dec
int3
or
stos
inc
cmp
and
lret
inc
xor
mov
fst
cmp
jb
and
push
jmp
push
das
push
and
sbb
psllw
loope
out
aam
push
sbb
jo
mov
and
enter
rcll
xor
cmc
pop
sub
mov
addl
sub
into
sub
or
out
xchg
test
push
xor
or
lahf
das
inc
pop
dec
sbb
push
ja
cld
stc
jbe
sete
pushf
in
jb
add
fists
cmp
cmpsl
jns
mov
and
or
cmc
jb
or
push
xor
out
xchg
or
jo
ds
lds
insl
adc
add
data16
jo
rcrl
call
or
fldcw
inc
and
inc
xchg
mull
adc
les
and
cmpsb
data16
into
test
leave
js
rcrl
shlb
dec
ljmp
enter
dec
repnz
dec
inc
mov
andl
or
out
loopne
adc
sti
cmp
sar
out
rcll
sub
cld
loopne
xchg
push
adc
and
sub
xchg
not
insb
pop
push
xchg
out
fcompl
xchg
or
jp
pop
es
and
decb
mulb
pop
jp
or
mov
lahf
pop
add
lds
inc
jge
inc
cmc
push
push
shr
pop
pop
add
inc
cli
add
push
dec
cli
push
mov
jns
adc
mov
andl
cmp
push
cli
jmp
cmpsb
cmc
mov
cmpsl
scas
xchg
lahf
stc
or
les
lds
add
mov
sahf
repz
mov
pop
sub
jmp
or
pop
je
cli
push
aas
mov
lods
data16
pusha
fdivr
jmp
mov
push
cs
and
sarl
aam
xor
mov
lods
lds
aaa
add
jmp
imul
push
jg
scas
cmc
or
cmp
in
fiaddl
push
push
adc
add
mov
loop
fmul
pop
mov
in
inc
sub
sbb
lock
mov
les
test
roll
neg
insl
sti
insb
insl
nop
sub
xor
adc
arpl
aaa
cmp
push
adc
dec
or
fcmovnu
shrb
pop
dec
adc
add
pop
loope
scas
xor
dec
sub
mov
ffree
lock
jl
roll
int3
mov
pushf
mov
cmpsl
rol
lret
outsb
push
popf
dec
push
pop
mov
dec
push
dec
adcl
lahf
mov
and
sbb
adc
ret
mov
jg
sbb
insl
movsb
dec
ret
scas
mov
adc
pop
mov
cmp
ret
xchg
adc
ret
jmp
sub
xor
sub
repz
and
test
cmp
push
mov
pop
ljmp
enter
sbb
cmp
roll
mov
add
mov
outsb
ljmp
std
mov
cmp
lods
call
movsl
imul
arpl
rolb
dec
jg
mov
mov
stos
aam
push
iret
cmp
aad
mov
xchg
in
cs
xchg
js
or
sub
mov
jge
adc
dec
push
mov
test
mov
inc
dec
andb
in
and
stos
cmp
sub
dec
sarl
inc
stos
dec
mov
push
enter
sub
jnp
or
sbb
test
jbe
inc
adc
sbb
push
rorb
push
fisttps
jge
loop
dec
idivl
out
mov
xchg
adc
mov
lret
jns
mov
sbb
inc
lcall
sbb
add
lahf
jno
pop
jne
pop
stos
imul
jb
stc
and
les
add
std
rcrl
pushf
jmp
inc
es
inc
loop
or
fwait
pop
aas
fsubrl
icebp
jae
mov
call
sbb
dec
push
push
mov
push
fsubrl
lret
divl
mov
addl
mov
dec
pop
xchg
xchg
stos
movsb
hlt
mov
fbld
xchg
and
aaa
fnstcw
fcomps
push
mov
and
xor
fdivrs
push
adc
cltd
lods
or
fisubl
push
hlt
cmp
jo
stc
imul
cmp
push
push
fistps
cmc
xchg
sti
inc
hlt
shl
int3
jmp
clc
ja
sub
cmpl
xchg
lret
xor
call
fistps
popl
mov
sar
and
add
xlat
fistps
xchg
and
push
xchg
andb
imul
jbe
and
aam
je
fbstp
fisttpll
lahf
movsl
mov
shl
adc
inc
cmp
lret
dec
mov
and
dec
imul
dec
ja
mov
pop
push
mov
mov
push
xchg
add
cmpsb
lcall
inc
testl
imul
mov
dec
xchg
test
add
sub
dec
outsb
push
fidivs
movsl
mull
adc
icebp
xchg
xchg
std
out
sar
in
fmul
nop
imul
je
xchg
rep
and
leave
xchg
xchg
cmp
test
inc
sbb
fs
mov
inc
cs
fdivs
pop
pushf
pop
cmp
sub
stos
test
or
jnp
outsb
add
cli
xchg
push
mov
movsl
cld
shl
rcll
sub
outsb
mov
je
and
adc
jge
or
cmp
push
std
dec
frstor
out
inc
add
imul
cmp
mov
jg
adc
pop
leave
inc
hlt
sarl
mov
lods
push
mov
lods
mov
sub
stos
dec
push
or
mov
mov
mov
pop
in
std
fs
add
scas
les
sarl
stos
pusha
or
pop
xorb
lds
pop
pushf
pop
xchg
cltd
leave
jge
sti
push
and
inc
arpl
push
push
mov
adc
stc
inc
push
icebp
in
pushf
and
mov
add
test
cltd
mov
mov
push
and
scas
add
push
jae
dec
pop
cli
pop
fdivr
in
add
jb
adc
adc
xor
adc
je
sub
jmp
or
outsl
loopne
cmp
fcompl
jmp
je
mov
adc
inc
subb
pop
jo
pop
sub
mov
les
jo
repz
pop
jecxz,pt
adc
int3
sub
insb
pusha
repnz
xor
ds
inc
jmp
aaa
jb
xchg
jb
inc
fsubr
jge
in
lods
movsb
push
sahf
cmpsl
jb
adc
inc
out
mov
mov
mov
out
leave
jbe
ficompl
dec
and
int
pop
jg
inc
in
movsb
push
jo
mov
xor
push
es
lock
xchg
fldt
dec
idivl
in
xchg
xorb
inc
xor
cmpsb
push
iret
xlat
xchg
ret
stos
js
jge
push
lds
roll
cmp
sub
push
push
sbb
jp
push
pop
arpl
ret
loopne
imul
xchg
mov
shrl
arpl
shrl
and
pop
cmp
cld
test
jb
jge
pop
xchg
pusha
mov
cs
push
lock
out
push
sahf
sarl
fiaddl
jne
call
int
arpl
mov
sbb
and
imul
jle
dec
add
xor
and
test
dec
ret
cmp
pop
push
adcb
insl
stc
inc
int
jne
pop
mov
out
nop
enter
sub
mov
dec
clc
and
xor
add
and
sub
mov
jp
sbb
push
jle
test
push
xchg
pop
push
lea
dec
loope
xchg
movsl
push
cmp
hlt
rcrb
sahf
imul
andb
scas
and
jp
xor
xchg
sbb
cmc
in
push
lock
loope
xor
into
mov
fdivrl
fs
seta
lods
ja
shrb
cmp
add
repnz
pop
pop
xchg
clc
shl
xchg
lods
jbe
mov
or
pop
scas
ja
lahf
xor
data16
jae,pt
sbb
jp
loopne
xor
frstor
sub
jne
aaa
fadd
push
int
lea
xchg
fbld
inc
leave
jl
ja
addr16
xchg
jl
pop
daa
int
loope
pop
outsl
mov
enter
jae
xchg
ret
data16
cmpsb
in
fsubs
jge
aam
adc
subl
repnz
xchg
fprem1
jle
sahf
out
and
push
pop
or
data16
jno
mov
pushw
out
mov
bsf
mov
stos
hlt
inc
xlat
push
and
add
jp
pop
jnp
or
push
push
les
mov
mov
je
out
xor
lret
cmc
push
and
jo
and
mov
imul
pushf
or
push
inc
mov
mov
push
cmp
mov
lods
ja
imull
neg
xor
rolb
mov
sbb
fnstcw
movsb
push
pusha
enter
aad
mov
stos
cmp
jnp
clc
sbb
in
call
test
mov
xor
push
jg
test
dec
fsubr
mov
outsb
in
lcall
mov
jmp
jnp
popa
xchg
rcr
ret
jl
insl
aaa
mov
mul
scas
pushf
or
test
dec
lcall
and
fldenv
and
push
stos
clc
cmpsl
testb
cmp
lock
adc
punpckhdq
add
adcb
push
pop
cltd
std
outsl
shrb
out
pop
les
or
bound
rcll
mov
add
divb
inc
lret
push
pop
lods
cmpsl
pop
movsb
pop
xchg
or
pmaxub
mov
call
lods
movsl
out
rcl
outsl
mov
jo
sbbb
dec
mov
jl
out
daa
adc
pop
push
or
fildll
lea
into
psrld
and
ja
sarb
inc
jp
imul
push
loop
mov
xor
das
pop
push
xchg
and
dec
rorb
mov
pop
xor
mov
cltd
add
mov
pushf
pop
and
push
inc
xor
je
sti
test
testb
rcrl
xorb
arpl
adc
cli
pushf
fucom
fcoml
inc
bound
fs
cmc
std
jae
jmp
xchg
ja
testb
outsl
mov
sub
ss
cmp
into
xor
push
sbb
dec
sub
push
scas
enter
popa
cmp
mov
mov
cmpb
rol
lea
mov
jb
dec
pop
loope
xlat
lds
in
scas
arpl
sbb
int3
ljmp
push
jae
imul
jbe
pop
adc
jno
sub
jle
ja
add
push
mov
or
sbb
sti
xchg
shrl
cmp
mov
cld
sub
sub
insl
adc
add
add
shlb
xchg
xlat
mov
pusha
and
xchg
adc
mov
adc
add
add
outsl
popf
dec
js
stos
leave
data16
dec
fucom
pop
pop
cmpsl
mov
mov
xchg
cmc
cmpsb
and
popf
lods
fnclex
or
insb
sub
outsb
dec
mov
xchg
xor
add
xchg
sbb
gs
mov
cmpsl
insl
mov
push
aaa
cmc
lret
jmp
cs
push
sub
and
push
xor
int
arpl
and
insl
push
inc
cli
ret
mov
jl
rcrb
inc
pop
fbld
sub
adc
cmpsl
aam
add
imul
loopne
inc
gs
push
add
repz
mov
mov
mov
aad
shrb
rcll
push
pushf
jmp
loope
pop
push
test
cmp
je
adc
jge
cmp
xor
push
pop
mov
jno
adc
lods
into
cmpsb
sbb
sbb
lea
imul
pop
scas
cmp
fdivl
int
jb
stc
fcmovne
adc
mov
in
xorl
inc
test
push
scas
andb
icebp
push
out
xor
mov
in
push
add
call
dec
cmp
lret
mov
popf
mov
jmp
xlat
sti
in
loop
cmp
mov
mov
adc
cmp
xchg
xor
and
cld
cmpb
pop
xchg
ds
and
jl
aas
bsf
mov
testb
lock
xchg
kmovw
jne
dec
xlat
jo
das
mov
test
loopne
aaa
loope
jns
and
notl
test
enter
js
and
daa
and
cs
dec
cmp
xchg
sarb
sub
cs
mov
mov
in
mov
jle
adc
addr16
jle
cld
dec
les
mov
shrb
push
jge
mov
sahf
sub
aas
mov
mov
sbb
out
lret
push
pop
xchg
sbb
jb
mov
push
push
outsb
push
mov
loopne
in
push
jno
clc
jnp
cmp
xorl
sbb
insb
fdivr
cs
add
mov
dec
dec
xchg
nop
insb
cmp
adc
pop
clc
pop
insb
std
lods
adc
mov
and
iret
push
rcll
push
pop
and
or
ljmp
or
pop
insb
jno,pn
pop
sub
or
out
sti
jecxz
add
icebp
sahf
mov
mov
daa
mov
fdiv
push
insl
rorl
mov
adc
fmuls
and
fmuls
push
repz
mov
clc
and
xor
or
into
mov
pop
addl
mov
int3
xchg
pusha
pop
adc
pusha
jns
inc
pop
sbb
or
repnz
std
sti
mov
cmp
push
cmp
cwtl
aaa
icebp
test
sub
and
out
sub
out
mov
mov
lahf
lcall
scas
movsb
bound
adc
mov
mov
inc
les
jmp
mov
pop
fwait
cwtl
aaa
and
jge
dec
test
mov
lock
cli
mov
fstpl
sarl
or
or
cltd
cld
mov
and
mov
dec
mov
je
clc
call
inc
in
mov
scas
push
in
inc
xchg
xchg
mov
pop
dec
out
out
into
and
pop
lret
test
push
inc
mov
sahf
addb
push
popf
inc
and
push
ret
cmp
sbb
xchg
inc
jl
push
out
popfw
mov
cs
adc
loop
add
sbb
pushf
int
int
lret
mov
pop
mov
mov
xchg
clc
in
hlt
jge
push
xor
clc
mov
lret
imul
pushf
mov
mov
mov
pop
jnp
jge
xchg
xorb
and
aam
adc
dec
fdivl
adc
pop
mov
or
int3
dec
loopne
adc
adc
js
test
sub
ror
into
clc
xchg
outsl
inc
mov
add
dec
push
sub
shrb
jmp
cmp
andl
hlt
mov
pop
and
inc
push
call
push
mov
jmp
jnp
xchg
or
rorb
and
push
xor
xchg
addr16
pop
shll
dec
xchg
lcall
aaa
out
xor
cwtl
xchg
in
fcompl
inc
sbb
in
inc
pop
adc
sahf
xchg
loop
adcb
mov
xchg
inc
push
in
int3
negb
cld
inc
rol
scas
insb
fxch
aaa
mov
mov
add
sub
sbb
jl
sub
adc
fnstcw
mov
mov
ss
mov
mov
xchg
into
repnz
and
scas
mov
pop
cmp
jp
in
stc
fiaddl
cmp
xor
pop
test
and
inc
ss
adc
fwait
jb
mov
push
aas
xchg
in
out
xor
sub
xchg
lds
add
add
popa
jecxz
pop
outsl
je
test
push
sub
xor
push
jmp
js
mov
scas
pusha
adc
push
mov
or
bound
mov
ret
out
stos
into
gs
xchg
hlt
add
ret
in
mov
lea
das
mov
es
mov
pop
ja
xchg
loopne
insl
in
gs
push
cmp
or
imul
dec
inc
fmuls
sarb
pop
repnz
push
in
arpl
sub
lret
jne
sub
mul
dec
sti
rorl
lds
mov
cmp
sub
adc
push
lret
mov
adc
jnp
add
jae
cmpsl
fcompl
add
das
adc
add
lcall
mov
cmpsl
aad
add
mov
idivl
and
jle
push
pop
shlb
and
imul
scas
dec
sub
sbb
das
hlt
or
icebp
sbb
lods
pop
mov
mov
in
je
adc
sub
loope
popa
push
mov
inc
and
test
mov
mov
sbb
mov
and
adc
mov
or
xchg
sub
add
test
add
aad
fsts
int
mov
bound
sub
or
adcl
fdivs
mov
cmp
push
xchg
in
lret
pop
outsb
ret
inc
cmpsl
jmp
sbb
xor
add
inc
xor
sub
cmp
jp
xchg
shl
inc
clc
and
cli
imul
and
and
jbe
mov
clc
xlat
push
mov
pusha
ss
cs
jo
mov
mov
fsubp
inc
cs
in
cmc
sbb
aam
ret
fidivs
imul
inc
jp
sbb
dec
jnp
mov
movsb
stos
mov
pop
fbstp
mov
fwait
xchg
rcrb
mov
xor
sbb
mov
ret
shlb
int
pop
loop
dec
outsb
lret
jmp
scas
cmpsb
mov
jnp
fsubrl
in
mov
inc
je
movsb
das
js
hlt
in
dec
lds
test
stos
or
cmp
addr16
lock
ret
pop
jle
xchg
pop
and
mov
int
mov
and
jp
mov
fs
movsl
mov
lret
lahf
fdivr
and
out
cli
div
pop
and
pop
fsubs
jno
push
imul
test
fisubs
or
jl
jbe
out
xchg
fldcw
mov
dec
inc
cmp
fstl
cmp
test
mov
outsb
jno
and
xchg
ss
movsl
or
lret
rcl
cmp
add
or
or
mov
jg
push
and
pop
cld
cmpsl
pop
int
sbb
pop
push
add
aas
std
jecxz
adc
pop
jo
repnz
or
or
fsubl
js
stos
cmpsl
pop
xchg
mov
mov
out
push
dec
les
fwait
ss
js
mov
call
jp
rorl
and
sti
mov
mov
add
and
xchg
mov
pop
sub
xchg
scas
sbb
xchg
imul
xor
gs
scas
lret
sbb
je
jmp
jns
daa
loop
sub
sbb
sub
and
push
mov
loop
xor
pop
lret
sub
int3
jg
imul
cmp
aaa
mov
sarb
mov
les
xchg
or
ljmp
std
out
mov
inc
ljmp
adc
fdivrs
mov
inc
mov
and
mov
dec
shll
mov
mov
and
adc
pop
mov
cmpsb
inc
inc
movsb
and
sub
or
sbbl
push
sub
mov
stos
push
sub
je
outsl
jnp
pop
sbb
xchg
sub
cltd
loop
push
or
shl
cmp
cmpsb
cmp
daa
add
jecxz
mov
inc
mov
inc
daa
insb
xor
dec
andb
xchg
jbe
nop
sub
mov
or
jnp
lret
push
aad
stos
pop
fnstsw
lds
lcall
mov
sti
nop
testl
les
cs
or
push
hlt
jbe
subl
mov
jg
nop
fcomi
ds
out
add
cwtl
mov
out
mov
gs
cmp
cmc
mov
pop
sbb
movsl
and
and
mov
std
jb
mov
filds
xchg
cmp
dec
xchg
iret
loopne
cmp
mov
push
data16
and
cli
push
xor
mov
cmp
push
inc
aad
and
popf
jecxz
call
jnp
nop
roll
cmc
adc
hlt
in
loop
lea
xchg
test
xchg
and
lock
jmp
mov
push
mov
mov
rcrl
xor
push
mov
mov
pop
pop
mov
repz
xor
enter
mov
and
dec
cmp
inc
pop
push
cmp
pop
aam
fbstp
loopne
scas
movsb
repnz
mov
notb
popf
loope
xor
andb
and
loop
aam
lret
cmp
ret
ljmp
leave
in
adc
cmp
push
in
xlat
out
push
adc
leave
inc
mov
sbb
fmull
sbb
push
cmpsb
lods
cli
mov
out
mov
mov
and
or
lea
mov
cwtl
lods
push
xchg
ja
testl
jecxz
add
mov
mov
push
cmc
filds
test
cwtl
cmp
jo
loop
cwtl
mov
xor
nop
add
loopne
dec
jecxz
mov
fs
mov
xor
mov
js
dec
repz
add
ljmp
das
clc
cmp
gs
cmp
adc
shlb
fsubs
enter
mov
push
idivl
push
jle
mov
sbb
call
inc
sti
jg
andb
out
dec
lret
xchg
add
or
push
lahf
fnstsw
cmp
sub
shll
xchg
int
dec
les
stc
data16
mov
leave
sarl
xchg
mov
stos
ret
mov
mov
addr16
sub
loop
jno
and
aad
movlps
sbb
pop
std
pop
icebp
aas
adcl
arpl
sub
pop
mov
and
seta
jecxz
stc
and
out
inc
imul
inc
jns
fld
cmpsb
pushf
cmc
pop
push
mov
iret
cmpsl
sti
test
pop
popf
mov
enter
xchg
add
push
adc
stos
xor
arpl
mov
jg
jbe
mov
inc
jle
push
push
sbb
add
jno
jg
aas
adc
xor
mov
sub
inc
jae
cmp
mov
push
jae
and
pop
xorb
jbe
in
jbe
sbb
dec
pop
cld
inc
mov
fucomip
lcall
dec
shl
cmp
sbb
dec
stc
mov
jl
push
push
dec
movsl
add
push
xor
daa
lahf
pop
out
std
push
xchg
pop
cs
shrb
clc
jg
divl
scas
les
push
fsts
inc
sub
cmpsl
jnp
andb
mov
inc
inc
ret
popa
lret
xchg
xor
lcall
cmp
mov
sub
and
je
mov
and
shl
pop
cmc
inc
jb
pop
sbb
dec
xchg
call
push
stos
sahf
addb
jl
iret
lret
mov
jg
daa
decl
fwait
push
ret
stc
and
fidivl
cmpsb
cmc
push
addr16
jge
push
lods
push
inc
je
sub
pushf
jecxz
dec
and
push
xor
mov
in
xor
xor
jae
add
out
sub
div
xchg
add
pushl
daa
testb
push
adc
sti
mov
sbb
adc
int3
lods
add
sub
push
enter
outsl
push
les
fildl
jne
cwtl
jp
xchg
mov
jne
pop
cli
jnp
pop
stc
dec
mov
repz
sub
dec
nop
add
xchg
aam
or
jo
dec
lds
jbe
jecxz
test
inc
inc
test
ja
iret
nop
adc
push
or
lds
push
sub
mov
sbb
call
cli
xchg
dec
pop
mov
insb
pop
push
mov
xchg
scas
inc
sbb
mov
mov
sbb
jg
and
mov
push
or
mov
mov
loope
mov
arpl
mov
sbb
sahf
mov
mov
jbe
cmpsb
decb
pop
cmpsb
adc
sahf
pop
mov
and
lret
mov
rol
cs
outsl
inc
mov
push
aaa
jl
iret
push
mov
movsl
ret
insl
push
rcl
sbb
sbb
sub
rcl
stc
mov
bound
xchg
sub
pop
xchg
xor
shrl
dec
push
test
loope
add
jnp
in
imulb
into
xchg
gs
roll
mov
das
ret
dec
sti
sbb
fucomi
sbb
push
fldln2
add
repnz
test
cmp
mov
mov
pop
mov
and
xor
jno
mov
mov
test
push
gs
pop
add
push
mov
mov
stos
pop
mov
mov
rcll
cwtl
in
js
push
jnp
ljmp
pop
or
test
stc
outsl
sub
mov
jb
or
mov
push
mov
cmc
push
cmp
movsl
mov
xor
push
dec
fisttpl
clc
xchg
popa
push
mov
push
mov
fldl
shlb
mov
inc
pop
jne
vunpckhpd
fs
pop
shr
popf
sbb
jl
sbb
lods
fstpt
mov
sbb
outsb
mov
fistpl
mov
std
in
repnz
cltd
adc
adc
int3
incl
add
mov
sub
jns
movups
sub
xor
mov
je
outsl
in
int3
and
cld
jmp
or
int3
push
sbb
and
bnd
cwtl
jnp
cli
nop
xchg
and
push
test
mov
and
sub
inc
aaa
in
jmp
mov
jns
aas
adc
inc
add
rolb
push
lods
lods
push
sub
or
fistl
lcall
movsl
mov
andl
push
test
mov
jbe
scas
stos
out
outsb
mov
jecxz
sbb
mov
xchg
icebp
rcll
test
sbb
loope
fistps
push
aas
mov
mov
xor
icebp
xchg
mov
scas
xor
sbb
mov
mov
nop
push
subl
sub
insb
mov
stc
mov
mov
ss
movl
jl
sub
mulb
aas
jge
jbe
lods
mov
mov
adc
xor
mov
cmp
cmp
dec
aam
fwait
movsb
xlat
ret
mov
mov
lret
mov
jge
cmp
adc
lods
xchg
mov
jne
shrb
rorl
pushf
call
mov
push
sub
mov
popf
and
rcl
cmp
dec
ret
push
mov
xor
insl
and
cli
or
inc
jg
bound
pop
hlt
xor
push
pop
and
dec
cmpsb
ficoml
add
pop
in
pop
sub
xchg
sbb
scas
mov
xchg
flds
mov
jle
xchg
sbb
das
movsb
jo
ret
pusha
and
inc
pop
gs
repz
cmc
xor
sub
dec
ret
sub
mov
mov
or
or
add
or
jns
inc
mov
repnz
mov
dec
cld
inc
sub
sub
ds
rcll
clc
adc
aaa
sti
jl
into
stc
aaa
ret
js
scas
aas
dec
xchg
xchg
dec
adc
addr16
call
sbb
fisttpll
js
mov
jp
pop
jbe
mov
sti
mov
sub
ja
jp
sub
shrl
lock
inc
test
jbe
mov
xchg
lods
jnp
inc
cmpsl
push
out
fiadds
add
stos
dec
enter
push
adc
rorb
mov
fistl
xchg
fisttpl
inc
insl
jno
not
adc
out
leave
test
adc
cld
jecxz,pt
out
out
roll
and
hlt
jge
adcl
mov
adc
aas
xchg
mov
int
xchg
lods
inc
mov
push
stc
push
lret
inc
das
test
subb
add
in
inc
aas
jle
or
outsb
sub
mov
stos
hlt
cmp
dec
call
aad
notb
push
pop
call
mov
insb
movl
push
dec
sbb
adc
int
push
je
int3
add
nop
test
xchg
pop
scas
adc
cltd
movsl
and
push
jge
xor
push
mov
and
add
adc
xchg
stc
add
sbb
mov
push
push
insl
sbbl
inc
mov
call
popf
mov
bound
adc
jnp
scas
xor
xor
jno
cwtl
mov
adc
cmp
in
jbe
in
out
leave
and
cmpsb
ret
mov
orl
pop
adc
stos
es
rcrb
sub
mov
xchg
jmp
outsb
ret
fisubl
mov
jl
jno
gs
add
xlat
ror
fdivrl
daa
sbb
or
add
push
ja
inc
popa
inc
mov
jb
add
or
insl
stos
stos
std
xchg
jmp
push
mov
subl
movsl
aas
xor
xchg
add
adc
orb
into
std
xchg
mov
sarl
jbe
insl
adc
mov
jo
push
pop
subl
mov
or
lods
xchg
scas
cmp
fnstsw
movsb
push
add
jne
cli
jnp
mov
xchg
sbb
cmpb
and
jmp
jne
mov
cs
popl
adc
pop
push
jmp
rcrl
rolb
pop
call
data16
inc
cmpsb
jp
nop
xchg
mov
addl
dec
dec
out
pop
imulb
push
jle
and
push
lahf
cltd
and
jmp
out
call
mov
adc
lods
lods
lahf
aaa
fisttpl
dec
jbe
inc
sub
fs
insl
mov
xlat
xor
jbe
mov
adc
scas
xchg
cwtl
cld
inc
cld
int3
sbb
fldenv
fwait
jge
mov
xor
mov
inc
inc
mov
jae
jp
nop
leave
mov
dec
mov
xchg
arpl
lds
jp
sub
push
push
cmp
add
jg
push
cld
jmp
repnz
imul
scas
mov
sub
pushf
repz
add
in
push
sub
in
push
cld
lcall
ffreep
jle
lahf
popa
inc
add
jns
loope
cmp
cmp
xor
dec
lods
dec
nop
int
call
shrl
nop
lods
add
inc
lock
push
inc
hlt
ja
std
insl
inc
fidivs
incl
rorb
outsl
das
add
repnz
arpl
jno
es
sbb
flds
xor
sbb
fsub
icebp
add
sbb
jb
cli
loop
pop
lds
xchg
add
lods
mov
in
lret
push
addr16
ja
xchg
pop
jns
add
lods
lret
or
mov
into
ret
fldt
repz
sbb
adc
push
test
xrelease
jg
hlt
mov
xchg
or
mov
xlat
popf
fadds
dec
and
push
test
nop
add
sti
je
mov
in
sub
dec
xor
lea
sbb
daa
jle
pop
inc
mov
mov
insb
xchg
adc
mov
daa
inc
cmpsl
inc
jg
dec
adc
xchg
pop
sub
pop
mul
mov
test
add
gs
xchg
imul
cmp
xchg
mov
jp
jo
jp
sbbb
pop
sarb
mov
pop
sti
xchg
sub
push
or
mov
imul
jge
es
mov
ljmp
cmc
cltd
mov
push
xchg
jle
add
fcoms
testb
call
or
xchg
or
xor
lock
ret
mov
roll
dec
push
mov
pop
adc
cmp
push
fstl
movsl
xor
aas
pop
out
leave
cmp
pop
outsb
bound
pushf
jo
push
or
bound
xchg
and
dec
or
cmp
and
shrb
add
sarb
or
scas
cmc
adc
and
addr16
scas
shrl
adc
movsl
repnz
mov
icebp
mov
fs
das
insl
push
add
pop
xchg
sbb
pop
sbb
ja
mov
push
arpl
push
xor
sti
idiv
push
lahf
xor
jp
outsl
lds
xchg
inc
cmp
mov
repz
icebp
or
mov
cmovne
out
inc
daa
arpl
xchg
cwtl
jg
sub
aam
and
xchg
sti
imul
sub
jb
divb
inc
or
leave
mov
fsubl
and
or
xchg
dec
test
in
cmp
fdiv
pop
lds
mov
lcall
and
insl
pop
jbe
lods
mov
add
lret
or
out
mov
outsl
das
iret
adc
cmpsl
fbstp
fdivs
pushf
inc
gs
jle
lods
and
jne
mov
add
ds
fsubrl
scas
int
push
iret
das
stc
inc
inc
mov
popf
add
adc
push
dec
jmp
gs
notb
cvttps2pi
leave
es
xor
daa
loopne
add
mov
mov
jns
adc
or
dec
push
out
add
sbb
in
adc
push
xor
push
in
outsb
loope
push
jnp
pop
adc
stos
cs
xor
mov
push
jl
mov
cmpsl
popf
dec
sbb
lods
add
ja
jne
or
lock
push
arpl
mov
inc
stos
seta
les
xor
sbb
push
out
add
push
iret
mov
mov
sub
insl
jo
lock
mov
or
jbe
push
icebp
cmp
jp
jge
ret
xorb
icebp
hlt
es
arpl
jg
cld
mov
sbb
sub
in
inc
icebp
or
jo
inc
jmp
cmp
push
xchg
pop
push
sub
jnp
aam
add
cmp
ljmp
adc
sub
or
fs
testl
outsb
add
aaa
lods
data16
adcb
test
sub
mov
push
fstpt
xchg
lea
insb
and
loope
lahf
and
lret
mov
inc
das
or
jl
inc
pop
jns
outsl
inc
imul
lea
aas
cmpsb
stos
xchg
dec
xor
xchg
sarb
setno
nop
in
int3
jns
jne
or
inc
out
inc
push
cmp
adc
inc
push
sahf
jb
ljmp
iret
aad
xor
das
repnz
dec
hlt
decl
push
loope
jg
std
pop
push
js
lahf
mov
dec
fsubs
xor
stc
sbb
aaa
mov
pop
pop
stos
test
sbb
adc
and
stos
gs
pop
lahf
jns
push
xor
mov
mov
mov
fnsave
test
leave
adc
shr
loopne
int
filds
or
add
jb
or
adc
aaa
adc
mov
bnd
push
cmc
call
icebp
int
ds
cmp
loopnew
loopne
dec
and
out
sarl
shrb
inc
push
jb
adc
or
dec
in
imull
or
dec
push
je
mov
xchg
cmp
cmpsb
mov
inc
or
data16
sbb
dec
movsb
ljmp
insb
mov
clc
imul
jecxz
ret
jns
shrb
push
imul
scas
xchg
pop
inc
faddl
in
push
jmp
ljmp
jns
cmp
jno
dec
nop
leave
insb
mull
in
push
jmp
popf
rolb
sbb
cmp
sub
sbb
lds
test
add
negl
mov
pop
fs
jle
int3
mov
or
jmp
inc
repnz
scas
das
pop
jmp
push
arpl
inc
mov
or
popa
pop
ja
sub
stos
scas
sub
pop
js
or
push
xchg
mov
xchg
add
mov
push
in
cld
aam
outsl
mov
adcl
add
or
ret
data16
arpl
xlat
xor
loope
rsm
negl
data16
jmp
dec
sbb
ret
push
add
popa
insb
xor
pop
shl
or
cwtl
push
jmp
inc
in
jno
xor
out
or
adc
mov
inc
sub
movsb
xchg
push
xor
and
sti
or
dec
cmp
jb
adc
aam
addr16
jge
inc
pop
pop
cmp
cmpsl
cwtl
xor
call
and
add
shll
xor
push
mov
pop
cmp
xchg
pop
fistps
cmp
enter
and
loop
and
sub
pushf
pop
call
repnz
jmp
fsubs
and
mov
notl
pop
repz
inc
lds
xlat
loop
cmp
imul
push
pop
push
js
sbbb
xchg
mov
mov
lea
stos
cmp
daa
int
add
in
insl
int3
das
lahf
lock
movsb
push
push
sti
jnp
repnz
fstl
adc
sub
sbb
das
rcrb
jns
movsl
mov
fsubl
xchg
test
out
hlt
push
and
mov
rorb
repnz
aas
cwtl
repz
sbb
jge
adc
dec
xlat
pop
dec
sbb
adc
sti
lahf
pop
mov
adc
out
mov
repz
dec
cli
cmp
mov
test
adc
xor
sbb
movsl
out
popa
aad
cmp
mov
or
pop
mov
add
xchg
jmp
lret
shll
fmuls
jo
pop
sahf
dec
dec
sti
mov
push
dec
dec
pop
lret
mov
sub
test
xor
or
dec
and
bound
cmc
fs
mov
ret
jo
cld
mov
xchg
push
sbb
stos
in
hlt
daa
push
push
cmp
and
ds
inc
or
aas
movsl
div
aas
push
inc
mov
shl
cmp
xor
les
orb
sub
in
adc
push
or
mov
push
sti
fwait
adc
push
mov
dec
sub
and
push
loope
push
test
push
ret
hlt
dec
dec
scas
inc
adc
xchg
sbb
pop
outsl
dec
xchg
add
xchg
pop
add
or
mov
dec
sahf
ret
into
popf
nop
and
ja
pusha
jae
adc
lods
and
dec
or
ss
sbb
fisttps
test
cmp
push
push
cmp
jne
or
xchg
jle
jl
divl
scas
cwtl
cs
mov
and
cmp
call
push
and
jp
aam
testb
cmp
pop
push
cmp
fisubrs
dec
lock
xchg
fldl
inc
sub
lock
insb
ss
or
mov
mov
adc
dec
fsubs
jecxz
xchg
mov
sti
sub
std
xchg
push
xor
int3
mov
lds
sbb
pop
js
mov
sub
in
xor
fdivp
std
cmp
ja
je
into
ja
push
ja
mov
idivl
mov
cmp
test
xchg
sub
leave
lret
das
in
inc
and
cld
sbb
loopne
outsl
or
xchg
fistps
ffreep
or
mov
cmp
repnz
and
ss
popf
mov
sti
test
movsb
fstps
mov
jo
aam
loop
ret
in
cmp
mov
out
repz
scas
mov
popa
aas
push
lret
ja
adc
mov
loop
popa
mov
push
lcall
mov
xor
sbb
mov
lahf
les
mov
movsb
adc
fidivs
adc
sub
mov
imul
enter
adc
pop
push
adc
inc
xchg
cltd
mov
shrl
lds
aam
imul
aas
daa
repz
sbb
xlat
sbb
sub
iret
lock
addr16
adc
ficoms
adc
dec
mov
imul
clc
inc
inc
sahf
test
hlt
std
je
mov
inc
insb
push
mov
pop
roll
pop
add
ret
cli
add
test
sbb
add
pop
cmp
push
sub
pushf
test
fidivrs
push
neg
insb
iret
sahf
jg
pop
jmp
test
cs
pop
xor
aam
cmpb
dec
test
scas
cmp
sti
lds
faddl
leave
push
repnz
pop
and
jge
adc
push
sbb
in
imul
out
int
mov
dec
cmp
test
sub
daa
xor
xchg
movsb
mov
ljmp
sub
xchg
and
mov
divb
xor
popa
xchg
fsubs
test
ret
fdivr
fiadds
loop
popa
lea
cmpsl
sbb
aad
sbb
roll
jp
adc
xlat
xchg
out
mov
xchg
enter
inc
js
cld
je
jl
loop
into
push
repz
and
push
xor
sahf
lock
dec
rorl
inc
sub
sub
out
pop
int3
or
push
dec
add
xchg
lds
inc
pop
ret
mov
xorb
leave
ss
jg
inc
mov
stos
jle
lock
pop
xor
enter
outsl
mov
sub
sti
shlb
cmp
xchg
mov
loope
rcll
mov
sub
push
in
mov
pop
jnp
call
jns
inc
jno
push
mov
xlat
sub
inc
pop
fucomip
cmpsl
lds
mov
mov
jo
push
test
aas
pop
dec
fidivs
dec
mov
mov
pop
jl
inc
xor
dec
push
leave
lock
push
mov
dec
and
and
cmc
divb
sbb
shlb
xorb
cltd
addr16
xor
inc
jo
lcall
inc
push
stos
ds
jo
xchg
push
iret
fisubs
jecxz
cmpsb
cli
sti
repz
xchg
into
sbb
lret
rcl
lock
xchg
cmp
mov
and
out
mov
fisubl
ret
stos
xchg
roll
xchg
or
or
loop
iret
mov
xor
out
imulb
inc
fldenv
lock
and
dec
dec
cli
jnp
add
es
orb
xor
mov
in
pop
xor
sarl
xchg
sub
cmp
xor
dec
fldl
push
mov
ret
lods
jmp
jmp
push
adc
push
mov
out
test
mov
loopne
pop
or
or
mov
stc
mov
lret
add
imul
cld
mov
pop
mov
dec
movsb
dec
fwait
ds
leave
fldl
incl
je
sti
inc
repnz
push
and
add
int
paddd
add
cs
adc
mov
sub
cwtl
lret
fldenv
inc
jnp
cmpl
cld
pop
inc
xor
jg
outsb
dec
xor
mov
insb
cmc
or
jne
pusha
or
pop
ret
fwait
push
push
cmpl
pop
nop
lods
push
addb
sub
adc
adc
sahf
and
mov
and
adc
xor
add
stos
adc
dec
idivl
fldl
or
sarb
pop
add
les
divb
cmp
fdivrp
shrl
cwtl
jmp
xor
mov
add
iret
pop
sub
mov
pop
mov
filds
adc
xchg
jae
into
int3
and
inc
jecxz
sub
mov
jge
sbb
flds
pop
popf
cmpl
out
and
cmp
stos
sahf
xchg
or
je
lret
hlt
mov
daa
mov
mov
cs
pop
lds
mov
pop
aam
jne
mov
loop
jae
lock
test
mov
cmpsl
mov
push
cs
jge
jbe
push
mov
aad
mov
and
and
aam
repz
pop
fwait
std
insl
int3
inc
cmp
out
aaa
test
int
mov
shlb
add
fdivr
mov
adc
sub
pop
or
es
push
rclb
sub
sahf
paddsw
mov
ja
xor
cmp
dec
movsbw
int
dec
cs
repnz
xor
cmp
inc
loope
stos
fnstenv
push
push
pop
mov
cld
bound
adc
mov
insl
cmpsb
cmpsl
mov
jp
jne
pop
xor
loop
add
inc
mov
scas
test
pop
aad
shufps
push
cs
das
ret
dec
mov
out
mov
or
imul
dec
push
dec
aaa
xor
mov
cmp
push
add
push
sbb
into
data16
lret
fwait
das
pop
fbld
js
icebp
or
lcall
decl
or
lock
gs
jns
sub
bound
jmp
mov
js
fwait
mov
xor
sbb
fwait
repnz
es
fistl
xchg
xchg
test
push
out
imul
loop
mov
or
repnz
shlb
xchg
xlat
mov
pop
stos
loope
mov
jmp
mov
xor
xor
cltd
test
jmp
sub
sbb
pop
push
roll
outsb
cmp
mov
insb
lock
dec
repz
call
push
jns
push
loope
or
mov
fwait
popf
xchg
jmp
loope
fsubrl
and
pushf
add
jg
pop
imul
ret
push
rol
adcb
xchg
das
push
push
adc
mov
sbb
mov
scas
aam
stos
aas
mov
loop
in
push
cmp
aaa
xor
cmp
mov
cmpl
or
lcall
jae
pop
mov
jle
pop
sub
jl
add
mov
mov
dec
inc
rcrb
add
inc
mov
mov
xchg
je
out
or
inc
in
cmc
xchg
mov
cs
cmp
xchg
lock
mov
push
or
test
addr16
or
movsl
lods
aam
cltd
push
xor
sub
mov
push
push
sti
push
dec
loopne
fimull
and
and
loop
mov
adc
int
dec
jbe
push
stc
rcrb
pop
setle
idiv
aam
sub
insl
or
ret
int3
cmp
cmp
enter
cli
push
push
not
cli
mov
mul
sbb
sahf
and
mov
movsl
jg
jmp
scas
shr
in
xor
mov
jg
xchg
shlb
dec
jb
outsb
mov
push
fimull
mov
data16
adc
sub
mov
stos
out
mov
loope
adc
and
sti
mov
push
or
jle
dec
jne
divb
loop
and
movsb
imul
popf
pop
pop
stos
sub
mov
imul
lods
sahf
cld
out
adc
mov
pusha
jecxz
pop
call
adc
adc
ret
push
or
sub
lods
sub
adc
scas
imul
fisubl
xor
aam
add
push
mov
hlt
lret
test
jg
mov
ret
repz
xlat
loopne
shr
sub
jmp
jmp
jmp
and
stos
cmp
jmp
xchg
xchg
xchg
push
outsl
fcoms
shll
jmp
jne
fstpt
xchg
loopne
popf
cmc
or
mov
ja
dec
and
repz
xor
dec
scas
out
imul
ja
sbb
loope
fs
sub
adc
cmpsl
mov
addl
clc
sub
jae
cmp
into
test
xchg
in
fstl
icebp
out
sub
and
push
sbb
push
out
sbb
nop
fstpl
divl
sbb
es
adc
and
inc
ret
push
jo
data16
add
mov
pop
push
ds
dec
jecxz
fistl
push
orl
xchg
sub
inc
lcall
xor
xor
push
nop
ja
dec
cmp
mov
adc
mov
imul
inc
loope
cmp
sub
sub
and
loop
gs
inc
sahf
pusha
cwtl
or
dec
jns
rcll
jmp
add
lret
jne
test
jae
mov
jns
loopne
mov
aam
jae
dec
outsl
xor
xchg
in
ljmp
clc
mov
lret
das
add
insb
xchg
scas
sbb
mov
cmp
adc
mov
add
and
push
ret
stos
cmp
mov
sub
adc
mov
pop
testl
inc
fsubs
into
aad
or
je
std
adc
lea
ds
jo
jle
scas
push
inc
or
int
sbb
jb
fstps
sbb
and
sub
or
ljmp
aad
lods
and
inc
and
mov
or
or
inc
push
mov
push
jecxz
jge
cmpb
push
xchg
out
mov
add
fistpl
pop
dec
test
in
sub
aad
xor
mov
int3
cli
imul
jb
repz
and
mov
pop
cmpsl
enter
fucom
lods
aad
movsb
mov
jge
vandnpd
or
mov
push
cmc
and
stc
jbe
xor
xor
jecxz
xor
xor
out
jns
sbb
push
dec
adc
add
call
nop
jne
std
out
pushf
mov
push
into
dec
mov
adc
cmp
xor
push
or
loope
mov
decl
or
sbb
sbb
jl
fstps
xchg
sbb
test
test
sar
push
pop
xor
cltd
xchg
xor
cmp
adc
xchg
lcall
inc
push
jge
xor
fs
sahf
fistpll
mov
inc
cli
test
mov
inc
push
pop
int3
xchg
nop
jne
xor
mov
out
cmp
mov
ds
and
and
xchg
insl
add
popf
lods
in
or
rorl
mov
mov
lock
xor
ja
pop
jp
jl
loope
icebp
test
fcmovu
jecxz
mov
xor
lcall
add
lret
cli
adc
jb
add
sahf
fnstcw
mov
stc
push
or
ret
mov
subb
test
xchg
adc
sub
jae
imull
adc
pop
cltd
or
and
dec
pop
iret
scas
fwait
mov
leave
popa
cmp
stos
pop
mov
mov
pop
mov
arpl
and
cmp
lret
leave
je
sub
fs
jg
dec
leave
adc
and
push
ljmp
xchg
push
and
lea
mov
cmpsl
push
push
xchg
movsb
sub
ss
sub
adc
mov
sub
adc
test
pop
jle
sahf
in
add
mov
repnz
pop
add
inc
xchg
leave
cmpsb
mov
insl
test
inc
jmp
cmpsb
stos
xchg
cld
pusha
shl
ret
jne
mov
pop
dec
shlb
fucom
xor
mov
stc
inc
gs
je
dec
lods
xchg
adc
test
or
or
pop
decb
sbbb
inc
mov
inc
lret
xor
and
xlat
xchg
xor
add
or
arpl
jle
dec
mov
ret
jge
test
push
mov
xchg
clc
les
fisubrs
push
fdivrs
aaa
addr16
sti
nop
call
fiadds
insl
cmp
mov
cmpsl
test
call
sbb
jne
out
xchg
call
gs
adc
lods
push
push
stos
inc
inc
loope
or
xchg
adc
xchg
lods
jmp
aad
pushl
jbe
outsb
mov
pop
add
pop
cli
mov
dec
shll
jle
loop
mov
lret
fmull
ret
fsubrl
cmpsl
xchg
or
popa
and
xlat
daa
push
cmc
push
mov
repz
push
and
lret
ds
test
mov
lret
movsl
mov
ret
repz
sbb
xchg
ljmp
pop
mov
fiaddl
jl
jne
cmp
lock
jl
add
lds
xchg
lea
mov
adc
cmp
mov
adc
jge
push
addl
in
divl
push
xor
xchg
add
pop
pop
lret
sahf
outsb
out
jnp
sti
mov
push
xor
sub
push
das
mov
mov
nop
jle
cmp
xorl
cld
sbb
xchg
movsl
xchg
pop
mov
inc
jbe
dec
xor
pop
into
gs
lock
push
xchg
mov
inc
xchg
cmp
push
jo
rclb
je
test
testb
jb
inc
mov
push
popa
jne
mov
and
int3
gs
into
fidivs
jmp
stos
popa
add
scas
imul
cld
dec
and
cmpsb
loop
sbb
jno
pop
mov
mov
in
test
shlb
push
cmp
pop
sbb
in
cmp
adc
sbb
mov
test
out
xor
fucomip
jge
cmp
loope
ret
divl
rolb
ret
int
aaa
flds
fidivs
mov
rclb
arpl
cmc
sbb
mov
inc
dec
push
les
mov
push
in
xor
cmp
sahf
aaa
fwait
inc
out
pop
out
cltd
mov
inc
out
filds
cmp
mov
or
ljmp
push
ret
stos
in
data16
addr16
insl
push
mov
dec
mov
mov
xor
adc
mov
sub
sub
or
stos
mov
cmp
outsb
xchg
jne
mov
aad
or
mov
ss
mov
sbb
xor
ljmp
repnz
mov
jg
scas
ljmp
sbb
pop
jne
xchg
jae
dec
mov
cmp
je
test
in
xor
mov
or
call
sahf
mov
pushf
push
mov
lock
daa
xor
and
jmp
mov
sub
scas
dec
je
and
dec
lret
notl
push
inc
dec
mov
xchg
and
cltd
jg
xor
sub
xor
aad
aam
lahf
sbb
lods
cwtl
cmp
push
push
in
leave
pushf
lret
xchg
mull
ret
sub
lds
push
adc
push
arpl
push
outsl
cmp
xor
or
sbb
xor
loopne
wrmsr
or
mov
add
add
mov
stos
lods
pop
mov
mov
cmp
ds
movsb
and
pop
pop
push
push
dec
outsb
jmp
fdivrs
jo
mov
jecxz
cmp
fs
lods
cmc
rcrb
xchg
loopne
adc
sub
nop
and
or
xchg
or
xchg
push
xchg
pop
loopne
push
jnp
pop
adc
push
xor
dec
xlat
push
xor
rolb
shll
push
jg
mov
mov
xor
or
jle
xchg
insb
dec
xchg
fucom
jecxz
pop
and
mov
jno
rclb
xchg
cmc
aam
in
add
mov
rcr
iret
bound
or
loopne
jl
adc
xchg
pop
or
stos
aas
add
mov
mov
ret
es
add
lret
popa
dec
push
imul
mov
imul
aaa
xchg
pop
cld
xor
outsb
mov
sub
xor
xchg
inc
mov
push
xor
ja
inc
inc
mov
push
or
int3
sbb
add
sbb
in
in
les
xchg
jecxz
cli
mov
into
sub
icebp
aad
in
test
ss
or
pusha
insb
mov
sub
cli
or
imul
arpl
addr16
xchg
fistpll
ret
xor
fdivrs
xor
xchg
mov
sub
subl
mov
mov
pop
pop
jmp
adc
jb
mov
pop
push
shlb
stc
jecxz
or
mov
dec
sbb
jns
imul
and
add
data16
jno
outsb
and
pop
xchg
mov
dec
pop
pop
mov
jbe
dec
cmp
fistl
jge
and
or
insb
fwait
test
stos
lods
push
push
sub
adc
fs
jmp
inc
sbb
lahf
mov
jb
rep
pop
mov
scas
popa
lret
out
fdiv
add
loopne
das
movsb
int3
mov
mov
inc
lret
sub
jmp
call
outsb
push
fisttpl
test
sbbl
and
inc
lods
test
mov
push
rorb
stos
js
or
push
mov
test
pop
pop
incl
rcrb
cwtl
mov
outsl
cmpsb
add
fldenv
pop
into
gs
push
clc
je
or
xor
mov
loopne
jge
pop
cld
outsb
pushl
lret
sbb
testl
movsb
jno
das
add
outsl
int
imul
data16
jge
ljmp
mov
pop
sub
or
arpl
jmp
mov
cmp
add
sub
xor
out
dec
lahf
movsb
ss
dec
fidivrl
dec
ret
sbb
and
in
mov
mov
pop
aad
lock
adc
jge
outsl
je
push
xor
arpl
adc
stos
mov
leave
sbb
inc
jno
out
lcall
mov
xor
and
gs
inc
jns
mov
cmp
mov
or
sub
ret
loope
sub
push
rorb
mov
and
mov
ds
pop
inc
nop
loope
mov
inc
leave
aaa
insb
repnz
shr
repz
lahf
adcl
orl
xchg
or
push
pop
inc
xor
repnz
mov
les
xchg
jnp
dec
in
outsl
mov
push
movsb
sub
scas
out
xchg
insl
shll
dec
sarl
adc
push
sub
add
sbb
mov
mov
pop
and
ljmp
add
mov
insb
clc
push
xchg
xor
ljmp
xchg
shlb
push
sub
fsts
movsb
push
fstp
call
shll
repz
aam
xchg
sbb
rcr
sbb
ret
subb
stos
aam
ja
jne
mov
out
cmp
iret
jo
jo
insl
cld
push
inc
and
jae
jne
push
mov
std
jg
mov
mov
sub
pcmpeqd
sbb
jae
xor
jne
push
call
daa
push
imul
jne
es
or
add
scas
mov
xchg
pop
xchg
push
rclb
ja
cmp
pop
adc
aad
jge
sarb
sti
adcw
ret
subb
je
and
fucom
pop
cmp
mov
sub
bound
xchg
sub
gs
cmc
dec
loopne
sub
push
add
add
cmp
mov
xchg
ret
sbb
xor
aas
mov
std
inc
xor
xchg
jne
sbbl
xlat
mov
cs
mov
fs
pop
sub
imul
cltd
sub
fstpl
mov
xor
movsl
dec
fdivrl
and
push
je
adcb
xchg
xor
lret
and
cmc
test
dec
fs
lds
xor
xor
nop
add
lret
sbb
insl
xor
sahf
popf
icebp
push
lret
rorl
cli
je
shl
outsb
mov
ljmp
sarb
je
arpl
dec
jnp
mov
mov
cli
cld
bound
mov
jp
push
pop
mov
xor
xor
ss
push
inc
jg
xchg
mov
mov
dec
ficoml
ss
adc
cmp
inc
daa
mov
dec
push
dec
jg
cli
sbb
mov
lcall
xchg
mov
or
out
jne
enter
sub
or
andb
ljmp
push
push
cltd
repz
lds
xor
addr16
pusha
fstps
sub
and
and
pop
ret
movsb
mov
in
jne
lea
sti
add
repz
ja
pop
leave
into
shlb
adc
push
sbb
movsb
lret
les
xor
pop
pushf
xchg
ffree
adc
lret
cmpsb
mov
or
mov
xlat
andl
xor
or
mov
out
imul
fsts
or
push
nop
push
test
cmc
cli
and
jge
aam
mov
sub
inc
jo
ss
push
push
rcrb
push
xor
xchg
or
out
cmp
or
sub
cmp
cwtl
ret
shrb
ljmp
mov
add
xor
sub
adc
mov
mov
cmc
dec
cmpsb
dec
mov
jnp
cs
popa
imul
ret
mov
mov
mov
dec
call
cwtl
pop
daa
fidivs
push
imul
lea
mov
pop
mov
lods
dec
out
or
lods
push
adc
mov
pop
fmull
xchg
in
and
dec
mov
daa
xchg
ljmp
mov
sub
xlat
jbe
aad
push
cltd
push
stos
addb
enter
jbe
sub
add
xchg
mov
push
push
addr16
push
idivl
jecxz
jmp
adc
insl
mov
dec
add
fadd
mov
and
push
add
pop
out
test
sbb
rcrl
xchg
mov
jecxz
orb
dec
jg
int3
push
filds
xchg
cmp
push
push
outsl
xor
fsubl
and
and
addr16
repz
inc
cmp
sub
add
lods
jg
loope
lea
jne
pop
mov
rcrl
push
xchg
pop
and
test
adc
xchg
inc
xchg
pop
push
xor
aas
iret
cmp
cli
fisttps
mov
fldenv
out
mul
push
inc
and
insb
and
xchg
ret
insl
pop
push
mov
ret
loopnew
cwtl
sti
jmp
add
dec
movsb
in
or
mov
sub
xor
movsb
dec
inc
popf
adc
stos
call
icebp
inc
data16
jl
cmpsl
outsl
test
out
ljmp
data16
or
mov
push
shlb
push
and
in
mov
and
das
pop
sbb
rorl
bound
push
fcoml
faddl
mov
and
popa
shr
mov
pop
add
loope
jmp
lcall
aas
test
in
loop
mov
dec
gs
sub
xlat
pop
mov
out
dec
lods
xchg
add
enter
mov
js
sbb
mov
pusha
jb
cmc
hlt
jno
cmpsb
and
repz
dec
les
in
xor
rorl
loope
xchg
bound
flds
inc
ss
mov
pusha
push
sbb
mov
pop
sbb
movsb
insl
out
fisttpl
pop
fcoml
iret
pop
mov
dec
inc
inc
cmovo
pop
xor
xor
push
call
xchg
inc
aad
mov
xorb
addr16
outsl
mov
jp
dec
jge
pop
out
adc
fcomps
dec
sub
sub
loop
ret
xor
arpl
mov
hlt
mov
or
sub
mov
jo
dec
lods
jne
or
mov
fwait
adc
leave
arpl
sub
test
outsl
fcomps
xor
lock
sahf
push
int3
js
popa
xchg
in
addl
loopne
lds
in
dec
daa
out
daa
scas
repz
xor
lods
faddl
mov
aas
push
aam
jmp
lds
fcmovb
loopne
mov
filds
cmp
mov
out
stc
inc
mov
shrb
mov
pushf
clc
ror
adc
dec
jl
out
or
pop
inc
lock
mov
notl
sub
fmull
sub
add
push
cs
inc
cmp
jae
cli
sub
mov
sub
filds
jmp
jns
and
xchg
enter
push
sub
rcr
imul
and
mov
out
mov
lahf
inc
scas
jb
adc
das
adc
xchg
lahf
jb
out
fists
cmc
inc
and
enter
mov
rol
dec
cmp
outsb
push
in
jge
push
sti
nop
lods
enter
push
cmp
add
add
inc
pop
bound
loope
cmp
ds
inc
jne
cltd
lods
cmp
sbb
xlat
cmp
and
dec
jns
inc
jno
sbb
push
inc
sub
shrb
or
in
je
sti
mov
pop
aaa
popa
stos
ret
scas
fs
ret
outsl
in
push
pushf
or
or
in
jae
hlt
popa
cmp
movsb
test
pushf
stos
jno
fistpll
dec
in
xor
fisubrl
mov
xchg
pop
sub
shrb
inc
lods
cltd
adc
daa
jl
or
sbb
dec
aad
jne
mov
cwtl
loop
insb
adc
jp
sub
dec
dec
mov
and
xchg
mov
lds
insb
imul
stc
mov
mov
sbb
jmp
and
repz
pop
enter
or
call
dec
sbb
pop
push
pop
mov
aas
mov
jl
mov
inc
xor
and
pop
rcl
clc
inc
or
xorl
push
test
faddl
es
ret
inc
in
cmp
jmp
sahf
scas
xlat
mulb
movsb
xchg
pop
inc
cld
dec
fdivr
int
xor
dec
cmpsl
jo
inc
pop
mov
clc
or
ret
lock
xor
cmp
push
lcall
mov
cs
push
xor
outsl
mov
jne
or
sbb
xor
add
push
fcmovbe
mov
cmp
aaa
and
or
mov
ja
pop
and
fucom
fs
lods
xchg
xchg
cmpsb
into
mov
jl
add
adcb
sti
mov
cmc
mov
movsl
or
push
fxch
sub
jecxz
shlb
mov
or
pushf
pop
ljmp
shll
clc
scas
inc
inc
mov
jle
ret
lea
out
repz
jp
aaa
rcl
les
dec
imul
sbb
mov
cld
lock
jmp
mov
sbb
es
mov
insb
or
inc
pop
adc
sbb
or
xchg
in
in
inc
push
jl
adc
cmp
mov
imul
mov
cmp
mov
xchg
xchg
jno
cmp
cs
xchg
sti
pop
jb
addr16
xor
aam
mov
cmp
ss
dec
mov
insb
jb
pop
push
shr
pop
cli
lahf
xchg
push
pop
out
pop
mov
insl
mov
mov
lret
mov
pushf
cmp
sbb
sub
subl
stos
push
sbb
sbb
jp
xchg
sahf
idivb
mov
and
loop
inc
fwait
sub
jne
xchg
add
dec
ds
in
cmp
push
sbb
shlb
dec
mov
mov
inc
testl
repnz
ss
jno
xlat
ljmp
mov
leave
shlb
xchg
and
popa
sub
outsb
fst
jns
xlat
push
test
jb
cltd
cmp
xchg
and
xchg
push
and
xor
jg
hlt
fldt
push
and
insb
and
jns
or
mov
pop
xchg
pushf
mov
push
mov
cmp
lods
mov
mov
sti
mov
cmp
in
rorb
bound
jno
jg
dec
dec
or
gs
push
mov
insb
cmpsl
movsl
cmp
cmp
cmp
cld
xlat
enter
and
cwtl
cmpsl
add
repz
add
rcll
repnz
xchg
hlt
xchg
mov
xchg
inc
ret
fs
mov
addr16
mov
xor
addl
mov
and
push
xor
mov
pop
pop
lods
cs
stos
rolb
or
push
xlat
cmp
dec
imul
mov
mov
xorl
inc
cmpsl
sbb
iret
pop
sbb
pop
jae,pt
int
stc
xor
cs
xchg
jl
hlt
pop
push
out
pop
add
lcall
push
adc
mov
adc
fisubs
cwtl
sub
fwait
inc
xchg
dec
ja
or
lods
xor
xchg
mov
cld
arpl
fs
adc
mov
fwait
xor
sbb
pop
nop
xchg
pushf
pop
test
fildl
mov
fwait
aaa
xchg
leave
push
sbb
add
jbe
psrlw
sbb
or
imul
mov
imul
fdivrs
mov
outsl
sub
xor
inc
sbb
lods
cld
pop
popf
sub
add
push
sub
int3
cmp
pop
mov
jecxz
clc
sub
xor
jb
in
jbe
negl
shlb
das
adc
jl
ficomps
je
bound
and
push
inc
daa
adc
dec
xchg
insb
lret
and
inc
in
fiaddl
and
lret
ds
data16
lock
test
mov
pop
sub
addb
ret
jle
sbb
mov
cmp
sbb
std
popf
sbb
sub
lds
pop
aad
mov
dec
data16
imul
shl
es
movsl
sub
and
cmp
enter
in
push
pop
lea
xchg
or
pop
cmp
jb
orl
xchg
pushf
xchg
stos
push
test
push
sub
mov
mov
and
cwtl
xor
mov
jno
mov
adc
imul
dec
jecxz
and
lods
sbb
out
add
dec
mov
or
popa
dec
or
pop
mov
push
das
cmpsb
lcall
insl
pop
xchg
into
mov
cmc
std
inc
sbb
push
xor
movsb
sti
fmul
mov
lret
scas
fldt
loop
cmp
lret
cs
ja
mov
stc
dec
sbb
jg
loop
faddl
clc
sbb
js
test
test
sti
int3
mov
jmp
sbb
dec
jecxz
mov
push
push
mov
ds
addl
stos
sbb
or
jnp
es
mov
cmc
fcmove
jle
xchg
outsl
mov
sbb
lea
and
int
mov
cmp
int3
stos
imul
and
sahf
xchg
cs
mov
pop
xchg
xor
inc
cli
inc
bound
pop
popa
ja
xchg
xorl
mov
push
dec
testb
fsubs
mov
xlat
ljmp
mov
rorb
pop
insl
sbb
add
xor
fdivl
inc
mul
inc
inc
mov
mov
cmp
aam
adc
xor
xor
clc
pop
mov
and
dec
push
sub
shlb
cmpsl
sbb
mov
ds
xor
ficoms
repnz
in
cmp
in
adc
xchg
sub
push
cmp
add
in
roll
mov
in
xor
xchg
adc
jne
dec
xor
mov
fsts
and
imul
mov
pop
push
sub
mov
lock
xchg
push
into
mov
cmc
andb
xchg
cwtl
jns
mov
jnp
int
shrb
out
xor
mov
xor
std
mull
cmp
pusha
push
cs
repnz
jecxz
add
std
fld1
jo
lods
add
inc
fcmovnu
lods
push
outsl
dec
imul
popf
rclb
gs
pop
cmc
jmp
mov
pop
clc
add
fucomip
xorb
jb
and
xchg
rcrl
cmp
sbb
push
jb
jge
mov
out
sub
xor
xor
add
fadds
hlt
mov
fidivl
addr16
bound
and
sbbb
add
xchg
rcrl
lret
imul
mov
jns
sub
jmp
inc
clc
lea
popa
cmp
cmp
push
icebp
bound
cmp
pop
fdivrs
or
mov
xchg
adc
push
mov
scas
cmp
out
mov
dec
xchg
cmp
incb
mov
iret
or
sbb
mov
add
jl
jbe
nop
push
cmpsb
or
xchg
jecxz
sarl
cmp
repz
bound
sub
pop
test
xor
bnd
pop
mov
out
pushf
sub
push
sbb
cmpsl
add
cmp
leave
test
fmull
scas
add
je
pop
dec
cmp
clc
push
sbb
or
sbb
clc
leave
jecxz
sbb
add
adc
cltd
cli
cmpsb
cmc
pop
es
pop
mov
lods
and
pop
lock
dec
test
inc
ret
sub
fs
test
add
pushf
adc
jecxz
test
add
jmp
xor
stos
mov
repnz
xlat
or
mov
out
sub
sbb
cmp
sbb
adc
and
xchg
xor
sub
out
ret
add
aam
add
ja
pop
push
test
jnp
mov
aas
inc
out
scas
fwait
imul
pop
outsl
pushf
adc
push
sti
out
xor
lahf
sarl
add
les
mov
xlat
lock
icebp
dec
leave
mov
dec
pusha
xchg
out
out
sbb
dec
xor
cmpsl
jne
int3
out
jl
mov
enter
mov
int
aad
inc
add
xchg
and
cmp
xor
ficoml
jle
ret
sbb
pop
das
movsb
sub
ss
sti
sub
adc
cmpb
mov
xor
pop
fisttpl
popf
icebp
std
jp
testb
ss
mov
xor
cli
lret
js
dec
incb
imul
xchg
mov
sbb
pop
loop
add
inc
lret
test
lret
test
jns
aam
inc
aam
scas
add
div
and
gs
inc
add
sbb
and
outsl
cmp
or
sbb
test
dec
cltd
mov
xchg
frstor
cmp
scas
outsb
js
pop
mov
shlb
jp
or
ljmp
cmp
out
cmp
shrb
pop
ret
out
imul
dec
scas
test
jmp
iret
and
std
loopne
arpl
mov
pop
push
add
les
mov
or
and
rorb
ret
ljmp
iret
in
inc
test
incb
pop
add
pop
pop
jae
out
sarl
jae
mov
movsl
les
lahf
into
adc
fdivrs
fisubs
jo
mov
les
pop
aas
mov
fs
scas
loope
int3
das
out
cli
sbb
shrb
sti
jl
lret
and
test
and
fnstcw
iret
sbb
mov
mov
jl
mov
loopne
dec
aas
ja
je
cmp
int3
clc
scas
inc
les
dec
lahf
add
in
mov
add
mov
xchg
fstpt
fidivs
pop
push
repz
mov
loope
cs
xor
ss
stc
mov
mov
cmp
xor
movsb
fimuls
data16
imul
movsb
sub
adc
lds
mov
add
popf
pop
cmc
repz
sbb
push
mov
push
and
inc
jo
add
xor
imul
sarl
iret
sub
cmp
cmp
divb
push
gs
inc
ljmp
in
sbb
xlat
push
sbb
call
pushl
sbb
push
rorb
xchg
fsubrl
pop
or
stc
jns
cmp
pusha
inc
sub
dec
mov
xchg
sahf
push
pop
loope
jle
jl
rcrl
sbb
enter
mov
push
inc
or
aas
cmp
fadds
cmpsb
add
les
das
pop
adc
adc
test
mov
inc
dec
bound
enter
mov
and
decl
icebp
sbb
jo
mov
jl
add
mov
popl
adc
push
lock
fs
push
idivl
push
test
sbb
loop
data16
adc
arpl
clc
call
sbb
dec
mov
sub
ja
popf
mov
mov
and
add
or
out
enter
fistpl
mov
scas
cmp
inc
sub
in
adc
or
jae
cwtl
cmp
sub
aam
inc
xor
inc
sub
sbb
cmp
mov
add
adcl
jnp
jbe
shl
lea
xor
push
pop
cmp
shlb
arpl
xor
sbb
mov
jmp
cmp
clc
iret
sub
rclb
mov
pop
fistps
cmp
scas
lcall
sub
addr16
mov
dec
loop
dec
pop
fidivs
imul
adc
pop
je
jl
mov
andb
sbb
push
imul
jl
xor
mov
hlt
dec
xchg
add
or
movb
ljmp
and
mov
stos
jne
ljmp
cwtl
int3
mull
xor
cmp
jbe
popf
mov
in
mov
enter
push
test
adcl
or
loope
mov
repnz
xchg
stos
fmuls
imul
add
enter
or
adc
push
aas
jl
and
jnp
shlb
pop
idivb
xchg
cltd
add
hlt
jbe
cmp
or
stos
icebp
inc
xor
mov
mov
mov
cmp
jbe,pt
jne
mov
jg
or
out
sub
dec
adc
sub
sub
fwait
stc
mov
js
jge
rolb
sub
cmp
xor
inc
int3
inc
dec
mov
movsb
iret
lret
lcall
and
sub
jg
xor
scas
fprem
mov
cmp
add
outsb
sub
in
mov
leave
out
sbb
xchg
mov
mov
push
add
jecxz
repnz
movb
pop
push
loop
and
cwtl
imul
sub
push
or
jl
xchg
fimuls
stc
dec
jle
adc
mov
mov
mov
mov
iret
sbb
xchg
fcmovnu
add
rorl
clc
test
jmp
dec
stc
in
sub
imul
add
inc
adc
pushl
pop
shl
mov
or
mov
roll
stos
mov
movsl
mov
cmp
scas
push
sti
stc
sbb
test
cli
pop
popf
mov
outsb
repnz
inc
cmp
ficomps
fiadds
adc
inc
sbb
push
mov
jb
ss
push
inc
imul
push
jb
xchg
and
sbb
and
fstl
inc
jb
cmpsl
fwait
pop
outsb
sbb
adc
sub
jle
insl
insl
das
out
xor
pop
insb
sub
incb
nop
insl
ret
and
jbe
cmpsb
adc
popa
add
jge
mov
stc
jns
les
jns
insl
lods
push
ja
adc
pop
sbb
pop
sub
mov
scas
sahf
out
mov
loopnew
pop
or
fnsave
mov
sub
jb
jmp
and
sbb
and
bound
gs
xor
lods
rclb
dec
ret
pusha
mov
leave
mov
jl
inc
and
xchg
cli
sub
icebp
lea
adcl
and
pop
jae
mov
sti
into
mov
jg
jns
sarb
xor
fldcw
sbb
pop
and
mov
mov
int3
sub
aaa
pop
push
push
and
push
and
cmp
pop
int
popa
push
or
adc
dec
mov
cli
stos
std
xchg
inc
mov
or
leave
push
sub
rcr
xchg
mov
add
scas
fldt
xchg
adc
and
cmpsl
hlt
ret
xor
je
mov
push
mov
ljmp
xchg
ds
test
jnp
pop
lretw
les
or
mov
push
and
lock
pusha
and
and
jb
aas
add
xorl
and
inc
jmp
lds
adc
int
mov
cltd
fimull
inc
ja
lds
aaa
int3
or
insb
xchg
mov
movsb
pop
push
fs
sti
cmpsb
fs
in
jns
xchg
dec
xchg
sbb
and
aad
and
loop
decb
movsb
int3
clc
lret
scas
mov
pop
mov
in
stos
jl
mov
dec
push
mov
and
xchg
pop
mov
stos
mov
outsb
dec
xchg
cmpsl
mov
jb
cmpsb
sahf
push
je
push
fnstenv
or
sub
mov
nop
cli
mov
xor
sbb
aam
icebp
mov
and
leave
repz
lret
out
sub
sbb
cmp
sub
jecxz
push
icebp
push
mov
jb
clc
test
imul
imul
pop
cmp
inc
rep
arpl
jb
or
fistps
lahf
aaa
inc
mov
rcll
shlb
fistpl
inc
cli
aam
dec
cmc
ja
jl
xor
cmp
push
out
push
lea
jg
cmp
add
sbb
cmpsl
jb
pushf
jne
mov
clc
mov
imul
int3
dec
xor
mov
add
ret
and
fwait
jmp
mov
mov
pop
jp
leave
inc
mov
call
or
sbb
mov
mov
mov
xchg
sbb
notl
test
fcompl
and
int3
jnp
mov
das
pop
ds
ja
lret
cmc
adc
addr16
imul
in
enter
push
iret
pop
bound
stos
or
hlt
xlat
inc
stos
mov
arpl
mov
push
call
cmpsl
push
push
xchg
inc
addl
inc
imul
aam
out
std
repz
jnp
scas
xchg
pushf
push
test
outsl
and
pusha
loop
xchg
mul
in
insb
inc
gs
pop
push
andb
fcoms
inc
pop
and
rol
sbb
bound
inc
dec
inc
xor
sbb
and
pushf
outsb
adcb
dec
cmp
stc
loop
movsb
into
cmp
cltd
clc
jg
pop
sub
mov
mov
repz
sbb
adc
mov
cmp
outsl
xchg
dec
shl
jb
les
int3
jle
dec
add
cmc
mov
sub
cmp
popf
and
and
lcall
xor
pop
push
jecxz
popf
dec
mov
sar
xor
inc
mov
adc
xchg
push
stc
adc
pop
mov
mov
lods
inc
test
int
or
jmp
imulb
jno
adc
cmp
pop
daa
dec
ror
sbb
push
xlat
xchg
sbb
push
cli
or
aas
sbb
das
loop
mov
pusha
dec
inc
aam
rol
stos
lahf
jecxz
nop
sarl
push
sub
arpl
ret
mov
xchg
sub
mov
cli
shr
adc
pusha
mov
mov
stc
movsb
xchg
ljmp
push
push
xor
fwait
shlb
mov
loope
xchg
push
pop
push
mov
jg
arpl
dec
fwait
or
xor
lods
sbb
imul
cld
ss
xlat
out
negl
popa
mov
testl
mov
roll
in
ja
mov
jg
outsl
push
jb
and
into
jmp
mov
les
shl
sub
dec
dec
addr16
das
lock
jae
adc
out
mov
add
bound
sbb
pcmpgtw
stos
add
bound
mov
repnz
dec
cmp
subb
xchg
cmp
inc
adc
or
or
adc
sti
dec
out
test
pop
sahf
test
lea
cmp
mov
bnd
gs
addr16
mov
xchg
ret
cltd
jmp
scas
lcall
mov
xchg
and
orl
jp
add
add
push
push
mov
lds
or
dec
cld
lcall
mov
mov
adc
test
cmpsl
add
xor
push
inc
mov
cmpsb
in
and
pop
cmpsl
sti
jb
mov
popf
mov
test
adc
lahf
dec
push
adc
repz
mov
into
vphaddbw
das
mov
aad
bound
addr16
aam
xlat
add
loope
out
push
adc
fld
dec
jb
popf
mov
xchg
dec
aas
cmc
push
mov
bswap
addr16
in
in
cmp
mulb
lret
jmp
arpl
in
jg
mov
xor
and
mov
mov
dec
sbb
add
aad
xchg
dec
clc
test
or
ret
jp
xlat
push
rsm
loope
mov
mov
test
rcrb
xlat
push
std
stc
mov
fmull
and
fldenv
andl
mov
cmp
pushf
xor
sub
mov
mov
out
imul
imul
test
incl
insb
jge
inc
pop
scas
inc
add
inc
aaa
cmpsl
inc
divb
test
sbb
adc
repz
jno
jns
xchg
pop
push
clc
aas
inc
add
out
cmp
xor
fmulp
jmp
pop
dec
sbb
add
ret
mov
fldenv
pop
mov
jecxz
rcll
cmpl
jae
push
fsubl
std
scas
insl
nop
in
mov
xchg
fmul
sahf
add
xlat
decl
sti
xchg
ds
or
int
aaa
nop
mov
dec
jle
xchg
push
test
add
dec
jbe
mov
sbb
dec
push
dec
ss
adc
inc
sbb
outsl
sbb
xor
xor
push
xor
mov
scas
pop
enter
rolb
loopne
inc
or
mov
rol
pop
lea
pushf
xchg
xor
lods
fs
lcall
pmaxsw
push
jp
jle
mov
sbb
adc
sbb
sti
pop
lds
icebp
insb
sbb
xlat
in
sahf
test
dec
jno
scas
sbb
loopne
stos
or
std
out
imul
testb
dec
fisubl
lret
mov
adc
inc
std
jne
mov
test
enter
orb
aaa
int
fidivrl
mov
inc
xchg
stos
insl
repnz
adc
loop
outsb
pop
jle
cmp
jecxz
rcr
mov
cli
mov
stos
push
or
cltd
sub
mov
adc
mov
cli
inc
push
mov
or
mov
xchg
lcall
sbb
movsl
add
orb
jno
pop
insl
in
fs
cmp
daa
pop
and
push
and
in
push
lock
push
hlt
fistps
popa
jmp
and
jl
xchg
mov
push
mov
xchg
pusha
xchg
sbb
clc
jno
test
jp
push
daa
xchg
and
cwtl
xor
scas
jno
dec
inc
xor
sbbl
xchg
outsb
fwait
mov
and
les
jno
mov
dec
repnz
add
inc
in
pop
jmp
xlat
dec
pop
push
lock
inc
and
stc
in
or
mov
aas
leave
cmp
push
xor
shll
jecxz
das
adc
int
aad
adc
push
mov
sub
xor
int3
pop
pop
nop
jmp
clc
fadds
and
shll
rcrb
iret
or
scas
xchg
iret
lea
hlt
sbb
insb
inc
mov
call
lret
inc
push
outsl
mov
repz
inc
popa
sbb
scas
sbb
sbb
mov
lret
stc
push
add
xor
outsb
fimull
push
push
pop
imul
mov
out
rorl
int
xor
mov
push
dec
out
push
xor
sbb
mov
adc
mov
dec
or
push
mov
or
int3
mov
push
xlat
jl
jle
lret
pushf
pop
jnp
fdivrl
jns
repnz
xchg
bound
push
test
cmp
mov
xor
push
and
jle
pusha
cmp
pop
inc
inc
ds
movsl
push
insb
inc
pusha
jge
jmp
stos
repnz
adc
xor
imul
repnz
test
or
aam
xchg
mov
daa
jbe
cmp
adc
cmp
xchg
fcoml
daa
inc
xchg
xchg
movsb
rol
cmc
test
dec
bswap
addr16
scas
outsb
push
out
jns
push
and
inc
aas
sbb
xchg
pop
lcall
dec
jo
cli
mov
push
imul
push
push
bound
jp
add
ja
ss
and
push
jbe
xchg
ljmp
inc
arpl
pusha
scas
movsb
sub
and
mov
dec
bound
pop
aam
aam
mov
mov
call
into
mulb
adc
and
negl
and
test
cli
js
cmp
loope
out
push
aas
adc
sub
jbe
jp
pusha
xchg
add
lds
movsl
add
ds
adc
mov
jae
mov
int
lcall
lcall
cmp
add
int
jecxz
lods
inc
dec
mulb
es
fisubl
bound
insb
push
inc
pop
ret
push
pop
leave
or
inc
sar
sarb
and
test
add
movsb
movsl
fistpl
dec
push
outsb
jmp
outsl
push
subb
or
icebp
addr16
in
lods
pushf
pop
sbb
cmc
or
pop
jnp
mov
cmp
or
cli
sbb
divl
jecxz
lret
add
lret
fnstsw
mov
push
shll
xchg
mov
movsl
daa
sub
cmp
and
test
sbb
je
out
push
mov
adc
add
push
jle
sbb
inc
sub
idiv
mov
nop
xor
outsb
adc
jns
testb
shlb
adc
push
lret
pop
or
cmp
jnp
lcall
insl
scas
in
ret
jo
jae
inc
jno
rorb
ss
dec
pop
clc
sub
rclb
xchg
insl
imul
or
ljmp
ljmp
test
lahf
ja
outsb
pop
jne
or
xchg
negl
out
test
test
add
xchg
push
mov
mov
push
jno
inc
push
ljmp
cmp
add
cmp
cs
mov
movsl
mov
and
addb
sub
inc
or
decl
out
mov
add
xlat
mov
fimuls
sbb
xor
aas
aam
cmpsl
add
mov
addl
rorb
or
lret
sti
inc
and
lds
xchg
or
sar
sub
lods
mov
and
or
notl
call
bound
das
pushl
push
stc
inc
movsl
sub
pop
add
and
pushf
and
negb
mov
mov
cmc
repz
out
test
shlb
mov
test
mov
jl
push
rcll
push
in
lock
repnz
push
xchg
or
add
pop
xor
outsb
int
mov
or
mov
lea
loopne
pop
sbb
or
push
les
hlt
add
std
call
sbb
cltd
out
jbe
sbb
mov
imulb
sbbb
jb
cli
dec
jecxz
inc
popf
sbb
xchg
inc
lahf
jnp
xchg
and
mov
xchg
add
insl
inc
jo
xchg
ljmp
cmp
inc
pop
sub
enter
pusha
dec
push
adc
lods
repnz
sti
addr16
imul
sub
mov
xor
push
out
es
pusha
mov
push
push
adc
and
push
jmp
sbb
mov
push
inc
arpl
mov
ret
adc
xor
nop
cmp
lcall
inc
fisttpl
cwtl
dec
mov
rol
pop
xchg
push
ss
es
sti
dec
or
aas
in
mov
leave
mov
sbb
cmpsb
mov
lock
adc
xchg
xor
and
lret
mov
pop
ret
adc
adc
push
sub
ficompl
jae
loope
pop
pushf
cmp
cmp
rsm
mov
pusha
into
stos
xor
add
push
mov
pop
cmpsb
jl
sbb
sbb
add
or
lea
repnz
push
jo
nop
gs
push
insb
jno
lret
in
mov
test
mov
mov
jns
xlat
push
xor
push
xor
pop
xlat
push
adc
lret
ljmp
pop
outsl
shll
imul
push
testl
rorl
adc
fisubrs
lret
cmp
xor
gs
mul
mov
mov
and
jge
mov
fcoms
and
inc
pop
stos
adc
mov
loopne
lret
insb
aad
popf
and
stos
jl
aaa
ds
aam
fwait
dec
push
call
shll
jl
js
out
cmp
fdivrl
jle
mul
pop
jbe
dec
test
mov
outsl
lock
je
in
dec
ds
iret
data16
mov
and
loop
int
and
push
inc
mov
add
fildl
mov
lods
lret
sbb
rcrl
sti
les
outsb
sub
ficomps
gs
loopne
outsl
sti
xor
xchg
cmp
test
add
mov
repz
mov
mov
out
imul
mov
mov
ds
xor
shl
ljmp
adc
cmpl
sahf
std
push
inc
aam
or
out
test
adc
pop
sahf
or
add
cmpsb
sbb
pop
lods
iret
pop
or
cltd
dec
xor
mov
or
into
mov
sub
add
pushf
jnp
inc
mov
fildll
icebp
add
std
push
mov
std
fcmovb
rorl
push
jmp
or
sahf
add
inc
into
dec
jae
movsb
xchg
push
rcr
inc
dec
xor
pop
push
sbb
cmp
or
rcrl
mov
push
aas
jmp
add
jecxz
cmp
ja
dec
aas
adc
leave
stos
jo
sbb
push
in
out
loop
aaa
fcmovbe
out
cmpsb
arpl
mov
inc
cli
aaa
pushl
inc
adc
popa
mov
cmp
push
lods
roll
add
mov
mov
sbb
pop
dec
mov
stos
adc
cld
xchg
mov
adc
mov
xor
ds
or
loope
fldl
pop
movsb
pop
jne
xchg
cltd
mov
sub
pop
in
mov
inc
movsl
and
negb
inc
popf
xlat
push
cmp
std
add
mov
call
inc
mov
jl
cmp
fcoms
adc
xchg
sub
or
lret
cltd
inc
dec
jno
cmp
jecxz
dec
mov
stc
push
inc
sbb
test
adc
mov
mov
and
lahf
lea
dec
xor
icebp
xlat
dec
pushf
xchg
push
push
inc
lret
dec
sub
push
or
mov
inc
mov
push
adc
std
xchg
in
push
rolb
xlat
inc
pop
imul
negb
mov
test
imul
pop
xchg
push
out
inc
aas
sub
aas
xchg
sbb
inc
mov
cld
mov
adc
stc
fbstp
pop
arpl
rorb
sahf
dec
ret
inc
in
mov
dec
dec
nop
xor
add
xor
dec
mov
push
mov
repnz
push
xor
sub
and
sub
jno
xor
xchg
mov
fsubrs
cmpl
xor
das
mov
pop
outsl
lahf
call
adc
inc
addr16
push
dec
imul
outsb
aam
xchg
xlat
pop
mov
stc
loop
mov
dec
mov
scas
cli
push
imul
inc
jle
push
xchg
fxch
std
stc
cli
xchg
jne
sub
push
aad
movsb
adcb
xchg
jecxz
idiv
testl
mov
xor
xchg
bound
cmp
inc
outsb
mov
xor
lock
xor
sub
int
stos
sbb
fisttpll
mov
lret
loop
fs
xchg
mov
mov
fdivs
sbb
push
pop
sub
imul
bound
test
mov
cli
fsubrl
stos
cmp
fwait
aam
sub
xchg
stos
mov
jecxz
dec
cwtl
cmc
adc
pop
jne
pusha
pop
or
cwtl
fs
lock
mov
loopne
ficompl
xchg
or
and
mov
adc
aas
or
adc
add
lcall
test
loop
push
adc
push
loope
testb
xchg
xchg
aas
int3
addl
inc
outsb
jle
xchg
data16
inc
xlat
cmpsb
bound
pop
fs
adc
xor
test
scas
jg
loopne
push
addr16
cmpsb
mov
test
sub
ja
stos
mov
jecxz
and
mov
pop
insl
cmp
jb
testb
stos
jge
pop
xlat
stos
sti
and
inc
jp
aam
xchg
outsb
or
popl
dec
push
sbb
movsl
in
decl
jecxz
xchg
xchg
jmp
std
add
pusha
mov
and
cmp
in
repz
pusha
jb
lahf
or
stos
int
lods
repnz
or
or
arpl
mov
out
push
sahf
mov
out
pop
mov
xor
push
in
fucomp
shld
xchg
mov
pop
sub
imul
cmc
std
pop
jae
std
dec
pop
mov
add
and
and
pop
mov
leave
mov
aad
in
testb
pop
or
dec
xchg
aad
out
test
out
daa
sbb
xchg
and
sub
ret
daa
inc
push
insl
push
mov
aas
adc
jge
nop
sub
popa
movsb
and
xor
lahf
hlt
fistpl
rorl
add
xorl
popf
les
outsl
push
jnp
add
fildll
aas
in
and
push
jne
cmp
cmpsb
cltd
fstpt
cmp
pop
sbb
xchg
mov
lret
cmc
sti
xorl
adc
out
jle
mov
adc
enter
add
arpl
sbb
jl
pop
and
scas
jae
sbbl
or
cmp
popa
cltd
inc
in
cmp
jmp
and
ljmp
jge
jns
or
cwtl
lods
aad
mov
mov
jl
mov
and
loop
insl
pushf
addl
xorb
mov
pop
pop
mov
movsl
lods
inc
mov
and
inc
mov
xor
lods
cmp
jle
mov
fcoms
imul
xchg
or
ret
xchg
cmpsl
push
adc
jbe
pushf
mov
mov
rorb
jmp
aas
test
jbe
stc
pop
sbb
pop
ret
ret
sti
or
add
jb
cmp
pop
mov
sbb
popf
add
sbb
jle
aam
sub
pop
pop
sbb
fcmovbe
repnz
leave
adc
sub
mov
cld
inc
les
mov
imul
insl
stos
sub
cmp
pop
xor
jnp
adc
cltd
sub
in
and
fsubrl
cmp
popf
popf
jp
frstor
cmc
push
lods
mov
xchg
jl
aad
out
push
into
sbb
pop
mov
cwtl
sbb
cmpsl
push
in
movsb
loop
mov
call
popf
sbb
mov
jns
pop
mov
vpsadbw
sub
imul
dec
ret
xchg
mov
test
cmp
inc
mull
jecxz
cmp
lret
scas
cmp
imulb
cmc
xor
mov
loope
sbb
sbbb
cmpsb
aam
xor
push
cmpl
xor
and
xchg
push
sub
popa
mov
inc
shll
sbb
sub
aas
dec
fisttpll
out
inc
lock
mov
daa
add
out
and
jbe
addr16
jae
cmp
ret
mov
mov
scas
shll
pop
out
das
adc
dec
add
andl
cmp
shl
sbb
fldlg2
shrb
pop
sbbl
mov
pop
xor
cmp
inc
pop
xor
daa
sub
hlt
addl
dec
loope
xchg
xlat
out
fwait
inc
mov
inc
imul
pop
arpl
out
inc
or
push
xor
mov
adcl
and
popl
pop
ror
sbb
cmpsb
gs
pop
loope
xchg
out
jne
jbe
test
cmpsl
sarb
dec
pop
mov
cmpsb
cmpsl
loopne
jne
jno
cltd
xor
cli
mov
leave
adc
cmpsl
rorb
scas
daa
sahf
shr
add
push
pop
scas
es
divb
cmpsb
cmpsb
int3
imul
ja
aas
xorl
in
pop
mov
dec
int3
repz
enter
xchg
out
test
pop
sarl
xchg
bound
dec
mov
fwait
leave
push
int3
outsl
aaa
lahf
fisubs
sti
insl
inc
jae
adc
xchg
push
jmp
in
cs
push
fmul
mov
jg
xor
xlat
sub
sbb
push
inc
adc
into
fsubs
mov
iret
or
enter
fcoms
cli
lods
imul
fisubs
sub
into
cmp
mov
mov
adc
dec
lock
das
stos
adc
fiadds
shrl
cltd
pop
sbbb
add
sbb
xchg
int
ss
sub
and
push
dec
sbb
rorb
pushf
jns
sarl
xor
fdivp
je
xchg
scas
sub
std
daa
hlt
repnz
icebp
push
cltd
add
xchg
and
inc
or
xor
xor
in
xor
divb
mov
jmp
pusha
sub
daa
ja
sarb
pop
pop
mov
xchg
bound
pop
xchg
movsb
jp
jne
adc
ret
loop
push
push
arpl
jb
inc
or
ret
adc
popf
fnstsw
sbb
loope
jo
cmovbe
pop
out
inc
adc
push
push
fidivrl
cmp
mov
sbb
repz
mov
arpl
ds
jg
int
xchg
mov
mov
cmp
sub
jae
lahf
jo
pop
in
lock
sub
mov
add
mov
mov
and
pop
lahf
pop
mov
jecxz
dec
mov
dec
ljmp
loopne
add
les
test
dec
push
jae
std
aas
sti
enter
movsl
rcl
inc
and
das
pop
fidivs
popf
cmp
mov
sbb
cmpsb
or
xchg
cmc
and
pcmpeqw
mov
adc
ljmp
pop
push
xor
cmp
inc
cmp
les
push
mov
xor
dec
jb
xchg
push
adc
pusha
inc
loopne
outsl
insl
xor
fbld
add
pop
test
and
mov
cwtl
cwtl
dec
cmpsl
filds
dec
pop
ljmp
mov
stos
dec
bound
add
nop
cmp
dec
mov
leave
and
adc
aad
jo
inc
and
mov
test
ret
ja
add
pushf
lret
pop
test
test
xlat
add
std
jbe
movsb
jle
test
test
add
out
cmpsb
lods
push
cmp
pmaxub
gs
daa
stc
mov
sarl
jno
sahf
cwtl
pop
pop
inc
lock
pop
inc
push
push
xchg
mov
push
sahf
pop
scas
aad
movsl
mov
cmp
push
push
je
xchg
pop
and
lahf
mov
fs
cmp
mov
mov
gs
pop
or
pop
adc
pminub
data16
cltd
push
stc
fnstenv
dec
jmp
sbb
push
leave
dec
in
sti
push
cwtl
jnp
and
xor
mov
insl
stc
jg
push
and
fidivrs
lahf
sbb
push
into
repz
push
fisttps
add
or
cmp
add
push
adc
sbb
insb
mov
idivb
jb
mov
and
xchg
cwtl
pop
pop
fcmovb
adc
imul
xor
xor
imul
scas
imul
fwait
jp
ds
stos
in
push
sub
shll
dec
rcll
lret
adc
mov
sub
inc
mov
jne
stos
mov
testb
jmp
push
mov
dec
das
aaa
popa
jle
jle
lea
or
xchg
out
fists
pop
and
push
adc
pop
stos
int
mov
ljmp
es
leave
pop
gs
lock
lret
in
mov
fcompl
and
test
xchg
aas
and
popa
adc
jns
mov
sbb
mov
and
idivl
mov
xor
fnstenv
mov
int
add
sbb
xlat
out
xchg
in
in
push
iret
mov
shll
pushf
xor
or
add
dec
in
jbe
push
xchg
clc
inc
dec
mov
mov
sahf
test
jp
pop
jmp
cmp
mov
push
loope
ja
cmpsb
sbb
lods
xchg
lret
stos
js
cmpsl
divl
push
lret
lods
dec
test
inc
mov
fadds
loope
sbb
adc
mov
stos
mov
int3
pushf
adc
nop
arpl
fnsave
popa
outsl
inc
xchg
outsl
lret
push
xor
adc
push
out
add
test
adc
stc
stc
sbb
add
mov
mov
jns
iret
xchg
stos
cld
push
xchg
mov
xor
fxch
dec
loopne
xrelease
cmp
scas
adc
repz
popf
mov
cmp
cmpsb
bound
out
push
fstpt
inc
and
cmpsl
and
push
in
pop
push
andb
push
outsb
add
and
dec
push
aam
pop
bound
loope
add
and
lods
lcall
inc
sbb
aam
ds
sarl
test
add
sub
ret
or
std
or
int3
adc
dec
mov
xchg
test
jo
sbb
mov
pop
je
push
mov
stos
or
inc
stos
sbb
pop
and
in
daa
std
loopne
mov
leave
std
ljmp
pop
or
push
cmpsb
mov
mov
icebp
fadds
jnp
xchg
fnstsw
xlat
and
lret
push
fiadds
push
or
movsl
mov
call
iret
or
push
push
sbb
fsubl
in
adcb
add
ficoms
sbb
pop
add
sub
mov
mov
jbe
cmp
mov
jmp
sti
adc
movsb
push
imul
or
xor
jo
mov
aas
cltd
jo
mov
outsl
mov
xchg
inc
mov
out
cwtl
lock
lcall
jo
jge
xchg
loope
push
ficoml
rorb
adc
fwait
push
mov
in
mov
mov
xchg
jbe
int3
jns
xchg
cs
push
or
sti
mov
hlt
testb
fldl
ljmp
inc
add
ret
fstps
pop
out
aad
push
cld
mov
add
mov
sbb
dec
mov
cmc
in
xor
addr16
and
sahf
subl
push
mov
pop
pusha
adc
das
dec
adc
enter
mov
shll
xchg
popf
push
shrl
mov
scas
jae
aad
out
in
mov
imul
aas
gs
cmpsl
ja
or
nop
push
jmp
nop
sbb
mov
cmp
lds
or
fldpi
sub
pop
pop
ljmp
adc
adc
loopne
lods
fiaddl
cmp
add
xchg
add
nop
sbb
popa
movsl
mov
inc
sub
cmc
inc
push
jl
pop
ds
mov
adc
add
into
inc
cmp
lea
sbb
dec
fcmovb
fistps
or
out
jne
mov
std
jmp
dec
cmpsb
pop
cs
xor
decb
dec
push
jge
cli
or
ljmp
adc
jns
sbb
out
mov
or
inc
addl
jnp
bound
add
jp
jns
jle
mov
cld
stos
imul
std
pop
inc
ss
mov
xabort
daa
cmp
mov
push
mov
or
sub
es
adc
xchg
pop
add
jmp
cmpsl
mov
ret
or
notl
popw
testl
loopne
dec
sbb
dec
aad
std
jno
loop
dec
sbb
push
sub
mov
adcl
cmp
repz
sar
jno
mov
mov
jbe
test
lds
movsb
gs
mov
std
hlt
cmpb
push
cmp
inc
enter
sbb
addl
mov
addr16
repz
sub
scas
dec
dec
dec
mov
iret
push
es
add
pop
jnp
test
adc
inc
pop
mov
ss
iret
add
int3
fucomip
aam
xchg
js
cltd
xor
cs
std
and
ret
sbb
dec
mov
in
lea
movsl
test
and
mov
push
inc
popa
loop
mov
arpl
dec
push
push
xchg
out
add
insl
shrl
out
mov
push
inc
lods
imul
js
je
out
insl
mov
lods
out
xor
pop
jg
inc
sub
sub
lds
iret
je
xchg
inc
ficoml
dec
push
lcall
mov
adc
loopne
xorb
push
cs
fisttps
dec
sub
pop
xor
pushf
mov
lea
xor
cmc
adc
roll
shll
mov
jecxz
xchg
leave
pop
mov
push
or
jge
jge
xorb
add
orb
xchg
les
inc
out
jne
mov
sbb
adc
je
adc
popa
cmpsl
add
pop
test
lahf
adc
push
mov
movsl
sbb
call
pop
rcll
ret
push
loop
addl
hlt
stc
sub
rcl
inc
pop
and
jns
lcall
je
repnz
loop
lock
shlb
dec
int
shl
mov
movsl
cwtl
mov
push
mov
mov
adc
test
mov
or
jg
xor
ror
mov
jl
push
mov
jecxz
popf
movsb
dec
lcall
adc
scas
dec
ljmp
sub
jg
hlt
cs
lcall
js
xchg
push
ret
ret
add
mov
and
lcall
test
negb
lahf
add
shll
js
push
gs
subb
je
arpl
mov
stc
mov
sarb
mov
sbb
inc
inc
std
and
and
xchg
mov
cld
inc
cld
pop
mov
inc
jae
mov
or
xchg
adc
inc
outsb
xor
cli
or
inc
xor
sub
xlat
in
sub
fnsave
mov
mov
test
inc
aad
push
mov
out
sub
sbb
xchg
or
cli
mov
insl
jnp
repnz
or
stos
adc
adc
mov
xor
cwtl
leave
movsb
jo
xor
lods
fs
push
jg
js
mov
xchg
movsl
cmp
std
in
xor
sbb
pusha
dec
nop
insb
out
popf
cmpsl
jne
and
sbb
mov
dec
inc
add
mov
outsl
hlt
ret
into
and
mov
pop
xchg
jbe
aas
add
int3
and
and
pushf
and
repnz
loope
and
lret
outsl
imul
and
mov
xchg
test
fildl
xchg
xor
imul
adc
dec
push
add
adc
xchg
ficoml
adc
sub
mov
cwtl
mov
pop
xlat
xor
jb
sub
int
xchg
scas
imul
negb
ret
pop
jp
cli
pop
pop
push
movsl
frstor
pop
jecxz
push
lret
in
fadds
jmp
gs
adc
adc
std
dec
push
sbb
test
cld
ffree
add
les
setge
lods
mov
mov
jne
or
ss
dec
pop
call
stc
lret
dec
push
mov
xchg
popf
pop
mov
mov
pop
rcrb
add
or
sets
rcrb
roll
sbb
jns
les
mov
cli
mov
push
popl
aaa
jecxz
sub
mov
aam
popf
rorl
test
cmp
adc
fisubrl
xchg
and
or
js
stos
add
int3
cld
jae
int3
cmp
or
dec
mov
gs
stc
jnp
inc
pop
mov
out
xor
sbb
sarl
dec
movsl
xchg
mov
fdiv
fdivrs
sti
push
adcl
lods
lods
dec
imulb
add
dec
mov
push
js
nop
xor
sbb
dec
icebp
fildl
inc
je
push
cmpsb
inc
loopne
sub
push
movhps
lar
jo
or
mov
call
lcall
push
push
mov
shrb
ror
xlat
xchg
sarl
sbb
jno
cmp
or
pusha
push
int3
fstps
mov
outsb
jge
jb
jle
sbb
inc
iret
insb
adc
jmp
pop
pop
push
shl
cmp
push
inc
jg
dec
icebp
pusha
xchg
and
sbb
add
imul
adc
mov
sti
cmp
pop
cld
aad
cld
dec
mov
mov
inc
vpackuswb
dec
mov
ljmp
inc
leave
cwtl
sahf
xor
add
push
pop
pushf
pop
jno
mulb
and
mov
jns
shl
mov
jmp
popf
mov
ret
pop
fs
jp
mov
and
xor
inc
dec
xor
lahf
and
clc
addr16
jbe
or
sti
mov
cltd
fdivl
andb
les
xor
jb
fsts
and
and
mov
jge
mov
sbb
push
xor
add
xor
dec
push
out
jno
scas
cli
mov
push
adc
or
jo
add
lods
cmpsl
inc
pcmpeqb
arpl
cld
mov
push
push
inc
adc
bound
inc
das
cmc
daa
aad
aam
xor
jge
sbb
sub
mov
lods
jno
loop
mov
idivb
rcrb
into
cs
dec
mov
rol
mov
loope
push
push
out
mov
push
adc
test
enter
jecxz
cwtl
test
dec
sub
xor
sbb
push
loope
mov
fisubrs
fcoms
mov
jg
es
js
dec
scas
jg
or
sti
sbb
sbb
sbbl
sub
xor
cld
aad
js
repnz
cmc
jmp
mov
add
mov
rclb
or
inc
fisttpll
adc
fldlg2
xor
arpl
sbb
insb
jl
cmc
cmc
xchg
stc
add
hlt
icebp
iret
scas
add
xorl
cmp
jnp
sahf
xor
fmulp
stc
into
cmp
incb
call
jne
test
mov
xchg
cmp
mov
add
int
sub
xchg
out
push
outsl
jge
push
mov
mov
and
lret
testl
mov
test
push
stos
pop
fldl
mov
mov
jns
aad
push
sbbb
cld
and
roll
sub
sbb
lods
jp
nop
xor
add
adc
mov
fistpll
std
jge
lods
cmp
xor
jmp
lods
adc
sbb
sbb
adc
mov
adc
or
mov
mov
xchg
jle
add
xor
jns
std
movsl
repnz
push
mov
inc
xchg
mov
dec
mov
mov
push
jg
sbb
mov
fisubs
bound
sbb
jo
sbb
pop
popf
daa
lcall
decb
sbb
movsb
insb
or
lret
lret
pop
and
call
pop
mov
popa
test
mov
fidivs
add
imul
dec
xor
stos
sub
daa
or
push
pop
add
sbb
push
orl
xor
fistpl
xor
int
jge
gs
dec
lahf
aaa
push
mov
stc
pop
fnstcw
sub
pushl
mov
ss
popa
fwait
push
push
decb
adc
or
mov
arpl
mov
pop
movsb
sbb
mov
add
aas
lock
idivl
adcl
pushf
inc
push
xor
cmpsl
add
mov
in
daa
ss
stc
bswap
pop
fs
mov
mov
xor
testb
aad
loope
mov
std
push
cmp
lock
aas
mov
fcoml
xor
sti
sub
and
aad
out
add
jmp
and
or
pushf
jg
xor
and
mull
shl
cmc
stc
jne
cmp
or
lods
in
pop
hlt
inc
push
out
sbb
popf
cmp
adc
loope
arpl
xor
pop
xor
loop
mov
imul
jbe
pop
inc
mov
testb
and
stos
outsb
or
es
add
enter
imul
pop
les
lret
inc
add
inc
push
mov
xor
adcb
xchg
mov
push
lret
jp
movsb
lcall
outsl
or
je
mov
popa
sub
push
sbb
pop
xor
mov
inc
pop
jb
repnz
rcrb
pop
ret
cmp
mov
sub
pop
and
adc
hlt
ror
mov
lret
push
iret
enter
pop
test
lods
mov
int3
in
shlb
jecxz
mov
pop
xchg
and
scas
jge
xchg
pop
dec
add
or
xor
inc
filds
stos
mov
ja
pop
movsl
nop
dec
inc
jge
shl
das
andl
js
push
inc
mov
inc
lahf
stc
adc
ds
inc
sti
scas
rolb
int
dec
pop
ficoml
cmc
push
sti
push
sbb
nop
insl
stc
xor
mov
cmp
dec
or
stos
aam
cli
int3
sbb
pop
mov
mov
push
sbbb
mov
std
lock
lret
mov
lret
popa
hlt
push
in
dec
sahf
ds
sub
es
sbb
xlat
jmp
ss
pop
mov
imull
and
fst
unpcklps
insb
and
outsb
adc
add
sub
mov
mov
and
lea
xchg
arpl
jmp
movsb
dec
mov
push
jmp
stc
cmpsb
inc
mov
sub
fsubp
xchg
push
add
movsl
cmpsb
cmp
aas
push
imul
push
pushf
jo
rclb
lret
sub
push
test
scas
sub
sub
rclb
xchg
sbb
push
push
sbb
jl
lods
cmp
dec
js
cs
loopne
lods
lds
push
sbb
mov
xchg
inc
add
test
mov
cmpsb
cmp
arpl
sahf
mov
testb
mov
addl
sbb
add
sub
push
fwait
dec
sub
jno
add
ret
push
mov
inc
adc
cmp
pop
test
ljmp
addl
sub
push
mov
mov
lcall
stos
rorl
outsb
sbb
mov
sub
js
nop
aaa
popa
mov
cmp
pop
or
stc
ret
sub
jle
leave
pop
adc
in
inc
push
pop
cltd
ljmp
push
movsb
xor
mov
sub
mov
into
testl
or
pop
mov
mov
clc
pusha
hlt
scas
jbe
and
mov
mov
clc
inc
dec
subb
sbb
enter
cli
cmp
ss
push
out
fldl2t
sub
mov
jbe
xchg
daa
and
int
popf
and
push
pop
sub
jecxz
fstsw
sbb
adc
mov
cli
add
lods
dec
xor
lret
pushf
adc
aam
mov
sub
jne
lods
fs
cltd
xor
inc
and
mov
es
cmp
pop
xchg
clc
mov
pop
insb
and
cmp
in
cmp
jno
mov
mov
stc
rorb
dec
sbb
dec
jae
test
or
and
imul
cmp
out
add
sub
cli
sbb
cmp
das
dec
aam
subl
lcall
std
call
cmc
into
pop
int
test
mov
jb
test
mov
pop
pop
sarb
dec
stos
mov
and
in
fnstsw
mov
test
ret
jbe
addl
mov
adc
add
add
inc
mov
int
xchg
pop
adc
or
adc
mov
in
sbb
cs
aaa
shll
pop
mov
add
push
leave
mov
outsb
inc
push
add
push
test
add
fisttpll
jne
dec
loopne
pop
loop
das
fisubs
cmpsl
icebp
ret
xor
jbe
dec
ja
imul
mov
mov
cli
sub
popf
sbb
xchg
sub
hlt
xchg
push
cmc
les
pusha
lcall
negl
jns
pushf
xchg
in
subb
jns
sbb
lods
mov
ret
push
push
stc
hlt
push
cmp
lret
add
cmpsb
jg
arpl
frstor
pop
shr
or
push
arpl
xchg
add
dec
push
int
in
sbb
aaa
add
inc
xchg
mov
xchg
jmp
xchg
insl
sbb
push
fldt
inc
addr16
mov
lret
mov
mov
mov
out
sub
pop
lds
fisubrs
jle
fcmovnu
sbb
lods
xchg
lcall
int
in
fs
lret
outsl
mov
jbe
fwait
or
scas
enter
or
inc
cli
clc
sub
repnz
jbe
jne
aas
mov
fs
and
pushf
fildl
push
ret
sbb
mov
je
data16
adc
lods
jb
gs
add
mov
icebp
sbb
sti
enter
notb
fdivl
fmuls
mov
xchg
arpl
daa
push
js
push
and
mov
cltd
adc
inc
test
sarl
int
push
mov
iret
push
stc
jge
mov
jl
pop
scas
rorl
addr16
dec
jmp
dec
pushf
mov
daa
jb
mov
xor
cs
mov
add
andb
sbb
sub
imul
xor
jno
call
mov
and
pop
fcomps
inc
cli
mov
repz
pop
imul
jmp
aad
dec
sti
sub
data16
jnp
xor
mov
jge
shr
or
dec
xor
lret
loop
pop
pop
fisubs
dec
pop
fdivs
imul
sahf
lock
loop
mov
cmp
les
mov
cmp
xchg
lods
cli
inc
andb
mov
mov
fsub
adc
in
inc
mov
jge
push
popa
dec
add
push
ja
mov
ja
addl
scas
sbb
lods
js
fimuls
mov
iret
arpl
lds
jbe
inc
in
push
enter
lds
and
push
sub
jmp
jge
jge
out
mov
jge
shr
test
mov
cld
dec
push
push
xchg
outsb
sub
add
cltd
cmpsl
or
pop
jno
imul
push
rcll
arpl
cmp
stos
mov
xor
sub
andnps
mov
push
shll
jo
mov
fmuls
dec
pop
sbb
xchg
jle
pop
inc
mov
inc
outsb
jae
and
push
test
enter
inc
sbb
xchg
repnz
insb
nopl
sub
jno
xor
sub
ds
add
add
xor
aad
ror
or
mov
enter
into
or
clc
shl
cltd
cmp
lahf
add
xlat
push
lods
mov
fs
test
lds
lods
adc
dec
push
clc
push
push
xchg
cmp
mov
cwtl
scas
mov
push
iret
scas
lahf
scas
xchg
mov
sti
pop
je
xchg
shl
shl
or
jmp
ds
mov
fisubl
xorps
outsb
mov
mov
fsubrs
test
mov
adc
xchg
mov
test
or
nop
mov
xchg
imul
lods
mov
adc
and
jo
data16
jle
lret
cltd
xchg
jbe
and
lds
aas
mov
inc
test
in
jbe
add
pop
lcall
scas
lcall
jl
push
jb
and
add
cmp
inc
push
push
test
sbb
addr16
loope
xor
fsub
or
push
jbe
int
or
pop
mov
mov
lahf
cmp
scas
mov
sub
gs
imul
popa
pop
cmpsl
popa
add
test
cmp
fsubs
orb
xchg
mov
mov
js
cmpsb
xor
sahf
data16
and
mov
inc
bound
xchg
ss
mov
outsb
inc
inc
in
sti
hlt
sbb
fdivl
das
dec
xchg
shld
ja
xchg
daa
dec
fadd
cwtl
and
arpl
dec
mov
sub
test
in
inc
lret
lds
in
pop
hlt
hlt
dec
dec
lahf
dec
sub
jne
enter
enter
dec
jae
into
movsb
ret
fisttpl
test
dec
mov
pusha
repz
cmpsl
lahf
popf
push
sub
enter
push
out
jae
cmpl
lcall
mov
xchg
divl
or
adc
and
rcrb
loopne
cmp
addr16
aaa
cwtl
lods
and
xor
pushf
inc
std
add
jg
sbb
mov
jbe
out
test
push
lea
outsb
sub
cmpsb
sahf
xchg
into
std
ss
push
sahf
xchg
fidivrl
cmpsl
cmpsb
add
test
inc
dec
jl
addr16
add
xchg
push
pop
repz
sbb
aam
adc
mov
rolb
sbbl
stos
hlt
xchg
fisttps
jge
lods
mov
scas
iret
cwtl
cmc
jae
mov
adc
mov
cmc
xor
ss
xor
test
ffree
push
or
aam
sub
jne
cltd
add
xchg
mov
insb
lcall
insl
inc
shlb
aam
push
mov
jo
lea
mov
daa
sbb
adc
aaa
mov
mov
mov
push
int
mov
jne
mov
xor
sub
sbb
popf
loopne
mov
sub
cmp
lds
xor
pop
pushf
aam
cwtl
xchg
pop
dec
mov
imul
andl
ljmp
scas
jl
jno
movsl
nop
jmp
xor
push
push
scas
or
xchg
rcrl
arpl
and
lea
ret
mov
mov
mov
add
sbb
dec
idivl
sub
mov
pop
adc
adc
bound
fisubl
lods
lret
scas
jl
lcall
mov
imul
stos
pop
add
mov
icebp
or
cmc
xor
mov
repz
ss
mov
and
stos
lea
dec
pop
call
loope
xor
stos
sbb
inc
mov
dec
xor
data16
ret
subl
jbe
push
aad
call
repz
stc
push
mov
orb
js
bound
shll
jg
fbstp
dec
lock
repz
leave
insl
pop
or
adcb
jb
dec
lock
dec
pop
adc
sub
dec
adc
int3
arpl
or
xor
ljmp
jecxz
repz
and
cmp
inc
sti
scas
shr
xchg
mov
int
shll
cmp
xor
inc
jl
jne
mov
adc
pop
mov
fcoml
dec
std
mov
idivl
dec
aam
lcall
fs
inc
push
dec
xchg
daa
pop
rclb
sbb
test
data16
call
sub
sbb
icebp
lret
dec
jge
adc
out
stc
mov
lods
fisubrl
cmp
mov
or
sub
in
in
lahf
nop
hlt
jge
cld
sahf
mov
hlt
js
rcll
sti
call
testb
cmp
sbb
mov
xor
cmp
sahf
out
cwtl
fidivs
sub
ret
std
dec
adc
test
add
xor
lock
paddd
ljmp
loopne
pop
hlt
pusha
jns
inc
cli
setl
imul
or
inc
sub
sub
push
repnz
sti
push
mov
mov
or
fsubs
sub
fwait
aad
add
or
idivb
mov
aad
popa
test
inc
mov
rcll
and
in
xchg
fs
sub
or
ljmp
loopne
test
lods
mov
xor
cmpsb
push
testl
ss
jp
adc
fs
gs
xchg
in
scas
std
fcmovb
adc
fildl
decl
lcall
dec
sbb
cmp
loope
int3
mov
ja
push
cwtl
sub
xchg
in
push
sbb
adc
and
pop
sub
nop
or
sub
test
mov
jbe
leave
inc
xorb
pop
jmp
in
and
mov
dec
fwait
sub
lods
iret
push
imul
cwtl
cmp
cmp
jb
push
std
insl
inc
push
sarl
add
adc
adc
insb
mov
int
in
cltd
cltd
jmp
cli
pop
andl
loop
lret
hlt
pop
mov
mov
divb
jno
pop
call
enter
out
mov
pop
pop
mov
loope
insb
push
mov
loope
loope
leave
adc
dec
ja
fs
imul
fcoms
cmp
adc
ja
jmp
sbb
mov
ss
jb
dec
push
ds
xchg
mov
mov
lahf
lret
pop
xor
add
or
push
repz
repnz
jae
test
sub
sub
inc
test
sarb
mov
mov
ja
aaa
xchg
ss
or
lret
aas
and
and
fimuls
sub
pusha
mov
loope
sub
int3
add
int
in
rcrl
sbb
cli
in
int
loop
scas
es
xchg
xor
sahf
stos
ljmp
nop
out
insb
icebp
imul
test
imul
push
in
push
loope
add
int
xchg
inc
inc
dec
ds
mov
and
jb
cmpsl
cltd
sub
cmp
fsts
push
lods
cltd
add
mov
cmp
imul
xchg
sbb
mov
andl
jae
adc
arpl
or
sub
lods
sub
mov
mov
rclb
push
aaa
imull
stc
add
mov
aas
inc
add
or
jae
addr16
or
fisubs
pop
lds
adc
subb
xor
mov
mov
inc
ret
inc
fwait
nop
pop
sub
dec
xchg
cmp
mov
loop
add
je
out
cwtl
push
and
in
iret
pop
arpl
jnp
add
int3
stos
lret
sbb
pop
out
or
in
sbb
or
leave
sbb
pushf
lret
out
push
aad
push
xchg
pop
insl
mov
or
push
out
mov
xor
jbe
lock
sub
mov
fdivs
and
xor
jae
cmp
xor
and
mulb
adc
jne
xchg
mov
sbb
lcall
adc
xchg
inc
xor
sub
cmp
rolb
gs
out
and
cli
xor
sub
addr16
mul
ret
out
loopne
xor
inc
imul
rcll
fwait
pop
pop
repnz
enter
jmp
in
rol
xor
mov
insb
test
ljmp
stos
decb
push
arpl
dec
jno
sub
jl
xchg
jbe
pusha
mov
decb
ljmp
xor
adc
xchg
inc
lea
sbb
dec
sbb
aas
ds
inc
pop
mull
lds
loop
pusha
pop
out
cmpsl
addr16
xchg
sbb
xrelease
or
fisubrs
xchg
fstpt
jbe
mov
mov
rolb
mov
cmp
mov
cmp
or
icebp
cltd
cmp
out
pop
out
ret
gs
leave
shrl
scas
cltd
add
add
sarl
pop
add
jbe
push
push
and
ret
pushf
pop
shr
jl
outsb
fisttps
xchg
sbb
jne
fisubrs
test
and
cltd
sbb
add
dec
push
mov
dec
mull
jg
add
xchg
push
sahf
xor
jle
popf
dec
sahf
fs
jg,pt
gs
clc
xchg
adc
cmp
add
cwtl
pop
pop
xor
mov
xchg
dec
jge,pt
lret
sti
cwtl
mov
test
daa
lock
add
jmp
mov
adc
and
call
sahf
cmp
and
cmp
push
inc
inc
add
aaa
mov
imul
and
jmp
xlat
mov
cmp
sub
dec
test
add
clc
add
inc
and
mov
popa
inc
dec
jno
stos
mov
mov
out
scas
loope
out
arpl
xlat
add
bound
cs
imul
mull
dec
inc
fisttps
xchg
mov
dec
pop
scas
into
jle
lock
ret
roll
movsl
subb
add
bswap
das
jbe
jnp
std
xchg
loopne
pop
adc
lea
cltd
add
int
push
ds
lods
fs
dec
aaa
std
inc
out
sbb
das
popa
stc
loop
mov
ja
add
cmpsl
pop
mov
in
dec
into
sbb
push
stc
fstps
xchg
aas
push
push
ss
lret
leave
enter
lods
iret
mov
cmp
xlat
pushl
mov
test
es
loopne
fstl
fnsave
xor
jns
cmp
movsl
adc
inc
jg
ret
mov
mov
ficoml
adc
mov
fs
jg
faddp
fs
test
push
push
and
mov
or
jns
cmp
cmp
mov
sbb
xchg
add
je
xor
sbb
mov
or
sbb
mov
movsb
jo
inc
lea
jle
xor
jo
roll
aas
xor
mov
int
mov
push
push
incl
sbb
push
mov
jmp
cmc
imul
addb
xchg
loopne
push
rorl
add
or
popa
dec
xor
push
je
pop
lahf
mov
add
aad
xorb
or
mov
push
mov
ja
pop
hlt
mov
mov
jecxz
mov
adc
sbb
mov
arpl
test
and
sbbb
jo
pop
adc
xchg
pushf
adc
fiadds
or
xlat
jns
xchg
out
push
dec
xchg
gs
cmp
xchg
push
mov
dec
add
loope
into
imul
xor
cmp
cwtl
pop
das
add
push
jnp
jg
mov
pusha
es
not
mov
fdivs
ljmp
out
mov
scas
imulb
lds
dec
fsub
adc
mov
mov
pop
loop
scas
out
test
jbe
invd
mov
pop
mov
dec
test
or
sarl
pop
xchg
mov
and
adc
or
sub
movsb
les
fdivrp
mov
xchg
adc
inc
out
scas
inc
icebp
nop
sahf
bound
cwtl
cs
pop
rolb
xorl
mov
sbb
addr16
incl
arpl
jne
lds
aam
aaa
mov
pop
ret
adc
test
mov
add
add
mov
cmp
cmp
aad
and
stos
inc
push
adc
inc
ljmp
data16
xlat
mov
push
nop
mov
jbe
sbb
std
sub
sbb
movsl
jecxz
sbb
or
push
negb
lret
cmp
les
jle
cmp
push
shll
pandn
cs
popl
cltd
pop
and
mov
mov
mov
int3
and
fs
xchg
jno
ret
sbb
jns
dec
stc
in
in
in
pop
mov
movsb
mov
fs
stc
leave
mov
xchg
lahf
lcall
cmc
and
xchg
jge
cmpsl
pop
xchg
outsl
sub
aas
mov
aam
jae
aaa
inc
mov
push
pushf
sub
cmpsl
adc
dec
inc
stos
cmp
outsl
add
scas
testl
popa
movsl
mov
pop
das
pusha
add
or
dec
lret
inc
imul
scas
fsts
jmp
mov
out
adc
mov
mov
sbb
and
sbb
adc
lea
mov
pop
movsl
das
pusha
rcrl
pushf
cmp
cld
mov
xlat
xorb
faddl
mov
xor
lahf
and
int3
shlb
jmp
fimuls
std
sbb
xchg
adc
jle
dec
ds
outsl
filds
not
xchg
mov
jno
xlat
xchg
popf
test
popa
sub
aam
jbe
ljmp
dec
push
sbb
pusha
or
cmc
sbb
inc
lods
rcrl
bnd
dec
aas
pop
inc
mov
mov
loopne
cmp
shll
out
push
xchg
xchg
and
mov
dec
sbb
sahf
xor
cli
push
sub
or
inc
adc
lds
mov
or
inc
insb
pushl
sbb
or
push
cmp
mov
das
jne
jne
and
imul
cmp
pop
dec
aas
push
cmc
fs
mov
or
mov
cmp
sbb
mov
leave
rolb
rcrb
add
js
movsb
add
mov
dec
bnd
push
fnstsw
jmp
fsubrp
lret
aad
inc
call
jmp
xchg
nop
popa
icebp
stc
pop
movnti
outsl
pusha
ljmp
jle
mov
ficoml
jae
arpl
out
mov
pop
js
xlat
dec
dec
ss
xor
jl
in
xor
jne
flds
jge
test
add
int3
aad
inc
mov
fs
sbb
pop
fisubl
call
xor
dec
mov
push
mov
jb
mov
and
sahf
cmp
push
dec
loop
out
mov
in
or
mov
inc
or
sarb
push
icebp
les
je
clc
call
into
xor
dec
sbb
fidivs
lock
bound
lods
jmp
push
mov
push
icebp
loope
in
and
ss
adc
dec
xchg
stos
call
cltd
cli
mov
add
cmpsb
dec
into
pop
xchg
push
mov
sbb
ljmp
push
icebp
or
loop
xor
ljmp
mov
mov
push
stos
push
into
jbe
lret
ret
imulb
stc
dec
jnp
xlat
pop
pop
int
dec
xor
mov
icebp
pop
cmp
jecxz
push
pop
ds
sbb
arpl
dec
jl
push
das
cmpb
sti
mov
cmp
and
into
in
jmp
xchg
rcrb
bound
in
sti
xlat
add
add
out
xor
inc
jno
add
in
and
lret
test
or
push
push
mov
aas
adc
lods
lods
aam
jnp
insl
cmc
xor
pop
in
sbb
push
inc
rclb
xor
cmp
test
adc
fisubl
setno
popa
dec
test
mov
push
pop
icebp
gs
mov
daa
push
pop
and
or
xchg
mov
mov
adc
pusha
add
mov
pop
and
mov
fdiv
sub
mov
mov
mov
lock
icebp
mov
andb
mov
loope
dec
xor
cmp
mov
sub
sub
pop
stos
jp
mov
lds
repz
adc
mov
jl
jg
cmp
in
pop
outsl
sub
test
jl
int3
inc
mov
leave
pop
cs
aaa
pop
mov
jo
pushf
cmp
or
repnz
pop
inc
pop
xor
lret
xor
ret
sbb
insl
mov
and
dec
decl
lods
xor
mov
mov
loopne
out
adcl
sbb
mov
in
inc
scas
and
in
jmp
aam
test
mov
in
or
dec
dec
je
es
mov
jo
sub
shll
or
negl
outsb
sbb
sti
adc
mov
out
nop
inc
inc
mov
push
loopne
repz
mov
pop
fldenv
test
bound
push
sbb
loop
sub
call
sub
sub
add
call
mov
nop
add
hlt
roll
pop
icebp
jns
xor
insl
in
jge
es
add
adc
pop
je
lds
nop
aad
jp
adc
push
es
add
aam
lcall
jmp
ret
lods
ucomiss
pop
push
sub
adc
adc
cmc
jmp
pop
xor
sbb
insl
cmp
mov
lods
or
mov
jl
xlat
out
xor
add
jle
std
xchg
dec
cwtl
je
ret
xchg
jecxz
das
in
clc
es
push
scas
cmp
mov
sbb
inc
aaa
in
xor
loop
incb
and
mov
dec
push
and
daa
xchg
sub
inc
mov
stos
cmc
adc
mov
or
jge
and
iret
lcall
pop
imul
popf
lret
mov
je
pop
xchg
into
outsb
in
int3
pop
mov
aas
mov
push
int3
fnstcw
mov
imul
push
jns
leave
or
sub
push
das
push
cmpsl
fcomip
xlat
orb
xor
repnz
ret
add
pop
add
ficoml
lret
mov
xor
aas
rorl
sahf
dec
lds
jge
mov
and
out
jnp
in
sub
push
test
pop
sete
fwait
int
mov
into
call
and
test
fisttps
sbb
add
cltd
ljmp
or
test
scas
sahf
std
add
jne
sub
daa
mov
mov
adc
xchg
or
lds
enter
mov
adc
sbb
or
jl
cmp
dec
dec
int
setbe
test
icebp
test
in
lods
int3
push
dec
add
sbb
jo
or
sbb
push
out
stos
out
popf
sub
frstor
dec
pop
cltd
mov
push
ljmp
add
sti
insl
inc
adc
inc
xor
dec
mov
cmp
and
dec
sbb
rolb
fbld
add
ljmp
xchg
adc
cmpsl
rolb
cltd
stc
add
cmp
idiv
sbb
sti
pop
test
rolb
cmpsl
rcll
in
push
sti
test
xor
xor
fcmovnbe
paddw
inc
push
pop
cltd
into
sbb
scas
lods
lods
sbb
cmpsb
and
xchg
adc
cltd
jo
xchg
or
cli
test
or
data16
mov
or
into
pop
gs
mov
xchg
or
fnstsw
ds
sub
in
mov
sub
sub
sbb
pop
dec
sahf
and
dec
lea
and
jae
mov
ds
les
mov
lock
and
or
pop
push
xchg
ja
cs
pusha
std
in
aad
dec
xchg
sbb
cmpsl
or
push
adc
mov
fmull
push
push
inc
cltd
pop
out
mov
cmpsl
mov
dec
fucomi
mov
xlat
dec
test
les
std
adc
lods
pop
adc
aad
xor
mov
in
into
scas
fildll
and
pop
imul
outsb
inc
push
lcall
hlt
lea
xchg
call
sub
pop
pop
iret
add
cmp
inc
mov
mov
mov
xor
push
out
orl
data16
testl
jb
ret
mov
or
dec
dec
sub
add
xor
push
lods
sbb
pop
fimull
jae
inc
push
lea
adc
es
sub
mov
add
jne
imul
cld
lahf
pop
inc
push
aam
mov
cmc
add
fstl
and
sub
xor
push
jb
xchg
cmp
mov
jno
jmp
or
cmpsb
mov
rclb
dec
mov
ja
outsl
in
fwait
push
out
xor
dec
outsl
in
push
aas
xchg
fidivs
xor
loop
jmp
test
outsb
loop
adc
dec
and
dec
fwait
movsb
pop
mov
or
rcrb
pushf
mov
jecxz
mov
int3
fnstsw
je
mov
xor
mov
and
pop
and
repnz
xchg
mov
out
add
add
ss
sbbl
movsl
fcomi
and
and
mov
xchg
imul
sbb
fmull
repz
rcrl
jno
and
lret
test
pop
pop
add
in
ret
or
cmp
mov
out
jb
in
push
xor
bnd
cmpsb
push
mov
sarl
outsb
mov
or
mov
pop
xchg
xchg
or
push
test
dec
adcl
sbb
inc
test
adc
cmp
movsb
mov
cmp
lods
rcl
mov
cmp
jle
inc
popa
fbld
mov
repz
cmc
in
inc
movsl
stos
mov
add
fcoms
mov
inc
add
mov
out
bound
shlb
pusha
enter
andb
insl
jl
add
xchg
push
test
fsubs
add
sahf
pop
push
into
bound
cmpsl
imul
dec
adcl
int3
lcall
popf
sbb
sti
je
dec
mov
cmpsb
or
negl
mov
jecxz
mov
mov
loop
loopne
xor
inc
movsl
dec
test
mov
inc
jecxz
sub
add
rcl
sahf
cmpsl
jb
neg
pushf
xor
xchg
shl
add
add
in
gs
into
clc
icebp
xor
ret
rclb
jmp
loope
jns
cmp
sbb
sbb
icebp
inc
dec
iret
outsl
mov
in
pop
add
in
and
jmp
hlt
ss
loop
inc
or
jg
pminsw
jno
push
insb
lds
xchg
mov
addr16
mov
jae
mov
iret
or
push
mov
xorl
jnp
jnp
cmpsl
inc
push
xor
out
iret
sbb
push
fcmovne
lea
pop
scas
test
or
jne
and
cmp
or
dec
inc
je
popf
adc
dec
bnd
outsl
jmp
mov
dec
mov
dec
mov
mov
inc
pop
jle,pt
mov
jmp
into
lcall
xor
dec
inc
sub
mov
push
aad
push
popa
add
daa
xchg
sar
mov
scas
jg
sub
jne
sbb
and
adc
notb
mov
addr16
jmp
mov
xchg
fldenv
cmp
fs
ret
dec
or
rcrb
gs
cmpsl
pop
arpl
mov
rolb
sub
lcall
outsl
xor
cmp
ja
lock
lcall
stos
sbb
mov
jp
pop
inc
das
pop
inc
cmp
mov
sar
std
andl
and
jno
mov
and
xor
pop
jl
lret
push
xor
push
jb
lds
push
xor
mov
inc
inc
push
jb
xchg
lods
sbb
jne
mov
mov
xchg
scas
rol
aas
sub
nop
ss
and
dec
xchg
ret
xchg
sahf
mov
test
sti
cmc
orl
push
inc
push
xchg
or
xchg
xor
push
cmpsb
push
xchg
out
in
cltd
int3
in
mov
jp
pop
inc
sbb
push
daa
dec
lcall
adc
cwtl
dec
das
arpl
xchg
call
cld
and
stos
mov
adc
and
das
push
mov
mov
ds
shr
mov
adc
or
xchg
icebp
fstl
adcb
sub
scas
push
shlb
shrb
aad
pop
jl
mov
or
jbe
fmuls
rcrb
mov
fisttps
inc
in
cs
push
lahf
cltd
adcb
cmpl
sbb
sbb
ficomps
clc
push
repz
sub
jmp
sarb
in
xchg
sbb
adc
rol
add
push
mov
adcb
or
test
fs
or
imul
mov
mov
inc
jns
jge
jl
pop
add
cmp
pusha
jb
lods
mov
jg
dec
mov
xchg
ror
jbe
push
rcrw
rolb
icebp
clc
pop
ja
sbb
ret
inc
inc
xchg
ficoml
jle
xchg
dec
fisttps
xchg
pop
rcll
loop
fwait
in
cmp
lods
das
outsl
cltd
in
xchg
rcrl
in
sub
and
dec
inc
call
pop
sbb
test
leave
mov
out
sub
xor
stc
sub
subb
into
fmul
dec
mov
mov
sub
cmpl
clc
cltd
sbb
cld
fwait
dec
lret
aad
mov
jle
fstps
leave
rclb
xor
jne
movsl
xchg
inc
xchg
cmc
ljmp
mov
cmc
fcoms
mov
addl
mov
jbe
pop
sti
push
cmp
mov
dec
test
bound
jb
dec
imul
clc
lods
xchg
jge
lds
cmp
and
pusha
faddl
aaa
sbb
test
cltd
xor
pop
test
xchg
nop
notl
jb
je
ljmp
pop
repnz
test
popa
jno
dec
push
jl
and
lods
cmp
jo
jge
rclb
mov
cltd
insb
jmp
stos
decl
je
jg
xchg
stos
cmp
scas
pop
mov
nop
in
in
lahf
inc
out
and
or
cmp
icebp
xchg
gs
and
bound
add
push
cmpsl
lods
test
or
xchg
add
cmp
xchg
lods
sti
fisttpl
lcall
loop
rorb
sahf
addr16
adc
lea
push
sub
inc
add
xor
andb
add
dec
add
push
cmp
sbb
stc
stc
sub
xchg
mov
mov
stos
dec
mov
mov
xor
xchg
pop
or
or
fnsave
mov
hlt
inc
out
sbb
nop
loope
lods
mov
js
cmp
jo
imul
ss
mov
imul
mov
loope
sbb
call
mov
aaa
add
mov
stc
mov
mov
sti
pusha
push
mov
int
xor
movd
mov
xor
ljmp
fmul
out
in
pop
popa
lods
jmp
mov
inc
jge
adc
cmp
dec
xor
inc
jl
and
sbb
push
xchg
jnp
add
jne
mov
jns,pt
and
xor
xor
imul
push
js
sti
int3
push
sti
sti
mov
cltd
bound
push
arpl
mov
xchg
push
loop
and
jo
sub
xchg
push
xor
push
cmc
or
enter
cwtl
inc
fmul
test
pushf
fsts
pop
sbb
xchg
xor
mov
in
stc
sbbl
fs
jne
rclb
lea
repnz
hlt
sbb
je
sbb
ret
ret
sbb
ja
and
add
je
sbb
mov
dec
lret
imul
dec
push
pusha
jnp
cli
xlat
xchg
loope
imul
jnp
pusha
insl
daa
hlt
add
xchg
jle
jbe
jno,pt
stos
xchg
inc
nop
and
or
or
xchg
data16
sarb
or
inc
cmc
push
mov
into
dec
xchg
or
inc
xlat
dec
push
dec
outsl
add
shl
cltd
ja
xor
cmpb
mov
test
inc
sbb
fsubrs
xchg
aam
cli
jle
dec
xor
mov
adc
pop
lret
movsl
mov
adc
es
inc
orb
int
ljmp
jno
inc
int3
test
push
sti
pop
sahf
mov
fsubrp
ljmp
mov
rcrl
lret
fimull
sub
mov
fildl
or
or
or
mov
aad
xor
ljmp
and
gs
js
popf
mov
cmpsl
scas
mov
ss
pusha
sub
lahf
in
outsb
fld
mov
jp
enter
sbb
out
inc
dec
add
sub
clc
imul
stos
std
fmul
inc
sub
scas
insl
push
add
mov
and
sbb
fs
fbld
pop
mulb
cmp
sub
push
push
xchg
lret
mov
push
push
jb
int
sub
into
or
xlat
mov
movsb
lahf
mov
fdivs
stc
hlt
das
add
enter
lods
pop
dec
test
pop
and
insb
out
cmp
jl
and
xlat
imul
xlat
add
adc
sub
stos
sub
xor
inc
ljmp
cmpsb
fadds
fwait
pop
cli
clc
xchg
ret
fidivrl
test
dec
pop
push
adc
hlt
ret
jg
mov
and
aam
stc
test
bound
clc
movsb
insl
cmp
fisubs
push
mov
mov
cmp
inc
push
push
xchg
mov
xor
jecxz
icebp
cld
jnp
push
xchg
cli
popa
lea
xchg
jp
sti
jb
mov
adc
in
jge
inc
dec
fdiv
cltd
push
sub
sti
fwait
jecxz
mov
lock
jmp
mov
ret
push
imul
in
and
clc
push
aas
dec
sub
pop
push
xchg
repnz
xchg
push
mov
fcomip
inc
mov
gs
aam
inc
jb
cli
clc
mov
cld
mov
push
dec
adc
mov
rcl
xor
xor
insl
adc
ss
outsb
add
jmp
dec
dec
insb
insb
xor
dec
imul
out
lret
xor
idivb
xchg
sbb
mov
mov
push
push
jecxz
mov
mov
jns
add
dec
jmp
cmpb
les
test
adc
xor
lds
cmpxchg
xor
cmp
fstpl
retw
std
jnp,pn
hlt
loop
add
xchg
cmp
test
pop
cwtl
repnz
pop
insb
iret
subb
cld
filds
test
add
gs
xchg
sub
imul
mov
dec
les
jmp
mov
insb
dec
ret
xor
dec
and
cmp
or
sbb
pop
pop
jb
and
call
push
cmp
sti
ss
in
xchg
mov
dec
xor
mov
lods
sbb
subl
push
addb
je
rcrb
add
mov
cs
mov
sbb
loope
in
ljmp
sarl
mov
mov
aas
sub
aas
cmp
sub
loope
push
clc
jno
sbb
and
xor
mov
xchg
aam
mov
adc
rcrb
xor
std
cli
nop
out
push
mov
xchg
xchg
cli
out
inc
cmp
divl
cli
dec
mov
or
test
aas
xchg
outsl
push
insl
aas
popa
cmp
jbe
sbb
jo
pop
adc
add
es
fdivs
scas
jp
rorl
mov
aas
pop
adc
dec
push
and
dec
mov
fimuls
inc
push
and
popa
out
mov
mov
lea
pop
add
add
mov
mov
lahf
cmp
jl
lea
inc
push
inc
adc
jns
test
das
int3
xor
mov
ret
popa
es
popa
mov
lcall
test
mov
lds
and
repnz
hlt
mov
dec
dec
adcb
fistl
push
dec
cmp
inc
cmp
nop
out
mov
adcl
lock
or
fwait
cmpl
mov
mov
jp
icebp
lret
push
out
dec
rol
adc
dec
sub
dec
fs
jnp
scas
imul
mov
movsl
iret
idiv
sub
push
cmp
insl
iret
sbb
mov
xchg
cli
xchg
push
hlt
push
stos
mov
add
jbe
and
out
lock
mov
cmp
in
jb
jb
xchg
cld
insl
inc
imul
int
lret
lods
and
out
fldl
xlat
mov
xchg
dec
dec
mov
cmp
pop
stos
push
pop
add
scas
or
roll
pushl
fstps
add
dec
int
shld
sahf
in
cmp
stos
and
push
jmp
mov
sub
and
fidivrs
push
inc
push
adc
xor
jl
loope
out
sbb
adc
repnz
dec
notl
repz
addl
sbb
cmp
loopne
push
cmpb
xchg
mov
rclb
stc
mov
dec
mov
or
jmp
nop
mov
adc
jb
inc
cli
dec
jl
fsub
mov
or
shll
cmpsl
jns
cmpsb
cs
push
jl
insl
gs
push
out
stc
add
and
lret
fisttpll
xor
push
orb
push
and
xchg
mov
push
jns
mov
mov
xorb
ror
dec
cmp
mov
call
in
jae
add
xchg
dec
lahf
dec
loopne
jno
inc
insb
ret
pop
dec
sbb
mov
movsb
push
test
sbb
cmp
std
cltd
push
sbb
lds
or
mov
repnz
sub
mov
ja
mov
lahf
add
pop
insb
or
dec
out
push
mov
iret
adc
fisttpll
cld
lret
incb
insb
jp
pop
into
lret
and
jno
into
mov
mov
cmpsl
xor
aaa
push
mov
fcoml
cmp
xchg
roll
mov
mov
mov
pop
jno
jp
movsl
pop
dec
mov
int
addb
in
outsl
idiv
lret
stc
adc
sbb
bound
cmp
ljmp
xor
mov
xor
int
inc
leave
xorb
xchg
cmp
push
sbb
push
xor
inc
or
or
loopne
cmc
stos
fwait
stc
loope
rcll
pop
sbb
dec
sti
push
pop
adc
lret
pop
cmp
push
cltd
outsl
pop
pusha
xchg
clc
ljmp
daa
dec
sub
in
inc
xchg
xchg
sbb
imul
jnp
push
and
push
mov
pop
int
mov
cmp
jmp
or
cmp
lcall
movsb
in
mov
sti
aad
add
inc
mov
adc
or
pop
in
mov
enter
mov
stc
je
fsub
orb
dec
sbb
mov
jb
movsl
stc
filds
mov
and
mov
push
cmp
das
enter
dec
mulb
jb
dec
mov
mov
test
imul
cmp
or
inc
pushf
test
cmpsb
loopne
mov
pop
je
mov
sbb
enter
dec
jae
and
adc
push
mov
loopne
in
fsubr
pop
movsb
sahf
inc
adc
sbb
inc
inc
jne
ljmp
push
aad
xor
pop
insb
cwtl
sahf
pop
xlat
add
pop
daa
mov
lret
scas
cmp
jmp
testl
iret
pop
xchg
mov
push
andl
push
push
loop
loopne
in
scas
int
popf
sub
movsb
or
mov
test
push
loop
mov
lods
push
jge
aaa
xchg
sub
std
mov
mov
rcrb
mov
or
xchg
sti
xchg
xchg
inc
push
and
pop
or
pop
sbb
pusha
enter
dec
and
pop
sub
mov
mov
call
push
orl
cmp
repnz
test
or
out
sahf
jne
ret
or
fstl
adc
clc
inc
insl
mov
mov
adc
dec
call
and
push
dec
xor
sbb
clc
xlat
cmp
jge
mov
inc
xchg
xor
xchg
xor
xchg
daa
inc
imul
mov
sahf
jbe
mov
pop
out
test
xor
and
cltd
or
mov
mov
push
lea
mov
mov
testb
loopne
imul
mov
fnstsw
lahf
stos
ja
dec
inc
orl
add
lret
mov
andb
sub
mov
mov
dec
and
fistpll
xor
sub
lret
rcrl
repz
and
jnp
xchg
sbbb
or
push
lods
shrl
pop
stos
es
mov
popf
mov
cmpsl
jne
cs
dec
imul
je
imul
icebp
sbb
mov
inc
xor
xchg
and
mov
lock
mov
aas
jp
dec
mov
dec
jae
int3
in
push
sahf
sub
cs
adc
es
ror
lods
icebp
repnz
nop
lea
mov
nop
sub
jne
lcall
sbb
frstor
movsb
mov
scas
xchg
jne
dec
cmpsl
sbb
xchg
adc
outsb
mov
xchg
mov
mov
dec
mov
mov
or
stos
mov
and
dec
push
xchg
icebp
ljmp
inc
sub
testl
imul
push
push
mov
addr16
xchg
lahf
test
je
pop
out
mov
inc
inc
dec
lock
push
push
mov
movb
iret
dec
adc
testl
or
pop
push
xchg
scas
call
add
test
dec
mov
adc
in
mov
mov
push
testl
push
hlt
in
inc
mov
jns
roll
pop
jp
xor
dec
dec
xchg
adc
xor
outsb
or
cmp
cltd
int
sbb
mov
jp
aam
jns
mov
aad
push
test
mov
cmpsb
jno
cmp
jg
pop
mov
insl
pusha
shll
jb
dec
sahf
add
lods
mov
cli
lahf
inc
fnstsw
out
or
out
cmp
xor
push
hlt
mov
loop
in
imul
jnp
sbbl
adc
lock
mov
push
push
ljmp
sti
xchg
pop
and
inc
push
xchg
fcmovnu
mov
and
test
fdivrl
mov
mov
xchg
icebp
fmulp
jbe
imul
daa
outsb
lcall
mov
fcmove
movsb
andb
dec
pusha
mov
adc
xorb
lret
xor
lret
test
xlat
repz
incb
jle
cmp
xchg
cmc
jne
lods
arpl
aaa
adc
test
xchg
loopne
mov
or
popf
mov
out
orb
data16
pop
xchg
or
js
mov
cltd
push
gs
mov
add
leave
loopne
mov
decb
lock
fisttps
in
pop
aam
fwait
subl
push
push
iret
pop
test
addr16
push
clc
or
fsubrs
or
sarb
test
sbb
outsl
cltd
or
cld
mov
jne
fildll
aad
cmpsb
push
or
pop
iret
adc
out
jmp
push
cwtl
mov
pop
imul
in
xlat
mov
test
leave
or
out
jo
jbe
rcrb
sbbb
xchg
xor
mov
mov
mov
dec
mov
outsb
sbb
push
mov
jl
or
inc
pmullw
hlt
aaa
imul
pop
cmc
push
sub
sbb
aas
das
mov
sub
pop
in
inc
jae
push
pop
mov
loopne
xchg
inc
cmpsl
jge
js
stc
shlb
cli
inc
and
lods
dec
cld
lods
jecxz
dec
int
in
adc
dec
jg
push
cmp
push
in
insb
push
xor
add
jle
adc
sbb
mov
dec
cmp
push
cltd
sub
add
nop
out
push
pop
dec
lock
inc
sbb
dec
nop
loopne
adc
nop
push
xor
insb
insl
ds
fisubs
js
imul
xor
push
icebp
popf
sbb
jge
in
push
in
push
inc
mov
push
push
sub
pop
pop
jmp
inc
fdivs
mov
out
or
inc
cli
rcrl
or
and
push
push
mov
xchg
lahf
push
mov
cmpb
fisttpl
loopne
mov
xchg
add
cli
bound
pusha
cwtl
inc
sub
pop
repnz
jg
out
mov
inc
in
dec
lret
sub
adc
or
pop
dec
cltd
int3
dec
mov
fadd
fcmovne
xor
out
push
fstl
mov
idivl
lea
sarb
sbb
mov
leave
push
cmp
nop
shlb
scas
sti
clc
daa
call
and
fwait
rcrl
or
push
popf
ss
jb
sbb
xchg
xchg
mov
push
dec
test
sub
stos
leave
ljmp
fwait
dec
pop
scas
push
sub
push
and
ret
cmpsl
faddl
lcall
icebp
xorl
and
sub
stos
cld
aam
bound
lock
scas
push
aad
shr
inc
imul
outsl
cmp
add
or
push
mov
push
push
or
int3
inc
sbb
mov
mov
aaa
gs
sbb
lret
mov
jecxz
cmp
andl
and
dec
push
or
js
push
loope
data16
decb
ret
dec
into
jg
data16
cmp
cwtl
loopne
aad
jns
mov
dec
sbb
xor
and
mov
and
mov
push
xchg
dec
insl
aam
das
xchg
icebp
push
ja
or
pop
je
sti
data16
out
dec
push
frstor
fdivrs
rcl
and
jg
sub
sub
les
movsb
mov
and
int3
pop
xor
jnp
andl
hlt
cmp
cld
mov
inc
shrl
jge
mov
ret
dec
adc
mov
push
ljmp
dec
out
dec
or
imul
jno
in
pop
or
xlat
mov
aaa
cmpsw
jle
or
loope
cmpsl
and
mov
in
dec
mov
inc
ja
pop
movsl
or
cltd
pop
lods
stos
ss
imul
inc
ja
lock
mov
fdivrs
and
xchg
mov
lahf
test
adc
sbb
lds
or
jg
adc
das
mov
fidivrs
xchg
sub
fwait
cmp
in
and
mov
xchg
add
int3
dec
cmp
add
popa
xor
push
xor
push
shr
mov
dec
adc
decb
shl
sbb
cwtl
je
out
fstpt
sub
es
jne
repz
sub
addr16
aaa
jg
or
lret
cmpsl
sahf
pop
and
pop
sbb
shlb
dec
lahf
sysenter
cmp
lret
in
bound
sbb
std
mov
jecxz
dec
in
repz
sti
hlt
cs
adc
pop
xchg
xor
or
jb
cmpsb
mov
or
dec
scas
cmpsb
pusha
into
ljmp
pop
cli
dec
fcompl
adc
outsb
out
pop
mov
mov
jnp
jae
sub
popf
sub
push
xchg
dec
imul
arpl
sahf
push
pop
jp
mov
pop
stos
movl
jns
and
dec
arpl
add
std
inc
data16
mov
xor
ret
fists
add
sti
cmpsl
mov
push
push
xor
fiaddl
outsl
pushaw
fs
fistps
mov
mov
fcompl
ja
cmpsl
xor
mov
jmp
xchg
push
or
sbb
js
movsb
push
mov
xchg
mov
pop
ds
leave
fs
jb
cwtl
lcall
imul
pop
lock
lea
mov
inc
sbb
adc
sbb
insb
jle
ljmp
and
pop
sub
xchg
sahf
hlt
lret
and
pop
sbb
lea
fcmove
imul
es
mov
or
insb
cmp
mov
pop
in
stos
sysexit
xchg
lret
adc
imul
scas
insb
xchg
stos
inc
repz
mov
fbld
aas
xor
aam
pop
cmp
push
sbbl
nop
xchg
mov
out
push
sbb
ror
lea
jne
in
outsl
int3
aaa
dec
int
sub
fstpt
cmp
mov
adc
hlt
cmc
cs
xor
addr16
lret
cmp
xchg
je
fs
xchg
hlt
push
dec
jo
xor
je
push
push
mov
add
or
aas
xor
repz
push
lcall
pop
jecxz
xor
out
xchg
xlat
je
cmc
test
lods
add
cs
out
pop
fld1
rorl
popa
repz
rorb
sbb
shr
lret
xlat
mov
cmp
subb
push
cmp
fucompp
test
mov
cmp
cmc
push
rcrl
jmp
cmp
pop
cli
inc
inc
inc
std
std
xchg
push
arpl
xchg
or
jae
lahf
roll
nop
push
xchg
push
icebp
xchg
mov
popa
cmpsl
xchg
cli
dec
dec
rorl
mov
filds
push
insl
xor
cmp
adc
inc
jp
jb
pop
daa
ret
sub
aad
int
and
stos
push
aaa
adc
ret
ljmp
add
cmovo
inc
and
es
stos
mov
frstor
popa
xor
jmp
add
cwtl
sbb
sub
repz
fs
cmpsl
push
loop
and
in
inc
ljmp
rcrb
mov
sub
cs
fldenv
popf
dec
idivb
icebp
sub
add
xchg
inc
test
jae
lret
mov
rcrb
repz
in
sbb
sub
xchg
dec
and
mov
mov
pop
addr16
mov
xor
inc
fdivl
cld
int
mov
sub
test
push
dec
in
xchg
fdiv
mov
xchg
add
icebp
ja
cmp
aam
mov
int3
mov
pushl
insb
push
pop
in
jae
or
fstl
mov
shll
fnstsw
push
push
adc
fnstcw
je
mov
add
sub
cmp
nop
mov
movsb
mov
and
cmp
scas
add
and
iret
and
cmp
pop
cmpsb
sbb
and
andb
jb
stos
test
push
scas
mov
push
inc
mov
montmul
cmpsb
inc
iret
add
ljmp
adc
cmp
inc
inc
popf
dec
sahf
outsl
nop
mov
into
xchg
bound
sub
mov
or
aam
ss
fsts
clc
stos
test
and
adc
arpl
imul
aaa
and
stos
pusha
adc
and
xor
testl
jecxz
imul
fists
push
dec
into
jl
dec
inc
je
movntq
sub
sbb
push
je
addb
out
jle
pop
inc
or
pop
dec
les
sub
inc
popf
jmp
dec
sub
and
jbe
xor
add
add
data16
adc
pop
je
push
push
in
add
or
out
cmp
or
fnstenv
js
mov
out
push
repz
popa
mov
add
push
sbb
xchg
xor
sbb
jmp
lcall
pop
xchg
aad
mov
cli
xchg
and
dec
imul
and
mov
sbb
sbb
loop
fidivs
and
xchg
rcll
inc
addb
shrl
lcall
ljmp
adc
pop
scas
xchg
add
frstor
push
dec
or
shlb
sub
push
jecxz
aaa
pop
arpl
nop
ljmp
stc
push
dec
test
mov
sub
sub
int3
hlt
popa
fdivrl
dec
dec
jnp
icebp
jecxz
loope
mov
pop
dec
jge
push
pand
mov
pushf
out
mov
push
daa
daa
push
cltd
push
sbb
and
in
push
sbb
movsb
or
jae
in
call
pushf
scas
pop
sti
sbb
or
and
mov
cmc
roll
jno
jae
jno
jl
shlb
in
inc
mov
repnz
je
or
adc
imul
jp
push
andb
stos
in
pop
add
sahf
sbb
xchg
push
sub
lret
adc
inc
mov
mov
or
cmpsl
jle
add
addr16
inc
jno
xor
movsl
fwait
cmpsl
stos
mov
mov
iret
dec
das
loope
fnsave
ffreep
adc
jno
sbb
jmp
leave
hlt
nop
cmp
pop
jb
lods
data16
stos
stos
push
sbb
das
fbstp
sti
pop
mov
sahf
js
ffreep
inc
scas
pop
inc
jo
imul
xor
cmp
jp
pop
adc
loop
cmc
adc
add
xchg
adc
xchg
pop
dec
jne
sub
movsb
ret
dec
sub
testl
imul
shll
je
mov
loope
xor
std
xor
aad
mov
push
push
xchg
test
enter
in
insb
out
rorb
ret
jo
movsl
sbb
push
xor
pop
sub
aad
and
movsl
adc
cmpsl
das
lcall
outsl
cmp
pop
xchg
ljmp
in
test
push
mov
mov
sub
inc
xchg
pop
dec
lods
bound
pop
imul
shll
lods
sub
add
and
lret
ret
dec
adc
mov
mov
pop
into
xchg
addr16
sub
lods
inc
movsb
jge
adcb
fisttpll
les
jl
leave
sbb
inc
push
lock
pushf
daa
ja
jno
enter
add
fstps
stc
mov
push
push
aaa
loope
movsl
mov
inc
outsl
lahf
sbb
mov
pop
push
xchg
stos
pop
add
pop
fbstp
mov
push
icebp
loope
rcrl
stos
mov
pop
dec
cltd
test
std
jns
jl
jecxz
xor
hlt
xchg
lds
xchg
imul
jp
imul
das
cmp
sahf
sub
pop
cld
push
std
jbe
clc
js
sarb
inc
push
push
movl
inc
in
xchg
clc
jae
fistpll
pop
xchg
cwtl
pop
jecxz
addr16
sbb
jle
xchg
orb
push
insl
add
roll
imul
and
push
dec
std
sbb
adc
rcl
int3
lea
aad
cmc
into
cli
pop
test
imul
scas
inc
aam
cmc
add
lods
stos
sbbb
dec
xchg
rcrl
push
push
inc
lods
dec
jne
or
scas
int
sbb
mov
or
aam
imul
add
fdivrs
test
cwtl
gs
push
in
push
into
sub
push
sbb
sbb
sub
mov
sbb
cmp
sub
cli
add
movsb
jae
jnp
jno
sub
xor
setl
inc
jne
lds
jo
cmp
idivb
in
sbb
jmp
pop
out
xor
pop
mov
ret
mov
jo
insb
xchg
stc
iret
repz
xchg
sbb
xlat
loopne
inc
fcmovu
fists
cs
cwtl
inc
or
imulb
fadds
adcb
lock
cmp
hlt
out
scas
aaa
push
out
xor
loop
sub
movsb
movsl
fimuls
in
jns
jecxz
mov
jl
dec
movsl
fwait
jge
xchg
add
or
enter
pop
seto
imul
push
inc
mov
ret
scas
pop
add
lods
inc
shlb
ja
cmp
and
lret
push
cmpl
xlat
push
inc
scas
roll
addr16
movsb
les
ss
sub
repnz
stos
mov
enter
aam
push
sbb
xor
test
cmp
arpl
lret
mov
jb
dec
sbb
mov
out
sub
iret
sti
subl
loopne
outsl
push
add
lock
sub
scas
loope
loopne
in
cwtl
mov
adc
mov
xor
out
cmp
icebp
pusha
mov
lcall
fnstcw
add
ret
arpl
enter
push
xchg
popf
aad
rolw
icebp
int3
jnp
lahf
dec
push
jl
adcl
inc
sar
jns
mov
jnp
xchg
sub
clc
inc
addl
pop
jecxz
mov
jb
inc
mov
cmp
mov
sbb
outsl
popa
fsts
pop
ljmp
shll
divb
sub
and
mov
mov
hlt
dec
fnstenv
std
adc
stos
cmp
inc
mov
daa
leave
pusha
in
cmp
mov
movl
jbe
iret
sbb
xor
repnz
xchg
cmpl
add
data16
cli
lock
cmp
stc
fnstenv
stc
xchg
pop
je
fiaddl
nop
sbb
popf
push
pop
inc
ds
test
addr16
add
mov
js
mov
loopne
mov
jnp
jne
fnstsw
loopne
ret
sub
push
xchg
js
jno
jnp
pusha
clc
cld
inc
inc
arpl
jno
popa
lock
mov
mov
mov
inc
cmp
push
push
pop
and
inc
add
jp
sub
push
or
xlat
test
push
push
adc
aam
lds
icebp
pop
inc
call
jecxz
push
ss
xor
mov
out
movsl
xchg
sbb
test
cltd
xor
and
jg
repz
sarb
insb
insb
mov
test
sub
add
cli
mov
stos
shl
mov
shlb
mov
push
in
mov
cld
pusha
push
pop
cmp
std
lods
jns
xor
jp
arpl
or
or
pop
jo
jns
jb
jp
lcall
ljmp
mov
and
or
or
jno
adc
xor
fnsave
fldl
popf
pop
xor
push
cmp
int
ret
sub
xor
scas
orl
outsl
stos
outsb
pop
inc
or
add
dec
mov
cmp
outsl
mov
push
push
iret
lods
fcompl
lcall
std
shl
lea
pop
out
inc
jecxz
popf
iret
xor
mov
and
push
or
adc
aaa
test
mov
mov
cmpsl
stos
fdivl
jb
push
ss
dec
or
fildl
inc
sarb
ret
jl
pop
mov
cmpsl
lds
cmpsl
das
and
pop
mov
loope
and
sbb
push
ss
insl
fs
dec
pop
pop
movsb
sbb
nop
rcr
dec
sub
dec
fidivs
cmpsl
pop
sarl
mov
jmp
xchg
push
inc
addr16
or
stos
mov
das
cmp
mov
adcl
lock
cmp
jo
aaa
inc
mov
ljmp
sahf
icebp
cmp
or
adc
jnp
xchg
push
mov
pop
addl
sbb
adc
sti
repz
mov
pop
cltd
xchg
fdivrs
fisubs
pop
and
add
xchg
enter
fbld
mov
jge
pushf
xor
or
test
scas
out
jmp
shll
jmp
mov
mov
lret
jno
mov
das
xchg
aad
das
movsl
shrb
frstor
inc
mov
insb
inc
fidivs
test
xchg
add
inc
jge
clc
sahf
pop
jg
es
jecxz
xchg
inc
add
testb
xchg
fildl
jbe
jo
imul
rolb
jo
sub
push
xor
cli
dec
mov
xlat
ret
add
sub
cmp
mov
insb
jmp
and
push
cmpsb
pop
xor
push
test
rcrl
mov
aas
jl
aad
stc
lds
stos
shrl
mov
arpl
jbe
aad
mov
mov
or
testl
js
jmp
test
js
aaa
lea
jl
in
ficompl
outsl
iret
inc
mov
mov
mov
or
ret
pop
repnz
test
test
mov
inc
sbb
dec
pop
clc
outsb
je
lret
mov
popa
push
jae
mov
sub
lcall
fwait
fwait
call
js
and
push
dec
std
pop
and
xchg
or
in
out
divl
mov
idivb
ds
pop
cmpsb
sub
pop
mov
test
inc
push
out
sbbl
push
dec
leave
leave
stos
in
jno
mov
sub
fnsave
push
cld
sbb
mov
pop
xor
sbb
lods
jg
in
mov
adc
fbld
jle
out
adc
in
lods
dec
cmp
lea
add
xor
adc
imul
pop
in
ja
add
mov
ljmp
jo
cltd
sub
sbb
shrb
and
mov
xchg
shlb
inc
jmp
jnp
addr16
xor
das
push
stc
inc
pop
cmp
jl
pop
mov
std
sub
je
inc
or
cmp
adc
enter
mov
rcl
jmp
cltd
popf
pop
mov
jae
push
xchg
fnstsw
jge
cmp
xor
mov
lea
loopne
ja
xchg
decb
or
fildll
fwait
dec
and
push
xchg
ss
adc
les
orl
dec
in
pop
cmc
mov
imul
aaa
inc
sti
stos
adc
lods
xor
xchg
std
aad
jno
fdivrl
dec
scas
jle
and
sbb
lock
pop
xor
test
mov
sahf
test
xlat
add
cmp
inc
pop
std
pop
add
lods
stc
clc
add
jg
mov
or
lahf
or
std
imul
xor
mov
iret
cmp
xlat
out
aam
mov
mov
adc
lods
stos
push
jbe
lret
enter
mov
and
data16
pop
pop
aam
arpl
adc
mulb
neg
adc
mov
dec
int3
xor
mov
ljmp
popa
inc
add
lcall
jge
imul
out
mov
jnp
jae
dec
lret
pusha
aas
stos
mov
and
loopne
jbe
mov
sti
cmp
jecxz
nop
push
mov
pop
in
and
lret
pop
sbb
mov
xchg
fwait
dec
and
nop
ss
mov
push
test
das
les
xchg
pop
ljmp
scas
add
adc
sub
inc
and
sub
jno
push
clc
lock
outsl
addl
das
xchg
sub
jmp
mov
jne
std
inc
push
and
sti
aaa
loopne
in
xor
jo
sbb
pop
sub
jbe
mov
jl
test
es
subl
sbb
push
mov
mov
jae
xlat
out
push
std
pop
jb
outsb
jo
xor
popa
addr16
ror
jl
mov
xchg
fstps
cli
fldlg2
or
stos
xor
xor
shll
dec
sbbl
jl
stos
shrl
add
add
inc
ss
pop
lock
mulb
aaa
lds
add
call
jl
das
pop
rorb
lods
mov
ljmp
xchg
out
loope
or
fiaddl
test
das
movsl
test
mov
sub
mov
mov
push
mov
outsl
xor
test
xchg
jb
insl
mov
adcl
ja
push
inc
shr
lahf
dec
mov
movl
jmp
inc
test
fsubp
sub
in
dec
cmpl
adcb
sti
sbbb
call
or
cmpb
dec
push
mov
pop
sbb
cmp
sbb
push
mov
mov
fdivl
sarb
pop
cmp
push
mov
push
imul
aad
xor
lea
sub
inc
test
mov
int
sub
popf
les
mov
shlb
xor
cmp
dec
adc
xchg
sbb
mov
push
lahf
push
mov
pop
fistl
loope
push
and
sbb
pushf
pop
cmp
lock
jae
je
lret
inc
fwait
adc
mov
popf
roll
and
adc
mov
cli
lahf
dec
xchg
pop
int
andb
xchg
adc
sbb
or
inc
sbb
pop
mov
xor
sbb
cmp
pop
mov
mov
xchg
inc
xchg
mov
call
roll
mov
rcrb
cmp
addb
adc
dec
ja
addr16
insb
ja
jg
xchg
int
inc
hlt
outsb
mov
push
inc
pop
adc
mov
out
mov
dec
mov
push
je
adc
dec
sub
pushf
adc
jl
xor
jecxz
xor
in
mov
mov
mov
inc
daa
push
out
call
cmp
jle
mov
sbb
lret
cmp
ljmp
outsb
mov
outsb
or
int3
sti
and
push
flds
pop
ljmp
mov
mov
pop
je
inc
repnz
dec
and
fcmovne
arpl
cmp
inc
popa
pop
adc
push
fisttpl
push
shrl
mov
arpl
adc
or
sahf
lret
stos
faddl
ret
push
adc
xchg
sub
dec
mov
sub
jbe
arpl
ret
xor
sub
inc
insb
mov
inc
xor
aam
int
lcall
and
mov
xor
mov
mov
stos
sub
bound
lret
cmp
cwtl
or
adc
xchg
lods
rcll
mov
jo
sbb
gs
fidivl
mov
jno
loopne
dec
and
repz
scas
fstps
cmc
push
mov
adc
sahf
sbb
sub
push
xlat
mov
lods
sub
jl
cmpl
loope
cmp
cs
add
xor
fwait
inc
clc
xchg
pop
inc
outsb
lcall
mov
test
in
scas
jmp
mov
push
push
scas
imul
sub
dec
dec
cmp
fistps
jb
jmp
adcl
daa
xor
ljmp
iret
mov
dec
and
pushf
push
or
cmp
push
inc
mov
inc
and
push
xor
and
jne
push
xor
and
mull
dec
mov
je
ret
mov
jno
sarl
xor
pop
push
das
cli
repnz
push
inc
pop
cs
rcl
or
outsb
or
mov
cmpsb
xchg
movsb
cmc
ja
xchg
test
lods
cmp
pop
xchg
lret
test
push
cmp
fildl
shll
or
cmpsb
rcr
push
dec
sub
mov
xchg
pop
and
shlb
test
subb
push
mov
or
push
mov
xor
xchg
push
imul
mov
dec
repnz
xchg
rcl
and
xchg
push
icebp
sub
inc
mov
pop
mov
add
mov
cmc
sbbl
mov
pop
adc
cmpsl
out
popa
mov
mov
arpl
push
cmp
lds
arpl
insl
or
pop
outsl
pop
pop
jne
scas
and
add
jno
add
mov
pop
clc
test
adc
out
mov
xor
rdmsr
pushf
mov
nop
das
movsb
outsl
pop
and
cmpsl
cmp
xor
and
mov
repz
sub
xchg
test
sub
jge
pop
push
movsb
add
jnp
arpl
into
push
xor
pop
es
xchg
xor
jp
inc
add
outsb
sub
subb
jbe
dec
mov
mov
xchg
mov
or
jmp
fsubl
sub
insl
stc
addl
enter
mov
cmp
xchg
jge
xorl
scas
xor
sbb
sub
sbbb
adc
icebp
out
call
clc
jb
mov
rorb
push
sbb
dec
arpl
push
leave
insb
and
loop
ss
je
adc
pushf
ss
scas
push
lcall
inc
sbb
push
xorl
bound
cmp
jl
and
in
out
mov
mov
cld
cld
outsl
cs
xchg
dec
cld
xchg
jp
adc
fistpl
lds
sub
rcl
outsl
cld
test
cli
xchg
bound
stc
lcall
adc
xchg
ljmp
mov
movsl
scas
or
dec
outsb
mov
add
inc
negb
lds
adc
xor
xchg
dec
mov
cmp
in
bound
xchg
out
cli
imul
sbb
and
or
xchg
dec
cli
cmp
outsb
lahf
or
xor
sahf
cmp
clc
cmp
out
fmull
mov
aam
xchg
fsub
mov
cmp
pop
adc
divb
mov
mov
inc
mov
scas
sbb
in
xlat
push
int
loop
mov
repnz
movsl
insb
xchg
lret
out
cmp
mov
xchg
dec
or
adc
dec
sbb
mov
inc
pop
xchg
dec
ret
in
xchg
aad
or
xor
test
dec
subl
ja
dec
rcrb
shl
add
mov
mov
repz
adc
mov
mov
pusha
pop
xchg
sbb
push
push
mov
pop
dec
mov
xchg
ds
cltd
mov
loope
repnz
push
movsb
xchg
mov
icebp
cli
daa
dec
xchg
cmpsl
imul
mov
sbb
xor
or
xor
xor
mov
adc
icebp
in
fs
arpl
aad
cs
repnz
lock
cmc
ret
clc
xchg
mov
sub
mov
shrl
lcall
lcall
cmp
movsl
adc
inc
addr16
add
push
ds
movl
xchg
fiaddl
add
loop
cmp
stc
rcrb
jmp
fwait
xchg
jp
cltd
outsl
xchg
ss
mov
outsl
cltd
mov
xor
pop
iret
pop
xchg
jae
ret
pushf
inc
inc
mov
dec
jno
cli
xlat
cltd
mov
addr16
ficompl
imul
dec
inc
sbb
xlat
jnp
or
cs
pop
pop
ljmp
sbb
xlat
xor
xor
and
lahf
loope
in
dec
in
xchg
add
rorl
push
xchg
scas
lret
icebp
push
out
sahf
mov
inc
loopne
daa
inc
addb
enter
data16
xchg
in
mov
je
push
fcoml
cmp
xor
pusha
xor
mov
fwait
sub
xchg
push
or
and
cli
xchg
popa
dec
iret
mov
outsl
ljmp
mov
aaa
jecxz
pop
sbb
xor
inc
or
roll
or
xor
cmc
insb
push
outsl
push
mov
scas
aas
shlb
sub
test
cltd
ja
dec
std
push
jnp
mov
inc
jge
push
rcrb
push
or
jns
and
cvttps2pi
adc
mov
cs
outsl
mov
mov
sub
sub
jne
cmp
jnp
mov
out
subl
aad
sbb
jmp
outsl
sub
jae
inc
jge
inc
sahf
repz
fdivrp
mov
cmpsb
xchg
or
inc
faddp
outsl
std
xchg
inc
mov
mov
xlat
xchg
xlat
mov
add
out
adc
jg
push
inc
nop
mov
mov
mov
inc
or
dec
dec
mov
mov
jno
cmc
out
xchg
test
jae
es
xor
into
mov
inc
fiadds
pop
inc
pop
ljmp
test
adc
es
cli
or
test
add
pop
sti
in
dec
jns
repz
mull
std
inc
pop
es
jb
mov
add
xchg
scas
les
mov
idivl
inc
sub
sbb
mov
cmp
imull
je
imul
inc
mov
psubw
scas
idivl
test
pop
mov
push
int3
xchg
dec
sub
rcll
jge
cmc
insb
lcall
sahf
ljmp
mov
mov
push
rcl
cmp
and
add
push
add
or
cmp
out
pusha
mov
or
rorb
mov
sub
push
push
inc
jle
rcrl
cmpsl
insb
dec
leave
imul
jbe
in
mov
cmp
jle
push
pop
insl
and
cmp
pop
mov
les
mov
mov
pop
jno
mov
test
inc
cmc
jae
and
fistl
xor
pop
inc
fisubs
fcmovbe
mov
orl
fldl
dec
sbb
imul
and
mov
dec
js
iret
imul
lret
cs
mov
aaa
mov
pop
clc
xchg
xchg
je
outsl
pop
cmp
fwait
cmp
and
add
fnsave
adc
scas
adc
xchg
mov
mov
insl
ss
jl
dec
cmp
push
xor
sub
mov
and
out
pop
add
push
lret
or
fimull
or
lahf
pop
sbb
repnz
out
out
cmp
sub
adc
inc
or
stc
rclb
push
xor
pop
mov
scas
mov
pop
mov
xor
dec
xorb
ja
mov
mov
and
fnstcw
out
inc
mov
cmpsb
mov
cmpsl
inc
push
inc
xor
lds
or
fists
ret
adc
jecxz
and
pop
arpl
mov
mov
cltd
test
jmp
test
push
int3
iret
dec
fidivrl
fcoms
shl
xor
jb
sub
in
out
and
loop
xor
stc
adc
pop
lret
mov
mov
adc
push
and
jmp
mov
repnz
sahf
rol
pop
addr16
add
mov
data16
cwtl
repz
cs
add
cli
pop
call
sub
sbb
and
mov
test
pop
push
lahf
leave
test
movsb
add
mov
mov
pop
fidivl
push
xchg
push
push
xchg
ret
cmpxchg
inc
cmp
hlt
idiv
inc
inc
daa
rcrl
jg
outsb
cmpsb
aad
or
loop
mov
mov
mov
sub
and
xchg
ret
xlat
jmp
scas
pop
add
lods
pop
daa
fimuls
mov
jno
loope
push
push
aaa
add
xchg
xor
mov
ss
dec
xchg
mov
movl
push
test
in
cmp
push
outsb
pusha
out
push
leave
mov
shrl
or
sub
or
push
loopne
pop
push
iret
mov
imul
cwtl
cmpsl
out
xlat
xchg
out
ds
inc
xor
popa
push
jnp
js
mov
call
xchg
add
daa
or
mov
push
lret
jns
or
dec
loop
inc
shll
icebp
add
insl
ffree
ljmp
ret
std
lea
mov
push
xchg
in
cwtl
mov
mov
leave
cltd
jns
clc
rolb
in
data16
fnstcw
enter
divl
xor
movsl
fnstenv
cli
je
imul
imul
insl
out
daa
xchg
ficompl
mov
aas
pusha
es
push
dec
add
ja
in
cli
jl
ret
outsb
adc
mov
leave
cmp
std
dec
adc
inc
mov
stos
mov
sbbb
sahf
ss
cmpsl
mov
xor
fisttps
outsb
adc
movsl
std
mov
add
jo
ret
addr16
dec
mov
stos
sub
dec
cltd
jnp
inc
fisttps
xor
repnz
push
push
inc
add
cmp
aaa
inc
mov
lret
mov
ret
adc
mov
mov
cmpsl
aas
mov
nop
or
aad
cmp
jle
movsb
lds
sub
fwait
mov
mov
push
or
repz
xor
or
mov
lret
cmp
mov
mov
ja
or
ss
add
mov
nop
push
lods
cmp
test
mov
dec
inc
ljmp
lcall
imul
js
int3
orl
je
das
inc
shr
cmp
add
push
adc
nop
les
sbb
stos
and
popa
repz
cmp
jns
lret
std
cmpsl
nop
js
ja
sbb
cmpb
test
ljmp
dec
push
out
pop
cmp
mov
sub
push
lcall
mov
pushf
loop
scas
inc
sub
repnz
adc
pop
fisubrs
sbb
fidivl
xchg
add
test
inc
pop
stos
sbbb
fwait
lock
andb
and
adc
adc
idivb
sbb
fmuls
stos
test
adc
daa
mov
jo
clc
lret
loopne
repz
int3
test
push
and
fmul
out
mov
loop
jge
mov
test
enter
je
fistl
lahf
hlt
adc
mov
ljmp
push
or
mov
mov
nop
vandnpd
dec
rcll
es
ret
sbb
and
daa
jmp
sti
lret
nop
out
setnp
xor
mov
jmp
in
pop
aaa
rdmsr
lcall
das
push
cmpsb
lea
in
pop
push
mov
shlb
push
mov
mov
jnp
aam
lds
stos
sbbb
in
or
cld
orl
icebp
sbb
jns
lret
inc
push
cmpsb
adc
lea
mov
cmp
mov
adc
xor
adc
cmp
pop
fdiv
repz
and
imul
adc
sahf
xlat
push
adc
scas
mov
mov
sub
or
inc
jmp
daa
inc
fiadds
mov
sub
mov
in
sti
and
jg
in
loop
xchg
leave
pop
fldenv
popa
pop
mov
rcll
loope
jl
xchg
dec
shl
cmp
mov
dec
push
lcall
lods
enter
sub
fwait
repz
or
push
xchg
sub
cwtl
xor
cmp
adc
jae
pop
xchg
je
cli
push
xchg
push
subb
adc
or
movsb
or
cwtl
scas
jp
xor
pop
pop
jo
out
push
jg,pn
jg
sbb
jns
into
mov
mov
pop
xchg
xor
neg
xchg
aam
add
jmp
pusha
test
inc
adc
dec
xor
test
test
dec
cmpsl
dec
xchg
ficompl
mov
jo
jecxz
jne
rolb
pop
clc
cmp
cmp
lods
pop
inc
push
cmp
cmp
xor
add
or
sub
push
mov
out
es
lock
repnz
lock
or
bound
rclb
pop
mov
outsl
data16
lea
orl
mov
mov
sbb
test
aad
jbe
jp
pushf
fdivl
test
inc
into
mov
pop
push
stc
pop
push
outsl
lea
pushf
dec
cltd
mov
or
push
leave
movsb
lcall
push
js
out
daa
or
jl
add
add
mov
lret
and
add
sub
in
sbb
mov
push
mov
and
inc
repz
jns
mov
ret
mov
xchg
dec
in
xor
mov
out
mov
xchg
int
enter
pop
in
mov
repnz
lahf
test
repnz
fcompl
int3
fisttpll
and
pop
loop
jns
xchg
pop
lcall
cld
xor
aaa
js
int3
inc
data16
mov
fldl
jmp
jp
repz
int
xchg
mov
ret
rorl
pop
bound
inc
aad
daa
cmpsl
mov
roll
sbb
or
rep
add
jae
scas
and
dec
mov
stos
sahf
js
mov
inc
xchg
aaa
xor
mov
hlt
in
fdivr
ljmp
add
and
xor
cmp
loope
into
sub
cltd
inc
shlb
mov
lock
cld
sub
iret
fsts
aad
ds
and
mov
mov
in
pop
lcall
mov
cmovae
lret
outsl
call
gs
push
shll
mov
jae
jecxz
clc
mov
jle
jno
imul
sub
std
add
push
dec
inc
add
subb
stos
adc
mov
push
icebp
loope
lods
aaa
and
sbb
mov
shll
push
push
test
jo
lsl
xchg
stc
adc
pop
hlt
and
pop
icebp
mov
push
cmp
inc
popa
je
sub
std
jo
adc
cmp
jp
nop
add
mov
or
imul
insb
cmp
jb
dec
mov
jecxz
pop
xchg
lret
mov
fwait
test
xor
mov
lret
push
pop
testl
and
and
fsubl
icebp
iret
icebp
mov
xor
imull
jbe
data16
jne
jb
lret
lds
adc
cmp
adc
imul
pushf
xchg
adc
xlat
in
mov
or
push
out
and
xchg
mov
es
jg
pop
or
dec
pop
loop
jno
mov
sub
ret
stos
in
dec
mov
jg
mov
das
jns
fnstenv
shrb
push
pop
jge
icebp
int
adc
cmp
jmp
ret
or
fwait
jmp
mov
or
addr16
dec
add
xchg
push
add
rcll
in
pop
sti
in
je
fptan
stos
sub
push
loope
arpl
iret
vmwrite
movsb
mov
out
mov
popa
sub
enter
mov
pushf
fwait
push
fists
jnp
or
cmp
repz
xorb
sbbl
sarl
lahf
fs
sbb
push
in
test
test
fs
out
or
test
inc
mov
test
xchg
repz
mov
push
mov
test
jnp
push
daa
pop
inc
lcall
mov
inc
cmc
arpl
sbb
push
mov
pop
les
loopne
loop
pop
hlt
cmpsl
add
dec
mov
mov
push
sub
inc
aas
adc
cmp
scas
rcrb
mov
cli
dec
jns
outsl
test
dec
xchg
cltd
test
cmc
lds
cmp
fstpt
add
push
fstp
mov
cld
or
push
and
push
adc
orb
adc
incl
jno
and
cwtl
ja
in
scas
sub
add
vmovd
mov
inc
or
mov
jp
mov
stos
in
push
dec
jb
lds
pop
xchg
and
shll
out
xchg
insl
xchg
rcll
movsb
outsl
pop
cmp
jnp
xlat
orl
repnz
repz
pop
aam
or
pop
aam
xor
shlb
cmp
add
sub
xchg
enter
hlt
mov
dec
rcrl
out
nop
sti
pop
fwait
mov
and
or
out
cmp
lahf
dec
pushf
xor
cmp
hlt
pop
repz
cltd
and
insl
cmovp
int
jb
and
js
in
enter
aaa
add
js
mov
loopne
mov
mov
adc
jp
fistl
sub
test
sbb
fwait
pushf
xor
jmp
xor
mov
mov
aaa
mov
out
jnp
ficomps
idivl
fwait
fwait
xchg
cmpsb
inc
jl
ds
xor
xor
ret
mov
daa
push
movsb
lea
cmp
das
loop
pop
jle
lret
xor
jge
xchg
shl
int
add
dec
lea
es
sbb
jo
outsb
add
stos
loop
and
insb
lret
aaa
call
out
cmc
dec
in
cli
and
mov
or
cmp
mov
xor
jo
and
in
fcoms
dec
out
or
data16
repz
int3
pop
loop
mov
dec
push
fdivr
test
stc
push
add
dec
sbb
or
loopne
pop
mov
jle
iret
inc
xchg
add
notb
cld
jl
pusha
cmpsl
outsb
imul
repnz
fildl
sub
imul
insb
mov
shlb
insl
cmp
mov
scas
stos
pop
in
in
ret
ss
into
or
je
lods
jo
or
pusha
lcall
out
ja
ret
mov
mov
repz
sarb
mov
lods
iret
xorb
or
xchg
pop
popa
out
sub
aas
stos
fdivrl
mov
push
dec
pop
jl
frstor
popa
ret
or
ds
mov
xchg
xchg
cmp
clc
cld
pop
xchg
stc
jne
test
test
fisubl
movsl
je
mov
adc
mov
mov
in
fistpll
jae
cmp
xchg
imul
xor
pop
add
push
mov
inc
out
gs
gs
adc
mov
test
imul
pop
cmc
jb
pop
addr16
mov
les
aaa
in
and
fsubrl
mov
xorl
jl
dec
mov
fnstsw
fcompl
test
jge
push
ret
test
add
popl
mov
pop
stos
call
xchg
mov
pop
and
in
sbb
lods
jne
fmull
mov
mov
or
push
jno
push
movsl
int3
inc
into
mov
loopne
or
pop
out
add
fwait
inc
les
mov
in
mov
addr16
mov
lahf
mov
dec
mov
fsubrl
hlt
fsubs
mov
adc
cs
pop
outsb
aaa
ljmp
inc
in
clc
and
push
shll
mov
xor
mov
int3
xlat
loop
dec
mov
xlat
fiadds
cltd
int3
stc
inc
and
mov
lahf
or
mov
movsb
inc
or
sub
push
pop
push
xor
in
inc
sbb
fninit
cltd
inc
in
pop
mov
sbb
sti
cli
mov
cmp
xor
dec
push
mov
xchg
sbb
xor
and
jecxz
add
add
fpatan
sub
imul
clc
jecxz
mov
cmp
cwtl
imul
inc
std
scas
pushf
movsb
pop
test
jo
mov
fwait
lcall
add
xchg
ja
setne
das
pop
lea
or
push
lods
sub
adc
rcr
fmull
pop
jge
add
cli
movsl
add
sub
jae
aaa
lods
movsb
out
dec
pop
mov
arpl
enter
push
pop
daa
and
mov
pop
andl
stos
and
inc
pushf
jmp
pusha
pushf
mov
sbbb
and
fsubrs
xchg
adc
sahf
jle
cmpsl
andl
data16
jle
sahf
stc
loop
mov
mov
and
int3
xchg
pop
imul
jno
inc
adc
mov
pop
clc
inc
cmc
cmp
cmp
mov
adc
mov
adc
push
call
cmpsl
loop
cltd
cmp
add
pop
stos
daa
push
adc
iret
int
jle
movsl
nop
mov
rol
lret
or
inc
and
bound
pop
lret
mov
cmpsb
xor
mov
xor
push
pop
mov
inc
inc
xchg
mov
jbe
jl
push
xor
dec
aad
sbb
jmp
cmovae
sbb
mov
sub
cmp
cmpsb
and
stos
sub
sahf
sub
repnz
stos
adc
mov
push
jmp
add
xchg
and
xchg
test
insb
sbb
push
fsubrl
or
cmp
add
jecxz
dec
push
arpl
jecxz
xor
sub
cwtl
into
icebp
cltd
mov
test
push
lcall
loop
scas
shll
sbb
ror
sti
ds
test
xchg
loope
popa
mov
jl
push
arpl
push
arpl
je
lcall
cmp
rcrl
xor
push
lcall
or
sub
add
inc
arpl
int
out
dec
popa
scas
sahf
sbb
inc
xchg
pop
pushf
jecxz
inc
icebp
mov
loope
pop
lcall
fcoml
xor
mov
adcb
out
mov
fcompl
jbe
lods
sbb
pop
add
nop
cmc
xor
mov
lea
xor
xchg
into
push
scas
cmpsb
hlt
mov
push
in
imul
sub
rolb
inc
push
push
adc
adc
inc
xchg
cmpsb
shll
or
sbb
push
sbb
aad
cmpsb
pop
aam
cmp
sub
push
mov
push
jo
add
enterw
inc
test
rorb
mov
cmpsl
sbbl
mov
arpl
jge
sbb
insl
push
and
addr16
inc
popa
shrl
in
push
jo
inc
outsb
andl
cld
jns
iret
into
into
push
adc
pusha
test
test
xchg
jle
dec
inc
je
xchg
xchg
stos
push
shlb
loopne
popf
insl
mov
pop
and
xchg
in
stc
cmp
or
imul
arpl
inc
add
dec
jne
mov
cmpsl
push
pop
or
outsb
inc
int
mov
lret
dec
repnz
xchg
ret
inc
scas
jl
dec
xor
push
shll
push
pop
stos
das
std
aam
mov
jecxz
jne
outsl
xorl
imul
mov
and
pop
mov
mov
cmp
incl
jle
mov
addr16
leave
xorl
or
jp
es
inc
mov
test
idiv
testl
push
mov
xorb
sbb
dec
xor
jecxz
test
or
jno
ficoms
push
mov
push
pop
mov
pop
fcmovne
sub
mov
fnsave
repnz
cmpl
out
adc
push
cli
cld
fcmovbe
add
test
cmc
movsl
cmpsl
fwait
int3
insb
jmp
sar
push
sub
dec
daa
inc
das
aaa
nop
scas
cmp
dec
push
adcb
mov
mov
mov
int3
mov
fisubl
inc
stos
ret
lret
pushf
cwtl
iret
ret
cmp
dec
push
pop
inc
scas
pop
int3
dec
leave
mov
and
cwtl
repz
popa
adc
push
mov
inc
idiv
in
jno
jg
mov
mov
pop
popf
je
sub
out
mov
orl
fistpl
mov
stc
mov
inc
jae
mov
js
xor
sub
inc
icebp
aaa
dec
out
jmp
aam
pop
fcomps
dec
pop
xchg
scas
lock
rclb
jns
push
and
pop
decb
sub
sbb
addl
cli
pop
sbb
pop
flds
popf
pop
mov
mov
mov
andl
data16
jne
cmpsl
frstor
int
movsl
and
dec
add
push
mov
jl
arpl
mov
xchg
stos
jge
inc
movsl
das
mov
mov
rorb
pusha
mov
int
mov
xor
in
jl
movsl
hlt
hlt
xor
popa
mov
lret
mov
push
dec
push
sub
in
adc
pop
push
int3
les
xchg
jecxz
push
into
outsl
push
cwtl
out
push
pushf
xor
sbb
push
cmp
push
push
mulb
adc
js
mov
pop
pop
sub
inc
push
sbb
mov
fidivl
lret
sbb
test
repnz
popa
fistps
ficomps
jg
mov
push
insb
movsb
mov
mov
ss
loope
mov
xchg
inc
out
sbb
cltd
cwtl
inc
push
xchg
mov
iret
popa
push
hlt
jge
inc
inc
sub
mov
jge
daa
rcl
add
addl
and
xor
jmp
pop
mov
mov
cmp
fdivrs
movsl
add
and
movsb
sub
push
lcall
jno
arpl
and
sbb
sbb
jl
daa
pop
dec
and
cld
mov
pop
pop
ror
es
lahf
out
jo
icebp
pop
xchg
pushf
sub
push
jnp
std
xchg
mov
pop
jecxz
bound
mov
sbb
sbb
pop
test
mov
idivb
scas
add
pop
cmp
insl
xchg
xchg
iret
lds
pop
mov
jl
and
sbb
jge
mov
test
jp
outsb
out
mov
loop
sbb
cmp
sub
push
inc
out
aas
jecxz
sub
inc
pop
mov
mov
fadds
add
lds
out
in
test
fwait
into
push
pushf
push
push
xchg
sbb
sbb
mov
test
pusha
xchg
ja
xor
mov
jb
and
xor
mov
mov
adcl
loope
cltd
in
push
sbb
push
and
push
cwtl
fs
pop
mov
dec
lods
pusha
sub
test
fidivrs
mov
sarb
lds
fbld
fs
clc
fstps
frstor
cld
xlat
and
aaa
mov
das
adc
inc
adc
xor
sti
stc
std
ss
or
test
jo
test
ficoml
inc
mov
in
mov
fcompl
nop
inc
jne
in
fsubrs
jbe
mov
push
fsubr
test
pusha
icebp
and
rolb
les
dec
inc
mov
in
and
mov
nop
cld
fnstenv
fcmovnu
outsl
mov
sbb
dec
push
sbb
es
daa
xchg
jne
cmp
addr16
jmp
mov
lods
shrl
into
rorb
dec
ret
loope
jp
xchg
adc
int3
popa
loopne
pop
enter
repnz
int
jo
hlt
mov
cmp
mov
pop
sub
push
sbb
and
jcxz
mov
ss
es
in
pushf
xchg
xchg
idivb
mov
and
add
test
inc
mov
pop
jmp
scas
mov
popa
dec
mov
ret
mov
out
xor
mov
invd
adc
movups
xchg
test
cmp
or
ss
xchg
es
inc
sahf
jns
pop
bound
subb
orb
out
and
add
mov
es
sub
adc
xchg
test
call
pop
lcall
push
mov
sub
movaps
jns
in
jecxz
xchg
or
jae
cmp
add
hlt
sub
push
xor
cmp
sbb
cltd
int3
outsb
fdivp
xchg
ficompl
rorb
mov
jb
and
sub
pop
sbb
lds
xorb
lock
inc
repnz
gs
sbb
add
mov
add
mov
mov
xchg
sub
or
lds
jo
in
call
ss
push
push
shrb
pop
adc
xchg
cli
mov
cmpsl
imul
mov
popf
add
push
lret
clc
xchg
test
jge
in
mov
shll
xchg
mov
rcl
orb
outsl
mov
in
cmp
fists
iret
mov
vsubpd
inc
or
add
in
pop
push
test
and
ror
lods
fistpll
lock
dec
cmp
pop
fsubrs
aam
lcall
mov
jge
loopne
pop
out
les
cmp
push
ficoml
cli
stos
xor
subb
ret
mov
call
fcmovbe
nop
cmp
fstl
imulb
loop
add
enter
mov
adc
mov
ljmp
xchg
dec
pop
cmp
and
jno
cmc
repz
repz
mov
cmp
ja
andl
sbb
mov
clc
daa
adc
std
outsb
jns
testb
sahf
pop
xor
cmpsb
adc
arpl
mov
mov
mov
push
and
add
test
dec
sub
mov
popf
in
sub
cmp
xor
ljmp
mov
aad
mov
outsb
inc
xor
mov
leave
pop
xchg
lods
cmc
out
pop
cld
jmp
inc
or
fwait
dec
daa
ret
push
pop
jecxz
in
das
adc
hlt
pop
out
mov
xor
test
mov
stc
repz
or
nop
imul
mov
into
or
insb
sbb
cltd
push
cld
xchg
mov
outsb
les
daa
push
ja
mov
jmp
int3
inc
mov
jp
push
mov
and
mov
inc
xor
popa
shlb
ss
and
clc
iret
cmp
mov
mov
movsb
push
pop
fiadds
push
loop
popa
das
cwtl
lret
mov
ds
mov
pop
jnp
xor
cwtl
and
leave
mov
lcall
test
jmp
insb
cmp
mov
mov
gs
mov
stc
insl
or
xor
js
add
cmp
lds
adc
mov
jb
jp
cmp
or
adc
in
stc
push
xchg
cmp
or
push
push
in
mov
leave
pop
mov
cmp
popf
mov
xorl
cmc
mov
add
mov
xchg
je
add
adc
ljmp
ljmp
les
xchg
popf
dec
push
pop
jecxz
xchg
push
or
xor
sub
sbb
jb
cmp
adc
icebp
dec
xchg
inc
or
push
flds
scas
out
mov
push
test
jb
fwait
mov
xor
js
ljmp
push
push
imul
mov
mov
clc
mov
jle
xchg
mov
dec
or
cmp
cmp
cld
stos
aaa
push
cwtl
xchg
sti
mov
repz
mov
sub
jnp
push
push
cltd
pop
and
stos
mov
movsb
into
jp
xchg
xchg
adc
jbe
mov
dec
mov
and
jae
and
bound
int3
jp
push
jnp
movsl
outsb
adc
dec
jl
pop
stc
stos
stos
lret
out
mov
mov
in
or
add
ss
mov
inc
data16
dec
fdivs
inc
sub
mov
leave
and
or
inc
hlt
dec
arpl
cmpsb
pusha
in
or
jecxz
movsb
inc
daa
jl
add
add
out
and
cmp
test
mov
clc
xchg
xchg
test
xchg
daa
mov
mov
imul
adc
cmp
mov
sub
adc
loop
hlt
es
aam
xchg
js
add
mov
pop
push
cmp
pop
sbb
je
add
mov
fldt
faddp
pop
jge
push
popa
adc
pop
ftst
mov
sbb
add
push
or
shll
sbb
scas
push
iret
xchg
aas
rcll
and
add
stos
mov
sahf
jno
xor
mov
inc
and
and
pop
ja
dec
cmpxchg
pop
pop
and
cmp
pop
sub
sub
jbe
mov
jecxz
ljmp
adc
in
push
mov
int
fwait
pop
fildll
jg
in
mov
dec
mov
push
xor
in
lret
jp
fs
pushf
into
icebp
sub
push
mov
pop
mov
movsl
enter
xor
add
push
mov
jmp
sub
xchg
fwait
pop
sub
hlt
sub
jecxz
repnz
add
or
add
cwtl
mov
dec
or
insl
pop
arpl
push
out
stc
movsb
mov
dec
sub
mov
outsl
ror
jp
bound
adc
and
pop
jge
out
add
pop
outsb
mov
pop
or
push
push
dec
mov
adc
mov
outsl
push
xlat
daa
das
xor
and
fs
shlb
int
jge
mov
scas
adc
lds
xor
and
mov
jge
sub
sub
dec
pop
sahf
stos
loope
aas
je
mov
iret
lcall
cmp
jmp
and
dec
xchg
rcr
lcall
cmp
fchs
cmpb
pop
xorl
adc
cmp
fisttpll
push
mov
cld
dec
jecxz
out
adc
out
repz
repnz
mov
push
fdivrl
lret
xchg
cld
cmp
sbb
scas
fldenv
jge
or
ss
lock
add
mov
lods
inc
sbb
pop
stos
cmpsl
popf
sbb
lahf
shrb
mov
cmp
pop
mov
lods
mov
pop
insl
rorl
pop
jo
sub
je
push
xor
fisubl
pop
pop
mov
imul
test
fldl
loop
popf
sbb
xor
or
daa
jno
and
add
cmp
mov
pushf
xchg
add
mov
rcrl
jmp
lret
scas
andl
xlat
sbbb
fwait
dec
data16
pop
mov
flds
xchg
scas
push
sbb
aam
lcall
xchg
mov
pop
in
mov
ss
xchg
adc
subl
fwait
cmp
insl
pop
dec
push
scas
int3
lods
lods
outsb
mov
ljmp
jbe
arpl
cmp
push
xor
jl
dec
or
mov
xchg
fcoml
sbb
and
and
xor
sbb
out
mov
loope
insl
ja
dec
mov
mov
out
pop
sti
xchg
out
jo
add
movsb
lahf
rcrb
adc
inc
lea
aam
xlat
and
cmpsl
sub
outsb
js
xor
or
xchg
js
xchg
cld
ljmp
jno
jecxz
int
stc
notb
mov
lods
mov
mov
outsb
neg
loope
cmpsl
xor
pop
lods
mov
stos
ror
out
pusha
xchg
cwtl
push
sahf
push
mov
pushf
push
mov
insl
stos
lods
xor
dec
push
xor
cmp
outsl
xchg
adc
movsl
scas
lahf
jp
xchg
ljmp
mov
cmc
scas
out
pop
add
movsl
es
rolb
mov
push
push
mov
mov
or
cmp
es
or
stc
subb
xchg
lcall
in
inc
in
aad
es
sub
and
lods
popa
cmp
xchg
cmp
test
cli
or
mov
mov
adc
inc
add
push
push
jp
aam
divb
pop
sbb
mov
jmp
xor
repz
mov
adc
sarl
or
aaa
and
add
leave
add
leave
inc
xchg
lods
add
mov
dec
popf
mov
adc
addb
jge
sbb
cmp
fadds
or
dec
imull
inc
shl
pop
es
ds
outsb
jne
in
scas
xor
xchg
mov
sbb
push
aaa
pop
int
jg
or
push
push
push
stos
add
xor
lcall
pop
nop
add
aas
push
je
cld
add
sub
xor
jl
fwait
lods
sub
xor
repnz
fmull
mov
fbld
pop
fstpt
in
pop
loope
adc
fldt
mov
inc
ss
mov
popa
sub
inc
adc
jmp
ljmp
jns
jns
call
push
dec
adc
adc
mov
pop
sub
lret
sub
adc
test
rcl
jecxz
lret
aam
lret
into
nop
mov
lods
mov
or
jb
pushf
lods
xor
lahf
jle
mov
xchg
or
xor
popa
mov
ljmp
iret
jmp
sbb
add
add
xchg
mov
pop
cmc
sbb
adc
and
add
adc
fstpt
cmpb
pop
xchg
les
popa
and
cmp
jp
or
adc
pop
sbb
jl
mov
jmp
push
enter
sbb
mov
lods
inc
cmp
or
xchg
add
orb
add
pop
ljmp
inc
cmp
movsb
inc
ret
xchg
cmc
sahf
int
pop
add
cmovbe
mov
out
ret
mul
nop
push
sarl
and
iret
loopne
cli
inc
cmp
movsl
out
ljmp
aas
into
cmpsl
insb
stc
adc
or
xchg
sub
xchg
fistl
cmpsl
inc
orb
jl
stc
scas
mov
jecxz
lahf
or
sub
into
div
nop
push
inc
imul
and
fwait
fwait
push
mov
inc
jl
cld
mov
push
cmp
cmp
mov
jmp
and
movsl
daa
test
subl
inc
cmc
push
mov
scas
add
in
jg
outsb
addr16
jne,pt
push
iret
mov
int3
sahf
mov
ljmp
and
rcr
out
loopne
divb
aad
and
outsl
pop
mov
and
loope
push
jo
leave
subb
pushf
pop
jmp
cli
int
loope
dec
les
mov
aas
push
rolb
ja
mov
imul
and
nop
out
int
repnz
popf
jmp
pop
push
jne
mov
jmp
pushf
cltd
pop
aas
cmpsb
dec
or
out
xor
inc
add
into
or
sbb
pushf
in
adc
cmc
mov
cmc
lds
adc
add
cmpsb
lods
stos
rcrb
in
dec
pop
mov
dec
mov
jge
mov
mov
repz
dec
push
stc
mov
jne
insl
outsb
loop
sub
imul
xchg
push
mov
mov
push
mov
dec
ret
xchg
xchg
and
jl
icebp
dec
fildll
adc
outsb
roll
ds
xchg
mov
cmp
sarb
enter
mov
mov
xchg
mov
push
mov
add
mov
lret
enter
cmp
mov
mov
jg
dec
xor
cmp
outsl
sub
inc
xchg
lods
loope
sub
repz
dec
pop
sbbl
sub
xchg
or
cli
xor
out
bound
adc
loope
sub
mov
ret
mov
and
add
lret
inc
cmovns
imul
andl
and
sbb
pop
addr16
add
fwait
loop
popf
fidivrs
xchg
loope
or
loope
loope
mov
gs
arpl
adc
jg
outsb
lock
mov
xchg
adc
movsb
pop
imul
xchg
std
int
jnp
sub
xchg
add
adcb
cmc
dec
cwtl
xor
das
scas
pop
jle
xor
cltd
mov
int3
mov
pop
popa
push
mov
fmulp
scas
cltd
fdivrs
mov
jbe
lods
xchg
or
frstor
cmp
scas
dec
mov
adc
push
rcr
jae
test
add
adc
push
xchg
mov
mov
les
shr
mov
sti
iret
and
jmp
inc
js
mov
and
or
xor
sahf
dec
xchg
sub
aad
xchg
sub
xlat
adc
lds
and
jmp
pop
push
and
repnz
jb
ja
xor
lods
add
mov
cmc
es
jb
mov
dec
outsb
enter
and
lock
adc
sbb
add
xor
out
clc
add
lea
and
pop
cmpsl
aam
in
out
mov
push
add
out
movsb
je
cli
iret
xor
and
iret
dec
xor
push
push
repz
xchg
sbb
dec
imulb
adc
les
mov
cmp
inc
jp
jne
pop
push
adc
js
int3
sbb
call
rcrl
stc
sub
sti
negw
cmp
icebp
jp
sbb
mov
sbb
repz
and
lods
iret
jle
push
sub
jns
movsb
and
mov
rorl
jecxz
incb
dec
mov
aad
jo,pt
cltd
jne
push
sbb
loope
enter
push
je
in
mov
pop
sbbb
sub
mov
rol
outsl
and
roll
push
mov
sbb
add
adc
pop
fwait
cmpsb
hlt
lods
cmpsb
shrb
inc
movsl
in
fildl
push
loopne
xchg
shl
dec
jbe
xchg
jl
aad
mov
leave
fdivrl
inc
gs
mov
dec
adc
and
stc
cmp
shrb
mov
mov
js
shl
mov
ds
leave
mov
int3
sbb
scas
mov
lods
js
dec
jle
or
rcll
test
jbe
in
and
mov
or
add
push
bnd
inc
aad
sub
gs
std
inc
inc
dec
sti
fwait
jne
pop
push
sub
subb
mov
aaa
sbb
and
or
fcmovnu
inc
pop
das
aad
or
sub
fs
jmp
movsl
push
add
jae
jmp
mov
rcrl
outsb
or
xor
dec
ret
lcall
dec
push
sbb
bnd
lfs
add
arpl
subb
sub
popf
sbb
lahf
lret
pop
mov
stos
outsl
in
std
pop
mov
mov
pop
pop
movsl
aas
push
icebp
sbbb
jne
inc
sub
push
fcoms
xchg
dec
js
sahf
aam
mov
dec
sub
and
sbb
ja
push
xor
xchg
pusha
fidivs
subb
fidivl
lcall
mov
cltd
cmp
cmp
outsb
xchg
ss
push
xor
add
in
push
xchg
test
sub
stc
js
dec
xor
jecxz
push
scas
insb
push
fdiv
xor
scas
mov
int
mov
mov
ret
gs
mov
inc
or
dec
xor
dec
xchg
icebp
cmp
cmpb
push
push
or
pop
add
sbb
pop
jp
xor
xor
data16
das
add
es
inc
cwtl
jae
sub
aaa
repz
scas
mov
sbb
out
rorl
hlt
lret
icebp
insl
mov
pusha
xchg
ret
popf
adcl
sub
dec
xor
mov
xor
fidivrl
push
mov
stos
test
xchg
mov
shrb
sahf
push
add
mov
inc
jl
or
xor
les
int3
pushf
mov
lea
rclb
push
xor
jg
push
cmc
ds
cmp
iret
jnp
mov
in
add
pop
pop
call
fcoms
adc
mov
inc
mov
and
adcl
movsl
jno
inc
mov
xlat
adc
sub
inc
xchg
ficomps
jl
addl
scas
sbb
xor
adc
icebp
pop
sbb
ds
or
je
push
lret
int3
lret
sahf
loope
xor
adc
icebp
push
cli
ss
xor
pop
jle
iret
mov
cwtl
scas
jle
mov
or
into
ret
xor
cli
fldt
or
ret
xchg
xchg
xchg
data16
out
das
mov
aaa
lahf
into
repz
scas
adc
movsl
jns
push
push
mov
xor
cmc
jae
cmp
js
leave
lahf
fcmovbe
push
mov
mov
cmp
push
lods
cs
push
data16
lret
inc
pushf
or
xor
ret
sbb
mov
sarl
and
and
xchg
test
stos
leave
popf
rclb
andb
sub
pop
push
push
call
sti
mov
xor
push
fistpll
pop
outsl
cmp
adcb
xchg
call
icebp
test
lret
sub
and
nop
addl
in
and
test
mov
dec
inc
movsl
ret
pop
push
cmpl
and
rcrl
adc
icebp
in
push
jne
in
mov
xchg
mov
testl
dec
sbb
iret
outsb
js
scas
mov
push
outsl
rcll
rorl
pop
xchg
or
idivl
rolb
lret
out
lods
dec
xor
xor
outsb
inc
sub
cmpsb
outsl
sbb
rorb
pusha
and
and
mov
out
dec
jb
outsl
loopne
bound
icebp
or
pop
jmp
lea
push
xlat
mov
mov
pop
xor
cs
lcall
dec
out
ss
jecxz
adc
or
stos
ss
test
mov
mov
add
pop
adc
fsubs
or
inc
xchg
addb
mov
pop
push
add
popf
sbb
mov
arpl
jle
sub
mov
pop
popf
dec
inc
push
inc
jp
inc
rcr
scas
jbe
mov
mov
pop
in
xchg
pop
cmc
xchg
push
xor
sbb
xchg
pop
xchg
mov
mov
xchg
fildll
andnps
out
daa
stos
call
and
scas
aaa
sbb
flds
and
repnz
sarb
stc
jbe
inc
stc
sub
mov
dec
or
xlat
out
std
inc
into
inc
add
bnd
gs
mov
mov
push
xor
inc
repnz
flds
enter
jnp
adc
mov
xor
incb
cmpsl
add
adc
mov
mov
or
cli
fisttpll
xlat
mov
cmpsb
mov
inc
jae
call
mov
mov
std
cmp
xchg
mov
push
mov
push
push
test
mov
call
dec
ret
loopne
aaa
pop
lock
mov
inc
xor
daa
and
pushf
inc
icebp
call
insl
mov
and
jbe
dec
pop
mov
or
xor
and
int
mov
add
cmp
shrl
lds
pop
in
or
xor
or
test
daa
pushf
mov
sub
adc
jo
ja
std
mov
or
pusha
xchg
xchg
imul
sub
xchg
pop
daa
jecxz
add
sub
stos
iret
jbe
aas
and
cmpsb
mov
imul
test
pop
add
sbb
push
dec
jns
xchg
inc
mov
int
rorb
sti
adc
je
icebp
and
cmc
mov
push
and
daa
sahf
xor
das
lods
stc
and
mov
cmp
lcall
mov
mov
sbb
pop
in
inc
mov
fwait
pop
push
aad
scas
aad
mov
test
or
pop
mov
lcall
dec
sbb
adc
mov
jge
loopne
push
das
cmp
xchg
dec
std
cmp
pop
mov
sub
xor
andl
lods
leave
sbb
dec
sti
sub
or
aam
cmp
xchg
xchg
cmp
push
push
dec
daa
testl
leave
daa
jae
in
mov
add
and
lods
test
aad
push
push
pop
out
inc
sub
rcll
sti
pushf
movsl
push
jae
inc
add
sub
xchg
add
adc
arpl
adc
inc
lret
mov
jg
in
test
sahf
adc
mov
or
es
out
jne
jae
dec
pusha
cmp
jno
sbb
mov
dec
pushl
jg
lock
cmpsb
aas
in
pop
xchg
xchg
movsl
inc
cwtl
scas
sbb
outsb
enter
sti
mov
mov
mov
insl
scas
mov
sbb
rcrl
ss
call
sar
cmp
cmp
and
pop
andl
into
das
sbb
or
mov
das
pop
mov
cmp
cmp
push
cmpsb
subb
ljmp
or
sub
push
and
cmp
xchg
mov
sub
pop
iret
cltd
cmc
mov
fisubl
jne
xlat
sub
adc
mov
mov
jl
mov
push
pop
and
push
imul
wbinvd
rclb
or
and
movsl
jecxz
ja
leave
jns
or
les
or
inc
jae
leave
imul
aaa
cmp
add
popf
inc
fs
loope
sbb
cmp
dec
pop
mov
pop
mov
jecxz
in
xchg
lea
pop
test
mov
data16
insb
jmp
or
add
stos
and
daa
inc
fstpl
sub
or
cltd
movl
sub
iret
cld
jmp
lcall
ljmp
repnz
rorb
mov
lock
push
nop
cmp
jbe
or
loopne
hlt
mov
mov
sub
inc
inc
pop
xchg
mov
xchg
out
jae
dec
xchg
loopne
imul
push
mov
hlt
push
nop
sbb
cltd
push
repz
xchg
jp
pusha
add
push
mov
xor
xchg
jne
add
sub
lret
cmp
insl
movsb
cmp
mov
rorl
mov
pushf
jnp
inc
call
stos
std
inc
pop
cli
xor
mov
scas
mov
pop
enter
sub
dec
imul
add
cmp
fsubr
mov
sbb
outsb
loopne
popf
mov
push
inc
popa
rclb
mov
mov
testl
and
xchg
stos
in
mov
mov
xchg
xchg
sti
jne
lods
dec
xchg
dec
xchg
fmull
add
cmp
pushf
xchg
or
jecxz
out
mov
mov
lods
imul
popa
mov
cmp
addb
xchg
lret
inc
sub
dec
fdivrl
xor
popa
dec
jne
jns
cmpsb
pusha
xchg
xchg
jg
aam
add
push
inc
int3
bound
add
ret
adc
pop
mov
outsl
push
lea
push
in
adc
in
push
outsb
cmpsl
mov
mov
adc
add
es
adc
out
mov
movsl
xchg
adc
mov
add
rcl
mov
daa
add
dec
mov
push
sub
xor
dec
les
xchg
dec
sbb
xchg
lea
call
add
ja
xchg
sub
jmp
cmc
inc
outsb
aad
sbb
mov
mov
push
push
and
xor
and
sub
movsb
rcll
and
push
mov
add
xchg
pop
loop
pop
cs
or
icebp
rolb
cmp
pop
scas
test
dec
lret
ss
sub
adc
push
movsb
mov
pusha
jne
andl
add
ss
jg
and
xchg
vmwrite
das
je
aas
push
sahf
mov
or
inc
popa
fcomi
xor
mov
leave
test
dec
adc
jno
je
nop
subb
mov
inc
adc
and
jle
andl
inc
ret
jae
pop
arpl
push
in
mov
lcall
jbe
dec
int3
and
push
cmp
insb
inc
mov
ljmp
repnz
dec
and
jne
test
pushf
rcr
out
jl
cltd
ljmp
cmc
lcall
and
fdiv
xchg
mov
pop
add
dec
jg
ds
scas
push
and
inc
arpl
mov
shlb
jge
xor
pop
shl
cmp
or
mov
pop
sbb
or
js
add
sub
mov
sub
mov
mov
pop
dec
shrb
push
insb
sub
dec
push
jo
jo
into
vpunpcklqdq
push
sahf
xchg
xchg
dec
rclb
mov
arpl
jno
lea
and
or
pushf
mov
dec
das
lahf
add
xchg
addr16
jne
mov
aas
add
xchg
addr16
enter
add
scas
or
cli
fadds
call
mov
mov
imul
jne
data16
sti
ds
cmpsl
jmp
xor
int3
cs
in
push
mov
test
push
jl
push
dec
test
jg
xor
rcll
ds
pop
lea
idivl
add
xor
test
data16
flds
jmp
push
push
notl
bound
mov
scas
inc
jae
mov
push
scas
jge
out
jns
xor
lds
loop
pop
test
out
sbb
cmc
mov
sbb
loope
outsb
push
nop
pop
es
aam
dec
cmp
xorb
jno
ret
lret
ljmp
pop
lahf
bound
or
loopne
out
pop
clc
loope
loopne
push
add
imul
sub
jge
adc
fcompp
adc
xor
jecxz
ret
inc
jmp
jp
jmp
and
inc
push
ficomps
xor
je
stos
hlt
je
sub
das
or
imul
sbb
cli
int
icebp
jp
jle
es
and
fisttpll
xor
cmp
lcall
ljmp
adcl
stos
sahf
test
lahf
adc
scas
inc
inc
ss
out
mov
ljmp
in
inc
sahf
in
and
shlb
or
rcr
push
adc
arpl
lods
subb
adcl
insb
outsl
hlt
mov
punpckhdq
push
sbb
jns
dec
or
sbb
jl
push
dec
mov
and
push
sub
ss
dec
xchg
push
roll
subb
jg
loope
push
or
fimuls
mov
pop
andl
or
mov
push
pop
mov
pop
rorl
popa
xor
mov
or
mov
sub
inc
sbb
pop
push
mov
push
pop
xorl
ja
subb
into
rcrl
xlat
xchg
sahf
xchg
fists
jno
mov
jnp
cld
cwtl
imul
fistps
cld
fs
rorb
cmp
pop
push
aaa
dec
or
cmpsl
xor
cmpsl
les
pop
sbb
shlb
inc
mov
mov
lock
pop
inc
mov
and
pop
push
mov
ja
mov
jo
sub
pop
push
daa
imul
pop
insb
hlt
mov
fwait
xchg
data16
cli
push
push
sbb
cmp
mov
outsb
jno
xchg
jl
push
cmpsl
mov
rcr
push
dec
arpl
mov
sbb
repnz
int3
lods
mov
fs
test
xorl
xor
sub
lcall
mov
xor
mov
out
aaa
xor
sub
bound
jp
add
jmp
cs
nop
arpl
cmpsl
scas
mov
iret
adc
inc
leave
ss
es
ljmp
movsb
xlat
iret
cltd
mov
lahf
fmull
stos
mov
and
packuswb
inc
adc
aas
ret
or
cwtl
fmull
cwtl
pop
mov
test
cmp
fincstp
repz
icebp
test
sbb
mov
pop
push
dec
lcall
in
push
add
dec
sub
inc
inc
sub
mov
jae
enter
or
cltd
rol
add
arpl
test
lcall
test
nop
mov
xor
fisttpl
dec
push
push
add
test
imul
xchg
sub
out
xlat
movsb
xor
lock
fisttpll
repz
imul
std
outsl
loop
decl
mov
xchg
mov
xchg
repnz
call
test
xchg
in
jmp
xor
daa
es
and
outsb
scas
js
or
jg
jecxz
jle
add
filds
sbb
inc
hlt
cld
sub
stos
popf
je
xchg
cli
aas
lods
imul
xchg
out
loopne
jae,pn
test
inc
sub
inc
push
sbb
fdivs
or
hlt
jge
cs
inc
jnp
jp
clc
and
shrl
les
in
sti
fists
xchg
mov
sub
ud2
idiv
cmp
call
mov
mov
fcoms
out
or
adc
pushf
jae
xorb
cmp
add
dec
cmc
movsb
cmc
jo
mov
hlt
out
jge
mov
add
pushf
adc
and
es
repz
or
jno,pt
xchg
fcomp
call
push
jmp
mov
adc
add
jns
mov
xor
xchg
mov
imul
jb
xor
aad
xchg
andb
ja
push
outsl
mov
xor
jl
dec
sarl
scas
dec
jecxz
jge
lds
mov
scas
mov
dec
cmp
sub
push
jg
jo
in
out
arpl
int3
cmp
dec
adc
and
jnp
adc
xor
lock
inc
cmpsl
repnz
addps
mov
lea
insb
pushf
popf
or
negl
push
fldl
xor
fildl
aaa
and
out
xor
mov
clc
test
mov
icebp
loop
pop
xchg
add
or
fnstsw
arpl
push
ror
rcl
mov
outsb
movsb
push
mov
iret
push
and
pop
cmp
mov
push
or
mov
cmp
adc
cmpl
pusha
in
push
outsl
or
jb
xor
adc
cmp
inc
cltd
cltd
pop
test
js
mov
sub
stc
jg
push
sub
adc
dec
test
add
xor
jno
pop
adc
jle
arpl
adc
cmp
ja
int
cwtl
loopne
jnp
aas
sbb
push
int3
sbb
mov
aam
push
cmpsl
jne
es
ficoml
sbb
pop
fstl
rcll
adc
adc
or
sub
inc
js
cmp
jns
lret
faddl
cld
icebp
ror
sub
dec
mov
repz
mov
out
je
lods
hlt
sbbb
add
sbb
inc
idivl
sbb
inc
add
into
mov
fucomi
add
ljmp
pop
jno
xchg
testb
iret
movsb
jae
jnp
cwtl
add
push
lret
decb
pop
aam
jp
ret
lcall
nop
movb
dec
dec
push
pop
and
jno
mov
sarb
lods
clc
cmp
cmp
je
sbb
xchg
and
adc
mov
mov
test
repz
or
pop
xchg
sub
sub
jnp
aaa
or
jnp
xchg
stos
mov
lods
sub
mov
pop
pop
xchg
aam
add
pop
jg
loopne
fistl
mov
cmp
je,pn
ret
dec
sbb
lcall
pushf
movsb
rorb
lea
lea
mov
rol
ficoml
mov
aaa
shl
aam
xchg
ljmp
cwtl
je
add
jmp
sub
jnp
in
jbe
or
adc
fs
ret
or
and
jp
cmp
cmp
xor
in
mov
adc
insb
stos
lcall
repnz
out
mov
and
les
sbb
xchg
mov
scas
fsubs
cltd
or
les
push
adc
xchg
pusha
pop
mov
in
ret
push
jecxz
cmpsl
test
shl
and
nop
js
mov
lahf
hlt
jecxz
adc
inc
cmp
pop
aas
cwtl
adc
xchg
xor
das
out
adc
loop
loop
mov
xorl
imul
loopne
loopne
cltd
icebp
lahf
xchg
adc
insl
pop
idiv
je
jns
iret
jle
cmp
adc
jle
ret
movb
sar
pop
xchg
mov
fbstp
pusha
push
out
pop
popa
jae
cmpsb
bound
inc
js
das
das
cmp
rclb
stc
rol
inc
inc
jl
vpcmpgtw
jp
mov
rcrl
xlat
sub
aas
les
pop
xchg
mov
jne
dec
stos
decl
fidivl
mov
fdivs
push
into
in
cmp
subb
jb
or
and
test
cmpsl
mov
js
out
inc
xchg
pop
sbb
adc
add
sbb
test
mov
mov
rcll
addr16
pop
sbb
mov
jno
out
rorl
pop
orl
scas
aas
test
sti
sbb
push
test
jg
xlat
fbld
adc
xchg
push
imul
lods
pop
es
test
dec
lods
mov
ret
xor
std
xor
mov
lds
inc
lods
in
out
out
push
mov
out
adc
daa
icebp
fcoms
ficoml
push
mov
jns
out
dec
inc
xchg
adc
rolb
mov
push
repz
adc
xchg
outsb
dec
mov
xchg
pop
pusha
dec
push
mov
xor
aas
pop
push
fistpl
jo
jg
mov
cmpsl
stc
movsl
sbb
and
incb
stc
and
pop
pop
pop
adc
dec
sub
leave
add
or
pop
leave
aam
bound
das
pusha
movsl
xchg
jae
xchg
test
xlat
pop
xchg
repz
in
sti
mov
add
mov
lods
or
pop
inc
pop
dec
add
lahf
movsb
mov
add
pop
shlb
mov
pop
dec
lods
outsb
std
scas
leave
add
rclb
pop
mov
into
out
ret
lods
mov
push
fidivrs
out
xor
or
fsubrs
push
lea
sub
imul
fisttpll
or
cmc
inc
lret
xor
mov
inc
xchg
sub
pop
or
sub
in
sahf
scas
cmp
lock
mov
aas
outsb
push
xchg
into
xchg
sub
lods
iret
mov
push
mov
mov
in
int
icebp
mov
bound
mov
cmp
jb
add
adc
imul
je
in
inc
mov
out
jb
lret
push
loopne
dec
adc
mov
mov
or
push
incl
and
aaa
add
test
push
adc
dec
mov
imul
arpl
or
std
mov
js
fimuls
sarb
add
rorb
or
xchg
add
shlb
dec
hlt
inc
xorl
push
lds
mov
jne
cmp
lret
inc
xor
in
adc
add
test
movsb
cld
daa
test
adc
rcl
scas
xchg
scas
imulb
ret
aam
sbb
push
add
cmpsl
sbb
mov
movsl
mov
mov
imul
mov
fsubrs
sbb
jmp
jae
push
fidivrs
lret
cmc
xchg
sahf
mov
dec
pushf
jae
mov
jl
addl
inc
sbb
jge
cmc
or
shll
pop
pop
lock
nop
adc
jne
and
enter
jmp
dec
insl
cwtl
hlt
xchg
mov
inc
mov
pop
sub
sbb
test
push
stc
pop
jmp
inc
add
sub
stos
out
loopne
enter
mov
add
cmp
ss
sub
dec
pop
fdivr
xchg
push
push
jns
aas
jb
stos
sbb
mov
dec
das
xchg
shrb
adc
mov
pop
ja
imul
leave
sub
decl
xor
movsb
scas
nop
adc
mov
sti
outsl
imul
cwtl
inc
adc
xlat
inc
repz
js
dec
out
out
mov
les
add
jp
xor
add
push
xor
inc
in
mov
addr16
adc
inc
sub
and
cmc
repz
jmp
inc
inc
je
sbb
or
aam
add
out
repz
shrb
jle
stos
lods
inc
push
shrl
or
lcall
movsb
xchg
or
and
xlat
inc
frstor
mul
mov
decb
xchg
mov
adc
sbb
sub
outsb
push
pop
push
in
xlat
adc
loope
xor
cwtl
std
push
in
push
jecxz
aas
sti
mov
sub
or
js
js
jle
cltd
lods
and
rol
mov
jmp
and
mov
jnp
lods
dec
addl
mov
xor
xlat
ret
sar
xor
mov
inc
addr16
sub
mov
mov
mov
jp,pn
and
jbe
mov
aad
inc
out
cmp
xor
in
nop
popf
addl
loopne
mov
mov
mov
data16
and
mov
adc
inc
sub
mov
stos
punpckhbw
in
daa
nop
adc
push
pop
jbe
xor
fbld
push
push
lds
mov
lret
cmpsb
loop
sbb
arpl
repnz
int3
inc
inc
incb
lahf
add
into
outsb
mov
stos
push
movsb
mov
insl
stos
inc
jle
test
push
daa
fsts
jmp
rorb
jne
pop
dec
icebp
mov
adc
sub
scas
sub
cmp
jl
adc
jmp
je
lea
mov
sahf
xchg
ret
das
mov
and
outsb
jge
int
add
test
inc
sbb
pop
or
or
mov
pop
push
fimuls
pop
or
in
inc
movsb
jno
and
dec
fidivrs
pop
dec
push
push
fstpl
or
adc
out
test
lret
jbe
aas
mov
sbb
jne
xchg
mov
add
push
sahf
mov
adc
sbb
test
sub
nop
mov
loope
mov
jne
sub
or
stos
outsb
ret
decl
dec
sbb
add
sub
lret
movsl
mov
sbb
iret
cmp
mov
cltd
test
mov
xor
sub
movsl
aad
pop
mov
pushf
repnz
dec
cli
arpl
cmp
fdivrl
lahf
pop
mov
rclb
xor
or
adc
mov
mov
fisubrl
cmp
mov
adc
mov
lahf
cwtl
xor
aaa
popf
repnz
mov
sub
sahf
fistpll
cmp
cmp
pop
cmp
insb
xor
xorl
xor
popa
cli
addr16
sub
cmp
cmpsl
dec
aam
push
mov
jp
jno
ss
push
fisubrs
insb
iret
xchg
push
xchg
loop
outsl
mov
cld
leave
lahf
add
sti
lahf
decb
out
flds
popf
loopne
sarb
in
lea
xchg
scas
sub
dec
adc
lret
sbb
subl
fbstp
or
enter
iret
xlat
lea
cltd
rol
in
clc
mov
je
cld
and
hlt
mov
mov
les
insb
adc
imul
insl
jne
pop
fwait
insl
jne
sbb
dec
loope
mov
pop
push
dec
xor
in
es
sub
xchg
sbb
mov
sub
jbe
mov
add
sub
sbb
push
mov
testl
fsincos
out
mov
popa
std
addb
dec
out
jo
inc
call
ja
bound
in
jnp
dec
sub
in
pop
fdivl
push
xchg
mov
stc
lret
repz
pop
pop
dec
dec
test
jbe
mov
pop
inc
arpl
test
sub
mov
mov
mov
dec
xor
lret
repz
test
push
add
push
lahf
lret
push
lea
push
loope
ret
inc
xor
js
mov
call
add
and
cltd
mov
cmpsb
adc
addr16
jg
jge
xchg
inc
sub
sbb
andl
lret
jmp
cmp
inc
fsub
add
js
subb
sarl
mov
mov
push
and
sub
mov
add
cwtl
daa
movsl
xor
pop
sub
mov
fcompl
cld
lcall
mov
cmp
jecxz
mov
data16
sbb
fcmovu
sub
nop
gs
pop
mov
pop
xor
push
cmpsb
mov
sbb
in
loop
cmpsb
cli
lahf
inc
xor
sbb
pop
jp
in
sbb
aam
or
arpl
lret
dec
xchg
insb
mov
xor
je
jle
movsl
lret
or
adc
insl
jae
mov
das
sbb
rorl
testb
je
enter
sbb
push
ficoml
leave
lods
fst
xor
cmp
xchg
ds
in
ret
and
loop
mov
adc
jnp
repz
pusha
call
fcoml
cmp
mov
and
aas
les
push
scas
mov
rolb
in
addb
sub
pushf
pop
mov
test
ret
in
push
push
xchg
adc
nop
mov
out
xor
idivl
inc
test
mov
adc
je
iret
fdivrp
aam
bound
mov
mov
out
mov
or
std
push
in
inc
pop
xchg
adc
loop
int3
inc
xchg
int3
sbb
xchg
xor
push
push
ljmp
ljmp
lcall
push
mov
push
jb
dec
cmp
in
lcall
push
push
cltd
dec
jb
fisttpll
inc
or
sbb
leave
xor
push
cmpsb
out
jmp
and
xchg
xchg
push
mov
fisubrs
fidivrs
push
xor
cld
unpckhps
cmp
cmc
mov
xor
fdivrs
cmp
mov
outsl
push
cmp
and
mov
fistpll
jno
pusha
lods
and
adc
xchg
stos
cmp
pop
xor
imulb
out
jno
addr16
sub
sbb
mov
fcmovnb
inc
mov
or
in
mov
aaa
call
or
ljmp
sub
lret
psrlw
dec
fs
or
or
adc
popa
pop
jg
fldt
mov
fs
xchg
push
iret
and
jmp
loope
inc
pop
dec
sub
rol
sub
mov
outsl
paddusw
sbb
and
mov
pop
dec
sbb
push
repz
xchg
xchg
xchg
and
mov
int3
stc
pop
dec
jmp
adc
clc
sub
and
fdivl
stos
leave
jle
push
mov
outsl
jae
pop
jns
mov
hlt
repz
dec
popf
pop
push
insb
sub
insl
mov
js
rorl
and
fmuls
iret
nop
clc
loop
sbb
leave
mov
jmp
aam
scas
dec
mov
cwtl
cmc
pop
test
loope
mov
jecxz
mov
jae
test
imul
pop
dec
cmp
repz
push
push
sub
dec
test
adc
sbb
hlt
sub
fstps
fs
pop
xchg
add
push
sbb
or
test
test
sub
es
mov
pop
test
bound
arpl
pusha
dec
lea
cmp
adc
jno
in
adc
push
sahf
rcl
je
push
sahf
and
pop
inc
sti
pop
outsl
jno
adc
and
pop
addl
pop
je
xor
mov
jns
movsl
mov
leave
push
aad
std
xor
nop
push
pop
clc
test
mov
popf
push
sbb
inc
push
xchg
inc
mov
or
ljmp
outsl
mov
cs
xchg
rol
sbb
mov
repz
xor
fidivrl
shlb
sbb
adc
mov
jl
xchg
ss
pop
dec
icebp
or
loope
bound
mov
pop
xchg
add
cmpsl
cmp
inc
cli
pop
fs
jge
or
test
mov
mov
shlb
div
lahf
add
in
dec
add
jg
fmuls
xor
imul
mov
mov
push
push
adc
loopne
fwait
push
push
sbb
lret
nop
xor
call
mov
mov
test
jmp
call
test
mov
pop
ret
stos
in
xor
cmp
and
inc
mov
roll
jae
imulb
insb
in
test
movsb
mov
jg
ljmp
das
push
js
stos
xor
cmpsb
sub
mov
out
xchg
call
mov
mov
xchg
movsb
jne
jb
inc
jno
mov
fldcw
out
xchg
xlat
jb
das
mov
clc
iret
aaa
mov
xchg
enter
cmp
jge
ja
pop
dec
rcl
jb
loope
mov
pusha
nop
jle
jno
bound
cmc
sub
gs
dec
jae
lret
inc
fdivl
xchg
mov
jbe
adc
push
jmp
hlt
xchg
cmp
lahf
mov
cmp
mov
adc
es
push
sbb
push
mov
scas
in
xor
mov
mov
or
call
mov
pop
enter
or
rorl
lea
jb
roll
sub
cmpsb
pop
cmc
int
xchg
mov
icebp
nop
dec
in
xchg
subb
ljmp
gs
test
cmc
ljmp
or
test
and
movsl
jb
sub
hlt
push
icebp
insl
std
or
cli
jp
sub
push
push
mov
inc
in
ljmp
push
dec
dec
xchg
pop
ja
std
push
int3
cwtl
aad
or
stos
out
mov
les
mov
cmp
pop
xchg
fidivl
sbb
mov
cmp
jbe
leave
lcall
and
push
scas
test
inc
movsl
insb
add
repz
bound
and
fistps
or
cwtl
iret
mov
sub
nop
inc
pop
jle
adc
or
xor
adc
mov
push
cmp
mov
lods
mov
movsb
push
push
shlb
das
sar
push
xchg
testl
xchg
cmp
xchg
or
int
lret
push
and
xchg
add
dec
sbb
jnp
adc
and
test
mov
in
negb
lea
mov
jmp
pusha
and
shll
and
ret
xchg
push
in
subl
push
push
cs
jge
out
aaa
pop
pop
jge
mov
outsl
sti
xor
inc
clc
testb
and
mov
pop
loope
sti
lcall
cwtl
cmp
sub
dec
in
add
jo
bound
push
pop
mov
mov
stos
mov
les
cmp
scas
pop
add
jae
fwait
inc
push
mov
sahf
mov
cmp
lret
stc
scas
jmp
cltd
inc
je
outsl
in
sbb
in
dec
ja
push
movsb
fldcw
add
testl
call
in
andl
and
loope
ljmp
pushf
jns
push
jg
scas
dec
cmp
rcrb
add
xor
das
mov
inc
or
push
inc
adc
mov
push
daa
push
sbb
xchg
arpl
xchg
or
pop
insb
inc
mov
jo
mov
push
dec
fwait
xchg
dec
cmp
or
mov
test
inc
shrl
mov
dec
aaa
add
lock
jmp
dec
popf
xor
cmp
int3
in
jmp
test
mov
lds
and
mov
das
mov
pop
sti
cmp
in
pop
std
push
xchg
push
adc
imul
les
cwtl
pushf
pushf
sbb
pushf
mov
sub
scas
and
and
mov
subb
loopne
inc
cmpsl
decl
mov
dec
rcll
lretw
test
adcl
dec
add
adc
mov
pop
into
ljmp
pop
jg
sub
dec
fistpll
adc
jne
stos
dec
dec
insl
ljmp
cmpsb
mov
daa
ret
adc
cs
push
mov
scas
adc
add
loope
pusha
pop
adc
xor
icebp
and
test
jecxz
xchg
and
ret
adc
sub
sub
cmpsl
stc
adc
pop
dec
fcomps
push
mov
push
mov
out
xor
std
enter
dec
or
sti
in
cltd
fistpl
jmp
cmpsl
or
js
ret
cmpsl
push
adc
repnz
pop
cmpsb
mov
dec
repnz
xor
cmc
cs
pop
push
inc
in
push
jg
cmpsb
push
cmpsl
mov
lds
add
ud0
ret
xor
popa
pop
lcall
mov
or
insl
pop
pop
in
mov
shlb
outsb
dec
push
push
cltd
or
xchg
inc
test
sti
rcll
push
mov
sbb
mov
cmp
subb
inc
aaa
and
loopne
sub
cmpb
add
fstpl
arpl
push
cmp
or
and
test
int3
jg
sub
stos
push
iret
add
sub
sbb
add
test
xchg
fsubrs
movsb
mov
lods
out
aaa
rclw
cli
adc
sbb
inc
mull
in
and
out
inc
jb
cli
pop
insl
and
shrb
in
or
adc
pop
mov
mov
add
out
mov
mov
leave
inc
fisubs
or
pop
loop
pop
xor
jg
into
lds
jecxz
fcomi
mov
or
jge
push
loope
and
cs
xchg
fsubl
mov
int3
xlat
orb
or
hlt
insb
sub
sbb
pop
pop
ss
ss
jp
fistpll
push
sarb
addb
or
adc
outsl
push
xor
rorl
cmp
cmp
push
ss
mov
and
inc
fwait
imul
xchg
fstl
mov
sti
dec
enter
jmp
inc
jecxz
mov
repnz
out
dec
in
adc
dec
je
clc
sub
mov
jecxz
in
jl
lret
xchg
push
fs
mov
subl
mov
cmp
jns
in
sub
xorl
int3
out
push
fisttpll
pop
hlt
adc
imul
pop
push
gs
sub
xor
jnp
sub
cmp
bound
push
out
xchg
imul
mov
in
cmp
mov
xor
addr16
mov
out
dec
fcompl
jnp
nop
repnz
sbb
mov
rolb
mov
dec
jbe
xchg
std
or
adc
xchg
mov
test
lret
xchg
xchg
ljmp
adc
cmp
mov
adc
xchg
aaa
or
ss
icebp
addr16
push
cli
int3
fstpl
sti
and
adc
and
jp
push
movl
imul
test
sub
rcrl
fisubl
mov
xor
jp
push
in
inc
aas
xchg
fwait
cltd
mov
jae
lret
sbb
and
scas
bound
jnp
mov
shll
and
lea
jno
stos
xor
add
loope
sbb
and
xor
movsb
in
sbb
mov
xchg
fs
push
push
xor
mov
sub
cmpb
or
cmc
sti
rorb
jmp
mov
push
outsl
movsl
xor
jmp
mov
mov
mov
jbe
and
rolb
mov
mov
xchg
xchg
outsl
iret
mov
jne
rclb
stos
sub
push
adc
and
movsb
mov
sahf
pop
out
pop
mov
and
dec
aaa
mov
xchg
mov
dec
inc
mov
lret
bound
int
addr16
xlat
sub
hlt
mov
cmp
mov
cltd
mov
push
out
or
cmp
or
add
pop
inc
leave
sti
fs
in
jns
mov
bound
imul
or
ret
xchg
mov
fcomi
int
dec
push
lahf
mov
adc
mov
dec
ficompl
sub
mov
adc
push
shlb
adcb
pop
xchg
pop
mov
add
cmp
loopne
pusha
out
dec
pop
push
jo
fsubs
mov
repnz
mov
pop
ds
fstl
fdivl
mov
xlat
stc
outsl
jbe
jge
out
inc
jns
out
imul
dec
sbb
or
data16
xor
fsubrl
fdivrl
addl
in
mov
sub
repnz
ret
in
push
sub
pusha
jmp
ret
dec
or
out
push
lret
xor
sbb
call
dec
xor
rcrb
addr16
xchg
push
jbe
ret
loope
aam
movsb
ds
add
dec
ja
iret
push
lret
cli
stos
mov
rcrb
cli
jl
add
jmp
xor
aas
in
add
and
mov
dec
je
mov
addl
xchg
inc
push
sbb
adc
aas
xchg
sub
jno
pop
mov
add
pop
sbb
cmp
rol
ret
xor
adc
sbb
aad
push
out
and
add
rorb
lock
sbb
ret
iret
testl
sbb
aam
xchg
push
stc
outsl
mov
jno
dec
sarl
lahf
pop
xorl
addr16
sbb
in
in
dec
dec
and
sbb
inc
sub
xchg
xchg
lock
movsb
mov
test
xchg
cmp
in
and
shl
xchg
shlb
dec
pop
mov
mov
mov
int
daa
xor
dec
mov
jecxz
mov
aas
cmp
rolb
in
sbb
outsl
xor
jp
jmp
scas
mov
shrb
jle
lock
xchg
xor
pop
rorl
repz
mov
je
lret
adc
and
jb
cmp
leave
xchg
cltd
scas
sub
push
pop
popf
clc
repz
in
xchg
mov
push
clc
jb
jns
or
adc
cli
jno
cmp
repnz
sub
pushf
stos
jb
test
int
pop
icebp
flds
stos
adc
or
iret
ret
jmp
mov
xor
xor
mov
mov
push
ja
adc
repz
repz
mov
xchg
jp
xor
adc
arpl
lods
or
add
movsb
call
outsb
stos
iret
sbb
sub
dec
repnz
addr16
in
mov
pusha
push
push
les
mov
loop
cmp
and
add
es
stos
roll
xor
mov
aas
sub
loop
adc
sahf
lock
ss
popa
popa
insl
xchg
or
mov
push
cmp
sbb
cli
push
lods
pushf
xchg
cmc
or
push
or
add
dec
mov
inc
push
mov
mov
shr
js
dec
mov
lahf
shll
adc
jno
push
or
cmp
adc
jle
inc
fwait
in
mov
and
mov
icebp
out
movl
add
add
lds
dec
mov
mov
mov
jle
ret
into
ds
es
adcl
xchg
add
inc
mov
mov
flds
les
inc
jnp
adc
dec
mov
inc
push
pop
ret
cli
jae
xchg
insb
js
xlat
fdiv
jle
imul
push
pop
sub
inc
xorl
jg
lods
mov
cmpsl
pushf
icebp
aad
into
adcl
imul
arpl
fistpl
test
pop
and
adc
push
jb
into
imul
dec
int
ljmp
add
sbb
lods
sub
test
mov
ret
addl
push
mov
sbb
pop
call
jmp
test
push
mov
leave
mov
cmp
fimuls
scas
or
inc
xchg
clc
fdivrl
dec
or
xchg
dec
dec
std
repnz
cmp
dec
cli
cmp
cs
icebp
fsts
shll
mov
dec
pop
bound
jecxz
add
lock
call
mov
xor
cltd
int3
xchg
push
pushf
shlb
jmp
imul
mov
insb
push
pop
lea
xlat
push
je
mov
jae
fld
xchg
pushf
popa
outsl
pop
bound
pop
insl
rcrb
daa
adc
dec
adcb
mov
arpl
pushl
cs
jns
movsb
adc
out
pop
outsl
dec
stos
sub
lds
daa
repnz
repz
cmp
xor
push
adc
movsb
pop
inc
inc
xlat
push
sub
sahf
cmp
repz
es
mov
call
xchg
or
test
xchg
out
adc
push
xbegin
movsb
xor
mov
das
cmp
fiaddl
cmp
cmpsl
dec
xor
ja
outsb
jecxz
icebp
testl
daa
dec
out
ret
sub
add
add
jecxz
xchg
adc
or
sub
xor
push
fsub
adc
xorl
movsl
dec
pop
mov
sub
sbb
js
das
inc
push
sub
or
js
jae
and
test
fimull
in
cmp
jo
jns
or
push
insl
mov
testb
scas
dec
fcoml
jne
mov
je
dec
notl
popf
sbb
adc
ljmp
xor
xchg
insl
push
sub
jno
fidivl
sbb
cmp
lcall
mov
inc
inc
mov
jae
xchg
pop
pop
scas
ret
outsb
mov
xchg
loopw
xchg
mov
and
scas
fwait
or
pop
out
add
jns
daa
cwtl
imul
cmpsb
mov
repnz
add
lcall
sub
test
cs
in
pop
adc
test
dec
push
sbb
push
dec
mov
or
mov
sti
sub
scas
adc
popa
adc
dec
mov
xor
jns
jge
push
iret
stos
in
imul
cmp
lods
cltd
dec
push
pop
cmp
sub
lods
pop
sub
into
mov
mov
mov
jmp
clc
clc
xchg
incl
outsl
xchg
cmpsb
xor
enter
popa
mov
lds
xor
sbb
mov
in
lret
mov
sub
test
push
mov
test
mov
ret
push
loopne
mov
test
or
xlat
mov
fstl
outsb
xchg
or
jmp
mov
imul
rol
add
dec
mov
fs
pushf
mov
pop
cltd
fcomps
std
movsb
lret
ss
push
cmp
push
adc
dec
xchg
aas
cwtl
mov
std
cltd
xchg
cmpb
inc
dec
jae
shll
sarb
inc
add
adc
dec
sbb
stos
loope
xchg
push
aam
andl
mov
outsl
push
xchg
and
int3
lcall
inc
jmp
lods
inc
subb
mov
push
pop
cmp
div
cli
cltd
test
clc
mov
inc
cwtl
xchg
ljmp
xlat
rorl
adc
pop
or
jecxz
xchg
xchg
ret
scas
mov
sbb
lea
cmp
pushw
xchg
xlat
pushf
mov
cs
or
outsb
xor
jnp
xchg
xchg
jecxz
test
mov
mov
jp
in
lods
mov
add
xor
lret
sbb
movsb
test
insb
cld
repnz
mov
mov
sub
xor
pushf
cltd
inc
mov
int3
mov
sbb
iret
daa
inc
nopl
fcomp
and
fsubr
jge
cmp
xchg
aaa
lods
roll
and
lea
sti
popf
inc
inc
and
push
inc
imulb
mov
and
xor
enter
ljmp
cwtl
outsb
and
add
jo
fisttps
fs
orl
loope
cmc
popa
and
or
pop
das
push
test
inc
push
jl
cwtl
jp
int3
sub
insb
add
xor
xchg
insb
or
in
xchg
xor
out
sub
ja
movsb
push
rcr
fldt
cli
mov
stc
rcll
xchg
push
loope
inc
jmp
add
lahf
mov
xlat
daa
fdivs
loope
and
xchg
js
in
mov
cmp
jae
leave
cmp
test
sub
nop
sti
xlat
rolb
jl
adc
addr16
out
mov
cltd
mov
into
jns
popf
int3
jb
and
imul
ret
mov
mov
cltd
xchg
out
xchg
fs
sub
loop
cwtl
shll
popa
inc
pop
push
pop
in
call
popf
xchg
ret
stos
aaa
cmp
call
push
int
sbb
in
stos
lahf
push
cmp
subb
dec
xchg
aaa
testb
xchg
jg
sub
inc
ljmp
dec
pop
push
roll
mov
adc
aaa
mov
sub
push
xchg
push
add
arpl
orl
test
push
test
pop
testl
jnp
sbb
mov
or
loop
jg
mov
jo
ret
hlt
mov
adc
divl
iret
sbb
arpl
js
xchg
andl
sbb
jne
adc
stos
fldenv
insb
cmp
out
jnp
repnz
test
xchg
mov
xchg
mov
lret
sub
into
xor
dec
and
loope
loop
add
inc
hlt
shlb
cmpl
int
xchg
inc
sar
fwait
cltd
mov
andb
int3
in
fistl
imul
insl
popf
mov
ss
or
xchg
jbe
pop
push
rorl
adc
sub
add
out
xlat
mov
fimull
ret
int3
sar
or
inc
push
and
dec
add
adc
add
rcr
shlb
sub
mov
into
push
fsubl
shl
out
mov
mov
dec
jns
dec
cmp
and
js
sub
and
shl
cmc
jb
rorl
lahf
add
jae
test
test
int
cltd
sahf
aam
jnp
pop
add
fs
mov
leave
fstps
int3
push
mov
out
pop
mov
imul
cwtl
pop
xchg
pop
jmp
and
mov
hlt
adc
jne
push
std
js
push
stos
les
popf
sarb
jnp
xchg
push
xchg
out
mov
dec
mov
repz
sbb
out
inc
and
insb
out
enterw
ljmp
mov
sbb
xchg
hlt
push
dec
mov
imul
loope
or
sbb
jo
xor
lock
stos
into
and
je
mov
mov
cmp
negl
fiadds
push
sbb
insl
test
int3
dec
push
mov
das
and
push
stos
mov
dec
ret
clc
inc
jnp
lds
xor
das
out
cmp
push
mov
hlt
sub
shll
ja
data16
aam
push
aas
jne,pt
les
cmp
ds
pop
xchg
int3
xchg
sar
hlt
mov
dec
sub
aaa
push
cmp
popf
dec
lds
icebp
scas
adc
cltd
and
jnp
jmp
jge
icebp
data16
inc
insb
jae
icebp
pusha
inc
sbb
pop
or
call
ja
jbe
xchg
jb
jecxz
shl
std
cmpsl
pop
mov
mov
ja
mov
and
jae
into
loopne
les
shll
subb
mov
pushf
adc
mov
gs
jno
ds
add
sub
mov
cli
in
sti
sub
mov
dec
in
dec
in
fiadds
sahf
jae
xchg
push
jno
dec
inc
fistl
scas
into
pop
jb
pop
dec
shlb
add
out
scas
pushf
mov
mov
sub
rorl
loop
sbb
decb
ss
xchg
push
fildll
and
pop
jbe
es
add
in
sub
imulb
ds
int3
pusha
jne
sub
and
jne
mov
imul
out
cmc
cs
jle
test
or
sbb
xchg
jge
sub
dec
add
inc
xchg
notl
les
inc
cmpsb
push
dec
sbb
daa
pushf
xor
inc
xchg
test
inc
fmuls
or
mov
js
outsl
inc
outsl
es
xchg
outsl
sbb
cmc
movsb
cmp
cld
pop
pushf
movsl
pusha
fisubl
pop
int
adc
and
loop
int
fcmove
rcpps
mov
dec
add
js
adc
cltd
pusha
cmpsb
out
addr16
mov
das
jge
mov
repnz
loopne
inc
and
in
scas
inc
pop
scas
sbb
xchg
shrb
add
daa
fisttps
insl
je
loope
adc
repnz
sbb
lret
cld
test
lds
add
iret
mov
dec
je
negl
fyl2x
pop
call
cli
es
ret
xchg
clc
das
adc
shlb
push
and
push
and
cwtl
stc
movsb
test
fwait
repnz
jns
xchg
dec
mov
jo
repnz
mov
and
xor
push
dec
pop
cmpsb
scas
lret
dec
cmp
jmp
insb
popf
rcl
daa
sub
orb
cwtl
jo
popf
xor
push
ret
or
xchg
xor
jns
push
jg
or
imul
mov
imul
mov
aas
mov
ret
cmp
mov
not
arpl
sbb
sbb
pop
aam
sbb
pop
dec
sti
sbb
jo
adc
mov
cli
mov
and
xor
mov
cmpsl
call
ss
xor
mov
pusha
sbb
mov
dec
not
into
aas
cltd
fdivrp
mov
xchg
movsl
lret
jecxz
ss
sti
push
cmp
jle
cmp
in
mov
dec
mov
or
jne
xchg
push
cli
mov
ds
orb
cmp
pusha
scas
dec
add
fistpl
fbld
jl
cmp
mov
jnp
aaa
fwait
push
test
jae
add
jle
mov
jl
clc
cwtl
sub
mulb
mov
pushf
mov
cmp
fldcw
imul
repz
aam
pop
out
xchg
xlat
pop
or
inc
add
adc
mov
and
adc
mov
mov
pop
movsb
data16
js
lcall
mov
push
addb
lret
jnp
cmc
fsubl
movsl
outsb
data16
sarl
lcall
xor
dec
mov
sub
pop
enter
in
mov
scas
dec
sbb
xchg
xchg
rcll
jge
and
mov
mov
jne
sub
xor
push
mov
rol
cs
or
jle
mov
lods
dec
pop
aaa
out
mov
adc
stos
test
filds
mov
inc
or
cmp
xchg
pop
xor
adc
sbb
push
in
adc
addr16
mov
xchg
push
ss
push
push
ret
xchg
es
push
addb
cmpsl
ds
or
lret
aaa
push
and
jo
aas
push
pop
inc
out
cltd
sub
imul
sub
mov
mov
loop
aas
sbb
or
push
dec
scas
enter
fs
aas
ja
imull
in
test
rcrb
sub
pop
xlat
add
repz
es
adc
dec
and
push
sub
addr16
ds
bound
cli
sahf
jae
mov
push
add
add
mov
inc
dec
clc
xor
inc
or
psubq
test
push
hlt
stos
insb
imul
lahf
push
pusha
je
pop
in
add
stos
aaa
sbb
lea
dec
movsl
test
ret
jne
jno
cmp
bound
xchg
sub
dec
std
cmpl
loop
std
mov
icebp
ja
aad
xlat
mov
int3
adc
cmpsb
clc
mov
pop
iret
xlat
out
aad
sub
mov
test
push
jno
mov
or
scas
push
sbb
cltd
movsl
pminub
push
dec
ljmp
sub
cmp
mov
lret
testb
addr16
dec
lcall
fists
or
test
add
lret
es
daa
lods
sbb
rcll
ret
xchg
jl
repz
pop
nop
lods
incb
sahf
testb
insl
xchg
movsl
dec
in
cmp
lahf
into
fsubs
dec
jbe
f2xm1
gs
inc
cltd
lock
ss
mov
in
xchg
dec
and
fbstp
mov
push
je
push
push
adc
lahf
enter
push
fimull
inc
insl
or
ds
cmp
ret
sti
push
push
push
aaa
jge
pusha
test
bound
add
and
pop
repz
bound
ja
or
add
mov
mov
xor
adc
xchg
pop
cmpsl
rolb
daa
pop
push
sarb
test
repnz
lds
xlat
mov
xor
sub
addr16
pop
adc
movl
sub
pop
sar
fnop
popf
sbb
add
jne
xlat
xor
cmp
scas
adc
fwait
inc
fs
daa
outsb
inc
mov
fldt
and
pop
mov
xchg
data16
fwait
or
push
and
push
add
lods
sub
xchg
push
pop
mov
xorb
adc
inc
push
fstp
in
bound
ret
xchg
dec
mov
jp
ljmp
mov
insl
ret
sbb
shrl
std
push
mov
cwtl
test
or
push
xor
dec
lahf
dec
and
je
fsubl
insb
movsl
clc
mov
mov
cltd
mov
enter
jbe
les
stos
push
bound
push
arpl
pop
pushf
inc
mov
jb
mov
push
sbb
jbe
add
adc
jo,pt
addr16
cli
mov
inc
test
loop
test
xor
mov
idiv
inc
ljmp
and
lret
inc
imul
leave
bound
sub
out
dec
fdivs
and
call
gs
testb
or
sbb
pop
sbbb
fidivrs
sub
mov
dec
add
pop
dec
bswap
push
jne
adc
inc
movb
adc
push
inc
mov
mov
jbe
jmp
jns
pop
pusha
sub
sub
mov
pop
scas
nop
sbb
popa
adc
pop
add
and
std
rorb
fimuls
mov
enter
jnp
fldcw
icebp
add
mov
sub
lahf
lea
sbb
mov
insl
notl
sbb
inc
xchg
ret
push
xor
into
push
sahf
sub
lods
movsb
cmp
push
push
dec
xchg
arpl
mov
or
jmp
sbb
dec
fistps
repz
xor
inc
repz
pop
push
cs
inc
lret
inc
aad
jp
pop
push
mov
enter
dec
adc
sbb
mov
jmp
imul
mov
lret
popa
jmp
enter
pop
js
shl
cmp
xchg
mov
cmpsb
add
ds
pusha
inc
in
aas
sub
cli
sub
dec
mov
mov
sar
mov
xchg
dec
xchg
sahf
cmp
out
daa
cmp
arpl
mov
mov
jb
pop
push
or
movsl
arpl
movsb
fmull
cmp
mov
pop
cld
or
xchg
aad
pop
mov
test
jnp
xor
in
inc
stos
mov
mov
outsb
push
gs
xchg
mov
add
add
dec
dec
mov
dec
in
dec
fwait
lock
std
sbb
iret
mov
add
imul
sub
or
leave
and
xor
les
pop
mov
mov
sbb
mov
outsb
es
in
fnsave
inc
imul
adc
jle
or
jae
jg
stc
lret
push
jo
loope
das
xor
sbb
and
sbb
add
jg
enter
push
inc
aaa
imul
xor
dec
loop
xchg
dec
mov
subl
push
cwtl
out
lds
mov
fists
mov
add
sbb
mov
and
orb
add
xorb
xchg
xchg
aam
negl
add
cmp
lds
sbb
push
dec
push
iret
sub
std
pop
xorl
xchg
enter
clc
mov
sub
test
in
mov
add
fsubrs
jae,pt
push
jns,pn
fbld
faddl
in
push
scas
rclb
or
adc
test
mov
pop
jno
nop
mov
fdivl
sti
mov
int3
out
mov
mov
icebp
mov
dec
add
ds
pop
cmp
jge
mov
mov
and
dec
or
ja
test
cli
je
add
ficoml
outsl
jg
cmp
push
insb
inc
xchg
jbe
ds
fwait
inc
jg
or
xchg
or
int
ficomps
and
shrb
mov
mov
sbb
push
lcall
cwtl
xlat
add
les
mov
pop
fidivs
ja
and
push
stc
repz
out
ret
push
mov
sub
and
sarb
add
add
sub
inc
xor
std
jecxz,pt
lret
inc
or
mov
icebp
adc
mov
mov
mov
adc
stos
enter
xlat
dec
inc
sub
pop
into
jae
fdivrp
nop
sub
mov
inc
imull
cmpsl
push
lock
mov
pop
icebp
sbb
enter
lds
and
clc
fucomi
xchg
int
cwtl
je
fisubrs
adc
jg
jae
sub
aam
sbbl
xor
sub
cli
dec
dec
rcrb
jnp
sub
sbb
shrb
bnd
push
int
push
mov
out
mov
dec
jae
jae
adc
xor
mov
leave
cmc
addb
push
lods
mov
rclb
jb
jne
shrl
mov
push
mov
mov
cmc
xchg
pop
add
imulb
dec
fstp
int3
movl
dec
cmc
mov
mov
fmull
pop
xor
popf
ret
and
mov
inc
out
test
ret
je
jne
mov
cmpsl
out
inc
inc
mov
push
rcrl
stc
scas
aas
dec
pop
filds
in
cmc
aad
stc
and
inc
lods
or
invd
imul
ljmp
add
sti
xor
jge
cwtl
xor
repnz
jp
and
jle
and
lahf
lcall
testb
je
sub
fwait
xor
cmc
bound
das
lds
std
mov
pop
or
mov
pop
in
mov
out
cmp
sbb
ds
shll
ljmp
mov
outsb
shl
subl
jecxz
xlat
inc
sahf
fdivrs
cmp
jb
sub
adc
dec
and
inc
and
sqrtsd
cmp
mov
fwait
xor
in
sbb
and
movsl
ljmp
das
xchg
out
push
jns
xor
mov
inc
stos
lret
lret
iret
mov
xlat
rclb
ficomps
cmpsl
cmpsb
sub
jbe
adc
push
bound
test
stos
and
xchg
mov
mov
and
shlb
aas
ficoml
xchg
and
mov
loopne
jg
mov
dec
or
pop
cmpsl
add
jae
mov
pop
aam
push
mov
mov
sarl
js
shlb
call
or
fsubs
or
fstpt
rclb
icebp
xor
pop
cmp
jne
loope,pt
rclb
outsb
cli
mov
inc
gs
pop
mov
adc
stc
dec
inc
ds
bound
add
rolb
jb
aam
or
outsl
lods
in
icebp
pop
and
shrl
rol
jl
sbb
inc
mov
addr16
xchg
mov
dec
hlt
inc
test
push
xorl
fiadds
sub
jl
add
pop
push
cmc
fdiv
xor
mov
dec
shr
pop
cmp
pop
roll
sub
mov
sub
cmp
cli
mov
movsb
adc
ljmp
or
ljmp
in
fists
mov
xor
sbb
stc
test
mov
push
rol
fistpll
or
es
mov
hlt
xor
mov
add
jo
sbb
movsb
pop
lock
mov
pop
ds
std
add
sub
jge
push
cmpsl
inc
shr
call
scas
push
dec
push
and
jmp
rcrb
inc
xor
xchg
jp
aam
lods
lea
or
lock
cld
test
sub
inc
inc
aaa
mov
test
fisubs
xchg
sub
cmp
xor
jmp
iret
push
cmp
ret
scas
xchg
ffreep
cltd
in
ja
mov
sub
loopne
push
iret
les
imul
shlb
repz
push
pop
testb
mov
mov
mov
xchg
xor
push
dec
pop
inc
jmp
js
mov
cmc
loopne
xchg
cld
das
xchg
pop
and
rcrl
dec
pushf
xchg
pop
popf
mov
mov
or
hlt
pop
mov
pop
push
sbb
mov
dec
mov
test
cmpsb
push
jb
stos
jno
lock
test
jnp
fdiv
add
dec
pop
and
das
cltd
int3
out
adc
fstp
stos
mov
sub
aam
mov
push
gs
push
cmp
or
mov
dec
add
or
imul
jno
xor
xor
je
sub
imul
scas
ret
pop
jp
push
cmp
shlb
xor
imul
fwait
mov
popa
lods
xchg
mov
and
into
pop
movsl
insl
lret
pop
test
sbb
es
push
xor
loop
movsb
dec
xchg
xor
jbe
mov
jo
adc
adc
popw
sub
sbb
jno
pshufw
sub
hlt
jmp
sti
and
mov
test
loop
mov
in
cli
jle
out
imul
pop
movl
imul
jle
pop
pop
push
cmpsb
xor
ljmp
dec
and
lea
pop
idiv
or
ret
xchg
add
mov
jg
rclb
mov
in
popa
or
out
stos
dec
dec
stc
add
push
sbb
ficomps
out
insb
cltd
aam
adc
xchg
loope
sub
push
and
mov
and
out
pop
cwtl
repz
and
test
pop
xchg
mov
inc
lds
data16
pop
xor
test
push
out
mov
daa
in
xor
and
xchg
mov
jmp
mov
cmp
mov
test
adc
loopne
cwtl
cmpb
adc
and
mov
shl
inc
lds
dec
cmp
jecxz
fld
adc
out
jbe
les
lock
scas
dec
loope
mov
rorl
cltd
xchg
ljmp
jecxz
cwtl
les
sahf
adc
mov
das
and
mov
xor
xor
mov
insb
fsubrl
je
mov
je
dec
ja
hlt
repz
mov
ss
mov
add
fmul
pop
inc
std
jne
jl
pusha
aad
or
shll
adc
nop
mov
shll
into
jb
pop
xchg
pop
jo
loope
js
sbb
sub
pop
adc
test
mov
mov
jecxz
movb
hlt
negb
cmc
add
sar
fldenv
dec
dec
cs
adc
fldcw
and
cmp
sti
sbb
cli
xchg
mov
jle
jbe
dec
jb
mov
out
push
dec
pop
jns
sub
and
xchg
and
xchg
clc
mov
into
les
and
out
push
jae
mov
cmpsl
sub
adc
cmc
cwtl
inc
xchg
lahf
sbb
repz
xchg
enter
inc
push
pop
scas
xor
pusha
outsl
iret
ss
ficoms
and
gs
or
cmpsl
mov
or
mov
int
xlat
xchg
or
mov
cmp
inc
xchg
lret
out
jg
or
and
mov
jmp
jecxz
sarb
push
xor
add
in
sub
add
loop
dec
cmc
je
out
mov
stos
int3
pop
cmp
je
in
addr16
mov
ret
mov
xor
idivb
ja
mov
je
lods
mov
push
leave
jae
pop
aad
pop
cli
ret
push
and
ss
jno
jp
jns
dec
or
dec
cmpsb
test
adc
adc
ret
sti
mov
pop
jp
int
sarb
pop
push
xchg
mov
jne
aam
ror
enter
fcomps
dec
push
and
cmp
xchg
ret
incl
and
adc
mov
jno
loope
hlt
jp
jmp
pop
jge
lods
fdivl
jge
stos
or
sub
pop
dec
ljmp
shlb
andps
pop
and
cmp
push
in
fimull
stc
xlat
cmp
add
push
sbb
andl
sbb
jno
add
push
jae
repnz
xor
sbb
out
push
aam
sub
fdivl
sub
inc
lret
imul
mov
push
cmp
pop
jmp
repnz
adc
add
inc
pop
in
lcall
test
pop
adc
hlt
sbb
nop
sub
shlb
sti
fimuls
mov
into
iret
fucompp
pop
add
cmp
fmull
jle
xchg
inc
icebp
sbb
into
push
mov
call
into
bound
ret
cmp
in
sbb
mov
xorb
xchg
mov
mov
push
push
aas
xchg
imul
cmpsb
mov
and
dec
mov
les
bound
mov
add
mov
sbb
jmp
popf
je
xchg
mov
int3
shrl
inc
jp
das
cltd
adc
adc
pop
jge
inc
add
pop
mov
call
xchg
mov
gs
jae
loopne
mov
idivb
stos
pop
in
xor
xchg
mov
add
in
cmc
and
push
leave
js
testb
sub
push
outsl
push
xlat
test
jns
mov
lock
mov
out
lds
sbb
xor
lcall
pusha
and
sbb
out
sub
loop
comiss
xor
inc
jb
out
sub
mov
repnz
inc
imul
in
pop
outsb
stc
cs
xor
adc
pusha
xor
mov
sbb
jecxz
mov
cmp
insb
push
xchg
jb
xchg
add
or
sbb
add
jmp
adc
mov
push
dec
dec
jge
pop
jne
dec
mov
les
push
jno
push
cwtl
out
imul
data16
xchg
into
mov
jp
jno
push
sbb
ljmp
outsl
inc
stc
cmp
cs
and
in
pop
pop
or
cmp
add
push
or
xlat
pop
xchg
shll
pop
outsb
stos
int3
iret
mov
mov
xor
mov
fmuls
arpl
xchg
lea
xlat
pop
test
xor
mov
push
sub
push
or
out
push
pop
or
shr
int3
cmp
mov
arpl
cmp
les
shr
pop
mov
aam
xor
dec
push
push
mov
jg
inc
test
cwtl
ret
lcall
push
cmp
jnp
rorl
jns
dec
inc
add
and
rcr
scas
lods
fdivs
mov
cld
sti
adc
shll
xchg
jno
aam
jecxz
lods
insl
pop
iret
pop
and
cwtl
cwtl
std
cmp
int3
lahf
into
out
add
mov
xor
fs
mov
decl
into
mov
frstor
sahf
mov
iret
jge
nop
fwait
xchg
and
pop
sub
sahf
divb
ljmp
sub
icebp
popa
out
sbb
and
dec
mov
xlat
arpl
sbb
cmp
mov
rcr
inc
es
fistpl
xchg
enter
jle
xor
jae
mov
push
cmpsl
dec
cmpsl
aam
lcall
cmp
mov
adc
js
inc
rclb
shll
cmp
push
cli
mov
test
repz
push
mov
cld
in
pop
xchg
leave
stos
sbb
lock
sbb
jmp
push
or
popf
ljmp
sti
add
adc
and
adc
int3
dec
dec
data16
scas
bound
ret
clc
mov
push
xor
jge
or
fs
popa
and
mov
mov
inc
sbb
push
mov
or
repnz
inc
andl
pop
js
mov
adc
jmp
lcall
sub
push
push
jmp
inc
inc
dec
test
in
les
mov
adc
je
out
mov
pop
dec
int
rorb
ret
add
xchg
out
jbe
pop
in
jp
dec
lods
dec
cmp
inc
je
cld
iret
pushl
pop
lds
and
popf
mov
xor
jmp
insb
out
cld
jmp
stos
popf
ret
loopne
icebp
minps
iret
lds
popa
sub
ss
nop
push
jo
inc
mov
sbb
inc
rcrl
cmp
and
out
leave
sub
jecxz
inc
mov
stc
lret
push
mov
rorl
rcl
mov
mov
in
cmpsb
addr16
mov
movb
jne
dec
lds
aaa
cmp
jle
mov
lock
mov
fmul
pop
sbb
enter
pop
adc
jo
rcr
jmp
cld
setns
sbb
lods
outsl
mov
push
mov
xchg
jne
sar
in
aaa
ja
sbb
out
aaa
add
inc
lret
ret
xor
or
dec
jae
sbb
or
lds
pop
filds
std
sbbl
xchg
jmp
repz
pop
fcomip
dec
mov
lds
scas
xlat
enter
in
jne
ja
jmp
imul
mov
test
mov
or
movsl
inc
mov
mov
push
cmpsb
add
rorl
add
es
xchg
ficompl
push
andb
nop
sub
std
xchg
mov
jge
lea
mov
stos
add
pop
push
es
and
les
sti
xor
pop
sbb
je
ficoml
dec
mov
add
loope
add
imul
xor
sub
xchg
loope
or
cmp
sbb
outsl
sti
out
inc
cli
nop
pop
pop
bound
sbb
mov
lcall
sbb
jmp
mov
cmp
mov
addr16
lcall
jo
loopne
push
or
pusha
push
xchg
sbb
fucomip
and
xchg
jae
jnp
lock
pop
jae
xor
out
rcll
pop
mov
vpsrld
and
adc
inc
mov
mov
jne
add
and
cmp
shrb
mov
out
xchg
lock
mov
call
xchg
jle
pop
popf
test
jle
sub
fdivrl
lcall
sub
push
xchg
std
imul
mov
das
pop
pop
fwait
call
cmp
cmp
aas
add
mov
das
inc
sti
jmp
stos
shlb
and
push
sbb
sbb
cwtl
das
imul
icebp
stc
mov
sbb
ja
jmp
or
iret
mov
cmpb
mov
scas
jl
add
sub
std
add
jg
cmp
and
mov
repnz
lret
enter
ret
movsl
clc
aad
dec
xchg
ret
scas
xorb
dec
es
mov
mov
jnp
repz
sbb
pop
cmpsb
das
xor
mov
sbb
adc
jmp
lret
test
push
adcl
imul
and
mov
fidivs
or
or
lahf
repnz
cmp
pcmpgtb
orl
cmp
outsl
or
test
pop
jae
cmp
hlt
fwait
repz
xchg
stos
fcomi
pop
les
aaa
mov
jge
pop
push
and
cs
mov
dec
cmp
jne
cmp
shll
add
fwait
jno
jns
mov
mov
push
sbbl
js
and
les
lea
ds
je
xorb
and
imul
adc
shll
scas
xchg
jo
pop
dec
aam
mov
and
jecxz
pusha
ds
in
push
cmp
leave
push
out
rcrb
out
and
sbb
mov
pop
ss
cmpsb
lcall
loope
add
fwait
popf
loop
ficompl
xchg
xor
mov
add
inc
fists
push
out
add
movsl
fnsave
in
aas
add
jle
int3
sbb
sbb
cli
pop
mov
xchg
cmp
fstpt
loope
sbb
mov
jns
add
dec
and
divb
sbb
ds
inc
push
loopne
hlt
test
mov
scas
inc
push
fistpl
mov
popa
outsl
divb
xor
mov
pop
popa
cwtl
orl
sarb
aas
push
mov
or
push
inc
xchg
shrw
sbb
and
idivl
dec
mov
inc
mov
imul
pop
aad
stos
dec
sub
pop
outsl
test
lret
lods
leave
int3
lret
push
xchg
mov
ds
movsb
jo
rcrl
in
xchg
sbb
fstpt
ds
sub
dec
mov
inc
push
sub
sub
or
mov
mov
pop
rolb
test
ds
inc
jge
xor
pop
jle
pushf
xchg
xchg
jg
mov
dec
dec
jbe
imul
lea
dec
push
jb
lods
mov
jge
out
or
ret
lcall
pop
add
lahf
pop
out
and
xor
sub
addr16
fisttps
cld
or
insl
dec
mov
pop
xlat
jg
das
int3
imul
or
sbb
insl
stos
mov
mov
xor
jnp
or
lds
je
or
sub
fdivl
push
dec
mov
sbb
pop
jle
push
mov
enter
jg
pop
aad
inc
jne
gs
push
cltd
push
pop
push
xorl
dec
cmpsb
lret
push
aaa
mov
cmpsl
xchg
in
cwtl
jo
push
pop
xor
push
mov
mov
xchg
pusha
jg
iret
mov
fisubrs
sbb
fistpll
mov
or
clc
xchg
in
insl
pop
or
and
inc
int3
cli
clc
out
or
mov
jecxz
decl
fcmovb
mov
dec
fcmove
pop
mov
pop
arpl
jno
jp
fcmovnbe
xor
push
loop
in
add
push
clc
fisubs
aad
adc
xor
cmp
inc
test
sbb
adc
sub
jle
daa
mov
inc
jge
lret
cmp
in
inc
inc
in
mov
aaa
data16
sti
jecxz
daa
movsl
js
dec
or
cwtl
adc
test
lcall
dec
das
pop
adc
pop
cmp
xchg
mov
xchg
xchg
or
mov
shrl
lds
pop
sub
dec
add
dec
sub
scas
rcr
xchg
clc
jmp
out
sub
out
aaa
add
out
add
mov
xor
lret
jmp
push
xchg
cmpsl
sub
xchg
mov
xchg
fildll
movsl
fidivrs
loope
das
add
add
imul
out
push
dec
jmp
xchg
jb
mov
mov
xchg
mov
xchg
out
lods
xor
sub
ljmp
gs
sub
and
add
js
adc
insl
sub
popa
mov
xchg
fsubr
inc
pop
push
aas
cmp
jne
jb
pop
pop
pop
cmp
in
xlat
insl
or
xor
sbb
js
add
and
and
cmp
dec
add
data16
push
jnp
adc
mov
in
adc
mov
fs
mov
dec
cmpsb
movsb
adc
nop
aam
test
subb
inc
mov
lahf
lea
xor
and
sti
test
push
sahf
hlt
imul
sbb
adc
icebp
sub
or
out
push
inc
test
xor
mov
add
adc
cmp
add
push
mov
subb
xchg
std
sub
add
testl
jp
in
mov
mov
add
incb
xchg
das
cmp
in
jp
notl
mov
mov
ffree
rorl
addr16
xchg
scas
lock
jl
xor
xor
jns
mov
dec
add
cmpsb
dec
leave
orb
pushf
fisttpl
jl
mov
sbb
or
int3
and
sbb
je
es
pop
lahf
outsl
movsl
pop
lret
lcall
xchg
and
stos
ja
jmp
cli
xchg
pop
and
add
jmp
imul
sahf
popa
bound
push
lcall
in
in
in
mov
pop
lret
faddp
into
xchg
cld
push
jg
jae
add
mov
or
test
sbb
inc
shlb
pop
cmp
xor
xchg
dec
lcall
cwtl
cmc
fs
and
lahf
inc
mov
xor
fcoms
sbb
adc
cli
or
xchg
jp
xchg
pop
sub
arpl
mov
push
mov
mov
mov
int3
dec
mov
push
or
cmp
push
dec
iret
lods
and
cmp
ds
and
push
frstor
sbb
pop
lret
fstl
loope
lahf
xor
pop
add
mov
push
and
cmp
and
std
add
andb
je
inc
push
in
mov
push
ret
mov
mov
mov
cmpsl
loope
insb
inc
sbb
add
sub
scas
lcall
inc
das
and
aaa
push
ja
out
xlat
rolb
jnp
jmp
jecxz
mov
inc
gs
inc
es
mov
push
dec
fisttpll
jmp
ljmp
imul
push
stos
jns
mov
int
cmp
movsb
shr
aas
gs
insb
rolb
cmp
addr16
adc
int3
mov
xor
jecxz
mov
icebp
sub
fcmovnbe
mov
mov
mov
cmp
ficomps
push
out
into
test
add
js
cmpsl
mov
in
cmpsb
loope
sub
cltd
aam
loopne
adc
and
inc
cmpsb
pop
sub
push
ret
stos
shll
shlb
fcomps
cmpsb
imul
enter
aam
mov
mov
sub
mov
xchg
sbb
sbb
aas
call
sbb
mov
in
push
imul
or
lods
sub
pop
mov
out
inc
add
ds
aas
mov
mov
fxch
pushl
fbstp
or
xchg
in
xchg
xor
ret
addl
cmp
inc
pop
int
dec
inc
lods
or
insl
jne
pop
pop
call
and
sarl
add
loope
clc
outsl
dec
insb
adc
aam
stos
aam
sbb
lds
dec
mov
out
pushf
sahf
mov
addl
lahf
sub
icebp
je
out
rclb
shll
dec
xchg
movsl
cmpl
jb
xchg
dec
pop
add
lods
xchg
iret
pop
out
adc
cmp
hlt
cmpsl
loope
ret
loopne
and
hlt
clc
pop
mov
add
mov
loop
stos
mov
test
push
icebp
cld
rolb
jno
aam
lret
leave
popa
xor
pop
add
bound
xorl
test
fisttpll
push
or
jmp
mov
je
push
mov
or
xor
push
jbe
mov
aad
rcrl
movsb
movsb
sub
cmp
test
or
xor
cwtl
sub
repnz
jb
sbb
pop
hlt
pop
test
xor
aaa
ror
mov
jne
cmp
sbb
jb
pushf
mov
test
mov
daa
xchg
xchg
adc
filds
xchg
pop
jp
jmp
je
jnp
pop
loope
push
sub
or
jle
test
loope
dec
nop
fisttps
xchg
inc
aas
add
sub
fsts
pusha
popa
lahf
scas
test
lcallw
dec
mov
cmpsb
imul
repz
jle
insl
and
jl
movsb
pop
aas
or
jmp
push
mov
cmp
test
leave
mov
jne
stos
addr16
lcall
dec
cwtl
aad
aad
xor
xchg
pop
sub
xchg
cli
daa
cmpsl
jp
add
jo
pop
and
stc
arpl
xor
jne
jge
sbb
out
fnsave
xchg
in
pop
and
int3
bnd
sahf
cwtl
jbe
lock
adc
pusha
xchg
sbb
scas
inc
dec
and
jb
lret
mov
stos
dec
and
std
push
add
cmp
rorl
lods
pop
fmuls
xlat
lods
mul
or
dec
cmc
xor
out
inc
dec
outsl
pop
jge
pusha
sub
mov
inc
fwait
iret
xor
in
add
idivb
bound
mov
push
xchg
xor
jp
lods
mov
push
clc
stc
push
mov
xor
int
pop
jne
mov
enter
pushf
inc
daa
push
jne
mov
mov
add
adc
lock
int
imull
fistl
fdivl
repz
cmc
mov
sub
dec
and
jne
xchg
ja
add
dec
inc
push
push
mov
xor
fwait
sub
xchg
xor
xor
mov
dec
add
out
mov
sbb
int
dec
das
jns
rcr
and
repnz
jbe
add
add
movsb
loopne
cmp
testb
dec
mull
daa
test
mov
push
cwtl
cmp
push
punpcklwd
dec
dec
icebp
mov
jp
dec
push
xor
mov
mov
cmc
imul
das
ss
dec
inc
sbb
scas
into
mov
adc
ret
bound
jl
fistpl
jo
pop
shll
and
sbb
pop
adc
and
scas
adc
cmp
cmp
lret
and
ja
push
and
and
add
shr
sbb
inc
dec
test
fchs
mov
pop
push
fxch
push
mov
add
adc
repz
inc
mov
test
push
std
inc
and
lods
jns
je
dec
fwait
loopne
cltd
nop
sbb
lock
push
fdivrs
push
outsb
das
and
pusha
in
mov
sub
inc
pop
aam
neg
mov
push
loopne
into
add
insl
pop
mov
int
push
sbbl
stc
lret
push
cmp
or
ret
out
add
orl
ljmp
mov
outsb
call
hlt
fdivr
cmovnp
out
sbbb
aas
pop
dec
xchg
test
sub
cmpsb
insl
add
cld
mov
enter
cs
jae
scas
lods
ss
cld
xchg
std
or
add
xchg
push
and
or
pop
or
stos
shl
mov
and
adc
inc
inc
add
inc
nop
and
and
pop
fs
push
test
jp
pop
dec
dec
xlat
mov
and
shlb
jo
loopne
scas
cmp
inc
cmc
insl
xlat
and
mov
add
cli
mov
loop
push
push
cmp
cmp
sbb
pusha
int
push
in
in
cmp
pushf
mov
divl
lods
add
push
out
cmp
test
pusha
sub
sahf
mov
decb
jl
mov
fidivrl
cli
xorb
iret
incl
popa
imul
jns
sbb
mov
nop
icebp
stc
addr16
out
std
mov
lret
and
arpl
lods
mov
repnz
jae
push
aas
movsl
cld
sbbl
pop
bound
xchg
mov
jne
sti
jmp
sub
xor
push
cli
sub
xchg
push
inc
ret
pop
inc
es
adc
stos
add
loope
xor
or
andb
and
mov
cmp
jge
inc
mov
add
push
push
mov
insb
sbb
enter
notb
repnz
orl
cli
mov
int3
pcmpeqw
nop
cmp
mov
inc
mov
pop
pop
or
adc
mov
test
add
cmp
das
popf
cs
sbb
inc
sbb
mov
inc
ds
sarb
mov
mov
orl
and
sahf
clc
sti
enter
jg
jl
push
push
xchg
lret
cmpsb
jnp
out
cli
push
xor
push
add
jnp
push
test
xchg
push
add
shrb
sbb
sbb
lock
cmpsl
ret
hlt
inc
add
dec
popf
xor
pop
pushf
cmp
push
inc
imul
push
xchg
lods
add
push
fnstcw
xchg
out
adc
dec
hlt
add
ja
or
movswl
fwait
xor
xor
aam
adc
push
movsb
and
rep
aaa
loop
outsb
mov
xchg
sub
pop
jns
xchg
dec
mov
cmp
add
mov
repnz
nop
iret
jmp
sar
jg
dec
pop
sub
pusha
bound
stos
or
xor
pop
arpl
je
jne
pusha
and
data16
xchg
das
nop
jle
lret
syscall
dec
mov
int
pop
or
xor
outsl
in
dec
mov
jmp
cmp
movsb
enter
adcl
inc
xchg
lret
and
js
adc
daa
xor
stos
add
jmp
xor
sub
fisttpll
dec
leave
cmp
gs
lock
rcr
outsl
mov
lcall
xchg
push
mov
lret
popf
and
or
ljmp
data16
adc
ja,pt
mov
aas
test
xor
insl
imul
xchg
jmp
daa
cmp
cmp
popf
scas
and
sbb
push
jb
lods
cmp
pop
add
mov
or
sub
aas
sti
jne
aaa
bound
mov
or
into
and
mov
fmuls
loopne
fstps
and
cmp
cli
add
stos
into
add
or
jo
fbstp
les
scas
push
fidivrl
cmp
clc
aas
pop
pop
cs
add
add
dec
mov
sbb
pop
ljmp
sbb
push
pop
pop
mov
movsb
pop
repz
imul
and
mov
mov
pusha
stos
pop
gs
adcb
fidivrl
mov
sbb
sbb
rolb
push
jmp
cmp
jno
lods
adc
or
mov
lea
call
pop
push
mov
or
pop
loop
dec
andb
sbb
sahf
sub
in
or
push
xchg
jnp
test
outsl
popl
xchg
pop
mov
mov
pop
addr16
jecxz
incb
inc
in
pop
ret
pop
dec
shll
xchg
shrb
stos
mov
call
lea
icebp
cmp
cmp
mov
fwait
inc
jae
data16
repnz
inc
out
xchg
adc
icebp
pop
sti
fnop
addr16
popl
or
scas
push
inc
mov
and
pop
and
call
pop
ret
movsb
push
xor
movsb
insl
pop
sbb
cmpsl
xchg
pop
loopne
arpl
out
sbbl
lret
push
sub
popf
les
xchg
jmp
fucom
jnp
divl
ror
push
test
pop
cmp
push
aad
inc
and
sub
cmp
mov
xchg
ret
imul
fstpl
cmp
sub
testl
xor
jp
cmp
stc
ss
jbe
stc
add
pop
jo
pop
out
jmp
push
adc
push
cld
loope
jle
mov
lret
pop
inc
roll
push
add
js
loopne
dec
fwait
adc
stos
adc
gs
lret
add
mov
xchg
mov
dec
and
inc
test
mov
dec
into
div
cmp
test
inc
setbe
sub
sub
js
iret
js
mov
pushf
mov
aaa
cmp
mov
loope
inc
add
cmp
and
cmp
jno
mov
inc
inc
inc
outsb
pop
decb
mov
aad
xor
out
aad
sub
enter
jge
cmpsl
or
lret
push
sti
sub
mov
fsub
clc
movsb
mov
add
add
clc
push
repz
dec
and
das
dec
xchg
pop
xor
call
or
jle
es
push
stos
nop
dec
fnstsw
pushf
mov
cld
jp
dec
jmp
or
mov
daa
lahf
les
addb
jns
mov
sub
and
add
mov
stos
xlat
pusha
inc
push
inc
pusha
sub
sbb
jmp
push
jmp
inc
sahf
xchg
mov
mov
sahf
and
lret
repnz
rcl
add
or
fs
inc
or
jbe
in
inc
sub
jae
scas
jecxz
jl
in
xor
testl
das
cmp
mov
mov
cmp
or
data16
aam
cmpl
mov
push
cmpsl
cmpsl
xlat
cmp
fdivrp
daa
movsb
int3
and
xor
test
mov
xorl
bound
cmp
ds
sub
or
negb
sub
mov
in
lds
add
rorb
rcrb
xchg
scas
iret
ds
or
fwait
dec
fwait
pop
shll
inc
or
cmp
test
push
icebp
fldt
push
dec
imul
pop
ja
js
jmp
jb
dec
dec
xchg
pop
push
scas
fimull
loope
test
adc
mov
into
sub
mov
xchg
xchg
mov
cltd
cli
mov
test
mov
mov
rorl
test
push
lcall
movsl
xor
es
sub
mov
je
mov
xchg
pop
popa
pop
hlt
cmp
or
mov
mov
sahf
stc
sub
in
adc
sub
add
jle
arpl
notb
stos
xchg
fists
dec
mov
test
sub
incb
pop
cmp
rcrb
cld
inc
pop
sbb
inc
sub
or
lds
fsubrl
mov
in
cmp
es
add
mov
psubsb
jo
cwtl
lcall
sbb
dec
rcrl
push
mov
jle
test
or
sub
into
in
bound
or
pusha
mov
and
or
push
jmp
into
push
push
and
or
leave
inc
xchg
pop
inc
push
dec
inc
scas
int
dec
jae
aaa
int
cld
idivl
mov
fisubrl
sub
adc
add
sbb
sub
xchg
divb
movsl
aam
call
jb
xorl
push
push
pop
cmpsb
xor
jo
out
adc
addr16
outsl
stc
gs
ret
aas
pop
sub
cmp
arpl
les
ficoml
les
dec
and
mov
lret
push
push
sti
cmp
sti
or
shlb
dec
mov
cmpsb
dec
xor
push
xlat
inc
out
add
adc
icebp
shll
pop
mov
int3
negl
daa
bound
mov
xor
xchg
movsb
cmp
push
lods
jl
sbb
cli
mov
xor
fs
cld
or
pop
out
jb
sti
out
add
out
push
aaa
jb
or
fisttps
or
sub
cs
call
and
popf
fdivl
stos
in
or
sub
jb
enter
xor
cmp
add
push
sub
push
int
xor
pop
inc
push
scas
lock
or
mov
mov
and
pop
dec
sahf
cmpsb
popf
punpcklwd
mov
subb
and
imul
shll
dec
push
ss
sub
push
and
gs
lcall
out
je
push
mov
shll
push
fimuls
xlat
aas
stos
cmp
sti
mov
lcall
xchg
lahf
daa
jae
call
mov
dec
adc
jae
or
int
bound
push
jns
dec
jae
fidivs
sbb
fcoml
stos
cmp
data16
adc
sub
and
mov
jl
sub
adc
dec
xor
pushf
rol
cmp
inc
popf
or
mov
jmp
arpl
inc
sarb
xor
outsl
cmp
push
sbb
inc
out
fcmovnb
xchg
mov
adc
call
in
sub
push
mov
in
adc
int3
mov
inc
xor
mov
jne
scas
mov
inc
push
mov
out
sbb
push
fs
inc
cs
xor
push
lcall
cwtl
mov
and
adc
gs
add
mov
xor
dec
cmp
inc
lock
jle
lcall
pop
out
popf
mov
aam
cmp
clc
and
push
cs
pushl
bound
pop
jbe
sbb
push
out
leave
or
repz
jo
mov
aad
push
sbb
icebp
fidivs
adc
ljmp
sub
jmp
mov
sbb
out
mov
test
das
push
ficompl
pushw
movsb
divl
ror
arpl
in
and
pop
inc
cld
in
pop
aaa
vpsllq
xchg
xchg
jge
into
clc
adc
sub
or
sub
fldl
or
aad
in
fsubr
mov
or
fstl
jmp
sarb
push
push
pop
xor
lea
call
stos
ret
lcall
test
jl
sarb
mov
xchg
or
dec
lcall
pop
push
dec
mov
into
xchg
mov
dec
mov
mov
cmp
ds
out
xchg
and
xlat
mov
pushf
push
add
xlat
mov
je
xchg
js
mov
xchg
push
fwait
inc
and
mov
aas
mov
or
imul
bound
mov
inc
jge
pop
popa
ret
jg
add
jecxz
mov
lahf
sub
int
dec
and
push
ret
mov
jg
push
out
sub
scas
addr16
pop
arpl
leave
pop
pop
idivl
outsb
loopne
das
imul
ja
insl
pusha
rcrl
iret
add
xchg
cmp
or
sbb
dec
inc
subb
dec
out
and
cmp
cli
scas
mov
sub
adc
add
fisubl
adc
mov
xchg
cmp
jno
sbb
pop
pop
jae
fistps
scas
jg
jge
mov
jp
aam
mov
aaa
push
adc
xchg
inc
test
jecxz
test
scas
pop
fsubrp
aaa
pop
scas
push
sarb
and
pop
ret
je
add
and
sbb
xlat
adc
fsubrs
repnz
sub
or
xor
shrl
cmc
fisubrl
test
cmp
jg
xchg
fidivrl
jae
rolb
dec
sub
ss
push
repz
add
bnd
sub
cld
mov
and
mov
mov
in
js
pop
inc
test
add
xchg
xchg
in
test
fistps
xor
fs
mov
push
aaa
cs
jecxz
jae
and
push
or
shll
push
test
mov
mov
pop
pop
adc
out
lcall
fxch
loop
pop
jo
adc
dec
fsubr
sbb
pop
pop
mov
push
loope
test
pop
out
and
pop
sub
aas
or
mov
dec
mov
adc
jb
ds
imul
pop
lahf
pushf
or
imul
push
jo
mov
sub
pop
lock
jmp
fldl
movsb
loope
dec
push
sub
mov
sbb
stos
ds
mov
mov
lcall
in
mov
insb
push
pop
mov
ds
sub
xchg
fisubs
pop
mov
pop
pop
ret
jnp
lock
and
insl
or
pop
fistpl
push
dec
or
add
jmp
pop
or
cmpsl
push
shr
inc
sbb
jo
cmpsb
mov
aam
and
mov
loopne
xchg
adc
push
push
cmp
test
mov
dec
ja
pop
inc
add
push
cmp
clc
iret
pop
mov
xchg
mov
loopne
inc
xchg
dec
ret
and
and
adc
inc
lea
addr16
pusha
and
cltd
fistl
add
inc
sbb
outsl
enter
mov
jnp
dec
dec
add
ds
ljmp
js
inc
mov
push
das
jne
mov
sub
mov
stos
cmp
addb
lods
jp
test
notl
js
pop
stc
cmpsb
jb
js
in
pop
sub
lock
mov
sarl
sti
loopne
rol
out
inc
and
ds
push
cmp
xchg
cmp
add
push
roll
lods
jge
addps
add
inc
jge
cwtl
and
cmp
pop
das
data16
adc
ss
cmp
and
out
and
arpl
xor
dec
mov
popa
cwtl
daa
aad
sub
aad
and
out
mov
icebp
push
add
stos
in
insl
inc
mov
in
fnstsw
icebp
adc
pop
cmp
and
aam
cmp
xchg
mov
ficoms
pop
cwtl
sub
jns
jl
xor
and
daa
jge
jns
mov
cmp
idivl
push
mov
push
mov
mov
add
mov
js
and
outsb
mov
arpl
stos
push
mov
sub
push
push
or
jnp
jns
cmp
lret
popf
roll
cltd
loop
cmpsb
mov
xor
push
and
add
pop
jno
cmc
ret
cmc
scas
inc
popf
mov
cs
xor
pop
mov
stc
loop
cli
enter
hlt
std
decl
test
pusha
or
popa
xchg
loopne
mov
mov
ficoml
xchg
xchg
or
arpl
icebp
xchg
movsl
push
stos
push
xor
add
fucomp
stos
mov
mov
sub
mov
cmp
repz
or
rolb
outsl
adc
pop
repnz
rol
outsl
push
es
and
dec
mov
sub
jnp
push
pop
or
mov
pushf
mov
mov
sbb
cltd
or
ljmp
clc
mul
pop
or
mov
ret
push
aas
push
push
ja
cmp
stc
xchg
out
or
mov
adc
sub
push
adc
outsl
mov
dec
test
daa
andb
jp
movsl
ljmp
fstpt
push
insb
repz
mov
ret
sar
repnz
fcoml
aaa
leave
in
mov
push
add
xor
jno
cwtl
in
or
neg
jne
pop
fisttpl
shll
push
xchg
imul
push
inc
int
cmp
mov
mov
push
push
addr16
scas
and
and
cmc
mov
mov
pop
xchg
addl
jno
gs
subl
dec
fs
rcrl
jbe
mov
incb
inc
cmpsl
movsl
clc
push
es
negb
cltd
sbb
xchg
rcl
call
and
inc
in
xchg
jnp
test
mov
mov
jmp
adc
push
lret
sub
jbe
sub
cwtl
push
add
push
gs
jae
mov
mov
outsb
adc
shrl
xor
cld
sti
scas
shlb
test
cltd
push
aas
sbb
xor
repnz
xlat
aam
lret
clc
jmp
jecxz
cmpsb
xor
inc
mov
ficomps
cmp
mov
js,pn
ficoml
hlt
cmp
push
repz
movsb
iret
jbe,pn
loope
or
fnsave
xchg
jb
inc
cmp
pop
frstor
cltd
push
dec
int
mov
push
fdivrl
mov
cld
ror
and
mov
es
cwtl
fcompp
les
stos
fnstsw
jl
mov
cmpsl
iret
xor
icebp
cmp
leave
mov
mov
sub
test
jmp
sbb
or
xchg
sub
dec
je
mov
lret
sbb
or
push
in
fcompl
jnp
cmp
jno
movsl
mov
mov
arpl
inc
ljmp
lret
jno
jle
sub
pop
mov
movsb
push
jmp
ljmp
sub
lahf
sar
cmc
xchg
sahf
iret
bsf
and
movsl
sub
adc
pop
push
into
gs
leave
arpl
mov
repnz
test
pop
rcrb
adc
stc
mov
sti
inc
sub
mov
loop
pop
and
jecxz
pop
fldln2
clc
imul
jmp
xor
mov
pop
in
jbe
and
sbb
in
repnz
out
in
jge
shll
mov
icebp
pop
xchg
lds
sahf
imul
pop
daa
test
iret
test
lret
repnz
xchg
adc
pusha
mov
push
rcrl
push
aam
pop
sbb
mov
jno
cmc
mov
mov
loop
xchg
in
out
jecxz
sub
pop
push
andb
adc
popf
aas
fdivs
jns
cmpsl
adc
jecxz
subl
push
cltd
movsl
addl
adc
jae
popf
iret
scas
scas
inc
out
out
inc
mov
notl
mov
lcall
mov
xchg
das
popa
mov
in
iret
mov
dec
and
fildll
jl
dec
mov
faddl
add
loop
dec
nop
sbb
xchg
jecxz
lret
cmp
jl
add
fwait
jp
inc
or
jbe
and
rcrl
les
cmp
adc
jp
into
mov
dec
in
xchg
insb
inc
adc
push
jmp
dec
sbb
mov
adc
jge
mov
cld
or
or
ret
mul
jns
pushf
sbb
shll
dec
jnp
pop
xchg
jae
mov
decl
lret
mov
and
sub
inc
imul
mov
or
stos
adc
icebp
push
out
mov
imul
stos
into
and
or
pusha
or
rcr
sahf
lods
sbb
scas
and
sbb
adc
jecxz
jno
stos
imul
fcoms
dec
scas
test
clc
mov
adc
mov
jo
mov
in
iret
push
inc
xchg
lret
adc
mov
testb
lret
xchg
mov
movsb
mov
push
ret
inc
rolb
and
xchg
mov
and
sbb
add
pop
mov
cmc
cmc
mov
test
jmp
xchg
sub
cltd
add
jge
xchg
and
adc
call
mov
shlb
aas
add
jne
adc
stc
fwait
in
cltd
iret
out
xchg
leave
xchg
aad
mov
lcall
add
sbb
or
das
insl
dec
mov
or
or
stc
jae
cmpsl
cmp
fdivrl
iret
je
push
fldl
aaa
rcrl
mov
notb
outsb
lea
shrb
xchg
or
orl
popf
push
arpl
cwtl
mov
mov
sub
ljmp
cltd
aam
popf
out
in
pop
and
icebp
in
dec
or
sbb
movsl
loopne
sbb
cmpsb
add
arpl
je
pop
in
mov
push
sti
dec
push
outsl
aam
cwtl
jge
ja
je
xchg
sbb
jecxz
and
xchg
sbb
in
mov
aaa
cmp
mov
mov
mov
sub
or
jle
jg
insb
add
fldenv
jbe
or
scas
fldcw
cld
mov
pushl
sbb
adc
jmp
insl
push
arpl
mov
and
jl
mov
je
adc
cli
jo
popa
imul
ss
pop
cmp
inc
aad
xor
pop
dec
addr16
mov
ja
cmp
jnp
pop
mov
cmp
push
xchg
pop
sbb
test
jp
pop
lahf
test
or
insl
mov
test
and
jecxz
repz
std
xor
or
xchg
lods
pop
imul
lods
sub
mov
sbbl
pushf
mov
dec
in
xor
in
mov
test
data16
loope
cmp
hlt
outsl
or
inc
insl
add
dec
or
push
mov
pop
cli
mov
jno
mov
lret
rclb
sub
daa
ret
mov
dec
sub
jae
xchg
fdivrp
mov
lods
je
ret
shll
dec
cli
cltd
int
in
xor
xchg
xchg
rcl
or
mov
jle
xor
inc
cmc
ljmp
mov
xchg
pop
lods
mov
movsb
repz
aam
lods
aaa
lahf
call
mov
int3
aas
mov
ss
cs
or
add
jg
imul
mov
mov
shrb
sarb
test
or
fwait
xchg
mov
test
jle
aaa
mov
and
mov
push
cmp
pop
xlat
pop
xor
lret
adc
cltd
or
xor
sbb
add
cld
ljmp
inc
adc
mov
dec
jo
jns
xor
sbb
decl
test
push
pop
fstpl
or
js
mov
leave
imul
and
cltd
dec
gs
movsb
sub
out
aas
and
cmp
mov
jno
inc
nop
stos
xor
or
cmp
and
push
cltd
dec
out
and
inc
fsubrp
cmp
mov
jns
dec
jmp
xchg
mov
mov
out
add
xor
xchg
stos
push
negl
lock
in
filds
and
div
pop
fwait
imul
and
iret
push
enter
jle
idivb
out
or
inc
jle
mov
loopne
out
mov
xor
and
dec
rcr
aas
add
sbb
xor
pushw
sub
cmp
popa
dec
jg
xor
dec
adc
dec
mov
add
mov
outsl
into
xor
lret
in
test
add
stos
cwtl
mov
pop
xor
inc
pop
xchg
or
aas
jp
jge
mov
and
mov
cmp
sbb
cli
sub
add
cld
gs
push
repnz
dec
mov
pusha
sbb
lret
movzwl
iret
jg,pt
pop
pop
xchg
mov
xor
push
lock
test
stc
dec
ljmp
xor
xchg
movsl
and
adc
sub
pop
and
fsubs
mov
xlat
cmc
xchg
xchg
subl
bound
sbb
sbb
or
int
aas
jg
andl
mov
int3
leave
out
sbb
cmpl
sbb
adc
clc
gs
mov
and
fldl
jge
inc
cmpsl
pop
inc
js
cld
int
and
dec
pop
or
int
stos
shrb
mov
cmpsb
stos
loop
xor
and
pandn
inc
adc
pop
ret
push
into
jbe
pop
fiaddl
subl
add
out
fisubl
push
aam
mov
xchg
iret
scas
rclb
push
xchg
add
es
xor
push
pop
popa
cwtl
pop
mov
shlb
mov
arpl
xorl
mov
push
leave
sbb
inc
jb
pop
dec
repnz
mov
and
gs
shll
pop
in
aaa
dec
xor
sub
cmp
fidivl
sbb
repz
fdivl
cmp
dec
lock
sub
pushf
inc
jbe
dec
push
sbb
addr16
push
test
jno
repnz
fcompl
mov
int
xor
test
mulb
pop
enter
enter
sbb
out
out
cld
lods
xor
arpl
or
ret
mov
rolb
ret
sbb
xor
mov
adc
test
addl
sbb
mov
loope
cmp
addl
or
dec
shll
cmpsl
or
mov
jae
fdivs
add
test
sub
pop
mov
mov
add
fdivrl
xor
sub
push
pop
jmp
and
das
sbb
movsb
jns
pusha
into
filds
push
sub
cmp
jb
or
cmp
or
ljmp
jp
das
arpl
popa
and
cs
mov
loop
jecxz
xchg
aas
or
ret
dec
lods
outsb
dec
jg
popa
clc
push
sub
mov
mov
xor
xchg
or
jns
xchg
cmp
pushw
sar
jle
sub
ror
popa
add
popa
insb
mov
loop
xchg
mov
jmp
dec
xchg
jl
pop
dec
mov
cmp
dec
fisubrs
ret
iret
dec
cmp
pop
mov
push
ret
mov
pop
or
sbb
and
or
jmp
daa
mov
sbb
xchg
sub
fistpll
pop
and
repnz
push
cmpsl
push
xor
int
test
stc
daa
mov
inc
repnz
inc
and
jl
sbb
sub
lods
cmpsb
int3
mov
aad
or
mov
jae
jo
addr16
sbb
xchg
and
mov
fs
sub
sbb
jns
push
test
jns
mov
jnp,pt
cld
lods
jns
fildl
das
inc
inc
stos
movl
enter
adc
mov
dec
adc
hlt
fwait
or
call
pop
loop
pop
xchg
pop
and
xchg
cmp
dec
sbb
add
jmp
nop
and
insb
xor
xor
flds
inc
pop
jmp
push
cwtl
shrb
inc
ss
lret
ljmp
shl
pop
mov
popf
repnz
cmp
rcl
cli
repnz
and
mov
mov
inc
mov
ret
test
lret
pop
add
test
push
shll
les
xlat
aad
jno
adc
mov
cmp
lcall
push
loopne
mov
jae
pop
mov
imul
test
sbb
jl
adc
popa
fwait
inc
inc
std
inc
cmp
cmp
mov
in
push
mov
xchg
cmp
loope
cmp
scas
adc
stos
gs
mov
mov
xor
pop
subb
in
fsubrs
int3
shlb
inc
mov
pop
xor
pop
int
mov
inc
xchg
xlat
addl
sbb
mov
scas
dec
fucomip
repnz
jne
popf
jno
addr16
lea
and
aaa
inc
cmp
jge
inc
ss
sti
xor
inc
mov
pop
mov
sbb
add
shrl
sbb
movb
jb
cmp
adc
jge
and
rclb
es
add
loop
ljmp
cmp
stos
push
mov
sub
std
push
lret
ret
pop
xchg
loope
dec
push
shlb
push
mov
cld
divl
das
sub
xlat
lods
icebp
xlat
xor
ss
iret
repz
std
js
cmc
and
mov
push
and
inc
stc
lret
dec
jg
cmpsl
dec
inc
inc
cmpsb
mov
push
out
adc
jnp
jg
out
xchg
xchg
jb
pop
mov
movsl
cltd
or
jge
cmpsb
xchg
stc
fidivs
xchg
sarb
jg
mov
dec
dec
aad
out
cmpsb
cwtl
xor
cmp
sub
cmp
idivb
or
jl
das
leave
sbb
jge
sarl
popa
lds
shl
popa
pop
rolb
loopne
sub
cmp
xchg
scas
xchg
out
aaa
push
sub
in
mov
pop
sub
insl
imull
adcl
mov
pop
in
mov
gs
daa
cld
stos
pop
popf
jno
pop
icebp
fsubs
mov
ret
stos
cmpsl
push
movsb
loopne
lcall
enter
test
jecxz
jp
and
push
sub
call
mov
pop
bound
rcll
and
adcl
loop
push
jecxz
pop
imul
pop
cmp
cmp
fstl
decl
dec
cmpsb
add
mov
popf
ficompl
jb
cwtl
mov
mov
out
jecxz
cmp
xchg
aas
mov
out
cmp
push
dec
sti
add
cmp
pushf
insl
loope
fsubp
mov
in
lods
pop
jg
rclb
fnsave
push
stc
loop
pop
clc
popf
cmp
jl
or
andl
fstpt
or
add
pusha
push
mov
and
frstor
mov
and
fcmovnb
add
xor
xor
inc
dec
push
imul
sub
inc
mov
dec
push
lea
sub
adcl
nop
cli
orb
pop
rol
popf
xchg
xor
jo
lods
fwait
cmp
mov
mov
xchg
imul
decl
xchg
movsl
sub
hlt
lods
decb
or
mov
cltd
sub
pop
jecxz
cmp
nop
push
cli
int
xchg
sbb
jae
dec
inc
xchg
lods
loop
sbb
icebp
jae
lcall
xchg
xchg
mov
outsb
fistl
xchg
rorl
enter
pop
movsl
shlb
jae
xchg
jge
add
pop
xchg
fstpl
push
fdivrl
fstpl
inc
out
jge
push
or
and
xchg
add
jp
call
imul
lcall
das
sub
xor
shrl
push
cltd
adc
cli
xlat
and
adc
jno
mov
dec
mov
lea
add
push
xor
fists
fs
xlat
repz
in
xor
cmp
or
outsl
add
mov
lds
jle
adc
jae
les
or
es
jbe
mov
xor
cmp
xor
insl
test
jb
loop
inc
jne
mov
jbe
xor
and
lock
frstor
xchg
cmc
dec
adc
popf
jo
and
pop
cmc
out
inc
lret
xchg
pcmpgtb
fidivrl
rorb
mov
in
pop
mov
nop
add
and
sbb
cmc
imul
inc
clc
lahf
daa
stos
test
sub
sbbl
sub
icebp
xor
fwait
test
inc
xor
fstpt
sti
xor
jmp
je
addr16
out
jle
insb
adc
and
mov
or
jb
fs
pop
out
mov
lret
push
dec
jbe
push
adc
sbb
dec
xchg
hlt
jl
xorl
outsb
cmp
push
aam
dec
add
sub
adc
sub
inc
addl
lods
inc
popa
int3
leave
mov
push
pop
mov
push
xchg
pop
cmpsb
or
push
cmp
loope
or
dec
add
jmp
aaa
inc
jg
mov
pop
inc
mov
xchg
sub
sahf
aad
push
mov
testb
adc
ret
adc
fsubs
cwtl
fisttps
pop
or
int3
js
loop
dec
fildll
dec
xchg
scas
lret
cld
loop
clc
rcrb
popa
sarb
es
data16
cltd
daa
sbb
ss
cmp
and
push
pop
cmpsl
jbe
frstor
incl
dec
xchg
sbb
pop
push
push
jmp
mov
pop
aam
mov
sbb
xchg
jge
inc
popa
xchg
xor
inc
mov
xchg
cld
mov
adc
sbb
dec
push
pop
sub
sbbl
cmc
std
dec
add
xor
cmp
in
cmp
mov
mov
push
fidivrl
add
xor
sbb
fildl
sub
sti
mov
nop
popa
outsl
cmp
xor
or
dec
or
mov
sub
xor
sub
sbb
lods
scas
xchg
scas
mov
or
push
ficompl
lods
inc
popa
je
sbb
mov
popa
push
sbb
mull
nop
push
addb
ret
adc
cwtl
jne
cmp
aaa
fwait
jno
popf
or
xor
cli
decb
or
sub
loop
fs
stc
aad
aad
mov
or
lods
and
inc
cmpsl
xchg
jb
adc
out
aad
mov
je
out
cs
mov
lret
repnz
mov
clc
sbb
pop
es
pop
push
std
add
xlat
fucomip
sub
pop
cli
out
xchg
and
mov
dec
or
in
in
dec
in
movsb
mov
adc
adc
stos
scas
ret
push
add
mov
bound
lods
pop
cmp
pop
data16
dec
daa
jno
in
lret
ds
adc
and
sub
mov
jne
cmp
add
mov
out
mov
sub
clc
popa
jae
int3
push
sub
cwtl
test
data16
add
cmpl
and
loop
in
mov
inc
imul
and
es
pusha
pusha
jnp
push
or
mov
pop
out
dec
movsl
movsl
and
jmp
jae
out
in
es
in
outsb
pop
inc
cmpsl
mov
dec
dec
or
daa
insl
jg
xor
enter
test
and
jmp
xorl
pop
enter
xor
cli
orb
call
pop
bound
jg
pop
dec
int3
into
in
jecxz
mov
pavgb
shrb
xchg
mov
xor
or
pop
push
adc
cmp
movsl
aad
mov
lock
dec
negl
nop
jg
mov
aaa
xchg
xor
test
jp
pop
fistpll
mov
ret
cmc
sub
mov
cld
sbb
jmp
jge
repz
popa
cli
fwait
lret
movsb
loop
cltd
xchg
lods
xchg
imull
mov
jns
mov
xchg
and
add
daa
sbb
rcr
inc
push
mov
dec
pop
iret
pop
mov
popa
data16
cmp
sahf
adcl
movsl
mov
mov
jnp
clc
jecxz
xchg
lock
pop
adc
cmc
lods
sub
jbe
sbb
test
mov
mov
sbb
add
and
outsb
rorb
and
jmp
cld
les
ret
fisubs
dec
cmp
add
jg
scas
lahf
mov
push
push
sbb
mov
faddl
test
push
outsl
xor
mov
in
push
pop
outsl
add
dec
pop
enter
test
adc
xchg
mov
cld
in
push
push
pop
jg
mov
gs
cli
lds
stos
loope
xor
pushf
iret
div
cld
rcrl
push
sub
lret
mov
pop
lret
mov
fsubrs
pop
hlt
dec
xchg
mov
and
xor
ret
xor
adc
adc
lret
mov
inc
loopne
mov
nop
jp
out
add
negl
out
lock
lret
fistpll
lods
lcall
cmp
jno
cmp
lcall
mov
lahf
iret
pop
fldenv
popf
sub
stos
or
adc
jbe
jnp
dec
adc
pusha
pop
fidivl
push
or
mov
lea
bound
cmp
cmpb
int3
adc
es
aad
adc
scas
sti
sub
inc
aas
aas
orb
js
repnz
pusha
xchg
xor
call
add
jmp
adc
enter
dec
lea
xor
std
and
lods
adc
push
dec
in
jns
mull
subb
jne
clc
jo
sub
testb
pop
jns
clc
xor
sub
jp
lret
lahf
adc
pushf
lods
sar
scas
xlat
jns
pop
adc
mov
xor
add
cs
push
cmpl
outsl
lods
mov
xorl
fildl
cmpsl
mov
adcb
js
lods
push
mov
mov
dec
dec
mov
cmc
cmp
add
jno
in
pop
adc
iret
outsl
out
mov
jg
or
or
pop
mov
jp
push
pop
test
dec
loopne
roll
mov
adc
adc
dec
roll
push
orl
dec
xor
fbld
rcll
shlb
jle
jmp
test
lods
fldt
mov
jle
mov
xchg
jl
or
popa
pop
fld
mov
mov
out
cli
ret
outsb
imul
addr16
sbb
js
in
ss
cmp
cmp
adc
rol
inc
or
pop
jl
in
xlat
shll
int3
fcoml
filds
inc
faddl
or
jge
pop
add
ret
jne
int3
faddp
or
cwtl
shlb
sbbl
mov
sbb
mov
push
sti
fcomip
jno
sub
fs
sub
pop
dec
popa
test
jnp
or
push
imul
insb
jge
je
mov
mov
cltd
sahf
in
into
call
push
lds
insl
sub
aaa
stc
popf
pop
gs
xor
stos
lret
pop
lret
sbb
mov
sti
sbb
xor
loop
xor
cmp
adc
jge
sti
mov
outsb
and
out
fimull
sub
mov
jnp
xor
dec
push
pushf
out
or
icebp
cmp
sub
xor
pop
adc
lock
push
xchg
dec
cli
and
repnz
xchg
jnp
inc
cmp
ja
xchg
pushf
xor
pop
aam
js
lods
push
mov
out
jecxz
pop
add
mov
nop
sbb
enter
popw
jne
jne
adc
xor
mov
mov
mov
sarl
inc
and
push
lret
fdivs
aad
pop
lock
lock
pop
std
mov
fsubl
ja
mov
lock
dec
mov
das
mov
cmp
scas
push
dec
and
jecxz
jae
leave
inc
in
not
sbb
enter
daa
mov
out
xrelease
inc
xor
xor
adc
inc
out
movsl
jno
add
mov
mov
fstl
mov
mov
into
xor
mov
push
jno
int
sti
sbbb
fdivrl
mov
inc
leave
lahf
adcb
pop
adc
jno
mov
push
cmp
ljmp
loope
lcall
inc
fcmovbe
adc
fwait
mov
les
mov
cmpb
push
inc
push
scas
cmovge
out
cmpsb
movsb
pop
out
movsb
inc
mov
psubsw
punpckldq
out
loope
cmpsb
lock
out
and
pusha
and
or
out
movsb
les
enter
push
jmp
imul
psllw
push
into
dec
daa
sub
jae
or
mov
jnp
aam
mov
pop
cmp
popa
or
ss
clc
lret
jge
in
pop
push
sub
dec
fldl
jg
fdivr
mov
repnz
xor
push
cld
adc
inc
adc
jecxz
lahf
pop
lcall
dec
sub
sub
cmp
or
lods
mov
inc
aad
ret
or
mov
push
add
sbb
lods
mov
sbb
adc
push
testl
fcomps
inc
pop
sub
out
rolb
sub
insl
cmp
movsl
add
loop
mov
insl
inc
pop
pcmpeqw
inc
jle
xor
iret
rcr
ljmp
mov
xlat
into
jb
fs
daa
int3
js
mov
loope
arpl
sti
cmp
mov
mov
dec
sbb
add
outsb
popf
push
mov
stos
lds
pop
or
xchg
gs
pop
xchg
out
stos
jne
les
dec
pushf
fwait
mov
inc
movsl
lret
int
sti
pop
adc
aam
jl
adc
cltd
lahf
out
adc
lods
push
cld
inc
int
or
or
scas
mov
pop
and
jmp
add
cmp
jns
ss
cmp
shr
scas
sbb
lret
repz
jl
xchg
sbb
inc
dec
cmp
fldt
jne
mov
or
or
and
mov
fiadds
inc
xor
jo
push
test
inc
fs
test
int3
jmp
dec
imul
fidivl
lods
ret
mov
subb
add
xchg
shrb
scas
mov
xor
mov
push
mov
daa
icebp
adc
in
out
jbe
mov
outsb
loop
mov
sbb
mov
les
mov
jns
jl
adc
inc
mov
jge
jecxz
out
mov
mov
cs
adc
pop
dec
inc
inc
mov
sbbl
movsb
popa
fadd
mov
and
test
dec
into
rcrb
jle
pop
popf
divl
fdivrl
pop
cwtl
jns
push
dec
sbb
fimuls
push
insb
sbb
scas
push
add
icebp
pop
lret
inc
popf
or
jmp
pop
int3
inc
scas
mov
or
dec
fs
fwait
jecxz
nop
cmp
jnp
adc
xor
int
lods
or
sahf
adc
xchg
mov
add
push
add
or
out
mov
add
scas
lods
cmp
lods
pop
cmc
xor
arpl
push
js
sti
shrb
pop
sub
push
inc
repnz
inc
js
pusha
rcll
cmp
int
out
mov
daa
and
ds
inc
mov
sub
ret
push
cld
mov
mov
sub
movntps
mov
loop
xchg
pushf
mul
mov
fwait
sub
sbb
mov
ds
jne
js
sub
test
push
jae
mov
out
repz
sbb
pop
cmp
sti
push
and
jae
ljmp
cmp
push
push
test
jmp
cwtl
add
test
lret
es
ret
pushf
js
cmpsb
pop
mov
dec
inc
mov
add
mov
dec
andl
or
adc
jecxz
xchg
mov
dec
sbb
imul
mov
and
xchg
ljmp
ret
mov
jo
mov
push
xor
std
mov
aas
loop
mov
int
cmp
mov
popf
jo
mov
jae
sahf
and
adc
mov
mov
mov
jns
mov
sub
cs
fdivs
mov
sub
push
dec
repz
xchg
and
mov
lret
outsb
or
push
mov
shl
fmul
loop
aaa
sbb
jmp
mov
outsl
sub
mov
test
adc
bound
cmp
jae
pushf
sbb
hlt
pop
jmp
dec
pop
push
test
inc
push
sub
mov
cmp
daa
cmp
ljmp
cmp
cmpsb
cmp
add
jnp
outsl
mov
mov
jb
cmp
sahf
add
push
cltd
dec
mov
gs
adc
lret
xor
sahf
jge
cmpsb
push
fsubs
xchg
data16
mov
test
cmp
mov
clc
fadds
out
sahf
test
jge
jp
pop
call
xsaves
push
push
add
fadd
jne
cmc
dec
jns
xor
in
pop
fiadds
push
test
aam
mov
out
mov
xchg
dec
sbb
daa
inc
movsb
fldl
in
inc
push
push
sub
pushf
add
inc
and
fstpt
pop
clc
mov
int3
aad
dec
add
sub
decb
popf
fists
lods
sbb
pop
int3
out
test
sbb
pop
fildl
sub
out
jnp
loope
sarl
pop
cmp
inc
fdivrp
xor
mov
mov
adc
ficomps
jne
cmp
testb
lea
dec
cmp
push
cmpsl
add
pop
negl
in
mov
ljmp
into
loope
clc
popf
sbb
xchg
mov
xchg
aad
jnp
push
lret
jno
jns
pop
dec
sbb
push
mov
cmp
jl
outsb
push
das
lret
inc
mov
stc
lock
mov
mov
cmp
and
xor
fcmovbe
ficoml
xlat
loope
pop
sub
jo
insl
out
push
mov
sti
inc
nop
fisubs
dec
cmp
lcall
mov
scas
push
adc
adc
xor
mov
and
xchg
dec
ret
data16
sti
pop
xchg
jbe
xor
fs
jmp
inc
push
and
xchg
icebp
jno
add
xor
shll
mov
lret
push
clc
and
fwait
xor
dec
mov
lods
test
xchg
imul
pop
rcrb
fstpt
iret
dec
mov
sbb
cmp
add
shlb
idiv
pop
pop
stos
xor
dec
inc
lock
les
outsb
insl
mov
sub
sbb
mov
sbb
cmp
daa
lret
push
xchg
ss
xchg
or
push
ds
clc
rcll
stos
mov
lods
jb
sbb
and
mov
jno
ret
xchg
mov
mov
enter
pshufw
mov
lret
pop
jge
in
je
leave
gs
cmpsl
leave
cmp
mov
ljmp
test
sarl
out
rol
int
mov
andl
mov
scas
sub
fbstp
pop
mov
xor
int
bound
xor
jbe
sub
jno
mov
cld
add
mov
shlb
jmp
out
jbe
ret
pop
loope
ljmp
or
int
nop
repz
cmpsb
cmp
jb
sub
imul
dec
out
je
aad
xor
mov
sub
push
andb
adc
adc
lds
mov
and
and
push
jmp
pop
hlt
jecxz
or
addr16
aad
sbb
aam
sub
mov
sbb
mov
adc
and
mov
addr16
dec
pop
or
pushf
add
fwait
jle
jae
mov
push
aad
mov
mov
jbe
mov
mov
push
cmpsl
loop
insl
cltd
out
pushf
xor
addr16
jno
sti
int3
lcall
or
lret
mov
movb
pop
ljmp
inc
jl
and
daa
jmp
adc
xor
pop
sub
adcl
inc
repnz
mov
fwait
imul
mov
jecxz
push
arpl
clc
test
mov
pop
add
es
cmp
arpl
lea
and
je
pop
loopne
xchg
cmpsb
pop
xor
clc
push
inc
jmp
xchg
imul
rol
fwait
nop
in
xchg
imul
rcrl
xchg
pop
jbe
xchg
scas
js
ret
add
fsubp
xor
scas
lds
aad
cmp
into
dec
fwait
sbb
cmp
add
sbb
mov
les
add
xor
popa
push
imul
jnp
mov
lret
aad
cmpsl
sub
xchg
push
in
and
jno
xchg
ror
mov
or
push
ds
fcoms
sti
stos
inc
sbb
dec
movsb
or
pop
addr16
inc
hlt
sbb
adc
push
mov
jmp
lods
inc
lods
push
int
push
mov
jp
xor
inc
repnz
fwait
xor
jle
add
sbb
xor
and
xlat
shlb
jbe
js
clc
jb
out
out
pusha
jp
in
and
sbb
inc
and
dec
in
sbb
sbb
inc
sbb
insl
mov
or
repz
mov
mov
rorb
insb
cmp
or
enter
pop
and
or
pop
sub
and
add
jne
arpl
scas
int
cmp
xor
ljmp
mov
std
inc
push
push
fcoms
adc
fisubs
dec
ret
pushf
in
pop
enter
ret
add
scas
xchg
jo
cmp
movsb
jae
mov
pop
mov
test
loope
mov
cmp
ret
jnp
or
sbb
adc
mov
mov
jp
aad
push
mov
movsb
xor
pop
mov
es
pop
pop
popa
rclb
sub
dec
loope
stc
es
mov
dec
dec
xchg
xchg
insb
cmp
hlt
orl
jb
fldenv
add
loope
rclb
xor
pop
int
popa
stos
lods
in
test
xchg
mov
fstpl
je
aad
xchg
mov
dec
setg
dec
lret
popa
roll
sub
ds
jae
dec
and
jns
ja
cwtl
test
dec
out
and
cmp
ja
xor
cwtl
sub
dec
shll
push
ret
out
xlat
add
and
jp
xor
mov
xor
or
sub
enter
scas
push
push
sub
add
xchg
mov
ljmp
insl
movsl
mov
imul
nop
dec
rorl
mov
cli
mov
jnp
sub
in
in
out
sarl
pop
jnp
mov
add
outsl
fnsave
dec
pop
fldcw
movsl
std
insb
xlat
and
jbe
out
xor
in
in
pop
and
xor
shr
add
xchg
push
daa
push
mov
push
inc
dec
jge
sub
fwait
insl
ja
xor
imul
xor
xor
stos
aad
int3
bound
add
mov
je
jl
pop
insl
mov
pop
jecxz
inc
lcallw
in
sahf
push
ja
pop
les
xchg
cmp
hlt
mov
scas
mov
loop
rcll
out
ret
lds
mov
inc
jno
dec
bnd
mov
xchg
mov
mov
popa
push
cld
pop
insl
dec
push
inc
cs
pop
sub
cmc
pop
insl
testb
stc
cmc
out
in
add
xlat
adc
sti
stos
lret
add
call
xchg
cld
mov
in
iret
movl
add
lods
sub
inc
jae
jbe
pop
ljmp
jne
push
popa
das
cmp
data16
hlt
dec
scas
cmpsb
push
push
inc
mov
xchg
out
xchg
sbb
and
jb
mov
iret
or
sbb
ljmp
xchg
xchg
mov
popf
inc
mov
sub
push
jae
and
push
lret
and
repnz
adc
lahf
pop
sub
aaa
xor
dec
inc
fwait
xchg
cmp
cmpsb
mov
movsb
push
xor
in
push
fstpl
ljmp
inc
sub
cmp
inc
xchg
repz
inc
rcrl
add
mov
test
or
xchg
cmp
adc
pop
inc
int
xchg
imul
push
divl
cwtl
lret
inc
push
mov
insl
ret
xchg
out
outsb
dec
xchg
fldt
cmpb
movsb
stos
pop
outsb
dec
sbb
jo
or
jmp
mov
pop
jg
lods
stos
cmp
push
ss
es
jae
dec
sub
stos
in
loopne
push
sbb
or
out
sub
mov
data16
pop
push
fnsave
pop
jae
add
cmp
sarl
clc
inc
sarl
ja
pop
dec
dec
in
repz
bound
pop
xlat
push
sub
lods
and
xor
sub
push
imul
insb
mov
int3
mov
outsb
imul
sub
and
fiadds
pop
jg
addl
dec
inc
jnp
lods
xlat
jne
outsb
js
shrb
push
scas
mov
into
loop
enter
cmp
cwtl
jne
xchg
mov
stos
stos
cmp
shlb
sub
push
jle
sbb
xchg
and
enter
imul
adc
and
jne
mov
lret
pusha
push
mov
leave
scas
xor
sbb
in
stos
mov
imul
sub
lcall
lahf
lods
jmp
shlb
aaa
or
cmp
sbb
fcomps
sbb
out
jae
imul
ss
adc
in
sbb
enter
bound
jb
xor
daa
cmp
mov
sbb
sbb
jecxz
add
add
fcmovnbe
fsub
out
push
push
outsl
std
imul
lcall
add
call
or
cltd
aas
into
lcall
imul
adcl
inc
sahf
cld
inc
std
cmpsl
jmp
sub
dec
jle
insl
push
fistpll
sub
xlat
mov
pop
xchg
ret
and
push
adc
mov
jp
xor
shlb
xchg
mov
sub
pop
xchg
shrb
jae
jns
imul
and
jl
ret
and
and
out
jnp
inc
or
xor
aaa
inc
push
es
and
mov
lahf
push
sbb
lds
movsl
xchg
iret
jnp
sbb
adc
inc
scas
or
icebp
xchg
dec
pop
std
in
xor
test
aas
iret
add
jnp
mov
push
cwtl
xchg
aaa
dec
repz
and
jp
leave
fucomi
push
push
mov
mov
xchg
adc
or
sahf
call
testl
lods
sub
lock
xor
cmc
jns
dec
jo
jl
and
frstor
mov
cmp
orb
loopne
dec
sub
sub
sbb
sub
icebp
xchg
in
daa
push
pushf
mov
xor
cwtl
add
xchg
test
sub
jge
inc
sbb
xor
lret
lea
ja
cltd
in
lock
imul
pop
ljmp
test
rorb
dec
lods
cmc
ret
out
test
jo
push
mov
ds
dec
mov
add
loope
xchg
fnstenv
repnz
xlat
bound
bound
or
ret
push
popa
fldenvs
mov
push
iret
insl
shrl
push
jp
cmc
jbe
mov
jp
cmp
push
push
fwait
cmpsl
cltd
pop
xchg
cmp
hlt
adc
pop
mov
xchg
mov
movd
cmpsb
pusha
pop
into
pop
incb
out
orb
in
lds
dec
dec
mov
push
hlt
pop
imul
add
adcb
adc
dec
scas
fimull
adc
sahf
loopne
jle
ret
dec
mov
dec
in
pop
mov
or
data16
movsb
push
push
mov
dec
stos
shr
mov
ja
daa
outsb
sub
and
das
sbb
pushf
popf
inc
iret
add
dec
pop
imul
adc
outsb
jge
xchg
mov
or
push
add
sahf
js
sub
and
mov
cmp
pop
dec
imul
mov
movsl
jge
daa
pop
shll
ja
add
mov
mov
ja
cmp
insb
insb
dec
jge
roll
and
outsb
pop
xchg
repnz
push
inc
jle
mov
cltd
and
popa
jl
mov
cltd
push
adc
aaa
jne
in
loope
jmp
add
mov
push
jae
sbb
xor
int3
push
in
es
push
loop
cmp
scas
jae
insl
xor
xlat
imul
nop
push
scas
push
ficomps
inc
inc
mov
push
std
lret
fldl
repz
pop
xor
jae
xchg
xor
flds
push
insb
gs
sbb
and
mov
and
xor
stos
sbb
pop
mov
mov
xlat
xorb
repnz
adc
cwtl
sbb
xor
mov
push
adc
inc
lods
mov
sti
or
jl
sahf
mov
sbb
push
adc
shl
aas
out
sub
clc
in
ja
movsb
daa
insb
imul
pushf
pop
and
push
sub
mov
jne
imul
sbb
js
sti
sub
cs
lods
les
xor
nop
pop
or
ss
jg
lahf
testl
loope
and
cmp
pop
adc
lret
cli
insb
inc
test
push
cmp
pop
cmp
imul
leave
mov
repz
cli
xor
dec
xchg
sbb
adc
dec
pop
in
pop
or
mov
mov
inc
cs
movsl
in
xor
sbb
shrl
loope
ret
sub
bound
fisttpll
xor
out
adc
mov
inc
pop
pusha
in
add
push
and
aaa
test
or
out
cmp
ret
scas
popf
dec
sub
inc
mov
addr16
cmp
sahf
addr16
out
outsb
dec
mov
adc
in
cwtl
imul
mov
dec
dec
jge
bound
pushf
inc
jb
jnp
cmc
add
mov
xchg
jne
in
in
cltd
jecxz
lds
lods
stc
xor
das
faddp
out
add
js
pop
fs
lods
and
icebp
or
insl
mov
mov
adc
daa
xor
dec
mov
or
xchg
mov
fsubl
fstpl
stos
sbbl
insb
sbb
gs
push
mov
dec
mov
ljmp
add
dec
stos
cli
and
shll
clc
sub
es
jge
xchg
mov
decl
in
shll
jge
fadd
mov
cmc
sub
insl
jnp
push
pusha
adc
push
xor
out
push
xor
imul
das
jnp
inc
inc
mov
dec
push
add
testl
ss
or
icebp
jl
fcomps
cmp
iret
fld
lea
pop
daa
clc
inc
cld
cmpl
sbb
dec
lock
push
sub
movsl
outsl
repz
aas
pop
and
cld
fstpl
hlt
imul
dec
xchg
leave
inc
das
outsb
fisttpl
fisubrl
mov
sub
leave
scas
loopne
mov
pop
and
mov
hlt
popa
rcll
sbb
cld
repz
xorb
push
jne
mov
aaa
pop
inc
ss
lods
xlat
jns
sub
dec
call
jmp
loope
pop
fbstp
and
les
cmc
add
rcl
xchg
loop
sub
insb
js
dec
fildl
adc
fs
pop
inc
fsubl
in
loop
add
dec
inc
push
cmp
xor
dec
dec
call
loop
xchg
jbe
pop
sbb
xchg
pop
inc
pop
push
cmp
mov
repnz
out
cmp
outsl
imul
andl
mul
cmp
dec
adc
int3
pop
int3
aad
scas
fs
dec
repz
jmp
inc
sbb
cmp
dec
arpl
push
and
ljmp
test
sbb
jo
loop
gs
or
add
testl
cmc
push
add
mov
or
fldt
es
arpl
or
js
jae
bound
ds
push
popf
pop
dec
idivb
popf
mov
and
ret
pop
jecxz
jg
push
xchg
xor
or
or
sbbb
mov
and
mov
cmc
sub
test
and
or
out
xor
xlat
scas
addl
xchg
jne
cmpsb
addr16
xor
bound
clc
decl
xor
mov
mov
jmp
adc
enter
push
jbe
iret
mov
jg
inc
dec
ret
cmp
arpl
bound
repz
push
push
push
popf
pop
orb
dec
pop
mov
jb
push
cmp
or
xlat
ljmp
decb
sbb
fcmovnb
sar
mov
add
and
andl
sbb
call
or
fstp
sbb
xchg
vpminub
push
or
xchg
pop
xor
js
push
adc
mov
dec
xchg
xor
frstor
mov
mov
mov
into
adc
aad
add
push
into
cli
dec
and
add
sub
jae
jne
mov
add
xor
lock
dec
iret
js
add
add
outsb
repz
jecxz
mov
xchg
adc
aad
rorl
loopne
fnstsw
or
push
adc
mov
jne
inc
adc
or
cmp
clc
mov
cmp
sbb
mov
cmp
jecxz
clc
iret
adc
or
insl
push
adc
aaa
push
mov
adc
jge
divps
push
mov
jne
dec
adc
aaa
les
inc
push
mov
dec
mov
outsl
jg
mov
movsb
mov
and
std
mov
xchg
push
fildll
sub
loopne
test
loope
imul
loopne
and
in
loopne
mov
mov
mov
outsl
pop
push
adcl
add
sbb
xor
xchg
cltd
cmpsb
mov
aaa
cmpsl
icebp
pop
iret
adc
pop
bound
adc
jmp
bound
pop
add
mov
mov
inc
iret
jge
in
jle
push
int
xor
lds
mov
jmp
adc
xchg
push
cs
sub
ficoml
ret
mov
xor
repnz
mov
ja
mov
addl
cmp
mov
movb
cmp
inc
mov
mov
xchg
test
cld
lds
outsl
jmp
adc
sbb
lahf
add
in
push
lret
pop
fdiv
mov
cmpsb
cld
mov
aad
push
pop
in
sub
xor
lock
dec
dec
push
and
mov
popa
movsl
dec
xorb
adc
adc
jmp
stos
mov
ja
and
mov
sahf
ds
or
imulb
inc
pop
mov
out
popf
inc
pop
lea
in
push
mov
pop
jl
pop
xor
push
dec
fmull
push
sub
rcll
lea
sub
jnp
sbb
leave
ljmp
pop
fcoms
mov
jge
xchg
fsts
ja
mov
cltd
cmpsl
movsb
test
stc
jecxz
scas
cmpl
lods
add
xchg
inc
inc
jbe
out
outsb
int
enter
sti
ds
push
rorb
and
rcl
cltd
in
scas
fsubl
pop
mov
jl
lcall
pop
cwtl
call
rcl
sahf
and
fstpl
hlt
cltd
add
lds
js
mov
xchg
ja
and
cld
bound
and
push
stc
jae
lcall
and
scas
and
iret
popa
sbb
dec
jge
adc
and
movsb
aas
data16
mov
sahf
mov
jnp
popf
push
cmc
pop
fdivrs
sbb
mov
ss
call
ret
mov
xor
dec
dec
pop
movsl
repnz
sub
adc
stos
mov
in
xor
pop
shll
lret
nop
jo
sti
add
pop
fwait
bound
data16
push
sti
add
enter
fimuls
into
cmp
hlt
mov
mov
test
lods
mov
jl
enter
loop
inc
sbb
and
insl
rorl
aam
lret
sbb
data16
mov
cwtl
loop
push
repnz
cwtl
xchg
push
push
mov
cmp
or
mov
js
hlt
dec
xor
dec
lods
inc
sub
repz
sti
std
fbld
data16
adc
or
push
xor
jae
in
cmp
out
std
dec
lock
insb
mov
popa
mull
xorl
mov
dec
jecxz
cmp
xor
arpl
and
shlb
pusha
pop
test
inc
mov
stos
sbb
fiaddl
mov
mov
push
cltd
pop
xor
sub
sub
pop
js
rorb
sbb
call
add
mov
pop
fistpll
adc
xchg
cmc
out
in
out
jg
pop
mov
repnz
xchg
mov
ds
pop
sub
outsl
mov
cmpb
push
pop
popl
scas
cmpsb
and
mov
mov
dec
pop
xchg
mov
sbb
in
push
iret
loope
iret
xchg
repnz
imul
push
not
imul
lahf
stos
mov
inc
sub
test
popa
dec
sub
outsb
in
jae
inc
jge
sti
das
shl
jge
push
jl
fdivl
notl
aad
xchg
mov
pop
pop
or
int
iret
jge
xor
mov
xchg
dec
ds
or
cli
jg
test
clc
jge
cltd
cmc
sbb
adc
imul
cmp
jp
lcall
push
mov
add
dec
push
mov
push
mov
lock
shr
sub
xor
cmc
add
cmp
mov
xchg
add
or
fucomi
inc
aaa
sbb
mov
out
or
stos
jnp
xchg
nop
jbe
adc
aad
in
lahf
imul
jmp
add
add
jl
or
inc
mov
or
mov
leave
mov
popf
sub
push
jae
cmp
xlat
lret
sub
or
cmpsl
fstpl
aam
push
cltd
sbb
push
leave
lahf
push
jo
pop
cmpsb
adc
lcall
addr16
sbb
stos
cli
ds
mov
das
popa
adc
or
sarl
fwait
jl
xor
mov
lods
aas
xchg
jp
addb
loope
scas
shr
pop
mov
xchg
pop
inc
pop
aas
insl
fisttpl
adc
xor
xchg
dec
fisubrs
adc
push
imul
push
sbb
pushf
loope
in
ds
cmp
scas
data16
push
int
in
in
cmp
sub
xchg
imul
jmp
push
cmp
dec
mov
into
aam
mov
jg
jp
out
mov
xor
xchg
mov
mov
divb
pop
ss
xor
adc
cltd
js
or
insb
jmp
push
mov
mov
mov
dec
push
repnz
mov
dec
sub
fidivrl
lahf
fs
dec
and
sub
mov
adc
or
insb
add
pop
xor
mov
ja
mov
ja
pop
push
add
dec
inc
push
aad
inc
std
loope
inc
xchg
cli
shrl
ret
scas
sub
sub
mov
aad
subb
push
sbb
rep
outsl
aas
scas
jl
repz
or
cli
or
sarb
pusha
mov
inc
lcall
pusha
mov
pop
pop
pop
pusha
mov
cmpsb
add
js
mov
lret
repz
add
mov
dec
scas
loope
js
call
test
sub
mov
les
enter
or
cs
out
push
fs
incl
xor
outsl
mov
gs
mov
pop
pop
fs
fistpll
hlt
movsb
push
mov
fwait
push
addr16
test
rcrb
dec
cli
nop
popf
pusha
sbb
mov
pop
mov
out
add
add
loope
fldenv
mov
xchg
cmpsl
clc
ror
xchg
jl
sbbl
mov
xor
cmp
mov
cli
call
aaa
ret
rorl
pushf
loope
testl
sbb
or
or
call
out
int3
or
outsl
cmp
pop
mov
push
out
mov
adc
sbb
xchg
xchg
mov
xchg
sbb
xorb
loopne
dec
dec
imul
mov
in
pop
paddusw
sbb
sub
inc
test
ret
sbb
dec
fucomi
jbe
mov
xorb
shr
jae
mov
adc
or
js
sub
icebp
xor
aaa
dec
dec
aam
fidivs
aam
xor
lahf
std
push
insb
xchg
inc
mov
and
sub
adc
jecxz
movsl
lret
js
cmp
add
xor
popf
xchg
sub
rcll
call
sub
cltd
aaa
push
cmp
test
sub
dec
hlt
icebp
sub
ret
dec
cli
xchg
mov
mov
movsl
jle
adc
mov
aaa
in
and
fcoms
xchg
mov
sbb
stos
jge
cmpsl
xor
fnstcw
sbb
out
push
and
lock
push
loop
lods
adc
inc
sub
gs
mov
push
les
xchg
mov
pop
xchg
sbb
and
jmp
push
push
xchg
push
ret
std
pop
mov
fsubp
loop
xchg
mov
insb
inc
adc
lea
mov
arpl
dec
jg
dec
xchg
xor
subl
imul
mov
test
imul
cmp
clc
sbb
daa
inc
cmp
pushf
inc
mov
pop
clc
sub
mov
adc
int3
stos
cmpsl
ret
rclb
fs
jecxz
mov
sbb
and
inc
sub
mov
jecxz
dec
xor
push
add
out
dec
mov
test
in
xchg
scas
push
cld
adc
xor
scas
imul
sub
xlat
icebp
pop
mov
lock
push
sar
sub
js
or
fildll
stos
lret
out
scas
addb
cs
imul
push
push
cmp
push
fisttpl
pop
pop
cli
inc
aam
cltd
mov
fildl
in
prefetch
lea
or
in
push
ljmp
int3
jne
test
cltd
jmp
xor
pop
inc
pop
fiaddl
xchg
push
push
or
movsb
icebp
mov
jl
stos
mov
xlat
pop
pushf
out
loope
cld
insl
mov
adc
inc
aaa
lahf
cmp
push
fdiv
sti
js
dec
push
data16
jl
pop
xlat
movsb
sub
sbb
popf
push
fwait
orb
aas
sub
push
adc
dec
inc
in
pop
lods
pop
push
rcr
push
add
cmpsl
scas
das
adcl
add
mov
dec
or
inc
lock
inc
push
and
lret
fidivs
aas
je
or
cmp
push
xor
loopne
sub
insl
insl
xchg
xor
mov
add
iret
or
and
lret
mov
fnstenv
mov
ret
push
adc
sti
mov
xchg
jne
jno
mov
leave
test
daa
jg
leave
push
popa
sbbl
jmp
pop
fcomip
ficoml
dec
je
popl
icebp
adc
cmp
les
push
sbb
imul
imul
lea
sbb
iret
inc
sbb
test
push
cmp
addr16
push
mov
dec
sti
hlt
xchg
lcall
movsl
inc
or
imul
sub
icebp
movsb
popa
icebp
mov
inc
mov
xor
cld
xor
dec
call
mov
aaa
stos
mov
cmp
fdivrs
stc
sbb
lret
shlb
push
push
int
cmpsb
cltd
nop
dec
and
ljmp
repnz
jl
nop
xchg
repnz
push
rcrb
shlb
and
rolb
push
cmp
clc
loope
pusha
gs
outsl
adc
cmp
shll
add
pop
jnp
push
in
pusha
out
subb
jecxz
lock
jne
fs
mov
mov
sbb
repz
lods
mov
jbe
bound
mov
cmpb
jg
jge
sbb
pop
je
xchg
cli
lcall
incb
pop
repnz
jp
iret
out
test
bsf
inc
cld
pop
in
mov
cltd
xchg
sbbl
sbb
rcr
xor
dec
mov
cmp
and
nop
xchg
or
or
adc
cmp
xor
stc
ficomps
sub
fisubl
jg
loop
add
popf
mov
sarb
lods
jg
mov
push
xorl
movsl
mov
jmp
sbb
stos
sbb
pop
sbb
push
mov
or
repnz
xor
jp
or
test
cwtl
out
aas
or
adc
lret
pop
push
xchg
sub
mov
clc
xchg
out
pusha
xchg
mov
lcall
rol
mov
cmp
outsl
and
fidivrs
cli
xchg
lcall
test
adc
es
adc
cltd
mov
adc
and
test
in
rcrb
cmp
xchg
and
pop
pop
daa
pop
leave
test
aad
lods
push
mov
lock
fs
xchg
addb
cmp
pop
das
mov
add
insb
lcall
mov
mov
inc
mov
add
outsl
or
bound
push
dec
hlt
jnp
dec
pop
and
cmp
mov
repnz
outsb
or
addb
push
inc
and
icebp
rolb
lods
mov
addr16
sbb
mov
mov
adc
fildl
sti
setno
les
scas
in
lods
and
cli
imul
jo
pop
fisubrl
das
jecxz
fs
je
lahf
rcl
mov
xor
pushf
lahf
jnp
jmp
popa
xchg
ffree
pop
sbb
or
dec
jne
js
loop
int
out
scas
ss
pop
shlb
fwait
pop
out
xchg
cmpsb
sub
cld
push
and
pop
mov
addr16
movb
ljmp
mov
mov
fidivrs
fiadds
mov
dec
mov
mov
mov
mov
sub
or
push
cmpsl
stos
fsubr
aam
or
jno
cmp
mov
insl
inc
xlat
pop
and
xchg
popf
push
jl
mov
ja
cmp
sub
xchg
leave
xor
mov
faddp
leave
in
loop
lods
addr16
push
cwtl
xlat
inc
pop
or
ret
pop
push
cwtl
lret
add
dec
fisttpl
inc
pop
jno
push
lds
loopne
or
push
rcl
out
jmp
addr16
or
pusha
testl
es
inc
adc
pshufw
jns
inc
shl
jp
ss
mov
lods
cli
inc
lahf
xor
cli
push
lea
mov
sub
imul
pop
adc
or
cmpsb
pop
dec
not
push
orb
lods
push
outsl
mov
push
test
test
xor
cmp
jmp
cwtl
les
inc
repz
or
adc
xlat
or
stc
shll
dec
adc
or
es
or
push
add
pop
lret
dec
pop
out
js
dec
jae
jl
cli
fwait
aam
insl
imul
mov
and
lret
jl
sub
mov
cmp
add
pop
push
xlat
ljmp
adc
xchg
cmp
mov
or
jle
ljmp
data16
lret
pop
aas
int3
mov
arpl
int3
sbb
dec
test
aaa
mov
in
pop
movsl
sbb
or
cmc
movsb
adc
jno
pop
shlb
lahf
sub
push
sbb
adc
cmp
sbb
mov
adc
fistpll
into
fwait
dec
fwait
cmp
aaa
cmpsb
mov
inc
daa
inc
shll
cltd
pop
or
popa
ret
das
insb
and
pop
mov
outsb
ret
pop
lods
inc
xchg
sub
cmpsb
add
fildl
pusha
aas
jmp
dec
andl
sahf
loopne
sbb
jo
or
ja
test
ret
shll
dec
xlat
loope
nop
xor
pushf
cld
nop
lock
int
test
xchg
call
dec
js
ficoml
adc
cmp
jbe
out
add
rclb
adc
stos
pop
lcall
addr16
mov
sahf
lock
rcrl
sbb
outsb
and
sbb
in
and
dec
in
test
or
dec
xchg
sahf
sti
mov
sahf
jae
adc
jo
aad
ds
fsubl
or
dec
imul
add
daa
mov
sti
add
mov
imul
sbb
mov
movsb
cmp
lahf
cmpsb
and
push
ljmp
jg
push
and
jmp
fstpl
int
mov
pop
into
popf
ret
inc
loop,pn
or
add
xchg
cmp
arpl
std
lds
inc
dec
movsb
and
std
sub
add
jb
inc
stos
pop
adc
and
jno
and
mov
mov
arpl
inc
push
mov
in
jle
xor
add
xchg
push
into
es
or
and
sahf
lock
mov
mov
jns
in
aad
xchg
cli
jmp
shrb
inc
ljmp
push
push
jle
mov
xchg
and
or
jge
cmp
mov
popa
in
push
out
dec
xor
inc
imul
clc
loop
ret
inc
fcoms
int
ds
jp
push
and
notb
mov
adc
sbb
cmp
xchg
push
xor
icebp
movsb
js
cmp
mov
fcomps
push
es
rclb
and
mov
clc
jecxz
mov
mov
inc
mov
adc
push
jp
ret
xchg
cli
test
enter
jmp
sti
jmp
inc
mov
es
stos
push
fldt
push
sbb
xor
ror
rorb
or
clc
jmp
sbb
inc
xchg
movl
adc
sub
mov
add
push
mov
xchg
add
popa
lods
cmpb
push
jb
mov
xchg
mov
jecxz
or
mov
mov
insb
mov
pop
jecxz
cwtl
lods
dec
ror
push
sbb
mov
or
or
out
mov
push
das
out
loop
cmp
xor
sub
loope
mov
adc
ret
in
mov
pop
pop
xchg
fwait
leave
in
ja
data16
push
xor
stos
adc
cli
daa
sar
inc
fbld
movsb
pop
push
mov
cmp
mov
repnz
lods
push
test
insl
popa
xor
jns
adc
ror
mov
rclb
push
inc
stos
mov
in
pop
jb
or
dec
xor
add
mov
mov
sub
push
mov
push
pop
popa
icebp
mov
ja
jo
mov
xchg
mov
adc
jnp
test
xchg
push
rorl
fpatan
les
shl
mov
aas
mov
jns
ljmp
test
mov
sub
sub
adc
jbe
jmp
imul
and
fwait
mov
cmp
sub
bound
pop
pop
lods
mov
dec
addl
jp
xlat
pushf
es
mov
xchg
das
cmp
mov
lds
sub
stc
cmp
popf
fdivl
ja
fwait
pop
call
aaa
inc
mov
scas
insl
in
nop
mov
lea
dec
lods
divl
ss
xchg
jge
xor
pop
cwtl
jge
dec
jecxz
insb
repnz
jbe
imul
lahf
addps
sub
xchg
das
push
adc
das
dec
dec
lea
push
ss
dec
jns
insl
sub
push
inc
test
lahf
add
cmp
xchg
stc
xlat
imul
bound
pop
imul
dec
mov
fidivrs
inc
clc
sti
ret
jae
inc
xor
mov
fdivr
divb
adc
divl
pop
fisubrs
cmpsl
lret
fdivl
xor
daa
jmp
fbstp
mov
gs
shl
xor
std
pop
pushf
dec
or
cli
or
movsb
xchg
stc
test
adc
outsl
cmp
xor
xchg
mov
xchg
mov
adc
in
cmpsl
adc
sub
mov
cltd
adc
cmpsb
cmpsb
jbe
sub
jns
out
nop
dec
cs
sbb
push
xchg
fadds
pop
jo
inc
push
cmpl
ljmp
pusha
xchg
push
xchg
or
jge
jg
xor
cmpsb
into
add
push
xlat
adc
or
sub
pop
sub
daa
add
out
jno
popa
and
and
mov
cltd
cmp
gs
dec
icebp
repnz
das
pop
addr16
xor
push
fstps
push
repnz
outsb
shl
xrelease
dec
or
aas
movaps
xchg
push
and
lret
mov
sbb
pop
out
push
cmpl
xchg
in
scas
sbb
sbb
in
inc
xor
jb
cs
dec
movsl
cwtl
flds
inc
jmp
pop
repz
and
imul
mov
testb
and
sbb
in
neg
jne
fistps
dec
pop
ja
ret
adcb
mov
dec
jne
and
mov
iretw
jo
xor
or
dec
sub
insb
ret
in
movsb
push
jle
je
mov
and
in
inc
inc
mov
and
jb
pop
mov
mov
test
and
push
push
jecxz
adc
or
push
mov
repnz
cmp
nop
popf
lret
and
mov
and
out
lahf
inc
push
repz
xchg
sub
mov
mov
outsl
mov
jp
jo
push
xlat
stc
inc
cmpsl
fstl
sub
or
or
jmp
adc
cmp
xchg
rorl
xchg
push
mov
icebp
lahf
pop
cltd
lret
aad
imul
js
push
loop
cmpl
jg
inc
enter
ljmp
pop
xor
pop
adc
mov
jle
adc
testl
repz
pop
into
xchg
push
ds
cld
push
cmp
fs
movsl
or
popf
daa
mov
out
enter
in
lahf
stos
and
test
arpl
sub
xor
and
sbb
test
es
push
icebp
sub
pop
sub
daa
stc
xchg
and
out
push
cmp
addr16
out
addl
ret
and
pop
mov
dec
cmp
push
push
fcomip
aad
ss
pop
insb
jbe
fs
xor
mov
stc
xor
or
xchg
or
aaa
into
and
mov
pop
in
out
test
mov
pop
loope
xor
pop
test
fnstcw
popf
popl
xor
rorl
shl
jmp
xor
addb
lods
dec
jg
adc
clc
push
and
lret
loope
jns
adc
cs
gs
push
jg
xchg
jne
sbb
mov
ret
repz
jnp
in
add
daa
fldl
jle
xchg
test
out
mov
push
movsb
fsubs
imul
push
inc
cmc
jb
mov
jmp
mov
mov
out
or
fsubs
mov
pushf
mov
lea
adc
pop
and
fldlg2
cmp
clc
popa
jb
sub
or
dec
sub
rep
sbb
std
mov
add
push
mov
jb
repz
adc
mov
mov
in
xor
dec
insl
jae
jmp
lahf
xchg
push
mov
jg
cmpsl
cmp
push
sub
jbe
shll
cltd
and
iret
push
or
ds
mov
js
test
mov
dec
or
jmp
enter
cvttps2pi
push
mov
cs
sbb
sar
mov
decb
mov
js
mov
arpl
cmpsb
lods
push
lret
cmp
xor
test
sti
test
inc
xchg
add
arpl
scas
rolb
dec
mov
gs
lret
test
adc
jge
pop
movsl
out
fs
mov
stos
push
loopne
lret
pop
pop
sub
cmp
test
out
call
hlt
adcl
cmpb
pop
lahf
adcl
adc
add
adc
push
ret
adc
pushf
cmpsb
mov
sbb
cmpsb
jge
lret
push
lahf
scas
outsb
fisttpll
ret
sbb
mov
daa
icebp
divb
adc
push
xchg
fwait
test
pop
or
pop
sarb
add
mov
mov
jno
hlt
dec
cmp
mov
aaa
aad
pop
or
jno
and
into
repnz
add
loopne
mov
dec
std
mov
jbe
xchg
mov
sarl
pop
adc
dec
inc
add
cmp
repnz
sbb
cli
xchg
clc
int
mov
cmpsb
outsl
lods
cmp
movsl
icebp
adc
adc
push
lock
les
xchg
sbb
jb
add
pop
cld
mov
out
andb
adc
dec
jnp
scas
test
adc
mov
js
mov
sub
adc
push
push
inc
pushw
popf
leave
xor
cltd
push
jo
jl
loop
leave
insl
pop
inc
jne
jns
cmpsb
flds
leave
xchg
scas
inc
push
mov
sub
xchg
out
inc
in
fiaddl
pusha
pop
lcall
add
movsl
sarl
mov
sarb
push
pop
std
into
cmp
sub
pop
fstps
ja
push
add
xor
cmc
fnstenv
mov
mov
lea
pop
fildl
int
hlt
addr16
push
jmp
or
push
xchg
dec
sahf
jmp
cmp
adc
pop
cltd
shlb
sti
and
bnd
punpckldq
and
dec
mov
test
cmpb
or
dec
sar
push
ja
jg
push
and
aad
sbb
lea
pop
insl
dec
push
ljmp
dec
add
mov
pop
push
pusha
lahf
inc
insl
cmpsb
inc
dec
xchg
and
xchg
mov
pop
mov
jnp
popa
sub
cmpsb
in
mov
clc
fisttps
fnstcw
add
ret
aas
lahf
or
push
adc
mov
dec
sbb
jnp
div
jmp
inc
sbb
jo
xchg
lret
sbb
pusha
outsb
or
pop
gs
adc
es
xor
imul
je
push
dec
adcb
leave
or
cmc
gs
loopne
ljmp
xchg
jae
fistps
xor
mov
popf
aam
or
insl
popf
in
enter
clc
mov
lret
jg
mov
xchg
inc
adc
testl
or
cmp
inc
xchg
gs
lods
lahf
sub
cmpsb
add
aam
mov
clc
lcall
lret
push
out
cld
ficoml
loop
lahf
cld
lcall
mov
or
xor
add
cmpsl
xor
rcll
iret
in
inc
and
add
sahf
addr16
cli
popf
mulb
cmc
xor
lret
pop
stos
xchg
cmpb
xor
mov
mov
xor
or
xorl
dec
adcb
xor
jns
jl
push
sbb
cmc
mov
xchg
xorb
push
cmp
test
xor
push
rcl
push
ret
cmp
or
ja
mov
adc
ja
std
sti
add
mov
jne
push
xchg
add
in
xchg
and
mov
fwait
pop
xchg
mov
in
into
push
xor
lret
mov
inc
daa
jecxz
jnp
cli
lock
loopne
xchg
sub
or
stos
jo
mov
dec
xor
mov
push
and
dec
addr16
lret
or
fiaddl
outsl
sbb
daa
aad
or
mov
or
mov
dec
push
mov
push
push
fcoml
mov
jns
xchg
jp
bound
ja
mov
stos
or
pop
mov
in
icebp
das
xlat
push
pop
daa
dec
fldenv
nop
out
movsb
enter
test
imul
fistpll
data16
nop
pushf
push
test
jle
icebp
cmpl
sarl
push
jmp
dec
int3
sbb
pop
mov
sub
idiv
or
sub
out
pop
out
cmp
mov
dec
sub
call
sub
mov
mov
xchg
sti
cmp
cmp
sub
js
and
fistps
fistl
jge
popa
mov
lret
aad
jbe
dec
xlat
mov
cmp
mov
add
mov
jnp
cmp
popf
mov
test
fwait
rorb
ret
jae
cmp
push
cli
push
jne
and
pop
xchg
inc
push
sarl
es
in
inc
pop
stc
sub
jle
shll
dec
dec
mov
sti
push
out
mov
xchg
adc
cld
lods
xchg
fnsave
mov
xchg
inc
test
mov
adc
jge
inc
int3
fwait
xchg
mov
xchg
mov
and
or
fistps
sbb
mov
mov
jle
mov
sbb
cwtl
and
pop
sub
adc
pop
xchg
pop
mov
shrb
jae
daa
stos
outsb
lcall
sub
gs
jnp
dec
ja
push
cmp
lcall
cmp
sti
stc
js
pop
push
push
repz
pop
sbb
push
mov
and
or
test
in
lds
adc
int
rorb
mov
add
in
xchg
mov
test
or
daa
jnp
push
xchg
pop
dec
int3
or
mov
cld
xor
cmp
pop
pushl
scas
popa
adc
inc
fisubrs
jecxz
xor
xchg
push
in
sub
jge
iret
push
outsl
mov
sub
jno
fisubrl
popf
inc
flds
mov
push
add
and
adc
cmp
shr
icebp
test
jbe
sub
xchg
stos
stc
hlt
adc
in
sbb
or
rcl
cmp
mov
mov
sbb
xchg
and
mov
xlat
sub
inc
aad
mov
xchg
lret
cmp
movsb
pop
ljmp
dec
test
sahf
push
pop
dec
xor
cmpsl
inc
iret
add
imul
mov
mov
jno
cli
jle
push
or
cld
jae
outsb
cmp
shlb
mov
push
scas
or
enter
out
sub
jp
adc
lcall
out
mov
jns
out
add
adcl
xchg
arpl
ret
imul
mov
add
mov
xor
adc
add
inc
xlat
js
and
add
sub
das
cld
nop
ss
add
push
mov
push
xor
arpl
lret
sbb
fwait
call
pop
gs
cmpl
sbb
push
add
push
xchg
nop
or
std
push
jge
lret
jle
in
inc
pop
seta
mov
cs
mov
xchg
int3
cmp
sub
lret
jo
sbb
inc
cmpl
incl
pop
fsts
in
fwait
pop
bnd
add
dec
fiadds
call
negb
pop
mov
xor
pop
dec
mov
es
test
out
pop
push
lods
inc
jmp
push
sub
insb
insl
icebp
addr16
mov
cwtl
hlt
and
into
mov
mov
lahf
dec
xchg
iret
add
sti
jl
stos
dec
sbb
push
adc
xchg
mull
ret
jmp
xchg
jb
fcomi
push
fadd
mov
dec
cltd
mov
inc
jecxz
adc
pushf
fwait
out
mov
int3
inc
push
dec
aad
in
test
cmp
xor
das
scas
mov
rorl
in
jl
push
mov
jnp
dec
sbb
arpl
xchg
adc
leave
jmp
out
xchg
jge
pop
shll
daa
mov
dec
scas
fmull
push
insl
adc
enter
pop
dec
jge
pop
mov
ss
mov
xor
mov
pushf
cmpsl
movsb
pop
push
add
jae
dec
mov
sti
ret
dec
and
push
mov
ljmp
in
rcrl
pop
ret
cmpsl
mov
test
loop
dec
and
scas
push
sar
loope
fnstenv
xchg
pop
inc
fidivl
xor
sbb
imul
cmp
cmp
lahf
sbb
xchg
push
das
sub
pop
jnp
adc
fnstsw
ret
xchg
jne
cmpsb
sbb
pushf
outsb
or
pop
mov
push
cmp
or
add
clc
cmp
pusha
xorb
shrb
aad
jne
imul
fcmovbe
mov
ret
mov
out
les
lock
rorl
dec
lock
xchg
inc
jge
inc
cwtl
lds
or
testl
mov
cwtl
incb
adc
xchg
xor
out
pop
stos
lahf
push
imul
or
int3
inc
mov
add
dec
lods
adc
jno
jecxz
xchg
cmpsl
pop
out
outsb
repnz
hlt
cmpsl
leave
insb
jo
jmp
pop
imul
sub
mov
mov
push
jg
dec
enter
pop
mov
jge
mov
idivl
repnz
lds
jns
test
cmp
ret
rcrb
mov
aam
dec
insl
add
xor
mov
push
dec
xor
add
and
cmp
sbb
mov
push
lea
push
mov
cmpsl
pop
or
shrl
in
test
sub
cmp
lea
shll
lret
fs
mov
pop
hlt
ja
stc
jnp
add
jae
mov
aad
stc
lock
push
rcrl
and
incb
sbb
stos
and
mov
jp
das
sbb
mov
pop
mov
cmp
pop
xor
sub
dec
pop
sbb
js
cmp
je
test
jbe
repz
mulb
mov
ss
push
xchg
fisubl
add
inc
imul
mov
dec
xor
ljmp
xchg
xlat
imul
es
xchg
xchg
insl
stos
ss
jns
and
dec
cmp
test
les
mov
fnstcw
add
cmpsl
xlat
push
jge
sahf
jae
clc
fidivl
int
popf
lea
push
cmp
xor
and
jmp
or
cwtl
mov
fstl
xor
xlat
jbe
movsl
or
in
sub
bound
movsb
frstor
xchg
orb
adc
mov
xor
fsubrp
pop
pop
adc
mov
lods
push
loope
imull
mov
cmp
shlb
and
mov
mov
ret
loope
mov
andl
jo
shll
mov
mov
push
cli
and
dec
ror
outsl
mov
push
loop
ljmp
adc
mulb
add
mov
ljmp
adc
xchg
fnstsw
outsb
inc
or
add
fdivr
pop
adc
xchg
out
xor
inc
aad
mov
popf
std
lahf
mov
and
xor
push
jae
icebp
xor
jo
mov
inc
jecxz
and
push
push
je
fwait
sub
xchg
nop
xchg
sub
add
jl
inc
fildll
pop
adc
mov
out
xorb
call
nop
push
mov
or
sub
outsb
lods
mov
ds
scas
inc
lock
movl
adc
cmp
mov
out
push
pushf
mov
fxam
flds
mov
aas
add
outsl
sub
cmp
lret
lahf
jmp
lret
int
xchg
lds
fcomps
aas
aas
shl
dec
aas
xor
rclb
repnz
inc
pop
jns
sbb
sub
fisubl
xor
outsl
fsubl
adc
lret
mov
in
sub
enter
push
sti
outsb
cmpsb
lcallw
aam
lahf
or
inc
xor
testl
or
push
cmp
insl
movsl
dec
call
ja
icebp
mov
addb
nop
pop
data16
sarb
mov
cmp
std
fsts
or
mov
into
inc
aam
cmc
sub
mov
in
icebp
dec
jne
addb
or
arpl
jns
lret
xchg
jne
pop
push
push
mov
mov
mov
sub
outsl
arpl
and
mov
jg
and
nop
ds
lea
es
clc
sahf
clc
sub
push
sbb
sub
sbb
sub
sbb
add
mov
mov
out
fucomp
cmpsl
test
lds
add
movsb
push
test
xor
inc
repnz
inc
push
inc
je
jle
fwait
test
aam
inc
inc
pop
shr
jl
sub
dec
add
rcrb
test
gs
fmul
jae
sbb
push
pop
jle
rclb
lock
pop
arpl
xchg
movsl
pop
popa
jae
ficomps
dec
dec
adc
enter
jmp
cwtl
ror
stos
or
xor
pop
mov
and
dec
imul
arpl
movsb
ss
or
cmc
test
or
outsl
addr16
test
in
xor
aas
add
sti
int3
cwtl
sub
lret
je
cltd
stos
negl
js
mov
cmp
jmp
push
mov
outsb
adc
ja
pusha
lds
jb
mov
sub
sti
jne
add
mov
jne
and
test
stos
sbb
sub
jno
pop
pop
test
lods
adc
loop
loopne
leave
inc
ja
jmp
push
inc
pop
ljmp
lods
cltd
fisttpll
sub
mov
push
jle
jle
out
or
jge
in
das
xchg
mov
les
icebp
or
test
popf
dec
add
lret
push
leave
leave
shlb
xor
aas
lcall
pop
mov
mov
sub
aas
xor
mov
imul
cmp
inc
mov
or
dec
mov
pop
and
jmp
mov
rolb
stos
or
push
push
and
imul
mov
addb
mul
xchg
mov
out
push
repz
mov
jg
jbe
and
std
shlb
es
mov
or
dec
js
pop
subl
sbb
mov
loopne
movsb
jbe
push
jo
cmpsb
andl
outsb
ja
cld
jae
fcmovne
loop
sar
lahf
fsubl
sub
push
je
mov
popf
inc
shrl
cld
push
adc
pusha
sarb
rcrl
jecxz
hlt
push
sbb
mov
pop
pop
mov
dec
mov
push
shll
mov
icebp
pop
inc
cmc
add
lds
out
mov
push
xchg
frstor
xchg
ds
fiadds
shlb
lods
cmpsb
mov
jecxz
imul
sub
push
jb
adc
orl
jecxz
loopne
mov
sub
adc
xchg
push
stos
pop
mov
lods
fwait
rorl
jbe
mov
scas
cli
es
fdivrl
inc
arpl
call
sahf
xchg
adc
mov
clc
jge
int3
movsl
sbb
cmc
mov
xchg
and
cmpsb
pop
jb
nop
stos
mov
mov
xchg
lock
jbe
push
int
fucomp
lock
addl
dec
adc
cmp
pop
or
fwait
aaa
test
mov
pop
out
fldenv
dec
lods
xchg
nop
loopne
cltd
xchg
mov
in
sub
fisubl
push
daa
lea
call
inc
mov
in
ljmp
mov
jo
dec
and
outsl
cld
sbb
cwtl
mov
test
ror
xor
pop
lea
fimull
mov
mov
mov
imul
sbb
bound
or
cmp
adc
push
mov
lods
sbb
xchg
cmp
adc
jo
push
popa
rorl
mov
outsl
fwait
xor
sbb
xor
inc
push
les
jne
loop
xchg
mov
lcall
ss
cmpb
shlb
xchg
cmpl
xchg
out
mov
test
mov
xor
inc
mov
lcall
mov
sub
inc
scas
and
push
addl
out
ss
bound
inc
jnp
scas
pcmpeqd
insl
and
orl
pop
xchg
repz
mov
sub
sbb
out
decb
lods
nop
std
out
adc
add
test
dec
pop
or
mov
adc
insb
sti
lcall
jno
and
xchg
adc
dec
ds
and
bound
fsts
movsb
les
call
adc
push
sbb
in
ja
adc
or
orb
xor
lds
cwtl
lahf
dec
lds
cld
xchg
outsb
cmp
xlat
dec
scas
ljmp
sub
push
adc
and
dec
outsl
les
dec
gs
mov
scas
jecxz
popf
loope
inc
push
icebp
cmovge
mov
stos
push
movsb
mov
out
and
out
jg
enterw
sahf
insl
ficomps
adc
mov
sub
cmp
fwait
xchg
mov
ret
fstpt
cli
or
popa
idivb
clc
testb
mov
icebp
pop
add
mov
andb
jecxz
jae
std
clc
pop
and
sbb
pusha
cmp
cld
xchg
xchg
sti
lock
mov
cs
push
inc
fadds
iret
sub
mov
leave
testl
cmpsl
dec
dec
mov
mov
adc
es
out
cmpsl
dec
jl
add
sbb
xor
pop
call
pop
pop
pop
cmc
or
rorb
dec
mov
outsl
inc
add
shlb
cmp
sbbl
or
xor
jg
repnz
mov
pop
js
add
lcall
adc
mov
outsb
inc
sub
mov
mov
daa
icebp
and
and
scas
dec
stos
stos
cwtl
test
daa
mov
jns
cmp
ljmp
mov
shr
and
loope
or
mov
or
jmp
adc
and
imul
sub
shr
addr16
inc
xrelease
adcb
mov
lcall
ret
jno
mov
sub
sub
rcl
aam
fucomi
push
adc
enter
cmc
gs
sub
add
outsl
mov
stos
call
adc
ficoml
mov
adc
push
clc
and
push
push
cmpsb
mov
sarb
out
xchg
test
movsl
xor
cmc
jle
fimull
push
stos
loopne
xor
xchg
xor
add
lret
out
in
sbb
fstps
or
mov
repnz
pslld
push
xchg
cmp
xor
js
jno
mov
lea
hlt
push
add
clc
faddp
mov
xlat
call
mov
test
cwtl
and
dec
ret
aas
lahf
inc
mov
call
pop
push
jnp
mov
cld
xor
push
sahf
rolb
loope
ja
jno
mov
inc
push
in
scas
mov
jle
iret
sub
fs
mov
xlat
jle
adc
outsb
mov
mov
and
jnp
fists
outsb
cld
inc
and
mull
pop
xchg
add
jecxz
jnp
or
xlat
mov
mov
inc
loope
addr16
out
repz
out
xor
adc
mov
xor
sbb
cltd
push
out
mov
insl
insb
xor
adc
enter
dec
jge
out
bound
fisubrl
mov
mov
pop
outsl
cmpsl
imul
cmp
nop
mov
out
nop
loopne
mov
fcompl
lods
cmpsb
sub
pop
imul
outsb
lret
mov
add
out
call
cmp
cs
enter
ljmp
xor
test
inc
jle
call
jge
out
xchg
mov
cli
mov
mov
aad
cmp
das
nop
ja
or
pop
fwait
add
add
lock
mov
xlat
loope
mov
add
nop
test
pusha
jo
lcall
adc
pop
xor
and
cltd
pop
loope
ds
lahf
xchg
ret
adc
xlat
mov
nop
mov
sbb
dec
jne
and
cmp
fwait
xor
lret
push
sti
ljmp
xchg
sub
mov
jo
xchg
in
jnp
mov
out
sub
sbb
dec
mov
jl
push
mov
inc
inc
mov
daa
adcb
inc
fdivrs
pushf
mov
sub
lods
jge
jae
or
sbbl
rorl
stos
outsl
mov
sbb
jb
out
movsl
cli
ss
add
jmp
dec
jmp
mov
ljmp
dec
lahf
movsl
popf
sbb
mov
clc
mov
loop
or
push
adc
inc
xchg
sbb
test
xchg
pop
dec
adc
int3
call
push
jnp
sub
mov
sub
in
xor
pop
and
aas
fstpl
dec
xor
xchg
jecxz
jmp
cmpsb
sti
pop
mov
shrb
sub
in
sub
outsl
stc
cmp
shlb
sub
cs
repz
mov
mov
cmp
in
jl
cwtl
jne
and
pop
or
data16
fbld
and
repnz
xchg
pop
pop
ficoms
jns
dec
and
cmpsl
jno
jmp
pop
mov
andps
adc
mov
push
into
cmpsb
cmp
repz
out
dec
aam
test
jmp
dec
fidivrs
cltd
adc
mov
dec
leave
pop
hlt
arpl
cmpb
outsl
lcall
outsl
cld
mov
insb
das
int
xor
sub
subb
rol
mov
movsl
sub
shll
jecxz
fmull
adc
div
das
jbe
hlt
cmc
loopne
test
out
jo
or
test
xor
cmp
xchg
mov
adc
scas
inc
xorl
test
dec
xchg
lcall
addr16
adc
icebp
or
dec
in
inc
pushf
cmp
andl
cmp
pop
arpl
fs
jp
mov
outsb
xchg
jbe
dec
loop
push
mov
js
dec
sub
mov
jmp
rcl
test
mov
in
and
jge
mov
testb
cli
aas
jp
xor
sbb
call
mov
or
out
popa
cmp
pushf
shll
subb
popf
lods
inc
andl
sub
test
mov
push
ss
jae
jae
jo
dec
call
add
mov
mov
aas
xchg
and
lret
add
outsl
ja
xchg
push
adc
jbe
in
bsf
pop
in
inc
push
js
testb
ja
mov
in
dec
inc
pop
fadds
sbb
pusha
mov
or
mov
bound
and
addr16
imul
dec
jns
xlat
jp
cmp
and
xchg
aam
sbb
ja
mov
dec
out
mov
fcoml
add
mov
jecxz
sbb
nop
sbb
mov
cmp
shl
bound
cmp
xor
int
cmc
test
xor
push
inc
cmc
sub
out
mov
mov
push
lcall
clc
pop
and
lods
xor
add
push
or
push
and
out
pushf
mov
mull
inc
add
xchg
icebp
movsb
mov
jae
dec
stos
icebp
jns
pop
sti
xchg
mov
push
mov
idivb
in
adc
out
lret
test
mov
and
dec
xchg
test
dec
leave
pop
call
stos
pushf
mov
cwtl
adc
std
pushf
addr16
outsl
jns
test
inc
movsl
pop
sbb
ja
js
bound
pop
ret
mov
addr16
pop
movsl
popl
add
xor
int3
push
lret
jg
xor
mov
test
std
push
testb
pop
xchg
mov
adc
cltd
mov
pushf
cmpsl
sbbb
jbe
mov
cs
daa
push
ds
push
push
dec
aaa
clc
jmp
fisttpll
adc
mov
push
add
mov
divl
lret
or
pop
ret
aas
dec
adcl
jo
ret
add
insb
ss
enter
in
mov
lret
xor
popf
daa
xchg
outsl
jne
jle
fxch
fcomps
mov
sub
or
jns
add
xor
stc
movsb
add
fwait
push
push
pop
cmp
ret
iret
dec
inc
lea
pop
pushf
jg
inc
and
fidivs
daa
lods
out
pop
rol
cmp
stos
inc
repz
data16
decl
fdivrs
insb
mov
lret
les
mov
sub
imul
sbb
cli
daa
dec
hlt
add
clc
cmpsl
mov
dec
dec
mov
jnp
insl
into
aad
out
mov
jecxz
fisttpl
loopne
mov
testb
xor
mov
dec
pop
mov
cmp
jp
xchg
and
jl
nop
cli
test
ret
outsl
test
rcl
bound
cmp
pop
mov
in
cld
das
out
daa
cmp
or
xchg
cld
mov
sti
jo
lret
out
mov
inc
sbb
pop
mov
xor
push
dec
ljmp
ret
stc
cmp
xor
shll
ds
inc
push
int3
fucomi
xchg
xchg
pop
inc
int3
rol
movsl
ja
pop
cmp
or
jb
mov
adc
mov
mov
cmp
mov
arpl
icebp
orl
mov
mov
lods
repz
cmp
mov
lods
pop
add
imul
int
mov
insl
cmp
push
test
xchg
mov
mov
lret
xor
lock
imul
cmp
jmp
jnp
lcall
xor
cmp
sbb
les
mov
test
xchg
adc
jle
push
add
pop
dec
mov
cmpsb
add
cmp
and
push
je
lahf
mul
mov
jnp
call
std
add
sub
jb
xor
jmp
sub
mov
popa
dec
clc
mov
pop
cmp
xor
ret
cmpsb
xchg
fcmovb
push
xchg
lcall
pop
ljmp
hlt
xchg
xorb
gs
inc
cmp
mov
add
pop
jns
push
xorl
lahf
pop
push
call
sti
mov
mov
pop
loopne
movsl
sbb
popl
adc
or
add
std
sub
xchg
dec
dec
call
pop
mov
leave
cs
pop
divb
out
loopne
enter
inc
push
mov
lea
lcall
pop
aad
out
loope
and
pop
pop
insl
stos
jae
mov
fcmovnu
addr16
inc
cld
mov
pop
cltd
inc
dec
jae,pn
xchg
mov
mov
or
dec
cmp
or
sbb
div
insl
pushf
es
jno
lcall
mov
fwait
rol
xchg
add
or
xlat
gs
lods
adc
popl
jl
or
mov
hlt
pop
stos
iret
mov
stos
out
jge
mov
call
inc
add
add
sbb
repz
stos
js
shrb
push
xchg
adc
pop
cltd
jmp
or
imul
cs
jae
jmp
push
push
cli
or
inc
aas
mov
rcll
cld
dec
enter
clc
insb
adc
loopne
lret
icebp
outsb
and
add
cmp
cmp
lods
xchg
adc
sbb
sub
pop
mov
pop
add
nop
jl
push
pop
jae
jns
mov
mov
xchg
mov
mov
mov
push
outsl
xorl
repnz
or
leave
movsb
xor
inc
movsl
add
ja
outsb
mov
cld
add
xor
mov
dec
sbb
lock
jbe
xchg
xor
xchg
dec
pop
int3
test
sub
fistl
cltd
fcom
frstor
data16
flds
cld
and
lock
pop
cwtl
xchg
mov
jnp
test
xor
and
push
ljmp
mov
mov
sbb
adc
jmp
xchg
mov
and
mov
mov
or
cmpl
rolb
push
and
movsb
pusha
sbb
sub
mov
mov
mov
sti
mov
jg
imul
jnp
mov
andl
xchg
xchg
test
leave
push
mov
mov
xchg
popa
xor
or
aas
enter
mov
sbb
rorl
sbbl
out
mov
jecxz
xlat
pop
jmp
fbstp
jno
iret
mov
inc
lods
out
cmp
stos
dec
imul
rol
fyl2x
and
jecxz
cmp
sahf
inc
sub
aas
pop
orb
mov
mov
fprem
jo
xchg
sub
stos
pop
repnz
cmp
ljmp
ja
and
and
insb
out
mov
sbb
push
sbb
imul
push
outsb
mov
mov
in
jnp
ds
push
ljmp
dec
sub
jp
inc
pop
lods
push
or
push
pop
cmp
stos
fcmovbe
adc
mov
mov
dec
dec
jecxz
testb
loop
xlat
cmp
jb
js
inc
jb
cli
sub
repnz
dec
lea
test
or
pop
fs
pop
or
out
push
loope
lret
mov
scas
idivl
jg
lcall
repz
gs
mov
xlat
clc
sahf
enter
pop
ljmp
xchg
lds
test
mov
enter
cmc
pop
js
aad
std
stos
add
or
iret
push
mov
xchg
jns
mov
out
imul
loopne
aam
xchg
mov
add
jge
shld
iret
aaa
mov
and
push
sub
fidivs
sbb
or
and
pushf
fimuls
test
daa
mov
sarb
insl
xlat
xchg
and
sti
cwtl
popa
and
push
push
sbb
dec
fldt
test
inc
loop,pn
and
push
xchg
push
and
jno
adc
pop
ja
aad
fs
xor
mov
push
fnstcw
push
sbb
mov
pop
cmp
js
enter
aad
mov
in
pop
repz
xor
lahf
repz
xchg
daa
xchg
add
xor
imul
mov
fimull
sub
mov
sbb
lea
not
push
js
mov
cmp
popf
sbb
pop
mov
cmc
int3
xchg
data16
das
fmuls
and
inc
test
js
push
test
pop
jne
das
aas
scas
out
ljmp
add
cmp
je
lahf
xor
pop
ds
mov
sahf
stos
ss
sbb
xor
mov
or
neg
rorb
cwtl
cmpsl
bound
hlt
into
xchg
pop
test
and
xchg
out
push
or
cld
push
push
in
dec
jbe
inc
es
jecxz
cmpsl
and
cmpsb
jle
pop
mov
add
cld
negl
xor
xchg
into
bound
cmp
pusha
notb
loope
ficompl
cmp
cwtl
insl
xor
int3
pop
das
mov
mov
xor
and
sbb
cmpsl
dec
add
lods
sub
cmp
dec
xchg
push
push
mov
cmp
or
push
cmp
test
stos
faddl
repz
stos
and
outsl
out
adc
sub
rcrl
or
lods
notb
fcompl
adc
cs
cmp
dec
dec
and
cmpsb
xchg
scas
adc
xchg
mov
pop
pop
aam
cmpsl
mov
into
scas
adc
jbe
scas
lea
aaa
out
inc
pusha
into
lret
arpl
outsb
xchg
dec
mov
or
test
outsb
adc
or
je,pt
repz
data16
stos
or
lahf
pop
cmp
fdivrs
je
lods
ja
mov
pop
add
push
pop
jge
dec
xor
ffreep
cld
rcll
push
adc
imul
lods
inc
sub
sbb
data16
xchg
popa
push
add
leave
inc
lret
adc
jmp
sub
aaa
lret
xchg
pop
enter
jge
cmpsb
aam
and
mov
or
sub
jo
decl
inc
or
nop
and
das
add
xchg
sub
shlb
pop
iret
jmp
sbb
adc
call
adc
adc
mov
imul
cmp
mov
add
es
and
popf
int
popa
in
mov
pop
xor
or
insl
cwtl
clc
push
cli
and
xor
pop
jle
adc
jne
pop
pop
test
cmp
xchg
sub
ljmp
mov
adc
stos
sarl
add
sub
add
mov
movsl
aaa
inc
lret
in
pop
pop
cmpsb
into
or
xchg
xchg
add
mov
pop
xchg
bound
les
cltd
rcrl
jmp
int
popa
pop
imul
hlt
mov
pushf
iret
mov
fiadds
iret
push
repnz
mov
scas
out
popf
xor
fldenv
cmp
das
imul
inc
push
push
dec
stos
adc
in
repnz
or
mov
cmpl
leave
lahf
and
jmp
pusha
cmp
and
adc
pop
nop
shll
cmpsl
jnp
pop
sti
inc
cmp
sub
pushf
mov
into
xchg
jmp
rcrb
push
popa
pop
adc
pop
mov
mov
fisubs
das
add
std
int
push
lods
in
ficompl
pop
push
xor
jb
mov
enter
test
xor
inc
int
jp
adc
rcll
rclb
leave
sbb
aaa
sbb
or
sbb
inc
fdivl
push
xor
out
fcompl
sbb
mov
stc
out
lret
mov
adc
lock
test
mov
insb
jg
in
ja
fildll
xor
test
mov
mov
imul
pop
mov
or
out
je
test
and
dec
pop
dec
call
aam
mov
fcmovne
sbb
and
pop
mov
pop
stos
aad
and
add
leave
ret
icebp
inc
pop
xor
jmp
cmpsl
push
add
inc
xchg
pop
das
imul
xchg
mov
ja
insb
inc
int3
mov
lahf
xchg
sub
call
dec
aaa
data16
dec
ljmp
les
dec
int3
in
sbb
xchg
aas
out
xchg
stc
movsl
xchg
cmpsb
pop
pop
and
into
and
sbb
xchg
inc
and
sub
outsl
stc
jbe
out
fnsave
adc
pop
jmp
or
scas
mov
inc
add
lods
jo
lahf
lahf
jmp
fnstcw
and
or
xchg
xchg
xlat
push
mov
add
popf
cmp
cmp
cmp
subl
cmp
inc
loopne
mov
jo
mov
pusha
mov
fidivs
js
addr16
in
adc
jnp
cli
fidivl
push
sub
cmp
aam
xlat
ja
sbb
lcall
mov
loope
inc
inc
jne
movsl
push
int
pusha
loopne
mov
adc
repz
mov
mov
fs
data16
pop
push
xor
pop
pop
mov
mov
inc
aaa
pushl
and
or
insb
stos
xor
test
or
sub
push
mov
jbe
sarl
dec
pop
lcall
test
sahf
into
inc
xor
sarb
inc
mov
add
aas
xchg
mov
add
push
sbb
sub
in
in
jnp
in
das
xchg
xchg
aad
fists
mov
lods
sbb
add
push
xchg
mov
int3
je
xchg
in
xchg
push
cmc
lret
cmp
out
jno
stos
rclb
fistpll
arpl
in
xor
add
psubb
stc
xor
adc
xor
cli
dec
fcoms
add
xorl
cs
arpl
nop
sbb
rclb
loope
and
test
sti
xchg
addr16
iret
cmp
cpuid
or
imul
cmp
lahf
jp
sub
popa
jmp
das
dec
sub
stos
add
adc
flds
sbb
inc
mov
orl
insb
sahf
inc
icebp
add
cmc
ret
cwtl
sbb
pushf
leave
fisubs
or
and
lods
xor
loopne
adc
sahf
aaa
add
xor
xlat
cmpsl
xchg
push
xchg
cmp
mov
adcb
shll
lahf
sbb
jg
imul
mov
mov
je
inc
cmc
mov
jb
push
int3
scas
adc
or
and
push
xchg
mov
or
dec
xchg
cmpsl
lea
outsl
cmp
xor
mov
iret
ss
and
jg
popf
rorb
and
aam
jge
push
shl
dec
cmp
ds
dec
xchg
movsb
dec
loope
popf
je
xchg
mov
dec
add
adc
aas
dec
aas
pop
inc
daa
pop
pop
pop
mov
push
push
xor
ror
mov
sbb
cs
xor
inc
pop
js
loop
push
sbb
xor
jge
std
mov
push
dec
and
sbb
dec
xor
out
adc
repnz
xor
sbb
mov
and
inc
mov
inc
pop
pop
sti
in
js
xchg
jmp
dec
lret
inc
out
push
dec
fsubs
jb
cmpl
xchg
mov
enter
mov
xor
inc
cmp
pop
mov
mov
sbb
cmp
fimull
push
or
imul
mov
mov
loopne
sub
add
inc
shll
loopne
fsubrs
aam
adc
dec
lock
xor
mov
rcr
cs
xchg
popa
int3
ljmp
mov
add
lcall
xchg
jb
enter
add
or
sub
cwtl
mov
fsubl
jno
jg
sbb
test
sbb
inc
mov
negl
outsl
fcomi
mov
sub
test
repz
je
sub
outsb
mov
xor
jge
pushf
and
sub
mov
sub
sub
mov
popa
testb
lahf
js
call
xchg
das
loope
mov
xor
and
fidivrs
das
sbb
cmp
lret
push
and
out
pop
xor
push
mov
or
scas
int3
adcb
jmp
loopne
xchg
mov
push
frstor
jecxz
loopne
pop
push
sbb
std
mov
and
psllw
inc
sub
push
sbb
or
sub
fsubr
xchg
aaa
adc
mov
pop
and
xor
or
mulb
mov
aas
adc
in
sub
or
cmp
push
push
lahf
jg
pop
pop
imul
inc
push
add
dec
loope
mov
inc
or
sub
push
scas
sbb
jmp
mov
push
or
jne
jno
xor
int3
jge
rolb
scas
test
aas
mov
fbstp
sbb
outsl
cmp
orl
inc
pop
aad
mov
out
imul
pop
ret
hlt
es
fimull
imul
subb
subb
and
mov
dec
test
sbb
cmpsl
xorl
mov
imul
add
jp
out
test
xor
push
cli
inc
push
add
movsb
push
aaa
dec
into
repz
cmc
nop
inc
xchg
stc
jp
int3
cwtl
mov
std
daa
sub
or
inc
xchg
das
scas
scas
jp
xor
jp
and
jne
repz
ficomps
push
or
fmuls
mov
dec
decb
mov
mov
lds
stc
sub
icebp
rcrl
stc
and
inc
lahf
dec
in
push
cmp
stos
mov
adc
loop
outsb
jno
test
js
cmp
or
and
sbb
xor
or
icebp
jne
sbb
sti
jb
push
push
push
imul
mov
jns
in
dec
cmp
push
rclb
jae
pop
dec
andb
dec
gs
add
sub
xchg
xor
sti
movsl
cli
dec
aas
sti
lock
lret
pop
popf
ja
mov
inc
mov
insl
cmp
stos
or
mov
jg
jmp
pop
push
push
add
add
repnz
add
jne
xlat
add
adc
inc
fbld
sahf
cli
cmp
jle
pop
xchg
inc
imull
repnz
cmp
mov
pop
lea
in
sbb
cmp
sahf
lds
add
insl
sub
call
add
add
xorl
stc
cltd
lahf
xchg
xchg
nop
lods
dec
jmp
inc
stos
jge
xor
dec
test
aam
out
neg
inc
sbbl
push
xlat
mov
dec
cmc
push
xchg
cmpsb
push
jle
ja
repz
adc
xchg
je
xor
mov
cld
lahf
push
push
xor
fisubs
xchg
insl
insl
rcll
mov
scas
lret
cs
bnd
pop
addr16
sub
cmpsl
inc
sarl
rolb
int3
fdivl
fnstsw
jp
lock
xor
and
insb
xchg
cmp
xlat
sahf
xlat
cmc
ljmp
mov
mov
bound
aad
jmp
push
jg
subl
mov
mov
jae
sub
jp
loop
cmp
leave
jle
jo
push
js
in
xor
bound
push
ja
scas
xchg
mov
mov
repz
cmp
cltd
sbbb
stc
daa
add
sar
jmp
das
adc
or
or
mov
pop
sbbl
hlt
mov
lret
arpl
in
sti
adc
mov
dec
fldt
pop
adc
lahf
fimull
jne
pop
addb
shrb
pushf
js
xchg
xor
pusha
add
mov
push
dec
add
mov
gs
fwait
lahf
stos
and
mov
cs
popa
lock
dec
scas
jae
leave
int3
pop
push
out
lds
stos
test
push
jmp
rorb
cltd
sbb
push
jmp
mov
pop
or
les
fnsetpm(287
outsb
mov
push
cmpb
in
mov
adc
push
or
push
sbb
cvtpi2ps
ss
cmp
stos
fcomip
lods
sbb
cmp
stos
cli
add
and
push
rolb
lods
dec
mov
loopne
mov
popa
mov
in
pushf
lods
pop
cmpb
das
xchg
push
imul
fwait
insb
je
jne
into
xlat
lock
jae
cli
idiv
xchg
in
imul
out
cmpl
and
lods
and
jnp
fiaddl
repz
lret
xchg
loopne
fstpt
jno
insl
push
mov
sbb
adc
clc
fisttps
cmp
xchg
call
movsb
adc
jge
cli
jns
cld
out
movsl
testb
enter
fwait
mov
xchg
stc
mov
sbb
mov
and
sbb
adc
fucom
push
inc
cmp
cmp
add
popa
push
or
sar
push
loopne
out
sub
out
aam
shrb
rcrb
insl
rcrb
sti
lcall
aas
push
movsb
ljmp
test
push
fnstenv
cmp
dec
push
outsb
sub
add
inc
enter
and
aad
mov
xor
imul
cli
test
and
test
add
out
push
inc
adc
int3
mov
cmc
das
mov
add
insl
add
das
xchg
jmp
xor
fdivrp
clc
cli
cltd
loope
mov
xchg
ret
cmpsb
fidivrl
in
scas
lcall
arpl
add
rcrl
les
jl
clc
lds
gs
xchg
lock
dec
xchg
orl
sub
iret
or
fwait
cmpb
or
out
xchg
aas
sub
sub
sbb
out
add
xorl
or
imul
aas
nop
jge
gs
mov
dec
inc
mov
pop
outsl
xchg
jo
adc
call
shl
dec
fstpl
lea
in
es
pop
push
xor
and
mov
jo
jo
ds
mov
add
enter
pop
lock
aaa
popa
and
imul
out
pop
or
testl
outsb
mov
xor
or
fwait
jo
mov
jo,pn
inc
xchg
adc
int3
xlat
jbe
nop
loop
daa
sub
mov
and
dec
cmp
lds
xor
inc
jnp
popf
insl
icebp
jbe
inc
cmp
loopne
pop
je
cmc
inc
push
int
test
test
mov
or
adc
sarl
call
mov
nop
push
push
sbb
dec
gs
loopne
lret
inc
rolb
inc
aad
ds
loopne
icebp
dec
jmp
dec
aas
test
js
dec
stos
lds
pop
push
icebp
loope
sub
rcrb
mov
push
ss
mov
test
test
loope
dec
lods
aam
loop
insb
pand
fisttpll
push
stc
mov
pop
xlat
xor
push
cmp
add
add
or
frstpm(287
stos
or
pop
mov
xchg
jnp
pop
add
inc
jbe
call
out
mov
cmp
push
subl
repnz
sbb
pop
icebp
cmpps
inc
and
scas
sbbb
jns
pop
aas
xchg
pop
lods
aad
je
in
in
je
cs
or
testl
std
dec
lea
jnp
aam
cld
add
push
xchg
mov
repz
add
clc
out
xchg
dec
in
and
arpl
pop
mov
insb
adc
test
addr16
in
movsl
ljmp
cmpsl
mov
xlat
cmp
loop
aad
nop
add
dec
mov
xchg
pop
leave
push
push
insb
jno
sbb
cltd
ret
pop
into
or
and
fadd
cmpsl
or
scas
xchg
lcall
outsb
clc
lret
pop
dec
minps
xchg
cmp
movsb
and
mov
sub
jae
cmp
mov
popf
and
xor
sar
out
inc
mov
fwait
sti
cltd
add
xchg
test
outsl
roll
mov
fldenv
adc
mov
jne
enter
cli
hlt
dec
push
xor
std
jne
cli
add
rorb
mov
js
scas
pop
lret
jnp
add
mov
out
push
or
cltd
xchg
push
clc
cmp
or
cmp
das
sbb
lods
in
add
clc
or
inc
adc
int
cmp
lahf
or
out
dec
in
and
out
lds
lcall
out
popf
push
nop
sub
xchg
imul
out
loope
hlt
subl
stos
dec
gs
sbb
ja
stos
dec
jg
dec
loopne
lock
aad
cmp
test
das
stc
adc
out
das
arpl
cmp
lods
sub
fmul
xchg
sbb
and
imul
jns
pushf
lahf
repnz
pop
mov
jno
subb
leave
xchg
ss
pop
push
lods
dec
loope
ds
push
lea
push
fistl
and
fadds
gs
jp
xorl
pop
mov
test
mov
movsl
daa
lock
sub
test
xor
popa
cmpsl
adcb
mov
loopne
aaa
leave
fdivs
lods
stos
xchg
mov
sbb
pop
jo
cltd
sub
push
add
push
fdivrs
rclb
arpl
pop
dec
rcll
or
fcoms
inc
cwtl
movsl
dec
imul
xor
push
mov
in
loopne
rcrl
jns
pop
push
xchg
jns
out
xchg
lods
mov
cmp
jne,pt
and
inc
jg
lret
sub
pop
mov
xor
sti
jns
movsl
dec
lcall
pushf
and
inc
push
xchg
xchg
jmp
mov
push
mov
fwait
adc
sbb
jge
cltd
cmp
loope
sbb
fcomi
stos
fildll
cli
ret
xchg
sub
jl
rorl
adc
adc
xchg
rorb
das
adc
andl
sub
push
pop
in
mov
iret
nop
scas
dec
inc
ja
in
lahf
fnstcw
ss
jmp
pop
lret
ret
mov
jns
sub
add
cmpsb
or
push
jg
loopne
fistps
add
test
cltd
cmp
mov
mov
sbb
add
in
dec
shrb
lcall
outsl
jne
scas
mov
mov
data16
adc
scas
arpl
jbe
ljmp
jne
dec
push
scas
daa
push
jecxz
mov
xchg
out
je
or
leave
dec
push
into
mov
mov
mov
ja
cltd
and
enter
sbb
hlt
es
fnsave
mov
adc
add
cmp
clc
adc
inc
sub
xchg
xor
fldt
or
dec
sbb
shrl
mov
js
push
dec
loop
insb
adc
push
or
xchg
cmp
scas
pop
icebp
lds
pop
or
sbb
bound
mov
or
pop
out
and
inc
jle
inc
cmpsl
inc
sbb
cld
mov
jnp
mov
mov
cmp
lcall
out
in
outsb
mov
sarb
loop
push
cmp
sub
aam
push
lds
rcll
shrb
or
andl
or
js
cmp
insb
insb
mov
xchg
jns
repz
add
leave
add
sbb
fwait
xchg
mov
or
pop
es
pop
pushf
ret
add
adc
ds
nop
call
sti
mov
loope
sbb
sub
cld
jmp
and
cmp
push
mov
mov
out
mov
std
jg
dec
xor
mov
lods
popf
ret
int3
jne
xor
jae
dec
sbb
add
xlat
or
add
add
les
lods
sti
mov
jecxz
aaa
adc
out
in
ffree
loopne
stc
pop
xchg
ret
nop
leave
lock
cmc
mov
adc
cwtl
mov
scas
test
scas
loope
stos
adc
jo
lds
lods
insb
mov
lock
inc
or
jbe
dec
adc
mov
std
push
in
shrl
sbb
xchg
inc
pop
sarb
sub
cmpb
pusha
cmp
ljmp
sbb
insl
push
fimuls
cwtl
imul
aam
sbb
jmp
dec
fbld
lahf
pop
sahf
mov
pusha
imul
aad
mov
mov
adc
xchg
shl
push
stos
mov
fstl
lock
mov
push
jp
mov
cmpsb
outsb
sub
dec
mov
pop
sbb
inc
dec
push
mov
or
shl
fwait
push
ror
xor
loope
and
mov
stos
cwtl
and
mov
xor
or
sub
sub
mov
and
xchg
xchg
ret
xor
call
adc
mov
sbb
adc
push
test
int
js
jne
mov
xlat
push
fs
push
and
mov
enter
shl
jae
popf
jmp
loopne
jl
pop
pop
fwait
add
cmp
lock
inc
dec
pop
aam
repz
add
dec
rcll
popf
jmp
sti
and
cmp
cmp
lods
mov
or
inc
push
cs
imull
cmc
dec
cmp
jp
jbe
les
xor
mov
stc
sub
popa
and
inc
imul
loop
sub
scas
out
js
std
outsl
lret
sbb
xchg
dec
imul
mov
sbb
inc
mov
push
ja
cmpsl
in
mov
add
cmp
fwait
shll
push
leave
push
mov
pop
dec
dec
pop
or
lock
cmp
cmp
out
fs
jns
inc
add
scas
push
negb
pop
fsubrs
mov
cli
adc
out
jp
xchg
sti
imull
cwtl
mov
mov
sti
test
inc
push
sub
push
adc
fwait
out
cmp
imul
loop
dec
out
push
mov
outsb
shlb
mov
fildll
ret
ret
mov
pop
adc
dec
sbb
mov
icebp
or
add
mov
outsb
inc
and
xor
mov
cltd
ret
xor
sub
bound
movsl
cmp
and
insb
mov
cmp
ret
pop
pop
jno
xchg
adcb
mov
dec
jne
jns
andl
loop
add
dec
mov
mov
pop
mov
adc
dec
mov
inc
sub
sbb
out
push
mov
push
inc
mov
mov
push
aad
fs
dec
mov
and
mov
adc
jns
cmpsl
dec
push
adc
loope
test
movsb
lods
lods
js
rol
ret
enter
jb
mov
push
lods
mov
push
mov
jmp
bswap
pusha
int3
in
push
and
add
jno
or
cs
arpl
nop
rcr
cmp
sbb
push
arpl
adcl
push
inc
test
ljmp
lds
aas
sbb
in
adc
xchg
pop
mov
xchg
mov
xlat
in
fstpl
test
scas
into
jge
or
fcompl
jns
mov
insb
daa
jle
mov
cmp
out
cwtl
xor
test
add
sbb
pop
pop
aaa
mulb
call
sub
sahf
push
cmc
out
jg
fcoms
cmp
mov
xlat
dec
xchg
daa
stos
mov
dec
inc
out
cwtl
cmc
flds
mov
notb
xor
std
ret
add
xchg
push
andl
shr
fwait
inc
movsl
sub
mov
test
cmp
sbb
sub
push
data16
pop
pop
mov
loop
mov
dec
shll
iret
lret
iret
add
inc
sti
jmp
xor
inc
out
cmpsb
stos
adc
lahf
xor
aam
push
pushf
test
and
pop
jg
dec
fucomp
inc
das
test
pop
push
jmp
mov
or
inc
fldt
push
faddl
jo
push
mov
mov
add
ror
jno
sub
movsl
test
xor
jg
sbb
out
adc
cmp
mov
loop
into
inc
rol
aas
stos
call
rcll
mov
adc
lock
lods
mov
ds
xor
pushf
cmp
jg
lods
add
xor
std
addr16
in
mov
imul
cmpsl
ror
sub
add
mov
dec
pop
cmp
add
push
pop
icebp
fmull
std
jle
into
jmp
inc
out
mov
inc
fisttps
fwait
les
in
sub
lock
fbstp
stos
pop
cld
pop
fcmovu
cmp
popa
nop
loope
adc
rcl
add
pushl
xlat
aad
mov
out
shrl
loope
aad
out
inc
pop
dec
push
lret
adc
jns
js
mov
inc
or
fadds
pop
fsubrs
adc
leave
loopne
shl
pop
lret
xchg
push
dec
mov
ret
mov
sub
fldcw
pushf
lcall
in
repz
out
loop
outsl
lock
ds
mov
cltd
xchg
inc
mov
movsb
cmpsb
push
clc
icebp
sub
push
add
pop
mov
sbb
mov
cmp
jnp
mov
repnz
push
dec
xchg
orb
sbb
aam
in
and
pop
jecxz
data16
dec
mov
add
cmp
sub
dec
pop
xor
out
dec
movsb
in
dec
xor
lods
jns
adc
push
leave
lods
mov
mov
jle
test
jnp
pop
bound
add
jbe
jecxz
fs
sbbl
mov
xchg
mov
xchg
jle
cmp
fmull
fiadds
xchg
pop
cwtl
and
add
jl
iret
push
aaa
mov
push
xchg
or
xchg
lret
or
xchg
add
icebp
jne
jo
adc
cmpsl
and
cmpb
dec
sbb
mov
fsubs
push
or
inc
sbb
or
and
lahf
fmuls
cld
and
cltd
testb
int
adc
mov
in
cs
mov
inc
out
cmpsb
pop
test
es
pop
dec
sub
jb
addr16
lods
mov
rorl
jae
push
cld
xor
xchg
out
popa
mov
mov
popa
push
adc
mov
or
add
sti
mov
test
lds
or
and
lock
add
loope
dec
hlt
cmp
es
xor
push
push
sbb
mov
outsb
daa
es
mov
lea
add
ja
inc
js
cmpsb
aad
jb
push
mov
xor
inc
sub
pop
mov
jmp
bnd
push
mov
add
jnp
popa
pushf
add
scas
aas
dec
dec
xchg
aad
imul
xor
out
or
repnz
test
sub
xchg
pop
inc
out
cmp
dec
sub
or
ficomps
sub
sub
mov
js
cltd
cli
push
xor
arpl
push
loope
xchg
add
mov
cmp
adc
inc
or
sbb
cld
adc
push
iret
test
icebp
daa
movsb
sub
push
sub
xchg
sub
mov
pop
dec
mov
xor
jp
hlt
mov
outsl
cmp
or
and
fs
fnsave
cmp
pop
or
sti
add
and
or
sub
push
jbe
jo
mov
lret
leave
adc
mov
aad
sahf
sub
cmp
adc
mov
sbb
pushf
idivl
jl
mov
andl
clc
mov
lds
and
and
aad
adc
push
xchg
cld
or
and
iret
xor
inc
lahf
mov
ds
jge
jo
mov
cmp
ret
ljmp
lcall
xor
and
lret
push
ficoml
mov
inc
jg
mov
cli
fisttps
jecxz
mov
ja
repnz
jno
rorl
jp
fsub
dec
repz
sbb
push
cmp
imul
pop
xchg
je
or
fisttps
fisttpl
push
mov
add
sub
lahf
mov
dec
dec
cltd
iret
movsl
xor
push
fistpl
add
inc
inc
fmulp
lcall
mov
jae
daa
mov
fsub
push
add
add
mov
jbe
sub
testb
push
inc
outsl
pop
loop
lods
in
and
test
jne
sarl
mov
in
and
out
gs
inc
sub
add
jl
subl
aam
inc
mov
jb
dec
sub
stc
stos
pop
fnstenv
or
je
imul
pop
mov
xchg
pusha
fistpl
xchg
js
lret
insb
inc
arpl
push
ror
push
das
pop
nop
hlt
call
inc
insb
stos
xchg
mov
sti
cmc
and
inc
jg
xor
mov
mov
mov
fsts
loop
ja
inc
and
dec
push
add
stc
into
xchg
mov
dec
adc
dec
lret
arpl
iret
sti
jo
out
jns
add
mov
mov
xchg
rorl
addr16
lea
ficoms
cmp
out
rcrb
jp
in
lret
fnstsw
in
or
mov
push
mov
mov
cmpsb
int
out
push
jne
fiaddl
jo
out
cmp
stos
roll
fs
xor
fdivrl
enter
push
cmpsl
mov
mov
adc
es
xchg
or
pop
sub
jle
mov
push
pop
scas
in
int
insb
dec
sub
pop
cmpsl
rcl
insl
repnz
sbb
testb
push
pop
popf
add
jo
pop
or
shlb
lods
dec
dec
outsl
mov
das
call
xor
push
xor
popf
inc
adc
in
mov
bound
ds
and
and
mov
sahf
int3
rcll
adc
push
sti
mov
xor
xchg
fdivrl
xor
adcb
mov
sbb
sub
lods
lea
sbb
pop
add
sub
jp
lock
insl
out
dec
inc
jno
movsl
outsl
xor
pushf
inc
stos
mov
xlat
xchg
ret
dec
loopne
imul
sete
push
mov
inc
enter
icebp
sub
out
icebp
push
leave
push
and
test
add
daa
sub
cmp
into
xchg
mov
xor
sbb
or
inc
adc
mul
sub
dec
repnz
icebp
jb
bound
mov
stos
cmc
cmp
sbb
mov
adc
fstps
ret
dec
iret
mov
and
inc
das
and
dec
fcomps
out
lret
insb
adc
inc
add
mov
in
arpl
mov
jmp
push
rcll
pop
nop
mov
ds
jno
jge
and
jg
outsb
lock
mov
enter
outsl
adc
stc
movsb
jmp
shr
std
or
mov
and
int
push
cld
inc
pusha
cmp
roll
cmpsb
cltd
cmc
shrl
jne
loopne
sub
fldt
jb
dec
mov
fnstcw
jb
lcall
aam
adc
mov
mov
mov
sbb
fcomps
sbb
lret
rcll
sbb
nop
mov
lds
clc
iret
cmp
aad
sub
inc
and
sbb
lret
pushf
mov
xchg
pop
adc
fistpl
stos
test
adc
and
jno
bound
int3
cmpsb
push
adc
cmp
cmp
arpl
xor
daa
mov
clc
mov
lea
dec
int3
mov
lcall
lcall
lods
int3
mov
lcall
sub
adc
pop
or
xor
pop
adc
lods
and
clc
das
add
iret
or
inc
shl
or
aad
jo
mov
dec
fsubl
xchg
push
repz
ljmp
inc
js
es
addr16
jnp
cli
mov
xor
daa
push
push
popf
xchg
js
pop
stos
loop
int
push
lret
inc
jno
pop
pop
loop
rorb
cli
push
shlb
in
dec
lcall
sub
icebp
adc
dec
test
pop
add
fisubrl
cmpb
mov
adc
pop
mov
xchg
jecxz
scas
scas
divb
and
pop
cmp
sahf
push
ficomps
hlt
scas
mov
xor
icebp
insl
ret
dec
pop
fisubs
lea
push
adc
sub
aam
leave
enter
jns
pusha
jo
lret
and
lcall
mov
and
pop
mov
insl
push
push
sbb
pop
test
stc
sbb
jmp
int3
cwtl
repz
popa
stos
icebp
ret
in
sub
jecxz
rorb
push
mov
jl
lds
out
stos
int
insl
and
lods
je
test
xor
add
bnd
fstpt
sbb
or
cmp
sub
dec
pop
mov
mov
jmp
push
rorl
xor
enter
imul
mov
fwait
outsb
arpl
ss
xchg
adc
sahf
dec
mov
sbb
mov
mov
lahf
rcrb
sbb
rcr
ljmp
roll
xchg
cwtl
lock
cmpsb
outsl
push
test
mov
nop
pusha
enter
ss
shll
xor
dec
lcall
aam
pop
or
out
sbb
adc
and
jne
inc
mov
dec
sub
or
imul
jmp
or
mov
cli
mov
xor
leave
idivl
notl
pusha
sbb
xor
arpl
sbb
jmp
push
jae
movsb
ljmp
aas
aad
mov
mov
arpl
cmpsb
jns
xchg
loopne
cmp
lods
cltd
push
cli
in
pop
aaa
lods
push
loop
push
mov
addl
aam
mov
lret
adc
xchg
ret
in
dec
loop
adc
push
movsl
mov
cmp
jno
sahf
jae
lds
fstpt
out
adc
adcl
jb
xor
xor
xchg
dec
mov
jbe
or
rcrl
lret
daa
or
jge
cli
mov
mov
out
pop
sbb
ret
or
adc
es
mov
and
inc
loopne
aas
add
mov
ja
add
inc
test
fwait
stc
push
add
mov
jmp
std
data16
sub
inc
ljmp
sbb
sbb
sbb
mov
or
je
mov
aad
xchg
cltd
mov
sar
cmp
iret
adc
xor
xchg
jmp
fcmovb
aas
out
jecxz
mov
push
xor
adc
outsl
call
mov
xor
es
or
pop
lods
imul
outsb
pop
in
xor
push
data16
in
cmp
mov
adc
nop
test
xchg
xchg
sbb
pop
in
and
cmp
jb
out
outsl
and
mov
jb
rorl
cmc
jnp
pop
mov
ror
mov
jnp
dec
sub
inc
push
inc
xchg
iret
ret
mov
sbb
les
loopne
js
inc
addl
pop
or
pop
inc
js
test
int3
or
push
outsl
scas
xor
in
stos
adc
add
ror
insb
mov
inc
xorl
mov
cmp
rcrl
inc
aaa
sti
lea
enter
cmpsb
xlat
fs
xchg
adc
cmp
xchg
xchg
pushf
pop
outsl
dec
sub
fidivrl
mov
adc
rcrl
or
imul
dec
pop
cmp
aad
pop
sbb
add
jmp
dec
sbb
or
sub
int
cwtl
stc
jl
in
lret
and
push
iret
xchg
push
scas
adc
inc
fldt
inc
or
cmp
add
xchg
scas
in
jl
push
add
and
clc
test
out
pop
outsb
pop
out
xchg
cmp
call
shlb
sbb
sbb
mov
iret
jmp
lods
scas
bound
dec
jb
jg
mov
and
into
jp
sub
stc
jp
adc
and
push
les
rol
cmp
push
pop
add
aaa
inc
scas
pop
clc
mov
lcall
and
ljmp
bound
and
sub
dec
sub
call
nop
fmull
xor
loope
xor
fwait
jns
cmpl
mov
pop
sar
push
inc
xor
jb
and
mov
inc
test
insb
imul
loope
fnsave
insb
jno
arpl
shll
pusha
inc
imul
or
sub
push
repnz
mov
mov
out
sbb
and
inc
adc
ljmp
ljmp
fcomp
cs
popa
inc
outsl
es
cmp
xchg
fadd
divl
lea
test
or
stos
pop
cmpsl
mov
mov
pop
insb
in
icebp
data16
dec
jl
clc
jmp
mov
cltd
sbb
xor
mov
pop
loop
pushf
sbb
inc
pop
mov
add
and
scas
mov
mov
xchg
or
shlb
push
jmp
adc
sub
ret
sub
repnz
fadd
loop
ja
mov
push
inc
scas
inc
xchg
loopne
movsb
call
faddl
repnz
ret
aad
scas
daa
leave
cmp
mov
inc
mov
test
mov
testb
arpl
mov
sbb
int
jns
mov
dec
out
movsl
idivl
inc
int3
adc
mov
lods
jo
aad
sbb
sbb
mov
or
addb
mov
repnz
mov
pushf
je
repnz
aam
fs
xor
das
iret
pop
aad
xlat
mov
add
push
imul
je
shll
sbb
popf
jg
loopne
cmp
out
fisttpll
push
push
les
inc
cmc
adcb
cs
push
xchg
add
addr16
test
arpl
ss
mov
fs
test
ja
out
lcall
mov
inc
jge
aad
loop
dec
or
addl
popa
lahf
pop
mov
jmp
roll
and
push
jl,pt
inc
aam
gs
or
inc
shl
lock
adcb
mov
shll
mov
xorl
sub
inc
mov
sbb
push
out
add
or
mov
pop
pusha
mov
mov
xchg
xchg
inc
add
into
mov
daa
dec
mov
sbb
lahf
xor
jecxz
xor
mov
lods
adc
or
push
sahf
mov
shll
loop
xor
lcall
mov
mov
loope
leave
mov
stos
jns
mov
test
mov
xor
mov
xor
dec
and
dec
xor
mov
inc
pop
pop
les
mov
and
pop
push
movaps
nop
int3
dec
mov
sub
outsb
push
mov
pushf
scas
ret
mov
shrb
popf
dec
sbb
cmp
lock
les
dec
rcll
xlat
sub
mov
movhps
inc
inc
xchg
pop
adc
sub
push
pop
xor
dec
in
cmp
sub
and
int3
insl
movb
fucom
pop
fildl
xchg
cld
xor
fldl
pop
out
cmpsl
add
ja
sbb
ja
pop
js
dec
rcrb
push
or
movsl
mov
xchg
xorb
leave
inc
fstps
jp
sbb
lcall
lods
inc
stc
jge
mov
mov
mov
imul
xchg
ret
lods
movsb
loopne
outsl
sub
into
imul
movsl
xlat
lahf
sarl
or
sbb
das
sbb
mov
fsubrp
movsb
jnp
xchg
xchg
fs
aas
mov
bound
xchg
gs
push
cmp
xchg
push
jo
xor
sub
jne,pt
dec
fwait
pushf
test
xor
int
int3
movsl
movsb
sub
jg
lret
jg
aas
out
jbe
lods
add
scas
iret
xor
lods
add
ja
lea
pop
jecxz
lods
mov
and
or
cli
mov
shlb
rolb
idiv
lcall
stos
xchg
sbbl
jle
sub
test
std
jge
sub
mov
lcall
jae
and
xor
adc
std
xor
lods
jae
add
cld
aaa
or
push
mov
jno
stc
mov
lea
cli
xor
pop
popa
aaa
imulb
xor
pop
stos
xor
icebp
and
push
cs
into
les
add
js
mov
cmp
insl
xchg
lea
movsb
mov
outsl
cmp
dec
xchg
and
cmp
popf
pop
cmp
loop
pop
lret
add
inc
decb
mov
inc
adc
jge
ds
adc
cmpsl
jnp
imul
int
push
stos
pop
lea
adc
or
mov
cs
out
xchg
or
wbinvd
and
imul
sbb
out
loopne
sub
push
in
cltd
push
xlat
dec
adc
jecxz
in
iret
stos
sub
xor
fdivs
mov
fidivl
je
jg
lods
xchg
sub
add
mov
outsb
sub
int
cmp
addr16
inc
and
into
sahf
and
repz
into
pop
pop
adc
inc
sbb
push
push
bound
xor
jge
mov
and
pop
xchg
dec
push
sub
pusha
insb
cld
std
jne
es
mov
mov
stos
shl
aam
fwait
push
seto
or
sbb
adc
fnsave
xor
cmpsb
ljmp
jp
dec
test
sbb
xchg
jl
js
and
test
stos
xchg
cmp
add
push
or
add
fs
add
cmp
enter
clc
iret
xor
mov
ret
shll
sbb
loop
iret
xchg
or
iretw
outsl
aas
jne
in
lret
mov
mov
cmp
mov
pop
mov
out
mov
pop
sbb
pop
stos
pop
or
sub
xlat
sti
mov
cmpsl
mov
sbb
pop
aas
movsb
add
fdivrp
push
sub
into
ret
dec
jmp
add
dec
or
sbb
test
mov
test
sbb
jp
cmc
clc
jne
and
adc
data16
jno
sbb
sbb
sahf
mov
adc
shrl
cmc
loopne
lods
dec
push
push
push
out
outsl
or
or
pcmpeqw
or
aaa
aam
outsb
push
lea
sub
xlat
xor
dec
insb
push
scas
int
push
xchg
fistpll
fsubl
les
push
and
cmc
ds
femms
data16
out
inc
mov
in
sbb
int3
push
sub
xchg
xor
lret
add
cmpsb
xchg
sbbb
ljmp
test
sbb
sahf
fldl
mov
adc
insl
fimull
mov
jmp
add
dec
testb
xchg
or
pusha
xor
push
inc
sub
and
in
inc
jmp
mov
gs
hlt
cli
pop
sahf
jge
scas
andb
loope
cmp
test
rorb
in
dec
test
xchg
mov
int
jmp
pop
imul
sahf
cmpsb
pusha
add
push
push
out
scas
jge
mov
inc
jne
xchg
pushf
shll
bound
outsl
adc
xchg
shrb
rolb
or
fwait
clc
mov
cwtl
ds
popa
cmc
int3
ds
leave
dec
pusha
dec
sti
fstps
aad
jns
xlat
jge
out
sub
ficomps
mov
or
pop
and
mov
lods
and
dec
lods
shlb
mov
dec
ljmp
scas
fbld
jmp
jmp
inc
or
shl
stc
pushf
mov
icebp
pushf
push
or
lock
jne
scas
daa
xor
push
or
andl
mov
push
mov
xor
sbb
mov
dec
lcall
pushf
fldt
cmpsb
daa
bound
mov
push
bound
cmpsl
testl
fbstp
daa
aam
out
cld
pop
xor
fwait
popa
push
loop
cmp
insb
in
and
add
pop
cmp
pop
lds
and
pop
loopne
pusha
xchg
jae
lcall
rcrl
ds
jmp
mov
lock
push
sub
adc
jne
pop
and
dec
add
loopne
add
lahf
cmpsl
xchg
sti
stos
inc
scas
or
sti
mov
stc
inc
imul
pop
dec
mov
call
sub
xchg
insb
cmp
test
insl
popa
mov
adc
pushf
xchg
jl
inc
mov
or
push
nop
ds
jle
clc
stc
inc
sbbb
cld
fwait
mov
add
nop
mov
adc
jl
jmp
ret
cmpsl
movsl
movsl
data16
imul
mov
push
call
cmpl
adc
xor
cmp
aad
scas
je
and
jle
push
jl
pusha
test
ja
dec
std
dec
pop
ja
xchg
push
stc
popa
arpl
loop
bound
cld
mov
bound
popl
mov
mov
filds
add
ja
mov
push
pop
mov
or
add
sbbb
or
sbbl
push
jnp
outsb
ds
aad
mov
orb
call
pop
adc
jp
mov
jmp
popf
or
sub
xor
testl
ret
sub
mov
mov
push
mov
out
mov
mov
jne
inc
pop
fwait
iret
iret
mov
cmp
push
jecxz
jge
jle
out
ret
inc
test
jo
addl
loop
pushf
cltd
cmp
jge
adc
nop
js
xor
fisubs
mov
push
cmpsl
out
and
mov
dec
adc
xor
sub
xchg
scas
mov
add
fistps
or
outsl
sub
jne
shll
xchg
call
mov
into
xor
mov
dec
aad
or
push
cwtl
sub
or
push
scas
dec
xchg
aam
and
addl
loopne
std
mov
addr16
popa
pop
or
cmp
jg
inc
dec
push
inc
mov
lahf
arpl
dec
mov
push
rol
xchg
mov
pop
mov
lds
arpl
aam
pusha
popf
shll
es
add
call
mov
mov
mov
or
ljmp
dec
fcompl
hlt
mov
cwtl
pop
jo
cwtl
push
and
sub
test
pop
or
mov
mov
repnz
xor
or
loope
roll
outsb
push
mov
insl
add
xchg
push
pop
ret
pop
fnstsw
pop
dec
fsubs
xchg
fidivrs
push
ja
lret
pop
icebp
out
rcrb
pop
dec
mov
mov
mov
xchg
xchg
call
mov
movsb
or
imul
cmp
mov
test
cmp
mov
cwtl
in
inc
inc
cmp
mov
scas
fildl
jmp
fwait
lods
jb
mov
mov
int
dec
push
pop
add
or
outsl
push
ja
imul
testl
stos
dec
sbb
push
es
pop
out
jnp
xchg
mov
push
bound
push
push
and
add
jnp
mov
stc
lea
pop
outsb
jbe
inc
popa
inc
push
inc
cmp
lret
push
xor
cmp
sub
imul
fcomip
aas
add
cld
xchg
mov
scas
push
xor
mov
and
inc
cmp
stos
fnstsw
dec
dec
pop
adc
xchg
addr16
arpl
out
mov
dec
in
aaa
mov
out
call
pop
jp
mov
mov
mov
dec
jno
jnp
stc
clc
fbstp
cmp
jmp
jb,pt
add
ror
fistpl
and
cwtl
inc
out
in
jmp
or
movsl
shlb
mov
push
or
std
mull
and
mov
aam
lahf
jb
cmpsl
test
jl
jns
dec
mov
insb
cld
xor
dec
push
test
jo
loop
mov
outsl
xchg
ret
shlb
scas
repz
push
fdivs
xor
jl
in
orb
shll
loopne
roll
loopne
mov
stos
or
xor
into
jne
xchg
xchg
jne
stos
scas
mov
inc
sbb
mov
test
insb
push
stc
mov
cmpsb
jbe
mov
dec
aas
hlt
cli
inc
data16
loop
cli
sub
xor
in
xor
mov
xor
les
pusha
inc
cmpb
into
mov
or
pop
lahf
adc
fdivs
in
xchg
or
iret
mov
cmp
xchg
xchg
push
cld
iret
mov
inc
cmpsl
xlat
call
dec
loopne
xchg
xorb
push
test
adc
movsb
dec
in
addr16
int3
mov
or
arpl
cmp
jmp
lret
js
dec
shr
js
std
mov
sub
lds
mov
push
sub
xor
inc
xlat
movsb
ljmp
testb
adc
mov
xor
arpl
push
mov
cmp
nop
fnstenv
lock
dec
jmp
sbb
bound
hlt
xchg
push
or
shrl
push
mov
mov
sahf
adc
mov
push
pop
cmp
loope
aas
sub
jbe
into
mov
sbb
jae
mov
xor
mov
in
dec
jle
inc
scas
cld
test
inc
into
andl
stos
and
jp
xchg
ss
sub
pop
inc
mov
sbb
jg
sarb
add
lock
pop
or
pop
rcrb
cltd
inc
fstl
lcall
aas
dec
sbb
movsb
jb
loopne
and
rol
and
or
sub
xchg
les
test
ficoms
mov
adc
scas
inc
push
test
inc
int
xchg
pushf
and
jp
xchg
push
icebp
in
pop
aam
pop
aam
insb
xchg
sbbb
add
pop
out
movb
jae
das
and
int
stos
in
call
adc
jmp
pop
sbb
shll
add
lods
lahf
inc
adc
cmc
push
es
inc
lock
and
stc
dec
lret
mov
out
js
fstps
mov
test
mov
mov
outsb
icebp
inc
cwtl
or
pop
mov
out
mov
cmpsb
leave
andb
cwtl
sub
stc
mov
adc
adc
sub
push
imul
adc
icebp
arpl
sbb
mov
sbb
pusha
fwait
imulb
push
je
lods
jb
flds
ficomps
lret
xor
data16
add
or
mov
dec
mov
dec
mov
mov
pop
lahf
loopne
int
sarl
inc
and
pop
jbe
and
movsl
sub
pop
pop
inc
mov
pop
dec
popa
and
sub
cmpsb
dec
cwtl
xchg
sbb
mov
adc
int3
adc
test
es
cmp
arpl
xor
xchg
push
int3
and
in
int3
stos
mov
inc
and
inc
add
movsl
adc
cmp
mov
dec
stos
hlt
fldt
sbb
and
xor
dec
xor
scas
pop
pop
push
inc
dec
gs
sub
mov
loope
shll
jno
lcall
in
jg
sbb
jb
add
rorb
mov
xchg
das
jl
in
and
inc
mov
lods
dec
lret
pop
mov
scas
sub
pop
push
adc
lods
mov
adc
xchg
mov
aam
mov
jp
or
insb
push
fnstsw
inc
pop
sub
mov
pusha
pushf
inc
xor
mov
rcrb
xchg
mov
mov
jae
hlt
mov
jbe
or
sbb
mov
fucom
movsl
imul
cmp
inc
mov
xchg
mov
test
mov
fists
je
popa
jge
xchg
gs
pushf
xor
fcomps
cmp
xor
or
and
es
sbb
or
pop
mov
jno
push
pop
arpl
jb
inc
and
mov
jecxz
stos
sub
ljmp
mov
xchg
mov
add
faddl
rolb
enter
call
fdiv
aaa
xchg
and
dec
lods
jle
push
insb
jae
fcoms
addr16
jno
cs
xlat
int
jmp
mov
es
jne
dec
xchg
sbb
cmp
rcrb
scas
repz
sub
xlat
push
sti
jno
mov
xor
out
mov
pop
inc
inc
lcall
push
push
addr16
mov
popa
jmp
mov
xor
mov
inc
fwait
jb
repnz
mov
fucomi
ds
test
dec
loopne
mov
sbb
cs
sbb
lock
inc
xor
dec
inc
sub
jmp
stos
or
stos
js
pusha
push
lods
mov
in
sbb
jmp
sub
data16
cmp
mov
arpl
inc
push
jl
dec
mov
mov
mov
xchg
test
cmpsb
dec
ret
xor
lock
ss
jnp
enter
pop
dec
push
std
mov
in
add
xor
push
sbb
inc
fcom
fnsetpm(287
ror
imul
dec
pop
lret
push
inc
fisubl
mov
dec
jnp
mov
jecxz
dec
int
aam
inc
lds
ret
xadd
shlb
adc
lods
insb
adc
inc
and
sti
aam
sbb
pop
cli
sub
cmp
and
lahf
mov
int3
repnz
push
cmp
aaa
sub
push
outsl
jno
insl
sbb
adc
test
jl
xor
jnp
and
ficoml
and
repz
jns
dec
sbbl
sbb
jo
cltd
es
adc
mov
std
mov
test
test
push
test
pop
dec
ficomps
adc
cmp
xchg
clc
insl
out
adc
cld
mov
ljmp
mov
bsr
rcr
xabort
xchg
and
leave
and
stc
ljmp
jmp
and
js
sbb
push
jns
outsb
sti
mov
dec
into
dec
mov
mov
lock
flds
jmp
sub
mov
and
pushf
cs
sub
ds
xchg
or
insl
testl
adc
xor
mov
je
int
std
push
or
sub
jecxz
call
dec
push
inc
jne
add
jge
or
and
pop
sahf
sub
mov
mov
loop
jl
or
or
movsl
mov
out
mov
test
xchg
xor
jp
les
ds
push
into
arpl
pop
pop
xor
fcmovnbe
inc
sarl
popa
ds
mov
stos
push
push
movsb
lahf
mov
test
inc
xchg
push
and
imul
add
cltd
add
lds
push
lods
lea
xchg
inc
inc
test
adc
cmp
in
sub
jae
sub
iret
repz
je
lea
xorb
xchg
sub
pop
mov
icebp
enter
add
dec
repz
push
mov
scas
and
xor
inc
lret
push
mov
in
lcall
cmc
dec
mov
ficomps
outsl
dec
mov
mov
mov
mov
subl
xor
add
scas
mov
ds
mov
andl
lret
pop
std
leave
pop
mov
mov
and
ds
sahf
and
arpl
paddsw
out
mov
sub
cmpsb
jne
jl
popf
lock
and
cmp
ret
lods
pusha
push
leave
pop
mov
jl
je
xor
cwtl
push
and
dec
lret
rclb
xor
inc
outsb
mov
or
iret
xor
jge
jge
out
cmpsb
cmp
jo
or
mov
call
push
mov
jecxz
dec
movsb
test
xchg
out
inc
push
cltd
mov
cli
or
ja
insb
sub
jne
outsl
jbe
dec
pop
push
inc
out
mov
dec
popa
fstpt
subl
mov
aam
sub
cmp
inc
xor
dec
or
push
pop
gs
mov
orb
sarl
push
jnp
loop
or
sub
or
inc
pop
sbb
movsl
hlt
and
xchg
push
aas
rclb
push
mov
xchg
mov
mov
test
aaa
pop
hlt
cmp
data16
es
hlt
xchg
into
das
or
add
das
dec
jne
mov
mov
jl
rcll
jb
dec
js
jns
sahf
xor
lahf
push
into
icebp
out
jmp
xchg
rorl
stos
movsl
lahf
andb
cwtl
sbbl
adc
xchg
pop
mov
bnd
cli
and
mov
aas
pushf
adc
or
mov
aas
adcb
push
mov
inc
push
cmp
cltd
adc
out
shr
push
xor
icebp
cmpsl
outsl
sahf
ror
stos
adc
cltd
daa
pusha
xor
hlt
scas
pop
inc
and
fs
lds
gs
lret
pop
or
fstpt
cmp
xchg
mov
cmp
int3
cmpsb
or
mov
mov
iret
lahf
scas
inc
shrb
jl
and
and
or
ljmp
sub
repz
std
jae
int
mov
add
add
sub
outsb
or
pop
pop
inc
sub
mov
jle
shrl
dec
add
outsb
jl
adc
sbb
not
jg
scas
mov
test
jmp
or
rcrl
lcall
xor
insl
jge
adc
jne
and
push
shll
outsb
shlb
adc
push
sbb
cs
inc
cmp
sbbb
jmp
sbb
jmp
imul
cli
sarl
aaa
mov
inc
xchg
push
xor
adc
iret
sahf
fwait
loop
es
adc
add
sbb
sub
lods
das
je
fbstp
xor
pop
add
xor
jmp
fcompl
stos
addl
mov
xchg
pop
ror
ja
pop
add
insb
test
add
or
push
ds
add
or
inc
shl
nop
data16
push
sahf
mov
into
dec
fnstsw
dec
es
adc
mov
mov
sbb
sbb
add
int
and
add
push
jle
jecxz
les
inc
pushf
pop
mov
jle
in
js
sub
sti
pusha
insl
inc
cltd
test
jo
addr16
fwait
inc
in
dec
sbb
popf
jg
mov
pushf
pop
xchg
jne
fdivrs
push
lods
leave
and
jle
imul
imul
jp
test
orl
in
push
add
inc
mov
push
push
pop
addr16
gs
add
rcll
fxch
iret
or
pop
filds
inc
int
lods
loope
mov
fmulp
xchg
es
jns
xchg
out
jnp
dec
cmp
and
sbb
scas
iret
cmp
aas
mov
stos
and
jle
add
fmuls
sti
mov
cmp
add
inc
mov
bound
aas
xchg
mov
cmp
inc
cltd
ficoms
adc
mov
por
mov
fcoms
call
mov
mov
mov
sub
sbbb
shr
fwait
xor
sbb
cld
cmp
aad
int
lret
push
add
ljmp
popa
sbb
movsb
fsubl
popf
out
push
mov
aaa
sub
mov
les
pop
sub
out
adc
or
loope
aas
or
adc
add
ret
loope
pop
test
push
lea
or
mov
mov
repnz
divb
pop
sbb
outsb
aad
iret
lret
fptan
into
int3
fwait
sbb
xchg
fwait
or
addb
cmp
bound
das
jle
dec
ja
xchg
lds
jno
mov
stos
aaa
mov
or
nop
aad
jae
xchg
add
pop
sti
add
je
inc
add
pop
sub
xchg
adc
pop
cmp
dec
bnd
gs
xor
das
into
mov
push
call
mov
mov
adc
mov
xor
jl
pop
in
loop
add
sub
test
lods
iret
outsl
popa
aaa
aad
mov
push
cmp
inc
shll
inc
lret
push
js,pn
jle
inc
pop
lahf
cld
jbe
cli
push
xchg
xchg
dec
adc
inc
psubb
mov
sarb
fsubr
negl
mov
int
inc
rcr
sub
mov
mov
inc
int3
pop
aam
test
cmp
cltd
popa
cmp
mov
loope
scas
repnz
jmp
jmp
in
das
fcoml
in
fidivl
icebp
mov
xchg
frstor
pop
inc
mov
and
sub
pop
or
push
fildl
lock
mov
or
movsl
lock
adcb
adc
es
add
adcb
loope
push
gs
push
lea
xchg
adc
cli
jnp
shlw
jp
ret
sbb
iret
mov
fmulp
xor
and
gs
dec
test
inc
xchg
xor
dec
fiaddl
xor
adc
rcr
mov
push
std
sarb
cld
icebp
into
jbe
mov
push
in
xor
in
fisttpl
add
inc
mov
push
cmp
scas
shlb
inc
jmp
adc
test
mov
push
cmp
or
orb
outsb
fs
xor
mov
and
daa
ror
out
jo
ret
mov
mov
nop
pop
lds
loop
mov
mov
cmp
ret
dec
sub
sub
mov
mov
fcoms
or
push
jecxz
stc
clc
or
jg
daa
xor
bound
imul
int
loopne
pop
mov
stos
mov
lods
pop
adc
mov
negb
sbb
push
lret
sub
dec
dec
test
push
negb
and
cld
pop
nop
jmp
aaa
add
xor
leave
in
sbb
test
clc
adc
pop
clc
jge
add
sarb
mov
cld
in
fucomi
push
int3
insb
cmp
daa
jecxz
jge
iret
mov
inc
stos
pop
repnz
fbstp
shlb
int3
fadd
nop
cli
call
outsb
adcb
xor
push
movsl
or
ljmp
sub
mov
stos
jbe
xchg
add
push
mov
mov
ja
movb
les
and
sub
push
test
xchg
clc
add
inc
adc
or
imul
xchg
in
xor
imul
cld
psrlq
les
pop
shl
push
and
in
mov
and
push
test
cwtd
xchg
test
jmp
push
dec
movsl
lds
or
repz
insl
aad
shlb
push
bound
jo
out
xchg
fmull
pop
push
sbbl
rcrl
daa
popa
ret
xor
iret
mov
xrelease
je
cmp
pop
in
addb
or
sbb
sbb
sbb
add
pop
mov
out
jno
or
in
cltd
and
fdivrp
inc
std
inc
out
or
fwait
sub
pop
add
add
aas
xor
int
sbb
das
nop
lahf
sbb
mov
jle
cs
pop
push
cs
lods
imul
inc
cmpsl
push
fwait
pushf
pop
sbb
decl
sub
enter
push
loopne
cmp
mov
out
xchg
andl
xor
fadds
out
pop
test
or
xor
dec
ss
add
inc
mov
xchg
mov
icebp
dec
sbb
cmp
dec
or
imul
scas
leave
popa
and
xchg
lahf
dec
mov
out
mov
enter
imul
xlat
sub
or
and
jb
jns
xchg
jnp
aad
push
mov
push
adc
sbb
out
data16
stos
ja
xchg
mov
or
adc
pop
cmp
test
push
and
in
or
cmp
shrb
icebp
dec
push
jle
stos
lcall
call
lcall
adc
insb
push
mov
in
leave
and
shrl
mov
subb
mov
add
dec
sbb
mov
shlb
test
mov
lret
push
mov
lods
push
dec
mov
cltd
out
inc
icebp
repnz
fisubl
mov
paddsw
sbbl
icebp
lods
sbb
dec
cmp
adc
mov
sub
psubb
inc
dec
xor
mov
fstps
mov
repnz
aas
mov
pop
lea
sbb
mov
dec
cmc
popf
lret
mov
addl
sub
add
sub
rcrl
mov
mov
das
inc
jecxz
shlb
fdivs
out
and
aaa
push
pop
popa
dec
clc
arpl
cmc
cld
add
mov
addl
and
int3
es
pusha
and
test
loopne
imul
fucomp
fldl
out
frstor
mov
in
dec
sbb
xchg
sbb
jbe
mov
call
pop
adc
movsl
cmp
mov
stc
adc
pop
xor
insl
mov
add
int3
jo
and
pop
lret
test
jns
fnstsw
pop
lahf
mov
loope
push
inc
bound
mov
inc
inc
sub
js
pop
add
jg
test
cmp
inc
movsb
ja
sahf
popa
loope
dec
lock
inc
out
in
sbb
div
inc
in
ljmp
xor
cmp
les
jmp
movsb
fisubrs
sub
loopne
add
sbb
repnz
ficomps
out
xorps
cmpsb
push
cmp
push
mov
add
in
into
cltd
jns
bound
into
push
incl
sub
aam
inc
adc
and
fs
inc
push
shr
jmp
ljmp
or
xchg
cli
ror
sbb
mov
hlt
add
test
imul
dec
rol
xchg
ljmp
lahf
in
mov
jae
mov
push
mov
add
mov
out
push
rolb
sub
ret
les
adc
mov
xchg
push
cli
dec
push
sbb
out
push
and
sub
ffree
sbbl
xchg
xor
lahf
shlb
bound
ljmp
sbb
mov
ds
adc
into
loope
test
int
cmp
jecxz
ss
dec
push
fs
imul
and
jecxz
lods
pop
test
das
adc
adc
ljmp
test
sahf
nop
fwait
mov
xchg
or
cwtl
mov
addl
ljmp
jno
out
sbb
inc
xchg
cltd
enter
test
sarb
scas
mov
inc
fsubrs
and
fmull
xor
sbb
sub
dec
sti
jae
in
mov
mov
imul
and
ficomps
adc
pop
push
sbb
mov
arpl
push
aad
sbb
push
ret
std
shrl
push
iret
inc
pop
jg
xchg
jge
dec
mov
fbld
scas
aas
fildll
adc
jbe
call
xchg
cld
push
fs
add
cmp
xchg
mov
outsl
and
icebp
mov
xor
or
xchg
dec
leave
pop
jmp
aam
and
sbbb
test
popa
rorb
xor
jno
push
out
mov
je
ljmp
push
inc
push
iret
mov
mov
dec
pushf
sbb
mov
mov
test
das
arpl
cmc
push
dec
push
aas
jo
mov
nop
mov
jno
movsl
call
xchg
cld
add
test
cmc
lahf
jo
lds
push
int3
fwait
adc
scas
pop
stos
jecxz
in
ds
adc
xlat
mov
es
sub
dec
inc
fadds
cmp
fisubl
fcoml
dec
push
cmp
dec
iret
inc
inc
sub
outsl
js
sbb
sbb
lea
ljmp
fmulp
cmp
rorl
jl
out
or
dec
sti
in
lds
push
pop
jns
push
adc
add
test
push
fwait
sub
das
mov
pop
or
je
jle
pop
pop
pop
lret
scas
mov
ret
xchg
mov
repnz
lods
mov
mov
pop
int
lahf
cmpsb
int
fs
out
scas
fidivs
out
in
loopne
mov
inc
fwait
not
xor
lods
into
fidivrl
out
mov
or
push
dec
data16
and
fcomip
or
in
pop
cwtl
pushf
lret
insl
enter
mov
add
jno
sub
push
adc
js
ja
test
push
sbb
in
jnp
pop
lahf
push
push
fs
xchg
das
adc
jb
ja
stos
mov
ljmp
adc
std
inc
int3
subb
test
inc
je
dec
repnz
and
fstl
ret
neg
xor
lods
mov
mov
xor
jns
cmpsb
aaa
cmp
adc
push
mov
jmp
int3
lcall
int
imul
adc
in
mov
stos
or
dec
addl
loope
and
into
orl
sbb
icebp
int
cs
add
test
mov
lret
xchg
xchg
xchg
pop
push
lret
sti
sbb
faddl
or
cltd
imul
dec
fs
sahf
inc
fidivl
shll
jg
adc
adcb
add
fisttps
inc
sbbb
pusha
inc
test
ffreep
pop
add
cmp
mov
insb
sbb
mov
jno
xor
xchg
outsl
outsl
arpl
push
es
cmp
nop
dec
adc
push
fucom
lahf
mov
push
outsb
and
mov
adc
enter
popf
fldenv
mov
xchg
inc
lods
cmp
push
and
call
mov
xchg
mov
test
inc
or
lea
cltd
inc
mov
mov
fisttpll
rcrb
cmp
andb
mov
lret
inc
std
mov
mov
aad
xorb
pop
je
jo
les
xchg
sbb
sbb
or
inc
fs
cmc
jne
insl
xor
sarb
negb
sbb
in
fiaddl
jnp
fisttps
jbe
xchg
pop
dec
jno
int
gs
pop
push
mov
out
push
sbb
xchg
cmp
mov
jle
test
jl
clc
mov
push
dec
or
xor
cmpsb
nop
sub
roll
fucomi
shlb
push
andb
js
lods
in
lret
lock
mov
cmc
sti
dec
jmp
fdivl
xor
notb
mov
ljmp
daa
subl
pop
mov
jmp
enter
inc
arpl
jne
in
push
outsb
mov
int3
pop
fcmovbe
push
mov
in
mov
mov
out
in
popa
fsubrs
or
ja
jns
inc
dec
mov
faddl
inc
mov
mov
jno
scas
leave
jno
xchg
ds
loopne
enter
mov
push
mov
jb
jno
xor
jne
std
testb
jae
push
jno
push
gs
add
xchg
cwtl
iret
jecxz
mov
ds
pop
or
cmp
ljmp
adc
push
cmp
arpl
rorl
adcl
adc
pop
mov
push
in
call
cmc
aaa
pop
rcll
or
inc
add
inc
in
xchg
mov
mov
mov
hlt
pop
ljmp
mov
and
sbb
test
ss
cs
pop
enter
test
dec
push
pop
ljmp
mov
xor
mov
std
pop
dec
sahf
push
inc
mov
xlat
loopne
popf
outsl
cwtl
movsb
adc
mov
xor
adcb
rolb
popa
sbb
out
xchg
mov
stos
addr16
add
sub
shlb
xor
rclb
fcoms
add
in
mov
xlat
mov
ljmp
shll
mov
or
jecxz
inc
xlat
mov
inc
call
sbb
sar
test
shr
loopne
dec
push
jbe
xchg
cs
faddl
xchg
mov
loop
inc
push
dec
insb
cmp
push
sbb
cmp
sbb
add
cs
jne
les
jno
mov
pop
stc
clc
inc
xlat
movsb
and
int3
ret
lret
leave
iret
push
dec
xchg
mov
lahf
clc
in
mov
addr16
scas
imul
inc
pop
mov
sub
or
cmp
bound
sub
movsb
ljmp
or
mov
imul
ljmp
push
and
ja
lcall
pop
dec
pop
sub
push
aad
out
xor
enter
push
inc
cmc
loope
stos
pop
xchg
or
pop
jge
fidivrl
lcall
xchg
jge
pop
js
aad
jbe
and
jne
xchg
rolb
imul
cmp
test
bound
mov
and
mov
sub
push
test
mov
scas
cmp
push
pand
mov
lock
leave
data16
sbb
pop
enter
pop
or
inc
xor
sub
test
jecxz
push
jns
mov
and
adc
mov
lret
xchg
xor
pop
dec
adc
dec
dec
aad
sar
xchg
dec
inc
add
fldt
xor
cwtl
inc
dec
cmp
xor
mov
push
mov
mov
dec
mov
pop
cmp
scas
mov
push
sbb
les
mov
push
push
or
insb
out
std
aam
repnz
ret
or
sbb
jg
fsubl
ret
test
mov
adc
cwtl
inc
mov
je
inc
divl
arpl
clc
cs
movsl
rorl
sbb
or
test
jmp
cmpsl
lods
xchg
in
mov
dec
jmp
cli
push
aad
int3
loop
pop
out
pop
scas
decb
and
loope
add
out
sbb
mov
mov
mov
leave
mov
bound
ret
ljmp
xor
stc
xchg
lcall
test
add
clc
mov
popf
inc
push
pop
imul
add
shrl
lods
call
cmp
xchg
sub
add
cmpb
jmp
movsl
push
xchg
inc
cmp
jae
cmp
push
push
insb
push
dec
fiaddl
mov
dec
adc
mov
roll
jo
push
or
sbb
pop
enter
pop
pusha
jo
pop
push
std
repnz
lds
loop
lods
loop
dec
pop
pop
test
push
dec
xchg
sub
cmp
push
add
or
push
pop
test
adc
sbb
inc
push
mov
push
add
lcall
into
cld
clc
fcoms
push
sbb
pop
sub
or
icebp
addr16
bound
mov
int3
ja
xchg
stos
add
dec
popa
aas
fbstp
pop
sbb
push
jle
push
inc
pop
push
out
or
mov
cmpsb
dec
jge
dec
mov
fildll
sub
pop
mov
sub
xor
scas
sbb
aaa
js
std
and
movsb
dec
xchg
and
push
iretw
cmp
cmc
cld
rcr
push
dec
nop
adc
sbb
sbb
dec
data16
rcrb
jg
push
sub
bound
ret
inc
xor
fisubs
mov
out
push
cmp
jmp
mov
sbb
lds
cmc
hlt
push
xchg
popf
cwtl
xchg
cmp
jnp
data16
and
lret
subb
mov
jo
pop
xor
jmp
push
outsl
mov
rcrl
subl
mov
lret
addr16
aaa
lcall
xchg
mov
xor
ja
and
out
dec
jmp
lcall
inc
mov
cwtl
xchg
push
xor
scas
adc
mov
pop
cmp
adc
pop
icebp
sbb
mov
rclb
adc
xchg
jae
cmp
outsb
pop
in
dec
call
pop
jno
mov
rol
sahf
out
cmc
shrl
push
mov
int
sbb
xor
and
push
pop
pop
push
or
xchg
dec
pushf
pop
fs
aam
out
push
adc
into
push
ja
cld
inc
mov
ret
addl
xchg
enter
xor
and
mov
imul
cmpsb
cmc
lret
mov
das
test
bnd
int3
roll
mov
xchg
sbb
stos
cmpsb
ret
fistl
xor
or
or
push
sbb
dec
add
iret
or
iret
push
cmc
inc
push
add
sbb
sahf
std
sbb
adc
lock
mov
push
adc
push
lahf
loope
sub
sub
mov
dec
jle
cmp
mov
cmpsl
bound
mov
in
sbbb
mov
rcr
js
loop
clc
test
xor
mov
xchg
aas
jg
scas
pushf
lea
or
xchg
fcmovnb
leave
sub
sbb
xchg
dec
fsubrs
mov
xchg
mov
std
sub
fs
jecxz,pt
xchg
push
int3
nop
lret
jge
dec
nop
mov
xor
into
xchg
fwait
pop
push
imul
int
pushf
out
lret
xchg
test
gs
mov
rorb
xchg
popa
and
stos
cwtl
pop
outsl
mov
push
inc
daa
adc
in
scas
shl
mov
scas
mov
mov
lret
inc
in
inc
aaa
out
hlt
inc
or
addr16
fildl
jg
incb
shll
add
dec
repnz
jl
or
sub
movsl
cwtl
ss
test
jno
fsubl
out
aaa
cwtl
cmpsb
sub
or
scas
xor
pop
push
mov
pop
nop
lods
inc
add
pop
cmp
xchg
add
jle
inc
das
pop
and
fdivr
cltd
push
mov
sbb
xor
test
bound
cmp
lods
fisubrl
out
cltd
enter
mov
xor
mov
pop
lods
iret
add
rolb
shrl
or
pusha
pop
fnstenv
test
fs
lret
and
das
pop
pop
or
aas
jmp
add
flds
mov
mov
push
jl
sub
jne
inc
ss
pusha
push
adc
leave
xor
pop
scas
scas
std
lock
repz
xlat
jge
dec
rorb
cmp
sub
mov
or
pop
or
cli
jne
push
clc
cwtl
fadd
cmpsb
nop
jo
add
pop
enter
pop
lcall
ljmp
jle
ret
jl
and
lds
sahf
dec
stos
sbb
fs
cmp
clc
rol
sub
jb
pop
push
movsb
negl
mov
dec
mov
xor
dec
or
jbe
jno
lret
dec
mov
mov
es
out
rolb
mov
jo
push
jp
iret
in
xchg
in
into
mov
es
std
je
sub
dec
push
push
int
and
jo
cmpsb
cmp
mov
pop
add
sti
ljmp
xchg
xor
neg
lock
pusha
sub
nop
popa
insb
nop
dec
rcrb
repnz
in
sub
cmpsl
mov
je
xchg
add
test
ficoms
mov
dec
aas
repz
inc
icebp
inc
lods
dec
jge
loop
test
stos
scas
fldl
jmp
cwtl
dec
xchg
cmp
add
sbb
xor
enter
mov
ljmp
into
cmp
sbb
clc
ret
out
sti
push
push
or
pop
sub
mov
cwtl
sbb
xchg
cmp
pop
cltd
aaa
fwait
pushf
imul
jmp
push
stos
mov
jns
loope
imul
ss
cmp
in
punpckhdq
xor
adc
cs
leave
inc
adc
jmp
jmp
xor
in
push
cmpsb
jge
push
push
jae
insb
aaa
hlt
aad
repnz
les
xor
in
mov
cmpsl
xchg
dec
cmp
aad
out
scas
cmp
adc
fs
mov
or
in
add
cltd
mov
or
inc
sahf
xlat
sub
sub
call
dec
loop
cmp
int3
scas
fldt
pop
xchg
lds
rorb
std
lods
push
mov
jle
add
arpl
push
stos
insb
mov
ss
or
pop
das
test
mov
and
cmc
mov
lahf
addb
xor
addr16
aas
popa
jle,pt
pop
mov
adc
adc
inc
rcrb
or
fdivrs
rorl
fwait
sub
xor
xor
fwait
add
das
and
mov
ja
jne
mov
data16
popa
pop
shll
std
dec
sahf
jecxz
pop
shlb
jg
jmp
mov
and
repz
stc
sub
mov
in
movsl
call
inc
push
mov
sub
mov
sbb
push
iret
mov
ficompl
out
imulb
test
stos
cs
push
jecxz
ret
jle
mov
inc
imul
jmp
inc
xchg
dec
leave
in
loope
ss
or
addl
xchg
cmpl
mov
jp
dec
or
jns
insl
dec
xor
ds
fsubrp
fwait
int
push
mov
ja
cmpsl
sub
adc
sbb
out
stos
cli
sub
pop
pop
inc
repz
cmp
aas
xor
add
imul
test
add
clc
mov
push
shrb
in
push
or
out
pop
push
inc
add
xor
iret
pop
shlw
xchg
insl
mov
popa
arpl
inc
xchg
sbb
aas
inc
sub
insb
or
shlb
adc
loopne
out
pop
and
cmp
movsb
test
in
sub
pusha
decl
adcl
jp
mov
daa
adc
icebp
push
test
bound
bound
lret
xchg
push
cmp
mov
cld
arpl
int3
mov
and
stos
outsl
ljmp
pop
test
or
cltd
cli
xor
cwtl
ja
movsl
popl
dec
xchg
imul
scas
or
sub
stos
dec
out
sub
ficoml
mov
sbb
dec
sahf
lret
shrb
cmp
mov
call
sub
cmp
icebp
push
inc
xchg
loopne
fidivl
in
fs
mov
scas
dec
xchg
rcrb
aad
iret
xchg
ret
fst
adc
jg
pop
data16
into
cmpsb
fisttps
push
lret
lock
cltd
cmp
adc
in
xor
pop
adc
fistpl
xor
repnz
fisttps
mov
fsubrs
and
mov
iret
and
daa
outsl
popf
insl
lcall
inc
sbb
std
mov
sub
inc
in
fcmove
sbb
cmp
std
sub
mov
hlt
iret
mov
xchg
cltd
dec
push
inc
jb,pn
test
push
cmp
cltd
mov
ret
jmp
or
jae
sub
jae
movsl
jmp
jle
pop
push
movsl
jge
pusha
pushf
dec
mov
mov
fdivr
mov
out
bound
xchg
int
pop
dec
test
inc
xor
test
test
cmp
push
mov
ss
jp
push
ja
pop
into
jnp
jg
lahf
adc
xchg
idiv
pop
std
cwtl
std
cmc
dec
sub
out
mov
lods
bound
jbe
in
or
les
insb
jbe
sahf
inc
std
cmp
out
mov
xor
inc
bound
mov
push
hlt
cmc
loop
pop
mov
push
mov
repz
pop
sbbb
repz
adc
movsl
in
pop
jge,pn
data16
push
sub
fcomps
cmp
mov
sub
in
jnp
mov
cmpsl
xchg
mov
pop
inc
les
adc
xchg
movsl
das
cmp
add
inc
les
push
das
movsb
mov
jp
or
jnp
mov
lcall
add
cmp
and
add
jle
or
sub
sbb
pop
add
push
aam
or
sub
lods
repnz
fdivrp
sbb
jae
cmp
sub
clc
insl
mov
int
and
pop
movsb
pop
test
inc
mov
dec
pop
and
fdivl
sbb
fsubrl
mov
out
jl
bound
pop
shll
xchg
sbb
mov
cltd
or
test
mov
cmpsb
jbe
popa
sarb
ja
push
lcall
in
mov
lahf
icebp
adc
mov
push
cwtl
mov
loop
rorb
mov
outsb
in
ret
mov
cli
stos
repnz
sbb
out
mov
inc
jbe
inc
cmpb
adc
ret
push
xor
ret
sub
outsl
adc
cmpsb
stos
cmp
add
xchg
arpl
stc
cwtl
cld
shrl
scas
adc
mov
imull
push
mov
push
popa
pop
mov
in
int3
dec
cmp
mov
popf
out
jl
sbb
mov
mov
popa
rcrb
mov
pop
and
push
lock
or
mov
mov
orl
adc
add
out
ljmp
insl
imulb
sub
pop
sbb
test
pop
test
jecxz
cmp
adc
mov
xor
xlat
test
jmp
xchg
inc
movsb
fs
fwait
add
xorl
test
sbb
mov
sbb
and
adc
cli
mov
ja
or
add
mov
fldl
pop
xchg
sub
and
cmc
sub
je
jns
ljmp
mov
cmp
imul
cmp
cmc
add
es
pop
test
push
add
xor
ret
repz
dec
pop
pop
stos
insl
cld
sub
insl
mov
in
cs
add
lock
leave
jmp
or
cmp
jmp
and
inc
and
mov
mov
xor
jmp
and
jo
mov
lock
notb
mov
cmp
jo
es
popa
fstl
xor
ds
imull
xchg
add
jo
inc
lahf
bound
nop
dec
add
mov
outsl
into
fcmovnb
stos
mov
inc
mov
ljmp
xchg
adcb
testl
xchg
notb
andl
xlat
cmp
out
jnp
adc
jae
sbb
cmp
out
call
mov
scas
int
cmc
jmp
cltd
add
add
sub
call
and
cmp
enter
mov
ds
divl
xchg
outsl
xchg
mov
push
loop
jae
popa
mov
ds
jno
xor
jne
inc
aam
js
sti
mov
inc
inc
out
loop
aaa
popa
adc
xor
pop
popf
pushf
call
pop
xchg
hlt
mov
and
adc
push
sbb
pushf
pop
mov
rcrb
scas
sbb
or
lahf
repnz
fwait
movsb
adc
pushf
ret
cmp
mov
fstpt
imul
jno
in
call
xlat
jbe
add
fsts
xor
adc
mov
pop
sarb
or
cwtl
scas
adc
mov
gs
pusha
push
sub
xor
shll
loope
movsb
mov
lods
sarb
xor
or
xor
mov
adc
inc
lds
fiadds
lea
mov
stc
es
and
inc
mov
lods
scas
add
push
jp
mov
xchg
in
dec
dec
cmp
into
jl
mov
or
mov
dec
jp
pop
out
sub
cmp
mov
sub
mov
adc
repz
inc
mov
xor
xor
pusha
pop
sti
ret
push
fldcw
cmpsb
push
js
loop
out
fadd
adc
mov
adc
jns
or
mov
aam
icebp
imul
sub
pusha
fidivrs
test
inc
shr
jg
cmp
pop
lret
mov
out
filds
pop
shll
mov
mov
fidivs
and
mov
pop
xor
or
adc
add
sub
or
mov
lods
and
cmp
pop
jb
repnz
test
and
cmovnp
outsl
in
add
dec
or
jne
and
xchg
ror
xor
jg
rcr
mov
xor
jg
cmp
mov
inc
jl
movq
inc
aas
push
test
lods
rclb
pop
shll
dec
xor
movsl
pop
mov
dec
in
push
aad
fcmovnu
cmpb
ret
lahf
in
mov
flds
adc
sbb
bound
sub
inc
dec
adc
mov
lret
lds
and
and
jno
push
pushf
cmpsb
clc
sub
into
hlt
or
fstl
push
in
movsl
mov
stos
inc
pop
mov
loope
add
dec
movsl
hlt
stos
jne
shlb
mov
jnp
xchg
inc
dec
ret
popa
pop
jle
adc
js
ljmp
mov
pop
call
inc
mov
or
repz
subb
push
popf
jb
stos
rcrb
xchg
arpl
divb
inc
nop
adc
cli
adcl
sbb
add
into
pop
pop
es
ss
into
js
inc
pop
setl
inc
add
xor
mov
adc
adc
adc
xchg
rorb
jnp
outsb
call
cwtl
inc
cwtl
sbb
sub
or
jmp
insl
mov
dec
and
shlb
pop
add
sub
iret
mov
and
push
mov
dec
xor
inc
lcall
sub
xor
stos
cwtl
lea
jno
das
int3
sahf
ja
mov
mov
add
or
mov
orl
push
push
cmp
fwait
iret
aas
inc
xchg
ljmp
hlt
sti
adc
leave
in
insl
mov
mov
or
andl
in
ds
rcl
fwait
orb
xchg
cmp
imul
mov
ret
shll
ljmp
mov
ret
out
leave
xor
orl
or
daa
pop
sbb
pop
and
adc
test
dec
fs
pop
cmp
lahf
xorl
fnsave
enter
popa
js
pop
je
pop
jne
ret
pushf
mov
cmpsl
push
out
out
lods
scas
flds
xchg
movsb
and
test
dec
push
arpl
imul
mov
xor
iret
mov
dec
insb
xchg
jg
shlb
adc
push
jmp
cs
iret
sub
jl
scas
inc
dec
jb
lock
push
mov
add
sahf
mov
add
and
test
sbbb
pop
test
push
shll
insl
jmp
jno
lahf
inc
insl
fucomi
pop
call
add
mov
loop
adc
adc
sbb
jne
loop
cs
cwtl
and
add
outsb
push
ljmp
jl
insl
ret
lock
lods
xor
xor
push
sub
pop
adc
jns
dec
jnp
push
insl
das
mov
in
cld
xchg
sti
push
aad
push
rorb
mov
and
pop
dec
or
das
inc
les
andl
rorl
imul
cmpsb
dec
mov
lods
pop
mov
push
add
outsb
or
pop
lea
add
inc
ret
fisttps
notl
lret
loope
sub
fldenv
and
ret
push
jns
std
fisubrl
sub
sbb
jmp
sbb
mov
fs
test
mov
and
nop
lods
ror
mov
dec
cmp
dec
or
mov
and
pushf
movsl
push
mov
xchg
push
sbb
addl
xchg
lret
xor
inc
xchg
and
sbb
dec
mov
inc
ss
mov
mov
pop
xchg
push
loopne
xchg
xlat
push
insb
scas
and
dec
pusha
and
jbe
cmc
fnstsw
jbe
jnp
inc
push
xchg
out
aaa
mov
ljmp
adc
imul
scas
pusha
push
xor
stc
and
shl
call
xor
cld
divb
dec
and
dec
cs
mov
iret
ljmp
sub
bnd
inc
mov
adc
cmp
add
cwtl
lret
lcall
ljmp
mov
nop
sub
ja
jnp
sar
jnp
data16
jp
aam
mov
lahf
xor
out
push
or
pop
and
mov
int3
adc
test
mov
sub
lods
movsb
dec
or
gs
push
imul
inc
add
xor
push
mov
sub
lods
orl
fisubs
out
movsl
andl
mov
cmpsl
out
sti
mov
fnstenv
jg
lret
push
mov
testl
pop
scas
orb
unpcklps
fsub
sub
pop
lods
and
cmpsl
push
cmp
lea
cmp
loop
out
mov
cmp
negl
jg
cltd
lods
insb
ficoml
and
push
flds
call
clc
sub
icebp
xor
dec
shlb
jp
jl
cmpsb
push
pop
scas
adc
inc
pop
outsl
xchg
insl
test
stc
imul
pop
sub
push
negb
repz
mov
sbb
add
mul
or
test
mov
ss
test
xchg
push
sub
or
mov
loopne
aam
popa
hlt
mov
cmp
loopne
cltd
fwait
fwait
sahf
pop
inc
lea
scas
push
mov
mov
jg,pt
in
outsl
enter
mov
out
nop
xlat
ljmp
xor
rolb
sbb
jb
and
or
ret
mov
jecxz
mov
psrld
jle
mov
in
and
adc
sbbl
inc
jmp
jb
sub
out
and
std
cmpsb
jmp
movsb
dec
jns
in
in
scas
adc
test
adc
gs
inc
stc
push
sub
imul
scas
ss
mov
inc
dec
add
mov
rclb
cmp
sbb
cltd
out
xor
insb
idivb
out
fwait
loopne
or
les
out
ljmp
fmul
dec
xor
xlat
inc
mov
fsubrs
clc
dec
push
sub
movsb
adc
pop
lret
inc
and
push
xor
int
xchg
test
pop
add
fst
jns
das
cltd
mov
mov
mov
loopne
xchg
or
xchg
mov
cmp
decb
sbb
shrl
cmc
adc
mov
popa
pop
aas
xor
data16
into
sbb
das
js
loop
mov
and
dec
push
xchg
icebp
xchg
pushf
imul
pop
inc
add
loope
xor
std
push
scas
jp
adc
xadd
dec
movsl
and
push
insl
iret
push
pop
fwait
inc
pop
pop
outsb
ret
push
cwtl
and
add
cwtl
test
push
mov
jg
jg
mov
mov
mov
mov
scas
icebp
ds
ret
jnp
inc
sahf
test
jge
cmc
push
fmull
mov
leave
xor
mov
sbb
sub
dec
addr16
mov
push
shrl
scas
in
loopne
mov
hlt
mov
jo
and
sbb
js
mov
or
sbb
in
mov
outsl
sahf
ret
inc
daa
jp
mov
lds
repz
stos
in
dec
sbb
std
lock
and
pusha
aas
push
sub
inc
adc
inc
rcll
mov
mov
test
fisubrl
jnp
shll
xchg
add
lea
ja
mov
add
push
add
int
cltd
enter
cmpsl
jmp
jmp
stc
ljmp
push
movsl
out
std
fldl
add
mov
mov
test
mov
xchg
or
rcrb
js
sub
or
in
popf
add
outsl
inc
ds
popf
xchg
je
adc
xchg
jmp
data16
cli
ret
add
aam
loopne
xor
jecxz
and
movsb
ja
or
aad
add
movl
stos
adc
cmpsb
xchg
or
sbb
add
jg
jae
repz
aam
pop
hlt
in
leave
mov
lret
cli
cmp
xchg
or
mov
push
mov
or
mov
cmpsl
cs
cld
cmp
mov
and
repnz
sbb
fisttpl
les
sbb
jo
and
lahf
aas
push
xchg
push
pop
out
je
outsl
arpl
call
les
jmp
imul
cmp
fdivrp
xchg
aad
shlb
add
movsl
cs
jne
int
cmp
cli
dec
sub
sub
push
incl
mov
pushf
movsb
jns
out
es
jle
das
data16
or
rolb
iret
and
inc
cwtl
cmpl
fcomp
lock
loopne
testb
fcoms
jb
outsb
xchg
scas
adc
aas
mov
flds
in
mulb
adc
sbb
mov
pop
fimuls
adc
fucomip
jg
fxch
in
dec
mov
mov
push
mov
aas
and
mov
popf
movsb
or
xchg
pop
jl
xchg
or
fildl
adc
shlb
sub
sbb
in
sbb
sub
push
lock
in
push
fbld
mov
bound
jnp
sub
mov
dec
sbb
sbb
mov
add
mov
or
push
shll
loop
and
ret
mov
loopne
push
loop
xchg
mov
xor
adc
cmp
fcomps
inc
inc
inc
daa
sub
push
push
sbb
cmp
mov
add
adcb
pop
add
mov
fdivrs
mov
mov
shlb
dec
adc
addr16
xor
std
movsb
xor
lea
dec
mov
lock
push
lock
aam
test
push
bound
pop
add
test
shll
adc
jp
push
iret
jmp
jle
sub
imul
shrl
mov
jecxz
lret
into
addb
pop
cld
mov
negb
xorl
push
xchg
mov
in
push
out
inc
in
int
pop
adc
rcrl
mov
dec
test
icebp
aam
repnz
shlb
xor
jno
cmpsl
dec
pop
aam
ret
mov
adc
test
jecxz
jbe
push
mov
sub
dec
sub
sbb
ss
xchg
bound
aad
test
int
sbbb
adcl
or
dec
jg
sbb
fsub
into
jo
into
sarb
cmovns
divl
or
fsubs
cwtl
fistpl
cmp
pop
or
cmp
in
push
adc
leave
int3
jmp
lret
push
add
repnz
and
mov
sub
out
mov
sub
fstpl
xchg
adc
fsts
repnz
inc
dec
jge
loopne
in
sbb
es
fwait
add
mov
xchg
lcall
mov
je
jae
xor
xor
lahf
sub
ja
rorl
mov
imul
sub
dec
and
loope
sbb
ret
xor
adc
adc
jmp
mov
fcomps
add
mov
data16
jg
js
push
popa
pop
add
cmp
into
mov
jge
arpl
shl
mov
xor
fs
cmp
popa
scas
or
rcrl
int3
lahf
inc
fistpll
ja
sbb
dec
mov
or
xchg
ret
jno
xlat
xchg
push
adc
inc
and
out
bound
rcrb
icebp
outsb
addl
cmpl
jnp
add
mov
xor
dec
sarb
rol
daa
and
inc
mov
xchg
dec
lods
sarl
adc
mov
xlat
mov
push
add
enter
out
cmpsb
dec
push
aas
sbb
adc
mov
cmpsb
in
xlat
fs
inc
sahf
scas
xor
xor
rcll
or
das
mov
dec
sub
ss
push
iret
mov
imul
jnp
or
mov
cmp
cmp
out
pop
pushf
loope
mov
and
pop
fs
ss
bswap
adc
rorl
fyl2xp1
mov
adc
cli
and
shll
popf
pop
xor
sbb
cmc
pop
in
es
pop
mul
ret
mov
fcomip
test
test
dec
dec
in
bound
lods
lds
jle
cmpsb
sub
ds
xlat
pop
arpl
push
mov
xor
cmp
pop
fdiv
pop
ja
push
xchg
dec
sub
cmp
mov
dec
in
jo
iret
and
jmp
add
lods
test
sub
jo
cmp
push
mov
jns
outsl
mov
pop
ret
stos
and
mov
mov
and
mov
xchg
popa
sbb
push
lret
subl
cmp
int3
and
jnp
mov
push
iret
mov
lock
movsl
mov
mov
out
call
cmpsb
mov
fwait
dec
lock
jecxz
pusha
pushf
adc
sub
fisttps
push
sbb
fadd
divl
gs
mov
pop
push
add
sti
test
ja
dec
nop
fsts
xor
xchg
lods
int
mov
filds
push
sarb
call
imul
pop
push
aaa
jo
adc
fnstenv
inc
rcr
rcll
sub
fcoms
lret
cmp
mov
cld
pop
push
rol
pop
xchg
push
test
inc
or
add
je
sub
test
aaa
cmp
cmpsl
xchg
scas
dec
jnp
xchg
jecxz
rclb
cmp
mov
cmp
cs
xor
ds
push
jmp
xor
jo
test
inc
fnsave
pop
mov
mov
xchg
push
pop
inc
fdivs
in
pop
inc
in
adc
fildl
push
xchg
pop
and
add
push
rorl
jne
insl
inc
xor
mov
add
sbb
sub
add
cmpsb
aas
cmp
sbb
cltd
mov
mov
mov
or
leave
pop
aaa
jae
jne
dec
mov
aaa
mov
push
inc
mov
xor
nop
not
shrb
mov
bound
mov
cwtl
xor
push
mov
sar
aad
pop
fimull
and
mov
mov
pop
adc
lds
add
fcomps
scas
cwtl
lods
movsb
test
out
mov
jbe
jmp
xchg
pop
shlb
ja
loop
cld
push
in
bound
adc
pop
cli
and
inc
push
ffreep
daa
cmp
js
push
sbbl
js
fldl
sub
insl
lock
fldl
mov
mov
pop
rclb
shl
add
loopne
adcb
fldl
jg
or
syscall
or
add
in
int
push
or
mov
adc
inc
push
cmpsb
dec
adcl
ficoml
push
add
sub
dec
sub
xorb
stos
rclb
popa
sub
adc
cltd
or
push
cld
or
stos
sub
inc
jns
mov
fs
pop
xchg
or
cmp
adc
call
sbb
sub
mov
nop
scas
out
decl
pushf
in
xchg
pop
stos
or
adc
pop
and
or
icebp
loop
jnp
xor
popa
xor
in
in
stos
stc
or
ljmp
adc
ret
mov
or
aam
or
cmp
mov
test
mov
rorl
insl
out
stos
stos
aaa
mov
jge
lret
les
sarl
ljmp
pop
dec
mov
push
inc
jge
sub
inc
pop
sti
adc
jg
xlat
lahf
mov
dec
insl
pushf
popl
mov
push
icebp
icebp
and
jo
pop
out
test
adc
sahf
bound
loope
mov
sbb
mov
mov
cmp
aad
loopne
aas
xor
xorb
inc
adc
fldl
fs
mov
mov
shll
inc
mov
ret
dec
or
bound
mov
lds
jnp
or
stos
push
cmp
test
adc
into
testl
mov
jl
aaa
and
jnp
push
popa
dec
icebp
add
xor
in
ss
jle
push
mov
pop
dec
jg
mov
shll
mov
xchg
push
push
jp
testb
mov
bound
xlat
aaa
cltd
xchg
idivl
pop
lds
jge
pop
out
mov
pop
mov
xchg
add
ret
jmp
imul
into
test
imull
push
pusha
cwtl
mov
out
push
clc
sub
jecxz
mov
xlat
dec
cld
jecxz
idivl
mov
pop
xchg
mov
scas
xor
loopne
out
les
sub
pop
int3
dec
mov
fidivl
addr16
inc
data16
mov
stos
mull
call
lret
xorl
push
inc
inc
scas
inc
push
mov
mov
jmp
pop
mov
fstpt
mov
sub
xor
loop
add
mov
imul
popf
pop
pop
push
test
sbb
add
jmp
xor
adc
cmpsl
mov
cmp
adc
xchg
and
sub
and
or
scas
addr16
idiv
cmpl
mov
lea
xor
inc
mov
lcall
lods
stc
push
hlt
fwait
push
in
mov
fcmovbe
daa
push
fistpll
shrb
xchg
dec
movsb
imul
jle
stc
jle
stos
imul
push
cmc
loope
popf
mov
mov
jnp
jne
int3
mov
sbb
dec
jp
sbb
divb
mov
add
sub
out
jp
dec
push
insl
mov
mov
test
xchg
pop
loop
sub
cli
lcall
in
inc
jge
dec
cmp
pushf
push
sbb
insl
cld
xchg
test
cmp
xchg
pop
movsb
jo
inc
gs
mov
mov
fcomps
std
push
insb
sub
call
pop
mov
push
adc
call
stos
xchg
shr
adc
in
add
loopne
loopne
sub
dec
jmp
ss
stos
into
daa
and
adc
mull
in
sub
outsb
or
fwait
mov
jge
inc
stos
mov
sbb
outsl
jl
jnp
cmpl
lods
mov
pushf
mov
push
jp
cld
hlt
mov
sub
push
pop
daa
push
mov
xchg
insl
or
rclb
cli
sub
aaa
mov
dec
and
jg
leave
push
imul
xchg
out
bound
sub
pop
cmc
lock
jno
lcall
ret
fidivrl
leave
or
inc
mov
loope
jmp
in
mov
pop
clc
push
leave
rclb
mov
loopne
ja
push
cmp
add
repz
jecxz
repz
jge
xorl
push
xor
add
sbb
pop
jno
sbb
and
imul
jmp
cli
enter
mov
test
sbbb
jne
into
ret
xor
inc
rorl
add
pop
xchg
push
inc
dec
fisubs
or
bound
sub
mov
adc
sub
mov
and
mov
insl
jnp
inc
lds
lock
push
pop
ja
fwait
scas
decb
pop
jae
xor
and
in
mov
ljmp
pop
cltd
mov
mov
sub
insb
test
fdiv
mov
pop
out
stc
mov
cmpsb
xor
sbb
div
ret
cwtl
push
int3
neg
rorb
mov
push
or
mov
push
cmpsl
add
dec
inc
aas
push
pop
rcll
mov
pop
or
pusha
lea
sti
in
inc
push
aad
push
jns
les
jno
mov
cmp
nop
aas
dec
add
mulb
daa
mov
test
pop
popf
push
cmp
ret
gs
sbb
push
loope
push
int3
inc
insb
pop
push
lahf
pop
add
dec
add
jmp
dec
cmpsb
test
les
repz
inc
sarb
dec
cmp
cmp
negl
out
cmpsl
mov
dec
mov
or
scas
adc
sub
rorb
fstpl
cltd
xor
mov
out
cmp
int3
and
lcall
mov
add
and
pop
sarb
aaa
sbb
std
cmp
cld
jns
sub
dec
stos
push
xor
mov
push
sbb
aad
fistpll
jg
outsb
or
psrld
lret
cld
in
or
mov
jge
jmp
xor
adc
ret
fldenv
sbb
mov
mov
test
pop
in
adc
movsl
dec
or
scas
fistpl
imul
popf
mov
out
dec
dec
je
idivl
cmc
xchg
call
loope
mov
ret
or
mov
inc
push
fsubp
add
xor
repnz
out
fcmovu
out
jae
sub
stc
inc
adc
movlps
xchg
in
mov
add
dec
jl
jg
adc
imul
xchg
jecxz
and
adc
jp
shlb
jg
cmc
les
mov
out
sbb
out
lods
mov
icebp
mov
sti
jmp
jge
inc
test
mov
xor
sbb
imul
fiaddl
cmp
rcrl
js
sti
test
and
add
call
es
jle
xchg
inc
cmc
pop
jp
ret
pusha
xlat
loop
stos
xchg
add
xor
insb
jecxz
insl
mov
pop
sub
loopne
es
rorb
fdivrl
xchg
mov
stos
popa
jo
inc
addl
sub
ret
arpl
mov
add
mov
add
sub
sub
ja
test
jl
out
hlt
cmp
pop
sub
stc
or
dec
jmp
dec
test
out
add
push
mov
js
imul
stos
aas
pop
addb
add
in
adc
cmp
mov
into
imul
loopne
mov
mov
cmp
arpl
repnz
cmovns
pop
mov
mov
xchg
sub
push
and
pop
inc
adc
push
cmpsb
pop
xchg
fcomp
test
popa
fcoml
lds
das
sbb
andb
mov
sar
xchg
push
out
shrl
xor
cmp
in
test
nop
test
sti
loope
dec
pop
push
dec
aad
adc
cmpsl
lret
mov
sbb
test
inc
mov
jle
jb
outsb
clc
push
imul
stc
gs
sbb
mov
mov
mov
es
add
mov
inc
in
imul
lahf
stos
mov
inc
mov
mov
stos
fisubs
adc
rol
fs
mov
pop
enter
sbb
inc
scas
jle
or
mov
xor
test
popa
imul
xor
and
cmpsl
ljmp
mov
std
mov
pop
xchg
xor
cwtl
rclb
push
cmpsb
loope
jecxz
pop
cmp
add
stc
test
outsb
lret
sub
jmp
sahf
into
loopne
jne
inc
pop
cmp
inc
inc
sbb
mov
sbb
test
rcrl
push
xchg
or
jmp
sbb
or
inc
and
mov
sub
into
xchg
sub
fs
or
into
enter
inc
jo
or
and
pop
mov
pop
aaa
mov
andl
arpl
lods
out
out
sbbb
data16
imul
dec
xchg
lret
stc
lods
jmp
leave
push
push
xchg
icebp
sarb
xor
fldl
mov
es
mov
add
sbb
or
and
inc
ds
mov
enter
pop
loop
loop
inc
out
clc
lret
outsb
test
mov
mov
scas
or
shrl
pop
fwait
or
jb
jno
mov
mov
dec
cwtl
nop
mov
scas
mov
and
lds
gs
out
subb
ret
fisttps
cli
dec
test
jo
andl
jae
add
movsb
fldenv
pusha
cltd
pop
push
jp
pop
mov
outsl
notb
pop
push
pop
popa
gs
leave
xchg
xchg
and
xlat
adc
dec
cld
dec
and
jno
or
xor
sub
sub
push
icebp
mov
jbe
jle
dec
or
test
xlat
cmpsb
and
pop
sbb
add
inc
add
inc
in
fs
pop
daa
rorl
dec
iret
roll
push
push
addr16
jbe
in
mov
and
enter
mov
mov
iret
sbb
push
jle,pt
ds
push
shrb
xor
mov
notb
and
mov
xchg
into
cmpsl
mov
jmp
xchg
fnstenv
pop
and
push
pop
f2xm1
icebp
adc
in
sti
nop
leave
les
jb
inc
and
leave
sub
push
pushf
movsl
insl
jb
in
jle
push
mov
lods
pop
add
arpl
or
dec
dec
sti
xchg
les
push
ljmp
enter
call
das
enter
mov
cmpb
pop
shll
cltd
dec
std
das
mov
inc
mov
bound
outsb
inc
inc
add
fwait
mov
dec
lods
mov
popa
xor
aam
and
mov
adc
cmc
lret
jae
cmp
roll
test
inc
fldcw
aaa
xchg
lcall
scas
cmpb
icebp
xchg
out
adc
mov
pop
push
scas
push
push
sbb
and
ds
jns
pop
jg
sub
pusha
mov
loop
push
sahf
pop
cli
and
pusha
cltd
and
add
into
mov
pusha
jns
cmpsb
pmuludq
push
jle
insl
cmc
pop
dec
sbb
xor
repz
fs
scas
insl
sbb
sti
test
jae
int3
pop
cmp
sbb
cmc
jge
xchg
xchg
clc
add
adc
daa
xchg
and
scas
sbb
jo
cmp
pop
push
dec
push
enter
push
xlat
test
pop
jb
mov
jp
cmovp
xor
pop
xchg
mov
iret
adc
cmpsl
sbb
sti
mov
mov
mov
push
in
dec
jge
mov
sahf
inc
lods
fisubrl
fistpl
test
es
scas
xchg
movsb
jp
sub
mov
cmpsl
push
adc
leave
enter
aad
lods
jp
mov
movsb
xchg
insl
ja
adc
add
shl
rorb
jmp
adc
jecxz
push
out
jo
push
inc
and
shlb
scas
push
iret
mov
js
mov
popf
cmp
addr16
or
daa
stos
addr16
jmp
mov
add
adc
jns
cmp
cli
lret
cmp
cmpsb
bound
pop
jp
movsb
xor
sub
and
es
loopne
popf
xor
addr16
das
pop
mov
lods
dec
cmp
pop
movsl
xor
xchg
fnstcw
aad
lret
push
ds
movsl
repnz
lcall
lahf
sub
cmp
or
jl
and
xchg
aad
lcall
jns
pop
mov
pop
xor
cmpsb
jno
imul
and
test
int3
cmp
sahf
inc
mov
movsl
cs
movsl
ficoms
and
sbb
jno
dec
jecxz
insl
xor
pop
jnp
aas
sbb
insb
popa
sti
enter
cmpsb
dec
test
ret
jno
xor
test
popf
call
adc
insb
ret
out
add
stc
xor
jns
enter
lods
mov
xor
lods
push
das
jns
sbb
adc
dec
xor
je
push
lods
mov
aad
or
aad
ljmp
sahf
in
leave
in
xchg
testb
das
imul
cmp
sahf
mov
fucomip
pop
loopne
jmp
mov
xor
adc
add
fcompl
ljmp
outsb
fldl
inc
ds
enter
rorl
xchg
sbb
pop
popf
cmp
sub
out
lock
push
jecxz
mov
adc
gs
sbb
fisttps
mov
jb
mov
push
fildl
dec
or
push
mov
adcb
jns
mov
sarl
out
inc
or
jge
stc
dec
pop
rcrl
push
into
sub
mov
imul
cs
adcb
xor
arpl
lock
hlt
ja
sub
icebp
adc
and
enter
and
mov
dec
fidivrl
or
lds
pop
div
ljmp
and
fcompl
roll
ss
mov
jp
push
inc
dec
mov
sarb
push
lods
pop
out
pop
sub
insl
and
mov
stos
jbe
push
fdivp
shlb
inc
sbb
aam
dec
xor
es
outsl
mov
out
pop
cmc
pop
pop
xor
cld
into
ljmp
movb
fimull
lret
adc
out
in
rcrl
jae
mov
and
imul
and
pusha
in
pop
mov
xor
ss
inc
mov
mov
scas
fbld
xchg
or
pusha
outsb
jg
aaa
pop
out
pop
clc
xor
fs
test
mov
shll
dec
ss
dec
loope
sub
fdivr
outsl
mov
imul
mov
push
testl
mov
sub
popa
pop
ret
imul
popf
dec
repnz
out
jo
push
aad
mov
inc
mov
xchg
lahf
push
xchg
inc
mov
and
aam
pop
dec
jnp
mov
imul
in
xchg
dec
pop
ret
cli
push
imul
inc
pop
test
rcrb
nop
push
fnstenv
adc
out
adc
test
xchg
gs
or
jae
push
add
je
dec
les
stc
sbb
popa
aas
pushf
stos
xor
fldenv
jg
pop
imul
jmp
imul
notl
fstpl
mov
xchg
jbe
or
pop
test
movsl
adc
add
xor
mov
test
push
fsubs
rcrb
movsl
ljmpw
roll
pop
movsb
push
lds
in
jne
daa
popa
cmc
add
test
adc
sbb
adc
jno
sbb
pop
jae
adc
or
int
daa
dec
stos
inc
push
aam
adc
js
mov
jno
arpl
adc
cmp
add
fbld
mov
push
jl
in
arpl
pop
push
out
out
dec
pop
or
mov
sbb
inc
mov
mov
mov
xor
xchg
loope
mov
mov
cmp
adc
xchg
and
loop
or
sbb
push
add
jbe
dec
sbb
loope
imull
fiadds
ficoml
lahf
in
cmp
sti
sbb
es
xor
adcl
ljmp
cld
sub
cmpsl
push
cmp
push
fcmovbe
lods
mov
add
aad
popa
and
xor
and
dec
add
or
sarl
mov
inc
es
inc
mov
dec
inc
inc
aad
data16
hlt
aas
jnp
je
adc
mov
imul
scas
shrl
xor
jmp
cmp
je
jb
arpl
pop
push
sbb
pop
sbb
outsb
mov
jg
jne
jmp
xchg
xor
dec
lret
arpl
mov
outsb
sub
add
sub
xchg
mov
sub
adc
daa
cltd
sbb
gs
push
push
sbb
psrld
sar
add
insl
sub
or
cwtl
int3
das
add
enter
mov
push
test
ret
jmp
dec
test
sub
mov
xor
dec
cmp
mov
cmpsb
sbbl
push
dec
loopne
fs
mov
adc
in
pop
iret
inc
imul
cmp
ret
aad
adc
mov
push
in
daa
ljmp
int3
push
sub
inc
imul
or
adc
repnz
and
loope
pop
orb
jne
xor
push
loope
movsb
dec
mov
inc
sbb
jno
jmp
aad
dec
inc
or
cwtl
ss
in
sub
sbb
or
dec
sbb
cmp
mov
fmull
fsubrp
pop
mov
orl
fimuls
adc
dec
scas
scas
cmpsl
inc
jge
pop
sbb
push
mov
inc
sbb
insb
cmpb
add
sub
shl
sub
cmp
sbbb
and
stc
out
test
aas
xor
inc
xor
inc
push
dec
scas
add
test
stc
sub
imul
mov
addr16
dec
sub
add
cli
lea
mov
mul
push
repz
mov
lahf
shr
mov
xchg
outsb
add
or
mov
adc
ds
jmp
xchg
fwait
jmp
jmp
rcl
repz
in
add
adc
push
cmp
das
adc
pop
dec
xchg
push
fcmovnb
sub
xor
jnp
adc
mov
out
xorb
aad
shlb
nop
pop
sbb
imulb
cmc
ret
mov
bound
jae
out
repz
xor
and
push
stos
outsb
mov
jmp
repz
sbb
cmp
frstor
sbb
lahf
xor
or
jns
xchg
jecxz
fs
test
xchg
cmpsb
jmp
das
and
mov
aad
pop
mov
loope
jbe
pop
rol
ss
imul
mov
cld
in
add
mov
repnz
adc
sub
aaa
lret
cli
pusha
xor
test
and
sub
sbb
or
sbb
leave
lret
neg
inc
in
adc
inc
sbb
push
mov
popf
mov
xor
leave
mov
and
sub
sbb
push
call
jg
jns
ficomps
rorl
cmpsb
test
pop
or
mov
or
dec
fsubs
test
mov
inc
dec
js
mov
mov
scas
adc
das
cmp
xchg
add
addl
clc
sbb
mov
jo
ficoms
int3
scas
enter
push
fstpt
pop
out
and
and
aam
mov
mov
xchg
popa
mov
lock
and
dec
adc
xchg
rolb
fs
pop
lods
push
fdivrp
dec
sbb
jno
sarl
aad
cmpsl
jp
popa
or
dec
out
mov
dec
aam
xor
movsl
sahf
loope
or
sbb
aad
cmp
data16
movsb
mov
enter
dec
xchg
dec
lcall
divl
xorb
push
xor
sbb
sbb
mov
scas
mov
adc
lahf
stos
jno
int3
sbb
pop
pop
div
testl
fnstcw
es
pop
sub
push
pushf
pop
xchg
js
cmp
xlat
arpl
add
popf
sbb
lds
pop
lea
stos
xchg
sbb
sbb
fmuls
xchg
xor
add
sub
cld
xor
jbe
and
mov
fildl
inc
arpl
dec
jl
or
xor
inc
aaa
and
sbb
lahf
sti
inc
mov
mov
mov
in
addr16
inc
je
pop
pop
adc
and
xchg
adc
pop
gs
arpl
xchg
stos
xor
mov
xchg
movsb
aas
jo
lahf
mov
xchg
cmp
add
out
sub
sbb
add
into
cmpsb
scas
xchg
outsb
fwait
aam
sarb
int
nop
imul
sbb
inc
mov
push
inc
inc
arpl
xchg
push
mov
mov
or
mov
mov
aad
push
stc
adc
cmp
lods
imul
fdivr
fisttpll
lods
mov
xchg
mov
stos
xchg
pop
lds
dec
mov
sbb
inc
lock
pop
adc
cmpsb
pop
leave
push
addr16
fmulp
dec
cmp
mov
sub
adc
loope
das
and
pop
stc
add
jne,pn
ds
mov
aaa
scas
outsl
mov
lods
adc
jg
addr16
push
mov
sub
mov
cmc
xor
cmp
or
mov
shl
sahf
xchg
leave
clc
and
subl
lahf
adc
das
aam
out
pop
mov
inc
mov
fiadds
popf
or
clc
inc
mov
push
push
lahf
psubb
pop
or
ret
out
xchg
or
cmpsl
ljmp
iret
inc
dec
pushf
call
test
sub
mov
lahf
mov
xor
sbb
dec
cmp
negl
jno
mov
insl
repnz
movsb
mov
push
bound
test
lods
pop
cmc
mov
pushf
adc
aad
stos
lret
mov
sbb
adc
scas
in
push
ljmp
jl
xchg
pop
mov
mov
mov
inc
mov
lods
iret
call
aad
decb
mov
cmp
xchg
dec
hlt
push
push
mov
shll
cmp
push
adc
cmpsl
jo
mov
int3
fs
lock
xchg
xor
in
fistpll
out
cwtl
push
imul
add
jno
mov
icebp
push
xor
out
lods
pop
xchg
mov
xchg
xchg
sub
imul
pushl
mov
int
push
mov
push
xchg
pop
mov
jp
stc
pop
mov
iret
push
jg
sub
and
pop
jge
jbe
mov
cmpsl
sti
inc
mov
cwtl
dec
rorb
push
movb
add
ror
cmp
or
xlat
test
divb
data16
add
mov
js
xchg
repz
and
rcll
mov
xor
xorl
dec
ds
rcrl
dec
iret
mov
jb
mov
cmp
stos
frstor
ds
push
cmp
testl
lods
cmp
and
inc
xchg
adc
insb
lcall
in
jbe
cmp
enter
popf
inc
jno
enter
std
sbb
jo
in
daa
sbb
repz
pop
adc
inc
into
push
outsl
mov
mov
pop
add
fs
les
pop
xchg
movsl
mov
xchg
ljmp
fwait
out
sub
mov
inc
int3
inc
stos
cld
add
jle
add
xchg
mov
xor
popa
call
xor
add
mov
inc
pop
adc
lods
clc
xor
fisubrl
in
data16
pop
hlt
andl
lock
adc
shrb
popa
rcl
test
mov
ljmp
aam
test
stc
fsubrs
mov
adc
xor
cwtl
out
sub
fstpl
jb
jp
loope
iret
add
jne
insl
rcll
je
dec
mov
add
je
out
xor
in
imul
pop
mov
aad
or
cmpsb
add
push
cwtl
ret
and
lahf
lcall
dec
xchg
mov
mov
jns
test
loope
mov
add
mov
mov
fistl
xchg
mov
jno
imul
out
mov
mov
aad
mov
sub
hlt
and
mov
imul
repnz
cmpl
insb
popf
int
adc
push
int
les
jb
movsb
push
adc
push
xchg
mov
push
cmp
repnz
adc
xor
inc
sub
lret
and
enter
pop
test
ror
xchg
hlt
jae
mov
fwait
stc
or
pop
or
push
aaa
inc
dec
aaa
lcall
mov
jae
or
or
sbb
mov
xor
sbb
and
lods
cmpsb
outsl
jns
dec
dec
pop
subl
mov
negl
xlat
fwait
pop
adc
sub
cmpsb
fcomps
mov
mov
sbb
cmp
pop
lds
into
icebp
xchg
push
xchg
and
xor
ljmp
adc
mov
mov
leave
and
nop
adc
mov
aas
pop
push
cltd
dec
call
in
mov
filds
or
out
and
cmp
mov
sarl
inc
int
int
jl
test
mov
ror
addb
adc
ds
lcall
cmc
popa
inc
arpl
aam
shlb
insl
mov
cmp
pop
bound
fistpl
fadd
in
leave
xchg
inc
call
movsb
mov
inc
inc
jp
or
jmp
mov
lods
inc
adc
jg
mov
pop
xor
out
ja
ja
add
or
mov
out
mov
adc
push
add
es
push
pusha
in
mov
aam
rol
aaa
bound
sbb
into
inc
inc
sub
push
sbb
out
out
mov
cmovno
je
outsb
fiadds
adc
leave
mov
popa
shll
aas
icebp
push
sbb
idivl
inc
or
xor
repz
mov
inc
icebp
mov
jne
inc
dec
jb
mov
dec
lock
int
data16
ret
iret
andb
adcl
sub
cmp
mov
inc
cmpsb
sbb
loop
divl
mov
mov
pop
dec
mov
pop
fidivrl
insb
lds
push
bound
shl
jb
stos
fisubl
bound
pop
loope
mov
movsb
sbb
ret
out
int
mov
xchg
xchg
xchg
jb
scas
outsb
outsl
jne
lea
mov
leave
mov
mov
inc
pop
jbe
mov
add
stos
cmpsb
jae
adc
cli
sub
add
mov
dec
or
adc
incb
xchg
xchg
push
sahf
movsb
icebp
outsb
sbb
push
shrl
and
fcos
inc
mov
jl
push
lea
out
fdivrs
inc
and
js
add
je
icebp
cmp
sub
xlat
subl
pop
cmp
fs
xor
xor
or
mov
sub
xchg
gs
dec
mov
rdpmc
and
or
shl
inc
mov
fcomi
rcrb
cmpsb
dec
pop
mov
or
lds
mov
adc
lcall
mov
clc
pop
and
and
shll
aad
mov
push
out
nopl
mov
adc
lods
mov
ret
xchg
sbb
inc
xchg
les
stos
push
out
jae
xchg
bound
je
faddp
dec
sub
js
pop
out
jmp
and
imul
negl
xchg
arpl
not
movsb
mov
popa
jp
dec
fldcw
imul
jg
dec
adcl
scas
hlt
adc
cmp
push
fdivrl
mov
pop
lock
cmpb
sahf
fidivrs
add
jecxz
push
fsts
sbb
sbb
or
sub
rorl
loope
cmp
xor
imul
mov
dec
and
fidivrl
inc
aas
add
or
mov
pushf
pop
pusha
stos
dec
fldt
jbe
gs
jns
lods
lret
cmp
dec
xchg
mov
pop
fmul
or
sbb
dec
xor
cmp
sub
mov
ss
insb
inc
sub
mov
aad
sbb
mov
adc
push
push
sbb
data16
mov
imul
jmp
repz
sub
adc
out
xchg
push
ja
mov
dec
jp
fadds
in
dec
sbb
xchg
mov
add
cmpsb
clc
mov
jg
push
loopne
or
push
mov
mov
fiaddl
and
loopne
mov
test
cld
movsb
push
fwait
inc
xchg
mov
mov
dec
xchg
push
lock
mov
stos
clc
xchg
loope
hlt
lahf
sub
jno
jp
iret
mov
mov
in
lcall
inc
add
imul
inc
mov
mov
mov
xor
std
inc
xor
iret
inc
mov
icebp
mov
and
mov
push
xchg
scas
addr16
fisttps
pop
pop
aas
mov
xor
ja
fs
movsl
sub
push
jecxz
push
insl
sub
mov
mov
dec
xchg
xlat
lret
subb
ret
jnp
and
jae
pop
ror
xor
mov
xchg
pop
inc
jp
cmp
cmpsl
sahf
jge
or
in
frstor
rorb
jle
jne
and
and
test
dec
cmp
movsb
cmp
dec
mov
mov
dec
sbb
insl
sub
js
mov
mov
sbb
mov
cmpsb
clc
and
pushf
lret
pop
subb
lds
aad
mov
jb
lcall
mov
xlat
jno
add
std
or
sbb
pcmpgtb
out
loop
push
xchg
dec
push
loope
dec
rorl
fildll
in
sbb
je
outsb
xchg
mov
cmp
sbb
or
jae
int3
pop
sbb
clc
popa
mov
xorb
int3
out
jecxz
daa
mov
vcvttpd2dq
cmpsl
fwait
jns
pushf
fdivl
loop
stos
mov
xlat
adcb
dec
ss
sbb
inc
mov
push
mov
jecxz
stos
fildl
mov
jg
movsb
lret
sub
mull
xorb
pop
repnz
push
cmp
fisttpll
pushf
test
sub
push
mov
jno
shrb
mov
imul
dec
add
add
and
pop
aad
shlb
pop
bound
dec
leave
shl
repz
push
xor
xchg
or
xchg
out
aaa
add
mov
js
pop
xor
add
idivb
adc
add
icebp
dec
add
xchg
push
pusha
popf
cli
cmpsb
inc
mov
dec
jle
mov
jecxz,pn
stc
xor
dec
adc
lcall
sub
or
scas
in
jno
addr16
sti
clc
sub
or
ljmp
xchg
loopne
gs
clc
jb
push
pop
testw
mov
imul
or
jp
pushf
stos
add
rcrb
lds
push
xchg
int3
and
xorb
adc
test
adcb
scas
shl
cltd
outsl
mov
and
call
jo
dec
inc
push
xor
mov
std
xchg
dec
push
sub
xchg
pop
add
mov
pushf
and
sbb
push
dec
sbb
repnz
insb
push
cmpsb
popf
xor
pop
inc
dec
jmp
lods
jbe
push
in
call
jecxz
repnz
add
adc
mov
jecxz
cmpsl
test
dec
scas
sahf
cmp
in
xchg
sbb
lret
daa
or
sub
shll
je
mov
mov
mov
shll
add
shll
je
mov
std
cmp
push
cmp
nop
jl
mov
pop
sbb
adc
mov
pusha
push
into
xor
or
cmp
pusha
xchg
dec
out
ds
lret
shrb
dec
lea
mov
sar
mov
and
in
mov
divb
iret
das
xchg
pop
mov
subl
sti
jecxz
sub
loope
addr16
add
ds
lock
inc
add
sbb
sbb
fdivrl
inc
and
dec
mov
sti
and
stos
leave
cld
cwtl
push
and
xchg
xchg
addr16
or
repnz
ljmp
test
aaa
call
pop
pop
and
or
or
fcmovnb
inc
pop
mov
imull
hlt
pop
out
loop
push
cmp
es
jle
int3
xor
shll
jns
and
stos
push
outsb
movsb
lcall
xor
cmp
jno
cli
jge
lods
xchg
and
xchg
or
xchg
sub
lahf
movl
jo
xchg
push
stos
mov
and
add
or
sbb
repz
notl
mov
sub
pop
es
flds
ret
xorb
push
mov
shlb
aas
lea
getsec
cmp
jo
je
ret
jle
insl
out
mov
in
mov
mov
fs
loop
inc
or
gs
les
jns
inc
lret
push
push
or
fdivp
sarl
xchg
jo
mov
cmpsl
ljmp
dec
popa
into
cmpsl
test
icebp
pop
and
repz
pop
mov
shlb
mov
int3
stc
add
adc
orps
outsb
xchg
into
adc
mov
call
jge
xchg
xor
pop
int
ret
jns
pop
push
adc
push
pop
mov
cwtl
mov
dec
add
push
lods
and
stos
subb
fcomps
pop
into
sbb
xchg
popf
xor
xchg
ret
mov
add
cmpsl
fistps
mov
pushf
lea
add
xchg
push
pop
jecxz
add
xchg
push
ret
add
imul
rclb
test
xlat
xchg
add
and
nop
inc
loop
daa
aad
fcomps
mov
mov
cmpl
pop
cmpsb
call
lahf
push
fistps
fisubl
out
xchg
xchg
mov
or
inc
stos
aam
std
rol
add
pop
lahf
pusha
inc
dec
pop
pop
pushf
in
mov
ficoml
xchg
addb
pop
dec
pop
pusha
dec
inc
cmpsl
fcoml
sarb
pop
sbb
lods
inc
lcall
dec
hlt
nop
add
ret
mov
pop
or
pop
inc
or
cwtl
sub
or
call
sub
add
std
cwtl
or
loope
sub
out
cwtl
cmp
lcall
lahf
sbbb
fbld
mov
into
sbb
cli
xlat
dec
push
int3
sti
mov
adc
jo
jne
push
adc
movsl
data16
or
sbb
cmp
lret
push
or
popf
cmc
ljmp
inc
lcall
pop
test
push
jns
out
out
clc
inc
xlat
and
mov
jns
fisubrl
push
sub
sub
mov
aaa
mov
shlb
sub
loop
add
popf
add
shl
inc
xchg
enter
sahf
xor
and
xchg
xchg
pop
lea
out
xor
lods
popa
mov
mov
iret
dec
stc
icebp
push
test
sbb
push
jo
ret
js
shrb
cli
mov
gs
mov
pop
cmpsl
fs
mov
imul
iret
leave
mov
mov
test
and
inc
mov
inc
nop
and
dec
push
mov
outsl
sub
insl
or
sbb
xlat
das
rcrl
ja
subl
pop
fstpl
call
or
xor
ret
cmp
mov
dec
jp
bound
mov
out
aas
out
adc
sub
loopne
inc
insb
sahf
daa
jb
pop
ss
ficomps
std
test
iret
imul
cmc
push
push
lret
psadbw
cmp
fcoml
sbb
loop
add
jle
jne
pop
in
jg
xchg
lret
bound
mov
or
push
mov
nop
fldcw
scas
clc
cmpsl
cmc
adc
jns
fwait
inc
mov
out
jecxz
ds
inc
add
jo
jp
mov
sbb
jmp
jno
push
pop
sub
adc
mov
sbb
cmp
incl
jns
loopne
out
fwait
mov
or
popf
pop
jno
imul
cwtl
repnz
lret
test
aad
and
inc
mov
test
call
cmp
push
dec
stos
push
push
lock
cli
nop
fnstcw
mov
lock
int3
mov
and
stc
and
js
test
fsubr
mov
stos
fidivs
out
sub
inc
mov
sub
jmp
sub
sub
inc
arpl
cmp
or
push
jne
pop
popa
out
imul
test
push
pop
jmp
cwtl
and
fs
pop
xor
inc
mov
je
xchg
aam
iret
cmpsl
rcl
insl
xchg
sub
xchg
add
in
jecxz
ss
mov
ds
les
jg
ret
mov
int3
inc
mov
lret
add
imul
jecxz
js
fcmove
and
xor
jecxz
test
inc
pop
xchg
jne
add
inc
pop
cs
xor
and
jns
inc
mov
cmp
jmp
addl
or
push
out
rcll
jae
xor
enter
out
adcl
mov
mov
pop
jge
mov
andl
movsl
dec
stos
shlb
in
shll
iret
into
loop
cltd
push
ja
cmc
pop
ds
pop
or
daa
xchg
out
cmp
pop
clc
icebp
mov
arpl
cmpsl
jecxz
xor
push
pop
mov
fdivs
adc
mov
sti
dec
ret
jne
sahf
jg
sahf
jo
push
fidivrl
inc
mov
loope
ret
fnstcw
pushf
mov
xor
sbb
into
aas
mov
mov
xchg
arpl
lds
leave
aam
fucom
pusha
lret
adc
arpl
int
sbb
in
pop
push
adc
jp
daa
dec
inc
insb
cli
ja
mov
js
int
fldcw
hlt
repz
pusha
fidivl
rcrl
cmc
push
mov
ds
lds
mov
push
jecxz
pop
lods
dec
aad
bound
mov
outsl
pop
inc
xor
fmull
repz
test
and
aaa
popf
icebp
xchg
add
mov
sbb
test
fdivs
jnp
inc
bswap
push
sbb
push
test
jo
lea
jg
mov
mov
xor
ret
out
jg
testl
outsb
inc
movsl
bswap
xor
xchg
push
aas
and
inc
je
test
shl
and
lcall
push
lds
pop
mov
rcrb
ss
lods
out
or
pop
ja
fists
sub
cmc
mov
push
addl
lea
out
xchg
fsubrs
mov
ja
fsubrl
jnp
scas
aad
jns
dec
fnstsw
push
repnz
adc
xchg
test
sarb
hlt
jne
mov
or
jle
jno
sub
xor
xor
adc
lcall
cltd
jge
mov
fiadds
adc
fbld
insl
repnz
enter
mov
dec
adc
push
cmp
nop
or
ss
jae
add
push
adc
sub
loope
sahf
mov
sti
ret
and
rorl
mov
fstl
scas
repz
ja
add
stos
je
adc
push
imul
xchg
pop
adc
xlat
push
adc
rorl
and
adc
dec
ds
inc
add
adc
pop
shr
ljmp
jns
jmp
repz
lret
test
xlat
pop
cmp
and
add
add
pop
fcmovne
or
and
test
loope
push
mov
push
mov
cmp
sbb
repnz
insb
xchg
inc
in
jg
inc
sti
js
push
in
jbe
push
mov
enter
mov
aam
push
adc
bound
xor
mov
sub
data16
push
out
sub
lret
jae
repnz
inc
test
in
leave
sti
mov
test
push
push
add
loopne
push
bound
repnz
mov
int3
insl
cltd
cmpb
mov
test
loopne
push
add
mov
out
int3
mov
and
add
push
pop
mov
mov
mov
push
outsl
sbb
add
mov
rcrb
or
mov
cltd
or
push
mov
leave
sbb
scas
adc
stos
cmp
mov
adc
jge
gs
mov
por
daa
mov
fistps
and
fidivrs
sbb
aaa
test
adcl
adc
dec
dec
jecxz
mov
loopne
out
or
lret
insl
testb
outsb
cmp
jnp
sub
mov
out
iret
cwtl
insb
inc
das
xchg
cwtl
fnstenv
push
sbb
cmp
push
test
aad
inc
dec
lods
popa
pop
sub
sbb
push
mov
int3
lahf
mov
pop
mov
pop
mov
and
adc
stos
fimuls
adc
lock
sub
imul
data16
out
outsb
push
movsb
pop
pop
hlt
and
pop
sbb
loope
jne
sbb
push
xchg
jno
leave
dec
frstor
jmp
sbb
rclb
jbe
sub
push
leave
loopne
inc
testl
divb
or
sub
cmc
ljmp
push
mov
or
sub
insl
out
fucomip
cmpsb
sti
or
ds
xchg
dec
movups
test
xchg
fistl
dec
ret
lahf
mov
pop
and
out
in
pop
std
dec
or
or
fimuls
mov
xchg
sub
int
dec
leave
sub
pop
insb
push
sahf
lds
ja
shlb
les
fistl
popf
xor
inc
sub
paddb
mov
hlt
inc
add
ds
inc
sub
mov
and
mov
xor
jecxz
icebp
mov
sbb
sub
sub
cmc
jbe
add
mov
scas
lret
pop
pop
mov
jne
pop
repz
movsl
xchg
bound
ja
mov
jnp
push
lock
leave
mov
dec
mov
sbb
ret
dec
fiadds
add
mov
inc
jg
gs
mov
and
dec
test
pusha
cmp
fstps
dec
hlt
daa
push
stos
fwait
lods
inc
inc
iret
rcrb
das
dec
push
ror
or
fld
lret
in
jmp
xchg
and
pop
sbb
outsl
stos
clc
sbb
mov
stc
out
sti
sub
mov
dec
in
je,pn
and
shlb
cltd
cmp
ja
mov
mov
hlt
bound
mov
push
cmp
jp
jae
pcmpeqd
hlt
imul
aam
mov
repnz
push
outsb
mov
scas
lods
sub
mov
fwait
test
sti
ss
imul
pusha
test
fsqrt
xor
sub
xchg
xchg
test
jecxz
mov
cmp
cmpsl
xor
mov
xchg
out
enter
aam
cmp
lea
mov
mov
mov
aam
cmp
inc
xor
mov
shlb
lret
jo
sub
roll
fisttpll
push
sub
ja
push
fadds
movsl
inc
sub
in
jl
mov
out
push
fidivl
mov
jp
add
mov
mov
dec
and
loop
lcall
mov
mov
in
sub
adc
movsl
xor
stos
repnz
mov
mov
repnz
pop
mov
fdivrp
ljmp
cltd
pop
mov
shrl
pop
or
repz
int3
add
jbe
xor
lahf
push
push
push
mov
pop
push
test
add
ds
xorb
dec
cmpsb
out
inc
insb
dec
in
cmp
call
cwtl
popfw
cmp
sbb
loopne
dec
push
xor
mov
shr
addr16
xor
divl
inc
push
not
fmull
stc
outsb
scas
in
mov
and
rclb
imul
jl
fists
loop
mov
pop
xchg
jo
pop
stc
in
mov
xchg
cmc
lods
add
pop
cmp
jl
mov
testl
dec
test
shll
aas
lea
jge
jbe
cmpsb
push
mov
movsl
test
cmp
inc
cmpsl
je
sbb
std
xor
into
mov
shr
pusha
das
push
mov
push
std
aam
aad
xor
adc
adc
mov
dec
adc
adc
push
das
pop
push
adc
clc
cmpsl
pop
xchg
rcrb
pop
push
shll
push
xchg
lahf
xlat
in
cli
std
test
frstor
into
clc
sub
mov
xchg
add
mov
test
push
sbb
dec
sub
mov
sbb
xor
lea
and
jmp
imul
int
xor
mov
xchg
xor
push
adc
xlat
cli
in
ljmp
cwtl
ljmp
add
dec
cld
mov
insb
addr16
xchg
rorl
daa
pop
pop
movb
rorb
bound
lock
xchg
xorl
inc
inc
andb
iret
std
pop
in
xor
xor
or
loopne
xorl
mov
mov
aam
sbbl
mov
jbe
cli
sub
orl
sub
jmp
xor
call
mov
out
lock
shr
in
xchg
clc
cs
mov
loope,pn
popa
subl
popa
and
cmp
dec
test
lods
and
bound
pop
out
xchg
xor
mov
mov
imul
push
iret
mov
mov
mov
shl
fidivrs
push
mov
data16
mov
mov
add
xchg
xchg
pop
xor
cwtl
movsl
mov
mov
ds
xor
pop
addr16
test
lea
lret
pop
and
mov
xchg
pushf
xor
loop
std
add
adc
pusha
push
inc
out
cwtl
pop
icebp
mulb
sub
jae
rclb
jge
mov
hlt
cs
out
fbld
rcrl
cli
fnstcw
pop
adc
fcmovu
call
loope
add
push
xor
jbe
lock
inc
cmc
cmp
mov
and
cmpsb
mull
sbb
shll
aas
clc
lock
sub
jbe
pop
dec
xor
or
call
insl
and
test
cwtl
mov
mov
loope
repnz
clc
cli
mov
mov
loope
jnp
push
out
mov
jecxz
jo
mov
insl
imul
sbb
scas
mov
dec
clc
cmp
out
je
xchg
mov
sbb
xor
cmp
call
and
test
arpl
push
iret
mov
push
int3
jecxz
inc
adc
xor
ljmp
repz
dec
daa
out
add
mov
call
xor
and
xor
xchg
test
push
push
mov
push
test
dec
or
in
icebp
xchg
sub
pushf
cmc
fldt
imul
jno
cmp
fistps
inc
icebp
fstps
xchg
rcll
cwtl
cmp
jg
push
mov
dec
ja
adc
add
aad
cmp
jb
ds
xchg
loope
adcb
out
scas
jg
sub
mov
or
jge
stos
add
in
ljmp
fsub
in
xor
int
sub
into
and
pushf
mov
aas
xor
xor
or
fwait
gs
mov
jl
adc
add
jns
cmp
call
je
adc
mov
or
xor
mov
jno
mov
cmp
cmc
fstps
sub
cs
add
or
mov
mov
inc
adc
nop
jmp
xchg
or
or
xchg
adcb
adc
sub
add
cwtl
or
imulb
outsl
push
cmp
mov
mov
sbb
push
fistpll
ljmp
shlb
cmp
and
mov
sbb
cmp
es
push
out
stos
clc
push
arpl
clc
shrb
push
dec
jp
out
les
in
aad
xchg
mov
sub
inc
sub
sub
inc
xor
ljmp
dec
or
imul
in
fs
into
add
enter
dec
int3
mov
movsl
sbb
adc
lods
sub
ret
and
repz
and
pusha
mov
xor
sbbl
sbb
in
push
subb
outsl
adc
sub
insb
sub
cltd
mov
xor
cmp
stos
inc
jne
loope
sub
jge
push
stc
icebp
xchg
sub
imul
xor
cwtl
adc
adcb
jl
jle
pop
sub
mov
pop
sub
add
popf
movsl
lods
cmp
sbb
cmp
jb
mov
jae
or
sbb
sbb
lds
jl
xor
push
imul
push
and
rcrb
pop
dec
loop
in
or
push
mov
xor
inc
jmp
in
add
cs
mov
out
push
mov
add
es
sbb
lret
cltd
ret
add
jo
cwtl
ret
in
jmp
xor
roll
popf
cld
cld
fxch
pop
call
jmp
ja
and
dec
jnp
cli
pop
rorb
loopne
lock
stos
xchg
cmp
ja
sub
mov
sub
sub
fnstcw
in
mov
sub
inc
les
mov
push
roll
sti
movl
mov
xor
insb
mov
sub
xchg
xor
inc
adc
push
push
pop
xchg
and
mov
enter
sub
inc
mov
add
push
lock
es
imul
pop
pop
mov
cltd
xor
ret
test
pop
push
ja
pop
fs
jo
and
loopne
mov
inc
xor
or
add
scas
mov
push
insl
mov
mov
in
push
loopne
adc
push
stos
xor
pop
jp
adc
bound
adc
xor
cwtl
ja
inc
inc
mov
mov
sbb
mov
sti
mov
pop
mov
cwtl
loop
clc
std
cmpsl
ret
sub
imul
dec
repz
xchg
jne
xlat
cmp
mov
bound
dec
je
out
push
cli
mov
insl
jae
scas
inc
loop
push
and
cs
fcoms
fs
loope
stc
xchg
xchg
std
in
and
mov
and
xor
fdivs
int
addr16
add
mov
in
pop
leave
shrb
sbb
inc
fisubrl
sub
sbb
adc
xorl
jle
pop
js
inc
mov
stos
rcrb
lods
rcrl
fsubl
pop
inc
jno
ficoml
jmp
nop
into
dec
adc
pop
lret
shr
jecxz
and
mov
lahf
sbb
ret
popa
jae
add
xor
fdivrs
stos
pop
xchg
jns
cltd
pop
sahf
xor
lds
lret
mov
je
mov
iret
cmc
pushf
repz
mov
inc
push
push
fnstenv
add
enter
push
sbb
dec
cltd
xchg
jne
rcl
lock
cs
or
jecxz
out
add
sbb
mov
fists
rorb
imul
add
push
push
movsl
sbb
adc
clc
loopne
push
xchg
idivb
test
fsubs
mov
hlt
mov
iret
int
shll
in
popa
push
push
in
add
int
push
dec
test
fstpt
mov
inc
in
push
xor
std
aas
nop
out
sbbb
or
and
mov
inc
in
push
add
xor
sti
push
xchg
clc
jle
cmp
roll
sub
ret
loop
or
jle
lea
add
push
mov
cmp
sahf
ljmp
mov
pop
xor
loop
or
pop
int3
scas
int
mov
imul
push
push
adcb
cmp
cwtl
cmp
loopne
mov
push
lds
testl
push
bound
leave
pop
cmp
dec
sahf
aam
stos
and
pop
jle
pusha
imul
test
hlt
popf
dec
jmp
cld
sub
adc
jmp
or
call
scas
pop
std
shl
popa
inc
cmpsb
or
aas
pushf
ficompl
fisubrl
sub
shl
inc
mov
sub
lret
mov
test
adc
cmp
stos
jl
in
add
fs
add
mov
popf
iret
es
outsb
fs
xchg
pushw
or
outsb
fnsave
lret
xor
leave
test
or
adc
into
cmc
jmp
inc
loop
sbb
lret
jl
and
cmpsl
lods
mov
adc
outsl
iret
icebp
mov
dec
rorl
inc
movsb
or
sti
sub
insb
cmpsl
cmp
into
cwtl
hlt
xor
lret
inc
int
mov
jo
adc
in
outsl
adc
jo
daa
stc
dec
jns
mov
adc
mov
je
xchg
rclb
pop
leave
sub
sbb
sbb
pop
mov
stos
xchg
xchg
inc
aam
decl
ficoml
xor
int
jo
subl
insl
cmp
dec
in
aam
insl
into
jbe
push
je
repz
pushf
mov
cmp
inc
or
cmpsb
leave
pop
popf
jbe
mov
jne
sbb
jns
aas
cmp
repz
push
xchg
fisubrs
loope
lea
cmpsb
pop
out
inc
pop
in
or
mov
mov
cmc
add
dec
dec
mov
mov
pop
pop
loope
mov
test
or
cmp
mov
push
test
sbb
inc
fidivs
bound
js
and
push
dec
stos
mov
insl
movsl
dec
ja
jo
push
inc
loope
mov
cwtl
rclb
jno
mov
adc
addr16
insb
data16
xor
mov
sbb
shll
movsb
ljmp
cmc
stc
fs
leave
mov
xchg
popf
movsb
xchg
ja
popf
xlat
aaa
pop
inc
mov
enter
cmp
in
sbb
fstpt
jb
popa
ds
sbb
inc
push
lock
dec
dec
pop
push
jecxz
mov
mov
cmp
cltd
mov
mov
rol
movsl
add
push
sahf
adc
out
ja
flds
fst
sbb
xchg
push
leave
pop
mov
repz
mov
fimull
fidivs
popa
push
popa
mov
gs
ss
stc
add
shrl
pop
xchg
jno
xchg
imul
cltd
lods
inc
mov
cld
sbb
jmp
lahf
mov
test
hlt
pusha
aam
inc
cmpsb
lcall
repnz
mov
add
adc
mov
add
rorl
dec
or
push
adc
cmpsl
scas
pusha
cld
xchg
add
lret
test
adc
adc
imul
in
mov
cs
outsb
xchg
loope
stos
and
cmpsb
sbb
sbb
jmp
jno
test
or
xor
or
inc
xchg
xor
cli
push
jbe
cltd
lea
and
or
iret
lret
xchg
lcall
nop
cmove
mov
and
add
push
adc
leave
xor
data16
insb
jbe
sub
push
jmp
dec
ljmp
pushf
push
test
lret
aad
gs
js
cmp
int3
js
xor
aam
scas
in
sub
hlt
insb
mov
icebp
test
add
jecxz
je
mov
dec
push
xchg
stos
rclb
out
push
push
scas
arpl
cmp
mov
jecxz
cmp
stc
add
rcll
pop
or
fisubrl
xor
push
pop
rorb
cmp
icebp
inc
ja
rcl
mov
lods
push
inc
insb
mov
pop
into
scas
xchg
xor
mov
ljmp
push
sbb
cmpsb
fisubrs
cmc
mov
addl
mov
dec
or
jg
mov
xorl
ret
into
ret
mov
xor
mov
mov
shlb
dec
sti
adc
mov
sar
inc
mov
sbb
mov
cmc
in
xchg
lret
cltd
sub
inc
inc
jle
repnz
dec
test
inc
adc
out
mov
xchg
ds
arpl
or
je
mov
fisttpl
clc
ror
arpl
cld
inc
cmp
dec
mov
cmpsb
add
xchg
xchg
addb
xchg
pop
sbb
mov
or
popl
imul
fsubrs
into
pop
js
push
lods
xchg
push
das
fildll
lret
test
xchg
mov
push
fucom
std
inc
fcmove
pop
aam
inc
test
dec
aam
jbe
and
mov
outsb
clc
jnp
je
pop
sbb
mov
test
xchg
lods
std
sbb
jmp
xor
jmp
mov
push
ljmp
or
cmp
lahf
xlat
push
pop
aad
imull
arpl
in
icebp
repnz
pop
test
xchg
repz
push
inc
scas
in
shlb
sbb
addr16
lahf
in
xchg
dec
push
cmp
jb
push
mov
imul
into
daa
hlt
arpl
clc
pop
repnz
pusha
mov
xor
xlat
push
sbb
lods
movsb
mov
pushf
cmpsb
push
inc
rorb
and
jge
das
es
pop
adc
aas
push
imul
adc
in
mov
dec
dec
inc
sahf
xor
push
divb
loopne
xor
imul
pushf
lcall
and
scas
or
jg
std
out
push
aad
jle
mov
addl
dec
subb
xchg
sbb
mov
mov
not
adc
inc
mov
aaa
into
mov
das
mov
pop
push
ret
pop
jo
lret
in
repnz
cmpsb
dec
loopne
and
js
add
sbb
enter
or
pushf
or
lret
inc
lahf
repz
cmpsb
mov
xor
pop
jae
push
repnz
xor
ficoms
or
adc
pop
std
pop
or
inc
ds
jg
repnz
outsl
pop
lock
enter
adc
hlt
icebp
adcl
vcvttss2si
lcall
shll
inc
aas
fisubl
jb
xchg
shrl
andl
ret
jnp,pt
stos
cmc
std
cmpsl
jnp
hlt
lcall
test
sahf
xor
xor
mov
sarb
jl
lds
test
xchg
popf
fiadds
xchg
inc
pop
std
xchg
gs
xor
into
and
imul
test
jo
jo
addr16
dec
dec
fistps
out
popa
leave
mov
xor
push
or
xor
pop
adc
iret
cmp
fidivl
jae
dec
negl
jp
mov
or
pusha
out
ds
adc
inc
sub
pop
lods
sbb
stos
mov
aam
and
daa
lret
stc
movsb
in
sbbl
adc
scas
test
mov
dec
filds
inc
fmuls
dec
ret
fcmovu
sbb
daa
mov
call
sbbb
test
adc
or
mov
hlt
pop
arpl
adc
xchg
dec
scas
push
sub
push
fwait
das
xchg
cld
push
fcompl
mov
popf
push
mov
push
cmp
xchg
add
sbb
and
es
fs
pop
out
inc
out
mov
lret
push
jge
dec
sahf
ds
in
mov
loopne
or
xchg
lock
enter
les
gs
dec
inc
lea
sahf
inc
pushf
mov
movsb
aad
dec
xchg
daa
pusha
inc
movsl
mov
test
int
sbb
js
imul
mov
mov
or
insb
jg
shlb
and
cwtl
loope
adc
pop
mov
icebp
sbb
faddp
pop
pop
mov
in
push
lret
dec
jo
dec
and
ljmp
adc
mov
frstor
rcr
sti
cmpsl
xchg
jnp
inc
int
mov
inc
aam
push
or
pop
dec
sti
cwtl
jo
imull
mov
mov
stos
xor
inc
jge
sahf
mov
int
pop
stos
popa
add
jo
inc
mov
dec
sahf
lret
iret
cltd
popf
xchg
cwtl
pop
jmp
fidivs
and
xchg
out
loopne
adc
out
xchg
fildll
dec
inc
push
daa
popf
and
loop
inc
pop
shl
cld
int
cwtl
popl
xor
push
xor
inc
gs
adc
jns
dec
adc
call
mov
repnz
popa
ss
stos
cmp
and
outsl
jns
bnd
sub
xor
daa
jae
roll
nop
shr
pop
push
push
push
jno
push
jo
sbb
loopne
dec
adc
cwtl
imul
push
push
movsb
imul
cs
jns
push
in
and
jle
push
sbbl
mov
imulb
jecxz
jne
sbb
test
test
jb
sub
inc
cwtl
ljmp
and
mov
scas
pop
aas
adc
or
pusha
or
cli
dec
divl
mov
lret
subl
xlat
mov
add
add
inc
nop
inc
inc
and
add
adc
xlat
lods
sbb
sbb
cmp
pop
xchg
roll
addr16
imul
repnz
jle
push
mov
stos
push
movsb
mov
sbb
in
sahf
cmp
inc
imul
popa
das
daa
lods
pop
aad
lret
mov
imul
fucomp
cli
or
test
movsb
dec
rol
push
push
test
pop
in
in
add
sbb
fcmovbe
idivb
sbb
mov
xchg
dec
roll
fwait
or
rolb
push
ret
popa
mov
sbb
push
xor
lods
out
mov
sub
lods
or
test
clc
inc
push
jae
jge
loop
jnp
sbb
jle
iret
adc
test
das
outsl
sbb
jmp
pop
fwait
mov
scas
int3
ja
pop
jge
adc
je
out
decb
mov
lods
cwtl
xor
cmp
fadds
sahf
mov
mov
cmp
nop
call
repnz
mov
dec
pop
push
adc
mov
call
jo
notb
sbb
lds
fnstsw
lahf
mov
ljmp
jl
popa
inc
cmp
cwtl
adc
leave
dec
pusha
stos
xchg
repz
add
out
mov
mov
xor
pop
mov
lods
dec
add
fbld
add
bound
daa
fsubr
mov
mov
pusha
inc
popf
js
leave
jecxz
jp
mov
addr16
dec
into
mov
add
into
push
ja
cmp
jmp
arpl
imul
mov
hlt
leave
aaa
movhlps
jns
andb
std
adc
lret
push
stc
insb
cltd
repnz
orb
test
pop
jo
fistps
and
cmp
ss
call
jne
cld
push
or
add
stos
xor
cmp
dec
and
sti
mov
rolb
or
fcoml
pop
ret
add
jns
cmp
xchg
xchg
xchg
sar
int3
loopne
cmp
int3
outsb
push
sahf
loope
mov
pop
mov
and
add
mov
and
dec
cs
add
push
push
mov
mov
dec
jecxz
fcos
xor
adc
mov
rclb
js
movsb
mov
movsb
dec
cmp
inc
adc
fwait
cwtl
adc
mov
mov
fdivrs
jns
inc
fwait
mov
xlat
push
stos
or
lods
les
mov
sbbb
and
push
mov
cmpb
ljmp
out
push
adc
ret
fs
adc
popf
dec
data16
cs
ja
xchg
inc
scas
jp
pop
sbb
lds
mov
cmp
push
mov
jns
cmc
adc
push
mov
jle
dec
call
sub
push
add
inc
bound
push
imul
rclb
push
gs
ljmp
pushf
push
add
mov
mov
pop
pop
popf
test
je
adc
rcrl
fistpll
inc
fcmovnb
mov
xchg
dec
lock
mov
mov
pop
std
sbb
sub
or
xchg
add
test
pop
rol
aaa
rep
clc
push
js
out
pop
jnp
lock
sbb
in
jp
into
inc
push
scas
and
ljmp
lret
dec
scas
add
mov
filds
pop
out
add
popa
pop
inc
div
aad
imul
std
in
inc
jns
cmpsl
jns
in
mov
rcrl
imul
sarb
add
shrl
cmpl
fdiv
gs
and
adc
mov
js
pop
cmp
lcall
or
add
xchg
insl
test
dec
jns
out
insl
sub
test
inc
pusha
jle
scas
push
mov
xchg
int
fnstcw
inc
gs
imul
shr
pop
dec
dec
mov
dec
push
aam
or
call
cmpsb
mov
and
das
clc
xor
or
pop
test
ror
lret
push
scas
out
mov
rcr
sbb
lea
sub
test
in
xor
ss
imulb
inc
imull
cmpsl
lret
mov
mov
fildl
sub
jnp
cs
nop
xchg
xchg
aam
arpl
out
imul
lret
xchg
aaa
jo
cmp
out
leave
popa
es
xchg
xchg
xor
add
ds
out
mov
in
fildll
cmpsb
je
leave
nop
loope
lret
push
dec
xchg
and
pop
addb
out
mov
stos
sub
pop
push
cmp
inc
push
mov
out
js
push
dec
es
xchg
xor
ja
jl
mov
sbb
adc
mov
xor
jnp
in
push
lock
cs
mov
test
cmp
loopne
inc
rclb
adc
inc
pop
jp
enter
or
mov
je
jae
imul
sub
mov
dec
mov
mov
mov
leave
xor
sbb
and
pop
hlt
fiadds
dec
mov
mov
nop
cmpsl
xchg
mov
xchg
jge
mov
mov
xor
mov
jp
inc
mov
inc
jp
inc
xor
scas
jo
std
xchg
inc
push
mov
dec
xchg
inc
and
rcr
cltd
mov
lock
dec
fdivr
and
lock
xchg
pop
pop
imull
popf
cmp
add
pop
ljmp
jmp
int3
jnp
xor
or
mov
jbe
loope
pop
lock
fs
dec
dec
mov
int3
loopne
outsl
dec
sbb
push
shlb
mov
clc
inc
dec
mov
rcrl
dec
daa
cmpsb
jp
xchg
decb
fsub
pop
cmpsb
cltd
or
leave
jne
test
sbb
flds
cmpsl
xchg
mov
inc
insl
mov
ljmp
mov
bound
bound
mov
ljmp
mov
xchg
or
mov
sub
fdivr
push
sbb
popf
inc
rcr
adc
jb
add
cli
lret
xor
cld
cmp
sbb
lds
cmpsl
lea
pop
into
adcb
jbe
xchg
inc
xchg
push
mov
sub
ja
outsl
jns
mov
jmp
jle
push
stos
jb
mov
or
mov
pop
adcl
mov
adc
or
cmp
sbb
mov
inc
fadds
shl
jae
movsl
je
setnp
es
cld
cmp
or
xchg
mov
lcall
lret
push
xor
pop
inc
out
cmpsb
cmovns
arpl
icebp
leave
mov
jnp
adc
mov
sarb
mov
inc
mov
inc
out
xchg
icebp
sub
sub
pcmpgtw
lret
xchg
notb
dec
pop
pop
repz
imull
jp
test
cs
jecxz
leave
iret
add
test
sub
in
int3
rcrl
icebp
jbe
ss
ds
pop
mov
dec
jne
scas
fidivs
pop
push
mov
cwtl
inc
push
jmp
push
jmp
sbb
mov
ja,pt
xchg
push
orl
int
lods
das
nop
adc
mov
bound
mov
add
inc
mov
std
mov
adcb
jl
hlt
popa
xor
dec
push
cmpsl
jmp
test
or
cmp
xchg
insl
shlb
push
jbe
ljmp
ljmp
jl
sbb
pop
push
push
sub
jl
movsb
pop
pusha
sub
sbb
insl
dec
movsb
es
enter
addr16
cltd
jecxz
cmc
icebp
jmp
push
sub
lret
in
fmull
lods
std
lret
and
or
and
jl
and
ret
mov
fisubs
add
fmuls
push
ljmp
add
dec
inc
push
outsb
mov
sub
jle
xlat
mov
fiaddl
ret
pusha
cmp
cltd
adc
out
repnz
inc
pushf
jnp
jp
lahf
f2xm1
jns
mov
mov
cld
mov
mov
in
rcrl
ret
jecxz
in
in
push
rcl
popa
jp
addr16
insl
lock
outsl
dec
lds
iret
mov
push
lds
mov
imul
les
adc
hlt
scas
imul
sub
pop
sbb
mov
cmpb
cmp
fwait
jl
filds
jmp
push
inc
vhaddpd
inc
jp
lea
add
sbb
add
imul
fxch
inc
push
sahf
pop
nop
pop
cltd
fistl
ret
rcrb
cwtl
inc
cmp
data16
fs
faddl
fisubrl
test
cmp
and
popf
fstpt
cmp
fs
add
mov
cmpsb
mov
xchg
xor
push
jmp
jb
xor
pop
push
cmp
sub
das
and
sbb
in
dec
jmp
sbb
xchg
dec
pop
xchg
sbb
jno
and
dec
nop
sbb
inc
jns
inc
das
and
push
ja
scas
or
and
cmp
rcrb
pop
inc
insb
in
cmp
dec
into
inc
dec
push
outsb
push
or
pop
fcomp
add
mov
add
mov
ret
lahf
jg
mov
jae
imul
rcrb
inc
test
pop
and
je
and
mov
std
xchg
sbb
imul
mov
push
cmp
sub
rcll
ret
push
add
adc
add
fcomps
xlat
add
jo
xchg
jge
fmull
pop
jle
test
fadd
daa
cld
pop
mov
jl
lods
adc
pop
cs
push
mov
mov
shlb
movsl
jbe
push
cmp
xchg
dec
daa
or
lret
repz
push
inc
hlt
cmc
sbb
orb
jae
xor
pop
das
mov
call
stos
test
or
jl
lea
xchg
test
arpl
nop
dec
or
sbb
jbe
jne
and
leave
push
gs
jnp
jb
jnp
sbb
test
cmc
bound
insl
fiaddl
cmp
jo
scas
add
dec
ret
cwtl
loop
pusha
and
hlt
cmp
mov
vphadduwd
mov
jmp
adc
lcall
pushf
push
loope
data16
cmpsb
insb
pop
cmp
fidivs
enter
push
popa
outsb
adc
add
sti
rolb
push
and
add
ffree
xchg
mov
adc
hlt
iret
xchg
data16
mov
push
push
outsl
in
sbb
shrb
outsb
leave
aam
add
jae
int
xchg
or
and
push
in
push
sahf
out
inc
popf
ds
fidivs
test
mov
outsb
sarb
push
dec
xchg
cwtl
mov
push
fcoms
rolb
pop
adc
ja
mov
push
inc
inc
das
fildll
cmpsb
adc
adc
sub
add
insl
out
ss
in
sbb
or
popa
imul
jge
sti
or
out
xor
sub
popf
push
clc
inc
shr
xlat
xchg
insb
mov
hlt
sti
add
gs
or
mov
popf
sub
lahf
dec
shrl
dec
jg
fsubrs
xor
test
push
loop
call
jne
lea
xchg
inc
mov
sub
test
out
cmc
cmp
lea
push
enter
inc
in
pop
xchg
dec
push
mov
imul
movsb
sub
je
xor
loop
jmp
inc
das
xchg
xor
mov
inc
sti
in
lods
jecxz
repnz
mov
cltd
pushf
push
cwtl
jns
aas
sub
mov
push
notl
cmp
jge,pt
xchg
cs
cmp
add
lds
jl
jmp
mov
push
in
cmpsl
sub
xchg
pushf
sub
mov
jg
push
outsl
jge
mov
fsts
outsl
jle
jmp
push
and
loope
sub
std
stos
mov
push
pop
lret
adc
sub
sbb
sahf
xchg
xchg
jge
push
sub
cwtl
dec
xchg
sbb
adc
jnp
inc
push
out
scas
popa
cmp
aas
dec
jbe
addl
cmp
pop
imul
mov
mov
rcll
mov
inc
sub
ficomps
jp
jge
jbe
test
lods
jmp
popf
cmpl
mov
incl
es
leave
cwtl
sbb
repnz
mov
adc
xchg
cmpsl
dec
mov
aad
dec
xor
pop
mov
pop
sub
sub
sbb
inc
pop
mov
sti
mov
rorb
cmpsl
movsl
inc
inc
ret
sbb
push
add
aad
stc
cmp
lcall
mov
push
push
loop
or
in
mov
cmp
xchg
nop
pop
jae
test
and
pop
out
dec
js
sub
xlat
push
in
mov
cmc
xor
cmp
pop
scas
aaa
xlat
je
outsl
or
mov
pop
and
xor
xor
cmc
adc
leave
aas
mov
adc
pop
push
mov
sub
fistl
pusha
mov
insl
popf
inc
mov
lds
js
or
pop
push
lods
pop
mov
addb
xor
pop
or
sahf
loope
shrl
mov
cltd
and
shrb
inc
inc
pop
cmpsl
mov
sub
lock
lahf
add
push
shll
jmp
imul
push
sarb
rcl
mov
mov
adc
popa
stos
fistl
jns
out
adc
jae
xor
jg
insb
add
push
fisubl
std
std
loope
mov
pop
dec
jmp
xor
in
int
stos
lods
push
pop
ds
cmp
sub
mull
mov
addl
int
jle
inc
idiv
jmp
xchg
out
sub
pop
xor
add
dec
xchg
push
adc
fidivl
repz
xor
dec
in
cs
pop
dec
cmp
push
cmp
test
mov
lret
andb
sbb
mov
xor
mov
cli
int
dec
sahf
inc
das
or
add
add
lds
xchg
shrb
out
jbe
jl
lcall
and
pop
and
repnz
mov
pop
ret
xor
test
and
lods
in
movsl
cmp
popf
cmp
decl
and
jne
and
cld
out
ror
adc
arpl
out
push
test
push
rcrb
push
add
pop
test
in
xchg
cwtl
clc
dec
cmp
lds
and
jmp
mov
mov
mov
outsb
das
pusha
xchg
xchg
push
repz
jp
in
pop
xchg
movsl
push
popa
mov
pop
cs
addr16
scas
lock
add
rorl
xchg
test
and
out
cmp
testl
add
push
dec
aam
lret
roll
sbb
push
outsl
std
pop
int
ret
enter
push
cmpsl
add
pop
cmp
pop
add
mov
js
and
mov
ljmp
mov
scas
shrl
std
or
jnp
mov
insl
sbb
decl
fcomip
neg
imulb
popa
inc
fwait
mov
bnd
cmc
incb
sbb
ljmp
fcoms
fs
sbb
dec
nop
xor
adc
out
in
inc
jne
sbbl
sbb
fs
adc
mov
xchg
negb
and
lea
icebp
cmpsb
mov
repnz
jg
cmpsb
mov
gs
push
insb
cs
pop
xchg
pop
mov
outsl
dec
pop
ret
mov
ja
xchg
jo
inc
insl
sbb
dec
loop
and
jp
inc
lcall
push
sub
idiv
push
xchg
mov
ja
lods
cmp
jmp
pop
scas
outsl
jle
outsb
or
fldenv
pop
sub
aad
cmp
int3
sub
push
fadds
cmp
sbb
cmpsb
punpcklbw
xchg
xchg
xchg
jge
rol
shll
js
xlat
adc
mov
imul
lods
fisubrs
es
test
jns
dec
add
insl
test
mov
lods
rcrl
pop
push
in
incl
clc
cmp
xor
addb
clc
mov
inc
out
jnp
les
les
mov
loop
mov
stos
cli
arpl
lcall
jb
outsl
lahf
pop
push
push
aaa
mov
out
dec
mov
sbb
insb
jne
mov
repz
scas
pop
mov
lea
inc
out
outsb
popa
std
sbb
fwait
or
cmp
xchg
push
inc
push
lods
outsl
cmp
roll
mov
rcl
enter
mov
clc
add
add
jecxz
int
lcall
int3
sbbl
xchg
sub
out
xchg
push
sbb
and
pop
jns
jecxz
mov
cli
cli
jno
cltd
sbb
fwait
adc
sub
dec
push
subb
pop
add
inc
test
or
and
cmpsb
int3
shll
inc
mov
aad
int
loop
das
inc
ret
push
mov
push
movsb
dec
add
xor
push
fadds
push
adc
jo
lret
mov
or
test
into
sub
addr16
mov
and
mov
bound
testl
xor
adc
stc
sub
mov
lods
xchg
sar
jecxz
negl
std
jb
xchg
dec
jb
notb
xor
imul
sbb
imul
test
scas
test
in
and
mov
mov
rcl
push
push
xor
test
jo
adc
pop
sub
push
pop
jle
popa
or
push
and
dec
or
stc
inc
lds
pop
sub
xchg
pop
sbbb
adc
or
fldt
lcall
or
xchg
adc
pop
sbb
inc
push
and
add
jnp
pop
dec
data16
in
sti
je
pop
dec
mov
stos
push
mov
sbb
enter
sbb
insl
mov
mov
rcrb
cmp
in
sarl
xchg
jnp
lret
and
mov
and
icebp
push
xchg
lcall
cmc
pop
in
and
out
pop
stos
popf
mov
pop
daa
lea
iret
push
sti
mov
or
jae
cwtl
mov
xchg
fidivs
add
or
orl
ljmp
xor
mov
lret
mov
icebp
push
mov
sbb
mov
nop
pusha
xchg
add
jbe
test
nop
fmulp
call
lea
leave
sahf
scas
mov
sub
pop
scas
cli
mov
fdivs
lods
jg
inc
sbb
mov
add
mov
pop
push
insb
or
stos
jl
fistpl
mov
mov
push
push
aaa
adc
xor
cmp
roll
pop
inc
loop
mul
fnstsw
cmp
leave
out
mov
and
fstps
cmpsl
dec
cmc
inc
cmc
push
in
int3
out
movsl
sbb
sub
mov
mov
inc
lods
scas
into
fiadds
or
js
lret
popf
sub
inc
or
pop
xchg
mov
enter
jmp
dec
int
jnp
or
lea
jb
add
out
xor
hlt
pop
inc
movsb
inc
stos
pop
and
sub
les
xchg
test
pop
outsl
sbb
sbb
stos
jo
pop
fs
clc
add
fstpl
cwtl
addr16
push
call
xor
int
sti
inc
test
clc
daa
jno
ja
test
ss
cmovo
and
mov
cmc
mov
xchg
in
jbe
popa
xchg
out
lods
inc
pop
cmpsl
stos
mov
sahf
outsl
cmc
adc
sub
jnp
add
pop
or
mov
in
pop
add
ficoml
fdivl
pop
sbbb
sub
test
pop
xor
out
push
lock
push
jne
mov
jp
fcmovb
mov
inc
loopne
or
fisttps
dec
js
push
push
jno
xchg
out
inc
mov
dec
pushf
sahf
dec
sbb
mov
sbb
sti
mov
push
out
push
and
and
xchg
in
or
sahf
mov
jb
push
mov
test
push
int3
pop
lret
pop
int
dec
or
pusha
leave
xchg
xchg
popf
std
mov
inc
push
movsb
and
jmp
push
icebp
lods
mov
and
int
addr16
mov
pop
jo
mov
jg
jle
jne
imul
mov
push
inc
mov
ljmp
push
cli
jmp
outsl
cld
mov
jnp
cmc
pop
jg
sub
sahf
in
out
hlt
jmp
ds
movb
mov
sbb
pop
mov
fcom
jno
or
test
xor
jp
and
push
cmpsl
mov
jns
or
shlb
mov
jne
pop
mov
mov
lea
add
fldenv
test
sbb
push
arpl
push
ds
add
inc
cltd
jbe
mov
repnz
std
fnstcw
sbb
and
dec
jge
rorl
lret
out
mov
mov
dec
xor
inc
push
pusha
scas
jecxz
in
mov
xchg
add
repz
sbb
pop
push
jns
int3
sbb
aam
lahf
dec
cltd
xlat
cvtps2pd
xor
sbb
jb
and
leave
imul
mov
cltd
repnz
mov
inc
insb
fisubrl
mov
xlat
sub
pop
cmp
loop
add
gs
mov
jp
arpl
js
mov
mov
xchg
dec
xlat
inc
dec
inc
aam
fcompp
and
sub
lret
inc
fsubr
xchg
adc
dec
add
les
xor
imul
fsubs
int3
fiadds
dec
mov
mov
push
cld
xor
jbe
add
mov
pop
movups
sub
push
es
cmp
iret
xor
inc
lcall
cmc
sbb
repnz
in
push
ds
loope
push
shrl
leave
mov
in
dec
sub
insl
out
cs
in
lea
das
lds
pusha
cmp
pop
lahf
jbe
mov
jmp
add
jne
arpl
push
imulb
push
push
jecxz
shll
insl
cmp
cmpsl
cmp
scas
das
stos
xor
dec
and
sarl
push
lret
cwtl
push
leave
mov
sti
or
jg
push
mov
test
inc
and
lods
pop
cli
jge
inc
pop
sbbb
mov
scas
mov
dec
mov
and
mov
repz
pop
push
dec
dec
mov
out
xchg
rorl
sub
bound
negb
mov
or
or
mov
shrl
mov
stos
jge
add
and
scas
xchg
movsb
aad
push
mov
hlt
mov
xor
test
jno
lds
add
or
push
hlt
mov
xchg
and
in
nop
ljmp
push
mov
sub
jne
push
jnp
add
adc
pop
inc
gs
sub
push
mov
jo
pop
pop
sub
ss
mov
enter
mov
sub
mov
test
ret
jbe
lds
popa
daa
movsl
pop
ljmp
xlat
rorb
loope
cmp
mov
push
das
test
enter
fwait
iret
fidivrl
or
and
add
xor
rcl
mov
pop
sub
loope
push
sbb
loopne
xor
ja
add
addb
jno
dec
inc
and
int3
sub
in
xor
adc
dec
and
lret
xor
xchg
loope
xor
fcoml
jne
dec
popf
call
or
shl
cld
mov
sbb
mov
mov
aam
xor
andb
das
sub
cmp
sahf
jecxz
fists
and
sahf
xchg
in
data16
cmpsl
and
add
aad
imull
pop
int3
dec
lcall
jbe
loopne
add
cmp
negl
jns
ds
cwtl
lea
push
imulb
add
jns
pusha
cli
xor
inc
mov
fisubrl
fildll
dec
lahf
inc
int
pusha
aad
jns
outsl
scas
sbb
xchg
popf
or
fucom
sbb
stc
dec
or
shlb
push
in
jo
stos
andb
shl
jl
sbb
dec
cmc
and
cmp
out
xor
pusha
mov
in
stc
jo
push
inc
call
movsl
dec
jae
leave
mov
sbb
sbb
stos
mov
out
or
movsb
mov
mov
movsb
mov
mov
mov
mov
or
out
pop
mov
sbb
xchg
in
imul
addb
inc
or
fldl
adc
inc
push
xor
inc
cmp
std
jmp
xor
push
fiaddl
pop
inc
cltd
aam
push
inc
fsubr
rcrl
xchg
push
das
js
int
scas
ljmp
lock
xchg
scas
mov
xchg
clc
in
pop
lret
iret
sub
fcomp
inc
cli
scas
xor
inc
pop
mov
lcall
scas
es
insl
std
lret
clc
dec
sar
mov
insb
xchg
sub
in
xchg
cs
mov
inc
je
hlt
mov
in
stc
std
xchg
je
cld
xchg
push
and
pop
push
adc
mov
cld
xchg
imul
and
and
xchg
push
in
test
jae
das
jmp
lods
push
push
mov
adc
mov
arpl
sub
lock
into
outsl
cmpsb
pminub
leave
jecxz
xchg
hlt
inc
xor
pop
sub
mov
bswap
push
push
imulb
or
and
xchg
jno
out
push
lret
cli
dec
flds
cmp
sbb
and
or
jg
and
push
mov
fnstsw
xor
aas
mov
loop
inc
inc
or
xchg
test
mov
inc
mov
loope
idivb
mov
hlt
divps
inc
mov
mov
xlat
cmpsb
push
fldenv
adc
bound
icebp
pop
test
fwait
js
ss
imul
inc
jmp
pop
and
mov
xor
stos
cwtl
mul
xor
daa
shrl
jmp
cmpsl
xor
mov
sarb
outsl
flds
sbb
int
jecxz
mov
ret
test
movl
sub
mov
and
mov
int
sbb
pop
mov
xchg
out
pop
cmpl
adc
lcall
mov
gs
sahf
shrl
pop
push
lds
jns
lea
es
xlat
sub
dec
sub
std
loope
pop
sbb
jns
pop
push
stos
mov
rcl
out
mov
and
dec
outsb
lret
add
xor
cltd
adc
fwait
stos
cmpsb
fmul
sub
stc
sub
cmc
ja
mov
and
mov
xlat
mov
and
mov
lods
adc
sub
pusha
jmp
cmovl
cwtl
jecxz
dec
subb
in
loopne
setl
and
lods
jge
pop
push
ds
cmp
pop
cmpsl
movsl
xchg
jb
add
pop
push
outsl
nop
mov
sub
jg
subb
ficomps
pop
jbe
push
cmp
js
lret
stos
stos
add
and
loope
push
repz
scas
lahf
lea
adc
jnp
mov
popa
dec
aas
cmpsl
and
outsl
daa
dec
jl
cmp
push
jns
mov
or
ffree
mov
mov
and
jmp
add
push
jp
divb
push
or
mov
fisttpll
lcall
aad
fistl
push
dec
pop
mov
mov
mov
cmp
insl
addr16
lea
mov
and
sub
lcall
cli
dec
sbb
aad
icebp
and
mov
fildll
outsl
jno
ds
xbegin
or
jle
sub
mov
icebp
xlat
nop
std
cwtl
movsb
decb
jp
and
adc
bound
fistpll
jbe
lds
xchg
inc
out
inc
loope
mov
hlt
sub
xlat
jl
pcmpgtw
fimuls
stos
ret
inc
push
aaa
inc
fs
mov
in
xchg
ret
adc
jns
flds
add
sbb
pop
xchg
inc
push
xchg
or
imul
shrb
jp
fidivl
xchg
xchg
sbb
negl
loop
nop
scas
jns
cmp
or
adc
mov
dec
ss
jecxz
dec
repnz
sbb
pop
jo
jnp
cwtl
pop
mov
push
mov
adc
repz
add
jp
insb
insb
cmp
int
sahf
aaa
jnp
data16
xor
pop
xchg
xchg
mov
cmp
icebp
and
sbbb
js
dec
outsl
sar
cmp
pop
fucom
dec
popf
and
mov
fiaddl
xor
pop
mov
stc
call
inc
imul
xor
repz
test
and
dec
inc
movsl
jg
fld
push
jne
rolb
mov
push
xchg
stos
shll
dec
aaa
inc
dec
cmp
lahf
jno
sbb
xchg
and
in
aad
rcll
pop
lret
dec
rclb
sbb
addr16
shl
jno
or
inc
daa
scas
iret
insb
fxch
xor
jno
cmp
jns
inc
mov
mov
das
in
xchg
pop
xchg
mov
shrl
mov
mov
pop
sub
mov
iret
mov
ficompl
mov
int3
lods
imul
imul
sbb
dec
lods
pop
inc
fldenv
xchg
stc
cld
jge
cs
test
pop
jo
cmp
pop
enter
push
pop
inc
popa
jecxz
xchg
push
mov
add
shlb
data16
nop
xor
addr16
lcall
fldl
mov
fbld
mov
subb
xor
ficompl
xchg
cli
mov
cwtl
pop
jmp
shrl
dec
push
bound
cld
out
sub
lock
into
sbb
push
fwait
inc
fucom
dec
dec
imul
filds
cmpsb
fiadds
ja
xlat
fstpt
outsl
fdivl
pop
and
in
lock
ret
jo
add
fdiv
ss
inc
or
mov
fnstenv
pop
test
jg
jbe
add
test
subl
add
sbb
cmp
ficoms
cmp
lret
xor
repnz
xchg
xor
and
lcall
popf
addb
std
ds
and
jl
xor
jno
das
out
xchg
add
ret
and
das
fisttpll
ds
imul
lods
lea
pusha
fstps
out
sbb
push
mov
outsb
and
sbb
mov
ja
insb
pop
add
jle
lcall
xchg
imul
fcmovnb
push
pushf
push
mov
stos
pushf
push
mov
fildl
jnp
push
adc
pop
repnz
push
out
xor
push
jmp
add
popf
stos
add
dec
pop
fstpl
roll
dec
or
or
mov
cltd
jg
fsub
jg
inc
ja
adc
xchg
mov
lds
movsb
test
push
pushf
mov
pop
cltd
mov
add
mov
movsb
iret
xor
int
push
xchg
xchg
pop
jmp
fcompl
ss
fwait
inc
and
aad
jg
stos
mov
enter
jp
push
mov
sbb
out
fwait
push
inc
mov
push
into
dec
insb
lret
mov
dec
sbb
mov
inc
cwtl
ds
mov
cld
cmp
cmp
push
mov
or
xor
mov
gs
jbe
repnz
add
sbb
sbb
scas
jge
push
imul
jns
add
add
mov
dec
out
push
ss
push
in
sbb
sarl
cltd
or
outsb
popf
testl
pop
xor
inc
dec
sbb
dec
inc
insb
xor
lds
cmp
rcl
xor
lahf
add
stc
insb
or
xor
enter
cmp
cmp
inc
ficompl
gs
mov
push
das
dec
cmp
in
loopne
push
pop
shlb
imul
imul
repz
scas
dec
adc
ret
mov
fmulp
jmp
push
sub
fstpl
loopne
lret
sub
and
mov
pusha
push
pop
in
sub
aad
pusha
rcrl
adc
lahf
jecxz
inc
or
mov
ret
insb
sub
mov
aam
mov
cmc
xchg
mov
or
mov
jp
mov
jecxz
outsl
inc
fwait
xor
ret
mov
jo
js
mov
hlt
cmpsb
dec
dec
cmpl
pop
mov
std
xchg
or
inc
scas
idiv
mov
call
imul
shl
adc
sbb
mov
jecxz
push
cmpsb
mov
sbb
js
pop
mov
mov
enter
xchg
cmp
aam
testl
dec
mov
dec
fsubrs
or
imul
int3
dec
adc
jge
cmpsl
cmp
push
cs
jno
sub
out
add
jnp
dec
scas
cmc
xchg
mov
mov
xor
or
repnz
divl
sub
mov
jno
insb
inc
sbb
sub
test
mov
cmp
pop
test
or
fidivrl
test
push
push
mov
mull
inc
cltd
sub
cmpsl
pop
dec
mov
iret
adc
xorl
adc
push
les
add
inc
ret
xor
push
inc
and
lea
jmp
das
cltd
ret
mov
cmpsb
inc
push
aad
lds
popf
cmp
fs
ret
in
jo
test
cwtl
jmp
cmp
in
cli
cmp
jmp
pop
pop
inc
mov
adc
sti
mov
cmp
sub
movsb
ds
xorl
imul
insb
in
sbb
popa
movsl
push
cltd
in
mov
pop
pop
xor
fdivl
lea
mov
or
adc
dec
push
dec
repz
cmp
fisubl
js
jle
aaa
rolb
sub
shrl
lea
bound
mov
mov
xchg
jbe
repnz
push
movsl
xor
sbb
movsb
roll
arpl
cwtl
jns
stos
shrl
push
movsb
mov
in
mov
fptan
lea
cmp
ror
mov
xchg
jp
fmul
mov
cmp
loopne
inc
dec
clc
loop
into
jl
stos
xor
sub
cmc
aad
fidivl
rcl
jno
scas
dec
xchg
ljmp
lds
adc
stos
mov
scas
iret
adc
adc
sbb
xchg
movl
aad
out
add
scas
jno
fnsave
push
and
imul
movsb
ret
push
mov
sub
pop
jmp
cmp
mov
ljmp
scas
cmp
jb
subb
cmp
ret
xchg
sbbb
scas
or
notb
dec
adc
pop
in
popa
fucomi
or
paddb
daa
leave
fidivl
cli
sti
and
jbe
cs
ljmp
or
popf
ret
mov
sahf
cmp
outsl
sub
test
mov
jbe
dec
cmpsl
inc
jnp
add
icebp
mov
mov
add
loope
adc
mov
push
loop
lahf
nop
daa
and
mov
mov
xchg
or
pushf
mov
pop
pop
push
decb
mov
mov
cwtl
cmpsl
ficoms
mov
gs
fcomip
push
mov
xchg
xor
je
repz
mov
jg
inc
ret
orl
lcall
dec
dec
and
sahf
inc
xor
mov
dec
fcoml
sahf
mov
jl
adc
out
cld
pop
lds
or
mov
pop
lds
mov
cmp
jge
fiadds
push
popl
enter
pop
add
pop
and
jnp
pop
call
or
in
test
xor
push
cmovno
test
into
dec
inc
push
je
cmp
mov
pop
inc
inc
dec
mov
cli
xor
and
lods
sbbb
mov
or
inc
xorl
sbb
or
mov
das
dec
xor
sbb
sti
cwtl
divl
add
or
push
pop
xchg
ja
xchg
xchg
rorb
rcr
xor
enter
lret
cmp
mov
in
nop
call
push
fcoms
dec
pop
fdivrl
aad
adc
dec
jle
es
lods
xor
addl
fldenv
and
sbb
popa
cmc
js
pop
ds
ret
es
dec
icebp
dec
inc
jle
xor
ds
inc
xchg
cwtl
out
gs
and
in
std
bsf
scas
xchg
ja
movsb
movsb
xlat
fistpll
decl
mov
push
sub
lds
cld
loop
jle
ret
iret
test
je
ljmp
and
nop
aas
push
daa
mov
mov
mov
scas
mov
outsb
and
mov
mov
clc
xchg
jae
cmp
jmp
xchg
and
lret
sbb
or
bound
add
lods
mov
jecxz
xor
jb
into
fmull
cld
lahf
and
scas
jg
jns
pop
push
hlt
loopne
bnd
stc
mov
daa
test
cwtl
xchg
mov
xchg
stos
cmp
pushf
jp
test
sub
aam
mov
push
xor
repnz
int
xor
pop
jns
outsl
lea
mov
and
add
fisttps
sbb
xor
sarb
pop
jns
add
jg
and
adc
mov
dec
je
pusha
add
mov
push
roll
xchg
insb
mov
push
rorb
xchg
nop
iret
fidivl
stos
adc
xchg
jmp
cmpl
add
js
cmc
sbb
clc
adc
push
jmp
add
cli
mov
test
int
push
std
push
icebp
push
push
testb
int
hlt
andl
mov
push
jmp
js
xlat
cmp
xor
mov
dec
cwtl
xchg
lret
iret
rorl
push
out
lcall
inc
or
xor
andl
jnp
cwtl
movsb
adc
cltd
sbb
out
into
pop
pop
lock
ja
andb
xor
into
testb
mov
in
fwait
dec
mov
loope
mov
stos
aad
mov
jne
in
adc
inc
cmp
lret
push
mov
xor
xchg
adc
imul
data16
loop
les
fdivrs
push
stc
cmp
jg
add
pop
mov
pop
pushf
jae
and
xor
psubusb
jns
pop
iret
mov
sub
and
out
sub
mov
or
int
cwtl
mov
cld
shr
fwait
inc
mov
push
mov
cmpsl
jno
jle
pop
nop
cmp
or
sbb
sub
mov
in
roll
mov
jmp
cs
mov
into
push
inc
inc
cwtl
sbb
inc
imul
or
movsb
in
addr16
xchg
icebp
xchg
jle
cli
jne
sub
xorb
loopne
aad
inc
std
or
xchg
lea
inc
sub
out
in
xor
popa
inc
or
push
adc
stc
add
roll
or
fmul
cmp
pusha
sub
rcrb
push
mov
test
push
and
xor
addr16
and
jo
scas
lahf
and
subl
add
xchg
or
sub
mov
lock
lret
inc
push
jl
inc
fstpl
push
mov
push
jns
xor
inc
dec
in
push
das
inc
aas
pop
inc
dec
pop
sbb
jns
ror
xchg
sbb
inc
adc
adc
add
in
push
sahf
mov
les
push
inc
dec
jae
or
into
push
popf
stc
adc
xor
mov
fistpl
xor
dec
sub
push
data16
sti
push
push
movsb
mov
iret
dec
lock
movsl
push
cmp
icebp
xchg
sbb
dec
add
stc
or
adc
pushf
sub
adc
xor
mov
test
inc
mov
stos
cmp
push
loope
movsl
lods
popa
push
mov
outsl
cmp
and
add
jne
sahf
stos
aam
sti
dec
cmp
and
push
xlat
lods
lcall
mov
sbb
repz
call
rcrl
in
cld
xchg
dec
inc
arpl
add
sbb
jp
pop
in
push
inc
hlt
xchg
cs
sub
ret
jmp
addl
xchg
sti
jb
pop
xor
inc
je
jns
jl
push
mov
fwait
stos
cli
jb
jae
rolb
adc
sub
pop
xor
bound
subl
shlb
pop
xchg
mov
out
and
inc
mov
lea
inc
pop
mov
cmpsl
ret
xchg
xorb
sahf
dec
inc
lcall
div
mov
dec
sbb
cmpsl
andb
cmp
cli
mov
push
das
popa
mov
mov
xchg
int3
pop
jns
jmp
adc
sbb
bound
lcall
stos
add
jecxz
and
mov
inc
stc
popf
dec
dec
in
mov
or
aam
push
jecxz
enter
fildl
insl
cltd
outsb
fldt
fstpt
adc
rcrb
cmpsl
pop
jl
inc
mov
sahf
adc
xlat
pop
shrb
mov
loopne
cltd
int
iret
inc
push
ficoms
inc
mov
dec
mov
jb
lods
jb
push
jno
flds
or
xorb
add
testb
xchg
sbb
jbe
fisubs
loop
xor
stos
and
xchg
push
mov
dec
jmp
scas
ljmp
sub
push
pop
repz
loop
pop
mov
pushf
push
sarl
mov
pop
mov
popa
mov
dec
test
sub
lods
popf
int
mov
xor
shl
sub
push
icebp
or
mov
mov
out
int
inc
sub
in
mov
jecxz
mov
pop
or
mull
pop
stos
dec
ljmp
repz
ss
fbstp
jg
lcall
xchg
and
cmovo
inc
and
rolb
enter
xchg
pop
iret
fstl
mov
mov
in
fdiv
mov
sarl
outsl
or
push
push
pop
shlb
cmp
imul
add
mov
ret
mov
sbb
inc
xor
cs
orb
inc
mov
jecxz
popf
aam
inc
lret
cmp
jo
sub
gs
test
leave
xchg
mov
into
mov
push
jecxz
test
mov
pop
out
aad
or
inc
rcrl
out
sub
jbe
lds
scas
mov
gs
fldl
ljmp
and
in
scas
movsl
fs
or
shll
pushf
jnp
out
inc
mov
int
arpl
add
lcall
sbb
in
stos
pop
fwait
cmp
ljmp
or
jns
push
inc
imul
cld
dec
lods
fs
cld
mov
inc
jae
int
adc
mov
outsb
and
mov
fs
ret
mov
mov
cmpsb
test
enter
mov
pushf
xor
pop
mov
xchg
push
mov
pop
das
xchg
into
ret
add
mov
mov
lcall
pop
push
inc
add
xor
mov
inc
pop
mov
js
sub
repz
scas
mov
pop
in
sti
push
adc
push
and
jo
movsl
js
je
xchg
invd
cmp
adc
cmp
fdivl
mov
push
ds
or
sub
cli
push
mov
addr16
cltd
mov
jmp
stos
adcb
in
push
fmull
sbb
cmpsb
cmpsl
arpl
les
leave
rcl
jo
fsubs
std
xchg
clc
inc
mov
imul
cltd
and
mov
fwait
mov
jg
xchg
and
add
lds
pop
lea
loope
or
negb
repz
testl
jno
sub
cmp
stos
in
jl
cmp
subl
cmp
scas
clc
divb
xchg
and
xor
test
stc
or
xor
mov
test
add
sub
std
cwtl
std
ljmp
push
push
div
dec
nop
and
push
inc
mov
sarb
popa
push
lds
mov
sbb
adc
test
js
jnp
dec
jo
inc
rorb
push
aad
loope
into
mov
call
push
mov
xor
lret
pop
add
std
pop
repz
sti
pop
add
and
sub
pop
lock
push
stos
out
fistpll
jbe
addr16
arpl
js
mov
adc
jo
mov
dec
jae
loop
shrb
sahf
mov
es
negb
adc
inc
xchg
into
stc
fucomp
das
mov
sub
sti
pop
lods
js
mov
inc
ret
cli
inc
daa
mov
cltd
mov
and
aas
add
stc
movsb
or
into
bound
mov
xor
jae
jbe
aaa
lds
lock
cltd
out
movl
cmpsb
cmpsl
enter
leave
xchg
inc
add
lock
push
push
jns
or
scas
adc
push
dec
repnz
in
loop
xor
push
mov
cs
in
adc
rcrl
pop
jne
fwait
ror
ret
adc
dec
dec
inc
test
or
mov
xchg
push
fst
int3
jmp
leave
add
ret
je
inc
test
adc
push
and
inc
inc
or
cmp
dec
sub
jnp
enter
popf
or
fistpl
lahf
push
and
sub
out
lret
fprem
mov
shll
leave
mov
and
mov
sbb
bound
mov
add
jp
or
and
cmpsb
mov
or
outsb
es
inc
cltd
lods
jge
inc
test
xchg
mov
and
into
pop
call
mov
cmc
inc
and
lods
out
push
add
jmp
out
fcompl
and
inc
fs
sbb
jecxz
and
decb
or
xchg
lods
jb
xchg
sub
sub
xchg
mov
push
test
dec
dec
bound
lds
sub
hlt
loope
addl
bound
movsl
aas
adc
push
push
dec
xchg
or
or
in
mov
inc
push
pop
sbb
sub
cmp
andb
jb
mov
mov
vpsrlq
ds
cmp
ret
sarb
lret
inc
cmc
push
pop
jg
pop
movsb
pop
out
in
fsqrt
aas
icebp
lock
inc
fldcw
mov
das
sbbl
sub
and
incb
cmovo
dec
pop
and
popf
inc
loope
ret
xor
cvttps2pi
mov
lds
push
push
ja
push
xchg
cld
pop
insb
push
xchg
adc
lods
in
xchg
iret
cmp
fsubl
pop
lahf
add
add
xchg
arpl
sub
push
sub
je
push
stc
rol
lea
insl
ret
xor
mov
push
sbb
sub
je
jg
loopne
pushf
mov
arpl
or
les
test
inc
js
jae
sub
xchg
subb
fsubrl
ret
sub
sub
pop
mov
dec
sub
or
and
jle
mov
sbb
pop
jmp
mov
mov
mov
fisubs
mov
aad
xchg
mov
insl
xlat
dec
pop
in
cs
ds
push
pop
outsb
dec
shl
scas
out
std
lds
mov
ficoms
lcall
rcll
dec
nop
out
hlt
movsb
and
fidivrl
fwait
mov
in
adc
push
pop
jno
sub
xchg
rorl
nop
or
pop
fldl
lods
in
leave
and
jbe
mov
imul
or
repz
cmp
stos
cmpsl
stos
scas
lods
sbb
dec
lods
push
inc
jae
lods
jg
stc
ret
mov
mov
popa
addr16
inc
inc
mov
cwtl
add
jp
or
sbb
icebp
pushf
adc
jge
repnz
xor
sub
jns
and
mov
call
in
arpl
popf
pop
xchg
sbb
in
loope
sbb
inc
or
es
cli
sbb
pop
xchg
in
and
add
outsb
jmp
out
insl
sbb
jge
repz
add
arpl
imul
in
jp
adc
and
inc
pop
and
pop
add
jne
jp
push
cmp
add
cmovs
push
fnstenv
sbb
jle
dec
scas
mov
aas
test
push
imul
shr
jns
xchg
sbb
filds
aas
pushf
fcomps
adcl
xchg
das
inc
cwtl
ret
sti
test
xchg
ds
xlat
out
adc
jmp
mov
loopne
iret
dec
add
out
cmp
inc
jl
fisubs
loope
push
insl
pusha
xor
scas
push
popf
pushl
bound
xchg
andl
and
push
or
sub
and
mov
inc
mov
fcom
or
loope
je
stos
je
fnstsw
ret
xor
stos
pop
movsb
inc
add
jle
inc
add
sub
lds
std
mov
repz
test
jb
orl
mov
ds
xchg
mov
or
divl
inc
jle
pop
mov
ja
fistpll
movl
sub
xchg
aaa
ret
push
roll
push
jp
enter
call
xchg
imul
je
sarb
insl
pop
xchg
lods
bound
cs
pop
sarb
ds
mov
icebp
stos
xchg
jmp
xchg
mov
or
pop
mov
sub
scas
popa
ds
in
and
cs
ss
lret
lds
push
gs
sub
sub
jle
push
inc
xrelease
inc
dec
pop
cmpb
lds
push
mov
adc
and
jl
pop
adc
cmpsl
push
adc
pop
mov
or
xchg
dec
sarb
xor
cmp
adc
insl
rcrb
cwtl
pop
outsb
push
imul
shl
and
repnz
stos
int
xchg
mov
pushl
test
popa
inc
jno
push
cmp
insb
mov
xchg
sbb
call
pop
icebp
mov
pop
call
sahf
incl
dec
add
mov
iret
cmp
add
mov
ret
in
ret
pop
outsl
lds
jecxz
stos
test
lods
cmp
popa
ds
sbb
pop
xlat
sbb
add
mov
mov
jno
cmp
xor
adc
cmp
pushf
pop
mov
lods
push
sti
lods
sub
sub
and
sahf
out
lcall
out
jmp
fistps
jle
addr16
push
jo
in
pop
push
and
dec
sub
mov
push
mov
out
daa
fdivrp
push
jle
push
dec
dec
and
sarb
mov
test
imul
dec
fs
jno
dec
lcall
dec
addb
adc
add
and
fcoms
leave
adc
jno
xor
jb
or
xlat
jno
sbb
js
clc
fwait
adc
popa
repnz
ret
hlt
pop
jbe
in
mov
jnp
pushf
mov
out
jae
div
xor
add
out
pop
jb
fldl
sub
sahf
push
push
dec
repz
mov
mov
jge
xor
adc
cmp
loope
fbld
mov
stos
outsl
fildl
enter
cld
sub
mov
into
jge
fadd
mov
sub
sbb
sub
andb
divb
jl
jmp
test
ret
loope
sub
insb
sbb
aaa
pushf
and
inc
lock
sbb
cwtl
sub
sarb
out
xchg
lods
aam
push
js
push
std
dec
xor
hlt
jp
and
push
ds
fdivr
sarl
stos
fwait
xchg
sub
and
pop
sbb
in
stos
ret
lcall
test
imul
jge
xchg
cvtdq2ps
ret
cmpsb
repnz
add
jns
add
add
push
sub
sarb
fcomi
pop
and
js
icebp
mov
mov
out
xchg
adc
add
inc
ljmp
xchg
dec
insl
sbb
addr16
and
pop
enter
mov
push
fs
dec
loop
inc
dec
sub
pushf
jb
pop
lea
xor
xchg
movsb
adc
inc
sarb
repz
rclb
sub
aad
je
je
push
div
inc
add
pop
int
or
mov
jnp
lock
push
mov
inc
aas
or
pop
push
inc
inc
scas
movsb
pushf
sub
pop
test
bound
jae
fcomps
cmp
sbb
cmp
push
ret
mov
push
fwait
push
or
cmpsb
xor
xor
fwait
jb
sbb
enter
xchg
push
idiv
mov
jae
jecxz
jecxz
mov
xchg
mov
push
mov
cltd
test
leave
in
stc
mov
int
mov
pop
shlb
adc
xchg
adc
adc
mov
sub
cmc
xor
xchg
rcrb
outsb
adc
inc
ret
dec
sbbb
dec
sub
ja
std
and
mov
cwtl
sub
xor
cmp
cltd
inc
cmp
inc
test
push
jns
dec
dec
mov
movsl
xchg
icebp
data16
xchg
test
and
into
in
inc
js
mov
mov
mov
scas
mov
lcall
repz
test
clc
pop
pop
adc
lods
movsb
jle
mov
roll
push
xchg
inc
dec
adc
jmp
sbb
cmp
addl
xchg
imul
orl
aas
xchg
sub
inc
sbb
push
shll
lret
das
sbb
dec
mov
addr16
test
xorl
xor
sub
outsl
nop
cmpsl
sbb
and
movsl
outsl
rcrl
mov
jbe
insl
xor
scas
mov
ja
add
sub
xchg
pop
addb
mov
cmc
sub
push
addr16
in
cmp
or
and
inc
mov
lea
add
ucomiss
xor
or
lods
out
outsb
mov
out
enter
shrb
dec
mov
dec
xor
add
xor
fcompl
stc
mov
jmp
jne
lock
fbstp
fcmovnbe
aam
push
mov
mov
xchg
cmpsl
inc
int
cmp
or
dec
pop
je
inc
dec
cmp
jle,pn
cmpsb
and
pop
cmp
mov
adc
jno
shr
xchg
adc
push
and
sub
xlat
into
xor
xchg
sub
fistpll
int
mov
xlat
sbb
mov
or
or
addb
pmullw
ja
adc
repnz
jb
or
pop
sub
or
iret
jb
push
fisttpll
loop
pop
xchg
movsl
lret
xor
and
divb
mov
mov
daa
enter
pop
mov
aas
cltd
fsubr
bound
mov
gs
pusha
mov
mov
pop
lods
cmpsl
sub
sub
outsb
xor
popf
sti
push
pop
inc
mov
push
inc
rcll
push
cmp
dec
ds
lds
jp
mov
lds
in
imul
shrl
mov
mov
mov
dec
test
call
pop
pop
cvtps2pi
inc
jnp
test
iret
loopne
xchg
lret
sqrtps
jbe
mov
mov
xchg
dec
xor
cmp
mov
pop
push
cmpsl
fcmovnbe
mov
xlat
push
sub
loopne
cmp
mov
jne
ret
and
jns
icebp
dec
clc
jge
adc
pop
adc
jmp
push
inc
and
xchg
or
arpl
inc
and
xor
out
mov
xchg
into
aaa
roll
scas
sub
aad
add
jbe
sbb
dec
dec
fisubrs
sub
sub
mov
pushf
fistl
mov
cmp
subb
stos
push
sbb
mov
push
cmpsb
sti
sbb
rclb
lret
fimull
mov
push
cmp
fmul
jbe
xchg
jmp
imul
movsl
sub
inc
sbb
clc
xchg
jmp
cmp
mov
ja
pop
inc
das
push
ss
xor
pop
loop
jns
frstor
in
inc
jnp
pop
rorb
aad
mov
ja
jae
sub
inc
cmp
inc
push
js
adc
dec
xor
out
jp
jmp
fisttps
sub
and
idiv
outsb
lahf
xchg
pop
divb
in
mov
xor
cld
mov
dec
imul
cmp
adc
push
aam
movsl
adc
jl
mov
cmp
ljmp
sbb
dec
pop
aad
out
mov
outsl
sub
sbb
add
sub
dec
xchg
fsub
repnz
sub
rcl
mov
or
mov
and
ret
outsb
mov
mov
out
scas
cmp
test
inc
mov
pop
sub
dec
xor
mov
jns
jb
mov
js
rclb
pop
add
cwtl
fists
loop
jnp
fcomps
popf
or
ret
mov
aas
inc
inc
test
add
fwait
cmpsb
call
subb
aas
outsb
cmp
mov
lods
cmp
sarl
xor
insb
cmp
xchg
mov
ljmp
std
shl
aam
mov
push
or
test
push
jbe
call
aaa
outsb
adc
mov
in
in
xchg
or
pop
pop
sar
data16
pop
jecxz
inc
aad
call
push
fdivrs
jg
cwtl
pop
int
inc
lods
mov
out
inc
jge
xchg
cmpsl
mov
in
push
and
xlat
outsb
lock
in
movsl
sbb
or
aas
lahf
xor
imul
push
lods
and
xor
add
lods
daa
out
loope
daa
xor
fnstenv
test
mov
data16
pop
inc
sub
ja
xor
inc
mov
in
add
jne
push
shr
xchg
push
push
pop
decl
call
out
add
test
sub
pusha
mov
xchg
sti
in
cmpsl
xchg
push
jns
xor
push
xchg
je
dec
and
subl
cmp
cs
or
sub
clc
int
lock
ss
cmc
fcmove
pop
jmp
lods
outsb
xor
mull
jb
add
mov
shl
scas
test
jmp
hlt
loop
cmpxchg
fdiv
test
sub
loop
inc
notl
xor
or
inc
insl
cmpsl
add
xorb
inc
dec
sahf
loope
addl
lret
and
xor
out
inc
xchg
jno
sub
pop
imul
mov
lcall
mov
adc
repnz
push
adc
cmc
inc
add
les
ljmp
jg
mov
cwtl
rolb
dec
xchg
bound
mov
leave
or
incl
dec
or
pop
jmp
fndisi(8087
dec
test
mov
mov
xchg
out
aam
cltd
cwtl
fsubrs
out
ds
lock
scas
std
lcall
add
fsts
daa
jmp
cld
jno
filds
sub
pop
adc
in
add
in
mov
sub
mov
push
mov
out
repz
popf
mov
les
test
mov
mov
add
sbb
outsl
test
outsl
sbb
sbb
fistpl
fsubrl
outsb
dec
cmpb
mov
bswap
shrb
or
rorb
jne
sub
jg
jl
test
sub
cmp
mov
in
xchg
mov
leave
add
jecxz
in
sbb
leave
cmp
sbbb
sbb
mov
sbb
add
lret
imul
sub
xchg
aas
cs
mov
xcrypt-cbc
cmpsl
xchg
xchg
shlb
loope
in
js
movsb
sub
pop
push
cmpsl
xlat
xor
xchg
inc
sub
jge
or
pop
dec
push
loop
mov
xchg
xchg
adc
sub
jecxz
xchg
jbe
pop
cmp
movsl
lods
imul
inc
cld
fistpl
mov
mov
daa
jno
decb
adc
daa
imul
mov
lods
fnstenv
and
jno
imul
push
adc
cmp
fnsave
push
pop
lea
mulps
negl
jg
or
sub
dec
jmp
and
cmc
jne
lea
cmp
pop
jmp
sbb
xchg
and
inc
sbb
or
repz
xor
sarl
imul
enter
scas
mov
cli
xchg
jl
pop
adc
sbb
test
sti
cmc
push
loope
sub
and
lahf
xor
jns
push
test
stc
mov
inc
and
xor
popa
dec
rolb
jl
inc
xlat
lock
scas
les
insb
pop
rcrl
pop
cmp
dec
hlt
push
adc
adc
dec
test
inc
push
cmpsb
jg
pushf
push
xchg
jg
cmp
jb
dec
orb
sbb
jno
lock
pop
mov
jne,pt
cmp
push
loopne
adc
scas
jo
push
iret
dec
mov
mov
repnz
push
inc
popf
xor
stos
movsb
add
xchg
mov
or
cwtl
and
pop
jb
mov
std
je
mov
lret
and
adc
mov
fidivs
pop
sub
and
add
dec
icebp
mov
bound
jmp
call
xchg
daa
pop
xchg
scas
andl
push
andb
push
dec
pop
sbb
mov
inc
push
sbb
test
dec
adc
into
push
rcr
aad
mov
loope
mov
shrb
push
test
lcall
rol
fiaddl
push
dec
sub
cmpsb
xchg
daa
jnp
cmp
ljmp
fists
or
int
gs
insb
mov
call
rorl
divb
jno
pop
xchg
jmp
dec
add
clc
testb
les
sbb
movsb
inc
push
inc
mov
adc
add
push
iret
sarb
cmp
or
ss
sub
or
push
je
bswap
push
sbb
mov
notl
jno
dec
aaa
fldl
addb
sbb
mov
test
fisttpll
icebp
and
xlat
xchg
fldl2e
add
add
lods
hlt
push
mov
dec
cmp
iret
mov
dec
aam
pop
movsb
adc
orb
push
ret
mov
bswap
cwtl
xchg
pushf
sbb
add
scas
stos
into
ficompl
ss
lea
add
add
mov
into
cmp
lret
dec
xchg
add
icebp
iret
sbb
ficomps
fiadds
jnp
fimuls
sub
out
gs
jbe
add
mov
adc
and
and
addr16
pusha
jno
and
mov
pop
cltd
mov
jmp
hlt
mov
fsubrs
push
inc
clc
in
in
push
jb
pop
int3
inc
xchg
fcoms
fdivp
popf
and
rclb
jl
movsb
shr
fs
xchg
fnstenv
add
dec
inc
les
mov
insb
daa
repnz
vmwrite
out
add
or
movsl
mov
and
pushf
int
pop
scas
and
or
cmp
fpatan
jno
loop
rcr
xor
add
ret
scas
dec
divl
dec
imulb
push
xchg
data16
xor
aad
lock
out
or
in
shrb
push
aaa
and
jns
popf
xchg
jnp
dec
mov
or
mov
aas
inc
arpl
test
jmp
fwait
jo
imul
push
cmp
mov
in
xchg
popf
cmpsl
es
lret
dec
mov
fstpl
test
mov
loop
cltd
mov
xor
cmc
fstps
xchg
sbb
movsb
jecxz
jbe
inc
outsb
mov
adc
psrld
testl
scas
pop
jecxz
ret
movsl
push
ljmp
repnz
jg,pn
movsl
mov
cmp
movaps
pop
add
das
aas
ficomps
outsl
test
fwait
xchg
jo
dec
sti
adc
cmp
sbb
mov
fwait
mov
xchg
sub
mov
mov
add
xchg
xlat
cmp
call
jnp
sti
add
lea
inc
cmp
pusha
cmp
sub
sub
rcl
mov
mov
pop
test
add
and
lret
std
and
icebp
mov
arpl
sti
movsb
into
jg
mov
xchg
int
adc
ds
cmp
sub
lea
popf
pop
test
jo
test
xchg
movsl
mov
xchg
xchg
jae
dec
add
inc
ficompl
ret
imul
test
push
shll
aam
lock
insb
pop
movsl
nop
aad
adc
out
mov
jg
mov
ficoms
in
push
or
aad
call
sbb
out
mov
cli
mov
outsl
cld
cmp
xchg
mov
mov
jmp
insl
mov
mov
nop
mov
mov
xor
pop
push
jo
dec
sbb
scas
jmp
sbb
jns
mov
cmp
push
sub
rcll
push
xchg
je
fxch
lock
xchg
xorl
lret
cmp
cmpsl
hlt
and
cltd
es
cld
fwait
jae
mov
sub
fidivl
cmp
stos
pop
inc
lret
xchg
andb
sbb
sbb
les
mov
fdivrs
sub
cmp
mov
mov
xorl
inc
jl
and
sbb
and
lahf
sar
jecxz
xor
pop
int3
add
cwtl
mov
add
outsl
adc
push
test
lea
xor
inc
pop
cmp
in
inc
jo
cmc
aas
dec
push
out
mov
cmp
outsl
sub
dec
and
cmc
rorl
and
test
fbstp
sub
xchg
mov
lcall
or
add
xchg
pop
or
mov
push
insl
cmpsl
add
in
test
mov
gs
and
out
cmp
xchg
or
aad
hlt
xchg
outsl
je
scas
xchg
sar
push
push
sub
stos
cmpsl
test
aas
mov
and
mov
pop
lret
sub
mov
cmp
jle
cmp
mov
jne
idivb
cmpl
int3
mov
lds
ds
mov
or
jecxz
jle
lret
repz
pusha
jae
lock
cmp
xor
mov
mov
or
ret
aam
sbb
sbb
mov
jle
aam
out
ljmp
popa
adc
adc
adc
sbb
jb
fidivrl
or
xor
fcoms
push
fucomi
and
sbb
js
divb
push
loop
lds
lret
jp
fldenv
or
jnp
sub
fsubs
cmp
and
cmc
mov
shlb
insb
cmp
sbb
fcmovb
push
sahf
lods
pop
inc
xor
enter
test
mov
jb
push
shl
push
js
outsb
fisttpl
adc
insb
dec
xchg
dec
popf
add
mov
or
mov
fcompp
rorb
popa
movb
popa
xchg
cmp
push
iret
cltd
xchg
decb
push
sarl
pop
outsb
xor
adc
xor
rcrb
mov
fildl
mov
push
mov
cmc
jp
cmp
lods
mov
cmp
dec
div
add
fidivrs
mov
push
outsl
dec
jne
cmpsb
pop
pusha
addr16
mov
adc
aam
mov
add
aas
andl
or
cltd
imul
add
jge
mov
pop
dec
push
xchg
pop
or
push
int
jecxz
scas
repnz
popf
orb
ljmp
ss
aam
hlt
jb
mov
gs
cltd
fildll
shll
sbb
add
ret
pop
and
popf
xchg
push
push
sbbb
in
mov
outsb
loopne
mov
fwait
mov
sub
out
imul
fisttpll
out
aaa
fldl
push
ja
orb
in
mov
inc
aas
sub
out
mov
ljmp
jp
mov
filds
sti
mov
and
sti
and
lcall
push
xchg
ja
cld
xlat
aam
nop
test
mov
mov
call
dec
incl
sbb
stos
mov
inc
or
xchg
out
mov
add
add
jb
cmpsl
and
mov
push
sahf
imul
cmp
mov
inc
xchg
int3
dec
icebp
pushf
gs
sub
stos
mov
pushl
enter
and
ss
ljmp
repz
mov
stos
push
jg
jb
pop
fldpi
sub
inc
inc
aam
and
mov
xor
dec
test
mov
jo
lret
in
ss
mov
es
loop
out
push
mov
in
in
fistpll
inc
je
mov
inc
and
sub
pushf
iret
sar
cmpsl
in
sub
adc
push
bound
inc
xlat
in
int
insb
sysenter
ret
addr16
xor
out
adc
push
cmp
punpckhbw
cld
xchg
outsl
dec
xchg
add
ret
mov
xor
ror
dec
sbb
cld
add
bound
pop
fldl
imul
push
pop
fisubs
test
mov
sbb
inc
into
push
cmp
inc
or
pop
cmpsb
xorb
lods
repnz
adc
inc
sbb
pop
xor
dec
pop
in
xchg
sbb
aad
inc
push
sbb
add
loop
into
adc
js
popf
enter
mov
adc
mov
dec
ljmp
or
aad
sbb
xchg
and
dec
nop
sahf
cmp
sti
jg
aad
adc
mov
mov
in
xchg
mov
shll
push
lea
fcomi
and
loop
adc
std
out
cli
jge
push
jle
pushf
popa
sbb
cmp
add
mov
sbb
mov
daa
daa
rcrl
cmc
ds
ss
sti
sbb
and
xacquire
in
and
mov
rorb
rcl
imul
adc
aad
lcall
outsl
int3
daa
mov
xchg
mov
pop
mov
cld
and
sbb
and
inc
or
icebp
sbb
and
jbe
inc
xor
xor
jg
lods
cmp
mov
jp
jl
test
xor
in
mov
orb
sub
cmp
ficompl
fsubl
xchg
rcrb
and
shll
loope
outsb
imul
sub
in
add
sub
out
in
scas
sahf
lock
insb
in
int
sbb
sbb
dec
out
xchg
jns
adc
mov
insb
add
dec
xor
push
filds
sub
mov
data16
out
jns
popf
pop
lock
fcoml
addr16
mov
mov
mov
data16
inc
ret
orl
leave
cwtl
xchg
dec
clc
pop
jge
shll
push
hlt
lods
jo
cmp
movsb
cld
out
stos
arpl
xchg
pop
mov
inc
movsl
push
out
push
stc
pop
mov
in
or
data16
decl
mov
mov
mov
clc
and
xchg
int3
addb
in
add
in
cmp
push
add
mov
flds
push
fnstsw
lret
or
mov
arpl
add
mov
sub
frstor
and
mov
out
lock
sbb
lods
sub
roll
jmp
mov
xor
push
clc
dec
repnz
jne
push
rcll
jge
inc
xor
sar
scas
in
aad
dec
adc
adc
mov
xchg
and
mov
das
dec
bound
fistpll
mov
push
xchg
xchg
mov
jo
adc
adc
cmp
repz
adc
sub
mov
lret
push
mov
push
push
pop
jg
xchg
cmc
sarl
mov
mov
add
xchg
leave
add
jae
xor
call
inc
insl
push
int
daa
cmp
push
iret
cmp
andb
mov
in
push
adc
adc
jnp
loop
mov
es
icebp
and
jmp
jae
mov
sub
sub
jecxz
mov
cmp
xor
mov
mov
xchg
jne
outsl
cmp
shll
aaa
out
inc
cmp
xor
je
lcall
mov
call
repz
pushf
loop
mov
ds
sub
movsb
mov
lcall
cltd
mov
xor
dec
out
dec
lahf
lds
xchg
stos
cltd
add
xor
mov
cmpsl
mov
adc
mov
jmp
or
ja
mov
test
iret
outsl
xor
xchg
cmp
mov
pop
jp
cmpsl
aad
out
adc
mov
adc
sub
fisubl
test
xchg
shlb
stc
shlb
int3
fucomi
jns
ljmp
inc
rcrb
ds
loop
mov
jle
inc
cs
push
xchg
fnstenv
mov
mov
jge
fs
push
mov
out
into
xor
jne
cmp
fcomip
enter
hlt
cmp
push
xchg
mov
scas
ret
mov
mov
sbb
push
ljmp
jo
xchg
sbb
adc
mov
iret
loopne
and
push
push
add
aaa
daa
mov
inc
xchg
es
call
jnp
xor
jne
cmp
addl
loopne
mov
jne
ja
aaa
sbbl
rcr
jb
or
jb
repnz
leave
out
cmp
adc
push
das
lret
imul
and
xor
out
enter
inc
pop
push
mov
mov
pop
lods
repnz
xchg
pop
loop
and
out
mov
sti
inc
lods
dec
mov
fisubs
out
xchg
mov
insl
pushf
pop
mov
or
push
mov
sbbb
and
xchg
mov
outsb
inc
adc
loop
dec
add
jg
cltd
sub
lahf
outsl
sbb
cmp
data16
adc
in
dec
inc
fstpt
les
test
and
sub
mov
in
das
imul
push
mov
sbbl
lods
xlat
sbb
scas
and
lcall
nop
xchg
pop
mov
xlat
jg
xchg
or
adc
fcompl
and
sarl
lret
mov
dec
ds
fstpl
stos
push
test
pop
pop
jbe
add
rcr
fidivrs
nop
aad
mov
pop
mov
outsl
aas
lcall
or
cwtl
rorl
cmp
sbb
icebp
loope
push
fs
mov
xchg
dec
ja
push
dec
cmp
xlat
loope
push
mov
setge
jecxz
loope
shrl
mov
cmc
cmpsl
dec
enter
fchs
loopne
daa
pop
xchg
daa
scas
fsubs
ss
and
jge
dec
andl
rcr
arpl
inc
lret
jns
jne
sub
int3
int
movsb
mov
fldcw
dec
jle
push
push
xchg
push
jl
adc
xchg
loop
xor
sbb
sbb
push
out
or
hlt
stc
sbb
jmp
mov
cmp
mov
pop
inc
dec
sahf
sbb
aaa
cs
ss
out
or
out
pop
das
lahf
dec
outsb
pop
dec
jg
sbb
fdiv
jbe
inc
cli
in
bound
js
cmp
in
sahf
jb
lods
and
xchg
push
jecxz
or
ljmp
cmp
and
jg
rcll
pop
fstpt
push
lcall
fwait
cltd
or
daa
inc
inc
push
jle
cmp
hlt
pop
insb
push
sub
ja
test
outsb
xor
loopne
and
pop
pop
inc
mov
shlb
cmp
jmp
rcl
and
sti
sub
mov
iret
xlat
sahf
stc
push
repz
mulb
fildll
adcl
mov
xchg
in
cmp
sub
jns
adc
pushf
jbe
adc
orb
sub
lret
lods
arpl
mov
mov
sub
aam
inc
jo
xorl
and
jecxz
mov
addr16
test
bound
cwtl
cwtl
out
inc
adc
imul
divb
add
xchg
ljmp
mov
jp
dec
subl
test
js
dec
mov
xchg
sbb
test
fnsave
pop
push
xchg
jmp
aas
aam
cli
cld
push
push
movaps
jnp
xor
in
pop
or
das
pop
sarl
inc
int3
push
push
mov
pop
test
push
fdivrs
xor
adc
xchg
jbe
xchg
pop
cmp
mov
loop
xor
cmp
mov
in
sti
pushf
addr16
ret
lods
sub
dec
push
ficoml
and
push
inc
rorl
xchg
mov
adc
adc
iret
fimull
dec
gs
mov
mov
inc
lds
and
mov
add
sbb
shll
fists
push
ss
add
push
and
dec
push
insb
das
rorl
jb
xor
mov
icebp
pop
mov
pop
lods
mov
testb
aad
adc
sbb
sub
pusha
ret
shrl
xor
push
out
ficompl
push
inc
out
mov
inc
test
aam
rcr
jo
adc
pop
bound
xchg
cmp
jae
data16
mov
or
lahf
mov
int3
test
jne
and
mov
add
stc
push
xchg
cmpsl
out
dec
mov
inc
ret
xor
mov
pop
fmull
call
lret
or
or
pop
movsl
test
loope
stos
daa
pop
inc
pop
inc
les
xchg
ficoms
pop
and
jae
push
lods
cld
cli
scas
aad
lcall
push
int
js
daa
ret
sbb
das
or
push
adcb
pop
imul
dec
pop
pop
imul
inc
sbb
cmp
pop
fcmovbe
ljmp
dec
xor
add
push
cmp
mov
sbb
daa
inc
add
in
add
inc
int3
xchg
cld
cs
or
js
popf
stc
lds
test
cmp
sub
popf
stc
js
push
add
xchg
popa
outsl
push
std
push
sbb
movsb
rcrb
adc
and
mov
aaa
xchg
and
pop
add
subb
xchg
sbb
test
shlb
leave
xor
vminsd
and
ret
add
cmp
dec
movsb
outsl
inc
adc
mov
cmp
adc
cmp
stos
xchg
adc
cmp
and
mov
aaa
hlt
iret
repz
and
mov
scas
imul
fisttpl
popf
jecxz
jmp
popf
and
and
pushf
fsubrl
mov
push
xchg
mov
adc
lret
cmpsb
mov
jmp
imul
sub
jns
loopne
std
addl
mov
sahf
sub
dec
jg
loope
mov
push
mov
fwait
push
mov
jo
add
or
fistpll
movlps
push
sti
nop
jnp
or
pop
int3
xor
inc
xchg
inc
mov
xchg
test
push
ljmp
out
jb
les
stc
jb
movsw
xchg
xor
sbb
faddl
xchg
pop
jb
mov
cli
lock
jbe
cmpl
jae
pop
push
je
cmp
fs
cmp
jl
filds
mov
add
push
adc
imul
out
movsl
or
aam
out
cld
imul
mov
dec
add
cltd
out
aad
pop
jge
gs
dec
outsl
xor
push
loopne
jle
dec
fs
pop
orb
mov
lret
repnz
mov
loope
clc
sub
std
ja
fwait
cmpsb
mov
inc
fdivs
pop
dec
hlt
xor
cld
pop
adc
das
sti
jle
into
jae
faddl
and
scas
fsubrp
psrld
xor
mov
mov
inc
bound
stos
jp
jbe
cmp
cmp
cltd
dec
xchg
cmovp
sbb
ss
or
add
std
shr
incl
adc
es
mov
pop
sbb
add
pop
movsl
notb
repnz
mov
test
fimull
shrl
xchg
jno
sub
fnsave
push
push
pop
adc
push
stc
sub
int3
inc
adc
mov
fwait
shlb
xchg
inc
sbb
jnp
in
mov
xchg
aam
mov
lods
repnz
and
dec
mov
aam
pushf
test
pop
sbb
aaa
xchg
add
in
and
and
fwait
out
mov
inc
gs
mov
xor
inc
xchg
fcomps
inc
repz
stc
aad
rorb
add
fsts
ret
cmp
cmpsb
stc
in
mov
popf
jns
push
mov
jecxz
test
inc
repnz
sahf
lods
mov
mov
popf
jne
dec
in
aaa
decb
cmp
cmp
cmc
push
nop
iret
cmpl
jmp
sbbl
pop
frstor
gs
xor
and
aaa
xchg
jae
add
loope
insb
setg
sar
popf
out
push
movsl
and
mov
and
loop
cmpsl
pop
lret
stos
pop
xor
cmp
outsb
imul
inc
mov
nop
jbe
and
add
neg
jo,pt
and
sub
sbb
icebp
fwait
and
rcr
lcall
push
in
inc
cwtl
ljmp
inc
mov
lea
jo
pop
call
sub
push
mov
mov
mov
or
add
dec
jecxz
adc
cld
jnp
popa
imul
xchg
jmp
addr16
imul
psubusw
pop
lods
je
lods
sub
aas
mov
testb
into
dec
ljmp
ss
pop
mov
mov
out
mov
cmp
adc
adc
mov
ret
pop
fcomi
mov
sub
sub
jbe
xchg
rcl
xor
push
je
xchg
ljmp
pop
mov
outsl
xchg
jmp
insl
jae
mov
sbb
mov
fdivrl
xor
int
rorl
dec
ds
hlt
cs
fbstp
hlt
lods
push
out
popf
dec
stos
adc
jl
mov
and
lods
es
adc
loop
xchg
and
dec
mov
ret
sbb
cltd
hlt
rcl
invd
mov
inc
and
sub
dec
shrl
push
or
stos
notl
enter
jae
int3
lcall
stc
aas
je
daa
arpl
mov
jge
leave
cwtl
daa
loopne
ret
aam
xchg
and
push
icebp
xchg
ss
fimull
mov
xchg
lea
dec
jp
xchg
pop
aad
sti
cmp
push
xchg
cli
sub
movsb
or
enter
xchg
cmc
ss
jle
dec
inc
adc
push
push
arpl
mov
pop
sub
and
fdivrs
lea
cli
xchg
push
mov
int3
dec
adc
repnz
or
sub
mov
sub
push
and
inc
sti
and
push
decl
lods
push
add
ret
push
aam
pop
xor
mov
mov
repz
or
cwtl
dec
loop
mov
add
add
mov
push
pop
cmpsb
jecxz
jg
lea
rcrl
lods
add
xchg
les
inc
addb
in
ret
sub
ds
sub
punpcklwd
xchg
or
push
xor
das
add
jns
fists
push
fcompl
outsb
popf
lcall
jl
push
sub
ljmp
dec
jge
xor
aas
or
lock
sahf
xchg
xchg
jns
mov
dec
push
jl
outsb
scas
js
scas
fcmovb
add
cld
inc
dec
inc
push
mov
stos
dec
outsb
jb
xchg
scas
dec
push
ljmp
cs
test
sub
lds
test
sub
mov
out
cmc
dec
mov
daa
movl
adc
sbb
or
fwait
or
xlat
cltd
adc
jmp
inc
jo
mov
xchg
and
cmp
loopne
jno
xchg
dec
ss
jl
mov
sbb
xchg
xchg
insl
mov
das
incb
fstp
inc
in
jne
in
popf
cs
mov
mov
xor
jp
and
stc
and
adc
dec
lea
jle
add
pop
cltd
jae
movsl
jle
cld
test
cltd
mov
adc
cmp
mov
sbb
mov
mov
inc
xor
repz
mov
aad
rcr
inc
lds
data16
xchg
mov
mov
enter
jecxz
ja
cs
in
shr
cmpsl
jg
and
inc
sub
outsl
scas
pop
cmpsl
in
lds
ljmp
add
fcompl
and
enter
dec
mov
pop
pop
out
jle
cmc
in
jge
rclb
cmp
rcll
fsubr
push
inc
nop
pop
dec
movsl
mov
das
push
inc
add
fsubl
inc
mov
adc
inc
ret
and
pop
enter
push
aaa
stos
add
test
add
jnp
int3
cmp
jg
xchg
mov
mov
pop
inc
jae
add
xor
dec
mov
daa
ret
mov
popf
cli
and
lock
sub
push
lods
into
sub
bound
aad
xchg
inc
dec
dec
mov
stc
sarl
jmp
fcoml
add
mov
sahf
xor
sub
dec
adc
jae
adc
xor
orb
sti
jne
sti
or
in
pop
sbb
cmc
icebp
aaa
mov
pop
jnp
dec
sub
mov
or
and
jo
inc
push
mov
lods
iret
mov
loopne
sub
adc
xor
adc
int
sahf
pop
shll
and
cmp
jle
mov
out
mov
stos
lods
ja
xchg
cmpsl
les
inc
lods
rorl
jne
popa
sub
aad
lret
xor
mov
dec
lahf
call
adc
or
scas
cmp
lock
mov
clc
movsb
jge
xor
jmp
repz
pminub
mov
loopne
sbb
inc
push
mov
loopne
xchg
hlt
std
mov
sbb
adc
mov
cmpsl
mov
pop
aaa
sbb
jno
xchg
jo
loopne
xchg
fs
pop
daa
insb
sub
add
pop
push
jmp
push
or
in
lret
xlat
sub
mov
mov
add
std
cmp
mov
lret
cmpsl
into
push
push
mov
xor
lods
mov
pusha
sbb
movsb
mov
push
and
shlb
dec
add
jp
sbb
stos
mov
dec
jmp
push
icebp
xchg
jb
cltd
inc
push
cltd
and
pushf
insb
loopne
mov
dec
in
in
shlb
lahf
sub
rcrb
and
or
pop
cld
cltd
hlt
cmp
outsl
jmp
cmp
xor
push
xchg
push
xor
add
scas
cld
xlat
inc
je
xor
mov
imull
sbb
dec
sub
loopne
push
paddsb
nop
or
inc
lods
mov
test
inc
jmp
in
cmp
nop
arpl
in
gs
stos
adc
xchg
pop
xlat
test
cmp
popf
mov
cltd
imul
gs
cmp
push
sub
add
inc
sbb
icebp
in
pusha
gs
fnclex
push
dec
or
adc
in
subl
std
push
rorb
jle
mov
mov
push
outsb
or
in
and
adc
cs
cld
mov
cli
lods
scas
dec
push
sub
push
sbb
dec
int3
ss
and
inc
mov
xchg
fisttpl
loopne
sub
add
adcb
jb
jae
dec
push
pop
mov
decb
movsb
sub
jmp
jne
cmpsb
dec
es
xchg
add
xor
adc
hlt
xor
sbb
push
aam
sbb
sub
je
jb
nop
mov
mov
dec
dec
and
add
stos
repnz
inc
mov
mov
and
sub
mov
jo
sub
xor
push
jle
jae
in
mov
pop
icebp
addb
jp
dec
inc
mov
sub
push
mov
pop
lds
lahf
jg
loope
adc
push
xor
testb
aas
mov
xchg
in
push
les
xchg
iret
idivl
jmp
pop
ljmp
icebp
push
aas
ss
loopne
sbb
and
lods
sarb
mov
jno
cmp
jns
xor
dec
adcb
mov
cmp
dec
cmp
cmp
add
pop
push
add
cmc
xor
and
leave
shr
in
inc
andb
data16
add
imul
jge
dec
jle
enter
xor
aas
inc
iret
daa
pop
insl
out
mov
test
mov
xchg
mov
or
cmp
and
in
jg
add
sbb
dec
in
movsl
xlat
jp
pop
add
iret
in
pop
push
jmp
add
arpl
xor
lods
mov
xchg
xlat
out
adc
movsb
mov
adc
xor
lret
and
mov
push
icebp
daa
jmp
jmp
imul
sub
xchg
inc
mov
es
aam
dec
xor
inc
fimull
cld
dec
xchg
mov
dec
movsb
scas
insl
data16
pop
xor
rcrb
in
or
out
push
jo
push
fmul
sub
mov
mov
mov
int3
or
lods
imul
daa
movsb
scas
inc
negb
dec
cmc
jp
lcall
cmpsb
xlat
stos
dec
sbb
clc
negl
and
scas
push
inc
int3
xchg
pop
fildll
adcl
inc
push
gs
data16
aaa
adc
hlt
fistpl
inc
jnp
out
sub
cld
nop
mov
nop
stos
mov
pop
sub
pop
xchg
mov
push
js
and
adc
mov
cmpsb
in
xchg
or
adc
int3
push
push
inc
mov
mov
stos
push
stos
sub
inc
dec
inc
lahf
sbb
loop
ret
mov
js
jnp
and
jmp
mov
cltd
out
mov
dec
or
xchg
push
lds
sub
iret
test
cld
ja
sbb
fldt
xor
inc
imul
pushf
xchg
lea
jae
sahf
or
mov
ret
xchg
gs
push
das
pop
shll
in
adc
cmpsl
shrl
dec
xlat
in
repz
cmpsb
sub
push
cmp
dec
cmpsl
gs
mov
fdivl
dec
push
test
pusha
scas
fmuls
mov
xchg
pop
popa
adc
xor
fistl
lea
inc
test
inc
pusha
clc
aad
jno
aaa
rolb
idivl
inc
std
loopne
fisubs
xchg
jmp
jle
and
sbb
mov
inc
mov
lret
nop
sub
aas
mov
xorl
popf
add
sbb
or
fisubs
pop
in
pop
int
pop
inc
icebp
adc
adcb
cmp
pop
pop
adc
jbe
mov
cltd
lret
xchg
ret
fwait
pop
or
push
sub
fs
adc
sbb
push
icebp
push
cmp
cmp
cli
inc
xchg
push
adc
add
xchg
and
xchg
aas
push
arpl
push
jb
mov
push
xchg
das
and
repnz
pop
lret
mov
lret
push
bound
xor
out
mov
jge
adc
std
inc
jae
decl
mov
sub
xchg
je
int
mov
pop
pushf
cmpsb
je
movsl
test
rcl
pop
add
mov
inc
jbe
sub
mov
icebp
sbbb
movsl
jb
in
mov
ret
xchg
testb
and
rorb
cmp
outsb
insl
or
out
shll
es
stos
push
not
sub
cld
sbb
into
pop
dec
mov
movsb
fdivs
cmpsb
adc
imul
sahf
popf
mov
int3
xchg
mov
cmp
fwait
lret
dec
dec
and
mov
cmc
mov
jnp
cli
lahf
push
jmp
rcll
insl
jno
mov
xchg
pop
add
stos
inc
adc
pop
jge
pop
mov
sbb
sub
shr
sarl
jecxz
fs
mov
push
loopne
mov
or
pop
pop
test
sbb
mov
je
jge
jbe
jecxz
and
push
add
pop
mov
int
mov
mov
mov
sahf
iret
stc
mov
pop
popl
imul
xchg
lods
outsb
and
xlat
call
insb
push
lahf
js
xchg
xor
jo
sbb
insb
mov
mov
pop
or
dec
mov
std
add
lahf
mov
fstpl
imul
dec
mov
lret
in
lock
ss
dec
call
ret
lcall
loope
sub
adc
dec
adc
jns
push
mov
in
outsb
jmp
test
cmpsl
mov
add
sbb
inc
out
sbb
testl
daa
xchg
lock
and
cwtl
andb
sbb
ja
outsb
pushw
shrl
push
cltd
push
mov
add
popf
and
or
idivl
xor
push
mov
mov
pusha
jnp
jmp
jae
xlat
pop
mov
je
xchg
pop
cwtl
push
xor
sub
ljmp
push
push
ds
jae
cmp
out
fcomps
mov
aaa
out
and
sub
sahf
ljmp
pop
mov
pushl
xlat
xlat
push
mov
adc
cmp
xchg
push
mov
dec
mov
mov
out
push
mov
inc
adc
shll
repnz
loop
sahf
jbe
fimull
add
inc
mov
loope
mov
mov
roll
out
imul
inc
jns
inc
bound
mov
imull
xlat
adc
fstpl
outsb
lcall
dec
jp
sarl
out
jge
xchg
xor
lea
fadd
movsb
bnd
lods
xor
or
sti
pop
and
and
outsl
dec
imul
imul
push
imul
flds
inc
aam
rclb
mov
clc
mov
adc
icebp
jo
data16
mov
jae
mov
jg
or
in
outsb
out
pop
add
pop
sbb
push
mov
loopne
stos
fwait
lahf
repz
pop
out
sahf
lods
pop
pusha
repz
in
cltd
shll
xlat
and
jb
xchg
sahf
push
test
pop
and
lret
sbb
aas
fcmovnbe
jns
adc
dec
lods
push
stc
sub
daa
push
push
mov
test
mov
mov
jmp
ja
out
dec
jae
ds
jns
xchg
lret
mov
test
pop
pop
ss
lea
lds
pushf
push
subl
mov
clc
push
adc
mov
mov
outsb
mov
lea
dec
mov
movsl
fs
push
xchg
sub
push
fidivl
in
call
sbb
lds
lahf
lcall
mov
ds
push
test
pop
or
test
fwait
cmc
mov
mov
popa
out
addr16
adc
iret
pop
fisttpll
dec
pop
push
ljmp
cld
fstl
or
leave
pop
xor
xchg
mov
pop
test
mov
mov
sub
addr16
pop
pushl
jae
adc
cmp
add
lds
bound
mov
add
or
shl
jns
adc
mov
cmp
repz
mov
cmp
add
dec
inc
mull
lret
cmp
data16
fadd
mov
jp
mov
das
mov
out
or
popf
ror
sbb
insl
je
es
xchg
push
fcompl
mov
mov
incb
pusha
jb
popf
add
pop
mov
insb
cmp
lcall
stos
mov
fbstp
in
push
ja
mov
repz
push
mov
push
mov
mov
hlt
lret
xchg
mov
cmpsl
aam
stos
es
push
imul
in
jb
cmp
mov
daa
fcmovnu
mov
sbb
lods
jl
mov
adc
mov
stos
in
dec
mov
cmp
pop
jae
je
mov
ror
jl
mov
mov
repz
dec
mov
cmp
pushf
int3
testb
arpl
or
add
mov
mov
les
xor
insl
pop
jecxz
xchg
or
push
out
lahf
shll
and
pop
mov
jg
mov
jmp
pop
pop
lret
push
push
adc
test
and
push
dec
push
mov
int
mov
adc
mov
sbb
mov
add
fdivp
aaa
fwait
cwtd
jmp
cmp
imul
mov
std
add
inc
pop
fcmovb
cmp
imul
mov
xchg
adc
sbb
and
test
aad
mov
cld
in
pop
test
fldcw
leave
inc
pushf
dec
xchg
push
les
pushf
cli
pop
scas
adc
orb
jnp
andl
cltd
sbb
lea
stos
cmpsb
or
fidivrl
aam
xchg
imul
jbe
dec
sbb
aas
dec
insb
clc
mov
roll
or
fsubrp
scas
xchg
lock
popf
jg
aam
lea
sbb
cltd
jb
pop
push
les
icebp
cwtl
sbb
sub
filds
jp
fbld
arpl
mov
jno
icebp
mov
sub
cmpsb
loop
insl
xchg
out
mov
mov
sub
sbb
or
jns
js
pushf
dec
popa
inc
ja
or
push
xor
aam
gs
mov
inc
xor
pop
adc
aaa
mov
dec
stos
pop
pop
sarb
imul
call
lea
xor
adc
xchg
in
pusha
adc
inc
or
scas
int3
push
loop
stos
add
jae
mov
ss
mov
xchg
fs
lret
mov
mov
push
popf
inc
addb
sub
negl
sbb
xor
jl
push
fdivs
test
sbb
lea
cltd
xchg
nop
in
mov
cmp
int3
dec
pop
cmpsb
mov
pop
nop
mov
jp
mov
pusha
in
xchg
inc
mov
cmc
mov
repnz
test
adc
inc
dec
push
ds
ljmp
lds
push
mov
dec
int3
out
dec
push
out
mov
adc
pop
lret
lds
xchg
push
cld
dec
ret
pop
js
lods
outsl
testb
dec
adc
inc
mov
pop
aad
in
in
das
cli
sub
cltd
ss
push
mov
add
loop
es
jmp
lret
jge
inc
mov
or
lahf
test
or
fdivrs
add
loopne
xchg
cmc
add
and
pop
xchg
imul
pop
pop
rcrl
add
push
mov
pop
ja
push
lret
pop
mov
and
inc
outsb
mov
jo
xchg
das
mov
jp
cmpsl
lea
push
sub
sbb
enter
xchg
int3
mov
adc
fisubl
or
ds
rorl
push
add
pop
sub
or
add
pop
mov
mov
mov
mov
fbstp
ret
and
adc
mov
cltd
rcr
sub
mov
int3
or
nop
sub
mov
enter
pop
addr16
adc
or
xor
xor
femms
xchg
push
cmpsb
adc
lcall
fbld
push
mov
cmp
xor
outsl
stos
scas
pop
fimuls
aam
or
hlt
add
push
scas
cmpsb
dec
mov
mov
inc
es
pushf
pop
mov
adc
bound
into
jne
push
add
leave
sub
iret
leave
mov
xchg
aam
push
xchg
jmp
cs
dec
push
jb
inc
push
or
mov
add
push
loop
push
xor
push
mov
mov
jecxz
daa
xchg
inc
xchg
or
mov
mov
and
enter
or
sub
mov
dec
outsb
js
push
js
cmp
jns
js
repz
loope
inc
xchg
mov
sub
int3
jge
sbb
and
mov
sbb
popf
mov
jno
hlt
inc
shll
fimuls
sbb
mov
jo
xchg
aas
mov
test
rcrl
mov
inc
add
sbb
das
ret
xlat
subl
aaa
xchg
mov
loop
push
xchg
in
lcall
lret
mov
inc
lret
popa
mov
add
dec
dec
daa
es
std
adc
pusha
add
adc
add
jnp
pop
xchg
pop
mov
cmpsb
jl
xor
cmp
dec
mov
push
call
push
jae
roll
mov
aaa
pop
jae
or
out
add
pusha
fnstsw
xor
andl
xor
jnp
xlat
sub
rclb
faddl
lahf
mov
decb
stos
into
sbb
outsb
jle
mov
push
xchg
iret
adc
cmp
stos
dec
les
mov
cmpb
add
bound
or
subl
mov
into
sub
inc
jns
mov
mov
or
jecxz
xchg
sarl
mov
out
xchg
sub
cli
insl
mov
cs
jecxz
sbb
inc
in
cmp
dec
adc
outsb
sub
iret
adc
cmp
ficoml
int
cmpsb
xlat
sub
ja
xor
inc
pop
stos
or
ret
push
lret
lds
pop
inc
imul
push
jl
arpl
cmpsb
cmc
mov
out
mov
adc
push
in
dec
push
xlat
xchg
out
repz
xor
das
jns
cmc
jle
pop
mov
mov
insb
movsb
pop
popf
cld
rclb
or
cmpsl
jns
stos
inc
cwtl
cmpsl
jne
mov
push
sub
cli
sbb
es
add
pop
mov
pop
js
mov
dec
mov
sbb
cmpsb
dec
push
adc
mov
stos
mov
out
aaa
stos
out
jge
mov
jl
arpl
jle
add
mov
call
cmp
adc
mov
vrsqrtss
mov
popa
add
inc
iret
movsl
mov
shll
inc
aad
test
cld
mov
and
dec
dec
adc
lock
xchg
inc
add
cmp
mov
notb
push
scas
cmp
data16
lcall
cmp
in
mov
fisttps
sub
jp
add
iret
and
addr16
push
xor
out
add
stc
mov
fs
sub
hlt
jbe
daa
adc
mov
sbb
rdtsc
push
and
ljmp
lods
pushf
xchg
int3
push
popa
lret
adc
je
cld
adc
xchg
adc
xlat
mov
cmp
cmpsl
xor
mov
lea
or
fdivs
idivb
leave
cmp
mov
into
leave
mov
addr16
in
push
jne
pop
lods
jl
adc
mov
or
pop
lods
int3
repnz
fisttps
cmp
dec
cwtl
push
xor
xchg
add
xchg
jmp
or
out
mov
cmp
or
dec
inc
insb
orb
addr16
adc
fadd
sub
mov
push
fdivrl
bound
out
dec
add
jbe
fistps
adc
jge
cld
fsubs
fcmovbe
out
icebp
in
pop
cmpsl
mov
and
outsb
fistpll
insb
fwait
in
fs
fs
leave
movsb
push
fdivl
jp
inc
mov
mov
sbb
aam
sub
xor
add
dec
inc
sub
insl
adc
lahf
int3
sub
mov
in
inc
add
test
dec
lods
push
fisubrl
out
xchg
imul
test
adc
ja
cmp
pop
push
jb
push
xchg
dec
dec
dec
adc
dec
es
std
cmp
pop
xchg
xchg
stos
daa
adc
mov
jbe
fidivrs
lods
pop
xor
fisttpl
dec
lahf
jo
xor
jl
insb
inc
pop
xor
std
ret
jg
stos
dec
into
mov
or
xor
pop
outsb
sbb
addl
xchg
cmp
jb
mov
popf
pop
add
incb
sarl
shl
or
adc
aaa
and
testb
ja
add
inc
pop
pop
lcall
mov
dec
and
in
dec
stc
adc
insl
cmp
and
sbbl
aaa
pop
adc
pop
mov
rcr
fwait
sub
pop
iret
jno
imul
rorb
add
jmp
test
aad
or
mov
lea
out
mov
adc
icebp
test
mov
cmp
inc
lret
mov
cmp
fldenv
push
mov
lods
xor
xor
push
xor
push
sbb
enter
gs
sub
push
jl
aam
dec
ds
jb
dec
dec
sub
or
jecxz
fs
mov
push
neg
and
cmc
fxch
dec
fists
mov
test
imul
fcom
xchg
nop
negl
jge
mov
push
pusha
iret
stos
push
lock
ljmp
adc
in
mov
jmp
lret
and
stos
and
lcall
cmp
adc
mov
sub
xor
cmp
inc
repz
and
and
add
mov
adc
push
xchg
push
cmp
xchg
sti
cmp
pusha
andb
dec
icebp
mov
hlt
lret
xchg
orb
jo
leave
test
shll
icebp
jbe
ja
rcll
ds
in
sub
repnz
sahf
adc
hlt
jecxz
sbb
outsb
ss
in
or
push
mov
scas
subb
daa
icebp
out
sti
mov
fwait
mov
cwtl
fadds
mov
cli
cltd
nop
cmp
mov
test
mov
repz
cmp
push
jno
cmp
js
popf
sub
imul
mov
dec
hlt
stc
inc
mov
xor
pop
ss
mov
jo
and
bound
push
sbb
cwtl
or
sbb
dec
dec
push
sbb
xor
sbb
stc
call
mov
push
add
xchg
mov
sub
stos
pop
loopne
cld
rorb
and
cld
mov
cmp
rcrl
add
xchg
lcall
cli
clc
insl
loop
fnstsw
std
add
fdivrs
jns
shl
data16
movsl
push
enter
cs
cmp
mov
and
push
sub
pop
cld
cmp
xchg
inc
jl
sbb
mov
int3
into
or
xor
jo
imul
pop
xor
loop
inc
push
das
enter
sub
fisttpll
test
rcrb
jno
std
mov
pop
mov
shrb
leave
loop
mov
sbb
push
pop
mov
push
daa
mov
lret
loop
and
mov
ss
outsb
in
jecxz
in
subl
sahf
add
jle
push
shlb
insb
jg
in
pop
pop
xor
in
jae
mov
xabort
dec
sub
push
pop
mov
jmp
popf
sahf
shll
pop
push
inc
out
mov
inc
nop
or
or
cmpb
imul
pop
rcr
adc
sbb
std
push
sbb
jnp
int3
sub
lea
push
aas
flds
fistl
mov
sbb
add
in
aam
add
pop
imul
sub
int3
pop
sbb
call
cmpl
ljmp
ficoml
stc
test
push
pop
fwait
dec
xlat
cmc
dec
les
cltd
xchg
cltd
dec
xchg
aaa
mov
xchg
sbb
jle
add
adc
ret
mov
or
nop
popf
pop
jle
mov
push
test
test
mov
test
in
sub
scas
fcom
repz
or
out
std
xchg
push
sbb
dec
rclb
popa
shr
repz
mov
ss
test
jo
lods
ljmp
aam
mov
in
jb
mov
sub
repz
pusha
aas
pushf
xchg
sbb
fistps
and
addr16
lret
jo
sbb
xchg
pop
add
xchg
iret
mov
push
call
push
and
jbe
push
bound
add
hlt
cld
push
test
dec
pop
les
adc
shll
xchg
test
addr16
dec
out
push
xchg
pop
pop
adc
sub
inc
ret
push
and
dec
out
ret
repz
orb
lea
adc
es
insb
or
or
mov
fs
loopne
xlat
ds
cmp
dec
cmp
bound
sarl
cmp
xchg
les
aas
pop
jmp
dec
cld
fadds
cmp
cmc
pop
mov
fidivl
inc
inc
jg
dec
sbb
mov
inc
dec
pop
cmp
sub
in
mov
rolb
iret
popa
sub
mov
or
aad
fisubl
idivl
mov
fs
sar
inc
mov
js
and
shll
dec
inc
cmp
push
xor
movsl
test
cmp
imul
jnp
mov
pop
int3
popf
push
imul
fwait
mov
shll
push
dec
add
mov
xchg
shl
cmp
adc
mov
xor
sub
cld
aam
in
push
and
jns
popa
mov
aad
pop
mov
xchg
inc
mov
push
in
addr16
xchg
add
out
jns
aam
lea
xchg
insb
aas
or
sbb
sbb
outsl
push
pushf
and
ret
outsb
stos
or
das
insb
aam
cld
mov
mov
nop
jno
cmp
ljmp
xchg
inc
or
lret
mov
dec
and
pop
inc
adc
sbbl
mov
jno
test
leave
add
stc
imull
out
test
push
repnz
mov
adc
mov
pusha
mov
and
mov
bound
daa
in
jne
addr16
lods
das
xchg
cmp
stc
push
js
fstpl
nop
in
cld
ret
jb
cwtl
les
xadd
sbb
movsl
cwtl
daa
pop
mov
cmpsb
faddl
jmp
dec
and
adc
stc
jge
jns
aas
dec
popf
mov
mov
pop
xchg
and
mov
jb
xchg
xor
mov
mov
cs
cmp
fisttps
pop
mov
es
adc
stc
add
out
jns
adc
add
mov
cmp
or
add
sbb
mov
pop
inc
lcall
mov
add
ss
jo
inc
pop
dec
cmc
mov
pop
push
frstor
sarl
loope
mov
imul
lret
fisttpl
lds
sbb
sbb
pop
pop
cld
fistpl
sahf
fdivrs
test
mov
jbe
jmp
jle
jge
inc
jne
jge
test
fs
xchg
xor
insb
leave
xlat
push
and
ljmp
sbb
out
lret
push
xlat
into
mov
sahf
add
das
insl
stc
pop
or
push
addr16
ljmp
push
out
roll
aas
aaa
dec
adc
adc
mov
cmp
das
cmpsl
sub
inc
dec
cmpsb
adc
leave
mov
pop
mov
movsb
sub
ret
cmp
push
fiaddl
loopne
cmp
sub
data16
fs
call
arpl
shll
pop
xor
mov
xchg
test
into
and
insl
cwtl
xchg
leave
mov
cs
outsb
mov
pop
add
lret
mov
dec
sarb
inc
inc
pusha
jecxz
stos
and
mov
cmpsl
cld
pop
fstpt
mov
xchg
and
sbb
adc
jne
movsl
scas
nop
add
mov
aam
xchg
call
call
cmp
addr16
sbb
mov
insl
add
add
in
aaa
scas
jl
jae
popf
pop
hlt
das
iret
gs
jae
sbbl
jo
data16
shrb
nop
sub
dec
xor
les
fldt
add
xchg
sub
out
dec
sbb
neg
movsb
cmovbe
cmp
scas
push
adc
push
mov
fstps
push
bound
xchg
adc
nop
popa
cmp
dec
jp
cmpsb
ds
jne
dec
jecxz
mov
pop
cmp
sub
fnclex
dec
cmp
mull
sbb
lods
jae
mov
je
xor
imul
add
xchg
hlt
adc
in
cmp
xor
cld
mov
or
push
jecxz
inc
in
mov
addb
pop
aaa
push
pop
daa
test
inc
mov
outsb
loope
insb
cmpsl
cmp
jbe
repz
fucom
jmp
and
xor
gs
lret
lret
lahf
imul
xor
rclb
mov
adc
xchg
lods
mov
mov
sbb
add
and
scas
xchg
xor
div
lea
mov
push
and
fldcw
lods
test
cmp
inc
insl
or
lock
mov
lret
jle
xchg
jne
out
out
mov
outsl
cltd
je
push
or
push
mov
punpckldq
cld
add
das
pop
imul
adc
mov
shlb
xchg
jbe
cld
movsl
pop
mov
negb
push
sarb
xorl
inc
int
jge
test
sub
xor
inc
cmp
jbe
loop
xchg
aam
aad
xor
enter
xchg
in
dec
jo
push
and
pop
imul
aam
int
and
xchg
sbb
cmp
mov
into
pop
mov
sub
call
push
cwtl
add
in
jns
dec
push
sbb
lock
adc
lahf
cld
in
loopne
xchg
pop
xor
sbb
and
stc
inc
fiaddl
push
fs
adc
push
scas
int3
mov
scas
fstl
fucomi
daa
push
add
jns
cmc
jno
shrl
sub
test
pop
xchg
jnp
out
cmp
jae
add
fcomi
lret
add
sub
sub
or
xor
stos
add
mov
and
sub
or
sbb
xchg
adc
sarb
sbb
mov
jnp
sbb
sbb
aaa
sbb
adc
cmc
fsubs
xchg
xor
cs
or
and
pop
mov
push
ret
es
mov
mov
cwtl
sahf
adc
ds
cmp
std
cmpsb
mov
push
ljmp
cmp
out
or
out
fcomip
mov
or
popf
icebp
stos
push
mov
in
push
sbb
mov
jae
jecxz
mov
inc
jne
xchg
test
les
in
jmp
fldt
es
mov
push
mov
mov
mov
aad
cmp
adc
in
xlat
jae
lahf
bound
mov
push
dec
stos
pop
xchg
adcl
fsub
and
or
add
fsubrs
lds
cli
mov
jns
cmp
arpl
nop
add
adc
dec
imul
rclb
lods
jno
sbb
sahf
iret
bound
xchg
xlat
xchg
mov
popa
jecxz
mov
pandn
repz
pusha
add
test
pop
test
dec
mov
pop
mov
or
scas
jmp
xor
mov
push
into
sbb
ficomps
hlt
and
rol
ja
in
xchg
xchg
cmp
xor
loope
fdiv
fldenv
movsb
shll
out
sbb
in
or
inc
xchg
sti
popa
cmp
mov
je
rcll
pop
bound
sbb
mov
cli
inc
xor
insb
scas
outsb
sbb
mov
dec
mov
adc
leave
lea
fadds
cmp
and
fisubrl
pop
ret
lret
or
lcall
inc
jo
and
xchg
pop
jo
and
imul
xchg
mov
lock
fadds
pop
test
add
cmpsl
nop
rcll
pop
adc
xor
and
jb
in
push
or
inc
addl
test
movsl
cld
jl
rolb
inc
pop
pop
imul
cmp
into
call
in
sub
call
or
cld
push
inc
js
std
cmp
jae
or
enter
sbb
addl
add
cmp
dec
jge
loopne
xchg
dec
outsl
add
add
mov
sub
xchg
hlt
lods
lods
mov
iret
mov
lahf
notl
dec
pop
sbb
jbe
lea
imul
out
sub
xor
jecxz
push
push
xchg
xchg
lret
sbb
adcb
fwait
jnp
xchg
or
out
sub
cmp
cmpsb
mov
pop
pop
mov
cmp
insb
add
or
je
sbb
cs
pop
or
dec
popa
dec
insb
jne
dec
icebp
enter
mov
adc
xor
sarb
jo
sbb
jecxz
sbb
jnp
js
adc
or
shl
mov
pop
cmp
mov
or
icebp
pop
in
inc
dec
add
add
pusha
xor
sti
pop
jbe
rol
leave
popf
push
inc
lret
push
ficoml
mov
aam
imul
add
rorl
jle
pop
xchg
xchg
mov
jbe
sbb
inc
pop
les
lcall
adc
test
lds
mov
or
push
and
les
stos
imul
inc
dec
out
push
pop
stos
stos
insb
push
fildl
inc
data16
lahf
pusha
mov
dec
sahf
jl
into
pop
xorl
jmp
push
jl
je
mov
in
mov
mov
repz
enter
icebp
and
sub
pusha
enter
or
pop
leave
dec
rcll
movsb
add
out
mov
les
addr16
jmp
xlat
jg
popa
add
in
mov
dec
mov
xchg
xor
aam
cmp
mov
mov
sub
mov
mov
icebp
ss
aam
mov
test
in
shrb
xorb
dec
nop
pop
pop
jg
dec
inc
mov
xlat
lcall
and
frstor
fistl
mov
out
cli
out
sbb
je
xchg
push
int3
in
mov
dec
fwait
jmp
int
fisubrl
xchg
push
adc
xor
dec
cmp
nop
pop
daa
into
push
sahf
pop
movsb
stc
test
shl
cltd
mov
jg
sub
dec
push
pop
xchg
jp
jmp
mov
data16
movsl
sbb
inc
cmp
in
mov
aas
jp
xor
inc
xor
fs
stc
lods
dec
cmc
sub
js
shlb
mov
fmul
hlt
mov
lds
and
ljmp
fldt
add
mov
call
int3
mov
mov
popf
mov
adc
xorb
fmuls
das
jecxz
frstor
mov
pop
fidivs
bound
jmp
call
xchg
push
mov
test
jg
xor
xchg
inc
ljmp
hlt
outsl
int
push
xlat
xorb
daa
ret
scas
cli
std
xor
dec
dec
add
cmc
jb
sub
loopne
xchg
xor
in
push
mov
jp
scas
push
cltd
mov
mov
out
mov
lret
dec
cld
shlb
repnz
lds
fwait
lods
mov
mov
adc
sahf
add
xor
je
in
add
and
mov
sets
call
jnp
push
jge
jae
cli
daa
sub
shrl
push
mov
fidivrl
sbb
inc
inc
popf
cli
mov
shl
mov
lcall
ret
js
stc
cmpsb
inc
test
xor
adc
inc
mov
sbb
sub
imul
mov
roll
jmp
sbb
loope
mov
jg
fisubl
adc
mov
add
decl
in
mov
jle
inc
std
popf
fildll
sbb
and
push
inc
adc
cwtl
shll
movsl
push
je
and
int
jae
popa
addr16
inc
push
jb
inc
repnz
in
mov
pusha
mov
jg
dec
lcall
cld
imul
pushf
adc
jbe
xlat
popa
cmp
jno
push
insl
inc
es
shrl
inc
lret
dec
adc
into
mov
ret
jp
ljmp
pop
sti
mov
pop
outsl
outsl
push
and
dec
add
stos
insb
and
adc
imul
xchg
mov
iret
repz
fs
imul
fstpt
rorb
add
pop
aad
xor
dec
pusha
cmp
js
add
add
pop
pushf
pop
test
je
pushf
pop
sub
mov
xorb
rclb
xor
mov
mov
xchg
xor
or
movsb
leave
test
xchg
xor
and
ds
push
dec
aad
std
pop
xor
mov
cwtl
sti
addl
int3
mov
ret
mov
cltd
jge
push
lock
mov
and
das
jecxz
je
fwait
adc
out
pop
addl
cwtl
fwait
aas
arpl
pusha
insb
imul
repz
sbb
mov
out
in
xor
cmp
faddl
cmc
xchg
push
or
or
cmpb
out
test
mov
lret
icebp
inc
out
movsb
iret
inc
fwait
arpl
jnp
mov
std
shrl
stos
add
lods
aaa
sub
testb
push
sub
in
mov
imul
call
mov
jg
add
test
outsb
xor
and
notl
iret
repnz
int
movsl
in
push
insb
or
cmp
pop
inc
fwait
in
push
sbb
in
int
mov
shrl
cwtl
scas
jmp
push
mov
sub
jne
aas
inc
sub
xor
pop
mov
inc
mov
loopne
dec
roll
xor
je
inc
pop
mov
xor
dec
push
push
pop
mov
inc
push
pop
mov
and
push
cmpsb
jge
mov
dec
inc
mov
pop
shl
or
cmp
xor
movsb
pop
inc
int3
mov
lock
cmp
aaa
and
dec
int3
mov
aas
call
sub
xchg
lods
or
mov
cmp
js
mov
and
mov
mov
fsubl
inc
push
add
xlat
dec
mov
andb
aad
popl
std
sahf
inc
pop
mov
loope
push
popf
dec
loope
add
inc
and
dec
sarl
decb
popa
xor
xor
test
xchg
lret
jb
bound
pop
clc
outsb
xchg
jne
sub
mov
mov
xchg
cmpsl
call
mov
fiaddl
popf
ljmp
jl
imul
loopne
inc
in
movsl
in
cmpsl
ret
add
mov
cmp
popf
and
stos
xchg
fldl
pushf
adc
xchg
ds
movsb
pop
test
cli
sbb
mov
cmp
insb
mov
test
icebp
out
sbb
push
cld
push
pop
sub
in
push
push
mov
adc
pop
int
or
into
clc
stos
pop
xchg
in
push
dec
cmpsb
sub
outsb
aad
dec
xchg
cmpsl
mov
insl
movb
fistl
lea
and
imul
clc
pop
add
scas
mov
into
andb
test
mov
cmp
fdivrp
xchg
jbe
jae
inc
into
xor
insb
repnz
testl
lcall
push
dec
and
ljmp
ret
push
mov
les
pop
mov
mov
jle
sub
enter
cmp
imul
xor
sbb
and
add
sbb
and
int
loop
test
int
adcb
adc
push
mov
icebp
jae
lret
ja
dec
jbe
sub
push
test
ljmp
jno
std
pop
fcoml
push
in
sbb
test
test
and
sahf
xchg
lods
mov
aam
mov
lea
jno
mov
insl
pop
push
and
cmp
data16
dec
cld
fnstsw
rorb
push
call
outsl
dec
dec
cmp
cmp
ret
pop
movsb
sub
imull
out
jge
dec
cmpsl
pop
repnz
test
popf
sarb
xor
push
and
xchg
roll
push
jnp
pop
cmp
add
pop
dec
adc
sbb
mov
dec
out
mov
aad
les
jnp
adc
gs
das
jnp
fldl
dec
xlat
mov
jnp
frstor
je
add
sub
inc
adc
pop
pop
push
stc
jmp
dec
outsb
dec
mov
test
js
ss
mov
stos
fwait
outsl
cltd
sti
fiaddl
sub
mov
mov
jp
add
sub
fsubrs
or
fcomps
popa
test
call
mov
fcoms
jl
push
outsl
std
sub
xor
lahf
lds
pop
mov
repz
dec
fisttps
dec
cmp
fisubrs
push
mull
mov
lret
sub
test
or
cwtl
and
fists
test
or
mov
test
lahf
adc
aam
sbb
aaa
pop
lds
and
dec
mov
jecxz
pop
pop
mov
aad
jnp
sub
stc
jnp
sub
in
in
cmp
lcall
les
imul
jbe
adc
popf
test
pop
jg
or
into
mov
or
xor
or
ljmp
scas
in
mov
adc
lcall
xor
shl
jo
sub
mov
lret
inc
cmp
stc
xchg
push
psubsw
dec
inc
mov
push
into
mov
mov
imul
leave
adc
gs
es
jo
subl
xchg
addr16
jle
rcr
mov
ds
imul
inc
dec
xchg
add
pop
test
jp
xchg
or
lock
dec
adc
ret
mov
mov
into
add
inc
mov
ljmp
mov
leave
pop
inc
int3
inc
mov
fildl
fldenv
ja
ja
js
jae
mov
adcl
xchg
sub
pop
lret
rcrb
and
sbb
push
push
mov
xor
idivb
mov
repnz
rorb
or
jnp
imul
test
add
fistl
jecxz
into
push
gs
ljmp
jmp
imul
add
push
dec
sub
mov
fisubl
sbb
or
push
and
xchg
das
cli
popa
adc
cmp
sbbb
jl
test
mov
lcall
sti
sub
lahf
push
cmp
cli
push
jmp
xor
daa
xchg
idivl
push
or
jmp
aad
test
fiaddl
cltd
mov
fnsave
ret
jbe
outsb
mov
in
aam
cmp
ss
es
mull
push
sti
fneni(8087
sub
stos
sub
mov
lods
push
push
adc
sti
sti
pop
aaa
mov
or
out
sub
mov
les
xor
pop
out
movsb
bound
enter
stos
into
cs
jbe
pushf
sbbb
add
xlat
sahf
xchg
pusha
xor
movsb
in
shlb
cmp
mov
mov
sub
out
lods
dec
push
leave
or
dec
outsb
push
dec
rorl
popa
aas
ljmp
loop
fadd
mov
int
pop
cli
fwait
sbbb
pop
push
loopne
ds
loopne
mov
imul
scas
enter
push
fcmovu
or
frstor
je
out
mov
icebp
les
pop
push
jecxz
mov
cmpsl
sub
mov
jns
out
out
leave
test
cmpsb
ret
xchg
in
into
cmp
imulb
imul
les
mov
add
mov
hlt
orb
adc
ret
push
xchg
inc
inc
aaa
jecxz
pushf
pusha
outsb
push
out
xchg
int3
lods
out
sbb
pop
mov
mov
leave
pop
cli
xor
xor
cmp
sbb
aad
loop
pop
in
xchg
into
mov
dec
fsubrl
mov
mov
mov
xlat
adc
popl
pusha
and
cli
push
mov
rolb
cmp
daa
addr16
in
sbb
nop
pusha
fwait
pop
mov
add
test
inc
in
ds
repz
xchg
test
mov
shll
xchg
adc
xor
inc
gs
xor
push
aad
push
test
add
mull
fs
pop
xor
sbb
pop
add
sbbl
or
mov
sahf
inc
int
push
cmp
iret
pop
push
ds
sub
adc
xlat
in
rcrb
add
fsubrs
cltd
mov
and
scas
ss
scas
movsb
add
cmp
call
xor
std
pusha
sub
xlat
pop
xchg
mov
mov
xor
fs
hlt
lret
mov
imul
xor
xchg
pusha
pop
mov
out
arpl
adc
fwait
lea
out
add
push
cli
cmpsl
xchg
test
outsl
rcrb
cmp
sar
add
mov
lock
aam
inc
jae
sbb
hlt
aad
mov
sub
cs
push
xchg
jns
test
push
jecxz
lret
pextrw
mov
dec
ret
out
or
jns
mov
push
idivl
jp
test
iret
out
jbe
dec
mov
test
inc
xchg
out
jp
sub
repnz
sbb
sbb
adc
mov
rcll
jb
fidivrs
loope
jle
mov
inc
scas
into
repnz
stc
adc
in
adc
sbb
sbb
cmpsb
icebp
inc
xchg
orl
push
rorl
mov
mov
jmp
cld
test
jle
mov
call
lock
xor
dec
add
xlat
lea
fnstcw
sbb
rorl
testl
dec
lcall
push
push
add
imul
push
push
xchg
enter
cmpsb
scas
or
pop
sbb
sub
in
mov
andl
lret
push
or
xchg
hlt
xor
sbb
mov
aas
icebp
rclb
rcr
add
add
cmpsb
push
hlt
outsb
ljmp
fsts
push
imul
adc
mov
sub
mov
add
xchg
fisttps
out
popa
jnp
movsb
test
pop
pop
jnp
or
scas
sbb
mov
nop
mov
xchg
out
fs
out
or
push
xchg
pop
clc
jg
pop
iret
enter
inc
add
decl
push
mov
inc
push
mov
cmp
or
in
mov
out
push
and
movsb
mov
jae
push
jo
mov
adc
cwtl
jp
pop
add
jmp
test
mov
or
mov
je
mov
int3
not
mov
adc
maxps
cmp
sahf
cmp
sub
scas
ret
fcmovu
std
jmp
mov
jb
mulb
fimuls
lcall
lahf
das
gs
mov
gs
mov
push
mov
add
add
mov
xor
std
cwtl
mov
faddl
stos
fistl
mov
shlb
pop
mov
cmp
ret
cltd
push
les
cmp
mov
ss
insb
mov
fwait
into
sbbb
es
jmp
cmp
ja
dec
xchg
jle
das
mov
push
aaa
add
or
and
xchg
mov
jbe
adc
push
push
jno
pop
fisubs
xor
out
outsl
in
jle
add
cmp
call
mov
push
xor
inc
ja
cmp
int3
xchg
jecxz
and
cmp
and
jb
jg
pop
ljmp
loop
out
outsb
pop
mov
cmp
sub
jp
addr16
and
pop
push
fidivrs
inc
sbb
ret
inc
cld
jbe
xchg
and
imul
mov
lock
cmp
xor
rolb
add
mov
lds
fwait
imul
add
jecxz
repz
mov
cmp
xchg
fstl
call
lods
jmp
push
xchg
mov
push
stc
push
xchg
inc
out
rolb
pop
incl
lahf
cmp
jp
dec
cmp
dec
enter
lret
lret
insl
imul
dec
mov
fisubl
pop
lcall
mov
cmp
mov
push
pop
rcll
mov
outsl
cmp
aaa
int3
mov
cmp
mov
add
in
insb
mov
or
mov
jle
test
test
aad
xchg
mov
sbb
add
jmp
pop
xchg
sub
push
and
dec
or
mov
push
add
sbb
fisubrs
mov
sbb
pop
inc
pop
jmp
aas
fnstcw
sti
push
dec
cmp
cltd
mov
insb
push
and
insb
test
adc
jno
dec
push
sbb
fwait
cs
fdivr
sarb
add
cmp
imul
rcll
mov
outsb
xchg
jbe
movsl
into
rcrb
adc
adc
loope
pop
iret
cmpsl
dec
idivb
rol
xor
cmp
adc
icebp
fmul
aad
push
xchg
add
icebp
cmp
sbb
xlat
and
xor
loopne
insl
jecxz
loopne
push
mov
mov
xchg
cmp
adc
adc
mov
sbb
inc
and
push
fisubl
mov
addb
jg,pt
aam
cmp
ja
fs
sar
cmc
mov
push
xor
sahf
or
push
jmp
jbe
pop
jo
dec
es
push
ss
mov
dec
jno
mov
fistpl
lahf
loop
xorb
xchg
dec
je
add
jecxz
lcall
test
cli
xor
enter
or
jo
mov
fisubrs
fsts
insl
pop
cmp
xchg
ret
xor
aad
xchg
push
mov
imul
int3
xchg
jo
pop
rclb
mov
pop
dec
ss
fs
mov
pop
bnd
and
lret
adc
jo
scas
dec
out
dec
push
mov
pop
and
repz
std
enter
sbb
addr16
sub
out
push
repz
repnz
sbb
or
mov
sub
les
clc
popf
in
iret
cltd
lea
xor
push
cld
cmpsl
movsl
stc
mov
mov
mov
mov
adc
add
pop
loope
test
popa
lds
and
inc
stc
daa
inc
or
push
fidivrl
pop
lret
cs
int3
cmp
das
inc
and
jns
mov
or
inc
dec
fsts
cli
mov
pushf
cmp
mov
and
outsl
sti
out
cmpsl
lock
push
xlat
dec
pop
mov
out
das
shrl
divl
mov
jg
pop
sub
cmpsb
mov
mov
subb
adc
pushf
mov
cmp
pop
xchg
test
sahf
inc
and
repz
rorb
leave
ss
test
cmp
into
bound
lret
mov
mov
aaa
add
arpl
mov
cmpb
int3
xor
lahf
stos
je
outsb
adc
mov
push
fmuls
jno
sbb
xor
inc
add
add
push
dec
addr16
sti
loopne
jge
jg
iret
in
jge
dec
mov
js
mov
push
xor
inc
push
into
popf
cltd
out
lods
mov
jmp
xchg
adc
test
dec
out
sbb
ja
ret
adc
hlt
pop
sbb
add
jb
mov
ds
dec
push
ljmp
fwait
pop
cmp
jno
jp
icebp
imul
les
data16
dec
and
imul
fisttpll
cmc
inc
jo
inc
push
inc
popf
adc
cmp
pop
dec
in
jno
pmullw
popf
pop
mov
push
aad
pusha
push
xchg
dec
mov
push
loopne
fstpt
cs
rclb
sarl
outsl
mov
repz
mov
loopne
mov
pop
pop
add
popf
les
outsb
hlt
loop
mov
lds
xchg
adc
xchg
add
movsl
rcr
mov
subl
mov
xchg
jle
cli
mov
fdivrl
ret
icebp
and
mov
je
stos
jns
mov
cmp
xor
mov
or
push
ljmp
int3
int
into
out
in
hlt
pusha
inc
sti
movsb
mov
sub
jle
mov
push
xchg
jne
cmp
jo
ds
or
popa
add
mov
and
sbb
cmp
in
pop
or
incb
lods
inc
and
push
insl
in
fdivl
push
push
mov
push
repnz
inc
add
sahf
dec
pop
pop
inc
scas
mov
leave
sahf
inc
fs
sbb
stos
push
mov
sbbb
jle
cmpsl
push
mov
inc
in
ds
push
fwait
lret
mov
pop
dec
push
faddl
inc
push
sub
jno
mov
test
jb
nop
icebp
sub
out
fs
xor
cmp
cmp
imul
dec
mov
cwtl
subb
xchg
enter
xchg
pop
jae,pn
jae
lret
adc
insb
jbe
sub
adc
push
leave
adc
dec
jb
dec
xor
cli
out
or
dec
xchg
jle
pop
adc
pop
popf
hlt
imull
mov
or
cmp
fucomp
sti
cmp
gs
fisttpll
fmull
mov
xchg
inc
sub
inc
dec
ror
push
fidivs
mov
call
cmc
jecxz
int
mov
and
xor
and
jle
xchg
movb
sbb
arpl
mov
fwait
cmpsb
mov
call
aaa
out
jg
push
jne
inc
cmp
test
or
jo
sbb
lea
jno
push
out
jecxz
xor
test
scas
add
mov
xor
test
gs
lahf
mov
pop
or
cmp
ret
add
sahf
in
sub
mov
rclb
js
or
pop
jb
psrlq
push
mov
shll
mov
movsl
or
lock
lret
pop
stos
push
aas
outsl
fwait
cli
xor
cmp
or
mov
pop
scas
add
cltd
inc
into
fstps
aam
and
dec
dec
es
jle
jo
and
jmp
mov
pop
icebp
mov
adc
stc
aaa
adc
fimuls
pusha
fucomi
jge
add
ljmp
notl
push
jae
test
rolb
cmp
cmpsb
pop
and
inc
and
dec
test
mov
mov
das
scas
pop
shl
movsl
add
les
push
add
adc
mov
mov
xchg
pop
out
cmc
shrb
cmp
icebp
sbb
lods
fdivrl
inc
mov
pushf
ffree
pop
jl
push
mov
cmc
jge
fnstenv
movsl
outsl
ds
mov
outsl
sbb
xor
xchg
jbe
mov
push
fs
mov
daa
pop
lcall
mov
cmp
mov
outsl
xchg
subl
rolb
mov
rclb
mov
or
push
push
stos
inc
jecxz
sbb
lods
push
push
movsb
hlt
xchg
push
rcr
add
ds
lahf
sbbb
xchg
push
sbb
cmpsb
sub
mov
test
mov
mov
loope
dec
push
push
outsl
cli
lret
adc
test
mov
xor
rcrl
pop
sbb
inc
jae
leave
in
fidivrl
or
or
xor
jnp
jae
dec
push
mov
movsb
insl
sub
pop
sub
movsb
adc
sbb
xchg
test
sub
lahf
sahf
xchg
cs
insb
push
xchg
cmpsb
push
dec
test
sbb
je
add
or
add
pushf
pop
lods
popa
xchg
shrb
xchg
imul
jnp
stos
pop
stc
ret
pop
lcall
add
jnp
add
xchg
and
mov
mov
gs
xchg
scas
fsubp
xor
aas
inc
cmp
dec
inc
cs
popa
adc
sub
daa
inc
fiaddl
push
dec
add
pop
pop
scas
xor
cmpsb
jo
xchg
ret
adcb
loopne
push
jecxz
mov
jecxz
cmp
outsb
sub
sti
mov
sub
movsb
icebp
or
push
mov
sub
divl
mov
fdivr
outsb
cs
inc
jns
push
or
cltd
in
repz
xor
xchg
xor
outsb
ror
shrb
push
pop
gs
mov
or
fiaddl
cmp
lock
int3
sbb
xchg
or
and
call
cmp
mov
int
pop
push
mov
ret
incl
push
jns
jmp
jne
test
fistps
pop
push
or
dec
lods
addl
leave
popa
or
les
lock
mov
mov
int
xor
int
sbb
std
inc
push
ja
rcll
fcoml
in
mov
or
fmull
testl
mov
les
xor
fmuls
icebp
in
add
push
aam
jge
aas
dec
mov
mov
cmp
mov
dec
shrb
mov
xchg
push
call
pop
mov
mov
call
xchg
ss
mov
inc
mov
loopne
dec
fdivrl
dec
fs
cld
insl
sbb
test
xchg
fstpt
dec
lods
out
xor
and
dec
lahf
imul
std
dec
or
lahf
cmp
xchg
xchg
std
inc
or
push
mov
push
or
test
add
and
sub
cmp
jne
or
das
add
pop
xor
dec
inc
ret
or
test
mov
js
inc
sbb
ret
jns
sbb
sbb
ljmp
sub
mov
cmp
dec
cmp
push
imul
pop
pop
push
jo
jae
loope
xor
jmp
or
xchg
mov
aaa
imul
hlt
mov
xlat
js
orb
popf
or
push
imul
rclb
inc
ror
push
ljmp
js
je
inc
test
push
sub
xor
xor
adc
inc
or
mov
jne
insl
cmp
pop
adcb
sbb
nop
test
popa
mov
ljmp
sti
mov
mov
bound
jecxz
repz
aaa
cs
cmpsl
add
dec
xchg
push
movsl
div
test
subb
xchg
mov
lock
lahf
adc
movl
jne
add
add
cmpsl
cmp
mov
mov
sub
imul
and
repnz
mov
cmp
js
push
aam
jge
lea
scas
sti
sbb
xchg
sbb
out
pop
adc
nop
insl
lock
insb
les
mov
cmc
jecxz
add
lods
std
push
mov
dec
mov
je
sub
clc
repnz
ljmp
cmpb
sub
cmp
shrl
fidivl
xchg
adc
xchg
xchg
sub
pop
mov
test
mov
nop
mov
inc
inc
inc
lea
xor
mov
and
movsb
xchg
popa
push
sub
fstpl
add
rcll
inc
inc
sti
mov
inc
aas
mov
and
or
push
mov
add
sbb
and
pop
popf
incb
ja
fistpl
cs
pop
scas
sub
std
outsb
add
rcl
loope
jns
shrl
ret
loope
cmp
les
sbb
mov
repz
pop
faddl
xor
xchg
aad
adc
push
dec
pop
jbe
sbb
int
pop
shr
jecxz
shrb
pop
mov
adc
outsb
pop
xor
fstpt
inc
push
and
and
imul
add
lahf
mov
push
sub
jl
xchg
dec
jo
fs
subb
cld
call
xchg
idivb
outsl
ss
mov
loopne
push
loope
jae
mov
cs
adc
int
fwait
lods
push
or
and
cltd
cmp
xor
call
mov
dec
cmp
and
lock
adc
ret
push
fldt
pop
fsub
xchg
and
add
loopne
vphaddwq
enter
inc
ljmp
adc
outsb
xchg
inc
mov
out
mov
xchg
movsb
sub
out
cmp
lcall
adc
test
outsl
jmp
mov
jne
mov
in
shll
inc
std
mov
lods
dec
jmp
xchg
aad
loopne
inc
add
cmp
jne
mov
popa
mov
sbb
xchg
fistpll
pop
rorl
or
dec
test
and
adc
sub
arpl
push
push
nop
push
add
leave
les
aas
jnp
aad
mov
jne
adc
ds
shrb
lcall
ret
mov
inc
inc
mov
dec
iret
or
out
pop
jl
inc
jg
aas
sub
or
push
or
shll
mov
xchg
lcall
cltd
test
fldcw
fs
push
and
test
out
inc
scas
mov
push
adc
pop
mov
pop
push
sub
pusha
xabort
cmp
das
sbb
roll
jns
pop
or
cmpsb
jnp
fisubl
lock
loop
sbb
iret
movsb
shll
cmp
sub
sub
into
sub
in
xchg
or
xchg
stos
cmpsb
xor
sbb
ss
fwait
aam
xlat
iret
inc
mov
popf
mov
fwait
pop
push
cld
jne
fsubl
push
hlt
aas
popf
add
js
fbld
repnz
push
in
jmp
pop
adc
sahf
data16
mov
dec
cli
push
add
inc
cwtl
mov
and
push
subb
daa
xor
mov
clc
jbe
insl
add
lcall
xchg
mov
sub
lahf
loop
xor
data16
add
ljmp
rcr
imul
movsl
add
ret
inc
xor
inc
sub
mov
mov
jmp
mov
mov
mov
lea
int
add
ja
das
jge
repz
add
clc
sbb
sbb
add
mov
inc
pop
leave
mov
mov
roll
dec
movsb
js
inc
int3
js
aam
push
in
pcmpgtd
mov
je
adc
je
mov
and
or
and
test
adc
mov
es
cwtl
push
mov
mov
mov
jge
icebp
inc
aas
mov
aaa
jnp
jo
decl
mov
pop
push
stos
pop
push
shll
mov
xor
test
sbb
mov
into
daa
mov
dec
inc
movsl
pop
hlt
scas
das
adc
mov
imul
gs
xchg
xchg
xchg
shr
lret
leave
mov
cmpl
sbb
xchg
out
leave
fwait
push
xchg
aad
test
dec
pop
scas
popa
leave
adc
pop
dec
add
mov
pop
push
push
pusha
dec
or
add
push
push
addr16
cmp
pop
js
pop
mov
ds
xchg
ja
push
loope
jnp
cltd
cmp
outsl
insb
or
dec
sub
sub
dec
int
cwtl
inc
loopne
std
xchg
pushf
jbe
push
cwtl
cmp
test
repz
push
sahf
mov
mov
push
add
ret
dec
push
cld
test
xchg
stos
xchg
pop
stos
rcrl
push
lock
cwtl
je
or
test
cmpsl
dec
fisubrs
mov
or
lcall
loop
xor
or
inc
call
xchg
insb
mov
add
insl
je
sbb
test
jo
add
dec
sub
nop
lret
jno
cmp
test
sbb
cmc
dec
mov
movb
mov
mov
add
into
jb
jecxz
aaa
jp
dec
dec
push
cmp
and
fsubrl
mov
lea
sbb
dec
decl
aas
into
pop
push
imul
adc
jb
loope
call
enter
mov
lret
outsl
inc
shlb
cmpsb
adc
insl
in
leave
inc
scas
jge
dec
jg
cmp
imul
stos
adc
pushf
push
aad
je
cli
xchg
sbb
mov
adc
fisttpl
aam
das
mov
std
cs
push
cmp
xchg
hlt
fnstenv
fisubrl
nop
push
add
mov
push
inc
ret
and
cmp
lret
fdecstp
inc
push
fldcw
nop
shl
aad
mov
loopne
cmpsb
cmp
add
mov
in
mov
jnp
jbe
mov
pop
aad
js
pop
adc
add
movsl
jl
inc
and
cwtl
xor
subl
pusha
mov
out
mov
stos
lock
and
dec
or
clc
xor
xchg
or
lret
add
jno
mov
int3
mov
push
scas
push
loope
jns
push
or
ljmp
push
cld
cmp
enter
and
int3
xchg
dec
out
sti
jmp
fdivrs
cmpsl
xchg
lcall
je
mov
mov
cwtl
jno
push
xchg
test
aas
jbe
push
rcrl
mov
pop
cmc
hlt
fcom
xorl
cmc
test
movsb
xor
adc
inc
insl
xlat
sbb
andb
mov
mov
dec
mov
mov
imull
cmp
cmpb
mov
cmp
loope
xor
xor
scas
dec
cmpsb
pop
mov
push
adc
in
cmc
cmp
dec
push
jb
push
mov
cmpsl
fstpt
push
nop
jmp
mov
fnstsw
sti
or
pop
outsl
clc
hlt
into
or
or
push
cmpsb
ja
data16
mov
mov
inc
add
and
cmc
dec
loopne
mov
and
xor
push
js
jg
lods
or
dec
cs
jge
iret
mov
mov
jl
ret
mov
fwait
lcall
clc
popa
scas
into
lds
add
adc
adc
scas
dec
test
pop
mov
cltd
sarb
mov
cmp
ret
incb
test
or
mov
aam
int3
sti
jae
pop
test
cmp
loopne
xchg
lret
insl
adc
sub
xor
sub
and
daa
push
mov
jmp
ljmp
jle
inc
sbb
add
insb
test
les
pop
rcll
clc
popf
and
clc
mov
xor
xor
mov
loop
arpl
rclb
xor
xchg
out
jg
cmp
pushf
call
adc
xchg
std
scas
icebp
jl
xchg
aad
pop
insb
mov
and
sahf
loop
inc
jle
and
popf
movsl
and
in
adc
pop
xchg
xor
rcrl
fwait
jmp
mov
xor
rcrb
mov
jmp
ret
jb
jo
jle
inc
inc
and
nop
pop
adc
int3
mov
insl
mov
or
fistpll
pop
push
cltd
jns
bound
int3
push
cmpsl
aas
pop
xchg
mov
cmc
sbb
add
in
ja
inc
movsb
sbb
clc
fisubl
lock
fwait
mov
cmp
jo
leave
je
scas
pop
syscall
pushf
loopne
jnp
data16
jne
cwtl
mov
and
push
shll
mov
inc
jp
mov
mov
pop
inc
daa
addr16
mov
outsb
jmp
loopne
ret
ret
pop
jge
pop
jle
adc
inc
xchg
repz
lods
mov
gs
rcrb
xor
repz
mov
cmp
je
sub
cmp
lods
mov
lret
in
xor
adc
jns
int
gs
mov
jge
ret
mov
fimull
jb
sbb
push
inc
pusha
mov
scas
cmp
fidivl
in
das
and
xchg
fnstsw
sub
cmp
xor
out
jge
test
dec
dec
mov
lea
js
dec
inc
and
sub
insl
push
scas
sbb
inc
adc
jecxz
out
adc
in
pop
mov
jnp
shll
pushf
xchg
mov
ror
xor
popf
adc
add
loope
clc
mov
clc
xchg
enter
mov
out
jl
mov
sahf
mov
bound
or
aas
mov
mov
inc
jne
xchg
test
mov
cmp
call
fdivrl
divb
fadds
sbb
pop
or
pop
js
xchg
loope
ja
addr16
fistps
pop
xor
ljmp
fidivrs
pop
je
pop
mov
or
mov
xchg
data16
inc
pop
push
mov
test
test
sbb
dec
popa
incl
aam
dec
inc
cmc
adc
mov
pop
push
aas
inc
fdivl
pusha
orb
in
push
test
push
xlat
mov
mov
adcb
les
test
sub
dec
lds
divb
inc
mov
sub
xchg
adc
pop
xchg
jg
cmp
mov
adc
inc
and
iret
xchg
push
outsb
and
in
into
sub
sub
dec
repz
mov
sti
jae
test
add
sbb
inc
xor
adc
clc
insl
lret
addr16
mov
test
cmp
test
rcl
xchg
inc
test
jne
inc
xor
inc
lods
call
adc
xchg
inc
dec
mov
mov
inc
inc
cwtl
daa
loop
or
adc
dec
pop
stos
sbb
aam
repz
jns
mov
loope
adc
or
mov
ss
rorb
dec
or
sbb
fcomps
jbe
dec
mov
xor
jmp
add
fnsave
inc
popa
popf
cmp
icebp
add
fisubs
rcrb
fcmovnbe
andl
lods
lret
xor
jnp
dec
add
push
and
ja
pop
mov
addl
scas
stos
jns
mov
insb
mov
movsl
mov
sbb
hlt
fcmovnbe
sbb
mov
stc
or
lods
int
loope
lods
loop
pop
flds
inc
stc
adc
shr
mov
xchg
mov
cmp
mov
sub
cmpl
add
jne
xchg
pop
xchg
jb,pn
dec
fucomi
and
inc
adc
add
cmp
sahf
cmpsl
add
shlb
test
jge
sarb
adc
hlt
mov
sub
mov
mov
xor
iret
cwtl
jb
jmp
xchg
ja
and
mov
mov
mov
rorl
lahf
mov
dec
sbb
repz
or
out
push
and
xchg
inc
ret
ljmp
lret
in
lcall
pop
sti
fs
xor
and
sub
aaa
mov
je
aam
jg
jb
adc
imul
pop
stc
jecxz
jl
in
mov
pop
adcl
pop
xchg
scas
test
mov
mov
xor
sbb
fs
fsubl
jmp
xchg
or
xor
lock
pop
pop
sub
or
js
push
movsl
out
jo
lahf
mov
and
fistl
imulb
rcll
fnstsw
adc
or
int
jae
mov
inc
xor
js
sbb
sub
adc
add
pop
pop
cmpsl
outsb
xchg
add
jbe
bound
stos
inc
mov
or
mov
call
in
lock
inc
sbb
and
in
jb
outsb
in
pop
loop
xor
pop
jl
pop
shrl
push
rcll
enter
rorl
std
sbb
aas
cmp
pop
loop
lret
or
jl
pop
repz
lea
inc
add
add
cmp
pop
out
loop
mov
mov
shlb
push
xchg
lret
and
fwait
inc
jmp
addr16
xchg
loope
test
jle
or
inc
idiv
xlat
cmp
inc
and
mov
pop
ljmp
xchg
adc
clc
cltd
inc
pop
inc
push
mov
pop
mov
mov
mov
loope
mov
mov
sti
loope
int
jmp
mov
add
jnp
push
addl
mov
popa
out
ss
subl
cmp
repz
xor
sahf
or
iret
add
fwait
cmp
and
fisubl
fbld
in
pop
pop
adc
pop
mov
outsb
adc
ficoml
popf
dec
push
lods
out
mov
dec
cmp
shll
mov
mov
call
shlb
loop
test
enter
fdivr
or
sub
outsl
aas
sti
cltd
push
subl
pop
dec
jg
scas
or
in
xchg
hlt
sbb
cltd
into
insl
sbb
add
cmp
xor
jno
ret
test
pop
sub
inc
ja
lret
add
push
lods
sub
popa
dec
mov
jle
sub
jmp
sbb
adc
jne
sbb
adc
insb
imul
pushf
pop
mov
out
bound
inc
xor
mov
out
aaa
data16
xor
inc
add
adc
sbbl
add
sti
aaa
mov
adc
lret
mov
dec
fidivl
sti
dec
mov
cmpsl
daa
pop
hlt
outsb
int
xor
fs
in
xor
mov
mov
and
fmul
pop
int3
pop
pusha
adc
push
push
sahf
aam
sub
addr16
jl
scas
fs
les
loop
out
pop
pusha
cmp
adc
xchg
ret
pop
loopne
fcoml
ljmp
sti
popa
add
mov
repz
outsl
mov
push
mov
pop
mov
dec
outsl
fs
int3
out
jnp
stos
push
int3
add
cmp
rcll
add
pop
das
xor
inc
or
cmp
orb
ljmp
cmc
int3
hlt
push
call
loopne
xchg
ljmp
inc
cmp
in
sarb
int
lods
dec
leave
pop
mov
sbb
lods
cwtl
sarl
bound
inc
push
push
fimull
add
sahf
sub
jecxz
sub
nop
adc
aas
or
fistps
cmpsb
push
cltd
fidivrl
mov
movsb
lret
push
subb
stos
in
cli
mov
data16
add
mov
mov
sub
outsb
jo
and
mov
ljmp
imul
ds
dec
jnp
push
xor
sub
es
sub
jg
mov
arpl
test
repnz
fs
inc
addr16
jb
jns
mov
pop
cli
xchg
mov
inc
pop
fisttpl
in
ja
and
roll
dec
push
stc
sub
mov
in
jb
insb
dec
out
clc
cwtl
sub
adc
xor
lret
and
lock
lods
enter
mov
orb
sbb
addb
push
xor
inc
push
mov
xchg
sbb
inc
pushf
or
cmpsl
dec
popa
rorb
icebp
clc
sbb
rorl
cmp
inc
jno
in
jb
aas
push
popa
cmp
dec
clc
sub
orb
jno
cmpsb
fisubrl
das
xor
adc
jnp
cltd
jge
sub
adc
adc
mov
nop
les
xor
iret
out
psllq
mov
sub
ss
jbe
xchg
xchg
or
daa
mov
cmc
fcoms
sbb
push
enter
pop
jnp
and
lret
mov
inc
pusha
mov
loopne
gs
sbb
fwait
push
push
jno
pop
xchg
pop
xchg
andb
leave
iret
push
sahf
or
adc
push
addb
mov
aas
imul
idivb
jo
xchg
sti
sbb
std
adc
ret
pop
mov
and
sub
xchg
lods
imul
in
adc
clc
stc
dec
xchg
or
adc
cmp
in
lahf
insb
in
xlat
mov
inc
inc
cmp
mov
gs
or
les
adc
sbb
push
in
rcll
and
loop
and
jecxz
xor
mov
ss
lcall
icebp
pop
push
or
lods
sahf
xchg
aas
in
mov
cli
jg
and
cmp
add
dec
icebp
mov
push
out
outsl
dec
nop
je
je
lahf
pop
ds
lods
in
and
mov
push
fists
lods
sbb
sbb
popf
mov
std
out
mov
xchg
out
cltd
mov
xchg
xchg
xchg
add
rorb
mov
fnstcw
sub
sbb
cmp
mov
adc
push
lret
mov
jo
push
push
dec
loopne
cli
in
mov
mov
push
mov
or
loopne
dec
jo
push
or
out
inc
push
iret
pop
test
xchg
xchg
push
fdivrs
fcompl
or
setbe
jb
pusha
sti
out
inc
das
outsl
mov
movsb
imul
mov
jnp
lock
imul
test
mov
repz
pop
pop
arpl
out
fcomp
sub
jne
or
and
iret
jg
dec
xchg
fildll
pop
push
inc
dec
jg
xor
inc
rcr
cltd
mov
sbb
dec
push
jns
sub
xor
clc
cli
aam
adc
add
stos
or
xchg
mov
lock
insl
jns
push
cwtl
inc
pop
enter
mov
push
aas
push
jo
xor
jns
inc
movsl
cmpsl
mov
cmp
mov
in
push
pop
adc
push
xor
xor
ds
sub
rolb
in
sbb
imul
ja
jg
insb
xor
mov
jne
cmp
in
adcl
jnp
mov
pop
pop
push
sbb
inc
dec
lahf
pop
inc
int3
push
jno
les
or
mov
pop
ret
mov
out
jmp
sbb
lahf
add
adc
add
js
fs
jbe
jne
add
test
enter
inc
mov
int3
cmp
cwtl
jns
sti
dec
popf
jle
ret
xor
and
fcomps
in
cmpl
js
std
imul
add
cmpps
sti
imulb
cmp
adc
cmp
inc
push
fadd
dec
xchg
sub
test
rorb
loopne
fwait
sub
jne
pop
cwtl
outsb
rorb
ds
add
loopne
fsubrp
sarb
sub
sbb
mov
pop
jl
jg
sbb
lods
xchg
jge
loope
push
fistl
dec
loope
repnz
out
push
sbb
jp
jb
into
mov
fbld
sub
jge
jnp
xchg
nop
out
jle
cmpsl
outsb
repnz
push
loop
sahf
int3
in
xor
adc
push
inc
add
add
mov
mov
inc
rolb
jmp
xchg
cwtl
enter
cmp
gs
mov
push
shl
mov
rcrl
call
out
pop
nop
loop
je
cmpsl
and
cs
orl
mov
dec
fs
mov
ret
cmp
aas
fldcw
pop
mov
or
lahf
fwait
rcl
in
jns
int3
xchg
mov
or
inc
pop
xchg
push
xor
aam
or
clc
add
inc
cmc
stos
jbe
and
jo
lcall
aam
mov
test
int3
sbb
and
adc
jb
or
out
int3
cmp
loopne
leave
ljmp
lcall
push
lods
pop
sub
into
inc
sarl
pop
fld
mov
and
daa
stos
jne
test
mov
cwtl
shl
cmp
pop
sub
mov
into
dec
rcrb
adc
cmp
xor
mull
sub
push
mov
lock
cmp
lahf
dec
mov
add
mov
mov
sbb
scas
mov
es
pop
pop
sahf
dec
mov
inc
gs
mov
jnp
scas
ror
daa
or
out
cld
movsl
push
loop
jp
int3
out
sarl
stc
push
xor
pop
popa
and
push
xor
adc
nop
pop
shlb
out
iret
mov
cmp
movsl
arpl
lret
outsb
into
inc
icebp
jne
mov
inc
sub
fisttps
or
lahf
loopne
jae
out
xor
cmp
mov
and
mov
or
inc
and
jmp
enter
nop
dec
mov
lock
adc
aas
idivb
mov
xchg
popa
gs
lret
in
mov
ss
shrl
sub
pop
std
fs
cmp
mov
mov
cmp
inc
add
sar
loopne
and
cmp
mov
pop
dec
dec
jecxz
xor
rcr
movsl
mov
std
out
pushf
jo
fidivrs
mov
push
cmpsb
negl
push
cltd
xchg
push
fwait
mov
pop
fistl
adc
insb
push
dec
test
dec
xchg
aam
jbe
dec
jb
clc
gs
push
mov
daa
dec
push
push
sub
or
mov
loop
shrb
mov
iret
cmpsb
sub
dec
mov
xchg
adc
out
or
in
int
call
leave
sbb
ss
addr16
sahf
outsb
dec
clc
cmp
andl
dec
adc
movsl
fstpl
mov
sbb
push
aam
jnp
loop
ficoml
inc
sti
mov
loope
mov
mov
mov
adc
or
mov
data16
pop
inc
enter
xor
cmp
lea
nop
in
adc
lods
movsl
dec
jb
dec
fwait
ljmp
lret
iret
cli
insl
xchg
int3
mov
dec
rorb
shll
sub
pop
push
fists
inc
jne
out
sub
xor
loop
dec
jmp
or
mov
sub
enter
mov
clc
push
cmp
ret
rcrl
pop
jnp
push
outsb
dec
clc
rcrl
aas
aas
cltd
stos
mov
inc
push
jno
aaa
popf
push
cs
stos
out
push
rorl
stos
cmp
adc
or
call
adc
jmp
call
sahf
adc
arpl
xor
mov
ja
cmpb
push
fmull
loopne
sbbb
mov
mov
into
cltd
arpl
mov
jmp
fstps
adc
scas
mov
mov
pop
dec
sub
fmuls
and
cltd
xchg
outsb
loop
ljmp
insl
scas
inc
mov
add
mov
faddl
adc
xchg
sub
push
enter
mov
push
dec
pop
mov
imul
mov
sub
icebp
rclb
xor
add
mov
adc
mov
mov
xchg
inc
movsb
ds
dec
xlat
shrb
fwait
adc
xor
push
int3
shl
pop
jp
jmp
sbb
dec
sbb
cmp
jge
jle
mov
decl
packsswb
cmpsl
daa
aad
jp
cmpsl
and
push
lret
mov
hlt
mov
icebp
enter
out
xchg
int
pop
adc
stc
shlb
push
addr16
in
pusha
mov
in
cld
cmp
push
or
xchg
test
in
inc
mov
jle
or
ja
lock
and
mov
xlat
mov
mov
sbb
movsl
cmpsb
pop
jmp
mov
outsl
fldcw
mov
scas
push
icebp
rorb
xchg
push
sub
cltd
ss
out
ja
xlat
mov
add
arpl
cvtps2pi
loop
or
in
rorl
mov
add
pop
mov
xor
fdivrl
fcmovnbe
jno
rcrb
in
sub
dec
mov
and
test
ficomps
xor
lds
sbb
add
push
or
rorb
push
adc
in
sub
inc
jge
sub
sbb
hlt
adc
in
push
pop
test
cwtl
inc
rorb
test
mov
test
cld
mov
pop
ljmp
xchg
int
lods
sbb
cltd
fwait
sahf
mov
rorb
mov
mov
sbb
adc
loop
andl
mov
cmp
pop
sahf
lret
add
es
jecxz
hlt
and
movsb
test
inc
mov
daa
push
and
inc
jns
xor
mov
add
cmp
cmp
addr16
pusha
aas
pop
xor
adc
test
inc
mov
dec
inc
dec
push
xchg
repz
jp
incb
stc
jbe
gs
scas
les
mov
jnp
jle
mov
cmp
sbb
fidivs
jno
mov
lods
and
or
lods
es
jp
push
xor
fbld
push
int
insl
pop
testl
punpckhbw
and
inc
or
push
adc
fs
mov
sub
jl
fcoms
enter
mov
pop
pop
inc
jne
jnp
cs
and
mov
das
addb
rcrl
je
pop
mov
dec
aam
dec
jb
xchg
ret
mov
lods
mov
jg
dec
out
shll
mov
aas
shlb
adc
push
das
push
push
inc
pop
data16
mov
mov
in
add
mov
in
in
loop
adc
sub
mov
push
rcr
dec
mov
pop
mov
cmpsb
or
mov
sar
cmpsl
enter
shrb
pop
mov
add
outsl
pop
or
arpl
and
jnp
xor
add
iret
addr16
pop
cmpsl
jae
pop
stos
xchg
mov
cmp
inc
lcall
iret
pop
clc
lock
shr
jg
outsb
sbbb
ja
icebp
fisttpl
mov
addr16
icebp
push
push
and
add
les
insl
push
mov
cmp
adc
mov
aas
stos
notb
data16
jbe
faddp
push
or
xor
mov
xor
rol
sarl
and
aaa
insl
mov
repnz
out
and
push
ljmp
xchg
insb
in
mov
adc
notb
mov
sbb
shl
addr16
or
cmp
jbe
cmp
push
mov
inc
aaa
xorb
adc
mov
pop
mov
out
ret
dec
cmp
push
mov
jp
pushf
inc
out
lret
icebp
mov
cmc
xor
or
sbb
push
in
mov
xchg
jo
push
or
mov
mov
loope
pop
into
lret
in
cmpsl
loop
xor
mov
xor
mov
aam
andb
cmp
sub
icebp
in
movsb
mov
adcl
mov
aas
lock
outsl
sub
xchg
sbb
cmpsl
jp
js
sbb
lret
dec
mov
sbb
lds
sub
pop
rorl
add
add
adc
xchg
cmpsl
cmp
stos
int3
lcall
jo
sub
xchg
movsl
aad
adc
int3
lods
packssdw
mov
iret
out
mov
and
xchg
xor
lcall
int
push
mov
push
jnp
stos
test
jg
imul
inc
inc
nop
les
or
fcomps
xchg
popl
pushf
sub
cwtl
and
outsl
dec
rcl
negb
push
add
and
mov
dec
iret
data16
jne
xchg
and
cmc
fiadds
adc
and
pushf
xchg
sbb
cld
and
adc
mov
fisubs
inc
test
and
pop
in
push
imul
adc
xchg
je
mov
cmpsl
xchg
stos
xchg
lds
or
mov
xchg
out
cmpsb
jnp
or
outsl
xchg
js
inc
mov
push
jecxz
repz
adc
inc
sbb
cli
dec
pop
imul
fstps
mov
jnp
mov
jge
gs
pop
lcall
pop
jmp
jne
nop
int3
mov
dec
pop
and
movsb
data16
push
xchg
cli
mov
ja
ss
jno
movsl
push
aas
pop
repnz
pusha
and
lock
repnz
sub
es
arpl
cmp
sub
xchg
lahf
imull
sub
push
jnp
vpsubw
sub
xor
insl
xchg
mov
sbb
daa
fidivl
jp
je
cwtl
dec
outsb
jp
bnd
cmp
movsl
pop
pop
iret
sub
or
pusha
rcll
movsl
aam
fbld
ficoms
xchg
lret
pop
nop
inc
stos
or
ljmp
push
in
mov
inc
push
xchg
loope
or
jg
or
fdivl
stos
pop
push
scas
arpl
push
cmpsb
aas
inc
sbb
flds
pop
jge
inc
repnz
enter
add
fcmove
movsl
test
lea
adc
addr16
sub
jbe
popa
gs
or
stos
sarl
fwait
outsb
add
fwait
mov
dec
push
pop
stc
adc
aas
push
xor
mov
loopne
pop
in
adc
xor
mov
sahf
xor
nop
mov
rcll
push
and
cmp
pop
ja
mov
and
mov
scas
sbb
sub
add
lret
cmp
sbb
adc
stos
mov
call
xchg
sbb
icebp
mov
sbb
add
and
das
mov
or
sub
pop
int3
stos
loope
pop
clc
dec
xchg
jae
or
and
and
shlb
fs
data16
inc
dec
fisubl
and
pop
add
mov
jle
insb
fstpt
sbb
and
lods
mov
ret
es
push
jno
hlt
in
push
insb
idivb
xchg
ljmp
cs
fisubrs
fcomps
stos
int3
push
xchg
stos
ret
out
in
nop
adc
add
adc
dec
push
bnd
xor
push
inc
cmp
adc
ljmp
fwait
lahf
xchg
pop
mov
test
jp
stc
test
pushf
cmp
les
push
jl
dec
adc
bound
mov
int3
mov
leave
mov
and
add
aam
or
hlt
cmc
in
dec
iret
add
stc
adc
sbb
or
push
and
jg
jne
enter
fldl
rolb
in
bound
ljmp
aaa
push
sub
fstl
sub
inc
or
inc
cmp
fwait
add
gs
stos
adc
stos
sahf
xchg
pop
ja
inc
xor
inc
inc
push
inc
icebp
sti
jecxz
cltd
pop
int
pop
or
test
test
adcl
mov
in
mov
lahf
push
jb
jge
repnz
sbb
pop
xchg
mov
fisubl
adc
xchg
cmp
jmp
lret
cld
fldt
mov
xor
into
pop
xorl
mov
and
lods
test
lods
imul
addr16
sub
jns
cs
add
jmp
sub
lcall
push
dec
addr16
movsl
dec
xchg
mov
ljmp
stos
mov
cmpsb
sub
ficoms
into
out
xor
call
xchg
mov
repz
sub
ss
pop
int
fwait
pop
ds
cmp
popa
jb
xchg
push
mov
das
dec
dec
jl
xchg
mov
jg
scas
stos
test
pushf
mov
imul
mov
push
fldenv
push
pop
xchg
movsl
sbbb
mov
imul
cli
jns
dec
cmp
repz
les
xor
fmull
testb
sub
lods
inc
dec
sub
cmp
daa
pushl
fcompl
push
mov
adc
in
loopew
inc
sbb
sbb
or
lahf
aam
push
push
mov
push
mov
mov
movsl
lds
ds
jle
mov
lods
mov
je
lret
sbb
addr16
pop
mov
cld
xchg
hlt
sbb
pusha
pop
stc
cmp
mov
mov
ljmp
push
ret
out
fdivl
pop
adc
add
ficoml
das
xor
ss
adc
in
xlat
call
loop
mov
int
inc
mov
pop
adc
sub
stc
sub
pop
inc
mov
mov
jmp
push
cmpsb
cmp
push
xchg
scas
and
aaa
mov
jecxz
dec
sbb
push
insb
pop
mov
lods
fadd
mov
mov
call
jne
dec
mov
push
adc
and
mov
and
xor
popf
push
mov
popa
xor
dec
or
add
mov
daa
aad
jne
ds
lahf
stos
inc
iret
pop
sbb
and
cmc
stos
es
lret
sbb
push
pop
loopne
push
mov
adc
out
and
push
xor
push
shll
inc
xchg
cmp
aas
pushw
inc
jmp
pop
add
dec
adc
test
jns
fimull
or
push
out
pop
or
push
gs
jns
push
repz
inc
jne
mov
add
lret
dec
and
inc
push
pop
repz
outsl
push
push
mov
cs
xchg
movsb
add
push
je
jb
jne
ja
inc
ljmp
mov
add
insl
aam
das
loopne
xchg
fistpl
mov
in
or
and
sahf
fdivrp
mov
aam
filds
outsl
jae
lea
jno
ret
dec
cli
cmpsb
pop
xor
dec
nop
decl
jp
lret
xchg
incb
or
lock
mov
xor
mov
test
xor
in
nop
or
iret
inc
push
test
loope
xor
inc
pop
jp
das
out
push
aas
imul
ds
ja
mov
in
ret
inc
dec
inc
push
loop
stc
sti
jb
fld
jns
fnstcw
adc
test
pushf
jmp
hlt
adc
push
cmp
pop
adc
mov
mov
in
and
cmp
or
jno
push
dec
pop
cs
cli
or
test
arpl
push
sub
scas
add
out
jae
icebp
cmpsb
mov
or
mov
xor
mov
sub
stos
pop
call
es
pop
jmp
test
ret
ss
aas
fbstp
nop
mov
push
xchg
xchg
mov
mov
cmp
movaps
cwtl
inc
mov
xchg
movsl
std
out
rcrl
mov
add
sub
pop
jns
test
mov
mov
mov
mov
mov
cmp
push
mov
dec
jno
xor
cmp
sub
addl
push
or
addr16
push
cmp
or
cld
addb
push
cltd
arpl
push
xchg
hlt
jl
fldt
inc
notb
or
jg
sbb
movsb
adc
scas
cwtl
aaa
fs
mov
push
push
into
outsl
adc
sub
and
addr16
push
ja
sub
lret
divb
mov
push
dec
push
std
push
inc
aaa
xchg
push
inc
inc
mov
cmp
lahf
cmp
popa
xchg
lahf
pop
orl
sub
pop
repnz
imul
test
pop
in
dec
push
shrl
daa
outsl
jnp
xor
mov
ret
lret
test
out
pop
dec
sub
pop
push
dec
cwtl
ret
inc
or
cs
int
out
iret
sbb
and
in
jne
ret
ds
push
or
push
cmp
shrb
fistpll
mov
lahf
dec
incb
cmc
mov
mov
or
imul
jecxz
jb
adc
lock
ds
lock
inc
enter
inc
cmpb
call
and
xchg
shr
popa
test
inc
cmpsl
gs
xor
cmpsb
or
adc
aas
push
jmp
adc
mov
mov
mov
and
mov
adc
cmp
cmp
or
stc
sbb
fcmove
push
add
dec
jb
mov
test
stos
inc
or
dec
adc
clc
pop
add
mov
jae
shlb
jne
mov
add
or
ror
fwait
push
outsb
imul
dec
es
xor
stos
in
je
push
mov
push
test
incb
loope
mov
sahf
fwait
push
push
sub
hlt
or
xor
jno
in
and
cmp
int3
jo
xchg
mov
jo
mov
movsl
movsb
sbb
add
inc
cmp
ljmpw
cltd
xchg
movsl
cmp
cltd
ja
xor
mov
mov
rcrl
lret
push
outsb
push
xlat
jne
xchg
out
mov
aam
inc
push
mov
data16
add
lds
push
mov
xchg
cltd
mov
sti
in
in
rep
adc
lret
dec
pop
loope
and
pop
xorb
push
sub
lcall
fnstsw
cmp
dec
aam
mov
out
xchg
mov
int
pop
ret
mov
lods
dec
and
cmc
xchg
cmp
mov
lret
out
test
cmpsb
sbb
adc
clc
stos
je
push
sub
rcrl
mov
pop
repnz
sub
cmp
dec
mov
xchg
or
push
loop
xchg
lret
cmpsb
lret
inc
scas
ds
lock
mov
out
scas
fiaddl
mov
shrl
lock
push
and
dec
sub
push
test
or
push
or
and
shl
mov
cmp
push
jo
enter
and
mov
mov
and
mov
leave
lock
pop
sbb
lcall
cli
push
mov
insb
mov
rcrb
mov
cmp
dec
mov
aad
sbb
jmp
fiadds
in
pop
mov
sub
pop
sub
jbe
jmp
jge
push
aaa
mov
sbbb
dec
int3
add
and
adc
lock
jbe
xchg
xlat
push
icebp
adc
xor
lahf
pop
ss
rclb
cmp
or
push
mov
cld
cli
mov
xor
mov
cmovle
stos
jne
jg
xchg
hlt
mov
push
popa
les
out
dec
sub
leave
push
popa
jmp
push
mov
ret
fwait
pop
push
inc
insb
sbbb
outsl
pop
mov
sahf
sbb
and
dec
pop
push
bound
and
mov
les
jg
lock
fwait
cmp
add
inc
dec
paddw
nop
add
push
mov
ret
outsb
push
loope
fsubrs
leave
icebp
mov
test
fmull
iret
mov
pop
shrl
out
scas
into
push
push
dec
imull
imulb
fistpll
and
repnz
inc
in
mov
test
xchg
icebp
out
fnsave
xor
mov
push
push
jecxz
cmc
xor
insb
pop
imul
add
mov
mov
adcl
dec
adc
cmp
aaa
xorb
out
pusha
pop
fcmovu
or
dec
cmpsb
in
xor
cltd
stc
dec
je
out
xor
mov
or
inc
sub
sti
push
shlb
adc
xchg
pop
notb
mov
fwait
popa
mov
mov
xchg
sub
mov
cld
sbb
jnp
pop
shlb
push
pop
fs
int
push
mov
pop
mov
cwtl
mov
dec
push
xor
cmp
inc
ret
rorl
sub
or
repnz
popf
cmc
push
inc
fstl
lcall
xchg
or
mov
rolb
fstpl
into
inc
enter
jne
mov
xchg
ret
sbb
loop
sub
imul
xchg
popw
inc
mov
out
sti
int
imul
leave
push
outsl
mov
xchg
xor
dec
fistl
sti
rorb
call
andl
inc
loopne
mov
mov
cmc
mov
loop
xchg
dec
fiadds
scas
lods
sarl
sti
xor
cmp
ss
cs
inc
adc
xchg
mov
iret
lods
mov
push
or
pop
mov
fmul
sbb
lret
push
cltd
sbbb
adc
jge
jnp
cmp
xchg
push
or
add
and
ja
inc
mov
inc
mov
inc
dec
rol
aad
adc
mov
sub
not
bound
lcall
sbb
dec
mov
mov
std
testb
in
sub
inc
out
inc
fs
test
mov
nop
ret
or
jae
dec
sbb
cmp
fadds
sub
test
ja
xor
int3
popf
add
ret
mov
ja
mov
mov
daa
or
cmp
addb
jg
add
push
sbb
insb
les
push
mov
jecxz
add
push
lret
decb
sbb
cwtl
and
pop
sub
arpl
les
sub
cmpsl
xor
leave
lock
das
mov
and
mov
sub
enter
jmp
mov
rol
lret
lcall
leave
mov
push
jl
fidivs
xor
insl
mov
jo
xor
test
xchg
sub
or
rcll
rcr
imul
push
leave
add
add
gs
dec
pop
repz
in
adc
je
jp
sahf
mov
lret
jmp
aaa
jle
rcll
mov
and
jp
jns
push
inc
mov
aas
fildll
in
mov
movsb
fimuls
jnp
sbb
rcrb
and
aaa
sbb
iret
repnz
gs
mov
fidivrs
mov
pop
std
mov
jecxz
add
imul
mov
mov
shll
inc
sub
lcall
add
rcrb
sub
pop
sbb
mov
adc
aaa
lcall
and
sub
popf
cld
out
sub
roll
cmpb
jecxz
xchg
pop
daa
mov
jge
stos
add
jnp
aad
std
jae
mov
lahf
push
sub
cmp
and
rclb
jns
leave
dec
inc
imul
add
movb
fldenv
sahf
mov
jno
adc
mov
inc
std
cmp
or
rol
data16
mov
mov
aaa
add
sbb
pop
cs
cwtl
loop
unpckhps
outsl
pusha
push
mov
enter
sarl
jae
popa
cmc
jns
or
sar
push
cld
js
lahf
pop
xor
jb
add
xchg
imul
xor
call
cmp
or
rcll
xchg
fistps
loop
or
or
loope
pop
cmp
push
xor
stos
push
sbb
cld
xlat
imul
addr16
gs
lahf
cmp
mov
inc
jl
dec
push
daa
adc
cmp
fwait
jns
lcall
stos
mov
push
subl
sbb
lock
xlat
ror
lods
jg
out
push
subb
je
push
pop
enter
fs
or
js
cmpsl
mov
and
jnp
loope
call
and
xchg
stos
jbe
pop
rolb
push
mov
add
aad
or
xor
pop
out
dec
pop
setnp
leave
and
xchg
in
aaa
ds
push
mov
and
imul
imul
pop
xchg
add
js
lods
dec
es
bnd
add
push
cs
sbb
shrb
adc
sub
pop
arpl
in
dec
ja
adcl
std
inc
std
sbb
xchg
jnp
les
or
mov
inc
dec
mov
outsb
sub
pop
jecxz
popa
push
adc
pop
in
andb
push
pushf
shr
cli
jl
clc
xor
repnz
lods
aaa
fs
xchg
int3
inc
inc
jns
outsl
jecxz
rcrb
sahf
daa
and
jno
scas
push
sbbl
jl
scas
sbb
adc
stc
leave
add
mov
push
sbb
dec
cmp
into
mov
int3
mov
repnz
lret
mov
dec
mov
push
hlt
cmp
xor
rclb
add
cmp
lock
sbb
sub
and
clc
mov
mov
dec
nop
and
inc
in
inc
out
pop
mov
hlt
xorl
shll
icebp
cwtl
jns
push
cmpb
aaa
aad
cmp
scas
loop
aaa
xor
jle
dec
sbb
mov
xchg
add
push
cmpsb
or
xchg
fsubr
nop
loopne
fldl
sub
outsb
inc
or
sub
add
mov
insl
in
in
adc
mov
add
ljmp
negl
cmp
out
dec
mov
fwait
sbb
cltd
pop
cmp
out
data16
out
and
xor
lcall
or
aam
leave
cmp
xor
jg
xor
sub
icebp
sbb
in
outsl
pushf
jecxz
iret
xor
ljmp
xor
jge
scas
daa
aam
repnz
fisubrl
lods
cmp
push
cltd
cli
mov
stc
sbb
movsb
scas
xchg
mov
pxor
into
movsb
cmp
into
cmc
fnsave
xchg
push
cmpsb
xchg
movsl
jae
xchg
mov
scas
outsl
or
insb
nop
cmp
lods
jmp
shlb
jno
mov
sbb
lds
sub
cmp
cmp
add
sbb
push
dec
or
repnz
jge
or
in
cli
adc
cmpsb
mov
mov
xor
ljmp
add
and
mov
cs
push
aaa
inc
dec
xor
mov
or
repz
cmc
imul
or
inc
pop
mov
fdiv
es
test
gs
dec
push
jmp
dec
pushf
popf
ja
cmp
in
add
movsl
lcall
xchg
xor
push
shlb
pop
sbb
mov
popa
mov
mulb
mov
adcl
cmpsl
lea
mov
add
add
xor
insl
xchg
xchg
push
andl
insl
cmpb
cmp
fildl
cmpsb
leave
adc
arpl
icebp
jg
inc
js
push
in
mov
xchg
sti
xchg
ret
fadd
fprem1
fildl
push
push
adc
cmp
add
xor
out
inc
shrl
adc
add
jns
stos
pop
xorl
push
loopne
pop
mov
mov
rorb
loopne
xchg
test
mov
sub
andb
popa
inc
bound
std
cmp
mov
movsb
arpl
xor
mov
or
adc
cmc
ffree
stos
nop
cmp
adc
push
dec
fwait
mov
ljmp
mov
jo
push
lea
lods
lret
cmpsb
push
push
pop
in
rorb
mov
inc
sbb
mov
jnp
lcall
fisttpll
rcll
cli
mov
xchg
js
repnz
push
xor
je
loope
jg
fsubl
andb
ret
rorl
jmp
lret
jl
outsb
jp
les
out
sub
sbb
jne
out
movsl
push
fs
and
test
add
testl
lahf
xchg
xchg
dec
shlb
fs
pop
mov
lret
dec
adcb
mov
mov
lcall
lods
push
inc
adcb
clc
repz
cs
dec
inc
inc
sar
dec
call
insl
fcomps
inc
fadds
jge
sub
out
jle
dec
loop
jb
movsb
or
add
mov
mov
sti
pusha
fcompl
xor
movsb
dec
nop
into
dec
inc
xlat
xchg
pop
inc
loop
xor
dec
pop
gs
arpl
aas
test
cmp
cmp
add
sbb
outsl
jmp
popa
in
and
sub
pop
cmp
push
lock
inc
push
jmp
shll
sub
scas
cltd
faddl
hlt
rclb
lret
fsubr
stos
dec
xchg
enter
or
mov
clc
insl
adc
sbb
fistpl
das
jecxz
push
loopne
xchg
mov
xchg
sbb
push
jae
negb
daa
mov
in
dec
mov
cld
cmp
jo
int3
or
push
dec
aaa
lahf
out
push
mov
and
jp
dec
out
jmp
insb
fucomi
fdiv
shlb
movsb
jae
sub
xchg
int
add
scas
sbb
test
les
aam
push
xor
push
imul
adc
stos
xor
shll
cmp
and
decb
in
std
aam
jle
in
inc
in
mov
pop
adc
outsl
in
popf
push
shll
cmp
inc
out
push
dec
fcoml
and
lret
inc
mov
iret
cmpsb
adc
mov
rcrb
clc
lods
jbe
dec
inc
xchg
scas
mov
add
cmp
stos
leave
push
ja
repnz
cmp
and
add
push
mov
fcompl
test
out
and
dec
xchg
pop
aas
scas
aaa
dec
scas
pop
into
sbb
sbb
cmove
pushf
sub
lock
ljmp
push
mov
push
dec
and
push
and
fisubrl
cmp
mov
lods
rcrb
inc
pop
les
mov
jno
inc
mov
cmp
pusha
xor
dec
xchg
jp
add
lock
push
jno
dec
jbe
into
dec
pop
in
cwtl
shll
xor
popf
cmp
mov
out
sub
movsb
sbb
mov
cltd
or
ret
cmp
xor
lcall
sbb
fdivs
inc
insl
test
ds
and
add
push
push
sub
cmp
nop
aad
jmp
lock
jg
call
or
cmp
test
xor
pop
int3
push
push
std
ret
sub
xor
dec
mov
mov
pop
sahf
dec
sbb
add
adc
mov
cmpsb
jns
movsl
movsl
add
jle
out
add
mov
pop
mov
add
pop
in
lcall
daa
leave
fimull
or
dec
mov
sub
int
aas
sbb
jecxz
loope
or
mov
cmpsl
out
aaa
mov
push
and
ja
add
xchg
xor
popf
or
arpl
inc
sub
arpl
cmp
cli
roll
pop
mov
lods
addb
mov
mov
rcll
add
cmpsb
xchg
and
aas
repz
pop
dec
xchg
scas
adc
cmp
adc
sbb
jb
pop
push
xchg
sub
dec
addl
xchg
in
mov
or
sti
std
mov
mov
jb
jmp
add
fimull
stos
into
vpsllw
dec
aad
sarl
lahf
fcomps
lods
and
jns
imul
mov
mov
les
add
mov
pop
stos
out
fbstp
in
add
inc
enter
cmp
mov
andl
stos
int
jmp
mov
roll
ja
sahf
adc
pop
sub
int
push
pop
lcall
xchg
cmpb
in
int3
jne
sub
test
push
cs
leave
cmp
cmp
cs
lahf
aas
ss
and
lock
push
cmp
add
dec
xlat
pop
icebp
fcmovbe
adc
leave
scas
les
jnp
or
fisttps
jge
mov
mov
rcr
fwait
push
and
inc
fisttpll
pop
test
icebp
push
xor
lcall
rorb
cmp
sbb
aam
fdivs
add
dec
xchg
lock
cmp
mov
xlat
mov
movsb
sti
rep
jmp
repnz
cmpsb
and
xchg
sub
repnz
cmpsl
cmc
adc
jb
fadd
jno
xor
enter
arpl
rcll
mov
pop
dec
dec
inc
lahf
fstps
sbb
js
push
psubd
pop
sarl
movsb
orl
cli
aas
xor
mov
mov
outsb
mov
add
fs
in
mov
repz
int3
test
lret
stos
xor
fstl
cmp
hlt
addr16
fs
cmp
aaa
cmpsb
hlt
sub
add
nop
sub
pop
outsb
and
add
xor
jg
mov
ret
or
mov
pusha
frstor
mov
cltd
and
jecxz
sbb
jp
add
and
fcmovne
mov
push
cmp
loope
test
sahf
mov
int
sbbl
mov
push
insb
xchg
test
inc
cmpsb
jnp
cwtl
into
adc
cmpsb
sbb
bound
mov
mov
mov
adc
imul
pop
in
movsb
iret
xlat
xor
add
loope
testl
pop
fildll
lods
mov
and
out
jl
bound
loopne
mov
cmp
pop
repz
jle
daa
outsb
jno
jecxz
xchg
push
std
hlt
lods
pop
adc
repnz
jbe
push
rep
xchg
push
sbbl
notb
mov
cwtl
sub
sbb
mov
dec
dec
movsl
inc
clc
xlat
iret
xchg
nop
sarb
cmp
fstp
ret
and
test
mov
dec
jmp
sub
or
pop
pushf
xchg
dec
xchg
push
insl
and
push
mov
cmp
jae
add
fimull
pop
rorb
sub
mov
mov
jno
adcl
push
leave
insl
cmp
jecxz
shll
dec
pushf
dec
dec
dec
mov
repz
jbe
mov
inc
mov
pop
dec
xchg
add
pop
mov
inc
pop
pop
hlt
mov
mov
inc
insl
in
mov
addr16
mov
aaa
and
in
lods
test
jb
adc
leave
mov
push
in
cld
push
xchg
ljmp
dec
jo
jg
js
add
hlt
inc
or
cltd
jns
loopne
xchg
movsb
test
or
sti
xchg
cmp
pop
leave
push
out
pop
hlt
mov
xorb
or
sbb
dec
imul
cld
jle
lret
inc
mov
add
add
xchg
or
lcall
ja
in
xor
sbb
popa
xchg
cmc
dec
sub
cmp
ror
nop
and
dec
shl
jae
inc
in
cld
es
xor
roll
and
andb
add
inc
outsl
and
mov
and
test
dec
push
loope
fwait
mov
ljmp
adc
push
ds
lock
and
push
jb
adc
int3
fistl
inc
sub
iret
xor
and
lea
adc
aas
scas
jl
cmp
or
xchg
rcrb
adc
ja
mov
fidivrs
or
ret
sarl
dec
mov
cmc
neg
loopne
stos
clts
outsb
mov
and
test
sahf
fnsave
out
fidivl
lahf
nop
adc
jb
inc
incl
xor
xor
xchg
push
adc
jbe
and
shrb
imul
and
in
test
mov
push
push
push
push
xor
fisttps
sarl
outsb
lock
popa
dec
dec
data16
jecxz
mov
xchg
mov
lcall
lods
addl
and
sbb
mov
repnz
cmpb
outsl
ja
fstps
scas
and
dec
neg
sti
inc
add
mov
mov
imul
lds
xchg
sbb
test
mov
xchg
pop
cs
jne
sub
xchg
mov
sub
pop
repnz
mov
push
pop
es
and
shll
jge
loope
dec
jge
movsl
xor
shlb
in
mov
rolb
cld
push
jl
popf
cld
fbstp
pop
andb
nop
dec
in
cmpl
xor
cmc
dec
pop
in
vandnps
fisttps
cli
pusha
cmp
icebp
fisubrs
arpl
sub
jo
sub
lods
shl
or
or
mov
dec
jl
cmp
sbb
out
shll
push
nop
or
sbb
push
xchg
xchg
iret
sbb
mov
and
mov
adc
pop
rcrb
push
nop
scas
xlat
inc
mov
das
shl
mov
mov
cmp
clc
sub
dec
cmp
push
add
mov
dec
nop
inc
sbb
stos
ss
xor
or
test
sbb
push
stos
sbb
sub
aam
cmp
adc
dec
outsb
mov
aad
pop
push
ja
xor
fsubrs
xchg
mov
pop
sti
dec
push
cmp
or
in
jo
aam
jmp
test
fsts
stos
and
leave
test
push
loope
push
dec
inc
xor
mov
orl
pusha
add
loope
mov
sub
jp
and
jecxz
add
xchg
sbb
push
cltd
sub
jmp
repnz
movsl
test
mov
ja
or
jge
cmp
mov
arpl
lock
mov
out
scas
dec
push
mov
outsb
mov
out
outsl
icebp
cmp
bound
push
mov
push
pop
hlt
hlt
mov
test
push
ret
lret
lahf
jmp
or
inc
push
jno
jecxz
mov
push
inc
jne
imul
cmpsl
repnz
xor
sbb
rcrb
in
mov
pop
movsb
aaa
pusha
xorl
in
mov
pop
loope
or
xlat
fsubs
push
fcmovbe
ret
div
adc
fmuls
scas
shll
test
repz
nop
xor
cmp
mov
mov
adc
and
and
lds
lods
jmp
mov
mov
adc
and
cwtl
xor
movsb
stc
sbb
std
loope
sbbl
popl
mov
push
pop
and
cwtl
dec
lahf
or
mov
in
xchg
rcll
arpl
clc
insb
xchg
add
inc
hlt
adc
lcall
stos
sub
pop
scas
sysret
not
or
mov
mov
gs
popa
lea
push
pop
bound
and
jle
clc
pop
loopne
fs
popa
xchg
mov
pusha
jb
rcl
call
test
xor
mov
mov
mov
fidivrl
xchg
inc
out
mov
pop
sub
fcmovu
hlt
mov
xchg
inc
mov
or
or
push
movsl
pop
jg
mov
sbb
pop
pop
xchg
xor
fs
aas
jl
sub
pop
imul
mov
or
or
inc
adc
lock
push
inc
ja
sbb
add
jp
xchg
movsl
mov
daa
or
inc
jns
mov
pop
or
mov
in
add
mov
leave
rol
movsl
mov
pop
out
pop
sbb
cmpsl
add
mov
cmp
mov
xchg
inc
rorl
inc
leave
jae
push
je
mov
icebp
loope
lods
nop
xchg
int
jle
sub
or
cmp
mov
xchg
mov
cli
aas
jle
inc
push
inc
data16
mov
inc
aam
lret
fisttps
xchg
cmp
add
lea
aaa
push
frstor
xor
fs
xchg
push
sub
sub
adc
jo
or
in
data16
inc
sbb
aaa
inc
movsl
and
insl
lock
dec
int
and
jnp
lock
push
shll
jmp
sarl
add
jl
cmp
fs
jo
and
pop
fldl
xchg
stc
dec
icebp
xchg
pop
mov
xchg
mov
iret
mov
test
pop
int3
inc
ret
xor
jmp
addb
popf
sti
lret
stos
mov
mov
mov
add
icebp
andl
xor
lret
inc
cwtl
gs
repz
imul
sti
dec
dec
daa
or
cmp
or
inc
sbb
in
jg
lret
test
pop
fsubl
push
pop
jbe
cmpsl
jge
mov
pop
icebp
inc
enter
repz
cmp
pop
scas
ja
lahf
xor
das
xchg
loope
iret
mov
jmp
repnz
in
mov
ss
add
push
sahf
xchg
imulb
pop
ret
mov
push
inc
push
or
lret
lock
jmp
rcrb
xchg
sbb
or
ret
adc
add
ljmp
inc
rol
push
fisubrl
pop
cmp
mov
inc
enter
repz
sub
add
xor
loop
inc
inc
jno
xchg
mov
repz
cmp
jns
stos
popl
addr16
bound
xor
mov
jns
push
out
mov
mov
stc
pusha
imul
aaa
out
cmp
pop
fdivrs
clc
aas
mov
cltd
mov
shl
bound
mov
push
add
das
dec
clc
and
xchg
sbb
cs
test
clc
add
mov
pushw
sbb
adc
movsb
jl
inc
arpl
push
in
adcb
in
fcoms
ret
sub
andl
mov
inc
mov
out
jmp
and
sub
cmpb
das
jnp
in
xchg
int
sub
stc
insl
loopne
lret
or
sub
and
lcall
ret
push
ljmp
mov
mul
sbbb
call
cwtl
inc
test
std
fcmovnbe
aad
call
rorl
mov
in
test
dec
in
inc
pop
mov
rcrl
mov
cmpsl
and
cmpsl
addl
jecxz
fdivl
cmp
jle
aam
fcompl
roll
sbb
ja
mov
lds
add
enter
mov
aam
sub
pop
rorl
pop
fldl
aaa
call
test
stc
out
cmp
negb
add
subl
loope
mov
jmp
jns
mov
xor
push
mov
inc
adc
pop
or
shll
xchg
adc
loopne
xchg
daa
pop
pop
lds
cwtl
push
les
sbbb
sbb
addb
dec
imul
lds
pop
push
addr16
mov
ss
mov
or
dec
mov
fistpl
jo
ror
adc
arpl
shlb
jmp
outsl
xchg
mov
cmpsl
jae
xchg
fsub
jp
out
jp
add
mov
mov
hlt
clc
mov
test
push
dec
mov
mov
add
add
ss
pop
mov
cli
and
mov
cmp
stos
and
fimuls
inc
sub
mov
mov
sub
cltd
aam
out
insb
mov
jo
xchg
and
and
icebp
inc
call
dec
cmp
adc
push
pop
adc
mov
mov
push
into
lock
std
sub
xchg
movsl
int
sub
mov
rcll
repnz
dec
loop
sti
pop
xor
xchg
inc
adc
mov
rorl
shr
xchg
and
adc
popa
jle
cld
test
arpl
hlt
or
inc
js
mov
std
imul
sbbl
mov
fs
mov
ret
pop
mov
adc
int
xchg
push
or
add
push
jmp
sarb
adc
or
add
xor
movsl
arpl
inc
sbb
push
jnp
in
sub
outsl
adc
ljmp
aam
nop
mov
outsl
mov
addr16
loope
lret
lds
mov
or
xor
push
add
insb
mov
mov
lods
or
lcall
repnz
mov
xchg
sbb
mov
int
fmull
cmp
dec
mov
adc
add
test
jno
pop
shrl
inc
xor
addb
mov
add
ficomps
push
mov
inc
inc
fs
add
mov
jge
das
mov
mov
les
inc
stos
push
lret
mov
push
push
test
ret
jp
insb
sbb
mov
xchg
ret
mov
orb
imul
movsb
cwtl
jp
es
rolb
es
xor
xor
and
or
cmpl
xor
and
lahf
div
push
mov
shl
mov
sub
repz
sub
jnp
xchg
jnp
addr16
imul
roll
mov
outsb
fs
mov
mov
jns
lret
enter
cmp
xchg
push
jp
mov
and
repz
sub
push
mov
lds
aad
divb
out
call
xchg
ss
ficompl
imul
ss
mov
adcb
fs
and
or
shl
dec
es
lret
cmp
inc
dec
sub
pop
in
cmp
inc
clc
or
pop
sbb
in
inc
idiv
enter
dec
adc
jno
pop
cwtl
adc
lods
lods
sub
xor
das
mov
xchg
sbb
push
scas
fisttpll
ds
adc
outsb
inc
in
jne
in
cmp
add
into
jb
cmp
push
imul
push
pushf
add
adc
xor
mov
dec
lret
aaa
pop
xchg
js
sub
je
mov
aaa
ss
dec
insl
out
into
sbb
arpl
mov
clc
pop
dec
aam
popa
inc
jmp
ss
mov
inc
and
loope
das
ret
xchg
cmp
je
push
mov
cmp
int
and
mov
hlt
in
mov
ja
dec
or
or
and
dec
repz
adc
dec
subb
jg
movsb
in
xchg
test
cmpsl
das
out
jb
int
nop
fiadds
es
or
popf
pop
adc
mov
push
pop
int3
and
or
or
lahf
sub
mov
xor
push
adcl
jle
out
sbb
andb
cmpsl
insl
dec
lds
in
mov
mov
mov
cli
mov
out
push
lock
mov
fstpt
je
jmp
pop
test
dec
nop
lret
xchg
filds
mov
fnstenv
jnp
lea
ret
mov
push
adc
icebp
lahf
into
outsl
int
aas
xchg
mov
cmc
pop
mov
loopne
fdiv
mov
in
dec
add
fldt
xchg
int
jne
adc
in
xor
cwtl
xor
xor
xchg
scas
jmp
xor
std
insb
lcall
stos
and
inc
and
movsl
or
pop
sbb
aas
jns
mov
xchg
rol
fidivrl
sar
out
lcall
clc
mov
les
inc
loop
mov
push
or
clc
enter
add
dec
jge
out
fs
xor
das
add
lods
xor
adc
pop
bound
xor
push
inc
mov
jl
andb
lds
imul
adc
fildll
pop
ror
jb
pop
mov
aas
xor
pusha
cmpsl
into
xlat
aaa
push
sub
inc
xor
in
push
inc
xchg
inc
xchg
addl
jmp
test
mov
inc
mov
jmp
fwait
cmp
xchg
xchg
decl
jb
popf
jno
or
mov
xchg
adc
icebp
jb
fbstp
and
fsubrs
mov
or
nopl
and
andb
inc
ljmp
xor
ss
dec
gs
insb
lock
xor
xchg
fiaddl
xorb
xor
and
mov
pop
and
sub
cmp
mov
cltd
add
loop
dec
maskmovq
testl
jne
jbe
adc
sarl
push
stos
sub
jg
sub
and
and
mov
inc
int3
enter
mov
mov
stos
int
fists
lret
xor
inc
and
adc
cmp
es
dec
and
push
rcll
ret
mov
sbb
movsb
or
insl
fs
jmp
scas
jns
or
sub
dec
fwait
mov
and
loop
testb
add
pop
enter
cwtd
or
xor
in
lret
je
mov
add
cmp
cwtl
imul
adc
inc
in
stc
je
repnz
out
ljmp
stos
pop
ret
pop
mov
and
push
mov
scas
notl
push
ret
mov
loope
ret
iret
jle
and
mov
push
fimull
repnz
mov
xor
cld
pop
test
fst
ret
push
add
int
loope
adcb
inc
decb
dec
ds
inc
pop
adc
push
out
lods
jbe
ret
xor
xchg
test
push
js
add
or
lea
add
dec
aam
pop
sbb
ja
and
mov
xor
shrb
xor
divb
mov
mov
lcall
inc
xchg
je
mov
mov
xor
mov
push
in
jne
jle
push
js
scas
mov
outsl
aas
pop
jg
fcmovne
sub
vmread
fs
push
dec
scas
dec
push
fdivl
sbb
arpl
cwtl
jp
mov
test
movsb
loop
xchg
push
dec
pop
ficoms
call
xchg
or
xchg
ret
sub
clc
filds
jns
pushl
pushf
jb
int
ljmp
lock
pop
or
jno
mov
movsb
call
cwtl
push
or
or
in
fstl
test
sub
rcrb
push
push
mov
xorl
push
pop
in
insb
stos
fs
sbb
push
loope
repz
mov
dec
inc
aad
mov
roll
xorb
lds
mov
adc
test
outsb
cmp
add
lods
xor
scas
ja
jmp
sarb
lcall
inc
bnd
mov
sbb
lods
cmpsl
or
jnp
loop
clc
sbb
popf
mov
mov
xchg
pop
daa
inc
sub
daa
rcll
test
fs
mov
stos
lods
dec
pop
imul
into
jecxz
cmpsb
jns
out
bound
sub
mov
adc
adc
adc
in
pop
fildl
dec
sahf
out
push
or
loopne
sub
pop
lods
pushf
bound
xlat
mov
mov
cmp
push
cli
lods
andb
hlt
mov
dec
cmp
popf
in
or
sti
or
shll
data16
xorl
ljmp
jb
and
pusha
xchg
arpl
push
and
sti
push
inc
mov
mov
in
sbb
push
lods
cmp
mov
mov
sbb
cmp
adc
ret
cltd
js
and
dec
or
fcoml
dec
addb
pop
mov
sub
or
mov
inc
ret
push
aas
pusha
jno
xor
mov
jb
dec
iret
out
into
aam
push
cmp
add
sub
in
jmp
movsl
cmp
stc
repnz
or
push
fdivl
sbb
sbb
xchg
dec
dec
push
add
fidivrs
dec
daa
xorb
jns
push
mov
popa
insb
icebp
and
in
shl
mov
lret
mov
movsb
inc
cmp
jns
xor
fwait
dec
test
out
lods
fs
rcll
clc
dec
loopne
int3
xchg
xchg
test
outsb
lods
sbbl
xor
mov
sbb
test
mov
inc
or
sub
cmp
adcb
cwtl
fldenv
outsl
stos
sub
das
incl
test
or
es
adc
cmp
sub
or
arpl
test
mov
out
cmpb
idivl
sbb
ljmp
fcmovb
loopne
xchg
dec
mov
add
fstpt
push
jne
fwait
xor
std
in
add
clc
scas
cmp
pop
sarl
das
mov
and
jb
cmc
mov
test
mov
lret
push
sub
jg
and
fiaddl
lret
inc
inc
pop
lock
xor
jl
push
dec
das
add
pop
nop
mov
daa
jle
aad
push
jnp
lret
add
push
xor
int
xor
pop
mov
add
out
shrl
xorb
xchg
xor
das
mov
das
xchg
push
mov
jp
call
test
mov
cltd
lahf
jne
dec
jnp
jno
iret
jae
aas
mov
xor
push
sub
cmc
pushl
scas
test
popf
das
or
leave
into
and
or
and
dec
pop
mov
xchg
in
pop
xchg
insb
pop
and
gs
pop
xchg
push
fdivs
jmp
lcall
mov
or
in
inc
cmp
arpl
or
adc
cmp
pop
push
stos
inc
sbb
fbld
xchg
clc
mov
sub
and
mov
sahf
jae
sarl
jge
cmpsl
and
sti
mov
or
in
bound
addb
cvttps2pi
sub
repz
lret
xor
xor
pushf
cmp
je
dec
mov
in
and
cmc
cwtl
out
out
and
cmp
and
inc
outsl
int
push
aam
adc
nop
aas
pop
imul
stc
jp
out
mov
jne
lcall
int3
jne
xor
xor
jns
pushw
or
xchg
sarl
sub
bound
pop
pop
pop
mov
sahf
push
pop
loope
lods
ja
ret
pxor
mov
mov
dec
push
mov
ss
dec
and
daa
das
xor
push
sbb
jb
lcall
mov
jne
scas
je
fwait
scas
dec
xchg
cmpsb
sbb
sub
adc
scas
aam
mov
scas
jge
es
stos
pop
and
popl
push
adc
add
fsubrs
in
lret
jns
fwait
out
inc
jae
daa
iret
pop
xchg
dec
adc
xor
dec
xchg
scas
xor
inc
xchg
mov
imul
or
push
sub
xchg
ja
or
and
shl
data16
inc
mov
mov
stos
mov
sahf
push
movsl
xchg
pop
mov
movsl
xor
in
repz
jo
add
in
rorb
xchg
push
es
adc
cmp
aaa
jbe
push
ja
stos
jo
inc
test
loopne
std
lahf
jb
jne
aas
push
outsb
loopne
inc
and
notb
test
scas
std
pop
dec
and
mov
popa
lods
stos
js
mov
cwtl
lret
rorl
add
jg
mov
stos
out
adc
rorb
push
test
adcb
int
in
mov
loope
mov
xor
xchg
sahf
stos
test
and
sti
ja
pusha
push
jno
add
lea
hlt
mov
jge
loope
mov
push
xor
aad
xor
fcoml
xchg
mov
adc
mov
hlt
das
nop
in
or
out
mov
adc
push
push
cs
add
das
push
sbb
xor
push
or
aad
dec
outsb
adc
dec
mov
xchg
push
insb
and
mov
stos
pop
scas
pop
adc
jns
imul
sbb
out
mov
and
push
sbb
mov
pop
mov
and
mov
bound
push
in
inc
stos
loop
aaa
aad
movl
mov
mov
sbb
out
sbb
pop
fldenv
adc
ret
add
aas
cmp
xchg
dec
rcrb
scas
sbb
mov
std
push
jge
mov
adc
adc
mov
fdivs
adc
cld
insl
outsl
mov
mov
inc
lret
mov
push
adc
flds
inc
cmc
sbb
inc
mov
cmpsb
sbb
mov
lret
xor
fwait
cwtl
outsl
xor
mov
pop
aaa
dec
xor
shll
sub
iret
cli
sahf
shrl
outsb
shlb
std
testb
imul
leave
jns
sub
add
mov
fmulp
aas
push
mov
cmp
pop
inc
dec
jns
xor
mov
dec
aaa
push
inc
mov
pop
sub
imul
and
jmp
adc
sub
popf
pop
xor
adc
cmp
pop
xchg
jecxz
lea
push
cmpsb
mov
hlt
incl
add
sar
and
gs
inc
jno
data16
jle
mov
push
fs
jge
jmp
inc
jo
sub
inc
shl
clc
movsb
test
dec
mov
dec
hlt
stos
cmp
mov
mov
sub
adc
outsb
insl
je
dec
rcr
mov
add
adc
sub
xchg
mov
cmp
pop
je
jge
mov
dec
push
pop
cmp
ds
sbbl
mov
add
dec
adcl
ds
ja
and
push
cmp
adc
inc
hlt
cwtl
lea
test
jae
jecxz
out
scas
mov
pushf
fdivl
push
scas
push
fsubs
jmp
cmp
sub
jle
stos
outsb
push
mov
mov
popa
mov
in
cli
xor
cltd
or
repnz
push
jl
jmp
lds
xchg
jno
psubb
in
testb
jno
mov
loop
cmpsb
clc
inc
sub
or
daa
pop
cmp
rorb
subb
mov
popa
nop
lods
jb
xchg
push
push
xchg
push
pop
or
test
mov
mov
loop
add
push
rcrb
fcomi
xchg
fstl
cli
adcb
test
sbb
xchg
push
pop
call
adc
cmpsl
dec
rcrb
ret
lds
aad
push
in
stos
cs
jecxz
testl
aam
xchg
adc
sbb
and
ret
jno
fcoml
imul
cmp
xor
icebp
or
test
leave
aaa
sbb
sub
das
mov
int3
mov
sbb
adc
enter
or
hlt
xor
xchg
and
push
popf
sti
inc
jmp
pusha
repz
imul
bound
jge
cwtl
xor
mov
das
loopne
test
cmc
popa
dec
inc
xchg
mov
sahf
add
arpl
ljmp
and
leave
ja
xchg
lods
mov
cmp
jb
jecxz
hlt
out
dec
mov
ljmp
xor
or
enter
inc
jecxz
pop
test
mov
popaw
xchg
pop
stos
inc
xchg
mov
call
sahf
cmp
mov
insl
mov
std
fwait
stos
lock
pop
lock
xor
and
dec
pop
int
jbe
or
test
or
fucomi
std
outsl
mov
mov
imul
adc
ss
jecxz
mov
jnp
fs
popa
sbb
in
std
adc
and
lods
bound
mov
aas
test
notl
mov
in
popf
push
div
pop
outsl
arpl
rcrl
das
pushf
cmp
rcrl
dec
nop
cmp
repnz
les
push
sub
js
mov
jo
add
jb
and
fsts
loop,pn
push
cmp
or
add
push
popf
lret
fdivrs
xor
jne
mov
sub
or
icebp
push
lcall
ljmp
mov
dec
sbb
sbb
rolb
stos
jnp
scas
pop
jg
repnz
xor
iret
xchg
xchg
adc
leave
xor
les
out
cltd
adc
adc
jns
int3
int3
sahf
rcr
sbb
mov
stc
xchg
adc
cmp
fisubl
adc
out
push
ja
inc
cmp
xor
js
aam
aaa
adc
cmpsl
out
aaa
pop
ds
cmp
test
sub
xor
mov
xor
cmp
into
ret
fdivl
push
outsb
jo
popa
mov
stos
ss
aaa
jbe
mov
repz
ja
lcall
pop
test
dec
inc
fdecstp
sub
adc
jg
shll
gs
sub
leave
ljmp
pop
sbb
rcrl
sub
je
enter
jmp
mov
movl
movsb
mov
test
rcr
lahf
ljmp
pop
fisttps
daa
sbb
mov
xlat
jle
aad
pusha
dec
insl
notl
data16
loope
popf
out
sbb
sbb
test
jmp
cmp
jne
jbe
ss
jecxz
push
pop
push
dec
std
aam
daa
mov
jge
ret
hlt
arpl
fsts
cld
dec
lret
jne
or
and
test
inc
clc
fnstsw
xor
loope
dec
lea
int3
mov
xchg
sub
nop
mov
xchg
sbb
popf
adc
aam
test
pushf
pop
pop
std
dec
mov
and
pop
mov
dec
rclb
add
scas
xchg
loope
int
icebp
lret
jle
mov
into
xchg
fdecstp
inc
push
mov
mov
and
sbb
adc
stos
cmp
ja
insl
lret
stc
test
jp
pop
xor
aaa
clc
cwtl
es
mov
jp
or
in
lret
in
jl
cld
in
xchg
pop
adc
in
in
out
nop
cltd
and
xor
sarb
sbb
mov
add
loop
cmp
pop
aas
mov
inc
cmc
adc
pop
fs
seto
enter
fs
xchg
mov
stc
pop
js
shr
int
push
sub
mov
dec
fstpt
idiv
xchg
or
push
jbe
mov
test
dec
out
pop
xchg
mov
push
jno
popa
cmp
push
push
mov
mov
xchg
rol
pop
rorb
movsb
aad
xchg
rorb
hlt
pushf
fcom
lret
mov
fs
test
fs
hlt
or
or
mov
xor
cwtl
fmuls
adc
cli
add
sbb
xchg
ror
mov
or
hlt
gs
cmc
xlat
out
das
sbb
jbe
aas
cmp
adc
movsl
fnstenv
cmpsb
push
iret
scas
fcoml
data16
xchg
adc
xchg
push
cmp
fstps
ficomps
ss
xchg
xchg
lock
bound
and
mov
into
push
xor
jmp
ret
inc
movsl
or
push
loop
jbe
insl
mov
mov
xor
or
mov
fadd
sub
push
addr16
and
jns
lahf
stc
pop
loop
sub
pop
lret
into
jg
pop
push
adcb
ss
mov
popf
ret
cmp
push
iret
push
jg
sub
mov
or
lea
fcompp
jae
dec
xor
rol
cld
mov
inc
lcall
loope
fisubrl
push
mov
or
fwait
mov
outsb
xchg
mov
inc
dec
scas
popf
add
fsts
dec
adc
aas
lret
pop
xchg
xchg
sbbl
inc
push
push
lea
out
mov
mov
ret
test
cmpsb
out
push
cmp
xor
nop/reserved
inc
out
dec
addb
mov
inc
sub
in
jge
pop
shlb
ret
test
mov
adc
mov
xor
repnz
ja
add
lret
add
fs
and
cmpsl
pop
scas
nop
lea
add
or
add
fnstsw
xor
mov
dec
cmpsl
sbb
cwtl
push
sbbb
outsb
mov
loope
sbb
fistpll
adcl
shlb
cmp
cli
ljmp
cmp
movsl
xchg
outsl
cmp
add
mov
idiv
xchg
inc
ljmp
div
add
mov
or
adc
pop
insl
cltd
repnz
xchg
cmp
xchg
fcoms
lds
push
push
daa
imul
or
xor
dec
into
or
pop
xchg
aaa
cli
xchg
cmpsb
jg
sub
and
mulb
jp
std
fsubs
jb
ret
ror
push
mov
cltd
fnstenv
add
orl
sahf
aaa
ficompl
insl
jg
pop
fbstp
push
inc
lcall
push
adc
xchg
je
pushf
lea
mov
enter
data16
out
je
add
ret
inc
iret
fs
xchg
pop
or
jne
loop
push
dec
jb
or
lcall
or
push
dec
mov
add
mov
insl
cs
mov
lea
sbb
lret
and
imulb
daa
inc
or
adc
in
mov
inc
push
mov
andb
out
in
mov
int3
addr16
adc
out
es
cmp
mov
pop
xor
xchg
into
stos
add
test
pop
dec
push
movd
into
mov
jl
dec
and
test
loopne
cwtl
lahf
mov
into
in
mov
pop
sysenter
lods
into
jns
in
sub
leave
dec
icebp
out
lahf
divb
sarb
sbbl
pop
aam
lods
push
sbb
xor
insl
fdiv
cmpsl
sub
ja
sbb
pop
xor
sub
pop
jbe
jne
mov
jb
popa
sub
jb
adc
jmp
sbb
mov
inc
dec
adc
push
negl
icebp
pop
lret
call
je
pop
and
sbb
xor
out
cmp
xchg
mov
mov
mov
stc
add
imul
std
orb
cmpsb
jg
and
movsb
mov
ret
mov
rcrl
mov
cli
push
aam
ret
sbb
movsl
pop
dec
add
stos
fidivl
lcall
insb
jl
test
dec
andl
mov
lods
jnp
sbb
sub
mov
push
loope
push
mov
ret
push
cltd
sbb
sub
loopne
enter
mov
insb
and
ret
inc
pop
cli
jne
movsl
dec
xor
mov
jbe
and
inc
pop
xchg
xlat
lret
cli
adc
sti
lds
adc
jo
sbb
mov
das
jle
sbb
jl
push
xchg
jle
and
inc
out
sbb
sbb
and
mov
sbb
lea
in
rcl
push
adc
or
in
loope
dec
inc
in
xchg
iret
in
cmp
push
cmc
sti
mov
mov
insl
stos
cwtl
cmp
mov
aam
int
imul
testb
test
pop
jge
xor
aam
lahf
xchg
xchg
mov
fdivrl
dec
mov
test
push
jo
jb
fldt
fnsave
sub
mov
pop
popf
gs
xor
pop
pop
sbb
mov
jecxz
lds
fisttps
mov
js
dec
aad
xchg
mov
ret
mov
aad
push
adc
lea
ja
jmp
and
dec
add
notb
jne
shl
adc
rorb
outsb
out
adc
cli
lret
mov
decl
add
bound
mov
sbb
and
pop
dec
xchg
lret
pop
sub
fisttps
aad
cmp
pushf
aam
mov
sbb
faddl
out
and
jnp
arpl
jne
int3
xchg
xchg
sahf
test
inc
adc
adc
mov
and
sbb
inc
dec
gs
pop
xchg
imul
stc
repnz
sub
out
mov
fildl
jp
dec
aaa
imul
jns
push
imul
xchg
sub
orl
sub
xor
push
inc
out
mov
mov
icebp
push
sbb
hlt
sbb
jns
enter
adc
rcll
cmp
ret
dec
push
lds
lret
mov
push
mov
dec
insb
pop
cmp
push
ret
xlat
jp
imul
mov
dec
sub
aam
cmp
movsb
movsl
mov
inc
jb
sbb
ljmp
pop
or
pop
or
idivl
shr
jl
inc
mov
sub
pop
xchg
or
xchg
aaa
movsl
jb
dec
mov
aas
dec
iret
cwtl
pop
clc
mov
sub
inc
sbb
mov
mov
push
movsl
push
aaa
fcoms
aad
cld
xor
mov
jae
shll
inc
js
jl
out
cmp
xchg
lahf
lock
mov
ds
lahf
lcall
xor
add
or
lea
ss
pop
scas
xor
das
mov
jle
xor
push
imul
hlt
inc
mov
adc
test
cmp
cmp
insl
push
mov
or
or
jno
push
adc
pop
add
add
mov
fistps
mov
add
fstl
mov
insb
je
int
pushf
ja
mov
jbe
xchg
mov
in
icebp
mov
mov
xlat
pushf
ss
pop
test
pop
out
add
scas
dec
setg
sub
or
jle
fwait
xchg
sbb
cli
xor
roll
xor
call
or
shrl
dec
rolb
sub
out
cli
leave
aaa
push
sub
cmp
cmp
jae
xor
inc
add
les
adcb
and
mov
mov
mov
stos
out
sbb
cmc
lea
call
or
dec
cmp
push
lods
das
imul
sub
mov
fcomp
mov
imul
test
jns
shll
pop
int
rcrb
nop
fsts
pop
mov
xor
aam
insl
dec
daa
jmp
movsb
mov
ss
xor
jno
dec
mov
mov
push
mov
cmpb
sahf
push
pop
or
mov
jb
pop
les
inc
hlt
jmp
in
lock
out
mov
lock
add
xchg
in
or
inc
add
test
cmp
test
into
cwtl
cld
add
cltd
and
adc
xor
loopne
or
fs
mov
fnstsw
sub
test
mov
inc
lods
adc
mov
mov
shrb
pop
mov
xor
sbb
pop
sub
arpl
inc
daa
inc
jno
mov
pop
loop
jbe
pusha
jb
cwtl
xchg
pop
jne
jge
add
mov
xor
aas
notb
iret
dec
pop
pop
imul
jp
enter
out
jge
mov
repnz
adc
jg
cmp
jae
movsb
lret
inc
roll
xchg
loopne
test
loopne
fs
and
je
ljmp
dec
xchg
mov
or
pop
dec
fsubl
aas
push
xor
popf
cmpsl
movsb
stos
add
jge
mov
and
mov
jg
xor
mov
jbe
mov
dec
xchg
inc
and
xchg
frstor
adc
push
push
rcll
cmc
loope
rcl
fs
gs
add
lahf
mov
inc
icebp
jnp
out
xchg
and
rcll
aas
cmp
testb
dec
roll
xor
scas
out
cmp
test
mov
incw
dec
fbstp
aaa
xchg
adc
lds
mov
pop
test
insl
dec
test
ja
clc
push
in
mov
push
mov
pop
fisttpl
bound
pop
les
pop
mov
arpl
es
and
daa
xchg
cs
jg
push
jbe
dec
or
jno
pop
in
add
int3
imul
addb
mov
lahf
push
std
mov
inc
mov
mov
and
js
insb
jo
lock
in
xchg
addb
dec
push
sbb
or
inc
or
rcrb
enterw
jl
outsl
push
jmp
or
mov
lock
jecxz
mov
jns
aas
dec
sub
cli
jl
por
sbb
mov
fildll
push
pop
push
pusha
adc
mov
lods
cld
mov
lcall
popl
jne
addr16
cmp
dec
add
jg
lods
jmp
loope
mov
negl
jge
sbb
push
insl
dec
cmpl
or
pop
mov
test
jle
mov
xlat
xchg
xchg
inc
mov
sbb
jno
hlt
sar
mov
scas
fdivrl
mov
and
mov
push
fnstsw
pop
dec
mov
jecxz
jl
push
ds
test
mov
jg
adc
test
pop
dec
int
insl
cmp
cmp
loop
sahf
add
bound
adc
mov
push
adc
lods
nop
push
imul
pop
outsl
xor
inc
fiaddl
cmp
das
aas
xchg
das
xor
pop
add
cmpsb
xlat
mov
sbb
mov
pusha
mov
sahf
sbb
notb
inc
jae
arpl
inc
xor
push
xchg
mov
push
in
cmp
xorl
xchg
ljmp
cld
jns
jno
cwtl
sbb
icebp
inc
test
adc
out
adc
inc
aam
lret
xor
xchg
sahf
mov
xchg
lret
testl
push
or
xchg
test
dec
push
mov
jg
xlat
inc
inc
out
lahf
mov
sub
adc
pushl
dec
sub
adc
inc
aaa
ret
out
dec
shl
mov
inc
je
inc
mov
jg
je
add
insb
cli
frstor
pop
popa
stc
mov
std
mov
mov
rcrl
dec
mov
xor
js
pusha
andb
pop
xor
xchg
into
and
inc
xor
jge
push
test
jle
mov
cmp
fisttps
dec
in
xlat
cmp
or
iret
sarb
pop
jae
or
out
sahf
push
je
mov
je
fs
mov
out
mov
imul
sbb
pop
pop
xchg
mov
push
mov
inc
scas
sub
rclb
gs
xchg
cld
mov
cmp
nop
fidivrs
cwtl
icebp
push
dec
or
pop
adc
cld
sub
inc
cs
fisttpll
rcrb
stc
lock
icebp
cmpsl
pop
cmpsl
andl
mov
mov
test
pop
adc
int
xchg
fwait
push
mov
and
lods
in
jecxz
ljmp
orb
jl
add
dec
add
add
mov
icebp
cmp
shr
test
clc
sub
xchg
fisubs
fistl
and
subb
mov
mov
pop
negb
fbld
test
sub
mov
sub
push
jmp
sbb
ja
sub
out
cmp
out
sbb
mov
icebp
pushf
inc
jnp
xlat
aam
arpl
cmpsl
xchg
movsl
cmc
lock
mov
je
and
imulb
or
adc
sbb
mov
fsubl
xchg
jns
pop
jne
mov
jle
outsb
jnp
pop
aas
loopne
sub
addb
idiv
pusha
clc
popf
imul
xchg
sbb
dec
jb
pop
jmp
stos
inc
test
jge
xlat
cmpl
lret
popa
xchg
dec
cmp
sti
test
leave
dec
fists
push
call
push
lret
je
pop
add
out
and
mov
sahf
inc
aam
sub
out
sbb
test
mov
inc
ret
iret
aad
cmp
out
sbb
pop
push
lcall
adc
xor
ficomps
rorl
int
push
sbb
test
sub
fidivs
or
gs
fcom
testb
mov
or
iret
push
aam
lock
andl
mov
mov
push
sbb
imul
pop
mov
movsb
sub
popf
xchg
jo
add
sti
insl
shlb
jp
jb
stos
fistpl
pop
inc
pushf
xchg
aad
popa
imul
std
cmp
mov
push
mov
push
jbe
jb
and
pushf
adc
fiaddl
add
arpl
sahf
jge
mov
loopne
dec
jp
push
xor
es
mov
insb
dec
jle
ret
mov
enter
and
or
ret
int
insb
mov
test
loop
rolb
int3
dec
loop
idivb
xchg
add
push
and
mov
xchg
add
adc
inc
jg
cmc
aad
mov
xchg
cwtl
iret
in
subl
mov
in
sub
fsts
fbstp
mov
scas
mov
sub
pop
js
add
lret
cld
xchg
data16
push
dec
int
sahf
dec
arpl
dec
mov
dec
push
rolb
inc
and
mov
or
aad
adc
and
xchg
adc
lea
dec
cli
dec
divl
adc
pop
in
and
mov
adc
push
lea
cmp
and
push
adc
cmp
stos
fiaddl
nop
sbb
mov
add
sub
test
test
or
mov
dec
or
fsubrs
cmpsb
xor
leave
movsl
jo
xor
mov
je
lock
dec
adc
push
pop
es
cmp
aam
jmp
leave
push
xor
dec
test
ficompl
lret
imul
mov
fldt
mov
add
jbe
xchg
mov
imul
and
cmp
mov
add
test
movsb
pop
je
fsubrs
repz
lods
imul
sbb
jp
push
scas
inc
std
and
fstpl
xchg
addb
daa
mov
repz
or
lock
iret
inc
mov
les
lahf
fcoms
sub
jbe
lret
mov
add
inc
enter
dec
call
add
icebp
push
adc
mov
push
jecxz
pop
movsb
sbb
inc
cwtl
xchg
inc
je
cmp
mov
gs
xchg
fs
fnstcw
sbb
mov
ds
std
and
xchg
xchg
and
add
and
ljmp
xor
jne
or
shl
aam
xor
push
mov
xor
fsubrp
dec
sarb
test
out
jnp
xchg
icebp
stos
mov
sub
pop
stos
sub
and
notl
dec
and
mov
in
dec
push
inc
push
bnd
or
mov
jbe
repz
mov
mov
push
mov
sbb
and
outsl
push
push
nop
sbb
push
xlat
inc
scas
cmp
and
mov
lea
rcll
mov
xchg
aam
mov
lea
dec
insb
push
and
and
inc
and
add
jg
cmovno
jae
cmpsl
sbb
sarl
mov
lahf
jbe
bound
dec
push
add
push
loope
pusha
sbb
xor
mov
pop
jmp
sub
inc
ljmp
adc
into
pushl
das
fstpl
js
cmp
jp
or
dec
sub
hlt
into
lret
mov
adc
sub
mov
sbb
jl
mov
mov
ret
add
testl
add
call
loope
mov
add
testb
cld
mov
push
sbb
jmp
ret
cmc
lcall
dec
xor
int3
in
dec
lcall
popf
mov
arpl
hlt
in
mov
sub
sbb
add
push
push
iret
push
sahf
iret
cmp
shll
dec
cmp
mov
into
adc
dec
movsb
pop
outsb
shlb
xchg
mov
test
cld
movsl
dec
cmp
sbb
dec
fisttpll
xchg
or
nop
push
mov
mov
std
int3
add
sbb
idivb
jmp
push
push
jmp
xor
inc
mov
mov
inc
in
jne
movsl
mov
sub
mov
jae
fs
jns
scas
mov
int
inc
jle
add
gs
pop
xor
add
shrl
jne
push
xchg
push
dec
cmpsb
repz
or
cmc
cltd
mov
lret
lock
aam
pop
mov
mov
add
mov
je
loope
mov
jo
sub
inc
adc
or
sbb
neg
movb
lret
daa
std
jae
in
sub
pushf
cmc
adc
jl
pop
mov
test
cmp
mov
fwait
adc
jns
test
sub
pop
dec
int
aam
adc
imul
add
pop
lret
sbb
subb
sti
arpl
adc
scas
les
repz
mov
mov
xchg
pop
mov
imul
dec
and
test
xchg
mov
adc
push
adc
js
cltd
lret
pcmpgtw
outsl
or
jecxz
push
adc
and
xor
sbb
int
jbe
lods
pop
lock
std
stos
inc
fdiv
inc
and
pop
ljmp
fs
mov
shll
mov
or
popf
mov
jge
push
into
jne
push
cltd
inc
ror
add
cli
mov
std
repnz
out
leave
jno
pop
xchg
cmc
mov
adc
inc
mov
aas
fnstcw
stos
cmp
mov
pop
push
or
add
mov
push
inc
jmp
fucomp
and
lret
ss
sbb
in
mov
xor
cltd
imulb
sub
inc
repnz
jl
xor
xchg
daa
xchg
cltd
pop
mov
mov
cs
fcmovnbe
lret
ficoms
xchg
ss
cmp
call
popa
loopne
popa
mov
aad
jnp
push
xorl
fwait
sub
adcb
test
inc
mov
xlat
pusha
cmc
rorb
cmp
push
js
mov
dec
enter
pop
scas
xchg
lcall
adc
add
pushf
inc
mov
arpl
jo
in
mov
in
mov
int3
and
int3
push
mov
push
inc
pusha
or
fldcw
add
negl
or
outsl
xor
cmc
jecxz
in
and
mov
scas
mov
mov
mov
jmp
repz
and
inc
in
push
jmp
push
inc
sub
fmull
adc
ret
push
in
dec
in
js
jge
out
mov
loope
fbstp
jo
in
mov
add
mov
push
pop
mov
sub
cmp
daa
pop
movsl
lret
imul
outsb
push
mov
daa
arpl
or
cwtl
push
and
test
push
jae
jge
cmp
fwait
les
je
dec
repnz
inc
sub
rorb
je
push
rclb
out
cmp
jmp
movzwl
jne
fldenv
gs
test
push
roll
das
dec
ficompl
stc
jnp
pushf
sub
push
or
pop
loope
pop
jmp
movsb
dec
jns
inc
jns
flds
dec
popf
xchg
jbe
test
mov
test
mov
mov
out
and
cmp
dec
out
ljmp
fsubrl
in
or
ljmp
add
in
xchg
insl
inc
gs
mov
aad
fnstcw
add
mov
jo
out
ret
jle
lock
addr16
arpl
pop
in
xchg
push
add
ljmp
cmp
adc
fsubl
sub
popf
ret
mov
sub
or
fdivs
fxtract
xor
bound
shl
mov
cmpsb
xchg
imul
aam
push
inc
addr16
cltd
xchg
xchg
dec
mov
insb
fldcw
push
mov
mov
call
lods
dec
jg
mov
ds
inc
or
dec
add
pop
fucomp
jb
jnp
lock
lahf
inc
jae
pop
xor
lcall
pop
mov
jnp
dec
inc
dec
clc
ffree
adc
inc
lcall
cmpsb
dec
nop
xchg
mov
jg
ss
outsb
repnz
jg
inc
jo
je
xchg
mov
pop
pop
jg
cltd
sub
jmp
dec
sub
insb
fistpl
mov
ficomps
mov
dec
and
pop
or
leave
negb
lcall
js
adc
into
push
mov
mov
push
outsl
daa
scas
push
roll
pusha
push
fnstcw
ss
int
popa
dec
pop
xchg
mov
xor
pop
mov
pop
mov
in
mov
dec
js
into
mov
or
mov
ficoms
call
mov
sub
popf
leave
mov
rolb
mov
gs
jne
sbb
nop
popa
mov
repz
dec
mov
iret
add
fstpt
shll
movsb
jno
and
bound
or
fldt
adc
testl
lahf
xchg
mov
imul
xor
xor
rorb
pushf
and
or
cmp
mov
mov
jns
cmpsl
pop
jl
xchg
out
adc
add
jns
lcall
int
or
jl
cmp
or
add
sub
jp
icebp
je
mov
xlat
notb
dec
jmp
js
sub
mov
sub
push
in
aam
rcl
jae
or
into
and
int3
int3
lahf
addr16
pop
push
lock
or
pop
xor
lahf
inc
jns
jge
jo
mov
lds
mov
jnp
xchg
sub
sbb
cmp
lret
xor
scas
mov
jecxz
xorb
dec
sub
inc
xor
arpl
xor
pusha
adc
lahf
xchg
and
cwtl
stos
lock
fmull
test
mov
inc
loope
cmc
sbb
push
in
test
ss
push
xchg
popf
push
mov
push
fildll
aad
popf
dec
stos
movsl
mov
adc
push
mov
test
jne
mov
aam
add
roll
or
jecxz
fs
sub
sbb
in
dec
or
cld
xor
jl
pop
xchg
cmp
outsb
mov
pop
scas
into
xchg
add
loop
push
push
cmpsb
or
sbb
das
or
xor
popf
addr16
dec
jo
xchg
mov
cld
dec
aaa
cwtl
add
xorl
cmp
roll
ljmp
dec
aaa
pop
and
and
and
mov
enter
setne
dec
xchg
or
inc
xor
orb
mov
lds
cmc
mov
push
mov
or
fdivl
jg
roll
adc
cmp
icebp
pushl
pop
aad
ja
jno
dec
dec
jno
outsb
insl
mov
sahf
cmc
ret
mov
xchg
or
hlt
mov
sbb
cld
mov
add
sub
add
cmp
pop
inc
lahf
loop
lcall
xchg
bound
mov
int
out
arpl
pop
pop
push
insl
jmp
mov
mov
bound
lods
ss
jecxz
push
push
sbb
in
lcall
mov
test
xchg
sub
cli
inc
pop
mov
and
dec
xor
dec
fldenv
sbb
jns
pop
inc
sbb
pop
cmp
cmc
loopne
into
mov
dec
dec
dec
testb
pushf
scas
bound
rclb
out
xlat
mov
popf
add
out
or
std
jns
xchg
pop
fnsave
loop
push
insl
adc
lods
mov
in
dec
inc
lret
mov
mov
jne
mov
in
lret
mov
push
pop
loopne
rolb
mov
cmp
popa
mov
cli
stos
lods
cmp
lcall
mul
scas
popf
push
addr16
mov
add
mov
cs
sub
outsb
cs
push
dec
add
out
and
cmp
push
das
icebp
push
xchg
sahf
or
enter
adc
add
and
test
xchg
lock
mov
and
xor
xlat
out
cwtl
sbbb
negb
inc
inc
sbb
inc
xchg
enter
pop
adc
out
lods
mov
in
sbb
mov
jne
stos
and
out
jns
mov
rcrb
shrb
in
sbb
mov
xor
repz
aas
xlat
ja
dec
xchg
mov
push
mov
in
repnz
mov
das
daa
mov
dec
popf
aam
mov
sbb
or
jae
push
scas
push
dec
stos
cmp
or
push
push
and
ljmp
jb
add
mov
mov
enter
daa
bound
jb
sbb
cli
xchg
out
or
sbb
cmpsl
mov
cmp
fs
mov
mov
repz
testl
push
add
cmp
jno
int
in
ja
ja
mov
sbb
shlb
cmp
adc
mov
add
jp
in
adc
jbe
push
push
xchg
or
sbb
cltd
out
lret
push
hlt
mov
fimull
mov
arpl
push
cmp
scas
inc
aas
stos
movsl
shlb
into
adc
and
fdivr
and
cmp
xlat
xor
cmp
pop
and
inc
aaa
sub
aad
push
push
scas
arpl
dec
mov
xchg
sbb
popa
clc
daa
insl
sbb
ss
fildl
imul
pop
fs
sub
push
dec
scas
mov
clc
xchg
jae
ja
imul
fbld
shll
or
xor
and
lahf
sbb
scas
inc
adc
or
in
sub
dec
test
ds
pop
scas
lahf
out
nop
pop
adc
xor
in
outsl
xor
mov
jge
inc
in
lods
cs
imul
lcall
xchg
pop
xchg
adc
movsl
and
xor
sbbb
jb
xchg
add
imul
mov
sub
imul
loope
nop
add
dec
mov
roll
jnp
mov
push
mov
and
insl
jge
cmp
sbb
mov
mov
push
and
mov
mov
xchg
cld
mov
addr16
pop
lds
mov
insb
xchg
stc
hlt
sub
mov
out
call
push
rcll
xchg
mov
loope
fisttpl
sub
xchg
jp
adc
mov
lock
sub
mov
mov
sub
in
nop
mov
test
in
and
int3
movsl
adc
sbb
idivw
and
notb
nop
pop
aaa
loopne
mov
sbb
xchg
fdivr
popf
adc
mov
stos
adc
loop
std
jmp
in
mov
mov
jne
pop
push
fnstsw
pop
stc
inc
mov
sub
mov
sti
jnp
push
or
ret
inc
lcall
mov
jmp
pop
push
dec
and
add
jg
mov
pop
push
inc
cwtl
or
pop
mov
aam
cmp
mov
xchg
fucomi
mov
inc
pop
xchg
out
divb
aam
inc
add
je
in
iret
mov
loope
clc
push
insl
loop
xorl
push
mov
loopne
mov
pop
stc
dec
nop
jnp,pn
pop
mov
test
repz
outsl
fistpll
xchg
push
ror
add
mov
rcl
jne
popa
icebp
and
inc
add
fld
in
cli
test
adc
nop
fistl
les
mov
fnstcw
ja
lods
mov
pop
loop
push
pop
movsl
mov
inc
aam
fwait
test
push
push
fwait
dec
mov
stos
inc
xchg
cmp
hlt
dec
clc
pop
inc
dec
mov
in
insl
pushf
sub
movsb
inc
sub
pop
sbb
cltd
repz
les
mov
add
pop
in
das
cltd
add
mov
pushf
test
adc
sbb
stos
fcompl
mov
repnz
out
pop
push
dec
push
jmp
lret
clc
aas
call
lret
xchg
cmp
fstpl
popa
or
rorb
push
std
es
popa
mov
add
push
sbb
or
jnp
das
test
aas
ja
add
lods
jb
inc
in
mov
pop
pop
repnz
push
iret
sub
leave
jne
repz
fcompl
andl
outsb
mov
xchg
fwait
xchg
cmpsl
ljmp
fsubrs
push
push
ss
cli
push
enter
jg
lock
sbb
out
xchg
lahf
add
leave
les
sbb
ss
pop
xchg
ret
push
push
mov
sbbl
dec
scas
jmp
sub
or
pop
ror
pop
and
xchg
sub
fdivp
aas
dec
xchg
scas
ljmp
cmc
jb
xor
fs
nop
repnz
cmp
mov
popf
push
loopew
stc
mov
pop
jle
fcompl
shll
inc
xchg
adc
cmpsb
out
push
dec
stos
inc
frstor
rorb
xor
cmp
mov
mov
pusha
insl
aas
jmp
aaa
pushf
insl
sbb
shrl
int3
insl
pop
mov
inc
pop
inc
push
int3
int3
push
pop
sahf
out
mov
mov
xor
dec
mov
inc
lret
scas
mov
rep
push
mov
push
andb
sub
push
adc
packuswb
fdivrs
addr16
inc
sbb
rcl
mov
push
outsl
icebp
call
arpl
mov
movsl
cmp
pop
sbb
add
adcl
mov
jae
bound
and
pop
cwtl
scas
jns
test
cmpsb
ja
subb
int
loope
jb
iret
dec
jg
fwait
sbb
loope
sbb
mov
fs
pop
imul
les
pop
sub
add
xchg
mov
mov
in
pop
xchg
js
xorl
lsl
mov
adc
fnstcw
push
jae
int
loopne
movsb
mov
and
int
adc
test
mov
push
mov
lods
or
cmp
sbb
sbb
rorl
dec
cmp
mov
mov
repnz
inc
push
int3
lock
inc
adc
mov
dec
add
fadds
xchg
push
pop
xchg
dec
dec
jnp
or
push
push
mov
and
fldcw
and
filds
into
sub
cmp
shufps
xor
cmp
pusha
imul
into
jecxz
and
inc
sahf
in
cmp
cmpsl
jecxz
outsb
cmp
sub
icebp
popf
xchg
push
cmpsb
lods
nop
cli
jo
test
push
lods
cmp
les
inc
cld
xor
out
add
xor
test
pop
testb
cmp
std
fistpl
addl
mov
test
push
sub
mov
xor
adc
sub
leave
mov
xor
cmp
in
jns
jbe
movsb
jne
not
loopne
mov
lock
lods
repz
mov
iret
mov
decl
mov
push
test
add
rcll
sbb
loop
in
jle
stc
fnstcw
push
das
xor
pop
or
xchg
mov
shll
rol
mov
movsl
call
rorb
dec
inc
add
dec
loop
mov
adc
aas
or
popa
fdivrl
shll
arpl
cli
jl
inc
mov
scas
shl
fmul
fs
sub
sbb
out
outsl
mov
mov
jge
mov
and
sbb
out
les
shlb
pop
dec
std
pop
push
and
mov
pop
add
sbbb
add
fistpl
sbb
incb
xor
inc
push
mov
scas
xchg
pusha
sbb
mov
mov
jbe
int
popf
inc
mov
shll
test
pop
push
sbbb
inc
inc
xor
xor
iret
insl
inc
mov
and
mov
or
aaa
pop
aam
lods
inc
add
int3
lea
addl
jg
lahf
aas
movsl
mov
xor
jno
inc
cmp
call
sub
scas
jmp
xor
jno
or
mov
adc
fistl
jae
out
inc
pop
mov
jge
sbb
and
mov
and
jae
gs
fmuls
mov
xchg
jge
cmc
outsl
xchg
cli
inc
jb
mov
xor
cmp
cltd
xchg
sbb
or
add
ss
jmp
loopne
mov
inc
pop
pop
pushf
push
cmp
clc
cs
call
fsub
xor
rolb
je
push
mov
shrl
leave
rclb
jno
mov
in
test
ss
jbe
pop
adc
jne
addb
xchg
jecxz
sbb
or
fwait
mov
or
or
test
ret
mov
in
out
pop
sbb
push
inc
cwtl
mov
lea
imull
imul
adc
test
push
adc
sbbb
popa
cmpsb
aad
movsl
loope
ds
movsb
xor
sbb
lcall
pusha
and
loope
mov
in
cli
jecxz
adc
sbb
mov
mov
lods
inc
jo
cmp
adc
xchg
sub
ja
mov
cmp
jnp
cltd
push
pop
jle
cmp
ret
push
aad
aam
mov
pop
fisttpll
ficompl
out
cmp
pop
outsl
sysenter
xchg
fidivl
dec
and
pop
or
push
pop
int3
add
jno
lock
icebp
mov
adc
movsl
ja
and
jmp
adc
pop
sahf
aaa
loop
clc
cmp
cmpsb
jns
pop
nop
or
test
pop
cmpsb
fstp
into
cmp
or
subl
xchg
pop
fsubs
js
dec
xchg
sub
xor
dec
pop
xchg
add
and
ljmp
rcr
add
push
fnstcw
mov
mov
in
fistpl
out
xchg
cmpl
and
bound
fbld
xchg
mov
out
inc
js
mov
xchg
push
xor
push
and
clc
jg
xchg
xor
fs
rorl
repnz
cmp
pop
sbb
dec
push
push
adc
mov
shrl
xlat
push
jg
ror
test
xchg
sbb
inc
sbb
call
flds
nop
insb
in
seta
arpl
lock
outsb
mov
push
ja
iret
testl
push
icebp
jae
jns
cmp
sub
sub
and
in
jnp
subl
or
or
fnstcw
out
push
sbb
fstps
mov
jb
mull
dec
xchg
rcll
push
add
mov
inc
mov
aad
jmp
add
bound
mov
pop
popa
lcall
push
xor
mov
mov
add
lods
test
ficomps
jae
rcrl
mov
push
addr16
adc
or
pushf
or
push
setbe
inc
iret
testl
pop
cmp
pop
ljmp
push
mov
add
add
xor
jno
in
xor
stc
aaa
out
mov
loop
dec
cmp
gs
mov
loopne
sbb
fisttps
repz
cmp
js
xlat
ds
and
or
adc
icebp
mov
fwait
add
mov
xor
das
mov
cli
out
enter
sbb
add
into
mov
stc
jb
test
lea
leave
jecxz
mov
jnp
dec
fisubl
push
push
sahf
mov
cmc
sub
fs
pop
cs
or
in
mov
jne
call
in
pop
mov
xchg
stos
cmpb
out
rclb
or
mov
lea
movsl
jg
pop
sbb
cld
sub
inc
repz
int3
je
mov
insb
push
sbbl
push
iret
mov
xchg
sub
xor
xchg
push
call
dec
sbb
movsb
scas
pop
mov
loopne
push
in
ljmp
push
push
cmp
pop
sbb
sahf
popa
jge
xorb
js
adc
in
push
dec
adc
or
push
mov
je
cmpsb
push
cli
mov
outsb
movsb
or
push
dec
inc
add
pusha
push
in
push
mov
idivl
filds
idiv
dec
lods
cltd
mov
rcrw
xor
pop
sarb
inc
test
subl
js
dec
mov
fisubs
inc
fstpl
or
cmp
xor
es
push
xor
lea
mov
lods
mov
cli
pusha
sub
imul
and
iret
mov
enter
inc
cmc
xor
in
xchg
sub
insb
arpl
insb
sbb
push
dec
sbb
and
loope
outsb
push
mov
repz
gs
rcr
out
or
nop
addr16
adc
push
pusha
sbb
or
imul
or
adc
leave
pop
int
out
sub
cmp
sub
adc
clc
gs
lds
jns
xchg
push
test
xchg
lahf
xchg
xor
aaa
jmp
in
dec
arpl
mov
outsb
inc
lods
jl
dec
pop
mov
mov
lret
rclb
dec
sahf
sbb
out
pushf
ds
cmp
jp
shl
scas
cmpsb
jl
data16
mov
cmp
mov
scas
testb
jno
sbbl
lcall
sahf
sbb
test
clc
and
sub
jb
add
das
nop
pop
adc
cmp
cmovb
xorl
push
and
sti
add
test
pusha
into
gs
andl
gs
subb
cmpsl
sbb
cmpsb
jle
jge
adc
std
sub
lret
in
cld
cmp
jl
inc
movsl
mov
lcall
push
and
pop
ss
cli
lock
sbb
pop
aad
mov
xchg
test
mov
fwait
lock
mov
mov
clc
pop
xor
pop
pop
inc
lahf
mov
scas
pop
das
mov
pop
aaa
loopne
sub
loop
mov
dec
mov
popa
inc
inc
pop
jo
daa
xchg
push
les
enter
jmp
stos
leave
push
mov
jge
mov
movsb
inc
mov
inc
hlt
sbb
xorl
test
mov
aam
out
push
xchg
imul
mov
movsl
addl
mull
adc
jnp
lret
add
dec
add
adc
and
xchg
mov
adc
out
decl
sub
lret
popf
iret
les
xchg
filds
inc
or
or
lret
dec
add
cmp
push
pop
cld
loope
sub
cwtl
sub
push
cld
or
sub
lock
call
out
and
xchg
addr16
cmp
jbe
dec
jne
orl
xchg
clc
outsl
loope
sbb
mov
out
outsl
pop
loop
fwait
mov
fidivs
pusha
lods
pop
push
loope
sbb
repnz
lods
lcall
mov
and
and
add
jno
sbb
or
xchg
add
sub
leave
cmp
add
dec
rorl
and
shrl
adc
in
xchg
mov
xchg
loop
rorl
test
fisubl
or
cltd
push
sbb
hlt
sub
adc
push
adc
mov
pop
mov
loope
sbb
xchg
or
repz
stos
mov
jne
sub
cmp
xor
mov
push
jns
dec
and
out
add
cli
cmpsl
adc
pop
sub
pop
sub
fwait
push
std
icebp
and
fisubs
shlb
into
testb
out
pop
dec
jne
rcrl
es
xor
adc
leave
add
mov
js
ret
pop
or
das
test
jo
sub
jb
mov
and
call
pop
cmp
daa
out
pop
add
add
inc
shr
jb
cmp
jno
cmpl
lahf
cmpb
xchg
imul
sub
push
dec
dec
jle
clc
popa
shll
sbb
call
xor
xor
std
xchg
cmp
js
arpl
jo
hlt
jnp
out
sbb
dec
js
insb
mov
js
decl
push
pop
andps
adc
inc
pop
insl
fwait
mov
sbb
bound
cltd
push
sbb
test
imul
and
in
push
call
xlat
inc
pusha
lahf
inc
mov
rclb
mov
stos
mov
fadd
and
mov
pop
daa
xchg
fsincos
shll
mov
call
cmp
movsb
icebp
sbb
mov
enter
rclb
sbb
sbb
scas
jb
dec
test
jae
js
out
ret
out
js
leave
xchg
shr
dec
add
roll
aam
arpl
adc
hlt
fistpll
sahf
scas
hlt
in
xchg
leave
push
test
xchg
cmc
mov
push
inc
lret
ljmp
adc
push
push
sub
jle
inc
shrb
pop
and
cmp
xchg
stos
rclb
hlt
adc
mov
dec
les
adc
out
push
jns
test
cmp
je
ja
imul
cli
js
and
je
jge
das
cwtl
out
mov
mov
rcl
inc
cmpsb
mov
jne
pop
or
and
dec
sti
push
pop
addr16
mov
mov
stos
mov
icebp
pop
xchg
xchg
js
inc
into
xchg
daa
or
pop
clc
cmp
ja
outsb
fs
adc
cmp
sbb
imul
lret
pop
inc
mov
lods
and
pop
cmp
pop
or
enter
jno
ljmp
fildll
mov
xor
je
adc
lret
jecxz
nop
mov
andl
pop
xchg
jle
lock
mov
arpl
ret
mov
outsl
mov
daa
pop
stc
mov
add
and
or
iret
jle
mov
xor
movsb
lcall
mov
pop
ds
or
mov
addr16
imul
out
mov
dec
jo
xchg
lcall
stos
out
int
outsb
mov
or
shr
sbbb
gs
fwait
mov
iret
mov
test
arpl
test
aad
jne
jmp
xor
jg
aam
lret
push
sub
sbb
dec
sbb
push
pop
xor
mov
sarl
in
cmp
stc
xchg
sub
mov
add
addr16
jmp
fsub
movsb
xchg
cld
xorl
fndisi(8087
ficoml
lahf
sub
arpl
mov
sub
adc
lret
pop
jge
sub
popa
jp
pop
das
cld
leave
mov
xchg
sub
loope
ret
fcmovb
es
xchg
push
sub
ficoms
sbb
nop
cmpsb
data16
shrb
cmp
dec
mov
ss
dec
gs
ljmp
aas
nop
mov
inc
sti
loop
jle
fs
push
adc
xorb
or
test
scas
jmp
or
mov
push
icebp
xchg
cld
mov
add
stc
pop
pusha
aaa
mov
shlb
fwait
addr16
inc
les
and
sbb
stos
inc
xor
ret
push
test
and
popf
jae
xorl
add
ja
xlat
pop
int3
and
jmp
shlb
push
add
inc
mov
mov
inc
and
inc
xor
xchg
mov
out
pop
mov
xor
es
jno
mov
mov
lods
sbb
xchg
ss
and
pushf
cmp
das
and
sarb
nop
sbb
cmpsb
lods
out
push
mov
sti
adc
adc
inc
ror
fstps
fnstenv
push
pop
push
fiaddl
jecxz
cs
daa
inc
jle
aaa
inc
push
popa
movsb
repnz
shlb
xor
add
xor
icebp
out
popa
popa
pusha
or
hlt
test
xor
mov
add
iret
dec
inc
insb
add
scas
jge
xor
add
orb
jno
push
lret
add
sahf
dec
jns,pt
orl
lea
xchg
jns
cmp
fcomip
aad
jmp
add
insb
inc
repnz
cmpsl
mov
add
mov
ret
insl
lahf
mov
cmp
andb
cli
test
outsl
test
insb
sbb
mov
in
inc
out
xor
ret
std
out
sub
and
push
or
rorl
jge
es
in
ljmp
les
cmpsb
leave
std
test
fs
loope
xor
ss
inc
and
inc
leave
push
adc
push
insb
cs
int3
iret
aaa
lods
lret
and
and
push
out
pop
loope
pop
jmp
lea
out
into
loope
call
cmpsl
ficomps
mov
pop
lock
movsl
std
les
pop
notl
adc
inc
inc
mov
incb
xchg
inc
cmp
pop
add
sub
inc
dec
pop
cmp
fidivl
sbb
xchg
popa
pop
pop
xor
xor
pushf
pop
and
xor
add
ja
mov
mov
sub
jo
push
rolb
and
jecxz
jmp
push
nop
in
rolb
jecxz
es
xchg
mov
testb
mov
data16
repz
jnp,pn
and
loope
sbb
lahf
fstps
and
mov
inc
mov
and
pop
lret
fwait
xor
les
xchg
add
push
scas
jbe
int3
mov
xor
dec
jae
sbb
push
decl
mov
cmp
scas
dec
inc
cld
in
mov
push
dec
jmp
je
push
and
lods
and
inc
cmpsl
rorb
jg
aam
fstps
push
test
jno
insb
fdivrp
aam
push
xchg
jmp
punpckhbw
dec
push
popa
dec
mov
fwait
imul
lds
je
and
mov
repnz
cltd
xchg
mov
test
mov
add
inc
fsubs
ljmp
data16
hlt
stos
fdivl
pop
sub
sbbb
pushf
dec
dec
iret
xchg
cmp
sbb
mov
ret
mov
or
cmp
into
imul
mov
test
addb
push
or
aam
dec
out
sbb
sub
mov
and
and
push
mov
mov
cmp
push
movsl
lds
mov
push
inc
push
enter
stos
imul
shll
iret
jmp
mov
push
aam
loop
scas
lea
mov
iret
stos
adc
mov
filds
mov
jle
jmp
outsb
sub
xchg
add
dec
int
lea
cmp
fstpt
addl
movsl
fiadds
inc
add
in
jno
xchg
or
inc
lock
mov
mov
arpl
lods
mov
or
mov
int
jns
jmp
repnz
xor
fiaddl
shl
push
jbe
xchg
cmc
fidivrl
or
mov
mov
mov
pop
in
xor
adc
pop
mov
dec
inc
add
push
popa
inc
test
je
xchg
add
lret
adc
insl
sub
dec
fiaddl
sbb
sbb
xchg
sbb
or
pusha
xor
frstor
in
lret
stos
lea
mov
dec
hlt
cmpsb
push
mov
cmp
out
loope
jne
movsb
lea
mov
jo
pop
sub
jnp
pushf
jo
cmp
and
call
sahf
mov
or
imul
cmp
and
iret
pop
mov
xchg
imul
out
dec
stos
bound
pop
xchg
push
xchg
movsl
subb
pop
ret
push
or
and
xchg
or
sbb
jnp
dec
dec
mov
sti
pop
jg
stos
push
xchg
lods
pop
outsb
xchg
insb
test
movd
mov
sbbl
scas
xor
dec
sbb
mov
jle
icebp
sbbl
cmp
repz
mov
pop
sti
jmp
aas
or
sbb
fcomps
cmpsb
mov
cmc
cltd
push
and
dec
mov
jb
pop
mov
push
push
dec
add
push
lcall
jecxz
push
sbb
addb
addl
push
cmp
jo
es
aad
fcoms
je
inc
mov
pop
fs
mov
inc
mov
push
mov
movsl
jnp
das
test
rol
xor
dec
sti
sub
and
xchg
bound
imul
cmp
mov
add
hlt
idiv
add
fwait
cmpsb
push
push
or
xor
rcrl
cmpsb
mov
loop
gs
inc
add
bnd
sbb
aad
in
sub
les
aas
mov
jne
xor
pop
fadds
sbb
repnz
pop
sbb
in
mov
gs
pop
or
in
pop
int
testb
fnstenv
scas
ja
jmp
fs
mov
mov
jb
ds
xchg
jo
imul
jns
prefetch
push
mov
gs
loopne
out
insb
push
in
mov
pop
xchg
mov
aad
orl
lahf
cmp
pop
xor
mov
cld
ret
shrb
jl
lret
in
xor
test
ja
mov
sbb
inc
inc
cmc
sbb
jp
insl
mov
pop
inc
sub
sbb
cwtl
inc
and
rcl
lret
push
jecxz
xor
mov
repz
divl
std
popf
mov
mov
dec
xchg
ret
cmpsl
ljmp
test
xchg
test
or
outsl
inc
and
push
or
nop
mov
rcll
xchg
lock
popf
xchg
pop
sbbb
js
sbb
jb
int3
sahf
cmp
push
out
inc
mov
js
leave
pop
mov
sti
mov
mov
cmpsb
dec
mov
xchg
jno
imulb
adc
jmp
xor
xchg
ficoms
push
push
add
pop
imul
addr16
pop
mov
push
jo
adc
fistpl
mov
push
fmull
mov
sub
addl
jle
test
sbb
loop
es
loop
scas
dec
dec
sahf
inc
pop
jnp
loopne
cmp
xchg
or
je
or
mov
inc
inc
jmp
dec
or
in
loope
inc
lds
and
sahf
adc
mov
xor
js
mov
sub
adc
dec
stos
jne
or
pop
sbb
test
cpuid
mov
jl
repz
mov
inc
call
jo
insl
hlt
sbb
aas
pop
sub
and
int
test
in
mov
xchg
in
in
fs
sub
push
sbb
inc
mov
in
cmp
mov
das
pop
daa
cmp
fprem
sub
daa
aaa
cmp
loope
adcb
adc
push
and
xchg
popf
xchg
adc
push
and
iret
mov
and
std
xor
mov
mov
sbb
cmpsb
dec
jo
or
mov
mov
or
test
jecxz
daa
or
jne
fsts
add
lcall
sbb
cmp
cs
stos
outsb
cli
test
mov
xchg
mov
jbe
ja
jo
inc
jbe
gs
test
stc
popf
and
mov
movsbl
pop
out
rcr
stos
xor
icebp
adc
testl
add
es
shlb
nop
andb
cli
scas
mov
pop
or
sub
or
push
data16
mov
mov
or
pop
jecxz
or
push
daa
sbb
shrb
ljmp
xchg
rcll
repnz
adc
inc
out
mov
dec
inc
ja
and
in
scas
int
fildl
sti
and
repnz
add
and
mov
jecxz
lcall
sbb
leave
push
inc
sbb
dec
pop
test
lods
sbb
inc
rclb
stc
and
jnp
add
mov
inc
and
mov
xor
sub
mov
subb
xor
mov
cmp
imul
add
mov
push
jae
mov
mov
das
movsb
outsl
mov
xchg
out
roll
stos
push
int
fiaddl
mov
into
in
xor
or
ljmp
pop
cmc
popa
add
add
clc
dec
dec
shlb
outsl
pop
sbb
out
pop
bound
std
stc
mov
inc
cld
pop
and
repz
fsubr
push
mov
insl
decb
or
xchg
lods
popa
inc
jle
jbe
call
xor
insl
jb
pop
dec
repz
lcall
pop
daa
fcomps
jmp
mov
jl
repz
in
fwait
push
sub
inc
or
inc
mov
or
xchg
fisttpll
xchg
mov
in
fsubrs
dec
jg
jmp
lock
pusha
lds
inc
jo
nop
or
call
stos
push
mov
inc
rolb
rcll
jle
inc
gs
lock
pop
mov
cld
add
mov
les
jno
rol
ret
xchg
lret
mov
mov
mov
cwtl
mov
dec
xchg
adc
mov
mov
fmull
test
pop
inc
loopne
pop
jo
es
sbb
sbb
scas
and
dec
out
popf
and
test
ret
sbb
inc
imul
sbb
mov
and
mov
inc
pop
es
jne
repz
jle
scas
jbe
mov
inc
sbb
xchg
std
lret
ljmp
mov
out
or
aas
jo
inc
rol
iret
pop
dec
imul
jge
pop
pop
jbe
out
cs
or
push
and
jecxz
pop
fisubl
jmp
in
sbb
cli
ret
cmp
call
add
push
xor
lahf
and
scas
sahf
call
xchg
cmp
or
sbb
inc
lahf
lods
sub
pop
outsw
nop
jg
int
pop
push
push
adc
sub
cld
jmp
cwtl
mov
ret
outsb
xchg
xor
lds
and
push
add
dec
pop
pushf
xchg
movsl
hlt
jno
xlat
test
mov
push
daa
clc
ds
pushf
mov
cld
mov
scas
adc
mov
test
sti
mov
pop
jg
cmp
push
in
mov
lcall
pop
je
ljmp
xor
or
or
mov
movsb
aas
cmc
int
aaa
xorl
aas
out
lret
mov
aad
fdivl
push
imul
je
mov
mov
scas
pop
daa
add
arpl
cmp
or
mov
aaa
mov
or
inc
fistpll
lret
jnp
cmp
pop
ja
dec
fisttps
mov
rorl
dec
push
dec
mov
cmp
push
lock
shrl
popa
fnstcw
stc
sbb
mov
std
xorl
std
adc
daa
nop
mov
xor
sbb
ss
cli
jle
inc
xchg
jae
mov
cmp
push
loope
call
out
es
out
xchg
sbb
mov
mov
sub
and
pop
xor
jle
movzwl
bound
xchg
popf
jl
sahf
test
and
test
hlt
inc
cli
mov
aad
inc
fs
push
adc
fidivrl
mov
lds
pop
out
cmp
filds
pop
xor
jnp
ret
fs
push
cltd
insb
pop
andb
sub
in
aad
add
cli
roll
subl
push
ja
dec
adc
aad
call
add
aaa
mov
or
cmpsb
dec
testl
mov
inc
pop
repnz
mov
push
add
push
xchg
pop
xor
jnp
test
jmp
sbb
mov
in
jmp
faddl
pushf
sti
arpl
sbb
imul
in
adc
add
xor
daa
pop
fimuls
xchg
lahf
pushf
mov
jo
mov
sub
cmpsb
add
jo
inc
jmp
lcall
xchg
push
push
push
xor
cmp
jno
leave
repz
sahf
and
enter
fidivrl
sbb
stos
cmp
stos
lret
jae
das
ja
jno
xchg
xlat
stc
mov
xchg
cmpsl
and
fs
loope
es
cli
push
mov
push
inc
mov
cmpb
ror
pop
cmc
lods
aaa
ret
push
or
iret
cmpsl
cmp
aam
push
cli
cmpsb
cmpb
push
in
adc
movups
popl
pop
orl
leave
mov
xor
popf
sub
pop
sbb
sti
pop
lods
ds
mov
imul
popl
xchg
loope
mov
movsb
add
scas
mov
cmp
jp
fsubl
sub
lock
out
cmpsb
dec
add
sub
pop
adc
pop
push
xchg
mov
xor
sub
mov
dec
mov
sub
or
adc
jnp
mov
mov
scas
push
xor
out
stos
mov
push
inc
jp
out
mov
xor
loope
lahf
push
lret
jecxz
inc
arpl
cs
push
add
xchg
pop
out
push
mov
jl
jge
dec
push
lods
hlt
orb
fs
iret
xchg
negl
lss
aad
cld
inc
jb
xchg
xchg
sbb
pusha
sarb
or
test
inc
pop
arpl
mov
aam
icebp
sbb
clc
sub
cmpsl
sbb
shrl
and
cmp
sbb
arpl
xor
pop
addr16
loopne
jb
push
stc
test
leave
mov
cli
mov
cmc
or
test
aam
iret
int
push
sbb
rcl
inc
lock
push
mov
adc
jl
jge
push
jne
xchg
gs
xrelease
push
xorb
popa
xchg
aad
dec
cs
mov
mov
sbb
rcl
pop
lret
in
test
insl
xchg
pop
lcall
cmp
cmp
cli
hlt
imul
mov
mov
stc
test
ljmp
mov
xor
pushf
jbe
outsl
push
sub
adc
push
add
sub
lods
inc
leave
aaa
xor
das
cltd
les
or
lock
mov
mov
pop
mov
inc
pop
dec
rorb
ja
aam
mov
cmpsb
dec
std
out
push
push
popa
test
push
push
xchg
cld
test
push
and
xor
or
stc
mov
pop
lahf
inc
hlt
push
ret
and
cmp
xorl
mov
dec
inc
push
das
in
sbb
pop
xchg
mov
push
in
test
xchg
aas
jae
ficoml
test
test
cmpsl
repnz
fs
out
xlat
push
mov
addl
movsb
das
mov
adc
icebp
pop
pop
xor
out
sbb
shll
pop
test
iret
loopne
pop
and
icebp
inc
in
in
pop
std
add
out
push
mov
rcrb
das
rcrl
cmp
inc
cli
push
in
sbb
sti
xchg
int3
dec
int
cmpsb
and
ss
jp
jmp
movsl
xor
testl
and
test
or
dec
out
push
jecxz
cmp
cmpsb
arpl
insl
dec
push
outsb
stos
or
cmp
pop
inc
fimull
leave
int
push
push
std
lods
push
dec
fcomi
ss
lods
nop
mov
mov
insb
cld
add
stc
outsl
inc
fistpll
dec
ljmp
lret
jns
lods
aad
popa
shl
stc
loope
push
fwait
and
jmp
adc
adc
xchg
inc
fsubr
dec
movsb
xor
xchg
mov
decl
nop
or
mov
repz
inc
xor
cmpsl
push
push
xor
push
sbb
cmp
pushf
fdivs
sub
or
push
xor
cmpsb
mov
xchg
add
negl
shlb
ret
std
mov
into
cmp
div
int3
lds
rolb
pop
and
mov
add
shl
inc
enter
xor
movsb
mov
mov
push
sahf
iret
dec
ror
imul
mov
mov
dec
das
or
test
and
mov
jl
mov
mov
rcrb
xchg
mov
outsl
mov
jmp
cmpsb
jae
arpl
fwait
jp
outsb
cmpsb
jp
ret
dec
test
insl
xor
add
inc
and
sub
out
lock
push
cmc
std
cmp
mov
lds
roll
and
or
and
lret
jns
fcom
ja
out
add
imul
mov
gs
xchg
adc
dec
cmpsb
mov
and
pop
adc
aaa
outsl
adc
fsts
sbb
decb
mov
notl
shrl
push
lds
xor
mov
push
nopl
lods
loop
loop
mov
jbe
cwtl
push
dec
bound
mov
lret
iret
push
push
sarb
adc
ds
aaa
inc
xor
in
outsb
adc
int3
out
xor
in
xor
test
pop
movsl
sub
sbb
and
and
adcb
jl
int3
fdivr
in
sub
push
xchg
repnz
mov
pop
mov
push
cmp
call
icebp
push
xchg
icebp
jecxz
mov
mov
mov
inc
xor
mov
imul
pop
dec
xor
loopne
adc
pop
and
dec
pop
scas
jle
dec
lods
mov
lods
xchg
pusha
mov
sub
or
and
mov
les
adc
imul
push
lahf
sarl
dec
jge
adcl
das
inc
sbb
dec
popf
cs
outsb
lods
push
loop
pushf
jg
lcall
inc
je
mov
fstpt
dec
jbe
push
or
mov
dec
fldenv
mov
or
cmc
dec
jmp
sbb
jo
mov
je
adc
mov
mov
or
in
insb
dec
fnstsw
loope
pusha
mov
or
mov
mov
pop
pop
mov
loop
js
jmp
pop
fisubrs
sar
xor
shll
cmpsl
add
outsl
or
push
popf
xorb
stc
pop
out
scas
cwtl
xor
mov
insb
in
jae
stos
mov
andl
and
fs
pusha
jle
adc
sbb
push
cltd
jge
scas
ja
xchg
insb
inc
iret
inc
lret
adc
insb
out
cmp
pop
dec
outsb
fistl
lret
mov
jb
cmpsb
subb
push
outsb
adc
fs
mov
mov
jmp
movsb
xchg
cld
jne
leave
mov
inc
insb
xor
decb
cmpsb
push
dec
mov
mov
and
int
mov
fcomp
mov
mov
jp
adc
mov
testb
push
rol
cmp
jnp
lahf
lods
pop
xchg
sub
mov
inc
push
and
dec
fcomi
mov
jbe
jne
mov
xor
push
outsl
mov
shlb
and
mov
ffree
lods
xor
sbb
lea
lcall
daa
pop
xchg
in
inc
adc
dec
mov
lahf
outsl
mov
fstl
lods
cltd
out
or
lock
jo
jbe
cmp
sahf
adc
adc
sbb
in
adc
cmpsb
popa
pop
jb
cmpsl
xchg
xchg
xlat
cli
in
lods
ds
aad
lods
fisttpl
mov
xor
std
pop
inc
jbe
pop
movsb
adc
les
fcoms
and
jae
xchg
out
add
push
xchg
hlt
ss
push
add
ss
icebp
inc
into
std
outsb
xor
fmull
push
sub
das
dec
js
std
int3
push
int3
pop
push
and
outsb
adc
sahf
notl
mov
xor
outsl
in
test
out
lods
dec
into
add
mov
or
mov
jp
hlt
push
sub
push
arpl
sbb
and
cmp
and
fs
push
xor
aad
rcll
inc
push
sbb
scas
or
popa
cmp
std
fisttps
out
je
out
push
adc
test
cmp
sub
ret
pop
int
out
inc
ss
inc
ss
pop
das
lea
pop
aas
mov
popl
pop
and
jecxz
lret
aam
jne
test
adc
xchg
sub
mov
loop
dec
sbb
lcall
cmpsl
mov
lds
cmpsb
out
fldenv
push
mov
aas
sbb
rcrl
hlt
mov
loop
push
out
push
jg
xor
test
xchg
mov
xchg
aam
xchg
or
mov
out
mov
mov
inc
addr16
adc
jecxz
aas
push
lcall
aas
insl
and
in
cli
push
dec
test
mul
flds
je
inc
or
or
add
out
leave
sahf
sar
jle
mov
icebp
adc
rorl
repnz
aaa
inc
data16
cmc
ss
adc
pop
lds
imul
xor
adc
push
sub
roll
rep
lock
addr16
dec
movsl
sahf
inc
call
or
push
push
or
inc
fidivrl
out
pop
andb
mov
push
andb
pop
std
mov
call
arpl
es
fldt
fildl
sahf
orps
repnz
rcrl
jo
movsb
sub
outsb
rol
int
adc
jp
icebp
inc
std
lret
sbb
in
data16
sbb
jmp
gs
add
aaa
cmpsl
stos
push
push
loope
das
push
jo
stos
push
push
push
mov
stos
and
xchg
ret
pop
fdiv
es
push
dec
mov
orl
mov
push
mov
stc
lods
pop
push
shll
stc
in
sbb
mov
in
int
in
test
sub
and
ret
cmpsb
cmp
mov
fidivrl
mov
xchg
dec
rclb
pop
sbb
ljmp
ret
and
iret
out
dec
orl
or
push
rclb
pop
orl
pusha
int3
mov
and
mov
mov
int
jns
and
daa
and
adc
insb
cmp
mov
js
and
push
or
les
loop
popf
jmp
test
push
sub
mov
stos
adc
ret
rcl
sub
outsl
inc
mov
lcall
test
dec
or
xchg
mov
fmull
pop
inc
mov
cmp
jg
insb
jmp
inc
xchg
cs
sbb
fstl
mov
jecxz
clc
push
sbb
jl
repz
cmp
imul
dec
mull
sbb
mov
cli
jp
push
lds
frstor
dec
je
or
ret
mov
rol
mov
xchg
sbb
orl
sbb
dec
push
jns
imul
int3
icebp
test
outsl
bound
aam
loop
arpl
add
add
loope
jecxz
mov
arpl
inc
xor
push
and
lods
mov
jecxz
cmp
loop
fadds
mov
aas
dec
ja
push
orl
xlat
pop
aas
inc
das
imul
mov
jp
out
in
je
lretw
push
sub
ljmp
mov
xchg
imul
push
in
je
ja
negl
ljmp
in
xor
xchg
mov
popf
stos
mov
scas
mov
mov
inc
sub
in
inc
popa
xchg
mov
cli
insb
xor
imul
mov
mov
push
cltd
jle
dec
daa
pop
or
xchg
push
out
sub
sub
enter
test
xchg
and
jmp
xlat
cltd
sbb
outsl
scas
in
insb
xchg
insl
stos
pop
push
lret
mov
cli
shr
mov
mov
dec
inc
mov
movsb
clc
dec
dec
out
pusha
mov
das
into
dec
cmp
xlat
cmp
push
push
sbb
sbb
lods
push
dec
je
ja
push
push
mov
adc
es
or
movsb
sub
xchg
cs
sbb
inc
test
das
insb
pop
or
cmp
mov
or
xor
rcl
pop
fsubl
fnstenv
lahf
aaa
push
jnp
mov
outsl
push
stos
pop
cltd
loope
inc
std
ja
jle
sti
push
ret
xchg
jp
inc
mov
mov
fcompl
xor
or
cwtl
inc
ss
out
push
add
incb
hlt
testl
outsl
push
mov
push
jo
lds
and
daa
and
mov
sub
out
shr
xorl
loop
int
jo
xor
cmp
or
jl
pushf
jecxz
mov
sub
jmp
test
jl
test
jle
je
fisubl
dec
cmp
xchg
push
rolb
mov
pop
cmp
out
stos
dec
mov
xchg
fsubrp
xchg
adc
mov
test
xchg
xchg
and
add
popa
pop
mov
cmp
xor
stos
lock
fistps
fsub
dec
out
sub
push
push
cltd
cmp
data16
or
dec
inc
in
dec
out
out
pop
ficoml
test
jno
insb
xchg
icebp
pop
xor
mov
mov
push
pop
in
cltd
and
popa
or
int
add
sub
sbb
pop
test
neg
cmp
roll
hlt
or
sub
call
mov
adc
mov
add
int
or
cli
dec
sub
jmp
addl
mov
cld
out
dec
cmovnp
stc
cmpsl
cmp
sub
cmpsb
push
rcll
adc
cmp
fsubrl
lods
jmp
mov
movsb
lock
push
lret
ret
mov
pop
push
adc
xor
cld
int3
mov
fcmovne
xchg
pop
mov
cmpsb
mov
and
notb
push
jg
xchg
xor
xchg
arpl
ret
or
jno,pt
push
aas
imul
mov
mov
cmp
test
mov
insl
pop
js
test
xchg
sub
mov
pop
mov
cmpsb
stc
in
sub
jecxz
aas
jmp
xchg
roll
jle
add
mov
cmp
jae
lcall
cmpsl
pop
sub
mov
dec
sbb
lahf
cwtl
lret
inc
xchg
mov
xchg
in
in
out
scas
cmp
fdivr
adcl
mov
cld
push
adc
inc
dec
es
test
iret
scas
pop
and
pop
or
jno
pop
ljmp
xor
stc
pushf
pop
dec
cmpl
jmp
lods
push
scas
adc
nop
int
les
or
out
in
mov
adc
ds
andb
call
mov
dec
or
repz
outsb
dec
cld
cmpsb
lahf
dec
mov
xlat
inc
xor
inc
pop
push
jno
add
out
aad
inc
xor
in
mov
lret
mov
mov
mov
inc
adc
arpl
in
in
pop
lods
lods
test
outsl
lods
call
push
xor
xchg
cmpsb
ret
sub
test
notl
mov
aas
shrb
mov
lods
outsb
add
mov
xor
jmp
out
dec
popf
cmp
arpl
sbb
adc
sbb
loop
fs
adc
aad
scas
push
adc
fsub
js
loop
sbb
xor
push
lahf
add
sub
inc
add
jbe
lret
ja
lahf
cmp
shrl
std
outsb
mov
scas
iret
adc
inc
inc
imul
push
test
aam
dec
int3
data16
lea
dec
repnz
or
cmp
jge
lahf
insl
aaa
subl
mov
mov
movsb
dec
xchg
imul
scas
out
pop
xor
push
and
shrl
fdivl
rorb
out
out
mov
rclb
mov
mov
outsb
adcl
sbb
or
int3
insl
inc
mov
mov
fs
mov
jmp
lea
push
outsl
fcoms
rorl
js
mov
xchg
jl
leave
push
xor
push
pop
lret
xchg
bsf
aad
mov
xor
leave
negl
mov
xchg
repz
ret
aaa
push
out
cmp
pop
mov
adc
scas
lcall
loop
push
fnstcw
mov
cmc
push
rol
mov
sbb
fstpl
push
inc
mov
mov
iret
xchg
fs
mov
push
jne
dec
stos
imul
push
dec
mov
xor
imul
dec
sub
cmp
leave
xchg
cmp
jl
call
lods
lcall
dec
rolb
pop
leave
and
jnp
inc
mov
or
jae
fs
dec
jmp
je
iret
push
pusha
clc
add
pusha
dec
loope
dec
jnp
jno
scas
in
pop
xchg
sarb
pop
cmp
add
fbld
jb
inc
fdivrs
roll
pop
push
push
push
movsl
divl
dec
je
dec
sub
outsb
jp
mov
mov
adc
sahf
test
dec
mov
or
out
popf
and
cmc
mov
sti
xor
cmp
int3
mov
xchg
loope
iret
aad
jg
xchg
or
repnz
fbld
scas
cs
sbb
sbb
fcmovb
sub
cwtl
inc
cld
xchg
and
test
in
cld
leave
adc
pushf
push
mov
sti
dec
in
in
out
aam
decb
stc
mov
mov
dec
lcall
aad
shlb
pop
repnz
jns
outsl
mov
fwait
popf
lcall
lret
aaa
mov
mov
shl
data16
mov
out
ret
dec
xchg
dec
fcmovb
pushf
mov
int3
pop
jae
dec
stos
inc
sbb
aad
pop
add
lret
fisubrs
sahf
push
xlat
fdivs
push
popa
lods
mov
ficoml
xorb
or
push
xlat
fwait
and
pushf
lea
push
cmpsl
sbb
test
fnsave
sbb
aad
icebp
ja
pop
pop
xlat
cmpsl
or
or
out
rolb
insl
sbb
loopne
es
sbb
or
dec
popa
add
cmp
xchg
cmp
test
dec
in
enter
xchg
sub
adc
inc
inc
xlat
adc
xor
adc
rclb
enter
add
jp
mov
imul
pop
xchg
sbb
scas
jb
lret
xchg
popf
adc
test
xlat
pop
pop
mov
aaa
loop
stos
icebp
and
subl
or
mov
ret
lret
ret
sbb
es
and
inc
mov
gs
ret
lods
pushf
je
fistpll
bound
rorl
cmp
lret
shll
lcall
in
fistpll
adc
pop
arpl
or
cmp
or
mov
fsubs
insb
dec
les
mov
sub
push
jp
sbb
pop
xorb
sahf
push
jl
iret
or
and
out
divl
scas
mov
nop
xor
sbb
popa
xor
sbb
sbb
jmp
jno
orb
ret
sbb
fcmovne
pop
or
sub
je
sub
ret
push
adc
repnz
add
sub
mov
out
mov
push
rcrb
pop
or
xor
test
mov
dec
xchg
xlat
jne
loope
mov
inc
xchg
scas
adc
fimull
pop
mov
cltd
mov
outsb
jo
push
lods
inc
jmp
jmp
stos
xor
dec
popa
cld
filds
mov
inc
or
fsubs
inc
lret
mov
out
push
pop
jae
mov
mov
xchg
lods
xchg
pop
cltd
orl
push
andb
out
shll
sbb
loope
mov
and
xor
adc
daa
sbb
rolb
imul
inc
inc
gs
add
cmpsl
mov
fwait
xor
iret
and
mov
add
pop
pop
lret
xor
icebp
mov
xchg
pop
ficoml
or
cmp
sbb
roll
add
mov
in
mov
les
lea
xchg
gs
push
xor
out
cs
test
and
into
scas
outsb
fwait
add
pop
mov
std
ss
in
mov
mov
dec
sub
aad
fcomip
push
jnp
xor
or
jnp
aas
cli
int3
pop
into
lar
repnz
xchg
cmpb
and
dec
xor
movsb
pusha
dec
push
shll
dec
xchg
jae
insl
cltd
mov
mov
xor
call
xchg
imul
push
popa
cmpsl
pop
adc
sbb
movsb
cli
pop
xchg
xchg
pop
jg
fsubl
bound
inc
into
push
cmp
lods
push
xchg
jmp
cwtl
lahf
mov
mov
push
loope
fadd
add
inc
scas
push
loope
sub
mov
mov
adc
inc
mov
mov
les
and
or
test
add
xchg
je
dec
mov
sbb
test
into
pop
xchg
insb
pop
loope
and
jmp
nop
cld
je
test
or
jp
inc
aad
inc
aad
ret
ret
rcl
scas
push
loop
int
lods
mov
aaa
mov
out
dec
sub
mov
xorb
nop
mov
mov
mov
imul
push
leave
fcmovne
popf
fisttpll
sbb
popf
in
xor
int3
and
dec
enter
lahf
and
ret
lret
lods
cwtl
enter
hlt
fisubs
adc
mov
data16
mov
int3
adc
or
mov
pop
sub
and
jbe
inc
push
cmp
xchg
mov
dec
xchg
in
and
test
and
pop
lcall
lret
jecxz
mov
inc
insb
sbb
call
adc
leave
mov
xor
movsl
inc
aam
add
adc
or
push
and
je
mov
mov
insl
and
and
cmp
sbb
sahf
shll
js
dec
cwtl
or
nop
aad
lea
iret
ret
xor
scas
or
jne
sub
push
fsts
jo
pusha
lea
mov
sub
push
scas
lahf
movsb
sbb
jns
xorb
push
cmp
lods
dec
insl
add
and
sbb
push
push
dec
sub
rorb
mov
pop
mov
fiaddl
scas
shr
sub
dec
xor
dec
not
in
and
in
mov
imul
stc
or
cmp
repnz
push
mov
or
test
jno
dec
xor
orl
pop
xchg
cmpsb
push
cld
rcrl
call
insl
pop
pop
xor
insb
xor
push
ficoml
sbb
mov
aaa
push
or
or
outsl
mov
fidivrl
ja
cmp
adc
rclb
cli
and
enter
push
movsb
push
outsb
adc
ficompl
shlb
sub
pop
xchg
out
inc
rol
push
push
pandn
push
dec
imul
mov
add
filds
les
inc
leave
int3
cld
dec
push
shll
add
sbb
and
and
cld
nop
mov
daa
dec
mov
pop
push
or
popf
adc
stos
call
dec
jbe
loope
testl
dec
cltd
leave
aaa
xchg
sub
inc
ljmp
insl
mov
jo
divl
rclb
repnz
jne
mov
cmp
fmuls
ret
sub
mov
jl
in
xor
inc
int3
xchg
xchg
push
aaa
inc
pop
pusha
sti
lret
es
inc
xor
ret
xchg
xor
xchg
pop
ja
gs
pop
jp
loop
mov
imul
xor
fnstsw
inc
xchg
mov
and
sahf
mov
mov
faddl
cmp
cld
stos
mov
push
fiaddl
je
xchg
adc
dec
mov
add
or
jge
lods
fidivrs
push
jb
cmp
adc
jae
cmpsl
push
lea
icebp
bound
aam
int
xchg
shlb
shl
stos
push
xor
jp
mov
adc
cltd
aad
jg
cmpsl
aad
xchg
sub
aas
sbb
cmp
sbb
sub
lea
mov
cmpsl
test
lahf
inc
sbb
sbb
and
inc
std
int3
dec
mov
out
pop
imul
insl
cwtl
div
push
cmp
lea
lahf
jmp
stos
cmpsl
ficomps
in
jmp
pushf
mov
lods
pop
xor
xlat
jo
adc
aaa
cmp
fcoml
cmp
xchg
and
pop
pushf
dec
inc
lods
adc
movsl
sub
adc
xor
dec
movsb
push
pop
pop
incb
sbb
pop
pop
lods
daa
insl
jl
sti
aas
mov
psrld
adc
inc
aas
aam
xchg
add
dec
jo,pt
popf
movsl
mov
fdivr
movsb
arpl
or
pop
cs
and
negl
xchg
imul
aam
sbb
push
mov
cmp
mov
push
aas
pop
xchg
mov
cmp
jns
out
and
xor
arpl
mov
adc
mov
xchg
push
pop
xor
sbb
mov
jmp
adc
les
mov
frstpm(287
fwait
mov
icebp
lret
stos
std
data16
stos
push
aas
inc
add
xchg
cmpsl
je
mov
push
or
mov
pusha
adc
repz
push
mov
sahf
inc
aaa
scas
lock
lret
test
out
mov
sahf
std
xor
sub
push
fwait
jns
ja
gs
lcall
scas
xchg
ret
cltd
dec
shll
mov
rolb
ret
lock
sbb
or
dec
or
mov
push
mov
sub
add
int3
nop
jno
jbe
jbe
push
out
addr16
popf
cmp
cmp
add
push
dec
or
xchg
add
test
neg
push
or
sub
jp
fsts
push
jb
dec
xchg
pop
adc
push
insb
xchg
scas
lret
and
aas
xor
adc
push
mov
pop
ja
fwait
xor
lods
insl
orl
into
fisttpll
inc
fdivrs
jne
pop
lahf
jne
pop
add
cmc
xchg
es
mov
add
pushf
leave
imul
jge
adc
pusha
push
or
dec
sbb
cmpsb
aad
cld
jno
xchg
cwtl
hlt
in
adc
loopne
mov
dec
stos
add
lock
sub
inc
shrb
subb
jb
sarl
mov
lods
adc
push
dec
sbb
xchg
pop
add
jp
pop
cmc
scas
mov
stos
jb
das
and
xchg
ljmp
sub
mov
mov
and
lea
jno
test
outsl
popa
cmp
sbb
mov
adc
mov
sbb
xchg
and
push
mov
dec
mov
pushf
xchg
sbb
lcall
sub
dec
pop
adc
movsl
cltd
mov
unpcklps
mov
xor
insb
fldcw
pop
test
shrb
jno
aam
jg
inc
pop
xchg
lea
movsl
ret
mov
push
pop
lods
mov
mov
fs
inc
jp
and
inc
in
repz
lea
xchg
rclb
popf
addb
cmpsb
inc
cmp
dec
pop
in
mov
adc
or
out
scas
scas
movsl
xor
sub
or
in
cld
scas
lret
sub
sbb
fisubrs
cmpsl
repz
add
mov
shl
push
adc
sbbl
dec
pop
mov
out
repz
push
shrl
in
adc
xor
mov
ret
mov
jbe
cmp
add
dec
xchg
push
cmpsl
push
addr16
sbb
fisttpll
pop
test
jne
add
sbb
cs
fsubs
subl
gs
aas
test
sbb
cli
xchg
outsb
xchg
mov
dec
mov
fcoml
xor
popa
repz
jne
std
jg
iret
gs
xchg
je
pushw
pop
gs
cmp
pusha
rorl
fs
xchg
dec
popl
xchg
mov
std
das
cmp
inc
ja
mov
or
out
xchg
dec
dec
jo
inc
cmpsl
enter
cmp
inc
jp
xlat
ds
fistps
and
and
pushf
pop
and
fcmovne
pushf
adc
in
push
mov
xchg
sti
or
sub
lahf
jb
lods
sub
les
push
push
imul
scas
out
outsb
pop
mov
or
sti
clc
mov
fdivl
push
andl
push
stc
xchg
int
lahf
out
sub
int3
in
dec
push
test
clc
xchg
or
clc
pop
pop
push
jo
into
and
pop
and
pop
ja
lcall
push
push
ds
inc
aam
into
ss
je
mov
pop
push
xchg
and
insb
inc
pop
add
adc
add
ljmp
xchg
sub
out
inc
fstps
inc
test
maxps
pop
sbb
gs
fldcw
clc
or
repz
jle
or
cmp
stc
mov
popa
mov
dec
dec
insl
aam
push
and
xor
movsb
xchg
or
out
mov
pop
or
jle
roll
jle
add
sar
and
test
inc
ffreep
jne
and
fnsave
mov
out
inc
and
mov
insl
test
pop
icebp
cwtl
sbb
insl
xchg
inc
dec
xchg
sub
push
ud1
cwtl
mull
jp
xor
lods
or
lcall
pushf
push
pushf
lock
push
div
das
subl
push
inc
jmp
loopne
aam
adc
mov
sub
mov
jbe
sub
lret
lds
jae
sti
rcrb
in
jmp
gs
xor
mov
ret
and
ret
movb
dec
in
mov
cmpsb
fs
sbb
popf
mov
jecxz
loop
cmpb
mov
pusha
add
add
jge
sub
push
js
je
sub
sub
pop
mov
mov
jl
jge
movsl
adc
in
lahf
and
xor
popa
dec
sub
jnp
jl
mov
xchg
je
lcall
mov
sub
lahf
imulb
fwait
rcrb
mov
xlat
or
test
mov
xchg
rorb
addl
enter
jne
jnp
lcall
sub
push
push
xchg
pop
fwait
and
push
jmp
cltd
aas
leave
mov
mov
push
lret
push
fucomp
xchg
sub
sub
adcl
mov
xchg
pop
cli
xchg
dec
dec
xchg
and
aaa
push
sbb
sub
adc
loope
lahf
out
negl
stc
mov
int
and
aad
adc
push
or
lret
dec
or
adc
sub
sti
lea
dec
push
sub
stc
jp
push
loop
sub
lret
mov
faddl
inc
pushl
and
mov
xor
adc
icebp
lods
or
clc
xor
hlt
cmp
sub
add
outsl
je
out
into
daa
stos
loope
adc
mov
cmpsb
hlt
pusha
inc
lea
imul
repnz
mov
add
hlt
lahf
loope
int
stc
mov
fldenv
test
insb
xlat
loop
js
inc
das
xchg
cltd
test
fidivs
sahf
imul
lret
cld
sub
int
int
ss
mov
nop
fistl
push
sarb
or
jmp
outsl
and
divl
cld
dec
or
cmp
push
pop
cltd
inc
pop
bound
lret
fldcw
adc
cltd
adc
adc
daa
mov
jl
and
gs
mov
pop
in
aaa
or
repnz
shlb
call
sub
and
into
cld
cwtl
jnp
test
repz
xchg
xchg
outsl
push
cmp
dec
mov
loop
pop
ljmp
and
divl
cmp
xchg
dec
out
loope
xor
cmp
or
inc
dec
and
cmp
sbb
iret
inc
sti
mov
xchg
xchg
xchg
xchg
rcll
sbb
adc
jne
inc
aam
jge
in
movzbl
jp
data16
mov
ret
mov
xchg
out
pop
icebp
xchg
ficoms
setno
ds
cld
rcrb
outsb
add
dec
lock
ret
pop
les
push
icebp
and
in
cmp
enter
push
lret
xchg
sbb
int3
in
ljmp
or
or
hlt
xchg
dec
mov
jno
std
sbb
pop
cmp
cs
loope
cmp
and
inc
cmpsb
icebp
mov
std
test
adc
aaa
or
in
es
push
sub
add
dec
mov
push
cvtps2pd
fwait
and
jge
cmpsl
pop
loope
lret
cld
or
lea
xor
js
jge
mov
and
pop
aas
data16
push
jge
dec
jo
xchg
sub
add
jle
aam
jg
lock
and
cld
or
and
dec
add
out
les
and
push
add
adc
lds
filds
xchg
jb
into
or
xchg
lods
adc
xor
mov
adc
ret
shrl
mov
mov
hlt
inc
mov
dec
decl
add
in
mov
adc
imul
mov
fsubr
inc
adc
out
jae
jno
cmp
js
xchg
mov
cs
xchg
xchg
pushf
aam
popf
in
xchg
sbb
or
test
fs
aad
fidivrl
je
sbb
mov
arpl
mov
enter
and
rcr
rorl
in
lds
bswap
cmp
xlat
pop
enter
lods
xchg
mov
mov
movsb
inc
dec
in
subb
and
popf
jg
sub
shl
int
lahf
pusha
in
push
mov
adc
scas
test
in
or
push
xchg
mov
adcl
push
out
jnp
pusha
xchg
sub
inc
movsl
mov
or
jecxz
inc
insb
adc
lea
iret
dec
in
adc
adc
and
js
inc
lea
jecxz
loopne
js
stc
addb
clc
cmpsb
dec
and
dec
lret
test
cmp
mov
iret
lret
jg
push
push
int
enter
lock
das
sub
jb
rorb
pop
jns
addr16
jg
cmp
rcrb
clc
test
cmp
push
in
pop
sub
xchg
out
fldl
mov
out
cmp
hlt
or
xchg
sbb
loope
push
xchg
inc
in
jp
fldenv
dec
jo
xor
pop
mov
roll
jbe
ss
sub
xchg
adc
xlat
xor
dec
lcall
popf
pop
inc
mov
xor
popf
cwtl
pop
dec
adc
adc
push
aam
mov
mov
cmpsl
inc
adc
jb
mov
scas
out
enter
stos
sahf
mov
jl
inc
popf
int
adc
or
cmp
inc
sub
pop
mov
sub
xor
cltd
stc
sub
sbb
incb
xchg
jno
mov
or
ds
dec
lret
aad
adc
push
rolb
cli
std
or
les
cmp
out
jae
mov
dec
adcb
cmp
xor
call
out
xor
adc
push
jge
bound
xlat
inc
stos
mov
mov
dec
mov
mov
shrl
inc
out
adc
cmp
adc
mov
dec
xchg
es
out
sbb
rcrl
mov
and
jb
iret
dec
popl
ret
insl
addr16
pushf
mov
and
adc
dec
xchg
ret
in
cs
push
out
shll
pop
pop
clc
insl
pop
add
xchg
test
mov
arpl
pop
xchg
sarl
mov
nop
jecxz
fwait
pop
xchg
and
adc
in
push
jae
adc
popf
std
push
sub
in
out
outsb
inc
adc
into
or
addr16
jne
insl
ljmp
mov
enter
push
jmp
pop
cmp
in
add
and
fstpt
xchg
outsb
dec
fwait
cmp
mov
fs
sub
cmp
lret
addb
fwait
or
dec
mov
adc
inc
sub
fs
mov
inc
adc
or
xor
xor
push
jg
rorb
xchg
daa
sti
mov
aam
pop
loop
pop
gs
push
into
sub
mov
cmc
ljmp
pop
ficomps
mov
pop
scas
mov
mov
adc
and
add
insb
mov
subb
mov
je
mov
scas
xor
sbb
xchg
lcall
cmpsb
push
sub
adc
inc
add
outsl
mov
jo
or
lods
loope
sub
andb
inc
push
movsl
inc
call
sahf
push
cmp
mov
pop
fistpll
into
cwtl
push
bnd
sarl
push
ret
fdivrl
popf
xor
adc
jne
pop
sub
cli
rorl
loopne
xchg
adc
cmp
sbb
push
enter
lret
sarl
outsb
cmp
jne
in
mov
fsubrs
push
inc
ja
or
movsb
xchg
imul
inc
sub
out
inc
fidivrl
pop
xchg
push
cltd
mov
or
cltd
and
dec
mov
call
add
je
sbb
inc
mov
cmpsl
jp
int
lret
xchg
mov
ss
lcall
push
push
cmp
sahf
inc
cltd
repz
imul
jp
scas
mov
nop
ljmp
adc
ss
ret
sub
mov
in
shr
jo
mov
adc
dec
pusha
lods
shrb
adc
fcompl
aad
cmp
sub
addr16
pop
push
pop
in
rcll
cltd
dec
dec
mov
scas
and
ret
repz
int3
stos
jnp
mov
repnz
cmc
bound
xor
ret
into
or
push
fisubs
add
sbb
or
push
mov
ss
mov
dec
xchg
pop
lock
jp
xlat
cmc
inc
std
out
pop
mov
mov
lods
in
or
fnstenv
pop
sub
mov
inc
sbb
sub
mov
icebp
aas
mov
ja
push
jbe
scas
mov
into
sbb
xchg
bound
pop
mov
gs
push
pop
sbbb
scas
jl
sub
lods
fadd
repz
xor
inc
xchg
mov
cld
mov
sub
and
sbb
mov
inc
cmpsl
loope
xor
cmp
cmp
aas
sub
bound
xchg
pop
cwtl
adc
sahf
xor
ret
int3
and
ret
adc
mov
add
popa
inc
sub
push
rcll
mov
js
test
loopne
inc
cwtl
andl
cmp
stos
xchg
pop
lcall
rorl
and
aas
jns
cmp
sti
jno
fisttpll
pop
jno
lds
aam
pop
orl
sbb
xchg
cmp
pop
and
mov
dec
cmp
push
lods
std
in
lcall
dec
jb
sahf
sbb
mov
ds
loop
and
jge
cmp
xor
or
xor
sbb
pop
loop
pushf
and
sbb
popa
cmp
movsb
ja
hlt
dec
push
lret
dec
xor
cwtl
push
xor
add
aas
sbb
xor
pop
mov
xchg
dec
jbe
movsb
push
inc
xchg
movsb
and
mov
xchg
cmp
pusha
sti
aam
pop
test
ja
jp
sub
sub
rcl
enter
jge
lds
loop
push
and
xor
shll
mov
jo
jmp
pop
mov
sahf
or
unpckhps
test
pop
lcall
call
aaa
xchg
sti
aad
sbb
or
jle
jb
inc
pushf
insl
jb
jp
bound
xchg
dec
cmp
or
jo
stos
out
mov
pop
jp
adc
sub
mov
ret
scas
sahf
mov
lahf
je
adc
dec
sub
sbb
in
jns
xor
cmp
mov
push
adc
mov
jnp
add
xchg
xor
or
jl
jmp
mov
data16
enter
aam
pushf
add
pusha
jne
les
movsb
pop
or
fdivl
or
push
pop
fwait
push
inc
dec
lock
jecxz
pop
pop
push
xchg
pusha
cld
mov
data16
cmp
js
cmp
fwait
add
xor
sub
pop
sbb
pop
dec
arpl
pop
and
sub
jno
adc
pop
js
pop
je
adc
repnz
push
mov
adc
jno
dec
test
push
scas
mov
mov
xchg
out
testl
sub
cli
test
ja
xor
jne
jecxz
enter
pop
dec
in
adc
movsl
dec
inc
add
sbb
mov
pop
inc
mov
pop
mov
into
push
cltd
fcmove
rcll
mov
mov
outsb
subl
test
insb
adc
mov
movsb
xchg
sub
daa
jmp
cmp
fisubrl
stc
testb
lods
inc
scas
mov
sbb
pop
int3
lahf
xchg
sbb
mov
dec
test
cmpsb
clc
jnp
rcr
shll
out
jl
xchg
adc
test
gs
divl
in
pop
or
nop
jle
add
mov
out
push
enter
loopne
stos
sub
stos
fbstp
push
mov
les
push
dec
in
jmp
and
and
cmp
aam
out
inc
mov
or
sub
in
push
ret
or
cwtl
fdivp
sbb
mov
push
push
and
repnz
xchg
leave
adc
sbbl
adcl
ret
insb
or
xlat
sahf
call
xor
mov
jns
out
cmp
inc
and
es
sbb
pop
stc
outsl
mov
inc
xchg
out
add
stos
inc
hlt
repnz
cmp
sub
fwait
fsubrl
cmc
jmp
mov
mov
adc
push
pop
mov
pop
leave
sbb
push
fdivrs
sbb
movsl
dec
sub
loop
test
push
pushf
imul
ja
sbb
mov
push
or
adc
pop
fdivrl
sbb
addb
cmp
fdivr
dec
mov
call
sub
mov
pop
ja
cmpsb
cmc
ret
xchg
ficomps
dec
fwait
sbb
test
push
mov
pop
inc
dec
imul
cmpsl
lock
gs
inc
std
repz
add
lods
dec
push
xchg
fstps
push
fadd
call
loop
mov
or
cmp
cmp
jmp
mov
cmpsl
mov
fmul
and
pop
pop
loope
mov
jg
adc
adc
scas
mov
dec
lods
xor
adc
adcb
add
pop
ret
repnz
xor
rol
test
push
jae
ja
addr16
cmp
push
add
call
push
int
out
fs
push
adc
xor
jle
adc
pop
mov
pop
jg
pop
negl
dec
and
cmp
insl
mov
sub
xor
gs
pop
add
lahf
and
in
mov
andl
mov
in
pop
shll
leave
sti
arpl
mov
and
fisttpll
adc
bound
sub
sbb
push
lock
push
jbe
mov
mov
dec
fists
aam
out
stos
jle
out
adc
jb
mov
xchg
fwait
xlat
push
test
ficoms
aam
dec
sbb
mov
sbb
incb
mov
mov
psrlq
push
fmulp
mov
imul
ret
adc
movsl
loopne
cltd
mov
in
add
sahf
pop
push
xchg
jo
ss
push
pop
rcrb
test
mov
insb
mov
out
vpmaxsw
lahf
pop
into
data16
jo
push
insl
loop
dec
xor
add
cwtl
scas
xchg
push
add
inc
or
push
dec
mov
xchg
sbb
aaa
in
dec
in
or
ljmp
xchg
stos
lcall
cmpl
mov
xor
or
inc
dec
mov
mov
fbld
cs
ja
sub
and
mov
lods
pop
int3
shl
cmp
bound
nop
fs
sahf
cmp
fsubrs
mov
cli
cli
jnp
xchg
jb
faddp
divb
aas
adc
jge
sbb
or
pop
popf
shl
jo
scas
test
out
mov
adc
sbb
pop
ss
and
inc
lret
mov
push
clc
imul
or
pop
mov
dec
mov
push
pop
sub
push
xor
sub
out
mov
dec
add
bound
int
lret
cmp
fmull
inc
or
cmp
ret
aaa
pop
xchg
outsb
shlb
cmpb
loop
push
jnp
icebp
mov
push
cmpsl
leave
sbbl
jb
or
mov
dec
dec
mov
jbe
sahf
andb
ljmp
xchg
imul
jle
imul
jp
addr16
js
gs
ret
jmp
divl
sbb
jo
or
mov
imull
lahf
push
sub
repz
ficomps
loope,pt
in
roll
mov
mov
incl
mov
loope
push
cmp
ss
pop
push
mov
fnclex
inc
ljmp
or
hlt
xorl
adc
fistps
repnz
pop
xchg
xlat
cmp
cmpl
fisubs
dec
jmp
cmc
imul
push
xchg
dec
xor
push
xchg
bnd
fists
loopne
jl
jge
aam
push
cpuid
fwait
lock
or
pop
sahf
loop
repnz
rcl
clc
repz
or
fnstcw
fsubrs
fisubrl
and
aaa
rorb
lods
inc
pop
pop
stc
hlt
mov
cltd
cltd
dec
cmove
mov
jbe
fstl
mov
ds
movsb
pusha
or
movsb
or
pop
mov
sub
push
mov
ljmp
push
js
les
sub
push
popa
mov
stos
icebp
testb
jne
or
aas
scas
clc
jns
mov
shrl
cli
cmpb
push
arpl
adc
int
xor
adc
test
pop
add
dec
pop
jb
cmpl
push
cli
cmp
repz
les
lret
in
sbb
cmp
inc
dec
ja
and
in
cmpsb
pushf
test
aaa
bound
int3
dec
inc
rcll
xchg
jo
cltd
jno
outsl
dec
push
pusha
add
orb
das
cmp
loope
push
js
mov
push
sti
jae
push
popa
or
adc
pushf
adc
add
das
cmpsb
rcl
fdivs
jno
dec
fidivs
dec
xchg
sbb
fldt
pop
aad
aam
adc
adc
mov
cmp
cli
in
xchg
fimull
andb
mov
push
mov
xor
push
sahf
insb
lods
shl
jge
adc
mov
popa
mov
aaa
call
sub
xor
aas
outsb
imul
or
je
adc
or
pusha
ljmp
fs
or
lahf
inc
fdivrs
rclb
test
lcall
aam
mov
imul
pop
adcl
cli
xor
ljmp
mov
mov
pop
add
cmp
xchg
aad
fdivrl
into
jae
cmpsb
mov
shlb
push
xchg
das
inc
mov
add
xor
cmc
xchg
push
and
pop
frstor
pop
sub
adc
push
lods
dec
pop
pop
dec
imul
insb
sbb
push
mov
mov
sub
out
pop
adc
adc
push
cmp
pusha
dec
xchg
outsb
jp
jmp
xchg
hlt
negb
xchg
adc
ret
add
xor
and
je
pop
mov
in
or
push
sub
pushf
jp
add
pop
jmp
aad
daa
inc
cld
mov
dec
jnp
sub
call
inc
jge
cmp
adc
inc
sbb
mov
fsub
inc
adcl
in
xchg
add
movsl
aas
in
shr
adcl
ret
movsb
pushf
pop
in
xchg
sub
dec
cmp
fwait
bound
out
cwtl
jne
fwait
iret
push
ljmp
mov
fildll
std
lods
adcb
jb
cmc
movsl
sbb
jmp
push
iret
aam
daa
popa
hlt
dec
mov
clc
lods
lds
test
mov
sti
push
aas
sub
repz
repz
adc
repnz
out
inc
hlt
sbb
dec
scas
sub
dec
inc
out
in
in
dec
fucomi
hlt
xchg
addr16
cmp
daa
sbb
sti
and
ljmp
mov
into
shr
pop
push
lcall
or
inc
xchg
cli
ret
test
mov
adc
cltd
sub
pop
gs
aam
jae
sub
pop
sub
push
jg
xchg
xchg
out
std
jno
dec
call
in
rolb
push
add
push
pop
push
inc
xlat
dec
aaa
or
daa
dec
pusha
push
adc
inc
mull
std
pop
and
mov
ret
cwtl
mov
cld
in
mov
push
pop
pop
dec
mov
stc
je
adc
pop
outsb
shlb
js
stc
hlt
repz
add
adc
mov
push
mov
jmp
scas
xchg
int3
xchg
xor
sarb
push
outsb
jp
sbb
sbb
cmc
fistpl
test
rorb
jmp
popf
insb
addr16
pop
cmp
jle
push
mov
icebp
cmp
loop
out
cltd
xlat
mov
sbb
jne
and
repz
scas
test
mov
xor
daa
daa
xchg
push
sub
push
dec
dec
xchg
fistpll
jp
pop
push
subb
sub
or
dec
inc
movsl
sub
popa
inc
xor
gs
adc
add
loopne
push
mov
push
arpl
loopne
mov
cmp
stc
imul
add
ja
mov
jecxz
scas
push
test
clc
aam
push
stos
jns
cmp
jne
test
push
out
pop
rolb
ret
imul
mov
xchg
shlb
repz
inc
adc
mov
arpl
fnstsw
aaa
pop
adc
sbb
ja
xchg
xchg
and
ja
sbb
dec
mov
adc
popa
and
pop
sub
iret
idivb
jg
xchg
sbb
dec
decb
aad
push
jne
bound
push
repz
jmp
jecxz
sbb
mov
mov
ss
movsl
sbb
lods
push
popa
stc
jnp
data16
sub
adc
jecxz
mov
mov
mov
stos
dec
nop
jno
jns
mov
aam
js
push
int
xorl
mov
mov
lahf
mov
movsb
stos
repnz
xchg
ljmp
jmp
insb
stos
stos
imul
and
aad
add
adcb
xchg
push
jbe
mulb
dec
xchg
fdivr
ja
adc
popa
loop
lock
hlt
inc
mov
stc
rolb
rorb
mov
cmp
push
lahf
sub
scas
test
jae
nop
scas
shlb
adc
adc
jmp
adc
xchg
lahf
cmpsl
dec
cmp
mov
jle
xor
in
inc
in
in
xchg
lds
stc
push
call
cwtl
shlb
pop
mov
cmpsl
sub
sbb
push
pop
fdivs
and
enter
pop
add
add
or
loop
std
mov
mov
xchg
or
fbstp
rol
arpl
test
ss
sbb
inc
gs
add
mov
lea
rorl
push
jnp
shld
mov
pushf
dec
outsl
dec
movhlps
pop
lret
test
xchg
int3
aaa
xor
fstpl
in
popl
add
push
daa
aas
mov
jae
mov
imul
in
in
or
movsb
ret
mov
repnz
mov
mov
or
pop
test
sbb
jge
pop
out
xchg
call
cmp
xor
repz
add
lock
xchg
mov
sub
and
stos
cltd
daa
pop
dec
notl
xchg
adc
dec
pop
adc
jge
stos
mov
jmp
or
mov
xchg
mov
xchg
add
into
xor
inc
mov
stc
lods
xchg
mov
xor
mov
jbe
sahf
pop
das
testl
ret
xacquire
out
scas
jmp
mov
inc
shll
fs
addps
jecxz
push
push
or
loop
add
imul
or
mov
sub
xchg
and
push
jbe
or
scas
jb
outsb
dec
sar
shrb
pop
xor
jecxz
or
test
jo
and
add
add
cld
sti
jb
sbb
ds
or
lods
push
into
cmc
scas
mov
lea
stos
mov
sahf
gs
mov
pop
sahf
cltd
mov
clc
add
sub
sbb
adcb
movsb
insl
cli
call
les
lods
cmpb
push
sub
dec
add
lcall
testl
popa
mull
out
incb
data16
xchg
loopne
stos
mov
stos
adc
sub
xchg
cld
gs
in
and
call
add
pusha
xchg
nop
jl
mov
push
or
xchg
add
inc
test
sub
cmp
in
out
mov
xchg
xchg
loop
dec
pop
and
cli
xchg
jnp
rol
loop
daa
dec
add
jmp
inc
stc
ljmp
fldenv
in
icebp
mov
mov
pop
inc
sbb
jmp
cwtl
mov
int3
pop
push
mov
sbb
xchg
cmpsb
jp
mov
pop
mov
inc
out
cmp
adc
mov
xchg
incl
je
repz
inc
add
in
insb
adc
mov
addr16
lcall
into
repz
pop
imul
pop
mov
jg
jmp
in
enter
popa
aam
imul
sub
dec
out
mov
out
pop
xlat
mov
xchg
jnp
mov
xorb
sbb
mov
std
pop
out
aam
push
xor
hlt
leave
repz
popa
aam
and
into
add
in
std
popf
and
jp
pop
mov
xchg
jge
cmp
push
xchg
or
loope
insb
sub
mov
sbb
ljmp
lds
fucomi
or
xor
jae
add
sarb
sarb
rcrl
mov
pop
mov
jge
adc
mov
jg
das
dec
test
leave
add
mov
push
adc
or
out
push
xor
test
xchg
jp
add
gs
rcll
call
fisubrl
sub
adc
cmp
mov
or
outsb
push
lret
or
jmp
jmp
mov
sub
sbb
jns
adc
push
mov
insb
and
popf
das
pop
mov
call
mov
cmp
and
sub
lahf
call
cs
xor
je
stos
aam
hlt
pop
loope
push
pop
inc
pop
fldt
mov
pop
rcrl
inc
mov
je
add
iret
popa
sarb
mov
scas
dec
and
mov
and
imul
and
xor
jle
je
xchg
mov
push
mov
sub
cmp
jnp
or
scas
aad
fiaddl
dec
pop
add
and
cs
push
ret
dec
lds
int
movsb
rorl
mov
fwait
or
inc
sahf
jo
repnz
iret
enter
mov
jmp
outsl
xchg
je
fwait
xchg
inc
add
mov
xchg
scas
ja
push
pop
ja
cmp
lock
inc
mov
sub
inc
sbb
lcall
sbb
jnp
inc
mov
imul
xor
loop
sbb
outsb
fcomps
aad
jb
pop
out
mov
mov
popa
pop
shll
mov
xchg
mov
mov
and
jne
or
mov
sub
decl
lret
cltd
or
mov
push
adc
das
das
ret
mov
xor
shlb
push
inc
popa
add
addr16
dec
dec
inc
mov
ror
faddl
or
adc
fdivr
call
push
adc
test
incb
int3
in
inc
xor
loop
stos
lahf
push
dec
xchg
insb
mov
out
jp
jno
mov
push
cmp
cmp
fs
fdivl
jbe
and
sbb
inc
outsb
rclb
daa
pop
cwtl
mov
scas
jb
and
xor
inc
and
ret
gs
mov
mov
insb
push
call
imul
cmp
xchg
push
dec
push
adc
aas
not
cltd
pop
cwtl
pop
dec
iret
add
or
or
loope
fld
int
sarb
ja
and
pmaxub
test
inc
daa
sbb
cmc
dec
mov
out
pop
adc
xor
xchg
stos
cmpb
inc
dec
push
fists
mov
push
fisubrl
sbb
mov
push
aaa
mov
pop
mov
cmpsl
mov
xchg
icebp
mov
mov
sub
jbe
int3
mov
rorl
mov
aad
dec
cmc
nop
xchg
addr16
xchg
dec
sub
clc
sbb
ja
xlat
add
cmp
stos
dec
pushw
jae
mov
and
clc
mov
das
lds
jnp
push
pop
or
pop
mov
test
pop
push
pop
shlb
jae
test
lods
sub
fstpt
popf
mov
mov
jb
push
pushf
test
int
and
repz
addr16
mov
mov
pop
shlb
push
sub
jne
push
or
sarb
adc
inc
fdivrs
fdivrl
das
sub
call
sbb
push
xlat
mov
mov
outsb
xchg
jo
iret
mov
mov
loope
push
and
inc
and
jl
mov
mov
mov
mov
ficoml
repz
lea
inc
jecxz
mov
arpl
and
adc
mov
inc
pop
dec
imul
cmp
jbe
cmc
jg
mov
les
lahf
lea
mov
jecxz
xor
xchg
jnp
add
jge
aad
dec
sti
mov
ljmp
jg
sub
jmp
pop
in
repz
mov
add
mov
jno
sbb
lock
les
adc
add
loope
or
pushf
jecxz
push
sub
push
fbld
fcompl
test
lods
mov
sahf
mov
ficoms
out
idiv
cmp
inc
stos
push
lret
adcb
jae
pop
cli
xchg
mov
scas
jmp
ffreep
add
and
jmp
mov
adc
test
loop
fmuls
arpl
xchg
add
cmc
hlt
pop
mov
xchg
jno
sarb
and
push
pop
sbb
lods
adc
repnz
out
out
cmpsl
popa
add
adc
pop
ret
inc
repz
leave
push
icebp
jecxz
frstor
in
scas
cmp
add
pop
enter
popf
rcl
arpl
imul
rclb
call
inc
cmp
lods
adc
xor
pusha
adc
dec
adc
in
sbb
inc
adc
xchg
imul
inc
bound
or
or
mov
cmp
add
icebp
call
cmpsl
fiadds
incb
ljmp
mov
jne
xor
mov
setge
les
sub
pop
ror
movsb
mov
mov
psllw
pop
add
push
leave
sbb
dec
int3
fwait
inc
adc
dec
and
fs
xchg
dec
fs
jbe
sbb
mov
xor
int3
imul
loopne
mov
out
lods
pop
or
or
push
adc
clc
lods
out
mov
mov
testb
outsb
ret
fstpl
nop
inc
push
into
testl
call
scas
shll
xchg
mov
js
call
mov
or
sbb
adc
xchg
dec
js
les
out
outsb
mov
ret
push
pop
xor
filds
xchg
push
outsb
mov
lock
psubw
jl
jns
mov
push
cmp
jl
jbe
fsubs
push
fs
inc
sub
pop
jge
or
mov
ja
fistpll
mov
icebp
xchg
dec
and
inc
jb
jb
inc
cli
call
adc
mov
out
mov
rcr
dec
fisttpll
out
inc
dec
mov
inc
cmp
mov
mov
test
scas
daa
ret
lcall
jb
inc
adc
andb
or
and
lcall
nop
imul
mov
pop
shlb
movsl
xor
clc
iret
push
out
mov
ret
in
not
cmc
mov
pop
int3
out
dec
ja
or
mov
cwtl
lods
pop
or
daa
aaa
ljmp
div
xchg
push
fimuls
fdivrs
push
pushf
dec
mov
cli
loop
jmp
pop
mov
icebp
sub
sarl
sub
push
sub
test
ficoms
push
int3
mov
mov
out
out
cmc
pop
cmp
mov
pop
pop
orl
sbb
out
ljmp
push
add
mov
scas
lret
int
mov
aam
mov
pop
ja
into
stos
push
in
inc
xor
push
jecxz
dec
add
push
movsl
inc
cmp
in
xchg
test
mov
popa
notb
data16
bound
add
nop
jle
xchg
mov
add
push
cltd
loop
fldcw
mov
adc
gs
or
inc
or
ja
in
test
pop
lea
inc
repz
jno
jne
enter
mov
loopne
nop
fs
scas
outsb
mov
cs
add
addr16
aas
aaa
rolb
add
fst
pop
xor
das
mov
mov
mov
bound
fsubl
icebp
repnz
jnp
mov
std
sbb
scas
and
cli
xchg
jb
add
aas
lcall
std
ds
and
dec
dec
ss
sbb
pop
xchg
je
jp
test
and
daa
mov
mov
nop
cltd
mov
cmp
lea
movsl
inc
sbb
ret
sahf
push
jbe
mov
ret
jp
ds
outsl
insl
xchg
jmp
aaa
or
push
hlt
jg
jbe
adc
insl
adc
aam
and
xchg
sbb
dec
or
mov
scas
mov
hlt
int3
jo
mov
cmp
mov
insb
and
stc
test
cmp
std
inc
pop
or
pop
jl
jmp
push
aam
roll
lcall
adc
xor
pop
inc
xor
mov
std
adc
vmread
and
loop,pn
int3
sub
jl
and
fcoms
scas
scas
pushf
adc
es
ja
dec
pop
divl
push
leave
sub
fisubrl
dec
out
xchg
fisubrl
and
aaa
pop
adc
lds
xor
cld
mov
mov
or
mov
gs
and
std
icebp
cmp
les
imul
push
xchg
dec
cld
mov
movsl
mov
popf
aaa
dec
push
push
jl
popa
inc
std
idivb
mov
out
mov
nop
mov
mov
repz
inc
xor
in
lret
sub
pop
scas
cmpl
aam
outsb
pop
pop
pop
or
or
sahf
test
outsl
xorps
bound
sbb
imul
test
mov
cmpsl
out
nop
mov
jbe
imul
sbb
xor
jbe
cmp
movl
call
test
sbb
add
cmp
sti
icebp
sbb
xchg
les
jns
mov
hlt
lret
fildll
repnz
out
xchg
push
das
scas
push
hlt
adc
mov
out
cmpsb
dec
out
daa
pop
or
pushf
imul
mov
adc
dec
mov
jb
in
cmpsb
inc
aam
sub
in
sbb
sbbl
out
aaa
loopne
cmp
lret
loop
stos
or
jecxz
in
or
imul
or
mov
aam
enter
add
sbb
push
push
mov
and
mov
xchg
repz
call
adc
loope
outsb
ljmp
mov
xchg
lods
cwtl
out
mov
xlat
icebp
movsb
clc
stc
fistpll
sub
jo
push
sbb
testl
dec
jo
lods
xor
xchg
into
mov
pusha
and
add
fwait
sub
addl
xor
inc
test
sbb
in
imul
pop
sti
pop
std
mov
mov
rorl
hlt
test
and
sbb
push
fistpl
ret
lahf
testl
cltd
ret
icebp
lods
jne
gs
inc
jge
sbb
jecxz
repz
dec
cmp
icebp
in
xchg
lret
ljmp
in
mov
fcompl
je
dec
lret
scas
nop
sub
notl
adc
ficoms
mov
push
ja
add
sub
aam
cs
add
hlt
xchg
cmpsl
and
pop
mov
les
int
mov
popf
orl
jae
stos
pop
sub
xor
ja
jne
pushf
addr16
jno
ljmp
sarl
dec
dec
imul
insb
pop
imul
rcll
push
loope
mov
repz
sub
into
scas
sahf
outsb
inc
js
nop
and
jmp
jl
push
mov
cwtl
xchg
or
dec
inc
inc
fistps
mov
inc
fisttpl
dec
fldcw
pop
mov
mov
lret
sbb
xchg
add
aas
cmp
sub
dec
fadd
decb
or
pop
push
lcall
das
enter
push
cwtl
sub
mov
scas
jns
out
jmp
popf
xor
mov
push
lcall
xlat
push
dec
push
mov
mov
and
push
subb
cld
cmp
sub
dec
sbb
in
in
mov
push
ds
adc
sbb
xchg
fxch
add
fsubrl
jp
mov
inc
mov
push
loope
or
or
fisttpl
lods
mov
push
ja
inc
flds
and
out
mov
inc
call
rclb
pop
lods
xor
enter
les
mov
pop
hlt
loopne
out
add
lahf
cwtl
into
and
imulb
mov
jp
fwait
xor
in
insl
xor
sbbl
scas
cmpsb
lods
cmp
mov
mov
adcb
cli
dec
push
sbb
movsb
jne
add
cmpsb
cli
clc
int
mov
sti
je
lea
mov
enter
je
stos
lods
pop
out
xor
mov
int3
and
shlb
add
xchg
js
mov
jle
dec
jmp
pop
repnz
sbb
and
push
out
mov
lds
pop
mov
mov
pop
push
xchg
jp
jmp
push
and
lds
add
ss
xchg
out
pop
jmp
pop
xchg
dec
cwtl
sbb
add
add
jmp
pop
lcall
push
and
adc
outsl
push
scas
push
jbe
push
push
add
scas
and
xchg
xchg
enter
sbb
bound
xorb
inc
iret
xor
mov
fildl
fs
loop
jecxz
dec
ret
aam
jle
int
mov
and
fimull
cld
dec
adc
ret
mov
mov
stc
es
movsl
mov
cwtl
xchg
stos
cwtl
adc
adc
inc
aaa
jmp
cmpsl
pop
leave
cmp
lods
pop
xchg
xchg
add
test
enter
pop
loopne
push
xor
fwait
pop
cmp
adc
es
dec
pop
push
add
jb
iret
into
xchg
sub
cwtl
mov
in
mov
in
arpl
dec
call
popf
pop
cmp
fwait
dec
addl
dec
push
and
cmpsl
out
lret
pusha
js
push
mov
add
push
aas
xorb
in
in
ret
sbb
sahf
rolb
cwtl
adc
subl
xor
xor
mov
pop
popa
dec
cmpl
pop
push
in
popf
pop
push
mov
mov
clc
aad
es
imul
inc
sahf
inc
dec
movsl
jle
mov
sub
xlat
add
adc
mov
daa
xor
fidivrs
lock
scas
bound
dec
or
out
mov
insl
or
inc
scas
pop
jne
jns
pop
popf
xchg
mov
jns
sub
adc
ret
mov
push
mov
mov
es
shlb
sub
out
test
sti
negb
or
xor
or
inc
jbe
cli
shlb
add
rorl
or
mov
shrb
xchg
cmp
clc
sub
and
and
test
aas
imul
adc
in
cmp
dec
pop
adc
daa
out
push
or
orb
dec
pop
mov
imul
frstor
mov
push
adc
repz
into
push
jmp
add
jbe
jl
testl
push
fcmovu
cld
push
and
xor
je
bound
xor
cwtl
push
push
sub
bound
ljmp
fwait
movsb
add
std
lcall
xchg
out
lcall
sub
subb
jo
lcall
insl
test
jg
arpl
sub
lahf
xor
pop
dec
and
push
add
mov
jns
or
icebp
jo
in
imul
cltd
notb
loop
mov
shll
and
and
or
lods
xchg
dec
pushf
insl
add
cmp
sub
divb
push
or
or
test
push
cli
sbb
in
jl
data16
adc
push
testb
sub
lea
sub
sbb
jae
dec
dec
and
test
or
lock
sbb
sbb
xor
pop
sub
sub
pop
outsb
repnz
es
std
ret
xor
pop
pop
dec
adc
push
mov
leave
mov
adc
jo
hlt
pushw
call
mov
jnp
neg
jb
add
loopne
outsb
ret
jae
add
iret
pop
and
lods
mov
int3
pop
ret
lods
fistl
jae
push
comiss
movsl
adc
mov
sbb
mov
pop
push
repz
pop
adcb
ja
in
repnz
jo
test
int3
mov
ljmp
rorl
jne
or
bound
and
subl
shll
adc
adc
mov
insb
outsb
enter
dec
adc
out
pop
mulb
and
jle
mov
hlt
loopne
mov
icebp
pop
sbbl
inc
dec
mov
xor
ss
popa
or
cwtl
imul
cmp
jnp
rcll
and
idivb
jmp
loope
dec
int3
nop
jae
sub
imul
enter
outsl
lea
sbb
shl
xor
or
ret
cmp
jmp
sbb
leave
in
jno
test
cmp
push
mov
or
mov
and
jle
fsubrs
nop
cmp
lea
mov
inc
in
insb
fstl
jmp
lea
adc
ret
push
repz
xlat
lret
or
out
push
add
mov
lods
fsubs
cmp
repnz
sarb
aad
addr16
aam
dec
jge
call
and
inc
jl
lods
cwtl
jp
test
and
inc
iret
or
addr16
das
and
outsb
add
mov
lea
push
mov
paddusb
push
dec
and
mov
shll
ss
jg
test
addr16
adc
inc
sub
fbld
jecxz
mov
cmpsb
std
xchg
js
test
mov
sub
dec
clc
test
ret
loop
enter
inc
cltd
cs
cmpsb
pushf
bound
shlb
iret
mov
inc
sub
stos
into
adc
xchg
jne
inc
sbb
ja
pop
std
add
pop
out
out
dec
lret
bound
fyl2xp1
push
out
inc
or
pop
and
sahf
dec
or
push
inc
in
sub
inc
and
add
mov
daa
add
cmp
sub
sti
icebp
or
jb
mull
insb
movsl
adc
stc
push
push
clc
add
daa
cmp
push
and
lcall
mov
fisttpl
ja
adc
dec
inc
in
add
lcall
andl
sarl
cmp
xchg
push
cmpb
cmpsl
sub
out
loope
mov
lahf
sbb
jp
xchg
stos
clc
push
aaa
call
xchg
fs
xlat
daa
aas
andb
jg
inc
pop
inc
push
push
dec
enter
pop
ljmp
es
mov
mov
jbe
mov
or
xchg
lods
and
pop
stos
rorl
adc
adc
push
cmc
fstps
rcr
rolb
std
outsb
jmp
inc
popa
movsb
out
in
push
push
push
pop
mov
dec
rolb
push
jbe
in
push
bound
filds
mov
lret
lods
pushf
loope
movsl
int
in
test
lcall
test
inc
mov
mov
in
fists
ss
arpl
fbstp
ret
out
mov
or
mov
mov
les
daa
adc
jl
aaa
daa
push
push
push
inc
add
push
clc
and
mov
or
xchg
mov
xchg
jb
or
xchg
pop
adc
out
inc
data16
sub
call
inc
aam
push
loopne
mov
jnp
adc
outsl
push
dec
setno
jns
xchg
pop
les
mov
jle
push
mov
xchg
lds
divb
jo
rcrl
pop
push
aas
jecxz
xor
mov
lock
pop
push
test
je
adc
push
adc
xchg
sub
and
in
test
and
xchg
push
pop
pop
mov
shrl
cmp
adc
enter
data16
xorb
mov
and
pop
push
dec
inc
add
pushf
mov
cmc
mov
cmp
lock
into
adc
mov
xchg
push
sub
jmp
fdivrs
jae
subb
xor
dec
int3
cmp
pop
mov
push
idivl
pop
stos
sbb
loop
dec
pop
and
fisubrl
ret
xchg
or
scas
loope
cmp
or
test
fsts
fwait
inc
mov
popf
cld
jb
pusha
adc
and
push
stos
es
sahf
popf
pop
and
fimull
es
les
rolb
xlat
sbb
jg
cmp
lret
shll
loopne
sarl
in
stc
cmc
sarl
aam
xchg
inc
jns
add
loop
mov
fcoms
and
fildl
jle
cmp
dec
cmpsb
jp
fcmovnbe
in
out
push
insl
ss
in
out
jp
inc
xlat
adc
inc
mov
lret
mov
fbstp
sub
pushf
fsubrl
je
cmpsb
xor
xlat
jp
data16
inc
cmp
pop
fistpl
push
fiaddl
jl
je
xchg
aad
inc
sbb
data16
cli
or
mov
nop
or
dec
sbb
sub
sub
ficoml
es
push
xchg
in
add
outsb
test
pop
cld
stos
test
mov
mov
loopne
ds
or
enter
sub
jge
cmp
pusha
dec
push
inc
cmpb
test
scas
mov
sbbb
pushf
mov
pop
jbe
pop
popa
mov
dec
out
push
pop
push
adc
push
fisubs
addb
adc
sbbl
xchg
jmp
out
popa
sbb
ja
sti
inc
push
inc
std
sbb
fsubrs
sahf
aam
psubusw
xor
jae
insb
sub
movsb
inc
add
es
mov
jg
repz
roll
popf
inc
mov
test
dec
mov
les
cmc
jne
jnp
mov
adcb
inc
jl
mov
in
cmpsl
adc
pop
fwait
fs
jae
les
das
sbb
lret
adc
lret
jae
pop
repz
dec
inc
sbb
outsl
enter
mov
or
dec
sbb
leave
mov
cmp
mov
fistpl
jge
std
jge
push
xchg
arpl
adc
je
mov
pusha
dec
aad
es
in
add
lret
sbb
ret
lock
shrb
ficomps
roll
mov
lods
rorb
add
mov
js
lock
out
mov
nop
fsubrp
jae
subl
loop
or
sbb
push
inc
outsl
xchg
repnz
sub
xchg
idiv
xchg
loop
lahf
xlat
pop
lea
pop
inc
push
out
pusha
dec
ja
jmp
inc
jmp
lods
icebp
rorb
xchg
testb
jl
sbb
sbb
inc
pop
pop
sti
push
adc
adc
lds
mov
dec
cmp
jbe
cmp
or
sub
std
popa
or
cltd
pusha
enter
and
or
inc
ret
cmp
sarl
in
fnstenv
loop
in
adc
lahf
arpl
test
int3
stos
fs
mov
xchg
divl
sub
mov
in
lods
repnz
scas
push
pushf
add
adc
lock
negl
out
mov
ror
cmpsl
rorl
loopne
jl
xor
sti
lret
in
mov
mov
push
arpl
sub
scas
xchg
shr
aas
or
cmpsl
movsl
pop
sub
xor
xchg
mov
test
jg
pusha
xor
pop
aam
std
xlat
mov
ljmp
test
int
cmp
insl
rcrb
mov
cmpsb
mov
inc
repz
push
dec
add
in
adc
jmp
dec
clc
pavgw
loopne
xchg
shlb
lahf
icebp
xchg
or
or
cmp
xchg
fistps
mov
sbb
adc
scas
and
sbb
fcoms
push
mov
add
xor
fxch
leave
add
out
mov
push
pushf
and
sub
xchg
sbb
adc
std
popa
jno
call
ja
idivl
push
xchg
and
fcompl
repz
hlt
sbb
mov
out
outsb
and
iret
insb
sbb
daa
dec
ret
addr16
cmp
mov
add
mov
repnz
jb
fcmovnu
jl
pop
or
out
sub
daa
cmp
xor
push
hlt
loop
int3
nop
jmp
sub
push
mov
lods
xchg
mov
stos
push
clc
sbb
mov
pop
push
mov
in
lods
jo
push
mov
call
mov
sub
dec
mov
mov
lods
jmp
icebp
das
jp
and
ret
inc
jo
ret
pop
pop
xor
outsb
cmc
fidivl
sbb
pop
inc
mov
cmp
cmpsl
inc
dec
orl
or
xor
jne
shr
enter
fwait
lock
adc
not
sub
cmc
mov
mov
cmp
cmpsl
shll
xor
rorl
lea
cmp
out
push
dec
push
arpl
pop
mov
mov
mov
bound
pop
ljmp
jb
enter
inc
repnz
add
pop
xor
mov
lret
mov
insb
inc
mov
or
push
pop
hlt
mov
in
jp
sbb
test
out
push
mov
int
pop
and
mov
xor
mov
sub
scas
vmaskmovdqu
icebp
testl
mov
lcall
in
nop
mov
movsb
rorl
es
mov
pop
sub
jle
lods
lahf
je
pop
push
test
testb
std
popf
cmp
pop
mov
pop
adc
negb
jne
cwtl
hlt
sub
call
fucomip
movsb
call
push
cmp
int3
xlat
add
mov
jecxz
imul
sub
fsubrs
cmp
mov
pop
fwait
mov
pop
xchg
jmp
jle
sbb
xchg
divl
ret
lods
jae
xlat
or
insl
xchg
enter
data16
mov
stos
imul
jo
pop
movsb
xchg
inc
mov
aad
push
rorl
inc
mov
rclb
sarb
mov
inc
xlat
or
sub
aad
sbb
pop
test
sub
dec
cmp
stc
and
mov
ficompl
scas
loopw
xchg
into
jb
xchg
inc
xchg
ret
xchg
sub
stos
pop
cli
addr16
cltd
jmp
nop
in
pop
movl
inc
mov
inc
hlt
jne
xchg
addl
inc
xor
xlat
add
sbbl
jle
cmpsl
sub
or
jge
sub
cmc
pop
inc
test
push
pop
jne
mov
or
cmc
mov
addr16
jmp
icebp
movsb
jns
pop
sub
call
fists
adc
sub
nop
and
enter
dec
pop
hlt
mov
shrl
rcll
adc
popf
sbb
fisubrl
sbb
sub
jle
test
fldt
insb
or
fldt
data16
push
rorl
sbb
sti
jnp
and
lahf
pop
and
dec
ret
loop
outsb
aam
mov
push
jge
rcll
sbb
into
jmp
movsl
das
cmpsb
outsb
push
popf
xchg
aam
rcrb
mov
sub
out
xchg
pop
in
mov
mov
movsb
push
out
xor
notl
fidivrl
dec
mov
call
aas
lods
cmpsl
repz
flds
gs
test
popa
popa
mov
push
aas
xorb
or
sbb
xchg
and
sbb
dec
and
mov
call
push
xor
or
ja
ja
inc
mov
lods
les
inc
mov
arpl
outsl
test
push
scas
lds
repz
mov
das
cmp
jne
out
cmp
mov
mov
dec
clc
jp
xchg
jb
movsb
pop
and
push
cmp
mov
aas
add
pop
inc
test
int3
stc
ret
pusha
pop
pop
fs
hlt
pusha
stos
sub
jge
lods
jle
push
outsb
mov
cmp
movsb
cmp
sbb
push
or
je
fldt
movsl
mov
in
mov
nop
cli
arpl
fistps
and
mov
mov
inc
add
xchg
fildl
jae
les
lret
stc
rcl
ret
xorl
dec
les
push
pop
cmp
imul
xor
or
nop
loopne
repz
lret
mov
out
ja
or
pop
mov
cmp
adc
sub
popf
pop
repz
mov
repz
push
fistpl
and
push
mov
jo
aaa
mov
xor
or
lods
jbe
adc
call
mov
aaa
mov
out
out
jecxz
xor
mov
mov
test
fisubs
jbe
and
pop
notb
mov
das
pop
mov
lret
pusha
loope
push
or
mov
in
add
jne
push
jle
xchg
and
or
subl
ja
and
or
jbe
arpl
inc
clc
and
mov
push
shlb
rcll
lcall
outsl
add
jnp
inc
loope
and
mov
dec
push
or
sbb
and
mov
jl
mov
mov
jb
mov
cmp
inc
hlt
or
pusha
in
sahf
and
fwait
xchg
xor
dec
loope
sahf
and
test
notl
xchg
inc
pusha
lcall
and
outsl
mov
mov
xor
fs
inc
xchg
push
cmp
sbb
xchg
in
add
adc
xchg
js
pushfw
dec
cmp
aas
lods
xor
js
enter
mov
add
lret
leave
xor
sbb
int3
mov
ss
push
mov
xchg
ljmp
mov
xchg
sub
gs
jae
xchg
mov
divb
stc
sub
pop
rorb
mov
and
mov
dec
test
lret
jg
xchg
call
insl
ret
sti
jae
mull
xchg
mov
loope
pop
int
aaa
xchg
hlt
stos
jb
mov
or
adc
in
mov
adc
push
and
pop
adc
xchg
aas
adc
in
mov
sahf
mov
pop
add
add
jnp
mov
cmp
push
call
fwait
mov
xlat
mulb
cltd
xchg
push
decb
add
cmpb
sbb
daa
jb,pt
sub
inc
mov
jbe
scas
jp
pop
insb
push
int3
lods
jb
xor
popf
mov
loopne
divb
or
or
cmp
js
inc
in
or
inc
bound
mov
push
dec
dec
das
mov
xor
dec
or
jecxz
jbe
test
rclb
mov
mov
inc
sahf
fstpt
push
addr16
int
cwtl
cltd
int
pushf
pop
sub
fmull
adc
xorb
cmp
jno
mov
in
mov
push
aam
mov
repnz
out
xlat
xchg
pop
mov
out
adc
jnp
adc
add
addb
enter
mov
jbe
arpl
mov
adc
add
lret
cwtl
pop
in
or
xor
lds
mov
push
ror
and
push
outsl
ljmp
mov
fdivrl
leave
sti
cmp
sti
loope
jne
mov
mov
push
imul
pop
popa
pop
jbe
xor
ljmp
sub
dec
inc
dec
rolb
out
out
lock
dec
dec
sub
jno
fwait
mov
sbbl
jae
push
adc
adc
popa
inc
jge
jns
jb
cmp
notb
jmp
movsb
adc
movsl
adc
popa
out
test
xchg
sbb
leave
push
mov
xor
sub
jbe
into
xlat
xchg
push
xchg
and
cs
imul
inc
jne
insl
jae
sbb
xchg
outsb
and
ficoml
xchg
icebp
rclb
loope
cs
in
les
aad
jl
xchg
inc
mov
scas
adc
lahf
mov
out
or
cmpsb
sub
push
in
cmc
outsl
xor
pop
aad
xor
stos
and
lret
and
flds
jno
dec
rcr
repnz
das
outsb
jge
inc
std
push
jo
into
imul
mov
cmp
adc
es
jge
sbb
test
test
lods
imul
xchg
jno
jno
jmp
mov
jns
mov
sbb
enter
mov
adc
mov
lret
ds
bound
sarb
gs
shll
jnp
inc
push
sti
repz
es
push
loopne
idivl
rcr
mov
lock
sarl
ja
into
in
in
xor
test
hlt
ja
mov
mov
cmp
repz
out
and
in
out
mov
daa
push
jmp
xchg
mov
fnstsw
out
jmp
push
mov
dec
push
adc
dec
inc
icebp
or
and
mov
mov
push
push
adc
jl
stc
into
out
push
lcall
xor
hlt
pop
jle
sub
lods
or
cmpsb
cmp
aas
cli
sub
pop
lds
sar
ss
fidivrl
xchg
repnz
dec
mov
jge
aas
sub
jl
cmp
insb
call
daa
aad
inc
out
das
data16
ja
es
jns
scas
or
cmc
jge
loop
xchg
pop
jge
enter
cltd
push
lods
aam
push
jle
mov
jl
lds
inc
or
mov
fadds
fsubl
cmpsb
cmc
inc
rcll
fst
cmpsb
rorl
push
or
xor
sahf
jnp
cmpl
mov
cmp
mov
xchg
add
or
pop
adc
sub
add
and
cmp
in
fnop
testl
add
ja
push
imul
in
push
add
add
sub
push
lret
adc
bnd
lods
jmp
push
jecxz
mov
int
mov
sub
xchg
fcmovnbe
addr16
movsl
mov
push
movsl
movsl
subb
jbe
push
fs
inc
cmp
into
fdivs
mov
and
jmp
push
loope
adc
cld
jecxz
jae
cmp
fwait
mov
jg
jno
push
mov
int
mov
insb
sub
mov
xchg
xor
cmp
lret
test
ds
mov
mov
mov
mov
test
jl
out
lods
rcrl
orl
push
push
mov
inc
push
cmpsb
subl
xorl
pushf
push
and
rclb
sti
pop
jp
mov
in
repz
mov
pop
call
jecxz
adc
rorl
sbb
mov
mov
mov
stos
repz
dec
rorb
in
adc
add
scas
stos
andb
les
sbb
sub
cmp
ds
fldz
push
lods
sub
ficoml
cltd
mov
test
mov
lea
inc
mov
push
adc
ret
sub
sub
movsl
out
stc
dec
mov
push
pop
sub
outsb
inc
aaa
pop
cwtl
notb
adcb
pop
nop
mov
and
push
sbb
sub
int3
xchg
es
call
pop
ja
adc
mov
sbb
xorb
enter
dec
rcr
aas
adc
stc
cmp
mov
pop
jno
jns
inc
test
ror
adc
jae
cmp
or
iret
jo
lcall
cmp
or
pop
outsb
jmp
pop
xor
pop
iret
adc
rcrl
pop
sub
xor
inc
aas
pop
sahf
out
lret
sarb
ljmp
outsb
jge
push
xlat
jns
mov
insl
sbb
fisttps
shlb
mov
mov
lods
ljmp
jne
pop
cwtl
mov
aad
inc
adc
out
fisubs
out
fwait
data16
stc
pop
leave
xchg
pop
idivb
lock
sbb
fistpl
repz
js
ret
inc
add
jnp
mov
mov
inc
fs
sbb
int3
pop
cld
insb
mov
mov
sbb
jns
repz
mov
jle
loopne
dec
push
mov
adc
mov
push
xchg
push
cs
pop
mov
into
mov
frstor
inc
jmp
mov
or
xchg
mov
cwtl
pop
cmp
insl
xor
addr16
sbb
call
in
pop
sar
icebp
adc
dec
or
and
and
movsb
cmpsb
and
push
dec
push
pop
or
loop
shr
call
ja
mov
inc
rorb
sub
xchg
std
xor
cmpsb
jae
loop
or
or
or
inc
pop
bound
sub
mov
imul
mov
insl
insl
fldenv
cmp
test
dec
popf
pop
cmp
or
pusha
jb
rorb
jne
mov
rorb
test
scas
loop
push
jl
stos
xchg
mov
pop
shl
xor
pop
pop
sarb
push
push
lods
mov
jl
loope
adc
and
lahf
sub
xor
hlt
xorl
xchg
iret
sbb
movsb
lods
mov
jns
rclb
add
movb
fmull
loopne
sbb
mov
add
adc
sub
pop
add
dec
imull
push
sbb
daa
shll
daa
daa
aad
movsl
mov
mov
mov
fsubrs
sub
cmp
es
adc
jne
cltd
xchg
xor
inc
dec
or
loop
jmp
push
test
sarb
outsl
adc
fimuls
fstps
fistpll
jmp
lahf
jl
mov
repnz
cld
mov
ss
inc
jo
push
jl
xor
popa
jle
sub
test
test
adc
insl
add
jecxz
popa
xchg
rclb
lahf
test
mov
xor
fwait
push
mov
push
inc
lock
clc
add
icebp
in
jge
sti
add
and
cmp
jecxz
dec
lret
jo
push
dec
push
or
push
lock
mov
repz
push
push
in
dec
pop
jle
sub
cli
cmp
scas
push
fistps
or
sub
bound
imul
daa
adc
xor
jnp
movl
jge
fadds
pop
loop
lea
data16
movntq
out
rolb
pop
and
push
push
jne
lds
sar
test
pushf
mov
or
and
negl
mov
dec
push
inc
nop
dec
push
jbe
lock
add
cmp
call
xor
dec
xchg
mov
loope
adc
push
lods
das
sub
int3
add
mov
pop
adc
adc
fcoml
mov
addr16
jge
test
jge
add
mov
mov
nop
fildll
popf
add
lcall
cmc
inc
push
divl
cmc
jae
lock
sbb
mov
inc
lock
jae
mov
and
js
push
pushf
icebp
xchg
aas
lods
dec
add
ljmp
dec
cmp
and
jb
jno,pn
test
ret
not
popa
in
lods
dec
arpl
jbe
rcrl
lret
xchg
cmp
sub
push
jmp
into
or
fdivs
mov
xchg
push
sbb
jo
mov
shl
mov
ret
inc
mov
bound
and
pop
imul
push
fistl
adc
mov
lcall
paddq
pop
push
jne
add
das
ss
push
ss
adc
push
lds
push
outsl
jmp
xchg
push
sub
imul
xchg
jne
ja
or
jbe
push
cmp
sti
fadds
mov
sbb
push
shrb
mov
xor
popf
lods
adc
sub
loope
leave
push
add
sub
push
clc
bound
xor
xor
fcomps
dec
sbb
stos
inc
inc
cmp
xor
add
mov
loopne
pop
fwait
outsb
arpl
push
jns
std
movsb
mov
sub
in
xchg
mov
stos
lds
xchg
out
cli
pop
sbb
or
cli
orb
xor
call
dec
or
cmpl
outsb
dec
dec
xchg
movsb
push
mov
pushf
or
adc
mov
into
repnz
bound
loope
stos
push
movb
xor
addr16
in
cmp
mov
and
pop
rol
xchg
xor
mov
mov
cltd
dec
pop
in
std
dec
and
sub
testl
repz
xlat
sbb
xor
js
imul
movsb
push
push
inc
jle
imul
push
adc
int3
mov
pop
pop
cmp
nop
jecxz
xor
push
xor
pop
push
pop
mov
cmp
adc
imul
or
jns
add
pop
call
test
mov
fs
dec
sub
insb
shll
repnz
popf
add
cmp
adc
sbb
sbb
lret
mov
pop
xchg
test
cmp
ja
daa
inc
jge
jle,pt
lea
mov
jo
pop
test
adc
cwtl
push
rorb
sbb
clc
scas
or
hlt
frstor
fwait
xchg
inc
mov
mov
push
or
add
fldl
dec
jnp
sub
arpl
cli
inc
clc
int
femms
jp
xchg
imul
lea
mov
and
dec
or
outsl
shll
lock
and
sbb
lods
add
and
mov
dec
enter
inc
jmp
insl
push
mov
orb
add
mov
dec
mov
sub
sbb
iret
lret
in
notb
jl
idivb
fwait
cmovs
xchg
shl
push
mov
lcall
push
test
sbb
outsl
outsb
push
rorl
pop
or
jl
xor
ss
cli
or
add
mov
mov
lea
in
adc
dec
cmpsb
aas
jmp
movsb
roll
mov
loopne
jbe
rcrl
push
mov
daa
lock
loope
leave
sbb
and
xchg
sub
rolb
cmp
cmp
aam
nop
jecxz
sbb
lcall
ss
orl
adc
xchg
sahf
repnz
pop
add
push
cmp
or
shrb
clc
aad
pushf
test
pop
sub
xchg
mov
mov
xor
or
push
pop
ja
or
mov
inc
dec
or
pop
push
movsl
lret
fcomp
xor
in
jp
aas
loop
cmp
xor
xor
mov
mov
cwtl
lret
ret
insb
dec
mov
mov
test
icebp
int
mov
pop
xor
mov
scas
or
inc
mov
mov
push
in
mov
or
enter
and
push
std
mov
sbb
pop
outsl
dec
lock
xchg
lret
cmp
data16
jmp
inc
outsl
inc
and
pop
sti
sbb
das
ljmp
in
mov
mov
xchg
fisubl
adc
cli
add
sbb
test
mov
xlat
andb
push
adcb
mov
aam
cmp
sbb
pop
mov
rcrb
sbb
push
add
lods
xor
inc
repz
int3
sbb
movsb
sti
int3
adc
mov
add
jp
fcos
test
dec
test
adc
unpcklps
dec
data16
fistps
xor
mov
adc
std
repz
dec
cmpsb
pop
push
in
xor
test
movsl
adc
mov
mov
dec
sbb
jg
adc
sub
xchg
lahf
push
enter
out
scas
roll
jbe
dec
hlt
testb
xor
and
xchg
pop
fimuls
cmp
out
dec
jmp
or
js
cs
jbe
mov
repnz
dec
idivb
mov
push
push
scas
sbb
arpl
insl
mov
imul
xchg
loopne
out
movsl
jo
and
int3
inc
int3
in
dec
fcomps
mov
and
pop
jmp
cli
ficompl
jne
mov
pop
or
sub
xor
cli
xchg
stos
mov
in
fistpll
xchg
bound
inc
mov
push
andb
push
dec
cld
adc
stos
ficoml
xor
add
jbe
data16
cld
pop
xchg
test
inc
clc
int
mov
dec
and
repnz
daa
xor
aad
mov
pop
or
push
scas
stc
je
or
je
mov
in
in
in
fiaddl
xlat
imul
mov
mov
push
sbb
or
icebp
xchg
es
lcall
xlat
or
sub
cmp
mov
test
mov
rclb
aas
xor
xor
addb
scas
push
movsl
aas
or
loopne
fstps
add
pusha
mov
mov
test
fst
push
mov
xchg
pop
mov
dec
pop
pop
mov
xor
jmp
jnp
dec
test
sarl
cld
sbb
addl
mov
enter
es
jp
push
mov
out
pop
pop
mull
pop
push
mov
xchg
dec
pushf
sbb
jb
jns
test
mov
jno
inc
movsb
lods
mov
mov
std
lods
dec
imul
mov
cmp
aad
out
xor
fwait
xchg
imul
mov
shl
jmp
add
cld
or
adc
add
ljmp
push
shl
test
push
xchg
sarl
mov
frstpm(287
xor
mov
movsb
or
mov
pop
data16
jmp
mov
pop
push
scas
sub
adc
fstl
dec
shlb
or
popa
xchg
mov
mov
nop
xchg
int3
pop
sti
push
lret
mov
and
shll
sub
pop
push
out
jle
xor
xor
or
aad
outsb
mov
addl
sbb
fs
into
xlat
sbb
jg
aam
xchg
addr16
jnp
xchg
pop
mov
ds
inc
inc
fnstcw
negl
ja
repnz
jle
shr
shrb
cmpsb
imul
xlat
nop
lret
pop
add
lcall
jle
jecxz
addr16
rol
cltd
clc
shl
insb
sbb
mull
push
test
mov
add
adc
xchg
shl
cmpsl
in
andb
cwtl
cmp
loop
in
add
mov
stos
inc
inc
call
nop
cmp
fwait
add
scas
mov
in
stos
jmp
dec
pop
add
sbb
movsb
fbstp
clc
in
sub
lods
cmpsb
mulb
leave
fwait
mov
push
nop
inc
mov
divl
adc
mov
mov
lcall
lock
out
mov
add
push
push
pop
mull
pop
pop
adc
jb
js
pop
dec
xor
cmpsl
ret
xchg
jnp
aad
xchg
cmp
push
pop
int3
icebp
mov
movsb
loope
ss
mov
sahf
jp
push
pop
push
andb
inc
cmp
fcomp
jle
add
shrl
xor
adc
in
xchg
repnz
orb
hlt
scas
shrb
rorb
xor
daa
push
xchg
adc
mov
jo
lods
aad
cmp
testl
inc
fdivrs
add
ja
adc
ret
or
xchg
inc
sub
fnsetpm(287
das
pop
jns
mov
push
icebp
or
inc
mov
frstor
cmpsl
out
ret
cmp
mov
push
fld
adc
mov
pop
scas
int
insb
dec
jb
adc
movsb
ds
lret
ret
cmp
jp
movsl
mov
mov
ret
sbb
xor
mov
addb
sbb
sahf
add
lock
js
out
sub
pop
sbb
mov
arpl
shll
inc
xor
out
mov
mov
loop
fldt
jbe
mov
add
pop
call
lea
sbb
lret
fs
fcomps
cmp
movsl
out
fstps
je
addb
iret
push
aaa
xorl
inc
jnp
aam
je
addb
cli
loope
mov
pop
sub
mov
mov
xor
inc
mov
inc
out
push
cmpsb
setg
adc
repz
test
lock
jb
jno
cli
cmp
and
movsl
lret
mov
notl
add
push
jge
fnstsw
sarl
stc
or
dec
mov
mov
imul
mull
sbb
mov
adc
push
pop
push
sbb
push
mov
mov
out
in
stos
lods
xorl
sub
jp
data16
dec
xlat
adc
call
pop
loope
mov
repnz
fwait
loope
std
dec
mov
fdivp
int3
ret
xor
cmpb
sub
insb
ret
pop
push
call
hlt
jns
push
cmp
cmpl
push
jns
mov
mov
aam
subb
dec
aad
js
sti
inc
pop
inc
mov
mov
mov
icebp
stos
adc
and
pop
push
imul
inc
jb
pop
notl
mov
leave
add
bswap
ret
xchg
inc
sbb
xor
jno
loopne
xor
jbe
inc
mov
pop
aas
hlt
sbb
mov
fldt
xchg
lcall
mov
movsl
mov
aaa
or
jg
leave
insb
arpl
jbe
lock
push
push
or
iret
outsl
cmp
mov
inc
jnp
and
lds
dec
sbb
ljmp
or
push
xchg
jbe
fwait
sbb
outsl
fists
arpl
mov
ss
mov
add
adcl
adc
ret
mov
mov
shr
jbe
cld
cmp
push
hlt
out
push
or
fwait
mov
dec
cwtl
mov
xchg
or
adc
mov
scas
pop
pop
jo
jg
outsl
ret
push
push
rclb
lods
mov
dec
mov
cld
or
inc
xor
inc
and
jmp
pop
push
mov
mov
cmp
les
push
pop
sahf
test
push
dec
adc
and
mov
and
test
pop
loope
or
adc
vcvttss2si
push
cmpsb
dec
and
dec
rcl
shlb
mov
ret
subb
lods
int
mov
sbb
push
scas
push
push
js
cmc
nop
insb
cmp
ficoml
daa
jbe
jb
xchg
loope
test
lret
add
fcmovnb
push
andb
mov
dec
sahf
imul
push
xor
pop
je
cs
adc
loop
jmp
mov
out
add
sarl
popa
ljmp
cmp
rcl
pop
movzwl
clc
dec
dec
and
ds
lea
cmc
mov
js
mov
repz
adc
addr16
mov
cli
jbe
pop
mov
push
into
add
inc
das
add
push
push
mov
ja
ss
into
push
stos
mov
jb
mov
mov
pop
loope
mov
xor
jl
pop
shll
stos
pop
xchg
js
or
dec
mov
mov
push
xchg
das
cmp
in
popa
aaa
xor
ds
push
test
add
pushf
in
mov
lods
repnz
mov
mov
stos
push
out
jns
test
leave
jge
add
das
cvtpi2ps
add
add
and
lock
add
fwait
inc
sahf
sbb
push
add
push
push
mov
push
outsb
inc
mov
pop
shr
in
pop
cmp
and
and
ljmp
mov
sub
push
loop
stos
loope
push
shrl
push
fdivs
fnstenv
mov
push
jecxz
or
rolb
cmp
cmp
call
fstpl
je
cmp
jge
push
negb
sub
mov
rol
xchg
mov
bnd
or
xchg
fwait
jg
repnz
mov
gs
adc
cld
jecxz
test
cmp
in
sbb
sarb
orl
popf
stos
in
out
mov
dec
inc
roll
scas
stos
enter
iret
add
mov
std
fcomps
rolb
les
mov
mov
mov
adc
mov
pop
adc
pop
sbb
jge
ret
out
fstps
and
jnp
add
jnp
imul
or
mov
jl
rol
and
sub
int
mov
and
jae
add
xor
mov
mov
push
mov
dec
andl
sbb
mov
mov
mov
mov
cltd
sub
hlt
bnd
jns
cli
cltd
js
sbb
outsb
sbb
gs
jge
pushf
sbb
inc
in
or
xor
add
sbb
mov
and
xor
jg
and
sbb
or
test
inc
push
sub
add
mov
ljmp
sbbl
aam
dec
aam
div
icebp
cmpsb
sahf
movntq
gs
sti
aam
out
mov
fs
hlt
push
jmp
xor
mov
loop
jecxz
jge
mov
dec
xchg
stos
jmp
je
inc
xchg
mov
mov
ret
xor
adc
inc
out
mov
mov
push
lock
add
out
daa
sub
arpl
shl
push
xor
push
push
jo
mov
mov
xchg
gs
shlb
xchg
jne
jno
arpl
enter
jbe
pop
jmp
sti
in
shrb
fimuls
jp
out
aas
popa
or
jle
decb
in
stc
add
popf
jecxz
push
jmp
mov
jae
xor
cmp
sbb
mov
pusha
lods
mov
mov
xchg
mov
std
pop
push
push
inc
iret
mov
testl
cmp
mov
mov
iret
cmpsl
shlb
nop
adc
lea
shrb
pop
gs
ljmp
inc
fildll
dec
jbe
sbb
clc
fisubs
mov
call
cmp
int3
and
scas
and
jnp
loopne
xchg
jno
mov
mov
ds
pop
pop
lds
mov
clc
stc
add
scas
lahf
cmpsb
bnd
push
xor
popa
and
ss
xchg
shlb
add
gs
scas
sbb
jmp
jbe
inc
dec
call
xchg
mov
mov
mov
test
daa
dec
xchg
adc
sti
add
pop
lds
push
insl
testl
sbb
mov
dec
lock
sbb
sahf
jg
mov
xor
pop
jmp
push
cmpb
and
push
lret
iret
sub
not
sahf
sti
hlt
xor
enter
dec
xlat
xchg
and
mov
lcall
iret
jno
out
or
gs
jecxz
cmp
and
push
in
insl
incb
mov
sub
lea
lock
inc
mov
adc
in
mul
int
insb
and
lret
cmp
push
fnsave
iret
hlt
sub
lock
pusha
cmp
push
call
andl
push
stos
sbb
sahf
outsl
xorl
inc
mov
mov
insb
or
cmpsl
aam
int
ss
imul
mov
mov
sbb
lods
je
push
pop
mov
pusha
xor
dec
cltd
fcompl
push
pop
sti
and
fsub
pop
mov
rcll
fildl
jmp
dec
jmp
cmp
in
xor
fistps
and
std
sbb
stc
xchg
xchg
in
jmp
cs
xchg
test
pop
sbb
pop
enter
lcall
jno
loop
and
mov
xchg
push
mov
inc
fs
icebp
push
add
mov
ret
loopne
cmp
jns
pop
and
jno
ja
fimuls
add
jmp
ds
jg
pop
stc
jp
rcll
ja
outsb
mov
das
push
and
adc
and
xor
test
sub
test
test
fwait
mov
mov
test
aaa
cmp
adc
cmpsb
pop
shrl
or
pop
shl
inc
jne
sbb
ret
fisubrl
adc
data16
xchg
xor
inc
push
rorb
mov
dec
loopne
orl
les
faddp
negb
inc
fldcw
xor
std
notb
in
adc
push
or
imul
in
pop
lcall
cwtd
mov
outsb
aaa
aam
adc
inc
push
pushf
adc
sub
imul
cmc
loope
repnz
in
lods
adc
stos
or
adc
sbb
subb
add
lret
xor
inc
scas
imul
or
or
mov
cmpsl
jne
bound
lock
push
dec
xor
lock
adc
push
pop
mov
xchg
xor
xchg
out
dec
mov
fsts
xchg
lret
inc
pushl
sub
popw
pop
push
pop
xchg
ds
pop
adc
mov
repnz
rorb
call
hlt
jne
jnp
sub
pop
in
sbbb
es
stc
dec
add
jmp
or
fdivl
pop
and
jns
movsb
sbb
daa
jp
mov
dec
jg
int3
lcall
insb
mov
inc
ja
sbb
clc
into
jns
pop
and
sahf
mov
sub
or
mov
aam
shlb
fcompl
jb
testl
popa
mov
aad
add
int3
sub
xor
test
mov
mov
jl
xchg
mov
pushf
das
push
jns
pop
jg
xchg
mov
ret
cmp
in
loop
imul
scas
mov
imul
add
lahf
es
cmp
jl
dec
mov
std
sbb
push
pop
pop
xor
mov
jbe
adc
sbb
scas
out
outsl
push
mov
repz
adc
xor
push
dec
into
in
mov
sbb
mov
or
add
pushl
xor
push
arpl
cs
lods
pop
mov
je
dec
push
xor
push
test
int3
cmc
dec
incl
xlat
mov
lods
jbe
pop
sbb
push
pushf
fiadds
popf
and
jle
mov
in
popf
cltd
aas
iret
in
test
fcompl
add
pop
and
test
mov
xchg
jns
or
and
xchg
pop
adc
xor
ljmp
sub
lret
hlt
icebp
jmp
inc
push
aam
cmp
xor
xchg
add
imul
rcl
inc
in
add
addr16
in
ficoml
faddl
mov
cwtl
mov
add
lods
pop
xchg
mov
push
leave
fcompl
sbb
jp
call
cmc
inc
xchg
setns
lods
add
not
xchg
cmc
mov
cmp
inc
adc
out
sub
xchg
std
pop
dec
push
cmpsb
aam
push
clc
jbe
dec
push
fistl
clc
mov
loopne
pop
inc
rolb
stc
push
mov
push
cmp
cmpsl
mov
sub
imul
mov
repz
xchg
das
push
insb
and
loopne
sbb
nop
jb
mov
xor
add
aaa
pop
cmp
push
dec
scas
sub
add
jmp
les
inc
xor
insl
scas
fmuls
xor
push
sub
pushl
icebp
and
out
and
adc
call
mov
push
idivb
cmpsl
mov
insl
dec
pop
add
mov
out
xlat
xor
mov
mov
xor
aaa
out
mov
xorb
mov
call
dec
jle
push
dec
push
sbb
or
std
sub
cmc
xor
outsl
cmp
push
aam
jmp
xchg
dec
mov
mov
fwait
xchg
cmp
inc
add
sbb
in
pop
push
jl
mov
sti
cmpl
pop
cmp
std
inc
jecxz
mov
jg
xor
call
fdivl
ss
xlat
lahf
fisubrl
jb
xor
loope
mov
jne
rorl
cmp
in
movsl
fisubrs
sbb
imul
jmp
and
repnz
push
push
insl
pop
movsb
sbb
xchg
aas
aas
ret
sub
out
int
pop
mov
mull
in
out
scas
popf
xor
push
hlt
out
push
mov
xchg
ja
aaa
int
cmp
xor
clc
push
stos
push
adc
mov
xchg
data16
dec
jle
orb
into
sub
arpl
fiadds
adc
push
sbb
pop
aas
cmp
lea
jbe
mov
test
enter
test
add
sub
mov
adc
pop
jmp
movsl
push
movsb
jnp
fiadds
nop
dec
cmp
mov
or
mov
xchg
sbb
cmc
xchg
cmp
aam
xchg
jns
loope
ret
xor
cmc
les
popa
sub
jge
stc
leave
xor
pop
lret
dec
mov
cmc
mov
mov
push
stos
dec
jne
jg
lcall
in
rolb
hlt
fidivrs
lahf
jo
ret
popa
or
fistps
insl
ds
mov
add
inc
fadd
icebp
cmp
pushf
mov
mov
fisttpll
sub
fbstp
sub
and
and
xchg
lods
jle
xor
adc
adc
loopne
and
mov
inc
xchg
out
add
mov
push
adcl
sbb
jns
cmp
and
jnp
js
pop
mov
or
xor
cli
aam
or
mov
fs
jno
xchg
cwtl
jb
mov
push
ljmp
data16
loopne
pop
in
push
dec
xchg
cmp
xchg
or
in
jno
cli
cmpsl
xor
and
mov
sbb
xchg
cmpsl
push
div
ss
mov
popa
insb
call
sbb
xor
adc
add
popf
outsb
add
push
xchg
sbb
add
dec
push
int
jle
adc
repnz
mov
mov
dec
pop
xor
pop
into
xor
inc
mov
sub
push
pushf
idivl
cmpsb
mov
stos
fbstp
imul
aaa
pop
ffreep
je
imul
pop
aas
sub
cltd
je
loop
or
mov
sub
push
adc
push
push
lds
ljmp
stc
sarb
inc
push
mov
jp
add
jmp
lods
std
ljmp
movsb
syscall
aas
jmp
push
fsubl
cltd
cld
xor
add
loopne
stos
xor
cmp
pusha
dec
push
sub
cmc
add
xchg
and
mov
int3
cmp
mov
adc
mov
sub
popf
hlt
lods
rorl
mov
jl
mov
int3
push
mov
fs
in
push
mov
mov
and
gs
mov
aam
fistpll
lds
jb
repz
rcll
dec
ret
jg
adc
cli
mov
push
sub
leave
rcl
iret
mov
leave
das
mov
mov
mov
aad
push
sub
cld
push
hlt
push
lret
js
cmp
jb
cmp
in
fisubrs
mov
or
iret
inc
sbb
jecxz
je
jb
aam
rcrl
imul
scas
ljmp
jbe
fadd
dec
iret
mov
or
incb
adc
mov
xor
inc
jge
int3
sbb
xor
pop
lret
pop
mov
out
lods
sub
inc
pop
iret
lahf
pop
clc
rcll
mov
inc
jmp
enter
xchg
cmp
jbe
pop
mov
mov
mov
xorl
setno
mov
cmp
push
fcmovbe
xor
jl
xchg
pop
test
mov
data16
addr16
outsb
loop
cmpsb
inc
mov
jb
sbb
or
adc
push
ret
idiv
lret
xchg
movsl
js
or
or
add
movsl
iret
movsb
xor
popf
adc
je
addr16
inc
ret
fdivrs
repnz
aaa
xchg
jnp
shlb
scas
or
test
lahf
sbb
dec
mov
push
mov
pushf
scas
and
cmp
sbb
mov
xor
cmp
jle
xor
outsb
repz
pop
xchg
mov
inc
add
add
enter
fists
outsl
insb
push
dec
loop
pop
sbb
arpl
lcall
sti
mov
test
cmp
arpl
movsl
xchg
outsb
fisubrl
ret
jb
into
icebp
inc
inc
sbb
gs
mov
out
test
lret
jp
or
or
jbe
lods
es
rolb
add
sti
scas
pop
jecxz
dec
rcrb
xor
inc
and
repnz
aad
mov
pop
call
and
sbb
sbb
push
pop
mov
lret
adc
out
and
push
mov
sbb
mov
sub
lds
out
sub
loopne
sub
jbe
mov
adc
jb
mov
add
roll
inc
add
add
add
push
stos
fmull
and
sti
and
xchg
lret
jne
or
loope
lods
rorb
push
inc
push
lea
and
imul
jns
mov
das
in
inc
adc
pushf
dec
jg
or
dec
push
cmp
push
inc
push
aas
outsl
cld
push
sbbb
xlat
cmc
out
rcl
cmpsb
dec
add
mov
dec
cld
xchg
adc
xor
inc
lods
lahf
jmp
repnz
mov
jae
adc
push
pusha
aaa
stc
mov
bnd
insb
inc
mov
xchg
add
and
or
pop
pusha
pop
inc
and
and
lods
xchg
std
jne
in
xchg
mov
jb
push
adc
adc
mov
aad
repz
jns
leave
jle
int
stos
xchg
popf
xchg
jnp
icebp
inc
lock
outsl
lret
and
sbb
adc
mov
xor
jb
inc
fsubl
dec
jmp
lds
clc
stos
stos
mov
cld
stc
xchg
lahf
xchg
roll
cli
fisubrl
leave
xchg
into
pop
jnp
lds
scas
mov
cmp
incb
or
xchg
dec
jle
adc
fcmovu
imul
sti
pop
les
xor
inc
pop
mov
inc
iret
push
pop
mov
adc
daa
dec
add
or
sbb
flds
movsl
mov
jns
ds
add
push
cmp
call
or
sub
sti
jae
cld
idivl
lods
mov
mov
cmp
pushf
adcb
scas
mov
jae
nop
sbb
test
jg
rorl
aad
dec
xchg
ja
psubq
xor
mov
xchg
adc
lock
inc
jl
data16
in
sti
lock
aad
cmp
mov
cwtl
mov
mov
inc
inc
ret
fisttpll
inc
cmp
bound
dec
stc
ret
setnp
mull
iret
insb
mov
adc
pop
xchg
sub
inc
fwait
cmp
xor
cltd
pop
call
mov
sbb
jnp
and
cmpsb
or
aas
push
mov
xor
cmp
mov
ljmp
inc
adc
inc
mov
shrl
ret
mov
pop
test
and
sub
pop
out
ret
imul
push
cmp
sbbb
jmp
scas
sub
adc
lods
and
jns
int3
cmp
fcmovnbe
nop
in
xabort
scas
out
in
adc
ljmp
mov
cs
addl
push
push
pop
loop
sbb
scas
mov
add
ljmp
mov
cs
or
mov
push
cltd
sub
in
mov
jnp
outsl
sbb
inc
cmpl
and
push
push
pop
inc
xchg
xor
ret
mov
imul
mov
ljmp
vmwrite
mov
jge
pop
cmp
mov
mov
pop
cmpsb
jb
xchg
push
mov
jno
sahf
push
push
sub
mov
pop
stc
repz
decl
push
adc
jbe
ror
xchg
push
pop
pop
mov
mov
mov
add
and
adc
sbb
imul
xchg
cmc
insl
rcr
jle
pop
jb
les
xchg
arpl
xchg
add
mov
dec
push
add
les
test
xchg
push
pop
test
jae
xchg
and
stos
roll
repz
inc
cmpsl
dec
out
ret
ficoms
dec
dec
inc
in
sbb
fwait
mull
movsb
add
rclb
imulb
in
add
lea
dec
mov
movsb
inc
push
cltd
scas
xchg
fs
mov
pop
test
fadds
push
pop
sub
shlb
insb
pop
int3
pop
and
xlat
mov
movsb
mov
or
fisttpl
mov
xchg
xchg
cwtl
divb
sbb
inc
les
or
stc
int
rorb
lret
lods
xchg
icebp
cmp
outsl
xchg
in
xchg
int3
andb
adc
sbb
jns
out
sbb
lret
add
jae
insl
mov
in
cwtl
mov
push
pop
into
mov
mov
push
push
jle
stc
sub
and
sbb
lds
repz
popa
out
lods
std
shlb
pushf
mov
shll
movsl
insb
cmp
xor
pop
mov
test
shrl
ja
mov
or
xlat
sbb
xchg
sahf
rorl
inc
mov
imulb
cmp
sbb
mov
scas
mov
mov
xor
xchg
stc
mov
push
xor
pop
inc
nop
sub
fnstenv
ds
and
mov
sub
out
pop
cltd
lret
pop
imul
push
bnd
scas
aad
iret
jne
enter
scas
mov
push
out
pop
sbb
aas
hlt
jmp
xchg
ljmp
rorl
fisubl
push
imulb
dec
sbb
imul
push
loop
rolb
adc
push
in
cmpsl
hlt
inc
inc
jecxz
mov
lahf
push
popl
insl
cmp
push
cmc
cmc
ret
test
push
das
repz
xchg
or
cmpsb
aaa
add
mov
sub
inc
dec
lret
dec
mov
mov
in
pop
insb
push
mull
xchg
push
pop
loop
push
push
xchg
push
lret
sub
cmp
push
inc
fsubrs
daa
pop
pop
mov
lods
dec
or
push
frstor
mov
and
push
mov
sbb
or
and
adc
mov
xor
sub
movsb
push
daa
pop
or
jl
cmp
cmp
xchg
xor
jge
test
iret
outsb
daa
push
dec
aas
cmpsb
fwait
rclb
sbb
add
aas
scas
pop
sbb
xor
mov
sarl
push
adc
xor
out
data16
movsl
fwait
lock
ja
jbe
push
jg
test
outsl
mov
jae
cmpsl
and
loope
into
push
test
aas
js
xchg
lds
inc
scas
ret
mov
cmpsb
lahf
std
out
jo
outsl
into
and
cmp
mov
pop
push
addr16
aas
jne
cmpsl
pushf
mov
int3
jp
dec
aad
inc
xchg
in
jno
pop
xor
mov
xchg
xchg
iret
mov
jnp
jae
out
cmpsb
lods
mov
cmp
call
inc
gs
lock
jmp
push
out
push
aaa
push
xchg
in
aam
orl
xor
cmp
xor
mov
int3
mov
add
xchg
fnstcw
mov
mov
nop
jno
outsl
aaa
add
sbb
cmpsl
pop
mov
pushf
in
pop
call
cmp
pop
jge
dec
sbb
ja
shll
jae
leave
xchg
push
insl
adc
jb
je
mov
test
inc
sti
xchg
xlat
in
push
loope
push
and
test
les
push
adcl
jns
and
mov
mov
sahf
pop
inc
mov
mov
test
sarl
aaa
push
icebp
movsb
jb
rolb
in
leave
inc
push
fwait
sbb
push
jnp
std
xchg
mov
sbb
std
insl
xchg
mov
ret
mov
stos
dec
int
jnp
inc
or
bound
out
cmp
insb
inc
pop
adc
out
pop
in
and
in
mov
pushf
sbb
fbld
sub
mov
leave
add
inc
bound
lcall
jle
adc
cmpsl
and
leave
mov
mov
and
loope
dec
jae
inc
in
enter
jns
sub
test
ljmp
fcomps
jo
and
nop
je
das
test
push
pop
add
mov
xchg
jg
and
sti
ret
test
push
and
in
stos
inc
dec
cmpsb
outsb
popl
cltd
fsubrs
dec
icebp
push
push
ror
shlb
out
popf
hlt
cmp
scas
jl
dec
inc
rorb
pop
push
fldenv
dec
loopne
add
mov
hlt
mov
cmpsb
scas
inc
pop
inc
scas
mov
jo
dec
aas
cli
into
lret
mov
pop
inc
es
cmp
xchg
pop
mov
pop
xor
hlt
ror
mov
pushf
adc
pop
test
jae
xchg
call
adc
pop
adc
ffreep
push
cwtl
imul
in
mov
movsb
jle
in
push
sub
pusha
inc
adc
mov
stos
and
rorb
test
gs
fdivl
pushf
rcll
jg
outsl
jg
roll
or
mov
mov
lret
xchg
and
push
xor
jp
mov
xor
pop
andl
adc
push
mov
push
dec
iret
inc
cmp
outsl
jbe
popa
int3
aam
repnz
jne
push
movsl
scas
or
and
daa
cmpsb
fldt
pop
inc
mov
test
dec
jecxz
int3
test
adc
dec
test
sbb
cli
negl
add
mov
inc
repz
int
sarb
fs
pop
sti
cs
and
lahf
add
and
sbbl
aaa
call
in
jle
push
jmp
rcrl
es
addr16
push
es
cmp
cmp
pushf
js
pop
shll
add
fwait
sbb
xor
sub
inc
xchg
int
and
inc
loop
in
inc
or
cmpsl
xor
mov
scas
pop
imul
add
mov
sub
pop
jge
out
xor
fadds
sbb
je
clc
push
and
and
mov
cmc
sub
cs
daa
movsl
popa
fs
movsb
in
and
pushf
dec
das
sahf
push
mov
cmp
shl
ds
inc
enter
jecxz
std
push
pop
or
test
dec
leave
inc
aam
inc
jb
push
inc
sub
cmpsb
in
jno
jae
add
sar
or
add
inc
push
dec
inc
push
push
andb
inc
leave
xchg
xor
addr16
dec
test
arpl
dec
cmpsl
aas
and
movsb
push
jecxz
jo
add
out
and
call
out
mov
sbb
mov
sbbl
mov
sbb
adc
loopne
es
jae
repnz
xchg
and
imul
sbb
or
stc
sub
fidivrs
ret
mov
iret
push
mov
pop
lcall
scas
jnp
mov
mov
andl
mov
push
sbbb
cmc
push
in
out
outsb
jnp
out
ss
mov
leave
lods
rorl
xor
mov
call
adcl
sbb
mov
push
cs
shr
jle
test
fmuls
add
lret
cmpsl
mov
push
ret
daa
sub
ds
aas
mov
aaa
out
xchg
cmp
popf
push
nop
and
xchg
rcr
xchg
into
js
mov
or
es
shl
add
mov
push
or
in
cmp
fdiv
sbb
and
pusha
invd
pusha
mov
mov
adc
out
push
sub
cmp
xor
inc
cmp
sbb
jnp
stc
cltd
pop
ss
mov
xor
adc
test
xlat
out
pop
mov
lds
mov
aam
scas
cmpsl
add
outsb
jne
mov
shlb
dec
sbb
sahf
test
and
push
and
adc
and
sbb
lods
dec
push
sub
les
imul
lret
jne
mov
lret
loopne
pusha
or
fsubr
into
mov
add
sti
lcall
rol
mov
inc
pop
mov
ds
jecxz
or
lret
cwtl
dec
mov
icebp
aam
jge
pop
fwait
repnz
scas
nop
sar
movsb
dec
scas
jg
xchg
cmpsl
push
or
xchg
push
daa
outsl
xor
pop
out
mov
xlat
cmp
and
and
and
out
gs
add
inc
xchg
imul
lods
lds
cmp
jecxz
fsubrp
out
cmc
pop
xor
fbstp
pop
jb
movsl
mov
mov
stos
pop
js
xchg
and
dec
aaa
inc
adc
js
cmp
mov
inc
ds
lods
push
out
in
jne
ret
lcall
dec
shll
arpl
sbb
xchg
or
icebp
ljmp
stos
xchg
xchg
dec
sub
mov
in
inc
mov
in
or
adc
jle
or
or
sub
mov
stos
cmp
cmp
insb
jbe
sbb
and
jmp
and
loop
cwtl
cmp
sbb
scas
insb
bound
ret
xchg
movl
outsl
std
sarl
mov
push
out
dec
lds
inc
orl
or
fnstenv
test
add
xchg
push
push
ficoms
push
jecxz
cltd
leave
inc
movsl
mov
jbe
and
xchg
mov
pop
inc
inc
test
ljmp
mov
iret
incb
adc
push
in
mov
std
loopne
pop
xorb
push
sub
mov
rcrb
add
loop
aad
adc
sarl
int3
nop
pushf
sbb
or
and
jecxz,pt
jne
lods
sub
pushf
add
inc
sub
cmp
js
bound
mov
mov
aam
add
fiadds
adc
test
jecxz
lods
adc
fwait
arpl
mov
mov
and
mov
stos
adc
data16
add
jne
cmpsl
je
dec
lret
jae
jae
xor
inc
xor
mov
inc
loope
push
repnz
sti
outsl
mov
popf
je
adc
scas
mov
rol
mov
dec
sti
cwtl
push
adc
xor
out
scas
or
dec
shll
arpl
dec
jne
inc
inc
jle
and
ljmp
cmpsb
incl
aam
in
xlat
cli
repnz
push
cmp
inc
and
cli
push
cs
sti
xor
adc
scas
xor
gs
adc
jbe
jno
sub
push
pop
mov
mov
xchg
sbb
out
xor
pop
ljmp
enter
movsb
cmpsl
or
aad
mov
icebp
mov
pop
add
pop
add
out
mov
cld
push
add
lea
lods
xor
rcrl
mov
lcall
cmpb
add
xchg
retw
xor
pop
rcll
adc
add
out
jb
out
addr16
push
add
jb
shrb
jo
inc
pushf
fdivl
mov
adc
mov
pop
scas
mov
ret
adc
jne
mov
xchg
lret
push
jecxz
int
push
mov
sub
into
dec
jbe
cmp
mov
nop
int
pop
fs
loop
scas
cwtl
cltd
push
into
dec
adc
and
lcall
test
mov
dec
jecxz
lret
movsb
lcall
repz
mov
cmp
int
outsb
arpl
pop
adc
add
xchg
ljmp
test
cwtl
dec
jg
pusha
ja
das
adc
repnz
inc
adc
inc
adc
inc
daa
jle
pushf
cs
lds
push
pop
xor
mov
or
and
push
push
mov
push
hlt
fiaddl
fsubr
xchg
cwtl
jbe
jge
jg
xchg
fisttpll
cmp
fwait
pusha
mov
arpl
mov
cmp
rep
sahf
jb
pop
mov
and
pop
sub
loope
movsb
cmp
xor
imul
hlt
mov
xchg
aas
sbb
mov
cwtl
mov
xchg
fs
decl
gs
fs
mov
jmp
inc
fadds
jmp
dec
ret
push
lods
shl
roll
xlat
call
mov
inc
stos
dec
sub
pop
cmp
xchg
in
aam
and
xchg
repz
insb
out
pop
mov
push
adc
pop
out
enter
cmpsl
out
or
cmc
push
popf
mov
mov
into
xlat
out
push
xchg
cmp
xchg
in
push
mov
pop
call
xor
notb
mov
in
notb
sbb
push
pop
fidivrs
std
enter
pop
clc
sbbl
icebp
mov
sub
sub
sahf
add
leave
stos
inc
pop
in
repz
mov
sbb
scas
jnp
in
cs
xor
add
pop
mov
jno
jne
lret
mov
push
out
stos
sbb
gs
mov
enter
mov
dec
stos
in
adc
pop
push
mov
push
aam
or
cld
and
fnstsw
push
fidivs
or
mov
push
xchg
xor
fcompl
dec
repnz
gs
and
shll
pusha
sub
pop
dec
push
gs
jb
loope
pushf
cld
in
add
xchg
xchg
into
or
shl
test
sbb
jmp
les
inc
ret
mov
xchg
movsb
call
pop
pop
jecxz
sbb
dec
or
aad
xor
adc
jno
pop
sub
mov
pop
or
lock
sbb
or
and
shrb
shl
int
push
xchg
cmpl
cltd
pop
mov
mov
into
xchg
push
push
fistpll
fucomip
adc
cmc
mov
jge
cmp
or
dec
dec
stos
sub
loope
fldenv
cld
sub
pop
lods
int
mov
sahf
fistps
mov
pop
push
inc
ss
mov
ret
lret
repz
adc
cmp
mov
mulb
pop
idiv
fsubrs
ret
cmp
fucomi
xor
cmp
imul
xlat
and
mov
rol
lods
fdivrs
fcmovnu
popf
sbbb
mov
xchg
sub
cld
sbb
cmp
leave
inc
mull
xlat
jmp
inc
sub
loop
ficoml
popa
pop
imul
xor
mov
stos
pop
cli
mov
ja
sub
aad
mov
add
xchg
stos
insl
aad
into
or
add
mov
inc
sub
call
xlat
mov
call
mov
in
mov
cmp
mov
mov
or
mov
dec
iret
dec
popf
add
jb
pop
cld
pushl
scas
fnsave
sbb
gs
cs
mov
je
adc
testb
jge
xchg
leave
bound
mov
idiv
xor
mov
mov
xchg
sub
ljmp
out
cmc
mov
lcall
xorb
xchg
cli
ja
push
lock
cmpsl
arpl
mov
fimull
add
insl
inc
stc
xor
adcl
jne
or
icebp
push
pushl
repnz
imul
rcl
cmp
jo
cmc
adc
loope
push
xchg
inc
aaa
inc
push
adc
loop
mov
dec
inc
cmpsb
mov
js
out
stos
mov
add
out
loope
lret
xorl
inc
add
lock
insb
addr16
test
shl
sbb
repnz
adc
dec
js
dec
in
or
or
scas
pop
jmp
push
dec
xor
bound
inc
iret
push
xchg
incl
rolb
cmp
ljmp
mov
pop
test
das
pop
rol
jg
fdivrl
push
add
push
call
jl
inc
adc
jp
in
ss
insl
xchg
sbb
cmp
adc
xchg
fcmovu
push
fdivrs
xor
xchg
xchg
push
dec
mov
lds
pop
push
int
cwtl
mov
fimull
shll
push
mov
jp
js
sub
test
testb
das
jno
shrb
inc
cmp
into
xor
and
shl
jne
orb
cwtl
repnz
into
shrb
mov
fdivrl
cmpsl
sbb
filds
ljmp
jbe
rsm
jl
or
sahf
lds
sbb
jnp
iret
sub
inc
imul
adc
push
xchg
incl
adc
test
in
addl
inc
inc
mov
dec
movsb
aaa
jl
cmp
dec
mov
sub
sahf
and
cltd
pop
inc
pop
frstor
fdivl
lock
inc
mov
loop
add
jo
dec
pop
or
mov
mov
mov
or
lret
cmp
aas
dec
addb
mov
sbbl
push
rcl
sub
pop
cmc
fldenv
sarl
outsb
inc
les
mov
or
lahf
push
roll
lahf
xlat
cmp
cli
fidivrl
scas
lret
xchg
enter
addb
out
fcoms
cmc
cwtl
cmp
cltd
pop
adc
push
outsl
jg
into
ficoms
test
arpl
pop
pop
jno
lret
and
pop
dec
aaa
mov
or
sub
pop
lock
call
into
mov
mov
dec
insb
shlb
or
adc
sub
div
fisttpll
pop
jo
jnp
or
scas
jo
mov
xorl
mov
pop
add
or
pop
sbbb
or
push
lret
cmp
rorl
dec
cmp
cmpsl
ret
push
aam
sub
mov
push
lret
and
lahf
roll
ja
xchg
dec
fbstp
nop
xor
into
jno
pop
lret
ss
and
jo
push
xor
lret
push
movsb
adc
js
clc
aad
lahf
int
mov
subl
aas
and
shll
or
pop
add
and
out
cmp
pop
outsb
push
cmp
test
jae
bound
pop
jecxz
add
ret
xchg
and
push
sti
stos
xor
push
js
fcomps
sarl
sbb
inc
mov
lea
fiadds
sbb
xor
sbb
xor
push
lea
and
divb
push
and
ss
jle
push
push
lods
lea
roll
int
out
pop
test
test
out
dec
xor
push
sub
sbb
sbb
mov
fstpl
outsb
enter
aam
and
cmpsl
lcall
add
pop
arpl
jmp
bound
mov
mov
push
fsubrp
mov
fnstenv
xor
rorl
divb
jo
in
outsb
fldcw
and
xchg
push
lds
mov
or
xor
andl
dec
movsb
adc
nop
mov
xor
out
jmp
aam
scas
int
sub
xor
add
mov
aas
sub
dec
inc
jge
or
rcrb
jbe
aas
sbb
xchg
loop
enter
scas
lahf
inc
cmpsb
jne
jne
imul
sub
inc
or
sbb
dec
or
iret
sub
mov
cmc
pop
mov
sahf
pushl
mov
or
inc
subl
dec
sbb
push
or
mov
fs
enter
push
lret
movsb
fisubs
mov
test
es
jne
mov
lea
or
sahf
fisttpl
or
in
dec
leave
addl
leave
stc
ljmp
lret
mov
xor
sti
ja
sbb
sub
jb
in
fwait
pop
xor
outsb
push
xlat
jle
into
jns
xchg
mov
cwtl
pop
rcrl
sti
ret
loope
push
mov
sbb
mov
pop
loope
mov
push
fcomps
jp
xchg
inc
pusha
mov
push
and
cmp
jl
cld
jp
es
lods
push
fistl
dec
and
fiaddl
stc
mov
fcomps
divb
xchg
ret
mov
dec
cwtl
int
psrlq
jne
popf
jle
enter
or
push
lret
stos
aaa
mov
test
mov
or
in
cmc
test
shll
sarl
mov
test
loop
lret
push
aas
push
jbe
mov
pop
xchg
notl
aam
mul
fisubrs
jge
xchg
ljmp
sbb
insl
mov
popa
int
sbb
frstor
adc
imul
in
pusha
ficoms
sbb
cwtl
mov
xlat
jl
pop
cmp
inc
stc
sbb
push
bound
lods
jg
es
inc
pop
psrld
ret
adc
push
ret
les
cmp
in
jecxz
dec
xchg
sbb
xor
lret
loopne
lret
jne
mov
xor
and
out
fidivrs
xchg
mov
mov
dec
sbb
test
lret
and
lahf
and
and
cmp
pop
inc
pop
sub
scas
and
sbb
jle
mov
mov
sub
out
adc
or
cli
xchg
fs
iret
pushf
mov
jns
out
nop
test
ss
sub
sti
into
movsb
or
ljmp
mov
outsl
cmp
and
mov
cwtl
xor
insb
mov
mov
inc
mov
inc
into
mov
xor
subl
add
mov
call
nop
lcall
cwtl
and
sarb
cmc
jl
xchg
and
add
sub
mov
rcr
xchg
data16
scas
cmc
pop
inc
sub
push
add
addr16
cwtl
cld
and
sbb
cmp
test
push
in
xchg
out
mov
int3
pusha
jle
and
into
or
adc
or
sbb
fsubs
mov
push
jo
sti
adc
fidivrs
mov
cmpsb
mov
or
sbb
sbb
xor
jecxz
jnp
rcrb
dec
lret
xor
add
cmc
mov
aaa
fnstcw
jmp
sub
jb
dec
test
lahf
cmp
mov
push
or
filds
xchg
adc
mov
popa
inc
xchg
es
addl
bound
sub
jg
cmp
ljmp
xlat
lcall
pop
jge
ja
jb
mov
jmp
cmp
enter
add
iret
pushf
mov
movsb
sbb
inc
dec
addr16
fnsave
cmp
xor
pop
jmp
mov
and
ljmp
xor
std
mov
push
push
jmp
cmp
push
sub
repz
push
out
jb
xchg
mov
loope
sbb
repnz
je
stc
add
fdivs
mov
mov
xchg
dec
ret
add
mov
imul
cmpsb
jl
sbb
pusha
mov
ja
lea
js
inc
cmp
sti
ret
test
lcall
shll
and
out
rclb
out
fistpl
adc
jmp
xor
addr16
and
sti
enter
mulps
mov
pop
pop
mov
in
mov
pushf
stos
and
aas
iret
sbb
icebp
sbb
loop
bound
xchg
mov
int3
mov
dec
sub
cltd
ds
test
mov
mov
dec
xor
jge
push
clc
lret
xchg
orl
and
lock
sub
pop
subb
mov
loopne
push
cmp
xlat
or
std
jbe
ss
xor
inc
popf
sahf
sub
xchg
xchg
into
sub
dec
sbb
mov
sbb
add
dec
outsb
movsb
push
sub
adc
out
mov
subb
les
dec
jno
adc
scas
push
inc
std
es
add
mov
mov
lock
xor
xchg
cmp
push
cs
aam
add
push
pop
dec
repz
loopne
cmc
aaa
add
xor
lret
aam
lahf
out
adc
adc
push
mov
mov
mov
or
test
sbb
mov
pop
das
aam
sbb
pushf
cld
and
add
jne
mov
cmp
mov
shl
mov
and
inc
daa
sbb
mov
pop
xlat
mov
inc
fsubrl
mov
push
les
idivb
shrl
mov
movl
mov
mov
das
xor
lcall
int
imul
xchg
cs
pop
sbb
pop
mov
imul
xor
push
shrb
lret
pop
stos
out
lds
push
loop
adc
fwait
mov
mov
sbb
push
mov
xor
cld
sub
mov
outsb
out
push
ficoms
cmp
outsl
sbb
push
mov
pop
in
mov
mov
in
enter
cs
and
sar
xchg
scas
enter
adc
xchg
push
lea
jno
aam
adc
dec
pop
fstl
and
cli
sub
xor
out
fldl
mov
repz
lret
dec
mov
and
mov
pop
jmp
scas
leave
xor
pop
cwtl
fisubrl
cmc
enter
in
push
xor
push
pop
imul
sbb
dec
xlat
inc
and
push
push
jmp
pop
add
sbb
aam
push
push
mov
fwait
jne
push
pop
cmpl
adc
push
in
das
or
fisubrl
mov
in
rclb
adc
mov
shlb
inc
addr16
outsb
in
fldcw
and
scas
cmp
mov
mov
les
cmpsl
jnp
sbb
incl
sub
das
xor
fmull
cmpsl
dec
jns
nop
arpl
leave
fs
and
and
dec
out
repz
adc
add
fs
add
jo
orb
iret
jo
or
ja
xlat
mov
iret
xchg
hlt
push
sbb
xor
mov
jecxz
into
les
xor
xchg
andb
push
dec
cmc
add
lock
fidivl
jmp
in
into
inc
lahf
jne
and
sbb
aas
push
xchg
mov
lds
jl
jle
xchg
mov
jge
movsl
xchg
mov
jge
lcall
lods
imulb
lret
scas
pop
clc
mov
mov
add
dec
xor
push
xchg
loopne
cs
sbb
out
inc
js
jo
jne
movsl
popa
inc
push
out
aaa
int
roll
mov
mov
push
pusha
push
frstor
mov
pop
popa
or
lea
and
mov
aas
or
jmp
xchg
and
push
movsl
test
push
adc
aad
sbb
icebp
pop
cwtl
lret
or
sbb
mov
xchg
adc
jmp
stos
push
cmp
mov
or
xchg
or
cmpsl
bound
out
sub
mov
movaps
pop
jge
lahf
mov
pop
rorb
mov
lds
decl
xchg
xor
mov
rorb
add
aaa
cs
push
inc
mov
mov
test
push
push
sbb
fimuls
aaa
dec
inc
pop
out
divl
xor
push
adc
ret
pushf
sub
mov
shrb
inc
mov
push
inc
fimull
loop
fs
xor
jge
sti
adc
inc
xchg
adc
gs
fstl
idivb
sub
mov
scas
sub
mov
inc
addr16
inc
fdivp
cmp
push
out
push
and
fmull
dec
adc
push
call
push
outsl
rcll
pop
mov
inc
icebp
fwait
add
outsl
cwtl
cli
adc
enter
bound
out
es
jmp
cwtl
inc
out
cmpsb
or
xor
fidivrl
adc
fs
lock
or
mov
ja
or
sub
and
mov
insl
or
sub
mov
pushf
adc
xor
jns
sbb
shl
and
sahf
into
cmpsb
sbb
push
popf
lods
mov
addr16
sbb
push
gs
insl
sbb
xchg
or
mov
call
lahf
mov
fnstcw
dec
xchg
negb
jecxz
fcmovnb
fdivp
cltd
add
das
ljmp
insb
pop
sub
aas
lahf
aad
add
loop
cmp
inc
xor
inc
inc
loop
dec
mov
pop
icebp
xor
add
and
mov
mov
dec
mov
inc
roll
ret
mov
mov
jns
inc
gs
mov
xor
inc
inc
cli
cwtl
push
shr
or
mov
je
clc
dec
adc
inc
mov
lret
stc
orl
push
sbb
pop
push
ss
push
xchg
bound
dec
repz
cmp
sbb
stc
sub
adc
js
mov
ds
mov
mov
or
or
lahf
or
imul
lret
fsubrs
jecxz
or
cmpsl
popf
addl
mov
cmp
pushf
arpl
jbe
xorl
mov
lea
data16
std
fcmovbe
stos
movsb
push
pop
adc
mov
leave
fists
pop
mov
mov
mov
sbb
scas
out
repz
mov
js
jae
int
push
inc
stos
sub
jnp
fadd
imul
xchg
inc
cmc
cmp
test
imul
pop
mov
fsubr
mov
pop
pop
js
in
cmp
icebp
xchg
jne
mov
lods
insl
jno
lds
pop
sub
or
sub
xor
imul
cmp
jge
mov
shl
sti
jg
cltd
or
jns
mov
fisttps
loopne
xchg
pop
and
mov
stc
cmp
or
out
nop
xchg
xchg
pop
or
push
mov
das
pop
mov
dec
and
cmpsb
lcall
popf
pop
rorl
add
nop/reserved
stos
sbb
push
sbb
in
cs
pushf
jp
stc
inc
xor
outsb
hlt
inc
daa
loop
movsl
mov
mov
rol
mov
mov
testl
jle
outsl
sbb
movsb
mov
jb
adcl
mov
mov
lret
outsb
nop
aaa
insl
adc
pop
imul
and
jl
mov
dec
mov
adc
inc
pop
adc
add
mov
rorb
aaa
or
lret
leave
out
lds
lcall
xor
sar
sbb
aad
test
adc
iret
punpcklbw
test
cmc
mov
mov
fwait
jmp
dec
and
das
push
xchg
jae
clc
faddp
lea
xor
and
filds
popl
div
xorw
leave
add
add
jg
or
mov
test
je
ss
dec
adc
mov
xchg
sahf
and
popa
jbe
xchg
dec
test
mov
lock
imul
insb
loope
cmc
inc
or
or
xor
mov
dec
inc
daa
xor
and
and
repnz
jns
and
mov
sbb
fcompl
ss
in
inc
mov
xor
cmp
mov
xor
adc
fnsave
adc
mov
ja
dec
add
gs
fsub
pop
out
jns
sub
push
gs
mov
mov
cmp
stc
sbb
cs
xchg
pop
xor
sbb
movsb
jns
cmp
sub
xchg
push
dec
jle
and
cmpsb
cmp
popa
mov
pushf
rcll
lcall
dec
scas
inc
fsubrl
lahf
ljmp
stos
mov
and
jae
dec
hlt
inc
ret
cmp
es
adc
sub
insb
xchg
sbb
lcall
dec
and
jno
pushl
cwtl
mov
mov
in
mov
out
in
fildl
xlat
loop
xor
jb
sbb
mov
mov
mov
cmpsl
push
fsubrs
insl
aad
jmp
outsl
adc
mov
push
push
xor
fistpl
and
outsl
loop
jp
sub
lods
jb
or
jo
aam
adc
ret
js
into
jbe
or
mov
lods
jo
jmp
xchg
inc
jbe
in
xor
add
fldcw
dec
ffree
test
dec
jb
push
mov
xchg
nop
stos
sub
cmp
nop
xchg
dec
imull
mov
addl
mov
cld
and
xor
inc
enter
std
loope
push
lahf
es
add
jg
inc
movsl
nop
or
cmp
sub
mov
bound
xchg
jnp
test
hlt
pop
or
mov
aam
xor
jg
ja
ds
or
out
mov
loope
adc
mov
xchg
mov
adc
aas
adc
push
jmp
movsl
nop
mov
pop
mov
pop
and
jp
popf
inc
imul
fmull
rorb
cli
sahf
adc
hlt
jp
shrl
push
stos
pusha
lock
pop
ret
xchg
inc
pop
and
insb
sub
adc
imul
fmul
cmp
sub
add
popf
inc
or
sub
ds
arpl
lock
daa
adc
stos
xchg
add
xor
add
dec
pop
mov
dec
fldt
add
xor
xor
or
pop
imul
cmpsl
mov
push
xchg
mov
xor
loop
stc
hlt
sub
cltd
std
pop
insb
je
loop
insb
dec
inc
enter
es
ror
es
sbb
insl
lret
dec
cmp
ljmp
jns
cltd
js
push
mov
cwtl
cmpsl
in
aaa
aad
jl
test
leave
mov
xchg
jbe
ret
gs
dec
xchg
jp
inc
lret
jge
adc
sub
stc
sbb
mov
xlat
mov
adc
add
in
mov
orl
js
jno
decb
rorb
aam
mulb
lds
mov
jne
jle
fwait
add
xchg
in
js
repz
xor
popf
pop
daa
movsl
and
fxch
aad
ficoml
pop
jno
sub
iret
mov
jl
jo
sahf
hlt
xor
xchg
aam
mov
inc
mov
es
push
push
daa
mov
adc
lods
pop
sbb
mov
es
fldenv
sub
xchg
mov
push
loop
movsb
cli
and
lods
push
mov
or
in
push
jmp
pop
jb
jns
je
out
test
sub
push
mov
jg
dec
in
fcmovnb
cmp
sub
cmp
and
enter
sub
leave
dec
or
ret
push
mov
inc
stos
and
push
mov
xchg
stos
icebp
popa
mov
adc
jbe
mov
out
mov
loope
out
leave
jmp
xchg
mov
fmul
enter
sbbl
scas
fstpl
xchg
pop
dec
sbb
jne
ds
and
ds
jbe
lods
xchg
inc
cmp
dec
jno
dec
insl
loope
lcall
popf
scas
mov
add
and
push
test
cmp
orl
sbb
and
scas
outsl
out
sarb
std
xor
xlat
dec
ja
jl
aam
sbb
add
sbb
test
in
scas
ror
adc
mov
jle
dec
dec
dec
jno
in
xchg
test
cmp
cmp
cmp
dec
xchg
xor
repz
in
div
mov
sbb
fcmovnu
push
adc
push
jbe
pop
in
push
push
mov
sub
mov
or
rolb
cmpsb
pop
and
bound
mov
sti
icebp
xor
imul
and
cmp
mul
sbb
xchg
jmp
cli
daa
adc
out
ficoml
mov
in
rcll
std
mov
mov
xor
out
mov
jmp
pop
cwtl
dec
xchg
sub
xchg
hlt
icebp
mov
push
pop
iret
adc
sub
and
sbb
push
stos
and
mov
movb
orl
cmp
fs
fbstp
inc
fs
jg
rcrb
leave
scas
mov
fnsave
shl
or
fnstenv
fmul
std
push
xor
mov
ror
sub
pop
add
shlb
sbb
xor
out
and
mov
mov
xchg
jmp
xchg
push
inc
mov
mov
lds
iret
daa
pop
cwtl
push
xchg
sbbl
pop
pop
outsb
leave
in
movsl
and
jae
add
mov
aam
in
pop
xchg
test
fildl
mov
ss
xor
loop
push
xor
aad
jo
xchg
mov
jle
dec
stos
pop
sbb
mov
fcmovb
pop
inc
add
adc
ds
aad
dec
push
xchg
fldenv
out
sarl
jns
inc
loop
push
push
sarb
mov
cltd
outsb
notb
filds
push
insl
adc
xchg
mov
aas
jmp
arpl
push
aaa
pop
jo,pt
mov
ljmp
push
fs
enter
sub
jmp
int3
das
cltd
cmpb
xchg
pushf
mov
dec
repz
repnz
shl
dec
add
mov
cmpsb
outsb
inc
data16
pop
ret
mov
jae
mov
sti
int3
arpl
push
test
test
lcall
mov
mov
aaa
fidivs
subl
lcall
cmpsl
cs
jae
faddl
mov
ss
adc
inc
std
mov
inc
push
je
jnp
sub
jl
rolb
aaa
adc
nop
shll
xchg
push
and
lahf
fistpl
inc
aad
adc
mov
xchg
xor
call
jg
imul
inc
rcrl
and
and
mov
mov
roll
mov
jne
adc
or
dec
mov
push
jae
das
jmp
into
out
add
inc
push
and
popa
aam
xchg
mov
cmc
and
cli
imul
fstpl
in
sti
cmpsl
orb
jle
setge
sti
jno
daa
fs
mov
mov
and
vpaddusb
sbb
dec
divb
in
loopne
addr16
mov
sahf
pop
cmp
sahf
scas
cmp
cmp
iret
insl
ja
and
jo
xchg
mov
push
cmp
jbe
call
xchg
je
adc
addl
jae
xor
insl
xchg
add
inc
mov
add
cmpsb
lret
mov
ret
ficomps
inc
adc
mov
xor
dec
and
mov
lcall
mov
ror
pop
add
cmpsl
gs
jp
arpl
sbb
mov
outsl
lock
sub
lret
jecxz
in
mov
mov
xchg
in
xor
lods
push
jno
fwait
enter
ja
add
inc
iret
sbb
insl
fs
imul
test
mov
add
cmp
mov
stos
adc
lea
cmp
lret
pavgw
add
movsb
adc
in
inc
in
pop
in
pop
lods
pop
outsl
lea
ds
push
cli
pop
mov
out
ss
nop
lret
push
mov
add
aad
pop
cmp
add
adc
jg
inc
cmpsl
xor
bound
in
es
pop
mov
orb
ds
test
xor
push
add
iret
clc
mov
push
mov
jae
iret
punpckldq
push
push
repz
pop
xchg
stc
mov
dec
and
adc
stos
push
jge
pop
adc
inc
jg
aas
lcall
cmp
push
mov
inc
cmp
test
lds
and
xchg
jl
test
inc
cli
std
sub
adc
sub
call
pop
outsl
test
sbb
xor
into
push
xchg
mov
std
pop
mov
inc
out
sub
xor
in
pop
mov
dec
jne
ss
cmp
rorl
push
push
stos
cwtl
xor
jns
adc
je
add
fadds
ss
xchg
fwait
popa
push
mov
dec
pop
mov
sub
sub
cli
mov
sbb
mov
shlb
adc
int
fnstcw
push
insb
test
clc
stos
push
mov
ror
push
iret
push
sub
lods
pop
or
xchg
add
sarl
sbb
pushw
mov
pusha
pop
add
pop
imul
nop
pop
inc
sbb
jnp
call
jne
out
xchg
pop
loop
mov
cmc
push
js
test
lahf
and
inc
nop
adc
lgs
mov
insl
push
sub
pop
subb
adc
mov
or
mov
mov
sbb
sbb
fsubp
inc
in
dec
pop
sbb
aad
mov
jno
sub
or
mov
jge
stos
sub
mov
pop
mov
and
shlb
test
in
lods
imul
mov
es
loopne
mov
mov
hlt
rorl
mov
sbb
or
pop
jmp
pop
jo
dec
mov
mov
gs
push
cmp
push
insl
rolb
aaa
and
fisttpll
mov
pop
xsha1
cmpsb
dec
insl
mov
fcomps
aaa
lock
shrd
xchg
fnstsw
ret
mov
mov
into
sbb
mov
jmp
loopne
leave
jns
mov
pop
xchg
sub
out
push
call
mov
ds
into
rorb
push
mov
in
jecxz
sbb
pushf
pop
add
ds
test
test
pop
insb
sbb
imul
ljmp
dec
bound
mov
mov
jge
out
push
stos
xchg
subl
cs
and
jo
leave
mov
push
outsl
mulb
add
xchg
push
dec
leave
cld
push
mov
lcall
pop
mov
repz
fcomi
fildll
mov
popf
daa
adc
jl
adc
into
clc
push
out
jns
sti
sub
or
out
pop
sbb
or
scas
cmpl
repnz
jl
add
insl
adc
and
jo
mov
pushf
scas
sbb
pop
outsl
das
sarl
addr16
aam
sbb
jle
mov
mov
lock
mov
or
or
repz
orl
insb
push
testl
iret
hlt
dec
push
mov
iret
mov
jle
insl
div
fstpl
hlt
jae
aad
scas
mov
xor
push
jmp
cltd
testb
or
xchg
test
push
mov
adc
arpl
adc
je
cmp
test
inc
fsubrl
dec
xor
jle
sbb
hlt
outsl
int3
scas
push
lret
outsb
add
clc
stc
sarl
or
shrl
lahf
xor
imul
sbb
shl
pop
dec
mov
add
inc
leave
hlt
jns
call
nop
in
cmpsb
cli
in
fcoms
lahf
add
pop
sbb
or
cwtl
or
es
cmp
dec
idivl
cmp
stos
pop
or
sbb
jg
jmp
adcb
lret
int3
pop
dec
cmp
sbb
movsb
xor
sbb
or
xor
xchg
xchg
clc
push
mov
negb
cld
lea
sub
mov
cwtl
repnz
jae
out
scas
jnp
xchg
add
jecxz
shll
gs
leave
push
pop
lods
fistps
shrl
mov
pop
mov
lock
orb
rcrb
sbb
add
ret
xor
push
sub
jmp
xor
loopne
rcrl
enter
push
stc
inc
ljmp
sbb
leave
push
jl
pop
lods
jp
mov
iret
pusha
std
test
bound
mov
pop
vcvttss2si
inc
scas
dec
xor
pop
daa
fstpt
xchg
js
xchg
data16
push
mov
pop
jnp
test
adc
neg
addr16
mov
in
outsl
add
fiaddl
ret
jp
push
popa
and
cwtl
adc
jbe
sub
pop
sbb
lcall
rolb
push
sti
jmp
sbb
ss
add
jb
xor
test
aaa
jl
mov
lds
cwtl
sub
push
pop
mov
sbb
dec
cmp
push
sbb
xor
xchg
mov
shr
add
pop
or
push
clc
hlt
outsl
jns
mov
outsb
or
adc
push
std
push
xor
je
rorl
mov
inc
dec
ret
or
add
inc
insl
jmp
dec
jl
sbb
inc
push
lds
mov
mov
icebp
aas
repz
data16
mov
stos
inc
lahf
inc
mov
adc
xchg
pop
enter
ret
std
mov
stc
adc
pop
push
movsb
cltd
inc
sbb
inc
sbb
cmp
lds
xchg
adc
add
sahf
mov
insl
sub
pop
ret
addb
inc
orb
repz
xor
sub
rorb
adc
das
xchg
outsb
xor
repnz
and
jno
movsb
cs
dec
and
in
int3
pop
xorl
and
add
stos
xchg
mov
jns
gs
cli
dec
jns
jmp
fsubrs
cli
lods
mul
lahf
test
xchg
push
mulb
shlb
ficoml
outsl
movsb
scas
rcrl
test
jae
lahf
inc
arpl
mov
pop
pop
adc
shl
jge
push
mov
mov
mov
sbb
jbe
into
nop
pop
lea
pop
cmp
mov
data16
mov
jge
ss
lods
adc
loop
cli
aas
and
outsb
es
sbb
fnstenv
mov
sub
fmulp
xchg
pop
sahf
push
xor
push
add
out
and
test
mov
lahf
or
sti
xchg
or
sbb
sti
cmp
push
push
cmp
adc
sbbl
ss
mov
push
out
data16
les
fldcw
aam
inc
in
cld
jle
fwait
loop
cmpsb
jge
xor
cmp
push
mov
xor
dec
push
insb
push
mov
jb
adc
sbb
cmpsl
gs
mov
pop
sub
sub
mov
jnp
and
dec
xchg
ds
loope
test
jne
sub
ljmp
and
inc
sub
xchg
loopne
sub
fwait
daa
adc
jne
out
mov
and
enter
and
adcb
cmc
mov
cs
inc
outsl
lea
xor
pop
adc
in
pop
add
in
push
sbb
pop
xchg
xor
adc
xor
cli
movsl
int
push
in
scas
xchg
jge
adc
mov
xchg
push
enter
xor
jb
and
adc
cmp
aad
jmp
cmc
jns
or
daa
fwait
pop
sbb
out
icebp
sub
fisttpl
hlt
insb
rcr
lret
movsb
mov
gs
xor
push
sbb
sbb
test
push
dec
mov
nop
push
push
push
fcompl
clc
sahf
jl
push
gs
in
pop
int3
sti
pushf
loop
pop
addr16
popf
sbb
jno
les
repnz
jo
aam
fisubs
xchg
jecxz
lret
imul
jbe
rol
sbb
push
rcrb
addl
ret
cld
out
fldenv
pusha
xchg
out
push
push
xchg
and
pop
mov
imul
push
orb
fmuls
jne
mov
mov
mov
js
xchg
dec
aaa
pusha
add
cmp
push
repnz
out
jae
xchg
push
mov
fisubrs
dec
nop
mov
sub
loope
movsl
iret
rcrb
push
dec
lock
jo
pop
rorb
xchg
imul
iret
pop
movsl
fmulp
daa
popa
fdivs
add
arpl
sbbl
inc
pop
or
xchg
dec
sub
in
jl
iret
mov
jbe
xor
lods
aas
xor
lahf
test
sarb
mov
pop
pop
jle
xchg
in
aam
mov
lcall
push
and
in
sub
adc
aas
jo
imul
mov
jns
cli
and
push
fstl
out
dec
inc
xchg
cmpb
lcall
jle
data16
test
fcmovbe
je
enter
sti
jmp
sub
ret
dec
jecxz
cmc
aas
pop
push
xchg
lcall
addr16
xchg
dec
je
jae
xor
ljmp
je
dec
and
sbb
mov
out
push
push
jne,pt
cltd
inc
fs
add
cmpsb
sbb
pop
xchg
and
sar
mov
scas
add
iret
and
scas
dec
jp
inc
xchg
and
iret
jg
and
aaa
dec
rorl
daa
mov
cmpsl
out
sbbb
stc
dec
cmpsl
bound
cmc
xor
repz
push
sbb
dec
div
fwait
scas
xchg
adc
lea
mov
mov
ljmp
filds
jo
cmpsb
or
add
nop
fwait
popf
inc
push
mov
loope
or
int
aaa
sub
loope
ljmp
ss
pop
and
movsl
jns
mulps
pushl
scas
je
push
outsl
test
aas
push
bound
push
sub
shrb
pop
sbb
loopne
in
pop
cmpsl
fcompl
dec
xchg
test
mov
sbbl
stos
shll
pop
test
out
mov
ss
xchg
jmp
and
std
mov
mull
or
xchg
pop
and
mov
and
cmp
push
cmp
insb
add
pop
xchg
insl
lock
add
inc
push
insl
adc
pop
xchg
cmpsb
rclb
cmp
jp
in
jb
into
ljmp
popf
lret
je,pt
sbbb
push
lea
loope
pop
jp
ds
loope
fcomps
push
iret
or
out
int3
imulb
cmc
inc
jmp
outsl
in
test
pusha
fnstsw
ss
imulb
pusha
or
imul
cmp
fbld
popf
mov
and
ret
test
mov
mov
sbb
fisttpl
inc
lret
sbb
decl
mov
in
cmp
mov
push
test
test
xor
and
mov
ror
adc
insl
lods
mov
xchg
jecxz
push
repnz
bound
sbb
jecxz
test
pop
cmpsl
sbb
cli
inc
lods
adc
loop
popa
xlat
in
data16
loop
or
cwtl
jb
add
out
adc
movsl
dec
lret
orl
out
outsl
jge
les
or
notl
sar
in
out
adcl
and
xchg
jle
leave
cmp
cmp
popf
negb
inc
jl
cmpsb
xor
cmp
push
repz
mov
and
in
repnz
and
idivl
jno
clc
daa
sbb
mov
push
outsb
jg
int3
push
lcall
jo
aam
and
into
cmp
ds
and
xchg
out
ljmp
fmuls
imul
mov
lock
jg
popf
mov
je
pop
lret
loop
dec
xchg
out
mov
mov
xchg
xchg
cmp
pop
jge
xchg
add
jl
mov
push
fstl
dec
dec
cmp
mov
xor
sbb
add
jno
into
push
mov
getsec
pop
xchg
cwtl
push
push
mov
ds
jno
xchg
inc
cmp
and
mov
or
xchg
adc
fcom
stos
pop
test
cmp
jae
mov
xchg
ret
sti
mov
dec
mov
fdiv
stos
sti
xchg
dec
add
orb
pushf
dec
jg
xorb
mov
dec
jno
rorl
lods
nop
or
add
mov
adc
push
push
je
leave
fisubl
xchg
cmc
mov
xchg
aad
cs
rorb
cmp
les
aad
fcomps
or
arpl
scas
dec
dec
ret
and
or
shlb
and
xor
jp
xchg
scas
orb
mov
dec
mov
stos
dec
movsl
mov
cmpsb
pop
pop
dec
xlat
pop
mov
sbb
stc
cli
bound
jg
gs
sbb
cmp
stc
into
ret
push
scas
jnp
pop
pop
popa
jne
inc
adc
out
push
mov
mov
jp
stc
pop
mov
add
cmc
aad
xchg
lret
jnp
xor
mov
ret
inc
mov
jb
in
sub
in
xchg
xor
jge
nop
cmp
xorb
in
mov
out
pop
je
inc
imul
lcall
out
pop
lods
aaa
sub
loopne
pop
inc
or
or
pop
mov
jp
mov
mov
dec
mov
lret
jecxz
push
imulb
ret
or
imull
ret
loopne
subb
xchg
mov
inc
daa
xor
addb
lods
scas
push
popa
sbb
sub
in
lods
lret
mov
mov
or
out
pushf
jne
jne
in
push
in
imul
xlat
imul
mov
int3
cmp
je
add
daa
sub
fnstenv
sbb
sbb
lcall
dec
inc
ret
in
addr16
jns
mov
not
leave
pop
pop
xchg
popf
jo
push
mov
in
popf
loop
add
orb
xchg
dec
lcall
xchg
in
xchg
sti
jb
jl
jae
idivb
adc
xchg
fwait
dec
adc
xchg
dec
mov
sbb
repz
addr16
or
arpl
sbbb
enter
xchg
or
rorl
mov
in
pop
loopne
inc
inc
cwtl
xor
or
add
scas
clc
mov
lcall
sahf
add
pushf
pushf
dec
cmc
popf
dec
xchg
mov
outsb
test
cmpsl
mov
mov
dec
dec
and
sub
sub
jl
push
sti
jo
lods
push
aam
arpl
repnz
pop
fdivl
push
push
mov
daa
dec
and
adc
outsb
jae
xchg
pop
push
nop
leave
out
je
jne
ja
testb
cmp
aam
jmp
xchg
inc
addb
imul
dec
or
enter
pop
mov
cmp
fbstp
sub
pushf
arpl
add
inc
jae
scas
bnd
mov
jl
lds
addr16
jno
xchg
adcl
and
orb
ficompl
jbe
mov
xchg
mov
inc
mov
xchg
les
in
inc
pop
fcoms
imull
sbb
rcr
jnp
gs
push
loop
or
sahf
rolb
pop
arpl
pushf
imul
xchg
ja
sub
test
xor
dec
loopne,pn
hlt
test
mov
mov
sbb
xchg
out
mov
push
fistl
sti
insl
jp
fwait
int
xchg
or
xor
insb
pop
test
cmpsb
sahf
pop
loop
add
or
mov
or
or
inc
cmp
xchg
addr16
lock
lods
jecxz
movsl
push
stos
scas
inc
mov
jecxz
cltd
dec
std
adc
flds
bound
xor
or
stc
inc
cmpsl
cmp
add
xchg
xchg
leave
add
iret
sbb
and
iret
fiadds
out
in
mov
js
mov
negl
jl
loopne
sti
ds
mov
jo
lahf
add
in
data16
add
gs
mov
sbb
outsb
cmpb
pop
sbb
fistpl
jl
mov
push
in
push
std
push
es
cld
inc
repz
insb
push
std
mov
lods
in
in
jmp
cmc
rcll
mov
mov
xchg
movb
repz
adc
push
outsb
cmpsl
scas
mov
fcomip
jecxz
xchg
ss
outsb
out
in
hlt
xchg
sub
jg
add
ficoms
popa
adc
lcall
jb
pushf
adc
mov
mov
dec
insb
and
inc
sti
inc
jbe
mov
mov
add
adc
xchg
mov
dec
mov
out
adc
cmpsb
ja
aas
jbe
jno
rcll
or
mov
lret
pop
push
bound
pop
mov
mov
das
xchg
cmp
jno
ljmp
subb
cmpsl
sti
adc
cli
dec
push
cld
arpl
add
hlt
cmp
pop
push
addb
mov
cmp
stos
shrl
jg
clc
icebp
mov
push
mov
mov
mov
lds
jg
loopne
pop
pop
and
lret
dec
xchg
loope
ja
jp
xor
jmp
adc
les
jecxz
out
pop
lcall
out
jp
in
cs
ja
insl
repnz
xchg
dec
arpl
dec
fs
mov
xor
xchg
dec
add
inc
cmp
test
enter
xchg
adc
adc
iret
cli
cmp
sbb
lcall
clc
add
or
or
clc
lods
out
inc
pop
xlat
je
imul
pop
pop
mov
or
mov
hlt
xchg
add
dec
fwait
in
decl
jo
ret
adc
mov
xchg
sbb
adc
push
outsl
loop
lock
sarb
cltd
jecxz
fwait
mov
mov
mov
add
into
insl
xchg
out
mov
add
jecxz
ljmp
cmp
inc
inc
push
mov
mov
jne
sub
iret
loop
es
out
sub
lds
fiaddl
clc
dec
add
sbb
in
lret
mov
jbe
sub
jne
push
es
xchg
imul
push
lret
pop
pop
stc
mul
push
daa
mov
jecxz
mov
out
sti
lods
cmpsl
push
mov
add
push
cmp
stos
js
daa
movsb
dec
sti
mov
hlt
mov
mov
pop
aas
out
mov
hlt
in
xchg
mov
cmp
rcll
mov
addl
mov
into
pop
jmp
gs
test
fnstsw
inc
cwtl
dec
and
mov
imul
xor
and
sub
mov
xor
repnz
sbb
inc
inc
js
bound
cmc
xchg
inc
mov
cmp
into
push
push
push
jb
sub
pop
addl
shl
xchg
xor
mov
mov
jp
push
iret
pusha
addr16
int3
call
add
push
inc
xor
aad
sbb
and
and
and
enter
fadd
aam
rcrl
adc
sub
ja
out
pop
out
push
fcmovu
add
mov
shll
sbb
lods
sbb
lds
and
jmp
addb
xchg
add
das
pop
fcompl
adc
out
add
mov
je
sub
inc
pusha
xchg
sub
sti
xor
test
popa
push
jp
cli
jbe
adcb
sub
jmp
push
jo
push
xchg
outsl
jp
xchg
fldl
cmp
push
addr16
fstps
fnstenv
add
fstpt
sahf
mov
orl
movsl
jg
popf
mov
pop
xchg
rorl
rorb
adc
mov
cmp
inc
sbb
cmpsl
shl
push
or
sahf
sbb
mov
lcall
lcall
mov
sahf
sahf
loopne
loop
jl
add
flds
arpl
jg
iret
jo
sub
lahf
add
sub
inc
jl
or
movsl
prefetch
jp
or
sahf
xor
leave
xchg
roll
jmp
mov
xor
out
aas
insl
xchg
lods
repz
adc
add
adcb
arpl
cld
jae
subb
adc
bound
testb
sbb
int3
shll
incb
dec
scas
call
fsubrp
cmp
sti
and
inc
int
pusha
xlat
push
sbb
mov
xchg
push
fwait
andb
push
lods
addr16
and
mov
pop
mov
sub
fstpt
mov
inc
cwtl
or
and
outsb
lret
push
and
add
mov
and
mov
sar
push
sahf
scas
and
mov
fists
cmp
and
dec
sub
adc
pusha
mov
jl
xchg
and
fadd
xchg
cmp
pop
push
or
ret
jmp
stc
jne
out
cmpsl
std
jg
clc
push
mov
sti
add
data16
fstp
mov
outsb
enter
push
arpl
bsr
imul
lods
mov
lods
lds
jnp
js
push
shl
add
call
jbe
pop
cmpsb
lods
cmp
xlat
sub
sub
or
negb
arpl
push
sbb
push
push
push
ljmp
xlat
inc
ret
jmp
push
dec
mov
sbb
outsl
push
cmpsb
push
mov
jno
xchg
and
fstpl
sbb
adc
repz
xorl
mov
aad
sub
iret
mov
pop
fcomi
xchg
pop
cmp
xchg
xchg
out
mov
push
cmc
dec
and
popl
xchg
or
jne
cmp
xchg
mov
and
and
shlb
not
push
sbb
mov
inc
aaa
mov
jle
stc
mov
sub
aas
mov
add
pop
adc
xchg
inc
out
adc
xor
loope
je
sbb
pop
fstpl
xor
push
js
je
xlat
mov
adc
int
es
jle
mov
repnz
and
add
cmp
out
adc
fisubl
stos
pop
cmp
xchg
fnstenv
lret
lods
xor
inc
scas
adc
shr
lahf
xchg
cmp
inc
dec
popa
loope
int3
add
and
sbb
stc
aas
int3
sub
xor
lods
add
cmp
sub
add
cmpsl
dec
xchg
or
adc
call
out
mov
and
mov
jae
inc
js
mov
rcl
sub
add
and
test
fwait
jno
cmp
cs
adc
inc
vmovd
fisubs
out
int3
xor
call
leave
and
sub
ret
sub
leave
jb
ret
hlt
addr16
dec
xchg
mov
push
cmc
aam
pusha
pop
icebp
add
mov
and
mov
xchg
jge
push
jo
dec
sbb
and
call
jecxz
stos
mov
clc
push
mov
adc
ljmp
or
inc
pop
xchg
shlb
jl
js
lea
dec
xchg
fimuls
xlat
mov
dec
lds
push
mov
fmuls
push
mov
cwtl
test
pop
gs
scas
sub
xchg
out
push
dec
mov
test
mov
cmp
jp
das
push
xchg
jnp
mov
cwtl
scas
pop
cwtl
in
adc
aas
int3
aas
imul
add
push
mov
push
mov
cltd
lret
aas
pop
pop
leave
imul
loop
adc
inc
repz
inc
xchg
cwtl
stos
or
ss
aad
cmp
loopne
test
les
iret
out
lods
mov
insb
std
dec
adc
push
pop
in
shlb
mov
loop
push
popa
pmaxsw
mov
test
adc
jne
lock
ss
out
sub
sub
repnz
jb
sub
movb
int
mov
mov
mov
xchg
pcmpgtw
scas
fadds
popa
ret
push
fisttpl
into
movsl
mov
mov
mov
mov
mov
mov
imul
push
cmpsb
and
bound
inc
cltd
aaa
add
pop
sub
hlt
in
mov
add
and
loope
les
insb
jns
rep
jp
int
jb
xchg
sti
lea
enter
lret
das
mov
xor
lea
fldl
pop
clc
mov
jne
outsb
dec
mov
addl
push
inc
aas
sub
adc
imul
cli
outsl
mov
ret
leave
mov
cmp
out
add
dec
xchg
ret
gs
sti
lock
inc
pop
mov
fwait
imul
cltd
xchg
test
sub
sub
imul
adc
xor
sub
imul
das
jbe
xor
pop
daa
fldt
test
nopl
stos
and
inc
push
push
scas
mov
popa
jnp
pop
les
adc
cmp
ja
nop
lret
cmc
inc
aad
imul
sbb
iret
bound
mov
sbb
dec
repnz
cmp
xchg
pop
je
jnp
out
push
jmp
sbb
jge
icebp
sub
bound
pop
mov
inc
pop
or
or
daa
adc
pop
dec
mov
mov
testb
movsl
scas
bound
xor
dec
xor
sub
cmp
sbb
pop
sub
push
mov
rcr
imul
inc
xchg
pop
rorb
jno
cmp
test
push
jecxz
stc
sbb
jno
sub
imul
insl
push
cmp
mov
inc
aaa
add
mul
and
mov
cmc
adc
pop
push
xchg
mov
xchg
pop
mov
shll
lea
push
in
bnd
push
pop
or
sbb
in
ret
mov
lret
mov
dec
cmp
out
negl
stos
mov
fs
ds
insb
inc
and
mov
das
jne
mov
mov
insb
repnz
push
jno
stc
jnp
mov
push
or
push
in
mov
inc
out
dec
in
in
sti
cmpsb
xor
nop
and
ficomps
mov
lahf
mov
or
sub
lahf
cmp
mov
adc
push
jecxz
push
xchg
repz
loopne
ja
lret
and
fisubrs
or
push
dec
fs
xor
lret
movsb
jb
mov
push
inc
ja
add
ds
lods
pop
adc
out
popf
push
jp
inc
test
fstpl
or
fists
push
jbe
sti
lret
jmp
mov
add
mov
adc
lods
mov
xorb
and
out
pop
mov
lahf
add
pop
jns
jnp
enter
or
les
ljmp
and
test
je
jne
inc
jecxz
adc
lret
sti
inc
out
xchg
aas
stos
iret
movsb
and
or
jbe
daa
imul
sub
push
mov
fwait
daa
push
leave
sub
jbe
repz
jg
mov
mov
mov
stos
mov
popa
pop
sbb
lret
add
jp
aam
push
adc
inc
int
inc
mulb
or
inc
flds
in
shlb
jo
test
cmp
jo
xchg
pop
int3
popf
or
adc
imul
rcrb
repz
pop
inc
stos
sbb
inc
int3
popf
lcall
cmp
jnp
mov
dec
addl
xor
les
or
xchg
imul
adc
jp
sbb
or
mov
xchg
push
inc
jb
mov
es
stc
imul
pop
pop
sub
shl
mov
cmp
pop
add
mov
imul
sbb
int
fnsetpm(287
nop
cmp
lret
cmpsb
cld
stc
icebp
sub
or
imul
mov
mov
data16
mov
cmpsl
mov
in
cld
cmp
adc
push
sbbl
inc
xchg
data16
pop
xchg
jno
bound
repz
call
jno
in
pushw
mov
xlat
cld
or
loope
adc
and
cmp
notl
sbb
rolb
test
cltd
add
sub
les
xchg
out
sbb
add
xor
push
cmp
mov
lods
scas
es
sbb
sbb
lock
sbb
clc
jnp
jno
mov
pop
sbb
std
popa
out
pop
mov
mulb
xchg
std
bound
push
xor
xchg
sub
test
fmull
xchg
fld1
mov
aas
subps
insl
popl
out
test
scas
jecxz
or
sub
push
adc
vcvttss2si
out
xchg
xchg
gs
xor
into
mov
mov
mov
sarl
pop
in
mov
ret
sahf
pop
scas
mov
out
int
testb
xor
stos
in
and
sub
imul
push
inc
data16
outsb
in
pop
jg
sub
fnstsw
push
dec
cmc
les
adc
pop
cmp
test
rcr
xlat
inc
jmp
stos
movsb
daa
imul
enter
enter
aaa
daa
stos
push
inc
inc
adc
fwait
mov
adc
jecxz
mov
sti
push
dec
sarl
rcl
jg
cmp
xor
outsl
jge
stos
jp
clc
jns
dec
sbb
add
pop
cld
mov
add
push
or
sub
imul
pop
sub
aam
xchg
data16
xchg
and
loop
cmp
ss
lret
adc
mov
sub
add
jmp
fs
cmp
addr16
cmp
in
push
mov
mov
lcall
mov
aam
dec
mov
out
ret
aam
lods
or
shll
scas
push
jnp
in
ret
jnp
les
nop
mov
fcomps
out
cmp
dec
inc
int3
cmp
lea
fstpt
ss
test
xchg
add
xchg
mov
repz
aaa
lahf
xchg
cmp
icebp
jmp
movsl
fnstsw
daa
cwtl
mov
mov
icebp
aam
dec
dec
shrb
sti
cmp
jnp
jge
jno
push
lret
ljmp
add
mov
jmp
je
or
xchg
sahf
jnp
fcmovne
dec
and
pop
inc
fwait
pop
test
cmp
mov
adc
js
xor
mov
popf
adc
push
sbb
shr
jnp
pop
cltd
mov
cmp
mov
into
push
lret
aaa
stc
or
mov
pop
mov
es
xchg
sub
push
adc
push
jp
jge
sbb
clc
push
shrl
mov
push
imul
or
xor
das
loopne
or
inc
pop
or
mov
test
shrl
gs
xchg
push
js
or
and
sbb
adc
and
loop
test
cmp
hlt
cmp
out
jbe
outsl
mov
hlt
jbe
rclb
gs
lock
test
cmc
jae
push
push
push
and
mov
cmp
pop
add
or
icebp
pop
and
pop
sbb
pop
xor
loopne
pop
pop
arpl
sub
ss
mov
insb
ret
sbb
jmp
mov
rorb
or
call
cltd
xchg
fwait
fs
ret
int3
ljmp
add
in
cmp
divps
mov
outsl
inc
mov
ja
in
xchg
xchg
xchg
ljmp
mov
jb
insl
addr16
fs
popf
push
hlt
inc
cli
or
sbb
cmp
out
faddl
ret
mov
test
ja
orl
cmp
test
jl
mov
push
xor
mov
sbb
int
leave
leave
sbb
adc
jge
cmp
dec
repnz
pop
movsl
add
cmp
fdivl
insb
pop
rclb
xor
popa
and
pop
cmp
cmp
mov
inc
push
loop
in
popa
cli
lcall
bound
cmp
xchg
stos
inc
stc
in
or
aad
mov
lret
push
cmp
popf
in
insb
sbb
mov
adc
jne
dec
push
shrb
test
fs
jg
mov
jbe
je
mov
sbb
nop
stos
push
adc
cli
insb
ja
cmpb
ret
mov
imul
imul
xchg
call
leave
in
mov
dec
pop
testl
js
inc
or
or
mov
stc
shl
mov
pop
stos
dec
xlat
mov
xchg
dec
je
jge
mov
mulb
jecxz,pn
sub
mov
mov
sub
cli
fistpll
ret
mov
xchg
popa
insb
dec
pop
cmpsl
jl
fdivl
popa
sub
fdivl
pop
adc
aad
or
loopne
xor
or
xchg
push
icebp
jl
imul
adc
xor
push
popa
push
sub
es
push
push
or
adc
pop
inc
mov
inc
xchg
mov
jecxz
jp,pt
mov
sbb
ja
cmp
jns
or
loopne
into
cmpsl
orb
loopne
xchg
mov
dec
or
or
jp
push
repnz
pushf
flds
lahf
push
sbb
push
cmp
ret
iret
test
fsubl
push
ret
imul
sarl
cmpsl
push
shl
sub
popf
and
or
xchg
ja
push
mov
mov
mov
scas
out
mov
and
push
popf
popf
lret
jno
shll
xor
sub
inc
jle
movsb
mov
arpl
sbb
mov
pop
rclb
add
test
outsl
rorl
lret
fists
pop
push
or
stos
outsl
je
ret
inc
pushl
orl
sub
or
lods
dec
bound
xchg
inc
popa
insl
mov
jecxz
shll
enter
mov
and
inc
int
adc
sub
mov
jno
mov
fistpll
mov
out
test
fldt
repnz
incl
sub
js
or
push
inc
xchg
xchg
daa
jb
shl
int
mov
repz
mov
xor
fsubs
and
mov
test
fwait
inc
inc
xor
xchg
mov
js
in
adc
or
mov
push
repz
add
push
mov
cmpsb
and
pop
clc
fildl
sub
sbb
in
rcr
fsubs
std
pop
aam
jmp
pop
dec
pushf
in
sarb
push
imul
dec
jg
and
es
sbb
stc
jns
xchg
cmpsl
inc
sbb
cmc
sub
mov
cltd
sbb
cmp
outsl
mov
inc
push
inc
test
pop
push
add
test
xor
into
jle
mov
inc
sti
push
popa
xchg
dec
mov
sub
dec
testl
xchg
adc
inc
pusha
pop
notb
aaa
in
inc
cmp
cmp
xor
mov
imul
pop
popa
jle
lahf
xchg
movl
and
icebp
ret
push
filds
rcll
fadd
rcrb
or
cmp
sbb
mov
enter
jp
insl
roll
dec
daa
sti
inc
push
outsl
jae
push
jns
adc
push
push
aas
add
or
xorl
add
xor
daa
xchg
xchg
and
jg
ljmp
push
or
roll
adc
cs
pop
imul
mov
xchg
add
jbe
mov
ss
mov
cwtl
mov
push
mov
mov
sub
jge
decl
lock
push
push
and
bound
pop
movsl
stc
mov
mov
push
mov
stc
and
ds
dec
cli
xchg
mov
testb
pop
pop
popf
pop
popf
in
lret
clc
add
jns
and
pop
cmpl
movsl
in
rol
fstpt
mov
pusha
mov
pop
dec
sahf
addr16
sub
push
xchg
sbb
pop
ret
pop
js
dec
mov
inc
cmp
enter
gs
popf
or
aad
push
test
div
pusha
popl
ret
stos
mov
lock
mov
pusha
inc
add
xor
jle
lock
jne,pn
loope
addr16
adc
es
adc
dec
mov
push
pop
int
ljmp
adc
and
cmp
sbb
and
sbb
adc
lea
stos
adc
daa
in
lret
add
jecxz
in
jb
xchg
int3
scas
sbb
test
or
push
idiv
mov
pushf
jno
jle
imul
jno
add
sbb
je
mov
std
fmull
inc
sub
jno
mov
andl
dec
or
mov
outsl
jae
bound
inc
clc
mov
in
xor
mov
rcl
ret
stos
out
push
out
shll
xor
add
clc
adc
rcll
xchg
add
mov
sarb
xor
clc
divb
ss
movl
sbb
lahf
stc
adc
jb
loop
cmp
push
xor
cli
push
mov
mov
mov
xchg
jmp
es
and
sahf
adc
mov
rcl
ljmp
les
stos
addr16
fisubrs
sbb
addl
imul
popf
adc
mov
popfw
call
mov
fldenv
js
sub
stc
mov
into
dec
or
jle
xor
test
int
shlb
out
xchg
dec
fsubs
adc
cwtl
inc
push
scas
mov
repz
outsl
leave
pop
mov
jne
dec
call
test
cld
loope
fwait
pop
sarb
hlt
push
pop
cs
fs
sub
and
ja
mov
jne
inc
pop
cmp
or
fdivl
std
rclb
jo
in
lahf
cmp
sbb
popa
aas
sub
icebp
adc
dec
enter
mov
inc
and
cmp
or
dec
xchg
jbe
inc
icebp
adc
push
inc
mov
in
sub
mov
mov
rcrb
cmp
cmp
mov
mov
jmp
xor
push
rorb
xlat
dec
xor
inc
cmp
or
xor
cwtl
fmulp
testl
sub
leave
jecxz
xchg
or
hlt
int
gs
out
cmp
mov
and
lea
inc
pop
fwait
and
add
xchg
jbe
or
int
add
out
jb
ja
fstpt
int3
mov
jge
push
adcl
sbb
insb
shl
dec
dec
pop
shrl
cmpsl
notl
inc
xchg
adc
pop
popf
incb
dec
inc
shll
mov
cmc
sbb
test
xchg
xchg
clc
int3
cmp
dec
xchg
ja
insl
mov
inc
sahf
xchg
mov
packsswb
cli
cmp
iret
das
inc
repz
ljmp
mov
test
cli
push
mov
fmul
xchg
in
in
daa
xor
push
and
mov
xor
xor
adc
mov
div
lods
push
cmpsb
ljmp
push
mov
pop
fcompl
cmc
pop
fucomp
dec
mov
push
adc
xor
adc
mov
add
les
dec
mov
jo
mov
cmpsl
dec
mov
lcall
push
lock
pushf
cmp
xchg
sahf
xchg
aad
cmpsb
gs
jmp
mov
cmp
xor
iret
mov
lret
or
aaa
and
sti
xlat
jp
out
cmp
in
and
leave
add
adcb
mov
cmpsl
or
mov
jno
gs
aas
scas
enter
pop
es
lds
xchg
xor
loop
loop
fs
or
sub
mov
clc
cmp
cmp
cmp
ljmp
sbb
mov
cmpsb
lock
add
adc
adc
inc
mov
xchg
test
imul
call
cmp
repz
aas
cmp
ret
scas
pop
bound
out
jl
xchg
jns
test
pushf
aaa
jo
cmc
fstl
jecxz
sbb
gs
enter
lods
mov
testl
fistl
cltd
testb
mov
jmp
aaa
mov
test
idivb
les
out
data16
ret
sbb
adc
jp
mov
or
pushf
add
inc
xor
leave
and
rcrl
mov
cmp
lret
movsl
sahf
js
jae
push
push
pop
stos
mov
in
adc
mov
sahf
sub
mov
push
adc
jns
adc
call
sbb
dec
dec
loop
test
sar
in
std
mov
or
mov
pop
adc
ret
mov
pusha
stos
mov
scas
data16
popa
mov
sarb
mov
imul
mov
push
std
mov
stos
aaa
dec
pop
pushf
jp
lahf
lds
inc
jl
inc
test
xchg
sbb
and
scas
aas
dec
shll
movb
cmp
repnz
push
mov
stos
cmc
iret
shll
xor
and
xor
or
add
pop
repnz
pop
jmp
imul
jg
enter
sub
sbb
imul
ret
mov
hlt
dec
mov
fisubrl
cli
std
loop
mov
ret
mov
fists
xchg
aaa
ret
xchg
test
mov
xchg
mov
or
and
movb
sub
lret
hlt
xor
je
add
cmpsl
xorb
cli
aas
pop
push
bound
cmp
push
jo
push
insl
jnp
adc
mov
bound
and
xchg
dec
sub
sub
arpl
daa
bndldx
pop
mov
dec
mov
ss
inc
push
push
sbb
mov
mov
stos
xor
sub
loope
cld
jp
xchg
cmp
addr16
mov
xchg
test
fisubs
xor
cli
leave
pop
jp
jp
shll
cmpsl
aas
xor
movb
jno
mov
push
jns
iret
or
das
or
inc
cwtl
enter
pop
add
xchg
xchg
mov
pop
test
adc
test
sub
xchg
xchg
jl
xor
jl
loop
inc
adc
pop
sub
ds
shll
flds
adc
xchg
and
sub
into
mov
dec
mov
iret
or
jecxz
in
add
xchg
andb
aas
fcoml
out
shl
mov
movsb
gs
add
cld
jp
mov
pop
xchg
rorl
cmp
pop
inc
iret
out
std
lahf
sbb
pusha
stc
or
out
cmp
mul
jo
or
sub
inc
testb
mov
push
jns
push
loopne
ror
mov
aad
jg
adc
mov
sub
sbb
jg
and
in
icebp
ja
add
mov
jg
shrb
sub
ret
xlat
js
xor
cmp
ljmp
test
pop
pop
clc
pushf
add
sub
xlat
add
lea
imull
out
stc
push
fs
nop
pop
cld
xor
shrl
push
mov
popf
popa
xor
cltd
add
mov
sub
mov
dec
fiadds
scas
cmp
pop
insb
and
ljmp
out
imul
xchg
inc
mov
jmp
iret
pop
scas
lods
in
test
and
sti
movzbl
inc
mov
cmpsb
pop
push
sbb
int
jecxz
and
orb
jle
lea
mov
ret
pop
bound
lea
fdiv
sbb
sbb
shl
cmp
push
setge
int3
jmp
scas
xor
mov
mov
mov
xchg
insb
out
sbbl
add
jnp
mov
test
and
inc
push
jge
mov
dec
mov
repnz
jns
lea
jmp
hlt
dec
mov
xchg
aam
xor
push
cs
xlat
or
jmp
adc
ja
xchg
shlb
and
push
cld
jmp
enter
push
sbb
sbb
dec
push
repz
push
dec
adc
push
adc
leave
jge
lret
or
xchg
call
test
xorl
jne
jmp
shll
stc
out
cmp
sti
mov
mov
push
mov
and
dec
or
call
sub
sub
ficoms
imul
jno
mov
outsb
sbb
sbbl
push
and
mov
imul
or
je
xchg
addb
mov
xor
roll
cltd
aas
stos
je
sub
icebp
cmp
in
jb
out
fidivrs
sbb
sub
flds
cwtl
push
dec
das
dec
inc
mov
push
xchg
out
daa
jge
xor
cmp
out
pushl
push
sub
inc
inc
shlb
das
sbbl
sbb
pushf
cmpb
mov
pop
inc
mov
inc
stc
gs
fildl
jmp
fs
loope
mov
hlt
push
xchg
in
jns
aas
fldcw
andb
mov
jge
sbb
mov
inc
lret
popf
mov
dec
subl
adcb
loopne
mov
xor
mov
push
inc
popf
mov
scas
fcmovbe
in
mov
add
inc
imul
fdivl
cmp
testl
rcrb
fld
andb
int3
sbb
out
jg
fdivs
xor
dec
std
or
mov
and
xchg
push
movsb
out
arpl
adcl
adc
shl
or
sbb
and
jmp
out
push
push
lret
jmp
int3
sub
pop
dec
stos
dec
xchg
cmp
int3
dec
jmp
cmc
push
push
add
xor
push
mov
lds
pop
in
test
out
xor
push
lret
xchg
icebp
xchg
jmp
and
lret
mov
int3
add
imul
clc
mov
cwtl
hlt
pop
popf
push
sub
jge
pop
jae
and
jp
scas
mov
mov
or
cmp
fidivrl
ret
pop
xor
sarb
out
mov
jo
sub
in
and
dec
push
das
aas
sbb
out
out
adc
sbb
cmp
xchg
cmp
test
jle
sbb
push
ds
dec
mov
subb
sahf
push
mov
cmp
gs
sbb
jno
jne
repz
in
mov
scas
inc
mov
inc
je
sbb
push
ja
ja
les
sarb
aam
push
add
cmp
mov
inc
jg
pop
pop
sub
mov
and
adc
mov
cmp
sub
mov
les
adc
sbb
add
mov
jo
fldcw
jecxz
inc
ljmp
stos
jecxz
xchg
sub
jle
push
ja
stc
xor
nop
jg
mov
js
pushf
sub
das
push
jl
lods
testb
cmovl
push
aad
inc
ljmp
push
subb
cmp
sbb
data16
std
call
dec
xchg
xchg
movsb
dec
xchg
lock
pop
push
mul
jl
mov
dec
shrb
ljmp
and
adc
test
lds
pop
push
pop
sbb
inc
divb
pop
incl
mov
mov
lea
and
jecxz
daa
sbb
ja
push
in
dec
aaa
pop
imul
insl
cmp
lahf
or
inc
enter
pushf
pusha
sahf
std
fcmovnbe
enter
sub
jbe
jno
es
pop
push
lea
mov
mov
or
bound
pushf
mov
sub
push
and
jg
xchg
push
popa
add
into
repnz
sbb
ja
dec
andl
movsl
inc
sub
das
out
pop
sbb
loopne
lret
lret
sub
dec
and
jns
jo
lahf
cwtl
stos
xor
sbb
push
sbb
cmc
xchg
in
inc
and
pop
add
and
bound
jo
ds
push
cmovle
jae
pop
mov
test
movsl
pop
mov
inc
int3
sarb
sub
lods
or
shl
and
les
clc
lret
mov
subl
fsubp
stc
pop
jge
push
mov
jns
fists
pop
repz
and
and
mov
lods
cmpsb
insl
inc
or
or
xchg
jmp
mov
rorb
aad
mov
jg
pop
xor
ss
sub
pusha
loope
adc
pop
jl
int3
cld
call
jl
fs
pop
inc
cmpsb
mov
sbb
dec
jbe
pop
add
xchg
or
test
aas
mov
popl
jmp
js
cmc
lds
mov
jo
cmpsl
sbbl
push
fcomps
sbbb
sahf
sub
clc
mov
je
lds
pop
imul
push
mov
dec
xor
bnd
and
sub
add
ret
inc
fnstcw
mov
adc
mov
lods
int3
add
orl
popl
ja
adc
loop
outsl
je
xlat
ret
rolb
cmc
aaa
xlat
rclb
stos
lock
add
ss
adc
ja
xor
je
push
jge
arpl
pop
sub
dec
jae
pop
xchg
mov
das
and
pushf
jns
pop
in
cld
cltd
lret
mov
sub
inc
add
push
insb
icebp
mov
and
dec
fisttps
mov
push
movsl
data16
dec
ds
lret
inc
jnp
jle
js
xchg
xchg
inc
call
jp
mov
jne
cld
jp
scas
movsl
sub
xchg
jp
fistl
cltd
xchg
sarb
adc
shl
mov
cmpsl
scas
iret
fwait
xlat
icebp
int
push
cli
push
sahf
js
rclb
ja
fucomip
inc
pop
mov
hlt
popf
pop
les
add
fdivrl
aad
jns
iret
js
lods
imul
das
pop
push
xchg
xchg
test
aam
ljmp
inc
movsl
fsubs
mov
out
cmp
push
pop
out
movsb
mov
sub
sbb
mov
in
xor
gs
int3
pop
dec
dec
ja
dec
addl
or
iret
ja
jl
aas
sbb
mov
xor
add
sbb
adc
ljmp
push
or
push
sbb
lods
adc
xchg
jge
jns
out
add
sub
lock
pusha
aad
push
mov
cltd
jmp
or
jp
pop
xchg
cwtl
lcall
xchg
fisubl
xchg
or
push
lcall
or
xor
test
or
xor
pop
mov
leave
push
bound
sbb
cmpsl
out
bound
mov
adc
test
adc
xchg
sub
mov
sahf
lock
xchg
aaa
jo
or
xor
adc
adc
jg
push
cli
sbb
mov
push
inc
popa
in
or
rol
sbb
fdivs
sub
add
mov
notl
adc
xchg
cmp
mov
jecxz
and
jg
js
test
ja
inc
sbb
xchg
les
popa
clc
cmpsb
imul
adc
enter
imul
add
and
loope
enter
sbb
mov
pusha
pop
and
adc
mov
addr16
in
lock
outsl
testl
mov
shlb
ss
repnz
cmpsb
imul
ljmp
cmpsb
mov
shrl
push
push
add
mov
std
add
mov
ja
sub
loope
mov
into
push
ret
test
in
cld
adc
or
add
inc
incb
movsl
stos
jecxz
ds
dec
jb
mov
inc
cld
dec
idivl
test
jae
jge
pop
mov
jbe
imul
push
nop
cmp
mov
pop
cmp
movsl
ficomps
test
pop
add
pop
test
stc
xlat
xchg
cli
fs
jns
cmp
gs
inc
mov
fwait
shll
jnp
mov
mov
es
popf
mov
cmp
ja
test
or
push
or
sbb
mov
xchg
ret
incl
add
popa
leave
arpl
aaa
pop
es
icebp
mov
cmp
stos
adc
mov
fimuls
aam
adcb
pop
mov
sbb
hlt
lds
pop
or
psubd
call
jge
mov
pop
popa
lret
cld
pop
int
jo
fadds
push
ss
es
ja
jge
test
ret
add
sub
mov
xchg
mov
xor
hlt
imul
jmp
push
test
jg
push
arpl
cmp
icebp
lock
aam
mov
jbe
pop
int
sahf
js
shrl
and
pushl
arpl
stc
out
ja
jge
add
in
bound
test
dec
sub
xlat
rcrl
or
pop
inc
push
popf
pop
aam
aam
cmp
mov
and
cmp
lret
push
push
cmp
jmp
mov
mov
jo
and
xor
fstpl
cmp
mov
fstp
jl
sub
inc
test
addr16
mov
pop
mov
cmp
dec
rcll
cmpsb
xchg
mov
add
stos
dec
ss
test
loopne
fldt
iret
dec
cmc
shrb
shlb
jecxz
xchg
inc
or
stos
cwtl
not
inc
push
scas
push
outsl
push
fcomps
jmp
mov
in
outsb
adc
mov
stc
loop
jne
mov
ss
div
popa
or
insl
arpl
push
add
jp
cmpsb
movsb
test
cmp
jae
add
data16
xchg
jo
sub
jne
jae
and
mov
mov
ljmp
pop
cmpl
jae
jle
dec
pop
lcall
cwtl
ss
cmp
pop
mov
pop
inc
mov
rcrl
into
test
sub
cmp
push
xchg
out
addl
cmp
pop
inc
mov
rcrb
mov
jnp
push
mov
mov
xor
adc
dec
sub
fcoml
mov
pop
push
stos
adc
ds
adc
inc
cli
adc
inc
js
mov
rorl
lock
das
add
jle
subb
jo
dec
popf
jecxz
jo
push
adc
mul
mov
or
sbb
adc
xchg
cs
mov
gs
ljmp
adc
sbb
push
sti
adc
dec
and
in
cmp
call
imul
aas
jmp
jne
ss
push
clc
rcl
sub
xchg
inc
fnstcw
sbb
push
cmpsb
mov
stos
out
inc
fwait
lahf
inc
out
and
sarb
test
jge
out
cltd
pop
pop
pop
mov
cltd
in
lods
aam
mov
inc
push
sbb
mov
push
mov
test
jle
in
mov
ds
pushf
push
add
fiadds
sbb
cmc
xor
clc
cmpb
mov
in
mov
inc
jmp
shrb
imul
or
and
and
push
pop
xor
mov
dec
dec
pop
call
push
jmp
sbb
nop
jmp
cmp
dec
pop
call
and
lods
cmp
popf
lcall
jo
ret
add
xor
push
cmp
pop
xchg
test
pop
dec
pop
xchg
ds
jmp
je
mov
cli
mov
js
mov
xchg
clc
ljmp
pop
mov
shlb
aas
inc
adc
and
jb
push
xchg
or
mov
fdivr
adc
stc
test
pushf
mov
outsl
mov
stc
fisubrs
inc
loopne
enter
or
lret
mov
push
hlt
test
fisubs
lcall
mov
andb
adc
cmp
mov
jae
sub
xchg
je
mov
es
cmp
sarb
pop
testb
push
lock
or
or
mov
push
into
push
cltd
mov
icebp
cwtl
jno
sub
push
jmp
shlb
cwtl
scas
aad
int3
mov
pushf
outsb
push
push
sub
cwtl
pop
xchg
popl
sub
sub
jg
das
push
xchg
mov
dec
inc
int
loop
test
inc
clc
test
push
mov
mov
loop
das
mov
gs
fiadds
int3
mov
loop
cld
dec
outsl
or
sbb
add
push
scas
pushl
das
fsubs
lods
jg
or
inc
sbb
sbbb
arpl
xchg
out
addr16
pushf
repnz
mov
add
pop
aad
adc
push
add
xchg
add
or
xchg
pop
repz
mov
push
sub
xchg
stos
js
stc
jmp
rcr
ret
stos
dec
or
stc
sti
or
movb
jp
jp
scas
clc
cs
lret
xor
dec
jb
pop
sub
lcall
xchg
int
pop
out
outsl
xchg
mov
loopne
mov
jl
cwtl
ja
lret
fcompl
jle
jno
inc
xor
jmp
out
ret
stos
aas
or
pop
add
sub
popf
push
and
out
push
test
scas
mov
orl
fstl
cld
repz
stos
clc
mov
pushf
dec
mov
repnz
arpl
adc
cltd
int3
cmpb
pop
cli
add
ja
iret
outsb
es
jo
inc
je
loopne
mov
pop
pop
mov
lret
int3
dec
int
imul
daa
sbb
inc
jmp
shl
pop
arpl
imul
lods
cltd
mov
add
xchg
lods
ficoms
js
rcrb
xchg
fwait
outsb
shl
inc
fwait
test
in
ret
pop
fimuls
iret
mov
pop
cli
or
add
xchg
adc
dec
insb
js
and
out
xor
and
inc
shll
shlb
ret
sub
aad
lods
int
sbb
lock
inc
sbb
sbb
dec
mov
add
jmp
jmp
fs
push
dec
ja
xchg
inc
jp
imul
in
rcrl
enter
loopne
fistps
ljmp
cltd
sub
jae
push
faddl
clc
add
xor
test
aaa
lcall
int
adc
mov
xchg
or
mov
cwtl
popa
loopne
negl
push
push
sbb
add
popa
inc
add
and
xchg
aad
push
or
push
inc
into
fidivrl
fisubs
xchg
daa
cltd
add
push
divl
aaa
loope
mov
mov
out
mov
pop
aad
jb
int
mov
pushf
and
sbb
adc
adc
sub
aad
pushf
mov
adc
or
aas
jbe
repnz
sahf
nop
aaa
dec
decl
jecxz
fwait
sbb
iret
push
or
ret
out
fcomi
sbb
into
outsl
xor
inc
cli
shll
and
dec
mov
insl
cmpsb
mov
mov
jns
xchg
test
cmp
sbb
mov
push
inc
je
les
adc
movsl
jae
sub
jo
and
inc
int3
push
mov
aam
sbbb
mov
hlt
out
fmul
ja
shl
adc
mov
into
hlt
sahf
fiadds
push
ret
adc
sbb
shrb
iret
xor
xchg
sub
pop
mov
push
sbb
dec
andb
outsb
fwait
outsb
xchg
popa
pop
cmp
mov
mov
fisttpll
idivl
xor
test
sahf
fisubrs
xchg
pop
mov
notb
shr
mov
sub
out
cmpsl
mov
xchg
test
ret
dec
cwtl
inc
sti
int3
sub
popa
adc
or
stc
mov
mov
jmp
mov
inc
jp
mov
outsb
xor
shrl
mov
add
arpl
enter
je
pop
clc
sbb
dec
mov
js
dec
mov
enter
ss
pop
or
idiv
adc
sbb
dec
push
lock
imul
push
push
pop
dec
push
stos
lahf
dec
or
in
in
jle
sbb
push
shll
bound
mov
loope
icebp
push
xor
mov
jg
push
sub
mov
dec
add
adc
jns
jb
xrelease
and
sub
adc
imul
dec
fstpl
mov
sbb
or
leave
inc
adcb
push
xchg
xchg
movsb
mov
cmp
das
dec
sub
call
and
aaa
aaa
and
add
mov
xchg
xor
in
out
cmp
in
and
jne
cmpsb
mov
pop
mov
into
pop
dec
outsl
and
mov
adc
push
cmc
insb
jns
adc
mov
test
cmp
sbb
inc
xor
jb
subb
lret
pusha
or
subb
pop
in
xchg
jbe
int3
out
xchg
inc
mov
add
leave
xchg
xor
mov
pop
jbe
out
cmp
adc
inc
repz
sub
push
add
xlat
mov
ret
daa
dec
fidivrl
movsl
mov
sub
in
movsl
leave
inc
add
hlt
mov
mov
xorl
mov
enter
fwait
das
mov
ljmp
je
and
lahf
neg
cmp
adc
push
in
fisttps
iret
xchg
mov
aas
push
aam
rcrb
mov
xor
imul
popa
vpminsw
adc
cmp
cltd
mov
enter
and
xchg
mov
mov
mov
xchg
and
and
dec
testl
push
popf
jp
mov
scas
ss
cmp
outsl
aaa
dec
rcrl
mov
insl
xor
adc
xchg
pusha
push
cltd
ljmp
cmp
and
icebp
jge
je
add
ds
jg
ss
jb
xchg
xor
imull
out
mov
lods
or
sti
pop
pushf
sub
fbstp
push
in
sbb
jg
out
fisubs
rol
pop
out
ljmp
sti
fsub
loope
imul
ljmp
jbe
ljmp
and
dec
fnstsw
rolb
dec
lds
loopne
je
xor
xor
enter
divps
mov
push
dec
jne
push
in
std
lods
push
stos
mov
out
ja
lds
leave
outsb
and
adc
dec
dec
xchg
lods
xchg
sahf
dec
add
xchg
mov
out
cwtl
jle
rcll
mov
mov
movzbl
mov
pushf
mov
test
pop
cwtl
lds
scas
clc
jbe
xchg
dec
cmp
pop
into
xchg
sbbb
pop
pop
sbb
xchg
mov
cmp
mov
mov
push
adc
neg
imul
jnp
in
xchg
inc
mov
test
dec
inc
rclb
fnstcw
mov
sbb
mov
mov
pusha
jle
sarb
cmp
cmp
or
popa
jae
mov
nop
ja
ret
scas
call
jl
pop
fmull
sbb
das
into
addb
jp
add
sbb
jp
mov
and
fst
xor
nop
and
iret
adc
sarb
add
inc
std
mov
add
mov
aad
cmp
sub
inc
into
fdivs
pop
sbb
jbe,pt
enter
adc
jmp
clc
ja
ror
lock
out
push
je
cmp
add
inc
add
or
ja,pt
cmp
test
hlt
mov
xchg
fcomps
push
iret
stos
sbb
jle
ja
out
scas
or
adc
fdivs
xchg
dec
jns
cmc
ss
mov
adc
mov
fs
adc
mov
cmpsb
addb
or
jne
rclb
stos
mov
test
lds
pop
loop
clc
xor
and
popa
ret
pop
test
mov
rclb
cli
sub
add
inc
pop
pusha
call
test
inc
and
xchg
adc
sbb
test
rcrl
add
repz
gs
sub
jg
jl
popf
cltd
into
movq
leave
jnp
in
pushf
insb
fcoms
mov
inc
jns
or
mov
xchg
scas
lea
aaa
fnop
inc
jle
out
out
fisubrs
out
cmp
arpl
pop
xlat
inc
mov
adc
je
clc
nop
pop
and
je
mov
inc
push
fcmove
rcrb
jle
or
sub
fldenv
inc
rol
push
mov
cmpxchg8b
int
sarb
pop
int3
sahf
xor
scas
jbe
sti
mull
or
fidivrs
rcll
je
in
and
imull
cltd
adc
imul
dec
mov
jmp
xor
push
leave
push
lock
fcmovnu
gs
sub
and
inc
fimuls
xchg
xchg
shlb
mov
cmpsb
dec
adcl
rclb
iret
xor
sub
pop
imull
dec
hlt
jg
sbb
das
or
fs
popa
adc
jae
adc
nop
je
fadds
lods
xchg
movsl
xor
leave
mov
add
ds
ret
neg
jne
call
sar
jl
ja
lock
fcomi
jne
fmull
mov
aam
incl
setnp
jl
xor
sbb
sbb
mov
xchg
xchg
mov
inc
inc
lea
sbb
mov
scas
ljmp
xor
aaa
ret
daa
dec
mov
jno
pop
lods
scas
push
xor
in
sub
mov
inc
aaa
mov
xchg
leave
or
sbb
loopne
sub
add
jge
jns
and
jo
push
lea
ret
dec
fdivs
inc
pop
addb
or
int
test
loopne
das
or
imul
push
xor
mov
lret
aas
cmp
fs
sbb
dec
pushf
mov
sub
cwtl
filds
lds
in
mov
pop
xchg
roll
in
add
repz
mov
movsb
idiv
pop
loop
push
adc
stos
les
inc
jno
in
gs
popa
fdivs
mov
aas
xchg
mov
sarb
incl
cmpsl
rorb
cmp
mov
insl
sbb
scas
add
mov
test
sbb
sbb
cmc
cmp
decb
in
inc
xchg
push
scas
popf
pusha
clc
popa
shrb
mov
sbb
jl
lret
arpl
les
movsb
mov
movsl
fsub
cmp
adc
addr16
add
nop
rcrb
into
xor
dec
add
pop
sti
push
pop
jae
jp
mov
mov
dec
mul
lret
cmp
repz
jle
sbb
stc
cmc
andb
inc
add
aas
jne
mov
and
arpl
sbb
pop
inc
iret
enter
adc
mov
jb
ss
xchg
rorl
std
mov
pop
sbb
xchg
into
pushf
xor
push
and
fwait
daa
xlat
pop
imul
test
fidivl
mov
pop
pop
or
insl
add
cmc
fidivrl
or
call
mov
mov
sub
fmul
jg
popf
cs
xor
mov
test
mov
inc
mov
scas
leave
mov
push
adc
out
mov
xor
lods
xor
hlt
lret
arpl
cmp
sbb
dec
call
fidivs
pop
xor
test
mov
scas
xchg
test
or
sbb
ficomps
cmp
xchg
pop
ret
je
xchg
inc
sub
mulb
xchg
xlat
sub
dec
mov
or
cmp
dec
inc
xchg
test
adc
daa
sbb
xchg
sub
rclb
inc
sub
adc
popa
stc
push
dec
inc
mov
mov
and
push
pop
push
lahf
in
sbb
pop
fdivs
dec
sub
xchg
mov
fxch
scas
mov
cmpsl
dec
movsl
std
inc
mov
jge
gs
stc
daa
xor
movb
cmpl
mov
ss
and
sti
jmp
scas
leave
cwtl
sahf
out
stos
icebp
or
push
mov
jno
mov
pop
push
xchg
aam
mov
pop
lock
add
fists
push
fadd
jno
andl
je
pop
inc
andps
or
and
les
adc
loopne
in
sub
sti
iret
push
out
and
sti
xorl
inc
pop
pusha
mov
fdivrp
mov
popa
jbe
adc
push
addr16
inc
pop
and
sbbl
jne
fidivl
sub
fisubl
fldt
es
adc
adc
in
xor
jmp
sbb
push
xor
sub
imul
mov
and
add
pushf
fiadds
popf
orl
lcall
add
out
inc
mov
loopne
xor
jg
dec
and
cli
adc
mov
jae
les
push
cmp
js
aas
pop
jnp
or
add
inc
cmp
cwtl
int3
mov
or
aas
movb
mov
icebp
xor
lea
sub
mov
push
xchg
mov
divb
xor
xchg
inc
adc
jns
jne
mov
lcall
scas
sub
sbb
lea
in
xor
stos
cmp
test
pop
add
inc
js
outsb
jne
jge
or
popa
out
pusha
lea
mov
gs
inc
cld
jne
outsb
mov
mov
sbb
cmp
pop
rolb
mov
mov
lcall
and
dec
mov
sbb
enter
ja
sbb
cmc
mov
pop
mov
mov
cli
cmp
xchg
xchg
mov
inc
js
and
mov
inc
aam
fmull
icebp
sub
xchg
loope
cmpsl
push
adc
or
xchg
ss
test
push
cs
or
inc
call
xor
jo
add
add
mov
imul
push
jno
or
or
jecxz
notb
icebp
sub
ja
adc
jae
out
xchg
insb
cmp
mov
das
mov
dec
popl
mov
bound
sub
andl
jne
xor
jae
adc
pop
sbb
xchg
mov
adc
inc
rorb
pop
jmp
fwait
aad
xchg
and
sahf
mov
cmp
into
mulb
or
into
mov
in
repnz
repnz
rcrb
push
and
mov
fdivrl
mov
jl
push
cmp
sub
insb
aam
mov
cmp
adc
enter
test
add
inc
fcomip
mov
mov
lahf
mov
outsb
movsl
xlat
jns
sbb
jne
loop
dec
pop
mov
add
cwtl
fucom
or
jp
enter
neg
cmp
loope
pop
leave
enter
insb
out
dec
push
mov
jne
mov
mov
mov
adc
xchg
test
xchg
jmp
mov
mov
pop
cltd
aaa
test
xor
pmullw
lcall
mov
cmp
xchg
or
cmpsb
iret
mov
inc
cmc
push
fsub
and
mov
imul
inc
data16
sbb
pop
pushf
mov
repz
iret
adc
lods
sub
out
xchg
aad
std
mov
ljmp
inc
xor
movsl
mov
or
mov
mov
fisttps
cmpsb
out
cmpsl
idiv
or
icebp
lahf
and
push
je
adc
or
dec
jge
mov
jg
repnz
ds
leave
jnp
cmp
enter
sub
rcll
shl
inc
xor
clc
repnz
dec
rorl
jns
sbb
cld
popa
push
std
mov
ja
adc
popf
fdivs
dec
cmc
jnp
mov
inc
or
loope
sbb
xchg
and
hlt
rol
adc
jne
cmc
xchg
out
arpl
xchg
sub
xor
push
fwait
iret
repnz
inc
into
mov
ljmp
push
mov
cmp
jmp
push
xchg
addr16
pusha
mov
inc
sbb
cmp
ss
jo
inc
lods
sub
or
sbb
lret
mov
cwtl
jbe
aaa
mov
add
imulb
xchg
popf
or
inc
daa
jecxz,pt
out
clc
ja
sub
dec
or
mov
fnstcw
pop
test
loop
out
xchg
add
xor
pop
and
jbe
pop
test
or
xor
mov
xchg
lea
xor
lret
hlt
mov
mov
imul
mull
movsb
sub
mov
dec
insl
push
std
cmc
adcl
push
orb
ret
js
test
ja
mov
fstl
jmp
or
int3
adc
mov
enter
imul
es
insb
xor
aam
pop
jne
pop
inc
cmpsb
sub
pop
fs
das
xchg
cmpsb
or
mov
push
inc
in
or
andb
mov
mov
cmp
sbb
mov
cltd
pop
xor
jno
icebp
ficoml
sahf
lds
je
ja
or
jae
adc
push
sti
lods
mov
xchg
jbe
pop
add
push
cmp
adc
mov
fwait
sub
ret
cmp
lcall
xchg
jne
push
pop
xor
mov
pop
testb
out
push
jnp
ja
dec
mov
sub
stos
and
fwait
mov
test
push
xor
inc
mov
inc
scas
pop
loope
adc
sbb
in
push
aad
mov
pop
movsb
and
data16
jle
sub
out
movb
and
fstp
loopne
ja
pop
mov
imul
pop
aam
faddl
outsb
or
xchg
and
push
scas
cmp
dec
jp
sbb
mov
sbb
rcrl
cld
jmp
stos
xor
insl
fwait
mov
jmp
lods
fwait
xor
out
pushl
dec
in
jo
jmp
test
sbb
jle
cmp
movsl
out
dec
in
imul
gs
add
mov
fildl
xor
fisttpll
pusha
xchg
fdivrs
aaa
pop
mov
popa
add
dec
repz
mov
jae
mov
in
xchg
sbb
adc
leave
ficomps
bound
xor
add
jg
push
ds
repnz
pop
mov
daa
cmpps
in
lahf
xor
inc
dec
or
fisubrl
cli
iret
or
pop
cmc
arpl
fistl
xchg
jmp
daa
xchg
int3
outsb
loopne
cmp
pop
xor
mov
cmp
jnp
ljmp
jl
sti
movaps
test
cli
stos
aam
and
jns
out
mov
xchg
mov
pop
pop
fcmovne
push
lea
adc
pop
xor
cmc
in
ljmp
pushl
mov
sbb
xor
pop
mov
clc
iret
and
out
movb
sahf
lahf
and
sbb
aaa
pop
cwtl
lock
push
je
mov
pop
lcall
imul
clc
jmp
push
mov
sub
pop
imul
or
dec
xlat
lds
bound
cli
xchg
test
xlat
push
hlt
ror
lcall
movl
sti
je
mov
popa
or
pop
add
jl
mov
xchg
mov
xchg
mov
popa
push
mov
lods
movsl
iret
cmp
push
sarb
sub
mov
outsb
sub
jmp
in
mov
loopne
and
lcall
dec
cmpsl
xchg
rcrb
ror
leave
or
jmp
pop
movsb
std
je
mov
int3
mov
int3
bound
xor
cwtl
fstl
xchg
xor
ds
icebp
lea
push
sub
fdivl
pop
loop
cmpl
stos
dec
scas
popa
mov
sub
les
in
in
sub
ret
xchg
cmp
stc
rcll
dec
fmuls
adc
dec
adc
dec
clc
addr16
adc
push
loopne
push
lock
in
fwait
mov
jnp
adc
lock
in
xor
sbb
mov
mov
sbb
mov
xor
movsb
add
in
add
adc
imul
in
push
jo
or
movl
lods
jno
movsl
xchg
dec
push
addl
and
ds
mov
push
shlb
insb
in
mov
fdivr
or
sbb
xchg
pop
cmpsb
mov
jle
in
movsb
data16
mov
xchg
jbe
sub
cmpsb
jle
lcall
cs
xorb
xlat
rcrb
lods
movsb
jl
mov
pop
or
mov
in
stos
xor
outsb
cmp
inc
jecxz
pop
mov
cmpsb
test
shlb
scas
movsb
jb
sarl
andl
cs
mov
out
clc
mov
lea
cmpsb
and
inc
xchg
dec
out
mov
sbb
popa
adc
adc
mov
mulb
pusha
mov
repnz
jnp
ret
pop
out
aas
enter
lds
mov
mov
pop
test
pushf
mov
clc
pop
push
pop
data16
cli
sub
sbb
rorl
xchg
push
pushf
sbb
pop
ds
aad
and
gs
adc
cmp
cmp
mov
cmpl
inc
roll
lea
iret
rorl
push
test
mov
mov
lods
sbb
stos
adcl
int
fmull
xlat
lods
negb
jnp
lds
sub
xor
test
fmull
push
stc
imul
movsb
fcoms
mov
roll
push
lods
dec
outsb
cmp
cltd
stos
dec
adc
adc
fisubl
push
addr16
fsubl
sbb
lock
xchg
fnstenv
mov
fwait
mov
sbb
dec
mov
shlb
mov
rcll
and
lods
push
insb
daa
stos
sub
xchg
cmc
inc
jecxz
fnstenv
dec
lahf
cmp
repz
imull
inc
pushf
mov
adc
push
cwtl
cmp
xor
mov
hlt
fs
inc
mov
or
dec
xchg
popf
test
adc
adc
xor
decl
clc
dec
aad
push
jbe
mov
imul
int
int
sbb
shlb
mov
push
out
dec
jp
cs
mov
repnz
pop
out
scas
adc
outsb
gs
xlat
inc
sbb
adc
aad
xor
in
mov
jg
xor
mov
leave
mov
mov
test
sar
pop
shll
jge
arpl
push
sub
data16
aas
add
sbb
jnp
scas
push
cmp
aad
loope
insb
fs
pushf
inc
fisubrs
pop
fistpll
cwtl
insl
movb
ljmp
sahf
and
or
fdiv
jle
ds
xchg
ds
in
jno
fildl
mov
pop
insb
lods
out
pop
aam
mov
insl
dec
pop
add
push
ds
lcall
sbb
or
sarl
repz
les
dec
push
sbb
test
inc
mov
ja
sub
je
cmc
jle
pop
jp
cwtl
push
cltd
outsb
aad
mov
stc
mov
fcoml
fdivl
outsl
shll
cs
mov
cld
icebp
push
ljmp
jbe
daa
nop
jno
loope
push
sarb
and
push
and
je
lret
xchg
hlt
dec
mov
in
imul
inc
rclb
je
popf
inc
pop
pop
in
inc
loope
mov
push
fdivs
ret
fs
in
cli
cmp
pop
adc
sub
xchg
mov
ret
in
imul
loopne
ror
mov
and
andb
popa
pop
adc
leave
movsl
nop
fs
jo
lret
out
or
clc
fisubl
or
dec
jmp
aas
jno
or
jns
in
cmpsb
or
mov
xchg
fdivrs
mov
movsl
fimuls
out
xchg
shlb
popf
mov
cmpsb
insb
out
das
lahf
test
mov
dec
sub
mov
ljmp
aam
inc
xchg
js
es
xchg
out
imulb
icebp
mov
andl
inc
cmp
xchg
rorb
aam
cmp
bound
cmc
mov
or
es
and
lods
int3
dec
hlt
dec
pop
ficomps
cld
push
pextrw
push
push
stos
arpl
repnz
in
xor
in
inc
xchg
imul
testb
movsb
sbb
cmpsb
mov
jge
lret
aas
enter
cmc
aad
pusha
daa
xor
mov
int
cmp
mov
xor
nop
shr
or
call
inc
pop
lods
je
int
popf
add
ficomps
leave
stc
xor
and
popa
aas
in
jge
lock
sub
jle
or
mov
or
jp
jbe
mov
inc
dec
repz
mov
xor
outsl
pop
cmp
xchg
inc
repz
scas
pushfw
scas
pop
addr16
and
xorl
in
mov
add
mov
clc
outsb
add
pop
mov
inc
push
xchg
sbb
or
scas
cmp
stc
push
shlb
or
inc
test
cmpsb
dec
xor
mov
add
cmp
mov
mov
adc
andl
and
lsl
testl
sbb
mov
int
xor
mov
add
pop
sbbb
in
adc
pop
repnz
imul
data16
mov
xchg
sbb
pop
inc
lret
call
mov
mov
sub
pop
call
mov
jbe
popf
xchg
and
sub
js
inc
outsl
mov
lret
jge
inc
in
add
imul
push
inc
mov
mov
out
inc
or
xchg
ret
jmp
in
mov
jmp
or
push
push
push
pusha
lods
test
out
push
ljmp
sub
pop
orb
fisubrs
gs
loop
fs
cmc
fsubrl
lock
sub
mov
loope
mov
and
dec
and
sar
jbe
mov
out
mov
sbb
xchg
dec
fnstcw
jl
inc
movsb
jns
cmc
xchg
jecxz
push
dec
lea
in
pop
and
call
sub
pop
and
call
pop
push
or
pop
add
mov
outsb
xchg
iret
inc
imul
cmp
add
sub
call
dec
fs
aad
or
jmp
dec
cmp
enter
inc
adc
cwtl
fs
lods
or
ret
ss
mov
xor
jg
sbb
cmp
xchg
push
xorl
sub
gs
lea
push
jg
pop
xchg
lcall
pushl
push
movsb
jle
aaa
orl
fdivs
out
or
cmp
push
push
pop
mov
ficomps
and
sbb
mov
sbb
repnz
aam
or
push
out
cli
jmp
dec
push
inc
sub
push
mov
xchg
xor
jecxz
into
sub
mov
xchg
xor
gs
and
adc
dec
mov
fisubrs
pop
into
xor
mov
scas
push
dec
push
sbb
fs
mov
xchg
fnstsw
dec
in
clc
push
xlat
outsb
xchg
mov
mov
mov
lcall
dec
mov
rorb
mov
sub
stc
sbb
push
mov
nop
push
gs
or
fmull
roll
pop
jbe
aas
clc
mov
mov
imul
add
loope
jge
mov
dec
or
jne
cld
jp
sbb
sub
test
sub
lret
lea
dec
mov
or
not
inc
inc
xor
jne
sbb
loope
and
mov
test
sub
xchg
fcmovne
pop
in
cmp
add
test
jns
inc
pop
sarl
push
clc
mov
rorl
adc
int3
and
xchg
sbb
mov
xor
int
adc
cli
int
push
ss
dec
mov
jo
sti
out
pop
icebp
test
xor
pop
in
outsb
test
pop
leave
push
std
xchg
fwait
xor
cld
out
icebp
sbb
inc
jmp
mov
lahf
in
outsb
mov
int
loop
adc
push
cmp
dec
xchg
pop
mov
outsl
or
fstp
or
xor
xor
sbb
sub
push
movsl
push
mov
adc
sbb
mov
arpl
stos
mov
pop
jge
loopne
push
sti
hlt
cmpsb
jg
cmp
rcll
daa
dec
cmc
shlb
pop
jp
jne
enter
pop
stos
fstp
jb
cmp
enter
shrb
adc
mov
js
xor
cmpsb
pop
mov
xor
jg
loop
sbb
inc
test
je
jne
ja
fcmovne
mov
movsl
sub
gs
into
fdivr
shll
rolb
das
sbb
pop
nop
push
cmp
inc
mov
vpmacsswd
sti
jp
and
jge
mov
shlb
sub
push
inc
roll
stc
ss
stos
xor
xor
lods
cmp
cmp
mov
jo
cltd
jge
jno
push
cwtl
xchg
mov
pslld
jns
pop
push
fcoml
std
xchg
and
dec
pop
push
jmp
mov
ja
mov
sahf
xchg
lcall
movaps
dec
in
jae
add
icebp
lds
mov
mov
push
lar
adc
jmp
out
pop
inc
out
mov
dec
push
outsb
lret
fidivrl
cmp
fwait
pushf
lcall
ja
outsl
and
ja
cltd
mov
sub
mov
dec
shr
stc
push
push
pop
jecxz
mulb
ret
jmp
enter
adc
lcall
aas
inc
rol
clc
dec
sub
and
dec
loopne
enter
lcall
push
nop
add
cmp
dec
ds
aaa
dec
cmp
out
inc
int
das
enter
imul
fidivs
push
popa
push
loope
add
out
push
shl
push
popa
test
outsl
inc
out
xchg
mov
add
push
mov
call
mov
movsl
jl
clc
inc
cmp
dec
loope
cld
cltd
in
addr16
fwait
out
cmp
lock
sub
repnz
cmp
pop
or
mov
mov
sbb
daa
jl
cmpsl
mov
push
xor
arpl
repz
shrb
mov
cmp
in
out
arpl
xchg
dec
dec
mov
adc
test
loope
mov
outsb
dec
shl
mov
lds
pop
adc
daa
adc
stos
sub
fdiv
in
das
js
std
test
outsb
mov
fmull
jne
lock
pop
rolb
aad
xchg
mov
sti
loopne
mov
popf
mov
sub
std
sub
into
push
jl
in
mov
mov
fistps
push
lahf
in
mov
mov
pop
dec
pop
dec
xchg
aas
data16
cmp
or
popf
int
outsb
rorb
pop
es
mov
fiadds
inc
dec
enter
enter
sub
xor
rcrb
leave
xor
daa
cmp
xchg
movsb
cmpl
cmpsb
test
pop
mov
fs
mov
shrb
push
mov
inc
add
gs
loop
or
insl
xor
ljmp
in
sbb
int
add
ret
test
inc
imul
jno
jno
fcmovu
mov
mov
mov
stos
sysret
into
jnp
sub
hlt
cltd
popf
sub
fwait
push
jbe
out
mov
aam
shrb
inc
jecxz
sub
mov
inc
mov
ss
mov
xchg
ja
pusha
ja
fistps
ja
lods
cmpsb
outsb
push
push
stc
cmp
or
lods
in
mov
shr
push
mov
test
imul
clc
or
imul
ss
inc
xchg
insl
test
ret
add
jb
cmp
popa
dec
xchg
mov
cwtl
pop
mov
out
outsb
daa
faddp
sub
push
xor
push
imull
mov
insl
shr
add
loop
subb
xorl
dec
idiv
sbb
lea
mov
test
sbb
inc
mov
sub
push
jg
mov
in
xchg
std
mov
sbb
das
jl
jb
fdivs
in
movsl
dec
cmp
xchg
insl
pop
incl
ljmp
xor
mov
mov
fptan
and
or
or
push
cld
adc
push
pop
cmp
int
js
or
int3
fidivrs
jb
inc
ficoms
dec
adc
cmp
cmp
js
cmp
sbb
inc
fildll
pusha
push
dec
loopne
and
ret
adc
xorb
push
xor
xor
inc
ficomps
lret
add
and
mov
jo
adc
iret
sub
pushf
jmp
sbb
addl
mov
dec
dec
int
insl
xor
or
jp
aam
mov
sub
ficompl
iret
fnsave
pusha
or
mov
xchg
js
mov
mov
pusha
adc
xor
stos
mov
nop
out
mov
mov
xchg
add
xchg
add
roll
jl
pop
inc
iret
aad
xchg
add
xchg
jnp
sbb
test
pop
cld
addr16
xor
push
add
mov
push
popa
jmp
jg
icebp
xchg
pop
loope
push
enter
mov
xchg
aam
add
outsb
aam
xchg
dec
iret
lods
mov
test
cld
ret
cmp
mov
mov
mov
aaa
mov
rorb
out
and
xor
inc
sub
push
adc
call
jmp
xchg
or
push
mov
jg,pt
jge
push
push
mov
out
in
cs
adc
cmc
cld
inc
out
das
inc
dec
iret
jbe
sbb
mov
xchg
inc
fstpt
test
push
dec
stc
add
sbb
add
jmp
jecxz
movsl
xchg
adc
in
push
mov
xchg
cld
cld
mov
lret
test
hlt
jno
xchg
inc
xchg
jbe
xchg
aas
adc
mov
adc
push
fs
scas
mov
into
mov
xchg
dec
mov
xor
mov
bound
lret
adc
sar
ss
incb
pop
add
lea
mov
ret
pop
mov
ja
mov
shr
in
scas
mov
push
sub
mov
aas
incl
ja
icebp
add
mov
jecxz
fs
adc
movsb
cli
jge
cli
cmp
dec
mov
sub
fsubl
in
push
mov
cmp
jle
andl
icebp
cmp
pop
push
lcall
cltd
pusha
les
test
imul
incb
dec
out
addr16
sbb
loope
cmp
xchg
ds
mov
push
jge
or
imul
push
mov
mov
in
iret
mov
mov
xorb
xchg
jae
test
cmpsl
xchg
fmull
stos
jne
shll
nop
repz
shll
lcall
mov
clc
sub
xor
mov
mov
into
push
fadds
dec
fistpll
or
out
mov
cmp
aaa
mov
lret
mov
lret
lods
sbb
adc
dec
mov
ret
hlt
je
fisttps
dec
xchg
js
inc
xor
inc
ss
lods
dec
jns
jb
adc
pop
sarl
outsl
mov
int3
dec
shrl
mov
popa
add
jns
fsubl
es
mov
popf
es
sbb
loop
adc
push
les
ljmp
xor
mov
mov
sti
lcall
test
cmp
nop
or
add
fsub
and
inc
or
adc
jecxz
adc
loop
adc
cli
push
aad
jo
sbb
sbb
push
test
popf
std
xchg
addr16
inc
or
xor
or
xchg
add
dec
dec
sbb
inc
mov
stos
scas
fdiv
cmp
xorl
cmp
dec
mov
xor
jae
pusha
jle
std
or
mov
xchg
mov
pop
mov
pop
test
mov
jns
stos
dec
cwtl
decb
xchg
xor
dec
outsl
mov
or
push
pop
fsubrl
frstor
jp
cmpsb
jg
ds
out
out
mov
loope
mov
loopne
loop
or
and
inc
js
repnz
mov
pop
inc
rcll
jp
cmpsb
nop
sbb
add
dec
cmp
lea
mov
ret
jo
push
add
jbe
out
inc
sub
bound
xchg
cmp
adcb
enter
ret
jg
adc
lea
pop
leave
bound
xchg
enter
cmp
test
cmpsb
pop
leave
push
push
dec
divb
pop
mov
jmp
je
mov
jbe
movsl
std
mov
push
and
into
pop
fcom
and
mov
cmp
xchg
inc
sbb
leave
repnz
add
dec
or
sub
inc
test
repz
lahf
jmp
cmp
sub
aam
std
cmp
fisubl
jb
add
stos
inc
pop
in
call
mov
or
clc
pushl
mov
cmpsb
pop
ja
es
sub
divl
rcrl
add
and
lret
jl
jl
ret
jp
xor
push
add
out
and
inc
lret
out
aam
xor
pushf
call
lods
movsb
insb
push
fld
mov
xor
mov
std
aam
repz
cmpsb
repnz
sbb
push
mov
or
push
les
out
xchg
ret
dec
mov
pop
lcall
lea
push
test
addr16
mov
mov
cwtl
ja
lods
and
jbe
aam
out
sbb
jae
and
xlat
fdiv
les
sbb
sbb
push
fnsave
lds
outsb
imul
popa
add
out
or
xchg
inc
xchg
dec
in
jl
cmp
adc
out
lea
mov
inc
mov
push
mov
cmp
cmpsl
shll
fsub
mov
pop
push
and
outsb
call
jno
push
ljmp
leave
or
movsl
idiv
inc
mov
loopne
loopne
xor
popa
xchg
nop
dec
pushf
or
mov
icebp
test
or
ret
stos
repnz
dec
jl
push
rdtsc
or
pusha
pop
xor
dec
cmp
add
mov
push
sub
inc
cmc
mov
push
push
mov
inc
sbb
xchg
dec
inc
aas
cmp
out
or
int
or
loop
lods
add
dec
add
mov
fnsave
cmc
adc
sbb
jno
cmc
dec
add
dec
rcr
jmp
ljmp
cmp
jae
pop
sbb
mov
daa
lcall
mov
mov
shl
or
repnz
cli
xchg
xor
mov
outsl
mov
push
pop
xchg
cwtl
hlt
stos
bndldx
mov
sub
pop
fimuls
add
sbb
mov
sti
mov
sub
sbb
fcmovnbe
pop
fwait
mov
add
inc
jno
dec
fwait
aaa
mov
jnp
repnz
xchg
mov
adc
xor
and
xchg
lock
mov
fistpl
std
add
xchg
mov
out
push
repnz
dec
mov
push
in
aaa
hlt
movsb
jo
insb
cmp
aad
jne
add
imul
sub
jbe
sub
inc
testl
test
sbb
sbb
ds
aas
addr16
mov
sub
cld
les
cld
add
pushf
ss
add
mov
inc
outsb
arpl
in
inc
sub
int
rcrl
jmp
out
mov
and
out
pop
vmread
inc
loopne
push
sub
dec
inc
xchg
imul
std
pushf
out
ret
mov
rep
jns
push
test
aad
pushf
pop
mov
or
mov
push
lock
push
mov
adcb
dec
ret
xchg
jns
repnz
push
push
dec
xor
fstpt
outsb
jl
sub
fisubl
jp
fidivrl
add
nop
cld
es
adc
mov
cld
movsb
xor
jb
pop
fwait
out
fdivrl
mov
in
jbe
cmp
in
adc
cmc
add
push
dec
xor
xor
mov
pop
cmpsl
rorb
adc
data16
cmp
hlt
orl
test
popa
jb
xchg
mov
aad
inc
stc
xor
aam
adc
daa
shlb
das
scas
ds
pop
shll
or
mov
into
mov
xlat
je
call
push
sbb
inc
stos
outsl
icebp
fsubrl
sbb
or
push
aad
and
ja
push
mov
cmpsl
add
in
or
repz
push
mov
sti
sbb
xchg
sbb
mov
and
mov
cmp
jmp
jg
mov
loope
and
std
sub
sub
push
mov
and
dec
mov
fldt
pusha
mov
mov
add
jl,pt
loopne
mov
popf
push
dec
je
clc
es
fstpl
add
xor
stc
ds
hlt
push
push
lcall
sti
xchg
add
mov
movsl
icebp
out
loop
sub
sbbl
ja,pn
mov
jge
shl
addb
stos
notb
cmp
aam
xchg
addb
pop
lret
and
xor
outsb
push
and
pusha
push
notl
push
push
into
out
mov
fldcw
shlb
fidivrl
lods
ret
les
jmp
xor
lea
mov
ds
xor
or
and
int
mov
sub
pop
mov
push
pop
inc
insb
leave
imul
jne
das
lret
ja
into
jp
adc
loopne
push
jg
mov
loop
mov
popf
jo
mov
inc
cltd
jb
sub
sahf
fisubrs
out
fistpl
movsl
xchg
adc
fs
movb
icebp
insb
pop
gs
cmp
orl
mov
insl
mov
cmpsl
cmp
xchg
rorb
xchg
jecxz
mov
icebp
scas
cmp
je
test
dec
push
inc
jbe
mov
sub
nop
inc
push
cmove
and
adc
mov
jno
lds
fadds
lods
add
xlat
dec
arpl
ja
test
in
rdpmc
sub
xlat
mov
ret
jmp
adc
imul
sub
jae
xchg
mulb
fmuls
xchg
pop
push
nop
jbe
push
jge
or
cltd
scas
das
push
into
out
cmpsb
enter
push
jmp
out
inc
imulb
cmp
sti
mov
hlt
ret
out
shl
dec
aad
adc
sti
movsb
dec
jp
cmp
shll
cwtl
mov
push
push
roll
push
inc
sbb
mov
fwait
test
outsl
and
mov
xchg
push
notb
pop
cmp
sub
sbb
lods
sub
inc
jns
stc
mov
dec
cmp
inc
jne
inc
aam
mov
pop
int3
sbb
sbbb
sbb
xor
mov
fcoms
mov
loope
mov
popa
mov
adcb
push
or
sbb
idiv
jle
into
xor
adc
repnz
mov
xor
cmp
movsl
push
ljmp
pop
jae
mov
fistps
add
scas
jns
sbb
sub
inc
mov
inc
cmp
cli
aad
imul
xor
out
popf
sub
repnz
mov
cmp
inc
fsubrl
in
sub
mov
cmp
inc
mov
rcrl
movsb
imul
xor
fists
sub
mov
dec
movsb
push
fsubs
cltd
imul
sahf
ds
mov
xchg
aad
jae
push
ficoml
xchg
inc
ja
inc
push
test
stos
push
mov
les
xchg
cmpsb
arpl
adc
push
pop
push
imul
and
out
test
das
mov
notb
pop
and
cmp
lods
insl
bound
mov
dec
int3
es
shrl
dec
aam
and
shr
stos
dec
lea
xchg
inc
jb
testb
aas
or
or
dec
adc
aam
pusha
imul
xchg
jo
leave
ret
inc
mov
add
push
adc
pop
in
sbb
in
int
popa
adc
mov
loope
add
cmp
jmp
test
mov
adc
out
in
dec
or
mov
popa
mov
stc
aaa
insb
xor
call
fstl
inc
sbb
stos
shlb
aad
mov
xor
or
push
imul
idiv
add
mov
ffree
les
fisubrl
push
lahf
and
ret
mov
xor
je
xchg
cmp
movsb
iret
stc
aam
add
insb
jp
loope
cmp
cwtl
idivb
ret
ret
sbb
push
call
push
pop
test
gs
imulb
xor
nop
aas
sub
popf
notb
or
cmp
jnp
push
pop
lret
bound
mov
inc
lret
clc
lds
lret
xor
xchg
insl
daa
add
push
cltd
and
push
stos
adc
push
xlat
fcmovb
sbb
pop
adc
lcall
sbb
andl
push
faddp
fnstcw
sub
xchg
mov
push
pusha
call
sub
movsb
scas
repnz
pop
pop
jno
call
push
sub
call
push
fdiv
call
mov
jbe
push
das
add
and
or
sub
add
jle
mov
adc
ret
mov
mov
sub
mov
call
sbb
into
popa
xchg
lea
std
fldl
outsl
sub
xor
jo
mov
sbb
test
sub
mov
pop
lock
cmp
test
add
lods
shlb
mov
pop
lds
cld
mov
cmp
movsb
pop
sbb
ss
shll
jbe
sub
adc
adc
imul
loopne
mov
pop
cltd
jno
push
push
adc
xorb
arpl
jmp
ljmp
jo
mov
mulb
sub
dec
dec
push
fs
pop
lock
pushf
nop
sbb
and
sbb
ret
inc
or
cmovb
icebp
mov
xchg
push
shl
sub
or
es
jns
imul
scas
loopne
pop
sub
mov
rcrb
addr16
inc
sub
inc
lds
scas
mov
sbb
imul
out
rclb
out
not
dec
shlb
icebp
cmpsb
adc
iret
mov
xor
int
stos
cltd
adc
pop
and
inc
jle
xor
jb
lea
in
mov
add
aaa
lret
jp
lea
es
pop
mov
lcall
repnz
xlat
aad
dec
iret
test
push
dec
xlat
out
jae
movsb
adc
xchg
jg
lods
inc
jne
fidivs
decl
inc
jge
imull
xchg
icebp
fsubrs
ret
je
hlt
insl
and
xchg
js
insb
mov
jp
mov
inc
push
push
les
icebp
arpl
mov
mov
popa
call
sbb
xor
sti
jg
aad
insb
mov
fs
shlb
jmp
in
add
pop
pop
jle
pop
pop
inc
pushf
sbb
add
decl
mov
xor
or
shl
jmp
fstpl
push
pop
add
mov
or
xlat
out
or
lock
xchg
inc
inc
outsl
das
push
std
xor
adcb
insl
ja
xchg
push
stc
cmp
and
jb
shll
xchg
insl
xchg
dec
mov
pop
in
sbb
data16
xchg
test
add
mov
jno
jp
and
aaa
cli
xchg
int
adc
frstor
testb
das
cmp
adc
push
repz
ja
jg
dec
mov
pop
inc
daa
pusha
shll
adc
sahf
xorb
mov
ljmp
iret
pop
loopne
adc
pusha
adc
pop
xchg
js
cmc
jle
mov
xor
sbb
inc
sub
sti
std
push
scas
out
dec
lahf
mov
xchg
ret
mov
dec
inc
js
leave
fs
pusha
jl
or
sub
fisttpll
mov
cwtl
lods
cli
out
add
and
jge
mov
or
outsl
inc
sbb
cs
std
xchg
leave
or
sbb
aad
mov
imul
xchg
pop
or
lret
jmp
repnz
mov
adc
stc
push
cld
pop
mov
int
dec
loopne
outsb
mov
sub
and
inc
sub
movb
cltd
pop
popl
mov
addl
adc
dec
mov
inc
mov
insl
xor
imul
fcomp
inc
push
test
rcr
push
enter
ret
ds
sbb
pop
cmp
pop
and
jecxz
mov
loopne
ret
xor
stos
mov
testl
fwait
out
test
mov
and
jo
and
scas
and
or
ljmp
inc
stos
loop
mov
sahf
or
lret
mov
jp
mov
push
out
mov
adc
push
test
scas
dec
sbb
jb
push
shrl
outsl
in
daa
add
nop
fnstcw
rcll
aam
cli
mov
enter
sahf
sarb
lods
pop
popf
cmp
inc
inc
fwait
and
jle
jl
std
pop
orb
lea
mov
ljmp
nop
and
mov
mov
mov
ret
mov
and
xchg
fsubr
arpl
repnz
adc
clc
mov
sub
adc
push
xor
dec
inc
dec
int3
cmp
fnstcw
cli
push
fmul
add
adc
test
jne
scas
fdivrs
subl
dec
mov
xor
jle
dec
push
jns
cwtl
or
test
push
call
ret
into
cwtl
mov
subl
lahf
lods
xchg
lret
and
fwait
sbb
pop
cmp
add
out
push
pop
test
dec
fdivr
sbb
fildll
daa
lods
mov
adc
sbb
sub
or
repnz
ret
xchg
sbb
adc
adc
icebp
dec
stos
pushf
and
push
mov
xchg
dec
inc
sbb
lret
aas
push
xchg
lret
inc
idiv
fwait
loope
popf
xchg
les
js
sub
jl
add
push
mov
dec
imul
iret
mov
mov
cwtl
jnp
sbb
imul
stos
loope
fiaddl
xorl
dec
cwtl
mov
sub
inc
mov
lock
es
or
adc
rorb
mov
incl
xchg
xchg
sbb
add
mov
pusha
push
rcl
mov
xlat
push
movntps
fucomi
or
jecxz
inc
lahf
adc
daa
gs
adc
jp
dec
sub
mov
aas
orb
mov
test
movsb
push
xchg
dec
jg
imulb
xchg
xor
sub
les
repnz
jmp
loop
mov
movsb
xor
jbe
jg
adc
push
les
nop
js
dec
stos
sub
xchg
inc
mov
adc
loopne
out
in
jne
aaa
dec
lcall
and
test
mov
orl
mov
in
ja
cmp
aam
aam
lds
pop
mov
jge
rcrb
bound
iret
aam
adc
dec
pop
push
cmpsl
lds
adc
je
enter
push
nop
push
pop
adcl
xchg
push
add
jp
sbb
sub
add
jnp
and
mov
mov
mov
sbb
jns
dec
mov
or
and
add
lock
xorb
dec
rcl
or
mov
fidivrs
sbb
mov
sti
cmp
jp
shl
das
push
mov
inc
push
pop
mov
mov
div
test
mov
xchg
mov
xchg
and
loope
call
or
xor
inc
inc
jmp
cmpsl
mov
fnstcw
xchg
into
out
jp
mov
cwtl
mov
mov
mov
cmp
inc
jecxz
push
fcmovnu
je
ficoms
daa
mov
xchg
adc
test
add
repnz
addr16
mov
add
insb
std
inc
iret
jge
add
mov
sub
inc
add
cmpsb
jae
and
xchg
lea
pop
std
cmp
in
dec
repnz
pop
idivb
repz
sbb
xchg
cwtl
adc
cmp
adc
aaa
popa
in
cmp
cmp
in
pop
dec
xchg
inc
ret
or
sbb
sub
dec
mov
push
and
pop
mov
inc
inc
cmp
sub
sbb
xlat
xor
xor
push
or
mov
jns
lfs
cmpsl
mov
out
test
cmpsl
shlb
dec
mov
iret
dec
cltd
adc
jno
fwait
test
add
or
add
nop
insl
std
dec
ret
jo
int
imul
adc
sub
pusha
jp
pop
mov
dec
movsb
jge
jno
pusha
mov
add
out
iret
lcall
jo
loop
add
xchg
jecxz
add
jg
push
mov
mov
mov
jnp
mov
bound
push
push
jmp
es
fnstenv
rol
repz
dec
pop
mov
outsb
iret
dec
inc
cmc
lds
mov
sahf
mov
or
inc
pop
add
gs
or
push
lods
cwtl
xchg
dec
jo
ja
insl
test
clc
or
jne
pop
outsb
aas
and
mov
cmpsb
je
jg
mov
or
test
lods
push
fsts
cmp
dec
or
inc
fimuls
inc
push
pop
ds
push
pop
scas
in
das
std
stos
movsb
adc
fstps
les
inc
pop
push
mov
mov
mov
inc
movsb
filds
sbb
mov
push
out
pop
hlt
in
adc
push
mov
call
jecxz
clc
scas
mov
mov
push
pusha
jl
sarb
les
xchg
mov
sub
insb
lods
aad
sub
jae
addb
cmp
ja
sbb
xchg
push
lahf
mov
leave
mov
cmpsl
inc
xorl
into
sub
pop
cmpsl
xchg
je
ss
pushf
and
dec
sti
dec
unpckhps
mov
sarb
xor
push
push
cmp
adc
mov
std
test
fs
and
ds
lahf
sti
xchg
push
mov
insl
scas
loopne
lret
fildl
fildll
xchg
jne
cmpsl
call
aad
out
cmp
movsb
gs
mull
ret
push
aad
aas
jae
jne
jbe
clc
sub
jge
pop
cld
inc
inc
pop
pushf
cltd
cmp
sub
push
adc
out
mov
or
std
mov
sbb
test
filds
filds
imul
test
jmp
imul
inc
pop
add
cmpsl
push
pop
xchg
jge
cltd
mov
aam
cld
sub
jb
je
xor
and
cltd
fcmovnu
popa
pop
push
rclb
push
call
movsl
sub
add
sbb
fwait
and
or
inc
xor
jb
cs
inc
into
je
sti
cmp
jge
aas
adc
pop
push
mov
lock
in
adc
in
daa
adc
fiaddl
cwtl
and
test
xlat
orl
inc
sub
jecxz
clc
scas
out
mov
sbb
cwtl
cltd
push
sbb
mov
push
jl
inc
sbb
sbb
cmp
inc
fsubr
xor
cs
push
jmp
je
test
ret
les
scas
pushf
jge
dec
pop
push
mov
inc
and
outsl
jp
arpl
lcall
mov
test
out
xor
xchg
adc
adc
into
into
mov
test
add
jecxz
inc
xchg
pop
ljmp
cli
and
in
jl
mov
cmpsb
scas
xor
pop
in
sub
mov
je
js
xor
in
lahf
and
sub
mov
shll
andl
test
mov
ret
xchg
jg
xchg
or
std
mov
dec
mov
mov
dec
sbb
sbbb
imul
xchg
pop
nop
cmpsl
scas
out
add
jp
ss
mov
std
lret
lds
aas
call
scas
dec
adc
or
push
rcrb
mov
in
mov
scas
and
stos
pop
addl
fld
sub
and
jp
jp
add
lahf
mov
mov
stc
lds
mov
lock
mov
sbb
or
xchg
lds
movsb
nop
mov
push
scas
cmc
dec
insl
leave
jno
jge
mov
nop
test
mov
clc
mov
sbb
pop
adc
mov
lods
xor
mov
jnp
mov
and
repz
jmp
push
shll
aas
add
or
lods
or
andps
inc
lea
jp
mov
fsubrl
ljmp
push
in
mov
repz
gs
xchg
lds
cld
lea
test
add
jo
or
addr16
cmp
stos
out
adc
in
test
rep
mov
adc
fisubrs
hlt
out
ja
bound
push
xor
dec
call
outsb
xor
and
pop
out
adc
out
mov
add
aad
stos
xor
scas
popf
and
add
mov
jns
xlat
out
mov
sbb
fsubrl
popa
aaa
xor
int3
mov
enter
mov
jbe
enter
push
cmp
and
mov
cwtl
imul
mov
pop
push
ror
dec
mov
fbstp
aaa
jns
cwtl
mov
jmp
xchg
sarb
in
das
mov
sub
adc
dec
push
cmp
mov
ja
mov
lds
jno
and
inc
sub
mov
xchg
int
pusha
lcall
je
xchg
cld
call
adc
pop
jb
das
out
je
pop
fnstenv
dec
dec
jge
xor
or
mull
xor
ja
les
sub
popl
push
sbb
sti
push
cwtl
xor
out
cmp
outsl
ja
push
pop
or
fcoms
loop
sbb
sbb
lcall
xchg
cwtl
add
into
movsl
out
pop
loopne
adc
dec
cmpsb
dec
jns
sti
pusha
sahf
mov
inc
test
mov
hlt
and
icebp
mov
pop
jno
mov
iret
sbb
inc
sar
inc
int3
mov
add
lret
dec
dec
movsl
jbe
jno
out
les
sub
push
in
lcall
addr16
fcmovnu
mov
or
pusha
pop
push
gs
mov
fstpl
sbb
sbb
cwtl
sub
or
jns
pop
movsl
outsl
mov
aaa
add
stos
pop
add
pop
xor
rol
xor
jae
jp
inc
test
sbb
mov
jg
fcoms
push
or
or
das
mov
out
mov
xchg
cmp
ret
pop
push
xor
or
jmp
push
push
insl
pop
sbb
jno
gs
fsubs
imul
inc
ficompl
rorb
dec
push
adc
or
iret
fs
xor
rcl
dec
aad
push
cwtl
xchg
fcomi
cwtl
jbe
outsb
rolb
dec
mov
hlt
add
out
bound
mov
int3
in
cmp
pop
hlt
add
add
add
stos
dec
push
and
lcall
cltd
mov
mov
loopne
and
pop
pop
les
lret
shll
insb
jns
dec
fs
inc
daa
jl
pop
popf
dec
xchg
dec
dec
in
bound
rcl
inc
adc
lods
mov
inc
cmp
pop
xchg
fsub
xchg
xchg
hlt
push
push
mov
lds
mov
mov
repz
mov
jae
mov
aad
es
jge
insl
adc
inc
rep
push
sbb
lods
mov
test
lcall
cld
fisubrl
xor
dec
mov
je
sub
in
mov
xchg
rorl
jnp
mov
xchg
aas
call
fnstenv
adc
push
or
jge
dec
dec
push
jae
shll
jl
and
cld
sub
dec
sbb
mov
clc
jecxz
movsl
push
xchg
js
ret
pop
xchg
lret
or
mov
mov
push
faddl
scas
push
pop
bnd
mov
movsl
int
and
cmp
rorb
xor
mov
jns
jne
and
jbe
inc
or
outsb
sbb
sbb
js
out
add
xor
push
lcall
dec
shll
mov
inc
adc
cld
lock
dec
neg
add
mov
lods
ret
xor
shrl
xlat
popf
inc
pop
jno
or
add
cmp
icebp
nop
outsb
push
mov
popl
adc
add
gs
or
sub
sbb
stos
pop
cmp
pusha
fiaddl
mov
push
cld
ret
dec
or
addr16
inc
sbb
mov
mov
adc
or
ds
push
rcl
in
out
das
jle
sub
push
clc
fisubl
inc
pop
arpl
sbb
xchg
cwtl
jno
add
push
mov
ss
das
xor
and
inc
leave
sarl
cmpsb
xor
jb
inc
lret
aaa
sub
fwait
cmc
push
push
and
ror
mov
jmp
and
xor
stc
movsb
adc
daa
or
xor
lret
in
mov
ss
jl
sahf
stos
fbstp
ljmp
xor
and
fwait
mov
sbbl
and
mov
ljmp
push
imul
mov
das
in
cmp
adc
iret
jp
push
xchg
jle
pop
repnz
jg
cmc
xor
movsb
bound
mov
arpl
sub
je
outsl
sbb
mov
add
les
adc
push
mov
mov
scas
push
sub
or
cmp
inc
or
sub
dec
test
pop
es
sub
or
ret
jge
sbb
sti
mov
sub
pusha
in
adc
fisttps
inc
stc
sbb
rcll
add
pop
mov
pop
lret
pop
popf
cmp
sbb
jmp
ret
in
imul
jl
insb
dec
sbb
insb
or
les
ja
push
jno
xor
sub
pusha
or
dec
mov
pusha
jnp
xchg
inc
data16
lods
xor
pushf
sub
andl
movaps
pop
dec
in
cli
test
loope
pop
aam
cmp
pop
dec
repz
and
push
inc
xchg
or
out
shll
out
and
sarl
xchg
fcmovnb
xor
push
adc
hlt
add
stc
sbb
iret
sbb
in
xor
mov
xor
add
js
mov
mov
add
insl
nop
pop
ss
fstl
js
outsl
dec
lret
int
sti
mov
aaa
cmp
or
imul
jmp
mov
lock
outsl
mov
aam
cld
int
pusha
imul
int
pop
sub
pop
sbb
mov
cmp
fidivl
test
or
test
push
bound
iret
sub
or
mov
and
aam
icebp
sub
adc
mov
mov
dec
cmp
inc
dec
lea
xor
push
orl
cmp
sbb
add
add
into
jb
xchg
xchg
pop
fnstcw
pushf
addl
out
out
mov
pop
lcall
mov
adc
lret
leave
ret
dec
mov
iret
adc
in
stos
int3
loope
pusha
mov
sahf
sahf
and
aam
jb
test
in
popa
pop
xchg
xchg
rorl
ljmp
add
sbb
pop
xchg
add
fwait
push
or
or
imul
and
mov
insb
xor
sbb
in
xchg
inc
rorb
xchg
mov
or
loope
add
inc
lock
xorb
lcall
and
xchg
jns
int3
js
xchg
inc
mov
js
mov
add
inc
nop
cld
imul
inc
stos
jg
push
jnp
hlt
repz
sub
xchg
out
jg
mov
ret
js
lods
adc
xor
sarl
mov
punpcklbw
dec
jbe
cmp
rcll
stos
fidivrs
pop
xorb
pop
int3
imul
lods
sub
int
insl
pop
jl
pop
icebp
inc
mov
jecxz
and
sub
movsl
cltd
push
inc
int
ret
cmp
push
clc
int3
xchg
dec
cli
repz
iret
or
lods
in
mov
in
cwtl
test
imul
nop
fldt
xchg
dec
iret
xchg
xchg
push
push
and
inc
repnz
mov
push
mov
cmpsl
mov
shlb
push
fs
add
and
push
push
in
pushf
pop
into
adc
outsb
mov
fdivs
cwtl
in
and
cli
les
xchg
push
pusha
int3
imul
and
cli
adc
adc
cmpsb
sbb
fwait
jno
pop
sub
sbb
xchg
lds
repz
imul
lcall
mov
pop
adc
xor
in
imul
popa
in
xchg
mov
mov
mov
test
imul
lahf
inc
stc
pushf
push
and
lahf
xchg
cmpsb
cmp
fs
xchg
scas
mov
jg
cld
mov
or
loop
outsb
sbb
ret
xchg
fs
sub
imul
sbb
lret
sbb
ljmp
sar
sbb
jmp
outsl
pop
loopne
cmp
dec
jne
xchg
sti
push
push
pushf
xor
jb
sti
xor
cmpsb
repnz
js
mov
daa
push
sbb
sbb
jae
cmp
mov
or
xchg
daa
rol
adc
fadd
fdivl
inc
sub
inc
call
and
mov
lcall
mov
mov
mov
lcall
pop
imul
lahf
lahf
sub
sbb
out
stos
dec
jo
sbb
shr
out
icebp
and
fstp
mov
dec
imul
incb
sbb
pop
xchg
movsb
cmp
cli
ljmp
std
sti
popl
or
mov
xor
lahf
jge
sub
ss
mov
dec
dec
pop
inc
xchg
repnz
push
pop
loop
fstp
aaa
inc
mov
imul
pop
out
js,pt
loope
aad
fimuls
insl
das
stos
out
popa
imul
mov
cmpsl
out
push
cmpsb
inc
sbb
je
xchg
add
sub
xor
stc
loopne
adc
cmp
stos
push
ljmp
inc
inc
enter
mov
aaa
cmpsb
data16
mov
das
mov
adc
outsl
fs
cmc
jne
push
cli
iret
push
ljmp
add
cmp
repnz
push
mov
jecxz
lods
add
ja
dec
insb
cmpsb
lret
test
les
pop
sub
sbb
pop
lea
incb
lods
je
fisubl
jo
std
loopne
lcall
cmp
jne
test
je
rclb
movsb
pop
push
cmpl
nop
pop
mov
scas
lcall
movsb
lret
xchg
mov
imul
sub
mov
pop
test
xchg
xor
daa
jl
xor
push
sbb
outsb
xchg
in
inc
vpcmpeqd
jge
test
add
cld
mov
stc
cmp
pop
sahf
adc
adc
xlat
movsb
inc
cmpsb
cmp
push
mov
or
xor
enter
cmp
mov
add
int3
dec
or
xor
xor
mov
jp
xor
repz
sahf
push
into
jns
cmp
jo
dec
or
pop
and
daa
stos
sbb
mov
push
xchg
cmpsb
cltd
icebp
or
jg
dec
sub
push
andl
lds
in
dec
ret
push
or
and
addb
add
pusha
imul
sbb
pop
push
mov
add
mov
jge
adc
sub
pop
out
push
push
cmpb
mov
cltd
add
sbb
into
cmp
int
je
in
pop
test
xchg
jle
rcrl
and
lret
mov
inc
jne
sub
xor
cmp
daa
jno
xor
fcom
lock
cmpb
lret
jmp
cmp
lret
sahf
cmpsl
or
scas
in
xor
xlat
xchg
pop
lcall
dec
stc
je
daa
ljmp
sbb
fldl
push
stc
mov
xchg
divb
clc
mov
scas
enter
loopne
jmp
sbb
or
stc
push
dec
ret
call
jae
loopne
jbe
jge
add
bound
mov
arpl
fnstsw
sub
mov
ljmp
pop
xor
xor
loopne
jb
call
pop
xchg
repz
sbb
in
and
fs
xchg
xchg
and
mov
out
movsl
pop
jp
push
sub
pop
inc
sahf
cmp
xchg
cmp
popl
sub
or
or
cmp
repnz
push
mov
sar
inc
jge
pop
fsts
ja
popl
cmp
enter
cmp
addb
mov
mov
dec
outsb
or
insl
pop
mov
pop
dec
cli
lock
pop
loop
cmp
push
into
xchg
stos
mov
in
xchg
or
pop
ja
jne
or
or
dec
sarl
xor
test
cmp
rolb
mov
or
fldcw
mov
mov
push
pop
jae
or
int3
jmp
xchg
jae
jmp
mov
in
je
std
in
inc
in
sbb
cmpsl
mov
rclb
fcompl
sbb
mov
add
pop
fimull
gs
mov
pop
scas
jbe
out
inc
push
fwait
out
ds
mov
in
imul
xchg
fldt
into
inc
sub
test
add
pop
xor
insl
pop
vprotq
jle
in
sub
dec
imul
fcmove
mov
insb
jge
dec
or
pop
dec
pop
shr
addl
jle
push
inc
mov
push
lods
cmp
sti
pop
or
push
lea
ret
mov
daa
cmp
fcoml
sbb
or
mov
push
lret
mov
je
dec
sti
bound
dec
push
leave
imul
dec
bound
daa
sti
lcall
adc
mov
cld
das
jae
inc
in
fisttps
mov
cltd
and
in
xlat
repnz
cmc
into
mov
popf
int3
jno
mov
int
or
test
xchg
into
cmpl
xchg
adc
xor
cs
dec
mov
imul
sbb
xor
icebp
insb
stos
dec
insl
inc
outsb
push
dec
push
add
cmp
push
sub
push
mov
lret
push
fldl
inc
or
jae
leave
cmc
lcall
xlat
xchg
aaa
loopne
mov
mov
ds
dec
cmpl
popa
xlat
pop
jnp
movl
clc
cmp
imul
rclb
std
lock
mov
fldenv
inc
xchg
jnp
push
insb
stos
std
aad
js
xlat
or
in
lock
dec
mov
adc
inc
jae
jmp
movsl
mov
inc
addb
sahf
sub
inc
into
repnz
pop
fchs
jle
mov
insl
fbstp
fcmovu
xchg
sbb
sbb
xchg
fsubs
pop
decb
stos
bound
push
xchg
pop
lods
dec
fs
nop
push
push
out
loopne
jns
and
xchg
leave
lahf
adc
ror
lcall
lret
push
loopne
mov
xor
call
or
push
mov
sbb
and
push
adc
mov
pop
pop
je
pop
cwtd
cltd
mov
push
arpl
sbb
jg
xor
cmp
pop
not
xor
insb
lret
cld
mov
lret
and
adc
jno
xchg
in
add
push
mov
sbb
add
xchg
fstpl
ficompl
addl
test
adc
pusha
ss
mov
push
jmp
fsubrl
stos
addr16
std
shlb
shrb
mov
pushf
cmp
out
js
dec
push
test
pushl
aas
shlb
mov
xorb
sub
jne
fbld
imul
sbb
mov
mov
clc
mov
xchg
jl
in
inc
sub
or
or
into
aad
adc
mov
pop
mov
mov
and
adc
sbb
fisttpl
add
push
jecxz
fsts
push
leave
lods
hlt
lds
xchg
dec
or
sub
sub
adc
dec
lock
jmp
ds
jmp
sub
and
add
std
inc
push
jl
loope
hlt
inc
data16
gs
adc
mov
sbbl
icebp
push
out
ss
jne
cmp
mov
in
dec
add
gs
movsl
in
jecxz
aam
jle
out
sub
adc
daa
ret
cmp
fldt
cwtl
fwait
lret
icebp
sbb
and
pop
xchg
out
or
pop
xchg
aas
loopne
cmp
or
jmp
and
jmp
gs
stos
in
roll
insb
mov
lret
cmp
fcmovnbe
push
mov
aad
movsb
imul
fidivl
test
arpl
lods
rcr
cli
cmp
lret
test
dec
pushf
inc
jg
pop
cmp
xor
xchg
xchg
jmp
mov
cmpsb
mov
jg,pt
push
cmp
and
dec
mov
lds
add
jns
ja
daa
xchg
sub
lods
sbb
rcrl
mov
hlt
xchg
add
fcoml
add
xchg
and
imul
push
inc
pop
mov
xchg
lock
enter
mov
xor
dec
sub
sbb
sahf
out
lret
sbb
xor
stc
bound
movsl
fistl
jb
and
push
loope
mov
ds
pop
push
pop
test
add
cmpb
mov
insl
xchg
enter
xchg
sti
jb
in
jns
mov
adc
inc
insb
rcl
push
pop
cmp
ficoms
add
adc
adc
out
push
push
or
inc
xor
adc
mov
iret
fimull
pop
ss
and
lahf
js
mull
sub
test
aam
iret
imul
xor
add
stc
cmpb
mov
mov
shlb
cmc
xchg
test
mov
jns
addr16
enter
jbe
cmp
shll
aam
push
push
jp
xlat
cmp
lret
test
loope
and
ficompl
in
mov
mul
mov
push
push
pop
cmp
pop
add
imul
ja
pop
loopne
dec
push
dec
ret
dec
test
arpl
arpl
mov
sub
xor
xchg
and
sbb
mov
sahf
sub
push
jns
adc
hlt
subb
fwait
inc
addr16
stos
fiaddl
pushf
jl
inc
or
fcomp
out
jg
ja
cmc
bnd
xor
jbe
cmp
xchg
pushl
inc
push
and
push
ret
stos
cmp
inc
test
mov
add
pop
pop
pusha
pop
enter
sub
loopne
sbb
adc
test
fdivl
xchg
out
cmc
in
rorb
xchg
ljmp
pushf
stos
icebp
lods
dec
mov
stos
divl
mov
push
imul
arpl
stc
lds
call
xchg
and
insl
imul
fsubrl
pop
inc
sbb
jo
repnz
xor
add
mov
iret
cmp
push
fwait
outsl
pushf
sub
cmp
aad
mov
sbb
js
pop
mov
mov
nop
shlb
inc
cmp
fistps
mov
push
notl
sbb
mov
mov
imul
pop
adc
cmpsl
fs
sbb
jp
addr16
mov
sub
cmpsl
ret
cmpb
mov
pop
imul
push
mov
arpl
loopne
mov
ljmp
jnp
cwtl
sbb
mov
jb
ljmp
inc
rolb
mov
sahf
push
shll
push
sbb
sub
sub
into
xor
das
pop
out
inc
pop
mov
stc
fstps
xor
mov
cmpsl
int
jo
scas
jne
push
sbb
xor
sub
es
and
lds
pop
loopne
jb
shll
xor
mov
pop
fisttpll
shl
dec
inc
sbb
mov
clc
in
stc
mov
dec
add
mov
inc
jp
outsl
mov
mov
ja
cmpsl
je
push
mov
outsb
fstl
and
push
inc
pop
jp
test
mov
push
mov
cmp
add
mov
mov
sub
pop
dec
jae
xchg
mov
xor
xchg
jl
push
xchg
fisttpll
pop
mov
xchg
mov
jb
rcrl
fcmovnbe
aaa
hlt
bound
es
pusha
pop
jno
ds
into
out
xlat
mov
or
test
shrb
xchg
cmc
lea
push
jnp
mov
in
mov
inc
add
lods
stc
aas
pop
aas
cs
lret
inc
mov
mov
popa
sarl
repz
adc
sub
sbb
test
sub
mov
cli
xor
or
push
dec
xor
sub
sub
popa
xor
mov
and
dec
mov
pcmpeqb
or
and
loop
addr16
pushl
loop
or
push
scas
loop
or
lea
xor
lret
mov
jo
sub
push
xchg
rorl
fdivrl
insb
int3
mov
mov
jb
fmuls
and
add
mov
rolb
xchg
cmc
mov
cmp
adc
jnp
push
xor
push
inc
sti
and
loopne
mov
lock
pop
mov
sub
add
mov
cmpsb
out
mov
enter
sub
inc
xchg
cmpb
xchg
push
fsubrs
flds
cltd
fsubs
mov
mov
test
ret
gs
jo
addb
pop
xor
pop
cmp
fsubr
cmc
mov
jo
enter
mov
dec
mov
lods
cmpsb
sti
jl
fstps
in
cmp
and
jns
pusha
jns
test
fs
adc
pop
icebp
movsb
popa
mov
inc
or
xchg
lret
dec
xor
mov
xchg
cmp
xchg
lock
push
lods
test
das
aad
jl
jns
fs
mov
or
mov
and
std
cmp
xor
rorl
pop
or
xchg
or
mov
or
out
test
mov
std
std
xchg
xor
stc
sub
sahf
stos
test
sbb
out
lods
fwait
lea
xchg
or
pop
xchg
aad
and
push
and
mov
inc
call
pop
lahf
inc
mov
and
jmp
sub
jae
sti
inc
aad
mov
hlt
cmc
jnp
inc
mov
loopne
jmp
pop
add
out
jnp
aad
mov
int3
push
fcom
sarb
xchg
cmp
sub
rolb
sub
loopne
bound
jg
dec
aas
js
loope
mov
movsl
outsb
inc
jno
push
frstor
pop
out
add
lods
movsl
ret
xchg
inc
outsb
sbb
jp
push
mov
sub
jecxz
movsb
xlat
sbb
xor
les
sub
or
outsl
fs
in
insb
inc
bound
push
cli
js
xor
inc
or
xchg
xchg
sahf
xchg
test
sbb
mov
mov
add
push
outsl
repnz
aam
addl
pop
enter
insb
pop
xchg
xchg
jp
adc
sub
mov
dec
mov
jno
loope
mov
repnz
cmp
mov
mov
out
test
daa
or
pop
push
enter
insl
inc
dec
aad
adc
push
cwtl
ja
mov
sahf
ret
lahf
test
xor
nop
lcall
adc
popf
push
fwait
dec
cmpsl
in
adc
mov
jg
xor
mov
aas
nop
fs
std
dec
loope
lods
aad
cmp
sbb
fnstsw
lret
cltd
pusha
aam
dec
pop
pop
rorb
je
hlt
jmp
pop
sbb
fmul
je
mov
mov
xor
jecxz
ficompl
cmp
and
push
sarb
mov
adc
sbb
lret
push
mov
pop
imul
aaa
mov
xchg
icebp
in
xor
pop
pop
jb
xchg
mov
out
popf
mov
inc
push
xor
cmpsl
dec
imul
or
out
imul
inc
mov
xchg
or
mov
movsl
lret
incl
or
sub
mov
cltd
fs
or
ja
out
sbb
jbe
jge
das
push
xor
or
dec
mov
hlt
dec
push
cmp
xor
test
insl
adc
pop
dec
push
add
jae
loope
daa
mov
push
in
loope
shlb
dec
pusha
lahf
and
loopne
sbb
xlat
sbb
data16
cmp
fwait
pop
sub
cmpsb
add
or
add
adcl
or
push
mov
lret
outsl
pop
cli
fdivl
mov
loop
pop
inc
xchg
cs
pop
sahf
mov
aam
ret
repnz
popf
fs
mov
mov
stos
aaa
in
xor
pop
lock
loop
mov
scas
leave
push
mov
mov
inc
fwait
xor
sbb
xor
cs
jmp
mov
js
lock
aad
mov
xor
mov
loopne
adc
sbb
jle
lods
in
jnp
inc
and
cli
idivl
loopne
sarb
push
add
stos
jo
rorl
pop
sbb
leave
fwait
xor
push
lret
push
inc
sub
sbb
outsl
orb
xchg
bound
iret
push
mov
sbb
jnp
shlb
decl
popa
out
jns
jle,pn
or
sub
push
mov
or
cmc
cmp
adc
xor
dec
mov
dec
lret
les
into
adc
sbb
xor
and
xor
push
fdivl
pop
pop
adc
decb
inc
pusha
scas
pusha
aaa
sub
addr16
stc
inc
fs
cmp
hlt
jbe
repz
xlat
les
iret
mov
inc
imul
sahf
shll
dec
pop
into
xchg
icebp
jb
push
ret
icebp
repz
mov
cmp
je
mov
sbb
push
mov
dec
dec
cs
jbe
mov
cltd
inc
jo
jl
rol
mov
aas
cltd
jo
hlt
fbld
or
adc
mov
push
mov
out
sbbl
mov
mov
fdivs
shrb
mov
jl
or
loopne
outsb
movsl
adc
out
js
mov
cmp
stc
dec
test
icebp
insb
mov
ret
insb
mov
jmp
sub
imul
ret
repz
in
dec
xorl
or
push
rcl
fisubs
dec
in
aas
jbe
jo
fcoml
sub
mov
dec
cmp
inc
jl
icebp
movsl
xchg
or
pop
xor
pop
adc
lods
sbb
xor
inc
add
or
test
cmp
dec
leave
push
in
mov
jb
and
xor
inc
divb
stos
fmulp
out
fwait
push
sbb
mov
rcrb
sbb
filds
mov
pop
pop
aam
or
mov
fnsave
ja
cmc
sub
and
ja
fwait
mov
mov
clc
daa
mov
pop
shrb
in
mov
jnp
jb
inc
mov
rcrb
test
xchg
fbstp
push
out
pop
gs
mov
arpl
push
mov
adc
and
cmpsb
divps
pop
push
aas
xorb
cmpsl
subb
jl
sarb
sar
xor
push
nop
dec
inc
mov
addr16
mov
pop
mov
in
jne
ss
push
movsb
push
sub
adcb
lods
aaa
inc
pushf
pop
dec
add
in
dec
sub
xor
push
data16
pushf
sbb
jns
adc
stos
jbe
or
repz
push
rol
jl
dec
lret
sbb
push
adc
js
jge
inc
mov
inc
cmpsb
ds
mov
punpckldq
insb
jle
add
leave
push
xor
xor
cld
lods
xor
sbb
xor
mov
xchg
adc
lods
sbb
mov
jb
sbb
test
jb
enter
jns
aad
xchg
push
sbb
fcmovnbe
loop
out
push
jnp
dec
xor
clc
mov
pusha
fcmovb
lock
xor
adc
cld
cmp
adcb
sub
bound
addr16
cmp
idivb
jns
ss
push
jno
xor
repnz
push
mov
lods
xor
cltd
dec
test
sbb
lcall
std
das
insb
inc
insl
aas
lcall
enter
test
jmp
xor
cmp
stos
sub
fs
xchg
bound
mov
fsts
add
fsubs
fcomip
js
add
mov
rcll
fstps
cmc
sti
shll
cltd
test
xor
mov
cwtl
stos
fcoms
push
sarl
fcmove
jne
testb
jle,pn
sti
scas
xchg
pop
gs
mov
fs
dec
sbb
aaa
dec
xchg
sub
or
test
mov
cmp
push
sub
jo
sbb
stos
xchg
jmp
pop
pop
sbb
ret
sti
adc
xor
sub
loope
subl
call
pop
cmp
test
add
dec
das
mov
stos
andl
jl
int3
out
adc
fdivp
lods
cmp
lock
push
cmp
push
insb
inc
imul
xor
loop
dec
aam
dec
int
std
pop
ss
adc
inc
inc
dec
faddp
push
jo
outsb
cwtl
add
mov
in
pushf
je
sahf
sbb
mov
ret
daa
mov
sbb
ds
dec
popf
sbb
xlat
sbb
inc
repz
add
fwait
mov
ror
push
enter
pusha
mov
lds
gs
mov
jb
fs
testb
sbb
outsb
arpl
in
cli
out
or
mov
les
jge
fists
push
jo
insl
inc
fwait
cwtl
cli
push
fisubrs
lret
mov
daa
cmp
mov
push
popa
sbb
or
insl
hlt
hlt
hlt
jecxz,pn
in
inc
outsl
int3
cmp
les
mov
cmpsl
or
enter
pop
cmp
sbb
and
xor
pop
mov
addr16
add
or
pop
push
cmp
lret
sbb
loope
in
es
sbb
dec
push
or
add
mov
mov
mov
pop
adc
fdivp
mov
mov
adc
mov
cmp
dec
cmc
jp
or
add
mov
xchg
into
std
cmp
xor
mov
pop
sahf
lods
xchg
pop
pop
or
repz
lds
in
inc
lock
adc
out
lret
rolb
cmp
or
push
jl
dec
sti
mov
ds
rclb
lret
adc
ds
cmp
lea
push
xchg
cmpsl
pop
pop
and
push
call
adc
xchg
scas
pop
dec
lods
dec
das
jb
mov
test
aas
ret
pushf
cli
fimull
ret
push
mov
add
pop
cmc
lea
jns
push
mov
sbb
pop
mov
dec
jmp
xchg
cmpsb
outsl
lret
insl
out
xchg
jno
lcall
pop
ja
dec
testl
lds
jg
scas
loop
jno
fldl
mov
loop
in
pushf
push
pushl
ret
or
int3
les
stos
data16
lods
mov
mov
mov
shll
sahf
cmp
fcomps
test
jmp
xor
pop
in
xor
stos
push
cs
jmp
xor
outsl
xchg
pop
pop
mov
jg
mov
lret
push
dec
inc
xor
xchg
or
arpl
lea
push
mov
pushf
push
pusha
pop
dec
fisubs
fs
ljmp
add
adc
in
icebp
adc
popl
inc
sub
cli
leave
ret
inc
xchg
adc
sti
into
mov
movsl
pop
mov
rcrl
pop
negb
jl
xorl
push
arpl
lret
xchg
dec
mov
in
lock
stos
fdivrp
jl
xor
call
pop
xlat
pop
jb
imul
adc
mov
lods
push
leave
ss
add
aaa
xchg
or
cli
repz
cmp
xor
mov
iret
leave
sahf
in
pop
fstpl
js
sarb
sbb
int
add
xchg
cmc
jb
and
sub
mov
mov
cli
sub
cmp
popf
sbb
fwait
add
mov
and
out
cmp
popf
iret
sti
sub
arpl
push
roll
in
add
or
dec
pop
sbb
inc
jb
inc
sahf
insb
outsl
fucomip
sbb
fldl
pop
mov
cmpsl
inc
in
fstps
in
dec
repz
push
push
notb
push
movsb
jg
inc
inc
inc
and
and
fisubrl
xchg
ljmp
or
cld
movsb
pop
or
call
mov
stos
sahf
pushf
icebp
lock
and
comiss
dec
cmp
mov
cltd
xor
cltd
lock
mull
add
sti
andl
insl
or
jecxz
add
mov
or
lock
sbb
sti
loopne
sti
push
popa
inc
pop
push
add
lret
arpl
pop
xor
gs
ret
xor
cmp
pop
out
loopne
mov
mov
add
inc
and
lahf
push
cmc
aam
imul
aad
mul
or
test
mov
jge
movsl
ss
jmp
cmpsb
mov
addr16
mov
lods
pop
or
jle
ret
mov
sub
hlt
clc
ficoms
dec
or
lcall
cmp
leave
fildl
leave
xor
xchg
fstpt
leave
dec
push
xor
xor
in
fnsaves
push
mov
arpl
adcb
or
adc
mov
add
pop
pop
fmuls
je
add
dec
lret
insl
cli
lea
xor
outsb
adc
adc
mov
loopne
mov
outsb
mov
mov
gs
in
mov
stc
sbb
or
mov
mov
fisubs
mov
jle
leave
scas
inc
adc
outsb
jae
sub
adc
out
and
mov
adc
test
in
inc
dec
push
add
pop
cmpsl
stos
inc
in
lret
jg
push
outsl
cmp
sbb
xchg
ret
jge
mov
aam
pop
out
push
decb
push
fadds
pop
mov
cmc
sti
leave
imul
pushf
aam
cmp
add
inc
pop
adc
out
push
or
push
mov
in
mov
pop
fnstenv
inc
fisubrl
in
xchg
movsl
movsl
shrd
push
jp
pop
xlat
jp
loope
nop
fs
clc
xchg
das
mov
xchg
sbb
cmpb
xor
fdivs
or
mov
test
addr16
mov
push
rclb
mov
adc
or
imul
lahf
mov
sbb
inc
dec
test
rcr
jp
or
dec
cmpsl
pop
mov
aaa
out
dec
rol
call
rol
or
test
add
xchg
add
popf
dec
xor
dec
and
mov
stos
jb
js
sahf
mov
push
pop
mov
cwtl
nop
sbb
lcall
jge
push
sbb
jl
outsl
dec
test
pop
pop
fdivrl
add
sub
or
xchg
jb
outsb
rcrl
mov
outsl
arpl
test
imul
mov
out
mov
lds
jp
add
test
repz
sub
das
xor
inc
mov
jo
xchg
mov
pop
xor
mov
push
jnp
inc
lods
jge
mov
cmp
movsb
inc
adc
cltd
jg
mov
xchg
sti
popa
jns
sub
pop
dec
rorb
cltd
add
add
cwtl
clc
sti
cmpsb
inc
jl
aam
fdiv
mov
xor
sbb
push
cltd
ss
cmc
enter
fbstp
daa
dec
or
push
jl
or
dec
jns
adc
jecxz
jns
cwtl
shlb
xchg
mov
mov
out
ljmp
mov
mov
sbb
clc
out
test
push
add
test
scas
mov
mov
mov
mov
popf
repnz
clc
and
add
xchg
adcb
pop
lret
sub
psubw
jnp
inc
int
mov
enter
movsb
mov
xchg
lea
dec
repnz
xor
mov
and
adc
add
les
inc
in
xlat
sub
xor
pop
adc
movsb
inc
xor
push
pop
andl
sub
mov
data16
mov
sti
adc
andb
mov
and
pop
mov
mov
jl
jl
clc
adc
lret
popa
mov
mov
je
imul
enter
jmp
data16
xlat
in
inc
leave
lods
cmp
sbb
add
aaa
jb
sahf
cmp
xor
sub
sbb
test
loopne
dec
js
jb
sbb
popa
test
fwait
lahf
and
out
push
ljmp
stos
sub
orl
sti
dec
incl
push
ljmp
movsl
int
mov
test
fsub
out
loopne
jecxz
dec
jbe
mov
mov
mov
incb
push
cmpsb
insb
test
int
mov
hlt
xor
jecxz
movl
leave
mov
mov
iret
jbe
test
xor
nop
lret
mov
das
push
pop
mov
scas
pop
fldt
add
pop
shll
xchg
lcall
aam
sbb
add
cs
inc
dec
add
or
or
dec
xor
adc
ljmp
pusha
sub
movsl
inc
xchg
iret
fcomi
jp
cwtl
fildll
mov
dec
adc
loope
push
sbb
push
and
lea
mov
cmp
push
xor
xor
xor
out
mov
lret
jmp
mov
sbb
mov
push
mov
pop
xchg
sbb
add
insb
lock
or
jl
into
and
shrl
les
lahf
mov
sub
xor
cs
int
lods
adc
lea
insb
ret
int
jbe
inc
andb
xchg
mov
cmp
xor
das
out
andl
and
ret
fcomp
scas
mov
xor
sti
xchg
inc
arpl
mov
nop
adc
push
sbb
xchg
out
dec
dec
in
xorl
enter
mov
dec
das
ret
ret
push
jae
jle
inc
ja
cmp
add
mov
int
mov
cwtl
cmp
outsb
mov
jae
xchg
insb
jge
mov
push
stc
or
xchg
jne
adc
dec
nop
xor
fsubrs
int3
imul
outsb
stc
or
push
add
push
loop
inc
push
ss
flds
mov
int
jb
xor
fs
std
leave
mov
into
cmp
dec
mov
out
or
test
inc
shlb
loope
pop
out
sbb
sub
mov
in
lret
ja
and
in
inc
mov
roll
nop
ret
fisubl
push
pop
jae
jg
push
fcomp
dec
xor
jp
adc
cmpb
mov
icebp
mov
push
sbb
dec
xor
pop
jne
in
jmp
dec
push
in
nop
test
jb
rorl
xlat
cwtl
pop
adc
add
add
push
pop
and
aaa
sbb
shrl
outsb
sub
pop
daa
add
outsl
mov
movsl
sbb
mov
push
arpl
mov
int
xchg
lcall
mov
and
scas
loop
das
dec
adc
xor
cmc
cmpsl
test
out
js
aaa
lock
cli
pusha
ds
rcrb
enter
dec
mov
iret
dec
movl
sar
jmp
jmp
pop
outsb
and
js
data16
mov
inc
in
pop
inc
sbbb
fdivrp
adc
sub
mov
pop
xchg
out
xchg
sbb
or
ret
divb
xchg
fstps
rcl
inc
stos
lret
into
dec
adc
popf
ret
or
pop
shr
jbe
mov
mov
push
jge
stc
mov
loopne
jbe
int3
sub
int
sub
add
pop
cltd
pop
pop
xchg
mov
cmp
inc
xchg
xchg
xchg
xor
cltd
push
mov
push
cmpsb
movsb
or
fnstcw
shll
sub
pop
push
xor
mov
jo
sbb
cmp
lcall
cwtl
mov
lods
jmp
or
jb
std
call
lcall
inc
inc
ss
data16
out
or
ret
testb
inc
cltd
sahf
sub
add
rol
lcall
insl
pusha
and
in
lods
shll
jmp
add
test
test
aad
stc
mov
cmp
fsts
shll
aad
adc
fstpt
ret
mov
and
jo
pop
xor
xor
loop
faddl
mov
adc
pop
cmpsb
outsl
ss
sub
movsb
in
adc
inc
cli
adc
lods
test
js
subb
xchg
or
cmp
not
push
push
nop
and
push
cmp
test
enter
mov
pop
pop
notb
xor
jl
sti
or
movsl
jno
mov
sub
out
pop
je
shrl
ja
push
mov
pusha
mov
leave
lock
xchg
mov
xor
xchg
jecxz,pn
jg
sbb
and
cmp
sub
jbe
insw
out
dec
push
push
pop
mov
pop
jbe
sub
iret
sbb
sub
add
stc
sub
mov
and
jge
jcxz
fs
add
loopne
rep
incb
or
jns
dec
sub
jbe
jno
mov
mov
mov
scas
shrd
sub
or
ret
and
xchg
adc
mov
frstor
lock
rcll
out
pusha
adc
add
and
fcom
push
push
mov
leave
mov
repz
jae
jae
jecxz
lods
mov
inc
add
lahf
push
addr16
pop
lds
jo
fbld
loope
or
jns
fcmovu
iret
movsb
and
fsts
cltd
and
daa
in
dec
sbb
lcall
push
adc
lret
and
out
sbb
mov
movl
and
imul
push
test
scas
imul
lcall
adc
xor
stos
test
push
jmp
ja
push
pop
hlt
push
js
cmp
jge
lods
add
mov
into
out
hlt
notb
dec
push
push
and
inc
dec
and
sub
cmp
cmp
add
outsl
push
dec
cmp
inc
into
loop
out
jne
push
lea
movsb
xlat
and
outsb
xchg
pop
subb
jo
in
sbb
mov
push
and
push
and
xchg
les
stos
or
jb
add
fucom
push
or
dec
test
mov
inc
sub
fimuls
sub
pop
sbb
cmp
xchg
lock
adc
push
cmpsb
mov
inc
inc
mulb
cmp
imul
push
leave
pop
jbe
and
fwait
or
in
mov
bound
daa
pop
add
iret
repz
mov
inc
jmp
push
and
out
add
cmpsl
enter
pop
jae
lock
clc
sub
mov
dec
repz
scas
out
mov
cmp
xor
ja
xchg
adc
add
jno
cmp
popa
jmp
jg
fwait
cmp
lcall
sub
push
inc
xchg
in
clc
jp
inc
hlt
es
adc
in
ficoms
lcall
add
mov
jp
push
mov
cmc
jnp
loop
push
add
fdivrl
aaa
push
outsb
xlat
inc
sahf
je
test
lock
insb
jmp
mov
popf
cld
popf
xchg
ljmp
inc
aas
push
xchg
sub
mov
lods
push
mov
lock
sti
or
in
cmp
outsl
movb
outsb
fstp
mov
imul
dec
int
ss
xchg
inc
push
test
jne
sbb
pop
dec
mov
cmp
mov
cmpsl
int3
in
fbld
xchg
add
push
shll
icebp
mov
aam
cmc
cmc
push
add
inc
push
cmp
mov
adc
movsl
aam
sub
mov
shrb
ds
int3
and
mov
pop
or
mov
inc
ljmp
dec
push
stos
inc
and
shl
inc
cmp
mov
adc
pop
ret
cmp
ret
stc
cwtl
icebp
mov
mov
mov
and
std
int3
mov
jno
in
pushw
pop
and
daa
pop
js
xor
pop
xchg
xchg
jnp
inc
div
cmc
jle
pop
jno
sub
push
sub
adc
mov
mov
insl
cwtl
cmp
nop
fs
ret
lods
outsb
out
popa
lahf
mov
repz
daa
in
repnz
lds
or
pop
xchg
lds
or
sbb
out
push
ret
pop
mov
sbb
cltd
lea
cmp
mov
movsb
pop
in
shrb
pop
lret
jmp
psubw
mov
mov
ret
test
push
repz
or
test
nop
fbstp
dec
mov
xor
dec
pop
push
or
fldt
shl
xchg
xor
jmp
jle
mov
xchg
xlat
loopne
mov
adc
clc
popa
or
mov
sbb
jns
jp
addr16
mov
mov
mov
sbb
mov
dec
add
adcb
outsl
shlb
mov
jmp
ds
stos
or
cmpsb
imul
pop
stos
sub
js
cs
cmp
jno
mov
in
and
lods
jmp
xchg
outsb
jnp
push
add
xorl
xor
clc
xchg
pop
mov
and
cli
mov
outsb
hlt
outsb
pop
or
in
cltd
nop
insb
inc
inc
call
stos
movsb
das
push
xchg
out
sbb
sbb
mov
push
gs
lods
sarl
jbe
iret
subl
call
push
dec
jp
in
xchg
call
cli
pop
xchg
push
roll
mov
sub
xlat
lock
popa
ja
pop
and
mov
js
shll
add
popf
fs
idivl
in
repnz
imul
movsl
mov
pusha
jbe
ret
aas
jbe
push
xchg
sahf
js
scas
dec
mov
push
mov
insl
adc
mov
jl
imul
popf
xchg
ljmp
xor
out
dec
bound
sahf
ljmp
in
shlb
or
jp
jmp
or
stos
jmp
push
cli
cmpb
push
xchg
cmpsb
sub
push
ds
iret
push
cmpsb
xchg
or
jg
push
pushf
pop
fmuls
and
iret
ds
rolb
jge
popf
lret
mov
inc
xchg
lods
fs
fstl
rorl
mulb
repnz
arpl
push
mov
inc
in
push
add
mov
xchg
arpl
shr
aaa
xlat
dec
jo
inc
test
es
mov
loop
das
out
int
loopne
or
cwtl
fcomps
xor
or
aas
sbb
push
xchg
mov
outsl
shlb
insl
xlat
pop
mov
loope
pmaxsw
mov
xor
sub
sarl
ret
lds
mov
shlb
icebp
mov
push
xchg
les
sbb
aaa
test
ds
push
sbb
loope
stos
sub
push
sub
jecxz
test
sbbb
pop
out
dec
cmp
and
ljmp
pop
aas
sbbb
xor
mov
test
iret
movsl
mov
mov
sbb
ret
pop
mov
push
add
cmp
adc
xchg
aad
lods
lahf
imul
mov
jbe
add
adc
les
orb
addr16
data16
mov
in
aam
cmp
jne
xchg
xor
in
add
cmp
movsb
add
sub
sub
jmp
jmp
cwtl
push
mov
bound
and
jns
addr16
insl
mov
icebp
mov
add
xchg
cli
sbb
or
leave
pop
add
pop
andl
push
mov
cld
lods
leave
sbb
nop
pop
fcmovne
or
jl
loopne
sarb
orl
mov
imul
mov
cs
fsubl
ret
mov
xor
into
sbb
movsl
ljmp
inc
daa
jle
loop
add
pop
shr
xchg
sarb
push
mov
js
data16
mov
mov
adc
push
lods
testb
mov
ret
test
test
mov
mov
mov
repnz
mov
and
fmul
js
jbe
or
fiaddl
mov
xchg
mov
clc
shll
sub
fiaddl
ret
out
cmc
push
add
mov
or
pop
nop
inc
shr
add
push
repz
int
pop
outsb
mov
adc
jb
addb
mov
push
mov
xchg
leave
movsl
leave
leave
faddl
rcrl
addl
pop
sbb
sbb
das
inc
and
rcrl
cmp
movsb
call
stos
aaa
loop
lea
ja
icebp
into
push
in
bound
pop
push
fs
movl
add
xchg
adc
lea
sbb
imull
pop
add
in
daa
test
add
dec
ss
inc
sbb
push
ds
sub
mov
out
cmp
xor
cmp
push
sub
insl
movsl
test
rcr
test
jno
ja
mov
mov
jg
jecxz
test
sbb
mov
add
and
std
xchg
rorb
cltd
and
lods
adc
dec
into
repz
sar
sub
cwtl
pop
xchg
jnp
jbe
aad
mov
out
pop
and
inc
int
mov
ret
notb
sub
and
sbb
decb
in
mov
adc
push
call
daa
and
shl
adc
dec
test
shlb
js
mov
in
inc
add
add
sbb
mulb
in
xor
or
sub
lea
cmc
jne
jno
jp
scas
incb
dec
sarb
dec
sbb
push
inc
fimuls
adc
mov
je
xchg
les
sub
inc
mov
hlt
ja
sbbl
dec
rcrl
fildll
outsl
jl
mov
xchg
idivb
pushf
mov
mov
xchg
dec
in
out
xchg
adc
shlb
jo
insl
in
fwait
and
and
fildl
out
pop
fisubrl
dec
mov
insl
push
ficompl
js
loop
shlb
aas
push
mov
dec
dec
or
clc
lret
dec
ficomps
jl
cmp
popa
xor
mov
push
test
lods
ret
xchg
inc
cmp
xorb
xchg
inc
push
xchg
aas
inc
ss
sbb
jge
loop
inc
jae
stos
mov
fldenv
mov
in
add
or
fwait
mov
cmpsl
xchg
xchg
leave
lea
sbb
xchg
xor
jo
pop
xchg
pop
push
imul
add
stos
cmp
test
fs
cli
mov
mov
dec
rclb
sub
mov
cmpsl
push
je
inc
sbb
lahf
fildl
ret
add
bound
cli
loop
idivb
aam
sbb
fcomps
lods
cmp
shll
push
add
mov
daa
pop
mov
in
adc
jne
test
mov
push
in
les
jge
dec
inc
lds
in
push
add
inc
and
mov
popf
jne
pop
stos
stos
xchg
adc
xchg
fstps
sub
xchg
inc
test
xlat
fwait
or
push
ret
mov
mul
jecxz
sub
fwait
fwait
lods
mov
inc
add
push
inc
sub
addr16
ror
call
jle
mov
jbe
push
lods
mov
daa
cmpsb
add
sub
adcb
arpl
popf
xchg
sbb
dec
sbb
into
mov
or
in
int
jmp
jo
mov
dec
loopne
sub
adc
cmp
push
cmp
mov
xor
sbb
es
jecxz
repz
xchg
jnp
xchg
mov
mov
or
stos
or
enter
mov
sub
movsl
rcll
repnz
push
add
and
fsubl
mov
inc
decb
sub
aaa
jb
into
mov
cmp
mov
cli
add
stc
mov
setp
sub
stos
add
popf
xor
in
or
in
adc
jns
adc
jne
stos
lret
fwait
pop
sub
nop
movsl
out
mov
inc
dec
ja
or
movsl
pop
repnz
pop
pop
jmp
push
fs
or
push
jg
sbb
int3
cmp
cmp
push
xchg
jns
cmpsb
xor
sub
shll
add
jp
mov
mov
jne
lods
aad
pop
out
mov
cmp
mov
je
popf
inc
sbb
das
orl
mov
sbb
push
jno
decl
lahf
and
andps
scas
or
mov
stc
pop
or
and
js
imul
test
dec
movsl
add
add
imul
push
jne
sub
ret
call
cs
jmp
sbb
inc
sbb
lods
mov
in
inc
call
mov
jge
xchg
shr
loop
xchg
and
fwait
add
xchg
imul
push
pop
int
addr16
add
outsl
cmpsb
in
out
sub
push
jge
test
popf
ljmp
xor
dec
adc
imul
scas
sub
cld
add
dec
insl
dec
cli
inc
jl
les
ret
push
cmpsb
mov
into
test
mov
iret
mov
imull
sub
xchg
mov
bound
dec
dec
cmp
mov
inc
add
andb
cwtl
lock
into
bound
test
int3
and
lret
mov
jmp
mov
inc
pop
mov
enter
data16
into
ficompl
sub
rcr
notl
divl
cmp
add
sti
push
or
inc
pop
int
imul
jno
ds
jb
insb
test
movsl
add
adc
mov
stos
or
lret
xor
es
xor
cmp
test
mov
movsb
mov
hlt
outsl
pop
out
mov
and
lock
cmp
cmp
je
sub
push
mov
cmpsb
xor
xor
and
repnz
iret
sbb
jecxz
mov
dec
pop
mov
addr16
fwait
mov
movb
outsb
mov
movsb
out
outsb
pop
jnp
in
sub
jo
cli
das
scas
sbb
sbb
or
xchg
cmpsb
pop
fldl
daa
inc
dec
inc
leave
mov
inc
sub
sbb
mov
or
leave
dec
insl
mov
sbb
xor
jns
mov
mov
shrl
in
and
aad
push
sti
incb
jmp
pushf
pop
loop
fs
pop
orl
jno
mov
repz
pop
lret
arpl
mov
jbe
test
mov
pop
divl
xchg
rcll
dec
or
ftst
test
cmp
xchg
xchg
jb
shll
test
pop
aad
adc
cli
dec
cmpsl
je
lods
cmp
inc
mov
rclb
sbbb
ret
xchg
das
lahf
sub
bswap
cmp
pusha
shrl
loopw
inc
sub
xchg
pop
lahf
pop
loope
lcall
xchg
repz
jle
mov
adc
xchg
inc
mov
inc
ljmp
dec
xchg
or
leave
and
inc
and
sbb
inc
movb
enter
push
repz
sbb
add
scas
add
mov
jns
mov
push
lcall
or
stos
ljmp
sub
lea
loop
loop
mov
outsb
add
ss
out
or
hlt
imul
jg
jg
leave
or
push
mov
out
mov
jp
jge
add
roll
les
outsl
or
or
rcr
add
inc
int3
push
rcrl
fidivs
repz
mov
pop
jne
mov
push
xchg
pop
jbe
dec
repnz
pusha
xorb
fmulp
testl
fwait
jge
dec
mov
mov
push
xor
jge
jge
ljmp
aam
mov
mov
push
xchg
dec
push
pop
ja
xorb
xor
pusha
add
out
sar
insl
fs
jecxz
lods
mov
inc
out
pop
scas
outsl
je
lret
out
jb
mov
ret
push
fs
call
scas
push
fstl
dec
mov
lea
jbe
rcll
out
mov
xchg
lea
test
icebp
and
mov
adc
xchg
lods
mov
xor
pushf
pop
xlat
dec
psrlq
pusha
cmp
ficoml
pop
aaa
lods
mov
adcl
sub
aad
xor
mov
in
stos
popa
xorb
outsl
add
aaa
jbe
push
popa
out
push
mov
aas
push
jnp
fcomp
pop
jmp
imul
lods
adc
test
or
push
das
adcb
aam
jmp
pop
mov
loope
ljmp
scas
xchg
adc
fildll
popf
pop
cmp
jecxz
jmp
subl
cltd
in
loopne
aaa
lret
pop
jb
fwait
popf
and
inc
ret
jl
mov
sarb
pop
sub
addb
movl
mov
div
mov
imul
scas
mov
movsb
popf
imul
lret
cmc
jne
push
iret
add
dec
add
test
mov
clc
add
push
add
test
incb
inc
decl
add
and
cmpl
mov
cmpb
jge
std
inc
imul
xchg
dec
repnz
and
inc
dec
cmp
xorl
sbb
dec
lret
lret
fstps
mov
mov
inc
pushf
mov
arpl
jmp
ret
dec
fldenv
or
pushf
loopne
pop
mov
cli
cmp
push
sub
les
daa
lret
xchg
adc
rclb
int
push
rolb
cwtl
sub
addl
fldenv
sbb
lcall
negl
inc
ljmp
lock
fistl
push
pop
dec
int
int3
jp
lret
xchg
fdivrl
mov
adc
push
div
arpl
mov
movsl
dec
lret
cltd
inc
pop
cmp
mull
push
aam
movsl
add
mov
fcmove
xchg
mov
shll
sbb
push
mov
xor
sub
imul
or
shrl
fxch
or
iret
and
fimuls
ljmp
cld
push
test
mov
stos
push
shl
push
sbb
mov
xor
leave
jecxz
push
enter
stos
add
mov
and
dec
jle
jecxz
jo
lods
lahf
pop
test
ja
xor
xor
shll
inc
pop
inc
aam
fcoms
addr16
rcr
push
inc
or
add
inc
es
hlt
sbb
or
inc
sbb
popf
adc
ds
lcall
or
lods
mov
hlt
outsl
dec
test
and
mov
jl
andb
adc
jge
xor
ja
pop
pop
imul
or
shrl
cmpps
fbld
push
sar
mov
adc
or
fs
les
xchg
imul
jno
dec
fistps
arpl
mov
xor
lods
inc
push
outsb
inc
loopw
sub
insl
loope
in
cs
xchg
dec
std
dec
test
inc
mov
testb
add
enter
cmpb
or
and
xchg
repnz
ret
std
idiv
lds
dec
xchg
ja
sub
mov
and
jle
nop
faddl
dec
push
shrl
or
andl
movsb
xor
jle
inc
daa
les
jnp
out
pop
inc
jbe
das
or
jecxz
daa
mov
dec
adc
cmpsb
call
ret
sti
sahf
xor
gs
xchg
push
pop
add
pop
and
outsl
popf
notb
fsub
outsb
cmp
jae
inc
test
jecxz
outsb
sbb
popa
int
loop
mov
jbe
dec
insl
jbe
pop
cmpsb
mov
shrl
flds
xor
fmuls
subb
mov
add
jns
dec
les
and
jge
test
inc
cld
adc
pop
add
xlat
cltd
stos
pop
popf
dec
inc
mov
decb
sub
shll
mov
pop
lods
iretw
push
pop
xor
rorl
lds
int3
dec
or
repnz
lret
data16
xchg
jecxz
cmp
push
mov
outsl
push
test
mov
pop
lret
inc
mov
xor
mov
inc
ljmp
imul
repz
mov
ja
sbbb
out
and
xchg
pushf
xchg
pop
add
dec
sbb
es
in
cmpl
push
jecxz
adc
cltd
add
pop
pop
or
std
jns
aas
cmpsb
pop
scas
xchg
or
sbb
jb
out
cs
imul
repnz
movl
ret
push
les
rorl
cmp
xor
pop
bound
mov
sbb
jle
push
ljmp
xor
jp
sbb
sub
push
sarl
inc
arpl
imul
test
es
xchg
xchg
xchg
add
push
jbe
outsl
pushf
iret
shl
test
idiv
scas
lret
xor
push
push
jg
pop
xor
sbb
lods
movsb
push
aaa
mov
loop
xchg
inc
push
subl
in
xchg
sub
lret
lret
outsb
pop
jns
adc
push
jp
cmc
xor
fdivr
pushf
ret
mov
add
js
test
push
outsl
out
in
in
xchg
pusha
push
sub
pushf
test
cmp
iret
push
in
icebp
jmp
sahf
mov
andl
sbb
in
sbb
xor
and
dec
stc
movsl
cmp
ja
xchg
iret
fucomip
aaa
in
xor
pop
scas
enter
jecxz
jne
inc
test
xchg
lock
je,pn
sub
subb
push
inc
xor
sub
pop
jmp
mov
test
mov
mov
jge
push
out
dec
enter
pop
mov
and
aad
and
in
add
dec
cli
or
lcall
mov
lcall
clc
imul
out
ljmp
mov
cmc
mov
push
mov
aam
jnp
lcall
xchg
cmc
ficomps
mov
insl
jmp
inc
or
inc
xor
adc
rcl
cs
repnz
shl
lds
or
les
adc
adc
fwait
or
into
ret
adc
shlb
push
movsw
lret
loope
inc
sti
pop
jl
out
andb
push
adc
or
pop
xlat
xchg
inc
adc
and
sbb
testb
roll
mov
jne
or
cmp
add
or
cmp
or
sub
test
push
pop
push
das
in
adc
add
lea
jae
pop
test
lock
je
sub
mov
cmp
xor
int
xor
pop
push
adc
fisttpl
lds
mov
and
pop
test
pop
inc
xor
js
in
pop
and
test
aaa
mov
sti
cwtl
dec
adc
and
xchg
pop
sarl
add
inc
lock
ljmp
loop
pop
cwtl
xor
sbb
adc
testl
mov
in
xchg
cli
xor
sbb
mov
dec
dec
ret
or
inc
insb
unpckhps
inc
push
das
mov
jmp
dec
add
dec
jl
cmc
fildll
test
push
pop
iret
or
lock
insl
push
jecxz
push
sahf
pusha
mov
mov
jae
sbb
mov
push
ret
mov
popf
das
or
mov
adc
adc
xor
push
hlt
xor
mov
mov
nop
cmp
jns
xchg
or
movsb
rol
sub
scas
inc
addr16
call
pop
loop
ja
jb
sub
rcl
push
not
cmp
fstpt
lret
mov
xor
jne
es
outsl
or
jb
mov
add
mov
mov
mul
je
out
popa
mov
lcall
dec
and
jl
add
dec
sahf
push
adc
out
aas
movsl
pop
xchg
adc
je
or
mov
add
nop
fbstp
jnp
js
mov
mov
lea
mov
je
push
dec
leave
inc
add
mov
lea
sbb
movlps
sbb
push
ret
aam
xchg
sub
adc
pop
cltd
out
adc
int3
mov
cmp
or
cwtl
xchg
clc
fsubs
inc
or
addb
lock
adc
test
xor
push
out
sub
test
lret
popf
xlat
pusha
sbb
adc
aam
push
pop
js
dec
pushf
mov
arpl
ret
jg
imul
ja
mov
cld
nop
mov
sbb
xor
in
cmpb
xchg
dec
call
cmp
call
lcall
fisttpll
dec
and
xchg
inc
and
lret
adc
scas
rorl
sbb
and
jo
jno
negb
fld
outsl
dec
pop
jnp
mov
aad
push
jns
fcomi
or
das
js
and
sbb
ja
pop
xchg
aad
idivl
outsb
aas
data16
mov
push
mov
shll
push
sti
cmpsb
inc
push
popf
vorps
bound
int
push
lahf
pop
bound
pop
lret
in
jmp
lds
pushf
mov
rorl
add
or
sbb
dec
jg
cmpb
xor
push
pusha
or
in
das
inc
push
push
and
int3
icebp
mov
idivl
aam
test
loopne
sub
add
cli
aas
lahf
inc
out
mov
or
cmp
jl
push
cmp
sarb
test
clc
xor
dec
ss
fisubs
data16
mov
call
je
out
lds
divl
sbb
pop
push
jmp
inc
outsb
aam
lock
hlt
adc
daa
push
push
sahf
nop
push
mov
pop
mov
movsb
xor
mov
nop
in
and
loop
jmp
adc
ret
jbe
or
movsl
lods
decl
push
std
and
inc
push
std
int
dec
bound
mov
gs
pop
aam
sbb
xlat
push
push
adc
add
push
cli
cmp
or
repnz
mov
push
iret
jmp
nop
lods
popa
adc
push
das
dec
mov
push
scas
mov
fistl
in
xor
or
cmp
test
call
popa
pop
xchg
sub
mov
aam
mov
inc
fsts
jecxz
lea
lahf
out
mov
push
aas
xchg
jnp
in
adc
cwtl
mov
mov
and
data16
mov
sbb
ljmp
jbe
add
dec
fcomps
fcomps
xor
ficoms
cmpsb
mov
dec
out
xor
popf
push
pop
fwait
sbb
mov
pop
ret
rcrb
pop
mov
jbe
loopne
mov
jmp
inc
push
add
pop
dec
arpl
mov
add
ffreep
sbb
xor
push
xor
mov
xchg
push
aad
subb
xchg
jns
pop
ficoms
div
scas
je
jp
pushf
loopne
xchg
sub
xchg
pop
iret
in
mov
fidivrl
mov
mov
addr16
pop
push
daa
cmp
jge
in
or
inc
dec
jmp
and
movsb
add
ret
pop
or
test
incl
adc
xchg
sub
mov
cmp
incl
inc
addl
dec
mov
xor
dec
xchg
mov
cmpsl
jb
outsb
ja
aam
push
outsb
add
push
mov
cs
adc
rorb
int
fsts
loope
mov
push
or
sub
std
loopne
mov
add
or
dec
inc
mov
dec
and
dec
xchg
jmp
xchg
pusha
push
mov
mov
roll
aaa
mov
rol
pop
push
mov
cmp
mov
ljmp
testb
mov
sub
or
addr16
jp
ss
jmp
ljmp
xchg
sbb
daa
in
mov
sub
or
sub
into
pop
dec
ds
aad
dec
or
fcompl
mov
hlt
stc
pop
lret
adc
adcl
pusha
pop
rorb
mov
jge
sub
mov
sbb
aam
popf
pusha
sbb
adc
dec
mov
mov
hlt
out
pop
and
insb
sub
jne
xchg
das
fcmovb
xchg
lods
push
inc
jg
int3
call
cld
cmpsb
rcll
in
xchg
fwait
in
pop
cli
outsb
push
jb
scas
add
sbb
gs
popa
adc
jns
jne
test
push
mov
xor
pop
mov
imul
sub
push
mov
mov
cmpsl
and
push
imul
mov
ljmp
clc
pop
cmp
xor
mov
es
das
push
mov
popa
mov
and
rcr
xor
mov
sub
iret
jecxz
call
sbb
popl
push
adc
dec
push
jae
mov
mov
sub
xchg
add
cld
lock
ret
dec
shr
add
sbb
xchg
sub
pop
repnz
sbb
mov
mov
adc
ficoml
call
addl
cmp
sahf
push
daa
lcall
popa
dec
jmp
scas
adc
mov
xor
popa
fists
hlt
mov
cli
lret
and
mov
push
fstpl
dec
xchg
sbb
pop
dec
icebp
cld
insl
xchg
test
and
xchg
out
scas
fmul
pop
rorb
xchg
fldt
adc
xchg
shlb
dec
jo
cltd
mov
dec
dec
xchg
movsb
inc
inc
sub
and
stos
mov
mov
cltd
rorl
sub
call
pminub
test
das
and
in
or
std
je
in
lds
add
cmp
mov
jmp
mov
sub
push
shrb
into
bound
and
lret
ljmp
cmp
mov
inc
lods
push
call
movb
ds
test
inc
xchg
mov
mov
and
mov
xchg
lods
jae
lods
sub
mov
popa
das
mov
aam
pushf
fldenv
adc
cltd
sub
fs
jle
inc
pushl
xor
dec
sub
xchg
cs
outsl
sahf
sbb
or
xlat
int3
addr16
adc
push
je
adc
pop
out
mov
aas
out
imul
and
ljmp
pop
add
and
jb
jle
xor
outsl
mov
jmp
xchg
xchg
mov
int
aaa
jno
sub
pop
adc
inc
mov
testl
js
mov
mov
or
fwait
lods
pop
pop
adc
fsubrs
jecxz
pop
sarb
jle
sub
inc
sbb
das
inc
xchg
popf
pop
in
mov
loopne
dec
jp
imul
int
ret
or
les
mov
push
out
jb
jae
push
pop
add
stc
jmp
cmp
inc
xlat
out
jg
jp
jae
je
and
cwtl
js
nop
mov
repz
in
jmp
inc
and
push
inc
das
loope
and
xor
in
pop
lret
and
rcll
mov
sub
push
fimuls
in
lcall
mov
sbb
or
xchg
cmp
cltd
xchg
adc
test
iret
pop
jg
test
push
in
imul
cmpsb
jb
inc
inc
mov
mov
in
sub
pop
jno
ficoms
dec
outsb
inc
lock
or
sbb
xchg
inc
pop
dec
sbb
or
dec
mov
xchg
inc
or
decb
jmp
imul
div
mov
dec
add
jmp
call
shl
test
cld
xchg
xchg
cmpb
and
stos
pop
jg
and
xor
sbb
aam
aaa
rol
mov
stos
xchg
out
aaa
adc
mov
jmp
cld
int
xchg
xor
in
mov
ficoml
pop
mov
jnp
pop
and
push
subb
pop
mov
xchg
cmp
push
scas
pop
movsb
je
xor
pop
push
leave
stos
call
push
cmc
clc
es
push
stos
shrb
jo
or
push
dec
or
xchg
in
pop
aam
std
sbb
test
scas
dec
jecxz
aam
in
das
ja
cwtl
inc
andl
imul
ss
loop
ljmp
pop
repnz
dec
bound
cmp
pop
lods
fcmovne
xor
lods
repnz
xor
in
inc
adc
pop
dec
push
mov
adc
test
loopne
mov
mov
xor
cmpsb
mov
mov
xchg
cmp
xlat
jns
ljmp
cld
stos
movsl
shlb
sub
rcrb
mov
scas
leave
lds
push
xor
mov
lret
lods
cmc
jl
mov
and
scas
call
jnp
sbb
test
pop
jle
aaa
cmp
mov
arpl
jb
adc
pop
jp
or
lret
filds
shll
cltd
popf
mov
scas
rcrb
aas
lods
add
jge
repz
fisubrl
fcompl
loope
filds
push
inc
fwait
sahf
int3
dec
outsl
lea
and
lds
push
call
cwtl
pop
mov
les
std
stc
xor
mov
pop
xor
daa
leave
or
int3
and
xchg
je
cmp
fadds
and
push
jl
int
mov
xchg
or
iret
mov
adc
pop
adc
shl
jmp
xchg
cld
pop
lds
in
push
dec
sub
and
mov
das
sbb
out
cli
outsb
nop
mov
or
jmp
push
mov
stc
push
xor
mov
pop
movl
xor
push
mov
jl
mulb
pop
push
lods
inc
inc
insb
loope
rolb
bound
push
inc
pop
ficomps
or
mov
push
mov
and
push
push
lahf
jle
add
xor
jge
fwait
ljmp
sti
mov
in
fwait
pop
jb
stc
call
mov
xchg
pop
mov
push
aam
inc
mov
mov
push
sbb
test
rcl
pop
mov
js
and
or
dec
and
pop
mov
jae
push
aad
rcll
dec
and
pop
push
mov
xor
pop
xchg
stos
push
rcl
ljmp
dec
loope
pop
loop
es
or
pop
push
push
push
mov
mov
popf
or
push
mov
pop
les
loop
iret
loopne
inc
ds
iret
insl
sahf
leave
lcall
xor
xlat
dec
les
pop
mov
xchg
xchg
mov
push
pop
pop
addr16
fs
in
leave
inc
cld
push
sub
leave
push
lea
mov
insl
jno
hlt
inc
movsb
inc
andb
jmp
sub
lret
xor
push
stos
add
imul
mov
lret
cmpsb
sub
mov
mov
js
push
sub
jae
sub
lret
xchg
imul
arpl
imull
sub
sbb
mov
addb
mov
add
addr16
add
sub
fwait
sbb
iret
int
add
and
xor
push
aas
imul
ret
nop
lea
push
xor
pop
mov
xchg
pusha
fcos
lret
or
jnp,pn
ja
out
pop
adc
mov
push
in
add
in
dec
and
mov
outsl
rcrb
push
mov
sub
int3
sub
pop
pop
sbb
ret
sbb
mov
push
add
lods
mov
scas
adc
fimuls
mov
xor
das
rorb
jnp
fdivl
aas
mov
lock
outsb
jecxz
inc
pop
and
mov
push
xor
daa
dec
aas
sbb
out
inc
sub
adc
mov
xchg
pop
sub
sbb
jns
xor
inc
lock
cli
jmp
bnd
mov
dec
pop
xchg
repz
out
xchg
add
mov
pop
jl
inc
sub
jmp
xor
cltd
repz
mov
out
mov
test
push
pop
pop
xlat
dec
jle
rclb
or
outsl
mov
cmpsl
xor
push
and
xor
sti
xchg
dec
push
loopne
lea
xchg
mov
ret
sti
jle
out
lods
jmp
push
mov
mov
push
out
add
fmuls
out
jns
mulb
push
in
xchg
jne
negb
das
rclb
ljmp
sbb
shll
ret
ss
rorl
pop
push
sarl
leave
out
or
xchg
sub
inc
loope
insb
cli
mov
inc
jbe
xor
test
outsb
shrb
inc
jo
push
ss
mov
push
pusha
jmp
inc
shrl
push
inc
xchg
enter
cld
hlt
or
cmp
into
sbb
cld
shl
jle
jecxz
cmp
push
push
orb
add
imul
jnp
jnp
dec
hlt
adc
mov
pop
idivb
movsl
jmp
lods
rolb
push
imul
dec
inc
mov
push
pop
xlat
xchg
or
push
push
imulb
or
jns
ret
xor
lock
mov
nop
test
jo
dec
leave
mov
pop
or
aaa
sbb
jae
ret
inc
sbb
sbb
mov
in
sub
adc
jb
test
xchg
dec
xor
push
ret
push
push
icebp
mov
inc
imulb
jg
or
mov
mov
arpl
mov
push
pop
mov
cmp
cltd
test
lcall
mov
push
jg
loope
mov
add
mov
subb
mov
xchg
fcmovnu
test
sbb
std
hlt
pushw
aad
push
mov
movsl
or
jae
xor
inc
mov
test
sub
xchg
mov
add
xor
in
out
daa
and
inc
jecxz
or
movsl
adc
ret
call
lock
xchg
popa
xor
jbe
jecxz
dec
imul
cmpsl
stos
test
bound
int
lahf
jecxz
pop
pop
cmp
icebp
jl
push
and
insl
push
jne
outsb
aaa
cmp
das
dec
or
movsl
jb
imul
and
cmp
jecxz
sbb
sbb
mov
sub
pop
xchg
sbb
sbb
sbb
xlat
ror
mov
scas
push
mov
je
inc
fcmove
add
jae
pop
and
dec
jns
insb
mov
aad
gs
lods
or
pushl
and
lods
psubb
mov
addr16
fcoms
lock
rcl
daa
ret
push
xorb
ja
scas
shll
fwait
jo
ljmp
lock
cli
sbb
push
pop
fldenv
test
push
jmp
xchg
ficoml
add
inc
mov
mov
shll
jbe
push
insl
lret
loop
gs
jae
or
xor
dec
push
andb
jecxz
add
or
mov
dec
add
loope
ja
movsb
mov
xor
mov
pop
andl
outsl
fnstenv
cli
aam
sub
inc
mov
jmp
les
push
push
xchg
xchg
sub
lahf
in
iret
cwtl
inc
jbe
test
jb
and
inc
lret
ss
in
xchg
and
mov
jns
sbb
xchg
out
sbb
call
mov
jb
jle
sub
add
pop
dec
int3
mov
or
ljmp
jp
inc
not
rcl
add
es
xchg
rcrl
mov
shlb
mov
sub
pop
sahf
inc
daa
pop
jb
mov
sub
mov
mov
inc
insb
sahf
stos
pop
pop
or
pushf
cmp
pop
scas
pop
fbld
imul
imul
andl
or
push
fadds
pop
lahf
jns
cmc
cmp
stc
nop
jecxz
lock
cmp
loop
cld
or
lahf
sub
xor
add
iret
add
sahf
xchg
mov
sub
lods
mov
and
hlt
mov
pop
in
cmp
mov
mov
test
xchg
popa
or
add
in
cwtl
repnz
aam
push
inc
testl
and
jne
stc
inc
jmp
ja
mov
or
xchg
pop
jae
shrb
dec
ja
lods
add
sarl
push
fstl
inc
ljmp
lahf
movsb
popf
pop
pushf
jge
sub
push
lret
inc
pop
jle
adc
cmp
jg
test
inc
dec
stc
insl
out
stc
pop
ss
dec
out
mov
mov
xor
xor
repnz
in
and
fbstp
ror
ja
test
aad
lods
and
sbb
dec
lds
push
pop
jbe
dec
jmp
mov
insl
xchg
push
add
sub
pop
std
xchg
xor
ljmp
adc
ret
lock
dec
subl
fsts
lcall
rcrl
adc
push
out
sub
push
ljmp
inc
aam
cmp
mov
mov
mov
cld
hlt
ljmp
outsb
mov
ds
pop
stos
jl
adc
mov
dec
jne
dec
fstpl
jno
sub
sub
mov
ret
pop
insb
out
iret
std
aaa
add
shl
leave
jmp
mov
clc
add
popf
pop
jne
cld
nop
lods
lret
outsb
ss
xchg
and
negb
push
in
mov
repnz
ja
lret
fists
xor
fcoms
push
imull
andl
inc
cld
mov
lret
jno
dec
cmp
test
fwait
mov
xchg
popf
lcall
mov
xor
fisttpll
outsl
mov
outsl
leave
sub
sbb
mov
ret
sbb
leave
jbe
insl
in
lret
xchg
aaa
loope
test
stc
cmp
mov
jmp
cmp
cltd
push
inc
add
ja
push
out
push
popa
mov
ja
stc
push
loope
sub
pusha
cwtl
enter
mov
rorl
xchg
mov
jbe
lret
mov
test
adc
lock
dec
aaa
sub
std
dec
pop
add
enter
push
popa
inc
mov
iret
scas
adc
cltd
xor
mov
push
jl
cmc
xor
lret
cmp
fbstp
xchg
popa
out
stc
mov
call
push
in
or
jns
pushf
and
add
xor
push
dec
and
daa
pop
out
popa
repz
pusha
fdivrl
push
incl
mov
or
sbb
lret
pushf
inc
aas
sbb
push
in
pop
xchg
or
mov
scas
sub
pop
mov
cmp
jge
jno
push
cmp
dec
lds
sub
sub
aaa
cld
add
in
sbb
andl
push
mov
or
adc
adc
test
xor
hlt
xor
sub
jl
outsl
mov
and
xchg
js
xchg
ds
mov
dec
cs
cmc
test
push
jle
aas
sub
push
pop
inc
jp
mov
jmp
cmpsb
fmulp
aad
adc
stos
pop
lret
out
xor
cltd
pushf
adc
or
fwait
mov
pop
xor
adc
lret
into
push
int3
into
les
fnstsw
lock
push
mov
stos
in
cmp
xor
aas
imul
pop
sub
lods
pop
addr16
xor
add
cmp
ficomps
test
pop
jbe
test
mov
jo
outsb
add
cmp
imul
test
pop
ret
lret
std
lods
ss
add
das
sbb
mov
mov
lea
lahf
or
xor
sub
jnp
push
int3
sub
xchg
arpl
out
aad
pushf
sbb
shlb
dec
in
mov
mov
jo
daa
sub
inc
inc
jp
in
and
lods
cmp
orl
mov
lods
cmp
int
pop
push
call
enter
pop
scas
leave
aam
imul
in
sub
in
inc
shlb
adc
and
sahf
outsl
in
push
or
lret
dec
jne
jecxz
orb
jo
xacquire
sub
add
or
shl
cmc
sub
in
nop
xchg
xchg
loope
nop
in
inc
mov
add
rcrl
and
outsb
fwait
call
imull
jmp
cmpsb
orl
fcmovnbe
sub
add
and
jp
dec
xor
cmc
mov
add
scas
in
loop
and
loope
jnp
or
ja
test
inc
clc
test
ret
pop
aaa
lahf
and
aam
mov
mov
mov
ljmp
mov
iret
lock
test
xor
pop
xchg
es
mov
xorb
inc
xchg
testb
sbb
dec
stc
pop
xchg
push
and
adc
ljmp
xor
add
iret
xchg
out
hlt
cmpsb
cld
mov
push
or
push
add
sub
push
sub
loope
daa
dec
push
xchg
clc
and
inc
inc
aaa
mov
hlt
push
stc
cli
sahf
ja
ret
dec
rcrl
fcmovnu
mov
daa
sti
pop
je
addr16
pusha
not
pop
pop
jmp
mov
pop
ret
jp
fisubs
mov
pop
fs
decb
and
push
add
je
lret
push
push
mov
ja
int3
dec
mov
jne
push
rsm
data16
push
pusha
loope
mov
in
push
outsb
aad
decb
jb
popf
popa
adc
adc
adc
in
or
inc
mov
movsl
aad
imul
mov
daa
adc
ret
push
mov
jnp
cwtl
loopne
cwtl
sub
add
sub
std
andl
cld
loope
ret
mov
aad
push
mov
jno
outsl
fsubrs
inc
mov
arpl
iret
mov
test
mov
mov
ret
push
roll
mov
xor
ljmp
insl
dec
pop
leave
jp
add
mov
jo
stc
sbb
xchg
mov
movups
mul
push
sub
pop
add
subb
inc
jbe
jle
inc
pop
aaa
cmc
mov
insl
loop
enter
lods
fnstsw
sahf
cmc
mov
pop
outsb
shlb
xchg
and
sub
aaa
push
cmp
shll
lea
ffree
pop
cmpsl
sbb
and
fwait
or
mov
stos
dec
rolb
mov
dec
ret
test
lds
lods
or
jnp
in
ret
cmp
xor
inc
por
sbb
vcmpps
xchg
lcall
xor
je
movsl
sbb
jno
scas
incl
movsb
add
push
aad
lcall
enter
xchg
mov
fxch
cmp
ja
movsb
mov
stc
loope
testb
dec
fwait
adc
fstpt
call
popa
inc
cmpsl
insb
mov
cmpsb
xchg
arpl
dec
dec
pop
mov
fildll
inc
pop
outsb
fcmovnbe
gs
and
mov
call
subl
or
xor
xchg
push
push
jns
pop
cmp
add
cwtl
sbb
scas
add
xchg
jmp
jp
dec
xor
bnd
xchg
pop
push
xor
or
sbb
sbb
or
das
or
fsin
mov
cmp
push
arpl
mov
stos
test
pop
fmulp
push
pop
sbb
and
adc
xchg
mov
xor
mov
repnz
xor
gs
jnp
mov
fildll
mov
in
xor
sub
add
cmp
in
insl
ds
pop
testl
ret
xlat
cmp
mov
popf
xchg
push
mov
sarl
xor
xor
aas
clc
lret
add
outsb
pop
sbbl
dec
cwtl
cmp
xlat
js
and
ljmp
insl
js
dec
leave
repnz
fbstp
cwtl
sub
xchg
jp
sbb
dec
xor
lar
lahf
mov
sub
stos
insb
cltd
or
mov
ljmp
add
insl
mov
push
xchg
ss
push
pop
in
pop
jl
cmp
jge
cmpsl
aaa
push
nop
pop
mov
dec
lds
ret
mov
mov
outsb
pushf
mov
fbstp
loope
dec
cmp
outsb
cmpsl
mov
mov
lock
push
mov
test
in
cmp
cmp
xchg
cwtl
iret
std
push
jo
and
sbb
and
xchg
mov
push
in
sbb
or
jl
mov
or
outsb
cmp
test
adcl
test
add
vpunpcklqdq
jp
movb
test
jnp
inc
popa
and
out
jae
xchg
mov
jb
adc
popf
lock
pop
nop
aaa
inc
fs
dec
and
orl
es
inc
mov
cli
sti
inc
gs
inc
fs
and
pop
xchg
roll
in
int3
pop
inc
popf
fwait
pop
pop
xchg
lahf
push
pop
push
out
cmp
or
sbb
mov
adc
iret
dec
out
lds
arpl
loopne
daa
cmpsb
jl
fistpll
jle
pop
decb
inc
movsl
push
sahf
adc
push
dec
fsubr
lcall
pop
nop
lret
dec
cmp
in
repnz
push
mov
xchg
popf
loope
push
pop
inc
jns
sarl
add
inc
std
or
out
icebp
xchg
fldt
fldt
gs
stos
pop
repnz
sti
sub
pop
sbb
fnstsw
jns
push
sub
hlt
mov
mov
fdivs
pop
sbb
ficompl
mov
mov
mov
adc
add
ret
cmc
adc
sub
pop
sub
dec
xor
add
rcll
and
iret
push
ds
movsl
int
aas
arpl
pop
in
clc
hlt
in
adcb
pop
loopne
lcall
pop
stc
inc
pop
shlb
into
test
rcll
jo
out
mov
outsl
cmp
jge
push
mov
or
mov
cmp
cmpsl
xor
push
sub
fistl
cmp
insl
pop
mov
and
out
dec
inc
adc
outsl
dec
sub
or
pop
inc
jmp
or
sbb
jecxz
popl
in
pop
lds
ret
or
mov
push
stc
xor
filds
fiadds
out
mov
ret
push
push
xor
and
dec
sbbl
cmp
add
addb
pushf
push
jnp
mov
rcr
push
xchg
add
sti
xor
aam
repz
in
add
lahf
cmpl
sbb
mov
icebp
inc
popf
mov
sbb
lods
push
jo
xor
push
inc
cltd
pop
dec
fidivs
sub
and
lcall
xchg
inc
imul
pop
mov
mov
cs
mov
pop
xchg
lret
and
ret
xchg
stos
cmp
dec
adc
push
repz
cmpsb
xchg
pop
xchg
sti
cmp
xchg
addr16
sub
repz
hlt
test
cmc
mov
rorb
mov
in
imul
call
ret
xchg
stos
or
pop
add
loop
sub
xor
cmpsb
push
pop
ja
jp
inc
insb
dec
pusha
je
imul
test
inc
iret
sub
mov
adc
dec
ljmp
dec
push
aas
das
stos
iret
add
xlat
cld
sbb
cmp
iret
mov
movsl
stc
mov
dec
adc
stos
das
mov
mov
jnp
inc
out
inc
mov
adc
push
pop
lock
andb
or
fdivrs
cwtl
fidivrl
es
aaa
sbb
ret
mov
jge
pop
test
push
stos
outsl
dec
dec
mov
in
mov
loope
mov
lret
fcomps
push
xor
adc
mov
jp
xlat
jl
lods
push
scas
enter
jge
lret
aas
jb
es
jl
mov
and
stc
lret
test
push
adc
adc
inc
sbb
sbb
mov
mov
sti
call
aas
xorb
mov
cmp
push
int
fisubs
mov
or
mov
push
jne
mov
das
and
loope
call
mov
outsl
out
mov
ja
out
mov
jl
inc
sub
mov
cmpl
and
outsl
gs
out
mov
mov
inc
sbb
fdivs
fnstenv
iret
jbe
xchg
mov
mov
sub
sub
out
mov
and
ret
lahf
sbb
divl
add
inc
pushf
orb
hlt
std
mov
repnz
subl
push
inc
test
int3
and
cmp
inc
dec
loopne
insl
popf
stos
xchg
aas
out
lahf
in
mov
pop
js
sbb
sub
mov
arpl
iret
inc
pop
test
dec
fwait
mov
xchg
push
dec
push
sti
es
lea
stos
inc
dec
sar
sarb
arpl
call
fs
mov
dec
pusha
das
fdivrl
adc
xchg
xor
cltd
sub
cmp
pop
push
stos
xchg
out
shll
rcll
inc
imul
mov
dec
pusha
push
mov
iret
xor
inc
roll
es
pop
pop
pop
adc
cmp
data16
jbe
and
sub
nop
jge
lcall
xchg
or
push
shlb
shll
mov
xchg
push
mov
jmp
xlat
inc
inc
or
mov
jne
loopne
cmp
or
xor
add
ret
gs
xor
cmp
add
pop
and
fdivrl
cmpb
int3
enter
je
fbld
fstps
out
fstps
pushf
test
mov
jmp
lcall
cmp
pop
jl
mov
inc
or
js,pt
enter
adc
insb
jge
jae
sub
or
pop
rol
int3
and
push
push
inc
pop
dec
sub
je
in
pop
aas
lret
ljmp
jg
xor
xor
mov
mov
adc
shl
dec
push
into
rcrl
mov
lahf
andl
add
fsts
cmc
test
xor
mov
xchg
push
add
sub
imul
inc
daa
pop
or
hlt
cmc
mov
idivl
push
mov
std
push
in
xchg
mov
adc
mov
in
int
xor
das
sbb
ret
pusha
sti
dec
sarb
loope
sbb
in
inc
mov
mov
fwait
mov
sbb
push
xor
int3
push
and
fcmovnbe
lcall
jae
inc
outsl
movsl
out
xor
fistps
test
cmp
mov
repz
lret
adc
scas
and
sub
dec
pushf
push
jle
adc
popa
enter
orl
cmp
add
scas
mov
lea
fwait
rcl
jle
pop
rcll
dec
or
daa
ret
adc
jle
push
dec
lahf
in
jo
lret
cmp
cmpsl
stos
inc
and
or
or
test
sbb
in
imul
hlt
loopne
outsl
and
fidivrs
xlat
or
mov
shl
ret
fistl
idivl
xchg
sub
lahf
dec
mov
adc
inc
pop
sbb
or
out
out
or
ljmp
xchg
test
or
je
mov
cmp
loop
sbb
inc
int
add
xor
pop
jge
sub
jbe
insb
bnd
mov
mov
xchg
jle
subl
shll
push
movsb
pop
cwtl
cwtl
sar
xchg
insb
icebp
lahf
pop
movsl
aas
pusha
cmc
or
push
imul
shlb
sti
xchg
mov
popa
out
out
push
pushf
jb
lret
into
pop
out
js
cmpsl
shrl
xchg
adc
or
mov
outsb
loopne
add
jne
aaa
mov
popa
and
mov
inc
cmc
mov
sahf
or
mov
call
or
adcb
fsubrl
ss
sarl
xchg
jb
stos
pop
xchg
xchg
push
and
cli
pop
testb
mov
aas
dec
add
sub
pop
shrl
lods
and
lea
imul
faddp
mov
jae
sub
cmpsl
push
aam
orb
mov
subb
lret
movsb
out
dec
sbb
mov
lahf
lock
push
mov
in
fcoms
dec
and
sub
mov
daa
aas
pop
subl
adc
in
fwait
pushf
sub
out
and
mov
test
in
stc
xchg
adc
test
sub
ja
push
mov
xor
sti
pop
lcall
repnz
std
enter
add
stos
in
scas
lock
add
and
xchg
aas
cmp
loop
mov
inc
push
mull
xchg
in
stos
sbb
stos
xor
mov
mov
hlt
xchg
inc
lret
int
dec
mov
andb
mov
jp
fs
outsb
in
out
popa
arpl
clc
and
fidivl
aas
xchg
enter
add
mov
movsb
rorl
gs
popf
call
mov
je
add
shrl
hlt
pop
fsubl
add
dec
mov
std
out
cmpsb
lock
cli
shrl
lods
loopnew
movsl
or
lods
fisubl
mov
frstor
pop
sbb
fisttps
mov
ret
cmp
pusha
ljmp
xor
push
ret
jg
sbb
leave
or
icebp
clc
cmp
mov
btc
cmpsl
adc
adcl
outsb
dec
fstl
mov
mov
push
mov
and
cmp
loop
mov
bound
andb
push
pop
adc
lcall
dec
loope
xchg
add
in
jg
rcl
adc
inc
orl
or
lods
mov
inc
mov
outsb
fnstenv
pop
sub
loopne
jnp
xor
xchg
ss
inc
negb
mov
out
push
and
and
jbe
xor
xor
jnp
sbb
roll
fisubrs
lahf
sbb
std
jmp
gs
and
and
xchg
aad
sbb
jo
test
maskmovq
imull
cmp
ja
clc
loope
dec
or
pop
push
xchg
call
inc
jl
mov
mov
dec
cmp
stos
jo
imul
cmp
mov
lcall
adc
cli
dec
adc
xor
sbb
jnp
or
jno
out
jb
shl
pop
jl
pop
inc
imul
out
je
push
mov
dec
sub
int
xchg
bound
xlat
sahf
mov
adc
or
test
call
je
xlat
std
enter
or
push
mov
out
ss
cmp
jno
movsb
lock
jae
add
cld
outsb
and
in
dec
xor
cmp
adc
insb
xchg
mov
add
mov
adc
jae
mov
jecxz
mov
fnsave
stos
test
test
mov
subl
imul
sub
dec
and
data16
mov
and
pop
adc
xchg
inc
dec
aam
push
mov
pop
mov
xor
fcoms
and
lds
mov
jecxz
imul
jmp
outsl
pushf
pop
sbb
loop
or
adc
dec
inc
cmp
js
inc
ljmp
in
sbb
in
push
mov
sti
xchg
sub
or
adc
inc
adc
inc
in
adc
push
pop
cs
inc
mov
mov
mov
adc
lcall
xchg
outsl
notl
cmp
or
mulb
jne
or
in
or
jns
lcall
test
std
js
sbb
add
adc
push
xchg
and
nop
in
xchg
sub
int3
pop
sbb
stos
inc
loopne
iret
lahf
test
nop
push
leave
lcall
not
gs
fildl
les
sub
pop
jle
adc
in
add
ds
arpl
jbe
ja
fistps
pop
sbb
cs
cmpsb
cmp
cld
ja
movsl
add
cwtl
je
fisubrl
ror
ficompl
mov
test
inc
mov
pop
es
fstpl
pushf
jno
sbb
sar
sbb
stos
clc
fadds
jo
fwait
add
mov
pop
mov
or
je
stos
cmp
cmpsl
mov
xchg
push
cmp
fstpl
sbbb
scas
ret
sbb
movsl
xor
cpuid
pop
sbb
inc
gs
jl
adc
es
xor
in
std
cmp
call
jnp
mov
push
adc
mov
cmp
mov
sar
ss
sti
inc
imul
pop
fidivl
std
ds
pop
push
fsubrl
cmp
out
push
ja
mov
mov
scas
arpl
and
cmp
xor
frstor
push
push
inc
sti
pop
fnstcw
push
cld
jne
test
and
bound
dec
inc
push
mov
mov
jb
sub
insl
push
into
hlt
sbb
lcall
fdiv
aad
cmpsl
popf
je
inc
and
loope
or
popf
jo
cwtl
jle
cld
fcoms
add
icebp
in
inc
xchg
inc
lods
mov
mov
mov
into
out
js
repnz
pop
test
xchg
mov
out
add
dec
das
and
das
nop
clc
dec
test
imul
mov
scas
out
adc
mov
sub
cmp
popa
movb
fmuls
and
ja
and
arpl
jge
cli
imul
dec
mov
lahf
out
pop
fisubrl
icebp
inc
sub
hlt
cmpb
mov
or
xchg
cmp
fdivrs
aaa
hlt
xor
pop
xchg
mov
jae
dec
or
sbb
mov
add
insl
bnd
xchg
or
outsb
mov
pushf
sbb
dec
adc
imul
sub
sahf
push
cmp
inc
pop
andb
cmpsl
fs
fistpl
xchg
sahf
or
test
pop
test
jo
arpl
out
jnp
adc
jnp
movsl
cmpb
inc
mov
mov
and
pop
sbb
ja
repnz
xor
pop
add
or
lock
loopne
push
into
xor
cli
es
or
pop
into
and
and
jae
aaa
mov
rclb
shll
test
sbb
push
popa
jecxz
mov
inc
cmc
and
fnsave
mov
jae
loope
inc
mov
jg
pop
in
inc
jle
nop
loop
ficompl
sbb
lcall
inc
js
xor
cmp
mov
dec
ret
xchg
sub
out
test
ds
pop
mov
xor
bound
imul
fdivrs
jp
div
in
pop
dec
inc
mov
aas
and
hlt
push
ret
xor
mov
or
fisubrl
loopne
mov
mov
out
sbb
or
jp
inc
in
add
push
or
mov
and
test
dec
ds
push
and
fs
shl
dec
pusha
ja
jg
pop
call
xchg
std
scas
adc
daa
xorl
fstpt
dec
jle
outsb
or
and
int
sbb
mov
pop
cmp
addr16
fwait
bound
loope
xlat
insb
xor
jle
cmp
lret
aaa
dec
push
into
mov
clc
jne
stc
jg
dec
sub
in
pop
scas
pop
scas
pop
test
sti
jno
add
mov
pop
push
add
nop
sbb
jae
movsl
sahf
adcl
jae
stc
pop
inc
js
fs
ret
fwait
mov
daa
in
test
outsb
mov
sub
les
cmp
or
es
adc
xor
test
inc
xor
dec
jae
pop
dec
xor
in
jg
mov
push
out
andb
adc
pop
sub
ljmp
rcll
sbb
aad
enter
mov
or
adc
or
lret
les
test
shrl
xchg
jmp
data16
xor
inc
addl
dec
lea
mov
daa
inc
rcrl
mov
pusha
sub
ss
je
mov
push
lret
xor
data16
jle
jmp
add
push
mov
pop
pushw
addl
out
div
push
mov
mov
rcll
lods
jo
scas
dec
fnsave
jg
sbb
les
mov
mov
inc
cs
lret
aas
and
int3
jb
pop
push
mov
into
jnp
ficomps
inc
pop
movsl
xchg
aaa
sbb
sbb
cmp
popa
adc
xchg
sub
adc
xchg
mov
pop
dec
fwait
in
ja
hlt
push
jne
addl
sarb
pop
loope
into
sub
mov
or
fdiv
pop
fwait
rcl
ss
sti
and
dec
jnp
std
adc
sub
dec
cli
jne
inc
sbb
call
mov
loopne
sbb
mov
cmc
mov
add
cwtl
shlb
rcrl
daa
lahf
sbb
mov
mov
xchg
and
outsl
aad
es
xor
rolb
pushf
fxch
mov
cli
loope
push
sub
subb
sbbl
sbb
pop
das
pop
push
or
call
inc
mov
jmp
lock
jle
xchg
cmp
adc
rolb
xor
in
call
icebp
push
imul
scas
sbb
ss
aam
push
addr16
xchg
in
mov
das
ds
negb
push
mov
mov
adcb
mov
pop
fcoms
dec
jl
mov
sbb
mov
add
es
push
mov
enter
int
push
cmp
xor
add
fs
xchg
jle
sub
mov
jp
fneni(8087
mov
push
dec
out
cmp
xchg
sub
popf
sub
mov
ret
enter
cmpsl
imul
and
jae
pop
jge
popa
adc
mov
out
imul
fpatan
daa
lock
mov
or
xor
aas
rcr
dec
test
mov
es
fnstenv
cwtl
outsl
sbb
stos
data16
sbb
shll
out
movsb
pop
into
push
or
xchg
cltd
enter
rcr
lods
icebp
iret
add
add
inc
fdivrp
cmp
inc
mov
lcall
xor
push
sbb
inc
cmp
addr16
lock
or
lea
enter
mov
add
mov
pop
mov
or
mov
jbe
andb
adc
pop
push
pop
mov
int
stos
xor
cmp
mov
xchg
mov
in
in
aas
and
sbb
cmc
movl
dec
adc
mov
mov
adc
shll
hlt
stos
int3
xchg
popa
cmp
or
sti
cmp
fsts
and
and
jae
jns
lods
out
adc
movsb
idivl
rcr
pop
inc
add
fadd
clc
out
fidivrl
mov
pushf
jg
xor
fistpl
mov
popa
js
add
xor
ds
or
xor
and
add
lock
mov
scas
shl
rclb
mov
int
cld
popa
cmp
outsl
and
je
int
loop
enter
cmp
sbb
lods
ss
adc
icebp
fwait
ret
in
pop
dec
dec
pop
add
int3
sbb
cmpsb
call
rorb
gs
xorb
lods
jl
ds
shlb
dec
test
sbb
cmp
push
xchg
dec
pop
cltd
bndstx
dec
mov
xor
rorb
add
adc
in
mov
pop
loopne
or
xchg
inc
gs
test
loope
and
fs
clc
jns,pt
push
jge
arpl
popf
cmp
sub
inc
dec
dec
adc
imul
and
jo
cmp
mov
push
mov
mov
xor
inc
hlt
inc
out
push
cli
sti
fisubrs
stos
in
dec
sbb
xor
scas
inc
mov
dec
in
ret
jle
scas
or
sbb
push
in
jne
adc
or
mov
scas
cmp
repnz
dec
lahf
hlt
xchg
adc
lds
ja
rcrl
sbb
mov
sub
test
orl
pop
bound
xchg
mov
mov
fdivl
or
fst
cwtl
test
repz
ds
popl
mov
fwait
sub
jmp
repz
lds
push
ret
or
cmpsb
stos
jnp
imul
jl
call
outsb
insb
pushw
dec
fldln2
ret
sbb
cmpsb
mov
xchg
xor
sbb
mov
lods
sub
cwtl
push
call
push
loop
js
xor
and
faddl
jae
mov
in
es
in
jp
std
mov
sahf
mov
sub
mov
or
xchg
out
push
js
mov
mov
mov
mov
pop
stos
outsl
mov
adc
sub
and
jo
aas
fwait
mov
or
mov
mov
sahf
jmp
adc
rcll
jae
fsubr
stc
and
aas
push
or
fisttps
icebp
into
sbb
cmp
pop
jbe
adc
push
cmpb
mov
xchg
adc
testl
fbld
imul
insb
test
nop
inc
mov
mov
out
cmpsb
and
mov
adc
and
adc
outsb
imul
gs
jmp
popf
hlt
bound
xchg
fs
insl
insb
mov
test
or
cmpsb
lds
xchg
cmp
in
in
aaa
pop
pop
dec
and
pop
aad
xchg
daa
sbb
pop
popf
mov
mov
mull
pop
inc
fnstcw
and
int
inc
pop
cmp
cmpsb
sar
push
lods
pushf
stc
sub
mov
sub
ret
sahf
rcll
je
enter
mov
sbb
repnz
or
cli
xchg
jl
sub
test
and
xor
sbb
pop
loopne
push
sbb
mov
aas
out
aas
pusha
addr16
loope
cmp
inc
jecxz
adc
scas
xchg
movsb
int3
ficoml
outsl
add
fstps
push
negb
hlt
cs
sbb
push
decl
inc
rol
add
cli
leave
flds
push
icebp
sub
stc
xchg
sub
xchg
nop
lds
jecxz
jnp
mov
dec
add
xchg
in
push
add
mov
push
lret
jl
dec
add
pop
pop
pop
scas
outsb
ss
aas
mov
and
mov
mov
cmpsl
mov
jmp
jl
and
test
mov
pop
jns
cmpsb
xchg
ret
pop
pop
gs
in
inc
insl
outsb
sub
mov
xor
cltd
test
jae
mov
push
push
les
pop
cmpsb
jns
pop
js
imul
fs
xor
jno
fadds
pop
push
loope
mov
daa
ja
loop
clc
rol
or
adc
pop
xor
or
movsl
lods
outsl
dec
or
andl
jbe
insl
scas
ret
movsb
lret
nop
shll
dec
divl
mov
in
in
mov
mov
test
mov
pop
hlt
lahf
aam
cmp
cmp
add
icebp
shlb
sub
pop
cmpsl
pop
stc
inc
push
dec
insl
xor
js
jb
mov
int
mov
push
and
push
push
jns
pop
push
mov
cltd
ret
shlb
movsl
jg
icebp
sub
fcoml
movsl
imul
jle
or
bound
cs
lahf
inc
aad
cs
push
insl
xor
lds
or
mov
out
xchg
or
add
enter
inc
and
inc
add
xchg
popf
jmp
addl
xchg
add
mov
jge
movsl
gs
mov
out
fistpl
into
int
or
bound
sbb
aad
sub
fwait
lcall
push
dec
dec
scas
stos
dec
imul
jne
insl
mov
jecxz
pushf
jae
mov
mov
dec
fsubrs
out
sub
in
cmp
pop
mov
push
ret
jle
xlat
jns
imul
in
shlb
pushl
adc
daa
gs
stc
mov
cmp
popf
push
or
inc
inc
out
cmp
cs
pop
shlb
dec
cmp
pop
adc
and
movsl
or
lds
mov
cmc
out
aas
push
xchg
dec
addr16
sbb
inc
mov
mov
sub
lods
cmpsb
test
xchg
cs
sub
shr
cmp
andb
fnstcw
imul
in
xchg
and
add
dec
cli
stc
sub
sarl
jne
flds
pop
xchg
push
cwtl
dec
add
call
pop
sahf
jge
adc
dec
loopne
nop
cld
scas
dec
pop
push
jns
push
cmpsb
mov
pop
out
add
sbb
fidivrs
jmp
and
sub
std
mov
sub
sub
adc
push
mov
adc
mov
fistl
icebp
sub
mov
xchg
push
or
mov
xchg
cmp
pop
mov
push
mov
add
dec
sbb
inc
filds
testl
fs
cmpsb
in
test
fs
loop
or
rolb
aad
jmp
movsb
rcr
shll
pop
inc
gs
inc
daa
sbb
dec
adc
fs
movsl
sti
or
int3
mov
push
dec
aad
push
lods
loopne
add
rcrl
daa
inc
out
mov
mov
jl
mov
push
pop
dec
xchg
in
aam
call
test
jno
icebp
dec
movsl
xchg
mov
lret
shl
push
imul
jnp
mov
cmp
xchg
inc
jnp
xor
xchg
je
mov
insl
add
lds
mov
and
rcrl
sub
inc
add
jno
jmp
lret
and
xor
shl
jb
call
dec
outsb
inc
jae
daa
in
xlat
frstor
cmp
mov
cmpsl
lods
iret
fnstsw
test
cmpsb
test
mov
fucomp
pop
rcll
ja
mov
movsl
jmp
mov
jecxz
pop
fdivl
mov
push
push
mov
xor
cmp
sbb
daa
dec
ret
fbld
js
jmp
and
xor
mov
xchg
out
cli
fsubl
inc
test
ds
and
mov
scas
jnp
jp
mov
aaa
sbb
scas
xchg
or
adc
in
dec
push
fdivs
or
stos
das
movsb
push
faddl
inc
cld
jb
aam
add
enter
clc
mov
jne
fsubr
shl
and
mov
aas
xchg
lods
and
add
pop
fdivr
hlt
js
sub
dec
cmp
lea
pop
pop
sub
or
stc
roll
pop
rclb
lods
and
ds
jnp
ds
push
xor
cmp
les
hlt
dec
xor
dec
or
lods
xor
mov
adc
jb
jp
sahf
int3
inc
dec
pop
jne
jns
fisubrl
jge
js
mov
cmpsb
cmovne
pop
in
int
imulb
lcall
dec
mov
shll
xchg
dec
xlat
inc
mov
mov
pop
sub
popa
add
test
push
cmp
in
imulb
sub
mov
inc
sti
test
lret
mov
mov
jg
sbb
rclb
push
adc
dec
push
cmp
popa
mov
icebp
aam
test
popa
xor
inc
int3
test
cwtl
imul
mov
and
loop
popa
or
or
mov
movsb
iret
outsb
add
push
movsb
imul
dec
xchg
lahf
call
std
mov
push
mov
pmaxub
and
mov
sti
dec
insb
movsb
stos
lods
enter
mov
mov
pop
lods
push
ret
push
stos
hlt
add
add
rol
test
lahf
test
lea
xor
call
in
and
hlt
push
insl
inc
outsl
pop
mov
and
test
outsb
test
sarl
dec
lcall
out
or
push
mov
and
clc
cmp
push
cli
mov
jns
mov
fnstcw
lea
popf
cmpsl
xchg
add
inc
mov
and
rclb
lea
or
xchg
dec
and
mov
adc
test
sub
lods
lea
aas
mov
push
cmp
sub
mov
push
sahf
push
cmpsl
repz
dec
adc
pop
sub
cwtl
xchg
and
dec
inc
add
mov
mov
mov
pusha
inc
fcoms
pop
out
scas
xchg
cmpsl
enter
mov
xlat
stos
popf
sbb
add
aam
cmp
fadds
jge
fldenv
and
sub
dec
cmp
shr
jbe
sub
mov
xchg
sbb
ret
lods
cmp
jno
push
iret
mov
or
jecxz
stos
rcl
stos
pop
adc
std
dec
xchg
les
insl
movsb
and
pause
inc
and
and
push
dec
mov
jge
mov
cli
clc
popf
sub
iret
push
adc
dec
fsubl
push
aad
push
mov
es
gs
sub
ja
pop
cwtl
outsl
pop
lea
sbb
fistps
jge
xor
jp
xor
leave
ret
call
pop
xchg
test
repz
repnz
mov
sub
mov
sub
xor
test
inc
xor
sbb
adc
sub
stos
pop
or
cmp
leave
inc
jns
mov
addr16
ficomps
popa
push
jno
adc
ret
mulb
in
cmpsl
sbb
jmp
data16
sbb
sub
scas
inc
inc
pop
dec
out
lods
mov
mov
add
sbb
inc
jge
loopne
dec
xchg
adc
ss
lcall
sbb
sbb
push
push
sub
hlt
pop
add
in
mov
jae
sarb
dec
dec
xchg
aam
std
mov
cmpsl
push
jl
mov
mov
lods
lahf
add
or
icebp
inc
adc
outsl
mov
xchg
jle
jbe
cs
je
pop
add
es
rcl
xchg
das
adc
mov
pusha
into
fiadds
movsl
das
lahf
add
sub
sti
lock
dec
es
or
das
stos
test
lds
inc
rolb
divb
push
cs
rolb
push
data16
xchg
dec
shr
sbb
xor
inc
pop
xchg
ss
movsl
bound
push
push
xor
cltd
xor
adc
outsl
es
fmuls
cmpsl
pop
push
mov
jge
movsl
mov
cmp
inc
aas
fmuls
lret
fbstp
pop
daa
mov
mov
repnz
push
ret
add
or
add
add
das
iret
das
enter
scas
fsubr
or
lea
add
push
loop
sbb
mov
pop
pop
into
mov
pop
imulb
jne
pop
mov
inc
or
daa
mov
inc
mov
inc
cld
dec
mov
sbb
cwtl
ret
mov
insb
fisttps
pushf
cld
fimuls
sbb
sub
loop
icebp
push
lds
movsb
jge
enter
addr16
push
sbb
push
fdivrl
or
stos
add
xlat
push
es
movsl
fstpt
pop
pop
lea
jne
adcb
lods
cmp
es
daa
mov
gs
inc
into
fiaddl
ret
fisttps
sub
ja
pop
enter
jnp
dec
pop
insl
dec
popf
jbe
cmpsl
orl
push
negl
add
dec
and
sbb
stos
fwait
or
xor
js
jge
push
jmp
inc
test
cmp
jecxz
cs
neg
aad
mov
mov
xchg
je
mov
in
std
mov
jnp
mov
or
andps
icebp
and
inc
xchg
sbb
cmp
aaa
push
adc
ret
cltd
ret
mov
cmp
push
dec
call
fs
and
js
inc
mov
cld
roll
or
push
mov
mov
shrb
pop
addr16
push
inc
xor
shrl
cmp
data16
in
lock
sub
and
iretw
xor
mov
adc
xor
movsl
daa
add
aam
xchg
mov
out
pushf
das
loop
mov
mov
jl
push
push
insb
ljmp
ret
test
xor
mov
mov
pop
push
int
fs
lds
mov
lds
outsl
and
and
adc
test
or
and
sbb
and
sbb
idivl
loope
imul
enter
mov
add
loopne
add
add
xchg
leave
stc
outsl
notb
mov
in
test
xor
fnsave
mov
push
xor
mov
push
jg
repnz
lods
push
pushaw
push
jl
aad
call
lcall
inc
or
movsb
push
sub
push
sub
les
sbb
and
jl
loop
cmpsl
pushf
xchg
xchg
sub
insb
xchg
xchg
leave
sub
mov
mov
xchg
fsubs
out
xchg
dec
ret
add
cmc
sub
addl
add
mov
arpl
dec
adc
loop
mov
clc
fsubrp
xor
fcmovne
orb
xorb
sbb
incl
jle
divl
sub
pop
inc
lret
imul
nop
push
out
mov
iret
sarb
bound
int
xlat
jno
and
stos
lds
jge
jno
inc
cmpsl
mov
movsl
popf
or
mul
lea
mov
or
inc
shlb
adc
push
cmp
mov
jge
sub
cmp
xor
leave
int
sbb
ret
mov
and
adc
jne
lahf
rorl
rcll
scas
mov
push
mov
jbe
stos
ljmp
dec
daa
jae
xor
mov
jns
cmp
clc
cmp
mov
inc
test
inc
ret
push
or
loope
gs
mov
int3
sahf
or
inc
pop
inc
dec
pop
hlt
xchg
mov
test
dec
mov
jge
fwait
sub
jmp
xchg
inc
insl
lods
fisttpll
jne
ret
cli
mov
out
fidivl
or
lock
pslld
lret
jo
pusha
mov
jb
mov
xchg
add
stos
cmp
cmp
sti
add
ret
push
test
les
cmpsl
sti
or
push
fs
adc
fimuls
xchg
leave
outsb
bound
fildll
or
movsl
lret
je
imul
fcmovnbe
pop
idivb
add
fsubs
cltd
push
add
jns
push
out
xchg
xchg
cld
and
cli
mov
repnz
jmp
fnstsw
arpl
mov
popf
xlat
pop
cmp
mov
pop
rcl
sub
xlat
or
jle
fildl
dec
add
push
sbb
insb
add
gs
push
push
xchg
mov
mov
sub
inc
aam
ja
loop
out
lock
xor
fbstp
jl
jbe
mov
xchg
ss
jno
push
cld
jae
stos
call
movb
rol
lcall
mov
push
or
mov
push
in
mov
jg
mov
or
sub
pusha
mov
lcall
pushf
and
xchg
lods
jo
fidivrs
or
lret
mov
imul
std
or
inc
mov
xor
test
xlat
adc
xchg
mov
or
mov
jb
repnz
pop
std
ss
ds
mov
mov
or
or
and
lahf
jmp
jo
mov
std
add
mov
adc
inc
cmp
ja
jmp
sub
jl
out
ss
sahf
inc
andb
push
aas
inc
mov
stos
cmp
mov
scas
dec
aaa
lcall
mov
jg
mov
and
out
add
out
sbb
mov
fisubrs
xchg
jge
das
mov
bound
push
add
imul
cmp
xchg
aam
clc
or
jl
mov
test
push
outsl
mov
mov
inc
cmp
xchg
sbb
and
adc
push
dec
pop
sbb
sub
mov
fiadds
scas
push
mov
mov
sahf
cmp
xor
jb
cmp
pushf
js
inc
mov
movsl
gs
cmp
cmpb
pushw
mov
mov
rcr
ficomps
mov
sub
inc
xor
jo
stos
test
mov
mov
pop
mov
aad
pop
inc
xor
adc
and
jno
mov
stos
roll
shrb
out
jmp
lock
cltd
sub
xchg
mov
in
test
push
es
shlb
shll
xchg
rcl
or
jp
movups
flds
mov
sahf
cmpsb
sub
xchg
outsl
mov
push
sahf
dec
and
ficoms
leave
fs
inc
inc
jno
cmc
dec
test
outsb
daa
loopne
fs
fldz
dec
dec
add
in
lahf
popa
loope
ret
ret
mov
mov
mov
pop
leave
sub
add
cmp
or
lret
call
mov
hlt
movsb
les
cmp
scas
xchg
stc
and
sub
mov
sbb
mov
fidivrl
adcl
jo,pt
xor
xchg
mov
sbb
loop
jmp
xorb
xor
sub
sub
daa
ret
xchg
mov
or
pop
cld
mov
out
popa
aaa
ss
xor
xlat
jmp
shrl
dec
loop
xor
out
lock
add
adc
dec
adc
ljmp
lock
jnp
push
aad
mov
xchg
cwtl
jp
enter
int3
sbb
outsl
mov
pushf
pop
mov
addr16
push
ret
dec
push
cwtl
jmp
aaa
inc
lock
movsb
cmp
clc
mov
jo
sbb
pop
or
pop
cli
and
ljmp
pop
mov
int3
pop
xor
into
nop
stc
xchg
or
push
jle
lahf
imul
lret
jbe
cmp
aam
mov
or
fwait
nop
bound
shll
xchg
xor
sub
rcrb
mov
pop
sub
ret
pop
repnz
movsb
dec
pop
int
cld
sbbb
sub
pop
sbb
fisttps
lret
mov
dec
addl
mov
fbld
dec
mov
xchg
out
clc
sbb
jmp
enter
stos
pop
pop
cmp
inc
xchg
pop
stos
movsb
push
adc
pop
pop
outsl
mov
mov
mov
mov
jo
icebp
xchg
jle
std
int3
or
dec
movsb
sbb
outsb
loopne
inc
and
dec
rcl
test
push
adc
in
cli
movsl
and
adc
icebp
insl
movsl
push
fstl
jae
repnz
loop
int3
cwtl
cs
mov
stos
fsubl
int3
hlt
iret
and
pop
imul
outsl
lea
add
mov
imul
mov
sub
xchg
inc
add
add
xchg
xchg
popf
xchg
cmp
adc
xor
shll
iret
pop
out
icebp
xchg
in
cmp
add
jbe
mov
fwait
xchg
out
adc
loope
pop
mov
rol
test
outsb
dec
and
rcl
pop
or
cltd
adc
dec
jge
les
push
and
or
scas
mov
or
add
sub
pushl
pop
lea
shll
mov
pushf
mov
sub
cli
xchg
call
adc
and
push
push
pop
stos
mov
adc
roll
or
enter
insl
pop
xor
dec
mov
shll
ret
sbb
sub
push
addr16
mov
lds
in
mov
rorl
add
cmp
aas
pop
adc
andl
inc
mov
jns
cltd
xchg
push
add
popl
out
xchg
sub
inc
inc
jae
jg
sbb
xor
jmp
cld
inc
jp
lods
jns
mov
inc
push
aad
push
sti
scas
inc
insl
ret
mov
inc
inc
ds
push
pop
test
stos
pop
lods
scas
inc
aam
fsubp
dec
and
popa
cmpsl
js
mov
add
aad
pop
roll
sbb
outsl
lret
cmpsb
dec
mov
scas
loopne
adc
mov
xchg
mov
sub
sahf
fmuls
ljmp
ds
shl
adc
out
and
sub
jecxz
jmp
ret
cmp
clc
in
jne
mov
push
dec
xor
setle
cmp
roll
xchg
test
popw
sbb
fmull
inc
aaa
adc
add
std
ficompl
jmp
aas
mov
insb
jno
and
int3
insb
dec
popf
shrl
mov
shll
sub
dec
fstl
push
pusha
adc
mov
sbb
cmp
out
mov
fsub
adc
scas
jge
imul
adc
cmpsl
mov
in
leave
mov
testl
aas
and
add
jecxz
into
adc
mov
cmp
addr16
mov
jecxz
add
jecxz
add
jnp
push
popf
pop
cltd
mov
xchg
jbe
xlat
iret
sti
cmc
fsts
divb
xlat
dec
cmp
dec
push
add
into
std
sub
push
enter
cs
arpl
lods
pop
loopne
arpl
pop
and
mov
push
aam
pop
sbb
xchg
sbb
add
mov
inc
xchg
repnz
lahf
scas
in
cmpsl
cs
mov
mov
fisubl
sbb
cmpsb
sbb
jns
dec
ds
lock
jmp
cmp
test
jp
loope
mov
jno
out
push
xor
mov
cmp
cmp
jmp
mov
push
mov
sub
in
ror
idivl
sub
stos
stos
notl
xchg
daa
dec
into
inc
or
push
fistpl
push
insb
jl
mov
jp
mov
pop
inc
inc
fucomi
ds
xor
stc
sub
mov
inc
out
xor
add
aaa
not
rorl
xor
ss
jp
sub
dec
pop
clc
pop
inc
dec
lods
mov
dec
mov
aas
sbb
pop
sbb
idivl
ljmp
nop
mov
cmp
rcrl
ret
ret
stc
inc
push
jnp
push
lcall
push
dec
inc
sub
hlt
aaa
stc
pusha
popf
adc
inc
stos
fcoms
inc
and
inc
add
adc
cmp
push
test
mov
mov
push
in
rol
movl
add
mov
xor
cmc
mov
or
dec
mov
add
sub
je
jae
push
ss
adc
push
add
pop
add
adc
xor
mov
insb
mov
insb
or
xchg
scas
shlb
leave
pop
xchg
popf
dec
outsb
in
iret
pop
nop
fwait
cld
sub
inc
pop
mov
cwtl
cmpsl
jecxz
in
hlt
mov
cmp
mov
test
pop
cwtl
push
sti
repz
adc
int3
push
pop
imul
and
das
xor
mov
cmp
lods
or
push
ss
sahf
add
in
cmc
loope
cli
adc
adc
or
mov
cmp
dec
mov
push
sbb
jmp
push
xor
jl
and
mov
nop
out
fists
xor
stc
add
mov
loopne
and
cwtl
popa
emms
pop
pop
inc
out
loopne
fsubr
adc
stc
scas
cmp
and
adc
aas
add
xchg
cld
jno
std
mov
push
push
movsl
xchg
jl
ret
jnp
leave
mov
in
pop
sub
push
in
mov
or
loopne
push
dec
pop
dec
ljmp
add
or
fdivl
xor
mov
roll
js
test
jns
stos
sbb
adc
inc
dec
cmp
cmc
push
jmp
popf
ja
pushf
sarb
mov
xchg
cmpsl
or
movsl
xor
fiadds
shll
out
mov
pop
add
push
sub
aaa
clc
jg
ror
push
or
rcrl
call
pop
and
mov
mov
je
lahf
add
dec
fwait
ja
daa
movsb
inc
arpl
les
lahf
ljmp
push
sbb
mov
push
pushf
sub
mov
inc
sbb
adc
lret
nop
adc
lock
in
xlat
inc
aas
es
mov
jmp
lret
ja
sub
scas
mov
push
mov
enter
nop
cmc
inc
adc
in
push
and
mov
mov
popf
xor
xor
inc
jge
xchg
xor
dec
js
xchg
jmp
sahf
fcomp
addr16
cmp
jmp
xchg
cmp
shlb
sarb
rcll
pop
fwait
adc
inc
cmp
int
int3
sub
call
and
cmp
dec
xor
in
fucomip
mov
fwait
and
jg
out
scas
fdivl
push
cmp
xor
ja
cs
test
sub
ds
das
mov
lahf
addb
lret
daa
mov
xchg
dec
jp
jg
fbstp
dec
lock
dec
mov
adc
or
xor
addr16
rclb
push
mov
dec
enter
push
and
and
add
dec
sub
xor
cmp
cmc
les
adc
add
daa
dec
push
jo
mov
xlat
cmp
push
mov
push
push
aad
popa
push
mov
push
inc
pop
inc
mov
cli
xchg
cmp
jo
cmp
out
insb
or
mov
andb
push
fmul
cli
sbb
into
mov
leave
xor
mov
jle
sbb
fisubl
pop
int
pop
xor
cmpsl
jp,pn
xchg
lahf
sarb
cmp
test
inc
pop
dec
dec
jbe
or
repz
push
je
pop
cli
jge
idivb
loop
iret
imul
popf
dec
cmc
inc
xor
hlt
mov
cmpb
cli
lahf
rcrl
sub
cvtpi2ps
popa
clc
jbe
jne
push
movsl
stos
mov
cmp
jno
fcmovbe
cli
rcrb
lahf
add
pop
pop
dec
xchg
lods
insb
xor
xorl
rorl
add
call
and
aas
mov
lea
leave
jne
fsubs
adc
and
mov
pop
adc
hlt
lods
adc
cmc
aaa
adc
dec
add
cmpsl
jb
xor
cmc
popf
movl
movaps
jb
cmp
cmp
enter
insb
pop
inc
mov
xchg
mov
dec
cmpsl
and
jp
xor
push
fsubrl
jo
mov
shrl
scas
mov
sbb
jmp
xchg
lahf
cmpsl
xor
in
xor
lcall
xorb
jecxz
stc
pop
or
scas
inc
jno
mov
cmc
add
adc
adc
call
mov
mov
mov
ds
push
inc
or
std
jle
or
xor
mov
add
scas
testl
push
out
inc
cwtl
rcll
hlt
in
pop
add
les
or
jae
aam
mov
je
or
sub
push
cli
jle
inc
lods
test
xor
push
iret
cmp
add
jmp
hlt
pop
bound
int3
ds
mov
mov
lock
mov
mov
dec
fwait
pop
inc
sub
jae
ret
imul
shll
pop
add
cmp
enter
cmc
mov
das
aad
xchg
in
popf
mov
cmp
aas
cld
xchg
xor
je
daa
mov
xor
fsts
mov
or
gs
mov
arpl
xchg
js
and
mov
xchg
and
test
ja
jnp
cmpsb
push
andl
mov
jl
fs
sub
rorl
push
clc
mov
mov
mov
lods
mov
sub
imul
inc
mov
dec
push
inc
test
inc
ret
push
dec
aam
aas
mov
fbstp
xchg
sub
cltd
cltd
faddl
enter
roll
jb
cmp
push
xchg
and
push
jne
fmuls
jb
call
ret
movsl
mov
in
test
loope
cmpsb
add
fs
pop
xor
addl
sbb
in
and
xchg
xchg
push
sub
and
and
mov
jb
jbe
fucomi
out
into
xchg
sbb
jb
mov
scas
ret
adc
mov
loopne
pop
xlat
mov
lret
sub
and
lods
mov
push
pop
clc
mov
or
dec
inc
cmp
cmp
test
enter
jno
jecxz
pop
shr
insl
aaa
jae
jo
or
repnz
cmp
mov
adc
sti
cs
out
or
inc
out
jno
push
jp
mov
xor
and
pop
pop
imul
gs
out
icebp
push
and
into
shrb
stc
inc
sarb
lahf
push
push
mov
lds
inc
and
add
fiaddl
jp
cs
nop
sarl
in
fnstcw
add
stos
adc
ss
ror
lcall
adc
fnstcw
xor
jno
inc
into
sub
mov
dec
scas
jb
mov
dec
fsubp
jns
pushf
mov
in
inc
mov
outsb
inc
add
xchg
and
icebp
into
cmp
sub
sti
or
les
jle
fisttpl
mov
insl
fstpt
int
or
or
repz
mov
fmulp
in
insl
jno
fs
add
xor
mov
shll
movsb
xchg
loop
cmp
pop
add
test
sbb
mov
clc
mov
pop
sub
adc
gs
sbb
xor
or
into
std
aaa
outsb
pop
or
pop
push
imul
fsubrl
das
fucom
adc
shl
xchg
rolb
mov
stc
es
fldl
mov
nop
lods
mov
cmp
mov
dec
push
in
test
xor
stos
gs
daa
xor
popf
xor
add
imul
aas
fisubrs
sub
lret
pop
add
cmpsl
jns
aaa
insb
sbb
data16
js
insl
cmp
mov
testl
cld
push
icebp
lods
loope
pop
test
pop
rcrl
xchg
popa
adc
or
xchg
mov
scas
fwait
mov
pop
js
mov
test
sti
sub
jmp
mov
cmpsl
pushl
stos
lret
jge
std
dec
bound
das
jnp
mov
sub
stos
sub
jmp
pop
insb
sub
pop
pushf
outsl
ds
mov
sbb
stc
xchg
leave
daa
outsl
popf
aaa
mov
or
out
idivl
push
repz
repnz
pop
push
fadds
in
jle
dec
aam
clc
out
mov
cmp
pop
push
loopne
in
xchg
outsb
sub
mov
dec
ret
inc
scas
mov
or
imulb
nop
sbb
push
aam
xor
loopne
imul
xchg
mov
pop
cmpsb
idivl
dec
rolb
testl
mov
mov
xorl
es
sar
mov
stc
addl
rcrb
rcl
adc
dec
mov
pop
bound
adc
jl
inc
in
add
jb
rclb
movsb
mov
mov
sub
mov
inc
or
xor
jg
cs
js
adc
fcompl
or
sub
cmpsb
dec
jne
int3
jo
loop
push
cmp
cmp
cmp
cmp
and
fsubrp
cltd
xor
lret
fdivrs
out
in
sbb
fwait
mov
in
xor
inc
rcrb
int3
in
xor
jp
stos
lds
in
loope
jbe
ja
add
inc
decb
pop
xor
dec
ss
xchg
or
pop
in
out
filds
fmulp
aad
push
test
and
add
mov
push
inc
add
test
dec
sarl
lret
or
shrl
pop
mov
sbbl
gs
pop
sbb
daa
sub
push
lcall
mov
pop
scas
rep
rclb
int3
lcall
in
out
or
push
stos
and
mov
pop
outsb
adc
inc
cmpsb
repnz
xor
test
add
movsl
xchg
mov
js
xchg
push
or
and
outsl
loop
movsl
das
stos
adc
in
or
sbb
cli
jo
cltd
sub
pop
lret
repnz
aaa
pop
dec
popf
imul
and
andl
mov
cmp
adc
or
cmp
sub
xor
adc
cltd
inc
adcb
xor
pushf
mov
and
out
xlat
enter
cmpsl
sbb
rcl
sti
xchg
fstps
mov
mov
adc
sti
orb
inc
test
aam
pop
icebp
cwtl
aas
dec
imull
push
xor
rcll
shlb
mov
adc
xor
leave
addr16
rcll
cmp
mov
aas
in
test
jmp
insl
lds
neg
das
dec
es
lea
cltd
sti
insb
or
xor
mov
pushf
rcl
ljmp
adc
add
int
or
hlt
jmp
scas
jmp
int3
inc
in
aad
int3
lret
movsl
xchg
leave
call
ss
sbb
je
jae
call
mov
cwtl
sbb
add
inc
sbb
push
adc
es
xor
sar
rclb
icebp
bound
shr
fucomi
pop
shrl
loopne
adc
repnz
mov
jge
push
add
push
enter
addr16
cli
nop
add
daa
xor
adc
mov
pop
push
sub
jns
mov
filds
mov
pop
jmp
xchg
push
inc
dec
inc
sbb
das
lods
jl
pop
dec
fistpll
clc
aam
sarb
fs
xchg
adc
pop
ficomps
inc
push
xor
fisubrl
cmpsl
fsubs
push
lcall
xchg
inc
lea
push
mov
test
xor
mov
das
mov
and
out
shl
dec
jae
fcompl
push
mov
and
mov
and
jnp
mov
cmp
push
mov
test
shlb
addr16
movsl
std
imul
fildll
shl
mov
out
int
test
and
lahf
insl
sub
shll
add
adcb
push
lret
fs
shlb
fisttpl
push
dec
out
pop
push
vphsubbw
je
sti
pop
jl
jo
jg
mov
jge
mov
insl
sub
cs
mov
popf
stc
sub
jae
lret
inc
stos
lret
jns
inc
xchg
stos
and
xchg
test
fdivrs
jmp
mov
push
sub
mov
out
cmp
pop
pop
movsl
hlt
aas
aas
negb
jns
inc
jno
cmpsl
push
mov
out
push
imul
pop
in
add
or
push
sbb
xchg
jnp
lods
test
push
test
arpl
int
jno
and
xchg
scas
sub
cltd
mov
frstor
adc
movsb
cmp
dec
sub
in
sub
mov
cmp
mov
das
mov
stc
sub
push
rorl
pop
pop
cmpsl
cmp
pop
xor
out
fidivrl
pop
add
pop
fstpl
repz
in
pushf
imul
add
in
outsl
stos
bound
lret
mov
fildl
pop
fst
dec
pop
pop
jbe
aas
clc
outsl
movsl
sbb
mov
sub
lahf
test
lods
xchg
add
jl
jge
shl
popa
movntq
xchg
push
sbbb
or
xor
fs
outsl
sbb
mov
lods
sbb
jbe
mov
imul
fprem1
cmp
por
repnz
ret
test
pushf
clc
insb
loopne
push
inc
mov
cld
cmpsl
test
pop
jecxz
fadds
xor
xchg
loop
cmpsl
jno
loop
lcall
xchg
cmp
pop
les
pop
xchg
sbb
sbb
in
sub
mov
nop
out
shrl
xor
lds
xlat
test
xlat
fcompl
xor
es
add
xor
xlat
mov
push
and
mov
outsb
push
dec
jge
fcomps
xor
aas
xor
dec
enter
fistpl
icebp
xchg
and
push
cmp
je
pop
dec
cmp
decl
jbe
fwait
push
dec
pop
xor
mov
sub
loope
mov
imul
push
lods
mov
movsb
or
xchg
lahf
jmp
repnz
clc
and
xchg
or
rorl
lcall
lds
push
sub
dec
mov
in
pop
xrelease
jmp
insl
push
xor
and
mov
enter
sub
mov
sub
lret
mov
inc
sub
xchg
call
mov
xor
fimull
and
pop
mov
push
inc
mov
push
or
gs
xchg
jb
mov
out
out
fidivrs
imul
fimull
mov
pop
cwtl
push
or
xchg
mov
jecxz
sbb
rcl
movsb
jo
mov
cmp
xchg
mov
loopne
and
out
sbbb
sahf
adc
sbb
cmp
fistl
shll
dec
sbb
gs
sbb
xchg
cwtl
add
ljmp
cmp
scas
loopne
mov
subl
jmp
loopne
or
mov
mov
test
sbb
push
jp
inc
xchg
dec
pop
jecxz
add
inc
imul
imul
xor
js
outsl
jno
iret
mov
test
iret
or
andb
fdivs
xchg
movsl
sarb
cwtl
adc
cmp
inc
loop
test
fnsave
xor
push
mov
sbb
fcomps
push
popf
popa
pop
jecxz,pt
int3
stc
mov
pop
pop
mov
sub
cmpsb
addr16
mov
lret
push
int
mov
in
sbb
movb
pop
imul
dec
pop
mov
cwtl
insb
rcrl
fwait
jl
sti
push
mov
adc
mov
sbb
jb
sub
dec
fisttpll
or
shl
scas
and
pop
daa
sub
pop
inc
addb
and
xchg
inc
add
fistl
lret
in
xchg
out
add
dec
adc
add
cwtl
orl
or
rcrl
inc
mov
xchg
inc
inc
imul
adc
mov
mov
out
aaa
arpl
testl
mov
cmpl
fwait
add
sub
cmp
sub
sub
lret
int
fwait
ljmpw
sbb
inc
mov
push
stos
mov
mov
int3
loop
rorb
addr16
out
movsb
inc
xchg
pop
pop
adc
out
add
and
testb
cmp
into
jle
stos
test
int
pop
loope
pop
ffree
push
push
xchg
mov
and
imul
sub
dec
stos
jle
mov
std
out
sti
out
cmp
xor
jb
loopne
loope
mov
jg
in
cli
mov
pop
out
pop
xor
ret
pop
dec
and
subl
cmc
ret
cwtl
lcall
lcall
add
push
jae
mull
xchg
or
dec
mov
rcrl
gs
mov
mov
test
lds
push
xor
xchg
int
out
insl
push
pop
mov
sub
pop
jo
pop
sub
lret
mov
cmc
sub
ficomps
push
das
sub
outsb
pop
and
or
fs
mov
data16
xor
test
aad
adc
sub
push
scas
jbe
mov
lds
call
dec
rorl
push
add
jnp
adc
add
mov
enter
jp
sbb
test
xor
lret
test
test
cmp
repz
rcrb
pop
dec
test
call
movsl
addr16
jmp
popl
out
call
popf
cmpsb
inc
pusha
mov
andl
add
mov
mov
xchg
cld
pop
xor
imul
jmp
pop
pop
lcall
dec
dec
lods
roll
inc
mov
push
clc
or
in
add
dec
fs
jae
pop
and
xor
xchg
mov
xorl
loop
mov
outsl
or
sub
arpl
repz
xchg
scas
and
pop
push
loop
nop
rorb
ljmp
pop
and
xor
outsl
inc
xchg
fcmovne
jp
xor
cmp
ds
enter
in
sti
pushf
pop
fldenv
divl
cmpb
rcrb
push
out
je
jecxz
out
in
and
fadds
or
test
cltd
mov
xor
das
mov
add
adc
xchg
dec
add
mov
sbb
xchg
ficoms
popf
aad
or
mov
adc
xor
insb
sbb
or
or
adc
add
push
dec
mov
push
jb
mov
insb
out
or
sbb
sbb
cmp
pusha
sub
xor
pop
inc
mov
or
out
sbb
inc
ficomps
lret
xor
cli
ret
mov
into
mov
and
mov
daa
mov
adc
es
stos
jb
xchg
enter
mov
mov
cmpsb
push
in
sub
dec
int
cmp
cmp
inc
outsl
cmp
mov
inc
js
xchg
jmp
mov
mov
and
mov
out
mov
pop
inc
call
ret
int3
add
in
pop
pop
mov
jnp
in
dec
pop
and
inc
cwtl
pop
jo
push
xor
scas
pusha
sub
push
sub
pusha
lock
aas
stc
stos
loope
ss
cwtl
push
ret
push
add
icebp
lods
lcall
mov
mov
ds
lcall
and
push
cli
and
xchg
enter
xor
arpl
add
and
jmp
or
or
add
inc
inc
dec
sub
icebp
imul
cmp
mov
imul
js
scas
pop
jmp
and
lcall
adc
shrb
push
stos
push
jmp
lahf
and
pop
inc
adc
push
les
xchg
mov
sub
andb
mov
shlb
add
xchg
inc
push
std
subb
mov
test
fstpl
xor
or
jae
xchg
push
daa
mov
or
pop
jl
add
popf
lret
je
clc
jl
jp
enter
mov
cwtl
fildl
cltd
fdivs
pop
sbb
add
fstpl
outsl
dec
push
ret
add
sarl
lds
arpl
insl
shrb
push
jbe
stc
push
cmpl
mov
xchg
add
hlt
das
mov
and
out
xchg
jmp
cld
inc
ss
adc
negb
test
mov
jl
fiadds
rcl
stos
pop
lcall
mov
nop
pop
out
dec
mov
lret
push
js
rclb
mov
inc
lret
hlt
lret
stos
lock
dec
fmuls
mov
loop
jecxz
outsl
fsubr
xchg
cmp
shrb
lods
fmull
movsl
sbb
mov
stos
adc
adc
mov
dec
popf
daa
ss
sub
in
dec
mov
arpl
cmpsb
mov
lcall
xor
mov
lock
xchg
test
ss
dec
aad
call
xchg
mov
mov
adc
cmp
fcom
repnz
or
adcl
cmp
mov
cltd
cmpsl
mov
cs
mov
xchg
cmc
stos
dec
mov
pop
stos
jne
inc
das
mov
and
fs
das
test
ja
insl
ss
push
cltd
popf
xchg
int
lods
jle
xlat
cmc
daa
in
sub
push
cmp
pop
sub
dec
xchg
fimull
aaa
outsl
cld
mov
dec
loopne
jae
adc
or
fdivl
push
push
mov
and
ss
in
lea
test
cmp
insl
in
xchg
mov
in
mov
lret
ljmp
nop
mov
fidivs
pop
mov
inc
push
scas
fcomip
jae
jg
xchg
mov
andl
inc
push
mov
into
pushf
add
fistpl
sub
nop
add
xchg
and
insb
ret
mov
pop
cld
and
mov
xchg
imul
call
stos
jae
and
sbb
arpl
sbbb
add
mov
push
mov
adc
das
out
sbbb
jl
jle
jl
cld
cmp
jns
repnz
mov
fsubs
mov
aad
xchg
mov
dec
mov
cmp
cmc
push
gs
sbb
sti
sbb
adc
icebp
hlt
and
nop
add
sub
fs
fs
aad
cltd
pop
js
pop
sub
movsl
nop
sbb
lahf
int
push
sbb
xorb
nop
arpl
nop
loop
sahf
lods
sbb
lods
aaa
mov
inc
add
dec
imul
fdivrs
out
cmp
xchg
and
sbb
rorb
sbb
xchg
movsb
mov
jne
adc
mov
xor
mov
shlb
pop
xchg
pushf
rcll
mov
adc
cmpsl
mov
xchg
sbb
inc
mov
lahf
insb
lock
xor
lea
jp
pop
inc
sbb
lret
mov
je,pn
ret
test
sbb
dec
arpl
outsb
and
int3
lods
xchg
nop
repnz
inc
aad
mov
and
jno
adc
push
popa
mov
mov
mov
mov
arpl
mov
testb
pop
in
or
jne
lea
in
movsb
outsb
sahf
sahf
cmp
sub
mov
jbe
hlt
add
mov
jle
out
or
scas
xchg
rcr
mov
mov
sbb
js
pop
jae
stc
sbb
in
int3
cmpsl
cld
inc
ret
dec
std
mov
fwait
inc
cld
popf
xor
push
and
mov
test
rorb
xchg
dec
imul
push
xorb
mov
xor
jmp
mov
sub
jae
mov
out
mov
inc
cli
jne
mov
jmp
rorb
int
std
pop
push
dec
push
idivb
cmovg
xchg
push
dec
in
fists
xchg
push
cmp
xor
mov
shrl
sbb
in
mov
mov
mov
pop
ljmp
and
jl
subl
sub
inc
mov
or
mov
jle
cld
fldcw
aaa
in
adc
gs
andb
pop
fldt
out
push
jo
jg
dec
sub
or
mov
sbb
out
and
sbb
test
es
cmp
lock
or
jbe
mov
add
inc
mov
test
jle
lods
push
jns
aam
push
jo
mov
movb
mov
es
pop
xchg
sub
test
pop
add
and
aad
adc
jne
mov
int3
and
sub
mov
fs
out
cmp
push
push
mov
mov
std
cmp
cmp
or
push
aad
mov
mov
movsb
dec
loop
fsub
lret
testl
push
push
decl
insb
dec
pop
adc
enter
icebp
xchg
mov
inc
fsqrt
cld
xchg
pusha
adc
aam
or
hlt
cmp
fldt
cmp
repz
into
stos
xlat
repnz
sub
mov
sub
push
bound
adc
add
or
cwtl
push
xor
mov
inc
xor
mov
outsb
push
mov
mov
hlt
stc
jp,pn
aaa
cmp
dec
mov
enter
aam
hlt
mov
lret
inc
in
cli
loop
push
or
inc
subb
push
mov
pop
fsts
jp
xchg
push
cmp
xor
aas
test
push
imul
cltd
mov
aaa
int3
fcompl
push
xchg
jno
popl
mov
and
lcall
mov
imull
and
scas
cmp
dec
scas
push
or
jb
jno
imul
cmpsl
adc
adc
push
repz
mov
dec
fidivrl
xor
cli
xchg
mov
push
divl
inc
scas
mov
jne
scas
cmp
loope
aas
sub
pop
push
pop
out
or
cs
pop
sti
push
scas
jecxz
xor
das
ja
push
mov
lock
shrb
xchg
iret
xchg
jecxz
hlt
inc
divl
adc
repnz
into
xchg
push
lret
sbb
jl
lds
fsubrl
clc
fists
cltd
pop
or
out
pop
dec
bound
push
rorb
daa
pop
dec
cmpsl
fbstp
or
pop
or
add
rcll
push
and
dec
rep
jmp
fildll
lds
add
xchg
or
cmp
ja
adc
mov
jp
or
sub
fbstp
mov
push
test
iret
pop
mov
fwait
lods
jnp
sti
sbb
lock
pop
cmp
or
mov
mov
decl
or
imul
fsubl
sbb
pop
xor
pop
push
mov
test
loopne
sub
and
mov
push
popa
cmpsb
inc
add
jmp
cmp
in
or
popl
push
sub
jle
xchg
test
jmp
push
xchg
nop
push
jne,pt
movsl
jle,pt
cli
jbe
pop
push
cwtl
int
clc
out
lahf
sub
adc
and
test
maxps
in
push
leave
sub
cs
inc
push
sbb
mov
dec
pop
xchg
rol
enter
dec
call
test
sarb
jne
lods
mov
mov
cmp
add
aas
test
pop
insl
pop
jno
mov
and
sub
pop
fidivs
int3
add
aam
scas
cmp
mov
daa
cmp
es
scas
scas
int3
push
xchg
mov
xchg
rol
pop
inc
mov
hlt
jns
or
movsl
stos
cmp
arpl
xchg
bound
cli
pop
out
add
aaa
dec
adc
vpsubsw
jbe
insl
sti
xchg
std
push
roll
jmp
jg
insl
pusha
xor
mov
xchg
lret
pop
insb
xor
fmull
stos
fcoml
and
mov
js
mov
stos
inc
add
movsl
ffree
mov
mov
cmp
xor
mov
cmp
or
scas
xor
or
jno
clc
ljmp
mov
hlt
pop
adc
arpl
aam
inc
pusha
mov
rorb
fidivl
mov
or
mov
insb
push
lcall
enter
jb
repnz
daa
mov
sar
rcrl
mov
mov
inc
inc
es
outsl
addr16
daa
notl
icebp
pop
in
lods
gs
mov
cwtl
mov
sar
addl
cwtl
subb
sbb
ficoml
jnp
in
jmp
popf
adc
loopne
lcall
and
dec
cld
jecxz
cmpsb
js
test
mov
cmp
sub
shl
jnp
adc
or
daa
test
test
xchg
int3
mov
rolb
sbb
movsb
sbb
das
mov
push
repz
pop
dec
xchg
dec
int3
imul
into
xchg
mov
shrb
leave
negl
mov
test
adc
mov
in
sahf
push
and
stc
lret
pop
dec
push
call
lock
lret
jge
mov
mov
mov
or
cmp
movsb
shlb
and
inc
jbe
push
shlb
xor
add
adc
fsubrp
out
scas
cmp
push
mov
add
and
push
mov
jmp
test
push
js
mov
movsl
or
lret
scas
sbb
jle
xchg
int
dec
mov
push
ret
sbb
rolb
fs
leave
in
test
test
mov
lods
lahf
aaa
jae
imul
xchg
test
ss
clc
in
mov
imul
jnp
hlt
mov
cmpsb
icebp
mov
out
and
jb
rorl
and
gs
das
fistps
push
testb
dec
pusha
inc
and
ret
int3
and
add
mov
out
pop
shr
push
fs
fcmovne
jb
pop
or
mov
cli
nop
sbb
cmp
pop
inc
xor
fbld
adc
push
enter
push
adc
js
stos
jne
gs
stos
clc
inc
mov
mov
leave
ret
fcomi
mov
sar
jo
sbb
pushf
pusha
movsl
cld
sbb
sbbb
fcmovb
mov
mov
lea
adc
cmp
jne
add
mov
cltd
xor
stos
fldenv
dec
outsl
sub
mov
push
rol
sbb
mov
ja
pop
daa
sub
mov
cmc
cmc
mov
ret
xchg
dec
int3
jle
hlt
dec
mov
and
aam
xor
test
push
xchg
mov
mov
das
xorb
or
xor
ret
popa
lret
pop
mov
js
pop
and
ja
rorb
jmp
add
hlt
lods
xor
fisubrs
shll
in
cmp
shll
xor
je
mov
in
sbb
mov
frstor
sbb
ret
mov
popf
fwait
int3
lods
sub
ret
push
or
loop
repnz
push
cs
outsl
cli
mov
inc
mov
lcall
inc
pop
aas
mov
enter
push
stos
cmp
sbb
xchg
jp
dec
pop
xchg
loopne
mov
aam
lret
scas
pop
mov
daa
xlat
mov
roll
iret
sbb
cmp
sub
jl
mov
sbb
lret
push
xchg
xchg
daa
sub
pop
imul
jnp
sysret
aas
jno
cmp
ss
lret
dec
jo
cmp
cmp
cli
push
jp
dec
rolb
add
inc
jae
xor
xchg
mov
pop
arpl
dec
dec
outsb
fimuls
jbe
xor
inc
leave
repz
sahf
mov
mov
or
add
ss
push
and
mov
adc
dec
pcmpgtw
scas
aam
adc
jae,pt
pop
cmc
dec
mov
sbb
push
cmp
jge
adc
cmp
fldl
icebp
jp
mov
into
mov
out
mov
fisttpl
jbe
push
dec
loope
mov
push
out
cmp
dec
jecxz
movsb
pop
push
adc
jae
or
xchg
inc
xchg
inc
or
xchg
mov
or
mov
jne
lds
push
lock
loope
push
push
popa
loopne
std
pop
dec
cmp
cmp
movsl
cltd
in
add
sub
in
push
push
loop
adcl
js
xchg
pop
sub
xor
into
rclb
adc
inc
push
push
dec
sub
mov
adc
ret
aas
xor
lods
mov
xchg
mov
ja
jle
das
jmp
jp
and
push
xchg
or
push
sbb
int3
or
pusha
mov
or
std
outsl
pop
icebp
mov
push
ret
mov
adc
sarl
push
andl
fcmovu
sub
or
sbbb
daa
dec
mov
negb
ss
sub
cmpsb
mov
lret
aam
mov
jge
push
in
lods
iret
push
jb
push
mov
pop
icebp
xchg
leave
adc
inc
add
xchg
jecxz
cmpsl
push
repz
jo
and
dec
cmpsl
jne
repnz
mov
inc
hlt
cmovl
push
mov
fnsetpm(287
pop
cmp
xchg
cwtl
int3
xlat
inc
inc
hlt
shr
pop
test
cld
sub
xor
andb
and
addr16
pop
icebp
pushf
repnz
out
pop
sub
lret
sub
mov
mov
das
jge
imul
scas
jbe
mov
repz
fsubl
rcr
clc
jns
leave
jg
xchg
dec
pop
sub
lret
fildl
xor
push
and
dec
sub
sbb
push
cs
dec
jb
rcll
push
les
push
addr16
fnsave
aas
es
push
ss
mov
jge
ljmp
push
das
movsb
fiadds
enter
scas
in
mov
test
stos
adc
inc
xor
arpl
jae
lcall
pop
imul
cmp
addb
dec
dec
test
mov
idivb
or
es
inc
popf
pop
fsubrs
dec
fsubs
mov
ss
or
xchg
push
xor
sti
lock
cli
jo
xlat
sub
jl
pop
out
inc
add
into
mov
loopne
dec
mov
fwait
cli
ja
lret
jne
shl
push
mov
cmc
add
jecxz
jns
and
cmp
fdivl
mov
mov
popf
sub
ja
pop
movsb
es
adc
add
test
fisubrl
inc
insb
movsl
inc
inc
lcall
rcll
mov
mov
cmpsb
scas
adc
cmc
or
stc
jle
icebp
xlat
cmp
jnp
lods
inc
add
jp
xchg
popa
nop
adcb
jo
and
push
mov
mov
or
mov
in
push
jns
push
test
test
adc
lds
jno
scas
mov
ja
rolb
xchg
sub
bound
sub
lock
and
repz
pop
push
enter
pop
lods
mov
mov
adc
outsb
in
les
mov
pop
or
dec
bound
fs
inc
es
clc
iret
mov
popf
cmp
fistpll
in
andb
mov
rol
popf
cmp
mov
out
jo
ret
push
pop
or
sbb
adc
dec
das
jp
mov
fisttpll
call
lret
mov
vpbroadcastq
push
notl
and
fimuls
ss
xchg
arpl
xor
imul
mov
jle
fdivl
leave
lds
mov
sti
dec
test
pop
inc
mov
ds
andl
xchg
pushf
in
in
sbb
sahf
cmpsl
add
xlat
addr16
xchg
test
mov
cwtl
into
push
sbb
and
mov
hlt
mov
fiaddl
or
sar
sbb
arpl
out
dec
inc
bound
inc
scas
xchg
ret
dec
pop
movaps
test
unpcklps
nop
lcall
push
pop
repz
int
stos
dec
pop
cmp
std
js
sub
movsb
dec
xor
mov
out
int3
xchg
adc
jno
lret
add
mov
arpl
fildl
jge
add
push
sub
mov
sub
outsb
rolb
mov
lret
outsb
mov
sub
inc
adc
stos
pusha
xorb
dec
pop
xchg
imul
lods
adc
cmp
arpl
adc
bswap
mov
stos
push
test
jmp
lcall
rdtsc
push
sar
pop
sbb
dec
aas
sub
sub
insl
mov
mov
jb
cmp
fisubl
xchg
mov
dec
push
mov
dec
jg
push
add
addr16
dec
es
test
mov
out
je
popa
aad
push
jge
jg
imul
repz
idivb
dec
out
push
ja
cld
cwtl
orb
push
push
sbb
xor
test
adc
pop
aas
imul
pop
sub
adc
mov
push
fstpl
clc
mov
jmp
mov
xchg
scas
xor
push
inc
adc
cld
or
push
or
inc
ljmp
stos
sub
pop
sub
fisubs
adc
dec
add
xchg
and
cmp
push
and
leave
stos
into
lods
mov
imulb
sbb
mov
outsl
popa
and
imul
rolb
jno
inc
pop
insl
mov
pop
inc
add
aaa
std
cmp
mov
pop
fiaddl
cmpsb
les
push
repnz
pop
mov
add
test
pop
arpl
xor
leave
iret
aam
jno
ds
fldenv
in
inc
insb
xor
into
pop
xor
cmp
into
lods
mov
mov
adc
add
rolb
jne
jae
movsb
inc
dec
iret
sub
xor
xchg
lods
std
adc
mov
or
mov
or
mov
cmp
mov
test
out
jno
jnp
shrb
addl
jb
and
pop
cld
cs
pusha
sub
dec
sbb
loop
es
xor
mov
mov
sub
or
pusha
nop
aad
xchg
mov
shrb
mov
imul
xchg
xor
xor
dec
pop
out
scas
jle
jns
clc
movsb
mov
xchg
jle
shr
jmp
mov
dec
cmc
adc
and
add
xchg
mov
rclb
xor
in
xchg
jb
jae
jl
jb
repz
add
mov
jbe
loopne
das
mov
movsl
mov
outsb
and
test
mov
jae,pn
sahf
cmp
dec
mov
rcll
cmc
out
sub
pusha
xlat
pop
adc
aaa
dec
pop
ss
pop
cwtl
cmp
add
add
inc
inc
sub
dec
iret
lds
and
fcmovnbe
imul
imul
sbb
shrl
rorl
arpl
popa
push
xchg
jecxz
inc
in
call
in
ret
inc
pushl
xchg
pop
inc
jp
je
mov
in
pop
jge
lret
es
cmp
dec
ret
sbb
fsubrl
add
sbb
out
fsubl
inc
shl
xchg
ret
sub
hlt
stos
aad
outsl
pop
adc
mov
addr16
shr
scas
mov
shl
in
incb
shl
mov
aam
les
test
xor
push
insl
imul
push
cmp
mov
fldenv
cli
movsb
or
popa
cmpsb
ss
inc
shlb
scas
dec
xor
rcl
pushf
in
fs
hlt
out
popl
popa
into
dec
cmc
lahf
jmp
xchg
scas
inc
cmp
dec
lret
lods
cmp
jmp
loop
push
rcll
xchg
mov
cmpsl
movsb
pop
dec
ja
xlat
pop
sub
out
jp
and
inc
and
loop
cmp
cmp
sub
ds
movsl
pop
les
gs
test
cmpsl
mov
pop
mov
cmp
insb
xor
subl
les
or
lods
in
pop
mov
add
cmp
hlt
adc
sub
sti
mov
push
pop
adc
fidivrl
aad
in
pop
mov
outsb
add
mov
ja
lea
sub
dec
mov
sahf
lret
lods
mov
pop
mov
imul
es
imul
sbb
fsincos
dec
pushf
loope
jnp
push
mov
call
mov
xchg
add
rol
pop
out
add
das
or
hlt
aam
adc
clc
popa
call
rorl
leave
sbb
or
ss
pop
test
pop
add
nop
push
cmc
or
lock
rorb
divl
int3
add
mov
jne
stc
mov
adc
in
xorb
fisttps
push
cmc
add
inc
into
sbb
pop
movsl
std
shrb
jbe
xchg
std
movsb
sahf
les
add
pop
sbb
mov
or
sbb
xchg
test
dec
in
les
push
fistps
orl
fwait
inc
cmc
subl
push
icebp
and
lcall
lahf
or
adc
fwait
pop
js
ret
into
mov
mov
dec
ss
jb
mov
cld
sbb
pop
fsts
clc
adc
mov
lcall
repnz
sbb
xchg
in
cmp
and
inc
pop
test
push
inc
pop
lret
xchg
lods
jle
aas
xchg
jmp
fsubl
fnsave
adc
or
xor
loope
jmp
test
out
sahf
adc
xchg
xlat
dec
ljmp
and
testb
push
xor
sub
mov
std
pop
imul
adc
inc
xor
xor
lret
cmp
movsl
push
and
mov
ds
dec
inc
aaa
push
mov
popf
stos
and
test
push
das
jae
lods
dec
pop
push
and
pop
lods
pop
mov
aaa
fdivrp
mov
xor
sahf
sbb
clc
std
fisttpl
imul
v4fnmaddss
xor
xchg
dec
out
lods
into
popa
imul
add
jnp
xor
xchg
xchg
push
inc
stc
lock
ret
leave
fmull
or
pop
pop
in
out
adc
das
loopne
movsb
in
daa
mov
push
sbb
pop
dec
gs
or
add
or
sub
in
xor
dec
and
mov
mov
dec
jnp
pop
mov
ljmp
and
adc
popf
or
outsl
popa
lret
jbe
int
dec
jbe
sarb
mov
xor
mov
mov
adc
xchg
pop
cwtl
pop
add
mov
adc
and
push
cs
or
int3
out
imul
mov
imul
xor
das
ja
cmp
lds
pusha
jecxz
inc
xchg
getsec
cmpsb
cmp
dec
cmp
xchg
ds
ret
loope
ss
mov
jle
mov
or
push
push
cmpb
out
out
popa
aam
dec
call
in
cli
sub
jne
enter
or
lock
repz
ret
sbb
and
dec
or
mov
fistpl
mov
popf
sub
test
fistpll
dec
data16
cmp
pop
mov
cltd
dec
sub
aad
push
xor
aas
test
int3
pop
mov
pop
stc
cli
inc
push
sti
add
xchg
ja
xor
or
cmpsb
aam
cli
push
sub
xchg
jnp
repnz
hlt
push
inc
adc
inc
xchg
push
addb
xchg
and
mov
mull
icebp
mov
add
stos
stos
push
sbb
out
jnp
sbb
cs
xor
mov
loop
xchg
mov
sub
jne
push
jmp
cmp
push
dec
in
lahf
loope
push
repnz
and
cs
xor
in
mov
jns
push
es
mov
xchg
dec
add
xchg
std
ret
sbb
out
add
cmp
push
sbb
adc
pop
sbb
das
mov
mov
rorb
int
cwtl
or
fistpll
aad
lahf
add
int3
push
std
add
cli
lods
negb
jg
lcall
int3
mov
mov
subl
leave
mov
mov
inc
pop
and
subl
xchg
sub
mov
pop
in
jecxz
sahf
repnz
jle
imul
adc
jb
fldt
sahf
fsubrl
addr16
stc
lahf
ret
mov
and
push
mov
out
loope
js
fucomi
enter
jp
das
pop
xchg
inc
pop
dec
test
cwtl
rcll
mov
out
inc
push
pop
test
aas
jno
mov
testl
or
sub
test
inc
test
mov
and
push
stos
jle
fstpl
mov
in
sti
int3
cmp
mov
insl
test
popa
pop
xchg
or
and
mov
mov
xchg
notl
cmpsb
push
jns
mov
cli
dec
or
add
or
aad
sbb
pop
decb
mov
std
mov
shlb
or
push
shlb
enter
lods
in
imul
mov
jg
jne
dec
mov
ret
adc
jns
push
mov
das
add
cld
pop
in
cmp
shll
mov
mov
or
in
jnp
aam
cs
repz
push
rcl
jg
sti
clc
jmp
pushf
sbb
sub
xchg
rcl
loopne
pushf
iret
stos
gs
mov
mov
or
popa
dec
inc
jne
in
aad
push
into
add
dec
clc
and
and
and
adc
mov
inc
cmpsb
mov
mov
add
mov
pop
lret
fildl
fwait
xchg
and
addr16
jnp
out
push
xor
repz
adcb
dec
xor
inc
setno
call
fcmovne
jnp
imul
pop
xor
mov
pop
mov
jno
repz
push
and
add
loop
cld
outsb
lds
mov
push
sub
xchg
push
mov
jo
inc
cs
cmc
int
xchg
jns
sbb
pop
shl
ret
andb
cwtl
repnz
xor
sub
push
test
sub
xor
jmp
jae
data16
imul
mov
mov
popa
out
jecxz
les
into
scas
addr16
aas
data16
outsb
ret
test
xor
mov
jo
sahf
mov
add
cwtl
sub
ljmp
stos
out
mov
std
push
jge
mov
mov
das
adc
mov
xchg
enter
or
imul
leave
rorl
pop
fnstcw
xor
int3
dec
mov
jp
movsb
sbb
fildl
repnz
stc
jge
ficoml
lods
adc
xchg
cli
inc
inc
repz
xchg
in
ljmp
dec
jno
pop
std
movsb
lahf
pop
mov
and
inc
and
dec
mov
or
push
cmp
inc
xchg
jnp
mov
fistl
dec
push
adc
jp
pop
push
pop
jecxz
rcr
dec
in
jecxz
xchg
sbb
repz
and
push
loopne
arpl
mov
cmp
stos
outsb
inc
subb
mov
outsl
mov
out
mov
inc
xor
popa
inc
mov
inc
lds
in
pop
xor
mov
mov
clc
mov
dec
shrl
pop
sbb
icebp
test
sbb
mul
pop
repnz
push
jo
adc
add
mov
mov
cmp
insl
leave
testb
push
gs
cld
and
dec
cwtl
mov
or
lock
pop
mov
ljmp
ja
outsb
inc
xchg
insl
mov
mov
cld
mov
inc
movsl
add
xlat
repz
and
loop
fs
outsl
notl
jmp
and
sbb
js
iret
call
jne
xor
repz
das
add
frstor
repz
add
push
adc
ljmp
jnp
fildl
inc
jle
mov
nop
jecxz
mov
adcb
adc
shlb
dec
fdivs
push
popf
add
ret
int3
sub
fwait
mov
adcl
cmp
pop
mov
inc
xor
popa
sahf
push
cltd
mov
dec
mov
inc
hlt
cmp
movsl
sbb
test
jns
bound
inc
jecxz
pop
rclb
xor
sti
sbb
pop
or
mov
testb
les
aaa
out
sbb
sub
popa
js
cmc
cs
ja
fstp
mov
pop
imul
popa
sub
les
mov
xchg
push
sti
loop
mov
clc
pop
hlt
pop
test
sbb
jb
pop
movsl
mov
and
push
jle
add
and
inc
mov
mov
push
pop
mov
dec
sbb
or
pop
inc
push
dec
cmc
or
insl
loop
ds
mov
xor
cmovbe
xchg
adc
xchg
inc
push
rorb
lahf
dec
mov
inc
add
sbb
inc
mov
lret
inc
add
jb
dec
sbb
mov
dec
leave
sbb
fisubs
in
sub
mov
imul
mov
aad
into
jmp
cmp
mov
arpl
aas
icebp
repz
mov
ss
mov
aad
popl
xchg
and
push
dec
adc
and
gs
ss
out
in
adc
fistpl
xor
sub
test
pop
stos
pop
xchg
jle
push
add
push
sbb
pop
rorb
out
jmp
xor
jbe
std
mov
lods
mov
hlt
aad
daa
add
dec
sub
out
stos
push
int3
sbb
mov
push
sarb
mov
bound
sarl
xlat
fmull
mov
cli
sub
push
shlb
sub
imul
cmp
imul
dec
xor
icebp
inc
repz
ficoms
rcll
pop
xor
gs
push
ja
stc
lahf
and
dec
cld
sbb
xchg
ja
ret
sub
sub
outsb
stos
mov
jo
loop
push
fsubrl
mov
into
sub
adc
insb
stc
pop
add
fwait
cmp
inc
jg
out
out
imul
test
repz
sub
lret
jecxz
inc
cmp
dec
adc
mov
insb
pop
push
jmp
inc
mov
jns
pop
fcomip
std
nop
cmp
addl
jl
repz
xor
mov
pushf
leave
push
add
lcall
js
cmp
gs
cmp
sbb
cmpsl
jae
js
jbe
jae
cld
xchg
mov
push
ret
test
adc
negb
aad
repz
loopne
dec
add
hlt
sub
mov
cmp
and
pop
lock
stc
lock
add
fstpl
lods
adc
cmc
xchg
nop
hlt
mov
notb
mov
fs
pushf
jae
mov
psrlw
test
sbb
mov
int
lahf
and
jle
inc
mov
cmp
cmp
xchg
jge
inc
addr16
repnz
pop
push
out
xchg
testb
insl
rol
jecxz
jns
mov
lcall
jp
imul
jmp
test
mov
or
pop
push
sub
aas
cltd
mov
push
mov
xlat
in
and
orl
sahf
sbb
cwtl
mov
lret
mov
jae
sbb
loope
lods
inc
or
mov
pop
outsl
das
jg
dec
dec
test
rcrb
enter
sub
lret
or
imul
push
mov
xchg
popa
cmpsb
int3
xchg
stos
leave
adc
cwtl
fs
enter
cmpsl
rep
xchg
mov
add
aad
outsb
lret
pop
out
dec
testb
push
scas
shll
pushf
dec
lcall
bound
lods
in
fsts
mov
pop
mov
xchg
or
pop
sbb
adc
test
lea
xor
jg
testl
arpl
sbb
jo
xchg
cmp
cmp
xchg
subb
clc
addr16
mov
scas
pushf
jne
sub
mov
and
loop
mov
loope
call
inc
push
inc
lcall
test
mov
clc
pop
mov
mov
xchg
insl
lds
jge
shll
mov
jo
in
mov
enter
sti
gs
test
mov
mov
pop
jp
dec
push
pop
fucomip
and
xor
push
push
shlb
push
sbb
loopne
addb
mov
movsb
push
xchg
sbb
sarl
insb
in
jns
jge
stc
cs
out
lret
and
xchg
add
push
and
lahf
int3
adc
sub
fmull
xchg
fldl
scas
stc
out
shl
jb
xor
or
stos
icebp
cwtl
xor
and
dec
mov
js
sub
jge
and
push
iret
stos
mov
sub
cmpsl
push
les
add
sub
sbb
push
add
sub
jge
lock
out
iret
push
push
insw
mov
push
int
ljmp
dec
bound
mov
jl
jno
pushf
or
xor
cmp
mov
jmp
leave
ljmp
push
stc
pop
mov
or
fcoml
sbb
dec
push
sbb
push
dec
or
stos
dec
insl
or
adc
unpckhps
sbb
int
adc
fstp
inc
jmp
ret
repz
jl
insb
xchg
lock
add
adc
jle
sub
mov
dec
xlat
cmpsb
cmp
js
iret
pop
inc
outsl
add
out
fbld
xor
and
or
push
and
lods
out
cwtl
stos
inc
xchg
lret
mov
subl
adc
int
mov
jg
fs
xor
fnstcw
adc
add
mov
and
ds
stos
cmp
lahf
xchg
jmp
pop
pop
fsubp
loop
jne
aas
push
mov
xchg
out
mov
gs
lret
pop
sar
cmp
pop
fadds
in
sbb
repnz
rcrb
into
sub
mov
pop
dec
out
rcll
fwait
dec
repz
sarl
ficoms
jecxz
sub
push
test
or
push
push
mov
stos
int
les
lret
sbb
push
and
rol
push
ret
cltd
mov
ss
cmp
pop
cli
movsb
cmp
xchg
xchg
enter
or
stos
pop
repz
and
mov
icebp
lret
ret
icebp
faddl
aad
adc
xor
push
jnp
and
int
add
outsb
mov
scas
cmp
mov
cmc
cmp
cmp
fisttpl
adc
add
imul
popf
ljmp
lret
fisttps
push
pop
push
imul
or
test
mov
add
and
jo
xor
arpl
je
jns
outsl
adc
jl
in
movsb
cmpsb
fists
fcmovne
dec
sbb
fcmove
repz
int
or
inc
push
xor
int3
jmp
fsubrl
push
or
jmp
notl
xor
cmp
repz
out
push
adc
push
push
ja
cmc
fsubrs
int
adcb
jecxz
dec
pop
mov
rorl
in
imul
add
leave
pop
adc
push
inc
fmul
cli
jl
jae
out
cltd
mov
sahf
push
aad
jbe
mov
jle
mov
sub
adc
inc
mov
mov
pushl
inc
ja
cmpl
push
xchg
jns
pop
addb
out
mov
inc
popa
popf
sbb
aaa
mov
and
xor
dec
dec
xor
jno
sbbb
pop
and
inc
outsl
out
cmpsb
lea
add
lods
shlb
pop
imul
mov
add
pop
jb
cwtl
popa
push
mov
stos
push
mov
xchg
sbb
in
cmp
xchg
push
mov
jbe
pop
sub
add
ret
lods
vcvtsd2si
push
arpl
add
pop
in
hlt
xchg
dec
cmp
rol
adc
pop
hlt
aam
xchg
loope
loope
test
mov
jge
pop
jb
add
dec
cltd
jno,pt
xor
ret
out
orb
jge
mov
pop
loope
fwait
inc
xchg
xor
jnp
mov
mov
cmp
dec
lcall
out
sbb
mov
out
outsl
pop
xchg
ja
push
xchg
xor
pop
insl
insl
mov
stos
insl
pusha
jns
lock
adc
dec
and
lea
jns
addr16
adc
push
and
ret
sbb
adc
pop
sbb
jmp
cmpsb
loope
pop
dec
mov
mov
adc
or
lcall
xchg
cmp
nop
test
enter
dec
sbb
loop
out
out
daa
je
repz
cmpsl
ret
loope
dec
sbb
adc
fisttps
dec
push
xor
pop
popf
push
jb
sub
scas
xchg
in
scas
xor
fbld
mov
rcll
xchg
jecxz
sbb
mov
mov
cmp
adc
std
mov
daa
xchg
ja
jae
jmp
sbb
ds
ds
push
mov
jo
sbb
cmp
jmp
sub
dec
dec
jge
mov
mov
movsb
fs
sti
andb
mul
xor
pop
cmp
lods
les
sbb
cmp
imul
ss
or
into
lds
pop
dec
outsb
aad
jmp
jge
push
xchg
sti
and
or
cmpb
mov
fstpl
outsl
addb
arpl
daa
clc
aaa
sbb
and
sbb
addl
dec
push
mov
cltd
stc
imul
insl
push
cmp
and
mov
push
mov
jns
inc
adc
push
push
fldcw
adcl
add
fldl
into
xchg
test
sbb
add
in
pushf
hlt
inc
jo
jb
or
sahf
push
rolb
repz
mov
clc
pop
xchg
sub
dec
movsb
xor
fldcw
jg
mov
in
mov
mov
push
push
jmp
mov
adc
sub
mov
jnp
xor
pop
cmp
add
je
pop
xor
call
add
lret
fiadds
movsl
push
callw
cmpsl
dec
test
adc
inc
mov
and
dec
cli
inc
push
adc
pop
mov
iret
roll
mov
xor
add
mov
je
mov
mov
cmp
nop
stos
mov
test
shll
xor
pop
xor
mov
mov
fldl2e
leave
cmp
stos
cmp
dec
mul
or
test
bound
pop
jmp
into
add
shlb
push
push
push
adc
ror
pop
rolb
insb
rcrb
pusha
push
sbb
inc
cmp
jmp
cmpsl
arpl
movsl
outsb
dec
mov
scas
xchg
jl
nop
cmp
out
cli
and
add
repz
lea
les
jl
testl
popf
mov
aam
iret
xchg
jae
mov
sbb
fwait
clc
int
mov
divb
or
jne
adc
cmpsb
lret
mov
and
insl
push
iret
aaa
mov
jbe
jp
enter
rclb
mov
fcoml
shlb
cmp
arpl
xchg
adc
lea
mov
cmp
xor
ljmp
aam
push
into
fwait
xor
mov
mov
sarb
jno
xor
mov
test
test
ja
nop
cmpsl
cmp
cmpl
ret
fcoms
mov
mov
jne
bound
pop
frstor
call
add
mov
mov
mov
cmpsl
orl
jle
and
push
cmp
add
repnz
xor
pop
mov
lea
sarb
and
out
jge
imul
jns
test
push
loope
push
aaa
sarb
adc
cmp
push
push
sti
out
xchg
sub
mov
or
and
xchg
mov
mov
jnp
dec
scas
fsubrp
rolb
jmp
mov
xchg
fisubrl
insl
mov
arpl
jnp
cld
imul
nop
es
mov
daa
xor
pop
int
pop
dec
lcall
jae
jb
cmc
mov
mov
or
xchg
push
xchg
stc
daa
repnz
and
add
cltd
aaa
and
xor
jge
daa
mov
out
incb
into
clc
mov
int3
mov
mov
repnz
inc
xlat
sbb
and
loope
dec
rcl
cmp
dec
inc
jb
movsl
and
adc
push
popa
out
dec
lea
sub
addr16
fidivrs
cmp
pop
pop
orb
xchg
cmp
or
push
std
ret
xchg
outsl
mov
pushl
or
out
cmp
mov
cmpsl
sub
in
sar
sti
cmp
mov
mov
imul
imul
dec
sbb
cs
or
add
jg
sub
jb
xchg
mov
xlat
fisttps
sbb
push
in
mov
sub
repnz
test
loop
sarl
adc
test
stos
jg
or
push
pop
in
mov
push
adc
mov
dec
adc
inc
fs
movsb
nop
out
xor
mov
insb
out
jnp
push
icebp
adc
sbb
mov
fcoml
call
lds
in
in
mov
fstpl
adc
mov
outsl
out
mov
aad
xor
sub
aaa
push
lret
stc
inc
jo
aaa
xor
xchg
lods
sbb
enter
jno
sub
insb
pop
imul
or
mov
rcr
sub
sub
fidivl
inc
xor
loopne
cwtl
mov
adc
mov
call
adc
aam
cmpsb
cli
int3
sub
jle
xchg
push
xor
xorb
cwtl
test
ret
mov
out
xor
inc
sub
adc
loop
mov
or
mov
je
push
pop
mov
mov
gs
getsec
or
hlt
mov
in
and
pop
cld
loope
sarl
xor
gs
fisttpl
out
pusha
ret
je
dec
test
pop
int3
out
jo
add
ds
sbb
push
dec
adc
add
xchg
adc
xchg
adc
cltd
out
stc
decb
mov
cmp
dec
adc
sub
hlt
xor
or
mov
jnp
and
movsl
sub
add
aas
dec
in
repz
mov
and
cltd
xor
icebp
movsl
mov
xor
and
mov
stos
ss
loop
hlt
jl
sub
cld
jp
aad
ljmp
mov
out
filds
pop
adc
mov
mov
movsb
cmc
or
pop
jae
add
scas
in
inc
cs
xorb
gs
mov
inc
mov
or
jg
push
pop
movsl
test
cmp
pause
test
ret
lods
push
gs
scas
jl
xchg
ret
or
mov
xchg
pushf
jecxz
and
lahf
lret
sub
mov
in
inc
jg
mov
sahf
push
fwait
pop
mov
push
je
push
mov
mov
mov
aaa
sub
push
jge
sub
mov
nop
xor
mov
dec
incl
inc
nop
jl
mov
xchg
inc
push
jo
dec
jae
arpl
lea
fwait
mov
enter
and
std
pop
dec
and
push
sub
mov
movsb
mov
scas
pushw
fiaddl
push
rolb
rol
repnz
shl
pop
fisttpl
adc
xor
hlt
lahf
mov
and
push
imul
test
push
xor
xchg
jg
mov
jno
call
sub
mov
stos
sbb
add
repnz
pop
jnp
mov
enter
cld
test
rcrl
jecxz
shll
inc
out
xor
pushf
xorl
xor
into
jecxz
mov
cmp
push
push
fs
pop
cmc
ljmp
mov
dec
aas
stos
mov
ds
lds
push
pop
bswap
push
js
push
imul
jns
clc
xor
push
clc
sbb
popf
and
cmp
data16
push
imul
mov
call
mov
sbb
std
ficoms
popl
lret
div
lahf
pop
mov
add
subb
push
inc
xor
mov
push
sbb
add
leave
in
shll
lods
fidivs
pop
xchg
sub
in
mulb
xchg
ficoml
inc
sbb
fnstcw
mov
inc
imul
pusha
mov
in
pop
dec
cmp
in
cltd
notb
in
and
pop
mov
lret
ds
div
arpl
mov
xchg
add
sub
lahf
bound
xchg
mov
pop
shrb
imul
lcall
jnp
pop
inc
sbb
push
cs
mov
aas
stos
jmp
sub
andb
dec
lock
jecxz
call
push
jae
lds
movsl
cs
or
sbb
popf
dec
xor
push
dec
fcoml
fisttpl
mov
push
xchg
mov
cs
pop
mov
inc
dec
or
push
test
test
fisubl
icebp
cmp
xor
outsl
aad
xchg
rorl
ret
mov
jnp
jmp
mov
inc
into
mov
shlb
repz
mov
in
add
int
loope
mov
push
rclb
jmp
and
sub
dec
mov
repnz
test
arpl
into
add
jp
mov
and
sbb
mov
sub
add
das
lret
movsl
inc
inc
incb
adc
test
mov
jp
mov
adc
adc
ss
lret
js
and
xor
add
jnp
cltd
push
adc
add
sub
lret
dec
movsl
ficomps
in
ret
xor
jp
fbld
pusha
incb
sbb
ja
jnp
jmp
mov
mov
int
movsl
pop
rcll
hlt
or
mov
and
out
out
popf
dec
mov
movsb
addr16
xorl
sub
rcrb
or
std
push
enter
fnstenv
mov
xchg
andb
pop
rol
cmp
fildl
rcr
dec
jb
enter
shlb
int3
push
outsl
mov
negl
cwtl
cmpl
aas
idiv
cld
push
mov
xor
rcrb
in
stos
adc
stc
out
and
in
cmpsb
lcall
out
ja
hlt
xchg
jb
and
mov
push
cmpxchg
pop
cli
out
mov
mov
jae
inc
cmp
mov
pop
int
popw
jecxz
jbe
ret
cmp
inc
push
cwtl
push
shrb
sub
int
cmpb
pop
mov
push
gs
xchg
jp
cmp
pop
xchg
pop
or
xchg
jae
aad
popa
mov
fdivrl
mov
out
push
mov
jno
xchg
hlt
mov
stos
mov
out
add
pop
jns
mov
loopne
sbb
xor
lahf
jp
push
test
sti
sbb
adc
mov
mov
or
fmulp
les
or
jl
mov
sbb
adc
sub
nop
stos
dec
ljmp
push
shrb
dec
loope
imul
imul
icebp
cmp
mov
test
and
call
lods
mov
hlt
mov
loop
fbld
jg
fwait
scas
pushl
mov
push
mov
jo
rcrb
xor
lock
xchg
and
enter
out
nop
loope
mov
xchg
cmp
inc
ss
push
sub
sbb
add
xchg
push
out
mov
incb
lods
push
mov
data16
lods
aam
sub
imull
adcb
out
out
enter
cmp
cmpsb
rolb
fwait
inc
sahf
int3
rcrl
push
das
cmp
mov
pusha
stc
aaa
repz
out
or
pop
add
mov
mov
push
in
sti
sti
push
add
lods
xor
sbb
stc
pop
push
mov
jg
xor
add
clc
xor
lock
jbe
mov
pop
push
mov
mov
cmp
mov
sahf
and
jl
nop
xchg
jp
in
mov
mov
push
jnp
pop
nop
outsl
fimuls
and
add
jno
xchg
int3
xchg
int3
mov
mov
push
cmpsl
jo
adc
scas
xchg
adc
sbb
inc
and
mov
shl
and
out
xor
xchg
repnz
data16
rcrl
jg
iret
aas
in
cmp
xor
mov
mov
mov
outsb
decl
jp
fs
mov
xchg
mov
rorb
pop
adc
in
data16
push
clc
stos
pop
rcrl
mov
xchg
xor
jecxz
pop
sub
inc
xor
dec
push
stc
outsl
jb
imul
sti
mov
mov
imul
loope
pop
and
mov
mov
sub
lcall
cmp
in
push
subb
mov
pusha
icebp
or
dec
arpl
in
loope
cmp
inc
insl
dec
mov
popf
ljmp
test
test
add
jle
sahf
mov
mov
insl
lret
loope
psubusw
sti
rcll
adc
push
xor
cmp
mov
mov
push
lds
mov
xchg
dec
loopne
fbld
scas
insb
arpl
push
cld
jg
shll
jl
mov
lods
push
pop
pop
add
aam
add
push
scas
add
add
fists
and
lods
sbb
jbe
inc
adc
or
filds
sub
xchg
lahf
jns
fwait
scas
xchg
push
dec
das
gs
adc
lret
fisttpll
arpl
js
fdivr
ficoms
movl
pop
leave
fwait
orb
pushf
adc
fwait
push
pop
add
pop
icebp
ss
int
outsb
test
add
inc
das
mov
rcr
fyl2xp1
and
mov
and
pop
inc
orl
dec
push
adc
xchg
mov
test
fisubrs
gs
pushf
cmp
fdivrl
push
adc
mov
leave
andb
jle
mov
lret
xor
scas
or
sti
andb
in
xlat
in
mov
je
mov
scas
mov
pop
xor
das
stos
mov
jmp
test
adc
movsl
push
rorb
mov
imul
lods
sbb
and
dec
pusha
mov
mov
lods
cltd
ds
ja
sti
out
push
les
mov
imul
mov
mov
lods
cwtl
or
cwtl
xchg
test
test
fisttpll
inc
fcomi
insb
hlt
mov
pop
hlt
in
outsb
jmp
xchg
cmc
push
mov
mov
jmp
pop
xchg
xchg
jo
xor
xor
clc
mov
pushf
sub
movsl
pop
dec
lods
and
xchg
or
cmp
dec
jmp
sbb
mov
pop
sbb
fs
lea
lds
dec
sbbl
les
mov
push
adc
mov
push
shr
cmp
dec
gs
sahf
ret
sarb
jg
pop
jno
in
rcrl
fdivrs
fwait
inc
jle
outsb
xor
sbb
push
in
mov
iret
out
popa
pop
fnstenv
fistpl
jnp
jg
inc
lcall
push
ud0
jae
fisubs
fidivs
cmp
cmp
push
stos
nop
sub
inc
xor
xor
je
hlt
fwait
cmc
xor
je
ret
add
add
jge
pushf
cmpsl
xchg
loop
pop
popf
in
mov
pop
add
jne
ja
loope
mov
jo
outsl
xor
inc
sbb
adc
jg
or
mov
mov
xlat
dec
and
cli
sub
mov
je
stc
repz
sub
popf
jne
dec
test
out
add
cmp
or
outsl
xchg
mov
dec
out
push
xchg
sub
sub
xlat
movsb
and
pusha
jns
pusha
adc
jnp
sub
cmp
outsb
push
cmc
pop
repz
sub
push
nop
and
push
mov
adc
push
mov
lods
lret
pop
dec
pushf
pop
fistps
jg
or
sub
aaa
lahf
cmc
sbb
mov
add
hlt
or
les
push
imul
and
sub
loope
and
outsl
and
mov
xchg
pushf
cld
insl
adc
test
inc
dec
jbe
or
push
mov
sub
fwait
insb
enter
adc
lahf
mov
mov
lahf
sbb
cli
mov
cmp
scas
lea
cld
into
jo
push
sub
ds
inc
push
xchg
jb
cmp
imul
in
pop
fcoml
mov
pusha
and
repz
jo
js
movsl
bound
xchg
mov
mov
fcomps
andl
adc
dec
and
rcr
xor
and
addr16
fisttpll
test
add
pop
out
push
loop
out
cmp
inc
sarb
and
pop
mov
aam
loopne
ss
daa
imul
and
inc
ja
bound
ja
sbb
sub
mov
inc
mov
xchg
rcll
dec
xchg
clc
xor
and
inc
inc
daa
jbe
push
lcall
jne
pop
xlat
jbe
icebp
sbb
call
and
lahf
xchg
mov
cmp
jb
push
je
jl
cmp
adc
ret
insl
adc
or
push
icebp
mov
shl
sub
mov
movsl
pop
lret
scas
mov
scas
mov
jbe
jno
pusha
js
nop
int
cmc
sub
pop
ret
xchg
cld
pop
dec
sub
push
and
ror
xchg
andl
jle
push
test
inc
cli
and
xlat
pop
push
cmp
mov
icebp
sub
jno
adc
dec
sub
dec
mov
aas
popa
scas
cmova
shr
shrl
and
mov
sub
add
sahf
mov
xor
cli
adc
cmp
xchg
xchg
mov
cmp
push
adc
fldl2t
pushf
or
add
mov
and
sbb
enter
xchg
and
scas
icebp
pop
adc
push
movsb
and
hlt
pop
pop
js
sahf
fs
lcall
bound
scas
xor
fistps
push
push
inc
scas
sub
loope
or
sbb
das
ret
inc
loope
adc
adc
mov
or
aaa
cli
inc
leave
push
jle
jns
inc
aad
pop
sub
scas
mov
es
pop
syscall
xor
jl
arpl
popf
insb
repnz
movsb
fsubrs
jmp
xchg
lods
pop
cmp
int3
out
hlt
out
call
xchg
repnz
inc
pop
outsl
testb
leave
mov
cmp
pop
addr16
sub
jle
sti
mov
inc
inc
mov
mov
cmp
aad
jle
loop
mov
xor
aam
jno
sbb
outsb
xor
fxam
addr16
enter
aas
jmp
movsb
add
hlt
shrb
cvtps2pd
lahf
mov
icebp
test
mov
mov
jo
and
ret
je
cli
faddl
xchg
push
jae
mov
dec
jecxz
movsl
mov
jmp
cmp
mov
mov
mulb
lods
pop
ja
inc
jns
xchg
push
aaa
aas
and
insb
xor
lods
repz
pusha
arpl
lcall
stc
out
xchg
sub
inc
adc
notl
cld
inc
je
test
lahf
mov
ljmp
inc
arpl
popf
out
push
sbb
testl
stc
push
mov
push
sub
popf
jnp
subl
cltd
je
pushf
add
jg
pop
neg
fwait
mov
in
lahf
pushf
xchg
jne
and
pop
cmp
movsb
jns
dec
pop
jl
sti
mov
int
inc
add
fs
outsb
push
popf
pushl
lcall
xchg
arpl
jl
je
pop
lds
mov
xor
call
pop
jb
mov
inc
lds
cwtl
pop
insb
inc
cmp
mov
jb
jg
and
test
jbe
and
shl
pop
pushf
ficoml
cwtl
mov
addl
cmp
sbb
ret
into
mov
mov
jae
xor
ficompl
rorl
loopne
inc
mov
loop
fistl
adc
rorl
aam
fisubrl
pop
aas
pop
movsb
xchg
in
jne
sub
mov
movsb
andl
andb
cli
pushl
adc
nop
jns
add
jns
adcl
jne
js
test
aad
lahf
sahf
enter
inc
jno
pusha
sub
add
inc
clc
outsl
scas
arpl
mov
test
mov
es
out
cwtl
mov
push
push
mov
or
jmp
lds
testb
stos
dec
xor
out
adc
addr16
mov
or
pushf
push
pop
mov
das
sub
movsl
fnstcw
mov
and
fisttps
ss
adc
pop
aam
cmp
dec
mov
xlat
pop
fwait
adcl
sbb
xchg
adc
push
and
pop
in
out
ret
mov
negb
sahf
inc
mov
cwtl
mov
sbb
xor
jl
mov
stos
xor
test
sub
xchg
mov
mov
pushf
or
cli
add
pushf
add
test
fwait
push
ss
sbb
cmc
pop
out
mov
pop
adc
nop
lcall
lods
inc
push
scas
lods
repnz
rol
insl
fidivrl
push
xor
mov
adc
out
xchg
mov
repnz
cltd
in
cmc
add
inc
push
dec
stc
int
sbb
addb
add
sub
dec
and
add
mov
xchg
data16
pop
push
scas
loopne
sbbb
mov
loop
xchg
or
loop
rorb
in
lock
cli
push
mov
inc
enter
fidivrl
inc
mov
in
xchg
sub
aam
mov
mov
or
les
out
das
sbb
cmp
adc
mov
pushf
mov
in
xlat
xchg
test
std
ret
orb
test
je
lahf
lahf
dec
push
and
jae
mov
imul
aad
sti
jnp
or
xchg
adc
pop
fwait
lods
inc
sbb
push
push
sub
xchg
dec
pop
xor
mov
int3
lahf
mov
in
int
test
movsl
subl
sbb
loope
xchg
cmp
fwait
hlt
and
mov
gs
mov
aas
sub
inc
aam
pop
aam
shrl
inc
pop
movsl
or
jae
sbb
xor
std
iret
xchg
add
orl
aaa
mov
cmp
push
pop
shll
idivb
sbb
and
imul
jbe
inc
outsb
mov
or
lret
push
jbe
sub
insl
push
sbb
dec
dec
or
mov
mov
test
mov
shl
mov
jl
mov
insl
nop
je
mov
mov
push
rcrl
out
and
daa
jmp
jmp
in
cmp
fs
hlt
jae
xor
mov
ja
jae
push
xchg
and
les
mov
dec
mov
cs
test
and
and
daa
adc
std
mov
sub
mov
inc
out
fldenv
ds
cld
hlt
xchg
pusha
mov
sbb
inc
mov
mov
out
push
lods
jge
rcrl
fs
arpl
cmp
lahf
inc
rcl
xor
mov
fs
and
stc
cmp
cli
sbbl
jnp
imul
push
adc
imul
mov
rcr
outsl
lret
mov
sahf
in
sub
push
jg
mov
push
addr16
enter
clc
mov
jmp
push
ret
dec
lret
fstl
sub
add
in
sarl
pop
adc
lret
pop
stc
mov
mov
call
jp
lcall
imul
adcl
xchg
sbb
jnp
sub
jbe
push
inc
sbb
clc
mov
out
mov
fistps
adc
pop
sub
outsb
inc
mov
mov
dec
mov
push
int
dec
and
inc
imul
js
sub
or
inc
in
add
inc
adc
stc
mov
mov
sarb
xchg
mov
add
cmpb
fcomps
movsb
out
xchg
es
mov
lods
add
aad
mov
fstl
cli
inc
fsubrl
outsl
nop
in
xchg
movsb
dec
jle
pop
push
jp,pn
pop
sbb
cltd
xor
and
pop
or
adc
repz
out
pop
lods
dec
scas
lret
das
pop
push
xchg
aas
inc
xchg
cmp
xlat
fbld
sub
push
cmp
dec
and
repnz
xchg
icebp
xchg
shrl
lret
and
aas
jne
into
sahf
out
sbb
cs
idivl
lods
cmpsb
ret
jmp
pop
addb
inc
and
sbb
ja
or
mov
lret
inc
idivb
les
pop
cmp
and
stos
push
scas
lea
ds
push
jmp
xor
jne
mov
nop
inc
das
cmp
add
sub
std
cmp
nop
lods
sub
arpl
loop
fadds
int
inc
outsl
jg
push
stos
push
hlt
and
push
dec
test
pop
dec
xor
xchg
jae
popa
enter
jo
jne
sub
inc
aas
fmulp
cmpsl
pop
bound
xchg
out
or
adc
xchg
inc
mov
adc
xor
cmc
sbb
jl
add
push
cs
mov
inc
add
lds
div
mov
pop
xchg
push
cs
xor
stos
adc
push
or
and
sub
xor
xor
insb
sti
cltd
jp
cld
lock
orl
push
out
shr
cli
jne
ja
cmp
jmp
test
sub
xchg
cmp
sub
sub
pop
int
xor
cs
jo
cmp
insb
and
inc
mov
sub
cmp
mov
scas
mov
and
testl
test
mov
cmpsb
lcall
mov
adc
jno
xchg
mov
nop
or
addr16
lcall
sub
out
daa
mov
push
aam
icebp
mov
sbb
inc
mov
jo
fadds
push
push
mov
cli
out
cmp
out
lock
xor
outsb
insb
addr16
jge
mov
fdivs
sbb
pop
addl
xchg
mov
mov
sbb
pop
mov
and
jb
jns
pop
jmp
pop
mov
jge
mov
loopne
inc
inc
pusha
push
iret
mov
sbb
rorb
adc
inc
mov
mov
cmp
ror
testl
je
push
jnp
enter
dec
out
sub
rcrl
xor
push
sbb
data16
fildll
mov
mov
ds
repz
fsubrl
mov
xor
adc
cmp
pop
xchg
and
fmull
mov
push
jnp
cmp
mov
loop
jp
jno
sahf
rolb
cld
fimull
dec
sbb
loope
fnstsw
rclb
int3
xchg
popa
xor
dec
pusha
aas
clc
test
mov
pop
repnz
addl
in
in
mov
mov
ja
mov
xor
sti
enter
adcl
clc
pop
aaa
gs
or
sub
dec
mov
out
mov
add
mov
mov
adc
cmp
sbb
mov
lds
xchg
shl
in
jbe
arpl
push
sub
iret
adc
xor
jecxz
shrb
enter
jmp
mov
enter
mov
pushf
aaa
dec
mov
push
sub
push
or
dec
mov
rorb
mov
add
jg
adc
call
mov
jb
xor
pop
xchg
aaa
roll
sub
dec
push
xchg
push
fists
loopne
scas
jecxz
cmp
ud2
xchg
lods
add
cmp
int3
movsb
cmp
inc
ficoms
xor
cmpsl
cmp
fisttps
leave
or
std
cli
and
inc
insl
test
pop
inc
dec
pushf
cmp
xchg
adc
mov
popf
cwtl
mov
lock
pushf
daa
out
test
fildl
adc
xchg
fisubrs
cmpsb
lretw
das
subl
lret
push
movsb
movsb
cmpl
or
jge
add
repz
js
sub
and
jbe
insb
xchg
test
dec
cld
aad
add
adc
push
ss
jno
mov
xchg
std
mov
pop
dec
push
fidivs
fscale
insb
outsl
shrb
inc
xchg
fs
cmp
ja
lods
fisubrs
movsb
push
std
push
inc
cli
dec
rcl
enter
aaa
addr16
fisubl
mov
leave
fildll
fs
dec
data16
cmp
jle
sub
das
pop
jmp
sbb
mov
stc
dec
adc
int
xor
mov
fprem1
adc
int3
das
movsl
fisubs
mov
adc
xor
or
dec
dec
test
mov
and
and
jns
adc
stos
popf
xor
pop
xchg
popa
ja
int
and
add
mov
add
pop
jl
inc
int
xor
dec
cmp
xor
popa
xor
push
ljmp
fcomps
sbbl
ss
aad
and
cld
pop
add
sub
cmpb
addl
lret
push
cmp
xor
push
sbb
push
orl
sbb
std
aas
test
repz
stos
loop
jl
int
push
pop
leave
stos
jmp
cmc
adc
imul
push
bnd
loop
in
push
mov
stos
mov
mov
mov
jns
jp
jp
add
mov
sbb
lods
imul
mov
inc
cwtl
cmp
inc
clc
jecxz
mov
sbb
or
mov
clc
inc
lods
icebp
cld
fsubs
cmpsb
shrb
out
das
mov
outsb
loopne
out
loop
jg
push
cmp
ja
or
imulb
std
je
mov
push
jne
fldenv
push
xor
xor
test
xchg
adc
sbb
mov
sbb
push
ror
daa
cmp
mov
scas
pop
mov
jp
cmp
aam
addb
test
adc
mov
leave
xchg
scas
imul
push
xchg
repnz
jno
stos
push
dec
shl
sbb
call
out
or
xor
ja
mov
cwtl
sub
aaa
cmp
pop
lcall
cmpsb
and
jae
inc
nop
mov
hlt
xchg
popa
push
cltd
loope
enter
cwtl
sub
mov
xchg
and
testl
cwtl
pop
push
and
fmuls
out
ss
fmuls
add
pop
xor
jge
jno
mov
push
lcall
daa
rcrl
aas
cmpsb
cli
xchg
push
stc
lret
push
mov
fs
movsl
in
nop
in
jnp
xor
sti
shlb
xor
xor
push
idivb
stc
dec
mov
pop
fwait
and
dec
jb
or
mov
pop
dec
mov
dec
sbb
push
lahf
cli
aad
test
out
stc
lahf
jmp
shr
mov
jmp
xchg
sub
jecxz
fbstp
xchg
arpl
stos
fistps
test
cmpb
dec
xor
cltd
xchg
push
mov
movsb
insl
std
in
push
cwtl
in
inc
icebp
push
daa
int
gs
or
sub
or
jno
icebp
in
and
jp
xor
mov
ret
pop
pop
lea
mov
in
pop
lcall
mov
pop
adc
nopl
in
aaa
jns
jae
pop
or
icebp
jecxz
pop
scas
jmp
push
lea
inc
das
dec
ja
jecxz
pop
or
or
inc
dec
shlb
ds
mov
pop
test
stos
mov
jg
mov
rol
rorl
int3
sbb
testb
loopne
jle
adc
lea
dec
stos
pushf
pop
add
out
call
cmpsb
mov
cmp
mov
inc
bound
outsl
aad
movsl
mov
movsl
mov
icebp
popf
or
push
jo
dec
push
xchg
pop
inc
jl
jl
xchg
inc
ja
inc
inc
add
add
add
in
jb
in
aam
imul
loop
iret
movsl
xchg
cli
in
sub
jecxz
sbb
cmp
jge
data16
cmp
mov
ret
iret
xorl
inc
loope
fisubrl
sti
movsb
sub
cs
mov
enter
sub
addr16
lea
movsl
xchg
das
fisttpl
adc
pop
add
add
adc
and
test
aad
cmpsl
mov
jecxz
push
hlt
jne
shl
and
cmp
out
dec
xchg
mov
cmp
pusha
inc
lcall
icebp
xorb
sbbb
pop
dec
push
adc
sbb
negl
xchg
imul
mov
pop
push
and
jnp
fidivs
push
sbb
push
ja
clc
ljmp
cs
call
xchg
testl
ret
inc
jmp
mov
inc
cmp
adc
out
icebp
call
jmp
sbbl
pusha
mov
jnp
iret
aam
hlt
inc
fucomp
adc
and
popa
inc
pop
ret
dec
leave
pop
cmp
fdivrs
mov
dec
fisubl
imull
mov
or
arpl
shrl
lcall
mov
dec
out
ret
xchg
sbb
repnz
leave
movsb
mov
mov
cld
lea
int3
xchg
pop
and
sbb
sarb
iret
lds
and
test
xor
jns
mov
cmpsb
sbb
cmpsb
xor
mov
es
pop
mov
nop
loope
orb
bound
and
xchg
add
aam
leave
cmp
push
sbb
sbb
int
pop
adc
xchg
push
fimull
mov
sbb
inc
mov
aam
faddp
inc
shlb
aad
movl
jmp
test
nopl
jo
mov
cmc
ljmp
cmp
mov
lret
add
dec
popa
movsl
scas
bound
mov
xchg
add
loopw
jmp
int3
stos
popa
ja
mov
ret
inc
xchg
xor
mov
sti
loopne
cmp
sbb
orb
mov
add
imul
mov
imul
arpl
mov
dec
repnz
adc
iret
adcb
idivb
mov
jae
je
cltd
jmp
dec
or
lret
out
dec
adc
fwait
mov
mov
mov
popl
repnz
dec
dec
mov
lock
in
mov
or
shr
movsl
imul
cmp
stos
pop
andb
mov
fimuls
push
mov
pop
inc
xchg
outsb
mov
mov
xor
sbb
add
fnstenv
outsl
push
add
jp
arpl
orb
push
scas
jns
jbe
movsb
xchg
xor
shll
mov
ret
mov
hlt
outsb
pushf
add
or
sarb
out
int3
pop
repz
shll
fcmovnu
push
aas
test
decl
subb
mov
and
arpl
loopne
lcall
pop
pop
sahf
push
test
fdivs
stos
cltd
jne
and
cmp
push
sub
xor
es
sbb
mov
mov
jno
sahf
push
mov
lods
mov
cmp
add
mov
and
daa
push
inc
test
pop
popa
inc
mov
mov
testb
in
push
dec
std
jb
rorb
pop
mov
adcb
mov
xchg
push
nop
cmpsl
jge
stos
and
mov
push
xchg
adc
outsl
movsb
mov
xor
lret
add
movsb
dec
cmpsl
cli
or
cmp
std
repnz
cmpsl
cmp
shl
jmp
pop
xchg
in
cmp
adc
arpl
popf
inc
dec
mov
jmp
sbbl
loopne
push
sbb
rolb
lods
dec
or
gs
loop
lret
repnz
push
sahf
cmp
repz
xchg
sub
outsb
adc
lcall
fnsave
shrb
test
hlt
xor
loop
push
adc
test
les
es
fildl
mov
sbb
mov
fs
loope
push
cmp
dec
pop
out
xlat
stos
pop
loop
cmp
repz
loopne
aaa
adc
push
dec
adc
push
in
inc
fldcw
pop
xchg
test
loopne
fnsave
aam
outsb
loope
sbb
adc
fldcw
cmp
jle
cmpsb
and
and
or
and
stos
jg
movsl
sub
sub
test
ljmp
test
cli
aas
idivl
in
push
aaa
imul
jmp
jmp
roll
xchg
pop
mov
cli
popa
adc
ja
pop
cvtdq2ps
or
and
mov
in
push
sbb
in
jle
scas
clc
sarb
cmp
pushl
adc
sub
in
or
repnz
imul
pop
lahf
gs
bnd
push
xlat
clc
arpl
cmp
sti
movsl
fistps
adc
ds
aad
cmpsl
lcall
push
arpl
jnp
cli
push
pop
mov
cmp
or
add
aad
aad
mov
mov
imul
ljmp
inc
lods
fdivrl
scas
sbb
scas
inc
ljmp
jnp
and
pusha
lock
sub
arpl
test
pusha
out
into
jge
cltd
push
loop
mov
je
xchg
and
out
imul
movsb
mov
decl
int
aam
negb
pop
pop
xlat
sbb
mov
test
into
sbb
in
add
adc
xchg
push
mov
icebp
mov
stos
and
imul
or
push
frstor
in
mov
pop
sub
arpl
cmp
into
lods
mov
je
enter
xor
adc
jg
arpl
mov
call
outsl
sub
pop
mov
imul
mov
jl
loopne
jl
repnz
mov
test
inc
sbb
rolb
jbe
sub
outsl
out
adc
pop
icebp
and
sbb
lret
and
sub
fdivl
xor
xchg
cmpsb
call
adc
pop
push
rclb
rcrb
test
repnz
cltd
sbb
xor
pushf
sub
or
es
adc
scas
lock
in
rcrb
add
xor
rol
cvttps2pi
lods
xchg
insl
pop
inc
lret
out
cmp
sub
je
add
cmp
cld
jp
pop
insb
outsl
mov
movsb
mov
mov
pop
sub
lock
cmp
mov
jns
out
and
test
xor
rolb
mov
push
ret
hlt
gs
mov
int3
inc
sbb
mov
xor
xor
lods
aas
sbb
mov
and
xor
mov
cmp
mov
lahf
repz
shrl
and
xchg
inc
out
add
shll
leave
mov
jle
mov
xchg
mov
in
dec
stos
jmp
mov
and
mov
mov
cmp
or
sbb
adc
adc
imulb
add
das
shrl
sub
js
fsub
xor
push
outsb
hlt
aam
stos
lahf
stos
sub
dec
movsb
add
fs
icebp
test
xchg
insb
mov
aam
enter
das
xor
js
sub
jo
outsl
les
ja
lret
dec
mov
push
aad
popf
dec
cmpsb
out
les
std
jnp
mov
pop
xor
pop
sti
lret
jo
push
outsb
xchg
adc
ret
outsb
mov
pushf
mov
sbb
inc
lahf
neg
fs
lahf
bound
dec
xchg
popa
mov
sub
mov
mov
repnz
dec
cli
sbb
jmp
outsl
jecxz
or
lods
adc
sub
push
push
pop
lcall
incb
xchg
pop
and
ja
xor
rclb
int
xor
mov
inc
mov
cmpsb
cltd
add
out
pop
into
aad
std
xor
rcrl
sarl
movsl
adc
lods
xor
rcrb
ficoms
stos
sub
in
xor
sbb
push
out
testb
pop
pop
dec
js
jns
sbb
aad
into
or
push
loop
lock
pop
pop
inc
lret
insl
push
mov
ret
rcl
xor
mov
popa
mov
fucomi
dec
jae
mov
leave
cmc
into
push
gs
push
sbb
and
lods
xor
subb
cmp
push
mov
jmp
fnstsw
js
psllw
cltd
xor
xor
cmpsb
add
cs
mov
push
cld
xchg
dec
shll
xor
pop
xchg
aad
mov
cmp
add
clc
data16
add
das
pop
je
repz
mov
mov
clc
push
mov
loopne
xchg
xchg
loopne
cs
shrb
cmc
pusha
mov
push
pop
pop
adc
mov
dec
jge
sbb
push
sub
inc
xchg
bound
stos
fwait
pushf
jne
pusha
push
xchg
test
jp
xchg
mov
pop
push
xor
imul
outsb
dec
sbb
incl
stc
repz
pop
push
xor
sbb
leave
shrb
inc
cmp
inc
shrl
pusha
mov
movsb
test
sbbl
daa
leave
int
ds
mov
fdivl
dec
shl
cmp
sbb
pop
ljmp
mov
pop
stos
sub
push
mov
push
cmp
push
cmc
xchg
or
fnstenv
push
xchg
outsl
mov
mov
jmp
mov
mov
int3
fstl
shlb
cmp
test
repz
push
sbbl
cmc
jmp
in
cmp
in
xor
out
out
fdivrl
imul
js
mov
loop
int
jns
and
mulb
into
xor
aad
insl
mov
adc
push
xor
lods
popa
or
ja
cmp
or
out
jne
in
xchg
repnz
repz
inc
mov
lock
icebp
dec
cmc
mov
mov
push
stc
leave
pusha
jl
cmp
mov
jo
jmp
mov
fisubrl
and
jae
pop
std
cmpsb
fstps
add
dec
push
xor
jmp
decl
and
mov
dec
adc
cmpsl
or
insb
jo
movsb
jge
int3
push
or
int3
push
inc
push
arpl
mov
xchg
test
push
fdiv
mov
cmp
pop
out
mov
shr
mov
jae
repz
je
lahf
xor
pop
xchg
push
test
leave
dec
xor
repz
push
outsl
loop
xchg
mov
insb
aaa
rclb
inc
and
lds
repz
dec
mov
mov
scas
test
es
out
ljmp
mov
jo
out
xor
inc
lods
nop
shll
cli
adc
jo
mov
loopne
cltd
sbb
fs
out
pop
lods
test
and
cmp
mov
sub
push
mov
mov
inc
fidivrl
inc
dec
cwtl
xchg
cmpsl
xchg
call
and
js
inc
popf
repz
psubusb
ds
sahf
xor
outsl
jle
push
loope
insl
mov
pop
jge
stos
sub
cmp
mov
fcomip
ja
scas
imul
or
push
out
and
mov
inc
cld
in
pushf
xor
out
fldcw
idiv
gs
stos
test
shlb
mov
jns
or
cmpsl
fadds
roll
ds
xchg
add
sar
or
xchg
fdivl
and
jb
or
lods
jmp
stos
sub
jl
mov
adc
push
insb
rolb
out
mov
cmp
push
inc
loop
push
sbb
mov
lahf
and
movsb
insb
sbb
aas
in
fs
insl
cld
mov
mov
jl
sar
mov
jg
jnp
xor
out
or
aam
imul
imul
ret
ljmp
adc
aam
mov
popa
negl
jg
orb
clc
dec
pop
sbb
inc
fucom
loop
inc
fdivrs
push
dec
push
loop
mov
dec
fbld
int3
push
adc
inc
fistl
out
inc
rcl
loopne
shl
push
jecxz
je
push
mov
fwait
int
jne
cli
test
jmp
jns
andl
or
lahf
pop
daa
movsb
bound
test
idivb
push
push
jmp
cmc
adc
jb
in
in
test
pop
fcomi
ljmp
cmpsl
jbe
sbb
aaa
in
sarl
repz
sti
sub
int3
out
mov
sbb
out
hlt
jns
hlt
test
orb
loope
fcomip
daa
mov
jge
cli
sbb
xor
cmp
xor
mov
loope
shl
shl
or
push
jae
xchg
dec
dec
int
cli
rcll
insl
xor
inc
ja
ret
cld
std
inc
popa
nop
xor
sti
adc
or
cmpb
insb
rol
insl
dec
mov
dec
dec
test
push
pop
xor
xor
xlat
outsb
shll
ja
addr16
iret
mov
ss
dec
inc
mov
test
movsl
insb
int3
loopne
dec
stc
stc
sub
jo
jp
icebp
pop
jmp
fs
popl
ljmp
dec
adc
stc
in
sbb
cld
and
in
jo
jge
xchg
dec
ret
dec
cmp
jnp
xchg
ret
repnz
hlt
shlb
xchg
out
jns
pop
inc
adc
push
addl
scas
push
hlt
outsb
pop
dec
push
cltd
shrl
mov
mov
xlat
lods
es
adc
mov
mov
clc
lea
loopne
dec
inc
gs
xchg
lcall
jns
inc
mov
scas
pushf
dec
inc
mov
push
ljmp
jns
imul
lcall
daa
fsubr
xor
adc
movsl
fistpl
fstpt
and
jb
cmp
movsl
jmp
xchg
mov
enter
adc
mov
fsubrs
push
cmp
imul
cmp
call
jno
imul
loope
xchg
into
jbe
icebp
mov
out
or
cmp
push
sbb
dec
mov
outsb
arpl
repz
inc
and
mov
stos
adc
push
pop
pop
mov
enter
mov
imul
push
insb
in
jae
cmp
mov
adc
push
stc
mov
and
lods
adc
lret
xor
hlt
mov
mov
inc
cmp
jl
mov
push
in
sahf
repz
mov
mov
cmp
pop
rorl
xor
fwait
ds
mov
repnz
mov
add
rcll
adc
push
or
fcoml
sbb
mov
daa
push
lods
xor
pop
inc
mov
cld
push
jb
mov
pop
sub
pop
mov
jg
pop
add
mov
jns
push
pop
lods
dec
push
jg
arpl
call
fwait
mov
jne
fwait
int
lcall
mov
pop
adc
lods
je
mov
pop
push
rolb
je
test
pop
mov
cld
inc
lret
mov
insl
dec
sub
iret
mov
inc
rcrb
mov
mov
cmp
mov
stc
jp
sub
pop
scas
xchg
sub
daa
dec
mov
sub
and
popf
out
mov
rolb
adc
adc
mov
loope
xchg
or
mov
add
sbb
pusha
mov
and
sti
mov
xor
jecxz
mov
mov
and
hlt
xor
mov
or
call
pushf
popl
xor
or
xchg
cmp
sahf
outsb
insl
xor
fisttps
fwait
ljmp
dec
dec
jecxz
std
shlb
data16
add
jecxz
add
inc
adc
lods
scas
jo
and
dec
cmp
stc
push
icebp
outsl
out
aad
aam
scas
or
out
in
pop
jl
int3
mov
mov
fsub
outsb
repz
add
pop
lds
and
mov
out
push
jg
out
lret
lea
pop
jb
xor
or
fnsave
adc
into
and
jno
adcl
sub
rsm
mov
mov
xor
jmp
scas
sbb
adc
sbb
mov
aad
fnstsw
cld
adc
js
jecxz
test
iret
mov
rcr
jmp
into
adc
out
mov
jbe
mov
ds
adc
jae
jmp
mov
ja
iret
test
pop
loopw
mov
mov
xchg
lock
dec
andb
xchg
lods
cmp
negl
push
dec
cld
xor
lret
scas
mov
pop
jle
adc
push
cmp
fptan
inc
int3
mov
mov
out
add
xchg
push
insl
lods
mov
adc
pop
dec
push
mov
mov
inc
pop
jae
std
shrb
lahf
xchg
mov
std
cwtl
rorl
pusha
and
loopne
inc
js
pop
xor
into
xchg
cld
bound
jl
xor
int
int
js
mov
lock
and
add
neg
pop
daa
push
mov
cmpb
jno
sub
insl
or
add
mov
ret
xchg
add
adc
xor
jl
adc
and
mov
xlat
jmp
pop
les
icebp
clc
add
mov
movsb
fsubrs
mov
mov
cltd
out
mov
add
out
int
mov
mov
adc
out
push
lds
dec
adc
adc
aas
in
pop
push
movsl
popa
inc
xchg
das
jo
add
fs
and
inc
std
inc
xorl
std
push
test
pop
dec
pop
mov
push
push
inc
fcmovb
mov
sbb
test
or
andl
loope
push
andl
les
fisttps
cmp
dec
inc
imul
int
and
push
fdivrs
dec
sub
pop
ret
sub
mov
xor
sbb
pop
jmp
add
add
xor
dec
dec
lock
pop
and
and
cmp
mov
mov
xor
xchg
push
push
mov
fs
popf
adc
cmpsb
in
sub
sub
jno
dec
icebp
lahf
aas
mov
cmp
out
scas
fs
loopne
push
fdivr
sub
and
lahf
pop
jecxz
scas
in
insl
mov
jb
mov
jns
sbb
dec
in
shr
mov
mov
jmp
cmpsl
sbb
decl
ljmp
jnp
fs
pop
push
mov
or
movsb
rol
jmp
xchg
jns
enter
add
leave
dec
jbe
xor
xchg
fnstcw
aad
cmp
scas
clc
pop
popa
subl
inc
jb
mov
xlat
outsl
cmpsb
in
stos
into
out
imul
dec
mov
cli
sub
fisubrs
push
xor
lods
dec
jle
fisubl
jle
fbld
sti
or
adc
or
inc
sahf
sbb
or
sub
mov
add
lcall
movsb
mov
sbb
ret
cmp
inc
lea
out
insb
jecxz
mov
mov
subl
loope
jp
dec
inc
aas
mov
sbb
je
xchg
into
pop
mov
mov
adc
pop
mov
jg
in
lods
xchg
dec
loop
adc
push
cli
xchg
mov
leave
xor
movsl
mov
jmp
mov
mov
cli
pusha
xor
push
aas
xchg
aad
cmp
lret
push
test
push
daa
arpl
mov
mov
mov
arpl
push
es
sub
lret
outsb
mov
mov
pop
xchg
aad
into
inc
in
cmpsb
mov
repnz
leave
add
mov
dec
sbb
pop
mov
lahf
jne
ss
cld
jge
inc
es
mov
jg
out
cmp
lock
int
addr16
and
dec
cmp
dec
mov
sbb
jge
call
lahf
aaa
push
in
pop
sub
jns
aaa
scas
mov
in
inc
xchg
mov
rclb
push
call
js
mov
lea
and
xor
pop
leave
push
xor
aas
stc
jmp
adc
nop
test
fwait
lods
or
dec
lods
sub
pop
dec
mov
mov
xchg
mov
mul
in
mov
mov
push
enter
sub
out
or
push
xor
pop
shl
inc
cmp
mov
adc
inc
mov
icebp
push
mov
xor
in
cmp
pop
mov
enter
les
jo
adc
add
movsb
mov
das
cmp
insb
mov
mov
jmp
mov
mov
mov
mull
cmp
or
sbb
enter
fs
cs
pop
popf
sub
cmpsl
test
and
fcompl
lods
dec
rclb
ds
and
out
jecxz
pxor
int3
mov
outsl
loop
in
push
shl
and
ljmp
inc
pop
or
dec
fcompl
cmpsb
push
lock
sbb
rcrl
out
popa
pop
fisubrs
sbb
sub
out
ror
sub
jle
arpl
xchg
insb
mov
loope
mov
test
aaa
clc
mov
filds
sub
pop
push
mov
xchg
add
pop
test
xor
leave
test
dec
js
mov
mov
ja
lods
negb
fbstp
roll
jg
mov
sub
add
sub
sub
das
or
test
inc
das
sbb
cmc
jge
mov
mov
pop
cmp
repnz
xchg
xchg
pop
loopne,pt
and
and
or
pushf
insb
push
inc
loopne
xor
sbb
imul
mov
ret
fst
xor
inc
sub
arpl
pushf
mov
push
mov
loop
sbb
loope
shll
outsb
mov
xchg
rep
adc
mov
dec
mov
test
pop
jnp
in
andb
jg
push
xchg
cmc
add
pop
clc
shrl
jge
jl
pop
stos
lock
mov
add
adc
in
inc
cli
hlt
lcall
sbb
dec
xchg
test
jo
insb
stos
dec
nop
inc
or
jle
pop
adc
xchg
pop
adc
push
cmp
testb
or
mov
in
mov
mov
jbe
and
jge
mov
pop
int
pop
loop
ror
cwtl
mov
repnz
scas
cmp
adc
pop
dec
inc
enter
ljmp
fidivrl
xor
stos
xchg
cmp
sbb
in
fidivrs
cltd
leave
jecxz
sbbb
or
jno
lock
xor
xchg
mov
lock
in
test
push
scas
xlat
shll
popl
jmp
loopne
jne
mov
cmpsl
mov
adc
rcrb
push
and
std
xchg
xor
pusha
cmc
xlat
mov
adc
add
ljmp
leave
in
aad
leave
inc
and
pop
mov
cmp
jno
jae
shlb
es
add
pop
mov
jo
add
leave
inc
xchg
fisubrs
xchg
xor
xlat
cwtl
cmp
loop
jg
sbb
leave
xor
mov
xchg
xchg
xchg
mov
fsubrs
xchg
ss
icebp
mov
repnz
jg
jge
repnz
jo
pop
in
mov
sub
xchg
in
sub
push
sbbl
daa
daa
mov
pushf
insl
sbb
cli
add
lock
sub
ja
pop
sbb
ret
pop
jbe
jg
add
pop
jmp
out
mov
cmp
in
std
add
sbb
jbe
push
xor
shll
inc
mov
xor
movl
inc
and
pop
sub
popf
in
aad
adc
sub
repz
cltd
ret
add
inc
inc
or
mov
mov
mov
cmpsl
cltd
in
mov
aas
xchg
or
dec
cmpsb
mov
cmpsl
sbb
aaa
sbb
sub
sub
leave
stos
hlt
push
mov
add
inc
lret
fstl
sbb
ss
and
mov
aam
xchg
daa
mov
ds
sub
xor
jbe
jp
idivb
jg
mov
out
mov
insl
pop
je
add
orl
cmp
orb
jnp
js
ret
inc
adc
or
xor
loop
scas
pop
shlb
orb
mov
repz
and
ja
and
cmp
cmp
std
pop
lock
mov
int
sbb
cmc
mov
negb
hlt
pop
mov
lret
pop
lahf
pop
mov
dec
bound
imul
add
mov
push
mov
add
test
subl
push
out
rcrb
push
pop
and
mov
dec
leave
cwtl
adc
mov
xlat
push
in
pop
xor
jp
adc
ds
cmc
cs
and
arpl
fstps
xlat
popa
or
adc
ret
bnd
jno
mov
cmpsl
shlb
loop
xchg
popa
jb
inc
ss
sbbl
push
in
fidivs
mov
stc
xor
nop
leave
daa
subl
sbb
je
js
imul
enter
inc
addr16
jmp
imul
fidivrl
mov
bound
in
mov
xlat
add
in
jns
pop
inc
notl
push
xchg
loop
movb
daa
out
xchg
add
cmp
out
mov
inc
imul
lock
gs
sub
mov
sub
mov
push
lods
mov
iret
imul
add
test
sbbl
pop
and
mov
nop
mov
inc
insb
shlb
or
shll
mov
and
push
es
mov
out
push
add
jns
or
mov
shlb
pop
jae
cmpsb
inc
fists
sbb
sbb
xchg
mov
adc
sahf
pop
bound
mov
push
add
movsl
cmp
fnsave
test
test
mov
sbb
add
in
dec
and
loope
adc
aad
insl
cmp
daa
jbe
and
lcall
in
ret
pop
jns
push
pop
mov
insb
or
in
push
test
dec
dec
inc
int
push
jns
fmul
nop
aas
add
in
lds
or
dec
adc
lahf
je
stos
inc
cmp
out
inc
push
insl
xchg
pop
testb
mov
call
fsubp
aas
jp
xor
mov
sbb
in
fildll
mov
shlb
adc
xchg
outsb
push
out
loop
push
jb
xor
cltd
leave
xor
mov
and
lret
sub
and
stos
and
xchg
rol
enter
sub
shr
or
lcall
or
cmpsl
cmp
popa
in
add
stc
mov
js
mov
mov
fsubl
mov
stc
xchg
sub
les
push
push
cmp
repnz
inc
mov
rcrb
mov
sahf
cltd
adcb
inc
pop
movsl
mov
rcrb
mov
cmc
xor
lret
jbe
outsb
pop
aad
mov
and
jnp
scas
inc
jno
out
pop
out
cmp
in
into
bound
inc
jp
xor
inc
cli
mov
inc
aaa
dec
call
mov
mov
mov
mov
mov
or
aam
sbb
mov
push
lods
popa
push
pop
sbb
call
push
and
adc
xchg
jo
into
dec
nop
jnp
push
cmpb
jbe
cltd
mov
les
cmpsl
lock
adc
out
pop
mov
fwait
jae
and
popa
pop
push
hlt
pop
or
les
fs
inc
mov
aam
lods
xor
jle
mov
inc
push
sarl
cwtl
fwait
iret
shlb
mov
int
inc
mov
add
addr16
jns
lahf
push
adc
out
and
aad
mov
xor
rcrb
cmp
push
imull
mov
push
das
sub
and
sbb
adc
mov
insb
cmpsb
cmp
jge
cld
add
pusha
sub
sbb
xor
inc
in
dec
xor
sub
out
push
xchg
push
jne
xchg
jle
iret
sub
out
call
sub
xchg
loop
leave
xchg
in
cmp
aaa
popl
and
jno
aad
test
sub
pop
dec
jmp
aam
imul
pop
push
imul
test
xchg
xor
sarb
fldcw
mov
ljmp
xchg
ret
dec
mov
popf
fistl
pushf
in
xchg
faddp
pop
hlt
jns
cmp
fwait
sub
sub
xchg
pop
jecxz
xor
aam
cmp
in
mov
push
pop
sbb
ljmp
cwtl
pop
xchg
inc
cmp
and
xchg
dec
fnstcw
fidivrs
mov
pushf
stc
or
aad
hlt
scas
and
sarl
or
sub
loope
xchg
stos
xchg
inc
pop
cmc
dec
cmp
push
mov
xorl
or
adc
aad
adc
inc
jmp
and
cmp
outsb
push
dec
sub
js
cltd
jb
dec
sarb
bound
icebp
js
mov
xor
cli
cmp
test
cmp
mov
jno
or
mov
in
add
les
std
xchg
adc
fdivs
dec
outsl
lock
adc
cmp
and
push
jno
cmpsl
sub
and
call
out
mov
adc
or
mov
cmpsb
rcll
iret
mov
mov
out
in
outsb
cmp
movsl
sbb
lods
inc
xchg
pop
cmp
xor
jo
add
iret
out
pop
lea
mov
imul
adc
adc
loope
std
out
or
and
mov
lea
lret
iret
in
sub
mov
and
or
sbb
mov
mov
lcall
jmp
mov
aad
jle
pop
stos
jp
pop
xchg
daa
sub
scas
push
fsub
mov
rol
scas
dec
fwait
add
fcoml
sub
or
mov
lahf
movsl
aas
or
and
movsb
cmp
fisubs
int3
out
and
sub
pop
inc
dec
in
sarb
dec
xchg
fwait
sub
push
pop
mov
fsubrs
loop
push
pop
dec
inc
lcall
lea
out
pop
mov
sub
mov
mov
mov
jge
jbe
push
lret
push
lods
in
dec
fnstenv
pop
sub
cmp
lds
lods
push
jnp
adc
into
loop
cltd
fcoms
aaa
jmp
pop
pop
mov
repnz
test
inc
xchg
iret
std
pop
mov
mov
addl
mov
mov
and
cli
mov
mov
and
repnz
add
ret
fsts
lret
je
jo
xor
push
rorb
ret
cltd
repnz
bound
jne
sbb
xchg
cmp
mov
add
decb
mov
push
and
mov
mov
xchg
adc
imul
mov
adc
jle
dec
popa
pop
adc
bound
mov
inc
jp
jl
jns
stos
lret
mov
mov
jle
in
stos
push
mov
adc
js
sarl
jb
mov
leave
mov
add
and
gs
or
sbb
xor
xor
jg
or
xor
mov
sar
add
repz
jmp
mov
mov
imul
pop
mov
xchg
mov
in
mov
jne
rol
jmp
mov
cmp
mov
cli
push
mov
pusha
or
inc
push
xchg
pop
sub
sub
addr16
jne
pop
pop
mov
outsl
lods
stos
hlt
jne
mov
sbb
dec
jb
mov
cli
gs
lahf
inc
push
dec
das
mov
outsl
ljmp
jno
in
aam
lret
mov
cmp
cli
loop
and
hlt
sbb
negb
add
inc
push
movsb
nop
aaa
lods
test
push
sbb
adc
inc
cli
pop
jbe
and
pop
push
or
adc
pop
inc
out
and
jns
mov
adc
cli
add
insb
rcrb
aaa
cmpb
cld
adc
push
cmp
cmp
and
lcall
cmp
and
fs
or
loop
jge
stos
inc
cmp
dec
ja
icebp
out
fs
jb
xchg
mov
in
sarl
and
jmp
inc
outsb
dec
mov
cli
lcall
shlb
ficoml
and
adc
push
adc
int3
dec
jbe
jb
repnz
or
cmp
cmp
sbb
sbb
aad
negl
je
cwtl
loope
inc
inc
xchg
and
xchg
xchg
out
adc
test
sarl
lret
or
lods
mov
lods
hlt
fsubrs
out
mov
inc
mov
iret
in
inc
sub
arpl
pop
pop
mov
lret
rcrl
loop
push
pop
es
mov
enter
mov
sbb
jmp
popf
dec
adc
mov
pop
cmp
js
mov
push
push
mov
and
pop
pop
jnp
xchg
daa
shr
fdiv
and
js
pop
inc
test
dec
divb
aad
mov
fsub
loopne
jns
xchg
stc
add
jb
mov
repz
cmpsl
aas
pop
sahf
sub
cltd
inc
repz
adc
repz
enter
sub
cmp
fsubl
repz
filds
mov
mov
pop
cmpsl
aas
jg
add
pop
and
mov
lret
repz
lds
insb
lods
in
loopne
bound
bound
lret
pop
lahf
sub
mov
lret
bound
sbb
rolb
int3
sbb
pop
jae
and
dec
cmpsb
aas
nop
jno
xchg
and
sbb
xchg
sbb
jns
jg
out
xor
sbb
clc
jp
mov
dec
jae
movsl
dec
scas
mov
pop
sub
aam
fildll
icebp
xor
mov
out
cmp
inc
je
aaa
shlb
pop
das
mov
pop
ret
mov
jl
std
push
arpl
push
pop
jmp
ficompl
push
faddl
push
dec
cmp
xlat
sub
or
mov
jo
pop
jno
pop
inc
fs
icebp
cmp
shlb
das
je
lcall
sub
sub
jae
out
lods
movb
hlt
sahf
scas
mov
xor
add
and
push
xor
jno
test
into
fisubrs
xor
sub
push
mov
sbb
dec
and
mov
mov
and
add
pop
hlt
adc
or
push
cmp
xor
inc
mov
out
sub
fcmovnb
push
ret
decb
xchg
sbb
test
bound
inc
push
xor
daa
xor
pop
icebp
xchg
cli
lea
mov
pop
xchg
xchg
fwait
push
out
cmpsb
test
rcrl
jmp
ds
sahf
xor
xor
out
lahf
inc
shl
lret
jne
lret
test
add
and
repz
cltd
jae
pop
das
repz
xlat
push
xchg
vpxor
popa
jae
insl
mov
push
shr
data16
hlt
je
jl
sub
movsb
cli
mov
push
push
xor
pop
ja
xor
push
clc
cmp
test
jbe
cmp
push
in
cmp
push
push
bound
in
add
es
lahf
jp
inc
xor
rorb
push
jl
scas
pusha
add
mov
jo
int3
jae
xchg
lahf
inc
xchg
xor
add
xchg
js
rcl
push
xor
stos
adc
cmp
xlat
jns
aas
in
jmp
insb
notl
mov
jno
mov
push
fmul
pop
sti
jne
out
push
xchg
sarb
or
cmp
fcmovb
adc
xchg
pop
jge
jnp
js
mov
or
add
jne
inc
test
push
xchg
aad
jbe
lods
sub
or
jmp
jmp
dec
mov
xbegin
std
xor
lahf
cwtl
sub
aad
sti
dec
cmp
sbb
test
pop
mov
and
pushf
scas
mov
fmuls
jmp
xchg
inc
inc
mov
test
scas
xor
xchg
jae
xchg
mov
lock
pop
cmp
dec
fcom
stos
std
jb
outsb
inc
jecxz
cmp
rorb
loope
pop
mov
js
mov
cwtl
mov
lahf
stc
mov
xlat
and
fs
insb
in
notl
push
std
mov
mov
pop
mov
rolb
cmp
sub
push
imul
inc
cmp
cli
pop
into
into
nop
daa
adc
push
mov
fnstsw
xchg
inc
sbb
andb
pop
repnz
movsl
sahf
cmp
enter
mov
adc
xlat
cmp
mov
popf
mov
les
fldt
pop
xchg
xchg
idivb
mov
mov
xchg
sub
mov
push
push
inc
es
jbe
ja
push
adc
inc
push
xchg
jb
ja
and
jmp
cwtl
arpl
adc
add
call
or
adc
hlt
outsb
xlat
dec
inc
add
adc
insl
movsb
mov
mov
xor
scas
cs
fsts
xlat
test
shll
pop
in
pop
inc
ret
stc
mov
jns
pushf
mov
or
dec
push
or
mov
enter
out
cld
mov
testb
out
dec
stc
dec
add
nop
push
ret
add
jae
in
xchg
das
inc
and
xchg
sbb
lock
mov
mov
mov
mov
sbb
fs
int
cld
lods
ss
add
js
and
cmp
inc
cmp
rcrl
insb
cmp
loope
fsubs
inc
sbb
pop
scas
add
into
cmc
imul
rcrb
inc
lods
push
ficompl
loope
shll
call
sahf
insb
fistps
lock
pop
xor
verr
pop
sub
or
cs
or
loopne
ds
pop
push
add
sbb
xorl
call
cli
loopne
add
insb
jmp
adc
fidivrs
dec
in
test
dec
mov
jb
jb
setge
xchg
out
mov
xor
arpl
fldt
outsl
or
fcoml
and
push
mov
into
inc
sub
loop
dec
into
ret
repz
ds
fidivl
rcll
scas
sub
inc
or
sbb
adc
mov
mov
cld
xchg
cs
ret
pop
xchg
aam
xor
adc
mov
cmp
xor
bound
out
sahf
mov
dec
and
fildl
rclb
mov
sbb
ret
addb
xor
lret
jne
fnstcw
mov
stos
xchg
ja
or
sbb
iret
lcall
jle
pop
mov
orl
push
je
xchg
cmp
test
stos
push
push
cmp
mov
adc
jns
cwtl
sub
leave
sub
rcrl
test
inc
idivb
aad
in
adc
add
pop
mov
ja
popa
pop
xchg
sbb
or
push
xchg
pop
mov
cmp
aaa
call
subl
inc
sbb
mov
in
push
push
or
ljmp
xchg
ds
jo
mov
mov
fadd
xchg
jae
test
mov
das
js
push
push
fwait
push
or
js
xchg
sub
jp
or
mov
icebp
pusha
sbbl
in
push
out
loopne
adc
inc
adc
add
jns
ss
inc
outsb
push
inc
push
cmp
das
out
cmc
or
cmp
add
mov
lods
cmc
aaa
add
adc
push
inc
pop
addr16
pop
inc
xchg
test
mov
ja
push
imul
cwtl
out
jo
lahf
and
ret
in
aas
xchg
ds
cmpsl
scas
dec
fs
outsl
or
test
push
xchg
les
push
mov
lock
clc
dec
mov
div
jle
cmpsl
mov
clc
imul
stos
dec
push
repz
mov
ffreep
loop
loop
popf
pop
jle
adc
mov
out
xchg
cmpsb
sub
test
mov
jnp
outsb
inc
adc
xchg
mov
insb
sub
je
push
pop
sub
cmp
fwait
movsb
lahf
xor
mov
xorl
sub
inc
push
jmp
sub
mov
mov
or
xchg
xor
test
dec
cmp
push
data16
dec
mull
xchg
xchg
push
cmp
add
xchg
arpl
xorb
nopl
pop
sub
lss
scas
mov
and
fadd
fdivp
inc
scas
repz
inc
jge
mov
fmul
jne
cmp
jmp
xchg
movsl
sbb
addl
movsb
sbb
xchg
data16
scas
xchg
iret
push
xchg
inc
divl
add
rcrb
in
call
je
add
mov
fidivrl
loop
sub
mov
dec
and
scas
shll
xorl
dec
mov
pop
mov
daa
adc
mov
out
adc
sub
in
aaa
jecxz
testb
std
jl
dec
cs
mov
adc
inc
out
loop
pop
addr16
push
mov
pop
inc
aam
inc
sbb
pusha
inc
inc
cmpsb
mov
adc
mov
insb
adc
pmulhw
inc
or
ss
sbbl
rcrb
daa
aas
jecxz
aas
cmp
mov
push
popa
jns
arpl
or
les
leave
dec
pop
inc
sbb
addr16
rorl
xchg
xchg
daa
adc
cltd
cmp
std
xchg
mov
nop
addr16
inc
cmp
lret
mov
fidivrs
pop
fcom
lcall
lret
cmc
mov
sub
cmp
lds
sbb
push
mov
xlat
js
jae
mov
lahf
jl
nop
cmp
xchg
movsl
jno
lcall
std
popa
mov
xchg
push
and
pop
loopne
cmpsl
push
sbb
sbb
fsubs
sub
cmp
arpl
push
mov
dec
insl
icebp
push
and
aas
xchg
pushf
fnstsw
rcr
outsl
jge
into
xchg
daa
jecxz
test
std
mov
lret
mulb
xor
push
xchg
out
cmp
or
mov
mov
sub
xlat
push
and
jne
xchg
xchg
out
int3
stos
ret
mov
out
adc
lret
push
and
xor
sbb
xor
mov
je
pop
popa
cwtl
in
ljmp
in
dec
and
push
mov
dec
repnz
jo
mov
arpl
out
dec
or
les
mov
inc
pushf
mov
jle
xchg
or
or
pop
fcoms
xor
aad
pushf
rol
int
das
cmp
push
xor
cwtl
add
cwtl
call
add
xchg
insl
icebp
rcr
repz
jle
stos
fsubrl
sbb
cmpsb
jne
test
sub
hlt
lret
lock
andnps
xor
xor
cmp
and
xor
stc
lods
jp,pt
pop
movsl
mov
pop
mov
cmp
movsl
adc
jle
lcall
push
fsubr
and
divb
test
sbb
int3
sbb
dec
ror
std
xchg
mov
nop
xchg
cmp
sbb
adc
or
pushf
lock
dec
ret
test
dec
xor
icebp
popf
sub
or
bound
repnz
and
stos
notb
cwtl
xor
cld
in
or
mov
sbb
subl
insl
jb
loop
mov
mov
pop
pop
push
mov
xlat
xor
inc
mov
mov
repnz
lret
adc
bound
xchg
jno
push
aas
adc
lea
push
fcmovne
mov
leave
cmp
mov
ss
lahf
shrl
jg
push
jmp
aas
rorb
sahf
inc
xchg
inc
push
ret
inc
scas
fldl
xchg
adc
pop
shlb
jmp
pop
lcall
idivb
mov
mov
sub
sub
jge
ss
adc
and
adc
mov
clc
imul
sub
shll
xor
pop
pop
iret
mov
add
data16
adc
mov
dec
sub
sub
mov
xchg
ja
pop
lahf
pusha
scas
div
xchg
hlt
aas
lahf
jmp
pop
xor
scas
aad
and
lea
rclb
xchg
shll
arpl
imul
pop
aad
ss
and
fwait
pavgw
mov
repnz
sub
loopne
cmp
and
push
test
xchg
pop
test
imul
lea
and
stc
aas
push
shrl
adc
inc
xor
push
cmp
cmpsb
xchg
divb
into
mov
je
icebp
fnstenv
stos
call
shl
das
fimull
adc
out
sub
inc
mov
shr
pushf
dec
loope
lret
divb
xor
or
xchg
mov
out
in
adc
repnz
int3
cwtl
and
add
or
push
mov
loope
sahf
cld
push
jns
and
xor
pop
or
movsl
fldenv
cmpb
push
outsl
mov
jae
xchg
aad
movsb
jo
cli
add
mov
push
cmpsl
dec
test
in
xchg
and
xorl
and
lahf
sub
testb
test
add
inc
out
pop
fdivs
outsb
in
push
das
cmpsl
push
pop
je
xchg
ljmp
rcrb
adcb
pop
push
cli
mov
mov
mov
fistpl
icebp
lret
jmp
daa
inc
decb
inc
stos
dec
adc
je
push
cmpsb
push
jne
test
xor
xor
push
int3
movsl
mov
aas
stos
sbb
pop
pop
mov
je
jecxz
fnstcw
outsl
lock
add
mov
jecxz
mov
gs
aam
lea
adc
lcall
lea
insb
push
mov
fistps
setbe
cmp
sbb
mov
jb
and
xchg
push
out
jecxz
xor
ret
push
add
hlt
mov
add
jae
out
aaa
mov
rcrl
jno
addb
bound
loopne
xchg
mov
jae
cmpsl
ret
insl
dec
fldt
inc
adcb
sub
inc
call
pop
daa
xchg
mov
add
mov
xlat
jg
inc
das
add
jnp
pop
imul
fprem
dec
scas
mov
insl
mov
pop
pusha
inc
dec
adc
fistpl
pop
add
sbb
dec
dec
lahf
stos
add
popf
xor
in
push
push
in
mov
arpl
sub
mov
cmpsl
sub
int
into
ret
sub
push
cmpsl
pusha
lock
mov
add
shrb
xor
or
cmp
push
loope
pop
push
fdivrl
jnp
pop
jle
mov
and
loop
inc
mov
pop
sti
aam
add
sub
and
inc
loop
gs
mov
enter
test
inc
jle
or
aas
adc
js
outsb
mov
sbb
mulb
mov
adc
les
loope
push
ds
push
std
in
sbb
and
and
xor
imul
stc
lahf
pushf
std
inc
or
je
das
mov
hlt
out
sti
xor
ficoms
out
cmp
cmp
jl
mov
add
dec
lock
pop
int
sahf
enter
adc
push
aaa
and
xchg
adc
icebp
jp
mov
lods
test
mov
ja
and
push
sub
ret
jo
std
mov
dec
sbb
jmp
inc
xchg
bound
sub
pop
mov
jp
es
hlt
out
adc
add
xchg
pop
ret
mov
sbb
push
dec
mov
out
push
stc
adc
xchg
mov
xor
add
cmp
arpl
or
mov
cmpsl
ljmp
mov
mov
xchg
push
mov
clc
bound
jbe
push
sahf
adc
repnz
push
loope
mov
rorl
fnstsw
xor
inc
sbb
lahf
pop
mov
aam
js
invd
rcll
xchg
cmp
push
imul
mov
jecxz
outsl
loop
rorb
sub
stc
push
les
adc
inc
fs
pop
and
enter
sarb
adc
push
xor
jae
mov
mov
jo
inc
adc
dec
or
mov
cwtl
mov
add
or
cmpsl
mov
mov
shlb
out
lcall
shll
in
mov
scas
xchg
lock
pop
push
aaa
mov
add
mov
test
std
mov
mov
into
cltd
dec
in
add
scas
ss
cmpsl
int3
lahf
stos
lret
mov
lods
or
inc
das
ds
fwait
imul
sbb
jge
in
mov
dec
push
ss
dec
out
loope
imul
cmp
stos
pop
push
adc
add
das
xor
negl
das
cli
pop
cld
mov
jecxz
jl
test
adc
pop
cmp
cmp
hlt
out
in
jl
mov
test
xchg
sbb
xor
add
outsb
out
lds
rcrb
repz
mov
pop
sbb
addr16
inc
or
jl
repnz
movsl
dec
jo
enter
roll
nop
jbe
subl
leave
lret
push
add
xor
addr16
push
sar
test
in
xchg
pushf
stc
es
xlat
inc
mull
lret
hlt
and
popa
rcll
push
arpl
out
or
sub
push
xchg
push
stos
sub
popa
inc
jae
js
stos
dec
add
fsubl
int
dec
je
popf
xor
ja
inc
inc
push
ja
mov
or
addr16
sarb
add
fstps
scas
cmpsb
xor
out
adc
jnp
out
std
or
dec
push
clc
ja
sbb
jno
popf
stc
pop
add
ret
sub
shrb
jno
mov
fwait
dec
adc
icebp
arpl
jg
mov
add
cltd
popa
imul
cmpsl
dec
push
or
rorl
xchg
or
out
cltd
push
inc
shrl
outsb
xor
test
lret
mov
addr16
movsb
insl
mull
loope
or
mov
add
lds
scas
sub
faddl
mov
sbb
mov
movsl
rorl
xor
sub
lret
pop
mov
int3
out
and
cmp
pop
in
int3
imul
jge
xchg
nop
test
or
or
push
pop
jno
add
in
and
arpl
cmc
push
jns
inc
es
and
mov
popa
add
int
loop
push
cwtl
in
push
push
sti
or
sbb
idivb
dec
adc
add
xor
test
es
adcb
mov
pop
xor
pop
push
inc
mov
int3
or
adc
jmp
dec
cmp
test
imul
ljmp
ljmp
mov
dec
mov
dec
add
xor
xchg
add
pop
or
fistps
dec
test
lods
ret
bound
jg
jmp
out
out
jno
aaa
cmp
insb
lock
test
adc
pop
push
addb
push
inc
sahf
fstpt
xor
js
mov
xlat
mov
inc
hlt
insl
fisubrl
je
cmp
jp
psllw
or
and
insb
xlat
inc
js
lds
push
xchg
inc
mov
push
sub
test
popa
push
jl
shll
sti
add
cmp
mov
add
jne
outsl
mov
mov
aam
in
push
or
mov
test
sbb
test
inc
xor
inc
es
fdivl
jp
adc
and
sbbl
mov
dec
pop
fcoms
dec
xchg
mov
sahf
dec
sbb
xlat
add
addr16
fimull
aam
sarl
idivl
mov
inc
ja
lret
mov
shr
and
ret
pop
mov
push
adc
sti
sbb
cld
je
shll
jo
sbb
aad
sbb
dec
sub
xor
loopne
test
pop
or
xchg
mov
jecxz
sbb
inc
cwtl
dec
add
pop
leave
jb
inc
cmpsb
rol
sbb
jl
mull
aas
dec
fisubs
cwtl
das
adc
ds
sbb
icebp
popa
imul
daa
dec
pusha
xchg
push
push
push
dec
jno
lods
add
or
or
repz
pop
sub
push
mov
mov
push
sub
or
jp
imul
or
and
push
sahf
sub
clc
int
mov
int
mov
repnz
xchg
add
fwait
jp
pop
int
add
jae
leave
adc
jmp
push
fisttps
xchg
add
or
shll
sub
jle
mov
mov
jmp
int3
ret
fdivs
mov
push
mov
jg
in
scas
pushf
stos
and
ret
mov
inc
fistpll
mov
sbb
mov
repz
imul
xchg
subl
int3
inc
jecxz
outsl
sub
xchg
add
mov
sti
jmp
add
clc
mov
inc
pop
jae
rorl
mov
jge
fsubr
push
xor
fisttpl
sarl
mov
je
xor
lcall
bound
icebp
mov
push
outsl
loope
cmp
xchg
fldenv
movsb
sbb
jbe
push
repz
adc
pusha
jbe
sbb
jne
jbe
dec
or
or
mov
sub
xchg
call
xchg
aaa
xchg
idivb
fstpl
cmpb
repnz
aam
and
mov
jmp
jl
loope
add
or
idivl
iret
call
aam
pop
xor
add
jno
sahf
into
lret
sbb
mov
shl
xsha1
cmpsb
or
rol
or
sti
and
adc
mov
cli
jl
sub
jo
jbe
inc
fucomip
xor
inc
add
std
push
mull
repz
push
jl
aas
imul
lss
aaa
test
pop
outsb
inc
cmp
pop
fildl
lods
js
pop
stc
mov
iret
insl
mov
xor
inc
adc
lods
add
adc
pop
es
cmp
or
push
mov
and
outsl
cmp
and
lret
loope
sbb
pop
lods
scas
mov
and
setbe
xchg
xchg
adc
stos
jmp
cld
mov
out
mov
xchg
ficoml
push
sti
or
pop
jnp
out
stos
and
cld
dec
push
mov
daa
rorl
in
test
pop
jmp
adc
fisubrs
leave
add
scas
xor
adc
push
xor
xor
push
iret
cli
cwtl
jb
push
cmp
pop
dec
mov
push
jmp
add
inc
pop
jge
sbb
ficoml
lret
and
mov
mov
mov
jle
add
adc
clc
add
mov
ret
out
insl
cs
pop
cmp
ja
push
and
aas
addb
pop
mov
xor
shlb
or
or
lods
push
daa
mov
jg
ja
push
sub
sbb
mov
lahf
push
pop
jg
jmp
pop
call
push
test
adc
dec
sub
mov
pop
mov
adc
fs
push
cmp
inc
in
adc
bound
dec
mov
pop
jle
nop
pop
push
sbbb
pop
clc
cltd
aad
and
pop
sahf
sbb
or
mov
rorl
mov
adc
pop
std
orl
scas
addr16
insl
lds
sbb
ss
mov
cmpl
fcomps
or
stc
outsb
fsincos
jle
lods
jbe
cmp
lods
or
rol
xor
jne
es
jno
movsl
sub
add
idivl
jne
adcb
test
xchg
rol
push
inc
pop
adc
rorl
fsubl
stos
test
repz
insb
cmpsb
mov
cmpb
out
mov
jl
andb
jne
lds
popf
mov
xchg
pop
pushf
loope
mov
cmp
icebp
pop
lret
dec
jg
adc
dec
or
jo
mov
imul
push
xor
jb
mov
popa
repnz
lret
pop
mov
adc
pop
mov
fwait
dec
lods
shlb
and
mov
dec
jne
sti
inc
jge
icebp
out
scas
mov
pop
in
pushf
add
nop
icebp
mov
repnz
decl
scas
mov
out
imul
enter
mov
imull
aam
in
push
jmp
mov
call
xchg
push
aaa
jecxz
mov
mov
xchg
and
enter
ret
lods
movsl
push
and
push
loope
in
outsb
and
xor
outsl
ret
or
dec
mov
push
ljmp
pop
dec
daa
out
inc
add
mov
push
sbb
sti
out
cld
scas
mov
inc
aad
in
mov
gs
adc
or
fisttps
in
popf
mov
aas
dec
inc
rcrb
sub
mov
xchg
int3
xor
imul
and
xchg
mov
pop
lcall
mov
scas
out
xor
shll
sahf
mov
aad
push
ja
xchg
jl
adc
jmp
xor
add
inc
jns
pop
xlat
ror
inc
out
cmp
jl
in
dec
addr16
cmp
cwtl
xchg
push
push
pop
mov
mov
lret
jecxz
arpl
repnz
xchg
jecxz
scas
mov
jno
add
xchg
cld
or
dec
dec
test
push
test
mov
xor
aaa
xchg
aas
xchg
sub
test
test
icebp
out
dec
jae
or
lods
aaa
imul
adc
xor
mov
in
dec
mov
sbb
rol
les
cmp
mov
adc
cmc
sbb
cltd
xor
xchg
mov
push
gs
push
fsubrl
or
jp
cmp
cmp
jbe
push
jmp
pop
cwtl
stos
sbb
stos
mov
scas
mov
fstps
test
xchg
xor
notb
or
jae
jmp
inc
jae
xchg
sbb
lods
mov
ds
xorb
jp
scas
inc
or
in
cltd
push
inc
sbb
jbe
in
aaa
mov
outsl
sti
lods
mov
ret
pop
push
mov
scas
jle
inc
cmp
cmp
aam
clc
scas
and
nop
add
insl
cwtl
movsl
xor
adc
inc
ss
setle
nop
dec
mov
into
push
sub
or
adc
sub
adc
mov
or
sti
or
adc
scas
mov
or
cli
jmp
stc
xlat
outsl
xor
sbb
sahf
cld
les
inc
ljmp
mov
cs
push
insb
sbb
xor
das
fsubl
movsb
jo
fs
mov
popa
stos
jp
pop
ret
xchg
es
sbb
pop
push
pop
inc
push
pop
cmc
cmp
inc
mov
mov
jno
negl
inc
in
dec
lds
mov
in
cs
jnp
and
cs
mov
cmp
test
addr16
adc
cwtl
iret
push
sub
in
icebp
ds
lcall
add
cmp
cmp
xchg
inc
or
ss
inc
inc
mov
mov
sbb
roll
jno
mov
xchg
fsubl
aad
out
stos
stc
or
and
jp
push
cmpsl
andl
fsub
or
or
movsb
inc
add
jae,pn
jl
adc
pop
mov
fwait
mov
or
xlat
pop
ret
in
scas
jns
jmp
add
stos
push
sub
jb
loope
lret
data16
cmpsb
fimull
lea
adc
push
inc
push
adcb
and
aam
es
sub
mov
lret
sub
out
sahf
push
test
sahf
and
add
cmp
std
inc
imul
iret
add
je
insb
ss
pop
sbb
popf
cmpsb
sbb
movb
cltd
add
inc
push
mov
mov
nop
push
shl
je
ret
add
xor
and
and
rcrl
push
mov
cwtl
and
test
fnstsw
sub
mov
and
xorb
pop
cltd
jns
sbb
pop
vdivss
cmp
cmpsl
enter
and
jbe
test
push
loope
inc
fwait
cmp
push
mov
enter
sbb
mov
cmp
dec
mov
lods
daa
inc
xor
xchg
jo
subb
cmp
inc
arpl
gs
aaa
push
out
add
sub
dec
nop
loopne
mov
mov
add
jp
aam
sub
push
int
inc
sti
adc
movsl
cli
loopne
in
mov
les
mov
dec
jbe
lahf
pusha
sbb
dec
jbe
test
mov
mov
imul
test
ja
add
push
es
cltd
mov
xor
gs
aad
mov
inc
repnz
dec
pop
int3
mov
mov
test
orl
daa
or
loop
hlt
sahf
or
out
decb
pop
sub
adc
stc
repz
xor
xlat
outsb
pop
iret
repz
enter
cltd
insl
push
jns
out
sbb
mov
lahf
movsl
push
mov
adc
jg
mov
and
sbb
adc
sbb
mov
jnp
sti
mov
xor
mov
pop
ret
sbb
ret
outsl
leave
xor
mov
ljmp
out
jno
pop
pop
mov
stos
push
jmp
cmp
jns
aad
std
je
inc
or
fwait
or
fwait
aam
xchg
pop
inc
ret
movsb
jns
push
movsb
stos
mov
jne
dec
inc
stc
add
insl
jns,pn
ret
aam
shrb
std
dec
add
iret
lahf
push
inc
jne
push
lret
sub
or
jecxz
test
or
xchg
mov
mov
lahf
mov
adc
inc
test
in
xchg
dec
incl
lcall
in
mov
iret
shll
outsl
cmp
push
pop
pop
test
ljmp
jge
xchg
jmp
adcb
imul
aad
movsl
sub
call
pop
and
repz
out
rorl
ja
dec
push
xlat
mov
xorps
test
inc
cmc
aam
lock
insl
xlat
fbstp
daa
xor
rcrl
es
xor
mov
lret
mov
sahf
inc
mov
jo
imul
pushf
gs
outsl
fiaddl
dec
xorl
or
popfw
test
pusha
ret
jmp
pusha
roll
icebp
pop
xchg
shl
dec
mov
jle
add
mov
fcoms
sub
fildll
mov
jge
div
pop
pop
jg
jbe
and
xchg
sti
sbb
iret
inc
cmp
cmp
sub
jbe
outsl
mov
and
stos
shl
dec
outsl
scas
add
and
in
repnz
pusha
cs
jmp
dec
cmc
mov
outsb
jno
xchg
cld
cmc
sarb
jbe
dec
jnp
and
and
idivl
movsb
mov
out
pop
xchg
fdiv
adc
mov
addl
inc
cs
inc
js
mov
xchg
or
lahf
sub
fildll
shlb
out
or
add
xchg
lods
test
data16
stc
mov
jo
push
lock
call
mov
xchg
inc
icebp
mov
and
jo
movsl
cwtl
mov
fdivr
and
push
dec
sub
out
add
cmp
adc
add
movsb
gs
sbbb
mov
dec
out
adc
xchg
repnz
lret
daa
lret
cwtl
std
mov
movb
xchg
mov
sbb
inc
movsb
movsl
pop
fmuls
roll
pop
or
sbb
and
movsl
cmp
insb
mov
in
xchg
dec
js
sbb
mov
xor
movsb
sub
add
push
push
fdivrp
sahf
enter
jl
push
rcrb
ret
cld
shlb
pop
cs
loopne
inc
sbbl
pop
imul
or
mov
sti
daa
dec
push
lods
je
shrb
pop
fcomps
inc
mov
out
sub
and
out
mov
ljmp
jbe
arpl
mov
mov
xchg
mov
sub
pusha
xor
nop
jge
or
pop
out
add
adc
and
mov
dec
iret
or
aaa
rclb
sub
mov
xor
mov
leave
dec
cmp
and
mov
dec
rol
mov
mov
cmp
mov
push
inc
sub
sahf
dec
dec
rorb
push
addr16
sbb
mov
sbb
arpl
inc
daa
pop
add
aad
adc
xchg
les
sub
dec
cmp
push
insl
cmc
sar
and
mov
test
xchg
in
jae
mov
xor
scas
or
pushf
mov
jmp
out
scas
outsb
mov
fsubrl
jns
cmp
rcr
dec
or
je
or
cmpsb
sbb
fstl
sub
xchg
sub
and
push
mov
inc
sbbb
mov
leave
and
cltd
adc
xor
mov
pop
dec
pop
fwait
inc
iret
xchg
imul
adc
int
push
fs
pop
shl
or
cmc
mov
std
std
out
pop
add
add
xchg
dec
les
jmp
cmp
adc
int
or
mov
pop
andl
lret
pop
leave
shrb
mov
fdivrs
jge
mov
inc
sbb
jns
lea
dec
mov
or
imul
sbb
leave
jo
popa
imul
pop
scas
dec
inc
add
sub
push
xor
in
lods
mov
xchg
pop
bound
xlat
movsl
shrl
xor
inc
data16
sub
out
mov
mov
mov
sub
mov
jg
xchg
jp
and
in
xchg
cmpsl
inc
jl
xchg
add
movsb
ljmp
and
mov
hlt
stos
sub
mov
mov
lds
dec
call
xchg
mov
lret
jbe
and
pop
aas
push
jb
iret
in
mov
adc
loopne
fwait
data16
mov
fwait
cmp
xor
fwait
loopne
data16
cmp
test
fbld
sti
and
movsl
fldcw
sar
push
cmp
ret
add
mov
enter
jae
je
inc
aad
push
fcoml
sub
jne
inc
adc
orl
aas
gs
pop
int3
ret
sub
test
imul
ss
xor
arpl
sbb
and
aad
sub
jb
and
cmp
fs
inc
mov
das
cld
roll
cmp
lock
cwtl
ja
andl
add
cmpsl
sbb
dec
mov
cmpsl
insb
stos
pop
cli
sub
loope
repnz
sub
jo
push
repz
outsb
test
or
xchg
addl
insl
mov
sub
pop
and
sbb
out
sbb
push
sub
mov
fistps
dec
pop
mov
out
insl
iret
mov
dec
popa
mov
adc
mov
jno
cmp
subl
push
lret
push
fwait
add
leave
insb
rol
push
data16
dec
arpl
jp
dec
dec
xor
out
sub
rolb
push
test
dec
ret
adc
cmp
test
and
scas
xchg
pop
insb
pop
xor
add
or
imulb
sub
mov
out
std
out
sub
pop
ss
xor
adc
cmc
fwait
cs
or
pop
add
push
jns
jnp
mov
pop
lcall
adc
add
or
cltd
mov
andps
lods
jg
dec
sbb
inc
sbb
pop
pop
inc
pop
fmuls
cs
and
mov
push
nop
in
jo
sub
mov
cmp
lret
nop
jl
mov
adc
mov
cltd
and
cli
adc
data16
mov
repnz
jg
sub
nop
adc
test
std
cmp
pop
push
adc
xlat
xor
jno
sbb
leave
jae
inc
mov
incb
dec
push
iret
cmp
mov
lock
stos
sub
mov
inc
jo
adc
xor
ljmp
add
mov
mov
mov
cmpsl
fdivrl
xor
push
sub
mov
mov
insl
adc
adc
imul
xchg
add
movsl
orl
push
adc
or
repz
xchg
les
in
cli
out
std
inc
add
cmp
xchg
je
push
mov
cltd
push
dec
pop
dec
arpl
jmp
lock
and
pusha
inc
mov
mov
sbb
push
push
scas
sub
mov
push
dec
push
lcall
jle,pn
pop
xchg
outsl
cwtl
add
push
nop
xchg
dec
pop
mov
jle
xor
add
jo
cmpsb
sbb
or
rol
mov
in
or
jns
lcall
repz
cmc
test
in
sub
jp
mov
dec
pushf
rol
xor
mov
shrl
mov
out
jle
loopne
fsubrs
fsubs
jp
sub
or
sbb
inc
cltd
cmp
fidivrl
jp
arpl
fadds
jg
inc
dec
or
mov
xchg
in
dec
or
add
js
mov
xchg
mov
inc
adc
aam
push
std
jp
push
adc
sahf
mov
cld
pushf
jb
cmc
cmp
xchg
or
imul
add
sbb
adc
inc
lods
dec
adc
adc
xor
lock
xor
add
jmp
leave
mov
jmp
adc
push
mov
aas
addr16
arpl
repnz
rcll
daa
cmp
js
sub
push
add
pop
inc
sub
mov
in
mov
mov
sub
or
xchg
insl
jne
call
xchg
dec
jmp
cld
dec
or
mov
in
or
push
push
fistps
into
jp
dec
pop
shlb
add
push
pop
push
or
std
xchg
outsl
xchg
rorl
ret
test
loope
loopne
cld
jmp
aam
lods
bound
loop
rcr
or
mov
fadds
cmp
dec
into
mov
mov
lea
add
push
mov
pop
jo
add
pop
or
pop
insb
shlb
cmp
xor
adc
adc
jb
adc
aas
jns
push
or
pop
jecxz
xor
push
call
leave
xchg
ljmp
and
jmp
stos
mov
xchg
xor
push
loope
sti
fimuls
data16
push
jb
add
xor
test
scas
jo
mov
outsl
cmp
inc
imul
aad
loopne
mov
mov
incb
mov
ficoml
roll
aaa
push
xchg
xor
scas
insl
rolb
loopne
or
mov
mov
mov
jbe
scas
and
pushf
push
jle
andb
out
xchg
push
mov
jbe
cld
movsl
out
mov
fbstp
xchg
add
mov
lock
sub
js
inc
je
test
pop
mov
xchg
cmpsl
pop
cs
out
xchg
or
add
xchg
adc
mov
jne
xor
fstpl
test
leave
jmp
dec
inc
sub
cmp
xchg
scas
jp
int
fdivrl
dec
inc
mov
jno
ret
mov
push
push
dec
jge
mov
fs
enter
stc
insl
sahf
inc
rorb
cmpsb
test
sub
shll
es
testl
adc
hlt
dec
outsb
and
pushf
ret
loope
push
push
fnstenv
push
cltd
ret
push
sub
xor
scas
bound
mov
sahf
inc
fcomi
sbb
shlb
jg
jmp
lock
add
sti
fsubs
out
mov
inc
ds
sbb
adc
movsl
adc
clc
aad
xor
outsl
movl
xor
sub
js,pn
xchg
mov
mov
das
sub
mov
lcall
or
xchg
sub
loope
cltd
add
push
xchg
test
fcomps
in
mov
mov
les
dec
cmp
and
imul
ss
push
call
xchg
dec
aam
cmp
adc
mov
xchg
cld
mov
lret
mov
enter
int
push
jmp
cmp
xchg
jecxz
ss
ss
cmp
and
imul
loopne
out
jno
aam
sti
xor
pop
mov
sbb
incb
in
fisttpll
mov
shr
lods
mov
sti
jns
adc
subl
and
xchg
das
xchg
mov
out
and
in
out
inc
mov
xor
cmp
les
outsb
jmp
nop
jo
lahf
dec
push
xchg
lret
flds
and
fs
sti
aas
int
lret
jno
fs
enter
inc
and
xchg
mov
xlat
add
call
sub
mov
ret
pop
mov
xor
pop
pop
add
pop
lret
in
pop
stos
lret
jnp
adc
xchg
outsl
pushf
ljmp
shll
sbb
cmp
jns
xchg
xchg
out
pop
push
inc
dec
ss
outsl
sbb
ret
imul
pop
jnp
adc
mov
fimull
ficoml
cmp
lret
stos
jge
cmpsb
ss
cmp
sbb
xor
mov
in
sub
push
pushf
call
mov
fcmovu
and
or
mov
inc
shll
xchg
mov
mov
aam
mov
outsl
sbb
ficompl
cwtl
add
mov
jmp
push
jg
dec
push
fisttpl
xor
bound
pushf
sbb
jne
inc
dec
into
pop
and
jns
insb
inc
inc
mov
mov
cli
adc
fdivs
repz
sub
adc
push
arpl
gs
es
testl
stos
icebp
sbb
stc
shlb
lods
jb
sub
cmp
lock
insl
sbb
cli
leave
jg
loope
pop
sub
imul
mov
jge
cmp
jmp
fcomi
pop
orl
and
lds
pop
fs
ss
rcl
and
jns
inc
js
test
sbb
dec
adc
cmp
outsl
hlt
sarl
inc
mov
subb
add
fs
les
mov
sahf
pop
adc
mov
or
xlat
ja
cmp
add
cli
jmp
sub
cmc
ret
jle
mov
icebp
pop
imul
dec
xor
adc
xor
add
jmp
mov
test
inc
sub
lahf
push
out
pop
idivb
outsb
push
xor
xchg
call
pushf
inc
outsb
ss
xlat
ljmp
cmp
cmp
jmp
cmc
push
xor
mov
loop
cld
ret
loopne
push
and
movb
mov
dec
test
mov
sub
mov
faddl
jb
ljmp
push
je
ret
push
into
mov
push
inc
sbb
jp
jns
ret
lods
adc
or
test
push
out
and
loopne
mov
jp
cmp
xor
rorl
push
jmp
aam
jp
push
adc
or
xlat
pop
sahf
jns
lods
inc
outsb
cmp
lcall
lods
test
sbb
cmpb
xor
scas
das
mov
outsl
mov
cmpb
mov
out
mov
sbb
fnstenv
sbb
arpl
or
shl
jmp
sti
ljmp
ret
cli
addr16
push
and
pop
movsl
cmp
cmpsl
pushf
insl
mov
xlat
push
into
jl
mov
mov
mov
sahf
stc
mov
ret
adc
push
or
insl
sbbl
movsb
orl
in
xchg
mov
cld
adc
cmp
adc
out
imul
xchg
imul
mov
in
push
adc
nop
sbb
jae
mov
inc
aam
push
ret
pop
and
sbb
pusha
cmp
rcr
movsb
ja
rclb
in
je
inc
ret
sbb
loop
insb
xor
dec
push
cmp
xchg
xor
add
and
xor
push
out
sbb
xor
mov
divb
fwait
mov
jnp
and
xor
fisttps
jmp
rcll
jae
shrb
or
movsl
pop
xchg
lods
mov
imul
xchg
sub
mov
mov
fmuls
cmp
out
sbb
jmp
add
mov
insb
sti
lret
cmpb
icebp
sahf
lds
xorb
imul
das
jge
mov
cmc
pop
and
stos
icebp
mov
out
es
sub
push
add
andb
cld
pop
or
push
sbb
jg
sub
jbe
aaa
cwtl
pop
ret
stc
xchg
orb
cmp
pusha
fsts
jp
lock
push
xor
into
fsts
mov
inc
das
mov
pop
icebp
es
pop
xor
mov
rcll
scas
and
or
cmp
jl
call
lret
lret
sbb
and
loop
xchg
scas
mov
xchg
repz
dec
or
leave
or
scas
lret
cmpsl
cmpsl
into
and
fadds
xor
push
jmp
jb
fisubrs
dec
cltd
mov
inc
into
sub
ljmp
adc
pop
fidivs
insb
sbb
sti
cs
add
test
lret
testb
xor
subb
or
mov
jb
lds
jo
and
xchg
mov
fs
dec
push
nop
fimuls
lcall
std
repnz
sbb
jmp
mov
enter
shlb
es
cltd
sub
and
test
shl
mov
dec
outsb
jle
push
out
cli
cld
jno
ror
inc
jne
imul
stc
pop
xchg
les
inc
nop
out
ss
push
inc
in
adc
add
mov
outsl
insb
fwait
rclb
outsb
das
hlt
loop
mov
add
dec
mov
xchg
xor
ss
push
cli
xchg
lret
clc
pop
or
push
mov
adc
pop
adc
gs
adc
jmp
mov
test
addb
fsts
mov
xchg
pop
clc
xchg
xor
dec
icebp
lret
mov
cmp
mov
jns
repnz
in
jecxz
xor
inc
mov
cwtl
rclb
xchg
into
push
sub
incb
pusha
xchg
andl
mov
push
or
jns
inc
add
xchg
xchg
xor
pusha
test
js
or
xchg
imulb
cld
mov
in
mov
mov
lahf
scas
mov
mov
into
adc
push
cmpsl
pushf
pop
cs
inc
mov
dec
das
jge
cmc
adc
mov
lret
sub
xlat
insb
mov
icebp
insl
fldl2e
aam
mov
cmp
lcall
sbb
mov
int
inc
insb
and
jecxz
loope
daa
iret
pushf
test
add
xor
cltd
mov
pop
mov
inc
cwtl
in
aas
hlt
ficompl
xchg
jmp
gs
repz
lret
add
out
loope
jb
xchg
testl
imul
rcl
dec
icebp
inc
adc
xor
shr
and
popa
lods
stos
aas
cmpsb
jecxz
mov
divb
xchg
mov
pushf
loop
movsl
mov
xchg
shrb
testb
lods
orb
jge
test
insb
inc
sbb
out
sub
sbb
pop
loopne
jle
xor
jmp
nop
icebp
neg
mov
pusha
test
ret
ljmp
jne
pusha
push
scas
movsb
jb
shlb
cwtl
add
sbb
xchg
lods
insl
aaa
mov
lds
in
out
xlat
je
mov
in
mov
push
xchg
ret
loope
int3
sub
in
jg
jge
xor
fwait
cltd
imul
mov
popa
int
adc
cmp
xchg
pop
leave
xchg
shr
or
sarl
scas
fcomps
sbb
lds
xchg
lcall
pop
imul
jle
icebp
add
pop
ret
mul
fidivl
paddd
shr
jno
incl
push
cmp
sbb
divb
fisubrl
ret
ret
sub
and
insb
jge
test
rcrl
stos
outsb
pop
inc
sarl
mov
int
xchg
inc
cwtl
sub
adc
out
sub
push
and
roll
dec
aas
pop
push
push
push
inc
push
push
loope
je
dec
roll
imul
push
dec
mov
inc
sub
push
inc
push
jg
xchg
pop
mov
ja
call
pmuludq
jl
pop
mov
cmp
ljmp
inc
jmp
mov
out
jmp
xor
xor
push
sub
fcmove
fcmovnu
mov
cmp
push
hlt
jmp
out
xchg
lea
cmp
aaa
pusha
mov
gs
fsts
cli
cmp
add
cwtl
lahf
sub
push
sbb
jo
cltd
mov
hlt
sbbl
xor
loopne
jmp
ret
ds
out
in
cld
and
mov
mov
cmp
pusha
neg
sub
sti
jb
jmp
pop
pop
jo
push
mov
lods
mov
in
daa
push
in
sbb
push
and
insb
push
sub
testb
insl
pop
jp
es
push
fisttpll
out
stos
cmc
xor
mov
inc
push
pop
pop
push
xchg
push
lret
call
xchg
insb
mov
loope
in
adc
ret
dec
fcomp
ljmp
out
arpl
or
xchg
pop
jo
and
jae
sub
xchg
mov
dec
sarb
or
xor
add
into
test
test
jne
fwait
adc
in
adc
scas
sti
shr
dec
cmpsl
call
testl
sbb
xchg
lds
imull
les
pop
inc
push
adc
inc
mov
data16
adc
mov
dec
adc
inc
loope
or
loope
and
repz
sbb
clc
cmpsb
repz
inc
sbb
in
adc
sub
mov
xor
inc
fsubs
imul
sbb
adc
inc
cmc
movsb
sub
mov
mov
or
dec
sbb
aad
out
xchg
xchg
xlat
pusha
sarb
mov
lock
xchg
rcl
lea
ds
jl
add
jae
js
ja
test
pop
inc
dec
insb
sbb
dec
xchg
or
or
notb
and
negb
mov
push
ss
adcb
mov
sbb
pop
aas
pusha
mov
and
repnz
or
mov
mov
jmp
mov
testb
icebp
jl
fwait
sarl
repnz
fbld
mov
mov
pop
dec
cmp
or
rcr
dec
leave
call
dec
out
mov
stos
aam
mov
add
dec
insl
loope
pop
fwait
mov
repz
jnp
pop
mov
aad
mov
jp
jne
test
outsl
dec
and
out
pop
sub
stc
std
idivb
and
pushf
xchg
lret
sarl
push
call
cli
inc
push
sub
mov
insl
loopne
or
nop
push
dec
movsb
in
mov
mov
cltd
xchg
xor
movl
push
imul
cmp
mov
push
enter
orb
pop
enter
and
and
inc
les
or
cld
jmp
and
cwtl
xor
add
xchg
sbb
mov
pop
ret
insl
jg
jne
push
and
mov
fwait
and
or
in
and
adc
insl
inc
pop
xchg
lods
decb
add
mov
jge
sub
mov
cmp
add
mov
mov
test
push
jle
es
mov
cs
pop
in
retw
hlt
push
stc
into
dec
movsl
push
inc
sarl
or
add
or
add
adc
ja
gs
mov
lea
xchg
push
lret
repnz
shll
sub
add
gs
fiaddl
je
sub
pop
push
jecxz
scas
mov
out
jbe
and
ds
mov
in
push
mov
scas
pop
mov
aas
and
mov
fidivrs
rcrb
hlt
and
lahf
mov
fidivl
sbb
lcall
dec
mov
xor
aad
dec
in
mov
adc
clc
aas
imul
push
pop
or
pop
adc
xchg
bound
mov
dec
jmp
adc
gs
jno
std
mov
mov
shrl
in
mov
pop
loop
stos
jge
add
test
pop
gs
jo
adc
int3
aam
mov
cmp
jle
rcrb
cmpsl
sbb
sbb
push
int
pop
aad
or
jge
push
ret
and
adc
push
push
js
mov
mov
xchg
adc
into
dec
pop
or
data16
inc
jp
sbb
mov
movsb
xchg
mov
jns
hlt
ret
aad
pop
loopne
jns
cmp
pop
xor
lahf
xor
pusha
sbb
dec
movsl
sbb
int
inc
dec
lahf
xchg
outsb
out
fcomp
sub
mov
sbb
add
mov
mov
jo
out
cmp
lahf
loope
scas
andb
fs
in
sub
mov
lds
mov
push
fsubrs
xchg
fdivrl
dec
mov
add
jmp
mov
popf
sub
xchg
xor
cmp
or
loopne
and
sbb
call
loop
in
pop
jns
sub
add
xchg
adc
stc
ds
mov
aad
xor
imul
int3
add
ljmp
or
mov
push
pop
xchg
fwait
cld
cmc
repz
or
pop
sbb
or
xchg
hlt
out
jmp
mov
inc
cmp
icebp
add
mov
push
mov
mov
jp
adc
int
in
les
push
sbb
fadds
adc
mov
outsl
cmp
xor
lahf
imul
or
mov
stos
pop
jae
mov
mov
and
push
xchg
lods
aad
inc
sbb
sub
inc
in
adc
hlt
fs
mov
outsl
pusha
mov
lods
lods
les
sbb
rcrb
fdivs
cmp
cld
cmp
xchg
jne
stos
add
mov
js
mov
jno
sub
dec
or
enter
inc
loopne
std
and
mov
xor
je
mov
mov
inc
cltd
sub
mov
leave
add
sbb
cld
repz
out
aad
fisubl
fisubl
stos
dec
pop
stos
lods
mov
lock
pop
xchg
out
imul
out
fimuls
mov
sbb
push
lds
insb
je
mov
dec
xchg
pop
xchg
push
les
xchg
push
add
cmp
stc
sub
lods
out
ljmp
mov
out
dec
xchg
sbb
xchg
iret
lods
adc
inc
movsl
push
dec
jl
test
cld
jo
test
hlt
dec
es
sub
sbb
cmpsb
fsubrs
stos
pop
sub
pop
sub
mov
sbb
fidivl
lods
ljmp
jbe
pop
addr16
lds
jp
mov
test
ljmp
xlat
xchg
jns
aas
faddp
mov
out
int
adc
sbb
and
mov
std
xchg
popf
push
adc
sub
xchg
mov
stc
pusha
push
popl
add
mov
adc
jo
icebp
or
cmc
iret
adc
cmp
dec
cmp
stos
imul
and
pop
push
fs
push
mov
movsl
jns
popf
fdiv
inc
cmp
inc
cltd
adc
pop
jnp
or
inc
out
test
fcomps
adc
out
and
test
enter
cltd
push
sbb
adc
and
push
daa
movsb
fsubl
out
lcallw
xor
jmp
repnz
mov
out
push
aam
or
mov
push
fs
jb
in
ficoml
xor
sub
lea
notl
jge
lahf
sub
rclb
mov
insl
shr
cmp
sbb
ret
xchg
jmp
push
cmp
add
clc
or
push
movsb
sub
dec
nop
jg
roll
add
push
in
rorb
push
dec
lods
lret
mov
sbb
sbb
loop
int3
mov
xor
mov
insb
mov
pop
mov
mov
repz
popf
fsubl
xchg
fistpll
or
mov
push
xchg
sarb
jns
das
fstl
std
push
roll
cmp
or
rcr
daa
pop
lahf
and
negl
cmc
jbe
aad
dec
je
cmpsl
ret
adc
out
sbb
hlt
loop
xchg
mov
imulb
outsl
imul
push
pop
aas
fistps
dec
or
cmc
push
inc
outsb
mov
xchg
ja
in
cli
jo
mov
das
mov
xor
adc
fld
xchg
jo
imul
mov
call
pop
and
sbb
inc
into
call
push
xor
shrb
and
call
addr16
je
outsb
js
add
pushf
popf
sbb
mov
add
xchg
decb
xor
sbb
add
insb
mov
inc
ret
sub
push
add
fcoml
jg
sahf
nop
xor
pop
mov
cmp
insb
cli
add
in
jbe
or
aas
mov
addr16
jmp
cmp
test
nop
std
push
sbb
xchg
or
mov
outsl
xchg
xor
insl
fisubrs
cmpsb
sbb
scas
and
mov
pushf
inc
adc
dec
dec
mov
stos
jbe
lret
idivl
xchg
mov
cmp
movsb
stos
mov
cs
repz
push
dec
lds
ret
sahf
cmp
lods
enter
repz
rclb
and
loope
lret
aad
cmp
sahf
jmp
ja
rcl
ret
inc
cmp
mov
movl
sbb
out
out
pop
push
pop
call
pop
daa
cs
mov
jb
xor
pop
inc
jl
mov
inc
out
in
lea
jae
imul
mov
and
outsl
outsb
insl
jae
xlat
pop
nop
sti
movsl
xchg
scas
icebp
adc
and
inc
sarb
movsb
int
jo
cmpl
pop
scas
filds
roll
and
push
jb
out
push
and
add
stos
or
jp
roll
sub
push
test
cld
push
add
fists
and
mov
jo
aas
fldl
popf
inc
repnz
mov
adc
add
leave
mov
sub
repz
sbb
mov
dec
insl
mov
or
sbb
arpl
sbb
cs
lods
mov
mov
lahf
add
aaa
push
rcrl
xor
mov
lea
push
lds
rorl
std
js
js
xlat
or
mov
sbb
xor
out
mov
in
leave
aaa
jmp
addr16
fs
icebp
ror
sbb
rol
pop
xchg
movsl
cmc
int
inc
pop
sbb
mov
out
pop
cmp
fsub
lahf
ficoml
push
pop
mov
and
aam
xchg
int
or
rol
enter
mov
add
or
lret
es
test
fidivl
push
popa
and
nop
aaa
scas
xor
jo
imul
mov
cmp
inc
xor
dec
mov
aad
insb
fxch
mov
lret
clc
add
and
subb
shll
mov
fs
xchg
jl
xchg
mov
in
stos
jmp
jge
lcall
ret
cltd
xor
mov
movsb
mov
mov
push
stc
or
rcrl
push
ja
insb
out
push
stos
loop
cmp
hlt
xor
inc
push
aad
shrb
jnp
repz
jmp
mov
jmp
xlat
int3
push
sbb
inc
pop
in
test
xchg
adc
enter
pop
adc
jnp
xchg
mov
add
and
in
std
adc
test
jbe
xchg
in
mov
xor
xchg
sti
pop
pop
das
add
loope
lods
sub
fdivs
inc
cltd
arpl
sbb
lds
inc
jl
popa
xor
mov
pop
pop
mov
lret
push
leave
imul
mov
push
pop
push
ret
jmp
rclb
jp
ss
test
sub
clc
dec
ret
into
add
cmp
test
movsl
xor
pop
stos
dec
push
adc
jae
stc
stos
dec
ret
fadds
popa
je
sub
sbb
inc
push
shr
lahf
js
adcl
js
mov
ffree
adcl
or
ds
lcall
les
fdivs
aad
stc
in
pop
in
dec
xor
mov
sarl
jbe
ret
inc
mov
inc
lea
mov
fisttpl
in
mov
fstpt
outsl
sbb
mov
mov
mov
cmp
mov
and
add
adc
pop
jno
and
mov
aad
loop
pop
and
mov
mov
and
cmp
xlat
push
aaa
inc
aam
or
std
out
ja
inc
clc
repz
pop
mov
xchg
and
sub
pop
or
ss
mov
cmp
xor
lods
mov
xor
or
mov
int3
insl
xor
outsl
test
in
rcll
mov
sub
les
push
in
test
dec
mov
jg
jg
add
repz
cld
lahf
mov
sub
and
xchg
xor
mov
sub
in
push
in
or
test
mov
jecxz
push
sbb
ss
push
lret
mov
or
inc
sub
fidivrl
add
mov
adc
loope
sub
jns
inc
out
cmp
rorl
dec
adcl
aam
sti
out
mov
push
out
leave
add
and
sti
clc
or
adc
inc
clc
mov
xor
cmp
jle
or
xor
int
jb
mov
das
pop
sub
repz
jg
push
pop
dec
and
and
and
imulb
add
mov
pop
add
stos
cmpsl
lock
int
mov
stc
jb
out
mov
icebp
test
icebp
xchg
xor
adc
mov
mov
addr16
mov
or
cmc
test
push
pusha
jnp
cld
cld
cmp
subl
mov
mov
loopne
add
mov
mov
push
aad
adc
movsl
repnz
inc
cld
lret
inc
stos
lret
imul
mov
inc
sbb
adc
push
dec
fsubrp
fidivrs
jb
cmp
lods
xor
mov
inc
mov
push
stos
aam
les
aaa
push
aas
addb
fildl
xchg
jno
js
push
dec
jp
stos
fistl
shrb
fidivs
outsb
lret
sub
inc
andb
lret
or
sti
jnp
sub
sbb
push
jnp
inc
pop
dec
iret
neg
js
xor
iret
jne
sarb
fstl
andb
aad
xchg
sbb
mov
lahf
sti
iret
les
push
stos
call
pop
movsl
pop
test
scas
ja
cwtl
jl
add
or
mov
mov
xchg
mov
sub
loopne
repz
mov
adc
testl
clc
sbb
pop
dec
jecxz
cmp
out
dec
bound
sbb
in
push
jl
fdivp
cmc
pop
push
outsb
fsubs
sub
repnz
imul
fdivl
fstpt
and
fistpl
stc
aaa
jmp
imul
ss
insb
or
xor
mov
jge
or
clc
add
mov
incb
test
adc
sbb
iret
xor
inc
stc
dec
test
into
xlat
sub
pop
adc
out
pop
adc
popf
fildll
pop
fisttpll
or
push
test
jmp
sbb
jle
pop
shrl
sbb
into
push
fsubr
popf
pop
jo
cld
dec
and
push
adc
pop
pop
stos
xlat
and
cld
jg
xchg
leave
and
pop
ja
adc
adc
cli
into
cmp
mov
pop
cs
xchg
rol
cs
inc
and
fmuls
fldl
dec
pop
fsubl
xlat
sub
cmpsb
and
dec
pop
test
xchg
sub
push
jo
aad
inc
push
cmp
loope
add
scas
jp
xchg
mov
dec
testb
lahf
mov
push
insl
lock
sbb
jns
mov
out
jecxz
adc
ja
mov
xor
ja
mov
stos
je
into
aas
sahf
int
cmp
fs
ljmp
cmp
lods
lret
xchg
inc
orl
cmp
xchg
into
movsb
push
or
push
cltd
mov
pusha
cs
scas
rcll
jg
stc
mov
jnp
cmp
fisttpll
lret
ffreep
pop
jb
pop
lea
je
cltd
insb
pop
or
cmp
and
jae
movsb
cs
outsb
mov
stos
dec
and
xchg
je
movsl
test
jns
enter
sub
dec
loope
pop
out
adcl
add
aam
dec
jg
addr16
jns
lea
fstpl
push
inc
sub
std
outsb
mov
gs
cmc
cmpsb
fwait
call
push
jnp
incb
insb
mov
iret
sbb
cltd
int3
arpl
jp
gs
pop
jg
add
enter
shlb
add
inc
cmc
xchg
sub
cmp
filds
stos
dec
cs
rorl
dec
sub
adc
xor
or
push
imul
xchg
insl
push
movb
or
adc
push
dec
std
xchg
push
ret
mov
jnp
leave
test
inc
in
mov
fmulp
addr16
fcoms
ss
mov
movsl
fs
jecxz
xorb
inc
push
mov
push
push
sub
jle
adcb
xor
stos
inc
or
sbb
push
lahf
cmp
lock
push
dec
add
push
into
sbb
xor
mov
and
inc
dec
and
stc
cmp
jmp
insb
out
add
les
push
xor
xor
xor
popf
je
cmp
sahf
cmp
adc
or
outsl
jmp
cmp
pop
xorl
daa
sub
mov
lcall
jmp
jle
cmpsl
lret
iret
pop
jb
mov
femms
pop
imul
mov
pop
xchg
push
add
movsl
jl
mov
xor
add
es
sbb
or
fbstp
lcall
sub
add
and
mov
inc
mov
push
lret
xchg
xor
in
cmp
push
sbb
out
jns
adc
pop
loop
loopne
jae
popf
pop
sbb
out
cmc
ss
or
test
xlat
dec
imul
sti
stc
lods
loop
pop
stc
pop
xchg
jo
xchg
int
arpl
sbb
sbb
lea
fdiv
sub
enter
sub
mov
push
push
sbb
add
pop
cli
imul
adc
xorb
pop
jg
fsubr
xchg
xor
xchg
sbb
dec
mov
push
imul
xor
aas
cwtl
xchg
pop
hlt
out
lods
and
xor
xor
into
mov
add
jmp
xchg
inc
add
cmp
pusha
adc
sub
dec
testl
adc
aad
push
jle
insl
stos
inc
pop
mov
popa
int3
jp
pop
out
mov
mov
lea
in
dec
sub
rcr
dec
je
es
push
cmp
xchg
scas
push
dec
movsl
dec
adc
cld
pop
mov
jl
mov
xor
mov
jecxz
push
insb
roll
into
sbb
negl
hlt
push
lret
xchg
mov
ficompl
sbb
or
iret
xor
lods
sbb
dec
arpl
test
add
inc
lcall
cmp
das
adc
lds
push
mov
jg
push
call
mov
sbb
adc
mov
and
outsl
pop
mov
out
adc
rcll
mov
jae
dec
mov
jecxz
xor
loopne
and
sbb
in
movsl
dec
mov
arpl
inc
in
pusha
bswap
les
into
mov
icebp
sub
mov
push
cli
add
mov
lahf
push
test
push
rcrl
negb
jecxz
cltd
mov
lods
dec
or
cmc
pop
mov
mov
dec
jmp
nop
xchg
jmp
mov
xchg
adc
xchg
shll
scas
decl
ficoml
aas
ret
cmpsl
imul
frstor
clc
dec
adc
lock
mov
jg
sbb
call
loop
test
lidtl
sbb
aam
xchg
mov
and
sub
idiv
movsl
es
dec
icebp
push
pusha
add
sarl
jo
mov
insl
movsl
pusha
arpl
fistpll
add
and
adc
pop
cmp
rclb
leave
movsb
add
cld
scas
jae
mov
pop
mov
clc
xor
sbb
js
aam
fsts
out
mov
xor
inc
lds
push
xor
lock
jns
xchg
outsb
dec
aad
in
sub
inc
mov
jne
mov
mov
and
jge
test
jnp
mov
fldenv
loop
dec
iret
pop
jmp
jnp
sub
pop
mov
aas
sub
data16
or
xchg
inc
repnz
stos
lock
jle
push
addr16
mov
mov
sbb
sbb
jbe
icebp
loop
fmull
test
and
scas
adc
ja
adcb
mov
cs
inc
push
mov
repnz
dec
ret
fucomi
movsb
jno
jp
imul
mov
imul
scas
cmp
xchg
mov
xchg
jecxz
mov
call
or
sub
mov
cmpsb
and
js
out
notb
xor
negb
dec
out
dec
rorb
cmp
sub
mov
hlt
sbb
or
sahf
jae
add
fadds
push
xor
or
dec
lahf
outsl
mov
leave
jle
and
jns
mov
lods
mov
jae
icebp
out
sub
inc
out
stc
mov
stc
mov
inc
sbb
sbb
jbe
aas
outsl
adc
cmp
lods
test
dec
jmp
adc
lret
ficomps
add
fwait
not
push
cld
divb
jns
andl
jp
test
sub
inc
push
mov
cmpb
sbb
pop
enter
std
ret
cli
subb
ds
lods
aas
pop
test
jg
dec
fsubs
jnp
push
and
jl
push
and
data16
or
and
and
and
mov
sub
lock
aad
xor
mov
or
sbb
mov
daa
or
push
iret
cwtl
pop
sub
movsl
lock
daa
in
cltd
sbb
xchg
sbb
jae
jbe
push
add
mov
int3
stos
mov
mov
push
stc
int3
and
mov
xor
rorl
ficompl
mov
mov
jno
add
sub
jbe
sbb
adc
lods
loope
fwait
mov
mov
lock
sbb
dec
ret
mul
sub
cltd
arpl
test
mov
mov
jecxz
push
cltd
mov
jmp
cmp
jno
shrb
or
push
cwtl
in
cmpsl
mov
leave
mov
push
cmp
xchg
fcompl
cmpsl
pop
or
mov
push
jns
sub
push
or
dec
sub
fwait
sbb
jmp
cmp
imulb
lock
jae
jno
ds
and
test
clc
or
adc
pop
xchg
inc
mov
fildll
shlb
mov
in
pop
cmp
mov
jno
xor
stos
xchg
mov
fdivrl
sti
and
clc
fcompp
loope
adc
and
cmpl
in
inc
xor
stc
dec
cwtl
lds
jb
arpl
js
lods
fidivs
adc
shlb
dec
xchg
mov
mov
jns
lock
repz
mov
stos
ds
cmp
loop
lcall
mov
xchg
xchg
adcb
push
dec
stos
insb
popa
lahf
jne
std
adc
outsl
sti
add
add
mov
mov
and
mov
jecxz
cmp
mov
mov
xchg
xchg
ljmp
iret
push
jns
iret
iret
call
jle
imul
lock
xor
xchg
cmp
pop
adc
sub
scas
push
jmp
adc
xor
or
das
dec
incl
pusha
pop
aas
dec
es
pusha
mov
imul
ret
pushf
sbb
xor
jecxz
pop
inc
cmp
mov
daa
call
sbb
add
loopne
inc
xchg
stc
or
or
xor
shr
adc
mov
into
mov
mul
or
sahf
cwtl
imul
push
or
cmc
lret
xchg
mov
mov
ret
sbb
in
cmp
cwtl
repnz
xchg
cli
addl
stc
xchg
in
xchg
jb
sub
test
mov
call
xchg
xor
scas
jecxz
jo
sub
stc
mov
pop
push
out
cmp
fcomps
xor
scas
mov
adcl
mov
je
cmp
icebp
push
aaa
adc
shll
inc
jp
fisttpl
scas
mov
stos
pusha
les
aaa
push
fmulp
sub
push
lahf
push
repnz
cltd
add
push
push
jo
dec
sub
sub
jbe,pn
es
cmp
jae
cli
mov
ud0
cmp
sub
inc
fwait
mov
and
lret
mov
pop
push
inc
cld
xchg
fs
xor
mov
or
aas
ja
sbb
cltd
add
jb
pushf
test
cmc
cmc
and
ja
test
push
or
push
cld
push
jbe
aam
icebp
cmp
and
nop
pop
andl
pop
mov
stos
fcomp
iret
jge
lock
ja
jo
pop
mov
clc
repnz
out
push
lds
psrlw
jge
aam
push
dec
xor
xchg
xchg
lea
int3
mov
insb
insl
add
out
addr16
pop
call
shlb
rorl
push
stos
sbb
sbb
xchg
pop
int
arpl
dec
or
jae
das
and
in
mov
sub
les
movsb
push
nop
fdivr
outsl
std
mov
outsl
cmp
and
and
jns
add
in
cmp
outsb
push
push
scas
adc
or
and
inc
int
and
mov
pop
sbb
enter
sbbl
test
mov
mov
push
pop
and
dec
icebp
arpl
and
pushf
lods
xor
into
cmpsl
inc
add
inc
fstpt
movsl
ret
push
iret
fadds
jecxz
and
dec
ss
pop
or
dec
and
dec
pop
jp
push
leave
mov
xchg
lret
out
cmpb
loopne
fldl
arpl
cmp
mov
and
sbbl
loopne
aas
fmuls
enter
push
push
notl
fnstsw
push
xchg
jmp
lcall
mov
stc
pop
cmp
push
sbb
add
leave
icebp
adc
add
loopne
icebp
inc
pop
add
dec
jg
xor
xor
hlt
sbb
stc
push
inc
xorl
insb
mov
mov
rcr
stc
jne
rorb
mov
push
sahf
fnsave
adc
sub
sti
scas
es
cmp
sub
sub
add
pusha
adc
sti
inc
sti
fcomi
mov
sbb
pop
outsb
pop
jmp
mov
sub
ficoml
call
adc
setne
rcl
push
idivb
in
loop
sub
or
cwtl
mov
push
sub
cmp
jg
xchg
cmc
les
xchg
mov
les
push
movsl
and
jg
sub
adc
inc
mov
adc
cld
add
push
push
ss
inc
push
lock
inc
dec
test
call
lea
sub
outsb
inc
or
xor
cmp
add
add
call
mov
sarl
icebp
inc
mov
rolb
dec
push
in
popf
xor
roll
mov
mov
pop
jns
stc
push
xchg
in
and
in
mov
xor
pop
movsb
xor
push
cmp
aas
out
mov
add
out
into
in
dec
call
cmp
dec
scas
stc
push
mov
fdivl
aam
fdivl
mov
daa
popf
fucom
aam
lods
pop
insl
inc
mov
test
push
loop
cmc
mov
dec
mov
ja
or
sti
inc
push
pop
mov
jmp
mov
outsl
jge
or
pop
cmp
sbbb
cmp
mull
xor
andl
push
xchg
dec
push
cli
and
lret
dec
jg
mov
xor
or
imul
xlat
out
pop
sub
push
or
std
sbb
fidivrl
adc
into
mov
fistpll
jae
fldt
icebp
lret
xor
jle
xchg
repz
cmp
pop
pop
inc
scas
and
push
loop
fwait
pushl
mov
cmp
add
es
or
mov
ret
fmuls
sub
add
rorl
negb
icebp
push
ja
mov
es
shl
push
jo
dec
shll
sarl
push
mov
lret
sub
pop
xchg
mov
and
xchg
repnz
addr16
sbb
xor
xchg
data16
push
or
sahf
mov
mov
sub
mov
add
dec
fsin
les
dec
jp
xchg
mov
mov
ret
mov
xchg
lret
push
sarl
sub
aas
inc
pop
fcomi
pop
adc
shll
scas
std
push
fidivs
jne,pt
cmp
mov
adc
or
pop
fstps
adc
stos
lea
lds
cs
mov
jne
pop
mov
dec
insl
xchg
mov
sbb
mov
or
fisttps
call
outsl
xchg
enter
es
ljmp
adc
pop
mov
add
movsb
xor
adc
pop
pop
loope
into
dec
jmp
popf
gs
adc
imul
in
loopne
mov
adc
sahf
pop
int3
test
jo
test
and
add
fwait
in
sub
jae
sbb
test
clc
mov
inc
xchg
fwait
nop
dec
adc
sbb
sbb
adc
cmp
sbb
and
or
cs
push
push
jmp
lock
lret
mov
fdivrl
and
test
movsl
rorl
ja
push
int
test
das
adc
cld
pop
bswap
lock
xchg
mov
insl
add
pusha
mov
aas
adc
adcb
sub
xchg
sbb
aaa
adc
lock
mov
and
xor
adc
imul
xor
mov
mov
roll
loopne
cmp
int3
sbb
mov
xorl
rcrl
ja
clc
jnp
cld
decl
xor
add
push
fabs
pop
and
jns
outsb
andb
mov
in
fsubr
jno
and
cmp
fldcw
xchg
inc
clc
aas
push
jecxz
jecxz
mov
into
cmp
notb
mov
out
and
pop
sub
cmpsl
lret
ficompl
stc
cltd
lods
ret
shrl
mov
adc
cwtl
lcall
jmp
add
or
sub
xchg
cmpsl
shl
mov
sahf
push
into
idivb
lock
fnstsw
xchg
push
sar
adc
jo
sbb
or
sbb
adc
and
mov
sub
outsb
loopne
mov
ja
push
pop
fwait
sbb
lods
imul
or
cmp
nop
dec
test
push
lcall
lcall
and
sbb
cltd
pop
jp
inc
push
outsb
ficomps
or
xor
popf
das
sti
in
or
inc
mov
bound
fwait
add
mov
lods
mov
sub
mov
and
inc
inc
fdivs
test
mov
mov
rol
popf
lret
int3
push
push
fisubl
xorl
lret
mov
cmpsb
dec
int3
cmp
lds
and
xor
mov
int3
outsb
adc
mov
loopne
jmp
movsb
scas
repz
pop
dec
jnp
shrl
xor
aad
aas
jl
sbb
iret
fsubrp
push
out
out
xor
push
repz
popf
pop
out
and
dec
div
jg
rolb
push
imul
das
mov
mov
je
inc
jp
inc
dec
nop
xchg
bound
js
jmp
xchg
nop
repz
mov
inc
or
dec
shrb
jecxz
or
dec
icebp
cmpsl
cs
repz
push
xlat
mov
sub
sub
mov
bound
xchg
dec
movsb
jg
scas
iret
mov
pop
fwait
lds
popf
jl
mov
mov
outsb
ret
int3
push
or
xor
aas
stos
sbb
mov
fmull
and
pop
push
mov
push
mov
cmp
inc
and
rcrb
loop
xor
ret
scas
xchg
mov
fsubrs
xorl
mov
jbe
sbb
inc
mov
cmp
pop
rolb
sbb
in
mov
aas
dec
enter
push
enter
xchg
xlat
xchg
lods
inc
adc
mov
xchg
mov
push
cli
pop
int3
jle
mov
movsl
xchg
loope
push
jae
mov
sbb
lods
jg
mov
lahf
push
fsubl
inc
inc
mov
adc
mov
fwait
inc
fdivl
mov
dec
lret
sahf
int3
and
push
test
cwtl
fadds
xor
inc
out
jnp
xlat
pop
jmp
mov
dec
imul
movsb
roll
sbb
xchg
push
icebp
pop
into
stos
movsb
mov
jae
cwtl
xchg
inc
lods
and
and
sbb
add
in
ret
pop
cmpsb
les
clc
mov
jge
pop
sbb
cmp
sub
cltd
mov
bound
addb
sub
not
pop
push
in
xchg
fcoml
sbb
mov
fstpl
sub
xchg
jecxz
arpl
xor
dec
and
outsl
bound
inc
xchg
cmp
bound
jno
mov
push
xor
insb
test
stos
jne
mov
mov
imull
cli
in
mov
std
and
out
adc
jne
mov
lea
fisubrs
inc
mov
mov
pop
lds
loop
and
cmp
sbb
adc
test
inc
sbb
add
inc
push
pop
dec
jge
into
ror
xchg
std
inc
fcoml
mov
mov
dec
sub
sbb
or
ror
scas
stos
mov
out
lods
jae
and
jp
lods
call
out
mov
add
lods
lods
lods
sub
in
iret
call
and
cwtl
jns
xchg
and
cltd
mov
xor
popa
cmp
pushf
sbb
loop
lret
fistpl
out
inc
in
scas
mov
cmp
cmpsb
in
cmpsl
dec
and
popf
mov
push
lret
sahf
pop
or
xor
xor
in
or
rcll
dec
dec
push
jl
xorl
push
lcall
ret
sbb
clc
sbb
mov
jge
pop
add
out
sub
fimuls
repnz
dec
xchg
sarb
mov
mov
or
jg
or
insb
stos
xor
cs
mov
jle
sbb
pop
int
les
push
jmp
push
inc
ror
in
sub
inc
xchg
xor
jo
or
imull
jne
add
ror
loopne
cmp
push
jns
scas
inc
iret
andb
mov
sahf
xor
and
daa
mov
fistpll
xor
add
push
popf
jge
scas
out
popf
scas
repnz
mov
mov
bound
jl
addb
lock
loopne
jno
popf
sti
mov
sbb
jb
pop
sbb
clc
jbe
or
mov
or
lret
es
insl
out
aam
outsl
cmp
mov
and
adc
pop
jp
pop
dec
mov
mov
sbb
mov
mov
outsb
add
leave
nop
mov
notb
outsl
mov
scas
rcr
xchg
inc
mov
xchg
sbb
xchg
dec
jp
mov
xor
adc
loope
jno
movntps
xlat
pop
cmpb
xor
mov
in
stos
aam
pop
or
scas
mov
dec
xor
mov
js
fstps
mov
in
int3
out
js,pn
pusha
ljmp
mov
xchg
lret
mov
imul
addr16
loopne
and
aaa
mov
ljmp
sarb
cli
bound
dec
fmull
mov
outsl
mov
testb
xchg
jp
cmpsl
sub
cs
add
and
scas
in
shrb
sbb
leave
mov
pushf
cli
aaa
push
adc
loopne
and
inc
flds
dec
nop
inc
int3
sub
jmp
arpl
cmp
sub
inc
and
xchg
push
or
pop
mov
inc
fdivrs
js
into
mov
cmp
in
inc
mov
xchg
cmp
subl
sbb
mov
xlat
std
jecxz
aas
adc
in
ljmp
inc
sti
iret
adc
dec
pop
rorl
sub
and
mov
in
aas
mov
outsl
insl
cmc
ret
jns
adc
or
scas
inc
jg
out
cld
sbb
out
sub
mov
sub
fwait
enter
dec
adc
dec
xor
in
sbb
sbb
lods
mov
push
push
jmp
rcl
push
lcall
sbb
fwait
adc
cli
sbb
rcll
fildll
aad
sbbl
dec
push
xchg
push
sub
jns
out
mov
in
shrb
push
mov
pop
inc
scas
and
xchg
mov
ret
mov
sahf
inc
cmp
pop
das
loop
adc
cmp
bnd
jne
xchg
loopne
lds
div
xchg
and
jle
dec
inc
addr16
call
pop
int3
lock
mov
jne
fwait
push
adc
xchg
mov
jmp
mov
mov
cmp
push
jg
push
jmp
and
inc
sbb
in
xorb
dec
lods
nop
int
fdivl
mov
pop
call
pop
add
xchg
mov
insl
mov
push
jge
into
xchg
daa
mov
jp
jb
xorb
pop
lds
cmp
pop
xor
mov
aas
push
and
mov
jle
or
xlat
or
jl
push
lret
scas
andl
jle
push
xor
les
roll
in
xchg
pop
mov
out
add
in
adc
rcrb
ss
mov
push
data16
call
daa
mov
js
xchg
pop
xchg
loop
jo
pusha
push
adc
xor
mov
or
jge
lahf
mov
js
inc
popa
or
inc
mov
int
imul
gs
mov
jae
xchg
out
inc
pop
sub
fisttpll
pushf
mov
repz
into
sub
shrb
dec
js
dec
into
dec
mov
lods
fsubrl
xchg
pop
popa
pop
add
pop
jnp
addr16
mov
in
shl
cmpsb
push
imul
enter
push
pushl
xchg
add
pop
outsb
sub
outsb
aad
pop
aaa
jl
sahf
adc
cld
int3
pop
jp
xchg
insb
je
pusha
pop
add
dec
pop
jge
mov
test
jmp
or
cld
mov
clc
adc
push
jl
lock
pusha
test
seto
and
sbb
add
inc
out
rolb
in
pop
out
add
nop
out
lea
add
sub
xor
cli
mov
or
fildll
nop
push
out
insl
mov
mov
xor
adc
jle
mov
int3
add
inc
call
or
in
loop
in
mov
cmp
pop
ljmp
and
dec
sbb
stc
push
aad
mov
fisubrl
popf
mov
bound
push
xchg
push
pop
daa
cmp
int3
jp
sub
mov
mov
jmp
out
pop
mov
ljmp
loopne
mov
addr16
mov
jg
rorl
dec
aas
sarl
or
inc
imul
aad
cmp
test
dec
lcall
xchg
ds
pop
fdivl
outsb
or
movl
leave
js
movsb
jns
sub
jbe
insl
cli
test
jle
cltd
mov
loope
outsl
or
push
and
push
add
ds
cmpsl
or
dec
int
dec
std
push
xorb
enter
dec
mov
lret
arpl
pop
out
in
jb
pop
adc
sbbl
lods
lds
mov
jle
jmp
lahf
bound
and
adc
repz
fdivs
push
outsl
jb
fnstenv
inc
mov
mov
adcb
outsb
xor
xor
dec
cmc
leave
sub
cld
xchg
xchg
loopne
in
ja
mov
data16
jecxz
sub
cmpsb
pop
pop
dec
xchg
cmp
cmp
cmp
dec
idivl
pop
aad
dec
and
push
aas
dec
mov
out
mov
cmpsl
movsl
fcomip
iret
mov
sub
push
push
dec
inc
out
lods
nop
push
popf
out
test
push
pop
pop
outsl
push
xchg
add
data16
pushf
lret
sbb
es
and
dec
pop
pop
and
pusha
push
outsb
add
js
add
mov
dec
add
and
fs
dec
xchg
pop
in
insl
movsb
sar
cs
nop
jmp
sbb
jp
push
inc
dec
das
imull
pop
int
adc
push
mov
ucomiss
outsb
loopne
sbb
aad
adc
arpl
dec
cmp
icebp
out
fadds
jbe
insl
jbe
or
in
dec
add
mov
rcll
xchg
test
loop
adc
sbb
or
push
xchg
cwtl
xor
mov
pop
lcall
bnd
cs
insb
insb
adc
push
sbb
jp
xor
mov
outsl
jle
mov
lea
adcb
stc
pop
negb
adc
mov
in
out
pop
imul
or
mov
sbbl
cmp
jmp
ds
sbb
shll
push
sbb
pop
push
rorb
pop
rcr
inc
mov
les
cmp
mov
inc
mov
add
jg
push
sti
in
and
rcr
mov
add
aaa
cmpb
shrb
add
mov
push
xor
sbb
mulps
cwtl
aaa
popa
int
popa
mov
das
into
popa
sbb
jns
cmpl
aad
dec
adcb
sub
sbb
sub
inc
push
scas
mov
xor
movsb
lds
xchg
rclb
mov
inc
mov
aaa
ja
addl
and
jl
mov
and
or
cwtl
dec
dec
pop
mov
xchg
cmc
aad
mov
mov
aam
les
mov
notb
rcl
sahf
stos
xchg
sub
mov
push
jno
or
insb
ja
mov
mov
mov
movsl
loop
leave
jmp
dec
fdivs
incb
pop
add
add
cmp
rol
fadds
push
cld
mov
push
lea
jnp
inc
repz
pop
mov
sti
mov
mov
or
pop
arpl
loope
imul
pop
lret
fistpl
push
jb
js
inc
mov
cmp
push
xchg
mov
xchg
cmc
in
insl
xor
je
lcall
or
mov
lea
daa
or
pop
mov
push
les
push
push
lahf
shrl
xchg
inc
in
aad
sti
sub
bound
push
jl
jg
mov
cli
push
sbb
call
mov
push
inc
mov
mov
fsubrs
jbe
xchg
dec
enter
sbb
bound
pop
movsl
mov
shll
push
inc
fsts
push
pop
mov
jl
movsb
sbb
cmp
xchg
dec
icebp
cmp
sbb
sub
cmpsl
adc
xor
mov
andb
int3
dec
or
sub
add
mov
fnstenv
inc
pop
or
call
outsl
cmp
lret
jbe
imulb
mov
cmp
jge
insl
xor
lea
sarl
and
sub
pusha
das
mov
insl
add
test
push
xlat
mov
daa
test
in
shll
loopne
fnsave
cli
jmp
clc
push
pop
scas
xchg
fldl
aam
stos
push
popf
idivb
and
stos
sbb
mov
repz
jl
cmp
test
loopne
pop
sti
movsb
cmp
add
bound
mov
into
shrl
push
cmp
subl
mov
mov
xor
jne
aaa
pop
adc
lcall
ffreep
out
orb
das
dec
gs
mov
sbb
js
rol
or
mov
es
leave
jbe
movsl
std
out
scas
mov
add
pop
pop
adc
lds
cmp
bswap
push
in
xchg
mov
loopne
mov
cmpsb
pop
lret
add
xchg
fwait
decl
dec
dec
cmp
pop
jno
sub
ret
cmp
xor
dec
xor
es
cmpb
sahf
inc
dec
sbb
imul
scas
lcall
jle
in
fisubl
imul
xchg
xor
jecxz
pop
icebp
xchg
xchg
ret
and
push
idivb
lods
xchg
pop
push
insl
lahf
mov
rolb
xor
pop
jbe
fdiv
data16
fildl
icebp
xor
daa
imul
push
stos
gs
inc
cmp
sub
xchg
lahf
repz
mov
xlat
pop
mov
lret
fstpl
xor
arpl
push
mov
lods
lods
sub
test
dec
fst
aad
mov
ljmp
pushf
testl
inc
stos
sar
iret
cmpsl
pop
jns
xor
jl
test
adc
jo
jge
add
jecxz
push
hlt
orb
mov
adcl
mov
ret
pop
out
loope
mov
adc
jecxz
fadds
xor
out
test
addr16
push
mov
xchg
cmp
or
and
mov
push
add
loop
inc
loop
dec
sbb
or
aas
xor
mov
add
jecxz
mov
lret
roll
test
ret
fs
cmpsl
lret
ret
mov
pop
push
lahf
push
and
xor
add
imul
mov
add
movsb
das
lret
mov
pop
xchg
mov
ljmp
lods
lods
xchg
cmpl
fimull
mov
sub
dec
nop
dec
sbb
mov
xchg
mov
push
jbe
or
lds
jg
inc
push
out
cmc
jo
outsb
cmp
iret
sarb
stos
daa
fnsave
mov
dec
and
inc
and
std
pop
mov
call
sbb
imul
cmp
pop
add
sbb
xchg
fs
js
pop
mov
mov
or
sbb
repz
jnp
push
xchg
outsb
push
xlat
cmp
addr16
mov
out
xchg
and
vpsubsb
jmp
or
imull
mov
nop
cltd
mov
mov
or
stos
lcall
adc
add
in
cmpl
xchg
push
stos
jne
cmp
shl
sub
fmuls
ja
or
scas
aad
ds
sar
inc
mov
pusha
enter
mov
mov
pop
mov
sbb
xlat
sbb
fldenv
adc
je
jg
in
push
sub
ja
mov
xchg
inc
sub
stos
mov
mov
dec
jl
add
sbb
shlb
or
gs
jns
loope
inc
sbb
mov
stc
push
inc
test
aad
cwtl
xor
mov
cld
in
in
movsl
add
frstor
roll
je
insl
adc
inc
cmp
test
jnp
mov
xor
cmpsb
jbe
dec
bound
jl
adc
in
and
int
stc
scas
jns
lret
sub
out
xor
cmc
sbb
dec
cmpl
cltd
mov
fsubr
cli
lea
jo
mov
adc
aaa
dec
stc
rcl
popf
cmp
fcomps
clc
lahf
loope
mov
rol
stos
mov
sbb
mov
cmpsb
pop
imul
mov
xor
jl
sti
ja
fisttps
inc
clc
inc
lea
sbb
or
dec
daa
pop
das
ds
lret
clc
ret
and
cmpsb
mov
inc
repz
ficomps
fldcw
int
pop
and
mov
mov
fstp
adc
cmpsb
sbb
je
mov
mov
in
jns
xchg
jmp
iret
outsl
insl
cltd
push
sbb
cwtl
repnz
push
fs
sarl
iret
sbb
shll
jp
pushaw
mov
or
add
mov
mov
push
loopne
or
leave
andl
in
ss
mov
out
add
or
xor
dec
arpl
cld
sarl
popf
cld
bound
sbb
pop
jl
sub
push
mov
outsl
loopne
push
sub
xchg
in
or
cli
in
popf
imul
or
dec
jecxz
push
dec
dec
in
add
out
fnstcw
xchg
jge
movsb
cmc
int3
xchg
sti
mov
test
adc
cwtl
outsb
adc
mov
cmp
or
inc
inc
mov
and
cmpl
push
movsl
movsl
int
ja
into
cmpsb
xor
cmp
jle
mov
jb
lods
scas
imul
push
push
xor
pop
ds
mov
dec
lds
stc
mov
shlb
mov
xchg
mov
movsb
incl
mov
jb
popf
mov
push
mov
adc
sub
jmp
push
pop
inc
mov
add
cs
dec
daa
aaa
sub
aad
sbbl
cltd
xlat
daa
inc
inc
add
es
hlt
inc
in
test
xor
or
lret
cltd
mov
test
addr16
cs
jo
scas
sub
dec
scas
xchg
aad
push
aad
cmpb
ss
lahf
js
lock
add
fs
leave
es
push
sbb
jle
sub
mov
jae
mov
scas
cwtl
dec
and
sbb
es
dec
push
lret
pop
or
outsl
jg
mov
iret
subb
popa
dec
fcompl
pop
icebp
xchg
out
cmp
xor
test
jnp
popf
mov
fsubp
imul
mov
and
andl
add
ret
xchg
sbb
inc
and
jae
clc
lcall
test
lods
dec
mov
repnz
adc
push
add
aam
ja
ljmp
mov
mov
ljmp
push
or
arpl
imul
adc
lods
andb
mov
ret
pushf
cld
out
mov
xchg
inc
pop
scas
cmpl
lods
push
mov
lahf
aaa
out
lret
scas
cmp
loope
les
push
adc
add
sbb
mov
push
nop
pop
das
je
jne,pt
rcrb
xor
inc
imul
dec
sbb
cmp
lds
and
lods
mov
jbe
xor
jae
push
ret
das
xchg
jo
in
or
sbb
jno
push
dec
lods
pop
dec
push
je
imul
sbb
leave
sbb
emms
xor
mov
mov
aad
insb
add
fs
push
adc
jae
daa
fldenv
or
mov
pop
or
shll
loope
xor
cmpsl
js
jge
mov
movsl
out
jnp
inc
mov
dec
pop
hlt
aas
scas
iret
lods
stos
mov
add
pop
das
xor
lret
imul
leave
mov
dec
and
pop
les
push
loop
xor
or
out
call
cmpsl
fnstcw
jl
mov
dec
aas
in
out
mov
stos
adc
lret
sti
cmc
sbb
adc
mov
test
pushf
cmp
mov
xor
rolb
loop
mov
sbb
loop
mov
dec
dec
jg
cmp
push
cmp
loopne
iret
xor
lods
mov
fwait
sub
jg
cmp
into
aam
xor
sarl
mov
cmp
jecxz
mov
add
arpl
stc
in
mov
jo
jno
cwtl
sarb
cmp
ds
fsubr
outsb
add
insb
xor
sbb
push
filds
sub
sti
add
std
imul
loopne
push
sti
inc
es
mov
lcall
mov
add
xor
mov
mov
add
scas
xor
pop
mov
pop
push
adc
outsl
daa
mov
or
inc
mov
dec
movsl
sub
pop
inc
inc
or
and
jae
fistpll
jge
bound
jo
mov
xor
sub
jmp
jne
pop
nop
and
xor
imul
add
insb
repnz
rcrb
pushf
fdivl
loop
jbe
and
in
xchg
lret
pop
inc
orb
push
aaa
dec
sti
aad
pop
mov
xor
adc
mov
in
xchg
enter
mov
cmp
ss
push
jnp
dec
add
xchg
xabort
cmp
divl
shrl
cli
push
xor
lahf
mov
inc
push
lods
dec
mov
mov
in
imul
cmp
ja
imul
stc
adc
sbb
popf
inc
sahf
push
rcll
jecxz
pop
xor
mov
jae
test
mov
adc
call
xor
adc
fdivrl
out
pop
adc
jbe
imul
pop
sti
out
pop
xor
mov
dec
xchg
adc
les
sub
fidivs
out
enter
dec
inc
xchg
aas
dec
repz
cmpsl
adcl
hlt
push
sub
xchg
fcmovu
add
leave
push
jp
pop
les
jmp
and
aam
pop
popl
sub
inc
cmp
stc
pop
xlat
dec
stos
add
popa
cmc
les
push
or
icebp
inc
xor
jnp
cwtl
stos
stos
stc
inc
loope
sbb
sbbl
push
dec
mov
enter
xchg
push
and
push
int3
out
repnz
je
add
movsb
scas
xchg
lock
sub
pop
mov
inc
or
or
mov
js
cmp
adc
sub
xchg
addr16
xchg
and
clc
in
xor
push
pop
and
pop
dec
subb
andb
dec
lahf
mov
cmp
mov
and
divl
ror
repnz
jmp
lcall
cs
push
push
or
ror
dec
les
or
frstor
dec
popf
repnz
xchg
mov
mov
jb
aas
loope
sbb
lea
add
or
adc
je
xchg
pop
pop
lock
add
sbb
dec
loopne
in
xor
sub
aad
clc
or
jne
les
mov
mov
dec
test
sbb
sub
loopne
mov
les
hlt
sbb
test
scas
push
pop
inc
call
cmp
or
ljmp
movsl
xchg
mov
insl
jne
jp,pt
das
pushf
int3
adc
or
push
rolb
cmpb
jle
sub
and
pop
push
mov
ret
sub
jle
out
pop
sbb
lods
jo
adc
stos
fistps
mov
adc
mov
mov
data16
jno
stos
xchg
mov
sarl
mov
daa
push
arpl
jl
cmp
mov
jne
pusha
aaa
cwtl
xchg
mov
mov
mull
fisttps
mov
push
pop
sub
sub
pop
xchg
pop
sub
repz
or
imul
lea
icebp
in
jns
popf
sbb
or
aam
jg
ljmp
dec
jns
mov
inc
dec
cmp
test
mov
rol
cmp
fnstenv
adc
cs
or
push
mov
jp
cmp
cltd
sti
arpl
prefetchnta
test
xlat
imul
mov
sbb
lea
jp
cld
cmp
pop
in
sbb
jle
rcr
test
push
je
or
xchg
test
xor
in
nop
gs
mov
pop
adc
std
add
xor
mov
daa
mov
sbb
inc
sar
cmp
inc
xor
xlat
jo
jmp
lds
push
fbstp
pop
sbbb
rdtsc
bound
xorl
inc
fisttps
insl
mov
cmp
push
aaa
cmp
outsl
cmpsb
mov
fsubl
sub
iret
sbb
sub
clc
aam
movsl
cmpsb
psraw
mov
add
lret
xchg
adc
xor
mov
mov
or
je
or
mov
mov
push
push
mov
push
xchg
xor
lahf
dec
mov
mov
jo
cmp
test
icebp
test
mov
jg
mov
add
mov
out
fwait
jne
mov
out
cli
cmpsl
sbb
sbb
pop
mov
sub
mov
mov
popa
stos
popa
push
mov
shll
pop
mov
sub
inc
fsts
add
xchg
fwait
pop
fisubrl
mov
out
bound
lea
fcomip
pusha
pop
hlt
jbe
test
outsb
int3
fstl
dec
lcall
sbb
xchg
add
sbb
add
dec
xchg
cli
ret
int
jg
push
pop
scas
jle
inc
lds
jbe
mov
add
hlt
lds
mov
incb
outsl
push
jle
adc
insb
mov
add
fbld
cmpsl
scas
movsb
imul
insl
stos
cmp
dec
mov
insb
popa
js
stos
sbb
pop
mov
out
movsl
ljmp
sbb
xor
pop
cli
icebp
sbb
mov
icebp
add
cmpsl
push
wbinvd
divb
sub
ja
or
mov
dec
sbb
outsl
cld
add
shl
jmp
movsl
mov
divl
cmp
stc
rolb
inc
leave
movsl
jmp
jb
test
sub
std
js
dec
aaa
dec
mov
int
xlat
lcall
push
sti
jl
lods
xor
push
das
and
out
ror
in
popf
jecxz
into
and
andl
hlt
cmpsb
mov
mov
test
xchg
mov
xchg
inc
inc
pop
daa
cmp
scas
int3
shl
jmp
popa
je
test
xchg
cltd
outsb
pop
loope
or
or
fldcw
ss
inc
pusha
div
push
push
ja
jl
jecxz
xor
bound
add
fstpl
fisubrs
mov
xchg
lahf
push
xchg
int3
adc
mov
adc
outsl
add
inc
and
out
jg
sub
jg
pop
sub
xorl
idivl
jg
adc
mov
fadds
adc
xchg
cli
cmp
icebp
add
movsb
mov
pushf
jecxz
push
popf
sub
mov
mov
xchg
out
cmpl
and
cmpsb
es
cld
js
hlt
add
jmp
sbb
pop
out
js
leave
xor
lcall
mov
imul
mov
popf
cmp
outsl
aas
aaa
call
pop
popa
and
nop
xor
dec
scas
mov
mov
mov
pop
dec
lea
mov
mov
in
xor
pop
jl
dec
mov
je
mov
das
cmp
stos
push
clc
mov
shlb
sub
popf
jl
dec
mov
stc
test
or
stc
outsl
mov
xchg
adc
adc
mov
in
popa
ret
or
pop
test
sbb
xchg
adc
aam
loop
scas
shl
aam
inc
out
push
or
lret
ljmp
push
push
mov
in
or
sbb
sbb
pop
xchg
mov
sbb
outsb
and
outsb
and
pop
or
xor
lret
cmp
push
inc
fstp
lods
adc
aas
loop
mov
leave
mov
loop
fdivrl
pop
test
pop
iret
inc
mov
fdivl
cmpsl
stos
js
xchg
mov
fsubrl
mov
sbb
ret
or
mov
add
and
mov
mov
int3
add
mov
fadds
xchg
loop
int3
xchg
mov
fnstsw
fiadds
sti
sbb
ds
testb
jp
xchg
stc
adc
jns
loop
sbb
icebp
test
xor
ss
xor
sbb
outsl
push
inc
inc
insl
mov
inc
pop
and
add
lret
je
and
cmp
pop
imul
adc
testb
sub
aad
ja
fisubs
jmp
pop
pop
fwait
arpl
popf
inc
ja
mov
lahf
iret
mov
and
mov
in
push
dec
dec
shlb
inc
daa
mov
sti
nop
insl
mov
xchg
and
mov
stc
sub
xor
test
mov
mov
es
sub
cmp
dec
adc
popa
add
pusha
and
xchg
sbb
out
xchg
repnz
std
and
test
cmp
aad
mov
cmpsb
pop
sub
cmpsb
scas
scas
jns
sbb
pop
pop
aas
sti
or
lcall
movl
sub
repnz
push
add
dec
das
mov
xchg
push
mov
decl
sbb
push
stos
or
jbe
and
outsl
mov
mov
lods
jns
aaa
jge
rorb
out
pushf
sbb
aam
subb
test
insb
shrl
inc
loop
ds
out
pop
adc
mov
add
adc
jp
clc
repz
pop
adc
pop
sub
inc
mov
and
adc
imul
mov
jge
insl
sbb
inc
adc
movsl
imul
mov
add
and
inc
fsubrs
in
xlat
hlt
bound
lahf
mov
fcmovne
negl
dec
ret
ss
pop
jnp
mov
nop
lods
cmpsl
outsb
mov
repz
outsb
mov
add
push
push
mov
cmp
dec
push
add
popa
mov
mov
pushf
dec
std
mov
leave
fcmovb
test
add
mov
test
pushf
adc
inc
xor
or
dec
pusha
dec
aad
cmp
cmp
xchg
mov
mov
jae
xlat
or
xchg
jg
outsl
or
or
cmp
add
push
lods
sub
and
cli
out
in
or
push
je,pt
mov
mov
sbbb
pop
leave
inc
stos
push
fstpt
fbld
ret
pusha
js
cmp
add
push
shlb
shrl
xchg
loop
or
jnp
push
or
cmp
push
mov
xor
cmc
cli
imul
push
lds
sub
xchg
xor
loop
jge
outsl
sub
sbb
lods
es
mov
sbb
xchg
push
jl
jns
ret
mov
stc
mov
shlb
inc
cmc
scas
popa
ds
adc
lret
mov
inc
push
cmp
push
fimull
push
aas
mov
bound
sahf
mov
xchg
mov
add
inc
pusha
loopne
shrl
cmpsb
jmp
mov
movb
out
mov
outsl
push
jno
or
lods
push
adcl
cmp
ret
cltd
andb
inc
cmp
repnz
jl
or
jns
mov
add
fsubrs
aad
in
jo
dec
adc
sub
or
clc
dec
movsl
leave
xor
stos
mov
pop
mov
popf
xor
pushf
out
fnstsw
inc
or
in
or
dec
popa
psubusw
cmp
mov
mov
nop
cmp
shr
gs
pushf
dec
negl
out
fstpt
in
test
mov
dec
mov
inc
mov
into
shlb
jmp
xchg
cmp
in
push
loop
mov
je
fisubrs
int3
ja
mov
xor
into
push
and
mov
cmp
sub
repz
bound
or
dec
xor
push
sbb
sti
and
aad
fcomip
and
lods
mov
xchg
inc
dec
aad
xor
mov
xchg
clc
lds
pop
dec
in
inc
in
sub
scas
cmp
ret
xchg
arpl
mov
call
fbld
pop
xchg
add
repz
nop
stc
cmp
or
addr16
pusha
fdivrs
inc
mov
pop
xor
stos
mov
or
add
or
fsubp
xor
pop
xchg
cmc
pushf
ljmp
and
xchg
sbb
jg
mov
popa
hlt
fwait
and
mov
popf
mov
mov
mov
inc
add
push
loop
inc
aad
mov
jp
mov
call
data16
cmpsb
dec
jbe
stos
pop
andl
lock
stos
in
mov
add
push
mov
and
sbb
push
hlt
xor
adc
sbb
mov
cwtl
push
jg
das
popf
clc
adc
lods
lret
or
push
loop
loope
sbb
cli
jb
mov
jge
fwait
in
stos
push
sub
aam
mov
jbe
mov
stos
add
rcrb
jmp
xchg
mov
nop
lcall
shr
xchg
xor
scas
xor
gs
inc
rcr
mov
test
jecxz
xchg
cmp
outsl
jnp
jl
movsl
lret
mov
mov
pop
aad
or
fstpt
pop
outsb
sub
lcall
pushf
xchg
and
mov
add
orl
gs
or
aad
mov
div
and
aad
scas
shll
cmc
fisttpll
fstl
pusha
or
fadds
adc
xchg
out
hlt
push
sub
and
jg
pusha
int3
mov
jg
mov
loope
pushf
cmp
mov
sbb
test
arpl
adc
loop
test
into
and
push
sbb
mov
or
cmp
mov
mov
cmp
mov
mov
lahf
dec
ficompl
sbbl
ret
and
test
out
sarb
inc
mov
and
xchg
push
mov
ljmp
mov
nop
mov
adc
and
daa
push
out
and
into
push
clc
mov
lahf
les
insl
jmp
pop
fnstenv
jnp
insl
mov
mov
test
enter
and
dec
inc
ds
xchg
dec
stc
add
aas
pop
add
push
jno
mov
shll
stos
in
rep
or
push
leave
mov
dec
jmp
sti
loop
notb
rcl
les
int
xor
sub
push
cli
lahf
out
outsb
jbe
mov
xchg
cli
push
out
sbb
or
push
mov
jnp
push
mov
adc
push
push
mov
cmpsl
popa
jb
jmp
sbb
xor
push
push
cmp
push
popa
pushf
sbb
mov
dec
mov
jo
mov
cld
das
cmp
sub
mov
movsl
fildl
mov
dec
imul
int
mov
sti
ss
xor
sbb
mov
into
add
cmpl
rorb
insl
dec
adc
leave
cmc
pop
adc
scas
loopne
arpl
push
push
push
mull
xor
movsb
insb
or
mov
mov
xchg
cmc
lea
repz
daa
popa
cld
adc
in
movsb
repnz
xchg
mov
sub
vpmadcsswd
pop
arpl
les
jle
adc
jle
xor
insl
inc
mov
xor
cltd
shlb
insl
fdiv
mov
sbb
in
push
cmp
sbb
add
fsubl
movsl
push
test
insl
rorb
sarb
jo
xor
aaa
sbb
bound
xor
cltd
leave
ja
adc
fisubl
mov
xchg
ret
dec
mov
jo
sti
add
pop
lods
cwtl
iret
fisubrs
ss
int3
and
jp
andl
jmp
pop
pop
movsb
cltd
push
pop
repz
call
cmp
cmp
cs
dec
imull
jae
xor
ljmp
sub
jb
mov
ret
fdivl
jecxz
cmp
add
lcall
xor
cwtl
rolb
add
or
movsb
int3
imul
sbb
push
ficompl
notl
loope
jne
js
frstor
outsb
mov
loop
repz
int3
mov
test
add
rolb
and
cltd
into
in
dec
ret
cli
add
sahf
add
cmp
ds
xchg
or
mov
jle
push
fisttpl
pusha
dec
fdivl
outsb
cmp
icebp
sti
xor
dec
dec
inc
dec
in
mov
rcrb
and
sarb
nop
add
stc
jno
stos
sti
daa
push
push
mov
mov
or
dec
pop
jg
sti
inc
mov
mov
shl
mov
icebp
pop
inc
fcomp
orl
in
sbb
je
dec
or
xchg
hlt
call
fists
adc
sbbl
mov
xchg
ja
push
pop
ss
stos
sub
xor
pop
sub
aam
add
ljmp
ret
xchg
xor
scas
out
xchg
push
shl
cmc
inc
data16
stos
adc
xchg
add
loopne
xchg
push
fbld
ffreep
push
movsb
and
out
ljmp
pop
add
pop
btc
das
nop
push
fdivl
repnz
xor
inc
fsts
mov
xor
cmp
insb
mov
and
or
rcrl
xchg
in
jne
xor
movsl
xchg
xor
xchg
pop
fs
outsb
sub
in
jns
lcall
pop
call
dec
inc
dec
shr
sbb
enter
or
or
sbb
std
pop
iret
cs
pop
cltd
lods
add
inc
dec
movsb
adc
xor
out
dec
pop
movsb
iret
fadds
sub
or
add
in
push
clc
mov
mov
push
stos
ljmp
jno
mov
push
int
sub
test
and
pop
sub
push
and
fcoms
sbb
xor
inc
jge
jmp
mov
subl
int3
in
sub
sti
out
dec
mov
mov
cmp
or
sbb
jne
lahf
or
imul
neg
inc
movsb
fsubrs
inc
push
jmp
or
repnz
arpl
add
jo
dec
neg
jb
or
divl
out
mov
and
jno
mov
dec
lds
sbb
lret
mov
mov
aaa
js
divl
push
or
test
push
cmp
clc
lcall
push
add
movsl
mov
mov
iret
inc
andl
xchg
sub
clc
cmp
fstl
fdivrs
fcmovnu
push
and
loop
stos
mov
or
movl
cmp
pop
mov
int3
rcrl
in
pop
mov
push
push
sbb
lock
repnz
outsb
inc
outsl
loop
sbb
int3
and
jo
and
cmp
dec
nop
mov
inc
mov
into
mov
xchg
mov
lea
inc
jge
test
sarb
add
mov
jecxz
cmp
test
adc
xchg
icebp
fcmove
or
push
jae
sbb
dec
fadds
int3
xor
std
mov
icebp
jp
stc
test
mov
xchg
ss
loope,pt
in
xchg
fiadds
or
cld
fnstsw
xchg
push
test
push
mov
pop
pop
stos
aam
ja
fidivl
sbb
and
pop
push
scas
adc
mov
inc
pop
pop
xor
adc
xchg
sbb
cld
jecxz
fwait
out
movsl
xchg
pop
lods
and
clc
nop
sub
rorb
clc
adc
stos
push
pop
in
push
fucom
adc
and
mov
call
xchg
or
stc
fstpt
cmp
sbb
sti
cli
xchg
mov
icebp
shll
mov
cmp
js
movsb
xchg
mov
cmpsb
jne
mov
xchg
push
js
into
leave
out
mov
repnz
sub
xchg
adc
icebp
adc
lahf
sub
pop
push
mov
xchg
sti
mov
or
mov
test
push
lods
mov
movsl
or
jns
push
xchg
xor
lock
add
std
adc
out
mov
adc
fidivl
fisubrs
lret
icebp
cmp
inc
pop
lret
inc
cltd
pushf
outsl
push
scas
pop
arpl
push
fldenv
lret
cmpsb
jmp
adc
in
inc
mov
xchg
cmpb
imul
xorl
movsl
adc
cmp
dec
inc
sysexit
push
pop
imull
push
sbb
pop
dec
std
fistps
sbb
push
cmp
adc
ret
les
sbb
arpl
dec
mov
sarl
incb
cmpsl
mov
shlb
cld
mov
test
mull
mov
jno
fs
push
xchg
mov
push
lea
popa
pop
ds
dec
or
aad
jecxz
adc
in
xor
inc
sub
push
add
test
movsb
bnd
jl
jmp
push
fs
out
cmp
insb
gs
rcr
testl
mov
mov
cs
add
or
pop
jge
shlb
pop
pop
shlb
mov
data16
cmp
leave
inc
bound
into
shlb
lahf
test
test
movsl
int3
adc
or
sub
test
jns,pn
adc
daa
xor
scas
ret
leave
ljmp
sbbb
icebp
jmp
xlat
mov
or
and
mov
jno
and
mov
mov
into
mov
adc
nop
push
or
push
jmp
sub
cltd
and
stc
mov
jb
add
popf
stos
iret
lahf
push
jle
lds
pop
test
mov
out
pop
and
sbb
idivb
jne
add
popf
jns
fisubrs
lea
inc
sub
iret
dec
pop
sub
addr16
mov
addb
adc
lods
pop
aas
scas
outsb
push
in
pop
or
into
hlt
add
ljmp
adc
xor
dec
aaa
xchg
aas
push
or
push
jbe
das
mov
mov
mov
cli
dec
dec
inc
push
sarl
jg
in
outsl
test
jge
sbbb
and
adc
testl
test
nop
std
pop
div
mov
cli
or
subl
in
sbb
das
xchg
cmpsl
andl
push
movsl
adc
or
cmc
inc
mov
xor
fwait
push
xchg
inc
jbe
xor
jge
rorl
in
pop
dec
loop
xchg
lods
and
pop
jne
mov
leave
jbe
mov
testb
pop
dec
pop
xlat
sub
mov
pushf
shrb
mulb
testb
mov
mov
jno
jb
or
jg
je
pop
icebp
pop
mov
imul
adc
push
sub
inc
lea
lret
mov
ret
xchg
jnp
jbe
and
int3
jmp
pop
adc
push
mov
mov
movsl
jb
add
jmp
je
outsb
adc
mov
xor
mov
ljmp
imul
jge
jns
adc
sub
sti
jmp
cwtl
or
shr
out
inc
cmp
add
lods
xchg
movb
je
or
xor
cli
pop
and
push
mov
cmp
push
jecxz
imul
push
push
adcl
hlt
loop
mov
outsb
arpl
cwtl
faddl
jno
mov
divl
adc
fadd
cmp
inc
cmp
cmp
movsb
aam
cmc
cmc
push
mov
sub
cmp
data16
int
int
je
adc
insl
dec
std
hlt
faddl
imul
pmaxsw
add
mov
repnz
pop
jnp
jle
bnd
stc
dec
inc
or
cmp
mov
xchg
mov
lahf
lret
adc
adc
shr
daa
mov
out
repz
pop
jl
negb
stos
xchg
sub
loope
fwait
xor
pop
fdivrl
inc
fbld
xchg
mov
in
lods
mov
insb
test
xchg
and
mov
cli
std
jbe
mov
das
arpl
lods
hlt
mov
jnp
dec
push
mov
cltd
sub
lret
xlat
inc
mov
xchg
add
cmp
sub
imul
scas
aam
test
ds
aaa
loop
push
int3
xlat
addb
fmulp
mov
inc
jb
clc
adc
lcall
cltd
mov
mov
mov
and
hlt
cld
and
fadds
dec
and
or
cli
aas
jbe
inc
push
aas
and
xchg
pop
pusha
fsubrl
jae
hlt
xchg
movsb
xchg
mov
jecxz
sbb
nop
push
mov
lods
sbb
push
mov
xchg
pop
sbb
jl
xchg
mov
mov
std
push
xor
jge
xor
sub
adc
push
xor
pop
mov
mov
lock
jne
data16
sub
sar
in
lahf
xchg
inc
fwait
scas
mov
mov
mov
into
ret
cmp
xor
out
stc
subl
mov
cmp
mov
pop
rolb
out
and
imul
test
mov
popf
dec
ret
daa
mulb
rorb
rolb
pop
cwtl
xor
out
cmp
push
xchg
mov
cwtl
push
jo
dec
es
cltd
mov
and
and
lock
cmpsl
or
and
push
pop
mov
in
sbb
xchg
add
xchg
insl
aas
je
push
cld
push
pushf
fldt
xchg
sub
leave
aad
inc
cmp
aad
mov
jg
fcoms
cmp
xor
sub
and
adc
fstps
pop
aas
nop
jbe
jno
add
rclb
dec
std
jbe
mov
sbb
inc
cwtl
add
push
lret
lahf
out
test
dec
popf
cmp
xor
arpl
sub
mov
mov
sbb
dec
dec
inc
sti
cmp
movsb
inc
fistpll
pop
push
xchg
in
test
and
jo
mov
dec
add
lock
mulb
mov
push
adc
sub
add
jns
inc
mov
js
std
mov
fwait
mov
cmp
out
lea
loopne
jae
mov
gs
pushf
into
cmp
repnz
aad
inc
ss
jecxz
inc
xor
mov
mov
pop
sbb
push
cmp
test
mov
in
test
jge
outsb
inc
sbb
insb
mov
movsl
arpl
leave
jb
ret
scas
push
jns
dec
leave
mov
gs
lock
inc
sub
shlb
aad
lahf
cltd
mov
mov
cmp
arpl
mov
sub
add
push
xor
dec
setnp
and
or
jo
mov
sbb
add
ss
pop
fstps
xchg
push
mov
jp
les
repnz
loop
jmp
dec
cli
test
jne
ja
pushf
fldcw
push
push
sub
xchg
sbb
adc
ljmp
cmp
mov
mov
pop
addr16
cmp
sub
outsb
lock
call
test
mov
push
mov
jbe
mov
in
inc
mov
lret
jp
jbe
outsb
pop
jae
mov
xchg
ljmp
in
pop
xchg
jmp
lods
xor
std
negl
pop
pop
push
leave
pop
dec
arpl
fnstenv
or
clc
jo
xchg
or
xor
lret
lret
add
push
sub
arpl
stos
repnz
ds
mov
icebp
lods
jg
xor
in
shrb
idiv
sti
mov
jnp
sub
sahf
inc
dec
xchg
repz
lret
adc
jnp
lds
daa
xor
push
mov
scas
sub
andb
fchs
cwtl
lcall
cld
les
add
les
mov
xchg
cwtl
shl
test
imul
stc
xchg
xchg
jae
adc
fldt
pop
out
mov
lods
jnp
repz
call
mov
adcb
mov
sahf
sub
or
stos
push
mov
jns
jnp
mov
dec
mov
sub
rorl
or
lcall
mov
out
mov
mov
xor
js
add
pop
xchg
jb
bndldx
xchg
inc
or
add
push
fstps
outsl
pop
fimull
inc
out
mov
mov
ret
shr
insb
pop
adc
sbb
add
jo
jmp
pushf
loop
cmp
rcrb
inc
inc
mov
adc
adcb
push
xor
pop
pop
sub
dec
xchg
outsl
out
maxps
pop
sbb
mov
add
dec
xor
outsl
cmp
push
jg
or
xchg
pop
fistpll
push
orl
inc
pop
adc
fdivs
inc
adc
xchg
push
sub
inc
notl
into
sub
push
jmp
bound
push
mov
adc
or
xchg
outsl
adc
fisttps
in
sub
mov
xor
xor
xchg
xlat
int
dec
dec
xorb
or
outsb
cwtl
out
ja
jp
insl
xchg
adc
jnp
mov
mov
in
jge
push
out
das
xchg
cmp
fsubs
int
pop
nop
repnz
sub
imull
xor
mov
mov
movsl
pusha
adc
dec
ret
cmpsb
pop
cltd
in
and
loop
test
xchg
add
cmp
mov
fdivrl
mov
add
es
pusha
mov
in
cwtl
ljmp
pop
data16
or
orl
adc
pop
mov
dec
adc
es
test
repnz
sarl
xchg
outsb
sub
xchg
pop
movsb
test
fsubrl
add
ds
jecxz
inc
sti
push
cli
pop
ret
inc
fcmovnu
insl
and
out
pop
dec
or
lock
in
pop
xchg
pushf
loope
mov
outsl
cmp
mov
jl
movsb
sub
xor
ret
sbb
lahf
mov
mov
mov
clc
sbb
adc
mov
loop
sub
rcpps
mov
jae
xor
jl
jne
push
inc
lahf
adc
bnd
push
je
je
mov
dec
repnz
cld
fwait
lahf
mov
push
sbb
loop
xchg
movsb
dec
mov
into
and
dec
cmpsl
push
aad
push
jns
mov
int3
mov
std
pop
pop
and
stos
pop
inc
stc
mov
pop
xchg
push
mov
jecxz
push
mov
add
inc
scas
scas
hlt
mov
in
ljmp
xchg
sbbb
scas
lret
inc
decb
test
push
and
sbb
or
sbb
push
movsb
loope
iret
and
mov
in
sub
dec
out
les
mov
jge
and
repz
fistl
int3
ja
sub
iret
js
es
inc
fsubrp
int
outsb
andb
mov
inc
push
aaa
adc
mov
fwait
repz
push
imul
int3
jo
cmp
and
cmp
ss
xchg
xchg
xchg
aad
sub
pop
inc
or
mov
nop
mov
xchg
mov
insb
pop
sbb
rcl
fnsave
lcall
out
and
xchg
fsubl
faddl
cmp
imul
xchg
call
lea
arpl
cwtl
sub
scas
sbb
inc
push
loope
repz
es
rclb
scas
movl
mov
jno
lods
inc
out
scas
add
jmp
notb
sbb
sbb
pop
aaa
mov
cli
cmpsl
pusha
push
mov
in
add
lea
push
inc
scas
xchg
push
mov
sbb
out
out
dec
ficoms
or
mov
dec
movl
repnz
stc
add
pop
add
dec
jge
data16
push
insb
ja
imul
inc
data16
jns
push
rcll
inc
inc
and
repz
movsb
and
add
and
fsubrs
dec
std
or
push
push
add
sub
repnz
lock
lods
lret
sub
sub
lret
imul
inc
lahf
add
js
in
add
adc
push
cmp
jno
data16
arpl
mov
das
cmpl
or
cli
jae
pop
adcl
push
outsl
or
xchg
pop
testb
mov
or
xlat
jae
out
lods
push
ret
jl
cmp
loope
test
sti
jg
add
clc
lahf
sbb
bound
pop
inc
mov
fstpt
clc
lock
or
mov
pop
dec
push
add
xchg
test
cs
les
sbb
cmc
ds
daa
dec
aas
pop
movsl
pop
int
push
je
mov
add
and
out
adc
mov
or
and
ret
mov
mov
and
fdivrl
mov
mov
fsubrs
adc
push
push
rcll
jbe
pop
push
add
mov
mov
xchg
es
cmpsb
xor
mov
or
xchg
add
or
test
lds
mov
out
mov
cmp
test
and
outsb
push
mov
pop
int
xor
shrl
das
push
repnz
xor
lock
xchg
pop
jne
dec
ret
mov
adc
sbb
or
cmpsl
mov
test
push
repnz
and
cmp
mov
repz
loopne
xchg
stc
or
jb
sbb
mov
sub
cltd
mov
pop
gs
cmp
cmp
dec
jmp
mov
movsb
out
sbbl
es
jb
jae
dec
ss
jp
arpl
das
sub
int
stos
iret
jmp
dec
mov
inc
sub
cmpsl
inc
or
mov
jecxz
loopne
mov
push
sti
dec
jg
and
xchg
push
repnz
cmpsb
mov
mov
mov
add
clc
pop
hlt
push
fidivl
xor
xchg
inc
cld
sub
mov
out
sbb
xchg
adc
pop
xchg
jecxz
es
xor
lahf
jbe
jecxz
stos
add
movsb
and
cmp
outsb
or
xchg
mov
adc
add
and
popa
jmp
dec
test
fs
cmp
mov
push
add
in
insl
push
roll
lods
dec
push
rcrb
mov
out
in
adc
add
cmp
push
cld
cli
mov
fldt
jl
movsb
mov
xor
mov
push
inc
dec
loopne
mov
pop
andb
xchg
arpl
sub
xchg
inc
lock
push
xorl
dec
jbe
sub
adc
icebp
jg
es
ja
xor
pop
jno
add
shl
jo
std
fadd
pushf
out
aad
and
mov
nop
addr16
mov
pushf
adc
jp
inc
push
jae
or
mov
sub
in
or
ret
mov
decb
inc
ss
jae
aas
scas
int
and
test
cmpsb
call
jge
lret
mov
and
out
das
lds
ret
int
push
fcoml
mov
fidivrl
in
cwtl
inc
jmp
pop
test
in
mov
and
outsb
lret
push
pop
jae
add
repnz
ror
shl
out
aaa
xor
dec
xor
shlb
mov
fdivrs
sbb
push
out
ljmp
push
push
dec
mov
jne
pop
xorb
mov
subl
xor
adc
push
mov
test
inc
les
pop
cmp
mov
in
sub
enter
fstpl
test
adc
test
mov
lea
xchg
lods
lea
pop
pop
sbb
push
shr
cmp
stc
cltd
sbbb
sbb
inc
pop
lret
test
fwait
je
sbb
addb
call
jne
sbb
and
scas
dec
mov
push
fcoml
mov
imul
sub
sti
xchg
fstps
out
jmp
push
addr16
mov
je
shll
or
mov
idiv
nop
popf
inc
fadds
insb
push
sub
sub
cmp
cmp
iret
dec
js
sahf
sub
xchg
pop
mov
add
add
hlt
sbbl
in
cmp
xchg
or
roll
out
jo
das
fstl
rol
mov
sub
inc
js
into
inc
jl
loop
sbb
jno
jne
lcall
into
jp
movsb
mov
pop
cmp
mov
fistpll
popf
cltd
mov
insl
xor
pushf
ja
push
aam
cmpsl
pop
xchg
es
cmpsl
out
lret
loop
mov
and
mov
mov
imul
mov
add
pop
mov
push
jecxz
fstpl
iret
jecxz
insb
hlt
xchg
cmp
and
mov
push
mov
or
mov
outsl
push
jge
sahf
fistpll
mov
scas
ret
hlt
jae
mulb
lods
jae
push
jge
mov
adc
push
imul
je
lods
aaa
popf
adc
lret
out
jp
int3
xchg
pushf
jle
pop
cmp
cmpsl
sbb
or
cmp
lcall
add
jo
xor
popa
dec
lahf
add
fistpll
mov
sti
xor
shr
sbb
jmp
add
push
push
mov
xor
adc
fs
sar
fs
into
lds
je
jmp
test
scas
int3
sbb
mov
decb
in
pextrw
outsl
or
xor
pop
pop
pop
outsl
shr
inc
andl
push
scas
push
arpl
popf
mov
mov
mov
mov
aaa
sub
xor
fwait
sbb
aaa
aaa
adc
into
xchg
incb
in
push
stos
push
insb
push
ret
xchg
shlb
pushf
jb
pop
and
mov
movsl
pop
shlb
mov
in
iret
daa
lahf
mov
jl
mov
je
imul
pop
xor
int
push
mov
arpl
jg
aam
mov
xor
push
mov
pusha
sbb
jge
lock
cmp
xchg
sbb
movsl
sti
dec
cmp
mov
jecxz
mov
movsl
mov
or
push
push
jmp
rcr
cltd
or
into
scas
lods
mov
adc
stc
loope
push
push
jae
jge
mov
mov
pop
std
das
cmp
jo
xchg
fdivr
into
pop
fwait
out
add
cmp
loop
jge
inc
pushf
xchg
std
mov
push
push
aad
into
sub
inc
mov
imul
aam
adc
enterw
push
or
pusha
mull
add
push
cli
or
or
push
ds
xrelease
jnp
js
cmpsl
dec
mov
and
push
pop
stc
mov
mov
adc
testl
or
xchg
daa
push
adc
xchg
insb
mov
enter
push
stos
xchg
and
stos
das
cmp
pop
lds
test
bound
xchg
dec
add
loopne
add
jp
cwtl
mov
inc
push
mov
sub
movsl
std
xlat
fisttpll
in
xchg
ficomps
push
mov
fdivr
push
sahf
gs
sbb
imul
dec
fbld
xor
push
inc
pop
cmp
ret
in
int
aad
jmp
inc
push
sarl
push
loop
fildl
rolb
lods
insb
mov
add
jb
sbb
aaa
popl
sub
sbb
sbbl
cmp
jg
test
ds
outsl
outsb
fs
ljmp
stc
push
push
rcrb
xor
cmp
out
mov
test
cmpsl
add
and
fbstp
jg
jle
lds
shll
sbb
fs
in
imul
sahf
testb
jl
dec
xchg
lds
or
xchg
mov
sbb
imul
or
and
stos
mov
pop
push
xchg
in
pop
js
adc
lods
cli
sbb
in
aaa
and
dec
dec
mov
mov
jge
and
or
mov
rcrb
outsb
xlat
pop
mov
lea
ret
mov
and
cmp
add
imulb
push
mov
add
pop
push
mov
xor
sub
jg
stc
movsl
fiaddl
sub
push
xor
mov
lret
mov
jnp
mov
xlat
xchg
xchg
pop
sti
rcrl
or
fchs
movsl
sbb
cmp
and
sahf
fiaddl
jge
orb
stc
sub
xor
and
cmp
leave
imul
fisubrs
int
sbb
cmp
and
out
mov
int
adc
or
mov
ret
jmp
lea
cmpsb
popf
adc
or
mov
mov
push
fwait
es
mov
es
cmpsl
sub
mov
adcl
pop
lahf
xor
enter
push
cld
jge
pop
jl
icebp
push
and
inc
mov
int
jle
std
shlb
mov
aas
jp
xor
cmp
sbb
loope
ljmp
push
cld
cmp
sbb
fnstenv
nop
leave
bound
std
cmp
fimull
je
sub
popf
sbb
out
rclb
jo
loopne
outsb
aam
jp
push
popa
iret
aam
cmpsl
xor
xlat
add
xchg
add
insb
cmp
cld
mov
pusha
nop
jno
mov
mov
mov
jb
popf
cmp
nop
inc
pusha
cmc
orb
and
mov
mull
sub
pop
lret
mov
clc
scas
pop
push
push
mov
and
lcall
sarb
sbb
jecxz
lds
and
mov
push
cmp
cwtl
rcrl
xor
and
loopne
int3
out
and
out
fs
shl
and
xor
xchg
jne
jo
pop
mov
or
fildl
int3
cmp
mov
les
inc
sbb
test
sbb
adc
push
sub
xor
movsl
xchg
sti
and
scas
push
xor
cmpsl
shrl
xor
cs
dec
pop
push
dec
add
out
jmp
ss
add
pop
xor
daa
xor
inc
loop
adc
fs
push
pushf
outsb
into
bound
outsl
hlt
add
xchg
loope
add
addb
bnd
cmp
rorl
or
jle
pop
rol
fucomi
imul
das
add
aas
gs
data16
xchg
fadds
decb
insb
movsb
xchg
add
lret
adcb
outsl
cmc
cs
add
ret
jb
cmp
xchg
iret
inc
push
adc
pop
fwait
mov
jb
outsl
pop
lods
sbb
jmp
mov
jae
movsl
xchg
xchg
push
and
mov
pop
imulb
addr16
movsb
jle
xor
or
aaa
jg
clc
fwait
mov
sub
pop
lcall
movsl
mov
mov
hlt
add
adc
loopne
sub
lods
out
cmp
iret
jb
addl
or
or
adc
fcmove
or
mov
ljmp
into
es
stos
cmp
in
fucomp
inc
add
push
xchg
dec
clc
ret
xchg
sub
cmp
lahf
cli
pop
cli
xchg
inc
fdivrs
and
int
pop
xor
hlt
push
ljmp
clc
sti
stos
add
mov
sahf
rcll
ficoms
iret
andb
es
mov
jne
mov
sub
pop
pop
xchg
push
push
cmc
repnz
aas
sub
sbb
jne
inc
nop
or
sbb
jl
fcmovb
insb
fs
or
fldcw
mov
int
xchg
cmp
pushf
sahf
mov
movsl
adc
inc
jno
shll
popf
xor
daa
sub
pop
mov
dec
dec
insl
and
sub
push
and
adc
sahf
iret
cmp
stos
add
sub
sahf
rclb
mov
inc
das
ds
mov
call
cmp
fcomps
loopne
pop
jmp
xchg
and
pop
adc
pop
sub
xor
inc
sub
aas
testb
fnsave
addl
popf
adc
imul
xor
push
mov
add
cwtl
in
pop
pop
mov
pop
inc
push
cwtl
add
stc
iret
cli
stos
sub
imul
test
pop
push
imul
and
dec
fs
addr16
sbb
adc
daa
aaa
xor
and
cltd
xchg
out
pop
ss
push
mov
mov
push
adc
out
pop
cs
into
jmp
xchg
fs
popa
mov
jg
sub
dec
or
imul
mov
mov
call
test
scas
ljmp
addr16
ja
test
push
fs
cld
push
test
xor
in
inc
rol
repnz
adc
jae,pt
xchg
pop
pop
mov
shll
push
insb
stc
or
xchg
sbb
dec
imul
mov
ret
push
outsl
sbb
imul
pop
mov
in
jbe,pn
movsl
add
inc
add
test
mov
jp
push
cs
xchg
push
mov
push
repz
das
out
sbb
xchg
xor
sub
dec
cmpsb
js
out
jmp
push
arpl
movsb
enter
and
stos
add
test
enter
out
cmp
aaa
in
lcall
sarb
imul
mov
cli
or
add
or
inc
cmpb
inc
cmp
xor
ds
xchg
inc
or
push
sub
push
aam
jne
out
push
cld
cli
xchg
adc
mov
sub
pusha
dec
cmp
push
xchg
rcl
sub
xor
mov
sbb
imul
sbb
pop
and
icebp
insl
fadds
jle
mov
xchg
and
and
xchg
dec
or
push
out
cwtl
push
pushf
dec
fiadds
je
ja
lods
xchg
jae
arpl
xchg
imul
dec
enter
adc
sub
push
mov
jmp
xor
sbb
dec
sbb
inc
nop
imul
sub
push
aad
movsb
xor
stos
add
and
mov
xlat
fwait
adc
dec
orb
adc
fcoms
lcall
stos
les
sbb
in
pop
xchg
sub
pusha
pop
mov
mov
adc
movl
shl
mov
inc
cmp
mov
repz
adc
mov
daa
fstpl
repnz
enter
adc
iret
jnp
jg
or
scas
ds
jl
cmp
pop
lret
adc
scas
add
out
push
shlb
xchg
inc
in
call
add
adc
xchg
and
cmp
pop
cli
fistps
xor
jg
and
call
scas
mov
mov
adc
dec
ret
addl
ret
mov
jns
lods
das
and
or
pop
add
sbb
arpl
rcr
sub
cmpsb
jb
dec
scas
sbb
jecxz
sub
lahf
hlt
inc
jmp
cmpl
std
jle
out
pop
adc
ror
popa
jbe
cmp
dec
sahf
stc
loopne
jmp
fwait
ja
mov
addr16
xchg
pusha
mov
xchg
jo
fisttpl
jle
pusha
pop
sbb
mov
mov
in
push
sub
push
popf
frstor
xchg
dec
cltd
xlat
jp
xchg
cltd
xchg
cmpl
insl
sti
cmp
les
cmp
test
or
sbb
xchg
mov
jg
pop
test
cmp
xor
jne
sti
lahf
fs
xchg
mov
mov
mov
jne
dec
outsb
pop
dec
stos
push
in
jp
arpl
stos
shll
ja
jne
inc
xchg
das
jb
ret
sbb
clc
cld
fbstp
adc
pusha
test
jno
outsl
or
sub
rcrl
movsb
pop
sub
jb
jae
lret
dec
aad
push
add
cmpsl
mov
sub
xchg
pusha
dec
and
push
jne
cmp
fwait
rclb
cmp
mov
iret
or
cmpsb
xchg
out
sbb
dec
jne
out
push
fcmovbe
and
shr
mov
cmp
pusha
push
jg
add
cmp
xchg
out
pop
xchg
fisubl
ret
xchg
cmp
fcoml
push
mov
fwait
jle
dec
or
pop
xor
mov
jmp
nop
insl
mov
daa
push
add
mov
lods
push
test
stc
ljmp
rol
jge
ljmp
sti
enter
jo
inc
frstpm(287
dec
hlt
imul
sub
push
stos
cs
fdivr
xor
inc
arpl
gs
dec
adc
popa
ja
enter
adc
adc
in
sub
test
ficomps
xchg
jbe
mov
mov
sub
mov
mov
jnp
xchg
pop
cmpsb
in
mov
cmp
fwait
pop
mov
test
jle
jb
mov
inc
into
btc
push
cs
pop
fisubl
or
aas
inc
jl
test
cmp
test
daa
mov
push
xchg
cli
jno
mov
add
mov
cmp
mov
arpl
sti
wrmsr
imul
or
jg
pop
pop
pop
rolb
in
int3
jno
jo
cli
mov
and
testl
sbb
dec
enter
dec
push
ret
jo
cli
sbb
sbb
jg
push
xchg
xchg
je
movsb
pop
cmpsb
adc
out
and
lret
mov
mov
hlt
insl
rcrl
add
mov
int3
imul
dec
data16
xlat
adc
scas
jns
xor
shlb
mov
es
int3
xor
stos
jns
stos
xchg
mov
mov
leave
sbb
sub
pop
int3
adc
int3
lret
push
xchg
add
imul
adc
insl
dec
jo
push
push
leave
mov
loopne
ret
cmc
or
push
or
roll
and
lret
fstpt
jl
xor
adc
mov
add
mov
mov
outsl
or
sub
inc
popw
adc
sti
aaa
icebp
movsl
iret
aam
adc
jl
stc
mov
pop
dec
mov
sbb
dec
inc
inc
cld
es
aad
jae
dec
mov
dec
and
lret
or
test
push
sahf
out
mov
movsb
dec
jno
test
xor
cmp
cmp
adc
dec
testb
adc
ds
xchg
or
fnstenv
aam
mov
sbb
insl
out
push
sbb
sti
cs
jae
sub
jl
iret
insb
lods
sbb
add
inc
xchg
mov
push
jbe
movsl
clc
sar
inc
push
adc
mov
popa
ds
fadds
push
fistpl
push
ret
adc
imul
lods
lock
in
add
pop
push
cmpsb
sahf
out
cmp
stc
cli
insb
cmp
mov
fsts
jnp
jne
add
fs
pop
pop
sti
out
jg
loopne
movsb
test
out
dec
insl
rorb
inc
cmpsb
xor
xchg
mov
cmpsl
sar
pop
or
mov
mov
push
jb
loope
mov
or
inc
aam
mov
mov
js
xor
xchg
and
rolb
daa
fwait
push
sahf
xchg
mov
in
or
sbb
aad
data16
fdivr
gs
cmp
stos
xchg
sub
jecxz
shll
in
inc
arpl
imul
cwtl
push
xor
mov
push
jp
adcb
jmp
fsub
mov
int
dec
push
inc
mov
cmp
sub
aaa
or
jne
outsb
sbb
add
push
mov
or
insb
push
pop
dec
call
imul
pop
mov
dec
shll
lahf
xorl
leave
mov
cmp
push
sbb
mov
xor
mov
push
popa
adc
movsl
in
pop
jb
cmpsl
mov
dec
dec
jnp
loope
fldl
mov
es
push
xchg
add
mov
add
jp
out
xchg
mov
xchg
pop
jno
pop
jns
lea
stc
xchg
in
and
inc
gs
rclb
mov
xchg
and
cli
movq
leave
jle
mov
es
ret
dec
mov
lock
std
cmp
stc
movsb
pop
enter
xchg
inc
xlat
ret
outsb
fwait
call
imul
sbb
in
sbb
inc
inc
es
in
mov
push
mov
jb
mov
or
push
out
and
add
add
xor
std
mov
std
adc
inc
cmp
and
sub
xor
mov
pop
sahf
ja,pn
or
arpl
jmp
flds
mov
add
xlat
add
cmp
mov
int
mov
push
adc
mov
push
jp
or
sti
jmp
xor
push
nop
aad
je
arpl
cltd
inc
adc
dec
adc
sub
xor
mov
cmp
test
sbb
and
push
out
mov
add
out
stos
loop
rcrb
out
adc
sub
mov
in
lea
push
stos
push
and
and
and
lea
loop
movsb
mov
dec
rcrl
lret
movsb
pop
inc
dec
sub
jo
out
loopne
mov
sbb
add
push
push
ljmp
test
sarl
mov
and
rcr
xchg
imulb
jnp
dec
cmp
das
mov
ret
pop
jne
push
pop
sub
daa
test
xchg
sti
cld
or
push
scas
leave
dec
pop
ljmp
gs
and
and
sbb
cld
daa
orps
mov
std
sub
or
into
scas
lods
jno
jp
sbb
jmp
xchg
insb
cld
adc
mov
dec
movsb
xor
enter
add
cmp
adc
scas
jl
mov
mov
mov
adc
add
cmp
les
int3
and
sti
cld
inc
movsl
cmp
movsb
fxam
das
in
adc
jne
sahf
add
rcr
mov
shll
sahf
mov
mov
mov
test
pop
jecxz
mov
xor
add
lcall
jae
in
sbb
cmc
in
or
xor
lret
inc
adc
inc
sbb
fisubs
mov
mov
aas
pop
mov
gs
push
xlat
bound
imul
add
into
shll
cmp
xchg
cwtl
les
jb
rcll
ret
in
es
mov
and
cmp
adc
xor
stc
mov
sub
xchg
aaa
mov
and
in
mov
mov
arpl
mov
cmpsl
or
xchg
stos
pop
mov
outsl
mov
cmc
lahf
jne
push
lea
sbb
push
call
pop
ret
test
dec
pushf
pop
xchg
aad
jmp
lods
jle
lret
jp
aaa
xor
and
rol
sub
ret
data16
mov
js
movsb
or
push
adc
xor
adc
enter
xchg
mov
xchg
test
ds
lods
cs
mov
push
repz
inc
or
clc
mov
out
jae
inc
movsb
fnop
cwtl
mov
orl
mov
es
cmpl
cltd
xor
sahf
cmpsl
inc
js
xor
subl
call
imulb
add
aaa
aas
or
sub
nop
imul
arpl
filds
sbb
pop
dec
cmpsl
xchg
lahf
insl
add
mov
mov
stc
iret
cmpsb
aam
into
shlb
mov
shrl
xchg
fs
cmp
icebp
push
adc
arpl
mov
add
xchg
mov
mov
add
fistpll
xchg
add
sub
mov
ja
scas
jl
adc
dec
rcr
aad
insl
shrl
xor
je
test
mov
into
xchg
adc
mov
xor
pop
jae
mov
xor
dec
addr16
add
outsb
test
pushf
add
sti
cmpb
out
jno
pop
sub
mov
mov
jle
mov
ja
sbb
push
cmp
adc
ja
out
mov
aad
xchg
lds
and
fsubrs
mov
les
cld
mov
push
fidivl
mov
add
fmulp
push
mov
adc
mov
mov
outsl
pop
enter
jno
push
adc
push
and
mov
push
sub
enter
sbbl
idivb
lret
mov
dec
aaa
out
fisubrl
iret
fwait
add
cli
push
lock
out
inc
adc
fwait
pop
inc
dec
or
movsl
sub
mov
or
fdivr
shlb
leave
int3
sbb
cltd
xchg
or
cmpsl
fdivrs
jl
mov
push
into
mov
arpl
cmp
dec
xor
pusha
sub
push
inc
push
jnp
or
or
repnz
pop
jnp
aam
data16
add
jbe
pusha
add
jne
or
mov
mov
xor
mov
outsb
mov
sbb
jns
ret
shrl
push
insb
insb
pop
jns
cmpsb
cmp
jo
xchg
xor
cwtl
push
mov
out
stc
mov
and
arpl
test
push
jp
adc
push
adc
ret
push
pop
dec
cmp
mov
pop
ja
sahf
fsubrl
xchg
fmull
dec
mov
xchg
in
push
hlt
adc
push
ja
pop
pop
jmp
xor
cwtl
push
test
ja
in
mov
jbe
xchg
loopne
sbb
bound
dec
add
cmp
loopne
clc
in
push
mov
in
int3
faddl
xchg
scas
ret
add
sbbb
fs
xor
inc
push
inc
movsl
rol
imul
pop
sahf
adc
xchg
ret
cmp
mov
jmp
or
test
loope
inc
punpcklbw
push
out
in
cltd
xchg
cmpb
int
add
addr16
jge
fwait
clc
cmp
sti
xor
push
jg
lods
inc
inc
cld
xor
push
mov
push
adc
std
push
in
shrb
sub
cli
jmp
imul
sti
fstps
sub
push
xor
jl
cmp
add
aaa
or
cmpsl
pushf
filds
insb
sti
jl
lret
pop
mov
in
adc
gs
or
dec
mov
push
inc
fbstp
das
cmp
fcom
es
hlt
mov
stc
bound
nop
or
mov
and
adc
fbstp
inc
fldenv
stos
xchg
mov
sub
pop
and
pop
mov
jmp
mov
into
add
sbb
insb
mov
call
shr
jge
fsubrs
push
int
or
adc
out
loope
mov
or
xlat
sub
rcrl
int
push
lods
push
stos
scas
cmp
jno
xchg
inc
data16
mov
lock
mov
insb
sbbb
adc
popf
adc
cld
nop
jbe
jge
jmp
insb
sub
mov
loop
sti
icebp
scas
mov
cmp
xor
je
loope
jge
ja
push
inc
movsl
jnp
cld
negl
add
or
cmp
sti
push
insb
xchg
inc
cmc
jnp
sbb
or
mov
aam
xchg
sbbb
inc
mov
or
jmp
cmp
add
pushf
mov
insl
adc
in
lcall
dec
movsl
inc
popf
mov
dec
push
mov
inc
mov
mov
push
adc
push
cmp
movl
jbe
pop
gs
jl
data16
mov
jae
or
jae
arpl
dec
in
in
mov
jecxz
xchg
jns
sbb
xchg
in
sarb
mov
in
daa
push
push
inc
fs
mov
push
pop
inc
push
push
xor
fists
nop
push
loopne
repz
cld
mov
cli
dec
or
mov
pop
jnp
jbe
enter
repnz
movsl
push
pop
mov
mov
sbb
pop
lahf
add
xchg
rcrb
pop
stc
test
imull
fcoml
cld
dec
fwait
dec
lcall
lock
sub
scas
imul
sbb
cmp
push
xor
push
and
sub
pop
negb
push
cmp
cmpsl
lock
mov
mov
dec
mov
loopne
jecxz
and
mov
dec
pop
lock
xchg
leave
xchg
negb
ljmp
dec
inc
jmp
xor
mov
mov
icebp
or
sub
sti
outsb
mov
hlt
xchg
inc
mov
sbb
push
dec
xchg
inc
xchg
outsb
js
lahf
or
fimull
andl
mov
mov
lock
mov
ud2
dec
js
or
fsubrp
pusha
sbb
and
js
cwtl
jecxz
and
or
push
xchg
dec
ret
inc
and
test
adc
subb
cli
fnsetpm(287
pop
push
test
test
fists
mov
jo
or
hlt
adc
pop
jno
clc
lods
mov
mov
mov
pushf
fdivrs
cwtl
ss
xor
jg
arpl
mov
insl
incb
repnz
push
pop
js
fisttpl
test
cmpl
jg
outsb
mov
adc
fmuls
out
shll
test
mov
sub
int3
popf
add
pusha
xor
shl
les
int3
pop
fwait
push
subb
js
packssdw
daa
into
sub
push
pop
sub
push
adc
push
pop
je
fidivrl
mov
cmc
and
push
cmp
and
and
xor
lds
enter
jl
into
inc
dec
jl
sub
adc
push
out
outsl
test
aam
pushf
fidivl
mov
lock
insb
pusha
ss
loopne
add
jge
stos
out
testl
and
add
pop
pop
cmpsl
adc
pop
pop
xchg
inc
xchg
cld
lock
or
xchg
mov
test
into
outsb
int3
mov
test
sub
sarb
jp
stos
push
mov
push
arpl
mov
insl
jle
ret
jl
in
adc
test
push
xchg
adc
es
pop
dec
push
inc
out
mov
lods
test
rcrb
xchg
iret
out
mov
adc
sbbb
push
adc
mov
stos
sar
int3
inc
ret
push
test
mov
jo
mov
mov
test
iret
and
out
dec
mov
clc
in
pop
in
scas
sbb
adc
movl
ds
clc
pop
and
xchg
jno
enter
and
test
cli
add
jnp
gs
xchg
repz
lock
pslld
in
push
dec
loopne
cwtl
xchg
lods
pop
pop
jbe
push
pop
mov
in
loopne
pop
push
xchg
filds
inc
sub
xor
push
mov
and
imul
popa
mov
loop
push
jp
aas
fwait
sbb
pusha
inc
pop
lret
pop
cmpsl
insb
std
jl
das
fisubrs
gs
inc
xor
aam
jo
in
dec
fcoms
pop
adc
push
inc
sub
mov
sub
sahf
add
xor
and
test
jmp
jno
movsl
inc
mov
mov
enter
ljmp
jmp
aad
or
sbb
sbb
jl
popl
ds
leave
sub
ret
cmp
cmp
cmp
in
mov
push
nop
or
outsb
inc
mov
jp
out
and
push
lds
pushf
rcrb
push
jmp
std
dec
mov
clc
mov
fidivl
divb
push
sbb
jecxz
arpl
fmulp
js
sub
cld
loope
cmp
mov
outsl
jecxz
xchg
jno
iret
ljmp
sbb
fsubl
xchg
cltd
mov
fnstenv
xlat
insb
mov
or
cmp
outsl
push
mov
inc
jne
nop
stc
outsl
pop
out
mov
xor
sbb
cmp
stos
jns
movsl
popf
movsb
inc
mov
iret
pop
xchg
out
repnz
sub
mov
push
fnstenv
icebp
pop
cmp
fbstp
xchg
aaa
repnz
mov
mov
mov
jae
out
lods
mov
pop
push
shrb
cwtl
add
je
insl
jge
mov
mov
stos
scas
in
adc
out
pop
sbb
outsl
lea
jp
cltd
xchg
mov
pop
fwait
cmp
pop
adc
outsl
imul
stc
roll
or
dec
ds
dec
jnp
or
stos
inc
clc
push
mov
adc
jbe
int3
loop
mov
iret
cltd
add
cmp
fidivs
sahf
cmp
loope
popa
aad
adc
sbb
mov
subl
std
xor
out
adc
fildl
xor
enter
or
jg
std
popf
ret
adc
pushf
add
cs
cmp
lahf
std
jns
adc
xchg
fdiv
insb
cld
mov
xlat
fnstsw
pop
mov
into
fsubp
inc
adc
out
jae
pusha
jae
cmp
xor
pushf
enter
jb
pop
fsubl
lcall
js
imul
or
and
imul
aaa
std
leave
jnp
icebp
ja
xchg
ljmp
ljmp
jmp
pop
mov
push
mov
jmp
sbb
lods
cld
bound
and
fcom
popa
xor
cld
inc
push
lea
or
enter
sbb
loop
mov
clc
dec
mov
repz
mov
nop
sbb
xor
cs
jno
xor
test
sub
xchg
xor
push
and
cmpsb
out
popf
fidivs
loope
mov
js
push
jecxz
mov
sbb
adc
dec
mov
fincstp
pop
sub
decb
lcall
xchg
es
push
xorl
add
das
iret
dec
mov
insb
loope
push
and
mov
orb
xor
pop
sub
mov
fidivl
xchg
adc
jecxz
sub
jp
mov
pop
and
daa
popf
push
pop
fdivp
pop
dec
jae
in
jmp
incb
popf
imulb
xchg
mov
fwait
addl
lods
jae
fnstsw
test
out
test
jb
adc
pop
inc
cmp
or
jnp
imul
mov
in
dec
add
cltd
mov
dec
push
iret
lahf
adc
jne
and
std
push
inc
mov
and
iret
cmp
sub
jae
in
cmp
stc
fcomip
jle
pop
push
mov
push
movsl
dec
mov
enter
inc
mov
or
sub
sub
shlb
out
faddp
push
mov
and
in
cltd
mov
cs
lea
xlat
adc
out
out
je
sbb
pop
jp
aaa
cmpsb
xor
fnstenv
data16
mov
jno
insl
adc
andb
test
sti
sbb
xor
mov
jns
cli
imul
pop
or
adc
dec
mov
dec
int3
mov
ljmp
xchg
cltd
inc
jecxz
mov
inc
adc
repnz
mov
fistl
mov
xor
mov
pop
rcr
lret
push
adc
arpl
les
or
loope
sbb
aam
push
lcall
and
push
xor
xchg
lods
pop
and
daa
mov
and
mov
inc
repz
mov
mov
lret
jp
mov
into
xor
lar
jmp
shl
cmpsb
fucomp
dec
pop
flds
pop
xor
je
mov
jo
jp
mov
out
daa
xor
shr
lcall
and
pop
call
jo
aaa
and
scas
frstor
fisttps
inc
sbb
mov
bound
and
push
repnz
subb
popa
in
inc
jnp
cld
jno
mov
iret
mov
push
sbb
imul
push
addb
mov
xor
lahf
lret
inc
outsb
sarb
movsb
sub
hlt
or
mov
push
push
popf
mov
clc
sub
je
call
nop
fisubl
adc
imulb
in
inc
mov
lods
xchg
or
movsl
push
sbb
inc
xchg
pop
shrl
pop
xor
sbb
stos
pop
fwait
in
fs
mov
pop
call
mov
lcall
or
cmp
iret
rclb
loopne
jg
es
pushf
or
add
in
jecxz
mov
gs
xchg
push
fucom
mov
fisttpll
adc
or
repz
add
xlat
test
ror
pusha
not
cmp
movsl
push
and
inc
cmp
jne
sahf
add
mov
in
jne
xchg
mov
sub
mov
lret
mov
pop
jno
adc
arpl
les
and
adc
stc
mov
add
shrl
push
xlat
add
sbb
mov
test
xchg
fbstp
xor
push
out
inc
cmpsl
lret
xchg
jno
stc
addr16
ss
push
movsb
or
lds
lods
jo
pop
je
jg
call
std
inc
xchg
imul
ljmp
lret
flds
mov
iret
cmp
cmc
test
push
inc
mov
fildl
pushf
lods
xor
test
adc
mov
push
dec
inc
fs
test
rcrb
jmp
cmp
dec
mov
aad
mov
sbb
loopne
sub
jl
icebp
xchg
out
xlat
cmp
adc
stc
aam
sbbb
jmp
daa
cmp
or
pop
addr16
push
dec
xchg
arpl
std
xchg
xchg
push
test
push
cmpsb
push
ja
arpl
pop
jae
testl
sub
sarl
in
andl
mov
sub
fmul
push
xlat
push
and
jmp
dec
repz
outsl
je
lcall
sti
dec
and
and
shrb
mov
mov
mov
and
mov
aad
push
xchg
pop
sbb
jl
fcomps
std
lcall
data16
sbb
or
add
jp
out
add
dec
outsl
or
fsubp
jnp
jecxz
popa
sbb
out
sub
sbb
sub
and
mov
das
lret
sbb
adc
fwait
mov
jp,pt
pop
shrl
cwtl
push
sub
mov
fs
jecxz
sub
inc
and
xor
or
fcom
scas
adc
test
inc
insl
xchg
je
ret
jo
pop
adc
enter
sbbl
jmp
mov
ss
les
daa
rdtsc
cltd
enter
mov
popa
fisubrl
xor
mov
cs
jns,pt
inc
mov
repnz
and
ret
lock
imul
mov
insl
mov
mov
lods
inc
jae
sahf
ret
xchg
lahf
stc
adc
mov
cmpsb
mov
adc
mov
std
stos
push
outsb
jnp
int3
shl
gs
jmp
xor
xor
mov
pop
shl
mov
ss
add
adc
mov
addr16
jne
dec
cmpsl
pop
dec
push
fdivrl
push
lds
jp
jno
adc
loopew
mov
inc
pusha
sbb
mov
mov
or
push
pop
and
jg
sti
sub
cmp
int
add
cltd
mov
aas
pop
testl
daa
aad
mov
jns
nopl
mov
sahf
push
sub
fsubp
mov
loop
imul
xor
in
pop
and
mov
cmp
or
nop
leave
jl
lret
sub
stos
imul
or
cld
jecxz
sub
mov
adc
stos
adc
dec
sbb
mov
push
mov
ljmp
adc
push
je
or
nop
jo
adc
into
imul
sarb
bound
jb
in
push
cs
mov
xchg
and
lock
scas
fistpll
loopne
pop
insb
rolb
pusha
xlat
lea
repnz
cmpsb
aas
inc
dec
xor
das
sub
hlt
sbb
mov
jb
mov
pop
clc
in
outsb
mov
mov
out
jmp
stos
lds
dec
iret
inc
or
cmp
out
dec
fcoms
int
mov
je
sub
cmp
imul
inc
mov
fs
mov
inc
jns
xor
ret
mov
lahf
rclb
adc
mov
xchg
mov
sbb
lods
gs
jns
jg
xor
mov
jmp
loopne
and
clc
mov
popf
xor
jbe
cli
or
xor
addl
clc
and
inc
add
es
sub
sub
dec
scas
mov
outsb
mov
adc
outsb
pop
data16
cltd
push
sub
sahf
pop
xchg
mov
call
push
out
xor
jne
sbb
jno
push
pop
out
jp
adc
mov
xchg
sbb
das
or
adc
jno
and
xor
mov
sub
fldcw
cld
jbe
movsl
pop
mov
xor
pop
push
fcomps
adc
push
lods
xor
sub
sbb
mov
mov
xor
addl
pusha
cmp
js
std
and
push
xlat
cs
xchg
test
cld
nop
and
mov
sub
push
xchg
stos
out
lret
jb
jg
sahf
ss
test
or
push
cmp
sbb
adc
insb
loope
aam
cmp
mov
add
repnz
and
inc
cmp
jns
push
dec
xor
push
dec
fmulp
aam
fwait
mov
sbb
adc
aad
mov
mov
or
out
mov
imul
in
push
rep
pop
bound
fcoms
dec
pusha
mov
pop
xor
sti
cmp
ljmp
dec
and
xor
push
in
scas
xchg
mov
mov
jae
les
sbb
add
or
and
addb
into
fimuls
mov
xchg
mov
add
mov
fcoms
imul
sub
fucomip
test
jb
xchg
outsl
sbb
insb
insl
mov
push
add
xchg
shlb
imul
test
pop
sub
mov
lcall
ds
and
or
outsb
xor
iret
popf
xchg
pop
iret
rol
scas
mov
jb
mov
out
inc
inc
push
in
add
ret
out
ret
cli
out
pusha
mov
cld
fs
fisubl
dec
dec
mov
fiaddl
or
call
aas
and
lock
pusha
jno
adc
call
outsb
outsb
mov
jmp
jnp
iret
mov
cmp
loope
pop
push
int3
dec
or
clc
sahf
testl
les
inc
pop
or
stos
xor
mov
xchg
push
cli
and
fs
loope
dec
testl
cmp
mov
mov
test
andl
mov
sbbl
pop
gs
lcall
xchg
inc
mov
sub
xchg
ljmp
shlb
add
push
xor
out
xchg
jl
or
in
sbb
add
and
imul
out
les
cmp
lret
mov
mov
jle
mov
sub
stos
xor
add
outsb
nop
or
inc
cmc
scas
push
adc
out
test
pop
mov
mov
stc
xor
sub
push
sbbb
cs
fstpt
mov
pop
outsb
sub
mov
cmc
mov
jecxz
in
push
cmp
or
std
jo
cwtl
xor
and
xchg
dec
aas
les
orl
sahf
fxch
imul
roll
lret
and
out
mov
push
xchg
xor
inc
and
sub
scas
jmp
dec
jae
cmpsl
leave
loop
mov
cmp
xchg
outsb
xchg
inc
add
push
jnp
nop
lcall
xor
mov
clc
fmull
out
push
mov
mov
mov
movsl
lret
test
mov
pop
pushf
xor
test
rol
shl
js
xchg
pushf
and
cmpb
cmpxchg
insl
lahf
add
ss
dec
test
insb
dec
popa
push
push
out
lea
pop
sub
cld
lret
jmp
rcr
fimuls
cwtl
or
pop
sub
jo
pop
insl
shlb
stos
jo
dec
fistl
imul
mov
sbb
mov
aas
sub
jg
mov
in
stos
je
jge
fld
and
cmp
in
ds
push
mov
nop
adc
jne
jg
mov
pop
scas
or
std
dec
ljmp
push
push
out
jnp
push
test
cmp
push
dec
in
lea
mov
sub
imul
adc
ror
sub
repz
mov
fwait
jb
cmpl
aaa
jl
mov
or
jmp
call
xor
push
cwtl
loopne
iret
mov
imul
mov
mov
add
in
test
jbe
scas
rol
add
inc
dec
or
hlt
cmp
cmp
mov
seto
push
lods
shrl
mov
jo
cwtl
push
inc
cmp
in
sbb
or
dec
lahf
jae
lahf
stos
xchg
inc
mov
ret
cltd
cmpsl
xchg
jns
xlat
movd
xchg
pop
in
fistpll
lret
push
dec
jns
call
mov
mulb
and
les
pop
jge
add
adc
sbb
imul
nop
cmp
cwtl
cltd
dec
dec
stos
jo
dec
sub
imul
fldt
sbb
inc
sub
xchg
mov
adc
test
jl
inc
xor
and
sti
xchg
fnstcw
lahf
jb
ret
and
sub
dec
ret
sub
add
int
lods
lods
fldcw
testl
arpl
pop
xchg
sub
xchg
sarl
inc
sub
aam
sub
add
mov
mov
insb
aam
fcompl
ret
imul
insl
dec
addr16
insl
or
in
stos
or
adc
fistps
les
adc
adc
arpl
stos
xlat
mov
xchg
push
leave
mov
mov
shlb
pusha
lods
fwait
dec
loopne
aad
stos
stos
push
cld
stos
jl
jb,pn
xchg
pop
in
int3
arpl
loop
int3
cmp
jp
sbb
loope
mov
movsb
sub
cs
and
jmp
data16
pop
idivb
cmp
lret
fadds
pop
mov
xor
dec
sbb
mov
sbb
ljmp
out
cli
mov
movl
sub
scas
in
arpl
add
xchg
mov
lea
push
pop
inc
in
ror
gs
ret
decl
stos
push
ljmp
fidivrs
jle
sub
in
xor
mov
nop
loop
sub
pop
dec
test
std
in
leave
shlb
sbb
sarl
xchg
movsl
pop
dec
outsb
cmp
mov
mov
xchg
lret
fwait
push
dec
cld
or
sub
sub
dec
xchg
jb
inc
aaa
pop
mov
or
lahf
mov
test
push
daa
push
in
flds
xor
xchg
jno
je
xor
mov
test
movsl
ds
fistpl
mov
adc
lcall
movups
ljmp
push
push
xor
push
imul
adc
adc
xor
push
pop
xchg
test
inc
push
sbb
jns
sub
in
inc
cmp
pop
sub
cltd
cmp
add
je
jno
add
add
mov
pop
iret
push
xchg
xor
out
xchg
adc
add
in
sub
into
xor
mov
daa
pop
cmp
scas
fbld
mov
idiv
pop
mov
jmp
push
xchg
jle
hlt
scas
mov
adc
inc
add
int3
dec
sub
dec
adc
xor
scas
sahf
call
je
ret
testl
pop
insl
xchg
mov
cmc
sbb
pop
sub
insl
les
push
add
xlat
inc
jge
loop
bound
ja
adc
adcl
xchg
or
push
xchg
repz
mov
adc
cmp
jns
pop
jbe
stos
xchg
ja
sbb
pop
mov
jp
xor
and
in
dec
pushf
inc
psrad
cwtl
cmp
or
daa
int
push
rcl
inc
in
jb
jns
int3
cltd
push
xchg
xor
sub
sub
test
add
sbb
test
sub
ret
sbb
adc
mov
lahf
push
xchg
into
inc
mov
in
clc
movsl
cli
adc
hlt
cmc
dec
jp
idivl
cltd
dec
movsl
out
lds
push
pop
adcb
inc
in
mov
mov
pushf
inc
pop
sbb
shll
lret
inc
mov
andb
xor
mov
sbb
ret
rcrb
push
xchg
popa
sti
mov
decb
int
push
add
repnz
stos
sub
or
pushf
inc
dec
repz
fdivrp
inc
push
lods
cmp
xor
out
mov
dec
icebp
pop
roll
cmovp
mov
nop
rcrl
dec
add
lret
cmpsl
in
les
xor
mov
and
pop
pop
pushf
les
mov
cmpsb
jns
cs
test
bound
std
cmp
and
test
adc
adc
lods
cs
ds
test
ror
inc
dec
ss
mov
in
sbb
int
movsl
fisttpll
pop
sti
or
pushf
pop
mov
jo
mov
insb
pop
or
call
fidivs
jl
dec
mov
cmp
mov
clc
into
jne
mov
aad
aad
or
das
je
ficoms
mov
xchg
aad
jge
repnz
mov
leave
cs
mov
mov
out
inc
pop
mov
pop
cmp
outsl
in
test
das
xchg
or
add
jb
xchg
mov
adc
out
lret
test
xor
cmpb
sti
movsl
or
addr16
rcl
outsl
add
xor
in
sub
icebp
inc
dec
daa
cmp
pop
lock
arpl
shlb
das
pop
cs
sbb
sbb
mov
sbbb
ja
mov
add
loop
pop
popa
xor
addr16
ja
dec
cli
aad
pop
jge
fistl
sub
out
outsb
dec
pop
addr16
mov
pop
mov
mov
popa
gs
insl
add
hlt
cli
jecxz
cmpsb
and
outsb
mov
fwait
int3
out
test
dec
jo
sbb
or
xor
cld
popf
or
lods
push
cltd
sub
into
inc
push
mov
fstps
cmpsb
xorb
pop
pop
mov
sti
cli
mov
push
mov
pop
ret
cli
iret
adc
jmp
addr16
jecxz
jecxz
cmpsl
stc
push
shll
xchg
adc
fwait
jbe
xchg
cmp
dec
imul
push
inc
dec
outsb
mov
jg
int3
mov
push
std
dec
inc
pop
fisttpl
fdivs
stos
dec
jl
mov
jecxz
icebp
add
mov
cli
jnp
cmovns
stos
mull
push
dec
or
xlat
or
sub
or
jns
cmp
xchg
mov
lea
cs
push
les
sbb
xor
movsb
jmp
adc
fs
and
enter
imul
nop
push
xorl
inc
test
fnstcw
enter
arpl
dec
mov
call
adc
mov
jnp
mov
loope
movsl
cltd
pop
dec
xchg
mov
push
dec
pushf
xor
dec
xlat
push
aad
aas
mov
adcb
stc
xchg
xchg
insb
cmc
lret
add
sub
fsubl
out
mov
movsb
insl
jmp
jo
adc
int
sti
into
mov
jne
dec
mov
pop
stos
inc
out
pop
test
dec
mov
lods
xor
mov
xchg
cmc
icebp
outsb
xlat
les
dec
xlat
pop
add
mov
mov
aas
add
fidivrl
inc
pop
fs
sub
jecxz
inc
lods
out
rcl
loope
mov
mov
or
jp
or
and
adc
mov
and
mov
mov
ds
mov
sbb
orb
dec
lret
lcall
fdivs
push
scas
mov
fcmovnbe
es
inc
lahf
add
xor
neg
movsl
adc
lods
dec
mov
cbtw
repz
sbb
fisubrl
mov
and
fcoml
add
dec
or
aaa
mov
in
push
pop
sub
repz
inc
pop
imul
jno,pn
pop
ret
dec
xchg
fmulp
sbb
jmp
pop
pop
push
sbb
enter
and
cmpsb
mov
jb
loop
mov
cltd
push
sub
jp
out
sub
hlt
mov
mov
imul
mov
or
dec
pop
add
and
inc
add
sub
push
jb
popf
jns
frstor
in
sar
cmp
mov
or
inc
adc
jbe
call
lret
push
arpl
dec
or
int
fbstp
loop
dec
push
and
mov
ret
imul
test
sarl
sub
jae
insb
add
mov
lahf
aad
loope
dec
mov
cltd
pushf
lods
mov
mov
add
cmp
mov
mov
mov
imul
adc
repz
imul
inc
or
insb
mov
jo
xchg
add
cmp
jb
push
pusha
mov
jmp
sub
stos
jbe
push
jg
aas
loopne
out
je
mov
xor
push
rcrl
dec
outsb
outsb
push
aam
dec
fwait
lcall
and
lods
sbb
mov
iret
gs
pop
and
and
pop
arpl
push
mov
stos
lcall
xchg
mov
into
sub
inc
out
js
push
sbb
fisttpl
or
loopne
jge
aad
jle
scas
mov
xchg
dec
fistl
cmp
mov
lret
popf
jae
lret
jne
jg
scas
adc
cltd
push
pop
ljmp
dec
int3
imul
dec
jg
sahf
sbbl
add
and
and
adc
dec
mov
aaa
cmp
sbb
mov
jns
or
xchg
shll
sti
call
or
jbe
adc
dec
data16
daa
mov
das
imulb
dec
insb
lock
mov
pop
sarb
fwait
mov
cli
or
cmc
out
mov
mov
dec
xchg
hlt
ja
addl
fcoml
fdivl
mov
stos
xlat
mov
jns
cmp
inc
or
jmp
leave
stc
ret
add
sbb
cmp
push
out
test
iret
int
xor
das
pop
rorl
inc
bsr
sbb
notb
fs
fdivp
lea
sarb
adc
sub
or
mov
fsubrs
mov
movsl
mov
sbb
inc
test
out
push
inc
mov
mov
mov
pop
and
inc
dec
rcrb
test
push
std
in
xchg
scas
pop
fstps
mov
sbb
push
lret
dec
shrl
lds
outsl
test
fnstsw
mov
in
popf
mov
jne
mov
bound
in
lahf
dec
in
ret
aad
fimull
fcoms
mov
jg
pop
fs
mov
movsb
mov
mov
mov
lea
scas
mov
xor
out
les
sarl
cmc
pop
adc
push
sti
push
repz
push
jne
andb
sub
in
shlb
lods
bound
xchg
mov
in
jg
iret
inc
sbb
mov
mov
mov
xor
lods
cld
gs
jb
sbb
aas
lds
cltd
bound
fwait
scas
cld
sub
into
dec
adc
cmp
xchg
dec
fldl
out
roll
cmp
xchg
testb
iret
sbb
popf
xorl
adc
xor
push
out
leave
ss
pop
mov
push
pop
cli
fwait
jnp
test
and
fildl
mov
jns
xor
or
xlat
fadds
sbb
xor
test
sbb
cmp
ja
sbb
int3
xor
dec
pop
cmpsb
jge
xor
mov
push
and
pop
mov
test
shl
adc
jmp
repz
xchg
jns
adc
push
mov
in
jecxz
mov
xchg
pop
lds
enter
jno
sub
push
jle
sub
fcomip
lahf
lcall
mov
divl
push
idivb
xchg
inc
insl
pop
xchg
hlt
repnz
cltd
fdiv
jmp
dec
xchg
and
insb
and
fiadds
hlt
jne
std
xchg
aam
xchg
je
fmull
and
shrb
mov
mov
or
bound
push
or
sub
adc
xchg
jo
aas
jbe
mov
pop
ss
movsb
adc
popa
and
stos
mov
cltd
dec
mov
mov
jle
gs
cmc
jmp
mov
cwtl
out
and
sbb
pop
adc
push
mov
daa
mov
out
inc
xchg
movb
and
bound
xor
sahf
sti
mov
or
mov
pop
cli
loop
mov
repnz
mov
lret
inc
or
xchg
popf
fsts
aaa
js
movsl
xchg
inc
mov
addr16
xchg
test
push
inc
mov
cmp
inc
fwait
arpl
cld
mov
jno
jecxz,pn
mov
fucomip
or
xchg
std
lcall
and
sbb
es
mov
mov
jno
pop
pushf
adc
mov
mov
cmp
jg
es
mov
fadds
mov
popa
lods
cmp
dec
mov
out
pop
add
ds
cmp
imul
push
movsl
cmp
inc
jg
or
fbstp
imul
inc
andb
mov
jbe
dec
cmp
xor
data16
fwait
negb
sarb
fwait
and
sti
lea
mov
aad
jbe
inc
or
or
lret
pop
cmp
add
imul
and
jmp
cltd
inc
jmp
sarl
jp
loope
push
ds
nop
mov
dec
rcrl
fmuls
cmpsb
aad
pop
inc
sbb
in
hlt
ljmp
dec
test
rolb
ror
cmc
insb
sarb
insl
fisttps
movsl
lods
xchg
rorl
mov
sarl
fldt
jg
scas
dec
inc
loop
icebp
push
add
iret
repnz
sbb
jbe
jmp
cmp
pop
push
in
movl
sbb
push
sub
mov
shrl
mov
lock
sub
mov
fcmovnb
enter
sub
das
das
popa
jg
xchg
jmp
xor
jp
out
rol
gs
daa
fiadds
fwait
mov
dec
mov
ja
movups
mov
inc
std
sbb
out
mov
mov
frstor
insl
or
pop
xchg
icebp
and
fisubs
pushf
xor
mov
into
mov
nop
pushf
lret
inc
into
sbb
push
xor
out
jge
cmp
out
rclb
xor
inc
push
sbb
push
cmp
lret
push
fwait
cmp
push
rcrb
push
in
fmull
and
cwtl
in
adc
dec
xchg
cltd
xor
loop
xchg
push
mov
and
lds
xchg
and
cmpsl
outsl
jns,pt
xor
test
xchg
push
adc
xor
dec
shll
and
pop
push
lcall
invd
in
adcl
fwait
lods
cwtl
xchg
lds
push
push
shlb
and
mov
insl
dec
mov
cs
jo
cs
daa
push
pop
shr
mov
jmp
loopne
dec
cltd
dec
out
pop
mov
push
xor
mov
stc
pop
mov
xor
enter
or
xchg
jae
and
sar
mov
sbb
in
jmp
xchg
add
jp
xor
scas
psrlw
sbb
out
stos
in
lret
add
push
pop
jbe
mov
mov
jns
jmp
shl
push
sbbl
popa
fnstsw
test
stos
push
adc
out
dec
rcrb
hlt
mov
dec
adc
ds
adc
jne
cmp
pop
daa
mov
pop
stos
fdivr
inc
movaps
push
mov
sub
out
orl
inc
ss
scas
jne
mov
dec
jo
notb
std
test
and
aam
xor
jp
call
push
xor
xchg
inc
movl
xor
cmp
imul
int3
clc
rcll
pusha
shl
icebp
bound
bound
mov
cmpsl
ret
sbb
mov
fcoml
lret
ds
lock
xchg
mov
ret
test
mov
lahf
repnz
rorb
sbb
mov
nop
fadd
mov
adc
cmp
ljmp
adc
dec
pop
inc
mov
adcb
mov
xchg
js
popa
adcb
in
adcb
xchg
pop
in
cmp
mov
data16
in
pop
mov
rcr
in
icebp
les
xchg
mov
in
or
push
or
jl
fistpl
ss
clc
adcb
out
sub
mov
adcl
jo
dec
fildll
xor
push
ret
inc
mov
std
jge
mov
add
fldl
jg
mov
sbb
cmp
inc
sub
into
in
jg
insl
and
mov
push
pop
jno
xchg
mov
mov
pop
pop
add
sub
aas
jle
movsl
or
arpl
enter
and
lods
rolb
out
testl
jmp
mov
aas
addr16
lea
stos
push
scas
lcall
mov
cmp
lcall
imul
iret
aad
jo
cwtl
sbb
lea
jbe
pop
jp
jl
or
daa
negl
int
jmp
and
mov
xor
ret
lock
pop
and
loop
xlat
pop
mov
clc
add
stos
push
lds
xor
fnsave
and
ret
popa
stos
xorw
inc
push
sbb
cmp
leave
out
and
fistps
push
arpl
inc
outsb
ret
or
cmp
jb
xor
pop
lret
ja
pop
cmp
sub
leave
lcall
gs
mov
std
xchg
mov
rcll
lret
push
push
aaa
inc
int3
mov
xor
or
in
stos
mov
icebp
jns
sub
inc
arpl
lock
fnstsw
loope
ds
pushf
mov
std
pop
cld
in
or
or
xor
lcall
in
daa
mov
sbb
pop
cmp
sub
cli
loop
mov
popf
aas
jecxz
mov
orb
sti
out
cmp
add
inc
jl
dec
mov
out
mov
fistpl
lahf
loop
pop
adc
push
filds
sarb
ds
jl
pop
mov
or
dec
add
inc
jbe,pt
ret
and
imul
pushf
pop
call
stc
push
leave
cltd
dec
fmull
frstor
mov
push
out
flds
pop
pop
fstps
xlat
sub
fmull
pop
imul
loopne
jo
xchg
xor
mov
fs
loop
and
icebp
loop
mov
adc
mov
mov
push
push
jmp
aam
arpl
inc
rcrl
sarl
js
iret
ret
mov
dec
add
mov
jecxz
or
add
push
mov
push
mov
repz
fistpl
je
jle
popf
xchg
scas
sub
push
fmul
divl
or
inc
out
push
icebp
movsb
xor
xchg
pop
cmpsb
pop
sbb
pushf
data16
testb
scas
loop
xor
mov
ja
rclb
fdivrl
mov
jo
rolb
cmp
shlb
mov
xchg
das
bound
movsb
inc
or
mov
or
lcall
or
sub
push
xchg
and
mov
xor
inc
xor
or
pop
xor
icebp
add
repz
push
roll
adc
or
dec
mov
mov
adc
pop
test
xchg
sub
mov
fildl
cltd
xchg
sbb
push
dec
xor
and
aaa
mov
sub
xchg
mov
sarb
mov
clc
popa
lock
mov
ficompl
jae
mov
popa
and
mov
add
shll
pop
or
pop
daa
jmp
fdivl
es
lret
insl
cli
aas
add
cmp
divb
pop
addr16
dec
jnp
stos
inc
out
mov
stc
dec
repz
lock
xchg
push
mov
outsb
test
int3
or
cmp
mov
dec
incl
iret
cmp
and
incl
and
repz
jmp
fwait
mov
push
jnp
rorb
adc
push
add
pop
or
ret
mov
inc
mul
rorl
push
and
mov
rclb
test
fcmovu
ror
subl
sbb
push
cmpb
les
and
scas
sahf
push
adc
mov
cmp
js
cmp
xlat
das
cmpsl
pushf
lods
push
adc
inc
orl
push
fs
stos
movsb
test
sub
pop
iret
inc
push
aaa
in
cmpsl
sub
xlat
je
xchg
mov
push
xor
popf
pop
pop
mov
xor
push
imul
sub
fstl
call
inc
popa
mov
int
inc
mov
xchg
lds
cmc
ret
rorb
add
roll
int
xor
inc
imul
inc
push
icebp
sti
insl
popf
mov
inc
pop
stos
add
insb
lea
stos
inc
lock
or
pop
cmpb
cltd
mov
scas
ja
call
mov
call
sar
flds
clc
sub
nop
mov
mov
js
fstpl
add
clc
sub
jae
adc
fwait
dec
idivl
push
adcb
in
ss
aas
adc
add
cmpsb
testb
fnstcw
mov
ljmp
jmp
pop
ret
scas
pop
aas
dec
pop
cld
es
xor
movsl
nop
sbb
inc
and
cltd
ret
mov
jl
dec
repz
in
cld
sti
pop
das
mov
sbb
cltd
sub
sbb
sub
test
into
pop
ja
aam
cltd
test
mov
and
imul
push
lahf
xchg
mov
insb
test
or
jge
or
mov
cmpsl
aas
sub
fucomp
stos
jge
add
aam
enter
xor
mov
mov
rcl
cmp
mov
inc
xchg
ss
cmpsl
pop
sbb
leave
dec
int
repnz
mov
jp
mov
mov
mov
jo
pop
mov
clc
rclb
push
enter
imul
jno
rol
lret
dec
or
add
aaa
adc
xor
xchg
pop
aam
push
pop
mov
clc
cmp
mov
pop
cmp
add
pop
cmpsb
div
mov
call
xor
cld
cmc
iret
ja
outsb
aam
mov
sbb
add
shlb
icebp
jb
adc
mov
jno
jbe
lcall
enter
mov
enter
push
cld
add
sbb
add
mov
sbb
popf
xchg
xor
xor
or
addl
leave
dec
sbb
jne
sbb
jmp
add
ds
lock
cwtl
es
incl
ret
subl
dec
sbb
add
fstps
xchg
stos
push
ret
outsb
fcom
es
rorl
sub
insb
aaa
mov
inc
fwait
inc
push
outsb
adc
xchg
in
fnstenv
les
mov
xor
fstp
out
inc
fmull
push
mov
pop
xchg
add
xchg
insl
inc
in
out
pop
sub
gs
outsb
lahf
addb
and
popa
bound
xchg
arpl
clc
add
out
dec
mov
je
mov
mov
popf
cmp
jmp
inc
dec
test
outsl
adc
mov
lods
or
lods
es
int
mov
popa
shlb
sub
mov
push
lock
fisubrl
into
es
repz
fs
dec
sbb
or
cmpsl
jbe
daa
scas
adc
xor
jnp
pop
jne
cmpsl
test
dec
cs
dec
xor
fstl
mov
aaa
sub
add
std
in
bnd
sub
inc
out
pop
adc
mov
sbb
and
mov
push
bound
jmp
mov
mov
and
sbb
repnz
fldt
inc
sbb
icebp
jecxz
test
or
cmp
js
rorb
cwtl
lahf
divb
push
xlat
or
lods
push
sbb
pop
push
sub
addr16
daa
dec
mov
addl
push
daa
pop
pop
in
lock
xlat
mov
inc
pop
je
dec
fdivrl
cmpsb
sbb
mov
ljmp
aam
and
repnz
pop
out
mov
bound
mov
cmpsl
adc
adc
imul
mov
adc
mov
test
call
xchg
pop
push
fcompl
xor
ds
ss
jne
pop
cmp
fs
hlt
add
jne
mov
js
add
js
xchg
inc
or
imul
lahf
mov
dec
xor
or
mov
insl
push
fcmovbe
movsl
movsl
pop
scas
mov
imul
cwtl
or
scas
imul
stc
add
jne
adc
lcall
mov
jmp
sub
pop
lods
pop
xchg
clc
push
push
inc
sub
cmpsl
jl
mov
enter
popa
push
push
push
dec
mov
mov
jns
lret
out
lock
cs
dec
sub
icebp
lahf
or
push
pop
clc
cmp
xchg
addb
fistpl
inc
jmp
push
imul
call
test
arpl
lret
mov
inc
frstor
mov
fnsave
add
ss
add
push
push
push
lret
xchg
mov
mov
ss
sub
cwtl
aam
gs
mov
pop
lea
push
jnp
daa
xchg
ljmp
xchg
rcrl
inc
fstpt
jmp
into
repz
push
inc
data16
xor
add
sbb
cli
cli
push
fiaddl
and
dec
jbe
loop
mov
fiaddl
push
dec
pushf
jb
mov
mov
jns
push
lods
mov
push
ja
or
loopne
rcrl
pop
test
dec
ret
jnp
and
icebp
jns
mov
and
mov
ret
jmp
sub
dec
jp
sahf
out
aaa
roll
outsl
lds
adc
arpl
sbb
das
xor
pop
pop
sarl
adc
das
jbe
and
arpl
aas
sub
rclb
jl
push
push
push
pushf
mull
cmp
shlb
push
jbe
pushf
xchg
decl
mov
inc
sbb
xchg
sbb
popf
std
lret
lods
outsl
jmp
mov
and
insb
mov
inc
xchg
pop
jge
pop
in
add
lahf
dec
mov
in
pop
mov
out
mov
shlb
and
pushl
xchg
leave
mov
mov
ret
push
mov
inc
pop
bound
ds
dec
call
sbb
mov
dec
push
xor
pushw
xor
adc
aas
arpl
out
sarl
inc
shr
repz
test
mov
or
sbb
ds
jns
jle
mov
rclb
add
outsb
xchg
insb
sub
mov
ret
iret
addr16
xor
mov
push
xchg
loope
or
push
movb
stos
mov
mov
in
sbb
fisubrs
mov
test
xchg
dec
lea
jle
xchg
shrb
xor
lahf
push
scas
xchg
inc
pop
sub
mov
repz
fucomp
sbbb
sbb
sti
dec
fdivl
sbb
lcall
xchg
pop
and
mov
mov
scas
inc
push
and
inc
push
jecxz
push
movb
mov
int3
pop
in
iret
push
addr16
xchg
jbe
in
cwtl
mov
cmpsl
jae
push
or
lds
stos
bound
lret
dec
adc
outsl
movsb
jnp
mov
rclb
sub
jns
sarb
std
test
mov
adc
cmp
ja
mov
xor
pop
imull
fnstcw
or
cmpsb
data16
in
jb
cld
mov
mov
push
add
sbb
adc
shl
rcr
jge
lods
lea
jbe
aaa
xlat
jp
or
pop
and
xor
loop
lret
nop
and
movsl
pop
mov
mov
xchg
insb
dec
cltd
inc
mov
ss
ja
mov
and
lcall
xor
sti
inc
shll
call
cmp
sbb
movsb
mov
lock
xlat
xor
addb
mov
test
and
icebp
sbb
jb
xchg
jno
mov
adc
aam
mov
inc
cmpsb
xor
jmp
jmp
outsl
mov
push
repz
jne
insl
hlt
fidivs
jnp
popf
and
push
imul
call
or
mov
inc
and
jmp
push
aaa
loop
stos
mov
xor
inc
push
fmul
push
loop
insl
mov
cmp
fwait
jg
jle
sub
scas
add
mov
data16
mov
ffree
sub
mov
sbb
in
in
and
and
lock
imull
push
test
insb
jp
or
xchg
jg
push
std
lods
inc
enter
inc
mov
push
in
pop
popf
push
repz
inc
rcr
sahf
les
cmp
jbe
pusha
add
mov
mov
xor
jge
lret
mov
imul
mov
mov
mov
jge
imul
or
sbb
fstl
ret
dec
push
mov
or
and
lret
xor
pop
ljmp
data16
test
out
pop
mul
loope
xchg
jge
inc
cmpsl
push
jo
xor
pop
jae
mov
into
push
lods
adc
pop
add
mov
daa
scas
repz
xchg
and
xchg
jle
xchg
lret
sahf
cmp
movsl
adc
mov
test
js
shr
imul
dec
push
inc
fildl
add
ja
mov
cmc
out
sub
outsb
or
clc
xor
xor
fdivrl
outsb
and
les
xchg
mov
mov
stos
push
cmp
push
cmp
mov
lods
loopne
push
mov
cld
mov
mov
xor
rclb
push
aad
mov
mov
ss
fstpl
push
adc
leave
jbe
into
or
imul
sub
mov
stc
push
add
shll
cmp
or
stos
lods
frndint
cmp
or
fimull
mov
pushf
enter
mov
cmp
ljmp
mov
fdivrs
cmp
pop
out
xlat
lds
xor
enter
cmpsl
ss
fsubrp
notl
mov
or
or
push
jecxz
in
mov
jl
mov
jo
push
nop
insb
pop
cmp
insl
sbb
cmp
xor
mov
outsb
popa
das
test
xchg
rclb
cmp
or
cwtl
xor
xchg
adc
das
and
aas
or
add
movsl
jge
addr16
bound
ret
jo
pop
outsl
jns
mov
xor
dec
push
xchg
add
out
lahf
pop
jp
push
adc
pop
mov
push
cmpsl
data16
cmpsb
rolb
sbbl
add
les
mov
addr16
mov
mov
repz
xor
je
je
hlt
mov
cmp
mov
mov
mov
dec
push
loop
leave
xchg
fsubp
dec
and
jae
imul
add
sub
jo
xchg
and
mov
add
into
inc
orb
dec
shrb
aad
test
jnp
fwait
cmp
xchg
jge
jns
mov
jp
pop
ds
notb
pop
mov
sub
inc
insb
adc
pop
aam
lds
xchg
inc
mov
fildl
es
dec
jne
xor
dec
repz
push
addl
inc
sub
or
jle
sbb
test
mov
push
cmp
and
or
adc
push
sarl
xchg
jae
xchg
outsb
popa
push
sbb
out
movsl
fcomip
inc
cmp
fidivl
mov
lods
aas
mov
lcall
sub
xor
mov
les
test
xor
lcall
push
jno
dec
dec
stos
scas
ret
das
jg
ljmp
adc
mov
sbb
shlb
int3
mov
or
loop
cltd
shll
and
decl
pop
and
je
adc
add
nop
push
inc
and
ljmp
mov
out
lods
stos
jae
mov
shll
sub
mov
jg
mov
fsubl
cmp
push
inc
outsl
out
lds
out
scas
jnp
and
sbb
scas
cmp
xor
mov
mov
je
es
mov
mov
and
leave
cmp
xor
dec
sti
push
or
das
jecxz
cli
pop
lcall
jl
dec
sub
movsb
stc
mull
loopne
push
lods
xor
iret
out
sub
js
movsb
popa
xchg
inc
outsl
and
mov
push
rcrl
das
adc
xor
movsb
xor
dec
jmp
xchg
aaa
aad
cwtl
inc
and
jns
mov
out
jnp
push
pop
shlb
sbb
fimuls
inc
adc
nop
cmc
pop
enter
xor
inc
in
or
aas
sub
lret
sbb
or
cltd
sbb
aaa
iret
call
out
push
test
adc
push
push
jo
bound
pop
lods
adc
jl
sub
fcom
pop
add
cmp
ja
adc
pop
jne
aam
xchg
in
roll
in
pop
mov
sub
daa
jbe
pop
jmp
dec
shr
nop
repz
cs
jmp
cmp
repnz
clc
dec
lods
movsb
sbb
push
sbb
jge
sbb
fists
mov
sti
mov
mov
mov
dec
push
xor
in
xchg
popf
dec
sub
js
adc
daa
xor
hlt
lea
mov
addb
lahf
aam
jmp
out
push
dec
insb
pop
movsl
push
mov
or
test
push
js
lcall
dec
cmp
sub
mov
sbb
and
sbb
es
sbb
lret
jecxz
xchg
ljmp
dec
add
mov
cld
add
jl
jne
jno
icebp
adc
inc
and
push
add
ljmp
pop
mov
dec
sbb
fucom
addr16
jo
inc
shlb
mov
daa
fsubrl
inc
adc
sbb
andl
cmp
sub
sti
imul
mov
or
scas
xchg
and
loop
shll
ss
jb
stos
incl
dec
sub
push
icebp
sbb
mov
call
cmp
mov
mov
pop
scas
sbb
xchg
shll
mov
std
cmp
mov
ficoms
jbe
xchg
nop
add
pop
mov
add
scas
sbb
sub
mov
push
je
cmp
and
inc
dec
push
mov
xchg
out
dec
add
aas
mov
icebp
fsts
dec
int3
push
js
les
and
dec
and
jl
mov
add
adc
xchg
push
loop
test
lea
sub
ja
out
ljmp
imul
je
jno
sbb
lcall
test
cmp
adc
outsl
jno
mov
lret
or
das
orl
out
je
and
pop
icebp
icebp
mov
xor
rcll
fwait
push
cmpsl
xchg
lods
cmp
js
mov
or
xchg
ficomps
arpl
push
mov
scas
xor
ds
hlt
add
out
test
mov
lret
test
lds
enter
lret
jno
sti
lahf
cmc
push
mov
hlt
mov
xchg
test
jno
cmp
adc
or
in
js
stos
dec
adc
movl
lahf
stc
mov
pop
mov
fistpl
lret
mov
cmp
fiaddl
lret
adc
out
xlat
pop
cmp
mov
cmp
dec
insb
add
jp
paddq
xor
shll
mov
stos
sbb
push
adc
ss
push
clc
daa
cmpsl
gs
insb
mov
and
mov
or
rol
cmpsl
add
mov
enter
imul
pusha
dec
jg
addb
jle
jns
xlat
mov
fsub
or
shlb
fldt
adc
mov
daa
dec
stos
out
in
and
push
daa
jns
push
fisttps
inc
push
add
adc
mov
xchg
lret
cmpsl
adc
test
out
inc
add
push
or
lret
lds
sahf
addb
lds
imulb
lods
dec
cli
test
mov
cmp
cmp
out
xor
add
and
push
lahf
nop
in
gs
mov
test
sub
xchg
in
cmp
mov
idivl
xchg
jno
std
jnp
loop
sub
std
cmp
lret
push
and
cltd
sub
pop
pop
jb
ret
sub
xchg
xchg
xor
stos
jmp
push
sbb
scas
xchg
cli
and
outsb
leave
mov
push
jb
mov
push
loopne
pop
cltd
sbb
test
lret
inc
into
sbbl
mov
xchg
push
pop
fimuls
mov
scas
in
push
ficoml
jnp
out
xchg
and
lods
mov
sarb
dec
mov
lea
push
out
jns
stos
inc
fidivrl
ja
test
loopne
aam
dec
daa
push
dec
int3
call
fidivs
or
mov
xor
sub
pop
xchg
sbb
xchg
xor
aad
fistps
lods
pop
inc
cmc
imul
nop
xlat
mov
push
insl
pusha
push
push
dec
xor
cmpsl
push
arpl
sbb
out
jb
enter
pusha
pop
ja
jp
loope
xor
mov
mov
dec
cltd
in
xchg
mov
pop
fstps
mov
cmpsl
mov
xchg
mov
mov
mov
lret
mov
mov
push
mov
stc
push
inc
movsb
mov
xchg
pop
mov
jo
iret
jo
inc
mov
sbb
iret
imul
fistpll
fcompl
aas
pop
add
iret
cwtl
mov
xchg
out
adc
mov
or
enter
mov
push
inc
inc
dec
data16
fildl
ja
inc
xchg
xor
push
ror
test
fisttpl
and
adc
lds
stc
cmpsb
jmp
cmp
cmpsb
push
xchg
pop
cmpsl
xchg
imul
dec
cli
idivl
test
mov
xor
lods
fsts
sub
pop
mov
out
sbb
adc
xchg
fmull
push
sub
inc
das
adc
xor
out
aam
cld
aam
jp
inc
cs
pop
loope
inc
ss
or
xor
ficompl
or
notl
or
sub
jmp
jbe
jmp
and
insl
push
out
inc
and
sub
hlt
mov
add
pusha
inc
ffree
cmp
or
fistps
mov
shr
xchg
daa
mov
aam
and
insl
das
xchg
push
xor
jnp
sbb
outsb
jnp
int3
imulb
dec
jecxz
std
jbe
outsl
adc
sbb
cmp
inc
xchg
cmpsl
punpcklwd
test
xor
pop
movsb
mov
mov
pop
lock
mov
mov
pop
xchg
jg
pop
mov
mov
xchg
divb
adc
bndstx
push
inc
jmp
and
repz
inc
leave
xchg
dec
int3
inc
cmp
ss
xlat
push
mov
xor
idiv
lods
in
repz
xor
dec
pop
jg
pop
xchg
sub
cmpsl
lods
xchg
xor
xlat
mov
push
dec
push
jno
shll
inc
adc
cmpsb
mov
rolb
dec
or
add
int3
or
pop
cwtl
inc
push
add
cmp
adc
jg
fcmovu
cld
aam
cmp
dec
rol
mov
pushf
mov
cld
xor
loopne
jmp
inc
in
pop
or
or
dec
mov
std
ss
push
arpl
xchg
ror
add
xor
mov
or
sub
out
sub
dec
out
int
aaa
xchg
cld
pop
pop
stos
pop
add
lret
bound
dec
es
push
inc
mov
push
xor
test
pop
fidivs
mov
bnd
lea
fadd
cmp
ljmp
xchg
dec
ja
imul
cmp
stos
aad
lret
ja
adc
sub
cmpsb
mov
mov
fld
xlat
mov
sbb
jl
dec
xor
imul
pop
or
js
lret
fldt
and
xchg
lahf
enter
stc
add
mov
enter
lods
repz
sti
mov
aad
sbb
push
sbb
mov
test
or
movsb
fs
dec
bswap
push
adc
out
sbb
addr16
filds
sub
add
dec
mov
scas
mov
adc
ljmp
arpl
aam
sbb
popa
sub
cmp
push
xchg
rolb
inc
addr16
sbb
jg
cmp
fs
xchg
aad
inc
pop
stc
loopne
movsb
cmp
mov
cwtl
or
mov
jge
cs
into
and
inc
insb
sbb
jecxz
out
sub
stos
push
pop
lea
add
push
pop
or
fidivl
rclb
loope
and
jbe
nop
xor
lock
js
cmp
loop
mov
xlat
mov
pushw
fildll
sub
xchg
fidivs
cmp
cmp
xorl
cmpsb
dec
repz
jbe
adc
and
mov
leave
into
push
pop
push
cld
jns
hlt
lahf
inc
adc
sub
adc
adc
xor
outsb
dec
sub
jnp
sbb
addr16
lds
daa
test
rolb
gs
push
add
inc
leave
test
mov
sbb
push
sub
sbb
inc
rcrb
push
shlb
mov
sub
cmp
lods
inc
lret
imul
jno
jb
or
fisttpl
jl
mov
add
fistpl
hlt
dec
jmp
mov
xchg
pusha
pop
scas
dec
clc
sub
shlb
pop
push
pop
shl
sub
xchg
adc
mov
pop
push
call
mov
mul
in
leave
push
and
fbld
jb
cmp
or
push
jno,pt
pusha
lahf
mov
sarb
xchg
dec
push
cmp
add
cmpsl
jle
in
dec
lret
clc
inc
sub
adc
test
and
test
or
sbb
test
hlt
mov
pop
sahf
xor
fildl
in
mov
xlat
sbb
and
push
aaa
pop
dec
jp
ffreep
xchg
lea
add
jg
mov
push
insl
sbb
in
fwait
pusha
cmpsb
clc
ficoml
shr
rol
out
test
mov
xlat
jns
adc
dec
clc
mov
fs
add
rol
in
cmp
mov
adc
pop
adcl
add
insb
ljmp
das
addb
data16
testb
sbb
lret
cmovo
mov
pop
mov
pop
mov
cmpsl
je
inc
xchg
jmp
mov
fldcw
add
jl
test
iret
inc
fwait
and
outsl
dec
jbe
ret
mov
movsl
lods
sub
addb
aaa
or
fstpt
mov
push
outsl
inc
add
adc
and
mov
pop
lods
push
push
or
or
ds
int
fildl
push
clc
add
in
rol
xor
leave
jae
daa
or
inc
jge
scas
stos
jecxz
mov
shrl
and
mov
and
and
push
xlat
pop
xor
and
aas
sbb
scas
push
xor
pop
jmp
nop
addl
xchg
leave
xchg
cmp
enter
mov
cmpsb
test
orl
iret
sarl
mov
mov
adc
in
xchg
add
pop
fs
hlt
pop
mov
sbb
mov
or
push
movsb
movsb
pop
mov
insl
xor
mov
mov
pop
fcomip
cmp
repnz
incb
popa
jbe
sbb
or
icebp
inc
fnstsw
cmpsl
lea
jg
mov
dec
mov
jae
call
mov
ss
jnp
mov
push
adc
and
ss
mov
inc
cmp
cltd
scas
lahf
xor
and
int
lcall
mov
sbb
dec
mov
cmpsb
mov
pushf
in
loopne
cltd
loopne
in
fistpl
in
xchg
or
adc
adc
mov
inc
cmpsb
push
sbb
sub
jle
mov
subl
js
and
adc
imul
sub
xor
dec
cmp
ss
out
clc
jp
sub
mov
pop
aaa
xchg
cmpsb
sbbl
jg
inc
mov
cld
fiadds
mov
cli
dec
mov
and
mov
sub
ds
sub
adcb
fists
push
call
pop
stos
mov
push
lock
jl
iret
xchg
std
pop
cmp
mov
scas
adc
ret
xchg
imul
xchg
rorb
and
call
or
xchg
push
xchg
cmpsl
lcall
xor
hlt
movsl
out
add
scas
pop
pop
addr16
shlb
jmp
push
addr16
cmp
cmpl
mov
inc
daa
mov
push
in
add
out
imul
lcall
es
mov
data16
and
xlat
or
call
adc
add
mov
cmpl
into
mulb
jbe
inc
mov
loop
push
in
call
lcall
mov
shrb
in
push
sub
or
out
mov
mov
ud0
xchg
cs
cltd
and
cld
icebp
repz
push
mov
inc
sahf
push
bound
popa
pop
jl
inc
xchg
rcl
dec
push
popf
js
and
xchg
stc
bound
add
xor
add
mov
add
push
or
or
and
or
lahf
mov
sbb
pop
scas
mov
frstor
jecxz
mov
mov
pop
lahf
jp
imul
scas
mov
test
jno
sarb
jne
mov
mov
fidivl
ja
adc
nop
mov
scas
ret
aam
lods
fstpl
push
icebp
or
mov
test
adc
ret
xchg
enter
and
xor
mov
ds
jb
les
xchg
pop
decl
xchg
cmp
les
adc
cmp
sub
mov
leave
push
mov
leave
stos
push
subb
cmp
clc
push
mov
cwtl
and
xlat
push
sub
jno
inc
push
aad
push
adc
pop
dec
flds
mov
out
imul
cwtl
add
push
jg
movl
scas
stos
iret
fisubrl
sbb
fisttpll
shl
movsb
lcall
xor
pop
mov
mov
fbstp
int
cmp
lds
imul
add
lds
push
hlt
outsl
push
les
or
pop
push
into
xchg
and
pop
mov
add
push
out
clc
mov
mov
negb
in
je
or
jge
add
sbb
in
cmc
add
pusha
mov
aaa
cmp
ret
sub
lret
hlt
mov
lahf
cltd
in
fiaddl
or
or
and
stos
fs
movsb
xchg
xchg
cmp
add
dec
movsb
ljmp
outsb
insb
cmp
mov
ja
repnz
icebp
ret
dec
add
scas
cmp
idiv
cld
in
dec
stc
dec
mov
rorb
push
mov
cmpsb
jp
lock
jne
fsubrs
jmp
or
imul
mov
inc
fidivs
mov
mov
pop
into
dec
or
or
addr16
je
call
mov
push
sbb
cmpb
scas
sub
scas
mov
or
stos
dec
sar
mov
mov
rcll
lock
int3
inc
sbb
loopne
test
jbe
aaa
stos
cmp
mov
mov
mov
or
shlb
inc
jmp
mov
mov
push
bound
dec
ds
xor
sub
std
xor
add
push
jns
pop
pop
pop
arpl
mov
pop
inc
dec
cmc
mov
xchg
pop
fcoml
nop
insl
xor
jmp
xchg
mov
pushf
roll
fists
jl
mov
xchg
add
ret
popf
cs
cmp
leave
rclb
arpl
cmp
mov
pop
arpl
add
sub
daa
and
xchg
les
icebp
cmpsb
dec
movsb
dec
or
popf
insl
popa
jg
pop
cmpsl
mov
imul
dec
aaa
clc
mov
mov
ds
cmp
mov
out
sbb
or
sub
xor
mov
ljmp
repnz
pop
push
push
mov
imul
mov
sti
scas
push
lock
popfw
push
lret
outsl
subb
mov
adc
cmpsl
insb
clc
xor
orb
inc
loopne
inc
or
and
push
sbb
add
xchg
mov
iret
and
inc
lds
mov
movsb
aam
lcall
repz
xor
lea
gs
dec
cmp
jno
mov
sahf
xchg
fdivrl
clc
jp
jg
jbe
iret
pop
cmp
into
cwtl
and
dec
inc
out
dec
xor
mov
xchg
push
fstl
inc
dec
mov
add
scas
ljmp
and
inc
or
and
lea
sbb
mov
scas
xchg
dec
inc
xchg
xchg
mov
outsl
in
fldcw
ljmp
xchg
mov
mov
jno
add
mov
stos
fdivr
dec
cmpsb
insb
adc
cld
lock
outsl
imul
inc
scas
push
iret
subl
xchg
je
fnstsw
shl
mov
dec
add
idiv
and
push
lret
or
ret
in
push
scas
inc
fadds
lcall
adc
loope
scas
inc
dec
ret
les
jmp
leave
std
sub
leave
cmp
dec
imul
xor
jmp
pop
xor
jecxz
xchg
ret
fldl
xor
fwait
aam
push
and
mov
pusha
fs
rorl
mov
dec
jg
adcl
xor
hlt
fiadds
mov
popa
xchg
inc
jge
mov
fwait
orl
lock
sub
push
dec
repnz
stos
pop
ljmp
js,pt
jmp
ds
mov
xchg
xor
ljmp
leave
insb
stos
popf
adc
popa
cld
push
movsbl
aaa
and
popa
pop
cwtl
mov
aaa
pop
xchg
dec
addr16
lahf
mov
xor
cs
xchg
insl
cmp
inc
mov
push
popa
dec
pop
daa
sbb
push
add
mov
or
push
jle
dec
es
cmc
xchg
insb
iret
sbb
mov
loope
fs
test
es
mov
popf
lcall
iret
loope
xor
cmc
test
out
cmp
es
push
push
mov
xorb
lds
mov
pop
das
xchg
push
sub
jno
push
sti
in
cmovg
aad
mov
xor
mov
sub
inc
aaa
jg
sahf
jle
lret
fucomip
cmp
mov
dec
mov
push
imulb
rol
push
xchg
inc
leave
xor
out
out
sahf
xchg
sub
adc
fwait
callw
mov
pop
xchg
aaa
add
and
cs
mov
out
inc
pop
push
cmpsl
pop
pop
outsl
aad
es
and
add
inc
enter
bound
lock
mov
inc
insl
in
cwtl
ljmp
out
xor
loop
push
inc
push
stos
int3
pop
hlt
or
dec
int
lret
icebp
mov
icebp
cmp
leave
scas
add
fs
fmull
mov
ds
fisubs
das
shl
leave
fwait
xor
repz
mov
pop
int3
and
pop
mov
imul
lret
or
or
mov
push
xor
mov
pop
ret
mov
cltd
sbb
adc
inc
mov
out
cmpsl
or
iret
setbe
push
jl
mov
dec
lahf
js
xchg
jmp
inc
dec
jge
not
dec
jnp
mov
test
repnz
pop
dec
mov
pop
mov
sub
xlat
ds
jb
out
lea
sti
pop
in
adc
sub
je,pt
dec
daa
mov
fs
pop
jns
aaa
jnp
adc
jb
add
sbb
mov
sub
mov
ja
sbb
jae
int
pusha
or
or
add
push
xchg
pop
xchg
test
inc
push
into
mov
andb
inc
pushf
adc
push
popf
lock
icebp
mov
call
adc
xor
and
cmpsl
stc
mov
fdivrp
xchg
out
jl
jle
pop
outsl
in
rcr
mov
mov
xor
sbb
cld
or
add
sbb
fwait
insb
pop
or
ja
sbb
dec
mov
xor
imul
stos
adc
dec
and
mov
ret
pop
push
add
mov
push
subl
stos
inc
ja
and
call
mov
cmp
dec
aam
icebp
pop
xchg
xor
lds
xorl
dec
scas
test
jo
cmp
test
push
fmul
repnz
outsb
int
aam
or
sti
sbbl
pop
adc
inc
adc
xchg
mov
leave
mul
xchg
mov
xlat
movl
aas
or
pop
dec
sbb
mov
testb
into
xchg
push
xlat
dec
ljmp
sbb
add
cmc
lds
xor
pop
mov
sub
cwtl
imulb
dec
sarb
cmp
mov
xchg
xor
pop
ja
cmp
push
xchg
fstpt
lret
shll
pusha
xor
rcrl
pop
imul
sub
add
in
or
xlat
mov
aaa
adc
cs
mov
ret
das
js
xchg
inc
stos
and
inc
sub
imul
cmp
xchg
xor
cmc
and
push
ficomps
mov
pop
xchg
pop
cmp
int
fdiv
adc
aaa
and
les
dec
sti
aas
fldln2
int3
pop
imulb
add
xchg
push
jg
int
dec
ror
mov
int3
outsl
cmpsl
jo
mov
ss
subl
shlb
das
push
aam
xchg
daa
push
fwait
sbb
xlat
mov
jo
test
jp
dec
and
sub
push
std
cli
inc
fdivrl
rcrl
lods
rol
pop
or
xor
jmp
imul
push
push
mov
push
das
out
hlt
leave
sbb
das
and
mov
ds
mov
in
inc
push
imul
shlb
dec
jl,pn
dec
movl
insb
ret
int3
icebp
insb
call
cmc
call
pop
inc
and
enter
xchg
divl
mov
xor
std
arpl
gs
leave
push
jae
imul
adc
sti
icebp
out
bnd
add
dec
xchg
push
lret
lods
addr16
loope
jge
push
stos
fidivs
xor
inc
mov
mov
loop
insl
cmpsl
loopne
gs
cmp
dec
pop
fucomi
push
leave
mov
push
or
xchg
mov
fildl
jns
xlat
andb
orl
mov
xlat
rcrl
call
dec
jb
sbb
and
jp
adc
sahf
sub
std
xchg
pop
jno
pushaw
nop
dec
push
jp
clc
pop
call
pop
ds
push
adc
push
fisubs
push
inc
mov
xchg
dec
and
stos
mov
xchg
push
pop
mov
jbe
xchg
and
mov
subb
xchg
repz
adc
sbb
inc
dec
cmpb
jns
add
dec
cmp
jmp
cs
inc
sbb
addr16
inc
jmp
shll
inc
lods
mov
lock
icebp
fisubrs
mov
sub
mov
sbb
lret
mov
sub
xor
out
cs
add
bswap
and
cmp
pop
out
das
cltd
sbb
inc
sbb
or
mov
mov
push
xlat
clc
mov
pop
jb
sub
inc
pop
je
adc
jb
mov
xchg
ret
addr16
les
sbb
cwtl
fldcw
dec
sub
cltd
jns
or
and
mov
cs
gs
outsb
jl
cmp
imul
pop
psubusw
push
dec
stos
lcall
insb
test
jmp
mov
shl
jns
pop
out
and
test
loopne
mov
push
jno
jp
outsl
test
fwait
mov
jnp
sti
push
in
inc
sbb
cmpsb
lret
xor
xchg
rolb
lods
loope
jnp
xchg
repnz
aaa
mov
jb
push
jge
movsl
rcll
push
out
mov
stos
into
push
sbb
dec
xchg
sbb
jl
scas
out
insl
dec
clc
dec
insl
xor
mov
xchg
push
addl
das
mov
es
jp
movsb
and
and
push
pop
fs
dec
fmul
cmpl
lods
cmp
pop
jnp
xlat
mov
jbe
lret
jbe
lret
loopne
adc
int
loop
mov
std
push
xchg
dec
pop
jns
pop
add
xchg
jmp
sbb
lods
mov
popa
fcomps
ret
xchg
lods
xchg
addr16
sub
sbb
adc
mov
test
dec
adc
ljmp
push
xor
daa
cwtl
dec
sbb
dec
and
sahf
jecxz
mov
jl
sarb
sub
xor
aas
je
jbe
or
mov
pop
aaa
icebp
or
fstpl
inc
push
jmp
popa
sub
lds
mov
cmp
sbb
and
xchg
cmp
xchg
add
xor
stc
imul
cld
sbb
jb
loopne
fwait
mov
xlat
xor
mov
int3
je
data16
or
or
popa
in
sbb
divl
xchg
incb
pop
bound
into
pop
imulb
shll
inc
in
aaa
sbb
enter
xchg
imul
inc
cltd
push
shlb
ret
pushf
adc
xchg
pop
scas
fisttps
pop
loope
sub
sub
inc
xchg
in
and
sbb
add
sarb
xor
aam
shrb
daa
push
add
dec
call
pushf
stc
xchg
sbb
lea
mov
xor
pop
jae
adc
lea
lahf
pop
pop
pop
inc
mov
loopne
movsl
mov
push
jae
iret
pop
cmc
es
add
ret
adc
es
dec
int
mov
stc
sbb
es
pop
dec
adc
stos
push
nop
scas
rcrb
inc
sub
cmpsb
mov
shll
jns
dec
and
jl
mov
push
mov
fistpll
or
scas
outsl
push
sbb
fldcw
cld
mov
mov
fisubrs
aam
ljmp
popa
lods
push
mov
popa
push
std
mov
pop
and
addr16
out
dec
mov
sbb
and
test
xchg
std
fwait
push
lahf
jnp
mov
aam
or
fimuls
ljmp
dec
fiaddl
loopne
dec
ds
ds
lret
mov
es
adc
dec
nop
add
sub
jecxz
add
sbb
adcl
push
adcl
cli
in
stos
shll
jb
add
out
sbb
jmp
jg
xchg
push
lret
mov
les
imul
fistpl
dec
pop
jp
in
in
cmp
jnp
es
push
aam
mov
pop
push
roll
call
orl
js
sbb
insb
lret
jmp
stos
cmp
mov
stc
add
pop
mov
inc
pop
loope
adc
rcl
and
cld
pusha
and
inc
popa
notb
xchg
aam
sbb
test
pop
scas
pop
jno
and
push
xor
or
xchg
pop
mov
mov
into
in
push
dec
sti
aaa
out
xchg
out
lods
mov
xchg
fldl
fwait
pop
mov
into
gs
push
ja
mov
loop
mov
add
mov
mov
mov
in
pusha
mov
push
pop
jl
test
popf
popa
jno
mov
and
push
pop
ljmp
hlt
rcl
pusha
js
rorb
inc
sbb
cmpsl
testl
jmp
sbb
mov
mov
inc
push
inc
fprem
xchg
and
lods
or
orb
xchg
sbb
nop
popf
cmp
inc
les
fstps
popa
data16
jnp
out
add
iret
add
jno
mov
into
das
jnp
inc
sbb
xchg
idivl
adc
imul
sub
fidivl
pop
adc
dec
jp
lds
popl
xchg
jae
repz
sub
mov
mov
add
hlt
push
mov
stc
push
dec
xor
sbb
pop
inc
in
ret
scas
movl
ljmp
in
js
add
enter
mov
es
add
loope
mov
pop
mov
setno
or
setp
mov
jg
xor
repz
pop
dec
orl
stc
jle
xlat
outsl
cs
lods
add
pop
and
sub
sti
repnz
dec
cmp
xor
push
inc
xlat
addr16
sub
inc
push
add
jo
outsl
jecxz
xchg
push
js
arpl
adc
mov
nop
dec
subl
addr16
aaa
fsubp
xchg
xlat
mov
movsb
gs
push
das
inc
mov
or
jecxz
and
dec
jge
dec
test
mov
sub
std
dec
je
pop
pop
pop
in
add
sbb
mov
and
push
or
fidivrs
xchg
lea
outsl
jno
mov
sub
and
mov
push
dec
mov
dec
out
les
push
cmp
push
out
mov
push
sti
lea
icebp
pushf
pop
and
in
or
adc
ret
nop
cmp
mov
rcl
inc
dec
dec
ret
adc
push
cmp
xchg
sub
bound
jbe
test
mov
dec
mov
pop
mov
enter
lock
pop
inc
xchg
pop
test
jmp
cmp
adc
pop
scas
pop
aas
lret
jmp
xchg
negb
adc
pop
xchg
adc
leave
jno
xor
push
les
movb
fnstenv
fistpl
ss
jmp
add
mov
clc
inc
and
or
es
nop
xchg
sarb
ret
outsl
movsb
and
es
je
psubb
inc
jne
sahf
push
aam
lahf
notl
sti
cmp
cmp
jle
rorb
mov
popf
insl
and
sub
sarb
gs
xchg
fstpl
jne
cltd
add
sub
insb
mov
lock
and
xor
inc
inc
xchg
xchg
sbb
push
rolb
xadd
idivl
popa
dec
pop
shll
call
dec
pop
fs
push
cmp
sbb
arpl
pop
xchg
add
adc
ret
imul
in
and
sbb
xchg
or
jae
ds
cmp
mov
fsubp
and
ss
inc
mov
call
cmp
mov
ja
xchg
mov
mov
push
sbb
popa
lock
cmp
or
jecxz
mov
jnp
mov
int
pop
jge
sbb
mov
jecxz
rcll
pop
fists
pop
sbb
popf
pshufw
dec
incb
jne
sbb
mov
mov
mov
sarl
stos
adc
fwait
test
pusha
add
shrl
add
in
mov
sub
mov
cwtl
push
js
sub
mov
push
sbb
test
scas
push
jns
fstl
push
shlb
test
imul
fwait
cmp
dec
subl
scas
add
or
das
pop
mov
pop
clc
stos
stos
popa
std
mov
cmp
outsb
pop
mov
xchg
push
sub
add
and
sub
je
jb
leave
stc
jecxz
xor
xchg
fwait
out
fwait
sub
cmp
or
pop
push
jae
mov
mov
fcoms
xchg
testb
fadds
jl
in
scas
lcall
ja
imul
sbb
stos
test
lock
inc
add
ljmp
in
sbb
cmp
dec
sub
iret
cmpsl
xor
icebp
jecxz
ss
adc
mov
lea
sub
les
dec
mov
ds
push
dec
fdivs
pusha
jg
les
xchg
mov
or
adc
hlt
pop
adc
cld
je
xchg
jmp
in
and
inc
bound
sbbl
pop
xlat
adc
out
pop
sbb
dec
enter
cs
cmpsb
sub
iret
mov
in
out
mov
das
aad
dec
xor
push
fs
mov
cmpsb
push
mov
incb
sbb
pushf
mov
sti
fisttpl
ficompl
mov
nop
and
pop
or
inc
pop
dec
mov
mov
lds
jns
push
loopne
pop
sahf
cmp
loopne
test
scas
mov
fdivl
out
ds
xchg
push
pop
push
popa
shl
outsl
aad
fwait
cmp
inc
dec
in
xchg
pop
sbb
ja
or
daa
push
add
ret
cmpsl
jns
sub
push
enter
out
sub
rcrl
aas
pop
sbb
cmpsb
aas
out
scas
push
inc
pop
push
xchg
out
inc
out
xchg
mov
test
mov
std
mov
inc
nop
jne
jle
subb
movsl
lret
imul
jb
jnp
mov
or
pop
cli
dec
push
and
pop
lds
out
lcall
icebp
pop
outsl
or
shrl
aaa
push
das
adcb
xchg
fisttps
add
cmpb
mov
xchg
lret
call
xor
dec
enter
sbb
ljmp
aam
gs
and
ret
inc
add
add
das
sub
mov
loopne
inc
cvtps2pi
xchg
sub
int
pushf
sbb
pop
mov
mov
lods
ficomps
sbb
aad
cli
cmp
pop
mov
lods
mov
call
mov
inc
sbb
mov
mov
dec
push
push
mov
out
es
div
int3
and
out
cmp
andnps
lcall
loopne
bound
loope
les
bound
mov
mov
mov
popf
xor
xor
xchg
data16
pop
inc
movsb
sub
rol
jne
sahf
aam
mov
and
out
stos
pop
push
dec
stos
lea
cmp
mov
fiaddl
lea
pusha
push
and
dec
aad
cld
inc
les
or
mov
enter
repnz
inc
push
inc
movd
xor
and
cmc
jle
inc
adcb
fnsave
mov
inc
test
inc
cmp
dec
xchg
xor
hlt
loopne
rcll
push
inc
in
dec
ss
daa
add
mov
rclb
sarl
arpl
fistl
lea
in
mov
js
loope
xor
inc
xchg
jae
adc
cmp
mov
mov
aaa
xor
hlt
lock
shrb
mov
out
jbe
add
sbb
mov
mov
jmp
packuswb
lahf
ret
mov
cmp
lods
jge
sub
sub
insb
mov
insb
push
add
insb
leave
aas
aad
adc
push
mov
inc
dec
sbb
std
std
das
and
lods
adc
or
inc
cmpb
aas
xor
xor
stos
push
dec
cld
test
sbb
mov
sub
jecxz
clc
cmpb
cli
cli
adc
in
test
sahf
jmp
xchg
cltd
mov
in
push
mov
sub
aam
add
pusha
xor
iret
in
jle
rclb
jg
cmpsb
std
push
ret
es
jl
cmp
hlt
jmp
xor
es
jge
lret
stc
pop
push
push
js
cld
push
cmp
mov
fnstsw
nop
sub
ficomps
fsub
test
std
push
adc
sub
mov
sar
add
addb
xchg
xchg
lds
jae
push
shlb
mov
jle
hlt
cs
shrl
movsb
rcr
aaa
int3
push
sub
out
jmp
addr16
insl
dec
das
div
adc
cwtl
pop
sub
cmpsl
bound
xchg
mov
mov
dec
jecxz
lret
in
mov
push
inc
sub
sbb
enter
cmp
cmp
push
repz
or
mov
xchg
out
movsl
outsl
fistl
pusha
jo
push
jo
cmp
test
fmull
popf
jecxz
sub
jecxz
inc
jg
cmpsl
push
lahf
push
out
jl
mov
xor
int
or
das
repnz
incl
inc
int3
pop
scas
es
repz
cmp
pop
sub
mov
jne
push
jle
xchg
inc
outsl
dec
out
push
jns
mov
push
movsl
add
jmp
push
lret
sbb
and
rol
aam
stos
aas
out
mov
rol
cmp
lcall
rcll
adcb
add
dec
sbb
jbe
loope
ja
sbb
into
outsl
push
lods
jge
sub
dec
ret
loopne
push
test
sbb
lcall
sbb
enter
xchg
sbb
or
inc
icebp
dec
sbb
aad
mov
ficoms
insl
fs
repz
push
loop
sbbl
mov
push
pop
fnstsw
dec
insb
cmc
daa
jecxz
int
cmp
jno
repz
ja
mov
cltd
mov
out
adc
test
pop
fmuls
add
shrb
add
aas
and
push
sbb
dec
jle
mov
dec
int
hlt
inc
push
movsl
out
lret
ss
insb
pop
ret
push
mov
mov
jecxz
fldcw
push
mov
fdivrp
and
mov
cmp
xlat
paddw
fstl
fisttps
jecxz
push
mov
sub
add
push
add
std
mov
push
std
pop
sbb
jb
push
sub
and
mov
dec
sbb
outsl
ret
and
or
and
fxch
out
cmp
pop
stos
or
movsb
add
dec
xlat
xor
or
mov
adc
adc
push
test
push
daa
mov
fyl2x
pop
out
aaa
mov
and
stos
int
mov
insb
fisubs
pop
push
aam
cld
das
insl
jecxz
imul
xor
ficoms
in
inc
rcll
sub
sbb
or
hlt
inc
cmp
or
jmp
mov
stos
test
sub
stc
pushf
and
arpl
jecxz
inc
fistl
pop
rclb
insl
jb
jbe
in
sbb
sub
xchg
test
sbb
out
mov
xor
mov
lea
dec
add
jg
repz
rcl
xchg
sbb
int3
mov
xchg
mov
jl
pop
add
cmp
push
fdivs
ret
jge
push
xchg
aam
fisubs
in
cltd
pop
sbb
pop
pop
pop
jno
pop
mov
cmc
addr16
push
in
daa
cmp
xchg
jns
xchg
dec
inc
arpl
mov
dec
pop
loopne
mov
push
xor
mov
jmp
cli
mov
sbb
repz
pushf
pop
dec
stos
fnstsw
push
in
imul
arpl
mov
cld
arpl
jbe
add
fs
xor
add
cmp
push
mov
ja
ret
adc
mov
in
xchg
xchg
inc
xorl
fs
push
repnz
mov
nop
adc
lock
add
inc
mov
push
cmp
out
pop
out
int3
mov
test
es
cli
add
cmp
inc
lret
daa
sahf
mov
cmp
mov
or
jb
inc
cld
leave
push
inc
mov
xor
dec
adc
imul
mov
push
mov
fs
sbb
sbb
and
push
rorl
nop
xor
xchg
xor
sub
test
imul
test
dec
addb
cwtl
sub
mov
fdiv
icebp
jge
outsl
jb
fdivrp
je
in
incb
sahf
mov
and
icebp
test
sbb
fsubs
add
std
mov
mov
iret
push
mov
mov
dec
lret
repnz
xchg
mov
xchg
stc
sub
imulb
popf
stos
call
mov
pop
sub
in
sub
inc
sbb
clc
loope
mov
pop
test
adc
add
outsb
bswap
rcrb
mov
icebp
into
push
jp
cmp
sbb
cmp
out
push
hlt
pop
sub
loope
in
rcll
cmp
lahf
aad
sbb
movsb
cwtl
mov
out
cltd
sub
or
movsb
xor
and
inc
inc
mov
mov
dec
sub
xchg
xor
mov
lods
dec
mov
or
add
and
mov
cmpsl
dec
mov
iret
xor
popa
xor
pop
or
icebp
inc
pusha
rcpps
cmp
jnp
cmpsl
cmp
mov
imul
or
inc
in
sti
mov
push
lcall
pop
mov
xchg
inc
push
jbe
in
lret
sahf
mov
sbb
stos
les
outsl
les
xor
cmc
nop
mov
sbb
xor
dec
xor
xchg
andb
fisubs
pop
data16
iret
in
or
cmp
das
test
inc
sbbl
push
or
test
test
jne
dec
inc
mov
mov
addr16
xchg
xchg
mov
xor
lahf
adcl
pop
dec
fnsave
cmpl
es
ficompl
mov
sbb
add
jno
outsb
js
add
lfence
xor
orl
gs
push
cmp
pusha
pop
fmuls
std
arpl
icebp
sub
sbb
pushf
dec
repnz
xchg
mov
lock
test
pop
xchg
imul
ljmp
out
and
push
pushf
push
jno
cmp
push
xchg
sbb
push
sahf
gs
cmp
push
sbb
mov
lods
rcrb
xor
movsb
or
dec
add
push
mov
insb
dec
push
inc
pop
stos
popf
adc
add
adc
ljmp
insb
das
cmp
clc
jae
adc
push
xor
push
vpcomw
test
popf
xor
mov
fcomps
fistpll
sti
test
cld
jnp
jl
lret
push
into
popa
pop
pop
scas
adc
inc
xor
dec
cmp
xor
pop
enter
add
and
and
or
repnz
lret
lds
inc
or
loope
inc
xchg
gs
mov
das
cmpl
loopne
cmpsb
es
and
dec
or
mov
adc
ljmp
pop
stos
push
shrb
lret
xchg
mov
mov
push
sbb
mov
sti
and
in
and
in
pushf
test
mov
push
pop
adc
iret
dec
aad
mov
test
jbe
rclb
pop
dec
jo
push
jle
mov
cmp
xchg
cmp
or
sbb
cwtl
push
outsl
mov
imul
rcr
ja
loopne
sbb
cmp
into
mov
xlat
inc
ja
adc
mov
hlt
inc
scas
dec
xchg
rcll
add
ret
popa
and
xchg
stc
inc
popa
daa
test
fisubs
mov
loope
fwait
mov
lock
mov
iret
addb
lock
test
xor
push
jae
or
out
mov
sahf
pop
xchg
adc
arpl
inc
les
in
mov
out
mov
jmp
mov
ljmp
push
adc
xchg
add
pop
std
sbb
cmp
jl
add
sbbl
mov
sti
cltd
ja
shl
aad
js
mov
dec
push
or
cmp
inc
test
sub
lods
cltd
hlt
lcall
fdivl
jecxz
sbb
mov
mov
shlb
push
mov
mov
adc
pop
sbb
cwtl
je
add
mov
dec
cmova
aas
pop
pop
xchg
mov
push
sti
cmp
jl
rcrb
out
adc
add
xor
or
fstpl
lock
frstor
scas
mov
ficoms
dec
popf
scas
testb
outsl
int3
in
xchg
mov
mov
int3
orb
xchg
mov
xor
scas
jl
sub
mov
add
and
push
fsubrl
cltd
push
push
iret
fisubl
adc
mov
arpl
mov
jge
cmpsl
enter
shll
ds
bound
insl
cmpsl
cwtl
stc
mov
mov
jns
sub
sub
sahf
test
nop
mov
cmp
push
mov
mov
mov
std
insb
movl
jnp
pop
mov
test
jae
cmpsb
fdivl
dec
aam
jae
xchg
rcrb
push
pop
xchg
and
inc
aas
mov
dec
dec
rcrl
mov
clc
cwtl
pop
ret
test
xchg
aas
and
jp
xor
xor
daa
mov
add
or
add
mov
lret
scas
or
sbb
inc
mov
popa
mov
roll
xchg
fsub
negb
out
mov
xor
jo
les
sub
or
lock
xor
pop
andl
sbbl
push
cs
or
mov
add
call
es
jb
iret
mov
out
push
loop
dec
inc
add
sbb
xlat
dec
mov
cwtl
jge
aas
mov
inc
push
rorb
rorb
and
mov
or
xor
in
js
cs
xchg
jmp
in
inc
ret
and
mov
or
sahf
mov
ds
and
in
ds
pop
lret
xchg
mov
dec
dec
pop
dec
xchg
repz
decl
shl
sbbb
insl
mov
xlat
adc
aad
xchg
push
mov
stos
movsb
xor
clc
orl
mov
icebp
cmpb
dec
cmc
sub
ficomps
pop
mov
xchg
xchg
fisubs
out
inc
mov
shrb
cmp
mov
outsb
push
stc
dec
sbb
dec
mov
imul
std
repnz
cltd
js
aad
testl
test
and
std
sbb
add
pop
fisttpl
or
mov
xor
lret
push
icebp
aad
fwait
pop
stos
jbe
push
pop
and
mov
ja
fs
push
adc
je
xrelease
in
rcl
in
sti
cmpsb
add
ficoms
insb
and
movb
add
mov
mov
or
fadds
jns
aas
push
jg
outsb
jl
imul
mov
sbb
call
loop
cmp
je
push
jbe
inc
sbbb
or
sbb
fisttps
andl
dec
in
xchg
clc
push
mul
add
scas
out
lea
and
pusha
mov
test
pop
testl
fsubr
and
negl
push
outsb
adc
out
movl
loopne
mov
xor
mov
fimuls
adc
cmp
mov
or
mov
js
pusha
lret
clc
pop
scas
test
xchg
mov
inc
pop
sbb
fldenv
bswap
push
out
mov
sbb
mov
cld
in
ret
pop
cmp
push
outsb
sub
shlb
repnz
into
mov
loopne
sbb
mov
into
xchg
jl
push
lods
stos
cmp
mov
test
lea
outsb
lcall
sub
add
jae
icebp
fucomi
pop
cld
inc
fwait
movsb
adc
jge
mov
popa
pop
push
jecxz
jp
dec
sbb
das
dec
loope
mov
mov
aad
inc
xor
jno
sub
jbe
dec
inc
and
cmp
rclb
loopne
sbb
in
aaa
lahf
into
std
push
cmc
inc
into
push
push
mov
mov
mov
bound
shrb
mov
lods
inc
mov
mov
sub
xchg
adc
jge
insb
test
pop
xor
fwait
aas
insb
scas
pop
and
imul
arpl
in
xchg
stos
loop
test
ret
cld
lock
xchg
ja
mov
inc
imul
pop
imul
fstpl
xchg
stos
outsb
aad
fiadds
mov
pop
xchg
mov
movsb
lods
mov
jg
mov
in
push
adc
fnsave
jg
push
sar
fnsave
test
je
pop
in
inc
in
push
mov
fiadds
fnsave
mov
hlt
xchg
iret
xor
jl
push
lods
jb
and
jmp
ss
jne
push
icebp
imul
jb
sub
cmp
inc
inc
sahf
adc
dec
jmp
or
push
or
pop
popf
add
cltd
xchg
fsin
jle
mov
nop
xchg
sbb
xor
cmp
stos
mov
out
push
hlt
rcrb
hlt
pop
fistl
mov
jae
shl
rclb
or
cmp
push
adc
fbstp
and
dec
out
inc
cmpsl
inc
outsb
inc
test
scas
adc
mov
iret
in
jecxz
mov
mov
iret
xchg
adc
lret
lds
in
sub
sub
popa
inc
or
in
in
clc
inc
mov
dec
data16
aas
lret
xor
lds
ret
cmp
mov
push
push
out
sub
insl
mov
pop
sub
jno
add
sbb
dec
push
adc
mov
sbb
sbb
bound
nop
add
addr16
cmc
loopne
jl
ret
sub
push
and
push
mov
js
sbbb
jo
loopne
cmp
cltd
cmpsb
dec
mov
add
rcll
lods
push
dec
and
dec
push
dec
dec
sub
shr
adc
xchg
jne
es
jle
mov
mov
ret
inc
scas
xchg
pusha
lahf
jmp
out
lahf
and
pop
das
out
dec
pop
dec
popf
into
lock
cmc
imul
mov
sub
xor
in
call
cli
aas
jbe
das
into
rclb
fidivs
and
orb
xor
into
loop
loop
rclb
push
in
jecxz
repz
adc
mov
sahf
out
push
imul
nop
or
jb
in
or
js
mov
xchg
testb
cmp
mov
and
dec
jno
out
xchg
test
mov
sub
or
sti
pop
fs
mov
in
rcrl
mov
or
js
aam
cmpsb
pop
push
movsb
loope
fnstcw
mov
sbb
xrelease
or
movsb
push
ds
insb
test
mov
sbbl
or
pop
xor
call
mov
xorps
lods
stc
insb
js
or
cmpsl
aam
push
inc
or
lea
xchg
push
jmp
sahf
cmp
jge
add
push
fists
adc
pop
push
dec
aad
or
jmp
nop
notl
lea
cltd
mov
mov
pop
shrl
cmpsb
xor
fcoml
popa
rorl
ja
inc
mov
lds
mov
xchg
mov
test
mov
cmp
xor
mov
movsb
add
pop
out
pop
and
mov
movsb
das
std
add
je
pop
in
pop
mov
divb
aaa
or
xchg
jns
gs
das
lcall
fsubrp
pop
cs
mov
call
inc
dec
mov
push
pushl
lret
pushf
aam
out
insb
mov
push
push
add
mov
out
xchg
ss
pop
xchg
mov
xlat
jb
shrb
lock
xor
xor
in
mov
ljmp
stc
push
sarl
lods
jecxz
pushf
loop
aas
inc
mov
pop
pop
and
shll
jmp
or
cmp
daa
shr
lods
push
sar
rcrb
rcll
aam
out
enter
imul
test
xchg
jb
into
xchg
ja
sbb
je
pop
mov
sub
outsl
mov
fsubl
mov
pop
cmp
jg
rcll
es
push
add
fisttps
jbe
dec
rolb
xor
repz
jl
and
pop
add
inc
ss
nop
pop
leave
pop
cld
mov
mov
lahf
jmp
mov
outsl
and
mull
mov
mov
jmp
leave
and
cmpsb
outsl
ret
lea
setl
gs
push
dec
je
imul
movsl
sbb
call
fistps
pop
and
push
xchg
fs
loop
test
popf
std
dec
push
loop
out
lea
jno
xor
nop
mov
lods
and
mov
jns
mov
push
fimull
fdiv
xorb
xchg
pop
mov
add
and
jne
inc
lcall
xchg
data16
test
nop
push
xchg
push
adc
or
imul
pushf
arpl
out
and
sbb
cmp
pop
inc
mov
dec
test
outsb
ret
or
orb
adc
sbb
adc
ds
mov
fnstcw
lds
sub
cltd
and
inc
nopl
inc
ja
lds
ret
fstpl
mov
call
xlat
stos
enter
rcr
jle
adc
es
aaa
outsb
lods
push
cwtl
mov
xchg
inc
mov
mov
xor
fldt
inc
mov
fbstp
addr16
outsb
xchg
xchg
adc
mov
push
mov
xor
lods
aaa
cmp
popf
hlt
scas
ljmp
add
add
fcoml
popf
lcall
adc
mov
stc
je
xor
stos
inc
dec
shl
loopne
in
mov
or
sub
sub
movb
lahf
fistpll
pop
dec
sti
xlat
lods
fdivrl
xorl
mov
sti
sbb
fwait
inc
mov
enter
cmpsl
pop
movsl
sahf
and
xor
into
enter
mov
pop
mov
imul
scas
fwait
mov
dec
jmp
test
idivb
ja
cltd
jbe
push
mov
push
mov
popa
push
bound
jl
sbb
sub
aad
cmp
in
jg
cs
add
cltd
sub
mov
fucomip
pop
and
in
add
or
jno
pop
pop
adcl
int
and
cs
dec
lods
or
outsb
jbe
lock
addr16
mov
mov
test
loop
cwtl
js
inc
ss
in
sub
fildl
pushf
ljmp
roll
jns
sbb
rorb
xchg
cli
inc
adc
das
scas
popa
xchg
test
sbb
int
mov
jge
sub
ja
cmp
out
xor
dec
sub
cmp
gs
or
filds
mov
mov
movsb
pop
in
pop
neg
shlb
mov
test
pop
cmp
movsl
sahf
test
cmpsl
fs
sub
lock
sub
cmp
jbe
cwtl
arpl
icebp
in
cmpsb
jne
pop
xchg
sbb
aad
movsb
repnz
pop
mov
push
dec
out
xchg
je
sub
imul
adc
jge,pn
jns
cmp
dec
xchg
pop
test
test
out
into
gs
iret
jp
inc
leave
mov
stos
push
cmpsl
mov
mov
pop
ja
in
je
xchg
jnp
outsl
jns
inc
js
cmp
andb
imul
sbb
xchg
jecxz
dec
inc
dec
xor
sbbb
mov
sub
bound
mov
scas
cli
inc
negl
decl
stos
test
scas
jne
sbb
sbb
pop
mov
mov
lods
adc
in
xchg
mov
gs
cwtl
lock
ljmp
pop
test
mov
mov
imul
inc
bound
cmp
inc
movsl
jo
js
std
aas
ds
js
mov
aaa
movsl
mov
addb
jmp
push
xor
shll
aas
cmpsl
add
fsubrs
fwait
pop
xchg
xchg
add
insb
mov
xor
mov
dec
iret
adcb
aaa
sub
mov
dec
mov
shlb
add
rorb
xor
mov
jge
addr16
push
add
call
leave
xchg
insb
imul
pushf
xchg
int
inc
into
cmp
mov
adc
test
dec
call
int
fwait
jmp
jae
push
fildl
pusha
cmc
aaa
inc
pop
pop
or
gs
out
movsl
mov
lea
in
fwait
push
or
sub
fwait
sti
inc
lcall
clc
repnz
mov
and
lods
repz
sub
xchg
popa
sub
cwtl
test
or
sbb
mov
push
test
ror
or
inc
imul
and
push
testl
inc
ficoms
jo
ds
mov
mov
mull
clc
jno
lock
sbb
test
jae
data16
shl
sub
and
lcall
sub
stos
mov
pop
xchg
movsl
sub
jp
lock
pop
mov
subb
or
fnstsw
out
cmp
xor
orl
mov
lock
sub
cmpsl
addb
aas
mov
stos
xchg
cmp
adc
aad
mov
test
push
mov
arpl
fcoms
lret
clc
jmp
add
lods
mov
pop
out
imul
jl
or
sbb
popf
mov
add
pop
xor
push
and
xlat
mov
xor
mov
xchg
lods
push
push
out
popf
lods
mov
in
mov
in
ror
std
jnp
ret
push
test
cmp
add
lds
std
aas
aad
sahf
push
push
pop
daa
int
adcl
scas
push
ja
sub
add
rorl
inc
mov
xchg
xor
lahf
fsubrs
das
adc
mov
adc
mov
mov
jb
xchg
jecxz
push
dec
popa
lahf
insb
imul
inc
in
insb
outsb
mov
and
out
mov
out
add
jae
xchg
inc
ljmp
push
sub
push
jecxz
sbbl
sub
jb
sbb
movsb
test
sub
out
and
inc
roll
xchg
and
xchg
es
adc
pop
stos
xchg
xchg
ret
or
sti
jo
xor
sbb
cmpsl
sbb
jmp
jnp
rorb
dec
add
pushf
pop
sbb
lea
lds
js
push
xchg
and
or
mov
fdivs
lea
jo
xchg
popfw
scas
jg
nop
ds
and
adc
lcall
divb
and
xchg
stc
outsb
or
jne
or
test
push
mov
cmp
outsb
inc
popa
gs
enter
sbb
cld
jp
push
inc
in
in
sbb
out
je
jmp
cmp
inc
wrmsr
addb
jp
aas
adc
mov
or
sbb
rol
sbb
jne
jnp
adc
mov
subb
xchg
inc
mov
invd
push
loope
scas
ss
imull
add
pop
lock
add
in
dec
and
xor
adc
xor
ss
push
push
je
bound
dec
mov
jge
pop
jbe
lcall
or
pop
repz
jp
stos
repnz
nop
adc
pop
mov
or
add
jae
loop
mov
daa
mov
sub
push
pop
jp
int3
stc
nop
or
fcompl
arpl
pop
insb
call
lods
add
push
repnz
mov
cmp
mov
mov
pop
shll
rorw
push
mov
or
inc
cltd
pushf
negb
and
inc
fidivs
dec
pop
out
dec
lea
jecxz
sahf
test
mov
in
lret
rolb
pop
mov
test
or
test
xchg
popf
sti
pop
mov
add
mull
xchg
outsl
out
push
push
adc
push
push
in
push
daa
or
jbe
push
lods
xchg
lods
mov
ljmp
cmc
mov
push
clc
and
pop
push
mov
mov
repnz
mov
add
fst
xor
fs
rolb
add
push
test
std
leave
gs
int3
mov
aad
and
mov
insb
imul
pop
icebp
jno
mov
xor
sbb
xor
fldenv
and
sbb
pusha
ljmp
sbb
movsl
cmp
xor
adc
jg
xor
or
lods
jb
adc
daa
testb
mov
nop
dec
fwait
in
mov
aaa
push
lds
sti
stos
dec
xor
xor
or
scas
leave
add
mov
cld
into
insl
cmpsb
pop
cmp
jbe
lock
sti
inc
pop
les
fmull
js
xchg
cmp
icebp
mov
daa
ds
push
nop
dec
push
test
pop
inc
arpl
push
into
jae
sub
daa
hlt
add
mull
es
shrl
sti
shl
push
repz
or
rcrb
mov
test
aaa
pushf
sahf
jnp
lods
sub
mov
iret
mov
cltd
xor
or
or
in
xchg
lcall
dec
push
call
fwait
lods
lock
and
lods
das
rcl
lsl
test
push
jb
jle
inc
clc
sarl
push
fwait
pop
jnp
jmp
cwtl
js
lahf
sub
jmp
data16
rcrl
push
js
xchg
or
inc
sahf
or
mov
outsb
sbb
cmc
ja
cld
mov
fiadds
enter
jns
jl
js
aas
mov
lods
outsb
xor
ljmp
inc
fidivrl
xchg
loope
xchg
adc
imul
mov
in
imul
rorb
jmp
js
cmp
sahf
adc
pop
fdiv
mov
fs
not
mov
loop
fdiv
sbb
dec
inc
adc
enter
movsb
sub
sub
push
jmp
hlt
sub
les
rorb
mov
jno
push
pop
cmp
pushf
adc
daa
inc
cs
add
cld
and
inc
int3
dec
dec
jmp
xchg
dec
sbb
jecxz
lret
lret
xchg
dec
movsb
and
add
gs
mov
xchg
xor
cmpsl
into
mov
outsb
or
inc
ljmp
xchg
inc
test
mov
push
loope
xorl
mov
add
fnstcw
jb
dec
xor
jmp
adc
daa
mov
add
adc
pop
out
push
repnz
cwtl
or
inc
jecxz
sbb
rcrl
pop
rclb
xlat
or
cmp
push
add
stos
test
fmull
add
mov
ret
push
les
inc
sbb
sbb
and
pop
or
mov
pushf
inc
add
js
cmp
xor
xor
lahf
into
inc
mov
pop
in
pop
or
sahf
movsl
inc
sbb
ds
mov
add
movsl
mov
cmpsl
adc
jne
subb
pop
pop
sbb
fistps
lods
jge
pop
scas
dec
andl
add
jae
cltd
inc
aas
cmp
lods
push
ret
push
xchg
lods
inc
pop
mov
push
lret
imul
out
call
ja
fdivs
fistps
pop
fs
mov
cmc
xchg
jmp
ret
test
sbb
pop
sub
pop
jmp
arpl
dec
ds
mov
pop
popf
adc
ljmp
or
sti
sub
or
pop
xor
pop
jg
js
and
les
jecxz
cwtl
ret
out
xor
inc
mov
push
push
adc
ret
mov
mov
mov
addl
sub
sub
out
xchg
add
ficoml
push
add
mov
push
and
out
push
xchg
ds
push
fs
test
gs
mov
or
div
inc
push
imul
enter
movl
stos
jl
sbb
pop
pop
add
sbb
push
mulb
pop
inc
rcrb
push
ret
aam
movsb
mov
aad
test
fcomi
rcl
movsb
ret
addr16
push
push
shlb
sahf
subl
sarl
stos
insb
aad
add
xor
aaa
cmpsb
push
ja
sbb
pushw
rorl
mov
testl
clc
lock
jno
and
jecxz
dec
repnz
mov
mov
adc
popa
jno
jnp
test
push
sub
jno
in
loope
insb
cmp
mul
cmp
jle
add
daa
xor
jno
inc
and
xor
dec
test
sarb
sbb
push
xor
dec
mov
imul
roll
aam
andl
sbb
repnz
out
call
mov
pop
mov
mov
push
push
or
int3
or
xchg
dec
in
jl
mov
sti
cwtl
jle
mov
and
xlat
pop
mov
mov
sbb
jg
lods
xchg
mov
pop
dec
adc
lcall
dec
bound
cltd
fdivrs
jle
stos
inc
pushf
push
rclb
mov
cmp
add
adc
sbb
jge
imul
fcomp
enter
fists
cwtl
xchg
xor
dec
xor
cmp
jne
xchg
jge,pt
jno
xor
or
mov
and
xchg
rorb
jae
sbb
add
sbbl
cli
pop
negb
push
mov
sbb
jo
fwait
and
dec
inc
inc
dec
scas
vsqrtps
jae
mov
pushf
mov
jbe
adc
test
clc
jl
lds
aaa
mov
fnstsw
in
hlt
loope
mov
push
lods
scas
or
mov
lock
lods
outsl
add
pop
push
cmp
ljmp
js
and
sbb
aas
pop
loope
mov
dec
cmp
es
adc
jge
mov
dec
inc
fwait
es
lds
mov
adc
push
in
pop
lcall
add
sub
in
movsl
outsb
out
sti
inc
mov
icebp
leave
add
push
mov
xor
or
cmp
push
sbb
testl
mov
or
xchg
cs
xchg
in
psubd
fisubs
sbb
sahf
imul
or
or
mov
jae
and
adc
mov
rolb
mov
push
pushf
jp
sbb
sub
fisubrl
xor
fnstcw
xchg
lock
stc
aas
mov
aam
push
pop
mov
cmpb
pushf
dec
sub
movsl
add
daa
xlat
daa
sub
repz
jo
xor
popf
cmp
jg
hlt
mov
rol
and
mov
cwtl
inc
enter
cmp
mov
call
lea
sub
inc
shrb
out
test
out
dec
mov
mov
lahf
inc
push
mov
out
or
push
sbb
dec
xor
fnstenv
aam
lds
outsl
fidivl
xchg
fidivl
shlb
aas
mov
outsb
test
int
pop
adcb
inc
add
popa
inc
lahf
fisttpll
loopne
dec
outsl
js
je
push
adc
shrb
repnz
std
or
xlat
inc
xor
fadds
mov
cmp
mov
lret
pop
inc
lods
and
insl
in
dec
sub
ret
mov
pop
and
scas
jg
movsl
inc
mov
ss
sbbl
push
icebp
shl
pusha
mov
inc
ljmp
out
iret
movsl
jne
popa
jl
inc
xor
enter
imul
lock
mov
jae,pt
div
pushf
faddl
dec
sbb
dec
sub
arpl
mov
push
and
sub
cwtl
fnstcw
fisubl
xchg
sbb
pop
inc
xor
faddl
jp
push
adc
or
mov
cmpsl
pushf
xor
idivb
fsubrs
in
mov
mov
imul
lods
sub
xlat
or
or
fwait
adc
int
jae
insb
mov
jnp
adc
movsl
in
sbb
ds
cmpl
testb
add
jmp
aas
xchg
dec
pcmpgtw
pop
in
into
dec
ret
sub
popf
xor
xchg
shl
mov
test
push
mov
mov
add
pusha
shll
in
in
daa
fdivs
incl
loop
lret
pop
loop
xchg
out
mov
adc
enter
faddl
pop
rcrb
nopl
cs
jecxz
scas
dec
test
pop
dec
mov
lret
and
in
clc
push
in
inc
les
daa
sub
adc
or
pop
inc
push
test
jp
js
ficompl
push
dec
mov
into
ficompl
xor
adc
mov
ret
and
jne
pop
andl
xchg
sti
adc
out
xor
lods
xchg
sub
fisubrs
xchg
movsl
prefetch
cmc
mov
movups
pushf
pop
push
mov
mov
pop
jmp
ret
in
cltd
xlat
push
les
add
fidivrl
xor
cmp
mov
repnz
jle
int3
leave
rcrb
aam
dec
add
mov
xchg
or
sbb
data16
pop
out
add
mov
das
xor
hlt
out
xchg
mov
or
pop
sbb
jne
jecxz
imul
scas
fidivrs
cmp
into
xor
ja,pt
cmp
fdivs
xchg
push
pop
mov
daa
icebp
andb
bound
repnz
into
mov
lods
popa
nop
add
shlb
into
aaa
aad
xor
mov
add
jnp
dec
pop
add
mov
divb
scas
sarb
pop
adc
popf
sbb
xchg
aas
or
addl
push
cmp
popf
mov
in
xchg
test
popf
push
sub
loopne
icebp
sbb
scas
sub
cmp
xchg
adc
scas
pop
jnp
aam
sahf
nop
lcall
sub
jbe
das
imul
adc
jbe
mov
jne
push
ds
jp
movsl
adc
push
add
pusha
xor
xchg
xadd
inc
push
int
stos
stos
fs
test
cmp
pop
dec
movsb
fwait
out
je
add
or
mov
scas
pop
and
inc
jns
cmp
stos
jge
cmp
daa
jl
push
dec
mov
xor
sar
orb
pop
das
add
aad
inc
jmp
mov
sbb
xor
or
jbe
pop
xor
jle
fs
icebp
mov
jb
mov
stos
stos
add
in
xchg
xchg
orl
jle
sarb
test
pop
pop
je
pop
pop
idivl
cwtl
mov
mov
pushf
movsb
and
nop
cmpl
fs
loop
inc
dec
incl
fldt
lock
add
jle
pop
jle
dec
sahf
mov
pop
sbb
mov
jae
repz
pop
orl
mov
xchg
outsb
add
add
and
cs
loop
sbb
dec
in
mov
mov
add
je
jns
sbb
subb
sub
stos
lcall
jo
mov
inc
xlat
rorl
subl
fs
cmp
fldenv
stos
push
mov
in
mov
loopne
sbb
ret
scas
call
into
movsb
mov
inc
mov
push
jp
std
xor
outsb
push
sbb
pop
dec
pop
mov
mov
mov
imul
inc
sti
inc
push
dec
das
gs
and
xchg
stos
cmp
sub
fwait
lock
mov
xchg
in
xchg
addr16
or
xchg
push
adc
sub
shll
shl
rol
pop
dec
lods
jbe
idivl
icebp
adc
insb
sbb
das
loop
and
inc
mov
mov
je
inc
stos
lock
pop
inc
push
push
fdivl
pusha
out
imul
mov
fwait
dec
mov
mov
movsb
push
fidivl
cmp
push
sbb
stos
shll
mov
mov
xchg
jns
fdivl
aas
mov
jmp
pop
adc
fcoml
shrl
in
pop
shlb
xor
sbb
push
iret
mov
mov
add
xchg
jb
out
and
les
xchg
jp
pop
lea
xor
add
pushf
inc
test
icebp
xlat
in
bound
push
cmp
arpl
fwait
jp
in
sub
adc
mov
or
cmp
addr16
push
pop
lahf
gs
in
fdiv
mov
dec
mov
test
scas
test
or
push
inc
enter
call
cltd
and
arpl
adcl
cmp
lret
pop
lret
out
pop
mov
cmp
insl
push
movsl
ds
pop
cmp
sub
mov
ret
mov
popa
xchg
and
jnp
out
repnz
test
jo
ds
pop
mov
fcoms
sub
stos
jp
jmp
cltd
lds
mov
aad
addr16
mov
ds
loope
pop
add
ja
nop
cs
sbb
and
repz
cmp
js
and
scas
push
sub
xor
adcb
test
gs
xchg
push
movsb
add
jns
mov
in
xchg
pop
in
out
repnz
cmpsb
cmc
cmp
sbbb
rcll
sub
xchg
jbe
scas
imul
popf
dec
sahf
fs
out
in
sbb
xor
cltd
daa
cmc
mov
push
in
addr16
cmp
shrl
push
sarb
push
pop
test
andb
lock
mov
adc
ret
les
push
mov
cli
xor
sarl
out
inc
and
push
aad
gs
subb
cmp
lds
fidivrs
lret
fildl
mov
xchg
pop
xchg
test
push
and
stos
adc
jmp
sbb
xor
dec
pusha
clc
shlb
mov
testb
pop
scas
dec
jnp
lcall
jb
gs
push
mov
outsl
test
dec
ds
outsb
repz
push
and
and
sbb
pop
jl
fwait
stos
in
in
push
push
jne
popa
pop
xchg
jle
adc
jnp
pop
xor
imul
lcall
cmp
inc
in
dec
add
xor
pop
pop
inc
mov
mov
in
test
arpl
adc
outsb
shll
int
stos
lods
jp
push
xchg
mov
sbb
or
sarb
or
sbb
test
test
add
mov
inc
xor
dec
jo
and
sub
mov
lahf
fsin
mov
jg
xor
jge
leave
das
in
lcall
pop
add
stc
sbb
jbe
cmp
in
lds
lods
inc
xor
test
imul
sub
std
fwait
add
lcall
es
cmpsl
out
fsubrs
jg
xor
inc
fdivl
jg
xchg
fistpl
push
into
cwtl
adc
sub
mov
cld
test
and
xchg
stos
push
in
mov
cld
in
lea
fmuls
fwait
lahf
dec
ljmp
ror
data16
stos
outsb
xor
fs
sbb
push
out
jbe
inc
popf
aam
push
pop
push
sarb
xchg
ds
add
sbb
lock
push
jl
inc
xchg
mov
jns
mov
inc
inc
int
sahf
add
sub
int3
hlt
ljmp
rorl
xor
cmp
repz
mov
mov
mov
shlb
scas
and
xor
push
sahf
mov
repz
or
sahf
into
sti
cmp
xchg
cmp
out
mov
aas
mov
fbstp
jae
mov
lods
stos
mov
in
sub
in
repz
xor
sub
mov
jp
ret
push
in
lock
imulb
adc
out
out
adc
mov
test
lds
mov
fdivrl
pushw
mov
cmc
mov
lahf
sbbl
sarl
jns
ja
lret
dec
outsl
lods
cmp
lahf
inc
dec
xor
sahf
ds
or
sbb
cmp
pushf
aam
cmp
mov
mov
lock
lds
aaa
push
sub
sbb
jle
pop
dec
icebp
dec
xchg
addr16
fistpl
aam
pop
push
fs
mov
xchg
test
sbb
ds
icebp
mov
fisttps
jg
pop
xor
pop
sub
rcrl
dec
popf
mov
stos
idivl
dec
jl
aaa
push
je
lcall
jb
mov
xchg
sbb
lret
pushf
pop
push
sub
and
and
jo
data16
cmpsl
dec
cmc
mov
dec
jo
add
mov
mov
fucom
js
jns
sbb
ja
mov
sbb
dec
pusha
jbe
and
test
loop
dec
int3
inc
fwait
pop
mov
mov
icebp
std
or
inc
sbb
lock
scas
rcll
mov
clc
mov
popa
xlat
shlb
xor
push
lds
mov
aam
push
mov
ret
jmp
ror
divl
ret
adc
jmp
mov
push
fdivrs
incb
cmpsb
jp
xlat
or
sub
inc
data16
fsubr
add
movsl
or
scas
mov
pop
jb
int
stos
xor
jmp
sub
adc
mov
popf
clc
pop
in
lods
popf
xchg
daa
xor
or
aaa
mov
int3
jae
and
inc
leave
in
add
shl
mov
pushf
pushf
les
and
mov
fsubrl
std
cmc
sub
mov
rcrl
cmp
inc
mov
cmpsl
xlat
push
cmc
cmp
inc
sub
scas
mov
or
xchg
cmpsl
nop
out
pop
push
das
adc
cld
pushf
inc
xor
jo
xchg
cld
pop
push
mov
xchg
fisubl
or
insb
dec
xchg
mov
fsubl
xchg
into
adc
xlat
lret
push
mov
in
adc
cmp
es
ds
pop
popf
mov
add
xchg
int3
daa
pushf
addl
out
std
or
cltd
jg,pt
push
inc
scas
cmpsb
mov
mov
stc
mov
cmp
xchg
ficompl
and
pop
imulb
xor
inc
sub
inc
lods
sub
hlt
jo
dec
iret
das
dec
mov
xchg
popf
inc
dec
les
test
add
xor
in
aam
push
inc
dec
or
sbb
test
xor
arpl
jae
sahf
aaa
mov
adc
sahf
dec
icebp
lods
pusha
jo
xchg
pop
ja
setno
mov
daa
jb
iret
sbb
in
mov
negb
push
jb
sub
add
xor
and
std
xchg
aas
popf
sbb
cli
shll
cmp
inc
adc
pop
mov
pop
jae
push
xchg
pop
das
jnp
rcl
pop
cmp
mov
xchg
int3
or
lret
push
fldcw
dec
xchg
movb
mov
arpl
cld
lods
adc
mov
xchg
sub
into
outsl
lcall
cmpsl
jne
rorl
lret
cmp
mov
stos
push
popa
xchg
cmpsb
lods
insb
lahf
push
rcrl
out
andb
xor
lock
sub
pop
cmp
push
cld
lret
lcall
pop
arpl
test
sbb
fwait
pushl
in
sahf
cld
inc
divb
lds
sbb
push
push
mov
mov
int3
mov
mov
push
stos
cmp
adc
or
sub
push
pop
xchg
mov
dec
nop
jge
or
es
add
inc
mov
push
and
cmp
in
push
insl
aam
int3
inc
add
cltd
jmp
push
dec
pushf
pop
dec
jo
bound
cmp
dec
inc
jne
pop
div
insl
inc
sbb
pop
inc
lahf
push
rcll
aaa
dec
mov
mov
xchg
pushf
test
pusha
fsubrl
ror
shr
fistps
lock
xchg
xor
jae
cld
push
xchg
push
pop
rclb
jmp
cmpsb
aaa
rcrl
pop
incl
daa
mov
mov
or
cmc
ret
ja
mov
pop
dec
and
adc
add
jecxz
or
fdivrs
inc
sbb
pop
mov
cmc
and
rcrl
jge
adc
inc
mov
mov
pop
inc
mov
and
sub
std
inc
jbe
push
push
xor
ds
enter
or
jge
sarl
lahf
cmp
cwtl
jl
jg
xorl
lahf
setg
mov
cmp
and
lea
fcmove
jge
fcomip
imul
insl
repnz
and
scas
sbb
inc
adc
clc
jmp
xor
inc
arpl
mov
adcl
xor
aam
orl
ds
push
xchg
scas
dec
imul
es
cld
pop
fs
lahf
mov
push
pop
ficoms
xor
or
icebp
cmpsb
ret
andl
pop
xchg
test
orl
push
sarl
sbb
jge
out
insb
arpl
pop
outsl
data16
addr16
daa
jae
jecxz
cmpl
sarl
mov
jge
mov
mov
into
inc
and
das
mov
sub
movsb
pop
push
lock
jae
lods
jns
out
pop
movsl
sarb
xchg
mov
imulb
lock
xlat
movsl
jns
das
xchg
clc
xor
cmp
mov
lods
popf
add
inc
gs
or
jno
subb
ja
sar
popa
mov
rcrl
sbb
cmpsb
iret
and
push
ds
and
inc
sbb
mov
or
lds
sbb
les
sub
popf
das
push
cs
ljmp
or
stc
mov
jb
into
pop
mov
in
xchg
xor
mov
clc
mov
cmc
movsl
mov
mov
or
lahf
xchg
pop
push
sahf
xor
ret
xor
adc
insl
sub
inc
nop
jmp
insl
mov
push
sub
into
sbb
push
mull
push
outsl
or
push
cmc
mov
pop
jo
push
sahf
ds
cmp
rorl
push
sub
dec
mov
out
dec
roll
mov
pop
dec
dec
addl
sarb
pop
lods
sub
sbb
gs
les
push
and
mov
mov
jno
jno
movsb
dec
sbbb
stos
repz
jns
sbb
mov
fldcw
rolb
mov
inc
ljmp
xchg
movl
addr16
pushf
shl
cmpsb
addr16
cmp
xchg
shll
or
loope
cs
push
mov
aas
jle
insb
das
inc
cmp
into
dec
cmp
sti
in
add
jnp
das
mov
push
fwait
mov
outsl
lea
xor
adc
cmp
mov
insb
pushf
out
std
das
lods
xor
cmp
je
xchg
test
mov
mov
bound
sub
cmp
cld
mov
jmp
mov
js
ret
inc
pushf
dec
push
fdivl
jle
cmp
jmp
inc
lret
in
outsl
enter
mov
jae
dec
jl
testl
cmp
pushf
sbbl
inc
jno
jmp
movsl
xlat
dec
xor
and
mov
and
insl
xchg
xchg
ds
movsl
or
lahf
mov
cs
js
rcr
pop
popf
sub
int3
mov
sti
pop
ja
mov
out
jmp
mov
mov
mov
jae
pushf
jo
inc
cld
or
cld
shll
loopne
bound
push
sub
in
lret
loopne
iret
int
aaa
xchg
cmpl
rcr
sbb
les
add
fisubs
in
addr16
push
sbb
pushl
inc
sbb
clc
in
subb
xchg
pop
sub
lea
cmc
lock
outsl
imul
lds
dec
cli
adc
pop
push
mov
das
in
dec
xor
mov
push
add
ret
push
fs
xlat
je
pop
jbe
addl
xchg
jg
xor
mov
and
ljmp
push
dec
pop
in
cltd
ljmp
xchg
ja
cmp
arpl
or
scas
out
and
mov
cwtl
cli
imul
and
xlat
rcrb
sub
shl
stos
or
gs
pop
out
lea
shlb
adc
stos
and
xchg
push
aas
ret
push
int
and
adc
imul
adc
pop
and
insl
add
push
clc
xor
xchg
and
jge
pop
adc
cld
xor
lea
dec
inc
xor
int3
sbb
cmp
adc
testl
sti
outsl
mov
sbb
push
jno
daa
cmp
mov
sub
arpl
sarb
insl
xchg
dec
inc
pushf
stc
movsb
xchg
lret
cli
mov
adc
divb
add
jge
pop
shll
call
dec
fidivl
lods
das
sbb
mov
test
xlat
sarb
cmpsb
jmp
pop
sar
mov
in
cld
inc
pop
pop
push
fcom
or
add
test
cltd
xchg
leave
push
mov
test
imul
adcl
jl
jge
pop
shlb
add
fists
sbb
sub
shlb
cmp
stos
stc
and
in
pop
dec
jg
shrl
mov
bound
ja
xchg
in
stos
inc
jle
notb
out
dec
gs
xchg
out
addr16
push
test
aaa
or
xchg
jge
ss
sarb
std
add
jle
xor
or
mov
cs
imul
push
scas
adc
inc
rcll
dec
aad
test
inc
les
test
fisttps
xor
movsb
push
mov
xor
repnz
fsubs
sub
sbb
fdivl
mov
ret
add
cltd
fistps
int3
pop
pusha
inc
add
aam
adc
outsl
cli
sub
je
ret
fucomp
push
xor
movsb
popa
mov
pop
int
popf
insl
shl
mov
call
mov
dec
sub
xor
movsb
and
sti
dec
mov
mov
sub
adc
push
int
gs
xlat
jecxz
mov
mov
or
call
lods
pop
fucomi
mov
in
popa
pop
push
arpl
mov
inc
lcall
mov
movsl
adcl
das
jbe
rcrb
cmp
or
ret
inc
xchg
ja
movb
jnp
test
ja
outsb
sub
outsl
dec
add
scas
adcl
jnp
push
push
xchg
jnp
mov
inc
pop
dec
xchg
jp
mov
push
cmc
xor
or
add
push
inc
js
push
cmc
dec
ficompl
and
loopne
cs
adcb
shll
adc
jae
jae
negb
fimuls
mov
push
push
das
xchg
jb
sbb
popa
addr16
mov
push
or
test
mov
push
out
out
mov
out
ret
popf
test
lods
xor
add
sbb
fnstenv
add
pop
add
insl
sub
lock
mov
or
sbb
fnstsw
jb
mov
adc
or
fwait
imul
adc
daa
push
push
mov
pop
rolb
jno
or
out
mov
pop
jge
push
sarl
pop
inc
sarl
lock
int
out
xchg
xor
pop
daa
jle
call
adc
test
xchg
xchg
xor
mov
bnd
mov
xchg
mov
pop
xchg
test
inc
cmp
mov
mov
jo
ja
mov
in
push
ja
lock
or
pop
test
popa
adc
cmpsl
jmp
sub
pop
fwait
lods
xorl
in
inc
es
cwtl
pusha
bound
mov
and
push
mulb
xor
imul
add
iret
lret
loop
inc
nop
xorl
mov
enter
and
popa
xchg
adc
sub
pusha
mov
out
jno
push
icebp
cmpsl
push
lea
or
jo
cmp
or
sub
repnz
pop
dec
fdivrl
mov
add
fwait
in
push
dec
js
mov
adc
mov
and
sahf
pop
ret
sub
xor
fiadds
pusha
lods
and
adc
mov
into
push
nop
enter
jae
sarb
addr16
bound
cmpsb
loop
mov
cmc
cmp
popf
xor
add
fdivrs
mov
sub
cmp
push
dec
inc
and
jg
xlat
dec
mov
test
aam
push
sbbl
incl
jne
jmp
add
adc
or
fcmovnb
mov
ds
repz
mov
pop
adc
insl
inc
mov
xlat
fnstenv
ret
push
lret
xor
lret
mov
movups
cmpsl
xor
in
insb
addr16
mov
inc
mov
jle
and
adc
mov
jb
push
dec
imul
std
out
sub
mov
jge
in
push
in
jl
das
fldcw
cmp
xor
cmp
xlat
inc
loop
scas
jae
xor
push
movsb
push
cmpsb
das
dec
lcall
cmp
dec
lock
cs
aaa
lods
pusha
ffree
sub
xchg
mov
mov
jmp
xor
push
das
ljmp
addr16
pop
and
jge
enter
repnz
mov
repz
ljmp
je
push
push
mov
add
jne
aad
mov
fucomip
leave
insl
dec
std
jo
push
imul
shl
in
xchg
inc
jns
adc
cmpsl
rcrl
shlb
sbb
mov
rcrl
pop
dec
mov
xchg
pushf
sarl
add
imull
push
ficoml
int3
lret
out
mov
sahf
push
jno
cltd
pop
mov
enter
cmp
aam
cwtl
cmp
test
dec
outsl
mov
addl
mov
inc
jbe
mov
push
inc
sub
inc
lahf
nop
sub
sbb
ficoml
out
jp
jnp
add
cmp
rcr
pop
push
ret
mov
jnp
aas
out
push
dec
lcall
shrw
pop
mov
sub
inc
push
inc
rolb
or
sbb
je
push
mov
inc
repz
mov
xchg
dec
hlt
inc
sbb
pop
inc
jmp
push
pop
mov
jns
add
cwtl
inc
ds
mov
dec
jb
dec
sub
dec
dec
fwait
xor
or
and
scas
notb
kmovb
mov
inc
push
shrb
sti
mov
cmp
icebp
cmp
add
dec
dec
daa
pop
cld
orl
dec
arpl
push
inc
xchg
jnp
push
test
shlb
mov
inc
fnsave
pop
enter
add
dec
push
jno
cmp
shr
les
xor
dec
pop
adc
aas
add
mov
popa
popa
cld
push
adc
xlat
data16
ds
nop
lods
pusha
sbb
iret
xchg
xor
lret
or
sbb
inc
jg
jb
dec
jg
cmc
imul
mov
push
repnz
push
push
cltd
or
mov
jecxz
sub
cmc
out
inc
add
je
bound
jnp
jbe
fcoms
or
cs
adc
aas
in
sbb
dec
ds
jo
xor
pop
add
push
arpl
pushf
pushf
adc
insl
xchg
pop
gs
adc
scas
outsl
jo
and
xchg
pop
mov
cmp
jne
or
repz
lods
stos
movsb
and
data16
jmp
clc
push
sahf
sub
or
fucomp
mov
dec
in
sbb
add
dec
ds
and
repnz
xlat
cmp
lret
add
mov
iret
std
das
aaa
clc
int
das
int3
lcall
mov
sbb
in
adc
jnp
cwtl
aad
sahf
test
jle
loope
mov
divb
or
push
aad
and
adc
add
hlt
cmpsb
push
pop
pop
push
dec
sub
lds
jne
and
ret
bound
pusha
push
xchg
arpl
fisttps
mov
push
out
xchg
jns
adc
loop
dec
das
shlb
rclb
std
sldt
fstl
xor
addr16
lret
xchg
push
arpl
add
push
icebp
enter
cld
fistpll
not
xchg
fldl
mov
sub
pop
mov
mov
cli
scas
pop
lret
jnp
ret
loope
bound
jns
shll
fcmovb
mov
sub
div
clc
in
addr16
pop
into
dec
lods
inc
dec
dec
out
mov
stos
negb
pop
jg
loop
out
mov
cmpsl
mov
in
pop
aas
xchg
mov
jns
iret
cltd
arpl
xchg
inc
sub
pop
fistl
inc
mov
push
scas
shlb
add
mov
lea
fldcw
ljmp
mov
add
push
loope
push
lcall
sbb
repz
jmp
rcrl
jno
lea
je,pt
repnz
imul
or
or
daa
xchg
pushf
cmp
push
pushf
jno
movsl
push
test
sbb
xchg
sub
jbe
and
pusha
jno
xor
cld
mov
ficoml
or
lcall
sti
addl
cmc
data16
movb
jmp
mov
ret
jo
xor
sti
adc
sbb
jge
or
scas
gs
xchg
ret
push
rcll
jns
jp
dec
or
cltd
rcrb
cltd
jbe
xchg
filds
mul
pop
idiv
lahf
aad
pop
aad
mov
outsl
pop
add
repz
rcrl
mov
ds
mov
pop
cmp
xor
sbbb
adc
mov
jnp
mov
add
lret
mov
lock
pop
mov
mov
adc
mov
and
mov
pop
or
and
mov
push
mov
jg
in
dec
sbb
lret
in
mov
mov
addb
test
jl
loope
mov
or
dec
cltd
aam
cs
pushf
dec
mov
cld
repz
or
xor
inc
pushl
cmc
pop
dec
rcr
jne
inc
iret
fsubs
testl
ja
adc
mov
lret
mov
inc
inc
test
mov
mov
cmp
addr16
push
xor
inc
hlt
xchg
daa
xor
shrl
add
ss
and
test
pop
outsl
cli
or
push
inc
add
loope
sub
xor
push
or
imul
mov
sbb
nop
mov
in
cld
cmp
shl
mov
mov
xor
inc
or
mov
jmp
mov
es
or
adc
inc
push
int
jge
mov
sti
outsl
fwait
mov
cld
add
sbb
mov
inc
mov
mov
mov
rcrl
insl
daa
cmp
sub
outsb
hlt
daa
lds
jne
fnstcw
icebp
pop
scas
add
mov
adc
xor
rorb
xor
push
add
ret
out
lahf
outsb
sbb
popf
fcmovbe
and
xor
ljmp
mov
std
aad
mov
sbb
dec
and
sub
scas
std
lods
sbb
sti
or
push
mov
inc
fld
sar
in
add
sti
bound
leave
xchg
in
mov
enter
pop
mov
add
rcr
dec
in
push
sub
js
push
push
and
insb
jg
sbb
mov
outsb
push
aaa
mov
out
adcl
std
xor
nop
daa
icebp
int
push
imul
adc
sbb
xchg
sbb
and
lahf
sub
mov
hlt
dec
xchg
ja
in
jle
ja
dec
sub
lea
push
add
scas
mov
mov
push
mov
lds
jp
ljmp
mov
int3
mov
jno
stc
in
or
cmp
pop
push
loop
pop
xor
xchg
jo
cld
cmpsb
pop
mov
lods
and
add
jnp
int
dec
mov
sbb
jnp
in
mov
jbe
sbbb
mov
lock
mov
add
xchg
or
xor
cld
lcall
pop
sbbl
in
jne
test
dec
and
xchg
sub
outsb
push
ja
stos
push
roll
gs
mov
jno
dec
mov
lods
ljmp
insl
test
sub
cltd
test
push
outsl
lret
xor
addr16
sub
aaa
xchg
pop
loopne
sbb
stos
lret
pop
aad
dec
add
inc
sbb
gs
inc
adc
dec
enter
inc
shll
je
adc
movsl
fldenv
loopne
inc
lcall
inc
pop
cmp
push
hlt
shrl
sub
mov
int
jo
mov
mov
aaa
sti
cltd
fdivrl
xor
or
or
dec
adc
int3
ret
dec
inc
cmpsl
dec
jl
clc
xchg
pushf
cwtl
cmpsl
adc
arpl
fsubl
jns
sbb
mov
inc
mov
dec
test
xor
lds
add
mov
lods
push
xor
dec
outsl
pushf
repz
add
lcall
ficomps
jo
jle
lock
data16
das
aam
dec
lahf
adc
lods
mov
into
repnz
mov
daa
in
sub
es
or
ljmp
add
sbb
dec
mov
mov
cli
cltd
inc
or
std
mov
or
andb
cmpl
test
rorl
push
add
nopl
cltd
loopne
push
mov
jp
out
push
mov
lods
add
movsb
jo
jns
push
mov
stc
inc
lret
lods
dec
xchg
loop
insl
negb
movsl
ret
sbb
push
lahf
pusha
jecxz
xchg
test
ja
outsl
stc
cmc
jnp
faddp
push
cmp
add
push
adc
mov
daa
lret
pop
mov
adc
lods
adc
push
inc
pop
mov
rcl
push
and
add
add
jbe
or
or
mov
nop
sub
fcmovnu
por
pushf
push
test
pop
pop
xchg
and
or
mov
movl
dec
ds
add
rcrb
dec
mov
out
mov
mov
leave
pop
dec
mov
mov
inc
dec
mov
cli
sub
jne
cmpsb
loope
cmc
inc
ret
icebp
outsb
stos
dec
stos
push
dec
mov
jmp
fistpl
jmp
cmp
cmovnp
adc
and
es
or
lock
mov
aam
push
push
insl
lret
dec
xchg
pop
adc
aad
movsb
mov
jnp
xor
mov
push
mov
xchg
data16
xchg
out
sbb
push
xchg
scas
mull
mov
jp
stos
mov
or
add
test
sahf
push
mov
jmp
lret
mov
testb
push
repz
lock
mov
mov
aas
pop
push
or
mov
xor
xor
seto
or
fsubs
mov
aaa
mov
aad
scas
mov
les
mov
ret
inc
jnp
xor
je
aas
mov
sub
outsl
xor
sbb
je
mov
fcmove
dec
or
daa
sub
adc
mov
sahf
pop
movsl
add
and
push
dec
nop
jge
add
xorl
shrb
mov
rep
movsb
xor
lret
or
mov
adc
outsl
and
sub
fldt
jne
sub
push
sbb
rorl
and
jmp
pop
inc
ljmp
ret
in
int
add
adc
movsb
push
cmp
dec
inc
add
in
jbe
add
add
mov
popf
cld
fwait
and
inc
mov
add
jle
jo
out
ret
inc
inc
xchg
hlt
aaa
bound
ret
pushf
push
sub
iret
or
insl
mov
sbb
gs
outsb
mov
cltd
arpl
sbb
aas
or
cltd
jl
pop
stc
or
xor
xorb
push
mov
bound
xchg
pop
and
jae
stc
sahf
cwtl
loope
sub
fidivrl
clc
push
dec
push
es
push
jbe
scas
and
lcall
out
ljmp
movsl
arpl
clc
lret
jle
jne
jbe
pop
inc
push
mov
jb
mov
or
jno
lds
mov
xchg
test
mov
lods
scas
mov
push
movsl
movsl
mov
outsl
mov
outsb
adc
in
out
mov
sti
insl
mov
scas
mov
nop
icebp
adc
je
leave
out
sub
adc
sbb
das
xor
and
pop
fs
jecxz
or
imul
subl
mov
mov
rolb
int3
scas
mov
or
outsl
add
inc
mov
sub
fxch
sbbb
push
in
sub
pop
pop
jo
sbb
cmc
adc
inc
dec
mov
clc
aas
mov
mov
adc
sub
icebp
pop
adc
out
loope
adc
push
adc
xchg
insb
mov
in
dec
xchg
mov
frstor
loope
adc
or
adc
add
push
enter
test
adc
int3
fs
cmp
or
jo
pop
insb
xchg
jmp
xchg
xlat
dec
or
xor
or
andb
sahf
scas
mov
dec
scas
jnp
inc
sub
hlt
mov
xor
sahf
mov
shlb
pop
push
addr16
leave
lods
inc
les
ljmp
cmp
bound
adc
inc
sub
jbe
adc
stos
daa
cli
dec
psrlw
xchg
cmp
push
mov
out
cmp
xlat
adc
sub
and
sub
push
sbb
or
stos
enter
or
in
jns
push
ljmp
dec
and
mov
sub
add
sbb
mov
xchg
dec
test
movsb
dec
leave
fcomp
out
cmp
mov
sbb
sub
fdiv
imulb
or
jge
rcl
mov
fildll
xor
mov
faddl
mov
test
cmp
fbld
mov
lea
ret
dec
int
add
pop
mov
mov
or
cltd
pop
loopne
xchg
out
jp
push
test
cmp
cld
mov
dec
out
xor
rcrb
out
fs
scas
adc
push
xor
les
mov
je
jne
push
or
loop
and
out
xchg
cmpsb
inc
xchg
sbb
mov
xor
bound
xchg
add
scas
pop
in
inc
fcoml
mov
out
ss
sbb
notl
dec
cmc
mov
mov
cmc
mov
lret
int
sbb
inc
dec
mov
push
cwtl
ljmp
loope
add
lahf
clc
push
pop
xor
adc
pop
popf
pop
mov
cmpsl
movsl
addl
out
sub
outsl
lods
ljmp
int
pop
dec
hlt
insb
dec
js
incb
or
xchg
sbb
movl
push
addr16
pop
dec
jge
mov
xchg
add
rcrb
xchg
add
sti
scas
rorb
xchg
xchg
mov
daa
mov
mov
out
mov
cmpsl
cmc
int3
adc
mov
push
fldl
push
sub
movsl
mov
idivw
or
stc
outsb
addr16
bound
and
out
pop
std
mov
hlt
xchg
mov
sbb
lea
test
lock
pop
jge
sbb
and
inc
test
xchg
mov
ret
outsb
mov
out
movsb
or
sbb
and
das
push
in
leave
call
clc
inc
stos
mov
fwait
mov
test
insl
ficompl
test
fldenv
popf
nop
adc
jnp
ror
dec
iret
cmp
cs
cmp
jnp
mov
sbb
adc
cs
xchg
es
pop
testl
jnp
cmovo
inc
jle
adc
push
cmp
add
inc
sub
jns
aad
pop
push
movsb
inc
test
lret
fsubs
cmpsb
pop
dec
notl
adc
push
sub
push
pop
dec
mov
clc
bound
outsb
and
xor
nop
dec
es
xor
push
cld
out
inc
ret
inc
loope
andb
sti
ret
xor
jne
inc
push
cld
cmp
push
sbb
dec
aaa
sbb
dec
push
and
push
inc
inc
stos
adc
push
fcompl
pusha
jge
mov
outsb
addr16
pop
loopne
sbb
clc
inc
mov
fimuls
mov
mov
inc
stos
cld
and
or
jle
inc
mov
sub
iret
cmp
push
rcrb
add
nop
push
nop
xor
jp
lret
psrlq
mov
gs
sbb
mov
sarl
roll
cli
lret
aaa
les
ja
cmp
fsubrs
fsubrl
push
aad
xchg
xor
es
mov
testb
push
cmp
pushf
icebp
xchg
mov
push
push
sbb
dec
movsb
stc
ja
mov
and
es
sbb
jg
add
shl
ret
cmp
xchg
push
sbb
notb
pop
and
out
frstor
pop
mov
xor
mov
jp
jg
and
push
cmp
fucomip
cmp
mov
cld
jg
in
add
psrlw
push
loopne
ljmp
lock
pop
adc
in
test
cmp
pop
shl
and
or
push
mov
mov
xor
xchg
sti
jnp
sahf
mov
jno
pop
cmp
incb
cmp
mov
in
shrb
fisubrl
jne
or
data16
push
stos
shll
push
aam
push
out
cmp
or
xorl
xor
out
mov
daa
mov
xor
dec
xor
pop
xor
mov
sbb
or
mov
test
or
test
lret
push
lds
rcrb
inc
insl
rcrb
ror
mov
sbb
loop
sbbl
mov
cld
into
insl
pop
pop
movsl
jns
add
movsl
or
sti
mov
out
arpl
sbb
imul
mov
lret
sbb
sti
cmc
jg
mov
sbbl
adc
or
shl
out
popf
nop
and
cmp
pop
push
mov
mov
push
mov
ljmp
cs
mov
fstps
cltd
insl
bound
sbb
push
inc
cltd
loope
pop
lret
test
sahf
aaa
testb
inc
cmp
sub
or
dec
cmp
leave
jo
lock
repz
push
dec
in
insb
inc
movsl
jecxz
sbb
repnz
subl
xor
pop
sub
jmp
pushf
clc
push
cmp
xor
xor
push
mov
xorl
pop
int3
jno
fldt
inc
and
outsb
out
pop
dec
cwtl
mov
repz
ret
dec
cwtl
push
movl
loopne
enter
mov
sbb
jmp
or
pop
sub
mov
mov
and
cmp
inc
idiv
pop
push
sbb
icebp
scas
mov
pop
or
arpl
xchg
in
push
subl
cmp
fisubrl
adc
and
notl
cmp
xor
push
cmpl
or
sub
shll
push
stos
add
movsl
pop
daa
sub
jno
mov
cmp
es
jnp
fldenv
jne
xrelease
mov
pop
or
push
push
jp
adc
bnd
test
add
and
inc
aaa
push
xchg
push
inc
fisttpl
mov
push
ret
and
sub
mov
xor
add
mov
mov
dec
out
out
aaa
and
jbe
dec
push
je
daa
mov
jl
add
pusha
test
inc
in
stos
lahf
mov
pop
daa
xor
add
sbb
fprem1
scas
aas
stos
or
pop
xchg
jno
ss
cmpsl
loopne
push
out
mov
out
scas
les
mov
mov
dec
sbb
bound
aas
iret
dec
cmp
jbe
push
xlat
sub
sub
fldl
fwait
dec
iret
and
inc
sbb
jns
and
sub
adc
and
sub
ljmp
cwtl
fmull
and
and
sbb
pop
andb
nop
push
pop
rorl
scas
and
sahf
outsl
inc
push
push
sub
and
cwtl
inc
loopne
push
in
sbb
dec
jg
dec
imul
mov
pushf
add
adc
and
ja
adc
add
or
xchg
cmovnp
shlb
mov
clc
fsub
fucompp
or
and
into
xchg
dec
clc
and
push
test
js
int
rol
and
cmp
sub
lea
lret
cmp
cld
and
pop
lods
push
in
jecxz
into
out
mov
push
bound
je
insl
sub
cmp
mov
aaa
mul
imul
rorl
push
jmp
mov
xchg
mov
adc
ret
dec
adc
dec
cmp
xchg
mov
or
mov
movsl
mov
aam
rcr
out
and
lret
xchg
mov
popl
mov
addr16
push
mov
sti
sbb
int3
iret
arpl
push
sbb
xchg
out
clc
and
mov
lock
sbb
or
push
fcompl
push
cmp
mov
pop
xor
sub
int
andl
sub
cmp
int3
mov
pushl
daa
subl
add
jns
test
jecxz
lods
sub
mov
lods
inc
add
xchg
or
sub
mov
adc
in
inc
sarb
pop
scas
in
repz
aad
mov
xchg
or
stos
adcl
mov
jecxz
xchg
cmpsb
in
icebp
daa
test
xchg
sub
and
daa
jne
lret
mov
imul
imul
inc
xchg
adc
mull
cli
xchg
insb
cmp
sub
dec
fcompl
sbb
fsubl
sahf
push
test
mov
inc
xchg
std
sub
cltd
imul
gs
xlat
mov
mov
loop
aad
stc
xchg
fcmovbe
mov
mov
jmpw
popa
stos
mov
movq
mov
and
adc
jae
xor
inc
pusha
hlt
in
mov
sub
xor
incb
inc
lds
or
femms
in
out
imul
movsb
mov
dec
lret
or
insb
add
imul
shlb
pop
testb
cmpsl
cld
add
ds
mov
cmp
ret
sub
and
xchg
fistl
testb
push
sub
cmp
rcl
movsl
sub
xor
insb
inc
pop
mov
inc
in
xchg
xor
notl
test
and
push
in
pushw
mov
pop
andb
bound
xchg
nop
enter
les
or
inc
lods
mov
add
in
mov
adc
pushf
in
xor
mov
out
pushl
out
or
icebp
aas
enter
jne
movb
xor
add
add
outsb
cmp
jmp
push
lock
push
jno
or
cmp
mov
mov
push
sahf
out
pop
inc
dec
stos
mov
pusha
mov
xchg
push
aaa
mov
inc
cmp
adc
add
and
je
mov
rorb
dec
xchg
sub
in
pop
mov
jge
inc
xchg
sub
andb
xor
push
push
push
add
inc
xor
push
sbbb
push
mov
jecxz
fmuls
fwait
or
mov
stc
repz
adc
aam
outsl
sub
scas
dec
jmp
jbe
aam
mov
xor
or
icebp
sti
pop
ljmp
mov
and
insb
test
dec
rcrl
or
mov
xchg
jne
pushf
lea
xchg
mov
movsb
sub
xor
or
mov
lods
out
pushf
mov
mov
mov
jb
xchg
jo
aam
push
pop
addr16
jbe,pt
mov
lds
lds
aad
add
or
add
push
aas
and
dec
pop
jno
push
out
jl
push
mov
jae
xchg
ja
jmp
ss
shll
sbb
mov
sti
sahf
ret
call
enter
scas
gs
sbb
ljmp
pop
cmp
int3
stos
stc
cmp
mov
pop
fistpl
rcr
add
pop
stc
lods
cmpl
sahf
lahf
xlat
outsl
icebp
cmp
std
paddsb
stos
jo
lock
into
sbb
inc
les
push
scas
push
push
out
int3
in
popf
lcall
ds
daa
add
out
lea
mov
push
arpl
icebp
les
fincstp
enter
jp
xchg
xorl
and
mov
pop
or
or
out
pop
movsb
imul
lcall
cs
sub
and
aaa
or
enter
int3
push
push
mov
jnp
dec
adc
cmp
dec
or
mov
push
imul
lret
lahf
data16
push
popf
inc
push
imul
and
stos
sbb
or
adcb
clc
imul
insb
add
nop
xchg
or
js
mov
adc
ss
cmp
in
ret
or
outsl
ret
xchg
sub
push
inc
pop
test
sbb
inc
jbe
nop
cmp
pop
xchg
add
psubusw
pushf
bound
stc
push
push
xor
adc
dec
fcmovb
repnz
std
addr16
imul
jno
push
push
call
mov
ret
fdivs
icebp
add
lods
ljmp
sub
push
loopne
xchg
mul
loope
cmp
mov
sarl
inc
ss
mov
shl
fstpt
mov
add
test
add
mov
or
add
cwtl
push
inc
cmpsl
push
jge
aam
pushl
xchg
jbe
xchg
roll
stc
fwait
ja
mov
outsb
adc
jecxz
mov
or
cmpsl
inc
orb
xor
dec
ret
scas
dec
lcall
mov
enter
mov
xchg
mov
add
cli
xor
das
popa
loope
pop
pop
lock
out
sub
std
pop
ljmp
repnz
repnz
shl
lods
inc
subl
lods
filds
out
lock
fildl
sahf
jne
aas
add
cltd
xchg
dec
icebp
and
ret
pop
add
cwtl
and
pop
sahf
mov
mov
outsb
pop
inc
testl
popa
sub
pop
dec
inc
mov
xchg
or
jmp
es
pop
jns
daa
dec
call
jecxz
mov
nop
into
in
push
pop
inc
leave
or
cmp
xchg
scas
mov
movsb
cld
divl
mov
int3
dec
in
enter
pop
push
sbb
cmp
into
cltd
xlat
pop
sbb
insl
das
std
ficoml
sbb
cmp
imul
lods
sbb
push
push
xchg
sahf
jle
out
popf
cld
adc
jo
leave
mov
test
pop
dec
in
cmp
ljmp
and
sub
lea
jl
pop
mov
dec
and
or
push
mov
fs
int3
push
xchg
pop
inc
mov
lock
pop
js
loopne
jle
add
jecxz
and
xor
pusha
dec
imul
xchg
sahf
pop
mov
xor
fldcw
mov
adc
mov
ss
aaa
rcll
test
cmp
or
sub
iret
and
push
jae
fs
xchg
add
inc
xchg
inc
push
mov
cmpsl
arpl
lahf
add
test
xor
mov
xchg
pop
or
mov
mov
or
aaa
add
iret
mov
out
add
or
es
in
xchg
or
cwtl
push
or
xchg
mov
inc
int
addl
inc
cmc
out
mov
loop
sbb
cld
mov
clc
dec
out
js
call
shll
jns
shll
add
inc
ret
jge
je
pusha
pop
cli
dec
into
pop
sbb
dec
mov
ror
je
sub
ret
xor
push
xor
jmp
mov
add
xchg
in
lret
insl
and
sarl
ret
cmp
out
jne
pop
rcrl
xchg
xchg
fidivrs
pop
loopne
hlt
or
push
jae
or
cmp
cmp
pop
jl
leave
push
inc
and
sahf
lock
xchg
sub
data16
jle
aaa
in
les
imul
adc
ror
and
jmp
push
or
xor
lds
xor
xchg
je
sarl
jnp
mov
das
in
mov
push
out
test
xchg
sar
adcl
sbb
shlb
stos
repnz
shll
out
mov
push
mov
mov
cmp
cwtl
mov
push
out
sub
xor
or
cmp
mov
and
push
rcrb
and
in
jl
fmuls
cmp
aad
dec
inc
pop
adc
repz
mov
or
xchg
pushf
sub
inc
popa
shr
mov
pop
push
das
shlb
lock
cld
sub
cmp
mov
and
dec
test
inc
jns
xlat
jno
sub
mov
adcl
aaa
out
jb
hlt
add
jmp
or
lret
dec
add
int3
pop
mov
outsl
aas
xor
es
lock
out
cmp
icebp
fcom
ret
or
jecxz
or
push
loopne
jle
and
test
sbb
iret
int3
dec
push
dec
push
int3
in
mov
mov
mov
cmp
out
movsb
jl
and
sub
dec
mov
das
mov
or
cmp
mov
jp
test
dec
adc
cmpsl
popf
mov
mov
mov
out
and
pushf
and
push
cmp
mov
adc
lods
jle
push
std
xchg
aas
sub
push
mov
adc
ret
or
int
lods
jl
mov
sub
xor
sbb
xor
xchg
test
push
int3
sbb
out
std
es
sub
push
popa
mov
in
movsl
sub
sbb
jno
in
jo
mov
pop
repz
jnp
lods
in
ljmp
fidivs
inc
popf
pop
and
jne
add
sbb
sbb
outsb
cmp
cmp
jns
and
in
cmp
lods
cmp
mov
pop
sub
sub
popa
stos
lods
sub
xor
lahf
cmpsl
mov
test
fstps
jo
mov
aad
pop
push
inc
inc
filds
stos
inc
sahf
stos
rclb
cmc
pop
inc
push
in
mov
mov
out
into
lods
and
cmc
aaa
inc
popa
dec
fists
push
mov
sbb
ret
adc
jl
fnstcw
jbe
decb
cld
pop
stos
inc
jo
inc
cwtl
xor
test
sbb
jno
adc
inc
xlat
jg
scas
outsl
push
cmpsl
fdivl
enter
jno
out
lahf
icebp
arpl
out
icebp
mov
sti
jne
in
sub
inc
dec
dec
pop
dec
and
ror
outsb
cltd
sub
jae
in
push
std
aas
negl
mov
inc
hlt
mov
and
inc
xchg
cli
xor
ja
and
scas
popf
or
dec
dec
add
push
hlt
inc
dec
pop
adc
push
push
vmread
fistl
out
mov
adc
add
and
shll
int
nop
stc
nop
push
and
fiaddl
push
and
test
and
cwtl
gs
adcb
adc
sbb
xchg
lock
xchg
adc
sbb
mov
sahf
push
push
je
pop
adc
pop
imul
xlat
xchg
mov
and
sub
rcll
push
xchg
gs
cmp
pminsw
mov
negl
jle
arpl
icebp
clc
rcll
ret
cmp
push
mov
mov
push
repz
stc
jne,pt
mov
daa
sbb
xchg
int
jge
rorl
imul
xor
sub
insl
add
and
adc
pop
sbb
and
jge
sub
test
in
es
sbb
arpl
mov
pushl
xorl
sbb
pushf
push
imull
faddp
sbb
loop
jle
repnz
decb
cmp
fisubs
push
and
fdivs
orb
aaa
test
xchg
adc
jne
pop
mov
daa
push
testb
outsl
push
xchg
xchg
test
inc
lea
dec
mov
dec
gs
mov
dec
mov
xor
add
divb
mov
ret
insl
mov
inc
or
mov
pop
mov
aam
or
sarl
test
adc
imul
jns
mov
cmc
mov
es
add
loopne
repnz
cmp
push
push
mov
mov
leave
pop
lcall
add
xor
sbb
xor
aad
insl
ficoml
mov
jmp
push
or
call
inc
cmp
jmp
test
pop
mov
dec
mov
and
pop
test
inc
mov
xor
aaa
test
mov
ret
or
cmp
jl
or
data16
insl
movsb
dec
mov
and
push
scas
xlat
notl
dec
inc
jne
ja
mov
push
sbb
mov
out
enter
loope
mov
and
cwtl
adc
and
es
sub
sbb
pop
mov
mov
adc
pop
adcb
mov
lahf
aas
repz
ficoml
in
or
inc
rcrl
cs
inc
cmp
inc
xor
cld
cwtl
mov
ds
clc
cmp
sub
adc
mov
movsl
jl
rorb
outsb
pushf
sti
loopne
loope
das
dec
std
std
and
mov
mov
xor
push
add
jbe
fiaddl
and
mov
sub
mov
mov
repnz
addl
cmp
movsb
xor
sbb
push
fucomip
lret
sub
or
shlb
stos
sbb
rclb
mov
das
test
enter
outsl
push
push
mov
adc
mov
stos
cmpl
push
pop
lods
sub
or
xchg
imul
cmpsb
inc
shlb
jns
sbb
mov
push
pusha
fdivs
sub
lahf
or
mov
loope
sub
inc
mov
inc
mov
outsl
mov
xchg
repnz
dec
fdivl
fwait
sub
cs
insl
hlt
outsl
sbb
insl
popa
rcrb
inc
lcall
mov
stos
cmp
inc
adc
dec
test
cmp
pop
jbe
hlt
push
loopne
mov
push
dec
inc
aad
mov
aam
fs
ss
sub
ds
in
fnsave
cli
cmp
cmp
clc
jne
sbb
pop
push
push
call
pop
lret
out
lret
adc
xchg
mov
xor
xchg
testb
push
push
sbb
lods
gs
cmp
popa
jg
sbb
cs
mov
in
push
xchg
xchg
cmpsb
push
xlat
jg
in
leave
icebp
or
mov
pop
jp
ret
adc
out
sub
mov
imul
and
push
aad
gs
daa
xor
jns
pop
ljmp
insb
gs
inc
das
orl
mov
xor
cwtl
fwait
sub
push
ds
stos
divb
lods
dec
sbb
inc
arpl
xor
sbb
mov
mov
push
loopne
arpl
js
xchg
mov
jmp
rclb
aad
push
add
adc
aam
inc
inc
mov
repnz
int3
mov
jmp
iret
sbb
xchg
movsb
out
lcall
gs
xchg
mov
pop
cmp
sbb
xorb
hlt
fmull
lods
adc
stos
es
or
addr16
xchg
adc
mov
std
fwait
imul
push
pop
shlb
pop
or
scas
cwtl
fwait
stos
and
imul
xchg
mov
enter
mov
or
mov
mov
jb
jmp
pushf
call
and
js
mov
into
cmp
mov
outsb
jns
push
jns
test
mov
inc
ret
jg
cmp
mov
cmp
jno
ss
loope
into
mov
add
pop
hlt
out
iret
stos
inc
add
imul
push
xor
sub
dec
cmp
out
or
cmp
push
bound
xchg
dec
or
push
mov
mov
add
sbb
jae
hlt
mov
aad
cmpsb
mov
pop
adc
cltd
sub
pushf
mov
mov
and
pop
cmpsl
fnsave
mov
and
adc
and
or
pop
test
jae
adc
xchg
dec
fstps
lods
and
out
jg
mov
jnp
sbb
sbb
jnp
repz
mov
pop
addl
jmp
or
sub
repnz
inc
cmpl
sbb
adc
sub
xor
jmp
test
sbb
push
sahf
aad
aam
mov
je
inc
sub
mov
mov
adc
mov
fstpl
sub
enter
mov
enter
shlb
inc
mov
pop
xchg
xchg
push
xor
or
stos
addl
or
pop
hlt
xchg
test
cmp
bts
shl
rep
sbb
and
fwait
adc
sub
fs
lcall
loope
neg
enter
je
dec
pop
xor
bound
jnp
jne
arpl
orl
sbb
and
adc
imul
mov
jg
jg
das
stos
stos
cltd
pop
pop
xchg
sub
div
cmp
in
mov
dec
dec
xor
cmpsl
rdmsr
jbe
jl
rolb
js
jmp
andl
and
setl
xchg
mov
mov
les
jnp
cwtl
fxch
mov
in
adc
jl
push
dec
lahf
aad
mov
jg
fcmovb
dec
in
out
cmp
push
aas
pop
mov
push
lea
and
movsb
out
loope
dec
cmp
add
les
add
negb
repnz
jl
push
or
repz
mov
dec
or
push
lcall
insl
dec
in
mov
lods
mov
xor
mov
fwait
pop
add
pop
sbb
popa
bound
sub
ja
jne
push
fs
ficoml
add
xchg
and
les
xchg
cmp
insb
andl
add
popa
mov
fnsave
aas
cltd
cmp
inc
mov
gs
jle
push
dec
cmp
push
lcall
out
mov
test
sbb
jle
mov
mov
mov
test
aam
movb
pop
cmpsl
add
push
sub
pop
xor
iret
das
sbb
lock
jnp
int
and
jle
jne
xchg
or
mov
rcll
cmc
adcb
shl
push
repz
imul
sbb
lret
call
aaa
lods
push
int
aad
mov
inc
mov
arpl
scas
jg
inc
test
lahf
cmp
mov
mov
sub
sub
inc
out
les
or
out
fldenv
hlt
scas
inc
in
out
shll
sbb
adc
mov
sub
jae
jns
jns
dec
push
scas
xlat
mov
pop
cld
stc
push
dec
mov
pop
or
rolb
cmp
push
mov
mov
push
push
adc
cmc
or
pop
into
dec
lods
lcall
xchg
xor
jle
xor
jo
xor
ljmp
or
jge
push
hlt
sub
add
dec
fisttpll
inc
lret
rcll
ljmp
stc
jne
hlt
pop
adc
loop
cmp
push
arpl
in
enter
xchg
pop
mov
push
ret
adc
xor
scas
add
ret
rol
imul
dec
sub
das
xor
dec
and
or
lcall
es
dec
xchg
sahf
out
fsts
sbb
repnz
mov
imul
dec
push
sbb
cmc
idivb
xor
add
stos
mov
xchg
xchg
jnp
lods
cli
inc
not
jbe
pop
push
daa
lret
jno
fnstenv
mov
mov
shrl
mov
cltd
inc
pop
outsb
add
xchg
adc
inc
nop
jno
fiaddl
adc
xlat
daa
mov
pop
or
bound
mov
test
mov
cmp
sub
jge
cli
mov
mov
das
and
sub
mov
nop
test
adc
pushf
mov
sbb
push
ret
push
cwtl
xchg
lret
lods
scas
xchg
xor
iret
push
out
divl
and
testb
dec
dec
inc
or
in
and
repz
outsb
cmpsl
stos
cld
icebp
sbb
dec
stos
push
push
pop
cld
xchg
push
jl
xor
and
ret
xor
shll
imulb
sarb
rcll
dec
sub
rcrl
mov
push
mov
push
nop
pop
pushf
sti
pop
test
popf
mov
pop
sbb
cmp
pop
push
cwtl
fldt
leave
mov
daa
js
call
adc
es
fs
lods
sub
fwait
lods
mov
pop
daa
or
test
push
and
mov
cmp
jbe
adc
dec
ss
push
add
cwtl
andb
movsl
xor
mov
xor
inc
inc
push
sub
pop
rolb
pusha
add
sub
cltd
popf
cmpsl
dec
popf
es
mov
fs
pop
mov
mov
mov
sub
push
cmpl
xchg
mov
add
push
mov
sarl
mov
lahf
je
rclb
test
sbb
loop
push
ret
xchg
nop
jp
repnz
push
pusha
cmp
mov
jno
jl,pt
nop
add
mov
icebp
stos
sub
movsl
adc
cmc
hlt
repz
lds
cmp
cmp
add
lahf
cli
in
call
sar
pusha
in
rclb
inc
inc
jb
xor
out
mov
icebp
mov
and
and
jae
cld
adcb
fdivl
insb
loope
mov
ret
dec
loopne
scas
nop
xchg
inc
dec
aad
pop
mov
add
dec
push
inc
lods
cmpsl
les
cs
loopne
pop
sbb
push
fimuls
cltd
xchg
push
and
pop
or
adc
lea
add
fdivl
mov
in
inc
in
push
test
shr
pop
ret
fwait
testb
sbb
stc
xor
mov
dec
es
cld
mov
cmp
inc
cmp
cmpsb
aas
jg
outsl
dec
rcll
sub
sahf
jl
inc
jg
mov
pop
shlb
mov
inc
lret
xchg
jae,pn
or
cmp
jg
xorb
ja
cmp
in
fwait
notl
in
and
out
push
stos
push
mov
dec
daa
aas
sbb
push
icebp
add
dec
xchg
xchg
shr
into
add
lret
iret
loop
xor
adc
jl
mov
mov
and
pop
cmc
dec
xchg
jle
pop
aad
dec
nopl
popa
xor
inc
pop
sub
push
inc
and
mov
imul
in
es
rolb
mov
push
mov
add
ljmp
cmpsl
movsb
es
or
incl
fisubrl
push
push
cli
out
or
iret
ret
mov
jo
divb
fsubrp
xchg
pop
popf
mov
jmp
call
xor
sub
push
push
xor
xchg
adc
xchg
mov
aam
sti
into
sbb
pop
das
fbld
adc
mov
rolb
cwtl
insb
mov
mov
or
or
sahf
pop
insl
adc
add
xchg
push
dec
divb
mov
mov
ljmp
xchg
dec
sub
je
and
pop
mov
lods
fisubrl
les
scas
sbb
xor
jne
push
inc
adcl
cld
iret
sub
jg
aad
stos
sbb
jno
mov
xor
daa
inc
cwtl
and
jl
sub
xor
repz
mov
pop
mov
mov
mov
bts
sbb
xor
sarl
pop
xchg
decb
clc
decl
xchg
lds
mov
gs
adc
ret
fisubl
scas
xchg
call
aas
pop
icebp
adc
or
sub
or
ja
jbe
mov
xchg
clc
push
ret
push
jl
ss
sub
push
inc
test
sub
jl
shrl
mov
int3
div
invd
outsl
fimull
sbb
aas
mov
movl
mov
fistpll
jne
jecxz
fstl
mov
rcll
stos
cs
stc
pop
mov
decl
aas
jmp
inc
xor
lret
gs
in
lret
movsl
cmpl
shrb
sahf
jmp
sti
lds
cld
test
inc
cmp
jae
fimuls
jl
pop
ret
mov
stos
push
in
inc
out
sub
inc
inc
scas
push
ficomps
pop
inc
xor
adc
jge
stos
fdiv
cmp
mov
ss
push
adc
aam
xchg
mov
cmpsl
sbb
subb
lea
imul
lret
mov
dec
fisubs
loopne
push
testb
outsb
jge
sbb
mov
leave
add
cmp
mov
push
mov
fdivr
out
nop
and
xchg
add
jp
cmp
ss
adc
out
or
adc
mov
test
push
add
in
mov
ljmp
or
fwait
sbb
jo
js
xchg
inc
popf
leave
sub
mov
sahf
adc
mov
shrl
mov
pop
pushf
jle
rclb
leave
lds
std
jae
insl
leave
loop
sub
iret
xchg
je
mov
int
xchg
call
and
sti
loop,pn
out
and
fwait
jecxz
add
adc
jo
sbb
mov
iret
lahf
rol
inc
pop
ljmp
aas
mov
mov
inc
ja
out
popa
xlat
ret
mov
cmp
xor
lcall
and
nop
pop
call
or
jne
push
stos
outsb
xchg
inc
adc
mov
enter
or
xor
je
xchg
jecxz
mov
outsb
cld
inc
ja
xlat
outsb
es
add
mov
cli
inc
mov
pop
mov
or
add
cmpsl
inc
mov
xlat
testb
adc
adc
xchg
mov
cmpsb
icebp
pop
fcoml
roll
mov
cmp
xchg
or
cli
in
mov
arpl
dec
dec
lds
add
or
xchg
stos
scas
cmpsl
shl
ljmp
mov
sbb
mov
sbb
addb
addpd
fisubs
pop
lahf
fcomps
sbb
into
adc
loop
cltd
xor
inc
xchg
nop
iret
inc
aas
fmull
in
enter
bound
cs
push
sahf
jmp
sub
aam
test
call
cmc
leave
mov
and
jae
push
std
popa
lcall
push
jge
xchg
fcoml
cmp
out
push
or
sahf
test
fisubs
repnz
mov
jecxz
popa
cmp
adc
popf
and
je,pt
pushl
int3
ja
inc
push
mov
inc
stos
sbb
out
cmpsb
adc
mov
mov
cmp
or
outsb
fidivrl
mov
cmp
imul
cmc
cmpsl
test
in
adc
insl
sarb
adc
or
lds
mov
adc
in
dec
inc
in
xlat
sbb
roll
outsb
mov
in
push
jae
inc
mov
inc
pop
cmp
xchg
lret
movb
ss
mov
icebp
sbb
mov
or
or
xlat
sbb
lret
fstpl
cmp
pop
sbb
or
inc
or
into
fstpl
hlt
xor
mov
mov
or
mov
iret
pop
push
call
out
mov
movsb
push
in
es
test
daa
fadds
repz
xlat
js
xchg
lock
or
scas
in
jae
pavgb
je
add
mov
mov
mov
xchg
in
sbb
daa
xlat
adc
jmp
mov
leave
jg
xchg
jne
shl
scas
es
pop
fs
xchg
fs
call
mov
dec
lret
test
add
dec
push
ret
and
pop
or
cli
cmp
pushf
data16
jne
lds
lods
and
push
sti
mov
jae
mov
and
dec
mov
mov
enter
in
outsb
fnstsw
or
orl
out
cmpsl
out
push
push
movsl
loop
lods
xor
divb
or
push
mov
adc
add
pop
mov
mov
fstl
pop
push
sbbl
mov
nop
lret
iret
pop
popa
aad
outsb
icebp
xor
scas
jb
cwtl
sbb
or
movl
pop
sbb
es
cmp
pop
test
xor
sbb
adc
inc
cmp
fs
leavew
fbstp
in
cmp
leave
sub
inc
pop
js,pt
popf
mov
fwait
cmpsl
fdivl
ret
jae
je
repnz
adc
sub
je
mov
adcl
shl
mov
imul
push
sbbb
mov
lcall
ja
ja
pushf
mov
gs
jno
jo
adc
pop
dec
sbb
pop
je
test
leave
add
lods
add
jno
inc
xchg
xchg
jb
daa
pusha
insl
addl
dec
in
jae
inc
emms
notb
leave
cwtl
cs
bound
fildll
or
mov
dec
sub
push
dec
and
xor
aam
stc
push
xor
or
roll
testl
fwait
imul
gs
mov
das
ljmp
rcr
mov
mov
out
lea
jp
cmp
sub
push
shr
addr16
pop
test
add
inc
sbb
leave
repnz
cli
lea
xor
leave
arpl
pop
imul
loop
testl
mov
or
mov
pop
fs
pop
fsubrs
add
add
sub
push
push
add
lret
inc
xor
insl
inc
gs
in
xchg
pusha
iret
mov
xlat
dec
sbb
mov
and
mov
lahf
or
iret
pop
loope
cmpl
or
dec
int3
addb
scas
cmpsb
adc
dec
std
fnsave
jge
push
iret
es
or
and
xor
ret
into
cmp
pop
pop
push
in
mov
mov
pop
int
and
int
or
pushf
dec
loope
jp
stc
dec
out
inc
xchg
lcall
jmp
les
mov
sub
jl
incl
or
insl
cmp
jbe
sti
jge
dec
jmp
pusha
push
mov
test
test
sahf
xchg
iret
pop
ret
sub
aad
or
in
adc
inc
push
fisubrl
jg
sub
mov
dec
insb
jb
cli
ret
shll
add
stc
mov
inc
repnz
call
int
pop
mov
out
and
cli
es
xchg
mov
jmp
lcall
mov
dec
sahf
xlat
jns
inc
rcrb
movsb
inc
fistl
das
dec
jp
fnsave
jecxz
mov
sbb
xchg
call
xor
ret
or
and
jl
in
pushf
das
loopne
add
out
popa
mov
fwait
out
xor
adc
cmp
js
xlat
mov
pushf
xorb
imul
in
loopne
dec
sbb
and
push
inc
xchg
pop
jnp
insb
enter
sub
cmpsl
sbb
loopne
ret
int3
lds
nop
mov
xor
mov
gs
ss
jns
fdivs
jae
das
push
mov
out
sub
pop
jp
inc
scas
cmp
xor
adc
mov
jmp
or
mov
push
hlt
movsl
mov
shll
inc
fisubl
cmp
mov
jg
in
push
and
adc
testb
je
pop
scas
mov
pop
in
cmp
mov
int3
imul
push
pop
pop
mov
fxch
addr16
inc
dec
inc
xchg
mov
sbb
ljmp
push
dec
ret
mov
mov
adc
jns
adc
fiaddl
rcrl
sbb
cmp
adc
push
and
xor
scas
pusha
mov
pop
hlt
cmp
stc
int
test
imul
ss
lret
es
lret
push
push
andb
dec
cwtl
cmp
xor
mov
cs
sbb
mov
repz
lods
stc
loope
arpl
daa
shrb
cli
dec
cmp
xchg
hlt
pop
sub
pop
push
jnp
jle
mov
pop
xchg
lret
and
fdivrl
mov
fwait
mov
dec
pop
fstpt
push
adc
sbb
xor
sbb
es
sub
sub
das
out
mov
cli
ds
xor
dec
js
ret
xor
cmp
mov
pop
inc
leave
pop
pusha
pop
loopne
je
divl
cs
xchg
leave
push
sub
mov
mov
add
aad
std
or
cld
pusha
or
fs
shlb
insl
push
mulb
inc
xchg
jmp
fbld
xor
aad
std
shrb
dec
sbb
out
aas
push
pop
adc
sub
mov
mov
jo
jmp
arpl
xor
push
mov
or
pop
mov
imul
pop
xchg
add
sub
jno
adc
cmp
sbb
pop
mov
lcall
sub
shlb
fs
inc
rol
fwait
mov
add
shlb
lret
jnp
add
into
stos
lods
cwtl
push
and
sub
call
pop
cwtl
imul
fsub
jl
cmp
subb
add
addl
mov
movsl
aas
pop
cmc
test
sbb
inc
aam
xor
cwtl
fwait
addb
mov
xchg
mov
test
dec
loope
pushf
and
popa
or
fsubrl
or
mov
stos
jae
mov
push
xor
test
jbe
jl
sbb
outsl
aas
inc
inc
push
rcrl
imul
and
push
ret
xor
jge,pn
sbb
in
iret
push
stos
roll
bound
jge
and
cmp
push
or
lret
mov
jbe
jge
xorb
jl
ljmp
xchg
pop
loope
lcall
in
faddl
or
pop
test
xchg
ficoml
mov
adc
lock
adc
mov
enter
pop
add
pop
add
add
xchg
lods
in
ja
aaa
dec
out
push
jnp
out
xor
inc
loopne
pop
mov
xor
les
sub
pop
popa
fs
stc
in
sbb
orb
notl
xchg
cli
stc
addr16
test
test
pop
movsl
adc
mov
ljmp
push
mov
xchg
and
addr16
movsl
imulb
push
into
shr
rol
xor
imul
ret
outsb
jg
push
dec
sub
push
xor
sbb
xchg
cmp
dec
lret
push
mov
int
sti
push
mov
xchg
add
push
mov
stos
mov
push
daa
lret
cmp
nop
mov
cwtl
jbe
push
jnp
inc
push
sbb
je
test
inc
outsl
jmp
aaa
popa
sub
jmp
or
add
dec
xor
mov
aam
xlat
xlat
mov
jmp
arpl
mov
rorl
lds
in
add
add
jo
xchg
popf
les
mov
sbb
or
mov
mov
lods
xchg
lods
cld
lock
mov
pop
mov
xchg
xor
stos
nop
rolb
mov
pushf
cli
dec
repnz
add
add
jg
cmp
imul
sbb
cmp
and
jnp
lods
out
insl
and
aad
insl
jmp
repz
lahf
xor
mov
mov
arpl
dec
rclb
mov
add
xchg
sub
jg
fstl
xor
leave
xor
inc
xlat
mov
sub
pop
stos
enter
int
outsb
xchg
fistpl
out
sbb
xchg
adc
test
mov
mov
inc
popf
cmpl
je
in
sub
cs
cmp
pop
daa
fisttpl
push
call
jne
jge
and
nop
mov
push
mov
mov
arpl
fwait
mulb
fildl
rorb
lds
or
adc
cs
in
sub
lahf
inc
xchg
cld
sbb
into
and
cmp
aaa
jb
movsl
rcrb
adc
push
fcompl
jae
mov
mov
sbb
jae
into
imul
nop
lret
jecxz
push
out
mov
sarl
sbb
dec
fsub
incl
icebp
pop
in
sbb
pop
cmc
int3
jl
xor
mov
aam
jb
std
mov
repnz
mov
jge
mov
mov
hlt
data16
and
loope
cwtl
xor
add
xchg
data16
or
jl
jns
test
int3
ljmp
inc
imul
rorl
jns
shl
dec
insb
jb
mov
stos
jae
jmp
sahf
rorl
shrb
jmp
and
aaa
int3
add
repnz
xchg
aas
out
mov
jge
adc
jmp
jge
xchg
insl
outsl
jb
push
jge
mov
int
dec
jle
xchg
out
cli
sub
push
mov
cmp
mov
mov
xchg
pop
scas
ret
mov
and
xor
nop
push
mov
xlat
jns
popa
fs
fiadds
mov
dec
inc
mov
rcll
push
dec
sub
loopne
inc
movsl
dec
cwtl
xchg
mov
mov
fstps
outsb
adc
outsl
pop
cwtl
rcll
xchg
jno
mov
fnstsw
jle
jge
in
and
inc
mov
ja
std
lret
lods
jae
mov
mov
sahf
xlat
pop
out
fbld
pop
mov
mov
pop
sub
test
mov
xchg
add
bound
pop
ds
mov
mov
dec
xchg
aaa
jmp
mov
aad
sub
ret
sub
dec
add
inc
and
scas
mul
hlt
dec
add
mov
jns
test
dec
mov
dec
or
addr16
fisttpll
out
aas
arpl
inc
sbb
cmpsb
mov
push
mov
adc
aaa
mov
ss
inc
cmp
dec
arpl
mov
mov
cmp
xor
sub
fstps
in
std
add
std
push
mov
movsl
gs
or
pop
jecxz
cmp
xchg
jns
inc
mov
push
out
out
mov
in
mov
sarl
ftst
cmp
cmp
jbe
popf
pop
adc
inc
fwait
test
inc
add
ja
std
add
dec
mov
xorps
mov
adc
sub
mov
pop
jne
rorb
inc
stos
pop
jmp
bswap
lds
xlat
jg
lds
test
mov
dec
pop
pushf
daa
les
outsb
rol
gs
jecxz
add
and
pusha
xchg
jmp
arpl
sbb
jg
inc
cmc
lcall
push
mov
pop
sbb
test
sbb
arpl
sbb
cltd
ljmp
adc
adc
sahf
pop
cmp
int
cmp
add
jae
mov
xor
int3
and
test
sar
fistpll
cmpsl
imul
push
jb
xor
ds
repnz
outsb
shrb
xchg
out
pusha
and
jnp
pop
test
gs
repnz
subb
mov
push
dec
sahf
fucomip
push
rorl
xorb
pop
jl
xor
movsb
pop
int
aad
es
jmp
dec
xor
inc
outsl
mov
jg
sub
or
pop
sbb
test
mov
mulb
jge
xchg
mov
test
push
mov
mov
inc
add
add
arpl
std
jecxz
mov
jl
icebp
inc
jb
lods
fstps
and
jae
push
pop
add
flds
add
lds
pushf
jno
lcall
mov
xchg
aam
ret
stos
outsl
lcall
add
push
test
jge
mov
dec
addr16
pop
jle
mov
mov
popf
jg
mov
cmp
test
adc
pop
cmp
or
daa
push
inc
fisubl
xchg
cwtl
xor
cmp
rcrb
lods
dec
and
pop
cs
ja
dec
dec
jbe
xchg
pop
xchg
mov
in
jne
inc
orl
or
cwtl
pop
xor
lcall
xor
dec
mov
cmp
test
pop
adc
xor
shlb
fiaddl
leave
push
mov
aam
sbb
push
inc
popf
ja
pop
sbb
iret
cmpsb
dec
dec
out
cmp
pushf
jns
add
in
add
xor
sahf
shll
repnz
loop
pop
or
xlat
add
mov
mov
cld
xchg
pop
jnp
stc
xchg
mov
mov
sbbl
sub
inc
enter
fists
fnsave
idivl
pushf
xchg
movsb
sub
mov
into
dec
in
sub
sub
icebp
lret
sbb
lea
sub
dec
jl
jecxz
fidivl
push
call
push
roll
cmp
cmp
lds
add
pop
rcll
popf
and
jnp
fisubs
mov
jle
pusha
jb
loop
pop
popa
mov
pushf
testl
je
jmp
int
mov
or
or
les
pop
jle
movsb
push
and
decl
fs
in
jb
fdiv
xlat
mov
hlt
fidivrs
pop
js
push
mov
push
fimuls
cltd
test
shrb
and
cmp
jg
push
and
push
push
push
dec
xlat
or
lret
mov
jge
push
sub
inc
in
pop
adc
loope
les
jg
inc
outsb
in
xchg
xor
xchg
imul
or
test
xchg
fidivrs
mov
aaa
enter
or
aas
movsb
sarb
cmp
jp
int3
jp
fs
sbb
data16
and
rcl
jns
icebp
jno
je
mov
imul
cmp
push
pop
fimull
mov
inc
fiadds
cmpsb
adc
adc
repnz
popa
jnp
push
stos
mov
jbe
lcall
cmc
or
mov
pop
cs
or
mov
test
stos
iret
push
push
dec
add
out
cmp
scas
dec
push
popf
sub
pop
dec
orl
fdivrs
bound
mov
das
mov
pop
scas
and
cmp
or
imul
cs
pusha
mov
dec
test
rorl
cmpsb
mov
or
mov
ret
push
pop
mov
test
cmpl
outsl
pop
adc
add
cld
xchg
jge
add
jp
adc
mov
fnstcw
add
xor
jae
loopne
mov
movsb
ds
int
add
xorb
or
adc
dec
jnp
idivb
js
push
dec
inc
sub
and
add
or
mov
mov
lods
fcmovne
inc
call
fs
push
push
fs
xchg
lcall
mov
fdivs
xor
adc
or
xchg
or
add
jnp
jb
and
mov
mov
xor
lods
sbb
loop
fmull
xor
mov
mov
sub
xchg
mov
and
dec
bound
popa
jle
inc
xchg
push
setb
inc
ja
inc
mov
arpl
sti
xchg
cmpsb
stos
ljmp
inc
lock
test
inc
sub
push
mov
and
xor
stos
adc
repz
mov
and
ds
aad
fadds
mov
mov
cmp
movsb
or
cli
aam
lock
xor
mov
dec
pop
int
loop
jo
test
lahf
pop
adcl
mov
sub
iret
mov
pop
mov
mov
lock
sbb
or
xlat
hlt
inc
xor
cs
mov
inc
mov
imul
dec
addr16
std
sub
inc
mov
shl
push
or
jne
jo
cmpsl
rolb
inc
outsl
imul
sarb
pop
push
and
ret
push
sub
int
push
enter
cmp
outsb
in
sbb
mov
add
das
cmpsl
push
cli
and
xor
adc
add
aaa
mov
mov
cmp
add
cmp
loopne
fisttpll
mov
jbe
mov
add
das
paddb
test
add
out
mov
add
movsb
test
into
xor
int
aam
cwtl
in
clc
jne
xor
cmpsl
adc
pop
sbb
xchg
fimuls
outsl
sahf
pop
faddl
sbb
out
mov
dec
lcall
xor
pop
jp
jl
dec
mov
pop
sbb
fidivl
push
fadds
out
js
rcrb
and
jecxz
sti
lret
fisubrl
iret
sahf
loop
sarl
xchg
xchg
shlb
outsl
daa
loope
cltd
xchg
adc
ficomps
cmpsb
mov
fcmovnb
jne
pop
jl
add
sbbl
xor
ja
pop
scas
dec
outsl
loope
dec
jmp
cld
test
dec
xchg
fbld
cltd
repnz
pop
lea
int
or
daa
inc
mov
push
in
sahf
imul
push
sbb
ljmp
sbb
sbb
jbe
mov
lods
pop
sub
mov
adc
jne
xor
test
sub
ds
xchg
adc
sub
sbb
stos
popa
pusha
aas
and
test
jne
or
xorl
dec
jmp
jo
test
in
mov
bound
or
insl
inc
jecxz
lcall
cmc
stos
pop
xorl
adc
cwtl
inc
xlat
sub
dec
aad
and
cmp
filds
nop
xchg
mov
jno
cmp
jl
adc
fmulp
inc
into
push
or
or
movsb
sub
or
cmc
repnz
or
and
shll
mov
mov
xor
mov
push
cltd
stos
insl
jne
xchg
loope
inc
add
clc
mov
or
lods
push
sbb
les
jg
sarl
pop
sarl
mov
es
shlb
stc
add
mov
jle
ss
pop
jne
mov
cmp
icebp
mov
cmp
int
mov
hlt
mov
ja
testl
mov
icebp
dec
test
lods
lahf
ljmp
mov
imul
lcall
aad
xchg
test
add
insb
popa
mov
xchg
je
mov
lcall
ja
arpl
sub
insb
dec
dec
dec
inc
lret
out
push
mov
sub
xchg
push
pop
stc
mov
loop
inc
push
add
mov
push
mov
cwtl
mov
mov
outsb
leave
rolb
enter
stc
jo
add
and
shll
sub
flds
imull
sbbl
fdivrl
mov
or
into
loop
hlt
lret
mov
push
js
jle
pop
mov
sub
xchg
cld
mov
mov
and
xor
adc
mov
mov
enter
push
pop
cmpsl
mov
mov
fildll
subl
or
push
xchg
scas
sub
push
pop
jmp
mov
xor
push
push
jmp
dec
sub
fimull
xchg
mov
xchg
xlat
add
and
cwtl
aas
addr16
imul
sub
fstpl
lahf
jl
lods
cmp
jne
dec
popf
inc
outsl
adc
repz
gs
pop
arpl
ja
decl
int3
insb
xlat
ret
pop
addr16
push
in
jne
mov
jb
mov
outsl
push
add
push
xchg
mov
nop
arpl
mov
push
xchg
psubsb
rol
mov
idivl
jbe
cltd
inc
adc
add
push
mov
idiv
mov
mov
adc
stos
adc
jo
push
out
jns
pop
popa
inc
sbb
mov
mov
lods
xchg
into
fdiv
clc
inc
inc
cmp
push
lahf
aaa
roll
add
dec
push
fadds
sbb
rorl
mov
testl
jmp
push
mov
or
pop
inc
pop
imul
xor
filds
sbb
sub
out
fwait
mov
push
packssdw
cmp
mov
and
inc
pop
lods
popf
hlt
adc
mov
mov
add
pop
jmp
or
jmp
repz
push
bound
sub
cmpb
repz
addr16
jbe
int
fdivs
mov
push
add
push
ret
jge
je
ffree
aam
and
in
mov
xor
pop
mov
sub
cmp
cli
dec
xchg
shrb
repnz
mov
imul
cltd
cmpsl
daa
jnp
or
mov
dec
aad
cmove
jl
test
push
sbb
push
push
pop
rcll
js
cmc
fwait
arpl
vmaxss
mov
outsb
dec
dec
mov
adc
outsb
push
fwait
pop
inc
sahf
mov
arpl
std
mov
pop
das
push
xor
dec
daa
mov
out
cmpsl
jmp
addr16
mov
btrl
sub
xchg
pandn
push
pushf
and
pop
xchg
xchg
push
dec
sti
xor
jnp
mov
pop
inc
pop
push
dec
adc
in
pop
aad
or
push
add
mov
je
in
aam
inc
and
sbb
lcall
test
cltd
dec
bndstx
inc
inc
aaa
xchg
lds
xlat
adc
mov
jo
dec
pop
out
test
outsb
scas
popf
int
ret
xchg
imull
adc
push
push
pop
lea
enter
mov
testl
sbb
xor
mov
sbb
popw
jns
popa
xor
addb
add
ja
mov
xor
pop
adc
les
mov
mov
fstpl
leave
das
mov
shrl
lcall
add
or
dec
fmull
lea
sub
fdiv
mov
lcall
repnz
ret
imul
adc
ror
repnz
sarl
movsl
adc
push
fcmove
cs
xchg
sub
cmp
jb
dec
aam
push
movsl
aad
outsb
add
mov
or
xchg
lods
xchg
out
insl
jp
mov
or
inc
sub
sbb
popf
add
pop
xchg
pop
insl
arpl
pop
jno
popf
adc
dec
jo
cmp
cmpsb
jp
mov
pushf
add
out
xor
xchg
movsb
sub
lea
mov
push
xor
movsb
mov
repz
xchg
or
pop
stc
sar
jno
cli
fdivrl
lcall
mov
sti
push
cwtl
xchg
push
out
fidivs
lea
mov
jp
push
or
jnp
xchg
mov
xor
add
enter
aad
rol
aas
pushf
push
lret
pop
lcall
lds
js
cmp
cmp
or
mov
or
pop
jo
sub
sbb
icebp
jbe
jmp
dec
cmp
push
add
push
andb
mov
ss
dec
cltd
lcall
and
adc
mov
fisubl
pop
dec
outsb
jg
mov
or
pop
pop
mov
std
daa
pop
mov
shl
pop
out
jae
mov
mov
push
jge
outsl
jae
nop
rol
jns
and
mov
in
adc
xor
add
jbe
adc
stos
add
dec
les
xchg
clc
insl
adc
mov
mov
mov
mov
enter
dec
xor
int3
and
or
mov
and
xchg
lea
sub
mov
mov
notb
popf
and
cmp
add
push
imul
push
hlt
mov
repnz
push
cltd
pop
push
les
nop
hlt
lret
and
das
mov
stc
jne
and
jge
mov
fldenv
push
ljmp
xorb
adc
and
in
and
repz
imul
jecxz
imul
sub
gs
and
push
push
iret
cltd
sbb
dec
lret
das
fidivrl
popa
shr
icebp
cmpl
or
aas
mov
bound
push
out
pop
sti
popa
xor
dec
imul
adc
jns
mov
xorb
dec
cmp
enter
xchg
imul
cli
insb
sarb
shlb
sub
scas
or
push
mov
cwtl
lret
fsubr
pop
hlt
xchg
cwtl
jl
imul
flds
daa
pop
mov
or
hlt
rorl
xchg
hlt
jnp
scas
sbb
mov
daa
sbbb
pop
movsl
or
pop
das
scas
jmp
xor
lds
fistl
add
xchg
pop
out
pusha
mov
lea
mov
sbb
ficomps
push
int3
stos
xor
mov
mov
das
xchg
pop
mov
mov
aam
scas
cmp
mov
xchg
jge
dec
jo
hlt
xchg
les
ja
push
xchg
fistl
outsl
cmpsb
ljmp
dec
out
mov
pop
es
das
jns
mov
jp
fimull
insb
mov
sub
jge
lods
or
pop
movd
cli
lahf
lea
out
add
in
mov
push
cltd
jmp
pop
or
xchg
xor
mov
stc
dec
mov
add
call
add
xchg
or
sahf
and
add
lods
scas
scas
mov
sub
xchg
pop
stc
fstpl
dec
aad
rol
pop
out
xchg
test
mov
xchg
lahf
nop
ss
fimuls
stos
stc
adc
loopne
jp
bound
sbb
xchg
mov
inc
in
jge
sub
xor
push
les
loopne
pop
imul
adc
dec
imul
push
push
or
notb
xchg
or
outsl
and
and
dec
cmp
pop
insb
mov
dec
fistl
out
jg
iret
fldl
out
mov
in
xchg
cld
jnp
push
out
cwtl
inc
add
imul
jmp
adc
mov
mov
mov
sub
rcrb
in
mov
enter
int
loope
cmp
ja
sbb
fdivs
in
or
xorb
xor
outsb
nop
push
mov
loope
and
jbe
push
jns
xchg
aam
dec
ds
dec
mov
xlat
popa
push
dec
imul
mov
aaa
jbe
ljmp
and
push
adc
aam
inc
clc
lea
inc
mov
imul
dec
lea
add
fdivs
ret
inc
push
mov
rcrl
movsb
mov
test
xchg
sbb
sbb
xor
aad
inc
out
arpl
data16
enter
pop
sub
inc
pop
test
lock
pop
push
add
call
enter
dec
mov
dec
push
cltd
or
loope
leave
lahf
dec
rolb
and
pusha
test
jp
add
sbb
mov
mov
loop
dec
sbb
in
popf
pop
mov
shrb
test
fldenv
imul
push
inc
and
inc
shrb
icebp
testb
das
lret
mov
ret
push
adc
pushf
ficomps
xchg
mov
push
push
pop
xchg
aad
mov
lret
hlt
inc
mov
cmp
cwtl
push
fstps
dec
xor
mov
xchg
mov
pop
popa
mov
ja
mov
jl
inc
test
hlt
dec
into
fnstcw
xchg
loop
out
jmp
mov
cs
mov
mov
cwtl
or
aaa
test
lods
bound
pop
jbe
xchg
inc
jbe
mov
jmp
mov
and
jno
jne
jmp
and
push
leave
out
xor
jmp
add
roll
adc
fwait
les
sarb
stc
cmpsb
aad
insl
in
xchg
xor
pop
nop
adc
mov
cltd
fisttpll
mov
lahf
in
lahf
aam
lods
out
inc
insb
sub
xchg
pop
jg
lods
cmp
mov
in
in
push
push
mov
into
int3
mov
adc
add
add
mov
adc
pop
sbb
dec
sarb
mov
or
repnz
adc
js
adc
dec
movsb
aam
arpl
jg
mov
xchg
lahf
fcoms
mov
or
pop
test
nop
add
fimuls
scas
sub
bnd
and
xchg
loope
mov
sub
dec
mov
sbb
xchg
xadd
jp
in
bound
jp
je
inc
mov
jae
mov
inc
sub
pop
sbb
jmp
out
bound
mov
test
addr16
sub
cmp
loope
iret
and
lock
dec
pop
mov
pop
jne
fchs
ja
xchg
icebp
hlt
mov
sub
push
shrl
or
fistpll
cwtl
sub
sbb
push
out
rcpps
jb
roll
fnstcw
arpl
stos
dec
int3
push
cmp
hlt
dec
sbb
out
pop
jno
lahf
push
or
aad
btr
outsl
mov
adc
dec
sbb
arpl
or
mov
cmp
xchg
cmp
mov
cwtl
lahf
cmp
dec
adc
add
push
ljmp
mov
mov
pop
push
and
push
jl
repz
dec
ret
aas
scas
rcl
in
adc
jmp
dec
icebp
mov
rcl
jmp
mov
out
sub
test
cmp
pop
jnp
test
mov
mov
repnz
cmp
insl
rolb
lret
add
pop
sub
shl
cmc
mov
dec
mov
push
sahf
jl
fmulp
stos
dec
xchg
sub
shrl
mov
outsb
sub
aas
add
push
inc
fucomp
loop
jns
stos
push
enter
mov
dec
lods
jg
inc
sub
shl
xchg
repz
outsb
sbb
out
out
aas
sbb
add
mov
aam
pop
mov
sbb
jmp
mov
fdivrs
jle
pop
call
push
push
dec
mov
xchg
and
cmpsb
pop
mov
pop
cli
pop
pop
pop
daa
dec
sub
mov
dec
jmp
adc
lods
cmp
xchg
pop
xchg
adc
adc
scas
insb
call
jne
das
and
and
fwait
jo
mov
loopne
in
pop
mov
mov
jg
add
popf
jmp
or
sti
push
sbb
out
cmc
jg
test
xor
inc
loopne
out
jg
mov
ret
dec
or
leave
scas
pop
rcll
clc
std
shlb
outsb
mov
cli
sub
mov
pop
add
mov
and
ds
jbe
out
jb
push
add
decl
dec
scas
mov
xor
dec
sbb
imul
and
dec
inc
dec
and
add
mov
jp
dec
fildl
imul
cmp
jns
arpl
and
dec
add
sbb
imul
mov
ljmp
pop
in
add
fs
sbb
roll
add
jecxz
loopne
nop
push
sbb
iret
push
loopne
ds
mov
xor
mov
jle
jle
fdivrp
inc
inc
mov
xlat
xchg
jnp
cs
lds
fmull
and
frstpm(287
cs
lock
and
pop
lock
add
or
fstl
int
ret
call
cmpl
clc
inc
cmpsl
mov
mov
test
xchg
add
insl
sbb
dec
sbb
clc
icebp
out
std
cmc
fdivrl
fbld
insb
scas
aam
add
sahf
sbbl
aam
mov
popa
mov
mov
mov
and
ds
mov
mov
push
aam
andb
aaa
imul
cmp
push
leave
xor
pop
pop
std
fs
mov
jns
cmpsl
inc
sub
scas
enter
mov
cmp
cli
mov
fistpl
aas
or
push
jae
or
outsb
pop
call
push
mov
cmp
pop
jb
cmp
jae
mov
pop
cwtl
lock
mov
inc
mov
ja
or
repnz
mov
mov
sbb
out
test
or
lods
rcll
arpl
loop
jb
xchg
jo
xor
push
test
mov
ficomps
arpl
xchg
sub
add
call
xor
mov
sysret
sahf
stos
bound
clc
out
mov
shlb
test
and
loopne
lret
push
clc
cmp
mov
xchg
jmp
jbe
lret
sub
push
dec
mov
dec
lea
icebp
sbb
push
mov
or
ret
adc
pop
dec
mov
jle
jl
mov
mov
sar
and
pop
addl
push
fmuls
jae
shll
jle
fists
fwait
push
pop
daa
xor
adc
jge
inc
pop
movsb
cmp
mov
pop
sub
das
mov
in
jecxz
stc
add
or
and
das
inc
mov
adc
pusha
pop
xchg
nop
xchg
jne
aas
or
cmp
mov
mov
jl
stc
dec
xchg
ficoms
movl
cmp
test
mov
inc
jge
ficompl
adcl
test
jbe
adc
and
mov
cmpl
lcall
xchg
sbb
loopne
shrl
sbb
push
push
push
push
sbb
out
add
jle
push
pusha
lods
jae
sub
lcall
arpl
testl
add
mov
xor
push
clc
sub
int
jecxz
ret
incb
sub
jge
cmp
and
xor
jg
cmp
outsl
jl
and
inc
pop
pusha
jb
shl
repz
jbe
call
sub
push
icebp
pop
inc
push
push
rcll
mov
fsubrs
mov
xor
shll
out
ja
test
out
in
and
dec
xor
jp
icebp
jl
xchg
cmp
jecxz
scas
fs
add
mov
xchg
push
cmp
testl
or
ret
pop
push
int
ret
xor
sub
dec
and
jb
xchg
inc
out
jge
jbe
rcll
int
add
xor
mov
das
ja
incb
dec
subl
xchg
mov
dec
ror
int
sbb
mov
or
jle
add
ret
mov
push
cmp
idiv
cld
mov
mov
adcb
push
das
stc
sbb
inc
cmp
adc
fcompl
sti
movsl
mov
pop
lcall
mov
dec
jbe
ret
sahf
mov
lret
clc
cmpsb
and
mov
ljmp
out
xchg
add
mov
push
test
pop
aam
lea
sbb
int3
mov
loop
shll
xor
jle
sub
xchg
xchg
mov
negl
loope
mov
push
mov
jae
lahf
jl
dec
aam
lahf
shl
fcoml
jns
and
lods
sub
push
cmp
cwtl
cmp
push
sub
mov
mov
mov
sub
ret
jmp
hlt
or
or
dec
mov
lret
cmp
ljmp
insl
sbb
push
cmp
mov
imul
xor
inc
pop
sub
lret
add
je
xor
cwtl
sahf
pop
mov
dec
and
lds
sarb
xchg
test
xchg
push
es
push
jb
sbb
addr16
loop
push
jge
or
pop
adc
jne
push
repz
xor
mov
pop
sarl
jmp
jg
push
ds
enter
repnz
aaa
jns
test
hlt
stos
fstl
ljmp
stos
cmpsl
imul
adc
cmp
idiv
or
out
lods
stc
mov
cmp
mov
add
jp
mov
cmp
push
ret
gs
shlb
movsl
dec
stos
jmp
jmp
or
fcompl
scas
fimull
pushl
cmc
fmul
jae
movsl
mov
jle
sub
sub
mov
push
add
and
mov
nop
push
cltd
imul
and
mov
pop
hlt
mov
or
jae
ljmp
xor
adc
incb
dec
cmp
in
les
and
out
mov
jecxz
aas
and
push
in
idivb
stos
xor
push
jno
psubq
sub
and
fwait
sub
pop
or
xchg
mov
inc
and
ja
mov
pop
in
arpl
jle
push
mov
adc
mov
mov
cmpsb
je,pt
or
lds
rcll
and
lock
gs
xor
or
xchg
ret
adc
mov
and
and
fdivrs
xchg
outsl
xchg
leave
in
mov
fimuls
outsb
mov
icebp
push
loop
pop
icebp
lret
mov
fidivrl
xor
dec
jecxz
cmp
repnz
jl
mov
in
cmp
jl
repz
ja
iret
add
leave
inc
xor
or
mov
xor
jg
popf
pop
mov
stos
arpl
cmp
mov
push
daa
pop
icebp
aaa
out
test
scas
pop
mov
mov
sub
jne
mov
push
mov
add
stc
je
sub
sub
sub
or
cmp
outsb
cltd
xchg
add
mov
jo
hlt
pop
je
add
lock
adc
mov
scas
ret
inc
inc
out
inc
pop
iret
mov
std
xchg
lds
data16
inc
sbb
xchg
movsl
fsts
add
inc
out
adc
dec
sub
fs
cli
jns
lcall
mov
cmp
mov
mov
outsb
lods
leave
lods
pop
test
add
ret
sbb
repz
insl
jbe
fnsave
fs
inc
mov
test
stos
adc
cmp
mov
or
xor
loop
int3
fdivs
call
jnp
sbb
movb
cmp
fnstenv
push
cmp
mov
scas
shrb
rcl
loope
fwait
scas
enter
loope
stos
xchg
sub
sbb
sub
xchg
cli
dec
inc
and
lahf
cmp
in
int
push
cld
data16
shlb
outsl
aad
fcoml
cmp
push
pop
push
ds
xor
pop
cwtl
out
xchg
enter
push
jg
insl
or
mov
and
lcall
cmpsb
xchg
out
sbb
sbb
dec
jb
out
and
rcrl
test
imul
lret
xor
mov
sar
push
jae
call
mov
push
mov
loop
add
dec
in
jns
xorl
loop
lods
insl
adc
sbb
das
fadds
mov
cmp
push
in
ret
into
adc
xor
jo
inc
pop
cmp
dec
test
cmp
lea
jbe
xchg
mov
mov
jmp
rclb
ja
xor
in
push
pop
mov
push
pop
inc
and
out
push
jno
inc
data16
mov
aad
lods
pop
outsb
xchg
mov
mov
je
jmp
sbb
rcrb
leave
xlat
mov
out
mov
icebp
push
fs
adc
cwtl
lods
test
fadd
scas
jecxz
xor
es
clc
jne
pop
mov
inc
jmp
call
xor
lret
jo
pop
sbb
nop
mov
loopne
mov
and
loopne
add
fsubrs
mov
lods
adc
fwait
jmp
jb
call
in
jle
xor
pop
lods
xchg
sysexit
ror
sub
into
inc
ja
sbb
cwtl
push
roll
leave
cld
outsl
cmp
call
mov
inc
arpl
inc
jb
push
jnp
push
cwtl
dec
and
and
je
sahf
bound
xor
inc
push
into
cmp
dec
and
fnsetpm(287
or
xor
aaa
fsubrl
sarb
jp
scas
and
enter
mov
stos
sbb
sti
in
add
xor
cmpsb
push
mov
movl
mov
xchg
int
addr16
aaa
push
cmpb
int
mov
mov
push
sub
in
sbb
jge
or
incl
jo
je
adc
insl
add
cmpsl
xchg
inc
lahf
insl
lods
mov
aad
gs
and
in
sbb
mov
cli
push
std
adc
xchg
jae
rcrb
xor
lahf
imul
pop
aad
stos
mov
aas
or
cmpsl
mov
or
pop
xchg
or
sub
cltd
add
push
das
subb
enter
lds
add
int
mov
mov
push
arpl
ficoml
jns
inc
xchg
jge
cli
jns
xor
adc
lods
outsb
gs
xchg
lea
mov
icebp
xor
into
jmp
aaa
pop
stc
mov
cld
cmpsb
sub
mov
pop
push
dec
dec
scas
out
lret
cmp
aaa
jmp
xchg
gs
sub
mov
mov
fldt
pop
cmp
jnp
mov
scas
in
fstps
and
lahf
out
lods
xor
cltd
push
jge
push
imul
shrb
jbe
mov
bound
adc
or
mov
into
out
push
in
jnp
push
sbb
pop
jo
mov
mov
hlt
or
mov
mov
mov
enter
ljmp
fadds
jmp
lahf
dec
xchg
xorl
fmuls
mov
loopne
and
push
in
push
dec
adc
push
sub
mov
in
xchg
mov
inc
cmpsb
inc
aaa
jbe
imul
inc
pusha
vpunpcklbw
popf
xchg
fs
test
sti
or
jecxz
lds
test
jns
pusha
cmc
sub
inc
or
aad
inc
sub
lods
adc
inc
fisttps
sub
lcall
lods
inc
mov
fnstsw
xchg
xchg
arpl
in
jecxz
jmp
negb
insl
mov
add
xlat
stos
xor
and
ret
add
and
int
pop
in
pusha
sbb
adc
inc
fidivl
dec
mov
mov
jo
push
addr16
xchg
pop
mov
test
cmp
cmp
dec
pop
jnp
loope
mov
std
cmpsl
push
ja
enter
push
jmp
pop
push
test
cli
inc
insb
notb
sub
scas
out
push
mov
test
scas
int
and
mov
dec
call
mov
fistl
shlb
lret
js
pop
gs
or
fwait
mov
ss
lret
jmp
dec
cwtl
repz
sbb
sub
add
jbe
ss
es
push
dec
mov
pop
mov
aad
pop
inc
push
shlb
push
add
ret
addr16
js
push
dec
daa
inc
dec
adc
mov
lea
dec
outsl
js
imul
dec
cmpsl
in
es
jo
clc
mov
std
fsts
daa
int3
enter
shrl
in
incb
divb
subb
pop
and
xor
aaa
and
je
popa
call
jns
movsl
add
icebp
int3
pushf
inc
or
adcl
das
xchg
and
sub
and
pop
dec
out
xor
sti
add
repnz
ret
in
clc
mov
in
int
xor
aas
sbb
xchg
in
cmp
arpl
movb
sub
int3
inc
ds
mov
sub
add
xor
and
sti
fiaddl
int
cwtl
fisttps
jae
or
sbb
arpl
ljmp
xchg
mov
clc
in
or
pusha
stos
outsl
insl
shl
jmp
or
xchg
jno
push
push
push
leave
addr16
jns
sti
lods
or
mov
in
lret
cmc
push
repz
xchg
sahf
sbb
shlb
xor
cmp
xchg
insl
scas
mov
popf
iret
add
add
mov
mov
and
sub
cs
pop
jg
or
scas
jns
sub
dec
out
int
repnz
repz
cwtl
xor
notl
das
sub
mov
popf
cmp
xchg
mov
push
rcll
das
sub
js
push
aad
sbb
fwait
pop
sahf
imul
mov
gs
xchg
jno
pusha
push
jae
pop
aas
and
in
xchg
sti
les
pop
xchg
inc
pop
es
cltd
inc
shlb
push
push
push
pusha
cli
cmp
mov
push
adc
adc
daa
inc
gs
dec
sbb
inc
pop
or
and
add
mov
xchg
repz
mov
scas
adc
push
inc
xchg
or
sahf
and
xor
rcl
mov
sbb
xchg
xor
jb
pop
inc
jne
movsl
in
imul
cltd
ret
xchg
enter
jge
idivb
cltd
ljmp
jl
mov
mov
xchg
into
movsb
subl
or
fsubs
je
sub
mov
push
adc
xor
mov
int3
fsubl
push
ja
adc
enter
push
jb
xor
mov
clc
data16
mov
mov
iret
xchg
test
cld
setne
mov
inc
negb
js
cld
inc
push
dec
into
movsb
push
push
jl
mov
orl
rclb
jp
repnz
and
stc
es
fld
mov
cwtl
push
cwtl
cwtl
jecxz
mov
mov
and
or
ss
pop
mov
and
dec
jl
jle
cmp
mov
in
add
int
test
imul
xor
shrb
adc
or
push
dec
sbb
je
leave
mov
pop
inc
aas
loopne
out
sub
loopne
int3
adc
adc
call
pop
mov
loopne
scas
push
cmp
test
push
in
mov
shl
pop
test
jecxz
inc
in
mov
aam
pop
mov
or
sahf
fwait
loopne
sub
pop
xor
stos
stos
mov
mov
pop
ficomps
cli
lock
cwtl
int3
mov
xchg
lods
test
jnp
or
aam
xchg
movsl
xchg
jle
movb
fdiv
je
mov
jecxz
dec
add
or
sbb
pop
xor
ss
jb
into
and
cmc
cmp
movsb
daa
cwtl
xchg
mov
lret
push
jmp
dec
imul
cltd
cmp
pop
push
sbb
daa
test
or
in
cmpsb
aad
int
and
add
les
mov
push
dec
insl
push
pop
mov
pop
mov
in
les
cmp
inc
aaa
je
popa
add
xchg
fiadds
sub
mov
mov
sub
inc
push
jns
leave
iret
movl
push
scas
or
xlat
jnp
dec
movsb
mov
pop
lds
test
cmpsl
imul
sbb
mov
sbb
adc
or
sti
test
das
jnp
xor
rcrb
popl
test
loopne
sbb
hlt
cmpb
mov
jb
sbb
stos
lea
xor
fstpt
lahf
nop
scas
sbbl
lret
in
lret
fwait
add
ficompl
insl
fisttpll
pop
or
xlat
popa
negl
cmc
or
jns
add
pop
dec
ror
sarb
mov
dec
mov
sahf
xchg
push
adc
sti
push
int3
mov
xchg
push
add
sbb
xor
lret
ret
jbe
fnstsw
adc
mov
add
addb
into
pop
scas
xchg
sub
jg
clc
in
dec
jae
fwait
hlt
mov
push
lret
push
in
xchg
cmp
xor
mov
mov
adc
inc
imul
cmp
fstpt
decb
pop
mov
bnd
inc
loopne
fiaddl
stos
in
mov
and
push
in
pop
shrl
cwtl
ja
pop
stos
cmpsl
test
addb
mov
fldenv
jns
fbld
dec
add
repz
pop
iret
jge
mov
lds
sbb
rol
add
ds
xchg
sbb
fwait
jle
int3
sbb
std
pop
xchg
mov
mov
mov
ds
test
mov
test
push
mov
inc
outsl
sbb
xchg
inc
mov
imul
shll
imul
insb
adc
mov
es
fistps
inc
outsb
push
xchg
in
sbbb
f2xm1
sbb
xorb
pop
in
addb
in
ret
inc
loopne
outsl
add
sbb
daa
cltd
inc
das
push
sub
mov
repz
add
mov
outsl
cltd
fs
fcmovbe
dec
mov
adc
shl
in
xchg
aad
mov
imul
mov
fmul
bound
enter
mov
call
pusha
ss
faddl
int3
imul
daa
or
cld
sbb
cmpsb
xchg
xor
xchg
jbe
xor
loop
imul
test
dec
dec
imul
xchg
or
jb
jmp
popa
aaa
fldenv
sbb
in
add
jp
pop
jae
pop
mov
xlat
inc
jecxz
sub
enter
popf
test
pushf
fcmovb
pop
ja
in
mov
jns
mov
and
push
or
mov
mov
out
and
mov
inc
inc
gs
jnp
cmp
sub
dec
loop
dec
loop
jmp
fcompl
push
jno
sbb
mov
jp
pop
cmp
and
icebp
mov
aam
das
outsl
popf
jmp
jl
es
sbb
sbb
aaa
in
adc
out
xchg
imul
or
sub
mov
es
test
lods
cmp
xorb
inc
scas
and
dec
mov
xlat
mov
in
cwtl
sti
les
pop
jmp
mov
stc
gs
cmp
in
push
jl
push
xor
jae
xor
sub
in
xchg
cmp
test
push
cmp
mov
out
popl
mov
ja
fsubs
and
call
cmp
dec
lahf
inc
and
adc
mov
mov
int
jg
adc
test
insb
xchg
int3
sbbl
inc
ljmp
lahf
xor
lahf
jmp
and
adcb
mov
fnstenv
cmpsb
push
into
mov
sub
arpl
xlat
repnz
nop
outsb
or
out
dec
outsb
int3
inc
rolb
add
mov
jmp
test
mov
dec
mov
imul
jne
aad
dec
decb
add
pop
mov
shlb
cmpsb
jg
pop
cs
stc
dec
add
or
lcall
xchg
je
jb
shrl
cmpsb
call
inc
hlt
lods
adc
mov
inc
enter
adc
test
iret
repnz
mov
dec
inc
ljmp
xchg
adc
jbe
and
lea
add
rcr
std
mov
test
sub
addb
push
mov
xchg
dec
in
and
lods
ja
xchg
or
jl
dec
mov
inc
xchg
pop
in
fsub
popf
sbb
out
cmp
fwait
fs
lds
adc
xor
out
mov
aas
ficomps
test
cs
and
ss
dec
push
jle
jle
lock
clc
xchg
add
jne
and
ret
stc
es
cmp
fdivs
mov
int
or
ss
lods
fimull
ret
cmp
test
push
fisubl
outsl
outsl
sub
dec
out
or
icebp
sbb
in
andb
or
stos
mov
lcall
pusha
mov
jge
pop
popa
adc
adcl
xchg
add
xlat
cli
out
repz
daa
push
cld
test
jecxz
jge
mov
xchg
sub
mov
cmp
loopne
pop
jmp
cltd
rorl
out
or
push
jne
or
push
sbb
in
popf
popw
push
inc
test
mov
mov
popf
sbb
sub
push
int3
lahf
ficompl
inc
push
lcall
cmp
out
std
faddp
or
xor
xchg
test
add
adc
sub
insl
test
xchg
loope
sarl
inc
xor
pop
dec
fimuls
xor
jmp
arpl
cwtl
add
push
int3
inc
xlat
push
stos
pop
ljmp
and
mov
aam
ficompl
subb
or
test
dec
aam
cmp
dec
xor
daa
es
nop
test
or
test
sbb
fisubrl
adcl
loopne
mov
std
or
pusha
in
xchg
lock
sarl
jge
imul
icebp
dec
or
aad
in
loop
push
xor
xchg
test
popf
fbld
push
push
mov
xor
daa
and
nop
inc
btcl
add
fdivrl
aas
pop
popl
dec
mov
int
loope
jecxz
inc
dec
aad
add
ror
iret
sbb
cmpsb
fiaddl
jb
sbb
pop
out
and
repz
jle
sbb
lds
push
jno
outsl
mov
jno
aas
jecxz
xor
cmc
insl
clc
xor
mov
push
mov
aas
cmp
pushf
inc
add
ja
inc
cmc
pushf
mov
rcll
movsb
orl
jecxz
shrl
icebp
mov
fs
sub
push
inc
push
inc
xchg
fisubl
and
cmp
in
mov
mov
testb
dec
jp
cs
rcr
or
pop
jo
xor
mov
adc
test
lcall
loop
out
lcall
mov
mov
add
nop
sub
lods
cmp
stos
jne
adc
jne
jg
sbbl
rorl
sbb
ss
jnp
call
sbb
cld
push
sbb
pusha
inc
idivb
jo
fcmovbe
add
je
dec
outsb
fimuls
mov
repnz
movsb
nop
jl
sbbb
cwtl
adc
stos
aam
aad
add
xchg
or
jmp
stc
and
add
rorb
rcrb
push
jae
out
cmp
cmpb
dec
and
fidivrl
push
popf
jg
clc
ljmp
js
cmpsb
call
mov
gs
dec
es
or
xchg
mov
ljmp
aam
lods
pop
push
or
or
scas
sub
mov
ficompl
pushl
stc
call
in
mov
aam
out
xor
div
xor
js
cmpsl
outsl
bound
js
sub
shl
jecxz
jl
xchg
enter
pop
sbb
adc
jle
cli
ficomps
push
and
and
add
loop
inc
movsb
ja
arpl
adc
ja
call
sub
sbb
dec
andl
or
sub
inc
fdivp
jne
outsl
fmuls
das
frstor
fcomi
inc
xchg
cmc
daa
mov
and
movsl
pop
sub
or
adc
sbb
inc
xlat
adc
in
pop
or
dec
mov
or
cmovae
adc
xchg
jmp
iret
andl
dec
dec
out
lret
jecxz
pop
into
and
shll
xchg
mov
sub
sbb
out
movsb
lods
xchg
test
in
and
fcom
adc
out
or
ret
jp
test
jecxz
fincstp
gs
xlat
mov
icebp
adc
rcr
xchg
add
mov
inc
popa
stos
add
sub
lret
insb
cmp
decb
mov
test
xor
jno
rcrb
movsb
sub
sahf
fcom
js
xchg
or
enter
notb
push
ret
inc
ss
push
push
rorb
fnstcw
mov
adc
sub
pop
xlat
sbb
xchg
imul
rcll
mov
mov
sbb
cmp
in
addr16
imul
sub
xorl
add
addr16
dec
adc
xor
fs
mov
mov
cld
add
int
aad
shr
cld
daa
pushl
cmp
lods
test
popf
imul
pushf
adc
ds
xlat
cmp
cmp
sbb
mov
inc
mov
pop
add
mov
fucomi
jae
jg
inc
push
arpl
xchg
out
mov
data16
imul
push
scas
les
ret
rol
data16
push
iret
sbbl
repz
jno
and
adc
pop
jae
mov
loope
ss
iret
or
pop
ja
out
pop
adc
xchg
or
cmc
dec
mov
adc
adc
or
jl
mov
and
push
pop
xor
sub
dec
mov
jg
ret
rcrl
fwait
sbbb
xor
push
jl
or
cmc
loopne
xchg
call
jae
push
pop
adc
adc
lock
cmc
adc
inc
jns
in
adc
pushf
leave
sub
xor
sbb
cmc
sbb
pop
inc
pushf
xchg
pop
movsb
aaa
fistps
jne
es
sbb
cs
ljmp
fsubrp
jb
lret
pushf
mov
sbb
and
xchg
jb
jb
je
shrb
lock
mov
push
dec
jg
test
dec
dec
lret
pop
mov
adc
cmc
les
push
xchg
shr
or
iret
test
xchg
mov
ret
insb
cwtl
rorb
jae
arpl
cmpsb
inc
inc
cwtl
fwait
sub
ret
mov
scas
inc
adc
pop
add
adc
or
dec
mov
push
and
sarb
in
sarb
push
mov
fidivl
adc
and
hlt
movsb
push
jbe
test
inc
adc
inc
push
neg
or
sub
les
and
rcr
mov
pop
inc
sbbb
inc
jmp
fcom
and
pop
sbb
push
jbe
andl
test
xor
add
dec
fcomps
loopne
stos
mov
xchg
push
icebp
ficoml
enter
incb
cmpsl
repnz
mov
add
mov
push
mov
cs
rcll
mov
int
adc
mov
mov
cmpl
jmp
or
pusha
xchg
xchg
inc
dec
push
pop
push
pop
push
or
cmp
mov
and
shl
pop
jecxz
scas
scas
cli
imul
int
xor
enter
mov
mov
jb
shll
and
out
xchg
je
dec
pop
ja
mov
fucomip
adc
dec
iret
mov
pop
or
xor
mov
cwtl
mov
inc
sbb
fdivp
xor
ja
inc
pop
int
mov
aas
mov
rcrb
cwtl
pop
ja
jle
dec
call
mov
add
roll
xchg
cmp
cmc
cmc
scas
xor
push
popf
sti
int
mov
mov
push
cmp
add
jp
dec
cmpsl
imul
pop
in
mov
jnp
outsb
sbb
aam
sub
lcall
lock
stos
je
push
cmpsl
lods
and
mov
push
scas
jle
jae
mov
push
mov
add
mov
mov
lahf
xor
jns
add
and
jge
out
sbb
orl
lahf
nop
aas
push
cwtl
cmpb
iret
popf
ss
mov
xor
int
xchg
push
adc
hlt
xor
sarb
dec
cltd
cmp
inc
push
push
pop
repnz
add
mov
outsb
jne
sbb
loop
ficoml
and
jnp
sbb
in
and
insb
test
or
les
call
push
fsubp
mov
push
mov
mov
jae
mov
scas
mov
fmulp
mov
mov
push
notl
ss
xchg
xor
mov
xor
ja
cltd
jmp
loop
jmp
or
sbb
mov
xor
rcl
xlat
xor
shlb
inc
fwait
add
ja
lret
jae
or
mov
sub
pop
jne
jns
inc
cmpsb
sub
push
xorb
push
sbb
cmp
xchg
push
dec
js
lret
xor
aad
addl
ljmp
dec
lock
rcll
jge
data16
sbb
into
mov
shll
pushl
enter
mov
jge
jl
push
cmp
and
orl
imul
jae
add
push
repnz
movb
adc
cmp
out
ffree
rorl
cmp
movsl
in
cmp
shrl
jge
mov
inc
jno
pop
and
and
add
pop
cmc
mov
test
aad
jo
pop
jo
into
mov
mov
aam
das
sbb
xor
aam
push
xor
aad
xchg
sbb
push
jb
sbb
push
push
stc
sbb
sbb
mov
and
es
testb
jecxz
lea
scas
adc
push
scas
push
sbbl
pop
add
mov
daa
into
in
mov
push
dec
sbb
lds
icebp
fmull
movsl
mov
xchg
jns
push
loopne
dec
mov
add
cmp
mov
mov
mov
mov
and
push
sbb
and
outsl
and
and
dec
jmp
leave
pop
clc
jnp
pop
sbb
stc
sbb
dec
push
inc
jle
mov
test
dec
mov
repz
push
lds
mov
mov
xchg
mov
add
fcomip
outsb
xchg
xchg
adc
sarl
outsb
xorb
scas
std
ss
mov
popa
cmp
pop
inc
inc
pop
dec
add
cld
call
dec
rcrb
test
std
dec
push
jge
or
fidivl
mov
push
adc
push
in
push
adc
xchg
mov
nop
jo
mov
das
xor
int3
sbb
popf
cmp
adc
cmpsb
test
mov
dec
inc
dec
add
push
adc
mov
out
nop
xor
add
xchg
pop
adc
sbb
dec
push
mov
shlb
jg
push
arpl
adc
ja
sub
jmp
in
int3
xchg
xchg
insb
fdiv
outsl
out
outsb
or
push
sbb
stc
mov
stos
dec
xchg
das
loop
xor
push
ja
jnp
mov
leave
repnz
pop
cmp
lret
lods
xchg
addr16
daa
mov
cmp
fwait
push
jg
mov
or
lds
fnstenv
or
dec
jg
fidivl
out
mov
inc
testl
lret
cmp
stos
decb
pop
xor
in
sbb
iret
push
adc
jmp
inc
mov
add
lahf
xor
add
cli
or
jo
jb
ficompl
mov
sbb
dec
xchg
inc
lods
repz
jae
lcall
adc
das
inc
pop
cmp
push
push
and
cltd
push
lea
mov
jecxz
es
push
jle
and
stos
cmp
jno
add
rcrb
cmpsb
mulb
fs
push
push
stos
jbe
jp
in
xor
rorb
fldcw
lret
push
sbb
shrl
sub
cltd
xchg
mov
sti
inc
mov
sub
dec
and
push
icebp
or
minps
lret
mov
dec
and
sbb
into
movsl
cmc
stos
insl
mov
and
push
adc
jnp
add
sbb
cmpsl
mov
mov
stc
fstp
mov
push
inc
hlt
in
fisttpl
mov
scas
lahf
or
test
ret
sbb
cmc
or
movsl
bnd
into
fld
and
mov
testb
xchg
gs
add
inc
mov
push
pop
clc
xchg
cltd
add
cltd
pop
push
in
cwtl
lret
jae
xor
sbb
lret
ficoms
lret
addr16
add
xor
lods
xchg
jle
jp
mov
xchg
cltd
add
int3
and
sbb
xchg
rcrb
inc
mov
push
dec
lock
cmp
paddb
xlat
in
test
pop
add
push
sub
and
dec
aaa
int3
xlat
jbe
test
sti
dec
or
int
pop
mov
mov
ret
push
xchg
loope
bound
nop
test
les
ret
test
inc
bound
adc
mov
sub
ret
inc
loop
imul
arpl
stc
pop
sbb
mov
mov
in
cld
call
pushf
mov
jbe
push
repz
adc
cmp
inc
sub
lcall
mov
mov
mov
call
add
les
cmpsb
insb
xchg
faddl
pop
repz
xchg
xchg
movsb
fs
mov
ds
iret
mov
mov
pop
lea
or
insl
fwait
sub
sti
jge
mov
cwtl
mov
in
imul
jnp
inc
pusha
aas
jnp
in
jae
and
sbb
xchg
dec
cmp
cmpsb
inc
push
xchg
jecxz
sbb
repz
pop
mov
dec
insb
jo
sbb
xchg
xchg
loope
stc
pop
cmp
add
pushf
fstp
movsb
inc
jae
push
mov
sub
fwait
jo
int
in
mov
mov
lret
fnclex
mov
and
insb
or
lcall
xchg
fs
sub
ficomps
mov
push
dec
into
div
in
push
sub
daa
stc
and
pop
leave
xchg
inc
xorb
cmpsl
shll
pop
push
push
xchg
add
pop
fwait
push
cmp
imul
and
sub
xchg
jne
stos
push
bound
sbb
cmp
mov
lods
or
pop
dec
adc
fists
fwait
mov
sub
hlt
ljmp
pusha
lds
movsb
pusha
xchg
out
cwtl
dec
inc
stos
xchg
mov
ds
sbb
xor
sub
xchg
shrb
add
pop
mov
out
js
test
add
loope
das
xor
addr16
mov
out
rolb
add
outsl
mov
ficompl
push
sbb
adc
or
jns
sbb
adc
fdivs
test
sbb
push
call
adc
pminub
mov
fcomps
icebp
fnstsw
mov
xorl
ret
adc
push
mov
jmp
mov
push
lahf
pmulhuw
xor
mov
cmc
jo
mov
popa
mov
pop
sahf
lret
dec
sub
mov
gs
mov
mov
lahf
cmp
popf
int
dec
sub
mov
idivb
data16
shrb
jg
add
arpl
out
fimull
adc
xor
sub
pushf
xchg
or
div
mov
int
out
fmul
xchg
sysenter
jae
leave
roll
sahf
insl
xchg
mov
xchg
mov
loopne
xor
std
sub
push
int3
testl
popf
in
jge
inc
lock
dec
ja
aam
mov
pop
outsb
jb
imul
cwtl
cwtl
mov
xchg
les
je
inc
arpl
std
ja
sub
lahf
mov
push
mov
addb
add
sub
aam
dec
mov
sbb
pop
jge
mov
sub
jne
enter
outsl
sub
pop
jmp
out
xchg
jecxz
sysret
add
add
sub
aaa
lock
sbb
mov
or
jecxz
stos
add
adc
ja
or
lods
int3
cmc
sbb
inc
mov
cs
outsb
sbb
pop
arpl
sbb
out
repz
and
sub
jbe
jmp
jnp
or
or
jno
mov
pop
fsub
inc
mov
loope
and
loop
mov
rcr
cmc
andl
fisubrs
fldt
or
sbb
popa
lods
test
aaa
push
popa
sbbl
cmpsb
lret
int3
push
mov
adc
ljmp
lcall
movsb
jno
mov
out
imul
ljmp
inc
out
add
mov
xchg
mov
push
fnstcw
sbb
aam
idivl
test
hlt
mov
adc
test
dec
inc
call
shll
adc
es
loop
inc
inc
out
icebp
xchg
fdivrl
hlt
lds
pop
mov
scas
xor
push
xchg
aad
sub
ds
cltd
mov
mov
iret
fbld
dec
or
iret
xor
loope
lods
arpl
cs
ss
scas
shl
cmp
andl
sbb
test
jge
gs
icebp
dec
inc
pop
pusha
out
or
adc
adc
or
dec
cmp
or
fisttps
pushf
movsl
mulb
dec
into
sbb
mov
jle
insb
jbe
push
mov
adc
xor
imul
inc
mov
lahf
xchg
rorl
popf
push
data16
mov
and
inc
nop
std
xor
mov
jle
mov
mov
xor
lea
ss
imul
mov
dec
jne
adc
sbb
popf
push
clc
ljmp
push
and
xlat
jl
daa
jb
mul
xchg
push
lret
enter
test
outsb
cmp
sbb
mov
and
inc
jbe
ljmp
cmp
inc
shr
cmc
ja
lret
pop
sbb
sbb
push
pop
xor
cld
out
frstor
out
repnz
imul
imull
jl
mov
mov
test
fldenv
loopne
jnp
cmp
stos
xor
cld
mov
fiaddl
cmp
aam
push
mov
adc
pushf
push
cmp
mov
xlat
xor
out
fwait
das
lret
mov
call
in
fwait
in
inc
xchg
mov
add
inc
inc
stc
fildll
add
mov
ljmp
pop
lcall
mov
lds
fldl
mov
jge
adcb
cld
ret
lock
pop
fucomp
outsb
dec
ds
xchg
out
mov
jge
outsb
lahf
in
lret
pop
out
sbb
sbb
and
popf
ficompl
cmc
jle
adc
sar
mov
xchg
ds
sbb
mov
mov
mov
setg
das
loopne
inc
daa
lahf
inc
xchg
clc
fmulp
out
je
cmp
in
inc
mov
leave
movsl
mov
push
add
scas
stos
pop
or
sbb
sbb
aam
add
daa
cmp
ret
sbb
xor
repz
inc
rcrb
jmp
cmp
pop
notl
lds
pushf
push
fiadds
dec
add
adc
adc
into
fwait
movsl
fistps
push
dec
sbb
jbe
divb
cmp
or
pusha
fsts
xor
sub
nop
mov
xsaves
fldenv
leave
fwait
adc
push
in
or
cwtl
sbbl
pop
call
enter
ss
and
mov
and
xchg
fdivs
mov
js
sahf
leave
mov
insb
push
xor
or
lret
call
test
mov
test
ljmp
sti
into
mov
cmp
xchg
daa
xchg
xchg
pop
xor
sub
shll
sbb
movsb
sbb
xlat
mov
push
mov
dec
fs
xor
mov
jp
lods
add
adc
pop
pushf
in
jb
outsb
sub
mov
shrb
aad
hlt
cwtl
loop
or
add
mov
mov
sti
mov
addb
lret
xchg
or
fld
mov
dec
aas
sbb
cmp
insl
sbb
xor
scas
add
test
add
jp
adc
out
popf
imul
mov
mov
jae
mov
and
sub
pop
push
lea
adc
mov
out
cmp
pop
cmp
mov
push
loop
mov
xchg
push
pop
push
xchg
adc
xchg
idivb
out
call
dec
insb
addr16
in
push
out
jb
outsb
adc
dec
movsb
jle
rcrl
dec
mov
xor
testl
cli
ds
inc
sahf
adc
loopne
add
xchg
sub
and
xor
or
mov
mov
jg
push
xchg
jno
mov
mov
mov
xor
and
mov
lahf
dec
mov
jp
or
das
sbb
cltd
out
cwtl
add
bound
sub
sbb
jno
test
dec
inc
adc
mov
add
xor
sbb
mov
cmpsl
pop
cmp
stos
mov
add
pop
stos
push
jne
imulb
sub
inc
test
xchg
jbe
push
push
cmpsb
and
jg
iret
cmpsb
xchg
dec
subl
setae
dec
mov
shr
add
repnz
add
out
xchg
icebp
dec
dec
shlb
outsb
push
sbb
xchg
sbb
arpl
jno
out
stos
pop
sbb
orl
pop
adc
fistps
fidivs
push
nop
push
fistpll
pop
aas
xor
jle
scas
adc
in
xor
and
xor
add
fwait
mov
xchg
cmpsl
sbb
mov
inc
int3
ret
jg
mov
je
imul
or
jo
dec
sub
ljmp
sbb
sbb
push
mov
vsubpd
and
arpl
cld
mov
aad
lcall
addb
fsub
arpl
adc
pop
sahf
jo
jae
mov
and
stos
fcmovb
add
dec
cmp
mov
sub
into
jmp
dec
add
jno
mov
cld
or
xorl
lret
push
mov
mov
cmpsl
sbb
cwtl
dec
loop
pop
mov
aas
xchg
push
mov
icebp
xchg
jg
inc
scas
fldt
std
xlat
pop
mov
lds
es
fcmovnbe
nop
sbb
out
sub
dec
bnd
cmp
gs
xchg
out
adc
xchg
je
push
clc
mov
scas
mov
ret
test
aam
testb
jns
pushf
mov
and
loope
add
int
movsb
and
push
roll
popl
mov
jle
add
adc
jmp
dec
sub
mov
ret
loope
ret
lds
push
stos
pop
inc
lods
mov
cmpsb
adc
push
pop
dec
pop
loop
stos
jecxz
mov
stos
jne
sbb
scas
sub
rorl
in
outsl
mov
inc
xchg
leave
js
sbb
jnp
fs
mov
add
movsl
insl
jmp
lods
xchg
add
scas
mov
push
sbb
xchg
fucomip
jecxz
loopne
add
cmpb
es
jns
sbb
sar
add
mov
xor
ret
iret
pop
mov
fs
in
movsb
es
mov
dec
sbb
and
sar
inc
and
gs
push
hlt
sbb
sbb
xor
mov
jbe
xchg
jge
dec
leave
repnz
pop
adc
cltd
mov
fwait
jge
or
jne
mov
xchg
movsl
js
xchg
nop
scas
and
jp
cmp
xchg
xchg
outsl
fiaddl
fucompp
stos
push
mov
xchg
repnz
filds
inc
ja
movsb
sub
xchg
jmp
loope
pop
insb
cmp
dec
stos
or
incl
or
sahf
rcrb
inc
cmp
mov
cli
enter
insl
jb
push
lret
pop
repnz
iret
mov
out
mov
test
popa
aas
loop
hlt
lock
nop
mov
sti
lea
cli
add
js
lret
out
lock
and
mov
sahf
mull
or
cmp
push
dec
or
lock
jbe
push
xchg
xchg
lods
mov
xor
sahf
cli
mov
pop
popa
mov
push
popa
movsl
shr
cmp
js
jge
sub
jp
mov
jb
adc
fdivr
nop
int3
push
jno
negb
loop
iret
and
mov
cmpsl
clc
add
cli
xchg
enter
out
data16
sub
xchg
enter
xchg
mov
pusha
and
inc
jge
addl
push
xchg
out
dec
adc
mov
xor
dec
icebp
cwtl
cs
jae
addr16
xchg
or
movsl
lea
cmp
add
cmpsl
repnz
xlat
outsl
inc
cs
push
pop
or
inc
jne
push
loop
loopne
sbb
cmpl
xchg
sahf
lahf
xchg
push
push
mov
imul
roll
lods
hlt
fildl
dec
pop
inc
shlb
or
cmove
scas
aas
jbe
repnz
out
in
sbb
ja
push
andb
stc
and
dec
sub
pop
je
or
aaa
xor
jl
xor
gs
jg
movsl
daa
pusha
sub
leave
cmp
adc
jg
sub
inc
push
int3
cli
es
push
push
fdiv
adc
ficomps
mov
aaa
push
jl
shll
icebp
inc
js
in
les
pop
sbb
movsl
jns
dec
loope
leave
add
loope
dec
jp
adc
pop
push
adc
xor
jge
xlat
pop
mov
repz
pop
and
fimull
xchg
lret
fsubp
sub
sbbl
sub
pop
enter
jbe
or
test
repnz
push
insl
aaa
hlt
icebp
lock
sub
bound
gs
or
jae
je
inc
jne
sti
mov
mov
fwait
inc
and
jb
je
test
add
sub
iret
or
out
xchg
or
cvtpi2ps
xchg
add
lcall
add
shll
ljmp
sbb
in
test
test
mov
mov
shlb
js
xchg
divb
loop
pop
dec
pop
sbb
or
cmp
imul
fsubr
shl
cli
mov
push
inc
into
arpl
or
bndstx
mov
and
pop
pop
sti
cmp
mov
xchg
pop
dec
ficoms
mov
mov
pop
sbb
aas
js
pop
je
xorps
pushf
mov
cmp
pop
mov
mov
icebp
pusha
out
xor
shl
fadds
fdivs
imul
mov
loopne
mov
outsb
outsl
xchg
jg
push
bound
sub
rcll
cld
loop
push
push
push
inc
mov
stc
loope
mov
lea
scas
sbb
repnz
mov
pusha
fdivrl
adc
insl
jb
dec
in
nop
sub
std
jl
xchg
fs
mov
push
mov
clc
push
xor
dec
subb
add
adc
popf
sbb
fwait
mov
movsl
insl
test
sbb
add
sbb
push
scas
mov
push
and
repnz
orb
push
addr16
or
fldl
push
push
inc
pop
sbb
cltd
iret
iret
dec
icebp
pop
xchg
push
or
pop
in
inc
sbb
xchg
adc
xchg
das
pop
mov
sbb
add
dec
inc
imul
lods
pop
pop
push
mov
out
cmpsl
out
nop
or
daa
xchg
push
arpl
pop
in
sbb
fdivrl
and
into
clc
or
stos
sbb
adc
xlat
sbb
ss
xchg
and
sub
push
mov
mov
and
js
pop
sub
daa
sahf
dec
je
rcll
lods
mov
and
lods
pop
mov
aaa
xchg
test
call
rolb
out
int
leave
aas
imul
jno
loop
je
out
stos
fbld
cmpsl
std
les
xlat
xor
pop
adc
stos
pushf
imul
sahf
pop
int
xchg
xchg
push
call
lret
dec
push
mov
lret
push
adc
cmp
jge
pop
inc
dec
fs
fcomps
sbb
leave
or
push
xor
or
push
inc
lds
repnz
sub
jb
sbb
adc
jb
test
int3
mov
pop
sbb
cltd
add
push
mov
lock
enter
add
xchg
xorl
mov
mov
fsubs
pop
xor
arpl
jg
inc
adc
adc
mov
mov
cmp
push
adc
sbb
dec
jg
adc
sub
cld
in
cmp
lds
cs
ret
fsubs
repnz
je,pt
cmpsl
daa
push
sub
fbld
enter
aam
or
sub
or
cmpl
je
pop
inc
push
mov
sbb
ficoms
and
add
fidivrs
int3
into
lods
loope
and
js
testb
dec
inc
mov
std
sub
push
cmc
popf
pusha
mov
sarb
cmp
xchg
jp
push
das
push
mov
negb
lds
sbb
lea
pop
dec
inc
fistl
insb
or
aaa
xchg
dec
les
cld
call
mov
outsl
add
sbb
mov
pop
test
mov
out
mov
pop
jmp
pop
inc
adc
andl
int
mov
add
cmpsl
push
fwait
jns
mov
inc
jg
stos
push
jbe
sbb
sub
jbe
cmp
jle
je
xor
push
add
fiadds
popf
mov
jns
sbb
pop
fists
push
cltd
mov
cwtl
aam
mov
adc
outsb
sub
stos
rorb
scas
jmp
cmp
dec
mov
scas
pop
in
addr16
inc
cmp
mov
sub
push
jp
sbb
sub
sub
imulb
cmp
fs
or
push
mov
rolb
pop
sub
push
sub
aas
sbb
mov
xor
xor
sbb
push
mov
sub
int3
xchg
jne
adc
xchg
adc
rorl
jo
xor
ljmp
rolb
and
outsl
and
xchg
mull
push
imul
fmuls
xor
xor
jbe
test
jmp
push
jo
jmp
mov
mov
xchg
ret
pop
loope
push
or
push
repz
jmp
lahf
divl
enter
add
jle
xor
cmpsl
test
xchg
adc
dec
xorb
in
mov
jg
imul
ja
leave
sbb
sub
repnz
and
jne
mov
and
jmp
imul
scas
xchg
fwait
movsb
in
dec
lods
mov
pop
jne
dec
jbe
pop
cmp
aam
bound
xchg
dec
push
pop
lret
push
scas
dec
add
cli
stos
cmpb
rcr
and
enter
inc
std
mov
test
pop
mov
in
mov
cmp
sti
sarl
sbb
sti
insl
add
and
inc
push
lret
pop
adc
jbe
cmp
push
and
mov
push
cmp
movsl
jb
aad
lret
das
push
icebp
push
repz
pop
shrl
inc
and
test
mov
addr16
or
xchg
xchg
add
mov
idivb
inc
mov
push
es
sar
pusha
and
mov
je
pop
gs
insl
or
push
nop
jecxz
icebp
call
push
mov
sbb
testl
lcall
test
mov
add
lods
xor
fimuls
sbb
dec
add
mov
or
mov
xchg
cwtl
scas
pop
cltd
xor
xor
fcmovnbe
pop
xchg
add
dec
xchg
mov
repnz
mov
ljmp
lcall
xor
and
iret
iret
mov
inc
loop
or
adc
pop
sub
into
hlt
cs
xor
push
push
mov
push
inc
rcll
inc
push
jl
add
cli
andb
ss
jle
dec
aas
push
sahf
jo
loope
cltd
push
xor
jp
push
test
mov
fsubl
lahf
or
out
addl
push
sub
imul
loop
repnz
sub
loopne
aaa
push
jp
push
mov
add
push
jmp
test
fsts
mov
dec
aas
jnp
pushf
ret
cmp
adcl
popa
addr16
jb
mov
loope
add
inc
adc
lds
mov
stos
mov
shlb
or
in
loop
sub
je
mov
jo
push
inc
inc
lret
testl
loope
addr16
bound
fsts
in
nop
adc
out
adc
fsubrl
jb
imul
push
or
cmp
push
mov
xchg
sbb
adc
inc
cmc
and
lcall
dec
or
sbb
int3
lds
ljmp
jg
sub
lahf
jae
test
ss
fnstcw
out
mov
xchg
bound
add
aam
adc
fs
arpl
xchg
add
push
outsl
movb
testb
rcr
shrb
and
fsts
popa
sbbl
add
hlt
or
lds
push
imul
xorl
clc
test
fstl
into
loope
push
into
bound
lods
cmp
mov
or
movl
xor
cli
and
push
mov
mov
sub
mov
mov
jp
clc
enter
cmpsl
outsb
pop
enter
inc
adc
daa
pusha
fwait
xchg
xchg
mov
in
inc
adc
leave
mov
or
mov
fmulp
imul
fs
jno
sbb
es
adc
push
mov
loopne
es
xchg
push
xor
lret
iret
and
cld
xchg
cmp
jbe
mov
jp
mov
arpl
mov
jecxz
aaa
arpl
add
lods
sbb
cld
jmp
inc
les
xchg
stos
icebp
jne
mov
mov
mov
mov
nop
mov
scas
lea
jge
mov
dec
xchg
mov
jl
rcrl
aas
pop
hlt
adc
fwait
inc
ljmp
loop
adc
inc
arpl
xor
xor
jg
inc
fcmove
lret
xor
mov
dec
movsl
fdivs
xchg
out
sub
fs
mov
addr16
cld
mov
add
adc
or
mov
add
mov
or
jp
mov
xchg
das
push
mov
push
mov
inc
sbb
cmpsl
sub
mov
sbb
cltd
insl
les
pop
pop
push
cmpsb
push
imul
push
cmp
loope
fildl
mov
inc
insb
add
aaa
in
xor
inc
out
lods
pop
dec
out
mov
dec
mov
xlat
inc
mov
insb
ret
aaa
pushf
ret
imul
sbb
pop
into
cli
lea
mov
mov
adc
pop
pop
dec
pop
mov
clc
push
and
inc
dec
xlat
cmp
mov
out
idivb
mov
push
mov
dec
jne
rorb
in
data16
cmp
loop
movsb
mov
mov
ds
orl
in
sbb
decb
pop
pushf
jnp
addl
test
push
dec
mov
push
arpl
cli
mov
lahf
out
jbe
mov
jbe
add
mov
and
pop
mov
xor
adc
cld
cmp
dec
mov
xor
cmp
movsl
loope
sub
loopne
out
xchg
scas
push
stos
sbb
fcoms
adc
aaa
xlat
xor
sub
icebp
jl
mov
enter
shrb
dec
out
sbb
jle
and
pop
movsl
mov
test
cmc
or
testl
xor
jge
jmp
rcl
mov
int3
icebp
in
pop
stos
sahf
iret
fists
mov
adc
stos
fisubrl
aaa
bound
into
xlat
push
inc
in
mov
jecxz
adc
enter
sub
adcl
mov
test
xchg
mov
xor
dec
rcll
test
jnp
ds
lods
mov
mov
lea
xchg
xor
dec
test
fistpll
sbb
sub
lds
push
or
movsl
nop
imul
fs
mov
inc
das
lea
fmull
imul
adc
push
negl
stos
int3
lcall
lds
sti
gs
xchg
adc
outsl
call
adc
pop
push
ja
jecxz
and
sahf
and
dec
iret
push
mov
adc
sbb
push
mov
aam
aaa
aam
or
sahf
pushf
ds
mov
lret
js
push
jbe
out
sub
mov
jle
aam
jo
gs
and
cmpsl
jns
mov
int3
add
pop
lods
adc
testl
lds
push
cmp
inc
cld
cmpsl
ja
cmp
cmp
mov
xor
and
gs
jbe
fadds
andl
addl
cmpsl
mov
dec
fldt
gs
dec
insb
movups
jae
loop
out
mov
stos
pop
pop
dec
jo
scas
hlt
or
mov
and
fldenv
jp
mov
popa
aad
inc
cwtl
jmp
pop
fwait
repz
subl
mov
jp
mov
addr16
mov
aas
test
mov
daa
xlat
add
sub
or
xchg
mov
pop
pushf
cmp
rclb
xchg
push
sbb
add
mov
vmovd
lea
sbb
jns
xchg
hlt
push
push
mov
movsl
in
dec
bound
sbb
lret
call
js
out
dec
mov
out
popf
add
mov
fnstsw
inc
sub
mov
in
mov
sub
into
adc
mov
xchg
jle
mov
je
outsl
mov
test
pop
mov
mov
iret
rclb
fst
inc
sub
sbb
or
and
mov
sub
cmp
repnz
call
xchg
push
push
push
xchg
addr16
sbb
leave
mov
out
jb
addl
test
mov
add
fisttpl
scas
mov
push
ja
adc
std
scas
and
push
ror
test
jle
mov
sub
xchg
xor
and
adc
int3
cltd
inc
cmc
add
add
out
rorl
push
cltd
jge
xorl
icebp
pop
cmpsl
les
stos
mov
popa
dec
xchg
push
pop
orl
imul
lcall
jle
scas
lahf
nop
js
fisubrl
fnsave
jb
and
insl
out
pushf
loopne
dec
add
and
fdivrp
dec
xchg
pop
push
dec
nop
inc
or
lcall
jmp
js
popa
pop
or
adc
out
fmull
out
sub
rcrb
out
jmp
xchg
rol
and
mov
push
int3
aaa
cltd
mov
push
inc
and
test
lods
jnp
icebp
enter
ja
push
lods
xchg
add
aaa
es
sbb
push
mov
in
push
pop
shl
xchg
cmp
dec
cwtl
inc
jne,pt
jns
sub
iret
add
in
test
and
mulb
dec
mov
pop
lds
ret
mov
xchg
sbb
loop
cmc
mov
fldcw
xchg
sub
jmp
enter
dec
add
test
inc
pop
aaa
sub
loop
subl
cmpl
lock
push
and
enter
js
sets
dec
into
inc
imul
pushf
cwtl
cli
dec
icebp
movsl
pop
adc
and
ficoms
push
psrlq
lret
aad
int
loop
adc
pop
pop
jmp
cmp
imul
in
sub
stc
xchg
inc
jmp
aam
into
inc
aas
mov
in
int
jl
mov
addr16
xchg
pop
sbb
mov
sbb
out
jo
inc
mov
les
pop
rorb
push
incl
pop
out
test
out
sbb
sbb
test
add
fistpl
sbbl
pop
push
dec
pop
mov
push
imul
je
scas
bound
hlt
pop
mov
pop
jg
in
cld
sub
or
aaa
sbb
lock
cld
pop
sbb
aaa
and
decl
mov
mov
gs
stos
ret
clc
stos
and
add
cmpsl
stos
dec
insb
and
daa
outsl
rorl
mov
aam
inc
xor
sub
mov
loope
shrb
hlt
movsl
std
lcall
arpl
mov
orb
adc
adc
mov
enter
xchg
andl
ret
push
push
add
adc
or
sbb
mov
dec
jno
shrl
rcl
jle
gs
dec
das
stos
cmp
pop
scas
jns
sub
inc
pop
in
mov
cmp
dec
pop
dec
test
jns
cmpsl
or
repz
je
inc
mov
rcll
das
cmp
out
hlt
cmc
mov
inc
inc
jno
xchg
imul
lds
cmp
stos
arpl
ss
or
lock
pop
inc
mov
fists
into
sub
sub
adc
dec
push
xor
movsb
cmp
push
hlt
stos
pop
shlb
cmpsb
negl
addr16
hlt
jb
pop
loopne
jl
out
xor
mov
xor
and
mov
or
aas
fnstsw
sub
cltd
mov
adc
add
enter
mov
fsubl
mov
adc
out
divl
fsubrl
mov
movsl
mov
daa
aas
mov
ret
lea
adc
pop
or
pop
dec
cltd
dec
in
call
in
adc
mov
popa
push
setl
stc
out
and
stc
mov
pop
jo
scas
lret
or
pop
lahf
lret
add
or
lret
mov
mov
hlt
xlat
dec
inc
pop
lcall
fmulp
push
pop
cmp
dec
sbb
repnz
movsb
xor
jnp
xor
xor
inc
addl
scas
mov
shll
lods
xchg
int
jnp
test
scas
je
ja
lods
push
pop
xor
and
jno
mov
ret
pop
cld
sbb
repnz
cs
xchg
and
cmp
mov
fwait
push
jecxz
push
testl
or
cmp
xor
loope
int
or
jg
mov
mov
push
xor
jb
lods
and
xor
cmp
cmp
adc
xchg
mov
dec
lahf
mov
mov
test
mov
adc
test
or
mov
and
push
push
add
test
repz
xchg
or
andl
stos
orb
xchg
popf
insb
icebp
adc
ljmp
mov
leave
jno
fistl
adc
or
xlat
stc
int
mov
insl
pop
adc
movsb
fsubrl
push
add
cmc
imul
mov
push
mov
lret
mov
mov
cmp
fdiv
leave
mov
add
push
mov
xchg
cmpsb
mov
sbb
inc
adc
adc
in
mov
adcb
push
jne
insl
cmp
xchg
mov
xchg
icebp
mov
adc
les
into
mov
sbb
loopne
jl
insb
repnz
ret
fs
fdivrl
fs
add
sahf
js
mov
push
inc
push
rolb
jae
lea
loope
cwtl
fs
jb
popf
mov
in
fnstcw
std
lahf
and
call
cmpsl
push
stc
aad
adc
arpl
mov
sbb
movsb
push
or
jno
jp
mov
pop
fdivrs
xchg
in
and
mov
clc
loop
insl
scas
mov
mov
push
adc
push
mov
hlt
push
lgs
je
or
mov
mov
aad
add
ficomps
jmp
jge
pusha
push
daa
push
mov
jo
dec
mov
add
adc
push
pop
push
jg
ret
mov
js
cmp
insb
out
fcomps
repz
iret
sub
jbe
fstpt
push
aad
nop
nop
jge
mov
dec
data16
cli
pop
stos
mov
mov
push
xchg
and
daa
xchg
xchg
data16
mov
repnz
shrl
cs
add
sbb
sbb
xor
lods
das
cmp
nop
lahf
or
pop
adc
xchg
and
pop
add
adc
xchg
sbb
pop
push
xor
rorl
jp
fadds
adc
push
or
jnp
int
imul
adc
adc
or
fbstp
fnstenv
fsubrl
pop
cmpsb
iret
cmp
or
mov
dec
fidivrs
xor
sarb
mov
sbb
insl
xor
add
jp
in
pop
and
mov
add
adc
das
movsl
cli
push
mov
repnz
in
cld
push
cmpsl
dec
sbb
or
sbb
js
je
jno
ror
rcl
std
push
cwtl
pop
mov
mov
cmp
xor
mov
jl
xchg
rol
or
ds
sbb
rcr
ret
hlt
pop
push
xor
dec
cmc
add
sbb
xor
js
bound
in
or
inc
iret
clc
add
add
xchg
cmp
loop
push
nop
cmp
pop
pop
mov
loopne
pop
add
jbe
les
dec
fsubp
push
das
in
sti
inc
fistpll
into
or
rcll
mov
in
cmpl
decl
xor
jmp
or
dec
lds
or
insb
rcrl
fstps
dec
shl
jle
xchg
sti
test
adc
aam
mov
out
inc
xchg
xchg
std
xchg
jns
push
into
or
pop
mov
and
cld
sub
inc
jmp
mov
imul
aam
out
xchg
jb
pop
mov
popa
into
aaa
aas
fdivl
sti
leave
dec
das
dec
hlt
dec
bound
das
inc
daa
mov
test
es
ja
lea
or
mov
mov
push
mov
in
adc
nop
ret
xchg
fs
fsts
jge
cmp
jge
mov
push
or
mov
leave
mov
cmp
inc
mov
nop
jne
push
pop
xlat
mov
or
insl
hlt
xor
insl
push
cmp
sti
scas
xchg
pushl
and
jecxz
push
je
cld
bound
aad
hlt
lcall
out
and
add
jmp
aad
cltd
adc
jno
lahf
jbe
push
dec
inc
jl
fcomps
arpl
sub
lods
les
push
outsl
pop
jne
jno
sarl
mov
mov
stos
push
out
sbb
popa
mov
xor
xchg
fcomi
or
cwtl
or
insb
lods
aam
add
lret
popa
add
aaa
je
xchg
clc
xchg
xchg
jno
mov
lret
sarl
xlat
add
sub
pop
mov
imul
movb
dec
and
cmp
jge
loope
test
mov
jns
dec
xorl
mov
shrl
mov
clc
mov
stos
sbb
jle
fs
shl
sub
fidivrs
jmp
sarl
fiaddl
inc
into
adc
adc
pop
inc
out
xor
dec
data16
mov
icebp
jle
sbb
insb
mov
enter
add
dec
xor
mov
cmpsb
xor
xor
pop
jmp
pop
xor
cwtl
and
pop
fs
and
or
mov
out
nop
fs
mov
int
dec
ds
in
rclb
pop
ret
rcrb
jecxz
push
or
pop
and
cmp
pop
lods
pushf
fwait
xchg
out
sub
mov
pop
sub
sbb
cmpsb
lea
pop
mov
jb
cli
jecxz
push
hlt
mov
outsb
cmc
lcall
stos
out
xchg
xchg
fwait
add
pop
arpl
mov
inc
aaa
rcrl
out
mov
out
sub
mov
es
loope
xchg
jno
sti
dec
lock
nop
rcrl
adc
and
sbb
fstps
or
push
jnp
test
jl
sub
sub
adc
cs
int3
sub
outsl
xchg
cmp
subb
js
lret
xor
mov
or
jb
cmpsb
or
cmp
pop
lods
js
mov
fnstenv
and
jns
clc
lods
sti
jb
arpl
sub
sub
jae
xchg
mov
test
fidivl
mov
adc
sbb
adcb
outsb
aad
test
std
pop
xchg
adc
repnz
add
out
xor
fcomp
iret
mov
lods
lods
pop
lret
mov
cmp
loop
or
inc
fisttps
jmp
shlb
ficoms
sbb
lea
daa
ljmp
inc
mov
cs
pop
inc
mov
lahf
push
xchg
push
sarb
inc
daa
xor
adc
enter
es
test
fimuls
xor
call
ljmp
ret
xor
shlb
bnd
shll
dec
cmp
sub
arpl
push
and
int3
mov
cmp
pop
push
adc
pop
push
out
movsl
dec
jne
lcall
loopne
mov
and
shld
dec
push
inc
mov
bound
enter
cmp
mov
enter
lahf
jo
adc
mov
test
mov
push
pop
rcrb
push
jnp
mov
insb
aas
repnz
lods
pop
mov
push
int3
ret
inc
shr
add
in
pop
sbb
jae
xchg
shl
mov
aad
pop
loopne
mov
jo
inc
fnstcw
shr
mov
jecxz
xor
mov
sub
inc
inc
jl
mov
sub
pop
mov
push
mov
orl
test
xchg
fldenv
sub
or
lea
stos
or
gs
stos
lahf
xor
movsl
cwtl
cmp
xchg
std
mov
popf
enter
lds
push
int3
cmc
inc
sahf
add
cmp
call
ret
ja
call
xor
xchg
push
mov
xchg
aas
sub
pop
loopne
sbb
shl
imul
mov
fsubl
push
sub
push
flds
das
dec
fadds
popa
cs
inc
js
icebp
test
mov
jge
arpl
mov
sbb
outsb
mov
out
lahf
jge
cmp
dec
jns
dec
or
fwait
push
add
ss
push
mov
scas
and
pop
lahf
xor
aam
nop
ja
push
and
insb
inc
out
lahf
ljmp
enter
pop
cld
fxch
push
bound
xchg
push
sub
push
and
sub
outsb
test
sbb
arpl
js
cmc
lcall
popa
mov
mov
repnz
push
cmp
cltd
das
or
jbe
xchg
test
mov
cmpsl
jmp
jp
ret
push
test
imul
dec
and
and
not
sub
popa
lret
mov
sahf
and
and
inc
cmp
sub
ret
rol
ds
int
fldl
add
sub
jnp
dec
xor
inc
mov
cmpl
lret
je
mov
les
jg
hlt
mov
mov
int
fsub
add
push
pop
fldcw
dec
jle
cld
sbb
repz
pop
insl
call
pop
test
cmc
sbbl
xor
xor
push
fistps
pop
aam
cmp
mov
jg
loope
push
or
inc
ret
jmp
lret
xor
xchg
enter
dec
pop
test
es
add
push
jl
xchg
addr16
shl
cmp
add
sbb
xchg
out
xchg
jae
inc
sub
addr16
mov
pop
xchg
cmp
nop
add
sub
push
dec
adc
pop
sahf
and
add
pop
mov
vorps
clc
and
and
js
mov
xor
jecxz
or
push
mov
in
int3
nop
pushf
leave
mov
pusha
in
in
in
in
outsl
jbe
or
sbb
xor
mov
test
roll
or
sub
or
cmp
mulb
fwait
xchg
es
shlb
pop
daa
xor
lock
pop
popa
mov
xorb
shrl
sub
dec
lret
sbb
decl
ja
xchg
aad
dec
aam
popa
jle
leave
adc
movsl
sti
push
subl
in
jo
push
repnz
loope
pop
cmp
adc
sub
bound
jle
pop
ret
sarb
xchg
notb
jae
sub
jmp
mov
jne
mov
fidivs
popa
out
lea
in
mov
icebp
sub
mov
lcall
repz
nop
addr16
sub
lret
lret
repz
in
movsb
jbe
mov
scas
call
sbb
mov
add
outsb
int
leave
xchg
push
bound
jbe
sbb
imul
mov
sti
imul
xor
andl
add
ja
xchg
or
adc
addr16
push
sbb
lods
lods
push
icebp
or
cmp
mov
js
in
push
ror
das
orb
mov
insb
xchg
add
cmp
mov
popf
pop
out
inc
add
lds
mov
std
cmp
clc
fsubrs
jo
cmp
pop
aas
mov
es
lret
hlt
shlb
mov
ds
add
cmp
int3
movsl
xchg
mov
imul
imull
mov
sub
push
clc
rorb
test
jbe
lret
pop
out
popl
aaa
mov
xchg
lock
mov
cmpb
mov
sbb
mov
fsubp
es
rolb
or
push
jb
or
push
test
in
arpl
jbe
adc
fsubrl
fs
push
sbb
mov
inc
adc
out
xor
xor
push
int3
sub
inc
mov
adc
scas
rclb
adc
xchg
jb
movsb
push
popf
xor
ret
test
jp
lock
outsb
lods
or
ret
xlat
dec
push
je
subl
sbb
sahf
cmp
divl
jmp
in
xor
dec
mov
movsb
cltd
lods
repz
add
sbb
fcomi
sub
mov
fistps
push
cld
nop
in
mov
stos
cli
test
xor
jecxz
xor
addl
jno
and
and
pop
gs
cmpsl
out
movsb
xor
jno
cwtl
dec
sub
xor
lcall
fldt
jae
outsl
pop
jecxz
dec
jg
imul
sub
lret
mov
pusha
inc
pop
pop
add
sbb
pop
jp
mov
mov
push
fisubrs
sahf
sbb
dec
pop
xchg
shrb
or
movsl
sbb
mov
or
call
ljmp
xor
and
shll
pop
sti
jp
inc
sbb
ret
mov
add
rolb
sbb
adc
dec
les
ljmp
cmp
pop
stc
in
mov
xchg
addl
js
and
std
addl
jecxz
hlt
sbb
sbb
pop
loop
das
sahf
xchg
mov
adc
lret
inc
loopne
push
in
adc
jle
das
imul
sti
rcrl
dec
cmp
and
pop
test
cmp
mov
jge
es
add
cld
enter
arpl
lret
rcr
mov
dec
add
cmp
sbb
add
testl
dec
pop
xor
mov
jo
ja
js
sar
stc
mov
sub
f2xm1
adcl
les
aas
inc
aam
inc
push
pop
cs
sbb
jmp
ret
jb
insl
scas
xchg
inc
in
outsb
sahf
mov
out
insb
jl
jg
in
mov
decl
repz
call
push
lds
sub
cmp
mov
imul
fiadds
or
push
jp
in
add
test
jp
lret
fbld
push
mov
shll
and
fistpll
lretw
push
mov
gs
inc
je
xchg
or
ficomps
repnz
imul
es
les
js
inc
sarl
cmpsl
pushf
or
ss
xchg
imul
jae
jns
inc
xchg
sub
fsubrl
push
lret
dec
dec
mov
mulb
xchg
sub
jmp
jecxz
cli
jmp
sbb
popa
jo,pt
popf
iret
xlat
pop
pop
or
aam
push
enter
aaa
sbb
lahf
sarl
mov
scas
inc
outsl
leave
les
push
jo
xor
fsubr
in
movsb
add
jo
inc
jle
sbb
outsl
cmpsl
lods
or
loopne
xchg
insl
fdivrs
mov
add
shrl
xchg
push
xor
inc
js
popa
inc
lcall
push
outsl
fisubs
cld
cmp
pop
or
ret
dec
jne
mov
das
jo
outsl
idivl
cli
js
cmpsb
jp
sbb
add
jb
lahf
push
out
outsb
and
sub
dec
cwtl
push
shl
sbbb
jbe
push
cmpsb
pop
and
or
mov
push
adcl
xchg
js
pop
mov
bound
cli
mov
std
js
mov
dec
testb
andb
cmpsb
lock
jl
push
jg
lods
sub
leave
sbb
mov
xchg
cs
leave
insb
mov
push
add
push
fcomip
aaa
mov
in
xchg
repz
jns
pop
jne
rolb
mov
or
pop
xchg
in
fldenv
lods
fs
mov
lds
imul
gs
test
rcrb
sbb
mov
jg
push
js
lret
or
imulb
xchg
shlb
mov
xchg
fnstenv
inc
push
mov
hlt
sbb
mov
sahf
jnp
mov
idivb
dec
orb
xchg
xor
in
loopne
repz
aam
dec
iret
dec
or
inc
es
xor
in
mov
ret
add
shlb
sbb
pop
sub
sub
fcmovnbe
sub
clc
push
jns
xchg
frstor
out
xchg
push
test
in
jbe
xchg
pop
lcall
bnd
adc
pop
xor
push
jmp
adc
and
pop
push
xchg
mov
rcr
lret
aam
inc
and
fwait
sub
sti
fcmovnu
jmp
repnz
jle
jo
mov
mov
cs
mov
inc
pop
loop
xor
into
xchg
sub
sbb
push
fsubl
jns
test
pop
mov
add
or
jne
jecxz
pop
in
outsb
stos
xlat
rorb
xor
and
xor
push
mov
xor
dec
sbb
shr
add
inc
mov
movsb
adc
loope
pop
mov
cwtl
pushl
pop
int
inc
test
rclb
jno
pop
insb
mov
cmpsb
icebp
int3
fldl
xlat
mov
adc
lret
cmpsb
cmpl
in
sbb
fsubs
pusha
loop
ss
sbb
sbb
leave
dec
das
inc
repnz
cmp
outsl
jo
xor
jnp
popa
mov
lods
in
jg
popf
movsb
dec
fwait
push
int3
adc
leave
in
adc
inc
jae
mov
pop
subl
jmp
xchg
repnz
mov
sub
icebp
xor
inc
fwait
js
mov
scas
or
xor
sbb
inc
iret
xor
mov
dec
aam
loope
test
sbb
jo
ret
leave
pop
inc
fucomp
sbb
jns
jp
movsb
jge
arpl
adc
mov
mov
and
xor
sahf
xchg
loop
movsl
adc
lds
stos
ja
inc
les
movsb
sub
sbb
orb
xor
rorl
pop
out
pop
fsub
test
jl
add
aam
pop
mov
jmp
inc
stc
lea
vmread
adcb
idivb
inc
pop
enter
adc
mov
icebp
push
jp
push
xchg
jae
in
mov
or
out
xor
fidivs
loop
mov
push
out
and
fsubs
bound
add
mov
push
push
ljmp
xor
cs
jo
jge
push
jo
mov
clc
sarl
adc
inc
test
push
or
frstor
adc
adc
mov
push
clc
add
mov
lods
je
insb
lret
pop
fwait
ja
sbb
cmp
outsb
jmp
shrl
lahf
sahf
out
nop
sti
push
xor
cmp
mov
fstpt
cli
or
bound
loop
cli
sub
jbe
loope
add
cltd
and
stos
fwait
sub
int3
in
lods
cmp
and
pop
jge
mov
stos
iret
cmpsl
jg
aam
cmp
dec
xchg
dec
add
into
push
mov
sarb
cmc
andl
jp
ficoml
call
iret
sbb
cmp
imul
cmp
scas
jmp
rcll
pop
mov
add
push
addl
lret
loope
adc
lret
push
add
sti
fcompl
jbe
in
mul
or
out
in
jge
mov
xchg
adc
xchg
pusha
cmpsb
mov
call
and
add
cmp
fisttps
ret
dec
sub
decb
fiadds
out
in
lds
pop
jle
cmc
popf
mov
test
jge
lret
pop
mov
push
in
aad
adc
jne
sbb
xlat
add
mov
je
jecxz
movl
lret
pushf
push
mov
and
dec
hlt
mov
push
pop
pop
push
mov
ljmp
xchg
mov
int3
cltd
stc
xor
add
xchg
in
in
and
mov
das
sbb
xchg
stos
xchg
daa
loop
xor
or
lret
int
mov
push
dec
inc
shrl
push
ret
xlat
jne
fcompl
pop
jae
es
push
xor
xchg
lea
aam
push
dec
cmp
data16
jb
pop
xchg
pop
popa
sarb
gs
inc
jne
sub
pushf
push
outsb
imul
fwait
dec
fldl
imul
xchg
mov
cmp
movsb
or
jns
in
mov
jns
out
addr16
fists
push
xchg
je
pop
mov
popf
mov
test
les
jp
and
xor
inc
sbb
xchg
inc
pop
jecxz
add
push
push
and
loope
dec
cmp
adc
int
lds
cmpsl
aaa
xlat
imul
in
sbb
cli
out
pusha
scas
fldenv
imul
inc
lods
push
lds
das
cmp
sub
mov
pop
jp
fdivrl
push
stos
test
sbb
or
adc
mov
cmc
out
ret
or
mov
cmp
adc
imul
mov
pop
mov
and
aad
jns
popf
jb
xorl
aaa
out
jae
stc
add
mov
push
push
inc
adc
adcb
icebp
mov
jnp
testl
sub
or
mov
jecxz
clc
push
cld
jo
les
sub
sbbl
push
jnp
jmp
outsl
mov
dec
xor
cmpb
test
fmuls
push
cltd
fnsave
aaa
cwtl
and
mov
insl
push
and
adc
xchg
ret
adc
cmp
insb
aam
mov
stc
pushf
in
je
ret
fwait
pop
aam
outsb
jnp
das
pop
push
xor
xor
xchg
inc
nop
pop
sarl
out
sub
and
mov
out
jmp
ret
and
outsb
jbe
sbb
jmp
ret
sub
lret
dec
out
neg
lods
cmp
push
hlt
in
cmp
inc
stc
cmc
lahf
inc
lahf
loop
sub
fucom
mov
inc
subl
xchg
in
push
icebp
xchg
scas
add
nop
outsb
rclb
sbb
ds
aas
sub
repz
fmull
testb
dec
add
pop
roll
sti
sahf
cmc
loopne
jg
inc
loope
sbb
jns
xchg
icebp
js
cld
shll
movsl
lds
cmp
mov
rcr
hlt
adc
add
hlt
fsubrl
cmp
movsl
xor
cmp
adc
mov
repz
insl
jp
stos
xchg
or
or
mov
mov
inc
test
lret
sbb
adc
out
test
lods
adc
mov
inc
aas
rcrb
cmp
in
loop
cmpsl
jle
cmp
jge
imul
push
cmpl
xor
cmp
inc
mov
lret
loop
psadbw
dec
mov
sbb
popa
shrl
sbb
jge
jecxz
arpl
test
push
dec
int3
repnz
jg
push
mov
bound
cmc
cwtl
hlt
pop
jp
mov
push
mov
iret
pop
mov
mov
and
adc
sub
add
add
shrb
imul
mov
push
sub
ret
jae
or
aam
mov
mov
mov
cmp
ret
cltd
fistpll
inc
out
aam
and
daa
cmpsl
xchg
fwait
sarb
hlt
and
add
adc
adc
jp
inc
outsl
add
leave
pop
xchg
gs
fcoms
pop
gs
push
xchg
fcmovb
shrl
dec
xchg
xor
clc
push
sub
xor
mov
ljmp
hlt
mov
fisubrs
jb
pop
cwtl
push
pop
cltd
xchg
xchg
fisubl
and
daa
addr16
sahf
pop
dec
fwait
adc
push
push
xchg
ja
inc
outsb
push
inc
rcrl
lret
inc
push
jno
cmp
imul
into
lret
arpl
cs
insl
and
cwtl
js
jg
movb
mov
movb
clc
jecxz
add
cmp
mov
enter
sub
lret
mov
push
leave
inc
lret
cvtps2pd
out
insb
cmc
push
inc
jg
gs
adc
or
xchg
adc
clc
jle
mov
fisttpl
ret
inc
rorl
push
std
lret
adc
iret
das
jg
jno
sub
xor
push
or
arpl
ljmp
mov
mov
push
call
jns
mov
jp
mov
xchg
add
fsubr
xor
orb
cmpsl
fisttps
push
xor
int
sbb
or
or
stos
jg
loope
decl
sahf
mov
adc
clc
fadds
mov
mov
pop
mov
dec
fldt
push
jge
popa
popf
xlat
mov
xchg
jae
stos
enter
sbb
es
mov
mov
sbb
or
outsl
or
or
cs
adc
adc
mov
jo
fdivs
hlt
das
add
inc
rol
pop
cmpsl
pushf
or
mov
les
mov
pop
out
shlb
pop
pop
push
push
jo
mov
jnp
int3
fucomip
cwtl
imul
xor
dec
mov
stc
insl
gs
incb
adc
or
subl
xor
dec
jge
jbe
jo
xchg
jl
sbb
fsubs
enter
push
loop
pop
icebp
pop
cmp
in
mov
or
push
ret
mov
jns
mov
xchg
or
dec
mov
ja
pop
aas
sub
movl
es
mov
enter
lock
adc
dec
pop
lods
sarl
mov
mov
jmp
mov
dec
xchg
inc
fisttpll
cmp
cmp
mov
scas
out
les
cli
lcall
inc
pushf
sbb
mov
lahf
sbb
in
push
cmpl
test
fistl
adc
lds
mov
addl
push
sub
cmp
lret
sbb
fisttpl
cmp
jbe
mov
and
inc
xor
mov
adc
aad
mov
fs
lret
jo
inc
filds
jno
sub
adc
fdivs
sahf
out
inc
test
test
sahf
or
jns
add
fistpll
xor
ljmp
stos
insl
or
ds
xchg
push
stos
dec
mov
push
inc
jbe
test
jno
mov
jne
shll
push
xchg
insl
loop
sub
es
lret
xor
or
or
movsl
pop
inc
loope
xchg
push
jecxz
test
xchg
dec
sub
in
jmp
mov
push
mov
jp
pushf
pop
xchg
and
lods
jp
lea
cmp
mov
fiadds
and
lods
je
lret
xchg
add
mov
pop
or
add
dec
mov
and
cld
or
std
mov
cltd
jbe
push
test
push
mov
push
imul
cmp
and
rcrl
inc
mov
roll
out
jle
int
iret
andb
mov
cmpl
and
push
sub
jbe
pop
push
lret
dec
cmp
inc
mov
adc
gs
nop
dec
mov
inc
mov
jmp
fwait
push
and
icebp
shr
insb
test
push
ja
pop
scas
adc
xor
nop
push
adc
std
jge
fisubl
iret
cmp
bound
sbb
xchg
popf
add
in
jne
movsl
mov
shlb
and
dec
push
mov
pop
pop
xchg
lret
xchg
and
dec
adc
push
xchg
js
repnz
pop
jp
ret
inc
pop
cmp
xchg
mov
pop
sti
push
push
xchg
pop
inc
lock
into
sub
and
mov
fwait
or
push
ret
cltd
adc
and
or
xlat
push
lcall
pop
or
aas
push
fcoml
and
stos
lds
aad
lahf
pop
mov
test
push
mov
mov
push
pusha
sar
xlat
push
out
pushf
ja,pn
inc
jp
adc
idiv
xor
pop
outsb
pusha
lock
and
lcall
mov
mov
sbb
fcoms
sbb
mov
andb
or
popf
fstp
adc
mov
pop
jmp
mov
dec
jle
pop
xchg
clc
fsubrs
sar
popf
pop
inc
push
add
icebp
fwait
mov
xor
mov
mov
scas
mov
add
cmc
daa
negb
test
dec
xchg
jecxz
hlt
sbb
cmpsb
push
adc
xor
pop
pusha
je
and
ret
pushw
jbe
xchg
mov
cs
inc
es
mov
dec
jo
push
cli
clc
fs
inc
mov
insb
push
pop
dec
shlb
jl
adc
and
ret
cmpsb
cmp
jno
aaa
cmp
lea
sub
mov
push
push
dec
nop
jg
jmp
ds
mov
std
push
orb
push
inc
rorl
test
jge
sub
aam
sbb
bound
xchg
pop
xchg
push
ss
imul
or
outsl
pop
xchg
jl
loope
mov
mov
repnz
push
push
dec
inc
push
lcall
pop
lret
dec
add
fmuls
loopne
je
int
jb
cmpb
out
clc
jo
xlat
dec
aaa
mov
loop
dec
xchg
add
iret
dec
imul
xchg
dec
shl
or
cmp
mov
hlt
mov
sub
rclb
mov
dec
lahf
loop
inc
addr16
scas
push
jmp
mov
mulb
in
inc
es
in
out
xchg
jmp
xchg
sub
mull
xorb
pop
add
push
out
rolb
push
fs
mov
xor
sbb
rclb
sbb
push
dec
push
stos
pop
cmp
adcb
in
dec
loop
into
xchg
cwtl
lret
int
jg
in
mulb
mov
inc
outsl
dec
jecxz
ja
inc
in
sub
mov
xchg
cs
sub
pusha
cs
movsb
mov
les
sub
stc
test
xchg
sub
sub
lock
xchg
push
push
jns
jns
ret
shrb
cmp
fildll
pop
inc
test
es
add
scas
pop
sbb
mov
cmp
movsl
out
hlt
fidivrs
lods
sub
cmp
sahf
jo
push
loope
inc
adcl
lret
adc
cmp
lock
cmp
fstps
inc
scas
cld
inc
mov
imul
movsl
hlt
sub
repz
jg
and
out
mov
mov
ds
inc
imul
daa
popa
mov
movsl
or
ret
jmp
mov
xchg
jmpw
push
sub
xchg
push
sub
cmpsl
jo
imul
or
sahf
shr
jg
mov
subb
mov
mov
xchg
cmp
loopne
mov
dec
loopne
jmp
sub
push
arpl
lods
xchg
fmull
jae
jnp
mov
dec
push
mov
push
push
pop
push
adcb
push
mov
mov
dec
adc
adc
sub
mov
subl
pop
jnp
sub
xchg
xchg
xchg
adc
jle
xlat
add
jecxz
cmp
add
out
sbb
adc
cmpsb
aam
ljmp
inc
adc
ret
lea
filds
and
out
movsb
repz
adc
scas
adc
out
cmp
notl
push
dec
data16
cmp
sbb
sub
xchg
mov
xor
push
insb
pop
or
inc
lret
sub
pusha
push
fldcw
dec
cmc
subl
dec
mov
xor
fsubp
mov
adc
cmp
xor
arpl
rol
and
cmp
cli
imul
test
push
mov
das
repnz
push
add
add
insb
sbb
mov
or
pop
add
and
jmp
xchg
icebp
call
cwtl
xor
cmp
mov
leave
jl
jne
mov
push
mov
nop
adcb
push
or
out
shll
cmc
out
xor
jmp
pop
pusha
pop
pop
cli
adc
pop
mov
push
mov
sti
pop
dec
adc
aaa
mov
addr16
jmp
adc
insl
dec
xchg
fprem
inc
mov
stos
jle
sbb
fcoms
sbb
jne
ds
sub
lods
repz
sbb
adc
sub
xchg
test
sub
pop
int
rclb
aad
sbb
jae
and
jecxz
pop
sbb
sahf
sub
jb
mov
dec
lods
inc
sbb
shl
in
inc
mov
inc
xchg
mov
push
sub
or
sbb
dec
inc
outsb
or
ja
add
lret
rcrb
inc
push
std
mov
adc
scas
jge
stos
inc
dec
push
inc
daa
xor
repz
add
cmc
pop
jne
cltd
mov
sub
push
and
or
lds
sub
icebp
rorb
int3
dec
mov
xor
js
push
add
adc
ss
sarb
add
or
mov
add
mov
pop
daa
rclb
add
or
out
lahf
int3
in
mov
jge
scas
je
mov
xchg
test
sbb
cltd
dec
imulb
and
sub
ljmp
xor
sahf
jmp
sahf
es
icebp
cmpl
mov
movsl
push
std
jae
mov
push
test
sti
sbb
ss
gs
pop
inc
imul
or
sahf
in
mov
addb
ret
or
xor
jns
dec
inc
push
push
cmpsb
hlt
sub
sarb
push
ss
mov
pop
inc
push
daa
pop
out
sub
cmp
sub
inc
call
fwait
push
dec
subb
clc
jo
mov
ret
push
pop
mov
pop
insb
fstpt
enter
ror
cli
jmp
movsb
outsl
xchg
adc
push
or
leave
stc
mov
stc
dec
push
in
js
imull
test
imul
inc
mov
bound
xchg
pop
rcrb
and
bswap
pop
push
in
fdivrs
and
movb
fistl
or
dec
lret
lahf
sbb
dec
xchg
add
mov
sbb
push
cbtw
push
testb
jecxz
jmp
jnp
add
push
xlat
mov
sbb
sar
in
xchg
stos
enter
test
pushf
ljmp
les
mov
pushf
lahf
bound
ja
lcall
cmp
mov
shlb
arpl
call
xchg
dec
push
fdivr
lods
lcall
mov
mov
dec
mov
xchg
push
jmp
test
fs
mov
imul
jl
dec
push
lods
mov
cli
mov
in
mov
je
push
mov
test
mov
mov
insb
dec
xchg
sarl
ljmp
and
xor
and
jb
repz
and
addb
mov
mov
mov
shlw
mov
leave
pop
out
fadds
pop
add
push
int3
mov
loop
lcall
andl
int3
mov
scas
mov
mov
int
add
mov
jnp
in
scas
subl
pcmpgtb
cmp
xor
jp
dec
testl
mov
dec
daa
pusha
cwtl
mov
imul
loopne
imul
fldl
shll
mov
push
add
loope
leave
ret
sti
js
setae
xor
call
aas
push
sbb
pop
ja
add
idivl
nop
push
pop
mov
xor
ffreep
out
arpl
inc
or
xchg
lahf
jle
or
loopne
sub
adc
pop
pop
cmp
movsl
cmp
pop
cmp
xor
and
adc
push
xchg
jns
jmp
insb
aad
sti
and
clc
xor
pop
popf
jnp
lock
push
cltd
andb
or
push
push
jl
jnp
adc
xchg
cld
sub
sbb
out
imul
ja
loopne
dec
cs
into
cmp
jae
jecxz
nop
xorb
popf
mov
test
jbe
cmc
adc
push
lods
inc
xchg
mov
scas
push
fsubr
mov
pop
sbb
add
mov
and
daa
xchg
cmpsl
lret
in
das
fdivs
pop
pop
xchg
mov
ds
sub
into
mov
and
cmc
jg
or
stos
adcl
rcl
jp
ds
bound
pop
in
pop
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
test
xlat
mov
test
sub
lods
cmp
loop
loop
pop
clc
pop
sub
sti
inc
loopne
push
mov
pushf
sub
adc
or
lahf
and
mov
sub
ds
imul
or
divl
pop
ror
pop
jo
pop
cmp
outsl
jae
mov
jnp
je
loopne
xor
sbb
shll
mul
or
xchg
push
adc
insb
or
int3
mov
lahf
and
push
fldt
mov
sbb
xchg
cmp
int3
and
lahf
andl
mov
xchg
test
cltd
js
xchg
jb
dec
addl
and
xchg
ror
push
dec
std
out
fiaddl
gs
out
out
jmp
jbe
and
jl
ljmp
pop
add
out
jp
outsb
stc
push
mov
jl
aad
mov
cld
xchg
and
ds
lds
out
add
jb
lcall
mov
test
rcl
rorb
cbtw
cmp
push
xchg
inc
pop
adc
or
jne
inc
xorb
mov
sbb
aas
dec
push
and
mov
cli
cmp
sti
movsl
mov
or
adc
outsb
in
push
leave
mov
add
push
sbb
in
addr16
sti
dec
xor
cmp
sahf
pop
lea
pop
fstpl
mov
mov
sub
mov
mov
faddp
dec
mov
ror
daa
sub
cmp
xlat
jmp
or
gs
lods
or
adc
nop
ja
or
out
in
sarb
cmp
sub
push
mov
movsl
dec
adc
shl
pusha
aas
fcompl
sub
icebp
insl
push
cmp
jae
pop
int3
mulb
cli
inc
test
test
daa
xor
or
outsl
test
std
and
std
pop
loope
xor
xchg
jmp
inc
cmp
jp
lret
out
cwtl
mov
mov
rorb
jecxz
cli
test
js
inc
jp
divb
mov
in
cmc
sti
shrl
and
or
sub
pop
mov
imul
push
mov
les
lahf
xor
jo
lcall
cli
mov
out
insl
sbb
mov
jne
mov
push
push
movsl
aam
test
mov
pop
fdecstp
cs
enter
outsb
mov
push
imul
test
mov
cmpsl
jns
push
lcall
mov
jmp
and
xor
jmp
mov
shr
sbb
jns
out
add
sbb
pop
xor
push
cltd
addr16
mov
and
enter
xor
mov
xlat
test
inc
xor
mov
in
mov
pop
or
mov
push
inc
lods
sbb
dec
mov
cli
mov
xor
or
push
lret
jo
mov
push
push
or
dec
hlt
and
inc
and
repnz
xchg
or
call
push
jp
cmpsb
popf
adc
ja
psllq
subb
js
stos
or
mov
mov
mov
pusha
cld
jmp
ret
js
dec
push
adc
movsb
rcrb
and
in
xor
cmp
xor
mov
andl
movsb
inc
jg
jns
xor
psllw
xlat
imul
xchg
fwait
jge
loope
jbe
enter
sahf
jo
cmp
dec
or
or
outsl
mov
test
fidivrs
push
jge
dec
out
aad
int
mov
repz
shrl
push
test
loope
pop
mov
mov
sub
aas
lods
adc
lds
addr16
mov
lahf
lods
inc
pop
push
clc
xchg
xchg
mov
pop
mov
call
outsl
pop
mov
shlb
mov
xor
or
mov
mov
mov
dec
xor
call
lods
lret
movsl
mov
ds
xorb
int
mov
mov
xor
push
js
dec
jnp
movsb
dec
popa
mov
pop
js
lret
ds
call
cmc
add
or
lahf
and
outsl
lea
rcr
inc
loope
outsl
push
push
std
ss
xchg
frstor
add
stc
and
clc
mov
sub
sbb
clc
shr
sub
fimuls
add
scas
fidivs
inc
orl
movl
popa
out
xorl
lret
hlt
fs
and
inc
push
stc
popa
gs
mov
arpl
jmp
push
cld
inc
add
xor
adc
cmpl
test
je
imul
cmpl
pop
lea
nop
mov
ss
adc
add
ds
push
sub
shrb
insb
or
xor
testb
ret
cmpsb
loope
fldcw
jnp
jge
fisttpl
aaa
scas
out
or
in
add
cmp
outsb
cmc
sub
dec
dec
mov
cwtl
sbb
daa
pop
fs
das
xchg
dec
mov
and
je
add
sbb
ret
in
and
jecxz
and
push
arpl
jl
outsl
imul
jo
mov
out
imul
add
mov
in
xchg
jae
je
xorl
jae
iret
in
andl
pop
jl
clc
imul
push
dec
mov
in
in
mov
data16
cmpsb
xor
aas
pop
mov
fdivl
xor
jmp
push
in
lods
fcmovu
lret
mov
leave
xor
xchg
hlt
test
call
cmp
fadds
mov
sbbl
bound
mov
lcall
sub
shll
subl
stc
scas
pop
or
test
mov
inc
ret
subl
push
push
divl
push
jo
scas
or
xorl
xchg
ret
push
cmpsb
adc
mov
mov
movsb
cmpsl
pop
sub
dec
mov
xor
pop
push
xchg
test
xchg
dec
mov
incb
add
mov
in
repnz
mov
stos
mov
pop
dec
add
xchg
jle
xor
push
aas
popf
cld
lds
lret
jmp
push
sarb
pop
mov
inc
test
add
sub
scas
repz
je
cli
gs
cmp
inc
loop
jle
int
cli
sub
mov
ljmp
lea
jle
mov
add
mov
outsb
popa
fwait
cmp
push
sub
xchg
and
push
xchg
arpl
add
aam
repz
dec
dec
push
test
xor
add
fcoml
into
mov
test
push
fxch
pop
or
cli
mov
pop
mov
mov
test
inc
mov
dec
testb
enter
push
out
mov
test
aam
test
mov
mov
fildl
into
lods
jecxz
or
and
and
fisttps
fnsave
ss
arpl
inc
iret
imul
xchg
incl
sub
jg
add
outsb
int3
add
xlat
gs
popf
roll
mov
pop
lds
hlt
fld
cmp
aad
subl
clc
nop
aad
jb
pop
lods
scas
jg
aas
jb
inc
shl
lods
stc
jne
test
mov
push
mov
and
insl
mov
cwtl
push
arpl
je
mov
and
inc
inc
and
mov
xor
adc
dec
xacquire
rorl
lea
or
arpl
xor
push
push
mov
shr
xchg
dec
push
or
mov
and
sub
xchg
cltd
mov
add
call
daa
insl
lock
inc
mov
pop
jg
or
gs
jge
jecxz
aam
into
mov
in
je
sub
scas
lcall
mov
ss
jp
in
mov
adc
mov
jp
mov
fs
cld
fs
pop
call
jecxz
xor
lock
mov
stos
icebp
jg
loopne
scas
aaa
fisttpl
les
add
aad
mov
lret
push
imul
out
add
xchg
dec
pop
push
add
popf
inc
popf
stos
out
mov
imul
loop
rol
lds
cld
lock
push
cmp
cmp
out
imul
cld
inc
test
fnsave
and
call
popf
sbb
das
and
std
or
out
mov
in
push
cmpsl
cmp
stc
je
outsl
insb
out
mov
push
mov
xorb
mov
inc
or
xor
mov
xorb
xor
ret
testb
push
xchg
in
shll
mov
inc
fcoml
loop
mov
je
xor
fsts
push
faddl
movsb
sbb
in
imul
pusha
std
dec
mov
lret
sub
and
jge
mov
pushf
jae
or
inc
stos
push
sbb
incl
xor
mov
push
lcall
idivl
dec
xchg
cmpsb
std
ret
and
addb
out
add
fnstcw
cmp
mov
push
push
push
sbbl
xor
mov
mov
cs
mov
lret
push
mov
andb
add
lahf
sbb
lret
shr
lcall
outsb
sbb
ljmp
stos
pop
push
rcr
inc
pushf
fs
or
lcall
scas
push
imul
and
xchg
pop
push
adcb
subb
sbb
aaa
into
sbbb
mov
test
and
sub
sub
mov
dec
sub
mov
mov
adc
movsb
xchg
mov
daa
int
or
sahf
mov
push
fsubrl
test
xor
adc
stc
lret
push
xchg
arpl
push
sub
and
inc
sahf
int
das
jge
cld
xorb
loop
lock
push
sbb
mov
xor
mov
push
push
mov
xor
popf
test
imul
stos
cwtl
mov
sbb
pop
pusha
mov
push
inc
push
sbb
ja
jle
cmc
js
push
adc
movsl
fcoml
xor
or
fnstsw
sti
fmull
in
int3
outsl
and
shrl
pop
call
cwtl
or
sarl
outsl
or
notb
lea
inc
jl
and
jmp
mov
add
xchg
clc
or
sbb
lods
dec
ja
dec
sbb
mov
sbb
cmp
xchg
dec
pop
cmp
inc
adc
in
sbb
ret
mov
aad
push
sbb
js
xor
sub
loop
jns
jp
imul
cmp
pop
mov
inc
mov
test
repz
cmpsb
and
xor
sbb
popa
cwtl
dec
lea
das
movsb
push
push
shll
mov
ja
push
fstpl
push
fwait
pop
push
pop
fisttpll
mov
int3
clc
xchg
cmpsl
sbb
mov
mov
outsb
mov
insb
insb
sbb
test
outsb
cmc
xchg
xchg
lcall
xchg
dec
leave
nop
mov
test
sti
test
jae
aas
sub
fwait
push
sahf
rolb
insl
adc
adc
jge
loope
out
rclb
fdivl
jns
mov
out
inc
add
pop
push
imul
and
fidivs
sbb
inc
cmp
cmpl
cld
jge
sbb
popa
mov
sbb
push
shrb
aas
push
pop
and
xchg
mov
mov
cmp
sbb
and
dec
cli
mov
dec
insb
cmc
out
cmp
incl
xor
cmp
sub
xchg
std
push
xor
inc
call
xchg
call
pop
jp
aad
out
int3
inc
push
jmp
cmp
push
nop
test
pop
jae
imul
adc
aas
xor
sbb
xchg
in
ljmp
adc
cltd
xchg
std
ja
in
xchg
xor
mov
fiaddl
je
pcmpgtb
repz
dec
xlat
mov
nop
and
fidivl
xor
clc
and
aas
or
pop
dec
pop
out
dec
pop
sti
push
mov
insl
insb
cwtl
inc
dec
outsb
push
or
shlb
mov
mov
int3
sub
xor
imul
mov
insb
adc
mov
mov
repnz
pop
add
insl
jne
setns
add
cmp
mov
xchg
movsb
mov
js
outsb
sub
mov
mov
and
and
jo
sbb
push
lcall
arpl
mull
enter
cmp
push
adc
insb
jecxz
jne
insl
fucomp
loopne
or
jb
pusha
dec
push
mov
sbbb
das
sti
loopne
and
cmp
xchg
pop
cmpsl
test
jp
and
jno
imul
dec
xchg
faddl
add
pop
inc
sbb
fbstp
mov
leave
shrb
xor
mov
out
pop
jns
or
pop
testb
in
repnz
mov
pop
test
pop
mov
mov
sarb
cltd
jge
inc
popa
scas
inc
add
in
and
clc
push
sub
pop
jno
push
leave
jb
in
sti
int3
jl
adc
sub
shlb
mov
rcrb
jle
clc
pop
pushf
arpl
dec
jmp
adc
mov
test
or
cmp
push
pop
in
pusha
push
ror
adc
inc
dec
jecxz
test
mov
cmp
jne
stc
jns
loop
xchg
mov
outsb
clc
and
inc
stos
iret
jle
xchg
scas
mov
or
adc
dec
stos
jecxz
mov
inc
icebp
sub
push
shrl
pop
es
hlt
rcll
jl
mov
push
ret
aam
sub
jp
outsb
sbb
scas
dec
int3
and
mull
pop
push
xchg
je
outsb
mov
xchg
cmpsl
push
add
mov
xor
pop
mov
cld
pop
leave
pop
xor
push
call
vshufps
xchg
mov
cli
out
mov
hlt
cmc
adc
leave
mov
or
xchg
xor
adc
test
or
data16
fildll
jl
mov
xor
pop
lea
xor
mov
mov
mov
jmp
mov
sbb
xchg
sub
loope
cltd
xchg
stc
hlt
add
push
aam
dec
push
shrb
sahf
movsl
ljmp
add
jo
push
test
iret
jne
movsb
hlt
fucom
push
or
aaa
in
pop
icebp
push
movl
popf
sub
int3
or
mov
push
insl
inc
add
nop
lahf
ss
inc
rorl
xchg
jbe
jns
mov
mov
cs
stos
xor
cmp
push
lods
cmp
ds
jmp
pause
stos
adc
ja
dec
jge
outsl
leave
xor
faddl
adc
imul
shl
jmp
mov
loop
hlt
fsubr
imul
mov
in
call
adc
mov
jge
hlt
sub
xchg
repnz
xor
and
jno
inc
leave
add
mov
sahf
xchg
mov
dec
ss
sub
mov
pop
test
lods
push
pop
pcmpgtb
xor
xlat
lret
mov
into
daa
adc
cmpsl
sub
sbbb
dec
stos
rolb
test
jb
push
pop
and
or
call
mov
les
into
ljmp
test
and
fsubrs
pushf
notb
push
xchg
inc
jl
cltd
addr16
xchg
ret
xchg
pop
out
add
lcall
push
jge
mov
adc
ret
mov
ror
xchg
aaa
or
push
aas
xor
jg
repnz
jmp
pop
addr16
repnz
lret
jne
cmp
dec
mov
insl
add
daa
fldl
sub
subl
jbe
test
xchg
xor
mov
pop
mov
loop
jg
cmp
daa
int
mov
xor
rorl
nop
cmp
test
stos
xor
cmp
call
mov
mov
and
xchg
pop
cltd
hlt
sbb
add
les
cmp
lahf
nop
inc
push
fimull
loopne
xor
data16
outsl
push
fstl
mov
mov
orb
or
lret
sub
xchg
sbb
push
or
addr16
or
fxch
push
lods
or
or
fists
mov
and
push
hlt
pop
mov
aaa
mov
pop
aas
sub
adc
hlt
fistpll
cmpb
cmpsb
xchg
pop
push
dec
sbb
jle
mov
mov
popf
mov
jle
xor
push
and
popa
adc
lds
lahf
mov
lea
loope
jb
cmp
lds
inc
sahf
repz
and
mov
and
xchg
popa
or
dec
aaa
and
push
in
test
jnp
insl
xor
nop
and
and
push
jo
mov
fimull
sarl
xchg
sbb
das
pusha
or
data16
test
push
ds
jne
insb
mov
jno
mov
xor
shl
and
outsb
and
insl
mul
xchg
push
imul
mov
ds
stos
fwait
xchg
xor
dec
sbb
xchg
cmp
inc
sub
mov
mov
in
xchg
leave
shl
push
inc
lahf
sbb
lahf
pop
sarl
ret
sub
or
test
stos
or
adc
cld
lcall
int3
paddw
jbe
fdivrs
arpl
push
cmpl
std
mov
lret
mov
rcll
jns
aas
mov
in
push
and
dec
andl
sbb
call
sub
fsubr
xor
jmp
and
out
testb
adc
push
sarb
insb
cltd
xlat
inc
loopne
fldl
je
xlat
repz
movsb
and
movsl
loop
cmp
in
fiadds
mov
insb
std
and
jmp
lret
mov
xor
mov
stos
fiaddl
fidivl
and
xor
and
sub
out
dec
ja
add
jne
jns
in
enter
in
bound
inc
jae
push
xchg
inc
adc
add
jo
je
adc
mov
je
ret
sub
in
dec
test
or
lds
sbb
enter
sbb
xchg
in
inc
aaa
fs
or
xor
mov
push
adc
adc
and
icebp
add
icebp
xchg
mov
inc
repz
iret
jb
jns
pop
arpl
bound
lods
pop
inc
lret
adc
pop
mov
out
test
jno
neg
cmp
sbb
jo
mov
fcmovnu
jg
nop
sti
mov
push
sub
fisubrl
jl
imul
mov
out
pop
lds
jb
cmp
dec
stos
or
pop
cmpb
andl
roll
scas
jno
pop
pop
data16
or
mov
lods
mov
pop
clc
cmp
loop
xor
jnp
pop
divl
outsb
mov
and
push
inc
mov
sarl
shl
fimuls
test
pushf
cli
frstor
or
sbb
pop
int3
sti
add
sbb
push
daa
jno
xchg
aaa
aaa
jg
sbb
mov
fildl
insb
jp
sbbl
sub
lahf
xlat
xchg
out
push
mov
sbb
imul
jge
or
mov
jns
jge
xlat
popf
dec
mov
movl
cld
push
pop
mov
loope
xchg
push
js
je
je
mov
pop
lcall
jo
test
adc
push
cmp
repnz
and
sub
mov
aas
lods
enter
call
fildl
repnz
dec
cmp
cs
loopne
mov
sub
cli
mov
jae
aaa
and
lahf
xor
adc
pop
scas
sti
sub
in
lret
pop
mov
outsb
daa
daa
lret
in
push
mov
inc
add
pop
test
dec
ds
mull
and
addr16
outsb
mov
insl
mov
sarl
dec
imul
test
sarl
cwtl
and
inc
jmp
adc
sahf
and
sti
sub
adc
repnz
sub
punpckldq
out
pop
sbb
cmp
rcrb
out
lret
adc
push
out
sub
cwtl
add
sti
adc
gs
into
inc
aam
mov
or
into
aaa
lcall
aam
sbb
jb
add
sbb
and
or
mov
add
push
sbb
and
std
jno
fsubr
and
mov
dec
sbb
mov
push
es
sbb
sub
adc
add
lods
cmpb
jg
insl
clc
jge
addr16
sub
dec
stos
fwait
dec
std
out
dec
popa
mov
jbe
mov
add
test
push
adc
pop
mov
popf
jp
ds
pop
gs
mov
fadd
jae
cmpsb
aas
xor
jp
lds
mov
dec
in
xor
js
addr16
pop
decl
cmpb
enter
sub
push
xchg
mov
dec
jmp
es
mov
fcoml
lret
js
pop
jmp
adc
sub
shlb
jg
cs
mov
repz
inc
push
push
fldenv
lret
hlt
dec
mov
enter
add
jbe
aaa
out
cmp
int
ljmp
inc
sbb
inc
enter
iret
xchg
push
insl
xchg
and
out
dec
into
mov
adc
push
pushf
fiaddl
aas
adc
jbe
mov
cmpsb
xchg
jle
mov
movsb
push
bound
leave
jb
jns
lods
out
jnp
mov
movsb
push
mov
imul
xor
jnp
in
push
sub
inc
add
ficoms
dec
mov
or
add
sub
fistps
add
popf
sub
daa
sub
int
mov
mov
sbb
int
and
and
int3
repz
mov
mov
jo
sbb
jmp
mul
jns
mov
xchg
insl
fistps
jns
pop
xchg
pop
adc
inc
aas
dec
stos
xor
inc
out
mov
jge
test
pop
stc
addl
or
fsubrs
jge
insl
or
pop
loope
mov
and
mov
nop
mov
adcb
push
filds
in
daa
cmp
xor
mov
cmc
fcmovu
jmp
stos
pop
sbb
shrl
adc
mov
cltd
cld
lcall
mov
dec
cwtl
jecxz
cs
in
movsb
pop
call
push
fidivs
adcb
clc
dec
mov
cmp
and
sub
or
repnz
in
fwait
js
out
push
and
cmc
or
add
mov
add
or
jl
push
out
rcrb
xor
jl
lcall
popf
adc
lcall
inc
and
add
in
loope
xor
push
dec
std
fcompl
dec
out
hlt
ds
and
popf
loop
jns
push
scas
rol
and
nop
cmp
lret
jns
fldt
pop
push
bound
stos
test
out
ss
roll
rol
int
orl
in
outsl
cmc
push
lods
insl
xchg
sti
fistpl
xchg
adc
lahf
sbbl
xchg
aas
sbb
lods
jge,pn
mov
or
inc
sbb
mov
icebp
inc
cmpsl
and
dec
icebp
ficomps
fs
mov
pop
xchg
mov
aam
fldcw
push
cmp
xchg
jno
and
enter
scas
jge
pop
gs
xchg
mov
xchg
ds
mov
dec
clc
lods
hlt
xchg
fwait
pushf
insl
rclb
push
cs
frstor
xor
out
pushf
jp
roll
stos
pop
xlat
xchg
or
call
les
je
or
loop
js
cmpsb
shlb
cltd
aaa
insl
sbb
push
pop
lock
stos
jns
mov
sbb
mov
xor
or
or
mov
sub
sub
out
in
cmp
ret
adc
add
sub
popw
push
andb
fcmovu
xchg
ss
sbb
loopne
arpl
arpl
fisttpll
insl
lahf
pusha
out
inc
mov
or
pop
mov
int3
sub
inc
and
hlt
daa
sbbl
lea
xchg
mov
mul
push
cmp
dec
es
cld
data16
cmp
dec
xor
leave
aam
lcall
adcb
mov
mov
cmp
popf
dec
jmp
inc
icebp
xor
xchg
push
in
sub
nop
stc
fists
adc
pop
insb
or
mov
ja
into
nop
jp
xorb
xchg
fcmovnb
xchg
dec
ja
hlt
xor
mov
xchg
cmc
leave
popw
imul
mov
jne
jge
pop
aam
cmp
stc
mov
shll
mov
dec
xchg
in
outsb
xchg
das
lea
push
mov
add
cmc
add
cmp
addr16
pop
loop
in
out
xchg
aas
in
enter
popf
dec
xchg
leave
das
add
fnsave
ja
adc
cmpsb
mov
inc
xchg
push
addr16
sbb
push
cmp
add
cmc
repz
inc
mov
pop
pop
cmp
xchg
push
xchg
mov
imul
nop
bound
out
outsb
cli
mov
mov
mov
movsl
jmp
call
pop
cmpsl
aas
addr16
mov
decb
inc
push
jecxz
adc
jg
insl
sbb
sbb
jmp
add
dec
nop
ret
pop
mov
jl
lods
bound
jmp
jg
adc
sub
and
dec
xor
or
test
stc
add
dec
inc
jl,pt
sub
or
sbb
mov
movsb
pushl
or
xchg
push
arpl
sarl
dec
je
ret
cmc
jo
lds
imul
mov
std
mov
stc
xchg
aad
xchg
jno,pn
sahf
outsb
push
mull
popaw
aam
fdivs
cmp
in
mov
sti
outsl
fwait
sarl
mov
aas
dec
dec
sar
fldt
and
mov
xchg
addr16
movsb
rcrb
rcr
mov
pop
in
jb
mov
mov
sub
jns
or
shll
cmpsl
dec
or
popa
mov
mov
rorl
int
fwait
mov
xor
loop
add
xchg
pop
or
mov
in
mov
adc
ret
xor
push
movsb
es
mov
insl
add
push
pusha
mov
loop
imul
clc
add
add
in
shlb
ljmp
dec
mov
or
cltd
test
dec
xor
cwtl
rorb
test
mov
leave
lahf
iret
pop
insb
test
lods
cmc
mov
scas
push
jp
sub
mov
pop
sbb
std
dec
sub
pop
pushf
mov
sub
inc
adc
scas
fwait
fwait
lret
stos
test
pop
aad
and
or
mov
jmp
push
and
adc
xor
dec
in
call
xor
mov
loope
and
adc
dec
push
and
iret
aaa
xor
mov
sbb
aas
add
or
mov
std
outsl
out
setle
adc
inc
cs
outsl
out
jne
shlb
xchg
sbb
orb
fsubrs
roll
fistps
xchg
call
test
cmp
sbb
jbe
inc
cltd
incl
ret
repz
movsb
push
pushf
xchg
mov
xlat
scas
mov
xchg
mov
adc
loop
faddl
inc
adc
loope
pop
mov
icebp
dec
fnstcw
sub
xchg
in
xor
add
jge
and
outsb
adc
or
mov
xchg
jno
in
jecxz
mov
stos
dec
ss
movsl
mov
in
jae
mov
lahf
mov
mov
movsb
bound
aad
inc
cmpsl
push
shrl
add
popf
lds
inc
outsl
in
ljmp
add
inc
sbbb
jle
dec
gs
shl
ljmp
adc
dec
je
mov
cwtl
int
out
test
xchg
rorl
sub
orb
mov
pushf
dec
or
sbb
push
push
icebp
pop
mov
fstpl
xor
cmp
and
cmp
mov
pop
les
mov
loope
sub
test
sub
lret
xchg
or
jecxz
mov
nop
push
add
pushf
in
push
test
or
lahf
cli
aad
jmp
sub
sbbb
clc
dec
cmp
fwait
and
xor
shrl
outsl
test
and
dec
rcr
add
insl
inc
or
pop
icebp
mov
mov
mov
shrl
pop
pop
daa
xor
outsl
clc
jns
sub
mov
jg
mov
cmp
or
test
shrb
lock
fdivl
icebp
or
ljmp
xor
scas
test
inc
sub
mov
out
xchg
jne
cmpsb
add
dec
push
pushf
xor
sbb
or
mov
aad
aam
pop
sbb
xchg
and
ljmp
dec
cmp
lock
jnp
and
pusha
hlt
addr16
pop
cmp
dec
xorl
mov
es
loope
mov
jge
inc
ret
cmpsb
les
cmp
adc
mov
into
mov
push
je
shrb
jl
loopne
mov
dec
cmpsl
loope
mov
call
ficompl
push
jle
mov
xchg
cmp
and
addl
xchg
cmpsb
jae
or
sbbb
cmp
mov
mov
inc
push
jns
adc
test
mov
jb
notb
loop
jecxz
jle
les
aad
lret
and
testb
clc
out
dec
jmp
pop
pop
sbb
and
jno
scas
xchg
mov
pop
push
inc
sub
dec
sarl
or
jb
mov
pop
in
cmp
cmpsl
add
scas
sub
fst
fidivl
ds
jae
repz
lock
ja
aam
hlt
je
out
xchg
add
pop
sarl
adc
xchg
push
inc
in
and
lock
stc
sub
fpatan
and
movsb
push
jecxz
push
rcrl
xorl
mov
xor
out
jg
mulb
scas
and
icebp
ficompl
shrl
neg
add
cmpl
movsb
sbbb
mov
pop
push
insl
in
mov
dec
dec
jb
push
cld
popf
rol
aas
popa
loopne
mov
push
mov
mov
pop
es
inc
loopne
pop
dec
adc
fmul
dec
push
adc
push
outsb
fnclex
add
and
push
test
outsb
jbe
xor
xor
add
ds
shll
dec
xor
dec
ss
inc
dec
sub
movsl
pop
cmp
mov
sbb
fsts
sti
and
push
or
mov
sbb
roll
loope
rorb
aad
adc
aam
jo
das
mov
lea
dec
cmp
or
fscale
xor
pop
jb,pt
push
xchg
imul
sahf
ljmp
lret
loopne
and
nopl
jnp
lds
fcmovnu
and
xchg
sub
lea
jb
dec
int3
push
and
cwtl
or
jae
scas
and
pop
add
out
or
aas
and
cmp
movnti
int3
and
js
xor
int3
adc
push
movsb
ljmp
and
add
test
aaa
dec
sbb
pop
lahf
sub
sub
sbb
adc
add
test
pop
jnp
nop
mov
add
cmp
mov
mov
dec
add
lods
out
idivb
movl
jnp
and
ss
in
pop
and
in
iret
pop
loope
shlb
xchg
loopne
stos
jmp
int
out
std
or
into
mov
jecxz
jle
and
mov
enter
jmp
dec
or
stc
jo
push
mov
fisubs
cwtl
sub
add
or
pushf
fsubrp
das
shl
xor
mov
jl
ja
int
mov
xor
popa
xchg
test
sub
mov
sbb
in
sub
test
jbe
inc
test
leave
mov
mov
hlt
xchg
xchg
lods
enter
mov
adc
arpl
xor
ljmp
cmpsl
xor
divb
sbb
jl
sub
mov
mov
cmp
bswap
mov
test
cmp
mov
scas
lret
push
loop
inc
subl
loope
pop
mov
jno
jae
lea
lret
add
push
add
shlb
inc
inc
pop
push
incl
test
lds
rorb
lock
cmp
in
or
or
daa
movsb
ja
lea
imul
sbbb
inc
outsl
daa
outsb
push
pushf
lods
cmpsb
stos
popf
push
inc
insl
sbbb
and
adc
sbb
imul
js
std
fcomi
inc
dec
lds
mov
lods
pop
ss
stos
jle
xchg
xor
xchg
repnz
adc
xor
sti
shll
sbb
sub
std
aas
imul
jecxz
cwtl
adc
sub
mov
sarb
pushf
mov
ljmp
mov
or
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
repnz
jne
cmpb
jne
mov
shr
rol
xchg
sub
add
stos
jmp
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
cmc
outsl
add
imulb
sbb
