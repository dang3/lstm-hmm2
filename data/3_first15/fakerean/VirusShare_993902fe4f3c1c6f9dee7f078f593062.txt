sbb
add
rol
pop
mov
int3
mov
enter
cmc
and
nop
inc
sub
andl
scas
push
loop
or
and
popf
cmp
cmp
cld
xor
clc
sbb
in
mov
pop
cmp
ja
int3
jno
cwtl
dec
xor
rclb
xchg
inc
sarb
cmc
nop
popa
mov
sub
push
neg
or
lds
sbb
fildl
jo
test
xchg
ret
sub
les
sti
jg
mov
xor
cwtl
int
xchg
jg
ds
popf
cs
sub
jb
in
inc
xchg
xor
or
mov
lahf
fcomps
push
or
mov
pop
push
mov
pop
mov
sbb
inc
cmp
mov
cmp
mov
pop
ljmp
adc
mov
adc
and
fisttps
js
push
push
shrb
imulb
mov
jb
pop
mov
in
shl
mov
inc
stc
xchg
rcll
xor
push
mov
and
sub
ror
dec
popf
out
xor
fsubrs
mov
sub
ss
xor
xchg
shlb
out
xchg
clc
mov
movsb
xlat
cmp
sub
push
js
addr16
out
mov
sub
or
jl
movsb
adc
pop
mov
hlt
push
dec
mov
xlat
adc
pushf
nop
cmpsl
mov
and
iret
insl
in
jg
adcl
lods
jle
test
lret
push
test
shr
test
arpl
push
mov
cltd
rcr
in
ror
push
adc
xor
mov
push
push
fwait
xchg
lods
xchg
incl
dec
or
int
and
jns
xlat
push
adc
aam
dec
jo
out
subb
mov
and
and
dec
dec
sbb
stos
xchg
lcall
in
ja
daa
dec
insb
rolb
xor
add
data16
aas
es
inc
dec
mov
jp
and
mov
push
push
lret
jns
dec
sub
pop
lahf
and
adc
fldenv
mov
mov
out
dec
enter
cwtl
pop
aam
sbb
arpl
fisttpl
mov
in
ss
mov
cmp
sub
xor
and
sbb
jmp
pop
or
sbb
and
lcall
xchg
xchg
or
in
lcall
mov
xchg
lret
add
jmp
out
mov
movsl
sahf
loop
xchg
sbb
int3
leave
rcrl
pop
popa
in
jmp
sub
jp
fadds
in
mov
sub
pop
and
cmpsb
mov
sbb
jo
test
aaa
bound
xchg
jge
dec
fiaddl
dec
pushf
sti
sbb
dec
ss
jo
sbb
or
adc
add
loopne
xlat
stos
out
in
dec
mov
mov
jbe
mov
lahf
icebp
leave
or
push
mov
aaa
mov
xchg
imul
fisttpl
inc
icebp
loop
mov
scas
sbb
xor
lds
scas
mov
inc
mov
or
push
insb
shrl
cld
fs
sahf
aas
mov
xchg
sbbb
mov
xchg
push
in
daa
push
int
inc
sbb
mov
and
out
fdivs
jbe
test
loopne
mov
sbb
cmpsl
and
pop
or
pop
sub
xor
adc
das
es
cmp
cltd
xchg
lds
mov
imul
xchg
sbb
lcall
fidivrs
adc
or
dec
imul
addl
loope
push
jae
mov
cmp
test
mov
push
inc
pop
jl
mov
dec
cmp
sbb
shll
push
adcb
jge
and
jns
cs
test
adc
add
inc
xchg
jb
sub
xchg
jae
adc
in
inc
movsb
mov
adc
pop
loop
cmp
insl
orl
mov
jns
mov
lea
or
mov
popa
adc
add
mov
adc
fs
repz
das
icebp
cmp
aas
push
ja
push
sbb
lcall
cmp
clc
insl
jle
jb
mov
and
xor
add
imul
fidivs
lds
add
stc
pusha
adc
loop
cwtl
lret
cmp
ds
shrl
xchg
loopne
jbe
fwait
arpl
incb
sub
pop
cmp
fstpl
outsb
mov
jl
shrl
mov
int3
stc
stc
ds
imul
sbb
hlt
mov
mov
mov
pop
movsl
xor
mov
xor
lret
xor
xchg
and
or
aas
fnstcw
mov
add
mov
dec
ud0
pop
xchg
shl
or
pop
lret
inc
in
je
popa
cmp
xchg
out
push
push
loopne
push
dec
outsb
xchg
ret
mov
mov
xchg
add
iret
push
cwtl
stos
imul
fwait
sbb
or
jbe
rcrl
outsl
dec
inc
mov
and
outsl
aaa
test
fsts
lret
mov
sti
insb
xor
std
fwait
pop
and
std
pusha
ljmp
stc
out
dec
xchg
pop
xor
pop
jns
aaa
clc
xchg
pop
shrb
fildll
out
aad
and
gs
sbb
lods
inc
xchg
mov
jmp
pushf
push
cmp
lods
adc
rcrb
mov
shrb
sahf
pop
push
sub
test
jle
pushf
js
roll
mov
adc
push
testb
jb
mov
dec
in
fcomip
loopne
cs
adc
repz
dec
scas
loop
or
lds
gs
daa
pop
icebp
adc
call
mov
push
or
mov
out
pop
ss
xor
push
pop
jns
sbb
push
sub
mov
cld
and
leavew
or
sbb
popa
mov
cmc
clc
add
mov
sub
rcrl
pop
push
jmp
xchg
fnstsw
fcoms
jge
or
das
mov
xor
insl
jo
loop
add
cmp
inc
sahf
jae
mov
push
popf
pop
lret
mov
push
adc
push
pop
jbe
xchg
push
shll
insl
int3
push
push
shrl
das
mov
dec
pop
mov
fsub
mov
jge
xor
subl
or
cli
sub
adc
je
xor
test
jb
arpl
cltd
ficompl
aas
cmp
xor
add
inc
xor
fnstsw
or
xor
call
lahf
or
inc
fwait
test
fsts
dec
loopne
jb
and
scas
push
xor
hlt
sub
adc
jecxz
add
das
and
dec
or
sbb
es
cmp
repnz
jbe
xchg
in
enter
js
sarw
jmp
mov
mov
mov
push
mov
aaa
lods
int3
test
test
cli
add
jbe
dec
repz
cmp
adc
testl
pextrw
sub
stos
push
xchg
out
movsl
cltd
xor
sub
imulb
jecxz
jbe
lods
cwtl
and
test
xchg
sbb
ret
es
fmulp
sbb
scas
jne
adc
ret
divl
adcb
cmc
shll
fidivs
pop
orb
pop
pop
fiaddl
mov
push
lods
xchg
mov
jae
addb
xlat
sbb
jo
imul
and
push
aas
pusha
cs
mov
out
int3
jg
inc
test
or
inc
out
enter
stc
addr16
js
push
push
mov
mov
jmp
push
xchg
in
inc
addr16
jno
sbb
dec
mov
inc
movsb
ret
jecxz
int
cmp
fidivrs
les
sub
mov
mov
and
test
divl
mov
roll
and
aad
adc
xchg
sub
insl
mov
dec
inc
in
pusha
pslld
cmp
inc
xchg
aaa
mov
popa
mov
push
call
popa
call
dec
jl
dec
sub
orb
iret
xor
pusha
or
ja
add
dec
shl
jae
mov
xor
aaa
insl
in
aaa
fstpt
lret
icebp
dec
push
insb
dec
jmp
fdivs
push
pop
rolb
jecxz
int3
imul
aaa
or
mov
jmp
adc
inc
ss
lds
inc
imul
pop
lret
ss
push
and
pop
shrl
loop
or
fwait
pop
sub
ds
cmpsl
mov
mov
xor
fistps
loope
int3
aaa
push
jge
ror
mov
lock
push
imul
repz
add
push
dec
cmp
cmpsb
loope
xor
cmp
xorl
inc
imul
movsb
clc
insb
jp
jae
out
xorb
cmp
xlat
subb
ret
rorb
and
xor
xorl
pop
mov
xchg
pop
mov
xor
push
jle
jbe
sbb
inc
shrb
push
imul
nop
decb
mov
mulb
dec
cltd
push
xchg
xchg
xchg
sbb
pusha
rcrb
aam
outsl
push
sti
mov
aas
std
loope
add
arpl
mov
stc
fwait
dec
add
ljmp
mov
andb
xor
arpl
cmp
push
cmp
push
insb
cmp
daa
xor
inc
stos
jb
jl
pop
ret
loop
bnd
hlt
loop
movsb
adc
and
imul
ds
cmp
aad
jae
cmp
fimull
adc
cmpsb
add
xchg
in
mov
mov
lret
ds
add
sbbl
pop
sub
push
ds
jmp
add
mov
sbbl
push
out
cmp
jne
leave
mov
lods
shrb
movsb
inc
subl
mov
pop
movsl
or
mov
jge
adc
in
and
adc
arpl
add
sub
inc
mov
pusha
mov
aad
pop
or
fs
loop
stos
notb
cs
dec
add
scas
push
pop
in
popf
lcall
sbb
imul
add
inc
decl
fdivs
adc
and
insl
jno
push
fistpl
pop
cmp
fdivr
stc
sbb
jp
sti
mov
cltd
cmp
stos
nop
aaa
or
sub
in
mov
scas
dec
inc
out
xchg
aaa
inc
sub
in
fnstsw
mov
lds
adc
int
push
sbb
nop
loopne
pusha
jp
push
ljmp
push
jge
out
scas
and
je
jne
fdiv
subb
fsub
lods
mov
pop
adc
inc
sarl
inc
mov
xchg
dec
mov
or
mov
pop
outsl
push
mov
inc
xchg
xor
rcl
loope
aas
lock
pushf
rcrb
ret
hlt
xlat
sub
mov
stc
mov
fcmovnu
in
ffreep
in
je
imul
std
cmp
sbb
mov
add
push
cmp
mov
jmp
into
pop
push
push
es
dec
xor
adc
push
clc
xor
dec
pop
jno
arpl
popf
mov
rolb
push
inc
jnp
and
stos
and
fs
add
or
dec
sub
mov
mov
or
fwait
cltd
and
jp
std
add
out
adc
fcoms
or
aas
push
or
jae
call
fidivs
pop
dec
sahf
cmp
jo
iret
inc
outsb
test
xorl
mov
adc
lcall
xorl
mov
test
mov
pop
fdivs
out
inc
push
into
ss
fsubs
mov
dec
push
xchg
lret
jge
mov
ljmp
cmc
add
jle
xlat
adc
mov
cmp
int3
pop
cmc
mov
shrl
rorl
pop
jge
xor
jbe
pop
gs
movsl
or
inc
mov
mov
stos
jae
shll
ret
test
xlat
hlt
inc
fsubp
mov
adc
mov
push
or
xchg
in
scas
xor
dec
xchg
cli
xorb
fdivl
aaa
enter
in
xlat
divps
movsl
std
adc
jno
or
mov
test
pop
jbe
push
sbb
sub
pop
in
or
rolb
jnp
das
adc
in
addb
push
ds
jle
push
xor
jns
and
sub
fidivrl
aaa
ss
dec
xor
fcomi
mov
insl
outsb
cmpsb
dec
jl
popa
inc
addl
lcall
sbb
jbe
arpl
inc
push
shl
loopne
sbb
test
insb
mov
dec
xlat
jb
fsubr
cli
mov
mov
stos
and
pop
sbb
mov
jge
mov
cli
cld
mov
fmull
std
je
cld
add
xchg
cld
popa
xchg
sub
into
inc
mov
rcr
scas
loope
adc
adc
pop
push
mov
pop
ss
cmp
jle
sbb
cmp
adc
fidivl
ds
jl
negl
mov
mov
mov
ret
sbb
outsb
sbb
cld
insl
sbbl
jno
scas
lock
xlat
xlat
mov
leave
xlat
inc
jle
es
clc
xchg
xor
std
and
xlat
xchg
sbb
adc
sarl
int
popa
push
lock
popf
pop
mov
xor
pop
jb
ja
sub
mov
aaa
sbb
pop
jb
and
xor
adc
push
imul
push
stc
bound
rcll
dec
ror
push
outsl
mov
push
lahf
inc
push
xchg
dec
xor
jbe
push
push
xor
and
rol
iret
and
adc
inc
jnp
xchg
adc
pusha
addr16
es
add
mov
cltd
add
sbb
clc
fisubs
in
stos
fistpl
mov
test
test
mov
pop
mov
sub
mov
or
sbb
fadds
sub
aam
mov
lret
push
jbe
pushf
loop
faddl
or
shl
mov
scas
xor
jne
xor
pop
xchg
std
cmp
mov
mov
movw
jns
pop
leave
sti
push
orb
adc
scas
inc
mov
jo
std
pop
imul
cltd
xchg
mov
adc
push
xor
and
adc
popa
cmpsl
stos
aad
out
cmpsb
shl
cld
popf
mulb
jb
xchg
and
ret
hlt
sbb
in
xor
fcoms
popa
sbb
xor
out
push
or
or
clc
ret
and
mov
push
shll
dec
das
std
movntps
in
popa
in
ljmp
in
and
outsb
cltd
mov
lcall
pop
adc
inc
mov
xor
pushf
in
adc
push
jecxz
add
icebp
stc
mov
mov
shrl
add
hlt
jb
sbb
nop
mov
cmpsl
rorl
lret
aaa
fmuls
ret
jbe
inc
outsl
push
jbe
stos
fiaddl
jnp
push
push
jb
je
or
xchg
shrl
add
andl
scas
adc
push
pop
mov
inc
ret
add
sahf
pushf
lret
fdivs
je
arpl
xor
dec
pop
jns
jp
dec
cmp
cmpsb
dec
xchg
dec
jmp
repz
xchg
sub
mov
inc
filds
scas
adc
negl
out
ljmp
mov
ret
imul
sub
popf
cmp
jle
dec
adc
inc
lahf
xchg
inc
pushf
into
xchg
cltd
mov
sub
pop
cmc
subb
loope
mov
cmp
and
xchg
mov
imul
fstpt
daa
inc
rcll
fwait
inc
lcall
int
inc
mov
sub
pop
std
sub
je
cltd
push
push
fwait
addl
fldt
popf
cmp
jge
mov
or
mov
mov
mov
idivl
lahf
and
cwtl
push
dec
bound
movsb
fistl
mov
xor
test
sbb
jns
pop
push
xchg
fwait
mov
ret
fidivrs
and
inc
xor
gs
rcrl
push
jbe
out
push
pop
jl
xor
sbb
testl
nop
nop
mov
fdivrl
or
adc
or
popa
jns
xchg
xchg
or
adc
jne
leave
pop
xchg
test
sbb
sub
stos
dec
jp
adc
and
fnsave
dec
in
fstp
out
outsl
xchg
scas
sub
inc
xchg
stc
ja
pop
out
hlt
or
jo
adc
out
in
lds
inc
sbb
sbb
stc
aad
dec
pop
fs
lahf
jo
shrl
pusha
xchg
cmp
sbb
bnd
cmp
pop
lock
int3
push
pop
pop
pop
in
pop
js
jno
inc
inc
xrelease
add
sbb
sbb
mov
aam
mov
ds
adc
adc
mov
jle
sbb
jl
xor
ficoms
xchg
ss
mov
mov
loop
test
xchg
fiaddl
fbstp
fnstsw
push
aaa
scas
subps
loopne
shlb
xchg
pop
repz
and
ffree
fs
jbe
adc
mov
pop
in
rcrl
daa
jae
insl
int3
dec
mov
push
mov
cwtl
dec
hlt
sti
mov
std
sbb
leave
inc
fdivrs
out
mov
jbe
push
std
jo
xorl
add
ret
cltd
mov
leave
lods
enter
fwait
inc
adc
cld
or
pusha
mov
jne
lods
sub
in
fcomps
fisubl
das
sti
or
ja
repnz
icebp
inc
lahf
inc
cmp
jns
test
sahf
rcrl
pop
push
enter
and
sub
xchg
dec
je
or
sub
mov
daa
ds
pop
insb
addr16
lea
mov
pop
xchg
stos
sub
in
cmp
data16
arpl
bound
mov
filds
push
jnp
je
mov
and
repz
je
mov
test
xor
scas
push
cli
adc
push
in
dec
add
sbb
push
fadds
jg
xchg
xlat
xor
leave
hlt
pop
push
frstor
sbb
cmp
test
mov
adc
hlt
js
mov
pop
xchg
aad
nop
fadds
mov
lock
jae
sbb
in
cmp
inc
fsubl
cmp
je
mov
cmp
shll
sbb
sub
mov
lea
jg
mov
mov
fcmovbe
push
mov
fsubrs
movsl
mov
stos
pop
fidivl
inc
loop
xchg
jle
mov
adc
mov
fwait
js
cmpsl
pop
pop
cmpsl
ds
inc
insl
daa
hlt
dec
adc
fadd
or
loopne
mov
and
std
cmpsb
js
sbb
mov
mov
sub
int
push
test
cmp
and
js
cmp
dec
add
leave
in
int3
pusha
jo
repz
loop
xchg
test
xchg
cmp
add
rcrl
cmp
add
dec
lcall
lock
mov
iret
shll
and
push
xchg
push
pop
pop
cs
fistps
mov
cmp
xor
dec
ja
addr16
mov
aad
jne
mov
push
dec
faddl
sub
or
sub
sbb
out
call
pop
sub
jmp
mov
push
xor
dec
xchg
push
adc
test
popf
mov
jo
mov
pushf
mov
mov
lock
mov
add
fcomps
inc
cmp
movsb
es
cs
out
lret
imul
ja
jnp
popa
xchg
cli
or
add
outsb
jecxz
rcrl
aad
mov
popa
push
jg
inc
sbb
ja
loop
jge
in
xchg
jno
test
xor
scas
and
in
and
sbb
cmpb
mov
les
pushf
adc
pop
fwait
jbe
or
addl
jne
pop
jmp
in
lock
and
aam
xchg
mov
mov
or
movsb
in
imul
imul
pop
loope
hlt
mov
mov
out
enter
outsb
mov
aad
and
jbe
pushl
insb
push
iret
and
pop
std
mov
push
scas
dec
movsl
dec
lret
push
lods
lret
jno
pop
lods
sarl
lcall
and
add
les
dec
data16
xchg
push
sbb
fcoms
dec
mov
and
mov
mov
jp
inc
lods
fsubrs
clc
dec
insl
testl
xor
or
lret
push
cltd
test
cmpb
ss
rcrb
jns
daa
pusha
cmc
mov
and
mov
in
jmp
mov
sti
xchg
xorl
inc
cltd
inc
test
ja
ret
arpl
dec
in
ljmp
add
or
mov
test
mov
mov
mov
push
push
rorl
shl
pop
xor
inc
outsl
add
mov
pop
nop
inc
lahf
mov
jge
daa
lods
jne
mov
lcall
push
out
lea
xchg
dec
push
xchg
mov
ljmp
dec
inc
bndstx
stos
les
out
push
mov
or
lcall
mov
lods
ljmp
inc
outsb
xor
mov
mov
mov
sub
or
cmp
loope
shlb
aaa
ss
fs
mov
cmp
int3
mov
adc
dec
push
pop
xchg
iret
std
xchg
mov
and
int
pushf
nop
push
cmp
sub
inc
pushf
outsb
inc
cmpsl
inc
hlt
adc
ret
inc
xchg
ret
rclb
inc
scas
shll
imul
adc
rolb
push
repnz
leave
fisttpl
rcl
ja
and
xor
jmp
push
pop
xor
arpl
adc
sahf
lock
out
outsb
fimuls
xor
cmp
pop
dec
les
insb
es
jmp
jp
xor
adc
mov
adc
outsl
fimull
sub
arpl
repz
sub
push
popa
lret
pop
adc
sub
icebp
mov
sbb
mov
cli
or
call
adc
mov
fdivl
insl
loopne
dec
mov
fnstcw
stos
add
xor
cmp
dec
cmp
ljmp
gs
mov
icebp
pop
test
jle
in
or
loop
xor
or
add
imul
or
pop
mov
and
inc
fcomps
mov
lahf
in
push
sbb
mov
push
insl
cmpsb
jne
mov
bound
outsb
fincstp
jge
cmp
xor
addl
inc
bound
push
push
pop
or
stos
lret
mov
imul
cmp
loopne
pop
inc
shlb
movsl
jnp
and
outsl
add
adc
ja
push
popf
rep
into
or
jecxz
dec
and
fcmovnu
xorb
or
and
xchg
cmp
xchg
lahf
divb
hlt
decb
mov
and
mov
dec
mov
push
ret
sbb
mov
das
cmpsb
mov
pop
mov
xchg
into
dec
cmp
int
out
sarb
rorl
stos
and
in
xchg
cmpl
rorl
cltd
jp
and
inc
cmp
out
enter
dec
testl
scas
xchg
cmpsb
mov
push
ljmp
pop
aam
mov
mov
fmul
mov
dec
inc
add
dec
shl
inc
xchg
cmc
cld
xchg
jl
repnz
ret
mov
adc
in
data16
sti
sti
cmpsl
lret
repz
xchg
sub
movsb
imul
jns
mov
mov
dec
std
cmp
cmp
fiadds
xor
xor
jbe
call
das
lock
cmp
pop
pusha
sub
cs
mov
out
inc
ret
dec
jo
fadds
inc
sbb
out
cli
mov
ret
mov
in
ficomps
daa
xchg
inc
xor
popa
mov
pop
idivl
xchg
mov
and
sbb
loop
sti
mov
mov
jno
add
xchg
mov
xor
cmp
mov
int3
ficompl
cmc
mov
sbb
sbb
test
jle
mov
mov
xchg
jp
cmpxchg
cs
iret
inc
pop
push
test
call
jae
ljmp
sub
dec
inc
or
mov
mov
fimuls
gs
cli
cmp
jp
xchg
test
out
fmuls
data16
or
negl
jnp
dec
out
pop
xchg
fdivrp
adcb
pop
popa
cmp
aas
mov
xor
fldl
punpckhdq
push
scas
lahf
loopne
lahf
xor
xchg
push
sti
gs
add
xor
mov
stc
pop
push
out
sub
cmp
mov
xchg
fildll
cwtl
shrb
in
push
lret
out
xchg
ret
cmpsb
jb
sahf
sub
rorl
cltd
xchg
shll
ljmp
frndint
and
and
jmp
push
dec
ja
mov
mov
jo
xchg
dec
fidivrl
fs
inc
pop
aas
in
xchg
add
push
fisubrl
mov
pusha
adc
in
aaa
inc
push
push
in
fistps
adc
insb
test
jnp
push
loope
dec
mov
mov
repnz
stos
js
repz
cli
mov
cmpsl
mov
sbbb
mov
fwait
insb
push
arpl
lret
mov
push
xor
dec
xchg
or
sbb
es
sub
andb
jbe
xchg
daa
pop
jns
and
xchg
xchg
cmp
push
ret
sbb
sbb
movsl
icebp
fisubrs
cmpsl
pop
or
or
adc
mov
xor
lds
push
mov
out
push
adc
es
out
xchg
adc
and
and
inc
inc
pop
invd
test
adc
bound
inc
and
cs
jnp
xor
cld
aaa
fidivrl
lret
stos
pop
imul
adc
xlat
ljmp
adc
out
shl
dec
adc
sbb
xor
cmpl
pop
push
and
xor
addr16
ret
lods
xchg
jb
scas
add
out
cwtl
and
jb
lds
xchg
adc
add
insl
xor
imul
mov
xchg
sbb
fwait
lock
mov
pushf
std
sar
xchg
or
xchg
fs
aaa
enter
imul
pop
add
std
lret
inc
jg
sbbl
jnp
jns
adc
insl
rcll
xchg
repnz
xlat
imul
mov
cmp
and
xchg
ficoms
push
mov
aam
jmp
shlb
mov
fs
pop
jmp
push
shll
test
fsubrl
dec
adc
mov
nop
shlb
inc
adc
mov
fnstsw
and
sub
cmpsb
push
outsl
lds
adc
lret
sbb
jno
aas
popa
int
insl
ffreep
std
in
rorl
xor
fdivrl
cmp
insl
pop
ss
inc
call
das
jo
push
jnp
pop
jno
repnz
in
cltd
movsb
inc
and
fnstcw
inc
out
outsl
cmpsl
fldcw
js
pop
inc
jle
lahf
shrl
sbb
xor
fwait
js
jae
aaa
pop
lcall
mov
insb
icebp
sub
lret
or
sub
mov
sub
test
push
mov
push
dec
jnp
fucomp
call
adc
sbb
lods
lods
jmp
xbegin
jnp
mov
lods
stc
je
pmullw
popf
loop
loope
idivl
mov
aaa
in
push
push
pushf
testb
imul
test
fdivrs
cmpsb
dec
lds
dec
mov
pop
subl
outsl
rcr
lods
inc
or
mov
and
jg
xchg
nop
mull
adc
loopne
arpl
mov
cmp
xchg
cmp
xor
add
inc
out
xchg
jb
stos
jnp
add
adc
mov
cmpsb
nop
fdivrp
and
add
mov
mov
sarl
shlb
mov
sub
lret
fldt
sbb
fisubrs
int
dec
push
and
fidivs
sbb
cmp
pop
mov
dec
loope
sub
rcrl
mov
jae
jno
jnp
mov
imul
xor
or
dec
fistps
pop
outsl
repnz
lea
jbe
push
jp
cmp
adc
mov
aad
or
and
orl
fadds
mov
das
push
outsb
aam
mov
pop
adc
pop
xchg
daa
inc
subb
mov
xorb
loope
mov
int
sub
and
and
test
and
pop
ss
outsb
cltd
faddl
outsl
clc
xchg
out
aas
sbb
mov
fmuls
or
sub
testl
inc
insb
mov
add
xor
ja
add
fcmovnu
cmp
mov
leave
inc
fdiv
add
dec
inc
clc
data16
dec
loope
nop
fs
dec
mov
and
rolb
cmpsb
subl
sbb
or
push
adc
and
out
rorb
jmp
ljmp
jl
xor
sbb
inc
xchg
fdivl
adc
scas
push
dec
movsb
cli
xchg
stos
shr
and
jmp
outsb
je
adc
push
das
jg
cld
sti
test
clc
pop
adc
dec
lret
dec
cli
aad
imul
jmp
push
bound
emms
iret
mov
popa
push
jmp
sti
sbb
mov
lcall
fmuls
push
mov
iret
fstpl
test
sahf
xor
mov
sub
cmp
ljmp
test
xor
push
fidivs
jecxz
dec
imul
ss
shlb
push
aaa
add
pop
adc
adc
or
jmp
jge
jle
lock
fimull
or
sbb
scas
push
cmp
fwait
adc
mov
mov
adc
sub
rclb
cmp
pushf
xor
jg
sub
or
cmp
mov
adc
out
and
into
stos
test
leave
fs
dec
mov
mov
shrb
xor
mov
cltd
in
pop
push
pop
shll
cmp
add
lea
mov
and
scas
xlat
lahf
out
movsl
fdiv
cmp
shlb
in
xchg
dec
imul
jecxz
aaa
and
rcl
sub
cltd
xor
inc
icebp
cmc
dec
lcall
std
imulb
faddl
inc
sub
hlt
jecxz
stc
mov
sub
mov
cwtl
packsswb
mov
add
shl
dec
lods
inc
loopne
mov
clc
je
cmp
call
xchg
pop
mov
mov
mov
loope
jne
inc
leave
js
cmp
xor
cs
dec
sbb
inc
xchg
push
fwait
sub
adc
cltd
hlt
xor
xor
sbb
sbb
cmp
loope
test
push
js
jo
inc
mov
test
lahf
dec
mov
addr16
loopne
cmp
bnd
fadd
pop
cs
add
mov
pop
clc
jb
cmpsl
and
lock
pop
jl
sub
push
fidivrl
mov
les
popa
mov
jae
sbb
fs
mov
pop
lahf
sbb
call
mov
nop
jae
mov
lods
filds
sti
mov
popf
repz
clc
lret
cld
push
sub
xchg
scas
jl
dec
add
dec
xchg
repnz
aaa
jmp
add
xchg
and
nop
shrb
xor
mov
aas
insb
sub
data16
cmp
xor
pop
push
push
or
cli
cmp
ja
xor
xchg
sbb
dec
int
inc
dec
movsl
in
lret
popf
adc
jae
xlat
jmp
mov
xor
mov
push
call
out
aas
sbb
scas
sbb
out
cs
je
fstpl
loopne
dec
imul
rcll
sbb
pop
mov
cmpsl
in
aad
pop
stos
inc
int3
sbb
mov
or
fdivrl
inc
add
lcall
or
push
and
ljmp
std
int
add
aad
push
push
pushf
clc
ja
jl
mov
cmc
cmp
add
fimull
daa
inc
xor
or
pop
clc
fwait
pop
mov
mov
add
test
cmp
jnp
mov
xor
mov
push
mov
sub
mov
pop
dec
dec
in
mov
insb
or
lock
jl
adc
rol
loop
sbb
cmp
popf
mov
inc
push
pop
inc
dec
cs
idivb
inc
cwtl
push
mov
adc
gs
movsb
adc
mov
cmpsb
fsub
pop
fldcw
aam
add
mov
ficoms
and
cwtl
nop
add
in
sbbb
outsb
cmc
insb
sub
int
outsb
jle
sti
imul
push
mov
loop
push
dec
into
xchg
je
jbe
aad
dec
jmp
rolb
das
mov
aas
js
addr16
mov
rol
inc
sbb
xchg
fsubl
jmp
mov
add
cmp
loop
push
jns
movl
xchg
pop
stc
mov
mov
lret
mov
ja
dec
cli
mov
jle
sarb
xchg
mov
int
andl
bound
xchg
xchg
fldt
and
dec
in
je
test
pop
and
int3
aaa
cld
adc
cmp
cmc
mov
dec
mov
insl
cmp
or
pushf
sub
dec
rclb
xchg
jae
cltd
rcrl
jmp
xlat
test
lods
xchg
fs
cmp
adc
mov
scas
and
push
cmp
out
mov
addb
in
sarb
scas
addl
fcomi
icebp
xchg
mov
insb
jo
subl
inc
into
int3
dec
cld
push
jne
ja
jmp
stc
mov
sub
cwtl
fstpt
mov
pop
mov
cli
loopne
push
bnd
imul
into
loop
and
in
cwtl
mov
pop
add
jge
aad
fisubl
sub
xchg
xor
adc
out
pop
addr16
pushf
inc
fs
mov
ret
test
clc
push
add
push
stc
inc
aaa
add
testl
fstps
cli
mov
pop
adc
popf
mov
mov
scas
mov
inc
pushf
mov
int3
gs
das
ja
std
enter
and
fisttps
pop
add
or
or
scas
lret
mov
sbb
xor
add
sub
js
ja
fdivrs
or
adc
shrl
jo
cmp
cmp
mov
rorl
imul
shlb
fistl
pop
jnp
and
and
jmp
daa
pop
ds
xchg
push
jecxz
call
jmp
repnz
adc
sbb
mov
lcall
cmp
jp
mov
xchg
mov
pop
xchg
inc
insb
into
addr16
push
pop
add
adc
xchg
shrb
mov
repz
xchg
into
xor
add
xchg
pop
sbb
sub
sbb
sub
xchg
lret
test
movsb
xchg
sub
mov
das
roll
mov
push
mov
mov
out
pop
jg
push
leave
divl
or
scas
push
cmpsb
xchg
outsb
jnp
out
or
xor
test
lea
pop
scas
adc
add
jg
hlt
imul
fs
lds
lods
lods
vcvttpd2dqy
inc
gs
jo
pop
add
nop
add
lods
lods
cmp
testb
mov
jle
inc
xchg
lds
nop
mov
dec
in
inc
icebp
cmp
negb
ret
dec
cmc
sahf
adc
adc
fbld
aaa
xor
xor
pop
sbb
and
bound
or
dec
mov
ret
test
pand
add
xchg
rol
pop
ja
pop
add
in
roll
sub
dec
push
in
cltd
in
repz
add
jb
push
fdivrl
or
xor
int3
sbb
push
sbb
cmpsl
push
mov
pop
jl
dec
std
mov
movsb
popf
addr16
js
leave
inc
dec
cld
in
push
dec
push
mov
add
inc
sbb
jnp
int
add
and
gs
es
or
adc
cmp
mov
xor
add
mov
cmp
or
aam
adc
pusha
cmp
xchg
fs
mov
push
xchg
mov
testb
arpl
mov
int3
aas
stc
sahf
ret
mov
mov
cltd
add
jle
test
mov
jae
cmp
stos
jbe
daa
mov
movsl
lahf
add
loope
inc
rclb
xlat
push
cmp
les
pop
std
mov
iret
inc
inc
sub
xchg
mov
xchg
in
daa
push
push
lahf
in
leave
pop
test
push
lcall
aaa
pop
decl
loop
or
nop
rcrl
movsb
scas
cmc
inc
ljmp
add
xor
add
add
xchg
jns
movsl
push
lock
fstpl
in
aad
or
sbb
push
push
mov
das
cwtl
dec
xor
mov
int
int
in
repnz
jo
jle
ss
lods
ja
mov
icebp
push
scas
cmpsl
xor
jecxz
repnz
outsl
enter
and
xlat
cmp
adc
push
dec
repz
mov
push
fisubrs
lahf
sub
jo
insb
inc
push
jo
mov
data16
cmp
xchg
dec
pop
adc
pop
cltd
dec
loop
or
cwtl
add
in
outsl
dec
jmp
jns
xor
sub
test
xchg
add
or
out
ficoml
jg
cmp
pop
inc
lret
push
inc
xor
enter
lcall
pop
add
aaa
push
fdivp
and
ss
ja
inc
test
mov
cmp
rorl
jne
scas
loop
push
adc
outsl
sub
and
mov
xchg
mov
iret
dec
add
scas
fadd
push
leave
push
jl
pop
push
bound
mov
fldt
and
push
ja
xor
dec
push
out
aaa
or
scas
xor
sub
xor
xor
fdivrl
stos
cld
in
lock
or
das
adc
and
xchg
je
cmpsl
das
andb
mov
xchg
rcrb
push
push
push
es
add
inc
test
enter
or
test
popa
dec
push
loope
inc
dec
aad
addb
addl
scas
lds
fiadds
lret
or
xor
inc
andb
les
into
std
in
pop
pusha
lock
out
and
sub
push
divl
popf
cli
clc
or
mov
repz
aas
sbbb
js
cmpsb
loop
frstor
pop
fs
xchg
cmp
dec
mov
pop
mov
xchg
std
stc
mov
outsl
mov
repnz
mov
push
sbb
xchg
lahf
movsb
and
push
out
dec
cmp
loop
rcr
mov
icebp
and
pop
add
lods
dec
mov
fstl
add
xlat
stos
mov
test
ror
popa
xor
mov
sti
addr16
out
cld
push
cs
fwait
pop
int3
cmc
test
xor
popa
add
xchg
test
daa
fnstsw
sbb
cmpsb
xchg
shr
fisubrs
add
pusha
pop
or
das
inc
out
js
or
dec
or
dec
loope
xchg
call
add
mov
lcall
mov
inc
insb
mov
xchg
lret
mov
jno
loopne
sbb
enter
ret
sahf
dec
dec
outsl
add
test
push
loopne
popf
sar
dec
int3
pop
or
js
inc
call
pop
add
mov
xor
js
stos
push
aas
xchg
push
jbe
fdivrs
mov
xchg
movsb
fisubs
adc
pop
or
bound
popf
jae
cmp
shll
inc
dec
lock
pop
sub
pop
stos
rclb
fwait
and
cmc
push
push
dec
sbb
sbb
xchg
mov
adc
mov
mov
sbb
adc
push
pop
sub
nop
add
and
sbbb
aaa
xorl
negb
insb
sub
jns
mov
jne
fdiv
out
jecxz
mov
cltd
adcb
mov
inc
mov
sub
sahf
dec
push
push
push
ficoml
push
sub
cmp
xor
cli
clc
movsl
xchg
out
cmp
add
jmp
sub
sti
mull
clc
mov
rcll
mov
mov
add
sub
mov
fisubrl
xor
into
aaa
mov
xor
jb
movsb
push
sub
and
dec
push
hlt
aam
mov
inc
xchg
pusha
imul
sub
lods
js
out
stos
and
xlat
xor
cs
sub
repz
pop
mov
in
popl
or
jno
ds
testl
cmp
jl
lcall
imul
das
jns
lret
ficomps
add
enter
loopne
aas
inc
fisubs
mov
jae
mov
pop
or
mov
sbb
xchg
or
dec
push
je
mov
dec
scas
bound
xchg
push
cmp
and
and
lds
xchg
push
jne
mov
or
jnp
dec
in
mov
sti
jb
sti
sbb
fildl
jbe
push
jmp
or
lahf
push
mov
out
lea
push
pop
je
sub
callw
jnp
cltd
arpl
or
call
fidivs
lods
mov
xor
mov
dec
iret
cli
cmp
pop
mov
jp
and
mov
and
inc
jb
adc
ljmp
mov
and
or
adc
jecxz
cmp
xorb
cmp
or
inc
ja
sbb
pop
stos
roll
jno
xor
mov
dec
rcrl
scas
icebp
cmp
lods
sbb
aaa
mov
test
xchg
ljmp
cwtl
xchg
loopne
add
call
xchg
jle
mov
xchg
out
mov
loop
outsb
es
lcall
dec
pop
sub
xchg
sub
jle
call
cmpsl
ret
fmul
lahf
xor
dec
je
mov
subb
xchg
jl
cmc
lea
adc
js
pop
pop
in
fwait
jb
inc
inc
inc
pop
sub
shlb
clc
lcall
cmpsb
rcr
shl
in
mov
and
xor
dec
inc
sbb
lea
fs
test
loopne
xor
and
pop
xchg
out
jmp
add
mov
jg
cmp
es
jne
testl
cmpsb
insl
cs
xor
cmovae
sub
test
ja
es
je
xchg
and
push
out
inc
aas
pop
cs
sahf
and
pop
xlat
gs
mov
sbb
pusha
xlat
add
cmp
pop
pop
cli
push
out
sub
mov
call
xchg
sbbb
xor
pop
test
sahf
negl
pop
cmpsb
fidivrs
ror
jl
add
lock
adc
and
or
xchg
dec
mov
dec
jle
mov
adcb
cmc
mov
mov
inc
xchg
sti
adc
stos
test
push
mov
loope
mov
iret
push
rol
inc
xchg
xor
jmp
lds
xchg
mov
xor
filds
cmp
ror
jmp
test
or
and
mov
mov
pop
scas
xor
aaa
adc
jnp
pop
not
and
outsb
push
pop
test
sbb
es
add
lcall
subb
ds
mov
or
insl
pushf
cmp
mov
or
clc
pop
jmp
inc
aad
daa
mov
js
test
add
test
test
fcompl
push
adc
arpl
movsb
mov
ret
cltd
orl
inc
jl
jg
fcomps
sahf
sbb
imul
ret
jo
scas
and
dec
pusha
add
cli
sub
call
scas
bound
loopne
xor
sti
icebp
dec
pop
cmpsl
xor
rol
daa
dec
dec
pop
icebp
jbe
das
fdivrl
pop
mov
mov
movsb
sub
push
or
pop
int
stos
cmp
mov
sub
dec
fwait
ret
loop
iret
cmp
xor
sub
pushf
pop
inc
push
cmp
repz
xor
mov
inc
adc
mov
xchg
testl
add
scas
ret
sbb
sub
push
mov
dec
cld
sbb
enter
dec
and
cld
jge
mov
xchg
jbe
addb
and
shll
sub
sub
jl
lahf
test
cwtl
data16
insl
mov
jecxz
mov
mov
xchg
daa
inc
cmp
mov
outsl
mov
adc
ret
cmp
int3
mov
les
pop
test
lret
clc
lock
mov
sub
sbb
or
mov
arpl
cmpsl
dec
and
frndint
mov
mov
mov
test
push
adc
cmp
lods
pop
das
ds
pop
ja,pt
ret
jge
imul
jge
dec
sbb
dec
mov
xor
jne
mov
fcmovu
xchg
add
xor
lret
xchg
and
dec
xchg
fisttpll
pop
sti
inc
xchg
scas
fdivs
shrb
xlat
jmp
inc
push
mov
sub
outsl
cs
xchg
testb
adc
andl
and
scas
sub
repz
scas
daa
xchg
pop
mov
mov
std
shll
xchg
jp
xor
loop
in
jl
insw
mov
es
mov
xor
outsb
cmp
cmpsl
bnd
mov
insl
inc
jo
jecxz
ljmp
in
pop
push
xchg
das
stc
aad
arpl
ret
repz
push
jo
mov
mov
movl
imul
pop
and
or
popf
cmp
pop
test
incl
addl
lret
push
mov
add
shr
ret
les
call
add
inc
add
mov
dec
jmp
jecxz
cmc
imul
dec
inc
movsl
cli
sub
imul
adc
cmp
imul
rcrb
inc
and
rep
in
adc
loope
sub
pop
push
push
fsubrl
jns
cmp
add
mov
cli
mov
int3
popa
pop
and
sti
xor
and
aaa
inc
pushf
cmpsb
push
lods
sbb
sub
adc
mov
imul
movsl
and
pop
push
or
mov
addr16
mov
jne
jne
cwtl
testl
mov
sbb
mov
push
dec
jno
jge
adc
mov
pop
jns
and
xchg
sub
ds
ret
mov
ljmp
or
push
xor
sar
fadds
and
shr
cltd
fistpl
repnz
mov
sbb
lea
dec
lret
mov
cmc
adc
pop
and
push
mov
aam
cmp
js
xlat
sub
mov
inc
mov
or
ljmp
rclb
push
inc
sahf
cmp
popf
push
enter
xor
jbe
mov
and
ja
mov
dec
mov
loope
lahf
cwtl
mov
daa
pushf
icebp
pop
or
loope
into
pushw
aas
xor
push
mov
movsl
lock
data16
xor
xchg
inc
jae
pop
mov
insl
cs
je
cmc
imul
popa
and
stos
aaa
mov
jmp
rorb
in
hlt
imul
dec
jns
push
xchg
in
nop
xor
mov
sarl
sub
jne
cld
out
rcrl
mov
pop
inc
insl
int3
mov
ret
cmp
cli
rorb
jecxz
xor
bound
mov
dec
push
lock
push
loop
inc
pop
adc
int3
repz
loop
xchg
call
sub
pop
out
dec
xadd
pushf
leave
or
adc
push
push
js
mov
fld
fisttpl
cwtl
and
sbbl
mov
idivl
cli
push
mov
pop
mov
insl
stos
aad
or
mov
mov
mov
jb
rol
jecxz
aam
arpl
add
mov
test
outsb
pop
add
dec
mov
inc
inc
jecxz
cltd
jns
jl
mov
dec
mov
mov
sub
lret
inc
pop
cmp
and
loope
mov
repz
and
push
sbb
pop
nop
cmc
xchg
jo
jae
in
sbb
adc
mov
pop
push
fnstenv
aam
stos
cmp
ret
pop
arpl
ja
xchg
ss
rorl
sahf
jo
push
push
arpl
push
push
outsl
or
mov
lods
divl
jl
push
ret
sarb
jle
cmpb
xor
and
je
ja
subb
jge
adc
ja
pop
jne
ss
dec
xor
int3
rclb
das
xchg
push
lret
sub
decl
dec
aad
mov
out
jae
mov
jnp
popa
mov
jbe
fmuls
cmp
push
cmpsb
pop
mov
ljmp
aas
loop
push
lret
iret
push
divb
adc
inc
cli
dec
cs
inc
sbb
xchg
pop
mov
jge
push
cmp
rcll
enter
ret
ror
scas
push
scas
inc
jge
jne
sbb
popa
add
jp
jo
lret
inc
in
out
or
mov
adc
cmp
enter
or
push
cmp
mov
adc
mov
lret
sahf
jmp
push
rclb
xor
imul
insb
pop
aaa
test
add
sub
ja
hlt
in
mov
dec
jge
iret
push
xchg
push
mov
out
mov
dec
pusha
mov
xlat
cwtl
insl
enter
sti
jae
ljmp
adc
add
sub
and
lods
cmp
pop
nop
mov
mov
dec
inc
mov
icebp
hlt
fldenv
dec
mov
pop
mov
pop
jne
and
ja
and
or
fwait
pop
add
adc
sub
icebp
mov
or
jp
push
dec
push
push
push
push
lahf
mov
inc
fstpl
jbe
out
dec
mov
lret
mul
lods
out
sti
fwait
cmp
mov
or
inc
hlt
mov
jns
or
push
arpl
loopne
xor
pushf
sbb
or
mov
popf
jl,pn
mov
ret
aaa
cmpsb
mov
xchg
cmc
into
sbb
daa
mov
mov
cmp
cvtpi2ps
pop
xor
adc
divl
add
dec
scas
fbld
cmp
sub
xchg
jbe
add
enter
mov
stos
lds
out
xchg
ljmp
mov
lods
ja
in
jge
mov
mov
or
fimull
jle
jp
ljmp
imul
dec
cli
pop
jo
mov
cmp
int3
mov
add
dec
cmpsl
sub
dec
push
stos
cmp
sbb
rcl
outsb
fstl
inc
add
cmc
test
movsb
adc
pop
popf
aas
add
dec
pop
sarb
mov
sub
clc
xorb
or
jge
mov
aam
je,pt
dec
xor
jbe
lds
vrsqrtss
sarb
and
cmpl
les
dec
xlat
fists
loope
mull
sbb
inc
push
mov
push
pop
imul
cmp
hlt
xchg
test
lret
dec
fdiv
cltd
ror
inc
inc
out
addr16
push
xchg
sub
xorb
jns
jns
test
dec
pop
inc
pop
add
divl
icebp
and
xchg
pop
dec
push
fcoml
movsl
fstps
mov
in
dec
cmp
das
repnz
movsb
test
and
sbbl
mov
sti
sub
aaa
testl
or
or
mov
pop
lcall
ja
cli
push
insb
pop
inc
movsl
dec
mov
repnz
stc
add
dec
dec
pop
pop
repnz
inc
cli
push
ret
sbb
cli
mov
xchg
nop
jo
insl
rorl
jae
sub
leave
mov
xor
jnp
jnp
int
add
clc
and
adc
jb
cmpsb
xor
aam
test
movsb
and
jnp
scas
aam
mov
or
mov
or
sub
ficoml
inc
imul
inc
gs
or
ds
pop
lods
lock
push
xchg
jle
out
pushf
jp
repnz
out
cmp
int3
sbb
jno
and
dec
mov
adc
hlt
and
xchg
push
scas
cli
in
adc
sbb
mov
pop
adc
adc
movsb
inc
test
mov
in
push
mov
into
outsl
mov
add
sbb
jecxz
jecxz
mov
adc
push
pop
mov
lcall
pop
sub
jno
movsb
and
mov
lret
adc
jae
mov
adc
jno
mov
arpl
or
notl
push
dec
adc
and
clc
push
cs
add
sbb
sub
imul
inc
dec
push
jmp
dec
or
sbb
pop
in
scas
add
or
sub
xchg
cmpsl
rcrb
fdivrl
xorb
inc
sbb
add
sub
push
popf
enter
outsb
adc
xchg
mov
xlat
fwait
clc
out
mov
xor
pop
dec
mov
test
mov
rolb
test
cmpsl
cmp
and
leave
cmpsb
mov
loope
cmp
mov
stos
int
dec
xchg
xor
cli
mov
jns
sub
adc
mov
mov
xchg
sbb
mov
rorl
push
jbe
cs
std
ljmp
aad
push
mov
xor
xchg
js
sbbb
dec
fs
repz
out
cmp
cmpsl
mov
aas
adc
mov
or
rol
imul
scas
cmp
std
or
cmpsb
and
ret
xchg
pop
aad
mov
sub
data16
sub
mov
in
sub
push
mov
insb
loop
ljmp
inc
das
xor
xchg
push
xor
sbb
inc
inc
ffreep
lock
mov
and
push
mov
into
mov
cwtl
es
jge
call
leave
pop
add
lods
mov
popl
int3
iret
or
xchg
pop
and
push
test
lock
iret
ds
or
repnz
mov
pop
and
push
mov
mov
icebp
mov
cmp
cs
rcr
scas
add
mov
sub
dec
mov
jecxz
rcrb
loopne
mov
sub
popa
and
push
add
test
cmc
icebp
cmp
push
jle
mov
nop
dec
ja
movsb
movsl
cmpsb
pop
xchg
jns
out
insb
lock
cmpl
movsl
les
pop
jl
jge
lds
or
jne
inc
cmc
push
xchg
push
lock
mov
xchg
lret
mov
fwait
in
cmp
ja
cs
test
popf
xor
jae
ja
ficoms
pop
fwait
adc
push
in
add
xchg
xchg
jnp
push
lock
mov
lcall
in
push
sbb
daa
adc
es
enter
jle
jmp
out
pushf
mov
pop
xchg
xor
adc
push
adc
pop
pop
sub
push
cmp
jmp
mov
mov
jns
cmp
inc
enter
adc
adc
lcall
push
xor
rol
dec
xor
sbb
lcall
xor
jnp
divb
adc
enter
push
xor
xchg
sbb
shlb
fwait
or
mov
in
push
data16
mov
decb
les
arpl
cs
mov
call
push
imul
push
sub
lds
adc
fnstsw
cli
aaa
jmp
shl
xor
mov
jle
and
aad
stos
xor
fisttpll
mov
and
test
rep
shll
stos
xchg
lods
loope
dec
stc
mov
nop
adc
les
jmp
ret
push
fldenv
cld
pop
add
mov
xlat
pop
out
shlb
sti
mulb
cmpsl
js
pop
js
adc
into
test
out
dec
testl
stos
cmc
pop
cmp
mov
jns
cld
cmp
outsb
les
ret
inc
lret
fsubr
dec
push
shrl
pop
hlt
push
test
lds
ljmp
sub
cld
mov
and
in
and
rcr
mov
pop
dec
adc
inc
rcr
inc
pop
rorl
mov
test
sub
xor
out
movsb
xchg
and
jne
mov
push
out
ds
sub
in
sub
jge
stos
aaa
es
fidivrl
push
jp
fldenv
sbb
popf
fnstsw
fsubs
sub
inc
xchg
mov
call
xchg
mov
js
mov
push
sub
inc
pop
inc
push
xor
bound
pop
mov
jne
rclb
xchg
jae
push
pop
shrb
arpl
sbb
sub
mov
or
aas
or
cmp
out
fwait
dec
emms
and
jl
or
mov
out
lds
test
insl
test
ljmp
mov
mov
inc
in
mov
js
sub
cli
mov
mov
or
xchg
or
adc
add
subl
and
test
call
test
mull
es
and
or
in
es
mov
inc
dec
jmp
push
xchg
sbbb
mov
inc
xchg
push
push
mov
add
cli
inc
jae
and
movsl
mov
loopne
mov
jp
test
repnz
lahf
in
adc
mov
jmp
cmpsb
cmpsb
inc
push
inc
cmp
mov
dec
lock
mov
imul
hlt
pusha
in
ljmp
test
aad
and
or
push
adc
fdivrl
nop
loopne
cmp
ficomps
xor
ret
and
leave
mulb
outsb
loope
cmp
imul
hlt
fmull
pop
aam
push
mov
pop
jb
lods
sti
enter
idivl
mov
cmp
push
jge
jle
mov
test
xchg
mulb
insl
lret
addr16
jne
fsubl
cmp
ret
adc
inc
stc
das
jge
dec
pusha
pop
dec
jo
inc
sbb
in
push
push
inc
out
or
mov
pop
out
pop
pop
mov
and
fcomi
mov
pop
cmp
mov
push
mov
movsl
pop
cs
adc
push
enter
xor
pusha
idivb
int
mov
inc
shl
add
int
xchg
push
xchg
push
mov
sub
test
adc
orb
add
sbb
xor
sahf
add
nop
push
adcl
scas
xor
mov
pop
pop
add
jbe
lcall
les
mov
xchg
jg
mov
push
jge
inc
inc
mov
pop
adc
xlat
mov
mov
cwtl
aas
inc
sub
aas
cmp
or
aam
xchg
adc
dec
pop
jmp
stc
push
xor
mov
push
loope
cmc
push
xor
mov
push
leave
push
mov
push
push
cld
add
loop
out
sub
in
inc
pushfw
hlt
call
sbb
pop
data16
lods
lret
jo
push
dec
ja
and
push
xlat
test
dec
sub
das
mov
mulb
inc
xorb
or
jne
repz
or
outsl
mov
mov
mov
sub
add
push
jp
jbe,pn
xor
es
cmp
lret
data16
jp
cltd
imul
sub
sarb
xchg
and
test
pop
into
call
into
loope
push
je
sbbl
mov
in
xor
jle
sarb
inc
fdivp
std
arpl
fisttps
push
push
adc
stos
fcomip
mov
sbb
mov
jae
loop
mov
pushf
sub
push
loop
sub
cwtl
std
adc
lret
dec
add
int3
test
fs
scas
cmpsl
xchg
fadd
cltd
pusha
jp
out
js
push
push
mov
xchg
jecxz
inc
adc
xor
and
pop
pop
popa
mov
dec
pop
imul
xchg
movsb
aam
hlt
push
push
sarb
mov
push
movsb
add
mov
sti
std
cld
mov
lock
inc
xchg
loopne
mov
lods
shl
mov
aaa
stos
push
shll
in
mov
lret
dec
mov
jmp
ret
bound
pop
sub
movsl
ljmp
dec
adc
lea
xor
sub
xchg
add
ja
push
orb
sub
imul
inc
shlb
aas
mov
arpl
iret
cltd
pop
cld
mov
add
hlt
push
mov
adc
xor
add
push
rolb
cmp
pop
push
scas
or
dec
cwtl
pop
aam
mov
or
aad
pop
pop
pop
outsl
clc
loope
adc
mov
push
pop
sbb
iret
add
repnz
push
clc
comiss
cld
adc
jns
lds
addr16
push
and
test
pop
or
or
push
fldz
mov
xor
inc
imul
mov
enter
in
xchg
xchg
push
sbb
fidivs
cmp
lret
jnp
jnp
sub
cmpsb
ss
cld
or
push
arpl
into
adc
dec
pop
adc
lock
sub
subb
pop
test
adc
add
outsb
jle
mov
inc
stc
les
rclb
shlb
push
cld
nop
adc
ljmp
push
pop
pushf
shlb
inc
jge
ds
pop
rclb
pop
jb
ret
push
xchg
pushf
adc
lods
xor
cmp
cmp
xchg
jae
in
dec
aam
xchg
dec
scas
pop
out
out
sbb
bound
mov
sub
add
lods
sbb
rcll
cmpsl
push
gs
sub
add
popa
inc
sbb
sub
cmp
loop
jae
xor
xor
push
dec
push
sub
mov
xor
pop
movsl
shrl
adc
cs
inc
push
jle
sub
lahf
out
clc
mov
mov
add
rcl
filds
lret
sbb
push
fcmovb
inc
push
inc
sbb
and
jle
add
mov
nop
jne
add
mov
pop
xchg
orl
pop
xchg
iret
rcr
jl
les
in
out
or
sbb
jb
xor
subb
xchg
add
pop
popf
jns
push
rcl
rolb
xor
dec
adc
mov
imul
lcall
xchg
sahf
pop
imul
sub
mov
test
out
push
cmc
and
repz
fidivs
jno
jge
sbb
pop
les
stc
nop
inc
or
orl
out
adc
lea
in
aam
aas
sahf
loope
mov
push
aaa
push
inc
push
add
push
jns
test
add
ret
arpl
add
std
out
test
mov
mov
cmpsl
xlat
mov
mov
jbe
mov
mov
outsl
stos
outsb
mov
fwait
loope
push
ljmp
push
add
out
out
out
mov
cmp
inc
fdivr
dec
fcomip
jge
mov
jmp
fdivs
jns
xchg
xchg
aam
push
xchg
sub
stos
xor
cmpsb
jae
dec
bound
loop
mov
imul
mov
fstl
cmpsl
cmpsb
jl
cwtl
xor
mov
les
pop
dec
add
out
lret
mov
ret
jae
fdivrl
ret
ljmp
jle
mov
loope
aaa
sub
in
lcall
jmp
add
into
imul
add
cmp
mov
mov
aaa
pop
xchg
insb
dec
fs
push
jle,pt
and
bound
mov
jae
cmp
jle
dec
xchg
and
in
or
jmp
inc
jp
test
rclb
fdivrs
push
mov
mov
and
out
sbb
vpshufd
add
pop
lret
dec
nop
hlt
lock
pop
imul
pop
pop
adc
push
or
add
dec
or
push
adc
mov
sub
lds
mov
or
jno
add
push
int
sarb
pushf
rorl
adc
pop
orl
sub
js
adc
xor
or
int3
mov
push
xor
push
mov
orb
xchg
movsl
push
and
sbb
out
mov
imul
fisubs
ja
xchg
movsb
push
fistpll
cli
mov
stc
mov
jnp
fwait
push
mov
outsb
dec
sbb
iret
outsb
jl
adc
subb
mov
rclb
jbe
fs
ret
loope
inc
pop
pop
cmp
les
xor
inc
inc
mov
mov
push
jnp
and
test
push
orb
loopne
ljmp
out
test
fstpt
lret
shr
adc
in
cmp
in
adc
xlat
xchg
iret
xchg
push
std
adc
mov
iret
dec
iret
or
cli
std
aad
add
dec
fisubs
or
sbb
jge
ret
push
and
lret
ret
xchg
jmp
and
mov
push
xor
push
test
pop
dec
push
adc
jecxz
jnp
into
push
sub
or
dec
stos
dec
sti
push
adc
xchg
jl
aad
je
stc
jns
dec
test
adc
pushf
stos
xchg
mov
add
pop
cltd
popa
cmp
jge
lret
ds
sbb
or
adc
mov
sub
dec
rolb
push
aaa
push
jno
stos
inc
fisubrs
xchg
lock
pop
adc
test
push
or
aas
lcall
pop
int
daa
iret
pop
and
call
adc
mov
pusha
pop
xchg
rol
jns
clc
mov
sahf
sbb
inc
outsl
pop
int
int3
lea
dec
and
imul
mov
add
add
ss
icebp
fistpl
cwtl
jle
insl
icebp
into
imul
fs
xor
jno
mov
jae
rcrb
in
sub
out
mov
imul
repnz
insb
push
lods
ret
mov
mov
nop
mov
negl
xchg
xchg
xor
sub
xchg
add
lds
jmp
lods
adc
out
mov
repz
pushfw
test
jmp
mov
push
sbb
dec
jo
cmpsb
xor
pop
loope
fwait
shll
cmc
dec
and
or
or
push
cltd
outsb
mov
cmpsl
push
add
cwtl
push
add
jbe
ss
sbb
xchg
mov
or
mov
jecxz
out
dec
cmp
lock
rorb
into
inc
fs
jg
nop
int
sub
popa
lret
dec
or
pop
xor
andb
sbb
inc
movsl
ret
cmp
sub
shr
test
fidivrs
jo
mov
and
jmp
test
cmpl
cmp
insb
lods
js
mov
pop
pop
mov
shll
js
or
or
arpl
rcll
mov
xchg
push
mov
nop
aad
xchg
hlt
inc
sub
and
sub
add
test
jno
pop
movl
jecxz
jnp
pushf
aaa
jb
pop
add
enter
hlt
jnp
add
adc
cmp
movsb
sub
sub
neg
or
loopne
cltd
movsb
pop
int3
and
je
push
add
sbb
cmp
xor
push
push
add
pop
cmp
cld
pop
stos
inc
test
test
dec
scas
mov
or
push
dec
cmp
mov
and
lds
pop
out
mov
fistl
mov
std
mov
lret
adc
jecxz
imulb
or
int
or
inc
pushfw
out
jmp
jecxz
cmpsb
add
sbb
ffreep
jbe
jp
jl
mov
mov
test
and
fildl
jl
jb
mov
pop
loop
shl
xor
pushf
ret
pop
lcall
subl
adc
movsb
xor
or
inc
cltd
and
fcmovnbe
dec
mov
pop
fs
dec
popa
sbb
push
sub
imul
cltd
jo
stos
adc
hlt
mov
sbb
bound
mov
cmp
fisttpl
sti
jmp
in
mov
lret
fimuls
and
pushf
mov
xlat
pusha
jne
mov
or
mov
mov
lods
push
sub
inc
sbb
in
lock
lret
data16
xchg
adc
loopne
pop
ror
testl
movsl
outsl
testb
adc
fistps
in
jae
cs
jmp
sub
lock
mov
test
adc
test
xchg
int
mov
adc
into
pop
sbb
movsb
dec
fdivl
fwait
inc
inc
xchg
idiv
outsl
or
or
jmp
inc
leave
xorl
ss
sbb
and
mov
lret
gs
sbb
or
stos
cld
push
dec
add
hlt
fldcw
dec
adc
test
dec
mov
xchg
dec
push
mov
xor
rcrb
and
repnz
mov
push
dec
mov
scas
mov
mov
xchg
mov
sub
inc
notl
lods
inc
cwtl
mov
sahf
push
popf
out
cmp
adc
push
pop
mov
sbb
sub
jnp
imul
repnz
mov
xor
ret
add
jp
cmc
mov
xor
call
addb
clc
lret
outsl
rorb
inc
test
sub
outsl
stos
mov
pop
aaa
out
adc
add
inc
sub
std
bound
mov
mov
sti
das
dec
fsubl
xor
dec
rcrl
add
lret
sbb
adc
sahf
ret
sti
fldenv
pop
lcall
add
rcll
xchg
add
fs
lds
add
jne
pop
add
clc
push
mov
fsubrs
ds
add
and
rcrb
popa
push
gs
sarb
hlt
loop
push
sahf
mov
out
int3
sbb
out
imul
out
inc
adc
mov
nop
fwait
stc
into
ljmp
mov
sbb
icebp
mov
aam
sbbl
inc
cmc
sbb
sub
scas
mov
cmp
rcrl
test
pop
fsubp
shll
pop
repnz
in
sub
scas
pop
mov
mov
cmp
dec
outsl
inc
pop
inc
mov
xlat
mov
sub
fucom
push
std
xor
adc
and
call
jp
lret
pop
mov
push
xchg
xor
dec
or
inc
mov
ret
xor
pusha
jmp
fistpl
cmp
lcall
push
sub
shlb
jno
popa
sub
scas
aaa
ds
adc
push
lds
jmp
pop
in
mov
loopne
scas
jl
rol
outsl
jae
lds
and
nop
mov
outsb
sub
out
int
cmp
xchg
xchg
xchg
push
stc
outsb
cmp
daa
adc
ds
enter
and
or
and
in
sbb
xchg
ja
lock
adc
test
sub
inc
mov
sub
lahf
jmp
enter
rorl
push
push
iret
aam
aad
pushl
push
jmp
sbb
jl
push
fidivl
cs
jb
test
jno,pn
xor
xor
add
push
xchg
addr16
inc
daa
inc
test
and
in
mov
xchg
inc
pop
rcrb
cmc
pop
dec
inc
push
je
push
icebp
cmp
cs
lcall
mov
loop
jae
push
addr16
movsb
fisubl
clc
mov
loope
icebp
imul
sbb
imul
mov
cmp
into
repz
pop
lahf
rcrb
sbb
xor
outsb
fnsave
sbb
div
data16
je
lods
jno
iret
or
ss
int3
lock
xchg
mov
add
fs
loopne
testb
dec
pop
aaa
mov
cltd
jbe
pushf
pop
mov
lret
pop
jle
ja
js
in
sbbb
cld
scas
inc
lods
or
pop
lods
mov
movsl
shl
lds
push
sub
outsb
out
or
sbb
mov
xchg
in
fwait
push
xchg
add
loop
or
pop
call
cmp
scas
rorb
push
lds
dec
add
adc
push
inc
sbb
sub
adc
mov
loope
rcrl
mov
out
jae
movsl
andl
sti
mov
fcoms
loopne
xchg
ljmp
jne
xor
or
pop
in
imul
stc
sub
enter
jl
mov
xlat
xchg
sti
ss
or
int3
jmp
cwtl
sub
dec
mov
pop
out
pushf
fsubp
in
jnp
jge
addr16
fcom
nop
sti
jmp
shl
mov
pop
fsubrl
js
lret
mov
ss
nop
jnp
sbb
mov
imul
mov
scas
out
lods
sbb
sub
cli
sub
fs
sbb
pop
mov
pop
pop
clc
cwtl
and
and
adc
jns
xchg
and
loopne
jne
cmpb
push
lock
dec
lods
jo
mov
adc
dec
out
out
sbb
loop
cmp
or
mov
mov
enter
mov
mov
inc
cmc
dec
arpl
rolb
push
jns
imul
std
rcr
push
xchg
sbb
push
stos
test
in
xchg
push
mov
in
mov
nop
icebp
dec
lods
std
icebp
xchg
clc
je
jle
cltd
cli
sti
les
inc
pushf
call
mov
and
or
ljmp
cmovbe
and
hlt
orl
cmpsl
loope
and
add
iret
shlb
loopne
push
and
mov
cmc
testb
sub
or
mov
cmc
ret
loop
push
or
je
sub
push
dec
adc
pop
lret
sti
sbb
iret
hlt
iret
xchg
mov
mov
push
pop
fdiv
cmp
mov
mov
adc
test
mov
xor
mov
and
loopne
sbb
dec
sbb
into
arpl
int
xchg
dec
pop
or
mov
mov
shrb
mov
popf
sub
imul
xchg
dec
enter
cmp
icebp
pusha
hlt
push
nop
aaa
lret
cli
xchg
daa
sarb
cmp
inc
sarl
pop
push
dec
add
mov
gs
cmp
xchg
adc
rcll
xchg
lds
sub
jae
movzbl
push
popl
aas
inc
and
push
xchg
addr16
rcrb
imul
push
inc
aas
xchg
add
daa
mov
sub
out
push
lcall
dec
aam
jg
add
lahf
adc
ss
push
fnsave
outsl
mov
or
cmp
cmp
mov
cmp
sbb
cmp
inc
cmp
outsl
xchg
dec
xor
insl
pop
dec
lret
xor
mov
pop
xchg
mov
test
mov
push
out
scas
push
inc
arpl
cmp
mov
ds
inc
dec
push
mov
jb
xor
xor
push
pop
sarb
inc
mov
cmp
mov
or
lret
repz
xchg
popa
test
cmp
sub
movsb
gs
imul
stos
xor
sub
mov
test
xchg
and
out
out
push
outsb
lahf
imul
scas
push
mov
cs
aam
and
insl
iret
add
dec
lds
insb
shll
dec
mov
out
ficompl
push
sub
xchg
sub
xlat
mov
rcr
inc
popf
lock
test
xchg
cmp
inc
or
and
les
cmp
jp
aad
es
daa
xchg
mov
dec
sbb
inc
ret
lea
cmpsb
sbb
cmp
xchg
ret
mov
in
fidivs
dec
dec
psubw
mov
sbb
push
popa
jae
mov
daa
in
push
mov
test
mov
rclb
loope
stos
and
test
lahf
in
adc
xchg
jg
out
test
icebp
jne
ljmp
mov
shlb
cmp
shrl
sarl
ret
pop
dec
inc
jmp
fcompl
out
iret
or
loope
mov
bound
fisubs
mov
int
test
push
xchg
sbb
and
mov
cs
push
pop
sbb
mov
push
shl
jle
fldt
pop
imul
data16
push
imul
fucomip
xchg
arpl
inc
jo
dec
push
pop
cmp
ja
fs
xchg
mov
fiadds
adc
sbb
push
xchg
ljmp
mov
out
adc
and
adc
jb
sbb
jb
push
js
mov
aam
push
rcll
ss
in
out
loope
sbb
test
ljmp
lods
cmp
test
jbe
xchg
loope
fsubrs
popf
xchg
scas
addl
sub
aaa
inc
rcrl
lret
mov
sub
rcrb
in
test
mov
mov
sub
push
xlat
in
xor
xor
pop
xor
and
mov
std
jl
push
pushf
imul
inc
js
jecxz
test
sub
fcomp
mov
xor
loope
lahf
std
in
lret
push
dec
or
push
xor
das
movsl
arpl
inc
push
dec
mov
push
test
vpcmov
push
loop
xchg
shl
cmp
adc
fistpl
mov
cmp
pop
imul
cmp
imul
test
or
mov
xlat
or
cld
mov
lds
jbe
and
repz
popa
sbb
jecxz
mov
js
adc
push
sbb
out
movaps
mov
push
shrb
mov
les
sahf
mov
repz
pop
dec
dec
icebp
sbb
movsb
scas
mull
sahf
dec
int
pop
into
cld
inc
xor
aas
fs
jge
loopne
lahf
sbb
mov
lds
sbb
xchg
adc
imul
fidivrl
inc
std
shlb
lds
test
jle
aas
ficoms
stos
push
inc
cmp
inc
hlt
cli
ffree
fmul
adc
cmpsb
xor
mov
push
jmp
mov
paddq
out
movsb
adc
adc
jmp
popa
aam
mov
or
mov
imul
mov
into
shlb
adc
pop
jmp
in
mov
adc
jb
pop
mov
ss
pop
icebp
add
fstpl
stos
into
mov
ljmp
push
and
jecxz
aad
mov
xor
or
mov
jle
mov
jno
cs
mov
rcrb
cmc
fnstcw
sbb
loopne
xchg
int3
test
test
mov
dec
mov
push
cs
push
adc
call
cmpsb
pop
iret
aaa
divb
clc
out
rclb
or
push
jmp
arpl
mov
es
jmp
sbb
enter
fdivs
push
dec
lock
fwait
xor
or
dec
adc
mov
jl
and
in
ficomps
out
inc
sbb
addr16
test
ljmp
pop
add
inc
push
mov
or
or
inc
mov
mov
bound
pushf
test
int
cltd
push
sbb
mov
sub
adc
mov
data16
jmp
arpl
sbb
inc
fidivs
mov
add
pop
scas
push
jp
mov
lods
mov
cmp
lcall
out
les
data16
inc
pop
inc
inc
pop
jg
pop
dec
xchg
mov
add
xorb
sub
mov
mov
add
arpl
loope
push
dec
je
idiv
adc
icebp
fbld
rol
int3
xor
dec
andl
xchg
adc
inc
mov
js
mov
mov
pop
xchg
cmp
push
jb
xchg
scas
push
adc
mov
adc
pop
push
adc
dec
mov
xchg
out
dec
outsl
out
decl
stos
out
movsb
mov
in
and
push
pop
jne
inc
xchg
fistpl
xchg
mov
mov
jns
mov
mov
jo
int
mov
enter
mov
fnsave
addb
orl
inc
push
add
mov
sub
jmp
push
icebp
int3
mov
gs
stos
and
or
push
iret
imul
das
and
jecxz
lods
clc
in
inc
jo
push
subb
inc
sbb
sub
mov
hlt
sub
outsb
test
lea
or
lods
icebp
push
sbb
xchg
mov
sub
out
ljmp
mov
stc
fcompl
cmpxchg
dec
inc
jnp
sub
push
jl
inc
and
mov
dec
aas
arpl
adc
repz
jl
das
cltd
sub
inc
adc
or
test
fldl
dec
jmp
mov
pop
mov
sahf
add
inc
in
cltd
dec
xor
fistpll
movsb
cs
sbb
xchg
and
or
loope
ja
push
xchg
sti
mov
mov
mov
xchg
adc
and
xor
sbb
std
sbb
mov
daa
mov
popa
jbe
add
cmpsb
insl
sbb
push
call
jmp
pop
pop
pusha
or
inc
inc
cmp
cmc
aam
xor
and
jb
lret
or
inc
movsl
mov
mov
mov
and
in
inc
cltd
cmp
mov
push
cmp
call
xchg
mov
and
repnz
inc
hlt
and
cltd
inc
dec
mov
push
mov
xlat
xor
sbb
xchg
cmp
aam
ret
push
push
fldl
lods
lock
aaa
xorl
and
movsl
fistpl
test
mov
or
jle
add
sbb
mov
xchg
js
lret
sub
icebp
jb
fdivr
inc
mov
fistps
xor
ficoms
outsb
repz
and
mov
call
sbb
or
lahf
fbld
dec
loop
jb
adc
lret
ja
cltd
xchg
pop
sbb
std
mov
push
pop
lea
and
push
cmp
xor
inc
mov
pop
sub
sbbb
mov
xlat
mov
and
sbb
rorb
clc
inc
cmpl
jae
in
push
mov
mov
rcrb
iret
add
scas
scas
mov
hlt
sarl
call
xchg
inc
push
sahf
cs
inc
js
xor
xchg
jnp
pop
xor
cmp
test
sbb
andb
push
shll
xchg
xor
inc
xchg
shrb
nop
fisttps
ljmp
adcb
xor
dec
xchg
or
fwait
scas
leave
sbb
inc
pop
cmp
or
lods
addl
mov
into
cmc
mul
xchg
dec
test
pop
lcall
jp
push
lds
pop
pop
flds
xchg
pop
repnz
push
or
add
xchg
jg
dec
cmp
bound
roll
mov
shrl
mov
fs
call
push
jbe
mov
and
adc
cmpb
pop
aas
adc
or
push
addr16
nop
mov
cmp
sub
cwtl
int
test
cmp
cs
repz
jbe
jo
movsb
cmpsl
push
adc
push
xor
sbb
das
xor
xchg
pusha
adc
push
mov
xchg
sbb
stc
mov
cmp
int
test
rcll
movsb
fcom
adc
pop
mov
mov
mov
cld
roll
or
add
mov
adc
in
push
xchg
and
add
mov
out
roll
loope
xlat
jl
popl
ss
aas
fdivl
fnsetpm(287
cmp
movsl
adc
mov
int
lcall
daa
notb
push
inc
rorl
cmpsb
xor
push
je
test
mov
ss
mov
lods
add
fldcw
dec
jne
ds
shrl
push
pop
mov
andl
out
jo
iret
aaa
mov
lods
inc
and
xchg
in
psubw
xchg
push
mov
dec
push
adc
xor
adc
xor
je
imul
push
mov
dec
insl
stc
and
xchg
pop
rclw
repz
rcrb
mov
imul
adc
jns
mov
or
data16
ret
repnz
pop
cmpsl
mov
scas
mov
pop
subb
sbb
push
cmp
js
subb
jge
jmp
mov
adc
inc
int
pop
add
test
push
out
fdivs
xor
ret
push
ja
jo
push
inc
jmp
cwtl
jb
fldenv
std
in
stos
pop
dec
cmp
lock
push
pop
pop
xchg
sub
lea
loopne
lret
sub
inc
subl
outsl
in
lcall
mov
add
jno
sbb
and
testl
or
xchg
or
movsb
arpl
inc
ds
cmp
pop
inc
adc
lahf
and
aam
ret
cmpsl
mov
mov
stos
mov
jns
loop
xchg
push
mov
sub
mov
add
inc
ss
cmp
add
add
dec
sti
popf
cli
sub
ljmp
fcomp
and
ss
ss
xchg
frstor
or
ret
cmpsl
roll
sbb
cld
into
jno
or
push
fldcw
out
lds
mov
sub
and
xorl
mov
mov
cmp
mov
jmp
sub
loope
and
scas
adc
cltd
call
push
sbb
sbb
test
dec
add
push
aaa
imul
push
pop
sub
xor
push
lods
jns
mov
enter
sbb
loope
rcll
movsl
call
and
and
icebp
sub
mov
mov
lods
pop
sub
inc
jns
pop
mov
sub
lods
push
pushf
movsl
cmc
push
mov
mov
loopne
loopne
scas
ljmp
jns
ja
cli
push
lahf
lods
mov
hlt
cs
mov
loope
push
xchg
or
jl
pop
push
loop
loopne
mov
add
or
dec
and
out
ljmp
adc
psubd
jmp
mov
dec
or
lret
push
lahf
mov
cmc
outsl
mov
push
movsb
sub
lods
jne
sub
fmulp
xchg
dec
jb
push
mov
inc
add
pop
std
rol
and
test
popf
and
and
add
mov
sub
lahf
dec
ss
cld
dec
or
stos
stc
jmp
pcmpeqd
lahf
lret
mov
push
out
inc
inc
jnp
mov
lret
pop
fiadds
push
xchg
inc
push
jno
adc
imul
sbb
mov
es
jno
xchg
scas
xchg
cs
xor
fbld
loope
dec
cmp
jmp
sbb
mov
and
jl
xchg
push
sub
orb
daa
mov
test
xchg
pop
dec
loopne
pop
sti
mov
pop
adc
mov
inc
shl
or
cmp
leave
mov
sub
aas
cmp
or
push
mov
gs
dec
out
push
cmp
cltd
unpcklps
mov
sub
dec
mov
xchg
fcoms
je
and
jp
call
pop
das
rclb
stc
jecxz
pop
jg
mov
lahf
add
pop
and
cltd
aam
xor
roll
out
aad
sub
pop
cmc
jmp
push
xor
addl
cltd
in
insl
inc
loope
adc
int
addr16
jns
cmc
adc
inc
xchg
add
jmp
dec
mov
addl
rclb
outsl
sbb
arpl
mov
testl
test
pushf
dec
xchg
jge
sti
push
jo
mov
or
jo
xor
xchg
int
jns
stos
arpl
leave
dec
mov
sub
sub
inc
push
inc
ret
mov
jg
jmp
sahf
pop
sbb
push
sbb
jns
jo
add
in
push
test
pop
idivb
mov
pop
lret
jns
add
mov
inc
enter
jnp
ret
sub
faddl
leave
jnp
adc
push
dec
loopne
xchg
sahf
enter
rol
mov
dec
and
enter
in
xchg
mov
jle
mov
cmpsl
pop
stc
out
js
gs
mov
jae
into
lods
lcall
ljmp
sbb
push
loopne
loopne
mov
xchg
loope
dec
xor
les
popf
mov
dec
mov
mov
pop
sub
int3
jg
in
hlt
dec
movsb
rcll
aad
xchg
adc
stos
aam
stc
xchg
ret
scas
xchg
and
cmp
jo
flds
int
sahf
aas
ss
je
imul
sahf
push
cmp
shl
movsb
or
jne
addr16
sti
jl
xorb
cltd
push
xlat
jp
iret
cmpsl
sub
mov
lret
or
ds
lods
hlt
loope
mov
pop
fimull
inc
or
or
jge
test
mov
shll
inc
nop
xchg
stos
xor
mov
adcb
push
clc
outsb
subl
jae
lahf
jae
repz
clc
pop
cmp
ljmp
pushf
ror
push
popa
cmp
addr16
addl
sbb
and
sbb
and
jg
dec
and
or
shlb
adc
ljmp
push
into
xchg
stos
movsl
cmp
inc
sahf
or
push
jbe
shl
push
inc
ljmp
loopne
inc
xor
outsl
cmc
in
add
pusha
ss
in
add
fnop
xor
inc
cltd
sub
xlat
add
js
sbb
out
out
es
sub
jle
pusha
pop
xor
jp
mov
inc
xor
push
popf
fldenv
xor
push
pop
and
imul
subb
popa
inc
data16
sub
adc
pusha
jb
das
nop
sub
data16
mov
les
sbb
ljmp
stos
in
pop
add
mov
cld
fistpl
mov
adc
clc
mov
pop
sbb
sarl
lods
lret
sbb
mov
insb
mov
fdivl
and
adc
cmp
mov
xor
cmp
and
xor
xor
lock
and
mov
or
pop
cmp
test
insl
fwait
sti
and
mov
imul
sub
sbb
pusha
fists
hlt
push
call
dec
xchg
sbb
lods
roll
loopne
and
mov
adc
cli
out
mov
xor
in
and
pop
das
mov
lret
in
lret
and
xchg
lret
shlb
stos
test
test
xchg
movsb
push
and
sar
test
push
popf
inc
pop
sub
or
lret
mov
cbtw
enter
mov
push
scas
jbe
shrb
roll
dec
outsb
jnp
pop
adc
xchg
stos
mov
sbb
push
lds
push
sahf
aas
cmp
insb
push
mov
cmp
jge
cmp
imul
push
aaa
leave
adc
xchg
out
lcall
cmp
daa
cltd
gs
cwtl
loop
inc
lret
arpl
les
inc
aas
fwait
sbb
mov
dec
jnp
pandn
xor
xlat
jmp
icebp
ljmp
xchg
stos
fwait
insb
fisttps
push
cwtl
shlb
pop
fwait
repnz
iret
or
dec
icebp
repz
mov
add
stos
stos
test
dec
scas
stc
fcmovne
jno
pop
out
les
je
push
xor
lret
jno
lcall
loope
mov
scas
out
test
pop
push
xchg
mov
dec
xchg
push
dec
loope
jmp
mov
pop
inc
daa
adc
decb
and
xchg
jns
and
inc
xchg
je
mov
pop
repz
loop
push
cmpsl
dec
mov
mov
mov
test
pop
outsl
jnp
or
sar
mov
fs
rorl
stos
xor
dec
es
stc
clc
mov
out
cmpsb
addl
scas
inc
repnz
lahf
pop
add
fsubs
cli
das
xor
or
sti
mov
mov
lds
je
loope
and
les
sbb
arpl
or
adc
cmpsl
lret
add
cltd
out
sub
dec
sbb
sub
or
divl
cmp
jb
mov
mov
rol
aaa
incb
mov
pop
inc
loop
notl
push
xor
sub
push
je
and
jp
xor
or
cltd
adc
xor
xchg
lods
ds
xchg
lret
stc
enter
stc
aad
sbb
popf
pushf
sub
sub
pop
xorb
xchg
mov
into
mov
imul
pop
jae
sbb
icebp
ss
dec
mov
imul
xor
push
add
push
addb
push
xor
fistl
mov
dec
pop
jo
inc
sub
cmp
data16
mov
push
mov
jmp
and
push
ljmp
shl
xchg
insl
decl
mov
ret
ficompl
daa
push
test
cwtl
or
push
mov
jo
dec
mov
jbe
popa
inc
jg
pop
sahf
into
test
in
jl
cmc
cmp
push
sbb
and
xlat
out
loopne
xlat
das
mov
mov
out
pop
jecxz
cmpsl
xchg
mov
dec
lods
rorl
in
or
or
xchg
popf
dec
lds
add
nop
add
adc
in
sbb
inc
stos
int
xchg
mov
fcoms
mov
xchg
jecxz
test
adc
fidivs
roll
push
call
ja
shrb
ds
lret
and
not
ret
jp
push
cwtl
cs
test
scas
xchg
add
aad
jb
and
cltd
adc
xor
sub
xor
add
push
int
ljmp
mov
pop
outsb
adc
inc
jg
inc
fstl
jae
adc
xor
cmpsb
add
push
neg
push
in
mov
mov
xchg
lret
cmc
pop
lcall
arpl
imul
dec
cmp
jmp
stc
adcl
out
cmp
inc
xchg
mov
or
and
outsl
jp
mov
sti
out
pop
hlt
add
not
sahf
test
ljmp
inc
mov
test
iret
jge
mov
hlt
ja
nop
inc
jle
xchg
iret
test
jl
daa
jp
mov
xchg
into
cmp
mov
shll
push
cltd
dec
cmp
xlat
sub
in
popf
add
rcrb
fisubrl
addl
xor
outsb
jb
ljmp
mov
mov
push
popa
leave
xchg
xor
jmp
mov
xchg
add
not
aas
popa
cmp
or
scas
loop
or
mov
inc
pop
jg
scas
jae
jge
add
add
add
push
int
lret
in
push
int3
test
adc
inc
xchg
loop
or
lods
idivl
fcmovnu
jnp
aad
mov
push
psrlw
push
push
sbb
cmp
xor
gs
inc
lahf
push
sbb
in
and
pop
inc
mov
inc
push
ss
sbb
and
shll
aaa
inc
icebp
or
fimuls
mov
clc
pop
nop
sub
push
je
pop
adc
jno
cli
gs
faddp
push
roll
fcoml
loopne
xchg
pop
ljmp
mov
cmp
lods
mov
movsb
jl
push
roll
in
dec
push
xorb
and
xchg
cmpsl
inc
inc
leave
xchg
adc
test
out
popf
insb
add
xchg
sahf
sbb
clc
mov
or
enter
fldt
aad
cmp
movsb
incb
mov
loop
inc
shlb
push
and
jle
xor
xchg
je
mov
int3
imul
adc
lret
je
jmp
mov
shrl
das
call
jp
and
mov
jnp
cltd
inc
jecxz
in
jge
sbb
rclb
mov
into
sbb
insl
dec
cmp
add
imul
scas
popa
hlt
push
out
rcl
ja
mov
mov
movsl
dec
add
or
aaa
mov
loop
rol
inc
lahf
stc
jnp
and
xchg
clc
xor
push
stc
mov
mov
sub
aas
add
fwait
or
lcall
cmp
out
dec
in
mov
scas
lret
sub
cmp
xor
sahf
sub
or
pusha
cld
std
xorb
rcrl
add
stos
std
dec
xchg
cmp
jecxz
pop
lcall
push
out
add
xor
and
sbb
cld
aaa
outsl
fst
sbb
push
lahf
inc
int
jge
lret
fbld
mov
cltd
jg
jmp
bound
inc
ja
mov
or
std
xchg
fcomps
call
adc
jbe
xchg
sbb
inc
movsb
sahf
cmpb
push
ret
shll
or
lods
lret
xchg
aaa
cmp
adc
sub
scas
push
cmp
dec
push
fstpt
mov
test
xor
fldenv
leave
es
mov
mov
push
pop
push
mov
lock
jne
cltd
push
and
cld
rolb
or
xor
mov
dec
adc
stos
pop
pop
mov
inc
lods
xchg
scas
mov
and
sti
lock
and
jecxz
push
push
push
add
movsb
es
ret
hlt
cld
imul
bound
sbb
jbe
push
test
cld
xchg
sub
addl
add
lcall
push
and
pusha
enter
mov
andl
ss
mov
aaa
fcompl
add
mov
movb
xchg
es
and
aaa
es
test
cmp
stos
stos
cmp
add
inc
dec
rorb
mov
dec
clc
inc
enter
enter
dec
lret
lock
mov
push
fcomp
cmp
xor
mov
xor
inc
cmpsl
arpl
push
out
lcall
lahf
test
adc
mov
adc
jbe
or
inc
xlat
xchg
shll
push
adc
fldt
xor
faddl
loop
enter
pop
aad
insl
jnp
push
jmp
gs
fsubl
xchg
and
cmpsl
xlat
fnstcw
fwait
sti
push
push
sbb
mull
rorl
cmp
lods
loope
into
or
add
icebp
stos
jp
push
dec
scas
xchg
sub
jb
dec
call
mov
jle
iret
nop
in
xchg
fisttpll
and
add
lcall
adc
push
jl
xchg
pop
subl
xchg
cmp
stc
fstpl
fdiv
dec
xchg
lcall
cmc
sbb
hlt
das
jle
jae
jns
push
jge
jge
jae
mov
mov
cmp
mov
push
adc
xlat
inc
pop
pop
mov
std
jbe
ret
xlat
shlb
xor
xor
mov
dec
int3
push
or
sbbb
push
mov
mov
mov
pop
in
xchg
and
aaa
dec
and
iret
sahf
fistpl
repz
data16
in
gs
pop
popf
aad
pop
inc
mov
and
outsb
or
scas
or
fldcw
xor
sarl
fwait
jbe
mov
in
pop
mov
mov
xor
pop
dec
push
call
xchg
jge
adc
mov
repz
dec
addr16
pop
loop
mov
mov
sahf
jle
jb
xor
sbb
fwait
push
jmp
imul
fldt
sub
mull
mov
mov
stos
iret
xor
mov
daa
cmp
push
mov
arpl
movsb
adc
js
pusha
lods
cmp
jmp
daa
scas
fldcw
aam
lea
pusha
add
fcomp
sbb
push
leave
add
hlt
jl
fisubrs
jmp
das
xor
mov
xor
mov
jns
adc
ss
mov
mov
add
int
xchg
pop
subb
lcall
es
aas
pop
cli
fcmovbe
rcrl
dec
scas
mov
not
cmc
into
cmpsl
out
out
mov
mov
test
adc
xlat
insl
push
dec
cmp
push
inc
aad
shrl
pop
xor
adc
mov
pop
cld
outsl
pop
xor
fistpl
loopne
jmp
stos
and
adc
int
enter
mov
lock
inc
jns
ret
jne
pop
jo
push
bound
stos
push
mov
mov
jl
cmpsl
lahf
push
aas
xchg
lods
push
mov
add
and
out
xor
xchg
bound
in
inc
ljmp
xchg
lods
and
mov
shlb
inc
inc
adc
dec
and
fwait
inc
addr16
in
pop
sbb
or
in
movsb
or
mov
mov
adc
xchg
neg
sub
pop
or
lods
sarb
jnp
cltd
inc
adc
mov
inc
sub
mov
mov
ljmp
cmc
xor
fcoms
pushf
clc
or
pushf
adc
repnz
adc
les
cmp
je
jge
or
push
add
pop
add
jo
jo
add
not
out
lahf
mov
sbb
pop
movsb
lret
into
int3
in
fidivrs
lret
sub
int3
data16
adc
mov
bound
and
stos
int
je
sub
sub
in
stc
xor
rorl
xchg
push
lods
inc
push
in
fistps
in
ds
push
enter
mov
ljmp
pop
or
add
lock
cld
jae
pushf
test
aam
mov
aad
mov
or
int
mov
lret
lds
xor
mov
enter
xchg
lcall
sub
sti
mov
cmpsl
push
push
rcr
and
std
bound
push
push
push
jecxz
stos
hlt
sub
push
mov
ja
sub
leave
push
push
stos
inc
insb
imul
ljmp
lahf
out
sti
and
pop
add
jb
imul
and
jae
outsl
mov
add
test
insb
sar
insb
ds
les
or
mov
mov
dec
lret
dec
aam
push
lock
and
add
mov
pop
outsl
insl
and
cwtl
push
push
xor
push
cmpsl
sub
ror
dec
push
pop
inc
test
cmp
shll
jne
jno
inc
out
sbb
jmp
push
adc
fidivrs
mov
mov
ljmp
outsl
jns
aad
pop
jne
inc
dec
jecxz
xchg
jp
popf
jno
sub
and
dec
les
sub
leave
jns
bound
call
inc
arpl
dec
dec
les
bound
adcb
xchg
mov
mov
lahf
dec
mov
or
sub
sub
stc
sub
dec
pop
push
push
test
push
push
push
xchg
and
inc
sbb
cltd
outsl
pop
hlt
add
cli
jo
pop
out
out
adc
jle
leave
push
ret
shrb
adc
mov
lds
mov
or
xor
or
fdivr
push
jecxz
xor
shlb
loopne
mov
cmp
mov
arpl
xchg
dec
sbb
call
loope
bnd
pop
hlt
fnsave
imul
pusha
or
or
xchg
in
inc
jae
jp
xor
cs
mov
movsb
cmp
pop
xor
insb
mull
ds
jo
push
ret
imul
dec
outsb
pop
in
mov
leave
sbb
inc
sbbl
pusha
andl
or
dec
movsb
pop
mov
push
ljmp
push
movsb
mov
xchg
xchg
ftst
xor
mov
pop
sub
pop
adc
out
std
iret
movsb
add
mov
mov
push
stc
xor
pop
ss
loope
mov
and
pop
daa
lret
xlat
xchg
inc
test
mov
sub
dec
test
mov
xor
adc
sarb
inc
dec
xchg
loop
dec
push
shlb
mov
sahf
push
imul
scas
ljmp
ljmp
subl
mov
inc
dec
fmuls
lcall
cmc
and
xchg
aad
push
mov
inc
sbb
js
push
enter
fdivrs
adc
call
in
mov
aaa
sbb
fwait
pop
pop
pop
cwtl
dec
dec
add
pop
and
dec
rcll
mov
iret
xor
jle
clc
test
mov
sub
jo
out
mov
loop
loopne
mov
xlat
es
cltd
mov
mov
repnz
cmp
inc
hlt
inc
mov
scas
add
daa
clc
xor
stc
repz
aaa
sbb
xchg
dec
dec
inc
cli
mov
dec
mov
bound
sbb
add
roll
iret
mov
fs
inc
mov
cmpl
xchg
arpl
fidivrl
and
sub
sarl
sbb
jno
fbld
out
xchg
lcall
pop
xchg
mov
repnz
enter
mov
out
pop
add
lods
xor
xlat
cmpsl
jne
dec
and
movl
adc
cwtl
jbe
les
enter
mov
sub
add
jg
popa
fs
and
or
rorb
loop
movsb
cli
lret
call
mov
jne
push
cli
pop
pusha
adc
lcall
lods
test
aas
jb
imul
dec
cmc
push
sub
in
mov
pop
sub
mov
xor
outsl
mov
out
fisubrs
bound
enter
scas
decb
cli
sarb
mov
and
or
inc
xchg
push
roll
or
scas
out
fistps
jecxz
fs
push
or
lea
ret
sub
inc
scas
adc
mov
inc
cli
in
cmc
mov
and
or
pushf
ret
inc
aas
lcall
inc
sbb
in
push
mov
xchg
lock
inc
jle
ljmp
or
dec
aad
adc
mov
loope
cwtl
ret
bound
mov
fnsave
cmp
xchg
lahf
adc
cmp
push
rorb
sub
sahf
xchg
jmp
pop
push
dec
xchg
xchg
inc
fmulp
xchg
and
xor
push
xor
dec
sub
push
push
inc
mov
pop
dec
mov
pushf
push
in
mov
in
ss
pop
stos
push
adc
mov
jmp
popa
add
push
les
or
mov
or
and
hlt
push
mov
mov
add
insb
stos
jge
push
add
jbe
fists
xor
xchg
fstpl
repz
int
out
xor
or
xchg
sbb
add
cmp
push
sbb
dec
jno
xchg
adc
jb
shll
sub
xchg
mov
jne
push
xchg
push
int3
push
push
test
xchg
dec
jge
std
sbb
mov
aam
daa
inc
or
pop
lret
and
cmp
and
adc
or
adc
lret
fcmovne
loop
add
rorl
jmp
push
es
jecxz
mov
and
mov
popa
loop
mov
sahf
jb
dec
lret
jge
xor
mov
mov
and
dec
loopne
or
mov
lret
mov
xor
aad
xor
adc
dec
pop
cmp
mov
or
adc
inc
sahf
jb
mov
sbb
dec
fld
jp
negl
dec
shrd
adc
mov
cmp
cmpsb
mov
push
ss
xchg
and
mov
popf
add
push
fwait
push
leave
adc
scas
iret
xchg
rcrl
adc
push
add
mov
xchg
pop
aaa
ror
clc
jne
test
xor
rorb
in
negb
add
push
fsubrs
out
xor
ss
cmp
xchg
mov
mov
nop
mov
sbb
push
pop
sbb
mov
inc
cmp
inc
das
adc
mov
loopne
imul
and
popf
sub
inc
jo
xchg
lahf
repnz
or
pop
inc
pop
xor
jg
jecxz
adc
and
cltd
inc
and
mul
push
out
lahf
cmp
mov
int
jae
fwait
xchg
cmpb
test
sbb
inc
xchg
and
or
jne
adc
test
stos
lds
sar
lea
pop
outsb
sub
out
add
push
lret
insb
sti
js
iret
add
sub
xchg
addr16
cmp
nop
add
cmp
xlat
sub
mov
ja
in
mov
and
dec
dec
fcomps
js
ret
mov
cmp
adc
and
dec
sub
addr16
or
and
sbb
cld
cld
mov
or
movb
cmpsl
adc
shll
xlat
dec
adc
repnz
iret
cltd
loopne
jae
cmp
es
mov
mov
jge
adc
adc
pop
xchg
ja
movsl
mov
enter
xor
pop
xchg
ret
sarl
cmp
cmp
adc
ja
insb
push
and
test
push
int3
pop
cli
adc
mov
jo
stos
mov
push
add
imul
loopne
lret
sbb
sub
adc
jbe
mov
push
movsl
push
rorb
fistl
inc
notl
cmpl
cmp
mov
ret
sbb
sbb
sbb
pop
cmp
mov
rcl
jp
sbbl
test
js
inc
das
cmc
outsb
out
mov
enter
add
pop
pusha
mov
into
xor
jle
rcr
push
in
or
mov
fs
faddl
mov
icebp
out
jg
mov
cmpsl
ss
pop
push
adc
movsb
push
or
mov
pop
popf
outsl
sbb
jl
pop
or
popf
mov
adc
rcrl
and
xor
or
fs
lds
ret
into
mov
lds
fwait
push
push
mov
ret
sub
mov
sub
xchg
push
or
inc
jae
jno
dec
call
outsb
cs
xchg
cmp
mov
dec
movsl
cmp
mov
movntps
ja
cmp
xor
leave
cmp
into
pop
mov
inc
sbb
mov
pop
repnz
push
sbbl
xor
dec
mov
mov
loop
test
cs
loopne
imul
pop
sbb
clc
mov
adc
cmp
insb
push
pop
decb
in
mov
xchg
xor
adc
mov
out
pop
loopne
orl
mov
push
repz
xor
or
jge
call
sub
jne
push
cwtl
shrb
cwtl
inc
and
js
xor
inc
pop
test
cmp
pop
jl
aaa
inc
inc
lods
pop
fstl
pop
mov
mov
xchg
test
fisubrl
inc
jbe
xor
xchg
cmp
adc
iret
ljmp
enter
aad
xchg
daa
in
cmpsb
js
js
lods
mov
lcall
and
lahf
adc
int
mov
dec
push
mov
jne
jb
test
inc
xor
fstp
add
xor
ret
mov
sar
incl
out
dec
mov
mov
movsb
pop
xor
push
stos
ret
leavew
cmp
xor
xor
mov
cwtl
loop
dec
and
dec
mov
ljmp
adcb
jecxz
std
lret
xchg
push
add
lds
clc
sub
lret
pop
and
mov
push
in
test
mov
dec
mov
push
push
outsb
cmp
add
mov
mov
scas
cmc
in
xor
fstps
ljmp
xchg
sub
mov
mov
mov
push
push
add
ja
cmpsl
pop
cmp
adc
sbb
scas
enter
shll
pop
xor
in
mov
mov
lcall
mov
xor
inc
mov
cmp
push
rorl
cmpsb
inc
sbb
pop
dec
push
push
or
fdivs
inc
mov
cmpsb
mov
mov
mov
addr16
jmp
mov
lds
js
mov
cmp
inc
mov
js
call
notb
test
loope
lretw
fidivrl
adc
sub
push
in
repz
jmp
fsubs
xchg
push
movsl
inc
ret
pusha
mov
leave
lods
aaa
sti
push
ljmp
mov
dec
xor
mov
sbb
dec
popl
rcrb
cltd
sbb
xchg
gs
movsl
adc
rorl
xor
insl
leave
test
icebp
mov
lcall
mov
repz
clc
in
clc
sbb
xor
sub
or
inc
fwait
rcll
mov
sti
fwait
sub
dec
imulb
leave
int
cmp
mov
dec
gs
lcall
mov
out
cld
call
imul
scas
adc
imul
jb
pushf
int3
pop
jmp
push
test
or
and
addr16
xor
cmp
ficompl
or
outsb
pop
add
push
push
lcall
fisubrs
dec
mov
shl
add
jno
mov
nop
xor
mov
daa
pop
or
jbe
mov
cmp
push
jge
lahf
aad
ds
cli
scas
fdivrs
sub
aas
jbe
ret
mov
sub
pusha
ficomps
ret
jbe
cltd
jmp
push
cmp
xchg
cmp
pushf
pop
mov
jecxz
dec
and
or
pop
popf
sub
cmp
sahf
pop
out
xorb
clc
mov
or
or
sahf
jno
mov
adc
test
adc
int
pop
mov
shlb
push
test
xchg
push
popa
into
xor
pop
add
pop
sub
jecxz
pop
shlb
jno
jb
xor
cltd
xchg
and
adcb
cmp
add
call
and
mov
xchg
lcall
mov
dec
aaa
lcall
pop
loop
mov
adcl
shll
jl
add
mov
jbe
and
add
in
dec
sbb
jns
pop
sub
pop
dec
jle
mov
movsb
jns
push
push
add
jae
xor
xchg
jg
add
sub
fxch
jo
xor
push
aaa
inc
jge
into
pop
mov
fisubrl
call
mov
cmpsl
adc
or
fisubl
fidivrl
stos
rol
andl
std
jbe
pop
pop
lcall
popa
lock
jmp
pop
nop
mov
popf
cli
sti
out
cmp
notb
cmp
jb
lock
mov
pop
scas
iret
fbld
jle
adc
lret
daa
lods
sbbb
test
mov
mov
shlb
test
fs
lock
repnz
dec
and
mov
mov
test
xor
fimull
out
aam
loope
shlb
mov
xor
and
je
aad
xchg
xorl
xchg
mov
push
adc
ret
test
push
dec
sub
dec
xchg
shll
pop
je
out
mov
paddusw
jno
cmp
repz
fwait
and
sub
mov
and
fidivrs
mov
mov
add
rorl
mov
dec
xor
int
js
sti
cmp
fsubl
dec
jl
repz
movsb
pop
fwait
dec
pop
jnp
add
mov
ds
arpl
lea
stos
enter
shll
outsl
pushw
and
insb
lds
adc
mov
hlt
inc
int
and
daa
daa
mov
pop
xchg
inc
cltd
cmpsb
and
cmp
add
jb
gs
testb
daa
inc
fldt
mov
addr16
mov
aaa
jae
ja
scas
les
clc
stos
push
mov
cmp
sahf
mov
cs
lea
mov
sub
rolb
gs
in
test
add
sub
cltd
and
adc
push
imul
icebp
fldenv
ficoml
mov
mov
adc
or
test
jo
in
loope
lods
sub
repz
jecxz
pop
lret
mov
add
in
adc
push
cmp
push
pusha
popa
nop
into
jns
sbb
sub
push
mov
or
jg
dec
popa
jae
adc
lea
xor
aad
mov
push
je
daa
pop
bound
in
ljmp
and
sbb
pushf
inc
pop
jmp
sbb
pop
cmp
sbb
mov
inc
ret
inc
cmpsb
xor
frstor
mull
ret
arpl
test
xchg
nop
and
sub
enter
sub
sti
je
pop
mov
in
ss
mov
mov
loop
sbb
inc
lret
sub
add
jmp
mov
xor
ffree
data16
push
push
mov
or
scas
add
push
mov
sub
pop
ja
sti
jo
filds
ds
or
cmp
js
lcall
bound
sub
in
mov
pop
add
lahf
xchg
in
mov
insb
sahf
xchg
xchg
add
inc
mov
in
mov
mov
stc
lods
cmp
shll
jbe
jl
sbb
or
mov
dec
sahf
mov
mov
and
or
ret
enter
mov
stos
mov
dec
cmp
nop
mov
xor
xor
subb
adc
xor
sub
andl
repz
dec
out
push
push
adc
lret
xchg
mov
adc
fbld
push
mov
xchg
iret
scas
cld
shlb
pop
leave
sub
cmp
ljmp
and
rcll
clc
leave
fldt
shlb
int
outsl
jae
push
mov
fistpl
test
sahf
cmp
and
fstpt
or
pop
push
ljmp
jmp
cmp
inc
push
xchg
xchg
dec
popa
or
mov
jb
in
mov
mov
mov
shll
repnz
repz
xor
xor
or
or
cmp
pusha
jle
cwtl
data16
addb
push
push
decl
sub
scas
pop
neg
push
stos
cmp
sbb
cmp
xchg
add
push
and
xor
pop
loope
pop
mov
fs
dec
test
in
lahf
push
pushf
dec
popf
lret
pop
pusha
mov
mov
mov
inc
pop
pop
jl
adc
test
inc
mov
mov
out
in
mov
stos
lahf
dec
pop
sbb
xchg
lret
out
icebp
cmovge
data16
outsl
jns
call
shll
insl
add
cmc
sub
mov
lock
movsl
jae
cs
cmp
mov
mov
jge
stc
aas
dec
sub
cs
rolb
pop
and
fisubl
adc
jno
scas
inc
and
stc
adc
popa
push
mov
pop
out
lods
mov
mov
mov
adc
inc
mov
jle
and
bound
add
mov
xlat
test
loopne
mov
iret
nop
je
lock
or
test
xchg
cmpsl
or
test
shr
mov
lahf
push
xor
inc
jg
adc
pushw
push
pushf
xchg
ror
mov
stos
jno
bound
fdivrp
jecxz
mov
popa
push
cmp
in
xor
cmp
call
jno
dec
dec
dec
xorl
adc
imul
or
lcall
adc
inc
xchg
dec
movsb
addr16
sbb
lea
mov
cwtl
xchg
sub
int3
sbb
mov
and
and
push
push
mov
cltd
sub
jl
mov
loope
fisttps
sub
stc
jnp
cmp
push
jo
mov
mov
imul
dec
sbb
xor
cltd
mov
aad
sbb
andl
jb
fnstcw
scas
adc
into
in
and
ja
ror
sub
and
lret
fstps
js
jno
cwtl
pop
scas
clc
out
jmp
orl
rol
lret
das
aaa
xchg
movsl
je
leave
inc
addr16
or
jle
mov
lahf
call
mov
sti
cmc
adc
jp
ret
test
lcall
jmp
ret
mov
jne
in
outsl
and
iret
jne
xor
scas
jae
in
xchg
cli
leave
jbe
ret
les
pop
inc
aad
cwtl
into
cld
lds
out
aaa
je
subb
cmpl
stc
hlt
cmc
mov
inc
adc
hlt
shr
sbb
pushf
push
xorb
dec
or
mov
adc
sbb
adc
sbb
adc
mov
bound
lods
mov
test
add
add
pop
xor
into
aas
add
or
mov
inc
gs
sub
mov
cmp
imul
popa
push
js
cmpsl
lcall
inc
aaa
les
jecxz
adc
pop
inc
ss
xor
adc
faddp
push
popa
xchg
call
ljmp
sbb
xor
xchg
push
mov
add
arpl
sahf
pop
out
sub
adc
xlat
out
outsl
sub
xchg
mov
push
add
mov
and
sbb
ficoml
mov
dec
push
inc
and
sub
scas
loop
movsb
mov
mov
stos
sarl
dec
shlb
add
lcall
dec
inc
pop
and
gs
dec
cmc
dec
jge
lods
insb
push
dec
or
add
cmpxchg
pop
sub
cmp
incb
repnz
mov
jge
xchg
xchg
out
orb
xchg
fidivrs
cmp
in
cwtl
mov
xchg
push
push
inc
and
cmpsl
lods
arpl
sarb
xchg
lods
pop
and
test
out
nop
or
pushf
dec
mov
scas
mov
cmp
flds
push
fsubr
cmp
in
push
ror
add
das
mov
dec
fistl
pop
inc
fiadds
xchg
jb
xchg
jecxz
or
push
out
ljmp
add
insb
sbb
pop
movsl
shrb
inc
jne
sbb
iret
or
lods
insl
std
js
inc
rcll
pop
mov
and
mov
stos
pop
out
or
cmp
cmp
mov
cmc
call
xchg
and
lea
xor
cwtl
pop
xor
call
sahf
jge
call
test
fisubs
out
xchg
cmpsb
push
lock
shl
sbb
jmp
dec
xchg
xchg
or
gs
fnsave
daa
mov
adc
repz
xchg
pop
fiaddl
pop
xchg
jb
scas
imul
leave
push
jo
mov
adc
adc
stos
mov
pop
sbb
hlt
lret
cmp
test
lahf
xchg
fsubrl
stos
test
or
leavew
sub
mov
test
adc
pop
xlat
adc
call
mov
ss
mov
jne
aaa
iret
lret
mov
xchg
dec
inc
add
xchg
je
mov
jge
popa
imul
je
imul
scas
sbb
mov
rcll
aas
jno
sbb
cmp
lcall
into
rcrl
inc
idivb
mov
test
xchg
jae
insl
fildl
add
or
insl
fmul
pop
pop
ss
mov
cvtpi2ps
push
mov
in
out
popa
fwait
mov
mul
or
ss
cmpsl
es
fstl
xor
pop
sbb
rclb
jle
cmpsl
push
pop
pcmpgtd
mov
in
into
and
or
sahf
idivl
cmp
inc
int
out
jge
xor
cltd
aaa
sub
jb
cmpsb
xor
mov
mov
imul
xor
int
pop
xchg
mov
jo
ds
cmc
test
sbb
loop
mov
pop
jbe
je
int
mov
mov
pop
inc
inc
shlb
data16
nop
push
rcl
mov
sbb
js
imul
dec
push
push
mov
pop
pop
arpl
push
mov
test
pop
push
jne
scas
mov
xchg
fnstsw
ret
mov
hlt
jg
xor
gs
mov
fwait
scas
call
ja
rclb
xor
movsb
rcll
sbbl
mov
mov
cmp
mov
or
adc
jnp
scas
pop
mov
cmp
dec
push
sub
inc
in
sub
adc
xorb
cwtl
das
pop
lahf
fidivl
push
push
pop
scas
inc
enter
mov
xchg
mov
xor
push
bound
addps
daa
pop
lods
push
cmp
jl
movsl
mov
stos
frstor
fnstenv
jns
lods
stc
repz
dec
mov
out
pop
pop
jnp
or
insb
dec
sbb
mov
fisubs
roll
cmpsb
adc
lahf
decb
ljmp
sub
rcl
xchg
cli
mov
mov
jl
add
repnz
fs
and
xlat
xlat
inc
xlat
pushf
sahf
mov
xlat
movsb
xchg
movsl
stc
push
mov
add
js
sbb
sub
mov
mov
ljmp
cld
cmc
or
std
add
ja
xchg
push
inc
hlt
adcb
mov
or
jbe
ficoms
aaa
aas
dec
out
ds
mov
jg
lods
aas
xor
xchg
lahf
pop
mov
sbbl
sub
sbb
sar
aam
mov
xor
imul
iret
out
fcoms
mov
inc
std
roll
lea
ds
push
sbb
iret
gs
or
pop
enter
fdivrl
pop
mov
test
roll
cltd
mov
jp
subl
mov
xor
xor
repnz
fildl
or
sub
ret
xor
add
lods
rorl
or
outsb
pop
aaa
aaa
into
sub
jb
dec
mov
mov
adc
jge
mov
push
in
fsubrl
xchg
je
xchg
dec
mov
in
stc
cmpsl
cwtl
pop
pop
cmpsl
mov
xor
mov
adc
add
loop
dec
add
jl
pusha
cmp
lea
cli
dec
ss
jmp
pusha
pop
rep
das
fstpt
sbb
xchg
xchg
jo,pt
scas
xor
push
lret
je
out
xchg
sub
das
mov
insb
jg
pop
mov
dec
inc
repnz
or
adc
js
add
push
cs
sub
jmp
imul
mov
aad
mov
xchg
loop
xor
mov
xchg
lret
repnz
dec
xor
clc
stc
daa
mov
loop
push
mov
shrl
jne
popf
inc
xchg
rcll
adc
xchg
mov
push
xchg
xchg
jbe
addr16
cmc
mov
jno
data16
sub
cmp
sbb
jp
out
repz
stc
sahf
cmp
or
pop
jmp
mov
inc
cmpsl
mov
in
sti
xchg
mov
loopne
inc
pop
lock
inc
leave
jnp
int
fiaddl
sub
jbe
aam
sti
pop
or
clc
mov
movsb
arpl
sbb
sbb
cs
add
iret
fildll
pop
insb
data16
test
or
cmp
push
mov
jp
loop
pop
or
sbb
test
loope
sbb
div
int3
pop
pop
roll
add
test
and
push
cmp
dec
repz
arpl
jb
mov
jecxz
cs
xchg
inc
push
mov
imul
jae
jo
pushf
mov
icebp
xor
mov
add
in
test
lock
pusha
adc
dec
fs
or
dec
dec
xor
ret
xchg
add
dec
ss
push
lock
mov
add
cmc
and
out
mov
jne
imul
addb
shll
ret
shl
bound
adc
outsl
insl
jbe
mov
incl
leave
jmp
xchg
ret
test
jae
adc
mov
sti
add
adc
js
aam
sub
add
push
jl
rcrl
jo
sbb
rolb
or
ljmp
outsl
shl
das
in
insb
pop
mov
scas
das
fidivl
xchg
out
rcrb
sbb
in
push
mov
cmpeqps
push
ljmp
pop
aas
or
mull
repz
out
sbb
pop
add
push
fidivrs
lods
add
sbb
mov
xchg
ss
mov
movsl
mov
cld
add
push
ds
xor
roll
adc
addb
js
jecxz
in
cmp
shl
cmp
mov
insl
call
fisttpll
aam
test
sbb
shlb
rorb
fistpll
rolb
cmp
push
mov
xlat
jmp
arpl
arpl
xor
inc
mov
stos
push
popf
popf
test
push
sub
jecxz
sbb
cwtl
insb
push
dec
ffree
pop
jb
daa
sahf
imul
addb
lcall
outsb
stos
pop
jbe
lret
bound
push
xchg
movsb
cmp
clc
adc
divl
in
cmp
sub
and
sub
jae
mov
fistps
and
dec
and
std
pushf
test
fs
mov
jmp
push
outsl
lock
lock
add
les
or
sub
mov
push
and
ljmp
arpl
shrl
and
or
int
dec
cmp
add
std
push
leave
shll
dec
aas
lods
pop
jmp
xchg
xchg
cmp
mov
fistps
push
insl
mov
loop
inc
fs
mov
push
cmc
aaa
out
jmp
mov
mov
add
mov
mov
mov
pop
and
out
jns
test
gs
gs
push
xlat
scas
push
cli
mov
repnz
test
cmp
pop
pop
orb
iret
xchg
idivl
jge
mov
push
cwtl
and
pop
pop
jmp
dec
and
das
aas
jo
xchg
iret
into
lret
lret
movsb
int
ret
incb
cmp
dec
mov
push
pop
enterw
adc
cmp
jmp
xor
fwait
shlb
jo
pop
cs
lcall
mov
jge
push
lods
dec
sahf
push
sbb
daa
jge
mov
icebp
cs
sbb
push
adc
cs
lret
jmp
xlat
hlt
sbb
bound
fs
sub
pop
adc
xor
or
jbe
roll
lret
dec
adc
push
xrelease
xchg
cmp
pop
mov
test
inc
sarl
mov
nop
cs
cmp
aam
in
add
or
adc
inc
nop
mov
divl
mov
add
pop
fmull
cld
jmp
push
adc
out
int3
jecxz
or
in
lock
jp
pop
inc
sbb
popa
pop
cs
pop
cwtl
sarb
push
mov
push
push
xor
mov
stos
cmp
imul
scas
push
cmp
add
cmp
mov
mov
sbb
push
das
stc
xor
movsb
push
lea
lret
and
jb
dec
out
mov
outsl
hlt
pusha
aam
lea
adc
adc
cmp
shll
mov
test
jne
xor
je
bound
enter
sbb
xchg
movsl
out
lods
mov
pop
mov
imul
dec
adc
jg
add
dec
and
mov
jb
pop
mov
mov
and
in
hlt
popf
cmp
adc
jl
mov
sbbl
mov
cmp
or
mov
jmp
inc
sub
leave
fcoms
rcrb
sarb
test
dec
pop
int3
inc
lcall
mov
daa
inc
in
out
jecxz
inc
push
aam
mov
fildl
sub
cmp
mov
xor
mov
mov
sbb
pop
push
push
and
sbb
imulb
jae
jmp
fwait
repnz
mov
mov
jmp
push
mov
lods
pop
movsb
jno
pushf
popf
inc
scas
push
add
sub
pusha
push
sub
loope
push
mov
and
fcos
pushf
mov
xchg
dec
addr16
dec
mov
pop
dec
xchg
outsl
add
jbe
cli
fnstcw
push
jecxz
or
out
vpsraw
push
in
outsb
mov
mov
cwtl
insb
mov
dec
sbb
ficoml
xor
inc
push
mov
mov
push
jge
pop
movsl
mov
cltd
push
test
lea
xchg
jle
xchg
shll
sbb
or
lcall
dec
lcall
frstor
movsb
push
hlt
cmp
ret
mov
push
mov
push
or
fidivs
ss
scas
cmpb
xor
dec
arpl
test
jae
shlb
mov
sub
pop
jle
push
mov
int3
mov
dec
adc
mov
pusha
fisubl
fmul
xor
out
jp
addl
sbbb
push
adc
add
sti
bound
into
or
pusha
adc
or
or
jmp
dec
or
xorl
mov
je
pop
mov
and
popf
stos
mov
and
outsl
es
in
fsubr
stos
mov
mov
cli
mov
and
adc
mov
test
adc
jge
or
scas
add
shll
pop
imul
lcall
int3
stos
sti
es
scas
mov
xor
std
lret
lock
test
adc
jge
cmp
popf
sbb
cmp
scas
lret
jae
fcmovb
and
ds
stc
enter
fdivrl
and
aas
mov
and
cmp
clc
jnp
lcall
fwait
sbb
cmp
mov
into
adc
jp
mov
cmp
or
jae
lret
sub
pop
jo
jne
jnp
bound
mov
push
daa
inc
or
mov
cmp
inc
data16
leave
mov
adc
xchg
pop
cltd
xchg
popa
dec
push
into
aas
sub
jae
ret
popf
roll
mull
push
scas
mov
pop
dec
shl
notl
add
aaa
lret
mov
adc
mov
leave
xor
lods
ljmp
mov
cwtl
jg
repnz
cltd
cld
arpl
mov
ja
adc
dec
mov
mov
sbb
mov
mov
jns
sub
leave
xchg
orb
repz
aam
scas
pop
aas
push
mov
cmpsb
add
add
faddp
mov
push
mov
mov
jbe
pop
push
mov
dec
cmp
mov
bound
cmp
popa
mov
pop
mov
mov
add
cmc
loope
lods
mov
inc
xor
sahf
cltd
or
xor
mov
jle
popa
jae
lods
jne
xor
in
jg,pn
ss
inc
push
ljmp
xchg
daa
sub
push
mov
sbb
or
adc
outsb
lock
mov
out
pop
pop
pop
sbb
push
xchg
loope
cmc
pop
push
mov
push
filds
shrl
and
repz
and
pop
cli
xchg
lods
dec
shl
scas
aaa
jae
adc
dec
sbb
add
adc
out
jg
pop
pop
ss
sti
dec
sub
loope
mov
adc
add
mov
movsb
xchg
out
dec
push
ret
mov
sub
lock
mov
xor
dec
call
outsl
jnp
dec
mov
mov
fwait
loope
pop
dec
insl
sbb
or
dec
mov
movsl
mov
xlat
ja
pop
push
insb
mov
mov
outsl
jbe
adc
lcall
and
cld
xor
inc
push
ljmp
pop
mov
jle
lods
fisttpl
aaa
test
iret
pop
xchg
cmp
or
mov
inc
das
sarb
stos
dec
mov
adcl
negl
mov
mov
shrb
sbb
dec
lret
jb
pusha
push
pop
repnz
rcrb
arpl
inc
xor
dec
or
es
mulb
lds
jle
lret
push
hlt
lcall
dec
xchg
call
lock
pop
mov
xchg
cltd
daa
ljmp
mov
inc
mov
mov
dec
pop
sub
pop
mov
push
jb
inc
or
sbb
loop
pop
sub
aaa
cmp
je
cs
arpl
xchg
jl
push
or
lea
xor
cmpsl
lahf
jb
sbb
lcall
or
subb
mov
into
adc
jb
pop
in
adc
sti
call
or
lahf
mov
mov
push
pop
je
jl
sub
xchg
clc
add
xorb
enter
jg
daa
pop
sti
sarb
insb
lret
push
dec
cld
mov
scas
mov
push
xor
and
lcall
js
stos
addr16
cmp
xchg
jmp
test
cmc
xchg
ljmp
xor
mov
pop
movl
shll
lods
cmp
shll
loopne
in
jmp
mov
pop
and
sbb
dec
xchg
jl
cmc
rol
in
in
sub
scas
outsl
test
mov
addr16
xchg
pop
lds
cmp
jo
jae
test
addr16
and
dec
push
fs
ret
push
sbb
ret
mov
sarl
dec
fwait
loope
mov
sbb
popa
sub
aam
push
jmp
mov
outsb
into
push
push
mov
jmp
mov
aas
dec
sti
or
inc
jmp
add
arpl
loopne
pop
mov
dec
adc
popf
outsb
into
minps
mov
push
inc
jno
mov
daa
jecxz
aas
stos
es
ror
aad
dec
stos
lahf
subl
cmp
arpl
je
jno
cmp
jle
shrl
sbb
int3
bound
inc
in
xchg
xchg
in
sbb
xor
cmpb
mov
decl
sbb
or
popa
repnz
xchg
cmpsl
loope
out
ja
pop
push
mov
or
cmp
mov
dec
lods
test
nop
jae
pop
push
xchg
lods
cmp
sub
outsl
cmp
mov
pusha
out
inc
out
gs
pop
movsl
jg
adc
jb
lret
mov
mov
std
or
sarb
jb
and
xor
out
imul
js
push
dec
fstps
cmpsb
pop
popa
push
jae
xchg
cmp
mov
insb
test
inc
hlt
add
fdivrs
xor
mov
cs
jecxz
sub
inc
or
xchg
std
sti
sbb
xlat
or
cmp
popf
push
cs
adc
ljmp
jae
lret
mov
hlt
xor
andb
daa
call
sahf
and
dec
sbb
and
xor
mov
and
das
pop
add
pop
fdivr
dec
inc
fwait
xchg
push
mov
hlt
mov
xchg
hlt
fldln2
xchg
xor
jnp
add
les
imul
adcb
mov
mov
pop
inc
outsl
push
lds
and
repz
jge
fisubs
inc
repnz
ljmp
xor
gs
lea
test
daa
clc
mov
js
clc
pop
dec
mov
sbb
nop
ja
xchg
lahf
imul
pop
sbb
xchg
dec
cmp
cmp
idivb
ss
movsl
pop
push
sti
xchg
jge
movsl
push
jbe
jle
dec
shrl
fstl
decl
stc
lods
or
je
ret
jmp
and
xchg
or
js
mov
out
mov
sbbb
inc
dec
cld
sbb
pop
loope
pop
out
enter
pop
push
jbe
fsubrl
sub
add
in
sbb
fisubrs
mov
xor
fwait
mov
mov
sub
push
pop
pop
in
stc
int
jp
fadd
out
out
xor
cmp
pop
sbbl
xchg
bound
mov
adc
push
adc
gs
mov
dec
std
popf
cs
outsb
or
das
fsubl
faddl
repnz
dec
mov
into
lcall
xor
std
dec
sbb
jmp
roll
data16
scas
sarb
mov
pop
pop
imul
adc
mov
in
fsubrs
mov
mov
sbb
xchg
xor
cs
setb
xor
call
xchg
push
lods
ds
and
hlt
movsb
mov
jnp
repz
aaa
or
jne
out
sbb
ja
test
inc
cmp
je
sbb
addb
push
lods
test
mov
add
jne
outsb
push
or
sub
ds
sub
sahf
imul
jl
adc
pop
cs
push
xor
aaa
bound
jns
test
or
aaa
popf
xchg
data16
fidivrs
inc
jle
outsb
aad
or
and
xor
sbb
es
xchg
scas
dec
rcll
mov
lods
pushf
divb
cmp
and
sti
jmp
fisubs
xor
mov
incb
push
ja
insl
xor
cld
dec
loope
clc
inc
xchg
xchg
ds
jecxz
cmp
cmp
test
dec
inc
and
lret
cli
push
mov
shll
push
mov
loope
insb
cmp
pop
push
jb
mov
adc
push
xchg
adc
int
cmp
rcrl
inc
arpl
dec
cmp
push
and
repz
testb
rorb
movsb
popf
and
pushf
cli
sbb
push
mov
mov
loop
dec
outsb
cmp
insl
sub
icebp
outsl
mov
popf
testl
sbbb
and
stos
mov
inc
jle
and
jge
sti
or
fadds
je
fs
aaa
mov
daa
and
fdivs
mov
mov
lahf
stos
shll
shlb
outsb
movsb
push
xor
push
jg
lea
mov
loopne
mov
fstp
dec
push
popa
xchg
adc
jae
xchg
movsb
dec
or
outsb
mov
imul
and
rorb
out
add
xchg
xor
add
push
in
enter
cmp
push
loope
mov
dec
jae
jg
into
pop
and
or
popa
jb
pop
inc
push
push
jge
loop
mov
dec
insl
rcl
xchg
cltd
and
dec
jnp
pop
lods
xor
jg
fstl
fld
insb
xchg
adc
jno
push
jo
ljmp
sub
jmp
jg
push
and
or
pop
mov
iret
adc
insl
mov
push
mov
push
addr16
imul
outsl
jle
mov
sub
pop
and
ss
addr16
hlt
leave
and
in
lock
pop
xor
roll
ss
enter
add
loopne
lods
into
mov
addb
out
test
xchg
insl
push
inc
mov
enter
pop
dec
mov
and
mov
push
lock
mov
test
mov
stos
scas
stc
leave
adc
icebp
add
sbb
aas
adc
xchg
sub
jecxz
mov
xchg
test
je
inc
stc
xor
lcall
pop
dec
jmp
ljmp
push
mov
inc
mov
pop
test
nop
aad
inc
mov
pop
lahf
std
out
hlt
jns
clc
insl
adc
add
mov
roll
dec
mov
xor
out
in
fs
jp
fstpt
enter
enter
mov
out
dec
adc
out
das
add
push
and
lret
sbb
xorb
and
in
cmc
rol
out
fsub
pushf
lods
or
lods
sbb
mov
insb
xchg
inc
and
js
sarl
jg
insl
arpl
adc
test
scas
sub
and
int3
inc
xchg
adc
and
loope
and
pusha
call
incb
jne
stc
lods
dec
mov
mov
cmp
xlat
xchg
aaa
cld
dec
loope
or
pop
enter
push
mov
sbb
test
shll
adc
loope
lcall
daa
bound
outsl
xchg
test
out
iret
and
jb
xor
fisttpll
scas
push
sbb
add
movsb
adc
pop
pop
add
mov
sub
int
popf
in
imul
cmp
orb
sub
rorb
pop
dec
stos
xchg
jmp
cmp
mov
in
sarl
or
jl
loopne
cli
dec
imul
jecxz
in
stos
loop
xchg
sub
add
sbb
sbb
ror
outsl
inc
pop
fs
cwtl
cs
adc
inc
push
loopne
add
lods
pop
add
inc
add
ljmp
aas
shll
inc
jl
xor
mov
and
mov
das
jno
jno
mov
inc
leave
mov
lds
movsl
ss
and
outsl
adc
cmp
call
int
jge
outsl
cmpsb
imull
dec
jmp
insl
mov
fnstcw
and
bound
dec
test
push
jnp
adc
iret
stos
pop
sub
subb
lods
jnp
pop
fistps
xor
ss
cwtl
rcl
outsb
les
insl
dec
arpl
test
aaa
xchg
push
add
leave
in
pop
jno
or
frstor
cs
mov
les
and
call
cmp
bound
xchg
repz
loopne
fcomip
loopne
inc
call
into
push
push
out
in
mov
into
mov
mov
jmp
or
inc
mov
ljmp
scas
or
scas
divb
loopne
arpl
jns
mov
loop
dec
test
in
mov
loope
or
dec
imul
inc
mov
mov
pusha
cwtl
push
lods
sub
fstpt
popf
xor
lret
enter
xchg
ret
shrl
dec
adc
lea
jb
sbb
dec
jns
xor
pop
ljmp
mov
adc
adc
or
fistpl
jg
xor
imul
push
mov
sub
mov
out
hlt
cmpb
daa
mov
iret
push
sti
dec
adcb
gs
add
xchg
ljmp
leave
leave
stc
push
repz
filds
cmp
clc
mov
pop
dec
sub
icebp
testb
inc
mov
in
out
mov
rorl
xor
or
adc
int3
adc
fnstenv
adc
test
clc
or
pop
das
and
into
cli
mov
es
xor
sbb
repz
push
subl
out
sub
jl
cmp
mov
mov
fldl
outsl
cmp
sbb
fdivrl
add
std
ficompl
jo
xchg
rcr
push
loope
push
cmp
pusha
fdivr
arpl
das
cmpsl
js
mov
out
mov
inc
pop
out
dec
dec
int3
mov
and
sbb
inc
sbb
aad
cmp
or
or
cmp
dec
mov
jge
sub
bnd
out
js
inc
add
cmpb
xor
lret
pop
rorl
or
negl
pop
adc
push
popa
test
test
insb
fdivs
loope
jle
mov
mov
into
std
push
adc
mov
mov
or
cmpl
fidivs
test
and
and
ja
mov
sbb
mov
add
and
pop
fstl
fisttpll
in
cmc
xor
dec
ficoml
scas
jp
es
out
mov
test
mov
out
je
fidivl
clc
and
scas
ds
push
lret
cs
repnz
adc
jle
push
aas
push
stos
das
in
enter
lret
xor
cmp
negb
cmpl
out
jge
push
pop
sbb
cmp
xchg
sti
cmpsl
cmp
loopne
fildll
push
mov
sub
cs
add
lret
jno
push
mov
cli
inc
lods
sbbl
call
loop
mov
setnp
xchg
lods
fsubrl
xchg
lahf
or
fwait
mov
xor
mov
push
ror
ret
loop
pop
rclb
lods
in
lods
stos
sub
push
in
test
dec
ja
cmp
xchg
or
repnz
insb
xchg
sahf
adc
cmc
sti
jge,pn
jae
add
popf
xor
sub
int
les
inc
pop
pop
mov
shrb
add
lds
je
mov
inc
loop
jae
inc
or
xchg
adc
aas
mov
js
repz
jmp
popf
xor
inc
in
adc
mull
xchg
sarl
dec
mov
mov
std
and
mov
pop
ret
mov
repz
out
fistps
incl
dec
verr
cmp
js
nop
mov
inc
push
lods
xchg
sub
mov
std
mov
push
xchg
dec
iret
dec
arpl
loopne
ret
movsl
into
or
mov
in
dec
daa
fistl
and
jl
scas
std
out
loop
inc
mov
gs
in
or
add
mov
popa
jecxz
lahf
dec
or
sub
add
xor
cmpsb
fldl
xor
fwait
sbb
lock
loope
loope
or
rorb
mov
sbb
bound
fsubrp
fxch
add
and
popf
iret
push
roll
jmp
iret
lcall
call
mov
mov
cld
popf
or
cli
jmp
xchg
mov
fnsave
imul
pop
sarb
ljmpw
and
es
data16
fildl
sub
dec
rcrl
xor
adc
rep
das
mov
dec
sbb
mov
sar
cmp
fs
sbb
sbb
pop
inc
pop
out
and
push
outsb
subl
lds
jns
outsl
sarb
cmp
in
push
pop
test
daa
fs
fnstenv
push
xchg
repnz
mov
sbb
cmp
push
mov
mov
addr16
popf
shll
jne
cmp
movsl
inc
and
jg
add
pop
fdivrs
push
lahf
cmc
stos
pop
jl
lods
ljmp
test
and
roll
sbb
test
pop
lock
mov
pop
cmc
cs
stc
xchg
int
popf
std
mov
fisubrs
inc
xor
inc
repnz
sub
cltd
sub
pop
andl
out
sub
cld
push
jge
test
lret
repnz
sub
push
test
pop
loop
inc
or
adc
ud1
adc
sahf
sbb
mov
loope
xor
add
jns
lock
dec
out
into
iret
out
pop
xchg
mov
bswap
and
test
mov
mov
adc
pop
rorb
cli
outsb
popa
mov
push
and
int
mov
pop
les
and
je
xor
push
ret
cmpsb
rcrl
sub
xor
dec
je
sbb
mov
rorl
ds
inc
push
out
lods
cmp
aaa
lcall
sbb
addl
movsl
jno
jmp
fsubrs
test
loope
push
cmpsb
imul
adc
out
add
mov
push
push
mov
aam
add
aaa
jg
mov
loope,pt
xchg
mov
push
lds
jbe
pop
aaa
out
testb
pop
fsts
inc
pop
fistl
pop
call
mov
sarl
sub
jns
out
ret
cmp
int3
mov
push
sbb
xchg
inc
push
pop
icebp
scas
addr16
lods
mov
cli
in
push
pop
out
call
std
push
jl
popa
imul
scas
adc
xor
push
setnp
jo
aas
incb
mov
dec
jns
or
xor
cmp
outsl
xchg
mov
shll
repnz
mulb
outsl
sbb
push
jae
mov
push
sbb
orb
sti
ds
mov
sub
pop
lret
xchg
inc
mov
and
int3
aaa
stos
inc
dec
lods
add
shll
daa
sub
call
sub
xchg
imul
fwait
lea
xchg
test
mov
xchg
aad
sub
std
fmul
rol
gs
insb
out
cmc
clc
pop
aaa
pop
sbb
data16
inc
aaa
add
mov
dec
out
dec
fcmovnu
xchg
mov
shrl
scas
testb
repz
std
cli
xor
xor
mov
xlat
fsubl
shrd
cmp
ficomps
cmp
mov
lods
push
lret
add
fcomps
xlat
mov
movsb
scas
cwtl
mov
mov
mov
inc
rcll
cltd
xor
ret
push
push
in
jg
cmp
mov
mov
jb
and
mov
dec
gs
xlat
mov
mov
imulb
outsl
sub
sbb
mov
inc
pop
pop
int3
int3
fadds
mov
sub
pop
push
test
adc
adcl
or
data16
insb
andl
mov
iret
mov
and
push
push
jmp
cmpsb
mov
mov
hlt
loopne
jecxz
in
xchg
js
int
fsub
or
xor
lods
loopne
out
push
sub
pop
je
adcl
mov
mov
je
fwait
jg
sbb
loope
sbb
xor
mov
add
push
int3
push
sar
cli
test
insl
cmp
rclb
or
adc
mov
xor
movb
data16
rol
or
sub
pop
int3
push
jb
jns
int3
hlt
inc
inc
dec
inc
sub
repnz
test
sbb
inc
adc
rcl
mov
mov
sbb
and
mov
mov
xchg
mov
sahf
fwait
mov
pushf
push
fstl
lret
mov
lsl
jno
push
mov
sub
mov
sti
adc
mov
rcrl
jne
mov
daa
pop
fcompl
rcll
out
scas
push
test
test
jmp
daa
aad
and
lahf
mov
pusha
test
mov
jl
cmp
push
or
push
lds
jo
jne
jb
aad
js
sub
popa
cmpb
dec
imul
mov
stos
stos
test
and
mov
dec
icebp
je,pn
data16
shrl
dec
fldt
aaa
popf
cmp
sub
sub
and
dec
adc
mov
sbb
movsl
es
pop
jmp
cmp
mov
sub
mov
mov
mov
test
out
jo
pop
jb
outsb
sub
popa
and
or
ljmp
lcall
out
mov
ja
movsb
aam
stos
add
fldt
or
test
inc
adc
data16
push
mov
and
jbe
sahf
idivl
ss
test
jb
jle
out
das
cmp
dec
mull
mov
lret
aam
out
loop
jmp
and
arpl
mov
outsb
push
xchg
cwtl
es
sub
jno,pn
mov
xor
arpl
test
or
xor
lock
test
int3
push
or
gs
mov
aaa
subl
sahf
shrb
xlat
dec
scas
cld
jnp
jns
xor
clc
and
je
push
lahf
dec
cmpsl
cmp
or
push
insb
popf
add
mov
scas
xor
fidivrl
or
ds
dec
sbb
pusha
and
jl
call
movsb
mov
pusha
pop
push
rcl
aaa
shlb
jne
popf
and
cmpsl
and
mov
clc
les
popf
test
imul
mov
mov
push
mov
push
mov
mov
adc
cmp
jne
sub
aam
mov
sub
xchg
test
adc
rcr
fcoms
aad
lcall
es
dec
cmovp
pushf
std
xchg
mov
jg
aaa
out
jns
stc
xchg
lret
fbstp
jge
out
and
jp
jne
stc
js
and
pop
movsl
and
mov
pop
je
push
push
fwait
sbb
xor
leave
dec
mov
cltd
pusha
repz
jne
push
cmp
stos
pop
imull
in
xor
add
imul
iret
fisubrl
sbb
insl
leave
icebp
xor
and
mov
push
andl
lcall
sub
arpl
push
pop
cmc
push
test
nop
jae
pop
icebp
inc
or
lcall
sbb
sahf
add
fdivr
mov
mov
aad
or
inc
dec
mov
pop
mov
int3
xchg
mov
out
aas
xchg
pop
or
push
and
mov
fdivs
scas
xchg
pop
adc
in
mov
add
adc
je
or
addb
roll
lret
push
movsb
mul
or
in
das
fldl
mov
ds
outsl
mov
rorl
cmpsl
mov
ror
ss
cmp
mov
sarl
pop
sub
fmuls
ret
aaa
push
xchg
cmp
mov
xor
pusha
and
pusha
pushf
push
xchg
mov
and
mov
in
mov
test
push
cmpsl
sbb
push
sarb
xlat
mov
and
pushf
push
in
rcr
shr
filds
or
sarb
xor
cmp
jnp
inc
repnz
stos
shl
push
repz
jmp
out
jne
push
add
fcmovnu
lock
adc
adc
sbb
repnz
addb
aaa
cwtl
mov
das
mov
lea
add
in
push
cmp
rorb
movsb
into
lea
arpl
in
sbb
daa
js
jge
int
out
rcrl
bound
rorb
jb
push
lock
cwtl
jl
sti
add
xor
sub
ds
imul
hlt
pushf
gs
cli
pop
int
sub
cmp
negb
sub
ljmp
outsb
cltd
mov
xchg
inc
shrb
jnp
mov
or
movsb
cli
mov
lea
cmp
mov
xchg
mov
js
cmp
jg
push
dec
inc
push
lea
and
sub
push
lods
enter
mov
xchg
adc
mov
vrsqrtps
sbb
into
cwtl
cmp
or
int
dec
adc
rolb
jg
add
sub
lods
mov
mov
mov
inc
insl
sbb
out
out
outsb
jnp
fcoml
add
inc
adc
into
mov
jae
adc
mov
push
xor
gs
test
test
or
and
popf
pop
enter
pop
fcoml
adcb
inc
iret
stos
mov
dec
cmc
push
adc
movsl
hlt
inc
cmp
out
sub
outsb
cmp
xorl
sbb
jno
outsb
push
mov
out
test
rcr
rcrl
lahf
sbb
push
loop
pop
int
scas
pop
inc
fs
jp
fnsave
push
push
pop
aam
shll
adc
mov
leave
pushw
jmp
cmp
out
in
push
jns
jl
sbb
pop
add
or
dec
arpl
movsb
outsl
stos
add
jo
adc
lock
mov
lahf
push
idivb
add
andl
ss
aad
es
pusha
inc
daa
inc
inc
push
jnp
push
jle
ret
mov
mov
xchg
ja
or
inc
push
xor
add
dec
pop
or
xchg
ss
movsl
jno
test
aaa
jbe
inc
in
stos
pop
xchg
jne
jnp
sbb
dec
dec
ja
jl
or
iret
mov
inc
sbb
mov
std
dec
push
sbb
and
mov
out
popf
adc
jg
xchg
xor
push
xlat
inc
daa
and
and
pop
je
xchg
into
adcb
mov
dec
adc
rcr
hlt
push
jae
pop
xor
ret
adc
fmull
mov
push
fidivrl
cmpsb
pop
cmp
adc
cmpsb
add
repz
out
in
mov
jb
scas
and
fsubp
mov
or
jnp
loop
sbb
add
sahf
call
sbb
sbb
repnz
push
mov
push
dec
pop
mov
rol
push
sub
rclb
xchg
xchg
and
adc
js
push
sarb
mov
mov
jb
insb
jb
loop
and
jmp
mov
xchg
into
fnstcw
cmpsb
nop
lret
sub
add
lret
or
fisttpl
jne
and
in
adc
xlat
lret
sti
and
push
out
or
pop
and
in
fldt
loope
jbe
pop
xor
in
repnz
sub
xchg
in
xchg
insl
push
xchg
or
out
pop
cmpsb
lods
sub
push
clc
mov
arpl
push
jne
jle
call
fidivrl
clc
testl
popf
je
fldenv
and
or
sub
in
movsb
push
and
sbb
cmpsl
pop
xor
and
out
xchg
cltd
push
push
jmp
pushf
add
and
movsl
mov
jb
xor
arpl
cmc
repnz
inc
add
lock
or
xor
pop
and
jmp
pop
pop
or
test
les
mov
pop
xchg
mov
aad
sbb
push
lea
mov
out
jb
mov
nop
mov
subl
jo
call
scas
pop
xchg
sbbb
movsb
out
push
jmp
jmp
shll
inc
inc
cld
shlb
mov
fs
xor
xchg
aas
sub
in
movb
adc
aaa
inc
push
jno
xchg
push
stos
adc
add
fwait
dec
js
mov
in
sbb
or
lods
das
mov
rcrl
in
mov
jle
lds
jae
loop
lea
adc
mov
inc
inc
sub
adc
enter
mov
movsb
data16
mov
push
rolb
mov
mov
inc
ljmp
das
jle
pop
mov
mov
push
and
jnp
int
sub
adc
xchg
ficoml
add
arpl
sbb
mov
fistpll
dec
mov
fmuls
sbbl
or
xchg
xchg
cli
push
lock
push
sub
mov
arpl
lods
mov
cwtl
jae
and
cld
mov
push
sub
ret
mov
mov
or
mov
je
mov
pop
push
hlt
xor
jae
rcrl
pop
adc
data16
jne
pop
xchg
xchg
cmpsb
jl
mov
ss
mov
pusha
cmp
movsb
ja
or
sahf
lret
int
test
sub
jmp
roll
arpl
jbe
and
pop
ja
xchg
adc
imulb
sbb
mov
scas
sbb
mov
inc
dec
or
movsb
sub
cmp
and
sub
jge
jg
nop
cmp
push
mov
dec
pushf
les
add
cltd
bound
cmp
test
out
orl
xor
cmpsl
jbe
cwtl
xlat
pusha
adc
int
sbb
inc
leave
outsb
mov
push
pop
cmp
adc
xchg
xor
mov
and
aaa
sbbl
cwtl
lret
lret
das
jae
outsb
xlat
sbb
icebp
jle
dec
test
ret
xor
je
pop
mov
jae
ss
adc
sbb
jnp
ss
add
mov
and
enter
mov
xor
sbb
iret
hlt
inc
inc
push
movsb
inc
and
je
add
pop
aad
ss
or
and
dec
cmp
in
jmp
outsl
popf
je
cmpsl
arpl
clc
clc
adcl
sbb
std
ficoml
jmp
add
inc
aaa
xchg
sbb
pusha
scas
jbe
mov
xchg
fcmovnu
lret
das
lahf
scas
loop
xor
int3
push
mov
outsl
xchg
xchg
sti
sbb
imul
or
cmpsb
fwait
popa
jb
movsl
jae
add
mov
add
add
fnstcw
stc
fistpll
pushf
incl
fsubs
and
dec
xor
xlat
cs
cmp
je
mov
pop
dec
into
xchg
fstpt
mov
mov
mov
sub
add
leave
cli
mov
mov
xchg
stc
inc
rcll
aas
add
out
cmp
pop
scas
ss
xchg
jl
sti
sbb
inc
and
xchg
pusha
inc
mov
or
pop
xchg
cmp
push
cmp
mov
iret
bound
mov
mov
gs
out
cmp
xchg
ret
lret
sbb
rdpmc
es
arpl
jo
push
jo
dec
push
lret
mov
das
daa
in
xchg
js
jae
jecxz
divb
sahf
cli
pop
imul
loop
cmp
decl
add
pop
mov
iret
pop
or
adc
xchg
addb
mov
mov
or
es
test
add
fadds
push
rclb
pop
aas
pusha
leave
in
or
pop
adc
push
aaa
pop
or
ljmp
xchg
push
sub
jg
fadds
dec
mov
in
int3
push
pusha
stos
pushf
test
addr16
enter
std
es
dec
iret
and
lret
repnz
inc
stc
or
pop
leave
sbb
and
cmp
ficoml
pop
cli
bound
in
outsb
adc
xlat
addl
jae
jg
mov
add
fwait
movsl
jnp
aad
cwtl
out
pop
mov
xor
jmp
add
addr16
cmp
aas
dec
mov
popf
ret
dec
sub
cs
sbb
xchg
push
mov
and
imul
mov
faddl
popa
mov
add
es
xchg
pusha
push
lahf
pop
dec
lret
mov
in
lahf
call
stos
aas
add
out
cld
ss
mov
xchg
adc
push
adcl
sbb
leave
inc
shll
xor
int3
inc
adc
xchg
inc
arpl
jae
lds
jl
mov
sbb
imul
repz
in
push
mov
jg
fcomps
fdivl
imul
ljmp
or
pop
jecxz
pusha
or
shrb
sub
repnz
js
ljmp
leave
fisubs
or
insl
xchg
mov
mov
xchg
negb
mov
cmp
movsb
dec
fcomps
test
mov
xchg
xor
or
inc
rorb
adc
iret
popf
fmuls
dec
sub
push
iret
dec
jae
lods
jmp
dec
or
push
mov
mov
pusha
data16
loop
push
aas
imul
mov
sub
repnz
jae
data16
push
or
or
loop
js
in
lcall
or
pop
sub
lds
add
pop
add
xor
jns
out
mov
imul
add
pop
clc
imul
mov
xor
mov
cmp
mov
adc
dec
iret
bnd
mov
and
and
jmp
inc
mov
std
inc
mov
inc
sbb
pusha
sub
cmpsb
mov
cmp
das
xlat
jp
sbb
pop
orb
and
push
inc
cmp
or
dec
or
adc
adc
lock
loope
adc
mov
add
inc
xor
or
mov
jle
pop
fadds
adc
sbb
and
xchg
fldt
and
jno
pop
lock
insb
and
xor
mov
scas
mov
inc
call
mov
mov
jecxz
inc
mov
xor
and
mov
out
lahf
xor
or
ds
pop
sti
mov
sub
ds
lods
lds
push
lea
clc
testb
inc
xor
outsl
dec
enter
leave
enter
movsb
outsb
enter
push
faddl
mov
pop
cmpb
pushf
add
rcrb
rolb
and
mov
les
adc
test
xchg
notb
loope
das
in
rcrb
roll
pop
add
push
in
inc
dec
xchg
sbb
sbb
aam
scas
cmc
es
aam
loopne
and
pusha
mov
sbb
sbb
fsubs
nop
fistpll
mov
cli
aam
xchg
rol
divb
add
add
mov
fs
mov
sbb
stc
jae
stos
insb
push
and
shrl
shll
nop
test
rcr
sbb
dec
mov
loop
push
push
inc
shlb
lcall
and
cmp
sbb
pop
pusha
mov
repnz
sub
mov
fstpl
pop
fs
inc
or
subl
cmp
shl
inc
xchg
orb
jle
test
and
dec
add
or
mov
mov
sub
rorb
popa
idivb
xor
jmp
es
stos
insl
shrb
lret
inc
aad
pop
stc
xor
aas
or
fcmove
push
pop
lds
cmpb
rclb
bound
adc
sbb
mov
inc
mov
loopne
push
jp
mov
loope
mov
sbb
iret
pusha
inc
xor
loopne
int3
push
addr16
push
inc
sbb
pop
adc
cmp
aaa
add
or
push
dec
sub
pushl
movsb
cmp
and
test
mov
testb
adc
sub
dec
inc
xchg
mov
les
repnz
fsubs
mov
in
loopne
and
and
imul
cmp
outsb
mov
fistl
lret
inc
sub
popl
dec
jno
and
pop
in
pop
xor
xchg
mov
lds
sahf
inc
and
sub
es
aaa
scas
nop
out
or
or
ror
pop
stos
out
jp
inc
push
sbb
sbb
gs
inc
mov
repz
and
jb
mov
xor
test
pushf
js
stos
dec
adc
loope
push
xor
jbe
inc
movsl
fwait
lea
mov
repnz
mov
inc
stos
lea
fdivr
push
pop
xchg
outsb
pop
add
rorl
incl
pop
pushf
repz
mov
shll
ficoms
pop
or
adc
shrb
mov
jns
xlat
test
jl
pop
shll
leave
jno
lcall
sub
popf
aas
stc
addb
sarb
testb
xchg
pushf
jbe
bnd
dec
dec
and
jmp
and
push
jg
sub
mov
cmp
ret
pop
sbb
lds
sub
mov
fbstp
inc
jbe
add
scas
or
cmpsl
xchg
jo
lock
xor
push
aaa
scas
imul
xlat
in
push
and
cs
xchg
add
push
in
mov
dec
clc
push
je
icebp
cs
movb
loop
leave
fs
popl
in
push
test
aaa
ja
push
aas
arpl
jge
js
or
or
mov
leave
cmp
out
mov
ss
test
clc
push
mov
je
inc
mov
outsb
mov
jmp
clc
pusha
inc
add
push
xor
stos
cmc
int3
pop
es
pushf
call
sbb
mov
mov
frstor
es
mov
shl
loop
or
sub
or
rclb
pop
ret
dec
cmpsl
in
push
ss
or
mov
mov
popa
aaa
inc
cs
aas
sub
loop
add
lret
js
lods
pop
popf
sbb
sub
add
fsubrl
lods
jl
inc
mov
cmp
test
mov
je
sarl
mov
movsl
adc
outsl
iret
fmull
adc
mov
shl
fmull
popf
inc
mov
jae
pop
arpl
fwait
sarb
repnz
and
mov
sbb
shlb
push
es
push
adcl
or
scas
pusha
call
jmp
xchg
pop
cmp
mov
out
mov
repz
add
cwtl
mov
cmc
push
loop
in
fwait
jns
mov
shll
adc
pusha
fstl
cmp
dec
mov
jp
aaa
lods
sbb
cmp
aaa
xchg
nop
data16
cmc
pusha
loop,pn
cmpl
dec
repnz
mov
sahf
jb
scas
cmp
ss
fildl
scas
icebp
jbe
add
imul
ja
push
mov
cld
enter
jno
or
stos
dec
fisttpll
mov
add
mov
pop
mov
das
adcl
cs
cld
xor
cmp
pop
inc
inc
bound
and
adc
and
cmpl
fstpl
roll
jecxz
clc
leave
les
leave
lea
jnp
lods
aas
lds
scas
lds
xchg
sub
clc
xor
repz
data16
test
inc
xchg
je
jp
push
and
adc
mov
sub
insb
cmpsl
jmp
ret
daa
andl
sub
fcom
dec
dec
enter
pop
data16
hlt
pop
jmp
leave
insl
ja
jecxz
sub
push
mov
mov
xchg
scas
xchg
cmp
cmc
call
xchg
sub
push
jns
sbb
sub
in
adcb
inc
ja
cld
xor
lret
das
iret
and
inc
call
sarb
mov
push
lahf
push
add
fstp
push
jae
daa
mov
or
bound
lods
mov
inc
xchg
roll
scas
push
pop
test
or
jp
sbb
jge
pop
loop
xor
mov
lods
stos
and
mov
cmp
sub
arpl
popf
jl
outsl
mov
sub
mov
xchg
mov
dec
popf
pop
jne
add
xchg
js
push
push
adc
or
mov
mov
outsl
add
ds
nop
insl
jns
daa
pop
clc
cmc
or
adc
xchg
mov
cmp
inc
les
add
inc
loop
push
push
shlb
fnstcw
cs
and
in
test
cmp
data16
rol
movb
mov
enter
jne
lock
dec
les
push
fisttpll
xor
stc
rclb
or
or
sub
pop
cmp
add
shlb
lahf
xor
rcl
in
roll
mov
icebp
jne
sbb
fldcw
mov
mov
sub
pop
mov
repnz
xchg
sub
pop
loopne,pt
fsubl
jbe
cmp
or
pop
dec
push
cld
sbb
mov
clc
in
add
xchg
daa
xchg
add
loop
cmc
std
mov
adc
mov
mov
adc
push
add
cmp
fsubrs
stos
leave
and
push
vmread
or
cmp
ss
jmp
jle
push
ret
pop
rol
push
dec
in
scas
leave
dec
jge
aaa
xor
dec
jle
or
jmp
out
sbb
inc
inc
gs
jne
test
mov
jl
imul
mov
xchg
clc
inc
pop
xchg
pop
jnp
enter
out
call
shl
popf
mov
icebp
xchg
sbb
icebp
mov
mov
imul
jmp
test
pop
gs
adc
enter
loope
dec
push
xlat
cltd
xor
push
clc
cltd
fnsave
lods
addr16
add
lcall
inc
inc
je
cwtl
fwait
push
mov
adc
jp
test
inc
add
add
adc
nop
or
lea
clc
shlb
sbb
fcomps
enter
sub
xor
cli
xchg
sbb
push
jno
sub
jns
inc
jne
sarl
out
pop
dec
dec
popf
and
mov
pop
daa
in
push
or
xor
push
aam
cmp
push
adc
jae
das
mov
mov
xchg
movsb
xlat
in
mov
inc
or
sub
dec
fsts
js
mov
add
mov
dec
into
les
jg
sub
xor
roll
dec
insl
push
in
xchg
pushf
mov
out
pop
push
lahf
cmp
sbb
rorl
mov
rcrl
jns
pop
les
jmp
push
pop
xor
mov
in
push
and
sub
fiaddl
clc
orl
lret
or
subb
xchg
add
sbb
mov
fwait
mov
mulb
in
insb
repnz
push
cmp
jb
lret
mov
push
dec
jbe
pop
jg
lahf
mov
sbb
add
push
add
dec
loope
adc
sbb
inc
insb
in
xor
jmp
or
ljmp
std
xor
fcmove
loope
xorl
test
dec
in
mov
sti
sbb
loopne
or
sahf
sti
icebp
add
xor
dec
push
jmp
test
cmp
lock
and
test
divl
cs
adc
dec
cs
push
jmp
cmp
xlat
mov
pop
pop
out
mov
es
inc
push
pushf
pop
inc
xor
movsb
pop
push
mov
ss
dec
jg
in
inc
cwtl
ljmp
mov
mov
mov
aam
addr16
repnz
jmp
adc
je
repz
jecxz
bound
mov
sbb
cmp
mov
jl
dec
loope
movl
pushf
js
fs
pushf
add
stos
push
mov
inc
mov
notl
dec
mov
clc
cld
add
movb
mov
shrb
jnp
pop
sbb
lock
orb
xchg
pop
xor
aad
cmpsl
jg
rorb
pop
mov
icebp
insb
imull
fcomps
pop
in
int
arpl
jae
xchg
mov
add
into
test
fs
sub
in
cld
mov
push
pop
sbb
cmc
and
imul
daa
sbb
add
pushf
mov
dec
cmpsb
mov
bnd
into
js
push
fisttpl
mov
sub
dec
test
fldenv
jb
call
aad
pushf
add
xor
pop
jmp
mov
fs
outsl
inc
and
out
pop
jl
or
mov
push
inc
lea
pop
inc
and
push
mov
xchg
inc
xchg
push
pop
lods
pop
mov
jae
mov
rcrb
dec
xor
adc
pushf
hlt
loopne
mov
fwait
stos
or
jae
mov
lret
insb
cmpb
xchg
xchg
sarb
pop
cmc
xor
mov
sbb
je
cmp
ror
aad
push
jg
aam
mov
pop
sahf
in
jo
ja
or
insl
xchg
sbbb
and
or
push
xchg
das
mov
mov
jnp
sub
mov
mov
mov
xor
mov
mov
test
out
stos
daa
pop
ficomps
fsubl
sub
sahf
mov
xchg
pushf
push
sub
jge
cmp
fs
orb
ret
sbb
dec
les
push
xor
xor
xor
fcmovne
xor
xchg
negl
xor
push
jg
mov
pop
adc
js
mov
pop
sbb
js
or
and
xor
xlat
xchg
pop
insl
ljmp
enter
stos
pop
or
jo
and
fs
std
nop
int3
pushf
shr
fs
add
movsb
js
mov
lods
std
pop
js
fisttps
add
ljmp
add
in
aaa
jp
mov
add
sahf
cmc
xlat
sub
mov
push
dec
sbbl
mov
rorb
mov
xchg
orb
push
adc
mov
mov
int
adc
test
or
dec
and
sub
and
and
sub
cmpb
and
pop
xchg
sar
pusha
mov
dec
scas
nop
mov
and
sti
in
test
pop
insl
aam
push
push
or
movswl
popa
sub
pop
push
call
mov
inc
scas
mov
mov
aas
xor
mov
dec
inc
push
repnz
xchg
and
jmp
pushf
jb
fildll
dec
jb
sub
cmpsb
dec
cmp
invd
mov
aaa
fs
or
test
or
push
push
sbb
stc
jbe
nop
add
jnp
insb
leave
xor
mov
test
in
addb
mov
xchg
js
dec
mov
icebp
xor
mov
popa
sub
fdiv
mov
imul
dec
or
scas
mov
out
sub
xor
fisubrl
push
sub
inc
add
call
or
outsl
jmp
adc
dec
push
pop
jno
jbe
in
dec
cmc
jge
mov
test
adc
mov
jbe
lcall
or
cs
lock
xchg
cmp
xchg
cli
out
scas
lock
jo
xchg
cmp
shr
jp
test
adc
sbb
outsb
aad
mov
adc
imul
push
aad
push
inc
div
loop
jl
pop
test
popa
popf
jl
sbb
aam
loope
or
stos
mov
lods
push
mov
inc
mov
xchg
mov
cld
push
ret
flds
sub
ja
das
mov
sub
fiaddl
aam
adc
cld
inc
sbb
sbbb
push
sahf
add
or
lret
clc
inc
leave
rcll
cmp
jne
or
test
sub
scas
or
push
add
outsl
xor
sub
cmpsb
je
ss
adc
and
lcall
pop
leave
lret
jnp
out
and
ljmp
pop
inc
ljmp
add
dec
or
mov
inc
gs
sbbl
ljmp
loopne
movsb
pop
ds
fidivrs
add
popa
or
mov
and
fcoms
adc
das
data16
sti
inc
dec
xchg
mov
js
pop
push
imul
push
mov
xchg
mov
push
pop
xchg
mov
js
insb
movsb
jns
lock
loop
adc
in
sbb
les
inc
out
scas
jecxz
jg
push
addr16
fcomip
xor
gs
mov
jne
xchg
push
mov
std
cmc
popf
pop
shlb
pop
and
xchg
cmp
scas
jecxz
and
adc
ds
cltd
stc
xchg
mov
mov
mov
add
cmpsl
sysexit
mov
outsb
in
lret
stc
xchg
xchg
or
cli
dec
add
mov
movsl
pop
and
sub
iret
arpl
test
mov
popa
mov
cmp
push
pop
incl
pop
mov
div
movsb
inc
xor
loopne
testl
arpl
hlt
rcrb
mov
mov
mov
dec
xchg
pop
cs
js
or
clc
cwtl
mov
addr16
movl
or
mov
add
ss
xchg
push
adc
push
fsts
bswap
popa
sbb
xchg
add
xor
es
cs
js
push
inc
arpl
cmp
hlt
ljmp
sarl
imul
sarl
sub
or
mov
push
push
xor
push
cmp
aam
imul
iret
dec
in
xlat
inc
fdivl
fnstcw
jns
rcrb
xchg
mov
ficoml
dec
xchg
insl
pop
push
push
dec
outsb
std
lods
icebp
jp
fmull
push
dec
out
addr16
cmp
ss
sub
int
test
mov
xchg
movl
xchg
repnz
cmp
xor
sub
shrb
aaa
mov
mov
pop
lret
std
dec
lahf
lret
push
mov
push
fstpt
nop
jae
and
sbbb
add
xor
ljmp
rcrl
or
sub
xor
adc
div
add
call
addr16
dec
movsl
lahf
into
cmp
data16
adc
cmc
sbb
inc
fsubp
sub
aas
sub
inc
and
jle
add
cmp
rorl
in
inc
mov
dec
sub
push
jbe
jp
adc
jp
aas
repz
fisttpl
jae
adc
cs
fnstcw
pop
dec
xor
sbb
je
in
lods
sbb
push
inc
push
dec
adc
lahf
ja
sub
call
lret
inc
jle
sub
cwtl
jg
bound
or
add
cmp
or
hlt
mov
lods
sub
idivb
popf
rep
pop
mov
out
mov
inc
fsubrl
pop
rcrl
push
cmp
sub
in
outsb
and
cwtl
jae
mov
loope
inc
dec
sub
lret
cmp
xchg
adc
scas
pushf
and
int3
orl
sbb
test
sub
int3
lret
fucomip
arpl
aad
mov
movsb
fnstcw
das
jge
into
data16
and
outsl
outsb
add
out
jns
cmp
cli
pushl
inc
cltd
pop
mov
cmc
cmp
mov
repnz
fwait
mov
lret
ss
adc
cld
inc
stos
cmc
out
popf
lods
lahf
sbb
cli
mov
dec
cmp
sbb
mov
and
inc
and
mov
sar
bound
mov
jo
jae
mov
lock
xor
repz
movsb
lock
dec
jb
push
xor
mov
insb
pop
cwtl
xchg
or
les
xchg
sbb
push
mov
sub
repnz
sub
test
add
mov
aaa
push
mov
cmp
fwait
jns
xor
stos
fstpt
stos
int3
cltd
lods
aaa
mov
icebp
jge
test
lret
stc
jle
test
inc
xor
mov
cmp
dec
aad
out
jno
push
sub
jl
data16
pushf
mov
jmp
xchg
add
ja
or
xchg
stos
test
out
mov
repnz
mov
xchg
inc
fucomi
pop
cmpsl
pop
push
add
push
or
dec
jnp
xchg
mov
jns
outsb
fsubrs
dec
es
sub
and
and
test
push
jecxz
sahf
inc
adc
loope
enter
ja
jl
outsb
xchg
nop
loopne
xor
fincstp
inc
bound
insl
insb
xchg
push
add
iret
cld
sub
imul
jmp
enter
push
dec
rorb
shl
int
mov
jle
jbe
adc
in
adc
movsb
xchg
pop
leave
add
adc
jmp
lret
adc
fsubrs
int
mov
or
addr16
in
push
test
or
fimull
push
in
fs
mov
fidivs
outsb
je
fimuls
inc
sarl
shlb
ds
adc
jp
int3
scas
int3
ret
dec
push
inc
cltd
pushf
push
add
adc
mov
cld
fs
out
xchg
cmp
iret
push
mov
lret
je
ja
xor
stos
outsl
mov
clc
mov
mov
jmp
sub
fwait
mov
ds
sbb
aam
add
xlat
test
or
shl
stos
imul
mov
or
lcall
adc
fisttpll
scas
lcall
lods
scas
sahf
lcall
sub
xor
or
movsl
inc
adc
repnz
mov
out
div
sbb
inc
mov
xchg
fs
and
negl
push
aas
mov
sub
filds
fsubl
shlb
or
dec
int
icebp
mov
mov
out
cmp
and
sub
jp
inc
adc
shll
push
dec
imul
test
popf
jnp
push
scas
xchg
and
fs
addr16
leave
mov
data16
jbe
ficoms
in
aad
pop
adc
pop
mov
arpl
scas
ds
fs
mov
jb
or
xchg
jg
andb
test
fimuls
call
aaa
or
and
lods
cmpsb
sbb
mov
roll
fdiv
out
xchg
mov
fs
cmp
in
inc
mov
fdivs
jne
daa
int
xchg
sub
xor
push
imul
mov
adc
dec
int3
sbb
mov
pop
movsb
inc
push
ss
sbb
shlb
subl
jmp
je
mov
sbb
data16
cmp
pop
dec
out
xor
and
aas
mov
clc
iret
push
mov
and
enter
xor
and
sbb
mov
sti
lret
and
add
adc
inc
push
std
stos
cmpsl
sbb
fistl
cmpsl
rclb
push
sub
in
pop
fstpt
out
popf
cmp
push
sub
inc
imul
sbb
push
add
mov
jle
xor
pushf
mov
in
ror
cmp
jmp
iret
inc
cld
imul
push
xchg
push
mov
enter
pop
mov
fst
and
push
pop
xor
mov
mov
mov
sub
add
mov
dec
jae
mov
subb
or
xor
mov
sub
outsl
cld
mov
mov
sahf
push
dec
jno
data16
in
xor
xchg
jne
sub
inc
shlb
shlb
adc
mov
bound
repnz
jno
or
int
mov
iret
jo
mov
lcall
in
arpl
pushf
inc
es
pop
imul
sbb
xchg
mov
inc
xor
jae
jl
pop
negb
sbb
pop
dec
fldcw
mov
cmp
sarb
outsb
fmull
mov
mov
and
shl
and
mov
loop
sub
rolb
jno
mov
cmp
rcl
es
push
or
xchg
arpl
insb
jmp
jl
dec
cltd
lods
and
orl
lds
insb
push
andb
mov
ss
sub
std
cmp
sub
push
ljmp
fcomi
repnz
xor
pop
pop
xchg
xchg
notl
add
xor
jno
xor
shll
add
call
decb
daa
nop
xchg
inc
jecxz
pop
mov
dec
push
in
xchg
jge
jnp
mov
lret
inc
xchg
xchg
jbe
pop
cmp
cmp
loope
bound
int3
add
cli
sti
or
lea
jmp
sbbb
mov
mov
cli
orb
push
jno
add
lcall
or
call
or
rcl
movb
loope
and
gs
mov
adcl
dec
and
and
or
cmp
lret
jne
in
imul
sbb
pop
lcall
daa
jbe
data16
jno
xchg
aas
inc
pop
push
stos
mov
xchg
enter
dec
cmpl
mov
rorl
shrb
ja
mulb
ds
or
mov
aad
test
in
enter
add
dec
mov
sbb
sbb
cmp
push
sarl
jbe
jmp
test
lock
sub
add
add
mov
in
inc
test
add
pop
pop
aas
dec
dec
dec
test
lret
mov
sbb
std
sbb
pop
cmp
into
fsubrl
mov
cmp
clc
mulb
sub
out
mov
rorl
scas
adc
sbb
mov
out
xor
dec
dec
pop
sub
popf
pop
add
jmp
in
lret
xorl
inc
mov
add
or
shll
adc
push
arpl
out
cmp
lcall
xor
int
push
jns
sub
adc
inc
mov
fnstcw
xlat
inc
dec
pushf
es
aaa
test
pop
push
jae
cmp
cwtl
sbb
out
ds
adc
scas
jnp
subl
hlt
sti
and
pushf
icebp
data16
pop
adc
jbe
mov
pushf
pop
sbb
int
push
jp
addr16
into
lods
adc
pop
and
or
sub
mov
and
jns
mov
or
xchg
pop
dec
bound
movsl
jns
sub
insb
repz
sbb
xor
xchg
shlb
ret
sub
push
leave
pop
lahf
mov
bound
and
or
mov
movsb
xchg
push
repnz
inc
add
inc
clc
push
inc
xor
add
loopne
mov
fisubl
add
or
test
insl
xor
pop
sbb
add
or
jp
fisttpll
vprotq
push
sbb
int
mov
leave
jnp
out
test
in
sub
mov
dec
cmp
add
jmp
jg
sub
out
aas
mov
xor
sahf
add
enter
test
lret
mov
xchg
mov
in
in
mov
inc
lods
out
jmp
sub
iret
cs
dec
out
aam
mov
outsl
push
inc
cmpsb
mov
adc
lock
mov
pop
and
jecxz
cwtl
in
lock
out
enter
and
bound
cmc
ffreep
xor
xor
cli
int3
pop
iret
cmp
sub
enter
dec
enter
cmp
enter
stos
mov
jecxz
sbb
mull
cmp
js
int
sbb
pop
scas
or
add
dec
xor
adc
repz
jle
mov
add
inc
pushf
mov
jmp
loopne
xor
jg
or
stos
xor
push
xor
mov
mov
mov
push
dec
loope
sub
sti
movb
in
je
cld
add
push
sbb
in
fmull
lock
inc
imul
inc
xlat
stos
add
add
push
jns
pushf
ss
xchg
inc
inc
mov
push
scas
ja
xor
test
sbb
out
ret
movsl
ss
mov
std
cmp
mov
test
mov
pop
adc
push
loope
repnz
pop
mov
dec
xchg
test
ret
sub
in
shlb
stc
or
sub
call
cltd
sub
aaa
scas
add
pop
loope
inc
or
xchg
rcrl
and
repz
les
sub
aad
add
xor
dec
lods
mov
push
dec
mov
xchg
in
stos
push
sub
fadd
cwtl
sbb
orb
mov
out
std
inc
outsl
jmp
inc
adc
and
outsl
pop
and
push
jo
inc
jle
push
shrl
cmpsb
inc
jne
xor
mov
cmp
or
jl
cld
or
adc
lahf
cwtl
pushf
or
push
iret
insl
sbb
push
lds
sub
inc
movsl
jno
out
mov
add
fs
in
jbe
stos
inc
fiadds
and
cmp
popa
je
data16
sbb
mov
cmp
ret
jo
jb
mov
inc
pop
andb
xor
sbb
decl
sub
and
ret
call
int3
addr16
adc
mov
adc
repnz
xor
repz
pop
inc
sub
push
and
pusha
gs
push
cs
push
les
mov
pop
dec
rolb
fildl
cmp
jecxz
sub
cltd
jg
shrl
js
mov
test
pop
test
jp
dec
scas
mov
insl
cmp
xchg
dec
jbe
add
int
mov
sub
das
inc
cmp
mov
test
xor
jp
out
adc
mov
cmpsl
or
fsts
in
ljmp
stos
cmpsb
jae
lret
and
mov
sbb
stos
mov
sub
or
inc
cmpb
inc
push
inc
mov
movb
push
dec
test
rolb
add
lret
dec
inc
xchg
pop
bound
mov
lods
jle
xchg
sti
cmpsl
add
nop
mov
cltd
push
stos
and
loopne
sbb
gs
sbb
xchg
inc
jno
pop
test
fmul
jbe
stos
jge
fstpl
cmp
cmp
push
andl
mov
stos
shlb
xchg
pop
inc
and
xor
icebp
jne
cmp
negb
mov
out
dec
sbb
stos
hlt
rolb
popf
frstor
lcall
push
xor
sahf
lea
mov
sub
push
pop
gs
add
dec
iret
cmc
outsb
das
mov
inc
jb
and
es
repnz
jmp
scas
xchg
repz
fcoml
std
mov
movsb
jbe
gs
ret
subl
jecxz
imul
add
call
mov
jg
add
inc
pushf
inc
inc
mov
mov
out
xor
cld
popf
imul
and
es
sti
or
nop
push
cmp
or
and
mov
lods
xchg
fstpl
scas
in
mov
xlat
lock
hlt
js
fdiv
jge
sbb
sbb
int
scas
movsl
pop
sbb
mov
lods
lahf
push
dec
fstps
scas
xchg
fnstenv
inc
xor
xchg
sub
pop
xchg
mov
push
test
sub
xchg
and
rcr
imul
lret
leave
lods
mov
shll
sub
xor
test
xchg
addr16
hlt
push
lret
cmpsl
push
xchg
xchg
mov
pushf
out
xlat
xchg
cmpsb
cmc
call
mul
xorb
shlb
out
out
sahf
in
mov
aad
cmp
xor
aaa
testb
es
push
cmpl
stc
dec
mov
test
popa
push
sbb
scas
in
sub
mov
fistl
sbbb
int3
inc
inc
ret
cmc
bound
sqrtps
xchg
int3
xor
pop
or
pushl
mov
push
jle
mov
into
and
xchg
pop
rcl
add
neg
sahf
push
cs
mov
repnz
lds
into
cwtl
iret
add
stos
lock
clc
in
adc
in
xor
and
mov
lock
aad
xchg
adc
mov
inc
inc
push
push
cmpsl
das
clc
or
xchg
imul
in
push
in
sbb
cmp
xor
pushf
mov
jne
lcall
pop
xlat
pop
ds
bound
sub
and
jbe
push
inc
dec
inc
xchg
mov
xchg
mov
push
jae
push
cs
push
in
cmp
mov
shrb
cmp
dec
mov
fucomi
cltd
sar
imul
inc
aam
lock
pushf
ficompl
test
ss
sti
cs
fsubrl
add
add
out
xchg
into
scas
ret
xchg
cltd
gs
sub
adc
pop
or
cmpb
pop
lock
mov
in
sbb
or
jmp
xchg
mov
les
js
sub
sub
fisttps
push
out
aas
into
pop
inc
sbb
sahf
arpl
std
mov
cld
jno
and
mov
fistps
mov
negb
lret
xchg
cltd
add
aam
xor
add
pop
mov
add
push
sub
out
mov
daa
and
aad
inc
xor
test
movsb
addr16
pop
dec
lds
mov
sti
fidivs
adc
cmp
xor
push
shlb
push
adc
fcmovnu
cmp
or
inc
mov
dec
data16
xchg
ss
sbb
dec
fistpl
push
pop
fs
add
sbb
out
inc
out
out
imul
fstpt
mov
sbb
adc
std
cmp
jne
outsl
mov
and
outsl
xor
lahf
mov
adc
sub
cmpsl
fxch
cmp
xchg
lcall
push
and
cmp
xlat
mov
scas
and
add
pop
sub
inc
push
xor
sub
mov
dec
dec
or
int3
out
jecxz
popf
cmp
mov
popl
dec
add
addr16
iret
and
aas
mov
pushf
cmpsl
xchg
xor
xchg
mov
or
repnz
movsb
xor
pop
push
push
sub
mov
mov
or
lret
out
scas
sub
call
out
shrb
xchg
insb
or
test
sub
filds
out
push
test
mov
popa
push
jbe
mov
sub
xor
add
fwait
lea
mov
push
hlt
ja
pop
xchg
shrb
or
jle
stc
cmp
jno
inc
daa
andl
pop
lods
out
push
cmp
mov
pop
mov
cmp
lock
outsb
std
mov
test
add
mov
inc
mov
popa
and
inc
or
add
les
inc
mov
inc
and
lock
add
aam
push
mov
lods
pop
test
roll
ret
mov
lock
mov
mov
lret
and
dec
andl
pop
mov
stos
xor
fcom
scas
mov
push
test
pop
les
mov
mov
add
xor
cmpl
dec
dec
xor
sub
inc
or
mov
mov
test
test
rcll
push
fldt
xchg
sub
fsubrp
mov
lret
inc
lret
cmp
cli
push
outsw
pop
or
popa
clc
pop
dec
push
std
cmp
sub
les
icebp
jns
fmull
nop
mov
notb
mov
pop
pop
inc
or
or
pop
and
mov
xchg
and
in
cmc
filds
or
dec
sub
or
cmp
add
xchg
movsb
push
fldcw
and
loopne
fstp
repnz
loopne
iret
aam
sbb
mov
and
divb
loope
in
jmp
mov
enter
jo
shl
adc
jmp
cmc
mov
lahf
jl
fistps
sub
insl
scas
and
adc
imul
out
shll
sub
std
daa
pop
stc
pop
fwait
lret
es
xchg
fucom
mov
pop
andb
imul
xchg
leave
int3
xor
dec
inc
adc
xor
cmpsl
stos
inc
int3
frstor
add
sbb
sbb
mov
jg
push
stos
fildl
adcb
mov
or
lds
jbe
sbb
dec
sbb
fadd
cmp
data16
xchg
pop
cmp
mov
sbb
cmp
ret
inc
and
popa
arpl
push
cwtl
adc
inc
xor
js
subb
inc
add
test
adc
iret
mov
push
fdivrl
aam
and
mov
out
push
scas
adc
mov
lods
rol
jb
mov
jno
mov
pop
lret
inc
and
mov
or
cmp
imul
pop
add
add
jle
mov
push
dec
inc
adc
inc
lret
xor
sub
sbb
sarb
push
out
push
rclb
andnps
fsubrs
push
test
cs
into
sbb
jmp
addr16
lret
mov
mov
xchg
mov
mov
mov
stos
cli
jp
mov
popf
xchg
insl
in
pusha
sti
mov
insb
mov
loope
dec
enter
mov
jbe
add
adc
data16
push
pop
movsl
adc
xchg
sti
push
cmc
repnz
pusha
cmpsl
aas
aam
fwait
push
or
jo
test
dec
jnp
lret
mov
adc
movsl
xchg
nop
xchg
dec
mov
add
out
test
jno
lret
inc
adc
dec
shr
cmp
cmp
dec
push
cmp
cmp
das
cmp
cmpsb
in
shr
popa
inc
xchg
cwtl
enter
and
outsl
sub
push
les
test
pop
dec
mov
gs
or
or
bound
and
mov
fbstp
test
lahf
dec
lds
mov
jo
adc
adc
int3
in
outsl
mov
andb
out
add
fcmovnbe
or
jg
insl
lret
shlb
pushf
push
mov
xor
stc
xchg
ret
pop
inc
xlat
push
xchg
jmp
in
lods
imul
subb
push
push
jbe
fwait
and
xchg
sbb
arpl
push
mov
lds
fwait
xchg
adc
ja
mov
stos
cld
xor
pop
mov
or
inc
ret
lret
out
gs
mov
daa
ret
mov
in
mov
jecxz,pn
mov
movsb
and
aaa
xchg
aaa
xchg
mov
les
mov
pop
lcall
sbb
cs
add
mov
xor
sbb
pop
push
shll
inc
stc
xchg
pop
movsb
imull
sub
inc
mov
add
push
inc
in
test
cmp
jp
or
or
mov
inc
xor
add
and
jmp
sbb
mov
mov
aam
fwait
push
lods
enter
pushf
loop
sub
daa
lea
jns
mov
xchg
shlb
lcall
xor
shll
shlb
data16
fwait
jge
and
lods
test
jno
xorl
aaa
cmp
popf
rol
cmp
stc
mov
cmpsl
out
xor
cmp
shr
mov
arpl
dec
aas
sbb
pusha
xlat
mov
mov
inc
add
sbb
push
cmp
fwait
aaa
negl
loop
push
jnp
mov
rcr
scas
icebp
lods
sub
in
lods
pop
in
cli
fmull
sti
dec
xchg
frstor
in
dec
cmp
and
pop
xor
inc
outsl
insl
pop
sbb
mov
pop
add
pop
push
sub
mov
into
mov
loop,pn
mov
test
push
pop
jge
ja
inc
rcrb
fadds
inc
out
push
sbb
jle
pop
mov
or
jl
push
popf
mov
sarb
repz
in
idivb
mov
outsl
pop
mov
inc
push
shr
add
testl
xor
scas
test
mov
mov
lock
mov
push
int3
pop
movsb
shl
jb
xchg
xchg
rcrl
sbb
pop
mov
pop
repnz
sub
subb
xor
jns
xor
and
fs
add
xchg
add
cmc
test
jmp
adc
fcmovne
adc
xchg
sub
add
jbe
es
out
sbb
dec
mov
push
adc
dec
shufps
bound
jns
insl
xor
push
push
xchg
out
out
pop
inc
sub
out
dec
sbb
aad
sub
xchg
test
int3
stos
sbb
jnp
addr16
jne
in
mov
mov
pop
adc
xchg
aam
sub
adc
repz
mov
dec
add
mov
mov
adc
test
stos
sahf
test
lret
jno
dec
push
gs
outsb
add
pop
lea
in
clc
cli
cmpb
inc
inc
cmp
mov
mull
and
mov
nop
lock
push
pusha
test
pop
outsl
pop
into
mov
sub
inc
lods
cs
inc
add
aas
fnstsw
add
mov
adc
jae
out
mov
add
or
or
mov
outsl
inc
xor
adc
aas
push
rolb
dec
jns
loopne
mov
ret
int3
jge
int
ljmp
js
rep
xchg
mov
sub
add
add
cmp
arpl
inc
insl
mov
xchg
push
pop
out
adc
jge
cmp
sbb
push
into
pop
lods
xor
fidivs
int
sbb
sub
push
jo
pop
cbtw
sub
add
outsb
and
or
stc
es
push
test
or
cmp
in
mov
movsl
nop
mov
repnz
imul
and
mov
sbb
jge
inc
ret
rcl
mov
ja
int
adc
ds
dec
or
addr16
fnstsw
add
fistl
xchg
adcb
fdivrp
int
mov
lds
pusha
popl
aad
je
bound
repnz
xchg
lret
mov
jb
pop
inc
jge
addb
dec
arpl
dec
jae
cmp
cmpsl
push
dec
shrl
mov
aad
rcll
xchg
mov
sbb
pop
pop
scas
rcrl
js
push
stos
ja
mov
aam
pop
jmp
sbb
sar
cmp
mov
cmpsl
pop
les
pop
cmp
mov
shll
ja
sub
lock
lods
mov
dec
xor
push
pop
sti
fadds
xor
and
add
fistl
sbb
dec
push
arpl
and
out
popf
inc
push
sahf
sbb
mov
int
push
inc
je
push
dec
and
dec
daa
lods
jbe
pusha
popf
jo
test
in
mov
jmp
lods
addr16
or
pop
inc
push
xor
cmpsb
data16
xor
mov
movsb
mov
or
jae
int3
imul
stos
cli
outsl
xor
mov
inc
inc
and
ret
push
push
fcomps
aaa
xorb
push
mov
hlt
xchg
add
popf
leave
add
icebp
stos
xor
xchg
dec
jb
jl
cli
cmp
cmpsl
sbb
sub
jl
mov
cwtl
iret
arpl
cmc
or
push
lret
into
xlat
clc
stc
adc
negl
popa
mov
jge
stos
jecxz
out
dec
adc
repz
mov
loope
aad
sbb
add
aad
push
or
test
movd
rcrb
adc
lret
adc
ret
mov
iret
xchg
xor
xor
push
ljmp
addl
je
fstpt
push
dec
adcl
mov
cmpsb
add
fs
int3
shl
jmp
std
popf
sbb
mov
insl
adc
aas
adc
push
das
adc
mov
into
test
xchg
test
jge
or
mov
mov
jns
cmpsb
mov
jno
mov
mov
scas
cmp
push
push
cmp
mov
out
outsb
xchg
repnz
mov
pop
dec
movsb
mov
adc
loop
ljmp
jle
in
movsb
insb
or
jns
cmp
mov
pushf
jo
jne
mov
sub
outsb
add
stc
mov
fimuls
cmp
imul
enter
ja
cwtl
cld
sarb
pop
xor
popf
data16
jne
add
dec
test
xchg
mov
mov
inc
out
loope
cmp
cmp
mov
sub
ds
mov
out
adc
enter
rcrb
inc
repnz
aaa
and
out
mov
or
cs
inc
mov
cmpb
pop
dec
pusha
pop
fimuls
iret
and
inc
cmp
add
mov
and
clc
xchg
sbb
jae
sub
or
fldenv
lock
jbe
push
mov
mov
cmc
push
fs
push
fimuls
in
lret
aas
or
pop
inc
ljmp
jae
mov
iret
mov
or
es
jne
pusha
mov
sbb
jae
test
mov
jbe
std
sub
jle
inc
stos
daa
inc
jae
xor
cmp
and
push
sub
idivl
jbe
movsb
in
mov
pop
pop
mov
mov
lods
and
mov
xor
cltd
out
push
jg
std
pop
mov
mov
mov
push
xchg
cmpb
stos
not
clc
pushf
xor
popa
inc
lds
xchg
lock
cmp
pop
mov
test
std
pop
pop
sbb
inc
outsl
mov
push
mov
pop
fwait
push
dec
xchg
or
dec
jmp
sbb
adc
mov
fstl
in
outsb
test
inc
adc
insb
xchg
pushf
push
pusha
call
fcmovb
jae
enter
push
lret
test
inc
mov
xor
add
mov
aas
mov
fmuls
and
orb
jg
push
mov
inc
and
cltd
xchg
add
test
cmp
in
cvtps2pd
sub
cs
psrld
aad
cmp
push
pop
out
mov
sbb
push
fcomp
aad
push
xor
fiadds
xchg
clc
repnz
dec
dec
jle
hlt
dec
fdivrp
outsb
xor
popa
jp
mov
jo
rcl
sbb
lock
inc
rolb
test
mov
sahf
pusha
shlb
inc
pusha
sub
cmp
icebp
mov
test
enter
adcb
dec
xchg
xchg
xchg
in
in
cmp
jg
inc
or
sbb
jge
dec
dec
push
ffreep
jae
jge
sbb
cmc
sub
inc
pop
push
jecxz
les
xor
ja
mov
aam
mov
mov
aam
fsubrl
xorb
mov
gs
out
je
adc
xchg
adc
lahf
xchg
xchg
sub
jnp
mul
cli
int
dec
nop
rcll
xor
push
fidivrs
xchg
imul
arpl
or
inc
aas
out
lahf
jle
cmp
or
in
dec
xchg
test
aam
mov
add
adc
and
add
cmpsb
xchg
nop
repnz
sti
insl
cld
pusha
jecxz
aaa
dec
mov
outsb
fs
dec
shll
push
mov
fisubrs
clc
dec
lcall
cli
das
add
sahf
out
mov
cmp
sub
movsb
into
out
jecxz
ror
mov
mov
mov
sbb
mov
push
ficoms
popa
fcmovnu
xchg
xlat
dec
xchg
mov
jno
stc
dec
xchg
xchg
call
jg
jmp
mov
adc
adc
cmp
outsb
mov
orl
lret
mov
aas
fldt
in
clc
dec
cmp
ret
bound
pusha
stos
xchg
iret
mov
push
push
fstl
test
add
into
mov
pop
test
mov
div
cmpsb
pop
inc
add
jo
cltd
aam
pop
cs
mov
or
fadds
fnstsw
xchg
loop
das
sbb
adc
aad
dec
mov
into
cs
xlat
cmp
jnp
push
push
jmp
ftst
in
std
ret
sbb
js
xchg
mov
adc
jle
and
frstpm(287
stos
mov
inc
xor
outsl
xlat
inc
cmp
leave
mov
movsl
cmp
in
scas
mov
lock
mov
sub
test
inc
dec
add
xor
mov
scas
sahf
std
jmp
jmp
paddusw
jl
pop
aam
xchg
ss
cmp
adc
jle
jnp
and
and
in
test
adc
xor
adcl
or
and
ljmp
cs
pop
pushf
adc
push
subb
sti
popa
out
mov
notl
pop
outsb
adc
out
mov
pop
or
jno
aad
push
mov
adc
cwtl
xchg
lcall
push
lods
enter
shrl
jmp
pushf
pop
in
adc
repz
in
sub
popa
sub
push
aaa
lcall
mov
sbb
test
sub
icebp
out
pop
mov
je
mov
sub
xchg
jns
mov
xchg
pop
mov
fstpl
jmp
and
add
subb
xchg
xchg
xor
es
arpl
push
mov
out
push
out
dec
lock
shl
or
int3
scas
hlt
fidivs
in
mov
imul
jp
cwtl
lcall
or
cltd
cmp
int3
aaa
mov
jmp
sub
out
xchg
add
mull
loope
push
and
and
fs
push
sub
push
and
mov
leave
inc
icebp
shll
test
add
in
xchg
cmp
and
push
push
cmp
daa
jmp
and
pushf
sbb
push
lahf
jbe
shll
hlt
fcmovnb
jb
rclb
mov
inc
test
mov
into
and
sbb
mov
mov
xchg
out
mov
xchg
inc
imul
xlat
popa
sub
sti
mov
xchg
jl
popa
stos
loope
int
push
jmp
out
test
mov
jecxz
in
and
enter
lock
push
outsb
test
xlat
or
push
xchg
aam
pop
push
inc
and
jge
sub
inc
mov
cmp
mov
aaa
mov
cltd
add
mov
pop
or
xchg
rcr
stos
pop
mov
insb
test
inc
daa
ss
aad
fwait
add
lods
xchg
cltd
cld
out
lahf
outsl
adc
cmp
enter
push
out
mov
xchg
outsb
clc
or
popf
aad
out
icebp
orl
cmp
push
nop
inc
inc
aaa
lret
test
sbb
lea
cwtl
adc
enter
movsb
les
std
out
inc
pop
push
fmull
aas
lret
inc
into
sbb
mov
movsl
repz
cwtl
sahf
push
popf
cmpsb
xorb
or
xor
fidivrs
sub
mov
sub
pushf
push
int
imul
mov
call
daa
in
sbb
and
ds
xor
dec
push
orb
insl
scas
shlb
inc
lods
iret
ja
bswap
ffree
dec
jns
in
fwait
xchg
cmc
xor
xor
adc
out
mov
and
lods
pop
dec
cltd
add
push
fstl
in
js
inc
cmp
sbb
dec
mov
movsb
fiaddl
sub
xchg
lds
daa
cltd
outsb
xor
lcall
loopne
pop
pop
push
loope
mov
jae
sub
adc
fstpl
loop
sub
or
outsb
mov
cmp
inc
call
push
cmp
repz
mov
push
mov
imul
xchg
shrl
pop
ja
test
mov
sub
jg
subl
xchg
mov
xor
sub
inc
sub
inc
adc
and
inc
insl
jne
or
jg
dec
or
repz
add
and
sbb
shrl
mov
xchg
lock
pop
and
lret
inc
outsb
mov
cli
jne
jns
sub
cmp
not
mov
into
in
pop
push
sbb
push
pop
push
movsb
clc
inc
in
xchg
pop
nop
fs
inc
add
xlat
jp
cld
xchg
or
cld
cltd
jbe
lret
or
xchg
adc
and
cmp
add
mov
add
sub
push
repz
mov
cld
out
mov
adc
insl
dec
add
mov
jb
jle
add
test
sbb
test
xchg
aas
adc
cmp
push
cmc
leave
or
dec
aaa
inc
das
push
pop
les
cmpb
sub
lea
iret
sbb
inc
test
lods
enter
jo
jns
jb
pop
push
xchg
jg
stc
mov
out
xor
dec
dec
jns
cmp
xchg
pop
fstps
push
push
xchg
mov
rcrb
sub
xor
push
insb
mov
lock
sbb
fs
cld
ds
sarb
test
cld
sbb
pop
fnstenv
adc
push
mov
fmuls
fnstenv
addb
jg
inc
nopl
xor
mov
mov
lock
xchg
fsubs
and
add
clc
stc
or
sti
std
add
test
lods
fwait
xorl
les
or
or
add
rcr
lds
lahf
dec
mov
pop
pop
push
push
cmp
sbb
and
push
mov
sub
jnp
sub
cmp
std
push
outsb
push
xchg
pop
jo
add
mov
dec
push
mov
inc
add
loop
or
test
mov
and
movsb
popa
lahf
cwtl
push
add
lcall
in
les
ds
pop
cld
clc
dec
inc
fldenv
add
cld
sbb
ljmp
jns
stos
gs
into
arpl
mov
int3
jnp
cmp
pushf
out
push
sbb
sub
cld
loop
sub
cmp
xorl
insb
fcmovbe
js
icebp
mov
lods
in
mov
push
loope
hlt
mov
in
jae
mov
imul
stc
lock
ret
popa
sub
fs
inc
add
cli
add
mov
cmp
sarl
mov
push
bsf
mov
aad
enter
mov
add
aad
mov
xchg
add
sub
dec
aas
adc
adc
fisttpl
clc
fnstcw
adc
push
dec
adc
inc
and
filds
jmp
not
cmc
rcrl
cwtl
jp
ficomps
mov
imul
or
mov
ud0
je
pushw
es
sbb
fwait
xchg
dec
adc
ds
mov
addr16
lret
jp
ret
sbb
fiaddl
enter
dec
fnsaves
clc
cmc
adc
loopne
push
lea
sbb
out
cmpsb
outsb
pop
jno
lahf
push
or
out
lret
mov
add
or
int3
pop
enter
std
mov
aas
pusha
imul
hlt
sub
out
orl
out
add
pusha
xchg
pop
push
mov
push
repnz
sbb
xor
cli
jle
xor
mov
add
fs
xchg
fs
jge
fwait
lret
andb
sbb
fdivrs
lret
insb
and
leave
es
shrb
jno
jbe
pop
cmp
lcall
pop
jmp
loopne
push
cld
leave
mov
test
test
pop
nop
mov
cwtl
jno
sub
leave
push
test
enter
pop
sbb
loopne
sub
lea
mov
repnz
sahf
dec
pop
jno
push
sub
scas
arpl
sbb
add
xchg
insb
push
pop
ljmp
lods
cli
sbb
idivb
jae
adc
bound
mov
cmp
push
stos
mov
mov
dec
gs
inc
adc
pop
fs
pop
idivb
sub
sbb
cs
ds
outsb
mov
repnz
cmp
scas
aaa
dec
add
test
jbe
xchg
sbb
jmp
mov
cmp
mov
and
xchg
xlat
mov
cli
pop
pop
sub
pop
fisubl
insb
inc
push
stc
dec
cld
jae
scas
bound
pop
sti
ret
fiadds
fs
xor
pop
fstpl
test
xor
lahf
stos
cltd
jne
xchg
cmp
jns
cmp
pop
xor
rcrl
xchg
jl
cmp
and
mov
lock
xchg
jae
lcall
int
dec
mov
mov
dec
stc
clc
jo
scas
lods
push
cli
js
add
and
add
cmp
shlb
roll
add
inc
jo,pt
ret
jmp
and
xor
xchg
aaa
test
cmp
das
pop
jb
ja
lods
pushl
pop
lret
les
aam
dec
add
fcompl
sarb
push
inc
or
mov
adc
jns
sbb
push
cltd
inc
inc
xlat
leave
lret
mov
mov
arpl
xor
sbb
jge
cwtl
mov
out
fidivl
lahf
push
loopne
ds
int
scas
sahf
fsubs
sub
adc
or
jnp
mov
sbb
fldcw
fdivrl
movsb
dec
push
into
cli
int3
popa
adc
sub
hlt
inc
adc
pop
je
xor
adc
sbb
aad
or
fwait
sti
dec
xchg
cmp
mov
adc
enter
gs
movsl
jno
icebp
or
lahf
push
es
xor
jo
fnstsw
pop
add
je
rorb
mov
int3
push
shrb
ficomps
or
imul
pop
shl
push
scas
lods
test
lds
int3
xor
mov
mov
fwait
ret
inc
push
mul
mov
lock
cmp
pop
pushf
sbb
dec
push
addr16
jp
mov
stos
and
and
ss
mov
xor
sbb
roll
push
movsb
mov
xorb
push
fisubrs
add
scas
int
mov
inc
add
gs
push
scas
xor
fbld
loopne
mov
fs
mov
xor
lahf
pushf
test
pushl
std
and
aam
dec
je
adc
xor
or
mov
mov
and
jmp
adc
sti
pop
sub
xchg
xor
sahf
movsb
les
jmp
and
loopne
jb
push
loopne
aaa
jnp
xor
pop
cmp
dec
shrb
fcoms
add
lea
aam
push
repnz
into
aam
clc
arpl
dec
decb
mov
aas
cmpsl
mov
mov
and
push
pop
sub
xchg
outsb
mov
or
xor
push
or
and
inc
and
enter
lds
loope
push
pushf
mov
and
push
ret
scas
push
xchg
call
cmc
or
mov
mov
jecxz
jl
mov
mov
lock
insl
cmp
mov
call
pop
jo
xlat
dec
int3
lahf
adc
outsl
arpl
bound
mov
push
push
pusha
adc
hlt
daa
icebp
dec
pop
loope
ret
pop
lods
xor
daa
pop
lods
adc
ror
sub
pop
lahf
pop
fmul
pop
int
movsb
or
pop
or
shll
jl
dec
cmc
lcall
repz
fiadds
push
lods
ret
mov
pop
mov
xor
pop
popa
xor
sub
addr16
outsb
test
add
dec
jnp
fst
inc
xchg
scas
daa
out
push
dec
pop
inc
mov
es
rcr
xchg
bound
fwait
mov
repz
lea
in
or
arpl
pop
popf
pop
rclb
enter
mov
mov
and
call
pop
xor
fs
inc
cmpsl
cltd
shrl
nop
and
sbb
mov
fistpl
movsl
pop
das
test
jecxz
jno
inc
scas
imul
out
aad
jl
movsl
sbb
das
xor
cmp
lret
and
insb
mov
in
pop
cmc
fdivr
rorb
leave
cmp
sub
dec
pushf
pushl
xchg
scas
and
inc
sarb
inc
sub
sti
and
in
rclb
and
fildll
pop
lods
test
aam
mov
cmp
adc
pop
fcmovb
push
inc
aad
push
dec
test
xorb
shrb
dec
add
enter
rcl
ret
sub
cmp
push
mov
loope
adc
test
movsl
pop
dec
sbb
movsl
stos
outsb
cs
int
fwait
mov
scas
sti
stos
push
xchg
xchg
scas
jne
ret
and
mov
into
fildl
inc
in
imul
mov
popf
sbb
or
clc
enter
daa
iret
add
xlat
sub
cmc
paddb
in
sub
dec
outsl
and
test
and
sbb
outsb
out
ret
add
imul
lcall
mov
inc
sti
inc
stc
mov
cli
int
cmpsl
sbb
stos
mov
ret
add
inc
fcoml
xor
ja
test
test
pop
arpl
pop
sub
push
xor
mov
mov
lods
int3
push
cmpsb
jae
xchg
clc
xchg
pop
jo
mov
mov
jp
sub
and
mov
mov
imul
mov
mov
mov
out
mov
dec
jns
lcall
fs
push
sbbl
ljmp
call
inc
mov
and
cld
fwait
inc
cld
pop
lret
test
pop
cmpsl
mov
cmpsb
mov
outsl
mov
or
in
int
in
mov
out
das
out
gs
rcl
add
mov
push
xor
sub
xor
jmp
push
inc
xor
imull
nop
jmp
repnz
and
jo
add
mov
shl
fs
mov
fmul
popf
or
mov
adc
mov
fstpt
and
push
sbb
mov
stos
sbb
xor
push
lcall
inc
icebp
push
jmp
sahf
lods
fldenv
mov
jle
dec
sbb
insb
rolb
cmp
sbb
addr16
ret
jne
xchg
xchg
add
loopne
dec
mov
dec
test
in
rcrb
loop
insb
gs
jg
or
ror
fs
push
push
xor
cmp
in
ja
movl
mov
shrb
inc
ljmp
mov
push
fcomps
or
pop
or
mov
fs
or
cld
mov
idiv
cld
mov
adc
jno
cli
sbb
or
jge
jnp
test
cmpsb
lahf
das
push
sub
lcall
jns
sub
cmpl
es
push
push
pop
jl
cmp
and
ret
add
sbb
adc
imul
es
cmp
inc
xor
mov
pop
shlb
sub
fisubrl
popa
inc
in
and
mov
in
xchg
in
fisubs
cwtl
test
mov
fsubrp
or
aad
movsl
aad
lock
das
aad
lcall
push
rcrb
lcall
add
icebp
ljmp
sub
int
jge
sub
imul
nop
mov
pop
xchg
add
xor
mov
pusha
xor
xlat
mov
sub
xor
mov
dec
insl
cld
imul
mov
pop
subb
gs
mov
or
aaa
dec
xor
rcll
inc
aad
mov
or
push
adc
cmp
bound
dec
inc
gs
inc
test
stc
push
sbb
pop
orl
mov
xor
mov
mov
jecxz
mov
les
cmp
dec
mov
xchg
test
mov
mov
ja
js
int3
mov
cltd
mov
or
cmp
pop
subl
loope
dec
pop
cld
jb
loop
or
cmp
aas
dec
sub
push
xchg
hlt
mov
fdivr
imul
sbbl
fs
push
adc
je
ljmp
xor
pop
popf
sub
or
dec
sub
sbb
sbb
sahf
push
loopne
jecxz
jl
hlt
xchg
div
fwait
lock
fwait
push
jmp
and
cmp
repz
dec
cld
dec
cli
test
cld
cmp
add
int
pop
add
ror
insl
in
sbb
mov
pop
fmulp
fs
dec
pop
inc
lret
jne
pand
bound
mov
xchg
or
sbb
inc
sbb
repnz
mov
gs
rclb
nop
dec
shll
push
inc
xor
les
cli
insb
pushf
jnp
test
popf
cmp
pop
push
in
sbb
scas
dec
mov
xor
mov
pop
sub
movsl
or
mov
fs
mov
pop
data16
push
ljmp
das
es
aam
inc
out
sbb
sarl
stc
pop
lcall
mov
sbb
mov
sub
jge
cmpsb
call
cli
dec
and
fwait
cmp
out
adc
inc
leave
fnstsw
pop
mov
sti
pop
mov
push
xor
mov
jo
mov
lret
ljmp
inc
scas
pop
push
out
mov
mov
mov
rorl
cmp
repz
dec
insl
cmpsl
rorl
mov
push
cwtl
icebp
sub
adc
cmpl
xchg
xor
adc
sbb
into
xchg
scas
repnz
je
stc
lret
jmp
sbb
mov
add
jnp
lcall
imull
or
nop
ret
es
icebp
ljmp
imul
jae
adc
cmp
or
pop
scas
dec
dec
add
push
repnz
mov
jg
pop
daa
and
xor
jne
xchg
out
cmp
inc
sar
std
ja
xchg
pop
mov
je
mov
pusha
jmp
pop
or
sub
out
xchg
mov
pushf
jp
adc
xor
ret
xor
inc
add
xchg
inc
xor
add
fstp
imul
dec
inc
lret
addr16
push
sbb
pushf
leave
test
ljmp
leave
mov
cmpsl
or
mov
shll
mov
orb
fistps
lret
jno
xor
push
push
clc
ss
dec
push
shl
popa
int3
mov
sbb
inc
mov
lahf
addr16
scas
into
dec
fwait
aas
aaa
cmc
pop
pop
lcall
mov
jne
jo
jno
in
mov
jb
push
scas
out
imul
pop
mov
mov
push
arpl
pusha
pop
loope
sub
lds
stc
aas
xor
jmp
jnp
sub
iret
das
std
sbb
pop
xchg
cwtl
push
lock
xchg
push
sub
mov
jo
shll
pop
aad
xchg
adc
pop
ret
cmp
mov
sub
jne
insl
dec
inc
aam
aam
stos
stc
inc
sbb
inc
iret
adc
shll
cld
pop
xor
shlb
cli
ret
faddl
mov
data16
cmp
xchg
das
cmpsb
sub
adc
sub
cli
iret
jbe
xchg
pop
jp
cli
sbb
jbe
adc
sub
jl
jbe
movsb
call
negl
mov
pop
int3
inc
ficompl
mov
xor
jp
imul
dec
das
popf
xor
in
sbb
sbbl
mov
push
in
out
mov
mov
and
adcl
pusha
in
jl
popa
push
add
pushf
inc
cmpsb
push
adc
xchg
sbb
push
fsubrl
imul
std
jmp
push
lods
stos
rolb
div
or
das
sti
iret
pushl
lock
in
fsubp
cld
add
mov
xchg
adc
pop
les
in
sbb
mov
sub
pushf
inc
mov
and
jmp
jp
mov
jp
in
imul
jg
loope
lret
push
std
out
inc
and
inc
xorb
imul
cmpsl
mov
cmpsb
out
iret
shlb
ja
arpl
test
stc
shlb
xor
mov
data16
lock
jl
sub
pop
adc
or
mov
ss
xchg
or
in
addl
outsl
cmp
test
test
sahf
xchg
repnz
fwait
repz
jno
pop
sbb
dec
fcomp
add
sub
dec
xor
pop
lods
into
mov
pop
pop
enter
push
rclb
push
ss
cmp
leave
pop
pop
aad
insb
fwait
out
jns
fwait
pusha
jge
nop
daa
push
push
mov
pop
add
sub
xor
sub
pushf
and
push
mov
les
bound
jl
push
lcall
pop
mov
scas
xchg
cmp
lret
mov
inc
out
sahf
div
cmp
repnz
cltd
int3
jmp
test
fisubl
ja
inc
fdivs
pushl
sbb
or
jl
mov
out
mov
xor
and
or
jbe
xchg
mov
cltd
movsb
pop
push
adc
mov
jmp
popa
aam
lea
or
pop
sahf
cmpsl
push
nop
mov
mov
cmp
bound
outsl
sbb
shrb
mov
pop
mov
popf
cmp
in
adcl
popf
idivb
xchg
int
push
jae
adc
add
dec
and
or
stos
dec
sub
popf
addr16
aaa
xchg
push
dec
xor
inc
cltd
fucom
sahf
sbb
pusha
shlb
add
sbb
dec
subl
or
into
mov
jno
adc
fwait
add
adc
adc
movups
bound
scas
inc
push
cmp
mov
mov
jne
stos
push
jp
mov
dec
jbe
ljmp
std
add
xchg
out
fidivrs
pushl
jb
push
jo
fiaddl
sar
adc
jmp
rol
inc
jb
aam
xor
cltd
push
ljmp
in
cmpsl
xor
push
or
add
sub
pop
shlb
xchg
and
push
cmp
jle
jne
inc
mov
xchg
rcrb
insl
mov
and
insl
outsl
ds
cs
push
mov
rcrb
mov
lcall
dec
imul
jp,pt
lock
xlat
ds
imul
loopne
pop
hlt
mov
sub
loope
mov
pop
cmp
dec
mov
push
fucom
sbb
sbbb
loopne
add
inc
insl
cld
into
or
push
in
aad
sbb
xor
ja
add
mov
sti
rcl
inc
jle
adcl
movsb
sub
cmpsl
hlt
sbb
shlb
out
out
lcall
xchg
cs
loopne
loopne
push
pop
pop
mov
sbb
dec
mov
stc
push
adc
out
jle
inc
add
stos
pop
lods
jno
push
pop
or
jge
out
xchg
dec
push
out
arpl
jo
inc
or
scas
pop
xchg
adc
loop
jp
dec
dec
sub
add
dec
push
lock
std
pop
xchg
push
xor
outsl
xor
imul
jno
xchg
imul
in
lods
repnz
roll
notl
stc
sub
popa
mov
push
inc
and
pop
hlt
mov
repnz
rcll
push
cwtl
out
int
scas
lods
sahf
roll
out
pushf
lahf
stos
cmp
adc
cmpb
mov
imul
bound
fsubl
fisubl
inc
or
inc
jo
push
jle
push
fs
shll
ja
push
out
arpl
fiadds
pusha
jmp
arpl
mov
sbb
aad
mov
mov
jge
mov
dec
ret
daa
pusha
int3
out
pop
mov
in
sub
les
loop
dec
aas
enter
jnp
inc
jb
sbb
imul
jge
sbb
pop
sbb
xchg
inc
cmp
outsl
ja
out
loope
jmp
cmp
jno
std
sbb
fxch
xlat
inc
scas
rcr
sub
pop
dec
gs
sbb
in
std
rolb
das
dec
and
lahf
dec
push
fcoms
xor
sub
mov
aaa
jmp
jle
push
arpl
dec
lahf
and
mov
les
push
int3
cmpsb
sbb
insl
data16
pop
int3
xchg
cmpsl
add
pop
jbe
sbb
pop
rcrl
adc
xchg
jae
movsl
cmp
stos
ja
mov
into
cltd
movb
out
xor
fistpll
mov
rcll
lods
hlt
xor
fsubrl
insb
les
cmp
fistpl
movsb
out
test
das
and
fisttps
adcl
adc
pop
fstps
and
or
adc
ss
sbb
fistps
cmp
xor
inc
mov
insl
stos
xchg
adc
fsubs
sub
stos
mov
xchg
cmp
sub
jne
cmc
pop
out
jp
aaa
lret
aaa
push
inc
mov
rorl
cmpsb
popf
jmp
test
sub
cmp
jl
sahf
stc
adc
ds
ret
adcl
xor
pop
mov
jno
insb
add
or
sub
mov
cmp
lods
loope
xorb
fs
xchg
push
mov
cltd
sbb
pop
jbe
mov
mov
xor
mov
insb
insb
cmp
sarl
sbb
cltd
ja
cld
or
pop
scas
mov
cmp
sbb
ds
test
repz
cld
inc
daa
xchg
sub
repz
loop
bound
lds
jecxz
lcall
lret
mov
daa
scas
mov
inc
jecxz
jno
adc
mov
outsl
sbb
adc
mov
addb
cmp
jge
mov
scas
lcall
adc
inc
sub
std
jo
subl
mov
addl
adc
xlat
sub
pop
or
ret
ret
dec
scas
jp
mov
bound
je
cld
sahf
aas
dec
add
inc
pop
and
shlb
in
sub
xor
fsub
cli
je
adc
testl
lcallw
lret
cmpsl
rclb
xor
pop
add
out
scas
into
jo
mov
or
cmpsl
fstl
mov
lret
mov
xchg
push
or
or
fisttps
xchg
sbbb
sbb
sarl
add
cli
lahf
js
popf
test
mov
loop
leave
jl
dec
mov
jne
push
push
adc
lods
cmp
testl
iret
test
ud0
cltd
iret
in
add
cmc
js
push
and
in
repz
mov
xor
inc
push
adc
add
pusha
cmp
inc
cmpsb
rolb
mov
addr16
ret
pop
shlb
mov
mov
fsqrt
mov
and
pop
loop
loope
xlat
mov
xchg
cltd
pop
cmp
mov
xchg
cmp
int
cmp
mov
ss
enter
fldt
mov
aad
sbb
dec
dec
lds
add
stc
push
jmp
enter
jbe
cmp
xchg
pop
dec
push
dec
xor
and
mov
fucomip
pop
test
in
or
inc
cmpsl
addr16
add
jae
lcall
sub
mov
pop
fisubrl
outsl
pop
jae
ds
mov
and
gs
add
movsl
and
lcall
and
dec
sub
jae
nop
outsb
ja
clc
jo
sbb
inc
fidivrs
mov
push
mov
dec
push
mov
pop
ror
loopne
jmp
xor
addl
outsb
aam
in
mov
lcall
add
mov
or
clc
aad
mov
cmp
mov
xchg
pusha
inc
jb
lret
imul
divl
xor
mov
mov
imull
popa
lods
xchg
pop
and
mov
or
inc
push
sarb
aam
mov
cmp
xorl
mov
sbb
lahf
pop
pop
shll
dec
gs
insl
in
xor
jmp
jo
sti
mov
or
jo
loop
mov
paddq
mov
xchg
push
sub
dec
pop
add
fimuls
ds
out
push
sbb
je
cmp
out
mov
push
xchg
cld
fbstp
lahf
mov
push
sub
mov
jns
cmp
movsb
stos
mov
cmp
in
ud1
jbe
ljmp
je
in
divl
pop
in
mov
vcvtdq2pd
push
xor
dec
shlb
adc
mov
test
mov
xor
clc
out
or
push
adc
mov
sahf
push
mov
test
add
pushf
jle
idiv
and
adcl
and
sub
gs
out
pop
loopne
xchg
lahf
mov
mov
adcb
or
pop
aaa
gs
out
std
btr
jo
sub
jne
push
or
or
jl
inc
xor
test
or
mov
leave
pushf
inc
push
and
xlat
ja
xor
xchg
mov
push
push
adc
mov
xacquire
punpckhbw
ret
lret
pop
aas
mov
test
lret
cmp
subb
push
adc
lret
js
movsb
jb
cmp
pop
add
addr16
in
cmp
ljmp
dec
ja
fidivrs
js
pop
inc
and
lret
inc
leave
xlat
jbe
pop
push
lahf
cmp
xchg
add
data16
jg
xchg
pop
test
aaa
fildl
loop
mov
dec
add
add
imul
pop
imul
roll
sbb
stos
mov
sqrtps
lahf
movsl
js
push
xchg
or
mov
mov
xchg
cmp
add
mov
pop
and
cmp
inc
add
jnp
in
leave
cmp
inc
jb
lods
inc
popa
xor
inc
cmp
jb
loopne
jbe
in
pop
inc
shlb
out
imul
ja
sub
mov
push
clc
gs
cmp
scas
and
or
xchg
mov
sub
mull
mov
pop
jno
fstps
enter
lret
out
es
imul
scas
out
hlt
std
xchg
aam
sbb
fmul
std
js
cli
dec
jno
pop
cmp
jecxz
fs
test
out
xchg
je
fwait
xchg
mov
lret
ds
scas
inc
push
xchg
test
ss
andl
or
sub
mul
cmp
push
rcrl
rolb
adc
mov
push
stos
dec
sbb
jae
jb
lds
mov
xchg
arpl
add
mov
stc
push
mov
cmp
rcrb
or
pushf
fcmovnu
lret
arpl
data16
cs
insb
ret
in
push
jle
mov
insl
cmpsb
and
clc
aad
pop
xchg
xor
add
dec
pop
aad
pop
mov
mov
stos
pop
mov
dec
sbb
and
mov
push
or
icebp
pop
lods
sub
or
xor
stos
gs
add
icebp
mov
leave
movsb
jp
rorl
or
test
leave
jge
pop
popa
jg
jns
mov
xlat
das
in
add
xchg
dec
mov
mov
pop
push
xchg
and
mov
out
sbb
into
push
mov
mov
daa
jl
test
mov
fcmovu
add
sysexit
inc
cmpsb
xorl
ljmp
xor
jb
scas
sbb
cmpsl
pop
je,pn
repz
fwait
addr16
pushf
pushf
sub
shll
pop
pop
jnp
sbb
imul
outsb
sub
inc
mull
pop
xor
aad
mov
je
lock
scas
push
lcall
push
push
xchg
push
mov
and
push
or
inc
fwait
xchg
add
ret
sahf
sahf
add
js
hlt
iret
adc
push
jl
inc
test
xor
imul
cwtl
pop
sbb
sub
lock
jge
arpl
inc
mov
fidivs
xchg
sub
rcl
mov
mov
lcall
scas
cwtl
jnp
cs
notb
sti
and
sbb
mov
fs
sbb
add
cmp
push
xor
sbb
test
testl
jp
xchg
or
mov
push
xchg
lea
ss
jns
ror
push
cmp
lea
lret
pusha
int3
sti
dec
lods
cld
test
cmpsl
pop
cmp
das
xchg
mov
inc
loope
push
shrl
out
lds
jmp
in
test
orl
pop
sbb
add
inc
adc
mov
or
enter
das
sti
inc
sbb
lcall
mov
adc
loope
fidivs
cmpsl
std
mov
inc
rcrb
or
mov
int3
push
or
cmp
sbb
dec
mov
bound
pop
aaa
leave
and
mov
hlt
xchg
and
pop
ljmp
pop
pop
mov
adcl
es
popa
mov
inc
jne
dec
push
int3
xchg
mov
inc
fstps
dec
and
jl
sarl
mov
mov
dec
add
and
cmp
imul
and
stos
mov
xchg
xchg
in
iret
jns
dec
les
adc
dec
data16
test
jae
adc
arpl
jecxz
adc
dec
sbbl
icebp
movsl
push
add
xor
dec
push
cmp
dec
and
sbb
push
pop
cmp
mov
pop
in
xchg
inc
test
addr16
dec
ss
test
fdivrs
push
dec
imul
je
dec
lret
mov
jb
mov
cmpb
cmp
add
hlt
sub
nop
loop
sbb
sbb
sub
shr
adc
cmpsb
xchg
xor
inc
inc
or
mov
leave
xchg
popa
call
xchg
mov
stc
adc
and
mov
lds
push
fcmovu
cmc
mov
mov
mov
in
mov
and
fadds
stos
cmp
cmc
divl
pop
dec
nop
mov
adc
popf
pop
bound
rorb
hlt
cwtl
fimuls
xor
jne
lfs
out
push
in
xchg
neg
inc
subb
icebp
xor
cmp
inc
popa
mov
hlt
cmp
mov
dec
iret
adc
inc
ljmp
and
scas
inc
mov
rorl
push
imul
push
xlat
mov
jb
adc
cmp
xchg
xor
dec
mov
push
addr16
sbb
iret
leave
leave
add
or
sbb
ds
enter
xlat
mov
lret
add
out
in
and
cwtl
mov
daa
loopne
xchg
out
or
xchg
push
add
jmp
test
jge
xor
xlat
lcall
leave
adc
push
and
outsl
pop
nop
dec
add
mulb
xchg
inc
pop
shll
inc
mov
dec
jne
push
sbb
pop
ficoml
mov
std
test
stos
imul
pop
jae
cmp
fadd
repz
aam
cmc
cmp
jae
cs
jne
fimuls
int
or
stos
fmul
inc
test
mov
movlps
pop
popa
divb
loope
cwtl
pop
mov
repz
push
in
mov
dec
in
xchg
jnp
call
insb
int3
incl
in
shl
addr16
enter
mov
mov
pushf
xchg
sub
mov
sbb
adc
leave
ret
cmp
inc
push
sahf
arpl
loope
fwait
nop
mov
inc
push
xchg
ret
dec
inc
pop
flds
dec
mov
or
clc
inc
xor
icebp
dec
enter
cli
pop
mov
dec
adc
sub
addr16
jg
xchg
ljmp
xor
mov
imul
movsb
and
mov
addr16
mov
pop
jns
leave
and
add
or
or
pop
divb
pushf
das
mov
dec
xor
sbb
test
out
and
pop
hlt
pusha
adc
or
adc
dec
movsl
dec
in
movb
popf
rep
sti
inc
repz
lcall
ja
push
ja
xchg
xchg
mov
push
out
stc
mov
adc
sbb
rcll
lods
daa
or
pop
jno
lds
subl
js
fs
mov
lahf
pop
fstsw
mov
or
imul
cmp
add
shlb
pop
xchg
dec
in
or
fnstcw
cmp
sub
ja
nop
push
data16
jl
clc
pop
pop
push
xor
pop
cltd
sarl
aam
pop
sub
cmp
cli
push
sub
or
add
inc
inc
aam
movsb
lods
ret
add
inc
push
arpl
sbb
sar
or
jo
add
inc
pop
adc
in
add
xor
adc
fnstenv
sbb
pop
and
jbe
clc
add
jp
xchg
pop
mov
mov
adc
dec
push
jmp
in
cmpb
xor
push
or
loop
jne
mov
orb
inc
adc
fstl
pusha
xchg
das
orb
inc
pop
mov
out
and
lds
push
mov
mov
bound
mov
in
add
arpl
xchg
inc
test
dec
lds
cs
mov
in
cld
or
sub
xchg
pop
ds
jnp
xlat
mov
inc
out
rorl
jnp
add
popa
pop
mov
xchg
ljmp
sub
clc
mov
or
movsl
cmp
push
mov
enter
rcr
inc
mov
adc
cli
rolb
sahf
das
fs
cmp
jns
push
lock
add
dec
in
xchg
sub
aaa
dec
in
movsl
ljmp
xchg
or
lock
sbb
mov
xchg
aaa
cs
push
cli
enter
repz
shll
fldz
shrl
jno
pop
jo
and
push
push
pop
jge
dec
ret
dec
push
loop
in
shrl
mov
adc
sub
jecxz
movsl
out
adc
scas
andl
gs
loopne
adc
std
stos
mov
fdivrs
pop
push
rorl
movsb
sahf
sub
cmp
iret
mov
dec
mov
and
push
enter
sbb
mov
shrl
les
daa
xor
xchg
jp
xchg
add
jno
pushf
mov
lock
push
mov
sbb
push
out
loop
data16
mov
jl
int
das
lds
and
xchg
jecxz
fsubs
push
cmp
test
or
inc
xor
push
pop
inc
jge
pop
sbb
fmuls
dec
decb
popf
and
cmp
lock
push
jmp
lods
mov
shll
inc
outsl
mov
int3
add
pop
lock
xchg
repz
pushf
pop
push
add
imul
xchg
dec
shlb
fcompl
cmp
sbbb
push
mov
mov
not
loop
push
dec
xchg
repnz
out
js
jmp
or
lahf
outsl
xchg
jg
or
enter
mov
sbb
xor
jnp
sub
cmc
test
fmul
out
pushf
cmp
and
mov
and
ss
fmuls
ljmp
add
stos
xor
ret
loopne
bnd
shr
adc
fcoml
mov
call
movmskps
scas
xor
add
bnd
ror
leave
pop
subb
mov
sarb
addr16
rclb
int3
add
ja
loop
or
inc
outsb
push
jno
ret
cmpsb
xchg
sbb
icebp
std
mov
sbb
test
scas
xlat
mov
dec
gs
mov
aad
in
mov
scas
cmp
adc
ficompl
mov
popa
lret
mov
adc
push
inc
mov
push
js
stc
test
jp
xchg
pop
repz
pop
push
scas
mov
xchg
jp
ficoml
xor
xchg
add
or
fcoms
lock
ss
xchg
into
inc
cmp
jge
cmp
in
mov
pop
scas
out
cs
sub
fxch
adc
cmp
mov
das
lea
add
xor
scas
sbb
sbb
adc
popa
sub
dec
mov
push
insb
in
dec
popf
push
fdivrp
notl
push
mov
lret
dec
shlb
lods
cmpsl
jb
sar
iret
psraw
mov
shl
in
push
std
js
or
leave
and
sbb
adc
inc
xor
and
cmp
mov
daa
mov
dec
mov
mov
stc
jmp
xchg
cmp
sbb
sahf
insb
jno
aam
out
xlat
scas
outsb
xorb
fs
stos
shl
sahf
add
and
add
mov
sub
out
xor
or
andb
jg
fsin
in
pop
scas
mov
ret
cmp
fisubl
jae
mov
xchg
std
xchg
mov
in
cwtl
test
xchg
adc
and
push
mov
xchg
loopne
ljmp
sbb
sub
lock
movsb
push
xchg
loopne
in
jns
dec
ret
cmp
dec
or
leave
jle
ds
cmp
xchg
ficoms
ja
popa
cmp
shlb
push
jb
into
stc
xchg
and
je
inc
or
mov
cmp
out
stos
in
fmuls
repnz
fistpl
or
stos
pop
test
or
mov
cmp
leave
adc
mov
cltd
mov
mov
xchg
xchg
xchg
sub
mov
cmp
xchg
rcrl
mov
pusha
mov
fimuls
push
jno
or
and
cmp
cs
adc
out
rcll
pop
sub
push
adc
push
jp
into
jl
test
mov
bound
das
lock
daa
xchg
mov
mov
orl
mov
andl
jle
pop
sti
aam
add
fsts
mov
fistpll
sbb
jo
add
dec
mov
xlat
sub
xor
test
cmp
lock
sbb
sub
repz
aam
pop
jg
jp
sahf
repz
pusha
mov
mov
or
adc
lahf
pop
jbe
arpl
adc
pushf
sub
arpl
js
repz
inc
dec
mov
pop
aaa
add
xor
ret
push
rcrl
mov
lcall
jnp
xchg
mov
lods
xchg
jb
into
or
pop
cmp
imul
js
jecxz
mull
loopne
jl
mov
mov
sbb
rcrb
sahf
sbb
xor
xchg
gs
stc
push
jo
lret
cltd
jge
add
or
hlt
xchg
ss
xchg
ffreep
or
shlb
jge
push
pop
pop
mov
test
mov
sbb
int
sbb
data16
cld
jl
pusha
leave
jo
jbe
or
loope
movsb
sub
loop
dec
pop
fidivl
test
arpl
pop
es
imul
pop
cmp
mov
out
lahf
cmp
jmp
rolb
adc
mov
out
and
rolb
cmp
xor
add
jg
xor
pop
mov
imul
popf
imul
xchg
xchg
cmp
xchg
jmp
adc
mov
stos
jecxz
xor
testl
fcmovnu
add
dec
ljmp
mov
mov
sti
ret
je
xor
orl
jno
pop
pusha
sub
in
fwait
in
movsl
cmp
fdivr
add
cwtl
inc
ds
hlt
icebp
or
sbb
movsl
xchg
xor
jb
ja
out
shlb
jmp
mov
sahf
push
xor
loopne
test
in
nop
mov
inc
sub
sti
xchg
fcmovne
out
jle
das
imul
mov
inc
dec
notl
in
in
in
xchg
push
rcr
and
xchg
sahf
push
rorl
jmp
pop
mov
fidivrl
dec
lods
jle
insb
imul
dec
repnz
popa
montmul
cmpsb
cmpb
mov
loop
decb
repnz
lret
testl
cs
jbe
cmp
sbb
in
cmp
pop
lods
add
xchg
shll
dec
stc
cmp
push
cmp
imul
jmp
push
push
push
mov
cmp
les
das
loopne
rclb
push
icebp
push
inc
push
push
fstl
out
mov
scas
push
pusha
nop
pop
mov
push
addr16
fistpl
dec
lcall
pop
dec
inc
in
and
cmpsb
loope
adc
loope
or
ret
mov
mov
incb
lods
daa
fisubrs
cmp
mov
jne
ss
in
jnp
les
hlt
sarb
mov
pop
inc
pop
mov
ret
add
xor
inc
dec
inc
sub
mov
xchg
test
inc
sbb
adc
adc
jmp
jne
mov
push
and
popf
dec
sub
mov
mov
dec
in
dec
lods
jo
push
mov
mov
sub
mov
dec
or
inc
ret
data16
jnp
enter
pop
pushl
adc
and
cs
xchg
cmpl
cmpsl
addb
lock
clc
nop
popa
mov
ljmp
inc
pushl
in
dec
sbb
or
jnp
adc
rorl
mov
cmp
fdivl
fbstp
loop
int
cmp
dec
xchg
push
pop
cmpsl
dec
push
pop
loop
push
int
jo
mov
rolb
xorb
mov
popa
xor
roll
mov
out
xchg
loopne
jle
cmpsl
sub
cmp
adc
mov
cmp
cwtl
imull
mov
or
xlat
mov
fst
xlat
mov
sbb
dec
in
fidivrs
and
jge
fiadds
out
movsl
jp
cmp
sbb
dec
bound
lea
imul
in
lods
jae
aad
mov
lods
sbb
and
mov
jo
ret
and
popl
cmp
mov
mul
ds
test
add
pop
idivl
sbb
push
or
sub
fstpl
cmp
xchg
je
cld
cltd
lods
mov
push
xchg
aaa
lret
stos
inc
imul
xor
or
and
sbb
insb
push
ss
xchg
cmp
jbe
pushl
jle
loop
in
push
das
xchg
nop
lret
push
jns
ret
scas
xchg
into
add
pop
inc
out
shlb
mov
mov
aam
movsb
pminsw
jl
testl
mov
test
jne
push
stc
sti
inc
fwait
jge
xor
sbb
inc
es
or
stc
mov
mov
scas
daa
addr16
aaa
aam
mov
fdivs
inc
in
ja
mov
andl
test
lcall
cmp
fildl
out
je
scas
fimuls
sub
iret
dec
push
add
jno
imul
xor
add
aad
mov
loop
in
push
jns
mov
enter
sbbl
cs
out
movsb
pop
xor
insl
adc
enter
xlat
jg
fcompl
sbbb
clc
xor
fstl
pop
xchg
lret
push
cltd
sbb
lahf
or
sti
or
es
mov
cmp
dec
and
ficoms
push
jp
out
cltd
inc
cmp
fdivr
cmpsb
int3
leave
lret
mov
popf
inc
adc
push
dec
cld
xor
push
or
test
nop
mov
xor
cli
rol
adc
and
and
rcrl
mov
lahf
outsl
into
inc
into
mov
jp
and
mov
sub
in
pop
mov
andl
rolb
ret
dec
mov
adc
pop
adc
push
mov
pusha
movsl
call
inc
inc
lock
inc
push
rcr
cmp
mov
inc
inc
jnp
decl
popf
push
pop
sbb
or
pop
lds
sbb
push
in
dec
mov
xchg
push
nop
sub
cmp
jne
cmp
push
mov
std
pop
inc
fstps
or
pop
dec
xlat
sub
repz
stos
mov
rolb
in
pusha
incl
mov
subl
inc
aas
leave
outsb
or
movsl
sti
push
loopne
decb
stc
fmulp
fwait
sti
dec
adc
pop
sub
mov
jl
adc
lods
inc
jge
adc
sub
cld
sahf
fcmovne
test
insl
or
and
popa
add
lock
test
cmp
lods
mov
dec
fistpll
mov
cmp
fldenv
fdivs
pop
fs
pop
sub
outsl
aad
cmc
inc
mov
pushf
jmp
test
scas
sbb
and
in
inc
mov
xlat
cmp
dec
sub
inc
fst
mov
mov
push
sbb
jge
mov
xor
xchg
aaa
nop
dec
and
mov
jle
ret
mov
movsb
xchg
mov
cmpsb
subb
mov
mov
cmp
dec
jg
icebp
mov
jle
lock
push
jbe
mov
dec
fucomi
rorb
push
inc
sbb
test
mov
jge
pop
jo
mov
ds
mov
fwait
icebp
sub
lcall
stc
mov
inc
lahf
out
adc
jge
icebp
jne
jecxz
jg
sarb
jne
out
cmp
jnp
pusha
mov
xchg
out
lret
ja
cmc
imul
add
mov
scas
ficoml
loopne
mov
rclb
mov
jecxz
ljmp
push
shrl
mov
into
jns
sahf
outsl
xor
jbe
testb
jbe
adc
xchg
loopne
mov
shlb
push
in
dec
ret
push
popf
mov
in
pop
sahf
xor
loope
incl
sbb
stc
lods
and
xor
mov
jae
push
push
jbe
icebp
je
inc
push
fistpll
mov
addr16
test
test
and
in
mov
mov
fs
mov
xor
push
call
adcl
jp
sbb
ret
pop
pushl
dec
mov
pop
sub
push
mov
or
pop
insb
mov
repz
fcomp
shlb
lods
dec
push
ret
dec
addb
jns
push
test
push
lods
inc
lahf
xor
dec
fcoms
dec
rcll
icebp
dec
adc
jno
jecxz
insb
lods
jmp
mov
into
fs
mov
adc
stc
cmpsl
into
int3
adc
popf
out
sub
stos
dec
add
ds
pop
xchg
cli
dec
or
and
mov
jmp
dec
sub
or
aam
jecxz
and
ja
int
jmp
inc
std
inc
sti
push
je
dec
and
cmp
xchg
iret
mov
int
test
pop
mov
js
decb
sub
pop
inc
repz
inc
mov
jo
mov
icebp
insb
ret
mov
loope
sub
mov
insl
dec
pop
push
jp
ljmp
or
mov
mov
mov
pop
push
sub
movsb
sbb
js
cmp
fwait
sti
inc
out
mov
repnz
add
push
and
lods
mov
bound
cmovge
decb
dec
sub
pop
loop
outsl
call
shrl
dec
lea
in
iret
decb
fnstenv
sbb
mov
sub
insb
ret
shrl
mov
std
push
fnstenv
mov
addr16
dec
push
cmpsl
outsl
mov
enter
in
push
sbb
daa
fidivrs
pusha
or
outsl
stc
mov
or
pop
and
ljmp
lock
cmp
xor
sti
loope
adcl
inc
mov
jg
mov
cmp
mov
fwait
les
scas
lods
or
imul
loope
bound
into
and
sub
sahf
aaa
fsubr
adcb
cmpsl
shl
int3
lcall
xchg
repz
scas
bswap
xorb
dec
mov
lods
cmp
testb
sub
cli
jl
lods
xlat
jnp
out
ficoml
mov
jecxz
mov
mov
sti
loopne
dec
mov
adc
pushf
cmpsl
mov
lcall
mov
movsb
inc
xor
pop
ja
sub
xchg
pop
fsubrl
outsb
or
mov
mov
adc
enter
xorb
addr16
sbb
pop
jmp
and
ret
jle
std
pop
das
nop
into
bound
leave
lcall
lahf
or
mov
sti
mov
jns
fdivl
cmc
jg
ficomps
les
insl
std
xchg
mov
imul
outsb
jmp
push
popf
push
cmp
cmp
loopne
inc
jecxz
pop
out
test
pop
or
jge
sar
sub
and
out
cli
dec
xor
clc
lret
xchg
push
jecxz
inc
cmpsl
cmp
push
mov
and
mov
add
js
push
inc
lea
adc
fcoml
es
rcl
fisubs
scas
xchg
repnz
xor
mov
mov
mov
jle
push
jge
push
gs
in
loop
mov
jns
push
sarb
and
cmpsb
sub
mov
mov
insl
pop
std
outsl
or
mov
xchg
int
fldl
pop
jl
sti
pusha
in
clc
dec
push
ret
xchg
pop
add
lea
and
aas
imul
jns
sub
int3
cld
push
xchg
jmp
std
subl
loop
test
ret
add
cmp
in
and
cmpsl
jnp
out
enter
fimuls
and
cwtl
scas
fstps
push
push
sub
xchg
loope
dec
mov
sbb
dec
test
in
pop
testb
pop
mov
lods
push
and
pushf
add
out
jecxz
scas
sbb
and
rorl
fisttpl
add
ja
fldcw
pop
mov
inc
xchg
sbb
inc
mov
adc
add
or
adc
rclb
stos
push
xlat
inc
jno
xlat
mov
mov
repz
xchg
jbe
leave
aaa
popf
mov
scas
jno
dec
jbe
out
xchg
int3
sti
pop
xchg
or
lods
ret
cmpsb
adc
das
ds
iret
loop
pop
sub
arpl
gs
push
loope
jnp
xchg
fstl
xchg
jmp
scas
or
add
movsl
imul
xchg
and
int
insb
cwtl
gs
iret
mov
or
push
jae
in
out
mov
inc
notl
jo
jmp
sub
aaa
lds
adc
mov
xrelease
xor
mov
jne
stos
jo
int3
xchg
js
out
popa
sbb
aas
xchg
inc
dec
mov
xlat
scas
es
scas
lcall
clc
cwtl
movsb
hlt
xlat
daa
sbb
cmpb
push
daa
mov
cmp
sub
scas
mov
out
mov
enter
push
mov
add
dec
cmp
mov
loop
sub
xor
outsl
rcr
inc
sahf
sub
loop
loop
push
sub
adc
lea
popf
sbb
cwtl
or
xchg
aaa
xor
pushf
add
fbstp
fistpl
push
imul
daa
push
fisttpl
test
push
push
icebp
or
mov
pop
shrl
pop
xchg
repnz
insl
dec
lock
jle
stos
mov
stos
loopne
stos
add
mov
xchg
adc
jp
int3
das
aaa
mov
jns
xor
jg
dec
shrl
push
mov
push
test
lods
mov
sub
mov
sbb
cmp
adc
or
xlat
in
jbe
cmpsl
xor
ficomps
push
sbb
mov
sbb
dec
sti
jle
adc
shrl
mov
pop
aas
test
lds
rol
push
and
pop
sbb
rol
cmp
cli
pop
fwait
xor
stos
clc
inc
inc
cmpsb
addr16
jl
mov
mov
jecxz
pusha
iret
jecxz
and
add
repz
leave
dec
insl
push
rclb
ffreep
faddp
dec
push
push
popf
pop
sahf
sub
mov
jb
xchg
lcall
movsl
mov
divb
or
xchg
ret
mov
mov
pop
leave
pop
lret
xchg
test
xchg
movsb
xchg
jns
lcall
jecxz
fwait
mov
add
mov
imul
movsl
stos
sub
aas
or
push
cmpsb
scas
push
jne
and
mov
dec
and
fldenv
mov
xor
inc
inc
shl
sub
xchg
mov
lret
or
into
or
dec
sbb
mov
mov
push
ja
push
ja
jecxz
aam
int3
mov
inc
add
push
and
inc
js
dec
and
add
pop
inc
cmpsl
mov
inc
add
inc
xor
xchg
out
divl
pop
js
out
in
add
dec
pusha
sti
inc
aas
inc
sbb
xchg
jg,pn
push
or
jb
aam
or
push
xor
fsubrp
rorl
fnstsw
push
cmp
inc
mov
pop
jle
das
xchg
jnp
xchg
aas
int3
test
addr16
iret
ja
lahf
lahf
pop
dec
push
sahf
imul
rol
int3
adc
cli
jl
xor
xor
call
mov
pop
test
lock
shl
jecxz
jg
bound
lcall
jae
xchg
cli
add
add
dec
mov
int
or
test
into
xor
fwait
xor
lds
test
inc
jno
mov
cmp
mov
data16
pop
ja
or
adc
xbegin
xor
in
icebp
fwait
adc
jge
call
pop
andb
loopne
lahf
or
in
cmp
and
aaa
inc
xor
xor
jp
inc
push
adc
jp
lods
cld
test
jge
add
mov
add
mov
lods
cli
leave
mov
mov
hlt
inc
add
scas
sbb
cld
mov
repz
shrb
jae
in
in
mov
mov
jecxz
popf
sbb
lret
lahf
mov
jne
mov
loope
rclb
adc
sbb
inc
aas
push
insl
test
xchg
jno
mov
adc
jb
mov
in
cltd
pop
setle
lods
inc
jns
cmp
jno
insb
sbb
jmp
mov
cmp
fists
jno
cmpsl
cltd
addr16
leave
jp
pop
dec
mov
ja
into
xchg
ret
jae
pop
repnz
or
mov
mov
or
in
or
jle
sbb
cmp
outsl
jno
sub
xchg
cmpsl
test
lock
add
fistpl
repnz
std
mov
int3
addr16
push
js
xchg
and
loopne
sub
and
and
testl
fcoml
sbb
mov
lods
shr
xchg
add
arpl
and
pop
fidivl
into
push
stos
jecxz
jmp
mov
cltd
cmpsb
loop
leave
adc
hlt
lods
adc
inc
dec
notb
sahf
jg
hlt
mov
jne
adc
hlt
jbe
and
outsl
loope
leave
pop
jno
cmpsb
addr16
push
push
dec
rcrl
mov
jp
dec
mov
sub
movsb
dec
lret
popf
or
jne
leave
push
test
in
jbe
mov
cmpsb
outsl
xchg
sub
jbe
daa
pop
push
mov
sub
push
mov
into
jge
mul
add
push
sbb
dec
mov
jo
mov
mov
sub
pop
jb
cmp
jo
sbb
mov
outsl
cli
popa
push
je
lock
les
stos
pop
mov
movsl
repz
jnp
sahf
pop
decb
popa
loop
dec
and
out
test
test
jecxz
insb
pop
in
dec
out
add
daa
orb
push
movsb
imul
mov
jmp
jnp
sbb
sbb
aaa
xchg
push
mov
lcall
inc
mov
in
out
je
add
inc
nop
iret
xor
inc
xchg
adcb
dec
mov
roll
out
mov
mov
or
sub
ret
aad
or
push
imul
icebp
and
mov
test
and
rolb
xorb
cmp
test
sarb
sbb
jo
pop
loope
pop
test
mov
push
push
pop
mov
jo
push
cmpsb
add
dec
pop
call
les
sub
fwait
mov
mov
sub
stc
cmp
mov
lahf
fstps
xchg
xor
mov
ja
cmp
sahf
mul
movsl
pushl
sahf
or
in
into
jae
push
sub
sbb
int3
loopne
push
ficoms
sbb
fildll
sub
cmpsl
xchg
psubusw
pop
movsl
and
pop
cmp
lock
push
and
push
jns
push
dec
jp
xchg
sti
and
shlb
ljmp
inc
jecxz
inc
scas
jle
fcomps
push
jp
shrl
dec
shr
cmp
dec
sbb
das
aaa
or
cld
push
lahf
daa
dec
and
xchg
lods
or
jmp
sbb
pusha
movsb
push
scas
enter
pop
loopne
mov
nop
sub
in
lods
mov
les
test
and
into
push
push
pop
int
mov
fisttpll
call
insl
xor
lods
mov
sbb
je
loope
mov
xchg
sbb
mov
push
dec
push
addr16
loopne
mov
movsb
cmp
shl
sbb
fnstcw
pop
or
lret
sub
mov
sub
mov
cmp
sub
in
sub
cld
int
push
lret
or
dec
mov
adc
jo
xchg
jg
mov
cmp
jb
mov
or
add
stos
dec
int3
rorl
jp,pt
aam
arpl
pop
imul
adc
jae
dec
mov
push
outsb
out
ffree
test
insl
push
sub
mov
fisttpl
and
cld
cmpsl
jo
movsb
and
js
add
or
pop
cmp
or
rorb
jge
lods
push
or
lds
xor
jbe
test
and
add
sub
sbb
repz
test
pop
shlb
cld
dec
sarl
mov
push
in
out
and
jle
int
xchg
fistl
mov
push
xchg
jg
inc
mov
stos
bnd
jbe
lods
mov
inc
lock
dec
and
cmpb
popa
sub
xchg
outsl
or
cli
test
fstps
ret
ficomps
push
mov
sbb
jne
nop
sti
mov
pop
pop
jge
in
enter
es
jb
xchg
dec
addr16
adc
jb
fistpl
aas
jnp
and
push
cwtl
lcall
cmpsl
or
adc
mov
arpl
fldcw
pop
addr16
ds
sub
mov
in
push
and
pop
xor
or
push
sbb
add
jnp
outsb
mov
pop
add
pop
lock
and
sarl
fwait
fwait
sbbb
out
xchg
jle
pop
mov
add
add
sahf
add
and
cmp
pop
daa
arpl
cltd
cld
cmp
sbb
mov
xor
mov
cld
gs
std
push
inc
cmc
cmp
sub
adc
movsb
sub
push
jp
pop
mov
inc
aaa
in
mov
adc
ret
repz
out
add
xlat
jecxz
or
in
jae
cli
xchg
push
mov
cltd
push
in
icebp
imul
lods
jb
cmpsb
cmpsb
sbb
dec
rorb
mov
popf
and
out
cld
call
pop
inc
mov
dec
outsb
shrl
xchg
and
dec
fdivrp
mov
inc
jne
inc
pop
loop
insl
in
or
sbb
mov
or
rorl
mov
mov
ljmp
in
add
decl
shlb
dec
push
cld
sbb
push
xor
mov
xchg
out
sub
push
xor
push
cmp
xchg
jb
push
pop
cld
pop
fcomi
icebp
or
fsubrs
int3
mov
scas
repz
inc
int3
movsb
iret
fsubrl
mov
fistpll
lods
or
add
sbb
mov
pusha
lds
push
addl
addr16
arpl
and
ja
mull
cmp
mov
ret
cmpsb
xor
sarl
mov
or
clc
mov
jne
out
adc
hlt
xchg
jno
and
fs
pop
mov
cli
push
idivl
js
pop
inc
call
addr16
xchg
push
scas
shlb
shll
insl
adc
cmp
dec
in
pop
sub
loopne
lret
mov
js
mov
clc
mov
mov
test
dec
lods
data16
movsl
push
fcoml
fildl
je
xor
repnz
les
stos
andb
lock
insl
xchg
lret
push
scas
fwait
sbb
fst
dec
loope,pt
rcrl
fstp
xchg
imul
push
cld
insl
inc
les
dec
cmpsb
mov
sar
mov
cmp
sbb
shrb
mov
pusha
push
sub
push
lds
scas
fwait
movsl
dec
xor
shrb
mov
pop
jle
test
ljmpw
jg
int
loope
xor
sbb
loop
in
ret
aam
dec
adc
jg
cmpsl
mov
dec
imul
pop
cmp
add
in
cmp
add
mov
jge
xor
popa
xchg
movsb
jns
xchg
out
dec
es
sub
mov
and
mov
pop
in
xchg
imul
inc
fisubrl
andb
cmpsl
sub
dec
add
and
enter
cmpsl
pop
xor
loopne
iret
sbb
and
test
sub
jle
adc
adc
cmc
push
lret
jo
mov
out
divl
inc
push
iret
lahf
mov
jp
xlat
fstpt
outsb
pop
or
clc
shll
mov
inc
sbb
gs
daa
loope
add
test
outsb
push
mov
sub
insl
adc
aad
sub
pop
xchg
or
in
xchg
les
push
xor
loop
cmp
out
adc
sub
pop
test
dec
adc
mov
outsb
or
test
add
mov
paddsb
mov
and
dec
rorl
pop
cld
orl
xor
stc
add
popf
cs
cmp
mov
mov
leave
and
loopne,pn
inc
xchg
inc
mov
daa
jnp
sub
int
push
inc
mov
scas
inc
push
popf
aas
mov
add
enter
and
pop
add
lds
sub
or
cmc
cmpsl
or
xchg
imul
inc
xor
add
mov
lea
movsb
cmp
mov
sbb
xchg
mov
nop/reserved
fdivrl
dec
andb
test
mov
mov
in
inc
clc
mov
aad
fs
fadd
sub
mov
jl
jb
inc
aam
add
pusha
cmp
ret
in
in
fldl
mov
jge
rorl
sbbl
cmp
xchg
adc
mov
pushl
jo
push
adc
test
or
or
jp
aam
leave
shrb
dec
out
loope
dec
or
cs
push
out
sub
mov
add
lods
push
cmpsl
sub
imul
mov
lea
mov
mov
lahf
jnp
pop
inc
mov
sahf
adcb
cli
test
cli
mov
mov
sub
cmc
arpl
test
pop
mov
xchg
shll
add
into
dec
loop
lret
fs
jno
call
or
enter
xchg
mov
cmp
pop
push
push
xchg
icebp
int
cmp
popf
fisttps
lds
or
add
test
scas
mov
shrb
pop
lock
rcrl
cwtl
sbb
mov
sbb
add
push
test
lock
gs
mov
loopne
jns
fwait
stos
mov
divl
add
lods
dec
mov
dec
and
add
stos
xor
pop
fwait
icebp
xlat
leave
je
inc
popa
sahf
push
adc
adc
xchg
insb
fwait
jge
inc
jge
addl
rcrl
push
mov
sbb
int
fwait
loope
mov
inc
jmp
jns
cld
jecxz
repz
push
xor
push
mov
inc
imul
jne
and
sbbb
dec
sbb
inc
xchg
sti
jnp
fisttps
es
lods
mov
and
jge
out
ja
dec
mov
lret
push
icebp
sub
rcl
fisubrl
pmulhuw
stos
movsb
jbe
sbbl
sbb
inc
mov
test
nop
sti
cmp
sub
push
or
xchg
aad
push
decl
mov
jae
jne
mov
mov
xchg
std
and
in
in
loop
es
addb
dec
ret
js
repz
popa
fimull
loop
push
cmp
lahf
ficompl
pushf
mov
addl
inc
fadds
dec
xchg
push
inc
dec
call
or
xchg
sbb
jns
inc
mov
cmp
xor
mov
stc
repnz
fcmovnbe
or
in
popa
stc
push
insb
insl
push
movsb
fcomps
inc
in
dec
pop
lret
test
dec
and
adcl
cmc
dec
dec
movsl
addl
out
stos
outsl
or
fildl
mov
and
arpl
es
xchg
fstpt
xchg
or
and
dec
fwait
or
fnstenv
sbb
xor
and
jne
xor
sbb
fdiv
sub
mov
cmp
repz
in
mov
mov
fisubl
xchg
pop
cmp
jp
mov
inc
imul
imul
dec
mov
cmpsl
jl
fisubrl
jnp
pop
xchg
mov
add
loopne
sub
or
out
dec
jl
fwait
lds
jle
scas
xchg
xchg
inc
or
ficoms
cmp
out
jae
jge
adc
adc
xchg
jmp
in
add
shrb
mov
lock
filds
mov
into
mov
cli
ficoml
and
movsl
cs
loopne
xor
verw
sbb
xchg
scas
xlat
or
or
dec
scas
loopne
mov
ret
inc
in
jle
hlt
imul
xor
fiaddl
cmp
scas
icebp
inc
fcmovbe
fnstsw
sub
mov
and
pop
jl
or
push
enter
es
add
inc
mov
xchg
enter
mov
insl
ljmp
ret
mov
sub
test
adcl
jne
pop
ficompl
test
add
jae
mov
daa
lahf
inc
jne
scas
jmp
push
jo
fistpll
in
cmc
movb
lods
pop
iret
sub
ror
sub
mov
insb
sbb
lea
repz
ret
cmp
fimull
movsl
out
and
ja
imul
test
pop
push
fwait
mov
inc
mov
fisubrs
vpunpcklwd
insb
jns
sbb
mov
and
insl
sbb
stos
repz
jle
and
cmp
pop
icebp
fistl
xor
sbb
sahf
jp
push
mov
pop
mov
repz
push
gs
nop
popf
sahf
int3
les
mov
repnz
jnp
sub
xor
jp
loopne
outsb
imul
sbb
fadds
or
and
into
push
and
insl
inc
pusha
scas
dec
sub
loope
daa
add
dec
arpl
scas
std
jg
push
sub
mov
test
stos
jb
push
pop
neg
mov
ds
dec
add
js
test
repnz
pop
fidivrl
dec
jno
sub
shll
sbb
cmp
insb
data16
out
enter
iret
mov
sub
mov
push
std
mov
cltd
dec
mov
xor
in
jb
cmp
scas
add
sbb
inc
sub
sbb
jle
shlb
cmpsl
push
sub
inc
add
test
fcmovnu
loopne
dec
lods
fisttps
cmp
jbe
mov
inc
in
inc
scas
inc
sub
test
bound
xchg
jns
push
sbb
xchg
clc
pusha
push
test
fs
push
out
cmc
jb
in
xor
call
cmpsb
mov
mov
int3
xor
bound
push
orl
repz
fstpt
lret
mov
rorl
pop
int
outsl
fiadds
xor
ljmp
push
jp
sub
je
adc
insb
cld
or
mov
cmp
aam
cli
pop
sarl
ljmp
sub
cmp
add
mov
jge
mov
shr
jge
outsl
mov
bound
pop
jno
cmpsb
add
fisubrs
outsl
daa
adc
pusha
out
sbb
test
xor
dec
les
mov
aas
push
jmp
imul
les
stc
mov
movsb
rcll
adc
daa
add
jmp
adc
mov
movsb
adc
dec
sub
icebp
les
pop
mov
stos
mov
out
jmp
pop
cmp
xchg
mov
pop
fdivl
shl
xchg
push
sbb
movsb
decl
push
mov
bound
fidivs
cmpsl
inc
outsl
jne
js
in
arpl
mov
lds
je
mov
mov
sub
xor
jecxz
outsb
adc
inc
fdivs
test
in
xchg
cmc
lea
sub
inc
lock
jle
mov
dec
push
orb
lret
adc
or
mov
dec
fstpl
and
mov
adcl
test
and
or
pop
sub
xchg
jg
dec
jbe
push
push
mov
mov
jne
xchg
pop
cmp
leave
xchg
loopne
adc
lds
in
jbe
and
jne
loopne
pusha
and
jbe
jge
jle
pop
mov
mov
insl
dec
out
call
mov
sbb
dec
add
adcl
dec
sub
pushf
jne
clc
and
popa
sub
jnp
repnz
cmp
movsl
xchg
inc
lahf
xorl
sbb
in
sarl
sti
movsb
jno
pop
imul
or
daa
fwait
push
js
out
pop
or
ja
jo
jecxz
call
fistpll
fnsave
out
movsb
cmpsl
add
push
xchg
mov
ja
cs
in
push
dec
clc
and
clc
mov
dec
mov
xor
clc
ljmp
jge
nop
das
xchg
mov
int3
not
adc
add
jge
push
push
mov
push
ret
sbb
push
insb
xor
scas
and
adc
adc
sub
into
insb
mov
insl
nop
lahf
cmpsl
cmc
push
cmpsl
jnp
pop
scas
jbe
cmpsb
xlat
push
push
dec
dec
int
sub
pop
inc
das
orl
xchg
fimuls
cbtw
enter
jl
cmc
ljmp
mov
or
push
inc
mov
inc
xor
js
xor
mov
fisubrl
dec
dec
inc
jbe
clc
or
jo
lea
cld
inc
add
push
in
daa
sub
call
push
xchg
add
call
ja
lock
mov
sub
imul
lods
outsl
fs
cmp
jns
mov
orl
mov
imul
dec
rorb
aad
jg
jns
aas
mov
icebp
mov
dec
in
jp
jp
mov
xchg
pop
and
mov
adc
test
mov
inc
icebp
jp
sub
setb
ficompl
xor
add
dec
lods
sbb
xchg
mov
nop
out
in
add
or
push
mov
fdivrl
mov
and
and
push
fisttpl
subl
jp
xor
jo
mov
lods
test
jp
roll
ljmp
and
inc
inc
push
cmp
stos
iret
push
mov
in
sbb
xchg
xchg
sbb
cmpsl
push
into
cmp
jg
call
out
or
xlat
mov
fcompp
mov
xor
pop
or
mov
lahf
xchg
mov
icebp
and
push
or
sub
xchg
leave
push
xchg
xor
mov
pop
jecxz
jmp
cmp
mov
icebp
add
int3
repz
adc
pushf
in
jae
iret
lahf
icebp
into
jge
push
jp
pop
cs
lret
imul
insl
imul
test
mov
inc
adc
mov
fisttpl
or
movb
jmp
popf
sbbb
movsb
pop
mov
shrb
add
push
xchg
mov
mov
dec
int
sub
sbb
fists
mov
movsb
mov
add
pop
sub
jns
outsl
sbb
and
fwait
jp
add
push
sub
hlt
adc
int3
add
push
inc
dec
leave
xchg
xor
pop
addr16
cwtl
subl
xchg
lahf
pop
jg
mov
xchg
in
mov
stos
jmp
mov
popf
imul
pop
jl
lret
xor
pop
sub
pop
lcall
xchg
aad
out
rolb
lea
jo,pt
test
mov
lock
sahf
inc
in
sti
scas
pop
nop
stos
pop
movsb
dec
add
test
fs
jno
fiaddl
ja
xchg
mov
faddl
mov
ljmp
xlat
push
mov
adc
aaa
in
xchg
jp
out
cmp
xchg
pop
loopne
jo
mov
adc
lret
push
aas
hlt
aas
add
add
aam
lret
sbb
adc
out
lea
dec
dec
adc
mov
stos
movsb
add
xchg
test
rolb
icebp
iret
sub
mov
push
push
lods
popa
sub
ljmp
mov
jecxz
or
xchg
cmp
push
sbb
shll
or
les
cld
sub
and
adc
testb
and
or
inc
mov
mov
mov
dec
ret
and
cmpsl
push
mov
int3
mov
mov
mov
leave
not
pop
pusha
mov
add
cmpsl
imulb
push
test
movsl
pop
inc
jae
flds
enter
push
int
in
jl
loop,pt
xlat
push
cmc
rcr
pop
ret
xor
jl
or
jb
mov
mov
imul
sbb
ret
clc
push
adc
lcall
test
jns
adc
pop
dec
push
cmp
xchg
hlt
mov
pusha
pop
insl
aas
pop
sbb
xor
cmc
cmp
sbb
cli
cwtl
mov
and
loope
in
rcll
shll
mov
or
xlat
cltd
fwait
dec
stos
xlat
aaa
fisttpl
pop
cmp
int3
loopne
test
jno
and
or
repnz
repnz
cmp
mov
data16
xchg
push
ss
lock
dec
loop
pop
test
rcrb
adc
mov
mov
notb
es
pushf
mov
cld
in
aaa
mov
inc
aam
jp
out
imul
or
jp
dec
xorb
outsb
or
xrelease
rolb
arpl
mov
push
mov
add
jno
mov
sub
sbb
ja
loopne
push
loope
into
sub
or
xchg
cmp
negl
imul
repz
dec
add
js
addr16
jmp
imul
inc
shll
sbb
mov
leave
int3
insl
or
out
xchg
sbb
xchg
call
dec
push
mov
jae
ret
mov
xor
leave
sub
test
and
mov
pusha
jge
push
ret
xor
adc
mov
movsb
and
orb
mov
rcrb
sbb
add
jmp
dec
inc
sub
cli
sub
mov
sbb
jno
scas
rclb
add
in
stc
cmp
push
mov
xchg
lea
adc
mov
jle
outsl
pop
and
xor
loopne
dec
xor
repnz
adc
out
rol
inc
les
lcall
mov
pop
in
insl
fwait
out
xchg
pop
addr16
insb
xor
int3
mov
movsl
icebp
push
mov
push
scas
popf
and
sti
movsb
push
sub
xor
cmp
or
jmp
cli
push
push
rol
test
mov
push
xor
lcall
mov
scas
or
add
mov
mov
in
inc
pop
iret
add
in
xlat
cmp
push
jo
call
out
lock
lahf
jg
push
push
addl
fs
mov
push
push
mov
loop
xchg
jnp
sub
dec
in
mov
fistl
sub
and
push
cmp
nop
pop
pop
push
or
or
xorl
push
add
or
movsl
dec
insb
push
lods
sub
xor
cwtl
addr16
call
out
in
mov
lret
cli
fildll
test
ja
or
negb
notl
cmpsl
pop
std
outsb
cmc
jb
and
jno
faddl
dec
test
fadds
and
sarl
and
in
fistl
out
sub
dec
sahf
popf
daa
sbb
lret
xchg
daa
out
mov
push
adc
dec
pop
movsb
pop
jno
mov
adc
mov
test
fisttpl
aaa
pusha
in
jnp
or
ss
cmpsb
sar
mov
mov
sbb
inc
dec
outsl
xchg
sbb
cli
adc
sbb
adc
imul
pushf
ljmp
ror
nop
mov
jmp
imul
sub
js
out
test
mov
lcall
pushf
adc
push
cmovp
push
inc
mov
cmp
inc
call
push
push
mov
mov
jb
jae
cmpsb
cltd
fisubl
fwait
mov
lahf
hlt
ds
jae
mov
adc
inc
mov
cltd
popa
dec
fucomi
mov
jl
ljmp
adc
cli
xor
xchg
ror
add
int
mov
shrb
or
mov
in
jecxz
mov
xor
iret
sub
add
into
jmp
fnop
push
sub
sub
inc
lcall
xorb
pop
cmc
and
repz
dec
lods
hlt
arpl
adc
and
lock
stos
ja
mov
sub
cmpsb
mov
lock
daa
mov
inc
adc
lock
js
jmp
aaa
es
jg
or
repz
imul
mov
xlat
stc
popa
add
xchg
jne
adc
mov
js
fidivs
ds
adc
rorl
xchg
sub
mov
icebp
out
shlb
adc
adc
aad
inc
jmp
aaa
push
lcall
sub
xor
ror
sbb
jns
jae
add
xchg
pop
add
hlt
or
xchg
addr16
fildl
cmp
fstps
stc
adc
cltd
aad
jge
xchg
add
loopne
insb
lock
jbe
imul
xor
sbb
out
push
adc
dec
not
cmp
mov
ds
fdivs
test
push
leave
xchg
imul
mov
mov
fiaddl
cmp
test
sbb
xchg
mov
cmpsl
in
mov
out
adc
imul
xor
dec
pusha
vmread
ja
roll
jne
dec
pop
push
rorb
push
lods
jge
and
pop
loope
push
repnz
cwtl
jp
mov
enter
aaa
mov
cld
pusha
daa
cmp
lret
mov
and
int
inc
cmp
fsubrs
mov
cmpsb
cmp
add
pop
cmp
or
es
sbb
in
movsl
mov
cmpsb
stos
stc
ss
pop
outsb
jg
jo
mov
in
cltd
aas
iret
test
inc
mov
call
sahf
jnp
cmpl
out
into
aad
add
sub
sbb
dec
sbb
dec
inc
jg
pop
js
xor
sbb
cmp
cmp
jae
cmp
dec
outsl
adc
lcall
lock
sbb
push
mov
sub
rclb
sahf
push
and
push
test
push
lock
fisttpll
sub
cmp
and
adc
movsl
xor
inc
call
jge
mov
pop
push
les
jmp
adcb
adc
cmpsb
pop
jmp
mov
orl
insb
push
addr16
clc
mov
xor
sbb
jp
pop
push
or
repnz
cltd
pop
inc
mov
fistl
aam
lcall
ret
jp
xor
sub
gs
inc
lcall
or
movsb
inc
or
sbb
xchg
pop
mov
cmp
mov
or
rol
add
fs
sti
insl
push
dec
push
sti
cwtl
stc
fstpl
shl
cmp
out
adc
cmpsl
cli
mov
dec
movsl
pushf
std
in
push
mov
rclb
pop
adc
mov
roll
xchg
pop
and
cli
mov
mov
pop
pusha
shlb
adc
sbb
nop
jb
jg
dec
aas
cs
dec
stos
fstps
jae
loopne
pop
push
stos
and
or
fwait
pop
or
aas
add
imul
mov
je
sbb
xchg
xlat
inc
sub
orb
and
mov
adc
aaa
adc
dec
fdivl
out
jae
int
mov
and
aaa
or
loopne
or
xlat
pop
fwait
fwait
mov
daa
fnstsw
dec
sbb
cwtl
ds
arpl
xor
jbe
jp
cld
add
jle
mov
lahf
in
xchg
mov
jg
push
inc
mov
push
je
mov
adc
lret
movsb
rcrb
mov
outsb
cmpb
inc
inc
das
pop
scas
jg
movsl
xchg
repnz
push
or
fldt
jo
stos
es
or
or
orb
xor
jg
andb
jo
mov
dec
add
jo
fucomp
notb
mov
rcr
jbe
add
xchg
es
and
mov
inc
test
push
xchg
jmp
and
sti
jecxz
pop
mov
fmul
or
mov
js
ljmp
inc
inc
xchg
xor
test
jne
push
mov
repnz
or
js
scas
ljmp
shlb
lds
mov
sbb
test
xor
mov
fbld
mov
mov
int3
ror
mov
add
or
jb
ds
ret
cld
dec
lock
jl
lods
jnp
in
dec
mov
dec
iret
sti
add
inc
mov
shll
mov
cmp
sub
mov
pusha
bnd
ret
scas
repnz
test
sub
in
or
add
cmp
pop
jg
fisttps
popf
scas
je
xchg
cld
cmp
push
ss
adc
push
loop
cmp
pushf
xor
xchg
push
pop
into
jp
gs
dec
add
inc
mov
dec
and
mov
cmp
negl
subl
mov
pop
pop
popf
xchg
pop
add
leave
arpl
scas
inc
xchg
mov
cmpsb
fisubs
add
mov
es
test
sbb
out
leave
aad
andb
xchg
sub
inc
inc
mov
xchg
sbb
cs
pop
jb
bound
dec
mov
jmp
cmp
xlat
pushf
dec
cmp
jb
test
out
xchg
mov
sar
in
test
ds
xor
add
pop
lcall
out
sbb
les
jo
std
mov
aad
push
jbe
movsl
lods
dec
jno
bound
repz
lods
mov
data16
add
and
jo
jge
leave
adc
lahf
int
push
into
jnp
add
xchg
adc
ss
mov
das
jno
mov
dec
adc
sar
imul
cli
sub
xchg
scas
dec
or
cmp
cmp
cmp
test
xchg
sahf
jae
in
sbb
or
js
inc
jmp
push
cmpsb
andb
hlt
sahf
mov
dec
mov
cmp
jmp
cmp
xor
aam
sbb
insb
dec
add
sub
mov
adc
pop
push
add
sbb
mov
mov
mov
push
stos
je
mov
mov
dec
or
sub
add
aas
jns
adc
pop
pop
mov
fistl
sub
cmp
and
lods
notb
jne
int3
add
jnp
test
shll
iret
fwait
ja
jl
mov
mov
imul
sub
and
xchg
and
sarl
icebp
rcll
mov
lods
mov
pop
pop
pop
daa
cmp
jge
sub
repz
jmp
daa
sti
jns
dec
sahf
mov
cltd
jb
in
insb
loop
mov
stc
pop
xor
lcall
jge
push
mov
in
insl
hlt
nop
jo
or
fdivrl
fmull
mov
adcl
mov
sub
movsb
ret
sar
mov
cmp
or
cltd
mov
xchg
dec
das
ret
stos
pop
mov
nop
arpl
and
stos
out
mov
sahf
loop
popa
sub
xor
add
ds
ljmp
std
jp
pop
pop
test
mov
inc
lret
cmp
gs
pushf
mov
jns
mov
nop
jb
and
es
pop
mov
sbb
jbe
push
roll
jmp
ljmp
out
insl
mov
gs
push
adc
loope
fldenv
aam
rorl
stos
test
pop
out
ljmp
adc
sar
sbb
cs
loopne
pop
outsl
shl
add
sbb
ss
sarb
fildll
je
push
scas
cmp
lret
mov
test
out
loop
cwtl
dec
xor
mov
pop
sar
aam
inc
mov
dec
jmp
xor
mov
outsl
pop
add
cli
mov
xchg
dec
cmp
mov
dec
push
inc
scas
cld
dec
mov
shlb
shl
inc
bound
jge
aad
xchg
inc
fwait
xor
push
notl
or
sub
cmp
lret
sahf
out
bound
xor
lcall
call
mov
popl
inc
int3
adc
incl
popf
cmp
cmp
adc
mov
jmp
popa
or
movsl
sti
addr16
sbbb
icebp
dec
leave
flds
or
sub
xchg
mov
cwtl
jo
stos
mov
and
adc
imul
repnz
in
fildll
fdivl
lods
sub
cmp
aad
jno
pop
jbe
mov
adc
rolb
clc
jbe
neg
insl
adc
cs
sbb
dec
mov
lods
sub
cmp
xchg
xor
jbe
imul
mov
fmuls
jbe
shll
jle
adc
push
lods
pop
inc
pop
sbb
cmp
pop
jno
and
fwait
or
jge
js
fcmovnbe
cmp
xchg
xchg
inc
inc
xorl
cmp
xchg
test
insb
or
pop
add
dec
dec
xor
test
fnsave
es
pop
or
xor
mov
jns
enter
or
dec
icebp
or
add
mov
and
pop
aad
sbb
js
sub
push
inc
add
aad
xchg
add
push
push
movsb
and
jmp
xor
scas
cmp
iret
mull
or
scas
subb
xchg
stc
ljmp
mov
les
stos
rorb
in
xchg
xchg
sub
lcall
push
dec
ret
and
ljmp
ret
lea
ss
and
lock
hlt
fldenv
mov
push
dec
push
or
or
push
sbb
jmp
test
sbb
mov
out
and
mov
and
mov
std
int3
arpl
pop
andb
icebp
out
dec
jp
inc
add
adc
loop
test
xchg
scas
xchg
jmp
jl
sbb
cmpsb
sub
pop
lds
inc
cmp
sbb
pushf
jp
loope
mov
in
mov
mov
addr16
mov
add
jns
leave
stc
sub
pop
enter
xor
fwait
stc
adc
cmc
jge
pop
ret
aad
ds
sub
pop
sbb
lds
add
mov
ljmp
dec
daa
ds
jno
test
xor
gs
jp
xchg
loope
and
mov
push
mov
sub
in
pop
imul
dec
mov
addb
test
xor
inc
ret
mov
lods
movsl
cmp
pusha
insb
mov
movsl
shl
rol
pop
icebp
adc
sbb
push
pop
je
icebp
dec
shl
cmp
sbb
sbb
pop
fldt
adc
jg
sub
enter
or
sbb
movsl
dec
sub
aad
inc
mov
cmc
sub
pop
adc
rolb
fistpll
inc
rcll
out
fmul
xchg
test
pop
cmp
loop
loopne
js
dec
mov
out
or
cs
mov
negl
inc
loop
jno
jmp
mov
mov
aam
in
mov
pop
cwtl
ret
mov
xchg
and
mov
add
enter
and
pop
shlb
leave
push
inc
insb
and
mov
fwait
mov
jge
lcall
mov
jmp
push
jge
fdiv
pop
mov
lods
pop
pop
in
mov
pop
cli
out
testb
fcomip
scas
xor
arpl
aaa
xor
inc
jmp
stos
dec
aas
clc
mov
push
or
jo
sbb
add
jle
loop
jmp
int
js
repz
movb
insb
xchg
lret
imul
adc
pop
mov
insl
cmp
cwtl
in
imul
lods
push
in
cmpsb
test
mov
pop
inc
dec
repz
loop
loopne
cmp
iret
shll
jns
xchg
adc
mov
cmp
lea
fs
or
jle
push
roll
movsl
fcmovnbe
ja
ret
mov
jg
inc
push
dec
fsincos
mov
mov
lret
jmp
mov
sbb
xor
mov
mov
dec
dec
jo
sub
and
stc
and
mov
jbe
lea
push
scas
insb
into
xchg
push
mov
outsb
fmuls
roll
leave
adc
pop
movsl
out
pop
fstps
jno
inc
add
scas
mov
mov
into
cwtl
cmp
shll
loope
jmp
xchg
popa
lods
sub
movlps
xchg
andl
lds
outsb
hlt
loope
and
popa
mov
movl
sbb
xchg
leave
hlt
jge
inc
or
push
dec
popa
lods
jle
popf
or
xchg
adc
mov
in
mov
cmc
fwait
push
ficoms
outsl
mov
dec
cmpsl
sarb
sbb
dec
inc
les
hlt
cltd
jbe
push
arpl
inc
pop
ss
outsb
push
jp
lcall
and
jae
xchg
mov
adc
js
mov
imul
cs
cld
mov
add
rol
and
frstor
jbe
out
mov
inc
test
cmp
out
cs
lahf
sbbl
int
jb
pop
mov
sub
and
inc
jo
mull
add
test
lock
andl
dec
adc
mov
mov
sub
or
sbb
mov
xor
or
fcoms
cmpsl
pusha
mov
jbe
cli
or
push
mov
cmpsl
inc
in
arpl
jle
jae
xchg
lret
jg
mov
mov
movsb
and
sbb
or
push
xchg
mov
repnz
and
sarb
mov
mov
mov
cmp
inc
xor
add
rol
push
leave
repz
sbbb
dec
jns
ds
or
hlt
js
repnz
push
test
jno
repz
adc
pop
lds
dec
push
pop
stc
test
inc
push
ret
and
and
or
aad
xchg
jae
sahf
push
cld
jae
sbb
add
sbb
xor
enter
es
mov
inc
out
adc
lret
iret
push
addb
and
xor
testl
add
mov
lods
jecxz
xor
cmp
mov
inc
pop
fstps
fdivrl
dec
or
arpl
or
sbb
loope
xchg
rcl
cs
jae
ficompl
dec
cmp
js
clc
mov
mov
loop
outsl
dec
push
mov
xchg
aam
int3
movsb
adc
clc
test
and
xor
cmpb
pop
xor
mov
cmpsl
repnz
mov
jmp
cmp
mov
adcl
mov
lret
mov
inc
push
add
sub
pop
cmp
inc
divb
js
push
aad
xlat
test
scas
out
lods
pop
push
lods
pop
pop
stc
add
sarw
adc
les
lret
sbbl
int3
inc
idivl
jp
xor
add
xorb
lahf
add
inc
pop
jle
out
fwait
sub
xlat
jg
dec
mov
xor
inc
fwait
arpl
sbb
jp
inc
xlat
add
aam
jle
add
xchg
inc
adc
xchg
leave
mov
mov
ret
inc
sbb
add
jge
rolb
out
outsl
push
and
les
add
cwtl
bound
and
pusha
cmp
or
add
mov
cmp
lret
movups
push
stos
aaa
je
pop
jp
dec
movsl
fstl
mov
jle
mov
es
inc
scas
fadd
xor
and
out
pushf
pop
jno
lcall
pushf
insl
xchg
dec
jg
adc
push
dec
ss
jb
loop
into
outsl
enter
hlt
cmovle
fdiv
adc
inc
or
jp
adcl
mov
jmp
cmp
lret
xor
nop
sbb
hlt
push
adc
and
mov
jmp
jmp
test
inc
les
sub
xchg
shll
pop
and
xlat
pop
fmull
jmp
jae
cmc
pop
pop
jae
sub
out
out
std
mov
pop
dec
mov
jne
ds
popf
cmp
ret
stc
add
sub
sahf
dec
inc
icebp
mov
repz
pop
ret
inc
lret
ret
and
std
mov
dec
dec
xchg
outsl
cmc
jbe
fwait
pop
into
arpl
icebp
mov
mov
cs
sub
xor
lods
xor
sub
gs
xorl
mov
pop
aas
xchg
mov
sub
in
sub
push
movsb
adc
movsl
or
js
call
pop
push
fwait
scas
xor
cmp
mov
sar
mov
idivb
push
test
sub
push
sahf
adc
cmpsb
jno
or
ds
and
lods
and
mov
or
lahf
fwait
jp
int
cwtl
jg
sub
fldenv
mov
rcrb
clc
mov
add
and
dec
mov
loop
test
or
jno
aad
js
cld
daa
int3
sub
push
in
in
addr16
push
pushf
loop
lea
sbb
adc
add
mov
scas
inc
cld
dec
pop
xor
cmpsb
mov
cmc
sub
in
adc
loop
shr
cmp
push
rcrl
loopne
mov
inc
lret
push
pushf
sub
lret
movd
pop
clc
repz
out
cltd
in
stc
mov
push
out
sbb
out
popl
mov
jge
jp
pop
je
cwtl
ror
cmpsl
fs
fwait
push
push
sub
xor
clc
and
insb
sbb
rcrl
jecxz
xchg
loope
mov
sti
fisubrs
push
lahf
xchg
push
xchg
inc
bound
gs
je
mov
movsb
fwait
add
stc
pop
loop
mov
push
loopne
rcrl
cwtl
cmp
mov
xchg
dec
jnp
int
cltd
sub
fisubl
inc
fnsave
repnz
adc
aas
pop
or
cli
test
bnd
bnd
shl
adc
pop
mov
fldcw
popa
mov
fadd
adc
orb
push
cld
cmp
int
inc
push
bound
push
add
mov
jmp
sti
fld
pop
addb
or
lcall
incl
pop
cmp
stos
push
repz
mov
scas
cmpsb
or
mov
movsl
xchg
fcmove
subb
sti
mov
sub
dec
mov
push
jns
mov
xor
xchg
xchg
cmp
or
cmp
pop
mov
push
add
movsb
sbb
sub
pop
pushf
mov
std
sub
shrb
jecxz
push
jbe
cmp
arpl
jnp
push
lods
jmp
cmp
xor
mov
cmpsl
sub
into
mov
aas
push
jns
mov
pop
mov
mov
cmp
jg
sbb
dec
clc
xchg
cmp
adc
rcr
shll
push
and
push
ret
add
sarb
pop
lock
add
mov
cmpsl
xor
aaa
pop
lds
pop
out
xchg
dec
ljmp
pop
mov
cmp
jg
sub
insl
lahf
rolb
fnsave
mov
jne
test
add
pushf
lahf
hlt
jno
movsb
outsl
add
test
loope
sbb
push
lock
xor
movsb
aam
pop
push
xchg
fnstsw
ss
and
andb
fnstenv
xchg
jne
inc
out
pop
xor
cltd
jb
push
pop
test
movsb
in
dec
icebp
mov
mov
push
loop
sub
mov
enter
popa
sbb
arpl
push
imul
sbb
or
sub
push
pop
sub
fdivs
pop
pushf
cmc
and
sti
iret
leave
pop
fbld
push
call
jmp
add
insl
int
popa
mov
loop
mov
xchg
popa
xor
jmp
fadds
das
cmpsb
aas
xchg
xor
popa
out
popa
mov
or
pusha
loope
popf
sub
aam
mov
les
adc
loope
lds
xchg
xor
sub
adc
aam
sub
xchg
mov
sub
pusha
arpl
cli
int
inc
stos
xor
inc
in
sti
in
cmpsb
movb
add
xchg
fs
inc
adc
outsl
mov
push
sbb
jns
fsubs
gs
inc
lcall
shrl
mov
gs
jo
jnp
pop
aaa
mov
pushf
fs
icebp
sub
je
jle
scas
push
adc
pop
mov
ret
insl
xchg
add
pop
xor
or
inc
fwait
jno
pop
mov
jnp
push
xor
add
pop
pop
pop
sbb
test
or
hlt
shrl
repnz
shrl
cmp
xchg
test
les
fdivs
mov
dec
adc
test
cmpsl
aad
ret
sub
mov
icebp
inc
sbb
cmpsl
adc
out
ss
movsl
dec
push
sub
jge
sub
les
jmp
mov
into
test
cmpsl
les
pop
ret
mov
mov
push
ret
es
mov
push
mov
in
in
pop
mov
jg
or
dec
bound
les
add
sub
pop
ret
sub
pop
sti
addr16
loop
sub
rcrb
jbe
jecxz
fxtract
push
test
jo
or
ljmp
dec
fcmovnbe
jg
mov
jo
imul
jle
xchg
aad
in
aaa
incl
shr
js
inc
pop
ds
lds
lea
test
gs
add
push
adc
cmp
outsb
push
loopne
bound
cmp
mov
inc
mov
xchg
stos
cltd
lahf
scas
dec
fcomp
adc
jp
sbbb
stos
rcl
adc
scas
out
dec
and
xchg
orb
xchg
jb
xchg
jnp
pop
jmp
push
mov
mov
dec
pusha
into
add
ret
cmpsb
out
or
push
push
jl
xor
jl
fdivrs
stos
cmp
jbe
xor
mov
jns
ja
aad
fsubs
out
jae
inc
hlt
mov
imul
jmp
stos
dec
addr16
pusha
xchg
inc
mov
nop
sbb
mov
bound
lock
sub
mov
adc
lea
ficomps
out
ret
fcomi
lret
mov
in
aam
data16
jnp
mov
xchg
mov
subb
test
pop
mov
jno
xchg
and
test
aad
cld
addl
mov
fisttps
stos
cli
sub
add
mov
cld
inc
push
add
in
ljmp
jg
repz
mov
bound
fisubrs
sub
inc
inc
rcll
or
sub
outsl
adc
gs
dec
pop
or
push
mov
mov
dec
jns
add
add
sbb
fnstenv
push
cmp
dec
in
stos
scas
clc
adc
fs
pop
sbb
pop
je
dec
addw
mov
push
sub
imulb
adc
jl
fdivrs
sub
and
outsl
pop
lcall
push
jbe
sbb
sub
sbb
xor
add
sbb
mov
push
sbb
std
je
xchg
je
mov
lcall
pusha
xor
jg
xor
mov
cmp
imul
cmc
add
ljmp
lea
movsl
subb
ret
insl
out
push
jmp
movsl
or
ret
push
or
push
js
push
out
jo
ljmp
jae
xchg
filds
shrl
ret
fldl
or
pop
pop
in
and
push
ss
xchg
sbb
push
dec
enter
push
push
sbbb
jo
sbb
xorl
xchg
adc
lds
movsb
push
pushf
fiadds
fcmovne
lea
hlt
loopne
dec
ret
daa
in
dec
jmp
jo
loopne
adc
and
out
insl
or
jno
and
lldt
adc
cmp
stc
mov
mov
push
xlat
cmc
mov
jg
pop
xchg
in
ret
mov
loopne
pop
jge
mov
inc
add
jne
and
gs
push
shlb
jae
push
push
push
and
lahf
je
inc
adc
dec
ss
movsb
mov
dec
ds
xor
dec
push
jae
aam
dec
dec
mov
sahf
loop
cmp
lods
cmp
leave
out
add
mov
scas
push
xchg
sub
std
sub
rcl
loop
pushf
xor
lea
nop
sbb
in
sbb
jge
loopne
ffreep
imulb
fld
mov
call
shlb
je
and
add
test
mov
repnz
and
call
out
xor
fimull
sbb
lea
xchg
faddl
test
mov
jl
jno
xchg
mov
push
sub
adc
mov
jo
rol
dec
pop
mov
mov
faddl
clc
add
mov
and
or
cvtpi2ps
and
enter
mov
fbld
mov
adc
push
enter
lahf
cmp
repnz
sbb
or
std
jo
jbe
sbb
sbb
cltd
inc
pop
imul
xor
std
inc
mov
push
xchg
fcomi
incb
sbbl
scas
push
mov
sbb
cwtl
cmc
fmul
test
ljmp
in
cmp
jnp
hlt
sti
jbe
and
daa
xchg
inc
mov
movsl
lock
rcr
dec
cwtl
adcl
iret
xor
mov
mov
pop
cmp
xchg
jp
inc
lea
pop
xchg
ss
lret
inc
adc
rcll
stc
adc
fidivrl
int
jo
and
cmp
popf
repz
jmp
and
aas
jno
incl
add
pusha
popf
test
jge
scas
xor
mov
fstpt
or
adc
inc
or
mov
xor
sub
cmpsb
mov
cmp
inc
push
stc
jae
push
mov
xchg
pop
fsub
shl
inc
xor
fdivl
movsb
or
inc
or
gs
shrb
mov
call
adc
dec
sub
leave
imulb
dec
movsl
lods
jae
and
lds
mov
jecxz
push
lods
dec
fcmovu
loopne
mov
aad
leave
aad
jne
pop
rcll
pop
nop
inc
lret
aam
mov
sub
cmp
add
xchg
xlat
push
mov
jb
popl
mov
imul
ja
xchg
jp
icebp
cmpsb
mov
mov
bound
pop
and
pop
dec
into
pop
and
fbld
inc
loop
dec
and
sbb
inc
cli
and
outsl
pushf
outsl
or
ret
jb
out
fisttpll
daa
xchg
sarb
dec
pusha
mov
testb
imulb
sti
mov
dec
push
sbb
js
sub
inc
push
pop
leave
out
lea
lret
testl
or
xlat
nop
out
jae
push
out
data16
mov
sti
out
push
pop
hlt
pop
cli
pop
push
push
das
cs
in
sti
cmpsb
cmp
out
adc
pushf
outsl
cmc
fs
daa
test
add
cltd
out
pusha
loope
and
mov
cltd
sub
insl
ret
lahf
int3
data16
sub
cmp
outsb
insl
mov
andb
jmp
lret
shrl
loopne
popa
and
cli
add
ja
aaa
xchg
jge,pt
hlt
mov
enter
jns
negl
out
push
pop
xchg
dec
sbb
mov
push
mov
pop
enter
add
or
push
lods
sbb
xchg
nop
lret
or
mov
jg
dec
pushf
pusha
mov
jg
push
xchg
dec
into
push
jns
jg
dec
xor
das
pop
lods
out
jne
inc
mov
and
mov
mov
movsb
mov
imul
fisttpll
aaa
pop
cli
outsb
jle
stos
leave
add
add
push
push
int
push
mov
xor
pop
jle
es
add
adc
mov
xor
mov
add
daa
scas
add
push
mov
inc
adc
out
inc
popa
mov
mov
and
shr
das
xchg
inc
jle
fwait
inc
lret
rcrb
cmp
mov
jl
mov
cmp
fcmovnb
fs
push
daa
int
imul
adc
xchg
pop
test
cmc
xor
push
push
cmp
sub
mov
jae
jl
in
mov
and
test
dec
faddp
sub
repnz
stc
dec
or
ret
jae
mov
cmp
fwait
bound
cmp
adc
out
pop
arpl
mov
scas
and
popa
addl
stos
fwait
mov
adc
clc
cwtl
sbb
pop
fistpll
adc
iret
sahf
mov
test
or
or
xorb
cld
jbe
lea
jbe
test
mov
and
les
movl
or
aam
scas
frstor
test
mov
in
in
inc
mov
xchg
jle
jp
roll
mov
clc
push
xor
push
pop
push
dec
les
inc
out
and
pop
sbb
sub
sahf
push
dec
test
push
lods
loopne
push
test
lock
dec
add
pop
add
jno
into
adc
dec
xchg
and
jae
push
in
cmp
addr16
insl
jge
pop
js
or
fnstcw
mov
cli
lcall
sarl
fwait
mov
imul
rcll
xchg
lahf
lcall
push
fnsetpm(287
add
dec
mov
fdiv
cmpsl
jns
sub
dec
js
pusha
flds
adc
clc
dec
sub
aam
and
in
pop
movsb
xor
mov
cltd
cmp
repnz
lahf
popf
xchg
push
mov
stc
aaa
mov
mov
jge
sub
ret
cmp
pop
ret
xchg
icebp
lods
or
pusha
mov
jg
lods
scas
mov
push
mov
mov
iret
jmp
fldz
cmp
test
stc
mov
call
call
imul
adc
filds
loopne
test
mov
in
xchg
int3
sub
imul
push
cld
dec
mov
ret
push
sub
mov
mov
in
and
adc
rclb
mov
addr16
push
test
stos
inc
mov
cmp
push
les
jo
push
push
imul
fnstenv
pop
scas
test
cmp
jge
std
add
fbstp
ffree
add
xor
mov
or
mov
sti
mov
xchg
xor
insl
shlb
add
pop
push
loop
mov
xchg
sub
push
jno
dec
std
pop
out
loope
js
and
adc
push
in
pop
fsubs
ror
stc
loop
out
les
or
scas
stc
loop
dec
in
push
test
inc
jecxz
out
and
lahf
arpl
aad
add
xor
or
into
ds
loope
repz
es
mov
xor
aad
fimull
bt
pop
mov
ret
addb
push
mov
arpl
sahf
xchg
pop
mov
in
mov
mov
jae
in
pop
sub
fwait
test
inc
decl
shlb
movsl
push
xor
pop
rol
push
les
push
scas
outsb
nop
xor
cmpsb
in
jne
dec
daa
popa
cmp
mov
push
sbb
mov
adc
movsl
pop
mov
pop
inc
mov
inc
pop
sub
stos
adc
mov
cvtdq2ps
push
jbe
in
mov
mov
or
ret
orl
sti
lcall
mov
jle
sub
adc
cli
cmp
inc
or
mov
push
cmp
es
out
cmp
mov
es
shrb
push
out
add
mov
int3
sub
movsl
mov
fsubr
mov
int
imulb
pusha
dec
pusha
in
mov
sbb
xchg
fdiv
mov
mov
xor
pop
hlt
mov
pop
inc
insb
mov
mov
push
leave
jo
sar
dec
and
xchg
clc
or
xchg
dec
inc
or
sub
add
cmp
jne
lods
add
jo
fisttpl
push
push
arpl
ds
fldcw
dec
xor
out
cwtl
mov
icebp
cmp
pop
dec
in
fisttpll
mov
sbb
notl
pop
dec
aad
outsl
jae
jo
rclb
cmp
clc
int
in
adc
popf
cli
or
lea
es
bound
out
lods
dec
jnp
repz
inc
mov
js
push
leave
int
dec
mov
in
inc
clc
pop
sarl
push
lret
bt
lahf
push
shlb
sbb
ret
cld
test
cs
fcmovb
in
lahf
sbb
mov
cmp
mov
movsl
push
lcall
pusha
adc
mov
cmpsl
ret
in
push
push
pop
sar
icebp
sbbl
ret
pop
mov
xor
push
pusha
push
adc
jb
add
and
outsl
add
jecxz
push
push
jmp
or
push
cli
aaa
sbb
push
push
loopne
jmp
cld
mov
or
lcall
inc
mov
outsb
das
jo
out
outsb
fbstp
stos
pushf
cwtl
notb
xchg
and
inc
notl
push
push
andb
or
pop
lock
mov
cmp
push
pop
or
in
push
add
pop
stc
leave
pop
or
out
and
push
mov
movsl
mov
sub
cmp
in
push
inc
dec
push
push
call
sub
xor
mov
stc
jb
mov
add
mov
jp
not
imul
add
pop
lods
mov
adc
mov
mov
xlat
flds
mov
inc
insl
in
adc
daa
inc
arpl
and
fs
adc
stos
out
fdivl
mov
push
sti
ss
data16
adc
jle
loop
adc
pop
or
in
or
aam
sub
test
hlt
insl
push
add
testl
inc
bound
sbb
xchg
xchg
xchg
daa
sub
adcb
jle
cwtl
das
jnp
std
sub
xchg
add
adc
or
inc
jl
cmp
nop
icebp
cmp
scas
das
jecxz
mov
out
aad
push
clc
imul
mov
out
js
mov
dec
pop
addr16
pop
icebp
push
sub
pop
enter
fidivrl
inc
sub
enter
iret
into
pusha
xor
or
xorl
sbb
mov
xchg
lods
or
push
ret
loop
xchg
push
dec
cs
sbb
rorl
sub
sbb
sub
mov
stc
aad
xlat
adc
aad
stos
ds
dec
pop
pop
cld
push
and
sub
int3
inc
xor
adc
out
enter
dec
test
popa
cmp
xchg
fs
and
mov
push
mov
sahf
int
mov
test
lret
jbe
push
adc
int
mov
or
loop
aam
pop
pop
xor
or
pop
es
or
dec
pushf
lock
push
bound
mov
mov
pop
adc
orl
xchg
inc
add
pop
cmp
loope
push
fidivs
xor
aad
pushf
jno
gs
sbb
add
jo
gs
popf
jmp
leave
addb
pushf
inc
or
iret
fdivrs
jmp
pop
cmp
lds
hlt
or
scas
add
scas
popf
int3
fmulp
push
aaa
cmp
mov
ljmp
lods
push
cld
cmp
or
arpl
and
add
cwtl
mov
fcoml
loopne
leave
das
sub
mov
mov
aaa
dec
sbb
adc
or
xor
out
xchg
pop
cmpsl
in
sbb
negb
push
or
adc
mov
lret
ja
icebp
pop
fcmovne
and
nop
xchg
sbbb
aaa
mov
imul
scas
mov
or
cltd
push
fmull
pop
mov
xor
sub
mov
xor
dec
std
inc
adc
push
mov
mov
fldenv
and
shll
in
xor
xorl
add
mov
sub
sbb
das
movsl
hlt
roll
fwait
pop
aam
sarb
test
and
cmp
es
add
test
scas
jns
fstpt
pushf
xor
sub
inc
jbe
push
jbe
cld
and
test
or
stc
or
sub
mov
stos
push
or
xor
in
mov
mov
mov
shll
test
pop
stos
sti
mov
cmpl
jl
mov
es
ja
data16
lahf
int3
or
pop
enter
mov
ja
cwtl
lret
sbb
mov
pop
out
jo
fiadds
cmpsb
lods
inc
dec
test
fcmovb
jecxz
cmp
mov
sub
push
jl
add
das
mov
xchg
aad
cli
jp
mov
and
xchg
inc
loope
popa
pmulhuw
or
or
pop
lret
adc
adc
or
add
push
or
mov
imul
add
int
ret
lret
pop
or
mov
rcrb
cmp
addr16
test
das
and
xchg
lcall
imul
mov
cs
lcall
jns
sti
lcall
in
std
movsl
ss
in
test
pushf
out
pop
nop
mov
mov
push
dec
pop
je
inc
mov
xor
roll
pop
test
das
dec
xchg
sbb
push
mov
cmpsl
add
js
stos
lods
fwait
push
jo
inc
inc
inc
mov
push
testb
ljmp
xchg
jecxz
test
rclb
push
icebp
and
aam
jp
add
inc
ficompl
repz
cmpsl
add
mov
cmova
frstor
sbb
cmp
jbe
sub
ret
push
lods
cld
inc
or
inc
mov
test
sub
or
push
or
xchg
xor
pop
add
cmp
pop
fisttpll
mov
mov
hlt
or
andl
aad
push
jecxz
xchg
data16
jl
dec
lods
inc
xchg
xchg
xor
jg
js
adc
les
push
cmpsb
or
mov
clc
fwait
push
imul
stc
movsb
in
push
xor
loopne
pop
mov
and
sub
nop
mov
adc
cli
add
jns
cmpb
pushf
int3
dec
pop
cltd
mov
xlat
cmp
cmp
in
das
inc
lods
mov
lret
sbb
movsb
ljmp
xchg
pusha
dec
in
lcall
mov
dec
jae
mov
pop
in
jbe
sub
jno
hlt
or
insb
lods
xor
and
adc
adc
psubusw
or
xor
das
scas
das
mov
jne
icebp
cld
cmp
std
dec
sarb
and
test
cmp
lahf
jge
pop
push
push
js
push
adc
pop
xor
push
sar
jo
mov
pop
jmp
cwtl
es
mov
iret
lods
mov
gs
jnp
ret
mov
decb
aam
lods
imul
lock
xchg
pop
inc
jp
xor
push
loope
pop
inc
fistpll
and
int3
sub
subb
clc
shr
mov
movsl
mov
aad
or
insl
dec
sbb
insl
scas
mov
sti
out
sub
ljmp
popf
inc
rcl
cwtl
fcomps
adc
bound
dec
sub
lea
cs
ds
sbb
jle
mov
cmpsl
cmp
add
lock
pop
cmpsl
insb
dec
mov
gs
add
push
mov
jecxz
sub
dec
out
cs
cltd
adc
jb
or
jno
cmp
pop
sbb
clc
inc
inc
sub
xchg
mov
mov
je
mov
sbb
and
mov
in
cmp
stos
push
fcompl
mov
mov
mov
lock
mov
adc
fcmovnu
xor
popf
mov
dec
pop
mov
bound
pop
or
sbb
sbb
jb
add
mov
mov
mov
pop
icebp
bound
adc
pop
add
mov
pop
test
pop
xchg
jg
push
and
mov
sub
cli
fbstp
push
movsb
add
or
adc
push
push
jmp
push
push
adc
jp
imul
cmp
cs
mov
in
and
adc
push
push
mov
dec
jle
fisubs
scas
ret
jl
push
cwtl
or
xor
imul
cs
add
scas
xor
xchg
xor
jg
jae
sub
adcb
lods
cli
jo
mov
pop
mov
call
or
daa
sbb
inc
enter
stos
sbb
push
push
mov
jecxz
jg
daa
inc
addb
cmp
mov
ficomps
dec
fstpt
testb
sub
dec
gs
subl
inc
cld
bound
cmp
clc
in
adc
mov
mov
xchg
fldt
stos
imul
sbb
add
test
push
pop
and
sarl
out
xchg
idivb
je
in
mov
aas
push
enter
mov
fs
popa
fldcw
in
syscall
pop
loopne
lahf
popa
push
mov
mov
enter
cmpsl
cmp
xor
cli
pop
sti
jne
stos
lods
mov
into
xlat
ljmp
xlat
or
push
sbb
jp
stc
cld
roll
hlt
aad
lret
xor
mov
mov
and
dec
sub
rep
add
ds
inc
call
push
adc
jge
xor
add
cs
loop
gs
push
pop
inc
xchg
ret
mov
cmp
leave
add
in
insb
fs
xor
out
cmp
push
adc
push
or
movb
mov
xor
jnp
in
jge
ljmp
pop
movsl
sbb
sub
cmp
push
popa
jae,pn
xchg
add
sbb
xor
mov
sub
cmp
mov
loop
div
inc
sahf
cld
stc
fldenv
mov
rolb
jmp
mov
dec
sbb
or
xor
out
arpl
test
lahf
or
mov
xchg
add
sbb
pop
ficoms
lock
fwait
adc
inc
into
push
into
call
enter
push
cmp
hlt
add
mov
mov
pop
pop
dec
or
xchg
sahf
sbb
bound
outsb
pop
arpl
rcl
xor
stos
sbb
push
fwait
xchg
test
xor
cmp
aam
lea
stos
mov
cwtl
lret
push
jle
adc
mov
sbb
cmp
jg
push
or
sub
xor
repz
lods
pop
xchg
js
xchg
mov
lahf
mov
add
push
ss
mov
rorl
push
std
insl
pop
data16
or
xor
sbb
jo
out
dec
out
jecxz
idiv
movl
jae
pop
mov
or
add
fistpl
aas
xor
insl
das
dec
stc
cli
icebp
ljmp
mov
jmp
pop
ds
xchg
inc
and
add
xchg
shr
es
in
fisttpll
inc
loopne
jp
inc
pop
push
mov
lods
cmp
xchg
ret
jmp
add
outsl
cmp
cmp
clc
or
inc
jmp
inc
aad
test
popa
mov
nop
jbe
lea
pop
sti
cld
pop
jp
pop
mov
add
ljmp
push
mov
jmp
repz
std
dec
int
pop
sub
cmc
push
sti
out
ficoms
pop
or
jl
setns
movsl
dec
push
mov
lret
push
pop
sbb
sbb
ret
test
jno
push
cmp
lcall
shr
dec
xor
dec
cwtl
ret
dec
scas
adc
shl
lods
or
std
pop
push
xor
mul
ss
inc
pop
push
inc
sub
xchg
add
xchg
sti
mov
sub
cmp
shrl
loopne
mov
inc
imul
mov
sub
outsl
pop
ja
shlb
repz
push
sahf
int3
push
mov
pop
dec
jecxz
xchg
out
outsl
sbb
ljmp
mov
pop
aam
inc
or
js
jbe,pt
cmpsl
mov
lods
cmp
xor
sub
mov
out
inc
jbe
cld
fisubl
inc
rcll
and
popa
push
popf
repnz
nop
iret
bound
notl
movl
xchg
lcall
xchg
sub
sbb
xor
xchg
into
pop
push
cld
in
out
mov
jbe
push
das
dec
outsl
xchg
jecxz
push
jp
cmpsl
imul
jae
popa
aas
cmp
imul
hlt
mov
ljmp
mov
sti
and
test
xchg
ret
cwtl
mov
xor
insl
call
test
loope
call
cltd
cld
jge
and
ret
or
pusha
adc
jmp
pop
fmul
outsb
xor
jg
loopne
jb
lret
push
add
sub
inc
inc
pop
push
movsb
scas
inc
andl
mov
lret
dec
sbb
pop
cmp
insb
push
sbb
sub
inc
cmp
mov
xor
mov
lock
mov
ret
mov
mov
rolb
jp
xchg
outsb
int3
loop
cmp
mov
xor
mov
popf
sbb
fs
mov
push
das
outsl
fdiv
inc
fwait
jmp
add
jle
jno
outsb
sbb
jge
fadd
stos
sti
fsubrl
bsf
jnp
arpl
inc
sub
das
inc
and
icebp
mov
add
rcrl
xchg
aam
dec
inc
cmp
ficomps
test
mov
xchg
sub
nop
movsb
xor
xor
in
data16
ret
sub
les
xor
cltd
jbe
lods
push
rcll
lods
test
pop
sahf
jae
int3
movsb
push
icebp
jns
mov
adcl
ret
xor
xchg
jge
and
aad
and
mov
loopne
mov
mov
ja
int
mov
lods
adc
stc
inc
addr16
pusha
pop
jb
and
es
aam
jecxz
jne
pop
sub
mov
and
or
sbb
lds
mov
and
cs
xor
push
mov
xlat
or
aas
scas
xchg
inc
aam
lods
xor
dec
andl
jo
sub
or
cwtl
fstps
mov
pushf
insl
mov
xor
aam
and
pop
pusha
outsb
add
mov
aaa
test
repnz
push
test
adc
hlt
rol
out
mov
in
outsb
imul
xor
call
jg
loope
sbb
enter
data16
mov
sub
cmp
jns
and
or
sbb
or
aaa
fwait
movsl
subb
add
iret
jge
outsb
push
outsb
std
mov
cmp
mov
add
adc
fistpll
mov
mov
mov
push
icebp
lods
test
add
jne
addr16
cld
dec
test
cmc
xor
and
mov
sbb
in
xchg
leave
roll
or
jp
aam
mov
inc
aaa
mov
outsb
sub
push
lea
pushf
mov
clc
inc
cmp
push
add
inc
rclb
lods
es
int
sarb
mov
mov
xlat
test
jle
fldl
mov
jne
addr16
push
mov
leave
pop
bound
rorl
mov
cmp
or
cmp
test
imul
out
mov
pusha
out
sahf
xchg
clc
mov
mov
fidivl
in
jo,pn
pusha
inc
lcall
popa
lock
mov
adc
push
pop
movsb
lods
add
sbb
sub
stos
sbb
in
mov
sub
scas
mov
inc
out
push
repnz
cmp
sbb
ret
lock
push
pop
decb
mov
or
je
xchg
cmpsb
mov
mov
and
insl
xlat
inc
in
jg
insl
sbb
lods
cld
cmp
mov
jg
mov
xchg
fisubs
mov
dec
or
mov
adc
imul
and
popf
inc
ret
mov
lcall
and
sub
das
ret
mov
push
mov
sbb
pop
inc
inc
dec
sahf
jp
dec
pop
rcr
stos
out
aad
inc
js
xchg
imul
and
add
and
les
ret
sbb
in
push
jge
push
inc
push
jb
mov
cmp
sbb
push
int
jl
out
pop
sub
pop
and
cmpsb
xor
stos
xor
push
xchg
sbb
sbb
mov
js
subl
out
xchg
ljmp
leave
ficoms
xchg
dec
or
xor
movd
imul
into
inc
sub
and
sbb
lds
divps
mov
adc
test
pushf
mov
mov
imull
or
leave
cmp
xor
test
pop
jb
aam
dec
pop
scas
loop
test
sub
mov
inc
jle
mov
mov
inc
stos
push
fidivs
imul
xchg
loope
aam
and
nop
fdivrp
inc
pop
adc
push
sub
movsb
aaa
pop
sbb
cld
and
add
andb
xor
xor
fs
in
addr16
add
std
arpl
push
dec
and
inc
xchg
dec
addr16
fimull
repnz
cmp
jp
sub
insb
std
push
in
rorl
in
xor
inc
mov
aad
std
jbe
inc
jno
sbb
pusha
repz
cmpsb
or
fsub
lods
pushf
inc
sub
out
stos
les
into
mov
inc
mov
loope
fsts
jmp
lahf
call
or
inc
sub
or
popa
xchg
or
les
shr
pop
mov
push
mov
mov
cmp
flds
xchg
xchg
inc
dec
cmp
xor
cwtl
sub
xor
in
sbbl
lds
nop
sarb
jno
mov
std
or
inc
ja
xor
push
adc
jmp
xchg
stos
dec
mov
loop
inc
xchg
adc
out
xchg
std
movsl
mov
ds
push
paddd
xor
hlt
jbe
test
jecxz
sbb
pmuludq
test
jmp
jo
sbb
inc
mulb
int3
fdivrs
xchg
or
jle
mov
mov
mov
pop
call
cmp
dec
sub
pusha
mov
push
test
xor
popl
into
and
sbb
pop
xlat
and
iret
jmp
gs
push
or
cld
pushf
mov
xchg
ret
aad
mov
subl
push
inc
mov
push
sbb
xor
inc
sarl
pop
lock
lret
adc
mov
dec
lock
cltd
mov
adc
xorb
addl
in
hlt
fcompl
jmp
pop
ja
xor
cwtl
andl
es
pop
sub
mov
mov
sahf
push
bound
ret
jg
test
in
pop
aaa
mov
mov
out
popa
movsl
cwtl
lods
cmp
push
insb
loop
and
and
sub
aas
mov
out
hlt
add
ljmp
ja
call
add
cmp
mov
xchg
push
out
fs
adcl
adc
shll
mov
inc
lret
add
mov
xchg
fwait
xor
adcl
sti
pop
stc
rorl
lret
dec
fs
jge
inc
stc
cld
in
xor
ffreep
xlat
push
ret
addr16
push
ret
mov
add
in
out
test
out
mov
pop
sbb
sbbb
test
xchg
add
xchg
js
test
lcall
test
rcll
sub
repnz
stos
xor
out
xlat
incb
inc
imul
push
dec
enter
pop
jle
xor
jo
jne
sbb
ljmp
add
sbb
and
fwait
rolb
jmp
xorl
dec
out
push
adc
mov
cmp
xor
js
fsubr
jne
mov
sbb
outsb
ja
xor
test
test
enter
mov
out
in
fldt
lret
hlt
and
loopne
and
jl
loop
xchg
pushf
jmp
pop
fcmovnbe
and
mov
fidivrs
bound
mov
add
cmp
xchg
sti
sbb
cwtl
push
insb
sar
mov
pop
stos
or
in
clc
fistps
cmp
aaa
dec
mov
pop
outsb
dec
fsubp
sbb
xor
add
movl
outsl
lahf
sahf
sbbb
rolb
push
adcb
cmpl
aam
pop
mov
sub
or
sahf
dec
xchg
xchg
add
insl
pop
push
lea
sbb
pop
std
scas
add
sub
call
stc
pop
adc
cltd
out
movsb
test
add
and
loopne
arpl
mov
inc
mov
push
fsubs
xor
xchg
nop
mov
mov
or
xchg
xchg
mov
test
loopne
pop
mov
and
stos
mov
cmpsl
daa
shrb
fnstsw
dec
rcl
and
ret
aam
dec
push
insl
mov
sub
ds
dec
repz
ret
or
ja
dec
aam
ret
sbb
pusha
xchg
mov
mov
aad
cmpsb
cmp
js
out
sbb
aam
inc
popa
pop
add
test
mov
sahf
inc
add
loopne
loope
cmc
pop
mov
or
inc
aas
out
push
repz
sbb
xchg
inc
imulb
stos
call
outsb
ds
es
lods
mov
stos
insb
push
loop
mov
mov
stos
mov
push
xchg
test
mov
out
mov
mov
dec
xor
xchg
mov
outsl
mov
and
jns
pop
daa
sbb
jns
or
and
leave
cmp
lods
xlat
xor
and
mov
popf
cmc
jle
dec
test
call
push
cmp
pop
or
int3
pop
push
dec
push
lea
mov
sbb
or
gs
sbb
int
cmpsl
sbb
cmp
add
push
pushf
fnstsw
dec
push
add
sub
in
data16
pop
push
testl
mov
xchg
xchg
hlt
inc
jp
push
push
mulb
add
sarl
test
cld
dec
repnz
leave
xchg
je
fisubl
cmc
dec
pop
push
mov
jl
xlat
mov
scas
cmpsb
popf
out
cmpsl
dec
xchg
mov
xchg
jo
xchg
add
aaa
sbb
cli
add
inc
cltd
cli
xchg
orl
xchg
icebp
int3
xchg
lock
xchg
mov
and
cld
pop
inc
ljmp
jne
pop
sbb
add
mov
sbb
cmp
shl
and
adc
inc
dec
and
sbb
push
or
lahf
mov
pop
cmp
adc
ljmp
lods
push
mov
or
xor
out
mov
ret
jle
xchg
pop
add
ror
or
push
mov
lea
les
or
out
in
repnz
mov
xchg
lds
ret
pop
mov
jns
push
mov
push
das
or
jl
jae
cmc
jb
fwait
adc
movups
add
pushf
sub
hlt
aam
pop
push
push
inc
mov
pop
sahf
aaa
lret
icebp
ja
push
mov
movsb
movsl
mov
mov
mov
push
cmc
mov
cmpsb
push
and
ljmp
lods
shl
mov
test
les
out
pop
xchg
outsl
in
repz
dec
out
push
inc
push
or
into
pop
jmp
adcb
pop
fsts
loopne
mov
or
int
cmpsl
lret
adc
rcrb
push
dec
xor
aam
mov
out
test
mov
mov
and
add
and
xchg
fsubs
inc
xor
cmp
movsl
mov
dec
clc
sbb
ja
sarb
rcrb
sub
rcll
rdpmc
mov
xchg
mov
jnp
add
sbb
and
out
ds
sbb
adc
stos
popf
xorl
pop
inc
mov
pushf
pop
stos
cmp
pop
lods
xchg
sti
xor
pop
push
outsl
lret
es
mov
pop
jle
popa
push
fstpl
call
inc
call
adc
mov
mov
add
imul
dec
test
imul
and
jnp
jp
push
push
and
pop
loope
scas
lcall
sbb
fldenv
insb
jbe
out
lcall
fldt
push
mov
xor
sbb
xchg
insl
bound
inc
icebp
sbb
in
add
outsb
in
cmp
clc
repz
cmp
lods
in
out
or
or
test
xor
sbb
mov
push
mov
sub
mov
mov
call
xor
sbb
orl
cmp
fstps
pop
cmp
out
sbb
dec
ret
lods
loop
adc
in
aam
sub
adc
jnp
sti
sub
mov
sbb
xchg
mov
jecxz
sbb
lods
mov
inc
loop
addr16
faddl
pop
jge
test
or
xchg
imul
sub
fiadds
jle
ja
mov
xchg
std
xchg
dec
ret
lock
out
or
jb
dec
dec
repnz
mov
fdivs
fdivl
xor
xchg
lods
mov
or
lret
roll
movsb
sbb
pop
xchg
das
lret
popf
inc
push
fdivr
sub
push
nop
push
mov
test
enter
push
pop
addr16
in
ret
push
cmp
mov
mov
jo
mov
and
mov
clc
cltd
sub
push
push
jmp
add
mov
into
idivb
repz
add
xchg
jbe
dec
mov
scas
aas
adc
ljmp
pusha
loop
cmpsl
aad
inc
or
mov
push
jo
loop
mov
xchg
xchg
stos
and
pop
sub
push
adc
ret
out
xor
dec
cld
and
jecxz
mov
xchg
mov
dec
fadds
or
pusha
sti
out
mov
int3
cltd
sbb
test
cmp
loop
cmp
dec
adc
jns
imul
cltd
mov
iret
psrld
cmp
mov
push
bound
mov
pop
fistpll
lods
mov
lcall
adc
push
jmp
std
dec
je
outsb
popf
loop
movsl
es
iret
ds
sbbb
in
jbe
mov
pusha
jle
jno
ja
dec
ja
fsubrl
bound
mov
mov
and
popa
jb
aas
outsl
repz
and
lods
pop
imul
xchg
xor
divb
lea
ficompl
inc
push
bound
cwtl
xor
cld
jnp
incb
cmpsl
inc
popf
fs
inc
test
push
in
mov
lahf
and
fcmovu
lds
cltd
adc
repz
pand
mov
call
lret
mov
loope
daa
addr16
jle
lahf
push
inc
fimull
push
lods
in
ds
mov
jg
ret
lods
push
xor
mov
scas
fbstp
or
insl
ror
push
or
xchg
lods
or
stos
orl
xchg
lret
icebp
lret
push
sbb
adc
xchg
jbe
mov
xchg
xchg
addb
data16
push
insl
jae
sar
mov
int
cmpsl
int3
mov
push
or
in
icebp
xchg
and
add
imul
xchg
push
and
sub
and
cmc
mov
mov
and
loopne
add
cmp
jl
lds
inc
icebp
mov
cmp
icebp
xor
insb
xor
xchg
shrb
sub
jno
subb
sbbl
and
xlat
dec
xchg
mov
jns
pop
jno
test
ret
enter
push
insb
sbb
js
in
pop
push
xchg
cmpsl
mov
call
adc
xchg
sahf
in
push
call
or
xor
or
jle
rol
iret
adc
jne
mov
pop
shll
and
pop
push
cld
or
jl
jp
sbb
test
and
xlat
sbb
cmp
mov
sahf
or
popf
mov
stc
out
adc
addb
xchg
or
and
mov
repz
sub
lret
sub
sbb
sub
loop
in
test
orb
push
and
push
and
sti
lods
mov
pop
xchg
mov
pop
cwtl
jl
imul
pushf
outsl
imul
sub
in
in
cli
push
in
or
das
int
mov
inc
push
repnz
fdivrs
inc
icebp
lds
ljmp
loopne
push
movsb
sbb
into
test
iret
fnstsw
fdivl
mov
xor
test
fildll
push
out
or
arpl
shrl
lock
jl
stos
cmpsl
stc
mov
mov
xchg
lret
stos
scas
rorb
jns
aam
sti
test
test
cmp
sbb
or
fwait
aam
inc
jo
jle
xor
and
std
jl
call
stos
cwtl
outsb
mov
lds
jecxz
fs
enter
inc
std
rcrb
lahf
jns
inc
xor
mov
jae
cmp
mov
jnp
push
inc
cli
lods
lods
imul
inc
xor
shl
fxch
xor
and
mov
sahf
sub
rcrl
mov
into
mov
jle
push
push
jecxz
sti
xchg
movsb
leave
movsl
or
clc
nop
ja
mov
jo
les
aaa
imul
out
xorb
dec
inc
hlt
test
rolb
mov
iret
xchg
fisubrl
or
stos
mov
xchg
mov
mov
data16
jb
xor
roll
imul
js
push
mov
shrb
lods
push
dec
fcompl
lret
and
xchg
lock
mov
mov
sbbb
xor
push
mov
mov
push
adcb
aad
and
mov
inc
cltd
lcall
xchg
ja
sub
xchg
push
movl
rcl
xchg
test
shrl
add
aam
gs
notl
outsb
xchg
xor
fistl
cs
and
test
mov
bound
pop
lcall
sbb
sub
or
dec
mov
rcrb
adc
xchg
loop
test
pop
movsl
jnp
fwait
icebp
pop
dec
ljmp
int3
int
cmc
roll
pop
insb
pop
sbb
and
mov
fistpll
in
bound
fildl
pop
test
cltd
mov
xchg
mov
and
mov
data16
repnz
cmp
and
xor
xor
dec
jns
loop
repz
in
jp
fistps
mov
xchg
mov
pop
adc
std
push
inc
mov
cltd
sbb
fimuls
and
fndisi(8087
cmp
mov
add
cmpsl
xorb
lods
xchg
jns
cwtl
adc
shll
in
and
sub
or
pop
mov
sub
mov
scas
pop
negl
add
test
jge
xchg
lods
mov
movsb
add
jnp
sub
dec
out
lock
jnp
xchg
imul
mov
leave
mov
xor
enter
cmp
xchg
pop
mov
orb
stc
arpl
mov
ljmp
push
popf
jp
out
xor
mov
push
push
loope
out
lock
outsb
leave
pop
frstor
jg
inc
xchg
xlat
in
xchg
sbb
pop
notb
cmpsl
aam
pop
or
mov
dec
pushf
fisubrs
insl
pop
push
sbb
push
std
fstp
and
fnstsw
cli
and
cltd
xchg
or
lcall
mov
je
pop
and
cwtl
fsubrs
add
addl
outsl
pop
pop
jecxz
sar
and
test
xor
pop
cmp
and
cmp
ja
push
cmp
out
es
push
lahf
jbe
pop
test
and
dec
pusha
inc
pop
pushf
mov
stc
ss
push
adc
and
sub
inc
jnp
push
pusha
mov
mov
or
cmp
lcall
out
test
sub
mov
pop
in
add
fcoms
je
xor
xor
in
cltd
inc
xor
leave
scas
shll
inc
mov
insl
std
fwait
pusha
push
mov
adc
cld
mov
iret
mov
jno
mov
lret
shlb
push
and
add
cmp
dec
sub
int
push
rolb
lods
lods
cli
pop
enter
pop
jae
test
pop
lds
mov
cmp
ss
or
sbb
es
fucom
into
inc
cld
xchg
add
pusha
and
je
or
add
mov
test
out
push
xchg
lcall
jmp
hlt
in
and
jo
cltd
xchg
lea
popf
aaa
ja
loope
and
shrb
sub
cwtl
fisttpll
pop
sbb
lcall
mov
repz
in
mov
xchg
mov
push
push
xor
mov
pop
jecxz
xchg
scas
enter
mov
mov
fwait
aas
dec
adc
icebp
movsl
xor
jno
cmp
gs
shlb
shll
and
xor
dec
clc
mov
and
fwait
call
xor
movsl
adc
int
int3
jb
sbb
pop
ja
pop
jle
call
cmpsl
or
gs
cwtl
imul
sbbl
inc
jbe
cmpsl
fisubrl
loop
add
mov
pop
mov
pop
inc
shlb
shll
mov
clc
inc
outsb
mov
dec
pop
fisubrs
mov
scas
inc
mov
mov
mov
clc
scas
lret
cli
sahf
mov
dec
jns
nop
call
cmp
dec
jae
aam
push
pop
xorb
mov
enter
push
int
and
jecxz
add
add
cmp
out
jb
ret
and
mov
lret
jle
cmpsb
dec
adc
mov
outsl
lock
in
cmc
inc
lcall
faddl
sub
loope
imull
lret
aas
shlb
xchg
icebp
xor
pop
fcomps
jnp
hlt
dec
push
cmp
or
lods
pop
insb
loop
ja
add
mov
loopne
add
popf
scas
jmp
shrl
int
push
pop
cld
outsl
int
rclb
in
dec
insb
pslld
cmp
ret
std
sbb
icebp
nop
push
movsb
test
popa
cmpb
dec
in
bound
aas
popa
pushf
sub
push
clc
and
jmp
fucom
xchg
loop
mov
adc
adc
cmpl
stc
into
out
mov
popf
dec
bound
add
add
sahf
repz
pop
outsl
sbb
xchg
xorb
loopne
pop
test
dec
outsl
int
cwtl
jae
and
aad
fwait
add
iret
jecxz
dec
pop
jmp
push
imul
out
js
loop
jecxz
fisttps
xor
in
dec
int
mov
jg
jo
movsb
jg
xor
push
jae
repnz
sbb
mov
sti
movsb
cltd
test
add
mov
sub
sub
subb
push
inc
mov
xor
subb
out
mov
adc
cltd
mov
mov
pop
arpl
or
mov
ds
fwait
push
sub
arpl
call
mov
in
cmp
cmp
in
jl
js
xchg
or
test
shrl
cmpsl
dec
cmp
and
lcall
cwtl
adc
in
in
cmp
mov
hlt
cmc
mov
mov
sub
xor
cmp
pop
push
pop
mov
daa
js
pop
inc
sub
push
gs
xchg
pop
push
inc
arpl
inc
out
hlt
jl
push
hlt
and
add
roll
pop
jl
mov
call
insl
sarl
fcmovnbe
dec
stos
mov
lcall
mov
imul
push
mov
scas
sbb
sti
cmp
testb
mov
lock
mov
scas
sbb
iret
or
aam
popa
and
fs
leave
aas
dec
mov
push
xchg
mov
mov
sub
jp
sbb
ds
fsts
mov
imul
jnp
jg
jecxz
in
loope
push
adc
in
jecxz
inc
fdivrl
fistpl
sbb
sti
push
pop
xlat
cmp
fcmovbe
test
insb
adcl
shrl
ret
shlb
mov
mov
popf
imull
dec
scas
ds
stos
pop
or
cwtl
inc
shl
pop
daa
decl
aam
adc
test
lahf
sbb
adc
xchg
lcall
insl
pop
xchg
xchg
call
push
ss
mov
jo
sbb
xchg
lcall
neg
js
xor
lods
shlb
inc
fsubrl
jo
jb
iret
push
shl
and
out
dec
xchg
push
cmpsl
in
sbbb
stos
pop
subl
std
jns
mov
pop
mov
cltd
xchg
xchg
loopne
sub
dec
adc
sbb
out
lahf
cs
or
movntps
inc
clc
cld
mov
jl
mov
add
adc
jg
sub
mov
psrld
popa
daa
ret
dec
adc
dec
mov
dec
mov
aas
lahf
into
ljmp
pop
mov
cli
lret
aaa
lods
sti
lcall
out
into
sub
js
mov
xor
cmp
loope
and
mov
cmpsl
dec
rcl
pop
popf
mov
and
cmpsl
or
out
ret
cltd
jge
pop
mov
ljmp
lods
adc
mov
iret
dec
add
outsl
mov
push
xchg
sarb
lock
and
mov
inc
clc
push
xchg
push
enter
mov
popf
scas
movsb
decl
or
ret
add
push
push
imul
test
push
dec
adc
out
jle
jae
cmp
xrelease
mov
out
cltd
fisttpl
loopne
scas
push
push
popf
or
cmpsl
jbe
inc
xor
loope
imul
or
inc
and
loopne
xlat
jp
loop
and
sub
es
sub
mov
or
sbb
xchg
cmp
xor
insb
mov
add
add
mov
and
jmp
rorl
and
adc
lods
jg
inc
dec
push
scas
fnstcw
cli
add
add
loope
sub
aas
ret
lods
dec
mov
fisubl
in
sar
in
push
cs
lods
inc
hlt
push
repnz
insb
mov
aam
mov
pushf
adc
fmull
xor
xchg
push
lds
cmpsb
std
cmpsl
and
int3
mov
jmp
mov
pop
dec
mov
mov
leave
js
fs
dec
outsb
or
sub
dec
std
scas
in
fisttps
movsb
mov
in
cwtl
test
adc
and
lds
xor
es
mov
lds
call
or
fcmovu
mov
mov
addb
lock
or
mov
movsb
out
mov
rcll
jg
xchg
rcrb
rcrl
js
jmp
xchg
push
data16
sbb
jg
movsl
adc
inc
sti
daa
mov
pop
lret
xchg
cmp
sub
jg
scas
idivb
add
pop
jne
pop
xchg
fnstsw
and
sub
pop
cmpsl
xchg
mov
inc
out
lock
pop
mov
test
cmc
push
cmp
mov
dec
clc
push
setb
pop
dec
dec
pop
arpl
mov
bound
sahf
popa
pop
jo
fisubrl
xor
and
xchg
inc
push
popa
push
and
loop
je
mov
pop
adc
push
cmp
xlat
pop
mov
push
js
lret
subl
cmp
hlt
jnp
push
rorb
sub
mov
sbb
cmp
xchg
inc
imul
das
add
jle
xchg
sahf
idivl
in
ficoms
ljmp
sbb
add
or
stos
pop
and
inc
adc
sbb
lds
and
sub
ror
jl
jmp
lret
mov
aam
aaa
push
repnz
adc
movsb
adc
add
scas
sbb
sub
or
xor
push
loope
mov
mov
scas
mov
popa
xchg
inc
out
aas
dec
jno
shrb
insb
pusha
rcrl
mov
in
stos
aas
pusha
out
je
andl
inc
out
pop
add
movsl
leave
lahf
and
xlat
dec
and
jne
lahf
lcall
je
es
repz
mov
xlat
jo
dec
in
mov
ret
mov
nop
cmp
pop
or
jg
imul
cmp
popa
or
and
xchg
inc
add
push
cwtl
loopne
or
iret
adc
mov
lahf
sbb
cs
pushf
sbb
lods
imull
test
dec
sub
xchg
sahf
push
clc
push
jle
das
cwtl
sub
lcall
and
add
lods
outsl
sbb
rol
out
in
push
shll
jle
fimuls
mov
xlat
or
push
xor
inc
and
add
repnz
push
out
push
vmread
cmp
nop
cli
pop
shlb
mov
xchg
sahf
push
imul
cmp
stc
scas
cmp
popa
repz
dec
mov
adc
mov
cs
movsl
xchg
movsb
xchg
popa
pop
movb
xchg
pop
popa
xchg
test
cltd
push
sub
push
scas
xchg
mov
pop
rcrb
or
push
cltd
sar
ja
jl
push
mov
jge
test
bound
mov
orl
xchg
lods
push
or
sub
mov
mov
or
inc
and
add
and
jp
leave
nop
xor
xchg
fsubs
pop
aam
mov
push
stos
xchg
fnstsw
call
push
mov
iret
jnp
mov
xchg
es
add
mov
mov
or
cs
fidivrl
arpl
mov
rcl
adc
rcll
insl
and
jnp
jb
fldcw
and
adc
mov
mov
adc
ror
stos
int
popa
or
daa
add
loope
aam
inc
popl
jge
cld
and
imul
push
outsb
sbb
push
xchg
xchg
push
sbb
sub
add
cs
in
lahf
pop
arpl
push
mov
cmpsb
adc
sub
mov
lds
push
nop
mov
std
xchg
mov
scas
jne
insb
mov
out
cltd
or
inc
sub
test
or
ret
dec
subb
loop
mov
xchg
adc
jmp
stc
adc
insb
mov
dec
out
push
scas
icebp
ret
insb
dec
sub
rclb
jae
lods
lcall
int3
add
test
mov
out
je
xchg
add
jne
bound
out
jae
in
sub
movb
or
xchg
and
std
leave
cmp
jb
dec
push
lret
inc
mov
testb
fucomp
int3
dec
pop
fcompl
dec
xchg
je
out
cmpsl
in
push
nop
loop
or
popa
mov
aaa
push
imul
test
sbb
mov
inc
sarl
test
loop
popl
scas
pop
mov
dec
xchg
lock
repz
or
clc
ret
or
xor
roll
add
pop
cmp
mov
add
cmpsw
dec
pusha
mov
lea
icebp
lock
pop
adc
int
lds
pop
negl
add
push
repnz
cmp
dec
cmp
push
movsb
scas
cwtl
movsb
movsb
pop
fnsave
mov
js
shrb
jmp
loop
or
das
add
inc
fneni(8087
insl
push
in
push
or
adc
dec
mov
mov
scas
aam
ljmp
int3
popa
cmp
xchg
loopne
and
js
in
dec
fildl
je
adc
xchg
mov
mov
int
sbb
xor
outsb
inc
mov
xor
andb
cmpsb
lahf
outsb
test
jle
mov
je
jno
fwait
rcr
push
test
xchg
cltd
inc
pop
xchg
cmp
icebp
lret
or
push
call
cld
movb
sub
negb
jne
aas
inc
and
cltd
adc
pop
xchg
or
cltd
push
hlt
addr16
xchg
mov
out
inc
jge
dec
int
cltd
dec
push
cmp
loopne
dec
mov
das
stos
aam
sbb
iret
out
mov
pop
adc
js
add
push
loop
push
lods
adc
cmpsl
adc
mov
cmp
pop
pop
inc
mov
dec
rcll
mov
rorb
lods
mov
in
jns
std
stos
adc
rorl
repz
pop
imul
sti
shrb
jecxz
xchg
aad
add
xchg
cltd
mov
out
xchg
aam
aas
aam
and
push
pop
push
mov
dec
das
test
xchg
int3
outsb
cmp
and
mov
cld
push
xor
pop
aaa
lods
dec
movsb
aas
das
xor
sub
and
shll
cmp
rolb
push
xor
clc
xchg
mov
cltd
inc
xchg
mov
rclb
les
inc
sub
add
pop
xorb
pop
or
scas
outsl
push
add
popa
xchg
fs
xor
movsb
repz
sub
dec
outsl
sub
pop
jns
cmc
das
shll
xor
lahf
arpl
ljmp
lea
mov
mov
mov
sbb
add
xor
dec
fisubl
insb
insb
dec
insb
sub
sbb
cld
cmp
xabort
andl
add
testl
ds
cmp
fsub
pop
mov
mov
popa
xor
out
shr
push
and
outsl
fwait
aas
or
mov
popf
sbb
fistpll
js
jecxz
mov
pop
fcomip
enter
out
xchg
pop
jle
mov
jbe
push
mov
and
rcll
jnp
hlt
arpl
repz
subb
lret
stos
mov
and
cmp
les
negl
or
mov
aaa
es
mov
js
xlat
push
lods
cmp
stos
shl
inc
scas
movb
jno
or
dec
xorl
mov
pop
or
jp
imul
or
daa
inc
sbb
lods
xchg
insl
aad
repz
nop
mov
push
xor
push
lds
dec
dec
push
sub
movsb
out
jno
push
mov
jnp
mov
and
enter
add
mov
inc
mov
and
leave
lock
adcl
jecxz
stos
jno
mov
inc
adc
fstp
negb
addr16
sbb
out
add
fs
mov
sub
add
hlt
popa
mov
sarl
sti
xor
jge
ffree
push
push
sti
out
jbe
mov
or
adc
xchg
jo
lea
imul
push
mov
mov
cmpsl
fistpl
icebp
popa
fdivl
pop
mov
push
std
dec
jae
jnp
sub
aam
cld
push
ljmp
out
and
pushf
das
or
imul
add
fisttps
push
outsl
movsl
leave
pop
out
or
int3
scas
mov
mull
sbbb
cmpsl
mov
add
or
addb
fsubl
push
ret
xor
pusha
pushf
ljmp
dec
insl
push
lret
enter
push
ja
adc
xlat
and
fstl
adc
cmp
dec
fisubl
add
cmp
pop
lcall
cld
jecxz
out
xor
stc
xchg
jno
jmp
insl
push
test
push
mov
pusha
and
test
fwait
hlt
int
out
push
test
lahf
mov
repnz
pop
jle
mov
inc
stc
cltd
lods
jno
je
inc
sti
dec
js
dec
test
addl
xlat
test
jg
cmc
jno
outsb
mov
cmp
pusha
dec
int3
jecxz
ds
fldl
outsl
mov
daa
and
ds
inc
loope
sar
mov
fnstenv
mov
cmc
add
mov
mov
jbe
pop
out
inc
int3
test
loope
dec
cmpsl
fnstenv
xchg
mov
mov
out
mov
lea
xor
movsb
cmc
ret
leave
push
jmp
lds
test
sti
popa
cmpsb
ja
sahf
xor
mov
cs
pop
xor
rorl
push
aaa
adc
xor
mov
and
mov
push
dec
inc
fxtract
mov
xchg
mov
stos
cmp
pusha
and
inc
xchg
sahf
in
out
bound
lock
icebp
rcr
pop
push
jl
sbb
xorb
rcll
pop
pop
outsb
push
dec
mov
push
mov
jo
jp
dec
scas
lock
mov
mov
push
dec
jl
and
popa
mov
xor
fcomip
bound
imul
pop
and
roll
sub
aas
leave
es
mov
fisttps
jns
pop
pop
pop
jae
mov
ds
out
jle
movsb
frstor
mov
or
mov
sbb
in
push
in
cs
shll
mov
fistl
lret
cmp
jb
inc
cmpsl
outsb
inc
push
test
sbb
xor
into
in
cmp
mov
cmp
and
call
lds
mov
je
scas
subps
rorb
cmc
cmpsb
pushw
pop
jnp
dec
inc
xor
sti
sbb
sbb
mov
outsb
adc
and
ficompl
sbb
jb
clc
rcr
inc
mov
fs
int
mov
lock
syscall
test
dec
das
bound
fnop
adc
mov
mov
add
xchg
fiaddl
add
sbbl
or
lret
hlt
mov
jmp
jo
pop
jl
aaa
lret
xchg
xchg
dec
cli
sub
outsb
ja
add
stc
lret
add
dec
outsl
pop
jmp
inc
adc
jns
pop
loop
imul
jle
out
cltd
add
push
jo
das
iret
mov
sbb
testb
dec
jp
cmp
popl
or
stc
aaa
subb
mov
mov
pop
aaa
mov
clc
jecxz
sub
cmp
mov
mov
clc
js
pop
inc
sti
outsb
jbe
push
dec
dec
aaa
jns
mov
jno
in
push
pusha
cwtl
mov
lock
pop
les
add
rcrb
add
scas
mov
nop
mov
inc
mov
mov
addr16
flds
adc
outsl
test
xchg
fs
sub
lret
push
dec
mov
leave
stc
cmp
shll
inc
pop
pop
mov
jmp
inc
aam
mov
les
test
std
mov
mov
movsl
pop
scas
inc
or
mov
inc
adc
inc
push
scas
add
xchg
movsb
and
int
inc
mov
mov
lea
jnp
insl
sbb
sub
xlat
sub
or
xchg
repz
gs
fwait
mov
push
sbb
inc
vrsqrtss
push
rorl
cmc
out
lods
mov
or
shrd
adc
sub
gs
push
xchg
cli
or
cmp
das
test
pop
ss
jmp
lahf
pop
ret
xchg
jo
ret
and
in
pop
call
out
dec
lcall
push
xchg
stos
iret
sub
or
leave
push
adc
push
lds
pop
in
je
outsb
rorl
dec
movsb
shlb
dec
sbb
aas
stos
into
out
mov
in
xor
xor
cli
pushf
pushf
and
dec
fwait
lahf
mov
js
pop
dec
lret
dec
addl
shll
leave
pop
mov
outsb
data16
bound
test
arpl
in
mov
enter
fs
jae
xchg
adc
repz
shl
mov
mov
cmc
dec
push
mov
mov
push
xor
inc
cmpsb
in
push
sub
jbe
arpl
push
mov
push
test
cmp
decb
xchg
mov
mov
lods
jb
and
inc
push
iret
loop
push
or
out
inc
dec
cmp
mov
scas
mov
pushl
xchg
mov
mov
lahf
cmp
sub
repnz
scas
add
leave
and
mov
push
sbb
leave
rcrl
sub
into
nop
mov
scas
mov
or
sbb
rcrb
aas
pusha
mov
sbb
jb
ror
mov
pop
dec
adc
mov
rolb
es
mov
ljmpw
in
sbb
jno
test
ja
into
mov
das
and
arpl
sub
js
dec
dec
pop
mov
lret
js
adc
and
mov
std
mov
out
rorb
repz
jle
or
lahf
stos
push
mov
cli
rclb
mov
cmc
stos
call
sbb
mov
mov
push
mov
fidivrl
rol
subb
outsb
pop
push
add
ljmp
push
cmp
xchg
addl
outsl
js
cmp
pop
fistl
ds
sbb
pop
sbb
cmpsl
xor
fildll
inc
test
imul
ror
loop
faddp
pop
std
imul
add
fbld
jbe
mov
lahf
adc
adc
cwtl
sbb
ds
aad
loope
scas
or
pop
xchg
jmp
leave
mov
push
mov
insl
dec
icebp
es
test
inc
mov
mov
loope
jle
jbe
push
lods
xchg
and
xchg
mov
add
mov
testb
shll
dec
sub
lods
outsb
fs
dec
xchg
sub
ret
inc
loope
lods
stc
adc
enter
fs
insb
mov
mov
xchg
gs
in
ja
xor
mov
mulb
fistpl
adc
sub
subb
jg
dec
scas
jl
ja
inc
inc
add
mov
xlat
and
movsb
inc
call
jb
jmp
popa
jne
or
pop
mov
loope
inc
xlat
add
mov
std
test
push
jno
fdivs
cwtl
ret
inc
cwtl
jbe
lds
push
inc
clc
lret
xchg
loope
mov
movsb
or
mov
pusha
and
inc
sbbb
negl
xorb
je
mov
jb
js
ror
jno
xchg
mov
testb
mov
aas
cmp
mov
mov
xlat
mov
or
andl
sub
daa
stc
sti
test
cld
rorl
mov
push
fwait
cmp
fldz
mov
cmp
sub
cmp
jbe
pop
jle
daa
lret
sbb
mov
and
add
push
nopl
mov
and
scas
cmc
inc
sub
xchg
cld
cmp
aas
mov
xchg
cmpsl
fwait
cmp
pop
out
leave
dec
scas
adc
popa
pop
lret
mov
add
test
mov
mov
popa
fwait
rorb
ret
repz
cwtl
dec
mov
ds
push
rcrl
or
cmp
ds
lret
xor
movl
lds
hlt
inc
sbb
xor
push
cmp
mov
test
pop
xor
jno
sub
mov
xchg
add
push
add
xchg
or
jp
arpl
mov
lea
mov
or
cs
imul
pusha
jae
aas
push
jmp
lahf
outsl
pop
xchg
scas
mov
sbb
ficoml
or
xor
mov
mov
rcll
gs
ret
and
push
repnz
leave
iret
imulb
push
add
or
inc
mov
scas
sbb
push
les
add
sbb
adcb
or
fdivl
pop
in
pop
mov
fdivr
mov
je
inc
test
push
pop
in
xchg
mov
sub
adc
in
std
sub
out
jge
inc
adc
adc
cwtl
push
adc
aad
fidivl
imul
lock
pop
jg
not
mov
add
aas
arpl
adc
in
jp
xchg
shrl
jl
mov
jl
adc
xchg
aam
es
arpl
pop
loop
mov
call
add
and
cmp
add
in
xchg
or
into
push
push
push
sti
jno
rclb
inc
sub
pop
scas
ror
out
scas
xchg
arpl
leave
pop
jns
pop
mov
inc
jge
push
leave
xor
mov
inc
dec
ds
stc
repnz
inc
pop
xlat
jno
sub
inc
in
and
or
daa
mov
fs
jbe
adc
adc
repz
and
mov
int
ret
sub
sahf
fbld
shrl
sbb
and
xchg
or
mov
addr16
push
sub
pop
adc
shrl
cmpsl
dec
arpl
sub
mov
xor
dec
mov
dec
packuswb
jbe
mov
inc
std
jno
loopne
scas
mov
popf
push
in
inc
fs
lds
lea
gs
cmp
adc
and
fnsetpm(287
insb
xlat
idivb
scas
dec
cmp
test
adc
inc
jl
stos
js
push
push
mov
mov
pop
jecxz
loopne
bnd
fucomip
lds
cmp
cwtl
push
xlat
dec
in
icebp
stos
in
ja
push
add
in
sbb
test
ds
or
aam
mov
or
pop
shrb
ret
out
dec
rcll
add
popa
pop
add
jge
mov
cmp
cmp
xchg
scas
mov
icebp
addr16
popf
adc
js
pop
mov
ret
dec
push
das
mov
sub
popa
lcall
pop
movl
mov
orb
popa
iret
xchg
outsb
add
in
and
mov
shll
mov
fidivrs
test
outsl
out
or
mov
dec
sub
mul
clc
lods
sbb
lock
in
das
rclb
jmp
pop
gs
cmc
das
inc
gs
adc
sarb
xor
mov
test
mov
insl
mov
mov
hlt
cli
jb
roll
push
ret
sarl
mov
out
and
das
cs
cmpsb
dec
jle
pop
pop
push
aad
mov
popa
and
mov
sbb
pop
mov
inc
xchg
fistps
dec
inc
loop
lods
shlb
pop
push
mov
lods
es
ljmp
inc
jns
jno
adc
ret
dec
fistpll
jge
push
jl
sbb
xchg
inc
aas
pop
pusha
ficompl
push
imul
scas
lcall
ja
add
pop
arpl
sbb
test
or
sub
sti
dec
xchg
sub
mov
xor
pop
sub
and
idivb
fwait
mov
in
xor
and
mov
shrl
cmp
or
out
sbb
lcall
inc
xorb
out
aas
push
mov
sbb
stos
dec
inc
sbb
stos
jns
push
idivb
test
fcompl
push
scas
mov
aad
outsb
iret
ljmp
or
lea
roll
mov
jg
popf
xchg
scas
loop
push
int
mov
js
add
mov
sahf
loop
fsubs
sbb
enter
mov
mov
pop
stc
popa
mov
out
daa
pop
pop
adc
or
jle
ror
mov
jecxz
out
cmc
sbbb
shlb
loopw
mov
shl
rclb
push
inc
jbe
pop
dec
add
sahf
cltd
sub
mov
cwtl
cmp
xchg
push
mov
dec
scas
and
leave
and
test
js
sar
mov
fsubs
push
adc
nop
cwtl
aaa
mov
out
bound
or
sub
lahf
mov
cld
out
mov
andb
es
xchg
sbb
xchg
push
mov
hlt
dec
out
inc
aam
out
mov
jge
push
ret
pusha
cwtl
xor
lcall
gs
jo
or
sub
movsb
fwait
lahf
xchg
lea
out
push
es
lea
popf
jp
fisubrl
in
add
in
adc
jbe
jns
sbb
arpl
negl
std
adc
cmp
iret
push
test
sti
fiadds
jo
pop
push
incl
push
push
fbstp
pop
or
cmp
out
or
push
xchg
push
sub
xchg
xchg
push
and
sbb
outsb
push
push
inc
dec
cmp
loop
cmp
fdivl
data16
je
pop
jb
sub
push
shll
notl
in
and
xchg
xchg
cmpsb
decl
stc
or
xchg
inc
outsl
insb
out
and
cmpsl
rcrl
call
daa
mov
cmp
movsl
les
xor
add
xor
hlt
call
pop
mov
cli
in
dec
lods
sub
pop
pusha
hlt
shrb
and
sarb
cwtl
and
inc
or
enter
iret
xor
jne
ret
dec
lock
pop
jo
sbb
and
push
sbb
xor
dec
pop
in
push
adc
push
push
push
jb
outsl
cmpsl
dec
mov
push
movsb
cltd
mov
movsb
jae
cwtl
mov
jmp
jb
insl
lea
cs
out
js
cmp
pop
aaa
jge
mov
mov
std
mov
loop
cs
sbb
lcall
and
loopne
pop
jne
cld
hlt
push
sbb
mov
es
cwtl
inc
in
mov
inc
jbe
mov
adc
iret
cwtl
xor
loope
test
sbb
js
test
das
dec
xor
xchg
pop
shrb
jmp
pop
shrb
aad
js
cwtl
in
push
xlat
ljmp
add
mov
mov
lret
sub
sbb
mov
int3
sbb
out
cs
int
xchg
ds
lret
or
fs
and
pop
call
pushf
je
test
ss
fidivs
sub
add
frstor
jecxz
xor
psubq
dec
out
or
fidivrl
cmpsb
scas
push
sbb
push
leave
jne
repnz
add
jno
cmp
out
and
cmp
divl
sub
sub
sbb
in
test
mov
inc
arpl
or
mov
jo
xchg
jns
inc
rcrl
insb
les
and
inc
shl
inc
cli
mov
ds
push
ja
mov
xor
stc
mov
pop
ret
push
sub
aas
jl
subl
in
sbb
mov
test
outsb
inc
out
rcll
mov
test
and
xchg
inc
jp
ror
outsl
xchg
je
lea
push
sbb
pop
and
adc
mov
push
pop
ja,pt
lcall
fwait
push
cltd
jbe
shll
imul
in
sbb
lds
jecxz
lcall
inc
call
out
mov
push
pop
push
rcrl
xchg
ss
stos
sahf
mov
ret
jno
lret
add
stc
fsub
push
add
cmpsl
pushf
xchg
clc
and
sbb
adc
jnp
sti
cmpsb
and
dec
test
or
stc
pop
add
push
jecxz
lcall
mov
aaa
jl
jle
sub
jb
mov
aam
mov
mov
stos
cmp
scas
popa
repz
repz
pop
int
cs
push
inc
xor
mov
sbb
hlt
imull
js
xchg
mov
aam
inc
movsb
call
mov
ret
mov
lahf
or
fdivp
hlt
stos
push
jnp
jae
add
or
xchg
lods
pop
lret
sahf
sar
mov
mov
push
or
mov
pop
mov
mov
jp
ljmp
adc
lret
cld
jle
test
lods
xchg
test
test
mov
cli
mov
into
mov
imul
cmpsl
enter
inc
xchg
mov
add
sub
xor
incb
xor
sbb
ljmp
int
mov
fwait
xor
fmuls
jle
inc
insl
fldl
fwait
jp
imul
pop
xchg
xchg
daa
test
xor
test
inc
dec
pop
xchg
xlat
adc
idivb
mov
sub
pop
lods
adc
cwtl
push
data16
mov
adc
scas
les
rep
cli
mov
pop
movsb
inc
leave
mov
mov
sub
cltd
sahf
insb
add
pop
aaa
hlt
test
dec
test
cld
fiadds
jo
push
ja
sti
in
mov
pop
or
or
jle
push
sub
mov
es
mov
jecxz
jle
mov
stos
stos
xchg
fisubrs
mov
add
ret
xchg
push
subb
push
or
push
cmp
xchg
inc
out
mov
and
push
cmc
cwtl
rol
adc
stos
stos
mov
out
pop
push
mov
imul
sub
and
sbb
mov
push
ret
sub
into
jnp
fs
and
ljmp
dec
xor
daa
inc
and
pop
imul
pop
xor
out
mov
and
mov
or
dec
std
in
pushf
inc
jmp
in
pop
clc
and
cmpsb
xchg
mov
adc
not
push
stos
lret
ds
aaa
paddw
push
sahf
shrl
xchg
sub
sub
inc
cmc
sbb
fs
data16
dec
and
out
dec
test
lea
ja
adc
adc
jle
adc
dec
js
pop
in
test
pop
ja
daa
into
jae
pop
mov
adc
popa
add
and
lock
test
loope
jl
push
insb
pop
sub
orl
cmp
out
mov
xor
out
cmp
xchg
test
sub
sbb
xchg
test
cmp
cmp
pop
mov
sub
xchg
clc
mov
cld
test
and
xchg
fisttpl
repnz
fsqrt
test
dec
dec
pop
cld
sbb
imul
test
lods
mov
mov
add
ret
and
rcr
fcmovnbe
repz
add
jge
jmp
rcrb
lds
pusha
pop
dec
push
mov
xchg
hlt
out
pop
or
icebp
or
and
lahf
pop
out
and
out
mov
nop
pop
inc
xor
in
pop
push
and
add
lret
add
test
mov
inc
pop
fdivs
and
in
dec
nop
jbe
sub
push
push
pop
lods
cmc
sar
cmp
xor
dec
int3
rcl
arpl
imul
pop
adc
add
cmpsl
dec
mov
sub
sbb
xchg
push
cli
xor
and
leave
mov
add
and
aad
cmp
test
pop
add
inc
ffreep
sbb
je
insl
inc
sahf
aaa
xor
xchg
jle
out
mov
pop
ss
lods
or
ror
xorl
stos
or
aad
xchg
ljmp
outsb
rcrl
movsb
pop
addl
pusha
sub
iret
inc
mov
imul
in
pop
push
outsl
mov
psubq
mov
sbb
dec
insl
pop
das
and
fldcw
scas
pop
cltd
cmpsl
sbb
call
xor
adc
adc
cmpsl
lret
test
jo
pop
jmp
popf
jge
loope
xchg
repz
pop
fisubs
or
mov
inc
wrmsr
mov
ffreep
lock
mov
aaa
repz
sti
push
fsts
hlt
rcll
adc
mov
repz
js
inc
jae
rep
loope
push
dec
adc
and
push
pop
cltd
mov
ja
xor
sbb
xor
dec
das
jmp
or
jmp
xorb
loope
mov
stc
movsb
sbb
push
in
push
daa
out
icebp
cmp
loop
in
movsb
inc
jb
pusha
ds
bound
cwtl
movsl
sub
and
xchg
xchg
lea
mov
das
mov
dec
xchg
push
or
and
inc
lds
pop
mov
dec
jno
jns
cli
push
adc
ljmp
pop
mov
sbb
out
cmp
sub
mov
aad
or
loopne
mov
rclb
aas
sbb
hlt
in
shlb
jb
das
pushl
jecxz
cmpsl
xchg
adc
fmul
jno
cltd
mov
mov
mov
test
lea
inc
pop
cmpsb
enter
push
jbe
xor
sti
lock
jb
clc
scas
dec
push
jno
jecxz
dec
inc
sub
jns
sbb
or
adc
and
xchg
mov
cltd
mov
mov
sti
xchg
push
sti
aam
jle
pop
inc
je
sub
mov
jmp
add
xchg
pop
inc
pop
lods
or
jae
imul
sbb
lret
push
sbb
xchg
int3
pop
sbb
mov
and
shrb
xchg
and
mov
aaa
jge
xchg
inc
in
movl
nop
lods
scas
adc
or
rorl
push
adc
cmp
dec
imul
cli
mov
test
adc
sub
fcoml
xorl
or
dec
inc
cmpsb
and
clc
xor
hlt
xchg
mov
in
xchg
xchg
ret
inc
repz
inc
or
imul
mov
mov
hlt
jg
cmp
mov
mov
mov
jae
stos
xchg
mov
popf
repz
sbbl
cmp
frstor
insb
xchg
jno
mov
push
cld
pop
call
jecxz
outsl
lahf
push
div
xchg
into
je
mov
in
repnz
add
fldz
orb
pop
js
mov
shrl
ljmp
pop
mov
push
loop
popf
jne
push
ret
jnp
push
cmpsb
gs
push
push
repz
dec
stc
gs
mov
and
sub
pop
loop
mov
rclb
push
xchg
leave
or
dec
push
push
movsb
cli
call
sbb
push
rcll
outsl
sbb
ficompl
shrl
and
xchg
sahf
ret
cmp
into
movb
pop
sti
outsl
push
mov
ret
mov
loop
fimuls
fs
leave
xor
lods
mov
and
lahf
out
mov
aad
inc
mov
into
push
pop
and
inc
sub
iret
mov
ds
push
xchg
mov
cltd
lcall
js
and
inc
inc
jnp
pop
cmpsl
mov
dec
int3
in
call
and
push
add
stc
fisubrl
dec
enter
cmp
lock
cmp
mov
xor
or
jmp
sar
repz
in
leave
mov
hlt
lret
cmp
loopne
xchg
in
jmp
lret
addb
into
mov
xchg
add
mov
pushf
xchg
push
test
imul
xor
xchg
movsl
inc
out
scas
lahf
lahf
mov
pop
push
sbb
pop
xchg
lock
cmp
stos
push
lock
mov
pop
xor
pop
movsb
pop
inc
inc
mov
sbb
cmp
repnz
imul
jns
and
and
aam
sahf
fpatan
popf
pop
fwait
out
clc
in
adc
popa
inc
jb
mov
push
pop
or
int
je
dec
dec
jb
lods
mov
movsb
aad
or
push
add
push
mov
stos
js
call
cld
mov
cmc
scas
xchg
or
stos
aaa
scas
je
pop
xor
fucom
dec
mov
loop
dec
mov
fildl
dec
mov
leave
loopne
pop
or
dec
lds
sub
add
orb
ret
push
ds
sbb
cld
jp
lea
mov
xchg
inc
pusha
sbb
push
push
stc
and
cltd
inc
and
inc
xlat
mov
lahf
pop
cs
or
scas
mov
cmp
push
popf
fnstsw
movsl
pop
dec
dec
aam
lcall
lods
xchg
ret
mov
pop
addr16
mov
or
mov
cmp
js
mov
pop
stos
push
xor
ljmp
pop
stc
int
xchg
out
pop
arpl
imul
cmpsl
ljmp
in
pop
xor
or
and
jne
cmp
ss
popf
pushf
lret
mov
fcompl
push
rcl
lret
sbb
xor
mov
fsubrs
and
adc
cmpsb
scas
enter
pop
cltd
movsb
xchg
in
inc
bound
xchg
loopne
jb
push
or
out
sub
shrl
pop
adc
sbb
mov
jns
pop
test
pop
dec
ret
push
aam
iret
fstp
std
add
push
fimuls
and
loopne
jg
or
divb
jecxz
or
jb
icebp
sbb
cwtl
in
les
and
cltd
mov
std
cmp
pop
mov
jmp
test
js
sub
sub
add
movsb
sub
hlt
jns
cmp
pop
cmp
test
push
cltd
out
push
mov
lret
push
push
insl
xor
inc
and
rolb
ljmp
mov
aad
ficompl
daa
mov
push
loopne
pop
add
mov
in
adcl
lds
xor
inc
dec
fsubrl
sbb
loope
ficoml
mov
jecxz
jge
mov
imul
mov
imul
adc
pop
inc
xor
imul
mov
mov
mov
adc
push
pop
push
loopne
inc
ret
xor
shr
cmpsl
xor
fistps
xor
and
xchg
fwait
gs
add
stos
es
cmp
or
leave
mov
das
cmp
jg
and
adc
or
pop
ljmp
dec
adc
sub
sub
xchg
push
push
nop
cmp
mov
inc
cmp
bound
jno
imul
enter
fisttps
popf
xchg
push
fiadds
subl
imul
mov
lods
dec
ds
rcl
sub
or
or
dec
fistpl
mov
fimull
fistps
movb
xchg
sbb
cmp
movsb
mov
mov
add
and
test
test
cmp
js
out
mov
cmp
mov
jle
jp
ljmp
idivl
sub
ss
cmp
inc
mov
fcoml
mov
jmp
jecxz
out
xorl
lret
inc
mov
aaa
and
lcall
xchg
xor
cmpsb
cmp
push
fs
aad
repz
lods
call
les
inc
push
in
inc
inc
test
repnz
or
add
pop
inc
push
sbb
jl
push
xchg
dec
lahf
fdivl
push
mov
fistl
fs
gs
int
nop
cld
lret
and
cmpsb
adc
and
rcr
cld
lret
inc
mov
fwait
aam
or
push
ja
xor
xchg
movsl
shrd
jmp
inc
or
cmc
pop
dec
ror
mov
add
push
pop
adc
xor
dec
xor
xlat
mov
aas
aad
rcr
add
ret
or
aam
xor
popa
mov
stos
and
lods
adc
repz
lea
jno
gs
push
add
shrb
add
std
mov
jle
and
nop
int
jns
xchg
pop
add
cli
and
add
or
ja
lock
outsb
icebp
jg
mov
icebp
push
xor
lods
das
pop
lret
inc
sbb
in
aad
out
jbe
rcll
jl
and
test
dec
jmp
pushf
sub
mov
xor
mov
adc
adc
dec
cmp
cmp
add
xchg
loopne
or
cld
mov
push
aam
mov
stos
in
ret
adc
sub
popa
cli
stos
aad
stos
inc
lret
or
aad
add
cmpl
sbb
push
enter
out
ds
cmp
xor
insl
and
cmp
and
push
push
xor
icebp
and
lea
mov
loop
mov
xor
addr16
mov
and
lds
or
cmp
sbb
dec
sbb
cmpsb
add
sarl
xchg
lock
fidivl
lods
pop
int3
lcall
cmp
push
je
add
push
xor
fwait
add
fisttps
xchg
sub
or
sbb
scas
leave
mov
xor
imul
xlat
or
add
xchg
outsl
test
rol
jo
aas
push
xchg
sub
xor
loop
outsb
fwait
push
dec
pop
mov
xor
pop
jne
or
mov
xor
or
mov
xor
scas
cmp
pushf
sbb
jecxz
mov
cmp
es
mov
jl
sti
dec
xlat
mov
divl
shrb
adc
bound
fbstp
int
cmp
hlt
movsl
outsb
push
test
pusha
push
ja
movsl
xor
gs
push
cld
mov
out
mov
jg
cmp
and
cmp
push
daa
scas
lods
test
sbb
in
rcrb
loop
xor
and
inc
imul
xchg
push
lret
cmovno
ss
das
fxch
mov
mov
dec
xor
in
mov
pushf
xchg
insl
enter
out
xchg
cmp
or
sbb
jg
dec
leave
cmp
jge
add
lods
nopl
fdivr
push
clc
orb
movsl
fs
and
xchg
mov
shll
fst
pushf
icebp
ss
sti
dec
cwtl
cs
into
cli
mov
mov
dec
dec
test
lcall
cli
pop
scas
rol
mov
lahf
adc
cs
push
loopne
xchg
rorb
sub
xchg
xchg
adcb
pop
inc
fdivrl
cmc
push
and
dec
xor
cmpsl
mov
mov
or
push
adc
sbb
nop
mov
jp
inc
inc
xchg
je
movsb
adc
sbb
or
cmp
mov
fsubrs
mov
pushf
and
add
or
jmp
daa
cmpxchg
das
jecxz
repz
jl
scas
cmpsb
jo
stc
aas
cltd
jg
jns
fwait
pusha
dec
scas
inc
push
movsb
pop
pop
stos
sahf
mov
mov
daa
dec
push
sbb
adc
arpl
sbb
jecxz
push
xlat
adc
xchg
imul
mov
sub
int3
rcrb
add
ret
es
iret
inc
dec
lahf
lahf
push
push
hlt
adc
sub
std
rep
sub
inc
sub
adc
inc
in
push
arpl
push
repnz
in
gs
sub
add
sub
mov
jno
xchg
pop
fisttpll
outsl
dec
cmp
cmpsl
rcl
cmp
test
insl
imul
into
push
mov
inc
and
arpl
scas
or
fcomi
mov
adc
ljmp
testl
jno
imul
add
and
cmp
mov
jge
out
aaa
insl
cwtl
xor
xor
dec
cmp
popf
push
sbb
mov
pop
arpl
dec
das
in
andb
rolb
mov
mov
stos
das
pop
mov
sub
int3
add
jmp
pop
aaa
imul
pop
bound
add
dec
inc
cmpsb
add
sti
pop
jno
push
loopne
cmc
push
lock
ret
push
sti
adcl
mul
mov
aas
shll
mov
stc
dec
jl
xor
arpl
push
test
out
insl
sbb
inc
and
mov
addr16
mov
cmc
cmp
ficoml
daa
cld
loope
scas
imul
inc
mov
mov
adc
lods
xor
and
stc
or
mov
hlt
mov
sbb
sbb
leave
outsl
loopne
sbb
arpl
add
sbb
and
mov
cmpsl
insb
push
stc
sub
sbb
mov
push
sub
sub
mov
mov
in
dec
sbb
cmp
mov
ret
lret
test
leave
sti
mov
incb
scas
mov
dec
je
add
or
push
aad
fiadds
lock
sahf
jo
mov
mov
jmp
push
addr16
or
popa
and
mov
push
sbb
cmpl
addl
or
fcmovne
jle
pop
test
lahf
xor
xor
xchg
sahf
sbb
mov
cli
sbb
sbb
imul
push
push
pop
mul
out
xlat
mov
addr16
cmp
push
sub
push
xchg
int
inc
mov
sahf
cmp
pop
adc
mov
jbe
jp
ss
dec
jno
xchg
sub
cli
push
push
cmc
inc
out
jmp
or
lahf
xchg
xor
iret
daa
adc
pop
pop
rol
sub
jbe
add
xchg
adcl
push
in
xor
aaa
sub
dec
cmp
cmp
andb
out
push
sub
add
push
lret
stos
and
popf
push
cmp
xor
pop
mov
call
mov
in
hlt
repnz
mov
das
aam
loopne
mov
ss
je
clc
pop
cltd
sahf
rcr
add
jmp
mov
lahf
pop
jae
je
mov
cltd
test
push
sbb
mov
jle
xor
js
sbb
test
bound
inc
inc
sbb
popf
cld
sarb
scas
in
fwait
loop
xor
pop
out
pop
es
adc
xchg
push
rcl
sub
xor
add
mov
imul
in
xchg
cs
dec
cmp
push
xchg
lock
fstl
xlat
sbb
aad
mov
je
repz
cwtl
data16
bnd
jns
in
pushf
push
cs
je
fldenv
xchg
rcr
cmc
jae
add
stc
push
mov
je
push
jnp
jne
and
and
bnd
shll
fcomip
fnstsw
sub
mov
jmp
loope
fisttpll
adc
ja
pushf
mov
dec
in
orl
push
pop
dec
rorb
push
fildll
pushf
pop
adc
adc
repz
lock
mov
jb
in
push
lret
mov
call
inc
lods
push
cmp
dec
mov
sbb
in
fisubs
roll
popf
xchg
scas
lea
sub
and
xor
push
push
mov
jns
imul
mov
cmpsl
scas
test
dec
ret
and
mov
dec
enter
enter
cmp
arpl
xchg
add
rcl
push
mov
sub
aad
sbb
addl
pop
mov
call
es
dec
push
dec
add
sub
stos
pop
arpl
cli
sbb
cwtl
inc
pop
sub
pop
aaa
push
cwtl
cmpsb
fistps
jmp
jl
jne
jno
and
adc
mov
cmpsl
or
cli
notb
and
stos
inc
pop
and
or
sti
and
dec
mull
dec
adc
loop
or
jo
inc
mov
outsb
daa
mov
repz
scas
ss
jmp
jmp
js
loopne
je
push
cmp
pusha
xor
mov
maxps
cmpsb
outsb
inc
fdivs
out
add
sbb
xchg
and
pop
loopne
in
xor
jb
xor
pop
ja
and
pusha
xchg
cmp
iret
rcl
int
fwait
push
addr16
push
pop
rcll
dec
jne
bound
das
into
jae
pop
sub
test
and
je
sub
sbb
ja
xchg
mov
repnz
jnp
jl
pop
push
test
aad
out
dec
aaa
ss
mov
pop
imul
pop
sub
mov
int
addr16
add
shlb
push
inc
cwtl
inc
jo
mov
push
stos
mov
ficomps
pop
jno
add
and
fnstsw
lret
data16
adc
filds
adc
inc
push
xor
jle,pt
nop
imul
push
fisubrs
fidivl
rolb
loope
jno
scas
mov
dec
xchg
jge
insl
mov
rorb
pop
mov
jle
jae
in
movsl
std
popf
dec
dec
mov
dec
imul
jnp
js
xchg
xchg
dec
in
adc
lret
cmp
insb
int3
xchg
sub
dec
ja
inc
mov
cmc
push
into
lea
ficomps
sbb
lret
loop
mov
adc
jns
pop
mov
ds
pop
stos
cmpsb
push
iret
sahf
dec
je
xchg
setnp
push
pop
int
mov
aam
xlat
xor
cmp
push
and
sub
movsb
push
or
mov
aam
icebp
js
out
icebp
mov
icebp
shll
add
sub
jmp
or
rorb
push
andl
stos
inc
popa
lds
jbe
inc
fcompl
sub
mov
and
sbb
inc
add
outsl
push
cs
aad
bound
or
das
gs
cmp
and
jno
cmp
outsb
js
enter
add
xchg
aam
in
and
mov
es
cmc
mov
lods
push
jnp
xchg
lahf
or
test
sub
and
cwtl
inc
outsl
push
fnstsw
mov
cmc
mov
push
lods
inc
push
and
sbb
inc
clc
pushf
stc
jl
cmp
mov
lea
mov
mov
psraw
fdivrl
out
les
stos
jmp
clc
jmp
jo
pushf
inc
or
dec
pop
outsl
cld
gs
fwait
dec
pop
in
add
pop
mov
adc
adc
mov
test
sbb
in
inc
xchg
mov
pushf
test
mov
idivb
or
dec
or
add
adc
test
dec
adc
cmp
dec
fcomps
jns
mov
mov
or
push
pop
sub
xchg
jno
pusha
jns
sbb
mov
clc
pop
adc
lcall
sbb
in
pusha
jnp
loope
jle
pop
and
das
mov
fistps
ret
pusha
mov
mov
jmp
xchg
jmp
ss
sahf
bound
dec
loopne
imul
xchg
data16
inc
test
push
and
adc
mov
mov
hlt
dec
out
enter
push
cmp
inc
mov
fisubl
sti
mov
dec
mov
in
out
rol
push
add
aaa
imul
shr
pop
lds
cmpsb
mov
sbb
mov
addr16
add
mov
mov
inc
scas
add
mov
jg
ja
xchg
iret
repnz
push
adc
dec
scas
clc
add
inc
xor
adc
adc
inc
inc
inc
test
clc
pop
in
cli
test
mov
jmp
mov
cs
xchg
mov
sub
fs
stc
ljmp
adcl
pop
xchg
push
popf
fcomip
dec
fadds
je
ja
inc
leave
cltd
lret
lods
cwtl
push
mov
mov
test
call
xor
inc
pusha
cli
fistl
xor
mov
insb
clc
jl
adc
pop
cmp
or
xchg
pop
xchg
xor
dec
sub
inc
pop
stos
cmpb
xor
in
les
lret
add
cmpsb
jb
xchg
in
dec
xchg
pushf
imull
or
test
std
fistpll
clc
mov
jo
into
fcmovnb
cmp
test
xchg
test
adc
sub
sub
mov
lret
pop
mov
cld
jmp
inc
pusha
les
pushf
rcl
xchg
out
jg
popf
sbb
xor
bound
mov
dec
popa
jnp
xchg
jmp
movsl
fstpt
dec
in
push
xchg
repnz
jnp
lret
jns
xor
cmpsl
shrl
dec
ss
addb
add
icebp
push
js
jno
fcomps
mov
lds
ficoml
pusha
mov
jb
fdivrs
cmp
in
xchg
int3
jle
inc
faddp
shlb
add
mov
test
subl
outsb
lea
jge
into
push
sub
popa
lods
and
push
pop
hlt
sbb
fisubs
iret
test
jge
loop
sbb
pop
dec
add
in
push
jno
pop
out
shrl
inc
push
jb
in
add
push
cld
loop
aam
lds
xor
out
push
repnz
in
push
sbb
xor
inc
stc
add
jmp
mov
sbb
cmpsb
scas
mov
pop
fsub
jmp
sub
xchg
dec
mov
rcrb
jb
push
or
xor
arpl
shlb
and
sarb
repnz
pop
scas
scas
lock
jae,pn
add
push
xchg
jecxz
add
xchg
mov
pop
cmc
mov
shll
mov
push
add
data16
pop
pop
xchg
or
sub
jge
les
xor
int
repz
push
popa
and
cwtl
dec
cli
xor
and
lods
mov
cltd
shll
rcll
nop
dec
cld
or
ret
pushf
xchg
jecxz,pt
je
push
or
mov
lret
push
jmp
shll
push
data16
sub
ss
std
mov
or
test
rdmsr
lss
outsb
shll
and
ret
nop
pop
mov
out
stos
data16
adc
fisttps
arpl
bound
aam
in
add
stos
fdivrl
test
dec
jecxz
mov
push
ds
fwait
xchg
aad
and
cs
xor
je
mov
sub
loop
adc
and
push
pop
movsb
cmpsb
mov
imul
push
dec
jg
stos
or
loope
mov
pop
test
in
inc
xor
dec
xchg
int
push
aas
xor
adc
cmp
xor
xchg
fmuls
ret
addl
push
mov
cld
xor
adc
mov
test
add
in
and
andl
and
clc
xor
add
ror
sahf
mov
nop
bound
adc
jl
inc
les
ffree
xor
add
popf
rcrb
mov
pop
lahf
or
test
jmp
lods
out
imul
mov
ds
push
jmp
or
jmp
pushf
sbb
jge
dec
stos
ret
mov
xchg
or
cs
dec
lret
das
test
cmp
mul
addl
or
push
adc
daa
mov
adc
movsb
aas
filds
mov
in
imul
hlt
aam
and
cmpl
xchg
stos
push
lcall
negl
pushf
mov
pop
idiv
and
add
inc
out
cmp
aad
call
stc
push
pop
scas
clc
pop
xchg
mov
jnp
lret
es
int
adc
dec
cwtl
push
loope
dec
jns
dec
movsb
add
pop
push
adc
fisubrs
dec
mov
imul
pop
outsl
jecxz
fldl
ja
sub
pop
enter
mov
sti
insl
sbb
fsubrl
lock
je
jecxz
aas
sbb
and
mov
sbb
in
sub
lock
lret
or
or
add
mov
stc
xchg
ret
test
and
pop
out
mov
mov
lea
jg
dec
fisttps
adc
pop
sbb
adc
stos
mov
out
push
sub
and
push
dec
jle
movsl
and
sbb
clc
inc
je
jno
jae
push
scas
ljmp
rcl
pop
jle
in
fidivrl
std
jge
sarl
sbb
in
pop
mov
icebp
fnstenv
jb
cmpsb
pop
out
mov
mov
insl
cmp
pop
shll
cwtl
add
je
mov
add
scas
mov
scas
mov
cmp
into
shll
sbb
cmp
jne
pusha
mov
add
lods
push
dec
mov
lods
pop
push
mov
lret
mov
cmp
incl
push
ljmp
outsl
test
pop
cltd
xor
test
jmp
mov
mov
cmp
sbb
aam
lea
inc
sbb
xchg
incl
mov
mov
scas
inc
or
push
dec
imul
mov
or
lds
mov
lods
fistl
ret
rcrl
je
pop
pop
addr16
push
movsb
fistl
testb
aad
mov
inc
add
outsl
and
gs
out
xchg
repnz
insb
dec
push
mov
push
lahf
ljmp
test
cmp
ss
push
cmp
inc
imul
mov
sarb
cmp
leave
cmc
fstps
push
mov
inc
add
outsl
iret
fstps
roll
inc
cmp
std
dec
imul
mov
in
xchg
popf
add
mov
sub
jb
int
jns
lods
fsubl
pop
iret
lcall
loope
mov
int3
stos
dec
movsb
scas
fistps
dec
andl
cmc
pop
or
pop
int3
mov
sti
arpl
mov
bound
and
jo
cli
das
addr16
xor
out
add
xchg
test
push
mov
inc
popl
push
mov
cmp
inc
pusha
mov
stos
cmp
loopne
repz
or
jp
in
dec
cltd
lret
mov
mov
sub
pop
addps
outsl
lods
test
in
xchg
aam
test
cmp
bnd
adc
aad
subl
add
fsubrl
insl
lret
out
popf
or
fnstsw
ficoms
mov
cmp
out
xchg
rcrl
mov
xchg
sub
inc
in
lock
fcoms
pop
enter
hlt
xchg
pusha
frstor
adc
mov
ret
daa
mov
xchg
cld
push
add
mov
imul
stos
sbb
cmc
sbb
sbb
mov
push
cmp
xor
pop
dec
jo
adc
scas
repnz
test
call
leave
enter
ficomps
fcompl
stc
cmp
and
or
jle
add
jnp
das
jmp
daa
and
xchg
pop
mov
mov
outsl
loope
dec
loopne,pn
call
insl
pop
pop
movsl
add
inc
xor
dec
dec
adc
mov
sbb
out
test
rclb
outsb
lock
add
les
jmp
and
dec
scas
xchg
sub
fwait
or
adc
jmp
fiaddl
imul
shr
cwtl
inc
xchg
dec
xor
adc
arpl
adc
dec
inc
push
into
inc
xchg
aaa
push
add
adc
leave
jne
push
ss
cli
jp
cmpsl
outsl
sbb
aad
pop
sub
shll
clc
or
dec
stc
inc
ljmp
pop
hlt
or
mov
and
xorl
push
cmpsl
shll
lcall
test
bound
pop
iret
pop
jecxz
lahf
movsl
xor
mov
mov
je
cmp
int3
adc
insl
mov
shlb
xchg
dec
mov
sbb
gs
enter
mov
shlb
sbb
mov
xor
int
push
movsb
pop
out
jl
or
daa
add
imul
mov
daa
jae
test
pop
in
add
lcall
fstl
pop
je
adc
and
xchg
and
mov
sbb
data16
mov
cld
jecxz
mov
imul
lds
or
insl
enter
mov
mov
cli
adc
stc
inc
nop
push
lea
jno
cmpsb
popf
inc
orl
inc
gs
mov
stos
cld
stos
js
int3
mov
rorl
mov
lahf
pusha
fsubrp
dec
addr16
repz
gs
push
mov
xor
aaa
push
gs
mov
std
xchg
sub
or
xor
jns
cmpsb
cmp
mov
das
repz
shll
clc
dec
sub
inc
dec
sub
push
dec
jg
data16
sub
push
ss
rorl
jg
mov
pop
mov
imul
or
loop
xchg
fbstp
mov
sbb
jle
adc
jmp
loop
cltd
je
mov
movsb
cmp
jge
xchg
cmp
sub
aaa
insl
adc
xchg
popf
stc
or
ljmp
cltd
adc
push
out
pop
mov
arpl
mov
lahf
jb
roll
bound
cli
or
cmp
aas
shrb
push
xor
pop
ds
and
stos
xchg
call
jnp
incb
cmp
lret
push
int
and
loope
lahf
dec
enter
xchg
mov
cltd
mov
add
xchg
add
pusha
fcomps
jnp
sbb
jmp
stc
xchg
cmp
cmp
mov
and
xor
shr
ljmp
sub
xchg
xchg
mov
jo
mov
dec
add
pop
mov
mov
outsb
xor
xor
adc
sub
mov
rorl
mov
push
mov
pop
push
ss
leave
pop
pop
mov
adc
pop
xchg
xor
fs
scas
testl
nop
call
xor
mov
je
and
int3
mov
and
in
dec
cli
mov
shl
xor
cmp
or
stos
out
and
jbe
aam
adc
jae
jbe
xor
in
mov
stos
sbb
fucomp
pusha
adc
push
cmpsb
fmull
xor
sahf
mov
push
or
int3
xor
xchg
fisttps
sub
int
pusha
add
push
pushf
dec
adc
cmp
cmpsl
movsb
outsb
mov
shlb
call
sub
sbb
daa
sbb
mov
and
fsubr
rorb
or
or
sub
fsubrs
dec
xchg
xchg
and
scas
in
notb
adc
rcrl
pop
mov
stc
movsl
and
dec
out
inc
jp
sbb
push
dec
sbb
aaa
inc
dec
mov
in
out
xchg
add
mov
mov
ret
inc
mov
xchg
and
loopne
in
icebp
inc
mov
jno
pop
add
mov
leave
sbb
hlt
stos
adc
cmp
xchg
lret
or
inc
lds
push
insb
jp
adc
icebp
cmc
push
push
in
jecxz
sub
add
das
lock
xor
jb
inc
xchg
loope
fsubrl
int
adc
jge
pop
les
jnp
insb
inc
fs
xchg
jae
pop
push
fsubr
mov
cmp
add
push
out
mov
sub
shrl
mov
jne
fidivrl
shlb
mov
shlb
and
idivl
jge
std
stos
cmp
mov
fsubrs
mov
xor
lds
push
adc
jle
loopne
fucomi
es
mov
push
push
push
pop
leave
rcrb
call
jp
imulb
out
push
lret
out
cwtl
xor
dec
cltd
sub
cmpsl
mov
call
mov
jecxz
ds
mov
in
insl
pop
jmp
icebp
pop
cltd
inc
mov
adc
gs
loopne
loopne
into
repnz
out
dec
xor
outsl
ja
cld
fs
jns
ffreep
xchg
movsb
shlb
mov
aas
xchg
loop
push
pushl
in
iret
cltd
or
add
sbb
jns
loopne
jecxz
fbstp
push
in
ret
pop
shll
rclb
or
adc
dec
notl
mov
sub
scas
test
loopne
stos
std
sub
push
pop
das
outsl
xor
insl
push
daa
popf
jecxz
mov
sub
jge
add
sub
cmpsl
xlat
lcall
arpl
in
clc
ja
test
aaa
jnp
push
pop
xor
arpl
les
pop
aas
shr
pop
iret
mov
or
mov
sahf
aad
jl
adc
outsl
push
pop
jmp
push
inc
rorb
push
mov
fiadds
mov
mov
cmp
mov
hlt
push
ljmp
sbb
adc
or
and
sbb
aaa
sub
or
mov
cmp
aaa
xor
inc
mov
outsb
jge
sti
xlat
sub
add
add
sbb
sbb
pop
fs
inc
enter
cmp
dec
xchg
call
jne
mov
lcall
test
aam
adc
in
xchg
push
test
shll
inc
ljmp
jne
fsubl
std
sub
dec
jecxz
xlat
adc
push
or
dec
ljmp
scas
xchg
add
in
add
ja
cmp
fidivrl
xchg
shrb
js
mov
ja
adc
xor
add
inc
cmp
xchg
add
jle
add
pusha
fsub
jb
xchg
xchg
fidivl
jne
cmp
daa
inc
pop
jns
pop
push
pop
push
cltd
into
inc
daa
in
in
pop
scas
arpl
pop
xchg
mov
pushf
xorb
lods
jno
pop
sti
cmpsl
jb
xchg
js
lea
lret
pop
call
fucom
push
addr16
fcoms
movsl
pop
xor
push
popa
testl
mov
adc
sbb
fwait
les
pop
std
out
movd
lock
xchg
jae
push
add
ja
pushf
fistl
xor
xchg
cli
or
nop
std
push
ret
inc
cmc
jmpw
jno
mov
mov
push
inc
mov
rcrl
js
leave
pusha
adc
rclb
notb
adc
lret
xor
leave
ja
mov
jmp
sbb
icebp
xor
aaa
push
cltd
push
dec
popf
sbb
inc
imul
cmp
mov
push
clc
inc
test
add
jp
xor
xchg
sub
sub
in
mov
adc
sub
jmp
dec
dec
lret
push
enter
mov
add
mov
dec
std
outsl
xchg
mov
fdivrs
xchg
jbe
int
inc
cmpsb
in
mov
cmp
fsubrs
xchg
shl
mov
stc
aaa
xlat
inc
fisubrs
mov
adc
inc
leave
or
mov
out
scas
and
clc
push
std
mov
cli
int3
in
addr16
ss
pushf
test
jge
loope
or
mov
scas
les
jnp
adc
ret
addr16
mov
sub
clc
movb
outsb
lret
sub
test
xlat
cmp
xor
clc
rcl
es
popa
int3
xor
or
hlt
push
mov
xchg
fists
jmp
movsl
add
in
adc
shlb
and
xor
hlt
clc
lea
mov
mov
xor
pop
daa
jmp
imul
mov
xchg
push
xchg
nop
adc
mov
into
mov
fnsave
mov
xor
pop
sahf
add
jnp
ds
push
sub
mov
fs
nop
sahf
iret
and
xchg
psrlq
dec
ret
pop
sbb
cmc
push
pop
dec
jp
orl
xor
sbb
jbe
pop
out
aaa
pop
jge
aam
or
leave
shll
sahf
dec
test
xchg
scas
call
jg
shrb
in
mov
jge
jns
in
xor
lret
ss
mov
fnstsw
xchg
in
mov
scas
mov
adc
fistps
jae
mov
stos
aas
out
cmp
aad
pop
mov
dec
lds
inc
rcrb
pop
outsl
pusha
sbb
mov
insl
les
mov
xchg
jae
ds
dec
lods
mov
aad
and
jae
sub
mov
add
ficompl
pop
mull
mov
cltd
pop
mov
sti
pop
mulb
gs
jle
jl
sbb
mov
insl
aad
vcvtpd2psx
dec
mov
iret
movb
in
xchg
or
icebp
mov
mov
adc
sub
in
push
pop
ljmp
cmp
outsb
out
cmp
mov
stos
push
sbb
mov
add
jecxz
ret
cmpl
xchg
xchg
pop
jb
cmp
xchg
fldcw
cwtl
imul
pushl
std
rclb
pop
jmp
pop
and
mov
push
xchg
add
xchg
add
fisttpll
and
mov
popa
cmc
gs
loop
das
out
jmp
sbb
or
test
or
stc
jp
dec
jge
call
lea
jae
into
cld
or
inc
imul
enter
push
ret
mov
faddl
sub
std
fldln2
fldt
push
jg
cmc
dec
pop
aam
xchg
ret
pop
push
inc
lret
push
jb
nop
cli
cmp
sarl
jmp
mov
sbb
mov
adc
xchg
ljmp
dec
mov
test
shlb
shll
jae
mov
xor
mov
xchg
mov
ret
loope
mov
and
fistps
mov
xchg
flds
sub
icebp
xlat
cmp
xor
into
das
lds
mov
xchg
test
andb
cli
push
imul
jg
jecxz
mov
cmc
jno
enter
mov
sbb
or
cmp
push
cmpsb
nop
stos
mov
daa
lahf
clc
sub
out
int3
sbb
popa
sub
ljmp
push
in
out
fdiv
scas
enter
push
call
jge
sti
scas
fs
ja
jno
shrb
cmpsl
jns
xchg
fs
jmp
cmp
inc
shlb
shrl
sub
mov
mov
xchg
jg
pusha
fs
cmpsl
pop
ficomps
cmp
cmp
popa
hlt
mov
negl
scas
sahf
addb
add
ror
lods
pop
cwtl
ljmp
mov
rcll
dec
xchg
and
out
test
clc
push
xlat
mov
mov
cltd
rcll
popa
cld
pop
out
orl
js
mov
fimuls
xor
pcmpgtw
lock
and
add
jne
lret
aam
pop
insl
adc
scas
xchg
fstl
jg
inc
dec
aam
int3
cmp
and
jb
std
sarl
xor
dec
test
jmp
xor
and
and
aas
movsl
or
mov
or
jbe
xchg
cs
cmp
sub
repz
jp
imul
dec
adcl
sahf
and
in
mov
out
ficoml
outsb
andb
sub
sub
pop
adc
je
mov
test
out
sbb
sbb
xor
lret
ret
and
pop
jg
jmp
inc
inc
sub
imul
out
loop
adc
cmpsl
out
test
jo
imul
and
adc
sbb
xchg
das
xor
movsb
movsb
mov
add
out
xchg
loope
mov
sub
lods
mov
xor
xlat
addl
inc
stos
inc
sub
test
mov
shrb
shrb
jo
enter
pop
imul
jbe
xor
movsb
xor
jae
aaa
int3
add
jp
insl
lahf
xchg
movsl
pop
cli
daa
push
push
aam
lods
outsb
enter
cmp
mov
mov
dec
dec
sbb
xor
sub
aaa
enter
mov
pop
iret
daa
dec
scas
rorl
push
push
sub
subl
sbb
dec
out
fwait
xchg
fldl
fcomps
mov
mov
int
sbbl
fisubrl
mov
or
sarl
xor
add
xor
aad
addr16
cmp
push
sbb
lods
ja
rcrl
insl
test
sbb
js
adc
es
mov
add
xor
cld
pop
xchg
xchg
jmp
repz
in
out
jge
xchg
adc
xlat
test
push
dec
test
xlat
add
fldl
cli
or
mov
test
push
test
add
jb
or
scas
test
into
icebp
lcall
gs
jg
dec
add
sub
aam
and
sbb
ds
cmp
xchg
mov
or
mov
std
adc
pop
cmpsl
sbbl
daa
out
popa
xor
xor
jo
jl
cwtl
out
pop
adc
rcrl
sub
and
lds
enter
repnz
cmp
stc
mov
jb
pop
inc
and
xchg
pop
subl
push
lods
cmc
movsb
lahf
sub
sbb
push
popf
or
sbb
add
and
cmp
sub
sbb
xsha1
cmpsb
or
inc
mov
stc
pop
arpl
jb
mov
xchg
pop
in
lock
or
ja
addr16
daa
mov
hlt
movsb
mov
ficompl
dec
sub
fidivrs
fsts
sub
lds
mov
in
jle
sbb
popa
jg
jae
xchg
mov
mov
push
mov
xchg
hlt
jae
int3
addr16
les
adc
frstor
ret
arpl
bound
inc
xchg
lret
fs
push
testb
call
mov
ret
push
loope
pop
test
cmp
sbb
loopne
sarb
mov
jb
inc
xchg
dec
mov
jns
out
iret
sarl
into
test
imul
xor
xchg
inc
fsubrl
dec
sti
cmpsb
int
push
dec
jmp
xor
in
cli
test
pop
inc
lods
scas
addb
js
sub
adc
xchg
ret
lret
mov
in
icebp
stos
jg
aam
pop
rcrb
or
int
dec
add
hlt
adc
add
call
aad
push
andl
jmp
cmp
imul
ret
mov
pusha
mov
lcall
mov
xchg
out
scas
mov
sti
sbb
idivl
outsb
pop
test
inc
shrb
mov
push
mov
cltd
xchg
xor
xchg
cwtl
jp
lods
fcmovnbe
add
push
ljmp
push
or
mov
inc
movsl
push
or
push
loope
jbe
lods
pop
dec
cmpsb
pop
sbb
mov
testb
orb
jns
push
ret
and
dec
stos
arpl
mov
xchg
lret
and
push
data16
or
ret
lods
into
insl
lods
adc
mov
in
cmp
sub
inc
jbe
inc
out
and
or
add
mov
push
scas
or
push
or
bound
lahf
in
sub
sbb
dec
inc
xchg
ficoml
mov
je
hlt
and
xchg
rcr
ret
out
xor
pop
xorl
jo
rcr
lcall
icebp
xlat
xor
daa
pop
leave
sbb
or
push
adc
test
cmp
cmp
icebp
xlat
sbb
pop
push
je
push
or
inc
aad
inc
lds
ds
fwait
add
scas
jne
orb
stos
imul
lods
xchg
out
fldenv
stc
jg
mov
inc
jae
pop
add
add
ja
icebp
lds
shl
add
jae
mov
and
xchg
mov
ds
inc
adc
sbb
mov
mov
push
icebp
lret
cmp
xor
push
mov
outsl
mov
jmp
push
mov
xorl
and
aas
popf
shl
repz
into
cltd
push
rcrl
jecxz
in
xchg
adc
cltd
into
cwtl
popf
xchg
call
mov
sbb
clc
fisttps
xchg
push
mov
repnz
or
jp
aaa
cli
pop
add
mov
jnp
or
movl
mov
mov
sarb
iret
arpl
dec
mov
sbb
mov
icebp
cmp
push
test
sbb
lds
push
inc
mov
jne
rcl
push
cmpl
jae
inc
mov
xor
jle
mov
mov
repnz
mov
sarb
jp
negl
test
ret
and
fwait
repnz
mov
cmpsl
jnp
insl
push
mov
loopne
sbbb
aad
ja
loop
and
pop
sbb
inc
push
out
push
les
cwtl
es
xchg
mov
mov
idivl
fcoms
lret
cmp
cltd
jbe
bound
std
and
dec
dec
test
aaa
or
jle
push
mov
mov
mov
xor
cmpsb
test
add
fsubl
cltd
in
ret
fwait
loop
xor
setb
aas
mov
push
adc
xchg
aad
pop
frstor
pop
adc
jmp
jl
pop
in
mov
stos
mov
aaa
fs
jp
sbb
pop
inc
test
adc
mov
cs
cmp
mov
cmp
imul
dec
sub
xor
cmp
or
adc
pop
aad
mov
jns
pop
sbb
dec
out
lcall
push
mul
push
clc
jne
lret
adc
or
push
cltd
sahf
inc
and
mov
idivb
cmp
in
popf
bound
fs
adc
dec
pop
lret
icebp
jecxz
dec
das
and
pop
inc
cmp
cmpsb
aaa
jae
cmp
ljmp
lcall
cmpsl
dec
enter
mov
bound
dec
pop
stos
int3
pop
cmp
mov
outsb
cwtl
rcll
cmpsl
cmp
lea
fists
mov
inc
arpl
cmp
call
jno
xlat
fcmove
xorb
int
or
add
imul
and
cmp
sbb
sar
add
sub
or
pop
or
xchg
cmp
adc
cs
cmc
cwtl
loopne
push
mov
lds
xchg
hlt
ljmp
not
lea
and
fs
jl
mov
inc
cmp
pop
add
notl
inc
test
cmp
jbe
stos
rcl
adc
mov
dec
mov
xchg
stc
cld
fiaddl
dec
fdivrs
loope
fildl
stc
pop
jo
movsb
mov
or
mov
adc
fisubl
jge
push
cmpb
call
insb
enter
or
jo
dec
lea
cmp
ret
or
in
or
adc
cmp
test
mov
xchg
and
xor
arpl
hlt
pop
in
xchg
fldcw
push
and
xor
movsl
fucom
push
inc
dec
mov
dec
lea
mov
inc
mov
dec
adc
cli
and
mov
xorb
mov
push
ficompl
ljmp
rol
add
sub
out
inc
in
pop
jnp
jo
cli
xchg
xchg
lea
sub
fdivs
xor
nop
adc
iret
xor
sub
addb
push
xlat
cltd
mov
inc
les
mov
test
movsl
sbb
or
jo
and
les
mov
out
add
es
cmpsb
orb
aas
dec
sbb
mov
clc
cmc
and
inc
in
adc
adc
xchg
out
sbb
xor
loope
sub
rorb
lea
cmp
xor
rorb
jmp
arpl
push
jne
not
add
jmp
cmp
add
sbb
test
lcall
leave
add
testb
gs
stos
aam
add
lds
rcl
adc
cmp
xchg
sbb
out
sbb
enter
mov
dec
imul
pop
hlt
addl
or
add
xchg
insl
mov
adc
imul
adc
pop
test
loope
bnd
fimuls
jl
inc
mov
loope
jns
les
add
test
dec
psrld
call
in
or
loopnew
dec
hlt
add
or
test
bnd
mov
movl
sbb
xor
mov
and
fadd
scas
mov
sahf
push
push
test
mov
insl
pop
fcmovnu
repnz
mov
jecxz
push
stc
sub
xor
add
mov
mov
dec
add
dec
lret
pop
sbb
std
mov
cli
pusha
add
dec
fwait
mov
bound
decl
pop
pop
lock
leave
or
or
push
mov
mov
pop
sbb
or
vzeroall
sbb
imulb
pop
daa
or
mov
jmp
movsb
stos
mov
aad
aaa
jnp
dec
xlat
and
pop
mov
dec
cs
decb
out
cmpb
sbb
lea
fcmovne
mov
stc
fcoms
add
lcall
in
mov
in
pop
mov
hlt
pop
outsb
or
aas
cmpsb
fbld
ss
fidivl
divb
cmp
pop
in
repnz
lock
xor
cs
lods
cltd
or
inc
jne
in
into
movsb
mov
mov
push
gs
je
xor
and
mov
mov
and
or
xor
fisubs
mov
xchg
sbb
lret
jecxz
cmpl
xchg
jb
shlb
sarl
arpl
cmp
bound
dec
cwtl
ret
jnp
fs
jp
out
fldenv
push
or
or
nop
mov
xchg
das
mov
iret
mov
add
cmp
out
rcrb
cmp
pop
dec
pop
pop
in
mov
adc
loopne
out
std
add
push
fst
nop
shlb
das
ret
inc
cmpsl
iret
xchg
mov
xchg
fwait
and
adc
adc
mov
sbb
mov
imul
adc
lock
and
js
add
push
adc
jae
in
dec
inc
movsl
mov
iret
dec
addl
sbb
repnz
cmpsl
mov
outsb
jo
bound
push
mov
cmpsb
push
or
mov
dec
mov
shlw
mov
fadds
mov
test
std
stos
popa
pop
or
fld
in
ja
xorl
sbb
mov
inc
cs
js
lahf
pop
xorb
dec
sti
loop
repz
pusha
faddl
and
shrd
test
sub
pop
das
scas
add
imul
mov
icebp
icebp
push
fcoms
pop
mov
mov
inc
iret
pop
pop
pusha
outsb
imul
fdivs
clc
jge
mov
insb
insb
std
jmp
lds
dec
sbbb
addb
movsb
addb
and
jecxz
popf
mov
mov
scas
sbb
jle
xor
add
dec
out
enter
daa
scas
aas
or
test
js
sti
sub
imul
stos
fcompl
outsb
inc
dec
fmull
sub
and
mov
jl
int3
in
push
mov
ss
cwtl
popf
mov
and
js
es
out
out
dec
sub
fwait
ret
mov
cld
scas
pop
in
mov
mov
ss
shll
popa
cmc
loopne
rcr
popa
fcmovbe
pop
sub
in
inc
loop
nop
push
aam
sub
xorb
test
pop
dec
clc
mov
add
adc
dec
inc
xchg
imul
inc
fdivrl
mov
clc
push
cs
mov
fisubrs
mov
mov
push
in
out
push
popa
xor
xchg
xchg
xor
xchg
cld
ret
push
push
divl
sbb
jle
pop
ss
addl
pushl
pop
lret
xor
or
push
jnp,pt
push
insb
aam
xlat
lret
and
adc
ret
sub
pop
jo
adc
pop
fwait
inc
cwtl
xchg
sbb
add
add
cmp
stc
cmp
mov
mov
cli
mov
bound
idiv
jo
aad
sub
adc
xor
hlt
add
pop
stos
push
pushl
insl
callw
dec
or
jecxz
in
aam
imul
xchg
sbb
xchg
sub
inc
dec
pushf
mov
mov
jle
insb
dec
ret
in
jg
dec
lcall
repnz
xlat
lods
jbe
push
jo
xor
aas
or
fsub
ficoml
lret
ds
pop
push
dec
in
cmc
sahf
ljmp
ss
mov
cltd
adc
stos
mov
stos
mov
cltd
fnsave
pop
adc
jo
in
mov
cwtl
mov
mov
mov
insl
clc
mov
jns
aaa
aaa
sub
push
subl
xchg
and
inc
enter
jns
out
dec
testb
mov
sub
pusha
es
adc
xor
or
test
sub
rol
mov
jle
pop
add
fstpt
cwtl
xor
push
cld
dec
push
pop
into
jg
or
filds
sbb
sbb
add
ficoms
cmp
sarl
jmp
adc
dec
test
repz
inc
mov
lods
xlat
lods
sti
nop
iret
xchg
shr
cmp
cmp
dec
out
ljmp
je
add
insb
xchg
pop
cmpb
jbe
lret
cmp
xchg
sbb
call
cmp
xchg
iret
inc
pop
ficomps
stos
sti
aas
push
sarb
lret
mov
icebp
int
iret
or
cmpsl
fiaddl
call
sub
add
cltd
adc
jb
stos
pop
fcompl
pop
push
mov
into
fstps
sahf
pop
xchg
mov
mov
cmpsl
pop
adc
in
dec
sub
adc
xor
out
mov
in
dec
push
sbb
and
shrl
jns
test
scas
stos
out
or
add
jp
mov
xor
je
pop
sbb
mov
clc
adc
orb
fcoms
cwtl
mov
mov
pop
lret
fldenv
sub
cmp
insl
mov
sub
into
or
lock
push
inc
out
stc
leave
adc
filds
add
inc
adc
sub
xchg
cmp
cmp
nop
insb
cs
cmpsl
pop
jl
loop
mov
pop
fdivs
imul
jnp
inc
sahf
mov
leave
xor
aam
sub
jecxz
and
inc
rorw
pop
sbb
mov
push
or
scas
mov
dec
decl
ss
gs
inc
and
test
in
cmp
pop
stc
sub
add
arpl
repz
in
arpl
or
ja
jne
xchg
outsl
dec
mov
cmp
and
les
and
xchg
push
jg
call
and
mov
cltd
pop
stc
jb
aam
push
jne
inc
adc
sub
fistps
inc
or
dec
or
inc
xor
cmp
mov
cmp
mov
inc
xchg
or
mov
sar
push
xchg
jb
test
xchg
in
movsl
test
sub
fiaddl
sbb
iret
xor
dec
fbld
lock
test
nop
iret
or
adc
xor
jle
arpl
insb
jns
cmc
pushf
xchg
outsb
rolb
push
mov
sarb
adc
decb
sbb
test
cmp
and
xchg
sub
xchg
xor
sbb
jl
roll
lods
and
hlt
pop
scas
shll
dec
test
sub
push
arpl
xor
pop
pop
shrb
notb
jmp
mov
mov
enter
jae
xor
in
sarb
cli
add
mov
test
ret
cmp
mov
xlat
ds
sahf
imul
mov
xor
pop
leave
sbb
mov
rolb
or
dec
aam
cltd
mov
or
inc
scas
push
orl
insb
mov
into
sub
jns
push
sub
out
push
cs
clc
sahf
fidivl
lods
sub
stos
xchg
mov
mov
sub
mov
dec
jp
ret
or
adc
xchg
stc
jle
pop
rcll
outsl
hlt
fs
push
fidivrs
mov
dec
enter
mov
push
leave
hlt
xchg
push
mov
divl
inc
je
dec
inc
aaa
xchg
pushf
fildll
push
xor
cmp
fisttps
jns
sbbl
ss
jae
adc
mov
fiadds
dec
push
xchg
jmp
add
lcall
test
pop
inc
js,pt
in
mov
pop
lods
xlat
dec
stos
push
inc
inc
das
insb
and
lret
sub
mov
adcl
ss
and
je
or
jne
and
je
les
je
xchg
pop
insb
lock
or
int3
inc
add
jg
add
xchg
das
addr16
negb
add
inc
in
bswap
and
in
bound
loop
mov
dec
dec
into
dec
mov
push
ror
not
leave
in
xchg
cmp
and
xchg
outsb
fs
scas
pop
sahf
jl
insl
cmpsb
lds
scas
sbb
push
pop
dec
lret
and
push
push
push
mov
sti
aaa
jne
insl
mov
and
clc
push
mov
mov
cli
and
aam
mov
pop
jns
adc
lock
cwtl
add
pop
cmp
scas
or
sbb
push
xor
into
repnz
fsubrs
jge
imul
lea
dec
lahf
cmpsb
sahf
cli
inc
aam
test
movsl
notl
mov
push
stos
leave
or
mov
pop
es
pop
in
adc
jb
adc
and
andb
ret
xor
pop
sti
test
jg
sbb
dec
sbb
roll
mov
sbb
sbb
in
lret
loope
mov
outsb
sbb
movsl
out
sub
std
lret
or
pusha
into
arpl
aaa
dec
xchg
repnz
inc
xchg
pop
int
mov
xchg
cmpsl
popl
xchg
or
pop
fistpll
mov
in
outsb
mov
xlat
jnp
jb
jae
clc
fldt
aas
xchg
stos
inc
adc
sub
ss
mov
cmp
pushf
add
stos
mov
push
popa
adc
mov
adcb
add
idivb
and
cltd
jp
imul
lea
aad
aaa
fisubs
in
ds
scas
nop
adc
jecxz
rcll
adc
xor
cmc
std
sub
xchg
fnsave
jb
mov
in
push
pop
std
xor
jne
inc
je
mov
jg
pop
adc
fcoml
je
test
mov
call
mov
xchg
push
push
xchg
mov
add
pusha
adc
loop
pop
mov
inc
scas
xchg
rorl
repz
cmp
repz
das
mov
pop
sbb
jmp
or
xlat
jmp
jbe
jecxz
in
inc
adc
outsb
test
push
inc
adc
xor
scas
inc
bound
xor
imul
ljmp
inc
sub
ljmp
mov
jne
into
loopne
out
dec
or
jns
jl
sbb
xor
cwtl
aad
hlt
flds
enter
pusha
add
test
and
mov
cltd
push
lea
sti
mov
cli
cmp
push
pushf
daa
sbb
dec
xor
pop
and
mov
and
lods
mov
or
push
arpl
lret
dec
rcrl
pop
and
leave
ret
jns
inc
mov
sbb
flds
jle
decl
repz
scas
repz
sbb
push
mov
jno
push
out
mov
xor
sbb
inc
pop
push
fadd
pop
sub
sahf
jb
imul
add
adc
call
sub
lcall
mov
lods
xor
ja
jmp
aaa
push
pop
insl
outsl
mov
scas
xchg
push
in
mov
cli
int
or
dec
jae
ja
inc
pop
mov
adc
sahf
lea
dec
mov
aaa
sub
adc
arpl
dec
inc
xchg
mov
mov
pop
iret
call
insb
fwait
push
in
stos
dec
call
jmp
notl
repz
test
sbb
out
sbb
lock
adc
push
pusha
sbbb
dec
out
jae
inc
shll
add
mov
adc
mov
inc
aaa
push
lcall
ljmp
addr16
adc
sbb
xchg
inc
push
lds
mov
repz
sub
lods
and
push
les
icebp
pop
iret
cmpsb
fnstsw
cmp
mov
out
xor
pop
jnp
pop
jb
jle
adc
dec
int
jne
push
bound
shrl
mov
lea
aaa
lret
dec
sub
mov
jae
and
dec
mov
rclb
and
insl
sbb
ds
sub
jecxz
mov
popa
add
rorl
adc
repz
jp
scas
fstpl
mov
int
andl
xchg
jo
sbb
mov
push
pop
and
mov
xor
and
sbb
cmp
jl
mov
or
test
fisubl
outsb
xor
nop
jae
stos
jp
pushfw
lret
ret
push
mov
or
pusha
dec
fisubrs
cwtl
cmp
fcompl
fistpl
lea
ljmp
mov
sbb
mov
inc
xchg
movsb
push
mov
imul
mov
dec
jnp
xchg
inc
or
sub
jno
outsb
outsb
xchg
test
sub
out
mov
inc
adc
push
add
jne
stos
lods
push
test
inc
movsb
pop
dec
mov
and
lret
orl
inc
pop
pop
cmp
dec
jnp
xchg
inc
unpckhps
les
pushf
xorl
add
or
int3
cmp
iret
cmpsl
dec
stc
cmp
pushf
pop
in
inc
sub
mov
pusha
cwtl
inc
pop
es
adc
pop
mov
aas
push
ljmp
add
test
call
mov
mov
xchg
push
notb
cmp
cwtl
ja
loope
and
adc
add
and
insl
shrl
mov
xor
push
inc
add
aaa
sbbb
flds
pop
je
sbb
adc
dec
mov
call
jge
mov
int
pop
add
jno
mov
push
pop
rorb
cmp
lods
gs
ret
push
stos
daa
sub
pop
cld
icebp
icebp
push
pop
or
imul
insl
sahf
inc
xor
jae
and
nop
add
push
movl
cmp
cmc
pop
add
icebp
add
mov
js
pop
sub
clc
ficoms
push
rcr
in
int
lods
aad
je
xor
pop
cmp
test
jmp
push
nop
xchg
imul
push
mov
mov
sbb
inc
mov
pop
ljmp
sub
test
incb
loopnew
dec
pusha
jns
lock
fchs
int
pop
pop
cmp
add
movsl
call
imul
ret
in
pop
push
insb
jno
stc
jle
andl
jmp
ljmp
sbb
jecxz
inc
xor
scas
pop
xchg
ja
call
mov
ret
adc
push
icebp
cwtl
lea
lcall
nop
jno
lods
xchg
dec
leave
orl
or
push
or
pop
push
push
dec
push
cmp
or
popa
push
and
sub
adc
pop
xchg
outsb
xchg
and
jg
adc
and
xchg
xlat
lods
push
daa
jg
sbb
inc
cmp
push
and
xchg
lds
jecxz
and
jb
bound
jnp
push
scas
movsb
adc
pushf
xchg
xchg
aam
dec
jb
int
adc
clts
lret
fldenv
orl
xlat
mov
nop
mov
scas
push
xor
sbb
lods
xor
mov
add
or
cmc
jbe
jl
je
mov
cli
inc
out
and
outsb
xor
scas
je
imul
lret
out
insb
lods
mov
dec
icebp
jbe
push
jge
dec
je
filds
push
shlb
cmp
dec
sub
mov
clc
dec
ljmp
adc
mov
xchg
pop
pushl
aas
mov
jge
test
jl
sahf
xchg
jno
addb
pop
mov
push
xchg
shlb
sbbl
cmc
pop
test
nop
into
adc
rorl
loop
inc
mov
xchg
gs
fs
adc
pop
inc
or
mov
lahf
in
inc
ss
sub
mov
mov
out
movsl
mov
push
adc
pushf
out
icebp
cmc
xlat
mov
jno
xor
scas
dec
adc
pop
mov
sti
and
and
mov
push
rcrb
cmc
mov
xor
push
ds
test
in
jmp
dec
push
call
paddusb
push
and
in
push
pusha
fldl
decl
jle
rolb
inc
in
inc
mov
and
pop
scas
cs
scas
repz
inc
pushf
xchg
in
mov
push
push
adc
cwtl
xor
fs
add
clc
shrl
testb
shrb
or
das
iret
sbb
dec
push
daa
sbb
lds
ss
inc
xchg
clc
or
inc
xorps
jge
int3
lcall
sbb
rcll
sub
cltd
xor
pop
movsl
dec
mov
in
les
cld
sbb
or
pop
imull
dec
xor
aad
fadds
ror
mov
scas
int
pop
bound
les
or
dec
pop
test
sbb
sbb
inc
cmp
lea
scas
push
jo
fmull
ja
mov
sbb
cwtl
fsubl
mov
inc
test
push
icebp
jg
pop
mov
out
sub
adc
jp
cmc
mov
or
pop
xor
mov
mov
sbb
jge
mov
push
test
cmp
adc
addr16
out
or
adcl
loopne
sti
adc
pop
and
scas
adcl
xor
sub
movntq
sti
aam
loopne
int3
jmp
arpl
cltd
adc
sahf
cmpsb
roll
aas
sub
and
xor
out
mov
xor
dec
adc
ret
xor
xchg
jle
cmc
adcl
fisttpl
fisttps
rcrl
push
sarb
outsb
dec
push
mov
sub
inc
movsl
adc
repnz
add
popa
into
add
js
dec
jmp
jmp
add
sarb
pop
jne
push
gs
inc
ljmp
push
int
cmpsl
sub
push
xchg
and
fs
jecxz
shrb
push
out
pop
loopne
sub
add
clc
dec
sub
add
sti
mov
mov
inc
test
mov
push
cmc
pop
jle
popf
hlt
mov
and
ret
or
orl
imul
mov
add
enter
sub
push
or
pop
call
inc
fdivrl
lret
mov
jle
lock
inc
je
or
mov
or
push
cmp
jne
js
pop
push
pop
inc
lret
aam
dec
and
adc
scas
xchg
pop
scas
or
inc
jge
inc
jb
sbb
loopne
xor
mov
data16
outsb
push
push
vorps
mov
push
cmpsl
cmp
shll
mov
in
mov
sbb
push
fimull
pop
int
lods
rorl
and
hlt
arpl
je
mov
mov
das
and
mov
in
shrl
sbbl
fcoml
imul
cmp
pop
fwait
bound
testl
es
outsl
mov
insl
add
or
leave
mov
inc
call
or
push
fcompl
xchg
jo
scas
fisttpl
mov
js
fdivrp
and
adc
daa
sahf
adc
std
xchg
cmp
pusha
push
xchg
push
and
cmp
lods
xchg
clc
pop
movsb
mov
cmpsb
cmp
sbb
bound
fdiv
xchg
jns
out
dec
push
or
int
add
mov
outsl
repz
cmpl
pop
std
jo
push
jecxz
dec
or
sbb
ficoms
mov
mov
adc
mov
pusha
adc
and
cmc
ljmp
dec
dec
call
dec
negb
xor
mov
jmp
adc
push
adc
or
xchg
sbb
cmpb
pusha
dec
mov
xor
std
jecxz
stc
jo
xor
or
bound
daa
sbb
outsl
out
xor
cmpsb
ret
and
repnz
pop
add
ret
and
insl
pop
loopne
cwtl
lret
or
xchg
xchg
sbb
dec
sbb
test
iret
xlat
loop
iret
mov
xchg
bound
jnp
movsl
ret
inc
inc
pop
cmp
jmp
sub
in
ds
xchg
rcrb
aad
pusha
pushf
jo
adc
pop
mov
mov
movsb
adc
mov
imul
push
outsl
orl
and
mov
inc
or
fldenv
mov
xor
imul
xor
leave
fidivl
fistpl
add
jmp
or
out
ss
mov
hlt
cwtl
pop
and
mov
xchg
clc
cmp
sub
cmp
sub
andb
fiadds
push
cmpsb
cmp
loope
and
jg
sbbb
movq
mov
and
xchg
jle
int3
lock
lods
daa
fwait
vmptrld
outsb
movsb
jl
or
lods
into
push
movsl
stc
fsubl
arpl
push
cmp
fistpll
mov
outsb
rcll
shll
sub
sbb
mov
imul
dec
orb
imul
in
jg
pop
cmpsl
cltd
adc
jne
sub
sti
mov
xchg
jnp
xor
aam
and
adc
rorl
fwait
out
push
cmc
cs
fcompl
jno
sub
fldpi
or
adc
cmp
adc
mov
arpl
in
pop
and
sub
or
leave
mov
mov
ror
mov
ret
or
out
stos
sub
or
jno
test
sti
dec
lods
lods
cs
pushf
nop
push
xchg
imul
test
sbb
sub
and
or
repz
xchg
mov
or
in
inc
outsl
aas
cmc
inc
pop
mov
testl
test
dec
xchg
push
das
test
xchg
leave
xchg
loope
adc
add
int
mov
mov
mov
inc
xor
push
xchg
insb
in
sti
xchg
inc
ret
pop
addr16
adc
jns
push
xchg
in
or
fcmovu
cli
pop
out
push
adc
fidivl
push
jne
and
fcoml
pop
sub
pop
imul
push
inc
add
cli
repnz
imul
xchg
push
inc
in
insb
das
add
sbb
pop
sbb
cmp
pushf
sbb
fdivr
out
clc
push
fisubl
iret
das
outsl
pop
pushf
ret
idivl
pop
xor
fimuls
inc
mov
insb
out
dec
pop
adc
shlb
in
in
inc
xchg
aaa
sbb
xchg
idivl
das
leave
pop
inc
inc
cltd
andl
mov
sub
jne
mov
adc
out
adc
lea
aam
push
aaa
xchg
adc
pop
cmp
push
lea
push
ljmp
push
cmc
push
xchg
add
xchg
int
int3
inc
call
popf
xchg
pop
inc
and
stos
das
mov
sbb
nop
cmpsb
lret
ds
jae
out
cwtl
rolb
xor
push
jbe
mov
cwtl
imul
or
push
je
xor
xor
cli
and
inc
jnp
sub
and
push
repz
xor
sbbl
adc
xchg
scas
jo
fmull
enter
pop
test
pop
in
or
and
or
outsl
dec
or
and
mov
sbb
jno
pusha
xor
sub
adc
mov
jns
cwtl
mov
push
imul
ret
incb
pop
xor
and
testl
test
insl
adc
mov
inc
jno
mov
and
dec
jbe
mov
in
adc
sub
dec
dec
push
xorl
test
or
insl
out
xchg
sti
xchg
fisubrl
xor
int
jo
roll
shll
push
ret
xchg
sub
cmp
aam
outsl
adc
jle
orl
das
inc
aaa
out
jl
ljmp
jle
insb
popa
cmp
out
or
pop
in
hlt
hlt
test
in
lock
jge
inc
rclb
popf
iret
jmp
cmpsb
jns
ret
jecxz
scas
sbb
mov
cmp
out
idivb
mov
aad
lcall
lret
movsb
jl
inc
mov
jo
inc
jae
ret
push
movsb
xchg
mov
mov
inc
jge
sub
stos
pop
insb
mov
adc
insb
xchg
inc
mov
clc
jbe
mov
xchg
cwtl
inc
add
out
push
push
js
iret
outsl
inc
sbb
ja
bndstx
sti
aaa
sbb
dec
leave
fsts
mov
addr16
fbld
sarl
in
sub
cmp
out
sub
dec
pop
cmp
movsl
push
adcb
imul
jnp
clc
mov
sub
mov
out
imul
cmp
adc
shr
jae
sub
dec
loopne
pop
cs
jb
push
test
mov
or
add
adc
jae
sub
jge
xor
shlb
cmpsl
pop
inc
mov
in
and
push
cmp
push
push
and
lea
repz
ljmp
pop
push
repz
icebp
out
in
adc
pop
aam
mov
jne
lcall
dec
cmpsl
adc
lret
mov
aad
leave
arpl
inc
outsb
stos
and
push
neg
sbb
negb
rol
jmp
lcall
mov
fwait
mov
test
fldcw
inc
dec
loopne
movd
jge
dec
push
test
jmp
repz
das
push
lret
nop
jmp
mov
ret
jbe
push
cmpsb
in
call
shrl
repz
xor
push
das
jl
scas
cmc
test
sub
arpl
inc
xchg
ss
and
mov
sub
and
xor
bound
and
sub
or
flds
jns
cmpb
in
push
or
pop
cmp
xchg
fwait
stos
dec
and
mov
mov
jne
repz
ret
jno
ret
adc
in
or
imul
test
shrl
or
cs
inc
pop
negl
sbb
mov
mov
mov
push
jno
push
jmp
pushf
leave
and
rep
pusha
adc
mov
rcrl
loope
addr16
cmpl
sbb
loop
scas
movl
mov
cmp
mov
imul
push
jo
dec
addr16
dec
and
xchg
aaa
icebp
bound
or
jns
movsb
sbb
jno
cmpsl
mov
push
lret
ljmp
or
mov
hlt
rolb
das
repnz
pop
add
push
push
lcall
push
sub
repnz
inc
or
mov
cmp
pusha
int3
outsl
mov
jo
mov
mov
mov
xchg
mov
test
pop
lods
aaa
fdivr
movsl
int
daa
imul
addr16
adc
push
dec
or
fbld
outsb
jno
es
adc
cltd
xchg
loope
jne
ret
fcomps
or
ljmp
cmp
and
stos
lods
sbb
lods
xchg
xor
and
filds
popf
dec
mov
enter
mov
and
clc
ficoml
push
mov
jno
sub
sub
cld
pop
xor
scas
xor
inc
aam
jp
inc
push
sub
lahf
pusha
lret
int
adc
pop
adc
lods
push
xchg
jl
cmp
in
cs
aam
das
rorb
inc
lds
xchg
gs
fildll
int
push
scas
std
prefetch
ficoms
cmpsb
xor
fimull
add
mov
mov
mov
push
push
sbb
cmp
jo,pn
cwtl
xchg
jae
loop
pop
mov
enter
rcr
aaa
cmc
fldcw
jecxz
fisttpll
lods
aas
dec
pop
outsb
or
ror
add
inc
dec
mov
push
mov
outsb
ret
in
or
pop
mov
dec
loope
pop
push
das
cwtl
imul
pop
adc
add
iret
jmp
push
xlat
outsb
popa
inc
inc
ror
cmp
pop
inc
adc
mov
dec
inc
lahf
pop
sbb
sbb
cmpb
mov
mov
fwait
adc
popf
pop
out
xchg
jg
fmul
mov
sub
in
push
add
push
psubsw
push
movsl
filds
mov
and
aam
int3
roll
lds
movsl
jmp
mov
es
scas
push
jge
xchg
nop
imul
ja
sbb
mov
mov
sub
push
mov
lods
lods
cmp
inc
mov
jno
inc
push
arpl
in
imul
call
cmp
in
je
jne
outsl
call
jno
stc
insb
jb
clc
cmp
dec
push
cmpxchg
scas
pop
lock
popf
mov
xlat
sub
aam
rol
cmpsb
cmpsb
pop
add
negb
xor
std
push
pop
and
scas
lods
les
adc
xor
jno
adc
jnp
fildl
stos
xlat
adcl
loopne
mov
pop
rcl
dec
push
sahf
aam
xchg
or
outsl
loopne
ja
in
push
cmpl
sbb
inc
fcoml
ret
push
in
push
insl
xchg
andl
xor
lcall
inc
mulb
cli
roll
ja
xchg
bound
in
adc
and
adc
sbb
xor
and
inc
cli
pop
out
clc
shrl
dec
pop
loopne
cmp
rolb
xor
dec
lods
test
mov
test
clc
adc
mov
mov
stos
and
fwait
out
not
and
je
insl
pshufw
jae
pop
hlt
into
decb
or
dec
sbb
icebp
inc
xor
stos
dec
and
pop
sub
push
dec
ret
xchg
mov
jmp
popa
mov
push
mov
js
jl
sbb
fnstsw
cmp
add
ds
out
push
xchg
jno
xchg
imul
lods
mov
adc
arpl
mov
std
inc
xlat
fcompl
adc
xor
rcr
aam
sbb
adc
cmp
int
jecxz
imul
or
icebp
inc
ret
push
aas
pop
lods
push
sbb
call
dec
and
imul
lret
inc
pop
sbb
movsl
pop
jle
jge
sbb
pop
imul
push
jo
out
mov
sub
rcl
jno
arpl
ret
or
pop
sahf
stos
xor
popf
and
cld
call
sub
sbbl
and
cmpsb
add
mov
and
scas
jnp
loop
into
xor
push
and
dec
push
dec
xor
mov
mov
xor
out
dec
or
shl
and
jae
push
jle
popa
out
aas
mov
mov
mull
aam
loop
pop
or
outsb
test
loopne
pop
push
movups
push
xor
ds
xor
sub
roll
sbb
jno
jl
popl
ljmp
pop
sub
jne
jge
push
scas
stos
pop
jae
push
adc
push
sub
add
sbb
mov
sbb
aaa
pop
jmp
shlb
sbb
std
mov
push
jmp
aas
jno
or
push
pop
in
int3
insl
jne
add
pop
lret
cmp
xor
sub
shll
movsl
and
loop
xlat
mov
mov
repnz
mov
sbb
rcrb
dec
cmc
imul
and
lahf
push
dec
sti
icebp
mov
mov
cmp
or
adc
shll
ret
add
stc
pop
inc
cmp
mov
test
ljmp
cmp
out
mov
rcll
fildl
lahf
arpl
mull
std
outsl
cmp
jb
mov
push
cli
add
push
aas
inc
dec
mov
mov
roll
pop
insl
mov
loopne
in
or
and
pop
dec
dec
popa
jmp
adc
add
mov
sub
imull
xlat
push
pop
mov
or
dec
xchg
pop
sbb
shl
jmp
rclb
jle
jecxz
loope
inc
fdivl
jle
es
outsb
mov
mov
mov
lock
mov
scas
movsb
mov
cmpl
cmp
or
lds
sbb
inc
push
clc
dec
setbe
ret
mov
dec
mov
and
je
or
pop
test
inc
out
pusha
sbb
bound
pop
push
les
in
jns
jae
mov
xlat
ja
inc
cmpl
xor
roll
movsb
inc
push
jae
xchg
repnz
ja
push
mov
xor
dec
lods
ret
jmp
jno
scas
xor
rcr
push
jge
jae
pop
outsb
test
cli
test
mov
lret
sub
das
nopl
movsb
cmp
pusha
push
cmp
and
pop
pop
push
lcall
lahf
lds
mov
xchg
xor
inc
lds
or
arpl
mov
inc
outsb
push
sub
popa
cmc
jmp
inc
pop
repnz
fiaddl
inc
xchg
cmp
jge
repz
shll
test
inc
and
mov
push
int3
mov
andl
and
fwait
lock
lock
mov
fldt
in
jns
test
js
pop
hlt
push
pop
std
hlt
xchg
push
push
test
pop
scas
lea
andb
loop
das
inc
adc
mov
push
mov
sar
jecxz
ret
out
push
pop
hlt
sbb
push
inc
xchg
push
ret
jo
shrb
xchg
pop
add
jge
and
stos
les
add
test
imul
xchg
call
pop
xchg
popf
bound
xchg
xchg
ljmp
push
mov
sbb
dec
xchg
and
aam
iret
shrb
testb
push
dec
add
and
xchg
mov
pop
stc
add
stos
pusha
xchg
ret
inc
pusha
ret
es
mov
subb
or
cmp
ja
jecxz
adc
push
jno
es
stos
shlb
les
mov
cmpl
ja
or
inc
jno
ja
mov
mov
xlat
shll
ret
ds
adcb
in
cmp
pop
pusha
lahf
test
ss
icebp
xor
repz
push
imul
and
cwtl
loopne
in
and
test
xor
mov
loope
jae
ss
data16
pop
jns
push
sar
push
xchg
jg
add
add
and
dec
fwait
cld
inc
sub
xor
dec
dec
jae
push
pop
jns
inc
sbb
shll
inc
scas
add
rclb
cmp
dec
icebp
cmp
sub
jecxz
xor
sbb
cltd
cld
cmp
or
fidivrs
dec
fimull
mov
xchg
imul
ret
icebp
in
xchg
dec
add
lcall
lret
adc
cmp
in
mov
cmpsb
dec
fyl2x
mov
push
hlt
lods
js
jg
nop
push
testb
mov
pop
lock
adc
xlat
les
in
cmp
clc
cmp
ljmp
ja
aaa
fadds
js
popa
xchg
cmpsl
lret
pop
arpl
fnstcw
iret
cltd
and
xchg
pop
lcall
icebp
xor
into
xor
dec
insl
lcall
test
test
mov
lds
xchg
out
jecxz
or
and
sub
adc
adc
or
mov
xchg
jae
leave
push
cmp
jmp
lcall
cs
sub
add
mov
je
mov
ret
mov
leave
fbstp
lcall
mov
mov
and
mov
movsl
jmp
loope
lret
xchg
aaa
cmc
rep
jns
ffreep
inc
pop
fisttpl
lcall
loop
cwtl
cltd
test
inc
sub
sub
movsl
xacquire
push
mov
and
mov
mov
scas
test
and
lea
jge
mov
sbb
aam
pusha
xorl
add
sti
pushf
and
popf
pop
sub
pop
filds
xor
int3
push
fucomi
inc
mov
shl
jmp
rcrb
xchg
xchg
cmp
ja
imul
sub
inc
lods
pop
mov
addl
cmc
push
scas
das
xchg
jne
xor
ret
cmpsb
cmc
and
jecxz
add
cmc
insb
sahf
mov
sbb
push
int3
push
scas
mov
jne
out
mov
xchg
xchg
pop
sbb
ss
push
dec
jg
sbb
leave
dec
inc
sbb
jp
mov
xlat
sbbl
sbb
jmp
push
nop
cmp
jmp
shll
xchg
or
ror
jae
out
imul
push
pop
imul
lods
inc
in
in
movsb
sar
ficompl
adcb
imul
inc
adc
test
dec
inc
pop
xchg
push
jge
push
outsl
roll
stc
dec
movsb
or
popa
mov
jl
pop
dec
xchg
movsb
adc
push
dec
mov
test
lahf
jae
mov
loopne
lret
ja
jbe
sub
popf
fsubs
sbbb
sbb
movsl
and
sbb
mov
out
push
out
jo
fs
mov
fbstp
into
push
xor
scas
pusha
mov
cmp
test
out
mov
roll
xlat
hlt
mov
and
add
sub
fistl
sbb
mov
in
adc
xchg
stos
add
or
or
cmp
ljmp
shrb
ret
mov
add
out
add
hlt
pop
cmc
sub
std
adc
cmp
js
test
inc
outsl
jns
js
hlt
pop
xchg
pop
adc
shrl
loope
mov
add
fistpl
inc
push
mov
out
lahf
mov
rcrl
push
imul
mov
xor
sub
imul
imul
mov
pop
fwait
mov
repz
sbb
pop
ret
mov
jb
pop
shr
cld
daa
hlt
xchg
testb
and
gs
sub
mov
jl
pusha
lods
dec
fldl
push
in
push
enter
and
loopne
std
jge
cmp
inc
cmc
pop
scas
mov
popa
cmp
outsb
xor
jle
sbb
fdivrs
xchg
fnsave
inc
or
out
jecxz
ljmp
imul
and
lock
call
out
pop
dec
int3
jno
dec
mov
rorl
or
xor
add
add
aaa
mov
jp
add
and
es
mov
push
jmp
mov
xchg
add
sbb
dec
in
loop
ret
rorl
sbb
push
ret
add
xor
movsb
adcb
out
mov
push
iret
sbb
xchg
out
xchg
aad
aas
flds
fldt
outsb
addr16
jae,pn
mov
xchg
jns
in
std
and
imul
jle
repz
mov
adc
fdivr
lahf
and
lods
pop
mov
adc
mov
out
scas
mov
ss
popa
cmpsb
lcall
lcall
imul
sbbb
cs
fs
sub
cs
mul
aad
inc
sub
out
cmc
fwait
mov
push
cmp
insb
inc
repnz
subl
int
xchg
stos
std
sub
and
sub
jns
mov
cwtl
mov
pop
rcrl
pop
shll
and
mov
or
icebp
pop
stc
daa
xchg
mov
pop
orb
loop
mov
pop
ljmp
cmc
or
fcomp
out
jae
mov
pop
cwtl
stos
in
adc
mov
xor
xor
stos
cltd
pop
repz
mov
pop
xor
fcomps
pop
pop
ret
jg
in
sbb
std
and
pop
cmp
jge
xchg
bound
lret
mov
test
cs
xorb
push
add
cmp
lahf
cld
sbb
fcmovbe
cs
aas
lahf
shll
xor
pop
xchg
mov
mov
repnz
xlat
faddl
mov
or
adcb
sub
insl
pop
sub
scas
add
jg
loope
or
inc
fwait
push
aad
cli
pop
stc
dec
vandnps
push
cmpsb
call
jb
fldcw
out
and
pusha
mov
inc
stos
xchg
gs
jg
sub
xor
jns
xor
ja
inc
sbb
inc
out
xchg
loopne
sbbb
sbb
jecxz
sub
popf
lret
loop
jge
mov
cmp
dec
sub
lahf
cmp
sub
xor
cs
popa
mov
fstpt
push
pop
out
mov
out
stos
fldt
ja
icebp
xchg
jnp
add
jns
outsb
or
push
mov
jp
jo
jnp
call
mov
mov
xchg
shrl
lods
sti
xor
aas
sbb
mov
mov
les
cs
add
cmp
pop
and
xor
jne
cmp
loopne
pushf
call
jmp
ljmp
enter
push
xor
add
jp
add
mov
cmc
iret
sar
jmp
outsb
adc
std
les
aad
bound
xchg
cmpb
add
outsb
shlb
lds
xchg
xor
shlb
stc
xchg
aam
jb
repnz
aam
aaa
movsl
std
or
rcrb
xchg
lock
mov
int3
call
xchg
jmp
lock
dec
fsubrl
hlt
dec
clc
sub
es
or
int
ret
scas
mov
imulb
or
addr16
add
in
sbb
mov
lret
nop
outsl
push
sar
hlt
pop
aam
call
stos
ja
pop
mov
int
push
fists
rol
jo
jl
jge
sub
lds
cwtl
and
mov
cmp
jle
adcl
into
outsl
jns
jb
xchg
out
add
dec
stos
fcoms
cmpsb
inc
dec
lock
movsb
out
xchg
dec
push
jns
je
movsb
aad
andl
xchg
inc
xchg
ficomps
jecxz
insl
movsl
fdivrl
mov
ljmp
gs
jbe
dec
pop
cmc
arpl
xchg
sub
cltd
xlat
mov
sbb
add
pop
out
outsl
sub
xlat
xor
xchg
pop
push
ss
inc
mov
shlb
test
jno
push
add
push
sbb
addr16
push
push
push
pop
jle
mov
movsb
jns
mov
roll
jle
in
jp
and
movl
arpl
push
pop
and
mov
out
dec
adc
hlt
cmp
xorl
dec
pop
jg
in
pop
aad
mov
push
subb
addr16
and
iret
in
in
add
xchg
stos
cmp
insl
fists
pop
movsb
add
lds
dec
cltd
xchg
aas
inc
pop
roll
test
or
shlb
push
dec
mulb
mov
scas
add
jg
push
push
mov
jo
decb
lret
sbb
pop
movsl
je
cmpl
mov
sar
add
cmp
mov
test
fimull
pop
sbb
adc
inc
cmc
dec
dec
imul
fwait
or
fstpt
sub
mov
sbb
aas
call
and
dec
push
jns
xor
dec
mov
push
es
inc
pushf
dec
in
add
je
sub
movsl
fucomp
cmp
add
or
shlb
mov
loopne
int3
cmc
cmp
inc
jae
rcrb
fidivrs
or
mov
push
push
sti
jb
loopne
inc
or
test
and
and
in
ja
xor
mov
aaa
pop
shrb
mov
out
stc
xor
aas
ja
aam
dec
xor
sub
scas
lods
xor
pop
adc
push
aad
mov
mov
icebp
cmc
mov
xchg
sbb
mov
jge
ss
in
and
dec
pop
mov
adc
ret
insl
lret
and
jle
mov
mov
sahf
or
jne
clc
loope
les
shll
in
and
test
sbb
cmp
fst
xor
fcomps
out
leave
push
cmpsb
push
xchg
pop
xor
mov
push
sbbb
inc
cmpb
pop
test
cmp
mov
push
shr
fwait
jnp
stos
dec
cltd
mov
test
mov
ror
add
jbe
lds
aam
mov
scas
jmp
mov
sub
sti
enter
adc
cmc
add
jmp
div
sbb
push
mov
adc
in
push
popa
mov
inc
lahf
mov
mov
push
add
dec
or
fidivs
aas
push
push
movsl
sti
in
imul
mov
cmp
push
lcall
sbb
mov
xchg
inc
rolb
cld
mov
mov
xchg
pop
fcmove
fwait
add
adc
insl
mov
cmp
insb
pop
push
sub
shlb
pop
push
out
dec
or
rcll
in
outsb
adc
xor
shlb
aaa
add
dec
test
enter
ja
ljmp
adc
mov
xchg
mov
popl
cmc
das
xor
ret
nop
sbb
xchg
cmp
test
xor
std
inc
stos
add
ffreep
dec
bound
pop
jge
add
out
icebp
cwtl
stc
movb
dec
rorl
icebp
mov
les
jle
xchg
mov
sbb
xor
inc
imul
xchg
fldl
das
lret
ret
ss
aam
inc
sbb
jmp
mov
imul
and
add
lret
fwait
out
xchg
ss
dec
das
loopne
push
sbb
inc
jg
fstpt
stos
or
push
adc
testb
pushf
fldl
bound
les
add
scas
nop
iret
mov
call
xchg
push
leave
insl
mov
int
fwait
push
jge
lock
mov
rcl
hlt
mov
or
xchg
imul
ret
dec
sbb
in
aaa
insl
xor
push
pop
ja
ss
pop
jp
push
and
add
pop
int3
imul
mov
xchg
mov
mov
jno
ss
or
push
pop
sub
xchg
or
mov
dec
push
adc
nop
xor
inc
jl
inc
sbb
xchg
imul
push
push
lock
jo
add
mov
or
popf
mov
lret
jmp
adc
pop
fwait
mov
jae
dec
sub
xchg
ljmp
pop
loope
or
cwtl
insl
jmp
or
sbb
xchg
lret
sbb
clc
insl
lds
dec
fistpl
dec
iret
push
addl
test
pop
repz
lret
or
dec
fwait
sbb
dec
in
sbb
mov
cmp
jge
cwtl
xchg
jns
xor
gs
cmpsb
adc
inc
std
mov
mov
dec
gs
cmpsl
pop
fldln2
addl
jecxz
lahf
fstl
pop
in
or
sub
xchg
and
call
jle
fldt
jmp
sbb
movsb
arpl
roll
lock
and
push
pop
out
or
push
xor
push
cs
fistps
cli
repz
aaa
or
xchg
cmpsb
pop
fsts
rcll
lods
in
mov
dec
and
dec
cltd
jl
jnp
lods
ja
or
xchg
push
xchg
push
pop
cmp
test
fisttpl
pop
mov
mov
iret
decl
xor
mov
fiaddl
dec
addr16
pop
mov
mov
mov
dec
sbb
outsb
jge
jns,pn
and
jg
ret
pop
outsl
insl
inc
xor
xlat
loopne
adc
pushf
push
aad
ljmp
stos
jl
addr16
imul
ja
test
adc
xchg
cwtl
mov
ja
iret
and
cmp
sti
hlt
push
bound
out
and
mov
add
rcll
test
icebp
adcb
add
xchg
out
test
mov
xor
add
cwtl
pop
jmp
cmp
movsb
mov
cmp
add
and
in
iret
pop
aaa
out
push
inc
and
jecxz
xor
fistpll
leave
or
aas
cmp
les
stos
jle
and
cmpsl
jecxz
jl
cmp
mov
aad
xor
shll
xor
mov
stos
add
adc
and
add
push
pop
push
mov
lods
cmpsl
jnp
jo
xlat
push
adc
js
add
push
mov
push
mov
xor
nop
loopne
pushl
inc
icebp
mov
sub
jl
mov
movsb
dec
loopne
outsl
and
cmp
pop
sbb
mov
lret
lahf
sub
adc
push
push
or
addl
fcomps
mov
jne
rcrl
in
dec
cmp
lcall
jo
cmp
fdivr
sub
jne
mov
dec
out
mov
lods
mov
scas
or
sub
lock
lods
adc
pop
or
jb
sub
cmp
push
lods
push
loopne
outsb
aam
aas
mov
and
sbb
icebp
xlat
scas
sbb
lret
lods
stc
clc
inc
stos
push
sub
divl
cmp
push
or
push
inc
xchg
pop
xchg
mov
cmp
fs
loop
xchg
test
jp
clc
in
fmul
jno
cmp
mov
inc
aaa
pusha
sbb
add
aaa
stc
bound
xchg
inc
mov
popa
dec
adc
jl
gs
or
fmul
dec
push
mov
inc
int3
lods
push
mov
testl
fcompl
push
int3
push
nop
stos
xor
mov
mov
imul
fsts
xchg
jnp
imul
mov
mov
pop
sbb
mov
in
data16
xchg
dec
outsl
stc
xchg
in
and
shlb
sub
jp
sub
les
or
pop
shr
fldenv
mov
ret
xchg
vrsqrtps
adcl
cmp
mov
ds
pop
adc
pop
call
call
scas
xor
lock
or
mov
dec
xor
roll
jmp
mov
and
sbbb
mov
in
mov
outsl
cmpsb
add
sar
ret
or
push
and
lock
cmp
repz
dec
sub
or
ljmp
lcall
pop
and
lock
shrl
aaa
jmp
sarb
jmp
jne
imul
cli
push
mov
in
pusha
jl
cmpsb
sbb
addb
in
dec
mov
mov
in
das
cmc
cs
adc
leave
xlat
call
mov
sahf
in
loope
and
lods
into
push
xor
fsubrl
js
fadds
sub
dec
mov
push
jp
push
cmc
rcl
daa
ljmp
cli
sub
mov
pop
add
sub
mov
and
xor
mov
mov
jp
imul
lea
xchg
popf
push
pop
xchg
push
cmp
xabort
xor
int3
scas
push
add
pop
dec
fiaddl
std
dec
bound
push
xchg
dec
fstl
pop
loop
pop
sbb
fnstcw
adc
push
pop
xchg
dec
call
mov
or
or
mov
xchg
aam
dec
and
cs
vmovntps
rcrb
cmpsl
or
cmp
lea
pop
adc
js
add
popf
pop
xchg
pop
fldl
inc
or
aad
fadd
aam
push
xor
push
out
jnp
cmp
ret
sti
mov
frstor
push
inc
lock
pop
rcrl
pinsrw
mov
scas
lods
or
fcoml
mov
in
aas
jge
pop
pop
aas
daa
fistps
lods
mov
jnp
or
sub
push
mov
pop
sub
test
rcrb
stos
mov
ret
cmc
mov
xchg
mov
call
adc
out
fldcw
shll
loop
into
leave
cwtl
or
lea
imul
xor
and
or
mov
les
outsb
mov
mov
icebp
xchg
test
pop
jp
ret
add
and
stc
cmc
fs
fcompl
pop
xchg
pushf
out
cmp
xchg
fisttps
mull
sti
add
mov
iret
mov
call
push
xchg
shl
fwait
scas
addr16
and
mov
cld
loop
stos
xchg
mov
es
and
fs
iret
inc
lods
cmp
adc
or
jbe
xchg
into
cld
lds
shll
pop
dec
mov
dec
xchg
push
jge
cmp
pop
jp
adc
sub
insl
mov
xor
or
in
mov
xchg
xchg
call
inc
aas
mov
addr16
rcrb
scas
push
sbb
cs
fs
pop
dec
stos
sbb
sarb
icebp
rolb
push
out
test
xor
jle
mov
pop
es
das
xchg
mov
fstpt
in
jmp
xchg
mov
mov
imul
cltd
imul
rclb
push
mov
mov
mov
mov
dec
mov
dec
repnz
xchg
pop
dec
mov
daa
sbb
pop
mov
lret
ret
mov
stos
test
sbb
fdivrs
dec
mov
cld
loope
cli
mov
sub
add
cwtl
and
insl
popl
xchg
stos
xchg
cli
push
xchg
inc
push
mov
jb
xchg
xchg
xor
fstp
and
pushf
push
push
stos
inc
jo
lcall
xchg
test
les
stos
repnz
out
aam
in
pop
push
aaa
xor
sub
dec
decb
cltd
pop
jns
sbb
or
test
fistps
inc
ss
orl
and
push
mov
sbb
push
test
fs
and
aam
pop
fstps
les
add
mov
faddl
into
adc
push
inc
movsl
jmp
sub
sahf
jno
nop
xchg
cltd
jno
sub
push
mov
pop
cli
sbb
adc
cli
add
mov
or
sbb
pop
dec
inc
mov
add
pop
out
mov
fisttpl
fwait
testb
repnz
adc
testl
subb
rcrb
push
jp
jge
rcll
mov
fldt
dec
lock
mov
repnz
sti
int
push
jae
cmp
add
xor
jp
out
mov
or
xchg
and
mov
dec
adc
iret
cli
sub
data16
mov
mov
int
in
push
xchg
mov
jne
jecxz
dec
test
mov
scas
sub
xor
sub
cs
jno
inc
xor
sbb
mov
hlt
push
jmp
adc
fmull
stos
bound
push
dec
xchg
or
nop
xor
nop
clc
push
inc
mov
out
inc
pop
push
jnp
cmp
mov
js
xorl
or
jg
adc
sub
inc
xchg
jne
je
es
dec
bound
pop
and
jle
xor
jge
dec
loopne
xor
mov
aam
test
sub
inc
mov
push
fdivrs
clc
imul
xor
jg
lock
stos
lcall
xchg
xor
es
jle
lret
aas
movsl
sub
cmp
cmp
adcb
mov
into
inc
sbb
pop
push
mov
shrb
push
pop
mov
sarl
out
outsb
sbb
pop
jmp
addr16
jge
dec
lock
mov
sahf
das
pop
hlt
mov
xchg
dec
enter
clc
push
ret
jg
dec
aaa
js
xor
xor
test
push
insl
inc
sahf
insb
movl
mov
adc
sbb
jmp
cmpl
sub
test
sbb
cmpsl
cmp
adcb
in
cmpl
jns
les
dec
add
push
loopne
dec
insb
leave
inc
adc
dec
leave
test
mov
popa
outsb
mov
jecxz
hlt
je
ja
dec
movsb
sarl
lock
mov
sub
dec
outsl
scas
inc
outsb
pop
inc
mov
mov
mov
rcrb
jne
sub
inc
inc
mov
or
cmpsl
inc
outsb
mov
inc
enter
leave
adc
mov
dec
fwait
sti
push
pop
rcl
push
jg
mov
adc
pop
test
push
int
je
inc
lret
dec
ljmp
nop
aad
mov
jbe
aas
je
sti
sbb
je
aam
out
ss
pushf
dec
fbstp
jmp
mov
push
test
rclb
mov
xlat
rcll
mov
cmp
jmp
out
sub
or
ret
cld
pop
xchg
dec
xor
push
lock
and
xchg
sti
jl
add
sbb
inc
bound
imul
pop
pop
mov
or
lret
mov
mov
xchg
xchg
ret
ja
inc
push
and
fidivl
jbe
lret
mov
cmp
iret
stos
inc
scas
add
aad
xchg
jmp
out
jnp
imul
loope
mov
mov
shrl
inc
lahf
pop
mov
loopne
adc
add
cmc
xchg
pop
jbe
jno
and
mov
push
data16
outsb
mulb
and
int
push
fidivrl
insb
jne
pop
repz
imul
idiv
out
fcoml
repz
pop
enter
xor
loope
sub
or
sbb
cltd
shl
aaa
jecxz
loopne
mov
mov
dec
scas
and
movsb
sbb
pop
xor
inc
je
es
and
out
sub
lcall
push
iret
or
out
lock
mov
aam
fdivp
mov
test
pop
xlat
hlt
lahf
dec
frstor
test
pop
mov
divb
leave
and
lret
mov
mov
xorb
lret
rcr
outsb
lret
stos
push
fstp
or
rcl
hlt
mov
fdivrl
pop
pop
lods
pop
mov
in
dec
in
imulb
fstps
jmp
cmp
jns
stc
lds
jnp
xlat
jo
push
dec
ficompl
lods
repz
xchg
xlat
pop
cmp
out
mov
jp
std
mov
sbb
aam
fcmovnbe
mov
pop
pop
pop
pop
shl
mov
mov
arpl
mov
and
pop
lcall
jmp
mov
add
popl
lret
pop
add
mov
jge
xor
or
in
mov
test
js
sbb
test
or
pop
insb
aas
cs
in
dec
or
in
movsl
push
loop
test
mov
fidivrl
out
outsl
add
movb
lret
aam
push
cli
jns
xchg
ffree
cmp
ljmp
mov
test
and
push
out
out
sub
fsubl
xchg
mov
mov
and
xlat
jge
test
or
pop
sub
repz
js
sub
sahf
outsl
scas
xchg
test
add
push
jbe
mov
imul
pop
insb
xor
or
stos
dec
mov
adc
lret
test
xchg
test
cmpsl
dec
loopne
lods
loop
mov
rdtsc
xchg
sub
xor
pusha
outsb
xor
into
cmp
mov
outsb
out
cltd
mov
xor
stc
jb
cmc
mov
das
cmpsb
fistpll
mov
push
mov
sti
rcr
cmpsl
nop
pusha
into
fnstcw
ss
push
xchg
jecxz
xchg
dec
mov
xor
xchg
push
ss
call
mov
xchg
push
sbb
stos
testb
mov
push
inc
call
sahf
pop
decb
cmp
test
scas
cmpsb
pop
pop
mov
je
icebp
imul
repz
add
in
and
cmp
aaa
xchg
je
imul
xchg
mov
repz
fadds
and
cmp
popf
mov
je
and
into
jge
data16
stc
add
sub
ss
mov
and
jne
aaa
xchg
add
out
lret
dec
or
jo
push
scas
sub
jae
rcr
and
fnsave
rorb
xor
cmp
sbb
lock
loope
daa
nop
adc
call
dec
sarl
mov
fs
fisttps
mov
mov
add
and
clc
jnp
mov
sub
or
in
loopne
in
xchg
sti
test
leave
mov
loopne
mov
or
jb
cld
repz
jb
jae
test
cld
sbb
rcrl
mov
push
push
std
int3
xchg
cmp
stos
insb
imul
sbb
push
mov
pop
and
xchg
lock
fiadds
cmp
out
ror
inc
sbb
pop
push
or
idivb
stos
dec
and
cmp
out
sarb
ds
xchg
pop
ficompl
movsb
addr16
or
lea
scas
inc
inc
nop
cmp
lret
sub
pop
sarb
mov
or
lock
and
pop
sub
mov
and
icebp
push
mov
mov
xorb
and
lahf
popf
adc
mov
scas
lds
mov
sbb
lea
sbb
inc
add
mov
jg
enter
adc
movsl
push
mov
and
loop
push
jno
inc
enter
cwtl
repz
out
rcrl
lock
sub
ret
out
cmp
popa
clc
sbb
sub
addr16
sub
adc
mulb
mov
mov
or
mov
mov
pushf
dec
pop
inc
mov
pop
cmp
jecxz
mov
or
incb
cwtl
out
jmp
scas
mov
fs
pop
iret
cwtl
das
adc
mov
pop
sbb
sbb
lcall
enter
cmc
bound
enter
cmpsl
add
inc
or
push
aas
mov
mov
sub
shll
xchg
and
and
nop
mov
lcall
or
xchg
cltd
cmpl
lret
ja
arpl
sub
fisttpl
fcoms
sub
lahf
jbe
pop
rol
and
sbb
sbb
mov
subl
sub
jb
out
or
insb
cmp
mov
js
mov
mov
xor
mov
jbe
xchg
or
hlt
in
sahf
jnp
test
mov
adc
adc
push
mov
adc
mov
ds
inc
icebp
pop
addb
xchg
pop
subl
popf
jb
int
fs
int
test
mov
mov
popa
sarl
cltd
xor
cmc
inc
pop
pop
fmulp
out
inc
pushf
push
hlt
pusha
iret
mov
loopne
in
loop
mov
lret
jmp
cmp
in
push
aas
jns
dec
icebp
mov
adc
cmp
xor
jae
mov
and
pop
xchg
test
pop
clc
aam
insb
mov
inc
js
sub
mov
outsb
push
sub
xor
pop
sti
sub
jecxz
jp
gs
fs
scas
xor
enter
mov
loope
jecxz
shl
aam
adc
xchg
scas
jo
xor
push
dec
cwtl
add
xchg
inc
int3
scas
fs
mov
dec
or
xor
xchg
bound
je
sub
mov
sbb
cs
je
mov
sub
in
stos
fwait
sarl
ret
addr16
cmp
out
das
in
fs
pop
imul
aas
xchg
or
pop
popa
test
ljmp
clc
mov
sbb
sub
pop
cmp
cld
pop
rcr
jle
popf
jge
addb
sub
lds
dec
je
outsl
push
pusha
insb
popa
mov
test
stos
ror
loop
push
cmp
hlt
cmp
xchg
popa
push
aam
ror
jp
popa
xchg
push
jo
outsl
jae
lahf
add
stc
cld
or
aam
mov
mov
out
cltd
out
jno
mov
jo
pushf
mov
stos
cltd
push
call
stc
scas
xor
imul
out
jge
enter
xor
fildl
mov
or
std
pop
lahf
jmp
jmp
xorb
les
sbb
sahf
outsl
jno
xor
into
adc
adc
sarb
sbb
aaa
and
mov
dec
sub
rcl
mov
dec
cmpsl
into
mov
mov
mov
mov
inc
sub
mov
dec
pop
or
mov
pusha
repz
dec
out
mov
xor
test
add
cmp
in
out
mov
pushf
pop
out
sub
cmp
adc
mov
icebp
fdivs
rolb
push
mov
mov
sub
std
das
call
mov
or
stos
sti
aam
loop
push
cmp
adcb
sub
outsl
pop
or
repz
repnz
stos
std
jmp
insb
fucom
mov
mov
js
jae
clc
push
mov
mov
ss
xchg
std
add
xchg
hlt
adc
cltd
bound
xorb
pop
adcb
jb
repz
popa
shrb
and
sbb
add
jns
mov
push
mov
xor
cmp
test
mov
add
shll
stos
push
iret
sbb
aas
dec
sub
xor
addr16
repnz
jb
loop
and
cwtl
cmp
mov
xor
cld
dec
dec
dec
xor
cltd
pop
test
mov
stos
sub
cmc
jmp
fs
es
out
add
test
lods
fldt
adc
push
in
lds
stos
fwait
sub
adc
lret
lods
fdivrp
mov
pop
cmp
mov
into
dec
stos
adc
sub
xor
int3
aam
mov
jl
scas
xchg
xchg
cmp
in
call
shll
idivl
insl
push
sahf
addr16
push
mov
xorl
jbe
pop
testb
pop
sub
cmp
stos
mov
roll
enter
sub
or
mov
xchg
scas
xchg
inc
mov
insb
imul
fcmovbe
repz
and
dec
jo
inc
movsl
pop
movsb
ss
dec
dec
daa
mov
scas
or
test
or
cmp
imul
fwait
push
sbb
cmp
cmc
mov
outsb
pop
dec
rcr
in
jnp
sbb
imul
jl
jecxz,pt
jecxz
stc
xor
sbb
xchg
mov
jns
adc
fsubl
inc
test
push
push
and
add
das
sub
cmp
jg
testb
hlt
sub
or
jmp
jbe
insb
dec
lods
push
out
cmpsb
mov
mov
mov
mov
xchg
mov
xor
cltd
cmp
js
xor
push
cld
loopne
pop
loopne
push
inc
fdivp
push
data16
mov
lods
shr
fwait
in
ljmp
repnz
cmp
jnp
ja
jl
shl
fisubrl
dec
into
xchg
xor
mov
sbb
sbbb
jno
stc
inc
adc
push
push
insl
stos
imul
pop
out
test
jle
dec
cli
push
test
faddl
and
mov
sbb
cmp
arpl
outsb
repnz
icebp
leave
ss
push
ret
imul
fldt
sub
dec
adc
pop
adc
in
and
mov
out
cmp
jmp
xchg
je
ret
shl
popf
mov
sahf
fwait
jp
pop
outsb
lods
subb
sahf
sti
sahf
mov
aaa
stos
sti
out
jl
add
adc
dec
insl
pop
ret
mov
xchg
xchg
mov
out
iret
adc
es
jno
jmp
fcmovnu
test
push
pusha
cs
add
xchg
fdiv
lds
push
out
faddl
xchg
sbb
ret
scas
clc
xchg
aad
or
outsl
cs
sbb
jb
jle
cwtl
mov
inc
push
out
mov
or
sbb
mov
mov
outsb
inc
pop
repnz
and
fs
jae
aaa
sti
mov
xor
add
cmp
in
inc
loop
mov
loopne
popa
pop
push
test
xor
or
sbb
enter
mov
sbb
jno
or
repz
mov
adc
ds
mov
mov
dec
cmp
fdivs
daa
pop
jle
jnp
cmp
in
rol
or
shrb
fcomi
movsb
into
inc
shl
and
mov
pop
outsb
pop
mov
imul
adc
jge
jmp
pop
sub
push
inc
psrld
pushf
lds
xor
negb
clc
mov
cs
jge
push
lds
loopw
jns
aas
prefetch
iret
xor
xor
mov
and
pop
jbe
les
shrb
pop
add
rcl
push
adc
inc
movsl
aad
xor
rcl
in
push
pop
pop
les
xchg
xchg
inc
pop
cmp
insl
jl
in
jl
fildll
repnz
mov
fwait
cs
loopne
sahf
xchg
stos
mov
ret
cmpsl
sub
inc
cmovo
insb
leave
dec
sti
xorb
cli
push
cwtl
cwtl
and
mov
std
mov
pop
sbb
addb
outsb
in
psubd
ret
xor
sahf
sbb
push
cmp
fdivp
inc
push
ljmp
pop
or
imul
jb
push
lret
jbe
je
std
ja
data16
pop
fildll
lock
out
sbb
and
outsl
movsb
xor
jnp
rcrb
add
inc
lock
xor
jge
aam
ret
mov
mov
ss
ficomps
ja
popf
inc
cmp
sar
jns
pushf
adcb
or
jmp
es
lcall
and
mov
dec
add
jle
mov
pop
jg
cmc
test
and
mov
pop
stc
out
movsl
mov
ss
mov
sbb
dec
dec
add
dec
pop
inc
push
das
xchg
push
stos
outsl
add
je
cld
xchg
dec
lock
shlb
pop
pop
push
test
dec
cmp
inc
enter
sbb
inc
jmp
je
loop
cwtl
xchg
dec
movsb
sti
and
jp
cli
push
mov
inc
mov
stc
lcall
and
fisubl
sahf
adc
es
pop
loope
insl
not
push
fidivs
and
push
push
fisubrs
inc
sbb
push
fisubs
pop
pop
pop
lock
adc
stos
hlt
bnd
xor
mov
xor
outsl
adc
and
sbb
addb
es
cmp
adc
pop
xchg
add
sbb
lods
scas
mov
and
popf
inc
or
fstp
adc
jne
popf
inc
mov
push
jl
clc
push
ljmp
aam
test
imul
aam
je
rclb
mov
bound
test
leave
mov
pop
mov
adcl
lret
pop
mov
jl
jmp
and
jg
mov
test
mov
cmp
js
inc
out
loopne
test
mov
stos
fisubl
push
jecxz
push
pop
lcall
pop
xor
and
stc
nop
insb
cmp
cmp
cmp
in
mov
ja
in
mov
imul
outsl
or
xor
or
pop
mov
jns
cli
adc
inc
push
jge
out
fcomi
data16
shlb
pop
mov
cmc
sti
jge
jb
or
jp
dec
and
pop
iret
movsl
pushf
mov
jne
stos
shll
or
mov
aad
icebp
jbe
aaa
dec
inc
push
jno
and
and
testb
mov
stos
test
out
scas
jne
lret
pop
loopnew
push
ja
cmc
cmp
pop
leave
les
jnp
or
push
fiadds
push
adc
mov
mov
lods
push
push
popa
test
repz
in
inc
ret
mov
cmc
cmp
lock
xchg
mov
mov
jns
xchg
sbb
mov
mov
sbb
loope
pop
cmp
jge
push
rcr
in
imul
jns
hlt
jmp
lea
ficomps
lods
aad
mov
nop
add
mov
lea
out
in
call
cld
les
out
jno
fsts
push
inc
pop
push
int
scas
cs
outsb
xlat
popf
out
test
push
sub
data16
js
add
popa
sahf
sub
sbb
cltd
sub
or
loopne
add
push
mov
fildll
dec
movsl
aam
in
add
pop
fstpl
sub
mov
pop
leave
pop
stos
cli
arpl
fsub
les
cmp
movsl
dec
out
leave
dec
and
mov
sahf
pusha
mov
mov
sub
add
mov
cmpsb
imull
mov
sbb
dec
dec
cmpl
dec
add
mov
mov
pop
dec
lods
xlat
arpl
mov
mov
push
loop
ja
jno
cwtl
xchg
repnz
fisttpl
fwait
in
ds
push
pushf
xchg
cmp
mov
mov
mov
sahf
mov
xchg
loop
lea
mov
insl
push
mov
pop
and
adc
ja
ss
inc
outsb
bound
sti
xchg
pop
pushw
repnz
jle
push
out
cwtl
iret
add
mov
dec
dec
inc
lock
push
xchg
mov
pop
jge
mov
jecxz
sbb
incl
arpl
popf
xor
call
push
xor
jbe
aam
scas
add
fsts
pop
ret
inc
xchg
movsb
hlt
push
jbe
ss
insb
into
lret
std
xchg
adc
pop
stc
dec
fdivrl
adc
xchg
outsb
loope
fs
sbb
subb
notb
mov
sbbl
xor
sbb
add
negl
jle
mov
jns
pushf
roll
dec
and
gs
cli
cltd
fisttpll
out
aad
cmp
lret
cmp
je
loop
jmp
outsb
ljmp
sahf
jb
test
lds
push
cmp
push
popf
pop
hlt
pushf
pop
stc
mov
jns
sbb
ficoms
es
jmp
in
or
imul
xor
notb
les
pop
cmp
pop
rcll
adc
aaa
hlt
bnd
push
scas
daa
dec
outsb
mov
pop
inc
add
xlat
mov
cmp
inc
insl
les
push
lea
loop
cmp
add
mov
adc
movsl
dec
mov
sbb
cmp
mov
outsl
mov
sti
repnz
ret
daa
xlat
or
test
mov
push
data16
jno
or
dec
lcall
sub
or
rclb
and
xchg
mov
test
mov
std
nop
jecxz
mov
cltd
xchg
fcoml
mov
or
outsl
movsl
pop
out
push
jno
imul
pop
iret
ret
pushf
adc
insb
arpl
xor
or
loop
add
into
bound
je
pop
sub
add
mov
push
lret
loop
mov
aaa
pushf
leave
out
jp
ds
hlt
xchg
xchg
cmp
push
pop
push
pop
insl
sbb
or
sbb
xchg
sbb
cli
sarl
js
cwtl
in
sbb
outsl
xchg
xor
pop
ds
sub
add
ds
pop
xchg
mov
ljmp
pop
or
test
iret
pop
loop
pushf
das
and
lea
cmp
jbe
aam
dec
pop
fld
mov
sbb
push
xchg
insl
imul
cmp
push
add
cmc
loop
mov
mov
mov
push
fisubs
repnz
xchg
sub
and
mov
or
jg
pop
dec
lahf
scas
cld
mov
movsl
testl
push
mov
jecxz
or
les
inc
daa
sub
adc
test
jecxz
je
pop
jmp
sbb
mov
mov
ja
cmp
and
mov
cmc
pushf
dec
jecxz
pop
lods
mov
jne
jmp
bound
push
sbb
loop
push
mov
aas
je
outsl
daa
test
jecxz
mov
sub
or
pop
cwtl
dec
push
sbb
pop
xchg
es
jp
adcl
movb
mov
cmpsb
adc
mov
adc
cmpsb
lret
pop
sub
sbb
lcall
bound
add
test
movsl
jne
outsl
jge
mov
icebp
fucomi
shlb
push
mov
push
lret
lahf
lock
aam
in
xchg
ret
mov
dec
and
adc
inc
xchg
das
js
inc
xlat
xchg
rolb
cmpsl
stc
cmp
xchg
xor
cmp
and
lds
jl
jns,pt
xor
pusha
bound
xor
ja
cmp
iret
pop
scas
repnz
or
push
es
cmovle
shlb
int
push
cmc
sahf
ja
fsubrs
jne
sbb
xor
repz
mov
cmp
mov
cs
icebp
mov
hlt
mov
cli
popf
aam
insl
fwait
or
daa
popf
or
jle
xchg
std
xor
repz
loope
jb
mov
cli
xor
adc
lods
xor
jbe
sbb
in
repz
lret
icebp
test
xchg
jno
cmp
jl
dec
add
repz
or
nop
gs
xor
xor
inc
out
loopnew
idivl
cwtl
cmp
pop
nop
jns
aas
loop
cmpsl
sub
popf
pop
out
in
mov
ljmp
cmp
add
push
repz
insl
cmp
in
rorb
mov
mov
outsb
add
jl
shlb
mov
scas
inc
cmovno
andb
hlt
mov
mov
call
and
cmp
mov
or
mov
int
out
add
xchg
jb
cmp
inc
mov
sub
loop
pop
aad
imul
and
stos
adc
cmpsl
incl
shrl
sar
stc
lcall
mov
addr16
fcomps
shll
push
inc
mov
bound
inc
mov
or
in
xchg
pop
pop
fcmovbe
iret
or
pop
lret
daa
xchg
jne
jns
mov
or
xchg
xor
cmp
enter
iret
adc
int3
scas
jp
mov
or
adc
lock
mov
add
shrb
in
mov
mov
movsl
pushf
xchg
xchg
out
dec
mov
cltd
inc
inc
call
add
cmp
mov
cmc
ret
cmpsl
test
cwtl
shrl
pop
hlt
or
repz
ss
cmc
or
jmp
fstpt
push
cmpsb
add
test
xor
incl
sbb
in
rcll
and
mov
fimull
pop
int3
icebp
aam
mov
mov
lahf
jns
hlt
push
mov
xchg
popa
push
fwait
lea
cmpsb
cli
mov
in
inc
mov
mov
cmp
test
push
adc
mov
les
jle
call
inc
ret
xchg
pop
hlt
test
mov
addr16
pop
pop
in
cmpsb
decl
icebp
xlat
xorb
mov
imul
pop
adc
inc
sub
pop
lret
mov
cmp
push
xor
es
fcoml
or
xor
cmpb
or
loope
mov
xor
dec
test
cmp
fistps
or
shl
scas
or
dec
das
out
out
daa
push
lea
rcrb
ret
xor
jno
pop
add
xchg
adc
adc
leave
imul
addl
sub
mov
xchg
shl
insb
adc
adc
fisubl
sub
adc
mov
mov
xor
mov
mov
cwtl
test
popf
mov
sbb
jno
sbb
icebp
loope
iret
or
int
push
stc
cs
call
mov
orb
movsbl
xor
add
clc
sbb
sti
jecxz
sbb
leave
xlat
orps
mov
jecxz
cmp
mov
xor
cld
pop
les
ret
mov
adc
add
sarl
or
sub
call
xchg
inc
xor
xchg
dec
test
out
mov
int3
adc
pushf
incl
push
pushaw
movsb
sub
daa
gs
movsb
fistpll
shll
mov
shll
jns
mov
pop
push
cmp
fistps
out
mov
cmpsl
sub
or
les
imul
lea
or
iret
ficompl
add
into
aam
loop
jno
out
orb
jo
jne
imul
test
cmpsl
push
pusha
out
shlb
pop
adc
or
jno
add
sbb
dec
xchg
out
xor
inc
fidivrl
push
xchg
sub
jp
aam
leave
imul
jmp
add
pop
imul
sub
shll
mov
movsl
test
jp
pushf
sbb
dec
dec
int
or
lods
daa
and
notb
orl
mov
test
pop
rcl
out
dec
sti
pop
and
pop
ret
test
clc
add
jle
inc
popa
pop
pop
add
pop
xor
mov
xchg
add
xor
lret
push
xchg
jg
ja
xchg
insl
jne
ljmp
mov
je
mov
pop
adc
pop
mov
mov
arpl
dec
pop
mov
sub
dec
notl
cs
mov
mov
test
imul
dec
loopne
add
test
xchg
hlt
cmp
add
dec
xchg
fdivrp
andb
or
test
cmp
pop
xchg
scas
repnz
jbe
inc
push
int
jg
daa
es
iret
mov
rorb
js
mov
sbbl
cmpsb
mov
xor
push
cmp
inc
cmp
fcoml
push
mov
mov
aaa
xchg
stc
bound
sarb
xlat
pop
fsubrl
dec
enter
dec
and
dec
inc
cmp
mov
pop
inc
sub
sbb
rorl
test
addr16
mov
ret
pop
insb
sub
xchg
push
adc
cmpl
push
mov
repnz
push
xchg
ficomps
adc
push
jge
xor
add
xchg
mov
xor
aad
lahf
repnz
and
inc
dec
xor
and
pusha
dec
sub
or
sbb
add
adc
pop
in
ret
in
ret
adc
pop
pop
push
jp
jge
bound
out
scas
test
mulb
cmp
or
push
pop
adc
cmc
fsubr
stc
or
xchg
roll
ja
cmp
test
or
outsb
sub
daa
add
jno
mov
xor
add
pop
sbb
pop
rclb
mov
pop
push
ret
pop
test
cmp
sarb
mov
mov
cwtl
mov
les
lods
stos
stc
mov
and
ja
lret
xchg
ficoms
xchg
dec
xor
sbb
repz
mov
pop
sub
je
pushf
mov
daa
mov
mov
push
mov
push
push
mov
xor
test
cltd
stc
and
mov
cmp
mov
in
or
adc
ret
in
in
add
or
outsl
dec
pushw
sub
pushf
mov
int3
clc
out
hlt
fwait
test
sub
shrb
add
push
xor
popa
jns
sbbl
lods
bound
push
sub
or
into
cli
lock
mov
xchg
and
inc
sbb
stos
cmpl
nop
dec
sarl
jo
cld
orl
pusha
faddl
sbb
enter
push
add
clc
shll
push
js
sub
rcl
in
add
push
mov
jl
stos
push
mov
sub
les
dec
sbb
in
popa
aaa
mov
adc
cltd
jecxz
repnz
inc
enter
sub
ds
clc
xchg
sbb
aad
cmpsb
icebp
jge
repnz
cmp
fisttpl
orb
xchg
mov
jns
pop
mov
out
mov
data16
clc
sbbl
dec
sub
cmpsb
test
inc
enter
mov
xchg
movsb
js
fwait
push
inc
add
fbstp
adc
js
int
push
xchg
mov
dec
popa
dec
sbb
lds
out
mov
or
and
fildll
call
xor
into
cmp
adc
movsl
rcr
addr16
or
jnp
xchg
add
fsubrl
sahf
xor
pop
adc
mov
aaa
adcb
push
and
in
jmp
jmp
xchg
mov
fcomps
mov
jb
ja
push
pop
fwait
or
cs
insl
fdivs
push
sbb
add
or
xchg
sbb
jp
lods
dec
mov
cmpl
xchg
out
into
jle
mov
add
imulb
push
xchg
jnp
notb
arpl
xchg
outsb
cmp
or
ficoml
add
xchg
cmp
cmpsb
inc
mov
cli
notb
aas
inc
jmp
dec
sbb
enter
adc
in
cli
outsb
lret
sub
lea
sub
insl
cmp
pusha
mov
mov
movsl
mov
fwait
pop
stos
push
jmp
ffreep
loopne
inc
aaa
movsl
inc
addr16
adc
xor
inc
call
imul
add
pop
arpl
dec
lcall
mov
jecxz
les
sahf
add
jecxz
fidivrl
shlb
lcall
les
inc
repnz
shrb
std
dec
pop
mov
mov
movsb
jo
int3
pop
imul
xchg
lahf
andl
sub
outsb
mov
xchg
mov
movsl
jl
and
sub
mov
pshufw
mov
popf
loopne
inc
shl
ljmp
arpl
shlb
mov
push
adc
imull
cmp
and
divl
jns
cli
mov
pop
bound
or
xchg
rcll
xchg
dec
dec
pop
push
sti
cmp
aam
mov
js
cmp
push
fwait
lret
leave
inc
or
mov
cmp
lods
stos
mov
std
popa
hlt
inc
enter
mov
sub
loop
into
sbb
sbb
cli
pop
lea
loopne
popf
imul
cmc
stos
outsl
dec
nop
push
mov
inc
lahf
stos
flds
movsb
push
inc
push
aas
and
inc
mov
jl
xor
rorl
and
sar
pop
jns
xlat
loopne
retw
and
data16
and
pop
and
xor
ret
ror
jge
adc
nop
fstpt
and
or
sbb
das
sub
fdivrp
sbb
lock
test
adc
xchg
pop
out
or
loopne
pop
mov
scas
popa
fmul
lret
sbb
arpl
push
xchg
js
das
rcr
mov
xor
lret
push
mov
cltd
pop
shlb
test
cmp
int
push
push
xchg
xchg
sbb
shrb
shlb
bound
push
pop
pop
push
clc
cld
pmulhw
sbb
cmpsl
ja
insl
inc
sub
push
out
inc
inc
out
sub
mov
lds
jno
xor
push
clc
hlt
ss
inc
leave
ds
cli
mov
js
jne
outsl
sub
mov
mov
negl
mov
fcomps
fsubrs
cmpl
in
or
add
pop
loope
and
adcl
xor
std
pop
mov
lods
fwait
cwtl
repz
in
inc
dec
xor
ja
sub
pop
mov
inc
xor
push
push
test
int3
xor
mov
decl
jg
and
dec
inc
in
jnp
inc
stc
xor
dec
lock
xchg
movsl
outsl
mov
pop
and
mov
arpl
cs
mov
adc
shl
out
jae,pt
sub
xchg
jo
lahf
jge
inc
fs
cmp
idiv
xchg
loopne
js
dec
push
jns
push
in
adc
and
jg
test
or
jmp
pop
push
and
add
iret
sub
cmp
sub
xor
nop
dec
xchg
lea
xor
fisttps
sub
psllw
jno
push
xchg
add
cmpsl
stos
je
push
ret
rclb
loope
mov
cmc
or
ja
js
push
xor
adc
push
jne
sbb
push
adc
hlt
sbb
cmp
stc
nop
loope
dec
leave
inc
arpl
jne
push
cwtl
rolb
add
xlat
mov
bound
pop
and
lock
pusha
push
into
sub
xor
dec
mov
adc
or
jae
push
add
repz
push
lods
push
in
subl
movsb
imul
push
push
lcall
sbb
hlt
sub
repnz
dec
xlat
adc
cmp
dec
out
enter
cli
push
mov
adc
xor
inc
cmovp
mov
xor
pop
fcmovne
lds
or
hlt
rorl
dec
cmp
sarw
shrb
and
shrd
adc
push
test
dec
adc
cmp
xchg
push
ffree
mov
mov
cltd
outsl
xchg
and
mov
xchg
push
das
loope
and
mov
das
sbb
xchg
jbe
fidivrs
add
add
adc
cwtl
cmpsb
push
push
aas
jge
xchg
pop
xor
lods
ret
jp
push
pop
mov
or
push
addr16
mov
add
inc
iret
sub
cltd
test
loopne
daa
xlat
in
dec
jae
popl
sahf
sbb
xchg
add
push
std
sub
inc
inc
shrl
and
inc
push
in
loop
cwtl
add
aad
lds
hlt
arpl
rcrb
xchg
xorb
movsl
imul
rclb
push
mov
sbbb
mov
mov
fimuls
out
pop
fsts
mov
hlt
push
push
mov
cmpsb
mov
mov
dec
mov
add
xchg
std
xor
vpaddb
cmp
fildl
xor
sbb
cmc
mov
lcall
lods
arpl
pop
or
and
push
test
cli
xor
test
ss
aas
popf
mov
jne
cwtl
add
fnstenv
nop
jmp
sbb
rcr
cmp
out
jbe
mov
cmp
mov
xchg
in
push
fcmovnu
jecxz
mov
mov
sti
out
fistps
inc
mov
inc
js
add
imulb
add
and
pop
xor
inc
stos
jg
mov
add
lret
cmp
sub
xor
lods
xchg
or
xor
or
mov
test
pop
dec
sti
loopne
cld
pop
ja
adc
dec
push
ss
dec
xchg
pop
cmpsb
pop
push
or
pusha
stos
and
andb
cmp
sub
das
fsub
push
jno
ds
jbe
aam
out
test
fwait
xor
mov
mov
push
dec
pop
push
xchg
xchg
xor
cmp
xchg
or
imul
and
pop
outsb
inc
fs
cmp
insb
fadds
xchg
cmp
fadd
cmpsb
fistl
mov
xor
xor
sbb
add
sub
je
adc
dec
outsb
xor
out
add
dec
push
stos
jg
in
cli
arpl
push
shrl
jmp
and
cs
roll
or
adc
test
mov
rcll
int
jne
mov
pushf
inc
daa
test
add
loopne
jecxz
dec
mov
test
fsubrs
shll
insb
mov
jae
mov
jg
insb
fs
sub
cld
sub
stc
bound
loop
outsb
out
leave
sbb
mov
mov
mov
xchg
add
test
lods
xor
mov
mov
rcr
pop
jae
pushf
aam
loope
jno
test
mov
aad
mov
fisubs
scas
mov
xchg
xor
jo
xor
fidivs
lds
jne
lcall
lods
shrb
stos
adc
out
ds
dec
inc
mov
hlt
fists
out
inc
dec
and
fwait
fwait
mov
fdivr
xlat
fwait
fwait
push
daa
or
jo
mov
inc
mov
in
cmp
xchg
lea
cmp
adc
ret
sahf
cmp
push
lods
hlt
scas
or
imul
decb
ret
mov
jmp
jle
popa
inc
scas
lods
dec
pop
pop
mov
dec
xor
ds
mov
or
mov
push
ss
dec
aad
sub
inc
lcall
or
or
mov
xor
pop
add
or
dec
decb
sbb
jae
jnp
push
mov
gs
jge
jne
nop
mov
inc
mov
xchg
push
jecxz,pn
pop
and
mov
fwait
mov
aas
adc
loope
pushf
stc
lret
push
xor
inc
adc
xor
pop
imul
inc
dec
xchg
mov
iret
ret
clc
dec
pop
and
ret
sub
push
jbe
or
inc
add
xor
call
add
in
mov
scas
adc
cmp
int3
ss
shr
outsb
enter
imul
into
les
fidivrl
xchg
jg
mov
loope
or
push
add
out
fbstp
neg
addl
pop
mov
test
xchg
xor
in
aas
cmp
loop
gs
mov
sarb
jg
and
cld
stos
push
stos
xor
mov
pushf
push
andb
xchg
pop
xor
xchg
out
popa
push
faddl
inc
std
insb
lods
sbb
jg
in
ror
mov
xor
adc
faddl
push
shll
sbb
lret
into
cmp
rorb
jo
sti
dec
ficoms
dec
rorb
out
shlb
fimuls
sbb
jbe
das
sbb
aad
jmp
xlat
pop
aaa
push
fsubs
fprem1
sub
pop
popf
inc
jecxz
aaa
cmp
jne
mov
cmpsb
push
push
and
dec
mov
mov
in
xlat
clc
mov
leave
aad
pop
jns
xor
mov
add
adc
shl
lock
andb
test
loopne
xchg
jl
fiaddl
fsub
ljmp
mov
jp
enter
testb
sbb
fwait
mov
aad
std
mov
sbb
jmp
mov
shlb
xor
enter
push
mov
cmp
loope
lods
cltd
or
push
xchg
inc
jge
imul
int3
jns
call
mov
dec
mov
mov
push
out
jmp
fndisi(8087
arpl
jb
sahf
pop
out
add
inc
mov
jmp
ds
add
cmp
mov
cs
dec
push
and
and
es
xchg
sub
and
and
rclb
popf
sub
xchg
bound
ss
push
add
cmpsl
fs
jl
pop
mov
test
ret
std
in
and
test
loopne
enter
dec
enter
xchg
xchg
rep
ljmp
imull
and
dec
adc
or
sti
pop
mov
aas
or
out
hlt
cli
pop
cwtl
mov
adc
sbb
test
inc
incl
mov
add
adc
pop
scas
cmc
xchg
xchg
inc
mov
jns
jmp
cltd
add
loop
bound
sti
int3
sub
mov
je
js
mov
je
mov
cmpsl
pop
and
xchg
inc
mov
mov
sbb
dec
and
lahf
inc
cmp
adc
push
mov
cmp
mov
aam
lret
inc
loop
inc
jbe
stos
in
or
jnp
fcoms
aam
pop
and
add
sbb
sbb
mov
mov
mov
and
inc
jne
mov
mov
xchg
test
mov
mov
std
cli
imul
sub
pop
ficoms
lret
pop
or
test
mov
xor
xchg
sbb
jl
sub
mov
jo
insb
and
add
adcl
or
adc
insb
push
movsb
xchg
add
pop
pop
xor
mov
insb
push
push
fisubrl
mov
test
mov
xchg
and
inc
shrb
insb
jmp
flds
push
das
add
pop
mov
movsb
pop
adc
stos
xchg
mov
fdiv
xor
pshufw
xchg
xor
cmp
popf
mov
test
dec
mov
mov
jne
mov
mov
jno
sbb
cmpsl
and
add
cld
adc
or
es
jg
in
ret
mov
push
sbb
cli
fisubrs
push
outsl
cli
push
mov
imul
push
movsb
lods
add
daa
sbb
mov
sub
fcoml
es
repnz
ucomiss
in
pop
pop
dec
and
xorb
cwtl
sub
and
push
inc
es
movsl
sub
mov
mov
mov
xchg
iret
mov
sub
xchg
shl
sbb
data16
aad
add
out
jns
add
leave
test
jbe
pusha
mov
push
lea
ret
xchg
or
adc
mov
ja
jns
xchg
pop
into
insl
mull
aam
dec
lods
push
push
sti
cli
push
lea
fs
imul
loope
dec
std
sub
push
sbb
insb
xchg
subb
xchg
inc
dec
sub
icebp
test
dec
jmp
int
test
dec
fbld
inc
pushf
jnp
add
lcall
loope
sbb
inc
mov
pop
dec
mov
ja
into
in
stos
out
mov
jae
add
sahf
inc
enter
push
and
scas
inc
xor
std
dec
test
setns
jl
cmc
aas
mov
nop
dec
loope
push
inc
pop
ss
pop
std
scas
mov
and
xor
mov
fwait
xchg
mov
test
adc
dec
mov
sbb
inc
into
dec
adc
movsl
fwait
std
pusha
jns
inc
mov
int
sti
mov
mov
lret
mov
pop
add
fdivr
in
inc
mov
fidivrs
adc
cmp
dec
fwait
je
adc
out
add
push
xor
push
popf
js
in
xchg
or
add
lahf
mov
xchg
mov
add
pop
lods
scas
inc
xchg
out
psubusb
jne
cmp
dec
adc
orl
andl
imul
dec
movsb
jmp
lods
lock
mov
xor
ret
adc
into
push
inc
test
sub
popa
call
lock
push
nop
bnd
add
push
cld
and
in
ljmp
repz
lahf
notb
xor
lret
and
jg
inc
negl
dec
pop
cmc
and
mov
mov
icebp
cmc
loopne
add
ja
rcrl
out
cmc
and
ficompl
push
test
into
imull
pushf
clc
mov
test
jecxz
sbb
inc
xor
mov
push
test
and
xor
lea
out
int
bound
xchg
out
lea
pop
ficoml
std
sub
daa
fidivrl
stc
mov
mov
fistpl
outsl
xchg
jecxz
das
out
dec
jbe
lretw
push
push
cmp
cmp
test
or
roll
lret
outsl
push
dec
jp
and
sub
jecxz
daa
imul
into
je
test
int
lahf
mov
mov
xchg
xchg
add
xchg
add
jge
loopne
adc
inc
push
or
scas
lock
sbb
lahf
inc
cwtl
sbb
aad
aad
imul
fs
jg
mov
scas
sbb
push
push
dec
xchg
into
mov
push
mov
lods
cltd
cmp
add
mov
or
lret
xor
push
pop
out
or
icebp
pop
dec
nop
xor
ljmp
jge
push
inc
xchg
outsl
jge
fmull
test
jecxz
bound
pop
inc
bound
push
shll
dec
stos
cmp
and
loop
and
stos
sahf
je
mov
fdivrl
imul
push
xchg
add
shlb
push
jbe
int
mov
gs
and
es
and
inc
sbb
push
add
shll
cmc
int
adc
sub
in
mov
mov
xor
cmp
fidivrl
jl
mov
pop
xchg
mov
into
fucomp
mov
mov
les
divb
push
pop
xchg
mov
mov
adc
dec
inc
insb
mov
jg
mov
adcb
sub
sub
sbb
mov
inc
xchg
jp
outsb
popa
and
mov
sbbl
cmp
mov
repnz
shl
lds
icebp
rolb
add
les
add
mov
clc
xor
ret
cwtl
shrl
add
dec
jne
pop
and
dec
pop
jnp
rcrl
jne
js
push
jns
out
adc
out
fsubs
pop
sub
dec
test
add
lods
sti
out
loopne
jge
add
xor
nop
adc
add
adc
or
and
roll
and
lcall
adc
test
push
xor
xor
adc
movsl
ljmp
lods
mov
mov
in
movsl
sub
rorl
dec
test
add
imul
add
jle
add
ss
int
sub
cmp
jb
mov
popf
xchg
add
nop
push
imul
insb
and
jb
rcr
test
mov
push
push
add
inc
pusha
cmp
aad
cmpsl
lods
xchg
push
aaa
imul
in
sub
or
fwait
js
adc
mov
dec
push
jge
inc
movsl
mov
in
in
mov
jbe
pop
and
js
aam
cmp
nop
or
dec
arpl
dec
or
call
xchg
pop
lahf
sbb
adc
jle
cmp
lock
adc
int3
jae
pop
ret
xor
lea
dec
data16
fdiv
cmpsb
push
insb
pop
out
out
mov
push
sub
fdivl
clc
das
dec
mov
or
test
fimuls
cmp
mov
enter
nop
movsl
xor
pop
sbb
sub
pusha
push
mov
lods
stos
das
lahf
adc
cmp
pushf
test
aad
add
cmpsb
mov
setbe
mov
mov
ret
inc
aas
add
xchg
inc
in
daa
push
mov
std
xlat
mov
and
inc
stos
sbb
xabort
pop
ljmp
aam
lea
adc
mov
in
push
imul
lock
push
rcrb
repz
and
inc
mov
lods
insb
out
jmp
cmp
push
push
scas
dec
lock
mov
stc
or
cmpsl
xchg
sar
stos
mov
push
outsl
insb
xor
cld
rcl
bnd
ljmp
mov
into
sbb
outsb
cs
jnp
es
aad
std
sub
fcomip
mov
insb
je
js
fbstp
jne
int
xchg
mov
sti
add
xchg
mov
xchg
adc
repnz
les
sbb
inc
xchg
sub
roll
cld
fwait
jns
mull
inc
aas
xor
jg
mov
insl
dec
loope
dec
orl
loopne
stos
xor
sub
cwtl
inc
icebp
adc
dec
pushf
inc
data16
andb
repnz
pusha
filds
xor
and
int3
xor
mov
call
lock
stc
test
sbb
pop
cli
push
xor
ja
pop
fiaddl
cmc
sbb
cmpsb
cmp
push
lahf
xchg
adc
lock
inc
bound
testb
movl
jmp
scas
adc
imul
sbb
outsb
shlb
dec
das
fisubrl
jmp
dec
sub
fldt
and
inc
and
fmuls
and
mov
cmp
or
clc
loop
sti
fsubl
push
pop
or
jno
insb
or
mov
outsb
into
xchg
loop
inc
test
sbb
push
or
adc
mov
int3
cmp
lcall
cmpsl
adc
add
xchg
mov
fcomps
push
mov
mov
push
insb
xor
push
mov
lods
add
push
adc
popa
or
adc
jns
add
movsl
xchg
popa
push
in
lahf
jnp
push
mov
cmp
jmp
or
ficoms
pop
ss
or
fmul
jne
mov
push
xor
enter
jp
dec
and
rcrl
cmpsb
lea
ror
inc
fwait
mov
xchg
mov
cmp
lea
enter
or
jo
rolb
inc
adc
push
fstps
jno
pop
frstor
fisubl
adc
dec
add
pop
aam
and
add
sbb
add
in
loop
aas
dec
mov
and
sti
pusha
pop
lods
int3
mov
scas
mov
aas
push
mov
and
cli
mov
inc
rcr
bound
daa
clc
mov
pushf
rcrl
cwtl
cmp
mov
popa
out
out
mov
jae
dec
push
sbb
popf
out
lods
push
xor
xchg
pop
aas
icebp
mov
adc
repz
xchg
mov
pop
daa
inc
rorl
pop
jns
mov
rorl
xchg
test
xchg
out
sbb
mov
stc
mov
and
and
and
sarl
sarb
lds
xchg
dec
sti
jno
jne
lock
jbe
cs
or
ret
xchg
in
cli
lods
dec
xchg
add
dec
jb
popa
sbb
call
inc
adc
lock
jl
ja
outsb
jb
push
pop
push
in
and
inc
loop
sub
aas
test
push
test
dec
pop
cmp
loopne
dec
push
mov
cwtl
andb
cmpsb
das
or
ljmp
mov
lods
shrl
call
dec
shrb
lcall
pop
cmp
mov
js
pushf
orb
sbb
sub
mov
jecxz
loop
sub
repnz
pop
arpl
push
dec
repnz
out
xchg
cld
movsb
pop
mov
int3
in
int
and
adc
xchg
test
push
dec
and
lods
sti
xchg
inc
jle
out
scas
test
add
decl
fdivs
pop
loope
sbb
popa
mov
hlt
loop
mov
imul
aad
loop
psrad
sbb
jmp
mov
adc
jns
es
adc
pop
ficomps
sub
cmpb
addr16
mov
aam
aaa
adc
pop
mov
mov
js
iret
clc
out
xor
lahf
out
lods
imul
data16
jns
stc
mov
iret
push
std
insl
jno
push
mov
lret
adc
pop
or
fmull
lds
mov
pop
mov
out
mov
out
pop
xchg
mov
xchg
mov
mov
mov
leave
popf
jl
pop
jle
ret
mov
jno
test
test
rcll
jbe
xor
sahf
pusha
ret
dec
int3
sbb
cmp
fstps
fwait
jno
orl
in
addr16
ja
lcall
xchg
nop
loopne
xchg
mov
jge
sbb
mov
hlt
imul
jno
xchg
pop
out
or
loop
ss
pop
sub
mov
out
mov
jg
xchg
aaa
rolb
mov
cli
je,pt
fmuls
fiadds
adc
jmp
inc
mov
xor
sahf
push
in
out
mov
pop
mov
fidivrs
xor
jp
jp
jle
sarb
mov
das
jmp
jp
popa
imul
push
lods
in
mov
testl
pop
shll
push
cmp
push
xor
fcompl
mov
mov
xchg
or
adc
or
mov
pop
jae
mov
jb
push
nop
repz
shrl
ljmp
test
sbb
xor
js
adc
mov
ret
add
aad
pop
and
pushf
dec
fldcw
cmp
cmc
in
repnz
push
add
incl
stos
lds
xchg
add
xor
adc
hlt
mov
jbe
xor
mov
mov
push
push
inc
mov
mov
fdivrl
pop
scas
test
mov
inc
lods
fists
mov
sar
gs
test
mov
mov
test
pop
cmp
aas
fiaddl
add
add
sub
push
js
mov
imul
pop
jecxz
adc
pop
cmpl
shl
jle
pop
add
into
lock
pop
stc
aas
xchg
push
mov
jecxz
mov
jbe
aaa
mov
pop
ja
jmp
pushf
or
sbb
dec
leave
mov
push
stos
or
dec
or
mov
scas
jns
shll
loope
ret
fs
add
mov
push
mov
out
int3
pusha
xor
mov
inc
xchg
jle
mov
cmp
jmp
call
sbb
pop
mov
not
mov
repnz
std
pop
enter
dec
ja
int
testb
movsl
cmc
dec
repnz
subl
lcall
out
mov
imul
xor
movsl
jl
incb
pop
mov
pop
mov
aam
cmp
icebp
das
pushf
out
mov
and
ss
cmpb
fnstcw
lods
mov
scas
je
ret
cmp
or
push
aaa
pushf
push
test
dec
and
pop
sahf
mov
pushf
cmp
fwait
adc
out
ds
out
add
lods
dec
in
add
cmp
adc
adc
adc
aaa
daa
mov
cmc
xor
add
mov
jl
sbb
xchg
push
mov
popa
jbe
jnp
mov
pop
push
imul
mov
jbe
js
jnp
aad
les
gs
lock
pop
popf
xor
pop
jecxz
sub
imul
inc
adc
adc
or
xchg
nop
in
fists
jno
bound
adc
or
and
push
cmp
gs
in
std
popa
and
adcl
test
mov
sub
lods
xor
jne
xor
mov
pop
out
xchg
std
repnz
push
scas
pop
loopne
outsb
cmpsb
cmp
out
pop
ret
inc
mov
ss
pop
imul
aam
mov
mov
adc
pop
outsl
ret
xchg
shlb
sbb
xor
lea
or
ret
add
sbb
xlat
inc
pop
and
sub
int
mov
jmp
inc
sub
clc
call
fnstcw
out
xchg
stos
fs
push
jmp
ret
xchg
jmp
xchg
insl
mov
jns
repnz
in
push
mov
or
divl
dec
xor
andb
pop
hlt
cmp
dec
mov
es
xchg
cltd
cmp
pushf
inc
or
sub
xchg
cltd
xchg
popa
aad
out
arpl
js
fwait
std
gs
aas
or
adc
and
out
test
mov
xchg
inc
or
inc
pop
jne
out
in
mov
cmp
out
jno
lret
mov
aad
push
push
shl
test
inc
adc
jmp
jno
mov
cmp
les
ret
cltd
cmpsb
aaa
and
popf
lds
test
dec
cmc
daa
test
cmp
push
sti
fldcw
jg
sub
int3
lcall
xlat
or
popl
pusha
sub
push
sti
mov
dec
in
fcoml
outsb
in
or
fistps
mov
add
stos
jo
fisttpll
outsl
or
hlt
out
mov
pop
jbe
mov
adc
dec
mov
scas
push
js
testb
das
pop
pop
test
dec
mov
leave
movsl
cmp
push
xor
pop
push
out
mov
jbe
mov
nop
or
subl
lea
sbb
bound
arpl
xchg
sti
pop
push
adc
sahf
inc
cmp
fs
fwait
aaa
mov
popa
xchg
xchg
loopne
push
cmp
rorl
inc
sbb
lret
not
or
jge
fprem
daa
and
nop
sbb
mov
outsb
popf
loop
dec
js
cmpsb
fnstenv
xchg
leave
xor
bound
pop
shll
ret
jno
push
outsl
popf
sub
sub
pusha
sub
out
scas
loopne
cltd
int
push
add
add
call
fcompl
sti
int
and
push
mov
in
or
arpl
ljmp
dec
js
jge
pop
inc
js
cmp
jg
sub
mov
pop
cmp
mov
mov
movsl
or
pop
xchg
adc
shrl
sti
clc
jae
pop
stc
imul
xchg
mov
jp
repnz
mov
fdivrs
addr16
imul
xchg
adc
jae
inc
and
stc
sub
pop
or
ret
or
rcr
xchg
cs
ljmp
lret
cmp
pop
scas
imul
mov
sub
aaa
jg
adc
jae
scas
int
jnp
xchg
add
cmpsl
scas
pop
icebp
lret
insb
xchg
adc
lahf
jl
loopne
or
mov
test
push
push
cmp
outsl
loope
stos
sbb
sbb
inc
lcall
dec
push
mov
in
cmp
scas
or
lods
jecxz
sti
popf
imul
inc
fcoml
xchg
adc
mov
ret
push
push
add
add
mov
jb
push
aad
fcomp
pushf
andl
icebp
cmp
dec
insl
push
fnstenv
iret
sub
fwait
xor
rolb
push
add
pop
inc
outsl
adc
movsl
cmp
dec
xchg
xor
jnp
addr16
out
xchg
daa
jecxz
cmp
aaa
xchg
in
add
cmp
and
cmc
inc
sub
jp
inc
dec
lret
jo
jl
add
mov
sub
cmc
out
fs
sub
outsb
test
pop
cmp
std
or
cmp
adc
jno
aad
fcoml
cmp
lret
pop
sbb
and
inc
add
sbb
sbb
cmpsl
pop
adc
nop
mov
pop
out
push
sbb
shl
mov
sbb
inc
inc
cmp
jle
push
in
sbb
test
fisubs
lods
push
xorl
jnp
fisubrl
cwtl
loop
scas
mov
jno
mov
mov
scas
fsubs
push
cmc
pop
lods
mov
and
cwtl
gs
sub
mov
mov
pop
add
push
call
pop
call
jnp
mulb
bound
dec
adc
lahf
adc
and
test
repz
fsubrl
test
add
and
and
call
mov
shll
mov
mov
fisubrs
shr
orl
xchg
scas
xor
add
pop
cmp
jecxz
pop
movl
inc
orl
mov
pop
addr16
and
mov
cmp
sub
sub
andl
xlat
push
dec
pushf
jo
xchg
mov
cltd
push
das
ja
fists
xor
fidivrl
jge
jg
in
add
push
xor
mov
out
fs
out
push
mov
push
push
cmp
stos
push
imul
dec
int3
gs
aaa
or
fbstp
xchg
push
or
outsl
push
dec
loop
inc
xor
dec
scas
clc
movsb
aas
xchg
sub
out
ficompl
mull
or
sbb
cmp
xchg
xchg
out
cmpsl
mov
mull
lret
cmpsb
fstps
arpl
data16
sub
popa
pop
sub
push
sbb
push
push
sbb
fisttpll
arpl
mov
repnz
dec
jnp
dec
aaa
push
mov
outsl
jg
ja
push
push
add
aaa
lds
mov
out
lea
or
push
pop
or
dec
mov
push
out
mov
and
cltd
in
into
pop
test
imul
mov
outsb
popf
loop
fnsave
add
pop
rcrl
clc
sub
xor
nop
push
loope
pop
addr16
test
daa
and
mov
clc
ds
daa
fsubr
adc
test
arpl
hlt
arpl
aad
lahf
pop
mov
in
les
sahf
cmp
pusha
jo
mov
cmp
xor
mov
bnd
push
push
or
mov
aas
rcll
sti
and
mov
fstpt
or
inc
mov
loopne
jle
mov
add
loopne
add
or
ret
jae
mov
inc
xor
inc
std
xchg
imulb
mov
sbb
fsubs
fs
jns
scas
dec
xor
push
push
xor
cmp
cmpsb
outsb
leave
xor
ficoms
push
inc
mov
lret
notb
sub
cs
sbb
adc
mov
and
dec
adc
xorl
adc
xchg
sbb
movsl
mov
push
testl
sub
cmp
push
mov
mov
imul
cmp
push
pop
ja
cs
push
pop
dec
xchg
out
xchg
test
and
pusha
pop
adc
mov
sub
adc
daa
out
add
push
test
xor
push
pusha
and
cmp
mov
cltd
cld
push
cmp
test
pmullw
lods
aam
or
xor
jbe
repnz
imul
jae
fs
fisubs
adc
mov
push
shl
pusha
ret
push
sub
lock
or
xlat
stos
inc
les
jo
sbb
call
inc
loope
mov
cmp
sub
and
xor
sub
js
or
pop
add
jbe
fwait
inc
cmpxchg
xor
enter
ss
or
xor
add
imul
pop
sbb
pop
push
leave
jl
sbb
add
inc
aam
clc
je
mov
lods
loopne
inc
lcall
iret
sub
hlt
popf
dec
retw
outsl
in
pop
push
mov
mov
inc
iret
jg
add
add
fwait
ds
jle
push
add
pop
push
iret
scas
and
js
fildll
shr
mov
adc
icebp
enter
scas
cmp
adc
push
mov
jecxz
and
lcall
mov
insb
and
das
sarl
jne
ss
movb
ja
stos
jne
jle
pop
mov
sub
std
idivb
add
inc
pop
push
cmp
push
pop
xchg
mov
mov
add
jecxz
cmc
std
icebp
push
or
js
out
out
cmp
pop
and
insb
movsl
push
mov
jb
mov
inc
add
in
cld
loop
icebp
or
sbb
and
out
push
scas
push
decb
stos
lds
test
ret
adc
sbb
xchg
push
fisttpll
cwtl
sbb
push
adc
fdivrl
hlt
adc
dec
mov
test
ret
xchg
adc
test
cmp
int3
xlat
sub
push
push
les
pusha
mov
adc
scas
in
repz
pop
ja
fbstp
cmp
rorb
clc
ja
dec
mov
ret
fwait
out
push
lods
repz
hlt
mov
mov
fwait
cmp
push
aam
mov
jecxz
or
lock
int3
mov
cmp
and
inc
in
cltd
xor
pushf
fnstcw
loop
loopne
jne
into
into
arpl
jb
aad
mov
fiadds
xchg
dec
scas
fnstcw
add
lret
pop
pop
cmpb
les
shlb
jnp
arpl
cmp
daa
push
sbb
iret
dec
shlb
pushf
cli
sbb
aaa
sub
dec
xchg
mov
fadds
jbe
mov
jle
loopne
fsubs
es
pusha
pop
cmp
jnp
sarb
pop
jb
adc
mov
xchg
cmp
push
xor
or
mov
xor
pusha
out
pop
adc
stc
sbb
and
add
gs
imul
jmp
and
mov
test
fs
ja
mov
mov
adc
repnz
addr16
das
lahf
sahf
loope
imul
lret
rolb
outsl
sbb
sub
paddb
fldt
push
pop
xchg
fistpll
push
cld
mov
xor
cld
inc
inc
fstpt
xchg
pop
into
mov
mov
fisttpl
rcrb
stc
mov
out
push
arpl
lret
imul
pop
xlat
or
mov
je
scas
pop
movsl
adc
lret
pop
and
pop
push
jnp
movsb
mov
add
push
inc
mov
sbb
mov
inc
movsl
dec
push
or
mov
clc
mov
dec
int3
add
cltd
cmpsw
scas
shlb
sub
cmp
int
push
cwtl
sub
or
xor
test
jnp
inc
fstps
int
ret
jnp
sub
fstl
mov
outsb
jo
push
xchg
mov
loope
mov
sti
cmp
mov
cmc
cli
mov
leave
imul
xlat
jne
imul
xchg
jecxz
repnz
int
xchg
enter
xor
ret
imul
cmp
bound
fs
cltd
call
rolb
ds
fs
and
mov
adc
ret
xor
jge,pn
addr16
rclb
mov
mov
pusha
movsb
or
ret
das
add
shl
adc
imul
divl
das
xor
ja
or
add
pop
clc
sbb
mov
ds
inc
push
les
sbb
out
sbb
push
jo
out
jle
and
sbb
mov
adc
cmp
and
adc
fstl
jae
xchg
pop
add
fsubrs
jle
or
and
incb
bound
das
out
lcall
je
sbb
jl
and
mov
xlat
lcall
test
mov
lret
into
jnp
loope
mov
pop
dec
push
fmuls
cmpsl
cli
dec
addl
pop
mov
in
in
jmp
mov
loopne
pop
inc
mov
call
push
addl
mov
dec
dec
in
nop
cmp
sub
inc
iret
mov
pusha
pmullw
cmpl
and
fsqrt
cmp
sbb
xchg
filds
mov
pop
push
xorb
xchg
cmpsb
sti
dec
dec
mov
cwtl
pop
repnz
lea
jmp
sbb
push
add
and
mov
and
mov
popa
pop
aad
mov
mov
jmp
jb
and
aad
arpl
sub
and
loop
hlt
ja
cld
stos
cmpsb
inc
into
jecxz
sbb
fadds
sub
jle
es
cli
ja
mov
pop
sbb
jecxz
scas
jnp
sub
in
clc
lahf
les
gs
stc
push
adc
ds
xorl
js
shlb
push
test
insl
pushf
inc
xchg
sbb
xchg
fbld
stos
pop
pop
clc
outsl
icebp
arpl
insl
adc
int3
xchg
pop
fmul
and
mov
xchg
hlt
xchg
cltd
aaa
jo
dec
fnsave
rcll
out
inc
arpl
outsb
lods
xchg
test
lock
mov
mov
and
mov
jbe
adc
popf
movsw
pop
push
jae
mov
sub
dec
lods
nop
out
add
insb
ret
outsb
rcrb
jle
lahf
dec
sub
into
add
inc
enter
test
inc
addr16
mov
inc
outsl
stos
mov
icebp
cmp
inc
pop
stc
jb
leave
adc
pop
xor
test
dec
sub
sub
sbbb
cmp
popf
sbb
push
fsubr
mov
push
xchg
pop
cli
mov
jp
bound
call
daa
jmp
pop
jl
sti
cltd
cmc
ret
out
lock
stos
mov
sub
xchg
mov
cwtl
outsl
pop
loope
push
dec
and
cmpl
cmp
imul
jl
cli
jb
and
dec
ret
ret
shlb
jle
push
in
sub
cmpsl
mov
mov
js
add
push
lret
das
mov
cli
int3
je
mov
cs
inc
cmpsl
jl
enter
iret
test
ljmp
adc
lret
repnz
sbb
pop
sbb
cmpsl
adc
jne
fwait
push
dec
es
icebp
mov
lock
in
push
jmp
cmp
xchg
push
lods
or
enter
xor
sub
fwait
dec
xor
int
inc
pop
fcmovnbe
sub
pop
push
stos
jbe
mov
loopne
or
jmpw
outsb
popa
sbb
dec
lods
iret
or
pop
sbb
pop
loope
testl
lods
lret
out
lcall
add
in
push
push
cltd
add
enter
arpl
dec
mov
cmp
cli
mov
rolb
cli
cmc
xor
cmpsl
mov
enter
jno
push
in
call
stos
ret
loope
cmpsl
fcomps
push
mov
mov
xor
jmp
or
push
push
lret
pop
dec
sub
insb
inc
repz
sub
add
and
lock
add
cltd
cmp
mov
andb
pop
es
movsb
cli
in
pop
mov
test
mov
cmpb
je
mov
mov
loopne
mov
stc
jo
cs
mov
jo
insl
bound
or
repz
rorb
push
rclb
xchg
jnp
in
pop
mov
push
jno
movsb
cli
ret
adc
bound
dec
ss
cltd
mov
adcb
pop
cli
dec
lds
mov
testb
std
popf
inc
inc
jae
sub
mulb
fldl
jmp
out
add
insl
jo
lcall
cmp
sub
sbb
push
jmp
arpl
mov
mov
bound
movsb
pusha
and
cld
jne
cmpb
xchg
jg
dec
mov
pop
or
push
test
sub
out
xorl
les
sbb
pop
std
test
push
inc
std
daa
lahf
sbb
stos
clc
movl
push
push
lea
fsubrp
adc
add
mov
fildl
cld
mov
insb
adc
push
mov
pop
sbb
jno
xchg
inc
in
sbb
pop
dec
mov
aas
rorb
fcoms
popa
aad
repnz
and
mov
push
nop
push
js
loop
mov
pop
sahf
and
cwtl
jecxz
jb
rol
stos
mov
pop
sbb
add
out
and
loopne
sbb
dec
imul
xlat
jne
pop
jecxz
movsl
inc
dec
andl
jnp
dec
aad
scas
jo
in
adc
out
mov
xchg
lods
sbb
push
call
adc
mov
test
out
mov
and
cmp
xlat
add
repnz
lds
xlat
test
inc
add
xchg
fiadds
cwtl
loop
mov
xor
add
lds
xbegin
xor
inc
mov
sbb
cmpsb
cmpsl
sub
popa
adc
ja
sub
mov
xchg
aad
mov
insl
hlt
xor
hlt
cld
pushf
add
jns
inc
gs
fs
adc
or
jp
aam
mov
or
movswl
mov
cmp
ljmp
or
cmp
mov
jo
and
add
bsf
mov
jmp
cs
adc
movl
hlt
adc
pminsw
dec
mov
adc
mov
lds
test
sbb
push
outsl
cmp
push
pusha
stos
xor
dec
jp
inc
cltd
aad
sbb
add
ljmp
xor
lret
mov
cmp
mov
in
cmp
icebp
jno
arpl
sbb
lds
and
jmp
mov
in
jmp
push
outsl
bound
mov
je
and
adc
test
xor
leave
insb
xlat
xor
test
sbb
cmp
cmp
xor
or
test
movsb
inc
repz
mov
mov
mov
sbb
adc
loop
cmp
imull
mov
sub
int3
mov
and
pop
loope
mov
int3
mov
add
out
sbb
xchg
sub
jno
xchg
sub
cmp
leave
sub
notl
inc
leave
shl
into
push
cli
into
scas
lock
push
repz
push
and
xor
fbstp
sbb
je
inc
xor
dec
and
test
orl
jmp
push
xor
mov
bswap
mov
mov
cmc
jbe
push
jp
mov
cld
das
popa
inc
lahf
lods
push
imul
cmp
or
add
push
pop
sar
mov
mov
jle
adc
xchg
xchg
out
sub
xor
pop
arpl
xchg
repnz
test
in
adc
int3
mov
std
push
sbb
push
pop
pop
out
stos
lcall
push
push
mov
out
scas
sahf
adcb
sub
xchg
pop
xchg
popf
cmpsb
mov
jb
mov
pushf
cld
sub
addr16
sub
push
shrb
xor
call
push
mov
push
xchg
or
mov
jecxz
negl
test
or
dec
mov
mov
lods
mov
jns
int
clc
mov
das
aad
sbb
repz
push
daa
xor
je
jno
add
outsb
cmc
sbb
out
leave
or
dec
xor
or
lock
xchg
iret
stos
or
sti
pop
mov
les
pop
rclb
imull
cmp
push
and
and
xchg
pcmpgtb
daa
test
int3
sarb
xor
pop
fnstcw
xchg
repnz
out
mov
outsl
sub
jp
inc
call
pushf
push
jnp
xor
mov
jmp
arpl
inc
xchg
pop
and
pop
jne
mov
mov
iret
pusha
shll
mov
in
xor
inc
leave
jmp
xchg
test
push
cli
add
js
push
xlat
mov
nop
push
outsl
das
aaa
mov
aas
movl
aam
xchg
mov
inc
inc
aas
stos
je
ss
xor
dec
pop
xchg
jle
fnstsw
cmp
ja
sbbb
inc
cld
int
pusha
popa
inc
pushf
lds
xchg
jno
in
xor
mov
lods
fdivr
mov
sub
daa
lods
fnstcw
and
fnstsw
insl
push
mov
repnz
das
cltd
jp
cmp
and
push
fldenv
ret
dec
and
pop
add
jmp
cmp
sbb
cld
stos
repnz
jno
lods
pop
mov
pushf
sahf
mov
xchg
mov
cmp
cmpsb
repnz
dec
sub
mov
repnz
filds
xchg
aad
xchg
inc
scas
and
jmp
pop
insl
mov
jmp
imul
adc
push
sub
outsl
mov
aaa
and
mov
gs
imul
in
mov
ficomps
ret
dec
pusha
mov
mov
ja
jle
inc
cwtl
jnp
sbb
cmp
push
repnz
xchg
push
aas
out
jle
xchg
iret
fstpl
ret
push
adcl
dec
test
inc
or
push
test
adc
movsl
out
jno
sub
add
scas
pop
decb
sbb
popf
xchg
int
jno
mov
lcall
ds
mov
or
iret
fdivr
adc
into
adc
adc
pop
icebp
xor
hlt
adc
jmp
push
add
fisttpl
push
or
mov
jno
loop
cmpsl
adc
fidivl
or
movsl
jo
lds
pop
andl
add
imulb
xchg
stc
pop
jbe
adc
mov
es
mov
jnp
sbb
jmpw
clc
dec
sbb
sbb
aam
sub
fs
in
cmp
mov
rcl
fs
imul
aaa
sbb
dec
xor
mov
and
loope
push
mov
cmp
inc
cmc
dec
push
lret
repnz
push
lahf
aam
in
outsb
dec
inc
or
nop
out
jbe
adc
mov
mov
mov
cmp
pop
cltd
out
mov
add
or
in
rcrb
push
stos
xchg
sarl
xchg
movsb
movsl
mov
mov
inc
inc
outsl
insb
or
mov
movsl
enter
cs
cmpsl
pop
push
ljmp
mov
and
out
repnz
pop
test
popf
adc
cmpsb
movsl
cmp
adc
inc
rep
loopne
lcall
std
inc
in
mov
in
mov
adc
cli
and
loop
test
mov
sub
inc
sub
mov
push
jg
xor
daa
adc
push
sub
push
and
adc
sbb
and
cwtl
and
jp
shrl
fdivr
in
dec
dec
adc
push
pop
mov
stos
mov
dec
orl
or
jne
sahf
fcmove
and
gs
sub
lock
stos
hlt
arpl
rcr
dec
fwait
lahf
imul
ljmp
jle
cmp
insl
xor
xor
add
mov
mov
pop
test
hlt
test
lahf
nop
jbe
movsb
mov
iret
cmp
or
ja
aad
pop
fistl
inc
dec
in
and
jne
push
adcb
jle
xchg
pop
icebp
pusha
pop
or
out
int3
inc
aad
std
mov
mov
mov
push
push
fwait
in
push
mov
repnz
stos
call
imul
popa
and
adc
add
and
jns
ja
cs
cmp
dec
scas
fcompl
and
cmc
ss
std
inc
movsl
stos
and
push
push
je
cld
int3
xchg
aad
jmp
adc
sbb
leave
movd
push
inc
pushf
in
rorb
cmp
shlb
iret
fistps
mov
enter
push
add
sub
inc
pop
push
jmp
andl
push
mov
jmp
xorb
sub
xchg
mov
fisubl
sarl
cmp
out
jo
pop
xor
testl
clc
mov
lahf
rcll
int
fldt
cs
add
fwait
in
jecxz
sbb
inc
cli
ret
push
loope
xor
or
mov
jge
loopne
jo
mov
or
fdivrs
mov
cmp
push
pop
negl
aaa
and
fs
cmp
fsubs
lahf
mov
sbb
mov
sbb
nop
xchg
movb
inc
pusha
jnp
add
push
aad
xor
xor
mov
jp
in
sbb
in
int
fsub
addr16
test
jmp
sti
roll
out
lret
xchg
xchg
sti
mov
push
sbb
mov
inc
jmp
adc
mov
jns
or
xorb
addr16
xorb
icebp
ret
or
mov
ss
jmp
pop
mov
push
test
in
dec
xor
hlt
scas
aad
jge
aad
inc
cmp
inc
xlat
jb
imul
mov
lods
fwait
movsb
xlat
aad
enter
popf
loope
sbb
push
iret
dec
out
push
jne
or
jns
fnstcw
xor
push
xchg
mov
xor
test
xor
mov
inc
popf
ret
subl
dec
rcrb
cs
out
cmp
je
fwait
jnp
or
xlat
and
icebp
inc
mov
xchg
les
xchg
icebp
mov
xlat
dec
imul
sbb
rcrb
dec
sbb
or
xlat
popf
xchg
push
movsl
stos
mov
mov
xor
pushf
sahf
sub
xlat
fiaddl
xor
lds
out
stc
push
ret
lret
cli
sub
or
mov
scas
jl
adc
push
and
inc
and
test
push
mov
pop
pop
cmp
jge
cmp
cmp
pop
push
mov
int
jbe
lea
push
pop
xchg
xorl
and
mov
cmp
mov
dec
xor
add
fsubl
xchg
sbb
data16
lret
cli
mov
push
sbb
sbb
int3
inc
sti
jl
imul
in
aas
sbb
push
pop
shlb
sub
and
inc
jo
cmp
inc
pop
sub
inc
sub
inc
imul
jae
adc
dec
push
test
xor
mov
pop
adc
mov
pop
cmpsl
fldl
dec
ss
cmp
sbb
int
and
mov
xchg
in
lea
adc
mov
ss
mov
rorb
inc
rorb
push
add
mov
adc
and
scas
cmp
rol
in
sub
adc
mov
lods
lock
mov
icebp
adc
testl
out
sbb
pop
and
fwait
lock
jb
cmc
and
push
leave
inc
or
out
mov
xor
dec
ficomps
fs
pop
pop
pop
out
js
mov
dec
or
add
test
ret
test
dec
leave
and
push
dec
test
jmp
cmp
cmp
mov
push
lahf
inc
out
or
jae
xor
imul
xorl
in
mov
add
cli
push
std
inc
jl
or
movsl
cmp
sti
push
pop
ljmp
jo
insl
mov
daa
xchg
mov
sti
ja
icebp
xchg
fcoml
es
xchg
mov
stos
pop
sub
mov
adc
mov
filds
xlat
roll
xchg
test
in
popa
jp
mov
int3
mov
mov
inc
jp
fldl
icebp
popf
pop
int3
cmpsl
in
insl
mov
mov
add
push
xchg
or
ss
fwait
or
hlt
push
rcrl
sbb
stos
in
jle
add
test
lret
add
fiadds
adc
rcrl
add
loopne,pn
vmovq
lcall
dec
or
mov
mov
sti
and
sar
push
mov
cli
in
cld
sarb
mov
sub
mov
test
or
aad
xchg
mov
add
jl
sar
pop
fs
jb
lret
shll
sub
out
push
or
cltd
insl
jmp
jno
cmp
lock
lahf
inc
cmp
out
mov
divl
imul
fs
mov
lock
mov
push
or
dec
dec
xor
xchg
inc
mov
add
mov
pusha
lods
ljmp
add
aaa
jge
inc
mov
sti
jb
cmp
lock
jns
xor
push
lcall
mov
jnp
mov
fmulp
mov
xorb
pop
subl
jne
sub
fdivrl
xlat
jecxz
dec
or
mov
repnz
push
cli
pop
sbb
icebp
outsb
mov
sahf
push
rcrb
xor
fldcw
mov
or
cmp
jae
mov
popf
out
sbb
sub
sbb
loop
mov
xlat
out
flds
xor
inc
incb
push
movsl
cmpsl
add
inc
pop
mov
nop
mov
xchg
cmpsb
test
cmp
or
push
cmp
push
xor
pop
imul
pop
int
test
pusha
add
push
mov
pushf
and
cmc
mov
into
adc
sub
cmp
push
jb
clc
inc
pop
outsb
fists
mov
gs
adc
xor
lock
jge
dec
rorl
xchg
in
stos
xchg
pop
jno
cmpsl
js
dec
xor
ljmp
sub
add
lret
mov
xorl
test
fistpll
jle
aas
mov
cmp
adc
xchg
add
add
hlt
jle
pop
shll
sarb
or
cmc
mov
out
jno
sbb
xchg
and
test
or
xchg
mov
jge
jnp
inc
int3
or
fists
push
adc
xor
sub
sti
pop
enter
add
mov
adc
sbb
xlat
xchg
cmp
movsl
sbb
xchg
ljmp
dec
fisttpll
fwait
dec
repnz
xor
fwait
inc
lds
scas
mov
in
pop
enter
mov
rorb
add
sbb
xor
mov
mov
dec
sarl
push
aam
inc
fcoml
add
cmp
cltd
scas
das
repnz
sub
or
xor
xor
sub
mov
adc
sub
push
mov
sub
aad
fwait
xchg
dec
sub
imul
jl
je
in
add
push
stos
jbe
or
and
subb
or
mov
xchg
pop
pop
jl
leave
test
aaa
pop
pop
cltd
xchg
xchg
inc
enter
xchg
test
out
movsb
sub
sbb
sbb
mov
mov
cld
jne
pop
mov
aam
jb
je
lds
test
std
rcl
lods
jmp
pop
push
sub
imul
aad
mov
enter
and
out
ja
sbb
cli
fimull
push
out
addr16
ss
mov
sahf
xor
jl
jmp
mov
aam
stc
imul
notb
push
mov
jae
inc
and
adc
fldt
in
cld
push
out
mull
sti
xchg
out
cs
scas
mov
lods
loope
mov
mov
xchg
lret
mov
loopne
sub
sub
or
sub
push
ret
dec
dec
dec
test
mov
jne
mov
mov
jmp
fwait
inc
jns
or
push
push
jb
xor
mov
lods
repz
ja
jnp
adc
mov
stc
pop
push
gs
pop
inc
jo
outsl
jne
nop
repnz
xchg
or
push
xor
fwait
lock
stc
mov
xchg
dec
mov
jle
daa
dec
or
push
jecxz
out
sbb
xchg
hlt
outsb
data16
sahf
lcall
cmpsb
add
lret
sahf
aaa
rcll
jge
inc
dec
jae
pushf
fdivrl
stos
push
sbb
pop
jne
jnp
outsb
imul
cmp
pop
push
test
jns
popa
adc
jmp
xchg
inc
int3
ficoms
rcrl
xlat
decl
or
mov
or
pop
mov
cmp
mov
fdivrl
rcrb
mov
sarb
int
jns
mov
hlt
test
enter
sahf
xor
push
out
imul
xor
pop
das
aam
out
sbb
sub
push
je
int
pop
incl
hlt
dec
stos
xor
push
pop
adc
mov
add
lds
jecxz
mov
out
push
cltd
jmp
cmc
dec
scas
test
push
push
mov
mov
jno
ret
lods
push
push
push
hlt
daa
pop
lret
mov
sbb
stos
lods
cmp
in
sub
xchg
dec
rcrb
push
loopne
dec
push
in
mov
repz
pop
test
in
or
dec
add
pop
testl
jge
push
repz
leave
into
call
add
mov
dec
rcrl
xor
xchg
gs
in
in
sbb
fs
adcl
cmpsb
fimull
test
jo
icebp
pop
imul
sub
jne
loopne
cmp
or
adc
mov
out
mov
bnd
inc
mov
in
lea
xchg
in
add
addb
mov
inc
lock
jbe
ja
xor
xchg
pop
out
mov
notl
push
rolb
sbb
dec
es
movsb
or
cld
sub
lods
xor
dec
and
cmp
fstpl
popf
imul
enter
dec
adc
fbstp
cmpsl
cmp
test
and
insb
jo
jmp
cmp
cli
movsl
xor
mull
stos
cmpsb
inc
pop
out
test
mov
test
inc
inc
incb
xchg
sahf
daa
pop
dec
or
xchg
xorb
test
faddp
dec
sbb
add
sbb
in
and
orl
jns
xor
xchg
sbb
push
sub
fst
lods
out
add
xchg
mov
inc
lods
push
daa
adc
fdivs
das
mov
loope
fs
lods
jbe
xchg
mov
int3
mov
sub
dec
cmp
sub
jg
pop
pop
and
out
std
inc
dec
ficoms
jo
inc
aaa
cld
fs
and
ror
xchg
stc
enter
shlb
test
and
daa
jmp
loope
lret
cld
cltd
add
dec
ds
xlat
or
sub
sar
fdivrs
cld
inc
cld
xlat
jp
std
jl
jl
mov
and
popf
mov
into
sti
mov
mov
ds
sahf
pop
fwait
cmp
or
imul
xchg
sbb
xchg
jae
into
push
jmp
repz
mov
push
out
hlt
jbe
hlt
sub
add
ja
xchg
mov
stc
mov
inc
int
add
stos
xor
and
or
loopne
jl
sbbl
mov
push
in
and
xchg
dec
xchg
clts
inc
dec
xor
dec
fcmove
leave
mov
jae,pt
jae
sti
sbb
mov
xor
mov
cld
in
call
out
out
inc
inc
dec
add
fistpl
fnstenv
sti
cmpsb
adc
out
imul
sub
pop
addr16
loopne
push
and
lea
add
jns
mov
aam
lret
scas
add
les
movsl
and
rcrb
mov
in
inc
sbb
aas
lahf
repz
push
stos
mov
loope
push
loope
pop
push
sbb
imul
shrl
ja
sub
nop
mov
andb
push
scas
sti
push
add
cmp
inc
jp
stc
push
jb
pop
addb
mov
repz
mov
lea
ret
mov
ds
dec
pop
push
repz
bound
jg
push
inc
pop
flds
push
insb
xor
in
ds
repnz
test
adc
lret
dec
sub
daa
aaa
pop
testb
mov
pop
test
cmp
sub
inc
lret
daa
or
dec
out
push
adc
add
xor
xchg
scas
andl
cmpl
ss
pop
sub
mov
sbb
or
in
push
mov
or
out
push
lret
das
adc
in
loopne
orl
arpl
add
mov
mov
movsl
and
outsl
into
loop
push
loopne
xchg
jl
xor
sub
inc
adc
sarl
pusha
jecxz
add
and
add
jb
ljmp
sub
mov
js
out
adc
stos
xchg
scas
pop
lahf
mov
and
in
push
packuswb
sbb
arpl
push
fwait
dec
dec
nop
xor
bound
loope
sti
sarl
add
aam
popa
fisttpl
dec
adc
pop
pop
lea
pop
scas
fmul
loopne
shll
cmp
cmp
pushf
mov
pop
sbb
sti
pusha
mov
mov
inc
ret
dec
mov
sbb
lock
push
aaa
adc
jle
arpl
jg
jecxz
mov
hlt
xchg
popa
mov
cmp
lock
mov
bound
adc
lods
pop
aad
xrelease
popa
pushf
add
mov
lcall
add
adc
loope
enter
pop
imul
xchg
push
lock
xor
mov
lret
test
clc
mov
add
sbb
sbb
arpl
pop
push
sbb
pusha
mov
ljmp
and
cmp
dec
imul
jb
cmp
xchg
xor
mov
lret
lcall
test
sbb
dec
mov
mov
pop
lahf
push
inc
scas
xor
xchg
es
xchg
rcl
adc
shlb
fcoms
fdivrl
xor
mov
mov
shlb
xchg
inc
inc
add
incb
lcall
or
js
xchg
mov
fstps
leave
in
pop
je
push
cmp
les
xchg
push
jno
int
movsb
loope
mov
fcoml
testb
mov
pusha
ficoms
int3
jge
fsubp
lock
fsubrl
mov
xor
or
sub
mov
dec
sub
lods
sbb
stc
dec
hlt
lods
pop
inc
scas
inc
sub
popa
sahf
movsl
lea
mov
test
lcall
lret
xchg
push
inc
pop
addr16
ljmp
aad
xor
test
je
mov
or
jg
push
test
dec
jne
mov
or
cmpsl
mov
ljmp
dec
and
cwtl
and
sbb
jnp
imul
dec
jo
shll
or
jge
cli
push
xor
jp
cmp
imul
sub
xor
cmc
jb
dec
cmpsl
xor
out
in
xor
shrd
adc
mov
pop
mov
mov
or
nop
decb
stos
xor
jp
mov
out
and
sub
call
sbb
pop
adc
xchg
das
push
in
jbe
movsb
fsubs
pop
or
lret
jl
nop
xchg
pop
push
add
fstl
mov
xor
sub
sub
xchg
int3
fildl
xlat
xlat
or
xchg
adc
sub
mov
rol
pop
pop
sti
popa
adc
sub
into
clc
mov
mov
push
inc
shlb
inc
xacquire
xchg
push
xchg
inc
int3
int
ljmp
test
xchg
cmp
fdivrs
cmp
or
add
push
fldenv
mov
out
lret
bound
insl
fsubl
cmp
repz
lods
xchg
mov
scas
or
psrlw
loope
add
lret
add
icebp
jnp
and
mov
xchg
je,pn
inc
scas
add
push
in
jmp
data16
loope
call
dec
push
push
push
jmp
xor
aam
arpl
pop
add
pop
leave
scas
pop
dec
xchg
test
xor
cwtl
jne
inc
hlt
iret
mov
cmp
pop
mov
push
cwtl
or
repnz
repz
arpl
dec
fildl
lods
out
and
es
iret
out
rorb
addr16
and
dec
inc
adc
push
mov
adc
fistpll
add
stos
mov
add
lds
xchg
dec
sar
push
add
pop
je
scas
popa
leave
mov
dec
add
pop
or
rolb
int
negl
lahf
in
popf
fsub
mov
dec
sub
pop
sti
xchg
pop
out
jnp
int
lock
insl
neg
dec
shll
jno
xchg
pop
mov
leave
test
cmpsb
adc
fwait
mov
cmpsb
cli
shlb
cmp
les
loop
sub
or
bound
jnp
aam
lcall
mov
ss
ds
lcall
testb
icebp
sub
jnp
shr
mov
push
call
or
in
pushf
add
xor
sub
xor
dec
xchg
aas
jp
jae
rcll
push
jae
mov
jp
add
add
dec
pop
dec
sbb
stos
inc
cltd
shr
cmpl
outsl
movsb
xchg
scas
dec
ficoms
enter
das
mov
mov
jge
enter
into
vpperm
mov
mov
pop
mov
loop
push
mov
jmp
rolb
dec
cmc
push
pushf
mov
sbb
sub
lcall
popa
mov
cmp
add
adc
mov
and
mov
pop
iret
inc
jns
mov
or
xor
pop
popf
fnsave
aas
sbb
stos
fisttps
jmp
inc
test
shr
mov
mov
adc
adc
xor
or
clc
mov
int3
inc
sbb
push
pop
mov
inc
or
shlb
lock
cmp
jnp
xchg
int
jmp
or
mov
mov
jns
aam
cwtl
jg
pop
fxch
in
inc
push
sarb
cld
loop
fidivs
cmp
pop
sbb
cmpsl
mov
cmpsb
in
sbb
in
shlw
adc
movd
xchg
hlt
add
push
insb
adc
jp
add
rclb
inc
push
fidivs
nop
push
jge
adc
repnz
cmp
insb
mov
in
mov
pushf
inc
loopne
adc
sub
call
cmp
fnstsw
in
stos
mov
and
jnp
pop
and
stc
test
cmp
fistpl
bound
pop
leave
mov
jbe
lods
pop
dec
adcb
test
lahf
sbb
test
clc
insb
sti
sub
pop
call
mov
in
push
xchg
pop
daa
outsl
or
hlt
push
cmp
xchg
and
jnp
mov
and
push
ds
into
jecxz
jne
ret
cmp
jl
xchg
test
sti
mov
add
sub
inc
sbb
add
repz
jle
fmul
push
imul
mov
push
lret
js
stc
pop
dec
adc
sub
sub
xor
mov
leave
pop
addl
fcmovu
cmp
fs
out
add
movsl
mov
fldl
add
sbb
dec
inc
int3
data16
fcomip
jmp
xchg
sub
jmp
add
aam
mov
mov
outsb
sbb
dec
inc
cmp
dec
pushf
add
bound
and
adc
mov
sarl
inc
sub
shl
jecxz
repz
jnp
cmp
dec
jle
and
pushf
ljmp
popf
pop
inc
or
xor
out
ret
sub
mov
cmp
jns
aaa
cld
cwtl
ret
pusha
inc
xor
cltd
push
cmp
sub
push
lock
sub
ja
sbb
mov
add
cwtl
fdivl
call
dec
int3
aad
xor
ret
sbb
imul
cmp
cltd
inc
stos
pop
pop
mov
aas
add
xchg
stos
mov
adc
ret
adc
mov
stc
stc
mov
cmp
jae
ja
pusha
jle
sti
jecxz
daa
fstps
pop
jae
push
daa
pop
and
nop
lahf
xor
add
aas
or
push
and
jmp
adc
dec
inc
cltd
stos
pop
sub
mov
pushf
out
pop
lgs
mov
loop
push
mull
dec
add
pop
ret
push
inc
add
clc
and
mov
push
jo
mov
in
push
pushf
pop
test
adc
pop
cmp
inc
jmp
out
pop
sub
mov
stc
cmpsl
adc
sti
movsl
call
mov
sbb
popa
stos
es
mov
fdiv
popa
jns
sub
test
mov
lret
in
test
ret
loope
out
mov
movsl
jae
jbe
mull
dec
mov
jnp
imul
movsl
mov
adc
mov
mov
lods
cmpl
mov
popf
xor
lods
cltd
sub
mov
addr16
cmpsb
sarl
pop
scas
movsl
dec
or
sarb
outsl
data16
leave
ljmp
es
jnp
es
hlt
push
add
ret
fldl
and
mov
push
stos
add
cmpsl
push
cmpsb
push
insl
push
dec
in
dec
rcrl
xchg
jns
cmp
mov
rclb
xlat
xor
and
jecxz
and
dec
push
jnp
fwait
aaa
jmp
xor
ds
push
mov
pop
push
outsb
iret
push
push
test
cmpsl
mov
xchg
orb
add
and
jo
cmp
lret
ret
xchg
shr
xchg
sub
fcompl
mov
push
loop
scas
dec
ja
mov
popa
sbb
inc
mov
aaa
cmp
daa
add
arpl
arpl
mov
add
ljmp
xchg
shll
in
lods
jb,pn
out
es
pop
lcall
imul
adc
and
cmp
imul
in
adc
sti
jne
pop
xor
jecxz
fs
cld
adc
cmp
aaa
mov
out
popf
loop
mov
or
mov
repnz
fcom
mov
incb
push
icebp
xchg
sub
mov
out
mov
xor
ds
loope
mov
add
mov
mov
cmc
inc
cli
add
add
imul
cmp
cmpsb
xor
push
clc
sub
mov
aam
pop
in
rcrb
fadd
scas
mov
sub
gs
repnz
mov
dec
pop
push
sub
test
fmuls
je
outsb
push
in
and
push
sbb
mov
add
xor
sar
dec
xor
leave
in
dec
sbb
push
xor
fdivrl
fstpl
sbb
shrl
bound
cli
xlat
or
testb
ja
fpatan
pop
mov
xchg
add
ret
push
movsl
je
loope
les
cltd
negl
inc
cmp
out
xor
cmpsl
add
hlt
call
xor
shrl
pusha
sub
sbb
mov
aaa
or
xchg
lret
fiaddl
inc
bound
pop
mov
sub
or
push
inc
fadds
into
inc
sub
mov
jae
xchg
pushf
stos
out
push
scas
andb
ret
xchg
mov
mov
pop
xor
clc
and
ljmp
inc
ret
jp
pushf
sub
jbe
and
jp
mov
cmp
into
subb
sti
pusha
mov
aas
lods
cmp
std
mov
mov
and
shrl
out
addl
sbb
dec
xchg
daa
xor
mov
lds
dec
clc
inc
push
ret
mov
out
cmpsl
sarl
jle
add
out
sub
xor
adc
add
push
adc
pop
inc
jnp
mov
cmp
scas
mov
clc
es
dec
jae
dec
fs
lods
and
test
lcall
pop
mov
jnp
and
data16
add
mov
push
push
pop
js
cmpsb
xor
mov
fdivrl
pop
mov
int
es
xchg
sarl
fsubrl
push
push
mov
xor
mov
cs
fldl
sub
mov
in
add
xor
push
mov
cmp
sti
pusha
test
pop
andl
dec
les
xor
out
int3
jb
jl
mov
mov
mov
imul
xchg
shll
sub
lods
ficoms
sub
mov
inc
mov
std
cmp
xchg
rorl
out
ds
jae
jns
aam
pop
inc
repnz
pushf
mov
in
out
xor
pop
insb
cli
add
movsb
sbb
and
dec
outsb
add
nop
add
add
or
clc
push
addr16
jnp
sub
outsl
sbbb
test
pop
inc
lock
psrad
in
mov
mov
sarl
sbb
lock
mov
out
ret
mov
xchg
orl
pop
int3
jecxz,pt
jl
xor
jbe
bound
repz
ljmp
out
inc
adc
xor
mov
mov
int
add
movb
push
cmc
xchg
mov
xchg
icebp
adc
inc
idivb
mov
std
jl
mov
aaa
popa
mov
out
xchg
add
ds
gs
aam
adc
daa
stos
inc
std
and
insb
mov
aas
dec
dec
lret
test
mov
mov
xor
int
lahf
test
pop
aam
pop
out
pop
cmp
push
jmp
shll
mov
js
iret
imul
sahf
stos
cld
fmuls
daa
adc
nop
and
jge
add
pop
stos
movsb
cmp
mov
sub
movl
adcb
dec
jle
mov
mov
fimuls
addr16
add
push
mov
shlb
in
pop
mov
inc
pop
and
mov
or
jo
loope
add
sub
sbb
push
inc
inc
cmp
and
jge
hlt
adcb
xlat
mov
call
push
stc
sub
push
data16
cmp
in
ret
dec
gs
int3
pop
xchg
cld
adc
cwtl
mov
add
xchg
dec
jnp
xor
pop
jmp
inc
dec
jae
js
push
adc
push
fwait
cmc
test
mov
fmul
inc
push
mov
lods
mov
sbb
mov
je
pop
sti
sub
push
push
push
adc
sbb
fsubrl
adc
fcoml
cmp
les
push
repnz
imul
pop
es
push
test
mov
cmp
cmp
push
and
or
mulb
loopne
mov
pop
cmp
inc
sbb
xadd
or
fdivs
and
mov
and
and
in
adc
outsb
inc
dec
mov
and
inc
fwait
sub
dec
pop
xlat
mov
xchg
dec
rcrl
push
loopne
sti
or
rorl
and
jp
arpl
cmp
mov
mov
bound
adcl
xchg
gs
adc
fwait
pop
pop
adc
xor
and
push
lods
jae
bound
dec
sub
push
xchg
pop
jp
jecxz
push
call
pop
xchg
pop
jno
and
fistpll
xchg
pop
icebp
sbb
jmp
data16
outsl
or
neg
push
std
mov
adc
js
mov
jne
rorl
dec
mov
xchg
mov
fdivrs
pop
add
and
shll
movsb
push
int
dec
and
xor
out
xchg
cltd
sbb
dec
mov
mov
xchg
mov
dec
fbstp
mov
fucomi
mov
xchg
arpl
sbb
pop
ret
and
bound
pop
sbbl
mov
sub
pop
xor
stos
cmp
adc
out
or
sbb
pop
leave
test
adc
aam
lock
pop
js
loopne
fists
mov
xchg
movsb
ret
jecxz
mov
roll
xor
sbb
pushl
cwtl
dec
imul
fsubrs
dec
cmpsb
adc
jmp
cmpsl
out
enter
sbb
ret
loope
xchg
cmpsb
and
loop
add
scas
jg
adc
mov
loope
pop
pushl
sbb
out
jns
dec
push
pop
pop
mov
outsb
stc
jns
fsts
dec
pusha
inc
pop
cmc
inc
int
in
xor
adc
dec
mov
xor
dec
cmp
xchg
daa
dec
mov
ror
inc
sub
jo
vpshaq
xor
sub
iret
ss
mov
icebp
testb
and
dec
jge
aad
mov
and
jg
jmp
push
pusha
rorb
pop
inc
scas
add
push
push
lret
ret
sub
mov
loop
mov
jns
inc
ret
mov
mov
pop
inc
stc
jp
xor
enter
or
jmp
mov
inc
or
add
mov
loop
jp
jecxz
push
in
mov
scas
mov
push
lahf
pop
sahf
jge
mov
ljmp
push
lahf
pop
test
rclb
inc
pushf
or
sbb
or
fdivrl
mov
je
jo
mov
add
jnp
nop
jmp
in
out
add
je
out
inc
push
pop
cmp
inc
test
imul
idivl
out
gs
jl
sbb
fs
test
adc
sbb
fsubs
shr
and
add
and
loope
adc
mov
clc
stos
pop
ret
push
sbb
pop
xchg
pop
mov
mov
fwait
inc
ds
sti
jl
loope
sub
add
dec
addr16
push
icebp
and
cmp
lcall
adc
mov
xchg
mov
cmp
xchg
cltd
addr16
sbb
pop
popa
cmp
push
aad
mov
mov
enter
add
dec
push
clc
inc
rolb
or
or
outsl
jmp
test
and
cmp
and
push
xchg
cld
enter
lds
out
push
nop
lea
fbld
mov
out
xchg
pop
sub
xchg
imul
rorb
in
and
jns
test
outsl
add
test
dec
pop
mov
mov
out
jae
orl
or
fdivr
hlt
int3
aad
lods
fcmovnb
sub
addb
dec
sarl
testl
adc
sarb
ror
imul
bound
fsubs
inc
inc
jecxz
sbb
scas
mov
cmp
fwait
icebp
scas
add
mov
cld
dec
dec
xchg
jae
addr16
inc
mov
test
loope
adc
fwait
jg
mov
into
cli
fstpl
cmp
out
mov
sarl
mov
jmp
xlat
inc
push
shll
std
in
mov
rolb
xorb
mov
cmp
out
add
xchg
dec
int
mov
lea
cmc
jne
lods
shll
push
enter
scas
add
jb
cmp
adc
xor
inc
popf
dec
cmpsb
or
loop
fnstcw
out
push
cmp
and
ret
lcall
dec
and
push
add
insl
aaa
xlat
jbe
jns
mov
shll
adc
mov
sbb
test
iret
popf
jb
lea
mov
mov
es
ja
xor
mov
inc
es
adc
loop
push
aam
push
jmp
loopne
push
ficoml
dec
mov
push
sub
xor
fs
jg
push
inc
xor
mov
push
ja
leave
pop
clc
cmp
sub
addr16
push
dec
pop
xlat
popw
mov
mov
mov
push
sbb
icebp
push
fstp
stc
fucomp
add
loope
ja
in
call
lret
jmp
xchg
push
mov
xlat
dec
in
ljmp
stc
pop
jmp
and
push
mov
lahf
mov
jp
or
insb
cli
clc
mov
lods
fbld
lret
jbe
frstor
pop
int3
icebp
mov
data16
aas
xchg
sahf
call
aas
stc
or
std
stos
adc
mov
mov
inc
push
enter
jp
mov
movlps
iret
mov
lahf
or
jmp
mov
out
xlat
pop
insb
push
xlat
jp
iret
and
aad
stc
push
sbb
fisttpl
sub
pop
xchg
mov
mov
rcll
daa
inc
hlt
sbb
cmc
push
xchg
daa
push
xor
mov
pop
sub
xor
sbb
in
mov
lcall
xchg
adc
cmp
int3
subl
rcl
out
pop
lret
xor
loopne
cmc
es
adcb
sti
adc
xorb
jp
mov
sub
jge
sub
push
xor
sbb
out
mov
inc
int3
dec
iret
sbb
fidivrl
xor
iret
inc
inc
test
sub
and
mov
push
call
sbb
cltd
or
scas
xor
insb
scas
jne
xchg
loopne
or
bound
pusha
shr
mov
fprem1
xchg
movsl
inc
push
push
decl
fimuls
inc
out
pop
lock
push
ja
inc
movb
mov
out
mov
xchg
orl
test
sti
mov
clc
push
out
xor
mov
jecxz
fisttpl
jg
xchg
mov
mov
fcomps
add
jns
add
pop
xchg
cld
in
setg
stos
rcll
iret
adc
loope
popf
icebp
addr16
icebp
pop
xchg
sbb
aad
dec
mov
in
sahf
pop
in
aas
movsb
daa
adc
imul
adc
cltd
fwait
ret
xchg
fcom
fimuls
mov
test
lods
mov
jmp
xor
inc
in
test
fisubl
pop
shl
imull
mov
pop
pop
out
inc
lret
push
xor
imul
mov
sub
sarb
dec
xlat
inc
inc
xchg
pop
dec
repz
mov
fcom
addr16
sub
mov
popf
xchg
mov
dec
mov
pushl
test
or
or
pop
negl
cmpsb
mov
or
sarl
int3
jecxz
sub
andl
mov
add
jno
push
ret
cmp
xor
mov
jb
scas
adc
aam
push
add
stos
out
xor
and
inc
dec
ds
or
lret
and
push
jo
mov
mov
inc
push
inc
daa
out
xchg
push
imul
jne
pop
or
test
outsb
jmp
mov
popf
or
adc
mov
enter
shll
push
pop
or
push
push
mov
inc
push
pop
out
sub
loop
sarb
inc
push
xor
sub
faddp
sbb
loop
mov
push
ljmp
sub
in
loop
loope
mov
sbb
imul
sti
xor
lods
pop
outsl
mov
dec
scas
clc
adc
push
rolb
daa
mov
pop
mov
xor
inc
jo
mov
loopne
stos
fildl
and
int
add
cmp
mov
jmp
dec
out
mov
mov
mov
pop
nop
mov
std
xrelease
cmp
push
or
mov
mov
shl
jg
inc
aam
mov
sub
stos
sbb
or
out
and
es
das
cltd
lods
jbe
dec
shrl
out
cmp
pop
sbb
ds
xchg
jne
outsl
out
jo
push
aad
loopne
cmp
xor
dec
enter
push
out
addr16
cld
jle
sbb
mov
pop
adc
pop
jno
enter
scas
or
mov
addr16
int
jg
jmp
jae
mov
and
shlb
popa
push
add
add
int3
lds
ret
ret
stos
div
inc
xor
inc
jb
cmp
cltd
inc
pop
fstpt
mov
xor
sahf
adc
jb
daa
es
push
scas
fldcw
sti
inc
mov
sub
pusha
loope
int3
testb
popf
mov
mov
movsb
rcr
or
xor
outsl
xchg
fsts
xchg
scas
popfw
addr16
movsb
lcall
mov
ret
out
mov
cmp
test
dec
and
js
faddl
idivl
mov
call
pop
mov
fimull
xor
ret
test
test
ljmp
divb
cmp
or
push
inc
or
push
adc
cmp
loope
xchg
mov
adc
cmp
and
inc
jge
pop
mov
adc
mov
jne
ret
and
adc
out
pop
or
pop
mov
enter
jle
in
sarl
add
or
mov
push
mov
mov
loope
cmp
mov
jo
sbb
inc
cltd
lds
popl
xchg
sub
ds
sub
movsb
fldl
cmpsb
dec
pop
das
sbb
pop
push
das
dec
pop
add
sub
testl
scas
sbb
push
nop
pop
addr16
push
sbb
icebp
dec
pop
push
inc
aad
lret
popa
fbld
ficoml
cmc
jb
cld
xchg
mov
stc
loop
and
fiaddl
mov
sub
jmp
sbb
cmp
pop
notl
jmp
aad
gs
mov
test
and
and
data16
cld
dec
sbb
add
imul
mov
xchg
roll
sub
outsl
fsubs
dec
out
push
jp
fnstenv
mov
cmp
and
fsub
lds
jno
scas
push
xchg
and
and
stos
or
pop
pop
adc
ja
jb
outsb
mov
xchg
adc
out
dec
dec
ffreep
push
cwtl
loopne
cmp
fnstenv
les
cmc
and
dec
mov
hlt
jno
xchg
repnz
clc
jo
pop
rcll
stc
lret
xor
in
push
xchg
imul
and
in
cmp
adc
sub
mov
and
sub
jb
out
pushf
rolb
mov
push
push
mov
mov
sbb
xor
mov
push
add
sub
pop
or
or
mov
pop
xchg
mov
jbe
push
ret
aam
ljmp
dec
test
popf
lods
adc
cmp
mov
and
out
cltd
push
out
mov
imul
and
jecxz
mov
dec
arpl
cmp
sbb
mov
syscall
dec
jnp
incb
mov
pusha
insb
push
lret
lock
mov
nop
inc
lods
inc
jo
push
jb
scas
adc
movsl
sbb
ret
cmpsl
scas
cmp
dec
jge
cmp
loopne
adc
mov
push
loop
ds
in
pusha
adc
inc
pop
imul
ljmp
pushf
inc
dec
cmc
adc
cmp
mov
jmp
ret
mov
pusha
dec
push
adc
xor
das
jno
shlb
lock
dec
xchg
sub
stos
int3
or
cmp
lcall
test
sub
loopne
push
cmp
or
orl
mov
push
inc
lret
jne
mulb
sbb
hlt
repz
aam
faddl
push
dec
mov
nop
jp
or
xor
mov
cmp
data16
mov
push
fildl
jmp
or
pushf
xlat
test
push
xchg
je
mov
mov
and
adc
mov
arpl
fcmovu
loope
pop
and
pop
xchg
pop
inc
dec
lret
ja
popa
jecxz
std
roll
cmp
and
cmp
shrb
cmp
inc
and
ret
push
mov
sbb
rcrl
call
xchg
sahf
ja
mov
data16
out
mov
or
xor
outsb
cli
cwtl
mov
loop
and
cwtl
addr16
cmp
repnz
inc
cmp
xor
ss
cmp
into
sbb
stos
mov
cltd
jl
adc
mov
sbb
icebp
ss
pop
jno
xor
ljmp
int
cli
dec
sbb
movsl
cwtl
ss
pop
test
xchg
js
adc
mov
aam
addr16
sub
ss
push
inc
imul
hlt
xchg
xor
pop
into
jmp
pop
inc
scas
loop
pop
xor
jle
mov
into
negl
enter
jnp
lcall
jle
les
pop
lahf
mov
push
cmpsl
cmp
mov
jns
sub
push
cmpsb
jo
jle
inc
add
push
inc
xor
sbb
mov
outsb
rolb
adc
enter
jo
ss
daa
jmp
adc
je
mov
popl
mov
les
jns
movsb
cli
sarb
sub
out
icebp
fists
popa
insb
sub
and
jno
cltd
and
sub
ds
repnz
imul
or
test
fwait
idivb
push
shrl
adc
xor
or
das
int
or
shll
jmp
cmpsl
ja
jo
fldenv
fistpll
add
iret
and
jbe
jl
xchg
jns
fstps
int3
or
jnp
jg
shl
pop
add
movsl
jmp
fdivl
int
jge
or
xchg
sahf
inc
push
xor
cmp
sbb
insb
fdivr
repnz
pop
or
es
pop
ret
lock
leave
test
push
pop
push
cmpsb
push
push
lcall
fsubrp
mov
inc
arpl
inc
je
add
inc
mov
mov
jmp
adc
lds
xor
fcom
ret
add
fwait
mov
add
div
jecxz
mov
inc
cmpsl
xchg
inc
pop
shl
in
sbb
rep
sbb
jo
pop
and
or
rcl
out
lods
lea
mov
pop
pop
adc
sbb
and
lods
xchg
cmpsb
stc
xor
fld
xor
xorl
jg
jno
fisubrs
jo
jmp
push
xor
xchg
push
or
shlb
mov
mov
sti
or
mov
mov
repz
mov
and
or
pop
mov
xor
add
insl
inc
and
aam
call
andl
xor
loope
scas
cltd
xlat
xchg
pop
aam
sbb
xor
or
jno
cmp
lods
dec
insl
xlat
pop
push
lcall
dec
lcall
adc
cli
pop
inc
aam
jo
pop
xchg
insl
pop
mov
mov
dec
xor
adc
and
jg
mov
test
inc
push
or
and
out
in
cs
mov
cltd
test
mov
or
stc
movsb
xor
clc
cld
pop
cmp
imulb
push
test
lret
mov
inc
mov
push
lcall
pop
aad
cmpsb
icebp
inc
xchg
negl
xchg
xchg
into
leave
dec
jmp
push
dec
mov
lret
jo
stos
xor
lods
cmp
mov
inc
lock
pop
ljmp
mov
hlt
shrb
int3
nop
sahf
xlat
xchg
cmp
sti
mov
and
fs
cli
xchg
pop
xor
nop
jg
test
lret
or
jl
cmp
inc
es
sbb
xchg
nop
popw
or
aad
mov
lds
mov
xlat
inc
pop
jbe
sub
jbe
cmp
das
xchg
push
rorb
mov
push
movsb
jno
nop
and
lcall
and
arpl
inc
in
sub
in
inc
pushf
mov
adc
lock
dec
push
bnd
cmp
outsb
std
sub
stos
test
or
sbb
pop
mov
es
adc
in
stos
sahf
popa
movsb
lock
insb
pop
dec
inc
add
cmp
and
lods
gs
gs
lahf
ficoml
mov
aam
xor
repz
aas
or
sar
mov
adc
mov
js
cmpsl
lahf
pop
rcrl
and
xchg
xlat
push
sar
cli
sbbb
mov
lret
jb
xor
test
adc
jp
adc
add
in
cmp
push
lock
pop
cs
lcall
mov
add
pusha
arpl
and
fwait
insb
push
rcl
xlat
iret
fsubrs
inc
and
adc
sub
jo
and
jmp
push
push
jns
mov
lar
mov
and
xor
sti
mov
aam
cmp
es
push
mov
add
pusha
testb
imul
mov
insl
push
adc
and
out
fs
mov
into
out
adc
in
outsb
add
mov
xor
sub
and
lcall
and
inc
leave
or
jo
or
push
stos
sbb
lcall
ja
loop
mov
xor
js
add
into
movsl
push
pop
push
mov
pop
loopne
lret
in
sbb
push
xor
ss
pop
shlb
les
jno
iret
cwtl
mov
xor
sti
shr
sbb
xor
stc
dec
or
mov
xchg
cmpsb
sub
lcall
add
enter
add
out
faddl
and
fs
cli
movsl
jmp
pop
xor
cmpsl
cld
test
mov
or
fwait
pop
loopne
pop
mov
add
add
mov
cmp
mov
mov
rcrl
mov
mov
cmp
shrd
aaa
out
insb
mov
and
test
xor
outsl
inc
pusha
push
test
jnp
clc
imul
jle
mov
ret
xrelease
rcrl
scas
xor
xbegin
in
mov
sub
mulb
or
dec
int3
cmp
js
or
or
sbb
in
and
icebp
jnp
dec
out
xorb
fnstcw
jne
inc
pop
mov
add
sub
lock
inc
imul
shll
push
dec
in
mov
leave
add
mov
jae
rcrl
jecxz
cmpsb
push
dec
js
sub
xchg
jge
aaa
mov
sub
xor
jmp
mov
mov
mov
invd
vmread
mov
pop
imul
rolb
fsub
ficomps
iret
test
and
mov
jp
push
mov
mov
jmp
sahf
jmp
sarl
pop
sub
das
loope
inc
mov
repnz
inc
mov
mov
cmp
popa
roll
pop
jp
inc
mov
pop
ja
sbb
xchg
bnd
pop
inc
int
cwtl
call
scas
ljmp
repnz
scas
mov
fcoms
pop
jl
in
jo
fcmove
imul
scas
fsubp
adc
adc
dec
ret
pushf
lods
xchg
sub
mov
repz
pushf
dec
pop
popl
ficoml
fsub
in
pushf
sub
dec
arpl
lea
jnp
jo
mov
dec
mov
jo
push
jl
xlat
repnz
into
adc
inc
jge
pop
cmp
adc
ja
lret
inc
pop
xchg
cmp
ficoml
push
ja
pushf
mov
inc
adc
int3
xchg
out
mov
sbb
addl
xor
movsl
mov
jmp
mov
jnp
cld
fnstenv
xchg
rcll
cmp
or
cs
jnp
outsb
inc
test
xchg
mov
ret
addb
test
ret
roll
and
test
cmp
mov
daa
mov
clc
ja
aam
or
and
and
popl
jp
cmp
or
mov
fadds
xchg
test
push
dec
lods
in
lahf
jge
in
fxch
push
mov
test
aas
mull
cld
xchg
lahf
scas
mov
addb
push
or
dec
cwtl
test
and
into
sar
mov
aad
stos
int
xor
mov
insl
jnp
or
mov
mov
ret
jmp
insb
xchg
ret
in
adc
add
dec
sarl
jb
subl
sub
sub
add
xchg
int3
jo
fiadds
cmp
dec
imul
dec
pop
push
test
das
mov
or
lcall
dec
xorb
jle
stos
jae
xchg
and
push
sub
add
in
lods
push
clc
int3
imul
fs
les
decl
adc
inc
dec
jne
sbb
arpl
mov
int
and
ljmp
mov
lods
loopne
xchg
dec
xchg
mov
test
jl
test
je
lret
or
push
inc
dec
rolb
lea
jno
sbb
mov
inc
pushf
push
fiaddl
jp
shrl
loopne
insl
mov
in
mov
cmp
mov
jl
testl
fcompl
sbb
dec
dec
icebp
rcll
fbstp
test
xchg
dec
iret
lds
inc
aaa
sub
test
lock
inc
gs
in
pop
xchg
iret
test
jle
and
stos
mov
mov
push
pop
sbb
shrl
and
sbb
loope
rorl
stos
pop
js
movsb
adc
fwait
loopne
or
out
dec
push
add
push
test
pop
stos
push
and
jbe
cltd
sti
mov
movsb
cmp
ss
adc
loope
lret
push
rol
adc
ret
cld
test
loopne
jmp
or
mov
pushf
push
cld
sub
lcall
js
fcompl
sbb
or
jb
dec
icebp
sbb
movsl
cwtl
call
fmulp
cltd
vdivss
dec
sbb
out
add
adc
jnp
xchg
lret
cld
stos
jl
lds
adc
popf
es
fiaddl
mov
lods
pop
cmp
jo
fsts
loopne
mov
mov
mov
cmp
mov
xor
adc
es
jl
push
sahf
pop
push
push
push
dec
lea
cwtl
xchg
dec
mov
mov
out
loope
cmp
jbe
clc
fidivrs
cmp
lods
dec
pusha
inc
push
test
insb
clc
rolb
dec
movsb
cmp
mov
call
out
mov
pop
ss
sbb
in
and
daa
inc
xchg
test
aad
jae
je
lahf
outsl
mov
ss
or
cmpsl
xchg
enter
push
sub
mov
shl
xor
jnp
insb
xchg
sahf
shl
xor
xor
test
xor
stos
lock
dec
ficoml
in
jno
sub
cmp
aam
jae
in
xchg
sti
fnstsw
icebp
popa
xchg
icebp
xchg
mov
enter
xchg
sbb
xchg
fldt
inc
inc
out
loop
inc
push
out
adc
add
movsb
mov
adc
sub
or
sbb
test
imull
divb
mov
insb
and
std
mov
bound
sub
loop
addr16
out
outsl
shll
jno
xchg
pop
rep
mov
cwtl
pop
inc
ja
jne
ret
sub
xchg
mov
pop
jae
jae
es
cmp
test
and
mov
and
mov
les
sahf
lcall
xchg
aam
lret
lcall
push
stos
xchg
outsb
test
aas
xchg
jae
scas
xchg
incl
inc
pop
ss
nop
add
lcall
adc
xchg
mov
lcall
enter
ss
jne
dec
cltd
movsl
xchg
lea
xlat
xchg
call
cmp
lahf
jae
in
jp
mov
lcall
addr16
ja
mov
jbe
xor
shrl
rorl
popa
push
and
icebp
lahf
movsl
or
enter
sbb
icebp
js
mov
in
push
in
jmp
push
mov
sub
sbb
shlb
inc
mov
push
jle
mov
mov
adc
ffree
mov
jae
insl
jmp
mov
shll
push
outsl
sbbb
or
bnd
pusha
loope
test
pop
aam
fucomip
lods
jo
cmpsl
aaa
loop
ss
pop
shrl
cwtl
and
add
insl
jnp
sahf
dec
or
push
cmp
int3
cmc
fsubs
jle
dec
pop
in
add
adcb
scas
or
push
out
scas
imul
dec
icebp
mov
loope
xor
imul
test
jecxz
movsl
fnsave
popl
push
aad
cmp
add
add
ja
cmp
inc
push
loope
pusha
push
daa
inc
or
repnz
mov
mov
dec
adc
pop
in
add
lret
out
push
ja
jae
clc
or
je
cld
jb
lret
mov
push
cmp
inc
dec
ficompl
data16
xchg
sub
nop
in
or
lea
and
dec
out
adc
in
xchg
add
pop
mov
and
aam
inc
out
mov
and
inc
adc
and
and
enter
push
or
push
enter
ja
adc
mov
jmp
jb
repnz
lock
jbe
dec
mov
repz
lods
scas
sbb
rorl
xor
mov
cmp
scas
mov
fsubl
or
jne
mov
dec
cmp
mov
lea
push
imul
lods
sbb
fldpi
call
test
inc
movsl
ja
imul
adc
pop
push
es
adc
mov
inc
and
mov
out
and
out
mov
aad
scas
xorb
add
jl
cmpsb
mov
test
sub
es
xchg
push
jns
imul
add
inc
repnz
fldt
adc
ljmp
inc
or
mov
lock
xchg
pop
daa
mov
or
dec
dec
mov
adc
xor
sub
jmp
push
das
int3
xor
adc
xor
je
repz
cmp
pusha
push
adc
inc
mov
push
and
pusha
sbb
int3
std
inc
fs
test
ja
mov
outsl
aam
jp
pop
add
dec
nop
loopne
xor
lahf
push
mov
ljmp
add
adc
call
jl
push
sti
jmp
push
pop
mov
popa
and
shlb
adcl
sbb
dec
cs
scas
sbb
dec
inc
andb
adc
xor
mov
add
sbb
outsl
and
sbb
ficoms
mov
scas
xchg
pop
test
movsb
fistpl
xchg
pusha
jmp
mov
jae
sbb
sar
imul
js
xchg
xor
data16
aaa
jmp
insb
or
push
pop
ss
loop
rol
mov
outsb
dec
dec
in
xor
imul
or
cmpl
stos
int
test
mov
jo
fildl
stc
leave
mov
imul
loopne
fsubl
aad
push
cltd
cmpsb
mov
mov
dec
test
imul
insb
out
addr16
adcl
into
je
xchg
mov
xchg
jmp
dec
sbbb
scas
loop
jo
xorb
or
mov
push
push
aam
aad
mov
xchg
push
xchg
enter
fsubr
cmp
pop
lock
insb
mov
push
imul
pop
mov
dec
test
adc
rcrl
andl
pop
pop
js
add
sbb
adc
inc
nop
das
adc
add
push
cwtl
adc
jmp
ljmp
dec
push
jno
addr16
mov
push
xor
sti
pop
jg
jg
fwait
or
test
test
jnp
xchg
cld
cmp
or
adc
adc
cmp
mov
xor
leave
mov
ret
sbb
sub
or
pop
and
shrb
mov
aad
inc
and
cltd
scas
movsl
scas
stos
cmp
outsb
out
cmp
popa
pop
stos
inc
inc
icebp
insb
mov
mov
ret
jns
fbld
sti
mov
ljmp
icebp
jp
adc
sub
scas
inc
sub
and
std
lock
and
jmp
mov
cwtl
sti
xor
shlb
mov
sbb
push
scas
cmp
jecxz
shrl
lods
jecxz
lahf
and
aas
xor
sahf
mov
inc
pop
push
test
iret
je
push
addr16
andb
dec
jg
pop
dec
add
xchg
push
jg
sbb
test
mov
int
xlat
lods
or
mov
mov
ret
and
pop
arpl
gs
mov
inc
subl
dec
subl
add
ss
pmulhw
aad
sub
sub
movsb
ficompl
cmc
jns
push
bound
in
push
movsl
xchg
or
out
push
push
fbld
adc
cmp
jnp
push
jne
js
sub
ds
sarl
outsb
popa
in
push
mov
rcl
popa
subb
sbb
add
roll
xchg
mov
adc
pop
jl
aam
xchg
dec
add
lea
mov
xor
ja
into
or
pop
inc
sbb
fcompl
xlat
dec
cwtl
fldenv
mov
xchg
mov
cmp
clc
into
mov
xor
adc
jle
lock
push
sub
mov
or
int
mov
or
pop
add
push
cltd
cs
xlat
loop
in
dec
push
sub
cmp
add
and
pop
inc
push
idiv
mov
mov
fiadds
cld
xchg
jnp
test
ss
mov
dec
rcrl
push
inc
xor
dec
cmp
push
pop
jo
add
pop
push
loope
mov
leave
idivb
mov
xchg
mov
repz
cmp
cmp
mov
icebp
lret
test
xchg
or
sub
cmc
stc
jo
call
push
int3
call
mov
mov
cs
movsl
or
sub
cmp
push
cltd
add
mov
pop
fsubs
out
jno
dec
testb
fistpl
lods
sub
mov
sti
ret
sbb
ficoml
loope
cli
push
and
fs
jae
mov
and
inc
and
mov
iret
lret
js
in
mov
push
mov
stc
test
push
or
mov
xchg
and
das
mov
pop
push
xchg
ret
es
dec
cmpsb
sub
inc
cld
and
mov
test
xlat
pushf
scas
mov
xor
lcall
mov
sbb
arpl
and
out
mov
or
xchg
je
dec
fnstsw
scas
scas
or
inc
adc
repnz
gs
or
orb
imul
leave
loopne
jb
imul
xchg
stc
ret
jmp
repz
cwtl
push
dec
xchg
pop
push
xchg
stos
push
mov
fsts
add
mov
dec
inc
fsubrl
daa
push
inc
cmp
cmpsl
test
cld
pop
imul
inc
js
xor
and
in
jno
add
mov
dec
icebp
daa
jae
push
aad
jle
cmp
stc
pop
stos
dec
or
jns
repz
sub
cmp
outsb
nop
icebp
or
pop
jg
call
insl
out
repnz
push
pushf
ret
std
jae
es
or
mov
jno
dec
xchg
sbb
stos
jecxz
int3
out
and
mov
les
adc
fcomps
les
or
pop
mov
xchg
push
ds
lahf
fldcw
inc
aaa
xchg
inc
sub
mov
dec
push
add
or
fimull
push
pushf
mov
icebp
arpl
mov
aad
into
xchg
nop
sbb
cmpsb
sbb
pop
sahf
xchg
or
xor
fs
lods
shlb
dec
addr16
outsb
mov
je
mov
out
sbb
jecxz
fs
inc
js
and
dec
cmpsl
jbe
xchg
push
pop
jle
jno
ljmp
cmpb
repz
sbb
cmc
mov
clc
sub
adc
mov
sub
out
xor
jl
mov
xchg
inc
fs
mov
xor
cltd
sub
pop
mov
push
cmpsl
pop
and
rolb
sbb
iret
and
cwtl
jecxz
aad
push
leave
mov
push
mov
xchg
jb
cmp
dec
int
dec
add
pop
mov
pop
mov
jo
movsl
push
fldpi
repnz
mov
mov
mov
mov
pop
adcl
sarl
fstpl
sarb
dec
pop
lahf
sub
add
sahf
mov
adc
pop
int3
out
ja
inc
and
add
fisttpll
add
add
xchg
push
lods
popf
sub
subb
push
mov
mov
push
inc
out
ret
jo
ret
testb
int3
fmuls
push
ror
stos
sbb
aas
xor
adc
fwait
lahf
pop
test
or
and
cli
js
clc
push
enter
mov
std
jns
push
push
cmpsb
ss
imul
pop
dec
loopne
mov
cwtl
out
adc
mov
push
clc
jno
stos
in
lret
dec
insl
loopne
aad
cs
and
push
repnz
cli
les
or
inc
outsb
gs
shr
cli
adc
je
mov
movsb
cs
xchg
dec
aaa
or
inc
mov
scas
push
dec
jl
js
dec
nop
scas
jl
dec
sub
add
adc
popf
pop
pusha
dec
inc
cwtl
pop
data16
shll
adc
push
sub
notb
mov
and
fwait
cwtl
dec
jmp
aad
mov
mov
inc
push
cmp
and
or
inc
rcl
popa
and
scas
aad
loope
adcb
jbe
push
dec
ret
xor
aas
out
add
and
and
jns
into
push
rorl
fidivrl
pushf
cmp
pushf
dec
fnsave
inc
lea
ret
ljmp
dec
cltd
dec
pusha
jbe
mov
pop
sbb
pop
shr
arpl
xchg
js
sbb
les
jnp
xor
pop
int
mov
jmp
out
call
jecxz
insl
fincstp
sbbb
pop
std
mov
sub
xor
std
test
push
leave
fcmove
cltd
mov
dec
push
pop
sub
dec
sbb
push
cwtl
xor
cs
mov
insb
and
fsub
sbb
aas
imul
loop
lahf
xchg
sti
cmp
into
lcall
adc
xchg
aam
das
iret
insl
mov
ja
hlt
mov
dec
call
mov
or
xchg
or
out
movsl
fstpt
pop
into
dec
ljmp
or
les
and
add
imul
push
pop
and
je
xlat
xchg
data16
ja
call
in
push
pop
imulb
or
out
or
je
ret
fldenv
loope
lods
mov
and
cld
mov
sub
pop
push
inc
insb
cli
addr16
cmp
les
fwait
ja
fstpt
mov
adc
je,pt
ret
insb
es
xor
xor
sbb
cmp
gs
jmp
mov
mov
mov
xchg
cmovg
mov
mov
fsubr
jl
sarl
lahf
mov
aam
idiv
outsb
xor
xchg
mov
mov
inc
add
insb
cltd
add
cmp
fwait
shl
hlt
inc
mov
or
stc
cmpl
mov
add
std
lea
push
inc
ds
adc
insl
add
loopne
dec
es
mov
jbe
adc
push
mov
in
add
cmp
push
pusha
push
mov
dec
out
push
flds
jmp
nop
scas
rorb
push
cmc
pop
cmp
jns
cmp
loop
lods
sbb
dec
shll
xor
lahf
dec
push
sub
dec
js
xor
jp
stos
or
loopne
cmpb
fcoml
pop
repz
stos
dec
ret
faddl
jle
xchg
mov
inc
insl
mov
lock
dec
sub
xlat
nop
cli
push
push
pop
mov
imul
push
push
imul
and
sti
mov
jmp
aaa
data16
dec
adc
movsl
pop
daa
cwtl
out
inc
leave
rorb
cmpsl
rcrb
cmc
dec
test
pop
icebp
adc
popf
imul
fs
jb
stos
sub
mov
clc
xchg
popw
xor
cld
pop
rcrb
das
mov
xchg
repz
mov
shrl
mov
gs
rclb
arpl
pusha
mov
push
inc
xor
sbb
dec
popa
test
mov
sub
pop
mull
pushf
mov
and
sti
cld
sub
aaa
mov
jmp
jle
cwtl
push
out
or
pop
icebp
push
pop
roll
frstor
xchg
mov
dec
sub
dec
push
or
xchg
jmp
push
inc
mov
add
divl
ret
lods
mov
mov
mov
dec
fcmove
add
addb
push
cmp
out
mov
sahf
sub
fwait
cmp
fdivs
mov
mov
push
push
subb
ja
add
and
ret
shr
xlat
lcall
and
daa
scas
mov
or
sbb
lods
sarb
in
loop
cmpsb
sub
scas
arpl
sbb
jb
sub
movsb
popa
shlb
cli
in
fcompl
test
sub
inc
jg
fnstcw
cmp
cmpsb
cmpsl
in
jge
mov
mov
pop
adc
push
xor
sahf
lock
bound
pop
dec
test
inc
cmp
jbe
lods
dec
std
in
dec
ss
popf
xchg
mov
daa
cmp
mov
stos
mov
dec
jl
fisttpll
or
mov
out
in
fdiv
mov
pop
ljmp
out
nop
mov
out
adc
sbb
loop
xchg
repz
in
or
sahf
sbb
aad
arpl
fisttps
or
js
cld
mov
ljmp
andps
aas
enter
push
repz
stos
shll
mov
sub
popf
lcall
add
sub
or
xchg
sub
xchg
unpckhps
jmp
fiaddl
lea
sbb
test
inc
je
push
lret
pop
mov
adc
fld
pop
loopne
push
icebp
cmpsl
mov
fdivs
insb
push
js
dec
aad
ficomps
push
adc
lock
das
inc
lea
pop
xorl
xor
jne
add
sub
shll
add
cmp
inc
shrb
jae
sub
outsb
push
adc
jae
xor
data16
adc
jae
xlat
and
dec
nop
cmpsb
test
push
jmp
pop
xchg
inc
or
pop
insl
cs
mov
dec
pop
adc
cwtl
mov
add
pop
xchg
jmp
push
dec
jb
insb
mov
lds
mov
mov
xchg
insl
addr16
cmp
rclb
add
lret
cmp
outsb
outsb
mov
das
jns
test
shrl
mov
lods
or
out
fwait
test
add
fistps
add
imul
loop
pop
inc
adc
cmp
dec
sub
arpl
call
push
mov
dec
jg
insb
adc
mov
call
add
repnz
test
in
mov
in
push
out
push
push
sarl
mov
cltd
cli
in
fmull
mov
mov
js
jle
nop
iret
and
test
call
inc
dec
sbb
sbb
xchg
cmp
dec
call
jne
int
pop
push
and
xor
aaa
shlb
sbb
rcll
or
push
inc
test
lcall
sbb
ficomps
pop
adc
popa
or
jmp
push
out
cmp
jns
jle
mov
cmp
loop
push
adcb
inc
and
stos
cmp
add
out
scas
gs
push
jne
jo
jmp
int3
mov
jmp
call
lock
xor
inc
shlb
js
xchg
pop
add
fildl
mov
daa
stc
scas
dec
pop
out
add
sti
movsb
jge
sahf
bound
dec
sub
cmp
stos
pop
push
aad
xorb
cmpsl
shlb
push
dec
mov
into
xorb
cmp
imul
imul
in
mov
push
testb
cmpsb
xchg
jae
into
ja
outsb
mov
push
pop
movl
mov
mov
adc
mov
mov
jecxz,pt
jge
jne
adc
xchg
cli
pop
cmc
mov
sbb
cs
xchg
pop
fs
xchg
sbb
xchg
sub
pop
jg
sub
out
outsb
cmp
push
push
mov
test
jno
pop
adc
inc
cli
push
pop
xor
mov
iret
jae
push
xchg
dec
imul
notb
ret
inc
aam
stos
push
push
mov
xchg
fcom
push
int
xchg
cld
cmp
sarb
jno
or
dec
add
lock
mov
mov
imul
in
ja
rcrl
aaa
dec
add
mov
rorb
or
mov
movsb
test
orl
shrb
jp
into
jnp
stc
psubd
shl
jne
mov
ret
popf
cmp
jge
mov
add
aam
nop
or
sub
jo
sti
insl
mov
inc
andl
pop
fildll
cld
ljmp
push
xchg
dec
and
jge
dec
repnz
push
and
push
push
sub
rcll
pop
fiadds
aam
sbb
iret
loope
jle
sahf
cmpsb
movsl
mov
cmp
pop
xchg
cmp
int
pop
inc
shlb
sbb
pusha
cwtl
leave
mov
popa
lcall
int
pop
negb
adc
cltd
es
popa
dec
add
out
cmp
or
scas
jo
xchg
insl
mov
dec
jle
cmp
push
sahf
lahf
pushf
pop
lcall
or
cwtl
call
arpl
mov
fidivs
and
hlt
mov
push
leave
inc
scas
sbb
dec
or
xorl
loope
mov
lock
ret
cmp
or
mov
adc
xchg
jo
jo
sbb
adc
clc
mov
adc
cmpsl
je
push
fldt
xchg
mov
or
push
xchg
push
xchg
stos
jl
push
adc
cli
out
and
rol
rcrl
nop
dec
insl
bound
dec
xor
stos
push
xlat
inc
xchg
jmp
cltd
push
fwait
sti
cmp
add
jecxz
inc
and
popf
fisubrl
xchg
loope
push
dec
cmp
getsec
pop
daa
cli
add
cmp
out
cwtl
sub
cmp
nop
pop
stos
stos
adc
fxch
adc
in
sub
pop
hlt
add
scas
imul
popl
mov
ret
xchg
fucomip
loop
andb
loope
dec
jp
mov
pop
mov
jne
inc
xor
arpl
xchg
jbe
fisubrs
scas
rcrb
lds
into
mov
mov
test
mov
inc
push
cmp
test
ljmp
arpl
xchg
mov
ds
pop
mov
and
sub
lods
jmp
fs
adc
cmc
into
std
cltd
fadd
adcl
clc
mov
jp
pop
xchg
dec
adc
jae
popf
xchg
xor
mov
out
dec
scas
fnstenv
mov
jae
dec
dec
jbe
lahf
push
aad
fdivs
movsl
std
xor
cmp
sub
push
jmp
gs
mov
icebp
outsb
push
xchg
adcl
sbb
pushf
ficoml
cltd
pop
adc
jp
push
in
in
ds
stos
cmp
push
jg
mov
mov
mov
jno
jb
imul
cmc
dec
cmp
aaa
repz
test
mov
popl
and
xchg
fidivl
and
scas
in
mov
cmp
sbb
stos
repnz
lods
jg
and
in
sbb
pop
je
sahf
test
fsubrl
push
and
lock
xchg
cltd
adc
sbb
stc
inc
adc
and
or
xor
shll
ljmp
out
fidivs
out
pop
mov
in
jbe
jp
test
incb
cli
orb
popa
subb
and
cmp
daa
push
mov
pop
out
cmp
xlat
notl
repz
mov
mov
das
add
lcall
int
mov
mov
data16
in
js
jb
fwait
dec
mov
cmp
je
icebp
mov
popf
pop
or
inc
pop
stos
imul
xchg
dec
jg
sub
lea
adc
in
dec
loope
aaa
test
popf
push
mov
out
sbb
cld
lcall
cli
scas
stc
bound
getsec
gs
jns
sub
mov
push
cwtl
andnps
inc
jb
add
dec
lock
xor
aaa
nop
sbbl
jae
int
mov
pop
fldt
adc
pop
sbb
scas
dec
xlat
mov
movsb
adc
sbb
or
mov
push
sbb
popf
fcmovnu
into
dec
ret
cli
jne
hlt
bound
into
pop
fnstsw
push
movsb
aam
dec
xchg
pop
jmp
incb
shlb
cmpb
fidivrs
rol
push
shlb
xchg
xchg
hlt
faddp
or
std
mov
ds
and
xchg
call
iret
cli
scas
mov
mulb
sarl
adc
mov
je
xor
enter
sub
fisubrl
or
scas
inc
loop
push
ja
ret
fldenv
sahf
push
mov
add
int3
fcompl
xchg
inc
test
pop
adc
lcall
lods
stos
les
lods
sbb
xor
in
push
inc
sarb
mov
xor
pop
and
les
nop
mov
stos
std
xor
repnz
xchg
movsb
cmp
lret
and
repnz
cmp
lahf
iret
shl
inc
fiaddl
popf
addr16
stc
and
test
ss
dec
cmp
pop
mov
idivl
jbe
aaa
ja
xor
rcrb
cmp
xchg
jecxz
cmp
and
loopne
stc
out
push
mov
push
aad
mov
imul
pop
stos
push
div
faddl
mov
js
jno
out
mov
add
enter
pop
popa
or
push
sahf
mov
inc
wbinvd
test
or
mul
xor
sub
popf
mov
inc
mov
and
ret
gs
insl
mov
pop
jp
add
aam
cmp
in
xor
cmpsl
out
and
xchg
sbb
rolb
aad
adc
fstl
mov
xor
sti
mov
popa
or
icebp
in
push
xchg
in
cs
mov
push
arpl
adc
insb
mov
add
push
pop
xchg
push
mov
leave
mov
aad
sub
into
aaa
ljmp
and
adc
insl
fsubs
mov
push
movsb
out
xor
sbb
out
popa
pop
roll
in
int3
xor
jb
jg
mov
cmp
xchg
and
addb
fimull
push
out
jns
into
roll
adc
stc
loop
and
rcrl
sub
inc
imul
sub
mov
jnp
and
xchg
decb
inc
lods
daa
cs
adc
pop
jl
jle
lcall
repz
and
insb
xchg
sub
imul
cmp
mov
xchg
adc
or
gs
xchg
and
inc
jb
fisubl
and
aas
js
movsb
ja
cmp
mov
fadds
and
inc
lcall
movsl
jae
cmc
inc
push
test
in
fs
popa
xor
sahf
inc
jno
das
fisttpl
xor
dec
push
imul
in
shrl
push
adc
ja
push
clc
mov
lret
mov
fucomi
addb
cmp
push
fs
fimuls
loopne
or
xor
into
mov
fisubs
data16
push
cvttps2pi
rcl
push
pop
adc
sub
and
jno
aam
xor
mov
hlt
jo
lahf
mov
pop
push
sbb
pop
mov
xchg
xchg
jg
das
mov
mov
add
faddl
jne
pop
sub
out
fwait
lcall
mov
jne
mov
jne
adc
adc
mov
outsl
test
aam
pop
xor
pop
rorl
repz
out
mov
mov
adc
push
xchg
lock
jb
xchg
mov
cmpsl
mov
popa
adc
insl
pusha
aam
lock
in
mov
mov
cltd
bound
inc
lret
mov
jns
xor
test
scas
fs
mov
pop
out
movsl
imul
cwtl
fbstp
pop
or
add
shrl
test
dec
jne
fs
in
bound
pushf
mov
bound
imul
mov
mov
cli
sub
or
jecxz
push
aaa
loop
mov
xorl
fidivrs
pop
stos
xchg
sbb
lds
push
rclb
pop
subl
pop
fnsave
scas
hlt
jle
inc
dec
or
jg
mov
sbb
int3
jne
mull
jnp
pusha
xchg
mov
lahf
cwtl
push
add
and
adc
outsl
test
shr
pop
scas
decl
push
cmpsb
loopne
out
rclb
dec
cs
mov
mov
xchg
jg
bound
bound
jb
jne
push
ret
in
into
add
sahf
imul
data16
xchg
pop
shlb
popf
pop
inc
mov
inc
jne
mov
scas
add
dec
jmp
xchg
jmp
adc
dec
jmp
fimull
mov
decb
push
mov
lret
jecxz
dec
out
ret
push
push
push
test
jo
pop
add
adc
mov
sbb
iret
pushf
sbb
push
jg
mov
lahf
push
in
nop
sbb
rcr
sahf
mov
push
ret
push
insb
sbb
dec
xchg
sbb
mov
jb
mov
inc
fmuls
loop
sbb
test
inc
push
pushf
adc
ret
push
add
ret
push
sbb
gs
loopne
inc
jns
fisubrl
jle
leave
sbb
andb
adc
int3
adc
mov
inc
push
int3
and
mov
mov
pushf
into
adc
add
mov
dec
sub
fsts
lds
jns
jmp
pop
inc
xor
lds
push
xchg
pop
loopne
cltd
ljmp
lret
mov
mov
pop
pop
and
stc
iret
fimull
ret
xchg
inc
mov
fistps
xlat
pop
leave
mov
or
ja
pop
mov
loop
std
int3
test
mov
aad
sbb
or
sub
mov
jg
adc
pop
loope
sub
inc
ficomps
pushf
aam
ficompl
call
mulb
ficoml
insl
rcrb
mov
pop
fistps
imul
gs
aas
push
xchg
pop
movsl
dec
dec
or
jb
outsl
notb
cltd
and
sbbb
ds
clc
mov
or
fisttps
inc
cmp
nop
lret
pop
jnp
or
lds
and
mov
adc
cmp
out
pop
mov
vaesenc
xorl
push
std
fisttps
leave
mov
xchg
je
and
out
mov
sbb
clc
jne
or
lcall
pop
cmp
lcall
sbb
mov
scas
ret
lret
fdivrs
and
push
mov
jbe
mov
dec
push
stos
pop
add
in
scas
test
call
dec
adc
mov
out
xchg
in
ret
mov
push
cltd
pushf
cmpl
mov
jecxz
or
pop
loope
xchg
mov
stos
test
xor
cmpl
jg
push
ja
js
jle
jnp
cltd
mov
cs
or
fisubrs
and
icebp
xlat
repnz
lea
lret
enter
jb
ret
dec
sbb
push
mov
arpl
ja
or
dec
push
fcoms
xchg
ja
lods
xor
stc
lods
inc
je
cmc
std
xor
sub
mov
into
popa
ljmp
pop
daa
data16
mov
pop
test
add
lds
leave
js
dec
jo
sbbb
out
rorb
jns
jae
mov
jno
mov
test
push
loop
test
or
into
jg
ret
jmp
xchg
ror
subl
lahf
and
outsl
dec
in
divb
and
dec
fstl
inc
push
leave
shlb
es
adc
sbb
mov
mov
lea
lret
outsb
insb
clc
push
movsb
mov
cmp
enter
adc
shll
jmp
adc
into
mov
push
rcll
mov
cli
ret
jae
scas
lds
ja
inc
scas
xlat
sub
push
mov
aas
in
test
jecxz
rolb
or
subb
mov
dec
push
dec
add
sub
xchg
xchg
je
icebp
out
xor
outsb
dec
into
insb
shll
loop
or
outsl
scas
inc
icebp
dec
mov
push
xor
bound
in
push
ret
daa
xchg
mov
arpl
pop
or
push
push
stc
pop
pop
dec
mov
mov
fwait
rolb
mov
xchg
mov
outsl
je
push
jne
outsl
sbbb
lahf
insb
cmp
imul
xchg
xor
push
movsb
movaps
lahf
or
lods
aad
dec
dec
or
jns
jmp
scas
scas
leave
push
test
or
scas
cld
mov
dec
push
testl
push
jo
das
mov
stos
into
sbb
mov
pushf
stc
push
insb
test
fwait
std
js
das
jle
loop
mov
je
scas
xlat
pop
pop
mov
mov
cmp
mov
nop
dec
cmp
aaa
mov
inc
js
cmp
inc
movsb
es
jae
movsb
mov
inc
xor
cmpsl
or
cmp
xchg
sub
mov
aaa
mov
dec
dec
xor
cmp
outsb
xchg
mov
popf
xor
xchg
flds
add
mov
aaa
jae
fsubr
pop
xchg
cmpsl
lahf
out
mov
mov
stos
mov
mov
dec
in
enter
fdivr
or
jae
xor
mov
or
or
cmp
jne
jg
mov
jns
hlt
add
inc
lods
cmp
sub
push
fidivrl
lock
popf
lret
lahf
outsl
xchg
sarb
bound
inc
push
popf
ret
stos
cmp
fwait
adc
xor
xchg
mov
and
mov
add
dec
int3
iret
cmp
sbb
jo
push
idivb
pop
mov
cli
dec
or
adc
aad
xchg
lods
push
mov
sbb
adcb
les
shll
loopne
pop
testb
jmp
test
pop
push
call
out
dec
js
adc
xchg
mov
push
xchg
pop
pop
stc
xchg
or
mov
fistps
inc
ds
jne
repnz
stos
das
lock
lock
push
mov
aam
jmp
pushf
sahf
mov
dec
enter
mov
nop
or
ret
and
ljmp
sub
rclb
fidivrl
xor
std
xorb
and
movsb
mov
cltd
mov
add
add
pop
loopne
testl
mov
dec
xchg
subl
push
mov
fdivr
shr
cs
imul
sahf
pop
push
ja
mov
shlb
xor
add
pop
lret
xchg
jo
sbb
cmc
jmp
fs
push
adc
mov
dec
stc
aaa
out
jge
movsl
jbe
cmp
jl
xchg
pop
lahf
insb
cmp
test
xchg
add
out
inc
lcall
std
in
mov
and
rcl
pop
pop
shrb
cmp
aad
decl
mov
into
and
je
push
add
fimull
pop
push
test
mov
sbb
push
dec
push
fwait
mov
js
cmpsl
aam
add
sub
add
loopne
add
jne
das
popa
nop
push
sbb
add
jle
dec
dec
mov
mov
jecxz
sbb
cmp
jno
mov
clc
ja
out
mov
out
movsl
arpl
cmpsl
add
pop
push
adc
adc
lahf
out
cmp
movsl
popl
add
pusha
test
xor
or
and
add
mov
cld
fnsave
in
stc
jmp
sub
iret
mov
fiaddl
jl
dec
inc
cmpsl
sub
nop
pop
lret
add
inc
pop
popa
push
cs
cmp
roll
adc
mov
xchg
jge
fnsave
xorb
call
jno
mov
scas
or
dec
sbb
adc
into
sbb
mov
sub
inc
jge
mov
je
dec
aam
sbb
imul
jae
addr16
jmp
mov
shll
dec
mov
repnz
imul
sbb
pop
mov
outsb
xlat
jge
insb
test
and
dec
fcmovb
cltd
fs
fucomip
popl
fsubs
pop
cmp
mov
inc
mov
loopne
leave
icebp
in
lret
mov
ljmp
in
adc
jle
xchg
fwait
lock
sarl
popl
ljmp
cmpsb
addr16
sub
das
xchg
ljmp
cwtl
push
jns
jp
xor
test
xor
dec
or
outsl
dec
mov
paddusb
sbb
inc
pop
lret
adc
aad
jge
cld
enter
in
xchg
push
push
repnz
icebp
rcll
loope
scas
faddl
mov
addr16
ror
mov
sbb
out
sub
sbb
lahf
in
aaa
inc
imul
jno
scas
decb
add
xchg
dec
test
andb
pusha
repnz
mov
mov
sub
xchg
and
fldt
loop
ljmp
imul
xchg
mov
inc
fcoml
iret
pop
ds
cs
xchg
aam
jmp
js
add
call
cmp
fs
mov
test
cltd
cwtl
xchg
sub
mov
add
mov
lods
std
in
into
jno
jge
or
jns
imul
mov
into
mov
mov
dec
xchg
jecxz
jns
pop
lock
sub
leave
xchg
lock
jmp
ret
add
sub
sbb
mull
fstl
dec
xchg
pushf
clc
mov
xchg
sahf
jle
add
ja
sub
or
mov
mov
aam
xchg
cli
sub
pusha
sti
fidivs
push
jle
mov
stos
add
mov
inc
jmp
or
or
pop
and
add
mov
and
xlat
mov
inc
jge
mov
out
enter
es
cmp
das
jmp
rcll
stc
jbe
sbbb
xor
movsl
jge
fisubrs
daa
cltd
xchg
stc
mov
mov
inc
cltd
sti
pop
es
and
out
cli
rcr
jno
pop
dec
or
and
mov
xor
stos
jo
in
pusha
fstpl
cmp
xchg
pushf
jmp
or
jae
pop
scas
mov
adc
dec
pop
xchg
or
push
mov
pop
sub
int3
mov
addr16
cmp
mov
jl
xor
push
fwait
ret
das
imulb
mov
dec
lea
lahf
insb
fstpt
push
in
pop
lcall
ss
sbb
add
cmp
in
mov
in
daa
das
stos
xor
dec
movsl
cmp
push
movsl
xor
add
in
mov
das
lods
mov
notb
ljmp
jge
sti
and
xchg
outsb
pop
ljmp
in
das
jae
dec
insl
lret
sbb
push
cmpb
xchg
fdivr
cltd
or
lods
dec
mov
dec
sub
mov
jne
mov
in
gs
lret
iret
or
push
in
jecxz
mov
add
xchg
mov
mov
imul
sub
fidivrs
je
cmpsb
rclb
cmp
mov
push
jle
dec
out
mov
test
push
push
orb
xchg
bound
loop
adc
cltd
dec
addr16
pop
sbb
fiaddl
das
cmp
or
rclb
shll
ret
adc
xchg
adc
push
cmpsl
and
inc
dec
daa
jl
idivl
test
imul
lods
lods
xchg
mov
fmull
sub
xor
pop
arpl
jb
and
cmpsl
pusha
shlb
dec
rcl
and
sub
sub
out
lcall
mov
and
push
call
xchg
mov
adc
popa
pop
jns
mov
arpl
pop
or
lret
pop
pop
sub
mov
mov
mov
sbb
adc
mov
jo
xchg
or
sbb
mov
bnd
mov
mov
jl
mov
or
push
push
adc
loopne
jmp
or
call
rclb
mov
xchg
lret
mov
aas
and
icebp
xor
loope
or
int3
jno
mov
xor
sub
mov
push
outsb
inc
fcoms
inc
xor
loope
push
outsl
fcoml
in
cmp
xchg
clc
mull
mov
sbb
loop
push
inc
rol
inc
pop
jo,pn
add
adc
loop
arpl
outsl
cmpsb
js
frstor
mov
nop
push
push
mov
jecxz
nop
scas
iret
inc
jne
adc
and
insl
mov
fwait
cli
xor
or
les
fwait
rcrl
and
lret
fwait
scas
cmp
sbb
adc
push
add
mov
pop
jns
mov
lret
test
cld
inc
mov
mov
cmpsl
pop
cmpsb
pop
dec
xchg
cmc
push
dec
rcrb
nop
or
jle
mov
inc
pop
sti
test
into
ret
push
nop
mov
adc
xchg
cmc
stos
pop
pop
xor
fidivrs
jb
bound
or
in
jecxz
outsb
ljmp
das
mov
inc
mov
mov
adc
sahf
or
xchg
enter
xchg
cmp
pop
and
jp
enter
xchg
shl
sbb
fstps
jmp
idivb
jnp
sbb
shr
enter
leave
jbe
movsb
mov
mov
lret
jne
das
pop
push
cmpsl
add
or
inc
cmc
inc
and
cmp
push
dec
outsl
cmc
mov
lods
aaa
pop
mov
xchg
cltd
add
xor
fcoms
orb
int3
out
nop
push
orl
aaa
aam
inc
mov
fwait
insl
daa
lods
cmpsl
iret
int3
lea
xchg
mov
hlt
adc
in
mov
push
ljmp
mov
jo
jl
ret
inc
lea
mov
adc
or
push
std
cs
loop
aas
add
scas
add
sbb
lea
inc
cmpl
xchg
ret
call
sub
arpl
push
mov
addb
sub
jns
jg
jb
mov
dec
mov
es
out
add
fstps
sbb
jns
test
cmp
fistpl
inc
cmp
call
mov
sbb
push
mov
mov
add
movsb
cmc
insl
repz
je
lret
xchg
cli
fstl
mov
ds
lock
dec
imul
out
in
xchg
jmp
mov
jmp
les
call
sub
xor
add
xor
cmp
push
outsl
lods
ret
pop
dec
xchg
jmp
mov
mov
pop
push
orl
and
in
mov
add
mov
mov
cmp
ficomps
cmp
fcmovb
xchg
jmp
mov
cmp
in
jmp
adc
pop
and
pop
clc
jle
jg
cmp
xor
jecxz
sub
sbbl
popf
xchg
cmp
mov
mov
les
jge
push
push
clc
inc
mov
clc
movsl
orl
xor
test
mov
test
xchg
sub
in
xchg
arpl
sub
pop
jp
test
insb
cli
cs
push
and
pop
mov
js
jg
jg
shlb
rep
or
sbb
or
xor
pop
pop
xor
subl
fucomp
mov
jmp
cmp
lret
cld
cmp
push
out
outsb
sbb
jmp
xchg
cmpsl
js
sub
mov
insl
mov
lret
enter
mov
ljmp
push
mov
mov
fmull
jecxz
pop
mov
sbb
jp
jecxz
in
negl
ret
add
push
fsubrl
out
jne
ds
cmc
ss
adc
xchg
xchg
pop
ret
inc
arpl
or
pushw
cmpsl
push
cld
lds
pop
inc
fildl
insb
and
outsl
aas
int
lods
mov
vxorps
pop
arpl
jno
inc
imul
jl
clc
mov
mov
sbb
inc
aaa
repnz
add
inc
pushf
pushf
insl
mov
outsl
dec
push
sub
in
xor
mov
mov
es
mov
cs
in
dec
test
sbb
andb
sbb
sub
iret
cs
xchg
adc
cmp
pop
or
jne
rcr
xor
jne
push
jns
scas
mov
cmpsb
jo
insb
add
movsl
mov
and
loop
mov
xchg
ficoms
dec
test
push
shll
add
dec
mov
aas
jecxz
push
popf
jecxz
and
mov
and
or
push
jge
mov
dec
lds
lret
or
lcall
push
out
pop
jge
mov
mov
dec
lods
adc
lds
mov
pop
rdtsc
pop
daa
mov
dec
adc
mov
jb
mov
sub
push
loopne
push
sub
rolb
test
insl
push
pop
sbb
test
mov
outsb
decl
xor
cmpsl
mov
push
stos
sar
dec
cld
mov
shll
in
fistpl
push
and
decl
pop
sti
inc
imul
clc
hlt
xlat
lds
fimuls
mov
pop
mov
popa
enter
mov
sbb
out
fsubs
push
cmp
sbb
fistl
loope
pop
gs
adc
sahf
jmp
mov
fcom
xor
sub
mov
outsb
aaa
inc
jbe
mov
mov
xchg
fimull
xor
lret
lcall
xchg
xchg
mov
mov
adc
call
cmpsl
adc
pop
dec
inc
add
mov
cmp
sub
out
into
push
nop
cmp
sub
cwtl
lock
mov
inc
mov
mov
xchg
mov
push
push
das
xchg
cwtl
xchg
mov
lret
pop
cs
or
mov
push
enter
pop
sbb
push
ret
and
dec
or
add
inc
push
cmp
add
lahf
out
xlat
mov
push
test
fistpll
pop
push
inc
mov
sub
mov
adc
push
inc
mov
insb
int3
cmp
jmp
andl
pop
out
dec
mov
jp
adc
jbe
lret
xchg
ss
mov
or
dec
sbb
das
movsl
mov
rolb
inc
push
in
mov
scas
push
lods
jl
les
daa
xchg
mov
cltd
iret
push
int
fs
fs
stc
jnp
fidivs
and
imul
test
add
std
push
mov
sarl
pushf
fisttps
jbe
adc
icebp
xchg
jp
enter
jb
cmc
outsb
sub
mov
xor
push
push
sar
test
and
mov
pop
adc
aas
mov
xor
xor
mov
pop
dec
mov
sub
jle
xchg
and
dec
push
imul
sub
pop
sub
cmpsl
sbb
mov
lret
add
aad
shrb
test
sbb
sub
subb
jo
popf
mov
and
scas
inc
xchg
or
push
mov
mov
add
shll
rorb
test
push
sbb
push
xchg
in
outsl
adcl
pushf
addr16
xchg
outsb
jecxz
xchg
adc
neg
lahf
stos
lret
push
jmp
add
dec
loop
pop
pop
fiadds
and
imul
mov
cmp
sub
xor
jbe
adc
ja
mov
jo
jp
inc
sbb
or
out
scas
or
addl
repnz
aaa
adc
aas
bound
cmpsb
lock
fcomps
in
cmpb
lret
push
fwait
ds
ret
pop
xorl
lret
repnz
dec
int
aaa
jl
add
cmp
fists
xchg
pop
jl
add
cld
aas
pop
out
lock
fmuls
push
scas
sbb
shl
jbe
cmpsl
adc
lret
inc
and
pop
rcrb
xchg
sbb
bnd
jo
xor
sbb
sbb
int3
xchg
dec
inc
call
and
test
sub
enter
mull
stc
lahf
insl
jb
add
subb
nop
cmp
mov
mov
xorl
jl
sbb
xchg
or
repnz
push
aas
pop
inc
xchg
xchg
push
jg
nop
dec
js
cli
pop
cwtl
push
add
fdiv
bound
outsl
setnp
cmp
imul
jae
add
fiaddl
add
sbb
rcll
push
and
ficompl
pop
jecxz
xchg
ficoms
mov
jae
repnz
shl
jbe
mov
bound
subl
push
out
jmp
dec
dec
rcrb
lahf
aaa
fldcw
shll
dec
lea
mov
xor
scas
mov
test
mov
dec
insl
push
inc
lods
es
add
mov
repz
lahf
xchg
pop
pop
cmp
es
imull
inc
imul
popf
stos
clc
jp
fcomps
cmc
scas
xchg
push
add
imul
dec
sub
cwtl
out
xchg
pop
ja
sub
mov
add
jg
sub
push
loope
jae
js
and
xor
out
mov
fdivrs
mov
mov
xor
pop
add
popa
scas
ljmp
addb
mov
push
jbe
ret
mov
xor
xchg
mov
cltd
pushf
sbb
lcall
bound
in
jne
cmp
cld
or
sbb
or
xchg
jno
mov
shrl
jbe
inc
dec
xor
insb
popf
adc
pop
sub
cwtl
repnz
pop
repz
or
inc
pop
mov
negb
jnp
add
mov
push
lods
inc
jp
ljmp
lock
rorb
xor
or
sub
xor
cmp
in
pop
mov
movsb
push
rclb
int3
ljmp
xchg
aaa
push
dec
jae
pop
fmuls
fstps
popa
sub
mov
mov
inc
pop
iret
js
jmp
in
xchg
sbb
addr16
adc
ss
push
es
jnp
in
sub
jecxz
cmpsb
stos
jo
sbb
cmp
jg
pop
aad
ljmp
mov
inc
xchg
loopne
jecxz
dec
fstpl
pop
cld
repz
mov
fsubrl
lahf
xor
popf
cmpsl
in
jb
jnp
lods
mov
xchg
or
xchg
mov
outsl
test
mov
mov
neg
pop
fsubs
push
jo
notl
stos
cmpsl
inc
call
test
xor
into
mov
add
mov
mov
mov
outsb
fistpll
lock
xorb
cmp
orl
adc
leave
pop
jp
jecxz
ret
fsts
orb
int
xor
mov
addr16
ljmp
dec
mov
push
cmpl
pusha
jle
hlt
outsb
pusha
js
push
loop
cwtl
xchg
mov
jns
icebp
je
out
inc
cltd
sti
roll
or
daa
jae
and
jg
or
ljmp
fs
jecxz
sbb
das
dec
mov
rclb
lea
sbb
cmpsb
xchg
and
stos
mov
jnp
mov
mov
test
cmp
arpl
and
jbe
outsb
in
les
push
icebp
mov
jmp
sbb
adc
xlat
dec
sbb
ljmp
dec
imul
mov
daa
nop
mov
cld
bound
jae
sbb
add
cld
sub
bound
xchg
cli
and
bound
addr16
or
and
dec
sbb
mov
add
xlat
dec
loope
nop
stos
data16
jl
arpl
lea
push
add
add
mov
add
ficoml
mov
js
pop
popf
or
and
and
add
pop
pop
aaa
mov
inc
or
cltd
push
lods
nop
jmp
xor
sbb
aam
into
lret
mov
popf
aad
jp
movsl
jns
cld
cmp
es
mov
xchg
sarb
movsl
sub
dec
push
adc
mov
xor
enter
test
cmpsb
cltd
call
xor
adc
push
loope
iret
out
sbb
mov
mov
or
arpl
adc
js
mov
stos
cmp
mov
mov
mov
aas
cli
leave
inc
lods
hlt
sbb
cmpl
std
or
jne
repnz
pop
movsl
pop
mov
shll
sbb
ss
int3
and
mov
inc
cmc
in
sbb
mov
pop
dec
push
cmpsb
es
das
jb
mov
mov
push
lock
aam
mov
in
insl
jns
xchg
adcb
cmp
pop
rolb
mov
nop
shl
xchg
ror
outsl
jl
xor
dec
dec
std
push
loopne
jbe
push
call
popf
std
fidivrl
mov
and
add
aaa
in
insb
mov
or
jecxz
popa
xor
addr16
shll
in
add
mov
rcl
mov
mov
pop
jb
jle
mov
sbb
push
notl
decb
lahf
mov
fisttpl
ja
mov
push
xchg
lret
lods
into
cmc
mov
std
jl
pop
and
cmp
popf
mov
push
pop
inc
es
fmul
mov
in
pop
xchg
ret
fwait
outsb
adc
or
adc
lea
ficoml
xor
pop
in
pop
inc
xchg
add
orl
aas
call
ja
sbb
aaa
loope
push
iret
jbe
rorb
inc
out
sbb
das
out
mov
cmc
mov
out
pop
sub
add
fcmovbe
jecxz
lds
cld
and
adc
arpl
cmc
faddp
push
insb
pop
cmp
push
add
or
mov
pop
mov
lret
dec
fs
cld
push
jp
mov
and
pop
jmp
push
notl
jp
and
or
lcall
orl
lds
nop
jecxz
sub
jb
dec
and
testb
push
mov
stos
cmpsl
stos
mov
xor
dec
pop
push
sub
inc
iret
dec
and
ljmp
ljmp
jecxz
inc
push
jnp
sbb
xor
shrl
mov
mulb
mov
mov
movsl
loopne
imul
inc
mov
ljmp
xor
xchg
outsl
adc
int
pop
movsl
hlt
test
imul
jmp
jp
movsb
cmp
push
fwait
xchg
xlat
std
lods
popa
xchg
inc
cmpl
shr
push
repnz
movsb
cmp
call
dec
fstpt
leave
aaa
xchg
roll
mov
pop
xor
xchg
fdivr
sti
rolb
icebp
ja
in
mov
push
sub
popf
jmp
inc
cmp
test
inc
sbb
sbb
mov
sti
das
inc
nop
or
mov
repz
mov
mov
or
adc
cmpsl
push
xchg
into
out
dec
add
cmp
mov
mov
fistpll
sbb
bound
fs
xor
push
in
inc
xor
pop
lds
push
cld
push
adc
stos
jecxz
aam
scas
sti
push
mov
mov
mov
outsb
out
jge
xor
dec
mov
hlt
xchg
popa
add
jo
movb
inc
lret
fisubs
mov
dec
mov
je
call
xor
stos
push
pop
lea
movsb
pop
lods
fstpl
je
push
xlat
mov
mov
out
push
pop
sub
aaa
mov
repz
mov
rcrl
mov
enter
ja
or
jecxz
mov
mov
xchg
stos
mov
into
sub
stc
sbb
mov
and
inc
fwait
jns
push
in
or
dec
mov
outsl
roll
and
movsl
add
mov
out
lahf
aaa
inc
mov
cmp
pushf
push
fsubrs
aad
mov
iret
hlt
fidivrl
dec
and
and
push
fs
rcrl
pop
mov
int3
push
xchg
push
nop
enter
add
lea
loope
jb
enter
xor
mov
mov
jbe
cld
pop
mov
cltd
add
mov
ljmp
and
sbb
mov
enter
pop
out
cli
ss
and
sbb
sub
movsb
imul
into
sub
push
cli
jecxz
cmp
out
cmp
adc
mov
adc
testl
int
dec
jge
or
cmp
mov
adc
imul
out
xchg
and
clc
ds
ja
imul
mov
dec
xchg
xchg
pop
push
inc
sbb
inc
add
jno
dec
sahf
lods
xchg
lods
ja
xchg
fadds
in
in
hlt
sub
mov
xor
push
les
add
movsl
dec
cmp
mov
jno
mov
cmp
push
or
sahf
outsl
dec
mov
mov
sbb
push
in
lret
pushfw
jb
fcoml
jp
int
popa
xlat
in
bound
inc
pop
lahf
mov
insb
inc
pop
int3
adc
xchg
and
ficoml
inc
mov
or
push
test
cs
dec
cmpsl
mov
xchg
push
cltd
popf
pop
sti
add
pop
pop
inc
ret
cmp
out
pushf
imul
mov
fistl
fldl
pop
push
insb
ret
mov
in
out
lret
mov
fisttpl
sub
lahf
xchg
int3
xor
lock
stos
ja
sub
mov
in
adc
mov
sbb
movsl
mov
pop
push
jbe
jp
inc
mov
mov
sub
push
fistps
mov
mov
cmc
cwtl
fs
push
notb
add
sbb
jo,pn
in
and
add
or
jl
mov
add
xchg
or
in
inc
jno
sbb
inc
iret
lds
inc
cltd
aam
movsb
cli
xchg
fisttpll
dec
pusha
mov
fldenv
mov
add
out
ja
aaa
ja
movsb
int
shl
jb
not
sub
addr16
ud1
pop
stc
xchg
inc
into
lds
sti
hlt
mov
or
stos
loopne
mov
stc
sbb
icebp
inc
mov
out
cwtl
push
icebp
pop
in
sbb
adc
sub
daa
fcmovnb
out
dec
jo
notb
push
cmp
add
xor
ret
inc
xor
xbegin
das
or
out
mov
xor
xchg
cli
and
popf
push
test
push
xchg
push
mov
xor
rorb
and
fadds
call
movsl
gs
enter
mov
ds
call
adc
pop
test
xor
into
je
xchg
xor
addb
int3
and
xchg
cmp
mov
add
ret
jecxz
or
cmp
jns
movsb
or
pop
das
inc
rcr
imul
dec
and
leave
mov
addb
test
jbe
jno
and
jle
jo
cs
shrl
or
cli
int
mov
ja
ds
test
fstl
xchg
inc
loope
adc
push
les
mov
mov
pop
dec
out
inc
xchg
mov
lcall
insb
pushf
xor
lock
inc
lea
orb
mov
jge,pt
call
inc
mov
dec
push
imul
sub
pusha
lea
or
push
imul
xor
push
outsb
std
in
pusha
sub
imul
cmpsb
adc
pop
adc
outsb
dec
dec
es
jmp
pop
roll
aad
dec
mov
out
sub
pop
outsb
push
pop
insb
lock
or
mov
cmp
cmp
imul
dec
pop
ret
sbb
andl
push
cld
xchg
mov
mov
or
add
jp
repnz
imul
loop
push
push
loopne
xor
imul
daa
scas
and
inc
jb
das
outsb
pop
xchg
imul
mov
or
xor
gs
std
dec
mov
loop
outsb
or
imul
mov
sbb
push
adc
in
outsl
dec
out
and
sub
fwait
jae
pop
addr16
jbe
in
jo
rcrl
stos
in
pop
out
mov
push
cli
lock
jge
aas
out
or
pushf
adc
test
insl
cmpsb
cs
rorb
repz
ltr
adc
push
in
push
add
aam
cmc
mov
xor
push
out
ss
jo
push
cmp
adc
jle
popa
xchg
test
fmull
dec
aam
or
sub
lret
or
adc
cli
lds
scas
xchg
in
jno
aam
adc
inc
ss
and
push
idivl
test
jnp
fimull
shlb
cmp
sbb
and
gs
push
cmp
mov
lahf
dec
xorl
fiaddl
adc
fsubrl
negb
addr16
push
loope
xchg
xchg
and
dec
lret
mov
sbb
push
jno
add
mov
mov
test
addr16
sti
xchg
data16
idivl
xchg
cli
cmp
adc
mov
sub
or
ljmp
sub
loope
adc
cmpsl
and
fwait
push
iret
or
dec
sub
loope
rcl
push
and
sub
stos
and
cmc
iret
push
lahf
mov
lea
xlat
jbe
cmp
test
or
cmp
sahf
test
popa
fimull
rol
or
pop
rclb
inc
aas
push
dec
xor
inc
vcvttpd2dq
push
out
dec
dec
mov
pop
sub
mov
inc
xor
push
fdivrs
xor
andb
adc
out
outsl
in
push
cmc
insl
sbb
out
sbb
adc
sbb
xchg
test
mov
adc
and
dec
jne
jns
fdivr
orb
lret
ja
cli
adc
cmp
jp
in
bound
les
out
dec
ret
jmp
dec
popa
fcomps
fldt
pop
imul
xchg
xlat
cwtl
sub
push
mov
clc
mov
adc
cmp
enter
xchg
inc
scas
loope
lret
mov
xchg
lret
mov
std
mov
adc
mov
jp
bound
sbb
xor
xchg
dec
loope
xor
rcl
enter
outsb
cmp
mov
loope
pop
rcll
inc
inc
inc
push
pop
enter
inc
dec
rolb
xchg
sbbb
lock
fisubrs
inc
xor
sub
cmpb
jecxz
stos
scas
sub
jnp
push
pop
pop
fcompl
cmc
enter
push
lods
lret
push
out
addr16
repnz
aam
and
lock
ljmp
mov
mov
sbb
bound
lock
pushl
arpl
dec
push
xchg
out
mov
mov
sub
jbe
mov
mov
sbb
notl
jg
test
xchg
fnsave
test
push
lock
insl
and
enter
into
dec
mov
lods
xor
push
std
fisubl
imul
sar
stos
sub
in
rolb
les
sbb
cmpsb
push
adc
iret
cld
mov
stc
repz
in
jmp
xor
stos
fdivrp
add
mov
cs
and
addl
jb
jge
or
mov
dec
pop
enter
xor
mov
mov
outsl
mov
clc
sbbb
xor
roll
push
out
inc
dec
mov
xor
pop
nop
push
into
lahf
dec
sub
mov
sub
ret
mov
adc
outsb
mov
dec
pop
pop
mov
call
imul
or
push
xchg
inc
stos
push
or
or
and
outsb
push
imul
fists
pop
dec
outsb
cs
xchg
imul
mov
pop
sbb
sub
xor
adc
ret
mov
leave
or
lret
cmp
mov
ret
pop
and
cli
lret
js
jge
sbb
fldl
jae
mov
test
and
addr16
push
ret
xchg
lds
int3
bswap
xor
lret
popf
pop
js
mov
jb
testl
push
pop
sbb
or
les
mov
lods
push
in
lahf
jp
repz
cmpsb
sarb
aam
cwtl
xor
lret
push
es
push
push
xor
mov
cli
fsubrl
nop
pop
enter
push
pop
scas
sub
push
jge
flds
cmpsb
jmp
mov
mov
xchg
dec
cmp
fstl
lcall
repz
xchg
adc
inc
lock
mov
xor
fucomip
or
sbb
mov
cmp
out
push
in
aas
xlat
stos
and
cld
xor
cwtl
push
xor
jnp
pop
cmp
mov
inc
cmpsb
mov
and
mov
outsl
push
cmc
xor
loopne
jp
and
movsl
aam
and
imul
jno
into
rcrl
mov
jl
repz
cmpsb
fidivl
sbb
in
jae
js
mov
js
ja
jle
pop
fcmovb
loopne
jmp
mov
adc
sub
outsb
imul
cli
jp
mov
sahf
cwtl
xchg
jecxz
mov
jmp
push
pop
mov
pop
push
sahf
cmp
fsubl
outsl
daa
out
jbe
sub
mov
inc
bound
xchg
push
jge
cwtl
nop
outsb
mov
sahf
push
imul
or
fnstenv
decb
jb
lret
mov
scas
cltd
popf
inc
mov
xchg
ss
je
lods
adc
int3
in
adc
jb
fnstsw
jae
repnz
push
pushf
add
jmp
aad
shl
or
flds
das
imul
subl
xchg
nop
xor
sbb
pop
xchg
and
mov
xchg
push
pop
push
stos
lret
push
test
push
pop
push
es
cmp
dec
movsl
push
sbb
aaa
mov
sbb
fimull
and
pop
cli
pushf
sub
xlat
xchg
sub
adc
shlb
fsubrp
sub
sub
xchg
sub
icebp
cmp
aas
clc
stc
int
dec
xor
arpl
inc
sub
outsb
pop
push
cmp
jp
std
jae
into
movsl
decl
push
xchg
scas
sbb
inc
and
dec
in
jo
push
pop
dec
jb
test
test
test
inc
scas
jmp
sbb
inc
xchg
shlb
aaa
insb
adc
call
notl
push
push
push
xchg
cmpsb
mov
cltd
jae
jne
ret
daa
fists
lcall
cli
in
pop
outsl
cmp
cltd
fildl
inc
in
stos
xlat
sbbl
lret
push
setb
or
push
fldz
jae
dec
adc
cltd
pop
fwait
pop
rclb
sar
scas
enter
lock
push
jg
mov
out
mov
xchg
rolb
and
lahf
cmpl
pop
imul
aas
in
sub
xchg
jg
sub
sbb
pop
sbb
subl
lcall
xchg
call
mov
xchg
add
fidivrs
xchg
sub
call
dec
je
fnstcw
repz
push
sbb
jne
inc
dec
icebp
testb
jno
lods
call
arpl
mov
cld
iret
xchg
sti
addr16
mov
nop
mov
adc
pop
pop
in
push
pop
data16
in
sub
data16
fucomip
xlat
sbb
imul
and
and
dec
scas
dec
ss
aas
push
into
mov
mov
jns
jmp
mov
aad
cmp
sbb
idiv
dec
mov
adc
nop
adc
lock
sti
mov
inc
jno
js
rolb
int
mov
lods
or
imul
js
test
inc
lahf
push
stos
test
rcr
xor
mov
jne
xchg
cmp
jp
movl
fiaddl
xor
sbb
sub
nop
pop
in
pop
mov
mov
sahf
pusha
je
push
pop
jbe
push
jo
mov
inc
fnstsw
jecxz
dec
jmp
or
pop
pop
add
adc
mov
pop
mov
mov
lahf
mov
inc
sub
fsubrs
push
jmp
cmpb
cmp
mov
push
jmp
jns
jnp
jle
and
popa
ljmp
mov
sbb
and
mov
add
push
outsb
lret
andb
dec
cmp
movsl
sub
cmp
nop
mov
lods
pop
mov
aad
jle
jle
fwait
ja
jge
mov
lods
enter
pushf
mov
adc
rcll
lds
and
jnp
lret
fsub
inc
sub
daa
xor
jnp
sub
je
sbb
pop
fimull
push
xchg
test
loope
xchg
xor
xchg
sub
and
dec
push
mov
clc
enter
jl
and
ss
lea
pop
rolb
mov
nop
out
js
fisubl
jb
inc
rcl
inc
shrl
mov
or
jp
cmp
mov
aaa
mov
adc
in
ljmp
repnz
loope
cmpl
shrl
jl
in
loope
xchg
jo
div
lret
repz
inc
adc
or
in
mov
test
mov
mov
sbb
addl
dec
or
push
outsl
jb
pop
mov
out
js
data16
sub
add
aad
sub
push
aam
dec
push
popa
adc
or
cmc
pop
in
xchg
lret
test
xchg
aas
stc
add
pop
lahf
jmp
lret
sbb
mov
out
rcr
xchg
out
out
push
mov
pop
bound
ljmp
dec
js
mov
inc
jg
divb
pushf
xor
dec
xchg
dec
push
dec
sahf
xor
cld
imul
pop
or
xor
pop
out
das
pop
loop
mov
aad
push
mov
fbstp
lock
and
lahf
sub
adc
jg
in
pop
inc
sub
rcrb
cltd
aam
xor
jns
daa
push
pop
fmull
mov
dec
repz
inc
jne
mov
push
enter
lods
dec
rcl
mov
xor
cmp
gs
fs
cmp
insb
sbb
lods
mov
jecxz
insl
sub
lret
adc
int
jl
inc
or
outsl
inc
aam
push
xchg
int3
into
jo
or
sbb
xor
scas
aas
or
pop
inc
mov
sub
mov
push
out
jo
ss
jmp
xchg
fisubs
xchg
jmp
dec
jl
pop
mov
int
xor
loopne
mov
rcll
sbb
xor
in
outsl
xchg
sub
mov
xchg
fiaddl
fisttpll
inc
and
call
fcoms
insb
scas
dec
dec
std
pop
mov
ficoms
push
mov
stc
adc
fwait
mov
dec
hlt
xchg
jmp
js
fchs
xchg
or
or
mov
mov
sub
add
aam
dec
loopne
jns
push
pop
ss
leave
rcll
add
test
mov
xchg
fdecstp
xchg
aam
xor
mov
sub
mov
and
leave
mov
stos
scas
jo
push
sarl
mov
jnp
jae
jno
and
xor
arpl
je
popa
jp
adc
dec
xchg
jnp
mov
insb
ja
ret
adc
mov
lock
shll
jmp
aad
sub
loope
inc
fistpll
ss
jbe
in
cmp
ret
in
jno
jl
jecxz
cmpsb
inc
iret
add
sbb
js
jno
rolb
cli
add
mov
mov
and
xor
mov
sbb
adc
pop
test
shr
jae
ret
pushl
xchg
dec
add
jbe
ds
cmpsl
mov
cmp
xor
ja
arpl
fnstenv
ret
aas
xchg
sbb
add
jmp
lds
rcrl
push
ror
pop
jae
ljmp
mov
in
imul
outsl
mov
mov
leave
sbbl
cmpsb
add
in
insb
or
and
mov
outsl
mov
push
loope
lods
push
jae
lods
divl
popa
std
popa
pop
xchg
out
lods
sahf
mov
bnd
adc
mov
addl
or
pop
jg
fdivrl
and
adc
movl
cmp
lock
pushf
out
jecxz
in
fmul
cld
mov
fbstp
scas
jno
lds
mov
jns
and
hlt
movsl
sub
jecxz
mov
repnz
sub
pop
mov
dec
cmp
aad
divb
dec
lret
lret
push
mov
sbb
sahf
loope
jl
imul
sub
jl
in
xlat
jb
bnd
push
mov
jno
sbb
jne
test
and
adc
fidivrs
mov
out
mov
jmp
or
xor
or
out
push
in
and
lods
sub
inc
inc
rclb
or
dec
lret
and
rcll
rcll
idivb
pop
cwtl
imul
fstp
push
add
cmc
ret
sbb
rol
stos
jmp
mov
mov
or
dec
inc
pop
pusha
xlat
loope
sbbb
push
cld
xor
dec
outsl
adc
sbb
cwtl
dec
push
test
mov
inc
push
push
scas
jae
imulb
add
push
imul
pop
mov
cmp
in
mov
xor
imul
mov
dec
add
xor
fsubs
add
cwtl
out
cli
pop
mov
push
cmp
push
ret
arpl
adc
mov
sub
pop
mov
mov
or
pop
dec
jl
and
pop
push
xchg
ror
pop
nop
ror
jmp
pop
pop
ffree
push
pusha
jb
mov
xchg
sbb
sub
andl
in
ja
mov
aaa
or
fnsave
dec
ret
leave
jge
xchg
into
repz
push
stos
mulb
sbb
call
pop
dec
fildll
push
mov
xor
into
push
inc
xor
mov
jns
decb
movsb
inc
shlb
lret
mov
mov
pop
xchg
mov
mov
jne
lock
cs
lea
aam
sbb
adc
test
sarl
in
aam
mov
inc
or
pop
fwait
stc
lds
pop
jnp
out
mov
scas
jne
pop
cmpsb
or
je
jno
pop
aas
jnp
jae
jnp
cmp
jae
sub
scas
push
dec
add
gs
sub
dec
stos
pop
inc
clc
fdivrl
mov
bound
and
add
ljmp
add
jge
inc
out
jne
jge
sub
push
mov
ss
sarl
lock
lret
lds
adc
sub
imull
int
xchg
rol
test
add
test
pop
lock
jnp
imul
outsb
push
dec
out
mov
mov
pop
stc
lret
fisubrs
stos
jo
cmpl
dec
in
fcomi
int
pop
dec
cmp
sarl
xchg
cmp
pop
fisttps
push
jbe
lret
inc
daa
cmp
pusha
sub
jecxz
daa
int3
mov
or
inc
jnp
mov
jns
mov
in
loope
outsl
lds
sbb
popf
jmp
mov
mov
das
pop
jle
lret
lods
cmp
and
fcomip
int3
or
xchg
enter
jae
inc
push
sbb
adc
cmpl
loop
and
jge
mov
int
cmp
out
fsubrl
in
sbb
sub
mov
xor
sahf
mov
lods
inc
push
es
pop
jnp
adc
lret
mov
hlt
stos
lahf
imul
in
lahf
roll
mov
data16
xchg
in
cld
xor
mov
xchg
cmp
and
mov
rcr
out
div
test
cld
xchg
cmc
clc
mov
fdiv
inc
jne
or
mov
or
out
out
movsl
nop
pop
xor
push
lea
sbbl
inc
roll
cs
into
mov
movsl
ret
scas
inc
daa
std
cli
out
add
ds
pop
ss
mov
cmp
test
cmp
popl
scas
push
add
mov
das
mov
negb
cmp
test
inc
xabort
lods
dec
fsubrs
aaa
xlat
test
push
xlat
hlt
popf
lods
mov
insl
rcr
daa
pop
jmp
lahf
aam
or
xor
arpl
icebp
sbb
pop
repz
ss
push
aad
ds
mov
xor
and
fldcw
jmp
or
cmp
ret
aas
adc
dec
push
add
pop
icebp
lock
and
push
sub
pop
mov
adc
xchg
mov
adc
rorl
mov
add
in
lcall
sub
sbb
mov
or
sbb
outsb
add
mov
mov
xchg
sub
aad
pusha
mov
sbb
jecxz
in
arpl
stos
jno
push
add
stos
and
ficomps
push
fisttpl
add
enter
outsl
push
fsubrs
sarb
subb
adc
loopne
mov
mov
neg
rorb
mulps
adc
cmpsb
sti
inc
dec
pop
or
lahf
leave
lods
daa
out
pushl
inc
jmp
ljmp
std
xor
lods
mov
imul
and
adcl
out
ljmp
shlb
mov
xor
daa
gs
stc
test
mov
imul
outsl
jge
std
inc
popl
ja
jno
cmpsl
push
push
rolb
push
jns
mov
lret
sbb
incb
fs
fs
or
mov
lahf
push
mov
jecxz
mov
std
adc
popf
mov
sbb
aas
aas
cmpsb
inc
inc
cmp
sti
xor
jns
outsb
pusha
arpl
mov
mov
or
aas
daa
jle
and
iret
aam
sub
in
dec
xchg
jl
rolb
dec
sahf
test
pop
jae
jmp
lods
or
nop
leave
int
daa
mov
xchg
aaa
or
jl
shll
mov
pop
dec
data16
inc
xor
sbb
repnz
adc
sub
jg
mov
sahf
push
dec
dec
sub
cld
adc
popf
dec
jecxz
std
fidivrs
dec
add
jp
dec
jecxz
scas
add
sti
out
pushf
mov
popa
mov
out
mov
jnp
cmpl
fs
mov
pop
and
sarb
das
xor
insb
xor
inc
xor
clc
test
xor
sub
sbb
movsl
xchg
pop
mov
pop
mov
addr16
lods
push
xchg
and
jnp
or
pop
jmp
nop
cmp
lods
adc
lahf
dec
repnz
adc
pusha
jb
lea
ror
hlt
adc
xor
sub
fiadds
mov
repz
ja
das
mov
cltd
dec
daa
scas
cs
or
fidivrs
dec
bound
cwtl
sbb
js
pop
bound
pop
mov
pop
add
cmp
shlb
mov
ljmp
xchg
ret
stos
inc
push
loopne
enter
das
add
pop
jo
dec
ja
push
push
pop
xchg
mov
movsb
int3
mov
data16
ret
sub
scas
fdivs
mov
ds
push
cltd
test
sbb
ret
mov
pop
fchs
mov
clc
sti
aas
push
and
imulb
jecxz
ficoml
nop
loope
pushf
add
into
insb
jns
jb
jmp
negl
fimuls
dec
sub
ret
sbbb
push
adc
xchg
cmp
lahf
out
jns
mov
add
adc
in
lcall
arpl
les
push
lea
loope
fwait
mov
cmp
sub
jnp
sahf
xchg
cmc
popf
cli
gs
sbb
aaa
push
adc
stos
lds
lods
sti
rorl
inc
push
ss
loope
mov
cmp
subl
cmc
filds
sbbb
rcll
push
mov
hlt
es
cmp
push
in
in
adc
mov
lret
sahf
ficoms
mov
shll
adc
cmp
jns
dec
aam
xor
call
push
jmp
cltd
sbb
sub
mov
test
inc
dec
ret
lret
inc
dec
adc
call
sub
cmpl
cmp
push
in
mov
cld
movsl
or
push
scas
ljmp
xchg
das
cmp
sti
lods
mov
mov
cld
jb
lds
jg,pt
jle
enter
popa
leave
rorl
push
js
xchg
ja
or
cwtl
testl
rcll
or
jmp
mov
xchg
cli
out
scas
scas
out
test
jecxz
mov
add
pop
cmp
int
sub
and
add
mov
xchg
fsubl
vmovq
fdivr
fwait
sbb
mov
lret
xor
push
sbb
aas
xor
dec
imul
hlt
aaa
fisubs
jae
idivb
pushf
clc
cwtl
fldln2
int
adc
add
out
sub
in
add
inc
cmp
lods
aam
and
roll
iret
dec
into
sarl
lods
out
movl
push
test
aaa
mov
jbe
sti
push
leave
or
mov
test
or
mov
arpl
ret
daa
lea
nop
test
cmp
mov
pop
pop
add
roll
add
push
xchg
add
inc
imul
out
jns
or
xchg
outsl
adc
xor
mov
adc
mov
out
fwait
mov
shl
popf
int
ret
push
xchg
xchg
mov
jo
sub
jmp
out
cld
jno
inc
add
xchg
stc
scas
mov
adc
cmpsl
add
cmp
mov
add
outsl
movsb
xchg
call
mov
in
cmpsb
sub
push
add
mov
fcoml
data16
ret
mov
ja
ss
ljmp
nop
jb
xchg
sub
and
cmp
lahf
and
bound
or
fistpl
aad
sbb
push
aad
aas
dec
aad
xchg
mov
shrb
mov
jge
or
clc
jge
cmp
xchg
mov
jb
insl
ret
rorl
pushl
insb
mov
adc
orl
imul
sub
push
aas
lcall
pop
mov
test
prefetch
cmpsb
shr
rclb
aas
test
test
sbb
mov
jmp
rcrl
push
call
push
inc
xor
jno
jle
xorb
in
inc
clc
fsubs
hlt
mov
push
sbb
jb
imul
lods
mov
adc
inc
mov
insb
mov
xchg
push
push
pop
cmp
cmp
push
aas
adc
dec
cmp
dec
out
ljmp
push
out
xor
out
adc
cmp
jbe
dec
aad
jmp
sub
loopne
insb
add
push
mov
pop
xchg
lea
or
jmp
test
cmpl
add
xchg
andb
mov
ret
test
jmp
xchg
mov
dec
shlb
aad
js
popl
in
adc
pop
pop
dec
in
ss
popf
mulb
pop
or
out
lret
push
or
fisubs
push
mov
stc
push
adc
subl
jae
or
in
aam
fdiv
jmp
mov
dec
outsl
lret
push
mov
cmp
add
ficomps
jge
lcall
jnp
push
sti
movsl
cmp
pop
ljmp
shl
pop
or
and
dec
popa
fadd
shll
icebp
pop
aas
dec
aas
jg
inc
sbb
dec
xlat
enter
call
aas
in
push
cltd
shrl
test
insb
push
cli
rcr
outsb
pop
jmp
pop
xchg
xor
sub
jle
mov
loopne
cmp
sub
lods
arpl
cmp
leavew
xor
jle
and
imul
test
in
ret
lock
dec
sbb
sbb
push
lahf
jbe
xor
or
mov
jp
into
dec
icebp
add
cmp
lds
lret
clc
adc
jp
pop
out
pop
lahf
outsl
dec
lahf
fwait
cwtl
xchg
sub
push
and
mov
es
push
lret
push
pop
ret
xchg
mov
or
repz
inc
mov
int
jb
ja
dec
xchg
loopne
pusha
out
jge
inc
or
xchg
inc
daa
test
imul
pop
inc
mov
jl
loope
jae
scas
in
push
addr16
fadds
sub
mov
xchg
push
inc
nop
pop
cmp
addl
xchg
mov
sub
or
jae
jae
pop
mov
in
cmpsl
sub
mov
adc
cmp
shl
jbe
jbe
arpl
arpl
sbb
mov
inc
inc
fsubrp
mov
cmc
xchg
scas
int
loop
nop
push
shl
aad
xchg
or
cmp
outsl
sarb
out
inc
repnz
ss
and
outsb
movsb
scas
cmp
addr16
into
sbb
cmp
sbb
mov
aas
push
pop
jbe
fmull
mov
enter
sub
cmp
roll
and
scas
shrb
or
loop
js
lods
or
xor
ret
or
pop
or
xchg
mov
in
stos
pop
xor
or
daa
mov
inc
adc
mov
jae
or
lods
cmp
ficompl
fs
pop
leave
jl
jp
sbb
and
mov
xor
setb
pop
ret
pop
mulb
lds
loopne
out
sub
mov
xchg
lret
cmp
fidivl
iret
xchg
arpl
mov
mov
cmp
pop
stos
jno
popa
ret
loopne
addl
mov
and
icebp
in
jecxz
xchg
and
mov
or
pop
in
les
lret
jne
sbbb
std
add
mov
aaa
fbld
pusha
sub
add
sbb
ret
int3
adc
das
mov
inc
mov
xor
add
fistpll
clc
mov
insb
adc
lahf
and
mov
mov
shll
mov
ja
sub
sub
xchg
pop
cmp
sbb
cmp
stc
shlb
xor
shlb
adc
xchg
je
sub
adc
lods
xor
ret
dec
es
les
xchg
sahf
hlt
add
adc
notb
cmp
neg
hlt
imul
push
loop
fstpl
pop
adc
insb
hlt
aam
pushf
fildll
adcb
addb
iret
add
inc
fwait
dec
mov
aaa
nop
lret
stos
mov
cmp
lods
add
repz
and
pop
pop
add
or
pushf
hlt
shl
adc
dec
test
or
sbb
pop
pop
fcoms
pop
aam
xchg
loop
mov
lods
daa
shlb
fdivp
mov
mov
sbb
rep
nop
test
push
mov
mov
sub
movsb
add
nop
scas
jecxz
gs
mov
ss
sbb
stc
stos
negb
loopne
filds
mov
icebp
in
dec
aad
insl
lcall
mov
cltd
mov
push
cmp
push
adcl
inc
push
ret
pop
dec
mov
cmpsb
sub
mov
cli
mov
inc
mov
dec
je
mov
mov
test
subl
xchg
inc
xchg
jl
dec
add
push
mov
cs
mov
pusha
push
pop
pusha
mov
pop
test
jb
push
dec
es
lods
stos
filds
push
push
lret
outsb
xchg
fnstcw
dec
and
xor
cmp
mov
popf
pushf
mov
loopne
mov
cmp
push
jnp
mov
aaa
popf
xchg
lods
test
and
leave
aam
sbb
push
xchg
cmc
or
aam
jmp
jns
xchg
into
mov
notl
inc
hlt
iret
mov
fsubl
call
sahf
sbb
xchg
adc
xor
xchg
lods
clc
fdivr
push
mov
ljmp
sub
cmp
adc
outsl
or
ljmpw
pop
xchg
adc
fldt
pop
sub
shlb
bound
xlat
imul
rcrl
push
out
push
jl
mov
xchg
fdivr
idiv
cli
pop
sbb
xor
cmp
ret
nop
test
subb
dec
aad
and
nop
icebp
xchg
lret
int
mov
jb
aad
push
aam
andl
jnp
les
lock
ficompl
dec
jno
mov
jnp
inc
ds
pop
mov
xchg
outsb
mov
repnz
xor
aas
cltd
data16
jg
jnp
xor
jb
inc
orl
leave
leave
shll
mov
xchg
xchg
cmpsb
dec
popl
inc
dec
pop
cltd
in
sahf
shrb
jl
jbe
push
jo
mov
fildll
inc
daa
add
xlat
ljmp
hlt
lea
ds
imul
jne
inc
icebp
jecxz
xchg
es
fldenv
stc
leave
and
cwtl
push
dec
dec
jnp
cmp
sbb
cmp
pop
pop
push
les
sub
mov
lret
add
mov
rorb
pop
repz
lret
sub
stos
xchg
xchg
daa
imul
and
mov
es
sti
mov
outsb
fwait
outsl
cmp
inc
stos
cmp
test
xor
jmp
jmp
nopl
mov
fisttps
sub
xchg
std
sbb
iret
iret
cmp
out
iret
test
and
dec
insl
ja
in
dec
mov
leave
ljmp
mov
mov
icebp
push
scas
push
es
xor
bound
loopne
mov
or
es
aas
push
or
xchg
xor
mov
sbb
cmp
outsb
ja
push
mov
int
out
ljmp
testl
cmp
inc
insl
shlb
or
ljmp
and
adc
scas
jb
mov
jns
dec
push
ds
sbb
ret
aad
fcomip
xor
ret
icebp
ror
int3
mov
cltd
ret
cmpsb
or
outsb
fwait
out
ljmp
sub
cmpsb
cmc
pop
subl
and
ljmp
lds
pushf
leave
sarl
mov
shll
insb
push
idivl
jge
fiaddl
jle
push
lds
or
xor
fldl
sbb
out
sub
xlat
push
fs
adc
aaa
or
sbb
outsb
xorl
loop
pop
pop
fidivrs
lret
shl
and
mov
aaa
fcomi
push
xchg
adc
cmp
pop
repnz
sub
xor
jp
ss
sub
mov
lock
and
popf
aaa
adc
stos
mov
mov
lcall
mov
outsl
mov
pop
aad
test
sub
test
in
mov
fcoms
xchg
in
addr16
stos
sbb
call
std
lcall
out
jmp
ja
xchg
orl
and
or
cs
pop
sub
push
dec
out
xchg
pop
fsubrl
xor
cld
movsl
sbb
dec
or
cmp
adc
push
movsb
data16
scas
aad
arpl
push
xchg
xor
sbb
sub
xor
sbb
inc
push
mov
push
fs
xchg
scas
xchg
scas
mov
rcll
or
enter
mov
outsl
loope
add
mov
xor
fdivrs
dec
out
int
inc
out
loop
mov
push
cmp
xor
lret
mov
js
jne
inc
popa
xchg
clc
dec
movsb
fucom
mov
ret
pushl
jg
in
or
push
xor
lock
sbbb
dec
jb
push
test
sbb
hlt
push
pop
cmp
push
hlt
scas
movsb
test
cmc
mov
pop
cli
addr16
and
xchg
mov
adc
push
in
repz
ror
inc
lret
sti
sbb
xor
jae
iret
and
out
enter
xchg
or
test
jmp
and
sub
push
xor
push
sbb
push
push
icebp
adc
test
aam
sbb
dec
add
or
outsl
jg
or
mov
arpl
je
lahf
fistpl
push
xor
into
out
lods
div
jmp
push
fwait
jae
or
inc
or
int3
lods
adc
xor
stc
gs
dec
mov
sub
outsl
push
xor
cmp
adc
nop
sub
jb
dec
inc
or
mov
pop
fadds
dec
xchg
mov
fisubl
imul
fildl
sub
xchg
int
ds
mov
fs
jp
jg
outsb
mov
jne
sub
lods
repz
loop
and
lock
rcll
adc
sub
xor
in
das
push
insb
or
or
nop
and
push
arpl
pop
sbb
in
inc
in
outsl
cmc
inc
inc
xor
jae
jnp
adc
dec
lds
repnz
pop
push
int
insb
and
dec
dec
or
xchg
lret
xor
jp
mov
filds
cmp
sub
adc
test
shll
pop
or
cmpsl
and
adc
push
out
jge
repnz
sbb
xchg
aam
cld
les
outsb
cli
fs
dec
test
mov
jmp
fsubs
push
push
mov
into
mov
cs
sub
pcmpeqw
popf
jl
sbb
pop
les
dec
out
test
inc
lods
pop
test
loope
xchg
jle
adc
or
into
sti
jne
popa
popf
adc
xchg
mov
add
lret
iret
movsl
ds
test
jnp
add
popa
movsl
sti
xchg
sahf
sub
sub
xchg
leave
inc
push
stos
divl
adc
pop
addb
cmp
or
or
into
adcl
xchg
cmp
inc
not
fsubrs
mov
jg
ret
sbb
repnz
push
xor
pop
int
stos
jle
into
aam
fdivs
pusha
stc
fidivl
and
pop
aaa
scas
int
pop
loop
outsl
imul
in
lock
sti
push
cltd
xchg
sbb
push
fisttps
fisubs
and
xor
mov
hlt
std
fwait
loope
add
hlt
mov
call
mov
aam
popa
jl
xchg
lods
aad
push
stos
scas
ds
pop
sbb
xor
idiv
movsb
xlat
sub
cmp
aam
xor
add
dec
ret
push
es
rcrl
xor
cld
jmp
adcb
mov
push
ret
xchg
pop
fsubs
sbb
subb
mov
xchg
dec
jmp
movsl
push
call
jae
mov
out
adc
sub
loope
in
xor
xor
in
or
pop
push
fnstsw
and
lahf
nop
loop
xchg
jno
xor
push
dec
cmc
ret
sbb
ss
xchg
testl
insb
int3
xchg
nop
add
mov
sub
adc
ffreep
and
cmp
mov
in
mov
cli
insl
mov
nop
in
sbb
inc
dec
test
out
bound
or
dec
arpl
stc
cwtl
movsl
jnp
mov
fsubrs
jno
out
cmp
dec
jb
gs
int3
push
out
inc
icebp
ss
aaa
movsb
es
mov
cmp
loope
insb
ja
adc
jns
lods
xchg
sub
aad
fldenv
xchg
mov
inc
push
rcrl
stc
cmp
insb
imull
test
out
in
fadd
xor
in
mov
stos
stos
scas
xor
pusha
mov
sub
inc
mov
insb
dec
sti
jg
inc
and
inc
inc
inc
scas
sbb
in
pop
xor
mov
push
pop
stc
int
push
pop
add
ja
jnp
enter
cs
lods
nop/reserved
sub
divl
dec
dec
and
push
mov
mov
push
xlat
mov
fldt
dec
add
imul
sbb
inc
loopne
cld
dec
mov
out
stos
imul
inc
cld
jecxz
mov
mov
jl
mov
hlt
and
and
lret
imulb
jmp
out
daa
dec
je
aas
push
pop
mov
xchg
and
ss
arpl
in
or
movsb
xor
jmp
or
je
cmp
jbe
sbb
push
aam
lret
and
sbb
xchg
stos
jb
jg
push
je
adcl
and
dec
popf
mov
repz
daa
pop
pop
fimuls
sbb
std
pop
jle
out
jge
lcall
push
push
pushf
lods
xchg
into
dec
mov
out
testb
xchg
adc
dec
dec
daa
pop
sbb
mov
mov
icebp
xchg
addl
adc
xchg
ds
movsl
out
xchg
repz
rol
les
outsl
mov
int
subb
mov
cld
cmp
rclb
das
pop
cmp
mov
sub
adcb
outsb
push
test
cmp
mov
std
insb
sub
enter
jne
inc
and
lock
inc
inc
dec
mov
sahf
imul
in
jge
mov
das
lock
or
mov
cmp
xorl
int3
fldt
pop
fsubr
ja
sub
inc
xchg
shrb
movsb
adc
lods
dec
pop
mov
xchg
cmp
mov
data16
mov
pop
push
fsubl
stc
lock
out
push
arpl
xchg
or
out
sub
jmp
adc
dec
imul
int
in
sbb
adc
or
fisubs
je
mov
sub
aad
scas
jns
daa
fistpll
jns
push
mov
or
mov
mov
mov
insb
mov
fstl
and
sub
ror
mov
pop
negb
add
push
or
in
or
int3
cmp
fldcw
xchg
jno
xor
repnz
adc
idiv
sbb
and
mov
loopne
cmp
mov
push
mov
shll
mov
cmp
and
std
out
ljmp
adc
cwtl
pop
pop
dec
out
cmp
adc
dec
and
inc
subb
callw
mov
in
sbb
and
int3
jo
jecxz
sbb
aas
pop
add
addr16
sub
lock
xor
rol
aas
push
iret
and
add
cmpsb
addr16
das
prefetch
fistpl
inc
mov
or
test
xchg
push
cmpsb
sbb
aam
stos
pop
pop
pusha
add
fsubs
jle
out
add
loopne
push
pushf
iret
sub
add
xor
out
mov
xchg
aad
adc
inc
push
mov
into
outsl
popa
sub
stos
pop
or
inc
cld
mov
test
jne
cmpl
addr16
arpl
pop
push
mov
aad
inc
jb
xlat
cwtl
sbb
fsubrs
push
rcrb
cwtl
pop
sahf
inc
pop
mov
add
mov
in
cmp
or
dec
in
lahf
mov
mov
inc
push
cmpsl
rcl
ljmp
xor
movsl
icebp
cmp
xchg
iret
inc
inc
insl
and
push
xorb
outsb
inc
pop
jo,pn
xorb
iret
inc
mov
outsb
rclb
repz
sbb
enterw
mov
sub
sti
sahf
inc
jno
dec
ucomiss
les
lret
or
pop
mov
xchg
inc
jb
out
sarl
push
xchg
mov
pop
sahf
adc
jo
mov
xchg
lods
inc
sbb
outsl
xlat
cmpsb
xchg
js
add
cli
int
sbb
call
scas
dec
test
cmp
inc
pop
pop
sbb
jle
jl
pop
cmp
xor
mov
dec
lods
out
inc
mov
pop
cmp
int
loop
sbb
inc
loop
repz
inc
insb
out
ss
jbe
mov
incl
push
js
mov
lahf
adc
insb
xor
adc
mov
xchg
ljmp
insl
sbb
es
fs
adc
inc
xchg
shr
mov
bound
jne
jp
sub
es
pop
test
cs
ffree
dec
jo
ret
cmpsl
leave
pop
adc
sbb
push
or
pop
mov
popa
adc
xorl
test
mov
adc
pop
pop
add
and
in
test
lock
int
roll
test
pushf
fists
dec
bound
jg
mov
dec
mov
push
inc
or
test
mov
cld
sub
lods
mov
xchg
outsb
pop
jnp
mov
js
cmp
arpl
pop
scas
iret
lea
cmp
and
test
push
inc
sbb
movsl
pop
xchg
mov
rorb
inc
bound
push
jl
dec
cwtl
dec
push
cmpsl
push
dec
sbb
pushf
rcr
mov
sub
aaa
call
enter
fdivl
push
or
push
mov
ds
dec
test
test
neg
or
add
pop
out
mov
test
mov
and
jae
movsl
outsb
push
daa
add
xchg
inc
inc
fidivrl
inc
in
and
or
in
push
call
stos
movswl
cmp
dec
jge
jg
dec
add
jno
hlt
lret
movsb
cltd
fisttpl
sahf
fildl
iret
cmp
jne
mov
ja
adc
sti
pop
inc
ljmp
xor
pop
aad
mulb
sbbl
inc
imul
push
xchg
jmp
dec
imul
mov
shrl
add
add
add
add
nop
fisubl
xor
pop
add
cltd
sbb
inc
ret
jp
mov
cmpsl
arpl
inc
imul
idivl
add
xor
sete
push
xchg
xor
loopne
gs
shlb
xchg
dec
fcoml
fimuls
jl
dec
inc
cmpsb
jnp
cmp
test
dec
popw
lods
jne
sub
outsb
adc
sbb
mov
adc
push
in
and
fs
sbb
pop
xchg
push
je
cmc
mov
mov
inc
push
shll
mov
jne
xor
add
pop
ja
cmc
mov
ret
xorb
xbegin
inc
loope
cld
ficoml
push
shrb
aas
mov
fisubrs
inc
movsb
mov
pusha
hlt
pusha
movl
push
push
or
xchg
int3
or
push
and
xor
inc
daa
cmc
inc
xorb
call
loop
js
popf
sahf
aad
das
fs
push
sub
and
push
das
or
mov
sbb
push
and
pop
xor
jmp
lret
fs
leave
or
xor
aas
jg
jnp
mov
xchg
xor
mov
mov
or
int
jae
mov
dec
sbb
std
push
imul
push
or
sbb
lret
cmp
sbb
popf
push
in
add
sbb
lcall
adc
idivb
push
sahf
into
sti
jmp
mov
mov
jae
sub
dec
stos
sbb
mov
jns
adc
pop
ja
jmp
shrb
pushw
xor
lds
stos
hlt
xor
fcomp
add
mov
fistl
jno
test
lods
test
cmp
popf
movsl
in
mov
popa
push
in
and
jge
mov
repnz
mov
add
pop
call
lds
add
nop
mov
xor
shll
push
cmp
mov
cltd
xor
dec
int
aad
ja
aas
xchg
push
out
sub
push
jg
int
cwtl
push
mov
lods
inc
pusha
or
add
inc
in
inc
push
or
popa
add
popf
aad
pop
stc
push
jne
sbbb
push
aaa
fiadds
cmp
js
jmp
sub
mov
mov
sti
mov
out
das
jno
sbb
movsb
mov
dec
mov
popf
or
dec
cld
pushf
xchg
test
dec
xchg
stos
or
mov
out
inc
aas
push
pop
mov
int
repnz
enter
outsb
adc
add
or
dec
and
aas
shl
sub
lods
jae
and
sbb
jne
mov
sub
scas
lcall
mov
cwtl
daa
mov
incl
xor
mov
sbb
daa
movsb
sub
jnp
ficompl
add
sbb
mov
and
mov
in
iret
add
and
or
adc
add
int3
ja
cld
or
cwtl
lahf
inc
xor
add
inc
fs
fldl
scas
add
imul
mov
push
shr
fnstenv
xchg
cs
xorl
push
mov
xor
dec
inc
andb
test
mov
mov
andb
neg
jo
popf
mov
es
pop
jns
pop
pusha
cs
fidivs
cmp
inc
jb
loope
dec
jle
loop
or
adc
push
clc
or
add
xchg
xchg
les
scas
insl
adc
jae
aaa
int
dec
push
aas
testb
jb
mov
pop
mov
mov
or
test
fsub
jb
mov
aam
das
insb
hlt
add
cmpsl
xor
inc
leave
xor
lret
lret
je
cmp
jecxz
bound
mov
mov
not
jp
xchg
out
mov
pop
incb
mov
stos
sbb
sti
int3
mov
loop
mov
int3
or
jl
fmuls
sar
dec
pop
pop
mov
mov
and
mov
add
movsl
stos
push
into
fiadds
pop
insb
jnp
fs
sbb
ret
xorl
or
cmpsl
cmp
bound
push
ret
out
mov
or
xor
ljmp
push
adc
insl
hlt
sahf
adc
jg
adc
dec
or
xor
pop
ficompl
dec
pop
scas
fidivrl
pusha
out
push
int3
cmp
lods
sub
push
push
in
add
clc
mov
sbb
and
jmp
mov
aaa
jecxz
pop
push
imul
inc
ss
add
pop
mov
jo
lret
lods
mov
xchg
push
pop
adc
jbe
fwait
sbb
mov
bound
fimull
jge
add
and
sub
cs
or
pusha
sub
in
add
and
fs
xchg
stos
xchg
dec
dec
in
cltd
in
pushl
push
loope
adc
roll
jnp
xlat
addr16
nop
pop
or
loop
jmp
mov
xchg
xchg
mov
idivb
jae
push
sub
cmpsb
enter
pop
mov
cli
or
sub
scas
adc
clc
popf
pop
shrl
imul
js
lock
or
sub
int
cwtl
jle
add
dec
scas
scas
das
push
cmpsb
jo
sub
push
stos
inc
add
sbb
mov
adc
dec
arpl
sub
push
inc
test
inc
int
pop
lea
inc
pop
mov
nop
repz
jle
and
push
sub
sbb
mov
jge
dec
rclb
ret
jmp
notb
sbbl
je
mov
cmp
ljmp
adc
icebp
add
loope
sub
mov
dec
insb
pop
cwtl
clc
cmp
jbe
aad
hlt
xor
daa
mov
fstl
repnz
jno
jno
mov
mov
sbb
jne
fnsave
adc
jmp
test
inc
and
pushf
cmp
in
push
add
jbe
jb
pop
insb
movsb
mov
pop
ret
lea
jge
mov
or
fwait
pop
insl
out
std
inc
ds
cmc
hlt
xchg
fnstsw
lret
mov
out
pop
xor
nop
cmpsl
lods
add
mov
jmp
jg
mov
push
ror
pop
outsl
jbe
sbb
les
out
gs
stos
scas
push
int
into
pop
xchg
lret
or
data16
lcall
stos
push
bound
push
es
lds
negb
add
sbb
loope
scas
inc
sub
pop
or
xchg
jns
paddd
stos
dec
push
loop
sbb
mov
ret
sub
jecxz
mov
mov
idiv
outsl
cli
cmc
das
test
cmp
je
mov
xor
jge
or
sahf
and
xchg
lods
cld
scas
adc
cmp
cltd
loopne
and
and
ret
sub
push
aas
test
mov
fsts
mov
adc
test
cmp
loopne
lods
lret
push
mov
ss
scas
icebp
fdiv
mov
enter
in
sub
movsb
ret
fs
inc
jge
rcrb
in
and
push
stos
add
inc
mov
pop
sar
mov
push
mov
cs
inc
jl
pop
imul
dec
repz
cmp
jp
sbb
in
xor
popa
push
jmp
push
xor
iret
fdivl
je
sti
mov
imull
lods
mov
pop
cld
pushf
xchg
sub
test
outsl
inc
inc
mov
mov
mov
ja
jno
push
pop
pop
jmp
cmc
jecxz
es
or
jo
notl
ret
js
lods
decb
cmc
psrad
xor
push
xor
mov
inc
mov
hlt
cld
cltd
jne
imul
lods
sbb
add
in
lcall
xor
data16
mov
movsl
mov
testb
arpl
jge
mov
rcl
cmp
loop
mov
xchg
sub
enter
insl
sahf
cld
gs
in
push
pop
ficomps
jo
jne
xchg
lds
pusha
loop
xchg
xor
aam
and
pop
out
mov
mov
fnstsw
sub
mov
mov
loopne
mov
js
mov
jmp
sarb
adc
fimull
inc
into
pop
push
or
stos
pushf
dec
ficoms
inc
or
lock
pushf
mov
jg
movsl
and
add
push
jle
push
ja
jo
jno
filds
or
jbe
inc
sbb
and
jle
loop
cmpb
in
dec
loop
mov
dec
fmuls
rcrb
lret
xchg
dec
neg
jl
jmp
insl
ja
cmp
test
out
jns
adc
jne
dec
aas
out
jp
cmp
push
cmp
inc
loopne
shll
pop
or
loopne
pop
pushf
test
cmp
inc
fs
jge
mov
adc
or
xorl
call
pop
xchg
dec
ja
scas
and
loopne
dec
sbbl
dec
jp
loopne
mov
lret
jne
ret
pop
pop
pop
inc
pop
and
jbe
push
loopne
int
and
jle
cmpsl
xlat
xor
push
pusha
test
adc
push
mov
cmp
testb
loope
push
inc
sbb
pop
inc
cltd
clc
mov
lods
jno
fstl
inc
push
push
mov
push
push
mov
loop
mov
pushf
sub
push
mov
mov
pop
sar
dec
mov
mov
jo
lret
add
insb
inc
xchg
lret
out
dec
fidivl
mov
repz
fidivs
mov
outsl
mov
rcll
out
ds
popa
or
loop
sub
shrb
aaa
mov
mov
jmp
stos
movsb
incb
mov
in
push
mov
dec
sub
adc
xor
fnstcw
ret
and
adc
and
pop
push
or
cwtl
add
popa
repz
mov
iret
int3
lahf
rcrl
test
jmp
jno
inc
jne
dec
lret
cs
and
xor
mov
xchg
xchg
ss
out
sub
sahf
mov
xor
pop
shl
sub
cmp
hlt
push
mov
das
es
adc
xor
sub
push
movsl
mov
scas
sub
out
pusha
sbb
xchg
and
mov
shrb
mov
inc
ds
test
lock
rcl
hlt
and
aam
push
mov
iret
dec
sbb
mov
mov
aad
int
cmpsl
jae
push
sbb
push
push
cld
push
popa
mov
test
and
lds
push
or
data16
nop
xorl
xor
adc
in
push
addr16
call
mov
xlat
fwait
lcall
fnstcw
xor
cmp
jnp
lret
ljmp
sub
std
aas
xchg
and
and
rolb
mov
inc
loopne
movl
lret
and
and
aam
cmp
jp
dec
andl
inc
imul
ds
mov
ror
in
enter
fdivs
cld
jo
push
fsubrl
sub
rcrb
add
adc
inc
jne
scas
idivb
sub
cmc
sbb
imul
mov
xchg
and
insb
lods
push
or
and
popf
mov
gs
test
push
push
xchg
push
sahf
adc
xchg
lea
add
aas
loopne
adc
jbe
and
sbb
inc
or
stos
icebp
fadd
out
cmp
shrb
and
lret
popf
les
insb
iret
aaa
into
xchg
insb
ret
mov
in
xchg
push
xchg
mov
ucomiss
mov
and
cmp
or
add
test
mov
jmp
inc
pop
bound
inc
pop
jge
imul
imul
repz
jno
ds
lds
std
mov
mov
push
lcall
mov
into
add
inc
repnz
imul
aaa
or
pusha
icebp
subb
sub
pushf
push
mov
cld
xchg
test
mov
jo
dec
int3
jl
push
hlt
dec
jmp
lret
stc
push
xchg
add
nop
mov
jmp
mov
outsl
xchg
jo
mov
xor
dec
enter
pop
or
daa
enter
lret
sahf
dec
bnd
cmp
add
gs
mov
push
fstl
in
mov
adc
sti
sub
loopne
pop
pop
cmp
imul
pop
loope
outsb
xchg
fmul
mov
movsl
push
xchg
add
bnd
mov
fwait
jg
loop
cmp
sarl
sub
dec
ja
sbb
adc
rorl
jno
js
fisubrl
flds
test
push
or
xlat
aaa
cwtl
les
mov
das
pop
and
lods
or
jae
das
pop
pop
mov
mov
add
and
jl
testl
jno
movsl
scas
cmp
sbb
out
xor
in
xor
xchg
in
pop
mov
mov
mov
adc
mov
pop
mov
cmp
lahf
lahf
cld
add
out
loop
ljmp
pushf
xor
add
mov
fdivrl
or
das
repnz
mov
loopne
inc
pop
mov
cmpsl
or
ljmp
xor
mov
shrl
cld
jl
sbbl
push
inc
lds
lret
jo
xchg
xchg
loopne
test
pusha
jno
stos
add
das
jbe
maskmovq
negl
jo
fldcw
pop
mov
sbb
outsl
arpl
lcall
jb
pop
movsb
ljmp
fsts
sbb
daa
inc
rcrb
mov
pop
scas
xor
inc
jbe
movsl
cs
clc
cmp
mov
addr16
sbb
cltd
dec
dec
pop
push
fnstcw
push
orl
pop
add
and
das
outsl
sub
repnz
enter
add
scas
aad
mov
jg
mov
mov
lea
fidivl
enter
pusha
add
cltd
cmc
lock
xor
mov
iret
gs
ljmp
mov
in
push
xchg
push
addl
scas
sub
xor
mov
insb
int
push
aaa
sub
in
push
sbb
pop
push
mov
pop
cmpsb
mov
lock
xchg
mov
es
jle
out
inc
push
or
jbe
xor
ja
ja
pusha
xor
mov
addb
jnp
cmpsl
sub
xchg
fsubrl
enter
movsb
mov
scas
popf
push
sbb
sahf
shlb
int3
daa
xor
cmp
mov
push
push
mov
xchg
dec
fdivl
popf
dec
movsl
daa
jo
mov
daa
cld
rcr
out
inc
pop
popf
sbb
xor
lods
pusha
mov
imul
test
stos
subl
xchg
xor
les
js
xor
mov
add
cmp
dec
push
dec
test
mov
mov
xor
mov
enter
jl
sub
in
push
nop
dec
xor
ret
mov
std
inc
add
pop
cld
rcll
daa
addr16
cmp
nop
insl
cmp
lret
or
or
into
es
loope
jge
adc
test
scas
hlt
es
shl
icebp
aas
movsb
pop
jle
sbb
xchg
jno
mov
jne
pop
pushf
ja
test
stos
or
gs
pop
xchg
mov
cmpsb
jecxz
aaa
iret
and
dec
dec
decb
adc
jne
aad
xchg
mov
or
nopl
mov
mov
int3
sbb
pop
pop
jnp
fwait
and
sahf
lds
es
jmp
cmp
out
mov
pop
pusha
push
stos
aas
cmp
xchg
dec
shll
jl
mov
mov
xchg
sti
ljmp
cmp
push
dec
shr
cmp
lds
ljmp
lcall
jns
pop
rcr
push
add
dec
lods
icebp
inc
std
sbb
mov
pop
sbb
std
ret
pop
das
push
dec
js
sbb
das
pop
xor
jmp
sub
loopne
adc
outsl
sti
out
pop
fcomps
lods
insl
insb
mov
outsb
je
sarb
or
or
add
jmp
bound
pop
lahf
add
mov
inc
add
data16
jp
lea
sbb
int
sbb
jbe
out
les
movsb
dec
fists
pop
cmpsb
xor
pop
out
loope
fisubrs
mov
lods
fadds
mov
dec
sub
mov
sub
add
in
jp
and
adc
loope
add
sahf
fwait
aad
xchg
movsl
iret
push
cmpsl
cs
leave
mov
mov
jp
sahf
push
cmp
mov
push
sbbb
stos
xor
daa
fnsave
popa
movsb
fwait
xchg
ret
stos
ret
inc
loop
push
and
or
sub
dec
jo
out
xchg
lds
xlat
cmp
aas
adc
pop
mov
insb
jg
jne
leave
test
mov
lods
mov
les
in
or
inc
xchg
and
and
ljmp
sbb
sub
xchg
popf
lahf
aad
stos
mov
addr16
inc
les
mov
scas
xchg
sub
sub
les
in
push
jne
sub
pop
lahf
xorl
insb
enter
adc
add
movsb
aaa
pop
aaa
jb
dec
out
call
sub
mov
xchg
stos
lcall
adc
stos
inc
push
lock
ret
mov
mov
js
pop
push
mull
fistl
push
mov
mov
les
ds
add
mov
xor
inc
dec
pop
out
push
lahf
jo
mov
jo
jae
mov
imul
pop
inc
jmp
mov
mov
mov
sbb
repz
xor
or
stc
push
sub
push
shrl
and
sti
xchg
or
jmp
sbb
or
mov
lret
js
jne
test
fdivs
call
jg
xor
pop
lods
adc
rcr
mov
mov
sarb
xchg
out
jmp
aad
ljmp
flds
and
xor
hlt
icebp
push
jle
pop
cmpsl
or
dec
jbe
dec
xrelease
aad
das
cmp
sbb
aaa
cmpsb
cltd
xor
mov
mov
fldcw
mov
pop
sub
add
push
scas
jo
cmpl
icebp
cmp
dec
nop
jb
stos
sub
jne
ja
dec
je
jo
clc
les
fisttpl
aaa
mov
lret
or
cwtl
jg
jecxz
add
aad
pop
lret
push
les
sub
pop
mov
jo
gs
inc
cmpsb
xor
mov
and
fs
out
or
add
pop
and
or
pop
jns
mov
mov
xchg
es
iret
sarb
adc
push
and
out
push
sub
mov
cmp
mov
inc
cmp
lods
lcall
dec
pushf
fisubrs
pop
dec
push
faddl
hlt
scas
aam
and
pop
mov
mov
test
in
stos
pop
sub
mov
cwtl
add
outsl
lea
pop
pusha
outsb
and
push
fistps
int3
inc
or
mov
movsl
int
and
inc
sbb
push
mov
daa
dec
lret
dec
jg
leave
int
or
mov
cmp
and
sub
out
jecxz
xchg
xchg
cmp
int3
sbb
mov
outsb
xchg
or
loopne
call
mov
lret
insl
hlt
pop
popa
adc
lea
jne
xchg
bound
adc
jne
outsb
fstl
xchg
mov
adc
lds
push
push
fidivrs
add
jno
pop
mov
mov
lldt
aad
dec
sbb
pop
adcb
mov
xchg
mov
sub
inc
popa
nop
decb
pop
push
pushf
das
nop
xor
mov
out
jg
and
and
and
sub
inc
rorl
xor
stos
adc
cmp
call
xchg
xchg
pushf
faddl
adc
nop
rclb
xchg
dec
xchg
jbe
aas
iret
inc
or
and
push
call
mov
sbb
mov
jns
xchg
jp
lods
xor
addr16
aad
adc
push
xor
push
jg
sub
fs
dec
adc
xor
sub
cmp
add
pop
frstor
jecxz
imul
lods
xor
jae
out
call
add
jb
add
xchg
popa
dec
insl
xchg
xchg
inc
ja
cmpsb
xchg
cmp
pop
pop
push
arpl
bnd
pop
jp
or
in
jmp
pop
mov
push
ljmp
cmp
or
sub
mov
jle
cmc
mov
mov
xor
push
push
divb
pushf
sbb
lods
out
push
lds
add
shl
in
and
jmp
outsb
mov
and
adc
mov
out
rcrb
push
mov
repnz
jge
popf
fcoms
inc
mov
aaa
sub
push
cmp
insl
std
mov
xchg
iret
cs
enter
pop
aam
ja
xor
out
aas
pushf
dec
jle
js
pop
in
data16
lahf
mov
adc
lods
nop
mov
jmp
jne
and
xor
or
lret
jne
adc
fisttps
pop
loop
fnstsw
cltd
in
and
dec
pminub
das
jbe
popf
rolb
sbb
daa
xchg
cwtl
sbb
jne
pop
test
in
add
fwait
stc
dec
or
jge
sub
sbb
xlat
adc
repnz
add
jmp
ret
and
sub
data16
xor
fildl
subl
cli
js
daa
ret
rcl
cmpsb
mov
xor
in
loope
dec
into
hlt
gs
je
sbb
add
push
insl
mov
jmp
or
or
cmpsb
popf
jae
mov
icebp
push
jg
out
push
fidivs
rcll
mov
int
pop
int
ret
fs
jg
fstl
test
call
push
add
in
fisubl
call
dec
testb
add
out
loopne
movb
sbb
cmp
mov
aam
jp
xchg
jo
sbbb
sti
jo
int3
outsb
movsl
push
clc
test
cmp
jnp
aam
pop
out
and
movsl
sbb
or
xchg
pop
insb
adc
inc
mov
das
int
mov
lret
popa
adc
xchg
push
test
lahf
adcb
xor
popa
stos
sub
jne
sbb
lcall
mov
inc
fs
fwait
inc
add
add
push
cltd
fldt
imul
mov
push
shlb
fdivl
mov
inc
and
adc
in
mov
call
pop
adc
cmpsl
inc
and
sbb
cmpsb
inc
enter
push
jbe
add
mov
enter
push
add
subb
mov
ror
mov
sti
and
shlb
ret
punpcklbw
jmp
add
mov
jae
subb
fdivr
cmpsl
mov
adcl
mov
outsl
xor
dec
mov
cmp
dec
jg
mov
ss
insb
or
test
adc
or
stc
pop
jp
adc
loope
dec
jmp
call
mov
xchg
mov
les
rorl
imul
arpl
jle
mov
xor
in
or
arpl
movsl
adc
loopne
mov
pop
fstl
std
sbb
jp
aaa
inc
imul
call
bswap
sbb
dec
and
ret
add
loope
stos
xor
push
mov
lods
loop
hlt
stos
movsl
pop
cltd
es
into
mov
xlat
cmp
mov
inc
dec
jmp
call
ja
jg
xor
stos
xor
aaa
push
inc
repz
dec
std
push
bound
test
xor
mov
je
pushf
fwait
leave
inc
nop
int3
and
push
dec
lea
pandn
repnz
shll
push
cli
je
loope
data16
cmpsb
es
mov
adc
lds
ljmp
je
xor
sub
or
mov
mov
lds
orb
mov
mov
test
mov
xchg
shl
aaa
notb
adc
fldt
mov
inc
mov
pop
nop
sbbl
jno
idivb
jne
and
in
adc
fwait
sbb
fsts
or
fcmovu
clc
in
pop
mov
hlt
sub
stos
push
cld
aas
xchg
cmp
xchg
pop
mov
pop
movl
ror
jmp
cmp
stos
fs
xor
push
das
ja
es
lret
addr16
stos
outsb
leave
test
test
cmp
cmp
jo
fisubrl
stos
popf
push
lret
gs
adc
mov
sbb
rolb
push
pop
mov
cmp
dec
mov
shl
sub
pushf
mov
jb
sub
div
mov
or
adc
mov
hlt
push
sub
xchg
dec
adc
sub
aas
mov
push
push
push
jl
push
stos
mulb
pmaddwd
adc
add
sbb
pop
sahf
mov
jl
xor
push
hlt
push
aam
fstpl
test
push
push
mov
lods
pop
repnz
stc
push
insb
inc
push
loope
adc
cs
sub
xchg
push
and
out
mov
stos
sbb
add
adc
loopne
mov
aam
outsl
cltd
dec
sub
pop
push
sbb
rclb
sbb
push
jp
add
pop
adc
movsl
gs
pushf
and
and
loope
stos
imul
jp
inc
aaa
xor
ja
repnz
cmpsl
dec
lea
rorl
imul
inc
gs
pop
dec
mov
in
pop
popa
sbbl
shll
ret
mov
cld
add
add
js
lcall
pop
or
xchg
stos
negl
mov
mov
pop
test
dec
mov
cmpsl
xchg
ficoml
mov
ss
adc
stos
loopne
icebp
test
aaa
sar
pop
mov
imul
inc
add
sbb
stos
adc
mov
sbb
fdiv
les
out
imulb
ljmp
sub
cmp
fildl
cmp
jae
jmp
fists
out
dec
xchg
mov
std
jbe
lcall
jns
cld
mov
sbb
gs
adc
filds
loopne
cmpl
jl
pushf
lock
roll
cmp
mov
pop
sbb
adc
mov
aaa
or
mov
mov
insb
lods
pop
bound
push
test
and
cli
inc
outsb
fstpl
or
cmp
scas
arpl
enter
inc
dec
test
pop
cmp
push
aaa
cli
mov
adc
cmp
lds
in
push
lret
lret
nop
mov
les
add
movsl
jb
shlb
xor
cwtl
xchg
mov
sbb
xor
dec
sub
push
lods
popf
adc
cmp
sbb
addl
repnz
popf
mov
loop
add
ljmp
mov
into
mov
clc
push
dec
roll
dec
daa
fistpll
lea
adc
pop
mov
ds
cmp
jae
mov
mov
jo
and
cld
xor
adc
lret
jp
add
sub
lods
inc
jne
imul
sahf
popa
jmp
add
cmp
lret
push
jno
jmp
frstor
xchg
test
jbe
test
call
add
jne
iret
sub
pop
and
into
sub
pop
loopne
and
inc
add
movsb
stos
adc
sarl
sub
ja
pause
jae
fs
ret
dec
out
bound
fimull
sub
adc
aad
enter
or
aas
fnsave
out
jns
push
pushf
lock
shrl
in
sbb
scas
add
pop
pusha
int3
xchg
cltd
cli
pop
clc
das
pusha
pop
je
inc
xchg
sti
cmpsl
cmp
ja
mov
test
cmp
enter
add
or
gs
xor
repnz
fistpl
cmpsl
fmuls
aad
test
add
loopne
mov
inc
mov
movl
xchg
pop
sahf
add
dec
mov
or
jle
aam
or
jg
lds
stos
in
jle
jno
hlt
pop
sbb
sahf
sbb
add
movsl
push
or
sub
and
subb
add
mov
mov
and
pop
out
fwait
outsb
mov
lcall
sar
pop
loopne
in
jmp
pop
or
sbb
dec
add
inc
mov
popl
shrl
or
pop
cld
lods
scas
pop
xchg
cli
xor
xor
cltd
mov
and
sahf
cli
or
inc
rolb
xchg
imul
orl
push
pop
dec
pop
push
and
fs
push
mov
and
or
mov
jmp
test
in
add
or
pop
pop
pusha
and
insb
dec
sahf
jo
cltd
mov
adc
mov
cmp
arpl
jge
div
jl
orb
decl
andb
mov
or
lods
sub
dec
push
arpl
mov
aaa
enter
push
stos
sub
cmp
test
xchg
cltd
aas
enter
sahf
adc
stc
outsl
push
adc
ss
push
adc
push
adc
fidivl
dec
int
pop
mov
movsb
bound
fildl
outsl
icebp
mov
nop
cwtl
sub
inc
lret
lcall
fs
mov
inc
jns
sub
add
dec
stc
test
pop
lcall
test
mov
lcall
bnd
add
mov
add
jo
cwtl
dec
gs
and
fldenv
std
xchg
and
not
fcomip
push
sbb
xor
fistl
imul
dec
mov
arpl
sbb
push
sub
les
pop
enter
adc
push
xchg
dec
xchg
dec
mov
mov
xor
daa
push
ret
adc
cmp
aaa
nop
lahf
mov
loope
aas
ds
push
loope
inc
shl
in
mov
xchg
xchg
push
mov
push
fxch
faddl
mov
cmp
adc
mov
test
sub
or
mov
inc
sahf
mov
sub
inc
pop
inc
cmc
in
pop
pop
sti
inc
mov
icebp
dec
cmpl
pushf
mov
inc
jno
fs
jno
ret
clc
pop
pusha
stos
ret
fucomi
stc
xchg
mov
inc
mov
mov
dec
push
xchg
jbe
jl
sub
rcl
push
test
lret
or
push
or
fs
push
rclb
mov
fwait
iret
insl
dec
rcrl
scas
push
outsb
pop
repz
mov
and
repz
jns
add
aas
xchg
ret
in
cmpl
fcom
cli
movsl
leave
and
cs
dec
jb
add
ret
movsb
add
ja
mov
mov
mov
mov
xor
jb
lods
test
dec
je
mov
stos
xchg
ds
scas
fwait
jge
mov
lods
jmp
add
repz
inc
mov
xchg
xor
aam
lret
jle
xchg
xchg
mov
adc
roll
bound
mov
push
xchg
stos
imul
test
cs
clc
pop
inc
into
movsl
popf
xor
pop
out
mov
scas
pop
mov
ficompl
fnstenv
mov
cmp
std
mov
adc
push
sti
dec
pop
insb
pushf
and
pushf
pop
pusha
push
outsb
test
and
jp
adc
push
cwtl
bound
pushf
sub
ror
push
cmp
es
push
xchg
aad
gs
ficoml
jo,pt
adc
clc
out
push
pmullw
pop
lahf
mov
dec
mull
out
xor
mov
fs
jl
jo
cwtl
mov
lcall
inc
adc
stos
aam
std
and
lds
push
jp
pop
out
lcall
adc
ret
dec
and
pop
loope
xor
std
add
mov
lret
xchg
xor
pushf
mov
outsl
inc
mov
pop
stc
xlat
jle
cmp
inc
je
int
jge
mov
daa
jb
test
cmp
push
out
push
cmp
popa
call
push
pop
ss
push
jbe
popf
sbb
xor
adc
out
xor
cmp
pusha
pop
popa
push
inc
das
scas
ret
cli
test
inc
popf
xchg
pop
or
das
push
jmp
push
das
and
lods
cmc
das
dec
fiadds
outsb
add
pop
pushf
sar
das
mov
ss
and
lea
mov
mov
inc
fiadds
cld
paddb
ret
pop
or
xchg
xchg
mov
nop
or
xchg
in
mov
sub
dec
lods
mov
push
pushf
and
xchg
push
or
pop
loopne
mov
lock
cmp
push
pop
mov
mov
sub
adc
fld
in
pop
pop
pop
ds
int
mov
or
lods
rcrl
jo
movsb
faddp
xchg
push
lahf
mov
mov
push
loopne
or
dec
aam
push
test
mov
adc
hlt
fisttpl
or
dec
test
aam
testl
xor
int
imul
xchg
test
mov
sbb
or
adc
out
sbb
sub
push
inc
in
iret
add
jl
das
sbb
cmpsl
mov
icebp
xchg
push
adc
inc
outsl
clc
out
xchg
sbb
pop
sub
dec
sub
mov
mov
inc
in
cmc
push
iret
mov
stc
xchg
movsl
mov
sbb
inc
das
adc
mov
or
cmp
xchg
rorb
out
out
pop
das
out
add
add
sub
jne
insl
inc
fimuls
fsubl
enter
sub
pop
lods
lea
scas
mov
pop
sub
fsubl
movsl
push
pushf
dec
and
int
lret
cltd
or
test
mov
ss
or
roll
outsb
jnp
and
out
xchg
add
sub
imul
popl
aaa
mov
xlat
je
cwtl
adc
subl
lcall
jle
inc
mov
xchg
scas
jle
mov
mov
mov
in
add
data16
inc
test
push
push
bound
xor
aam
cmovb
adc
call
dec
les
ss
fimull
rclb
in
mov
stc
data16
repnz
ljmp
test
pop
add
push
xor
xor
mov
xchg
inc
cmp
sti
outsl
mov
xchg
stos
imull
jb
and
bound
pop
and
mov
fstl
xchg
cld
pop
es
pusha
mov
sub
out
dec
ljmp
int
jbe
pop
jl
mov
movaps
lcall
inc
inc
aas
scas
mov
sbb
adc
fildl
cmpsb
or
xchg
inc
test
dec
xchg
into
repnz
mov
and
test
sub
movsb
push
stc
mov
inc
cwtl
or
lahf
xor
xchg
stc
addb
out
call
inc
leave
jo
je
fisubs
movsb
sti
lds
fcmovnu
or
scas
cmp
jo
xlat
mov
inc
mov
pop
inc
push
lock
jno
jp
mov
jno
popa
cmp
test
ds
dec
outsl
lret
shrl
cmp
add
inc
mov
jno
out
lahf
cmp
lea
jb
addl
add
pop
mov
xor
mov
rcr
outsb
je
clc
lods
int
pop
jae
mov
xchg
jecxz
stos
dec
sub
mov
sbb
pop
pop
divl
jne
xor
sub
mov
loope
mov
mov
lock
lret
push
inc
cmp
push
and
pop
mov
mov
fwait
insb
fisubrl
mov
ret
in
stos
fs
cwtl
mov
pop
pushfw
and
add
insb
sbb
adc
or
inc
adc
cld
pusha
add
jnp
xor
jp
inc
mov
xchg
imul
add
andl
sahf
imul
and
xchg
inc
rcrl
jl
hlt
jae
sahf
cmpb
inc
dec
popa
xchg
mov
or
enter
rcl
dec
jno
cs
mov
outsl
sbb
popw
fistpl
push
jb,pn
enter
mov
xchg
lock
mov
jg
cwtl
outsb
xchg
outsl
les
mov
lock
sbb
lcall
les
mov
pop
sbb
repnz
call
pop
push
hlt
ss
mov
rcrl
imul
das
sbb
cmp
ret
sub
leavew
mov
pop
inc
test
dec
sub
xchg
les
loopne
lahf
dec
stos
xor
dec
add
mov
or
mov
notl
adc
jae
and
repz
push
adc
lds
inc
cmp
rorb
loop,pt
mov
jmp
jo
les
movsbl
leave
xchg
dec
loop
or
push
push
sbb
js
sti
mov
out
adc
ret
dec
or
xor
loop
and
jg
push
cld
cmp
sahf
and
fsubrl
add
sarl
push
jae
mov
in
add
in
push
cs
cld
cmc
je
mov
notl
mov
mov
js
adc
pop
ss
jp
movsl
rcrw
testb
dec
mov
and
inc
dec
clc
in
out
jle
xlat
enter
pop
jne
lea
insl
std
roll
jns
fwait
repnz
jmp
rcl
xlat
ja
das
sub
xor
jnp
lds
out
jl
sbb
cltd
out
inc
je
dec
adc
dec
xchg
push
imul
push
adc
xchg
pop
sbb
cmpsl
adc
imul
sub
cld
inc
popa
imul
icebp
iret
sub
enter
int
jno
insl
xchg
stos
cmp
icebp
xor
hlt
mov
cltd
lret
jns
imul
fildll
adc
out
lock
sbb
jg
in
stc
push
pop
push
and
in
ret
mov
test
or
out
jp
mov
xchg
in
je
push
insb
mov
sub
es
sbb
mov
jbe
and
push
insl
jnp
insl
clc
pop
xor
add
lock
out
push
jl
lock
mov
jge
pop
ret
pop
adc
jl
dec
mov
push
push
push
jp
mov
jnp
pop
dec
and
cmpsb
pop
or
pop
divb
mov
sbb
add
fldl
add
rolb
xor
jns
int
mov
push
xchg
and
in
ss
sbb
xor
pushf
aas
or
pop
cmp
pop
cmp
add
lods
fsubrl
push
imul
lock
inc
inc
cs
scas
cld
les
fsubrs
dec
lea
jo
sbb
jns
sbb
pop
push
adc
mov
pushf
in
jg
lods
pop
sub
inc
or
cmp
xor
dec
pop
pop
jmp
mov
mov
pusha
jnp
cltd
ja
lds
ss
jecxz
mov
push
push
ljmp
stos
aaa
xor
loopne
clc
out
push
sbb
xor
sub
stos
and
mov
ljmp
add
add
icebp
jle
ja
test
push
pop
jns
test
lret
adc
cld
sar
stos
insl
jbe
and
mov
fwait
jle
das
je
mov
js
add
cmp
xor
roll
mov
lret
jo
cld
push
push
cmp
in
sbb
push
daa
test
sarb
call
nop
xor
rclb
push
jae
shrl
cmpsl
xor
ljmp
lds
in
dec
andb
mov
dec
iret
leave
pop
and
adc
xchg
cmp
fcomps
xchg
pop
jo
mov
aaa
addps
xchg
and
sbb
ficomps
int
scas
or
addr16
stc
nop
call
pop
in
jae
cmp
addl
gs
aam
dec
pop
movsl
pop
or
ss
pop
ss
lds
dec
imul
iret
xlat
pushf
dec
mov
mov
push
sbb
push
call
je
cmp
or
xlat
sub
jbe
pop
sub
sti
out
push
push
bound
inc
add
insl
divb
das
xchg
mov
mov
cmpsl
xchg
test
jb
add
xchg
adc
cmp
loope
movsl
sub
outsl
pop
cltd
mov
ljmp
aaa
adc
mov
mov
xchg
push
insl
cmpsb
or
pop
imul
outsb
outsl
inc
mov
and
shll
jnp
out
or
fdivrs
insl
inc
bound
push
sub
pop
dec
inc
jnp
arpl
fistpll
call
adc
mov
mov
add
jae
pop
orl
in
jae
js
shlb
cwtl
add
dec
cmp
pop
push
call
jnp
orb
adc
and
adc
mov
dec
sub
adc
push
leave
out
fistpll
jl
aas
xor
imul
mov
jo
or
outsb
subl
push
cmp
dec
mov
pop
loopne
aaa
cs
fiadds
lea
or
xchg
xor
fdivrs
jne
jecxz
xchg
xlat
fistpl
leave
mov
out
lret
scas
test
xchg
add
push
add
cld
mov
push
jmp
testb
mov
inc
outsb
in
rclb
stos
xor
mov
in
stc
pop
fldenv
popf
inc
dec
mov
aam
inc
popf
adc
dec
adc
scas
mov
and
jge
sub
xchg
sub
push
lock
pusha
push
repz
mov
jecxz
loop
jg
lods
inc
ret
test
sub
or
outsb
loopne
fwait
stc
xor
in
sbb
mov
pop
inc
sub
jp
outsb
jmp
cmp
xchg
cld
dec
sub
jmp
xor
cmp
pop
arpl
jmp
std
rorb
aam
inc
jno
clc
and
ljmp
imul
pushf
inc
pusha
repz
push
aad
outsb
mov
jns
in
mov
loope
ret
push
dec
call
mov
lret
jno
or
shrl
push
lret
sub
repnz
cltd
lret
add
mov
rol
xchg
mov
in
xchg
jl
and
jmp
ljmp
mov
cmp
arpl
movsl
stos
sbb
testl
fisttpll
fnstsw
and
int
mov
xor
mov
sub
popf
test
mov
bound
bound
or
lods
clc
ds
adc
xor
int
pop
mov
sub
push
and
js
jo
enter
test
dec
cmp
cmp
in
jecxz
aad
filds
push
or
sub
ds
outsb
cmpsb
add
mov
lret
jge
mov
inc
push
es
mov
push
out
scas
popa
in
stos
stos
cltd
mov
mov
pop
lcall
fnstenv
fcompl
imul
data16
stos
push
jns
js
fadds
and
or
mov
jne
jecxz
roll
adc
jae
cmc
dec
add
or
xchg
fmul
inc
cli
inc
pop
cmp
push
pop
sub
rclb
test
jno
cmp
scas
and
and
cmp
int
dec
pop
sub
push
iret
int
pop
pop
dec
pop
shl
push
jne,pt
test
pmaxsw
stos
lret
and
ljmp
push
das
pop
repnz
mov
mov
and
int
adc
pop
xor
mov
adc
cmpsb
mov
outsl
xor
rorb
test
movsl
mov
sbb
mov
pop
pop
test
xor
lahf
faddp
or
mov
sbb
inc
clc
lods
adc
mov
sub
adc
int3
mov
cvttpd2pi
mov
add
test
dec
pop
ss
out
mov
push
outsb
and
sahf
xor
aam
xchg
jns
fcoml
mov
cmpsb
cmp
inc
insb
lret
insl
frstor
daa
xor
mov
aam
hlt
jge
jne
insl
or
fmuls
and
sub
xchg
inc
cwtl
pop
push
mov
out
daa
je
data16
aad
sub
ret
sub
out
inc
xchg
xchg
mov
mov
adc
or
mov
lret
shl
cmp
mov
pop
outsl
adc
enter
xor
pop
cltd
popa
dec
out
lods
mov
lds
fwait
xor
jg
push
les
hlt
and
lret
repnz
stc
xor
lods
push
test
mov
jb
aad
nop
push
pusha
aam
push
insb
fwait
mov
or
sub
xchg
jge
call
mov
mov
mov
push
xchg
adc
sbb
lret
ss
jbe
add
faddl
and
cld
testb
mov
xchg
fmul
adc
jle
mov
jl
push
push
std
mov
popf
pop
loopne
cmc
xchg
mov
sbb
lock
xor
adc
inc
push
ljmp
imul
dec
xchg
inc
scas
es
xor
rcl
mov
fiaddl
pushf
jae
push
stos
sub
in
lahf
cmp
movsb
xchg
mov
repz
icebp
inc
mov
movsl
or
mov
add
pop
adc
pop
mov
cmp
dec
add
cmp
cmp
or
insl
ss
mov
mov
lock
das
xor
je
mov
sub
lcall
cmp
shll
mov
mov
out
lods
test
in
ss
xor
inc
enter
leave
negb
clc
repnz
insl
add
fisttpl
stos
or
repnz
loope
mov
cmpsl
mov
repnz
push
cmp
cmpsb
scas
pop
sti
mov
cwtl
out
mov
incl
sub
repz
lea
arpl
mov
xor
sub
aas
or
mov
insl
bnd
mov
mov
xor
cld
out
pop
ljmp
xlat
push
jno
push
dec
imul
imul
imul
mov
pop
int3
sar
out
es
sub
mov
mov
insb
and
push
fnstcw
ljmp
pop
js
or
pop
aaa
xchg
inc
push
jle
xchg
cltd
or
cmp
pop
pushl
xchg
enter
cld
or
inc
jg
cld
cmp
aaa
fidivs
test
aad
dec
sbb
pop
insb
out
push
das
cmc
and
fiaddl
jg
dec
add
insl
dec
mov
jb
dec
cmp
add
in
notb
rol
add
ret
movl
lods
outsb
rclb
jp
arpl
fwait
cltd
in
loopne
mov
sti
push
sub
cmp
popf
repnz
cmp
inc
pop
jl
jg
cmp
not
jle
mov
jp
push
lock
jae
push
xchg
outsl
inc
adc
adc
rclb
test
xchg
jae
pop
cmpsb
xchg
fdivrp
sbb
pop
jne
jmp
push
adc
pushl
pop
aam
dec
sbb
call
mov
std
imul
jle
add
adc
dec
scas
in
scas
mov
lret
js
out
or
sar
xor
push
outsb
push
ret
cmpl
add
cmc
dec
fst
and
or
movsb
pop
jge
in
push
push
ret
leave
xchg
gs
shr
xchg
and
adc
addr16
jp
push
stc
or
xor
sub
dec
lds
cmp
fwait
imul
mov
xorl
lds
dec
pusha
mov
outsb
inc
cwtl
pop
sbb
lcall
out
sub
pop
repnz
push
fsubrl
out
jnp
out
xor
leave
mov
sub
loopne
inc
push
adc
stos
xor
sub
jno
and
or
pop
add
mov
cmp
movsb
mov
call
xchg
shrl
in
lret
adc
and
push
shll
stc
divps
xchg
or
enter
and
mov
xlat
ret
js
or
mov
sbb
dec
gs
xchg
pop
push
push
adcb
jge
cmc
mov
inc
js
std
les
scas
adc
mov
add
adc
pop
scas
sbb
es
es
mov
sub
sub
fisubrl
sub
aaa
mov
inc
mov
add
movsl
ss
jle
sub
pop
jge
xor
xor
insb
loop
xchg
fsubs
mov
pop
cmpsb
fst
sbb
adc
mov
stos
int3
cmp
fnstenv
rorl
cmc
push
push
xchg
loopne
add
sub
je
leave
rcl
cli
jmp
inc
pop
int
rolb
dec
out
lret
mov
inc
icebp
and
out
cmpsl
lods
add
shll
lahf
push
in
out
sub
fidivl
mov
cld
mov
out
pop
xor
lahf
cmpsl
enter
fnstenv
icebp
movsl
sub
cwtl
cmp
dec
xor
jbe
jne
push
jo
jmp
pop
xor
lahf
arpl
lea
inc
out
cltd
dec
jns
pop
js
inc
pop
push
xor
mov
add
enter
icebp
stc
adc
shlb
pop
sbb
push
pop
fsub
jl
rcl
aas
mov
xchg
cmc
outsl
jmp
insb
sub
xchg
idivb
adc
xchg
dec
cmp
push
fsts
and
pop
fistl
mov
lods
mov
outsl
les
add
xchg
es
dec
scas
cmp
movlps
inc
psubusb
and
aad
inc
push
jmp
cwtl
cmpsb
lahf
mov
mov
add
mov
dec
push
pusha
sbb
jmp
xchg
cmp
into
sub
in
xchg
cltd
mov
pop
int
and
sbbl
rolb
ret
popa
pusha
scas
sbb
cmp
shll
adc
stos
inc
ljmp
stc
rolb
xlat
mov
jg
mov
jbe
rcll
jecxz
stos
or
lcall
hlt
aaa
push
insb
nop
or
in
push
sbbl
xor
shl
jg
push
jp
jo
out
out
bound
or
sub
sahf
js
mov
fxch
arpl
mov
cmp
fimuls
call
cmp
js
sahf
cld
mov
fsts
adc
test
sahf
hlt
pop
xchg
incb
xchg
bound
movsl
mov
dec
das
dec
xor
xor
sbb
lea
add
fcompl
xchg
in
mov
cmp
mov
mov
cld
push
ljmp
int3
mov
push
ljmp
and
and
stos
out
addr16
cmpsb
clc
and
pop
add
scas
mov
fcmovnb
xor
xchg
lcall
pushf
outsb
iret
sahf
scas
and
ret
cmc
mov
jno
push
out
mov
add
mov
stos
imul
imul
sub
cmp
inc
dec
pushf
inc
imul
sub
jns
pop
push
in
hlt
xchg
xlat
imul
js
outsb
pop
clc
movsl
inc
push
insb
lods
pushf
sbb
fnstcw
pop
push
xlat
lcall
ret
cld
add
mov
mov
mov
xor
sbb
call
cltd
mov
cmpl
cwtl
push
xchg
clc
sub
bound
outsl
add
cmc
and
cmc
adc
adc
rcll
xchg
cltd
hlt
and
les
mov
outsb
cmp
sbb
jmp
inc
scas
shlb
mov
add
loopne
mov
xchg
cmp
push
movsl
or
adc
dec
xor
inc
test
mov
push
enter
pushf
jmp
sarb
push
jmp
ss
pusha
and
xchg
and
test
sbb
sbb
cmp
sbb
add
mov
adc
ror
push
adc
dec
std
stc
xchg
ds
fstpt
movsl
test
das
xor
call
push
pushf
iret
lea
pop
in
pop
inc
sub
add
cmpsl
jmp
mov
xor
dec
jge
popf
xchg
xlat
or
sub
data16
out
arpl
pop
sub
xchg
shlb
xchg
xor
lods
jno
pop
cltd
lods
outsb
xchg
fsubl
imul
dec
ds
sub
stos
mov
xlat
sar
mov
gs
add
add
pop
repnz
outsl
cmp
mov
add
cmc
stc
mov
mov
cmp
or
arpl
sbb
push
outsb
push
in
lcall
cmpsl
sub
mov
dec
mov
mov
and
lret
lahf
int3
push
sub
adc
push
cmpsl
out
cmc
pop
cvttps2pi
cmp
into
repnz
mov
adc
push
xor
pop
popf
repz
mov
fadd
dec
push
movsb
out
mov
sahf
xor
sbb
inc
sbb
jo
push
rcrl
sahf
outsl
mov
mov
clc
inc
jmp
out
bound
mov
and
xchg
xor
sbb
mov
andl
or
inc
loopne
sub
in
xor
jne
xor
xchg
xchg
negb
lcall
mov
ret
jb
loope
jbe
ds
imul
int
jo
xor
clc
call
rcrl
push
xchg
push
and
cmp
scas
mov
mov
hlt
insb
xchg
test
sahf
mov
mov
xor
mov
push
dec
xchg
dec
add
insl
mov
das
out
adc
loopne
pop
pop
dec
hlt
lock
das
xchg
mov
push
sahf
nop
out
loope
psubsw
push
aad
jecxz
lret
jno
sti
mov
mov
icebp
jb
mov
xor
ret
xchg
jecxz
jns
cmpsl
fwait
or
fs
scas
fadd
lret
mov
jns
add
lods
pop
mov
cwtl
out
in
jecxz
lret
aas
xchg
repz
shrl
xchg
je
jmp
push
xchg
repz
push
das
and
insl
and
rcrb
xor
mov
faddl
or
ja
jecxz
loopne
cmc
adc
cs
or
aas
xorb
or
pop
inc
adc
cmpsb
adc
pop
ljmp
imul
mov
ljmp
cmp
test
cmp
jbe
xor
stos
test
scas
mov
dec
dec
mov
push
out
mov
jbe
mov
subb
or
stos
mov
cld
or
pop
leave
stc
test
jne
pop
or
inc
lds
call
sub
mov
neg
into
inc
dec
push
push
int3
shlb
in
adc
lock
or
ljmp
or
pop
xor
mov
andb
mov
add
pop
dec
sbb
stc
and
mov
and
pop
push
inc
loopne
fisttps
in
xchg
test
out
bound
push
ljmp
jmp
mov
mov
lcall
mov
ljmp
lods
jno
repz
notl
mov
sbb
pop
pop
in
xchg
pop
bnd
arpl
loopne
cwtl
int
jne
ret
mov
jbe
push
xchg
icebp
insl
ds
cmpsb
fadd
in
add
jmp
add
push
mov
into
dec
mov
push
fsubl
or
pusha
mov
call
sar
ja
pop
jmp
cmp
jo
or
push
jns
and
cmc
and
cmpsb
push
lds
push
mov
sub
sub
lret
popf
mov
and
in
cs
push
mov
xchg
and
addb
bnd
push
loope
pop
test
inc
lahf
das
imul
int3
adc
sub
mov
push
adc
and
fdivr
xchg
mov
or
sbb
scas
es
jnp
mov
repz
std
fidivs
jb
mov
push
mov
push
scas
xchg
sbb
add
sbb
and
mov
fstl
inc
mov
iret
inc
addr16
movsl
jbe
pop
mov
scas
orb
cmpsb
pop
cmpsb
pop
loopne
inc
sbb
ljmp
xchg
dec
or
sbb
pop
and
stos
lods
or
dec
jmp
fwait
jle
xchg
xor
into
add
fsubrs
jle
dec
jle
sub
dec
xlat
jge
jb
sti
xor
cltd
mov
push
outsl
sub
rcl
dec
shr
cli
jo
lahf
pop
call
adc
aaa
mov
push
sub
lock
and
cmp
movsb
shrb
sbb
push
sub
push
pop
mov
int3
mov
xor
leave
cmc
pop
or
sub
or
pop
fcoms
xchg
jb
add
insl
mov
dec
dec
int
dec
pop
stc
jp
mov
scas
add
out
aaa
and
ret
iret
shrl
mov
cmp
inc
jmp
adc
xchg
in
gs
sbb
pop
sbb
cmp
repnz
pop
nop
int3
xchg
call
jecxz
cmpsl
ret
or
and
mov
in
pop
xchg
sub
add
negb
mov
push
push
loopne
into
xchg
xchg
xor
or
popa
fnstcw
not
inc
push
add
dec
sbb
enter
mov
nop
inc
or
lret
dec
ds
in
push
dec
mov
filds
into
cmc
sub
es
cld
or
mov
jge
mov
adc
cli
push
in
mov
jmp
cmp
mov
std
push
and
popf
in
xchg
dec
mov
das
roll
inc
xchg
pop
insl
lret
in
push
mov
arpl
or
lods
lock
adc
pop
cmc
mov
shrl
mov
push
test
loopne
out
pop
and
popf
mov
int
into
pop
inc
mov
lret
jno
out
and
add
test
int
repnz
cmp
call
push
cwtl
fs
in
and
in
cmc
mov
or
mov
add
xchg
sbb
lcall
mov
decl
mov
pop
cld
lea
sti
out
cmc
in
cmp
jbe
jg
push
les
cmpsb
add
iret
inc
shlb
in
mov
xorl
add
sbb
push
and
mull
adc
dec
mov
negb
pop
adc
mov
out
mov
jge
mov
cld
sub
push
pop
mov
ss
sub
lea
addl
cwtl
sub
repnz
xor
hlt
dec
mov
mov
leave
cld
adc
mov
inc
roll
fcomps
movsl
das
mov
lret
int3
test
arpl
mov
push
lds
or
aas
push
inc
mov
test
sar
inc
cmp
push
fisubrl
imul
and
cmp
push
lods
inc
xchg
lcall
or
xor
xor
sbb
mov
mov
pusha
out
cmp
in
jbe
pop
sub
lds
jb
cmpsl
call
mov
and
test
repnz
mov
loope
jle
dec
aad
sub
sbb
push
pop
ret
mov
fcmovbe
dec
push
push
aas
inc
lret
loope
add
rcll
jmp
sbb
mov
enter
cli
adc
push
pop
int3
dec
or
cwtl
test
or
outsw
sti
push
bound
inc
jne
jnp
mulb
adc
bound
add
jp
cmp
inc
add
cmp
mov
sub
xchg
mov
enter
fiaddl
inc
cmp
push
sub
rcrb
hlt
dec
fimuls
cld
sbb
hlt
test
dec
jns
fcompp
daa
xchg
adc
pop
adc
out
stc
inc
xor
mov
inc
cmp
add
fs
mov
icebp
and
mov
xorb
hlt
int
popf
dec
pop
dec
inc
cli
jno
pusha
mov
in
int3
enter
add
inc
dec
pop
adc
xchg
pop
jno
jl
stos
jae
push
in
cmpsb
xor
mov
aaa
mov
push
push
cli
push
or
xchg
sbb
jp
pop
push
xchg
inc
testl
adc
cmc
adc
push
in
cltd
jae
sub
jmp
test
xor
shrb
mov
inc
push
imul
mov
inc
xor
push
add
push
mov
nop
clc
mov
push
ret
loope
push
dec
ficoms
and
xchg
and
mov
inc
movsl
adc
sar
inc
mov
aaa
inc
lahf
pushf
mov
and
mov
mov
in
scas
xchg
push
movsl
mov
ss
lock
inc
mov
inc
mov
cmpsb
dec
xchg
push
cmpsl
enter
mov
add
cmp
inc
mov
push
lods
or
mov
jmp
stos
mov
repz
icebp
arpl
xor
orb
outsl
pop
call
int3
rorl
xor
rol
jae
dec
xor
mov
sub
rorb
int3
jae
fists
or
xchg
or
xchg
mov
or
cmp
out
inc
jmp
cmpsb
movsl
add
enter
xchg
mov
mov
push
inc
gs
xchg
pop
in
lahf
mov
lcall
insb
adc
xlat
or
data16
rolb
int3
xchg
pop
fdivl
iret
dec
jnp
leave
scas
and
cli
insl
xchg
repz
mov
shlb
lock
add
xchg
pop
fcoms
inc
outsl
xlat
pushf
dec
repz
and
push
lods
sti
xor
pop
push
test
ss
test
nop
adcl
push
arpl
aad
mov
mov
mov
sbb
xchg
pop
iret
inc
lock
push
sub
pop
or
mov
cltd
mov
mov
daa
dec
dec
int3
adc
xchg
add
push
fimuls
and
out
popa
mov
inc
loop
xchg
loop
push
mov
int3
jmp
test
sbb
xlat
ret
pop
or
mov
orb
test
aam
lock
mov
jnp
fimull
cmp
andb
and
push
test
jp
mov
sub
std
xor
cmp
pop
jo
leave
mov
stos
mov
jge
sub
mov
lock
dec
enter
xchg
pop
ret
inc
or
scas
mov
dec
js
xor
lcall
call
test
push
dec
addr16
popa
outsl
out
call
mov
inc
scas
inc
push
cs
aad
fstl
movsl
mov
xbegin
hlt
add
cwtl
int3
repz
rorl
daa
loopne
adc
push
cmp
popf
ret
xorl
cmpsl
mov
movsb
jns
jb
jmp
dec
std
cmc
lods
mov
dec
sub
push
xor
pop
xchg
fsubrs
int3
mov
xchg
stos
fistps
mov
mov
fsubs
icebp
mov
outsb
cli
xchg
ss
sub
addb
mov
inc
es
test
std
jge
fdivrs
ret
and
add
mov
mov
enter
sbb
mov
cmp
push
ljmp
dec
push
cmp
jae
push
mov
adc
push
inc
mov
std
ja
jle,pn
das
sbb
stc
test
sbb
pop
ss
pop
inc
dec
into
or
mov
lods
jecxz
nop
imul
clc
into
or
hlt
rcr
sbb
push
pop
addb
xorb
dec
mov
mov
jae
add
cmpsb
cmp
jnp
es
arpl
ret
adc
popf
xchg
push
push
fcoml
bound
mov
fldt
hlt
adc
aad
add
cmp
icebp
popa
arpl
jns
dec
xchg
pushf
xor
shlb
push
mov
adc
cwtl
jne
and
mov
push
rcrl
lea
subl
adc
push
adc
add
ret
push
mov
ljmp
adc
lret
or
mov
xchg
aas
xor
lock
pop
movsl
adc
pop
movsl
jge
xchg
sti
mov
sbb
pusha
xchg
pushf
out
mov
outsl
push
test
stos
mov
sub
jb
dec
ljmp
loop
rclb
jns
jbe
dec
mov
in
es
ret
push
aas
lds
adc
pop
pushf
in
dec
inc
out
sbb
mov
out
bound
push
dec
xor
cmpsb
xchg
scas
cmp
movsl
push
push
test
cmp
pop
shl
test
roll
xor
mov
sub
or
pop
pop
shll
icebp
mov
aaa
ja
jmp
xorl
xor
xchg
mov
incb
pop
movsb
xor
push
imul
mov
and
sbb
dec
shlb
dec
push
push
es
lea
loop
push
mov
fnsave
jbe
dec
icebp
or
adc
fidivs
test
scas
out
movsl
mov
aam
dec
roll
mov
sbb
mov
mov
sbb
test
mov
stos
ss
std
or
in
push
lds
hlt
dec
push
inc
xchg
repnz
imulb
mov
xchg
xor
rclb
lcall
ret
cmc
sti
and
jo
imul
into
stc
pop
loop
adc
xchg
cmp
push
dec
jle
arpl
data16
data16
jne
dec
cmc
add
xchg
mov
mov
or
jns
sarl
cmp
test
in
push
addr16
inc
xlat
dec
ret
lods
js
push
sub
inc
jbe
push
fstpl
fs
mov
dec
or
pop
mov
sub
push
in
dec
fisubrs
add
pop
jae
je
pop
or
inc
mov
lahf
push
in
divb
xor
inc
stos
scas
push
inc
jb
push
fisubl
in
out
test
shrb
cmpsb
shlb
dec
push
xchg
lahf
stos
sti
sbb
mov
mov
stc
aaa
int3
and
mov
or
bound
sbb
adc
cltd
ret
js
leave
in
je
or
inc
mov
icebp
add
les
loope
jnp
dec
subl
cmpsb
jmp
ja
dec
outsl
mov
and
xchg
dec
lret
cmp
daa
loopne
pop
inc
cmpsb
pusha
rcrb
sub
data16
fisttps
les
inc
cwtl
jmp
das
in
leave
jmp
shrl
aad
outsl
sub
shl
mov
pop
hlt
cmp
jbe
mov
jmp
dec
in
mov
ljmp
addl
jns
jmp
out
mov
bound
push
mov
cmpsb
dec
push
mov
xchg
xor
or
movsl
and
rclb
aad
jnp
mov
jb
enter
cltd
addl
cmp
sbb
test
push
call
sub
pop
inc
dec
test
adc
mov
jl
iret
xor
xchg
mov
push
imul
inc
xchg
ret
mov
pushf
cs
std
stos
pop
movsb
sbb
xlat
movsl
nop
xchg
jnp
cli
xchg
cmp
nop
iret
cmp
aad
push
mov
nop
std
imul
inc
cltd
in
cmp
push
push
xchg
jmp
adc
push
mov
gs
les
in
sub
enter
mov
adc
cmpsl
sub
pop
xchg
push
std
dec
std
add
sbb
sbb
in
in
roll
mov
cwtl
cmc
in
push
aad
in
cwtl
sub
and
inc
ret
aam
bound
and
addb
out
jbe
jp
lahf
movsb
dec
lret
pop
jecxz
adc
test
outsb
cmp
and
mov
insb
push
arpl
cmp
cmp
lock
or
sub
sub
lea
cli
or
mov
push
inc
inc
or
sbb
stos
fnstenv
repnz
cs
mov
inc
orl
push
mov
mov
inc
mov
jl
and
jno
xchg
inc
data16
mov
xor
nop
jae
pop
fcoml
imul
cli
dec
loop
push
mov
cmc
lret
cmp
xchg
dec
adc
inc
push
xchg
add
leave
data16
outsb
pop
and
sub
lcall
stos
sbb
outsl
mov
clc
mov
jp
scas
or
mov
enter
jae
mov
pop
mov
loope
mov
adc
mov
xor
js
mov
insb
or
sbb
push
es
out
test
jno
lods
les
das
bound
push
pop
ror
rorb
mov
jo
int
out
jle
adc
jg
in
pop
mov
fistpll
cld
xchg
and
xor
jae
lret
and
pusha
push
mov
call
pop
adcl
std
inc
pop
cmp
inc
les
dec
in
mov
sbb
gs
ret
nop
iret
aas
fstpl
cwtl
scas
mov
pop
bound
sbb
jb
lret
push
sub
fcmovnbe
das
lcall
jp
mov
cmp
int
sub
jb
xchg
sub
add
push
pop
or
or
or
call
or
test
lret
enter
mov
aam
sbb
inc
push
fstps
popf
jb
leave
inc
cwtl
popa
out
rcrb
stc
sub
sub
mov
cmpsl
dec
outsb
das
mov
jl
jo
aad
jns
les
scas
push
adc
mov
add
fidivrl
ds
sub
mov
dec
mov
mov
mov
flds
mov
cmpsl
cmc
addr16
roll
ja
in
mov
sti
loop
push
repnz
xchg
jbe
clc
sahf
cltd
xor
jb
push
das
mov
cmp
sbb
fld
bound
fnsave
ss
xchg
clc
out
inc
ljmp
scas
mov
cmp
loopne
test
cwtl
pop
cmc
bound
rolb
cmp
sbb
inc
mov
mov
fdivrs
repnz
jns
lret
mov
xor
scas
test
out
bound
mov
incb
lahf
jmp
fdiv
xchg
pop
ljmp
ljmp
sbb
repnz
fdivrl
sbb
xor
frstor
ds
push
dec
jge
loopne
jbe
dec
es
mov
push
sub
sbbl
sbb
fwait
mov
adc
fidivl
xchg
lcall
cs
std
dec
jo
xor
ss
loopne
add
in
cmp
test
in
imul
je
mov
les
sbb
test
dec
jp
mov
xor
sbb
std
add
popl
cli
push
punpckldq
das
xor
add
xor
arpl
popf
lret
adc
mov
adc
jmp
sub
pop
dec
enter
outsl
adc
pop
fistpll
mov
add
and
nop
sub
in
push
gs
aaa
mov
fcoms
int3
enter
lods
sarl
ret
mov
and
sub
sub
dec
dec
ss
jno
xchg
adc
sub
jmp
adc
inc
lret
int3
jno
nop
mov
outsb
fiaddl
mov
outsl
mov
push
pop
test
jnp
mov
cmc
test
movsl
jne
dec
ja
and
inc
push
daa
movsl
mov
pop
cwtl
int3
jl
jl
in
mov
push
inc
push
jnp
aad
aad
std
fildll
and
insl
and
out
mov
gs
out
lcall
in
sbb
add
in
popf
lret
je
mov
iret
scas
fsubs
cmp
in
fdivp
cmp
bound
nop
imul
inc
cmpsb
xor
cmpsl
push
ficoml
push
pop
xorb
mov
icebp
jl
xchg
ret
iret
inc
mov
sbb
jle
clc
xchg
pop
sub
out
aam
fs
lret
outsb
stc
sub
dec
mov
mov
lret
and
fcompl
dec
pop
out
out
pop
mov
cmp
icebp
loop
sub
and
sbb
mov
push
scas
sbb
pop
addps
push
xor
movsb
adc
push
pop
aad
cmpl
and
test
cmpxchg
aas
fwait
lret
dec
aaa
stos
pop
inc
outsl
pop
mov
test
sub
sbb
inc
fadd
insb
mov
mov
add
daa
leave
cltd
inc
dec
mov
test
mov
mov
int
push
insb
cmc
push
add
or
cwtl
dec
mov
mov
add
jg
lods
xor
nop
scas
imul
lret
lret
mov
and
inc
cli
in
in
push
pop
sbb
ret
int3
popa
popa
inc
jmp
sbb
adc
inc
lret
dec
adc
rolb
dec
in
js
xor
cld
movsl
xchg
cwtl
test
shl
pop
loop
sbb
shlb
ja
inc
addr16
fsubp
icebp
xor
xchg
jmp
hlt
cmp
or
mov
loope
scas
pop
test
adc
cmp
divb
xor
shll
gs
adc
mov
inc
popf
daa
clc
xor
scas
orl
iret
mov
cmp
movsb
call
bound
dec
jmp
xor
push
sbb
cwtl
fistpl
pop
insl
iret
mov
repnz
cmp
dec
mov
data16
outsl
add
mov
sbb
loopne
andb
cli
push
imul
inc
inc
cwtl
pop
stos
fnstsw
sbb
stos
maxps
fwait
pop
add
ljmp
int3
andl
lfs
pop
adc
leave
pop
loop
xchg
popa
jb
rcr
adcl
mov
mov
in
test
mov
es
fwait
lea
lcall
jle
xlat
das
xchg
push
or
leave
or
cld
dec
movsb
cmp
push
push
cmpb
loop
dec
mov
mov
and
mov
pop
cli
in
mov
stc
cmpsb
shlb
xchg
scas
fmul
cmp
sbb
lods
popf
insl
jge
pop
adc
ja
or
daa
pop
loop
inc
pop
xor
in
ljmp
and
cmovne
jmp
les
adc
jmp
mov
push
outsl
adc
lret
sbb
mov
stos
mov
mov
scas
add
cmpsl
sbb
loope
outsb
push
sub
or
fistpl
pop
xchg
stos
outsl
jmp
loopne
sub
jbe
shrb
int
in
mov
ds
inc
cmp
sub
jns
and
jae
inc
ljmp
jns
fmull
into
sub
xor
xchg
and
fidivrl
push
loopnew
icebp
cmp
out
sbb
orl
sahf
loop
in
inc
stc
sarl
scas
pop
jg
cli
data16
add
push
jb
dec
pusha
out
lret
bound
cli
mov
sub
push
inc
fxch
and
jecxz
decl
aaa
xor
jns
add
insb
fildl
shl
fnsave
add
adc
sub
stos
xor
push
outsl
mov
gs
jno
lcall
ljmp
andb
ja
dec
and
popa
out
pop
dec
push
mov
scas
js
test
aam
xor
lods
mov
adc
dec
packssdw
shll
xor
sahf
jge
call
shlb
sbb
insl
test
jmp
cmp
sub
xlat
repnz
aaa
lds
jmp
fadds
in
fisubrl
aaa
stos
and
dec
cld
inc
pushf
xchg
testl
out
int
inc
fwait
rorb
pop
sti
lea
std
aas
jle
call
xchg
xor
sub
ret
mov
fdivr
pushf
inc
add
lods
fs
decl
and
sub
outsb
push
fs
nop
push
mov
pushf
out
pop
imul
stos
and
mov
sub
sub
les
movsb
sti
jmp
popfw
lock
outsb
lahf
sub
add
inc
push
inc
jl
push
stos
xor
test
call
jmp
clc
int3
sub
fwait
jp
ds
mov
jnp
pop
sbb
sub
and
lcall
jnp
out
shrl
dec
or
and
add
and
es
testl
xchg
or
mov
sbb
fwait
or
pop
adc
fldcw
fdivrs
xor
push
push
pop
or
push
mov
imul
daa
add
jle
sbb
xchg
mov
cltd
mov
and
in
cmp
out
addr16
mov
popl
or
iret
xchg
jne
and
xchg
or
cmp
aam
rclb
fwait
pop
daa
imul
xchg
add
sbb
cli
shrl
xchg
xchg
int
cli
inc
les
fcoms
mov
dec
push
mov
pop
aaa
sub
insl
push
shll
mov
addb
in
data16
and
sbb
adc
dec
scas
lea
sbb
mov
fwait
sub
pop
jmp
out
rcrb
lock
push
gs
rol
jecxz
enter
loopne
push
inc
lret
mov
aaa
out
outsl
js
sbb
inc
sbb
sbb
cwtl
lods
pop
rolb
adc
and
rcrl
aad
vucomisd
mov
neg
stos
mov
pop
les
cmc
sbb
or
mov
leave
or
sbb
pop
cmp
fldl
sbb
test
mov
les
in
push
mov
xchg
inc
fcmovbe
xchg
xor
fs
scas
pop
test
cmp
cmpsb
lcall
sarl
leave
dec
sti
jo
mov
in
mov
lahf
divl
lea
flds
ret
xchg
mov
int
cmp
pop
daa
popf
fucomi
mov
pop
out
aas
lea
jle
rclb
ljmp
adc
ret
in
lds
cmc
fwait
and
daa
cmp
jecxz
xor
and
cmp
movb
inc
adc
pop
js
aas
adc
mov
imul
shrl
or
bound
cs
push
out
stc
inc
imul
pop
imul
inc
add
jmp
aam
xchg
scas
outsl
dec
cwtl
dec
sbb
loop
sbb
jnp
jae,pt
outsb
fadd
push
xchg
mov
push
and
add
pop
jp
repz
sub
add
jmp
adc
cmc
cwtl
xchg
mov
adc
push
pusha
mov
repz
fs
jmp
cmp
or
repnz
mov
std
or
adc
sub
dec
gs
imulb
pop
pop
cmpsb
shll
jle
sub
and
gs
add
insb
imul
pop
and
jbe
xor
pusha
and
xchg
cmp
dec
push
repz
and
mov
jl
pusha
mov
popf
and
into
push
sti
gs
inc
mov
add
pop
pushf
gs
sar
lods
push
xchg
mov
mov
ret
xchg
jl
cmpsl
lds
in
enter
jge
pop
loopne
ficoml
and
jno
push
fcoms
lret
lods
add
jnp
lret
jne
das
inc
xor
mov
cwtl
cmpsb
inc
push
lahf
inc
jbe
mov
lret
aam
sub
imul
pop
in
add
xor
loope
lds
fwait
sub
mov
or
mov
xchg
loop
sbb
cmpsl
arpl
jl
sarb
sbb
xchg
fidivrl
icebp
dec
push
jge
je
sbb
and
int3
mov
jns
cmp
add
sub
imul
jnp
lock
pop
adc
lahf
or
pop
xor
rdpmc
and
mov
cli
sub
ret
dec
xorl
jp
in
shrl
outsl
out
and
sbb
sub
mov
mov
out
jne
pop
aas
sub
rcrl
fdivl
aaa
mov
je
pop
and
mov
xlat
sbb
push
xchg
rcrl
insl
sbb
fsubr
mov
push
cmp
adc
mov
mov
shl
ja
push
and
cwtl
or
pop
int3
dec
adc
mov
mov
sub
jmp
ss
lret
adc
jg
push
sbb
jmp
sbb
stos
xor
test
push
aaa
jae
add
arpl
dec
fcoml
adc
scas
inc
jbe
imul
jg
scas
out
jle
sub
cli
fs
pop
mov
push
sbb
sbb
test
addl
mov
mov
adc
cmpsl
fucomip
sahf
xor
mov
std
jb
test
inc
mov
sbb
test
call
stos
add
mov
mov
adc
sbb
add
jl
push
ror
adc
dec
pushf
movsb
pop
or
insl
sbb
jbe
inc
mov
std
enter
cltd
pop
movw
jecxz
push
jecxz
or
loope
jo
cmpb
cld
pop
int
rcl
and
in
xchg
xchg
mov
les
inc
seta
mov
push
imul
add
dec
stos
dec
pop
arpl
scas
xor
std
scas
mov
push
cmp
mov
inc
pop
imul
shrb
in
jp
sarb
inc
pop
pusha
xor
or
inc
mov
mov
je
scas
add
fs
cltd
mov
mov
lods
out
mov
sbb
cltd
nop
das
jb
xchg
or
jb
test
shl
insb
push
mov
lods
mov
out
xchg
iret
dec
out
jge
mov
fldcw
push
jnp
add
jnp
sbb
push
push
punpckhdq
inc
mov
imul
pop
pop
sub
xchg
jae
in
cmp
bound
pop
cli
jbe
push
lret
mov
mov
dec
dec
dec
je
enter
neg
fildll
shlb
jne
mov
jmp
sbbl
mov
fwait
or
je
inc
jbe
jecxz
popf
mov
das
jne
repz
jl
jb
push
mov
or
push
inc
sub
mov
push
mov
loope
dec
mov
adc
ljmp
xchg
sub
mov
loopne
int3
sbb
cmp
or
mov
test
sbb
test
jns
mov
fidivs
inc
mov
mov
test
shlb
add
fdivrp
dec
out
dec
fildll
push
mov
rorl
xchg
inc
ret
sbb
ret
addr16
mov
mov
or
jbe
push
out
loop
fisubrs
or
push
push
popf
inc
pushf
cli
popf
xor
xchg
mov
push
mov
jmp
adc
in
xor
cmp
sarl
add
out
dec
adc
or
dec
dec
scas
clc
sub
mov
dec
subb
push
push
mov
add
mov
popf
lods
xchg
pusha
data16
mov
xchg
dec
iret
fcmovnb
pop
or
xchg
daa
pop
clc
stos
shll
jmp
cld
mov
jp
push
jl
inc
xor
jo
adc
movsb
loopne
or
xchg
pop
lods
mov
mov
and
nop
mov
sub
cwtl
inc
std
jne
sbb
jbe
cld
decl
pop
pop
lock
aad
int
and
pop
inc
loope
adc
dec
push
aad
adc
out
and
mov
pop
mov
dec
cmp
subl
jb
push
mov
ja
sub
and
mov
push
adc
outsb
jmp
sbb
fs
pop
sbb
cmp
sub
arpl
jnp
mov
roll
out
mov
jle
lcall
pop
xor
xchg
mov
mov
push
mov
out
sub
int3
and
adc
mov
jl
das
pop
enter
pusha
mov
push
ljmp
xchg
dec
jns
cld
popa
sbb
movhps
mov
test
jl
and
cmpb
adc
icebp
aaa
icebp
js
xchg
push
adc
xchg
in
adc
mov
gs
faddp
mov
je
mov
cmc
mov
cltd
push
add
adc
xchg
mov
sub
add
cs
add
and
mov
fistps
clc
les
aaa
inc
pusha
test
pushf
lahf
scas
je
xor
cmp
lret
jno
jne
inc
cmpsb
pop
sub
dec
adc
sarb
insl
call
mov
mov
pop
add
out
mov
jp
punpcklbw
sub
imul
hlt
pop
pop
sbb
or
push
std
cmpsl
xlat
cmp
lods
pushf
mov
cmp
adc
lea
data16
cmp
mov
in
inc
or
push
popf
shrl
mov
xor
das
cwtl
shr
leave
std
jnp
adc
sub
arpl
mov
ret
pop
cmp
push
cmp
and
push
popf
inc
mov
bound
sbb
mov
into
lret
pushf
adc
pop
int3
decl
iret
push
fcompl
pop
test
jnp
iret
jno
dec
push
xor
dec
lcall
mov
mov
push
sbb
mov
inc
sbb
mov
out
add
bound
sub
enter
fistps
push
mov
ficoms
jno
push
pushf
iret
mov
daa
cld
popf
xor
lods
cwtl
jnp
aam
lret
lcall
cmc
pop
adc
fisubs
js
mov
inc
bound
cmp
cmc
hlt
repnz
and
xor
hlt
jbe
pop
mov
jg
int3
in
push
ds
and
jle
lds
or
xchg
dec
jb
dec
in
imul
xor
push
jle
addr16
mov
cwtl
test
xor
pop
push
mov
sbb
fnstcw
cltd
cmpsb
mov
jb
or
push
pop
movsb
stc
mov
pusha
mov
and
pop
jp
in
cmp
test
in
mov
sbb
sti
jo
jns
js
out
mov
mov
out
cmp
insl
in
cmc
pop
cmp
lods
pop
repz
stc
mov
insl
jg
iret
mov
mov
std
add
inc
aam
mov
loope
clc
sub
bound
and
cmp
mov
bnd
xor
push
add
xor
daa
mov
sbb
mov
dec
mov
and
sbb
xchg
ljmp
pop
lods
lds
roll
push
mov
push
rcrb
and
fsubrs
stos
mov
xchg
jecxz
outsl
into
es
mov
adc
xor
jmp
arpl
repnz
add
push
icebp
mov
or
outsl
cmp
arpl
test
push
xor
xor
icebp
jl
dec
push
shll
cmp
push
mov
lcall
popa
frstor
outsb
inc
out
mov
sbb
cmp
cmpsb
loope
popf
pushf
push
ds
repz
push
sti
sbb
xorl
sar
rcr
nop
sub
movntps
ljmp
or
mov
mov
mov
call
int
xchg
pop
push
bnd
aaa
xchg
out
sarl
cli
out
cmp
pop
in
xchg
and
sarl
push
sub
fistl
xchg
ja
push
jp
imul
push
pop
lahf
mov
mov
mov
rcrb
mov
incb
packuswb
out
test
int3
es
xchg
lahf
push
dec
sahf
mov
mov
mov
push
dec
lea
sub
mov
inc
pushf
into
in
cltd
idivb
mov
adc
adc
mov
inc
push
shr
cmp
cmp
jo
pop
xor
loopne
dec
mov
pop
mov
loope
jo
ss
sub
dec
and
mov
cld
add
gs
sahf
dec
mov
pop
decl
les
testb
mov
cmpsl
stos
xor
hlt
xchg
cmp
jne
jbe
xor
add
cmpsb
mov
pop
ror
ret
popa
fwait
lret
mov
test
hlt
leave
test
or
popa
pop
dec
out
stos
push
subl
push
dec
leave
push
fnstsw
fwait
and
std
cltd
aas
mov
rcrl
mov
jo
push
dec
jp
loopne
pop
clc
iret
cmpsb
jno
mov
inc
xor
add
jecxz
aaa
pop
mov
iret
stc
ret
jge
mull
rcrl
or
mull
cmp
jb
fistl
xchg
mov
jmp
mov
push
mov
cmpsl
xor
jl
and
dec
dec
adc
aam
int
pop
lcall
dec
ljmp
add
lret
pop
cmpsb
cmp
lock
das
mov
mov
push
lahf
sbb
fists
dec
mov
cltd
nop
std
mov
cmpsb
adc
jo
fwait
jne
cmp
imul
or
jle
cmpsl
insb
pop
aaa
pop
repnz
pop
sub
loope
sbb
fs
fstpt
xor
iret
push
xchg
ret
sub
cmc
mov
adc
sub
dec
pushf
jmp
xor
mov
lret
or
rolb
mov
push
mov
gs
iret
pusha
fdivrl
loopne
addr16
clc
xchg
imull
inc
sahf
rolb
addb
int
pop
das
aad
mov
pop
xor
adc
ret
pop
or
iret
sub
dec
add
ficomps
sti
add
js
mov
mov
popa
dec
jge
pop
jp
insl
pop
sub
cmp
stos
js
pop
call
inc
dec
subb
lahf
and
subl
leave
add
or
ljmp
dec
cmp
cwtl
sbb
xchg
imul
sbb
popf
mov
out
sbb
movsb
dec
lret
enter
jl
pop
add
fcmovbe
pop
dec
testl
mov
inc
add
pop
dec
inc
out
stos
inc
inc
aad
fimull
fcoml
cs
sti
mov
outsl
xchg
test
inc
fadds
cmpsb
not
call
adc
inc
sub
pusha
fsts
imul
pop
cld
adc
add
imul
xor
push
push
cmp
into
jp
ja
adc
inc
jecxz
mov
dec
or
add
inc
pop
or
jbe
push
mov
inc
mov
les
pop
mov
mov
insl
dec
mov
adc
jl
adc
repnz
inc
fnsave
addb
ljmp
push
test
jle
pop
pop
enter
nop
je
fwait
jnp
inc
ret
clc
jl
push
cmovge
or
xchg
cmc
pop
jg
sbb
sub
cmpsl
lea
rolb
inc
lea
adc
rcr
cmp
or
fidivs
lret
mov
in
rcrb
or
push
fs
test
pop
in
inc
insb
jmp
in
aas
jmp
pop
jbe
sub
adc
cmpsl
cld
popa
sub
adc
or
push
add
inc
mov
mov
adc
pop
stos
lock
and
sahf
adc
bound
sub
iret
add
repnz
daa
sbb
dec
lret
aad
adc
loopne
mov
jecxz
inc
call
inc
jae
mov
fwait
pop
add
cmpsl
xchg
sbb
adc
imul
mov
inc
fbstp
es
cmpsl
sub
fs
insb
clc
inc
pop
push
fdivl
adc
pop
jmp
sbb
int
mov
fs
ss
xchg
imul
lock
push
pop
ret
fsubrl
cmc
jns
xor
iret
aaa
pop
loopne
push
inc
mov
push
icebp
jg
jne
and
add
repz
lea
jmp
es
push
push
outsl
mov
out
jecxz
dec
xchg
and
into
dec
jae
add
or
mov
inc
sbb
xor
jg
inc
lcall
cwtl
lods
mov
pop
sbb
add
and
mov
mov
and
mov
jnp
pop
test
ss
mov
pop
jmp
or
push
add
scas
in
cwtl
pushl
jge
es
add
and
insl
pop
test
test
imul
sbb
stos
out
pop
cmpsl
push
ds
pop
mov
mov
mov
loop
outsb
shl
leave
shrl
mov
adc
mov
adcb
and
inc
xchg
adc
outsl
push
dec
int3
xor
leave
add
ja
aaa
push
clc
ljmp
jle
ss
add
xchg
ret
call
add
dec
sub
shrb
addr16
jne
popa
fstpt
mov
cmp
incl
into
jae
mov
xchg
or
cs
movb
jo
jecxz
sbb
into
out
mov
test
pop
cld
lcall
sahf
gs
pop
sbb
int3
fbstp
repnz
in
test
int
sub
pushl
in
lret
js
mov
xchg
call
aaa
insl
lcall
outsb
daa
outsl
icebp
xorb
cmc
shll
test
iret
push
adc
jb
push
push
movnti
mov
leave
stos
loopne
stos
dec
mov
popa
xchg
xor
or
xchg
pop
mov
pop
popf
push
xchg
mov
jecxz
pop
fmull
pop
mov
or
mov
cs
lret
in
jo
push
sub
or
cmpsl
adc
fidivl
adc
cltd
and
popl
xchg
pop
hlt
sub
and
aad
lods
test
mov
jle
stos
add
xor
xor
and
cltd
cmp
lods
mov
add
xchg
rorl
sub
jecxz
scas
dec
cld
xchg
sub
sbb
inc
mov
dec
mov
pop
jns
jmp
jne
xchg
mov
test
push
movl
mov
jne
call
mov
dec
movsl
inc
movsb
inc
mov
punpcklbw
pop
aad
xchg
inc
dec
nop
mov
fmul
and
fists
jmp
push
mov
shrb
out
pcmpgtd
inc
in
or
push
dec
shr
into
les
pop
adc
mov
xlat
jno
pop
push
inc
testb
xchg
addr16
ss
aas
fwait
add
jns
int3
sub
push
je
jmp
mov
aaa
inc
mov
jle
rorb
cmp
in
clc
sti
icebp
sti
ds
pop
pop
and
out
cmp
shll
das
push
inc
push
mov
push
cltd
mov
jae
sub
or
jge
stos
xchg
ds
adc
out
test
xchg
popf
repnz
cld
iret
mov
sub
test
addr16
sbb
inc
sbbl
mov
inc
dec
icebp
in
or
pop
cmp
sbb
xorl
and
cmp
mov
adc
or
dec
push
push
mov
and
repz
mov
negl
mov
data16
subb
sbb
jmp
sub
into
inc
and
jnp
int
stos
cmpsb
inc
lea
sub
cmp
mov
shrl
cmp
or
mov
emms
ficoms
mov
or
mov
push
pop
and
loopne
jecxz
movsb
in
sub
mov
rcrl
pop
xor
lret
pop
push
sub
insb
sub
popf
sbb
arpl
pushf
out
cwtl
xchg
xchg
aaa
inc
imul
fstpl
xor
mov
xchg
stos
mov
mov
push
or
adc
xor
adc
mov
lds
pop
inc
pusha
and
and
pop
mov
or
test
insl
inc
in
lret
test
mov
adc
jmp
pop
js
cmc
js
push
sub
leave
add
in
fstpl
mov
jnp
xor
cltd
int
nop
ficoms
imul
cmpsb
inc
icebp
or
sahf
ljmp
push
dec
dec
dec
filds
add
das
adc
aas
mov
mov
inc
xchg
xlat
xchg
je
insb
mov
out
loopne
push
and
lret
sub
cmp
push
or
and
outsb
addr16
sbb
or
aas
fldenv
aas
adc
inc
adcb
jae
xor
pushf
sbbb
lret
xor
aas
mov
arpl
lea
movsb
cmp
stc
jp
jno
or
inc
adc
popf
sub
cwtl
push
xchg
dec
ficoms
pop
insb
jns
sub
loopne
xlat
pop
es
and
jmp
cmp
lret
cmp
dec
stos
adc
fidivrl
xchg
add
pop
lds
pop
imulb
vunpckhpd
and
jno
mov
es
xor
loopne
mov
ds
xlat
imul
xchg
pop
cmp
xchg
stos
jns
push
ficomps
add
into
lods
lds
dec
add
flds
dec
xchg
lods
cmp
sub
sub
test
mov
xor
inc
inc
pop
push
pop
mov
js
pop
or
scas
mov
dec
jbe
rol
flds
aas
mov
daa
or
mov
dec
test
push
pop
add
call
cmp
out
inc
add
incb
fs
int
mov
mov
or
frstor
and
jne
lcall
sbb
out
or
pop
dec
adc
sbb
mov
push
push
popl
test
xor
mov
cmp
in
hlt
mov
pop
sub
inc
xchg
aaa
std
jmp
ja
xorb
mov
rorl
lock
lret
mov
mov
adc
mov
cwtl
mov
in
push
pop
lock
lods
icebp
push
out
xchg
push
cld
jecxz
dec
inc
mov
jno
repnz
outsl
jbe
cli
sub
push
loop
jecxz
and
push
fcom
and
rclb
sarb
rcl
cmp
jo
jle
clc
call
icebp
mov
sbb
cmp
xchg
sbb
pushf
std
cld
dec
icebp
popf
in
xlat
pusha
push
mov
jo
inc
jnp
lret
cmpsl
dec
xchg
rcrb
add
rorb
and
pop
mov
sbb
scas
inc
or
pop
xor
or
mov
daa
fldcw
push
dec
push
or
jo
pop
and
sbb
shrb
inc
mov
into
push
xor
aam
lods
dec
pop
mull
out
cmp
sub
mov
jl
xchg
ljmp
pop
and
je
popa
mull
push
je
xchg
fcoml
mov
lods
sarb
das
ds
dec
xchg
push
add
int3
or
inc
nop
pop
fidivl
lahf
xchg
cmp
lahf
in
je
jno
xlat
push
icebp
dec
loope
fsubs
stc
out
lcall
mov
adcb
sub
mov
mov
jg
popf
adcl
mov
jge
mov
xor
scas
cmpsl
push
sbb
push
jno
js
sbb
fisubrl
mov
jnp
lret
fsts
push
mov
call
shrb
pop
ljmp
outsl
xchg
repnz
jmp
lods
mov
push
in
xor
sarl
imul
pop
cld
popf
shll
mov
repnz
dec
xor
pusha
incb
mov
mov
movsb
out
andl
in
add
mov
bnd
inc
xor
add
rclb
mov
mov
shll
aam
inc
push
test
inc
adc
in
adc
out
lret
repnz
inc
cld
push
push
cmp
repnz
jp
sub
or
sub
inc
pop
ss
pop
push
pop
mov
insb
xchg
pop
pop
pop
xchg
dec
ja
inc
pop
sub
mov
into
jmp
xor
xchg
arpl
loope
adc
jmp
jp
inc
jle
fwait
mov
xchg
mov
jno
out
ror
mov
mov
push
adc
test
pop
inc
aaa
out
inc
jnp
arpl
dec
push
mov
mulb
sbb
std
jno
push
sub
cltd
test
popf
cmp
popa
ljmp
xor
and
mov
pop
data16
mov
inc
mov
lods
out
pop
fdiv
shrb
movl
icebp
mov
xchg
mov
or
ret
inc
mov
mov
mov
sub
cmp
cmpsl
rolb
xor
inc
ds
sub
mov
and
fstpl
arpl
test
lcall
nop
pop
jecxz
jl
out
pop
sub
sub
xchg
popl
push
cwtl
pop
mov
inc
fs
mov
add
and
mov
sub
add
pop
aad
rorb
loop
pusha
mov
scas
mov
lret
in
pop
fs
mov
jle
daa
insb
xor
out
dec
aam
jmp
cmp
enter
fmul
mov
aaa
mov
sbb
enter
int3
mov
lods
gs
cmp
outsb
jns
and
ss
bound
xor
gs
lock
mov
int
stc
mov
lcall
inc
push
icebp
scas
jo
jl
jl
push
or
test
pusha
fcoml
negb
in
call
sub
sbb
cltd
pop
aam
mov
stos
mov
cs
adc
fadds
hlt
jbe
in
hlt
mov
and
mov
js
cld
pop
pop
xchg
outsl
cmp
aam
out
rcll
test
xchg
sub
popa
stc
in
gs
sbb
outsl
dec
shrb
pop
adc
and
out
pop
add
and
bound
imul
xchg
push
sbb
mov
mov
lret
adc
mov
sbb
popf
aas
push
cld
inc
sub
test
rcl
mov
repz
cli
std
xor
inc
xchg
into
pop
dec
or
pop
jg
push
xchg
push
mov
pop
data16
adc
popf
mov
jecxz
and
test
cmp
and
ljmp
or
mov
mov
and
adc
loop
jge
mov
bound
or
sbb
xchg
fistpl
loop
cs
fisttpll
mov
xor
div
shrl
shl
imul
jmp
lcall
cld
xchg
jecxz
loop
sbb
icebp
inc
push
bound
ficoms
pop
cmp
out
mov
push
xlat
insb
ljmp
lods
dec
mov
cmpsb
cmp
call
aad
xor
push
out
push
cmc
cwtl
jg
adcb
loope
insl
leave
aam
je
jno
mov
fstps
int
mov
jmp
mov
cld
les
repnz
pusha
inc
jmp
jg
out
mov
mov
aas
mov
lahf
and
fistpl
enter
negb
cld
jbe
sub
add
sub
mov
jecxz
xchg
xchg
lea
jb
out
inc
and
xor
and
cli
bound
out
out
inc
mov
fisubl
xchg
rcrb
mov
sbb
addr16
ret
inc
ds
xchg
leave
lahf
out
addr16
packssdw
mov
imul
outsb
add
imul
test
or
pusha
mov
add
push
negb
mov
cmp
in
jmp
xchg
shrl
cmc
mov
dec
rcl
and
push
sbb
psrad
je
pop
dec
jmp
mov
jp
out
dec
add
cmp
cltd
sub
push
and
ss
adc
pop
add
add
push
lods
insb
mov
hlt
mov
push
clc
clc
add
sbb
fmuls
xchg
roll
adc
mov
inc
insb
jl
push
add
jnp
jb
gs
xor
push
cwtl
push
ljmp
jne
call
mov
mov
pop
push
jl
mov
mov
and
mov
movsb
dec
roll
or
aam
repz
ss
aam
cmp
mov
pop
hlt
int
cmp
test
in
pop
insb
test
mov
into
mov
sub
lock
mov
in
test
mov
adc
in
pop
outsl
or
ljmp
out
mov
rcl
loop
dec
es
push
sbb
aas
cmpsb
inc
lret
in
or
sub
mov
decb
add
dec
les
or
push
jno
pop
add
sub
fdivs
mov
mov
fsubs
push
lret
dec
mov
xchg
xchg
adc
xor
mov
dec
pop
pop
mov
xchg
adc
or
lahf
popa
pop
inc
bound
nop
dec
fdivl
inc
leave
shll
ret
adc
leave
mov
xchg
jbe
add
jne
lods
rcll
mov
std
inc
mov
stos
push
popf
xchg
clc
orl
insl
aad
push
dec
xchg
xlat
sub
jne
sarl
popa
lea
mov
insl
inc
mov
in
xor
sbb
xor
push
ror
inc
lcall
inc
subb
cltd
xchg
insb
negl
dec
sub
leave
out
lea
outsl
jns
cs
mov
ljmp
push
mov
sahf
push
mov
popf
push
stos
pop
mov
mov
inc
ret
mov
std
dec
mov
out
fbstp
jl
clc
and
fimull
sub
rol
cltd
xchg
mov
lds
cmp
sbb
lods
ljmp
loopne
dec
fdivrl
jnp
and
insl
stos
adc
into
dec
imul
xor
and
les
dec
push
imul
jns
popf
repnz
clc
icebp
outsl
test
xchg
outsb
add
push
jb
adc
outsl
push
xorl
mov
mulb
ja
movq
call
add
mov
in
push
cli
inc
lods
ret
cmp
mov
imul
aas
add
mov
decb
inc
ljmp
ret
inc
popa
xchg
pop
aam
test
jno
push
outsb
lods
sbb
inc
out
test
sbb
inc
jecxz
data16
pop
push
nop
add
insl
pop
or
cltd
mov
andl
add
sbb
mov
sti
pop
loop
inc
out
stos
jg
lock
loop
and
xchg
cmp
sti
test
ljmp
inc
mov
xchg
stc
in
push
mov
mov
dec
ja
push
sub
inc
in
jnp
mov
or
mov
push
mov
xor
into
xor
hlt
mov
je
nop
daa
icebp
mov
xchg
sbb
lock
popa
imul
jg
mov
sbb
ficomps
cmp
addb
ret
xchg
or
and
out
loope
sbb
jecxz
outsb
cld
inc
cltd
jno
int3
into
std
aad
or
in
fs
add
mov
dec
pushf
outsl
lahf
cwtl
inc
fwait
mov
in
adc
dec
jcxz
sbb
fisttpll
cmp
out
jae
adc
les
push
jnp
cs
into
add
cmp
add
cwtl
fs
sbb
aas
sub
mov
shlb
shrb
sbb
jae
pop
aam
imul
ljmp
std
adc
push
push
imul
popa
mov
sbb
or
or
ljmp
jno
pop
iret
leave
pop
cmpsb
test
dec
call
cmpsl
push
xor
dec
add
scas
jmp
and
push
ds
or
ficoml
jmp
bound
orl
outsl
pop
pop
xor
add
sbb
jne
pusha
mov
mov
and
cmp
cmp
mov
mov
imul
mov
jo
pop
inc
ss
sar
fstpt
out
arpl
int
jl
in
cmpsb
mov
iret
aas
pop
lea
popa
mov
sub
mov
leave
xchg
test
fnstsw
jle
mov
fbstp
push
jb
ss
outsl
outsb
xor
sbb
push
out
andb
dec
cmovb
outsl
lods
mov
int
mov
bound
stc
add
test
push
push
lcall
adcb
fbstp
popa
ret
loop
pop
jno
inc
out
mov
pop
std
outsl
and
pusha
dec
mov
push
icebp
adc
push
xlat
dec
add
ret
fisttpl
and
xlat
sbb
dec
push
stos
std
cmp
sbb
jo
inc
add
pop
xor
fildl
mov
xlat
movsl
cmpsb
jb
pop
push
or
mov
lea
push
dec
sbb
jns
and
aad
out
sub
das
cmp
xchg
subl
and
push
das
xchg
add
nop
js
sbb
adc
sbb
push
ds
jmp
cmp
popf
testl
and
push
mov
roll
pop
jge
pop
imul
popf
and
les
movsl
negl
gs
ret
gs
rcrb
add
push
outsl
loope
xor
cmp
stos
jne
push
in
mov
mov
js
xchg
out
jns
cld
cmp
lods
arpl
call
jge
arpl
and
jae
jne
xchg
popf
jp
sub
addb
aam
dec
stos
stos
xlat
gs
dec
pop
test
xor
loope
xor
movsl
stc
movsb
adc
cmp
pop
stos
push
push
jb
sbb
jge
mov
hlt
mov
cld
dec
ds
nop
out
inc
push
inc
xchg
add
pop
pop
addr16
paddq
mov
mov
ljmp
mov
add
push
inc
add
icebp
mov
ss
cmp
or
test
and
movsb
inc
push
in
jbe
std
cmp
jae
mov
aam
fwait
and
adc
aam
mov
mov
insl
jg
dec
stos
sub
test
jle
or
mov
insb
adc
ret
aas
aas
pop
rclb
jne
fsubs
loopne
fimull
ds
add
dec
xor
add
pushl
push
pushf
mov
ret
fstpt
xchg
xchg
call
jle
jge
add
sti
cmp
mov
arpl
mov
add
lahf
add
andl
and
mov
cmp
outsl
aam
mov
fimull
xchg
xrelease
dec
jne
inc
repz
cli
pop
rcrb
add
jnp
push
movsb
stos
hlt
hlt
add
or
mov
out
movsl
sub
and
int3
pavgw
mov
or
or
cmpsl
or
test
sub
xor
ss
fs
repnz
xchg
jmp
fistl
jge
push
ljmp
push
push
xchg
leave
sbb
xchg
xchg
cmc
sub
adc
nop
les
and
sub
sub
enter
add
sub
fs
pusha
aad
mov
mov
lods
cmp
xor
clc
into
mov
sub
push
mov
je
clc
loope
stc
mov
sbb
mov
lds
xchg
das
push
dec
push
pop
cltd
adc
xor
sub
jo
xor
iret
cmc
pop
mov
mov
adc
testl
sbbl
loopne
jl
jbe
adc
add
push
hlt
mov
cmp
aad
cmp
btc
dec
js
pop
dec
inc
sub
xchg
popa
stos
test
in
hlt
addr16
shl
mov
inc
adc
std
imul
sub
pop
mov
cmp
jno
xchg
mov
das
jo
loopne
mov
stc
addl
adc
ss
cwtl
pop
mov
insl
dec
or
inc
push
pop
stos
imul
faddp
in
arpl
ja
xor
hlt
cld
xor
mov
and
test
aad
into
cmpsl
and
inc
xchg
loopne
adc
dec
les
movsl
jg
stos
jb
clc
mov
mov
imul
cwtl
push
nop
push
mov
loope
dec
xchg
mov
push
mov
rorb
sbb
pop
and
icebp
mov
push
leave
push
daa
inc
inc
cmp
pop
xor
push
jns
icebp
mov
mov
mov
shrb
and
fistpll
aas
mov
repz
pop
dec
mov
repnz
and
cmp
fists
ret
mov
xor
or
dec
xor
adc
imul
loopne
cmp
jb
xchg
ds
jno
jle
negl
add
mov
andl
ret
gs
mov
sbb
pop
add
dec
xchg
jle
mov
in
je
sbb
pop
std
enter
test
push
mov
cwtl
dec
arpl
jne
cmpl
data16
in
fwait
nop
mov
sub
mov
mov
jne
mov
xor
push
mov
mov
rclb
ret
jne
stc
xor
jae
xchg
loopne
loopne
xor
mov
xchg
shr
dec
testl
sbb
in
jo
std
sbb
xchg
lods
gs
stos
adcl
push
movsl
sbb
fsts
mov
repz
cltd
fadds
outsl
repz
lret
add
mov
jle
cs
push
lods
gs
adc
test
push
sahf
sub
fsts
out
xor
lods
jecxz
xchg
das
add
ds
xor
cmp
test
push
das
popf
mov
or
mov
dec
sub
rcl
and
push
mov
cltd
scas
xchg
fcompl
or
or
push
fdivrs
out
mov
scas
mov
ret
out
dec
push
cli
push
mov
mov
inc
addr16
jne
add
loope
mov
mov
mov
pop
pop
jo
dec
aad
pop
cmpsb
dec
and
scas
jg
insl
sub
push
sbb
lret
shll
and
scas
xor
rcrb
loop
jg
testl
shll
add
pop
sbb
add
sub
popa
enter
inc
adc
jns
inc
out
adc
cmpl
push
mov
incl
mov
inc
sti
arpl
fldcw
mov
pop
jecxz
mov
cmp
or
jp
hlt
daa
cmp
cmp
cld
inc
push
inc
or
push
mov
push
fs
dec
repz
xor
pop
mov
mov
orl
and
dec
int
cmp
outsl
or
pop
stc
mov
pushf
cli
jmp
mov
icebp
xor
repz
ja
dec
out
popa
test
ret
jns
loope
insb
nop
mov
gs
xor
test
decb
clc
orl
xchg
xchg
sub
mov
jl
mov
movsl
cld
fimull
int
cmp
or
mov
jo
jno
inc
pop
mov
xorb
pop
adcl
and
insl
rcll
in
dec
iret
sti
in
loopne
add
arpl
pop
xchg
pop
divb
jbe
call
pusha
cmc
mov
mov
stc
xchg
inc
shrl
adc
cmp
ret
rcll
xchg
lret
xor
inc
loop
add
pop
loope
mov
push
les
cmpsb
hlt
xor
pushf
xor
xchg
in
leave
cli
call
jecxz
pop
push
loopne
insl
popf
mov
stc
adc
push
addr16
addl
adc
lds
xchg
mov
mov
mov
or
mov
mov
cmpsb
xor
lods
loopne
test
adc
jl
or
xor
lret
adc
es
dec
jge
stc
stc
inc
jmp
lret
mov
sbb
inc
or
lahf
pop
jl
xchg
jb
pusha
mov
or
mov
lret
cmp
adc
jmp
inc
aaa
std
outsb
dec
loopne
jbe
mov
push
add
cmpb
daa
and
out
inc
rcll
in
inc
aas
dec
lods
stos
add
addl
ja
mov
xor
movsb
push
or
popf
lret
sbb
pop
xchg
pop
bnd
xchg
xchg
into
push
jns
imul
dec
inc
xor
lock
mov
jne
adc
pop
aaa
inc
sub
pusha
ret
adc
push
out
sbb
dec
pop
scas
mov
loopne
add
pop
call
mov
into
mov
push
repnz
sub
mov
in
sub
mov
mov
dec
and
or
nop
lahf
mov
subl
outsb
lret
push
loopne
cmpsb
dec
sub
insb
lods
sbb
cli
ds
insl
jae
loop
sbb
and
adc
pusha
sub
fidivs
dec
push
xor
stc
xorl
mov
rorb
fcoml
lahf
add
sub
inc
ja
xor
mov
mov
lahf
test
xorl
insb
jmp
out
cld
mov
xchg
aam
xor
das
xchg
mov
mov
mov
loopne
adc
andl
fwait
mov
aam
in
int
int
mov
icebp
cmc
mov
xlat
fldt
dec
lea
pop
push
cmpb
sbb
rcrb
xchg
cmp
push
scas
xchg
cmp
stos
mov
stos
adc
push
daa
int3
adc
test
push
or
ljmp
int
mov
imul
adc
mov
sub
xor
push
mov
add
sbb
cmp
jge
cmp
push
es
or
push
cwtl
out
lret
sti
xor
or
xor
lds
loope
xlat
push
sub
jl
jl
stc
out
adc
xchg
mov
out
repnz
sub
and
neg
loope
push
pusha
push
or
inc
int
dec
scas
and
pop
test
or
loopne
adc
mov
xor
sub
rclb
mov
mov
inc
bound
les
loope
cwtl
movsb
cltd
jbe
loopne
lock
inc
sbbb
add
imul
stos
jmp
push
enter
notl
or
mov
xchg
fcmove
scas
xchg
sbb
leave
xor
loopne
in
jecxz
mov
ja
adc
push
xor
sub
mov
aam
mov
ret
adc
enter
or
cmpsl
xchg
loop
setb
xchg
das
push
cmp
pop
cmp
adc
fiadds
loopne
aad
fiadds
and
das
jo
int
dec
xchg
mov
add
test
sbb
inc
push
test
popa
inc
ss
pop
lods
and
mov
nop
dec
hlt
lret
dec
ja
stos
enter
out
pusha
enter
lods
addr16
adc
scas
cmp
in
jae
rclb
jb
divl
mov
cs
enter
and
and
ret
xchg
adc
stos
xchg
inc
bound
mov
mov
stos
inc
push
fcomps
mov
fmuls
and
xlat
or
pop
push
pop
in
dec
ja
xor
scas
sub
sub
push
pop
loopne
jb
jnp
push
lcall
cwtl
loope
sbb
aaa
cmpsl
pusha
js
test
dec
cmpsb
mov
fsubl
pop
lea
mov
xchg
fists
lock
mov
xchg
xchg
add
jl
and
cmp
sub
popa
sbbl
aad
sbb
xchg
mov
pop
jmp
std
addl
rcr
ja
xchg
iret
inc
sbb
and
pushf
cmp
sbb
hlt
pop
cmpsl
lods
ret
out
mov
mov
add
fdivrl
sbbl
jne
gs
cmpsl
arpl
insl
andb
sbb
ds
lock
mov
pop
jns
incb
iret
and
dec
push
inc
cmp
fisubrs
jnp
mov
mov
out
fldl
xchg
cs
movsl
lods
sbb
sbb
imul
shr
sub
jne
adc
adc
pop
cmpsl
cltd
ror
xchg
stos
pop
imul
xor
mov
mov
jg
mov
mov
mov
call
pop
sarl
lock
jge
scas
mov
jl
std
inc
jle
sbb
push
pop
lock
std
push
xchg
pop
or
push
xor
xchg
outsl
int
call
push
mov
fs
popf
mov
sbb
shrb
insl
xchg
fs
rolb
inc
js
data16
adc
cmp
pushf
mov
fcoms
jmp
insl
xchg
andl
xchg
outsl
cmp
or
fs
mov
mov
pushf
les
ja
mov
fsts
push
int
mov
push
push
and
shlb
pop
push
xchg
mov
ret
dec
pop
in
sub
jg
stos
les
add
sub
adc
mov
cmc
aaa
jb
mov
adc
sub
scas
push
pop
inc
mov
pop
int3
repnz
in
cmpl
pop
ljmp
pop
popf
push
cld
jle
clc
lret
and
xchg
aam
adc
lock
pop
aam
adc
stos
outsl
push
ficoml
and
movsbl
push
mov
sub
je
dec
scas
test
xlat
push
out
pop
loope
stos
adc
popf
add
fimuls
dec
jnp
dec
inc
pop
xorl
rorl
sti
push
and
ret
sbb
xchg
sub
sbbl
cmpsb
mov
aad
pop
sub
dec
pop
add
and
fsubr
not
xchg
xor
ret
addb
cmp
ja
sbb
inc
fnsave
and
push
dec
mov
add
andl
int
xchg
int
mov
stc
cmp
xor
sub
sub
mov
jns
imul
cs
xor
popf
jl
lret
fnclex
xchg
mov
fcomi
fdivrl
inc
adc
inc
and
jecxz
cmpsb
repz
cmpsl
sub
fists
pop
mov
dec
outsb
sar
outsb
movsl
in
push
mov
std
loop
dec
out
adc
ret
test
out
sub
idivl
push
push
loopne
enter
push
enter
push
mov
push
mov
xlat
xor
push
mov
movsl
popf
mov
push
inc
jo
push
inc
mov
mov
test
sbb
push
cs
mov
push
lret
cli
daa
fisttpll
mov
imul
setbe
pop
xchg
es
lahf
les
repnz
lret
lods
xor
scas
cs
test
bndldx
cld
add
fwait
insb
cs
push
mov
aad
adc
cwtl
lahf
movsb
shll
add
inc
add
mov
jl
loope
loope
push
div
ss
inc
mov
pushf
sub
inc
mov
push
and
dec
xor
outsb
adc
xor
push
scas
and
xor
test
cmpsb
inc
mov
adc
je
sti
mov
out
xor
stc
into
int3
and
push
int
daa
push
inc
jge
in
sti
pop
cmp
jecxz
test
sub
sub
push
aaa
xchg
imul
jo
xchg
mov
cmc
or
test
neg
xchg
push
push
daa
inc
and
std
pop
mov
sbb
mov
push
xchg
sbb
orb
repz
xor
dec
loopne
sub
jmp
inc
sub
jecxz
and
out
sub
lcall
in
in
mov
jmp
movsb
aas
mov
outsb
cmpsb
xchg
push
or
mov
movsl
testl
xchg
add
mov
push
push
nop
call
mov
push
leave
xor
jg
dec
insl
xor
sbb
out
mov
or
popf
xlat
mov
adc
add
jne
js
pop
pop
xchg
pop
jl
out
add
ror
add
lock
mov
add
cmp
sbb
fisubl
mov
sub
roll
leave
xchg
daa
loopne
outsb
add
dec
and
mov
inc
cmp
popa
ret
les
mov
sub
and
sbb
mov
cs
pushf
ja
xor
movsl
pop
repz
inc
and
sub
in
das
stos
arpl
and
xchg
jnp
xor
fmul
mov
dec
lds
inc
pop
dec
sub
jp
sub
in
repz
insl
mov
push
test
pop
pop
lret
cmpsl
lret
cmp
popa
ja
ret
xorl
jae
jecxz
fldcw
sbb
fwait
stos
arpl
loop
call
lea
test
mov
or
std
ljmp
stos
cs
dec
mov
fisubs
adc
mov
sti
xchg
fsubrs
push
sbb
cmpb
cmp
repz
jnp
mov
mov
add
pushl
jae
hlt
call
out
and
mov
cwtl
inc
xchg
test
adc
adc
out
loopne
sub
mov
ljmp
pop
xchg
jle
xchg
mov
xor
pop
lret
jmp
xchg
stos
aam
pop
inc
fwait
ret
enter
movsb
mov
adc
divl
push
lret
fdivr
bound
inc
mov
jo
and
movsb
xor
pop
jp
pop
sub
sbb
jo
push
into
mov
lret
xor
pop
cmpsl
ror
cmp
cld
mov
stos
cmp
fwait
cltd
loope,pt
fwait
sub
push
push
int3
push
add
bnd
inc
sbb
out
jp
mov
cmpsb
je
sbb
mov
mov
mov
push
movsl
cmc
stos
dec
test
insl
inc
dec
or
xor
int
out
fdivl
mov
cmc
mov
mov
loope
lods
or
int3
imul
mov
add
cmpsl
sbb
gs
loop
mov
and
inc
sbb
xchg
loopne
ficoms
test
jns
mov
dec
sub
cmp
push
adc
outsl
inc
sbb
dec
or
mov
xlat
adc
mov
lret
add
shrb
pop
jae
lret
push
xor
xor
xchg
dec
fldenv
ss
lods
cwtl
lar
pop
mov
sub
mov
mov
stos
andb
adc
gs
std
jp
push
test
lock
fistpl
inc
adc
dec
pop
test
pusha
nop
add
js
mov
popa
dec
ss
rcll
and
pop
mov
enter
add
mov
adcb
jae
jnp
or
in
loop
mov
adcl
sti
repz
mov
inc
lret
and
cmovp
mov
imul
and
or
xor
insl
xlat
cmp
pop
push
cvtps2pi
filds
jmp
gs
mov
push
or
mov
cmp
cmp
or
fwait
add
cmp
mov
dec
and
add
mov
pop
mov
dec
pushf
adc
dec
and
push
into
add
inc
jns
pop
inc
out
in
add
stos
lcall
hlt
mov
scas
icebp
ret
data16
les
out
and
ja
lods
fistl
sbb
adc
ret
ss
fstps
mov
shrd
ljmp
jle
fwait
daa
orl
ds
mov
dec
loope
sbb
cmp
stos
pop
sbb
xchg
sub
adc
in
dec
sbb
icebp
pop
sub
dec
fwait
add
aas
sub
jp
pop
mov
push
imul
aad
shr
dec
ret
sbb
out
daa
pushf
adc
push
or
in
fbld
cmpsb
cmpsb
cmp
clc
std
jg
mov
arpl
cs
shll
stos
cli
fstps
pop
and
xor
or
or
xor
pop
scas
fmul
mov
mov
push
mov
out
inc
stc
mov
sbb
leave
repz
adc
jno
cli
xchg
xchg
pop
in
xor
das
mov
mov
push
loopne
rcrl
cmc
or
jge
xchg
scas
mov
inc
inc
hlt
nop
pop
sbb
jo
pop
inc
jbe
jo
or
imul
in
fstpl
mov
sahf
xor
pop
fisubl
inc
idivl
push
rcrl
ljmp
sub
pop
out
lcall
cmp
pushl
gs
pusha
mov
out
mov
out
int
sub
xchg
out
and
scas
push
sbb
or
or
xor
mov
jo
cmpsb
inc
cmp
push
mov
pop
rcrl
and
in
or
inc
inc
or
xor
sbb
mov
lds
jo
sbb
fwait
adc
in
repz
push
inc
cmpl
adc
push
pop
sbb
pop
add
or
stos
add
pop
test
push
subb
inc
loop
sub
mov
inc
adc
pop
xchg
and
ficomps
inc
and
xsha1
cmpsb
dec
adc
not
addr16
adc
jge
add
jns
jle
cmc
mov
leave
add
dec
fildll
imul
pop
das
aas
push
jnp
add
js
ror
push
sbb
lock
push
test
aas
xor
lahf
lret
mov
mov
mov
mov
jnp
sub
lds
pop
scas
jns
mov
aas
enter
int
arpl
int3
cld
lret
mov
imul
xor
dec
sub
sbb
xchg
mov
mov
ret
cli
les
addl
pop
testl
push
push
pop
repnz
mov
dec
push
xchg
cmpsb
fs
inc
pcmpgtw
pop
cmp
ja
cli
mov
sub
int
jmp
pop
out
sarb
orl
ljmp
shlb
push
inc
mov
push
push
nop
js
jno
outsb
push
fldl
mov
pop
sbb
ljmp
inc
in
inc
xchg
pusha
test
scas
jecxz
test
repnz
gs
jbe
cmpsl
pop
add
cmp
dec
ds
ljmp
cmp
cmp
mov
out
mov
push
mov
adc
adc
icebp
ret
or
out
xchg
loop
adc
es
adc
sbb
mov
push
ret
xchg
dec
xlat
sub
repnz
mov
cld
lahf
push
ror
pop
cmp
dec
ljmp
and
mov
lods
out
aaa
or
xchg
sti
aaa
or
xchg
adcl
ret
ja
movsl
imull
mov
imul
adc
xor
popf
insl
lcall
movsl
jne
ret
ret
aaa
fisubs
inc
jb
sub
aam
in
cltd
std
jbe
mov
andl
in
out
cmp
cs
mov
xchg
aad
push
pop
sub
insb
xor
in
mov
sub
test
mov
xchg
bnd
out
inc
or
pop
call
xchg
in
xchg
fdivr
add
sub
cmp
sbb
movsl
out
dec
test
test
rclb
shl
gs
sti
xchg
sub
cmp
push
or
fnstsw
lods
int3
jb
pop
int
dec
adc
jno
jb
xchg
das
stos
xchg
inc
cmp
and
push
and
out
xchg
xchg
nop
mov
adc
add
cmc
dec
jne
ds
mov
push
mov
pop
xor
lcall
xchg
cmp
in
xchg
ffreep
fisttpll
inc
test
data16
js
jae
data16
arpl
decb
cltd
out
fwait
xor
pop
stos
sti
mov
cs
pop
and
jl
mov
mov
inc
mov
xchg
stos
popf
ss
cmp
jecxz
fldcw
pop
push
aas
aas
mov
sbb
hlt
hlt
or
xchg
jp
mov
gs
cmp
lds
pop
es
outsl
push
roll
aas
jmp
ret
xor
mov
mov
mov
cmp
lods
adc
pop
das
and
and
or
lods
shrb
push
loopne
pop
je
pop
or
aas
in
mov
inc
shll
dec
call
leave
pop
xor
scas
or
mov
scas
push
or
hlt
mov
dec
insb
pop
stos
mov
mov
jbe
pop
pop
nop
mov
mov
lods
aam
lods
sub
in
outsb
xlat
pop
cli
in
cmp
ljmp
xchg
out
negl
js
stos
leave
lret
mov
mov
fcmovnu
es
or
xchg
adc
and
and
dec
push
lret
or
mov
mov
xchg
fiadds
and
rorb
mov
pop
mov
xchg
pop
adc
mov
int
hlt
dec
mov
or
ficomps
jp
mov
or
clc
popf
sub
lods
arpl
push
or
xchg
pmovmskb
daa
andb
dec
add
ss
jae
loopne
inc
pop
push
push
xchg
addr16
das
in
loopne
jb
dec
out
mov
mov
push
and
test
dec
iret
faddl
bnd
pop
fcmovnbe
lods
movsb
mov
jnp
pop
or
pop
pop
aaa
lcall
test
sbb
insb
jge
and
dec
pop
fs
fbstp
xorl
dec
or
test
pop
out
mov
push
xchg
sub
add
jl
jge
sbb
push
lret
mov
stc
es
mov
pop
mov
arpl
xor
jge
push
ljmp
outsb
sbb
push
mov
shr
jbe
ret
add
lret
stos
rcrb
sbb
aaa
adcl
fiadds
loopne,pn
aam
sbb
xchg
push
loopne
cmp
mov
sbb
sti
push
lods
fcomps
in
bound
xchg
mov
xchg
push
lret
jmp
mov
ss
or
nop
fisttpl
dec
xor
push
ss
rclb
stc
fiadds
mov
cmp
stos
xor
or
xlat
fidivrl
xchg
xor
icebp
mov
cmpsb
imul
dec
push
cltd
pop
and
shlb
orl
leave
dec
and
loop
mov
orl
add
cmpsl
and
imul
mov
repnz
inc
cmp
ret
push
ss
mov
push
adc
movsb
fwait
xchg
jg
sti
dec
adc
popa
call
adc
sub
test
or
xchg
icebp
or
sub
test
dec
sbb
add
cmp
and
das
nop
and
sti
fnstsw
repz
adc
sbb
xorb
xchg
xor
repz
jb
jl
test
cmpsl
mov
insl
cmp
sbb
adc
push
das
aam
and
mov
inc
pop
mov
inc
les
outsl
adcl
outsl
jp
cs
xchg
gs
push
addr16
ror
inc
xchg
icebp
int
ficompl
push
addr16
lcall
add
clc
pusha
fdiv
sbb
or
jl
mov
sbb
test
adc
fstpl
lods
ss
and
cmp
shr
mov
decb
mov
popf
push
inc
daa
cmpsl
xlat
xor
push
test
aam
popl
sub
inc
stos
adc
test
cli
push
je
cmp
and
jne
das
mov
adc
ds
or
lods
dec
sbb
imul
dec
outsb
pop
sub
mov
cmc
lea
test
cmp
insb
xor
add
inc
or
loopne
fwait
addr16
in
scas
inc
pop
pop
cmpsb
dec
lahf
xor
aas
push
mov
icebp
and
add
iret
movl
icebp
sub
test
pop
cli
test
sub
pusha
addr16
lods
cmpsb
mov
aam
rcrl
mov
subl
push
ljmp
repz
xor
and
mov
mov
push
cmp
mov
pop
and
mov
stos
je
pusha
int3
lret
ljmp
mov
push
push
jge
cmp
cmc
lods
jbe
sbbb
mov
pop
stos
jo
adc
cmc
into
push
mov
incb
add
int
pop
dec
mov
sub
jmp
adc
xor
xchg
pop
pop
mov
dec
xchg
fsin
lahf
ja
jp
mov
iret
mov
mov
jmp
inc
sbb
adc
add
push
push
push
int
sub
pushf
aad
repz
xchg
in
jb
mov
or
popf
xor
testl
iret
popa
pop
fdivs
divl
mov
ds
out
lods
mov
outsb
and
lea
push
mov
sbb
sbb
fmul
clc
jns
adcb
xor
lcall
mov
aad
roll
pop
sbb
and
imul
ss
sub
adc
pop
push
lahf
mov
mov
mov
dec
mov
movsl
adc
mov
cmpsb
push
xchg
sub
idivl
push
pop
mov
pop
mov
push
sub
repz
dec
pop
clc
sbb
lret
inc
pop
xor
push
or
lea
popa
ret
add
lret
test
push
cli
mov
sbb
shl
sub
cmp
iret
out
aad
insb
xor
rcr
fmulp
bound
fmull
inc
jmp
jbe
popl
lcall
es
inc
js
test
xchg
inc
lds
and
dec
and
sbb
lahf
add
ror
cmp
cmp
cmpsl
outsb
and
loopne
xorb
lret
pop
jns
pop
xor
jne
or
dec
movl
xchg
call
std
xor
rorb
stos
lods
sbb
cld
fwait
addr16
fucomi
hlt
push
lea
ret
cmp
jmp
mov
lret
sbb
add
outsb
cli
ret
or
test
dec
scas
fdivrl
cmp
ret
mov
mov
cs
push
int3
dec
ja
stc
leave
lds
push
mov
popf
test
popa
insb
call
push
push
push
inc
insl
lods
cmp
inc
inc
sbb
push
jle
movsb
sbb
mov
xchg
mov
mov
mov
data16
lret
lods
bound
mov
add
cmp
sub
daa
pop
lock
jmp
mov
fpatan
and
fwait
inc
cmp
lods
insb
mov
sbb
jle
mov
imul
lods
xor
cmp
xchg
adc
mov
cld
sub
lock
mov
lret
out
sub
jne
cmp
mov
icebp
insl
cli
mov
mov
sub
loop
iret
dec
pusha
hlt
and
xor
add
fcoms
sbb
in
lods
mov
push
xchg
pop
mov
mull
push
daa
test
dec
into
sub
aad
add
inc
dec
ss
sub
mov
jne
adc
adc
pop
jnp
les
adc
fadd
and
mov
and
shrb
fnstenv
test
cmp
jbe
jecxz
out
xchg
xchg
sub
adc
insb
xor
push
mov
out
jne
xchg
movsl
push
inc
scas
mov
stos
pop
cli
xchg
pop
mul
dec
pop
pop
pushf
rclb
testb
mov
push
loopne
jp
adc
push
rorb
imul
or
arpl
cwtl
lods
mov
mov
dec
jmp
repz
jno
mov
push
imul
repz
mov
dec
ss
dec
push
push
lods
iret
aad
rol
adc
nop
and
xchg
mov
out
adc
adc
cmp
lea
pop
dec
push
mov
das
sti
aas
lods
sub
das
idivb
sbb
fchs
xchg
mov
push
pop
push
clc
stos
movsl
or
sbb
in
xchg
adc
pop
jmp
popf
push
push
movl
lahf
and
jl
push
andb
cmpsl
cmp
jle
cld
and
mov
testl
insb
cmc
icebp
jb
push
adc
xlat
je
cmpsl
inc
push
test
mov
mov
pop
addr16
ds
push
jg
mov
leave
inc
in
xchg
adc
push
mov
in
xor
test
ret
fs
dec
mov
mov
stos
jge
aaa
pop
pop
fcom
gs
cmp
je
cmpsb
sub
mov
fsub
sbb
push
adc
int3
dec
sti
shlb
addr16
adc
lods
xchg
fstpl
jl
adc
sahf
stos
mov
cltd
push
and
xchg
mov
adc
push
test
sbb
sub
jg
in
fwait
cmp
xor
sbb
ficomps
mov
push
test
mov
rcll
mov
outsb
sbb
xchg
lea
add
xchg
lea
pop
cmp
aas
pop
leave
cmp
enter
mov
or
jecxz
adc
rorl
xchg
jle
lock
dec
mov
jno
ja
rclb
rcll
rcr
inc
sbb
inc
push
in
fsts
mov
add
xchg
lods
cmp
add
loope
mov
push
rclb
shr
dec
imul
push
shr
int
out
xchg
lcall
or
dec
inc
cmp
shll
cmp
cmp
jge
dec
data16
lahf
xchg
push
out
outsb
lret
into
mov
es
or
lds
jne
push
inc
adc
fiaddl
and
cs
shl
sbbb
jae
dec
jne
mov
test
mov
sub
fsubrl
out
pop
mov
test
cmp
push
lock
and
push
or
mov
ret
mov
aam
xor
mov
in
je
shrl
negl
lahf
mov
mov
or
icebp
mov
cltd
mov
enter
mov
dec
dec
mov
stos
pop
push
add
adc
inc
sbb
jnp
lods
xchg
sarb
stos
out
or
test
shl
pop
jo
lahf
push
je
pop
scas
ficompl
popl
push
jp
mov
xlat
dec
xor
mov
ret
mov
cmpb
xchg
jbe
jne
cmp
loop
push
stos
push
ljmp
ljmp
cmc
je
sti
call
and
xor
mov
lods
pop
sub
dec
test
outsl
stos
jge
icebp
stos
dec
lcall
fwait
cs
inc
icebp
addr16
cmp
add
fmul
mov
dec
dec
or
sahf
push
dec
mov
mov
sub
pop
pop
in
dec
filds
push
dec
cmpsb
inc
es
or
mov
aas
popf
stc
iret
lock
jl
mov
dec
jno
mov
inc
jge
test
out
stos
aad
dec
ret
loope
or
dec
dec
pop
in
jmp
xchg
cmp
xchg
test
lods
sbb
push
lcall
ljmp
jns
mov
fisubrl
hlt
jp
and
push
xor
pushf
flds
leave
mov
inc
pusha
xchg
fnstsw
pusha
push
sahf
rorl
shll
ljmp
stc
mov
xchg
mov
and
or
outsl
add
fistpll
xchg
cmp
mov
in
jbe
sbb
mov
jmp
pop
cmp
mov
pusha
or
jp
and
mov
in
push
sahf
xor
cs
sub
sub
aad
clc
aam
pop
mov
mov
ds
push
pop
out
xlat
aam
dec
leave
xchg
icebp
jb
arpl
mov
jmp
xchg
or
lea
js
daa
ret
push
dec
sbbb
outsl
dec
sub
out
dec
jl
nop
aaa
inc
cmp
loopne
jle
and
pop
in
popa
xchg
push
mov
popa
mov
and
sbb
mov
mov
neg
loopne
adc
adc
xchg
jle
mov
negl
or
sbb
test
inc
negl
in
mov
cmc
xor
fisttpl
xchg
xchg
xchg
ljmp
in
mov
xlat
bnd
cs
ret
data16
in
cmc
clc
loopne
dec
int
pop
push
xchg
or
mov
sahf
ret
mov
pop
std
enter
jns
cmp
push
push
int3
scas
lahf
mov
jae
xor
pop
mov
dec
push
test
repz
push
test
lahf
cs
cld
movhps
or
cmp
pop
clc
sub
aam
rcrb
add
sahf
push
and
out
into
cmp
jns
lea
bound
mov
inc
ficoms
mov
mov
test
inc
cltd
pop
xor
mov
ret
in
pushf
mov
cmp
mov
orb
orl
push
adc
testb
sahf
fsts
jmp
jg
and
cmp
into
cmp
xchg
flds
stos
xor
xor
inc
out
lods
fistpl
mov
es
lods
rcr
mov
fcoml
ret
xchg
jle
js
lea
inc
sarl
cmp
idivb
cmp
pop
xchg
in
je
mov
loop
lcall
lahf
divb
cli
jmp
sub
lods
dec
pop
call
mov
insl
es
dec
add
xchg
mov
mov
or
xlat
scas
or
shl
test
test
sbb
es
pminsw
stos
mov
ficoms
loopne
imul
pushf
leave
or
loop
test
cs
in
jp
lcall
enter
stos
xor
jns
insl
fstps
push
aam
mov
scas
pop
add
stos
sub
push
xor
pop
push
sub
das
xchg
popf
xchg
lods
mov
adc
adcl
mov
xor
push
lock
pusha
pop
cwtl
xchg
or
mov
lds
sub
dec
scas
adc
sarl
or
jge
rcl
sbb
sahf
pop
mov
cmc
jmpw
pop
lock
sub
cmpsb
lret
pop
mov
xchg
out
fisttpll
push
add
push
mov
mov
cmp
addr16
shr
fsub
call
leave
cmp
adc
inc
ret
movsb
fs
in
and
jo
insb
or
gs
mov
sbb
xor
ljmp
dec
xor
cmp
leave
cmp
xchg
jecxz
push
add
jl
mov
sub
jp
iret
cmpsb
cwtl
rclb
scas
out
xchg
mov
stc
fwait
jae
lods
sub
add
ret
push
xchg
aas
stos
imul
repz
add
push
cs
cmp
pop
imulb
pop
repz
popa
xchg
add
in
fsubrl
repnz
push
shrb
jnp
mov
sub
xchg
stc
xchg
pushw
push
dec
popa
hlt
jle
mov
add
mov
movb
sbb
popf
dec
cltd
dec
pop
shrl
mov
cmp
push
loopne
xor
adc
or
jno
adc
cs
int3
ja
lcall
mov
mov
fbld
sbb
add
mov
or
cli
fwait
push
add
push
mov
repnz
xchg
je
pusha
jp
adc
mov
dec
add
shll
xlat
xor
rolb
cmpsl
rclb
adc
aad
insl
cmpsb
or
adc
sbb
insl
sub
mov
imul
push
outsl
ja
or
adc
xchg
add
lds
jne
mov
push
sub
mov
or
cwtl
inc
mov
mov
mov
popf
lret
outsb
xchg
loopne
lock
fisttpll
adc
pop
repnz
sub
shl
mov
insb
ja
mov
mov
xor
add
xchg
mov
lret
repnz
mov
pop
mov
dec
test
inc
lcall
jge
out
sarl
out
jb
pop
or
insb
jae
mov
test
mov
xlat
into
aas
addr16
add
pop
cli
je
bound
iret
aaa
out
sbb
lcall
cmpsl
mov
push
adc
pop
jmp
aam
add
popa
and
dec
pop
pop
mov
sub
nop
test
mov
mov
lret
aad
mov
mov
inc
nop
mov
bound
push
test
js
stos
ret
jecxz
push
cmp
in
jo
fidivs
in
cli
mov
adc
lret
es
push
test
lcall
jno
or
stos
sub
sbb
fldenv
ret
cli
xchg
popa
mov
out
inc
push
jge
stos
sbb
sarl
add
mov
mov
stos
repnz
clc
or
insl
imul
pop
sbb
xchg
cmc
push
movsl
cmpsb
cmpsl
jmp
fistpll
sbb
sbb
pop
aas
icebp
repz
fmuls
xor
or
imul
sti
pop
fmul
xchg
xchg
push
lcall
jbe
xlat
mov
mov
cmp
fsubs
jbe
sub
lea
mov
push
push
aam
ret
xchg
call
xor
leave
jg
rcl
in
pusha
push
jge
adc
adcl
push
add
sahf
xor
daa
test
mov
dec
mov
sub
cmp
mov
jp
out
cmp
dec
pop
jp
pop
cs
xor
jg
sahf
and
lahf
jno
addr16
rclb
jne
push
ss
pop
xchg
xchg
fwait
decb
jo
xchg
xor
push
lea
mov
movsb
inc
lahf
call
mov
test
pop
cmp
xchg
and
push
mov
dec
loop
cmpsb
inc
adc
push
or
mov
push
xor
stc
mov
cmp
pop
sbb
sbb
ss
rcll
das
dec
aaa
push
cwtl
mov
xchg
fnstenv
call
pmullw
pusha
popf
ret
pusha
xchg
aas
xor
jae
cmp
in
inc
adc
adc
incb
loopne
hlt
jl
adc
push
sbb
lods
jmp
ja
stc
pop
push
inc
sub
nop
dec
lret
mov
test
sub
inc
mov
add
jno
push
mov
cld
jbe
and
push
lcall
movsb
inc
repnz
xchg
adc
hlt
mov
aaa
mov
dec
xchg
mov
mov
jecxz
inc
icebp
cmp
push
cmpb
shl
outsb
xchg
xchg
sub
call
jle
or
jnp
lock
ret
faddl
mov
fisttps
push
mov
clc
jmp
pop
clc
lahf
aad
dec
fs
sahf
nop
cltd
leave
jl
mov
mov
or
ja
mov
loopne
stc
fdivr
retw
pushf
xchg
adc
hlt
inc
movsb
cmp
dec
lds
mov
inc
movsl
push
stos
dec
cmp
scas
ds
jae
ss
fwait
mov
shlb
push
stos
test
adcl
pop
push
jno
jo
inc
jle
push
mov
jne
sub
mov
push
jo
xor
and
sarb
in
cltd
in
fiadds
addb
jmp
cmpsl
scas
rcr
lods
cmp
adc
adc
aam
pop
popaw
mov
inc
mov
and
ja
enter
pop
and
dec
sbb
subl
insl
push
sbb
je
stos
mov
dec
cmp
leave
dec
xor
shlb
aam
push
imul
cmpsb
inc
pop
aas
pop
imul
xor
add
repnz
rorl
mov
jb
daa
push
sbb
movsl
and
mov
xor
aad
jmp
xor
pop
test
pop
inc
xchg
mov
cmp
mov
andl
mov
xchg
push
mov
and
in
scas
cltd
outsb
push
dec
dec
lret
imul
jle
out
dec
cmc
aam
mov
sbb
sbb
pop
lods
imul
adc
pop
daa
lock
xlat
and
mov
sub
repz
jo
dec
daa
rcrl
test
jns
jnp
pop
mov
sub
add
iret
inc
mov
dec
fstpl
shll
pop
test
or
jbe
jg
sub
xor
in
ss
mov
rolb
inc
fisubrs
ret
setae
outsl
aas
aas
pop
mov
xchg
inc
fwait
pop
int
cltd
xchg
aaa
das
adc
and
test
add
dec
ds
repz
sbb
aas
mov
fwait
mov
inc
in
loop
inc
mov
into
push
push
cmp
lea
mov
adc
adc
jne
inc
jbe
xchg
rcrb
dec
fcmovnu
add
mov
push
dec
scas
popf
jno
not
cmp
loop
pop
sbb
lods
test
push
push
sbb
mov
lods
and
jb
pop
loope
ret
xor
add
push
sbb
and
fsts
fcoml
dec
pushf
subl
push
sarl
xor
insl
popl
cmpsb
dec
pop
mov
addb
in
inc
sbb
fwait
jae
pop
jl
add
add
add
icebp
outsl
cmp
mov
mov
icebp
mov
pop
repz
icebp
lock
ficoms
addl
sti
jno
mov
inc
outsl
pop
mov
xchg
push
pop
jo
dec
pop
add
cmpsb
sti
adc
jo
and
shld
and
jne
cmpsb
push
push
in
pop
leave
dec
jbe
mov
and
or
fiaddl
mov
fidivs
xchg
lock
js
ret
cmp
jl
std
aad
mov
test
sub
sbb
push
stos
mov
adcl
dec
jle
cmp
xchg
and
nop
pop
aas
out
lahf
jg
lock
sbb
ja
sarl
jnp
or
dec
js
or
adc
std
fxch
out
loopne
sub
repz
pop
mov
bound
and
adc
push
ret
jo
mov
lcall
aaa
pop
lock
rol
sti
dec
jb
mov
xor
aaa
push
sahf
mov
out
xchg
clc
frstor
cmp
pand
xor
cld
scas
xchg
std
xor
mov
test
inc
int3
mov
orb
cs
sbb
push
or
aam
pop
cld
adc
sbb
jg
sahf
or
rolb
sbb
mov
push
cmp
inc
pop
stc
cmp
mov
scas
mov
test
adc
add
stos
out
mov
idivl
icebp
clc
jecxz
pop
add
orb
jl
mov
mov
outsl
cwtl
and
ja
fimull
adc
or
adc
cmpsl
in
lahf
cli
xor
mov
and
movsl
and
hlt
pop
and
rorl
mov
iret
outsb
sbb
xchg
xor
aas
test
mov
icebp
lret
cli
js
fstpt
sbb
dec
jne
repnz
pop
in
add
pop
popf
push
jg
int
mov
mov
std
movsl
ja
sbbb
les
pop
mov
fisubs
sub
insl
es
pop
sub
scas
mov
mov
push
pop
and
jg
pushf
addr16
mov
leave
mov
out
clc
dec
xchg
das
jecxz
pop
inc
call
mov
in
in
jmp
xchg
jge
xor
loopne
xor
jbe
stc
xor
aad
mov
dec
gs
repnz
adc
mov
mov
ja
push
daa
xchg
mov
sub
inc
sarl
jecxz
mov
mov
mov
sub
or
push
rep
loope
clc
test
cmpsl
cmp
and
ret
lcall
addr16
rorl
ss
push
sub
add
cmp
in
inc
jp
xor
adc
int
inc
adc
cmp
adc
jnp
xor
out
lret
xlat
lret
fbstp
sbb
mov
outsb
je
fstpl
ds
sub
jp
frstor
sbb
xchg
mov
stc
add
out
pop
mov
jns
int3
stc
pop
xor
int3
idiv
push
lds
in
out
shlb
out
xor
xlat
pop
push
xchg
rcrb
mov
in
dec
pop
cld
outsb
clc
or
sub
fs
jmp
jns
mov
pusha
loopne
dec
sbb
mov
stos
inc
jb
lock
roll
pusha
imul
mov
jnp
pop
pop
push
cld
sbbl
in
cld
push
xchg
data16
sbb
jo
or
xchg
rcrl
push
xor
sub
cmp
or
mov
sub
cmp
cli
pop
adc
push
mov
insb
pop
daa
js
jp
pop
orb
pop
sub
cmpsl
je
rdtsc
sbb
xchg
lahf
fistpll
dec
sti
mov
sti
pop
sub
sub
popf
or
mov
push
ficompl
push
push
jecxz
cwtl
push
sub
add
and
xchg
cmp
shll
adc
je
sub
adc
push
lret
xor
xchg
lock
stos
and
fnstcw
mov
add
arpl
bound
or
cmpsl
mov
subb
sub
cmp
mov
cwtl
pop
xchg
dec
test
imul
mov
sbb
nop
mov
aad
aaa
aas
pop
call
fcmovbe
push
xchg
jl
cld
into
cmp
sbb
in
cmpsl
dec
fwait
jb
xchg
jmp
lcall
insb
in
dec
je
rolb
mov
dec
jecxz
mov
gs
mov
mov
mul
and
out
and
inc
mov
loope
jl
and
loopne
and
sbb
and
fs
mov
int
sub
sahf
add
cmp
nop
iret
repz
mov
sahf
mov
insl
leave
std
xor
cmpsl
hlt
jmp
pop
lcall
fimull
fadds
cmp
push
xor
push
pop
loop
push
and
lea
aas
dec
scas
fisubs
jp
std
into
push
loopne
xchg
cmpsb
push
adcb
inc
fsts
pusha
imul
enter
sti
out
sub
clc
inc
pop
cmp
xchg
cmp
aas
ljmp
nop
movsl
insl
lcall
inc
fwait
inc
dec
jge
inc
mov
test
jl
pusha
insb
bound
mov
in
cwtl
out
stc
inc
add
adc
jb
adc
stc
iret
in
push
pop
mov
pop
sbb
enter
outsl
jl
adc
push
cmp
or
mov
jnp
and
jge
sbb
aam
in
shrl
mov
cld
rcrl
fdivrs
je
inc
lcall
jnp
out
enter
outsb
notl
aad
testl
mov
mov
aad
inc
xchg
inc
and
mov
inc
iret
pop
jmp
scas
mov
mov
and
cltd
lea
into
xchg
add
jl
aam
cmpsb
xor
lock
mov
or
subl
xor
fstpt
push
fnsave
cmp
xlat
inc
lods
push
aaa
rcrl
out
iret
xchg
out
aam
int
xchg
or
leave
cmp
dec
adc
adc
sti
mov
sub
lahf
stos
mov
leave
ja
jns
inc
mov
lret
xchg
push
and
dec
pop
mov
enter
ret
and
enter
mov
pop
popa
data16
stos
roll
jecxz
and
inc
loope
or
push
and
sub
fimuls
sub
std
dec
mov
imul
push
pop
lret
xchg
mov
cmp
mov
bound
cwtl
xor
mov
stos
push
call
inc
std
test
rcrb
xchg
push
shrb
cmp
mov
pop
jge
push
xor
fimuls
inc
lret
test
lahf
push
sub
subb
or
and
mov
mov
ljmp
cwtl
test
push
mov
lret
inc
call
sbb
shlb
mov
jle
scas
icebp
sbb
add
mov
jnp
push
jb
or
leave
stos
cmpl
shrl
rcrl
das
movsl
sub
call
inc
nop
adc
mul
ret
xor
mov
idivb
jb
addr16
aam
cs
aam
les
xor
push
dec
hlt
lods
xchg
cmpsl
mov
stos
jecxz
daa
mov
cmp
inc
mov
arpl
cmp
pop
daa
xor
repz
cmp
push
subb
jg
mov
xchg
jmp
jae
inc
mov
pminub
and
pop
loop
int3
cmpsb
into
pop
test
adc
cwtl
inc
sub
rolb
xor
dec
pop
loope
dec
leave
in
mov
pop
pop
out
adc
sti
and
xor
cmp
aaa
xchg
mov
aaa
adc
dec
jns
mov
ds
icebp
dec
dec
push
pop
sub
lret
iret
std
jecxz
daa
sub
cltd
or
adc
std
ret
sub
mov
mov
es
cmp
pop
daa
fdivrp
dec
stc
mov
pop
mov
add
loope
pop
dec
inc
fimull
jge
rolb
addl
rorb
jnp
xor
aaa
mov
sub
inc
push
mov
jb
inc
pop
fstps
dec
jbe
xchg
lcall
in
imul
xchg
negl
int
and
lds
push
call
jnp
cs
outsb
js
xchg
xchg
das
push
pop
mov
mov
shll
inc
jo
test
mov
push
sub
leave
insl
push
or
and
jne
pop
mov
imul
mov
push
cmc
push
call
js
add
jmp
mov
dec
mull
or
in
in
inc
lret
out
add
pop
daa
in
sub
xchg
sti
iret
inc
inc
imul
bound
xlat
pop
xor
pop
or
push
and
addl
xchg
pushf
mov
test
and
movsb
addr16
pop
or
mov
mov
popf
imul
int
sub
sbb
scas
pop
ret
shr
jnp
sub
pop
jb
call
lds
pop
cs
mov
ret
pop
pop
rorl
ret
cmp
pop
fcomps
mov
push
dec
jae
out
jp
push
out
scas
adc
imul
push
into
mov
decl
push
fs
in
stc
push
jl
movzwl
sti
xchg
outsl
pop
mov
pusha
add
mov
pop
test
dec
jp
mov
adc
daa
jp
inc
loope
in
adc
cmpsl
daa
inc
push
mov
sub
movsl
fsubl
iret
ljmp
mov
jns
mov
mov
push
mov
int
lahf
mov
dec
adc
scas
mov
sbb
add
pop
notl
mov
aas
or
addr16
or
leave
mov
js
fdivrs
pop
lods
ds
sbb
and
dec
dec
sbb
xor
in
adc
mov
and
jmp
icebp
jge
add
jg
cs
shrb
or
loope
adc
bound
call
call
push
ret
cmp
cmpsb
stos
sar
sbb
sub
inc
mov
dec
push
ds
arpl
sbb
dec
movsl
and
les
add
xadd
mov
xor
xor
sbb
adc
or
xlat
repz
int3
add
cmp
enter
mov
ss
jbe
push
cmpsb
jae
mov
inc
out
test
rorl
jecxz
jp
pop
mov
mov
sub
mov
add
stc
pop
in
push
inc
sti
ret
jecxz
push
gs
adc
test
add
jmp
mov
sarb
lcall
dec
aaa
aad
fistpl
and
outsb
fldl
sbb
mov
and
aas
cld
sti
pop
jb
test
add
pop
negl
and
jge
adc
pusha
movsl
push
loop
mov
pop
jmp
sub
push
xchg
jmp
cmpsl
test
movsb
gs
push
mov
sti
mov
mov
push
clc
mov
aam
fstpl
movsl
leave
pop
and
push
divb
stos
ret
pop
in
and
push
int
jecxz
ret
pop
jle
mov
mov
out
cmpsl
cwtl
inc
lret
in
aas
push
xor
mov
and
out
adc
je
movb
push
enter
std
iret
xor
out
sbb
ss
out
xchg
lret
push
and
xchg
mov
add
ss
fcoml
fcmovb
data16
adc
push
pop
mov
adc
lahf
test
jecxz
lea
mov
xor
cmp
and
clc
lods
mov
leave
andl
push
sbb
loop
and
sti
push
xchg
sbbb
push
out
sbb
mov
jmp
movsl
loope
sarl
cs
inc
adc
fisubs
imul
imul
xor
pusha
mov
lods
or
ret
lds
mov
mov
ficomps
aaa
xlat
jns
sarl
sub
pop
inc
pop
jnp
jecxz
mov
mov
lret
pop
mov
stos
or
gs
mov
in
pop
test
xlat
stos
mov
sub
sbb
in
xor
daa
xchg
insb
lods
ja
les
dec
insl
fldz
and
mov
push
push
or
js
and
inc
mov
or
push
sub
lods
and
addr16
leave
jnp
and
inc
xchg
ljmp
dec
repz
cmc
es
jno
popf
movsb
aam
call
dec
fdivrs
rcrl
dec
cmp
fdivrl
aaa
out
sub
push
mov
repnz
push
xchg
fdivrs
addb
loope
mov
pop
push
ror
daa
js
adc
popf
aad
pop
jo
xchg
aad
repz
enter
mov
int
outsb
push
int3
int
cwtl
sti
pop
pop
mov
icebp
xchg
ret
add
dec
lret
add
cltd
fwait
sub
sbb
jg
cmpl
push
mov
mov
xor
cmpsb
scas
out
int3
or
xchg
imul
clc
push
push
sbb
cmp
scas
push
push
sbb
fcmovnbe
push
cwtl
sub
xor
sbb
ret
sbb
dec
loop
lods
lock
mov
inc
lods
jne
aas
mov
adc
cmpsl
es
enter
data16
mov
movsb
fimull
inc
imul
jl
cmp
test
lcall
push
std
sti
shl
add
add
insl
das
or
mov
push
lahf
xlat
inc
cwtl
dec
push
ss
pop
jg
sub
and
lcall
lea
fs
mov
les
cmpsb
movsl
jb
in
icebp
dec
pop
fisttpll
xor
push
stos
cmp
inc
out
or
aam
pop
clc
in
pop
ljmp
jle
out
jo
popf
push
test
push
fisttps
ljmp
sub
mov
pop
addb
cmc
jg
insb
add
push
outsl
repz
xchg
cmp
cmc
mov
loope
nop
popf
shl
dec
in
scas
inc
mov
pop
add
and
push
es
push
mov
and
mov
jl
loop
pop
popl
sbb
decb
jo
ja
or
lret
and
adc
jle
lock
incl
addb
cmpsb
dec
dec
nop
xrelease
leave
fidivrs
xlat
es
into
sbb
pop
mov
mov
xchg
pop
inc
loop
jne
es
adc
pop
and
sub
mov
sub
dec
mov
cmc
mov
sub
enter
push
sub
cmpsl
push
dec
pusha
sub
sbb
mov
sub
nop
cmpsb
pusha
pop
fs
in
sbb
bnd
fsubl
inc
xchg
dec
ds
orl
dec
dec
popa
jge
xchg
daa
aaa
pop
push
mov
enter
and
sub
scas
cmp
xchg
jns
and
outsb
jecxz
pop
cmpsb
pushf
push
sbb
sbb
mov
scas
das
sbb
mov
xchg
mov
movsl
rorl
repnz
cmp
fidivl
imul
pop
mov
jns
push
pop
and
mov
and
pop
add
and
dec
test
cmp
fisttpll
mov
pop
xor
add
mov
test
jb
adc
jns
addr16
rcrb
lock
pusha
mov
ja
lcall
or
pop
push
imul
imul
xchg
shl
fmuls
mov
inc
or
mov
pop
xchg
imul
sahf
cmp
mov
cld
mov
out
bound
cmp
data16
cli
shl
lret
pop
cmp
xchg
jns
mov
xchg
dec
popf
xor
and
icebp
adc
imul
js
jecxz
inc
cmp
cld
xor
mov
imul
xchg
mov
jae
adc
out
pop
push
outsb
arpl
ret
dec
aam
push
push
fisttpl
ret
loopne,pt
mov
sbb
adc
or
in
push
mov
jo
and
jnp
lret
lret
sbb
inc
fwait
cmpsb
pop
jge
lret
test
mov
hlt
cltd
test
stc
imul
fidivl
das
jecxz
push
cwtl
pop
fstl
mov
inc
sub
xchg
add
scas
xchg
xchg
mov
mov
xchg
scas
into
or
rorl
test
stos
cltd
jl
aas
jle
rorb
in
mov
jmp
stos
pop
bound
jnp
loop
xchg
cmpsl
and
dec
cs
enter
sbb
testl
push
jae
pop
mov
mov
mov
cltd
jb
pop
jp
mov
pushl
cmp
mov
pop
pop
into
mov
mov
in
or
stc
xor
sub
sub
mov
inc
pop
fistpll
adc
add
mov
test
dec
movsl
aam
fsubrp
lea
sbb
cld
jecxz
ja
clc
mov
jge
sbb
push
sbb
jns
leave
dec
jg
fstl
mov
mov
and
jae,pt
push
adc
in
add
sbb
stc
sub
adc
fadds
addl
data16
mov
pop
cmpsb
pop
divl
imul
xchg
sbb
in
push
sbb
xchg
inc
pushf
xor
sub
sti
cmp
xorl
jo
mov
lret
lock
xchg
call
add
movsb
xor
adc
mov
adc
push
aam
ja
aam
ds
cmp
ret
lock
movsb
xchg
stos
mov
hlt
sbb
mov
jge
dec
and
jns
std
sbb
fcoms
pop
outsl
cmpsl
push
dec
lds
jecxz
in
push
jmp
xchg
jle
mov
fistps
mov
xor
push
mov
icebp
mov
test
mov
mov
repnz
and
fxch
je
mov
pusha
mov
sub
js
or
shrl
xchg
or
pop
mov
dec
test
dec
sub
pop
stc
adc
andb
orl
data16
sbb
dec
mov
push
and
dec
xorl
aaa
les
push
call
and
ja
in
mov
cmp
rcrb
inc
pop
test
mov
out
ret
pop
mov
xor
cmc
add
adc
push
out
lcall
jg
or
sub
aad
dec
insb
frstor
and
unpckhps
dec
and
mov
lods
push
or
cmp
inc
xchg
pop
mov
stc
mov
adc
js
push
mov
insl
xchg
stos
daa
test
sbbb
mov
sbb
xorl
bound
pusha
cwtl
lahf
xchg
inc
push
adc
stos
or
and
ljmp
push
jb
adc
inc
pop
es
jno
cmc
lods
dec
xor
xlat
popa
xchg
fidivl
into
popa
sub
or
imul
mov
cmp
xchg
insb
test
xlat
out
adc
les
rcll
mov
or
sti
int
xchg
xor
jp
sbb
jle
insb
subb
jo
pop
popa
inc
dec
cmp
pop
xor
cmp
mov
xorl
dec
mov
scas
data16
pop
pop
gs
lods
js
icebp
lea
pop
call
jb
or
push
jns
addl
mov
cmpsl
cs
std
pop
jl
scas
pop
mov
notl
pop
or
mov
sbb
mov
inc
mov
dec
dec
into
mov
ljmp
sahf
das
jo
xor
push
inc
sahf
xchg
lahf
out
ret
and
ja
mov
sub
adc
es
aas
dec
repz
mov
movl
sub
movsl
cmpsl
fistps
in
ret
ficomps
aad
adc
stc
icebp
jo
adc
gs
xchg
xchg
xchg
mov
mov
xchg
mov
pusha
in
int3
sub
cli
testb
cwtl
bound
pop
jg
cmp
xor
scas
lret
pop
mov
test
add
addr16
xor
cmpsl
jg
lds
insl
ret
dec
in
out
xchg
imul
push
add
movsb
push
lret
mov
ss
hlt
mov
mov
test
pop
mov
mov
mov
aad
fadds
das
add
orl
cld
mov
inc
jp
pusha
sub
fmuls
pop
scas
jns
repnz
data16
popa
aam
push
or
aad
pop
shlb
rclb
je
jl
and
mov
out
inc
orb
xchg
leave
inc
inc
aas
sbb
jle
jmp
movsl
pop
sbb
mov
jg
xor
ficoms
push
mov
out
out
push
cmp
insl
xchg
push
andb
out
in
pop
js
mov
sbb
pop
mov
outsl
sbb
cltd
aas
lahf
sbb
pop
pusha
ja
stos
cltd
lods
aad
mov
aaa
inc
mov
xor
push
cmpsl
dec
mov
cmp
stc
jp
pop
pushf
dec
lahf
movsb
mov
dec
movsl
mov
mov
jne
dec
icebp
popf
hlt
jl
and
mov
xchg
or
shlb
std
lods
inc
lds
es
push
sub
rcrb
inc
mov
out
cmpsb
jmp
mov
rcll
repz
sbb
nop
xlat
lret
pop
popa
cmp
push
shlb
pusha
push
pop
xlat
push
adc
out
dec
jbe
xor
pop
dec
mov
in
inc
in
pop
cli
xchg
jae
add
rorl
and
fidivs
pop
jb
inc
inc
pop
push
js
arpl
mov
push
out
mov
jg
test
dec
les
loope
xchg
lock
push
jns
mov
sub
imul
jnp
jecxz
jmp
and
cmp
es
mov
jmp
jg
mov
ret
ss
sub
mov
push
xchg
push
inc
push
int3
fbstp
out
jmp
adc
mov
sbb
movsl
test
mov
inc
dec
mov
sub
orb
inc
adc
cmp
fstpt
adc
mov
loope
sub
cld
rcl
mov
xor
mov
cwtl
lods
inc
cmpsl
cmp
xor
test
jge
xchg
or
jbe
cs
scas
sub
pop
jmp
adc
ja
subl
shl
xor
xchg
test
or
or
arpl
aam
nop
push
mov
mov
aad
ds
testl
iret
jb
cltd
ljmp
cwtl
jg
xor
and
fs
out
and
pusha
mov
es
jle
xchg
in
out
loopne
call
repz
cmc
pop
sahf
out
inc
les
sarb
in
hlt
pop
cmpsl
pop
fwait
mov
fidivrs
mov
cmp
mov
lock
lret
xchg
ja
pop
and
insl
test
push
in
in
push
mov
xchg
adc
pcmpeqw
xchg
mov
jnp
push
fdivl
inc
push
in
ss
int
pop
adc
mov
pop
xorl
add
inc
add
fs
testb
mov
in
push
jp
lock
pop
les
cmp
xchg
xchg
push
je
push
adc
int
int
xlat
jns
in
cs
cltd
mov
xor
xchg
sarl
fistl
clc
jns
movsb
movsl
inc
push
xor
adc
aas
xchg
inc
cmp
pop
xchg
ds
es
mov
mov
dec
jnp
xchg
add
dec
xor
mov
test
aaa
mov
fwait
rcl
out
scas
push
ljmp
dec
es
in
inc
dec
inc
sbb
mov
cltd
repnz
in
pop
fadds
pop
sbb
add
insl
jbe
xor
jbe
js,pt
pop
hlt
sbb
mov
cmp
les
aam
lret
cmp
jae
or
test
in
out
push
mov
fstl
aad
mov
push
mov
dec
subl
ss
sbb
ficompl
cs
fiadds
jmp
inc
cmpsl
sub
vmovss
jecxz
sub
packsswb
lahf
jo
mov
pop
ficompl
push
mov
jns
inc
xchg
test
and
lods
jge
in
out
xchg
fcmovne
sbb
jle
ljmp
sub
arpl
icebp
cltd
addr16
jnp
hlt
lods
jg
jno
call
push
or
les
aaa
mov
mov
sbb
mov
dec
cmp
pop
push
mov
dec
aam
into
mov
lret
aam
outsb
mov
icebp
loope
sahf
pop
pop
in
xor
sbb
fsub
into
popf
sub
and
outsb
andb
loop
and
or
and
cmpsl
fisubrs
jg
fildll
movsb
mov
cltd
roll
xchg
testb
scas
dec
in
sbbb
sbbb
fldcw
jmp
test
sbb
jns
lock
xor
xor
lret
push
clc
lock
mov
mov
xchg
push
xchg
mov
cmp
push
sbb
xor
sub
dec
xchg
fidivrl
fcmovnu
mov
jg
inc
ds
ja
xchg
mov
test
jae
scas
daa
cmpsl
imul
and
stc
jecxz
inc
icebp
sbb
xor
test
loop
pop
jecxz
test
dec
pop
inc
lds
repz
inc
xchg
int3
xor
inc
xchg
shl
mov
jle
das
mov
aad
clc
cwtl
pop
cmp
add
push
adc
arpl
sub
outsl
loope
and
mov
pop
out
mov
popf
sbb
mov
ss
hlt
push
ljmp
lds
jbe
pop
outsb
fs
jmp
mov
mov
jb
lods
jbe
fstps
adcb
and
data16
push
mov
xlat
xchg
lcall
leave
jmp
pop
dec
pop
fistpl
push
sbb
xor
leave
lock
and
push
mov
lret
jmp
mov
int3
jne
xor
cmc
and
fs
fnstenv
inc
mov
lock
cmc
imul
xchg
roll
mov
loopne
gs
push
and
call
es
out
inc
cli
inc
in
int
push
es
out
fisttpl
dec
pop
jle
negl
jle
add
and
lods
stc
xor
inc
and
pop
xor
mov
test
es
dec
movsl
mov
xor
or
outsl
movsl
fimuls
pusha
cmp
add
ds
iret
mov
cli
ret
adc
add
stos
ds
lods
adc
in
shrb
cmpsl
into
mov
mov
aas
mov
xorb
cmp
iret
xor
into
adc
adc
repnz
cltd
adc
arpl
xchg
pop
or
mov
fisubl
mov
cmpsb
das
jb
push
lret
jbe
and
mov
in
xchg
cmp
xorb
mov
push
add
sbb
push
ret
jl
jmp
jno
cmp
jo
cmp
icebp
call
shlb
clc
dec
mov
mov
decb
pop
popa
imul
pop
ret
pop
lods
inc
or
shlb
repnz
mov
mov
ljmp
je
and
cmp
or
jne
les
jnp
jp
daa
loop
sarb
lds
pop
pop
test
sub
scas
aad
or
in
push
push
lock
daa
aam
pusha
inc
jmp
mov
push
add
mov
cltd
push
arpl
push
mov
xor
jg
fwait
push
aas
adc
rcr
outsl
or
movsb
insl
xchg
mov
xchg
imul
adc
push
mov
sub
dec
ret
je
sbb
and
repnz
dec
testb
xor
test
xor
pushf
xchg
fwait
repz
cmp
rcrb
jae
dec
mov
dec
rcll
sbb
sarl
in
rclb
lret
roll
enter
and
stos
jle
insl
jo
pop
xchg
push
es
scas
mov
out
das
stc
or
sahf
sbb
cmc
loope
lods
inc
fcmovnb
mov
insl
cmp
inc
iret
out
repz
lock
cmp
imul
jg
cmp
stos
mov
mov
cmp
loopne
call
dec
pop
xor
pop
jge
lret
mov
xlat
test
pop
pop
inc
dec
fstl
in
and
mov
cld
jp
in
push
jge
mov
inc
movl
sub
clc
movsb
inc
add
xor
push
mov
faddp
jmp
aaa
dec
pop
in
push
jbe
fs
jg
dec
imul
and
xor
fs
jno
and
push
inc
and
into
loop
cmc
adc
xor
popa
dec
xorb
xchg
test
fdivs
inc
dec
inc
testl
push
xchg
sub
scas
ficomps
cmp
adc
mov
dec
and
repz
mov
push
mov
xchg
insl
faddl
decl
insb
inc
inc
add
mov
pop
fucomip
cwtl
mov
addr16
lods
or
xchg
jecxz
cmp
jecxz
jge
and
push
fldt
xchg
push
push
or
mov
aad
and
or
mov
xchg
ja
sub
or
push
leave
lock
fcoml
mov
jmp
push
les
lods
ljmp
add
cmp
mov
adc
lds
andl
call
jecxz
ret
sbb
add
int3
sub
orb
fldl
clc
fninit
lods
xor
xor
xchg
ds
xor
pop
mov
mov
push
push
cmpsb
push
xor
mov
fdiv
jmp
add
gs
pushf
pop
sarl
aam
notl
cmp
sti
data16
icebp
test
mov
xchg
imul
xchg
adc
aam
std
jae
cbtw
mov
xchg
jo
mov
lea
cmpsb
push
add
aas
cmpsb
imul
jno
popf
fldenv
adc
jb
sbb
adc
xlat
inc
mov
ljmp
cs
xlat
or
lret
or
scas
xchg
sbb
lock
sbb
mov
mov
mov
mov
test
ss
jecxz
fmulp
add
mov
rcll
pushf
out
mov
push
stos
aam
divb
pushf
mov
ret
or
les
es
fistpl
test
mov
fsub
push
and
ret
cltd
jbe
shll
fidivl
out
xor
in
add
xchg
jle
add
int3
mov
incb
mov
xchg
mov
or
push
sti
sub
push
lock
adc
fistl
sbb
or
ja
subb
popa
gs
ss
ds
lret
mov
mov
lock
mov
mov
imul
shll
aad
push
movsb
sbb
adc
add
movsl
adc
imul
cmp
mov
lods
rorl
cmpsl
mov
sbb
xchg
pop
aas
sbb
mov
pop
insl
xor
imul
mov
inc
push
je
repz
sahf
idiv
cmp
movsb
in
pop
or
mov
sub
add
and
lea
xor
std
cwtl
in
xchg
add
add
mov
adc
or
dec
lret
aas
stos
imul
pop
sbb
mov
or
add
fildl
stos
jb
lods
sbb
mov
outsl
popa
xchg
pop
scas
shlb
lret
dec
arpl
lds
fdivs
in
js
and
sub
out
scas
inc
fidivrs
sub
hlt
popa
sbb
mov
cmp
mov
and
or
xchg
sbb
jp
inc
aad
mov
mov
xor
jno
aad
ss
loope
add
mov
pushf
out
into
and
push
shlb
fnstenv
adc
je
repnz
roll
dec
push
nop
cwtl
and
divb
int
pop
sbb
shlb
push
xchg
lcall
test
xchg
insb
sbb
loope
orl
pop
mov
int
cltd
fs
roll
inc
sub
in
mov
add
mov
out
push
inc
jge
mov
xchg
mov
mov
or
mov
shrb
dec
out
cmp
aad
pushf
inc
fnstenv
dec
xchg
cmp
stc
test
mov
ljmp
insb
inc
push
dec
mov
add
shll
xchg
pop
or
popa
in
cmpsl
xor
push
into
pop
and
jne
jmp
mov
imul
addb
fs
pop
gs
or
insb
sbb
push
xchg
jns
cmc
mov
add
push
dec
cld
cmpsb
push
mov
jb
xchg
je
push
popf
push
fisttps
pop
outsl
inc
jg
or
cmp
fbld
ret
imul
sbb
out
lahf
ds
pushf
push
and
push
adc
cli
push
mov
pop
pop
pop
and
je
inc
or
andps
jb
jne
mov
cltd
push
pusha
jns
pushf
addr16
daa
fdivrl
xor
add
pushf
dec
repz
fwait
das
mov
loopne
add
scas
xor
and
push
sti
push
ror
in
lcall
adc
fisttps
int3
sbb
mov
sbb
sbb
and
mulb
pop
and
je
or
rorl
or
in
xor
xchg
mov
test
leave
xchg
cltd
inc
nop
jo
rcl
pusha
lret
ss
push
in
test
nop
fldcw
addb
mull
and
test
js
dec
enter
cmp
pusha
fnstsw
adc
xor
loopne
dec
adc
cli
adc
xor
icebp
jecxz
jl
or
pop
fsubrs
imul
push
add
aaa
inc
ja
adc
mov
or
jnp
mov
sub
push
insb
sarb
dec
sbb
std
es
dec
adc
adc
pushf
cwtl
pop
push
dec
mov
ret
mov
and
sbb
xor
lcall
xor
and
dec
mov
out
mov
in
neg
sarb
adc
subl
inc
out
inc
repnz
loop
movsl
mov
fsubp
pop
xlat
pop
ficomps
mov
addr16
shrb
and
dec
les
fldcw
aas
cltd
out
or
clc
sbb
sar
inc
mov
div
and
mov
mov
mov
iret
lcall
mov
jecxz
pop
fnstenv
cwtl
out
rcr
outsl
xor
sbb
int3
mov
jl
mov
push
xor
jl
sti
mov
test
inc
and
push
dec
xchg
or
sub
pop
mov
cld
rorl
mov
sahf
test
in
bound
and
sbb
ss
cmp
mov
int
mov
mov
fs
movsl
jle
sti
out
mov
out
daa
or
sub
gs
lock
pop
enter
pusha
pop
push
jbe
shrl
nop
and
lods
test
fcmovu
iret
scas
movsl
cmp
cmp
cld
lods
pop
push
cmp
mov
xor
ljmp
pop
popf
ss
inc
cmc
xchg
jl
testl
mov
inc
push
mov
jae
pop
inc
jmp
push
xchg
mov
jae
fstp
orl
out
push
adc
lock
adc
xchg
inc
mov
jge
push
jo
fcoms
inc
inc
inc
ret
mov
cmp
pop
add
and
add
and
loopne
les
es
jnp
ficoml
int3
int
into
lret
xchg
pop
pusha
and
mov
idivl
rol
or
push
or
pop
mov
jmp
adc
sbb
and
jmp
push
dec
cmc
daa
sub
push
in
test
xor
push
pushf
sbb
leave
adc
aam
fistl
sub
les
stc
mov
dec
jo
test
add
cmc
stos
mov
lods
cwtl
cmpsl
mov
insl
inc
mov
or
or
das
jbe
testl
loope
add
imulb
andl
jecxz
aam
bnd
mov
repz
mov
lds
add
out
bound
mov
imulb
out
dec
movsl
in
ret
lret
push
out
push
int3
pop
les
and
xor
adc
pop
mov
test
pop
adc
xchg
pop
loop
lea
jl
mov
enter
call
lods
fldcw
xor
subb
push
loope
push
mov
adc
hlt
outsl
pop
imul
in
and
sub
in
insl
add
push
lods
ret
mov
add
int
pop
push
and
in
fbstp
push
pop
mov
outsb
scas
into
inc
fcmovnbe
pop
mov
add
xchg
jns
js
jno
pusha
bound
outsl
frstpm(287
adc
iret
and
adc
leave
lock
ficomps
sti
lret
adc
cli
out
fcoms
pop
popa
xchg
in
push
mov
mov
mov
jl
mov
and
clc
push
fiaddl
flds
pop
sbb
bound
packssdw
mov
push
lea
xchg
test
mov
out
inc
push
popf
jp
scas
lock
jb
mov
mov
cltd
pushf
repz
xchg
imul
cmpsl
iret
out
int3
mov
leave
mov
push
sti
jnp
adc
sbb
mov
and
xchg
test
inc
or
sbb
stos
hlt
pop
pop
imul
aaa
sahf
adc
out
es
jp
adc
imul
adc
out
mov
cltd
repz
push
mov
xorl
mov
push
inc
out
jg
testb
mov
pusha
into
pop
fndisi(8087
in
xor
movb
sub
in
jmp
xchg
cmp
xchg
jbe
iret
and
test
and
xchg
xchg
pop
pop
lret
jge
lcall
out
fildl
aad
dec
insl
cmp
mov
sti
cwtl
ljmp
jns
jo
xor
in
pop
push
inc
adc
jle
pop
bound
jecxz
shl
dec
popf
mov
and
xor
or
out
xchg
hlt
cmc
ds
jne
mov
lcall
pop
fnsave
testl
test
sti
pop
mov
mov
push
mov
shll
sbb
cs
add
insl
pop
scas
and
adc
std
sti
loopne
xlat
cmp
clc
movsb
xorl
sbb
inc
daa
testb
sbb
sub
jecxz
or
imul
sbb
ret
mov
sub
adc
inc
sahf
jno
scas
ss
pop
pop
pop
lcall
cmpl
lds
gs
lods
mov
cmp
dec
cmp
mov
xchg
iret
imul
push
imul
pop
aad
sbb
dec
xor
pop
test
pop
cld
cmpsb
hlt
into
sarb
sti
shrl
iret
sahf
sub
ss
cmpb
popf
mov
cli
push
xchg
mov
leave
test
test
scas
notb
sub
addr16
sbb
icebp
cmp
or
jecxz
aad
ljmp
or
push
aas
out
sbb
movq
pop
sub
add
stos
fistpl
sahf
imul
into
sti
sub
shl
jae
add
insb
ret
sbb
js
movsb
xor
add
xchg
fwait
or
mov
lret
in
mov
gs
scas
lcall
cmp
mov
jmp
dec
inc
adc
jne
aaa
add
decb
pop
push
jecxz
or
mov
jo
inc
cmp
mov
jae
and
sbb
out
insb
jp
push
icebp
lods
loopne
sub
cmpsb
jbe
jg
sbb
xchg
ja
outsl
pop
hlt
mov
and
add
push
enter
inc
add
rcrl
mov
mov
fdivrl
loope
sub
adc
mov
imul
pop
mov
dec
shll
adc
les
and
arpl
cmp
shlb
dec
test
lods
jne
repz
inc
mov
repnz
pop
jecxz
ret
fs
in
rorl
adc
jge
aas
push
lahf
stos
rcr
xchg
cmp
fwait
cwtl
mov
ret
lret
popl
jle
dec
leave
pop
or
rcl
in
add
or
stos
mov
sub
mull
add
mov
dec
cmp
int
out
sar
sub
lods
pop
xchg
in
jecxz
push
shlb
mov
aas
roll
ss
xchg
stos
mov
shll
mov
jmp
fnstenv
dec
pop
push
pop
jg
mov
add
sbb
jmp
or
bound
push
push
iret
fwait
les
popf
test
adc
icebp
mov
stos
xchg
test
in
mov
notl
jb
cmp
sbb
ret
test
push
dec
sub
int3
pop
xor
fiadds
push
stos
mov
lcall
sub
inc
test
mov
xchg
shll
mov
xchg
jmp
movsl
inc
dec
pop
push
je
stc
push
iret
push
out
cld
mov
mov
in
enter
gs
ljmp
sahf
mov
arpl
sbb
cwtl
and
xor
loope
pop
mov
ret
xchg
inc
sub
cmp
or
pop
mov
pop
pop
jo
aam
dec
mov
jmp
mov
fisubrl
dec
fidivl
imul
std
lret
sbb
cmpsl
les
pushf
cmp
lods
mov
iret
and
mov
lret
icebp
cmp
mov
int3
inc
aam
push
dec
cmp
aaa
mov
mov
sti
jl
fimuls
jl
sbb
loop
scas
fs
mov
cmp
add
push
adc
repz
cld
es
mov
dec
fldln2
les
inc
or
dec
leave
and
insb
sbb
mov
nop
fidivs
jno
mov
jnp
jge
and
or
mov
ds
push
xor
cwtl
aas
xchg
pusha
push
or
les
nop
sbb
pop
andb
std
push
xchg
ficoml
dec
std
sbbl
pop
in
mov
push
repnz
jmp
std
or
and
in
imul
jne
push
or
mov
jae
push
in
fistps
mov
mov
dec
sbb
daa
sub
pop
aad
sahf
push
mov
adc
pop
rolb
jmp
rcl
loop
lcall
push
mov
jmp
faddl
cmpsl
add
insb
push
test
scas
dec
addr16
lret
ret
adc
mov
jno
adc
test
out
lea
testl
fiadds
pushf
movl
jge
aas
stc
push
inc
popf
ret
xchg
sbb
jle
and
pop
dec
bound
inc
popa
xlat
lock
test
pop
push
shll
in
mov
lret
push
mov
test
fnstsw
push
and
fistps
adc
xor
mov
out
jle
cmp
and
xchg
push
gs
fwait
call
mov
push
scas
xor
adc
dec
mov
push
gs
cmpsl
cli
mov
daa
pop
and
stos
shrl
scas
or
jecxz
popf
iret
xchg
push
outsb
outsl
or
or
mov
lahf
add
mov
fnstenv
cmpsl
push
cmp
mov
dec
scas
push
or
lret
test
imul
test
push
dec
mov
adc
mov
pop
push
out
pop
mov
ss
mov
xchg
xrelease
and
jno
and
xor
lahf
pop
push
adc
aas
ret
test
cmc
jns
cmp
ja
sahf
lret
outsl
xchg
pop
notb
mov
mov
test
test
add
push
sub
sub
lds
or
mov
shrl
mov
pop
ror
fdivrs
mov
cmp
cmp
jbe
xchg
aas
scas
addb
loope
scas
cwtl
mov
bound
push
adc
jp,pt
push
data16
mov
mov
dec
in
jnp
jge
jb
loope
dec
sbb
jns
dec
jne
sbb
mov
jg
icebp
mov
rolb
sub
shll
push
dec
popf
in
jnp
dec
popa
hlt
in
cld
push
cmpsl
jb
cmp
shlb
dec
inc
mov
push
inc
jg
movsl
dec
pop
sub
rcll
inc
cmp
adc
in
mov
out
fwait
insl
jb
xor
test
mov
xor
jmp
sub
dec
data16
jbe
rcl
xchg
nop
imul
cmp
push
jp
in
icebp
imul
or
mov
sahf
loopne
leave
rcrl
mov
xchg
leave
movsb
data16
test
gs
xchg
ljmp
mov
faddp
mov
jb
lods
push
loope
mov
lcall
or
add
inc
sbb
pop
call
sub
mov
mov
fs
stos
lcall
dec
fnsetpm(287
imul
jb
and
xor
mov
adc
xor
dec
mov
ds
idivl
lods
add
mov
insb
outsl
shrb
ret
hlt
add
fs
mov
jg
dec
cwtl
repz
cmpsb
pop
xchg
dec
and
xchg
idivl
push
mov
aas
test
add
fmul
xchg
cs
in
jmp
xlat
and
fsubrl
into
es
aas
iret
lock
add
xorl
xor
fnstenv
in
daa
push
mov
fimuls
xor
fwait
sbb
adc
aas
ret
xor
jecxz
cwtl
cmp
cs
mov
mov
scas
dec
xchg
dec
cmp
xor
stos
and
test
negl
push
jmp
test
jo
sti
push
test
das
sub
cli
mov
jne
jne
or
andnps
push
adc
jb
lock
mov
hlt
and
mov
and
stc
popa
add
cmp
mov
jno
sbb
and
jmp
or
cwtl
mov
in
data16
push
outsl
cmpsb
jmp
in
lea
outsl
out
push
fwait
lods
enter
ret
outsl
stc
dec
jb
cmp
sti
mov
xor
inc
call
inc
sub
insb
ret
out
mov
dec
mov
cmp
inc
cmp
and
outsl
outsb
xchg
addl
cmp
jno
mov
mov
xchg
jno
mov
jae
mov
sub
mov
pop
add
cmpsb
cmp
push
mov
mov
pusha
test
or
jg
and
cmp
sub
pop
xchg
sub
shl
cmp
cmpl
insb
and
jmp
and
cmpb
out
or
xor
pop
xor
jmp
mov
and
shrb
pop
lahf
cmp
sbb
mov
int3
andl
or
xchg
test
fstp
std
jl
rcll
push
les
lahf
das
push
jae
xor
nop
gs
xor
dec
in
popa
mov
mov
fstps
orb
lods
lret
scas
sbb
jp,pt
test
xchg
movsl
sub
cli
out
cmp
fwait
and
mov
fs
mov
bound
insb
inc
or
fldl
push
push
mov
mov
fsts
int3
jge
or
cltd
and
and
dec
cwtl
mov
push
jmp
fsub
xchg
xchg
push
mov
sbb
inc
loope
cmpsb
mov
ret
dec
fwait
cmp
jg
mov
inc
cmp
and
ret
fs
bound
mov
insl
xlat
xchg
mov
add
push
inc
aas
push
pop
dec
scas
fs
ljmp
jge
jb,pn
adc
push
in
and
xor
aas
xchg
and
test
mov
pop
sub
xchg
mov
pop
ljmp
and
pop
and
mov
fsubp
aaa
rorl
dec
mov
shlb
addl
test
imul
test
iret
pop
adcb
inc
push
sub
pop
shlb
fcmovnb
fs
outsb
jmp
mov
xor
adc
outsb
jnp
sbbl
pop
fs
cmpb
xor
fs
jno
sub
jle
jp
aas
int3
mov
or
inc
call
ja
mov
adc
outsl
je
clc
cli
inc
push
loop
jb
mov
push
pop
gs
or
icebp
sbbb
cmp
mov
mov
xchg
push
mov
lcall
sbb
and
scas
test
inc
lds
ficoms
mov
cmp
fprem
xchg
addr16
mov
xchg
fxam
je
mov
out
in
or
mov
jg
mov
cld
fstps
adc
adc
jecxz
test
cwtl
adc
jo
imul
push
je
xor
cld
sub
pop
insb
popa
mov
sbb
inc
jnp
sub
outsb
or
fwait
lret
push
jo
out
aas
popf
adcb
dec
cli
mov
aaa
dec
push
or
mov
mov
dec
mov
lcall
dec
addr16
outsl
mov
mov
jmp
add
adc
xlat
mov
or
adc
arpl
inc
inc
loope
mov
xchg
outsb
mov
pop
jbe
inc
hlt
lods
scas
ret
add
std
jno
mov
subb
adcb
mov
push
pushf
adc
push
push
push
pop
or
les
mov
test
push
fisttps
mov
loopne
mov
xor
mov
cli
testl
bound
pusha
sahf
pop
inc
dec
mov
inc
cmpsl
inc
lea
or
sbb
cmp
sbb
jle
jbe
fdivr
add
jmp
popa
adc
dec
sbb
jbe
idivb
mov
mov
shll
cld
rcl
xor
sub
inc
fmuls
call
xchg
sbb
pop
adc
shufps
fldt
xchg
adc
iret
mov
adc
add
test
cltd
fiadds
aam
cld
loope
fs
into
push
pushf
arpl
js
ret
cltd
sub
daa
cwtl
lret
ljmp
pop
jbe
mov
cli
pusha
xor
bswap
fisttpl
rclb
and
stos
leave
sub
xlat
push
jecxz
sbb
outsb
pusha
shrl
inc
sbb
mov
push
xchg
je
and
lds
scas
notb
or
iret
xchg
push
lds
mov
test
inc
into
pop
push
arpl
rcrb
dec
mov
rolb
movsl
sub
ss
xor
stos
in
outsb
cmpsl
xchg
push
imul
pop
call
push
xor
mov
mov
test
movb
in
jo
shrl
in
jge
push
jl
out
inc
mov
push
mov
ret
mov
ret
mov
jle
mov
add
lret
nop
push
enter
push
lcall
ret
aam
push
cmp
fnstcw
mov
inc
push
mov
mov
es
pushf
jne
dec
mov
bound
and
ret
cmp
nop
enter
and
mov
dec
and
dec
pushf
mov
jns
pop
popa
psubb
cmpsb
aam
xchg
arpl
sbb
push
loopne
pusha
mov
gs
fdivrp
xor
test
mov
stos
repz
mov
nop
ljmp
xor
inc
sub
popa
orb
add
xchg
in
sbb
push
out
mov
nop
xchg
ss
fs
xchg
and
out
add
xchg
mov
rcrl
pop
fbld
stos
daa
dec
cmpsl
push
ja
das
xlat
xlat
shrb
ret
mov
dec
test
pusha
sbb
mov
shll
or
aas
jmp
aaa
enter
cmp
add
data16
push
fidivrs
xor
subl
mov
inc
mov
xor
push
pop
insb
xchg
mov
xlat
or
mov
xchg
scas
and
clc
aad
adcl
mov
ret
loop
pop
iret
fwait
repz
sbb
xor
dec
aam
push
loopne
mov
movsl
lock
jae
rorb
mov
mov
out
cmpsb
jne
mov
sub
sbb
and
sub
leave
shlb
sbb
call
sub
movsl
jb
and
inc
iret
inc
adc
fidivrl
add
pop
push
mov
stc
popf
push
adc
jae
dec
xor
mov
dec
mov
sahf
ljmp
in
adc
cmp
push
sbb
packsswb
lahf
push
or
jns
scas
pop
rclb
and
cmpsb
push
repz
xchg
clc
fneni(8087
mov
out
mov
cmc
lock
inc
add
mov
ja
jg
pop
call
inc
pop
test
daa
push
add
push
aas
sub
jmp
push
inc
ss
xlat
push
inc
fstl
add
mov
inc
cmp
xchg
hlt
and
cwtl
sbb
or
fwait
test
insl
pop
xchg
xor
pop
sahf
sub
int
jge
sub
stc
mov
je
sti
fdivl
sub
imul
lock
push
mov
cmp
aas
push
es
dec
xorb
lods
sbb
arpl
push
lret
addl
jnp
xchg
ljmp
lret
addr16
adc
imul
cmp
dec
mov
xor
imul
rol
inc
lcall
or
jo
xor
add
loopne
test
cmp
pop
shl
jb
das
aaa
lret
pop
repz
dec
push
jbe
sub
cmc
xor
pusha
jno
in
pushf
cmp
sbb
push
sarb
push
fwait
sahf
mov
loope
jae
xor
mov
imul
out
es
outsl
nop
xchg
pop
cwtl
sbb
pop
jb
cli
rolb
dec
je
mov
loope
leave
lcall
xchg
inc
sbb
xor
mov
inc
or
push
insb
adc
mov
sbb
mov
lret
push
mov
mov
pop
mov
inc
add
sbb
sbb
subl
mov
hlt
jne
mov
mov
pushf
push
movsb
fistpl
fs
aad
sub
push
jle
mov
jb
mov
push
adc
push
jb
imulb
mov
inc
mov
aas
leave
jne
ret
popf
scas
sbb
mov
inc
loope
push
pop
ret
pusha
movsb
cmpsb
sbb
sub
fidivs
or
xchg
pop
mov
push
and
jno
sub
pop
scas
loop
add
mov
xor
jge
pusha
std
ret
push
add
jbe
sub
and
scas
sub
inc
add
dec
in
mov
xchg
push
cwtl
adc
scas
mov
add
add
mov
jl
test
shrl
jl
pushf
rclb
pop
das
inc
cmp
mov
in
mov
sub
ficomps
mov
push
or
adc
sti
in
test
cmp
dec
inc
pusha
jmp
jecxz
jmp
movsb
mov
pushf
std
mov
aad
and
pushf
xlat
outsb
and
mov
sti
cmp
jle
loop
fnstsw
sahf
dec
mov
aam
jge
imull
mov
and
fdivs
cmpsl
cld
fdivs
in
and
ja
dec
sub
xchg
pop
les
push
mov
lods
and
cli
hlt
mov
xchg
mov
jae
loope
or
push
clc
aad
mov
test
inc
sub
sbb
xchg
push
nop
dec
stc
dec
push
dec
mov
xorb
imul
jnp
mov
loop
xchg
sbb
lahf
mov
xchg
xchg
enter
lea
cmpl
xchg
fidivs
negl
and
jecxz
lea
cmp
rcr
loopne
lcall
push
cmp
mulb
enter
xor
jnp
int
xchg
test
aas
daa
fisubrs
fcmovnbe
inc
jb
adc
or
test
pop
dec
gs
cmp
mov
aam
lcall
mov
outsb
das
sbbb
out
jg
cs
js
pusha
rorl
pop
pop
outsl
ds
out
dec
inc
adc
mov
jb
test
xchg
sti
and
adc
mov
movsl
std
aam
insl
xlat
dec
in
inc
daa
mov
sub
call
dec
sub
pusha
pop
ficomps
cmp
xor
jge
lcall
push
sub
sti
lcall
lret
shll
mov
sbb
insb
jnp
lods
outsb
sub
lods
mov
inc
xchg
in
cld
push
and
and
push
cmp
stc
and
sub
stc
cwtl
insb
loop
mov
cmp
push
xchg
mov
add
mov
fucomp
or
test
cmp
dec
mov
out
out
or
push
xchg
xchg
insb
shll
adc
cmp
repz
ja
or
jno
fcmovnb
sbb
stos
jns
les
jnp
or
cmp
pop
mov
rorb
xchg
jecxz
mov
daa
xlat
push
imul
sbb
popf
andb
shr
mov
mov
xor
push
mov
lea
push
cmp
mov
xchg
shl
push
cmp
dec
stos
das
mov
in
loope
popf
and
and
pop
xchg
lcall
loope
imul
iret
fistpl
mov
dec
data16
add
addb
push
into
mov
pop
xor
xor
fwait
imul
rcll
adc
pushf
xchg
dec
data16
push
jb
inc
push
pop
das
cltd
dec
jge
and
inc
fisttps
push
sub
hlt
and
sub
mov
roll
sbb
repz
xchg
jne
int3
mov
add
adc
outsb
mov
fdiv
movsb
mov
and
mov
lds
je
js
cwtl
mov
push
jae
aad
push
jne
mov
inc
inc
mov
ljmp
add
loope
mov
inc
mov
mov
inc
and
lret
imul
cmp
lret
popa
xor
mov
push
data16
out
jno
repz
pop
out
push
push
lahf
pop
outsb
xchg
mov
nop
int
jne
int3
add
mov
or
sbb
shrl
push
sub
mov
pop
pop
inc
pusha
xlat
mov
aas
jecxz
out
or
and
mov
mov
add
test
jb
fs
jg
mov
mov
jg
dec
outsl
mov
pop
dec
jg
mov
pop
sbb
push
call
insb
adc
inc
jbe
push
out
xor
repz
call
and
gs
int3
mov
or
cmovg
pop
lret
loopne
test
jp
xchg
pop
adc
call
cmp
cmp
jge
out
loop
pop
notl
xchg
push
or
cmp
push
lahf
mov
mov
jns
jnp
inc
pusha
fwait
and
shlb
insl
test
icebp
repz
or
xor
pop
shrb
outsb
sbb
es
notb
ret
inc
or
in
movsb
mov
xchg
test
loopne
into
inc
push
and
ret
push
outsl
mov
xchg
in
fadds
movsb
jo
stos
inc
mov
ret
lret
icebp
sub
call
mov
push
aas
cmpsl
mov
insl
icebp
iret
xor
or
cwtl
insb
push
loopne
xor
iret
xor
pop
mov
lds
pop
iret
jnp
out
jl
call
pop
mov
jg
cmp
shll
repz
cltd
sbb
adc
push
xor
adc
push
cli
out
out
add
jecxz
pop
sbb
ja
push
aas
mov
xchg
adc
aaa
or
push
enter
cs
xor
inc
mov
mov
rcl
adc
add
mov
cld
inc
imul
mov
xchg
stos
add
push
mov
adc
fstp
pop
fisubrl
and
cmp
cltd
push
xor
stc
inc
roll
mov
fsubs
mov
insl
inc
es
push
mov
loope
sub
or
cltd
mov
jnp
enter
divl
cmc
call
js
xchg
loop
jo
pop
push
fsubr
mov
pop
xchg
or
stos
out
sbb
fimull
out
imul
out
add
lock
push
xor
cs
ja
cmpsb
aaa
xor
nop
xchg
mov
ret
stos
xor
mov
fwait
dec
lock
popf
in
daa
cltd
in
decl
fldt
pop
shl
mov
mov
out
push
mov
pop
sub
xchg
adc
push
mov
dec
icebp
movsl
into
in
insl
fwait
mov
test
nop
inc
sub
xchg
add
aaa
or
repz
in
ss
push
idivl
inc
add
shlb
pop
out
ljmp
imul
jge
pop
ja
aaa
jnp
push
pop
adc
sbb
push
popa
push
pop
addb
stos
sbb
inc
push
fnsave
out
sbb
addb
movsb
xlat
cmc
fs
or
jae
jge
xlat
adc
outsl
inc
xor
jo
fcmovb
das
xor
lcall
mov
mov
loope
mov
insb
and
and
notl
jmp
jnp
jecxz
ret
adc
inc
jnp
and
je
fcomp
mov
push
cmpsb
xchg
out
addps
call
and
inc
pop
insb
adc
lahf
mov
fisubrl
mov
fs
dec
or
cwtl
sbb
jle
repnz
inc
sarb
movsb
push
mov
icebp
ja
jb
push
ret
in
pushf
mov
leave
lret
push
push
xchg
sub
lods
inc
jnp
daa
add
pop
jle
push
out
addb
sahf
icebp
sbb
es
push
ret
into
xchg
add
jae
in
repnz
xor
shrl
add
inc
mov
xchg
cmpsl
xchg
add
and
jg
add
inc
cmp
jnp
dec
fstpl
and
inc
dec
push
cmc
enter
inc
shl
push
jle
xchg
int
and
fldenv
xchg
cmp
cmpsl
enter
mov
inc
inc
out
cmp
subb
jb
das
push
mov
std
add
jb
jno
movsb
mov
fistl
sbb
jne
jb
aas
and
xchg
pushf
and
and
mov
push
or
mov
inc
stos
jmp
add
or
dec
jbe
xor
fidivrl
jb
cmp
cmp
dec
adc
xchg
push
sub
xchg
shr
pop
mov
xor
lods
xchg
lret
test
mov
mov
gs
mov
sub
jge
je
dec
out
cmpsl
pop
cmp
data16
cli
jnp
lock
mov
xchg
orl
xchg
jno
mov
add
cld
pop
adc
outsb
sbb
push
dec
movsb
ret
fucomip
jmp
sbb
out
and
push
mov
inc
sub
mov
pop
pop
dec
jg
mov
xchg
jo
inc
test
adc
push
subl
pop
pushf
lcall
push
or
mov
mov
std
lods
roll
mov
cmpb
or
lcall
int
stc
fwait
fldcw
or
xchg
mov
or
inc
jge
movsl
loopne
mov
test
jns
xchg
jb
imul
push
push
mov
dec
pop
lahf
dec
mov
cmp
ret
cmp
std
lds
int
popf
loope
jg
lret
mov
mov
repnz
jge
rcl
lds
stos
mov
lds
es
xchg
mov
push
js
add
roll
in
movsb
mov
xchg
movsb
mov
ror
and
dec
bound
xchg
jne
out
pop
sahf
insb
push
outsl
test
das
pop
lock
push
lds
adc
add
sbb
sbb
mov
jo
cli
test
movl
mov
mov
xchg
movaps
mov
loop
sub
loopne
movsb
xor
int3
or
cmp
cmp
imul
pop
orb
stos
hlt
sbb
repz
jno
dec
rol
popa
sub
and
and
sub
push
lock
dec
fwait
pop
nop
fcompl
lds
ljmp
cmpsl
sti
lods
iret
adc
push
into
pop
aas
jne
and
mov
jbe
pop
jne
push
and
adc
inc
push
push
ljmp
lret
cmpsl
dec
dec
pop
call
xchg
insb
inc
mov
fildll
test
jp
js
sub
lock
decb
jbe
stos
add
orl
popf
sar
leave
pop
push
dec
mov
mov
gs
je
pop
inc
jle
and
jl
pop
in
push
xchg
and
out
shl
pop
cld
dec
or
mov
aaa
xchg
push
jmp
or
int
push
or
insl
sarl
xchg
xor
xchg
lock
loopne
xor
in
shl
or
cmpsl
mov
negl
dec
cmp
mov
xchg
adcl
ds
inc
xchg
sub
fs
repnz
mov
es
cmp
ret
xorb
or
mov
cli
ljmp
jp
jecxz
and
int
scas
add
mov
repz
mov
insb
or
add
adc
aaa
int
adc
lds
mov
shll
xchg
xor
xor
jmp
in
xchg
sub
inc
pusha
pop
rcll
dec
int3
iret
sbb
xor
xchg
hlt
dec
mov
xlat
popa
push
xchg
mov
xor
or
dec
leave
mov
fsubrp
xchg
mov
adc
daa
jno
aas
aas
in
add
std
fisubl
mov
xor
adc
loope
mov
das
fwait
jp
in
ljmp
stos
and
mov
adc
mov
fisubrs
rolb
test
jo
inc
dec
enter
mov
icebp
push
fisubrs
decl
inc
cmpl
ja
inc
addr16
orl
lods
mov
lock
pushf
ss
jb
cmp
add
inc
mov
int3
cmpsl
or
xchg
negb
mov
ss
mov
in
mov
cld
xor
xchg
pop
push
pop
fdivs
aam
pop
sbb
mov
push
jle
std
xchg
pop
sbb
rorl
out
xchg
xchg
sub
mov
std
fsubs
dec
shll
mov
fisubs
ja
mov
pushf
lods
out
or
or
negl
or
xor
orl
xchg
lret
adc
into
cld
outsb
mov
gs
fnsave
xlat
movsl
sbb
jnp
or
in
push
or
fs
shr
inc
xor
xor
dec
lods
call
insb
js
ja
xor
pop
fiadds
rcrl
adc
pushf
mov
orl
add
add
jmp
cmc
out
scas
jl
mov
je
popf
mov
push
fadd
mov
and
mov
add
mov
xor
roll
xor
sub
mov
jno
out
sbb
xorb
scas
jbe
daa
int
gs
sbb
gs
test
push
loopne
outsl
mov
dec
or
je
add
lret
xor
fs
pop
jb
and
sahf
ja
lret
in
or
mov
mov
clc
cld
push
dec
sbb
adc
lea
push
notl
push
addr16
add
icebp
pop
leave
fildll
inc
push
shll
subb
movb
divb
out
aas
pop
movsl
and
gs
cmpsl
mov
loope
sbb
sbb
inc
clc
fdivl
sub
pop
xchg
js
push
and
in
adc
xchg
sahf
mov
inc
or
add
and
movsl
mov
cmc
out
add
sub
and
dec
sub
test
cltd
xor
int3
mov
sbb
ja
or
xchg
pop
inc
cs
out
fisubrl
push
adc
mov
stos
sub
dec
mov
jle
ret
pusha
fldenv
or
xor
xchg
inc
add
mov
sbb
sub
insb
jge
mov
scas
fbld
pop
mov
adcb
movsb
decb
and
movsb
push
fimuls
jp
pop
daa
fdivs
ds
xor
out
pop
gs
push
gs
scas
ret
jp
insl
ljmp
dec
out
ja
enter
pop
sti
cmp
and
pop
mov
cmpsb
pop
imul
popf
in
jmp
fsts
repnz
inc
sub
push
cmp
cmc
aaa
shll
lock
mov
jnp
push
stc
sarb
sbb
cmp
lret
cmp
lds
fld
sub
jns
push
cmp
das
push
test
sbb
call
mov
orl
inc
xlat
mov
jmp
jmp
pop
push
mov
sub
mov
cmpsb
aam
adc
xor
scas
ds
addr16
cltd
and
scas
int
stc
mov
mov
jbe
push
shrd
rorl
insb
jle
mov
pop
outsl
or
mov
adc
pop
and
cmp
push
mov
scas
or
fiaddl
sub
mov
scas
ret
sbb
addr16
jg
jae
push
cli
sarl
out
fbld
gs
leave
test
cmp
inc
call
filds
in
jl
cltd
test
push
dec
jae
aad
scas
dec
cli
enter
fs
sbb
fisttpl
mov
inc
mov
cmp
jle,pt
sub
aad
mov
xchg
adc
dec
shll
xchg
inc
repz
add
xchg
jo
add
push
sbb
cli
repz
into
sub
cld
orl
hlt
xchg
cld
popf
inc
pop
ret
xor
test
sbb
icebp
adc
std
mov
or
cmp
inc
jl
jns
mov
xchg
mov
fnstcw
push
sbb
add
stos
pusha
mov
movsl
inc
test
fldl
jp
cld
imul
jge
mov
in
aad
scas
xchg
std
mov
jbe
xorb
out
stc
sbb
xor
scas
cmp
xor
push
mov
mov
fisubrs
jae
scas
sbb
ljmp
pop
pop
mov
add
inc
inc
jl
mov
imul
call
mov
add
jle
or
adc
lea
push
push
xchg
test
ret
push
xchg
add
jnp
arpl
adc
mov
lcall
loopne
mov
lcall
hlt
pop
pop
ret
lds
inc
jg
and
lea
lods
ljmpw
ret
sbb
jge,pt
mov
int
cmp
mov
pop
jno
fistpl
stc
xchg
sub
inc
mov
fs
sub
push
cmp
or
ret
clc
pop
add
jecxz
ret
in
fcmovnb
cmp
push
sbb
sbb
push
and
pop
ss
jecxz
insl
push
insb
into
je
iret
mov
cmpsl
push
outsl
pop
fisttpl
rorl
push
fsubs
nop
pushl
stos
mov
and
mov
out
out
mov
mov
test
pop
dec
lfs
and
subl
add
outsb
inc
inc
cli
adc
push
mov
push
testb
fmull
arpl
xchg
js
cmp
mov
lret
aas
or
outsb
cmp
cltd
pop
jl
push
data16
mov
xchg
jge
das
loopne
pop
dec
and
scas
xchg
icebp
cmp
aad
inc
push
add
ja
pusha
mov
cmp
sahf
dec
add
mov
adc
mov
in
div
rcll
nop
jl
imul
mov
adc
xorb
dec
jg
jmp
and
jmp
pusha
xchg
into
shll
mov
push
push
mov
mov
lea
lds
fstl
ficoml
popf
xchg
xchg
lods
inc
int3
sbb
test
les
add
mov
lock
testb
out
and
aad
adc
imul
jg
mov
mov
pop
and
mov
or
ret
mov
ljmp
fldt
mov
shl
and
and
mov
xor
mov
dec
push
fimull
into
out
ja
outsb
ds
loop
mov
lcall
jp
xor
dec
enter
std
add
mov
pop
lea
ret
fdivrp
dec
int
cwtl
sub
mov
in
fcompl
mov
lret
adc
adc
mov
cld
mov
mov
dec
or
push
mov
dec
cmpsl
add
rcrl
scas
push
test
sub
mov
scas
repz
sub
out
mov
fisttps
insb
int
xchg
leave
add
shlb
inc
lcall
push
push
aaa
sbb
mov
mov
sub
test
stc
loopne
nop
fdiv
sahf
ja
push
cmpsb
pop
push
dec
add
stc
dec
cld
flds
jae
insb
inc
push
pop
inc
pop
or
add
mov
addl
push
movsl
out
iret
xlat
out
mov
push
lods
xor
mov
and
push
in
mov
dec
stos
push
add
pushf
add
or
fnstenv
dec
clc
xlat
push
cld
push
xchg
dec
cmp
stc
jge
mov
mov
je
or
add
add
and
in
push
pop
stc
jno
jbe
push
lahf
adc
insl
dec
lcall
and
xor
xchg
addr16
inc
cltd
cwtl
fs
mov
jbe
xor
xor
pop
ficomps
pusha
addl
mov
je
or
pop
notl
xchg
mov
mov
cmp
ljmp
jmp
xor
and
call
dec
lret
sub
xor
lods
push
daa
dec
mov
mov
cmp
dec
mov
xchg
imulb
jecxz
fmulp
mov
mov
call
aad
out
insb
cmc
and
xchg
bound
dec
lret
das
push
dec
clc
xlat
repnz
adc
imul
lods
outsb
aas
cmp
repz
insl
and
pop
jbe
dec
push
or
mov
sub
adc
lret
inc
jne
mov
dec
mov
imul
or
push
jmp
bound
sub
sub
fildll
mov
lods
add
repz
in
jne
push
push
mov
jl
lret
loopne
pop
mov
push
add
xchg
mov
rol
pop
push
js
rorb
int3
jo
push
inc
cmp
sbb
xchg
pop
outsb
dec
xlat
sbb
xor
lret
sbb
sbb
popf
xor
mov
xlat
aas
shl
test
mov
cvtps2pd
mov
dec
fstpl
push
push
clc
and
adc
jl
fcoms
jnp
repnz
pop
push
sub
mov
in
and
dec
test
pop
cwtl
stos
adc
frstor
ds
add
inc
test
aaa
sub
push
push
cmp
bound
pop
xchg
push
insb
push
push
lea
int3
aaa
leave
std
pop
mov
in
imul
in
dec
jne
and
leave
dec
mov
test
jle
sub
jecxz
ret
in
imul
jnp
mov
inc
nop
push
jge
lods
add
scas
adc
adc
sub
in
xor
mov
push
shl
adc
xchg
daa
sub
aam
xchg
mov
xor
lret
cli
pop
shr
sbb
adc
sub
cmp
inc
insl
shlb
mov
shlb
cmpsl
inc
cmp
punpcklwd
roll
idivb
xor
ret
fiaddl
decb
adc
adc
cmp
in
ljmp
dec
andnps
repz
vxorps
add
out
or
daa
xchg
lahf
inc
ds
pop
aaa
lcall
inc
inc
pop
dec
pushf
outsl
cmpsl
rorb
xchg
push
sub
lock
into
mov
call
fcmovb
or
jns
int3
ret
pop
xlat
lods
fadd
mov
cmpsl
fiadds
xlat
js
xchg
add
aam
popa
hlt
pusha
add
shrb
ret
aaa
ret
mov
sbb
or
clc
adc
and
je
je
popf
lock
leave
or
xorb
sbb
add
aaa
mov
mov
xchg
inc
mov
mov
fwait
sub
xchg
fnstsw
jno
call
mov
jno
sbb
jmp
fmuls
cmpb
fmuls
dec
mov
daa
shrl
fidivl
outsb
cltd
loop
and
lcall
xor
jge
popf
lcall
loopne
into
aad
insb
push
loopne
pop
and
add
mov
lea
mov
int3
mov
adc
xchg
inc
add
jnp
adc
pop
scas
neg
push
fisubrs
pop
cmp
sbbb
add
xchg
scas
xor
add
loope
out
adc
fmul
push
stos
add
mov
inc
popf
dec
mov
sbb
mov
daa
inc
cltd
push
in
mov
or
fs
mov
int
popf
pop
inc
and
das
xchg
inc
pop
add
push
aas
sbb
cli
stc
scas
divb
jnp
push
mov
add
cmpsb
fisttpll
clc
or
stos
cmp
std
add
into
mov
ss
mov
xlat
pop
cwtl
lcall
outsb
dec
cmp
mov
scas
jb
imul
and
shr
sbbl
pop
add
cmc
stc
je
mov
aam
ret
push
stc
repz
jno
gs
sti
loop
push
call
iret
pop
divb
push
pop
imul
lret
cli
inc
jo
inc
loop
cmp
xchg
push
std
into
pop
jmp
dec
jae
je
inc
and
sub
aam
adc
loop
lods
out
push
push
js
call
jl
mov
xchg
notl
ljmp
inc
fidivs
popf
out
in
mov
push
xor
push
sahf
enter
sahf
mov
fimuls
mov
or
xchg
mov
mov
mov
movsl
inc
push
es
jp
jl
mov
cmpb
jg
ret
lods
or
mov
aam
dec
outsl
adcb
fldl
in
sbb
adc
ljmp
dec
add
pop
movsb
jns
cmp
fwait
mov
outsb
sbb
add
fldl
call
cli
icebp
push
and
gs
rcl
cld
ret
adcl
sub
bound
push
bswap
add
or
shr
or
cltd
cwtl
mov
adc
jp
dec
mov
mov
insb
mov
decl
lcall
in
push
sbb
sub
jb
sub
xchg
mov
push
sarl
sbb
adc
mov
sahf
adc
sbb
mov
cmpsl
iret
push
xor
rcrb
mov
mov
push
das
std
stc
adc
mov
jae
ret
xchg
cmc
jmp
add
add
daa
inc
clc
inc
pop
cld
sub
mov
outsl
jmp
or
fwait
daa
cmpsb
sub
and
rorb
and
mov
lods
test
xorb
mov
out
sub
and
in
mov
mov
inc
pop
inc
mov
lret
jbe
dec
cmc
test
mov
insb
push
loopne
sub
push
xlat
sub
pop
fsubl
xor
rclb
cmp
fsub
dec
adc
xor
adc
push
lret
or
mov
jmp
mov
mov
mov
cmpsb
mov
xchg
push
and
push
out
or
inc
push
jle
scas
jmp
jns
out
test
pop
pop
push
addr16
cmpsb
xor
stos
push
mov
adc
aad
in
jmp
icebp
inc
ret
push
pop
pop
mov
jae
dec
rol
xor
pusha
leave
out
in
pop
xchg
arpl
jmp
jl
aas
or
push
jmp
inc
sub
out
roll
dec
shlb
pop
out
push
addl
imul
jmp
in
loopne
pop
fcmovnu
je
insb
mov
and
dec
mov
leave
pop
clc
cs
fistpll
pop
xor
pop
pop
scas
fisubl
and
clc
divl
lea
pop
scas
pushf
sbb
pop
sub
push
pop
scas
adc
pop
pop
jp
shll
mov
jl
mov
xchg
fsubrs
inc
sbb
mov
sahf
mov
xor
pop
movsl
inc
xor
inc
lock
pop
scas
cwtl
aad
aas
add
and
add
add
lahf
or
aam
insl
sti
and
mov
sbb
mov
mov
repnz
push
stos
dec
xchg
rorl
pop
push
movl
in
testl
loopne
mov
scas
int3
or
and
dec
aas
add
mov
stc
lret
mov
in
xor
cs
jecxz
movhlps
sub
ficoms
xchg
ffreep
cs
push
int3
movsl
jecxz
adc
inc
inc
pushf
fneni(8087
and
adc
loopne
push
sub
inc
addr16
scas
mov
and
push
jbe
test
xchg
sbb
in
test
jmp
fistpl
or
sub
into
fimull
outsl
push
or
mov
int3
push
sarl
jge
test
cli
jno
shlb
or
gs
sbb
sub
sbb
mov
cmp
lods
jns
sbb
addb
cmpl
test
test
sub
lret
dec
or
fidivrs
mov
or
lock
push
fildll
push
push
push
out
pop
rcrl
pop
or
jne
lods
xor
mov
mov
dec
test
xor
pop
cmp
sbb
xor
pop
fsubrl
xchg
movsb
out
pop
push
out
sar
xchg
adc
out
adc
cmp
mov
sbb
divl
and
inc
popa
pop
adc
in
jl
push
fstpl
fistpl
xchg
pop
xchg
movsl
lret
notb
adc
xor
rorb
push
sub
popaw
sub
xchg
or
fdivrs
mov
adc
cmp
pop
bound
shl
shll
fcoml
icebp
ret
andb
lahf
test
xor
mov
cmp
test
stos
xchg
call
daa
lea
pop
xor
lret
xchg
hlt
sarb
or
xor
out
fidivl
stos
in
ret
shll
fmuls
and
lret
popa
fimull
das
dec
sbb
outsl
test
stos
mov
pop
stos
and
jb
int3
insl
and
mov
jne
lock
mov
leave
jl
shrl
mov
adc
dec
ficoms
sbb
cli
dec
ljmp
inc
mov
mov
mov
mov
in
ss
cmp
mov
mov
scas
outsl
adc
in
std
loope
xor
push
add
popf
or
and
mov
mov
shl
jno
lods
sub
xchg
scas
fistl
mov
add
jge
sub
leave
aad
ds
shlb
loope
push
mov
cmp
cmp
or
cli
call
adc
pop
mov
popa
in
add
adc
daa
inc
daa
cmp
mov
movb
mov
sarl
jge
int
daa
mov
popa
add
das
or
pop
outsb
xchg
movsb
cli
jmp
dec
lahf
sub
lea
sub
adc
std
in
mov
fwait
stc
xor
pop
lods
cmp
jg
xchg
fs
mov
add
add
mov
rorl
pop
fimuls
hlt
dec
cmc
adcb
xchg
mov
mov
popa
pop
or
or
les
fs
add
jl
pop
ret
imul
sub
fcomps
xlat
inc
push
fdivp
pop
ret
xchg
fstl
mov
xchg
orb
insb
or
clc
std
shrb
mov
leave
ss
js
cmp
push
xchg
in
icebp
lret
clc
xor
jno
mov
push
mov
sbb
push
or
jmp
shll
out
push
pop
mov
jno
fistl
nop
fmul
stos
cmc
les
jp
cwtl
aam
mov
loope
mov
push
and
sub
push
gs
pop
out
fdiv
pxor
lcall
enter
mov
mov
rcr
shll
cs
fisttps
push
mov
adc
rcl
jbe
lcall
mov
jmp
push
xacquire
sarl
jg
lods
jb
cmp
pop
jecxz
adc
mov
push
fs
dec
xchg
lahf
lret
pusha
lcall
mov
stc
sub
ret
jb
adcl
mov
push
stos
cmp
sub
leave
insb
idivl
test
sub
pop
in
into
jns
arpl
xor
xor
lods
fdivl
fwait
mov
insb
outsb
xor
xor
ss
pxor
dec
jo
add
daa
in
jne
addl
cmpsb
jp
shlb
test
cmp
inc
mov
das
nop
stc
sub
fildl
lock
mov
je
arpl
xchg
mov
les
test
xchg
fwait
xlat
fldt
mov
jne
push
inc
xchg
jecxz
in
xchg
mov
mov
sbb
shl
pop
jl
push
mov
int
shll
test
sarl
scas
jbe
hlt
cvtps2pi
adc
test
mov
and
xor
dec
push
loope
into
pusha
out
adc
jno
mov
mov
adc
sbb
les
and
or
mov
push
or
push
xchg
es
popf
cmp
pop
xorl
in
jb
insb
jnp
iret
mov
dec
xchg
in
adc
sbb
mov
inc
xchg
mov
sub
mov
cmpsb
sub
dec
test
fildl
fiadds
adc
call
and
sub
sbb
sarb
stos
mov
int3
and
jbe
cli
xor
mov
push
std
xor
push
jmp
mov
pop
insl
fldt
cld
push
jae
xchg
iret
push
mov
imul
jb
pop
enter
pop
xchg
clc
ret
in
add
cmpsb
sbb
cwtl
sub
pop
sti
adc
sti
test
dec
and
hlt
scas
ljmp
nop
cmp
call
ret
arpl
cmpsl
fcom
mov
and
setno
jns
test
xlat
cmp
push
ja
push
xor
push
out
mov
and
in
jnp
shr
stc
mov
sti
push
sub
mov
das
je
sti
sbb
mov
movsb
cmpsl
fstps
in
hlt
fcmovu
jne
sahf
mov
ret
xchg
sub
leave
imul
or
subl
sub
outsb
mov
add
mov
pop
inc
add
cmp
sarb
outsl
out
pop
enter
mov
cmp
les
ja
mov
sub
add
jecxz
or
jmp
sbb
iret
inc
and
scas
enter
add
cmp
mov
push
mov
cmp
fidivl
lret
sub
shl
push
clc
push
addr16
or
pop
out
enter
jmp
fmuls
mov
dec
pop
imul
or
sbb
mov
popf
aam
aam
out
and
pop
push
and
pusha
push
sbbb
movsb
mov
xor
xchg
jo
and
popa
test
loop
cld
imul
pop
xchg
mov
stos
addr16
clc
dec
mov
jmp
pop
inc
loop
dec
push
stos
decb
fisttpll
sbb
dec
add
aad
xchg
in
out
in
lret
dec
mov
xchg
mov
mov
rorl
sbbb
lds
and
icebp
dec
mov
insb
ret
sbb
jecxz
inc
add
call
repz
and
cmc
rclb
pop
sarl
mov
mov
xchg
ja
or
push
sti
jo
lods
rolb
lret
out
cmpsl
add
addr16
aad
add
mov
jecxz
in
lahf
inc
es
xchg
cmp
negb
movnti
insb
lods
sub
sti
lods
popa
dec
cmpsl
repnz
movsl
sbb
ficoms
sub
sub
push
jno
jns,pn
inc
loopne
xchg
xchg
addr16
xor
mov
imul
xor
dec
push
cmp
dec
inc
and
push
jmp
push
das
add
jl
movlps
les
jns
xor
push
mov
pusha
out
shlb
aas
inc
fistps
imul
ja
pop
movsb
insb
insl
xchg
xlat
insb
in
incl
sbb
ds
adc
roll
jne
outsb
sarl
and
xor
and
sub
mov
mov
and
sub
into
mov
dec
pop
add
ret
pop
mov
test
cs
jo
ret
sub
push
repnz
fisubrs
lret
je
jae
cmpsl
jns
mov
arpl
xor
and
sbb
sub
lea
dec
jb
jg
rorl
jno
lods
test
sub
and
mov
mov
cmp
fwait
ljmp
imul
imul
cmc
insl
repnz
das
inc
imul
fisubl
push
inc
inc
iret
mov
int3
pushf
push
mov
mov
mov
xor
xchg
lea
stos
inc
adc
enter
leave
adc
pop
repnz
pop
test
insl
aad
ret
divb
add
test
stos
or
xor
dec
insb
push
inc
cld
sub
mov
push
sub
xchg
or
popf
push
scas
pop
lcall
mov
mov
xchg
xchg
push
call
add
ficoms
lea
jp
xchg
xchg
imul
inc
or
sbb
cmc
ret
sub
or
call
or
jmp
mov
pushf
cmpsl
cmpsb
xor
mov
jb
movsl
mov
mov
fisttpll
push
adc
sbb
and
repnz
outsl
popa
xchg
sbb
push
jmp
jmp
aam
pop
inc
repnz
bound
xchg
jae
push
pop
sbb
xchg
jne
ja
xchg
lahf
mov
push
mov
jb
push
in
inc
or
aas
xchg
jb
ret
push
cld
or
les
call
xchg
cltd
push
xor
shll
or
or
test
dec
adc
inc
push
dec
stos
pop
lahf
xor
lods
dec
imul
mov
cmpsb
cmp
xor
jl
xlat
xchg
mov
adc
lret
jp
dec
imulb
mov
jg
mov
les
or
xchg
nop
sahf
out
cmp
jns
insb
popa
push
mov
and
jecxz
jle
jne
mov
das
sub
jns
movsb
xchg
popf
test
aas
imul
ljmp
or
xchg
imul
test
and
mov
fistpl
pop
mov
dec
rol
mov
out
repnz
push
out
hlt
repnz
shl
push
fmull
notb
jmp
sbb
jbe
lahf
daa
inc
or
pop
xchg
leave
dec
mov
push
push
adc
int
ss
bound
lea
lods
insl
ret
loope
dec
dec
mov
into
scas
mov
inc
xor
dec
in
std
inc
push
sbb
aas
ds
cli
loop
fimull
iret
aad
lock
add
hlt
out
adc
push
sub
xor
sbb
aas
adc
les
pop
into
aas
inc
add
fs
cmp
daa
mov
lock
sub
nop
xchg
ss
jp
dec
sub
divb
and
ret
popa
rcll
and
push
nop
pop
dec
loope
inc
dec
xchg
idiv
sti
push
loope
aam
add
mov
jg
dec
aam
fwait
jno
cmpsl
fnstcw
pop
subl
testl
push
mov
out
daa
xchg
pminsw
in
leave
push
std
mov
xor
outsb
mov
fstps
jmp
scas
push
push
adc
data16
and
in
out
mov
jae
mov
dec
mov
out
fs
xor
fcmovu
xchg
lretw
lahf
xchg
pop
mov
leave
out
fs
mov
xor
mov
sbb
pop
or
insb
mov
push
pop
in
out
cmp
jmp
test
outsl
push
lcall
std
imul
add
jecxz
test
lods
imul
push
cmp
mov
or
pop
mov
andl
add
mov
fiaddl
mov
loop
adc
inc
flds
jge
pop
mov
fsubl
std
test
xchg
jmp
push
lcall
shrl
or
sub
sub
pushf
call
pop
mov
mov
adc
test
ja
jg
ljmp
sbb
leave
rcll
dec
sar
scas
xchg
xchg
cmc
fsubr
cli
iret
pop
cmp
cwtl
dec
cmp
dec
push
xlat
test
sbb
xchg
or
jns
mov
mov
idivb
adc
mov
xchg
ss
out
ljmp
inc
cmp
jecxz
insb
bound
cmp
in
shrl
cwtl
loop
cltd
clc
leave
jecxz
ljmp
pop
cmc
ficomps
insb
lahf
mov
js
dec
stc
mov
push
sub
aaa
adc
sbb
cs
push
in
inc
push
xor
pop
daa
pop
lods
aaa
clc
lcall
cld
leave
stc
lret
or
repz
jnp
cld
pusha
push
mov
adc
cmp
add
cmp
cmp
test
iret
js
aad
pop
xchg
dec
ja
xchg
xor
or
pop
pushf
test
sub
sub
mov
je
movsb
outsb
inc
cltd
sti
cmp
push
add
lret
loop
jne
sbb
cwtl
leave
lcall
inc
into
sbb
lds
ret
push
rorb
or
ja
je
pop
lods
xor
dec
and
cmp
or
or
and
mov
insb
imul
jp
cmp
or
jo
cmp
fsubrl
ret
icebp
mul
mov
sahf
xorl
xchg
sub
cmp
outsl
jge
cmp
mov
cmpsl
and
dec
pushf
push
xor
rorl
dec
faddl
sahf
fdivrs
sbb
xchg
ja
mov
int
inc
or
mov
push
mov
test
or
jg
and
push
push
fst
sub
out
icebp
sahf
or
mov
add
fisttpll
pop
lods
cmpb
ja
ja
mov
into
cmp
add
cmc
add
nop
mov
push
xchg
and
repz
jns
jno
dec
loope
jmp
imul
repnz
outsb
flds
outsl
mov
sbb
data16
adc
push
mov
fcmovnu
cmp
add
sbb
cwtl
stos
jmp
cmp
add
sbb
sbb
sub
iret
or
addr16
and
xchg
lahf
lods
in
cltd
outsl
jns
movsb
rorl
or
pop
insl
icebp
mov
cli
lret
call
dec
and
cltd
adc
iret
inc
and
pop
inc
mov
inc
xchg
adc
leave
adc
xchg
insl
fbstp
xchg
cmc
sub
jns
mov
popa
cwtl
testb
push
subl
fsubrs
mov
mov
push
dec
in
add
shll
xchg
xchg
inc
adc
jne
stc
cmpsl
cmp
add
xchg
xchg
mov
cmc
mov
in
cli
int
and
dec
rcrl
fisubrs
sbb
dec
xor
mov
out
stos
in
fcomi
adc
pop
test
or
adc
pop
jb
fdivp
test
sbb
out
ss
icebp
dec
dec
movsb
dec
sbbl
mov
sbb
pop
pushl
ret
imul
cmp
cmpsl
push
lods
ficoml
and
mov
aad
int
inc
out
cmpxchg
dec
loopne
cld
push
cmp
add
cmp
and
adc
test
inc
mov
movsl
std
dec
pcmpeqw
fstl
stos
nop
or
mov
fwait
movsl
outsb
stc
jbe
lock
xor
and
jecxz
call
fdivl
sub
ss
mov
xlat
lods
ljmp
negb
adcl
fdivr
jle
inc
rorb
sub
xor
jno
jno
push
cmp
lret
es
std
xchg
jl
pop
xchg
aas
loopne
dec
or
sti
jno
add
int3
xchg
ds
mov
push
imull
outsb
nop
das
adc
sbb
add
or
mov
mov
pop
loopne
ftst
inc
inc
xor
pop
cmp
sbb
mov
xchg
cmpsl
push
jmp
orl
pop
das
stc
ret
fadds
push
and
cwtl
mov
xchg
adc
call
jae
mov
mov
or
movsb
movsb
add
shlb
outsb
inc
outsl
mov
sub
sbb
sbb
loope
cmpsl
push
repz
jmp
push
dec
add
icebp
xchg
cmp
adc
push
mov
inc
pop
pushf
cmc
test
nop
jmp
push
cmpsb
scas
cld
insl
sub
cs
and
jbe
shlb
jbe
xor
sbb
adc
div
insl
jp
pop
lret
add
sbb
sahf
push
cmpsb
jle
and
lea
inc
xor
jmp
jmp
in
xor
xor
mov
sbb
add
lcall
imul
aam
push
es
fcompl
insb
ds
or
call
jle
fnsave
xchg
xor
xchg
add
mov
std
cwtl
outsb
inc
push
dec
inc
aaa
add
fstl
cmp
pop
ret
das
xor
test
add
movsl
sub
addb
sub
xor
das
insb
inc
outsb
ret
call
rorl
adc
mov
in
jae
bound
aaa
sbb
std
xchg
sbb
repz
sub
dec
xorb
inc
out
int
gs
stos
cltd
push
sub
stc
je
xlat
push
shlb
pop
mov
ds
cmpps
cmp
mov
js
jmp
movsl
adc
mov
mov
insl
mov
xchg
out
inc
lea
cli
insb
cld
outsl
jge
shrl
adc
cmp
mov
cmc
gs
fiadds
ret
fcmovnbe
iret
cs
cld
mov
inc
xor
or
sahf
push
clc
and
mov
add
push
adc
pop
int
pushf
or
fadds
les
aaa
int
add
hlt
test
xchg
shrl
xchg
aaa
insl
push
pop
push
push
jae
mov
jae
jmp
loop
xchg
je,pn
add
xor
pushf
stos
ficompl
fildll
dec
jb
test
mov
lods
xchg
mov
jle
je
test
test
pop
mov
or
mov
rorl
dec
cmpl
mov
mov
xchg
enter
dec
fwait
aaa
jns
outsl
lret
ja
lret
push
mov
iret
nop
sbb
and
dec
mov
push
frstor
xchg
rorl
les
xor
lods
or
xor
mov
fstpl
dec
xlat
xchg
jmp
test
fstps
imul
outsl
enter
lcall
idivl
mov
pushf
push
rorl
in
fwait
sbb
lahf
lods
add
add
fs
mov
jae
sub
into
rclb
jo
pop
inc
adc
sti
mov
pushf
ss
mov
dec
mov
repz
pop
and
mov
mov
and
pop
push
lods
add
lret
lods
movsb
mov
lds
rcrb
mull
fdivs
test
mov
adc
iret
fisubl
imul
ret
xchg
stos
loopne
mov
push
stos
xchg
mov
jge
jp
mov
loopne
mov
aad
sub
in
push
fwait
repnz
push
fdivrs
inc
mov
icebp
aam
or
aam
pushf
mov
push
inc
loope
or
cmovne
add
or
add
or
in
je
aas
negl
push
call
test
pop
pop
mov
outsb
popa
ss
xchg
popa
das
popl
jg
ljmp
aas
in
jmp
adc
jl
popa
pop
and
imull
cwtl
jne
in
movsl
jo
cmp
adc
fs
xchg
mov
stos
test
call
in
loope
xor
and
xor
sbb
inc
inc
fwait
adc
lds
bound
ficoml
fldcw
call
shlb
sbb
pop
jle
xor
mov
mov
mov
mov
sub
jle
jne
movsb
iret
pop
jge
jecxz
ficoml
jo
out
push
sbb
jbe,pn
fs
test
pop
test
jl
jne
adc
cli
dec
loope
inc
sbb
cmpsl
leave
clc
mov
or
dec
aas
jns
sar
push
mov
xchg
sub
hlt
insb
in
xchg
popa
xor
movsb
stc
leave
test
push
inc
mov
cmp
dec
and
sub
adc
aaa
add
loopne
pop
add
inc
cmp
call
dec
mov
sub
repnz
out
call
dec
xchg
pop
into
cmp
mov
mov
in
test
pop
mov
push
xor
pop
movsl
cmc
adc
hlt
insb
icebp
xchg
ret
and
fs
xor
test
mov
in
jno
js
andb
stc
adc
pushf
jne
ja
bound
push
fcmovnbe
call
js
mov
cld
testb
push
xchg
mov
insl
ret
push
jbe
fisttps
xor
jae
mov
push
pop
sub
das
push
mov
je
xor
jmp
cld
mov
push
cmp
mov
ds
pop
js
das
and
dec
dec
push
arpl
inc
xorb
sbb
xor
ds
xor
dec
inc
das
cmp
jns
push
ficompl
and
imul
pop
aaa
enter
and
shll
mov
add
mov
and
xor
mov
les
sub
stos
arpl
out
mov
push
mulb
mov
dec
cmp
std
clc
adc
mov
sub
mov
xlat
in
xchg
mov
mov
std
or
xor
and
inc
and
dec
fcoml
xor
mov
mov
cmp
push
push
test
or
jl
fisubs
lods
jne
aam
inc
into
shlb
pop
sub
jmp
out
ja
ret
jl
jg
mov
xor
jmp
cld
sbb
add
push
sahf
loopne
outsb
cmpsb
mov
cmpsl
outsl
adc
sub
sbb
stos
ljmp
leave
movsb
lea
sub
adc
push
pop
dec
jbe
mov
push
popf
out
adc
roll
outsl
pop
add
icebp
or
pushf
fadd
sbb
mov
fmull
ja
lock
and
add
cmc
sub
push
out
pushf
sub
mov
pop
xorb
cli
xchg
shlb
cmpsl
loopne
push
sbb
dec
sarb
xchg
mov
cld
sub
addb
stos
test
cmp
aam
dec
enter
dec
push
push
out
stc
cmp
fldenv
movsb
cmc
pushf
dec
cmp
sbb
pop
stos
js
mov
movsb
jnp
int
ds
jno
inc
mov
cmp
add
icebp
repz
out
adc
jp
lret
cmpsb
jg
xor
ret
jbe
sub
mov
mov
movsb
push
hlt
stc
adc
popa
sbb
jmp
popa
add
leave
or
and
outsb
imul
push
sarb
push
rcrb
xor
adc
or
sbb
rolb
clc
push
push
je
mov
mov
xchg
out
aam
jmp
xchg
shr
sahf
ss
hlt
push
inc
call
imul
scas
add
imul
dec
jnp
or
mov
enter
mov
adc
popf
mov
sub
mov
clc
sub
sub
mov
into
add
subl
hlt
in
and
and
mov
and
ret
cmp
rorb
mov
stos
addl
push
stc
sahf
and
cmp
inc
ljmp
inc
enter
xchg
out
fadd
aas
lcall
ficompl
pop
mov
test
sbb
ss
mov
and
jae
lea
sub
mov
add
es
rcr
idiv
ficompl
rcll
ret
jbe
insb
leave
les
enter
inc
jae
out
cmp
nop
push
jmp
jae
xchg
adc
jge
mov
and
gs
aad
lret
call
mov
ret
mov
out
cmc
lods
push
mov
and
mov
je
jno
test
sar
xchg
sti
das
push
mov
nop
testl
in
xor
cmp
jg
pop
jle
add
and
or
ret
fstps
dec
rcrb
arpl
mov
loopne
jns
jg
daa
pop
mov
xchg
sbb
mov
dec
push
leave
shrl
imul
scas
gs
and
shr
jo
push
shrb
mov
test
jp
in
mov
xchg
push
push
bound
dec
add
lods
icebp
jno
cs
leave
sub
jbe
mov
jge
inc
inc
pop
std
aad
and
mov
bnd
pop
lret
mov
jbe
aaa
fnstenv
jmp
ret
add
mov
call
es
dec
inc
ret
lods
hlt
mov
sbb
push
cmp
and
scas
js
pop
pop
lods
nop
jp
in
stos
lcall
arpl
xlat
icebp
jo
jne
jbe
push
data16
pop
mov
mov
out
pop
loope
inc
pop
push
mov
xchg
sub
xchg
data16
sbb
and
loop
sub
mov
ja
fstp
sbb
xor
push
add
jle
fwait
cltd
mov
loop
mov
xor
in
rol
mov
outsl
or
test
jns
rorb
rcr
jp
or
popa
jp
sbb
lcall
dec
js
call
push
mov
repnz
sbb
inc
pusha
add
testl
aad
pop
adc
rcrb
mull
sbb
outsb
lret
cwtl
mov
repnz
mov
jbe
mov
enter
icebp
mov
mov
mov
adc
call
push
dec
mov
inc
je
std
cltd
push
inc
movsl
jne
addr16
stc
inc
sub
fs
pusha
mov
in
jge
idivb
and
and
jne
sbb
sbb
or
dec
mov
and
and
in
or
jae
mov
push
aad
adc
imul
lock
movsb
xlat
xor
xchg
cmp
xlat
loope
call
xchg
inc
movsb
mov
mov
jle
sbb
ret
xor
push
fbld
lds
xor
pop
add
mov
pop
aaa
sbb
mov
dec
lods
xchg
fnstenv
aad
sbbl
imul
sub
jg
xchg
les
cmp
pop
inc
cmp
lds
icebp
lret
daa
adc
js
mov
fists
lods
mov
cld
addr16
add
xchg
inc
mov
add
mov
out
push
xchg
repz
test
jne
jno
or
add
lcall
es
push
cli
xchg
xor
enter
xchg
addr16
mov
sub
lret
jnp
dec
inc
in
sub
nop
xchg
mov
fsubs
dec
sti
cmc
js
fldenv
test
jns
add
lds
nop
and
add
test
push
test
lret
push
dec
adc
jmp
popa
and
test
xor
stos
mov
fwait
sbb
and
sbb
or
pusha
js
sahf
fs
mov
popf
pop
scas
negb
mov
loopne
mov
mov
mov
sub
clc
cmc
xchg
inc
adc
push
fcomp
cli
push
inc
aam
sahf
dec
fdivrl
jle
add
cmpb
cmp
inc
pop
ficoms
cmp
push
std
cmc
adc
sub
clc
pop
jns
std
cld
sub
cmp
movsl
scas
or
and
push
movsl
or
mov
or
push
in
clc
inc
into
mov
into
cmpsl
cs
nop
sub
gs
mov
shrb
bound
add
sti
push
sbb
inc
add
mov
aam
lods
scas
dec
xchg
nop
cmp
xchg
and
mov
adc
idivb
mov
jno
stos
xchg
and
mov
xchg
insb
mov
pop
dec
mov
push
out
aad
fildl
mov
sbb
xor
jns
cmp
mov
fbld
lahf
push
dec
push
rorb
jmp
imul
mov
adc
jnp
mov
xor
rolb
xor
pushf
push
mov
inc
clc
push
das
enter
shr
je
sahf
mov
imull
adc
jb
or
cli
sub
xchg
out
or
data16
pop
dec
mov
inc
mov
leave
stos
loope
movsl
frstor
xor
xchg
xchg
mov
jp
and
dec
lcall
movsl
in
lds
loopne
mov
call
and
movsb
adc
dec
jmp
test
push
ret
les
fstps
lods
repz
ljmp
add
ficompl
cli
push
mov
add
add
mov
jo
push
out
mov
loop
mov
pop
push
sahf
sti
aad
mov
mov
inc
flds
repnz
sti
shll
mov
fldt
aad
xor
imul
out
pop
and
dec
lds
fisttpll
cmp
xor
sahf
ss
mov
push
inc
jl
hlt
cld
jp
mov
mov
xchg
or
adc
imulb
push
cld
sti
xchg
xlat
cmc
lret
lea
or
aam
popa
leave
inc
add
imul
bound
data16
outsl
test
nop
cmp
stc
mov
daa
jecxz
adc
sbb
das
mov
and
daa
cmc
pop
lcall
adcb
mov
xorb
stc
inc
in
dec
add
adc
mov
mov
rclb
in
add
int3
and
push
mov
in
das
and
in
add
and
popa
shll
xchg
in
jmp
popf
ja
aas
xor
in
cwtl
cld
push
adc
cld
mov
push
push
shlb
ja
out
les
push
enter
lods
add
push
adc
icebp
popa
cmpsl
xor
sub
jae
es
subl
rclb
push
dec
mov
mov
stc
xor
jecxz
inc
mov
lret
sbb
inc
or
ja
xchg
cmpsl
mov
dec
push
ret
cmp
scas
jle
jecxz
ja
mov
repz
or
cmpsl
gs
sub
mov
adc
popf
out
inc
push
outsb
xchg
inc
int
pop
and
xchg
aam
cmp
lods
push
gs
jecxz
and
xchg
cmp
rolb
mov
insb
xor
rolb
mov
stc
nop
adc
leave
adc
fsubrs
push
mov
jp
push
add
sbb
xlat
das
je
and
pusha
fldt
test
add
ret
cld
sub
rolb
cmp
fidivrs
adc
push
lods
adc
aad
inc
sub
ret
stos
jg
iret
push
xchg
xor
push
cmc
xchg
sbb
outsb
stc
push
mov
lock
movsl
jne
xlat
mov
sbb
dec
adc
repz
fstpt
sbb
push
imul
mov
bound
iret
mov
adcl
mov
add
es
imul
mov
fstl
add
sub
lret
rcr
arpl
xor
test
lods
std
movsl
push
inc
adc
pop
sub
inc
jle
push
mov
out
jge
fisubs
scas
iret
iret
test
iret
xchg
jnp
dec
rorl
das
adc
inc
ror
cmp
sbb
and
test
arpl
data16
xchg
pop
mov
les
jb
dec
mov
dec
movsl
or
clc
aaa
repnz
pusha
sarb
icebp
and
push
jl
cltd
pop
dec
bound
mov
in
add
dec
jle
cmc
jo
subb
dec
inc
add
mov
pop
push
mov
add
cmp
nop
clc
out
cwtl
mov
inc
dec
push
fs
sub
ffreep
and
sbb
pop
add
or
xchg
pop
adc
cmp
or
pop
fistpl
or
or
mov
shlb
data16
das
stos
cltd
mov
loopne
push
dec
inc
test
cmpsl
push
adc
cli
test
lret
sub
mov
dec
sahf
mov
dec
mov
xchg
jne
pushf
mov
mov
mov
fcomp
jl
and
sbb
mov
ds
arpl
test
mov
aaa
cmp
add
daa
outsb
call
sub
dec
cld
pop
xor
nop
fcomps
insl
pop
int
lahf
adc
inc
xchg
pushf
or
jp
mov
sti
pop
ficompl
fcompl
movsl
xchg
or
es
mov
inc
outsl
bnd
mov
jno
pop
push
adc
popf
cmp
enter
mov
cmc
inc
inc
mov
xor
dec
sub
mov
into
pusha
jmp
fldcw
aad
stc
push
arpl
and
iret
pop
jns
dec
jbe
mov
testl
hlt
pop
movsl
leave
mov
movsb
cmp
lret
test
adc
dec
test
int3
dec
xor
test
loop
inc
jb
jle
inc
cmp
sbb
mov
aam
dec
jl
push
cmove
add
push
xchg
out
xchg
push
dec
popl
xchg
and
cmpl
or
fldcw
mov
dec
mov
mov
lods
push
ret
inc
mov
jge
stos
mov
push
pop
inc
addb
pop
dec
cmp
fwait
dec
pushf
xor
jns
andb
les
mov
in
mov
cltd
stos
cmp
ret
pop
cltd
push
repz
xor
dec
cmpsl
jg
int
jno
lret
in
xor
push
push
cli
cmp
pusha
daa
or
pusha
mov
lahf
jmp
push
jle,pn
daa
and
pushf
push
pop
xrelease
cmpsb
rorb
or
repnz
xor
sbb
shl
jae
sub
fsubrl
lods
cmp
push
movsl
xchg
mov
out
and
xchg
mov
fstpt
add
aam
loop
pusha
sahf
sahf
into
jp
out
clc
test
adc
lea
sbb
cmpl
and
inc
or
aas
mov
data16
mov
xor
psraw
cmp
push
mov
std
jne
sub
sub
sub
inc
mov
int
pushf
imul
jl
push
mov
repnz
adc
dec
testl
pop
mov
lods
xchg
es
lret
in
xchg
mov
fsubs
fsubr
int3
sbb
roll
cmp
inc
das
pop
xchg
add
in
mov
and
mov
dec
xor
xor
jmp
or
out
imul
xchg
je
mov
loop
inc
sbb
pop
or
dec
in
data16
adc
mov
xchg
or
pop
sarb
ljmp
dec
xchg
std
jg
adc
and
sbb
dec
mov
notb
xor
mov
iret
dec
push
lret
mov
dec
or
mov
xchg
cli
pushf
or
out
mov
jl
sbb
sbb
cmp
mov
js
popf
mov
enter
testl
pop
int
sti
and
clc
std
imul
inc
mov
inc
xlat
fdivs
xchg
lahf
cli
mov
adc
repz
jg
push
stos
imul
shl
cmp
clc
pop
mov
js
and
jge
jge
push
sub
jl
inc
or
adc
fadds
mov
sbbl
sbb
fiaddl
mov
mov
xlat
lods
dec
pop
xchg
sbb
jb
in
pop
shr
sub
in
rcr
sub
push
test
loopne
mov
sub
lret
pop
sbb
test
andb
and
loop
cwtl
dec
dec
push
mov
movsb
cmpsl
sub
push
imul
cwtl
push
xlat
imul
aas
dec
mov
and
pop
mov
in
test
pop
xchg
fidivs
add
ret
sbb
mov
lcall
pop
lcall
adc
xchg
add
or
xchg
cld
idivl
sub
xor
cmp
dec
mov
mov
mov
inc
popa
pop
mov
inc
fmuls
mov
jp
repnz
push
inc
dec
pop
insl
jge
or
aaa
push
js
xlat
mov
sahf
adc
pop
scas
daa
sbb
mov
daa
pop
fsubs
mov
push
fwait
xor
pop
ret
into
jb
pop
xor
aaa
dec
repz
lahf
call
jmp
das
inc
add
mov
mov
leave
loopne
aas
mov
sbb
lcall
jns
cs
mov
push
mov
and
aam
test
dec
inc
ljmp
inc
in
xchg
xor
decb
subb
inc
pop
movsb
push
mov
shr
push
test
in
adc
xchg
add
dec
fldt
adc
push
xlat
icebp
cmp
pop
mov
xchg
icebp
mov
inc
cmp
or
xchg
push
sarb
lahf
adc
loope
and
sbb
push
sahf
pop
fisubs
ss
iret
out
out
lret
sub
bound
adc
jl
push
fidivrs
jb
push
fs
mov
xor
pushl
jl
lea
push
lock
mov
imul
movsl
lret
std
add
jl
mov
clc
and
icebp
push
leave
lcall
repz
std
cmp
or
mov
adc
adc
push
test
in
pop
fldenv
in
and
fwait
out
pop
stos
lods
adc
mov
fisubrs
inc
mov
adc
jge
mov
addb
lea
subl
adc
mov
xor
lcallw
mov
sub
mov
mov
inc
or
testb
faddl
mov
faddl
or
loope
iret
shr
movsl
mov
mov
shl
sbb
sbb
xchg
jle
cmc
xor
push
mov
add
mov
mov
xor
sub
test
in
xor
fs
daa
ljmp
and
jnp
ret
xor
sub
mov
fmull
shr
test
cmp
push
adc
aaa
dec
insb
adc
xchg
negb
jnp
in
cmc
sub
inc
push
je
fwait
xchg
dec
sahf
jno
dec
xlat
sub
pop
xchg
dec
cmpsb
in
mov
je
outsl
dec
or
jp
mov
cmp
std
xlat
pop
xchg
fwait
cmp
or
jmp
sahf
sub
or
jg
mov
in
jb
dec
stc
and
insl
sbb
pop
add
xor
or
loop
lahf
add
xor
daa
xchg
jmp
dec
cmpsl
aad
cwtl
and
insl
push
data16
xchg
cwtl
outsb
or
cmc
xor
inc
xorb
aaa
in
lret
ja
sarl
lret
mov
add
cltd
js
mov
inc
push
das
jb
and
xchg
cmp
jo
sub
pop
jle
jnp
insb
hlt
in
pushf
xor
mov
sub
dec
mov
mov
or
cmp
adc
loop
fistpll
mov
push
in
xor
or
sbb
or
push
insb
pushl
mov
mov
add
push
mov
inc
icebp
lds
rcrb
aad
adc
pop
mov
sahf
shrb
inc
hlt
xor
pop
dec
in
push
lds
data16
repnz
push
pop
jbe
add
call
fnstcw
dec
sub
cmp
xchg
cmp
sbbl
jmp
sbb
xchg
movsb
bound
pop
sbb
out
pop
ds
filds
call
cmp
imul
adc
and
push
divl
stos
sbb
or
shl
imul
xor
lahf
xlat
inc
cmc
fbld
adc
push
lea
pusha
outsl
shrl
push
insl
mov
and
sti
icebp
sarl
repnz
outsb
mov
jae
inc
inc
jmp
jp
cmpsb
fcom
hlt
in
inc
add
shll
sbb
lea
and
aam
and
cmp
push
inc
mov
btr
pop
xchg
mov
addr16
sub
mov
shl
jge
scas
aad
jnp
fdivr
lret
or
inc
xchg
mov
in
xchg
xor
jecxz
bound
mov
and
push
sti
lea
pop
test
or
fbld
inc
std
jb
clc
jmp
cmp
push
mov
lret
adc
cmp
pop
cmp
adc
je
fs
ret
pop
dec
push
int
fstpt
popf
sarb
lods
mov
cmp
or
cmp
pushf
push
dec
in
test
jge
ficoml
pop
nop
push
aas
and
mov
dec
daa
push
fisubrs
dec
pop
dec
ffreep
cmp
push
cwtl
mov
repz
sbb
sub
push
icebp
shll
adc
ja
data16
xchg
rep
xchg
and
and
addr16
inc
outsl
push
jle
and
and
ret
mov
popf
cmovnp
mov
dec
rcr
mov
pop
cmp
popf
push
push
icebp
pusha
jae
loope
js
and
daa
mov
icebp
stos
rcll
outsb
cmp
mov
in
inc
adc
scas
jbe
xor
adc
sub
add
jle
movsl
int3
loopne
cmpl
jmp
rorl
insl
sbb
test
push
fstp
scas
ret
notl
xor
cmp
out
jns
mov
mov
cmpsb
push
jbe
addl
dec
and
jp
mov
out
cmpsb
addl
repnz
sub
inc
cs
pop
jmp
cmpb
lret
adc
cmp
es
arpl
and
push
movb
arpl
cwtl
xrelease
nop
mov
ret
jge
fsts
rclb
and
idivb
bound
das
pop
cmpsb
lods
aaa
jno
push
xchg
inc
ret
or
lods
mov
sub
add
add
xchg
imul
jnp
mulb
push
xor
lods
xor
pop
cltd
jecxz
outsb
dec
lret
inc
lods
inc
aam
mov
clc
lahf
cmp
xchg
pop
add
dec
ja
test
push
popf
mov
pop
inc
cmp
push
push
addr16
adc
mov
arpl
cld
add
flds
fcomps
and
adc
push
popa
mov
test
insb
mov
daa
pop
ja
addl
fcompl
ja
cmc
adc
sub
shlb
cltd
js
inc
pop
out
xor
lret
jle
jne
cmp
jo
arpl
push
pop
inc
test
pop
sbb
push
mov
add
add
sub
leave
push
inc
cmp
xor
or
cli
loopne
xor
push
jb
in
xor
and
scas
cmp
cmp
out
adc
pusha
scas
jb
aam
xchg
out
push
das
mov
scas
arpl
add
clc
addr16
fs
jl
sti
shrl
mov
or
jl
fcomip
nop
loopne
and
or
xchg
mov
lods
out
mov
pop
ss
xor
push
das
jl
jno
mov
mov
aaa
jg
xchg
push
ret
daa
adc
xor
iret
lahf
aaa
cmp
cmp
jle
jecxz
xchg
adc
loop
inc
dec
dec
dec
adcl
ljmp
sub
lea
adc
or
cld
pop
loop
out
imul
loope
aam
scas
mov
orb
pop
xor
cmpsb
dec
les
sti
mov
dec
add
jno
sbb
gs
inc
into
sbb
push
mov
nop
cmpsl
mov
push
mov
push
mov
mov
sub
outsb
mov
sub
fwait
pop
icebp
decl
ds
aam
push
subb
sub
shrb
ret
insl
into
add
test
bound
xchg
gs
das
or
push
fwait
lahf
ja
loope
movsb
dec
push
add
jbe
ret
add
xchg
mov
call
push
out
cmp
aaa
cld
push
adc
dec
mov
pop
mov
mov
inc
sbb
lock
in
fcompl
add
sub
jecxz
sub
inc
repz
mov
and
xchg
arpl
add
and
cmp
int3
pop
cmc
xor
out
aad
xlat
xor
sub
cwtl
jnp
mov
enter
dec
sti
scas
mov
xchg
pushf
cmp
cmp
xor
add
movsb
mov
imull
test
mov
cld
xchg
call
lock
sbb
or
cld
cmp
sub
xchg
sub
inc
mov
icebp
jmp
jae
xchg
test
dec
cmp
fsubrs
cwtl
jl
sbb
xor
fldt
jl
testl
mov
dec
add
movsl
xchg
ds
test
xchg
lds
xor
in
jne
loop
adc
sbb
test
iret
in
hlt
cmc
push
sarl
add
jg
pop
jge
mov
xchg
psubsw
and
pop
jae
cld
test
xor
cmpsb
outsb
mov
mov
andl
lock
mov
mov
loopne
dec
call
sbb
xchg
and
fistps
in
mov
in
sbb
rcll
mov
jmp
add
xchg
mov
jno
ja
lock
rol
repnz
mov
into
adc
aas
jo
movsb
cmp
xor
jae
imul
js
push
mov
cmp
repnz
sahf
jo
xchg
iret
aaa
mov
cwtl
in
in
xchg
decb
push
sub
sbb
out
jmp
lret
pop
adc
inc
sub
lret
mov
mov
xor
in
sbb
add
adc
push
mov
add
leave
and
mov
test
mov
sub
add
cltd
sub
mov
inc
push
lret
cmpsb
pop
push
mov
xchg
xor
push
dec
or
aam
das
cmp
stos
mov
mov
pusha
daa
adc
push
ljmp
mov
or
mov
pop
mov
mov
xor
add
sub
test
ljmp
cmpl
js
and
sbb
sbb
popa
adc
mov
orl
mov
mov
popa
popf
mov
pop
cwtl
adc
xchg
mov
loop
leave
in
jle
fists
xchg
test
cmpsb
and
enter
js
mov
stos
adc
addr16
lret
xchg
pop
shl
sbb
adc
les
push
adc
dec
adcl
ss
xlat
push
mull
xor
mov
sub
pop
mov
xorl
xorl
and
adc
cmpsb
outsl
jne
hlt
sahf
aas
rolb
and
inc
enter
rcl
insl
mov
ds
aas
sbb
lods
mov
lret
push
fwait
icebp
jp
xchg
out
push
inc
push
dec
dec
imul
shrb
jmp
jp
pop
arpl
in
or
mov
mov
inc
xor
clc
mov
dec
imul
mov
out
mov
pop
or
cmpsl
movsb
push
insl
js
sub
das
repz
cmp
negb
mov
imul
mov
sbb
sahf
and
hlt
and
jge
dec
push
xchg
push
cmp
test
jns
movsb
out
jae
mov
iret
in
mov
sbb
mov
lea
daa
out
mov
xor
xor
enter
dec
dec
inc
cs
mov
aaa
mov
les
shll
pop
into
inc
mov
addb
lcall
add
cmp
data16
cmpsl
dec
add
jne
jge
mov
leave
scas
pop
push
pop
cmpsb
stos
inc
xchg
pop
or
fldcw
adc
cmpsb
adc
jnp
iret
jge
push
das
test
inc
jne
mov
mov
pop
xchg
insl
subl
fs
out
pop
rcrb
or
mov
mov
addb
mov
daa
jo
aas
cmp
je
mov
stos
cld
loopne
xchg
cmp
rolb
mov
push
je
add
jno
je
out
add
push
xchg
pop
xor
sub
cmpsl
cli
xchg
lret
mov
mov
jmp
xchg
test
cmp
xor
and
jbe
pop
cmp
bound
lods
inc
nop
pop
jb
sub
loopne
andl
stos
mov
popa
ja
scas
pushf
adc
repz
arpl
push
test
test
cld
cmp
sub
jg
cmp
dec
add
ja
mov
jnp
das
cmp
clc
push
lods
mov
dec
fcoml
ss
sub
test
es
addps
fwait
roll
xchg
mov
mov
xchg
mov
rcll
mov
frstor
popa
leave
into
pop
mov
xchg
inc
mov
std
testb
sub
or
call
adc
es
ficomps
shrb
pusha
or
pop
test
and
or
or
and
sub
xchg
ja
push
and
push
stos
jl
out
shl
sub
mov
shll
arpl
int3
fisubs
fcmovnbe
and
pop
test
mov
jmp
imul
test
xor
xchg
add
mov
add
xchg
push
popa
sub
mov
inc
loop
push
xlat
icebp
rcr
sbb
not
pusha
sti
fcmovnb
push
fcmovb
xchg
pop
xor
hlt
jmp
fdivrs
repz
cli
push
adc
mov
and
add
shl
and
bound
mov
add
xrelease
push
in
sarb
sub
je
std
subb
ss
sbb
fildll
imul
inc
push
sub
popa
jl
adc
xor
cltd
andb
test
in
imul
insb
scas
shlb
aaa
ds
sbb
cmp
sbb
mov
shll
out
lods
lcall
xchg
rclb
xor
fsts
adc
ret
sti
aam
adc
mov
push
push
pushf
rorl
aad
adc
or
clts
xor
js
iret
and
jp
cmc
popa
cmp
pop
inc
adc
call
push
in
test
addl
mov
cmp
popf
call
cmpsl
dec
fisubrs
dec
cmp
out
imul
mov
mov
aas
std
mov
ret
jbe
sti
jp
scas
jo
dec
sti
cli
and
fs
cltd
popa
fsubs
lret
sub
cmp
push
gs
sbb
push
sbb
mov
jno
ret
int
mov
jne
push
js
ds
jns
dec
iret
cmp
jae
andb
loop
data16
div
xchg
imul
ss
sbb
sub
jns
pop
xor
shl
xchg
jl
scas
hlt
mov
fidivs
mov
loop
jmp
lret
sub
xchg
out
pop
rorb
rorb
in
inc
bound
insb
cld
or
fisubrl
xchg
ss
dec
sti
inc
push
nop
xchg
sbb
xor
das
cltd
fsubp
xchg
cld
dec
ja
xchg
mov
push
mov
mov
bound
aas
clc
mov
cmpsb
mov
out
mov
fldl
ret
cmc
mov
ljmp
jne
fwait
les
and
outsb
lret
jae
push
cmp
push
jns
cmp
dec
out
xchg
jecxz
out
inc
sarb
insl
or
lods
jae
mov
and
push
imul
jle
cmc
cltd
pop
xor
test
xchg
inc
xlat
mov
sbb
int
ljmp
fisubrs
pop
inc
dec
push
pop
push
call
dec
enter
mov
mov
jge
pop
test
sbb
mov
mov
vphadduwd
lret
adc
push
add
sub
and
jae
fsubrl
movsl
cmc
out
mov
mov
and
fwait
inc
je
or
inc
pop
inc
mov
cld
adc
mov
cmp
xor
shrb
jb
inc
lahf
test
repnz
aaa
jg
inc
je
out
pop
call
test
jo
jae
jo
call
jae
pusha
sub
cmp
jne
lds
jecxz
xchg
iret
pop
std
dec
sub
xchg
repz
daa
push
fisttpl
jno
mov
inc
adc
cmp
or
jae
push
xchg
data16
js
mov
out
pop
pop
js
xor
fld
mov
dec
ds
sti
inc
cs
mov
mov
pop
push
cltd
push
addr16
cmp
mov
mov
lds
fbstp
inc
adc
jmp
inc
inc
push
inc
shll
std
cltd
mov
js
insb
push
sub
je
fildl
fmul
ja
sub
xchg
and
divl
outsl
test
jo
adc
test
jno
into
neg
push
movb
pop
xchg
and
xor
pop
into
xor
push
bound
paddw
and
xchg
or
in
insb
mov
leave
jg
popa
fnstenv
ror
cmp
test
arpl
mov
push
mov
xchg
mov
sti
lea
jo
pop
out
addr16
mov
cmp
sub
psrld
xlat
or
mov
mov
push
jmp
push
mov
push
fisubl
mov
pop
outsb
xor
jae
popf
shll
int3
adc
mov
pushf
popa
push
imul
sbb
mov
inc
lock
das
addr16
cmpsb
jb
stos
push
mov
in
and
mov
popa
adc
mov
fidivrs
add
int3
push
cmpsl
es
fmull
mov
push
and
sbb
adc
push
lea
mov
ret
lods
ffree
pop
roll
lcall
out
lret
pop
in
or
mov
leave
repnz
cmp
xchg
andb
test
repz
loope
cltd
or
jb
jle
ss
sbb
sbb
and
pop
lahf
mov
jns
mov
pop
hlt
jmp
test
mov
out
popa
mov
lods
push
xchg
stos
neg
movsb
mov
shlb
sub
pop
jge
das
test
xchg
jmp
adc
clc
pop
push
pop
and
adc
sbb
mov
mov
jle
insl
add
jne
es
sti
dec
loopne
repnz
jae
and
cmpl
cmpsl
push
movsb
dec
and
push
sub
repnz
inc
movl
xchg
lea
addr16
es
inc
movsb
cli
scas
dec
int
jg
sarb
cli
push
gs
gs
add
cld
movsb
test
xor
inc
cltd
adc
xchg
pop
scas
bnd
jp
adc
aas
mov
xchg
cmc
fisubrl
movsb
add
andb
xchg
jno
push
adc
cmpsl
scas
cmp
jl
fcmovbe
shr
sub
jnp
test
in
shr
inc
in
inc
call
addl
dec
ret
cmp
pushf
xor
xor
fidivrs
sbb
into
jns
imul
push
sub
shll
lret
dec
cltd
popa
lock
mov
popa
cli
add
push
out
fs
lods
fsubs
in
sti
out
test
fidivrl
fldcw
movsl
movsl
in
cwtl
imul
bound
lcall
pop
add
fldt
jbe
fsubr
cmp
jp
jmp
mov
mov
push
ss
loop
and
adc
idivb
pusha
cmpsb
mov
push
adcb
or
inc
pop
lock
sub
insl
jl
outsl
mov
loope
push
imul
imul
xor
or
ja
iret
sub
adc
xorl
add
js
dec
rolb
loope
pushf
movsl
es
ja
ret
mov
fucom
xchg
lods
fcompl
in
adc
iret
aad
xchg
sbb
scas
shll
nop
pop
lods
aas
repz
xchg
leave
and
cmc
fcoms
xchg
fmull
xor
inc
add
sbb
sub
inc
mov
ja
imul
out
insl
in
movb
inc
cmp
fsubrl
loope
pop
gs
icebp
jb
rcrb
sbb
lcall
lods
push
xor
int3
dec
sub
dec
cmpsb
cmpsb
mov
loop
xorl
mov
roll
push
cmovp
mov
shl
fisubrl
cmp
cmp
cmpsl
cwtl
jns
dec
testl
dec
push
das
enter
filds
roll
jle
inc
clc
hlt
pop
xor
xor
adc
and
dec
mov
cs
rcl
sub
sbb
mov
add
inc
jmp
mov
mov
add
push
enter
mov
jbe
int
cmp
mov
lea
movsl
pop
sahf
jg
mov
inc
mov
xlat
mov
fsts
adc
dec
stos
push
sbb
push
sub
mov
ja
call
dec
sbb
cmp
lds
push
xchg
adc
or
ficoms
jne
mov
shr
push
cmp
jbe
imul
sub
int
sub
test
out
inc
icebp
jnp
popf
lret
lret
pop
fwait
mov
jno
xor
xchg
mov
cmp
outsl
mov
sbb
je
int
xchg
scas
and
sbbb
mov
movsl
jno
add
mov
xchg
inc
push
fwait
mov
stos
testb
fsts
and
xchg
cltd
lock
mov
mov
es
mov
mov
lds
cs
or
mov
add
xchg
xor
mov
bound
cld
pop
or
js
stos
mov
popa
enter
enter
imul
test
ja
mov
scas
sbb
sar
push
movsb
repnz
arpl
xchg
or
dec
lret
not
rcr
mov
sahf
mov
orb
ret
inc
mov
sub
xchg
push
ja
cld
xor
aad
mov
fucomi
in
mov
scas
inc
in
sub
or
or
jns
dec
inc
mov
push
lds
dec
in
enter
xor
in
add
xlat
xor
roll
mov
inc
ret
sub
shrb
push
mov
inc
mov
outsb
dec
inc
inc
movl
sbb
icebp
in
cmp
enter
inc
mov
ja
dec
jecxz
faddp
clc
pop
leave
sub
sub
cmp
leave
add
mov
mov
sub
test
iret
adc
mov
add
fistpll
or
cs
inc
jmp
cmc
bound
popa
add
xor
mov
lods
mov
ss
addr16
jo
jae
push
mov
outsb
lahf
mov
scas
mov
add
sbb
and
cmpsl
mov
mov
mov
shlb
sub
cmp
arpl
adc
add
sti
ret
dec
leave
ret
cmp
mov
push
std
push
cmp
inc
cmpb
jns
nop
aas
cmp
inc
pop
in
cltd
inc
scas
jl
dec
xchg
fiadds
fs
fwait
data16
stos
and
or
mov
jmp
out
repz
cmp
and
cmpl
shlb
jge
xchg
dec
pop
lcall
mov
and
stos
adc
push
dec
sarb
int
test
or
push
pop
icebp
lods
lock
cmp
adc
inc
or
or
int
cmp
dec
mov
push
jecxz
jg
arpl
xor
mov
or
loope
or
lods
fcomps
cwtl
ds
test
outsl
cli
imul
arpl
inc
xlat
pop
ret
pop
addl
push
hlt
fwait
mov
aaa
push
hlt
mov
mov
test
push
jb
pop
divb
xchg
mov
push
dec
xlat
cmp
icebp
adc
pop
sbb
ret
imul
mov
add
cli
cld
or
mov
movsb
aad
sbb
js
pop
xor
adc
testl
jns
fs
xchg
hlt
imul
xor
mov
shl
cmp
mov
cmc
das
xchg
cmp
dec
xor
outsb
ret
movsl
movsb
lahf
inc
push
mov
adc
adc
cltd
xchg
out
cmc
pop
cwtl
pop
test
scas
incl
mov
sub
int3
mov
dec
in
add
dec
int3
pop
add
inc
or
inc
dec
pop
push
stos
imul
out
mov
mov
sbb
iret
push
pop
sahf
fst
fxch
enter
add
push
jge
rcll
fidivl
pop
inc
je
adc
adc
insb
call
jae
jle
mov
jae
fadds
pop
cmp
mov
or
xorl
cmp
test
mov
out
insl
mov
out
add
sbb
sbb
lods
ret
jno
dec
mov
das
popa
fsubr
test
cwtl
aad
or
iret
cmp
jnp
inc
cmp
push
mov
sub
std
call
stc
insb
aad
ss
test
dec
adc
mov
mov
sahf
jnp
in
cltd
test
xor
pop
jb
pop
dec
sub
iret
cmp
cltd
inc
dec
je
fildl
jns
add
or
stos
jmp
push
jb
shrl
sub
pop
in
ret
jno
sub
jge
inc
and
sbb
xchg
dec
in
pop
int3
iret
jns
inc
and
insb
xchg
inc
sarb
stos
mov
adc
repnz
imul
inc
pop
jl
test
jecxz
push
jbe
insb
jne
jp
bound
inc
loope
xchg
mov
jp
inc
push
mov
dec
cmp
or
jbe
sub
xchg
fstp
xchg
xchg
fcomp
sbb
pop
adc
movsl
les
and
pop
dec
mov
daa
clc
or
xor
mov
inc
mov
cmp
ficoms
xchg
ret
xor
jge
int3
inc
push
mov
scas
mov
andl
stos
sub
inc
iret
sbb
jg
cmpsb
sbb
arpl
adc
mov
test
inc
les
jo
je
add
xor
jge
cltd
pop
cmpsl
push
call
or
repz
or
inc
adc
out
pop
pop
pusha
dec
lahf
lahf
ljmp
xchg
or
in
mov
cmpsb
push
push
in
clc
fldt
xor
movsb
iret
push
jle
lcall
movsl
xor
scas
push
negb
and
outsl
cs
lods
mov
pop
clc
loope
enter
sbb
mov
sbbl
pop
sbbl
inc
xorl
int
cmp
daa
fcoms
ret
incl
lock
xchg
lahf
sub
or
cmp
mov
mov
pop
and
es
dec
push
cmp
fnstsw
xchg
lcall
bound
ljmp
and
repz
repz
mov
gs
xchg
xchg
rclb
ret
sar
icebp
jb
lock
xor
std
mov
adc
imul
push
movsb
and
lods
popf
adc
inc
int3
or
mov
fmul
inc
xor
shlb
push
inc
mov
xor
loope
dec
jl
jmp
in
stc
dec
cs
imul
out
clc
sbb
mov
stos
sti
test
jmp
pop
aaa
sub
ret
mov
push
ds
mov
dec
movsb
add
dec
or
mov
push
dec
push
out
nop
mov
ret
out
sub
in
jge
repnz
imul
push
inc
repz
arpl
cmp
sbb
rcrb
cmpsl
inc
pop
mov
cmc
loope
cmpsb
das
add
les
jno
push
repz
scas
fmull
aam
fistps
xor
repz
enter
bnd
and
or
fs
adc
test
arpl
or
cmp
xchg
jmp
xchg
js
rorl
xchg
out
adc
jns
fdivrs
nop
dec
popa
loopne
ljmp
xchg
adc
or
sub
roll
pop
xor
mov
sub
fistl
lret
push
stos
fstp
dec
gs
cwtl
bound
lea
ret
mov
push
inc
push
andl
orl
push
and
jbe
sar
add
lret
clc
pop
rorb
mov
sbb
lret
mov
and
pop
testb
sar
scas
rclb
pop
sti
fstpt
js
cltd
lahf
push
dec
rcrl
inc
add
lahf
xchg
sbb
push
mov
mov
jge
jb
movsl
je
inc
sbb
fdivrl
gs
mov
shlb
mov
jns
sahf
out
adc
sbb
lahf
and
cmp
cltd
out
mov
jno
jnp
or
push
push
sub
outsl
movsl
imul
stc
int
test
adc
mov
adcl
push
in
mov
mov
ss
mov
xor
dec
in
cmp
clc
xchg
cmp
xor
push
push
add
test
lods
mov
push
xor
adc
push
and
repz
add
ret
out
or
xor
push
push
pop
int3
adc
imul
push
mov
test
push
xlat
loope
jb
call
adc
sbb
into
aam
xchg
mov
out
iret
fildll
cmpsl
scas
icebp
inc
mov
jmp
ret
decb
negl
dec
ljmp
stos
ds
scas
mov
les
jno
divb
stos
scas
and
or
inc
icebp
cmp
sbb
xchg
dec
mov
mov
sbb
push
mov
xor
cs
fisttpll
sahf
mov
call
lods
icebp
push
inc
rcrb
ss
out
not
out
mov
xlat
pop
stc
popa
jae
mov
aaa
sub
in
mov
std
std
aas
movsl
xchg
in
fcmovb
fcompl
push
dec
cmp
push
jnp
pop
enter
dec
jmp
mov
dec
jmp
js
shrl
fdivr
lods
das
test
adc
call
pusha
and
sub
repz
repz
cli
push
mov
stc
lret
lcall
jae
pusha
sahf
push
test
jecxz
mov
pop
dec
fsubrl
or
mov
pavgw
iret
out
lock
pop
lods
mov
inc
rorl
inc
fs
xor
dec
fwait
mov
sub
or
inc
subb
ljmp
int
or
pop
fs
jmp
inc
je
fsts
adc
push
jle
hlt
shrl
and
fwait
popa
lock
mov
sbb
out
xchg
push
push
and
adc
pop
lods
mov
pushl
jo
sbb
mov
sub
jge
jnp
push
clc
cltd
sahf
add
enter
movsb
add
xchg
js
adc
out
fsubr
push
lret
lahf
scas
mov
stos
mov
shll
jmp
sahf
mov
out
xchg
shlb
rcl
test
outsb
loope
or
dec
sub
mov
inc
loopne
hlt
mov
mov
push
loop
arpl
shll
jae
popa
sarl
adc
pop
push
pop
sub
and
aam
jge
mov
mov
mov
dec
adc
push
dec
push
add
adc
int3
add
in
pop
sub
lret
mov
mov
pop
movsl
jae
mov
aas
push
aam
mov
xor
mov
add
lock
repz
orb
loopne
sbb
out
sub
add
outsb
mov
sbb
ds
add
fcmovnu
mov
sub
fld
scas
jg
adc
dec
jl
loope
clc
cwtl
imul
dec
cs
pop
adc
adc
stc
push
jg
les
sub
mov
pop
add
adc
lahf
dec
mull
push
test
ret
inc
sbb
fld
sub
xor
addl
sbb
out
mov
shll
push
addr16
sub
or
fcoml
mov
jno
push
xchg
sbb
ds
stos
movsl
stos
jno
flds
mov
xchg
mov
mov
jnp
neg
jae
cmp
ljmp
jo
cs
sarb
dec
inc
insl
sbb
in
cwtl
mov
mov
je
shlb
adc
and
rolb
inc
loopne
jp
je
rclb
sub
sub
xchg
popf
mov
pop
outsl
add
sti
testb
test
daa
in
jg
cmc
jge
xlat
xor
sub
jp
jmp
cld
mov
jmp
pop
pop
adc
or
pop
mov
inc
xchg
and
inc
rcrl
jp
outsb
mov
repnz
push
pop
movsl
cltd
rep
inc
sahf
call
mov
and
shl
test
jecxz
sub
fstps
push
lds
push
and
sub
bound
add
addr16
ljmp
mov
and
fisubl
negl
push
fwait
mov
scas
mov
data16
jns
lret
xchg
or
push
dec
add
xor
addr16
sahf
fists
insb
jae
jb
jnp
hlt
mov
dec
scas
ds
dec
sbb
sti
sti
out
dec
fs
cmp
std
mov
jge
lahf
fmull
sub
dec
nop
gs
push
ret
and
lea
movsl
pushf
movsl
cmc
or
adc
movsl
inc
je
insl
mov
lods
push
popa
or
mov
jo
insb
xchg
popf
inc
je
pop
shlb
popa
jl
stos
push
mov
xchg
outsl
jp
push
sbb
adc
jno
and
out
pop
sbb
push
pop
mov
jbe
ss
adc
ret
cmp
xor
adc
mov
addr16
add
mov
sbb
inc
xlat
mov
pop
xor
xchg
ret
outsl
aad
shlb
popf
out
popf
dec
ror
lret
enter
sub
js
pop
mov
arpl
cmpsl
fstpt
insl
jne
cmp
mov
lahf
cmp
leave
pop
sarl
imul
lds
cmp
loop
jl
pop
addr16
sub
cmpsl
pusha
js
inc
stos
sbb
dec
push
addl
push
sub
jo
xchg
lahf
and
push
lret
cmp
sbb
cmp
mov
pop
insb
inc
in
fnstcw
dec
inc
and
sbb
mov
fmull
mov
push
mov
cltd
int3
or
out
fidivl
cmp
add
inc
inc
test
lret
ret
insb
adc
sub
push
dec
adc
popf
xlat
add
sub
inc
daa
mov
inc
cmp
bound
xor
jbe
std
inc
or
in
cmc
jb
pop
addr16
test
addr16
fwait
enter
mov
or
push
xchg
popa
stos
enter
mov
insl
mov
and
out
fidivrs
xor
push
inc
shll
cmp
mov
sbb
push
xor
adc
repz
shlb
sub
in
adc
inc
jae
mov
add
mov
out
orb
ds
jbe
push
sbb
mov
mov
sub
in
adc
xor
pusha
aas
sub
call
ret
int3
repnz
or
pop
je
xchg
sub
loope
sub
sub
scas
enter
adcb
mov
sub
xor
sbb
mov
add
pushf
test
ss
insl
imul
push
ret
jmp
iret
and
loopne
and
inc
pop
inc
pop
mov
xchg
and
or
pop
ret
jge
mov
jg
dec
pop
dec
stos
pop
mov
mov
jae
sahf
cmp
sti
sbb
pop
inc
or
shrb
nop
jb
jns
popa
in
in
mov
mov
sbb
cmc
fdivl
cmc
pushf
cmp
cmp
jns
pop
pop
add
cmpsb
jecxz
xor
mov
pop
and
push
push
inc
mov
dec
cmp
mov
push
aaa
popf
test
mov
loope
in
and
popa
mov
outsb
pop
rol
push
in
pop
pop
je
pop
in
add
sbb
ss
in
lock
mov
leave
pop
lea
cmp
into
cmovbe
jg
insb
push
icebp
je
fimuls
dec
imul
pop
movsl
ss
rolb
or
fistps
add
pushf
dec
sub
inc
mov
into
dec
cmpl
stos
fldt
push
jb
out
or
or
xchg
test
faddl
and
sbb
ret
add
mov
mov
inc
hlt
pop
xchg
icebp
add
sub
pusha
lds
mov
pop
cmpsb
adc
add
pop
insl
or
sub
fisubl
mov
mov
xlat
mov
insl
aad
test
arpl
and
sub
sbb
idiv
cltd
cltd
lock
lcall
fstp
and
mov
inc
lds
inc
mov
add
sub
mov
dec
scas
sub
data16
pop
div
mov
xor
pop
cmp
inc
std
out
hlt
xchg
mov
lds
je
jb
negl
jmp
inc
nop
push
cmpsl
aaa
insb
rorb
inc
adc
popf
cmpsl
mov
repnz
mov
push
cmp
ds
sarl
dec
je
cmp
mov
lret
mov
jge
pop
push
xor
stc
jns
and
mov
stos
mov
inc
jo
or
std
cmpsb
test
leave
mov
adc
or
xor
out
jns
ljmp
fwait
sub
in
fstp
enter
add
mov
pop
out
sub
leave
mov
mov
adc
jbe
pop
mov
jbe
scas
fidivrs
imul
adc
mov
sarl
sar
add
add
mov
jo
mov
add
inc
mov
xchg
mov
lahf
shll
ds
inc
cmp
lret
incl
imul
mov
rcl
in
xchg
pop
inc
test
or
mov
sub
dec
insl
jns
sub
push
mov
lcall
aad
stos
jns
and
and
fmul
mov
push
or
mov
adc
inc
pushf
xor
jbe
jo
shrl
mov
lcall
push
fwait
pop
sub
in
sarl
in
imull
mov
enter
insb
and
sub
dec
dec
pop
sbb
xor
cmc
insl
lea
fimuls
scas
js
pop
xchg
repnz
inc
mov
fucomp
or
ss
cltd
push
repz
xor
mov
and
jo
loopne
sbb
xorl
iret
pop
or
sti
jne
sarl
jle
add
fsubl
jne
scas
shll
sbb
lret
or
fwait
push
ret
imul
mov
push
popa
sbb
rcll
jb
out
fwait
lock
aam
fucomip
mov
xorl
icebp
ja
push
icebp
inc
movsb
stc
cwtl
fwait
rcll
jnp
neg
mov
fcmovnu
in
inc
cwtl
fiaddl
test
jmp
addb
pop
scas
out
sub
cmp
insl
loope
xor
add
shrb
hlt
andb
dec
cltd
mov
in
pop
add
push
mov
test
or
jmp
into
popf
test
or
outsl
popf
pushf
fdivl
dec
xorl
push
ret
push
lret
or
mov
jge
xchg
dec
pop
jns
mov
xchg
bound
push
in
mov
int
outsb
in
ds
inc
xchg
enter
out
stos
pushf
inc
popf
push
mov
icebp
repz
xchg
inc
xor
in
dec
in
push
mov
push
cmp
fiaddl
lahf
or
and
repz
sub
mov
jge
xorb
push
cli
out
sub
push
outsl
stos
je
aam
push
divb
cmc
pop
push
in
jl
daa
js
mov
cmp
pop
jo
add
sti
sahf
popa
sub
add
xor
test
test
xchg
jp
jnp
ret
leave
ds
std
js
sub
mov
loope
lods
fwait
jae
sti
xchg
cmp
out
jb
sti
add
or
inc
sbb
and
adc
dec
sub
pop
test
cld
movsl
outsl
adc
mov
or
or
std
mov
ret
push
fnsave
pop
out
xor
jns
or
sub
push
fstpt
ss
aas
mov
gs
testb
mov
cli
push
xchg
mov
rcrl
mov
jnp
out
ljmp
lret
xchg
lret
sti
das
rclb
filds
xor
fadds
pop
jne
pop
ja
aas
fwait
adc
lods
mov
cmp
sub
popa
sbb
les
xchg
pop
and
mov
xor
shl
inc
dec
push
pop
test
hlt
std
fldenv
std
xchg
ficomps
cwtl
xchg
je
in
xor
sahf
add
stos
lods
mov
adc
push
ja
sbb
fdivrl
andl
test
loope
lds
dec
out
and
or
shr
adc
loope
push
push
outsl
jno
jg
dec
aaa
aad
imul
jo
mov
push
xorl
mov
or
movl
mov
add
call
lods
andb
inc
jb
cmp
in
push
shrb
mov
mov
pop
fisubrs
cmpsl
cwtl
loop
sbb
inc
out
dec
das
in
notb
or
sti
cmp
scas
sbb
das
or
xchg
inc
push
iret
test
xor
and
push
lea
fs
inc
rclb
test
in
cmp
fdivrp
xor
xchg
test
mov
imul
lahf
loope
mov
inc
xchg
add
or
and
inc
jns
pop
into
fisttpll
and
fisubrl
loop
lret
js
dec
mov
pop
adc
mov
dec
sbb
sub
dec
pushf
push
sbb
jo
and
hlt
movsl
cmp
nop
orps
popa
push
loop
xlat
mov
lahf
dec
test
cwtl
dec
lret
inc
gs
outsb
dec
js
clc
sbb
imul
jns
andb
fisubrs
inc
sbb
mov
fdivr
sbb
daa
push
add
push
push
pop
jne
in
in
mov
fxam
sub
scas
shl
add
sub
ret
inc
inc
test
test
inc
adc
lret
jl
mov
notb
lahf
cltd
pop
dec
loop
xchg
out
jle
xor
jle
mov
add
push
cmp
cmp
ds
fsubr
in
or
jge
mov
mov
xchg
sbb
iret
or
stc
ljmp
mov
pop
jp
ja
jo
mov
mov
pushf
stc
int3
cli
pushf
roll
mov
mov
add
call
mov
out
push
sub
sahf
outsl
push
pop
lea
jo
xor
mov
sti
add
dec
ljmp
inc
roll
inc
mov
pop
mov
out
ret
jmp
sbbl
pop
fiaddl
or
xor
fsubrl
repnz
jnp
xor
or
aas
out
test
xchg
push
xchg
pop
jno
sbb
mov
fs
inc
idivl
nop
or
daa
repz
mov
lcall
lret
jno
pop
mov
daa
insl
jl
adc
gs
push
ds
rol
aas
inc
jno
pop
mov
dec
pop
xchg
mov
stos
je
lods
addr16
outsl
xchg
shlb
jp
xchg
pop
add
mov
stc
loop
adc
test
test
jecxz
pop
gs
rorl
pop
hlt
or
ret
xchg
mov
dec
in
jae
push
repnz
mov
mov
jbe
mov
jns
mov
cmpsl
xchg
loop
add
sarb
rol
or
cld
cmp
data16
xlat
sbb
les
imul
enter
fadd
nop
nop
int
es
and
pushf
push
cmpsl
adc
jg
push
loope
popf
mov
arpl
lahf
xor
movsb
ret
mov
adc
inc
xor
cld
js
in
push
mov
stos
roll
cmc
add
shrb
lret
pop
and
jns
pop
out
cwtl
lcall
or
cmp
add
lea
fbld
mov
scas
fsubr
repz
in
popf
mov
lock
bound
fstl
scas
push
imull
jmp
pop
or
jmp
ljmp
mov
mov
push
divl
mov
add
sub
jmp
std
xchg
jno
das
je
xor
or
fcoms
stc
pop
jbe
jge
mov
ljmp
into
xchg
pop
push
jg
shlb
inc
cltd
lret
fisubs
ss
out
orl
cmpsb
or
lret
jo
outsl
push
roll
fistpl
mov
mov
inc
sub
je
mov
aad
sets
pop
push
inc
inc
sub
cmp
mov
lock
rcrl
push
int
ss
mov
cli
xor
push
nop
add
sub
add
adc
jno
gs
lret
cmp
xor
jae
mov
fcompl
out
das
push
mov
xor
xor
xor
sbb
and
fcoml
ss
pxor
out
lods
adc
clc
xor
rol
mov
sbb
add
mov
test
jmp
fisubs
cmp
sub
and
test
mov
mov
imul
in
out
push
mov
cli
fwait
repnz
adc
fldl
jg
cwtl
xchg
insl
mov
fs
dec
sar
adc
fldt
sub
push
movsb
loop
mov
call
das
pop
bnd
addb
xor
inc
addr16
mov
mov
fisubl
add
lcall
ret
dec
or
lods
mov
into
lds
iret
xchg
jge
xchg
or
push
cmp
inc
clc
pop
and
cmp
xor
mov
sbb
enter
cmc
repnz
pop
addr16
push
sbb
das
iret
out
ljmp
jmp
fnsave
sub
lsl
sbb
je
shl
movsb
cmp
roll
in
mov
enter
jle
cmp
idivb
inc
xchg
outsl
data16
fstps
fcmovnbe
stc
push
mov
pop
adc
or
outsb
lret
xor
and
pushw
cmp
sbb
add
imul
das
mov
pop
lock
jo
and
stos
popf
in
xchg
push
int3
and
inc
icebp
sbb
mov
popa
xor
inc
je
sub
xchg
inc
inc
loopne
mov
lret
idiv
movsb
popw
push
pop
sbbb
lret
test
popl
ja
scas
jo
arpl
loopne
and
mov
stos
inc
test
into
movsl
or
adc
shl
aad
push
cmpsl
aaa
lea
fwait
dec
add
inc
push
push
adcb
cmp
int3
insl
lods
or
pop
arpl
inc
hlt
lret
jecxz
jnp
and
push
push
fstpl
imul
push
adcl
push
inc
scas
ficoml
add
sbb
cwtl
and
ljmp
lods
or
and
jb
inc
inc
pop
or
ret
inc
arpl
xor
pusha
push
or
loopne
jecxz
cmp
shll
xchg
adc
in
lock
jno
aaa
ljmp
xchg
mov
push
mov
fadd
mov
dec
and
int
fcoml
movsb
leave
pop
adc
cmp
decb
shrl
stos
es
movsb
mov
mov
pusha
pop
test
jmp
push
inc
jle
clc
jmp
jp
je
xchg
into
je
roll
lahf
sub
sub
jl
mov
cmp
ljmp
in
and
scas
in
cmpsl
sub
lds
pusha
out
cs
test
mov
rcrl
fwait
push
fidivrl
loop
and
popa
ljmp
mov
popf
stc
arpl
scas
and
jg
jmp
inc
int3
push
lods
jmp
aam
cmpsb
lock
mov
xor
mov
push
arpl
push
nop
nop
dec
push
xchg
fstp
sub
lret
repz
aad
xlat
inc
jl
leave
jns
insb
and
jg
jae
mov
in
sbb
fs
iret
adc
jnp
jae
nop
insb
daa
jp
add
je
mov
clc
test
jb
movsb
gs
mov
fcomps
cmp
arpl
jb
es
inc
ljmp
cmp
mov
repz
add
shll
sbb
mov
cmp
iret
lds
inc
push
rolb
pushf
subl
jp
out
jbe
es
sub
data16
fildl
xchg
and
inc
insl
mov
dec
add
mov
xlat
xchg
out
add
in
imul
cmp
and
push
xor
popa
sub
cmp
or
leave
sbb
xchg
or
ficoml
adc
test
loope
iret
mov
dec
xorl
jbe
xchg
imul
ror
add
and
push
xchg
call
pusha
addb
repz
lds
jne
add
daa
arpl
adc
pop
mov
aad
decl
inc
sub
push
rorl
mov
dec
aaa
orl
xor
aas
nop
push
or
fdivrl
sbb
mov
add
xchg
cmc
pop
xchg
add
mov
test
ja
xor
shlb
ljmp
or
add
xchg
imull
mov
push
in
mov
and
das
in
mov
pop
or
inc
mov
pusha
sub
sbb
ficompl
jmp
xchg
mov
cmp
push
jno
ficompl
inc
jnp
dec
andl
pop
or
lcall
mul
js
jne
mov
stos
je
ret
mov
fldt
je
into
clc
xor
pop
fimuls
aad
dec
pop
iret
lret
pushf
sub
mov
scas
aas
cwtl
ss
or
lret
sub
add
xor
adc
rol
mov
adc
inc
je
rorw
mov
mov
loope
scas
and
mov
or
push
call
sbb
ret
mov
pushf
ja
xchg
iret
in
mov
outsl
stos
lcall
push
push
sbb
lods
or
mov
shrb
fsubs
mov
call
ret
aad
jnp
jne
inc
ss
adc
jecxz
vpmacsdqh
mov
sbb
out
lock
shlb
scas
inc
mov
movsbl
push
pop
dec
push
pop
lret
je,pt
enter
das
int
adc
dec
iret
mov
add
mov
xchg
repz
out
loopne
scas
sub
int
sbb
scas
dec
sub
je
movsb
mov
daa
imul
dec
sbb
push
xchg
add
jno
ja
movsl
jnp
enter
notl
andb
rol
sbb
push
enter
dec
movsl
jge
insl
sbb
lea
cwtl
jp
cmp
or
shrl
mov
xchg
loop
pop
enter
bound
ret
cmp
mov
pop
fisubrl
cmc
pop
aaa
and
push
ds
mov
mov
pop
in
xchg
fmuls
sub
push
subb
or
sbb
pop
gs
xor
imul
inc
aaa
movl
je
or
ret
mov
mov
push
into
lods
fnstcw
test
pop
sbb
fwait
cmp
into
and
mov
mov
xlat
sti
xchg
xchg
add
xor
cmp
js
mov
and
xlat
andl
in
jge
shll
loope
icebp
mov
rol
enter
cwtl
in
mov
movsb
xor
andb
into
jne
std
cmp
mov
sub
and
push
add
dec
mov
lods
mov
imul
sub
arpl
or
push
mov
pop
xor
call
xor
mov
xchg
jo
sbb
sti
add
mov
add
push
xchg
add
xlat
outsb
jl
adcl
lahf
jo
int3
push
cmp
adc
fists
insl
dec
mov
mov
pop
out
mov
mov
dec
cmpsb
insb
mov
dec
nop
pop
jne
and
subb
and
imul
shlb
rcr
fidivrl
sub
in
xor
sbb
mov
ret
lahf
aam
push
enter
xchg
imulb
sub
fld
xchg
inc
pop
push
push
in
cli
aas
aad
push
leave
mov
adc
test
shll
dec
add
scas
xchg
pop
icebp
pop
mov
add
mov
repnz
fmull
rcrl
lcall
pop
xchg
or
shll
pusha
dec
adc
sti
inc
push
daa
std
lret
sub
cmpsl
repnz
add
pop
lahf
sbb
clc
lods
inc
push
adc
xchg
loopne
mov
xchg
cmpl
or
fdivl
add
add
push
bound
cmpsb
divps
mov
jnp
or
imul
adc
repz
es
add
pop
loop
pop
mov
lret
push
mov
cmp
add
out
inc
rclb
out
mov
jmp
lods
inc
pop
mov
or
xor
cli
cmp
dec
xor
cmp
push
cmp
xchg
jge
push
lock
jns
xchg
fcomp
imul
or
loopne
imul
in
rcrb
pop
lahf
mov
js
sbb
call
dec
sti
out
je
push
int3
pop
xor
xchg
jmp
int
inc
loop
or
mov
popa
cmp
inc
lret
mov
test
aam
in
imul
mov
lods
das
xor
xor
outsb
cmp
cmpsl
xor
data16
out
push
jb,pn
cmpsb
mov
and
mov
iret
adc
decl
lret
cmp
or
std
std
std
test
add
mov
add
mov
jb
outsb
leave
les
cmp
sub
jns
inc
fcmovu
loopne
out
in
dec
clc
jns
int3
fadds
dec
mov
mov
cmp
cmp
sbb
xchg
add
and
scas
dec
push
mov
jg
fistpl
add
inc
jecxz
lret
mov
push
popf
adc
mov
pop
add
pop
cmp
mov
mov
daa
sbb
fwait
push
inc
dec
sub
and
jmp
fisubs
mov
push
outsb
shll
sti
data16
fdivrs
fdivs
shlb
jae
or
repz
jmp
inc
mov
jb
cwtl
and
sbb
mov
in
xchg
sub
test
dec
pop
mov
adc
or
or
xchg
jo
push
pop
xlat
std
mov
sub
ret
das
stos
push
ja
and
addr16
mov
mov
out
loop
loopne
or
xor
pushf
pop
cmpsb
xchg
out
mov
dec
dec
cwtl
rcrb
fs
jb,pn
mov
or
call
jge
push
lcall
in
sub
stos
mov
jnp
mov
jg
and
popf
ja
inc
imul
push
lods
mov
push
sbb
bound
sub
loope
ss
and
cmp
outsb
stos
movsl
lahf
pop
out
iret
pusha
push
into
mov
jo
aaa
cmp
sarl
mov
data16
xchg
mov
mov
adcb
daa
cmp
mov
jnp
mov
sbb
popa
repnz
or
mov
inc
push
xchg
testl
inc
or
mov
popf
in
and
aam
bound
aaa
inc
nop
sbb
or
fmull
sti
push
out
mov
ficompl
jmp
adc
popa
mov
ja
fistpl
xlat
fmull
sbb
icebp
dec
imul
fwait
mov
test
movsl
push
cli
and
stos
rcrb
les
fisubl
dec
cmc
push
sbb
aaa
mov
in
xor
andl
xor
stos
sahf
add
cmp
mov
pop
dec
pop
sti
iret
lret
mov
stos
mov
loope
and
in
jl
mov
pop
jmp
pop
mov
pop
push
rorl
fcmovbe
movsl
pop
ds
js
add
addl
xor
push
sti
mov
cltd
icebp
test
fdivs
jg
into
mov
andb
js
cmp
jle
sub
push
mov
pop
pop
sbb
loop
push
ljmp
out
dec
movb
sub
pop
sub
sahf
ret
mov
mov
shl
lods
sbb
cli
iret
jle
fs
cltd
dec
pop
les
xchg
pop
jnp
imul
out
mov
shl
cmp
pop
fistps
hlt
fwait
mov
adc
sub
push
je
ret
arpl
or
xor
addr16
outsl
push
in
fadd
sti
cltd
js
mov
out
cmp
xchg
dec
divl
fisttpl
lods
orb
cwtl
test
jo
scas
dec
or
add
pop
mov
pop
xor
inc
xor
fs
sub
test
cmpb
mov
fcmovb
xchg
jae
push
int
adc
loopne
icebp
adc
jmp
call
into
pop
dec
jbe
dec
push
ret
fdivrl
add
or
lret
xor
xorl
or
int
pop
pop
jge
push
repnz
mov
insb
pop
fwait
cli
dec
cmpsl
lock
jg
cmp
mov
push
cltd
jp
push
int3
dec
in
subl
push
pop
pop
and
pop
insb
mov
mov
xchg
fldenv
outsb
jle
xchg
rolb
jmp
fistpl
xorb
fisubs
clc
push
jge
sbb
arpl
je
fsubrs
test
inc
xor
lahf
push
adc
cli
stos
push
cld
sub
ds
out
stos
out
icebp
into
mov
mov
add
push
sbb
push
pop
ja
xor
sbb
mov
push
aam
fistpll
xchg
je
les
sbb
sbb
lcall
imul
js
pusha
dec
out
addr16
aad
push
and
add
mov
cld
test
popf
pop
aaa
int3
mov
push
cltd
aad
xchg
xor
cmpsl
mov
out
or
enter
jecxz
or
and
movsb
xchg
aad
cmp
les
push
push
mov
int
push
int3
scas
and
cmpsb
loop
mov
movsl
leave
adc
inc
imul
xchg
cmp
xchg
pushf
imul
fcompl
ficompl
mov
mov
pop
std
movsl
push
shrb
add
lret
mov
aas
jne
dec
push
adc
and
mov
mov
mov
flds
cmovae
lods
cmp
aaa
arpl
pop
sbb
into
leave
imul
loop
mov
js
push
push
pcmpeqd
cltd
jmp
mov
xchg
mov
shll
pand
dec
dec
fnstenv
cwtl
mov
test
add
jg
xor
dec
jmp
iret
add
dec
mov
and
mov
sbb
pop
add
je
out
dec
jg
dec
adc
icebp
mov
sub
xor
or
pop
scas
pop
dec
jae
or
leave
xchg
cmpsl
test
jge
adc
inc
fstpt
out
mov
out
sbb
inc
lcall
lods
dec
jg
cli
in
bound
jg
out
pushf
mov
lcall
sub
pushf
lcall
addl
fidivs
test
jae
push
xchg
mov
mov
push
dec
scas
popf
ja
push
mov
aad
lods
in
xor
in
pop
fdivrl
jecxz
push
sub
mov
hlt
mov
jnp
repz
ljmp
nop
inc
inc
push
jne
cmp
jb
cmp
clc
xchg
push
xorl
jge
inc
pop
push
fs
movsb
sbb
lcall
repz
mov
mov
out
movsl
test
in
inc
test
push
push
aam
and
sub
mov
xor
push
mov
dec
out
ret
scas
dec
sub
das
ret
mov
repnz
aam
out
jmp
insb
sarl
out
xor
and
cmp
jns
or
inc
cmp
pushf
mov
push
push
pop
les
or
lret
jmp
push
push
pop
mov
mov
test
or
dec
or
cmp
das
enter
mov
xor
push
lahf
sbb
mov
das
fisubrl
cmp
es
icebp
lock
push
add
out
xchg
adc
in
lods
add
inc
icebp
repz
and
fcoms
fadd
in
clc
jnp
cmpsl
push
adc
js
aas
pop
fsubrs
dec
add
pushf
jmp
iret
xchg
imul
add
mov
daa
adc
cli
fstps
popa
inc
dec
movsb
scas
popa
jmp
xchg
and
lock
push
pusha
pop
add
adc
test
stos
jo
in
sbb
xor
test
js
mov
insb
test
lret
cmp
xchg
loop
out
mov
and
adc
and
ja,pt
jns
cmpsb
fists
sub
xchg
mov
sub
adc
inc
ds
hlt
xor
imul
cmc
out
inc
cmp
jo
push
call
mov
ja
xor
cs
in
pop
pop
xor
outsb
scas
cli
sbb
push
sbb
or
out
cmp
pusha
add
cmp
in
pop
ja
daa
scas
cmp
mov
push
iret
int3
xor
and
mov
dec
ficompl
ss
jno
mov
mov
fs
ljmp
and
push
adcl
les
out
push
xor
jo
outsl
xchg
bound
btr
cmpsb
mov
sti
lods
cmp
shll
lods
in
or
sbb
lret
jmp
out
cmpsl
push
sti
cmp
jb,pn
mov
arpl
int
lods
lock
in
dec
test
dec
inc
or
xchg
mov
cli
xor
imul
jp
popf
icebp
push
insb
out
mov
push
mov
shll
stc
jmp
add
int
or
sub
and
shl
pusha
sbb
or
mul
and
in
aad
loop
add
lock
cmpsb
adc
subb
in
loopne
inc
je
push
push
pusha
test
dec
ret
rclb
ret
xor
xor
and
inc
push
movsb
xchg
cwtl
lahf
cmp
insb
jne
xchg
sbb
inc
fwait
inc
sbb
in
xor
mov
jnp
adc
lods
insb
es
push
pushf
rolb
stc
or
out
cmpsl
mov
inc
shll
jg
mov
or
in
adc
test
scas
mov
out
xchg
ljmp
mov
movsl
xorl
xchg
loop
push
std
daa
mov
icebp
cld
dec
outsb
arpl
xchg
inc
dec
mull
xchg
mov
mov
fistpl
xchg
into
mov
or
and
frstor
sbb
cmp
fidivl
imull
sahf
pop
in
lock
enter
xor
xor
xchg
inc
adc
movsb
xor
lret
in
push
sub
mov
and
fchs
jge
and
xor
mov
pushf
lock
in
aas
imul
shrl
pop
xchg
inc
out
pusha
and
loope
sahf
or
mov
cmp
xor
repz
sub
sti
jbe
loopne
enter
pop
cmp
xchg
pop
add
rcl
xlat
bound
fsubrs
rorl
xor
pop
es
in
xor
mov
ljmp
mov
pop
xchg
lahf
jne
mov
and
imul
inc
repz
lret
xchg
cld
pop
mov
ja
rorl
xchg
or
repz
fisubrl
push
dec
xor
out
or
mov
mov
imul
cmp
out
mov
adc
ret
call
dec
cmp
pusha
xchg
lods
mov
insl
dec
fcoml
sub
mov
xor
xchg
das
sbb
inc
lods
jne
shrb
leave
jg
and
shrl
int
cmp
adc
add
xor
cmp
lret
idivb
test
das
in
pop
ljmp
scas
and
subb
add
pop
ja
es
test
repnz
xchg
adc
or
mov
sub
aad
jo
jns
cmpsb
and
in
stc
jo
sub
mov
push
das
inc
jge
add
pop
lods
enter
sahf
mov
pop
aaa
icebp
int3
adc
mov
xorb
test
mov
rcrb
mov
jae
sti
sub
lea
jmp
mov
xchg
pop
sbb
add
pop
lret
bound
inc
ja
cltd
xchg
inc
fistpll
scas
mov
loop
and
je
in
mov
mov
sahf
lods
sarb
ret
das
fists
mov
popa
call
imul
cmp
xchg
insb
rclb
jns
cmp
or
inc
leave
jbe
xchg
mov
jp
push
clc
lock
testl
sbb
fwait
out
mov
cmp
or
and
icebp
hlt
or
add
dec
stos
push
or
xchg
mov
push
push
mov
hlt
loope
shll
popf
sar
popf
imul
add
dec
mov
or
out
inc
xor
hlt
add
xor
xor
inc
xlat
mov
clc
lods
movsl
xchg
jmp
insl
mov
sub
and
sbb
data16
sub
cli
loop
xchg
cmp
add
cwtl
clc
jp
ror
stos
adc
dec
invd
cltd
adc
call
or
jl
add
sbb
cltd
testb
sbb
mov
and
outsb
insb
mov
repz
scas
lahf
pushf
sub
sbb
and
in
pop
xchg
out
stc
fnstcw
js
jno
add
adc
loope
sbb
mov
sub
fwait
mov
cmp
outsb
mov
lcall
pop
sub
loope
sub
inc
cli
push
imul
pop
into
movsl
je
sarl
push
pop
mov
mov
inc
fsub
push
ja
repz
outsl
mov
test
int
jb
jmp
mov
push
pop
vmovntps
sti
add
lea
jl
mov
pop
je
jecxz
jmp
orl
ljmp
xor
mov
mov
inc
rorl
xor
mov
popf
aam
push
mov
aaa
xchg
push
lret
lcall
dec
addl
adc
sbb
cmc
insb
lret
push
jo
jmp
mov
fbstp
lret
pushf
mov
xchg
inc
lds
int3
pop
mov
sbb
std
inc
dec
je
call
hlt
fmul
cmp
pop
mov
out
imul
adc
adc
or
push
mov
das
dec
add
lds
or
dec
daa
jecxz
imul
shrb
arpl
cld
test
jecxz
mov
jl
icebp
fcmovne
aaa
stos
mov
mov
popf
and
idivb
push
inc
mov
mov
cmpl
xlat
jnp
in
adc
into
mov
cwtl
xchg
jo
jl
js
out
pop
adc
stos
fldl
push
nop
pop
int
ljmp
xchg
cmpb
add
sbb
jle
bound
inc
filds
std
sub
mov
rclb
sub
loope
movsb
jno
xchg
loope
inc
aam
cmpsl
mov
push
dec
or
sarl
in
and
mov
enter
iret
sub
mov
inc
out
push
aam
or
pop
mov
adcl
adc
test
nop
test
rclb
xor
xchg
repnz
fsubrs
xor
rcl
inc
inc
enter
xchg
jp
dec
xchg
xlat
movsl
jb,pn
aaa
and
xchg
adcb
cmp
pusha
std
shll
lret
stos
add
lods
sbb
aad
out
xor
mov
clc
lock
xor
dec
inc
sbb
test
fs
sbb
fucomi
pop
pop
jnp
fwait
rol
movsb
sbb
ds
aad
sbb
xchg
xchg
sbb
lcall
inc
adc
out
adcl
sub
test
cmpb
xor
scas
adc
nop
iret
and
pop
jp
div
pop
add
xchg
sar
inc
mov
pop
pop
psubusb
andb
jl
inc
leave
or
or
cmpsl
push
sub
mov
shlb
add
call
lret
xchg
pop
es
cmpl
dec
aas
clc
mov
mov
sti
jecxz
leave
out
mov
cmpsb
shll
popfw
popf
lods
mov
mov
inc
sub
pop
inc
in
daa
jl
fs
rol
rep
dec
mov
inc
adc
shlb
repnz
shl
sahf
xchg
push
dec
scas
pop
sbb
adc
add
pop
adcl
test
js
dec
sub
xor
xchg
outsb
lods
nop
fnstsw
push
push
or
xchg
aam
shrb
fucomip
in
push
jp
imul
scas
xchg
pop
mov
lret
lods
mov
aaa
jno
aaa
or
dec
cltd
sbb
nop
add
sti
xor
lret
lea
inc
dec
jb
adc
stos
addr16
pop
cltd
test
or
enter
int3
repnz
ror
cmp
cltd
loop
xor
sti
dec
imul
pusha
imul
out
pop
inc
jns,pn
movsl
ficoms
adc
pop
addr16
sbb
jo
ljmp
iret
cmp
hlt
jle
aad
or
mov
push
and
icebp
and
out
fisubs
mov
cmp
rclb
jnp
or
pushf
mov
lods
mov
inc
jo
cmpl
xchg
sub
mov
push
test
xchg
mov
push
pushl
cmp
dec
or
das
out
orb
adc
adc
lret
push
mov
adc
leave
pop
fcoms
nop
adc
orb
shl
mov
popf
ljmp
mov
in
xlat
mov
xor
stc
rclb
mov
inc
stc
testb
xchg
cmp
jmp
jbe
rep
lods
dec
xor
sub
mov
xchg
push
inc
js
cmp
adc
mov
inc
inc
adc
popf
xor
aas
mov
sbb
mov
sbb
cmp
scas
stos
inc
jo
std
xor
push
xor
lret
loope
rclb
pop
push
fcoms
push
movsl
test
sub
jl
dec
fisubs
xlat
sub
xchg
cmp
dec
lods
sbbl
xor
sbb
sbb
test
or
arpl
xor
sub
pop
sarl
sbb
clc
push
sbb
jmp
mov
insb
cmp
mov
cs
cld
xchg
ds
cmp
popf
cmc
jo
fisttpll
rcl
ret
xchg
jmp
xchg
subl
nop
pushf
pop
movsl
ss
add
sahf
and
in
sbb
pusha
mov
gs
xor
or
and
push
pop
and
inc
into
hlt
out
into
lods
shll
outsl
out
push
inc
dec
push
inc
mov
popa
enter
or
mov
les
or
loopne
pop
pushf
aam
aam
ficomps
and
aas
inc
mul
aam
rcr
fdivrs
cli
les
xchg
pop
imull
sub
mov
seta
mov
testl
inc
pushf
sbb
mov
fwait
cli
xchg
pop
insl
push
mov
jo
push
xor
arpl
push
inc
and
int
mov
push
dec
leave
xor
jno
sbb
jp
cmc
lock
mov
adc
jo
loop
lret
sti
or
dec
rcrb
insb
clc
sarl
mov
scas
mov
std
add
xchg
pop
fs
mov
mov
loope
sub
out
add
in
fwait
sarl
lods
push
std
loop
inc
mov
fsubrl
imul
add
lahf
or
cmp
shll
mov
scas
lods
mov
lods
ja
push
repz
test
gs
push
jb
push
cltd
mov
xlat
xor
pushf
test
fdivrs
test
fincstp
stos
lds
jne
icebp
ror
fmul
xchg
aas
faddl
or
stc
cwtl
lret
insb
pop
mov
lahf
mov
mov
rolb
shrl
push
lcall
jmp
adc
mov
push
js
inc
fld
cmp
mov
xor
and
jb
cmp
push
std
dec
cs
sub
xchg
xchg
xor
add
es
or
lods
jne
push
lock
add
mov
das
push
sub
hlt
lea
xor
pop
cmpsb
shlb
mov
jno
xor
pop
mov
xor
mov
cltd
sbb
int
mov
xor
xchg
jge
jnp
pop
cmp
push
adc
or
or
xchg
icebp
sub
mov
sub
and
xor
adc
xor
or
out
subb
xchg
testb
jg
xchg
mov
jmp
ret
das
mov
mov
loope
push
jg
ret
push
cmpsb
cmpsb
sbb
pop
sbb
out
mov
xchg
mov
fstpl
aad
lret
in
je
sub
jns
xchg
push
jo
daa
negl
inc
sub
xlat
pop
std
leave
or
popa
adc
jae
js
push
mov
enter
out
xchg
adc
xchg
xor
jnp
fstp
and
lock
mov
mov
lock
jecxz
add
fwait
and
out
fnstcw
xor
aam
dec
pusha
js
rcr
repnz
xchg
pushf
imul
arpl
daa
rcrl
or
sbb
js
addr16
pop
pop
sub
rcrl
dec
lcall
dec
and
jecxz
push
call
mov
sti
fs
fsts
cwtl
add
popf
xor
adc
mov
ror
add
out
stos
imul
outsl
or
add
and
ja
rclb
xor
movb
xchg
mov
push
shll
aaa
mov
sub
mov
in
add
or
mov
mov
add
xchg
lahf
push
add
imul
into
xchg
sbb
movsb
mov
repz
outsl
cmp
xchg
inc
outsb
ror
add
into
adc
sti
bnd
nop
je
jle
ljmp
add
jmp
addr16
xlat
add
aas
int
cmc
push
in
sbb
mov
pop
jmpw
mov
paddusb
aad
xchg
or
vpunpckhqdq
mov
aas
fcoml
mov
cmpsl
or
pop
adc
mov
lds
sbb
addb
ficoms
push
test
negb
cmp
dec
in
test
cmp
jb
push
std
add
and
stos
or
sahf
cmc
popa
bnd
fidivl
cmp
jge
jmp
push
pop
mov
es
pop
fsubs
notb
xor
pop
inc
mull
dec
inc
fucom
pusha
and
sahf
push
jp
mov
push
aam
jmp
out
lock
scas
adc
cmp
popf
sub
lods
fimuls
scas
mov
stos
xchg
in
add
data16
rclb
js
into
fdivl
lahf
inc
sub
outsl
add
jbe
push
out
mov
movsl
pop
dec
push
add
sbb
cltd
loopne
mov
xor
cmp
xor
daa
cmp
outsl
sub
sub
es
cwtl
pop
out
xchg
movsb
inc
jg
jg
lds
xchg
push
push
jp
outsl
fstl
cmpsl
add
insl
int
jl
fcoml
pop
popf
mov
stos
lods
sbb
fidivrl
jg
fisubs
popa
mulb
adcb
adc
int
inc
sbb
mov
adc
mov
fnstcw
fwait
movsb
fisubl
adc
sbb
sbb
ret
mov
xchg
push
xorl
push
sub
pop
ja
xchg
test
push
mov
fldt
xchg
sbb
and
mov
out
mov
cmp
mov
push
stc
jne
sbb
loopne
bound
cli
cmpl
fcompl
sub
loopne
fs
or
jge
jno
mov
test
push
daa
mov
ja
aas
mov
mov
les
pop
xor
inc
outsl
pop
pop
pushf
jl
pop
push
sub
cvtpi2ps
test
mov
es
xor
sub
sub
cmpsl
out
les
add
or
sarl
pop
movsb
lds
and
cmp
xchg
aad
mov
loope
std
leave
inc
or
cli
outsl
loope
imul
dec
das
scas
mov
inc
shrl
mov
iret
mov
popa
xor
mov
mov
add
or
aas
test
sbb
adc
adc
test
shll
popf
gs
es
jb
movsl
adc
jmp
pop
or
mov
mov
adc
jae
dec
dec
out
inc
repnz
clc
out
xor
lcall
or
movsb
sbb
xor
xchg
inc
cs
mov
scas
xchg
xchg
outsl
repz
lods
ds
dec
mov
jecxz
daa
icebp
imul
in
sahf
mov
shl
mov
xchg
add
jmp
test
out
lret
sti
adc
iret
data16
ja
push
inc
push
xchg
adc
push
shl
cmc
sahf
lods
in
lea
nop
pushf
or
xchg
outsb
or
andl
pop
pop
lret
test
push
inc
loope
inc
mov
mov
xchg
push
out
cmp
cmc
pop
rcrl
nop
inc
leave
dec
jecxz
mov
cmp
push
loope
adc
push
mov
push
inc
daa
outsl
pop
or
mov
repnz
cmp
xlat
adc
lea
in
repnz
sub
stos
push
rol
out
sbb
mov
or
or
xchg
arpl
mov
lock
imul
jl
es
sub
sbb
adc
out
dec
pop
inc
cmp
jno
mov
jns
pusha
repz
or
sbb
jp
addb
and
rolb
aad
pop
mov
jb
jmp
push
pop
mov
je
out
ret
addr16
loop
jmp
cltd
mov
pop
stos
cmp
popf
xor
jg
ljmp
cmc
mov
push
xor
sub
lret
cs
dec
jbe
xor
xchg
hlt
mov
testl
mov
cmp
inc
int3
or
int
out
push
xor
fldt
push
pop
push
adc
inc
dec
pop
adc
insl
js
xor
es
ljmp
lds
or
push
mov
cmpsb
pop
jnp
mov
mov
cltd
add
push
push
ds
mov
popf
push
and
orl
sbb
fists
scas
cli
sbb
fnsetpm(287
aam
xchg
outsb
xorb
aas
aaa
shll
pop
lds
lret
stos
jns
cli
das
dec
fbstp
hlt
mov
lahf
push
fisubl
roll
pop
push
test
add
out
dec
and
pop
lcall
adc
mov
xor
sbb
cmpl
imul
pop
and
jb
repnz
arpl
scas
orb
dec
rclb
lods
xchg
adc
call
test
xorl
xchg
push
int3
in
cmc
nop
push
test
repnz
jne
test
aaa
sub
mov
iret
adc
dec
out
fbstp
dec
pop
into
cmp
dec
dec
mov
mov
xor
pop
cmpsl
in
in
cld
push
sar
fprem1
cbtw
mov
mov
cmp
shll
mov
push
insl
stc
sbb
xchg
sti
adc
and
repnz
mov
out
or
pop
lock
fst
fdivl
cli
les
dec
inc
mov
dec
push
xor
test
stos
inc
sub
push
loope
aam
in
lcall
xchg
xor
hlt
gs
or
xchg
jmp
les
mov
test
adc
daa
fwait
ss
ljmp
pop
sbb
push
jmp
int3
add
mov
lds
push
ljmp
add
popf
pop
outsb
scas
mov
sbb
xchg
or
loope
cwtl
mov
mov
das
jmp
out
mov
xchg
outsl
pushl
and
out
inc
stos
push
pop
out
loop
push
xchg
in
mov
pop
mov
repnz
push
adc
fwait
in
mov
daa
dec
stos
int
push
dec
es
ss
hlt
push
jecxz
add
repz
xor
xchg
xorb
sub
xor
insl
in
nop
or
repnz
mov
jle
mov
bound
out
cld
insb
fwait
xor
dec
les
in
lock
scas
pushl
jo
js
das
cmp
xchg
jge
fnstcw
inc
pop
pop
mov
jle
shlb
mov
std
add
add
scas
adc
in
out
lock
gs
sti
xor
lahf
xchg
cmc
jno
fcmovbe
imul
mov
pop
inc
ret
mov
cmp
sbbl
push
ja
jbe
cltd
sbb
lods
loopne
bound
inc
data16
mov
adc
jo
dec
icebp
fadd
mov
xor
mov
les
mov
insb
scas
xchg
dec
bound
mov
in
inc
push
into
dec
and
sbb
ret
test
or
test
pop
mov
lds
mov
sub
std
lock
bound
xchg
mov
add
xlat
sub
movsb
push
pop
push
movsl
stos
je
std
and
enter
mov
xchg
inc
adc
jge
push
loopne
cli
xchg
lds
mov
or
mov
adc
xchg
mov
cltd
inc
cmpsb
or
movsl
jb
sub
xchg
inc
lock
hlt
push
dec
incb
mov
mov
outsl
mov
loopne
xchg
dec
mov
sti
adc
sbb
popa
cmp
dec
add
aam
and
inc
lods
jns
pop
icebp
fs
push
rcl
into
mov
pushf
das
repnz
addr16
out
cmp
jbe
mov
pop
pop
lods
imul
enter
and
and
mov
mov
popf
popl
xorl
jo
cmc
lret
mov
jae
and
jp
dec
mov
js
sbb
mov
scas
or
xor
push
xor
idiv
add
sbb
shll
xor
mov
inc
xor
pop
dec
lods
in
aaa
outsb
push
leave
and
cmpsb
xchg
jo
test
fisubrl
pop
mov
aad
jne
push
decl
pop
shrl
lahf
stc
and
mov
mov
cmc
mov
lret
cmp
and
adc
pop
lods
ja
inc
imul
xchg
fidivl
into
add
push
les
pop
aaa
and
push
push
outsl
pop
xor
and
hlt
lods
cs
xor
mov
mov
test
lds
cs
sahf
sub
jne
mov
sub
icebp
fsubrl
aam
cmp
push
jb
sub
inc
jb
stos
add
ret
mov
push
xchg
push
pop
push
sbbb
push
inc
outsl
rorl
push
xor
stc
loopne
andl
into
pop
sbb
xchg
dec
sbb
dec
inc
jge
out
xor
inc
ret
push
jl
or
test
push
and
adc
das
sahf
push
data16
cltd
cmovnp
imull
addr16
add
mov
add
add
and
cmp
cld
daa
ret
jbe
push
out
icebp
fwait
scas
xchg
popf
xor
xor
repnz
xorl
mov
out
push
loope
xchg
repnz
es
adc
ds
mov
gs
add
sbb
xchg
xchg
mov
jg
das
subl
xor
sti
jg
loop
leave
pushf
aam
push
or
loopne
lcall
adc
mov
cmp
pop
gs
and
jl
mov
push
and
fndisi(8087
fbld
fwait
sbb
loopne
fwait
mov
dec
push
jnp
fmuls
shll
xor
popf
xor
aaa
pusha
dec
or
or
xchg
imul
add
xor
loop
movsb
fiaddl
test
jmp
pop
ljmp
popf
jbe
int3
ja
jecxz
push
mov
jb
mov
and
lret
xor
js
push
fnstsw
add
mov
and
inc
stc
fwait
sub
adc
add
and
push
xlat
pushf
imulb
add
or
shrl
ss
ja
pop
inc
sub
jns
xor
cmp
movsb
ds
adc
lock
sbb
fimull
xor
mov
dec
les
addr16
push
xor
sub
out
pushf
pushf
xchg
mov
scas
jge
dec
mov
fdivrl
enter
cmpsb
daa
mov
jmp
mov
in
push
out
mov
add
sub
adc
test
dec
and
out
mov
pop
mov
lock
test
xor
or
mov
sbb
sbb
push
xchg
dec
lret
push
xor
sti
cmpb
fwait
js
ds
lods
dec
fcoms
sbb
xchg
jmp
movsl
popa
and
or
iret
push
cmp
in
fdivs
xor
outsl
push
pop
mov
mov
mov
inc
dec
add
adc
popf
and
cmpsb
ret
xchg
mov
mov
mov
mov
sahf
xor
xor
mov
ljmp
cmp
xchg
push
inc
mov
pop
jmp
sbb
xchg
rorl
jmp
test
dec
mov
popa
das
test
mov
movl
test
push
scas
rolb
inc
or
idiv
aam
test
repz
or
push
mov
and
fisubrl
jbe
call
jo
push
enter
mov
loopne
fisubrl
scas
and
push
es
xchg
inc
adc
ror
lret
xchg
fldt
out
sbb
mov
cmpsb
adc
push
sbb
mov
fs
and
push
xchg
push
xor
daa
cmp
add
pop
pusha
pushf
lods
jne
pushf
sub
fmul
out
movsb
and
popa
lock
jle
std
push
and
mov
inc
push
das
push
xor
push
std
lods
fsubrp
ja
xorl
inc
idivl
add
int3
adc
dec
ds
mov
scas
mov
in
pop
push
push
jecxz
jge
xor
cmpsb
and
jno
xchg
or
jbe
cmp
sbb
cmpl
lret
loopne
in
pop
pop
or
test
inc
test
xchg
je
fnstcw
and
cs
fiadds
and
cmc
sbb
ljmp
jns
push
rol
mov
push
testl
or
fs
mov
push
push
xchg
leave
push
mov
rol
repnz
shr
push
cmp
adc
std
arpl
pop
dec
dec
lret
dec
pop
dec
pop
test
cld
outsb
and
lret
or
jns
and
cmp
pop
sub
jmp
js
sub
jns
cli
mov
dec
stos
cld
mov
lods
dec
mov
stos
lea
test
in
cli
enter
inc
test
fstpt
or
add
sub
sub
xchg
scas
inc
cmp
lock
clc
mov
bound
xchg
mov
ret
adc
pop
pop
aam
daa
fnstenv
inc
xchg
ret
push
or
jmp
add
mov
inc
push
inc
out
mov
sbb
int3
jno
stos
pop
in
outsl
adc
push
test
inc
aaa
mov
adc
fmulp
loop
aad
sbb
les
ret
mov
or
stos
popf
fldenv
rcr
inc
pushl
inc
jns
cs
or
and
cltd
imul
jl
inc
push
mov
pusha
xchg
push
daa
andl
test
pop
insb
notl
cmp
imul
pushw
movl
je
ja
ja
idiv
jbe
rolb
aam
and
leave
je
pop
dec
mov
jmp
addr16
stos
inc
bound
mov
jno
jecxz
lcall
test
addr16
or
outsl
and
mov
loop
fdivr
xchg
and
ftst
incl
je
push
flds
jp
test
mov
icebp
in
xchg
mov
imul
xorl
rep
mov
fbstp
lds
add
sub
out
xor
testb
lock
iret
xor
lahf
dec
xchg
jb
das
call
testl
popa
loopne
jp
jl
scas
cmp
lret
mov
call
leave
xchg
lea
pop
push
lahf
ret
call
fdivp
adc
xchg
cltd
add
arpl
rol
inc
push
popf
stos
out
and
adc
leave
cltd
rcrb
push
or
iret
inc
fnstsw
dec
sub
sub
call
mov
dec
popa
das
outsl
arpl
clc
sti
in
xchg
and
push
dec
movsl
cld
and
sbb
pop
push
shl
js
and
xchg
push
jmp
aad
xchg
push
jmp
dec
mov
jae
lock
sub
movsl
fs
testb
sub
fidivl
jecxz
pop
jne
pop
sub
sub
cltd
add
frstor
xchg
push
mov
add
sbb
jmp
mov
mov
add
jecxz
add
decl
or
mov
js
lahf
cli
sub
sbb
pop
mov
popf
adc
enter
jb
lea
sti
cmp
dec
jp
and
adc
cld
jge
out
cmp
sbbl
ljmp
jb
gs
mov
mov
jne
dec
ds
test
adc
or
repz
adc
aas
test
dec
jno
add
test
dec
xor
and
out
mov
cmp
movsb
in
loopne
fistps
push
mov
xorl
aas
repz
dec
rcll
xchg
inc
mov
pop
inc
inc
adc
ret
gs
dec
test
add
std
shll
mov
lret
and
popa
jae
in
adc
mov
mov
sbb
ficomps
lods
jecxz
leave
pushf
mov
data16
sub
dec
fstpt
out
cltd
inc
sub
adc
div
andl
pop
jg
aas
xor
jne
mov
cmpsl
stos
cmp
jp
inc
stc
les
sbb
lcall
in
inc
and
stos
or
push
cltd
ficoml
lods
out
jns
jecxz,pt
insb
push
in
sbb
jnp
and
sub
jle
xchg
lahf
mov
mov
sbb
fchs
jmp
in
lcall
mov
sub
faddl
cli
dec
push
aaa
pop
gs
add
cmp
and
pop
xchg
jle
bound
or
adc
jg
clc
xor
or
xor
lods
faddl
pop
notl
scas
sbb
mov
out
mov
adc
in
in
cltd
rcrb
addb
push
ljmp
test
adc
ret
fnstcw
ds
je
or
ja
adc
cmpsl
movsl
addr16
push
inc
enter
ljmp
sbb
xchg
ljmp
test
jno
add
daa
add
mov
lock
cmp
shlb
xchg
ss
jmp
inc
call
mov
repnz
inc
push
add
sarb
jle
jae
mov
ja
loope
sub
and
pop
cwtl
movsl
jle
mov
mov
adc
mov
imul
loop
jge
test
pop
lods
adc
xchg
jno
cmp
movsb
add
fbld
fldt
mov
push
jnp
lea
ret
cmpsb
call
mov
int
sbb
imul
xor
rorl
enter
mov
pop
and
adc
loopne
das
xchg
clc
stos
movsb
inc
inc
stos
shr
test
stos
sahf
push
orl
lcall
lods
mov
xchg
arpl
cmpsb
das
stos
pop
std
insl
clc
mov
mov
das
lock
and
outsb
xchg
xor
sti
test
cwtl
dec
mov
dec
test
rcrb
mov
shr
movsb
or
test
cmp
lret
into
loopne
paddq
and
cwtl
out
xchg
cmp
dec
sbb
mov
out
repnz
cmpsl
push
cli
rol
ret
fnsave
pop
inc
stc
cld
popa
std
in
pop
ror
addr16
addr16
mov
jnp
jmp
or
insb
and
xor
enter
push
or
jne
nop
shrb
pop
test
mov
xchg
lret
xor
mov
mov
test
inc
clc
inc
sub
push
mov
outsl
aad
cmp
xlat
add
out
test
negb
xor
mov
push
jg
pop
fdivrl
in
lods
push
lods
into
mov
loope
jae
adc
jae
dec
mov
sbb
shrb
fbstp
or
test
adc
push
add
push
jb
mov
xchg
ljmp
test
jo
jge
jae
mov
inc
xor
rol
jbe
and
outsl
adc
pop
jo
and
aam
cmpsl
and
xchg
in
cld
push
xchg
insb
in
dec
mov
mov
es
outsb
cs
aas
imul
stos
ja
out
sub
xchg
dec
roll
inc
push
mov
mov
jle
mov
sbb
cwtl
jmp
shll
imul
lods
inc
xlat
out
mov
pusha
test
inc
call
ja
sahf
je
sub
and
jnp
outsb
dec
push
fcoml
jb
jge
or
sub
adc
or
sub
xchg
push
ss
fiadds
repnz
dec
aas
add
cmp
xor
jae
scas
xor
push
dec
xlat
cli
inc
mov
inc
push
push
mov
jnp
cltd
push
je
cmp
push
mov
dec
jecxz
int
imul
js
or
cmp
movsb
cltd
adc
icebp
ret
iret
in
icebp
add
mov
dec
lcall
mov
imul
cltd
into
pushf
push
pop
xor
outsl
leave
xchg
es
in
jno
decl
mov
jge
int
out
pop
out
mov
jnp
popf
es
ret
mov
fistl
je
cmp
arpl
shl
pop
cld
ret
inc
adc
mov
rcrl
test
in
hlt
pop
in
pop
aad
loop
loopne
insl
xor
mov
pop
insl
lret
cltd
push
add
jbe
iret
mov
and
flds
adc
mov
out
mov
mov
outsb
inc
cmp
cld
mov
add
sub
xchg
and
mov
enter
std
xchg
enter
adc
pop
fisttps
fcmovnbe
mov
fstenv
fistl
inc
jmp
xchg
jle
ret
adcb
imul
xor
xchg
sub
push
lods
push
sbb
adc
adc
xchg
mov
in
adc
xchg
inc
adc
pop
outsl
mov
adc
inc
jge
mov
out
cmc
push
cmp
addr16
pop
lcall
cs
popf
sub
cmp
out
sbb
sbb
rcrb
mov
inc
loopne
push
test
rcl
andl
sub
hlt
pop
xlat
mov
sbb
into
dec
xlat
lock
or
jb
lock
pop
adc
out
dec
sbb
mov
test
lods
into
cld
fmuls
inc
pop
sbb
das
jae
or
xor
cs
ror
adc
push
push
lahf
aad
xor
addr16
push
in
popa
xchg
dec
push
mov
outsl
lds
test
jmp
rcrb
lds
das
adc
prefetch
or
mov
lret
push
adc
jecxz
and
mov
and
orb
dec
dec
bt
mov
or
xchg
inc
loop
mov
pop
fst
int
lods
pusha
mov
mov
push
sahf
pop
jecxz
and
and
mov
xchg
ds
cld
xorl
dec
popa
mov
cmp
add
fwait
adc
pop
pop
xor
pop
das
and
or
dec
add
div
adc
dec
mov
xchg
pusha
sub
pop
jmp
push
scas
push
mov
test
pop
lret
xor
lret
lds
mov
fs
add
fmuls
sub
test
sar
out
adc
push
xchg
xchg
sbb
pushf
jle
sarl
cmc
outsl
gs
sbb
cli
xchg
cmp
pop
inc
mov
stc
adc
int
pusha
pop
sysenter
mov
ss
cmp
dec
sub
cs
add
stos
dec
insl
mov
add
out
sbb
inc
inc
mov
jno
cmp
dec
mov
fidivrl
jb
cltd
call
jl
movsl
inc
pop
movsl
cmpsl
and
pop
and
cltd
xor
test
loopne
xchg
fstl
jmp
mov
hlt
pop
adc
and
cvtps2pi
outsb
arpl
mov
cli
inc
insl
inc
ds
jge
cld
fdecstp
inc
or
cltd
fdivrs
aam
mov
lea
popf
mov
ret
inc
push
add
jb
push
jg
imul
push
das
stos
repz
jno
lret
cs
jno
and
aad
daa
mov
incb
dec
xchg
xchg
popa
lret
and
sbb
imul
jnp
push
rcll
hlt
or
ljmp
dec
xchg
push
movsl
cmpsb
aaa
jo
sub
loope
mov
ss
dec
or
xor
cmpsb
into
js
pop
add
cltd
aaa
push
sbb
aam
jbe
jecxz
lods
jno
pop
sahf
pop
or
pop
and
test
call
ljmp
mull
scas
and
rcrl
pusha
cmp
into
vmovhps
stos
out
lock
xchg
gs
jns
out
ds
or
aad
xor
xor
xchg
cmp
mov
push
cmp
fs
xchg
cmp
mov
pop
add
arpl
imul
les
fsubl
lock
push
mov
dec
inc
data16
imul
jmp
mov
hlt
arpl
je
movsb
pop
push
and
or
cmovle
pop
xlat
shrb
inc
mov
gs
mov
and
cmp
stos
fwait
pop
add
dec
xlat
lock
aad
inc
sub
andb
mov
mov
loope
scas
cwtl
mov
and
fs
nop
out
sahf
jne
mov
icebp
inc
dec
outsb
and
pop
in
jge
pop
xchg
jne
fadds
and
pop
aaa
pop
jp,pt
mov
dec
pop
imul
popw
sub
das
mov
xchg
lret
inc
xchg
xor
aas
jb
pop
out
inc
enter
ror
out
shrl
mov
lret
aaa
add
rol
sbb
xchg
enter
lock
cmpsb
jo
jno
sub
mov
sbb
sbb
int3
imul
xchg
xor
outsb
out
sbb
push
push
ud0
adc
ret
inc
icebp
pop
jge
dec
lret
pop
inc
in
enter
dec
mov
insb
and
lahf
js
mov
hlt
mov
idiv
test
and
jno
cmpsl
pop
leave
scas
jne
inc
add
sub
es
fistpll
mov
int
cmpsb
mov
int
in
pop
mov
push
adc
xchg
es
jge
cmpb
dec
push
mov
push
rcr
mov
push
aad
pusha
nop
pop
cs
jp
lret
jne
sbb
pusha
ds
inc
push
lcall
in
fisubrs
pop
add
test
push
cmpsl
xor
lods
lahf
test
cmpsb
movsb
xchg
ficoml
enter
dec
loope
repz
mov
outsl
aad
and
push
jl
fldt
repz
pop
stos
mov
leave
xchg
test
pause
enter
jo
adc
stos
push
out
inc
xchg
cld
and
repz
add
test
ret
pop
inc
out
cmp
xor
lcall
pop
mov
loope
mov
jmp
addl
dec
add
in
mov
gs
and
lock
xchg
cltd
loop
stc
and
repz
sahf
shlb
xchg
push
lret
rorb
mov
push
popa
cmp
mov
repnz
sbb
ret
sarb
dec
outsl
out
iret
and
mov
cmp
movsb
and
outsb
xchg
jbe
fisubrl
aaa
push
xor
and
loop
imulb
add
aam
and
pop
push
out
mov
and
lahf
in
dec
ret
and
sbb
dec
popa
movsl
test
out
lret
xchg
test
fists
rolb
mov
movsl
and
pop
dec
test
jle
sbb
or
cmpsb
mov
cmp
fmull
and
pusha
jecxz
xorb
gs
mov
pop
mov
icebp
loope
rolb
mov
mov
xchg
add
cmp
dec
sub
cmp
mov
cmpsl
dec
cmp
xlat
scas
fbld
adc
adc
lods
hlt
push
andl
movsb
add
cmp
xor
mov
lods
data16
inc
adc
sub
cmp
jnp
xchg
xchg
push
sbb
mov
movsl
mov
mov
lret
or
idiv
out
xchg
incl
scas
fs
fdivrl
data16
icebp
sahf
shrb
iret
cmpsl
lahf
aad
push
sahf
fisubrs
test
faddl
sbb
jl
mulb
js
inc
adc
jp
pop
adcl
lahf
lahf
cs
jmp
jb
icebp
movaps
mov
jp
in
fldt
cmp
cs
test
imul
sbb
aad
push
and
dec
add
sti
jo
or
notl
out
mov
jle
dec
mov
ret
adcb
subb
dec
xchg
les
sbb
adc
xor
mov
cmpsb
inc
jmp
push
push
loop
cli
insl
xchg
mov
into
add
ss
cmp
scas
sbb
cli
loope
movsl
mov
mov
repz
hlt
mov
lock
sbb
gs
hlt
add
out
push
inc
sahf
std
addb
jne
push
push
and
jmp
cmp
inc
cwtl
add
lds
xor
sarb
dec
pop
cmp
inc
mov
pop
add
push
insl
daa
add
out
call
cld
in
sbb
mov
mov
sarb
movsb
ror
dec
mov
or
addb
lahf
and
icebp
addr16
cltd
and
jo
outsl
xchg
or
test
roll
fildll
dec
or
sarb
je
shrl
jecxz
cmpsl
adc
push
add
xor
xchg
std
xor
mov
or
sbb
adc
lcall
lods
xor
pop
scas
enter
test
test
jle
int
aam
ljmp
repnz
mov
stos
sbbb
stos
sub
push
insb
les
cwtl
pusha
aaa
addr16
dec
andb
or
bound
out
ret
out
jo
int3
xchg
xchg
loopne
add
in
cs
mov
dec
in
je
and
xor
lret
sbbl
pop
mov
in
xchg
out
jo
ss
cs
leave
out
fisttpl
rol
adc
fisubl
sahf
jge
inc
cltd
fsubr
cmp
ljmp
int3
loop
nop
push
lds
xchg
jp
addr16
xchg
and
daa
sbb
popf
mov
and
nop
mov
jl
add
xor
dec
js
sub
mov
loop
push
sbb
ja
sub
and
adc
sbb
and
fwait
xorl
cmpb
in
xchg
or
add
pushf
or
xorb
or
mov
lret
hlt
lea
cmpsb
fdivrs
inc
sbb
mov
mov
xchg
pop
sub
push
arpl
sbb
imul
ljmp
test
loope
xor
mov
push
cmc
loop
mov
mov
jae
jns
das
pop
popf
outsl
sub
mov
push
pop
xor
ffreep
gs
xchg
cmp
sub
imul
data16
sub
mov
movb
inc
les
sub
xor
pop
sub
jo
lcall
xchg
cmpsb
pop
fcom
cld
loop
lods
fiaddl
popa
clc
add
testl
push
pop
mov
push
mov
and
sbb
mov
pop
jno
gs
shr
adc
cmp
faddp
movsl
rcll
data16
aam
xor
inc
cmp
xlat
adc
popa
add
arpl
jge
int
mov
sbbb
dec
ds
js
push
fdivrs
sub
aam
inc
out
popa
shlb
out
cltd
adc
lock
mov
xchg
sub
dec
adc
es
or
lret
imul
fsub
sub
pop
leave
dec
cwtl
inc
mov
mov
movsl
cmpsb
sbb
aad
hlt
addr16
rcll
hlt
int
sub
push
push
mov
hlt
push
mov
inc
clc
or
pop
fldcw
js
mov
out
or
mov
jge
jge
sar
push
pop
out
in
sub
ror
lods
arpl
lods
dec
lds
and
pop
or
aad
mov
lods
cs
call
in
ret
adc
add
sbb
sbb
xorl
mov
cmpsb
sub
sbb
ror
test
jnp
int
sbbl
xchg
sub
xchg
ret
pusha
popf
es
push
cs
lea
lcall
xchg
out
addl
add
shlb
or
mov
out
jnp
mov
loop
out
or
mov
dec
push
iret
jmp
push
and
fwait
js
cmp
mov
mov
mov
loopne
cmp
mov
ja
arpl
push
js
cmp
and
enter
lods
sti
xchg
aaa
mov
sarb
daa
nop
imul
ja
gs
das
mov
jns
dec
cld
adc
icebp
jns
cltd
js
pop
scas
out
jmp
inc
jp
inc
pop
call
movb
popa
or
psraw
js
orl
addr16
mov
mov
pop
out
lock
rolb
cmp
push
add
das
xor
in
xchg
incb
fwait
inc
repz
push
jno
divl
push
add
sbb
mov
mov
xor
pushf
lretw
mov
and
in
in
jae
push
cmp
jge
mov
mov
xor
sbb
mov
jmp
imul
pop
or
lret
mov
daa
ss
jl
pop
loopne
cmc
or
aas
out
ljmp
rcrb
lock
rclb
out
mov
cmc
neg
cmp
rclb
push
jge
jl
out
dec
inc
aaa
mov
lret
mov
cmp
inc
jl
test
popa
cltd
testl
stos
ja
add
outsb
stos
sbb
nop
fidivrl
lods
std
inc
stos
fisubrl
mov
ljmp
mov
xor
scas
push
mov
push
push
xchg
dec
adc
mov
and
push
loop
fistpl
subb
outsl
icebp
int3
stos
std
adc
push
add
stos
pop
push
push
push
test
and
mov
mov
mov
sti
mov
push
ds
sbb
pop
ret
sbb
test
out
xor
ss
popa
jo
and
push
fdivrs
pop
ret
stc
dec
xor
pushf
ljmp
pop
add
sub
dec
adc
stos
jg
scas
cwtl
push
sbb
std
mov
aam
push
repnz
sti
imul
pop
or
and
imul
ljmp
sub
adc
adc
stc
inc
or
inc
inc
mov
cmc
push
js
cmp
test
stc
pop
orb
out
cltd
sbb
mov
push
loopne
divb
fnstsw
test
and
rcr
mov
adc
xor
into
mov
push
pop
mov
adc
enter
pop
mov
jbe
dec
out
fiaddl
pop
mov
mov
test
dec
scas
divl
fcoml
xchg
enter
lret
test
push
push
cwtl
inc
in
out
mov
fwait
mov
cmpsb
bound
adc
push
xchg
pop
push
jns
mov
jne
shrl
push
adc
cmp
fisubrs
adc
push
stos
add
push
add
mov
insl
inc
call
xor
jbe
fstpt
arpl
inc
test
call
pop
rcrl
inc
ds
outsl
and
mov
sbb
jp
add
add
sub
into
pop
rorb
xchg
sub
fsubrs
les
push
mov
lahf
subl
fstl
mov
lea
loopne
lds
add
dec
push
jecxz
repz
scas
or
daa
mov
sbb
pop
gs
jmp
add
xchg
push
pushl
scas
sbb
popa
add
stos
add
or
push
mov
add
fcmovnbe
mov
dec
and
add
ss
out
lcall
mov
xor
dec
scas
jge
xchg
sub
add
aad
pushf
add
or
test
push
aad
lock
ds
mov
push
jbe
lock
fistpll
xor
mov
jg
cmc
adc
mov
mov
jae
add
repz
lock
andl
push
scas
xchg
cmp
mov
out
xchg
fisttpll
or
lds
aas
cmp
jns
xchg
ds
or
mov
push
mov
mov
lds
inc
push
les
push
add
fwait
pushf
xor
pushl
into
dec
inc
pop
leave
pop
arpl
mov
fisttps
insl
cmpsl
mov
fiaddl
xor
enter
not
out
fs
dec
add
mov
sbb
mov
jl
push
xlat
arpl
rolb
mov
sbb
out
add
js
sbb
adc
pop
push
gs
adc
addr16
jno
shlb
add
insl
pop
insb
jne
mov
jecxz
cli
sbb
xchg
arpl
pop
into
sbb
xchg
xor
sub
mov
lea
cmp
xlat
arpl
inc
bound
cmp
cli
add
mov
xchg
fstpt
pop
sub
movsl
in
inc
pop
scas
mov
xlat
pushf
aas
aaa
jne
xchg
subb
push
je
aad
lock
jmp
xchg
mov
fiaddl
mov
pop
dec
and
je
xchg
pop
enter
test
cli
add
mov
cmp
pop
insb
int3
out
and
mov
sbb
jp
mov
pop
mov
les
mov
daa
lahf
mov
cmp
or
stos
lods
adc
jle
in
test
addb
out
mov
jo
mov
sbb
jl
pop
jecxz
shll
or
cmp
xchg
and
jbe
and
aaa
lods
sub
daa
dec
sti
pop
push
fnsave
movsb
lds
mov
pop
dec
sbb
sbb
xchg
int
mov
lea
hlt
data16
pushf
push
movsl
mov
outsb
xchg
ficompl
aad
jmp
jne
test
call
mov
inc
lock
fs
sbb
pop
ja
xor
dec
cmp
lret
repz
xchg
das
mov
pop
sbb
call
and
daa
lods
cmp
dec
push
jnp
mov
std
addr16
jle
hlt
repnz
je
insl
or
mov
xchg
push
add
bound
test
xchg
mov
fs
cmp
popf
jmp
ret
lahf
pop
jg
sbb
outsl
add
jns
in
add
loopne
dec
cld
or
mov
mov
test
add
jmp
fidivs
xchg
xorb
lea
popf
fcmovbe
cmpsb
adc
ljmp
inc
jb
dec
movsb
push
iret
cs
je
or
leave
dec
and
pop
jno
fnstsw
incl
pop
mov
movsl
or
cmpsl
xor
dec
pusha
cmp
jno
popa
inc
and
lods
cltd
lock
repnz
push
pop
mov
add
fnstsw
repnz
roll
loop
jne
rol
cmp
sub
add
mov
mov
push
and
cmp
cmp
jbe
mov
pop
f2xm1
lahf
js
sarb
mov
psubsb
push
lret
add
stos
or
test
push
stc
inc
push
notb
je
in
dec
and
mov
push
int3
xchg
dec
xchg
in
sub
add
pop
cmp
cmc
jns
mov
and
pusha
sbb
dec
cmp
insb
xlat
movsl
cmp
cli
test
out
and
hlt
mov
cmp
test
aas
add
rolb
add
add
xor
imul
sahf
sub
adc
je
lea
jns
leave
loop
aas
xchg
mov
pop
jmp
add
sub
jg
jne
loop
add
xchg
xor
nop
push
cmp
std
xor
jae
xchg
and
add
push
or
xchg
icebp
in
ja
icebp
mov
in
mov
outsl
push
or
cmp
sbb
dec
das
sub
ljmpw
arpl
inc
dec
fnstsw
loopne
pusha
push
sub
repnz
sub
imul
pop
icebp
cmp
push
jb
pop
push
lods
push
repnz
in
scas
gs
or
push
and
jecxz
fstp
test
mov
andb
mov
mov
cmp
cli
and
test
ljmp
add
icebp
lahf
imul
in
add
jecxz
sbb
pusha
push
mov
jmp
enter
pusha
dec
movsl
sub
faddl
sbb
push
fstps
mov
clc
lcall
enter
adc
lea
jge
push
cmpsb
mov
cmp
pop
daa
push
mov
jo
or
nop
fcoml
cmp
xchg
sub
addr16
add
shl
mov
cmpsb
adc
xchg
push
fstl
xor
push
test
iret
mov
aaa
ret
push
inc
and
xchg
sarl
fimuls
mov
hlt
dec
jp
inc
add
fbld
mov
mov
iret
mov
adcl
mov
mov
fst
fwait
dec
in
data16
idiv
sbb
aaa
xchg
icebp
pop
mov
sarb
cltd
shrd
outsb
test
jl
xor
dec
pop
xor
ret
sar
pop
mov
or
mov
mov
stos
loopne
mov
mov
sub
cmp
clc
clc
iret
pop
add
imul
mov
test
insb
gs
jecxz
call
cmpsb
sub
ret
jge
aas
dec
mov
repnz
xor
imul
sbb
rorb
pusha
roll
aaa
mov
and
in
add
inc
fldenv
in
pop
aam
popa
sbb
mov
insb
bound
cli
xor
fistpl
nop
sti
inc
jns
push
and
pop
lret
xchg
and
push
and
fsubp
loop
and
pop
xchg
int3
inc
sub
pop
lcall
icebp
jae
mov
cmp
insl
add
popa
fildll
dec
es
jl
jp
lock
rolb
leave
sub
sub
bound
ss
push
add
cld
imul
cmp
js
aaa
xchg
push
or
pop
lock
mov
push
orl
push
orl
sub
push
movsl
cwtl
and
aaa
jl
inc
and
or
jecxz
lahf
inc
push
dec
pop
sbb
stos
sbbl
adc
mov
or
and
mov
or
data16
ficoms
push
sti
imul
lods
stos
mov
and
sti
sbb
mov
push
mov
loop
jl
or
push
pushf
iret
ljmp
outsl
inc
hlt
pop
xor
ja
frstor
insl
es
dec
push
and
es
push
xor
jg
cs
xlat
xchg
movb
fimull
mov
mov
and
std
dec
int3
into
das
rol
pop
xor
jns
push
notl
in
outsl
jne
cmp
stc
fisttpl
cs
mov
lods
jnp
pusha
or
xor
jge
pop
arpl
int3
cld
mov
jno
subl
xor
inc
dec
adc
cmc
push
les
ds
inc
jle
push
mov
stc
push
out
lcall
cmpsl
mov
aad
mov
and
test
cmpsl
ret
mov
aas
mov
sbb
or
out
push
add
andb
add
out
enter
cmp
fadds
xchg
out
push
dec
stc
inc
out
pop
push
fcomip
cmp
das
fildll
jb
test
imul
daa
push
add
lahf
mov
dec
fnstsw
push
leave
lret
pop
jno
clc
mov
insb
and
das
iret
and
out
xlat
cld
in
stos
jmp
add
push
in
pop
pusha
test
aaa
add
sarl
cmp
dec
das
mov
or
stos
out
lret
dec
inc
fstpl
ljmp
sbb
pop
into
sbb
dec
lahf
xchg
cwtl
pusha
pop
in
inc
sbb
cld
add
out
shrl
out
inc
rcll
inc
lods
pop
jmp
cli
adc
cmp
push
mulb
xor
mov
fucomp
mov
pop
insb
ret
imul
fadds
ret
in
cmp
lods
pcmpgtd
jno
sahf
aaa
pop
sbb
mov
jg
ret
push
lret
popa
sbb
pop
in
lea
std
push
lret
push
mov
jecxz
cmc
dec
and
mov
ja
fucomi
loopne
arpl
dec
stos
push
xchg
lods
sub
lds
sbb
rol
cmp
mov
mov
mov
xchg
fmull
sbb
mov
adc
sub
test
popf
fisubrs
and
lods
fs
cmp
out
outsl
jae
std
jl
push
add
out
sub
jmp
pop
mov
add
hlt
int
push
pusha
mov
arpl
xchg
mov
adc
push
cmp
dec
push
jg
cli
sub
jecxz
push
jbe
ret
mov
cmp
out
inc
dec
cwtl
test
lret
pop
in
outsl
imul
xchg
xor
sub
cmpsb
aam
xchg
cmp
jne
popf
int3
sub
std
sub
imulb
jle
lods
iret
adc
xor
or
std
popf
sbb
mov
aas
push
lret
loopne,pt
xor
sbb
cmpsb
sub
iret
sarl
or
scas
ficomps
dec
outsb
iret
adc
mov
cs
or
push
xor
mov
lods
subb
nop
or
rcrl
push
jge
ljmp
mov
std
into
stos
iret
lods
pop
jne
scas
jo
test
jle
xchg
sbb
push
in
push
enter
mov
add
dec
xchg
shll
lret
nop
mov
roll
cmp
icebp
sti
in
mov
or
out
xchg
mov
pop
mov
pop
shrl
les
or
xor
lock
in
dec
and
mov
jge
lcall
add
mov
arpl
pushf
jg
cmp
push
or
xchg
shll
adc
fdivrs
mov
out
je
movsb
lea
sbb
lahf
push
mov
testl
mov
popa
dec
push
mov
jo
inc
gs
cld
push
add
loope
nop
das
das
adc
stos
or
sub
stos
and
inc
out
pop
adc
fistpll
into
pop
enter
mov
sarb
dec
leave
push
mov
cmp
rorl
out
mov
repz
mov
push
lock
out
insl
std
push
mulps
jle
bound
stos
or
and
das
cwtl
rcrl
ficoms
lcall
jmp
enter
adc
les
push
imull
stc
cmc
mov
mov
dec
sub
lret
mov
shll
ror
mov
cmc
inc
call
mov
in
stc
sub
and
outsb
outsb
sarl
mov
std
push
push
mov
fcom
pop
sarb
pusha
mov
mov
mov
das
movsb
mov
out
push
sbb
test
ja
js
imul
pushf
pop
inc
in
aaa
mov
les
cmpsl
daa
int3
dec
aam
fcmovnbe
push
clc
xchg
mov
push
clc
cmc
test
call
mov
daa
test
ds
outsb
imul
jl
stos
or
sahf
mov
int
and
xor
jne
bnd
shlb
sub
cmp
in
pop
scas
push
les
jecxz
jne
xorb
add
nop
pusha
push
push
dec
cmpb
push
or
lret
std
push
pop
sarb
pop
and
je
jno
jns
cld
add
sbb
and
out
sbb
xchg
pop
sub
adc
repnz
mov
sti
push
cmp
mov
popf
mov
fld
aad
data16
stc
lds
or
jmp
add
jge
loopne
fisttps
push
std
mov
call
dec
jle
scas
lods
pop
mov
outsl
mov
testl
jb
rcl
pop
add
sbb
incl
pop
push
test
lcall
inc
push
repnz
sub
es
les
mov
lahf
mov
mov
mov
orb
mov
mov
cmpsl
lea
push
or
das
adcl
dec
dec
mov
sub
ljmp
jge
push
pop
imul
xor
push
jg
repnz
push
add
mov
mov
pop
cltd
add
jnp
sub
ljmp
mov
push
into
mov
inc
mov
sub
pop
lahf
add
sbb
jne,pn
push
jge
xor
rcrl
add
cmp
or
call
mov
aaa
add
inc
jo
adc
or
mov
add
pusha
shlb
lock
sbb
mov
in
iret
sbb
mov
sbb
movl
faddl
fwait
fwait
mov
in
bound
fiadds
cmp
lret
mov
mov
pop
lock
push
adc
lods
or
adc
cmc
mov
rclb
xor
push
xchg
sub
sub
xor
aad
or
and
sub
lret
in
push
mov
sbb
sahf
sarb
sub
int
cmp
sbbb
imul
mov
sub
jne
mov
or
lea
dec
and
cmp
repnz
leave
popa
lods
movsb
sub
cmpsl
cmp
ret
out
add
das
dec
hlt
xchg
scas
fsubrs
inc
aaa
sub
mov
out
add
das
cmpsl
mov
aas
cmpsl
mov
jae
pusha
xchg
mov
lds
xchg
xchg
pop
call
xchg
fsubs
sub
xchg
inc
cs
cs
and
aaa
movsl
fldl
cmp
inc
mov
fwait
and
or
cld
and
shrb
cmc
pusha
cmpsb
out
dec
pop
dec
push
std
cs
orl
add
add
xadd
jo
push
and
sbb
xchg
add
mov
mov
cltd
outsl
cmpsl
adc
daa
loop
aad
and
inc
adc
insb
inc
cmp
jle
gs
jno
ffreep
rorb
pushf
or
pop
pop
aam
mov
dec
xchg
pop
mov
ss
rcl
pushf
mov
or
shrl
xchg
add
cwtl
maskmovq
sbb
and
mov
jg
push
inc
mov
insl
mov
in
and
ljmp
popf
in
les
jo
jmp
jae
mov
sbb
and
cwtl
mov
xor
lea
and
in
mov
jns
and
and
sbb
je
dec
add
inc
data16
sbb
jnp
xchg
insl
sbb
test
pop
and
lea
ja
cmp
nopl
std
and
data16
mov
sub
push
nop
push
dec
xchg
push
mov
pop
mov
leave
pop
std
ret
jle
out
popf
sarb
repnz
jecxz
in
lods
cmpsb
pop
sbb
push
push
add
xchg
fsubl
jecxz
mov
jbe
push
in
xchg
jp
lret
adc
test
push
shlb
rcrl
pop
mov
fsubs
pusha
jo
lock
jns
jmp
lret
mov
cwtl
jg
xchg
rcl
scas
mov
clc
pop
mov
aam
std
xchg
mov
adc
jecxz
lea
mov
inc
lds
insb
aaa
sbb
jne
dec
mov
loope
push
mov
mov
cwtl
lcall
imul
sbb
rorb
test
mov
or
pop
mov
insl
fsubrl
insl
sub
mov
aam
aam
lods
sbb
sub
xor
popf
jae
test
sub
orb
dec
outsb
ljmp
xchg
mov
pop
mov
pop
int3
cli
pop
fninit
sahf
pop
cmp
mov
pop
ret
mov
inc
movsb
cmp
sub
loopne
testb
aad
shl
sahf
xchg
add
repnz
ret
das
test
ja
or
adc
xor
in
sub
loopne
scas
mov
cmc
cltd
mov
popa
loope
adc
mov
in
or
xchg
test
sahf
insl
cmp
cli
popf
push
xor
mov
jno
jo
jne
nop
pop
test
shll
syscall
call
lock
and
das
int3
bound
es
and
cmp
pushf
jno
and
lods
xchg
mov
mov
cmp
adc
ret
and
jae
xor
es
leave
and
aaa
iret
pop
test
ror
sub
and
mov
xchg
scas
add
jb
dec
push
imul
setp
pop
pop
dec
pop
cwtl
dec
lock
pop
jbe
dec
adc
out
fwait
into
outsb
jbe
repz
cmc
jle
mov
jecxz
cmp
add
mov
mov
jle
push
push
pop
xchg
push
cmpsb
lcall
movsl
mov
ret
xor
jle
push
mov
int
xchg
je
pop
sbb
mov
ds
loopne
rcrb
mov
sbb
in
dec
mov
andb
stos
pop
ret
decb
mov
jne
pop
push
xlat
push
inc
sub
xchg
xchg
sbbl
imull
fsubrl
aad
fisubrs
jo
fisubrs
mov
std
out
push
dec
data16
testb
lret
mov
stos
rcrb
sub
jo
mov
movsb
sbb
adc
mov
imul
sbb
xchg
xchg
xchg
fdivrl
add
lock
sub
xor
hlt
out
mov
dec
mov
adc
dec
push
scas
mov
in
andb
xor
push
cwtl
mov
xor
sti
xchg
call
sub
repz
add
and
cli
mov
adc
clc
xor
std
xchg
out
pop
jne
sub
stc
lahf
rclb
and
das
repnz
outsb
test
or
rorb
in
add
cmc
inc
jl
cmpsb
jmp
out
stos
lret
pop
divb
or
nopl
jge
cmp
into
dec
sbb
push
shlb
or
adc
icebp
xlat
mov
pop
inc
mov
dec
ljmp
xchg
xchg
fidivs
ja
cmc
andb
pop
jecxz
dec
insl
outsb
mov
cmp
adc
or
push
scas
fsts
mov
lods
mov
inc
pop
cmp
std
popa
mov
sub
lock
in
xchg
xchg
or
stos
add
lcall
sub
xor
pop
cwtl
pop
jnp
mov
lock
je
outsl
xor
dec
jp
push
push
fstpt
push
xchg
add
sbb
cmp
inc
sbb
add
dec
pusha
dec
lcall
pop
mov
fdivl
dec
sub
xchg
cmp
add
ss
imul
add
xchg
or
repz
jno
fiaddl
mov
jne
pop
or
and
repz
pusha
int3
jns
ret
xor
into
nop
sub
dec
fldl
bound
in
pop
inc
out
mov
sti
push
dec
out
sub
lock
or
ret
sahf
mov
or
jmp
fimuls
cmp
jo
pusha
movsb
sarl
or
xchg
adc
or
shrl
fsubrs
je
inc
addr16
mov
push
mov
stos
out
cld
dec
inc
jo
into
cwtl
or
lret
sub
jp
pop
adc
jae
fidivrl
lcall
shr
iret
fbld
lods
sub
mov
rorl
fildl
sbb
add
rorb
or
sub
jge
mov
mov
insb
imull
pop
scas
xchg
pop
pusha
jge
inc
push
jae
lock
pop
jge
int3
dec
jno
inc
js
movsl
sub
pusha
fwait
mov
jg
addl
xor
jmp
bound
and
mov
aam
loop
inc
push
sbb
dec
test
movsb
cwtl
add
cmp
mov
icebp
loopne
add
or
jo
fucomi
mov
addl
mov
int
cmpsb
pop
mov
or
repnz
lcall
push
inc
push
sub
xor
mov
scas
rolb
pusha
sbb
push
cltd
add
loopne
sbbb
adc
sti
inc
jne
stc
pop
xchg
popa
push
das
stos
jns
push
movsl
arpl
cmp
cmp
lods
std
mov
inc
outsl
pop
imul
pop
out
mov
roll
movsl
das
scas
ret
shl
loop
jge
xlat
lods
push
sbb
iret
insl
pop
cmp
push
mov
sub
sub
cltd
jmp
mov
pop
in
leave
out
rcrb
aaa
mov
mov
mov
and
adcl
cmp
mov
push
jl
ret
cmp
cmp
scas
in
adc
add
sar
xchg
fwait
rol
subl
xchg
pop
pop
movl
inc
rcll
fimuls
dec
pop
mov
fs
loop
or
decb
jge
lcall
push
comiss
xor
pop
mov
adc
clc
outsb
out
out
pop
mov
fnstsw
movsb
rorl
std
data16
cwtl
or
rorl
cmp
jecxz
jmp
or
jae
mov
mov
dec
ds
enter
fstpt
jecxz
adcl
add
or
and
jmp
push
xchg
cmp
xchg
rclb
sub
stc
mov
jle
jge
sbb
xor
insb
les
mov
add
sub
movsl
clc
cmp
out
push
call
cmp
sti
insl
add
icebp
leave
xchg
pusha
mov
xor
pop
adc
sbb
in
jae
hlt
jl
data16
test
jecxz
ret
pop
loopne
cmp
or
push
loope
aad
loope
sub
dec
push
pop
pop
xchg
push
js
jns
or
sbb
sbb
addb
dec
pop
mov
mov
or
jmp
mov
inc
sbb
mov
popa
sub
sub
pop
and
in
out
xchg
jl
fdivrl
lret
jecxz
xchg
push
mov
push
roll
or
pop
mov
ss
aad
xchg
dec
sbb
xor
mov
mov
xor
sti
out
clc
insb
int
adc
clc
in
pop
mov
test
adc
xor
dec
movsb
sub
scas
jl
inc
test
mov
pushf
jle
pop
mov
sbb
push
fisttpll
sbb
jle
push
aaa
sbb
pop
and
or
popa
mov
test
add
out
repnz
sar
mov
sub
mov
icebp
or
fadd
arpl
mov
mov
push
stos
repz
mov
mov
or
cmp
bound
inc
adc
xlat
cltd
lea
scas
cmpsl
push
cmp
lods
mov
sub
insb
sti
push
push
iret
pushf
and
call
jg
jno
adc
pop
pop
sub
cmp
push
xchg
fisttps
dec
push
sbb
pop
push
inc
dec
popa
int3
push
push
xchg
jo
sbb
in
loope
mov
stos
aaa
in
test
mov
sub
jbe
xchg
cwtl
mov
pop
sub
add
xchg
cwtl
outsl
pop
sub
mov
xchg
insl
dec
add
gs
add
add
push
cmpsl
iret
pop
jmp
lds
jecxz
loope
mov
ljmp
int
xor
addr16
dec
jb
dec
es
add
loope
sbb
cmpb
adc
pop
movsb
test
dec
fisubl
outsl
dec
adc
stc
out
add
mov
sbb
leave
jg
test
int3
jg
adc
mov
adc
dec
jns
pushf
xchg
mov
mov
mov
push
scas
add
adc
cmc
sub
imul
fs
popf
js
fnstenv
gs
and
sbb
jno
adc
jns
push
xor
mov
ficompl
jns
aaa
sarl
jmp
int
fidivs
pusha
mov
or
mov
outsl
bswap
add
andl
mov
dec
cltd
outsb
jp
adc
mov
and
mov
adc
push
rcl
stc
add
shll
dec
mov
lret
lods
jnp
ret
pop
shll
repz
pop
icebp
jg
ret
dec
mov
fisttpll
xor
push
leave
insl
sbb
jae
push
shl
pop
adc
stos
adc
inc
call
in
dec
aaa
imul
mov
mov
ja
aad
into
cmp
mov
jne
out
push
jo
je
fadd
xchg
mov
aas
mov
outsl
push
cld
mov
pop
mov
scas
sub
sbb
je
nop
inc
mov
cli
jp
addr16
inc
jo
dec
sahf
inc
imul
push
mov
sub
lahf
lahf
aas
mov
mov
dec
and
mov
dec
insb
cmp
cltd
jbe
sti
fstp
cmp
xchg
cmc
data16
inc
loopne
mov
xor
or
or
cltd
mov
and
xor
adc
mov
fiadds
push
addl
xchg
cmp
jge
leave
movsb
adc
mov
fs
jne
enter
int3
pop
pop
lcall
pop
call
mov
and
mov
mov
lahf
loop
sub
cmpsb
sub
inc
or
cmp
pop
cwtl
icebp
inc
pop
roll
fsubs
ljmp
add
ret
xchg
scas
lods
addr16
dec
mov
mov
cmc
loop
in
dec
xchg
push
scas
sub
loope
add
dec
fsubrs
shlb
mov
jnp
inc
outsb
cmc
mov
cmp
imul
mov
cmpsl
xchg
int
push
stc
or
lods
and
stos
pop
xchg
sbb
dec
in
stc
icebp
sbb
cwtl
neg
push
jmp
pop
mov
lods
dec
cmc
imul
mov
enter
push
or
aam
arpl
repnz
clc
fwait
xor
mov
push
xorb
aas
push
push
pop
jo
xor
jne
inc
mov
cmp
or
cwtl
je
cmp
xchg
or
negl
test
fwait
sbb
adcl
xchg
mov
pop
loope
cld
setne
push
xchg
imul
dec
pop
enter
ss
dec
mov
pushf
fimuls
adc
and
fildll
cmp
cltd
jp
jne
ljmp
call
adc
insl
arpl
xchg
ds
adc
inc
push
xor
jmp
mov
out
sahf
rclb
inc
and
aam
sarl
cwtl
jo
popl
rorb
pop
pop
sbb
ret
adc
and
and
insl
push
pop
and
xchg
lret
sub
call
repz
arpl
arpl
sub
xchg
adc
stos
gs
xchg
xor
xor
les
mov
and
and
inc
push
xchg
cmp
sub
clc
dec
mov
cmp
iret
movswl
mov
xchg
xchg
mov
or
icebp
xchg
xchg
mov
fisttpll
insb
sbbl
pop
ror
xor
ss
push
cwtl
adc
sub
mov
mov
push
outsl
loopne
push
sbbb
imulb
rcrl
leave
insl
mov
clc
and
int3
lock
insb
nop
js
lcall
cltd
aad
int3
flds
sahf
mov
mov
xor
mov
pop
ret
jno
add
and
mov
int3
mov
mov
or
lcall
enter
nop
filds
xchg
imulb
popf
movsl
mov
mov
pushf
es
inc
sub
push
cltd
mov
out
divl
or
faddp
sub
cmp
mov
and
nop
mov
std
jg
aam
into
aam
push
jb
dec
mov
mov
ss
push
push
adc
push
lods
sub
ret
pop
inc
push
mov
ret
rorb
pop
cmp
mov
pop
enter
iret
daa
xor
xchg
mov
test
cmpsb
push
popf
xlat
out
repnz
or
xor
pop
adc
jl
pop
xchg
xchg
inc
inc
fucom
ss
jl
mov
xor
mov
mov
clc
popa
push
lods
in
pop
sar
sti
test
or
nop
pop
mov
push
add
sbb
dec
xorl
push
inc
push
inc
mov
adc
mov
lods
aad
dec
mov
xchg
jno
loop
testb
adc
mov
cld
ss
dec
pop
sbb
shll
lahf
mov
andnps
dec
push
pop
outsl
mov
in
and
cmp
mov
out
sbb
movsb
adc
jb,pn
fmuls
daa
lds
or
mov
mov
push
fbld
add
xchg
adc
cmpsb
cwtl
scas
test
into
loope
add
sbb
add
mov
rclb
in
rcl
jno
jb
cmc
enter
jbe
cmp
and
cltd
lcall
pop
out
iret
in
subb
inc
sahf
inc
dec
sub
scas
xor
or
loopne
stc
nop
addl
and
adc
jo
mov
call
divl
mov
fmull
cmc
jg
xchg
mov
pushf
pop
addb
das
clc
out
adc
bound
int
dec
stos
enter
aaa
jns
adc
or
negb
mov
and
mov
fs
pop
sub
sub
ret
mov
aas
pop
call
inc
mov
mov
or
ret
and
hlt
sbb
pop
pop
adc
and
cmpsl
aaa
hlt
cs
cmp
repnz
mov
mov
jmp
stc
cs
mov
push
jno
das
fnstcw
jmp
lods
fs
and
inc
mov
inc
inc
mov
ret
push
jecxz
popa
scas
xor
dec
jg
call
orl
test
cmp
in
mov
sbb
cmp
dec
mov
sbb
pop
pushl
sbb
decb
jns
sub
pop
jne
mov
mov
sub
push
cmp
or
adc
shr
in
sbb
imul
xchg
pop
mov
cmp
jae
dec
push
push
out
xor
dec
and
jnp
lahf
sbb
aaa
cld
jmp
outsb
jp
mov
adc
xor
fstpt
mov
out
int3
scas
clc
push
and
xchg
jge
jae
rcll
sub
mov
xor
adc
cld
jle
mov
leave
add
xchg
iret
and
inc
push
add
inc
gs
in
push
fstps
aas
lret
out
out
dec
push
dec
and
or
fistl
jp
fs
cmc
das
push
fisubl
pop
ljmp
imul
shlb
insl
idivb
aad
jecxz
clc
imul
jo
cmp
add
rorb
subb
mov
dec
add
jns
or
sub
xor
mov
sti
out
and
add
push
jnp,pt
add
aas
push
inc
ja
inc
cmp
dec
ljmp
into
negl
lds
push
dec
lret
cmp
lahf
cld
mov
fcomi
xchg
inc
xor
cltd
pop
jno
jecxz
loope
fs
ljmp
popa
lret
jecxz
pop
jg
dec
adc
testb
mov
ljmp
jbe
js
lret
push
jo
add
leave
scas
fucom
inc
ljmp
pop
test
faddl
adc
dec
in
pop
adc
inc
repz
shl
jmp
mov
call
fadd
movsl
mov
ds
mov
flds
and
cmp
inc
les
push
out
adc
xor
jl
pop
xchg
pop
cli
and
mov
inc
insl
mov
mov
ljmp
jb
xor
dec
inc
dec
mov
test
mov
and
pop
cmp
pop
xchg
cmp
cs
sub
movsl
push
outsb
dec
loop
jg
insl
enter
aad
insb
sub
lds
imul
mov
push
mov
gs
push
mov
ret
test
inc
or
stos
call
mov
lahf
jb
cli
xchg
sbb
sbb
lods
out
mov
add
scas
sbb
dec
inc
cmp
and
stc
jmp
leave
lea
into
pop
or
out
idivb
lret
pop
loop
dec
addb
xlat
lea
loopne
dec
or
lahf
mov
outsb
cmp
push
pushf
shll
rol
stc
jb
xchg
jmp
push
repz
sub
mov
idivb
xchg
jp
popa
imul
jp
fiadds
pusha
test
out
loope
mov
mov
rcl
cwtl
fwait
es
addr16
push
sub
mov
jae
mov
addr16
sub
cld
sti
leave
ljmp
pop
into
popa
popf
rclb
mov
cltd
pop
vmovntps
inc
std
dec
inc
jmp
dec
movsl
rorb
nop
and
jne,pt
adcb
ret
shr
or
dec
fmul
dec
inc
es
pushf
or
jno
jae
mov
xchg
test
pop
sahf
lods
sbb
mov
imul
lcall
out
fwait
mov
sbb
pushf
movsl
into
gs
or
jge
sub
les
es
push
cltd
cwtl
cmp
cmpsl
cmp
sub
in
push
pop
dec
push
dec
pop
ret
push
and
rcrb
pusha
into
sub
cmp
ret
hlt
test
clc
sub
insl
push
pop
inc
movl
dec
popa
xor
mov
fisttpl
je
enter
lock
pushf
das
repz
pop
sub
inc
pop
cmpsb
or
outsb
jge
insb
notl
push
ret
add
jne
popa
cmp
adc
and
pop
test
push
leave
push
std
adc
rcl
push
clc
dec
call
and
inc
mov
movsb
scas
or
je
dec
mov
shrb
pop
xlat
xchg
nop
add
movb
adc
ds
mov
rcrb
lods
sbb
mov
out
xor
or
mov
pop
sub
imul
inc
sub
shll
stos
clc
mov
das
jns
fwait
iret
testl
fnsave
dec
int3
mov
jns
jecxz
sub
test
popa
sbb
inc
jge
jbe
testb
ljmp
mov
xor
hlt
adc
arpl
adc
mov
loop
fistpl
inc
ss
movsl
adc
shl
mov
push
xor
addl
ret
and
cmp
pop
cmp
fildl
xlat
mov
inc
push
inc
push
push
inc
hlt
in
stc
fs
fdivl
mov
rclb
das
aam
paddb
pop
hlt
adc
jecxz
aas
jl
push
aas
sub
adc
xor
popa
push
adc
mov
out
cmpsb
std
push
in
lret
out
mov
dec
insb
in
outsl
pop
add
cmpsl
xchg
inc
in
mov
mov
xor
testb
mov
push
gs
xchg
push
xor
adc
push
xchg
mov
adc
mov
pop
jns
jne
lcall
outsl
jl
inc
adc
sub
outsl
sbb
fucomp
push
push
clc
ret
imul
add
insl
xor
scas
mov
arpl
sbb
roll
cmp
mov
sub
int3
push
shlb
cmp
jmp
mov
inc
gs
fwait
loopne
sub
xchg
jp
decl
cmp
outsb
sub
shrl
int3
fstps
mov
lds
jo
xor
push
and
mov
inc
jne
inc
xlat
mov
int3
sub
lret
lahf
sti
sub
add
push
in
arpl
push
rorl
nop
es
jae
mov
lods
sarb
dec
push
add
test
into
mov
inc
orb
lret
sbb
loopne
cmpsl
mov
ljmp
popa
ret
stos
and
in
loopne
out
jecxz
js
aad
sub
repnz
mov
and
push
imul
or
pop
jns
loope
and
lahf
mov
mov
arpl
and
shrb
sbb
rcl
mov
jae
jo
fsts
enter
test
outsb
pop
jb
data16
sbb
cmp
inc
fidivl
xchg
jg
popa
cmp
push
shll
or
scas
outsb
aam
jno
sub
rolb
pop
push
adc
sbb
call
shl
add
test
or
adc
jns
jae
pop
add
lcall
call
mov
nopl
sti
fucomp
mov
ds
sti
aaa
test
mov
lods
out
mov
repnz
movb
rcrl
dec
xor
jnp
sbb
pop
and
dec
adc
push
lahf
mov
roll
sub
pushf
setno
scas
in
lock
inc
in
xchg
xor
dec
add
bound
sub
int3
test
sbb
adc
cltd
cli
out
mov
xchg
movsl
pushf
rcl
xchg
cmp
das
inc
jae
or
push
scas
sub
pop
das
call
std
push
jge
nop
daa
mov
sbb
sub
mov
xchg
fcom
dec
mov
jge
idivl
call
push
inc
xchg
in
test
ja
jp
cmp
ljmp
inc
or
adcb
xchg
ljmp
or
sti
cs
pop
loopne
push
add
push
pop
loopne
sbb
push
cmp
xchg
inc
sbbb
test
mov
fstpt
push
shr
sub
xor
gs
sti
inc
je
jnp
push
rorb
faddl
mov
cli
push
dec
aaa
adc
or
insl
pop
sbb
jmp
mov
add
mov
jnp
jg
stc
test
jge
shlb
or
pop
mov
add
pop
push
mov
inc
cmp
hlt
inc
notl
icebp
pop
dec
xchg
inc
inc
repz
cmpsb
sbb
scas
mov
in
iret
cmc
cltd
aaa
xor
sub
test
inc
dec
in
jae
pop
mov
sub
adcb
xchg
int
mov
inc
xor
xor
adc
repz
add
and
sub
cwtl
mov
fildll
mov
shrb
cmpsb
jb
cmp
in
test
cltd
push
mov
xor
dec
mov
mov
dec
push
adcl
push
pop
pushf
push
cmc
out
insl
movsl
cmp
fucomip
adc
mov
stos
jno
les
cwtl
xor
jg
lds
nop
stos
pop
mov
cmpsb
outsb
bound
jo
sti
sub
gs
mov
pop
add
xor
inc
daa
inc
in
jae
lods
sub
pop
adc
imul
test
movsl
nop
jg
dec
pop
sub
addb
in
or
daa
js
into
jp
es
scas
into
in
call
test
leave
testb
ret
inc
xchg
jl
push
fistpl
clc
ret
in
pop
aad
in
pusha
mov
pop
push
aaa
sahf
into
les
inc
pop
fsubrs
jl
xchg
arpl
mov
push
add
lcall
sub
cmp
jno
into
daa
add
xor
idiv
jo
dec
xor
add
aas
stc
xor
ss
fdivrl
lcall
adc
pop
scas
lahf
incl
cmp
xor
lret
push
sbb
rorl
test
xchg
cmc
outsl
sbb
in
lods
leave
jmp
jns
lret
sub
mov
cmp
jb
scas
in
mov
xchg
xor
mov
pushf
clc
sbb
xor
mov
aaa
inc
inc
push
inc
sub
es
loopne
mov
notl
std
insb
movsb
in
jbe
lods
xchg
popa
mov
mov
and
daa
lret
outsl
lea
stc
or
adc
xchg
dec
shrb
icebp
inc
inc
jnp
mov
inc
pushf
fldl
jnp
mov
out
pop
jo
stos
roll
lods
push
cmp
sub
pop
jl
adc
jg
ret
jae
pop
adc
adc
xchg
dec
mov
cmp
mov
lods
sbb
loope
adc
pushf
jae
and
xlat
lretw
aam
mov
fs
mov
pop
inc
adc
pop
xchg
aam
sahf
mov
jl
negl
jmp
in
or
jmp
xchg
in
mov
rcrb
jl
ficoms
aaa
pop
xchg
jnp
iret
psrlw
icebp
cltd
rcrl
or
jbe
jbe
mov
int
push
dec
movsb
imul
push
pop
mov
or
push
sbb
ret
cwtl
add
jae
ljmp
dec
adcb
inc
in
mov
cmpsb
cmp
movsl
out
sub
stos
adc
mov
and
pop
pop
decb
and
shll
jnp
dec
pop
add
enter
fs
daa
lcall
rorl
mov
sbb
mov
mov
add
fucomi
inc
add
outsl
push
sbb
into
mov
inc
mov
jns
in
inc
andnps
or
data16
lret
in
icebp
pop
fistpll
push
scas
aad
dec
in
rcrl
lret
dec
popa
dec
xlat
outsb
decb
pushf
mov
jns
dec
adc
sbb
shrb
mov
rcrl
mov
mov
mov
mov
push
fwait
sbb
ds
js
jae
cld
ret
add
outsl
mov
adc
mov
sub
repnz
pop
mov
jge
add
jb
mov
xchg
sahf
xor
adc
xor
adc
mov
mov
xchg
sub
and
jo
sbb
push
out
scas
add
jle
ret
xor
dec
mov
ret
imul
out
icebp
cli
push
xlat
in
sub
rcr
mov
jnp
fsubp
push
mov
stos
out
outsl
iret
push
test
xor
jb
int
lret
test
mov
pusha
push
jmp
and
cmp
xor
pop
adc
cmp
pop
loope
fbstp
in
neg
mov
ret
adc
shrb
dec
lcall
test
gs
and
adc
push
fistps
inc
dec
dec
pop
dec
dec
cld
out
sbb
mov
insl
stc
jno
scas
jae
fsubrs
mov
ret
ljmp
fcomi
outsl
clc
arpl
inc
or
faddp
dec
stc
cltd
xor
lcall
lret
mov
lahf
out
or
and
cmpsb
in
andb
lret
xchg
mov
jp
pop
xchg
adc
xor
jne
sub
mov
hlt
mov
aas
lret
test
add
add
pop
push
lds
fsubp
jno
mov
xor
mov
sbb
imul
jg
adc
fcmovu
shll
sub
adc
dec
mov
jmp
adc
mov
fadd
lcall
cmp
fmuls
fildl
imul
nop
xor
lret
andb
sbb
dec
xchg
mov
fwait
inc
scas
ret
jge
pop
mov
mov
in
xor
divl
lods
lcall
xchg
or
sub
stc
jp
mov
bound
test
daa
inc
adc
in
into
rorl
fiadds
in
pop
repz
int
int3
fwait
pop
aad
jmp
xchg
bound
rol
shr
fistpl
insl
cli
sub
daa
pop
addr16
js
fcomps
cmp
jl
mov
mov
mov
fcomps
faddl
dec
aas
adc
cs
data16
imul
es
repz
mov
popa
mov
and
nop
repnz
sbb
leave
pop
mov
mov
hlt
stos
mov
pop
xchg
pop
sub
call
adc
imul
ret
cltd
adc
mov
cmpsb
ljmp
mov
inc
and
loope
std
in
orb
das
jge
outsl
pusha
dec
mov
in
push
loope
stos
xchg
mov
pop
dec
enter
movsb
es
js
jo
mov
ret
mov
rcl
cmp
cltd
cmp
and
in
add
je
jb
and
or
pop
loopne
pop
fwait
and
sub
mov
mov
leave
inc
add
push
stc
sub
xchg
ret
xchg
out
outsb
aas
mov
jmp
aam
xor
sbb
mov
cmp
ss
adc
mov
mov
aam
jg
fldt
fisttpll
cld
sbb
and
adc
insl
out
mov
clc
fwait
rol
out
cltd
inc
cli
and
xchg
pop
jle
cld
je
mov
movsl
mov
mov
or
int
insl
fadds
mov
push
les
and
mov
xor
repz
pushf
dec
std
or
pop
cs
inc
dec
add
mov
xor
int3
push
dec
dec
add
mov
js
fbstp
rcll
jecxz
and
adc
into
mov
sbb
inc
nop
repz
test
mov
and
fisubrs
mov
jb
incl
push
repz
arpl
mov
or
xchg
lods
out
aaa
mov
test
cmc
jbe
int
stos
icebp
xor
xor
mov
pop
les
xchg
mov
mov
outsl
mov
ja
neg
pop
ja
push
andl
sbbl
into
nop
mov
cwtl
push
mov
dec
enter
in
int
sti
daa
mov
jno
xlat
pusha
ljmp
xchg
push
fdivs
or
jle
xchg
jl
push
cmp
push
sub
out
aaa
outsl
popl
mov
lcall
sar
jge
outsl
xor
out
mov
push
push
lds
cmpsl
mov
sbb
test
rorl
ror
addr16
ja
call
pop
stos
or
mov
push
push
out
imul
daa
jmp
sbb
mov
pop
aam
mov
lock
xchg
xchg
stc
outsb
jne
xchg
lods
movsl
in
mov
mov
mov
sbb
mov
nop
sbb
imul
lods
pop
dec
dec
pusha
lahf
shl
and
sbb
loop
test
movl
cmp
shrb
or
out
fidivl
lock
ds
xchg
xchg
lods
insb
dec
pop
pop
sub
shrd
inc
dec
mov
fsubrl
push
ret
call
ljmp
jp
sub
push
push
cwtl
pusha
cmpsl
dec
pop
ret
push
and
push
adc
push
les
xor
or
ss
adc
or
inc
or
adc
imul
cmpsl
jge
push
hlt
sub
aam
aaa
call
iret
popf
sub
mov
push
dec
sub
inc
and
xlat
adc
gs
jae
xchg
in
mov
xor
cmpl
repnz
or
push
out
fnstsw
sub
xor
andb
int
decb
rsqrtps
stos
fnstsw
nop
or
or
pop
adc
and
mov
sbbb
cli
dec
mov
lock
xchg
jo
lods
pusha
in
insl
data16
stos
lret
jb
jbe
int3
and
pushf
dec
xchg
add
xchg
sbb
bnd
adc
mov
mov
xchg
pop
mov
lods
cmp
cmpsb
subb
enter
pop
fistl
sbb
stc
mov
leave
cmp
out
push
add
xor
fistpll
clc
lret
iret
inc
rcll
test
iret
xchg
outsl
imull
fisttps
and
dec
insb
das
cwtl
ret
testb
xor
insl
push
clc
call
pop
std
push
fsubl
jno
xchg
push
in
push
add
adc
ret
pop
pop
jo
jl
add
and
xchg
add
dec
pop
xchg
insb
dec
cmp
push
mov
ja
pusha
or
or
push
mov
cs
movl
call
or
test
cltd
in
and
or
push
and
cmp
popa
aas
xchg
pop
add
lcall
inc
rclb
dec
and
shlb
xchg
sbb
cs
sbb
mov
cmp
aam
xchg
mov
push
aas
fdivrl
jns
cmp
movsb
adc
mov
scas
and
mov
push
mov
jge
push
aam
lock
dec
jmp
rolb
jnp
xchg
into
addb
cs
pop
push
icebp
jge
xchg
and
dec
std
cltd
lret
and
loopne
out
dec
cld
sub
mov
xor
inc
or
cmp
jno
mov
dec
jbe
pop
mov
push
sub
dec
fsts
adc
add
mov
xchg
jp
push
cmp
mov
mov
mov
movsb
sub
lcall
xchg
xchg
pusha
mov
mov
in
pop
xchg
add
and
ret
fidivrs
dec
mov
lods
push
push
dec
push
mov
lahf
inc
or
int3
das
mov
andb
lahf
gs
scas
push
jmp
push
fimuls
jg
dec
push
cs
add
loope
sub
ss
fdivs
aaa
xchg
fnstenv
andb
fcomp
mov
fiaddl
mov
sti
push
push
cmp
sub
outsl
js
add
icebp
mov
ds
or
je
les
cmpsb
jmp
clc
sub
popa
jmp
clc
jne
pop
outsb
insb
xchg
inc
flds
scas
mov
clc
or
subl
in
inc
push
jo
adc
adc
jmp
adc
fbstp
push
push
testl
xor
lret
cltd
stos
iret
lock
dec
or
add
inc
pop
enter
mov
jecxz
outsl
inc
pop
xor
lcall
test
dec
adc
mov
jb
push
cmpsb
clc
gs
loop
sub
data16
ja
inc
movsb
pop
data16
ret
mov
test
daa
xchg
jl
mov
iret
and
mov
shrb
or
adc
test
fmuls
mov
jb
int
sbb
fscale
hlt
push
mov
aad
shrb
jbe
stc
xchg
xor
ret
sub
cmp
and
cmp
mov
mov
xor
sub
push
mov
ja
jbe
dec
fsts
pop
mov
mov
inc
fmull
inc
mov
popl
jae
mov
mov
shl
jno
jnp
jbe
fldt
hlt
aas
or
mov
push
rolb
fcmovu
mov
daa
xchg
push
mov
scas
push
insl
andl
shr
ret
adc
clc
lds
cmp
scas
sarb
ja
inc
dec
std
xor
mov
pop
imul
jb
hlt
pop
dec
xor
sub
mov
fisttps
lret
addr16
adc
cmp
dec
xchg
sarl
adc
sti
mov
sbb
add
xor
push
cmpsb
mov
jg
add
loopne
pushf
ja
xor
testb
sarb
adc
mov
adc
add
xor
lock
leave
lahf
lock
jecxz
aam
in
jnp
xchg
pop
repz
sub
and
clc
je
dec
notl
cmp
mov
call
sub
jp,pn
jle
xchg
lret
lahf
outsb
aaa
push
cmpsl
cld
imul
inc
jle
sub
add
std
cmp
cltd
rcrb
jno
jmp
cmpsb
movsl
shrb
inc
divb
xlat
shrb
pusha
pop
jecxz
jb
inc
xchg
push
in
adc
dec
dec
xchg
xchg
arpl
inc
mov
mov
scas
and
add
decb
js
test
dec
loope
pop
lds
ja
les
int
mov
inc
cmp
fstl
hlt
pop
daa
add
cmp
pop
jp
pop
mov
mov
inc
jmp
sbbl
adc
lret
enter
or
js
cli
cmp
sbb
cwtl
lret
stc
movsl
movsw
lcall
ds
adc
pop
mov
scas
pop
and
test
aam
test
das
jg
ja
mov
pop
jne
or
sub
jge
cli
push
das
cwtl
movsb
popa
test
mov
push
sti
cmp
or
adc
xchg
push
ja
sbb
pop
outsl
xlat
scas
push
mulb
fldenv
aas
fsubp
lods
cmc
cmp
dec
gs
or
dec
test
movsl
adc
mov
push
hlt
cmpsl
lea
clc
lret
adc
push
or
jnp
xchg
add
orl
inc
mov
repz
test
xchg
pushf
pop
popa
fwait
mov
outsb
jns
lret
ja
adc
test
add
sub
and
cmpsl
jns
inc
inc
pop
cltd
xchg
and
gs
add
fstpt
xor
add
xchg
add
out
inc
pushf
pop
and
pop
fidivrl
push
dec
scas
mov
and
jp
mov
mov
dec
jbe
gs
adc
adc
fwait
jg
mov
lods
mov
lea
fisttpl
cmpsb
loopne
out
xorl
mov
add
add
rcr
cmp
iret
in
lock
fnstsw
sysexit
ss
mov
ja
push
je
rcr
out
sti
inc
outsb
mov
mov
ljmp
dec
insb
arpl
sbb
popa
rcrl
fcomp
pusha
xor
fldt
mov
aas
lret
xor
aam
insb
lahf
mov
lahf
pusha
cli
sbbb
sbb
push
inc
aam
xchg
arpl
mov
jle
ret
dec
push
adc
pop
add
cmpsl
xchg
pusha
lret
jge
sbb
insb
mov
jnp
jmp
xchg
and
add
pop
fisttps
jo
outsb
ds
sti
or
push
mov
mov
add
cmpb
and
cld
pop
mov
sub
inc
and
and
pop
popf
sub
scas
fisubl
enter
add
addr16
fcoml
test
call
push
cs
mov
adc
and
je
lcall
outsb
flds
fdivr
in
jmp
iret
push
cmp
fs
jge
arpl
cmp
sub
das
mov
out
in
dec
mov
fstp
push
mov
fdivs
pop
lahf
popa
inc
dec
loope
sbb
imul
adc
inc
cltd
sbb
outsb
into
bound
enter
mov
dec
movsl
mov
pop
mov
mov
push
stos
jbe
dec
in
fstps
push
call
icebp
add
in
add
data16
mov
dec
push
loopne
mov
cmpsb
aaa
cmc
stc
xchg
std
popa
jae
sbb
cmpsl
or
sbb
testb
sub
sbb
or
fiaddl
outsb
inc
call
push
pop
je
adc
das
cwtl
outsb
shrb
call
pop
inc
int
gs
adc
cmp
mov
adc
and
repnz
jnp
mov
jmp
out
test
imul
sub
jae
add
std
sbb
dec
lret
jnp
jbe
ds
addb
sbb
cltd
cmp
inc
ret
pop
call
pop
mov
incl
push
mov
dec
push
lahf
adc
and
and
add
outsb
push
xchg
ret
xchg
xor
add
imul
femms
add
clc
jne
sbb
ss
push
popa
popf
pop
cmpl
jno
dec
dec
mov
pop
ret
ljmp
xchg
or
xchg
xor
cmp
imul
lds
pop
add
sbb
mov
xlat
enter
shlb
xchg
lahf
lcall
in
out
sarb
or
filds
lahf
repnz
frstor
sbb
rclb
insl
jne
xchg
fprem1
pop
push
das
fisubl
pop
push
mov
dec
push
bndstx
jl
ss
repnz
in
pop
pop
stc
mov
mov
inc
outsl
and
pusha
jns
cmpsb
cmp
xchg
insb
xlat
inc
cmp
insb
mov
jp
xor
mov
push
inc
lods
jmp
shll
adc
lock
fs
jno
xlat
push
xor
movsl
xor
rcll
shlw
mov
sbb
xor
jmp
and
or
push
cmp
jne
push
sub
pop
mov
cmp
cmc
sbb
pop
fs
pop
repz
pop
hlt
xchg
adc
pop
xchg
fisttpl
lret
mov
imul
add
je
push
iret
cmp
sub
js
sbb
pusha
lcall
inc
dec
aas
ljmp
data16
lcall
dec
icebp
pushf
rclb
mov
lahf
lods
jb
mov
cli
pop
int
das
out
or
jb
adc
mov
xchg
les
jl
adc
sub
rorb
fidivl
arpl
mov
mov
sbb
or
fimuls
rcr
imul
gs
cmpsb
xor
mov
shl
xchg
cmp
pop
sub
mov
aam
mov
pop
bound
ljmp
cli
inc
inc
xchg
ficoms
mov
add
xchg
pop
mov
adc
mov
xchg
cld
jnp
mov
or
jg
pusha
pop
cmp
aas
add
mov
inc
je
insl
aam
bound
enter
sub
pop
and
cmc
jmp
inc
incb
cmp
push
fisttpll
mov
mov
lock
sahf
loopne
pop
fdivs
pop
xchg
test
cmp
xchg
mov
call
movsl
aaa
jae
and
mov
xor
jle
fiadds
js
flds
test
les
add
outsl
mov
adc
xchg
aas
and
bound
jg
xorb
pop
push
loop
lahf
in
pop
inc
fistps
lret
aad
inc
jb
pushf
mov
xlat
xor
mov
loopne
movsb
add
ror
jg
rolb
sub
inc
xor
and
dec
jmp
xchg
xchg
adc
push
int3
mov
sbb
lret
jns
jp
icebp
loop
adc
addr16
icebp
xchg
stos
push
cmp
xlat
nop
sbb
and
ja
les
jl
imul
out
aas
mov
mov
xor
push
sbb
jge
out
dec
pop
mov
push
add
je
in
dec
fs
mov
nop
mov
call
pop
aam
mov
jp
lock
sub
hlt
adc
mov
pop
nop
clc
inc
jp
inc
out
pop
enter
adc
add
sub
in
movsb
inc
scas
lods
lds
andb
in
hlt
pusha
xchg
cli
sub
aaa
sbb
and
fcomip
and
pusha
mov
mov
push
sub
outsb
or
iret
jnp
cmp
push
jbe
mov
push
mov
int
and
add
jae
orb
inc
mov
popa
mov
popa
dec
add
ljmp
dec
mov
dec
add
rcrl
pop
mov
pop
xor
mov
je
fs
sbb
outsl
dec
xchg
mov
ficoml
xor
push
adc
xchg
xor
adc
push
push
mov
jg
pushf
sub
je
pop
repnz
xchg
mov
stos
fsts
bound
cmp
jbe
jo
cmpsl
nop
xor
sub
shl
push
sub
idivb
fidivrs
xchg
push
pop
cltd
xchg
or
xor
adc
popf
cmp
cmc
pop
adc
jge
adc
je
in
call
and
sarl
pushf
cli
iret
insl
sbb
daa
jne
inc
sub
leave
jle,pn
mov
das
or
mov
xor
stos
inc
int
jl
adc
pop
mov
in
dec
fdivrl
hlt
sbb
sbb
mov
jne
aas
cli
es
in
jbe
jo
xchg
ret
scas
fildl
int3
xor
cmp
xor
sub
sbb
ficoml
sbb
stos
xchg
rol
lds
out
sub
or
and
rcr
pop
and
scas
mov
test
mov
pop
leave
pop
ret
add
push
fdivrl
jne
xlat
dec
loope
xchg
jl
out
and
repnz
mov
cmp
add
sahf
sti
out
movsb
gs
cld
ds
mov
xchg
push
imul
mov
xchg
and
xchg
dec
sbb
pushf
cwtl
xor
cwtl
data16
push
push
fidivrl
adc
cmp
dec
push
xchg
mov
mov
out
addl
shl
inc
xlat
push
push
pop
inc
arpl
and
cmp
add
je
mov
mov
pop
push
jno
cmc
pushl
mov
push
dec
icebp
add
adc
adc
dec
pop
push
xchg
and
sub
cmpsl
add
mov
test
shl
icebp
shl
lock
sbb
and
fwait
inc
icebp
cmp
out
lret
cmc
xor
sbb
sbb
mov
test
xchg
sub
loope
xchg
jl
sbb
outsb
or
outsl
or
or
sub
sub
not
dec
sub
ljmp
xchg
inc
in
push
das
sub
mov
into
adc
sbb
jecxz
jp
xor
data16
and
imul
out
rclb
jecxz
fs
daa
aad
mov
sti
sti
lds
rorb
mov
loope
add
gs
push
inc
sti
addr16
mov
push
fidivs
loop
daa
out
lea
rcrl
fldl2t
xchg
cmp
jp
lahf
mov
dec
rorb
loopne
mov
cmpsl
jnp
or
out
lods
cltd
inc
inc
xor
in
mov
scas
iret
cmp
or
push
cmp
push
mov
leave
xor
shll
orl
cs
and
imul
in
fbld
fwait
or
enter
mov
arpl
ss
scas
xchg
call
lahf
jae
jg
je
iret
shl
enter
adcb
or
das
xor
xor
insl
mov
lea
push
jno
and
lret
cmp
fdivl
je
out
js
lock
dec
inc
test
inc
sub
sbb
mov
inc
mov
rcll
into
ret
jp
pushl
fidivrs
push
xor
mov
shlb
jno
pop
arpl
sub
push
mov
out
push
add
mov
js
xchg
add
ret
ljmp
mov
xor
adc
mov
jno
lahf
or
push
push
cmp
mov
jne
hlt
adc
xorl
push
dec
inc
aas
enter
std
sbb
int
sarb
jo
mov
pop
call
adc
cmc
cmp
out
test
cld
xor
rorl
scas
mov
iret
fists
sub
mov
dec
gs
mov
pop
icebp
stc
jne
js
pushf
mov
lahf
sub
adc
daa
das
sbb
xor
xchg
in
dec
pusha
popa
mov
cltd
fmulp
and
mov
xlat
popa
int3
dec
outsb
fmul
into
outsl
pop
add
and
fnsave
insl
cmc
xchg
jbe
cld
insl
pop
sub
daa
sti
dec
and
ficoml
mov
mov
scas
sbb
aas
and
dec
mov
repz
dec
and
cmp
inc
out
mov
repz
cltd
lods
cmp
movsl
inc
mov
dec
imulb
mov
bound
pushf
mov
pop
push
add
dec
in
xor
cmp
add
push
push
inc
in
sub
add
adc
out
das
push
inc
fcoms
cmp
sub
movsl
aas
add
or
cmp
fwait
out
sti
push
insb
xorl
xchg
sub
mov
jmp
push
cltd
adc
xor
aaa
lds
out
xor
cmc
cmp
sub
data16
lcall
insb
decl
push
cmp
or
xchg
repz
int
cmpsl
cs
jae
mov
lea
shlb
ja
sub
mov
mov
and
sub
xor
mov
pop
xchg
fmul
xchg
movsl
xor
and
xchg
jo
or
mov
or
sbb
jge
jmp
mov
call
jno
sbb
dec
push
mov
in
xlat
sbb
mov
dec
fcmovne
xor
push
imul
and
lret
xchg
aad
movsb
adc
div
inc
jae
push
sbb
leave
xor
push
mov
popl
insl
mov
xor
xchg
cld
add
add
in
jmp
mov
outsl
lock
int3
lock
mov
cltd
cmpsb
repz
rorl
mov
mov
sbb
cltd
popl
add
xlat
dec
lret
daa
or
inc
xor
es
push
shl
cmpl
pop
pop
push
xchg
mov
push
mov
loope
into
ret
rcrb
clc
xor
sbb
sbb
cmp
pusha
test
aaa
aad
gs
pusha
sbbl
inc
in
insl
dec
xor
push
lret
je
cmpsl
pop
inc
mov
popf
lahf
aad
xchg
lcall
sub
pop
dec
sbb
inc
xor
pop
sub
popf
movsl
dec
mov
dec
mov
mov
mov
push
icebp
mulb
mov
insl
cmp
in
pop
add
icebp
fstps
int
andl
jns
jmp
cmc
leave
xor
adc
test
mov
je
outsl
mov
icebp
movsb
jle
jecxz
sahf
out
movsl
push
xlat
add
add
out
push
sbb
lcall
fisttpll
andl
add
jns
push
lcall
cli
clc
pop
push
jae
into
push
shrl
xchg
mov
ficomps
sahf
inc
stos
fdivrs
dec
out
addb
sub
je
icebp
jge
iret
aaa
inc
xchg
pop
xor
sub
ficompl
cmc
push
and
scas
cmp
pop
adc
push
filds
ljmp
and
mov
sub
std
shll
inc
jae
in
cmpsb
ljmp
jge
test
inc
xchg
mov
sub
ret
xchg
push
cwtl
mov
mov
out
mov
and
sub
aaa
mov
shlb
mov
mov
test
inc
daa
mov
sub
or
pop
fmul
mov
or
es
pop
xchg
addr16
repnz
ljmp
and
lret
sbb
pop
cwtl
inc
jnp
cli
jecxz
jge
mov
dec
das
loopne
pushf
push
ljmp
pop
push
ss
and
sub
rorl
or
mov
icebp
adc
xor
jecxz
or
inc
repz
add
jle
dec
mov
aaa
aad
ret
sbb
aaa
ja
pop
fmull
xchg
push
mov
test
pop
loop
ja
dec
cld
sbb
je
cmpsl
lock
lock
xor
mov
or
dec
pop
adc
jo
test
aam
lods
jns
sti
roll
mov
push
aam
popf
and
rorl
lea
sbbb
pop
in
adc
int
mov
pop
ja
push
out
in
subb
gs
and
jnp
ja
mulb
cmpl
xor
int
test
sub
jb
fimull
dec
inc
imul
jmp
leave
sahf
push
mov
push
lret
lock
and
inc
mov
push
sbb
xchg
add
push
add
mov
es
lods
mov
xlat
mov
aas
fimull
xchg
shrb
mov
push
lods
lret
loope
adc
arpl
in
fcomps
pop
dec
insl
or
gs
fstl
jno
cwtl
data16
dec
pop
fs
ja
jmp
js
negl
dec
pop
mov
addr16
xor
cmp
mov
int
jmp
icebp
push
dec
icebp
lods
scas
xchg
bound
mov
inc
pop
and
sti
fdivr
mov
xor
hlt
jecxz
push
in
in
shrb
mov
loop
aam
jmp
sbb
sbb
arpl
les
jle
stos
cs
mov
pop
aas
inc
scas
imul
out
mov
cmp
cmc
lock
mov
sub
imul
outsl
xchg
mov
or
pop
adc
and
shrb
outsl
pushw
jns
sub
jg
sahf
in
ret
js
cli
xorb
in
data16
popf
rcrb
pusha
jl
mov
aad
inc
mov
test
push
orl
iret
cs
rcr
mov
aam
pop
xchg
sbb
fistps
call
dec
int3
inc
out
lret
fidivrs
ja
aas
cld
addr16
in
loope
mov
imul
mov
pop
in
icebp
sbb
and
and
pop
std
subl
or
add
xor
pop
test
pushf
xchg
cli
add
rcrb
out
cmp
mov
out
jo
ja
pop
sbb
xchg
cwtl
cli
in
xchg
sub
sub
imul
lock
imul
sti
jmp
inc
mov
pop
jl
fldcw
add
or
in
adc
loope
mov
or
mov
nop
fistps
and
lods
adc
push
sbb
jmp
and
enter
adc
lret
in
lods
shrb
faddl
lcall
push
dec
push
add
mov
adc
mov
cmp
fistpll
jmp
cs
xor
xor
fwait
push
inc
xlat
mov
test
ss
out
inc
fidivrl
fmull
cwtl
xchg
push
push
or
sti
adc
adc
xchg
sbb
inc
mov
xchg
inc
repz
fidivrl
push
stc
xor
cltd
je
jno
xor
ret
cmp
test
pop
add
inc
xchg
mov
loopne
shrl
ja
inc
scas
pop
dec
xor
dec
int
dec
or
imul
bound
in
sub
roll
mov
in
push
jmp
loop
and
sub
mov
sub
xchg
aad
sbb
jo
fstp
out
cmc
fdivs
es
mov
push
addr16
loop
enter
daa
loop
mov
hlt
lods
cmp
pop
cmc
stos
push
outsl
mov
inc
test
test
aad
cmp
push
mov
add
cmp
movsb
cmp
cmp
sbb
in
mov
mov
imul
jg
ret
mov
ja
sbb
xchg
sti
cwtl
add
sbb
cld
mov
mov
cmp
dec
xchg
mov
mov
jno
lea
mov
push
jg
sbb
lcall
loope
pop
inc
mov
add
xor
shrl
fs
fbld
mov
out
cmpsb
lret
in
jb
xor
sub
repnz
push
pop
pop
xchg
jnp
xchg
push
mov
fwait
inc
mov
xchg
pop
movsb
clc
mov
lea
xor
push
stos
negb
dec
test
fwait
dec
jnp
lcall
inc
cld
je
flds
sub
popa
pop
xchg
dec
adcl
xchg
mov
or
in
fidivrl
scas
imul
addr16
ja
mov
sbb
sti
out
jmp
sbb
movsb
lcall
sbbl
mov
inc
mov
or
mov
mov
add
dec
pushf
mov
mov
cmc
mov
insb
imul
loope
pop
xor
mov
mov
fdivs
icebp
mov
iret
xor
ss
jbe
repz
push
mov
xchg
mov
cmpsb
ret
repz
insl
jb
cld
stos
jo
lret
inc
enter
daa
jl
repz
lods
mov
or
jle
mov
push
test
jmp
lahf
ficoml
ja
sahf
lea
mov
in
scas
stos
insl
sub
into
mov
andl
fcompl
jne
mov
push
movsl
add
and
dec
and
xchg
je
mov
jb
bswap
cmp
mov
xlat
adc
std
imul
ss
ror
and
pushf
sahf
jo
xor
sub
or
divb
sbb
lret
pop
pop
movsb
sbb
bnd
mov
cmpsb
lds
out
push
les
sub
shll
mov
sbb
addb
loope
inc
pop
shr
outsb
mov
into
or
ficompl
push
xor
fsubr
mov
xor
movsl
add
mov
and
inc
dec
fsubs
or
pop
mov
hlt
or
dec
movsl
cmp
shr
shr
inc
inc
mov
and
sub
and
inc
and
jne
push
or
mov
aaa
dec
xor
out
or
pop
push
xlat
mov
mov
and
js
and
pushf
xor
mov
int
es
push
int
mov
mov
mov
mov
jns
stc
lods
add
jno
cmp
mov
or
clc
out
mov
and
dec
test
in
testl
mov
imul
push
sahf
stos
push
sbb
inc
xor
mov
jae
sub
xor
push
sti
push
inc
and
sub
add
dec
ja
pop
insb
test
and
mov
fistps
daa
lret
pusha
les
pop
pop
imul
out
and
push
andb
jbe
pop
fwait
dec
enter
jl
negl
jecxz
fimuls
xchg
cmc
lahf
test
sbb
push
add
popl
add
lds
cltd
mov
fiaddl
scas
ss
xor
push
push
cmpsl
mov
pusha
adc
adc
pop
jecxz
mov
ret
and
sbb
sub
stc
xchg
sbb
sub
mov
imul
outsl
sahf
cmp
loope
cld
pushf
add
add
pop
lcall
mov
andl
cmp
dec
cmc
jl
xchg
dec
mov
aas
test
insb
outsl
xor
pop
and
push
push
dec
xchg
sbb
inc
pushf
ret
test
mov
sarb
mov
add
jnp
mov
push
stc
mov
add
insb
stc
outsb
ja
mov
mov
jo
mov
add
adc
negb
add
std
and
aam
push
jp
dec
sar
negb
jnp
mov
xchg
mov
adc
mov
imul
orl
es
stc
ret
lret
pop
push
fdivrs
cmpsl
add
ret
mov
pop
sub
jmp
cld
movsb
mov
or
loop
cs
cs
xchg
jae
pop
push
ljmp
mov
pinsrw
pop
pop
stos
out
out
push
cmc
push
and
pop
loop
out
cmp
adc
add
dec
in
cwtl
cli
lcall
pop
pop
cmc
jecxz
inc
jl
jns
mov
push
imull
push
jp
jns
in
daa
scas
mov
int
repz
mov
test
lock
xor
dec
fbld
mov
sub
outsl
sub
mov
or
jnp
sub
or
cmp
push
ja
mov
mov
leave
bound
and
inc
rcl
pop
and
sbb
jae
jl
scas
sahf
dec
daa
xorl
mov
jns
lods
sbb
and
negb
push
dec
sub
add
filds
shrb
and
and
insl
xchg
and
rolb
in
xor
pop
imul
dec
das
mov
lock
mov
cmpsb
add
sub
ret
lods
dec
sti
jp
clc
out
dec
push
xchg
cltd
sbb
mov
jmp
shr
pop
fnstenv
test
dec
xchg
aam
mov
das
sub
aas
lea
repz
mov
inc
xchg
xorb
inc
scas
ret
inc
pop
call
add
mov
xor
inc
push
adc
pop
mov
cmp
sbbb
ja
cmp
rorb
pop
in
out
adc
xor
lds
inc
add
sub
xchg
dec
xchg
stos
dec
jnp
pop
sbb
stos
mov
inc
aam
xor
and
loope
cmp
in
bswap
stos
stc
dec
sti
out
push
fs
and
call
cld
pop
jge
push
imul
cmpl
jecxz,pn
call
jno
and
add
dec
push
in
push
movsb
jp
pop
mov
fwait
mov
sarb
das
lret
fdivrs
faddl
push
or
or
or
or
ja
xor
mov
dec
into
es
jae
cmp
or
sub
jb
inc
mov
mov
lret
ror
mov
movsb
cmpl
xchg
call
out
cmpb
inc
movsl
push
adc
push
jp
rclb
push
sbb
and
mov
jle
jmp
sbb
out
mov
xor
inc
or
mov
cmc
mov
mov
push
rclb
inc
test
lcall
xor
cmc
sub
sub
lea
xchg
jp
jns
push
popf
sub
outsb
cmp
out
fsub
push
pop
sbb
pop
shl
jge
leave
out
pop
mov
aas
cmp
add
pop
sub
push
leave
add
lahf
xchg
stos
xchg
push
repz
xor
out
push
jae
sbb
dec
out
adc
mov
in
cmp
xor
fnstsw
cmp
idivb
dec
xchg
loopne
pop
stos
rcrb
xchg
insl
mov
subl
nop
lea
push
fs
jae
dec
stos
arpl
push
cmpsl
push
fstps
push
adc
cmp
sti
push
sahf
mov
inc
mov
xor
jne
and
lds
iret
das
pop
cs
cld
jns
adc
ja
gs
jb
xchg
js
addl
jb
sbb
jne
dec
call
fldcw
in
outsl
cmp
inc
dec
fmuls
test
xchg
push
mov
in
mov
jb
adc
outsb
fstp
inc
pusha
pushf
xchg
mov
sub
adc
jno
popa
inc
lahf
cmpb
out
adc
in
test
call
gs
int
push
dec
adc
rcll
iret
push
xchg
mov
mov
cmp
jecxz
test
sub
mov
or
xchg
repnz
popa
sahf
xchg
mov
jl
mov
sub
cmp
xor
xor
mov
jecxz
call
push
or
cmp
push
or
into
rcrl
lock
mov
loope
mov
test
mov
inc
inc
sub
jo
add
pushf
inc
mov
leave
rcl
or
lea
cmpl
mov
mov
loopne
lods
loope
insb
cmp
mov
or
icebp
imul
out
lock
cmp
daa
dec
nop
sbb
sub
mov
push
cmp
pop
sub
sbb
fstpl
xlat
imul
push
das
sub
sub
insl
lcall
mov
inc
ret
cmp
xlat
scas
in
or
dec
icebp
jl
cmp
mov
sbb
ljmp
jmp
stc
cmp
lock
ret
cmpsl
cmpsb
mov
push
mov
or
sbb
push
jbe
jae
sub
aad
and
pop
out
movsb
inc
mov
fadd
dec
pushf
push
xor
lcall
mov
xchg
inc
std
mov
add
iret
ficoml
ret
lcall
idiv
lret
pop
icebp
add
jne
mov
sarl
adc
orl
andl
push
lock
pop
inc
push
xorb
fldenv
test
lea
sbb
std
movsb
es
push
in
fldt
or
pop
cltd
mov
sbb
or
pop
insb
inc
push
cmp
or
test
mov
frstpm(287
adc
movsl
xor
jo
aaa
mov
sbb
mov
push
jmp
or
fs
dec
aad
fsubrl
lea
pop
adc
fldenv
xorl
sti
cli
push
push
popa
mov
int
mov
ds
pop
sub
aas
pop
into
lret
sbb
aad
and
stc
cs
sub
iret
fucom
mov
loopne
push
push
pop
mov
xor
pop
repnz
jp
or
cmp
rcrl
out
sbb
insb
data16
push
cwtl
mov
enter
stos
sbb
mov
clc
dec
cltd
cmp
jo
filds
push
int3
out
dec
repnz
out
cli
xchg
sti
mov
sti
jl
outsl
jbe
and
and
mov
inc
add
imul
adc
dec
fwait
jg
mov
dec
pop
addr16
sahf
adc
xor
iret
cmp
test
rorb
pop
mov
inc
mov
push
or
rcll
insb
sti
into
scas
jp
mov
andl
mov
outsb
lock
test
fidivrl
in
add
mov
mov
or
scas
add
and
imul
sbb
jo
pop
lea
insb
rorl
stos
stc
pop
mov
lcall
pop
cs
nop
xchg
jecxz
jecxz
fdivr
dec
sbb
jo
xchg
adc
sub
jne
outsl
cmpsl
imul
push
orb
xor
test
mov
movsl
xor
or
mov
cmp
mov
es
pop
je
bound
push
mov
aaa
and
pop
test
movsl
leave
fs
std
mov
scas
cli
dec
mov
lock
fcmovne
je
mov
xor
inc
shll
nop
jge
or
andb
lret
xor
mov
pop
mov
sbb
inc
sub
push
fucomp
xchg
jnp
add
jl
mov
xchg
icebp
jae
les
lret
mov
loop
pop
orl
cltd
inc
cmc
mov
std
scas
mov
bound
jnp
mov
inc
out
repnz
stos
out
movsl
cmpl
sub
mov
xchg
jne
das
push
leave
dec
xchg
fbld
dec
movsb
xchg
shrl
add
mov
out
aam
in
adc
arpl
cmc
sbb
into
or
out
adc
mov
inc
pop
fimull
add
xor
xchg
lods
inc
dec
imul
test
cld
dec
dec
fwait
jb
xor
fwait
aam
push
cmpsb
sahf
sbb
inc
shl
inc
test
sub
mov
js
inc
adc
push
in
divb
xchg
jg
clc
xlat
inc
cmp
jg
mov
or
aaa
xchg
or
xchg
inc
mov
insb
inc
mov
sub
cmpsl
lds
pop
mov
sub
stos
addl
addb
rorl
mov
das
mov
adc
sbb
jns
gs
jp
dec
jb
enter
fwait
sub
and
cmpsb
push
cltd
adc
scas
pop
scas
cs
jmp
add
call
dec
push
adc
push
dec
sub
loop
imulb
or
mov
add
fucomi
test
xchg
pop
aaa
int
scas
fidivs
out
inc
sub
push
cmpsb
cmp
adcl
pop
stc
jp
push
pop
cli
cmpsl
jmp
push
pop
cmp
cltd
fisubs
mov
jno
scas
push
outsl
in
mov
cmc
pop
mov
cli
pop
lds
pop
jge
ss
ja
jp
aas
nop
out
fsub
clc
mov
nop
cmp
mov
push
jo
pop
test
push
in
sbb
or
loop
jnp
int
in
stos
addr16
xor
push
rcr
pop
jp
jmp
enter
jnp
lret
ja
dec
and
aas
mov
dec
push
mov
shll
add
loopne
mov
sub
inc
xor
adc
movsb
inc
pushf
cltd
xor
fwait
pop
mov
test
fsub
jmp
adc
test
jge
daa
notb
inc
aas
push
sub
out
sub
inc
imul
dec
push
xchg
jl
inc
sub
adc
adc
dec
cmp
repnz
sbb
inc
cmpsl
mov
test
lds
xchg
jmp
scas
mov
pop
cmp
push
call
xchg
adc
mov
movsb
or
sub
push
or
push
movsl
sub
dec
jle
xchg
cs
mov
test
mov
mov
mov
jp
inc
outsb
js
ljmp
dec
xlat
sub
les
mov
lods
cmpsb
addr16
ds
push
imul
jge
mov
mov
xchg
push
push
cwtl
jp
push
mov
out
stc
xchg
incb
xor
mov
insb
cli
leave
daa
imull
sbb
cmc
cmpb
adc
mov
xlat
mov
xor
mov
push
loopne
into
fwait
insl
mov
pop
or
mov
sbb
ret
mov
mov
pop
push
mov
xchg
arpl
add
adc
int3
xchg
jg
mov
xor
fcoml
dec
and
adc
lret
adc
cmp
ja
xchg
add
loop
inc
xchg
inc
mov
stc
jl
sub
inc
xor
push
jmp
mov
aas
sub
int
jnp
lret
lock
jnp
aad
mov
add
jmp
aad
jo
les
and
push
stos
push
xchg
jp
fldl
mov
pop
stc
andb
arpl
or
add
fstpl
psllq
rcr
dec
mov
mov
loopne
pop
aad
arpl
dec
dec
mov
jne
and
sbb
fwait
repnz
cltd
inc
xor
sub
in
jp
jne
cld
xor
scas
fs
icebp
cmp
pop
test
js
ss
clc
xor
test
adc
jmp
stos
pop
mov
icebp
inc
pop
lds
jmp
lock
in
dec
adc
mov
jne
push
or
loopne
subb
into
xchg
jb
jo
jo
out
add
push
pop
jno
xor
and
pop
cmpb
fldpi
adc
xchg
push
adc
jo
mov
popf
cmp
sar
sub
mov
rolb
lahf
pop
or
mov
mov
push
daa
xchg
xchg
push
mov
fisubrl
add
xor
pop
scas
int
dec
movsl
xchg
inc
cmp
push
enter
inc
shlb
test
std
inc
push
movsl
mov
pop
push
lock
mov
pop
aad
in
or
pop
popf
loope
sub
xor
inc
or
pop
adc
lds
push
add
sbb
fnstenv
add
rol
mov
out
popa
sbb
add
dec
in
jl
cli
rolb
notl
jge
ret
fdivl
rcrl
pop
adc
xchg
sarl
mov
bound
xchg
in
push
mov
dec
or
xlat
stc
add
push
xchg
push
mov
sbb
mov
stos
std
pop
fisubs
repz
cltd
fistpll
scas
xor
ja
mov
mov
out
sti
dec
and
adc
push
inc
je
push
pushf
shl
xor
mov
cli
adc
sti
decb
test
xor
jne
clc
out
popf
mov
lcall
lcall
test
cmp
push
sbb
add
cmp
enter
pop
aaa
shrb
lods
xor
or
sahf
and
pushf
fdiv
inc
inc
xor
dec
cld
fsubs
push
xchg
or
mov
and
iret
sub
xchg
or
in
das
ja
and
and
lea
jne
or
mov
mov
roll
adcb
iret
mov
inc
and
idivb
enter
icebp
pop
xor
nop
mov
inc
sbb
arpl
pusha
pop
orb
mov
push
ljmp
pop
scas
out
sbb
mov
add
test
adc
push
cmpsl
inc
mov
dec
imul
outsb
pop
sti
ja
mov
clc
in
jmp
mov
xlat
lret
xchg
dec
mov
and
fstl
daa
cmpb
fnstcw
loop
lahf
movsb
xchg
pop
mov
or
fisttpll
in
jno
repz
js
pop
or
jae
js
aaa
je
sahf
pusha
fxtract
pusha
mov
dec
pop
xchg
out
popf
cmc
nop
mov
rol
jne
sarb
adc
int3
aam
push
lcall
stc
xlat
adcl
inc
mov
fistpl
push
scas
add
ret
mov
sub
jp,pt
cmp
and
pop
or
test
push
and
jp
mov
and
inc
pop
push
xchg
jnp,pt
add
sbb
mov
aaa
inc
scas
fnstcw
add
xchg
pop
ljmp
ret
sbb
outsl
inc
xchg
leave
lret
sbb
cmp
xor
dec
dec
add
jnp
fs
insb
pop
icebp
test
xchg
gs
mov
pushf
inc
lret
into
scas
fcmovnb
orb
and
inc
push
das
sub
push
dec
push
sbb
inc
out
js
mov
gs
fwait
ret
xchg
fistpl
and
or
daa
dec
mov
addr16
push
xchg
xchg
xchg
lcall
jb
notl
aas
sub
mov
jmp
mov
popf
dec
push
push
mov
dec
pop
out
mov
mov
cmpsl
and
jge
test
push
or
push
in
xor
push
lods
sub
mov
je
fildl
jl
or
mov
in
fwait
movsl
aas
pop
popa
and
sahf
aad
adc
jne
jge
inc
data16
cltd
jmp
test
xor
pop
mov
call
xchg
test
mov
or
pop
in
testl
jecxz
jle
cmpsb
mov
scas
xchg
dec
aam
in
inc
add
jnp
push
xchg
shrl
adc
cs
push
or
and
imul
lahf
jb
shll
jbe
xor
cmp
int
mov
dec
ficoms
jmp
dec
mov
roll
adc
mov
jb
add
adc
pcmpeqw
add
mov
push
adc
and
outsb
leave
outsb
and
push
js
out
scas
jl
pop
and
cmp
push
pop
mov
in
data16
pop
popf
test
or
pop
inc
shrl
jle
mov
inc
dec
inc
fcoml
pop
orl
push
fwait
push
jne
pop
lds
cmp
shlb
push
nop
or
into
mov
mov
jmp
outsl
and
cs
stos
in
mov
and
and
mov
rcrb
cltd
adc
or
enter
pop
cmpsb
int3
adc
ds
add
shlb
jle
push
xor
mov
and
adc
cmp
shlb
adc
adc
aaa
ljmp
or
mov
cmp
mov
inc
sbb
shr
ret
sub
jle
inc
jle
pop
cmp
lods
xchg
insl
mov
jge
mov
cs
jbe
or
bnd
jmp
or
and
shr
jo
adc
mov
aad
push
jns
cmp
cmpsl
add
aad
outsb
inc
stos
pop
sub
push
inc
push
and
push
inc
or
sbb
fstpt
insl
outsl
xlat
in
insb
sub
and
call
mov
int3
inc
js
mov
cwtl
ds
or
iret
mov
adc
mov
clc
addb
icebp
js
xchg
pushf
add
xor
jp
out
je
shl
idivb
add
aad
pcmpgtd
add
and
je
test
enter
leave
mov
jmp
adc
fwait
repz
adc
pop
add
aaa
cmp
je
pushf
fcomp
pop
jno
fsubr
push
adc
das
gs
sbbl
sbb
cs
sub
dec
and
mov
call
out
dec
inc
jo
adc
loope
in
in
scas
and
jno
sub
movsl
sti
cmp
imul
sbb
leave
pop
add
cmpsb
cmp
or
and
xchg
inc
shrb
adc
push
iret
dec
adc
outsl
ljmp
mov
rolb
pop
jo
push
jo
xchg
push
or
jo
jle
add
leave
add
aaa
cs
rcrl
test
addb
dec
jge
adc
mov
inc
cwtl
cmp
cmp
jns
xor
rcr
popf
pop
add
faddp
push
adc
mov
cmc
in
cmp
push
inc
fs
adc
pop
jbe
int
xchg
popf
faddl
cmp
inc
frstor
scas
sbb
pop
shll
add
xchg
sbb
or
jl
aaa
push
jp
into
enter
imul
mov
jmp
pop
xchg
cmc
outsl
cld
dec
cmpsb
stos
notl
js
pop
and
push
fnsave
iret
out
insb
int3
pop
or
mov
out
and
aad
cmpb
sti
test
stc
xchg
jg
data16
adc
pop
pop
sbb
enter
lds
mov
push
addr16
mov
adc
leave
lea
aas
pop
adc
inc
fstl
enter
pop
repz
pop
dec
cmp
push
push
fwait
test
test
xchg
dec
xchg
jbe
and
test
jg
mov
or
mov
jle
cmpsb
push
mov
push
pop
imul
pop
add
mov
adc
mov
stos
jb
sbb
jns
lods
or
leave
hlt
lea
lock
pop
outsl
ss
mov
push
jbe
jle
xchg
mov
sub
in
loope
and
push
sub
xorl
xor
shrb
sbb
pusha
cmc
fcmovnbe
std
cli
jle
ja
jo
xchg
jns
dec
nop
andps
sbb
fdivr
dec
adc
jno
cmc
lahf
popa
mov
push
jl
fisttps
in
or
popf
sbb
test
mov
mov
cmpsb
test
adc
pop
fcmovu
ss
jle
sub
dec
popf
push
fstl
mov
subl
push
pushf
arpl
std
popf
rolb
sahf
sahf
push
xchg
nop
nop
dec
inc
movsb
mov
and
jnp
dec
mov
pop
adc
cmpsb
fidivrl
mov
ret
xchg
faddl
stc
mov
fistps
test
leave
pop
mov
sbb
paddw
fsubrp
in
sbbb
and
mov
std
sti
pop
dec
push
push
leave
sub
mov
sti
popa
addr16
pop
add
cmpsl
out
xchg
jb
jp
jmp
mov
push
jo
cmc
mov
sub
orps
push
push
push
insb
dec
into
movsl
mov
mov
mov
xlat
fwait
test
stos
fucompp
xor
call
imul
sub
addb
je,pt
and
ljmp
or
lret
inc
sarl
adcl
in
dec
dec
in
add
mov
mov
int
cmp
mov
push
add
inc
mov
ja
ljmp
mov
pushf
jae
enter
shr
mov
insb
loopne
scas
movsl
repz
popa
mov
jns
repnz
sub
cli
mov
js
out
roll
jae
sub
pop
cld
sbb
adc
add
and
gs
stc
sbb
sub
mov
sub
loop
and
lahf
test
push
ds
neg
aas
pop
pop
cld
push
jecxz
or
shrb
mov
iret
push
lock
sarb
xchg
xchg
mov
dec
dec
pop
lcall
in
mov
add
ljmp
rclb
mov
xchg
cmp
dec
push
icebp
loopne
inc
pushf
and
jge
jb
fs
push
sbb
sub
mov
jmp
addb
jb
iret
and
jo
js
test
inc
and
inc
test
push
xadd
insl
shr
pop
lcall
sahf
jae
or
ja
push
test
cmp
aam
rorb
add
sbb
mov
aaa
jmp
mov
stos
int
imul
dec
xchg
xchg
iret
lahf
cmp
inc
dec
fldenv
adc
imul
shlb
shl
jp
mov
cld
add
xorl
dec
addr16
adc
mov
movsb
push
pushf
int
bound
jo
imul
hlt
out
ret
inc
subb
inc
xchg
xor
mov
xchg
addr16
cmp
push
sahf
or
das
dec
sub
and
jb
push
das
lods
pop
movsl
je
cwtl
fimuls
pop
scas
popf
pop
imul
mov
iret
xchg
mov
mov
rolb
cmc
adc
test
loope
cmpsl
xor
repnz
das
adc
sahf
jb
sub
inc
std
mov
cld
popf
pop
ss
ja
in
and
mov
mov
sbb
pop
insb
ffreep
les
pop
pusha
insl
xchg
adc
ret
mov
dec
test
daa
push
xor
pop
adc
or
push
daa
cmpsb
push
rolb
movsb
iret
inc
pop
add
cmp
push
je
rcrl
scas
adc
in
lret
adc
mov
sbb
xor
loope
or
add
cli
pop
xor
addl
sbb
pop
vhaddpd
fisubrs
cmpsb
jle
inc
test
inc
push
push
lret
add
mov
ficomps
sub
mov
mov
xor
mov
jns
pop
dec
add
jl
adc
outsb
clc
adcl
add
cmpb
ret
and
push
fdivrs
cmp
jbe
scas
rorb
daa
pop
xor
mov
roll
bound
or
mov
out
push
sub
popl
mov
js
add
adcl
jl
mov
xchg
flds
sub
lods
xchg
fs
lret
xchg
xchg
push
sub
mov
sbb
and
test
or
out
mov
mov
mov
xorl
mov
insl
fnstcw
dec
mov
enter
jl
cmp
or
frstor
fbstp
add
cmpsb
inc
jmp
inc
adc
fisubs
out
lds
leave
cli
sbb
sahf
mov
inc
add
and
xlat
push
dec
dec
sti
sub
mov
cmp
mov
adc
jb
nopl
pop
cwtl
jns
cmpsb
ficoms
push
rol
inc
push
jae
fcompl
push
inc
out
jbe
push
mov
push
xchg
mov
mov
mov
mov
mov
and
lods
push
lea
lea
cmp
pop
add
dec
adc
shlb
int3
dec
jp
popf
and
fbstp
dec
xchg
in
mov
add
xor
popf
icebp
cmp
repnz
adc
pop
mulb
pop
sbb
mov
dec
inc
cltd
pop
sarl
leave
shrl
jb
xchg
xor
push
dec
cmp
rorl
mov
dec
cmp
sbb
orb
jb
lea
mov
iret
push
mov
mov
cmp
sub
popa
and
push
popf
mov
sbb
cmp
int3
dec
stc
mov
inc
push
sub
or
jns
or
push
add
xlat
xchg
scas
mov
adc
lods
inc
jae
mov
mov
adc
ret
xchg
pusha
push
cmpsb
sub
inc
imul
mov
inc
mov
loope
loope
and
mov
pop
adc
daa
sbb
push
jp
movl
mov
push
cmp
ja
sbb
mov
fmulp
dec
and
icebp
test
jo
fwait
inc
enter
adc
ja
inc
repz
pop
sub
mov
xchg
fcmovnb
and
mov
jp
stc
outsb
cmp
and
outsb
or
sti
dec
push
test
jne
fs
and
popa
xchg
sbb
add
xchg
pop
mov
insb
push
fmull
leave
ffreep
dec
adc
push
cmpsl
rol
daa
push
ja
lahf
filds
sbb
or
adc
orl
cmp
cltd
addr16
push
rcr
cmp
xor
sub
dec
fs
arpl
es
in
addr16
or
and
pop
stos
push
cmc
loope
inc
or
in
jo
jb
sti
mov
dec
mov
jmp
cli
test
je
out
or
sub
xchg
ja
sub
imul
dec
dec
pop
or
ja
push
imul
jl
xchg
std
jg
lds
fdivrl
mov
fidivs
mov
adc
inc
adc
test
pop
shll
imul
push
fmuls
cmpsb
aad
lahf
ds
sbb
push
and
mov
loopne
jne
push
outsl
mov
jns
mov
mov
xchg
xchg
add
mov
sbb
and
pushf
mov
call
xchg
push
lret
mov
dec
sahf
out
and
cmp
fidivl
and
aas
cmp
lock
fs
lods
scas
pop
cs
enter
pop
or
inc
xchg
fwait
jno
pop
lret
add
push
shlb
mov
and
inc
int3
and
shlb
pushf
cmp
lods
sbb
jns
popf
daa
mov
push
sub
xor
jb
inc
in
sbb
daa
mov
dec
and
das
sub
sub
cmpsb
outsl
in
push
cs
xchg
sub
ret
movsb
arpl
das
cli
mov
in
lods
mov
jmp
lahf
lea
push
push
lea
pop
jbe
dec
inc
cmp
sbb
mov
movsl
jb
and
in
mov
fwait
inc
or
inc
and
iret
jae
popf
pop
loope
insl
adc
lea
loopne
adc
jno
inc
enter
xchg
pop
cmp
sub
dec
and
adc
sub
notl
adc
ljmp
cmp
jo
movsl
fwait
xchg
mov
jmp
xchg
ja
bound
inc
jnp
push
pop
sbb
shll
mov
xchg
adc
in
lods
push
stos
nop
xchg
cltd
xlat
push
dec
xchg
orb
cltd
sub
popw
daa
sbb
sub
push
xor
mov
push
xchg
in
push
aam
outsb
fnstsw
dec
or
out
push
aad
ss
mov
jno
movsl
pop
jbe
inc
mov
rcrl
mull
repz
test
jle
lcall
pop
testl
jg
xchg
mov
iret
rcl
addr16
shl
inc
js
fcompl
std
jb
lds
mov
or
lea
inc
add
test
and
insl
adc
xchg
or
jno
jg
loop
loop
rorl
push
ror
mov
sub
sbb
sbb
mov
jae
push
mov
and
cmp
jp
sti
pop
gs
mov
pop
icebp
and
and
push
les
negb
dec
push
daa
jecxz
dec
je
or
je
add
dec
xor
pushf
add
or
pop
gs
outsb
mov
jns
sbbb
push
mov
sbb
mov
insb
dec
sti
pop
call
mov
dec
xor
push
mov
mov
sub
add
iret
xchg
rcrb
pushf
pop
push
mov
push
fwait
jle
add
cltd
sub
jl
jnp
pop
mov
cmpb
lret
and
pop
mov
sbb
cmpsl
aad
daa
or
xchg
and
xchg
dec
mul
and
mov
xchg
sub
ret
lea
inc
rclb
sub
sbb
dec
fmulp
jno
sub
ds
outsb
stos
mov
cs
cld
cmpsb
inc
test
insb
cmpsb
sub
inc
pop
sub
xchg
lods
icebp
bound
je
outsl
cmpsb
rorl
push
sub
xchg
xor
sbb
mov
jb
xchg
insb
mov
insl
sbb
jo
shlb
call
pop
mov
mov
ret
pop
in
pop
sbb
pop
sbb
int3
mov
int
add
mov
cli
fwait
pop
lock
mov
and
fimull
or
loop
cmpl
ret
outsb
rorb
lret
cs
adcb
xchg
fldl
pop
stos
xor
aad
push
sub
or
push
pop
adc
std
dec
mov
jle
jp
mov
inc
mov
popf
rorb
je
imul
ss
cmpsl
fwait
loopne
jnp
mov
test
iret
aaa
and
dec
xchg
inc
pushf
dec
xor
mov
stos
lock
roll
cmp
outsl
add
lahf
js
push
mov
sti
repnz
push
push
imul
mov
pop
lret
lds
sbb
dec
fistl
xor
in
loop
jg
sti
push
nop
xchg
shll
pop
pop
and
xchg
leave
daa
into
push
popf
insb
mov
stos
insb
cmp
mov
inc
xor
mov
insl
add
sahf
out
cmp
sub
or
mov
test
ljmp
fstl
sbb
jle
xor
outsb
orb
and
and
add
ret
cmpsb
xorl
mov
imul
je
sbb
out
sbb
mov
scas
cltd
dec
mov
std
push
addl
hlt
mov
mov
inc
push
xor
push
stos
bound
adc
sbb
aad
out
pop
dec
and
lds
ljmp
push
lods
orl
mov
add
sbb
and
loop
cvtps2pi
lcall
adc
sbb
pop
dec
ficompl
scas
cwtl
int3
sbb
xchg
add
push
xor
jb
mov
push
mov
pusha
push
js
sti
and
divl
callw
xchg
outsl
mov
pop
mov
add
inc
inc
out
or
in
ficompl
jnp
out
sarb
xor
scas
out
lcall
mov
mov
cmp
lods
aad
xchg
test
iret
sbbl
aas
mov
add
mov
pop
lcall
mov
mov
andb
or
lds
sahf
mov
bound
aam
lea
mov
xor
stc
or
and
pusha
or
ds
xor
repnz
movsb
pop
sarb
push
push
mov
inc
dec
sub
pop
aam
mov
adc
pop
pop
cmpsl
xor
pop
outsl
cmc
test
dec
icebp
dec
inc
mov
test
or
jg
shll
dec
xor
loop
aaa
jp
push
jecxz
insb
and
push
lods
mov
clc
push
mov
mov
mov
addb
sub
out
cld
lret
in
mov
js
and
push
jl
xor
pop
es
int3
andl
in
jo
dec
je
xor
jle
sbb
cmp
testl
repz
dec
das
hlt
aas
or
add
push
cld
push
lahf
data16
push
fwait
sbb
jmp
int3
notl
mov
dec
add
bound
inc
data16
movsb
pop
adc
scas
mov
inc
fdivrs
inc
into
or
rolb
repz
mov
xor
fwait
ret
sbb
sbb
or
stos
clc
aam
add
push
push
ja
pop
or
fstpl
pusha
cmc
cmc
lea
and
addr16
das
push
xchg
pop
out
sbb
add
cmc
mov
cs
repnz
cltd
cmpsl
sbb
lret
enter
push
insb
dec
mov
push
sub
sbb
mov
out
int
and
fwait
mov
daa
mov
mov
pop
push
sub
jne
cld
or
cs
sub
mov
mov
push
xchg
push
ret
jno
scas
lds
fisubl
xrelease
mov
adc
cmp
jl
xchg
cli
dec
cmp
xor
dec
ds
hlt
iret
cmpb
inc
jle
scas
push
push
ret
outsb
movsl
lahf
push
imul
sbb
xlat
jecxz
pop
inc
insb
ficompl
scas
lds
mov
in
outsb
ficoml
push
sarl
adc
xchg
xchg
push
dec
fdivs
mov
loope
adc
mov
ret
sbb
ljmp
sbb
cmp
shll
scas
fimull
mov
inc
cltd
push
fidivs
mov
adc
rcrb
mov
jns
add
dec
leave
mov
pop
dec
in
scas
shl
fidivs
inc
pop
ds
sbb
jp
out
and
cwtl
cs
int3
xchg
lret
jbe
lods
mov
sbb
dec
pushf
dec
dec
jbe
xchg
pop
mov
cmp
mov
mov
leave
fsubrl
cmpsl
xchg
xchg
ss
xchg
sbb
test
adc
jns
fsub
and
loop
or
xchg
sub
jmp
jecxz
and
ret
xor
jns
add
hlt
push
xchg
and
in
movl
inc
faddp
cwtl
mov
int3
inc
test
adc
and
xchg
pushf
imul
mov
xchg
daa
insl
int
mov
cli
outsl
out
push
stc
into
pusha
dec
or
imul
sbb
es
aam
xor
arpl
sub
xchg
xchg
ja
orl
dec
mov
inc
cmpsl
push
mov
jp
pop
or
mov
ljmp
sub
xor
lahf
inc
sbbl
dec
jne
sahf
adc
enter
mov
mov
testb
fwait
or
movsb
push
lahf
imul
push
or
nop
insb
push
xor
mov
mov
pop
icebp
xchg
sub
and
and
shl
fs
add
xor
mov
mov
pop
out
mov
jp
data16
or
je
mov
adc
xchg
mov
add
jecxz
xorb
xchg
xorb
call
push
jmp
pop
adc
enter
xchg
mov
jns
int
sbb
psrld
lods
cmp
lea
das
movsl
mov
push
xchg
jne
test
scas
and
add
in
bound
jge
je
leave
lods
mov
cltd
jecxz
xchg
sbbb
pop
nop
cmp
insl
dec
jne
adc
mov
fcomps
les
rclb
mov
lods
adc
fmull
xchg
sti
jae
cwtl
pop
xor
jnp
mov
push
ret
or
hlt
pop
or
cwtl
cmp
add
inc
dec
shl
xchg
scas
sbb
ficoml
add
or
cmp
cmp
pop
dec
jo
dec
in
cli
enter
sahf
jp
movsb
enter
cmp
movsb
mov
dec
xlat
inc
mov
sub
fnstsw
in
stos
lods
bound
ljmp
fstp
sbb
mov
in
sti
ret
sub
jbe
outsb
push
cmp
add
xchg
or
mov
pusha
shrl
jge
adc
mov
stos
scas
dec
fldcw
jp
nop
mov
mov
cmpsl
jecxz
or
icebp
jnp
or
fs
add
icebp
cmp
aad
jecxz
lods
shll
ds
loopne
fsubl
fdivrl
mov
pop
pop
lret
or
dec
mov
div
scas
xchg
dec
sub
and
fisttpll
loop
mov
push
adc
dec
jmp
add
mov
adc
fnstenv
or
sub
sarb
jmp
jmp
shll
sbb
test
pop
cmp
add
or
sbb
into
out
add
sbb
cli
jno
in
aam
mov
adc
pop
xor
shlb
sub
inc
xchg
inc
outsl
sti
jg
xor
jle
out
xor
idivb
sbb
imul
pushf
adc
dec
add
xchg
mov
imul
add
sub
in
xchg
dec
pop
xchg
or
stc
repnz
out
std
mov
movsb
testl
outsb
add
out
icebp
cmp
stos
push
shlb
and
cmp
sub
xor
dec
xchg
bound
pop
insb
out
dec
sti
jmp
xchg
enter
push
mulb
les
aas
stos
pusha
int
push
sbb
fs
and
sbb
add
sahf
ficoml
push
fs
les
jo
pop
int3
lahf
ret
jl
inc
jns
pop
insb
in
xor
lcall
dec
adc
ret
roll
insb
or
not
add
adc
pop
xor
icebp
inc
pop
out
incb
mov
mov
inc
adc
or
inc
cmp
and
xchg
test
sbb
adc
lea
jmp
xorl
inc
or
movsl
fmull
add
aam
repnz
sti
les
int3
cmp
aas
sbb
cmpsl
hlt
sbb
mov
fcomps
mov
xchg
fucomi
iret
fldenv
into
and
or
mov
xchg
mov
mov
sbb
lahf
xchg
mov
mov
dec
xchg
int
outsb
jl
sbb
xchg
inc
push
in
rorb
mov
jno
test
adc
inc
or
xchg
inc
inc
icebp
jmp
push
push
mov
fiadds
add
mov
andl
push
add
inc
daa
notb
cmp
mov
shl
negl
mov
out
cmp
fadds
out
stos
std
xchg
sbb
icebp
andps
popa
and
lods
pop
cmpsl
imul
data16
shlb
cli
push
mov
xchg
enter
sub
push
mov
movsb
subl
aas
push
jg
das
arpl
jmp
fcompl
jl
mov
fildl
mov
in
push
mov
in
aam
jmp
or
xor
dec
xchg
jl
sbb
or
shll
xchg
push
adc
imul
rcr
jg
add
rcr
lods
xor
mov
filds
pop
push
sbb
aad
push
aad
hlt
aam
ret
cmp
lods
rclb
jne
mov
sbb
ret
lods
js
mov
cmp
enter
inc
lret
mov
loop
sub
out
xor
mov
fwait
in
ds
shll
aam
mov
pushf
cwtl
cmc
jo
inc
mov
sbb
jl
mov
lock
loope
sub
mov
int3
or
stos
popl
xchg
lret
add
jge
das
mov
filds
push
or
or
adc
and
push
stos
sbb
push
adc
call
popa
add
inc
ss
add
mov
xchg
mov
pop
ss
cmp
loopne
sub
jp
push
adc
mov
js
jge
jb
cwtl
sbbl
insb
movsl
outsb
xorl
adc
loop
js
or
and
outsl
mov
mov
aaa
scas
mov
andb
add
mov
andb
std
cmpsl
sbb
dec
daa
cld
pop
xchg
add
sub
or
pop
ss
adc
sub
cmp
gs
rol
pop
dec
pop
rcll
inc
cli
mov
and
adc
dec
add
and
and
scas
fwait
int
sbb
sbb
adc
add
shrl
dec
lds
jae
mov
mov
ret
jmp
mov
inc
pop
pop
xchg
je
push
sti
mov
rol
sub
adc
xor
shl
and
add
popl
adc
std
call
lret
in
nop
mov
cmpsl
movsl
push
mov
lock
nop
push
or
inc
fmuls
aad
notl
and
mov
in
mov
mov
iret
dec
mov
add
fisttps
aad
popa
sub
pop
lret
mov
add
jl
ret
mov
and
sub
push
inc
xchg
cs
scas
cmpsb
ret
add
and
mov
xchg
mov
icebp
push
xor
jnp
stos
scas
test
std
lods
cmp
or
mov
into
mov
out
sarl
inc
addr16
xlat
in
and
and
enter
stc
add
push
inc
pop
push
dec
int3
neg
sub
or
ret
push
cmpsb
in
cmpsb
jp
sti
cmp
icebp
mov
add
dec
sahf
sbb
imul
inc
add
dec
push
aad
int
or
in
cs
scas
sbb
mov
cwtl
cmp
xor
mov
pop
inc
rcll
in
mov
inc
outsl
lcall
decb
test
scas
ljmp
lods
add
fldt
stos
sub
add
cmp
mov
popa
dec
daa
andl
push
mov
jp
inc
mov
js
outsl
inc
jo
push
push
les
and
clc
inc
sub
lahf
xchg
lds
pop
mov
push
fdivrp
shr
cmpsb
sbb
cs
xor
inc
sub
inc
fsts
add
adc
ficoml
mov
add
shrl
jbe
mov
cmp
adc
cmp
inc
jb
int
loop
dec
sub
pop
iret
mov
stc
pop
add
xchg
sbb
xor
rol
adc
jp
pusha
jmp
adcb
mov
push
inc
dec
out
fsubs
aam
xchg
stos
es
imul
xchg
stc
sbb
sub
pop
pop
fmul
lcall
sub
iret
add
dec
lock
frndint
jnp
aam
leave
in
xchg
pop
mov
dec
or
mov
movsl
mov
inc
inc
ret
mov
add
lods
pop
movsl
add
fbstp
sbb
push
enter
add
nop
sahf
or
enter
sarb
xchg
inc
fwait
loope
jecxz
mov
dec
test
push
jnp
bound
dec
into
sub
or
addl
fs
xchg
gs
cmc
dec
pop
ds
xchg
mov
add
adc
incb
dec
sub
cwtl
jecxz
push
xor
and
movsl
int
xchg
mov
xor
cmp
shrb
xchg
js
pop
and
lods
popf
add
fndisi(8087
xor
es
push
mov
jmp
xlat
jne
stos
mov
xchg
mov
pop
mov
xchg
ret
fs
into
mov
jmp
icebp
ss
test
ss
xor
pop
sub
sahf
out
add
add
je
jmp
ret
int
sar
lahf
test
dec
notb
enter
dec
clc
adc
dec
pop
adc
int
xor
sub
xchg
push
enter
mulb
xchg
cli
nop
call
and
xchg
xchg
push
popf
cmpsb
pusha
mov
dec
pop
mov
xor
ljmp
add
jae
es
mov
add
popf
cwtl
jno
mov
and
mov
pop
ficomps
ja
push
into
outsb
pushf
mov
stos
outsb
push
shlb
add
fcoml
mov
or
mov
psllw
add
dec
imul
or
loope
imul
addl
insl
sbb
and
mov
ret
data16
imul
addr16
dec
pop
outsb
pop
aas
xor
dec
sbb
adc
or
mov
stc
fsubrl
dec
fcoml
outsb
aad
mov
mov
adc
sti
and
jae
paddusb
dec
jmp
mov
jno
or
adc
outsb
dec
jmp
pop
mov
enter
ds
jne
ds
push
in
mov
stos
add
sub
add
push
pop
or
les
adc
imul
movb
dec
cltd
pop
fucom
mov
icebp
inc
js
gs
push
stos
xchg
jge
ljmp
add
pop
ljmp
cli
dec
jae
rcr
mov
mov
fwait
xor
xchg
aam
dec
imul
mov
inc
imul
scas
pusha
mov
incl
sahf
mov
aaa
dec
inc
fwait
dec
call
and
rcll
or
inc
fldl
mov
adc
jp
push
std
mov
shlb
movsl
push
mov
jns
adc
lcall
push
test
push
mov
dec
or
sub
jl
call
add
xchg
test
nop
or
inc
aas
push
mov
lret
aas
ret
inc
cli
ret
xchg
xchg
xchg
cwtl
imul
js
lods
add
loop
sbb
mov
cwtl
mov
push
rcll
push
gs
fs
push
adc
pusha
sti
ja
gs
sahf
int3
dec
sub
sbb
nop
loopne
notl
mov
divl
arpl
pop
mov
mov
mov
jle
xlat
or
cmp
mov
pusha
cmp
mov
xor
cli
bound
nop
dec
mov
mov
pop
add
and
loope
mov
mov
in
ja
roll
pop
mov
push
mov
stos
push
js
lods
jo
ds
fwait
sub
pop
xchg
dec
add
sub
pop
pop
subl
lretw
shrb
js
jno
push
nop
lds
rclb
loopne
jecxz
stos
repz
xchg
and
cmp
dec
lds
push
add
outsb
pop
pop
les
mov
mov
cmp
fwait
pop
sub
stos
lret
out
mov
clc
ja
inc
scas
into
das
outsl
cmp
xor
add
andb
das
inc
sti
jnp
adc
daa
add
clc
sub
aam
fdivp
test
cld
push
insl
ret
push
push
paddsb
ret
sub
sbb
mov
jnp
test
jno
int3
cmp
add
pop
xorb
loopne
push
pop
jmp
xchg
add
jns
pusha
popf
int3
mov
bound
test
inc
mov
jnp
and
cmc
pop
sub
jmp
push
mov
mov
push
cs
scas
nop
xor
mov
adcb
cs
cli
xchg
xchg
lret
sub
mov
xor
sbb
sti
push
xchg
sbbb
dec
sti
push
nop
setb
jmp
pop
pop
push
sub
mov
fmul
in
inc
xor
mov
out
push
push
aad
mov
ret
mov
stos
jnp
fnstcw
repz
add
xor
clc
mov
lret
inc
dec
jbe
rcl
mov
mov
mov
imull
sbb
ja
repz
test
scas
push
rorb
xor
mov
aad
push
ds
movsb
out
sbb
mov
cld
jne
jns
inc
mov
mov
adc
pushf
xor
int3
sahf
mov
push
inc
or
mov
cmp
outsl
sub
pop
sarb
idivl
rcll
dec
inc
scas
pop
fistpl
lcall
inc
insb
pusha
dec
mov
jbe
jns
sub
idivb
or
pop
xlat
add
mov
fwait
or
cmp
repnz
mov
rolb
mov
adc
jbe
adc
insb
int
xlat
inc
scas
idiv
xchg
pop
xchg
in
roll
sbb
scas
inc
mulb
addr16
mov
xchg
sub
loope
mov
push
imul
mov
mov
roll
std
mov
outsb
xorl
mov
lods
lcall
lods
das
subb
pop
andl
mov
repz
sarb
sub
dec
or
dec
imul
inc
int
aas
or
pop
xchg
sbb
das
fdivs
lock
in
pop
jb
movsb
arpl
push
mov
pop
test
sub
sti
inc
int3
sub
mov
enter
fwait
and
mov
dec
sub
loopne
mov
jge
lds
and
mov
int
test
push
int3
jbe
mov
dec
dec
test
dec
mov
ret
push
push
add
lods
out
sbb
cltd
jb
and
lret
rorb
lods
pop
jnp
xchg
push
ljmp
hlt
repnz
dec
jne
adc
xchg
icebp
mov
xchg
ret
push
fucomp
cld
mov
inc
sahf
cmp
dec
imulb
dec
sarl
sbb
add
xorb
repnz
aas
in
ds
insb
push
mov
movsl
pop
arpl
mul
movsl
daa
adc
push
mov
xorb
lock
xchg
mov
test
mov
scas
or
icebp
sbb
ficompl
lahf
out
call
scas
gs
icebp
mov
xchg
mov
ret
test
popf
les
push
scas
shlb
push
lods
in
mov
out
dec
jp
mov
fdivl
push
fwait
sbb
adc
gs
cld
push
mov
pop
jecxz
test
mov
lcall
adcb
xor
push
push
xchg
stos
pushf
mov
jno
std
test
stos
jp
stos
pop
inc
movsb
repz
mov
xrelease
ret
sub
sub
ja
outsl
ret
mov
jge
dec
push
insl
inc
ret
shlb
cmp
ss
push
and
mul
jae
mov
or
mov
fistpll
ljmp
clc
mov
jnp
lea
pop
xor
pop
int
sub
or
sahf
push
aaa
inc
mov
ss
jne
cmp
outsb
push
adcb
lock
repnz
xor
cmp
adc
mov
pop
cmpsb
adc
pxor
sub
add
jl
and
stos
inc
ljmp
into
xchg
add
xchg
cmp
pop
cmp
nop
or
cmp
pop
rcrl
nop
movsl
fcoml
decl
push
and
shl
aaa
mov
mov
mov
mov
popf
mov
mov
dec
mov
notl
call
sbb
repnz
je
fucomip
pop
fimull
fabs
cmp
lret
aad
mov
cmc
pop
aam
add
in
imul
add
insl
or
mov
pop
in
pop
jle
xchg
fsubl
iret
jne
notl
vmovddup
jmp
and
into
std
daa
stc
sahf
out
pushl
adc
mov
or
ja
mov
test
xor
popa
xchg
sub
push
xchg
cmc
xchg
mov
into
mov
cmp
push
cmc
ret
out
and
jno
jne
into
ficompl
cmpb
xor
xor
add
hlt
xor
sti
stc
mov
sbb
sbb
pushl
sub
loop
mov
lret
lea
arpl
mov
mov
lods
std
inc
jp
and
push
rclb
and
cmp
das
push
dec
xchg
out
test
mov
pop
outsl
xchg
or
xor
sub
dec
or
lods
test
add
jnp
mov
cltd
cltd
push
int3
sbb
repnz
xchg
ret
iret
stos
movsb
dec
pop
into
push
jecxz
mov
out
stos
imul
mov
cmp
sbbl
into
fdivrp
mov
adc
push
mov
mov
or
pop
jp
bound
jp
flds
push
jle
and
xchg
filds
adc
mov
jl
in
cmpsb
scas
loopne
movsb
test
leave
cltd
dec
sub
pop
scas
cmc
lcall
orb
or
inc
xlat
sbb
push
mov
add
jae
arpl
push
pop
sbb
mov
std
fmuls
fs
xchg
sub
out
mov
nop
ficoml
imul
sub
test
lock
stc
cltd
and
jbe
and
pusha
ret
les
arpl
sahf
inc
lret
push
shll
iret
cmp
cmp
pop
push
push
test
aad
lods
inc
jecxz
incl
sub
out
push
xchg
ficomps
dec
sbb
pop
popa
loope
xchg
adc
ret
mov
call
lds
out
gs
sbb
test
dec
add
flds
mov
inc
adc
mov
inc
lods
adc
je
movsl
push
test
sbb
sti
push
movsb
ret
lret
aam
les
lds
xchg
leave
xor
pop
rolb
imul
imul
dec
popa
jg
sbb
ds
mov
sbb
inc
in
int3
loopne
fwait
repnz
fucomip
out
pop
fsubs
fsubrs
test
cltd
gs
aas
cltd
sbb
lret
popa
mov
addl
out
jbe
ret
xchg
pop
in
enter
in
add
xchg
sub
aas
sbb
inc
pop
xchg
mov
mov
jb
dec
shlb
or
inc
sbb
add
es
cmpsl
and
mov
inc
lahf
scas
fimuls
push
nop
or
test
inc
xchg
jmp
test
sub
pandn
dec
je
in
and
hlt
push
cmp
arpl
lods
ret
jne
mov
jmp
adc
test
dec
cli
movsb
xchg
in
test
add
sbb
pop
iret
ljmp
adc
cmp
je
jmp
mov
dec
or
adc
and
lock
loope
lahf
jb
lahf
mov
jp
pop
insb
fwait
test
dec
dec
repnz
sub
lret
add
xchg
ja
and
sbb
cmp
fnsave
jmp
and
pop
mov
repnz
xor
lods
clc
fiadds
lret
pop
and
or
fucomp
call
pop
jp
dec
cmp
ret
adc
mov
out
mov
jno
insl
dec
aad
enter
nop
loope
sbb
dec
push
xor
aam
and
push
sub
cltd
push
into
or
push
mov
mov
mov
mov
mov
mov
call
addr16
pop
outsl
or
add
mov
push
inc
pop
stc
and
push
jmp
call
jbe
test
add
test
lods
mov
roll
aad
push
inc
test
inc
bound
push
jbe
push
ljmp
dec
ret
mov
push
xlat
loope
fstpt
rcrb
inc
lock
enter
lods
xchg
dec
imul
lcall
push
mov
lret
cltd
fisubl
mov
or
inc
jl
mov
fsubl
gs
cmp
push
nop
jl
push
cmp
adcl
mov
imul
push
jno
dec
into
jl
adc
movsb
xor
or
adc
push
es
add
or
mov
and
dec
popa
xlat
push
scas
cmp
jmp
pusha
leave
adc
xchg
lret
bswap
std
push
xlat
insl
mov
or
arpl
xor
arpl
in
adcl
ffree
cs
in
push
and
outsb
pop
outsb
lea
cmp
inc
cmc
xchg
push
cmpsb
cmp
mov
cmp
pop
lods
mov
fs
sbb
sbb
inc
and
mov
sub
pop
or
aad
addb
and
add
popf
imul
mov
ds
mov
negb
jnp
jge
daa
or
mov
or
movsl
test
loop
adcl
call
movsb
fmull
cmp
cld
out
mov
sub
aaa
fsts
aam
mov
or
movq
or
shl
adc
dec
xor
hlt
popa
xchg
adc
icebp
sub
fs
aas
rcrb
or
fsubs
sub
dec
mov
add
adc
push
enter
cmp
testl
insb
jo,pn
lcall
add
pop
push
aam
idivb
fdivrl
add
cmpsb
push
jnp
pop
add
add
mov
jo
xor
scas
and
xlat
push
sbb
or
jge
into
mov
mov
fdivrs
dec
cmp
int
popa
popf
xchg
lret
mov
adc
xchg
cmovb
fldcw
inc
xchg
divb
testb
stc
sub
jae
stos
fadds
sbbl
mov
call
imul
movsb
inc
sti
out
mov
inc
and
adc
idivb
dec
divl
sbb
lock
nop
lods
movsb
cmp
dec
adc
mov
and
mov
pop
inc
pop
shl
push
mov
mov
cltd
jb
int3
xor
shll
sbb
jmp
cmp
pop
dec
adc
outsb
sarl
repnz
jge
scas
out
sarl
in
push
fistpll
aad
dec
push
sub
pop
xchg
cli
leave
scas
dec
pop
test
dec
ss
jnp
mov
out
rclb
out
pop
xchg
sbb
outsb
xor
and
sbbl
daa
imul
or
lods
adc
dec
cltd
mov
int
sarl
dec
sub
jo
bound
sub
mov
xchg
ret
loop
push
jns
mov
mov
outsb
pushf
xchg
mov
fwait
jl
dec
mov
mov
leave
jnp
gs
and
inc
xor
xchg
adc
popf
lret
rorl
enter
stos
scas
imul
add
lret
cmp
xchg
inc
xor
sbb
stc
vmread
and
addr16
inc
dec
into
mov
sub
aam
mov
inc
jmp
xchg
or
mov
xchg
ret
repnz
mov
mov
cs
inc
test
sbb
out
jp
aad
mov
jne
xor
jnp
mov
xor
push
scas
sub
add
xlat
push
push
mov
jle
push
shl
sahf
dec
push
xchg
adc
loop
sub
clc
push
xchg
pop
push
lret
leave
arpl
or
sub
add
in
xor
add
add
cli
ret
mov
dec
decl
lock
pop
push
mov
bnd
mov
lea
and
add
mov
jb
shr
xchg
idivb
in
call
xor
mov
xor
scas
call
in
repnz
adc
mov
icebp
jecxz
xchg
and
loop
repz
lds
push
mov
pop
pop
adc
jnp
lcall
js
sarb
sahf
sub
adc
mov
iret
jl
shr
test
cs
in
mov
mov
lcall
and
inc
jle
inc
xor
mov
cmp
xchg
jge
leave
loope
cmpsb
aas
adc
push
jge
addl
lds
mov
add
adc
es
std
jo
mov
dec
mov
xor
push
pop
xor
test
imul
mov
pop
cmp
fldenv
adc
sbb
add
scas
push
cmpsl
sbb
in
adc
sbb
in
lret
int
or
pop
mov
je
repnz
loop
mov
ss
sbb
popf
dec
insl
xor
aad
xchg
mov
aaa
ljmp
and
inc
jae
jne
cmp
pop
push
pop
push
dec
je
mov
into
repnz
inc
push
leave
xchg
cmpl
mov
sub
lea
es
pushf
subl
adc
xchg
cwtl
xchg
mov
xlat
cs
mov
mov
cmc
imul
orl
mov
sub
jno
adc
xor
jg
mov
dec
pop
sbb
into
out
orb
je
push
into
sbb
fs
jle
mov
push
sahf
mov
cmpsb
sbb
ficomps
into
subb
xchg
add
test
stc
ror
adc
rolb
cmp
adc
fists
pop
cmp
fs
in
mov
and
test
je
cmp
test
pop
lcall
out
decl
cmc
movsb
or
push
imul
jg
cmp
repnz
loop
leave
sub
cs
in
mov
cmp
rcrb
nop
in
lods
mov
iret
sub
or
push
xor
shll
cmpb
fdivl
repz
gs
sti
imul
cmp
xchg
lret
fsincos
mov
in
pop
push
or
out
mov
push
lret
hlt
xor
sub
or
or
std
test
clc
loope
insl
mov
popf
popf
add
inc
test
inc
daa
pop
sbb
les
out
jbe
shlb
pop
insb
or
add
lcall
inc
ret
lods
dec
cmpsb
jbe
out
sbb
add
mov
sub
xor
cmp
test
fisubrl
push
cmpsb
cld
inc
pop
ljmp
sbb
mov
pop
dec
mov
push
cmpl
adcl
push
test
dec
out
adc
push
xchg
ret
idivl
adc
std
inc
stos
es
outsl
or
jb
es
scas
sub
dec
xchg
repnz
outsl
repnz
inc
rorb
jg
aas
jl
lds
and
rclb
out
or
cmp
push
enter
cmp
sahf
rcrb
je
mov
imul
lahf
xor
cltd
add
ss
mov
cmpsl
divb
pop
adc
sbb
andb
sub
in
inc
or
pop
dec
inc
pop
je
xchg
lcall
popa
daa
decl
das
pop
les
jns
add
inc
mov
rorl
pop
lret
inc
fwait
add
addr16
popf
aaa
pop
jmp
mov
loope
xchg
or
adc
lods
lret
shll
insl
call
stos
adc
outsl
roll
ljmp
add
outsl
adc
push
xchg
fs
loop
mov
sub
xor
lcall
insb
rcr
mov
mov
xchg
xchg
mov
push
bound
sahf
dec
cmp
xor
js
gs
add
ret
sbb
scas
addb
int3
pop
je
shll
cmp
mov
fnsave
idiv
cwtl
jp
adc
cmp
push
pop
fldl
mov
sbbb
fwait
mov
jg
add
nop
mov
push
xchg
mov
ret
and
cmp
push
push
repnz
cmpsb
adc
rolb
stos
cmp
inc
cmpsb
insb
lds
adc
add
or
pop
inc
pushf
fiadds
xchg
or
adc
push
pop
mov
les
xchg
jb
pop
mov
xchg
mov
lds
repz
test
int3
adc
dec
call
icebp
and
test
cmpsb
iret
jb
jns
pop
dec
mov
icebp
pop
dec
push
sbb
test
loop
stc
ficoml
test
mov
add
sub
mov
jb
test
cmp
fs
enter
mov
push
ret
jecxz
dec
jge
lcall
jo
stos
div
icebp
stc
ljmp
std
cld
xorb
adc
adc
popa
jno
popf
idiv
in
pop
or
ljmp
dec
scas
mov
pushaw
in
out
xor
enter
mov
sti
pop
icebp
addr16
fs
xchg
and
push
mov
xchg
fisubrl
nop
ss
xor
mov
imulb
inc
fbld
nop
loope
cld
fisubl
mov
movsl
pushf
sbb
fistpll
shrb
das
add
imul
loop
jne
or
fstps
or
or
xor
out
in
cs
jecxz
push
sbb
fnstcw
jp
or
pop
add
scas
sbb
sbb
lock
mov
icebp
or
push
mulb
cmp
ret
imul
cli
pop
cld
push
imul
pop
xor
xchg
es
mov
mov
or
push
sub
cmpsl
dec
mov
mov
stc
das
arpl
push
das
out
cmpsl
xor
sbb
mov
push
lret
push
ja
aas
sub
cmp
add
rol
aad
jno
in
andb
cwtl
es
fcomi
dec
aas
dec
test
jg
xor
lret
faddl
popf
push
dec
cmp
icebp
and
jae
pusha
lods
jmp
xchg
xchg
aas
add
aam
xor
sub
push
sub
test
mov
lods
jae
notl
and
pop
push
push
int
idivb
popf
inc
ss
adc
cmp
outsl
mov
push
xlat
sub
clc
cmp
fisttpll
aad
stos
jecxz,pn
inc
rorb
dec
addr16
in
fdivrl
arpl
ret
mov
loope
lods
sub
jb
sub
lret
inc
push
out
jno
loopne
in
push
pop
sbb
lods
mov
out
mov
std
lock
clc
aad
fwait
negb
add
int
sub
and
push
ss
shlb
mov
lahf
or
stos
std
rcrl
xchg
mov
pop
lds
imul
jmp
jae
adc
adc
nop
outsl
clc
clc
xchg
xchg
aad
test
popa
and
dec
lds
nop
shlb
dec
test
mov
and
pop
dec
mov
jo
and
mov
inc
cmp
xlat
ss
lods
mov
mov
ds
pop
inc
ds
mov
lea
je
jne
fcoms
flds
cmp
test
mov
call
mov
pushf
mov
sarb
and
push
outsb
and
or
jmp
jge
dec
mov
leave
jb
mov
sbb
das
mov
fistl
pop
xor
call
dec
xor
and
or
scas
pop
lahf
sbb
xlat
imul
pop
loop
pop
int
sub
push
test
and
xor
scas
dec
push
les
and
and
push
mov
adc
lods
out
ljmp
imul
hlt
cwtl
fdivl
hlt
pcmpeqb
dec
push
movsl
add
insb
leave
imul
jge
xor
xchg
pop
mov
xor
jle
dec
inc
clc
cmp
fwait
rcrb
leave
cmc
xchg
out
pop
jne
sahf
int3
sarb
sbb
cmp
adc
popf
push
jge
dec
in
test
and
push
xor
aas
test
cmp
xchg
subb
jo
addr16
cmp
inc
jne
mov
in
sahf
or
jmp
mul
pop
push
movsb
mov
out
movsl
or
xor
test
jo
pusha
mov
fidivs
mov
sub
pop
sbb
cmp
out
rolb
cmp
sub
fdivs
mov
fsubrs
and
push
maxps
jnp
and
inc
jnp
popa
addr16
mov
loope
lret
adc
shrl
inc
and
cmp
insb
add
test
enter
pop
divl
rclb
dec
jo
imul
aad
xchg
inc
mov
and
fxch
sbbl
es
xchg
xchg
imul
insl
sahf
sub
and
jmp
es
xor
les
push
push
dec
inc
dec
sub
sbb
or
dec
cmpsl
or
sti
xor
dec
pop
orb
cwtl
and
nop
test
xor
into
xchg
inc
fstpl
lea
inc
dec
mov
mov
iret
add
xor
adc
mov
iret
aaa
scas
pop
add
popf
ficoml
ficompl
je
sbb
and
adc
jnp
dec
stc
mov
repnz
jg
sti
lea
bound
or
push
cmc
scas
out
jo
xchg
dec
mov
xchg
int3
jge
inc
sbb
and
pop
leave
xchg
adc
dec
add
rorb
jecxz
inc
mov
hlt
les
and
mov
xchg
mov
das
les
out
cmp
fwait
or
std
call
cltd
mov
pop
jg
push
loop
into
jge
andb
mulb
mov
add
lock
imul
dec
cwtl
iret
pop
jb
sub
pop
jne
enter
hlt
push
jo
stos
scas
cli
aas
adc
les
lods
xor
insb
sub
push
xchg
mov
nop
sahf
add
cs
rcrb
loope
loopne
sbb
lods
pop
mov
mov
shrl
jmp
frstor
sahf
inc
and
data16
pop
xlat
and
insl
cmp
mov
xchg
test
adc
push
fcmovu
imul
mov
push
and
into
fstl
sub
clc
lahf
xchg
push
sbb
jns
cmpsl
inc
dec
and
dec
pop
repnz
push
dec
adc
mov
decl
out
inc
ljmp
xchg
xchg
adc
push
sbb
imulb
sbbl
int3
aad
sub
imul
sub
andl
test
cs
call
jl,pt
lds
and
out
fs
add
pop
movsb
push
fsubrp
jo
loopne
enter
lcall
call
icebp
xchg
ss
pop
aaa
inc
shrl
add
or
mov
jp
inc
in
sub
in
nop
fsubr
xor
lock
push
mov
addr16
sbb
jns
mov
hlt
pop
adc
mov
jo
xchg
lds
xchg
ret
bound
mov
cmp
push
iret
jmp
cmpb
pop
clc
das
test
push
inc
jne
xchg
mov
push
sub
push
cwtl
mov
and
xchg
stos
movsl
aas
je
jle
or
jp
es
dec
fwait
and
sbb
pop
xchg
dec
dec
ja
pop
jg
mov
in
sub
and
insb
test
sahf
in
call
je
pop
aad
push
cmp
add
cltd
and
aam
xchg
rcrb
jb
adc
iret
outsl
adcl
movsb
popf
xlat
pop
add
outsl
dec
notl
icebp
jo
insb
mov
mov
popf
mov
adc
mov
pop
jge
mov
adc
insl
cli
shll
jb,pt
dec
popf
or
adc
xchg
and
repnz
or
fdivs
fnstcw
or
shrl
pusha
mov
sar
cmp
mov
shl
pop
dec
mov
xor
mov
push
sbb
arpl
xchg
dec
cmp
push
and
rcl
in
add
cli
pushl
mov
inc
popa
mov
adc
loopne
popa
xchg
iret
jg
fisubrl
outsb
and
mov
fsubrs
pop
push
shlb
test
hlt
cmp
and
mov
test
sbb
push
cmp
scas
loop
xor
dec
test
fwait
test
gs
mov
xchg
pop
cmp
mov
cmc
inc
sub
arpl
xor
xor
xchg
jns
lret
or
in
lcall
cmpl
mov
xor
xor
repnz
pop
cld
aaa
and
fnstcw
into
jg
div
jg
scas
fildll
imul
cs
inc
fmul
xorb
loop
dec
sub
sub
nop
cwtl
rclb
add
push
jle
mov
pop
cmp
or
nop
sbb
aas
sub
xchg
fcmove
cmp
cmp
and
hlt
stos
fstpt
mov
repnz
subb
sbb
ds
fsubrs
jo
sbb
outsb
out
mov
cltd
cltd
sbb
iret
dec
push
push
frstor
imul
jns
cmp
add
nop
in
stos
in
or
add
mov
jmp
ret
xchg
adcl
xor
mov
xchg
add
xchg
push
mov
add
lods
xorl
das
add
in
cmc
jg
stos
iret
adc
xor
insb
ret
mov
sub
and
push
jle
test
mov
stos
mov
in
jne
push
and
clc
iret
stos
xchg
mov
fwait
pop
ror
inc
and
sub
dec
lock
sahf
aas
stos
js
inc
jmp
sbb
pop
sbb
xor
adc
xchg
mov
xchg
fiaddl
test
out
je,pt
jb
sbb
adc
mov
movsb
bound
lahf
cs
pop
std
jp
hlt
sbb
into
sub
pusha
aas
jle
xor
push
push
inc
rclb
jnp
dec
sbb
sub
and
flds
add
jecxz
fisttpl
mov
xor
movhps
pop
push
push
popl
push
xor
lea
mov
and
pop
and
loopne
fs
xchg
push
adc
es
sbb
iret
popf
xor
xchg
mov
sub
pop
xor
mov
ret
push
jle
lahf
adc
pop
mov
scas
add
test
push
adc
dec
cmpsl
mov
dec
out
addr16
int
push
fists
cmpsl
mov
jge
jb
xchg
fcompl
jmp
xor
pop
fistps
sub
pushf
mov
repnz
sub
aad
lret
xchg
outsl
mov
xchg
rclb
incb
call
mov
and
xor
fwait
push
jge
fsub
mov
sbb
jmp
mov
xchg
movsl
cmp
shll
repnz
cld
jne
jo
insb
jg
xchg
and
sbb
cmpsl
push
ljmp
mov
push
push
lahf
pop
lahf
xchg
inc
in
aas
adcb
fiaddl
pop
xor
or
movsb
in
pushf
lea
sbb
mov
jecxz
popf
jp
mov
xor
in
add
jl
dec
inc
test
jns
push
push
push
jns
or
pop
sbb
sbb
cmp
fldcw
xchg
loopne
mov
pop
cmp
cmp
imul
push
mov
and
jnp
shl
pxor
sti
test
sbb
adc
xorb
in
es
jo
cmpsl
test
mov
cli
fnop
push
sub
mov
mov
pusha
jbe
mov
rcl
sbb
les
cwtl
shlb
fmulp
dec
jmp
ss
jmp
ja
out
fsubs
mov
mov
ss
cmp
loopne
repnz
aas
inc
pushf
push
scas
add
and
xor
mull
lcall
xchg
in
aaa
scas
push
lret
xadd
cmpb
and
mov
mov
loopne
cmp
clc
xchg
mov
das
rep
pop
xor
sbb
cmc
and
lea
push
fcomp
dec
ficoms
add
stc
ficoms
jno
xor
lods
jmp
push
sahf
scas
mov
clc
popf
sub
out
rcrl
dec
lock
lds
jnp
sarb
flds
xchg
orb
mov
loopne
adc
loope
data16
xor
push
add
inc
inc
sbb
and
jle
leave
ds
push
in
aam
push
dec
dec
dec
jg
subb
mov
mov
mov
adc
ret
insb
hlt
pop
pushf
push
lret
in
mov
enter
cld
push
out
jmp
adc
sbb
add
xlat
shlb
inc
push
repnz
popa
push
shrl
mov
mov
sbb
mov
repnz
adc
scas
xchg
hlt
lock
daa
cmp
dec
cmpsl
cld
cs
cmp
xchg
cmp
in
mov
or
inc
dec
adc
and
mov
rcl
adc
dec
xchg
nop
xchg
push
and
sbb
sbb
fs
sub
loope
and
lock
jb
push
mov
cmp
mov
clc
fcmovb
fs
mov
inc
jecxz
mov
jle
inc
mov
cld
cmp
stos
and
or
mov
into
insb
or
jo
xor
out
xchg
lods
mov
cmp
mov
divl
repnz
sbb
daa
inc
mov
out
mov
cmpb
dec
jbe
cs
jmp
xchg
test
or
adcl
std
aad
mov
pusha
dec
dec
dec
cmp
scas
adc
popa
push
jmp
in
in
push
jb
xchg
inc
jl
daa
sbb
mov
lret
ss
push
mov
xlat
rorb
fidivs
pop
pushw
and
push
dec
sub
rol
arpl
test
cs
daa
movl
sub
jae
lds
xor
and
loop
or
pop
lcall
xchg
cwtl
roll
xchg
in
mov
sbb
add
pop
inc
jl
in
std
pop
jb
and
push
rorb
std
xchg
mov
add
inc
push
ljmp
jge
mov
add
dec
imul
adc
inc
insb
push
cmpsb
inc
jno
ficompl
subb
cmpsl
test
jg
and
aam
inc
outsb
fs
dec
adc
dec
inc
sbb
lods
mov
push
inc
jecxz
jnp
push
gs
popa
dec
call
out
aam
mov
aam
int3
sarb
pusha
in
hlt
mov
out
testb
xor
xlat
sub
sub
cmc
push
movsl
psubusb
sahf
sahf
mov
inc
sbb
adc
xchg
insb
ret
aad
jb
in
add
dec
pop
dec
push
xchg
popf
jge
stos
int3
cli
cmp
fadds
adc
and
mov
fisttpll
jne
mov
add
out
out
mov
sbb
scas
mov
mov
sub
dec
cwtl
push
lahf
cmc
lahf
sahf
inc
scas
mov
and
mov
in
out
xchg
pop
jne
push
mov
nop
lcall
call
pushf
cmp
mov
mov
push
out
sti
dec
lock
jb
pop
out
rcl
cmp
jnp
insb
jle
in
pop
call
or
mov
rcll
aaa
pop
test
mov
fwait
pusha
inc
imul
mov
mov
cmp
stc
xchg
data16
xor
and
ds
push
aam
mov
push
xor
mov
jg
mov
cwtl
cmp
outsl
loopne
mov
out
xchg
push
outsb
jo
ss
dec
popa
adc
and
stos
das
incl
scas
xchg
test
mov
dec
sbb
push
sbb
daa
jo
lds
or
sub
sub
inc
test
gs
mov
dec
jbe
pop
sbb
add
cli
sub
inc
cli
adc
sbb
ds
xchg
mov
ja
sbb
ds
sub
fwait
add
cli
loopne
pop
loopne
movb
bound
fldenv
stos
mov
rclb
xor
xor
xchg
adcb
mov
jle
mov
cmp
mov
test
or
popa
gs
push
xchg
cmpsl
inc
int
xlat
cltd
fwait
stc
insb
jae
testb
inc
int3
add
mov
sbb
icebp
test
lcall
stos
mov
lods
inc
inc
mov
sub
sbbb
inc
mov
cmpsb
leave
into
push
mov
repnz
jmp
pop
add
xchg
clc
sbb
mov
cmp
inc
and
rcl
sbb
stc
inc
insb
add
out
xchg
sub
adc
and
pop
insb
cwtl
push
jg
dec
lods
push
push
push
mov
stos
push
mov
push
sbb
mov
inc
arpl
flds
or
mov
jo
pusha
inc
sub
pop
popa
aaa
adc
sub
mov
mov
xor
xchg
pop
test
dec
pop
jmp
ret
jg
jecxz
xor
dec
sub
outsb
sti
mov
enter
push
sub
loope
inc
jp
scas
rclb
rcr
shlb
mov
fsub
ljmp
mov
adc
andl
push
xchg
pop
loopne
cmp
pushf
or
push
out
inc
icebp
mov
popf
push
repnz
imul
cld
sub
inc
cmp
xor
sahf
push
shlb
mov
xchg
sbb
aas
push
xor
rolb
sarb
pop
inc
rolb
push
stc
sti
test
lret
mov
iret
in
or
jbe
jle
lea
xchg
mov
fcomip
adc
nop
stos
sbb
mov
sbb
cmp
mov
cmp
fsub
mov
jns
add
add
decb
pop
jno
mov
dec
jno
pop
xchg
icebp
mov
xchg
push
cmp
cmp
clc
loop
scas
cwtl
je
pop
mov
ljmp
adc
sbb
sahf
adc
push
pop
icebp
add
lds
xor
mov
dec
adc
insl
test
dec
lods
sub
outsb
pop
cltd
mov
sub
mov
int
add
push
xor
in
idivb
addr16
mov
cltd
adcb
daa
int3
test
repz
dec
xor
bnd
nop
sub
or
add
push
adc
jne
divb
xor
mov
sti
xchg
lock
loopne
pop
adc
lock
jl
jae
push
test
xlat
pushf
mov
jmp
fidivrs
pop
testb
lods
or
xchg
out
imul
inc
inc
jns
mov
jo
cmc
sbb
fsubl
and
aad
add
xor
rcl
rcrl
jecxz
pop
sbb
decb
bound
iret
and
adc
arpl
ret
dec
mov
mov
inc
cltd
rclb
push
mov
mov
adc
push
add
es
adc
sub
cmp
es
int
sbb
cs
imulb
xor
cmp
movsl
xlat
adcb
scas
pop
test
pop
sub
cli
sbb
or
nop
mov
cmpsl
pop
imul
mov
push
out
movsb
jno
push
jnp
lahf
lods
cmc
imul
mov
lock
nop
or
aam
pop
inc
mov
and
sub
pop
cmpsl
cmc
push
xchg
jno
inc
cmc
int3
jg
call
jmp
dec
or
and
lods
or
mov
add
in
clc
out
imul
jp
ljmp
mov
gs
fmul
fisubrs
adc
cltd
mov
cltd
das
movb
push
add
scas
xchg
and
and
sub
xchg
inc
test
push
ja
test
sub
push
mov
mov
addr16
sbb
hlt
arpl
pop
add
inc
sub
shll
fldpi
test
data16
testb
xchg
xchg
pop
sbb
push
cli
shlb
dec
xchg
mov
and
dec
ljmp
test
gs
pop
ficoml
jb
xchg
jg
inc
lds
rcrb
rcrl
sbb
dec
sub
call
mov
shl
popf
popa
jecxz
inc
cwtl
into
fidivrl
cmp
fldcw
shlb
addr16
outsb
das
pop
clc
cmp
adc
test
and
cmpsl
jl
shl
les
hlt
or
jmp
outsb
and
xchg
jns
mov
sbb
shll
cmc
inc
sbb
pop
aam
mov
sub
inc
xor
ret
inc
jge
test
push
loope
js
pop
push
xchg
cmp
fildl
mov
movsb
sarl
dec
xorb
xchg
and
sub
aad
push
sarl
sub
xchg
adc
cmp
mov
jle
inc
test
mov
loope
sub
cltd
push
out
aas
mov
test
mov
popf
scas
inc
test
aas
aam
ss
fldl
int
movsb
add
push
in
xor
jbe
fnstenv
hlt
xor
xchg
cwtl
and
add
je
js
call
push
push
subb
fs
add
xabort
or
and
xchg
insl
pop
mov
lret
iret
cwtl
add
call
mov
cmp
jmp
shlb
pop
mov
test
arpl
mov
xor
repz
jae
dec
lret
xchg
mov
ret
sub
outsl
xlat
arpl
mov
inc
sarl
js
push
cmp
idiv
adc
in
lds
and
shrl
dec
imul
scas
mov
pop
aas
sbb
cwtl
inc
sahf
ljmp
pushf
mov
addr16
push
mov
mov
sub
sub
out
adc
jno
in
insb
mov
pop
jns
xor
sti
cmp
mov
int
xor
out
xchg
sub
pop
mov
dec
dec
mov
clc
or
pop
pop
fimull
jb
out
xor
dec
mov
mov
out
pop
inc
out
jns
or
adc
lret
insb
das
in
mov
pop
push
loopne
dec
cld
sarl
stos
mov
das
gs
imul
lcall
cli
lcall
mov
and
test
bound
jp
push
xchg
mov
fcoml
inc
cmp
sbb
sub
pop
js
ret
mov
dec
push
and
push
out
mul
cwtl
jo
push
push
push
movsl
push
jb
jo
loope
clc
les
xchg
xor
pop
pop
xchg
mov
or
inc
stos
xchg
ret
mov
mov
mov
xor
add
cs
sub
adcl
and
andl
sub
mulb
ret
incb
and
sub
add
leave
or
sbb
in
push
es
push
inc
inc
sbb
jno
ja
bound
fs
push
jae
leave
adc
jl
push
scas
hlt
std
push
mov
mov
or
movsl
xchg
inc
push
inc
cld
xchg
inc
rcrb
fimull
push
nop
movsb
and
mov
in
mov
loope
add
pop
sbb
dec
in
aas
jbe
das
and
sti
sub
xchg
mul
imul
add
cli
mov
add
hlt
jnp
sub
nop
push
out
lock
sub
xor
cli
xchg
sub
adc
ss
add
or
in
xchg
sbb
mov
add
cltd
inc
outsb
outsb
adc
push
imul
mov
or
fidivrl
fsubs
jge
push
push
add
outsl
or
lret
mov
inc
inc
jne
addl
inc
dec
adc
mov
adc
jmp
lock
movsb
pop
inc
loopne
mov
sarb
xchg
mov
shlb
outsb
testb
out
fsubl
jmpw
cmp
add
mov
popf
in
cmp
hlt
xchg
popl
jnp
stos
pop
adc
pushf
dec
test
out
push
mov
popf
stc
lret
add
subps
shrl
imul
or
nop
out
xchg
xchg
pop
mov
jb
or
fistps
or
inc
sbb
dec
imulb
jno
out
imul
push
out
mov
mov
and
cmp
xor
lcall
pusha
fbld
leave
bound
fcoml
xor
ret
ss
add
xchg
xchg
out
shl
gs
jg
outsb
fisubrs
outsb
cltd
mov
test
icebp
repz
lods
jne
imul
or
rorb
cmc
fwait
mov
cmpsl
jae
pause
repz
jg
and
adc
xlat
in
sbb
mov
addr16
xor
cwtl
mov
jns
add
out
stos
testl
outsl
dec
fs
jmp
mov
mov
xor
inc
in
inc
stc
popf
nop
dec
aam
addr16
mov
push
mov
je
cmp
xor
shll
and
pop
rcrl
sahf
in
movsb
lods
inc
and
dec
ds
adc
sbb
cmp
push
scas
and
adc
add
lods
test
std
ret
push
mov
les
movsb
adc
inc
sub
dec
shrb
xor
sbb
xor
aam
aaa
xchg
sub
jns
cwtl
mov
mov
into
aaa
pavgb
add
mov
scas
mov
dec
jb
inc
sti
sub
shlb
stos
rcrb
mov
es
xor
dec
or
test
push
imul
repz
call
sub
test
and
adc
in
repnz
sub
and
mov
xchg
fsubrp
mov
pop
add
fwait
dec
sbb
adc
push
xchg
repnz
jne
jae
dec
jg
addr16
or
pop
dec
pop
jnp
iret
push
sub
mul
add
loopne
scas
out
scas
mov
xor
dec
add
cmc
ljmp
rolb
mov
sub
dec
xchg
int3
jae
call
push
jne
inc
insb
cmpl
mov
inc
out
pop
stos
test
cld
icebp
scas
mov
jecxz
jns
mov
jns
sti
data16
push
jl
pop
test
mov
sbb
xor
pop
aam
idiv
or
loope
cmpsb
mov
lret
aas
dec
in
ficoml
clc
test
jnp
test
enter
test
out
xchg
xor
mov
cld
sbb
mov
cmpsl
repz
aas
mov
daa
bound
sub
cld
push
bound
dec
adc
aaa
push
cmpsl
jg
rol
call
lea
and
inc
lds
outsl
subb
clc
lret
sbb
mov
inc
popa
out
repnz
add
in
cli
mov
mov
jo
cmp
jmp
or
push
fucom
fwait
test
mov
mov
cmc
nop
repz
mull
sarb
fdivr
dec
dec
outsb
push
xchg
mov
repz
int
push
sbb
push
aaa
mov
lock
adc
clc
xchg
lds
int3
cmpsl
dec
clc
cli
xor
add
add
pop
jp
shlb
sub
or
inc
mov
and
cwtl
xchg
push
jb
cmc
sub
shlb
jo
cmp
sahf
enter
inc
mov
push
inc
int
jno
loopne
xchg
out
push
leave
jmp
inc
push
jle
dec
dec
movsl
xlat
imul
push
pushf
mov
ja
mov
jmp
inc
sbb
mov
idivb
movsl
lods
movl
mov
movsl
jmp
fisttpll
orb
and
mov
stos
dec
mov
mov
mov
and
xchg
pop
mov
pushf
lock
dec
inc
push
push
or
imulb
cmpsl
idivl
add
imul
pop
cmpl
sub
icebp
add
std
jnp
pop
lcall
xchg
inc
jp
cld
aam
cmpsl
enter
mov
dec
in
mov
adc
pop
adc
stc
ret
sbb
pop
je
movsb
popf
push
add
out
mov
jo
sbb
inc
into
in
sti
sbb
jge
lahf
data16
leave
imul
fisubl
divb
int
loop
mov
ret
and
adc
test
popf
pop
jae
pop
xchg
mov
hlt
push
push
test
add
stos
cmp
pop
push
sub
mov
jb
push
pop
inc
pop
fsubrl
leave
outsl
adc
push
lock
cmp
adc
adc
sbb
pushf
mov
and
xchg
push
push
cli
in
jns
shll
add
mov
rorl
movsb
fldl
or
arpl
nop
aad
outsb
inc
inc
mov
testb
xchg
and
outsb
mov
pop
out
lods
imul
mov
pop
lret
mov
movsb
push
lds
mov
cwtl
dec
jle
lea
jge
fisubrs
add
push
inc
insb
jecxz
mov
enter
sbb
jecxz
adc
popa
fcoms
repz
cltd
lahf
dec
addr16
icebp
test
cld
xchg
mov
out
aad
call
push
cltd
aam
dec
ret
pop
jbe
in
dec
and
inc
out
or
adc
mov
sub
lds
test
jmp
sbb
jp
and
sub
mov
dec
push
jno
sbbb
or
jl
push
cmc
lea
xchg
enter
data16
cmp
cs
push
dec
sub
out
data16
outsb
push
imul
rcrb
fdiv
out
lods
clc
scas
mov
adc
mov
rcrl
in
mov
or
dec
cmp
popf
arpl
xchg
sbb
inc
movsb
jae
or
mov
ljmp
cmc
mov
xlat
cmpsb
pushf
mov
repz
jno
dec
xchg
es
popf
jmp
and
inc
adc
mov
inc
or
mov
cmp
add
push
insb
adc
and
test
lds
ret
in
push
add
xchg
adc
mov
fs
fsubr
in
xor
rcrl
cmp
push
pop
pop
adc
shrl
dec
aam
test
mov
cmpsl
dec
ds
sahf
sub
add
das
jbe
push
xchg
ljmp
cs
xor
mov
and
ds
rclb
scas
in
out
xor
scas
pusha
cmp
ficoms
sub
ror
mov
cmpsl
aas
lahf
sub
cmpsb
inc
lock
push
lcall
mov
bound
test
shrl
jbe
call
dec
nop
xor
xchg
jle
pusha
mov
insb
cs
lds
pop
stc
enter
pusha
out
add
sub
lea
inc
out
jmp
test
and
mov
sub
push
mov
pop
cltd
push
add
filds
lods
adc
adc
ret
push
xorb
mov
cwtl
jge
push
ficompl
jbe
out
pop
inc
jne
cmp
pop
xor
jno
pop
cmp
and
inc
fstpt
inc
pop
push
xchg
fsubrl
or
xor
xor
icebp
sbb
inc
push
xor
daa
adc
mov
pop
push
daa
movl
mov
insb
push
push
jo
mov
lock
cmp
sbb
imul
cmp
push
in
int3
sbb
mov
lods
sbbb
pop
arpl
and
jne
daa
scas
or
stc
imul
insb
xchg
jb
jnp
fldenv
jne
hlt
stc
and
cmp
push
fs
sbb
cmpsl
jno
sahf
xchg
lock
fs
call
inc
lods
les
dec
mov
cmpsb
mov
cld
xor
sbb
inc
outsl
cwtl
enter
leave
fcompl
jae
push
lret
adc
jmp
dec
adc
cmpb
adc
dec
fcmove
xchg
js
pop
mov
and
loope
hlt
sub
sbb
jmp
dec
lret
lcall
aam
das
mov
and
das
fdivrl
lods
cmp
stos
shll
jne
inc
mov
push
insl
dec
or
mov
mov
xchg
rclb
imul
lods
and
fwait
adc
cltd
jnp
dec
cmp
stos
aam
jae
imul
and
dec
test
mov
call
in
mov
sti
imul
loope
inc
cmp
pop
jo
xchg
enter
out
nop
pop
into
cmpsb
xchg
pop
ret
fistpll
pop
add
loopne
fs
cmp
outsb
pop
inc
addr16
or
sbb
dec
lods
jmp
cs
stc
mov
sahf
add
adc
fdivrl
pop
xchg
ss
sbb
rol
shlb
sbb
out
frstor
inc
and
or
lock
iret
mov
jo,pn
das
pop
push
cmpsb
in
notl
add
or
inc
mov
inc
jle
mov
push
loop
cmp
add
mov
or
push
or
test
fs
daa
xchg
inc
das
pop
push
loopne
cltd
push
cmpsb
sub
add
sbb
jae,pt
mov
sbb
aad
push
iret
sbb
sbb
or
arpl
shlb
loopne
rcrb
repnz
out
and
movsb
cs
aaa
sti
enter
and
unpcklps
cwtl
add
nop
sbb
mov
and
push
mov
cmp
sub
push
mul
or
leave
stos
and
sub
jle
roll
jmp
pop
pop
fiaddl
dec
sub
lret
sti
js
fs
pop
and
mov
mov
pop
mov
aad
push
xchg
pop
xor
cltd
lahf
add
stc
jb
test
adc
cltd
les
dec
jg
subb
lret
pop
fprem
mov
andl
pop
lock
mov
sub
ret
shrd
test
or
push
sbb
scas
test
dec
push
mov
sbb
mov
push
pushf
ljmp
jl
jecxz
in
and
outsl
les
mov
aas
and
add
cmpsl
add
inc
repz
int
enter
jg
xchg
inc
xchg
aam
dec
ret
aam
inc
out
mov
add
push
push
adc
mov
and
inc
mov
lret
out
fmull
adc
inc
hlt
test
fistps
aaa
sbb
sbb
adcb
mov
shrb
loop
or
fcmovnu
sbb
push
sbb
out
xchg
hlt
shlb
pushf
scas
shufps
mov
or
sbb
lcall
sbb
and
sahf
jns
ret
ret
mov
rcrl
jns
dec
mov
lods
xorb
sbb
push
sub
fwait
movhps
jg
inc
sbb
xlat
ret
jne
xlat
pop
mov
addr16
mov
mov
and
adc
inc
enter
cld
scas
repnz
sub
xchg
popf
mov
dec
dec
mov
ljmp
jb
sub
adc
add
xchg
das
and
adc
push
sbb
fisubs
sbb
mov
in
pop
dec
icebp
in
xchg
insb
mov
lcall
jne
incb
fwait
call
inc
sbbb
cld
fisttps
data16
mov
shll
cmpb
and
xchg
les
mov
sbb
xchg
and
jg
adc
sub
das
pusha
jnp
adc
push
ss
stos
and
push
xchg
filds
jb
sub
xor
arpl
inc
inc
xchg
pop
adc
mov
mov
mov
dec
mov
in
pop
test
inc
jg
ds
ja
jns
test
pop
jno
ja
pop
js
mov
rcll
ret
jg
mov
mov
sbb
mov
mov
xchg
into
cmp
shl
jle
bsf
and
aad
mov
out
std
imulb
fcmovnu
inc
cmp
cmp
xchg
jge
xlat
lahf
es
hlt
shl
pushf
rcrl
push
dec
loope
lods
fwait
mov
not
jge
daa
test
mov
imul
push
mov
xor
mov
jecxz
mov
incl
sub
push
fs
jno,pt
not
loope
mov
int
cmpsb
push
xlat
sbb
leave
sarl
fildll
mov
repnz
fmuls
inc
push
shl
outsb
sub
mov
test
lods
cmp
jl
nop
add
adc
int3
and
inc
xor
jp
mov
movsl
leave
push
daa
xor
test
jmp
push
or
jbe
xchg
pushl
sub
add
data16
aaa
mov
lret
sbb
or
or
loopne
jno
cmp
pop
imul
adc
cld
lahf
dec
pop
leave
lea
into
sub
js
xor
scas
into
xor
sbb
jmp
cmp
je
mov
xor
adc
ret
stc
pop
inc
mov
scas
add
push
leave
lods
cmpxchg
cmp
mov
and
je
into
into
cmp
scas
ficoml
push
mov
dec
cmpsb
xchg
addr16
lods
xorb
jge
add
in
loope
cmp
int
clc
push
out
dec
insb
aaa
cltd
lret
movsl
loope
movsb
mov
mov
mulb
addl
inc
lcall
pop
test
cmc
mov
dec
and
push
pop
outsl
dec
add
push
repz
inc
stc
dec
int
and
and
outsl
xchg
shl
or
jl
cmpsl
ret
jno
mov
pop
stc
xlat
fisubl
pushf
sbb
inc
insl
scas
jno
jns
cli
and
mov
icebp
xchg
dec
sahf
dec
and
and
bound
push
mov
xor
sbb
mov
mov
clc
je
test
pop
sub
jno
xchg
mov
cmpl
sub
cmp
or
test
jns
add
out
aad
imul
fisttps
not
ror
lret
xchg
cltd
test
inc
bound
dec
aas
dec
sahf
leave
cmpsl
sbb
loope
xchg
lods
sbb
jbe
jmp
out
test
lods
call
push
pop
aad
cld
test
icebp
outsb
dec
lock
cs
rorl
jle
adc
sbb
jae
or
pop
mov
fidivs
faddp
jb
fistps
cwtl
jp
sahf
push
add
inc
loop
mov
pop
mov
mov
and
arpl
pop
dec
sbb
sub
mov
mov
xchg
stc
xchg
pop
pop
or
inc
cld
jecxz
push
sbb
lods
imul
nop
jmp
jnp
dec
and
repnz
lcall
push
dec
cmp
sbb
lahf
mov
mov
les
dec
pushf
bnd
mov
ljmp
imul
mov
push
pop
jae
in
xor
add
sub
std
gs
je
inc
addl
and
jnp
inc
xchg
pop
in
lock
add
jg
cmpps
lds
or
clc
lahf
pop
cmp
cmpsb
jne
mov
or
jmp
cmp
testb
sbb
xor
inc
push
mov
cmp
mov
out
and
cmpsb
mov
jb
jecxz
cld
aam
push
lds
addb
insl
aaa
testb
pushf
rcll
call
mov
xlat
test
inc
inc
push
cmp
inc
add
jne
adc
pop
xorb
push
xor
add
xor
icebp
shll
es
adc
leave
das
in
sub
pop
mov
jge
sahf
adc
mov
rol
dec
sbb
mov
scas
cmp
nop
daa
sub
test
lcall
mov
or
fincstp
mov
mov
incl
icebp
in
test
add
xchg
cmp
imul
hlt
jnp
mov
and
inc
adc
xor
in
mov
xor
mov
std
in
mov
jne
sti
fidivs
shl
lret
data16
mov
adc
sbb
ficomps
xor
mov
pop
mov
adc
or
dec
push
xchg
test
mov
sub
jae
int3
sbb
std
sti
and
cmpsb
mov
xchg
sbb
scas
call
and
sbb
cld
or
mov
enter
in
jp
lahf
or
test
xchg
stos
mov
lea
insl
push
imul
in
lcall
add
mov
push
push
or
hlt
int
xchg
outsl
lcall
test
popf
mov
pop
mov
mov
add
and
or
repnz
imull
jg
sub
fcmovu
xor
test
push
mov
fisttpl
push
stos
rcrl
xor
add
loop
insb
ret
movl
jno
pop
push
xor
cs
bound
out
dec
and
insb
out
jmp
aaa
xchg
xchg
stos
jbe
test
mov
or
leave
jno
cmp
sub
jecxz
push
cmp
sub
add
or
or
lcall
fwait
push
xchg
lods
out
xchg
fisttpl
lock
or
ljmp
mov
cmpsl
push
movsl
jmp
lcall
cld
or
add
and
sbb
sti
pop
test
aas
mov
rcrl
aas
lcall
fptan
pop
xchg
lea
outsb
xchg
xchg
push
mov
mov
pop
jno
dec
xor
sti
jo
loopne
cltd
push
lret
cld
in
mov
das
icebp
icebp
push
gs
cmp
rolb
das
dec
arpl
lea
add
cli
lock
mov
push
jge
cld
mov
ds
movsl
aad
adc
jno
daa
out
push
dec
xchg
add
cmc
cwtl
pushf
pusha
add
pop
test
leave
dec
es
and
fdivl
dec
shlb
xchg
xchg
jo
rclb
lcallw
sti
push
xlat
repnz
mov
out
popf
cmp
test
pop
into
fstl
std
dec
sbb
dec
or
addr16
lock
arpl
std
mov
arpl
mov
mov
jg
or
ret
cs
inc
imul
mov
pop
and
bound
add
test
xor
fidivrl
leave
insb
inc
pop
out
nop
rclb
mov
push
shrb
push
add
repz
push
outsb
pop
in
mov
aam
jmp
cs
lea
pushl
push
jecxz
stc
rclb
fcomps
adc
adc
push
push
jmp
jp
cmp
xchg
repz
mov
pop
xchg
sbb
inc
lods
les
xchg
in
movsl
mov
loopne
jecxz
pop
xor
xchg
loopne
add
and
in
dec
xchg
dec
popa
imul
cmp
ja
inc
dec
repz
imul
inc
push
lds
cmp
cmp
sub
sbb
push
iret
xchg
pop
inc
push
adc
pop
pop
icebp
xor
aas
cmpsb
scas
jmp
inc
idivb
fdivrp
push
xchg
jp
notl
out
push
loopne
mov
clc
xchg
shrl
xchg
sbb
pop
inc
dec
orl
clc
out
xchg
push
popf
out
fwait
test
test
aas
testl
add
or
xchg
or
or
in
fmul
mov
push
in
sbb
sahf
mov
mov
lods
xor
in
adc
mov
dec
xlat
sbb
cmpb
clc
mov
ja
dec
int
shrb
test
stos
push
cmpb
xchg
jg
dec
call
pop
jp
xor
and
jecxz
adc
lahf
add
cwtl
xchg
les
cmp
icebp
adc
push
ljmp
or
sbb
dec
jns
inc
repnz
xchg
mov
xchg
sahf
mov
stos
add
fisubrl
loopne
sub
or
mov
shlb
mov
cli
pop
stc
pushl
hlt
ret
dec
add
pop
push
mov
popa
mov
push
mov
test
leave
icebp
jge
insb
lahf
std
aas
cli
stos
sub
sbb
add
pop
cld
or
mov
rcr
jns
push
inc
and
sbb
cmp
fdivs
push
push
dec
sahf
jns
and
push
mov
and
push
sti
add
addr16
push
data16
mov
mov
or
jno
paddusw
and
in
xchg
test
adc
mov
lds
ret
loopne
mov
mov
cmp
mov
fbld
mov
scas
adc
icebp
mov
arpl
out
adc
insl
repnz
fmull
test
rcrl
inc
mov
push
sub
ret
dec
sbb
inc
fucomip
les
jbe
mov
xchg
sbb
mov
mov
adc
loop
xchg
pop
in
mov
movsl
mov
add
cmpl
out
pop
sub
insb
jg
sbb
nop
ss
setg
xor
lods
inc
fstl
cmp
and
jae
or
mov
lds
or
jno
arpl
fstpl
in
scas
leave
daa
fdivrl
xor
ret
or
cmp
pop
sub
lods
push
xchg
lock
add
push
ret
mov
and
sub
inc
adc
mov
jle
mov
add
in
fadd
and
hlt
mov
loope
jns
dec
daa
dec
out
stc
mov
push
pop
nop
icebp
pop
jne
sub
mov
jnp
lock
out
pop
cmp
add
setne
xchg
mov
cmp
decb
imul
addr16
dec
jbe
and
or
out
or
imul
adc
sub
pop
int3
xor
adc
je
outsb
mov
xchg
jnp
sub
addr16
sbb
arpl
cmp
scas
repnz
popf
xchg
push
pop
repnz
jp
jbe
sbb
pop
dec
jp
shll
and
jne
jae
lds
mov
ds
and
not
adc
rol
jecxz
jnp
dec
adc
jns
xchg
fildl
mov
mull
or
pop
in
sub
jmp
lcall
mov
pop
pop
xor
or
ret
insl
sbb
inc
int3
jmp
sbb
hlt
shlb
push
data16
int
stos
fdivp
jg
cmp
in
push
popa
xchg
ds
cmc
pop
mov
dec
add
test
or
insb
out
movl
cltd
cli
mov
adc
pop
pushf
dec
mov
imul
not
dec
jb
pop
mov
nop
mov
ljmp
sti
cltd
and
lcall
inc
jl
rorb
mov
adc
cmpsl
fs
hlt
jp
xor
rol
dec
push
out
sub
add
add
repz
or
dec
imul
lods
shrl
and
dec
vshufps
inc
inc
loopne
jne
jl
and
inc
dec
or
inc
mov
data16
cltd
and
jnp
mov
sbb
mov
outsb
push
jg
sub
stc
jns
in
stos
and
sub
shll
lret
cmp
cmp
sbb
inc
test
inc
push
loop
clc
xchg
push
sbb
xor
dec
cmp
adc
popf
aam
subl
or
xor
mov
out
xor
in
or
adc
jne
push
jae
and
jle
xchg
push
jns
cmpsb
mov
fnsave
push
outsl
and
aaa
rcrb
mov
inc
lds
pop
imul
ja
pop
jle
sbb
inc
in
push
cmc
inc
out
jmp
in
add
xor
aas
push
push
out
push
jmp
ds
and
bound
sar
pushf
sbb
ljmp
loopne
cmp
pop
inc
stc
xchg
stos
mov
pop
js
mov
jbe
sub
je
adc
gs
add
fadds
mov
xchg
xor
incl
xchg
jp
in
pushf
sub
popa
fistps
rcl
dec
jg
scas
sub
jmp
cmp
cmp
sub
or
aas
pushf
jl
dec
stos
rol
mov
push
add
enter
xor
repz
sbb
popf
jmp
popf
mov
mov
or
jg
repnz
aam
mov
aas
sbb
shl
mov
and
and
adc
cmpsl
dec
test
sub
push
xor
dec
cmp
daa
inc
fs
pusha
std
scas
pop
sub
inc
lods
lock
fcmovu
add
mov
fisubrl
xor
addr16
nop
xor
mov
std
jge
mov
mov
nopl
pop
scas
pop
outsb
lahf
xchg
and
adc
lret
cwtl
pop
and
testb
mov
cld
cltd
add
cltd
add
push
dec
add
addr16
mov
std
pop
and
movsb
popa
push
pop
cmp
pop
cmp
mov
cltd
aad
mov
mov
jle
out
lds
call
out
and
jg
addr16
push
or
pop
scas
cmp
pop
cmp
js
cs
adc
push
mov
stos
adc
inc
jmp
mov
pop
mov
faddl
xor
jp
or
sbb
out
out
jle
sbb
jmp
mov
stc
les
outsl
jns
std
pop
push
add
mov
hlt
mov
mov
mov
mov
stos
and
push
ficoms
jb
leavew
add
in
rcll
cwtl
xor
js
mov
jns
pushf
lret
pop
sub
mov
mov
mov
push
push
mov
test
mov
out
pushf
adc
mov
cli
shll
clc
int
aam
pop
jbe
cli
xchg
mov
insl
cmp
fabs
rcrb
fsubl
enter
jae
lods
mov
cmp
std
push
jge
dec
or
sub
lods
sbb
into
sub
dec
lds
adc
test
bound
xor
gs
dec
lahf
rcrb
scas
dec
or
jl
inc
sbb
inc
or
in
cld
mov
mov
cltd
or
cmp
push
std
pop
push
shlb
cwtl
and
imul
mov
outsl
xlat
cs
jns
and
pop
mov
jmp
or
cltd
out
lods
aad
push
decb
inc
adc
stos
fucom
sbb
fnstcw
pop
int3
outsb
or
sbb
add
das
and
fildl
roll
insl
aad
mov
pushf
cmp
ret
in
popf
les
dec
or
jb
dec
mov
nop
jo
xchg
lods
cli
sti
jp
jg
jp
test
mov
adc
aas
rorl
sbb
dec
jle
sub
popa
les
jmp
clc
popf
pop
shrl
inc
lea
or
and
jp
aad
leave
ss
lret
mov
popf
icebp
test
outsb
fnstenv
rorb
sub
sub
js
jecxz
lahf
in
fs
es
inc
loope
outsl
test
adc
je
out
sub
loop
out
sbb
push
pop
mov
mov
aad
aaa
dec
sub
push
aam
ror
ret
mov
shlb
ffreep
push
mov
out
xor
cmp
inc
cwtl
sbb
ficoml
inc
mov
jo
jns
dec
or
rcr
mov
in
icebp
daa
or
and
jg
fxch
dec
sahf
cmp
lea
mov
inc
call
stos
push
out
mov
mov
pop
adc
inc
pop
insb
pushf
and
sub
scas
into
xchg
shl
mov
mov
ss
inc
popf
adc
stos
pushf
or
cltd
dec
lods
jo
push
jne
fsubrs
sbb
push
xor
scas
aaa
into
dec
dec
rcrb
in
and
shl
mov
fwait
inc
mov
xlat
sbb
lock
cli
lcall
shrb
shl
lret
ds
mov
enter
popa
xchg
fxch
in
loop
sub
mov
sbb
out
imul
push
inc
ss
popa
cmp
lcall
xor
cmp
lcall
or
or
inc
jb
xor
out
sbb
ss
and
add
sahf
mov
bound
test
and
cmpsb
add
xor
xchg
sbbl
adc
in
sbb
xchg
push
jge
addl
arpl
cmp
popa
divl
xlat
and
fisubrs
mov
sub
aad
sti
and
std
adc
xchg
stos
jcxz
das
xchg
jb
mov
adc
inc
test
mov
mull
sub
inc
orb
hlt
add
jo
mov
jmp
in
mov
ret
cmp
mov
sbb
orb
xor
mov
fwait
sbbb
sub
push
and
jnp
popf
inc
pavgb
adc
xchg
inc
mov
xchg
data16
lret
pop
xchg
jp
push
in
pop
mov
fldenv
pop
cmp
sub
sbb
outsb
xlat
psraw
es
pusha
push
ss
jno
dec
jno
mov
or
sub
fdivl
ds
push
pusha
push
adc
jae
inc
fcoms
sbb
in
fiadds
push
into
sti
nop
cmp
xchg
movsl
lea
jae
sarb
ljmp
jne
push
cld
sbb
mov
int3
cmp
hlt
aas
iret
movaps
pop
dec
mov
cmpsb
add
movl
dec
in
or
dec
pop
enter
and
inc
xchg
andb
ret
sbb
mov
add
test
mov
xchg
pusha
stos
loope
imul
ss
cltd
call
popa
lahf
jmp
adc
and
push
fists
cmp
bound
mov
cmp
int
daa
nop
pop
pop
inc
in
fstp
mov
fsubl
and
push
lahf
mov
lret
fistl
sbb
cli
out
push
xchg
fimuls
inc
xor
aad
fnstcw
sub
xchg
xor
out
aas
add
inc
sbb
push
xchg
pop
jns
cltd
mov
stc
call
and
lods
sub
pushf
cmp
imul
adc
dec
pop
pop
shll
pop
mov
stos
sub
push
pop
sbb
sahf
xchg
es
adc
cli
adc
pop
loope
test
je
fistps
adc
lcall
jae
lahf
xor
loope
xchg
pop
push
cmp
inc
in
adc
ds
push
pop
aas
sahf
push
xchg
push
aas
dec
outsl
pop
rclb
sub
std
mov
lods
flds
mov
ftst
or
mov
shlb
sub
add
mov
cmp
cli
xor
outsb
jle
pop
mov
adc
jmp
iret
imul
jl
loopne
inc
dec
sub
outsb
jl
fcoms
xchg
lock
mov
movsb
cmpsl
or
push
pusha
mov
outsl
inc
or
mov
sub
paddd
rep
xchg
imul
iret
sub
mov
ret
or
adc
out
bnd
pop
pop
ss
in
push
data16
je
in
dec
incl
jle
xchg
xchg
lcall
lcall
cmp
test
mov
fbstp
pop
fs
stos
dec
repnz
cmpsl
or
push
shll
je
adc
jns
jge
inc
cmpsb
mov
mov
fsubs
iret
int3
pop
loope
repnz
mov
jmp
or
pop
cli
lock
insb
cmpsb
mov
fnsave
ret
cmpsb
dec
and
popf
push
rorl
or
adc
das
mov
sub
mov
adc
call
pop
sbbb
in
fwait
cmp
adcl
dec
sarb
push
fcomi
jmp
add
xchg
xchg
mov
jp
jg
fucomp
push
push
arpl
pop
mov
jb
das
out
stos
imul
jmp
mov
loopne
lahf
repz
adc
mov
jl
sbbb
enter
movsl
rorb
push
dec
popf
incl
sub
push
sbb
add
arpl
pop
ss
and
push
lods
or
mov
lock
pop
repz
jmp
icebp
cli
lods
outsl
xor
mov
push
push
lahf
fwait
xlat
sbb
xchg
dec
dec
fistl
xchg
adc
jl
pushf
sub
movsl
outsb
mov
xor
dec
movsb
fildl
dec
aas
pop
lret
push
loop
mov
out
aad
enter
xor
mov
dec
cwtl
xor
jp
mov
sti
xlat
inc
hlt
mov
sub
or
test
cmpsb
mov
jg
mov
adc
stc
ja
xor
cwtl
xchg
mov
add
jecxz
and
andl
or
jno
add
mov
push
ret
ds
jmp
orb
pop
lds
xor
mov
popf
mov
inc
or
lock
mov
or
sub
les
xchg
jmp
insl
xor
xchg
popf
enter
gs
xchg
jmp
mov
cmp
outsb
clc
cmp
aaa
xor
icebp
out
mov
mov
fnstcw
iret
inc
sbb
inc
mov
xchg
mov
movsl
mov
or
mov
std
push
dec
sub
and
sti
repz
or
pop
rcl
mov
and
inc
mov
pop
fidivrs
pop
aad
lahf
int
test
xchg
ret
dec
loop
jno
adc
push
ret
push
mov
xchg
lret
inc
fs
mov
or
or
jecxz
das
and
iret
or
xchg
loopne
mov
ljmp
push
mov
sub
mov
and
rcrl
jg
xchg
push
pop
jg
xor
arpl
xor
sbb
scas
mov
ret
mov
rorb
xor
call
xor
sbb
and
mov
repz
sbb
clc
jb
jecxz
pop
pop
enter
adc
ret
iret
das
pop
nop
mov
xor
jmp
push
into
das
sbb
mov
fwait
aam
lds
pusha
mov
dec
jg
push
inc
mov
pushl
movsb
jl
lcall
cld
repnz
test
outsb
aas
rcll
nop
pop
mov
popf
cmp
sub
popf
rorl
repnz
insl
mov
mov
sbb
ret
lds
cmp
fmul
mov
mov
out
fsub
sbb
enter
rcll
icebp
aad
dec
inc
lahf
cmp
sarb
jo
outsl
mov
mov
mov
fldcw
jmp
aam
das
jbe
icebp
rcrb
ja
test
sbb
fimuls
dec
jne
imul
mov
add
xor
lcall
test
push
push
push
cmp
ss
test
out
xor
xchg
cmp
fwait
inc
lret
push
cs
ss
pop
outsb
in
daa
or
pop
filds
jne
cltd
jns,pn
push
fiadds
jns
iret
xchg
xchg
mov
mov
inc
dec
je
fwait
test
xorb
push
nop
mov
sub
js
dec
mov
imul
repnz
fidivrs
sbb
xor
stos
call
add
in
repz
sbb
adc
sub
add
divl
add
mov
lock
lret
adc
loopne
push
pushf
in
bndldx
or
cld
inc
jns
push
jecxz
mov
xchg
sti
leave
adc
shll
xor
aaa
sbb
jge
in
sub
inc
out
in
pusha
mov
aad
insb
pop
into
xor
push
int
lock
test
jno
ljmp
and
mov
ja
adc
xchg
push
repz
jmp
shlb
inc
in
push
xchg
imul
int
leave
mov
rcll
jo
loopne
loopne
mov
icebp
mov
lock
pushf
popw
sbb
or
adc
jp
pop
inc
out
popa
loope
out
or
push
add
xor
jne
adc
push
inc
push
mov
pop
mov
xchg
ds
lods
dec
cmpsb
or
adc
jmp
sbb
mov
test
dec
aad
insl
cltd
xchg
lahf
fxch
or
sahf
push
ret
icebp
and
inc
lcall
hlt
adc
inc
add
cmc
cld
fcompl
out
xlat
cld
out
push
or
sub
pop
out
fcmovne
mov
pop
mov
mov
dec
mov
popf
inc
pop
pushf
mov
xchg
jecxz
repz
push
xchg
or
lods
adc
fimuls
shll
daa
adc
inc
sar
in
mov
clc
sub
sub
into
popf
sub
inc
sbb
mov
jnp
ss
lret
add
addr16
sbbl
push
lret
inc
jae
pop
ljmp
push
lahf
js
pushf
add
jmp
pop
cmp
add
mov
in
repnz
xor
loope
dec
ret
jecxz
sbb
mov
add
fldenv
jae
scas
inc
stos
adc
into
lret
dec
dec
aaa
ds
or
movsl
dec
mov
mov
and
xchg
sub
pop
stos
mov
pop
adc
shll
add
iret
sbb
mov
loop
xor
jecxz
out
fmuls
ret
jne
or
cmpsl
inc
inc
insl
xor
or
ss
xchg
cmp
sbb
or
xchg
mov
lock
popf
lahf
pop
test
sub
dec
ret
lret
aaa
push
push
aad
cmp
mov
jbe
testl
sti
add
popa
jae
add
add
mov
sub
mov
pop
sub
sbb
jbe
movsbl
push
gs
pop
int3
pop
xlat
sub
lcall
bound
mov
rorl
fldenv
sti
or
iret
ljmp
aaa
add
adc
xor
ljmp
pop
or
xor
sbb
xor
mov
setns
test
inc
jl
test
lock
imull
jnp
int
sub
xchg
sbb
stos
sub
popa
dec
or
dec
int
sub
hlt
cli
mov
mov
ud2
inc
add
icebp
or
cmp
sub
xor
lods
loope
mov
jmpw
fistpl
aaa
out
gs
aad
push
push
pop
out
shlb
jmp
mov
stos
int3
lcall
and
sti
push
loopne
sbb
dec
jmp
jb
adc
pop
cmp
dec
std
xorb
mov
cmp
int
mov
lods
ss
and
aam
pop
outsb
xor
hlt
fidivl
sbb
xchg
scas
aad
mov
adc
jecxz
in
push
cld
shr
lret
daa
inc
dec
fidivs
sub
dec
jge
dec
test
sti
into
int
insb
dec
test
and
jecxz
das
lods
hlt
cmp
aas
jmp
js
push
sub
lock
and
lcall
mov
or
das
xor
loop
shrb
cwtl
stos
adc
mov
out
mov
in
xchg
ret
in
lret
jecxz
cmp
lea
cld
dec
sub
sub
and
cwtl
aaa
icebp
sbb
aad
sub
push
sahf
add
inc
xor
out
jl
cmp
cwtl
orl
lods
mov
cli
bound
dec
cmp
jbe
fstpl
xchg
xchg
mov
xor
insb
lret
fnstenv
sahf
aas
pusha
fnsave
and
pushf
idivl
in
pop
xor
mov
dec
in
push
fstpl
sub
fdiv
mov
cmp
jbe
cmp
cmpb
sbb
pop
push
lds
jne
nop
int3
cmpsb
sbb
add
daa
insb
pusha
shrl
insb
pop
out
shll
sbb
xchg
push
mov
cmc
pop
pop
cmp
shrl
xchg
popf
cmpb
cmp
ds
rorl
insb
shrb
cmovb
lcall
loopne
jb
mov
scas
xchg
fs
dec
inc
jmp
shlb
int3
mov
xchg
mov
jp
push
jp
push
sbb
test
dec
xchg
dec
jge
popa
jb
je
jne
add
xchg
dec
cmp
mov
jmp
push
jle
pop
mov
iret
push
out
mov
lods
movsb
sub
and
fbstp
or
outsl
sahf
jns
mov
adc
mov
dec
in
mov
jnp
xlat
ja
filds
sbbb
inc
cmc
jbe
sarb
xchg
repz
mov
loope
stos
cwtl
les
sbb
inc
inc
sbb
or
std
insl
and
lret
icebp
mov
add
lds
int3
cmp
das
addr16
loopne
xchg
mov
rorl
rcrb
data16
jp
lods
mov
inc
add
jae
push
mov
mov
sbb
dec
xchg
jbe
iret
popa
shll
xor
jno
jecxz
cmp
cmp
cld
ficomps
or
hlt
std
enter
bound
repz
or
cli
aam
in
jb
aaa
mov
mov
les
loope
roll
push
mov
insl
in
mov
sub
int
mov
or
sub
icebp
les
mov
xor
adc
ficoml
and
push
jle
data16
enter
and
vzeroupper
add
and
mov
in
subb
inc
pop
movsb
mov
sbb
je
dec
rcrb
clc
mov
and
scas
loope
inc
cmp
jecxz
inc
insl
push
cltd
aaa
lcall
sbb
bound
inc
sub
sbb
dec
cmpsl
sub
inc
sbb
sbb
sub
cmp
sbb
add
jns
stos
aaa
shrl
mov
jle
in
dec
fdivrs
test
ret
dec
push
outsb
pushf
add
mov
push
xor
iret
lods
mov
or
mov
push
xor
ss
adc
push
pusha
lods
xchg
nop
lahf
leave
rcll
pusha
or
clc
testb
bound
orl
lcall
xchg
aaa
insb
mov
stc
scas
adc
scas
std
sbb
outsb
xor
shrb
or
movsb
jno
setbe
and
daa
push
mov
push
mov
xor
out
jmp
fmuls
test
dec
bound
aaa
adcb
in
inc
push
sbb
imul
sub
sbb
sub
rcr
mov
sbb
cmp
cmc
int
push
push
outsl
adc
lahf
test
outsb
outsb
or
sti
outsb
ds
and
cmp
insb
dec
cmp
lea
loop
leave
in
mov
or
test
dec
fldl
dec
or
mov
add
xchg
and
add
pop
icebp
cltd
and
lods
add
adc
shl
jnp
xorl
fxtract
or
jmp
frstor
pusha
push
add
jno
add
mov
rolb
mull
push
push
xchg
and
xor
js
sbb
jo
mov
inc
mov
mov
sub
jno
push
mov
das
and
outsl
mov
xlat
in
xchg
mov
mov
imul
push
pop
je
and
or
add
aaa
mov
repnz
jns
cmp
inc
dec
sbb
push
add
and
adc
outsl
scas
fiaddl
push
and
loop
mov
push
jge
cmp
test
fnstenv
adc
push
dec
sbb
mov
pop
mov
out
das
mov
ret
push
mov
pop
lcall
push
mov
cwtl
adc
out
stos
fcom
inc
out
icebp
orb
mov
outsl
popa
std
xchg
call
jmp
push
aam
popf
push
sbb
pusha
jge
or
out
aam
dec
in
push
jne
mov
popa
ds
xor
cmp
stos
pop
mov
xlat
cmp
repz
iret
mov
insl
inc
fs
jg
dec
test
fnsave
mov
pop
in
xor
test
push
ljmp
xchg
or
sub
xor
out
add
mov
insb
adc
dec
sub
mov
xor
jnp
iret
ss
inc
shlb
outsl
rcrb
mov
push
fucom
int3
data16
cs
sub
cmpsl
lods
imul
xorb
mov
add
setae
pop
add
lret
add
xchg
inc
outsl
fistpll
sub
sub
xchg
cmc
fsubrs
out
fisubs
int
pop
push
push
inc
push
or
rcrb
movsl
push
sbb
mov
lods
adc
and
dec
mov
add
mov
test
sahf
cld
in
movsl
xor
aaa
lcall
ret
mov
cli
int3
mov
and
int3
int
sbbb
gs
gs
adc
xlat
and
iret
aad
in
push
add
aaa
dec
xchg
sahf
sub
mov
repz
add
jle
mov
inc
xor
xchg
add
inc
flds
faddl
out
lahf
loop
jle
cld
or
icebp
andl
sbb
fisubl
push
inc
push
and
sbb
add
lcall
pop
push
lea
movsb
and
mov
xchg
sbb
cli
sub
xchg
push
dec
in
cmc
or
and
out
cmp
jle
and
into
push
sub
imul
scas
push
cmp
ljmp
push
ret
inc
pusha
adc
mov
mov
ja
push
es
dec
adc
pop
add
xchg
lahf
daa
jp
and
pop
sub
dec
xchg
xchg
scas
mov
pop
push
test
dec
jo
push
mov
add
cmp
sbb
pop
sbb
push
sub
cmp
cmp
xchg
add
xor
insl
fwait
and
jbe
dec
jb
loope
cmp
dec
arpl
mov
inc
dec
stos
out
cmp
sbb
scas
scas
je
cmp
cmp
xor
pop
cmp
push
cld
bnd
sbb
es
int
sub
mov
add
lret
and
jne,pn
mov
in
out
inc
mov
push
cli
adc
iret
lret
xchg
sbb
pop
mov
dec
sub
or
popa
jne
mov
push
cmc
push
mov
out
mov
xor
push
cmp
outsl
xor
mov
fmuls
int
ja
pop
fbstp
pop
xchg
cmp
mov
mov
xor
mov
fcomps
enter
inc
in
jns
out
sub
in
sbb
mov
in
xor
popf
aad
cmp
rcrl
stos
roll
ret
clc
in
xor
shlb
hlt
push
outsb
sarb
out
stos
jae
repnz
inc
aam
mov
cld
shlb
xor
aad
push
in
cmp
inc
jb
xchg
cmp
enterw
push
xchg
fldenv
pushf
fsubs
cmp
repz
lods
add
inc
incl
call
hlt
ljmp
js
out
nop
mov
lret
xchg
lock
daa
sarb
jo
xlat
das
fstpt
popf
je
ss
inc
mov
mov
cli
mov
shlb
jl
pusha
inc
xor
stc
test
mov
jo
mov
jae
mov
push
sub
shrl
dec
lahf
lea
and
ja
xchg
subb
add
dec
mov
xor
xor
inc
xchg
mov
pop
mov
outsb
xlat
stos
pop
sub
mov
lods
and
jo
dec
out
cmp
jns
ret
cmpsb
xor
pop
je
ljmp
mov
mov
popa
and
test
sbb
adc
je
xchg
push
clc
mov
mov
or
xor
xchg
je
nop
mov
fwait
jecxz
inc
sahf
push
ss
insb
inc
repz
insl
sbb
sbb
in
mov
pop
scas
mov
and
jg
xor
jle
lods
sbb
sbb
bound
mov
adcl
or
mov
popa
leave
pop
inc
xchg
fisubrs
loop
mov
jg
in
frstor
or
sub
jns
in
adc
mov
fwait
addr16
leave
xor
xor
add
or
in
fistpll
cmp
sbb
mov
xchg
call
jnp
and
add
cmp
jmp
add
jmpw
cmp
mov
mov
cmp
and
fidivrs
sahf
push
jle
jp
jl
adc
aad
cltd
pop
fdivl
mov
push
shll
shlb
lret
jl
sbb
mov
fsubrl
mov
in
push
andb
pop
test
adc
test
jbe
mov
inc
push
adc
adc
xor
jae
mov
push
mov
cmpsl
mov
aas
add
cwtl
flds
aad
nop
push
enter
loopne
xchg
dec
jns
in
xor
aad
add
fs
aas
xlat
mov
jl
icebp
dec
mov
cmp
inc
mov
nop
or
in
lods
push
icebp
repz
pop
les
sub
dec
js,pn
jnp
pop
imul
cmp
sub
dec
outsb
out
outsb
adc
int3
cmp
mov
push
xlat
jmp
xchg
sub
je
shl
xchg
push
mov
push
adc
mov
cmp
popa
push
fsincos
aaa
loop
aas
mov
sub
lret
adc
mov
in
xchg
mov
inc
pop
in
loopne
mov
xor
cld
lret
nop
xor
movsb
insl
jg
scas
push
fsubrl
push
mov
jmp
push
inc
sbbl
les
inc
insl
data16
jnp
inc
pop
imul
push
push
inc
ja
cmp
mov
popa
popa
mov
iret
mov
lret
push
incb
or
mov
ds
inc
mov
dec
and
dec
dec
mov
mov
enter
jl
xlat
xchg
ret
mov
mov
cmc
pushf
lock
sbb
or
dec
decl
and
je
mov
adc
lahf
sbb
jg
and
push
movsl
es
push
mov
fisttps
xchg
jno
or
data16
in
out
por
aaa
pop
lock
repz
sbb
call
jno
dec
mov
enter
and
mov
sub
repnz
popa
out
fistl
out
sub
xchg
in
push
xor
push
fsubr
sbb
scas
mov
inc
rcl
movsb
stos
daa
in
addr16
rcrl
jbe
loop
je
call
xor
daa
movsl
push
xor
enter
decb
aaa
cmp
add
sub
jb
loopne
movsb
xor
repnz
dec
mov
and
mov
out
xchg
cmp
clc
xchg
dec
lods
add
shlb
dec
std
cs
in
mov
hlt
aaa
push
push
push
xor
mov
lret
sub
fstpt
xchg
push
push
sti
pop
mov
add
fimull
add
ja
call
aam
mov
into
ficomps
fstpl
xlat
js
push
adc
jae
dec
loope
cmpsl
dec
aam
sub
sbb
xor
hlt
shlb
dec
cmp
rcrl
mov
mov
sub
insl
and
sbb
std
adc
or
ljmp
mov
imul
fldcw
jnp
mov
xchg
out
jbe
cmp
inc
fwait
inc
test
out
mov
inc
bound
pushf
lret
sub
cs
aam
inc
arpl
lcall
adc
stos
mov
or
push
cwtl
jne
pop
imul
pop
dec
jns
adc
daa
inc
inc
push
pop
popf
rcrb
push
arpl
xchg
add
mov
cmp
cltd
mov
inc
in
adc
fisttpll
cli
popf
fwait
jne
jns
movsb
lret
icebp
ss
mov
mov
sbb
pushf
mov
cwtl
push
add
mov
fistl
mov
inc
loope
ret
cmp
push
and
pop
movsb
xchg
andb
cs
pop
xchg
dec
lods
adc
aam
add
int
aaa
fildl
cmp
popa
icebp
lcall
push
inc
test
cld
mov
jbe
hlt
sbb
inc
add
jg
push
jmp
loopne
mov
sbb
mov
xor
xor
imul
test
mov
jp
cmp
aas
xor
out
ret
inc
hlt
shrl
mov
cmp
add
mov
xchg
or
icebp
push
jnp
jmp
adc
ja
ljmp
adc
jmp
jb
leave
int
in
mov
mov
cltd
fnstcw
cmp
movsl
loopne
add
lcall
repz
leave
xor
push
mov
repz
stc
xchg
lods
ss
cld
ss
pop
jne
pop
and
cmp
or
jae
fstpl
pop
fidivl
jno
inc
popa
inc
ret
xchg
aaa
xlat
inc
in
push
outsb
push
into
xlat
xchg
mov
hlt
icebp
dec
pop
vmread
int
scas
inc
mov
out
cltd
ljmp
ds
js
push
out
and
mov
sbb
cmp
ja
and
aas
in
xor
mov
aaa
addr16
dec
xlat
test
or
adc
arpl
mov
push
hlt
mov
pop
adc
lods
js
add
dec
fld
pop
dec
pushl
into
xchg
lea
mov
mov
pop
jg
xorl
dec
pop
lds
lods
out
stos
push
cs
mov
in
pop
int3
mov
inc
sti
jcxz
lahf
ss
stos
sub
pushf
movb
push
into
pop
push
daa
jae
lcall
popf
jmp
fs
or
popf
loope
xchg
xor
call
jbe
movsb
or
ficomps
and
into
pop
mov
push
sti
out
stos
jae
pop
and
or
xchg
sahf
adcb
xchg
daa
int3
jno
popf
xor
sti
push
add
shll
adc
cwtl
test
sub
rolb
shll
gs
adc
mov
lcall
popa
inc
pop
lods
push
sahf
jb
pop
xor
cmc
aam
fidivrs
mov
inc
aam
mov
mov
inc
sub
dec
fistl
inc
andb
cmp
dec
adcb
pop
pop
in
daa
jae
add
test
call
or
into
out
push
int3
and
sub
test
add
je
int
dec
mov
popf
cmpsb
cld
cmpsb
cmp
jns
fisttps
mov
mov
arpl
pop
lods
call
ret
cmc
subb
ret
test
push
push
lret
mov
push
mov
add
add
cwtl
mov
iret
push
mov
loopne
pop
into
dec
cmp
loop
jmp
imul
mov
ret
cmp
test
adc
adc
aam
daa
mov
dec
mov
push
imul
cs
inc
pop
push
popa
sub
xor
bound
sub
scas
cmp
pop
ljmp
cmp
sbb
aaa
in
rcll
and
repnz
jl
mov
pop
rcrb
xchg
mov
xchg
test
cmpsl
push
push
cmp
mov
xchg
test
xlat
fs
pop
jmp
mov
mov
inc
xchg
push
jnp
mov
inc
pop
int3
imul
test
inc
cmpsb
shrl
mov
push
mov
mov
cmc
xor
jge
mov
adcl
jo
addr16
popf
sbb
clc
xchg
sbbl
xchg
arpl
dec
dec
das
dec
inc
fidivs
xchg
repnz
push
fimuls
mov
and
shll
popf
hlt
stos
inc
add
dec
cmp
popa
cmp
jmp
adc
data16
scas
pop
mov
pop
into
aad
shl
lock
sub
push
mov
out
in
cltd
jl
adc
xchg
and
sbb
pop
add
sub
mov
dec
fiaddl
pusha
push
imul
jb
push
lret
jne
or
stc
sub
ret
or
sarb
pop
pop
add
push
pop
pushf
inc
cld
mov
sub
movsl
imul
out
xchg
mov
adc
pop
xor
add
pop
fcompl
sub
hlt
icebp
pop
in
loopne
mov
mov
xchg
pop
or
cmp
shll
inc
in
jle
adc
dec
les
mov
roll
imul
sti
lea
dec
push
inc
fdivrs
cs
movsb
fldenv
outsl
aaa
repz
out
push
mov
cmc
mov
inc
stos
jnp
mov
outsb
or
cmp
sbb
imul
inc
pop
dec
jae
test
insb
jmp
mov
in
mov
jns
fisttpl
mov
add
ret
adc
test
inc
lods
cmp
mov
cwtl
xchg
push
leave
in
pop
lock
pop
fistps
jnp
sbb
mov
mov
mov
mov
mov
call
addb
ja
mov
testl
adc
nop
adc
cmp
fsubl
call
jns
andb
pop
out
cs
sti
fcmovne
push
scas
xchg
icebp
jecxz
push
pop
mov
gs
mov
testl
data16
call
pusha
add
lods
mov
inc
sub
inc
dec
imull
inc
inc
xor
addr16
addr16
lret
std
cmp
ficompl
or
sahf
int3
sarl
sbb
and
sarl
push
cmp
pop
adc
cmp
cmpsb
inc
dec
mov
adc
fcompp
into
dec
lea
jae
fiaddl
adc
ret
jp
aaa
mov
xchg
adc
es
mov
cmp
push
sub
sbb
mov
push
jns
adc
imul
icebp
dec
xor
xchg
into
or
es
test
out
jbe
test
popa
xor
dec
push
jle
dec
inc
icebp
jg
lcall
add
hlt
mov
ret
imul
incl
fbstp
mov
roll
pop
imul
outsb
push
pop
adc
xchg
add
data16
add
mov
int3
testl
mov
insb
lcall
sbb
xor
test
testb
dec
jle
fisubrs
hlt
mov
movsb
in
ss
sarb
aaa
inc
and
and
mov
pop
pop
adc
dec
jl
lods
shrb
xchg
xor
das
test
loope
jbe
call
adc
sbb
jo
adc
xchg
xchg
subb
or
mov
add
dec
aad
push
outsl
pushf
and
add
jp
mov
in
fdivrs
adc
cmp
enter
leave
gs
sbb
add
adc
lods
mov
js
fwait
sbbl
ss
loope
pop
cwtl
idivb
dec
ljmp
imul
push
in
cmp
xchg
inc
orb
scas
and
lahf
lret
lods
xor
push
popf
test
jnp
cmpsl
scas
jo
aas
lods
popf
nop
cmp
mov
xor
add
orb
cmp
aam
aas
dec
xchg
jns
mov
loope
sub
sbb
push
adc
mov
sbb
lret
jno
es
xor
adc
popa
in
push
cmp
mov
push
mov
push
adc
sub
rcll
mov
sbb
js
inc
mov
xor
push
xor
ds
inc
aas
dec
push
lahf
jg
push
and
rcrb
jns
mov
cmpsb
lret
inc
jmp
stos
and
adc
jae
cmpsb
insl
sub
inc
nop
fistl
xlat
ljmp
jns
sbb
push
adc
sbb
fs
and
lea
stc
out
clc
push
xor
jb
mov
shrl
inc
push
adc
sub
sbb
in
pop
dec
dec
js
mov
cld
jns
and
sub
pushf
mov
aas
mov
arpl
inc
pop
xor
in
mov
int3
or
clc
jno
ret
mov
push
ret
daa
and
adc
mov
xchg
aad
ret
fsubl
dec
dec
mov
jge
ret
ljmp
xchg
pop
mov
shr
sbb
sbb
std
dec
jo
imul
xchg
mov
in
aad
sub
popf
pop
mov
add
lret
jae
jle
jbe
jb
jae
xchg
cmpsb
jl
mov
push
jns
out
mov
in
sbb
sti
stos
out
inc
pop
imul
mov
test
test
jmp
movsl
xchg
mov
lret
fnstcw
sub
repnz
dec
or
cmp
inc
dec
repz
add
in
rorl
je
dec
dec
jecxz
and
xor
popfw
pop
mov
inc
and
ss
int
sub
fwait
jns
jmp
mov
je
out
pop
pop
push
shl
arpl
ss
jno
lea
insb
cwtl
jmp
push
shll
mov
lahf
frstor
jbe
mov
sub
push
scas
adc
xchg
sbb
in
movsl
stc
scas
cmpsl
loopne
pushl
in
jl
cmp
xchg
movsb
pop
inc
ljmp
ret
scas
aaa
fdivrs
mov
cmpsb
xchg
subb
shlb
inc
cld
sub
gs
inc
in
mov
inc
sub
sub
jge
xchg
cli
mov
aad
push
int3
jne
xchg
cld
xor
icebp
add
jg
cmp
jg
dec
lret
insb
dec
dec
push
pop
mov
repnz
sub
es
or
out
adc
imul
fs
push
fwait
cltd
fdivrs
es
jne
mov
xchg
xchg
mov
add
out
push
jge
xor
jbe
notl
addr16
pushf
out
mov
ds
mov
fiaddl
repnz
movsb
fstl
fwait
push
push
das
shll
sbb
ds
gs
in
iret
lock
int3
in
ljmp
call
or
push
or
cmp
pop
fsubrl
jmp
or
ret
mov
pop
enter
mov
adc
aas
call
bound
call
cs
ljmp
cld
jb
pop
sub
mov
jnp
jp
jno
roll
scas
jmp
xchg
pop
adc
shl
movsb
inc
loope
sub
pop
addr16
pushf
ss
cwtl
aad
gs
nop
imul
lods
push
js
jno
ds
out
push
scas
pop
pop
xor
into
loope
cmp
add
push
movsl
push
daa
mov
push
add
and
add
jo
xor
mov
and
daa
jp
outsb
dec
xchg
lock
jbe
mov
stc
xor
into
cs
or
mov
cmpsl
rolb
out
mov
movsb
cli
or
jbe
jb
pushl
call
pop
cmpsb
jg
js
orb
lods
mov
pop
or
pop
andl
je
or
lcall
int3
sbb
std
movsl
insl
data16
mov
ljmp
hlt
mov
mov
mov
cmp
xor
out
out
mov
xchg
and
rcr
mov
pop
cmp
aaa
js
pop
pop
adc
orl
mov
mov
fs
pop
push
std
and
inc
imul
fucomi
stos
call
lret
inc
sub
adc
ss
lods
adc
pop
add
mov
cmc
mov
insl
inc
and
dec
fcmove
scas
mov
add
adc
daa
inc
dec
inc
test
test
sub
rorl
push
jo
mov
cmpsl
cmp
pop
pop
popl
jp
loop
das
push
and
add
mov
subb
jb
or
xchg
cld
shlb
fsts
and
adc
aad
xor
lcall
test
scas
inc
pusha
cld
push
mov
mov
fisubrl
fidivl
xchg
movsb
cmp
lea
sub
dec
push
test
dec
stos
sub
pop
add
fwait
push
pushf
jp
fadd
pop
mov
pop
sbb
sbb
push
jge
xor
test
push
fcmovnbe
add
fwait
test
pop
add
lahf
mov
mov
jo
sub
sbbw
fisttpll
enter
cs
mov
cmp
dec
mov
dec
or
jge
jge
pushf
push
sub
pop
push
jno
fwait
mov
pop
dec
test
movsl
cwtl
dec
lret
dec
jmp
int3
and
inc
push
xor
icebp
cmovne
lret
fisttps
jns
lret
and
push
pop
and
mov
test
stc
and
mov
scas
mov
jl
or
push
push
iret
addr16
pop
and
test
shr
inc
cmp
popf
mov
fistps
adc
push
lea
fmull
repz
sar
shr
xchg
loopne
adc
cmp
fcompl
stos
jl
fistpl
jp
nop
push
stc
and
test
inc
push
sbb
cmp
outsl
loop
jne
mov
xor
fisubrl
dec
xor
add
dec
lcall
pushf
push
and
or
mov
and
sub
sbb
sbb
lods
pop
cmpsl
pop
mov
mov
std
adc
ret
pushl
pop
jmp
inc
lods
jge
lea
add
mov
stc
ficompl
aas
mov
daa
xor
orl
outsl
mull
int3
lds
pop
mov
mov
stc
push
mov
cld
rep
fwait
xchg
mov
mov
lock
mov
lret
xor
cld
jge
add
xor
push
dec
and
mov
stos
data16
sbb
push
add
mov
xchg
add
adc
push
mov
jp
xlat
lods
add
notb
xor
lret
pop
sbb
test
jbe
push
insl
xchg
or
std
xorl
cs
fistpl
pop
or
mov
jae
out
mov
xchg
pop
andl
lret
adc
cmpsl
xor
push
push
mov
stos
into
mov
fdivrl
pmaxsw
scas
repnz
outsb
je
mov
jp
fldenv
mov
sub
loopne
and
or
and
push
fs
arpl
dec
push
stc
int3
lahf
cs
mov
cmp
test
pop
cmpsb
mov
mov
push
jne
push
imul
xor
cs
xchg
mov
mov
stos
lock
dec
adc
sbb
mov
fs
in
ficoms
inc
pushf
cmpsb
jle
or
adc
pop
cmc
jns
std
fcos
push
out
fimuls
pusha
mov
fmull
dec
aam
adc
outsb
push
push
jle
push
dec
fdivl
into
test
jecxz
jp
fmull
jge
push
test
jo
jge
push
lods
icebp
dec
test
daa
je
insl
daa
inc
inc
or
xchg
push
jg
cmpsl
jecxz
testl
fwait
xchg
scas
adc
into
xorl
stos
add
les
dec
dec
nop
and
ret
mov
mov
out
in
pop
pop
and
pop
and
and
rol
sub
pushf
sub
fmull
pop
sbb
xchg
fsubl
les
sub
sbb
add
jecxz
inc
pop
enter
insb
adc
pop
xchg
sti
mov
cmpsb
or
int3
add
stos
loop
icebp
icebp
push
pop
dec
jnp
aaa
ret
repnz
pop
mov
in
xchg
sub
outsb
xchg
lahf
lret
into
xor
aad
add
jle
push
movsb
shlb
push
bound
add
in
pushf
sbb
inc
xchg
in
xor
add
addb
scas
push
mov
sbb
fcomps
or
xchg
mov
dec
xchg
lock
int
cmpsl
outsl
jg
inc
push
xlat
leave
or
adc
pushf
out
inc
fildll
dec
stc
ror
add
sbb
push
nop
xor
mov
mov
repnz
mov
push
jne
sub
sub
adc
or
cmc
add
mov
mov
stos
add
pop
and
es
mov
mov
out
pop
add
loopne
hlt
jae
dec
add
ljmp
jmp
lock
sbb
push
js
mov
cmp
pushf
ror
sub
xlat
mov
sub
aad
push
cmp
test
and
jo
std
mov
jmp
pop
or
cmp
in
cwtl
dec
hlt
xchg
sub
sbb
xchg
ret
or
xor
insb
lds
lds
test
push
ss
mov
sub
negb
mov
jno
adc
push
and
sub
fsubrl
in
or
pop
inc
xchg
sub
sbb
add
mov
pop
bound
gs
ret
int3
lahf
xorb
sub
inc
sbb
lods
scas
mov
dec
lcall
test
push
mov
mov
popf
and
mov
pop
add
scas
aas
jmp
jbe
and
push
inc
les
lds
xchg
add
and
enter
adc
fsub
inc
inc
cmp
lret
dec
lock
ja
out
mov
dec
mov
mov
test
push
jmp
popa
xor
sbb
in
mov
push
push
sar
xor
push
xchg
xchg
mov
jmp
mov
xor
jae
jecxz
fidivs
enter
repnz
pop
xor
xchg
ds
xrelease
jp
cmp
filds
fwait
ss
push
loop
adc
dec
add
clc
pop
adc
insb
addl
cmp
inc
ljmp
adc
add
jo
mov
mov
jecxz
mov
std
mov
loopne
sub
jp
sub
add
sahf
in
xchg
add
pop
sbb
xor
inc
xor
jle
enter
adc
int3
mov
jl
fsubr
pop
icebp
lret
push
scas
mov
pop
inc
add
ret
stc
jns
mov
repnz
pop
jmp
orb
cmp
adc
popa
dec
or
cwtl
sub
xchg
addr16
pop
fstpl
pushf
enter
stos
fists
jns
mov
or
mov
xor
fs
cmp
and
inc
adc
add
xor
cld
nop
arpl
xchg
push
pushf
jp
xchg
dec
cmp
sar
mov
adc
das
mov
hlt
sti
and
fadd
std
hlt
or
subl
inc
sbbb
mov
mov
inc
xor
mov
add
mov
inc
push
and
lds
jb
jnp
cmp
lods
pop
xor
rorl
popf
clc
cltd
cmp
out
ret
mov
fdivl
fs
fisubrl
test
stos
dec
sbb
call
push
xor
test
in
push
call
cld
popf
aaa
int3
xchg
mov
or
scas
fstpl
imul
inc
into
mov
inc
mov
loope
lret
mov
in
adc
mov
loop
fdivs
mov
lods
sbb
fwait
aam
je
jo
fdivrs
lds
cwtl
mov
movl
shrb
std
movsl
or
inc
data16
cmp
fistpl
test
ja
or
adc
cmpsb
xchg
inc
fnsave
xchg
into
faddp
pop
and
jne
inc
ljmp
addr16
dec
cmp
pop
lcall
adc
les
cmpsl
cmpsb
mov
sbb
pop
cmp
aad
add
aaa
push
add
xchg
inc
pop
add
mov
ds
sahf
mov
adc
mov
mov
jmp
fistps
ja
or
push
scas
cmp
jnp
movsl
cmpsl
aam
ja
fcmovu
xchg
lret
movsl
mov
xlat
adc
aas
xor
ret
jl
mov
outsb
dec
outsl
mov
inc
sarb
sbb
mov
mov
sbb
inc
xchg
lahf
and
mov
ds
out
push
scas
jns
cmp
mov
add
and
imul
pop
out
jae
lds
push
out
xchg
and
jae
les
and
push
sbb
cmp
fisubl
movsl
gs
aas
inc
es
sub
inc
pop
xchg
dec
xor
inc
insl
mov
mov
mov
push
arpl
out
mov
stos
push
push
cwtl
jle
lret
pop
xor
and
jp
inc
jb
adc
or
sbb
xor
add
loopne
adc
jl
test
or
fnstsw
js
repz
jae
leave
outsl
xorb
cli
add
pop
add
push
shrb
xor
push
add
pop
inc
push
sahf
js
ljmp
cmp
adc
and
pop
mov
scas
sub
pop
dec
sahf
jp
popf
cmp
sbb
mov
pop
arpl
mov
je
inc
dec
add
and
pop
push
test
xor
leave
push
cmp
jne,pn
push
xchg
jmp
iret
jnp
push
cmp
mov
xchg
rcll
mov
int
loopne
sub
stos
xchg
std
or
rolb
fsubs
dec
dec
jmp
std
aas
adcb
sbb
rorl
inc
stc
sub
ret
jecxz
je
jl
movsb
aaa
or
cwtl
cltd
xchg
popa
mov
sbb
jns
or
and
xor
pushf
mov
cmp
bound
sbb
or
sub
aas
or
xor
orb
test
arpl
dec
arpl
in
adc
faddp
lock
gs
xor
cmp
pop
push
js
lahf
dec
das
sbb
cwtl
ss
movsb
push
out
jg
leave
dec
or
dec
push
xchg
xchg
push
mov
cmpsb
pop
fcomps
in
mov
jge
sbb
inc
sub
and
out
sbb
mov
inc
idiv
lea
mov
jbe
jl
jl
mov
rcrl
inc
sahf
push
xorb
loope
iret
xor
and
push
in
insl
cmp
and
mov
gs
push
push
jmp
xchg
scas
lods
and
mov
push
and
mov
sub
sti
leave
dec
popw
add
cmc
mov
test
outsl
dec
das
inc
aad
cmp
pop
into
outsb
aas
pushl
jmp
and
jmp
xchg
mov
daa
jb
pop
xor
addr16
sub
push
adc
dec
fs
add
cli
and
dec
and
jae
xchg
jp
stos
leave
xor
pop
xchg
xchg
into
sub
jbe
xchg
dec
pop
ljmp
mov
cmp
pop
mov
xchg
rcl
out
push
push
popa
jle
in
cli
sub
mov
sti
in
dec
lods
cmpsb
xor
fildl
lret
mov
in
push
adc
lcall
sahf
pop
dec
pop
lods
adc
sbbl
or
mov
shrb
mov
cld
shl
fnsave
pusha
mov
mov
loopne
cld
mov
xor
aas
loopne
adc
xor
bound
xor
jb
push
scas
repz
stos
mov
mov
add
cltd
leave
imul
shrl
out
or
js
xchg
into
xchg
pusha
sti
and
stos
dec
enter
mov
nop
cltd
mov
rolb
inc
orb
clc
mov
int3
jne
or
test
or
xor
mov
fsubr
scas
sbb
add
cli
ret
out
mov
sub
das
push
sti
repz
cs
dec
aad
sbb
push
das
inc
call
push
insb
les
test
dec
lret
mov
movsb
mov
sbb
xlat
sub
mov
fstpl
mov
mov
rorb
xor
bound
cwtl
cmp
push
out
fistpll
xor
mov
pop
roll
je
test
xor
add
bound
cmp
add
cmc
iret
es
in
pop
xchg
push
mov
jbe
notb
pop
lcall
imul
fnstcw
and
or
sbb
in
int
cmp
dec
imul
pop
cmpsl
test
push
or
jnp
fwait
into
mov
test
xchg
icebp
sub
cmp
push
xorb
mov
daa
inc
lahf
add
sub
dec
mov
lds
inc
push
add
popf
fnstsw
sbb
push
outsb
xchg
pop
shlb
in
pop
mov
fwait
lea
mov
daa
jne
repnz
ljmp
cltd
dec
das
fstps
aaa
push
jle
jmp
les
and
test
add
push
cwtl
out
pop
or
fsts
and
cmp
pop
lret
xchg
cmc
push
add
pop
cld
jno
mov
jb
sub
lcall
mov
hlt
pop
fwait
and
push
sbb
ja
insl
movsb
add
mov
in
es
ss
pop
inc
repz
mov
pop
test
sbb
and
jmp
ret
push
rorb
aad
pop
out
push
sbb
jl
subl
lods
mov
aaa
test
sub
jl
cwtl
push
in
xchg
in
out
cltd
vunpckhpd
push
sbb
cwtl
pop
loop
add
movb
push
and
pop
stos
and
inc
adc
addr16
push
dec
sarl
pop
fs
inc
loop
pushf
mov
xor
test
xor
lret
mul
pop
repz
lods
xchg
inc
dec
xchg
adc
push
dec
push
fists
inc
popf
imul
or
mov
pusha
movsb
mov
inc
adc
dec
cld
andl
insl
and
popa
fisttpll
mov
dec
jae
pop
enter
mov
dec
imul
xor
outsl
mov
js
rorb
adc
jnp
cmc
cmpsb
repz
sbb
dec
pop
push
push
add
xor
xchg
popf
insl
jg
aaa
repz
mov
adc
or
sbb
mov
xor
jnp
xchg
ja
cmc
jl
xchg
xchg
js
pusha
inc
loope
jns
dec
sbb
dec
fcoms
push
lock
insb
loop
mov
sbb
push
cmp
es
pushf
cmp
dec
ljmp
pop
inc
cli
push
lret
and
jecxz
mov
pop
jl
hlt
enter
dec
mov
aad
xchg
loopne
cwtl
push
and
mov
cmc
jbe
fdivrs
xchg
in
xor
fistps
popa
mov
leave
mov
mov
or
push
jb
ds
add
emms
cmp
cmp
mov
sub
or
rcrl
pop
pop
out
lret
adc
push
inc
notb
mov
into
jnp
pop
dec
xchg
mov
and
fldenv
das
jl
pushf
popl
lds
mov
call
mov
mov
je
nop
cli
scas
dec
push
pop
std
push
and
ljmp
adc
hlt
into
xchg
push
sahf
hlt
cmp
xchg
mov
in
fdivl
pop
xchg
sub
dec
pop
aas
jp
jnp
jge
div
pop
into
or
cli
xchg
scas
aam
mov
ja
sbb
sbb
xor
and
cmp
jle
out
ret
jb
imul
lds
xchg
in
xchg
fisubl
das
icebp
pushf
jo
rcr
pushf
or
push
push
jne
lds
ljmp
jbe
subb
mov
rcl
and
ja
cmp
ja
adc
sub
ret
add
mov
loopne
insb
ss
add
xchg
mov
cmp
jg
adc
sub
sbb
imul
sarb
push
iret
outsb
aad
hlt
test
jecxz
fwait
mov
cld
aaa
adc
nop
sub
fcmovbe
lock
fnstenv
lods
sbb
dec
pop
xchg
andl
ss
inc
lahf
scas
and
jne
mov
inc
fildl
stos
push
ret
xor
sbb
dec
mov
mov
xor
xchg
and
lock
clc
iret
stos
stos
leave
imul
jle
lea
ljmp
fdivrl
xor
mov
mov
cltd
jnp
jge
addr16
int3
mov
sti
data16
fdivrl
pop
dec
fistps
fisubl
rcrb
pop
dec
xor
cmc
dec
repnz
push
sahf
jo
mov
pop
idivl
sbb
sbb
mov
mov
jno
jmp
pop
push
mov
imul
cmc
add
xlat
mov
test
xor
ret
lret
cmp
leave
cmc
mov
in
dec
add
lods
jg
add
adc
mov
xchg
cmpsb
jg
pop
xchg
sub
ss
or
rorl
mov
lret
in
mov
adc
popf
jns
cmp
xor
repnz
faddp
in
or
push
push
lods
lcall
stos
stc
mov
movsl
sub
jnp
popf
stos
mov
jp
xchg
pop
stos
xchg
fdivs
cmpsl
mov
popf
aam
cmp
xor
test
lods
sub
stos
mov
sbb
es
adc
mov
or
sar
xorl
arpl
sbb
je
pop
stc
insb
nop
xchg
mov
and
addr16
ficoms
push
xchg
jo
jbe
or
scas
outsb
repnz
js
mov
cmp
aas
xchg
add
lahf
pop
push
mov
xlat
pop
pop
addr16
lds
mov
mov
xlat
aas
cmp
cmp
out
aam
jge
subl
cmp
not
push
sub
cs
loopne
dec
fldln2
mov
scas
cmp
jbe
adc
adcl
arpl
mov
lock
pop
or
aad
adc
mov
lods
lahf
pop
cmpsl
jae
inc
push
ror
mov
inc
and
in
enter
stos
les
imul
lods
adc
aas
jecxz
rcrl
cmc
xor
hlt
dec
pop
inc
cmpsb
xchg
incb
jg
mov
rolb
mov
inc
fcmovbe
pop
sbb
inc
push
test
aaa
out
add
mov
fnsave
inc
movsb
adc
jecxz
push
push
shufps
inc
sbb
notl
jmp
xchg
mov
gs
clc
je,pt
nop
mov
inc
pushf
loop
adcb
dec
jmp
xor
outsl
shrb
lea
popf
sub
leave
sarb
pop
insl
xchg
shrl
sub
mov
mov
push
inc
xchg
pop
shrb
int3
sti
sbb
jmp
cs
sub
int3
mov
xchg
mov
sti
sub
push
subl
cwtl
test
mov
pop
lahf
adc
xor
out
mov
ret
or
sbb
inc
pop
cmp
xchg
mov
out
sti
push
loope
sub
fldcw
mov
jae
xchg
lods
add
or
add
addr16
dec
push
out
testb
addb
mov
push
or
add
sub
addl
shll
outsl
pop
mov
out
push
mov
mov
es
sub
jnp
mov
xor
push
movsb
pop
lahf
out
push
lcall
xor
aaa
in
push
jbe
ret
lock
je
xor
add
loop
daa
mov
and
sub
inc
cmp
cmc
push
sahf
cmp
addb
mov
pop
mulb
dec
mov
mov
xor
mov
imul
out
pop
test
xor
adc
jmp
ljmp
or
scas
mov
mov
push
notl
add
das
cmp
adc
pop
adc
pusha
in
out
lds
mov
insb
push
xchg
lret
movsb
dec
pop
dec
mov
mov
add
push
mov
loopne
push
or
aaa
fidivs
add
and
jno
ja
push
imul
ljmp
sub
push
sub
mov
divl
dec
mov
lock
movsl
repnz
jb
push
test
pop
xchg
jmp
das
dec
mov
inc
outsb
pop
cltd
rorb
adc
roll
lahf
jmp
adc
data16
sarb
lret
push
test
loope
push
mov
stos
in
pop
mov
mov
sub
dec
and
aad
xlat
scas
insb
rol
and
push
xchg
xor
jg
and
int
and
mov
xor
cmp
and
or
push
stc
lods
jne
mulb
dec
xchg
mov
or
pop
sbb
jecxz
inc
scas
add
lret
xor
mov
daa
stos
or
mov
movsb
xor
sub
mov
mov
test
loopne
or
xor
scas
scas
daa
push
lahf
mov
push
adc
enter
xchg
cmp
movntps
insl
adc
jae
in
fadds
inc
mov
push
pusha
out
push
ljmp
mov
sarb
test
sti
xchg
pusha
pop
jg
sub
ja
out
insl
cmp
sub
test
std
inc
movl
pop
push
cmp
mov
decl
in
and
je
bound
rclb
dec
mov
repz
roll
sbb
push
jnp
imul
mov
fwait
gs
and
movsb
out
lret
cmpsl
sti
and
scas
jne
and
cs
dec
xchg
pop
aam
pop
xchg
pop
iret
loop
fwait
adc
inc
inc
loopne
inc
cmpsb
mov
or
dec
adc
xor
popf
mov
adc
sahf
mov
mov
push
test
jnp
shll
cmp
mov
dec
daa
mov
sub
dec
pop
jg
sbb
in
cwtl
lcall
push
pop
lret
xchg
cmc
mov
popa
mov
rdpmc
xchg
mov
out
call
sbb
movsl
mov
lret
popa
sahf
adc
dec
inc
jle
push
imul
jne
mov
xchg
xor
mov
rcrb
mov
xor
jno
icebp
dec
leave
mov
sbbb
push
mov
call
xchg
xchg
rsm
clc
inc
mov
mov
inc
push
clc
inc
inc
dec
in
popa
shll
lods
js
fdivr
ret
data16
push
mov
inc
hlt
push
pop
repz
pusha
add
sbb
ret
popf
notb
pop
cmpsl
int3
aam
ficomps
les
xchg
test
nop
jg
insl
repz
or
mov
cs
mov
scas
mov
fcmovu
or
xchg
push
dec
stos
lock
in
jnp
jns
inc
ljmp
call
push
mov
mov
xor
shrl
pop
sarl
fwait
cli
xchg
loop
sahf
adc
xor
cwtl
fisubs
sahf
popa
int3
dec
cmp
fs
mov
test
scas
cmp
sub
push
add
mov
jge
pop
movsb
test
inc
test
adc
lcall
push
les
sub
ds
mov
mov
inc
popf
into
lret
fbld
cmp
add
add
in
loop
lahf
nop
jecxz
pushf
push
push
mov
pop
add
in
ret
leave
push
push
xor
out
les
sbb
push
push
push
lret
cwtl
repnz
sub
cwtl
ss
jno
cmc
jg
xchg
fidivrl
bnd
repnz
inc
das
fsubl
xlat
pop
std
out
addb
xor
mov
xor
aaa
pop
add
dec
pop
or
jl
loop
mov
xor
test
outsl
dec
jne
sub
enter
mov
fs
je
sbb
cmc
cmp
addr16
addl
fs
and
xchg
sbb
fimuls
and
rol
pop
adcb
icebp
imull
mov
adc
loopne
ficoml
ja
lahf
in
adc
aaa
or
pop
cmp
and
mov
mov
jp
loopne
jb
out
fstpt
out
xchg
hlt
enter
xchg
mov
inc
cmp
and
ret
clc
inc
mov
dec
inc
add
lods
cmp
jmp
rolb
imul
lods
movb
pop
out
lcall
aaa
xor
adc
pop
pop
cld
int3
xor
cld
inc
loopne
inc
arpl
pop
loopne
int3
add
sbb
movsb
mov
loop
mov
negl
mov
test
mov
xor
add
insb
fs
dec
dec
inc
test
xor
pop
xchg
adcl
sbb
leave
cs
js
jp
push
inc
and
scas
and
popf
rorb
fidivs
inc
lods
jmp
mov
jb
lahf
mov
xchg
adc
cld
stc
imul
stos
mov
je
pop
mov
daa
addr16
jmp
xlat
ds
xchg
lcall
dec
cmp
pusha
dec
sbb
aaa
pop
pop
mov
pop
and
jl
sub
ret
push
adc
jno
or
shlb
insb
dec
jecxz
test
dec
sub
dec
cmp
int
jg
clc
iret
push
jmp
scas
scas
fldl
sti
mov
fistl
cld
adc
out
adc
mov
sbb
and
push
lds
pop
fmull
stos
mov
and
in
mov
adc
movsb
cmp
jo
outsl
adc
mov
aas
pushf
outsb
repnz
rcrl
outsl
lods
push
ss
xchg
aam
mov
sub
ficoms
sbb
jo
push
xchg
cmpsb
xchg
pushf
pop
xchg
pop
ljmp
jmp
mov
enter
cmpsl
push
and
out
mov
mov
test
cmpl
xchg
push
rorb
ret
jl
sub
push
das
in
cs
pop
fisttpl
push
lods
mov
stc
popa
nop
roll
sahf
fildll
ret
repnz
cmp
dec
push
xor
xchg
or
pop
mov
inc
mov
and
mov
movsl
inc
push
jecxz
dec
insl
sbbl
inc
roll
xchg
mov
inc
add
sub
dec
push
inc
lock
shr
scas
xchg
aam
js
aad
mov
scas
mov
inc
mov
jns
cld
mov
mov
aas
in
fs
in
sub
mov
sbb
push
cmp
out
mov
shr
cmpsb
xor
push
dec
mov
jl
das
inc
push
test
mov
xchg
imul
sub
nop
ljmp
sbb
lock
lret
nop
imul
sti
mov
icebp
insb
cwtl
rcrb
imul
scas
popa
sub
lds
lods
xchg
bound
pusha
mov
mov
xchg
insl
pop
sbb
ds
mov
std
dec
inc
test
popf
xchg
enter
aad
jo
es
xchg
gs
out
or
pop
jnp
loopne
in
sub
jbe
movl
and
out
jbe
std
xor
mov
inc
xor
push
sub
insl
adc
jnp
stc
xor
sbb
mov
std
pop
insb
sbb
aaa
jmp
clc
stc
sub
movsl
push
popf
mov
inc
jb
cmp
jbe
push
sbb
or
mov
push
mov
int3
outsl
xor
dec
and
rcr
loope
mov
xlat
cmpsb
mov
dec
mov
test
hlt
mov
sti
je
push
push
aam
in
inc
pop
loope
fidivrs
cmp
out
or
mov
fwait
mov
mov
dec
and
push
adc
mov
fimuls
push
cld
pop
push
ret
rolb
out
flds
inc
fisubl
leave
lcall
sub
shrb
faddp
or
std
jae
scas
mov
iret
xchg
mov
xor
sbb
and
stos
test
aaa
rorl
stos
negl
arpl
sub
jbe
lret
push
out
nop
dec
mov
mov
out
enter
frstpm(287
dec
ret
cmp
pop
dec
lea
inc
aad
cmp
scas
push
test
lcall
sbb
add
into
add
add
mov
jp
scas
cmpsl
mov
jno
xchg
mov
cltd
clc
cmp
rolb
out
cld
dec
inc
xchg
test
nop
inc
repz
das
lahf
push
push
pop
loop
lcall
int
std
fisttps
mov
aaa
jo
fildll
in
dec
icebp
shrl
js
dec
movsb
punpckhdq
mov
jge
xor
sub
test
test
dec
mov
mov
negb
popf
sub
cs
shrb
iret
mov
ret
mov
aad
push
jl
or
push
es
imul
cltd
adc
imul
mov
or
mov
inc
scas
nop
stos
in
xchg
sbb
adc
test
lds
or
das
sarl
sbb
push
dec
aaa
cld
gs
insb
mov
lods
arpl
andl
mov
xor
call
aad
xor
and
sub
mov
imul
xchg
addr16
xchg
rorl
push
mov
cmp
mov
fwait
sbb
insl
mov
pop
nop
sar
test
imul
mov
lret
mov
out
into
push
cmp
mov
nop
pop
mov
cmp
test
es
dec
movsl
jl
daa
arpl
mov
push
xchg
adc
adc
aaa
sub
or
roll
push
test
jge
cmp
mov
iret
cmpsl
pop
and
adc
pop
adc
dec
cmpsl
xor
negb
xlat
inc
push
mov
scas
push
cltd
jae
rorb
loope
scas
je,pt
jbe
pop
push
xchg
mov
dec
lock
fidivrs
popa
ljmp
mov
lcall
and
les
xor
cmp
fstpl
mov
fnstenv
int3
loope
scas
or
or
adc
not
leave
mov
adc
jae
mov
add
sti
jg
mov
cmpb
call
xor
pop
pop
pop
sbb
test
and
leave
mov
push
add
pop
mov
adc
es
dec
sub
push
ret
aad
jns
pop
data16
push
add
adc
je
aad
mov
iret
add
icebp
dec
jo
pop
jge
or
jae
sahf
out
mov
mov
or
xor
cwtl
lods
jo
mov
pusha
mov
and
add
push
or
sbb
enter
xorb
mov
xchg
test
jno
lcall
cmc
dec
mov
jmp
movsb
and
xchg
pop
sub
pop
cmp
mov
inc
jnp
sets
jmp
xchg
push
jb
mov
repz
cmc
mov
dec
ror
pop
fiadds
dec
rcl
fdiv
dec
lea
xor
mov
lcall
cld
add
mov
fisubrl
gs
xchg
add
outsb
shll
adc
lock
mov
add
push
lds
or
dec
adc
clc
and
mov
mov
dec
dec
sub
adc
sbb
inc
clc
lock
jne
or
sbb
mov
into
xor
dec
jge
packuswb
movsl
imul
in
adc
mov
pop
mov
sub
push
cvtps2pd
in
faddl
mov
in
mov
rorb
dec
idiv
push
sbb
arpl
xchg
js
enter
sub
jp
jne
inc
jno
dec
jne
xchg
push
sub
in
movl
out
sub
pop
loopne
push
enter
fsubr
ds
xchg
int3
inc
push
emms
ror
dec
test
mov
dec
mov
or
mov
jne
lock
push
scas
push
push
repz
out
sub
cli
les
xchg
sarl
jg
mov
enter
dec
mov
sbb
mov
test
mov
rol
lahf
xchg
jne
leave
and
aas
mov
jno
jns
mov
jle
sbb
fidivrs
inc
sbb
lcall
mov
enter
int3
ret
jp
mov
mov
mov
ds
jns
pop
movsl
int3
fsubs
cmp
push
push
mov
jnp
in
leave
jnp
fnstsw
stc
inc
pusha
mov
sahf
and
sub
ljmp
xchg
mov
xchg
jg
rcr
mov
leave
jl
pusha
insl
fsubl
mov
arpl
mov
fucom
add
cmc
dec
xchg
inc
shl
add
and
sbb
dec
jo
jne
in
cwtl
es
fs
rorb
pop
mov
mov
dec
jl
dec
frstor
xor
sub
loopne
dec
fiaddl
xchg
mov
sub
sub
sub
dec
xor
add
xchg
sub
push
addb
add
inc
mov
pop
iret
stos
cli
flds
test
cmp
add
lods
sbb
jno
sbb
in
clc
int
xor
push
mov
int3
nop
cmp
outsb
adc
stos
mov
outsb
mov
add
rcll
mov
fwait
inc
mov
pop
jle
sbb
rol
les
adc
adc
fcmovnu
dec
cwtl
imul
lock
add
add
pop
mov
mov
scas
or
scas
xchg
lcall
faddp
aas
scas
inc
cwtl
dec
sbb
cltd
xor
pushl
subl
push
xchg
mov
out
mov
mov
mov
test
adc
into
sub
jns
inc
jg
js
int
add
es
ds
mov
and
movsl
out
xchg
scas
aam
mov
push
mov
popf
data16
dec
scas
dec
sti
dec
cmpsb
adc
pusha
lods
fsubrp
ret
and
in
mov
add
inc
adc
dec
out
cld
mov
ret
inc
lds
add
push
pop
pop
cmpsl
sub
in
outsb
dec
add
cli
test
in
xchg
scas
test
scas
arpl
or
xlat
arpl
jo
mov
or
lods
data16
xor
test
fisubl
xor
insl
mov
jne
jg
or
adc
mov
nop
cmp
in
rol
divb
adc
das
call
and
xlat
adc
xor
or
js
std
cs
inc
cmp
sub
pop
sub
dec
dec
cmp
je
xchg
inc
mov
repz
aaa
mov
add
rol
fwait
xlat
add
fwait
arpl
orb
push
inc
cmp
ficomps
popf
add
xchg
lods
rol
sahf
mov
mov
inc
jae
stos
jmp
adc
sbb
fmull
ss
jp
mov
int3
push
sub
pushf
sbb
aas
mov
sub
add
or
imul
sbb
add
mov
cli
mov
outsl
inc
cs
ret
fists
xor
adc
mov
insl
orb
add
mov
cmp
pop
in
int3
rcll
js
icebp
mov
fdivrs
int3
sub
pop
jp
or
mov
and
popf
rol
pop
into
sub
popf
fstps
cmp
push
test
pop
test
jge
pop
jmp
sbb
xchg
sub
aam
push
jne
xchg
iret
ljmp
push
push
add
scas
notb
aaa
sbbb
add
cmp
sbb
fisubs
mov
xchg
lock
sub
fwait
rol
outsb
ljmp
dec
mov
imul
or
dec
aad
xchg
inc
fwait
nop
xchg
mov
fldt
int
gs
pop
cld
push
sbb
in
pop
inc
gs
imul
push
mull
imul
mov
mov
cmp
push
xchg
jg
pop
mov
add
mov
outsl
cmpsb
cwtl
testb
out
imul
and
jne
sub
cmp
push
outsb
cmc
jle
xor
mov
fnstsw
mov
mov
fs
test
jmp
inc
sti
sub
add
and
mov
dec
shrl
mov
mov
lds
lcall
sbb
pop
jp
xor
stc
bound
jp
dec
je
xor
mov
push
cmp
inc
nop
popf
cmp
aad
jns
push
ja
mov
xchg
mov
fnsave
fsts
int3
sarb
addl
bnd
hlt
xchg
aad
cli
fstpt
and
orb
loope
hlt
pop
add
loopne
cmp
sbb
int3
orb
jns
push
daa
aas
push
cmc
aam
in
or
sub
mov
int
sbb
int3
stc
jl
mov
mov
jbe
aad
jne
pop
mov
sti
xchg
or
rolb
sbb
mov
das
into
cmpsb
sahf
push
hlt
fdivs
aaa
es
ret
xchg
push
mov
pusha
pop
xor
adc
cmpsb
ss
aaa
pop
sub
ljmp
cmp
mov
stc
xchg
add
aaa
add
pop
push
push
push
aaa
xchg
cmpsb
jecxz
or
repnz
or
sub
movsl
je
mov
movsl
out
or
push
pop
add
pop
call
and
inc
adc
fidivrs
lods
test
pop
sti
cwtl
adc
jne
ficomps
out
or
icebp
xor
movsl
sbb
xlat
jae
mov
std
xor
lods
mov
mov
out
dec
inc
mov
pop
inc
outsl
mov
dec
outsl
xchg
add
push
ja
sub
mov
dec
in
xor
pop
jb
inc
or
fisubrs
add
dec
daa
sbbb
sahf
lcall
mov
mov
loopne
pop
repnz
sub
sbb
push
push
push
cmpsb
mov
popf
popa
push
xor
ljmp
pusha
cwtl
inc
jecxz
inc
xor
icebp
pop
ret
arpl
add
add
jge
adc
ja
lahf
jnp
stos
sub
adc
xor
sahf
cli
insb
or
push
lods
lods
or
add
lods
aad
cmpl
sbb
mov
push
and
shlb
mov
testb
push
mov
movsl
mov
sbb
jle
loopne
movsl
test
inc
add
mov
mov
push
jge
push
in
addr16
out
pop
jmp
jp
jb
sub
inc
lock
push
push
addr16
testb
insb
into
jnp
popf
scas
jns
inc
mov
push
insb
dec
call
movsb
incl
mov
mov
jl
or
mov
flds
test
inc
xor
xor
sti
jg
or
js
cltd
lods
push
popa
xor
bnd
pop
stos
ss
out
sub
loop
mov
cs
add
fiadds
jae
cmp
mov
test
fdivp
mov
mov
jne
lahf
lahf
inc
xor
outsb
lods
and
add
bswap
sub
inc
jnp
xchg
sbb
inc
das
add
insl
pusha
jo
in
push
outsl
loopne
faddl
mov
adc
outsb
arpl
xor
mov
popf
adc
and
mov
jbe
dec
nop
mov
cmp
mov
repz
add
dec
in
adc
xchg
repnz
adc
dec
imul
loope
lea
push
xor
xchg
pushf
sbbb
cmp
push
jno
jg
jl
mov
mov
add
xchg
imul
leave
stos
aaa
addr16
movsb
mov
pushf
mov
daa
in
les
adc
push
inc
je
lret
or
icebp
mov
push
pop
cltd
cmp
mov
pop
adc
mov
gs
cld
xchg
push
push
adc
jne
inc
cwtl
xchg
sub
andb
push
outsb
mov
fstps
into
js
mulb
fwait
shrw
or
iret
inc
jb
sbb
cmc
leave
push
sti
push
out
insl
push
popa
sti
sbb
dec
jnp
testb
push
or
adc
and
test
jl
xlat
cltd
inc
rclb
out
adc
scas
scas
adc
adc
mov
call
adc
in
in
lcall
addr16
sbb
push
jmp
test
mov
jbe
inc
in
test
xchg
negl
mov
lret
int
ljmp
in
ja
lret
mov
lcall
jg
rol
mov
cmp
or
cmp
mov
xchg
sbb
fwait
add
imul
jno
mov
cmp
and
jbe
sub
popa
test
sti
out
push
and
xchg
insb
and
and
outsl
xor
push
inc
mov
mov
sbb
mov
into
sbb
int3
push
xchg
je
or
add
xchg
lds
sub
sbb
leave
lret
les
hlt
lret
and
xchg
insb
push
jb
stos
jne
insl
inc
out
sti
xor
leave
shl
or
lods
jbe
dec
sti
test
jecxz
adcb
mov
ljmp
pop
mov
int
mov
jne
leave
and
inc
fwait
lock
jns
shlb
ret
rol
leave
xor
clc
xchg
adc
xor
push
dec
xchg
push
jge
mov
addr16
adcb
movsb
mov
js
mov
push
aaa
mov
ret
jae
inc
jmp
les
je
mov
stos
jno
into
and
pop
iret
jns
pop
add
xlat
xchg
add
leave
sub
sbb
push
pop
adcl
out
push
adc
xor
ret
mov
cwtl
out
mov
dec
sub
rcll
in
add
out
xlat
cltd
push
aad
sarl
xor
int
push
inc
ja
cmc
sbb
pop
inc
test
sub
jl
lret
xor
ret
les
pusha
push
bound
sub
jns
jg
mov
or
jae
fwait
in
pop
lret
hlt
js
roll
cmp
test
dec
cmp
lds
dec
push
dec
cmpsl
loopne
sub
je
popf
push
daa
cld
mov
pop
xor
fstpl
adc
int
xchg
push
cmc
movsl
setae
and
lea
mov
dec
push
gs
mov
bound
or
mov
aaa
jle
cmc
cld
popa
cmp
ljmp
in
inc
ljmp
xchg
jl
out
mov
dec
and
je
add
out
and
xlat
scas
shlb
mov
pop
cwtl
xchg
cld
mov
pop
push
test
and
adc
call
outsl
jb
dec
lret
mov
repz
pop
pop
es
dec
xor
pop
lds
repnz
rorb
scas
les
jecxz
pop
dec
out
mov
push
pop
lods
xchg
add
push
subl
mov
out
jae
push
stos
out
lcall
xchg
addb
insb
xchg
scas
xchg
mov
xchg
test
sbb
int
lcall
mov
pop
jmp
into
popa
lret
pop
dec
loop
adc
ret
adc
mov
sar
add
es
aaa
out
push
or
mov
push
pop
mov
mov
mov
cld
cmp
sub
mov
inc
push
std
lret
rcl
movsl
pop
int
sbb
mov
xchg
pop
fwait
sbb
lock
or
xchg
sub
mov
mov
loopne
inc
scas
pushf
push
imul
cmpsb
sbbb
mov
xchg
fucom
jmp
pop
and
or
lods
inc
data16
jle
loope
add
ret
andb
push
test
scas
leave
sub
loope
jmp
data16
add
shl
dec
inc
mov
lds
lods
push
pop
loopne
data16
mov
and
inc
frstor
or
decl
pop
xor
repz
imul
pop
sub
sub
addr16
fbld
out
in
mov
shl
and
pop
dec
orl
mov
js
add
andl
cmp
xchg
sti
dec
int3
add
cmpsl
jmp
rolb
mov
xorl
ret
test
je
add
or
pop
fdivrs
dec
hlt
movsl
push
jecxz
mov
add
out
sbb
sub
ds
shl
lcall
clc
sub
adc
sti
mov
rolb
jl
in
enter
mov
cld
loope
xchg
pop
xchg
jge
mov
lret
call
add
mov
inc
cli
mov
addr16
adc
and
test
ret
pop
cmpsl
inc
stos
shll
push
sbb
sbb
push
cmp
mov
cmp
and
pop
push
cltd
or
scas
xchg
mov
daa
xchg
add
xchg
scas
ja
and
push
sbb
push
loopne
pop
sbb
push
xlat
dec
adc
in
lods
stos
lret
sub
jae
lcall
jg
aaa
dec
leave
xchg
arpl
xchg
cmpsl
or
enter
sub
mov
sti
add
cmpsb
loope
insl
mov
insb
cmp
das
aas
lea
mov
add
stos
mov
imul
add
pop
mov
mov
imul
add
add
in
dec
popa
aaa
pop
xor
fisubs
pop
and
sqrtps
outsb
fs
icebp
inc
test
sub
adc
xchg
es
fsubrl
adc
jb
addr16
sahf
icebp
fcoml
rclb
std
cmp
mov
xchg
push
stc
add
repz
ret
rcr
sbb
adc
push
nop
ds
jno
in
mov
aam
jnp
fwait
jno
pop
imul
outsb
mov
hlt
push
sbb
aaa
outsl
push
lods
cltd
and
pop
loopne
inc
test
andb
cld
adc
and
or
xchg
in
jne
mov
and
lods
adc
sub
add
in
jp
and
rorl
adc
sbb
loopne
loop
add
jmp
push
rorb
fwait
mov
dec
out
lret
in
sub
stos
sbb
push
mov
sub
inc
ret
jnp
insl
call
or
pop
lods
movsb
enter
das
xor
mov
outsl
daa
dec
leave
dec
adc
loopne
das
test
mov
add
mov
jo
rcr
mov
int3
in
fsubrl
insl
lods
test
imul
mov
js
cmc
push
xchg
xchg
push
subb
jnp
icebp
cli
inc
insb
movsb
mov
xchg
sti
sbb
aaa
ljmp
loopne
pop
jne
jno
or
push
inc
loope
es
mov
mov
cmp
add
lahf
pop
xchg
fldt
fcoms
iret
jns
fwait
out
sarb
mov
mov
xchg
jo
push
sbb
add
adc
bound
inc
mov
mov
push
inc
sbb
pop
sbb
sarb
xor
pop
call
lret
adc
inc
push
lret
xchg
scas
lock
jne
lahf
lahf
aaa
mov
dec
shlb
lret
xor
pop
notl
dec
cmp
mov
dec
loope
addl
lods
aas
push
push
dec
push
lods
cmpsl
adc
xor
rcrl
cmc
cmp
sarb
mov
sbb
push
or
stc
mov
cmp
ret
in
xlat
jp
cmp
push
bound
sub
xor
jno
aaa
push
or
dec
movsl
xor
rorl
fwait
inc
inc
push
cltd
mov
lret
inc
cmp
lret
ljmp
lods
fsub
xor
push
insl
inc
fldl
push
bound
ljmp
dec
push
clc
sbb
push
lods
outsb
gs
loop
jo
sub
push
mov
and
test
pop
fldl
popa
lds
in
inc
jae
push
push
cmp
lret
dec
iret
mov
lret
je
cmpsb
sub
jp
ja
xchg
jne
ret
imulb
sub
cmp
push
pop
jo
ss
in
ja
mov
imul
stos
sub
xor
movsb
fcompl
push
lahf
aad
sbb
pop
sub
sbb
out
xchg
inc
mov
stos
fld1
data16
cmp
mov
cmp
jb
xor
sub
insl
inc
popf
push
outsb
icebp
and
inc
js
out
clc
xor
sub
loopne
mov
pop
cmp
push
adc
xchg
rclb
out
js
stos
pop
ds
sbb
mov
inc
mov
ja
sbb
push
data16
xchg
scas
lds
or
and
or
loopne
in
xchg
xor
and
jle
jmp
xor
xchg
push
sub
scas
movsb
out
fs
push
daa
dec
cmpsb
in
mov
out
jg
jge
cmc
call
inc
mov
jge
cmp
rorb
js
imul
iret
ror
mov
mov
jl
jge
jg
cmp
dec
cwtl
test
jb
outsb
pop
imul
add
aam
mov
or
or
icebp
push
inc
push
sti
dec
stc
adc
xor
mov
out
popa
lahf
aam
in
xlat
rcll
pop
rol
aas
and
mov
sub
push
cmp
inc
mov
and
fwait
outsl
loop
loop
divl
aam
add
mov
xor
lret
ret
lahf
dec
lods
or
lock
sbb
mov
adc
mov
sub
add
ds
test
and
rclb
mov
int3
cmc
sbb
dec
lock
jp
xor
dec
nop
hlt
imul
push
call
sub
mov
xchg
pop
bound
push
fistl
and
fmuls
push
lahf
and
sbb
fnstcw
mul
pop
and
push
and
jp
je
daa
inc
jns
cmpb
xchg
inc
into
sbb
repz
adcb
push
fcmovb
scas
cmpsl
inc
xchg
dec
pop
or
out
cld
fisubrs
addr16
test
dec
scas
mov
outsb
cmp
in
or
or
xorl
stos
inc
push
dec
push
adc
outsb
sahf
mov
mov
je
pop
or
xor
xchg
mov
fstpt
ds
mov
pop
sub
repnz
mov
push
adc
cmc
or
dec
sub
inc
push
dec
push
jns
push
push
xlat
rol
pop
xor
shll
mov
aad
es
stos
push
ficomps
jbe
adc
add
subb
inc
imulb
scas
push
pushf
sub
lds
mov
in
lcall
ret
in
or
das
fs
cmp
or
push
lret
xor
push
out
adc
xchg
inc
lods
leave
push
mov
xchg
push
shrd
fs
jle
xchg
or
xchg
into
outsl
xor
fistps
std
sbb
gs
push
shlb
loop,pn
in
xchg
jo
lods
xchg
loop
xchg
and
or
cmp
lods
push
leave
sub
push
out
int
xchg
addb
or
movsb
pushf
xchg
es
adc
xchg
mov
adc
push
cs
sbb
lock
rcrl
fucomp
mov
testb
dec
push
push
jge
sbb
push
movsb
sub
rorb
cmp
push
fldl
push
mov
and
scas
pop
shll
mov
scas
ja
orl
inc
sbb
loop
xor
xchg
or
int3
cmp
or
andb
pop
pop
imul
fdivrl
jnp
mov
pop
push
shll
in
dec
adc
add
in
push
add
subb
push
xchg
out
aad
mov
rcrb
pusha
xchg
sbb
test
jno
jp
fwait
popf
sbb
insb
lods
iret
jbe
push
push
mov
xchg
mov
jns
jmp
into
roll
mov
and
mov
addr16
int
cmp
pop
xor
enter
add
and
lret
jp
pop
xchg
dec
inc
jmp
lret
pop
rolb
stos
movsb
outsb
ja
push
les
movsb
and
cmc
shrb
movsb
lret
pop
faddp
shlb
insb
mov
aas
fnstcw
sub
inc
sti
inc
fldl
fsubl
adc
in
mov
aaa
pop
sbb
lcall
lock
in
in
jno
add
mov
push
and
xchg
imull
xorl
arpl
pusha
cwtl
sub
adc
insl
mov
xchg
mov
adc
add
adc
pop
test
test
shll
xchg
stos
out
fidivl
jae,pn
push
sub
xchg
shrl
daa
jp
jge
inc
mov
add
aam
or
ja
jmp
lcall
out
inc
lock
out
push
lods
mov
push
stos
das
sbb
dec
imul
scas
lret
sahf
pop
xchg
sbb
idivl
iret
lods
iret
loop
add
inc
add
outsb
xchg
jp
mov
cltd
push
add
cmp
das
mov
icebp
repz
sub
jbe
je
scas
sbb
xchg
sbb
cwtl
sbb
stos
mov
nop
mov
ret
insb
sbb
jmp
push
push
inc
iret
cltd
xor
xchg
packsswb
ret
icebp
adc
add
xlat
sub
xor
rorl
in
jbe
mov
aad
jg
xchg
adc
imulb
fimull
andl
push
stc
inc
mov
jbe
xchg
mov
push
filds
xchg
xor
loope
movsl
mull
out
inc
pop
movsl
insb
ret
lods
adc
stc
scas
cltd
icebp
add
pop
cs
sbb
inc
and
dec
push
xor
mov
pop
into
pop
push
repz
pop
and
out
push
test
imul
sub
jp
sbb
sub
rorl
sbb
and
pop
and
push
subl
je
ds
push
pop
inc
int3
cli
ret
cmpsb
adc
cmp
push
xchg
popa
add
xchg
xor
lds
pop
rorl
pop
loope
out
aas
dec
add
xchg
imul
mov
les
movsb
sbb
cld
jbe
jmp
or
and
ds
sbb
jmp
or
cmp
add
mov
cltd
sbb
adc
cmp
ret
mov
xor
ja
add
push
mov
leave
mov
sub
push
and
cwtl
int
rcll
popf
push
negl
and
int3
xlat
add
xchg
dec
imul
sbb
sub
push
jg
xor
push
inc
add
ret
les
cmc
push
repz
enter
or
adc
xor
outsl
out
jge
jnp
inc
xor
stos
mov
push
outsb
in
test
xor
lods
inc
jb
mov
insb
xchg
scas
sub
in
gs
ja
or
bound
rcrl
push
jbe
xchg
dec
dec
push
mov
mov
mov
test
push
cmp
call
inc
pop
jge
and
pop
fsts
or
fnsave
lock
dec
mov
in
repz
push
sub
mov
sub
sbb
ret
pop
mov
lahf
inc
mov
add
dec
mov
inc
enter
test
adc
gs
ja
mov
roll
mov
mov
xchg
sub
pop
push
test
ss
mov
fdivrs
cs
sub
push
jnp
cli
into
cmp
les
add
fistps
out
das
add
mov
xchg
cmp
mov
popa
fistpll
inc
cmc
pop
mov
pop
sub
sti
popa
arpl
push
inc
dec
push
adc
xchg
sub
popa
dec
push
mov
jo
jnp
je
in
mov
imul
ret
push
fisttpl
ret
scas
xchg
mov
pop
rcr
adc
fwait
icebp
jbe
jle
icebp
movb
jp
mov
mov
push
lret
adc
ljmp
jo
or
lods
sbb
pop
xor
in
jno
push
fsts
mov
and
mov
stc
or
arpl
xchg
rol
inc
jno
sbb
mov
inc
mov
mov
xchg
sub
out
cld
jmp
cltd
add
jge
das
add
push
repnz
fistps
repz
into
mov
cwtl
imul
cmp
adc
push
test
push
cmp
ret
in
adc
xchg
dec
add
push
cmpsb
jne
jmp
dec
dec
jle
push
in
jmp
xor
test
dec
loop
push
aaa
imul
jle
movsb
fisubs
das
mov
js
testl
dec
das
pop
sub
addb
pop
mov
lea
xor
push
sub
push
lods
jno
cmpsb
cmp
mov
push
mov
add
dec
mov
sub
xchg
mov
mov
imul
call
or
sub
xlat
pop
inc
cmc
mov
dec
ret
xor
jp
cli
out
adc
add
xor
scas
sbb
iret
out
jecxz
adc
hlt
xor
push
stos
sahf
repnz
int3
adc
sub
xor
cmpsb
in
mov
je
pop
mull
iret
sbb
xchg
je
dec
fldl
cmp
cmp
adc
or
inc
mov
lret
aam
or
inc
test
mov
jnp
test
inc
mov
and
pop
fucomp
jmp
es
arpl
dec
fisubrs
mov
adc
mulb
cld
or
into
lcall
sahf
out
lods
aam
push
roll
mov
loope
adc
lcall
imul
js
and
icebp
movsl
xchg
adc
popa
cmp
xor
push
pop
clc
sub
pop
ss
ljmp
jl
dec
out
pop
hlt
pusha
add
cs
rep
sub
scas
fs
sbb
das
dec
rcr
cmpsb
sub
scas
mov
or
mov
mov
in
cmp
movsl
ds
test
movsl
scas
pop
push
stos
pop
ja
jae
inc
push
jo
aad
cmpsb
ds
push
jnp
in
test
add
push
inc
ret
sub
inc
and
push
insb
enter
jp
mov
popf
stc
and
xor
mov
out
xor
std
or
or
dec
ljmp
scas
jl
jge
sbb
jle
sbb
xchg
inc
stc
or
jae,pn
push
sbb
adc
sub
repnz
mov
dec
add
lock
dec
icebp
les
pop
inc
incb
jns
arpl
in
mov
adc
sarb
xor
pop
adc
and
add
cmpb
mov
sahf
pop
cltd
scas
add
cmc
pop
push
sbb
dec
inc
fcompl
push
xchg
inc
push
push
sbb
jne
pop
dec
fsubrs
adc
dec
rcrl
pop
or
nop
xchg
cli
aaa
gs
in
orb
out
add
sti
insb
xor
lea
fadd
jns
mov
inc
cli
mov
mov
mov
lock
mov
adc
sarb
mov
mov
mov
mov
aas
lods
movsl
test
sbb
std
or
icebp
hlt
mul
dec
add
push
mov
ljmp
adc
aam
cmp
adc
pushw
mov
call
xchg
adc
mov
mov
mov
mov
adc
lods
pushl
aas
enter
pop
cmpsl
sub
movsl
clc
jle
cmpsb
adc
je
xlat
testb
in
enter
and
xor
into
ja
jp
jnp
call
push
sarl
push
sbb
fwait
adc
pop
pop
jae
cltd
bound
add
add
nop
fs
lcall
rclb
mov
ret
scas
insb
fidivrs
lret
fsubs
ror
push
mov
push
add
lret
mov
fnstsw
das
mov
js
inc
movsl
push
sub
dec
stos
mov
lahf
push
notl
add
or
pop
insb
inc
cli
sarl
in
shrl
aad
mov
or
or
test
pop
js
in
xor
sbb
pushf
adc
repz
sub
add
rcr
test
les
icebp
sarl
dec
call
xchg
mov
imul
pop
lahf
filds
mov
add
push
sub
mov
arpl
push
adc
pop
push
adc
sbb
out
mov
cmpsl
addr16
pop
jno
sbb
and
xorb
testl
out
inc
mov
mov
and
div
cmpsb
push
test
xor
xchg
jae
and
nop
mov
subl
inc
sub
mov
cmp
out
dec
jne
lea
xchg
ja
out
push
xchg
xchg
shll
mov
icebp
inc
inc
ret
mov
pop
stc
sub
cld
xchg
push
sahf
push
sbb
adc
call
or
adc
stc
popf
aam
jle
adc
andl
sub
loop
cmpsl
gs
sub
stc
negb
cmp
and
ljmp
cmpsl
test
xor
xchg
bound
loopne
cld
xchg
mov
jnp
inc
or
mov
pop
movsb
sub
pusha
mov
je
dec
scas
dec
mov
in
mov
pushf
pop
ret
out
or
and
out
adc
aam
mov
dec
imul
sahf
push
test
inc
sahf
scas
pop
inc
pusha
inc
or
xchg
test
cmpsb
add
fsts
add
out
pop
or
imul
cmp
scas
movsb
out
add
push
test
mov
fidivrs
dec
jge
mov
inc
jge
in
ljmp
jnp
in
mov
test
mov
lds
pushf
dec
aas
jnp
and
sub
les
ficompl
ja
out
and
sahf
rcrl
push
mov
sub
lcall
cmp
jmp
ja
mov
mov
cwtl
sbb
stos
loop
rclb
xchg
dec
sbb
addl
inc
std
cmp
or
in
addr16
mov
jno
negb
icebp
adc
mov
aaa
outsb
xchg
dec
ljmp
and
add
mov
push
cld
lea
mov
sbb
shrb
fldcw
lahf
push
push
ljmp
dec
sbb
fstpl
rcll
out
outsb
ds
mov
inc
movsb
jmp
fldl
sbb
lods
movsl
sti
addb
lahf
es
mov
mov
stos
pop
movsl
ss
btc
and
xor
push
push
enter
enter
sbb
js
stos
cld
sbb
popa
movsl
pushf
fs
gs
xor
repz
sar
lret
xchg
out
jecxz
push
mov
mov
lock
add
push
mov
xor
daa
push
out
call
mov
xorl
push
stos
xor
push
lods
mov
mov
mov
cmp
jp
jmp
rorl
jo
hlt
pop
and
lock
test
jl
or
mov
andl
lea
jmp
mov
mov
icebp
mov
push
decb
je
push
shl
shl
stos
das
push
lock
mov
mov
das
mov
aas
fwait
jle
push
les
mov
sti
adc
imul
sbb
xor
jp
andb
mov
into
inc
stos
xor
scas
iret
push
dec
popa
push
dec
test
pop
test
lret
and
dec
andb
data16
movsb
xor
popa
push
lret
mov
lock
mov
jg
repz
mov
adc
or
pop
jge
lds
jo
dec
add
inc
adc
sbb
add
pop
out
lds
outsl
js
in
pop
int
jbe
lea
lock
sub
int
repz
push
add
dec
jmp
or
cmp
fbstp
xchg
or
std
pop
jg
lret
mov
cmp
inc
xchg
mov
mov
je
sahf
lock
jae
dec
jne
inc
sub
sbb
cli
or
cmova
and
ret
fnstcw
adc
lea
jecxz
es
in
movsb
push
into
dec
inc
les
enter
cli
clc
push
lcall
clc
add
mov
cmpsb
pop
push
xchg
cli
out
mov
das
ljmp
arpl
call
or
pop
aad
test
pop
imul
clc
shl
jmp
out
add
fs
cmpl
add
add
mov
cmpsb
ret
and
sbbb
pop
roll
movb
lds
stos
aam
adc
pushf
outsb
imul
hlt
sub
cmpsb
out
adc
mov
imul
fs
pop
mov
adcb
jo
fildll
scas
pop
les
icebp
and
mov
clc
dec
cli
scas
and
out
xor
arpl
xchg
loope
xor
inc
ret
adc
push
xchg
fstpt
adc
cmp
and
cmc
js
fbstp
mov
cld
add
mov
rcrb
fisubrl
cmp
fimuls
notl
pop
cmp
sahf
in
iret
ds
in
fstpt
push
mov
dec
ljmp
xchg
insl
jle
xor
popf
jne
and
mov
ja
mov
rcr
insl
insl
or
mov
mov
insl
lods
jmp
not
xorb
enter
pop
jg
xor
pop
mov
loopne
imul
lods
outsb
xchg
mov
outsb
inc
mov
mov
or
push
xor
xchg
cli
repz
push
call
mov
sbb
imul
insl
or
or
cmp
cmpl
and
mov
std
jg
out
jno
add
into
pop
push
mov
mov
pop
mov
loopne
inc
add
pop
or
mov
addr16
pop
mov
mov
sarl
xchg
ret
aaa
mov
sub
rcr
lock
outsb
outsl
cld
frstor
xchg
ret
enter
push
shl
cmpsl
xor
lea
mov
xor
fcoml
test
adc
fildl
jo
cmpsb
dec
mov
jp
mov
mov
cltd
ds
xor
inc
fmuls
daa
cmp
xchg
mov
out
xchg
mov
adc
dec
dec
xor
movsb
repz
mov
cmp
sarb
mov
sub
sub
jae
dec
inc
dec
xor
aad
and
and
jmp
imul
in
pop
cmp
stos
xchg
xorb
in
mov
xchg
cmp
popa
inc
cmp
mov
dec
inc
subb
inc
mov
xor
iret
fwait
movsl
lcall
shll
movsl
aas
cmp
out
data16
mov
scas
push
sbb
push
dec
xor
fldl
das
fsubr
aam
je
sbb
mov
cltd
jns
cmpl
xor
outsb
int
js
cmp
and
inc
sub
mov
minps
jle
fisttpll
les
clc
cmpl
and
add
imul
xchg
movb
rclb
pop
iret
jecxz
push
test
cltd
xchg
and
xor
adc
icebp
xor
xchg
lret
loop
stos
push
jl
data16
jg
pop
push
frstor
aas
mov
mov
pop
push
repnz
bound
movsl
testb
xchg
repnz
mov
mov
pop
jmp
mov
int
sahf
add
int
dec
shr
popa
les
jp
inc
sbb
mov
or
cmpsl
in
inc
mov
mov
sahf
pop
int3
pushf
jg
xchg
and
out
ljmp
adcb
test
sub
mov
mov
sub
dec
pop
lahf
add
aaa
in
insl
ja
push
call
leave
out
cmp
loop
mov
pushf
jp
dec
aad
mov
xchg
into
inc
es
stos
icebp
mov
xchg
xchg
std
pushf
cmc
pop
push
jge
and
mov
clc
xchg
or
cmc
adc
push
repz
nop
je
dec
and
mov
in
mov
dec
lret
push
mov
mov
inc
pop
push
popa
cli
call
lahf
and
pop
loope
pop
dec
outsb
mov
xor
insl
mov
adc
cld
jge
and
std
ret
cmp
imull
rdtsc
adc
popa
xchg
test
sahf
std
inc
add
push
pop
adc
xchg
bound
adcl
mov
adc
out
std
ljmp
insl
repnz
or
pop
push
iret
pusha
fidivrs
lock
jae
cwtl
mov
cmp
fimuls
jmp
jecxz
jnp
xchg
mov
je
inc
scas
dec
mov
into
cmp
xor
arpl
and
jp
mov
sbb
add
jae
or
roll
rcll
xor
ss
ret
or
test
in
xor
add
inc
pop
rol
sbb
pop
push
sub
test
adc
dec
scas
mov
dec
sub
popa
leave
data16
leave
mov
cmp
insb
xchg
hlt
in
fimull
out
pop
loop
stc
imulb
mov
sbb
in
xor
test
or
lock
insb
bound
subb
dec
push
fisttps
mov
stos
fnstenv
rcl
lods
and
sub
je
shll
jle
hlt
test
fs
or
pop
stos
pushf
jecxz
jg
aas
and
push
mov
aaa
jb
or
addb
dec
sldt
stos
pushf
xchg
push
mov
cli
test
xor
push
cmp
sbb
scas
lcall
imul
cltd
ljmp
cmp
cmp
dec
mov
addr16
loope
loop
lock
push
lcall
lret
dec
loopne
mov
mov
sbb
add
mov
lret
mov
aam
mov
xor
pop
pop
test
pop
cmpsb
mov
dec
clc
push
sbb
adc
mov
mov
and
lahf
pop
lods
xchg
jecxz
insb
dec
jo
xorb
in
ja
and
test
or
pop
cli
mov
push
add
movsl
mov
bound
push
xchg
into
popa
andb
add
mov
inc
adcb
or
cmpsb
mov
sub
dec
data16
fs
or
stos
push
outsl
hlt
dec
outsb
mov
pop
mov
pop
pop
or
pop
adc
push
jne
iret
loope
push
loopne
iret
mov
leave
jns
xchg
int3
stc
sbb
ljmp
in
imul
fldt
gs
scas
and
add
imul
push
loop
xchg
mov
add
add
mov
ficompl
mov
push
xchg
loope
orb
movsl
movsb
xor
xchg
je
inc
pop
jmp
xor
dec
xchg
sarl
and
xor
test
daa
fstl
pop
pop
jle
dec
push
rcl
movsl
push
mov
fisttps
fstps
add
jmp
cld
mov
loop
sub
adc
pushf
aad
dec
pop
add
test
iret
inc
sbb
ljmp
ds
sahf
or
jae
cmp
ret
rol
pop
and
xchg
dec
stos
scas
xor
mov
sbb
jb
fwait
sbb
jb
xlat
outsb
jmp
push
repnz
fwait
add
jg
clc
enter
sub
sub
or
add
js
inc
movsl
push
push
pusha
cmp
mov
push
test
or
sub
in
inc
inc
in
or
dec
dec
pop
add
lods
inc
popf
leave
sbb
fstps
add
sub
sti
inc
movsl
or
pop
lahf
jb
lret
mov
sbb
pop
mov
xchg
cltd
dec
dec
jns
jl
jo
cmp
xchg
mov
jp
sahf
es
mov
rcrl
ss
mov
das
shll
mov
popa
arpl
repnz
mov
push
jo
xchg
ret
aam
adc
and
scas
fxch
add
lret
gs
pop
mov
shl
mov
jp
insl
push
add
sub
popf
jg
or
mov
add
aam
test
or
lock
and
adc
cmp
repz
iret
mov
mov
mov
pop
or
inc
clc
stc
leave
loope
movsb
fnstcw
add
push
sbbb
movsb
movb
inc
mulb
leave
mov
addr16
movsl
insb
dec
test
lahf
adc
xchg
test
pop
addl
dec
sbb
xchg
std
push
enter
push
or
ds
xor
cmc
mov
cmpsb
call
in
es
lret
fninit
xor
push
adc
aam
daa
lret
jmp
pop
mov
cmp
hlt
adcl
lods
mov
mov
int3
sub
mov
jge
lods
pop
sbb
dec
push
jns
ror
adc
jp
pop
jno
outsb
mov
pop
sbb
scas
jb
pushf
jp
add
push
arpl
movsl
fnsave
mov
jb
cli
cmc
adc
adc
jg
dec
or
imul
popa
cwtl
mov
inc
sahf
jns
addr16
cwtd
sub
enter
mov
sbb
add
and
repz
push
hlt
mov
orb
or
mov
test
call
push
jb
push
mov
test
enter
sahf
gs
leave
xchg
pushf
mov
add
mov
rclb
mov
mov
addl
in
fsubs
cmpsb
pop
xlat
loop
movsl
pop
ffreep
enter
call
pop
ljmp
pop
mov
icebp
cmc
xor
jb
push
pop
daa
jecxz
add
loop
dec
xor
mov
sub
stos
mov
ja
cmp
and
es
lods
xchg
jns
pop
in
popf
cmp
movsb
push
pushf
cli
insb
push
inc
sub
into
cmp
imul
inc
shl
jg
sbb
das
mov
sub
shll
and
sub
xor
or
xor
jbe
and
int
dec
pusha
xlat
shrb
outsl
rorl
adc
lods
std
into
lret
out
adc
xchg
outsl
pop
xchg
orps
mov
iret
mov
mov
mov
add
and
scas
add
daa
mov
nop
mov
subl
pop
dec
dec
mov
and
inc
and
fistl
ljmp
cli
and
adc
cmc
shlb
adc
test
dec
xchg
test
shl
push
xchg
cmpsb
and
push
mov
cmc
and
mov
enter
andb
mov
into
or
test
icebp
test
mov
das
push
pop
outsb
inc
mov
std
push
pop
test
cmp
aaa
loopne
ss
test
aam
inc
pushf
clc
divb
or
or
adc
mov
popa
mov
mov
or
jp
mov
std
adc
testl
jns
test
test
pop
adc
andl
mov
jb
lds
sub
in
and
xchg
dec
or
std
inc
sbb
shl
cmpsb
sbb
testl
mov
cmp
cltd
adc
lcall
add
dec
addr16
das
in
imul
ret
inc
rorb
sub
sti
aad
sbbb
stos
push
add
sub
shrb
add
jl
add
in
pop
inc
push
scas
es
stos
out
add
push
or
loopne
xor
test
pop
mov
sbb
arpl
faddl
jle
mov
pop
xchg
test
xchg
mov
test
arpl
or
movsb
sbb
cmpsb
das
xchg
jno
mov
out
mov
jmp
fsubrs
jmp
mov
sub
loope
push
or
fisubl
adc
sub
fstpl
mov
add
cmpsb
dec
pop
xor
mov
or
cmp
xlat
and
cld
or
call
and
mov
and
insl
dec
push
fcoml
outsb
cmpl
test
mov
jge
arpl
adc
dec
xchg
repnz
inc
fldl
inc
aas
push
repz
dec
push
out
xchg
sub
push
call
aaa
repnz
cmp
out
pop
jb
or
cld
push
out
xchg
or
imul
dec
sti
mov
inc
lret
lret
inc
std
outsl
xor
outsb
mov
lods
jae
xchg
scas
clc
addr16
push
lret
fldcw
adc
in
iret
shll
jo
pop
add
inc
shl
inc
outsb
add
add
loop
jb
mov
lds
jbe
pushf
mov
mov
mov
xchg
add
xor
mov
cmpsl
dec
inc
and
inc
pushf
imul
add
fisttps
xor
xchg
lret
jae
lods
cs
stos
mov
rcll
std
cmc
rclb
pop
dec
mov
hlt
fadd
mov
inc
mov
stos
xchg
lea
mov
mov
mov
fdivrl
out
aaa
xlat
mov
and
fidivs
lret
mov
add
daa
sbb
inc
jmp
xchg
out
mov
mov
pop
aam
int3
mov
mov
daa
jbe
xchg
mov
lcall
addr16
xchg
cmpsl
lods
adc
mov
mov
or
es
jne
in
pusha
jp
xlat
xlat
adc
mov
outsl
mov
push
int
and
lret
cmp
add
xlat
or
mov
and
lods
adc
jae
push
add
cmp
repnz
es
jge
xchg
addr16
xchg
mov
lods
cmp
sbbl
sub
testb
les
cmp
les
mov
push
stc
mov
push
xor
fistpl
stos
push
add
icebp
xor
adc
scas
imul
and
mov
daa
out
pop
stos
in
jl
repz
xor
pop
sub
jle
addr16
mov
shlb
mov
pop
jp
stos
push
test
jmp
add
inc
loopne
sub
scas
lret
and
in
loope
xor
sbb
mov
cmpsl
push
push
mov
fstpt
lds
mov
pop
ret
and
dec
push
lea
cmp
ret
stos
sbb
out
aaa
mov
xchg
movsb
dec
fstpl
sub
subb
test
nop
sub
xchg
and
mov
jno
jns
dec
scas
faddp
repz
add
mov
mov
dec
ljmp
xchg
out
stc
stos
clc
pushf
lds
mov
dec
inc
pop
int3
cltd
jo
xor
dec
and
test
mov
sahf
nop
and
test
jmp
cmp
cmp
push
in
addr16
out
add
shr
dec
jecxz
lea
add
and
pop
data16
xor
repz
aad
enter
daa
cmp
into
pop
jae
and
xlat
mov
xchg
inc
and
std
cli
push
and
arpl
adc
das
push
lcall
ret
cmp
cli
adc
int
add
lret
sub
push
sbb
clc
xchg
stc
cmp
xor
mov
mov
and
test
sub
mov
loop
xchg
jmp
subl
daa
and
cli
mov
dec
stos
jecxz
sbb
pop
cmp
ret
mov
xor
push
gs
je
ret
pop
xor
stc
testb
sarl
jno
add
inc
pop
test
cmp
sub
hlt
xchg
push
sub
adc
mov
xchg
ds
nop
bound
inc
xor
mov
or
mov
jb
adc
enter
in
pop
orb
fimull
stc
jmp
cltd
push
out
repnz
jg
mov
mov
lock
and
out
dec
pushf
ljmp
scas
sbb
and
inc
rcl
test
int3
data16
in
sub
imul
stos
sbb
xchg
es
test
xor
cmpsl
ljmp
fwait
mov
mov
imull
sti
xor
dec
sbb
xchg
iret
jo
negb
loopne
sbb
dec
test
dec
fucomi
sarl
out
in
push
std
es
inc
push
inc
push
jbe
clc
ret
lret
fwait
clc
aaa
dec
jno
loopne
fcmovbe
dec
sub
mov
mov
push
and
push
push
adc
cmp
insl
imul
aam
js
repnz
mov
cmpsl
xor
mov
xlat
push
cmp
pushf
ss
cmp
jnp
adcl
lret
mov
pop
sbb
int3
jle
es
jno
sbb
mov
stos
sahf
xchg
pop
cmp
xor
dec
lahf
or
in
fwait
and
das
outsl
cmpsb
les
xchg
adc
mov
repnz
sbb
pop
repnz
inc
mov
dec
or
cltd
or
scas
stc
dec
scas
scas
push
push
into
cmp
jl
fcomps
sbb
jmp
xchg
incl
adc
int
pop
lods
shrl
mov
pop
in
cmp
mov
aam
cmovb
inc
int3
pop
push
cmc
flds
call
or
or
je
sub
push
push
insb
les
fldcw
and
icebp
ficomps
incl
inc
cmp
jecxz
inc
lahf
sub
add
out
lds
dec
nop
xchg
inc
jl
or
jl
dec
das
out
pop
lret
xchg
das
rcrb
xor
arpl
mov
pop
xor
jbe
jae
cwtl
push
out
jmp
mov
fs
jb
int3
shlb
xchg
js
fs
ret
scas
cmpsb
jmp
pop
mov
xchg
mov
cmp
pop
jne
arpl
clc
adc
fisttps
lods
ja
les
jmp
cmpb
aad
std
sub
dec
adc
daa
push
inc
shlb
in
fucomip
jmp
fcmovb
jl
cmp
pop
jl
xchg
movl
mov
leave
daa
iret
repnz
jle
pusha
sbb
sbbb
in
pop
push
sbb
aas
mov
jns
dec
lahf
jb
mov
bound
fstpl
lods
mov
inc
das
fdivl
and
stos
int3
xchg
sub
sub
adc
or
mov
arpl
mov
mov
adc
fucomp
push
jmp
insb
xor
mov
sbbb
gs
add
or
push
aad
test
sbb
pop
xchg
or
mov
mov
das
xchg
jno,pn
pop
and
jne
and
mov
sub
bound
call
dec
pop
jno
lcall
or
cmc
push
in
das
rol
mov
cmp
ljmp
jecxz
out
lods
sbb
pop
lods
inc
out
jo
fisubrs
push
cmpl
jno
cs
mul
outsl
pop
add
insb
mov
push
push
mov
mov
add
jbe
pop
cli
shll
jg
int3
shl
inc
add
xor
mov
call
roll
mov
mov
xor
lods
outsl
mov
sti
imul
sub
and
fists
sbb
mov
imul
call
cmc
cmpsl
xchg
adc
pop
dec
imul
pop
jge
xchg
ds
or
pop
mov
out
mov
lret
cmp
xchg
or
aad
push
cmpsb
mov
imul
movsb
aaa
stc
and
jae
jle
fwait
or
mov
adc
sub
fisubrl
btc
dec
movsb
or
inc
push
xor
mov
and
mov
lret
sub
jl
cmpsb
fmull
daa
pop
ffreep
or
push
rolb
jp
shlb
sti
pop
pop
and
and
xchg
fsubrl
popa
sbb
cmpb
dec
std
nop
test
lcall
push
pop
mov
pop
inc
xor
push
subb
es
mov
shl
mov
xchg
jl
cs
ljmp
rclb
fs
iret
stc
out
dec
call
orw
dec
loop
mov
jl
sbb
cltd
jmp
jge
inc
dec
jle
pop
add
and
mov
mov
mov
sub
push
loope
lods
add
rol
mov
outsl
add
sub
adc
imul
insl
mov
aas
aam
sbb
mov
and
push
mov
jecxz
xchg
daa
sub
mov
je
pop
dec
mov
in
sub
insb
scas
mov
enter
movsl
lcall
les
adc
pop
xchg
jo
sub
imulb
push
push
xchg
mov
scas
jmp
cmpsl
stc
shl
mov
imul
xchg
pusha
arpl
and
mov
popf
out
orb
jge
test
jo
lods
aam
jns
arpl
xor
cmp
rcrl
pop
inc
jo
xor
fwait
ret
and
or
add
in
mov
or
test
jp
xchg
and
inc
shr
ljmp
sub
arpl
or
int3
xchg
loop
outsl
rclb
sbb
lds
roll
jo
lcall
scas
daa
and
fwait
push
sub
out
xchg
loopne
hlt
add
fs
cmp
aam
lahf
or
push
xchg
divb
push
mov
cmp
push
pop
pop
add
push
rorl
cmp
pop
rcr
mov
ds
pop
stc
add
jmp
in
arpl
loope
ret
rorb
repnz
pop
rcll
movsb
sub
xchg
stc
scas
stos
insl
out
scas
mov
lods
lcall
add
pop
dec
sarb
fldenv
mov
add
jg
mov
testb
outsb
stos
mov
cmp
mov
push
and
cmp
mov
shlb
bound
add
cmpsb
xchg
jg
sub
cltd
cld
stc
divb
jno
add
sbbl
int3
ljmp
push
xchg
addr16
jo
xchg
nop
inc
ljmp
jae
cmp
repnz
push
sub
xor
dec
push
stc
subl
mul
inc
mov
icebp
out
jle
mov
ljmp
or
adc
bound
int
out
jl
pop
xor
loope
pop
mov
in
push
jno
scas
jb
pop
cmp
jns
scas
push
pop
mov
std
or
and
popa
mov
in
out
xchg
lret
jmp
in
add
mov
push
mov
adcb
xchg
push
stos
adc
jge
int3
jmp
mov
cmp
fldl
loop
cmc
ljmp
and
lods
sahf
cwtl
lock
idivb
pop
mov
push
mov
mov
das
pop
jg
test
fdivr
mov
int
cmp
pop
pop
inc
sub
inc
ds
lods
dec
imul
testl
inc
xchg
push
aad
push
inc
lds
mov
in
mov
sub
sti
into
jmp
inc
arpl
daa
sti
fisubrs
jns
sub
arpl
xor
pop
jge
call
pop
stc
lock
dec
mov
xlat
outsl
ljmp
add
xor
mov
mov
movsl
sbb
enterw
xchg
adc
mov
lock
es
mov
movsb
hlt
inc
clc
ret
mov
jns
loop
cmc
leave
int
nop
imul
sbb
ljmp
xchg
jnp
cmpsb
addr16
sub
xchg
xor
fs
fs
jp
fisttpl
insb
iret
ret
into
mov
lds
add
xor
fisttps
mov
lret
les
push
xor
push
push
jmp
pop
enter
clc
out
bound
sub
das
aad
cli
pusha
loope
adc
lret
sub
xchg
loope
mov
repnz
lcall
pop
lahf
xchg
cmp
inc
xchg
divl
jbe
adc
xor
mov
into
mov
outsb
mov
cmp
jb
mov
xchg
shll
push
mov
xchg
repz
mov
repnz
sub
dec
fiaddl
cli
cli
push
fcoml
shll
lret
jle
inc
es
xlat
adc
iret
dec
and
into
sbb
shll
jns
mov
stos
shlb
lock
les
lret
pop
pop
out
sbb
aas
jno
test
notw
ficoml
sarl
sbb
xlat
daa
mov
add
fyl2xp1
and
ljmp
cltd
fdivs
xor
test
push
and
pop
cmpsl
jp
repnz
idivb
cmp
push
shll
rcrb
shll
lock
xchg
jp
testb
and
xor
cld
fisubl
xchg
push
outsl
fdivrp
mov
test
xchg
jae
leave
lahf
sub
push
pusha
test
dec
dec
push
push
jmp
fdivs
popa
mov
xor
cmc
mov
inc
jb
repz
popa
lods
sub
or
lret
loope
or
adc
mov
pop
lock
lds
push
xchg
je
push
arpl
gs
jg
into
xor
shlb
xchg
mov
mov
fistps
jge
stos
dec
dec
out
adc
push
jg
popf
in
mov
or
cltd
scas
aam
popf
std
mov
inc
cld
dec
fstl
sub
fnstenv
push
mov
sti
mov
outsb
rcrb
sub
lahf
or
push
pop
lcall
daa
sar
shlb
push
add
test
or
jge
add
daa
loopne
imul
pusha
mov
aaa
xor
or
mov
add
cltd
xchg
lcall
inc
cmpb
outsb
mov
lret
mov
mov
or
mov
cmp
dec
ror
out
xor
pop
pop
cli
shr
inc
fisubrl
or
push
cmpsl
inc
rcll
inc
pop
shld
push
popf
aam
je
pop
ja
dec
ljmp
pop
pop
stos
mov
add
das
add
add
daa
lods
in
push
mov
adc
scas
scas
adc
sti
cmp
ss
mov
cmp
inc
mov
sbb
adc
dec
mov
pop
ja
imul
pop
push
paddusb
ret
add
mov
repnz
lods
aam
push
cmpb
scas
loop
adc
jecxz
push
iret
pop
jbe
nop
mov
fildl
jae
mov
or
mov
push
fsts
xchg
jp
into
sub
cld
sub
decl
mov
mov
jl
movsb
mov
cmp
sbb
inc
inc
mov
mov
cmp
inc
insl
xor
or
push
or
mov
pop
add
sbb
imul
jbe
xchg
xlat
ss
pop
xchg
and
imul
or
sbb
shll
pop
outsl
dec
mov
jbe
push
fld
sbb
xor
int
xchg
cwtl
xlat
xor
and
sbb
fdivl
add
pop
nop
jecxz
xchg
adc
popf
xchg
jae
mov
jns
es
jb
daa
dec
sbb
jl
jg
and
push
outsl
mov
mov
mov
pop
imul
cmpsl
adc
test
adc
mov
jbe
gs
and
test
add
dec
sub
cmp
je
mov
jno
cmp
jecxz
and
sbb
ret
sub
mov
adc
mov
scas
xchg
mov
fwait
dec
xor
int
and
sub
adc
lock
cmp
xchg
aam
sbb
lods
mov
inc
and
xorl
roll
lahf
mov
stos
jns
mov
mov
mov
repnz
sub
xor
mov
or
int3
outsl
neg
lods
orb
adc
call
jo
jns
add
push
mov
jp
mov
push
arpl
pop
push
shrb
cmpsl
xor
adc
cwtl
push
icebp
inc
lahf
dec
imull
insl
pop
mov
lret
ja
mov
or
push
pop
icebp
loop
add
sbb
xchg
adc
add
cmp
rcll
divps
mov
and
and
mov
inc
fildl
inc
sbb
repz
mov
in
mov
cmp
mov
icebp
clc
cmp
cmp
outsb
fs
inc
test
sub
xchg
ret
lds
mov
sbb
xor
mov
imul
push
addr16
icebp
nop
push
andb
lock
jns
test
push
xchg
incl
les
hlt
mov
into
cld
add
subl
lea
sub
jg
pop
lods
pop
mov
mov
push
hlt
jne
or
xchg
es
test
mov
mov
add
pop
add
sti
xor
rcll
fisubs
out
stc
jae
jno
sbb
bound
nop
push
vmovddup
mov
mov
lods
les
xor
mov
add
flds
lret
aaa
mov
inc
push
inc
lret
jno
push
es
cmpsl
jns
xchg
hlt
int
jge
and
outsb
jg
loope
push
add
pushf
mov
pop
clc
sbb
dec
push
rorl
inc
xchg
fwait
les
repz
jp
icebp
ljmp
and
mov
in
adc
sbb
or
lods
mov
adc
js
sbb
rcll
adc
xor
je
xor
mov
int
mov
iret
sbb
out
mov
inc
aas
scas
lock
pop
or
add
cmpsl
xchg
push
test
mul
sub
ficoml
xor
in
ja
enterw
stos
mov
mov
mov
call
push
fsts
or
xlat
push
push
mov
xchg
test
rcll
or
test
ljmp
add
icebp
sahf
je
gs
test
rclb
movsl
aas
hlt
ss
rorl
ds
pop
cld
scas
movsl
and
jo
aaa
andb
dec
mov
sbb
jne
into
or
in
imul
fisubl
push
push
scas
add
dec
stc
popf
inc
push
mov
out
shl
pop
pop
enter
pop
jmp
sub
xor
repz
enter
js
imul
stos
cmpsb
push
enter
pop
xor
pop
pop
cs
iret
jg
fwait
les
sub
xchg
xchg
sub
and
jp
sbbl
loop
scas
loopne
or
out
movsl
int
imul
mov
sbb
sbb
push
lret
xchg
xchg
jl
movsl
adcb
inc
scas
xchg
xchg
loopne
jb
sub
pop
jle
nop
lret
je
out
jecxz
test
jbe
outsb
dec
aad
mov
add
pop
jnp
push
cli
or
insb
icebp
fisubl
test
push
fmuls
cmp
lret
xchg
popf
js
jge
adc
xor
jnp
hlt
ret
cs
aas
inc
mov
add
xchg
sbb
imul
decl
add
inc
mov
lret
es
push
pop
jno
andb
mov
daa
lea
stos
xor
pop
xchg
subb
repz
jmp
adc
outsb
aam
hlt
insl
mov
pop
repnz
leave
xor
push
jg
jb
and
mov
scas
xchg
daa
lock
imul
in
call
sbb
jo
in
cmc
push
sub
sbb
outsl
jmp
in
scas
jno
mov
js
and
adc
push
sbb
xchg
enter
mov
cmp
test
cld
sub
nop
dec
loope
mov
push
call
mov
hlt
loopne
or
jb
sub
jo
mov
sbb
pop
cmp
fcompp
sub
mov
fs
and
pop
std
shll
scas
jecxz
repz
out
inc
sahf
mov
sub
addr16
xchg
cld
icebp
xchg
shl
and
rorl
fprem1
push
and
outsl
add
popf
lret
jmp
jge
scas
fldt
mov
fimuls
push
mov
cmc
and
and
sbb
xchg
es
aad
sbb
xor
and
pop
sti
loop
sarb
mov
jno
insl
inc
ss
data16
jle
testl
pusha
fsts
add
aad
mov
cld
aad
push
mov
sub
cmp
dec
scas
push
ds
xchg
cmp
imul
pop
jae
lock
mov
ret
mov
mov
lret
pop
xchg
push
or
push
js
cmp
and
mov
or
ficompl
clc
xchg
jg
mov
shrb
xor
shrb
inc
mov
lahf
cli
inc
ss
cmp
ret
xor
mov
push
cli
and
pop
xor
loop
enter
mov
sub
stos
mov
sbb
inc
fcomps
cmpsl
pop
push
mov
push
mov
cwtl
inc
pop
std
and
cli
fs
cld
dec
imul
int
adc
cwtl
bound
inc
test
mov
mov
inc
cld
mov
pop
rorl
pshufw
es
ficompl
xor
pop
addl
cmp
xor
mov
xchg
cli
jns
in
repnz
mov
bound
cmpsl
out
mov
jmp
push
xor
inc
shrl
out
in
jns
lea
add
in
notl
ss
mov
stos
pushf
and
fwait
imul
arpl
lds
out
and
sarl
adc
and
outsl
push
iret
adcb
inc
lock
mov
hlt
daa
xchg
or
lcall
out
inc
pop
xchg
fisubrl
jmp
in
clc
imul
push
out
inc
lds
cltd
pop
ret
adc
popa
arpl
mov
rcrl
jnp
adc
push
pop
in
xor
in
and
jg
sti
xor
repnz
lods
int3
inc
leave
push
mov
add
push
and
xor
outsb
lods
jae
dec
mov
mov
jae
inc
fs
mov
rorb
cmc
mul
cli
sar
push
ds
mov
pop
iret
push
jge
jg
call
int
jae
push
xor
inc
jbe
jecxz
inc
jecxz
hlt
pop
push
and
or
inc
jmp
test
cmpsb
or
sub
dec
cmpsb
add
lcall
mov
test
repnz
sbb
stc
mov
loop
fnstsw
repnz
nop
out
shrl
loopne
jnp
ret
lods
jg
stc
xorb
pushf
or
dec
cmpsb
ret
in
hlt
jnp
mov
fdivrs
pop
scas
jne
cld
aas
pusha
xchg
add
stc
mov
jno
fcompl
lea
inc
pop
or
icebp
push
sahf
push
cltd
cmp
movsl
dec
out
mov
lret
mov
inc
mov
xchg
xor
in
xlat
xchg
push
cmp
stos
pop
mov
test
and
lea
cmp
lcall
les
sub
sub
ja
lds
icebp
jl
rcl
out
addb
add
xchg
cld
inc
jnp
push
xor
addb
fisttps
xlat
mov
test
sbb
adc
mov
jo
adc
xchg
out
aam
repz
cli
mov
int3
or
idivb
fldenv
out
cltd
cmpsb
mov
add
fcompl
dec
mov
stos
call
add
sub
shlb
repnz
pop
sub
sbb
test
dec
jle
sub
pop
push
jns
jne
pavgw
pusha
repz
jns
sub
das
or
sub
or
jns
clc
pop
rolb
xor
in
xlat
xchg
flds
cmp
mov
add
out
add
and
add
out
jno
mov
xor
adc
ret
in
insl
jb
mov
dec
cmp
fnstenv
outsb
adc
jns
dec
popf
inc
out
mov
pusha
mov
pop
sub
dec
mov
sti
pop
popf
rorl
or
lock
inc
adc
or
xlat
cmc
mov
int
dec
pop
popf
movsl
lahf
sub
push
popf
xor
mov
pop
sarl
jae
loope
xor
lret
scas
mov
repz
fcomps
gs
mov
push
fcompl
and
mov
jnp
sbb
inc
jge
push
dec
clc
aam
addb
mov
arpl
test
out
divb
fs
fsub
mov
pop
mov
mov
push
jle
int
ja
xchg
mov
movsb
inc
ds
out
ret
sub
pusha
sbb
mov
nop
loop
aaa
fiaddl
fisubl
test
push
notl
sub
mov
sbb
orb
adcl
shl
inc
cli
loopne
jge
cmp
jecxz
nop
rol
sub
stos
cmp
pop
sti
push
mov
fnsave
mov
cli
ja
xor
inc
flds
jge
sub
enter
pop
scas
add
shl
rcrb
int3
fimuls
jne
mov
imull
shll
jmp
cmp
cwtl
push
aaa
sub
enter
mov
mov
fxch
clc
es
aad
int
adc
outsb
and
add
mov
push
cmp
pushf
mov
hlt
inc
addb
or
cmp
add
or
push
insb
inc
stos
push
jo
addr16
mov
jo
lcall
lea
jbe
addr16
sbbl
jbe
lcall
sti
and
mov
cltd
mov
sub
fildll
lds
fnstsw
mov
stos
dec
pushf
jo
push
ljmp
dec
jo
outsb
es
add
mov
push
mov
cmp
push
aaa
or
xor
mov
push
mov
inc
push
mov
jo
popa
stos
sub
ljmp
mov
stos
add
icebp
pop
fwait
ret
sbb
in
loop
pop
jge
mov
stos
into
aaa
push
mov
mov
or
push
jg
cmp
movb
lods
jg
loop
cmp
loope
stos
jbe
popf
cmp
cmpsl
movsb
testl
int
sbb
mov
insl
jl
jmp
fs
inc
dec
xor
pop
lods
inc
popf
rorl
jno
adc
jmp
cmp
imul
inc
notl
jns
arpl
outsb
cmpsb
sub
push
mov
adc
mov
pop
cmp
xchg
test
mov
adc
mov
add
mov
push
push
sbb
pop
inc
iret
sbb
ja
push
leave
inc
inc
inc
movsb
push
es
das
cmp
das
pushf
push
lcall
push
jmp
lods
cmp
xor
and
mov
lds
fnstsw
push
dec
data16
cmp
mov
mov
and
cmp
test
push
test
xor
testb
in
or
cmp
mov
stos
sbb
pop
xchg
jo
mov
add
push
mov
lahf
push
inc
ss
into
pop
jle
and
sub
cmp
xor
stos
sahf
sub
mov
jmp
mov
mov
in
loop
cli
adc
jle
add
pop
mov
cwtl
or
lea
iret
adc
sub
dec
xor
add
mov
daa
jns
cmp
add
sub
cmpl
xor
in
xor
mov
test
mov
or
rcrb
and
stc
sub
repz
iret
loopne
mov
pop
push
sar
nop
jbe
add
mov
pop
out
outsb
inc
mov
arpl
out
xor
stos
in
cs
ret
sti
pop
out
inc
mov
test
test
mov
sub
es
jb
fmull
and
mov
pusha
jno
or
arpl
mov
pop
and
dec
cmp
incl
scas
pop
and
in
outsl
jg
sbb
js
jp
adc
dec
fistpl
jg
add
insb
add
jae
addr16
arpl
mov
int3
nop
ret
push
mov
push
test
add
out
in
divl
pop
xor
mov
rorb
cmp
stos
add
sub
in
or
sub
popf
push
es
mov
mov
fcompl
sub
sbb
pop
roll
sti
and
cmp
rorb
sbb
repnz
mov
loope
sub
dec
dec
subb
dec
scas
inc
xchg
addr16
dec
clc
inc
leave
mov
loope
leave
call
test
mov
cmp
cmp
adc
inc
fsts
insb
adc
and
int3
sti
aaa
add
repz
ds
push
pop
jnp
in
push
ss
imul
add
ficompl
imul
sbb
mov
inc
in
notl
jecxz
out
lods
pushf
add
adc
and
pop
jbe
sbb
movsl
mov
imul
cmpsl
inc
inc
lahf
inc
test
xchg
and
xor
mov
sub
jmp
das
stos
or
js
dec
int
mov
dec
mov
loop
js
push
push
or
and
imul
jno
aam
rclb
scas
pop
mov
mov
adc
mov
cld
inc
call
in
jbe
cmpsb
sbb
adc
cs
or
push
dec
roll
add
mov
inc
sub
mov
push
scas
nop
mov
xchg
push
mov
add
sbb
xchg
pusha
mov
add
insb
ret
push
outsb
testb
pop
ret
xor
sub
stos
xor
jns
rcrl
lock
and
sbb
push
jo
das
xchg
fisttpll
movsb
add
out
xor
xchg
jo
jmp
jbe
dec
sahf
add
and
mov
lcall
inc
popf
sub
loopne
inc
jno
lahf
aad
sub
and
ret
xchg
mov
pop
xor
int3
jne
jno
sbb
mov
inc
std
imulb
push
fidivl
push
mov
pop
push
nop
sub
xchg
or
lea
fiaddl
sti
cmp
test
inc
sub
ret
imul
xor
jnp
pop
xor
decb
cmc
cmc
sbb
mov
and
outsb
lret
negb
pop
xor
xchg
out
cmc
cmp
rcrb
jns
call
mov
xchg
jmp
adc
cli
ret
fwait
iret
push
cmp
aad
jns
nop
lea
inc
fimuls
addr16
fcmovnbe
pop
push
pop
jns
push
test
sbb
inc
lock
adc
add
cmpsb
mov
aad
rcrl
popf
sbb
ftst
mov
fs
push
stc
jge
cmpsl
xor
lret
mov
and
clc
cmp
pusha
stc
pusha
js
leave
mov
and
jecxz
mov
jbe
jmp
add
lahf
jnp
movsl
dec
das
dec
push
dec
add
fstpt
sbb
ret
rorb
mov
push
insb
mov
push
and
jo
not
sahf
push
add
enter
sbb
cs
xchg
adc
sbb
cmpsl
cld
xchg
repnz
jnp
or
pop
push
mov
jae
push
xor
cmp
inc
insb
aam
orb
test
sub
cmpsb
nop
jno
inc
push
in
and
push
movsb
mov
push
dec
movsl
cltd
mov
mov
loop
out
shlb
pop
mov
ja
bound
cmpsl
dec
sahf
in
data16
cwtl
std
rcr
or
jne
cmp
movsb
filds
sbb
icebp
sti
or
ret
adc
cmpsb
mull
arpl
ds
xor
mov
pop
test
sti
pop
fwait
popa
or
and
and
mov
inc
orb
sbb
sbb
xlat
sub
xchg
mov
stc
sbb
daa
mov
lods
insl
ljmp
test
xlat
jbe
sub
jp
mov
aaa
daa
aaa
or
subb
imul
dec
adc
mov
ja
add
fisttpll
sbbb
test
cld
fs
je
out
push
or
scas
lods
adc
movsl
dec
add
push
cmp
jae
test
mov
clc
fmuls
iret
outsl
jle
dec
jns
ret
dec
jl,pt
xchg
sub
sarl
cmp
or
dec
pop
imul
mov
adc
outsl
jmp
pop
hlt
clc
dec
shr
mov
hlt
and
lea
and
pusha
push
mov
lret
jg
mov
outsl
sub
shll
nop
push
stos
rol
inc
jne
lock
jmp
lret
rorb
push
mov
mov
mov
jnp
mov
mov
mov
rorl
jge
rcrl
push
loope
insb
out
mov
fdiv
icebp
xlat
cmp
push
pop
mov
outsb
outsl
sub
ss
sti
mov
sbb
xchg
jno
mov
mov
adc
mov
inc
and
cmp
jge
outsb
stos
dec
movsb
add
scas
lret
outsl
jmp
rcrl
rcl
mov
sbb
mov
and
out
dec
iret
jb
add
inc
xchg
insl
cld
dec
imul
mov
aas
mov
adc
movsl
inc
jecxz
pop
aam
inc
inc
jmp
mov
cmpsb
ja
xor
add
mov
inc
mov
cld
cmp
outsb
mov
test
repz
addr16
daa
sub
add
lahf
rolb
rcrb
mov
jl
push
js
xchg
aaa
sub
xchg
sahf
fwait
and
mov
cmp
push
test
aad
and
jno
mov
cli
inc
push
xchg
lds
add
mov
mov
pop
sbb
xchg
inc
cmpsb
sbb
imul
push
sahf
int3
and
sbb
adc
mov
js
jne
repnz
mov
daa
mov
jge
or
pop
jae
in
or
out
imul
inc
stc
sbb
lods
je
or
xor
xor
repnz
popa
icebp
sub
sub
cmp
cmpsb
cltd
push
rep
cmp
add
adc
pop
lds
cwtl
into
cmp
push
pop
iret
pop
lcall
sahf
and
loop
mov
div
cld
pop
adc
pop
lcall
stc
push
jne
jge
inc
ficompl
or
lods
fists
outsb
nop
stos
xor
rcr
movsl
sbb
pop
stc
and
aaa
jne
and
mov
dec
sahf
test
cmp
mov
aam
pushf
jge
enter
mov
scas
dec
aas
fsubl
cs
xor
std
icebp
daa
or
add
mov
cli
enter
ljmp
lahf
mov
addr16
shrl
jle
xchg
adc
insb
mov
jl
test
scas
dec
dec
lcall
dec
push
sahf
ja
mov
in
scas
or
jmp
jmp
ja
fdivrl
into
sbb
sub
pop
xlat
jne
push
cmp
cmp
pop
js
mov
leave
cwtl
and
xchg
xchg
dec
mov
push
std
outsb
add
or
cmp
and
inc
out
push
outsb
rolb
or
jo
mov
aaa
in
pusha
or
and
addr16
mov
scas
shrl
adcb
and
adc
test
gs
adc
sub
fists
movsb
iret
je
aaa
leave
dec
cwtl
movl
jecxz
dec
loope
pop
scas
xchg
mov
dec
in
xchg
push
jle
dec
jno
mov
fstpt
nop
int
not
cwtl
aam
jmp
test
and
sbb
pop
sahf
int3
fs
les
call
jne
cmpsl
add
mov
sub
mov
mov
xchg
ret
idivb
in
jo
xchg
dec
out
cs
sub
and
mov
pop
cltd
in
inc
rcll
xchg
and
pop
fnstenv
sti
mov
rcrb
jecxz
ja
mov
iret
add
movsl
lret
aam
arpl
or
mov
push
js
inc
mov
add
or
sbb
lock
dec
mov
mov
push
xor
cmp
aas
xchg
rcll
and
ja
cltd
sar
insl
iret
push
aad
cwtl
adc
jmp
dec
pop
lea
shrl
xor
insb
les
push
les
pop
add
xor
icebp
pop
adc
mov
mov
out
pop
movsb
pop
xor
lock
or
imul
clc
sbb
and
enter
mov
jb
andb
ret
push
xor
and
call
mov
in
inc
jge
xchg
fucomi
scas
push
jae
cmc
mov
idivb
jae
cmp
sub
cltd
test
movsl
push
out
xchg
push
sbb
aam
or
in
daa
cmp
aaa
mov
je
cmp
sbb
and
pop
or
dec
inc
mov
jo
xchg
mov
push
ljmp
pop
sbb
aaa
les
push
in
enter
push
sbb
testl
cmp
cltd
mov
ret
pop
cmp
scas
fnstcw
scas
dec
test
pop
std
lret
dec
out
push
inc
sbb
and
push
cld
lret
rcr
inc
pushf
cmp
pop
xchg
sub
jbe
cmp
or
mov
into
mov
aas
loop
adc
add
mov
push
jbe
push
fs
sbb
bound
les
adcl
outsb
mov
dec
popf
xorl
jb
cmp
mov
lret
cmp
scas
pop
popf
jae
mov
push
out
sbb
sbb
mov
mov
ret
bound
cmp
lret
jno
jl
test
push
inc
cmp
add
cwtl
dec
mov
jl
mov
xchg
shrb
daa
shrd
inc
ret
out
stos
mov
xor
mov
aad
shrb
sbbb
sub
cmovbe
insb
and
dec
mov
ficoms
inc
div
out
out
jl
dec
imul
xchg
jge
sub
xchg
outsb
sbb
mov
cwtl
lahf
push
xchg
ret
std
jns
pusha
ret
pop
adc
mov
and
lods
xor
ud0
mov
call
or
cmpsl
inc
div
arpl
xchg
push
lret
add
lahf
push
or
ljmp
push
mov
adc
sbb
xchg
xchg
test
mov
mov
lahf
fstl
inc
mov
stc
aam
test
es
sarb
sub
xchg
mov
push
hlt
dec
test
inc
out
jnp
sub
jmp
sub
int
lods
aad
lods
xchg
divb
adc
clc
pop
cmp
aas
or
add
jns
xorb
pop
loop
test
sub
inc
dec
mov
iret
cmpsl
nop
fs
xor
fimuls
inc
bound
out
push
xor
xor
in
test
push
cmp
stos
inc
das
or
jmp
xchg
out
push
lret
insb
scas
imul
adc
sub
or
pushf
mov
or
stos
xor
cmp
mov
jb
lcall
push
addr16
insb
std
sbb
std
loope
jp
jnp
sub
mov
pop
mov
pop
cmp
int3
or
das
add
pop
repz
fwait
cmc
xchg
scas
mov
ret
adc
stc
push
inc
mov
insb
mov
cs
pop
sub
dec
iret
xor
or
cmp
insl
mov
dec
loopne
pop
jno
or
adc
xor
faddp
fldl
loop
xchg
mov
mov
xchg
mov
push
mov
xchg
fidivl
mov
movsl
mov
push
shrl
dec
repz
lahf
arpl
aad
lock
movsl
inc
jae
pop
leave
cmp
cmp
pusha
js
in
push
adc
jp
push
sub
or
stc
xor
outsb
test
mov
dec
into
cmp
cmpsb
sub
jecxz
sub
lcall
outsb
xor
test
subb
je
add
in
imul
clc
out
push
cmp
mov
xlat
mov
ds
mov
adc
pop
fisubrl
xchg
push
test
imul
dec
dec
test
dec
mov
dec
popf
test
sub
xorb
jb
shrl
in
mov
push
idivb
lods
cmpsb
imul
mov
gs
sbb
dec
and
jae
aam
addr16
xor
add
mov
jge
filds
lret
dec
int
outsl
inc
add
lcall
dec
outsb
jge
nop
pop
movsl
add
inc
lahf
popa
mov
jb
movsb
xchg
aaa
leave
gs
stos
fldcw
jb
inc
or
into
xchg
ret
loopne
mov
out
push
call
dec
push
test
mov
ja
push
in
or
xor
out
mov
xchg
mov
int
push
lret
lods
fisttpl
mov
js
cmp
mov
leave
imul
lret
popf
andb
push
ret
test
add
arpl
cmp
in
mov
cmp
mov
xchg
and
fnstsw
and
stc
sbb
stos
jns
dec
outsb
lods
lret
cli
sbb
dec
jmp
fldl
push
imul
cmp
cld
pop
pop
mov
jmp
jg
xor
add
stos
or
stos
cli
les
daa
pop
fildll
addb
pop
stos
pop
arpl
ds
fisubl
popa
add
mov
mov
lret
adc
das
dec
jl
or
in
outsl
push
jmp
rorb
mov
addr16
push
push
stc
lret
scas
sub
test
test
sub
imul
sbb
mov
scas
ja
daa
mov
mov
sub
and
rolb
inc
sbb
into
imul
jle
adc
loop
test
push
movsb
mov
pop
ss
fs
push
outsb
mov
mov
into
in
test
mov
mov
inc
lcall
cmp
idivl
add
jnp
add
push
pop
jo
pop
jno
jle
pop
in
push
jg
inc
or
lods
mov
xor
mov
in
cltd
or
pop
push
adc
dec
and
ss
stos
add
or
pop
outsb
lods
xor
or
in
xchg
dec
push
cmp
pop
dec
xchg
lock
idivb
pop
and
jns
outsl
lahf
outsl
lahf
jae
outsb
negb
imul
add
bound
pop
and
cmp
inc
mov
push
scas
insb
cmp
mov
movsl
cmp
or
sub
nop
jne
dec
mov
movsl
sahf
les
ret
xchg
inc
cmpsl
lahf
cli
mov
in
dec
rcl
jl
repz
int3
push
xchg
add
imul
jmp
into
aaa
out
div
imul
xor
lods
mov
xchg
mov
jp
jo,pn
clc
fcoms
push
movsl
std
or
jae
lret
mov
add
jl
dec
inc
fs
jne
in
pop
out
jbe
loop
les
jns
mov
dec
xor
in
inc
jmpw
sub
sbb
mov
add
lds
dec
arpl
ja
pop
sub
sub
insb
subb
cltd
adc
and
push
dec
push
nop
mov
adc
test
rorl
push
movsb
jno
jecxz
vmread
pop
arpl
push
insb
gs
inc
jmp
repnz
mov
sbb
inc
fldcw
ret
inc
xchg
scas
push
cmp
test
push
xor
mov
mov
and
jmp
popl
xchg
mov
adc
push
xchg
iret
aas
les
inc
adc
sbb
imul
and
xor
add
jecxz
mov
jb
jb
popa
test
fiadds
mov
adc
jne
mov
mov
push
add
pop
mov
or
xchg
mov
mov
pop
and
jo
pop
cs
inc
push
inc
mov
push
fwait
aas
out
mov
ret
xor
imul
cmpb
or
xor
cmpsl
or
shrl
enter
sbb
or
lds
fidivl
pusha
in
cwtl
mov
mov
xchg
stos
sbb
cmp
and
nop
cmp
imul
jb
orl
mov
dec
ljmp
mov
in
cs
mov
push
test
outsb
iret
out
das
imul
dec
popa
add
add
in
loopne
inc
mov
jbe
dec
inc
sti
cmp
popf
loopne
incb
fmuls
cwtl
jmp
sbb
xlat
pop
push
in
sahf
and
cltd
xor
mov
cli
xchg
inc
lahf
repnz
and
dec
mov
xor
jo
mov
ja
mov
ja
mov
jae
rorb
sub
push
or
sahf
or
sbb
lahf
pop
fildll
or
cmp
movsb
popf
shll
push
push
mov
xchg
sbb
pop
out
push
jbe
add
sub
movsb
cmp
add
adc
in
mull
leave
cwtl
pop
sub
es
jge
cmpsb
or
nop
and
cld
mov
inc
mov
or
fwait
sbb
mov
stos
push
sub
cmp
daa
jns
mov
jne
inc
mov
mov
mov
data16
push
jg
insl
pop
aam
cs
ds
lret
in
or
pop
push
mov
push
push
in
inc
mov
outsl
pop
pop
test
push
cltd
or
jne
insb
mov
call
mov
shll
sub
subl
inc
push
or
cmpsl
clc
iret
stc
inc
std
jo
fcomps
pushf
mov
xchg
fs
cmpsl
add
in
push
js
xchg
mov
cltd
inc
jp
pop
daa
add
mov
jl
mov
dec
mov
jle
sub
sbb
fisttpll
add
xchg
movsb
addr16
bound
cmp
mov
inc
pop
xchg
roll
push
jnp
lods
gs
pop
daa
jne
pop
adc
or
fwait
sbb
cmp
js
stos
shrl
dec
xchg
xor
jo
dec
add
xor
fwait
sarb
popa
test
jns
sbb
add
pop
mov
xor
cwtl
and
adc
xor
jg
aad
mov
imul
inc
inc
jp
push
adc
ret
adc
int3
in
push
cmp
fisubl
fcomps
icebp
mov
xchg
rcll
stc
adc
push
xlat
mov
or
lods
mov
push
mov
sub
je
sub
leave
ret
inc
adc
insl
sbb
pop
in
mov
popf
ret
popa
imul
cmp
or
dec
rol
push
int3
pop
xchg
fisubrl
cmpsl
cmc
sub
int3
cmpsl
faddp
push
and
pop
mov
ficompl
fcomps
test
scas
cwtl
std
in
mov
push
mov
cmp
sbb
subl
inc
popf
and
ret
jb,pn
pushfw
push
cltd
daa
push
gs
sub
out
inc
sub
add
or
cmp
and
outsl
fmull
push
nop
aaa
xor
fmuls
jge
imul
dec
ret
or
mov
fidivrs
ss
gs
cli
stos
dec
jp
out
mov
mov
push
fistl
adc
or
loopne
fisubs
cwtl
dec
xchg
jns
daa
jmp
inc
cmpsb
pop
lret
scas
and
inc
repnz
xchg
fadds
cmp
mov
xorl
and
rolb
push
jp
jl
sarb
mov
inc
sub
cmp
dec
push
icebp
int
cmp
clc
dec
xlat
jecxz
push
mov
cli
jo
jmp
daa
stos
and
out
je
sub
out
and
add
jmp
scas
sbb
out
int3
inc
pop
insb
pop
mov
mov
pop
inc
and
inc
mov
mov
loop
stos
cmp
addr16
fldt
mov
add
test
mov
sahf
int3
nop
jns
cmp
ss
mov
test
sar
adc
test
daa
mov
sub
push
ret
mov
adc
mov
inc
repz
add
jns
arpl
cmp
and
pop
push
lahf
push
pop
pusha
in
lock
mov
daa
scas
jbe
jno
mulb
cmpsb
adc
inc
shrl
lcall
dec
cs
cmp
jecxz
call
in
cmp
in
cwtl
xor
out
jno
lcall
sbb
dec
or
xlat
jb
test
and
shl
dec
gs
aad
lods
cmpsb
rcr
testb
sub
inc
mov
jmp
loopne
scas
sbb
test
ja
popa
in
adc
jle
dec
adc
popa
mov
dec
mov
in
in
insl
cld
test
dec
and
cmp
add
loopne
insb
jmp
xchg
dec
repnz
ja
sbb
add
inc
es
ret
mov
shll
inc
loop
add
rcrb
add
int3
ljmp
adc
fbstp
push
icebp
mov
adc
cltd
sub
divl
or
lods
imul
jl
push
addl
pop
in
test
outsb
xchg
int
push
push
dec
mov
mov
cmpl
loopne
loopne
and
stc
cmpsb
push
lahf
jae
cwtl
int
xchg
addr16
xlat
jmp
out
divb
test
mov
int
fisubrs
clc
push
jb
mov
out
cli
push
movd
cmpsl
xchg
out
inc
or
pop
xchg
push
in
add
cmp
cmpsb
jle
jne
insl
mov
or
in
test
sbb
nop
in
xor
adc
rol
cmp
enter
sbb
pop
outsb
or
je
test
lret
pushf
inc
jnp
adc
pop
dec
xor
cmp
mov
and
ret
pop
mov
pusha
xor
mov
mov
cli
cmpsl
jp
cmpsb
stos
inc
pusha
or
popf
repz
inc
cmp
cmpl
mov
or
scas
movsb
sbb
mov
or
inc
ja
xchg
inc
fs
into
inc
movb
clc
adc
push
rcr
mov
and
ljmp
mov
fdivs
cmpsl
push
bound
test
mov
pop
dec
cmp
mov
ds
mov
pop
mov
ja
mull
int3
push
outsl
sar
push
cmp
mov
clc
cwtl
scas
loopne
andl
mov
lods
jb
inc
and
ds
sbb
jnp
outsb
pcmpeqd
mov
ficoms
sti
mov
shrl
or
fisubrl
leave
orb
dec
pop
fs
negl
pushaw
inc
call
jmp
mov
rorb
push
xor
mov
cmpsb
mov
shll
fnstenv
lds
icebp
ja
movsb
rclb
mov
mov
scas
add
negb
fsubrl
ss
or
xchg
and
repnz
or
in
pop
pop
test
insl
hlt
daa
bound
add
mov
mov
repz
shlb
cmc
xchg
inc
fs
lret
cwtl
nop
jne
out
clc
aaa
inc
xorb
mov
jge
dec
xchg
inc
xor
pop
sahf
mov
fs
ja
adc
xor
push
outsb
pop
scas
adc
xchg
stos
push
scas
dec
scas
jg
mov
cmp
adc
cmp
dec
mov
add
mov
frstor
fwait
int3
adc
mov
ljmp
ds
packuswb
sbb
rorb
xor
mov
pop
adc
mov
adc
sbb
add
mov
jle
xchg
dec
push
push
adc
cmp
cld
xchg
into
ret
faddp
test
mov
mov
gs
dec
fistpl
pop
pop
jp
rcrb
mov
out
rcrl
and
sub
cltd
and
inc
outsb
jb
inc
loope
dec
add
cmp
aam
jle
mov
push
mov
out
fldz
xor
stos
dec
cld
in
xor
leave
stc
arpl
mov
test
scas
jb
out
xchg
inc
cltd
call
imull
insb
dec
and
pop
fwait
mov
mov
pushf
adc
or
mov
sbb
push
inc
aam
ljmp
inc
jnp
cmpsb
dec
pop
sub
inc
mov
jmp
mov
hlt
gs
fstl
inc
mov
dec
pop
or
insb
mov
adc
shrl
cmpb
fmul
sahf
loop
sahf
fimull
in
emms
xor
mull
rcr
int3
arpl
test
push
std
dec
jmp
jne
or
jno
scas
cwtl
outsl
sbb
addr16
dec
pop
xorl
in
fstp
mov
insl
xchg
out
cmpsb
and
mov
movsl
jecxz
dec
ja
pop
jne
cmp
push
adc
dec
mov
mov
push
jne
insb
sub
loope
cmp
pusha
and
jl
mov
jne
sub
dec
dec
xchg
sbb
sbb
sub
jns
pop
std
inc
arpl
adc
iret
and
int
xor
xchg
xchg
adc
jmp
mov
movsb
xchg
rcl
fcmovb
dec
cmp
jb
adc
mov
and
ss
jmp
incb
mov
movl
adc
jmp
jge
inc
jb
dec
lahf
jp
fildll
and
sbb
jo
adcl
xor
or
and
bound
repz
cmp
mov
es
xchg
repnz
fstpt
push
imul
ret
lret
xor
notl
mov
iret
cld
sbb
adc
xchg
xchg
ds
xchg
and
adc
test
mov
out
jne
aam
inc
cltd
add
sbb
sub
fcomip
ds
cmpsb
push
sub
xchg
test
iret
iret
mov
sbb
or
rcr
test
sub
into
mov
adc
jl
push
and
ljmp
addb
pop
sbb
xor
lret
lock
lret
or
push
cmp
xor
sbb
int
push
or
jg
jge
push
jns
lds
rclb
ja
testl
xchg
lds
push
push
push
inc
inc
xlat
and
mov
stos
xorb
or
sbb
and
int3
mov
add
aas
hlt
repz
add
mov
leave
mov
data16
sub
rclb
outsb
aaa
idivb
add
jle
cwtl
push
mov
scas
insl
xlat
inc
push
xor
sub
das
mov
inc
jbe
aad
shll
push
mov
shrl
adc
xlat
cltd
lahf
ljmp
les
rcr
cmc
add
les
int
stos
sub
shlb
pusha
shr
or
cmpb
and
xchg
sbb
insl
mov
lock
inc
clc
and
add
scas
in
lsl
fnstenv
call
mov
dec
movsb
dec
nop
dec
das
adc
dec
pop
pusha
mov
repz
ret
mov
ret
mov
sub
sub
mov
jle
lret
dec
mov
rcrb
xchg
shrl
inc
scas
jge
mov
mov
icebp
jg
rcl
jle
inc
in
mov
or
push
pusha
out
inc
test
jno
js
xor
jle
sub
into
movsb
mov
jmp
xor
cmp
pop
xchg
lret
push
fadds
sbb
mov
or
push
jno
mov
sbbb
push
pop
pop
jp
push
adc
inc
out
push
aas
fimull
add
sarb
popa
jne
dec
mov
aam
and
mov
pop
pop
sub
mov
shrl
push
add
mov
shl
cld
insl
rcr
jae
stc
push
aas
aam
in
push
pop
out
cmc
jmp
inc
push
in
or
fnsave
mov
fcmovnb
mov
and
push
jp
cltd
inc
or
jo
lea
ds
or
pop
cmp
mov
mov
sbb
fisubs
jp
stos
adc
add
out
jg
xor
shlb
jbe
mov
out
icebp
dec
mov
or
mov
push
fiaddl
cmpsb
sahf
test
inc
cmp
popf
lods
pop
mov
mov
lret
adc
dec
mov
lret
jp
stos
xor
xchg
pop
std
jae
inc
bound
insb
mov
arpl
movsl
loope
insb
sub
std
sub
ja
ret
ret
pop
outsb
fstl
enter
pop
sbb
cmpsl
or
stc
dec
int3
repnz
pop
testb
push
test
pop
ret
arpl
pushf
cmp
inc
lret
xchg
add
daa
mov
loopne
mov
data16
int
lret
add
mov
jp
js
js
leave
adc
mov
test
cmp
push
pop
jns
xchg
mov
pop
xchg
add
movsb
pop
push
or
lods
mov
test
cltd
xchg
push
pop
cmp
cld
mov
dec
mov
sub
sub
daa
pop
dec
shrl
in
cmp
adc
ror
fmuls
rol
int
sub
rcrl
and
cmp
fcoms
movsl
stos
adc
push
jp
xchg
leave
jl
inc
lret
out
mov
mov
jge
push
or
push
xchg
fiaddl
adc
cmp
inc
inc
mov
xchg
aaa
push
dec
ret
aam
adc
icebp
fildll
dec
push
pop
jl
inc
enter
int3
add
pop
push
sahf
cmp
js
out
or
in
loop
out
push
js
mov
xlat
pop
cmp
sub
clc
ficompl
or
enter
mov
lods
das
sbb
or
es
push
sbb
loop
std
cmp
mov
add
cld
scas
jg
aaa
mov
jp
pop
int
xor
cmp
adc
push
in
lcall
fdivs
add
and
je
dec
aas
adc
or
jle
jecxz
test
outsb
aaa
sbb
mov
into
lods
out
dec
mov
dec
js
jne
incb
mov
stc
fnstsw
stos
in
xchg
adc
xchg
out
cwtl
mov
or
std
push
inc
dec
or
sub
sarl
call
push
dec
xchg
ficomps
movsl
mov
jnp
mov
cwtl
cmp
xchg
out
mov
xchg
out
fldl
stc
negb
js
jmp
fisubrl
mov
push
cmp
mov
mov
or
mov
out
sbb
andb
mov
ja
into
jmp
cli
mov
mov
in
inc
ss
lahf
int
mov
clc
imul
pop
pop
out
rcll
push
cli
aaa
cli
mov
xchg
clc
inc
xor
mov
shlb
xor
push
xchg
arpl
aad
pop
pop
cmpb
aad
es
iret
scas
test
ficoms
cld
test
sub
mov
incb
xchg
mov
sbb
aam
iret
jo
mov
jb
mov
inc
push
add
pop
outsb
loope
mov
idivl
inc
sbbl
mov
cltd
test
movsl
test
bound
fnstenv
fnsetpm(287
out
jp
pop
fs
jecxz
adc
mov
out
fstpt
push
movsb
repz
mov
jb
mov
das
filds
jmp
setne
test
fcoms
pop
adc
jge
push
push
pop
addl
inc
jle
jne
xchg
jp
push
mov
insb
dec
divl
movsl
lods
mov
pop
jnp
rol
stos
mov
lds
aad
gs
stos
xchg
mov
mov
test
add
sbb
loop
test
inc
jl
mov
and
push
cmpsb
mov
mov
lcall
loope
xchg
ds
mov
arpl
xchg
cwtl
sti
jp
xor
mov
lods
ss
cmpsl
out
mov
mov
sarl
dec
or
test
andl
fucomp
xchg
jo
scas
pushl
cmpsl
lahf
push
cmp
lock
pop
lahf
js
mov
adc
push
pop
call
daa
push
shlb
xchg
pop
add
iret
cmc
scas
ror
xchg
in
pop
int
xchg
mov
pop
push
scas
ret
jmp
jno
mov
mov
in
pop
lret
jno
push
sbb
sbb
xchg
shl
ds
fabs
mov
ret
inc
out
cwtl
xchg
dec
sbb
ficoml
das
sbb
test
mov
aad
shlb
into
das
mov
sbb
push
mov
xor
out
xor
testb
mov
push
inc
pop
mov
bound
xchg
xchg
outsl
test
aam
ds
test
cmpsb
arpl
xor
push
xchg
es
cmp
sub
loopne
pushf
and
fstps
inc
aaa
pop
xor
popf
jnp
jno
jno
icebp
mov
call
lds
mov
fidivrs
loop
or
shll
iret
test
faddl
pusha
add
insl
jmp
inc
pop
xchg
mov
jge
inc
cmp
jns
mov
xchg
aaa
mov
inc
in
adc
lods
je
jns
adc
mov
cmpsb
xor
in
adc
jo
and
aad
pop
in
fldcw
test
repnz
cmpsl
lock
aas
sub
outsb
dec
sub
adc
les
fisttpll
data16
imul
xor
jae
fwait
pushf
adc
lret
inc
stos
xchg
push
aaa
cmp
orl
or
fcompl
fsubrs
rorb
sbb
mov
or
pushf
popf
sbb
push
sbb
push
jbe
mov
dec
aam
inc
sbbb
call
sbb
roll
out
cmpsl
negl
roll
lea
fsub
ret
sbb
inc
mov
out
sbb
adc
push
or
jns
sbb
pop
mov
sbb
test
or
inc
inc
es
das
insl
imul
sti
mov
sub
sub
sub
xchg
insl
or
pop
push
cltd
je
addl
loop
stos
ret
push
test
enter
lock
outsb
das
andb
mov
sbb
sbb
ss
fstl
mov
fidivrl
mov
popf
cmp
lock
dec
out
mov
loopne
out
gs
add
inc
aaa
sbb
push
repz
arpl
fildll
dec
sbb
mov
jb
dec
data16
ret
rcll
pushf
es
push
lods
lods
add
push
addb
xor
mov
mov
jno
call
ljmp
mov
inc
in
imul
shrl
mov
sbb
mov
mov
clc
cmp
out
push
outsb
jge
out
add
lea
and
fidivl
notb
and
call
ror
jmp
aaa
add
xor
push
sbb
aad
or
cli
negb
dec
jp
xchg
jo
mov
pop
xchg
or
pop
adc
mov
imul
call
or
add
push
mov
sbbb
ficoml
pusha
repz
cli
fdivrl
inc
or
scas
stos
push
daa
fdivrs
mov
jecxz
mov
movsl
fcoms
jge
mov
in
js
fisubrl
sti
iret
pop
sbb
add
out
mov
lea
out
insb
je
stc
add
jbe
dec
mov
stos
mov
and
sub
aas
jno
cmpsl
out
jg
or
clc
push
out
inc
xchg
loope
inc
imul
and
mul
add
add
pushf
stc
xchg
mov
out
xchg
push
cmp
or
mov
sbb
rorb
movsb
inc
cli
adc
xchg
push
loopne
pop
inc
shlb
cmp
arpl
repnz
cmpsl
out
imul
push
call
sbb
test
pop
push
hlt
mov
jl
mov
xor
mov
and
mov
je
cld
and
popf
dec
mov
mov
or
iret
lret
insl
imul
jnp
jge
aas
fbstp
jl
stc
mov
cmpsb
add
incl
mov
push
inc
outsl
call
or
stos
imul
stos
mov
int
xor
jmp
addr16
sub
cmp
leave
popf
dec
jg
mov
inc
cmp
aad
fidivrs
mov
out
das
vpavgb
inc
stc
cmc
into
mov
add
or
mov
xor
call
push
mov
rcll
xchg
dec
jb
jl
popf
lds
clc
sbb
sbb
and
shrb
and
and
inc
adc
pop
arpl
jne
rcrb
push
fwait
cmp
xchg
xchg
test
xlat
mov
or
pop
jnp
inc
or
into
mov
imul
mov
sti
mov
stos
fisubl
call
jnp
cmpl
push
negl
push
call
push
pop
pop
fcoml
push
popl
addr16
andb
outsb
movsl
mov
add
inc
sbb
push
mov
movl
out
aad
push
insl
dec
pop
bound
mov
inc
or
imul
pop
adc
or
mov
arpl
mov
cmp
push
pop
notb
out
fnsave
stos
hlt
adc
xor
shr
mov
sti
mov
shrl
add
rcrl
sbb
lret
ljmp
sbb
jbe
bound
cmpsl
insl
cmpsl
inc
inc
or
pop
dec
fstcw
push
jge
inc
outsb
loop
push
test
jl
popa
lds
lods
stos
push
outsl
mov
cmp
rorb
sti
add
cltd
inc
in
test
adc
push
push
or
ret
adc
adc
ss
je
nop
sub
outsb
imul
enter
jb
pop
xlat
fdiv
test
and
sub
out
add
hlt
push
ficoms
fwait
push
loopne
dec
fmuls
sub
jae
dec
push
fcoms
scas
push
sbb
xchg
cwtl
popf
push
push
jne
aaa
inc
xlat
cli
addr16
lock
cmpsl
and
scas
mov
dec
push
or
lahf
or
stc
nop
pushl
cmp
sub
inc
negb
pop
mov
popf
sbbb
pop
push
in
imul
push
xchg
cmp
jmp
mov
dec
mov
dec
cmp
jl
dec
ljmp
sbb
or
je
daa
mov
negb
dec
mov
or
jno
dec
stos
pop
dec
jecxz
and
pushf
add
jl
push
push
xchg
es
push
lret
enter
popf
adc
mov
pop
insb
xor
sbb
pop
aas
cmp
jmp
lcall
pop
push
das
mov
xchg
nop
inc
jecxz
out
inc
icebp
sub
cs
bswap
mov
xchg
iret
fstp
xchg
sub
sbb
cmp
dec
daa
fimull
and
cmovge
out
add
icebp
call
lods
loope
popa
sti
pushf
or
mov
mov
jno
adcb
arpl
ss
pop
and
push
sbb
pop
push
imul
jnp
jns
testb
inc
fisubl
cwtl
xlat
xor
xor
mov
ljmp
call
xchg
movsl
dec
mov
push
mov
popf
in
fistpl
test
pop
stos
scas
push
sbb
and
pushf
in
jge
pop
push
pop
test
xchg
xlat
or
sub
push
inc
mov
push
std
lret
pop
fdivrp
mov
add
jge
subb
imul
adc
mov
bound
out
or
fadds
adc
stc
cmc
imul
jo
in
cmp
outsb
dec
mov
imul
mov
mov
jge
mov
jl
mov
mov
push
xchg
lret
mov
adc
cli
mov
test
sub
xor
popf
jp
cmp
add
sub
scas
in
sub
into
jbe
lds
sub
movsb
loopne
shrb
stos
sub
stos
or
push
inc
xchg
sub
ror
sbb
xchg
and
pop
mov
xor
sub
fsubs
or
xlat
sbb
sbb
push
bound
popa
xor
cltd
xor
je
scas
aad
jo
rcrb
push
pop
pop
push
imul
out
jecxz
fwait
xor
inc
xor
push
lock
adc
xchg
adc
mov
xor
inc
mov
push
incb
pop
pop
mov
and
mov
mov
pop
out
mov
cmc
add
repz
mov
push
sahf
aad
arpl
es
cld
xchg
mov
std
and
jmp
ja
push
push
cmp
dec
sub
add
cld
or
adc
inc
mov
xchg
push
ja
aas
mov
repnz
push
dec
mov
pop
adc
ss
xor
imul
mov
addr16
orb
insl
leave
add
out
mov
out
xchg
test
movsb
lock
dec
mov
addr16
add
mov
test
inc
dec
insb
gs
lods
xchg
xor
ljmp
movsl
mov
add
pop
lock
stos
jne
xchg
pop
repz
out
mov
pop
stos
out
addr16
test
int
inc
pop
mov
loopne
sub
nop
fwait
movsb
xor
mov
ds
and
lea
dec
lds
ja
xor
adc
fsubl
aaa
adc
adc
push
cmp
pop
xchg
push
fsubl
lock
incb
inc
ds
xor
push
lock
dec
daa
inc
jmp
data16
out
arpl
xchg
sbb
mov
and
repz
inc
sbb
cmp
andl
int
sbbl
and
outsb
imul
mov
ret
push
int3
in
negl
imul
rolb
sbb
repz
inc
xchg
dec
and
pop
lcall
cld
imul
fcmovne
js
lahf
cmc
mov
mov
xchg
aam
leave
jne
inc
xorl
ss
add
inc
dec
es
popa
pop
bound
mov
adc
lea
inc
pop
push
imul
out
inc
mov
xor
xorb
and
pushf
adc
inc
addl
shl
xchg
fwait
push
sub
add
jns
ret
mov
xor
fistps
mov
add
mov
js
mov
int3
scas
xor
pop
in
sbb
in
mov
lahf
call
sbb
sub
inc
scas
mov
lods
imul
popa
es
or
cmpl
mov
inc
jno
ret
scas
mov
or
adc
jb
dec
cmp
in
sti
cwtl
and
push
ret
adc
aas
shl
sub
insb
pushf
arpl
xor
cld
cmpsb
test
and
clc
add
pop
enter
notb
add
iret
mov
les
cmpsb
insl
clc
jae
testl
dec
pop
pop
sbb
stos
and
add
out
movsb
sub
scas
jl
cs
cmpsl
push
xchg
bound
or
mov
push
push
data16
add
mov
add
mov
fsubr
test
pusha
das
cwtl
aad
sahf
xor
and
pop
movsb
addr16
push
fs
dec
pusha
out
loope
lcall
or
pusha
and
sbb
pop
push
ror
push
lods
dec
jge
bound
clc
push
jmp
shl
or
add
int
dec
xchg
ja
jecxz
dec
lahf
jp
aaa
cld
cmp
or
hlt
pop
push
int
inc
in
jno
call
push
inc
adc
xchg
mov
fisttpl
sarb
rol
ss
cmp
mov
or
notb
gs
dec
cli
cmp
push
mov
int
push
pop
push
lds
dec
mov
nop
in
xchg
sahf
cs
ja
pop
push
leave
lret
mov
dec
cltd
das
js
cmp
cmp
lods
lret
ret
mov
jp
test
into
dec
xor
add
testl
xchg
cmp
nop
call
pop
cwtl
sbbl
push
mov
insl
pop
push
insl
jno
shl
dec
ret
loop
push
and
adc
cmc
shll
dec
in
jns
sub
stc
jo
aam
mov
ret
mov
ficoml
scas
dec
jecxz
aad
cmpsl
movsb
or
dec
jecxz
cmp
adc
add
movsl
push
aad
mov
xlat
push
in
clc
add
lret
clc
push
xor
enter
or
pop
xchg
mov
mov
push
dec
loop
flds
dec
sbb
push
adc
incl
push
inc
push
or
inc
insl
pop
jnp
xor
xchg
pop
in
loope
andb
sbb
subb
in
test
aad
mov
ja
fsubp
add
mov
and
xchg
jbe
jg
repz
dec
sub
test
mov
faddl
lods
std
inc
mov
daa
pusha
push
test
cltd
mov
dec
mov
sbb
clc
fcmovnb
pop
lcall
pop
ljmp
mov
sbbb
addb
repz
daa
fcmovbe
mov
test
adc
nop
push
jno
test
out
ljmp
iret
and
jp
stos
mov
mov
js
add
mov
dec
jle
xor
sbb
jnp
lret
mov
pop
notb
mov
jo
mov
stos
mov
scas
lahf
jle
nop
inc
pop
iret
aas
sub
mov
ja
or
and
add
jge
fnstsw
in
loopne
pop
outsl
lret
cmp
pop
insl
pushf
mov
hlt
add
cmp
into
dec
test
xor
enter
das
repnz
cli
jae
test
imul
shrl
xchg
aad
pop
dec
push
cwtl
and
gs
gs
mov
inc
sub
fsubs
lret
jmp
inc
jg
idiv
fildll
and
cld
mov
dec
lea
in
jns
scas
outsb
cmp
mov
push
cmc
es
rcrl
stos
in
stc
pop
in
cmp
jne
mov
ret
push
lock
inc
fistps
rolb
into
sbb
xchg
sarb
sbb
push
lds
jae
pop
pop
inc
ret
push
nop
ljmp
mov
dec
jns
push
fucomp
sub
in
ljmp
adc
adc
jge
insl
stc
jge
xchg
aas
pop
inc
scas
inc
mov
add
clc
and
push
loop
mov
ljmp
ret
fldl
sbb
jp
cmp
add
mov
int
aaa
sbb
cwtl
jg
lret
pop
inc
mov
xor
jne
aaa
sbbl
test
jae
nop
mov
jb
test
push
mov
movsb
sti
push
test
not
mov
mov
outsl
sub
adc
push
into
mov
lods
cmp
test
icebp
and
sub
sbb
adc
in
cmp
xchg
adc
movsl
cwtl
mov
sbb
and
dec
cmp
ljmp
hlt
and
sub
or
jo
sbb
scas
pop
push
in
xchg
sbb
sub
jg
and
ds
cmpsb
jno
xchg
push
sbb
mov
pop
int
scas
inc
test
lret
xor
dec
jecxz
and
pop
ffreep
pop
lods
push
aas
lds
lcall
push
dec
and
push
orl
mov
cwtl
jge
cmc
mov
adc
mov
cmp
inc
dec
cld
shll
movsb
or
or
or
push
cmc
push
xlat
add
pushf
pop
xchg
mov
enter
movsb
mov
scas
popa
mov
mov
push
cwtl
ret
lock
pop
mov
subb
and
ja
std
lcall
mov
push
ficompl
nop
cs
sub
test
mov
test
lahf
imul
lahf
adc
jo
mov
neg
mov
movsl
pop
arpl
xor
inc
in
jle
pushf
inc
or
cmp
or
mov
scas
mov
or
jo
jle
bound
adc
mov
jbe
fdivrl
out
loopne
jne
push
loopne
push
and
cmc
adc
and
add
out
push
or
jae
push
and
jb
and
jno
fdivr
lret
iret
outsl
aas
rorb
cmpsl
and
aaa
sub
sbb
pop
mov
les
push
test
cmp
inc
cs
pop
add
fcomps
cwtl
ljmp
pop
inc
js
stc
popf
mov
loope
xorb
fdivrp
loopne
pushf
pop
pop
out
les
cmp
inc
sub
pop
inc
ror
outsb
fmul
rcrb
and
sub
mov
or
es
jecxz
imul
sub
xchg
jo
pop
mov
bound
xchg
mov
cmp
dec
lock
push
cmpsb
xchg
xor
addr16
adc
nop
sbb
repz
mov
out
testl
and
jp
adc
stos
aaa
add
inc
mov
shrb
cmpsl
mov
inc
or
loope
in
xchg
nop
lods
sbb
jns
cwtl
les
jo
push
lahf
or
cmpsb
imul
mov
inc
fdivrl
das
push
fistps
stc
out
dec
aas
sub
inc
iret
int
ffreep
loopne
xchg
stos
push
into
cmp
aas
inc
push
dec
add
leave
push
rolb
xchg
mov
push
aaa
adc
sbb
and
fyl2x
repz
xchg
inc
sti
pop
cmp
sbb
mov
add
jo
push
mov
push
inc
mov
cmp
sbb
test
aaa
sbb
sub
sbb
mov
adc
addr16
xchg
das
mov
xor
and
pop
fbstp
jbe
inc
xor
movmskps
cmp
test
rorb
les
fwait
divl
in
add
in
std
add
imul
sub
es
addb
movsb
ficompl
xchg
enter
push
sub
cmp
xor
push
std
lcall
insl
xor
sbb
adc
jns
mov
aas
sti
into
dec
inc
hlt
jp
or
pop
test
mov
dec
popf
movsb
push
jmp
scas
and
hlt
fcmovb
stc
cmp
and
mov
push
mov
mov
dec
pop
sub
clc
movsl
pop
lcall
mov
sbb
xor
jb
mov
adc
ljmp
ret
sub
push
shlb
lods
sub
pop
in
cmc
cmp
mov
scas
jae
jae
or
xchg
mov
jbe
inc
ret
adc
adc
nop
push
aam
sub
ds
out
xor
mov
jae
lea
cltd
jge
hlt
adc
les
icebp
fildl
sub
inc
push
ficomps
add
mov
data16
xor
enter
jg
jecxz
jmp
stos
lds
cmp
adc
xchg
pop
sub
mov
out
mov
lret
or
xor
pop
jle
inc
sub
cmp
push
stos
mov
pop
sub
xchg
sub
mov
loope
xor
jbe
xchg
rorl
in
mov
mov
lret
testl
lahf
and
cmp
incb
in
aam
fwait
lret
inc
out
pop
sbb
je
punpckldq
inc
sub
dec
adc
inc
mov
push
inc
jno
aam
aam
pop
scas
call
cmp
aam
mov
sbb
clc
or
lahf
and
les
and
imul
stc
or
inc
aas
dec
loopne
add
push
je
and
inc
cli
push
xor
jmp
rep
daa
aam
mov
mov
jns
popf
fistpl
xchg
cmc
outsb
xor
dec
mov
lock
roll
dec
xchg
ret
testb
dec
testb
add
mov
repnz
or
ret
shrb
xchg
fcoml
and
ljmp
mov
cmp
sbbl
imul
dec
fwait
xor
mov
int
pop
pop
data16
pop
or
enter
sahf
add
in
mov
stos
sbb
adc
add
iret
idivb
or
xchg
mov
push
jbe
ret
shl
pop
cmp
adc
sbb
mov
lahf
push
ja
movsb
jo
ficompl
pop
or
test
xchg
pushf
jge
lahf
cmpsb
in
leave
insb
jg
ja
xor
mov
jecxz
inc
sbb
jne
adc
cmpsb
loop
je
int3
mov
xchg
aad
ret
add
dec
mov
pop
push
inc
lahf
ret
sbb
sbb
pop
mov
repz
cmp
xor
mov
jge
adc
insb
adc
cli
into
std
ja
or
pop
or
add
push
or
add
andl
loop
xchg
lar
bound
mov
in
insb
icebp
xor
iret
in
inc
into
mov
push
jns
fsubl
push
push
pop
rcrl
inc
lret
jl
hlt
subl
out
ret
push
xchg
adc
and
js
cmp
cltd
pop
fdiv
in
and
dec
mov
les
inc
scas
mov
xorl
cmp
in
enter
loopne
adc
xor
ljmp
pop
fwait
lret
xchg
out
sbb
pop
cs
push
jb
or
push
testb
sbb
out
divb
call
pop
mov
push
stos
into
push
xchg
jecxz
jb
in
loop
shrl
cmpsb
fnstenv
pop
ja
jo
pop
xchg
sub
mov
pop
cmp
pop
xchg
fnstsw
outsl
out
mov
rcrl
pop
push
repz
sahf
aas
sbb
mov
xor
or
mov
cmpb
ret
cmp
in
jnp
jge
sub
loope
mov
lret
lret
dec
cmp
sub
pop
andb
movsb
jb
add
jb
divl
push
pop
xorb
inc
fadd
iret
rclb
lret
jo
out
fistl
addr16
mov
nop
sub
mov
repz
fsubr
pushf
addl
sub
insb
push
leave
sub
in
pop
push
or
imul
jbe
push
mov
and
pop
push
fdivs
lret
ret
mov
arpl
mov
fwait
adc
shl
mov
shlb
mov
sarb
jmp
das
aaa
clc
enter
and
arpl
dec
mov
cmp
xchg
xchg
enter
je
hlt
mov
pop
int
push
cli
scas
scas
or
outsb
out
mov
jns
xor
mov
rorb
cmp
ds
ret
inc
jns
and
movsb
mov
lcall
cmpsb
inc
cld
pop
xlat
outsl
dec
mov
cmp
std
lret
xchg
scas
filds
jl
sub
loope
repnz
aam
lods
int3
mov
sub
mov
cs
in
popf
mov
jnp
ljmp
mov
sub
adc
mov
sti
inc
cmp
sbb
pushl
out
stos
inc
pop
mov
inc
inc
dec
imul
es
mov
stc
dec
daa
mov
fisubs
mov
xchg
push
xor
mov
mov
daa
and
mov
jge
subb
xchg
adc
lret
push
xchg
jg
js
cmp
pop
cmp
push
cwtl
push
scas
hlt
pop
and
cmpsb
add
push
scas
xchg
rclb
mov
imul
outsb
bound
xchg
lods
pop
xor
push
ljmp
sub
jge
inc
cli
lret
mov
lahf
mov
xchg
cmpsb
test
sbb
mov
inc
sbb
nop
int3
shlb
jg
inc
sbb
nop
lods
or
sahf
pop
inc
sub
mov
and
jge
clc
jecxz
dec
outsb
mov
or
pushf
repnz
aas
roll
imulb
ja
es
shrb
xchg
nop
ss
jg
pop
ret
mov
fsubr
lds
fwait
inc
rcl
pop
out
pop
lock
sbb
adcl
icebp
inc
loop
sub
pop
jl
adc
push
lds
push
jbe
push
pop
lods
or
mov
lock
inc
cmp
test
test
sbbb
cmp
mov
pop
jb
in
jg
out
enter
mov
pop
fidivs
lahf
lret
inc
scas
fiadds
leave
adc
xchg
mov
enter
daa
stos
les
push
sbb
jp
push
pop
cmp
xchg
push
push
ss
cmp
test
orl
or
xor
xchg
cmpl
mov
out
mov
bnd
loope
in
mov
mov
movsb
sub
call
repnz
sub
rcll
adc
mov
aaa
in
mov
das
push
dec
push
daa
jp
in
cmpsb
adc
test
shlb
inc
fisubrs
rcrb
mov
adc
adcb
cmpsb
fprem1
cmp
cmpsl
adc
gs
sub
xorb
and
cmpsb
push
push
inc
hlt
or
aad
pop
rol
mov
push
xchg
push
sub
fs
pop
insb
inc
cmpsb
jns
push
movsb
into
cltd
sbb
and
and
jmp
cs
fdivrs
leave
inc
rorb
in
cld
mul
add
cmp
cmpsb
dec
sub
repnz
in
stos
inc
xor
xchg
ljmp
orb
cmp
sbb
mov
cmpsl
cmp
fisttpl
and
xchg
shr
pop
inc
sbb
dec
xor
jle
ret
cmp
out
dec
cmp
jae
or
and
test
sbb
std
lods
jmp
jecxz
fsubrl
outsb
push
sbb
data16
fdivs
lret
xor
or
cmp
outsl
int3
cld
xor
ret
lds
mov
sbb
and
shrb
fisttpl
mov
fcmovnu
sbb
sub
jae
icebp
stos
sub
pop
lahf
xor
out
aam
fidivs
loopne
std
jnp
pop
jns
mov
lods
dec
in
mov
fcomps
arpl
sub
aaa
lods
pushl
jnp
lods
subb
or
and
aas
mov
adc
cmpsb
vmovaps
sbb
inc
xchg
inc
repnz
aaa
aad
gs
das
aaa
jge
pop
dec
in
leave
inc
xlat
aaa
cmc
cmpsb
sbb
mov
icebp
mov
mov
cmpl
aas
out
jnp
jae
adc
fistps
out
push
jae
test
mov
orb
xor
fistpl
and
sub
repnz
int
add
push
lahf
or
mov
sub
mov
out
jecxz
jge
gs
sub
sahf
bound
rolb
mov
loopne
adc
popf
jge
ja
das
outsl
out
cmpsb
jg
cmpl
ret
ficoms
sub
test
push
add
jecxz
dec
adc
xor
push
gs
jb
popa
in
dec
loop
stc
std
adc
jmp
pop
loope
outsb
rorb
cmpsl
in
inc
ljmp
or
push
stos
frstor
shrb
dec
cmpsl
fdiv
xchg
movsl
jecxz
es
jg
lret
loop
test
fwait
add
xchg
int3
xor
testl
or
xor
xchg
data16
xchg
sahf
jl
sub
js
cltd
cmp
and
cmpsl
imull
in
and
pop
cmp
xor
push
arpl
popf
aam
push
or
sti
incl
cmpsb
shlb
pop
xchg
mov
lock
dec
dec
or
cmp
stos
jbe
mov
xchg
in
mov
mov
mov
arpl
stc
loopne
in
rclb
cmp
xor
xor
je,pn
add
pusha
fistps
add
lea
sbb
push
or
adc
std
sbb
sahf
mov
out
mov
pushf
sub
fcmovnb
and
mov
pop
lods
scas
push
loope
ss
mov
lret
pop
inc
enter
mov
jmp
xor
dec
pop
divb
pop
mov
lods
popa
call
sbb
inc
dec
mov
sbb
push
mov
cs
dec
lret
mov
out
aad
push
xor
or
xor
and
into
jno
sar
rcrl
cmp
dec
push
jne
cltd
sbb
loop
das
mov
mov
jle
adc
or
dec
mov
mov
jg
pop
and
xchg
and
movl
gs
lods
testl
scas
and
push
pop
test
test
gs
pop
cli
xchg
mov
lea
pop
dec
test
rorb
sarl
and
repz
and
pop
addl
or
xlat
jbe
movb
in
mov
jo
ja
pop
lods
fsubs
cmpl
outsl
sbbl
xor
fbstp
test
cmp
push
imul
mov
mov
pop
cmp
pushf
movsb
sub
xchg
add
push
scas
movb
push
sub
nop
sti
mov
popa
mov
dec
xchg
sub
push
lahf
in
mov
lock
dec
jb
mov
mov
mov
sub
xchg
rcr
sahf
and
stc
add
or
jo
out
int
dec
lods
xchg
movsb
imul
cmc
jnp
ret
and
push
enter
jns
mov
leave
push
fdivrs
sbb
jecxz
cmp
jb
outsl
cmpsl
dec
lcall
rcll
into
mov
idivb
lods
mov
in
cmp
popa
cmp
insb
adc
scas
fwait
jbe
cmp
or
push
push
jp
ret
push
adc
stos
inc
aad
xchg
pop
pop
lods
cmp
inc
lret
jbe
out
shll
xchg
jge
xchg
push
cmpsb
fwait
dec
dec
dec
inc
sbb
pop
and
sub
push
test
test
lcall
pop
jp
xchg
mov
mov
sarb
inc
dec
cmp
lds
and
iret
lock
cld
mov
rcll
cmc
rorb
int3
fsubs
mov
xchg
xchg
inc
jae
pop
mov
jns
push
sarb
xor
fcoml
shrl
lods
fidivrs
jo
stos
dec
fcoms
xor
pop
mov
mov
dec
pop
jmp
dec
js
add
sub
pop
imull
and
out
je
in
pop
pop
dec
arpl
mov
fisttpl
jns
adc
push
mov
cmp
cmp
fdiv
mov
add
jb
inc
cwtl
gs
xchg
ss
das
lock
mov
jle
push
add
adc
push
fistps
gs
sbb
add
jo
sub
xor
lods
adc
dec
aaa
nop
leave
mov
fs
daa
dec
jp
mov
jmp
sti
and
out
xchg
cmp
data16
adc
mov
mov
js
loope
and
and
lods
stos
sbb
xchg
icebp
inc
push
push
mov
int3
dec
pop
and
xlat
jno
daa
iret
add
test
sbb
sub
mov
movsb
cmp
sub
mov
mov
lods
stos
jp
fidivl
jl
pop
push
sub
pushf
movsl
fistl
mov
popf
push
cs
leave
loopne
and
inc
mov
test
fisubl
int3
xor
mov
and
les
xchg
mov
shrb
lods
mov
mov
and
sbb
sbb
push
dec
jae
jge
sbb
push
into
xchg
xchg
adc
xchg
mov
das
cmp
pop
lods
adc
jae
cmpsl
aas
sti
inc
sbb
fldenv
inc
add
jl
ror
dec
sub
xor
mov
push
test
jge
adc
ret
sub
mov
mov
lods
cmp
mov
mov
lcall
xor
add
mov
jo
ss
dec
push
pushf
cwtl
mov
stc
pushf
inc
xchg
cs
mov
inc
sub
push
insb
add
les
add
filds
push
stos
je
lahf
add
adc
idivb
or
sub
push
pop
pop
mov
push
add
or
adc
out
mov
sahf
mov
call
or
loope
jb
push
push
xchg
das
jle
lret
mov
sti
mov
push
fmuls
push
test
aam
loopne
incb
mov
push
add
jmp
or
ret
and
loop
jo
pushf
mov
add
in
xor
lret
aam
cmc
ss
and
jmp
mov
movsb
mov
mov
pusha
jp
add
imul
mov
xchg
cmpsl
cwtl
in
mov
jecxz
lahf
popf
popf
cwtl
sbb
sarl
js
xchg
ja
pop
ret
xchg
shufps
adc
sbb
mov
cmp
mov
orb
lds
in
inc
pop
sub
ror
hlt
adc
imulb
and
push
add
js
inc
pop
or
adc
cmp
int3
hlt
fs
pop
pop
pusha
mov
sbb
andb
test
mov
outsl
push
add
push
dec
pop
sub
rclb
test
push
inc
or
aaa
fisttpl
inc
mov
inc
aas
rcl
dec
mulb
leave
push
adc
mov
insb
imull
lea
adc
mov
mov
mov
call
ficomps
pop
shlb
loop
movl
popa
test
in
inc
xchg
push
mov
lahf
dec
mov
jmp
push
sub
rcll
adc
mov
jge
jle
jnp
ficompl
pop
lods
loope
sbb
and
sbb
jmp
xchg
xchg
out
fcomp
push
sahf
jmp
jbe
and
adc
sub
idiv
or
xor
xor
lods
inc
and
call
inc
and
inc
jecxz
mov
lcallw
and
cmp
push
sbb
shrb
leave
and
rcll
push
jnp
mov
jne
popa
lahf
pop
inc
fdivrp
sbb
stos
xchg
xor
xor
cmp
xor
sbb
orb
insb
inc
shrb
pop
pushf
in
lods
xchg
or
int3
les
xlat
cmp
mov
jns
ss
gs
cmpsb
std
jae
jg
clc
mov
sarb
jp
xchg
mov
push
jno
fldcw
mov
pop
mov
scas
mov
stc
cmpsl
shlb
fdiv
adc
ret
cmp
int3
in
inc
adc
pop
mov
ret
bound
sub
xor
sbb
shlb
mov
incb
stos
mov
jo
enter
decb
ficoml
push
adc
lcall
out
xor
mov
ret
daa
push
pop
pop
cmp
test
inc
lret
mov
cwtl
inc
or
int3
push
xchg
repnz
icebp
jp
add
mov
sub
pop
fwait
sti
ds
mov
aaa
rcll
shll
lds
movsl
cmp
xchg
cmpsl
sbb
jecxz
mov
push
cmp
mov
pop
jmp
and
addl
movsb
fistpll
and
std
dec
pushf
es
repnz
lea
push
sar
nop
fwait
cmp
jle
and
xchg
sbb
mov
inc
int
and
movsl
push
aam
dec
cmp
test
inc
pusha
je
popf
xchg
js
enter
aam
inc
xchg
int
icebp
js
xchg
leave
sub
shrb
pop
ss
sbb
sbb
pop
inc
push
pop
ja
daa
je
sarb
sub
cmovg
incb
sbb
insb
jbe
mov
cmpsl
mov
mov
adc
pop
and
sbbb
or
cmp
fldl
loopne
inc
pusha
xchg
pop
fmull
inc
jg
and
xor
pop
add
cmpsl
and
mov
sub
adc
add
imul
ret
mov
jns
and
lret
inc
pop
xor
je
pop
xor
cmp
or
pop
mov
rclb
xchg
in
test
sub
and
push
dec
imul
in
pop
aas
or
out
inc
push
and
jmp
stos
jno
in
outsl
mov
jae
clc
pusha
cltd
cs
sub
push
pop
push
mov
sub
js
sub
in
jg
jl
mov
or
nop
mov
or
out
lock
lcall
adc
inc
lock
movsl
test
shrb
sub
push
fcoms
aad
add
fimull
cmp
outsb
or
mov
loopne
outsb
std
scas
ja
push
movl
sbb
pop
cmpsl
repnz
push
mov
xchg
jns
cmp
sub
lcall
rorb
add
pusha
fdiv
dec
sub
adc
push
or
xchg
les
adc
ret
out
sar
and
fmuls
mov
repz
jmp
mov
dec
jecxz
mov
sub
popa
cmp
clc
icebp
out
sbb
dec
mov
inc
std
jmp
pop
out
inc
jo
imul
and
jmp
sbb
adc
test
fsubrs
addr16
push
ljmp
or
mov
xorl
sahf
dec
adc
inc
push
add
stos
jo
sub
mov
push
movsb
adcl
or
jecxz
push
xchg
rol
mov
jno
cmc
cs
lods
stos
sbb
lea
out
jnp
pop
sbb
jle
lea
adc
dec
jge
xor
ds
add
movsb
push
adc
pop
mov
shll
xlat
loopne
sub
data16
push
push
mov
push
pop
push
jge
push
mov
push
nop
aas
mov
sbb
test
cltd
test
fisubl
mov
push
mov
aaa
ds
push
aam
adc
push
fimull
xchg
fwait
testb
pop
imul
mov
inc
jo
jp
es
sub
loopne
movb
dec
jo
and
push
sub
xor
mov
lcall
test
insl
mov
out
push
adc
dec
lea
jp
dec
sbb
pop
pop
cli
and
and
loop
outsb
js
sub
or
cltd
inc
jns
daa
mov
inc
pop
stos
adcl
fstl
push
sub
int
mov
rorb
mov
cmp
out
je
adc
xor
cwtl
mov
stc
mov
in
les
add
jae
mov
test
std
mov
enter
divl
inc
xor
nop
inc
dec
add
aad
out
pop
movsl
rorl
cmp
adc
mov
or
mov
jbe
bound
sub
xchg
pop
enter
or
mov
add
inc
pop
pop
cmp
xchg
jmp
mov
shrb
xchg
or
mov
pop
adc
dec
test
mov
lods
pop
push
xor
mov
xlat
sbb
mov
js
ss
out
pop
inc
pusha
int
push
sbb
mov
xor
or
pop
leave
dec
fstpl
dec
outsl
lret
xchg
jb
sahf
pop
mov
das
cli
test
stos
lock
loop
cmp
push
cmpsl
push
pop
push
int3
stos
into
jne
adc
in
sarl
mov
jns
fildll
dec
sti
jae
sbb
pop
xchg
test
faddl
out
pop
fs
push
mov
ja
fsubrl
adc
sub
push
mov
jne
loopne
out
outsl
mov
out
das
dec
lret
cmpsl
sub
fdivrl
gs
loop
jns
out
jae
push
loop
sbb
or
adc
cwtl
dec
push
jmp
lcall
and
and
enter
or
dec
xchg
cmp
pop
mov
sbb
mov
adc
nop
int
mov
inc
insl
lds
mov
shll
xor
insb
push
cmpsb
sub
sbb
hlt
inc
test
add
inc
and
inc
mov
lahf
aaa
decb
fdivrs
cltd
add
inc
jecxz
xchg
cltd
lcall
push
stos
push
dec
notb
loop
je
stos
sbb
scas
stos
in
pop
mov
lahf
fldl
and
es
je
out
add
inc
cmp
add
mov
imul
jg
xor
scas
inc
xlat
inc
or
xor
mov
aaa
lcall
in
jmp
call
out
push
sbb
addr16
ljmp
aaa
movsl
test
adc
cmp
int3
test
push
mov
je
into
mov
ret
jg
int3
pop
add
push
int3
inc
rcrl
push
and
mov
xor
adc
shrb
out
xchg
jle
imul
cmp
xchg
std
sbb
mov
bound
aaa
push
pop
repz
jmp
in
repz
lock
les
outsl
add
out
pop
repz
xchg
es
xchg
lret
ds
cs
outsl
jno
fdivrl
loope
ljmp
divl
sbb
mov
sahf
imul
dec
jns
out
gs
rclb
fisubrl
fnstcw
rolb
and
xchg
aas
mov
adc
jge
xchg
inc
shll
mov
cmp
sub
orl
daa
xor
cli
pop
sbb
fsubrl
push
fstpt
xchg
insb
int3
xor
xlat
and
push
fwait
push
mov
fisttpl
lock
mov
pop
dec
mov
mov
or
scas
addr16
pop
cltd
stc
test
icebp
fsubrl
daa
add
insb
sbb
das
pop
push
lods
sahf
jmp
movsl
cltd
lock
movsl
arpl
fs
xchg
sahf
mov
or
es
push
cmp
and
fimuls
test
lcall
lret
roll
dec
icebp
inc
fstpt
lret
xor
lret
push
sub
cltd
xchg
xchg
cld
scas
pop
push
dec
arpl
mov
cmpb
mov
icebp
aad
inc
scas
adc
cwtl
jbe
popf
faddl
arpl
and
lds
mov
das
hlt
xor
push
fstps
sbb
xchg
loope
les
mov
pushf
push
ja
lcall
movsl
ljmp
jbe
pop
add
jle
jmp
sub
mov
and
adc
xor
xor
push
and
sbb
dec
nop
jmp
hlt
and
mov
dec
sub
enter
les
test
test
mov
mov
cmp
and
jb,pn
ss
mov
daa
pop
push
fbld
xchg
mov
shlb
cmpb
or
add
mov
cmc
xchg
cmp
lods
xstore-rng
cmpsl
sbbl
movsl
out
lret
cmp
imul
mov
jge
cltd
xchg
cltd
nopl
dec
ja
xor
mov
inc
pop
lods
je
in
arpl
cmp
and
movsl
pop
mov
es
mov
scas
es
push
adc
xchg
cmp
addr16
jl
mov
pop
call
test
xorb
push
pop
cmp
push
mov
inc
add
jl
fbstp
loopne
cs
arpl
aas
ret
stos
pusha
cmc
addr16
jg
xchg
icebp
loope
out
jp
pop
mov
dec
inc
shll
sub
dec
out
adc
adc
ljmp
cmpsb
popa
bound
icebp
aam
mov
jno
add
sub
sub
popa
mov
add
daa
repnz
pusha
or
icebp
add
push
mov
push
lret
in
das
adc
xchg
mov
jmp
enter
xchg
inc
fsubl
cltd
dec
jno
jne
adc
pop
or
inc
add
cmp
dec
hlt
xor
aam
pop
inc
dec
out
xor
int
mov
cmp
lods
mov
icebp
rol
cwtl
push
popf
cbtw
add
sub
add
insb
and
jne
mov
daa
or
cmp
inc
mov
sub
insl
gs
test
lods
in
jle
pop
das
cltd
mov
insb
mov
add
enter
arpl
and
sar
enter
mov
scas
cld
test
int
push
inc
add
gs
lea
aam
stc
jnp
inc
adc
jg
in
es
popa
jmp
bnd
dec
xor
and
or
sub
cmp
das
jns
sub
insb
enter
and
and
xchg
aad
out
stc
ds
fwait
shrl
sub
mov
ja
jge
mov
fs
inc
cmp
mov
and
cmc
xchg
jmp
in
ss
fstps
fsubl
das
push
out
add
cmp
inc
lods
dec
popf
adc
sbb
nop
mov
lahf
int
cmp
pop
lret
dec
dec
dec
nop
cmp
add
cs
jl
daa
adc
jns
loope
jnp
jecxz
sbb
sub
rolb
sbb
pop
scas
sbb
fdiv
xchg
dec
inc
push
jecxz
lods
inc
hlt
cmp
add
mov
leave
mov
pop
inc
xor
sub
inc
jge
mov
icebp
xchg
dec
pop
fisubs
call
cmpsl
sub
xor
sahf
leave
mov
mov
pop
sahf
cmp
dec
push
lcall
and
or
dec
cmp
push
in
dec
cltd
mov
fisubrl
pop
out
aam
inc
es
std
xlat
sub
arpl
into
int
jbe
push
idivl
add
insl
repz
dec
pop
fnstcw
sub
fcoml
sbb
fists
mov
arpl
aad
dec
inc
test
dec
out
pop
ret
pop
ss
dec
scas
mov
push
push
sti
cmp
xor
clc
aad
xor
out
mov
ds
mov
mov
loopne
add
jmp
cmpsl
inc
mov
push
inc
or
outsb
stc
push
pop
sbb
adc
call
mov
lret
sbb
leave
ljmp
jecxz
mov
fmul
test
add
xchg
dec
pop
subl
add
and
sbb
pop
add
out
and
je
push
cmp
mov
stc
lret
nop
repnz
fidivrl
or
outsl
xor
mov
mov
pop
out
pushl
push
fidivrs
cmc
call
shrl
js
mov
je
dec
add
cwtl
sub
and
popf
loopne
jo
aas
in
adc
andb
xlat
xor
inc
into
outsb
sub
jmp
fiadds
aaa
dec
scas
jo
cmp
jl
sub
jb
pop
jno
test
inc
inc
sbb
pop
movzwl
adc
sub
arpl
cs
push
and
mov
sub
cmp
stc
shrb
les
dec
clc
cwtl
cmp
lods
clc
arpl
loopne
les
mov
nop
test
scas
mov
stos
mov
notl
arpl
out
js
js
aaa
mov
bound
nop
xchg
mov
cmp
je
loope
in
sub
gs
lret
mov
mov
outsl
push
push
ltr
rcrb
xor
adc
or
out
pop
mov
jmp
setp
fnstsw
jae
dec
das
std
push
add
xchg
push
adc
mov
fwait
cltd
jl
and
daa
aam
mov
mov
cltd
or
sub
mov
sub
data16
ljmp
dec
mov
xchg
lret
leave
ss
call
adcl
fdiv
outsb
sub
aas
jl
shll
pop
pop
out
aam
mov
es
popa
cmp
mov
rclb
add
movsl
and
mov
push
lret
in
and
xlat
cld
mov
or
mov
xor
add
xchg
fcmovne
icebp
mov
cmp
and
mov
add
fisubrl
shll
jmp
sahf
stc
inc
ds
scas
mov
sahf
xor
jl
lret
arpl
jnp
dec
in
test
aad
outsb
imul
xor
test
out
out
nop
jae
cs
repz
and
pushf
mov
imul
add
lcall
pop
pslld
mov
cltd
fcoms
scas
push
cmc
addl
and
lret
mov
xchg
sbb
cmp
lret
imul
loopne
test
lods
push
fnstsw
inc
das
repz
jne
outsb
pop
sub
mov
xchg
jp
aad
push
mov
mov
pop
jo
or
sbb
jo
mov
shl
aad
jnp
movsl
repnz
fdivp
pop
pop
subl
jns
mov
add
sbb
jmp
lds
into
jns
das
test
mov
popf
add
stc
sub
testl
push
arpl
mov
dec
ja
jb
pusha
jle
mov
cs
mov
fsubs
rol
xor
inc
stos
sub
and
jb
outsl
loopne
xchg
into
pop
sti
andnps
cmp
dec
xchg
popa
es
pop
and
adc
or
insl
je
jae
mov
orb
or
push
sbb
pop
sbb
xor
mov
sub
or
movsb
gs
es
jno
ret
clc
or
lret
push
ror
mov
dec
sub
mov
adcb
cmc
pop
xchg
cld
jp
ds
push
pop
push
adc
mov
call
orb
test
lods
shll
xchg
in
xlat
pop
xor
inc
adc
xchg
cld
push
xchg
dec
daa
xor
mov
popa
cli
inc
pusha
jmp
push
fistps
and
cli
mov
mov
inc
in
fimull
cmp
call
fwait
mov
jno
push
fwait
movsb
cwtl
rorb
fdivs
test
into
and
nop
lahf
imul
fiaddl
jne
dec
jg
dec
fs
outsl
fisttpll
pop
dec
cmp
in
lods
adc
shlb
jae
jmp
repz
dec
pop
push
mov
dec
and
lret
inc
or
add
fimull
cmpsl
lods
movb
or
jge
inc
jl
push
or
daa
cmpsb
pop
test
mov
mov
mov
xor
insl
mov
add
clc
out
out
sbb
test
gs
sbb
adc
sub
cld
or
scas
adc
mov
je
push
sub
fadds
into
push
test
push
decb
call
push
fdivrl
imul
push
inc
xor
jg
incl
pop
aad
int
enter
adc
pusha
scas
mov
jl
daa
and
rolb
imul
pop
scas
xchg
stc
scas
adc
imul
aaa
rol
frstor
ja
and
aam
enter
mov
xor
mov
sbb
cmp
lcall
mov
fsts
cmp
inc
cld
push
adc
fsubs
inc
cmpb
sbb
push
mov
arpl
cmp
stos
jo
pop
mov
sbb
jmp
imul
lret
lock
adc
dec
mov
lock
mov
fcomps
dec
xor
lods
add
shll
or
loop
pop
inc
pop
push
imul
out
dec
pop
mov
sbb
dec
aas
mov
testl
jle
ja
xor
lods
aas
dec
inc
inc
cmp
mul
lods
fdivrp
adc
clc
sbb
push
pop
push
pop
and
roll
aas
popl
in
and
push
push
mov
popf
leave
in
movsl
aaa
aaa
and
loope
hlt
enter
negb
stc
adc
dec
xchg
decb
in
inc
push
mov
jo
in
and
in
mov
mov
sub
mov
lret
push
xor
cwtl
jbe
cwtl
add
push
gs
mov
jle
cmp
nop
std
pop
pop
and
mov
xchg
sub
mov
cwtl
in
pop
nop
in
sbb
in
add
jecxz
or
mov
dec
das
xor
iret
pop
fs
test
jle
push
adc
pop
add
fdivs
neg
mov
enter
outsl
inc
jle
fld
cmp
sti
loopne
fsub
add
push
pusha
mov
mull
or
sub
xchg
or
and
out
loopne
cs
test
mov
push
in
lahf
mov
cld
push
xorb
das
pushf
test
das
jo
neg
jne
cmp
aas
lahf
arpl
dec
jb
imul
and
xor
pop
jle
in
stc
sbb
hlt
add
inc
ljmp
jns
fcmovbe
mov
lahf
fistpl
ss
inc
testl
push
mov
xchg
push
mov
gs
outsl
add
lret
das
jns
add
fsubrl
mov
and
mov
stos
dec
jae
leave
mov
xchg
fbld
nop
fwait
pusha
xor
or
sub
mov
push
bound
imull
add
lret
ds
mov
stos
cltd
shl
adc
mov
lds
outsb
lahf
test
add
mov
icebp
int
mov
shrb
jg
ficompl
dec
mov
incl
mov
lret
lret
jns
shlb
bound
adc
ljmp
mov
mov
cltd
push
sub
imul
sbb
adc
bound
pop
add
rcrl
mov
mov
push
jb
rorb
sub
push
jne
add
in
insb
mov
fwait
jg
leave
loope
inc
pop
into
iret
push
mov
xchg
xchg
fstps
test
repnz
loopne
inc
xor
add
clc
mov
mov
leave
movsb
push
inc
test
hlt
js
aad
add
mov
mov
outsw
add
adc
inc
add
inc
add
push
xchg
cli
mov
cmc
xchg
xchg
jle
fstps
mov
jecxz
xor
xor
adc
or
cmpsl
test
xchg
xor
cmp
mov
pushf
outsb
adc
mov
mov
push
in
into
sub
mov
shll
divb
sbb
mov
push
xchg
stos
sub
fsubrs
in
dec
in
adc
leave
loope
js
cltd
arpl
dec
or
inc
outsl
push
mov
sbb
sub
ss
sbb
sub
pop
lds
xor
xchg
push
inc
aam
jne
cmp
ret
shlb
sbb
cmpsb
cmp
incl
testb
dec
pop
gs
lods
fiaddl
pop
repz
imul
shl
sbb
mov
mov
inc
je
bound
pushf
jge
lret
sbb
cltd
test
mov
adc
mov
dec
inc
push
loop
mov
and
bound
fdivl
push
xlat
adc
sti
movsl
mov
pop
adc
cmp
scas
scas
inc
test
sti
push
leave
ret
cmp
sbb
lea
sub
pop
popa
push
insl
imul
pop
daa
fldt
cmp
std
and
xchg
loope
push
dec
fs
push
outsl
fwait
js
push
pop
xchg
ret
mov
fldenv
insl
pop
aad
dec
ficompl
cmpsl
push
inc
aam
push
fisttpll
cmp
inc
sub
and
popa
loopne
imul
lret
jp
mov
outsl
insb
loope
ja
lahf
std
sub
scas
sub
mov
and
jbe
cs
aaa
decl
sub
and
add
and
lret
ret
jecxz
xor
and
cmp
jo
adc
imul
and
loop
mov
je
dec
daa
jmp
fisttps
xchg
sbb
cmp
mov
lret
loop
jbe
dec
cld
mov
loop
and
cli
xor
push
mov
fyl2x
es
sbb
cltd
lret
push
cmp
rcl
lds
insl
cmp
jl
pusha
cmp
pop
mov
cmp
rcl
inc
mov
out
xlat
pop
mov
stc
mov
orb
inc
sti
inc
das
add
and
pop
call
xchg
and
jne
call
ljmp
pushl
push
add
icebp
or
xchg
adcb
jb
inc
fsubrs
lcall
clc
iret
gs
iret
aam
test
scas
lods
arpl
adc
lds
adc
cmp
imul
cmp
jb
mov
xchg
sub
push
test
xorl
shl
loop
andb
xchg
jmp
loop
add
xchg
daa
data16
aad
sbb
push
lods
std
mov
in
test
lret
test
imul
or
stc
insl
jl
inc
loope
push
adcb
jg
mov
dec
aaa
pop
fisubrs
dec
or
mov
je
cwtl
pushf
lds
outsl
add
divl
cmp
sub
enter
sbb
std
and
or
fwait
dec
mov
in
pop
nop
ret
jnp
push
ret
imul
push
push
or
adc
adc
xchg
jno
jmp
dec
dec
sub
jo
jb
es
sub
popf
add
sub
ds
adc
mov
mov
inc
sbb
sbbl
adc
push
nop
das
fnstcw
and
pushf
pop
stos
add
sbb
jmp
xlat
pop
in
dec
cwtl
pop
rcll
lret
xchg
popa
pop
jo
test
mov
inc
and
pop
inc
ficompl
mov
test
inc
dec
data16
mov
sub
inc
lret
pop
scas
jge
call
iret
xorl
mov
jne
cld
loopne
pop
or
imul
shlb
jg
adc
jge
enter
jmp
ret
sti
pop
adc
xchg
shll
xchg
fimuls
aad
xorps
inc
push
stos
sbb
int3
cmp
ljmp
mov
push
add
fcmovne
jns
mov
ja
popa
cmpl
pop
outsb
das
jns
rcr
push
roll
es
ja
shlb
mov
mov
popf
int
ret
fwait
hlt
or
roll
das
arpl
je
and
jp
xlat
dec
pop
pop
or
cltd
cmp
out
fidivrl
xor
jne
xchg
cli
mov
shlb
popf
jbe
xchg
cmc
js
sub
ficoms
ret
aas
cmp
cmp
inc
push
xor
aaa
loope
clc
jp
mov
mov
and
fidivrs
adc
xor
or
ret
sbbl
imul
hlt
xlat
push
movsb
jbe
pop
loopne
std
jnp
rorb
in
mov
jp
sbb
pop
push
adc
sbb
lds
in
lret
mov
adc
mov
mov
ja
pop
cwtl
lcall
fnstenv
add
add
in
inc
push
outsl
int
cmpsb
xor
xlat
jmp
mov
adcb
adc
rcrb
jle
seto
fs
outsb
push
insb
addb
loopne
lea
dec
sbb
or
inc
repnz
dec
mov
les
or
sbbb
sbb
sub
dec
jmp
jne
lods
add
sbb
sub
mov
and
outsb
xchg
add
or
xchg
or
imul
std
push
andb
push
jnp
mov
jae,pn
dec
mov
jno
push
mov
sbb
push
movb
pop
ja
inc
aam
imul
js
stos
sub
inc
ja
popa
popa
daa
mov
iret
push
dec
movsl
xchg
rorl
push
mov
lret
inc
repnz
or
push
fsubr
sub
ss
ffree
mov
insb
repnz
or
insb
ljmp
loop
mov
mov
pop
subl
lret
inc
daa
dec
and
inc
popf
mov
adc
in
jecxz
in
les
xchg
inc
rcrl
cmp
in
xchg
pop
hlt
jge
inc
jge
out
fwait
cmp
out
adc
push
xchg
mov
mov
test
mov
sub
adc
in
adc
fldt
ljmp
iret
jae
sub
les
fwait
sbb
inc
daa
xchg
push
cmp
xor
inc
add
or
push
add
aaa
and
jne
or
andl
push
cmp
sub
sub
lock
pop
sahf
and
xchg
jae
rcll
repz
loop
scas
push
push
insl
jmp
and
cltd
mov
jne
mov
mov
inc
jo
cs
out
faddp
adc
out
add
nop
jl
push
je
mov
std
push
mov
xchg
inc
inc
mov
pop
dec
out
outsb
arpl
ja
mov
pmulhuw
sub
addr16
stos
sahf
jp
or
and
adc
xor
mov
clc
stc
es
sbb
jp
in
dec
clts
or
data16
and
ds
and
gs
xor
push
dec
dec
sbb
xchg
fcoml
push
jae
loope
std
mov
je
stc
roll
lret
ror
mov
xchg
sti
push
pop
cwtl
icebp
dec
jp
sub
dec
mov
shr
in
mov
test
cmp
add
mov
orl
mov
cmp
xchg
pop
sbb
inc
cmpsl
fcomps
xor
jg
test
pusha
mov
sub
fisttpll
shll
push
or
roll
mov
cmp
call
popf
mov
int
cmc
pop
xchg
or
xchg
stos
repz
push
adc
push
jg
sub
sbb
sahf
fdivrl
ss
pop
addr16
jle
out
clc
inc
inc
int3
fstpt
xchg
jle
fwait
inc
push
adc
sub
pop
pop
cmpsb
fstps
lret
aad
jb
push
push
gs
inc
js
jns
mov
add
in
adc
sbb
push
cmpsl
sub
inc
sahf
sbb
das
inc
jns
call
insl
jae
sbb
mov
lods
sbb
mov
inc
out
dec
aas
ret
jae
cwtl
jno
push
jmp
and
adc
adc
xchg
xchg
stos
mov
es
cwtl
lret
lcall
stos
addr16
cmc
es
push
stos
sbb
inc
in
inc
mov
mov
ljmp
test
lds
mov
aad
es
cmp
add
pop
stos
push
push
out
shlb
pop
jno
sbb
sarb
jne
and
push
iret
jbe
testl
test
enter
mov
fstl
outsb
lret
mov
dec
jne
lock
pushl
mov
jnp
push
imul
inc
inc
push
mov
add
fistl
or
cmp
nop
call
cs
out
stc
add
push
xorb
mov
cld
mov
fsubrs
into
mov
popa
cmp
push
rorl
test
mov
fs
sub
or
lret
mov
jp
testl
daa
push
lds
sub
loopne
inc
pop
mov
rol
fwait
test
lock
stos
mov
stos
push
mov
cmp
test
mov
popa
clc
add
push
insb
ja
adc
orl
pop
dec
lahf
cmp
arpl
jge
jp
cmp
and
mov
add
xchg
adc
gs
mov
lods
dec
pushl
or
mov
sbb
iret
popa
jne
or
xchg
sub
aas
movsb
in
jb
cli
out
inc
sub
ficomps
repz
lret
or
mov
lods
sbb
cmp
dec
mov
nop
mov
mov
sub
ljmp
sub
dec
insl
in
je
icebp
popa
out
cmp
jae
loop
call
fcmove
into
and
ret
pop
xor
fmull
xchg
adc
clc
rcrb
fidivrs
push
jo
push
testb
xchg
cmp
mov
addr16
mov
xchg
jp
mov
xchg
dec
push
ret
mov
jmp
ret
pusha
lods
in
out
scas
ja
sub
test
jbe
jne
add
stc
lods
jb
das
or
mov
subb
inc
sbb
inc
pop
inc
mov
icebp
mov
adc
sbb
pop
pop
loop
in
mov
push
insb
sar
adc
jo
mov
dec
cmp
aad
jbe
cmp
gs
in
fcomps
es
inc
insl
adc
add
test
fistpll
daa
into
mov
mov
push
cmp
pop
shrb
sbb
xchg
js
adc
inc
scas
sahf
sbb
xchg
cmc
in
js
insb
leave
prefetchw
loopne
stc
rcrb
push
aam
jns
stos
xor
push
push
insb
rcrl
add
add
xchg
or
jg
pushf
mov
in
in
mov
lock
add
insb
aaa
mov
push
push
sbb
lock
sbb
xchg
pop
clc
adcl
test
cli
mov
loopne
stc
jecxz
dec
iret
addr16
dec
sub
enter
push
adcb
mov
jb
cld
pop
sbb
xchg
adc
adc
dec
loopne
hlt
cmc
lret
mov
dec
pop
dec
or
pop
pop
js
xchg
mov
jne
jne
repz
subl
xor
cmp
ud0
sub
fistps
jno
mov
mov
or
stos
mov
push
repnz
mov
insl
adc
sub
test
pop
lods
sub
ret
nop
adc
aaa
push
cmpsb
cld
add
sub
les
popa
imul
jp
insb
and
or
push
iretw
pop
lods
pop
cmp
push
inc
mov
int3
and
xlat
mov
xchg
daa
adc
cmpb
push
rcr
xor
mov
dec
sub
cmp
and
mov
repnz
or
or
mov
cwtl
imulb
mov
call
and
dec
cmp
sub
sub
lods
out
dec
aad
and
or
add
push
lret
fsubr
push
adc
js
pop
out
push
stos
in
pop
push
ret
ret
mov
mov
push
adc
mov
mov
add
sbb
xor
mov
sub
imul
sub
adc
daa
and
dec
cmp
cwtl
xchg
scas
pop
ffreep
mov
fidivrs
push
test
or
adc
pop
dec
insl
push
pushf
jmp
sbb
sub
imul
iret
pop
dec
aam
push
scas
mov
inc
jg
or
scas
lea
movsb
lcall
jns
and
rorb
rclb
xchg
and
lods
and
and
loope
leave
movsl
adc
dec
aas
popf
int3
sub
in
cmpsb
mov
xchg
into
imul
aad
cmpsb
jns
cs
xchg
cmp
sahf
mov
bsf
xor
loope
add
mov
ret
into
adc
cmp
repnz
inc
test
std
add
ficompl
ror
daa
cmp
dec
pop
mov
dec
insb
or
mov
icebp
decl
mov
lods
sub
mov
mov
adc
pandn
inc
push
out
sbb
dec
jp
inc
popa
nop
xor
sti
movsl
add
dec
js
mov
rcll
rclb
cmp
into
jecxz
cmp
es
sbb
jge
test
fwait
daa
ljmp
jns
rcrb
cli
jecxz
or
push
xchg
int3
push
stos
imul
sbb
out
bound
popf
cwtl
clc
xor
pusha
addl
into
or
scas
outsl
xchg
out
stos
cltd
out
add
add
inc
sbb
jle
rcrb
mov
xchg
push
adc
xchg
mov
cmp
out
fnstsw
and
icebp
xor
jmp
dec
sbb
sarb
dec
sub
mov
mov
and
frstor
out
sbbl
mov
leave
pop
fisttpl
jmp
pop
cmp
call
in
mov
mov
and
clc
stos
icebp
sbb
es
mov
pusha
mov
mov
dec
mov
dec
inc
les
xchg
jnp
or
push
cwtl
mov
xchg
outsl
dec
push
lock
mov
push
rcr
add
addr16
cmp
fdivrl
out
mov
lret
push
inc
out
data16
inc
xor
and
popf
test
mov
stc
and
lret
jno
insb
push
mov
mov
jmp
inc
repnz
cmp
out
xchg
cmpsl
add
orb
pop
xor
dec
lea
ficompl
daa
call
popa
sub
xchg
incb
lods
dec
call
cltd
mov
xchg
cmp
repz
popa
dec
push
dec
sub
daa
insb
xchg
inc
cmp
mov
mov
loope
mov
mov
ret
enter
lcall
push
jns
xor
mov
add
xor
sbb
imul
mov
push
and
fmul
mov
xchg
cli
jns
loopne
roll
pop
imul
xchg
lahf
mov
pop
push
fsts
ja
clc
popf
push
cmp
lret
in
mov
mov
add
pop
sahf
mov
cmp
mov
mov
in
movsb
pusha
xchg
data16
xchg
sbb
xchg
mov
dec
mov
xor
scas
repnz
add
jae
push
out
inc
loopne
jnp
xchg
in
jnp
pushf
mov
and
test
in
ficoms
sti
ret
popf
mov
cmp
pop
push
mov
cmp
pushl
sbb
in
fsubrl
dec
mov
es
lock
mov
adc
jl
cmove
int3
aaa
or
or
jl
fadd
mov
mov
fisubrl
popa
xchg
xchg
mov
push
js
call
sub
add
iret
ja
xchg
outsb
mov
test
xchg
inc
jne
loope
sub
add
inc
rcrl
push
dec
cs
dec
and
aas
es
mov
jae
sar
stc
rcrl
pop
sub
xor
inc
xchg
mov
push
dec
scas
jg
mov
mov
push
aad
inc
movsl
ljmp
dec
push
sbb
leave
enter
enter
sti
dec
add
enter
or
jl
dec
into
or
inc
andl
dec
dec
jne
clc
add
ja
addr16
xchg
cmpsl
push
mov
add
inc
xlat
test
lock
or
mov
xchg
cmpsb
mov
or
rcll
jmp
cli
icebp
sub
mov
sbb
mov
jb
xchg
pop
mov
mov
xor
and
xchg
rorl
ljmp
insb
dec
dec
popf
shrb
jle
int
imul
sbb
gs
int
jp
fs
cmpsb
jnp
cld
out
popf
cmp
mov
mov
ljmp
jmp
mov
fcompl
dec
fstpt
data16
daa
cmp
test
lret
jmp
cmp
adc
movsl
roll
xchg
or
sub
mov
sub
jae
int3
mov
fchs
add
iret
jmp
int
mov
push
jno
adc
and
pop
mov
mov
push
fsubr
or
scas
xchg
pusha
call
fisttpll
testb
ljmp
push
dec
movsl
xchg
sbb
out
inc
jp
sbb
lds
add
repnz
cli
insb
mov
and
xchg
push
mov
sahf
sub
inc
jle
or
out
xchg
add
js
lret
orb
nop
fnsave
sbb
jl
push
pop
cmpsb
cmp
les
cmp
add
repnz
cs
out
aas
adc
dec
push
rorl
bound
lods
sbb
xchg
in
sbb
pushf
test
ljmp
cmp
popa
ljmp
movsb
dec
and
sbb
mov
frstor
mov
lcall
out
imul
xchg
in
mov
xlat
adc
mov
push
or
dec
outsb
push
pop
jmp
nop
out
dec
inc
jle
pop
mov
mov
sub
cmp
pop
lds
and
inc
int3
ds
adc
sbb
dec
cmp
cwtl
roll
mov
and
and
arpl
add
jg
bsr
adc
pop
pop
mov
ret
mov
push
js
cmpsl
insb
aam
or
cmp
jnp
xor
fsts
ja
jno
jne
sbb
or
cmpsb
push
pop
sbb
popf
push
mov
shlb
or
daa
out
cmpsb
int
sbbb
fldl
push
out
stc
test
mov
pop
loopne
les
push
mov
mov
incl
loop
movsb
cltd
ds
std
out
jp
loop
fs
arpl
cmpsb
pop
loope
int
into
push
out
mov
cmpsl
jns
mov
inc
mov
push
add
jo
and
push
lahf
pop
push
sbb
xchg
sbb
pop
xchg
mov
inc
das
mov
cmp
loop
add
fisubrl
aas
ds
daa
loope
adc
xchg
sbb
push
out
stos
dec
inc
enter
insb
mulb
mov
cltd
push
mov
sbb
aaa
mov
inc
clc
cmp
negb
adc
movsl
cwtl
sub
jmp
lahf
shlb
test
pop
push
pop
std
loopne
shr
mov
addr16
movb
fsub
add
xchg
or
xchg
mov
das
or
addr16
out
ljmp
mov
inc
jge
dec
push
mov
ja
lock
lods
dec
imul
mov
jg
xchg
mov
xchg
pop
and
push
dec
fildll
or
das
sbb
jno
test
sub
std
push
sbbb
sahf
xor
mov
mov
movsb
shrb
std
lds
mov
inc
mov
xchg
jae
pop
std
pop
aas
mov
fisubrs
sbb
jno
dec
orl
cs
mov
cmp
pop
push
xchg
push
loopne
cmp
out
test
pop
sarl
rcrb
scas
jb
test
xlat
call
rcpps
movsl
push
xchg
cmp
pop
inc
push
or
mov
movsl
or
cld
das
pop
sti
jno
jo
enter
xchg
sub
pop
cld
mov
cld
sbb
cmp
xor
jo
jmp
mov
int
push
outsb
enter
xor
or
aas
inc
jecxz
cmpsl
stos
out
adc
popa
push
cs
sub
and
mov
adc
mov
insl
scas
aaa
inc
xor
pop
dec
popa
push
ds
xor
es
in
clc
jo
stos
es
adc
cmp
push
mov
rol
cmp
jmp
bound
push
jg
notb
mov
xchg
das
mov
inc
sub
dec
xor
mov
xchg
sarl
and
lret
aaa
push
or
outsb
sti
sahf
or
lcall
pop
loope
punpckldq
sub
fwait
pop
dec
and
xor
rcrl
data16
test
sar
out
shlb
inc
adc
stos
test
dec
orl
ljmp
jno
xor
gs
outsb
sub
lds
xchg
pop
std
cmp
mov
adc
mov
add
and
adc
push
add
and
jp
mov
mov
sar
xor
mov
sub
lods
or
inc
add
test
loope
mov
lea
push
les
fadds
lahf
pushf
xor
add
popa
das
aam
xchg
push
js
jp
xchg
sub
fwait
loope
movsb
push
popa
jmp
shr
jae
adc
and
incl
cmp
out
inc
flds
sbb
les
add
inc
ja
jle
and
fwait
pop
aam
icebp
jno
ret
mov
fwait
scas
jae
jl
cwtl
jnp
mov
push
out
fcoms
jns
or
aad
imul
cmp
leave
es
addr16
mov
imul
mov
cmp
add
jns
push
int3
lret
daa
in
in
mov
outsb
and
xor
jmp
movl
xor
faddl
lods
dec
xor
fimuls
sbb
ret
xor
cmpsl
mov
rclb
jns
mov
mov
jae
stc
dec
fwait
push
sbb
or
dec
fisttps
out
mov
inc
sarb
mov
push
add
sub
jle
mov
or
lahf
mov
out
or
movsb
cmp
fbld
pop
push
adc
xchg
jno
push
or
mov
scas
insl
inc
push
mov
mov
add
popa
xchg
push
loope,pt
fdivrs
pop
insb
jmp
adc
xorb
ficompl
fsubp
sub
nop
pop
sti
idivb
and
scas
pusha
ljmp
mov
rcrl
pushf
mov
je
jne
pop
sarl
pushf
mov
addl
daa
jge
adc
mov
adc
adc
push
out
lret
cld
outsl
leave
outsl
mov
add
xchg
adc
fwait
lea
dec
mov
repnz
pop
insl
push
mov
dec
cmc
ja
dec
jae
pushf
arpl
fs
jge
sub
sbbl
dec
xor
scas
das
insl
stos
popf
ds
adc
mov
jbe
shrb
fwait
sbb
push
std
mov
push
hlt
xor
mov
lcall
sub
or
sbb
dec
push
adc
fmull
or
or
faddp
xchg
imul
or
and
add
cmp
xor
test
ja
das
out
jo
jne
or
or
xchg
out
inc
jbe
arpl
fiadds
cmp
ds
pop
mov
inc
iret
inc
mov
lar
inc
nop
popa
push
popa
sahf
loope
and
mov
sub
inc
push
sar
pushf
out
mov
cmp
into
xor
std
add
xor
mov
xchg
test
pop
scas
in
in
mov
push
fst
add
bound
movsl
cs
add
jae
lds
inc
xor
imul
gs
xchg
ret
cmp
mov
lea
and
cmc
cmp
sub
dec
daa
jl
das
inc
fcomip
inc
test
test
fwait
jmp
pop
scas
rclb
jecxz,pn
test
ret
addr16
sbb
loop
ret
cmpsb
mov
xor
dec
mov
leave
adc
inc
in
in
or
dec
testl
mov
pop
cwtl
push
mov
sbb
inc
mov
gs
outsb
pop
shl
repnz
lcall
xchg
lret
std
mov
adc
xchg
sbb
imul
notb
imul
jp
outsl
in
rcrb
lcall
inc
testl
lods
mov
push
pusha
adc
push
pop
xchg
shl
inc
mov
cmpsb
test
bound
xchg
shl
lock
in
xchg
xor
in
adc
clc
sbbl
clc
loope
data16
aas
push
arpl
divl
jae
bound
jle
lds
jmp
mov
mov
insb
pop
test
or
fs
inc
subb
daa
aaa
jb
pop
aas
stos
jb
aad
and
stc
cwtl
ds
sub
mov
xor
and
cmp
imul
inc
stos
or
mov
pop
and
das
mov
mov
test
push
add
jge
mov
mov
xlat
jle
ds
jmp
lea
ja
or
ds
nop
jge
dec
mov
cmp
dec
rorl
cmp
and
pop
ret
jae
cmpsl
mov
addr16
cli
ss
xor
inc
mov
aad
sub
jo
aas
out
shr
rep
pusha
test
push
push
lahf
push
sbb
cltd
or
xor
add
addr16
aad
mov
daa
fsubrl
jb
mov
xchg
and
jl
ss
add
inc
mov
inc
lock
enter
sbb
neg
jnp
aas
aad
pop
int
xlat
popa
out
jae
sub
test
adc
xchg
and
dec
mov
out
pop
xchg
push
stc
sbb
fisttpl
les
sub
cmp
and
lods
mov
cmc
sub
out
add
xorl
fnstcw
xchg
lcall
aaa
aad
lahf
pop
leave
and
gs
push
or
in
jmp
ret
add
dec
dec
xor
xchg
scas
arpl
data16
cmp
adc
xchg
and
sbb
ds
movsb
adcb
cmp
jecxz
jp
push
push
jns
inc
mov
or
jg
push
and
push
movsb
xchg
cwtl
out
and
aad
cmp
and
leave
test
jae
mov
test
leave
adc
incb
movsl
jo
les
ljmp
sub
jl,pt
xor
das
jno
in
push
je
data16
mov
data16
pop
fwait
or
pushl
mov
mov
mov
mov
sbb
rclb
jmp
sub
in
xor
or
mov
xchg
iret
xchg
pop
cli
xchg
xor
stos
popa
jne
pushf
cwtl
lock
fildl
hlt
lcall
popl
imul
aaa
mov
fdiv
fimull
pushf
aam
push
dec
pop
xor
stos
mov
add
mov
and
fsub
mov
push
xor
jbe
imul
jecxz
ljmp
xor
movsb
cmp
loop
push
xor
nop
sub
jl
call
adc
loopne
and
add
mov
mov
mov
int3
xchg
andl
jmp
jp
xor
mov
xchg
lock
sub
test
lock
adc
xchg
dec
imul
pop
out
mov
add
jns
lock
imul
je
mov
xor
push
xor
lret
clc
int
fistps
xchg
sub
mov
iret
push
cwtl
test
adc
dec
jb
in
rcrb
int3
cmpsb
or
aas
fnsave
enter
jnp
or
mov
and
int
mov
fistl
addr16
popf
inc
mov
and
push
rcl
test
pop
mov
arpl
lock
xor
or
inc
mov
xchg
lods
in
push
pop
xor
movsb
cmpsl
xor
popa
push
xchg
ss
pop
jle
and
push
jp
pop
jp
dec
je
adc
lods
js
icebp
jmp
arpl
enter
and
test
xchg
fisubrl
out
enter
test
mov
int
adc
cld
sbb
in
push
cli
hlt
inc
aas
es
push
mov
dec
gs
xchg
mov
pop
add
xchg
jp
fistpll
add
or
fiaddl
or
sti
cmp
into
or
xor
mov
cld
movsb
outsl
sbb
cmc
test
in
add
pop
dec
mov
adc
mull
jo
pop
outsb
imul
rorl
inc
nop
jns
aam
dec
jno
adc
inc
mov
jnp
orb
dec
pop
jnp
js
inc
js
mov
and
loopne
inc
cwtl
adc
push
les
imul
adc
inc
xorl
testl
cmp
pop
and
test
cs
and
ss
lods
cmc
call
fisttps
inc
sti
inc
inc
std
dec
mov
pop
xor
sbbb
addl
sbb
movsl
inc
out
adc
fadds
icebp
push
pop
inc
pop
mov
in
repz
outsl
leave
xchg
std
mov
stos
jo
inc
test
enter
icebp
jmp
mov
sbb
aam
cmpsl
adc
daa
or
rcll
sti
jae
in
jnp
mov
dec
jecxz,pt
aad
mov
adc
add
repz
xor
sub
add
out
pop
mov
mov
std
scas
fnstcw
inc
shl
dec
dec
jo
mov
divb
into
hlt
clc
cmpsb
lds
sbb
repz
je
cld
cmc
jg
pop
dec
pop
jle
stos
dec
test
pop
jle
pop
push
iret
hlt
aas
cltd
ficompl
mov
xchg
daa
fld
nop
pop
adc
je
mov
mov
lahf
notb
test
lcall
or
fdivl
mov
out
je
pop
pop
out
cmp
dec
cwtl
orb
aas
xchg
pop
in
jmp
shrb
loope
xchg
clc
rcrb
jb
ret
push
cmp
mov
je
mov
nop
mov
cwtl
daa
cmp
mov
cmpsl
inc
lret
ret
scas
les
scas
in
push
lret
or
scas
and
jp
std
lock
push
and
leave
popa
in
pushl
or
xor
lahf
add
jl
ss
cmpsb
jle
fcompl
cli
ja
repnz
jno
sbb
aas
add
xor
fs
dec
add
pop
cmp
mov
je
shl
mov
cmc
xchg
adc
cmc
scas
mov
xor
add
ds
lret
jne
xchg
xor
movsl
mov
adc
insb
xchg
int3
dec
test
mov
jle
iret
xor
daa
cmp
scas
call
pop
xchg
cmp
iret
cmp
adc
xchg
add
adc
fwait
icebp
ret
add
test
in
xlat
movsb
cmp
xchg
inc
inc
jno
xchg
lret
mov
aas
jle
sub
pop
add
mov
addl
jecxz
mov
inc
aaa
imul
cmp
push
add
pop
inc
jns
fdiv
pop
xchg
add
sub
jmp
loop
ret
outsl
adc
jle
xor
pop
jbe
and
push
lock
in
testb
xor
stc
lcall
jl
jno
adc
ss
jns
ret
ss
or
dec
jo
push
cmp
sti
add
js
sbb
xlat
fcmovbe
sbb
adc
daa
push
sarl
push
push
add
mov
addr16
scas
sbb
and
test
push
adc
rcrl
fsubrl
adcb
test
or
cltd
cwtl
jecxz
cmp
arpl
cli
xchg
xor
iret
loope
pop
pop
mov
and
mov
pop
fisttpll
sar
in
or
mov
mov
jb
cmpsl
xchg
pop
dec
rclb
sub
pop
pop
lods
push
and
lock
add
mov
jmp
shrl
pop
orb
pop
mov
test
mov
push
mov
scas
lea
jnp
xor
orl
inc
xor
in
lret
dec
xchg
scas
mov
out
inc
rcl
xlat
push
rcll
imul
mov
lea
add
cmp
shrb
fidivs
rcll
je
aaa
es
adc
add
daa
insb
cmc
cwtl
in
xor
and
ret
stc
dec
mov
mov
pop
lret
xchg
mov
out
xor
ret
pop
cmpsb
xchg
push
in
ljmp
jp
repz
in
aaa
pop
mov
aad
stos
jo
push
js
pop
fildl
inc
xchg
add
fdivrs
mov
xchg
mov
iret
lret
insb
imull
call
sbb
es
or
mov
xchg
not
xor
mov
jb
cli
push
mov
ss
repnz
xor
or
sbb
repnz
xlat
inc
aas
fisttps
pop
lcall
jb
lahf
out
in
es
ss
std
push
mov
fdivl
pop
sahf
je
loope
pusha
arpl
and
test
push
fcmovu
arpl
or
jmp
xor
dec
push
pop
push
xchg
adc
dec
xor
mov
push
pop
stc
sub
not
mov
in
gs
mov
ret
push
xor
inc
popf
andl
je
popa
pop
pop
fisubl
stos
mov
icebp
sbb
pop
pop
or
mov
cwtl
icebp
mov
std
lahf
mov
test
test
xchg
jge
scas
xor
xor
push
shl
lods
push
jno
outsl
lret
test
clc
in
arpl
cmc
cltd
xchg
xchg
adc
adc
mov
sbb
xchg
jo
push
repnz
pop
loope
imul
jp
xor
pop
ret
xchg
cltd
xor
pushf
and
add
jge
sub
xor
icebp
inc
add
sbb
out
call
sbb
loopne
pop
mov
inc
add
data16
pushf
shl
rcl
cmp
dec
xchg
mov
test
movsl
and
pop
int
loop
cmp
or
hlt
dec
ds
ljmp
mov
push
fidivl
or
add
push
xchg
mov
xchg
sbb
sub
xchg
in
and
stc
adc
leave
dec
arpl
movsb
fsubr
in
jne
cmp
sub
fwait
sbb
cli
aam
adc
repz
pop
sbb
outsb
xchg
dec
in
lods
and
outsl
int
stos
iret
test
iret
jg
sub
sbbb
nop
sbb
stos
lods
orl
popf
fisubrs
push
push
int
and
mov
mov
jne
ljmpw
fistpl
pop
sbb
outsl
bound
testl
xor
jg
push
push
jg
cmp
lock
mov
jle
inc
repz
fst
cmp
pop
mov
fisubs
and
pushf
push
dec
xor
outsb
xchg
push
cmp
test
xchg
sub
mov
enter
or
mov
fldcw
imul
cmp
repnz
shll
dec
lods
es
jbe
jp
test
mov
xor
jns
repnz
mov
lcall
jnp
js
lret
push
aas
lock
fnsave
cmc
test
push
cmp
xchg
cmp
stos
mov
mov
decl
and
sbb
sar
imul
test
jmp
mov
in
xor
rcrb
fcoml
mov
dec
cld
dec
or
dec
mov
pop
inc
sbb
sub
ret
or
adc
add
add
ret
test
jns
xchg
icebp
sbbb
xchg
mov
fwait
xchg
sub
aam
mov
popf
daa
mov
push
cmp
int3
push
ret
adc
xchg
popf
hlt
pusha
cs
out
int
jmp
xor
repz
lcall
clc
jo
nop
xchg
xor
stos
push
sbbb
add
daa
lods
push
imul
subl
mov
jnp
pop
xchg
mov
arpl
sub
and
or
data16
fildll
and
bnd
mov
add
cmpsl
test
or
mov
movsb
xlat
sub
in
mov
cwtl
gs
cmp
stos
ja
imul
lock
loop
cmpsb
scas
dec
aam
add
adcb
push
or
mov
push
dec
mov
andl
push
push
iret
repnz
sbb
cmp
sbb
ror
mov
icebp
cmp
cmp
jmp
adc
psllq
adc
inc
jnp
add
ror
sbb
inc
ljmp
in
push
stos
iret
pop
adc
mov
xchg
aam
in
inc
add
hlt
mov
jmp
ljmp
stc
das
sbb
in
mov
xchg
dec
repnz
out
xchg
mov
dec
cltd
fstpt
scas
int
push
sti
ss
rclb
testl
mov
mov
mov
icebp
call
dec
pop
repnz
cmp
loopne
in
fcmovu
clc
aad
xchg
nop
mov
daa
xchg
rcrl
and
sbb
xchg
out
sub
push
sbb
in
pop
mov
mov
mov
fsts
cmpsl
jb
cmpsl
add
sbb
outsb
loop
dec
pop
push
stos
add
dec
lret
scas
or
outsb
mov
sbb
testb
rorb
or
push
pop
jecxz
popf
xor
push
cmp
popa
mov
icebp
fildll
push
push
sahf
gs
jbe
dec
sbb
adc
push
int3
ljmp
repz
in
push
cmpb
jle
scas
sbb
mov
testl
pop
out
cmp
adc
push
test
lds
movsl
adc
nop
push
xor
add
loop
outsl
out
pop
mov
lahf
test
or
adc
mov
inc
mov
cld
xchg
enter
cmp
data16
or
outsb
daa
fldcw
xchg
outsl
sahf
jno
aam
xchg
je
je
push
xchg
ds
popa
addl
icebp
cmp
mov
sbbb
or
ret
xchg
sbb
test
dec
test
cmp
stos
out
repnz
icebp
mov
mov
cmp
mov
js
mov
mov
push
xchg
jns
add
pop
addr16
test
jl
out
push
pushf
mov
out
stos
mov
outsl
jb
cli
call
push
mov
dec
sahf
fldz
stc
outsb
mov
inc
test
jecxz
cmp
add
stos
mov
and
mov
imul
fistl
hlt
out
xchg
jne
mov
push
xchg
xor
cmp
ret
inc
sarl
call
mov
std
movsb
jo
cmpsl
mov
cmp
cltd
ja
in
or
or
xor
add
inc
xor
fs
sbb
pop
pop
and
push
ljmp
andl
cmpsl
mov
nop
lods
xchg
pusha
pop
ret
mulb
mov
xchg
dec
cmp
xlat
and
push
insb
adc
inc
ficompl
lods
js
mov
repz
lahf
mov
sbb
test
sub
sbbb
out
loop
lret
sbb
inc
fs
rcr
lods
fidivl
fiadds
sub
cmp
sub
xor
hlt
loope
mov
dec
shrl
xor
and
fisttpl
and
push
subb
sub
xchg
or
imulb
int3
popa
fsubr
mov
adc
lret
sub
shr
rorl
or
and
sbb
cmpsl
jle
dec
push
call
rol
loopne
cwtl
shl
sub
js
push
sub
pop
cmpsb
int3
lea
cs
cmp
pop
scas
mov
mov
push
mov
sub
iret
sbb
push
mov
add
hlt
pop
popa
lock
data16
jno
mov
mov
hlt
xor
repz
xchg
xchg
rolb
push
dec
mov
mov
aas
shll
dec
dec
jae
sbb
jne
cmp
roll
push
out
std
sbb
mov
mov
ret
fidivs
sbb
cmpsb
mov
addr16
loopne
dec
inc
loope
or
data16
add
adc
bound
inc
lret
pop
and
shrb
pop
xchg
cwtd
mov
adc
leave
or
cmp
and
pop
cmp
repnz
aas
repz
scas
xor
imul
mov
fwait
mulb
dec
mov
inc
mov
pop
stos
cltd
inc
fsubrl
mov
add
lcall
je
cmp
inc
dec
dec
jg
xchg
sarl
out
and
push
jno
fisttpl
dec
cmp
jb
xor
je
push
leave
inc
push
notb
sub
jecxz
test
add
sbb
fstps
jl
adc
stos
les
test
or
jnp
enter
dec
and
mov
push
jae
mov
cmp
jae
inc
bnd
outsb
xchg
sbb
std
hlt
lcall
popf
fsubrl
stos
jle
inc
push
jg
inc
jo
mov
rcl
sbb
iret
pop
loope
mov
push
nop
hlt
rcl
mov
xor
mov
fists
sbb
iret
addr16
repnz
xchg
mov
and
hlt
cmpsb
shlb
scas
xor
push
push
pop
movsl
mov
lahf
sahf
call
sbb
xchg
and
push
and
adc
inc
fadds
gs
stc
mov
pop
jg
ret
push
xor
push
test
push
and
mov
mov
subb
lret
jecxz
mov
xchg
sbb
stos
bound
push
and
cwtl
jbe
ret
jno
in
mov
push
pop
pop
es
bound
push
mov
add
and
fs
mov
xchg
xor
sub
lret
rcrb
mov
and
in
push
cmp
aam
xor
inc
mov
xor
pop
sbb
repz
pop
adc
cmp
pop
push
pop
in
cltd
mov
add
fwait
xchg
dec
mov
sbb
imul
sahf
push
insl
sahf
dec
js
repnz
or
loopne
test
rcll
pop
repz
add
cmc
mov
mov
mov
mov
sub
jns
rclb
push
out
in
lcall
arpl
cmpsb
ljmp
mov
mov
in
push
jmp
ret
sub
mov
icebp
repz
iret
or
iret
adc
add
add
pop
push
mov
jbe
mov
sbbl
jbe
stos
xchg
mov
test
stc
scas
aam
ret
sub
xchg
sti
lcall
jp
sbb
leave
sub
add
push
in
mov
add
xchg
mov
out
hlt
pop
cmp
xchg
and
movsb
lret
leave
xlat
xchg
jo
add
andl
mov
cmp
loopne
or
adc
xor
popa
mov
adc
xchg
lret
mov
xor
sbb
test
add
pop
lahf
xor
aas
and
lods
sbb
cmpsl
insb
pop
test
sbb
hlt
inc
cmp
imul
adc
and
dec
rcrb
out
mov
cltd
adc
packssdw
mov
std
xor
xor
sub
pop
jecxz
pop
pop
addr16
imul
add
xchg
xchg
lret
dec
xlat
lret
xchg
cmp
pop
sub
xor
jecxz
mov
mov
shl
or
ret
and
seta
movsb
scas
lea
lods
or
jl
or
in
jmp
add
stos
xchg
daa
addb
xchg
int3
mov
cmp
or
mov
push
push
lret
adc
jl
cltd
dec
out
in
imul
mov
cltd
sahf
sbb
mov
or
xchg
ret
cmp
daa
insb
adc
jno
or
pop
sahf
xchg
and
outsb
mov
lock
pop
mov
mov
xchg
and
mov
int
add
push
lods
call
dec
lcall
out
out
arpl
and
out
pop
mov
mov
and
sub
add
mov
and
in
fdivr
push
outsl
movsb
xor
std
adc
mov
fstps
mov
out
inc
fstpt
sahf
arpl
cmp
mov
call
imul
movsb
mov
popa
ja
inc
sub
mov
mov
bound
mov
pop
loop
dec
cli
les
imul
mov
inc
inc
dec
call
push
fsubrl
shufps
out
dec
push
xor
xchg
sbb
adc
lds
mov
test
or
fdivrs
adc
xchg
mov
jb
in
call
out
or
push
jg
out
or
jno
sbb
stos
and
fwait
add
loop
adc
mov
andb
sub
in
mov
push
shll
mov
xchg
sbb
xlat
jle
lds
sbb
fs
pop
xchg
insl
loopne
push
ret
insb
mov
cltd
data16
lahf
sbb
test
rorb
cmp
imulb
repnz
or
push
outsb
push
inc
jb
out
cltd
or
or
loop
mov
std
aas
inc
movsl
dec
push
scas
cmp
lds
fadd
and
sub
sti
mov
push
mov
fmul
xor
std
jecxz
mov
out
aad
gs
stos
jmp
test
adc
repz
dec
push
mov
jp
sbb
popa
xchg
es
ret
mov
aaa
out
stc
out
test
notb
mov
sub
jg
or
mov
cmp
add
jl
sti
xor
pop
stos
std
mov
xor
imul
inc
xchg
sbb
jno
loope
into
lods
ljmp
push
inc
inc
ss
mov
fdivrp
insl
and
clc
ficoml
cmp
mov
pop
lea
adc
and
imul
sarb
mov
push
sub
fdivrs
pop
call
jb
add
movsb
sub
lock
cmp
jle
fisttpll
pushf
lret
dec
fadd
nop
call
mov
inc
mov
push
cs
arpl
xchg
cwtl
fsubrl
rclb
loope
cwtl
push
inc
loope
mov
inc
mov
mov
aaa
jb
sub
subl
jne
push
cmpl
stc
pop
push
cmp
imul
inc
fdivrl
xchg
push
loope
cmp
out
sub
add
out
ret
fisubs
ja
pusha
xchg
in
out
adc
ret
sub
xor
sbb
andnps
mov
insb
mov
and
cld
repnz
mov
xchg
insl
clc
pop
andb
add
inc
sub
insb
sbb
imul
cmpsl
add
in
mov
jbe
or
xchg
outsb
aaa
xchg
and
cmp
mov
nop
popf
fucom
cmpsb
repnz
sbb
dec
push
enter
sub
dec
sbb
fnstcw
into
mov
lcall
adc
or
frstor
pop
jb
rorl
jge
fs
pop
movsl
add
outsb
sub
rcrb
fnsave
cs
and
movl
fidivrs
xchg
ds
and
nop
jg
jp
mov
pop
xchg
cs
mov
sbb
ret
adc
inc
les
push
loopne
ret
mov
lret
outsb
test
icebp
mov
push
jno
or
xlat
or
jo
jge
aam
or
xchg
mov
lcall
subl
sbb
push
pop
loop
pop
mov
inc
scas
or
or
or
add
xchg
sahf
pop
bound
mov
hlt
xor
pop
test
decb
pusha
push
sub
add
mov
jg
andl
jmp
pop
pop
ret
shlb
lahf
xchg
movl
inc
push
sub
imul
stos
adcl
inc
pop
neg
and
dec
and
aam
jae
je
add
movsb
push
js
push
sbb
std
outsl
div
adc
aam
mov
xor
xor
pop
mov
addr16
cltd
dec
dec
das
popa
push
out
test
xorl
pop
das
fstpt
ds
adc
add
pop
push
js
push
or
push
mov
das
icebp
fisttpll
ret
pop
rcll
test
pushl
adc
xor
jl
lods
ret
ret
fwait
jb
nop
loope
sub
push
aas
outsl
imul
dec
mov
stos
add
mov
adc
push
mov
inc
sbb
test
je
pop
repnz
dec
test
ds
cmp
xchg
cmp
dec
cltd
mov
xchg
pop
mov
fisubl
aaa
pop
popf
sbbb
push
push
mov
pop
ret
add
xchg
adc
push
movsl
sbb
jmp
jbe
cmpsb
adc
push
lcall
jg
mov
xor
test
sub
sbb
cmpsb
pop
xchg
dec
lret
inc
jb
mov
sub
mov
jne
fidivrs
dec
jne
xchg
pop
out
ficomps
mov
mov
cmc
dec
test
adc
das
insb
jmp
xchg
sbb
adc
fldcw
loope
stos
sahf
cmpsl
or
cli
out
outsl
push
addr16
jl
ss
fimull
int
int3
mov
scas
pop
xor
ret
inc
dec
pop
pop
sub
outsb
gs
xorb
int
iret
fcomp
ret
and
pop
cld
ja
add
imul
ds
scas
push
adc
pop
outsb
ja
nop
lcall
inc
arpl
push
inc
test
cmp
xchg
add
lock
ret
push
sub
outsb
push
add
lock
insb
gs
push
mov
fimuls
mov
imul
mov
cmp
jle
lret
aas
subb
test
inc
add
out
lds
movsb
cmp
push
nop
inc
in
and
stos
addb
incb
icebp
push
xor
push
mov
popa
cs
jbe
sub
inc
sub
loopne
fldl
mov
inc
inc
cmp
out
test
pop
mov
out
dec
hlt
push
or
add
movsl
xchg
inc
int
push
mov
jo
aam
cs
push
jmp
inc
push
rcll
js
lret
das
aam
jnp
pop
sub
push
ficomps
mov
push
mov
lea
jmp
jnp
repz
jg
mov
cltd
ja
test
and
aam
sbbb
cmpsb
fs
scas
lret
fdivs
ja
sti
ret
adc
sub
fwait
aad
mul
mov
xchg
inc
push
imulb
push
cmpsl
jecxz
and
add
mov
mov
cmc
push
mov
sbb
outsl
fldenv
pop
xchg
test
dec
mov
mov
cld
sub
cmp
into
mov
movsb
xchg
cmc
mov
pop
jbe
xor
inc
jle
loopne
sbb
sub
stc
inc
rorl
dec
sub
xchg
push
in
xchg
sbb
sub
jg
add
lea
pop
mov
pop
fldenv
imul
inc
mov
leave
int3
jo
cltd
popa
mov
out
jae
xor
cmp
add
int
xor
push
pop
lods
inc
cmp
add
jle
les
mov
fstl
in
adc
fiadds
int3
rcrb
xchg
or
push
and
mov
fwait
stos
jnp
cs
dec
inc
mov
jo
cltd
in
mov
cmp
cmp
sbb
mov
xor
loope
xchg
nop
out
in
or
and
adc
jno
data16
sbb
je
xchg
jb
dec
or
pop
iret
xor
sahf
or
aam
xor
lds
cs
fmull
inc
nop
dec
mov
mov
lock
and
push
inc
mov
adc
jbe
mov
cltd
mov
and
mov
or
data16
jae
sub
lret
mov
sbb
xchg
mov
mov
in
loop
xchg
mov
adc
dec
inc
rcrl
sub
ljmp
push
and
pop
or
hlt
int
cmp
mov
sbb
jns
adc
subb
xchg
mov
nop
pop
and
cwtl
addl
mov
lret
sub
ficomps
in
sbb
iret
fwait
pop
lahf
and
test
xchg
pop
iret
mov
repz
fiaddl
in
fsubrs
ss
pop
adc
push
add
popf
gs
test
andb
aam
fnsave
mov
cwtl
or
inc
js
xor
sti
mov
push
mov
js
cmp
jb
sbb
mov
repz
cmpsb
popa
jns
in
into
jge
adc
jg
inc
in
mov
mov
push
mov
adcl
lods
mov
js
mov
insl
incb
xor
popf
pop
scas
dec
sbb
mov
lcall
call
cmp
sbb
cmpsl
fisttpll
mov
sub
je
enter
clc
ffreep
aas
mov
dec
cli
mov
scas
xor
gs
mov
call
nop
cmp
xchg
jb
cltd
ja
arpl
nop
scas
push
push
test
cmp
sar
cld
jo
stos
push
mov
jmp
push
aas
hlt
cwtl
rcrb
jb
fs
pop
push
fnstcw
jb
pop
aaa
sbb
mov
imul
jnp
push
xor
mov
out
lock
in
btc
or
sub
jl
sbb
sbb
xchg
rorl
lcall
call
shlb
push
mov
cli
mov
imul
test
mov
adc
out
pop
mov
test
imul
cmp
sub
and
cs
cld
in
mov
mov
mov
add
nop
in
cwtl
adc
bound
mov
stc
arpl
mov
mov
pop
xor
jle
add
jae
jl
inc
insl
sbb
or
push
mov
xor
mov
rorb
stc
add
scas
pushf
jns
dec
and
cmp
rol
xchg
mov
pushf
arpl
cld
subb
dec
movsl
fwait
pusha
arpl
jae
sub
xor
vrcpps
ss
test
jno
or
inc
and
pop
in
push
pushf
incl
sarb
fildl
ljmp
mov
push
data16
mov
call
mov
cmp
cltd
mov
shrb
daa
sub
jecxz
cmpsb
idiv
shl
pop
pop
xor
jg
out
js
cs
push
scas
add
icebp
and
insb
push
arpl
xor
das
sub
jno
pop
call
movsl
inc
int3
rcll
test
pop
mov
pop
jg
ljmp
insl
test
sub
pop
aaa
add
mov
lret
into
fsubs
rcrl
inc
rcll
cmpsl
fisubrs
jnp
lcall
pop
std
int3
mov
mov
pushf
lods
and
cmc
mov
lahf
lahf
adc
sbb
mov
iret
test
adc
gs
push
in
mov
add
jno
sbb
lds
dec
xor
insl
xor
stos
pop
jno
insb
sbb
mov
xchg
dec
ret
or
cmp
test
out
or
icebp
bound
push
nop
jbe
xor
imul
ljmp
jne
mov
push
outsl
and
sbbb
cmp
adc
dec
xor
fstpl
push
xor
mov
ficompl
cmp
gs
jg
jae
xor
in
cmp
mov
movsb
sarb
inc
lods
mov
aaa
adc
fcmovnu
mov
mov
and
inc
push
cltd
mov
mov
push
dec
inc
cwtl
popf
repnz
inc
fsts
dec
mov
mov
pop
push
dec
outsl
cmp
adc
xchg
or
lret
movsl
mov
repz
cmpsb
loopne
into
mov
mov
pop
jge
movl
mov
ret
cmpsb
in
in
adc
xchg
iret
scas
pop
or
mov
adc
jne
sub
movsb
xchg
inc
add
mov
test
xor
mov
and
int3
cmp
gs
push
jl
lods
and
cmp
sar
popa
sti
xor
pop
daa
popf
push
mov
loop
subb
sub
pop
mov
jb
ret
push
or
mov
stos
fcomps
std
nop
inc
popf
mov
sub
sub
cmpsl
int3
add
jl
xchg
push
jmp
xor
add
sbb
inc
stos
cmp
loop
jmp
push
mov
into
pop
addr16
mov
adc
xchg
out
xlat
mov
push
test
add
je
fwait
leave
lret
sub
std
mov
insb
jae
push
jle
sub
xchg
jle
movsb
dec
jno
mov
shrl
sub
fisubrs
je
sub
mov
out
data16
xor
or
jno
add
and
mov
fbstp
pop
push
cmp
out
jmp
sbb
xor
xor
add
push
add
xchg
in
mov
je
ljmp
mov
pop
pop
leave
jb
fsubrs
iret
adc
jle
pop
cmp
dec
xor
or
adc
jmp
add
daa
push
rcll
fstl
mov
cwtl
cmpsl
int
leave
ficomps
stos
in
cs
mov
ffree
pop
cltd
nop
jno
xchg
imull
and
mov
out
lea
rep
shll
jbe
mov
rcrb
jns
fadds
out
add
and
dec
rolb
mov
xchg
data16
xchg
or
xchg
adc
fnstenv
hlt
xor
lds
xchg
andb
test
jg
adc
dec
mov
push
loopnew
lock
jmp
loopne
inc
ss
push
addr16
jo
lock
jno
hlt
cmc
outsl
mov
xor
stc
inc
inc
arpl
jo
enter
pop
cmp
xchg
pushw
rcrb
fistpll
cbtw
xchg
jmp
pop
aad
dec
addb
xorl
popa
inc
mov
jmp
cmp
xchg
in
push
or
sar
sti
rcrb
lahf
dec
or
stos
mov
out
scas
sbb
int3
fisttpll
or
je
jge
cs
hlt
inc
jb
adc
inc
arpl
outsw
mov
call
jl
sub
xor
sbb
lret
sbb
xorb
out
dec
cmc
sbb
pop
adc
or
incb
daa
std
test
pop
dec
movb
rcrl
shll
xor
out
add
mov
pop
inc
pop
call
lret
inc
cmovl
mov
xlat
dec
xor
xchg
inc
mov
insl
push
push
sbb
call
std
inc
add
sub
repnz
lock
xchg
xchg
sbb
inc
out
push
inc
test
adc
test
pop
int3
sarl
mov
roll
mov
loop
mov
nop
inc
nop
add
repz
into
and
jp
add
xchg
loopne
inc
lea
inc
cmp
add
fs
jg
in
pop
in
lods
mov
decl
scas
xchg
test
rdmsr
dec
xor
add
push
rcl
dec
in
loop
sbb
mov
and
stos
sub
sbb
subb
push
and
jmp
pop
push
pop
iret
test
gs
hlt
out
push
lods
xchg
jb
mov
add
xchg
dec
push
stos
dec
sub
int
in
fnsave
pop
es
mov
in
ret
lock
xchg
mov
push
lods
inc
sub
sub
cld
add
or
sub
push
fsubrl
push
aam
sbb
xor
pop
push
cmpb
mov
fcmovnbe
mov
mov
sti
adc
aad
fadd
push
fst
and
add
add
cmp
subb
fcoml
leave
insb
jne
dec
inc
stos
scas
leave
push
data16
adcb
mov
inc
xchg
mov
xchg
jae
jmp
dec
push
add
lock
cmpsb
icebp
mov
lods
cmp
xchg
rcrb
cmp
mov
rolb
mov
push
jge
ss
mov
lret
xchg
aaa
test
sbb
sbb
jns
mov
fwait
out
sahf
sub
cmpsb
lret
roll
jno
add
mov
cmpsb
stc
dec
aas
rcrl
je
test
push
fdiv
add
cmpb
js
in
icebp
cmp
cltd
or
xchg
sub
fwait
pop
test
jae
ds
dec
shl
jns
in
add
jecxz
mov
add
out
insb
xchg
xor
add
cltd
sti
in
call
inc
lock
cmp
in
cmp
xor
add
xor
movsb
call
cmp
fidivrs
or
sti
hlt
ljmp
xchg
adc
mov
sub
mov
cmp
xorb
cmp
sub
in
pop
and
in
and
xor
insl
cmpl
push
add
repz
xor
sub
lahf
idivl
fcoms
jbe
or
sbb
fucom
popa
ss
cltd
pop
mov
xlat
das
sahf
inc
andl
push
jge
ds
fcoms
das
cmp
shrl
stos
mov
in
shll
mov
jle
dec
mul
xlat
cltd
push
fbld
add
push
or
out
popf
packuswb
mov
dec
sub
hlt
ja
push
cmp
cmc
test
cs
jg
leave
lcall
inc
or
cli
test
inc
mov
das
sti
push
cs
or
pop
aas
mov
xor
shlb
inc
xchg
ror
sbb
jg
push
shlb
ds
mov
aas
and
stc
enter
sbb
add
ljmp
sub
mov
loopne
dec
xor
xor
mov
lods
mov
xchg
loop
enter
fs
sahf
aaa
xor
insl
dec
les
ja
jle
xor
mov
arpl
into
dec
mov
out
incl
hlt
mov
test
jbe
mov
mov
stos
jmp
nop
call
faddl
es
lcall
imul
dec
cmc
in
lahf
in
jg
or
rcrb
lcall
push
std
adc
nop
push
pop
adc
dec
dec
cmp
xorl
inc
bound
fs
sbbb
mov
pop
mov
pushf
pop
and
cmp
fwait
pushl
xor
enter
movsl
rclb
mov
lods
xchg
or
cmpsl
les
inc
test
lcall
push
pop
jb
lahf
fldcw
push
lcall
mov
sbb
mov
sbb
adc
les
insl
and
mov
mov
lcall
push
jle
out
enter
jae
leave
mov
inc
adc
gs
pop
out
fisubrl
push
adc
mov
pop
scas
add
xchg
stos
loop
jmp
int3
pop
les
xor
shlb
pop
or
fucom
xlat
push
stos
scas
pop
cwtl
mov
and
or
ret
pusha
ljmp
jae
sbb
hlt
and
cmp
in
xchg
jns
mov
nop
mov
hlt
xchg
shrb
mov
dec
mov
cmpsb
icebp
mov
imul
test
fnstcw
int3
fldl
push
adc
cmp
cltd
cli
adc
dec
jnp
loope
loop
inc
adc
mov
mov
push
icebp
inc
push
das
in
es
enter
mov
add
rclb
jg
mov
popa
dec
fimuls
or
sbb
scas
lcall
cmp
inc
jmp
adc
push
scas
mov
mov
ds
adc
and
sbb
cs
jg
stos
ret
rcrl
out
addr16
je
xor
xchg
loopne
add
ret
fsts
or
jo
mov
mov
mov
push
dec
fnstsw
je
inc
jo
pop
mov
jno
mov
movsb
and
in
inc
rorl
je
or
gs
test
mov
fs
push
or
and
lods
loope
jnp
jl
fmuls
loop
mov
test
ja
fisttps
mov
test
mov
fisubl
je
orl
adc
nop
lock
int3
call
sub
jmp
ljmp
inc
add
sar
andl
mov
stc
loope
nop
jne
stc
enter
jb
fld
movsl
cmp
nop
lods
jp
push
cld
xor
and
outsl
xor
fwait
mov
sbb
fsubs
pop
iret
lods
push
aam
jp
jmp
inc
adc
ret
add
inc
lcall
aas
inc
or
test
lahf
jo
or
pusha
pop
adc
jno
call
mov
hlt
pop
leave
push
lahf
cmp
adc
push
mov
jae
push
sbb
pop
orb
out
and
jo
icebp
jbe
mov
cli
sarl
repnz
mov
ret
sarl
jl
fs
mov
stc
insl
fsubrs
mov
pop
lods
fisttps
jns
pop
sahf
arpl
lret
sub
adc
dec
nop
cs
mov
imul
push
loopne
mov
cli
mov
or
mov
out
leave
pop
xchg
aam
mov
or
pop
shrl
push
fiaddl
jns
int3
ja
mov
shll
or
jns
pop
movsl
out
call
sbb
faddl
xor
pop
xchg
jne
cmp
lods
dec
or
jno
jmp
rcr
sub
jge
cmpsb
inc
add
xchg
into
push
repnz
roll
adc
int3
ja
fwait
roll
les
das
pusha
sub
and
sub
popf
or
push
push
je
in
sarb
xacquire
cmpsl
sahf
xor
fwait
iret
sbb
xor
insl
fscale
inc
and
popf
xor
inc
mov
cmp
mov
sti
adc
add
jno
nop
cmp
aaa
mov
add
out
pop
frstor
and
repnz
ja
and
jnp
fidivs
pop
and
cld
pop
push
daa
inc
testl
mov
std
xchg
not
sub
loop
es
xchg
jno
inc
sbb
xor
pop
out
das
xchg
or
cmp
dec
cmc
js
int3
loopne
ds
lds
inc
mov
scas
out
lods
enter
fmuls
jne
sub
mov
jg
fsubl
cmpsl
lock
lods
gs
data16
dec
fsubr
int
imull
fildl
divb
xchg
pop
call
popa
insb
dec
loop
inc
mov
imul
mov
mov
push
xor
push
xor
scas
sub
adc
ljmp
jmp
in
mov
fmuls
test
mov
imul
mov
push
sbb
cmp
insl
scas
jle
and
cmpsb
pop
dec
loope
mov
pop
mov
fs
xchg
jbe
mov
fs
xchg
int3
jp
add
mov
icebp
shrl
mov
or
add
mov
loope
mov
pop
xchg
lds
je
dec
sbb
movsb
fdiv
inc
in
mov
fmull
pop
xchg
xchg
cmp
cld
xchg
jo
or
cmc
js
fistpl
in
dec
pop
push
push
pop
out
pop
nop
popf
push
into
jle
push
xchg
jo
sbb
pop
rcrb
jo
xor
int
push
sub
add
fisubs
xor
inc
lcall
add
push
cmp
push
sbb
push
cs
sbb
adc
mov
jns
lds
rcll
xlat
add
mov
add
aam
jb
pop
repnz
nop
inc
lods
pop
push
xor
xor
xchg
sbb
jo
push
pushf
mov
jno
sahf
mov
and
in
add
dec
mov
aas
imul
lret
cmc
mov
shl
xchg
sub
add
into
incb
sarb
pop
lock
push
sub
sbb
mov
out
leave
faddl
nop
jbe
mov
loopne
or
cmp
cmp
add
jecxz
insl
push
xchg
gs
shll
sub
xor
pop
cltd
in
sar
xor
lahf
and
pop
or
repnz
jg
inc
mov
lds
das
mov
test
xchg
sbb
inc
xchg
das
xchg
outsb
ja
jae
mov
cli
lcall
neg
fld
push
in
adc
xlat
pop
loope
shlb
test
rcrl
rcrl
sbb
aad
aad
iret
pextrw
cmp
or
cmp
add
mov
mov
outsb
icebp
imul
pop
sub
dec
movsb
fs
mov
mov
sarl
mov
sub
mov
mov
outsb
movsb
sub
or
jns
push
mov
out
adc
movsl
jecxz
ret
cmpsl
dec
mov
mov
sub
out
add
aad
arpl
sub
add
mov
pop
fstpt
and
into
inc
jne
lret
fcmovu
jns
lods
or
decb
mov
jo
es
rclb
lds
jecxz
and
mov
cmp
outsl
int
xchg
mov
fadd
dec
mov
xchg
pop
add
sbb
fdivrs
leave
lods
inc
cmpb
mov
pop
pusha
mov
outsb
imul
pop
sahf
sbb
mov
adc
sbb
adc
dec
xchg
lea
addr16
mov
pushf
and
fnstcw
add
jmp
repz
sbb
test
fisubl
loop
cmp
mov
nop
filds
jl
pop
xchg
lods
stos
push
ss
cwtl
jno
mov
lods
popf
mov
clc
in
call
pushf
lock
cltd
imul
pop
xor
flds
out
mov
sub
gs
sub
repnz
pop
test
fidivrl
adc
sub
into
loopne
push
or
pop
pop
mov
addr16
cmp
loop
adc
push
cli
and
xchg
and
dec
push
dec
inc
movsb
sbb
xchg
cmpsb
insl
xor
xor
ss
cmpsl
pop
fistpl
gs
push
nop
add
outsb
adcl
fcom
jno
es
or
rcl
push
mov
je
cmp
popf
push
nop
int
cmp
mov
add
out
sub
movsb
popf
nop
push
sbb
sbb
test
xchg
and
lahf
and
sahf
xchg
add
sbb
scas
jno
push
push
in
jp
aad
dec
sub
repnz
mov
sbb
aad
sub
jbe
es
inc
xchg
popa
dec
xchg
lock
and
and
pop
nop
addl
jle
jne,pt
and
loope
adc
shll
pop
sarb
loope
arpl
xchg
loope
int
sub
cmp
jo
ret
call
adc
scas
xchg
and
adc
shll
inc
push
xlat
hlt
or
pop
mov
mov
or
jecxz
push
pop
mov
push
mov
sbb
clc
dec
emms
repz
sub
or
push
xor
pop
imul
and
jg
roll
dec
xchg
lock
pop
inc
sbb
stos
jno
cmp
stos
ja
jmp
xor
cltd
sub
stos
sbbb
mov
xchg
add
sahf
loope
pop
xchg
dec
add
cltd
ret
and
xchg
jbe
subl
dec
in
scas
call
adc
xor
stc
int
addr16
mov
out
test
xorl
adc
imul
xchg
ret
cmp
repnz
loop
or
lea
leave
inc
adc
or
push
pop
sbb
dec
insb
xchg
add
outsl
jmp
dec
add
clc
outsb
mov
or
ficompl
lea
sub
mov
add
cwtl
sti
and
push
lret
bound
sbb
or
mov
dec
and
cmpsb
adc
add
and
iret
aaa
cmp
test
xchg
ja
call
jp
popf
cltd
fwait
out
pop
shrl
enter
pushl
in
xchg
js
out
mov
clc
xchg
fninit
push
push
dec
test
dec
je
imul
stc
pop
into
test
add
or
push
nop
shrl
cmp
repz
nop
rcl
fldt
add
xchg
push
mov
add
add
fsubs
xchg
push
movsl
pop
mov
test
test
ds
jb
jecxz
xchg
add
push
xchg
out
std
popa
pop
daa
mov
les
push
or
fisubrs
pop
push
mov
inc
data16
data16
xchg
pop
adc
xchg
add
arpl
sbb
dec
mov
addb
test
jno
mov
hlt
shrb
mov
or
fwait
mov
enter
dec
mov
imul
shr
addl
cs
xor
cmp
mov
mov
dec
fs
out
adc
cltd
xchg
xchg
out
dec
in
sbb
jle
in
jae
ret
and
stos
aam
and
outsb
loopne
mov
sub
mov
imul
mov
rolb
adc
or
clc
sub
jne
xchg
cs
test
add
inc
out
jns
cmp
pushf
jp
push
xor
xchg
push
mov
adc
int3
push
push
pop
add
mov
scas
xor
cmp
or
mov
call
xor
in
sub
xchg
test
sub
xor
out
sub
aas
dec
test
xchg
xor
test
mov
cld
or
imull
sub
mov
cli
fwait
stos
and
pop
pop
xor
cltd
leave
loop
dec
and
or
nop
iret
lret
mov
gs
add
outsl
loopne
mov
mov
daa
loop
cmp
jne
hlt
push
jns
fldcw
cmp
cmc
xchg
mov
sbbb
push
test
mov
adc
pop
imul
push
jno
paddsb
es
jne
mov
insl
inc
lcall
cwtl
les
clc
sub
cli
pop
and
xor
cmp
push
pop
xor
ja
ret
xorl
add
inc
xchg
jnp
or
call
jns
outsb
into
xor
clc
dec
pop
imul
fdivrs
pop
push
stos
loop
rcrb
xlat
xor
inc
repz
ret
loopne
test
jo
jl
es
pushf
xchg
andb
add
jns
scas
mov
xor
cmp
rorb
lds
xor
shl
popf
inc
repnz
aam
mov
int
iret
adcl
pushf
lods
imul
lods
fnstcw
pop
lret
mov
inc
movl
jmp
in
adc
adc
dec
mov
push
xlat
in
aam
or
test
repz
cs
add
fwait
test
dec
sub
xchg
les
lret
push
in
jle
push
das
sahf
and
test
daa
mov
push
jne
out
stos
mov
mov
outsb
hlt
dec
rclb
xor
aaa
mov
or
sti
repz
movsl
addr16
and
stos
cmpsl
popa
sbb
push
lods
notb
in
mov
cs
sbb
repz
stos
out
add
shlb
out
test
inc
fcmove
sub
adc
fisubrs
xchg
xchg
rep
fwait
mov
push
movsb
in
in
mov
frstor
mov
shrb
outsl
mov
stos
ficompl
and
ret
jmp
mov
clc
sbb
fwait
out
pop
jmp
inc
stos
add
cmp
cmp
add
cwtl
sbb
lds
xchg
mov
les
mov
xor
mov
bound
outsl
lahf
daa
pop
xor
sub
cmc
fadds
xchg
cltd
add
adc
mov
adc
lock
fs
sub
inc
rcll
mov
adc
add
sarb
js
inc
cwtl
xor
mov
fsub
pop
ret
jno
xchg
sbb
pop
clc
xchg
add
mov
scas
jbe
add
add
push
push
sbb
adc
jne
mov
sahf
les
dec
push
dec
push
fstps
test
mov
jne
xchg
mov
dec
add
xor
insl
addr16
xlat
sbb
arpl
je
xlat
adc
jno
push
ss
data16
fdiv
in
stos
test
fstps
les
ds
popa
mov
js
pop
push
sbb
scas
scas
xchg
mov
or
xor
je
imulb
sub
mov
es
movq
inc
mov
push
popa
and
lods
idivb
sbb
jmp
cmp
or
push
sub
cmp
mov
shrb
arpl
orb
pop
insl
mov
aas
push
fmull
in
jbe
and
popa
lcall
xchg
sub
jae
rcrb
push
testb
repz
push
and
lcall
mov
lock
dec
jg
mov
jae
loopne
fwait
mov
int3
push
push
test
pop
fcoms
hlt
test
lret
jecxz
into
push
movl
sbb
stos
clc
repnz
in
pop
out
jp
xchg
ljmp
hlt
lods
scas
mov
xor
sbb
jp
ret
sub
outsb
pop
jbe
push
mov
orb
xor
push
pop
xor
js
repz
into
cltd
mov
or
mov
icebp
inc
cmp
cmp
movsl
adc
xchg
cmpsl
mov
test
out
mov
lods
out
call
popa
add
mov
adc
insl
inc
cmpsl
stc
test
pop
cmp
lods
leave
dec
and
outsl
ja
stc
dec
pop
sub
and
loopne
stos
and
dec
cmp
pop
xchg
xchg
pushf
add
in
mov
idivb
pop
xchg
push
mov
sbb
mov
iret
out
sbb
jmp
or
push
push
jb
ret
shrl
movsb
out
xor
sti
push
aad
pop
imul
mov
cmpsl
xlat
mov
repnz
add
xchg
xchg
inc
inc
jecxz
fadd
aas
out
ds
xlat
jbe
or
aad
aas
cmp
push
int
fisttpll
sub
mov
outsb
inc
fldenv
nop
movsl
mov
lods
and
xchg
pushf
pop
or
sti
inc
pusha
mov
mov
and
sbb
cmp
ds
jbe
and
cmp
adc
or
stos
cmp
adc
cmp
mov
pop
adc
rorb
push
add
ss
lods
or
in
inc
jmp
jge
aam
sub
pop
add
xchg
xor
cld
xchg
es
inc
push
lods
or
jns
lods
fnstcw
nop
shrb
cs
ret
mov
mov
jne
cmp
push
leave
jns
fstl
shrb
mov
cmp
push
outsb
movsb
sti
bound
jmp
lret
fstl
push
xchg
shl
fs
inc
cmp
mov
cmp
xor
stc
jp
dec
stos
aad
and
cmpsl
inc
flds
xlat
jmp
mov
repnz
cmp
daa
ret
pop
int3
adc
xor
movzbl
pop
sbb
jae
sub
ret
mov
inc
sub
fsubr
add
pop
popa
dec
push
pop
js
sti
out
or
out
rcll
fnstcw
call
dec
add
push
test
jg
imul
mov
xchg
add
out
daa
cmp
mov
xchg
sbb
test
inc
test
mov
test
lahf
data16
daa
cmp
add
subb
xchg
in
push
outsb
pushf
push
inc
and
js
out
mov
xchg
aam
fsubrp
imul
mov
push
sub
inc
sahf
pop
hlt
imul
mov
sub
pusha
cmp
jle
test
popa
outsb
int
icebp
roll
pusha
cmp
jno
push
test
shrl
aam
cmp
jns
ljmp
js
mov
ljmp
jb
jo
inc
mov
sti
imul
push
or
cltd
fcoms
dec
rcrl
mov
andl
jle
mov
cli
jno
dec
lods
jnp
sbb
aaa
movb
mov
fwait
es
mov
adc
push
sbb
inc
mov
cmp
push
aam
push
sahf
push
push
inc
cmp
arpl
sbb
mov
sub
or
add
popa
push
js
adc
aad
sbbl
daa
leave
xor
ds
mov
mov
jecxz
ss
jecxz
ja
fistpl
mov
sbb
cmp
js
pushl
xor
sbb
leave
cld
push
mov
cmpsb
test
mov
mov
adc
into
cwtl
ds
hlt
sti
sub
or
pop
sbb
out
or
dec
cmp
cmp
jns
bound
lock
jle
mov
lds
scas
adc
push
out
push
loope,pt
jbe
aad
add
xor
dec
push
ret
movb
mov
test
es
rcrb
push
xlat
push
inc
mov
sbb
clc
xor
fsubrl
lret
call
push
shll
mov
sub
sbb
jo
pop
mov
push
das
sbb
stos
ret
adc
inc
repz
loop
inc
aam
push
or
in
mov
cli
inc
xchg
cmpb
mov
mov
sbbl
jle
adc
push
mov
aaa
inc
dec
lcall
and
cltd
xor
pop
ficomps
xchg
out
je
mov
mov
fwait
scas
adcb
pop
das
or
rcll
jae
push
adc
lret
lret
xchg
test
pop
outsb
fwait
pop
add
gs
popf
outsb
pusha
pusha
cmp
pop
push
sahf
adcl
jnp
mov
xchg
mov
cmp
repz
ds
aaa
or
icebp
lods
dec
rcl
xchg
std
pushf
inc
xor
push
iret
movsb
push
insb
mov
leave
aad
dec
test
mov
cmp
arpl
out
and
xor
leave
push
cwtl
inc
adc
jle
jge
sbbb
dec
pop
xchg
dec
rcr
stos
aaa
test
fstps
lock
sbb
mov
popa
xchg
push
pop
mov
cmp
mov
ja
mov
jg
push
pop
push
es
test
ror
inc
bound
pop
mov
scas
jno
lcall
jmp
dec
addb
jg
sti
sarl
cmp
mov
jne
or
ret
gs
test
ficompl
mov
in
add
fcmovnu
xor
mov
sahf
xchg
daa
add
sub
dec
in
mov
call
out
pop
adc
or
push
push
movsb
inc
sub
shll
dec
mov
cmp
and
stos
and
ds
adc
cmp
add
rolb
sbb
mov
jns
fwait
repz
ljmp
adc
jnp
test
data16
mov
out
inc
cwtl
inc
nop
jno
or
mov
test
adc
imul
dec
je
fldt
out
add
stos
mov
setl
xchg
cli
test
ljmp
cmp
lds
adc
incb
lret
in
xchg
fmuls
xchg
inc
ds
dec
pop
adc
jne
js
sbb
out
in
mov
shrb
sub
out
push
lods
mov
jmp
xchg
jns
cs
aad
and
adc
data16
pop
in
push
mov
iret
enter
mov
lea
xchg
lcall
jle
pop
int3
or
lahf
pop
or
adc
rorb
fnsave
add
pop
lods
out
lret
ja
ss
andb
sahf
jmp
pop
jmp
leave
xor
out
dec
idiv
mov
jge
add
push
outsb
ret
mov
sahf
sbb
outsb
pop
or
xor
mov
fidivrl
mov
scas
jno
pushf
and
add
aad
ficomps
inc
or
pop
dec
jecxz
inc
es
pusha
sub
ss
aad
sub
or
repz
add
cmp
cmp
jecxz
cs
sahf
push
or
repnz
cmpsl
cmp
aad
arpl
dec
testl
sbb
mov
mov
xchg
sub
rcrl
shrl
and
push
adc
adc
test
xchg
inc
dec
std
daa
les
jmp
negl
mov
je
pop
sub
std
cltd
test
push
cs
loopne
das
lret
adc
imull
jmp
loope
arpl
out
xchg
dec
pusha
das
adc
insl
lods
xor
outsb
dec
mov
xchg
inc
fsubr
adc
lock
and
sub
push
add
sahf
xchg
dec
and
push
mov
push
lea
jno
mov
push
sbb
adc
cltd
adc
je
inc
and
repz
mov
flds
in
push
leave
pop
xor
sbb
jp
dec
sub
mov
ret
dec
push
xor
test
pop
mov
pop
and
daa
xor
pop
rcrl
mov
lea
into
std
xorb
data16
repnz
add
xor
ljmp
jno
jg
popa
cmpsb
notb
popa
mov
add
and
lods
mov
push
out
and
rcrb
popa
addb
xor
cmp
stos
cmpsw
cmp
aam
nop
push
je
or
mov
icebp
xor
cmp
sub
sub
pop
in
and
jb
imul
or
inc
xchg
shrl
cmp
fisttps
out
sbb
shrb
sbb
pop
jbe
push
xchg
or
lock
in
aam
jne
nop
jo
sti
sbb
rcrl
pop
imul
xor
lock
xor
frstor
pop
inc
add
lcall
push
mov
call
cs
jmp
insl
sbb
xor
data16
push
inc
insb
inc
push
inc
xchg
stos
mov
loop
add
sarb
icebp
je
adc
xor
add
sbb
mov
add
ret
push
pop
dec
loop
adc
xor
xor
pop
div
mov
ss
push
inc
mov
test
fstpt
sahf
adc
jb
iret
adc
or
xor
insb
sbb
or
jmp
repnz
je
icebp
loop
sub
sarb
test
fadds
xchg
rcr
ret
test
mov
push
jecxz
or
jae
shrb
cmp
pop
push
pop
aad
aas
mov
push
aam
jnp
aas
push
lahf
sub
and
hlt
adc
jle
out
xchg
xchg
bound
loop
jb
mov
js
sub
xchg
jecxz
push
rcrl
stos
popl
cmpsl
sbb
cmp
andl
mov
mov
popa
adc
dec
sbb
cmp
es
add
xorl
sbb
xchg
dec
xchg
aas
xchg
ficompl
popa
shlb
rclw
lcall
sub
rcll
icebp
out
out
sbb
es
inc
pop
mov
sbb
iret
lods
iret
sub
popa
scas
fldcw
xor
movsl
ljmp
pop
or
scas
xor
push
int
push
loope
scas
jae
test
mov
mov
xchg
sub
sbb
or
xrelease
out
mov
push
push
test
sub
jns
daa
rclb
lret
jmp
leave
jae
adc
jle
test
outsb
sub
sub
test
jp
loop
xlat
xchg
xchg
push
ljmp
jp
jns
and
and
icebp
jne
sub
adc
jo
cmp
xlat
jns
sbb
pop
ljmp
jmp
arpl
fidivl
sub
scas
ja
or
out
popa
outsl
dec
lds
add
cli
sbbb
adc
push
xor
repz
shl
xor
outsb
rclb
call
popf
cld
pop
jg
jmp
or
lods
pop
adc
clc
fldt
jno
iret
ret
jb
push
xlat
xor
sbb
shlb
loopne
adc
aaa
in
inc
sub
adc
xchg
sbb
sbb
bt
jne
xor
xor
jae
lock
pop
cld
fsincos
movsl
pop
push
push
sub
add
shl
movsb
jns
jns
pusha
pop
call
pop
pop
and
adc
push
xchg
mov
out
mov
subl
and
or
push
jl
pop
testb
pushf
xchg
das
arpl
or
rcl
add
adc
jmp
lods
fs
imul
dec
adc
out
jl
imul
mov
adc
mov
in
movsb
inc
jle
adc
cmc
adc
cld
fucomp
xchg
sbb
das
rcrb
add
cmp
inc
cwtl
lds
sub
push
jl
dec
daa
xchg
popf
push
sti
sbb
fisttpll
pop
dec
xor
insl
movsb
mov
int3
jp
adc
adc
xlat
lcall
sbb
push
icebp
jle
shlb
out
aas
mov
xor
sbb
movsb
jecxz
xor
sbb
rcr
mov
dec
mov
adc
add
or
mov
mov
push
or
sbb
enter
mov
push
call
cmp
mov
pop
jns
and
popa
sub
movsl
sub
seta
cld
lds
mov
lods
outsb
fldcw
xchg
movsl
xor
add
dec
mov
nop
xorl
cmpb
minps
ja
sbb
aam
and
fucomip
imul
fdivrl
pop
and
data16
push
into
xchg
inc
fidivl
sbb
iret
shlb
in
cmp
repnz
mov
adc
or
inc
and
adc
cmp
cmpsl
cmpb
enter
rcl
loope
xchg
xor
and
jp
jno
clc
add
in
adcb
hlt
aaa
ror
jge
sub
das
stos
xchg
sbb
sarl
inc
mov
xchg
lock
mov
sbb
hlt
mov
lds
xor
sbb
push
fsub
add
cmp
ss
sbb
add
xor
leave
mov
bound
xchg
negb
add
lahf
and
loopne
cmp
and
xor
lret
mov
push
loopne
imul
add
mov
int
pop
arpl
imul
aam
fnsave
sarl
adc
je
fidivrs
dec
mov
aaa
jb
outsl
inc
fiadds
or
sbb
pop
xor
ja
adc
mov
or
mov
lret
sbbb
sti
testl
adc
movsb
js
data16
fsubl
insb
pushw
callw
aam
clc
mov
inc
daa
pop
inc
pop
sub
es
jg
nop
lds
pop
lock
loopne
inc
orb
add
loope
cmp
not
jne
nop
push
aaa
push
and
sub
fucomi
mov
inc
jp
xor
inc
ror
int3
pop
pop
pop
jno
jmp
mov
je
xor
nop
and
jp
xlat
mov
out
fidivl
fdiv
sbb
aad
cmp
ss
shll
inc
cmp
inc
test
dec
fwait
xor
cltd
mov
jbe
lret
xor
cli
icebp
adc
push
inc
inc
push
movhps
arpl
and
mov
cmp
inc
mov
cmpsb
inc
mov
in
lret
adc
sub
scas
mov
and
xlat
dec
pusha
mov
pop
inc
bnd
out
sbb
mov
sbb
xchg
out
lock
fidivrs
mov
mov
call
lret
outsl
mov
data16
inc
inc
addb
imul
xor
cmp
push
ds
jp
fistps
outsb
jne
loopne
dec
and
data16
cmp
sahf
mov
int3
jbe
idiv
cltd
push
jno
xchg
js
in
jmp
mov
sbb
pop
sarb
push
lea
xor
jb
js
cmpsl
sub
mov
or
lock
xorl
int3
in
aas
imul
jne
and
jo
mov
xchg
sub
stc
int3
xchg
and
cmp
xchg
dec
pop
jb
adc
rorb
in
jmp
std
dec
call
and
ljmp
adc
dec
lods
mov
mov
mov
push
aad
inc
push
fdivrl
mov
sbb
adc
mov
lods
sbb
cmpsb
xchg
push
xor
ljmp
movsb
mov
jle
out
sbb
jmp
jp
cmp
pop
test
insb
xchg
ret
jbe
sbb
pop
cli
add
push
in
incl
mov
xchg
xor
in
jle
nop
pop
jns
fwait
mov
jg
mov
ja
inc
int
or
sub
jno
fldenv
add
add
cmp
jne
or
lock
cld
pop
adc
test
mov
les
mov
xchg
jg
or
in
popf
mov
push
and
jae
cld
rorl
mov
inc
leave
lods
sti
movsb
int
std
mov
mov
dec
adc
cltd
lcall
repz
xor
pop
repnz
insb
mov
dec
pop
dec
std
jge
jmp
test
xchg
dec
mov
mov
fs
pop
xor
xor
xor
sub
out
xor
mov
sub
pop
sub
call
inc
ret
aam
movsb
xor
dec
or
xchg
scas
sbb
sub
leave
lds
push
aas
testb
shll
xchg
ds
fidivs
stos
mov
ja
out
mov
lock
lcall
jb
inc
pusha
stos
loopne
inc
scas
adc
jl
add
rep
cmp
cmp
dec
xchg
daa
add
mov
mov
xor
sbb
mov
xchg
inc
xchg
or
jb
sbb
arpl
les
cwtl
pop
daa
sub
aam
mov
data16
cld
cmpsl
xchg
add
mov
sbb
and
or
mov
adc
xchg
sarl
mov
decb
lcall
push
cmp
fnstcw
mov
aam
andb
dec
xlat
and
dec
adc
test
cmp
imul
icebp
lea
shlb
and
mov
xor
xchg
clc
lods
ret
scas
test
mov
mov
dec
push
out
pop
cli
sub
pop
aad
push
sub
push
mov
or
mov
jge
mov
lds
cmp
ds
call
xchg
repnz
adc
pop
repnz
out
push
mov
or
push
mul
mov
bound
pop
repz
in
dec
pusha
sarb
cmpsl
fwait
je,pt
cmp
xor
jl
in
mov
sbb
testb
mov
push
rep
sub
ja
icebp
cmp
jg
out
outsl
or
adc
cltd
popf
cmp
push
jle
mov
mov
xchg
mov
insl
push
add
nop
roll
icebp
mov
push
push
cmc
mov
mov
das
mov
icebp
cmp
sbb
dec
add
cmp
daa
and
mov
dec
adc
sbb
rorb
jg
xchg
pusha
adc
or
inc
test
stc
les
in
xchg
xchg
and
sti
imul
repnz
mov
popa
and
lea
imul
rcl
out
leave
mov
aaa
and
mov
or
pusha
test
push
dec
pop
xor
xor
imul
xlat
mov
sbb
movsb
lahf
cwtl
inc
jle
dec
add
sarl
lahf
ss
cmp
test
dec
cmp
enter
add
lcall
sub
sbb
movsl
cmp
lods
loope
mov
adc
aas
stos
int3
pusha
lods
mov
in
pop
lods
lret
test
pop
data16
cmp
mov
add
mov
and
or
jo
push
testb
sbb
mov
sub
daa
fsubrs
mov
xor
dec
or
out
repnz
add
mov
pop
in
fstpl
lock
and
mov
xchg
js
out
push
rcr
insl
dec
dec
stos
pop
je
xchg
outsl
aad
loop
je
sbb
hlt
xchg
sbb
outsb
lods
add
and
test
fildll
sbb
fidivl
xchg
xchg
sbbl
lret
ret
xor
out
xor
lahf
ficoms
sbb
mov
lock
in
sbb
push
mov
mov
dec
ret
inc
aad
jmp
pushf
sti
pop
or
push
push
jae
mov
fs
outsb
sbbb
sub
inc
push
out
sub
push
pop
cwtl
cmp
addr16
and
sarl
xchg
mov
sbb
daa
das
adc
pop
sub
movsb
pusha
adc
mov
inc
add
xchg
mov
mov
int
or
inc
xchg
or
out
hlt
stc
mov
in
fidivl
or
rcl
and
mov
xor
jno
mov
jns
cmp
or
cmpsl
inc
xchg
inc
hlt
xchg
adcl
lock
roll
pop
mov
lahf
mov
xchg
ffreep
cwtl
push
add
xor
inc
and
stos
das
mov
xor
dec
sbb
leave
jbe
test
andb
pushf
jge
sub
pop
test
aam
pushw
ss
call
hlt
cmp
mov
add
xor
mov
xchg
aas
sbbl
jns
pop
mov
ret
mov
fwait
rcll
sub
mov
iret
jnp
ja
sub
mov
cmp
pusha
xchg
cmp
adc
inc
jle
push
cmp
xchg
popf
sahf
push
cmp
sub
mov
cli
ljmp
sbb
jmp
js
lods
cmc
jle
popa
and
mov
pop
cmp
jo
push
jl
gs
fs
cmp
add
cmpl
pop
mov
std
rcll
add
es
loop
push
bound
fcos
inc
pop
push
mov
push
push
add
add
dec
jns
sub
aaa
out
nop
push
xchg
cmc
cli
nop
mov
hlt
in
dec
cs
inc
negl
jmp
ljmp
mov
out
xchg
divl
cmp
lock
imul
enter
fdivs
jmp
imul
iret
jl
mov
cs
scas
pushf
and
push
cmc
push
fbld
stos
xor
jns
cli
lret
icebp
cli
dec
lret
and
dec
int3
sub
and
inc
adc
inc
lock
push
int3
shl
pop
pop
mov
cmp
adc
sub
mov
add
xchg
les
mov
pushl
outsb
pop
adc
in
xor
into
mov
dec
gs
mov
xchg
push
jo
push
mov
and
xchg
dec
bswap
mov
cli
pop
test
sbb
and
lahf
lods
rol
adcl
inc
jno
push
mov
and
pusha
jb
and
xchg
je
mov
fisubrs
out
int3
xchg
dec
pop
cld
out
push
loopne
mov
or
icebp
jle
shll
add
bound
add
mov
pop
aam
mov
add
incl
dec
sub
xchg
leave
push
cmpsb
xor
sahf
ret
sbb
jae
gs
inc
pop
lret
mov
inc
rclb
sbb
fcmovnu
jo
xchg
test
xlat
jle
dec
cmp
mov
movsb
pop
and
pop
mov
incb
mov
cmc
mov
aam
and
rcrl
sahf
mov
sbb
dec
decl
sti
mov
cmp
sbb
adc
les
ds
push
adc
or
mov
outsl
mov
lods
jge
jp
ljmp
nop
and
inc
add
add
mov
push
orb
mov
nop
ficomps
aas
inc
push
inc
ja
adc
jno
push
add
fsubl
push
pop
mov
cmp
movsl
out
xlat
das
dec
lret
popl
nop
add
cmp
xor
dec
xchg
fsubp
dec
pmaddwd
daa
push
fdivr
jae
in
add
push
outsl
ret
pusha
pusha
cmpsb
mov
jbe
and
lcall
and
test
jle
ja
jecxz
cs
push
adc
scas
test
xchg
fs
jns
das
inc
xchg
lock
sti
insb
push
jns
cli
lea
xlat
cmp
insl
add
mov
in
xrelease
pop
jno
add
xchg
sbb
jno
loopne
pop
test
mov
pop
or
cli
jmp
cmp
arpl
imul
fdiv
lret
jae
cmp
rcrl
inc
inc
in
lods
lods
xchg
mov
push
sub
push
clc
fidivrs
push
pop
dec
scas
mov
jns
aaa
adc
dec
fidivs
xchg
fdivrs
pop
lods
dec
xchg
push
lock
mov
dec
mov
pop
xor
cmc
mov
scas
in
outsl
mov
jecxz
cmovae
push
addr16
pop
pop
xchg
push
sub
pusha
mov
xor
pop
inc
aam
jge
or
xchg
cmp
pop
ja
cltd
adc
int
push
mov
hlt
pop
jmp
jno
mov
cmp
push
stos
adc
mov
mov
aad
movsl
int3
dec
sbb
ret
add
dec
neg
repnz
js
or
jp
jle
cmp
mov
sub
jmp
pop
mov
sub
xor
sbb
out
sbbb
repnz
adc
popf
ja
clc
lret
mov
cmc
cld
in
mov
clc
dec
sub
xchg
shr
pop
sti
enter
hlt
sbbl
fucom
stos
mov
lods
stos
popa
inc
mov
pop
popa
pop
or
nop
inc
mov
outsb
cld
repz
into
jbe
nop
push
inc
movsb
lcall
cmpsl
mov
sub
push
dec
stos
xlat
int3
out
add
jno
pop
cmc
push
lcall
and
movsb
pop
rcrl
dec
sbb
mov
cmp
adc
out
and
mov
or
jge
mov
adc
mov
lods
mov
stos
mov
jnp
shrl
rcrl
addr16
mov
mov
xchg
mov
hlt
dec
jo
xlat
cltd
in
mov
sub
and
fstps
jbe
and
sub
in
lods
xchg
pop
mov
xor
mov
fadd
jae
mov
imul
jb
pop
out
mov
mov
inc
mov
inc
dec
jge
mov
adc
or
sbb
sti
loop
cmp
iret
adc
mov
sbb
push
hlt
movb
mov
and
enter
in
into
add
bnd
movsb
cwtl
and
jb
adc
push
adc
dec
mov
repz
shl
enter
push
ret
leave
js
adc
or
arpl
add
lods
xor
into
xor
mov
es
cltd
dec
sub
mov
sbb
clc
jo
dec
lahf
cmp
jae
shrl
shrl
sbb
pop
out
fcompl
hlt
mov
add
insb
inc
mov
mov
mov
dec
pop
inc
dec
mov
lods
pop
cmp
jo
mov
ds
cmp
add
fcompl
jp
cli
faddl
cmovp
pop
flds
fimuls
dec
mov
ror
movsb
and
jmp
scas
jle
jns
ljmp
js
or
pop
mov
xchg
es
mov
call
and
mov
xor
mov
mov
daa
jl
gs
fiadds
shl
ljmp
mov
push
dec
push
mov
js
inc
jmp
inc
inc
add
lahf
push
xchg
mov
xor
fidivl
adc
rolb
in
sub
inc
inc
idiv
jp
mov
shlb
cmp
lahf
sbb
das
inc
stc
lds
hlt
mov
sbb
vmovsd
insl
mov
jg
push
orl
test
cmp
andl
aam
shlb
loope
pop
out
adc
outsb
mov
mov
sbb
xchg
pop
sub
das
lods
or
push
rcrb
sub
lret
scas
adc
out
push
fs
or
xor
movsl
lcall
out
out
insl
sahf
push
push
cld
xor
shlb
mov
lahf
push
adc
mov
movsl
test
movsb
jg
fsubrs
les
pushf
add
jae
mov
icebp
out
leave
xlat
sbb
pop
mov
and
aas
inc
ja
cmp
mov
mov
and
jns
add
int3
dec
inc
add
je
lea
cltd
adc
sub
inc
xchg
and
inc
subb
push
clc
icebp
lds
pop
mov
mov
pushf
leave
jmp
lock
fldl
repnz
lcall
push
filds
jl
mov
jo
adc
iretw
sahf
xchg
repnz
clc
lret
icebp
leave
jmp
or
pop
xchg
push
inc
mov
jnp
js
fcmove
push
sub
or
adc
and
xchg
inc
or
cmpb
stos
pop
js
incb
maskmovq
add
js
sbb
push
mov
in
popa
mov
enter
insl
sbb
lret
dec
sbb
sbb
adc
cwtl
outsb
loopne
test
dec
and
xlat
shr
cmp
and
mov
mov
fstpt
xor
jmp
movsl
mov
xchg
add
mov
push
mov
movsl
fstl
jmp
outsb
mov
shrb
jbe
xor
or
jb
aas
sbb
cli
je
sub
imul
leave
jns
jae
push
lret
mov
leave
enter
stos
add
jo
mov
jmp
pop
pop
mov
mov
arpl
add
les
int3
lods
xor
or
push
ret
test
ds
ud0
or
andb
clc
add
jne
or
push
sub
pushf
mov
movsb
push
mov
pusha
out
push
dec
daa
shrb
mov
xchg
mov
pop
movsb
insb
into
fbstp
imul
ss
ja
stos
out
subb
dec
aam
in
popa
sbb
mov
notl
jne
ja
sahf
adc
and
repnz
push
in
xor
rcll
lahf
adc
es
sub
push
sub
scas
cltd
add
icebp
add
mov
sub
xor
data16
inc
jo
xchg
cmovae
cmc
fs
push
dec
out
and
out
push
lock
ficomps
pop
ffree
and
int3
out
xchg
test
jno
sbb
adc
or
dec
xor
mov
sti
sub
push
in
fcomip
xchg
int
inc
fnstcw
stos
gs
mov
inc
and
out
lret
cltd
push
mov
scas
cmp
pop
ret
ret
add
or
or
sbb
data16
imul
loopne
cwtl
add
xor
pop
into
jle
fldl
popf
or
sbb
or
nop
mov
jae
test
jb
mul
push
xor
movsb
pop
or
push
dec
jp
add
cld
xorl
xlat
pop
xchg
cmp
pop
in
aas
mov
sub
mov
rolb
and
mov
cltd
cmpsl
push
and
movsl
incb
push
mov
mov
inc
cmp
rcl
mov
lcall
jne
jb
add
cmpsl
or
inc
jnp
lret
inc
jne
aas
sbb
jo
es
cmp
dec
lods
int
es
push
dec
push
fcompp
cmp
xor
es
cli
mov
inc
test
out
sub
dec
and
and
hlt
test
fcoml
imul
pop
enter
scas
and
mov
cwtl
int3
lds
adc
outsl
out
dec
xchg
jnp
dec
inc
dec
xchg
es
cmc
lods
repnz
mov
das
and
push
xchg
scas
cld
push
xor
mov
sbb
orb
jle
sahf
scas
mov
mov
cmp
pop
inc
inc
aas
aad
pop
mov
adc
lods
mov
insl
stc
lea
fwait
push
int3
or
imul
mov
sahf
bnd
add
popf
add
loop
lret
and
rcrl
mov
hlt
mov
xor
adc
aad
repz
push
in
inc
jg
std
adc
or
aaa
mov
cmp
jbe
mov
adc
rol
popf
add
imul
inc
jmp
add
jbe
dec
and
xor
dec
jo
outsb
das
fdiv
ja
les
int
insb
in
pop
mov
jge
call
out
sub
push
mov
lods
mov
test
aam
rcrb
push
inc
dec
mov
sbb
adc
sbb
mov
add
movsb
and
xor
imul
jp
xchg
jp
popf
push
adc
mov
pop
cmc
scas
das
cmp
pop
popa
adc
sub
pop
xor
dec
pop
cmp
dec
loop
mov
insb
push
leave
push
jmp
push
fisubl
repnz
dec
nop
jne
mov
aas
popf
cmpsb
out
add
aam
dec
push
inc
jae
or
aad
lods
sub
mov
xchg
lock
xor
push
insb
and
loop
mov
scas
int3
mov
mov
fwait
sbbb
addr16
mov
jmp
add
inc
adc
int
pop
inc
ret
or
mov
dec
insl
bound
ja
ja
jnp
test
sbb
adc
aam
in
out
mov
mov
mov
stc
loop
popa
xor
lahf
mov
push
sub
mov
add
sti
clc
add
insl
jo
jl
andl
pop
loope
in
jmp
mov
arpl
pop
xchg
orb
repz
push
xor
test
pop
loope
push
test
pusha
lods
cwtl
bound
jl
and
push
iret
loope
cwtl
cmp
test
mov
in
pop
mov
outsb
inc
mov
mov
ds
jne
sti
or
inc
lock
push
frstor
clc
lcall
inc
jnp
lahf
mov
js
loopne
mov
adc
fsubrs
fistps
jne
mov
movsb
in
xchg
mov
adc
push
mov
push
or
mov
fidivrl
rcrb
mov
stos
adc
lahf
sar
xchg
lret
sbb
lods
pop
mov
cld
jne
outsl
insl
int3
insb
bound
adc
sar
mov
out
test
hlt
ficoms
mov
xchg
fwait
lret
inc
loopne
rolb
xchg
or
fwait
out
push
movsb
in
xchg
leave
lds
push
xchg
or
pop
shrb
xchg
pop
test
and
jle
xor
es
inc
xchg
in
sarb
stc
ffreep
sub
mul
lea
mov
icebp
mov
dec
pop
push
and
sbb
sub
out
pop
sbb
shlb
ror
mov
dec
sti
push
lcall
sbb
fcmovnu
inc
fcomip
dec
pop
or
inc
stos
cwtl
sahf
mov
inc
popf
fs
imul
pop
cmpl
mov
fidivrs
cmpsb
mov
adc
mov
test
or
jle
xor
in
fiaddl
jns
jp
adc
sub
sbb
mov
mov
sbb
adcb
imul
sbb
mov
cltd
movsl
in
mov
cld
sbb
cmp
mov
repnz
jbe
insb
dec
adc
pop
and
pop
call
imul
mov
inc
jae
incb
mov
lods
xor
add
push
mov
adc
or
out
test
xchg
sub
pusha
jae
xor
dec
dec
imul
and
movb
popf
dec
lret
mov
imul
enter
loopne
cwtl
dec
in
sbbb
jg
xchg
cmpsl
xor
jecxz
into
xor
push
insl
inc
and
sbb
mov
fcom
idiv
push
sbb
and
pop
fstp
pop
cmp
xor
lret
lods
xchg
in
jbe
dec
xchg
or
lods
cmp
nop
mov
mov
lret
lock
sbb
xchg
out
jb
pop
lret
cmc
ret
fmull
addb
fwait
mov
cmp
push
and
jno
popf
outsb
mov
adc
lods
mov
sbb
daa
jmp
inc
cmp
test
pop
push
mov
add
inc
fdivrl
cmp
jne
out
jl
mov
mov
stc
rcrl
mov
inc
pop
daa
sub
incl
lea
insl
xor
mov
push
or
jecxz
jg
inc
dec
sbb
test
pop
jo
and
in
rolb
cltd
dec
jnp
jb
mov
imul
dec
test
dec
leave
out
sub
jl
daa
mov
jp
jbe
repz
cmp
test
movsb
rcrl
xor
orb
pop
jg
mov
aad
pop
add
test
mov
aam
out
insb
in
fistpll
mov
adc
and
adc
mov
iret
jo
inc
mov
push
lahf
adc
pop
sbb
xor
sbb
xor
ss
out
adc
ds
push
jmp
mov
mov
in
cld
cmpl
mov
scas
sbb
jnp
xchg
imul
inc
pop
loop
popa
adc
dec
sub
sub
and
push
jp
jns
mov
push
repnz
jmp
fwait
mov
mov
jae
test
push
test
gs
imul
clc
xor
mov
test
fldenv
xchg
shl
loop
sti
adc
jmp
mov
inc
lret
jnp
add
inc
xchg
out
adc
ret
loopne
and
out
mov
push
push
xchg
cli
mov
daa
pop
dec
dec
test
popa
xchg
jnp
fcom
icebp
sub
mov
jae
and
or
inc
icebp
or
stos
push
and
shlb
nop
mov
jg
jnp
shlb
or
arpl
shl
xchg
testl
bound
or
inc
mov
xor
test
sar
jp
test
clc
into
mov
das
xchg
mov
addr16
sub
loope
cli
dec
cli
shlb
xchg
push
mov
call
mov
stc
jg
rcl
aaa
add
insl
pop
push
xchg
sbb
xor
xchg
add
cmp
cmp
adc
mov
faddl
enter
push
push
cli
mov
pop
jno
iret
cmp
push
inc
sub
in
jne
sub
inc
dec
xchg
cmp
call
mov
xchg
clc
aas
arpl
sbb
and
mov
rolb
aad
cmp
xchg
in
test
and
sarb
or
adc
fcmovnu
fidivrl
insl
roll
fucomi
jae
dec
aam
test
scas
push
mov
repz
pop
xor
pop
adc
sti
cmc
jecxz
pop
jae
and
cld
cmp
mov
gs
xchg
or
cmp
ja
jno
push
fcomps
js
adc
test
insb
subl
das
push
insb
mov
mov
cmc
push
xchg
sub
adc
inc
xchg
mov
mov
push
addr16
outsb
pop
push
fistpl
into
mov
mov
cmp
fadd
dec
scas
addl
int
xor
repz
cmc
cmp
push
mov
pop
pop
bound
push
test
mov
xchg
out
jae
push
jae
out
dec
iret
jp
push
jecxz
sbb
pop
in
sub
ljmp
stos
mov
into
mov
pusha
in
sub
mov
loope
sahf
ja
xchg
pop
es
push
fcmovnbe
dec
adc
add
inc
call
fsubrs
and
add
mov
lret
adc
mov
and
xlat
mov
aaa
loope
movsb
adc
push
cmpsb
mov
push
loope
stc
icebp
pop
pop
dec
push
loop
popa
test
dec
ja
in
mov
rolb
jge
mov
cmpl
mov
add
lds
loop
pop
mov
fwait
jecxz
mov
fiaddl
mov
das
jns
inc
pop
jl
dec
scas
stc
test
mov
jae
add
cmp
je
lods
and
pushf
ret
jo
rcrb
or
dec
jbe
pop
adcl
push
out
push
push
sti
fnsave
nop
or
push
add
out
sahf
sbb
sub
inc
push
mov
pop
test
dec
dec
cmp
gs
xor
stos
aam
push
es
xlat
jns
ljmp
mov
hlt
ljmp
rorl
scas
in
fdivl
jbe
mov
dec
adc
scas
sub
enter
inc
push
mov
pop
jo
push
ret
hlt
sbb
hlt
cmp
adc
xchg
push
std
xchg
rolb
in
and
fcompl
pusha
cmp
movsb
or
imul
in
mov
mov
xchg
push
adc
add
sbb
cmp
cmpsl
sub
cmp
pop
out
adc
ror
nop
xor
loopne
popl
jns
mov
mov
fwait
jmp
repz
jg
ret
add
out
inc
push
pop
call
jge
sahf
ds
dec
movsl
inc
add
arpl
push
test
inc
or
std
xchg
jb
mov
pop
pop
sub
xor
test
sarb
mov
add
int3
movsl
daa
mov
icebp
rorb
notb
les
jae
sbbl
sub
mov
sbb
leave
in
mov
mov
test
cmp
les
add
sarl
lahf
loopnew
aaa
push
outsl
xchg
fmul
xor
dec
inc
daa
jp
sahf
jae
adc
or
orb
shlb
cmp
idivl
add
test
stc
mov
mov
pop
mov
pusha
adc
dec
cmp
xor
and
mov
add
adcb
stc
in
bound
ds
mov
push
cs
fstp
xor
flds
push
leave
and
jae
les
pop
pop
fstps
pop
movsb
or
or
sub
jo
xor
stos
insb
sbb
insl
sbb
inc
jns
sub
rolb
fwait
inc
icebp
push
mov
ja
jmp
pushf
mov
and
xchg
test
imul
outsb
lock
mov
and
or
and
push
pop
xchg
aas
dec
jnp
add
aad
sub
int
sbbb
enter
push
lods
sub
fdivrl
insb
add
lret
xor
pop
dec
push
stos
aad
push
jmp
xchg
add
addr16
sub
or
push
add
loopne
xor
bound
xchg
jo
andb
in
iret
clc
dec
jp
inc
mov
stos
ss
xchg
lods
jnp
mov
sub
idiv
jae
repz
cmp
and
sub
stos
or
lcall
lcall
mov
mov
jae
shlb
dec
push
notl
sbb
and
jo
cmc
cli
in
lcall
into
dec
pop
lret
cli
mov
fs
inc
cmpsl
xchg
jge
jge
add
push
dec
xor
dec
das
lock
shl
mov
fs
mov
or
es
lea
xor
jns
push
adc
mov
test
cmp
jb
xchg
es
dec
xchg
lret
das
enter
pop
jns
shlb
jae
adc
or
cmpsl
xor
mov
int3
test
jmp
and
pop
test
mov
ds
xor
sbb
inc
subl
int3
cltd
push
rcrb
lock
cmp
fidivrl
in
rclb
movsl
push
xchg
fs
pusha
outsl
ret
lds
hlt
push
in
jb
xor
dec
mov
lock
jb
fld
xchg
push
mov
sub
lods
pop
xchg
xor
add
lods
pushf
mov
add
imul
ss
std
insl
ficoms
cmp
lret
push
sub
xchg
stc
orb
dec
out
mov
repz
pop
jle
jns
xor
xchg
stc
sub
jle
mov
cwtl
pusha
xlat
int
clc
cltd
in
or
out
jno
dec
jbe
hlt
dec
lret
imul
xchg
pop
cmc
push
lahf
fimuls
jle
pop
inc
dec
lds
sbb
lods
mov
int3
xor
or
add
mov
cmc
aas
bound
movsb
jnp
adc
sti
inc
rcrl
cmp
xchg
arpl
sbb
mov
fldenv
inc
xchg
jo
push
pop
mov
xchg
push
int3
in
stos
pop
imull
in
or
sahf
popf
scas
gs
dec
mov
sub
pop
ret
mov
lock
adc
adc
push
lock
inc
jg
dec
mov
pop
mov
rolb
mov
or
js
mov
dec
sbb
cwtl
cmpsb
popa
push
mov
fistl
pop
jp
xchg
cmp
sbb
jae
js
lock
lods
int3
aad
push
adc
push
jle
mov
dec
icebp
push
scas
xchg
xlat
out
mov
adcl
jl
pop
push
rol
int
pop
adcb
fsubrs
repz
mov
int
adc
lock
mov
add
sti
int
pop
pop
or
adc
and
inc
sub
xlat
or
xchg
packsswb
out
movsb
nop
fstpl
xchg
jg
or
test
leave
dec
push
jne
sbb
dec
inc
loopne
enter
mov
and
les
hlt
push
add
push
pop
movl
jae
shrb
enter
jle
mov
js
leave
mov
mov
xor
add
emms
jo
jnp
cld
xor
xchg
jne
add
es
xchg
movl
test
fs
dec
psubb
push
movsl
xchg
mov
mov
fdivrp
jge
lahf
mov
mov
es
or
xchg
hlt
and
fidivrl
push
outsl
sbb
pop
outsb
pop
aad
test
fnstenv
sub
dec
and
icebp
popa
loop
push
movsl
out
sbb
sahf
and
mov
sbb
test
add
repnz
or
push
xor
jo
push
xchg
jo
cmp
or
pmaddwd
jnp
adc
test
mov
cmp
les
fcmove
inc
xor
stos
inc
stc
jb
pop
int
mov
or
mov
movsl
and
gs
fmulp
push
pop
hlt
jmp
cmp
add
sub
sub
add
roll
mov
inc
mov
int3
cli
sub
sbb
push
and
faddl
inc
ret
cmp
mov
fs
push
or
pop
push
jnp
xchg
mov
mov
fbstp
pavgw
lea
imul
xchg
lock
mov
sti
movsl
incb
jmp
fmull
mov
mov
and
xchg
ljmp
jb
lea
cmp
fsubl
jo
jno
test
fiadds
jp
stc
or
pinsrw
sub
xor
lods
movsb
sub
sub
lret
sub
mov
inc
sahf
dec
std
push
les
add
fnsave
popf
fbstp
insb
clc
push
lods
gs
shll
mov
push
adc
push
pop
js
or
jle
and
cld
adc
repnz
je
bnd
dec
xor
nop
xchg
data16
jnp
xchg
in
icebp
lods
cmp
and
mov
faddl
insb
in
ja
paddusb
cmc
int
or
or
out
cmpsl
stos
stc
adc
cmp
sti
inc
mov
das
in
sub
adc
mov
cld
mov
std
pop
sar
mov
ret
add
js
mov
push
in
mov
xchg
sahf
mov
pop
mov
mov
mov
pushl
daa
cli
add
jo
adc
pop
inc
or
into
orb
fmulp
cmp
pop
mov
push
sahf
pop
jb
psubq
adc
sbb
lret
adc
sub
xchg
xchg
imull
and
sub
push
mov
xchg
lods
rcrl
inc
dec
cmpl
adc
xor
testb
jb
mov
inc
out
push
out
push
fwait
js
xor
mov
fisubs
fistl
cmpsl
push
je
fmuls
int3
std
bound
sub
pop
scas
xor
imul
jg
jl
adc
jge
sbb
sub
mov
mov
jl
test
and
mov
test
fildll
movl
adc
push
push
mov
fucomp
imul
mov
mov
inc
inc
sbb
xor
push
or
pusha
aad
pushl
aas
es
pop
jg
sub
mov
mov
mov
jne
and
movsl
inc
bound
addb
and
push
insl
or
mov
xchg
iret
jg
sub
sbb
js
add
mov
xor
test
out
mov
icebp
mov
add
pop
push
in
jmp
cmc
insb
inc
sahf
cmp
pop
sub
mov
movsb
pop
xor
fdivs
cmpsl
push
shll
lds
dec
fcomi
add
xor
es
in
mov
pop
movsb
push
and
mov
sub
inc
pop
jge
arpl
movsl
xor
subl
dec
arpl
cmpsb
and
mov
add
jl
mov
dec
cs
or
out
fwait
mov
mov
lcall
incl
pop
scas
jmp
mov
test
mov
sub
ja
add
lret
jo
lds
outsb
loop
js
xchg
imul
sahf
jmp
sub
sbb
mov
inc
push
jbe
in
pop
sub
in
sub
mov
jmp
cwtl
dec
popf
pop
add
jb
pop
movsl
jmp
lods
icebp
jge
cmp
mov
ret
adc
xchg
push
jo
sbb
mov
xor
push
adc
push
add
push
mov
sbbb
cmp
adc
xchg
dec
sub
out
es
cwtl
mov
js
int3
imul
xlat
lahf
test
jo
les
cmp
sahf
pop
mov
cmp
mov
pop
out
sbb
cmp
scas
lds
push
cmp
or
jp
mov
xor
xor
das
add
rclb
mov
pusha
xor
and
mov
dec
das
testl
jae
xor
lahf
mov
std
lods
pop
decl
sti
jmp
xchg
adc
mov
dec
pushf
out
into
add
mov
jo
mov
jg
jnp
ja
mov
clts
enter
loope
into
dec
mov
sbb
stos
fstpt
mov
insl
out
pop
pop
cwtl
outsl
daa
mov
inc
ret
lret
daa
xor
popf
push
pop
fdiv
mov
inc
imul
imul
mov
adc
sub
scas
lret
scas
jns
ljmp
add
rcrb
out
out
add
fisttps
test
push
shrb
clc
rol
xlat
int
sub
or
adc
nop
dec
add
push
mov
out
adc
dec
mov
cmp
rcrl
inc
cmp
pop
orl
scas
xchg
jb
push
pop
outsb
add
in
lret
inc
pusha
and
idivb
inc
rol
jno
push
aad
mov
push
jmp
fwait
sub
mov
inc
inc
dec
pop
inc
dec
pop
loop
lret
sti
inc
arpl
sub
pop
or
nop
cld
dec
adc
add
out
add
xor
fbstp
cmpl
pusha
adc
cmp
imul
rcll
push
jle
push
jge
fdivl
outsl
or
out
subb
pop
int3
rcr
lcall
es
test
shll
jo
adc
or
xchg
hlt
std
pop
ljmp
or
cld
jl
pushf
ret
loop
daa
data16
sti
lea
mov
push
mov
jb
ret
sbb
xor
in
sahf
adc
repz
xor
aam
jae
mov
mov
or
cltd
inc
and
mov
push
push
fsubs
repz
stc
push
cmp
icebp
xchg
sahf
repz
js
sub
dec
ljmp
and
push
imul
or
dec
mov
roll
aaa
call
mov
push
xor
mov
jnp
push
mov
testl
mov
and
mov
rorb
fldcw
ljmp
mov
cmp
jno
cs
inc
shlb
push
inc
lcall
lock
cmpsl
lcall
lds
inc
mov
and
cli
and
mov
mov
or
dec
adc
jle
mov
ljmp
rcr
mov
stos
mov
ret
xor
stos
mov
mov
mov
jge
dec
insl
xlat
sub
xor
mov
in
xor
cmpsb
cmc
out
xchg
and
idivl
push
ds
push
cmp
or
dec
dec
mov
pop
xor
movsl
subb
insb
dec
dec
cld
pop
nop
inc
mov
sbb
pop
ret
call
xor
fidivs
lret
lods
dec
push
xor
int3
std
outsl
imul
clc
lock
sub
push
arpl
or
ja
repnz
lock
and
iret
ss
popf
pop
dec
enter
pushf
sbb
jg
adc
in
jnp
lahf
nop
loope
test
repnz
push
inc
movsl
xlat
int
dec
dec
fs
popf
or
cmp
mov
push
pusha
int
sbb
es
adc
shl
cmp
in
mov
daa
jae
int3
inc
and
lret
loopne
mov
dec
filds
out
xchg
fmull
mov
pop
movl
stos
sbb
add
icebp
adc
xor
inc
and
cs
jg
ficompl
fs
imul
jns
int3
jno
fiadds
cltd
test
aaa
pop
call
cmp
adc
adc
jl
xlat
fisubrl
push
pop
sub
aad
nop
and
xchg
add
add
cld
cli
and
jnp
fdivrl
push
shlb
orb
xchg
rcrb
test
int
cmpsb
mov
imulb
or
test
xchg
out
repnz
xlat
push
sahf
pop
mov
movsb
int3
insl
sbbl
test
sbb
dec
xchg
xchg
adc
int
cmp
mov
mov
cltd
sti
roll
rep
adc
adc
mov
inc
stos
std
mov
cmpl
outsl
cmp
idivb
cwtl
xchg
xchg
cmpsl
daa
cmp
call
cmp
dec
jl
xchg
adc
shl
int3
mov
sbb
push
fstps
push
cld
and
fdivl
jge
pushf
inc
adc
push
pop
cld
aaa
sbb
sbb
lea
sarl
push
jmp
cmp
insl
dec
repnz
je
push
and
incl
movsb
add
push
sbb
test
mov
adc
dec
pop
ljmp
xchg
loop
sahf
sbb
loop
addb
fs
and
jns
sbb
fiadds
insl
es
sbb
push
ja
inc
out
js
xchg
push
aaa
lock
sbb
scas
inc
rcll
cmp
mov
mov
mov
push
scas
dec
movsb
nopl
pop
mov
popa
cmp
add
mov
push
jmp
or
xchg
push
lds
mov
pop
sbb
xor
sub
xchg
cmp
xor
xchg
xchg
and
idivb
dec
fsubl
loopne
insl
fwait
jl
das
cli
pop
adc
into
sarb
inc
mov
imul
add
fldl
cmp
aam
mov
pusha
mov
sbb
or
pusha
pop
mov
fs
fmul
and
lods
fsub
sar
xchg
inc
lock
insl
cmp
aad
xchg
or
subb
into
sub
and
cwtl
add
jb
jmp
mov
es
jno
out
xor
xchg
jns
sub
jle
cmp
jbe,pt
xor
adcb
cld
movsb
negl
rolb
fcmovbe
jg
add
push
inc
lea
jbe
mov
test
lods
mov
push
popa
adc
cwtl
push
xchg
cmpl
lock
lea
and
mov
test
or
sub
test
pop
push
jns
add
std
lods
jne
cmp
cmp
cmp
push
outsl
cltd
adc
int
jecxz
or
outsb
ffree
inc
ss
adc
je
jg
ret
lods
push
lea
push
fisubrl
dec
jge
push
push
std
insl
lcall
dec
xchg
cwtl
jecxz
loopne
push
and
les
jo
lods
mov
add
mov
in
mov
and
jle
cmpsb
adc
add
fwait
sbb
test
cwtl
cmp
movsb
mov
insl
or
adc
jp
in
push
lock
sti
cmp
leave
mov
push
mov
into
jae
leave
cmpsl
jl
mov
inc
mov
imul
inc
push
lods
gs
shl
mov
or
lcall
fadds
aam
push
add
pop
out
rcrl
xchg
shll
adc
adc
lret
push
sbb
mov
lahf
push
inc
cmp
dec
push
xchg
test
jmp
lret
inc
xchg
iret
lods
mov
js
insl
imul
js
movl
xor
shll
dec
pop
mov
push
jae
stc
test
adc
enter
shrb
xchg
adc
xchg
sbb
xchg
jbe
xchg
stos
test
dec
movsb
out
arpl
cld
sti
or
popf
jbe
in
repz
mov
in
inc
xor
mov
loop
xchg
and
shl
popa
sub
sbb
push
cmovp
fnsave
xor
add
int
jl
enter
pop
lahf
cmp
leave
cmpsb
dec
mov
jae
inc
dec
fwait
jl
or
pop
xchg
cmp
aad
lret
rclw
cmp
imul
int3
cltd
call
scas
add
pop
loop
dec
orl
movsb
pop
stc
xchg
aad
push
xlat
cwtl
pop
cmpsb
and
jmp
lret
xor
ja
xor
push
mov
roll
cmp
inc
xor
add
repz
xorb
pop
push
pop
push
mov
arpl
in
xor
mov
and
movsb
arpl
add
and
fisttpll
shlb
pusha
jno
or
ret
aaa
sub
xchg
inc
mov
mov
lret
xchg
les
xchg
inc
and
sub
push
inc
xchg
jns
push
test
test
cmp
stc
pop
push
xor
pop
icebp
jno
loope
scas
sti
cmpsl
imul
imul
xchg
rcrb
add
dec
xor
dec
fildl
push
arpl
stc
rcrl
lea
sarb
and
inc
mov
pushf
xchg
pop
adc
popf
scas
out
mov
and
push
dec
mov
nop
nop
out
mov
shr
adc
cmp
nop
nop
stc
loop
mov
push
ljmp
out
fmuls
push
rcll
sub
clc
mov
inc
pushl
dec
notb
add
incl
stos
mov
xor
adc
fbstp
addr16
xchg
sub
bound
jecxz
cmp
add
fidivl
movnti
cmp
xchg
mov
fildl
mov
imul
or
inc
xor
lods
cmp
in
inc
decl
push
xor
xchg
pop
iret
mov
out
insb
lods
pop
ret
jne
mov
and
add
imul
mov
cmpsb
iret
or
pushf
push
mov
aad
xchg
lods
adc
jb
pop
dec
cmpb
fcmovnu
jb
mov
dec
mov
lods
push
int
pusha
test
cmpsb
nop
pop
sbb
jmp
mov
push
pop
pusha
stos
jbe
xorb
std
insb
ficoms
in
sub
fsubs
and
js
in
gs
mov
enter
xchg
dec
dec
mov
mov
cli
fistpl
lcall
pop
sub
adc
test
mov
stos
dec
add
pop
lods
imul
and
mov
lea
in
cmpsb
jecxz
and
jae
jnp
ja
sbb
or
push
gs
xchg
hlt
aaa
and
outsl
test
pop
mov
mov
mov
out
aad
imul
cwtl
sub
mov
sub
mov
arpl
aad
mov
imul
sub
pop
imul
jne
loope
bound
adc
ja
in
or
cli
push
pop
sbb
cmp
cmp
push
cmp
adc
ljmp
mov
arpl
lcall
rcll
rorl
mov
cmp
and
adc
pop
cmpsb
mov
adc
mov
adc
lds
aad
lahf
dec
lods
testl
sub
into
add
push
adc
mov
mov
movsl
pop
imul
pop
jecxz
rolb
mov
addr16
pop
hlt
loop
lret
xor
leave
and
dec
es
lret
sbb
arpl
inc
idivl
and
in
lea
lahf
cmp
cmp
jb
pop
push
or
pop
or
xchg
or
jnp
call
stos
cmc
mov
mov
popa
push
ret
popa
hlt
loope
andb
jl
cmp
cmp
hlt
mov
hlt
dec
jle
ret
pop
sub
dec
adc
inc
fwait
imul
fmul
mov
ret
ret
out
and
lock
jle
mov
mov
add
out
je
add
pop
pop
daa
mov
lret
push
sub
or
popa
icebp
into
mov
pop
and
lret
mov
inc
push
iret
xor
and
mov
cmp
loopne
gs
cmp
or
add
fwait
lea
aad
out
xchg
mov
stos
pop
add
aas
iret
stc
add
ret
sub
push
xchg
fisttpll
jp
adc
rorb
lret
test
div
dec
mov
inc
loop
xor
add
std
imul
xchg
add
je
icebp
sub
repz
lcall
test
out
fs
mov
xchg
push
loope
stos
lock
sbb
scas
adc
mulb
sub
out
xor
ficomps
push
jge
lods
adc
sbb
and
or
sbb
inc
xchg
outsb
mov
adc
sbb
in
mov
fsubl
xor
pop
mov
xlat
pushf
pop
fcomps
cs
aad
mov
scas
lods
or
xchg
nop
bound
hlt
pushf
mov
pop
adc
pop
jo
xor
idivl
repz
cmp
sub
rclb
pop
mov
push
cmc
sbb
bound
movsb
scas
fwait
incb
into
xchg
jns
pop
enter
fcoml
sbb
cli
insb
mov
aas
xor
xor
dec
cwtl
dec
stc
mov
or
bound
mov
call
aaa
scas
stc
cltd
pusha
jl
jno
or
lcall
jbe
data16
sub
push
bound
mov
push
icebp
push
inc
clc
mov
inc
cmp
dec
or
out
addr16
mov
or
sub
scas
jo
roll
jns
lods
in
and
js
sbbb
or
adc
sbb
stos
testb
lret
movsl
negb
pop
add
add
fstl
xchg
shrb
lret
sarl
jno
enter
xor
adc
jo
jnp
cmp
stos
inc
and
cmp
xchg
gs
inc
mov
leave
and
cmp
in
pop
stc
push
xor
out
push
shlb
adc
scas
mov
mov
movsl
popa
xchg
or
dec
test
xor
or
cs
pop
push
ret
ds
lahf
les
fstpt
js
cmp
mov
mov
ljmp
push
stos
lret
ficomps
dec
add
cmp
lcall
iret
xchg
push
dec
ret
push
dec
and
mov
das
pop
dec
gs
or
cmpl
add
out
add
test
iret
test
loop
test
add
lret
stos
aas
test
test
ljmp
mov
dec
pop
cmpsl
movsl
push
sub
aaa
jmp
int
cli
mov
sub
cmp
int
fsubl
dec
in
jmp
adc
add
sbb
mov
cs
xorb
dec
je
dec
add
add
pop
jnp
or
xchg
mov
ficoml
pop
jge
aaa
cmp
jp
out
test
xor
fldz
mov
popa
mov
shll
rclb
sub
jp
bound
pop
loop
insl
inc
movd
add
addr16
lea
sahf
std
sbb
mov
mov
insl
mov
mov
or
mov
push
xchg
pusha
add
scas
out
push
test
stc
stos
cmpsb
xor
add
fs
inc
jns
mov
push
mov
sbb
fimull
pop
push
inc
push
cmp
popa
jmp
xchg
sbb
mov
push
dec
mov
lret
stos
cmpl
add
cmp
lds
sbb
fmul
rcrb
xor
and
dec
aaa
addr16
lods
sub
mov
fs
stos
jnp
ret
pop
push
mov
push
xchg
mov
pusha
aas
dec
adc
lods
add
loop
jb
jne
and
push
xor
cmp
adcb
pushf
sbb
add
movsl
xor
fmuls
jo
pop
pop
adc
mov
sub
ss
ficoml
sub
aaa
jnp
sub
pop
loopne
sbb
adc
dec
sub
cmp
lock
stos
enterw
aad
jmp
sub
int
adc
mov
dec
out
mov
xor
jo
and
es
rcrb
repz
out
mov
popa
clc
lcall
imul
jno
enter
movl
and
mov
cmp
adc
ja
mov
aas
insb
movsl
fldlg2
xor
sbb
andl
lcall
daa
sbb
loop
xchg
push
add
jb
mov
dec
pop
loop
setge
xchg
pop
sbb
mov
pop
add
je,pn
clc
mov
and
scas
mov
inc
mov
cmp
ds
mov
inc
sub
mov
push
push
divl
mov
sbb
fimull
ret
das
cmc
and
mov
test
mov
push
push
mov
push
pop
scas
in
out
dec
enter
ja
ss
pop
lods
push
stos
pop
mov
xchg
adc
xchg
xor
idivb
push
jg
xchg
jmp
mov
jl
push
lods
movsb
jg
jmp
xchg
xchg
pop
cld
out
iret
icebp
inc
inc
push
cmp
jecxz
cmpl
jle
cs
dec
js
ljmp
loopne
addr16
adc
aas
bound
mov
lahf
mov
push
fildll
shrb
lcall
push
or
rcrb
fimull
sbb
push
pop
popf
lret
sbb
lret
xchg
sbb
rclb
dec
scas
mov
shlb
pop
add
shrb
sarb
xchg
fisubs
jo
mov
dec
pop
sub
xorl
pop
adc
sbb
insb
xchg
mov
or
push
mov
dec
ss
dec
jle
and
shll
popa
stos
xorb
push
in
outsb
pop
push
into
mov
sbb
ret
lcall
xchg
lods
adc
sub
rol
ret
mov
sbb
int3
push
inc
push
out
adcl
jmp
pushf
inc
mov
lods
stos
cmp
xor
mov
sub
cmp
mov
mov
pusha
adc
enter
add
aaa
ret
fs
ficomps
jp
mov
mov
xor
clc
inc
not
mov
aad
leave
les
mov
lea
stc
dec
loope
hlt
pusha
mov
iret
sub
out
mov
xchg
dec
jle
mov
movsb
rol
mov
mov
or
mov
mov
cwtl
pop
dec
jle
mov
leave
movsb
cmp
mov
scas
dec
movsl
int
aad
xchg
sbb
daa
pop
loope
sbb
xor
pop
scas
sub
jg
loopne
daa
aaa
test
jo
aas
pop
push
jmp
xor
fidivrs
mov
ja
mov
mov
dec
mov
dec
add
inc
fisttpl
pop
inc
mov
xor
cmpsl
shlb
jmp
xchg
add
out
push
sub
push
push
sbb
inc
aas
push
adc
jle
testb
enter
pop
nop
mov
je
pop
mov
add
add
lret
mov
jnp
jp
xor
leave
out
test
ljmp
fprem
ja
test
imul
jb
mov
stos
jns
push
sbb
scas
sbb
xor
push
xor
aad
jge
sar
daa
idivl
push
cmpsl
fwait
pop
cmp
rcrl
add
xor
cmp
movsb
sbbb
mov
mov
push
insb
scas
jbe
adc
adc
sbb
scas
sub
clc
cmpsl
sarb
divb
and
dec
incl
icebp
imul
mov
cli
xor
xor
cltd
sub
stos
mov
sub
xchg
aas
and
and
pop
adc
scas
xchg
or
not
dec
cltd
mov
jne
es
cld
push
in
jl
icebp
xor
add
cltd
lahf
sub
lret
int3
mov
in
iret
mov
mov
ja
push
js
mov
add
xor
mov
lock
sbb
icebp
ljmp
xorl
mov
inc
mov
jnp
fstl
mov
xchg
in
addr16
and
pop
adc
xchg
mov
loope
mov
push
out
inc
xchg
pop
inc
lahf
js
scas
push
addr16
cmp
lret
xchg
mov
mov
pop
pop
mul
mov
into
jg
mov
movsl
sar
das
or
push
add
and
andl
jnp
mov
fisubs
das
xchg
xchg
pop
and
or
outsb
pop
mov
push
push
cwtl
lret
rorl
outsl
xor
callw
shrl
pop
fidivrs
cmovb
dec
cs
push
call
sbbl
call
mov
sub
push
adc
pop
sub
xchg
movsl
andb
leave
mov
imul
mov
fwait
bound
add
dec
jecxz
imul
iret
dec
dec
sbb
dec
aam
cmp
xchg
imul
mov
jae
clc
add
imull
inc
lods
jnp
push
loope
mov
dec
add
sub
push
lods
jae
cld
adc
vpmullw
add
mov
mov
push
in
repz
cmp
or
mov
adc
pop
inc
cs
cwtl
xchg
add
jg
pop
or
pop
imul
fs
cltd
imul
ja
add
fbld
mov
orb
rclb
pop
jno
pop
jno
pop
test
add
lret
mov
cmp
adc
mov
stos
inc
call
mov
stos
loope
xchg
mov
dec
sbb
push
inc
jmp
lret
inc
mov
fstpl
or
mov
and
fwait
sbb
lret
lcall
sbb
xchg
add
fdivs
xchg
and
mov
ret
aad
sub
out
pop
lcall
leave
jecxz
push
pop
mov
fs
xor
movsb
bound
adc
jl
test
or
movsb
sub
add
outsb
lock
das
dec
fwait
jnp
cmp
mov
lcall
cs
and
jp
sbb
shlb
test
in
jnp
test
push
sbb
mov
negl
xchg
out
int
lock
cmp
xchg
cld
lahf
mov
lods
sub
adc
xor
mov
add
fadd
mov
adc
cli
and
lret
imul
popf
dec
push
cmp
mov
add
fwait
decb
wrmsr
xor
push
inc
adc
aam
cltd
mov
add
add
mov
test
jbe
jnp
arpl
push
out
mov
cld
xchg
pop
push
adc
fdivrs
push
jge
ret
xor
xchg
int
pop
dec
jp
lcall
outsb
test
dec
ret
and
push
mov
xor
pop
ljmp
pop
das
push
push
nop
pushf
or
cmp
mov
arpl
loopne
and
fists
int3
jecxz
jl
xor
loopne
lds
pop
pop
jno
cwtl
xchg
jecxz
cmpsl
leave
or
push
mov
insl
jl
in
dec
cmc
cmpsl
sbb
pop
mov
sub
add
insb
test
scas
int3
xchg
gs
cmp
inc
xchg
pop
les
mov
sub
add
jo
mov
adc
xchg
daa
imul
or
movsb
mov
sbb
loope
sbb
notb
cltd
sbb
shl
jb
mov
sahf
pusha
lret
xor
dec
push
xor
aas
pop
jnp
clc
test
dec
data16
mov
lea
xor
ret
je
shll
pop
ficompl
in
sub
call
out
jl
cmp
in
mov
imul
fisttpl
imul
pop
or
lock
scas
xlat
mov
dec
dec
cmp
lahf
imul
jno
orb
pop
dec
mov
sbb
sub
sbb
dec
jne
cmp
cli
dec
adc
aas
jnp
repnz
xchg
add
insb
sub
test
lea
movsb
movsb
mov
adc
cmpsb
adc
rcl
inc
jo,pt
bound
loopne
mov
iret
jns
jnp
jmp
xchg
xchg
or
pop
xchg
popa
xchg
lds
stos
bound
push
leave
xchg
mov
mov
in
mov
mov
movsl
mov
mov
mov
add
imul
sbb
inc
stos
es
xchg
inc
cmp
mov
mov
adc
push
insb
jp
fs
add
ror
jae
test
cltd
bound
stos
inc
stos
mov
je
mov
fldl
inc
pop
out
inc
xchg
xchg
push
hlt
mov
pop
sbb
stos
add
dec
into
push
leave
int3
out
rcll
shrl
pop
nop
lock
leave
inc
aaa
aas
jge
pop
adc
rolb
adc
cmpsb
push
pop
clc
pusha
push
outsb
imul
ret
xor
dec
sbb
fidivrs
xor
sub
mov
mov
xchg
xchg
arpl
inc
pop
jecxz
jne
adc
inc
scas
dec
jmp
stos
out
daa
xchg
lock
movsl
and
xlat
mov
and
test
ss
into
int3
push
cmp
dec
aaa
test
xchg
adc
push
mov
lea
push
out
dec
lods
addr16
mulb
ret
aam
push
push
jg
pop
fucomp
mov
popa
dec
inc
push
inc
sarb
inc
sti
mov
mov
xor
sbb
and
xchg
ficoms
push
popf
mov
fists
xor
sub
cmp
push
mov
mov
fucomp
addl
mov
jmp
xchg
pop
lods
jb
dec
jbe
jbe
sbb
movl
jecxz
mov
faddl
jl
mov
xor
popa
repz
xor
push
cld
push
dec
ljmp
cmpl
sbb
stc
sti
test
or
call
adc
sub
pop
adc
xor
sub
inc
jns
scas
inc
mov
out
das
adc
sti
cmpsl
sahf
and
aas
daa
add
mov
mov
pusha
dec
add
out
xor
add
mov
push
sub
sub
inc
mov
push
int
xor
outsl
xchg
mov
out
pop
jle
lahf
ljmp
xlat
mov
add
adc
pop
outsl
xchg
mov
pop
into
pop
push
pop
xchg
jbe
cmp
outsl
mov
fs
and
pop
and
inc
and
dec
jbe
int3
fs
scas
enter
dec
adc
xor
sub
push
int
sub
out
jp
lret
test
out
xchg
insb
hlt
xchg
lret
lds
mov
dec
bound
repnz
sbb
jb
call
dec
cmp
clc
push
mov
leave
pusha
jg
sbb
das
dec
adcb
jle
jmp
xlat
fsubl
mov
imul
or
or
inc
xchg
adc
xchg
push
les
popf
pushf
sarb
fadds
add
dec
cmpsb
test
and
push
mov
icebp
aas
jmp
movl
or
lods
out
fwait
pop
sbb
test
and
xchg
out
sub
fwait
cmp
add
mov
jae
cmp
lcall
loop
sub
push
or
xchg
in
xchg
cmpsb
xchg
dec
mov
and
cmp
xor
mov
mov
add
lret
push
xor
je
popf
cmp
int
or
or
rolb
rcl
sbb
nop
repz
inc
icebp
dec
adc
push
cmpsl
inc
aas
sbb
scas
sub
rcl
adc
stos
jbe
push
sbb
xchg
dec
cmc
cmpl
pop
aaa
je
out
jle
mov
mov
sub
rolb
jne
dec
push
insb
pop
scas
cmp
subl
cmp
sub
hlt
sbb
dec
ss
lret
imul
fsubr
cs
sbb
outsb
or
inc
xchg
fwait
push
push
push
pop
mov
fwait
movsl
cmp
adc
xlat
lret
push
inc
push
clc
loop
jnp
dec
loopne,pt
out
dec
popa
pop
enter
push
pop
or
mov
xor
inc
jge
inc
inc
cmp
mov
in
jg
mov
and
aam
das
lahf
sub
dec
sub
and
cs
xchg
push
mov
int
sub
mov
add
fsubrs
sub
int
into
push
stos
add
sti
mov
or
mov
out
adc
dec
test
inc
imul
addr16
adcl
mov
cmpl
xchg
fbld
addr16
pop
sahf
sti
shrl
inc
aad
add
clc
aad
lods
rorb
push
add
mov
outsb
mov
add
gs
lcall
dec
cmp
clc
or
lahf
ss
push
push
push
or
push
xchg
or
cld
js
ss
push
popf
gs
xchg
jae
cmp
add
icebp
in
fisttps
jecxz
fiadds
das
ja
fadd
inc
inc
cmpsb
pop
fisttpll
sbb
enter
ret
cltd
jbe
push
insl
xchg
push
mov
imulb
rcll
ja
mov
and
inc
roll
and
mov
cld
dec
xchg
scas
nop
lods
les
cs
iret
nop
lds
jg
mov
jge
sarb
pop
mov
jns
and
enter
mov
mov
gs
push
clc
fimuls
test
lock
jnp
imul
inc
loop
fdivs
lods
mov
adc
das
sbb
push
data16
lret
ljmp
data16
shll
xlat
popf
push
add
mov
mov
fbld
rorb
jbe
int
cmp
mov
in
test
add
xor
cmp
and
out
popa
inc
fcompl
lea
stc
lahf
mov
mov
push
clc
mov
popl
jae
clc
add
clc
mov
mov
les
out
push
push
sub
dec
outsl
fdivp
movsl
dec
mov
arpl
outsb
mov
leave
fidivrs
mov
jg
jbe
test
std
pop
lret
mov
jmp
out
fdivl
inc
mov
add
jecxz
pop
mov
test
or
pop
mov
jno
jnp
pop
mov
sub
aas
mov
push
mov
jno
mov
push
jnp
pop
push
sub
ret
sbb
in
mov
cmp
int3
sbb
xor
stos
jno
mov
jg
sar
cmp
hlt
jns
and
sub
in
add
add
popf
insl
pushf
push
push
js
inc
mov
fimull
jmp
sarl
and
out
int3
jo
outsb
xchg
or
fadds
mov
sahf
lret
pop
popa
fistps
pop
xor
jecxz
ret
repz
push
call
lock
lock
daa
inc
jae
push
xor
sbb
jae
cmp
or
insl
repnz
lea
xor
scas
sub
ret
sarl
vminss
sub
mov
fwait
xchg
xchg
push
shlb
mov
jp
sbb
in
stos
std
cmpb
mov
popf
cmp
mov
dec
call
jnp
test
std
add
mov
xchg
jne
mov
in
sbb
jp
out
mov
stos
in
in
filds
loope
sub
jbe
push
loopne
je
arpl
mov
sbb
jns
xchg
mov
clc
aam
xor
pop
add
jmp
cmp
xchg
push
xchg
sbb
inc
hlt
dec
outsb
mov
aam
lods
and
shrl
sbb
xchg
sbb
fnstcw
hlt
daa
das
je
jb
xchg
pop
decl
cmp
stc
and
sub
repz
pop
cli
sahf
test
lcall
push
fwait
cmc
stos
jnp
inc
jae
xrelease
aaa
inc
sub
push
pop
mov
cmpb
out
xchg
adc
aaa
inc
mov
into
out
jg
mov
das
adc
xlat
hlt
xor
mov
add
jnp
mov
dec
cmpsb
dec
sub
jae
call
scas
ljmp
int
adc
and
in
test
lret
movsl
hlt
cwtl
dec
enterw
sti
xorb
addr16
js
push
push
add
in
mov
popf
xchg
cmpsb
jno
and
lea
sarb
pop
xor
les
insb
jbe
ss
cmpsl
sub
add
sub
xlat
adc
movsl
shrb
add
aad
mov
fildll
rorb
jb
in
lock
inc
pop
pop
push
shlb
push
sub
cmp
in
push
stos
out
mov
jg
aam
aam
and
in
mov
xlat
cmp
fs
and
add
imul
cmp
pop
push
mov
sub
dec
fidivrs
sub
inc
mov
call
mov
sbb
iret
or
jae
out
push
pop
lret
adc
test
mov
pop
shlb
inc
rolb
pop
mov
addr16
adc
inc
sbb
fstps
ds
movsb
pop
stos
mov
sbb
lret
lods
and
adc
add
aaa
and
lds
fmul
mov
sub
mov
repz
lcall
lods
push
orb
jb
cmc
cmp
and
jg
or
add
outsl
inc
test
dec
add
pop
mov
xor
movsb
sti
pop
daa
jp
andb
sbb
adc
repz
enter
jl
sti
mov
dec
or
mov
cmp
jbe
dec
xchg
scas
and
inc
pop
push
pop
imul
outsb
cmc
xor
das
das
lods
lods
int3
cs
lods
fcomp
repz
sbb
lock
shrl
mov
or
fiaddl
lahf
cs
push
fwait
push
je
jbe
pop
jl
sub
push
push
adc
cmp
mov
ss
lahf
pusha
xor
pop
cmp
pop
jecxz
cli
add
mov
daa
mov
jl
lahf
push
cmpsl
jg
aas
pop
adc
mov
lahf
push
aas
and
pop
mov
mov
cmpsl
pop
lds
and
mov
std
fmul
sbb
pop
sub
inc
cmp
test
lret
addr16
ret
mov
leave
fs
aas
dec
pop
xor
fidivs
out
clc
popf
ljmp
jg,pn
or
add
adc
xor
mov
inc
xchg
jno
pop
loopne
ja
lret
in
mov
inc
push
movsl
aad
insb
add
jae
pop
push
fisttpl
inc
and
mov
push
pop
cmp
bound
mov
xchg
mov
sahf
jecxz
add
xor
sbb
or
pop
and
push
in
in
jmp
or
push
icebp
cmp
aaa
cmp
jns
mov
jnp
xor
cmpsb
jns
dec
xchg
shll
cs
push
lods
fsubl
push
dec
xlat
lods
mov
addr16
mov
xchg
push
in
test
scas
std
ret
jecxz
test
in
mov
adc
dec
mov
or
fists
lods
aas
mov
movsb
and
sbb
pop
push
int
inc
or
outsb
loopne
jg
jae
mov
xchg
pop
xor
adc
hlt
ss
xchg
popf
test
iret
sub
lcall
push
xor
std
in
xchg
xor
push
movsb
daa
sub
dec
and
sub
sub
std
push
push
sti
data16
aas
es
xor
mov
or
sub
in
pop
daa
movsl
out
mov
insl
or
push
push
ss
dec
incb
or
xchg
or
inc
jno
sbb
lock
cmp
jne
or
sub
data16
fmull
xchg
orl
lret
cltd
xchg
loope
push
and
popf
cmp
mov
repnz
sub
pop
xor
pop
push
imul
push
mov
mov
mov
cld
jb
jns
dec
sbb
mov
inc
add
mov
mov
ss
xorl
cmc
and
lea
mov
mov
inc
cmpsb
ret
dec
je
mov
inc
sbb
dec
stos
sub
js
ret
fldl
pop
or
cli
sub
pop
shr
sahf
cmpsb
add
mov
stos
fsubrp
insl
popa
fs
pop
sbb
lahf
jmp
mov
jge
dec
lcall
imul
dec
lea
adc
lahf
sarb
out
mov
sub
mov
pop
jbe
sub
xlat
mov
popa
jb
rcr
sbb
ds
mov
das
cmp
ljmp
cmpsb
mov
iret
sbb
sub
pop
mov
cld
adc
cmp
fs
add
mov
lds
fwait
dec
pushl
call
aas
mov
sbb
sarl
sbb
jnp
cbtw
mulb
push
jbe
fstl
loope
arpl
out
mov
fmul
imul
mov
sub
pop
sbb
jl
cltd
push
adc
add
daa
jne
mov
frstor
pusha
xor
adc
ds
subb
xchg
inc
vpsllq
jge
hlt
jno
mov
sub
test
push
cmpsl
mov
fldenv
adc
inc
insl
insb
jns
and
pop
aad
leave
push
mov
adc
jae
jge
out
pop
jl
sbb
pop
xor
call
mov
push
cwtl
into
sti
ret
ss
aaa
int
sbb
out
mov
and
clc
cli
shrl
xchg
pop
xor
jo
xor
jl
inc
sar
adc
stos
mov
scas
lcall
mov
repz
movsb
cmp
xor
mov
inc
inc
notl
cmp
icebp
and
mov
hlt
movsl
mov
movsb
testl
jg
nop
adc
xchg
cmpsb
sbb
push
imul
out
and
into
mov
adc
or
rorb
cwtl
pop
in
xor
dec
arpl
out
fstp
or
bnd
lods
es
ss
cmp
insl
imull
imul
inc
xor
les
mov
jns
dec
mov
lahf
inc
inc
std
leave
data16
dec
cmpl
je
pop
or
xchg
mov
jns
and
jge
lret
out
sbb
aaa
push
adc
clc
mov
or
scas
in
mov
push
push
ror
xor
dec
arpl
xchg
sub
jbe
mov
loopne
jno
int3
add
sub
rcl
cmpsb
jmp
in
xor
cmp
jo
mov
mov
gs
repz
add
icebp
and
sti
cli
cwtl
lret
sbb
out
jp
and
inc
pop
rolb
adcb
pop
in
arpl
pop
popf
shll
js
adc
mov
adc
mov
and
push
pop
je
into
jg
gs
xchg
icebp
lods
mov
jle
cmpsl
nop
sbb
sub
or
dec
cmp
imul
mov
push
sbb
pop
scas
mov
push
outsb
int
ss
adc
in
shrb
cli
push
xor
test
iret
jl
sahf
cmp
push
jnp
push
mov
aam
jb
fildll
call
jle
repnz
dec
mov
test
mov
loop
out
fadd
mov
sbb
xchg
inc
leave
mov
in
jnp
daa
shr
stos
mov
std
in
gs
fdivrl
pop
xor
lcall
gs
dec
fwait
subb
pop
xor
out
ffreep
rcrl
scas
adc
sub
fsubrl
insb
and
orl
addr16
sahf
test
or
fmull
add
out
popa
xchg
test
divb
sub
xchg
jo
sub
push
cmp
xor
xor
fsubs
adcb
adc
cmp
jg
out
cli
or
jne
rclb
jp,pn
lcall
dec
je
mov
or
or
push
sbb
imul
xor
pop
mov
test
jo
in
mov
mov
mov
andb
inc
add
dec
xchg
and
cmp
inc
loop
data16
push
and
xchg
es
xchg
shrl
data16
pop
repz
and
dec
xor
jecxz,pt
mov
in
jp
xchg
sub
lret
fistps
mov
add
pop
pusha
pushf
ds
push
vmovsd
adc
rcr
or
jp
in
cwtl
lods
dec
fldl
mov
sbb
cmpl
lahf
jge
test
mov
inc
lods
push
mov
pop
inc
mov
xor
push
dec
into
and
in
repz
gs
mov
inc
lock
in
scas
adc
mov
sahf
jecxz
xchg
cmp
dec
dec
loope
sti
pushf
cmp
outsb
repnz
pop
pop
push
pushf
outsb
sbb
movsl
pop
dec
arpl
stc
xchg
and
stc
pop
pop
jp,pn
fistl
inc
xlat
pop
jle
mov
lock
mov
cmp
roll
mov
or
test
xchg
mov
fdivp
jg
out
push
call
icebp
jge
or
jno
fstpl
add
loope
cmp
jl
in
dec
adc
out
mov
xor
mov
sub
dec
popf
mov
xchg
mov
jp
in
pop
and
dec
pop
aaa
movsl
loope
leave
fwait
je
jbe
fdivp
in
seto
cmc
inc
cs
dec
fsubs
in
std
cmp
cmp
in
mov
arpl
jae
daa
sub
mov
dec
popf
into
jb
insb
lret
and
mov
jae
bound
and
fs
mov
xchg
je
inc
mov
mov
mov
xor
arpl
lock
sbb
mov
mov
sbbl
add
sub
sbb
and
repnz
lds
js
daa
inc
test
test
int
xchg
cmpsl
out
adc
sub
out
and
dec
mov
fwait
shrl
fcomps
sub
ret
aad
out
fcomi
ret
and
add
dec
test
fists
push
mov
sub
ds
test
xor
push
adc
fcmovbe
cltd
popl
js
lret
fcompl
aam
rorb
dec
sbb
loopne
data16
rolb
stos
pavgb
imul
mov
fs
pop
mov
addb
cli
pop
int
or
push
pop
pop
push
jmp
incb
out
lods
pop
sub
fisttpl
add
xor
ret
repz
enter
loope
or
lds
inc
cmp
jg
test
jecxz
mov
dec
adc
jp
add
sub
dec
or
xor
push
add
fisttpll
pop
inc
jmp
mov
inc
aas
or
bound
mov
into
add
stos
cmp
lcall
shlb
es
jl
adc
sub
movsl
inc
lret
push
mov
pop
cmp
negb
mov
inc
mov
loop
dec
outsl
mov
stc
rolb
dec
lahf
test
pop
out
and
imul
pop
mov
push
sbb
inc
mov
out
scas
jae
jae
push
lahf
int
fadd
mov
fidivrl
jb
sbb
dec
mov
and
ret
cmp
insl
std
pushf
cmp
mov
lcall
je
cmc
stos
push
std
in
pop
std
pop
shr
xchg
std
mov
jae
jecxz
push
in
cwtl
stos
outsb
aam
and
shr
push
xchg
push
and
lods
jb
leave
ljmp
aad
fsubrs
stc
lods
push
push
dec
xor
addl
xor
into
std
jnp
icebp
dec
or
xor
jmp
xchg
pop
mov
jl
cmc
movsl
mov
push
pop
and
push
sbb
mov
int
dec
inc
outsl
cmp
das
out
mov
sub
montmul
cmpsb
add
push
arpl
test
es
push
lahf
pop
outsl
cmp
and
mov
dec
iret
notb
sub
pop
pop
pop
sbb
mov
sti
cmp
sub
add
jb
cmpsb
sub
scas
rorb
pop
pop
push
xchg
and
enter
sbb
out
dec
je
inc
sub
lea
lods
mov
jmp
sbb
icebp
xchg
xor
mov
dec
dec
hlt
scas
loopne
and
test
jo
ss
int
rcrb
cwtl
xchg
cmp
nop
ds
add
lahf
xor
push
jae
loopne
inc
sbb
in
or
dec
cmp
xchg
fisubrl
imul
out
js
add
iret
fdivrl
push
ds
scas
mov
cli
pop
insl
jnp
aas
jmp
enter
inc
stos
xchg
and
add
jno
stos
mov
test
mov
es
or
test
sbb
sub
and
sub
stos
bound
out
dec
sarb
shrb
adc
negb
cmp
mov
pop
call
xchg
mov
out
xchg
sub
arpl
mov
inc
dec
xor
stc
ljmp
pop
add
add
dec
pop
mov
pop
adc
and
cwtl
sti
adc
push
jle
cmpsb
mov
mov
mov
add
jl
pusha
sub
cmpsb
jle
inc
xchg
jb
pop
dec
mov
dec
rcl
push
mov
xor
shll
xor
cmp
aas
and
hlt
std
and
mov
push
adc
jle
lock
dec
adc
adc
cmp
js
add
stc
das
sub
cs
adc
fwait
pop
outsl
daa
pop
js
sahf
mov
loope
outsl
xchg
std
push
ja
add
jne
pop
push
shlb
fnsave
push
sbb
mov
inc
and
inc
out
xor
sub
leave
cmp
add
push
adc
sbb
pop
or
aaa
inc
insb
inc
jns
lahf
xor
insl
dec
orl
cmp
inc
aaa
jecxz
dec
xchg
push
lock
aaa
call
sub
mov
xchg
push
repnz
pop
pop
lret
adc
das
bound
or
dec
mov
or
xlat
add
insl
lods
mov
sbb
sti
fwait
std
scas
out
or
nop
xchg
ret
jb
ja
pop
mov
mov
cltd
dec
js
int
jp
cltd
inc
rorl
data16
and
cltd
fcmovnb
or
inc
icebp
push
rcrl
inc
inc
push
lods
jbe
bound
cmpsl
es
mov
test
mov
cmpsb
lds
loope
and
imul
in
pop
std
clc
mov
lds
dec
jne
cs
fwait
repnz
push
and
lods
dec
mov
cmc
outsl
cmp
or
out
clc
jp
scas
sahf
setns
push
dec
sub
cmp
jl
mov
shlb
and
adc
mov
stc
or
in
lret
ljmp
cmp
ficomps
jle
loope
dec
adc
movsl
cmp
fisttps
imul
imul
sti
dec
xor
filds
sbb
push
inc
or
and
out
inc
aaa
mov
sub
icebp
adc
adc
jg,pn
test
enter
cmpsb
filds
ja
push
cmpsl
push
xor
rorb
stc
inc
and
pop
mov
test
mov
push
test
lods
push
movsl
cli
sbb
out
fldt
or
lret
rcr
fidivrs
int
xor
in
lcall
pop
sub
fnstenv
bound
xor
addr16
clc
in
mov
popa
scas
sbb
sbb
fstp
dec
das
shll
mov
push
cmp
push
in
adc
dec
sti
stos
xor
mov
push
roll
ret
lods
mov
subl
outsb
sti
jnp
or
mov
repnz
aam
and
jbe
pop
movsb
int3
cld
pushf
or
or
jne
cli
mov
or
and
mov
inc
in
js
addr16
push
ja,pn
les
sti
std
cmp
in
mov
mov
push
lahf
inc
rclb
rolb
test
lods
and
cmp
cld
mov
xor
movsb
sub
sbb
leave
imulb
loop
sbb
int3
stos
rdtsc
pop
mov
loopne
movsb
jae
in
inc
dec
dec
test
data16
lret
pusha
inc
add
scas
sub
push
fistpll
call
stos
or
inc
fwait
adcb
jg
jns
loop
mov
rcrb
lcall
pandn
pop
movl
sbb
gs
roll
call
and
test
lds
sahf
pop
adc
push
mov
aas
in
outsb
or
xchg
dec
ljmp
notl
insl
xor
loope
xor
ret
push
mov
call
pop
mov
mov
pusha
jbe
mov
repz
inc
xor
int3
cwtl
in
pushf
cwtl
iret
xchg
aam
cmc
push
push
mov
fmull
ds
push
movsb
jo
mov
sti
loopne
xor
inc
int
xor
mov
mov
dec
jp
fistpll
divl
xchg
mov
aad
sbb
test
push
mov
xor
xchg
cli
lret
ja
pop
jb
daa
jp
outsl
in
popa
stc
addr16
fsubl
lods
add
fld
pop
faddl
stos
decl
push
lahf
in
ret
sub
frstor
nop
nop
xchg
mov
jns
pminsw
inc
dec
rcl
mov
jecxz
mov
jnp
fadds
stos
test
inc
xchg
inc
imul
mov
dec
std
pop
aam
jle
xchg
sub
iret
jb
daa
sub
or
push
mov
addr16
cmp
mov
mov
xchg
adc
roll
mov
scas
iret
in
jge
push
shll
dec
or
or
add
in
into
addr16
pop
rolb
push
mov
sbb
mov
cs
lret
adc
dec
xchg
xor
xor
popa
adc
js
fsubrp
jle
xor
mov
dec
ret
test
movsl
and
dec
addr16
mov
ljmp
dec
xor
sbb
cs
sub
pop
sarl
sbb
jb
xchg
fstl
mov
xor
xchg
pop
repz
in
sbb
xchg
gs
out
jns
leave
mov
inc
and
dec
and
cmp
mov
pop
inc
das
mov
adc
mov
xchg
push
lcall
jl
sbb
mov
les
mov
sbb
pop
popl
inc
mov
or
movsb
and
stos
neg
pushw
pushf
js
inc
aaa
outsl
in
hlt
sub
fcomi
inc
addr16
nop
repnz
pop
fidivl
arpl
jg
mov
jno
or
xor
jmp
cmp
dec
dec
in
lret
icebp
fdivrs
ret
stos
and
mov
je
test
inc
and
jl
cwtl
xchg
stos
adc
pushl
push
aam
fdivrl
jae
repz
ljmp
stc
ret
push
mov
leave
lcall
pop
cs
arpl
mov
or
popf
shl
repnz
test
sbbb
mov
test
push
sub
shll
pop
icebp
mov
sahf
jne
mov
into
jecxz
ss
or
xchg
les
rcrb
xchg
mov
pop
sbb
pusha
pusha
shl
mov
out
sub
mov
in
pop
sub
pop
adc
adc
fsts
mov
xor
insl
push
jecxz
pop
xor
in
test
stc
cld
mov
mov
push
adc
fwait
fwait
sbb
js
cwtl
outsb
or
je
jno
shl
inc
mov
jmp
popf
add
inc
shlb
imul
xor
lods
stc
fnstcw
sarb
ds
inc
vmovsd
add
cmp
xor
jne
push
sbb
dec
adcl
sub
jp
mov
pop
mov
mov
andl
std
sub
adc
hlt
cmp
mov
cld
repz
or
aam
leave
mov
sub
pop
cmpsb
inc
movsl
dec
mov
jae
adc
push
xchg
loope
xlat
out
dec
cmpsb
xchg
push
sti
xor
sbb
and
add
mov
mov
test
xor
lock
popf
movsl
test
cmpsb
outsb
repnz
and
adc
test
jl
adc
les
sti
popa
sub
xor
cli
mov
mov
dec
xchg
iret
xchg
sbb
dec
test
fcoms
mov
pop
pop
sbb
pop
inc
stos
scas
or
xchg
jno
insl
sbb
notb
lods
fs
aam
mov
in
adcb
sbb
repz
shlb
sub
mov
pop
push
les
jmp
es
or
rcll
push
xchg
pop
pop
movsl
add
cwtl
imul
inc
add
test
sub
or
pop
stc
mov
mov
insl
loopne
dec
std
lret
stos
fsubrs
dec
cwtl
loope
xorb
and
lea
and
or
scas
mov
xchg
inc
mov
iret
loop
pop
stos
inc
in
ret
and
dec
ja
sub
inc
mov
icebp
jo
into
jns
pop
cmp
repz
cmp
pop
mov
xor
xor
mov
xor
add
push
lahf
test
pop
jmp
sbb
fld
xor
jge
dec
std
mov
ss
fs
or
andb
lea
push
lods
and
repz
xchg
or
icebp
xlat
popa
hlt
fwait
push
mov
enter
jle
sbbb
insl
jp
sub
jae
ds
xor
scas
sub
sbbb
pop
fs
add
cld
fsubs
mov
cmc
jae
xor
adc
mov
daa
or
or
bound
into
clc
fs
ficoms
aas
mov
mov
adc
add
test
je
jo
mov
inc
jnp
aaa
mov
stc
shr
sub
cmp
outsl
or
mov
push
mov
mov
cltd
cmpsb
aaa
data16
xchg
jg
nop
dec
xor
add
insb
jl
mov
fwait
jge
inc
push
fldz
fs
mull
pusha
xlat
dec
out
push
fisubl
ret
or
fisubrl
imul
ret
sub
lea
je
out
mov
lret
mul
jns
and
xchg
and
mov
inc
pop
lods
cltd
scas
movsl
fidivs
jae
mov
inc
xchg
test
mov
xor
call
arpl
push
push
and
pop
cmpsb
xor
sbbl
fwait
lods
in
mov
push
sub
cmpsl
or
jne
pushf
push
push
pop
jbe
test
and
mov
subb
imulb
int
and
cltd
adc
sub
mov
mov
push
add
sbb
mov
mov
mov
fcoms
enter
out
dec
mov
lods
hlt
jl
lea
andb
pop
push
dec
cmpsl
inc
int3
sti
pop
shlb
in
xchg
or
leave
adc
dec
pop
push
sub
mov
inc
stc
or
jae
bound
cmp
add
stos
add
ret
push
in
lret
out
xchg
iret
xchg
outsb
mov
cmpsb
cmp
notl
leave
std
imul
out
xor
jns
test
adc
mov
popf
daa
jbe
int
mov
inc
aad
fdivrs
jge
adc
pop
and
pushf
repnz
push
fs
push
pavgb
xor
or
fistps
outsl
aad
gs
dec
imul
and
cmp
scas
add
enter
push
xor
dec
pop
pop
push
pop
lea
test
dec
outsb
or
sub
imul
inc
push
cmp
jns
enter
xchg
ret
fwait
pusha
lock
xchg
repnz
mov
xor
ftst
in
push
adc
fs
pop
ja
hlt
daa
xlat
xchg
xor
xchg
inc
xchg
iret
fmulp
leave
lahf
or
push
cmp
mov
mov
movsl
xchg
pusha
mov
mov
std
aam
sbb
push
dec
mov
outsl
rclb
into
cmp
outsl
adc
fisttpl
jg
imul
rorl
fucomip
mov
push
inc
imul
movsl
push
imul
sbb
fcmovnu
test
jmp
nop
mov
push
js
dec
rcl
xchg
jmp
and
ret
inc
mov
cmp
in
outsb
and
push
xchg
insl
gs
or
mov
jl
scas
mov
inc
xchg
sub
xchg
or
inc
xchg
jp
outsl
sub
pop
xor
ja
rolb
or
or
push
push
sbb
jnp
lds
loope
gs
mov
sbb
mov
pop
pushf
push
or
stos
lahf
rorb
ficompl
cmp
call
mov
add
dec
adc
out
adc
in
mov
movsb
inc
lods
test
pop
jbe
fs
sub
negl
out
dec
or
xchg
test
push
xor
test
int3
pusha
cmp
mov
scas
fmull
pop
enter
daa
mov
sbb
mov
mov
inc
inc
iret
movsb
jne
into
sub
and
inc
aad
ljmp
leave
test
mov
enter
jb
mov
jmp
and
dec
mov
xor
fsub
add
adc
and
xchg
fists
mov
scas
cltd
push
pop
cmp
sub
sbb
mov
and
mov
xor
int3
mov
int3
leave
mov
xchg
cmp
jp
ret
test
loopne
mov
cmp
xor
imul
mov
pusha
mov
xor
mov
dec
sub
sbb
lahf
xchg
or
mov
ret
pop
out
loope
dec
xchg
jae
fildll
adc
popa
scas
jb
sub
mov
mov
cmp
fstps
mov
popa
inc
lret
lret
cli
mov
int
push
pop
int3
adc
dec
cmc
and
mov
insb
xchg
aad
out
dec
mov
sbb
in
movsb
push
mov
cltd
into
aam
xchg
das
xchg
xor
jg
push
sahf
andb
pop
jns
cwtl
pop
push
fnstsw
xchg
cltd
icebp
ss
jns
scas
adc
xchg
test
inc
mov
lret
andb
test
in
mov
pop
mov
enter
fxch
dec
in
dec
xor
lahf
add
mov
adc
decl
cmp
jl
rcll
push
ja
mov
cltd
or
hlt
lahf
shlb
std
shll
dec
inc
pop
jmp
mov
pop
cmp
pop
push
sbbl
add
jno
adc
pop
andl
cmp
sbb
add
insb
stos
pop
mov
scas
movsl
jae
in
sbb
aaa
out
jae
je
adc
ret
addr16
pushf
pop
test
jbe
lods
cmp
push
add
addl
cmp
and
jmp
into
ljmp
dec
push
into
mov
dec
and
inc
mov
sub
xor
or
gs
xor
sub
cli
or
std
dec
les
imul
jp
xor
push
movsb
rcrl
sti
imul
and
nop
sub
out
cmpsb
cmp
rcll
imul
imul
mov
add
pop
cmp
fcoml
add
ljmp
xor
out
adc
sbbb
out
das
push
call
jge
or
addr16
pop
xor
xor
cmp
cmp
mov
inc
or
jns
bound
xchg
mov
inc
jle
lret
sub
xchg
sarb
ret
je
push
xchg
push
or
ljmp
aas
test
mov
add
sub
xor
loop
aad
and
adc
lcall
mov
adc
sub
scas
xchg
xor
push
dec
mov
mov
adc
dec
mov
out
pop
push
cmp
iret
mov
mov
pop
loope
arpl
xlat
es
es
pop
imul
cmc
dec
mov
bound
arpl
fsub
pusha
xchg
movsb
cmpsl
jmp
pop
arpl
or
stc
div
fwait
push
dec
loope
popf
pop
ret
or
xchg
push
es
es
and
and
or
sub
push
stc
and
xor
pop
add
out
data16
xchg
sub
les
dec
or
fldenv
test
call
jno
cmp
shll
cmp
mov
aas
jp
lock
test
test
out
pusha
cmp
cld
out
in
sub
outsb
add
inc
pop
cld
ljmp
pop
std
and
inc
xchg
and
loope
out
mov
pop
mov
rcl
les
push
daa
or
aam
mov
popf
mov
add
lods
pop
mov
jl
clc
inc
mov
jp
sub
mov
xchg
push
jge
dec
bnd
push
das
int
shlb
and
push
cmp
jmp
sarl
cmp
insb
pop
pop
outsl
lds
addr16
pop
lock
das
js
clc
push
clc
gs
and
fbstp
and
nop
test
and
mov
adc
aad
xor
and
popa
aam
ret
insb
in
lret
ljmp
mov
and
mov
je
xchg
fnsave
sti
rcrl
shlb
jnp
lahf
mov
mov
mov
jge
jb
or
jne
mov
imul
mov
mov
mov
mov
mov
frstor
lret
xchg
mov
data16
xlat
jmp
adc
mov
jne
test
add
mov
es
adc
inc
int3
popa
xor
mov
mov
push
push
ret
mov
xchg
cmp
push
sbb
inc
outsb
mov
fnstcw
outsl
cmpsb
scas
test
mov
outsl
mov
loope
fildll
and
inc
mov
ljmp
shll
popa
pop
push
inc
ja
std
ret
cmp
sbb
cmc
mov
testb
or
into
loope
inc
inc
sbb
sub
icebp
and
sahf
out
sbb
xor
jne
in
mov
mov
popf
and
aad
xchg
pop
scas
dec
jne
cmp
jo,pt
rorb
jg
ds
pop
jecxz
sub
mov
dec
add
jl
std
dec
mov
or
into
ja
mov
mov
fwait
loop
sub
cmpsb
push
inc
sbb
dec
scas
aaa
sbb
insl
ljmp
ljmp
fnstcw
in
jne
mov
int3
jg
dec
jl
test
shll
test
mov
aad
adc
je
das
fisttpl
push
ror
mov
std
xor
ja
mov
push
or
in
cmpsb
stos
mov
insb
mov
fisubrl
pop
enter
pop
call
mov
lds
push
xor
dec
inc
imul
jp
dec
cmc
jo
mov
rcrb
inc
mov
lahf
mov
insl
push
mov
stc
lea
out
adcl
sub
push
adc
sub
dec
mov
adc
mov
mov
sti
int
movsb
pmuludq
cmpsl
push
xchg
not
js
and
cmp
lods
xchg
mov
lahf
or
inc
sub
push
xor
xchg
mov
sbb
sahf
and
push
iret
mov
aad
sarl
inc
add
es
cli
inc
lahf
xchg
or
bound
popa
add
arpl
push
leave
stos
call
out
push
push
imul
jge
mov
mov
jmp
mov
push
lea
sub
cli
imul
push
lahf
dec
and
adc
outsl
jbe
ret
pop
push
adc
sahf
fildl
xchg
aam
and
pop
mov
insb
shlb
in
lret
loope
pusha
xchg
mov
sbb
mov
test
or
loope
cmp
lds
das
ja
iret
jg
lret
loopne
pop
jnp
xor
inc
scas
add
lds
pop
sub
pop
insl
pusha
clc
sub
sbb
inc
jp
andl
pop
divps
sub
or
adc
mov
adc
jle
sub
dec
mov
cmc
inc
cmp
mov
dec
pop
mov
sbb
sub
rorb
push
push
sbb
out
lods
sbb
jbe
arpl
fs
div
sub
add
popf
lahf
faddl
call
test
push
mov
xor
pop
out
out
dec
mov
mov
ret
inc
clc
mov
xchg
cmp
lret
int3
std
xor
push
jb
xchg
dec
mov
repz
xchg
pop
mov
push
inc
jmp
jecxz
pushl
call
add
leave
sti
lds
sbb
sub
popf
jb
xor
imul
movsl
std
xor
push
xchg
jne
cmp
and
cmpsb
and
stos
push
fdivrl
mov
xor
les
insb
sbb
sahf
xor
pop
inc
push
daa
sub
lea
ds
sbb
and
push
or
and
xor
inc
sarb
push
dec
adc
mov
mov
daa
push
cmpsl
adc
mov
fsubl
jnp
cmp
add
leave
add
out
cmp
inc
mov
xchg
aas
pop
rcrb
lret
stc
imul
jp
mov
pop
pop
xor
or
adc
out
mov
or
push
jge
push
repnz
cmc
scas
imul
sbb
xor
mov
sahf
daa
test
xor
mov
sbb
inc
je
jne
out
add
inc
mov
std
cld
pushf
lds
fwait
or
js
pop
mov
mov
mov
xor
push
fildll
cli
sbb
leave
out
out
mov
ret
sub
inc
push
cmpsl
js
pop
jns
jle
adc
popa
lods
sub
jecxz
lea
cmp
scas
sarb
clc
or
lock
popf
push
repz
subl
cmp
add
adc
dec
out
mov
mov
arpl
xlat
dec
add
jp
sub
bound
jl
stos
push
mov
inc
pop
pop
and
pop
and
and
repnz
clc
cmp
mov
pop
test
jnp
dec
data16
cmp
xchg
fiaddl
movsb
orb
test
ret
mov
rdmsr
mov
fimull
scas
insl
les
jnp,pt
or
stc
rorl
movsl
mov
stos
xchg
fmull
test
jmp
push
roll
dec
pusha
pop
pop
jns
mov
mov
pop
lahf
pop
outsl
mov
pop
fcmovne
cmpsl
int
roll
cs
lcall
and
and
ja
add
sbb
sbb
mov
sarb
adc
jnp
add
push
fcompl
in
push
mov
pop
aas
xor
or
mov
filds
sub
cmc
out
bound
cmc
push
jb
xchg
or
adc
mov
and
fs
int
jne
cld
pop
and
jae
movsb
stc
inc
jl
aad
xchg
shll
sahf
ret
sbb
adc
fisubs
fcmovnb
xorb
popa
inc
sbb
add
push
mov
roll
cwtl
add
mov
xor
dec
cs
in
mov
mov
jecxz
pop
into
into
cs
pop
iret
iret
pop
cmpsb
in
push
mov
call
mov
in
xchg
lods
jp
or
mov
lret
fwait
dec
stc
adc
jle
gs
adc
int3
cmpsl
pop
loop
xlat
daa
jmp
and
outsb
ljmp
cld
mov
and
sub
imul
jmp
or
add
add
or
mov
aam
mov
popa
mov
mov
jns
xchg
mov
xor
in
mov
outsl
sub
mov
and
ljmp
mov
jb
stc
subl
vphaddbw
imul
pop
mov
mov
in
fcmovnbe
push
jnp
js
in
out
jg
dec
in
rcrl
movsb
push
stos
ja
mov
loopne
adc
jmp
adc
sbb
hlt
iret
inc
les
lahf
push
dec
and
jle
jge
in
jne
rclb
jns
lods
xlat
cmpsl
pop
rorb
outsb
leave
mov
sub
xchg
mov
push
inc
addl
fadds
or
mov
dec
lret
int
pop
dec
mov
push
push
lods
push
js
xor
jns
sbb
fldenv
cmp
scas
in
aas
test
insb
xor
cmp
mov
pushf
cld
add
xor
xor
lods
mov
and
cld
fisubrl
data16
popa
xor
rcr
jae
loop
cmp
fsubrl
inc
cs
into
xor
stos
or
pop
std
inc
xchg
loop
negb
in
dec
adc
fsubrs
jno
loope
rsm
pop
ja
pop
popf
arpl
repnz
in
add
stos
popf
fcoml
mov
ja
and
in
mov
lcall
push
arpl
movsl
xor
shll
movsl
and
jnp
mov
jnp
imul
push
xlat
sub
das
mov
jmp
pop
jno
sbb
clc
add
inc
mov
jbe
xor
mov
sub
dec
ret
sbb
mov
in
jecxz
ds
hlt
xchg
addr16
int
xchg
mov
mov
dec
aad
xchg
cmp
push
dec
cld
adc
xor
xchg
jbe
and
in
mov
aad
mov
jbe
std
and
inc
jae
or
addr16
lods
cmp
mov
or
sbbl
xor
pop
cwtl
je
in
subl
in
lock
mov
mov
xorb
xchg
sar
loop
xchg
jp
jb
pop
sbb
add
iret
pushf
popa
adc
dec
mov
int3
xor
jge
fs
dec
lods
or
test
les
jbe
sbb
sbb
mov
and
inc
test
add
and
pop
cmpsl
dec
js
pop
xchg
dec
add
xchg
jp
lret
jbe
xor
stos
lods
pop
cmp
lock
inc
je
sub
call
gs
rol
jae
out
icebp
xor
jg
rcrl
fwait
cmpsl
add
xchg
ja
vmovdqu
loopne
push
jne
mov
jecxz
dec
inc
mov
mov
inc
jl
test
dec
shl
enter
les
sbb
aaa
adc
insb
xor
imul
adc
lahf
xor
test
mov
movsl
xchg
xor
mov
mov
xchg
sub
mov
jno
sub
xor
push
loop
aaa
mov
stc
fwait
mov
pop
mov
es
push
sub
test
scas
sub
add
add
cmp
dec
int3
je
hlt
fisttpll
pop
fists
addr16
mov
cs
add
mov
xor
aas
or
add
test
xor
pop
mov
sahf
inc
inc
aam
add
inc
fstl
and
std
mov
es
es
inc
rol
mov
add
push
jp
adc
dec
xlat
cmc
xchg
pop
stos
repnz
xor
movsl
loop
notl
test
outsl
test
lret
jb
sysret
mov
add
inc
mov
ret
clc
test
and
andb
popa
jb
pop
dec
mov
sbb
es
adc
in
xchg
lret
or
std
or
jle
dec
push
insb
inc
push
cmp
out
xchg
insb
orb
mov
movsb
popa
shll
rcll
push
shll
sub
fsub
popa
cmp
ficoms
cmp
cmp
into
out
adc
incb
pop
sbb
mov
aas
cwtl
dec
out
je
outsb
fnstcw
jp
mov
clc
xchg
sar
es
mov
or
jo
subl
cmpsl
cltd
jb
into
daa
push
jmp
xchg
xchg
je
gs
mov
imul
cmp
out
sub
or
push
jns
std
mov
das
jmp
shl
adc
insb
mov
inc
ret
pop
test
push
push
aam
fcmovbe
sbbb
sarl
sbb
icebp
cwtl
or
sub
dec
aad
add
aaa
lds
stos
mov
push
pusha
jno
push
adc
fwait
inc
in
sbb
shlb
into
test
insb
sti
mov
repnz
jno
pop
mov
jno
adc
ds
aad
mov
in
pop
jnp
push
es
ret
into
ljmp
push
mov
add
jp
lods
int
sti
jl
scas
push
mov
dec
fisubl
xor
aam
arpl
sbb
lret
in
jns
aam
push
ljmp
les
mov
mov
mov
sahf
sti
jl
or
into
xchg
sbb
fsub
push
shlb
mov
sbb
ret
cmp
lods
sarb
mov
push
push
mov
scas
and
dec
mov
xor
sbb
gs
xchg
pop
cmp
mov
int3
shll
mulb
popa
int
mov
and
ss
hlt
imul
mov
add
push
or
dec
mov
sub
inc
lods
mov
fwait
cmp
stc
hlt
push
adc
jno
push
and
push
cmp
sub
decl
mov
sbb
ss
out
movl
cmp
xor
andb
je
int
xlat
aam
xor
mov
sub
push
bound
movsl
mov
movsl
dec
lds
adc
mov
jns
das
ret
clc
aaa
rorb
pop
std
dec
in
adc
xchg
jnp,pt
add
xchg
flds
insl
sub
fnstcw
pshufw
lcall
gs
and
mov
pop
jl
leave
push
bound
std
idivb
jno
jae
lds
xchg
dec
dec
mov
jmp
mov
cmp
addr16
or
into
jns
cwtl
loope
repnz
inc
adc
sbb
jl
jle
sub
sbb
mov
jnp
stos
pop
adc
rol
xchg
add
ja
insl
in
popf
pop
push
les
push
adc
movsl
insb
jmp
jbe
push
jl
xchg
add
out
inc
in
fwait
leave
bound
fldenv
jp
cmp
mov
lret
orb
insb
adc
lea
and
orl
jl
call
cmp
fiadds
das
mov
mov
scas
xor
dec
nop
pop
xchg
xlat
sub
mov
jle
scas
and
and
fsubs
jae
lret
add
bound
repz
push
pop
mov
das
sbb
cwtl
insb
mov
sti
loopne
lods
cltd
out
mov
sti
cmp
jg
add
call
and
andb
imul
ffree
nop
jecxz
lds
pop
nop
lahf
push
cmpsl
or
js
or
ss
or
jmp
cmp
and
aad
stos
lret
addr16
pop
stos
jb
mov
or
xor
push
std
mov
loope
lea
xorl
jl
shr
loope
sub
sti
enter
std
test
nopl
ficoml
leave
dec
call
mov
cmpsb
mov
cmp
jmp
push
fwait
testb
mov
pop
mov
pushf
jmp
sbb
arpl
int
repnz
jecxz
or
inc
call
popf
and
push
mov
lea
imul
leave
cmpsl
inc
in
mov
ds
inc
addr16
push
sbb
sahf
movsl
xor
cmp
and
cmp
stos
pop
int
add
data16
push
and
and
mov
inc
rorl
movsl
sar
xchg
nop
fidivl
pop
or
call
mov
into
add
and
sub
xchg
bndstx
push
adc
or
or
xor
jl
mov
push
sbb
or
mov
jg
shr
adc
pushf
sub
or
xchg
int
sbb
stos
sbb
fs
mov
pop
mov
jns
stos
ret
lret
dec
fadds
sbb
iret
push
mov
iret
loopne
mov
test
mov
stos
adc
insb
pop
std
pop
repz
imul
cmovb
mov
inc
je
pusha
cmp
pop
add
jge
sarb
scas
dec
and
hlt
ret
push
push
mov
outsb
sub
jno
imul
and
bound
sub
jns
mov
dec
pop
scas
test
int3
jl,pt
dec
clc
mov
cmpl
mov
shrl
testb
jg
addr16
dec
in
stc
xorl
loopne
jmp
test
stc
ljmp
pop
mov
cli
or
repnz
push
in
mov
arpl
and
jo
cwtl
cmp
sub
pop
loope
mov
mov
dec
test
test
lock
icebp
sbb
inc
adc
push
ja
sub
fmull
mov
in
pusha
mov
cltd
push
rclb
or
sub
cmp
lock
xchg
outsb
in
stos
lcall
add
lock
fwait
push
rcrl
and
hlt
push
jbe
add
imul
mov
or
lock
mov
mov
out
xor
push
pusha
shrb
icebp
lahf
into
sub
fwait
lcall
mov
popa
fimull
popf
ret
movsl
in
cld
sbb
pushf
lock
test
push
repnz
stc
jns
mov
out
sti
push
icebp
mov
das
cmp
xchg
mov
test
jmp
fstps
jg
push
or
push
adc
fs
push
ret
mov
int
xchg
repz
jbe
sbb
xchg
movsb
into
adc
cmpsb
jg
push
out
pop
test
js
push
cs
movsb
out
xor
movsl
imul
jle
jbe
mov
je
lret
stos
rcrl
into
add
dec
dec
mov
push
outsl
xchg
mov
xchg
popa
push
cltd
test
push
lret
pop
jge
push
adc
xchg
lods
jecxz
cli
add
mov
dec
fcmovnbe
xor
test
mov
dec
jns
jno
mov
cmp
xchg
popf
sbb
jecxz
cmp
mov
sbb
cs
ret
jge
repnz
test
mov
ror
xchg
pop
push
add
fbld
xchg
add
adc
mov
lock
cli
xchg
enter
mov
sbbb
lcall
or
inc
add
les
fbld
ret
push
fmull
push
dec
xchg
fdivp
imul
popf
push
ss
aas
mov
fimull
sbb
int3
push
mov
pop
std
or
or
xor
mov
iret
and
loopne
repz
stc
pop
inc
pop
and
and
dec
adc
inc
iret
xchg
fbld
cmc
rclb
jo
fldt
out
std
les
add
mov
lock
mov
aas
push
mov
stc
aad
push
fdivs
icebp
les
cmp
mov
enter
and
and
jle
mov
jmp
stos
scas
or
mov
xchg
adc
js
cmp
pop
pop
add
and
cltd
xorb
mov
cmp
add
repnz
xlat
push
int
mov
xchg
mov
cmp
xlat
adc
lds
mov
add
dec
inc
push
js
in
and
xchg
sbb
aas
mov
enter
mov
lods
sbb
test
mov
add
ret
cmp
jmp
cs
ret
cmp
sbb
dec
cmp
lret
lahf
xchg
shlb
xchg
dec
sub
pop
out
mov
loopne
xchg
push
sbbl
dec
leave
sub
mov
and
mov
xor
mov
pushf
daa
clc
pop
and
cs
pand
cmp
and
dec
rcll
cmc
mov
jl
pop
in
mov
cltd
repnz
test
adc
dec
imulb
xor
cmpsb
inc
call
test
lret
xor
cmp
ret
call
cmp
test
shl
std
shl
int
push
sbb
mov
mov
inc
sbb
pop
and
pop
cmp
fcompp
out
pop
repz
aas
out
fisttpll
sub
sti
xor
mov
push
jb
cmp
mov
sub
lea
mov
bound
lea
jne
add
dec
lods
add
in
or
pop
mov
mov
jp
mov
outsl
xor
ds
dec
lods
aad
xchg
hlt
cmp
inc
or
das
aas
adc
adc
xchg
js
or
pop
xchg
shl
mov
outsb
jbe
adc
lret
ljmp
in
js
int3
mov
xchg
mov
test
repz
add
fs
pusha
into
call
stos
xor
popf
adc
jl
xchg
scas
fucomp
repnz
popa
repnz
mov
stos
je
insb
xor
xchg
jecxz
jmp
adc
pop
xor
les
inc
xchg
sub
jno
add
sarl
push
shrl
in
imul
fisubrs
in
test
mov
rorb
xor
dec
xchg
pop
ljmp
dec
shr
push
add
jmp
pop
dec
xchg
pop
fnsetpm(287
dec
aaa
and
mov
dec
cld
jae
mov
imul
pop
cs
imull
fs
aad
int3
cmpsl
out
stos
pop
inc
jae
sbb
inc
lahf
in
pop
repz
daa
xchg
cmp
add
mov
mov
in
pop
mov
sbb
pusha
sar
inc
mov
and
jae
stos
inc
xchg
mov
xor
push
repnz
mov
pop
stos
int
sbb
dec
inc
jb
push
loope
imul
or
insl
push
cltd
or
js
cmp
mov
ret
repz
outsl
fsubl
push
push
cmp
inc
pop
sbb
xor
cli
and
add
jg
pop
movsb
hlt
inc
lods
lret
dec
xchg
leave
shr
sub
sahf
stos
cmp
sbb
ret
mov
jns
loope
lea
flds
movsl
cmp
int3
test
push
aad
scas
cli
add
add
cmc
push
jbe
ss
xor
pop
push
sub
enter
popl
pop
insb
jl
into
push
repnz
cmp
sub
mov
sbb
call
cmp
fstl
aad
dec
xor
fsubs
lock
add
aam
mov
test
fwait
jbe
aad
addl
fdivs
or
out
aas
inc
shr
xlat
daa
jl
movb
jne
repz
sub
push
int
and
mov
test
fldl
pop
insl
out
jl
or
or
sahf
inc
mov
popa
pushf
ror
faddl
jp
les
clc
in
repz
out
lret
scas
das
incb
pop
pusha
mov
inc
and
mov
loope
addr16
pop
push
les
add
fs
nop
test
jno
xorl
xlat
xchg
mov
out
mull
mov
dec
push
sahf
lock
xor
pop
filds
dec
cmp
aad
cs
out
fidivrs
arpl
pop
popa
scas
mov
movsb
hlt
jmp
ret
stos
jmp
mov
push
gs
cwtl
push
daa
std
mov
add
or
jne
ja
jbe
in
sub
lea
push
add
or
out
jne
cmc
push
aam
sbb
sbb
dec
inc
cld
stos
dec
mov
or
psubw
loopne
lcall
bswap
push
xor
test
cmp
in
dec
adc
out
stos
repz
movsb
cmc
fsubr
hlt
dec
testl
xor
xchg
lds
ljmp
imul
lds
enter
cmp
insl
mov
in
cmp
stos
sti
jbe
xchg
daa
push
leave
push
xor
lret
dec
xor
movsb
mov
stos
rcr
mov
aas
es
jl
aaa
add
iret
scas
xchg
adc
std
or
loop
jp
xchg
inc
xchg
ret
mov
push
stc
sahf
ja
lret
cmp
ljmp
stc
arpl
bound
mov
outsb
pop
addr16
sbb
xchg
xchg
adc
fcompl
mov
dec
lock
mov
shlb
scas
mov
leave
push
push
aad
or
stos
jae
fisttps
adc
sub
mov
jle
jo
test
addr16
jo
int
repnz
fisubl
pop
push
fnsave
mov
xlat
fstpl
jbe
gs
sub
sbb
jecxz
lds
or
jmp
loop
mov
insb
mov
fisttpll
mov
in
lock
stos
dec
dec
mov
stc
mov
push
xchg
jnp
lods
and
incl
jmp
or
fsubrl
push
aas
push
inc
pop
and
call
imul
jae
or
adc
sbb
or
mov
xor
stos
loope
push
out
inc
inc
scas
cli
rcr
push
popf
call
imul
push
out
mov
inc
fidivrl
inc
fisubl
inc
sarl
icebp
pop
sbb
pop
shll
or
jp
sub
ljmp
sarb
cwtl
jb
xor
adc
insl
and
popa
dec
cld
xorb
sub
jl
sub
in
cmp
fistps
rolb
rcll
lret
rep
cwtl
insl
pop
pop
jecxz
jmp
repnz
xor
cmp
mov
inc
inc
addb
cmp
mov
loopne
int
gs
push
sbb
addr16
push
mov
inc
cmc
pop
data16
lods
add
mov
divb
repnz
icebp
ret
jbe
bound
and
shrb
xchg
ret
xchg
jnp
rcr
mov
mov
push
lods
jmp
xor
imul
movups
shlb
insb
xchg
push
cmp
incl
sbb
idiv
gs
adc
call
in
pop
cmp
hlt
fsubp
xchg
jb
ds
sbb
enter
es
add
arpl
xorl
sti
fsubs
cltd
cmp
mov
stos
scas
test
les
and
rorl
fisttpll
fcompl
sub
dec
pop
push
lahf
fsubrl
loopne
in
push
add
jo
stos
testb
fisttpll
popf
sub
into
stc
imul
insb
fidivrs
pop
out
xchg
out
int3
cmp
dec
xchg
jl
gs
push
lcall
leave
jmp
lret
stos
data16
pop
ficomps
xor
mov
inc
sub
inc
frstpm(287
mov
ret
pop
pop
add
fidivl
mov
sbb
jecxz
dec
cmp
in
addl
lret
lods
and
aaa
aas
mov
movsb
fninit
xchg
sbb
mov
jp
add
rorl
cmp
or
push
push
cwtl
jb
sti
cmc
or
dec
movsb
mov
mov
adc
mov
sub
cmpsb
sbb
out
inc
adc
jnp
inc
adc
iret
out
pop
sti
inc
das
loopne
push
xor
int
sti
pop
adc
andl
aad
push
xor
xor
xor
icebp
outsl
dec
dec
xor
push
xor
movsl
push
dec
lahf
and
lahf
jo
das
ja
inc
dec
push
jno
xchg
outsl
and
or
adc
pusha
inc
fwait
enter
out
into
adc
push
adc
data16
mov
fistpll
add
aas
pushf
jp
sbbb
push
push
divb
loopne
out
popf
mov
cld
inc
push
pop
andl
test
add
push
pop
insb
clc
aas
out
out
pop
inc
jbe
inc
shr
fwait
popf
cmpsb
mov
xchg
jg
mov
mov
xchg
push
mov
mov
push
js
pushfw
adc
xor
or
pop
jno
mov
testl
jle
outsl
adc
icebp
cmp
dec
pushf
bound
xchg
int3
int3
div
xchg
xor
stc
xor
mov
ja
ldmxcsr
jo
push
pop
das
stos
scas
push
jnp,pn
cltd
lods
jp
int3
jnp
dec
cmp
mov
rcrb
or
xchg
in
dec
mov
lock
sub
mov
inc
aad
iret
jno
mov
xor
xchg
or
sub
mov
sbb
mov
or
mov
jecxz
imul
daa
scas
push
and
aam
popl
pop
insb
dec
aam
sarb
pop
cld
inc
mov
and
aam
outsb
push
lcall
mov
mov
lds
xor
mov
sub
inc
sub
paddb
sub
fildll
push
dec
outsl
pusha
lahf
pop
ljmp
enter
repnz
push
lods
ja
outsl
push
orl
daa
lea
sbb
int3
test
loopne
pushf
je
cmpb
xor
xor
pop
mov
insb
nop
popa
adc
pop
mov
or
cmpsb
mov
adc
xchg
jge
add
jecxz
push
inc
or
push
repnz
and
rorl
cmc
add
jno
addb
jns
mov
arpl
jne
ja
jl
cmc
mov
add
sbb
les
rcr
mov
loopne
stos
push
in
or
dec
mov
pop
jge,pt
pusha
pop
repnz
rcll
xorl
inc
xchg
mov
jmp
shll
lds
push
shll
jmp
jg
inc
push
jo
sbb
sbb
push
push
mov
in
std
repnz
xchg
inc
inc
push
pushf
dec
mov
cltd
fs
into
daa
inc
adc
aaa
sbb
cmp
jp
or
pusha
pushf
cmpsb
dec
iret
movsl
push
pop
xchg
arpl
pop
push
ret
inc
xchg
stos
icebp
pop
cmp
lret
xchg
pop
sbb
pop
adc
das
icebp
repnz
dec
sbb
xor
in
inc
fwait
mov
jne
lahf
sub
scas
arpl
xchg
or
imul
les
and
jae
fcmovnb
pop
cltd
adc
mov
or
in
ret
sbb
mov
xor
adc
push
sarl
sbb
leave
ret
lahf
cmpsl
bound
sub
mov
fimull
sbb
push
inc
cmpsb
push
aam
xor
lea
pop
imul
or
sub
push
dec
jg
xchg
dec
std
push
fmulp
icebp
inc
mov
jl
js
and
imul
pop
das
pop
sub
push
xor
sarb
mov
jg
and
cmp
fadds
or
inc
in
aas
cmp
loop
cmpsb
in
pop
cld
sub
mov
testb
mov
push
sbb
leave
xchg
adc
xchg
adc
inc
dec
jle
ret
push
cs
xlat
imul
xor
lcall
pop
cmp
xchg
or
test
sbb
push
pop
xor
ret
es
sub
pop
incb
jecxz
out
stc
sbb
into
and
lret
scas
cld
stos
mov
xor
aam
mov
lret
lcall
in
or
add
arpl
push
mov
jbe
push
cs
jb
andps
xor
aaa
incl
inc
inc
aaa
jo
sbb
outsl
cmp
add
insb
scas
inc
jb
clc
jl
mov
adc
sti
adc
int
and
sbb
sub
mov
lods
hlt
and
call
scas
cltd
call
scas
cmp
popa
mov
mov
cmp
imul
aad
jne
dec
jns
insb
push
fsubr
inc
jo
out
std
dec
dec
push
mov
xchg
dec
clc
inc
pop
and
mov
mov
aaa
mov
insb
add
addr16
ret
cmp
pop
jns
xor
xor
dec
mov
sbb
dec
cmp
push
std
mov
gs
adc
mov
es
cmp
push
data16
in
cmp
mov
lds
push
dec
lcall
and
adc
jns
push
imul
scas
jne
pop
loope
mov
xlat
jge,pt
sbb
loope
ret
pop
or
jl
inc
mov
jne
es
push
cltd
sub
mul
clc
inc
or
into
mov
sub
nop
loope
les
dec
addr16
lock
sti
mov
pop
out
stos
mov
jo
aaa
fdivl
mov
loopne
xor
lock
fidivl
fdivl
mov
push
jne
ret
dec
js
pop
mov
fwait
ja
jbe
cltd
jecxz
adc
inc
sbb
lods
insl
sarb
movsl
lock
mov
jnp
xchg
iret
jmp
ljmp
inc
test
fmull
sbb
push
stc
arpl
mov
out
call
aam
push
and
in
xchg
dec
mov
test
push
add
mull
ss
mov
mov
aam
jbe
aas
iret
add
jl
imul
xchg
mov
jle
rcrb
sub
es
adc
dec
repnz
sbb
lahf
in
test
jge
sub
jno
jbe
pop
push
je
daa
cmovs
or
sar
sahf
xorb
pop
ret
add
mov
aam
and
sub
mov
lods
xor
sbb
mov
sbb
add
dec
xchg
pop
pushf
push
adc
scas
push
and
sub
enter
mov
xchg
stc
adc
mov
sbb
mov
sbb
xlat
rcr
mov
pop
push
jae
adc
mov
push
ficompl
call
push
nop
or
and
jne
xor
jmp
repz
xchg
std
test
daa
jae
out
xlat
and
clc
mov
addr16
fs
repz
sbbb
movsl
lea
and
cmpsl
test
cmpsb
xchg
aam
in
lds
mov
xchg
pop
jge
mov
mov
repz
stos
popf
sarl
mov
cs
mov
mov
int3
subb
xchg
xchg
andl
jnp
inc
pop
or
sahf
xchg
push
and
jmp
adc
cmp
push
mov
loope
es
mov
jmp
jb
sub
and
out
addb
and
adc
aaa
mov
dec
outsl
adc
mov
mov
xor
adc
inc
rorl
pop
les
push
mov
lock
notb
adc
enter
inc
ja
push
mov
jge
lock
mov
sbb
outsl
sub
pop
ret
mov
and
jl
jno
pop
inc
adc
in
lea
inc
sub
xor
lcall
mov
mov
aad
pop
and
pop
pop
movsb
les
test
hlt
inc
insb
inc
adc
dec
mov
fs
in
addr16
aam
insl
addr16
adc
mov
out
jb
ret
fs
xchg
sub
mov
pop
aam
out
cmpsb
xchg
jns
fs
mov
mov
int3
call
ja
test
fwait
rcll
out
iret
adc
inc
bound
stc
scas
mov
mov
pop
mov
fsubs
pop
xchg
out
dec
push
in
dec
fwait
jae
cmp
test
inc
jo
ljmp
fistpll
cwtl
scas
or
sar
stos
add
adc
lock
lods
xlat
adc
fistps
jecxz
sub
mov
sub
sbb
sbb
gs
inc
jae
mov
push
nop
pop
sti
stos
mov
sub
in
cmp
out
icebp
push
cmp
pop
lods
orb
fsubrl
or
dec
xchg
jg
cld
ret
dec
sti
jbe
dec
bound
xor
cltd
repz
mov
cmp
push
xor
or
push
jp
jge
fimuls
dec
fwait
jne
addr16
cmp
xchg
icebp
xchg
add
mov
testl
repz
xor
adc
fs
sbb
cmpsb
push
lods
sub
push
jns
pop
dec
lods
sub
jb
push
pop
mov
add
sub
stc
insb
and
fsubs
and
push
cmp
jmp
dec
cmp
lret
jge
popa
cld
cmp
push
mov
ret
or
mov
xchg
xor
cmpsb
or
or
mov
test
insl
dec
gs
sbb
insb
mov
push
cmpsb
add
pop
add
lret
adc
cmp
mov
mov
stos
nop
jns
push
cmp
inc
mov
adc
ret
push
jno
mov
stos
push
dec
aad
out
ja
popa
out
shrd
and
sub
inc
mov
jge
mov
xchg
pop
sbb
aad
adc
jne
ficompl
mov
jbe
mov
xchg
sub
mov
jg
fiadds
mov
repnz
outsl
call
mov
cmp
xor
mov
sub
scas
inc
xor
pop
push
out
sbbb
shl
cmp
lahf
leave
jns
add
sbb
mov
push
mov
scas
jmp
cmp
and
xchg
or
xchg
jne
sbb
inc
mov
push
pop
adc
push
call
inc
stos
jno
dec
lahf
or
or
pop
in
dec
aas
xlat
mov
clc
stc
repz
xchg
cwtl
cmp
lds
mov
jno
adc
mov
popf
jg
push
out
in
add
jp
es
adc
icebp
rolb
mov
hlt
std
xchg
iret
bswap
cmc
popa
pop
fldenv
mov
mull
in
jno
sbb
inc
rcrl
int
lods
imul
mov
pop
call
idivb
or
inc
and
jmp
in
fsubrp
adc
jnp
mov
mov
jmp
fcompl
clc
push
xor
clc
pop
lret
sbb
je
hlt
and
aaa
mov
inc
mov
jb
sti
push
cmp
cli
inc
cmp
jl
adc
mov
not
popa
cs
add
sahf
enter
test
les
or
dec
push
inc
and
adcb
movsb
add
cmp
mov
xor
dec
imul
push
jge
outsl
xor
dec
lret
mov
bound
addr16
mov
cmpsl
xchg
jnp
xchg
fcompl
jo
scas
ds
or
outsl
or
mov
jbe
sahf
loopne
xchg
pop
cmc
gs
mov
ret
fsubs
mov
cmp
rclb
and
ja
mov
lret
adc
in
fadds
sahf
mov
adc
pop
xchg
movsl
jmp
xchg
insb
dec
cmp
adc
inc
cmp
sub
out
add
imul
ja
cld
mov
jg
pop
scas
jmp
or
jne
stos
in
lcall
mov
pop
repnz
leave
xchg
js
mov
jmp
dec
es
stos
stc
sub
push
fnstsw
dec
insb
xchg
ja
or
ja
adc
lods
ss
mov
dec
adc
pop
incb
xor
mov
cmp
xor
insl
dec
dec
js
sub
push
jns
cmpsl
push
idivl
cmp
pop
push
add
jae
inc
cld
cmc
bound
fprem
xor
scas
push
or
jecxz
in
fmull
and
inc
out
inc
fisubs
outsl
cltd
jb
cltd
mov
ficoml
xchg
xlat
cmp
cld
cmp
adc
je
lahf
lds
jp
sbb
sbb
push
dec
aas
out
dec
jo
mov
stos
xchg
mov
xlat
xchg
push
cmp
jp
push
test
cmp
aas
call
sub
idivb
cwtl
adc
gs
fdivrl
roll
notb
and
fwait
add
dec
xor
pop
mov
mov
testl
mov
push
fcoml
push
mov
mov
sub
data16
jbe
push
testb
adc
mov
fidivl
sbb
cmpb
int3
out
push
dec
test
cltd
in
dec
jecxz
iret
cmpsl
movsl
repnz
mov
mov
jo
jns
negl
mov
cmp
xor
sbb
sbb
jne
cmpsl
xchg
or
pop
call
mov
mov
jae
sahf
es
scas
lods
inc
sbb
inc
sti
xchg
pusha
pop
jge
scas
dec
lock
out
mov
xchg
stc
xchg
sahf
and
sbb
lret
jbe
mov
sbb
nop
cmpsb
clc
into
push
push
test
rorb
fucomp
mov
mov
jae
xor
mov
xor
mov
lods
pushf
dec
ljmp
sbb
xchg
es
sbb
push
dec
daa
pop
mov
dec
adc
adcb
xor
push
or
add
jno
test
jae
test
cli
leave
iret
hlt
imul
sbb
mov
rcl
jge
cmc
in
dec
xchg
cmpsl
popa
iret
adc
out
lahf
outsl
scas
lret
xor
jmp
movl
sub
push
pop
xor
lcall
sbb
xchg
fisttpl
movsb
ss
mov
cld
jne
std
mov
stc
in
sti
in
loopne
add
dec
addr16
sub
or
cmp
push
out
rol
mov
xor
aaa
mov
lret
sbb
leave
test
int
mov
test
fsubrl
mov
cmp
lea
insl
xorl
orl
dec
push
hlt
mov
inc
in
ret
je
es
cmpsl
xchg
icebp
in
add
jg
fistps
cmp
movsb
daa
adc
mov
ljmp
xor
add
xchg
rcll
mov
insl
es
mov
adc
xchg
gs
lock
mov
inc
lock
pop
mov
arpl
popa
jl
fsts
fs
inc
aam
sub
lock
divb
mov
cli
ja
shlb
mov
divl
inc
cmc
leave
mov
sub
xor
add
pop
orb
ja
pop
shlb
bound
or
int
ficompl
aas
dec
outsl
scas
int
fisubs
jbe
test
hlt
leave
adc
dec
cs
sarb
aaa
mov
mov
ret
mov
sub
mov
fst
pop
mov
add
scas
pop
out
dec
mov
mov
lahf
inc
stc
ret
pop
testl
jle
inc
jmp
mov
in
jae
in
lret
adc
pushf
mul
mov
and
test
adc
addb
call
and
out
push
stos
pop
lock
sub
inc
hlt
push
sub
cmpsb
or
rcrl
stc
movsl
mov
pop
cmp
lods
in
cmpsb
out
and
pusha
adcb
mov
xchg
movsl
xor
subl
mov
pop
cmc
and
es
test
das
push
enter
mull
push
pusha
jp
jns
sbb
push
and
sarl
fildl
in
inc
adc
in
cltd
popa
adc
pop
ljmp
test
mov
mov
jbe
outsb
das
mov
fdivs
mov
xchg
aaa
leave
cltd
pop
and
cmc
inc
test
orb
sbb
idiv
add
or
add
mov
or
mov
out
inc
notb
fstl
xchg
adc
jbe
dec
push
adc
addl
fnsave
imul
jbe
das
bound
arpl
fwait
add
out
cmpb
push
lock
mov
push
lods
cmp
mov
cltd
adc
lret
mov
int
jl
adc
add
xor
pop
adc
jb
jo
push
mov
push
sbb
incl
pop
jbe
mov
mov
das
movd
dec
ljmp
mov
xchg
ficoms
notb
aad
jmp
mov
cmp
scas
and
cmp
jnp
sub
pop
lcall
dec
in
test
push
mov
cmp
pushf
fldcw
popf
cli
cmp
sub
push
ficomps
scas
inc
mov
mov
notl
insl
daa
mov
jg
pop
dec
adc
into
inc
aas
xor
jg
fimull
adc
cltd
mov
rcll
stos
xchg
xor
lods
inc
test
loop
popa
dec
cmpsb
lret
push
stc
les
cmp
xor
cmp
enter
sar
mov
dec
mov
jo
and
sub
add
loopne
adc
fists
cli
jo
int3
xchg
add
xchg
and
cmp
iret
pop
scas
inc
mov
push
dec
cwtl
pop
into
out
aam
mov
push
cli
inc
dec
add
data16
pop
cs
aad
aam
clc
inc
and
xchg
push
inc
xchg
push
loope
xchg
jmp
mov
xchg
sti
xor
mov
insl
inc
jmp
mov
shlb
orb
mov
pop
icebp
roll
add
aas
xor
mov
mov
or
subb
out
ret
sbb
mov
out
negb
xchg
lods
or
adc
or
mov
nop
fld
lea
fdivrl
stos
dec
mov
pusha
mov
in
mov
and
mov
jmp
imul
stc
lcall
fndisi(8087
stos
mov
aaa
pop
rorl
std
sub
or
cmp
test
jmp
repnz
mov
idivl
jno
clc
inc
repnz
lods
push
cmp
mov
aad
or
push
mov
fldl
dec
mov
movsl
dec
mov
scas
fcmovne
and
dec
ret
inc
xchg
add
push
jecxz
pop
into
ds
subl
leave
aas
bound
cmp
jns
jne
lods
sub
lds
mov
icebp
sub
loope
sub
sbb
xor
inc
call
push
pop
rcll
mov
ljmp
ljmp
leave
jmp
jg
xor
into
mov
jl
add
popf
mov
pushf
push
sbb
inc
dec
inc
and
jp
aaa
fsts
pop
test
sahf
dec
inc
inc
xchg
shrb
pop
lret
out
dec
call
rolb
mov
mov
in
pop
pop
push
xchg
decl
pop
adc
js
inc
das
sub
test
xchg
sahf
jmp
mov
stos
or
xchg
mov
lcall
sbb
cmpsl
aad
and
into
mov
loope
add
fistps
fisttpll
cmc
push
xor
mov
push
or
sbb
pop
rorl
out
jb
add
into
jbe
xor
mov
adc
fbstp
icebp
jns
push
cmp
repz
inc
adc
out
jl
ret
lods
stos
leave
xlat
xchg
loopne
lds
shrb
jno
hlt
pop
ds
xchg
scas
ret
mov
std
sub
mulb
dec
scas
adc
push
inc
fsubs
adc
cmp
cmp
push
aad
addr16
leave
push
sbbl
arpl
mov
cmpl
inc
jb
out
dec
aas
mov
cwtl
mov
push
in
insb
leave
inc
mov
sub
scas
jecxz
mov
push
mov
mov
movsb
jb
jg
jne
inc
stos
cmpsb
jecxz
lcall
jo
lods
lcall
xor
aaa
ret
shrl
adc
cmc
mov
and
test
mov
sub
in
sbb
fdiv
adc
cmp
outsb
xchg
push
inc
fisubrl
std
cs
scas
js
xor
mov
xchg
lcall
sub
cmp
inc
push
stc
or
addr16
ja
sub
dec
adc
popf
fldenv
add
lods
inc
mov
stos
xchg
fcomps
idivb
mov
out
dec
cmp
outsl
and
inc
xchg
cld
xor
cmp
push
std
sub
int
sub
arpl
xor
or
inc
loope
add
je
inc
cmp
out
xchg
lods
adcl
stc
in
and
iret
or
mov
and
lahf
aaa
cwtl
mov
les
xor
jmp
ror
or
push
fprem
xchg
mov
icebp
sub
push
dec
pop
adc
mov
in
stc
ret
pop
add
jecxz
loope
xor
popf
inc
inc
insb
add
test
push
rcll
fistps
aaa
or
pop
sbb
adc
adc
jns
dec
jmp
mov
push
and
aam
xor
mov
adc
xchg
sbb
add
cwtl
daa
sbb
cmp
shlb
ficomps
hlt
outsb
fiadds
and
clc
adc
cltd
aas
loop
enter
mov
mov
sub
sub
ja
popa
inc
pop
mov
popf
inc
mov
loope
mov
pop
imul
sub
or
fs
repnz
inc
mov
cltd
in
aas
sbb
rcrb
fs
add
aad
leave
iret
xor
movb
xor
mov
lcall
jb
cmp
jecxz
clc
cmp
outsl
iret
mov
imul
mov
jp
lahf
cld
xor
sbb
ffreep
test
and
clc
fbld
jno
xor
add
cmp
jg
iret
mov
add
cld
out
lods
loopne
out
push
jns
insl
jmp
lds
mov
fimuls
test
jae
cmc
jno
pop
dec
jne
rorl
mov
and
xchg
roll
or
adc
dec
or
add
stos
jle
cmp
add
lods
inc
and
xchg
and
sub
xlat
in
jmp
es
mov
mov
sub
shrb
fidivs
xchg
adc
xchg
lret
xchg
jbe
push
pop
lahf
int3
test
jbe
aam
mov
js
inc
xchg
loop
shlb
push
sbb
push
popa
xor
dec
cmp
ret
dec
lcall
test
xchg
in
outsl
stos
enter
jbe
inc
xor
mov
jecxz
pushf
mov
bound
sbb
pop
repz
stc
scas
or
and
xchg
test
jns,pn
sub
and
jmp
add
pop
repnz
aad
pushf
enter
and
stos
enter
test
stc
data16
mov
nop
rcl
adc
shlb
les
mov
movsb
jbe
push
aam
test
inc
scas
lods
mov
cmp
lea
sub
out
pop
adcl
aaa
adc
mov
and
clc
inc
push
adc
add
jae
sbb
sarb
cmpsl
data16
pop
push
popf
repz
mov
mov
ljmp
aas
frstpm(287
lock
sbb
and
aas
ret
mov
mov
and
xchg
pop
popa
loop
in
mov
mov
fimuls
int
hlt
ss
imul
ds
pop
lahf
add
std
movsb
inc
mov
popf
aas
dec
loope
pushf
inc
and
sub
test
test
push
jns
push
xchg
sub
xor
push
push
in
ss
push
push
je
imul
int3
xor
ljmp
sub
arpl
xchg
ds
jge
and
jnp
xor
dec
mov
pop
cltd
jle
pop
jmp
inc
mov
sub
dec
pop
enter
into
nop
lret
pop
xchg
rorb
repz
dec
mov
pop
add
cmp
jmp
into
sbb
add
roll
std
fdivl
fildl
loopne
sbb
mov
repz
test
shll
fwait
subl
push
aam
iret
out
mov
cs
mov
adc
pop
jnp
fnstsw
dec
cmpb
dec
insl
xor
lret
xchg
lock
xchg
sbb
fisubs
pushf
pop
lds
fcompl
scas
out
xchg
cmc
add
leave
loopne
call
insb
into
jnp
inc
and
sti
aas
rclb
lret
decl
aas
fstps
dec
pusha
out
lods
mov
mov
pop
pop
xchg
sub
not
jb
jno
add
add
arpl
sub
dec
jmp
std
add
icebp
test
inc
fcmovnbe
cmp
sub
add
xor
rcll
cmpsl
push
lds
mov
add
cs
adc
pop
outsl
push
dec
jp
je
shlb
xchg
xchg
inc
ret
and
mov
test
sbb
xor
sub
rcrb
push
mov
mov
lock
cli
nop
mov
icebp
xchg
mov
xchg
mov
scas
mov
les
adc
call
xchg
dec
les
push
mov
and
lock
mov
cmc
sub
add
nop
ret
dec
mov
inc
cmp
mov
enter
mov
push
xchg
imul
das
decb
ljmp
push
push
push
roll
popf
or
mov
dec
mov
inc
dec
mov
popl
enter
fnsave
add
addr16
and
movsl
fsubrl
sbb
or
data16
mov
movsl
cli
into
lock
push
fldt
pop
xchg
sbb
lds
pop
lea
add
mov
jl
mov
inc
mov
jo
xchg
adc
xchg
out
cmpxchg
pop
andb
fcmovu
rcr
or
sbbb
bound
mov
ja
test
fiadds
out
call
push
lahf
push
scas
scas
inc
call
jl
loope
pop
aad
jle
mov
jp
sub
sub
jno
xlat
imul
push
nop
std
pop
or
cwtl
cmp
out
xchg
jg
rcrl
in
testb
push
pop
ljmp
ja
mov
lods
mov
sub
sbb
inc
add
lahf
test
jle
inc
adc
lcall
mov
ljmp
inc
and
cmp
adc
sub
sti
inc
leave
clc
sbb
test
stos
and
push
mov
pop
cmpsl
mov
adc
mov
mov
inc
repnz
mov
test
mov
fxtract
sub
aaa
lret
insl
or
sub
pop
mov
pop
lret
stos
les
or
les
sub
adc
scas
in
and
test
add
cmp
mov
cmp
xor
jg
mov
add
daa
mov
aaa
xchg
cmp
or
je,pn
pop
loop
add
xor
push
icebp
orb
jb
mov
xor
inc
jns
xchg
jmp
nop
mov
mov
insl
xorb
cmp
dec
inc
pop
arpl
jge
push
jno
into
pop
push
jp
jp
xchg
cmp
push
add
jae
in
dec
iret
add
xor
dec
inc
sbb
inc
in
mov
add
xlat
or
push
push
mov
jae
pusha
js
clc
adc
jns
mov
fcomp
ret
testl
cmpsl
les
sbb
inc
cmpsl
mov
aas
repnz
and
lods
and
in
cmp
mov
push
jb
lcall
mov
cs
xor
sbb
lods
push
sbb
dec
mov
cmp
iret
cmc
in
stc
mov
cltd
shl
mov
inc
shl
pop
jp
mov
aaa
enter
inc
stos
loop
sbb
and
sahf
das
jne
call
and
mov
sbb
add
sbb
hlt
sarl
rol
lret
cmp
cld
test
mov
shll
xchg
loope
in
push
scas
es
lahf
in
cld
add
repnz
in
shld
mov
imul
jnp
jns
and
add
push
fsubs
decl
mov
mov
jge
inc
shll
jg
push
ds
movsl
fiaddl
push
shll
xor
mov
fcoml
inc
notb
mov
sbb
and
jl
xchg
and
in
xor
movl
arpl
push
inc
loope
sarl
jns
inc
outsb
out
imul
push
jmp
test
pop
push
negl
std
xchg
jecxz
dec
mov
sub
ljmp
shl
push
sbb
jno
dec
int3
and
jbe
pusha
xchg
mov
fs
lods
pop
out
push
ds
jbe
cs
call
out
sub
aas
adc
pushf
push
inc
leave
mov
xor
add
xchg
fs
and
pop
leave
rorb
push
xor
andb
cwtl
jbe
and
cmp
iret
fs
ja
mov
inc
ficompl
mov
movsb
dec
leave
dec
movsb
or
inc
xchg
and
adc
shll
sbb
jo
lods
scas
in
push
cmp
outsb
mov
orb
inc
ret
in
or
jnp
xchg
push
xchg
in
inc
mov
jmp
fidivrs
dec
sahf
js
addl
jbe
imul
popf
pushf
cmp
pushf
dec
test
and
test
sbb
inc
es
cmc
aas
cmp
sbb
push
push
lcall
leave
sub
add
inc
pop
cmc
jecxz
xchg
leave
aad
pop
insb
call
dec
icebp
aaa
push
dec
or
repnz
loop
fcoml
idivl
adc
bound
mov
add
inc
lods
inc
or
pushf
dec
rorb
or
adc
mov
jno
lds
stc
mov
cmp
push
cld
lcall
push
jmp
repnz
cmp
icebp
mov
enter
shrl
call
popf
nop
rorl
andl
jecxz
data16
push
sbb
movsl
rorl
imul
push
sti
enter
pop
mov
fld
push
push
fdivrs
je
or
in
je
cmp
dec
inc
push
xchg
nopl
mov
sub
cmp
in
fadd
call
mov
xorb
jb
aam
push
push
lcall
sbb
movsb
call
mov
iret
dec
xchg
jp
shlb
lock
stc
jg
adc
push
cli
out
out
leave
mov
cld
cltd
cmp
xchg
cmp
mov
push
add
add
push
jle
jl
ljmp
repnz
mov
and
rcr
push
imul
aad
push
movb
scas
sbb
dec
pop
pop
shrb
xor
adc
mov
sub
lods
out
sahf
dec
icebp
call
lea
sbb
mov
nop
adc
test
inc
jle
jle
jmp
xchg
mov
scas
lret
mov
imul
mov
call
daa
es
sub
cli
dec
jecxz
out
mov
add
push
mov
xchg
or
xchg
cmpb
adc
shll
xchg
stc
das
ret
adc
sbb
and
push
dec
int3
movsl
aam
sbb
in
loopne
jns
xor
dec
cltd
mov
repnz
add
insb
push
cmc
pusha
jl
fcoms
xor
stc
jle
in
push
divb
cmp
dec
sub
inc
stos
fld
cmp
add
cli
ljmp
ljmp
mov
adc
es
xchg
lcall
fistpll
mov
lea
or
subb
popf
lahf
stc
jb
mov
mov
out
test
fbld
mov
pop
fldt
inc
or
pop
in
sbb
xchg
iret
xchg
and
in
ss
addr16
sub
enter
add
lahf
xor
hlt
test
add
pop
test
inc
add
hlt
lods
jno
int
or
fbstp
mov
cwtl
cmc
iret
lea
pop
inc
add
xor
mov
mov
or
pop
dec
sub
or
push
adc
mov
enter
pop
es
or
jae
icebp
mov
movsl
sub
in
loopne
cmpsb
sub
pop
dec
adc
insl
fidivl
add
ret
stos
not
call
out
jp
jns
and
cmpsl
push
sub
cmp
stos
mov
fsubrl
cld
lret
mov
insb
mov
xchg
orb
pop
xchg
repz
jbe
xchg
jns
adcb
xor
mov
add
test
inc
xchg
xchg
sar
pop
pop
inc
xor
or
mov
cmp
movsb
into
test
adc
stc
xor
sub
rclb
add
or
mov
push
mov
push
push
nop
jmp
inc
aam
lahf
lock
mov
push
sub
aam
push
xlat
fimull
and
sub
jne
push
mov
xor
dec
aad
jge
inc
xor
mov
in
out
outsb
jmp
pop
pop
mov
bound
int3
shll
lret
loopne
cmp
xlat
jb
fcoml
mov
xchg
pop
imul
loop
push
jmp
cmc
push
xor
mov
jl
dec
sub
mov
or
cmp
jp
test
test
stc
mov
std
mov
mov
mov
mov
or
mov
jg
ljmp
xchg
cmp
xchg
mov
test
cmpsb
jb
push
inc
fdivrs
dec
jecxz
adc
lcallw
mov
sbb
add
lahf
xor
loop
sbb
fadds
mov
jns
cmpsb
mov
mov
inc
dec
and
push
aas
xchg
popf
stc
or
jns
mov
aad
pop
and
xor
mov
int3
inc
mov
les
push
fisubs
sbb
xchg
mov
adc
gs
fmuls
test
and
jecxz
jb
adc
or
pop
jno
pop
xchg
mov
outsb
push
mov
fidivl
and
int
add
mov
cld
sbb
iret
shll
es
and
cmpsl
push
daa
inc
iret
push
and
lret
mov
xchg
out
inc
mov
imul
clc
fldcw
scas
adc
shl
dec
mov
jne
push
out
xor
and
mov
leave
jne
sbb
lock
lret
pop
scas
cmp
xor
cli
orb
jb
jmp
aad
pop
mov
xor
cmpsb
test
jns
inc
mov
xchg
mov
outsl
adc
pop
cltd
daa
mov
pop
sub
mov
mov
lret
fdivrp
andps
push
jnp
xchg
jo
scas
dec
mov
xchg
cmp
ds
repnz
pop
imul
jae
push
sbb
pop
sub
repnz
mov
jb
inc
dec
mov
inc
xorl
mov
leave
sti
cs
sub
hlt
push
cli
jbe
enter
or
outsb
insb
sbb
data16
fwait
cmpsl
int3
xor
inc
dec
sbb
mov
mov
adc
push
mov
lock
mov
sbb
push
and
or
in
std
xchg
mov
jp
xor
cmc
cwtl
xchg
add
dec
pop
idivb
scas
fwait
das
sub
jns
sbb
int
xchg
out
imul
push
fmull
test
gs
hlt
adc
sbb
es
mov
pop
push
mov
xchg
dec
imul
add
mov
sbb
js
xor
and
fists
out
dec
hlt
stos
cmpsl
mov
out
or
and
adc
out
aam
lock
test
cmc
stc
pop
push
mov
jae
xchg
jo
fs
push
pop
lods
lods
insb
push
jns
mov
inc
lahf
jne
out
ret
popa
xor
ja
rorb
fisttpl
in
and
aas
loopne
push
add
shrb
fs
xor
push
jg
fucomp
cld
adcb
pop
popf
mov
cmp
neg
sbb
cmp
shll
leave
pop
sub
shll
lods
test
push
sbb
xor
stc
orl
jmp
xlat
jl
orl
pushf
jge
sbb
xlat
cmp
adc
sbb
gs
mov
loopne
sub
pop
jecxz
jae
xor
xor
js
cmpsb
xlat
push
or
xchg
call
mov
mov
das
xlat
mov
add
mov
mov
push
sub
fistps
and
lahf
jnp
clc
mov
flds
call
stc
stos
sub
dec
xchg
sahf
inc
mov
popf
sbb
outsb
test
adc
aam
jo
push
or
sti
pop
mov
in
js
mov
and
and
jnp
sbb
js
push
adc
insb
out
stc
mov
xor
addr16
int3
jecxz
or
out
rolb
adc
sub
add
fidivl
xor
lret
jecxz
shlb
lock
xchg
mov
nop
js
push
sbb
filds
stos
add
cs
add
loop
adc
cli
add
rcll
stc
in
inc
and
in
repnz
into
dec
sub
aam
xchg
mov
incb
sub
jg
sbb
in
mov
fldl
pop
int3
mov
int
and
scas
imul
stos
aaa
mull
adc
shr
sbb
ficomps
fsts
js
mov
test
xchg
cmp
pop
xor
daa
add
mov
and
out
cltd
inc
mov
sbb
mov
xchg
cmpl
adc
sub
lret
mov
adcl
repnz
outsl
xchg
dec
lahf
aad
and
pop
xchg
call
mov
xor
dec
popf
daa
sbb
je
addr16
dec
inc
xor
test
gs
rcrb
pop
into
dec
cmp
icebp
int
cmp
shl
cmp
mov
cli
inc
jge
aas
fpatan
pop
mov
and
rorb
iret
imul
add
mov
inc
xchg
sbb
fmul
testl
insl
and
lds
push
stc
stos
addr16
xor
inc
pushf
push
cmpsb
dec
xchg
sbb
negl
jle
sbb
ljmp
pop
jl
adc
pop
dec
mov
dec
lock
out
lea
mov
and
mov
xchg
lods
inc
fsubl
loop
popf
or
in
adc
mov
jg
or
insl
test
shl
jecxz
and
push
jne
push
je
add
mov
xorb
lock
jne
popa
jecxz
and
mov
movsl
enter
or
sbb
jo
in
arpl
cmp
inc
xchg
sub
icebp
mov
adc
jo
adcl
push
pop
sbb
test
and
pop
jp
sub
popf
addr16
lock
popf
repnz
jge
jmp
rorl
sbb
arpl
out
daa
add
adc
enter
xchg
divl
sbb
pushf
in
fucomp
inc
cmpsl
and
or
lods
js
jmp
sbb
in
sbb
push
cmp
mov
mov
shll
testb
sbbb
mov
outsl
in
jne
lcall
dec
inc
jno
add
lahf
fbstp
cmpsl
mov
add
add
push
pushl
xchg
mov
fcomps
les
mov
rorl
xlat
and
shll
lods
add
jl
inc
out
mov
jb
jle
pop
and
sub
jl
int3
mov
and
and
xor
aad
pushf
je
push
xchg
adc
ret
pop
add
pop
fldenv
je
subl
sub
loope
jnp
jbe
movsb
pusha
cs
jbe
scas
add
and
test
cli
nop
push
xor
cmp
je
fwait
addb
push
popa
jl
dec
popf
fisubs
mov
push
jmp
lods
sti
ja
adc
add
mov
lretw
aaa
xchg
lret
xor
js
xor
mov
sti
pusha
dec
xchg
or
int3
cmc
ret
dec
icebp
or
mov
xor
cltd
call
inc
popa
push
push
xlat
cwtl
push
aam
push
mov
cwtl
pusha
xchg
clc
add
sbb
adc
outsl
push
aas
mov
add
nop
xchg
repnz
aad
cs
xor
lret
testl
inc
nop
xchg
stos
pop
mov
pusha
data16
mov
andl
fcompl
xchg
movsl
hlt
ds
xchg
dec
rorb
loop
mov
and
mov
ret
xor
movsb
pop
lods
cmp
sbb
sub
add
mov
xor
push
sub
inc
or
xor
mov
pushf
jns
mov
pop
rcll
and
and
std
mov
enter
popa
stos
test
cmp
mov
jecxz
jne
fadd
mov
arpl
dec
std
mov
popaw
mov
mull
adc
lods
orb
in
scas
xor
xor
push
cmp
sbb
ret
xchg
lock
dec
in
scas
ret
lret
push
inc
pop
add
xor
pushf
push
mov
jmp
rorb
mov
stc
sub
mov
sub
ret
dec
repnz
and
mov
xlat
ljmp
lcall
cmpsb
add
insl
sub
jge
repnz
jge
xchg
adc
push
repz
sbb
inc
pusha
data16
movsl
addr16
pop
ficoms
enter
or
adc
adc
mov
xor
loop
movsl
ja
sub
push
sbb
outsb
xchg
popa
mov
fs
xchg
into
cmp
push
push
aam
xchg
pop
inc
hlt
and
aad
mov
stos
push
outsl
mov
lahf
mov
inc
sub
mov
icebp
and
cmp
shr
pushl
adc
popa
xchg
xchg
xchg
adc
cli
push
aaa
adc
push
xor
rcrb
adc
cwtl
fsts
pop
push
aaa
dec
mov
call
mov
cmpsl
cltd
xchg
es
sti
xlat
ljmp
andl
lret
and
sbbl
xchg
jg
or
jb
mov
nop
scas
nop
dec
imul
xchg
imul
xor
jbe
stos
jne
cmp
fsts
stc
nop
mov
popa
das
adc
jmp
add
mov
mov
repnz
xor
hlt
mov
loop
mov
and
inc
cmp
cwtl
fwait
leave
lock
ja
int
in
cwtl
scas
loope
lods
adc
sahf
repz
jmp
enter
adc
ja
subb
repnz
cmp
or
xchg
adc
mov
cmp
xor
xchg
cwtl
push
push
push
movsb
ljmp
enter
es
aad
decb
aam
in
dec
jp
sbb
pop
add
dec
scas
aam
ljmp
push
and
add
mov
lock
aad
andb
mov
shl
dec
leave
insb
fiadds
ret
mov
rcl
fisttps
push
push
rclb
cmp
mov
jo
cmp
xor
sbb
repz
pop
and
dec
pop
cmpsb
pop
ret
pop
mov
icebp
popf
pop
lea
mov
std
push
mov
nop
jo
repnz
aas
inc
dec
mov
inc
jmp
sub
dec
push
in
in
rcr
mov
mov
xlat
decl
sarb
dec
mov
xchg
iret
mov
fstps
dec
daa
inc
or
fnstsw
jmp
mov
dec
das
stos
pushf
or
cld
dec
or
jno
je
and
pop
lock
clc
enter
push
in
or
pop
dec
and
aas
sbb
loope
xor
clc
mov
lods
jl
cmp
popf
xchg
jl
cld
mov
pop
div
testb
sti
xor
out
std
fidivrs
sarb
and
jp
mov
xor
mov
adc
cmp
dec
or
lds
sti
and
rclb
mov
test
xchg
lret
daa
subl
cmpsl
xchg
xchg
gs
shll
les
jne
xlat
add
cld
pop
mov
jp
push
push
ds
or
sbb
hlt
ret
into
sti
es
scas
orb
roll
lea
or
xchg
or
lods
mov
mov
push
dec
jae
push
andb
sub
adc
std
pop
loopne
sbb
das
add
out
xorl
cmpsl
sub
push
ss
pop
clc
std
out
shrb
bound
outsb
fldenv
and
adc
add
xchg
in
and
dec
push
sub
jo
dec
sub
adc
je
jmp
xchg
mov
cmp
lret
add
sub
dec
sub
dec
cmc
lcall
ds
jno
test
pop
repnz
xor
les
mov
dec
int3
ret
lods
into
push
aaa
ljmp
inc
xor
sub
fistl
xchg
dec
arpl
imul
push
arpl
stc
inc
xor
jo
mov
int3
repnz
xchg
lret
and
out
jb
lret
fldl
lea
lcall
mov
movsl
push
xlat
pop
add
and
ret
cmc
xchg
mov
mov
sbb
shl
jmp
jnp
cmpl
shlb
pushf
loop
js
push
sbb
pop
outsb
or
in
jbe
jmp
jge
pop
lret
push
repnz
or
inc
roll
fsts
aam
lods
daa
sbb
int3
orb
pushf
sarl
adc
xor
push
fnstcw
dec
pop
jmp
jp
cmp
add
pop
repnz
inc
clc
sub
jne
daa
scas
faddl
insb
insb
xchg
or
ret
xor
inc
add
xchg
and
cmc
rcrb
pusha
sbb
stos
pop
loope
fcomps
subl
xchg
cld
cmpb
fld
dec
scas
xchg
dec
pop
xchg
cli
popa
xchg
test
jmp
inc
xlat
and
loopne
sbb
lds
int
rclb
stos
pop
mov
and
jg
test
roll
imul
inc
lods
dec
pop
and
mov
shl
pop
sti
cmp
mov
addr16
push
mov
and
fdivrs
dec
addl
add
push
pushf
leave
xlat
push
aaa
xlat
xor
orl
dec
stos
outsl
fsubrs
sub
sbb
lret
add
cmc
pushf
and
mov
cmc
cs
jle
mov
pop
lods
jl
dec
jecxz
popa
and
js
xchg
sar
nop
and
shrl
mov
or
cwtl
daa
xlat
pop
imul
adc
lret
pop
stc
mov
mov
daa
adc
ficomps
sub
leave
jmp
out
mov
and
sti
jge
sbb
xor
mov
loopne
lahf
lea
and
mov
pushf
out
jl
fcmovne
aaa
out
pop
mov
sbb
xchg
aam
jmp
jp
mov
out
cli
xchg
xor
addr16
ljmp
daa
jmp
mov
inc
add
push
mov
js
ja
sbb
cltd
xchg
fiaddl
das
fidivrs
pop
ret
fmul
push
imul
dec
mov
jb
push
xchg
int3
stos
cmpl
das
sub
and
dec
movb
daa
pushf
stos
lret
cmp
outsl
pop
addb
testl
add
in
je
sahf
pop
mov
decb
orb
adc
pusha
cmpsb
ret
pop
jnp
cmpsl
adc
out
push
pop
ret
xor
inc
adc
ret
mov
mov
sti
nop
aam
ficoml
mov
jno
in
clc
pop
push
jmp
or
fildll
sub
lds
lcall
imul
add
xor
andl
sbb
jnp
add
pop
pop
je
cmp
push
sub
mov
push
int3
add
inc
roll
pop
ret
sbb
mov
or
pop
mov
stos
xor
mov
scas
ja
insb
or
sbb
adc
pop
pop
bound
roll
lret
mov
fldt
leave
jmp
xchg
sub
pop
mov
fs
and
sbb
cmc
add
adcb
sti
push
dec
sub
pop
call
pop
jne
sbb
sbb
push
pop
lret
push
lret
iret
pop
mov
inc
mov
and
xchg
pop
xchg
mov
dec
xor
adc
test
cltd
add
push
cmp
mov
movl
jo
jle
sub
mov
outsb
scas
sbb
push
js
xorl
push
lcall
sbb
mov
jo
push
cltd
scas
and
sub
mov
jmp
or
mov
and
nop
jae
push
aam
push
or
mov
mov
cli
into
loope
sub
push
xchg
pop
lods
push
cmp
xor
adc
int3
negl
imul
orl
insl
and
jecxz
jmp
jno
fildll
addr16
shl
sahf
jbe
in
dec
mov
rcrb
xchg
shlb
ljmp
sti
incl
lret
imul
pop
mov
mov
jne
inc
rcrl
popf
push
test
cmpl
cmpb
sbb
fistpl
cwtl
push
and
pop
jns
cmp
stos
lcall
outsb
inc
pop
inc
out
mov
icebp
enter
movsl
insl
sub
je
or
sahf
out
je
push
xchg
mov
pop
out
or
fs
sarb
aad
inc
dec
or
cs
dec
hlt
adcl
popa
rclb
loope
cmpsb
jp
and
mov
gs
add
loope
push
add
cld
shrl
push
in
rcrl
hlt
mov
lods
mov
loopne
pop
mov
test
cmp
or
push
test
notl
inc
and
mov
mov
out
push
stos
rolb
in
cmp
in
in
mov
mov
xor
lret
jae
mov
leave
mov
mov
iret
out
cmp
cmp
xor
sub
and
dec
stc
filds
xor
cld
stc
insb
jb
jb
dec
add
shll
jo
or
enter
stos
addr16
negb
test
call
mov
adc
sbb
jl
pop
arpl
xor
push
cli
adc
mov
imul
pop
or
inc
push
hlt
xchg
mov
jl
scas
mov
icebp
dec
js
adc
mov
insb
js
and
pop
fbstp
cmp
push
lds
xor
or
scas
rorb
sbb
frstor
sub
je
cmp
loopne
aaa
in
and
inc
cmp
cmp
sarl
xchg
inc
mov
mov
arpl
imul
dec
jmp
int
nop
shll
jg
jns
nop
es
out
or
repz
ja
gs
mov
cmp
orb
mov
push
insl
fisubl
push
rcl
std
pop
mov
mov
and
sbb
es
idivb
cmp
cmp
jne
pop
pop
xchg
mov
or
lock
inc
rcrb
cmp
loope
enter
pop
sbb
mov
loop,pn
in
xchg
xor
mov
push
sub
pop
imul
fcmovnb
dec
loope
pop
mov
push
adc
xchg
push
ljmp
sti
pop
inc
mov
add
pop
je
mov
or
loope
sbb
mov
cmp
inc
lock
push
jmp
lock
jbe
mov
mov
int3
outsb
push
lcall
ja
repz
movsb
lar
cmp
ficompl
jmp
sub
std
add
push
movsb
mov
push
sahf
aam
dec
inc
addb
adc
xchg
jne
lds
jg
dec
dec
push
cmp
neg
mov
and
test
jo
xor
mov
cltd
push
jo
andl
rcrb
cmp
jg
mov
fsts
mov
cmp
cmc
and
nop
loopne
repz
sub
andb
movsl
or
test
sarl
mov
mov
sbb
mov
aaa
xor
sbb
jbe
dec
xor
mov
cmpsl
or
add
loope
movsl
jbe
in
cmp
sub
fdivrs
push
and
mov
jl
aaa
jae
ret
jne
and
xchg
cmp
mov
and
fwait
mov
inc
adc
pop
or
bound
add
fwait
adc
cmp
cwtl
and
insb
hlt
xchg
daa
arpl
xchg
jb
mov
loope
jb
fstps
pop
lods
adc
mov
fcmovbe
jne
mov
repz
aaa
test
inc
cmp
sbb
sbb
jb
push
jns
cmp
imul
cmpsl
fsts
cmp
cmp
insb
or
mov
sarb
and
push
jmp
inc
ds
cltd
les
cmp
ljmp
test
xor
adc
cmp
cli
lahf
bound
daa
loopne
cmpsl
pop
mov
mov
xchg
insl
cmp
jge
sbb
jmp
ss
scas
mov
sbbb
cmpl
cmp
loopne
or
pushf
push
xor
fldcw
pop
lret
mov
sahf
subb
pop
adc
mov
sbb
dec
add
fdivl
add
add
sqrtps
pushf
and
data16
cmp
std
fisttps
mov
mov
cwtl
xchg
pusha
lods
or
mov
xor
mov
xchg
cmpsb
ret
mov
idiv
mov
push
lods
fs
into
xchg
movsl
inc
add
mov
push
loope
ret
out
clc
clc
cwtl
lods
loopne
sub
adc
xor
sub
test
sti
fildll
or
daa
bound
push
fs
pop
pop
xor
inc
cmp
dec
subb
loope
add
ret
outsl
add
add
sbb
pop
sub
sahf
xchg
sub
xor
cmpsb
divb
addl
out
fildl
mov
cmp
aad
lds
inc
jns
out
xor
rcl
pop
push
push
aas
xchg
aam
popa
pop
jmp
cmpsb
sub
dec
xchg
mov
and
cmp
sti
les
inc
push
push
insb
push
jle
inc
or
mov
std
sub
fcmovne
int
mov
dec
outsb
jl
pusha
add
sbb
jmp
gs
adc
jbe
aad
and
pushf
fs
fdivrp
mov
lret
sub
inc
dec
xlat
loopne
mov
fldl
js
sub
scas
push
xchg
out
adc
add
cmp
scas
insl
adc
mov
loopne
or
push
xchg
fwait
loopne
lret
cmp
vpsllq
into
nop
sub
add
jb
push
mov
fstpt
add
and
push
inc
mov
jb
add
and
pop
mov
push
out
push
jno
mov
inc
cmp
sbb
sub
cmp
popa
jle
jbe
push
xor
daa
pop
push
jp
jle
fwait
jae
out
ss
push
push
sub
xchg
cmpsb
loope
pop
mull
pushf
mov
stos
inc
fbld
push
lcall
cwtl
pop
movsb
cmpl
mov
jmp
xchg
inc
jl
sahf
mov
in
test
std
ss
cmp
mov
add
movsl
call
add
xor
jmp
shrl
nop
add
xor
xor
cmpsl
mov
stos
xor
sbb
xchg
push
iret
ja
lret
and
sbb
push
lret
dec
test
xchg
cld
pusha
mov
fisttpll
arpl
std
loope
out
ja
mov
mov
push
sahf
in
adc
pop
pop
in
xor
jmp
seta
int3
adc
aam
pop
cmp
mov
fbld
add
mov
mov
ffreep
je
mov
add
repz
jmp
out
pop
push
stos
xchg
sahf
cld
arpl
iret
mov
mov
lea
mov
movsl
jmp
sahf
push
je
std
mov
pop
cli
mov
mov
pushf
dec
jbe
lock
mov
shlb
jno
mov
inc
xchg
enter
inc
sub
addr16
test
lock
shl
in
rorb
or
mov
outsb
fbld
stos
jg
sbb
out
adc
rolb
hlt
xchg
scas
dec
mov
stos
push
jle
xchg
ja
push
fildll
rorl
sub
mov
fsubs
std
imul
in
mov
mov
pop
aas
xor
cmp
adc
push
ss
test
dec
aam
ret
sbb
pop
daa
mov
sbb
cmp
push
or
mov
sub
or
andl
int3
add
enter
popf
mov
mov
cmp
lret
jns
pop
cmp
cmp
cmpsl
mov
scas
inc
fs
fnstsw
fadds
xor
push
jmp
mov
sub
fs
push
fwait
mov
lods
pusha
ss
inc
sbb
mov
int
enter
cld
pop
xchg
popa
mov
mov
mov
push
adc
add
mov
sub
and
mov
or
xchg
iret
pushf
sbb
push
add
push
shrb
jmp
mov
in
pop
push
sub
xchg
xor
std
inc
lret
mov
cmp
sub
lahf
pop
frstor
mov
gs
pop
outsl
jmp
sub
test
dec
sub
fildl
jo
jle
pop
sbb
dec
outsb
dec
mov
repz
or
fistl
jbe
icebp
mov
test
sbb
xor
sahf
sub
mov
push
dec
ret
out
aad
imul
popf
dec
fnstsw
cmc
pop
pop
add
mov
fidivrl
dec
sbb
nop
pop
pop
fiadds
adc
sbb
xor
mov
ds
inc
popa
xor
add
jg
mov
mov
fstpl
mov
inc
xlat
adc
mov
addl
ret
pop
mov
aaa
cs
fstl
mov
sub
inc
inc
cmp
arpl
inc
neg
xchg
mov
enter
cmc
pop
mov
mov
add
out
cmp
inc
iret
xchg
push
jl
ljmp
into
mov
lods
ret
js
xchg
jp
dec
sbb
jl
cmp
pusha
loopne
push
mov
push
mov
mov
ds
mov
into
pusha
mov
fs
adc
js
xchg
pop
xor
cmp
jge
loopne
inc
in
ljmp
mov
int
xor
bound
in
fwait
adc
push
adc
fldcw
or
rcrb
and
xor
sub
roll
lret
pop
pop
or
stos
fisubrl
ss
mov
mov
stc
lods
sbb
sti
pop
int3
jne
fbld
cwtl
orl
jg
test
in
and
adcb
or
jmp
dec
mov
mov
and
das
mov
adc
pop
jo
lock
cld
lods
add
ret
pop
stos
mov
jne
lds
sub
pop
cmpsl
inc
push
add
fmul
notb
cmp
pop
lea
inc
jo
mov
add
push
jmp
daa
arpl
stc
adc
push
sbb
enter
pop
xor
jg
push
cmp
fwait
mov
cli
sbbw
das
scas
cs
jns
or
and
xchg
adc
mov
sub
pop
mov
mull
xchg
dec
fildl
lret
adc
cwtl
jp
lea
stos
or
aam
sarb
mov
mov
enter
pop
mov
jecxz
cmp
dec
mov
mov
vpsubsb
daa
push
fwait
out
pop
cld
mov
mov
shlb
out
xchg
hlt
ds
push
nop
clc
repz
dec
pop
mov
or
mov
icebp
mov
pusha
mov
and
inc
sub
es
nop
rorl
popa
cld
jne
hlt
iret
aad
adc
adc
pop
mov
mov
sub
insl
idivb
sbb
rclb
sbb
stos
out
cmp
sub
xor
pushf
push
push
scas
adc
bound
test
mov
popa
jecxz
fiadds
arpl
aam
fnstcw
stos
rcrb
call
insb
sbb
xor
cltd
sub
sbb
insb
loope
imul
mov
subb
or
jnp
lcall
sahf
xlat
lea
fcom
cmp
insb
mul
std
cmp
sub
fwait
push
ret
sbb
push
push
test
xchg
mov
insl
pop
pop
xchg
movsl
add
or
test
repnz
inc
fcompl
xchg
lcall
popa
ja
jecxz
push
sbb
outsb
xchg
ss
or
inc
mov
test
ret
cltd
pop
gs
aam
jnp
ret
add
or
icebp
and
add
dec
and
add
cmp
aad
arpl
shrl
adc
imul
add
mov
pop
rclb
popf
jecxz
das
fwait
nop
push
jbe
pop
lret
subb
pop
add
stos
xchg
gs
jae
jl,pt
jno
std
xchg
xchg
sti
xor
iret
daa
fisubl
int
and
pop
cmp
nop
dec
adcb
dec
or
adc
ds
inc
mov
dec
mov
mov
int3
rolb
adc
insl
pop
push
rclb
push
ja
xchg
les
adc
aaa
xchg
or
into
dec
inc
fisttps
dec
pusha
repz
in
fdivs
loopne
outsl
sbb
nop
out
mull
lds
fmuls
lahf
dec
xor
push
sahf
call
mov
and
add
mov
xor
push
and
mov
mov
rcll
xchg
gs
ret
push
dec
or
xchg
mov
dec
xchg
mov
inc
xor
sub
mov
lods
add
jb
mov
push
clc
and
sbb
pushf
xchg
shrb
pop
icebp
cltd
jae
mov
aad
jns
adc
push
mov
fmuls
pop
leave
out
sbb
pop
leave
adc
mov
mov
push
cmp
sbb
push
or
xchg
sub
sub
mov
int3
push
dec
xor
scas
and
or
pop
aas
pop
mov
cmpsl
sbb
adc
sub
push
dec
push
add
mov
scas
cmp
ud0
lods
adc
mov
cwtl
mov
ret
outsb
lcall
lahf
scas
fidivrl
sbb
hlt
push
lret
jg
sbb
xlat
pop
iret
mov
icebp
repnz
push
pop
mov
in
add
dec
cwtl
cld
adc
and
out
pop
fcoml
ret
pop
enter
jg
or
cmp
test
mov
mov
sbb
cs
mov
or
in
dec
and
pop
cmpsb
jns
sbb
mov
mov
sub
stos
xchg
dec
fisubl
mov
divb
xor
dec
or
scas
pop
mov
fcmovbe
jae
jmp
subl
stos
out
aad
jmp
sti
and
or
clc
data16
cmp
pop
mov
stc
dec
repz
dec
lcall
sub
mov
pop
inc
push
add
or
pop
mov
xor
mov
pop
sbb
sarb
push
out
movsb
mov
test
bound
inc
dec
pop
xor
test
movsb
mov
scas
inc
outsb
mov
dec
sbb
das
mov
cmp
fstpl
shr
dec
or
cli
jne
add
adc
ret
pop
push
or
xchg
sbb
jecxz
out
lods
inc
push
adc
jae
je
ffreep
imul
loope
test
push
inc
sub
out
pop
jge
ds
cld
es
mov
and
or
and
mov
jl
push
add
in
mov
sub
mov
addb
mov
test
scas
rorl
sbb
inc
push
ret
fucomi
lahf
iret
idivl
jo
pusha
cltd
daa
cmpsb
cwtl
sbb
xchg
pusha
insl
xchg
pop
xchg
and
mov
xor
into
jo
aad
and
jne
adc
cs
pop
roll
add
stos
fildl
int3
ret
leave
lea
std
lret
push
sub
orl
ss
jo
unpcklps
pop
mov
cmpb
hlt
fsin
fsubp
inc
pop
sbb
mov
int3
fsubp
push
sbb
xchg
adc
adc
inc
ficoml
xchg
mov
pop
std
rorl
dec
xor
and
and
loop
pusha
push
lret
into
mov
xchg
adc
push
aaa
mov
int
push
je
cmp
add
fwait
cltd
je
out
test
pop
dec
mov
sbb
movsl
push
out
pop
mov
inc
lea
xor
dec
jecxz
mov
and
lods
and
movsb
xchg
jae
jg
cmc
pop
addr16
dec
rcrl
or
adc
add
sub
leave
addr16
aad
push
sbb
outsb
je
scas
or
repz
mov
sbb
jo
add
nop
daa
dec
inc
mov
popa
pop
test
xor
stc
clc
adc
cwtl
repnz
sub
cmp
cmpl
mov
mov
cmc
adcb
xchg
arpl
jecxz
push
movsl
lods
stc
jl
adcb
gs
and
cmpsl
test
xor
cmp
push
adc
outsl
adc
fsubrl
movsb
cmp
jo
inc
test
fldl
push
call
into
push
in
iret
cltd
push
hlt
inc
insb
fwait
les
aam
fidivrs
rcrb
insl
and
cmp
adc
dec
mov
aas
lea
and
rcrb
jb
mov
inc
sub
frstor
into
fnstcw
gs
and
aas
push
or
ret
and
add
adc
ss
push
stos
movsb
je
shr
in
iret
bound
sbb
and
sbb
jo
mov
roll
add
dec
insl
inc
push
add
lahf
fmull
pop
out
mov
or
push
stc
pop
xor
lock
into
push
popf
movsl
lea
int
cwtl
xchg
or
test
test
cmpsl
cli
lods
xor
push
dec
push
xor
mov
mov
pop
les
in
test
sbb
sub
ret
jle
or
mov
sub
cmpsl
add
push
push
inc
xor
jo
jle
stos
and
into
pop
or
ds
int3
shrb
fs
cmp
cmpsl
popf
sarl
movsb
clc
inc
out
cmp
loop
call
xchg
aaa
pop
mov
jae
test
mov
sbb
mov
rorl
in
leave
or
dec
fbld
push
jmp
jecxz
movsl
adc
ret
shlb
push
test
pop
add
jmp
lods
lcall
add
call
imul
shrl
pop
rcll
clc
dec
add
icebp
adc
sarl
pop
pop
loop
mov
add
sti
aaa
daa
loope
subb
push
rcll
test
add
xor
frstor
fwait
int
scas
xchg
cwtl
mov
push
sbb
decb
xchg
jne
rcrl
imul
sahf
mov
js
mov
or
adc
test
adc
pusha
xorb
adc
push
insl
cli
out
pop
sub
idiv
scas
int3
pop
repnz
sahf
dec
sub
out
psubusw
mov
adc
inc
imul
pop
cltd
cmp
pop
pop
fwait
mov
ja
arpl
sub
cwtl
sbbb
imul
mull
outsl
lret
in
dec
xchg
mov
jmp
test
repnz
js
inc
and
and
fstps
adc
loope
popa
xchg
ja
enter
jae
dec
sbb
pop
mov
dec
fiadds
test
movsl
mov
dec
mov
aam
mov
lea
jne
and
sahf
and
dec
pop
test
mov
pop
xchg
stos
and
lea
addr16
leave
ja
movl
insb
adc
inc
mov
jl
clc
push
js
push
xchg
jmp
cmpsl
pop
movsb
rorl
mov
test
adc
mov
loopne
clc
push
xor
and
mov
arpl
insb
push
addl
sbb
inc
ds
xchg
mov
push
push
sbb
sbb
pop
pop
pop
jno
loop
test
mov
inc
xor
mov
cmp
js
pushf
rorb
rcll
sar
sub
dec
push
dec
sub
cmc
aam
xchg
outsb
inc
jmp
mov
xchg
loopne
inc
pop
cli
in
jmp
ds
cmpl
and
movsb
stos
pop
fisubrs
ror
dec
mov
pushf
xchg
pop
xchg
pop
xor
mov
xor
sub
lods
dec
pop
mov
pop
inc
outsl
sbb
fisubrs
dec
andl
push
idivb
shl
out
sbb
add
mov
pop
into
sub
mov
sbb
push
xchg
xor
mov
aad
and
rcll
int
cmpsl
repnz
sub
xor
shl
sub
rorb
inc
call
or
xor
notl
es
dec
xchg
pop
xchg
scas
repnz
adcb
xchg
inc
popf
inc
icebp
add
jmp
push
dec
add
out
dec
mov
inc
pop
ret
mov
dec
pop
push
cmp
cld
add
jo
mov
inc
pop
mov
test
pop
stos
cld
fsub
aas
xor
cltd
sbb
add
pop
test
adc
call
dec
hlt
mov
cs
rcrl
into
mov
das
rorb
xor
fs
push
imul
jbe
cmp
test
dec
jl
inc
and
jmp
pop
loop
jne
cmp
jb
dec
mov
pop
call
sub
ret
jmp
and
sub
push
cmp
and
and
stc
in
and
das
and
push
mov
inc
fidivrs
pop
cmpsl
mov
shlb
inc
in
shl
inc
cmp
and
aaa
dec
jp
dec
inc
and
mov
bound
xchg
sarl
subl
mov
inc
popa
jb
and
sbb
jno
cmp
pop
imul
jb
sub
push
mov
cmovb
jo
fstps
pop
cmp
xor
cmp
cmp
imul
or
nop
or
decl
aas
aas
dec
ficomps
test
and
cmc
push
es
xchg
xor
pop
lret
cmp
lods
idiv
inc
pop
stc
jbe
call
je
data16
cmpsb
mov
or
and
dec
stc
cmp
ret
adc
out
xlat
jecxz
inc
addl
mov
cmp
adc
sbb
mov
adc
aaa
insl
pop
lods
add
push
xchg
add
fidivl
in
adc
cld
ss
xlat
rorl
scas
and
mov
rcll
nop
add
pop
xchg
or
aaa
xchg
and
ja
ret
push
mov
call
fldenv
rorl
test
scas
ds
pop
jbe
mov
cmp
scas
stc
les
pop
lahf
and
add
push
je
sub
lea
cmp
mov
test
mov
lods
cmp
scas
jge
insb
mov
ljmp
lcall
xchg
inc
fstpt
mov
fs
aaa
and
jecxz
fcomps
imul
enter
xorl
loop
addr16
icebp
insb
sub
daa
xor
into
data16
fistpl
adc
call
stc
arpl
xorl
dec
icebp
or
fs
cli
bound
adc
cld
in
dec
lcall
pop
jp
jmp
lret
inc
ret
jge
jg
cmp
insb
jecxz
leave
std
fwait
into
inc
pop
xchg
add
sub
aas
test
sarb
ljmp
ret
fldl2e
or
xchg
cltd
adc
es
loop
dec
adc
daa
movsb
add
lcall
iret
test
cmp
push
addr16
dec
xor
pop
push
adc
inc
cmovl
test
cwtl
adc
dec
cvtps2pd
nop
xchg
jns
movsb
add
pop
imul
inc
and
iret
pop
inc
out
adc
dec
push
pushf
jp
fdivl
int3
mov
mov
sub
shll
enter
or
dec
ljmp
push
outsb
fcomps
loopne
lock
test
dec
add
and
inc
adc
mov
lahf
les
xchg
and
push
mov
adc
pop
jbe
and
rcll
test
pop
outsb
inc
repz
push
loopne
or
dec
lea
sub
movsl
in
scas
lds
es
add
outsb
add
push
jb
testl
call
lods
pop
sub
subl
sti
stc
adc
jge
test
loopne
pop
arpl
repz
pop
push
sub
daa
mov
rcl
shlb
inc
pop
mov
mov
jno
push
gs
sbb
mov
loope
pop
xor
dec
pop
cltd
mov
and
and
out
adc
push
jbe
fdivrl
scas
mov
fcomps
fnstsw
xor
mov
mov
dec
notl
and
cmpsb
int
jbe
popf
mov
mov
out
sbb
jge
push
and
pop
or
push
lods
out
daa
jp
jne
xlat
dec
std
shl
bound
rolb
pop
das
aaa
addr16
in
pop
in
push
movsl
testb
ja
ror
popf
repz
lret
xchg
icebp
ror
popf
ljmp
or
jecxz
test
xchg
cmpsb
aas
sbb
iret
test
je
and
mov
arpl
mov
gs
push
mov
out
lods
mov
push
sub
fwait
rcr
push
es
sub
out
cwtl
sti
jmp
add
mov
mov
jle
pop
adc
enter
xchg
xor
sub
fbld
aaa
xor
imul
push
xchg
mov
sub
mov
push
iret
cmc
adc
cmp
mov
jle
push
in
mov
cwtl
jns
or
xchg
xor
decl
and
sbb
icebp
mov
add
xor
cmpsl
xchg
cmp
inc
jbe
orb
popf
ror
jo
repz
mov
popf
popf
push
push
jne
fwait
add
mov
dec
popf
fistpl
ja
inc
mov
popf
out
jnp
jbe
popf
outsb
xchg
or
ljmp
mov
or
xchg
nop
daa
pop
movsl
adc
shll
rcrb
jno
ss
sarb
fcmovnu
out
mov
mov
xchg
mov
sub
ds
shlb
lock
enterw
jg
in
mov
lds
adc
stos
jmp
dec
stos
movsb
mov
lret
push
jb
stos
aas
jbe
cmp
stos
bound
gs
jmp
cld
sbb
jb
add
gs
pop
push
mov
sbb
mov
sbb
sub
cmpsl
add
xchg
cltd
inc
pushf
jp
sub
repz
test
test
hlt
and
mov
push
adc
inc
ret
test
xchg
pusha
shlb
in
repz
js
xchg
inc
xchg
pop
clc
clc
sti
inc
and
xor
mov
push
stc
xor
sbbb
mov
in
cli
scas
rcrl
adc
mov
adc
icebp
out
xchg
sub
data16
in
fstpt
mov
leave
adc
nop
xor
loopne
jne
push
xchg
movsb
mov
xchg
cmp
mov
lods
repz
gs
movsl
jnp
and
call
aad
mov
pusha
scas
sub
cmp
pop
cmp
mov
loop
lods
cltd
bound
mov
pop
sub
dec
ds
jo
push
testl
sbb
sub
push
xor
inc
or
or
or
mov
lds
lahf
dec
outsb
ja
ror
repz
xor
popf
sti
mov
icebp
fs
jge
inc
dec
retw
insl
mov
cmpsb
mov
test
stos
test
std
cmp
mov
inc
js
mov
xchg
xchg
mov
es
jl
vdivss
out
out
mov
cltd
add
cmc
mov
shll
loop
std
ret
repnz
pop
sub
mov
int3
andb
and
mov
mov
mov
mov
adc
inc
fidivs
into
xchg
pop
movb
push
vpshab
outsl
fs
cmp
out
out
nop
push
mov
inc
inc
and
mov
and
cmp
inc
andl
js
fcompl
clc
in
jmp
adc
cltd
push
imul
in
xor
cmp
dec
sub
inc
out
xlat
xchg
repnz
xchg
out
mov
push
inc
mov
or
or
sub
dec
jno
sbb
mov
ljmp
sub
rcrl
push
jb
adc
pop
jae
ja
stos
outsb
mov
mov
xor
dec
subl
imulb
mov
xor
sub
int
adc
xor
rolb
sub
lahf
xchg
idivb
popf
dec
in
sub
dec
cmp
aam
dec
jne
xchg
adc
stc
repz
or
icebp
mov
jle
in
jmp
push
sbb
sbb
jbe
mov
mov
and
inc
shrl
fiadds
pop
pop
repnz
shrb
adc
int
out
enter
jae
notb
xor
rcl
cwtl
fldcw
push
les
cmp
loop
stos
mov
push
or
scas
inc
insl
mov
add
push
stos
incl
xchg
mov
push
das
mov
sub
scas
jae
adc
add
xchg
jae
loopne
sarl
test
mov
dec
dec
ljmp
cmp
sarb
sbb
outsb
dec
dec
adc
mov
adc
xchg
sahf
ret
jg
aam
pop
push
inc
dec
ljmp
in
in
les
arpl
push
and
jg
loop
lock
or
divb
addr16
outsb
mov
ror
jl
out
mov
lret
and
mov
dec
aaa
jle
adc
mov
mov
push
test
mov
scas
sbb
jnp
lcall
jmp
popf
lahf
inc
mov
mov
jg
ss
loope
loop
add
sub
test
enter
push
test
xchg
push
pusha
xlat
push
aam
les
or
mov
inc
push
jle
pop
arpl
iret
jne
lahf
mov
enter
xchg
sbb
jno
pop
pminub
jp
jo
xor
movsl
pop
jg
in
daa
popf
push
and
pop
push
mov
push
daa
push
ret
jns
jno
and
mov
jp
aas
push
adc
pop
xchg
mov
dec
lds
movsl
sbbb
or
nop
je
adc
xor
stos
cmpsb
cwtl
pop
dec
loope
loop
mov
mov
adc
lcall
int
std
shr
outsl
push
push
je
lret
mov
loope
add
and
aad
pop
cmp
rorl
movsl
es
jno
or
leave
loop
jae
dec
push
into
push
add
daa
pmaxsw
jno
lock
xchg
add
test
inc
ja
push
cmpsl
fs
pop
push
adc
add
push
sbbb
sub
sub
jbe
or
xor
jb
and
pop
jle
clc
adc
ljmp
out
xor
jae
into
std
sahf
jne
shl
stos
pop
pop
incl
nop
and
jne
mov
cmp
xlat
scas
cmpb
gs
dec
in
jns
lret
sbb
cwtl
xor
add
mov
xchg
and
js
cmpsb
mov
pop
inc
and
rcrb
pop
adc
mov
or
push
add
jno
or
roll
and
add
test
and
outsb
mov
test
or
aad
and
out
ljmp
lock
lock
add
jbe
mov
dec
imull
dec
sub
adc
sbb
mov
and
lret
jbe
repz
mov
mov
movsl
jb
insl
jno
incb
jne
mov
mov
aad
in
mov
add
mov
test
inc
inc
jge
jg
pop
pop
gs
es
pop
popf
xchg
sarb
inc
rclb
aam
cmp
xchg
xchg
push
cmp
mov
and
push
notb
and
lock
sahf
orb
ret
aam
popa
nop
sub
mov
dec
arpl
or
lcall
loop
mov
insl
pop
or
push
jp
push
cmp
aaa
outsb
cmpsb
repnz
adc
pop
in
pop
inc
mov
ja
gs
outsl
iret
push
push
notb
mov
jp
mov
int
out
gs
mov
sub
outsl
push
pop
syscall
mov
outsb
pusha
nop
leave
pop
mov
fnstsw
dec
pop
and
in
mov
push
loope
shrb
or
mul
mov
cs
inc
ret
and
add
jge
les
push
dec
and
sbb
int
fldl
sub
adc
jp
push
mov
sub
sahf
call
dec
xchg
mov
inc
xlat
mov
insb
test
ret
add
mov
jno
negb
jb
jmp
and
sub
cmp
jge
and
stos
mov
out
pop
mov
dec
insl
or
and
xor
xchg
mov
push
mov
movsb
or
lods
dec
push
xor
sbb
mov
loop
data16
push
fbstp
aaa
ds
les
cmp
leave
aad
or
insl
int3
jb
sarl
cltd
pop
psubd
insb
leave
out
pop
xchg
mov
in
dec
sbb
ljmp
cmp
jb
insl
mov
sub
lea
push
cmpsl
pop
sub
mov
jns
in
mov
clc
xor
hlt
movsb
pop
mov
lsl
push
cmp
out
xor
andl
inc
fisubrl
cmpsb
dec
cmpl
lock
pop
nop
jb
mov
hlt
mov
and
repnz
hlt
adc
and
jo
pusha
aas
lret
cmp
jb
sti
shll
xor
int
mov
nop
shl
sahf
ljmp
imul
std
pop
test
add
pop
lods
ds
jae
icebp
xchg
and
fdivl
push
sbb
out
out
das
jg
mov
enter
add
jge
cmpsb
jmp
xorb
cltd
dec
ljmp
std
stos
xchg
jmp
xchg
insb
lret
std
cmp
das
pop
add
mov
inc
jmp
stc
and
rorl
inc
mov
dec
inc
jne
adc
pop
insl
inc
in
mov
or
test
imul
movsb
aas
cmp
mov
mov
loope
xor
mov
add
mov
stc
cmp
jp
cmpsb
jge
sub
inc
mov
jle
ret
in
add
insb
mov
cltd
jno
test
mov
in
cmpsb
fnsave
pop
push
and
inc
scas
sbb
sbb
push
dec
mov
jl
loop
mov
fcomp
subb
cld
mov
pop
add
adc
jb
cmp
xchg
fsubrp
rorb
adc
pop
scas
hlt
je
ret
mov
mov
hlt
hlt
aas
sbb
mov
das
in
mov
lds
mov
pop
mov
and
mov
call
js
mov
div
negb
and
inc
sbb
stc
push
mov
clc
aas
shrb
adc
sub
shrb
lahf
loopne
dec
incl
repnz
push
push
frstor
mov
pusha
lock
dec
andl
jmp
mov
jecxz
out
and
adc
repz
mov
pop
mov
gs
arpl
cli
into
or
push
or
push
fstpl
in
inc
ret
inc
mov
mov
sbb
in
scas
jmp
and
lds
mov
aam
jb
test
dec
mov
and
frstor
pop
je
xchg
mov
testb
jmp
mov
mov
push
mov
jp
decb
mov
js
pop
pop
or
dec
jns
bsf
lock
adcl
pop
or
subl
dec
inc
sbb
je
cwtl
sub
test
notb
xor
xchg
xor
pop
in
mov
add
lret
out
mov
daa
push
outsb
xchg
jae
jbe
sbb
pop
mov
test
or
stos
pushf
add
push
and
mov
xchg
jb
lret
popa
lock
mov
pop
push
cmpsb
addr16
cmc
les
pop
pop
js
or
xor
insb
sahf
push
sub
jge
aad
dec
popa
jp
mov
xor
mov
ss
repnz
mov
outsl
sbb
pop
lret
cmp
outsb
mov
movsl
push
loope
pminub
nop
in
aad
mov
les
mov
cmc
push
fidivrl
xorl
aas
scas
and
mov
and
mov
lea
jb
insb
out
sahf
push
add
mov
add
fcmovnbe
mov
xchg
push
stos
ss
int
data16
jle
or
pop
dec
mov
ja
aaa
dec
xor
jae
jecxz
push
test
es
popa
nop
imul
std
sbb
insl
scas
dec
lret
mov
orb
adcl
jbe
outsl
xor
lods
popf
loop
push
jmp
mov
mov
push
getsec
xchg
stc
mov
mov
sub
push
out
mov
pop
fldcw
arpl
pop
jge
nopl
mov
hlt
aas
sbb
nop
shr
lods
or
cmp
mov
sub
pop
cmp
mov
mov
fs
fistps
scas
popf
fnstcw
jne
cmp
add
jl
xchg
mov
pop
mov
mov
and
ret
cmp
sub
or
jecxz
mov
and
push
jbe
cmc
movsbl
shlb
sub
or
cltd
lahf
jg
dec
jge
sbb
movsl
mov
std
mov
fiaddl
fisubrs
jae
mov
je
in
dec
push
popf
mov
pop
insb
xchg
cmp
lods
mov
jae
iret
jmp
sar
jnp
jb
pop
loope
jns
sbb
adc
int
int
xchg
sbb
sub
out
insl
adc
cld
xor
rorb
push
test
mov
icebp
ret
sub
dec
push
mov
sub
dec
inc
jge
jbe
jmp
push
dec
or
into
loope
dec
pop
loop
and
dec
xor
mov
into
test
sub
push
repz
push
mov
xlat
pusha
mov
sbb
jge
xchg
xchg
adc
sub
push
add
int3
jl
xor
bound
sbb
xor
jp
dec
inc
xchg
jmp
cmp
mov
or
stos
pushf
lock
inc
jg
sbb
in
sbb
sub
jbe
sbb
fwait
cmpsb
jle
aas
loopne
dec
jae
push
divb
or
test
lods
pusha
mov
mov
insb
cmpsb
mov
loop
xor
lock
cmp
sub
mov
ds
jo
lahf
nop
sub
fsubs
int3
movsb
push
jns
fildll
mov
ljmp
movsb
enter
xor
insb
sbb
cmp
xor
ret
push
lret
pcmpgtd
mov
dec
ficomps
pop
lret
push
imul
or
xchg
fwait
mov
outsl
jo
jns
mov
loope
lock
jle
clc
inc
jnp
sti
scas
or
or
nop
inc
xlat
ljmp
mov
sbbl
rcl
and
sbb
cmp
andb
xlat
out
lds
add
fbld
fisttpll
xchg
fdiv
sti
fimuls
mov
pop
mov
icebp
mov
cmp
push
mov
jecxz
out
sub
data16
lock
push
push
mov
mov
das
pusha
mov
scas
push
inc
xchg
jbe
adc
jp
mov
test
mov
fxch
test
cmp
mov
mov
mov
or
inc
cltd
mov
add
add
loope
scas
jge
fistpll
sub
jo
lods
aam
sub
cmc
fstl
call
out
adc
test
add
out
ds
hlt
dec
xchg
rcrb
cld
stc
in
cltd
pop
hlt
das
push
out
mov
push
cmpsl
nop
lock
cs
addb
ud0
jo
insl
jmp
push
xor
xchg
rorl
test
inc
push
xchg
pop
repz
and
cmp
mov
fcoml
testl
loopne
jge
sub
fistl
xchg
xchg
ror
out
jp
insl
int
sbbb
movsb
add
jge
jnp
dec
add
pop
pop
outsl
mov
jbe
pusha
and
xor
ret
fwait
push
int3
dec
out
dec
aaa
inc
sar
movsl
outsb
arpl
push
decl
mov
pop
cwtl
push
adc
lret
pop
cld
loop
adc
adcb
jl
push
inc
xchg
rcrl
icebp
sti
sub
fcoms
pop
and
inc
jo
fwait
lods
or
push
int3
mov
mov
jmp
mov
sbb
repnz
add
in
mov
cltd
movsb
arpl
sub
fs
lret
sub
jl
ss
lds
popa
push
nop
and
inc
stc
clc
into
imul
ss
sarl
xchg
sub
dec
jne
mov
adc
push
sbb
sbb
scas
adc
lea
add
sahf
xchg
cmpsl
dec
scas
add
mov
cltd
iret
push
push
out
xor
into
push
add
xor
xchg
sub
pop
out
push
mov
cld
mov
and
jmp
adc
xorl
cmp
push
lret
sti
mov
std
mov
loop
mov
jg
mov
ljmp
jle
xchg
sub
call
arpl
cmpsl
dec
les
das
inc
stos
dec
popf
mov
pop
neg
adc
xorb
dec
gs
sbb
jle
imul
std
pop
cmp
add
add
out
cmpsl
dec
out
rol
xchg
jle
sti
ret
add
in
fistpl
sahf
lea
xchg
inc
jge
fstpl
sahf
aam
mov
sbb
insb
cli
inc
sbb
aaa
aam
inc
cmp
lods
mov
xlat
ja
mov
mov
fistpl
inc
in
js
ds
adc
jp
adc
in
rcr
bound
xor
pop
popf
rorb
dec
test
out
in
pop
cld
pop
andps
sbb
sbb
aas
popa
repz
test
repz
lcall
adc
sbb
aas
out
push
jno
or
js
ficomps
test
sub
insb
sbb
int3
pusha
and
movsb
int
call
int
cwtl
out
outsl
push
pushf
cmp
push
cmp
xchg
movsb
adc
sub
lret
mov
or
cmp
imul
pop
dec
call
adc
adc
or
aas
shll
jne
xchg
push
xor
cs
jb
push
mov
in
cmp
inc
test
and
cli
fsubrl
inc
xchg
pop
mov
inc
loope
pop
dec
push
jmp
pop
add
cmp
adcl
and
fildl
or
lea
dec
mov
pop
shl
push
call
dec
mov
jnp
fnstsw
xorl
adc
push
xor
mov
xor
and
cltd
in
inc
push
inc
and
ljmp
in
ret
mov
adc
fildl
pop
out
xchg
push
lock
or
sub
cmp
sbb
xchg
pusha
test
pushf
test
fmull
mov
sub
push
inc
mov
rolb
xor
or
adc
es
adc
dec
sbb
mov
loopne
inc
rcr
xchg
or
test
nop
cld
cmpb
push
in
mov
lods
xchg
push
js
ficomps
cli
popa
shl
dec
vprotb
idivl
test
cmp
outsb
xchg
mov
sub
push
mov
outsb
int
sahf
mov
dec
xchg
scas
push
dec
mov
movsb
das
cmp
lret
cmc
popa
sti
shrb
sub
mov
jge
fs
in
push
rol
aam
cmp
add
sub
shrb
out
sbbb
pop
cmpsl
xchg
sub
mov
imul
xor
cmc
gs
xchg
xchg
rcrl
xor
sar
inc
lcall
data16
inc
frstor
lods
jecxz
jl
rcrl
push
ja
xor
xor
push
setns
add
push
mov
into
lahf
sbb
jg
cmpsl
mov
and
mov
fnstenv
mov
inc
je
hlt
cmp
jnp
sub
cmpsb
pop
lea
dec
cld
and
xor
inc
insb
cmp
jo
mov
loop
stos
mov
mov
sub
mov
aaa
dec
jle
scas
into
jnp
dec
xor
dec
daa
sbb
lahf
push
jbe
mov
dec
xor
fnsave
mov
andl
pop
aad
jne
dec
movsb
mov
pop
aam
insl
out
sub
out
popf
lahf
mov
fwait
scas
adc
leave
jp
adc
jne
mov
lea
jnp
dec
jmp
cwtl
pop
pop
mov
push
sbb
into
popf
arpl
cmpsb
cmp
inc
push
pop
xor
push
mov
xchg
arpl
mov
jb
sbb
xor
jae
cmp
lods
and
mov
test
into
mov
cmp
sbb
in
and
mov
stos
jmp
xchg
sbb
sub
imul
cmp
jne
lret
mov
gs
pop
inc
jecxz
rcrb
movsl
fcomi
rolb
inc
xlat
lcall
dec
lock
loopne
push
or
ds
jle
stc
add
push
cmp
cmp
inc
xlat
dec
inc
daa
jecxz
xchg
lods
orb
push
push
jge
pop
jo
pop
xlat
mov
mov
sub
jg
add
cmpb
cwtl
mov
cld
imul
insl
sub
sub
int
adc
add
loop
xor
mov
mov
mov
sarl
ss
cwtl
mov
in
xchg
daa
outsb
inc
jne
mov
out
sbb
ss
lds
adc
jno
call
loop
inc
xchg
movsl
mov
lock
iret
loopne
and
lea
xchg
mov
enter
orl
mov
add
sub
aas
xchg
mov
dec
test
mov
outsl
aaa
cli
andl
cmp
adcl
inc
xor
inc
je
stos
je
insb
mov
mov
pop
dec
jne
repnz
inc
mov
xlat
jns
ja
or
pusha
or
scas
mov
pop
mov
insb
cmpsl
mov
fdivrl
mov
sbb
or
sub
or
adc
mov
adc
or
push
out
lcall
jns
out
sub
ss
push
arpl
fnsave
adc
and
jne
jecxz
push
push
and
pop
in
lcall
mov
sub
inc
loope
stc
filds
mov
mov
and
clc
loop
out
or
mov
out
pop
subl
lock
ja
pop
xor
into
xchg
loop
dec
lcall
fists
cld
ret
sub
popf
sbb
and
jmp
xor
push
test
and
icebp
fwait
add
adc
jbe
sbb
mov
mov
inc
inc
insb
nop
cli
iret
sti
ljmp
push
xchg
inc
lret
pop
ljmp
mov
rcr
sub
movsl
gs
jmp
movsl
pop
pop
jp
lods
orl
icebp
jns
pop
shrb
adc
inc
mov
mov
imul
sti
lahf
fwait
sbb
jecxz
movsb
call
neg
nop
jae
pop
int3
sub
inc
jnp
rolb
stos
xchg
test
jae
ljmp
and
adc
and
adc
mov
xor
ljmp
mov
or
mov
dec
dec
cmp
inc
lods
or
movsb
jne
mov
clc
sbb
dec
push
stos
pop
or
mov
mov
stos
pushf
aad
stos
ja
push
pop
and
testb
cmp
bound
mov
adc
xchg
inc
insb
cmp
cmp
scas
push
xchg
aas
clc
out
fprem1
inc
add
xchg
jg
add
outsb
push
das
adc
dec
inc
and
dec
adc
and
mov
sbb
les
addr16
andl
xchg
das
lret
fstps
adc
mov
sub
cmp
ret
notl
sub
jp
mov
push
adc
cli
jl
addr16
mov
repz
xor
inc
add
clc
add
mov
mov
hlt
out
daa
pop
or
adc
xchg
xchg
pop
mov
iret
mov
cmp
insb
adc
inc
jnp
mov
mov
pop
sbb
sub
scas
mov
scas
je
xchg
jno
fcoms
adc
xor
addb
mov
xchg
lods
inc
mov
dec
xchg
stos
mov
sbbl
mov
fstl
inc
xchg
loopne
rclb
je
loope
cmpsb
ljmp
pop
xchg
pop
sub
pop
mov
cmp
addb
jmp
mov
ret
adc
mov
or
pusha
adc
pop
movsl
flds
inc
arpl
stos
mov
jge
dec
and
mov
add
repz
imul
mov
dec
sbb
cli
mov
push
icebp
imul
fcmovb
sub
xchg
les
push
xchg
orl
pop
add
push
int
fs
sub
into
ds
jp
stos
stos
cld
ret
dec
shll
dec
mov
lahf
pop
repnz
sar
pusha
jge
lods
push
mov
outsl
aas
mov
iret
ja
es
sub
insl
sub
loope
xor
icebp
xchg
lea
gs
push
dec
or
cli
lods
adc
shl
mov
push
sub
pop
bound
pop
scas
into
xchg
and
or
repnz
or
fwait
rorl
sub
dec
pop
xchg
dec
in
pusha
mov
in
lahf
in
sub
test
push
cmp
subl
in
les
pushf
cmp
test
rorb
ret
xor
push
xchg
out
jle
push
loop
movsb
jp
adc
into
repz
test
adcb
or
and
jne,pt
jmp
lds
aaa
and
loopne
push
pop
out
ror
sub
push
and
inc
mov
pop
jne
cmp
mov
adc
out
ret
push
icebp
testb
mov
or
aas
aam
pushl
aad
sub
pop
dec
std
fmulp
ret
cmpsl
and
ja
pop
pusha
pop
mov
jp
mov
imul
cli
push
sbb
pop
lock
sub
xchg
mov
das
pavgw
cli
test
lods
aas
xor
pop
pop
std
add
loopne
aaa
fists
add
sub
and
stos
mov
movsl
cmp
and
lea
dec
in
mov
gs
xor
lcall
test
inc
loope
inc
out
add
pop
cmp
pop
int
adc
inc
mov
test
and
icebp
repz
nopl
push
mov
add
xor
adc
lahf
int
jecxz
cmp
pop
out
jg
out
outsl
pusha
lods
dec
addr16
adc
adc
cmpsl
jle
scas
loopne
cli
les
lahf
sahf
jne
or
xchg
into
ja
popa
cli
lea
cltd
add
add
mov
cltd
jne
jae
xchg
dec
sub
jno
pusha
mov
iret
pop
mov
movsl
notl
cli
mov
rcll
pop
jge
xor
iret
gs
in
cmp
lods
mov
cmp
xor
nop
repnz
pop
arpl
nop
mov
mov
in
popa
pop
inc
fidivs
lds
or
addr16
stc
test
mov
and
pop
loopne
cmp
scas
mov
lds
jg
scas
js
ret
xchg
js
scas
aas
mov
lds
insl
mov
in
lret
fimuls
fmull
xchg
add
and
pop
insl
addb
gs
lret
stos
sub
jmp
enter
daa
push
repnz
std
pop
mov
sub
push
ja
leave
push
movsl
out
or
xchg
sbb
adc
aaa
adc
loope
lea
and
sub
adc
fiadds
pop
jbe
shll
leave
mov
jo
pusha
xchg
xor
mov
in
into
fcmovnbe
inc
imul
mov
mov
mov
sub
out
mov
mov
push
test
outsl
xchg
xchg
aas
sub
jns
repnz
scas
fidivrs
push
cli
and
test
int3
fstl
mov
jle
sub
lods
test
adc
mov
insb
xor
and
pushf
ret
mov
nop
cs
lahf
adc
outsl
and
mov
test
fsub
idivl
rcrl
into
sbb
adc
shlb
cmc
insl
aas
in
test
mov
vpmaddwd
test
fidivrs
push
and
out
adc
iret
cs
mov
sarb
mov
jno
iret
xchg
out
scas
fisttpll
add
jno
push
pop
movsb
mov
hlt
mov
add
insb
fmuls
mov
sbb
add
and
clc
sbb
sbb
xor
mov
sti
cmp
notb
leave
jo
and
lea
dec
xor
jne
fbld
stc
gs
jge
idivl
jg
sub
mov
mov
std
dec
mov
and
sub
pusha
jmp
in
incb
mov
fisubs
dec
jno
enter
pop
push
xor
fldenv
pop
aad
in
dec
rcrl
shrl
dec
push
stos
push
shl
ja
into
adc
push
outsb
or
mov
jb,pn
scas
ret
stos
sub
lcall
dec
lods
jp
and
fldcw
rorb
scas
popa
xchg
sahf
or
flds
xor
sti
mov
pop
aaa
int
dec
rcll
dec
push
xor
or
ja
clc
hlt
or
in
les
mov
pusha
in
push
icebp
lds
subps
ds
push
aam
fisubrl
loope
sub
shll
je
xorb
rol
clc
push
lods
ljmp
cmp
ds
push
lret
movsl
addr16
pop
pusha
inc
or
jns
cmp
insb
sahf
out
je
xchg
scas
mov
sbb
cmp
daa
test
push
push
lcall
imul
mov
sahf
pusha
dec
inc
mov
inc
pushf
mov
push
add
addl
or
adc
mov
ja
push
lret
fwait
jbe
ss
cmp
fadds
fisubrs
cmp
lds
xlat
loopne
loopne
xchg
nop
movsl
xchg
test
or
xor
sub
mov
es
mov
or
push
sarb
or
adcb
jb
add
mov
push
sub
or
mov
insl
mov
imul
add
fdivrl
shrl
add
in
int3
rcr
test
lahf
dec
mov
inc
loope
pop
or
cltd
fimuls
sbb
dec
int3
xchg
stos
mov
test
stos
push
fimull
hlt
pop
sarl
sbbb
cmpsb
inc
inc
pop
cmp
inc
shrl
xor
addb
push
adc
and
fidivs
hlt
sbb
repz
fldl
scas
subl
addb
iret
xchg
pop
sbb
and
ljmp
dec
aas
mov
imul
aad
notl
sbb
lret
adc
insb
push
and
cmp
divb
dec
add
sbb
mov
sbb
cmp
sub
mov
jns
int3
add
mov
imul
mov
mov
out
inc
rorl
or
dec
ror
and
adc
int
out
fs
sbbb
push
push
xor
xor
ror
jno
or
in
outsl
bound
stos
add
sti
or
movb
popa
sbb
mov
movsb
ja
mov
pop
insb
mov
jg
ret
sti
dec
pushl
repnz
out
mov
notl
nop
jo
ljmp
mov
or
adc
adcl
pusha
xor
cmp
and
arpl
jmp
dec
sbb
rolb
dec
inc
jo
mov
and
lock
sti
imul
jmp
mov
push
mov
fcoms
pop
xchg
dec
jae
dec
ljmp
ror
mov
leave
sahf
fwait
testb
xchg
dec
sub
cwtl
gs
repnz
cmp
mov
add
fmuls
loopne
xorb
dec
repz
sarb
or
jl
pop
das
inc
pop
mov
xor
mov
pop
testb
sti
movsl
and
mov
int3
aas
fcomi
flds
test
xchg
fdivs
xor
pop
sbb
outsb
dec
testb
outsl
jno
jo
jle
mov
nop
jl
mov
scas
ds
sub
xor
cmp
push
push
mov
nop
xor
test
and
aas
add
popf
dec
sbb
nop
outsb
or
or
jmp
jo
je
inc
scas
mov
arpl
xchg
call
add
sub
xchg
push
sbb
lds
push
dec
and
xchg
dec
arpl
add
int3
lods
or
clc
sub
dec
call
js
mov
inc
mov
dec
movb
sahf
lock
cmp
jp
ljmp
sub
aam
push
leave
xor
mov
pusha
jo
lret
dec
xor
stos
mov
punpckhwd
adc
cmp
paddusb
mov
add
pop
ret
push
arpl
pop
adc
mov
xchg
outsl
mov
mov
test
lahf
add
push
aam
dec
addl
jg
xor
bound
icebp
or
enter
mov
mov
jecxz
aaa
mov
and
lcall
mov
xchg
jl
mov
dec
mov
dec
jno
sub
adc
mov
daa
xlat
jmp
scas
and
push
sbb
frstor
imul
repz
jg
jl
shll
les
jecxz
jnp
fisttps
popa
pusha
fs
cmpsb
das
movl
pushf
rorl
sbb
inc
sarb
das
mov
arpl
pop
fisttpl
push
das
mov
daa
inc
insl
jl
xlat
idiv
int3
adc
push
sbb
lods
and
pop
mov
jg
clc
dec
and
fcoml
sub
inc
jnp
mov
add
sub
push
mov
loop
lods
sub
lcall
inc
loope
loope
xchg
cmc
xchg
stc
lods
jb
jg
popa
fcompl
mul
hlt
sbb
cli
mov
cli
mov
adc
out
lret
push
fistpl
or
es
fwait
dec
cs
std
xor
mov
fs
ljmp
andl
xlat
orb
and
ret
scas
ret
scas
enter
popa
and
mov
movsl
leave
sbb
and
mov
loopne
inc
out
cmpsb
push
stos
nop
xchg
xchg
test
push
push
gs
xlat
sbb
add
cs
dec
cmp
push
or
mov
inc
jle
dec
sub
pop
add
add
inc
imul
aad
pop
xor
cmp
jp
adc
or
lret
push
inc
sub
mov
out
mov
cmp
or
mov
lock
int
in
out
out
inc
out
aad
imul
xchg
inc
jg
add
sbb
xor
add
sub
in
arpl
or
fistpll
jbe
jp
adc
test
jbe
dec
cli
dec
test
pushf
push
mov
mov
pop
mov
cmp
in
notb
or
out
arpl
pop
fpatan
aas
enter
ja
fstps
jb
jp
lods
addr16
mov
movsb
xchg
fldenv
push
sti
rorb
push
sub
pop
nop
lcall
inc
jp
bound
add
pushf
mov
adc
lret
and
mov
sub
dec
inc
jno
loopne
pop
pop
mov
adc
mov
call
sub
rorl
mov
lret
sbb
add
cmc
mov
pop
leave
jl
data16
push
popa
std
js
dec
cmpsl
xor
sub
subl
pop
sub
fwait
sahf
mov
adc
or
inc
shr
cli
clc
aas
mov
fldcw
or
jbe
xor
cmc
lea
jmp
lahf
bound
sub
jo
ja
push
cwtl
add
outsl
repnz
sbb
fimuls
jg
mov
bound
out
jmp
into
dec
je
mov
jl
sub
mov
dec
int3
int3
mov
pop
mov
or
sbb
mov
in
cmc
into
and
sub
lahf
test
stc
pop
mov
imul
cmp
outsb
call
repz
xchg
jl
adc
into
pop
repnz
shlb
addr16
and
mov
cmp
add
lret
nop
stc
out
pushf
les
cmpl
dec
push
mov
icebp
jbe
add
mov
mov
mov
das
out
xlat
cmpb
enter
adc
test
mov
enter
cwtl
add
imul
jg
push
cmp
xchg
xlat
ds
stc
pop
add
ljmp
mov
jne
cli
xor
into
or
stos
loop
pop
mov
cmpsl
add
pop
and
call
pop
bound
lods
lods
lock
xor
stos
repnz
push
push
or
mov
lods
in
or
loopne
mov
cmp
pop
in
jno
aad
ja
imul
scas
inc
jns
sahf
loop
pop
and
dec
test
std
xchg
loop
inc
dec
mov
jns
sbb
fbstp
out
popf
cld
jmp
loopne
clc
test
jns
sbb
adc
xor
scas
cltd
pop
outsb
adc
imul
imull
sub
push
mov
loop
stos
dec
xor
pop
test
ljmp
pusha
inc
ret
push
cmpsb
adc
jmp
in
dec
add
and
lock
ficoml
inc
jns
icebp
int3
fs
leave
mov
les
subl
call
leave
xlat
xchg
adcb
cmp
lods
mov
stos
xchg
push
aam
mov
insb
ret
mov
inc
iret
movl
gs
loop
out
pop
pop
je
out
movsl
cmpl
daa
mov
cmp
inc
imul
push
cli
inc
add
inc
ss
jae
fwait
js
dec
inc
enter
and
pop
out
mov
xchg
or
clc
push
push
dec
jbe
movsb
mov
std
sub
push
xor
add
push
popf
adc
jge
sub
pop
inc
mov
mov
jecxz
ljmp
pop
sub
ffree
js
sub
in
mov
insw
jae
add
dec
lcall
xchg
push
inc
or
movb
sahf
jmp
fmul
inc
in
mov
cmpsl
shll
xchg
test
outsb
shrl
fadds
or
ds
mov
std
sbbl
fsubrl
mov
mov
shll
xor
popa
repnz
cmp
imul
cmpsl
je
mov
sbb
data16
stc
in
int3
mov
lods
mov
push
loope
jo
sub
les
neg
inc
test
xorl
stos
sbb
or
out
loopne
xchg
add
or
es
pushf
cmc
cltd
clc
cmp
and
aaa
fst
add
lcall
inc
and
xchg
xor
cmp
out
mov
enter
and
repz
lods
cmpsl
cmp
cmp
push
jmp
aam
aaa
shlb
cmc
aaa
xor
lret
fnstcw
dec
jns
scas
cwtl
pop
in
jmp
stc
mov
stc
xchg
cmp
adc
stos
insl
mov
movsl
jae
mov
pop
dec
xor
fs
mov
stos
mov
jmp
cmpsl
jge
cmc
test
sbb
xor
fists
arpl
sub
popf
fistpll
lret
add
or
lret
push
mov
push
mov
adc
scas
lods
mov
pop
jmp
cmpsb
lock
iret
in
ret
push
in
sub
lds
mov
mov
shll
xor
jns
popf
push
rolb
xchg
xlat
int
inc
jg
outsl
dec
and
jno
outsl
fisubl
jb
in
cmp
inc
ret
jbe
out
les
mov
daa
xor
fbstp
jmp
fcompl
pop
rorb
sbbl
scas
out
pop
cwtl
sub
mov
lds
insb
cmpsb
out
add
xorb
ja
sub
aam
pop
adc
sub
cld
cmp
cld
dec
movsb
sub
adc
mov
dec
jb
push
push
imul
jmp
scas
jae
fildll
iret
imull
push
dec
cmpsl
stos
out
xchg
inc
lret
insb
push
mov
jge
ror
aad
aas
jle
adc
mov
ret
inc
fsubrl
mov
xchg
cmc
mov
mov
dec
push
sahf
data16
push
push
into
sub
adc
addl
inc
outsb
mov
add
and
add
mov
and
dec
jg
imul
xor
xchg
cmp
int3
fmull
cmp
das
and
dec
mov
addl
dec
je
mov
mov
dec
fstpt
sub
leave
jns
scas
int3
mov
inc
and
mov
loopne
adc
inc
jae
inc
cmpsb
pop
rcrl
push
aam
cmp
push
test
jge
add
mov
out
sub
test
in
insl
arpl
mov
outsl
shl
and
fdivrl
jbe
divb
mov
mov
fdivrs
int3
ss
rol
inc
jo
jo
cmp
sbb
test
cld
push
jbe
cmpsb
test
mov
cmp
dec
jns
in
jno
gs
mov
jns
xchg
mov
jl
dec
leave
or
xchg
and
xchg
lock
out
or
test
xchg
xchg
in
pushl
add
mov
mov
test
lods
pop
sbb
data16
fistpl
add
test
adc
mov
lods
mov
dec
or
loopne
xchg
hlt
add
or
bnd
cmp
adc
pop
mov
push
cld
ud0
cltd
insb
mov
ror
movsl
ds
shlb
push
popf
das
loope
push
ljmp
orl
fcompl
xchg
mov
mov
cwtl
loope
mov
cmp
loop
in
filds
jb
cld
mov
mov
xor
pop
xchg
xchg
cmpsl
stc
mov
ret
popf
call
outsb
int
icebp
inc
mov
lahf
dec
xor
insb
cmc
call
das
jne
fimuls
jmp
push
push
push
sub
and
test
fstpl
dec
ss
xchg
in
inc
push
cltd
xchg
xchg
out
hlt
jns
ret
add
mov
mov
adc
mov
mov
mov
push
fmuls
in
mov
xor
movsb
dec
inc
jle
sbb
mov
sbb
pop
stos
dec
xlat
loopne
cwtl
lods
cs
lret
mov
out
dec
mov
sbb
shrl
daa
notb
pop
push
scas
xchg
gs
popf
pop
add
xchg
inc
scas
lods
scas
sbb
mov
push
fadd
std
pop
inc
idivl
aad
int3
icebp
outsb
fwait
pusha
insl
xor
ret
xchg
jo
jo
jge
mov
sub
pop
lcall
mov
or
hlt
pop
xor
int3
jle
fwait
push
fcmovne
push
push
add
add
mov
jb
outsb
push
scas
shl
mov
sbb
dec
and
vpmuludq
jl
ret
in
mov
push
test
test
inc
rorb
gs
or
or
dec
mov
lret
and
pop
xor
push
dec
fisttpll
movsl
pop
mov
scas
jae
add
push
test
and
not
cmp
test
push
imul
in
and
mov
shlb
aas
popa
adc
mov
push
sahf
mov
dec
call
adc
sbbl
shll
pushf
push
in
jle
nop
mov
insl
in
andl
mov
nop
test
pop
dec
and
inc
push
mov
jecxz
adcb
adc
stos
icebp
std
gs
popf
adc
ja
or
test
or
push
sbb
mov
hlt
lret
test
xchg
addb
xchg
int3
jae
dec
mov
pop
xchg
fldt
mov
pop
or
jnp
pop
ja
mov
cltd
stc
addr16
or
fldt
clc
jo
int
cmp
mov
or
pusha
stc
arpl
or
push
push
inc
or
ss
mov
adc
push
pop
cmc
or
test
push
xor
and
xor
inc
sub
dec
mov
jg
mov
dec
fbld
push
fwait
ret
fdecstp
pop
lods
iret
xor
mov
cltd
sub
loope
cmp
lahf
mov
mov
imul
xor
scas
and
sbb
or
push
jnp
sub
idivl
push
xor
in
or
in
xlat
addb
adc
iret
push
inc
out
cmp
xor
pop
in
dec
lds
mov
xor
sti
mov
loopne
outsb
daa
or
imul
push
negl
enter
rcr
cwtl
pop
xor
aaa
andb
cwtl
decb
popa
rcrl
leave
adc
sbb
in
ljmp
xchg
add
test
ja
jbe
stos
or
ja
xor
nop
dec
add
push
add
mov
dec
xor
sub
xrelease
lock
testb
lods
rol
bound
pop
inc
hlt
or
push
xchg
repnz
xchg
in
or
mov
test
pusha
sbb
xchg
adc
out
das
jmp
addr16
mov
adc
sub
aad
sar
add
push
inc
mov
pop
movsb
call
dec
orb
scas
and
aas
mov
ret
jne
push
outsb
mov
jmp
iret
lock
std
cmp
bound
pop
mov
pusha
add
jns
jne
cmp
int
lods
out
sub
or
mov
aad
push
fistpll
jmp
iret
mov
or
rorb
aaa
jo
push
jb
ljmp
enter
pop
jo
int
mov
mov
inc
in
cmp
xor
add
out
adc
or
adcl
dec
sbb
stos
dec
and
pop
cmp
dec
push
adc
jg
push
imul
xchg
pcmpgtw
mov
repz
push
fldenv
dec
inc
sub
ja
int
mov
es
mov
push
inc
or
daa
inc
ljmp
sub
ret
cmp
test
out
ret
push
dec
das
pop
mov
testb
mov
mov
fnstcw
out
test
insl
sub
jmp
lret
mov
movsb
push
or
add
lock
cmpsl
insl
in
fiaddl
fs
pop
inc
cmp
lds
bound
cmp
push
mov
cmc
ja
stc
dec
ret
push
aas
pop
add
or
adc
fidivl
rorl
mov
testl
dec
adc
jbe
and
xor
pop
cmp
movsl
call
arpl
in
mov
mov
inc
sahf
xchg
xor
or
xor
cmp
loope
lods
xor
fs
pop
adc
loope
cltd
dec
add
or
sbb
cmp
push
pop
add
ljmp
push
mov
fimuls
inc
adc
movsb
sub
ds
movsb
mov
inc
adc
mov
sub
dec
cld
fsts
mov
clc
mov
inc
mov
xchg
pop
loope
cmc
movl
les
rcrl
ret
sub
inc
out
sar
dec
addr16
mov
mov
loop
mov
jmp
lds
movsb
mov
jle
lret
jecxz
sti
xor
jg
mov
out
sarb
mov
xchg
mov
dec
nop
mov
inc
shl
mov
mov
mov
pandn
lds
fs
sub
std
cli
fwait
test
mov
cltd
test
out
push
add
xor
inc
in
mov
fidivrl
test
mov
fcoml
ljmp
jb
lds
insl
outsb
pop
cmpsl
pop
pop
icebp
sbb
test
pusha
rorl
mov
mov
hlt
adc
cli
adc
cmp
or
int
push
cld
mov
jge
test
sbb
lahf
dec
jae
xchg
lahf
mov
or
fldcw
int
and
in
push
gs
aas
xchg
dec
popa
cmpsl
shl
dec
and
dec
dec
xlat
jecxz
cmpsl
scas
inc
adc
inc
sub
int
addr16
sbb
iret
outsl
popf
adc
xchg
loope
popl
insb
movsb
cmc
fsubl
lds
ss
out
pop
or
mov
iret
pop
fs
daa
cmpsl
imul
and
pop
dec
adc
mov
pop
dec
ret
jmp
mov
movsb
mov
movsb
or
mov
sbb
xor
outsl
adc
xchg
cmpsl
cld
mov
pop
movsl
sbbb
inc
jp
int3
sub
push
sbb
loope
mov
adc
test
and
out
mov
mov
jo
bound
mov
in
pop
sbb
mov
scas
pop
inc
xchg
sub
mov
xor
jle
pop
and
movsb
shlb
cmp
push
mov
imull
mov
je
mov
push
iret
push
or
push
jecxz
rclb
inc
and
shl
add
xchg
xchg
fld1
or
or
fwait
clc
sahf
leave
pop
or
cmpsl
push
pop
and
pop
lahf
add
int3
into
in
sub
je
inc
inc
out
add
mov
fstpl
adc
scas
lea
nop
push
fisttpl
cmpl
adc
pop
test
mov
cmp
and
sti
daa
sbb
lret
lahf
and
call
sbb
jne
pop
subl
mov
sarl
sbb
icebp
neg
xchg
test
outsl
imul
cmp
jge
jge
add
ja
and
xor
pop
push
xchg
mov
stos
push
mov
imul
cmp
addr16
dec
fs
imul
notb
add
lock
fcoms
xchg
mov
add
push
or
ret
outsl
cmp
sub
das
scas
sbb
add
in
sub
push
lea
sar
sub
out
pop
test
sbb
xor
jmp
push
mov
mov
jge
xchg
sti
test
mov
out
push
or
gs
fistpll
add
mov
jo
stos
add
sub
mov
rcrb
leave
decl
mov
sub
aaa
out
push
ja
popf
out
pop
mov
push
fnstsw
jmp
std
out
xor
lock
pop
lods
in
out
fnsave
test
or
shl
mov
popf
pop
sbb
inc
xchg
xchg
mov
mov
push
adc
movsb
insb
mov
mov
dec
jbe
jle
imul
sub
aaa
ljmp
leave
pop
sbb
ret
sbb
movsb
cwtl
test
xchg
int3
hlt
ret
cs
in
out
lods
xchg
dec
xchg
icebp
cmp
add
shlb
mov
dec
pop
roll
nop
test
int
xchg
shlb
dec
sub
pop
and
xor
jle
sub
adc
mov
and
sub
test
mov
stos
imul
jp
pop
jnp
out
icebp
mov
mov
xchg
mov
push
fmull
sbb
stos
out
inc
adc
pop
ja
imul
xchg
sub
inc
lds
and
ret
fimull
fbld
das
repz
jecxz
mov
sbb
out
mov
repnz
or
outsl
sbb
fimull
cmp
xchg
incb
hlt
rolb
jb
dec
and
jae
xor
leave
scas
sbb
mov
pushl
test
pop
mov
xor
stos
mov
mov
mov
lret
mov
sbb
adc
dec
mov
lock
jo
gs
out
and
adc
mov
lret
scas
pusha
add
dec
fidivrl
daa
dec
ds
sub
int3
xchg
dec
sub
lea
pop
mov
dec
xlat
repnz
inc
or
mov
insb
fdivrl
mov
dec
pop
jge
mov
out
xchg
xor
xor
mov
das
dec
sub
fsts
pop
loopne
call
je
out
stos
xor
xlat
les
std
and
sub
es
cmc
pop
dec
mov
daa
xchg
jnp
xor
mov
ret
cmp
xchg
icebp
sub
in
pop
aaa
inc
dec
and
inc
push
loop
fldenv
adc
inc
scas
call
aas
out
xchg
mov
iret
cli
lds
js
lods
mov
push
push
shll
cmpsb
cmpsb
stos
addb
mov
xchg
mov
lods
sbb
xchg
stc
sub
cli
cld
mov
push
inc
rcrl
push
pop
push
lods
mov
test
or
daa
aad
mov
mov
xchg
lcall
aaa
adc
sub
clc
fdivrp
mov
sti
dec
push
jb
xor
xlat
lcall
sbb
mov
xlat
cmp
push
roll
pop
and
add
and
imul
cmp
add
push
in
pop
pop
pop
mov
insb
pop
int
mov
stos
cmc
xchg
xchg
mov
sub
fs
repnz
lcall
or
popa
daa
cmp
or
loopne
lcall
enter
int
shrb
clc
sub
jp
or
lret
dec
repz
mov
scas
pop
leave
cli
hlt
andb
mov
dec
test
cld
pop
jg
insl
cmc
mov
insl
mov
mov
stc
jbe
jp
divl
int
stc
lret
push
aaa
int3
dec
lret
push
shll
js
fwait
cmpsb
jnp
adc
flds
mov
inc
lret
es
xor
das
fmull
movsl
jbe
sbbl
inc
movsl
in
mov
call
push
inc
mov
addr16
aad
pusha
in
cli
fwait
cmp
lock
pop
cmp
stos
filds
push
gs
movsb
cltd
rcl
mov
sbb
mulb
sub
adc
cmp
jmp
add
cmp
test
call
inc
mov
clc
js
xchg
shll
mov
addb
mov
imull
jnp
shll
cmc
and
xchg
cli
jge
dec
sbb
pop
hlt
pop
pop
and
pop
sti
or
nop
outsb
sbb
out
rorb
dec
popa
mov
mov
mov
mov
ret
and
inc
push
lcall
mov
sub
add
add
outsb
sti
pop
push
cmp
xorb
xchg
jle
or
jb
mov
shrb
push
xchg
mov
xchg
arpl
mov
je
xchg
sub
loop
mov
or
mov
dec
nop
lret
sbb
jb
adc
sub
decl
ror
repz
ret
cmp
cmp
add
jb
jle
or
and
inc
mov
mov
and
pushf
stc
adc
adc
pushl
jbe
rol
xor
mov
xor
push
icebp
push
push
mov
push
sub
mov
out
aam
dec
inc
pushf
or
scas
lret
jle
mov
mov
in
xchg
loope
adc
sahf
pusha
int
push
mov
cwtl
lods
cld
stos
mov
fs
and
jmp
lock
lret
push
push
cmpsb
add
xchg
add
rol
imul
mov
pop
dec
pop
push
inc
cli
sbb
cmc
adc
rcr
testl
sub
mov
sbb
xor
rcrl
push
in
pushf
out
shll
in
aad
jnp
inc
mov
pop
in
testb
add
or
sbb
popa
inc
ret
bound
shlb
push
cmp
std
cmp
andb
xchg
jg
xchg
adc
es
xchg
sbb
pop
xchg
imul
xchg
push
xor
imul
dec
push
dec
imul
leave
sbb
mov
inc
or
xor
enterw
cs
and
lret
push
roll
and
pop
cwtl
ret
xchg
sbb
and
out
cwtl
sub
addl
scas
cmc
call
add
rcrl
xor
out
cmp
mov
mov
lock
enter
xchg
das
mov
cli
jmp
and
pop
and
mov
and
push
sbb
arpl
adc
cltd
jns
add
adc
test
xorb
dec
or
pop
ds
ret
cmp
insb
mov
xor
rcrb
mov
inc
xchg
ja
ret
jo
jae
aam
jno
mov
ljmp
fisubrs
imull
xcrypt-ofb
cmpsl
sub
orl
stos
mov
inc
lock
cmc
xchg
jecxz
aas
pop
ja
test
out
test
mov
pushl
loop
imul
or
dec
sub
xchg
mov
lcall
jl
fildl
in
inc
imul
stos
xor
adc
mov
ret
push
mov
imul
cli
dec
lods
inc
lods
in
lock
mov
mov
cmp
mov
inc
les
jmp
add
lahf
or
add
fsubl
inc
mov
ud0
or
mov
hlt
or
mov
jb
sub
test
or
leave
push
sbb
in
xor
dec
jmp
dec
dec
jg
fdivrs
jnp
inc
jb
push
cmp
insl
aaa
dec
xlat
es
popf
and
enter
mov
fisttpll
and
xchg
mov
sbb
dec
sub
push
xchg
cmp
cltd
imul
push
ret
cmc
loopne
cmpsl
enter
push
jl
push
push
inc
jnp
jecxz
insb
stc
dec
cld
outsl
in
add
test
je
xor
xor
aaa
mov
mov
fsubrl
ljmp
and
mov
or
iret
push
adc
or
mov
push
inc
andb
lahf
push
sahf
lods
aas
or
out
pop
in
bound
lret
and
lcall
mov
jge
jp
mov
imul
icebp
ds
rorl
loopne
mov
push
xorl
test
and
fnstsw
call
dec
pop
hlt
xchg
in
inc
ds
leave
aam
fidivrs
push
adc
daa
push
fnstsw
movl
jg
mov
jae
xor
sub
ja
cmpsl
fwait
ret
pop
inc
and
xchg
ljmp
jbe
iret
mov
andb
pushf
sahf
pmulhuw
xlat
subl
psubusw
mov
push
mov
fsubl
pop
adc
lcall
lahf
mov
iret
xlat
push
cmp
push
pop
cld
shlb
push
hlt
and
adc
add
sub
dec
push
arpl
fdiv
sbb
cs
push
sub
push
fs
pop
jno
jo
in
mov
xchg
jbe
std
xor
lods
pop
xor
fwait
xor
das
jl
fisttpll
mov
jb
into
cmp
ss
ja
cltd
mov
pop
cmp
je
cld
cmp
xor
dec
or
sbb
xor
div
lods
sub
inc
ret
dec
lock
dec
loope
dec
fmull
les
cld
add
xchg
std
adc
cmpsl
in
xchg
mov
sahf
les
mov
hlt
nop
popf
mov
lds
insl
dec
std
xor
mov
xorl
cwtl
add
loopew
rolb
mov
cmp
fistps
inc
std
clc
fstpl
cld
mov
push
push
pop
add
mull
mov
rclb
into
and
jecxz
sub
jg
mov
sub
add
pop
sbb
push
cmc
test
and
and
and
test
add
xlat
inc
mov
push
enter
dec
ja
shlb
aam
jle
pushl
push
fsts
push
out
dec
push
pop
sti
or
ss
lods
testb
ficompl
jb
ss
inc
xchg
loopne
cmc
in
mov
pop
sbb
adc
inc
dec
sub
mov
bound
fwait
icebp
stos
jo
mov
jnp
mov
and
ja
mov
lret
outsl
dec
insb
sbb
outsb
divl
mov
sbb
jge
or
imul
xchg
dec
jnp
xchg
inc
in
xchg
shrb
testb
std
cmp
push
test
jmp
std
clc
pushw
call
jle
inc
scas
ret
mov
sub
in
pop
sti
arpl
gs
ss
and
dec
test
test
xchg
adc
cmp
dec
into
lock
jae
cltd
lcall
add
nop
push
xchg
and
je
cmc
mov
data16
push
fcoml
add
iret
iret
cmp
cmp
lret
call
subl
cwtl
outsb
jmp
loope
dec
dec
cmp
sub
and
aas
push
jmp
jb
xorb
xor
fisubrs
mov
sarb
sbb
push
pushf
jae
hlt
enter
jle
dec
sti
jno
or
inc
pop
mov
xor
loop
cmp
stos
pop
jne
mov
xchg
mov
pop
enter
sbb
and
pop
shrb
cs
sub
jecxz
and
leave
fstpl
sub
lahf
outsb
jl
sbb
fldt
sub
push
jo
das
pop
cmp
inc
out
fs
daa
xchg
scas
pop
and
sub
push
das
xchg
lds
cmp
xor
ljmp
sbb
cltd
add
sub
mov
inc
outsb
cmp
mov
hlt
push
sbb
ds
sbb
jo
dec
lods
xor
mov
push
mov
mov
inc
lea
jg
call
and
sub
mov
fistl
neg
adc
stc
loopne
xchg
js
test
sbb
repz
sbb
jmp
rolb
pop
push
mov
mov
int3
lahf
add
hlt
pop
cltd
inc
addr16
enter
dec
iret
stos
adc
pusha
bound
sarl
pop
pop
je
scas
fdivrs
mov
inc
xchg
adc
or
je
sbb
xorl
sbb
cltd
fldt
into
xchg
dec
xchg
sub
lea
or
test
clc
ljmp
cwtl
loop
and
jge
and
fisttpll
in
mov
cld
xor
loope
es
dec
loop
dec
cs
adc
test
cmc
movl
fsubrl
mov
popa
xchg
pusha
out
fmuls
mov
xor
cli
push
out
jns
adc
cmp
loopne
or
in
movsb
jp
inc
lahf
sarl
mull
jbe
jne
dec
pushf
mov
mov
ss
push
in
addr16
xlat
mov
mov
in
jne
mov
xor
cmp
push
mov
popa
push
sbb
popa
add
mov
popl
inc
mov
and
jb
or
rcr
ret
fsubs
adc
lcall
fidivrs
stos
xor
cld
rol
ret
imul
mov
or
jb
inc
xchg
adc
and
sub
arpl
cmp
aad
xor
mov
dec
xchg
test
inc
nop
mov
mov
aad
outsl
pop
popa
mov
push
nop
cmp
insb
test
add
call
or
inc
jge
movsb
xor
inc
mov
out
mov
xchg
jbe
sbb
loope
testb
es
es
sbb
lcall
popf
loope
mov
sub
arpl
mov
pop
inc
jnp
mov
aam
dec
xlat
jecxz
mov
rolb
inc
das
mov
push
cld
or
lock
pushf
jno
sub
jge
xchg
pop
sub
jmp
dec
andl
scas
out
stos
pop
orb
push
lock
sbb
mov
sub
jne
mov
sbb
add
or
push
push
aad
add
in
sbb
fdivrs
push
stc
fwait
jl
xchg
sub
shll
mov
inc
inc
cld
loope
cmp
repz
stc
pop
aas
or
jmp
inc
xlat
and
inc
sub
jmp
push
sub
push
cld
xchg
mov
in
jmp
pop
pop
cmpsl
adc
scas
aad
stc
insb
jnp
test
rcl
mov
aad
out
pop
js
push
xchg
push
out
fstps
test
pushf
rolb
std
push
daa
xchg
jno
push
ret
pop
cwtl
push
cwtl
sub
push
lahf
das
sbb
push
xor
mov
adc
inc
sub
push
jne
sbb
out
sahf
sub
mov
pop
pop
cmc
inc
std
mov
push
jns
add
fwait
mov
inc
bound
fldl
adc
jg
jp
inc
mov
dec
cmpb
dec
iret
fiadds
fucomi
cwtl
ret
dec
int3
lret
aas
es
inc
test
insl
daa
jl
adc
sub
outsb
adc
sub
lcall
sti
sub
idivb
jae
hlt
push
cmp
pop
int
xor
mov
mov
daa
cmp
in
push
stos
cmc
xor
stos
aaa
inc
jecxz
addb
imul
insl
sbb
adcl
movsl
push
lret
jp
fwait
mov
xor
sub
test
dec
ja
out
movsb
icebp
popa
test
xchg
sbb
ja
pop
mov
aaa
lds
xchg
out
ljmp
mov
inc
jmp
or
in
lds
xor
mov
inc
or
mov
sbb
lds
push
hlt
inc
dec
add
mov
xchg
lret
outsl
and
or
dec
je
ss
lcall
pushf
les
jae
aas
or
xchg
adc
sbb
test
xchg
mov
add
jae
xor
lock
push
stos
or
imul
sub
mov
mov
push
rcr
inc
adc
sub
fdivs
or
dec
out
mov
push
push
push
inc
ret
xchg
jp
xlat
std
stos
xchg
jno
shr
arpl
adc
dec
xchg
out
xlat
lods
pop
and
inc
push
xchg
fidivrs
adc
adc
pop
jg
rclb
xlat
mov
dec
es
repnz
pop
imul
das
jmp
jg
and
in
mov
xor
call
outsb
sbb
into
jns
lret
cmp
sub
notl
int
xchg
cs
mov
xor
rolb
mov
pop
xchg
pop
movsb
pop
mov
pop
cwtl
cmp
and
inc
mov
fcmovnu
loopne
cmp
in
enter
rolb
xor
bound
mov
and
mov
push
sbb
clc
loope
out
cmpsl
test
das
inc
lds
call
dec
mov
lds
bnd
setl
sti
in
and
shl
cmpsb
sbb
js
fcoms
aas
sub
test
mov
jg
repnz
popf
into
mov
add
rcrb
cmp
lcall
inc
mov
fisttpll
jo
test
repz
adc
jge
inc
xchg
ja
sbb
insb
jno
xor
push
sbb
adc
sub
inc
inc
or
push
mov
adc
dec
push
cmp
lahf
push
mov
inc
loopne
push
jb
push
xchg
lahf
clc
and
sbb
cmp
mov
testl
movsl
loop
mov
fidivl
inc
dec
movsl
ljmp
add
loope
mov
les
int3
and
dec
decl
fwait
cmpsb
in
jnp
test
mov
lods
inc
in
cmp
mov
sub
mov
sbb
lods
mov
xor
dec
fstl
nop
dec
test
je
hlt
cmpsl
pop
aad
mov
push
xlat
xor
adcl
jno
cmp
jbe
rclb
adc
idivb
int3
push
divb
dec
sahf
xor
test
jnp
pop
or
xchg
mov
sub
rcr
or
sbbl
fwait
push
test
or
sbb
sub
and
inc
mov
push
addr16
loope
xchg
or
push
imul
cltd
fwait
pusha
sbb
and
push
fwait
adc
int3
adc
mov
div
add
insb
jb
bound
sbb
xchg
jge
lea
cmpsb
sub
mov
cmp
stc
xor
scas
or
rcll
fsubrl
cmp
shlb
pop
in
shll
sti
subl
dec
dec
jb
push
jmp
xor
sbb
pop
cmp
push
cmp
xchg
dec
xchg
lock
iret
and
jae
jge
lods
mov
arpl
mov
fsubl
mov
jne
andl
je
lcall
les
xchg
inc
add
int3
mov
mov
ja
adc
inc
imul
fld
jg
lock
cmp
xlat
not
sbb
fisubrl
mov
idiv
ret
sbb
in
repnz
xlat
mov
pop
and
lods
cwtl
xorl
mov
pop
adc
imul
fwait
cli
nop
mov
and
xchg
mov
and
int3
popa
add
into
in
movsb
cwtl
inc
imul
cli
sahf
lahf
xchg
addl
jmp
je
leave
pushf
in
sub
ficomps
inc
xchg
jae
enter
in
mov
adcb
cld
mov
xchg
xor
pop
leave
push
rcrb
jns
add
scas
sbb
inc
ret
push
adc
pop
mov
mov
adc
dec
dec
adc
das
pop
jbe
ret
stos
xor
push
popf
pusha
fdivrs
jg
sarl
rcll
lods
sub
ljmp
sbb
les
ret
jae
sbb
adc
cmp
cmp
push
adc
lods
sub
xor
sub
fsubs
inc
xor
js
lret
mov
faddl
cmp
cli
jno
outsb
mov
stos
ret
int
xor
cltd
or
fmulp
lcall
aaa
out
hlt
imul
jae
aaa
mov
into
enter
sbb
adc
sbb
roll
mov
and
out
or
movsb
jnp
divb
iret
notb
loop
add
dec
adc
jle
pop
sbb
inc
sarb
jl
pop
add
mov
rorl
in
testb
mov
xchg
sub
loopne
ret
mov
add
xor
cmp
mov
mov
cs
pop
xor
jmp
int3
inc
dec
setl
mov
mov
mov
jle
jbe
incl
adc
divl
lock
inc
cmp
jno
push
cmp
or
jl
stos
xor
fldcw
out
jne
or
xor
and
pop
fiaddl
scas
cmp
out
fwait
dec
shll
hlt
push
mov
addb
in
or
fldenv
and
jns
mov
insl
xchg
add
aaa
mov
adc
clc
test
leave
adc
mov
int3
das
jno
inc
lahf
xor
jp
add
lcall
mov
les
shlb
inc
xchg
and
lret
in
imul
jl
push
enter
das
dec
mov
add
push
outsb
xchg
add
loope
mov
lods
fisubrs
lods
pop
and
jbe
jl
data16
flds
pavgw
mov
cmp
ljmp
mov
dec
push
jecxz
enter
dec
mov
cmpsl
xor
orl
data16
mov
xor
jno
arpl
or
sbb
xchg
inc
sbb
xlat
aad
or
mov
rol
shlb
push
mov
push
pop
lock
dec
dec
push
mov
mov
aam
shll
xchg
pop
xlat
lock
notl
and
das
mov
in
cs
popf
push
in
xchg
mov
cmpsl
mov
ret
ljmp
cmp
mov
arpl
ds
sbbl
add
les
mov
cmpsb
daa
shll
call
in
daa
and
dec
jne
pop
pop
jp
icebp
cmc
loopne
fildll
sub
and
out
add
fdivl
add
insl
inc
mov
mov
adc
clc
popa
rolb
mov
push
pop
fsincos
jbe
imul
xlat
mov
ret
push
fptan
sbb
insl
or
pop
fs
fsubrl
dec
loop
or
and
lahf
cltd
lock
jb
cmpb
ljmp
mov
lret
jne
divl
adc
mov
add
out
jmp
xchg
adc
lods
mov
cli
mov
and
inc
cmpsb
arpl
sub
inc
fisttpl
insb
cmp
dec
clc
cmp
ja
dec
sbb
cmp
xchg
loop
arpl
stos
loope
test
out
scas
rolb
std
pop
sub
and
mov
insb
aas
adc
jnp
std
jle
pop
jl
fidivl
out
test
mov
cwtl
mov
outsl
rcr
cmpsl
and
sbb
int3
popf
push
lcall
pop
cmp
out
and
mov
sarb
and
divb
cltd
lods
testl
clc
mov
jmp
ljmp
push
cmp
fwait
xchg
jae
mov
xor
call
cmpsl
mov
pop
xor
movsl
cmp
push
neg
inc
fwait
jbe
jo
and
imul
lods
cwtl
arpl
mov
add
outsb
sbb
sbb
testl
jnp
mov
andb
push
ljmp
gs
dec
mov
or
xchg
jb
test
iret
mov
ljmp
shll
sbb
dec
arpl
sbb
icebp
xchg
pop
test
enter
mov
aaa
sub
test
repz
cmovnp
mov
mov
cmpsb
aam
xor
cmpsb
aam
sub
pushf
in
enter
lds
mov
outsb
icebp
mov
arpl
jbe
outsl
outsb
andb
sbb
sahf
mov
or
sub
testb
push
out
lods
mov
add
sahf
int
pop
cwtl
fdivr
int
jae
cld
mov
fcoms
or
std
xor
cwtl
mov
ret
scas
popf
loop
add
out
hlt
inc
push
sub
and
jecxz
sbb
push
rcr
out
sbb
mov
mov
stos
js
jecxz
adc
inc
test
push
fildl
mov
repnz
mov
inc
sub
adc
outsl
jbe
xor
inc
or
dec
pop
dec
jo
mov
pop
xor
push
and
mov
aam
pop
out
movsl
mov
xchg
push
sbbl
push
pop
std
out
pop
andl
add
jmp
imul
jb
xor
sub
orl
loopne
cld
stos
xor
out
sub
clc
lods
negl
jo
fstpl
xchg
pushl
cmp
jecxz
xor
inc
xorl
stc
cmp
outsl
test
cli
movsl
shlb
jge
lods
subb
xchg
lods
gs
xchg
mov
xchg
sub
sti
fsub
lret
stos
ror
push
xchg
insl
dec
scas
inc
fmuls
inc
les
pop
les
das
push
push
stos
fdivl
xor
in
ret
and
shlb
movsl
dec
pop
popa
clc
or
and
ret
push
mov
push
jmp
push
jl
xor
div
lret
xchg
push
std
pop
lret
pop
test
fwait
mov
push
push
movsl
xchg
jo
fstpl
loopne
loop
sbb
fidivs
and
cmpb
adcb
push
or
xchg
jns
sub
dec
jno
jno
pop
out
mov
pop
push
aam
mov
out
popa
iret
mov
lds
sbb
scas
movsb
int3
out
das
dec
in
pusha
mov
xchg
mov
out
jg
shlb
negl
add
or
mov
cs
fucomip
cltd
inc
or
ret
push
or
outsb
sbb
insl
add
aad
sbb
out
xor
push
xchg
adc
mov
and
push
stc
mov
out
inc
in
negb
and
out
sub
pop
pop
push
leave
add
imul
push
sub
or
jne
adc
mov
les
xor
pushf
dec
xlat
push
mov
push
mov
sub
mov
add
in
aaa
int3
and
jg
sbbb
scas
and
push
fs
jl
cmp
jnp
negl
stos
loopne
lret
shll
outsb
cmc
cmp
add
push
pop
lcall
out
push
mov
xchg
xor
iret
or
int3
popf
pop
push
xchg
cmp
cltd
jle
mov
sub
pop
mov
sbbb
mov
ja
ret
dec
cmpsl
xchg
addr16
rcrl
roll
xchg
sbb
rcl
dec
xor
mov
sahf
push
fstpl
mov
aaa
fbld
add
push
test
lcall
je
mov
rcrl
pop
repz
jae
xchg
xor
addb
or
fwait
gs
cmp
out
andl
dec
sbb
sti
sbb
jne
jl
sub
dec
adc
dec
divb
imul
push
add
test
test
inc
mov
in
iret
fs
cmpb
adcb
inc
ret
lcall
jp
hlt
and
inc
jl
data16
inc
or
fisubrl
mov
inc
in
push
xorl
insb
lret
movsl
aaa
arpl
out
mov
mov
std
jmp
sbb
mov
push
inc
or
or
push
fildll
mov
mov
enter
lcall
xor
in
je
lret
mov
and
or
ss
mov
in
out
mov
and
and
aad
push
stc
sbb
inc
xchg
xchg
push
test
xchg
add
adc
mov
out
mov
in
mov
bound
push
dec
mov
inc
call
std
stos
inc
repnz
clc
popa
addr16
sbb
pushf
test
mov
sbb
das
movl
mov
and
sub
into
nop
push
jge
mov
leave
fucomip
mov
inc
mov
arpl
dec
repz
iret
mov
cltd
in
nop
push
int3
insb
hlt
adc
sub
push
in
jne
imulb
pop
stos
push
lods
xor
adc
mov
inc
lock
es
ffreep
xlat
add
dec
call
mov
sbb
jnp
jmp
or
std
loope
dec
mov
and
movsb
jl
jle
sub
mov
add
fwait
clc
cmp
pushf
xchg
cmp
dec
pop
xchg
movsl
cmp
aas
sti
maskmovq
mov
xchg
fcompl
xchg
cli
ss
jp
or
imul
cli
stos
popa
jo
adc
arpl
out
arpl
cmc
popf
dec
ja
cmp
pop
cwtl
std
mov
inc
mov
push
inc
aad
add
jae
movsb
jl
rorb
and
adc
out
cmp
xor
adc
in
outsl
lret
mov
leave
mov
adc
jmp
or
mov
dec
push
push
jmp
xchg
ljmp
int
cmp
mov
cmpsl
adc
into
jle
add
push
dec
push
pop
pop
pop
sahf
push
add
fadds
cmp
lds
loope
xor
imul
cltd
pop
dec
mov
push
leave
pop
stos
pop
jmp
shll
cs
sbb
fsubr
jg
insb
adc
jg
jae
and
pushf
stos
out
lock
push
jecxz,pn
popa
jl
cmp
mov
cmpsl
mov
sub
imul
cmp
cmc
outsb
cld
scas
sbb
push
sub
mov
in
xlat
aaa
xchg
and
cmp
fdiv
dec
cltd
in
mov
xchg
int
lahf
ret
test
fistpl
in
add
and
push
lock
enter
in
notb
addb
adc
insl
and
xchg
roll
ss
les
add
inc
dec
mov
cmp
cli
fcmovu
xchg
mov
mov
cmp
lock
sbb
dec
pop
jbe
push
hlt
in
mov
imul
mov
mov
in
push
cmpl
sbb
mov
push
cmpsl
fidivrl
pop
sbbb
mov
mov
mov
sub
mov
lea
fcmovbe
test
movsb
cmp
pop
into
fiadds
sbb
lds
jbe
shr
das
mov
or
insb
stos
cmp
push
mulb
xor
dec
data16
dec
jl
mov
push
xchg
jb
dec
pop
dec
lidtl
shlb
cld
or
scas
int
xlat
loopne
lret
xchg
cmp
or
inc
aaa
cld
out
js
dec
mov
cmpsl
add
xor
push
xor
mov
mov
movsb
jmp
call
adc
ret
mov
inc
push
or
in
mov
shlb
xchg
daa
jmp
adc
jmp
xchg
push
push
sti
inc
jl
jg
mov
or
push
jae
pushf
stos
fiaddl
mov
jo
lahf
sub
xchg
add
fwait
sub
mov
push
ret
adc
popa
xchg
cli
sub
inc
jae
jmp
mov
cmp
xor
mov
sub
int3
push
xor
cltd
xchg
lods
add
push
sbb
daa
sbb
pop
sub
rorl
dec
stos
xchg
sahf
mov
stos
xor
in
mov
lods
push
fldt
adc
push
pop
push
jecxz
scas
xchg
insb
and
pop
mov
pop
mov
pop
push
or
fadd
dec
ficoms
cld
xchg
out
loope
clc
je
and
pop
das
cmp
push
faddl
daa
outsl
push
push
into
mov
stos
repnz
gs
lret
lret
jno
outsl
popa
in
adc
stc
sbb
push
fwait
mov
je
dec
dec
or
out
pop
push
pop
mov
js
xchg
push
bound
sbb
sub
in
pop
js
in
lcall
sbb
push
sbb
mov
iret
data16
push
cmp
push
push
push
notl
pop
in
fisubs
ss
add
lahf
std
sbb
push
pop
push
jb
add
jbe
pop
push
adc
popa
jp
stc
inc
sbb
pop
push
jns
xor
xlat
leave
int
dec
sbb
xchg
cmp
mov
enter
cltd
movsb
insb
push
push
or
xchg
sbb
stos
mulb
imul
test
mov
sub
cmp
sbb
lock
repnz
js
sub
fstpl
mov
cs
fcomi
aaa
les
out
mov
adc
fcoms
imul
push
pushf
fldl
add
pop
iret
cs
inc
xchg
mov
ret
ds
std
xchg
mov
xchg
push
subl
leave
mov
aas
dec
sub
out
je
pusha
test
jo
pop
pop
sbbb
jb
iret
aas
cmpb
test
jb
jmp
gs
rorb
int
and
hlt
daa
cmc
int3
imul
pop
scas
cmp
mov
dec
jmp
push
rcr
in
mov
push
lods
ss
dec
mov
mov
pop
and
cmc
movsl
and
cmpsb
jo
mov
xchg
imul
mov
out
sub
fcmovb
inc
jne
test
int3
or
neg
loop
inc
aaa
xor
outsb
outsb
aam
mov
dec
into
xchg
xlat
jnp
stc
mov
stc
mov
sbb
push
ss
or
fsubrl
xchg
push
test
dec
mov
scas
cli
popf
in
iret
rorb
js
jp
sub
sub
mov
dec
or
enter
cmpsb
jmp
add
mov
fimull
aam
scas
mov
fisttps
add
loopne
cwtl
jmp
push
fistpll
pop
mov
aas
push
jmp
clc
fs
cltd
mov
or
data16
jmp
imul
jp
cs
addr16
and
jmp
mov
inc
sbb
nop
or
cld
jnp
out
dec
cmp
adc
dec
inc
int3
xor
out
testl
test
xor
xor
mov
mov
fldcw
jge
adc
jbe
das
add
call
adc
das
dec
shl
xchg
mov
mov
hlt
and
inc
fsub
mov
jecxz
cld
rcrb
pop
fnstsw
fwait
std
jl
and
lret
aas
jmp
movsb
jnp
ret
xor
ret
sarb
jnp
fs
daa
mov
push
adc
std
es
push
int
adc
adc
xlat
jns
adc
sbbb
jbe
stos
push
sub
sbb
pop
dec
mov
push
jp
lock
fs
push
adc
mov
aaa
popf
adc
mov
out
out
je
jb
pop
ret
or
xchg
push
xchg
xor
sbb
daa
and
jns
shll
in
lods
xchg
mov
lahf
xchg
dec
scas
sahf
stos
cmc
hlt
js
scas
cmp
add
repz
lea
cmc
xor
lock
xchg
xchg
sbb
loopne
mov
mov
pop
movsl
sbb
loop
add
sub
shrb
fs
and
mov
pop
adc
pop
push
add
rcl
pop
loope
aaa
cmp
ret
cmp
jge
hlt
fcompl
shlb
inc
cmpb
adc
cltd
test
pop
adc
adc
mov
dec
shll
mov
mov
pushf
sub
out
out
adc
insb
inc
cmp
jns
add
mov
mov
jmp
push
sbb
data16
sub
add
mov
mov
lret
bound
iret
lds
xor
fildll
out
in
outsb
pop
scas
mov
clc
pop
nop
jo
out
ret
mov
sub
mov
lock
sub
in
idivb
lret
add
seto
mov
int3
xchg
mov
xchg
lcall
sub
stos
popf
mov
ret
stos
mov
xor
adc
push
mov
hlt
mov
jle
imul
clc
fldl
mov
jp
push
packsswb
dec
cltd
mov
imul
or
aad
das
push
mul
insb
mov
popa
xchg
hlt
mov
mov
and
xchg
dec
mov
test
dec
ss
test
jmp
lds
aad
sub
xchg
inc
inc
add
stos
and
pop
das
mov
xor
mov
pop
fidivrl
pop
mov
ret
cmpsb
cmp
mov
jmp
xchg
gs
mov
xchg
out
shll
into
shlb
jmp
push
mov
je
mov
lahf
mov
jbe
jle
getsec
and
mov
out
xchg
xor
mov
add
mov
mov
sub
mov
push
je
in
mov
xor
sub
mov
push
ret
adc
xor
lds
int3
jno
fmulp
jo
dec
test
cmp
into
outsl
maxps
sbb
ss
hlt
push
imul
pop
clc
lods
ror
inc
add
pop
push
repz
mov
or
inc
jmp
pop
pop
repz
sub
xor
jns
mov
xor
int
cmp
xor
jo
push
mov
pmulhuw
dec
je
int3
lds
cmp
inc
fadds
sbb
in
cmp
sub
mov
repz
xor
fs
out
lcall
jp
mov
popa
test
std
movsb
inc
popa
repnz
jg
mov
inc
cltd
cmpsl
hlt
jp
mov
test
jo
cmp
out
inc
sub
les
test
fsubs
pusha
fs
mov
xor
push
sbb
adc
lret
sbb
jge
jp
movsb
aaa
cmpsb
cmpsb
push
sti
fiaddl
cld
std
ficompl
rcr
mov
inc
lods
stos
push
mov
loope
add
fldcw
push
push
adc
sub
cmp
arpl
inc
mov
stc
add
repz
les
ds
jl
or
lret
xor
xchg
negl
cmp
repz
push
inc
mov
xchg
in
icebp
add
jg
push
dec
fstpt
frstor
call
test
ljmp
jns
shlb
lds
cli
inc
sti
leave
outsl
lods
jns
fldl
sbb
aam
lcall
and
pop
stos
jle
call
xchg
or
and
cmp
cmp
or
and
mov
inc
jmp
push
lods
lahf
ret
fidivs
dec
scas
or
adc
out
push
dec
jne
adc
scas
dec
lcall
pop
xor
fiadds
inc
push
out
dec
loope
xor
jo
jecxz
xchg
inc
nop
mov
popa
sahf
insl
outsl
sub
push
mov
scas
pop
xchg
xchg
in
out
push
das
add
inc
movsb
dec
or
addr16
sub
mov
add
shlb
fs
pusha
popf
dec
into
pop
mov
or
ljmp
push
cmp
cmc
les
pusha
inc
mov
cltd
fwait
and
xor
arpl
shlb
cs
push
repz
ljmp
cmc
repz
sbb
xor
pop
adc
mov
inc
jb
push
dec
lcall
jne
push
inc
xor
andl
ljmp
lea
call
and
in
repnz
mov
push
push
xor
push
and
sahf
jne
mov
xor
sbb
jnp
add
inc
inc
or
addl
mov
xor
out
cmp
inc
mov
pusha
xchg
pop
jecxz
jge
push
pop
mov
aaa
push
cmpsl
adc
sbb
mov
insl
daa
mov
add
pop
dec
popa
adc
mov
pop
jne
shlb
jns
adc
adc
mov
fistpl
popa
test
adc
jbe
jge
cmc
push
inc
push
jg,pn
adc
cmp
outsb
mov
xor
lret
aam
hlt
test
sbb
in
stc
adc
cmp
gs
push
add
bound
lods
icebp
sbb
xchg
smsw
dec
lods
push
je
cmp
mov
xlat
rclb
dec
gs
add
ss
andl
fimull
fisubrl
fsubs
sahf
cli
xor
out
push
lret
or
inc
or
cmp
shl
ss
dec
and
insb
lds
jp
push
jnp
xor
out
push
sub
ljmp
in
mov
repz
mov
mov
jae
inc
and
jp
orb
lea
mulb
jbe
orl
out
lcall
out
daa
push
cmpl
sbb
lret
adc
and
into
out
ffree
sub
out
les
or
mov
shll
mov
inc
and
lea
imul
je
sub
ds
and
mov
std
and
and
loope
lcall
mov
mov
push
push
pop
daa
aas
test
xchg
ret
xchg
lret
sub
dec
pop
cmp
pop
push
inc
push
fnsave
ret
cli
mov
cmpsl
nop
and
and
sbb
es
push
les
in
or
or
push
ffreep
cwtl
sub
jp
dec
imul
dec
push
inc
xchg
sahf
test
cmp
and
in
inc
pushl
mov
dec
adc
push
lcall
inc
test
loop
xorb
pop
sbb
std
vcvtpd2dq
jo
nop
jnp
movsb
addr16
dec
cld
adc
or
ss
test
das
sbb
or
sahf
pop
xor
fildll
jg
ds
sub
sbb
cmpsb
jb
sbb
jecxz
cmp
jb
scas
notb
inc
mov
xchg
add
test
mov
shlb
jle
pushf
xchg
sub
mov
pop
popf
sub
sub
ljmp
dec
std
int3
fcmovne
cmpsl
lock
cmc
and
cmp
and
mov
addl
push
add
mov
cmp
pop
leave
xchg
mov
mov
pop
cli
inc
arpl
jg
cmpsb
imul
fstl
sub
inc
sbb
inc
imul
insb
ja
and
push
sub
andl
scas
imul
aas
jbe
inc
das
mov
ret
sub
adc
enter
lea
in
cmp
cmp
jecxz
fneni(8087
adc
int
shrl
cli
test
jg
cwtl
pop
xor
imul
das
test
jns
leave
push
push
cmp
mov
jge
cmp
pusha
mov
fs
out
mov
mov
add
aam
call
pop
aam
in
xchg
pop
out
negb
ja
cmp
out
call
fs
push
test
call
cmp
lds
and
sbb
aas
push
adc
mov
mov
aam
mulb
pop
pop
call
dec
lock
sub
sbb
test
movsb
xor
xchg
or
adc
jge
insl
cmpsb
xchg
cmpb
add
xor
enter
sbbb
xchg
ss
adc
nop
je
jae
sbb
xchg
or
stos
ljmp
repz
jns
push
or
scas
or
ret
ror
loopne
push
inc
sub
mov
ljmp
mov
sbb
xor
jp
dec
mov
mov
add
mov
sub
or
nop
mov
inc
sbb
mov
clc
sti
push
dec
xchg
and
or
lods
jmp
sti
arpl
and
std
mov
mov
jg
and
xlat
jp
push
or
jae
push
push
cltd
mov
aam
push
out
mov
test
arpl
hlt
shr
cwtl
movsb
adc
push
cmp
stos
jo
dec
pop
mov
movsl
out
sub
xchg
jno
push
mov
stos
mov
repnz
cmp
sahf
mov
daa
ljmp
lods
lea
sbb
push
mov
sub
cmpsb
lret
imul
icebp
dec
pop
xor
dec
bound
cmp
popf
inc
sub
lds
aaa
loopne
jne
cmovae
jmp
pop
ret
xchg
mov
mov
sbb
sub
push
data16
mov
jg
frstor
jbe
add
adc
imul
fucomp
insl
sub
stos
mov
mov
xor
cmpb
mov
jl
push
and
xor
adc
xor
je
out
je
xor
or
or
push
pop
inc
cmpsl
inc
mov
adc
int3
test
lds
stos
mov
ljmp
lock
pop
mov
xchg
cmp
xchg
mov
pop
ret
mov
mov
dec
xchg
cli
xchg
mov
xor
popf
lds
out
sub
mov
sub
mov
jle
lods
xchg
loopne
into
push
notb
mov
xchg
ja
in
add
push
fwait
es
pushf
ja
rcrb
ja
aas
push
adc
and
cmpl
add
in
mov
mov
push
or
outsl
repz
repnz
xchg
jbe
pop
mov
inc
mov
pop
xchg
xchg
rcl
shld
cmpsb
xchg
push
adc
add
inc
sub
lock
or
in
out
pop
jmp
pop
jmp
push
loopne
sbb
or
cmp
ja
xor
and
xchg
push
jae
add
mov
rolb
test
ljmp
lcall
jae
jb
std
lret
jne
stos
daa
mov
ljmp
pop
jl
push
mov
adc
fstpl
and
xor
lahf
or
outsl
or
mov
sahf
outsb
orl
stos
je
push
mov
enter
data16
lock
iret
pop
imul
inc
pop
push
push
test
or
sub
inc
sbb
test
sub
add
adc
mov
adcl
into
movsl
cmp
paddb
add
sub
jb
jp
inc
dec
inc
je
sbb
jmp
or
sub
mov
xchg
cmp
xor
test
sub
mov
push
pop
xchg
movsb
pop
sbb
jmp
cmc
sbb
and
dec
mov
push
pop
fcmovnb
sbb
in
aad
daa
movsl
push
push
ficompl
int
pop
adc
jbe
iret
push
shr
and
xor
cmp
cmp
dec
fs
xor
xchg
jg
test
into
jl
fisubs
sub
jns
loope
inc
insb
cmp
mov
adc
push
mov
add
push
and
jnp
push
rcrb
sti
mov
icebp
aas
fstps
lret
out
scas
push
mov
and
stos
xchg
pusha
je
daa
mov
repz
pop
jns
mov
sbb
or
mov
inc
shl
xchg
push
xor
shlb
lea
cltd
int
jne
mov
rorb
or
mov
scas
fs
add
aaa
push
lods
jnp
fisubrs
lods
rcl
jns
mov
cwtl
mov
sahf
out
stos
sarl
scas
loop
xchg
push
sub
push
outsl
rclb
inc
ret
push
stc
add
sbb
test
subb
lods
mov
ret
inc
loopne
cmpl
bound
add
mov
jge
and
xchg
jb
ret
add
rcl
out
out
fcoms
sbb
clc
ds
js
and
mov
or
inc
cmpsl
dec
lret
mov
in
add
jp
cltd
adcl
loop
movsl
or
mov
imul
mov
pop
and
adc
out
mov
cli
fwait
pop
aad
push
sub
mov
in
movsb
add
xor
bnd
jb
push
xchg
repz
xchg
mov
xor
aad
lods
test
in
and
sbb
adc
sub
mov
inc
adc
mov
fcmove
mov
jo
test
sbb
push
add
cld
xchg
ret
mov
or
or
add
sbb
enter
cmpsw
inc
mov
jne
pop
mov
adc
pop
xlat
loopne
stos
or
imul
mov
sub
dec
int
or
dec
aad
jbe
out
pop
and
je
or
inc
xchg
jne
mov
push
jl
mov
lret
xlat
pop
scas
add
mov
cmpsl
mov
dec
fdivrp
fadd
in
lahf
mov
stos
nop
lcall
in
pop
cmp
jo
fidivs
pop
lock
add
hlt
or
mov
fnstsw
xor
ficomps
hlt
sub
or
mov
cwtl
mov
dec
leave
fildl
jecxz
add
inc
cmp
cmpb
and
inc
icebp
pop
push
fistps
test
dec
xor
sbb
outsb
sub
nop
mov
pop
mov
dec
ss
cmp
call
or
popf
imul
stos
mov
adc
sbb
leave
mov
lcall
and
xchg
and
in
push
mov
js
out
xor
js
jle
es
add
dec
out
pop
cs
subl
add
fld
dec
mov
mov
into
out
jg
pop
sub
add
fldl
jecxz
shl
xchg
inc
pop
rol
add
mov
mov
push
or
jmp
pop
cmpb
ljmp
xchg
jo
or
lret
and
xor
pop
push
cmp
push
mov
push
das
sub
mov
lahf
sti
jmp
in
mov
pop
ret
in
mov
test
cmp
sub
mov
adc
stos
out
in
cmp
cmp
mov
std
stos
mov
pop
or
loope
sub
sub
sbbl
push
js,pt
repz
cmp
xlat
mov
mov
lcall
push
gs
xchg
into
bnd
sub
pop
push
fldt
push
outsl
xlat
dec
sbb
and
mov
mov
out
or
inc
subl
jmp
pop
out
sbb
cmpsb
out
sub
clc
lret
fwait
into
aaa
push
pop
imul
jbe
mov
aad
sub
negb
gs
call
fstpt
std
cmpsl
lock
xor
mov
jnp
mov
sub
faddl
pusha
pop
lret
arpl
xchg
iret
inc
and
and
jne
push
aaa
enter
cmp
cltd
lahf
jbe
pop
cs
scas
or
int
mov
mov
int
pop
xchg
test
lods
stos
int3
pop
jle
push
add
xchg
xchg
mov
cli
dec
test
mov
ss
xchg
out
inc
cmp
mov
mov
movsb
jmp
lock
loopne
ds
mov
std
sbb
insb
stc
fsub
sbb
xchg
mov
xor
js
and
lcall
outsl
ror
xchg
fistl
stos
ret
dec
and
pop
cwtl
xchg
pusha
inc
inc
cs
sbb
jl
es
ds
fs
xchg
sbb
int3
out
popw
or
inc
ret
jo
fnstsw
lret
sar
stos
mov
cmp
push
mov
outsl
shll
test
pop
outsl
je
pop
xchg
sbb
dec
test
inc
mov
xlat
jle
or
in
aad
and
vpsubd
pop
push
cwtl
pop
loope
sbb
pop
dec
jae
jne
fucomi
pop
cmp
mov
iret
jp
scas
pop
out
ja
cmp
xchg
push
cmc
addr16
or
and
fcoml
incb
mov
lea
mov
adc
movsl
jno
pop
loopne
jmp
cmp
pop
das
xlat
daa
pop
mov
mov
cmp
fcoml
mov
pop
mov
push
ret
xor
sbb
push
cld
bound
sub
cmc
mov
jg,pn
dec
sbb
jmp
cmp
repnz
mov
xchg
into
roll
jecxz
cmp
or
lret
movsb
test
mov
cmp
mov
cmpl
mov
cs
in
mov
cmp
and
lahf
xchg
push
and
outsb
push
bound
lahf
xor
stos
iret
out
imull
mov
xchg
xor
lcall
lret
out
sub
leave
xchg
call
xchg
cmp
mov
inc
ss
hlt
push
das
fistl
or
cwtl
std
das
pop
ret
shlb
pop
into
and
fidivrs
jg
mov
sub
mov
jne
pcmpeqb
sub
dec
jbe
pop
aas
jbe
cmp
stc
xchg
out
xlat
or
jbe
dec
adc
add
or
mov
sahf
out
mov
cmpsb
add
aam
dec
lcall
fdivrs
mov
and
sbb
fimull
dec
gs
ljmp
mov
inc
sub
cltd
loope
push
mov
insl
popf
mov
jle
ret
fcmovu
inc
and
mov
mov
mov
xor
and
xorb
pop
ror
sub
mov
cwtl
add
mov
dec
xchg
movhps
iret
jb
decl
jno
dec
jbe
or
nop
enter
inc
std
sbb
xchg
cmpsl
sbb
in
aad
ds
inc
jne
inc
shl
cltd
add
jbe
dec
mov
sbb
ret
std
xor
js,pn
xchg
insb
cmp
adcb
pushf
fdivp
adc
mov
hlt
jno
pop
js
push
cwtl
mov
lahf
fistps
frstor
pop
jnp
mov
jg
in
daa
dec
sbb
jbe
or
and
loop
in
pop
or
lea
lret
dec
jbe
in
mov
xchg
pusha
push
lock
in
jo
imul
pop
int
or
jcxz
loop
stos
lcall
cli
arpl
jno
scas
mov
and
mov
dec
cmp
sub
cmp
popa
cmc
pop
cmc
inc
test
mov
out
out
outsb
sub
rcll
in
mov
inc
clc
dec
setp
cmc
xchg
arpl
xchg
lea
push
mov
mov
into
jp
mov
cmp
pop
outsl
adc
pop
mulb
notl
push
or
test
xchg
jno
outsb
add
mov
push
cmp
fsubl
testb
and
data16
inc
gs
xchg
dec
mov
cmpl
test
cltd
xchg
dec
stos
popf
call
iret
jge
enter
xchg
jg
lcall
or
in
mov
cmpsl
dec
jle
xor
loope
test
mov
push
cltd
decw
dec
ljmp
push
ljmp
das
or
and
dec
das
aaa
adc
std
loopne
xchg
inc
outsl
dec
data16
or
push
movsb
xchg
sub
push
daa
mov
sbb
inc
std
fs
mov
scas
xor
sbb
mov
push
idivl
orb
jo
xchg
pmulhuw
or
repnz
mov
mov
repnz
in
jecxz
pushf
push
push
jbe
xchg
scas
sbb
cli
inc
lret
jge
sbb
ja
test
dec
inc
fsubl
mov
jb
outsb
sub
or
jmp
xchg
cli
je
add
inc
mov
cli
dec
and
push
push
es
push
sbb
push
clc
imul
arpl
pop
adc
jae
cmpsl
lret
negl
push
pop
xorb
loopne
lea
and
enter
mov
pushf
aam
or
cld
push
lea
pop
xchg
mov
mov
mov
les
insb
xchg
in
dec
add
jnp
pop
mov
inc
out
xor
dec
xchg
lret
movsl
imul
lods
popa
and
sub
faddl
test
xchg
aam
xchg
mov
enter
dec
in
icebp
inc
and
shlb
mov
dec
aam
or
int3
hlt
xor
xor
out
mov
imull
leave
movsl
js
jg
scas
xorl
mov
pop
pop
push
daa
lcall
sbb
push
jg
bound
push
push
push
inc
cmp
call
aad
or
imul
ljmp
iret
xchg
pop
shlb
testb
pop
inc
cwtl
sub
repnz
scas
test
push
xorb
int3
mov
and
inc
in
outsl
xlat
cmp
gs
mov
cmp
loopne
clc
das
lea
test
add
outsl
mov
lret
push
cwtl
xchg
and
or
repnz
int3
inc
cmpsl
sub
ss
or
popf
adc
add
jbe
pop
pop
sub
mov
dec
call
cmp
dec
pop
in
mov
sti
lret
adc
sub
and
pop
loop
ds
xor
ja
push
adc
test
mov
ja
sub
jne
scas
mov
shlb
decl
mov
test
jbe
ficompl
call
jg
aaa
xchg
inc
pushf
add
popa
or
mov
mov
popa
pop
mov
add
xchg
add
pop
popa
rcrl
dec
xorb
xchg
test
mov
cld
cmpsb
shr
out
rol
les
dec
push
adcl
test
pushl
lods
daa
outsl
or
cmc
cmpsb
xor
sbb
inc
push
xrelease
mov
lahf
das
nop
ja
or
add
rcll
sub
mov
pop
lods
rcll
mov
aad
lods
shrl
rorb
mov
jnp
sub
imul
mov
dec
xor
testl
pop
addr16
or
jnp
add
mov
jo
test
sub
fs
cmp
movsl
call
stos
rcll
scas
aaa
xchg
mov
pop
sbb
cmp
xchg
mov
pop
cmp
sbb
pop
clc
inc
leave
pop
push
mov
pushf
popa
pop
test
popf
js
sahf
sub
cmp
shl
mov
mov
aam
test
push
mov
push
inc
add
pushf
and
in
cmp
jle
jl
xchg
pop
arpl
scas
lds
cmp
jne
int
jl
lods
into
inc
lock
push
ds
sub
popf
shl
inc
cmp
stos
push
jge
mov
lea
jno
mov
mov
js
adc
pop
out
dec
fimuls
fwait
out
mov
jb
lret
adc
cmp
and
xor
fadds
dec
adc
and
pushl
mov
cmc
jns
push
xlat
xchg
test
sub
cs
mov
sub
push
shll
add
scas
lea
in
or
cmovno
movsb
push
push
dec
add
mov
loop
and
lods
lcall
data16
repz
mov
xor
das
in
xor
addb
pop
mov
inc
dec
add
mov
cli
xchg
add
ss
jbe
pusha
fisttpll
arpl
or
pop
stos
les
mov
pop
add
mull
lcall
jle
adc
addr16
mov
aaa
jno
jne
cmp
add
aam
push
pop
daa
scas
data16
sbb
cmp
jge
or
cmpsb
cmpsb
notl
bound
push
sbb
popf
adc
jl
cmp
inc
push
xor
repnz
jecxz
outsb
jbe
push
mov
mov
shll
ja
stos
aam
and
or
aas
pop
or
inc
adc
mov
cmp
aam
push
xchg
out
or
lea
lcall
scas
xchg
push
mov
xor
daa
fists
xchg
fwait
mov
scas
jmp
push
and
aam
ja
js
add
pop
aas
mov
mov
iret
xor
jecxz
xor
or
out
in
add
jo
add
lea
cmp
inc
in
cmp
mov
cmpsb
cmpl
nop
mov
pop
js
xchg
or
repnz
add
adc
fdivs
jmp
imul
stos
sbb
out
call
int3
aas
jnp
imul
int3
in
in
pushf
mov
shr
addb
xchg
mov
aas
int
fs
test
iret
inc
pop
stos
enter
sub
std
ljmp
xchg
adc
test
adc
daa
cld
fwait
push
lret
inc
push
cmc
sahf
mov
dec
jecxz
rcl
mov
aas
in
inc
cld
mov
mov
sahf
jnp
test
mov
fistpl
icebp
cli
inc
fstpl
xchg
cmp
cli
and
adc
mov
mov
push
mov
mov
add
pop
pop
pop
lahf
mov
shlb
movsb
mov
ficompl
mov
lret
sub
gs
sbb
inc
out
or
fcompl
outsb
push
add
ljmp
mov
sbbb
xchg
int3
mov
add
fmuls
adc
mov
mov
repnz
fcmovu
aaa
inc
gs
ret
mov
add
mov
idiv
ret
jle
sub
xchg
xor
insb
sahf
jge
mov
scas
add
cld
jl
cmp
xchg
cmp
cmp
jns
scas
loopne
cmpsl
sti
ss
jae,pn
xor
xchg
fdivr
call
insb
adc
jge
xor
sub
and
jge
add
movsl
push
mov
and
xchg
js
outsb
fstps
imul
push
sti
xor
push
jns
or
sbb
xchg
clc
cmp
arpl
push
pop
dec
push
pop
sub
mov
mov
push
wrmsr
or
rcrb
xchg
mov
adc
mov
repz
cmp
inc
jge
fnstenv
inc
pushaw
push
jp
push
jb
lcall
cmpsb
cmp
mov
loope
sub
cwtl
repnz
mov
mov
xchg
fucomip
movsb
mov
out
scas
adc
mov
dec
roll
iret
ljmp
cld
push
movsl
shll
pop
mov
mov
cld
cli
call
sbb
ret
lea
outsl
and
adc
out
out
mov
fwait
lret
pop
loop
cmp
scas
xor
cwtl
mov
add
outsb
add
or
sbb
add
xor
cmp
shl
ja
add
push
pop
xchg
fsubs
mov
cli
jle
loope
xor
test
push
xchg
push
mov
cmp
loop
icebp
lahf
movsl
ljmp
das
movsb
add
fdivl
cld
lds
jno
jecxz
rolb
clc
mov
push
test
lds
lahf
jp
mov
dec
loope
dec
std
xor
push
jg
inc
pop
sbb
jmp
sbb
jl
into
sub
leave
int3
push
sub
aaa
lods
pop
test
aas
scas
push
jmp
cmpsl
daa
out
adc
mov
inc
fsts
shrb
cmp
xchg
das
push
inc
clc
mov
sub
lret
sbb
out
adc
rol
add
into
mov
mov
imul
cwtl
incl
cmove
hlt
in
test
mov
lea
mov
nop
sbb
mov
push
out
stc
or
lret
lcall
and
outsl
idiv
lcall
incl
lcall
mov
iret
pop
inc
hlt
jo
or
xchg
mov
fwait
gs
daa
cmc
dec
imul
push
in
jbe
mov
ljmp
or
mov
stc
sbb
sbb
fwait
xchg
testb
aas
xor
out
rorb
fwait
leave
movl
pop
mov
push
movsb
xchg
jnp
ficoml
pop
mov
stos
pop
mov
dec
sbb
stc
cmp
aad
cli
fs
mov
iret
jb
xchg
adc
and
mov
aas
fwait
inc
inc
xchg
mov
and
jnp
pop
inc
xchg
mov
pushf
inc
xchg
adc
mov
or
stc
push
and
add
sbb
mov
test
adc
xor
rol
arpl
jnp
test
idivl
sub
mov
fst
imul
ffreep
call
aaa
pusha
push
push
mov
outsb
sub
push
sbb
add
test
pop
or
sub
cld
dec
test
pop
xchg
stos
or
sub
sub
sbb
pop
test
xchg
cli
dec
jle
or
mov
repz
pop
aas
sub
sbb
cmpsl
xchg
mov
add
loope
clc
pusha
sbbb
addb
fsubl
cmp
push
sub
pushf
in
jge
mov
das
in
cli
pushf
inc
lahf
leave
dec
test
out
cltd
stos
jg
cs
outsb
pop
nop
xor
or
aas
jmp
enter
push
dec
xchg
xchg
sbb
or
loope
jge
lods
xchg
gs
shrb
gs
idivl
lds
jmp
out
inc
out
cltd
pop
mov
inc
sti
frstor
sbb
sahf
jle
aam
flds
xor
repnz
mov
xchg
iret
sbb
and
sahf
call
xchg
stos
les
adc
mov
sbb
in
mov
lret
mov
popl
aad
lds
jno
cmc
fisubl
cli
pop
sbb
aam
in
inc
pop
stos
pusha
mov
mov
add
clc
sti
cmp
sbb
lea
idivl
xor
xchg
test
or
jns
jbe
outsb
loop
aam
mov
jge
movsb
scas
add
sub
inc
xchg
mov
pop
inc
lods
sbbl
or
clc
in
inc
in
pand
sub
fmull
xchg
je
push
mov
xchg
imul
xchg
fistps
out
and
pushf
dec
push
push
shlb
jmp
sbb
inc
jg
testb
fisubs
lock
xchg
out
cwtl
xor
xchg
lods
sbb
mov
int3
hlt
cmpsb
sbb
jle
daa
mov
loope
push
mov
cs
mov
in
or
xchg
push
sbb
mov
sbb
inc
fbld
rclb
jno
sub
in
dec
jnp
sub
cwtl
or
fldenv
push
mov
movsl
sub
and
add
clc
cmpsb
fxch
mulb
ret
push
push
scas
shrl
jl
and
movsb
jb
pop
repz
mov
fisubs
or
dec
push
adc
lcall
in
loop
push
inc
das
push
subl
jb
adc
dec
ja
je
xor
rorb
cmp
push
sub
lret
iret
imul
pop
test
xor
xchg
cmp
shl
mov
fists
sbb
sub
mov
pop
dec
or
lods
jmp
xor
and
add
mov
sahf
inc
stos
jae
shlb
ss
adc
add
ret
xchg
or
test
mulb
mov
out
xadd
pop
or
jl
ficoms
repnz
nop
push
xor
mov
push
stos
in
push
add
mov
add
push
dec
cmp
int
dec
insb
sbb
mov
and
aad
cmp
je
pushf
roll
mov
ds
mov
mov
push
mov
pop
xchg
fcompl
and
xor
sbb
inc
mov
push
gs
xchg
sub
mov
stos
or
push
dec
mov
outsl
sti
mov
dec
popf
xor
pop
call
leave
incw
and
or
add
pop
fmull
lcall
popf
iret
adcb
pop
or
loop
dec
pop
pop
sarb
xchg
cwtl
clc
pushf
sti
xor
lret
stos
stc
test
add
roll
push
cmpsb
rcrl
jb
fsubp
rdmsr
sbb
scas
cmc
or
add
xor
push
js
add
mov
stos
lret
push
push
pop
push
fsubrl
cli
sub
sub
popa
push
stc
in
mov
test
mov
adc
fiadds
mov
popa
jl
mov
orl
dec
mov
inc
int
inc
dec
xchg
icebp
jnp
das
and
mov
icebp
aad
jecxz
bound
push
adc
fdiv
fadds
test
mov
adcl
lock
xor
mov
into
sarl
jbe
xor
or
add
cmc
cmp
xchg
dec
call
add
inc
add
xchg
aad
bound
jae
cltd
jb
add
adc
ret
test
int3
ljmp
inc
push
pop
dec
nop
out
cmp
test
insl
lea
rolb
sub
jge
push
mov
aas
cwtl
xor
inc
adc
das
push
push
push
fsubrl
dec
cld
ret
mov
andl
test
xchg
ljmp
mov
or
sub
mov
sbb
mov
loopne
jecxz
cld
jle
inc
push
enter
dec
shrb
pop
sub
loope
movsl
add
cltd
lds
mov
js
call
inc
jl
inc
jne
out
dec
scas
add
loope
stos
mov
xchg
adc
xor
daa
jno
mov
add
xorl
pop
inc
jle
repnz
cmpsl
or
lods
jb
cmpl
sbb
pop
aad
mov
ficompl
subl
cmp
or
jne
loopne
aaa
and
push
repz
jo
sub
insb
xchg
out
mov
cmp
sub
inc
jbe
stc
mov
sbb
test
loope
mov
jo
and
or
jns
daa
movsb
fstps
das
cmpsb
imul
faddl
pop
inc
cmpsl
pop
cli
ds
mov
push
mov
fprem
xlat
or
push
fmul
fdiv
mov
movsl
mov
or
push
fcompp
nop
cs
ljmp
cltd
dec
jne
pop
mov
xchg
mov
add
ljmp
fstl
mov
jge
or
jl
std
adc
es
hlt
fists
insb
inc
add
cmp
cmc
aam
pop
sti
jae
hlt
movsb
aaa
lods
cvttps2pi
adc
dec
mov
jb
out
push
imul
out
cmp
mov
push
push
inc
decl
stc
bound
les
add
adc
mov
pop
pushaw
nop
mov
daa
cli
std
jp
sbb
push
sbbl
movsl
lds
gs
data16
sub
fdivrl
sbb
fs
cwtl
cs
jns
dec
int3
mov
mov
jb
xlat
pop
inc
mov
sbb
sub
call
sub
mov
in
ljmp
jp
dec
mov
insl
inc
bound
dec
xchg
cmp
pusha
and
popf
push
push
jae
push
fstpt
cwtl
cmp
inc
inc
mov
repz
mov
mov
enter
sahf
adc
movsb
aas
jne
mov
pusha
push
pop
pop
test
sbb
je
xchg
push
jge
incl
mov
shll
add
rolb
push
sub
cmp
add
imul
faddl
fstpt
iret
pop
fs
int3
mulb
sub
jl
jne
cli
sbb
movsb
xchg
and
add
xchg
mov
mov
movsb
mov
sahf
push
outsb
mov
adc
popf
sbb
or
enter
cmp
or
or
mov
dec
aam
or
mov
mov
mov
xor
outsl
int3
and
pop
inc
test
test
and
lcall
adc
and
add
cmp
cmc
test
das
lods
push
mov
and
nop
scas
mov
out
cmpsl
loope
fbld
dec
fnstenv
jns
jge
push
icebp
jl
or
cmp
out
and
orb
loopne
ret
pop
lea
dec
out
sbb
sbb
mov
push
imul
sbb
popa
xchg
jecxz
lcall
and
push
mov
cwtl
imulb
or
aad
jbe
pop
xchg
loope
outsb
repz
cmp
sbb
popa
or
cmp
ficompl
unpcklps
popf
jl
stos
int
sbb
insb
mov
mov
jg
xor
cmp
add
pop
mov
lahf
sbb
add
push
and
jbe
cmp
jle
dec
bnd
sub
xchg
lret
jmp
ret
into
jge
lds
pop
loopne
jbe
stc
out
arpl
fcomi
mov
sub
mov
sbb
sbb
mov
fwait
sub
xchg
dec
nop
xorb
clc
mov
sti
mov
dec
pop
hlt
pop
orl
push
rep
jecxz
or
ret
hlt
push
lock
cmp
sub
xchg
pusha
movsl
pop
mov
movsb
insl
call
shl
xlat
iret
dec
mov
sub
in
add
orb
inc
adc
stos
movsb
test
shrl
movsb
adc
mov
pop
stos
inc
test
fcmovne
fimuls
jae
cmpsl
icebp
mov
stos
xchg
cmp
dec
cmp
repnz
add
inc
xlat
xchg
imulb
pushf
ret
add
stc
out
mov
jnp
lcall
js
cmp
sbb
ss
fmull
cs
fisubrl
std
popf
int3
mov
pushf
divb
cmpsb
mov
mov
leave
jecxz
sub
add
mov
arpl
lods
cmpsl
lods
pop
cltd
lret
cmpsb
or
inc
xchg
adc
dec
jl
out
and
push
and
test
jno
inc
push
mov
popa
insb
nop
xchg
stc
pop
mov
ds
or
push
outsl
mov
xchg
sahf
push
push
test
and
fwait
movsb
jns
loopne,pt
rorl
push
xlat
mov
lret
and
fcmovnb
lods
mov
movsb
jne
aam
fidivs
sub
dec
push
ret
and
imul
mov
fisubrs
sbb
sub
call
movsl
push
outsl
pop
es
sbb
fsubs
xorl
mov
cmp
mov
es
pop
mov
movsb
pop
push
fisubrl
mulb
dec
pushl
adc
dec
xchg
std
mov
mov
jg
lods
out
into
lods
mov
and
cltd
push
inc
in
mov
ljmp
jge
jo
inc
movsl
xor
pop
jae
xchg
mov
cmpsl
dec
jl
mov
xor
add
sbb
inc
sbb
nop
xchg
rcrb
orl
popf
cmp
mov
and
fwait
hlt
cmpsl
pusha
gs
mov
and
nop
jge
cld
sub
fmuls
xchg
inc
xlat
jo
and
outsl
test
data16
xor
andb
mov
jl
pop
cmp
dec
pop
and
js
insl
mov
cmpsb
cmp
iret
rcrb
cmp
xchg
outsl
jge
push
std
adcb
and
fnstenv
insl
jl
rcll
jl
cmp
lcall
and
sbb
mov
mov
push
mov
cmp
ffree
fildl
adc
stos
mov
xor
mov
movsb
cmp
jg
jne
out
fsubrl
dec
sbb
lret
out
loop
push
nop
sub
fistpl
repnz
lret
jle
jo
out
jmp
dec
outsb
and
fildll
sbb
xor
sbb
xchg
adc
stc
out
out
icebp
pop
cmp
mov
mov
xchg
outsl
xor
jl
sbb
xchg
pmaxub
sbb
in
imul
cmp
inc
xchg
adc
and
fdivrl
ret
inc
lock
jp
mov
cld
mov
cmp
cmp
andl
into
cmc
push
insb
cltd
inc
pusha
mov
stos
push
xor
ljmp
mov
jecxz
mov
iret
movb
call
imul
es
or
pop
aaa
ficompl
adc
pop
push
stos
pop
imul
sbb
movsl
dec
test
and
and
sarb
push
xor
mov
movsl
push
js
jecxz
and
jg
fdiv
inc
mov
adc
push
and
jl
stos
clc
stos
scas
addl
or
cli
lcall
xor
cmp
push
aas
scas
mov
push
divb
std
rorb
stc
cmp
imul
sbb
push
popf
pop
shrb
cmp
pop
dec
jp
aas
ret
lods
inc
jl
clc
sbb
push
in
adc
enter
rcll
cmp
mov
pop
xor
xor
je
xchg
insl
mov
mov
xor
jmp
xchg
cltd
and
cmpsl
pop
push
gs
movsb
inc
adc
in
jo
mov
out
sbb
add
push
dec
es
loopne
adc
in
or
inc
mov
rcrb
test
shlb
push
mov
in
fdiv
mov
daa
cs
pusha
xchg
xchg
add
jl
mov
ror
insl
sbb
cmp
mov
aas
pop
or
push
push
pushf
add
scas
and
mov
dec
test
pop
and
pusha
adc
js
or
xor
enter
mov
test
aaa
sbb
rolb
insl
rcr
scas
hlt
lods
daa
rcll
popf
lods
jg
leave
xchg
xchg
mov
int3
mov
popf
xor
lock
push
xchg
sub
cli
popf
outsl
inc
or
push
in
mov
loope
mov
pop
and
or
mov
popa
loop
ds
lods
cli
ret
or
in
and
xor
jge
cmc
or
imul
cli
cmpsb
cmpb
mov
aas
inc
xchg
or
loop
loope
insb
dec
adc
icebp
push
cmp
jl
ret
imul
stos
pop
inc
pop
stos
aas
divb
loop
pop
xchg
je
push
test
mov
fistl
outsb
call
andl
in
and
dec
adc
stos
xchg
inc
push
xlat
out
add
test
xchg
sbb
mull
aad
filds
shrb
fstpt
lahf
aaa
jge
inc
lcall
mov
cltd
dec
pop
dec
ss
fnstsw
mov
xor
pushf
xor
push
xor
insl
popa
stc
in
ja
lods
xchg
leave
scas
mov
xchg
jo
cli
sub
mov
lods
mov
sub
lods
jecxz
ret
pop
das
add
push
xor
arpl
out
inc
rcrb
xchg
xchg
cmp
loope
jb
jnp
sub
adc
push
mov
cwtl
xchg
and
xchg
dec
or
scas
out
xor
shrl
divl
sub
mov
imul
jno
adc
sub
in
and
pop
jbe
xor
or
div
pop
mov
outsl
pusha
inc
lock
out
sub
push
sbb
pushf
insl
addl
inc
mov
imul
sbb
adc
sbb
jno
and
in
fiadds
shll
push
sbb
mov
push
pusha
mov
mov
mov
sbb
scas
jecxz
cmp
push
mov
cmp
push
dec
pop
jecxz
inc
pop
jp
lcall
and
xor
mov
mov
iret
mov
add
dec
mov
xchg
push
loopne
mov
lods
bound
sahf
sub
push
loopne
dec
data16
push
mov
sub
dec
clc
jne
mul
sub
jo
mov
jo
pop
xor
nop
dec
mov
popf
xchg
sub
gs
jle
and
mov
jmp
cmp
cwtl
out
test
leave
and
pop
add
je
lcall
pop
push
es
sti
aad
in
sbb
mov
scas
cltd
ret
cmp
xchg
fcoml
mov
pusha
popf
pop
mov
sbb
sbb
pop
mov
out
cli
cmp
jg
test
and
popf
adc
in
frstor
sub
test
dec
push
inc
adc
test
lahf
push
push
sbb
jo
notb
popa
sahf
pop
inc
test
xlat
addr16
mov
and
iret
sub
xchg
sahf
xor
cmp
push
pop
or
mov
stos
push
mov
fdivs
imul
fs
jo
pop
lock
sub
icebp
inc
sahf
push
fld1
in
sahf
lahf
outsl
and
push
sbbb
mov
lahf
dec
clc
dec
popa
add
repz
test
mov
cmpsl
lahf
inc
and
popa
notl
enter
es
sbb
dec
xchg
insb
subb
jno
add
std
sti
sbb
jno
and
ret
in
fstps
pop
sbb
push
test
fisttpl
loop
popfw
inc
call
mov
loop
lret
lods
jbe
lret
mov
or
adc
xchg
push
mov
xor
movsl
in
aam
rcrb
or
in
fwait
dec
xor
xor
ds
adc
adc
cmpsl
popf
mov
mov
cmpsl
push
and
adc
ficoml
xor
pushf
push
cmc
add
mov
outsl
jns
lcall
inc
in
leave
test
add
std
sbb
loop
je
sbb
insb
fst
outsb
int
js
push
jecxz
adc
sbb
repnz
jne
fadd
inc
testl
xchg
push
mov
pop
adc
jne
lock
jno
enter
mov
movsl
fcmovnu
mov
jle
lock
in
dec
lock
adc
shrl
jbe,pn
sub
pop
inc
rorl
xchg
in
int3
mov
lahf
mov
cwtl
cmc
mov
into
mov
and
dec
out
mov
rcr
fwait
dec
les
pop
mov
fs
popa
daa
lahf
jl
test
xor
mov
mov
fndisi(8087
dec
outsb
fldl
xlat
xor
std
xchg
daa
push
enterw
test
in
inc
pop
sub
adc
call
mov
mov
xor
imul
pop
cmpsb
in
jle
roll
sbb
or
aas
xchg
jmp
xor
cltd
push
sub
hlt
pusha
jno
dec
adc
fdivrl
popf
xor
pop
jne
in
adc
sbb
push
in
xchg
pop
movb
pop
out
hlt
pusha
xor
pop
or
jae
or
push
les
ja
scas
push
adc
ret
adc
call
push
cmp
sbb
add
jae
adc
cmc
add
mov
pop
clc
in
call
adc
add
sub
sub
xor
in
mov
stos
cli
and
push
mov
scas
xorb
lret
les
lock
jns
loope
loopne
inc
jmp
in
jns
pushf
movb
xor
mov
fidivrs
add
adc
arpl
ficoms
imul
pop
and
xchg
ds
mov
test
mov
xor
ja
fs
jae
nop
mov
pop
rorb
arpl
imul
add
cmp
sbb
ljmp
inc
jnp
ja
jno
cwtl
jge
jg
insl
push
push
cmpsb
lods
xor
cmpsl
fsubl
jg
mov
fldl
sbb
sbb
mov
dec
dec
mov
pop
xor
int3
jne
popf
test
cmpsb
lods
jo
mov
dec
fs
xor
dec
push
lret
cli
fsubs
fmull
pop
out
jle
xor
dec
insl
hlt
mov
sbb
das
jo
cmp
dec
mov
pop
outsb
into
adc
and
in
cwtl
xorl
or
or
inc
jle
and
cmpsl
ja
ss
mov
and
sub
ret
dec
mov
add
ss
jl
aad
adc
jle
jne
test
jge
pop
test
mov
cmp
pop
dec
add
push
and
insb
jnp
in
cwtl
testb
inc
cld
ss
aam
or
bound
insb
stos
out
add
pop
and
ja
mov
in
inc
pop
sub
outsb
xor
lcall
cld
add
push
in
xchg
leave
lahf
xchg
sbb
out
sub
mov
or
ljmp
and
sbb
popf
fmull
ds
cmp
pop
xchg
cmp
or
mov
inc
sub
xchg
imul
or
xor
adc
adc
dec
mov
test
dec
in
cltd
xchg
cmp
xor
pop
fldl
push
in
notw
mov
jo
cltd
adc
out
push
outsb
and
fcomps
insl
insb
cmp
dec
jp
push
mov
cmp
outsb
repnz
inc
and
pop
decb
xor
xchg
roll
push
add
movsb
pop
int
pop
int3
add
dec
mov
cmp
lods
mov
mov
push
xchg
add
cmp
movb
push
pop
je
jnp
cwtl
jne
push
mov
mov
imulb
js
mov
jle
mov
out
adc
inc
inc
jb
repnz
mov
adc
jl
not
xlat
inc
adc
jns
mov
xchg
mov
pop
jmp
sti
aad
int3
stc
fs
aam
mov
ss
adc
fmull
out
jp
inc
add
negb
rolb
and
mov
adc
jle
xchg
and
repnz
adc
pop
stos
enter
ss
dec
aad
cs
cld
jae
mov
xor
cli
pop
fcmove
stc
push
or
test
mov
xor
ret
push
adc
xchg
pop
push
pop
into
iret
mov
xor
imul
fbld
mov
sti
loop
jno
push
cmpsb
ss
mov
jecxz
xchg
sbb
mov
xchg
divb
or
cmp
aas
push
pop
sub
or
fdivrp
mov
mov
mov
mov
call
fdivr
and
cmp
push
mov
insl
inc
dec
scas
dec
icebp
aam
add
stos
sbb
mov
push
sbb
sub
aam
jge
push
adcl
cwtl
fdivl
and
movsb
cs
daa
and
hlt
ret
cmp
insb
adc
or
outsl
or
cld
xchg
pushf
ficompl
add
jg
js
call
xor
je
push
push
sbb
aaa
jge
stos
loopne,pt
mov
or
enter
mov
test
gs
aas
push
dec
lock
jge
cs
adc
jnp
mov
cmp
lods
sbb
lods
fcmovnu
imul
mov
cmc
or
pusha
lods
dec
movsb
jnp
insl
in
flds
pop
dec
jp
cmpsb
mov
insb
jle
stc
push
or
ret
mov
or
pop
loop
fstps
nop
cmp
xchg
repz
dec
in
mov
add
orb
ljmp
fcoml
mov
daa
inc
pop
mov
mov
mov
popa
mov
lahf
add
je
loopne
cmp
ja
lea
sub
mov
pop
fs
push
push
pop
inc
ljmp
xor
filds
mov
inc
mov
daa
jp
roll
test
inc
sub
mov
mov
jmp
inc
loopne
jmp
pop
int
sbb
insb
xor
and
idivb
xor
push
popa
sub
call
mov
cmp
xor
cmp
cmp
data16
xchg
les
pop
inc
loope
fadds
mov
inc
inc
test
lret
add
ss
les
pushf
fstl
lds
out
mov
sbb
dec
or
add
lahf
arpl
inc
jmp
popf
bound
jecxz
dec
nop
mov
pop
call
cmp
pop
mov
nop
std
xchg
xorl
pop
mov
aas
pushf
out
out
rolb
cmp
imul
aam
push
cmpsb
xchg
fcmovb
test
cmp
mov
fdivrs
xchg
popf
mov
andl
test
mov
sbb
push
daa
cmp
sbb
in
dec
mov
idivl
cmp
in
lret
inc
lea
pop
fwait
dec
sub
mov
xchg
push
mov
sti
sbb
or
mov
fidivrl
mov
nop
dec
mov
and
adc
outsb
push
mov
sbb
xchg
mov
push
imul
jp
mov
or
jnp
lock
mov
pop
cmp
movsb
cli
and
jo
fidivl
pop
mov
pop
add
js
jo
inc
push
push
lahf
mov
sub
mov
xor
mov
stos
enter
jno
loopne
cmp
test
out
in
or
ret
or
ret
pushf
loope
sub
xchg
xchg
xlat
sub
inc
dec
aad
scas
or
int3
out
dec
cmp
mov
add
xor
in
je
push
push
mov
repnz
mov
int3
sbb
je
push
loopne
cmp
sbb
mov
nop
loopne
mov
sub
sbb
ss
xchg
adc
sarb
testl
sub
sub
dec
xchg
push
fnsave
xchg
xchg
loope
in
pop
lds
jg
add
and
or
incl
pop
cmpsl
xchg
cmp
test
scas
ret
sbbl
out
lods
xlat
pop
scas
out
xchg
mov
xchg
gs
jmp
sub
test
in
xchg
inc
dec
loop
fs
xlat
mov
insl
gs
vcvtps2dq
sarl
and
inc
mov
fnstenv
add
int3
fmull
pop
xor
into
jle
push
rcrb
fdivrl
pop
icebp
aas
mov
sbb
sbb
iret
xchg
leave
icebp
xchg
rorl
fiadds
jno
push
lea
ja
ljmp
sbb
stos
in
xorb
loop
push
loope
lret
and
pop
inc
sbb
push
ret
repz
adc
inc
xor
js
pusha
pop
mov
push
mov
and
in
lea
jl
jmp
cmp
pop
jecxz
and
push
push
add
lods
pop
ja
int3
mov
and
mov
cmpsl
xchg
lods
dec
xor
cmp
nop
add
fbstp
or
std
gs
or
mov
dec
xchg
sbb
adc
pop
dec
dec
cmp
xor
mov
insb
movsb
mov
ficoml
fiadds
call
into
pushf
lods
imul
or
rorb
add
xchg
and
orb
push
outsl
xlat
mov
mov
inc
stc
or
sub
inc
and
jo
imul
ds
xchg
das
and
mov
cli
mov
negl
mov
and
popa
mov
inc
es
xchg
cmp
ret
out
js
daa
stc
add
sub
and
fwait
dec
adc
dec
dec
push
sub
cwtl
sub
repnz
in
cmp
sbb
inc
iret
cmpsb
adc
jnp
sbb
or
pop
mov
xchg
xchg
xor
in
mov
gs
shr
out
packuswb
push
clc
stc
mov
loop
cltd
nop
int3
mov
or
push
enter
inc
push
pop
shlb
adc
pop
jmp
dec
inc
jne
mov
lret
adc
push
lods
xchg
jbe
cmp
xlat
add
mov
shrb
inc
pop
negl
push
dec
cmc
das
icebp
jb
xchg
ss
push
dec
notb
sub
pop
dec
jo
mov
movsl
sti
bnd
or
lcall
adc
sbb
jecxz
outsb
fdivrs
xchg
leave
iret
outsl
add
in
pop
jp
ss
mov
jp
adc
pop
jb
sbb
add
mov
inc
mov
xchg
jl
insl
negb
pop
dec
leave
lea
pop
or
xlat
stos
sbb
mov
lods
insb
repnz
loope
lea
dec
push
dec
in
jg
add
sub
push
sbb
psubb
gs
jg
inc
and
lods
lds
das
adc
jno
mov
stos
aam
sbb
lods
into
inc
enter
add
ja
xchg
cmp
fdivrl
fcoml
cmp
mov
jl
inc
fsubl
push
dec
mov
mov
popf
dec
gs
pop
add
and
lret
xchg
pop
dec
icebp
xor
lock
fstpt
inc
icebp
cmp
cmp
into
sti
hlt
push
pop
inc
jbe
data16
dec
dec
push
stc
cmp
sbb
jg
jae
sub
insb
jmp
inc
fs
orb
stos
mov
aad
es
jno
push
cmp
xor
ds
adc
loope
fldl
cmpsb
sbb
cmp
test
mov
xchg
cli
sahf
push
mov
jne
mov
shl
xor
sbb
add
dec
xchg
adc
repz
popf
adc
jne
rcrb
adc
out
jns
loope
mov
or
mov
or
cmp
and
aaa
mov
mov
dec
daa
dec
push
int
lods
add
shrb
xchg
adc
mov
data16
setp
dec
mov
jbe
inc
test
fxch
outsb
pop
xchg
imul
rorb
add
sbb
out
loope
aad
sbb
std
cmc
xchg
sub
or
jmp
pop
cwtl
xlat
enter
adc
jnp
movsl
push
sub
sbb
and
push
les
xor
in
or
dec
pop
test
dec
push
pop
jbe
xor
lahf
stos
rcrb
out
arpl
daa
into
cmp
pop
insl
test
aad
clc
mov
cmp
dec
xchg
cmp
mov
xor
imul
xor
int
es
fsub
mov
inc
leave
lods
dec
outsb
mov
mov
test
and
es
mov
icebp
call
adc
scas
movl
outsb
adc
hlt
adc
cmp
or
fs
fstpt
movsl
daa
pop
sbb
cmp
jae
xor
daa
and
or
adc
hlt
repz
cmp
imul
inc
test
mov
mov
xchg
inc
dec
aas
dec
or
mov
add
shr
mov
outsl
sbb
push
sub
xor
loop
lea
push
andl
test
sub
xchg
ja
inc
stc
sti
in
divb
lods
mov
sub
jmp
or
int
sbb
mov
cmc
inc
mov
lods
dec
mov
rcrl
mov
mov
xchg
dec
sub
xor
push
dec
addl
repnz
jmp
es
cmp
out
out
sbb
in
or
leave
sub
insb
aas
adc
push
testl
adc
mov
mov
fcmovnb
out
movsb
dec
sbb
lret
adc
gs
mov
cmp
sbb
or
mov
mov
push
ret
inc
mov
mov
outsb
sbb
jl
test
imul
int3
sbb
sti
inc
ret
mov
cli
shl
inc
sub
mov
out
ret
test
lock
subb
jo
cmp
pop
jp,pt
sti
out
jns
test
jle
sub
push
popf
mov
ret
push
dec
and
outsb
dec
imul
ljmp
movsb
pop
dec
xchg
inc
cmp
outsl
adc
jnp
gs
lret
rolb
cwtl
enter
mov
negb
dec
mov
scas
fstps
in
stos
sub
jmp
out
ret
fcomp
sar
mov
aas
mov
jb
dec
in
stc
setne
adc
lcall
cmc
test
mov
cmp
shll
xchg
pusha
cmp
lock
call
scas
pop
shrl
pusha
cli
mov
rcrb
xchg
mov
popa
adc
sahf
pop
bound
jae
add
mov
popa
mov
test
xor
and
out
lret
aam
add
stc
insl
add
push
dec
jge
jle
and
ss
aad
fidivrl
push
add
xchg
mov
pop
fwait
xchg
dec
hlt
test
sub
sbb
add
sbb
jle
cmp
mov
adc
push
cmp
jbe
inc
daa
loopne
inc
ja
inc
xor
mov
jno
and
inc
lret
mov
mov
cli
daa
int3
push
jmp
call
mov
in
outsb
xor
cmp
cmp
cwtl
int
inc
sbb
je
sub
outsl
mov
inc
outsl
add
in
sti
push
mov
dec
mov
mov
cmp
dec
inc
pop
mov
lret
adc
dec
sub
testb
es
inc
cmc
mov
sub
jl
adc
push
xor
add
divb
adc
or
mov
bound
jmp
cld
or
js
stc
cli
adc
push
xor
lods
or
mov
cmp
stos
or
or
sarb
cmp
xchg
push
lds
fistpl
icebp
mov
in
movsl
and
hlt
mov
mov
outsl
out
inc
sti
fcmovne
pop
ficoml
dec
pop
xchg
push
mov
mov
in
out
jmp
xchg
idivb
imul
clc
lds
xchg
fstpt
and
xor
out
add
adc
outsb
arpl
pop
dec
push
ds
xor
xchg
cmp
mov
sbb
add
popf
sbb
fs
mov
dec
add
push
sub
es
nop
sbb
xchg
out
dec
cmp
outsl
sub
cld
outsb
cs
dec
push
add
sub
xorb
inc
jl
or
and
hlt
adc
inc
add
mov
xchg
pop
push
ds
mov
fidivl
inc
fisttps
outsb
dec
wrmsr
sub
xor
iret
int3
mov
jecxz
sub
jle
inc
or
jae
ret
push
xchg
mov
fcoml
repz
std
push
jmp
in
jl
or
loop
sbb
xchg
push
mov
pop
das
in
pop
xchg
mov
test
mov
dec
jo
into
push
dec
ficoms
addr16
adc
and
cli
in
or
sbb
mov
push
dec
std
iret
int3
jp
rcr
adc
sbb
cmp
mov
xchg
xchg
inc
scas
xchg
add
subl
sub
aad
push
dec
negb
popf
jo
and
pushl
jg
enter
mov
dec
gs
call
add
add
sub
popf
add
or
jns
mov
jle
adc
inc
fldenv
icebp
push
xor
test
or
jno
adc
dec
mov
sbb
and
in
inc
mov
insb
xor
and
test
lea
mov
lret
xor
or
sub
iret
out
add
je
sub
shrb
cmc
aam
loope
add
mov
lea
or
fisubs
das
xor
cmp
fdivrl
cmp
das
fmul
xchg
add
stos
mov
push
js
pushf
outsl
jmp
mov
insl
test
pop
or
ss
inc
je
addr16
cmp
lds
ljmp
push
pop
ss
leave
lea
push
fwait
push
dec
lcall
or
mov
add
inc
insb
lds
mov
mov
jg
xorl
push
cmp
cli
pusha
mov
sbb
mov
xor
repnz
js
testl
push
ljmp
xchg
sub
add
subb
push
cmpsl
mov
pushf
sbb
mov
imul
add
cmp
pop
ds
and
ficoml
mov
adc
mov
int3
insl
mov
push
lret
adc
lock
and
movsl
jp
or
outsl
jbe
xor
sbb
sbb
ret
and
or
aad
mov
out
push
inc
and
jl
mov
arpl
lods
lcall
sub
insb
into
inc
dec
jp
cli
mov
dec
dec
pop
sub
dec
cwtl
or
jnp
or
addr16
mov
hlt
ffreep
adc
cmpsl
push
std
mov
pushf
imul
fs
stos
andb
inc
cmp
fisubs
xchg
add
loop
adc
fbld
out
xchg
xor
lods
les
push
cmp
mov
mov
sub
pop
jecxz
jge
or
sub
pusha
sbb
mov
insl
psubusb
add
sub
in
das
mov
sbb
stos
xchg
sub
cmp
push
xchg
test
add
das
sub
inc
push
ss
inc
mov
sbb
idivl
mov
jl
sub
loop,pt
inc
mov
cmp
imul
sub
sarl
sbb
cmp
push
pop
xor
add
movl
xlat
xchg
cltd
mov
push
inc
inc
inc
mov
leave
mov
add
movsb
jo
sahf
adc
iret
loop
sbb
inc
insl
pop
das
and
pusha
icebp
loopne
xchg
test
dec
sbb
pusha
out
jo
inc
scas
clc
das
xor
into
inc
mov
rcrb
xor
scas
sub
add
xor
adc
jp
insb
add
data16
sbb
cwtl
add
pop
xchg
lcall
repz
mov
add
sarb
out
add
or
aaa
jmp
mov
xor
push
aam
adc
sbb
in
inc
pop
mov
adc
pop
fcmovnbe
mov
repnz
cli
jl
in
shlb
jmp
mov
jl
jmp
cmp
dec
fs
or
icebp
aad
andb
push
mov
scas
add
and
icebp
dec
invd
fisttpll
cmp
arpl
inc
xchg
push
sub
aas
sub
sub
jns
and
jl
xlat
imul
mov
xor
jnp
add
inc
adcb
movl
or
lods
jne
jmp
cmc
add
fs
and
xor
jb
repz
movsl
or
mov
inc
dec
jae
mov
sub
std
int3
test
nop
mov
jecxz
xchg
xchg
push
es
std
dec
cmpsb
mulb
sub
inc
dec
adc
and
push
imul
push
adc
nop
push
push
cmp
xor
shll
and
ljmp
push
mov
add
dec
std
in
sbb
scas
lret
out
ret
mov
mov
cli
fs
cwtl
fwait
popa
je
dec
call
iret
imul
bound
inc
shr
out
jno
stc
sarb
mov
ja
push
xorl
xchg
inc
xchg
fs
cmp
dec
cmp
and
dec
mov
adc
div
and
dec
pop
fadd
mov
adc
xor
cmc
in
cmp
mov
repz
int
loopne
das
sbb
mov
rcrl
js
sub
cmp
les
sti
jle
jnp
sub
mov
popa
adc
loopne
movsb
dec
adc
aaa
loopne
pop
pop
push
mov
fwait
pop
mov
dec
js
popf
out
dec
pop
or
dec
rol
fdivs
mov
fimuls
or
mov
xchg
out
arpl
jb
xor
mov
mov
mov
mov
fcoml
test
or
add
mov
adc
cmpsl
xor
xchg
hlt
frstor
arpl
and
in
mov
push
jo
sti
mov
or
xchg
into
scas
add
xchg
arpl
jae
mov
sti
mov
jb
inc
shrl
cmpsb
and
adc
pop
push
or
ja
sub
cmpsl
outsb
cmp
mov
lods
mov
and
std
repz
js
ret
or
out
sbb
fucomi
daa
sub
jl
or
pop
dec
int
push
mov
divl
cmp
cs
jnp
mov
jb
call
push
lahf
popa
mov
jno
push
jle
and
dec
aas
test
xor
adc
repnz
cmp
mov
fsubl
and
jo
outsb
or
adc
mov
mov
jecxz
inc
iret
adc
xchg
add
loop
out
xor
cli
ljmp
sbb
mov
dec
xor
mov
jnp
sbb
nop
push
mov
lret
repz
ljmp
int
cmp
jl
repnz
adc
add
inc
add
push
andl
repz
fisubrl
push
mov
repnz
pop
fwait
push
outsb
and
pusha
testl
push
lock
mov
push
je
pushf
and
mov
mov
mov
rclb
mov
hlt
test
sbb
jae
or
sub
mov
xor
ljmp
xchg
cmpsl
mov
xor
mov
inc
adc
ret
icebp
mov
clc
sub
stos
sub
mov
xchg
xchg
adc
adc
mov
in
jnp
fnstsw
push
outsl
cmp
subl
xor
imul
test
dec
in
push
js
fstl
pop
inc
jnp
js
or
fisubs
and
xor
push
std
fcmovnb
iret
andb
movsl
lret
cltd
pusha
pop
stc
inc
popa
cmp
sub
out
test
xlat
pop
and
bound
push
dec
in
clc
jne
push
and
cli
pop
mov
in
dec
out
lods
hlt
fdivl
adc
out
adc
xlat
mov
imul
jbe
loope
mov
xchg
sub
jno
out
movsl
stc
lcall
fimuls
jg
addb
pop
scas
add
cmp
sbb
or
jl
push
lret
imul
mov
jno
push
dec
leave
iret
insb
clc
jl
push
arpl
mov
rcrb
out
pop
adc
fnclex
incb
cmpsl
push
popa
sub
pop
fwait
push
mov
rorl
jle
inc
ljmp
fs
imul
cmp
jmp
inc
lea
sbbl
andb
lahf
jno
mov
push
xchg
ds
in
inc
mov
dec
nop
lcall
and
out
ljmp
test
pop
jmp
test
lea
pop
or
test
fsubrs
fistps
jge
hlt
and
fstpl
dec
inc
mov
aaa
xor
mov
in
out
cmpl
mov
bound
and
les
int3
insl
test
and
fbstp
cltd
int
jb
push
or
cmp
xchg
inc
clc
jnp
mov
pop
push
mov
stc
sbb
repz
ljmp
cmp
push
cwtl
int
das
and
cmp
and
mov
pop
mov
fistl
loopne
mov
iret
xchg
xchg
push
in
xchg
sbb
stos
push
mov
mov
repz
lret
cmp
sbb
or
push
pop
mov
sbb
push
mov
mov
arpl
cli
out
rcrl
pop
in
leave
jge
adcb
pop
imul
inc
xchg
cltd
notl
decb
xchg
dec
lret
test
or
dec
std
sub
and
shlb
incl
loope
pop
xchg
mov
xor
sub
dec
loopne
mov
pusha
xor
mov
mov
aam
jmp
subl
xor
push
loope
lock
daa
fcompl
pushf
movsl
lret
push
sub
test
fildl
jmp
arpl
inc
ret
xchg
shll
shlb
outsb
inc
xchg
jmp
rcl
sbb
sbb
adc
icebp
sbb
outsl
push
push
lcall
and
xchg
cs
xchg
addr16
sbb
and
repnz
xchg
jns
aas
mov
in
or
add
mov
jae
int3
dec
out
inc
lds
movsb
pop
adc
dec
mov
jb
ret
adc
notb
dec
jmp
stc
mov
sub
divl
testb
and
shrb
jne
mov
nop
pusha
mov
ror
rorl
pop
inc
and
lods
lea
mov
lret
adc
sahf
sbb
test
jae
dec
rcll
or
cmpsl
clc
pop
fldcw
jp
out
jns
add
daa
arpl
xchg
adc
sti
mov
sarb
xor
jecxz
rcrl
jl
pop
mov
cld
das
mov
mov
push
lock
jo
jecxz
cs
ret
inc
sub
cmp
sbb
xor
rcrb
jp
pop
jae
cmp
cmp
inc
jo
xlat
push
xchg
dec
xchg
sbb
jae
xchg
mov
lock
or
jl
jp
mov
pop
sbb
push
cmp
les
fs
cmc
gs
fdivs
xchg
push
mov
jp
adc
inc
lods
and
out
adc
out
fcmovnu
mov
dec
jae
cwtl
sub
and
and
test
sti
mov
xchg
adc
xlat
pushf
xchg
push
mov
sti
rcr
or
pop
dec
or
pusha
inc
insl
and
daa
pop
add
jno
cmpb
push
inc
lea
leave
cmp
jnp
cmpsb
out
push
inc
loope
scas
popf
xchg
push
lahf
adc
ss
add
mov
jns
aam
in
mov
push
ret
dec
pushf
js
xchg
sahf
xor
cmp
repnz
add
movsb
int
neg
popf
gs
fldenv
adc
ja
push
mov
das
scas
jae
adc
push
or
pop
test
aad
cltd
dec
mov
push
push
lea
cwtl
push
ret
into
das
sub
dec
add
add
sub
int3
jle
sbb
adc
das
fwait
mov
aas
ret
jb
cli
add
sub
pop
mov
imul
cmpb
ret
fwait
in
cmpsl
iret
inc
xchg
nop
xor
iret
sbbb
jne
and
mov
push
repnz
lcall
or
enter
iret
imul
xchg
cld
aam
fs
inc
adc
in
jp
cmp
stos
loope
dec
loopne
and
mov
das
push
cmpsb
mov
dec
repnz
fsubs
and
ds
sbb
fwait
push
lret
or
shrb
call
xchg
aad
xchg
insl
pop
xchg
or
mov
pop
xchg
pop
clc
xor
xor
push
or
push
fld
xchg
and
sub
jmp
clc
rorb
or
sub
aaa
or
jns
mov
jae
rcrl
mov
mov
mov
inc
lea
cmp
fnsave
jnp
ficomps
lret
mov
out
mov
mov
cmp
xor
adc
aaa
inc
int
push
and
in
and
js
xor
or
inc
dec
fwait
push
sub
jns
test
aam
jbe
mov
or
sarb
in
aaa
push
mov
or
shlb
and
jmp
xchg
sub
lahf
sub
xchg
in
or
push
stc
sbb
push
pushw
pop
cmp
inc
xchg
in
mov
sbb
into
sub
push
sbb
mov
fs
jl
fldl
gs
fwait
in
in
mov
loopne
add
jle
pop
adc
mov
test
xchg
sbb
mov
adc
or
push
dec
mov
sub
sub
mov
mov
pop
sar
rol
aad
sub
xor
jnp
dec
cli
imul
push
mov
call
mov
loop
pop
or
xor
cli
fadds
lahf
and
fdivrs
shlb
jge
inc
cmp
aas
jbe
cmp
clc
sbb
push
jae
dec
es
js
mov
push
adc
cmc
addr16
movsl
xor
mov
or
dec
mov
mov
mov
out
sti
pop
sar
cwtl
mov
test
sub
lahf
push
mov
push
in
push
aas
add
dec
xor
testl
add
js
mov
ds
jo
pusha
bound
jnp
jecxz
mov
pop
xor
pop
movsl
sub
adcb
cli
cmp
les
bnd
xor
lods
push
pop
mov
mov
in
fs
mov
stos
loop
aad
fwait
adc
lods
sub
pop
mov
rolb
sbb
jo
cmpsb
fstpt
aas
or
xlat
sbb
cltd
mov
mov
divb
push
std
mov
orb
test
jp
mov
subl
mov
mov
mov
les
mov
push
cmp
out
dec
sbb
cmp
mov
sub
in
pushf
mov
mov
sub
cld
repz
pop
sub
std
mov
xchg
cmp
mov
daa
ret
or
mov
cmp
add
push
xor
aaa
inc
test
scas
hlt
mov
stos
lret
sub
ss
mov
jbe
add
mov
subl
xorb
xchg
add
stc
push
jnp
imul
pop
xchg
repz
inc
xchg
xchg
enter
xor
mov
ds
adc
cmp
in
std
loope
xorl
stc
mov
std
je
mov
jb
mov
cmp
mov
and
pop
jnp
mov
dec
mov
fsqrt
xchg
jl
out
xor
jge
call
les
cmpsb
jae
cmp
mov
fmuls
fbstp
inc
test
add
test
leave
adc
pop
sahf
movsl
adc
fsubr
divl
dec
and
adc
lea
or
and
leave
imul
stos
ja,pn
mov
xchg
pop
lods
add
cmp
shll
repnz
sti
push
sbb
pop
mov
pusha
pop
loope
ljmp
jae
clc
sahf
inc
adc
int3
jbe
xor
add
mov
out
adc
ret
nop
cltd
add
leave
add
add
mov
jmp
in
call
cmpsl
mov
dec
cltd
repnz
cmpsb
js
aad
icebp
mov
and
mov
es
and
push
nop
and
cmp
fisubrs
stc
popf
sbbb
push
mov
xchg
fldenv
adc
movsb
in
pop
test
imul
imul
movsb
std
cld
aas
jge
ds
push
mov
xchg
and
push
inc
in
cli
inc
std
rorb
scas
xchg
ret
push
rorl
mov
push
movsl
vpshufd
or
cmp
push
test
cld
mov
inc
std
inc
adc
jmp
shlb
jg
test
out
jmp
cmpsb
push
push
adcl
push
cmp
sti
fnstcw
neg
and
pop
xchg
and
jbe
shll
movsb
mov
xor
and
stos
jle
out
fadds
pop
rol
mov
fldenv
sbb
mov
leave
cmp
xchg
icebp
insl
fwait
sbb
cmp
popa
orl
dec
in
loope
sub
je
cld
sbb
sbb
shll
push
aaa
outsb
pop
lods
fndisi(8087
mov
lds
std
inc
mov
push
xchg
add
out
mov
jbe
cmp
scas
dec
mov
repnz
stos
out
imull
repnz
enter
xchg
push
loopne
in
xor
xchg
in
lret
inc
dec
daa
sub
jp
scas
mov
stos
pop
sub
mov
mov
mov
mov
negl
push
stos
jbe
xor
outsb
fs
cmp
repz
and
sbb
iret
xor
push
push
jns
pushf
fldlg2
fidivrl
push
scas
push
cwtl
outsl
jb
sbb
insl
sbb
int
mov
sub
cmp
push
and
incb
pushf
push
jnp
or
xchg
out
or
dec
inc
and
fldl
push
dec
mov
leave
or
fs
jnp
jp
aam
nop
push
subl
dec
adcl
pop
sbb
xchg
lret
xor
out
test
inc
mov
test
std
pop
jle
push
fucomi
mov
xor
xor
out
mov
test
sub
insb
sub
bound
xchg
push
sarl
inc
ss
add
pop
xchg
push
dec
jge
lahf
mov
cltd
pop
imul
mov
cmpsl
and
cmpsb
jge
pop
call
in
mov
clc
aaa
aam
cmc
inc
adc
mov
lea
jne
outsl
and
mov
add
orl
pop
aas
push
clc
inc
loope
dec
dec
dec
fwait
add
mov
xchg
jo
lret
or
push
jl
sti
ss
jne
outsl
repz
push
sub
add
mov
sub
add
in
cmp
lret
add
movsl
or
lods
test
adc
lcall
mov
push
rol
push
stos
sub
push
mov
mov
push
inc
out
das
scas
mov
icebp
mov
test
mov
dec
pop
jmp
cmc
push
scas
jecxz
ret
cmp
xor
mov
push
aam
mov
push
aaa
xchg
aad
adc
icebp
movsb
sub
insl
jle
pop
fstps
imul
and
inc
xchg
dec
pop
mov
std
pop
fnsave
addr16
xchg
mov
fisubl
pop
aam
dec
adc
out
cli
add
call
outsb
push
in
je
sub
push
call
mov
and
bound
test
in
lret
imul
inc
hlt
xorl
mov
push
xchg
in
stc
icebp
shlb
sub
movsb
mov
mov
mov
fiaddl
outsl
sbb
lret
loopne
dec
test
add
jo
jno
fistpl
mov
jns
aaa
or
jae
cmp
fdiv
jne
add
pop
sub
iret
and
aad
inc
jg
jbe
outsb
mov
push
push
sbb
cmc
add
ljmp
pop
stos
dec
ja
shrb
cmp
loopne
push
dec
xor
inc
cmp
orl
lahf
inc
fcompl
mov
notb
adc
inc
push
int3
and
adc
pop
sbb
cmpsl
test
push
addl
imul
stc
xchg
shr
cmpsl
xlat
jecxz
xchg
loopne
cmpsl
cmp
stos
sbb
outsb
cld
cwtl
ss
mov
dec
xor
incb
shrl
fldpi
js
popa
in
in
aas
xchg
dec
adc
cmp
ret
cmp
test
cmpsb
mov
stos
int
push
out
cmp
dec
mov
add
pop
iret
mov
mov
notl
cltd
mov
mov
sahf
mov
add
or
xor
xlat
outsl
fnsave
cmp
dec
mov
hlt
lahf
push
pop
fsts
jmp
push
out
jecxz
cmpsb
inc
gs
jp
mov
push
and
out
pusha
js
and
adc
addr16
cld
lea
ret
or
fnsave
pop
dec
sub
mov
mov
cmp
pushf
loop
mov
or
enter
test
outsb
sub
mov
mov
fwait
insb
shll
andb
and
repnz
sti
aad
movsb
jle
or
ret
push
and
mov
bound
enter
repnz
sbb
cmpsl
xor
dec
iret
stos
popf
lods
stos
cmc
sub
lret
mov
stc
and
lcall
insl
add
mov
out
sahf
dec
mov
ret
dec
dec
lock
xor
push
mov
fwait
repz
imul
or
push
je
pop
and
scas
lods
mov
iret
ljmp
pushf
and
mov
cmp
mov
xchg
inc
sub
mov
js
out
adcb
stos
sub
in
xchg
test
adc
out
inc
test
inc
pop
cli
fwait
out
into
daa
mov
fldl2e
mov
mov
adc
or
shl
add
add
int3
pop
stc
xor
mov
dec
pop
cmc
fdivs
dec
mov
rolb
pop
cmp
jo
cmp
cmp
push
cmpsb
mov
lds
pop
bound
jecxz
mov
sbb
cmp
ljmp
add
inc
push
mov
sbb
jo
cmp
mov
sub
dec
or
jb
sarb
xor
sbb
pop
std
sub
stc
mov
lock
sbb
imul
jl
cmp
jae
shll
cli
xchg
je
stos
push
mov
mov
fwait
sub
mov
inc
push
iret
shrl
adc
xor
aaa
mov
movsb
cs
sbb
frstor
orl
and
mov
inc
mov
imul
xlat
dec
pop
fwait
sbb
sbb
mov
or
xchg
test
daa
imul
mov
inc
aaa
leave
xor
jae
mov
stos
and
outsl
sub
or
sub
mov
pusha
lds
imulb
jl
mov
movsl
sbb
lahf
mov
sub
push
inc
fs
cmp
repz
inc
inc
add
shlb
xchg
cli
out
lods
pop
push
dec
iret
or
cwtl
sub
adc
pop
shrb
int
mov
sbb
mov
xchg
jg
imul
test
sbb
push
bound
adc
or
mov
xchg
shlb
jl
mov
mov
sub
mov
inc
aam
adc
cmp
pop
jnp
stos
mov
inc
jae
mov
adc
jne
cltd
testl
out
call
sbb
outsl
adc
add
test
adc
scas
push
aad
stos
mov
adc
mov
inc
addr16
push
cmp
pushf
jo
sub
imul
data16
pusha
jecxz
jb
mov
cmp
leave
es
ds
fwait
adc
into
mov
inc
sbbl
daa
inc
fstp
inc
inc
pushf
adc
fldl
lods
iret
outsl
pop
pushf
push
pop
and
jno
jae
jno
sub
dec
scas
enter
jnp
pop
repnz
push
shlb
mov
mov
aam
pop
pop
cmp
inc
out
sti
inc
dec
in
in
lret
jnp
leave
inc
js
repnz
sbb
mov
lret
pop
test
mov
jne
in
data16
scas
inc
inc
std
sarb
inc
arpl
popa
jno
mov
sbbl
xchg
outsl
cmp
jmp
repnz
push
subb
or
sbb
test
lods
jo
stc
pop
shl
mov
fistl
pop
cmp
sbb
mov
add
popa
scas
inc
fs
pop
bound
movsl
and
fcoml
jne
pop
lahf
fildl
pop
push
push
rcr
fnsave
mov
jbe
push
sub
es
addr16
pop
or
pop
push
lcall
in
scas
dec
in
cmp
in
inc
lahf
test
cltd
scas
icebp
in
subl
xchg
push
loope
mov
std
test
jle
or
loopne
mov
add
push
mov
pmuludq
or
or
icebp
int3
pop
ret
jb
ja
mov
je
sub
mov
ss
inc
frstor
cmp
or
xor
mov
aas
popa
nop
cmp
lret
pop
mov
adc
lods
mov
shll
xchg
xchg
xchg
sar
push
jb
mov
jbe
pop
cwtl
cmp
or
cmp
pop
xor
dec
jmp
mov
and
cmpsb
test
es
mov
mov
je
push
sub
pop
push
repz
imul
jo
cld
arpl
xchg
dec
pop
mov
cld
xchg
fistpll
jmp
pushf
xor
cmp
cmp
mov
dec
push
pusha
insb
pop
jmp
aas
hlt
sbb
shlb
in
insb
push
jnp
adc
mov
out
sbb
divl
mov
cmp
stos
cmpsl
mov
xchg
ds
enter
cwtl
shlb
int
ss
xchg
loopne
mov
stos
inc
jne
pop
aad
bswap
outsb
sbb
and
jnp
push
dec
cli
call
lea
adc
inc
fnsave
push
adc
cld
fcoms
xchg
mov
mov
inc
clc
adc
adc
sbb
add
pop
adc
iret
es
mov
mov
mov
dec
sub
lods
out
push
inc
inc
lods
lret
or
shll
hlt
repz
ja
mov
lock
sub
cltd
cmp
loop
mov
fnstcw
insb
daa
loope
push
iret
outsb
adc
mov
data16
add
addr16
push
mov
lret
sbb
cli
call
mov
and
xor
push
sbb
lret
scas
outsb
mov
push
insl
or
adc
jmp
cmp
std
push
in
mov
ljmp
data16
sbb
push
sahf
insb
ret
dec
sbb
adc
push
cmpb
fwait
cmp
cmp
out
pop
es
xchg
sti
inc
mov
xchg
sub
std
jo
jg
dec
insl
jo
rcrb
jle
inc
loope
mov
push
dec
adc
pop
lahf
pusha
mov
mov
jmp
mov
pop
iret
inc
add
cmp
jecxz
pop
mov
push
push
stos
and
scas
fbld
pop
cmpsb
xorl
sbb
and
inc
pop
fcoml
fistl
stc
je
push
popa
rclb
push
sub
int3
or
test
jle
xchg
addb
xchg
or
adc
inc
hlt
mov
ljmp
adcb
push
hlt
sub
mov
rcrb
jne
lock
xchg
push
fisttpll
iret
stos
sub
rclb
test
sub
outsl
ja
imul
sub
pop
cmpb
addl
fdivr
pop
mov
imul
shll
mov
push
inc
xchg
inc
hlt
addl
push
push
sbb
xchg
adc
dec
push
lods
dec
fiadds
sbb
push
movsl
aas
pop
push
sub
shrl
or
cmpsl
add
inc
cmp
pop
add
jo
loope
stos
cmc
jbe
fcomps
pop
push
push
or
in
test
ss
dec
outsl
jge
xchg
loope
hlt
aam
popa
ja
adc
xor
xchg
insl
xlat
jb
push
xchg
fwait
adc
mov
inc
jl
pushl
xor
les
into
xor
popf
scas
pop
mov
out
sbb
mov
sti
adc
xchg
xor
jg
shl
jae
cld
pop
jo
nop
fcomip
mov
sub
das
test
jns
xor
xor
sti
sub
push
adc
xlat
mov
push
pop
jns
xchg
insl
push
xchg
pop
cltd
mov
pop
xchg
inc
xchg
pusha
stc
ja
in
cmp
dec
cld
insl
push
hlt
pushf
jge
dec
aaa
mov
inc
rorb
sub
fildl
call
popa
pop
dec
mov
adcl
dec
xchg
sbb
ret
cmp
push
jp
and
sbb
sahf
inc
out
rcl
push
mov
dec
push
pop
daa
sbb
and
xchg
lods
sbb
mov
add
out
jmp
ret
cltd
cli
mov
and
sbb
sub
test
into
mov
dec
daa
adc
pop
pop
sbb
pop
test
add
jl
adc
sub
notb
mov
add
and
inc
cmp
pusha
imul
mov
or
adc
inc
xlat
lods
adc
test
xchg
push
out
cltd
dec
pop
sbb
push
pop
jnp
repnz
fwait
dec
shr
sub
dec
bound
bound
stc
addr16
xchg
ss
xor
cmp
repnz
mov
sub
pop
enter
pop
inc
adc
sbb
in
pop
outsl
add
xor
imul
sbb
lods
mov
add
faddp
popf
pop
sahf
stos
and
xor
call
sbb
add
fmul
sbb
incl
pushf
sar
ffree
mov
adcb
mov
jb
adc
mov
lcall
sub
ffree
js
push
adc
xchg
dec
pusha
adc
xchg
inc
sbb
cmp
aas
pop
dec
add
insl
sbb
push
out
ds
mov
mov
push
clc
rcll
cmc
push
jno
nop
fsubs
xor
cmp
dec
or
pop
and
push
les
sbb
push
aad
mov
and
mov
lock
lods
mov
add
decl
xor
sbb
imul
fdiv
loope
call
daa
xchg
xchg
jno
lahf
inc
sbb
ret
xor
pop
inc
mov
lahf
xchg
ja
fwait
and
imul
sbb
add
pop
adcb
call
fldl
ret
mov
push
fistpll
mov
or
inc
mov
inc
cltd
leave
jae
add
loopne
cmp
lds
mov
repz
or
pop
fdivs
mov
shrb
mov
es
ljmp
test
xchg
fwait
sarl
das
fcmovb
jp
xor
test
sti
cmp
sbb
dec
mov
sub
jbe
movsb
pop
xor
test
in
or
pop
daa
mov
jb
and
test
inc
cld
arpl
repz
and
inc
or
aam
pop
roll
cmp
sub
scas
subl
sub
fwait
or
jb
dec
xchg
js
lcall
cmp
pop
pop
mov
int3
dec
pop
xor
ja
sub
fldl
and
dec
jge
xchg
sahf
stos
inc
and
int3
dec
bound
add
adc
jmp
mov
push
push
call
mov
and
mov
sbb
sahf
icebp
cwtl
fadds
in
pop
insl
fs
mov
fldcw
mov
xchg
dec
mov
stos
jmp
sbb
mov
faddl
pop
push
push
out
sub
fcoms
xor
push
repz
std
and
sub
inc
aam
mov
mov
setg
sti
jge
sub
shrb
lahf
jb
fxch
jp
push
and
loope
inc
out
sarl
mov
aam
pop
cmp
lods
fistl
sub
cld
ds
mov
in
fdiv
pop
lods
iret
xchg
fld
lock
aas
xor
cmpl
movsl
add
int3
cmpsb
iret
sub
scas
adc
jmp
dec
mov
loopne
cs
iret
or
dec
xor
jl
jecxz
jo
push
pop
int3
lret
std
enter
and
sub
test
and
sbb
dec
mov
cmp
in
mov
aad
les
stc
call
ret
and
lahf
cs
in
push
fwait
sbb
loope
setb
and
aaa
pop
icebp
xchg
xchg
sbb
repnz
sub
enter
data16
pusha
stos
pusha
sub
cwtl
push
hlt
jp
jp
mov
mov
mov
add
int3
dec
movsl
jae
scas
hlt
xorb
repz
lcall
mov
pop
int3
ja
mov
sub
lods
loope
mov
dec
push
mov
jb
add
dec
add
daa
inc
sub
adc
ss
cli
push
cltd
shl
loopne
and
in
add
je
ja
daa
pop
nop
lret
fs
xor
pop
and
mov
fsubrs
jp
mov
sub
les
test
movsl
stos
jge
mov
aas
aaa
push
or
mov
dec
mov
inc
sbb
adc
roll
adc
call
ljmp
adc
sbb
jo
movsl
mov
jge
movsb
lcall
mov
mov
or
arpl
notl
or
inc
xchg
shll
shl
xor
sbb
mov
int
push
xlat
cmp
mov
xchg
cmc
mov
fcoms
popa
xchg
and
add
call
xor
cmp
nop
push
sbb
repnz
arpl
cld
xlat
ss
sub
loopne
lret
loop
add
imul
ja
outsl
pop
jns
jp
cmp
xchg
mov
mov
out
sar
sbb
cmpsb
jl
into
sbbb
addr16
dec
out
pop
imul
add
pop
mov
cld
dec
and
test
xchg
bnd
xor
outsl
mov
sbb
arpl
fst
mov
adc
daa
xchg
jno
cmpl
push
bound
cmp
push
pop
adc
push
cmp
jne
xchg
leave
rcl
cmp
mov
jns
das
mov
imul
adc
and
in
cmp
fdiv
hlt
add
clc
lcall
or
lret
rcll
lret
adc
in
scas
mov
cld
adc
or
cmc
out
jae
jns
ret
cmpl
shl
fsubrp
pushf
std
add
mov
insl
jb
sub
push
pop
xor
push
sub
jbe
jno
add
repnz
inc
jl
shl
mov
popa
xchg
aaa
dec
aad
test
dec
std
or
popa
scas
lcall
dec
ljmp
xchg
xor
mov
pop
jp
mov
add
xchg
mov
in
sbb
ja
pop
push
inc
adc
test
mov
fsubrs
cmp
pop
mov
pop
jo
dec
cmc
mov
xchg
push
push
icebp
mov
insl
xor
sub
xchg
push
xchg
div
xor
and
andl
adc
xor
or
add
call
and
fdivl
or
outsl
xor
jmp
mov
clc
and
popl
lea
out
mov
outsb
push
adc
jno
lcall
push
std
aad
cmp
xchg
xor
cmpb
mov
mov
jl
js
lods
xchg
das
mov
fmul
inc
add
mov
add
pusha
hlt
mov
fisttpll
out
nop
insl
sbb
mov
cmp
sbb
push
xchg
mov
push
dec
jle
sbbb
paddsw
repz
pop
push
fsubr
cmp
push
add
mov
push
cs
mov
sub
and
emms
aad
divb
xor
sbb
mov
fiaddl
jb
xor
add
xchg
cmc
pusha
dec
or
sub
call
push
lds
aas
jb
mov
out
subl
mov
adc
push
xor
in
data16
xchg
jg
add
push
mov
xchg
mov
pop
test
into
mov
mov
inc
add
push
subb
fdivrl
jae
xor
mov
testl
cmc
push
sub
dec
add
adc
or
jnp
or
in
inc
jge
xchg
mov
test
mov
xor
leave
jno
jge
jbe
add
add
sbb
inc
and
mov
or
movsl
cmpsb
cld
xchg
es
adc
lods
int3
xor
inc
jmp
movsl
movsb
cmp
sbb
cmp
lahf
mov
imul
xor
add
push
cld
cwtl
test
push
sahf
add
rcrl
jl
js
push
pusha
jp
pop
dec
push
cmc
and
dec
stos
xchg
jb
in
cmpsb
aad
sbb
cs
sbb
sbb
xchg
cwtl
sarb
test
dec
mov
or
and
xor
ret
int3
pop
xchg
xor
fcompl
rorb
sahf
bound
cmp
or
xor
mov
mov
fsts
xchg
cmc
inc
xlat
xorl
mov
sub
out
vcomisd
sbb
aas
lock
nop
js
or
cld
fnstenv
mov
test
mov
lods
add
mov
out
decl
and
int
clc
subl
popf
xor
sti
dec
std
in
les
mov
shll
mov
cmp
jle
mov
xchg
push
lods
sub
fsubrl
sub
push
jp
mov
xor
mov
outsb
ret
aad
xchg
into
movsb
loopne
cmc
inc
push
ds
xchg
cmc
fcoms
and
or
scas
in
test
push
inc
mov
das
xor
into
shrl
jle
ss
test
adc
lret
mov
cmp
add
ret
mov
dec
add
repnz
sbb
xchg
inc
pop
ret
das
fimuls
fchs
fcoms
xor
xchg
push
sub
inc
fwait
xor
ret
inc
jb
pop
jg
pushf
mov
in
pop
xchg
andl
movsl
movsl
stos
dec
add
sahf
pushf
jns
loopne
ficomps
popf
sbb
add
repz
out
cmovno
xor
in
pop
jbe
nop
lahf
mov
mov
dec
pop
inc
inc
out
in
in
clc
fdivr
je
and
lock
mull
in
movsl
dec
sbb
in
xchg
out
jns
xchg
in
xor
or
cmp
or
in
movsb
clc
aas
clc
sbb
jg
in
dec
push
aam
mov
dec
adc
pusha
sahf
bound
pop
ffreep
shlb
imul
adc
jb
xor
jbe
xchg
shll
xor
jns
inc
filds
sub
and
flds
sbb
xor
sub
pushf
sub
dec
mov
mov
loop
enter
sahf
in
sub
pop
sahf
dec
les
dec
js
jae
pop
pop
adc
lret
and
lds
inc
inc
xchg
cmpsb
shll
push
ds
fiadds
push
arpl
pop
add
and
and
cmc
or
shrb
orl
aas
cltd
loope
add
mov
scas
imul
inc
cmc
jmp
stc
fldl
roll
nop
xor
fs
fcoms
inc
out
scas
out
pushf
enter
repz
int3
icebp
sbbb
out
testb
addr16
aad
in
and
push
mov
push
aaa
jae
aas
out
xor
pusha
jns
ret
outsl
push
js
lods
pop
imul
inc
inc
inc
or
out
dec
je
into
add
sbb
xor
mov
mov
stos
gs
and
push
inc
xchg
cmpb
fists
push
push
and
lds
sbb
imul
fildll
mov
into
and
mov
push
xchg
sarl
cwtl
scas
gs
gs
loope,pt
xchg
jb
mov
mov
dec
movsb
fsubrp
cmpsb
lods
adc
push
mov
aam
addr16
and
or
lret
push
ret
jp
or
xchg
or
jmp
dec
mov
jge
lcall
pushf
inc
sub
jl
jno
lea
test
lcall
lods
push
ljmp
popf
add
inc
push
mov
xchg
mov
xchg
test
fsubr
cli
test
push
subl
out
les
push
dec
push
push
roll
dec
cwtl
cmp
bound
sub
jmp
inc
mov
mov
loop
jbe
in
dec
test
push
inc
outsl
cmp
dec
shrl
incb
ds
pop
iret
mov
adc
imul
jp
fwait
notl
stc
mov
insl
dec
jb
xorb
mov
repnz
pusha
outsb
adcl
xor
lret
lods
imul
push
add
out
xchg
xchg
inc
movhps
sub
jo
mov
testb
xchg
inc
mov
sahf
enter
loop
das
stos
or
mov
jo
leave
loop
loop
xor
shll
xchg
and
xor
aad
push
push
mov
or
pop
xchg
cmpsl
push
fwait
and
sbb
add
not
mov
outsl
ret
mov
jb
ds
jo
mov
sub
inc
cmp
inc
insb
mov
mov
clc
or
addr16
lret
lock
sti
or
popf
es
and
inc
add
fbstp
shl
mov
pop
in
cli
test
adc
pop
pop
sub
or
lods
mov
xchg
and
addr16
mov
jg
mov
push
repnz
cmp
pop
in
or
mov
popa
mov
ss
ljmp
dec
out
xor
loop
es
fs
sbb
pop
sbb
push
fdivrl
push
sbb
inc
stos
mov
and
cmpsb
sahf
mov
or
ljmp
outsb
mov
inc
mov
cld
cmpsb
adc
pop
jbe
into
mov
decl
fidivs
out
pop
ret
cli
lahf
mov
xchg
sbb
push
pop
jg
movsl
popf
cmpsb
insl
outsl
mov
inc
cmc
ss
imul
mov
imul
dec
loop
shlb
cmp
push
jno
and
dec
sarl
inc
pop
addb
stos
mov
repnz
mov
jno
and
out
mov
loopne
xchg
lcall
pop
jbe
inc
or
imul
loop
mov
lock
movsl
and
pushf
jp
in
add
and
cli
mov
jp
testl
adc
xchg
sub
aas
jb
cmc
aas
jge
push
add
lcall
movsb
adc
out
push
mov
mov
shrb
jecxz
popf
cld
in
push
pop
stc
adc
scas
inc
fwait
stos
clc
pop
mov
pop
push
sbb
clc
popa
aaa
iret
in
pop
sbb
pop
and
or
mov
ljmp
and
mov
nop
xor
lret
mov
loope
mov
jmp
ret
cmpsl
jnp
jecxz
push
jne
cmp
js
jb
inc
inc
arpl
mov
jl
xchg
sbbb
sbb
lods
inc
aas
or
inc
movsl
mov
lahf
arpl
cmc
fs
xor
dec
cmp
jp
pop
iret
xchg
iret
or
sbb
xchg
enter
incb
mov
fcomp
out
and
mov
adc
imul
mov
xchg
jne
inc
and
shlb
ja
inc
into
sub
push
and
mov
jg
ret
enter
fsubrl
xchg
addl
sub
jne
xchg
mov
shll
pop
cmp
dec
pushf
hlt
adc
mov
in
outsb
movsb
sbb
scas
rol
daa
shl
cmpsl
movsb
jge
adc
arpl
lock
fdivs
xor
jl
mov
sub
jne
shrl
mov
sahf
idivl
push
into
mov
aas
nop
std
das
add
adc
jle
mov
inc
pop
rep
test
nop
clc
push
stc
jp
test
cltd
sbb
cltd
fisubl
inc
mov
cmp
mov
cmp
pop
int
outsb
and
or
xor
rcrl
xor
xchg
mov
jns
ljmp
jno
sarl
movsb
cmp
mov
out
cmp
or
hlt
mov
push
sarb
sub
xor
push
jmp
sub
lea
cli
outsl
inc
or
jb
ja
in
rcll
scas
aas
cli
cwtl
repz
xchg
cmpsb
sub
in
adc
push
mov
sbb
pop
pop
mov
imul
jl
xchg
dec
cs
int
enter
add
cli
js
dec
sub
or
stos
sbb
jmp
repz
xchg
xor
lcall
sbb
push
jne
ret
adc
inc
cmpsb
or
push
andl
jmp
xchg
sbb
pop
mov
stos
imul
cltd
adc
out
in
lahf
xchg
push
dec
adc
out
rcll
fnstsw
and
adc
outsb
mov
pushf
lock
test
ret
push
dec
cmp
mov
cs
fisttps
xor
sbb
mov
es
notl
imul
mov
mov
cmp
xchg
cmp
sub
fnstcw
jbe
lds
arpl
test
xchg
ds
test
cmc
ret
decb
test
pop
lcall
pushf
sub
mov
fsubrs
les
add
jno
popa
movsb
or
std
ss
dec
aad
popf
call
xchg
add
pop
je
adc
mov
mov
pushf
jge
cld
or
add
lahf
leave
lods
mov
sahf
jne
jnp
stos
sub
pop
lea
sub
scas
cmp
lret
or
shll
outsb
inc
cli
lcall
push
inc
pop
push
les
shl
jge
cltd
loopne
lahf
repnz
es
add
pop
inc
mov
test
lds
inc
sarl
sub
dec
cmp
add
fdivrl
mov
addr16
cltd
adc
jns
xor
enter
and
xchg
sub
sub
shrl
ret
lcall
adc
sub
mov
fisttpll
fldt
inc
sarb
stos
scas
scas
call
xchg
cmp
std
mov
xor
add
push
pop
fdivr
movsl
add
sub
ljmp
fstps
pop
mov
popl
dec
repz
in
movsl
out
std
mov
inc
dec
xchg
aas
popf
rorb
stos
orl
into
test
mov
push
pushf
or
xor
push
lods
mov
mov
jg
mov
call
jle
xor
paddusb
sub
into
and
xchg
xchg
mov
popf
in
mov
xor
fisttps
jne
mov
xchg
imul
inc
icebp
push
push
mov
lret
scas
mov
mov
arpl
mov
adc
arpl
sbb
inc
imul
notb
sub
mov
pop
dec
inc
dec
int3
push
stos
add
jb
adc
idivl
mov
xchg
mov
cs
mov
cltd
mov
aas
bound
mov
in
cmpl
repnz
dec
loopne
pop
cwtl
lahf
lods
fcomps
mov
mov
fiaddl
ds
rclb
fiadds
enter
add
mov
out
cli
push
fisttps
aad
xor
aaa
or
test
mov
or
xchg
mov
xorb
or
ret
and
push
shr
or
in
xor
pop
sub
and
inc
push
jo
aas
movsl
lock
clc
jno
push
test
fadds
mov
loop
es
les
push
inc
push
jnp
sub
xor
lods
in
inc
dec
das
pop
es
fwait
mov
lahf
aad
sub
fmull
jbe
dec
jmp
or
lret
mov
pop
sub
xchg
mov
addr16
test
lods
out
ret
lcall
fwait
or
cs
sbb
imul
jno
cmp
jno
leave
push
sbb
push
insb
js
aaa
andl
xor
lret
inc
loope
mov
mov
inc
fldl
sub
jp
xlat
inc
push
outsl
cmp
je
xchg
jbe
dec
fists
mov
in
int
loop
xchg
xchg
mull
dec
and
xchg
loopne
sbb
ret
movsl
int3
insl
sub
or
sbb
dec
mov
js
mov
sbbl
or
and
or
pop
es
lods
add
bound
adc
ljmp
jnp
cmpl
cmp
or
outsl
and
mov
push
aam
mov
div
push
out
mov
xchg
lods
sbb
insl
inc
sbb
push
repz
cmpsl
std
cld
test
aam
cmpsl
fiadds
push
ror
inc
andl
jno
xor
fsubrl
lcall
sub
and
bound
cmp
push
and
enter
test
push
jge
ret
rolb
cmp
je
jne
lahf
jnp
xchg
add
out
mov
adc
jbe
addb
pushf
cvtpi2ps
sub
mov
adc
mov
mov
xor
push
or
or
xchg
repnz
or
movsb
mov
jne
lea
pop
fwait
add
rcl
inc
test
stos
jmp
push
cltd
popa
stos
scas
mov
cmp
addl
push
mov
lods
adc
les
sbb
pop
les
add
or
mov
sar
lods
sbb
or
cld
addr16
test
mov
lret
jecxz
xor
cwtl
jl
inc
arpl
push
stc
jge
lahf
pop
icebp
stos
outsl
mov
inc
sbb
in
and
or
addr16
outsb
inc
insb
and
cmc
or
pushf
ret
clc
incb
cmp
dec
fldcw
in
inc
jmp
and
stos
cmp
shll
ja
aaa
popf
xor
mov
int3
shl
push
sahf
popa
xchg
push
push
icebp
add
sub
cli
div
dec
lds
mov
mov
or
aam
call
movsl
into
adc
movzwl
lods
neg
dec
sbbb
sbb
repz
pushw
movb
dec
inc
dec
adc
jmp
je
fnstsw
sbb
outsl
lret
xchg
sub
ret
jg
dec
hlt
sub
hlt
aam
mov
jo
inc
mov
inc
fnstcw
push
push
pop
int3
lahf
ret
pop
push
rcll
stos
mov
ja
loop
mov
lods
insb
lea
sub
pop
in
mov
fidivl
xlat
bound
mov
xchg
mov
cmc
stos
cmp
icebp
inc
sub
out
mov
test
data16
scas
push
mull
rcrl
mov
fmull
popf
popa
cmp
pop
push
adc
and
adc
ror
mov
push
jmp
fidivs
mov
fsubrl
mov
pop
mov
jl
adc
das
daa
mov
push
test
xchg
mov
lods
cmp
and
clc
rcrl
imul
loope
lea
pop
js
sub
call
mov
jo
or
into
aas
pop
call
movsb
xchg
pop
mov
stc
hlt
add
mov
jns
mov
mov
mov
jp
rclb
imul
xchg
aam
push
push
jg
movsl
sbb
je
fdivr
mov
aam
mov
jg
mov
pushf
and
enter
xlat
scas
xchg
imul
mov
mov
ljmp
push
sub
insl
or
xor
or
clc
jecxz
push
dec
test
push
imul
mov
pop
and
adc
and
cltd
cmp
dec
popf
movsl
les
mov
cmp
ja
std
cmpsl
jne
sub
xorl
jp
fadd
and
out
insl
cmp
xchg
out
out
push
lods
mov
jnp
cmpsb
iret
sbb
sub
flds
in
and
ret
mov
scas
jne
dec
arpl
push
icebp
in
sbb
pop
rcll
pusha
jno
pop
push
inc
in
pusha
jbe
sbb
mov
cmc
repnz
xor
nop
sub
sub
daa
mov
pop
dec
sbbb
xchg
hlt
idivb
push
repz
in
rol
outsb
jb
int
outsl
xor
test
and
icebp
jp
add
mov
sub
cmpsl
pop
neg
dec
pop
or
addr16
es
jecxz
rcrb
xor
cmp
or
enter
aas
pop
inc
xlat
jge
ljmp
or
sbb
test
out
out
and
jo
dec
ret
sti
xor
jle
jmp
push
fbld
mov
lcall
orb
adc
iret
dec
push
in
subb
pop
lret
sbb
test
lahf
lods
cli
cmpsl
in
frstor
in
and
sbb
pop
mov
aaa
popa
scas
and
and
repz
shll
mov
jo
rcr
push
mov
repnz
cwtl
push
imul
mov
mov
xor
sahf
in
sbbl
push
push
mov
ss
out
cmp
inc
rcrb
inc
aam
clc
mov
test
xchg
xlat
andb
dec
loope
sahf
fstpl
lcall
mov
in
arpl
je
ja
sub
cmp
xchg
lahf
inc
popa
and
ret
mov
in
mov
xchg
sti
cs
xor
imul
or
sbb
pop
fildll
sbb
mov
jbe
inc
ficoms
movsl
loope
jbe
sahf
lahf
add
adc
outsb
sbb
sbbb
pusha
cmp
aas
jb
adc
sbb
bound
test
cmp
sub
jno
in
fld
pop
loopne
xor
mov
mov
cmp
cltd
adc
shll
push
fdivp
movsb
xchg
mov
nop
imul
sbb
push
loopne
sub
lcall
mov
fstpl
mov
cltd
out
cmp
enter
pop
roll
pop
jl
mov
daa
inc
push
fadd
xchg
ret
jl
adc
ret
das
push
inc
lret
lret
lcall
xor
xor
mov
jae
loop
hlt
and
xchg
cltd
orb
push
sbb
cli
mov
leave
jle
jecxz
daa
mov
push
ret
cltd
cld
sub
lret
xchg
jge
aam
movsb
test
and
cmc
or
mov
mov
lret
popf
pop
xor
ret
cwtl
adc
insl
out
jg
xchg
rolb
jb
push
push
cmpsl
and
cmp
inc
lods
pop
or
repz
mov
cmp
jne
adc
out
pushf
pop
mov
sbb
sub
mov
mov
jbe
popf
sarb
inc
fdiv
adc
inc
nop
or
test
daa
push
outsl
mov
movaps
mov
ljmp
scas
sbb
into
test
enter
fucom
mov
mov
jno
and
xor
cmp
or
pushf
fmul
cs
add
outsb
iret
jg
fdiv
mov
stos
dec
mov
mov
jecxz
movsb
lock
cmpb
inc
int
mov
xchg
orb
mov
push
cs
aaa
imul
mov
fistps
pop
int
lods
fdivl
push
add
jbe
movsb
xchg
cltd
das
sub
cld
adc
cld
imul
sbb
outsl
sub
dec
mov
out
add
das
outsl
xor
sub
ds
pop
subb
xor
int3
enter
adc
pop
mov
mov
shlb
movsl
mov
cli
sbbb
jnp
cltd
mov
push
insl
xchg
jp
cmp
movl
xor
rcll
dec
cmpsb
loope
subb
dec
data16
dec
loopne
or
add
hlt
pushf
mov
and
mov
push
mov
ret
fstpt
mov
rdtsc
cli
fidivrs
xlat
pop
test
mov
leave
mov
test
fxam
lods
mov
xor
add
out
rcrb
out
loopne
repnz
dec
pop
dec
mov
decl
mov
aad
xchg
pop
popa
dec
mov
xchg
dec
mov
loopne
cmpsb
shl
cmpsb
pop
inc
cli
xchg
xor
mov
xor
arpl
and
cwtl
mov
mov
lods
addb
mov
cmc
dec
fs
fmull
jne
add
int
mov
mov
pop
jae
lods
xchg
sbb
push
sub
jecxz
roll
rorb
push
xor
out
sub
jo
add
pop
nop
iret
mov
mov
scas
and
shl
mov
jp
sbb
adc
xchg
jbe
imul
xchg
dec
insl
lcall
in
pushf
test
mov
cmp
mov
mov
cmp
data16
dec
sub
pop
cs
sti
movsb
mov
xchg
push
sub
fisubs
mov
pop
stc
cmc
mov
sub
not
in
xchg
jle
xor
inc
sbb
fistl
cmp
or
xor
xchg
pushf
sub
cwtl
std
pusha
mov
aad
mov
sbb
xchg
xlat
adc
mov
xchg
aas
or
popa
sahf
addr16
sbb
or
mov
dec
cwtl
push
and
popf
ret
lock
or
fisttps
and
cmpsb
shl
dec
out
sub
insb
adc
lods
add
icebp
adc
fisubrs
add
mov
mov
pop
push
adc
sub
repz
cmp
jbe
jne
adc
imul
pop
out
repz
or
lea
scas
mov
popa
inc
lods
fmul
js
pop
sbb
cmove
fwait
mov
fstpl
jmp
sti
inc
xchg
pop
jge
cmp
out
cmpsl
inc
sahf
into
push
mov
xchg
ja
mov
in
adc
add
pop
push
sbb
sti
jg
leave
pop
out
dec
push
in
lock
es
in
or
shrl
push
or
mov
insl
insb
add
push
mov
fldcw
xor
out
mov
test
pop
insl
repz
sub
adc
pushf
jo
and
adc
jl
fmuls
arpl
inc
daa
push
cmp
or
or
imul
xchg
js
lock
xchg
mov
adc
test
sub
inc
fistl
and
lock
cltd
pop
and
fcomi
mov
clc
clc
inc
cltd
jns
nopl
xor
and
add
sbb
cmpb
mov
sub
test
mov
sahf
enter
mov
packsswb
lea
imul
gs
jmp
insb
xchg
and
imul
push
jmp
push
fldenv
ljmp
and
mov
jp
out
popa
cli
in
mov
andl
cwtl
fcmovb
pop
mov
ret
xor
out
mov
jnp
mov
sub
add
push
lahf
mov
inc
repnz
loopne
jns
dec
scas
jno
jae
repnz
jle
push
xchg
movsl
pusha
leave
cwtl
jle
ds
imul
push
dec
mov
cmp
sub
mov
add
sub
daa
and
cltd
daa
pop
and
jae
lcall
and
cmc
mov
pop
inc
dec
mov
and
dec
popf
or
ficoml
test
out
imul
daa
mov
je
fistl
lahf
push
xchg
xchg
ret
mov
insb
xchg
fsubrl
fidivs
adc
mov
cli
jns
fildl
outsl
out
pop
shl
mov
lcall
mov
loopne
xchg
inc
and
sahf
movsb
pop
jp
fistl
xchg
pop
adc
gs
data16
lock
gs
shlb
sub
int
in
into
daa
mov
jmp
dec
mov
jns
fnop
jae
xor
mov
mov
outsb
int
in
xchg
outsb
add
movsl
mov
test
mul
mov
clc
mov
jns
xchg
xchg
or
cmpsl
inc
pop
dec
fistps
pop
lock
call
push
negl
and
pop
sub
jne
pusha
sbb
mov
cmpsb
xor
pop
mov
dec
and
pop
jecxz
rorb
add
adc
xchg
sbb
and
sti
add
dec
sbbl
sub
enter
xor
push
or
xchg
or
sub
lods
mov
sub
testb
pop
push
ds
ss
and
jmp
scas
negb
sbb
push
daa
jae
daa
xor
data16
in
or
out
sub
fs
pop
mov
sahf
jne
xchg
std
push
xor
in
les
std
mov
loop
adc
xchg
push
loop
sar
or
jnp
cmpsl
push
cmpsl
test
cmp
push
add
rep
bound
repnz
enter
adc
add
clc
test
pop
loop
cs
xor
outsb
fiadds
mov
pushf
xchg
xchg
or
sbb
repz
jg
fcompl
dec
incb
xchg
inc
jl
fsubs
sbb
imul
inc
subl
jl
or
arpl
cs
mov
dec
sbbl
mulb
and
jmp
adc
pop
inc
mov
pop
pop
push
mov
int
mov
sub
cmp
lahf
xor
adc
cs
xor
jae
push
pop
sbbb
cmc
notl
add
dec
pop
pop
idivl
and
cld
sbb
xchg
fsubl
mov
jp
arpl
mov
loop
xchg
in
cmc
xlat
mov
out
add
push
subl
sbb
mov
inc
out
mov
xchg
out
cmp
adc
xchg
jae
sbb
add
pushf
xor
inc
jecxz
inc
jno
cmc
mov
popf
mov
out
or
sbb
mov
mov
lock
jno
cmpb
pop
enter
xor
out
pop
and
pop
ret
icebp
mov
lret
push
mov
inc
add
ja
pushf
push
inc
jmp
stos
ffreep
or
ljmp
cmp
pop
clc
rolb
cli
sarl
jno
inc
dec
loope
test
push
mov
pop
jae
mov
outsl
test
xor
and
out
or
mov
cmp
js
push
loop
lods
dec
pop
mov
rclb
aaa
fmuls
mov
and
dec
jge
pop
mov
subb
scas
sar
jmp
iret
and
and
or
adc
popl
inc
inc
push
out
push
xchg
sbb
mov
and
call
aaa
popa
icebp
int3
jae
sbb
pop
aam
inc
dec
jmp
int3
mov
add
push
add
xchg
jns
cs
daa
iret
xor
dec
outsb
xchg
pop
rolb
and
push
sbb
xchg
iret
ljmp
and
pop
push
inc
pop
lret
xchg
xorb
andl
mov
pop
psrld
xor
stc
sbb
sti
inc
jno
or
lret
loop
hlt
pop
stos
loop
int3
xchg
inc
aam
mov
loop
sbb
adc
add
or
fwait
movsl
pop
nop
loop
pop
mov
jge
aad
jae
jl
pop
cltd
sub
fwait
mov
hlt
pop
or
or
sub
jns
loope
in
sti
lock
aam
push
test
lret
cmp
xchg
push
ss
cmpsb
sub
mov
daa
pop
pop
pop
out
rclb
inc
mov
push
lret
test
out
xor
lahf
sbb
dec
mov
xor
aam
popf
mov
sbb
test
cmp
jns
shll
inc
inc
jnp
adc
jbe
in
inc
sbb
cwtl
xchg
jne
sub
jbe
stos
adc
mov
imul
shll
xchg
mov
pop
daa
mov
or
divb
mov
adc
roll
pop
std
adc
cmp
dec
jmp
and
nop
dec
adc
rorb
mov
lea
data16
jbe
aam
mov
dec
lcall
in
cmp
cltd
and
call
add
xchg
enter
push
jmp
rcrl
sti
int3
outsl
nop
pop
and
stos
push
addl
stc
and
test
insl
jge
imul
outsb
add
out
adc
push
cs
lods
aaa
mov
inc
push
lds
fsubrl
stos
cmp
cmp
inc
push
fsubrl
mov
in
aas
repnz
push
jb
iret
add
fisttpll
loope
cmp
or
sbb
xchg
daa
lret
xor
scas
mov
mov
bound
add
pop
test
das
push
adc
xchg
jae
nop
stos
das
repz
xor
mov
int3
fnstsw
cmp
sbbb
aas
cs
cmp
fdivr
mov
and
rclb
and
mov
sub
xchg
test
jmp
add
mov
imul
mov
pop
dec
aaa
nop
pop
sbb
xchg
adcl
notl
sarl
leave
sub
aad
adc
mov
mov
xchg
nop
std
pop
cmpsl
aad
fisttps
int
adc
xor
sbb
cmp
jns
popa
in
xchg
iret
testb
aad
je
cmc
cmc
mov
add
dec
mov
add
jo
cmp
movsb
mov
push
sarb
es
mov
jno
sbb
stos
jnp
push
scas
jno
and
inc
or
mov
ss
out
mulb
hlt
stos
js
cmp
daa
push
xchg
iret
int3
mov
xor
movsb
cld
in
xlat
pop
pop
imul
inc
jg
aas
add
xchg
fiaddl
push
dec
mov
testb
xchg
in
dec
cmp
rep
add
aam
aam
xchg
jo
outsb
cmp
test
jmp
mov
clc
sbb
and
inc
jo
mov
je
xor
and
sbb
mov
mov
add
pop
lahf
fcomps
pop
sahf
mov
clc
mov
mov
xor
jmp
pop
jno
push
aam
and
fcomps
stos
lea
mov
jle
jno
cmp
mov
cmp
mov
mov
jno
pop
mov
and
pop
xchg
lret
std
rcrb
mov
sbb
pushf
ljmp
addb
lret
aaa
inc
lea
sub
lcall
mov
mov
mov
imul
int3
fdiv
jl,pn
dec
sub
ficompl
lret
mov
sbb
mov
jp
lahf
xchg
cli
sar
cwtl
lds
cmpsb
fs
in
adc
or
cmp
loope
pop
jp
or
in
rorb
mov
xchg
arpl
fiaddl
and
iret
loope
inc
icebp
adc
sub
pop
xchg
and
movsb
cmp
inc
push
test
mov
fwait
test
out
or
jno
jns
add
mov
jne
sub
outsl
test
and
std
sbb
sub
cs
cli
into
into
fsubl
push
fimull
iret
movsl
xchg
test
notl
mov
mov
xchg
leave
mov
fstl
sub
lcall
lds
es
scas
test
stos
pop
jle
or
lahf
dec
call
push
jg
or
mov
aas
int3
mov
lock
push
jmp
mov
ret
test
stos
push
inc
jbe
pop
out
pop
leave
aam
cmpsl
in
mov
sbb
jecxz
cs
cmp
jnp
popa
repnz
dec
in
sbb
mov
inc
movl
lret
testl
inc
add
xchg
inc
call
ljmp
xor
cmp
lahf
lahf
mov
cmp
sub
add
add
inc
jmp
jl
or
int
xchg
repnz
dec
push
ja
add
pusha
mov
cmp
icebp
pusha
pop
xchg
and
pop
jge
mov
ret
xor
stc
frstor
push
addr16
scas
inc
stos
inc
mov
pushf
hlt
sbb
mov
sub
insl
imul
mov
cmpb
mov
mov
inc
leave
pop
nop
push
push
jecxz
mov
adc
and
js
pushf
or
or
xchg
push
mov
pop
pop
int
push
hlt
xchg
push
or
in
data16
pop
lock
into
pop
pop
rorb
pop
mov
mov
cmc
add
fidivrl
sbb
mov
shrl
stos
add
push
into
jl
cmpsb
aaa
jmp
lret
clc
mov
out
idiv
ret
in
sub
xchg
fldenv
inc
sti
bound
or
add
mov
stc
enter
adc
jo
adc
push
add
in
test
test
dec
sbb
jl
pusha
cld
lcall
lods
cld
push
mov
adc
stos
sub
sub
sbb
jmp
sub
lods
add
pop
push
iret
int
ss
sbb
daa
and
in
and
hlt
or
sub
sub
fwait
mov
pop
lea
push
test
or
stos
push
sbb
adc
es
in
add
popf
jae
scas
ror
in
jo
repz
xchg
subl
push
stc
stc
jecxz
add
leave
insb
cs
mov
lahf
push
std
pop
dec
aas
mov
adcl
mov
xchg
fisttpll
out
daa
aam
pushf
lahf
mov
and
cwtl
inc
mov
dec
movsb
jnp
and
push
negl
add
test
mov
pushf
and
mov
int3
mov
cli
pop
test
pop
mov
or
clc
inc
lahf
push
push
or
loopne
loope
xchg
sti
adc
repnz
pushf
jne
cmp
out
pop
stos
shl
sub
sbb
in
scas
std
add
mov
mov
xchg
push
jb
jle
rsqrtps
insb
cmp
imul
aas
or
bound
mov
mov
dec
test
mov
or
push
repnz
jo
mov
dec
push
pushf
inc
mov
loope
push
mov
cwtl
aam
test
adc
pop
lods
xchg
je
fcompl
adc
cmp
aad
dec
xchg
aam
push
mov
add
movsl
shrb
inc
pop
xchg
sub
pop
je
es
mov
pusha
push
cmp
pusha
call
mov
or
jo
jb
movsb
int3
and
shrl
and
call
push
or
je
outsb
mov
rcll
fbld
in
jae
scas
popa
sub
pop
or
push
xor
mov
aas
cmp
adc
pop
imul
push
hlt
cmpsl
fstl
add
cmp
push
sti
testl
add
push
aaa
fs
pop
int3
push
mov
loopne
shrl
rcll
mov
dec
sahf
mov
inc
popa
outsb
push
add
xlat
movb
sub
icebp
bound
lds
pop
xchg
and
movsb
insl
xchg
mov
aaa
xchg
stos
jnp
fdivrs
inc
dec
int
test
mov
xchg
dec
lret
outsb
inc
test
mov
mov
pusha
es
and
xor
sub
outsl
pop
mov
xchg
push
jp
aas
dec
sbb
cmpsl
test
jmp
faddp
lret
es
xchg
adc
sub
jle
push
sbb
enter
xlat
pop
popa
fldcw
adc
sbbl
mov
pop
adc
leave
sub
pushf
sti
fiadds
popa
sub
mov
jge
adc
pop
sub
imul
or
mov
outsl
sbb
or
pop
fwait
js
rcr
mov
jp
xor
cmp
xor
ret
mov
lret
dec
jae
cld
mov
push
mov
cmp
jns
lcall
jne
cmp
mov
das
and
rcrb
adc
test
jne
popa
out
mov
data16
xchg
rcr
or
push
inc
dec
stos
lret
fildll
orb
cli
xchg
mov
jge
fbld
ret
pop
popa
xchg
xlat
in
shrb
fwait
cmp
scas
add
jge
or
push
daa
call
push
int3
cmc
negl
mov
xchg
xlat
insb
push
mov
mov
adc
addr16
sub
jae
mov
stos
mov
test
adc
pusha
fs
lods
ja
pop
repnz
enter
pop
xchg
cmp
out
xlat
push
aad
jae
loop
jno
stc
mov
stc
andl
jnp
int
ss
js
mov
mov
xchg
stos
adc
push
ret
sbb
mov
jno
cmc
ljmp
sbb
adcb
lods
push
cmp
es
or
push
lods
stc
dec
cli
loopne
imul
stos
xor
in
dec
fsubrl
adc
push
sbb
shl
cmc
cmc
or
loope
aaa
mov
loope
arpl
add
shll
loope
adc
or
jmp
jl
mov
fucomp
dec
add
jl
dec
stos
sarb
jae
jg
sub
lret
cld
add
adc
dec
cmp
xchg
mov
dec
hlt
push
jns
cmp
jecxz
add
movsb
xchg
stos
flds
daa
adc
mov
push
lcall
cmc
clc
imul
push
adc
stos
aas
or
es
lahf
mov
stos
and
cmp
lea
mov
or
clc
jnp
aas
divb
inc
xor
outsl
pop
lods
and
fistpl
jge
xchg
sbb
mov
call
pop
out
dec
jl,pn
sub
lret
int
mov
insl
sbb
sarl
movsb
mov
daa
test
lods
ret
ret
lret
push
imul
xor
sub
je
popa
lret
nop
push
jmp
dec
scas
jp
xchg
or
out
mov
pop
mov
addb
sbb
cmpsb
mov
or
std
xchg
jae
mov
mov
fstps
cs
lret
out
sbb
jnp
ret
cmp
fstpl
xchg
mov
xchg
sub
xor
sbb
adc
movsl
dec
scas
sub
arpl
xor
pop
dec
fstl
dec
insb
loopne
out
imul
dec
movsb
mov
sub
cmp
cwtl
loope
ret
lret
push
loope
mov
mov
xor
push
out
push
daa
adc
jmp
xchg
test
leave
push
dec
dec
xchg
xorb
mov
or
stos
mov
push
adc
pop
jo
push
mov
jle
xchg
ficoml
shlb
xor
sub
sbb
or
lea
cmpsb
push
js
outsb
mov
or
test
or
mov
scas
test
xorl
popf
adc
fbstp
xchg
mov
clc
jmp
rclb
xor
sbb
ret
pushf
adc
pop
scas
pop
push
sbb
or
fwait
mov
jp
xor
test
sahf
out
cmp
xor
dec
or
and
cltd
fmul
test
add
cmovge
mov
js
sbb
ja
fldl
loop
mov
jmp
outsb
push
dec
xchg
add
jae
ljmp
in
pop
fisttps
icebp
in
fcmove
loope
xchg
rcll
scas
cmp
dec
cmp
pop
mov
and
je
push
repnz
gs
xchg
cmpsb
call
xchg
arpl
test
test
mov
mov
shll
xchg
mov
ficoms
push
inc
push
jmp
mov
pop
repz
jle
xor
sbb
cs
cltd
es
and
dec
scas
mov
stc
andb
daa
lds
jmp
lret
movsl
mov
leave
mov
lea
mov
or
dec
inc
in
jns
mov
jbe
mov
push
bound
push
pop
and
cmp
lods
mov
inc
jbe
test
loopne
inc
mov
sbb
adc
out
aaa
sub
cmpsb
pop
inc
push
dec
in
push
sbb
ror
inc
shll
lods
xor
or
push
jge
clc
or
lds
and
mov
push
nop
lret
inc
mov
subl
cmp
dec
negb
pop
fucomi
xchg
sub
jb
hlt
call
push
out
adc
imul
testl
xchg
pushf
xchg
push
insl
into
std
pop
cmpsl
xchg
push
rcr
fcoms
adc
push
icebp
dec
push
mov
jl
mov
test
mov
out
xor
sub
add
jne
add
or
mov
je
sub
popa
sbb
cmovl
dec
xorb
push
mov
repz
insl
push
orb
lret
lods
pop
into
arpl
or
mov
xchg
jae
pop
mov
mov
dec
insl
ja
xor
pop
fdiv
mov
cltd
mov
rcll
jbe
adc
or
leave
pushf
scas
fcom
pop
pop
push
pop
push
mov
stos
pop
out
inc
insl
iret
cmp
fmuls
and
jge
adc
scas
xchg
push
push
aad
push
xchg
push
mov
push
cmc
aaa
jo
jle
jl
movsl
cmp
stc
insl
adc
xor
jno
mov
in
jns
lret
mov
fisttpll
inc
sub
adc
outsb
shlb
sbb
mov
jb,pn
test
pop
mov
push
ljmp
loop
sub
out
stos
clc
sub
stos
fistps
push
icebp
sub
pop
push
push
mov
xchg
inc
inc
pusha
cmp
cmp
fistps
add
mov
xchg
fnsave
cwtl
add
and
scas
mov
mov
cld
lock
iret
out
and
jns
push
je
nop
ficoml
dec
out
out
add
ja
inc
mov
test
inc
ljmp
repnz
les
stos
nop
jne
dec
mov
mov
shll
sti
testl
orl
dec
icebp
cmp
inc
imul
rcll
jge
mov
inc
fnstenv
fildl
adc
stos
mov
rcl
cmp
or
ljmp
insb
and
aam
insb
and
iret
xchg
pop
mov
add
fwait
cs
mov
sar
and
aam
inc
notl
mov
scas
daa
cmp
aad
or
push
shlb
int
push
jnp
push
pusha
scas
sub
dec
push
lret
inc
sub
into
add
inc
pop
mov
cmp
cmc
mov
clc
rcl
xchg
in
push
cmp
shlb
rorl
push
xor
push
int
jle
js
stc
mov
pop
repnz
or
aam
push
inc
ds
clc
xchg
in
filds
xor
inc
es
es
fidivrs
pop
jae
vpmulhuw
xchg
fwait
mov
pusha
mov
cmp
lcall
movsb
mov
push
push
movsb
in
or
mov
mov
push
jp
pop
inc
mov
mov
fcomps
loope
push
insl
adc
xchg
in
jno
cmpb
inc
clc
shrb
stc
or
xor
pop
arpl
jnp
cld
sarl
dec
xor
not
pop
fwait
roll
in
popa
aam
xchg
inc
sub
mov
xchg
dec
jb
jns
xor
inc
push
test
call
sub
jecxz
or
lock
jno
data16
test
or
loop
out
test
sti
ds
sti
mov
inc
addb
or
mov
addr16
pop
push
mov
xlat
stos
xchg
mov
sbb
scas
xchg
or
xchg
mov
cs
gs
cmp
adc
mov
push
mov
push
jnp
ss
data16
push
cmp
cli
add
or
dec
sub
inc
add
mov
jge
out
xchg
push
jbe
sub
mov
jns
popf
push
fld
inc
xlat
adc
pop
sahf
sti
jl
in
push
or
sti
popa
or
std
stos
int3
loop
cmpsl
repz
mov
cmpsl
sbb
cmp
pop
pop
in
inc
mov
aaa
fstpl
sbb
or
andl
push
mov
pop
cs
popf
jns
jecxz
inc
or
jns
lds
aad
clc
jmp
push
pusha
pop
iret
aas
or
jge
lahf
mov
mov
and
sbb
sbb
pusha
ret
inc
shl
mov
dec
inc
mov
icebp
in
xor
mov
ret
xor
scas
add
xor
inc
lret
dec
loopne
imul
mov
cli
jns
sbb
outsb
pop
sbb
mov
in
lcall
pushf
and
in
or
icebp
out
in
or
fcomp
inc
dec
sbb
jg
jnp
sub
cwtl
sub
inc
jg
out
pop
adc
sub
out
shll
sub
cmp
mov
daa
mov
shr
orl
cmpsb
cli
cmp
adc
testl
mov
mov
adc
dec
xchg
mov
mov
push
fwait
jecxz
adc
or
dec
or
jb
dec
sahf
cmp
in
pop
mov
jo
push
pop
or
jne
xchg
fstpl
aam
mov
cs
lahf
shrb
mov
adc
sub
dec
mov
mov
sub
and
mov
dec
jmp
cwtl
outsb
mov
mov
iret
push
lret
dec
push
pusha
xchg
xor
xor
inc
popf
inc
enter
sti
jns
mov
data16
fs
mov
jmp
out
stos
push
jmp
fstps
and
cli
mov
in
inc
push
pop
stc
sbb
imul
fcompl
dec
inc
jne
movsb
inc
int3
aaa
fst
inc
xchg
sub
cmp
pop
ret
mov
test
pop
es
outsb
sub
mov
popf
cmp
insb
int
adcl
fwait
lods
and
in
mov
notb
dec
jo
stos
leave
flds
dec
sti
pop
rcll
add
test
jle
cmp
test
iret
aas
sbb
dec
loope
fwait
icebp
enter
pop
call
fbstp
lret
mov
adc
addl
mov
jno,pn
xor
jns
lods
or
sub
or
jecxz
jb
adc
push
xor
pop
das
es
data16
rcl
in
cmp
and
dec
mov
aam
lds
ret
scas
loopne
in
jno
dec
sbb
ss
scas
mov
push
jp
lret
out
jbe
mov
fdivrl
or
pop
lahf
pop
xlat
insl
pushf
pusha
and
or
aam
addr16
mov
inc
dec
cmp
mov
push
mov
xor
jnp
sbb
insl
daa
scas
push
inc
sub
pop
mov
pop
es
mov
mov
pusha
lock
fldcw
and
sbb
and
push
mov
mov
outsl
loope
adc
lret
insl
idiv
mov
xchg
lods
adc
sub
adc
shll
inc
rolb
lea
and
loopne
pop
and
jg
pusha
lcall
mulb
push
xchg
inc
cmpsb
and
rorb
jae
pop
subl
aas
test
test
pop
mov
out
jne
cmpsb
xor
out
aad
sbb
sub
rorl
cmpsb
icebp
pop
inc
xor
ja
fbld
int3
cmpsb
jecxz
xchg
jae
pop
inc
cmpsl
hlt
out
dec
mov
jmp
lahf
mov
xor
push
dec
std
sbb
mov
inc
adc
mov
inc
cmp
daa
pushf
inc
fadd
dec
ja
stos
push
or
pop
mov
clc
xor
and
fcoml
pop
orps
pop
and
cld
cwtl
es
sarb
cmpsb
cld
cltd
sub
and
out
sti
fisubrl
test
adcl
sbb
lods
adc
add
cmc
add
shll
and
push
xchg
insl
stc
repz
je
xor
out
cmp
ret
popf
rcl
xor
lods
movswl
fs
add
imul
test
mov
scas
out
cs
ficomps
sbb
add
movsl
cli
mov
cmp
mov
cmc
scas
push
sbbl
sbb
shlb
add
int3
ljmp
sub
pusha
push
lahf
xchg
mov
ljmp
cmp
sub
mov
adc
gs
scas
push
pop
dec
jg
je
lock
iret
mov
sahf
stos
in
pop
cmc
xor
rclb
movsb
mov
cli
pop
stos
mov
data16
push
outsl
xchg
stos
add
test
sbb
fwait
ret
or
divl
pop
mov
lds
xor
mov
xor
jle
testb
gs
iret
mov
mov
dec
lods
es
xor
push
jge
js
cmc
jecxz
repnz
sbb
test
sbb
mov
jb
imul
mov
das
and
dec
in
sub
cmp
loopne
lret
dec
mov
ljmp
cmc
fistps
pop
inc
es
ljmp
adc
lds
ja
jmp
xchg
scas
mov
movsb
movsb
ret
lahf
scas
sub
adc
or
inc
xchg
jl
leave
lret
fistpll
or
sbbb
or
jp
in
leave
xchg
push
mov
xor
pop
fwait
cmp
mov
or
pop
inc
ss
bound
dec
cli
fsubl
pop
decb
xchg
cwtl
in
push
lcall
fwait
cmp
push
mov
iret
rcrl
popa
mov
in
xorb
loopne
lds
es
ja
push
movsl
fsts
pop
xchg
call
fwait
xchg
out
sub
mov
xchg
gs
cmp
dec
push
or
push
mov
inc
jbe
clc
or
sar
mov
arpl
loope
in
addr16
jmp
lahf
sub
popf
cmp
mov
add
frstor
dec
and
jecxz
pop
ds
aas
bound
lods
push
leave
mov
pusha
loop
mov
in
add
or
sub
fnstcw
pop
or
mov
pop
mov
int
rorl
clc
xor
mov
sbb
out
imul
adc
inc
inc
vminps
push
ret
xchg
es
ljmp
andb
loopne
xor
xor
dec
push
lret
mov
and
lods
aaa
rorl
mov
fnstcw
mov
pop
outsl
xor
jo
or
sbb
lahf
pop
dec
fs
pop
sbb
xlat
xchg
xor
sti
lcall
xchg
add
mov
test
test
sub
xor
in
or
enter
mov
scas
stc
stos
cmp
dec
add
jne
popa
popa
sarl
pop
cmp
addl
rcll
mov
inc
rorl
jb
icebp
sbb
ss
jo
add
mov
ljmp
or
in
push
pop
dec
jno
sbb
enter
mov
push
fstl
lahf
lock
jle
clc
or
aad
divb
cmp
jbe
les
in
jne
fdivl
jbe
dec
rolb
adc
ss
xchg
xchg
lea
js
popf
loopne
out
lahf
mov
sub
ds
inc
cmc
mov
jmp
dec
dec
ret
pusha
mov
sbb
sbb
into
sub
mov
sbb
loope
fcomps
cwtl
hlt
ja
stos
rorl
cmp
lods
jb
sbbb
dec
in
scas
aad
jne
movsl
add
mov
sub
testb
lods
dec
lds
push
or
enter
inc
or
adc
add
sarb
ds
and
pop
mov
popa
lock
xor
sub
jl
filds
mov
leave
sub
nop
addr16
mov
and
cmc
and
je
loop
inc
sub
cmp
cmp
cmp
xlat
ljmp
aaa
xchg
mov
faddp
gs
cmp
cmpsl
cld
dec
lahf
shrl
push
aad
nop
and
mov
les
push
add
xor
inc
inc
or
out
out
jmp
xchg
and
jb
and
std
sbb
imul
call
adc
mov
push
js
loop
ret
testb
ljmp
xchg
fmul
sbb
bound
repz
and
fists
jno
popf
push
aad
dec
lcall
ss
sbb
test
movsl
call
cmp
les
and
pop
cmp
in
inc
lods
sbb
std
les
jle
and
add
mov
negl
lret
cltd
pop
ss
rorl
add
add
and
bound
push
mov
outsl
lret
cs
jge
stc
xchg
mov
out
sti
mov
push
mov
mov
sub
push
adc
mov
pop
fsub
xor
mov
and
push
clc
sub
iret
sbb
ss
adc
push
cmp
pusha
cmp
push
scas
add
add
xor
jo
std
fs
xchg
dec
xchg
sub
fld1
mov
enter
pop
mov
iret
dec
mov
ret
push
add
inc
cli
movsb
push
xor
jge
test
aad
outsl
test
cmp
sbb
mov
xchg
rclb
mov
mov
xchg
mov
hlt
leave
jge
lret
popf
out
add
inc
mov
loope
lret
pop
pop
mov
je
ret
xchg
scas
rclb
mov
testb
cmp
fisubrs
orb
lea
cmpb
mov
xchg
ret
xor
cmp
into
sbb
push
push
les
jl
insb
fwait
loopne
mov
pop
jge
imul
fsubr
pop
ss
loope
leave
call
dec
rcl
test
jno
outsl
mov
inc
call
mov
shlb
cli
loope
jb
mov
aad
dec
pushf
and
xchg
imul
in
inc
js
or
xchg
mov
nop
cmp
out
ffree
lcall
add
inc
pop
inc
in
xor
dec
cmc
jbe
mov
loop
gs
or
jno
cmc
dec
es
scas
push
scas
ret
mov
mov
lods
gs
shl
sbb
jbe
loopne
mov
or
out
adc
ljmp
scas
mov
jp
lcall
push
enter
mov
fdivrs
cmc
scas
cld
or
in
repnz
push
popl
sub
cmp
push
in
scas
shlb
movsb
add
dec
in
jg
cmp
push
das
cmp
pop
inc
rcr
int3
xor
subb
movsb
in
jns
xor
in
or
mov
push
push
xorb
xor
imul
les
mov
mov
leave
lret
cmc
mov
inc
mov
sbb
fs
ja
outsl
lods
popa
cmpsl
je
lcall
xchg
sub
lods
cmp
es
les
or
negl
stc
aad
fmulp
dec
push
add
dec
fistps
push
test
mov
or
dec
ja
and
ret
dec
mov
pop
jns
int
sub
inc
popf
fldenv
pop
psubusb
lcall
or
dec
pop
dec
jae
std
int3
xchg
mov
adc
mov
sbb
xlat
mov
popl
cld
test
hlt
or
and
jae
push
sub
testb
or
std
fisttpl
scas
and
and
addr16
int3
cmpsb
pusha
add
push
imul
push
cmpb
imul
push
cltd
xor
arpl
shlb
cwtl
add
cmp
in
mov
or
lahf
or
rcr
gs
stc
mov
or
inc
xchg
mov
pop
ret
jg
enter
fcom
mov
les
xor
stc
pop
mov
push
dec
test
addr16
add
xlat
jmp
xchg
push
sub
add
cmp
jbe
aas
and
lret
push
or
jne
lods
push
sahf
cmp
xchg
clc
mov
popf
stc
xorl
mov
pop
inc
sub
icebp
inc
adc
lock
bound
movsl
xchg
mov
cmp
movb
test
xor
les
pop
shll
lcall
fidivrl
push
jecxz
fwait
test
xor
jns
popa
jg
xchg
mov
xchg
cmpb
inc
pop
mov
cld
mov
leave
mov
mov
sbb
inc
jb
aas
loope
mov
out
xor
push
jg
jns
adcb
mov
or
or
cltd
je
aad
jge
pop
arpl
sub
mov
fwait
and
or
xor
inc
leave
ret
sub
out
lds
imul
jne
or
pop
shlb
lods
adc
fndisi(8087
jecxz
lret
push
fisttpll
loop
ret
or
or
fs
jo
inc
out
pop
xor
sub
neg
push
lret
les
pop
or
push
mov
ret
lods
push
cld
mov
push
fistpll
inc
hlt
lret
mov
lods
inc
aaa
repnz
jp
adc
xchg
popa
pop
cmp
int
aas
mov
mov
cld
sbb
xor
js
insl
popa
pop
cli
sbbb
pop
test
cmpsl
stc
pop
inc
cmpl
push
xchg
jns
cmpsb
sahf
mov
icebp
rcl
or
cmp
mov
int
mov
ljmp
add
push
pop
rcll
nop
inc
inc
jp
jno
mov
stc
sbb
jge
mov
push
insb
push
and
shll
add
aaa
pop
mov
pop
lock
pop
cmc
clc
sub
hlt
std
aas
or
add
jg
loope
pusha
fnsave
jbe
jbe
cmp
ret
rcll
cmp
xchg
push
push
es
cmp
popa
cmp
mov
cmp
or
xor
pushf
xor
ds
ss
jno
xchg
sub
jp
cltd
lea
jge
inc
sbb
lcall
dec
ljmp
pop
xor
sti
repnz
pop
popa
enter
aas
dec
add
or
mov
mov
adc
scas
imul
jg
ret
mov
popf
mov
nop
push
jmp
lods
iret
cmp
shrl
mov
out
rorb
arpl
and
xchg
pop
stos
and
xlat
push
inc
arpl
lahf
mov
mov
bnd
pop
ljmp
adc
inc
pop
push
mov
aam
popa
fcomip
mov
xor
das
add
jecxz
mov
inc
inc
push
aaa
xchg
lods
inc
inc
dec
mov
fsubs
imul
mov
outsb
repnz
xchg
mov
xchg
cmp
fimuls
loop
leave
movsl
push
data16
pop
inc
mov
xchg
dec
push
dec
js
push
mov
pop
mov
ljmp
mov
mov
repnz
andb
subl
sahf
jl
cmpsl
and
mov
call
mov
es
dec
pop
es
adc
xlat
stc
movsb
mov
xchg
jge
scas
mov
dec
in
fnsave
leave
cmpsl
mov
push
add
xor
pop
mov
jmp
push
dec
repnz
push
jmp
and
pop
test
das
jmp
rol
dec
push
xchg
xchg
lock
xchg
jl
cmpsl
add
push
and
xor
mov
push
ljmp
sarb
xorl
sub
out
mov
push
ja
jle
pop
mov
mov
stc
pop
lods
push
cmp
subl
cltd
inc
arpl
inc
aaa
mov
sub
jnp
jmp
add
mov
dec
sbb
dec
lahf
out
imul
loop
xchg
sub
push
jae
mov
loopne
cltd
pop
cwtl
sub
xchg
insl
fiaddl
jp
int
clc
mov
outsl
mov
imul
stos
xchg
or
or
push
push
xchg
mov
ret
and
xchg
add
sbb
adcl
sub
test
push
mov
jmp
movb
loop
pop
sbb
inc
fistpl
inc
mov
dec
negl
mov
mov
push
xchg
push
push
ja
aaa
in
jmp
and
pop
fmull
scas
in
out
jnp
cmpb
dec
cmpsl
mov
mov
sub
adc
or
std
fimuls
jo
addl
push
pop
cmp
push
fwait
dec
rcrl
out
and
inc
insl
mov
adc
std
aam
xorb
cwtl
data16
aaa
xor
mov
inc
test
cmpsl
xlat
jne
or
sbb
xchg
imul
mov
js
lret
xchg
subb
pop
add
ljmp
lret
jo
push
sbb
adcl
adc
jno
pop
popf
add
dec
push
rolb
jnp
mov
push
clc
stos
jno
jae
lret
movsl
push
pop
push
jo
ret
push
xor
je
les
enter
out
add
int
cmpsb
jo
inc
pop
and
add
repnz
pop
fst
mov
add
xchg
loope
and
shl
xchg
jno
add
xchg
dec
pop
lret
push
xor
push
sub
xchg
andl
lret
inc
xchg
out
fdivl
adc
mov
xchg
mov
ja
shlb
ret
cld
sbbb
sbb
out
repnz
je
or
or
and
mov
incl
xchg
fcomps
stc
add
lahf
icebp
cltd
sub
out
lods
dec
xchg
ret
leave
mov
xor
cmp
xchg
and
outsl
and
mov
loop
jp
xchg
or
stc
iret
jno
dec
jmp
mov
dec
cmp
adc
aad
sbb
test
or
fstps
lock
or
xor
std
unpckhps
cmp
xor
cmpsb
outsl
not
jbe
nop
das
ficomps
inc
lea
and
cmpsl
jmp
pop
js
xchg
inc
xchg
jne
rcrb
add
das
stos
outsl
dec
sbb
imul
pusha
jp
mov
xor
xchg
or
ja
mov
loopne
out
mov
int
rcll
fnstenv
adc
pop
cmp
lcall
cmp
or
or
ja
jl
push
mov
sarl
push
andb
js
aam
repnz
in
mov
inc
fadds
std
and
add
dec
mov
xor
test
dec
out
jl
lods
lret
push
lods
jae
shll
orb
jnp
lcall
outsb
mov
push
adc
mov
mov
out
jb
inc
xchg
lret
das
pop
sbb
cmpsl
std
call
inc
sub
jle
in
aas
sti
inc
call
or
shrl
inc
repnz
jne
rcrb
push
rcl
add
push
stos
cs
xor
insl
and
add
xchg
inc
faddp
lds
pop
pushf
push
mov
or
pop
into
pusha
ds
sbb
mov
fisubrl
pop
mov
mov
push
cmp
or
adc
and
loope
pop
mov
shll
cld
pop
stos
dec
jnp
jp
ret
and
rcrl
lret
mov
stos
lods
mov
add
je
pusha
mov
cltd
push
cli
pop
sarl
das
push
adcl
aas
outsl
ljmp
inc
mov
ret
and
pop
mov
inc
sbb
mov
repz
adc
mov
lahf
add
loopne
push
sub
adc
test
sub
mov
rcrl
aam
popf
cmp
dec
lcall
xor
cmp
subb
loope
loopne
cmp
mov
or
push
jo
inc
leave
stc
das
leave
and
aaa
dec
or
jo
pusha
cli
shlb
adc
push
arpl
test
hlt
inc
cmp
cmc
mov
cmp
lock
pop
cmpsb
push
mov
pop
testl
mov
push
int3
int3
push
aam
jo
andb
loope
cli
sti
mov
test
push
xor
stos
sub
out
mov
in
jecxz
movsl
call
out
ja
push
loop
inc
outsl
mov
movsl
add
loopne
loope
cmp
xlat
mov
fwait
and
pop
addr16
mov
cmpsl
popf
repz
add
xchg
lcall
jle
pop
and
into
rcr
sbb
jns
mov
lahf
out
adc
mulb
out
inc
add
xor
movsb
mov
lret
arpl
dec
cmp
ja
xor
ss
inc
xorb
arpl
xchg
or
xchg
lods
xchg
xchg
fwait
or
ret
xchg
mov
pop
push
cmp
repz
xchg
out
cmpl
dec
mov
enter
push
ljmp
hlt
fmuls
movsb
loopne
mov
repnz
pusha
inc
cli
or
jae
gs
ja
repnz
sbb
std
mov
inc
scas
push
inc
push
jbe
cmp
pop
or
mov
xchg
cmp
out
push
arpl
faddl
or
push
mov
pop
inc
cmp
mov
xchg
out
jno
sbb
jns
or
jmp
xlat
iret
jmp
push
lret
gs
xchg
clc
sbb
fdivl
addr16
sbb
mov
dec
xor
mov
pusha
clc
loope
addl
fcomip
shlb
or
push
jb
adc
mov
add
inc
sbb
popf
adc
mov
and
in
leave
mov
and
cmc
or
push
sub
int3
xchg
fcompl
test
leave
andb
es
loope
clc
scas
fistpll
std
and
mov
add
inc
inc
jo
mov
jo
arpl
or
mov
imul
or
sbb
popf
jbe
xor
xchg
lcall
rcll
pop
movsl
inc
sub
daa
xor
mov
push
jne
fcompl
iret
jmp
push
or
out
push
cmpsb
lods
loopne
jle
fistpll
movsl
inc
popl
mov
push
mov
inc
inc
dec
jno
pop
movsl
fmuls
lcall
cmpsl
mov
shrb
dec
mov
pop
fwait
sbb
xchg
add
and
lock
push
dec
sub
jecxz
loopne
fisttpll
jp
or
cmpl
xchg
jns
sti
iret
or
xchg
sbb
je
add
jge
xor
vrcpps
scas
fidivs
mov
sub
sub
sbb
inc
adc
andl
test
repnz
rcrl
sbb
jmp
jmp
rcrl
fneni(8087
or
popa
push
mov
ja
xchg
inc
or
mov
test
imul
mov
add
out
and
sbb
lahf
push
push
cmp
or
mov
in
cwtl
fildll
in
int3
insb
sub
shll
xchg
dec
inc
gs
or
jb
jg
cmp
jo
fidivrs
inc
clc
mulb
out
and
lods
mov
test
jno
mov
clc
adc
push
fsubr
loope
push
sub
add
dec
std
adc
das
hlt
inc
js
iret
jno
or
mov
pushf
loope
stc
lods
cmp
out
cs
sub
imul
cld
pop
lea
pop
dec
les
add
mov
mov
mov
shr
out
adc
fisubrs
pop
shlb
or
sti
into
mov
sbb
jo
xor
inc
loopne
mov
inc
mov
sbb
hlt
unpckhps
cmp
or
lcall
pushf
push
lea
ret
or
ljmp
cmc
test
pop
sarb
sarl
adc
cmp
jnp
ds
jo
test
cmp
mov
xor
sub
xchg
rep
xor
lea
xor
into
cmpsl
fcoms
or
fistps
cmp
mov
mov
sub
jbe
std
out
pushf
pop
cmp
push
negl
mov
add
stos
lds
movsl
mov
roll
cli
ret
mov
fdivrp
sbb
shr
notl
loope
test
stos
lods
gs
jno
test
arpl
jnp
push
inc
test
mov
inc
out
dec
cld
out
insl
stc
stos
into
and
cs
inc
scas
pop
repz
dec
xor
insl
shl
rclb
dec
pop
leave
sbb
xor
push
std
dec
adc
add
clc
cmp
mov
mov
pop
mov
push
sbb
add
aam
and
mov
popl
cmp
inc
or
jmp
xor
add
xchg
jnp
dec
ljmp
add
mov
jmp
cltd
mov
mov
cmp
mov
bound
lahf
mov
inc
adc
pop
inc
in
dec
push
fisttps
or
jno
movsl
add
jl
cmp
cli
inc
popa
stos
daa
aad
test
adc
fdivl
pop
hlt
addb
out
inc
insl
icebp
insl
dec
mov
movsl
inc
xor
idivl
fdivrl
loope
jo
xchg
gs
mov
shrb
dec
sbbb
or
lock
ret
adc
inc
add
cld
insb
es
sbbb
ljmp
sbb
les
sub
sbb
sub
sbb
jno
sub
pop
leave
aam
lret
add
xchg
je
leave
jo
dec
mov
mov
mov
mov
adc
enter
mov
push
test
aad
adc
cmp
lds
es
and
pop
stc
xor
sbb
scas
pop
stc
adc
xchg
fwait
loopne
xchg
not
hlt
movsl
xchg
addb
sub
and
aas
fdivl
inc
or
shlb
push
pop
push
out
aaa
adc
dec
push
pop
pop
and
outsb
jno
stos
das
jo
cld
xchg
dec
sbb
mov
icebp
fidivl
sbb
dec
push
adc
loope
or
mov
lahf
inc
and
jl
js
imul
sahf
cmp
mov
cld
xchg
mov
sbb
cld
jl
std
xchg
or
xchg
aaa
cmp
mov
or
stos
sbb
dec
inc
inc
jmp
movsl
test
pop
mov
lods
es
lret
ds
into
out
mov
push
mov
inc
and
repz
sbb
sub
loopne
dec
xchg
or
clc
lahf
ud0
pop
daa
mov
std
push
jle
clc
jnp
enter
enter
vmaxps
pop
cli
stos
mov
jp
sahf
and
push
pop
adc
pop
sub
int3
addl
cs
jno
inc
pushf
adc
inc
or
mov
int
inc
xchg
gs
or
lret
movsl
cmp
les
cmpsb
push
fstl
sbb
mov
jmp
movsb
xchg
enclu
jne
cmp
clc
mov
or
in
xor
scas
push
jbe
pop
fisubrl
fmull
push
cmp
mov
test
sbb
add
mov
loop
inc
cs
jo
xor
mov
sub
leave
xchg
roll
nop
cli
hlt
or
or
cmp
push
insb
push
das
test
outsb
xor
outsb
add
mov
push
movsl
push
scas
xor
add
dec
xchg
fdivrl
mov
mov
je
lods
dec
insl
lahf
jg
mov
lods
push
xchg
add
js
push
jmp
std
ds
and
sub
iret
mov
jp
cmp
inc
idivb
fdivs
pop
stc
or
cmp
push
push
xchg
xor
push
movsl
and
lea
jo
js
mov
ljmp
pop
jle
into
sub
scas
pop
fisubs
je
mov
mov
sbb
mov
insb
mov
enter
adc
ficoml
fistl
xorb
jecxz
push
sub
test
pop
push
inc
loopne
jae
je
add
int
mov
jg
cmp
shll
shl
inc
xchg
les
jge
mov
add
add
stos
jg
add
sbb
adc
sbb
inc
iret
insb
push
and
cmpl
and
xor
sbb
jae
dec
jge
mov
xor
dec
cmp
sbb
pop
scas
pop
sub
fcompl
sbb
cmpsb
mov
in
cmp
enter
insb
rorl
sahf
add
cmpl
fidivrs
adc
addb
cld
mov
mov
jmp
aam
test
mov
nop
add
push
xor
sbb
stos
cli
cmp
mov
lds
shr
jnp
cmp
cmp
adc
cmc
jb
jne
js
cld
cmpsl
and
out
jb
push
mov
push
ss
pushfw
inc
iret
out
mov
imul
push
cwtl
jae
icebp
cmp
xor
nop
jg
add
xchg
cmp
in
ret
ret
cmp
mov
ss
ja
push
mov
lahf
fs
mov
cmp
or
sbb
xor
sti
cwtl
add
push
adc
push
iret
lods
dec
jg
inc
iret
cmp
mov
xchg
scas
xor
jmp
sbb
mov
insb
rclb
xor
in
aaa
xchg
and
pop
xchg
dec
hlt
dec
stos
sbbl
aam
sub
or
cmp
ret
sti
xchg
mov
lahf
add
test
xor
insb
jmp
adc
mov
pop
sub
and
adc
in
out
das
notb
jae
enter
out
ret
and
xor
les
bound
mov
fcmovne
and
bound
pop
je
fiadds
inc
cmp
jo
mov
jae
out
lcall
xchg
ret
lret
xor
xchg
mov
ljmp
dec
add
out
sbb
xor
push
xlat
faddl
cmpsb
sahf
jg
xchg
sub
dec
jmp
jns
mov
hlt
xor
aam
fisubs
into
or
outsb
sbb
andl
test
jno
imul
jo
cwtl
pop
jl
sarb
inc
into
shll
and
mov
push
or
jb
stos
or
jl
test
cltd
shlb
and
jbe
push
cmpsb
push
cmp
int
push
sbb
add
stos
dec
cltd
mov
leave
add
sbbl
cmpsb
aas
add
dec
les
push
lahf
les
jb
dec
jns
rol
mov
stos
mov
sbb
jg
dec
addr16
or
mov
aam
and
push
ja
dec
out
inc
cwtl
shrl
add
inc
cmp
js
iret
mov
push
xlat
jl
iretw
clc
mov
andl
sbb
add
int3
imul
mov
dec
lahf
xchg
cmp
pop
xor
insl
je
gs
cmc
lds
lret
in
jg
int3
mov
hlt
sbb
in
jl
fstpl
rcrl
sbb
adc
mov
pop
fstps
mov
push
inc
cmpsl
fwait
gs
es
rol
in
xor
xchg
add
inc
sub
sbb
dec
pop
lret
sbb
xchg
test
push
mov
pop
imul
mov
fildll
xchg
cmp
dec
stos
pop
sub
mov
adc
test
sbb
filds
mov
imul
push
gs
stos
push
lcall
pop
in
jecxz
mov
std
lret
insl
dec
adc
pop
or
daa
shll
fwait
xchg
sbb
cwtl
jno
mov
add
push
inc
insb
andl
pop
ljmp
clc
sub
mov
jmp
fisubrl
add
rorb
pop
mov
push
es
mov
xor
push
hlt
repnz
test
mov
pop
in
loopne
sbb
mov
idiv
rcl
cmp
aas
push
add
jmp
and
jae
push
and
sub
adc
sahf
cmp
push
in
or
pop
cmc
pop
in
clc
rcrl
push
aaa
in
pusha
mov
add
xor
mov
popf
aad
loop
adc
test
jle
cli
pop
sbb
mov
lods
fxch
pop
xor
inc
shrl
mov
fldenv
cld
stos
jb
in
jecxz
jecxz
sbb
into
jmp
bound
lock
xchg
lret
jbe
leave
jmp
aaa
jecxz
sub
xor
movsl
ds
shlb
cmp
fwait
loopne
push
ds
rcll
addr16
imul
dec
pusha
push
xor
xlat
aas
fisttpl
sub
and
ja
push
shll
cmpsl
jno
outsl
outsb
xlat
xchg
mov
xchg
out
ror
fmulp
shrb
mov
bound
cmp
mov
ja
fiaddl
pop
adc
add
aaa
push
or
lret
decb
int3
jmp
enter
in
adc
mulb
mov
mov
inc
std
add
fs
sbb
fadd
adc
add
aaa
push
cmpsl
dec
out
and
pop
or
fwait
jg
adc
shl
mov
jno
inc
stc
fmul
je
jb
push
mov
sbb
add
rcrb
push
cli
jle
push
jbe
push
stos
cmpsb
mov
inc
and
stos
sub
clc
cmp
xchg
mov
mov
jnp
jp
xor
loope
fisubrs
jle
pop
imul
repnz
add
sbb
jne
iret
fbstp
flds
push
test
adc
out
testl
dec
jle
sahf
push
jg
add
clc
cwtl
or
sbb
out
daa
xchg
test
pop
xchg
or
ror
pop
movsl
rorb
inc
fwait
loop
les
fnstsw
mov
push
scas
lret
sti
cwtl
outsl
dec
add
add
aaa
lcall
and
cmp
xor
mov
cmp
bound
or
add
add
insb
sbb
sub
mov
lcall
sbb
sub
std
jp
mov
push
sbb
imul
mov
xor
push
imul
imul
shrl
jle
cld
push
inc
ljmp
jnp
cltd
insl
pusha
push
pusha
mov
fistps
pop
push
mov
lds
ds
or
jns
or
adc
loop
enter
shlb
testl
repnz
mov
xor
mov
mov
and
mov
ja
movsb
dec
or
jne
rcl
fs
sub
fiaddl
out
in
and
sbb
or
inc
jl
or
jle
ss
js
movsl
lcall
xchg
pop
cltd
es
sahf
orl
lock
lcall
stc
dec
xlat
or
mov
mov
mov
test
sbb
sub
mov
push
mov
test
fwait
nop
das
cmpsl
xchg
xchg
push
testl
inc
push
cmc
or
test
xchg
mov
jp
and
rorb
push
pop
push
or
pop
aam
push
cmp
inc
test
jnp
data16
scas
and
cmp
loope
jne
mov
jnp
stos
mov
add
push
mov
repz
repz
out
jge
hlt
pushf
lret
sub
dec
sub
cmp
cmp
out
cmc
push
cs
cmp
test
cmc
je
push
ftst
dec
add
push
jle
mov
sbb
loop
in
xchg
dec
fbstp
outsb
hlt
mov
push
xchg
xor
lret
push
pop
pop
mov
adc
sarb
sbb
adcb
sti
loop
xchg
outsb
rolb
test
dec
sbb
dec
sub
pop
cmp
bound
in
mov
jbe
lcall
add
call
xchg
push
lahf
insl
adc
mov
movb
inc
cmc
insl
sbb
roll
test
ret
and
pushf
sub
rorl
scas
daa
ja
pop
lret
ficompl
cmp
andb
mov
xor
cmc
dec
lahf
pop
jl
jmp
mov
mov
fldt
inc
cmp
mov
and
addr16
xchg
daa
lcall
ret
mov
into
repz
inc
pusha
mov
xchg
xor
enter
adc
xlat
mov
sar
and
in
cmp
push
out
and
shl
sbb
jo
cmp
loope
push
mov
cmc
movsb
stos
jns
popf
int
mov
push
cmp
mov
arpl
cmp
push
pop
or
lret
jmp
jb
idivl
idiv
jge
and
add
push
test
mov
lock
sub
mov
sub
push
add
pop
xchg
repnz
aad
int3
jae
int3
test
scas
fisubrl
in
cmp
outsl
sahf
or
cmp
cmp
mov
outsb
pop
loop
jmp
push
xchg
sbb
ja
add
cs
adc
std
cmp
in
std
in
mov
cmp
or
rorb
or
mov
mov
sbb
enter
fnstenv
lahf
call
and
adcb
outsb
or
pop
push
cmpsb
and
cmp
rcrb
dec
cli
test
cmpsl
pop
lea
rorb
jns
orl
fldcw
or
inc
hlt
out
in
xchg
xchg
jle
adc
inc
test
bound
leave
inc
pop
or
push
mov
or
repz
sub
sbb
jl
loope
stc
or
in
mov
call
popf
test
cld
repnz
jmp
sub
dec
push
xlat
lcall
outsb
push
scas
loop
or
push
jge
jbe
sub
imul
in
sub
inc
jge
jg
or
pushf
inc
sbb
jl
sub
pop
pop
lods
pop
push
jecxz
cmp
shrl
stos
or
ss
popa
aaa
jp
dec
scas
inc
dec
fldl
jo
inc
add
mov
out
xchg
mov
leave
mov
aas
cmp
fiaddl
adc
mov
pusha
inc
lods
fnsave
xchg
push
out
mov
mov
fnstsw
fildll
jmp
dec
push
cwtl
push
in
xor
xchg
cld
scas
movsl
loope
cltd
adc
sbb
rorl
cmp
addb
enter
xor
and
int3
push
sbbl
into
push
inc
and
js
movsb
ss
mov
sub
insl
int3
subb
mov
in
xchg
out
or
sub
mov
or
jne
fs
fnstsw
out
data16
jmp
negb
xchg
pop
in
aad
and
lea
int3
pop
divl
lds
mov
push
sbb
fadds
inc
or
sbb
push
xor
sub
in
adc
loopne
in
jne
sub
out
push
adc
push
inc
daa
ss
sbb
insl
stc
ret
outsb
ret
lds
mov
jns
xor
inc
sbb
cli
in
sub
fidivs
push
and
and
out
add
sub
jmp
faddl
stos
insl
xor
sub
jp
xor
gs
add
push
add
test
stc
scas
jns
hlt
cmp
jne
xor
outsb
mov
inc
mov
gs
pop
pop
jmp
sub
lock
inc
in
cltd
cmp
add
mov
sbb
mov
aaa
cmp
aas
mov
or
mov
dec
xor
adc
stos
outsl
jecxz
jmp
cmc
sbb
testl
add
mov
insb
push
jg
jmp
push
pop
cmp
push
int3
xchg
pop
lret
scas
dec
sbb
xorb
cltd
repz
inc
and
and
fnstsw
jl
pop
dec
jb
sbb
fwait
mov
lods
lahf
push
cmc
pop
fwait
cwtl
lret
fnstsw
icebp
xchg
mov
les
mov
and
out
push
jg
lods
jp
aad
cs
jp
adc
mov
pop
aam
ds
push
test
push
push
loop
test
jb
xor
ret
sub
xor
cmpsl
pop
pop
fiaddl
pusha
lcall
and
cmp
in
fstps
out
jns
push
gs
xchg
js
ja
adc
pushf
inc
aad
push
cmp
xor
push
lea
mov
inc
jne
ret
mov
pusha
cld
jnp
mov
pop
cmp
pop
hlt
push
mov
mov
lods
in
sarb
sub
fsubs
adc
pushf
fisttps
jne
jb
movsl
mov
and
gs
imul
daa
sbb
sbb
mov
rclb
les
lret
add
jp
and
inc
insl
out
inc
out
xorb
arpl
or
call
movsl
inc
or
arpl
pop
movsb
dec
ja
pop
insb
std
repnz
cltd
lret
aad
xchg
out
mov
idiv
inc
mov
mov
jmp
pop
mov
sbb
in
inc
fidivl
cmp
mov
rcr
sub
pop
ljmp
iret
mov
sbb
or
xor
aas
pusha
xlat
jne
push
or
arpl
mov
add
fwait
mov
jno
pop
fwait
in
mov
dec
cmp
push
in
sarb
bound
outsl
cmpsl
stos
ror
pop
ja
icebp
fcomps
imul
jge
pop
xchg
icebp
clc
mov
stc
mov
mov
cmp
sub
inc
insl
push
je
sbb
inc
sub
je
imul
fsub
push
or
in
fdivr
loope
push
push
pop
insl
imul
adc
push
adc
push
xchg
adc
les
mov
sar
and
jmp
push
ds
rorl
dec
mov
cmp
repz
and
sub
pop
jno
es
dec
inc
mov
mov
into
cmp
mov
adc
icebp
or
jne
ds
pushf
and
movsl
ds
jg
sub
add
mov
sbb
jb
jg
xchg
cmpsb
mov
xor
add
xor
push
test
pushf
mov
stos
push
sbb
popa
call
mov
fs
daa
mov
test
inc
sahf
sbb
out
push
shll
inc
or
out
pop
rcr
subb
and
or
in
xlat
je
out
dec
mov
mov
inc
push
aam
data16
popf
mov
mov
fmuls
push
mov
leave
lret
in
dec
sbb
sarb
jnp
shl
xlat
cmpsb
sbb
les
pop
fcmovu
and
ljmp
ds
xlat
dec
cs
aam
pop
cltd
movsl
pop
aaa
imul
jle
xor
shrl
fcmovnbe
mov
xchg
in
cmp
pop
test
aad
jp
push
add
mov
mov
das
and
das
jp
outsb
jmp
je
dec
and
inc
sahf
and
mov
pusha
test
jmp
push
mov
adc
mov
xchg
out
cli
incl
fiaddl
xchg
cmp
enter
mov
pop
dec
int3
insb
out
push
jb,pn
stc
popa
add
pop
jns
add
std
push
mov
fwait
sbb
jg
push
sbb
cld
xchg
and
out
push
xlat
enter
mov
adc
es
mov
mov
fsubs
cmc
in
mov
mov
xlat
imul
mov
negl
xor
test
xor
in
cmpb
mov
push
mov
sub
dec
mov
adc
std
in
push
ja
pop
out
inc
hlt
inc
jle
dec
mov
adc
sub
pusha
movsb
ret
pop
xor
insl
and
jo
fldt
adc
push
mov
iret
insl
mov
cmp
sub
imul
adc
sub
enter
fiadds
and
mov
mov
bound
dec
sbb
jge
cmp
mov
inc
in
jnp
subl
shlb
push
adc
jnp
fstps
sbb
lods
inc
mov
test
cmp
je
jb
jnp
je
or
lea
mov
addl
jle
jg
jb
stos
xchg
mov
xchg
cmpsl
out
leave
mov
xchg
insl
loopne
pop
imul
adc
pusha
test
int3
and
es
inc
ja
rcrb
cli
mov
mov
cmpsb
ss
push
mov
aad
addl
inc
or
push
jbe
stos
mov
mov
scas
pop
inc
mov
les
repz
pop
or
xchg
nop
call
push
dec
push
mov
inc
mov
sar
jp
inc
adc
fisubrl
inc
into
inc
mov
out
sub
lret
cwtl
or
insb
cmpb
sar
aaa
jns
nop
dec
and
fnsave
jmp
mov
or
cmp
inc
in
sbb
mov
sub
mov
fcoms
cs
imul
adc
push
hlt
cmp
mov
lar
imul
aas
and
sbb
loopne
lcall
dec
xchg
fnclex
fdivrl
or
jmp
hlt
mov
hlt
pop
jae
insl
xor
mov
int3
cmp
mov
and
mov
add
jns
xchg
push
repnz
arpl
cwtl
or
pop
sahf
fsubr
lcall
movsb
mov
pop
adc
fxch
imul
xchg
push
ret
and
jp
pop
pop
repz
mov
mov
bound
lods
mov
mov
in
or
stos
aad
out
xchg
or
jbe
add
mov
data16
jns
jp
lret
add
xchg
movsb
vcvtpd2dq
cmp
insb
stc
sahf
sbb
nop
ds
sub
pop
xchg
push
ret
ja
jg
repnz
xor
std
adc
cmpsb
pop
jbe
add
fadds
sub
inc
mov
outsb
cwtl
mov
pop
lret
xchg
sti
pop
adc
in
sub
stos
adc
lods
dec
add
mov
push
scas
out
scas
movsb
fisubrs
cwtl
out
mov
sbb
adc
pop
std
int
sub
pop
leave
fimuls
adc
lret
call
sub
push
repnz
add
aaa
add
push
cltd
mov
outsl
or
dec
jns
jg
enter
push
sbb
test
push
fistps
adc
loope
and
fcompl
jecxz
sub
push
or
pop
mov
aad
cld
push
mov
test
xchg
gs
sub
gs
push
inc
add
mov
mov
test
loopne
ljmp
add
lods
js
mov
cmp
ja
call
push
stos
cltd
sub
mov
jb
test
push
lea
add
sbb
xchg
shlb
xor
mov
mov
mov
inc
pop
ror
addr16
rcl
adc
into
inc
cmp
jle
cmp
xor
add
cld
sbb
int
rorb
sbb
jns
leave
imul
in
mov
dec
sbbl
mov
sbb
xchg
inc
pop
mov
push
hlt
jmp
daa
or
adc
enter
pop
aas
out
xchg
mov
lcall
xchg
das
inc
xor
ret
cmc
in
inc
psubq
sahf
ja
sub
jo
add
xchg
insl
das
pop
mov
pop
icebp
cmp
std
lods
je
jmp
fisubrs
add
cmpsb
lods
push
jge
mov
cwtl
bound
insl
outsb
sti
cld
cmpsl
jp
fwait
ret
jge
jge
in
adc
loopne
stos
les
cmpsl
mov
sub
mov
xlat
cltd
push
dec
scas
or
aad
jg
mov
out
idiv
xor
dec
je
dec
mov
fstpt
inc
pop
lahf
stos
or
jecxz
cwtl
mov
rolb
pop
je
jl
lret
xchg
out
dec
sub
and
jne
cwtl
add
fs
fbld
mov
xchg
adc
lods
xor
outsl
cli
test
mov
push
ror
xor
pop
pop
xchg
add
jle
xchg
pop
adc
pop
jbe
push
and
mov
sub
xchg
pop
xor
mov
or
xchg
push
pop
mov
sbb
or
mov
jne
enter
lret
adc
add
cmp
pop
and
jmp
test
sub
bound
pop
xchg
icebp
rcr
sbb
cmp
mov
prefetcht1
leave
fwait
cs
es
inc
ja
push
jae
popa
xor
cltd
cs
cmp
pop
mov
sub
mov
dec
xchg
inc
sarl
add
and
xchg
test
mov
xchg
inc
adc
mov
mov
dec
mov
add
lock
jg
mov
xor
repz
out
sbb
jle
int3
xor
adc
add
and
roll
orps
cwtl
in
mov
stos
xchg
sbb
jbe
pushf
cmp
cmp
cmp
jns
mov
mov
jge
aas
xchg
pusha
xchg
sub
xorb
dec
movsl
in
push
int
idivl
je
and
hlt
loop
lods
sub
adc
lret
jmp
mov
pusha
outsb
mov
sub
je
movsb
xor
inc
cmp
faddl
ja
jmp
dec
mov
or
mov
cld
andl
sub
mov
out
push
test
aad
mov
nop
adc
mov
arpl
cmp
xor
pop
push
cmp
add
fldl
inc
roll
push
pop
cmp
test
adc
shlb
jb
and
pop
mov
stos
in
mov
mov
jle
scas
dec
fldt
popa
sub
movsb
xchg
push
mov
pop
xchg
mov
les
enter
sub
dec
pusha
sti
pop
fistpl
lcall
xor
add
mov
pop
jne
fdivs
je,pt
rcl
imul
pop
mov
sbb
add
xchg
sub
jg
cmpsb
dec
pop
add
mov
clc
lea
insb
repz
push
mov
jge
rorb
sub
fistpl
cmp
push
jns
pop
mov
jg
push
sbb
add
movsl
and
adc
xchg
stos
jmp
aas
add
and
inc
cmp
cs
pop
pusha
jns
test
push
pop
xlat
mov
mov
movsl
cmpl
mov
test
sub
fldenv
xchg
dec
mov
mov
stos
stos
out
cmp
jl
and
mov
int3
push
test
call
adc
int3
push
lock
sub
sbb
arpl
test
clc
ds
jne
adc
insl
mov
clc
mov
or
ja
sub
add
xchg
ss
cmpsl
pop
ret
mov
xchg
pusha
imul
adc
jge
hlt
ja
mov
cmpsb
movsb
iret
add
mov
jp
push
mov
in
fidivs
test
xor
xchg
nop
repz
sub
jo
push
je
mov
pop
rcr
mov
out
sbb
mov
stos
cmp
ss
ret
in
test
cmp
xchg
fisttpll
fldcw
shrl
shrl
xchg
sub
in
jno
je,pt
jg
aaa
adc
push
pop
mov
ja
ja
sbb
mov
lods
jmp
xor
jle
movsb
mov
sub
into
daa
push
push
adc
pushf
dec
mov
mov
ret
cmp
pop
in
std
testb
xchg
shrl
add
scas
sub
cmp
pop
gs
mov
push
hlt
ja
mov
loop
mov
push
and
sti
mov
cmc
loop
push
sub
das
pop
sbb
or
shll
mov
ss
mov
leave
inc
movsl
cmpsl
mov
jg
sub
jbe
cld
fstpl
pop
jnp
and
out
data16
lds
sbb
mov
mov
clc
xchg
inc
xor
ja
sub
push
xor
fcompl
lahf
pop
sbbl
or
fnclex
call
add
or
ds
test
mov
mov
jno
xor
adc
or
movsl
ds
popf
inc
mov
fdivrs
loop
add
dec
mov
cmc
out
cmp
add
jnp
lcall
mov
jecxz
and
repz
jno
sti
pop
dec
pop
mov
mov
mov
cld
test
lea
xchg
jp
nop
adc
inc
int
fnstcw
jae
enter
mov
add
daa
test
adc
xor
test
clc
cmpsb
adc
mov
repnz
dec
mov
fldenv
jle
fnstenv
jge
test
inc
pop
jne
mov
sbb
aam
and
pop
aad
mov
or
and
and
pop
inc
xor
jno
lcall
outsl
int
movl
or
or
or
mov
iret
icebp
outsl
xchg
fistps
imul
dec
or
insb
out
subb
out
fwait
cmp
in
cld
mov
mov
dec
add
push
mov
insb
jle
push
inc
movsl
xor
dec
scas
stos
sbb
rcll
insl
psubb
lea
jle
in
mov
mov
mov
inc
aas
std
lret
lahf
lret
adc
sbbl
stc
and
ficompl
xor
mov
jl
cltd
repz
xor
xorb
lahf
stos
cmp
mov
loop
into
push
or
inc
pop
rolb
push
daa
pop
jp
dec
fs
add
add
and
sub
outsl
insl
imul
cmpsl
inc
cld
jmp
scas
and
rorb
hlt
jb
push
sbb
outsb
xchg
push
mull
aam
shlb
fdivrp
lahf
jp
adc
cli
inc
andl
shr
mov
orb
fldt
cltd
mov
push
lock
xor
out
jne
jbe
push
repnz
jle
inc
or
adc
and
xor
push
xchg
jl
cmp
sbb
mov
jne
insb
pop
inc
add
push
imul
mov
icebp
out
jg
movl
movsb
jecxz
das
imul
movsl
aas
sub
fidivrs
and
sbb
jne
adc
pusha
push
push
stc
mov
push
insb
lods
mov
cmp
in
mov
jbe
push
mov
leave
mov
sbbb
stos
sub
fcompl
push
add
sub
mov
jp
jae
pushf
shlb
adc
push
ret
jo
push
lock
js
adc
and
inc
pop
inc
push
mov
std
xacquire
pop
cld
push
fildl
sbb
and
push
scas
pushf
imul
push
add
inc
jl
cmp
pop
insl
push
dec
movsb
xor
andb
and
adcb
mov
cmpsl
dec
cwtl
mov
jae
jns
decb
into
mov
mov
sahf
sbb
inc
rclb
cmp
mov
mov
xchg
sbbb
stos
mov
dec
sbb
sub
push
test
xchg
push
stos
push
jno
mov
mov
out
movsl
dec
in
or
mov
xlat
mov
pop
test
jg
lret
sti
imul
or
or
and
dec
loope
repz
lock
fsub
lods
inc
xchg
pop
push
pop
mov
fucom
loop
sbb
pop
sbb
jecxz
pusha
insl
shlb
dec
jnp
and
arpl
mov
gs
mov
aas
mov
aam
cmp
inc
adc
push
jbe
mov
inc
or
inc
cmpsb
insb
shl
add
sub
and
mov
push
insb
cli
push
mov
mov
dec
inc
xchg
push
dec
in
adc
mov
pop
das
add
jecxz
push
xchg
cs
add
xor
sub
inc
pop
sbb
shrb
ss
dec
jns
movsb
or
sbb
mov
and
push
sti
jae
fidivrl
dec
pop
in
pop
add
xchg
es
sbb
fimuls
cmpsl
ds
inc
ficoms
imul
cmp
rolb
incb
cmpl
jecxz
push
insb
pop
rclb
ret
jno
std
sbbl
je
cs
push
jno
cli
push
mov
sbb
xor
shlb
popa
pushf
mov
lret
mov
adc
test
mov
jno
jnp
mov
dec
pop
sub
ds
ret
inc
xchg
and
sbb
add
cli
insl
ss
jnp
add
rcrb
ficomps
push
pop
stos
popa
aad
into
push
insb
push
jge
mov
jne
sbbl
jne
mov
mov
jns
clc
sbb
scas
cmp
loope
sbb
push
mov
bound
or
mov
je
ret
fwait
sbb
std
mov
or
or
inc
fimull
xor
int3
into
xor
dec
cmp
repnz
int3
xor
lock
jno
orl
pop
cmp
mov
or
leave
dec
pop
push
xor
cld
mov
shlb
dec
sbb
les
inc
scas
fcmove
aas
dec
into
into
sti
jle
lret
les
enter
push
out
shll
mov
shll
mov
mov
push
lret
cs
pop
lret
sub
sub
in
mov
mov
mov
xlat
push
cli
dec
lea
pusha
loop,pn
jbe
stos
pusha
sbb
jne
adc
jns
pcmpgtw
push
push
aad
pop
js
mov
cmp
in
in
adc
scas
jge
js
stos
pop
mov
aas
sbb
out
lret
mov
jne
cmp
mov
imul
repnz
mov
sbb
pop
jle
addr16
roll
pop
and
jno
xchg
adc
mov
xchg
hlt
sub
mov
and
jmp
pop
in
das
mov
sub
shll
cmpl
sub
out
xor
mov
ror
gs
push
lods
imul
arpl
xchg
or
adc
xchg
push
movsl
hlt
mov
sub
idivb
and
adc
jg
loope
lods
std
push
sbb
in
in
sbb
rcrl
adc
inc
data16
daa
ss
pop
adc
push
and
pop
push
push
mov
shll
jne
mov
sbb
jnp
lret
lods
push
imul
inc
mov
push
out
jge
jg
cmpsb
out
lds
push
fisttpl
inc
test
mov
or
stos
dec
gs
jp
ljmp
mov
cli
fs
lret
jno
jne
rorb
fmull
or
xchg
jp
lahf
nop
cmpsl
cmp
adc
add
adc
mov
sbb
repnz
jbe
pop
std
out
out
cli
addl
stc
movsb
push
fwait
not
xchg
popa
mov
push
mov
dec
inc
add
xchg
jmp
adc
mov
xor
jge
mov
test
push
flds
xchg
aaa
sbb
mov
cli
aad
out
inc
scas
ds
addr16
orb
mov
fistl
push
insl
inc
mov
ret
fwait
mov
or
bound
int
ds
enter
lret
jp
pop
mov
push
pop
dec
mov
sub
in
push
mov
arpl
pop
jae
rcl
dec
mov
cmp
cld
cwtl
sbb
lods
lock
xchg
adc
jb
inc
ja
popa
pop
cli
repz
jb
cmp
pop
fidivs
lods
inc
mov
add
sbb
fldcw
push
ficoms
fyl2x
movsl
inc
dec
xchg
sahf
mov
pop
sub
lods
adc
stos
shll
mov
push
test
test
dec
xlat
test
out
adc
xchg
dec
dec
xchg
inc
xorl
test
xor
sub
jmp
inc
cmp
sbb
mov
sub
pop
popa
cmp
ljmp
add
loop
rcrb
es
es
loopne
in
add
insb
es
pusha
sarl
mov
xchg
iret
mov
test
sub
loop
mov
and
push
jp
cld
and
cmp
fisttpll
jecxz
test
repnz
popf
call
jl
ss
push
sub
add
jne
add
mov
jb
mov
sub
aas
fldcw
and
mov
js
imul
mov
pop
in
mov
repz
pusha
dec
push
mov
out
inc
push
pushf
cli
adcb
and
iret
or
sub
mov
mov
popf
mov
xor
or
lock
in
sbb
mov
shrl
fsubrs
jp
sub
xor
iret
jge
test
pop
aad
andl
sub
mov
in
dec
xchg
mov
out
push
mov
ja
aas
jo
or
sbb
xor
out
out
xor
add
mov
mov
cmc
out
or
outsl
mov
mov
mov
inc
jae
insb
insl
sub
cmpsb
mov
sub
insl
pop
pusha
test
lea
fs
fisttps
insb
pushf
cmp
test
stos
xchg
fadds
shrl
cltd
dec
mov
neg
ret
jo
cmovo
adc
lock
stc
icebp
add
std
out
mov
xchg
sbb
inc
fucom
push
fdiv
fs
call
push
fcom
in
lds
mov
in
insl
arpl
data16
std
test
fscale
int3
dec
sarl
movsl
stos
push
ja
pop
ret
dec
aad
xchg
add
add
jl
mov
xchg
pop
pop
add
imul
pop
rcrl
inc
sbb
fidivl
sbb
adc
jb
inc
daa
shl
mov
xchg
mov
stc
push
mov
add
jns
nopl
jnp
pushf
jns
mov
aaa
int
lea
mov
adc
test
push
scas
insb
xchg
sti
nop
sbb
mov
cmp
dec
mov
pop
jge
lea
cmc
stc
xchg
xchg
push
in
icebp
dec
es
js
out
cld
or
das
shll
ret
inc
ror
cmp
cld
jbe
mov
fadds
fwait
mov
insl
std
das
lods
sarb
xchg
out
pop
cmp
jmp
push
es
adc
out
jb
cs
bound
cmpsl
mov
cld
mov
xor
insl
xchg
rclb
mov
in
loope
scas
push
mov
adc
in
repnz
int
rcr
xchg
sbb
xchg
lds
out
inc
fcmovbe
xchg
std
inc
inc
jno
inc
cmp
decl
xor
jae
mov
push
es
es
xchg
jb
test
mov
mov
push
lahf
sub
pop
cmpsb
mov
push
adc
cld
xchg
adc
in
repz
jmp
push
jb
shrl
loope
mov
jp
ja
pop
and
add
and
scas
sbb
sahf
sbb
pop
imul
aaa
daa
mov
ret
add
sahf
stos
imul
les
cmp
in
loopne
mov
ss
imul
sarl
nop
cltd
call
in
and
int3
xor
fcomp
shlb
mov
xor
push
ffreep
dec
and
repnz
mov
mov
stc
and
les
xchg
rorl
icebp
outsb
rcrb
test
loopne
fdivrl
xchg
inc
or
int3
sbb
roll
repz
pop
out
repnz
sbb
jno
popa
insl
mov
lret
jns
mov
testb
push
dec
pop
add
adc
imul
std
std
push
or
mov
push
cmp
shll
insl
jbe
cmp
cmpsl
adc
imul
sub
xor
stos
xor
in
jecxz
or
mov
jo
cmp
sti
xchg
mov
and
push
and
jp
scas
cmp
scas
jecxz
mov
je
sub
mov
adc
in
mov
fimuls
push
mov
push
fdivs
rcrl
mov
movsl
dec
popf
out
mov
gs
jns
rorb
and
daa
decl
fisttpll
jne
aad
push
push
add
adc
xchg
ficomps
sub
mov
inc
loopne
jns,pn
dec
pop
dec
sarb
in
xchg
or
lods
stc
test
inc
es
add
aam
adc
lea
mov
pop
pop
cwtl
stc
jns
xchg
mov
sub
push
push
pushl
jbe
stc
les
aaa
es
std
push
pop
mov
cmp
mov
inc
or
dec
mov
cmp
or
xlat
jno
jle
sti
inc
outsl
mov
push
incb
test
test
lret
and
sbb
cmova
fcompl
nop
sbb
jno
ret
mov
pop
adc
out
sub
aas
pop
mov
fwait
xchg
mov
insl
add
fistpll
fwait
mov
rorl
adc
sbb
push
xor
aas
cmp
cmp
push
adc
add
leave
stc
lods
sti
sbb
and
mov
test
cmp
enter
loop
xlat
xor
mov
rcll
cmpsb
adc
xchg
add
frstor
movsb
jo
or
clc
aam
jp
je
jne
out
or
outsb
arpl
jle
push
sub
movsl
mov
mov
mov
fisubrl
cmp
push
in
repnz
jmp
jo
jecxz
and
gs
fs
inc
sarb
jp
pop
sub
in
pop
loope
or
xorl
xor
fistpll
add
or
pop
or
test
loope
mov
push
test
and
fcmovb
add
out
daa
push
push
out
out
mov
outsl
xor
movsl
hlt
jg
scas
cmpsl
inc
sub
aad
cmpsl
sbb
xor
dec
sub
cltd
dec
xchg
mov
pop
into
xchg
les
pop
aaa
mov
fdivl
xor
add
jge
xor
xchg
xor
daa
dec
mov
mov
mov
jl
test
mov
in
sbb
push
mov
ficoml
lcall
and
push
cmpsb
repz
adc
sub
and
fcoms
insl
in
imul
cltd
sbb
loopne
loopne
cmp
imul
fwait
and
jge
mov
push
out
mov
push
inc
cmp
in
cld
insb
dec
cmp
lcall
mov
shrl
movhps
push
cmpsb
iret
cmp
leave
imul
fisubrl
jp
movl
lock
jbe
arpl
cmp
or
cmpb
sub
rol
xor
pop
jg
mov
fwait
cmp
lods
pushf
das
sub
inc
pmovmskb
mov
push
or
lods
div
or
addr16
iret
mov
dec
iret
sahf
scas
jns
pop
push
mov
sub
sub
or
cmp
gs
shlb
jle
outsl
jle
and
pop
cmpsl
or
mov
pop
stos
cmp
out
xor
stc
xor
push
add
aad
les
push
ljmp
xchg
movsb
cmp
mov
mov
sahf
imul
dec
fnstcw
stos
and
rcll
jbe
call
arpl
faddl
xchg
addl
mov
or
jns
jge
mov
mov
jo
mov
js
cmp
cmp
aam
jno
out
test
lcall
ret
add
xchg
pmuludq
iret
push
cmp
push
push
jle
sbb
jne
mov
cld
iret
pop
and
mov
or
ret
and
les
adc
xor
stc
jno
jae
frstor
lret
popf
inc
xor
xor
sbb
iret
fadd
testb
sbb
push
add
rorl
sbb
dec
xchg
lds
les
in
cmpsl
jne
mov
cmp
lds
imul
pop
cmp
in
hlt
lods
repnz
or
aam
adc
int
imul
push
inc
sub
ret
or
and
sub
fdivs
or
fidivl
xor
jl
aam
loopne,pt
andb
orl
fsubrp
mov
mov
fs
xor
mulb
out
or
push
or
fdivl
rol
and
fstpt
mov
dec
sub
shll
jl
cmc
mov
or
sbb
rolb
bound
pushf
and
jl
xor
icebp
neg
lock
inc
loop
lock
mov
in
fdivl
fcoms
inc
ds
adc
pop
inc
push
push
daa
out
iret
inc
push
push
lock
push
sub
inc
push
mov
imul
pop
out
and
adc
ror
sbb
or
lods
ret
cmp
dec
cmc
xchg
push
ss
mov
xor
jo
sbb
inc
or
iret
rorl
and
cmp
lea
fwait
push
or
pop
xor
sub
outsl
pusha
test
pop
lret
xchg
adc
xchg
into
jne
and
sarl
imul
orb
std
enter
pushf
dec
sbb
jecxz
in
aad
call
ds
or
cmc
loop
out
scas
hlt
mov
mov
inc
mov
fisttps
out
faddl
std
jle
pop
scas
push
fwait
jo,pn
or
inc
pop
stc
iret
cmp
or
cmc
outsl
leave
pusha
inc
jne
push
adc
or
inc
sbbl
movsb
sbb
dec
dec
aaa
push
ljmp
jns
fisttpll
xchg
mov
inc
test
and
lods
mov
mov
daa
stos
or
xlat
gs
mov
or
mov
pop
cmp
xchg
jne
push
scas
ja
pop
mov
jecxz
push
stos
stos
ret
dec
ja
into
dec
push
in
or
sub
push
mov
pop
sbb
popf
int
xchg
test
in
lock
xchg
push
in
je
xchg
add
or
fistpll
sub
cmpsb
push
mov
mov
out
ljmp
add
lahf
dec
sub
mov
rorb
leave
inc
sahf
test
and
fnstcw
mov
add
ret
or
add
jmp
and
sarl
leave
xlat
adc
lods
xchg
mov
dec
insb
xchg
popf
cmpsb
and
movsl
and
pusha
clc
testb
cwtl
or
bound
inc
push
dec
mov
insl
int3
xor
sbb
jns
lahf
sub
xor
lods
movsb
adc
mov
xor
xchg
mov
jbe
fs
jge
or
mov
inc
lahf
jl
mov
movsl
mov
xchg
sti
cli
movsb
inc
xor
icebp
fstpt
mov
push
mov
imulb
icebp
into
adc
xchg
lds
loop
rclb
mov
mov
add
outsb
xchg
je
push
sbb
push
or
mov
inc
clc
divl
mov
add
mov
jne
push
jecxz
jg
and
and
pop
pop
movb
js
es
pop
xchg
push
push
sub
fistpll
ss
arpl
ret
lcall
pop
xlat
or
out
inc
or
jg
mov
fdivl
mov
aad
push
les
insb
cmp
je
daa
je
or
add
arpl
lcall
add
pusha
dec
fldt
test
sub
sbb
cwtl
jne
or
nop
and
outsb
mov
pop
rcrb
outsb
push
fs
sahf
ret
divb
mov
cltd
bound
stos
dec
xor
mov
add
imul
leave
push
int
sbb
mov
mov
mov
fsubrl
mov
xsha1
cmpsb
or
stos
mov
cmp
push
or
sbb
aam
enter
cmp
push
xor
int
repz
and
lods
mov
xorb
out
mov
push
mov
dec
mov
or
add
push
jns
sbb
or
inc
push
es
fwait
add
int3
bound
mov
xchg
lods
pusha
sub
in
ljmp
fcompl
lahf
arpl
or
inc
comiss
dec
adc
leave
lock
cmp
insl
cmp
lock
out
and
cmpb
aam
adc
fucom
ss
test
ret
loop
mov
hlt
out
xchg
jmp
sahf
out
sbb
mov
sub
mov
mov
mov
cli
adc
sub
add
pop
mov
fadds
loop
mov
les
loop
xor
jne
xchg
out
mov
sbb
lret
push
insl
les
and
das
sbb
test
popa
fcoml
mov
xor
mov
push
dec
mov
fdivrl
mov
xor
cmp
inc
ret
js
mov
mov
je
gs
add
sbb
dec
inc
xlat
aaa
adc
in
inc
outsl
xchg
dec
xchg
int
nop
fnstcw
push
lock
scas
sbb
pop
adc
push
in
sti
push
xchg
call
and
and
repnz
aas
enter
leave
sub
out
mov
push
fwait
sub
stc
cmp
add
pushf
pusha
rcrb
lahf
leave
sub
lods
adc
lods
mov
hlt
or
mov
mov
cmp
sbb
jo
fnstenv
jne
test
xchg
test
cmpl
dec
sahf
cmp
push
sbb
loopne
in
cli
into
jg
adc
std
mov
pop
and
movsb
stos
inc
inc
xchg
mov
adc
mov
insb
je
dec
or
notl
repnz
dec
icebp
push
adc
cmpsb
pop
lods
test
ret
xlat
pop
pop
rcl
mov
stos
xor
lods
sbb
mov
cmpb
dec
out
cwtl
push
enter
ja
roll
jmp
mov
inc
pop
mov
popf
cli
in
cmpsb
pop
test
int
push
dec
mov
daa
lods
insb
jae
inc
stos
test
notl
push
and
pop
or
or
mov
sbb
jb
cmpsb
adc
lods
out
stos
inc
stc
sbb
inc
xor
pop
out
aam
jmp
inc
lret
in
shlb
decb
shlb
or
test
add
pop
mov
pusha
mov
add
adc
call
xchg
mov
les
fsts
jmp
push
pop
rcl
pop
sbb
outsb
sti
adcl
inc
or
adc
shlw
jg
cltd
nop
aaa
sbb
stos
pushf
xor
ret
adc
mov
inc
xchg
jb
lock
jp
xor
add
rcr
cli
cltd
mov
or
pop
sarl
mov
lcall
sbb
and
xchg
mov
dec
cltd
xor
sbb
push
lods
jae
faddp
ds
sbb
scas
add
jne
cmc
movsl
and
frstor
pop
nop
and
xchg
adc
jnp
mov
out
push
notl
pop
insb
insb
in
mov
cmp
xor
sbb
mov
jbe
cmc
jl
das
xchg
iret
mov
adc
jle
sub
bound
in
mov
dec
sti
sub
sbb
jne
sub
gs
pusha
call
push
ja
divb
sbb
pop
in
mov
nop
adc
push
popa
mov
cmp
test
in
gs
xchg
push
cltd
iret
ret
add
sbb
clc
mov
cmpsl
mov
mov
mov
sbb
xor
repnz
push
fcompl
aam
inc
sub
sub
lahf
sub
push
lock
sbb
mov
dec
pop
clc
aas
jno
test
out
aad
test
push
cmp
adc
lret
std
sub
push
shlb
loope
in
push
int3
divl
xchg
sbb
out
jbe
cmp
subl
add
sub
sub
popf
mov
inc
jo
out
aad
jo
jb
or
push
imul
mov
mov
sbb
mov
or
call
cmpsl
loopne
dec
lret
sbb
je
mov
imul
je
mov
int
mov
aad
dec
fldl
sbb
movsl
and
jbe
adc
mov
jo
sbb
data16
adc
adc
cld
nop
mov
sub
lods
sbb
daa
mov
mov
mov
sbb
sub
jae
sti
pop
push
lret
mov
xchg
pop
mov
cmp
sbb
loope
icebp
sub
mov
int
test
mov
mov
fldl2e
dec
subl
incb
popf
test
xchg
adc
and
mov
insl
mull
mov
std
mov
push
mov
or
fs
mov
mov
lea
in
imul
mov
dec
fistps
pop
loopne
popf
insb
mov
jmp
inc
push
push
stc
pop
xchg
adc
sbb
cmpsb
jg
aad
pop
adc
fimuls
mov
sbb
mov
popf
sarb
mov
mov
push
adc
jecxz
cmp
fldenv
sbb
xchg
jae
sub
mov
push
inc
push
bound
fwait
sahf
fcomi
adc
jb
popa
mov
dec
push
stc
mov
dec
das
lahf
pop
sbb
mov
popf
cmp
stos
xchg
in
insb
int
jo
ljmp
cmp
push
mov
rcll
push
mov
sub
xchg
sub
jg
shrb
filds
or
adc
idivl
sar
pop
sbb
push
cmpsb
fst
fisttps
out
jg
out
xchg
sub
test
push
cmp
jmp
fcoml
jle
mov
out
push
or
shlb
lret
scas
sub
jmp
test
call
out
int3
mov
fwait
adc
lret
in
rcl
into
ja
and
mov
in
repnz
inc
lret
xor
nop
adc
cmpsl
pushf
in
push
add
iret
dec
mov
movsb
out
and
pop
shrl
mov
outsb
pop
xchg
push
sub
inc
ret
idivb
cmpsl
pop
and
sbb
inc
sub
mov
dec
fildl
fisubrs
push
push
lret
mov
lods
aaa
sbb
repnz
push
addr16
in
xlat
stos
dec
in
xor
pusha
test
movsb
aad
inc
rcr
fsubrp
or
sbb
test
fldl
pop
in
adc
adc
cs
mov
mov
shll
insb
jo
mov
into
xchg
rolb
or
jle
xor
leave
outsl
jae
and
int3
loopne
xchg
xchg
dec
lds
pop
dec
fcmovnbe
inc
adc
movsbl
add
lcall
test
insb
mov
adc
loope
fwait
bound
inc
mov
neg
int3
or
outsb
sub
pop
aas
add
jmp
pop
push
repz
mul
std
mov
inc
cmp
pop
pop
aam
xor
lret
notl
cmp
ds
lods
mov
mov
adc
sub
adc
inc
add
push
and
bound
mov
or
cltd
jb
mov
pop
pop
cmp
push
fs
imul
cmp
mov
add
cltd
test
shrl
mov
mov
jmp
sbb
stc
andl
popf
mov
addr16
filds
or
sub
sbb
mov
mov
fidivrs
jno
mov
mov
out
and
add
xlat
test
fidivl
adc
mov
das
mov
sub
insl
ds
test
fldt
dec
sub
in
popf
out
enter
dec
cs
add
cmpsb
dec
pop
jne
fldt
sbb
pop
mov
jae
pop
cmp
push
pop
int3
mov
lea
les
xor
mov
das
shl
mov
sbb
ret
xchg
sub
test
adc
outsb
and
ljmp
dec
movsb
sub
and
call
lds
fstpt
clc
jle
push
fdivrp
xchg
cmp
push
add
rolb
jae
mov
xor
mov
stc
xchg
fsub
jecxz
cwtl
bound
into
and
stos
cmp
mov
gs
inc
jecxz
mov
dec
jl
xor
je
dec
dec
jge
push
or
es
push
jp
jne
pop
xor
push
cwtl
sub
rorl
cmp
mov
adc
mov
and
out
es
cmp
ret
cmc
repnz
adc
mov
notb
std
xor
fidivs
imul
mov
xchg
js
xchg
sahf
xor
aas
sar
pusha
sbb
test
out
adc
addb
stc
push
mov
fsubs
cli
and
jg
int
push
dec
js
xchg
aad
std
cli
add
loopne
insb
test
inc
out
es
leave
les
mov
adc
loopne
popa
rclb
and
and
sbb
fs
sbb
mov
cmc
enter
mov
js
mov
ja
movsl
sbb
adc
mov
jle
jae
aas
cmpsl
das
and
lods
sub
adc
push
int
xchg
add
mov
push
sub
mov
ret
mov
pop
mov
cmc
mov
pop
ret
inc
xlat
or
push
mov
push
lahf
xchg
push
or
das
add
mov
fmull
mov
repnz
loopne
je
cltd
shl
scas
sub
xor
out
cltd
push
pop
push
cld
cltd
das
jge
sbb
in
inc
mov
daa
xchg
lret
mov
dec
pushf
jb
fs
mov
xor
fiadds
and
out
xchg
xchg
imul
sarl
pop
mov
dec
mov
leave
mov
fs
fstl
xchg
push
or
jne
stos
pop
fs
cmp
ficompl
ret
mov
add
mov
imul
jb
fistl
fsubrs
nop
adc
xchg
jp
outsl
test
cmp
scas
dec
js
rolb
sub
clc
out
add
sub
dec
fists
lods
add
int3
std
daa
sarl
jecxz
idivb
mov
or
or
imul
inc
lock
pushf
lock
nop
sbb
loop
mull
pop
fnstsw
sub
stc
cli
add
cltd
add
js
cli
or
lcall
mov
into
mov
je
test
daa
ja
and
test
sarb
mov
cltd
jp
push
xor
decl
ss
and
loopne
dec
cli
xchg
sub
mov
fisubrl
popf
jl
int3
jns
es
add
loop
jns
js
ror
mov
mov
roll
dec
jo
jne
jg
jge
mov
cli
fmull
insl
dec
lahf
xor
pushf
push
movsl
cmpsl
push
adc
mov
push
ss
jbe
mov
sub
es
pop
pusha
inc
mov
xchg
xchg
pop
mov
inc
or
testl
stos
enter
loop
mov
adc
sbb
stos
or
andb
andl
out
xchg
ss
mov
repnz
cs
mov
lahf
push
push
sbb
xor
pop
sub
nop
jae
call
inc
stc
cmp
jbe
aam
cli
sub
sbb
sbb
out
sbb
xlat
add
xchg
dec
jecxz
dec
nop
in
xlat
in
xchg
in
fs
or
popa
mov
mov
and
jle
mov
xor
out
jbe
sbb
pop
imul
sarb
add
add
mov
shll
outsl
or
inc
ds
out
sub
ror
dec
rol
outsb
mov
push
jnp
shrl
stc
ret
mov
test
inc
gs
shrl
and
push
sub
popf
mov
pop
js
cmp
xor
cmpsb
insl
lea
pop
stos
jecxz
inc
mov
cwtl
movsb
repnz
sbb
or
rclb
mov
and
pop
push
pusha
lea
outsb
sti
jecxz
jmp
test
inc
mov
mov
and
push
jecxz
enter
iret
stos
ficoml
mov
and
test
scas
xchg
xor
vpmovzxwq
out
repz
or
xor
cmp
sub
in
pop
lcall
jmp
mov
cmc
jo
movsb
loopne
pusha
loopne
ret
hlt
data16
push
cmpsb
pushl
aam
jae
jmp
or
adc
adc
xchg
flds
mov
sub
pushf
mov
rorl
test
je
add
fdivs
into
mov
xlat
mov
push
or
inc
and
sub
into
test
or
jb
fisttpl
je
dec
cli
ljmp
sahf
xor
mov
and
cwtl
xchg
in
sub
cs
and
dec
std
xchg
insb
mov
jae
mov
and
mov
hlt
loop
xor
dec
or
push
add
fbstp
push
ljmp
push
mov
mov
mov
stos
addb
mov
push
addr16
inc
sub
mov
ret
mov
inc
aam
int
setp
mov
xchg
test
insl
mov
lret
jae
add
xchg
jnp
sbb
mov
das
test
push
mov
outsb
test
sahf
jb
push
or
adc
lods
arpl
xor
lret
ret
jo
add
cmp
mov
enter
dec
andb
les
push
adc
ret
cli
inc
mov
jae
xchg
popf
push
out
jnp
pop
push
fcmovne
and
pusha
cmp
jnp
dec
pop
xor
aad
jp
arpl
mov
sti
push
incb
testl
xchg
adc
addr16
jae
cmp
jg
cwtl
inc
fcmovne
lea
inc
popf
in
in
inc
jns
stos
cmpsb
call
test
mov
jns
inc
loopne
xchg
mov
mov
les
sub
sbb
scas
cltd
xor
lds
or
sub
in
fwait
outsb
shl
pop
xor
jg
sbb
add
mov
loopne
test
pop
popa
outsl
test
pop
sbb
lds
mov
in
mov
push
jecxz
mov
mov
pop
imul
mov
das
jne
dec
shl
push
in
daa
ljmp
hlt
mov
jg
inc
neg
and
enter
mov
negb
xchg
or
pop
inc
cld
movsb
mov
pop
cmpsl
iret
xchg
xor
adc
or
mov
outsb
mov
jge
loop
xchg
fldl
mov
jle
adc
popl
mov
repz
mov
xchg
fwait
pop
ja
sbb
and
cmp
jnp
sub
insl
popf
sbb
push
cs
or
lcall
cmp
xchg
xor
ljmp
push
clc
idivb
insl
or
xchg
xor
jb
or
and
nop
rorl
scas
lds
jne
popf
push
fstl
fnsave
and
mov
dec
xor
mov
aam
push
jae
pop
or
add
mov
out
adc
ss
xor
mov
data16
int
hlt
xchg
fisttpl
ret
in
jo
jno
push
mov
into
adc
inc
aaa
mov
roll
fisubrl
ja
xor
stos
loopne
pop
hlt
scas
mov
add
lret
push
or
jge
add
loope
sbb
ss
dec
and
adc
jecxz
dec
dec
das
sbbb
bound
sbb
ljmp
sub
mov
or
push
jbe
mov
mov
orl
in
in
aam
scas
push
fld
rep
xchg
loop
adc
lock
pop
xor
in
jb
pop
mov
es
adcb
push
mov
lods
das
mov
cmp
aaa
mov
inc
adc
sbb
pop
inc
add
mov
sbb
int
das
lds
jl
int
lock
and
cmpsb
xchg
mov
push
cli
inc
adc
lcall
pop
dec
pop
out
jne
xchg
fdivrs
xchg
and
das
cmp
shll
mov
dec
dec
push
jo
adc
inc
ss
daa
sbb
lods
xor
aaa
xlat
aaa
insl
mov
and
lret
inc
mov
je
fwait
pop
stos
pop
pop
loopne
bound
inc
mov
daa
stos
cmpsl
pusha
lods
pop
in
aas
push
lock
cmp
cmp
sti
add
scas
shrl
sbb
bound
pop
inc
push
adc
int3
rcrb
dec
add
ds
neg
fsubr
xchg
andl
xor
push
out
sub
insb
std
lock
and
pusha
xor
mov
int
push
les
inc
andb
mov
push
jle
dec
pop
ret
dec
das
orb
or
test
mov
test
dec
jl
mov
fsubr
cmpsb
cmpsb
gs
or
fstl
shll
cmc
inc
sub
xor
jecxz
sbb
adc
outsl
mov
loop
jns
pop
fdivrs
push
insb
cli
dec
icebp
fstpl
scas
sti
push
int3
xor
adc
es
and
xchg
outsb
mov
pop
cmc
daa
cmpsb
cli
mov
xor
xchg
in
dec
mov
and
push
push
cmc
mov
sbb
repz
inc
xor
cmp
dec
mov
xor
arpl
lods
mov
pop
cpuid
inc
repnz
pusha
mov
ret
jnp
sahf
mov
inc
loopne
xor
jo
sub
fabs
sbb
jp
icebp
test
int
mov
dec
lods
sub
repnz
pop
jmp
mov
dec
sub
out
imul
push
jne
stos
lea
repnz
cwtl
jecxz
adc
fistpl
arpl
cmp
fcomi
cmpl
mov
aam
mov
shl
fists
mov
lahf
or
nop
or
mov
ret
fdivr
dec
into
and
cmc
lret
add
popa
movsl
pop
lods
sbb
cmpsb
sub
mov
mov
insb
inc
xor
cli
fcomps
xchg
rep
insl
stc
lods
cmp
dec
dec
and
cmpsb
ja
xor
and
push
pop
pusha
xor
mov
out
sub
push
rcll
stc
fsts
mov
addr16
push
pop
push
into
cli
mov
inc
mov
or
ret
lcall
jnp
data16
pop
add
sub
xchg
xor
cmp
cltd
sbb
out
sbb
inc
push
pop
daa
aad
fincstp
sub
jmp
scas
push
rcr
roll
test
add
sub
dec
pop
std
push
shlb
add
mov
cli
dec
adc
iret
notl
icebp
add
pop
test
pop
mov
test
push
icebp
mov
out
cmp
dec
lret
mov
mov
sbb
ds
lock
pop
mov
jb
rcrl
out
lods
shlb
xchg
stos
icebp
mov
imul
inc
sbb
pop
pop
mov
mov
mov
jne
int
lret
stos
sub
es
int
mov
mov
add
inc
stos
test
cltd
cli
jae
push
or
ss
add
iret
add
mov
adc
cmc
cmp
push
sbb
add
scas
jns
std
sub
sbb
jmp
xchg
ss
and
inc
movsl
lods
mov
mov
jg
add
push
jge
xchg
fidivl
pushf
fwait
testb
cld
mov
data16
xchg
cld
dec
jle
ljmp
sub
rolb
xchg
xor
lock
fidivrs
jno
inc
lahf
mov
cld
sub
xchg
inc
aad
xorl
ja
lret
xchg
lock
dec
sub
shll
sarl
int3
mov
stos
aam
pushf
xchg
xchg
and
sub
mulb
mov
push
mov
push
pop
lret
dec
and
pop
jmp
je
lret
inc
or
xchg
pusha
movsl
mov
or
mov
adc
xchg
add
daa
js
rcrb
and
test
mov
cmp
dec
jno
movsl
push
out
mov
push
dec
mov
loop
pop
or
shll
aam
jnp
push
xor
pop
mov
pop
mov
mov
scas
dec
fnstcw
movsl
inc
jnp
imul
jnp
shlb
adc
xor
push
sub
mov
and
mov
inc
adc
mov
add
and
inc
dec
in
mov
pop
in
andb
pop
lods
cmp
add
xor
pop
sbb
jbe
push
std
push
xor
or
clc
dec
mov
repz
mov
scas
std
roll
pop
and
mov
test
test
jae
insb
adc
cmpsl
jmp
jb
fs
adc
iret
sti
outsl
mov
rorl
adcl
and
mov
sahf
movsl
out
pop
mov
pop
pop
popl
mov
outsl
jne
lock
popl
sbb
leave
dec
or
cmp
hlt
sbb
xchg
mov
and
imul
dec
pop
xchg
jle
ftst
pop
les
mov
test
in
mov
push
dec
lret
push
insb
bound
in
jne
cld
push
inc
sub
int3
push
out
lret
pop
pop
add
mov
outsl
xchg
xor
addr16
jle
ljmp
xor
cmp
mov
fbld
jmp
flds
sbb
add
adc
sahf
xor
repz
in
xchg
mov
cmc
testb
loop
div
dec
aaa
xor
xor
idivl
stos
cmp
sarl
mov
jo
loop
and
cmpsb
stc
insl
push
test
aaa
mov
pop
push
mov
jge
lock
push
adc
sbb
mov
mov
insb
mov
movsl
mov
je
cmp
lret
sbb
jo
jo
mov
enter
adc
inc
idivl
jmp
aaa
and
cwtl
andb
add
adc
lods
out
add
and
out
aaa
insl
dec
mov
xor
scas
xor
sbb
outsl
insl
sbb
shl
test
xchg
xchg
cmpsb
enter
sbb
cmp
adc
jp
push
xchg
mov
adc
jmp
aam
into
daa
xchg
mov
pop
xchg
hlt
test
leave
stc
stc
in
popf
and
pop
inc
cs
js
mov
cli
sub
adc
add
lods
push
push
sub
or
mov
jbe
les
xor
inc
fsubrl
aaa
and
pop
out
pop
and
test
roll
sub
fwait
int3
into
mov
sub
in
mov
adc
cmpsl
int
loopne
add
inc
sahf
icebp
mov
int3
popa
jne
sbbb
filds
pop
or
sbb
mov
pop
adc
es
jo
fstpt
shll
jcxz
aaa
adc
sbb
out
jbe
lock
adc
jecxz
lods
mov
sbb
outsb
xor
mov
jbe
sbb
mov
jnp
mov
jge
dec
rcrl
test
fstl
fsubl
mov
outsl
mov
into
mov
test
mov
pushf
xchg
loop
or
imul
das
sub
mov
pop
stc
xchg
dec
xchg
dec
mov
xchg
jle
xor
mov
adc
scas
sub
mov
cmp
jle
loop
adc
jg
jg
ds
mov
imul
ja
sub
test
adc
xor
dec
lahf
pop
pop
or
dec
popa
in
mov
cwtl
xchg
sbb
sub
ss
mov
pop
adc
xlat
insb
shrl
fwait
push
inc
add
icebp
in
mov
lods
mov
mov
repnz
inc
push
inc
stos
cltd
or
add
scas
adc
mov
jae
or
or
aam
shr
aad
mov
mov
jno
pop
cmp
cld
and
jns
daa
jmp
test
mov
in
cwtl
pop
mov
out
jge
fnstenv
sub
sbb
cld
pop
inc
mov
sbb
icebp
dec
out
ret
jnp
mov
mov
mov
bound
mov
cmp
mov
lret
cmp
adc
arpl
jae
stos
repz
xchg
sub
lock
test
jnp
popa
mov
ret
pop
xor
mov
aas
lock
cmpsl
cmpsl
in
jl
sarb
inc
and
sahf
push
and
bound
xor
sbb
and
sbb
add
and
jnp
imul
inc
fcmovnb
mov
loopne
push
enter
das
shlb
sbb
jg
xor
or
lods
das
fstpl
jo
xor
fisttpll
push
int3
push
jae
lret
adc
sbb
xchg
push
into
std
inc
jb
cmc
xchg
ljmp
mov
das
xor
ss
xor
add
out
ret
and
leave
je,pn
jp
add
or
test
pop
push
sub
mov
or
jp
dec
pop
sub
lock
and
cmp
loop
sub
mov
cld
adc
int3
out
movsb
test
cmp
sbb
fcmove
inc
ds
lahf
xchg
mov
hlt
jae
lods
movsl
dec
rorl
mov
inc
dec
leave
testl
mov
fidivs
or
jg
lock
dec
cmpsb
mov
cli
xor
add
adc
adc
or
shlb
add
imul
mov
sbb
rcll
push
add
not
mov
sar
jp
push
loopne
aam
and
lods
lods
das
xor
fs
jp
xchg
cwtl
pop
adc
insl
dec
sbb
sbb
xchg
mull
arpl
xor
fs
cld
addr16
pop
mov
or
pop
in
sbb
cmp
dec
test
fdivrs
jne
scas
inc
sar
lock
cli
in
and
mov
stos
dec
out
push
adc
out
mov
dec
jo
hlt
mov
cmpsl
push
dec
scas
fwait
add
xchg
test
pop
add
add
push
fucomi
or
ja
daa
xchg
repnz
xor
fisttpll
cmp
cmp
sbb
insl
cmp
mov
push
inc
ss
mov
push
test
xor
mov
icebp
sbb
cld
icebp
aaa
or
xchg
jo
dec
lret
xchg
in
adc
pop
push
into
mov
inc
mov
cmp
enter
jl
lods
mov
adc
ja
jg
jecxz
dec
cmp
jmp
inc
shr
jmp
pop
mov
xchg
mov
jg
xchg
mov
xchg
mov
sbb
lcall
lcall
pop
shlb
std
mov
xor
sub
mov
call
scas
out
pop
push
jecxz
jp
adc
push
bound
mov
cld
adc
lea
cmp
aad
loop
arpl
je
cltd
sbb
adc
and
sbb
orb
sub
cltd
test
test
inc
stc
mov
ret
test
mov
adc
lahf
aaa
into
add
mov
iret
pop
dec
mov
enter
in
mov
mov
pop
cmp
mov
rorl
lock
adc
mov
or
add
adc
lea
mov
cmp
xchg
push
xchg
dec
mov
lea
inc
cmp
icebp
in
loop
fdivrl
cmp
mov
ds
or
mov
ljmp
mov
jmp
lcall
repnz
imul
iret
das
cmpsl
imul
je
cmp
dec
rcl
mov
mov
pusha
movsb
pop
fcoms
add
inc
cmp
and
push
xchg
faddl
xchg
jge
or
ds
lret
sub
fwait
cmp
ret
xchg
mov
or
loopne
or
int
imul
call
jns
cmp
pop
lock
enter
pop
and
cmc
ficoml
aas
xchg
vprotd
cmp
mov
mov
adc
xchg
inc
in
pop
and
insl
in
jbe
in
scas
xchg
or
out
mov
testl
or
in
cltd
lock
outsl
inc
rol
or
fwait
aas
js
or
push
hlt
xchg
push
stos
ficompl
pop
stos
fwait
in
fiadds
sbb
mov
mov
push
lock
jne
mov
outsl
in
gs
call
or
mov
and
mulb
dec
xchg
adc
jns
out
pop
mov
cmp
ds
pop
dec
xchg
cltd
adc
das
dec
in
imul
adc
lods
aam
xchg
lahf
and
sti
sarl
insl
gs
fwait
jne
clc
and
xchg
dec
mov
pop
insb
arpl
push
out
sti
inc
cmpsl
mov
xchg
sub
mov
shlb
scas
movsl
xchg
fldlg2
jmp
mov
xor
or
shll
add
ret
sbb
and
into
add
add
scas
out
jg
inc
fs
add
daa
sbb
push
outsl
push
jne
jge
ss
sub
test
push
lods
ret
sub
sbb
cmp
test
mov
pop
lret
add
mov
push
ja
mov
add
sti
dec
and
jbe
icebp
scas
fstps
lret
add
out
or
pop
test
cli
scas
sub
mov
scas
out
ret
stos
ret
jmp
dec
in
or
xchg
data16
and
mov
inc
xchg
adc
and
pop
insb
loop
aas
mov
out
frstor
mov
and
and
cltd
pop
ret
jno
and
mov
test
jb
mov
inc
lret
pop
xor
enter
je
movsb
mov
je
mov
cmp
push
adc
das
movsb
pop
mov
push
loop
ja
mov
dec
pop
int3
pop
pop
lods
cmpsl
pop
adc
sbbb
xchg
add
mov
ljmp
repnz
bound
and
jno
cltd
sub
fbld
lret
fsubrs
mul
add
and
xor
cmp
cmpsl
push
fstpt
or
mov
inc
xchg
outsl
inc
jg
mov
sbbl
addr16
jmp
adc
or
sub
fldl
pop
int3
ljmp
enter
repz
ds
xchg
lods
cmp
mov
sbb
jne
sub
enter
mov
push
dec
cmp
cli
cmp
or
sub
adc
loop
movsl
addr16
cltd
pop
sti
je
mov
mov
jnp
popf
fldenv
pop
mov
and
cwtl
cmp
fcomps
mov
ss
and
out
sbb
imul
outsl
xor
xchg
lret
call
jb
inc
inc
jmp
js
cld
jp
sub
cld
aas
loopne
in
lcall
cmpsl
insb
inc
inc
insb
add
shrb
lcall
and
daa
ret
push
loop
fnstenv
inc
mov
not
adc
inc
pop
or
mov
or
test
orb
add
jge
flds
stos
enter
sub
shlb
or
imul
pop
hlt
pop
jns
and
xor
xor
or
mov
js
pop
enter
mov
jbe
xchg
dec
fwait
jns
popl
loop
out
out
clc
adc
cwtl
push
shl
ret
push
scas
fadds
dec
fmuls
jns
fwait
or
xor
xor
clc
fwait
cltd
mov
js
mov
out
cmp
dec
adc
mov
dec
sbbl
adc
fwait
scas
popa
repnz
adcb
adc
int3
xlat
dec
test
aas
sarb
call
or
repnz
inc
and
adc
icebp
fistpl
es
jecxz
push
call
mov
and
push
or
add
push
outsl
push
dec
adc
push
js
mov
out
pop
push
jl
test
xor
mov
mov
jbe
insb
nop
pop
jae
xchg
or
loope
sub
outsl
jecxz
cwtl
xor
and
push
xlat
nop
mov
add
push
inc
jo
fidivrl
test
lock
aad
xor
and
mov
stos
ret
pop
scas
divb
mov
or
loopne
lds
mov
mov
aam
add
in
rorl
movsl
sub
jno
cwtl
pop
loopne
mov
mov
outsb
pop
mov
cmp
mov
pushf
lret
cli
sub
lcall
push
out
inc
fldcw
jbe
and
cmpsb
and
mov
sbb
arpl
insl
stos
dec
push
mov
repnz
movsl
call
stc
jle
jmp
jnp
inc
sub
repz
sbb
repnz
and
xor
jle
push
int3
mov
mov
ljmp
or
cmp
or
add
lcall
imul
arpl
in
push
fcompl
mov
insl
addr16
inc
pop
xchg
movsb
jnp
adcl
xchg
jnp
call
cwtl
and
cmovnp
int
rorl
sub
pusha
mov
or
and
and
adc
jmp
jb
push
cmp
dec
jae
dec
inc
add
imul
mov
cmp
jle
pop
mov
inc
mov
adc
std
xchg
iret
rcll
mov
iret
mov
or
lret
data16
addb
int3
mov
std
dec
inc
xor
add
loope
xor
fldcw
dec
xchg
inc
idivl
mov
scas
sahf
scas
pop
pop
jo
mov
jg
rcll
test
lahf
cmp
and
mov
and
adc
roll
fcmovb
mov
movsbl
push
popf
dec
mov
mov
jg
inc
sbb
orl
jo
sbb
prefetch
pop
outsb
out
jge
stc
add
inc
xchg
fadds
pop
aaa
xor
mov
sahf
jae
inc
adc
jge
mov
das
scas
adc
add
loop
in
popa
and
fxch
popa
test
jno
xor
pushf
mov
cmp
lret
daa
lahf
leave
das
das
mov
adc
jp
push
repnz
add
adc
clc
sbb
inc
add
roll
das
testl
js
shlb
jae
sti
mov
notl
push
sub
sbb
or
xor
pop
push
and
je
sbb
mov
ret
out
push
push
imul
shlb
enter
test
sub
dec
xchg
lock
iret
inc
push
mov
ljmp
std
mov
adc
and
int
dec
dec
test
lret
fs
pop
fists
jg
clc
mov
hlt
adc
jne
pop
dec
subb
jmp
popa
popf
jp
inc
add
test
and
or
sahf
fnsave
lret
mov
or
sbb
loop
xchg
es
add
pusha
jg
xchg
cmp
std
inc
dec
sti
roll
mov
decb
xor
xchg
aad
test
add
sbb
lds
pop
pop
addr16
loop
repz
jle
sub
aam
sub
dec
jmp
mov
in
inc
sub
ret
pop
int3
xor
sbb
scas
inc
mov
dec
or
inc
shll
lcall
pop
idivl
lret
push
fcomip
mov
mov
push
adc
imul
call
shrl
pusha
inc
stos
jmp
push
imul
sub
pop
lock
push
dec
or
cmp
jmp
push
xchg
mov
mov
jns
cmp
loopne
das
into
out
jl
xor
jb
lods
dec
jecxz
mull
lods
sub
outsb
movsl
pop
push
jae
mov
pop
push
or
cmp
imull
xchg
call
shlb
fwait
stos
test
mov
stos
sbb
jbe
daa
mov
adc
addr16
mov
pop
ljmp
test
push
push
cli
mov
stos
ljmp
inc
aam
xchg
ljmp
test
fistpl
push
addr16
shlb
push
divb
push
hlt
push
pop
dec
cltd
and
or
lods
arpl
jae
les
gs
rorb
rorb
xchg
jb
vshufpd
xor
or
and
dec
mov
mov
jmp
dec
nop
fldcw
pusha
adc
or
int
pop
push
adc
aaa
int
nop
divl
sti
cltd
cld
lea
or
call
dec
btc
or
push
je
mov
xchg
stos
in
js
out
jbe
cmp
push
push
and
jo
mov
push
and
xchg
sbb
stos
mov
imulb
test
clc
pop
or
adc
outsl
sbb
stos
scas
cmp
outsb
push
and
fdivp
ret
push
cltd
loopne
pushf
test
in
cmpsb
sub
mov
xor
pop
test
push
addr16
rclb
sub
cmp
fstl
jp
xchg
sub
ret
xor
lock
push
clc
push
add
push
pop
xchg
scas
in
adc
insl
insl
cmpb
icebp
hlt
or
out
mov
out
lcall
leave
int
mov
pop
out
or
stos
mov
xchg
ds
dec
jb
inc
daa
into
sbb
cwtl
mov
sbb
into
enter
adcb
and
fisubs
repz
cwtl
jo
test
nop
aad
mov
ljmp
shr
out
popf
sarb
mov
and
sub
in
adc
mov
jg
stos
and
cmp
inc
cmp
aas
pop
jl
fimuls
lods
push
ror
mov
sbb
add
mov
mov
cltd
pop
pusha
mov
dec
ja
sbb
add
mov
jp
or
lock
xchg
shr
orl
scas
inc
inc
push
sbb
push
xor
push
test
pop
sub
mov
dec
jmp
nopl
enter
aam
in
jg
movsb
jmp
sbb
inc
cmp
testl
imul
fcmove
sti
nop
adc
adc
loope
filds
rcrb
jb,pn
mov
je
aad
aaa
insl
cli
push
test
fisubrs
fsts
mov
mov
adc
loope
fsubp
insl
xchg
dec
inc
inc
pop
adc
push
out
mov
insb
mov
mov
adc
pop
testb
jle
hlt
in
loop
sub
shl
repnz
in
xor
jns
mov
jb
test
add
push
test
pop
adc
jno
cs
inc
test
jb
and
xchg
mov
xchg
pop
ret
xchg
jmp
rclb
mov
fsubrs
jmp
xchg
push
add
sub
push
das
nop
push
add
loope
arpl
mov
out
pusha
mov
shlb
and
add
repz
xchg
sbb
enter
cmpsb
cli
xlat
aas
mov
mov
mov
jmp
loope
shl
jle
shl
stos
jmp
xchg
addl
andl
inc
jmp
sub
mov
add
test
mov
fistps
cmpsl
adc
fimull
dec
jnp
daa
ja
dec
cmp
xchg
pop
lods
dec
lret
sub
jnp
jmp
mov
shll
or
stos
mov
ljmp
adc
push
pusha
mov
and
push
mov
divb
jae
mov
sub
sti
mov
inc
and
and
inc
aam
call
bound
pushf
lcall
fidivrs
mov
sub
push
pop
test
inc
mov
push
int
mov
rcl
ljmp
test
scas
sbb
mov
scas
fdivrl
out
pop
inc
mov
xor
adc
iret
cmpsl
hlt
mov
adcl
add
mov
sub
nop
cmp
jecxz
cld
ja
repnz
dec
push
add
mov
in
in
inc
or
pop
cmp
push
sahf
inc
xlat
pop
push
pop
addr16
and
imul
mov
push
out
push
in
inc
fistps
testl
xorb
push
ret
mov
rorb
pop
daa
andl
movsb
imul
or
add
cs
std
outsb
add
cmpsb
push
or
sbb
imul
pop
xchg
xor
rorl
xchg
inc
mov
and
fdivr
pop
fwait
outsl
push
dec
push
adc
push
std
insb
push
dec
cmpsb
xchg
es
add
es
mov
cmpsb
cld
mov
inc
je
data16
sub
jle
sbb
rcrl
int3
addr16
pop
inc
jle
push
push
mov
ret
movsb
sub
xchg
into
or
fwait
xlat
dec
aad
fstpt
outsb
aad
js
daa
or
int
imul
daa
lahf
push
in
pusha
aaa
sbb
shll
out
mov
in
lods
rclb
jl
ljmp
xchg
es
sbb
or
lea
xchg
or
or
ds
cmp
jle
insl
mov
jnp
xchg
outsl
popa
fidivrs
cmpsb
inc
cmc
ficomps
fs
call
fdivs
or
sahf
sarl
push
jo
and
pop
or
push
lcall
lret
mov
jmp
sub
loopne
xor
lret
sub
rclb
or
inc
pop
xchg
notb
inc
inc
dec
mov
test
fs
icebp
cmp
mov
pop
imul
push
or
or
int3
fwait
aad
mov
mov
push
addr16
stos
mov
mov
sub
or
jle
arpl
rorb
xor
or
push
shl
imul
mov
mov
arpl
jae
pop
adc
pushf
cmp
jecxz
mov
or
das
mov
pushf
enter
cmp
dec
sub
imul
xchg
sarb
cmp
jno
dec
test
daa
je
sbb
mov
jne
fists
daa
dec
subl
pop
dec
xor
sbb
int
mov
rcll
pop
sbb
mov
dec
add
sti
cltd
jp
jbe
mov
aas
push
stos
je
dec
adc
jmp
sbb
mov
lods
aad
mov
mov
test
adc
dec
inc
ficompl
dec
xor
lcall
and
push
mov
xchg
inc
push
call
mov
mov
fnstsw
adc
sub
jo
lods
sbb
mov
lds
xchg
xchg
je
mov
push
imul
lods
jmp
hlt
push
int
sbb
out
popf
aas
int3
and
dec
int
mov
xchg
sub
jp
pop
jl
mov
pop
adc
bound
sub
repz
fucom
add
or
lcall
das
mov
xchg
aaa
out
lods
and
sbb
js
test
mov
xlat
mov
sub
sbb
dec
xlat
sub
cmp
mov
in
enter
xchg
push
insb
lret
push
adc
sbb
repz
dec
movsl
stc
ret
mov
mov
jbe
mov
xchg
cmp
negl
and
movsl
inc
mov
mov
push
lcall
sub
jl
cmp
ss
adc
cli
jg
icebp
faddl
pop
or
cmpsl
movsl
cmp
jbe
mov
rcrb
jle
ret
fiadds
jle
mov
leave
inc
mov
sub
lods
jns
lcall
scas
js
sub
lahf
pop
out
and
inc
xor
cs
dec
sub
or
adc
mov
dec
cmpsb
inc
dec
into
mov
xor
cmp
loope
call
out
dec
adc
das
fmulp
jbe
jne
ret
xor
fwait
in
add
xor
inc
movb
daa
ds
ja
xchg
xchg
xchg
xlat
mov
jbe
fwait
adc
adc
cli
pop
or
cmp
lods
dec
js
xchg
or
inc
cmpsl
jb
addr16
add
adc
push
and
mov
jno
nop
popf
loope
xchg
fidivl
mov
adc
pop
push
jle
push
push
adc
mov
pop
les
inc
mov
mov
mov
and
and
inc
mov
test
xor
gs
imul
cmp
add
jmp
or
fisttps
cltd
mov
cli
pusha
rorl
outsb
or
lods
loopne
sar
dec
cmp
dec
fwait
xor
sub
cltd
orb
xchg
push
cwtl
push
lahf
shrb
jb
pop
loopne
fbld
push
mov
scas
pop
mov
cmp
cmp
add
jb
in
dec
mov
cmp
jg
mov
sub
inc
sub
or
sets
sbbb
mov
xor
filds
out
inc
jae
xchg
pushf
popl
test
or
xchg
mov
mov
or
fdivrp
insb
pop
pop
leave
lcall
in
insb
push
lods
cmc
rcrb
daa
xlat
decb
jle
ret
in
adc
movsl
mov
imul
fildll
icebp
pop
loope
mov
cli
daa
mov
clc
sbb
jge
out
daa
aad
pop
mov
scas
popf
lock
pop
ret
sub
repz
cmpsb
in
dec
mov
loope
or
push
mov
leave
pop
add
jl
mov
mov
xor
push
aam
inc
enter
jne
mov
fs
sub
xor
push
xchg
icebp
mov
mov
mov
or
adc
ret
mov
push
insl
sub
lds
xchg
push
add
lods
push
xor
cli
repnz
mov
fsub
sbb
daa
or
add
jmp
pop
xchg
out
mov
add
out
inc
and
movsb
popa
in
push
xchg
jg
fistl
pop
jmp
mov
lahf
sub
pushf
jb
test
cmp
mov
jb
aam
xor
push
movsl
dec
fistl
test
jo
xor
cs
inc
mov
and
pop
push
jns
xchg
dec
sahf
leave
pop
xchg
xlat
inc
icebp
cmp
jns
lods
jecxz
lahf
idivb
inc
les
xchg
pop
jo
mov
lods
sbb
dec
insb
adc
neg
cld
sub
loop
pop
jbe
xchg
jp
push
cmp
jle
mov
sbb
loope
lea
xchg
mov
xor
sbb
push
add
cmpsl
lret
pop
outsl
jg
in
xchg
das
shl
lcall
push
sbb
and
testb
xlat
add
sub
or
outsb
push
stos
inc
push
sub
std
inc
and
lcall
out
xlat
idivb
add
je
mov
xchg
sahf
movsb
insb
stos
rcr
outsb
pop
cs
out
cmp
outsl
into
xlat
sub
sahf
jb
pop
or
or
insl
adcl
xchg
xor
adc
xor
mov
lret
es
xchg
mov
mov
shrl
stos
filds
lods
push
adc
xchg
inc
jo
in
xchg
mov
mov
gs
sbb
xor
and
xor
scas
push
lods
shrb
push
mov
fldenv
mov
push
scas
cld
mov
push
test
add
call
loopne
into
add
adc
and
xor
js
and
push
in
push
push
mov
lods
sbb
or
xor
in
rcll
pop
dec
stos
pop
adcl
lret
sub
inc
mov
pop
das
mov
xorl
lahf
push
inc
pushf
loop
call
sbb
test
out
sub
dec
pop
mov
sbb
push
mov
das
repz
pop
rcl
sahf
lock
icebp
adc
aas
mov
enter
ss
out
jmp
jnp
imul
mov
and
in
cmc
movsl
adc
xchg
inc
mov
hlt
cmp
jp
inc
jle
xchg
xchg
into
rclb
ficoml
push
jno
mov
mov
out
inc
in
pop
sbb
pushf
push
xchg
bound
xchg
repnz
sub
popa
and
icebp
xchg
neg
push
or
mov
mov
mov
dec
mov
push
or
inc
mov
test
xchg
or
mov
test
test
mov
mov
jl
jle
inc
pop
or
test
jo
fs
push
cltd
adc
movsb
xor
or
scas
out
xor
jg
gs
sub
fcoms
jge
cli
xchg
cmpsl
mov
jno
mov
pop
jg
xor
push
jbe
adc
cld
pop
and
les
rcll
inc
imul
das
arpl
sbb
jecxz
jno
mov
fcmovnu
into
jno
cli
push
pushf
xchg
outsl
pop
ljmp
sub
sub
xor
inc
testb
mov
sbb
push
mov
js
ss
mov
mov
scas
pop
pop
sub
cmpsb
neg
scas
cmpsl
pop
jle
shll
mov
int3
addr16
fisubrs
iret
dec
xor
xlat
mov
fists
jl
xor
lods
in
stc
cmp
sbb
or
and
mov
stos
mov
pop
lcall
xchg
add
or
fs
inc
mov
cli
sbb
fldt
adc
fucompp
add
loope
stc
add
fwait
ret
adc
adc
inc
jecxz
stc
cmp
mov
jmp
mov
mov
cmc
jne
cmp
inc
push
mov
mov
aaa
pop
fadd
add
sub
insl
push
or
out
mov
mov
lea
xchg
aam
sbbb
fwait
addr16
sub
lret
pop
xchg
lahf
cli
cltd
jge
cmpsb
mov
call
mov
mov
jnp
ja
and
insl
cmpsl
movb
lock
fnsave
and
addr16
xchg
cwtl
adc
xor
aad
notb
andl
dec
push
imul
cmp
inc
push
dec
mov
fcomi
add
push
leave
dec
xchg
das
lret
push
cld
inc
mov
dec
ss
dec
add
mov
icebp
pop
cwtl
ds
add
test
cld
in
inc
lcall
sbb
add
mov
cs
xlat
mov
jne
lds
push
sbb
mov
xchg
loope
out
movb
mov
cli
gs
mov
ds
adc
mov
dec
movsb
xchg
lret
pop
xchg
mov
je,pt
mov
cltd
int
nop
jge
fdivrs
daa
inc
popf
xlat
int3
pop
shll
cli
pop
dec
sub
jmp
mov
push
lock
mov
es
pop
fcompl
pop
pop
or
bound
adc
out
aad
enter
push
adc
cmp
xor
sbb
inc
xor
int
add
add
xor
shll
xstore-rng
cmpsl
rcll
test
or
xorl
sahf
cmpsl
test
push
iret
dec
jno
fs
sub
outsb
mov
add
aaa
repnz
loop
enter
and
inc
mov
fdivl
arpl
adc
ret
ss
mov
fs
mov
mov
jbe
icebp
add
jae
xchg
xor
mov
out
xchg
into
adc
lret
cmpl
sub
or
cmp
cmp
repz
repz
mov
xor
jp
cmpsl
add
popa
mov
lret
push
jnp
call
xchg
pop
xchg
out
incl
mov
insb
mov
lods
adc
pop
imul
lods
jp
jle
dec
cmpsb
sbb
adc
push
cmpb
clc
mov
rcrb
mov
mov
push
cmp
jae
add
enter
into
xorb
inc
lahf
ljmp
cli
sbb
sub
sti
jl
test
adc
xor
loope
adc
xor
lock
stc
pop
orl
pop
cltd
xor
mov
fildll
xchg
hlt
rcr
mov
jne
adc
and
nop
xor
pop
push
sbb
out
sbb
popf
and
xchg
hlt
mov
xor
sub
movsl
test
pop
imul
ljmp
jnp
lret
sub
pop
xchg
out
bound
mov
and
loopne
sub
rcrl
fildl
mov
test
jg
push
hlt
pop
push
xor
jb
subl
fwait
sarl
or
mov
cmp
cmp
mov
adc
sub
push
mov
shl
add
sahf
pusha
mov
out
lea
leave
and
add
jne
pop
orl
pusha
push
or
dec
lods
imul
cmc
rcrl
mov
sbb
ljmp
aam
cmp
cmp
into
push
fxch
xorb
jl
pop
sbb
pop
fwait
mov
aam
lea
lds
adc
lahf
fmul
movsl
rclb
push
sbb
in
push
ret
ficompl
add
inc
cmpsl
add
or
mov
push
clc
xor
or
arpl
pop
xor
mov
test
rorb
jle
scas
jp
aad
mov
mov
dec
sti
mov
xorl
and
insb
out
pop
xor
cmp
fcmovb
push
inc
sub
pop
jl
ljmp
scas
rolb
push
jmp
or
xor
std
or
std
std
xor
mov
test
cmp
add
lock
sbb
mov
or
mov
jge
sbb
mov
inc
lret
aaa
inc
test
outsl
adc
pushl
pop
pushf
mov
negl
gs
mov
xor
or
inc
mov
jp
sbb
orl
or
jnp
pop
mov
icebp
leave
mov
test
inc
cmp
jmp
adc
adc
fisubs
inc
xor
ss
pop
jecxz
mov
rcrb
push
les
or
and
loop
sub
and
out
or
pop
cmpb
popf
jae
ljmp
call
filds
cmc
arpl
sbb
cmp
xchg
lcall
pop
push
sarb
jmp
xchg
loopne
xlat
jno
xchg
les
insb
push
cli
push
out
call
jbe
rol
call
push
inc
adc
jbe
jnp
dec
and
mov
iret
lea
push
and
and
xchg
jno
pop
mov
xchg
or
xchg
pop
sbb
cmp
fs
std
sbb
sbb
scas
or
rorl
push
in
sub
jae
jecxz
push
inc
add
lds
rcll
jmp
pusha
mov
add
sub
mov
or
pop
mov
mov
or
testl
in
sub
inc
lret
jns
hlt
iret
jp
les
sbb
mov
inc
dec
pushf
mov
nop
insb
aam
jbe
ud0
and
and
mov
pusha
rorb
dec
test
cs
pusha
inc
sti
test
sub
aad
sub
pop
xor
into
mov
add
jmp
insl
out
in
push
popa
js
fsubrp
xor
xchg
test
or
std
cs
repnz
mov
sub
cmp
into
xchg
mov
outsl
add
and
sub
dec
xchg
mov
shrb
in
mov
inc
lcall
push
test
mov
sub
ja
fdivrl
or
pusha
imul
ss
or
mov
stos
cmp
lret
xchg
mov
lret
or
in
jp
sti
mov
and
dec
xchg
setge
push
and
add
mov
sub
fnstsw
adc
push
cld
mov
jecxz
insb
dec
sbb
xorl
push
stos
cmp
leave
cmp
pop
lods
bound
loop
ja
aaa
adc
jge
or
xchg
or
leave
cs
xchg
shrb
or
sahf
repz
jecxz
xor
mov
stos
cmp
das
mov
mov
jecxz
lods
cmp
inc
pop
aad
pop
push
inc
enter
and
sbb
push
lcall
inc
js
sbb
xchg
push
adc
or
mov
cmc
test
or
repnz
cmpsl
cltd
pusha
pop
ret
xlat
cmc
aad
orl
fnstcw
push
lret
cmp
adc
add
and
js
test
xchg
sub
inc
fcmovu
lods
lods
jo
xor
cmc
test
mov
int
jl
pop
insl
fldcw
jno
mov
add
hlt
cmp
fisttpll
sub
inc
and
mov
rclb
ds
push
ljmp
xchg
aaa
jge
out
daa
out
in
dec
int3
loopne
roll
cmp
testl
xchg
xchg
mov
rorb
test
push
or
jl
xor
xor
repnz
outsb
nop
mov
jns
ljmp
les
in
push
sbb
add
push
pop
pop
jl
adc
mov
popa
mov
pop
popf
aam
dec
inc
mov
mov
sbb
sbb
in
sub
jne
jbe
pop
or
cmp
rdtsc
aam
pop
repz
out
inc
push
push
hlt
fstps
mov
int3
arpl
test
dec
imul
push
lcall
repz
call
fwait
jge
mov
movsl
jge
dec
inc
fldt
nop
or
daa
add
adc
mov
mov
adc
popf
call
mov
xor
into
sbb
mov
inc
pop
sahf
mov
andb
mov
mov
in
pop
pop
xlat
icebp
mov
loopne
dec
add
mov
xchg
pop
jecxz
fisttps
jno
out
pop
jle,pt
cmp
jnp
add
adc
mov
push
pop
and
fsubs
push
dec
add
lret
mov
inc
ror
pusha
mov
jne
in
pop
das
or
mov
jp
push
or
xor
add
ror
lahf
add
inc
out
inc
es
lcall
aad
enter
mov
in
sahf
imul
fimull
adc
adc
inc
push
jg
mov
mov
inc
sub
pop
xor
fs
mov
xor
fiadds
and
out
add
push
shlb
and
sbb
push
mov
jp,pn
cmp
movsb
pop
addr16
popa
es
cmpsb
subl
ljmp
jmp
test
aam
mov
loope
inc
leavew
add
xor
adc
add
popf
arpl
add
inc
push
push
clc
mov
das
sbb
pop
arpl
stc
mov
jae
cmp
out
sub
aad
mov
sbb
cmp
jns
loop
and
mov
andb
xor
and
sub
leave
inc
add
jns
inc
icebp
sbb
ljmp
cmc
cmp
mov
outsb
inc
loop
js
or
out
push
fisttpl
lods
jmp
mov
push
roll
pop
inc
pop
test
into
lods
jb
push
jle
sbb
sub
sbb
repz
mov
xchg
int
ror
lock
outsb
inc
pusha
xchg
int3
lret
dec
add
xchg
imul
dec
pop
cwtl
cmp
fimull
fdiv
sbb
adc
gs
stos
fiadds
mov
lods
or
int
scas
inc
lret
data16
push
mov
icebp
loop
push
aas
cmp
into
je
fwait
mov
pop
xor
xor
jl
or
divl
push
pop
cmp
mov
jnp
and
ds
and
es
dec
mov
mov
mov
pop
add
jns
jae
inc
sahf
arpl
cmp
mov
out
insl
cmpsb
jb
jns
or
adc
xor
inc
xor
inc
outsl
fdivr
andl
mov
in
pop
aas
clc
lcall
jecxz
fimull
sub
xor
inc
out
adc
cmc
sub
jne
jo
lcall
push
lahf
mov
ss
pop
fs
imul
scas
stc
push
cmp
mov
int
xchg
test
out
sbb
or
mov
loopne
ljmp
push
imull
adc
push
add
jge
movsl
push
les
adc
mov
ret
lods
cmp
sub
and
or
pop
cltd
sbb
cwtl
push
insb
test
jle
push
adc
push
adc
mov
std
lret
loopne
mov
sahf
push
mov
jno
shrb
and
mov
popl
push
repz
shll
test
imul
fdivs
push
dec
jp
cmp
repz
mov
arpl
push
rorl
xchg
clc
clc
mov
mov
xor
lds
das
and
test
ret
pushf
mov
add
jb
adc
xlat
inc
pop
jnp
pop
test
enter
iret
sub
int3
pop
cmc
mov
aad
es
fnstsw
pxor
orb
jmp
pop
mov
incl
sbb
bound
std
jg
rcr
pusha
out
jns
push
arpl
pop
jl
sbb
or
stos
mov
mov
and
es
popf
addr16
sbb
pop
std
shrb
mov
pop
cld
leave
in
cmp
xchg
push
inc
int3
and
mov
or
sar
jmp
mov
sarl
push
mov
ss
and
in
loop
popa
sahf
xchg
pop
mov
fsubrl
pushl
sub
hlt
shll
push
cs
in
clc
scas
arpl
andb
mov
push
push
js
popf
neg
pushf
mov
dec
clc
sub
sbb
ror
outsb
fldln2
sbb
in
mov
enter
jge
lds
pop
mov
hlt
fwait
imulb
ret
inc
rorl
mov
pop
cmpsl
xor
bound
lods
out
pop
pop
push
js
or
js
jl
mov
mov
fisubs
ljmp
pusha
pushf
in
out
call
dec
nop
jg
mov
aad
sub
add
adc
jp
lds
mov
inc
add
mull
lock
cld
stos
inc
loope
add
xchg
dec
dec
ss
or
fnstsw
push
or
sbb
add
xor
ror
cltd
or
sub
int3
lods
push
lock
inc
cli
sub
sub
stos
rorb
stc
inc
push
xchg
aas
cli
xchg
cwtl
ficoms
xchg
pop
or
adc
jge
insl
xor
push
mov
gs
enter
pusha
lret
imul
inc
or
jecxz
adc
faddl
add
add
add
push
ror
mov
and
mov
out
jmp
dec
mov
sub
add
pop
das
test
push
push
cmp
scas
mov
lret
fisttpll
pop
xchg
xchg
and
mov
cmp
outsl
cmovae
stc
filds
dec
xchg
mov
jnp
mov
scas
hlt
shr
pop
ljmp
mov
popf
xor
adc
sahf
aad
push
push
shrl
pop
jmp
repz
jo
call
mov
mov
mov
test
mov
xchg
leave
mov
push
dec
fadds
das
nop
scas
and
loopne
push
in
lods
xchg
sub
out
push
xor
out
dec
jg
push
fwait
xor
xchg
cmp
jmp
push
pop
pop
insl
sahf
nop
in
outsb
hlt
and
jns
scas
push
mov
add
cmc
hlt
and
repnz
shrl
push
push
jp
aaa
je
movsl
fdivl
out
fbld
mov
andb
mov
insb
stc
andb
xchg
mov
mov
adc
add
je
xchg
pusha
cmpsb
mov
mov
bound
pop
or
xchg
jns
jo
ret
sbb
mov
sbb
arpl
inc
dec
fldcw
push
mov
stos
ljmp
push
mov
cmp
or
fcoms
sarb
call
ret
mov
xchg
cmp
repnz
sub
mov
xor
fwait
cs
xchg
and
push
mov
sbb
cmp
mov
icebp
cmp
push
into
shll
mov
jo
rclb
scas
sbb
adc
les
dec
add
xchg
les
jnp
mov
dec
ss
clc
mov
or
fincstp
xor
jle
pop
sub
xor
push
xchg
movsb
jae
jp
sub
and
pop
mov
out
jecxz
cs
lea
in
les
pop
adc
mov
stos
arpl
stos
push
lret
and
out
sbb
test
mov
jb
bound
mov
ljmp
mov
mov
jne
xorl
add
xlat
and
jle
pushf
ret
jno
aaa
and
js
add
xchg
and
jbe
add
in
dec
cli
stos
xor
sub
sbb
pushf
mov
adc
test
mov
packsswb
fwait
mov
mov
ljmp
js
cltd
adc
cmp
push
leave
ds
stos
jle
mov
pop
ret
xor
jns
xor
pop
in
and
test
notl
lods
xchg
adc
mov
hlt
xlat
push
xchg
add
mov
mov
jb
mov
int3
loope
xor
xchg
shrl
movsb
ret
bound
push
fildl
sarl
inc
cli
mov
stc
inc
mov
jae
loopne
xor
jmp
sbb
mov
fdivp
loopne
fucom
in
xchg
pop
in
pop
pop
sub
jmp
mov
sub
mov
mov
jae
sahf
jg
push
xchg
xchg
stc
adc
and
clc
or
xchg
sti
jecxz
inc
xchg
inc
enter
lds
cs
movsb
jno
mov
enter
cltd
andl
jbe
push
pop
dec
jecxz
lods
dec
test
or
add
dec
out
jno
push
mov
cli
sbb
pop
repz
imul
in
es
xor
mov
and
sub
scas
das
arpl
mov
test
fimull
testb
cmpsb
call
or
xchg
rclb
inc
ret
sub
mov
lds
adc
mov
fistl
dec
lds
lds
push
add
pop
imul
mov
add
aad
pop
xor
push
fisttps
add
rcll
xor
insb
testb
out
out
dec
mov
leave
mov
hlt
and
or
notl
ficompl
loopne
loope
ja
adc
ss
repnz
lods
pop
or
cld
mov
adc
test
lret
popl
pop
mov
mov
mov
mov
popa
jecxz
jne
movsb
pop
test
ret
daa
push
push
inc
or
pop
xchg
cwtl
dec
xchg
add
mov
test
sbbl
cmpsb
fsubrl
mov
push
inc
int3
in
inc
xlat
jge
push
inc
and
rol
jno
leave
orb
inc
cmp
pop
cli
insb
lcall
stos
push
cmp
call
imul
sub
ret
push
sub
and
mov
push
xchg
das
aam
outsl
push
xor
leave
mov
je
dec
lret
bound
cltd
fs
fwait
lock
dec
mov
repz
lcall
mov
pop
sub
aaa
push
push
dec
pop
ret
loope
jb
sub
fstpt
loope
mov
icebp
aas
lret
xor
sbb
rcl
xchg
mov
rcrl
popa
sub
mov
in
cmpsb
add
sub
lret
inc
mov
inc
xchg
jg
mov
xor
pop
es
les
sti
sub
addr16
popf
mov
xchg
push
xor
lcall
aaa
rorb
fcmovnu
out
sub
insl
icebp
lods
test
int3
sbb
aas
adc
fists
mov
nop
pushf
cmpsl
incl
mov
into
dec
fs
push
in
das
sbb
lods
xchg
add
ficoms
dec
aam
xchg
add
frstor
loop
lds
das
mov
cvttps2pi
ficompl
fwait
pop
mov
xchg
loop
pop
aaa
cs
mov
xchg
jo
cli
xor
pop
adc
outsb
push
add
sbb
fsts
xchg
movsb
mov
inc
in
pusha
ficompl
xchg
movl
cmp
pushf
xor
fdivrs
and
lret
adc
xchg
push
roll
xchg
wrmsr
cmp
mov
xchg
inc
sub
pusha
mov
mov
ljmp
lcall
mov
inc
and
xchg
and
je
subb
aad
inc
cmp
shl
cmp
frstor
add
add
scas
mov
jg
loopne
push
jb
dec
dec
cmpsl
mov
stc
or
aaa
into
pop
mov
sub
dec
loopne
out
mov
hlt
and
mov
scas
adc
aam
mov
add
outsl
ficompl
fstpl
fildl
out
fmulp
bound
into
dec
es
xchg
lea
mov
ss
int3
lret
pop
addr16
push
xchg
movsl
pop
aad
add
iret
movsl
repz
fsubs
sti
in
cmp
lahf
int3
ja
nop
fs
sub
rcrl
aas
jmp
scas
jno
xor
or
pushf
ss
jp
push
imul
xor
ret
pop
jmp
push
lea
sbb
loope
jbe
or
jo
sub
sub
ds
fbstp
movl
dec
push
inc
ja
cmp
xlat
sub
fsubrs
adc
xchg
jl
or
std
push
stos
mov
fsubs
push
inc
pop
pop
inc
out
lods
xchg
mov
ret
stc
out
sahf
add
outsb
fbld
js
fdivrl
and
fdivs
add
inc
cmp
dec
ficoms
hlt
and
movsb
std
mov
lock
popa
cmp
mov
mov
in
and
outsb
cltd
dec
mov
fwait
push
fstpt
jmp
rcll
inc
rcl
pop
cmp
mov
jmp
jb
or
push
arpl
insb
or
js
cmp
sub
mov
sbb
sbb
push
pusha
lds
ret
aas
xorl
into
aaa
cmpsb
push
fstps
gs
bound
and
dec
fwait
inc
je
jbe
pop
repnz
iret
push
xchg
and
sbb
jbe
dec
or
push
pop
dec
imul
mov
xor
mov
ret
mov
lods
pop
mov
cmp
adc
or
and
scas
arpl
xchg
pushf
and
jecxz
dec
mov
push
lock
daa
ds
push
xor
add
inc
jns
inc
test
jmp
or
push
insb
ss
repz
jmp
divb
test
mov
push
sbb
push
pop
out
mov
lret
shrb
cmp
je
mov
mov
pop
mov
leave
cmp
push
push
out
inc
pop
mov
sbb
ret
not
sbb
xor
inc
add
fistpl
scas
or
andb
shl
and
jae
fs
adc
sub
cmp
or
mov
mov
jnp
sbbl
xchg
icebp
dec
cmpsl
sub
jmp
adc
mov
pop
cmp
sub
lea
das
lahf
mov
inc
jle,pn
cltd
jb
push
dec
jns
ja
pop
sub
shll
dec
jmp
fs
shl
out
pop
jp
xlat
js
push
lahf
push
push
dec
push
pop
insb
mov
sbb
xchg
xor
mov
and
dec
dec
and
cwtl
inc
cs
adc
cld
xorl
sarb
ljmp
xchg
sub
aaa
cli
test
adc
mov
push
dec
xchg
aas
pop
inc
inc
mov
in
add
push
int3
sahf
fcoms
mov
add
movsb
xchg
gs
adc
and
hlt
out
insb
pop
leave
pop
inc
adc
and
addr16
sbbl
xor
outsb
jecxz
pop
ret
xchg
aas
out
mov
test
movsb
lcall
imul
lock
adc
in
in
ljmp
popa
mov
dec
cmp
and
and
jne
push
or
lret
das
cmp
and
adc
rorb
jle
stos
sti
sbb
andb
or
jne
jge
out
test
cmp
in
xchg
popf
xor
adc
push
sbb
or
xor
ja
mov
stos
cltd
insb
jno
push
outsl
mov
mov
xor
lcall
dec
xchg
bound
fists
mov
push
mov
pop
and
jmp
mov
outsb
lret
outsb
jae
mov
cmpsl
outsl
scas
push
or
xchg
ja
adc
sbbl
add
push
iret
imul
xchg
mov
sbb
movsb
fmuls
push
loope
ret
sub
sbb
roll
inc
andl
lds
scas
adc
rcll
push
xorb
xlat
fiaddl
mov
adc
dec
mov
sub
les
xchg
hlt
inc
pop
test
cmp
sub
push
add
lret
movsb
fbld
jns
insb
scas
cmp
add
xlat
push
ja
push
inc
in
mov
jbe
test
test
loop
sbb
fdivrl
mov
ja
mov
inc
and
push
sub
int
jo
mov
or
out
enter
call
ret
cmc
xchg
xchg
inc
mov
sbb
cs
das
cld
loopne
xor
xchg
aaa
fidivl
aad
cli
insl
out
mov
push
aaa
out
mov
mov
pop
and
mov
pop
cmpsb
push
mov
push
enter
sbb
mov
inc
lret
dec
in
xor
jno
jp
ret
jae
inc
decl
call
int3
sbb
cmp
test
or
pop
loopne
enter
add
loope
adc
subb
enter
lcall
push
nop
ss
mov
push
adc
sub
xor
lea
xchg
cmpsb
mov
nop
mov
push
cwtl
les
test
dec
pop
loope
ds
mov
cmp
das
push
mov
cltd
scas
pop
xor
adc
mov
jns
or
mov
inc
inc
push
push
addb
fdivl
bound
inc
sub
scas
inc
add
daa
fsubrs
cli
iret
mov
pop
push
out
jno
aaa
loop
cmp
xchg
sarb
fdivrs
js
out
jbe
cmp
lahf
int3
jo
push
mov
sahf
mov
and
xchg
imul
pusha
adc
mov
xlat
repz
les
mov
or
movsb
lock
ret
mov
aam
mov
sahf
sbbb
mov
jmp
daa
pop
bound
sbb
mov
ljmp
in
inc
test
clc
cs
iret
pop
mov
pop
ffree
mov
stos
insb
gs
mov
xor
rclb
out
dec
jle
scas
mov
aad
sbb
popa
loopne
xchg
mov
fidivrl
ret
enter
mov
push
pop
out
cmpsl
mov
fsubl
inc
xchg
dec
jno
call
addr16
repnz
inc
call
and
dec
inc
cmpsl
fs
shlb
xor
mov
cmp
repnz
add
sub
cmpsl
rcrb
dec
push
pushf
adcb
ljmp
mov
dec
jp
jmp
inc
push
iret
jae
jae,pn
mov
push
sub
jecxz
ss
test
lock
ljmp
push
in
dec
adc
and
dec
incb
psrlq
movaps
inc
adc
pop
std
push
adc
cmpsl
jmp
addb
adc
push
repnz
xor
imul
jne
jmp
jbe
jg
mov
lret
je
add
push
out
sbb
cli
xchg
cwtl
pop
jo
clc
andl
cmp
fistps
in
jne
lcall
mov
inc
sub
stc
cmp
lods
push
int3
adc
aad
add
xor
pusha
jmp
cmc
pop
and
mov
mov
pusha
filds
mov
xchg
jle
lock
iret
insl
scas
sub
cld
sub
nop
add
and
mov
sub
fwait
adc
mov
lret
mov
pushf
fwait
sub
xchg
mov
pop
sbb
xchg
testl
mov
pop
testl
mov
cmp
lods
fldcw
jns
stos
mov
loop
cmp
adc
xor
push
cli
jl
arpl
test
cwtl
dec
add
inc
and
mov
neg
push
in
mov
je
ljmp
inc
xor
add
xchg
push
push
inc
lock
rcr
fucomip
inc
clc
je
sbb
fs
insb
push
or
cli
lock
loop
mov
cmpsl
fdivp
pop
dec
or
and
dec
push
ret
adc
mov
mull
jbe
andl
mov
std
pop
add
dec
xor
mov
push
adc
ret
push
adc
xchg
xor
pop
add
scas
int
rcl
inc
xor
inc
dec
and
xchg
les
stos
fisttpll
xor
jns
imul
pushf
push
sbb
inc
xchg
inc
mov
sbb
in
xor
or
js
and
sbb
cli
xchg
lret
inc
or
and
in
dec
sub
call
outsl
out
mov
push
aad
repz
pop
fsubr
aaa
fsubrl
cld
in
aaa
jno
sub
imulb
add
lea
and
mov
xchg
shll
aaa
loope
and
push
inc
push
sub
push
in
jp
adc
int3
xor
arpl
mov
rorb
mov
inc
dec
test
jge
add
cmp
loope
sar
cmpsb
rclb
mov
arpl
ljmp
or
mov
push
cmp
jecxz
rcrl
sahf
mov
jg
add
mov
jmp
or
push
repz
jo
pop
inc
std
dec
mov
mov
and
cli
xchg
inc
add
enter
pop
and
iret
xlat
outsl
mov
lret
rolb
cmp
push
rcll
int3
popa
mov
jg
adcb
or
pop
movsb
shrl
fcmovnu
in
add
cmp
xchg
and
pop
lods
pushf
lcall
stos
inc
adc
push
out
inc
inc
push
xor
ret
ss
pusha
inc
pop
pop
aaa
int
hlt
dec
bound
inc
xchg
testl
sbb
sub
xchg
mov
sub
xchg
sbb
popa
cwtl
mov
pusha
jo
lret
add
loope
dec
and
push
sbbl
aaa
xor
rol
add
mov
dec
push
mov
je
lcall
rcrl
ja
mov
insb
call
jae
addr16
mov
scas
push
and
scas
jg
fmull
ret
jbe
add
xchg
inc
movsb
mov
outsl
inc
lods
jecxz
xor
movsl
sbb
xor
pop
cmp
mov
mov
dec
sbb
jns
scas
push
cmc
adc
je
ljmp
mov
mov
mov
divl
daa
test
xor
sbb
shr
and
lods
xchg
inc
lock
out
mov
hlt
lahf
imul
stc
sbb
iret
mov
into
jecxz
jp
xchg
adc
lcall
aaa
mov
and
jo
fists
insb
cltd
lock
enter
data16
adc
mov
adc
pop
cs
inc
or
lret
sub
mov
lock
pushf
mov
scas
inc
scas
adc
mov
and
xor
cltd
das
psubusb
pop
adc
hlt
and
int3
pop
ret
addr16
dec
xchg
cmpsl
js
or
lcall
mov
xchg
mov
jp
cmpb
out
or
mov
frstor
lods
fisubl
out
pusha
imul
sub
cmp
jp
inc
mov
dec
fwait
jl
sbb
aam
and
sbb
lods
repz
jne
add
dec
das
sarl
out
icebp
mov
push
lcall
rorb
or
lods
sahf
cmp
pop
dec
ss
data16
adc
loope
fcmovu
cmpsb
sti
adc
jmp
insl
stos
sbb
xor
mov
jb
adc
ret
lret
pop
xchg
and
or
incb
cmpsb
inc
jo
enter
int
stos
dec
inc
inc
or
hlt
mov
mov
sub
or
mov
aad
cmpsl
addr16
cvtps2pi
je
lcall
lahf
sub
sub
leave
orb
frstor
fstpt
inc
aad
mov
push
cmpsl
pop
xchg
xor
mov
mov
testl
inc
nop
aam
xchg
sbb
pop
adc
mov
mov
lret
sub
add
addr16
cmpsl
in
pop
imul
and
mov
mov
sahf
std
and
and
or
push
xchg
movlps
mov
scas
xchg
stos
fstps
sbb
andl
je
mov
sub
dec
and
xor
mov
out
adc
push
inc
jae
push
fwait
inc
daa
add
pop
xor
adc
add
stc
xor
jo
jecxz
outsl
or
pop
ret
pop
mov
pop
xor
mov
lock
pop
sub
or
jnp
xchg
out
repnz
jmp
jl
test
shll
xchg
pushf
shlb
fwait
adc
pusha
mov
out
nop
rcrl
adcl
je
jo
mov
in
jecxz
out
lods
popa
inc
lret
jo
adc
mov
mov
dec
dec
daa
testl
add
adc
push
sub
or
sub
out
stc
in
mov
mov
and
xor
xchg
sbb
lea
clc
adc
or
scas
lret
xorb
loop
pop
iret
mov
sbb
and
fiaddl
ret
xor
xchg
fiadds
or
es
aad
les
rcll
mov
pop
test
fldcw
test
mov
std
test
push
xor
outsb
xchg
repnz
hlt
pop
gs
int
imul
sbb
mov
add
xchg
std
out
test
xor
out
rcrb
push
sbb
push
xchg
push
mov
mov
ret
ljmp
mov
shrl
out
inc
pop
test
cli
jno
outsl
pop
adc
shll
add
adc
mov
push
movsb
fldcw
insl
repz
pusha
in
cmp
les
test
dec
mov
fnsave
lds
adc
popa
dec
idivl
clc
jnp
jo
clc
imul
aaa
xchg
push
int3
lcall
add
sbbl
das
adc
decb
fcompl
sub
pop
mov
xchg
adc
sub
mov
push
daa
sub
push
xchg
xchg
ret
imul
pop
sti
cltd
insl
mov
xorb
iret
repz
jno
inc
mov
sti
sub
jecxz
push
cmpsb
mov
xchg
fcmovne
or
sbb
mov
jnp
inc
out
inc
ds
sahf
ja
sub
add
add
push
or
fstpl
pop
lds
add
push
xchg
xchg
cwtl
inc
cwtl
jo
jae
iret
addl
mov
and
push
out
push
jecxz
je
jbe,pt
mov
jo
loopne
fnsetpm(287
jo
mov
setae
cmp
cmp
xlat
mov
jnp
cmp
mov
mov
scas
es
sub
mov
cwtl
fcomps
filds
xchg
orps
cmp
add
inc
mov
test
ljmp
mov
test
mov
push
jg
in
ficoms
dec
xor
imul
xchg
stos
shll
add
xchg
and
mov
add
adc
ljmp
pop
subl
aaa
ds
les
enter
jbe
ja
cmp
xchg
lods
out
std
gs
rclb
inc
lock
add
icebp
or
xchg
pop
lret
pop
ss
cs
loope
outsb
push
lods
outsl
cld
mov
mov
xchg
pop
es
popa
mov
mov
jo
mov
test
sub
cmpsb
pop
addr16
adc
nop
jae
inc
add
mov
sti
ret
mov
shrb
jnp
fmull
mov
sub
xor
push
dec
lret
and
push
pop
sbb
push
divb
dec
dec
mov
pop
mov
rolb
gs
rcl
into
sub
cmp
push
aad
jecxz
jo
mov
les
gs
jle
lahf
push
jp
fcmovnu
inc
vpsubusw
mov
loop
loope
sbb
out
inc
push
cmpsb
adc
stc
ret
inc
fimuls
ss
in
enter
sub
fldcw
adc
dec
iret
sar
jae,pn
push
sbb
sbb
es
xchg
imulb
and
es
jmp
dec
test
rclb
mov
or
cmp
and
ljmp
mov
xcrypt-ctr
cmpsl
fbstp
or
pop
sbb
ret
fldcw
xchg
sbb
xchg
insl
bound
cmp
adc
jl
mov
adc
std
jecxz
popf
cmpsb
sbb
and
int
cltd
stos
xchg
test
scas
or
dec
add
push
push
pop
inc
aaa
roll
dec
lret
sub
subl
mov
aam
out
lea
in
aam
cmp
dec
fidivrs
subps
cmpl
pop
or
shl
mov
popf
mov
jno
inc
rolb
sub
mov
pop
jecxz
mov
pop
subl
movsl
push
mov
inc
mov
es
daa
dec
mov
outsl
dec
lods
push
inc
lea
add
das
movl
and
fs
cmc
cmpsl
imul
mov
fstl
adc
sbb
pushl
mov
fmuls
jmp
insl
bound
xchg
lret
mov
in
jp
xchg
push
add
test
in
stos
inc
mov
cmp
into
jb
xor
push
dec
dec
mov
imul
dec
fadd
mov
fistpl
sub
mov
aas
dec
in
and
in
mov
adc
mov
mov
xchg
stos
rorl
jae
test
mov
lret
stos
addr16
push
sti
rclb
negl
mov
inc
inc
and
fadds
or
es
scas
mov
and
cmp
cmpsl
out
inc
addr16
movsb
enter
jb
sbb
lret
mov
aad
mov
dec
ljmp
dec
mov
sbb
insb
outsb
or
fadds
inc
sahf
mov
gs
jne
repz
dec
xchg
pop
jnp
dec
mov
xor
xchg
adc
icebp
in
lret
mov
sub
mov
mov
subl
pop
lods
subl
push
cwtl
sub
inc
in
sub
push
jne
xor
adc
mov
orb
pop
cmp
adc
je
daa
aaa
mov
inc
jb
rolb
push
stc
fcoml
dec
aam
test
cltd
jbe
fwait
sub
out
mov
fs
repnz
jb
int
in
inc
mov
dec
in
lret
cmc
add
ret
mov
pusha
cmpsl
push
cmp
xchg
shll
stc
or
cltd
xor
pop
xchg
mov
mov
inc
xor
sub
jecxz
and
and
mov
dec
mov
loope
into
inc
das
sbb
sub
movsb
lahf
es
sub
ds
icebp
or
pop
mov
adc
jo
aad
repnz
adc
in
sahf
inc
popa
sub
sub
jl
mov
jmp
arpl
pop
pop
xor
pop
daa
iret
std
sahf
fiaddl
adc
mov
sahf
push
add
pop
sub
xchg
cltd
cmp
xchg
dec
sahf
xor
mov
test
incb
cmp
enter
mov
leave
dec
scas
pop
ret
sbb
mov
nop
inc
loopne
dec
sahf
insb
xchg
jg
sub
push
mov
or
adc
addb
out
sbb
add
fdivrs
sahf
adc
add
jno
test
sbb
in
pcmpgtw
xor
adc
lock
hlt
push
test
jecxz
or
jmp
lods
into
sub
aaa
and
outsl
leave
loopne
sar
pop
inc
ror
sub
mov
movsb
flds
cltd
dec
mov
cld
xor
xchg
pop
outsb
xor
fxtract
dec
fstps
add
push
pop
int
lds
xchg
mov
inc
ret
xor
xor
mov
push
lcall
pop
js
cmp
and
data16
icebp
fdivs
inc
jle
mov
jno
xchg
in
cld
das
cmpsl
add
xchg
pinsrw
leave
pop
push
pop
js
add
sub
or
inc
addr16
fsub
mov
pop
adc
out
mov
data16
rol
cs
mov
xor
lcall
das
cli
fwait
es
insl
jns
movsl
out
out
hlt
jns
repz
or
jecxz
addr16
iret
je
shl
cwtl
cmpsl
out
jecxz
lods
and
mov
movsb
adc
dec
or
xor
add
jae
insl
and
pop
push
xor
fucomi
ljmp
push
sbb
jnp
jae
cltd
xorl
add
sbb
mov
add
jns
sete
int
cmp
mov
test
out
ljmp
aaa
xchg
dec
add
push
and
daa
es
stos
sbb
and
pushf
mov
and
lods
int
push
leave
jo
sub
mov
inc
ret
mov
lret
in
xchg
out
mov
sbb
push
aad
mov
and
insl
dec
hlt
sbb
cs
iret
in
rorl
pusha
cmc
adcl
adc
xchg
in
xchg
xor
or
nop
and
jns
and
fwait
push
iret
pop
dec
shl
mov
cld
push
imul
xor
cs
es
movsb
sub
sub
add
dec
lcall
xor
in
mov
ret
lea
and
stos
mov
sbb
inc
jg
and
data16
dec
fsubl
cli
pop
inc
cwtl
lcall
cmp
and
fwait
jns
jg
out
in
stos
scas
cli
adc
or
jne
cmp
dec
es
add
movq
cmpsl
inc
mov
repnz
fildll
ficoms
and
or
test
pop
xor
lret
sbb
jge
mov
cmpsl
mov
out
enter
clc
mov
xchg
pop
mov
push
jg
inc
dec
sarl
mov
and
xchg
push
cmp
rcrl
insl
jmp
mov
jg
cli
arpl
xchg
push
mov
pop
loope
subl
xor
cld
mov
arpl
push
lahf
jl
jg
pop
mov
imul
mov
mov
shrl
repz
and
out
push
mov
out
lock
dec
dec
fisubs
xor
insb
sub
xchg
outsl
cld
mov
outsb
push
loope
shlb
fmull
es
dec
pop
inc
jecxz
xchg
into
ds
rcr
xchg
mov
jns
pop
mov
mov
bound
gs
pop
mov
inc
jg
iret
mov
sub
fcoms
sbb
mov
add
lret
inc
popa
add
loopne
dec
popa
test
fldl
aam
pop
jbe
lods
mov
and
je
insl
rcrl
jle
mov
pop
ret
push
pusha
ss
cmp
jle
lods
mov
movsb
ds
test
jle
dec
mov
testl
mov
lock
ljmp
mov
rcrl
loopne
insl
dec
das
es
jmp
and
sub
pop
push
mov
jo
scas
adc
dec
xchg
adc
dec
mov
mov
cltd
popa
or
mov
in
rolb
loopne
pop
mov
fiadds
in
and
sub
mov
outsb
mov
lds
fwait
xor
popf
xchg
ret
rolb
pop
das
jl
jge
mov
pop
push
add
jne
mov
lods
dec
mov
roll
mov
pop
shll
pop
cmp
adc
mov
dec
es
gs
and
insl
mov
ret
sub
or
insl
add
xor
xor
scas
data16
clc
lret
jle
sbb
icebp
mov
leave
ljmp
int3
adc
sbb
dec
fistpll
dec
or
mov
xor
cld
or
test
mov
loop
or
and
arpl
jge
testb
js
adc
add
lods
pusha
ret
push
pop
pop
mov
repnz
les
xlat
rcl
dec
leave
push
or
lahf
addr16
pop
cmp
xchg
push
pop
jno
mov
xchg
hlt
out
lock
movl
dec
mov
rcrb
mov
add
mov
pop
sti
psrlw
or
jo
mov
fstl
enter
stos
xor
add
les
cli
shll
lea
shrb
sbb
stos
leave
out
std
xor
cmpsl
inc
call
jb
clc
and
test
test
xchg
int3
shl
cmp
xchg
sub
je
sub
inc
fldt
mov
shl
mov
daa
adc
leave
ja
ja
cmp
add
fidivs
mov
pop
mov
imul
testl
ret
daa
cmp
dec
popf
lock
cmpsl
xchg
dec
int
cmpl
xchg
cmp
inc
call
xor
out
cwtl
push
out
in
cmp
into
sub
dec
scas
inc
ret
adc
in
pop
mov
mov
sbb
test
cmpsl
je
rol
push
mov
lds
or
pop
or
jg
sbb
xchg
enter
or
fsubrl
push
sbb
mov
pop
test
ljmp
into
insb
mov
dec
in
and
in
mov
daa
dec
fdivp
call
cmp
lock
mov
mov
ror
insl
or
std
adcb
pushf
cmc
jnp
fcomi
jmp
mov
xchg
jnp
jle
adc
jae
and
inc
add
nop
mov
push
xor
adc
push
pop
das
xchg
cmp
outsb
repnz
popa
repnz
imul
sbb
jno
pushl
add
cmpsb
mov
insl
jp
cmp
nop
lods
xchg
call
std
cs
or
add
push
test
dec
jno
in
lods
cmpsl
lcall
jl
icebp
mov
aas
mov
mov
pop
daa
push
jb
mov
fwait
sti
ss
aaa
loop
aam
out
jmp
jp
pushf
divb
or
sbb
xchg
lods
call
pop
outsl
call
dec
sbb
sub
repz
je
clc
loope
testb
push
mov
push
mov
test
out
push
sbb
stos
add
cmp
inc
out
ret
mov
dec
sub
adc
and
scas
in
in
sbb
push
fimuls
loope
hlt
imull
mov
fsubp
incl
rolb
push
dec
mov
push
clc
mov
mov
mov
cmp
fnsetpm(287
jp
jo
mov
ja,pt
enter
jae
outsb
mov
loop
scas
adcl
jo
orl
pop
jmp
lret
sub
in
push
out
hlt
sti
xchg
dec
je
fsubs
push
mov
mov
scas
and
push
or
jae
fsubs
stc
cs
negl
aas
pop
mov
icebp
push
mov
out
jg
stc
cld
lret
lds
fs
aam
icebp
setge
xlat
mov
fs
push
add
xchg
cmp
pushf
sub
cmpsb
mov
mov
bound
jns
pop
mov
pop
and
push
fstps
rolb
or
call
decl
idivb
push
stc
mov
inc
push
jg
out
cmpsl
push
mov
adc
decl
sub
sub
cmp
push
mov
jns
movsb
ret
inc
pop
repnz
outsb
mov
lods
add
shlb
iret
sub
push
pop
push
mov
cmp
popa
ds
xlat
cs
xor
adc
loope
iret
and
jo
and
jecxz
lret
fldl
lock
std
scas
cmpsb
or
hlt
inc
test
test
sahf
mov
insb
push
inc
xchg
idivl
dec
divb
cltd
jp
push
cmc
loop
aad
xor
out
out
ret
int
mov
push
push
sahf
popa
xlat
adc
mov
adc
push
and
sbb
xor
sahf
bound
int3
sar
icebp
sub
test
sbb
xchg
pop
dec
xor
inc
int3
or
jbe
or
cmp
dec
xor
popf
dec
movsb
les
nop
inc
pop
jmp
jg
add
stc
pop
test
popf
mull
ss
push
arpl
sub
or
fldl
mov
fnstsw
inc
pusha
insb
dec
ret
pushf
sub
sub
pop
inc
xchg
insl
sub
ret
mov
into
push
mov
cmp
hlt
sti
into
cmp
std
dec
xchg
testl
loopne,pn
add
pop
js
add
cmp
sbb
scas
sti
push
jl
pushf
jne,pn
mov
repnz
jno
movswl
popa
inc
mov
rclb
outsl
in
inc
xor
pop
sti
scas
dec
movsb
data16
ss
mov
int
xchg
inc
lcall
push
xor
xchg
call
mov
inc
xor
imul
inc
arpl
mov
jne
and
xor
filds
into
and
fmulp
jo
push
in
push
inc
pusha
dec
jle
cmp
adc
mov
inc
mov
and
push
push
and
jb
xchg
xor
dec
frstor
xchg
or
ss
outsl
pop
aaa
idiv
add
lcall
fbld
xor
xchg
xchg
and
loop
ror
dec
pop
lret
psubd
fidivs
mov
mov
outsl
sbb
mov
aas
cmp
stos
cmovnp
ret
pop
pop
fldl
mov
mov
jl
lods
daa
ss
sub
or
mov
cmpsl
jns
das
push
cmp
pop
sarb
push
mov
jno
js
pop
push
inc
scas
or
jne
lds
pop
inc
daa
mov
adc
inc
je
divb
xchg
cmp
lods
out
nop
lock
xchg
sub
or
lods
fidivrl
out
adc
ja
in
push
push
lock
pop
mov
fdiv
cwtl
xchg
rcll
bound
adc
imul
out
fwait
push
dec
cmp
mov
lods
test
sbb
loopne
xor
adc
mov
aas
inc
insb
daa
mov
jo
sub
mov
pusha
jmp
ja
xlat
movsl
xor
shlb
nop
sbb
hlt
push
push
daa
sti
int3
in
jmp
push
jno
push
ss
jmp
sub
inc
push
xchg
imul
inc
pop
and
sbb
sbb
push
mov
fwait
out
or
cmp
fs
lds
pop
sbb
mov
movsb
jmp
js
insb
inc
sub
and
cld
mov
testl
daa
jmp
lret
adc
add
xor
ret
mov
adc
inc
xchg
repnz
xor
mov
adc
aad
xchg
pop
lret
adc
mov
cmp
add
cli
int
je
lret
mov
jge
in
xor
cmc
into
sbb
fsubl
mov
xchg
sub
push
jae
call
dec
mov
push
inc
or
outsl
inc
cmp
sbb
jbe
pop
mov
xchg
lods
stos
loop
jb
xlat
or
jmp
and
pushf
out
rorl
out
and
mov
in
clc
lea
mov
adc
les
mov
cmp
cmp
imul
fstl
inc
cmp
addr16
cmp
pushf
outsl
cmc
push
sarl
rorb
and
ret
shrb
test
sahf
jae
icebp
inc
imul
fdivrs
fsts
shl
lret
shl
in
mov
ficompl
pusha
imulb
loopne
test
inc
push
xchg
mov
ret
psraw
cltd
xorb
inc
sbb
pop
xchg
movsb
fstl
outsl
pop
push
pop
loope
and
std
push
push
xlat
mov
push
push
out
mov
jne
je
jmp
adc
rep
fstpt
mov
out
sbbb
push
and
push
add
sti
lds
cld
ror
in
out
loop
mov
aad
mov
outsl
adc
dec
lret
jge
sub
and
add
pop
jmp
aas
dec
mov
ja
ja
mov
test
mov
jnp
repnz
sarb
shlb
int3
mov
es
int3
add
fldt
out
jns
test
mov
jns
outsl
loopne
or
dec
fidivl
push
jge
cld
sbb
lcall
xlat
sub
or
xchg
sbb
ja
fwait
xchg
test
jns
out
mov
jle
arpl
fldt
cmc
daa
jl
arpl
std
mov
pop
out
push
daa
jle
cmpsl
int3
dec
push
sarb
loope
stos
data16
dec
jb
repnz
xchg
mov
scas
adc
das
insl
shr
and
call
nop
insb
xchg
lahf
outsl
jmp
lea
inc
stc
sub
pop
xor
pop
jmp
mov
int
pop
xchg
in
jmp
and
popa
jne
pushf
rclb
xor
movsb
mull
lcall
cmc
dec
test
je
bound
adc
sarl
loope
rclb
ja
shll
ds
pop
jnp
popa
scas
out
and
leave
xor
cmpsb
jo
fs
cmp
push
mov
lahf
xlat
mov
jecxz
hlt
daa
push
inc
shll
dec
adc
out
loopne
xchg
xlat
sub
rcll
pop
dec
test
pop
inc
mov
or
add
cmp
xor
cltd
imul
lods
jb
add
and
rcr
jg
aas
ds
mov
pop
mov
pop
rorb
lret
jne
xor
xchg
add
mov
cltd
and
mov
imul
outsb
dec
lods
cmc
adc
iret
mov
mov
cmpsb
dec
inc
jnp
shll
rcrb
cs
push
pop
mov
xchg
add
notl
mov
mov
repnz
dec
xor
ficoml
fisttpl
out
inc
push
mov
lods
call
popf
inc
adc
dec
mov
inc
test
pop
jns
lret
add
testb
xchg
lock
mov
cmpsb
hlt
rcr
insl
jno
mov
dec
adc
push
dec
int3
movsb
push
sahf
jmp
xchg
sbb
test
sub
push
insl
out
cltd
lods
sbb
in
es
add
sbb
xchg
cmp
or
dec
sub
mov
fmuls
stos
lret
pop
inc
cmp
jmp
mov
loop
fcompl
pop
add
jge
addb
pop
mov
mov
fists
cmpsl
xor
insl
movsl
pop
dec
adc
jle
and
mov
xlat
aaa
add
nop
out
pop
push
jge
mov
js
cmp
mov
jp
out
xchg
scas
dec
iret
js
arpl
xchg
enter
jnp
stc
insl
and
dec
out
xchg
shl
or
or
int
fwait
pop
iret
mov
pop
repz
inc
jbe
dec
sub
push
lods
xchg
loop
inc
jmp
xchg
int3
ja
lret
lea
lock
push
pop
mov
lea
mov
jo
pop
lret
xor
jg
and
cmp
mov
or
jge
ja
fdivl
icebp
int
in
fidivrl
mov
cmp
cmpsl
imul
leave
jmp
push
pop
mov
cli
bound
ja
cmp
dec
inc
or
dec
ss
push
cmp
pushl
xchg
and
and
pop
fists
decl
bound
pusha
add
sti
fistpl
inc
in
cli
pop
cld
xchg
sub
mov
mov
lock
push
outsl
lds
sbb
xchg
jle
dec
sbb
jge
insl
push
lods
push
mull
lret
leave
jno
inc
xchg
test
xor
pop
inc
adc
ret
test
into
fs
notb
xchg
sbb
out
jnp
shlb
sub
adc
sahf
xor
lret
dec
scas
pop
lods
push
sub
lahf
cmp
sahf
push
mov
insb
mov
sahf
and
addb
or
push
fdivs
movsb
jae
push
lea
jbe
jnp
cmp
sahf
daa
cltd
or
add
in
fs
iret
imul
vpmuludq
xor
sar
leave
outsl
mov
cli
adc
gs
dec
into
xchg
cmpsb
int3
mov
das
jp
sbb
sti
test
iret
fsubs
dec
push
pop
rclb
nop
dec
xchg
cmp
repnz
ss
insb
pop
pop
sub
outsl
andb
jle
cmpsl
ss
cmp
mov
std
jle
push
adc
jge
movsb
sbb
das
and
dec
push
cmp
cmp
popf
adc
rcll
loopne
mov
pop
int
in
push
mov
das
mov
adc
in
jmp
sbb
stc
fsts
decb
push
xor
or
out
stos
and
xor
js
gs
or
ficoms
dec
ds
lds
bound
sti
push
ja
xchg
push
and
jns
std
outsb
gs
es
adcl
jnp
mov
mov
xchg
in
xor
lahf
and
xchg
mov
ds
or
xchg
mov
dec
test
xchg
xor
test
icebp
loop
mov
es
push
shll
or
lcall
addr16
imul
xchg
inc
inc
sub
sub
sub
lods
fnstenv
cmc
nop
loope
jge
inc
add
in
lret
inc
loop
push
fucomip
mov
cltd
aam
sub
leave
push
adcl
pop
insb
push
test
cmpsb
adc
and
add
sub
pop
xchg
repnz
aaa
imul
pop
shll
lret
sti
push
test
das
mov
jecxz
pop
subb
dec
testl
jmp
lahf
test
jae
cs
push
mov
pop
jg
loop
dec
ret
cmc
mov
xor
xor
mov
sbbl
and
data16
outsl
inc
and
daa
cmc
push
shrl
xchg
jmp
mov
cs
outsl
sub
push
cltd
sbb
shlb
movsl
test
out
fimuls
loope
test
xchg
and
cmp
sub
mov
jbe
jo
and
push
repz
sub
pop
les
xchg
pand
pusha
cmc
repnz
jmp
mov
mov
cmp
xor
iret
movsl
push
push
pop
xor
xor
sbb
in
inc
adc
lahf
icebp
in
sub
sub
xor
mov
popa
ss
aam
subb
pop
outsb
cs
adc
fwait
ret
adc
sub
iret
jl
movsl
jae
out
int3
push
insw
and
dec
xchg
mov
sub
sarl
cmp
das
popa
push
iret
sahf
mov
push
lret
ljmp
add
mov
cmp
inc
icebp
mov
pop
push
fistpl
ret
js
adc
mov
inc
sub
cmp
aas
pop
frstor
jg
cmpsl
adc
daa
fcomps
xchg
loop
call
jb
in
adc
je
test
in
sbb
es
adc
add
xchg
ficomps
pop
xchg
mov
js
pop
mov
insl
lret
shlb
xchg
iret
mov
jbe
mov
jecxz
jle
clc
adc
movsb
lahf
jmp
add
cmc
mov
arpl
fisttps
mov
jp
out
mov
inc
sbb
out
inc
push
pop
mov
sahf
cmp
hlt
les
push
pop
xor
je
fs
mov
jno
rorl
shrb
cmp
or
out
mov
aad
xor
jl
and
fadd
xchg
sarb
push
jns
fidivl
pop
adc
hlt
fcoml
pop
and
lods
out
pop
pop
sbb
negl
cmpsb
in
pop
dec
xchg
inc
mov
rol
lret
dec
xor
xor
lcall
sub
sahf
mov
shlb
inc
pop
sahf
adc
loope
add
xchg
sub
mov
mov
test
lret
fdiv
mov
xor
add
dec
sbb
mov
jns
scas
je
xlat
fnstenv
mov
or
and
pop
bound
and
xor
popa
push
jb
push
xchg
repz
testb
movl
inc
xor
mov
clc
out
mov
js
adc
mov
enter
xchg
mov
mov
ret
mov
push
js
pusha
sbb
adc
into
fdivl
lret
dec
mov
clc
test
xchg
cwtl
inc
int3
mov
pop
xchg
dec
test
jbe
data16
insl
jle
add
or
mov
stos
jae
pop
cwtl
decb
sbb
adc
adc
aas
cmp
stc
stos
icebp
adc
cltd
outsb
lcall
mov
or
push
rcr
bound
lods
nop
cmc
fst
ret
roll
adc
push
fildll
mov
das
xor
cmpsl
inc
cmp
cmp
push
ret
cmpsb
sbb
shrb
push
stos
je
or
mov
pop
sub
mov
add
insl
sbb
cmpb
mov
sbb
lcall
adc
mov
test
push
mov
pop
icebp
cmpsl
insb
push
int
xor
imul
fwait
sahf
jnp
es
leave
add
sti
scas
sbb
ljmp
or
mov
loop
ret
es
pop
cmp
and
orl
daa
sub
push
test
incl
out
and
dec
dec
cs
dec
xchg
mov
xchg
scas
push
adc
insl
add
cltd
xchg
and
sub
mov
dec
mov
aaa
rolb
sub
imul
aaa
xchg
inc
xchg
push
pop
and
inc
jo
push
jbe
mov
push
sub
or
mov
ds
dec
aas
push
push
dec
repz
push
les
pop
cld
mov
fs
sub
out
sbb
fs
sub
sbb
clc
aas
pop
or
fwait
loopne
cltd
push
enter
xchg
xor
push
add
stos
fadds
mov
pop
ljmp
cmpsl
xchg
sub
stos
add
mov
das
inc
pushf
mov
test
inc
es
clc
data16
mov
fxch
sub
xor
loop
jge
cmc
inc
mov
lahf
orb
push
notb
inc
xchg
lea
pop
aaa
ja
cltd
clc
mov
xor
pop
and
jo
push
lcall
lods
enter
cmp
cmpsl
out
imul
lods
stc
mov
dec
ds
fstpt
scas
faddl
dec
or
adc
xchg
or
pop
aam
xor
xor
into
fsts
clc
cmp
jb
lock
push
pop
and
cwtl
stos
cwtl
iret
shlb
ret
hlt
xchg
into
inc
jnp
xor
shlb
stos
test
jge
xor
fnsave
or
in
sbb
roll
shl
scas
mov
cmp
in
fcmovnbe
inc
ficompl
pop
or
rcr
cli
pop
sub
dec
jns
pop
fcompl
push
cltd
jge
idivb
clc
mov
sti
inc
dec
mov
adc
negl
repz
adc
gs
pop
out
fistl
push
and
fstl
adc
pop
adcl
mov
adc
lret
shlb
pushf
and
jge
xor
inc
aas
pop
lahf
jle
popf
or
orl
and
enter
fcmovbe
and
sub
pop
mov
adc
addr16
xlat
pusha
jle
test
jmp
xor
xor
nop
jecxz
out
push
cmpsl
fidivrs
add
mov
mov
dec
or
xchg
fistps
icebp
in
stos
and
and
stos
lcall
pop
add
popa
in
jb
loopne
cmpsl
or
and
es
xchg
or
jmp
jbe
xchg
int
aam
aas
stos
rcll
push
xchg
cmp
mov
lcall
mov
lea
cmc
push
mov
push
out
push
fcom
stos
jno
fiadds
jns
rcr
imul
iret
test
enter
mov
xchg
cs
mov
out
ja
lret
ret
xchg
nop
cltd
ss
mov
push
inc
roll
push
arpl
cld
pop
aas
in
mov
test
repz
cmp
test
rol
add
roll
mov
out
and
mov
xor
dec
cmc
sarb
in
test
push
call
lods
or
xor
std
jmp
scas
ljmp
repz
inc
stc
sub
fidivs
mov
sbb
and
or
mov
call
cld
dec
imul
loop
push
insl
lods
ds
mov
flds
inc
sub
adc
pop
pop
sahf
mov
je
inc
fistl
and
movsl
add
ja
ret
stos
out
xor
shlb
adc
adc
adc
mov
jae
and
lock
xlat
mov
jne
push
mov
push
pop
xchg
or
aad
std
mov
cmp
test
push
pop
test
ljmp
int
fcom
js
fstl
jmp
icebp
out
rol
add
insb
inc
pop
mov
mov
jnp
dec
pop
es
pop
xchg
mov
adc
mov
jne
or
cld
inc
cmp
addl
test
in
add
xchg
aaa
outsb
dec
imul
jp
or
add
sbb
stos
inc
nop
pop
add
fbld
das
andb
ds
dec
inc
mov
pop
mov
xlat
push
jmp
jne
push
addb
mov
adc
mov
cmc
adcl
hlt
mov
mov
cmpsb
loope
fcmovnb
dec
inc
ret
mov
mov
es
push
xor
xor
cs
xchg
mov
sbb
out
push
gs
add
orl
cmp
notb
imul
repz
mov
xchg
mov
icebp
mov
and
cmp
adc
repnz
pushf
lahf
jmp
stos
icebp
push
loope
iret
xchg
ret
rclb
cmpsb
sbb
std
sbb
push
rorb
mov
or
fsubs
pushf
dec
out
mov
xchg
sbb
popa
popf
and
cmpsl
cmp
cmc
add
fdivl
gs
popa
movsl
test
popf
sub
fists
addr16
cltd
scas
ja
pop
push
xchg
dec
sub
push
xchg
dec
cmp
mov
pop
outsb
cltd
sbb
fnstsw
nop
push
mov
test
in
mov
in
loopne
leave
sti
sbbl
xor
gs
mov
add
xor
xchg
mov
mov
dec
mov
clc
mov
mov
cmp
xor
bound
ljmp
cmc
jbe
pop
jne
clc
inc
orl
fildl
fimuls
fimull
dec
ds
adc
adc
sti
pop
sbb
sti
push
dec
bnd
ror
inc
mov
cmp
std
fcompl
push
inc
ss
inc
xlat
lret
push
outsb
pop
loop
addr16
repnz
mov
gs
int3
mov
and
std
aaa
fdivrl
cli
sbb
add
pushl
out
repz
hlt
mov
adc
xchg
sti
xchg
test
cmp
pushl
shll
sbb
inc
sub
dec
or
repz
out
push
inc
or
lds
popf
hlt
ja
pop
and
xor
test
in
xor
cmp
lret
insl
cs
inc
mov
or
and
jmp
loope
xor
inc
inc
push
mov
dec
jmp
rorl
mov
les
mov
xchg
inc
repnz
clc
inc
adc
add
pushf
into
scas
and
sahf
add
loope
mov
test
lea
adc
loop
pop
iret
addr16
add
mov
jp
jmp
adc
repnz
mov
cwtl
hlt
pop
pushf
call
sub
xchg
mov
adc
dec
shl
idivb
push
pop
stc
popf
hlt
jb
sub
pop
jl
outsl
pushf
dec
ret
add
cmpsb
popa
shlb
test
outsl
scas
pop
int
inc
push
xorl
jle
xor
cld
test
jecxz
into
cmp
rorb
cmp
addr16
cmp
jns
sub
mov
ljmp
mov
iret
js
nop
loop
scas
aaa
jbe
js
loop
aaa
jge
sbb
pop
movsl
mov
jg
sbb
mov
aaa
int3
pop
xor
push
in
inc
sti
ja
push
and
test
inc
out
sub
ficoms
movsl
fisubs
pop
cmc
aas
mov
lret
popf
mov
call
sbb
ljmp
sub
fnstenv
push
clc
je
sbb
dec
in
mov
adc
fidivs
adcl
pop
xchg
fstps
in
cmp
and
enter
jae
dec
dec
jmp
mov
pminub
pop
xor
push
hlt
andb
in
push
in
sahf
inc
jbe
pusha
adc
ja
inc
rcrl
mov
xor
aam
cltd
aas
mulb
popl
addr16
rolb
arpl
mov
dec
mov
pushf
inc
push
fwait
test
insl
ss
lods
fsubrs
ja
push
ds
rcl
xor
adc
jno
and
jl
lods
or
into
fstpt
xlat
jno
mov
mov
push
call
sbbb
dec
inc
push
sbb
shlb
nop
mov
or
data16
sub
xchg
xchg
jne
mov
test
push
xor
xor
cwtl
inc
and
or
xor
or
mov
sub
idivl
insb
fxch
fwait
mov
lret
insb
push
sub
pop
mov
mov
int
jmp
mull
cmpsb
mov
mov
mov
aaa
add
fdivs
xor
out
mov
push
test
pop
push
inc
add
dec
xchg
nop
cmp
jo
sbb
adc
std
pop
xchg
jmp
lods
push
int
jno
gs
dec
and
ljmp
mov
fstpl
push
test
mov
adc
jg
ja
pop
movsb
mov
inc
cmc
jno
cmpsl
jl
and
mov
or
push
pop
cmpsb
xchg
jb
push
pop
mov
enter
nop
mov
mov
sarl
stos
cwtl
sbb
hlt
xlat
icebp
adc
call
dec
jno
push
add
sbb
int
rcll
adc
mov
sub
iret
jle
iret
cs
leave
pop
mov
lahf
js
mov
mov
daa
sub
std
ds
mov
fs
fcoml
das
fiaddl
jle
sbb
cld
mov
or
fptan
inc
add
filds
mov
lea
xor
aad
aaa
nop
mov
pop
cvtps2pd
lods
shrl
add
ficompl
arpl
xor
insb
out
fdivr
es
and
insl
stos
std
sbb
and
sti
aaa
adc
xor
pop
pop
mov
pop
in
push
stc
fsubp
in
and
mov
sbb
popa
push
lret
or
sbb
lds
mov
bound
aam
repz
imul
or
stos
fcmovnb
fcoml
cmpsb
jbe
push
pop
mov
sahf
lds
lods
cmpsl
dec
mov
adc
in
adc
movsl
sub
sbb
jecxz
mov
sbb
push
rcl
or
mov
mov
in
daa
add
sub
rcr
lods
xor
cmp
ret
sub
bound
test
ljmp
push
aas
mov
adcl
test
sub
add
sahf
or
mov
fdivrs
mov
xorl
lods
inc
sub
jne
cmc
shl
test
add
dec
or
sub
xchg
sub
outsl
and
xchg
int3
push
xchg
insl
rclb
dec
ja
adc
sub
sub
or
mov
mov
or
sub
jbe
pusha
xchg
and
lock
jb
add
gs
mov
fsts
inc
es
add
push
inc
enter
or
cmc
stc
pop
test
dec
jb
sub
jns
xor
dec
and
pop
dec
mov
loop
push
test
pop
adc
sub
and
pop
jmp
movsl
sub
adc
pop
in
push
jo
iret
repz
test
icebp
xor
jno
shrl
mov
lea
jbe
in
xor
fbstp
pop
mov
and
scas
or
cmpsl
push
js
jp
cmpsl
ja
stos
dec
es
popf
push
jecxz
push
fwait
ja
mov
cltd
sbb
outsl
cmp
imul
adcl
pop
in
clc
popa
mov
enter
inc
cmpsb
dec
loop
icebp
loopne
pusha
sub
pop
mov
push
pop
and
xor
sbb
push
out
inc
mov
jg
in
or
and
and
push
shll
sub
cmp
cmpsl
jae
out
mov
push
dec
xchg
hlt
push
pop
jl
stos
and
fisttpll
push
pop
dec
lds
pop
aas
scas
jae
jbe
cltd
movsl
lds
ljmp
mov
fs
rcrl
sti
shll
mov
out
sub
xorl
pushf
sti
stc
in
xchg
repz
shll
xchg
lds
lds
stos
lcall
pusha
loop
push
mov
sbb
and
popa
sbb
sbb
stos
lods
js
f2xm1
scas
push
rcr
sbb
leave
adc
scas
fdivrs
push
aas
out
pop
inc
xchg
xor
cltd
sarb
dec
insb
mov
je
xor
mov
adc
xor
ftst
adc
pop
push
das
sbb
enter
sub
jae
inc
lods
xchg
in
push
jbe
jl
xchg
jl
shll
repnz
mov
bound
and
cmp
dec
dec
cmp
xlat
dec
mov
movsl
lret
sub
ja
int3
mov
push
sub
in
rol
cwtl
int
dec
mov
xchg
or
das
cmpb
pushf
push
imul
inc
xor
scas
daa
sar
aaa
xor
movsb
sti
jo
sti
stc
cmp
push
das
or
jg
cmp
int
add
shrl
sbb
out
jmp
cli
pop
xchg
fnstenv
xor
xor
test
stos
fwait
cmp
xor
pop
pop
mov
cmp
mov
xorl
jne
ret
je
adc
jne
loopne
xchg
scas
cmp
lds
pop
roll
add
xchg
imul
jbe
xchg
roll
cld
aaa
aam
loope
or
mov
mov
fdivrp
dec
cmp
or
mov
pop
in
cmp
jge
fs
inc
or
imul
adc
push
pusha
fsubl
aas
mov
test
and
mov
inc
popa
nop
mov
mov
lock
cmp
jle
lahf
clc
stos
xor
push
fcomps
inc
mov
gs
ss
sub
pop
mov
addl
inc
pop
fs
cmp
sub
test
jae
pusha
mov
mov
addr16
ja
roll
sti
fwait
mov
lea
fs
cmp
iret
and
lret
pminub
jae
inc
leavew
add
nop
sbb
cmp
flds
mov
xchg
xchg
mov
push
push
and
jge
push
loopne
cmp
and
mov
ret
xchg
ror
stos
mov
jno
cmp
stos
cwtl
adc
push
ljmp
cmc
push
push
rol
xorl
push
arpl
cwtl
push
outsb
data16
sub
sub
lock
cmc
add
scas
ja
push
cld
arpl
cs
xor
outsl
shll
pop
lds
nop
mov
into
xchg
add
pop
ljmp
shll
push
push
sarb
out
pop
fnstenv
add
add
fnstenv
rcrl
aam
mov
xchg
or
sub
pop
clc
xor
cmc
xchg
cld
or
push
pop
je
and
test
jmp
sbb
outsb
das
cmp
sub
outsb
mov
push
pop
mov
adc
repz
jb
jnp
xchg
inc
mov
cwtl
pop
inc
cmc
leave
dec
outsb
xchg
lea
jb
sbb
pop
xor
stos
adc
add
sti
mov
mov
out
sbb
aas
loope
jl
jmp
cmp
sub
mov
push
dec
clc
aad
loop
rcrl
scas
or
push
push
mov
add
pushf
arpl
cmpsl
lods
sti
in
mov
stos
and
movaps
movb
fwait
stc
jnp
aas
dec
sub
or
inc
lret
cld
cs
jns
jmp
sahf
cmpsb
test
mov
jbe
xchg
movsl
ljmp
sbb
xchg
inc
xchg
lods
in
loop
test
das
inc
sbb
addr16
mov
ss
or
cmp
pop
sbb
xorl
jbe
hlt
pop
mov
loopne
mov
mov
lret
fldenv
inc
mov
jmp
cmpsl
jae
stos
xchg
pop
xchg
inc
loope
xor
cltd
cs
movsl
outsl
xchg
leave
pushf
mov
sbb
sahf
nop
adc
cmpsb
hlt
push
dec
and
cld
lcall
push
fst
addb
add
xchg
dec
scas
cmp
out
dec
jg
jmp
xor
lds
dec
pop
push
or
js
sbb
push
test
ljmp
pop
adc
mov
fldt
xor
jbe
bound
pop
fcmovne
mov
push
cmpb
lret
mov
imul
std
pop
iret
sub
jge
cmp
xchg
mov
and
jae
das
push
sub
push
fcmovu
hlt
outsl
punpckhdq
mov
stos
sbb
jl
xor
push
cmp
repnz
jnp
ret
sahf
sub
lds
lret
mov
mov
push
repz
mov
mov
int
adc
adc
cwtl
adc
jo
fistps
imul
mov
add
pop
add
jnp
arpl
sbb
xchg
pop
jb
frstor
add
sub
mov
jmp
pop
dec
add
lea
mov
xchg
cmpsl
jmp
out
loopne
in
loope
adc
loop
jns
push
inc
jnp
jge
jl
sub
pop
inc
mov
mov
scas
aad
daa
sarl
inc
push
lods
pop
cwtl
mov
repnz
xor
aad
mov
cmp
inc
mov
sub
and
fisttpl
and
mov
dec
dec
push
sbb
and
movsb
aad
fwait
mov
xchg
jno
inc
clc
repnz
add
ljmp
fsubrl
popf
inc
inc
cmc
mov
push
push
jbe
jge
xchg
dec
pop
jns
aam
rcrl
sahf
test
mov
ss
xor
arpl
lret
and
jl
cmp
pop
and
aam
fidivrs
popf
add
pusha
aaa
or
outsb
push
pushf
xor
add
je
and
xchg
and
repz
nop
test
popf
pop
fld
addb
fcomps
dec
sbb
test
cmpsl
pop
repnz
aaa
pop
jle
push
fisubrl
sub
imul
jge
pusha
in
popl
cld
mov
daa
push
mov
and
sub
jns
add
fldlg2
mov
push
inc
jne
inc
add
mov
and
jl
jns
lods
aaa
pop
mov
jb
in
mov
rep
es
sarl
mov
xchg
or
out
in
mov
sub
add
inc
decb
push
fiadds
roll
push
fsubr
push
mov
hlt
cmpsb
clc
dec
cwtl
sbb
inc
in
inc
xor
cmc
adc
pusha
inc
sar
xlat
or
mov
push
or
mov
pop
xchg
nop
movsl
pop
out
ror
pushf
xchg
jns
xorb
pop
inc
push
sbb
fstp
sbb
cmc
adc
outsb
cltd
cltd
iret
fwait
stos
pop
jbe
insb
lret
cmp
mov
jne
xchg
pop
mov
mov
xor
ret
fmulp
push
cli
pop
test
insl
lds
pop
push
push
xchg
imull
xchg
jl
cltd
adc
popa
std
hlt
cltd
fcmovnb
fs
pop
push
push
adc
call
lret
sbb
ljmp
pop
xchg
jp
out
and
loopne
cltd
fimull
rcll
lahf
ss
pop
or
xchg
push
mov
jl
jae
inc
sub
sbb
aas
fwait
lds
jge
jns
out
push
adc
jl
inc
outsl
gs
push
fidivl
mov
add
lods
jge
rcrl
into
xor
jb
les
jmp
sub
fdivs
mov
in
cmpsb
cli
fisttpl
scas
gs
jbe
sbb
insl
dec
pop
fidivl
scas
xor
jno
addr16
pop
mov
cmp
mov
fildl
in
out
addr16
sbb
popf
int
fnstcw
jmp
sbbl
xor
add
mov
adc
test
xacquire
pop
jb
sbbb
mov
and
or
adc
jg
nop
push
sub
cmp
dec
or
sub
lret
loop
ljmp
outsl
cmp
cmc
dec
jb
sub
popf
lret
mov
fmul
cmpsl
mov
sub
jnp
repnz
shrb
cmpsb
icebp
sub
and
inc
into
xor
aas
inc
lea
popa
push
xor
jecxz
jne
leave
sahf
aam
xchg
mov
lret
mov
repz
data16
orb
sub
cmp
ljmp
lret
daa
cmp
call
xchg
push
stos
mov
ss
pusha
jg
dec
sub
movsb
cmc
fcomps
lret
dec
mov
inc
ret
mov
rol
loopne
cmovp
clc
mov
ja
mov
sub
add
imul
push
icebp
test
dec
filds
dec
xor
loope
int
jle
iret
lds
inc
popa
dec
sub
mov
and
pop
lcall
xor
jecxz,pn
dec
add
pop
cli
xchg
dec
jle
jb
cmp
imul
cmp
xchg
push
adc
fdiv
and
ds
std
in
orl
mov
dec
jo
and
sub
jb
cmc
push
out
xor
lahf
mov
xchg
xor
popf
arpl
dec
jmp
add
cmp
push
xchg
jecxz
sbb
add
mov
orl
enter
or
repnz
dec
or
xor
repz
dec
inc
push
cmp
and
fidivs
js
or
arpl
sub
jp
and
pop
lea
sbb
and
scas
mov
cmp
cmp
mov
sub
jmp
mov
outsb
add
lahf
jno
ja
pop
sbb
mov
push
pop
add
shrl
adc
sub
cmp
imul
sahf
push
xor
iret
add
sahf
or
std
fwait
pop
leave
out
icebp
js
xchg
inc
in
or
outsl
das
aad
pop
push
pop
sub
mov
mov
or
jle
test
jl
xor
push
in
inc
inc
adcl
pop
push
mov
gs
mov
aaa
ss
jno
adc
cltd
ljmp
pop
mov
xchg
stc
adc
add
rcl
pop
jle
pop
cmp
les
cmp
xchg
addl
sbb
nop
xor
adc
mov
sub
mov
pushf
cld
mov
lea
pop
xchg
shll
pop
out
ret
jmp
imul
push
cmp
push
scas
imul
cld
pop
ja
lret
cmpsb
cli
je
lods
out
and
fnsave
mov
pop
cld
push
adc
scas
ret
lods
arpl
push
scas
mov
iret
cmp
jmp
lea
or
shrb
in
jmp
scas
insl
sbb
ret
pushw
arpl
mov
test
pop
xchg
mov
pop
dec
imull
mov
data16
stc
xor
out
cmp
jae
push
xor
mov
rolb
subl
cmp
dec
dec
js
dec
and
movsl
dec
int
cmpsl
sub
or
add
xchg
stos
and
ja
inc
pop
jae
add
cmp
loopne
aas
inc
jge
sahf
mov
and
adc
xchg
and
and
push
nop
call
pop
stos
ja
mov
std
inc
pop
fbstp
mov
mov
andb
in
hlt
xor
insl
xchg
sahf
xor
ret
add
ss
or
pop
hlt
movsb
xchg
mov
test
arpl
fisubs
sub
dec
addr16
test
mov
shrl
roll
cmp
jp
negb
mov
roll
or
sub
jne
cmp
pop
mov
sti
mov
push
inc
and
sub
stc
jge
in
and
adc
push
xor
xlat
aam
xor
icebp
mov
xchg
push
inc
mov
cli
jno
lret
cltd
push
orb
mov
popa
jbe
mov
and
dec
and
out
loop
in
pop
lods
int3
lock
aaa
mov
jle
push
inc
or
add
popa
mov
sbb
fistpl
or
pop
aas
rcll
adc
jl
aas
std
aam
divl
out
push
mov
aaa
mov
inc
sbb
xchg
aad
repnz
cmpsl
add
test
xor
sbbl
out
adc
stos
iret
out
sbb
repz
rcrl
mov
lods
push
xchg
clc
inc
xor
in
push
dec
mov
popf
pop
inc
cltd
jbe
pushl
adc
sarb
jno
jmp
out
sbb
mov
and
and
test
std
iret
aaa
or
stos
sub
in
inc
fcmovbe
or
mov
push
adc
jmp
adc
cmc
and
adc
xor
aas
or
test
outsl
icebp
or
mov
sub
call
out
leave
je
fbld
rorl
loope
lods
xchg
cmp
incb
divb
jnp
aam
aam
jo
popf
enter
mov
xchg
push
repnz
mov
imul
cmp
pop
inc
adc
jmp
mov
lret
jmp
mov
jb
cmpsb
cmp
inc
xor
lret
je
lcall
push
xor
jne
or
nop
mul
add
testb
scas
push
in
cmp
imul
movsl
daa
sub
and
push
add
aam
rcr
push
push
mov
cmpsl
insb
stos
aaa
pop
inc
stos
addr16
inc
out
mov
loopne
rcrb
cmp
xor
xchg
test
iret
sbb
outsl
out
imul
adc
mov
inc
inc
cmp
and
ja
fs
sub
jge
push
sbb
xchg
push
int
pop
in
mov
idiv
push
mov
mov
pop
cmp
add
cli
pop
shlb
lret
push
xchg
jge
add
rcr
inc
es
cmpb
in
cli
rorl
loopne
add
mov
jns
xor
jge
xlat
sbb
mov
xor
adc
jp
xchg
outsl
cltd
mov
xchg
push
repz
decl
adc
jne
enter
flds
rcr
adc
orl
inc
jmp
adcb
add
mov
cmp
xor
xor
and
mov
adc
test
aad
cli
xchg
nop
aaa
aas
outsb
xchg
lods
or
daa
mov
mov
stc
jno
rolb
pop
pop
loope
pusha
mov
in
fistpll
fidivrl
les
fdivrs
rcll
pusha
dec
dec
jge
fs
adc
lods
jg
mov
sub
cmc
xor
lcall
xor
jno
int
popa
les
cmpsb
jp
pop
and
je
push
jb
and
movups
and
decl
ret
and
jmp
jp
jo
add
sbb
adc
mov
dec
mov
or
call
fnstsw
dec
stos
pusha
fs
add
xchg
adc
inc
push
inc
mov
pusha
scas
notb
psubb
loop
cld
xchg
jle
or
into
lock
pop
testb
or
jne
cmp
inc
hlt
out
sub
dec
insl
outsb
lods
pusha
mov
insl
mov
cmpsb
icebp
pop
les
adc
sbbb
jae
das
test
xchg
dec
pop
mov
cltd
jl
pop
gs
xchg
out
jge
nop
pop
sbb
int3
mov
sarb
pushl
repz
cmp
nop
shll
mov
dec
sub
mov
and
jl
fdivr
lods
loop
das
adc
les
pop
jnp
pop
out
mov
adc
adc
enter
adc
cs
push
insb
rol
mov
pop
and
xchg
mov
gs
push
pop
arpl
lahf
add
pop
pop
dec
jmp
xchg
aad
mov
add
mov
into
mov
or
mov
sub
pushf
test
insl
packuswb
sub
call
sbb
inc
bound
mov
subl
pop
jnp
add
sbb
or
into
test
xchg
mov
lea
insb
imul
and
push
aad
mov
cs
je
in
mov
jmp
pop
cld
in
test
cs
pop
nop
cmc
xchg
je
psrad
call
mov
daa
and
popf
or
mov
xor
pushf
shll
cmp
jbe
repz
mov
jnp
sub
jge
ljmp
xor
inc
cmp
insl
add
out
xor
negl
ja
jbe
negl
add
pop
push
cmp
add
inc
pop
jmp
adc
cli
stos
cwtl
mov
stos
je
or
fwait
fstpt
fldl
dec
xchg
shrb
mov
mov
jb
mov
jl
test
xchg
mov
jg
jns
sbb
outsl
xor
scas
pop
outsl
mov
loope
push
mov
shlb
xchg
bound
adc
sub
mov
and
out
out
dec
xchg
push
test
stos
push
je
sub
loope
mov
out
aas
call
rol
mov
xor
mov
push
mov
shrb
in
mov
adc
lods
aad
lcall
fmull
enter
jecxz
and
inc
shrl
lret
outsb
add
daa
repz
mov
mov
jg
sbb
jg
xchg
xlat
inc
shlb
fimull
push
mov
push
insb
test
mov
daa
mov
les
iret
in
into
push
cs
rcl
aas
add
jge
mov
add
in
pusha
call
fistl
adc
cli
push
push
push
jge
lret
syscall
movsl
mov
mov
sub
int
imul
dec
fwait
pushf
inc
inc
pop
sbb
pop
or
repnz
inc
jle
xchg
push
sbb
sub
test
xchg
mov
push
imul
enter
mov
add
jp
enter
arpl
pop
nop
push
xor
xor
cmpsl
loope
jge
push
rcll
ret
mov
scas
ja
xchg
mov
cmp
leave
mov
icebp
jnp
std
ficoml
jnp
push
cs
mov
push
sub
outsl
mov
stos
mov
cmc
mov
mov
mov
and
or
subb
pop
nop
pop
push
es
pop
icebp
xor
shr
fs
out
mov
test
popf
fnsave
dec
flds
adc
sbb
cli
shll
sub
adc
fcmove
loop
jge
cli
movsl
and
aam
out
cmp
jne
jp
lret
sarl
add
add
ljmp
or
imul
cmp
cld
or
mov
ss
mov
lahf
movsb
sbb
mov
jae
rcrl
gs
enter
xlat
add
arpl
inc
cmc
xor
sti
xchg
cmpxchg
jmp
lock
inc
push
movsl
jne
cltd
add
stos
icebp
adc
xchg
inc
data16
imulb
imul
negb
mov
nop
pop
das
xchg
jae
xchg
jnp
rorb
and
adc
cs
dec
dec
jno
xchg
xor
adc
mov
pop
mov
leave
fwait
mov
test
fcmovbe
mov
xor
int
adc
sub
orl
fstpt
sbb
ficomps
cwtl
cmp
aas
aas
xor
popa
mov
cwtl
mov
icebp
mull
fs
in
add
inc
xchg
test
das
push
daa
es
jge
push
xor
mov
inc
daa
movsl
fdivrs
aad
mov
and
xlat
and
mov
jno
mov
pop
push
mov
iret
pop
lods
adc
dec
pop
fstpl
xor
xor
jmp
mov
push
int
lock
cmpsl
std
lods
jg
xchg
int
mov
xchg
dec
fsubl
mov
call
ja
cmpsb
mov
or
cmpsb
add
movsb
outsl
cmp
cld
add
addr16
daa
or
inc
in
enter
mov
mov
xor
addl
push
sub
mov
xor
ja
sub
mov
or
jae
and
insb
movsl
dec
and
cmp
cmp
in
test
fiaddl
adc
jb
mov
push
jns
sub
dec
shll
sub
sub
sti
addr16
lret
dec
and
and
inc
sub
sub
push
add
pop
loope
and
dec
mov
pushf
sub
xchg
ljmp
cmp
cs
and
in
rcll
mov
mov
xor
roll
jne
mov
mov
cmp
pop
jg
xchg
and
cmp
jle
xor
push
sbb
sub
inc
int
cmpsl
es
nop
and
and
xchg
jne
hlt
push
popf
fcomi
jp
pop
insb
inc
dec
mov
or
rol
ficoml
nop
and
repz
xchg
dec
stos
les
pop
inc
les
mov
ja
and
jnp
mov
jecxz
mov
cmc
cmpsl
and
sbb
jg
jmp
cmp
sub
es
stos
lods
adc
push
add
pop
in
fisubs
hlt
pop
popf
push
jmp
ss
push
and
push
push
push
mov
getsec
stc
ja
or
fisubrs
sbbl
mov
push
jb
in
data16
cmc
mov
in
dec
push
pop
mov
sarl
add
lods
xorb
xchg
pop
cmp
lret
adc
xor
imul
outsl
jne
cmp
adc
or
popf
push
jecxz
xchg
iret
xor
adc
sarb
inc
fdiv
repz
incl
fdivrp
add
je
push
call
xor
scas
out
add
and
xor
mov
out
cmc
xor
cmpsl
jp
push
mov
dec
add
lods
aaa
test
loop
aas
sahf
lret
aam
sbb
xor
mov
dec
xchg
iret
loope
rcr
out
cmp
adc
cmc
xchg
pop
push
cmpsb
enter
icebp
jmp
repz
xchg
adc
pop
xlat
lods
and
fs
pop
out
repz
lret
xchg
and
int3
pop
outsl
dec
ljmp
mov
rcrb
cmc
loopne
jge
xchg
mov
pop
test
or
mov
scas
pop
dec
lret
add
xlat
mov
stos
mov
fdivrl
sub
pop
jno
lds
cmp
sbb
lock
inc
and
inc
test
mov
adc
sub
mov
cmp
in
je
rcrb
mov
stc
jl
add
nop
test
xchg
xchg
sub
sub
mov
mov
sti
and
mov
push
or
mov
cmc
rcrb
xor
jmp
mov
out
pushf
fimuls
mov
call
test
inc
sub
pop
loopne
lods
sub
lea
and
mov
pop
inc
xlat
cmp
cli
loop
mov
pop
lock
aaa
je
aad
ja
xor
hlt
lcall
outsb
orb
test
adc
mov
in
insb
sbb
jp
in
repz
dec
mov
shl
pushf
mov
sbb
shll
rorl
cltd
mov
rclb
insl
mov
fldt
pop
scas
jmp
ljmp
leave
les
lods
or
in
leave
fs
outsl
push
js
pop
fisubl
mov
loopne
out
fsubl
dec
mov
sti
pop
dec
xchg
fldcw
xchg
sub
lcall
mov
iret
aas
ret
loop
das
sub
mov
add
loop
push
or
testl
mov
mov
xor
popf
test
mov
cmc
jno
push
sub
stos
mov
sub
cmp
aad
fs
mov
xchg
out
push
adc
push
data16
pop
inc
mull
xchg
pop
mov
subb
in
push
imul
push
adc
out
dec
mov
or
lock
in
psrld
call
dec
aam
pop
cmpsb
int3
and
cli
scas
push
mov
fs
xor
nop
pop
les
mov
loope
shrl
push
adc
jo
mov
pop
pop
and
sbb
ja
xor
adc
rcll
repnz
push
jmp
jne
js
jnp
mov
in
push
xchg
xor
divb
push
scas
int3
push
sbb
in
xchg
xlat
cmp
mov
and
jo
stos
xor
cmpsb
scas
icebp
arpl
jmp
rcll
push
cld
mov
nop
lret
xchg
icebp
addr16
adc
repz
mov
out
ds
mov
and
nop
mov
nop
cltd
jo
add
xchg
fimuls
pop
sti
cmp
lods
mov
iret
jno
inc
nop
outsl
jg
pop
sub
pop
outsl
cmp
mov
push
adc
cmp
fs
xor
lock
dec
and
or
jne
fidivrs
repz
roll
vmovss
cwtl
stos
mov
sbb
sahf
xor
cld
add
lods
rcrb
jns
dec
pop
lcall
int
mov
out
movsb
nop
lods
lock
mov
mov
imul
sbb
pusha
xchg
sbb
fstps
lea
xor
in
mov
shll
dec
mov
test
xor
arpl
gs
and
int
bound
push
in
mov
push
push
xor
fdivl
imull
xchg
fisttpl
pushl
idivl
push
addb
outsl
imul
add
pop
xchg
mov
icebp
scas
repz
sub
push
xor
scas
adc
or
std
paddsw
pop
sbb
enter
cmp
sbb
dec
aaa
add
xchg
out
fiadds
les
jno
jne
sub
bound
sub
sub
adc
aaa
out
xor
sti
rorb
je
sub
test
fwait
mov
ss
pop
mov
xlat
scas
imul
add
test
mov
pop
or
cld
mov
push
and
dec
aaa
pop
pop
push
jo
xchg
int
js
add
mov
cmp
jp
mov
je
testb
enter
sub
mov
jg
std
jae
jl
mov
mov
inc
pop
push
fdivs
mov
push
repz
adc
mov
sub
rorl
push
sub
stc
add
pop
ja
inc
ffreep
mov
push
jne
frstor
cltd
xchg
mov
jecxz
adc
jmp
xchg
xchg
mov
imul
sbb
lret
xchg
and
mov
imul
scas
push
cmp
lds
test
mov
addr16
push
or
and
push
xchg
mov
imulb
inc
fs
jl
cmp
cmpsb
sub
fdivr
jmp
add
xor
jae
add
nop
sbb
jp
repz
mov
mov
test
aas
pop
xor
sti
or
mov
loopne
sbb
aad
adc
and
mov
aam
sbb
aam
in
add
repnz
int
andb
push
in
sub
int
ss
pop
shlb
push
test
test
sub
and
inc
push
cmp
inc
test
pop
daa
cwtl
adc
stc
std
fstl
stc
or
dec
xorl
lret
outsb
into
insl
adc
pop
xchg
loop
jbe
fdivrl
lret
rolb
popf
outsb
out
loope
xor
pop
mov
mov
ss
mov
mov
or
out
out
ljmp
mov
and
mov
fists
mov
loope
pop
lret
call
sub
movl
std
ret
and
adc
pop
clc
mov
jae
scas
mulb
mov
movsb
lods
das
push
cmp
dec
je
shl
and
jmp
push
ja
in
jnp
or
repz
sbb
inc
xor
inc
lea
cli
add
and
xor
cmp
pop
outsl
cmpsl
add
sbb
and
sbb
mov
push
mov
inc
dec
adc
cld
mov
andb
js
and
sbb
xchg
and
fsubr
sub
xchg
and
nop
cltd
mov
or
jle
and
je
mov
sub
push
movsl
lock
movsl
push
mov
ljmp
hlt
std
imul
insl
insb
pop
or
arpl
push
repnz
jbe
pop
pop
jl
adc
lock
shll
lcall
mov
dec
or
loope
xchg
sbb
icebp
add
inc
jbe
repnz
and
push
popf
mov
cmp
ret
and
in
les
adc
pop
jnp
push
test
cmpb
addr16
pop
push
jae
divb
cli
outsl
stc
push
cmp
ja
push
pop
lea
clc
sbb
adc
iret
fstpl
mov
cmp
in
ret
push
dec
fs
jbe
cltd
ss
cli
jae
cmp
imul
rcr
cltd
inc
aaa
js
fucomip
addr16
test
pop
fwait
pop
jns
movsb
xor
cmp
cmpsb
xor
insl
ret
stos
push
andb
dec
dec
push
xchg
jmp
sahf
mov
lcall
std
rclb
cmpsl
xchg
bound
inc
mov
adc
and
jo
in
aas
jo
in
scas
cwtl
movsb
fs
xor
pop
push
outsb
mov
pop
sarl
inc
aas
call
mov
jmp
loopne
rorb
lret
jecxz
add
inc
add
sub
nop
std
aam
cmp
int
jbe
mov
es
sarl
lods
out
out
pop
cld
ret
ja
fdivrs
aam
add
lods
mov
shr
pop
sbb
stos
aam
mov
lahf
jmp
ja
leave
test
in
inc
jno
sbb
int
icebp
in
shrb
loop
inc
popa
rolb
in
lret
daa
std
test
dec
xchg
fs
dec
sbb
cli
lods
fcmovnbe
pop
dec
xchg
rorb
cmp
cmp
jnp
mov
lcall
cmp
inc
fs
mov
xchg
mov
lods
sahf
pop
sub
push
aad
mov
xchg
mov
test
adc
mov
mov
cmp
inc
test
lods
pushf
push
sub
outsl
ljmp
lds
mov
loopne
mov
bswap
xor
push
sahf
pushw
outsb
xchg
sbb
leave
aam
loopne
jno
inc
jbe
notl
mov
repz
mov
dec
in
xchg
cld
sub
cmp
adc
pop
arpl
and
sbb
xlat
dec
adc
lret
inc
sub
mov
push
xchg
jne
fsubrl
addr16
or
add
pusha
sub
pop
mov
jne
sbb
shll
dec
mov
pop
repnz
jae
dec
iret
adc
imul
ss
jl
cli
aad
inc
loopne
inc
shrb
jp
popa
popf
aaa
roll
cld
imul
xchg
mov
mov
data16
pop
mov
cltd
iret
xchg
xchg
and
mov
cmp
and
aas
test
inc
pop
lahf
outsb
es
mov
xchg
and
outsb
cmpsb
dec
out
mov
jno
insl
insl
cmp
mov
add
mull
mov
xor
xor
aaa
push
out
pop
xor
mov
lods
in
adc
push
or
fnstcw
shrb
mov
push
nop
in
jg
push
push
inc
jge
sub
cs
rol
jp,pt
and
inc
push
mov
fistpll
sub
dec
xchg
pushf
ret
jb
outsb
jp
test
cmp
jae
pop
pop
pop
rorb
out
pop
inc
dec
jae
sahf
push
pushf
rcll
push
sub
hlt
mov
popa
cmp
mov
enter
sub
lds
inc
jnp
adc
cwtl
shl
cmpl
scas
mov
adc
add
or
xor
aaa
movsb
xor
inc
add
sbb
push
inc
fs
mov
hlt
stos
inc
mov
mov
mov
sub
sbb
enter
hlt
test
jle
cmp
stc
pop
cs
popa
out
scas
outsl
pop
jp
out
aad
sbb
movsl
pop
mov
icebp
xor
pop
movsb
sub
jecxz
dec
mov
cli
shlb
mov
jo
cld
pusha
sub
leave
inc
clflush
insb
sub
and
out
loopne
mov
hlt
inc
cmpsb
sub
out
inc
call
ljmp
xchg
jb
rorl
mov
cmp
push
adc
adc
mov
in
pushf
dec
out
aad
mov
outsb
push
rcrl
mov
aad
pushf
cmc
jne
int3
cmc
cltd
fldenv
imull
ret
push
push
cs
mov
stos
lods
scas
pop
mov
das
dec
xor
push
mov
fsubp
es
out
add
call
add
shl
dec
push
sbb
mov
or
out
outsl
pop
add
jb
mov
lahf
cmp
adc
jmp
jno
mov
jl
mov
sub
mov
and
fimull
cwtl
fstpt
stos
and
clc
lea
int3
stos
or
outsl
cmp
fsubrs
sub
adc
and
ja
maxps
sbb
es
jae
fcompl
jnp
bound
scas
mov
scas
inc
loopne
shlb
icebp
mov
mov
ja
mov
jae
aaa
push
repnz
sub
pop
push
jnp
cmp
je
add
lods
lea
jecxz
lret
cltd
push
xor
movsb
inc
mov
mov
outsb
sbb
adc
rolb
jecxz
adc
test
test
and
jno
enter
shll
dec
les
jne
ret
into
pop
mov
add
adc
cmp
lods
and
fsubrl
cltd
aam
and
mov
rcll
mov
addr16
mov
pop
pop
insl
mov
adc
mov
push
xor
push
jno
inc
nop
aad
lcall
clc
push
or
inc
sarb
out
pusha
ds
sbb
stc
add
test
push
or
cmp
sbb
mov
iret
jbe
adc
std
push
xor
insb
add
clc
mov
pop
jmp
mov
loopne
dec
ja
in
rclb
addl
cmp
jb
mov
cmovge
and
andnps
and
cmc
stos
test
std
loopne
mov
cmpsb
fadds
lcall
popl
xchg
jl
adc
push
rorl
pop
jae
stos
daa
adc
and
roll
lds
aas
test
insl
adc
push
jns
je
dec
aaa
inc
movsb
add
adc
xchg
aad
loop
mov
and
std
pop
jmp
fcmovu
and
add
aam
vunpckhps
iret
mov
js
push
mov
ja
pop
inc
stos
xchg
adc
jle
cmp
xor
idivl
psraw
push
mov
lret
aam
movl
mov
rcr
xchg
adc
cmp
push
lcall
fnstsw
sbb
mov
sar
stos
dec
jg
mov
in
inc
rol
or
jmp
out
out
pop
mov
shrb
jl
dec
xchg
and
dec
xchg
dec
fisubrl
dec
jo
add
and
inc
lret
lret
jge
popf
pop
mulb
dec
sub
daa
xchg
jbe
nop
ret
data16
ror
sahf
sbb
pop
lahf
inc
pop
xchg
adcb
adc
cld
push
cld
lds
cmp
ficompl
add
sbb
mov
cwtl
xchg
out
xchg
or
rcrl
rcll
loop
mov
test
xor
sub
ja
ss
arpl
fs
mov
ret
cmp
ret
cld
sub
cmc
test
push
fisubrs
les
hlt
dec
adc
xchg
lea
or
adc
adc
cmc
sub
loope
test
scas
push
jbe
pop
push
mov
out
cli
movsb
dec
sti
testl
xor
rolb
mov
sbb
shrb
or
mov
cltd
cltd
dec
scas
push
mov
mov
sbb
lods
xchg
dec
pop
pop
aas
and
in
mov
jmp
inc
movsl
mov
mov
push
nop
pop
dec
inc
outsb
mov
outsl
push
adc
sbb
dec
push
mov
jp
sarb
mov
sbb
testl
cmp
mov
nop
xorl
call
jno
pop
pusha
loop
fstpt
mov
jp
xlat
push
cmp
mov
mov
sbb
lds
mov
jmp
lret
mov
hlt
stos
jg
out
in
mov
push
mov
fsubrp
jp
popf
mov
inc
sti
dec
xor
aaa
in
sub
iret
jg
mov
jmp
loope
mov
std
dec
fsubrl
adc
push
je
mov
push
mov
fcomp
addr16
jge
std
nop
clc
mov
jl
insl
test
mov
and
push
jecxz
test
call
rcr
cmpsl
pop
push
aaa
ja
mov
pop
jge
repz
pop
jnp
scas
fidivl
sbb
shlw
dec
mov
jb
fld
sbb
inc
adc
loopne
int
sub
or
add
scas
inc
mov
mov
mov
adc
mov
sbb
jg
hlt
xor
mov
inc
xor
movsl
dec
xchg
push
jp
insb
mov
repnz
cmp
xchg
pop
rcr
popa
ja
int3
mov
es
sub
or
xchg
push
push
mov
mov
sti
aas
loope
sbb
jg
mov
repnz
lcall
bound
mov
add
jns
pop
in
pop
sahf
sahf
adc
jnp
stc
dec
aas
fiaddl
mov
mov
popa
js
addr16
jl
mov
push
ficomps
inc
icebp
addl
mov
orb
cwtl
jecxz
dec
push
ja
test
jp
jae
jne
mov
aaa
mov
and
lock
stos
in
sbb
mov
or
or
into
insb
fxch
and
add
cltd
out
pop
pop
arpl
out
jo
fisttpl
mov
daa
test
mov
xor
push
insb
dec
mov
or
call
push
jo
lgs
pushf
xchg
sub
xor
pop
or
mov
jbe
repnz
mov
cltd
cmpsb
add
lods
xor
or
imul
push
jns
xchg
sar
xor
cli
leave
mov
xor
les
repz
dec
push
mov
sub
push
lods
int
and
add
adc
subb
pop
mov
mov
jg
pop
cld
pop
popa
pop
enter
jne
test
int3
icebp
sub
decl
xchg
inc
push
mov
int
clc
les
mov
xor
pop
jno
popa
xchg
and
and
subb
icebp
jno
xor
pushf
and
data16
inc
mov
push
mov
pop
in
ja
mov
adc
mov
adc
xchg
dec
cmpsl
xlat
mov
leave
inc
fcompl
dec
mov
mov
mov
and
mov
add
data16
dec
cld
lret
test
adc
in
inc
mov
xchg
xchg
frstor
jecxz
and
pop
mov
dec
xor
or
in
sbb
repnz
stos
repz
rclb
inc
sub
cmp
stc
mov
cmp
sbbl
fbstp
call
pop
je
rcrb
mov
in
gs
repz
inc
pop
push
lea
shl
scas
sbb
xchg
cmp
movsb
adc
pop
in
out
sub
fsubs
push
ffreep
pop
sub
pop
movsb
push
mov
fidivl
jb
jp
mov
test
shrl
inc
je
jae
pop
ss
outsb
push
jae
sbb
push
rclb
xor
xchg
imul
push
push
push
mov
bound
repz
pushf
and
mov
in
inc
xchg
inc
lods
sahf
rclb
shll
sbb
dec
cmpsb
add
int3
mov
test
inc
pop
mov
movsb
mov
cmpsl
sub
push
in
xor
push
lods
xchg
movsl
add
outsl
inc
rcll
mov
sbb
mov
cld
xor
sbb
fdivrs
ljmp
dec
jnp
fxch
mov
leave
and
add
stos
lret
rcll
ficoml
pop
ret
xor
adc
mov
inc
popf
insb
push
repnz
and
aaa
ss
in
xor
std
js
daa
xchg
lcall
ds
pop
in
mov
sub
xor
rcr
adc
int
adc
xchg
pop
inc
add
out
push
inc
xchg
mov
push
cmp
xchg
cmpsl
add
movsb
push
pushf
insl
or
dec
mov
aas
cmpsb
cwtl
pop
stos
daa
rol
je
and
xor
mov
hlt
push
je
mov
rorb
mov
sahf
notl
mov
push
inc
pushf
mov
xlat
adc
cltd
les
cmp
and
push
sbb
mov
add
jle
sbb
subb
bound
cmp
cmp
insl
jecxz
pop
ds
icebp
mov
jno
sarl
cwtl
scas
arpl
mov
or
adc
loop
jae
dec
push
incb
sbb
fwait
mov
fs
imul
mov
addb
into
scas
in
out
aam
std
and
push
mov
and
scas
gs
pop
stc
out
sti
push
je
mov
mov
fstl
push
sahf
enter
adc
shlb
jmp
jmp
out
mov
imul
aaa
aad
test
pop
inc
push
mov
pop
add
inc
push
inc
sub
jp
push
pushf
add
jge
je
lea
cmc
cltd
cs
fisubrs
jo
ds
mov
andb
mov
lds
nop
cmpsb
adc
push
in
inc
in
pushf
fsubrs
xor
push
outsw
push
and
sbb
push
sub
mov
les
neg
jbe
sub
stc
sub
fistl
scas
aad
les
mov
repz
sahf
lds
and
and
lds
das
mov
popa
jmp
pop
fcompl
xor
sbb
jmp
roll
test
insl
mov
sbb
test
out
loop
add
popa
out
or
xor
aaa
aam
dec
lock
sub
xor
dec
or
adc
loop
adc
jns
push
adc
push
fwait
dec
ljmp
push
mov
sub
pusha
mov
mov
bound
adc
push
leave
jl
adc
je
shl
cli
mov
adc
icebp
xchg
cmp
je
push
mov
xorb
jo
pop
pop
xchg
dec
push
divb
cmp
or
aam
add
jg
out
cmp
in
sbb
sub
sub
jbe
sub
pop
int
inc
movsb
pop
push
jle
insb
push
mov
adcl
pop
mov
sub
fistpl
sub
cmp
idivb
adc
mov
and
cld
dec
pop
pop
enter
pop
out
fdivs
xor
sbb
dec
and
mov
adc
push
lock
sbb
test
fmuls
adc
test
mov
jae
xchg
mov
pusha
lea
pop
ljmp
lret
gs
xchg
cmp
sub
adc
cld
and
lds
add
clc
add
dec
in
jg
out
jne
test
test
lret
lahf
cmpsl
cmp
xchg
movl
sbb
sbb
aad
or
cmp
pop
xchg
dec
ss
dec
inc
fiaddl
add
std
cs
fistpll
daa
mul
xchg
repnz
ja
cwtl
xor
fdivs
ljmp
sahf
out
pop
sbbb
mov
fnstenv
loope
ss
dec
popl
cwtl
xchg
out
aam
int
out
jno
in
mov
dec
cmp
xor
fcompl
add
dec
enter
xlat
adc
stos
pop
jmp
add
jecxz
pop
mov
add
cmpsl
pop
dec
adc
jae
mov
xchg
icebp
out
movsb
inc
and
outsb
pop
and
inc
jbe
insl
ss
cmp
mov
mov
mov
mov
test
adc
push
push
mov
xchg
add
xchg
mov
pop
cs
ret
jnp
ss
fs
roll
add
jno
or
insb
pushl
sbb
int3
adc
cwtl
sarb
cmpsl
aad
adc
popa
jnp
xchg
push
sar
aad
mov
pop
jno
out
sarl
sbb
jo
xor
in
mov
or
insl
lods
data16
das
sbb
js
pop
add
fmull
lahf
jmp
jnp
sbb
lret
or
ds
sub
cld
add
fistpll
adc
das
or
cli
push
decb
fistpll
push
xor
movsb
arpl
in
int3
inc
push
stos
xchg
mov
jnp
push
in
fs
out
lret
aas
mov
pop
or
ltr
in
dec
mov
mov
mov
cmp
inc
mov
jp
jmp
mov
or
fsubrp
inc
daa
jg
divl
lock
add
xor
pop
jl
out
mov
adc
shll
mov
loop
leave
lahf
repnz
std
lret
lret
int3
jmp
test
leave
xchg
or
jne
ficomps
popa
cmp
xor
push
xor
gs
das
stc
mov
insb
xchg
test
dec
hlt
popf
xor
inc
pop
dec
aas
mov
cmovns
loopne
mov
xchg
lcall
and
mov
cmp
xchg
ljmp
test
and
rol
and
push
xor
ds
stos
xor
rorb
mov
mov
mov
clc
mov
repz
lods
std
push
xchg
jne
loop
inc
mov
loopne
enter
lret
fiaddl
adc
imul
sbb
jne
out
jl
add
scas
out
cmp
icebp
push
push
pop
outsb
ja
cmp
jno
jo
out
mov
in
and
fimuls
xchg
lahf
adc
dec
addl
cmc
lock
sbb
cwtl
ret
sarb
lret
cmp
ffree
repnz
mov
pop
cmp
les
xor
std
lea
inc
mov
outsl
js
push
mov
adc
ficomps
pushf
int
addr16
test
fsubrs
xchg
je
push
mov
pop
and
sbb
ds
iret
pop
addr16
movsl
rclb
mov
and
adcb
fistpl
sti
lahf
dec
mov
jae
push
mov
arpl
dec
mov
xor
sbb
pop
out
ffree
test
cltd
das
jge
jmp
out
mov
mov
jnp
repz
xor
cld
cmp
mov
push
xlat
movsb
adc
inc
mov
sbbl
inc
dec
sub
movsb
jne
out
add
sarw
mov
sub
sbb
sbb
fstpl
mov
push
mov
loop
inc
sub
fsubrs
insl
xlat
dec
xor
mov
sbb
push
fs
sbb
add
stos
or
cli
pop
mov
adc
aad
or
sub
or
mov
mov
aad
jp
insl
mov
je
inc
frstor
sbb
xchg
or
sbb
mov
mov
movsl
ss
shld
iret
loop
add
ficomps
jg
outsl
lret
fcomi
enter
and
push
icebp
lods
icebp
dec
cmp
jmp
xchg
out
mov
fistpll
je
in
into
push
or
jno
fcoml
push
adc
push
push
cmp
cwtl
or
pop
jl
pop
inc
mov
fsubrp
ljmp
xstore-rng
cmpsl
inc
shl
adc
and
imul
hlt
data16
in
icebp
pop
pop
or
in
sbb
mov
cmp
inc
push
and
fwait
daa
repnz
lret
and
jp
xchg
insb
lds
test
faddl
sub
ret
test
inc
sbb
loopne
push
stc
inc
movsb
test
or
jg
xchg
xlat
mov
adc
xor
pop
or
repz
xchg
movsl
in
mov
jg
lock
xchg
mov
push
push
in
sbb
aam
mov
cmp
repz
jnp,pn
jp
jp
gs
cwtl
xor
rorb
das
jmp
jle
ret
daa
sbb
mulb
add
jle
mov
or
insl
mov
dec
aas
push
dec
push
inc
xorb
mov
sbb
pop
iret
mov
pop
lret
push
mov
icebp
lea
mov
pop
cmp
dec
rcrl
mov
or
daa
ficoms
pop
into
push
cmp
cmp
and
dec
mov
adc
dec
adc
push
xchg
push
les
cwtl
xor
jmp
jo
adcb
popf
xor
push
push
rol
xor
mov
mov
pushf
jo
sarb
jp
dec
lret
in
dec
add
push
js
arpl
gs
fisttpl
inc
iret
push
cmp
mov
dec
add
xor
mov
cmp
nop
lods
stc
xchg
push
iret
dec
es
fwait
sti
pop
xchg
popa
add
sbb
aaa
loope
jecxz
jp
sbbl
test
sarl
jnp
loop
adc
sbb
sub
push
xchg
dec
push
cltd
lahf
xchg
popa
adc
lock
add
cwtl
mov
sub
push
xchg
jns
push
loope
push
dec
outsl
xchg
lods
shr
repnz
stos
xlat
fisubs
cmp
sbb
adc
and
shl
push
std
xor
in
test
pop
mov
inc
jo
daa
adc
mov
int
inc
insl
insb
fisubl
xchg
pop
sub
inc
sub
fwait
jns
dec
lret
negl
xor
lods
testl
add
adc
jmp
pop
mov
inc
scas
seto
lcall
xor
enter
adc
stos
imul
xor
push
adcb
lock
jbe
xchg
addr16
jg
lea
jge
test
leave
out
enter
lds
popa
mov
lds
xchg
fimull
aad
jg
adc
add
inc
or
lret
lods
xor
or
xchg
jp
jmp
scas
ljmp
arpl
stc
shr
cmpsb
cmp
test
push
mov
dec
mov
cmp
xor
and
adc
jle
outsb
out
les
call
mov
xchg
mov
add
push
and
scas
xchg
jmp
stos
imul
push
out
cltd
loop
push
mov
ret
sarl
pop
cmp
mov
dec
mov
cmp
push
insl
insb
mov
xor
mov
push
arpl
sarl
xor
stos
pop
pop
out
sbb
ljmp
xor
mov
addr16
sbb
and
fs
or
dec
pop
cmp
sub
cwtl
fs
cld
xorb
and
fidivrs
xor
iret
pop
hlt
pushf
imul
pop
js
mov
mov
outsl
jbe
test
cmp
lret
cmc
negl
cli
push
cli
inc
lcall
dec
xor
iret
outsl
leave
adcb
mov
or
in
mov
pop
ret
push
inc
cwtl
mov
sbb
add
movsl
mov
aam
cltd
int
push
mov
int3
lock
pop
cmp
in
and
fwait
and
or
gs
adc
pop
adc
enter
push
pop
add
mov
stc
insb
dec
dec
mov
or
dec
leave
es
mov
or
addr16
ret
sub
fucomi
in
xchg
mov
insb
xchg
ret
and
cmpsl
mov
xchg
mov
leave
lret
outsl
mov
leave
jno
mov
inc
mov
mov
cmp
cmp
ja
mov
add
addr16
dec
and
and
push
cltd
mov
jle
push
rorb
inc
icebp
cltd
mov
aas
or
cltd
jne
mov
xor
jge
shr
sub
jns
xchg
call
cmp
pop
xor
push
xchg
jae
pop
les
shlb
das
popa
in
jbe
mov
daa
test
ret
or
pop
loopne
push
jp
in
mov
mov
outsb
pop
lret
xchg
ds
fistps
xlat
pop
and
pop
pusha
stos
pop
test
pop
test
daa
adc
pop
data16
mov
dec
mov
movl
sbb
push
js
push
adc
aaa
aam
sub
push
ds
mov
inc
clc
jle
xor
push
add
test
stos
std
movl
dec
in
std
lea
in
pop
sahf
addr16
sbb
jmp
cmp
mov
daa
lret
clc
push
or
xor
ljmp
enter
je
xchg
sbb
adc
test
test
mov
mov
dec
adc
jnp
icebp
add
outsb
mov
adc
push
xchg
sub
jno
sbb
and
xchg
and
dec
ja
push
in
mov
loope
dec
and
je
in
xor
dec
mov
lods
inc
jmp
adc
sbb
jns
xlat
insb
push
cmc
clc
in
pop
jo
pop
icebp
push
xchg
xor
sbb
sub
out
popf
icebp
addr16
xchg
rcr
xor
push
pop
push
imul
mov
outsb
pop
movsl
xchg
mov
mov
cmp
mov
cltd
mov
aaa
xchg
jns
out
push
cmpl
adc
push
cwtl
cmp
enter
push
sbb
inc
cwtl
mov
popa
cmp
addr16
lret
mov
fistpl
roll
inc
dec
sub
adc
sahf
mov
push
jl
mov
sbb
lds
dec
adc
mov
js
out
jl
sbb
sahf
dec
lea
rcr
cmp
lsl
cmp
fs
cli
mov
inc
push
lds
push
xchg
roll
jns
mov
or
jecxz
push
cltd
xchg
lods
sti
sub
jae
mov
cmp
and
ret
cmp
cmpsl
sub
adc
fcompl
adc
fisubrs
add
jo
jl,pn
jecxz
test
and
xchg
lcall
xor
movsb
xor
out
and
inc
insb
lret
pop
jge
jl
sub
sub
mov
bnd
mov
xor
in
lcall
jae
movsl
pop
out
xor
mov
dec
ret
subb
in
cltd
cld
xor
xorl
push
xchg
sub
mov
jecxz
popa
rcrb
pop
mov
and
sub
mov
repnz
mov
hlt
dec
call
in
aas
pop
ficompl
inc
mov
and
outsl
inc
mov
aas
loop
mov
test
adc
mov
push
sub
cmp
gs
clc
in
xor
fdivl
fstps
imul
cs
ljmp
outsl
adc
mov
pop
data16
inc
mov
mov
dec
test
inc
push
mov
jbe
and
sti
xor
sub
pop
sub
xchg
pop
jns
es
or
push
pop
int
shlb
repz
shll
fldt
pusha
or
mov
jl
addl
inc
adc
outsl
out
lods
jge
loope
iret
std
add
push
rcrb
mov
mov
pop
and
pusha
jmp
popf
jmp
les
push
jae
or
cmpsb
or
sub
push
mov
inc
push
jmp
pop
jge
jmp
pop
pop
jl
cli
push
adc
and
dec
loopne
jno
mov
enter
jl
movl
mov
dec
add
xorb
unpckhps
fsubs
bound
faddl
jb
or
jo
sti
ja
es
addr16
dec
add
push
cmpsl
and
xor
ret
dec
insl
out
in
pop
xchg
imul
xor
pop
push
xchg
jae
ret
stos
xor
adc
lods
fildll
push
sahf
xor
out
neg
dec
in
jecxz
in
xchg
dec
push
dec
fs
inc
mov
jne
push
cmc
stc
and
stos
icebp
dec
mov
test
jbe
cmp
outsl
and
insl
sub
iret
and
jl
out
daa
jbe
jnp
out
jne
loop
push
pop
jno
loop
cltd
sub
cltd
and
in
xorb
negl
ret
pop
pop
into
or
mov
incb
xor
inc
sbb
jp
dec
push
or
cmp
out
lds
mov
cmp
sub
test
xchg
mov
xor
ret
mov
xchg
dec
fimull
push
ss
je
jns
cltd
sbb
xchg
or
pop
pop
pop
scas
mov
pushf
mov
mov
roll
mov
xchg
test
or
sbb
test
iret
fnstenv
sbb
dec
das
dec
std
lret
insb
mov
inc
not
mov
adc
scas
fsub
fwait
xor
popf
xor
add
es
cmp
ret
adc
mov
out
cmp
lods
sub
sub
push
jg
mov
mov
std
mov
setl
imul
mov
mov
std
repz
mov
jge
int3
xchg
in
mov
lds
repz
pop
add
push
add
daa
shlb
xor
cltd
fdivr
xor
xchg
add
out
mov
nop
test
imul
movsb
mov
gs
mov
sarb
push
sub
es
scas
jl
fisubrl
adc
adc
jle
and
add
or
stc
movsl
scas
jae
push
in
jne
test
push
lods
or
test
stos
pop
popf
mov
nop
gs
pop
jg
stos
movb
push
cmpsl
cmp
mov
dec
mov
lret
push
icebp
lcall
mov
testb
stos
mov
arpl
fwait
adc
jnp
mov
add
mov
pop
push
test
adc
pop
inc
in
mov
add
mov
decl
aas
in
aam
adc
std
mov
inc
nop
cwtl
cmp
and
js
fwait
fsubrl
addr16
pop
stc
and
push
je
adc
or
push
adc
xor
repnz
fcomps
lcall
mov
push
sbb
fs
test
add
jp
fs
nop
outsl
sti
js
push
je
mov
or
lea
aam
shll
testl
push
inc
sub
sbb
js
lods
sbb
out
imul
popf
aas
loopne
lods
shrb
enter
mov
dec
xchg
imul
loop
fmulp
mov
fadds
dec
pop
mov
or
data16
pop
cmp
mov
adc
xlat
clc
adc
sbb
sub
dec
xor
cmp
pop
shr
sbb
adc
add
pusha
push
push
pop
pop
push
jne
test
or
movsb
push
repnz
pop
cmp
jbe
imul
lods
cmp
icebp
sbb
mov
testb
jae
pop
xchg
icebp
ds
dec
dec
int
testb
cmpsl
aas
jle
xchg
std
inc
sti
cld
and
sub
inc
mov
adc
adc
or
cltd
insb
icebp
addr16
jne
addr16
mov
cli
inc
scas
mov
inc
shll
mov
cli
icebp
push
dec
cmpsl
inc
orb
push
push
dec
cmp
mov
das
clc
sbb
popf
cld
and
scas
lds
push
outsb
hlt
aas
mov
rorb
sahf
mov
movsb
outsb
xor
int
mov
or
xchg
insl
mov
cmp
aaa
mov
cmp
out
xor
mov
clc
mov
std
out
dec
cwtl
call
adc
and
push
mov
mull
cmp
es
push
xor
sbb
je
fwait
push
popa
add
stos
cmp
shrl
int3
or
mov
mov
enter
adc
push
push
push
fistpl
xchg
cmp
dec
movsb
sub
fmulp
ja
pop
xor
jge
push
jae
mov
jg
shll
imul
jmp
addr16
lea
sahf
jno
cmc
ds
loop
pop
dec
jmp
mov
mov
mov
sbb
pop
mov
push
arpl
sbb
cld
push
push
push
push
ror
jne
mov
push
jge
jp
xchg
ds
inc
or
cs
lds
dec
outsb
ja
es
mov
lods
sbb
sub
rorb
xor
push
popf
imul
sbb
bound
push
lret
xchg
mov
jge
push
icebp
sub
es
mov
add
stc
mov
and
mov
adc
adc
or
mov
std
inc
js
neg
mov
add
mov
inc
pop
and
jnp
mov
jns
xor
mov
nop
jo
pusha
mov
jne
ljmp
dec
pusha
mov
repnz
sahf
jae
add
mov
data16
arpl
pop
sub
sbb
icebp
lock
in
push
testb
pop
jno
add
mov
xchg
add
sub
outsb
insl
mov
leave
or
xchg
fisubrs
gs
dec
jnp
xchg
sub
push
sub
aad
lret
es
lods
out
xchg
lock
movsb
fbld
sub
jae
push
jle
push
int
subb
fst
sub
push
mov
call
mov
add
jbe
mov
adc
xor
mov
dec
pop
mov
push
pop
aam
pop
xchg
push
sub
jle
push
icebp
or
mov
int3
mov
sbb
out
pop
and
push
xchg
aad
test
adc
ds
in
cmp
sub
lcall
sub
test
push
fisttps
cli
testl
fistps
scas
sub
pushf
sbb
sbb
sbb
mov
adc
test
adc
mov
xchg
xlat
js
sbbb
add
ljmp
or
popa
push
loopne
fcmovne
negl
decl
arpl
lock
and
pop
aas
jo
insb
xchg
add
add
and
xchg
adc
push
xchg
pop
jo
jge
fnstenv
pop
je
xor
pop
shl
scas
pop
mov
sti
adc
jb
inc
out
daa
cltd
in
or
jo
jle
push
dec
inc
jg
testl
sbb
adc
int
ror
xchg
mov
xor
push
jl
adc
xchg
jecxz
std
and
jae
adc
push
les
clc
sub
cli
mov
hlt
sbb
loop
mov
lret
lock
ds
ret
repz
xor
insl
mov
data16
dec
pushl
movsb
cld
outsb
sbb
icebp
xor
bound
push
jno
mov
shlb
movsl
fsubl
or
jl
mulb
push
into
add
sti
cmp
repnz
fwait
out
je
gs
pushf
xor
jecxz
mov
cmp
shlb
cwtl
xchg
ds
std
push
lock
lret
stc
jb
add
adc
and
or
add
dec
add
push
iret
pop
and
iret
dec
xchg
int3
lods
mov
dec
sub
loop
arpl
fsubl
mov
js
cltd
jae
jp
sbb
sahf
cmp
adc
int
mov
negb
push
pop
adc
inc
and
mov
iret
int3
fldcw
add
jbe
inc
lahf
fs
out
rorl
popa
add
cmp
out
add
pop
jmp
ja
out
push
push
rorb
mov
add
xchg
or
cmp
lods
pop
add
clc
mov
push
or
xor
imul
pop
arpl
ds
add
out
mov
jle
test
test
mov
cmc
adcb
es
ficoms
push
mov
fdivrs
leave
mov
jecxz
pop
and
jmp
cld
orl
enter
xlat
int
jle
pop
fwait
mull
fwait
leave
cmpl
popf
in
fwait
les
push
pop
sub
cwtl
fucomi
cli
cmp
sub
adc
stos
adcb
xor
mov
ret
aas
pop
or
jg
mov
stc
mov
stos
leave
mov
mov
ret
add
push
out
gs
stos
fs
std
out
imul
incb
pop
cmp
cmpsl
push
xchg
inc
test
push
lods
insl
repz
je
leave
iret
xchg
jns
mov
fmuls
add
bound
jno
cmpsl
pop
mov
ljmp
cmc
imul
mov
outsl
dec
lods
or
lods
stos
lahf
test
fbld
icebp
in
push
pop
xchg
shlb
push
jbe
scas
cltd
sub
aas
loop
adc
stc
test
mov
ds
mov
iret
negl
dec
stc
test
rorl
mov
add
mov
cmpb
decl
repnz
and
jl
mov
sbb
mov
push
xor
cmp
mov
jge
inc
test
aas
push
divl
setnp
cmp
clc
add
add
cmpsb
popf
xor
lcall
insl
movsb
mov
inc
inc
jle
subl
jns
das
lcall
aas
xorb
cmp
fwait
xor
pop
ss
pop
in
js
scas
shlb
xor
mov
pop
mov
jns
imul
add
movsl
lock
mov
shlb
dec
dec
pop
test
push
add
pop
and
nop
imul
and
inc
xor
mov
sbb
repnz
sub
cmpb
out
add
pop
xchg
mov
mov
xchg
insb
push
mov
aad
jb
sbb
push
loope
mov
and
xor
dec
push
fimull
dec
dec
lea
imul
idivb
pop
cmpsb
fwait
cmpsb
arpl
loopne
icebp
xchg
int3
fistpll
xchg
push
sbb
imul
ja
imulb
xchg
push
mov
xor
sbb
out
mov
nop
and
addb
subb
shll
jo
push
push
popa
cmp
pusha
mov
adc
inc
bnd
sbb
push
jmp
mov
xchg
mov
imul
add
nop
mov
fwait
jl
push
mov
cmp
fcompl
jle
call
push
insb
and
repz
push
in
pop
fnstcw
mov
xchg
xchg
leave
cmovnp
and
push
mov
hlt
jo
imul
push
cli
sbb
stos
orb
imul
mov
shl
add
lods
pop
push
ret
adc
popa
jge
inc
xlat
loope
push
xor
lds
mov
pop
xchg
and
dec
pop
imull
push
push
test
sarb
sub
or
adc
int3
int3
push
xchg
repnz
mov
test
sub
out
adc
movsb
loope
fisttps
in
add
mov
sbb
and
dec
pusha
mov
imul
les
mov
push
mov
adcb
mov
sbb
push
mov
popf
cmpsl
ljmp
lret
roll
sub
repnz
mov
addr16
cmp
stos
in
je
mov
or
enter
adc
mov
ret
jne
fildll
jp
push
mov
flds
fldl
sbb
add
mov
mov
hlt
fcoml
scas
daa
cmpsb
clc
jae
xorb
cli
inc
mov
push
pop
push
mov
lahf
mov
xor
xchg
jo
fisubrs
mov
cmp
and
pop
push
sti
mov
inc
mov
js
std
test
sahf
je
loope
test
pop
pop
cmpsb
sub
jge
sbb
pop
push
add
pusha
push
mov
dec
and
cmp
and
lahf
out
out
outsb
test
jecxz
dec
mov
test
out
mov
fs
xor
and
mov
in
rorl
sub
adc
mov
or
mov
out
outsl
or
sub
out
roll
repz
dec
fisttpll
mov
and
sbb
mov
mov
xor
jne
sub
ja
and
shl
cmp
loopne
cmpsl
data16
dec
or
xchg
mov
addb
ret
mov
or
shlb
ljmp
mov
xchg
aad
leave
push
fstl
ja
add
test
xchg
daa
mov
popa
cmp
lcall
repnz
andl
pushf
aaa
mov
clc
push
pop
cli
and
or
and
mov
ja
mov
mov
mov
jle
ja
mov
xor
lock
rcrl
leave
pop
xlat
lret
jmp
push
inc
std
jge
loop
mov
dec
aad
out
out
fldl
movsb
mov
cmp
jbe
xlat
adc
imul
addb
fwait
enter
or
xchg
fistl
dec
jp
jae
testb
lea
iret
mov
insl
inc
push
nop
add
scas
rcl
sahf
repz
je
daa
je
inc
cmpsl
jle
cltd
enter
arpl
orl
in
insb
or
dec
imul
pop
mov
pushf
ds
add
test
lods
xchg
fistpll
ficoms
pop
mov
icebp
inc
dec
cmp
jns
les
push
pop
aas
xor
sub
xchg
stc
sbb
leave
popa
or
adc
push
outsl
add
popa
ret
xchg
leave
dec
jne
add
test
dec
fidivl
cmp
or
mov
sbb
incb
cmpsl
out
inc
or
testl
inc
fs
insb
dec
lret
adc
dec
mov
sbb
adcb
pop
mov
repnz
fisttps
mov
mov
test
inc
fwait
push
jo
mov
adc
lret
mov
and
jae
xchg
jo
adc
aas
jecxz
lods
adcl
roll
jl
gs
pusha
xor
jecxz
mov
dec
sub
jg
dec
sub
mov
jb
dec
pop
push
sbb
aaa
cs
ficoml
push
data16
aad
movsb
sarl
jbe
sub
sbb
loop
test
cmp
pop
jle
shl
outsl
rorb
inc
lcall
lret
cmp
lahf
lock
movsl
fistpll
sbb
mov
cmp
xchg
or
or
and
lea
xor
push
inc
push
jg
xchg
into
mov
cmp
daa
pop
imul
cmp
movsb
mov
pusha
adc
inc
inc
dec
fdiv
adc
aaa
xchg
movsb
test
sub
and
sbb
mov
adc
cwtl
pop
inc
add
cmpsb
xor
sti
mov
pushf
pop
sub
mov
and
gs
mov
xor
or
or
jecxz
sbb
fbstp
xchg
and
nop
and
xchg
pushf
pop
dec
js
mov
dec
or
outsl
lods
bound
sar
cmpb
pop
fsts
mov
mov
and
sbb
in
leave
data16
aaa
dec
inc
dec
cwtl
movsl
ss
loop
insl
lock
jae
dec
cmp
inc
arpl
scas
stc
cwtl
mov
dec
sub
minps
inc
and
and
mov
neg
pop
imul
cmp
std
pop
testb
jmp
loopne
push
xor
out
test
push
push
ja
cmp
les
cmpsl
into
dec
push
mov
pushf
xchg
mov
mov
xchg
cli
xor
imul
mov
mov
dec
sub
lds
aam
xchg
add
xor
and
das
fmull
xor
test
mov
outsl
frstor
mov
mov
xchg
mov
aaa
or
addr16
dec
aad
add
dec
fistl
arpl
pop
mov
mov
dec
push
push
push
arpl
out
clc
test
lods
and
rcl
shrb
cwtl
cmp
pop
lret
ss
repz
inc
fisubrl
push
fs
in
mov
dec
add
xor
enter
repnz
hlt
movl
xchg
scas
xor
in
or
das
test
cli
mov
pop
cwtl
sub
and
xor
jno
out
hlt
sbb
push
addr16
xchg
sub
push
push
jno
and
xor
test
stos
xchg
clc
das
mov
sar
push
pop
jne
jmp
leave
lods
nop
mov
mov
or
das
sbb
rorl
jno
popa
jbe
sbb
xchg
push
cli
sub
enter
js
scas
cmp
inc
xchg
adc
push
pop
les
enter
lock
pop
push
scas
and
mov
xor
adc
adc
jno
addl
xchg
js
pop
sbb
cmpsb
aam
inc
int
sub
push
adc
hlt
push
inc
loop
ret
rcll
imul
mov
loop
push
cmpsl
push
push
jae
dec
cmp
xor
int3
frstor
dec
fstpt
shlb
xchg
imul
or
push
jl
rclb
mov
jns
sbb
adc
xchg
or
xor
cld
icebp
sbb
and
push
mov
stos
scas
sbb
lret
dec
jge
rcrl
push
and
int3
lcall
add
inc
sbbb
call
scas
int3
add
xchg
inc
cmp
mov
mov
fsubp
xor
cmp
cmpsb
orl
mov
add
clc
fcompl
ficomps
fimuls
pop
fnsave
mov
jno
jns
test
mov
lods
cmp
xchg
ret
in
adc
ret
xor
xor
sbb
pusha
fs
stos
insb
xchg
cli
shll
mov
divl
cmpsb
push
xchg
cmp
daa
pop
xchg
push
in
sbb
es
push
xchg
lret
add
dec
xchg
iret
aaa
sahf
and
repnz
sub
jmp
fcoml
or
in
jae
mov
ret
push
pop
jae
or
mov
enter
or
push
pop
jo
arpl
arpl
flds
push
out
or
push
and
pop
xlat
mov
sub
adc
sub
adc
jnp
or
loope
imul
leave
shl
test
repz
sti
ficoms
mov
lds
push
stc
inc
xor
xor
cli
cs
lea
in
add
ja
xor
fwait
sbb
jecxz
or
loope
lret
ret
sub
test
test
je
xchg
mov
push
add
mov
inc
dec
out
sub
inc
mov
inc
jg
dec
push
adc
aas
shll
xor
xor
adc
add
pop
mov
cmp
cs
add
mov
shrb
or
jno
cmp
dec
xor
jne
and
dec
add
xchg
out
pop
jle
inc
push
jge
jo
sub
aas
mov
inc
or
rolb
pop
mov
aaa
hlt
lcall
dec
mov
imul
std
fs
mov
mov
cmp
cmpsl
add
in
stc
dec
xchg
sub
cmp
mov
mov
xchg
jae
je
xor
xchg
dec
arpl
outsb
daa
sub
or
dec
in
add
fcomi
shll
aaa
and
jmp
andl
sub
outsb
jae
pop
lods
pop
xchg
cmp
gs
jo
lods
aaa
test
pop
mov
adc
xchg
call
insb
push
aam
inc
fbstp
sub
pop
enter
sbb
mov
xor
pop
loop
imul
sub
push
sub
mov
test
test
mov
cmp
ffreep
jge
mov
ja
inc
cvtdq2ps
sub
add
or
ja
arpl
loop
cmpxchg
shll
in
push
mov
inc
cmp
lock
aad
lds
loop
rolb
sbbl
mov
clc
or
xchg
xchg
lcall
outsb
xor
jecxz
add
pop
pushf
outsl
fildl
pop
push
lahf
cwtl
cmpsl
xchg
loopne
cmpsb
fldl
sub
imul
scas
sub
xor
push
sub
pop
pop
fdivr
int
mov
push
pusha
add
fmulp
ret
push
pop
icebp
pop
loop
mov
rolb
ds
ljmp
fwait
mov
jge
cmp
push
ffree
mov
adc
mov
das
stos
insl
movb
mov
mov
push
aas
loopnew
dec
push
mov
fldcw
stos
leave
add
test
shlb
leave
or
mov
xor
cwtl
inc
into
scas
mov
rcrb
mov
pop
adc
fucom
je
insb
loope
cmp
jg
push
push
stos
daa
jo
sbb
jge
xchg
ret
bnd
aam
lds
jmp
lcall
mov
mov
out
mov
push
jecxz
or
xchg
jae
mov
dec
pop
dec
shrb
push
xor
inc
fs
test
std
and
fs
ficoms
loope
or
out
stc
icebp
cli
cmp
and
xchg
xchg
push
stc
mov
test
int
mov
lcall
dec
test
mov
dec
add
pop
lcall
add
int
popf
jmp
mov
shrl
subl
shll
insb
ret
pop
xchg
sub
sbb
inc
loop
push
ss
xchg
inc
dec
xlat
sub
fisubl
and
stc
push
push
loop
or
xlat
pop
mov
xchg
add
sub
cli
int
push
inc
mov
jbe
and
scas
ret
mov
mov
cmp
dec
xchg
enter
cwtl
sub
lea
ds
arpl
xchg
imul
jge
lock
xor
jo
or
mov
pop
stos
jns
test
cs
dec
and
mov
mov
hlt
leave
mov
mul
dec
out
push
fisttpl
mov
arpl
decl
lds
cmp
jmp
and
mov
std
cmp
jo
in
sbb
insb
mov
fisubl
fistpll
push
or
xchg
push
stos
mov
int3
pop
cmp
jb
push
fstps
dec
xchg
xchg
shll
gs
lock
inc
fisttpl
out
fstl
jo
std
fdivrs
lcall
jl
xor
xrelease
dec
cmpsb
movsl
push
mov
inc
mov
outsb
out
mov
or
sbb
jge
fisttpll
xchg
movsl
mov
mov
add
jae
testb
sbbb
test
jmp
adc
lods
icebp
and
loopne
decb
lret
xor
lds
jnp
pop
mov
imul
std
sub
inc
roll
jmp
dec
or
jmp
clc
mov
or
pop
or
pop
movsl
mov
into
aad
repnz
shl
inc
js
enter
lea
das
out
pop
hlt
or
cmp
xor
cmpps
nop
rolb
inc
adc
andb
sub
mov
dec
add
mov
sbb
and
dec
mov
leave
mov
lods
lret
jp
hlt
mov
loope
mov
mov
mov
movsb
mov
jnp
ljmp
inc
dec
lahf
cli
out
and
ljmp
jne
or
mov
popf
mov
jns
dec
je
sti
push
xor
dec
rcrl
shll
ds
dec
lret
push
lea
or
and
jne
pop
in
cmp
lea
test
push
dec
pop
push
cmp
mov
jp
xor
in
jns
or
lock
jmp
jp
sti
dec
mov
sti
and
mov
cld
and
push
sub
data16
mov
mov
pop
mov
je
sub
shrb
loope
cmpsl
xor
pusha
jo
idivb
roll
jns
out
sub
imul
push
call
pop
mov
pop
inc
push
adcb
inc
inc
es
daa
inc
dec
shlb
scas
out
data16
sub
sbb
mov
push
push
add
shlb
xchg
mov
in
or
mov
out
push
lret
xlat
lret
popa
mov
mov
fcomip
cmp
sbb
fsubl
sahf
pop
inc
shr
outsl
adc
xchg
sub
push
enter
repnz
mov
int3
fninit
shll
add
div
mov
sub
lret
inc
icebp
fwait
cltd
int
mov
inc
dec
jns
hlt
adc
inc
test
xor
icebp
mov
movsb
je
or
clc
hlt
xor
dec
sahf
lock
insl
adc
mov
or
inc
insl
loop
xchg
fisubl
sbb
scas
cmp
pop
stos
cmp
cmpsb
movsb
je
pushf
pop
push
add
sub
push
or
inc
jno
xchg
and
fcom
jl
add
push
es
xor
movsl
inc
cmp
repnz
mov
jl
enter
and
ljmp
movsl
ljmp
lods
enter
add
mov
lock
xchg
fisubl
push
push
or
or
insb
mov
inc
sbb
push
js
pusha
cld
fmul
jp
push
test
lock
cld
add
mov
lcall
fs
sbb
jno
xor
dec
push
or
mov
add
pop
movsb
ss
cmc
addl
fisttps
pushf
push
testl
repz
popa
dec
inc
fdivrs
lods
adc
cwtl
scas
rorl
repnz
push
das
sub
je
insb
add
sbb
sbb
cmp
pop
imul
popf
out
push
pop
insl
jo
pop
and
jg
addl
cmp
jo
push
in
xor
mov
push
clc
adc
xchg
aas
pop
cmpl
lret
aaa
andb
stos
cmp
mov
mov
cmp
shrl
js
push
add
cmpsb
xorl
into
mov
jbe
loopne
mov
push
mov
inc
lret
ljmp
rcr
addr16
mov
aad
sbbb
mov
mov
xchg
push
ds
divb
sub
sbb
push
dec
shll
sbb
push
inc
shrb
iret
jmp
lret
jg
jnp
imul
subb
pushf
dec
scas
dec
or
xchg
lret
add
cmc
jno
aaa
mov
outsl
sti
les
pop
mov
lahf
mov
fwait
bound
mov
xchg
mov
pop
bound
xchg
aaa
jle
or
jle
sub
inc
mov
dec
or
mov
xchg
fildll
mov
mov
xlat
ret
lods
arpl
jle
insl
shr
fcmovu
xchg
sub
jae
out
cmp
and
add
outsl
mov
inc
ljmp
xchg
mov
repz
dec
inc
mov
cli
adc
cwtl
inc
mov
fwait
dec
orl
aaa
shlb
sbb
mov
dec
mov
or
cld
jns
mov
movsb
lret
pushf
mov
cwtl
stc
dec
and
adc
mov
jo
fwait
rorb
cmc
jo
sub
rcrb
mov
jecxz
adc
sbb
shr
test
pop
dec
inc
loop
inc
jo
pop
mov
lock
lods
rol
and
mov
jmp
inc
mov
or
mov
push
jmp
ljmp
or
sbb
pop
sti
frstor
xlat
sub
mov
and
loope
xor
jle
mov
add
mov
xchg
adc
push
test
mov
jle
int
gs
inc
nop
xorl
out
insb
pop
xor
lret
push
mov
and
scas
jp
out
and
push
xchg
push
xor
out
mov
dec
fwait
jb
imul
cmpsb
sub
sbb
roll
jle
fisttpll
dec
push
sarb
test
push
mov
testb
cld
addr16
add
ficoml
cmp
fnstsw
loope
dec
arpl
pop
fcmovbe
rol
out
int
or
and
shlb
jmp
inc
ret
xor
ret
aam
xchg
repnz
push
test
xchg
fisttpl
cld
aad
ljmp
lcall
xchg
mov
lods
dec
mov
sub
call
es
mov
xor
popf
cmc
xchg
mov
xor
aas
enter
mov
test
push
bound
jg
movsl
insl
mov
sub
sub
mov
cltd
xor
dec
sbb
stos
or
inc
add
and
cs
mov
sbbl
cmpsb
movsl
mov
add
stc
imul
push
sbb
popf
mov
aad
mov
test
addb
dec
popf
mov
and
pop
add
lea
bound
cmc
inc
dec
jae
int
mov
icebp
lahf
pop
dec
sbb
pop
mov
mov
aam
dec
sub
cli
inc
outsl
mov
pop
les
jmp
int
push
xchg
pop
xchg
or
cltd
add
push
ds
and
lds
pushf
push
jp
and
sbb
push
push
jge
xor
fstl
movsb
ficoml
and
mov
shrb
cmp
repnz
rclb
rcrb
sub
pusha
or
sbb
pop
insb
xorl
sub
in
jnp
mov
push
lret
mov
xchg
mov
imull
inc
push
in
sbb
add
in
aaa
mov
xor
inc
mov
or
sub
mov
or
pop
fnstenv
jo
mov
sub
or
arpl
xor
sbb
and
push
jb
jmp
je
ret
or
movsl
divb
lret
in
push
cmp
lods
pop
sub
sbb
stos
data16
js
sahf
sub
push
or
inc
stc
xchg
aaa
in
lds
jb
pushf
cmpb
push
in
mov
shrb
add
push
cli
mov
inc
inc
sahf
les
neg
ljmp
pop
xlat
es
mov
cmp
shlb
push
daa
push
jp
sti
roll
inc
outsl
xor
add
pusha
sub
push
loop
les
dec
xor
popa
ds
push
movsl
jp
or
loope
and
lods
xchg
xor
cmp
mov
add
lods
jbe
mov
push
xchg
pop
popa
sub
mov
ret
in
sub
cmp
mov
out
and
mov
pop
push
lea
fists
mov
cmpsl
jbe
mov
pop
hlt
clc
cwtl
mov
push
nop
fimull
mov
lock
push
sbb
inc
or
jbe
scas
xchg
fcoms
xor
fiadds
xchg
mov
adc
negl
or
push
mov
in
mov
and
mov
mov
cs
xor
dec
cmp
lahf
out
out
mov
and
xor
mov
pop
sahf
mov
int
adc
ds
les
jl
inc
pop
movsl
mov
test
sbb
dec
and
or
test
sub
sbb
add
aaa
jecxz
bound
mov
add
dec
lea
lock
xchg
push
jecxz
and
ljmp
xchg
daa
insl
xchg
movsb
and
xor
jge
cmp
adc
sahf
imul
add
mov
ds
fwait
je
dec
push
int3
cltd
dec
jp
aas
loopne
sub
mov
add
incb
mov
inc
push
insb
je
mov
retw
mov
and
fwait
stos
pop
jae
fwait
scas
xchg
pushf
outsb
push
hlt
sub
adc
movl
ret
or
jmp
inc
xor
aas
push
scas
sti
stc
xchg
mov
jge
lahf
scas
icebp
dec
fistps
adc
xchg
lods
pop
add
inc
xchg
mov
test
ret
sub
and
insl
adc
push
dec
and
adc
add
pop
cli
and
pusha
ret
sbb
mul
xchg
out
in
rol
mov
xchg
cmpsb
xor
hlt
xchg
dec
xlat
cli
sub
push
fs
outsl
fbstp
imul
les
mov
rclb
mov
dec
xchg
dec
test
or
das
das
sbb
mov
sarl
fcmovnb
dec
xchg
xorl
cmp
mov
popa
out
push
rol
ljmp
out
repnz
add
pop
addr16
fisubl
inc
push
push
out
mov
xor
idivb
xchg
loopne
pop
mov
mov
lahf
adc
xchg
sub
xor
or
inc
lret
sbb
notl
das
mov
pop
and
insb
add
dec
cmp
sarl
mov
iret
ret
dec
data16
mov
scas
aaa
out
testb
sub
push
cmpsl
leave
jae
mov
jb
aam
scas
adc
cmp
repnz
xor
movsl
jle
enter
std
sub
jne
insl
iret
mov
push
sbb
inc
cmpsl
in
and
or
xor
adcl
xor
dec
add
cmp
inc
pushf
imul
jg
cmp
sub
xor
pop
jns
mov
out
popa
in
or
lds
jno
add
mov
mov
cmp
pop
xchg
inc
pop
pop
and
xchg
sti
ja
mov
shll
bound
orb
inc
outsb
pop
mov
pop
xor
xchg
lods
fimuls
cmp
mov
cmc
mov
leave
arpl
sbb
push
mov
popa
dec
jge
shlb
pop
adc
dec
cmp
mov
cmp
pop
out
jecxz
and
and
dec
sbb
mov
xchg
sbb
loope
mov
xor
push
or
lret
pop
push
inc
mov
mov
daa
sbb
mov
push
mov
pop
add
push
sub
mov
loop
inc
jb
sbb
sub
hlt
repnz
or
das
push
sub
std
aaa
repz
pop
loopne
popa
test
je
rolb
imul
pop
adc
sbb
call
add
and
movsl
inc
fsubrs
sub
test
subl
push
hlt
cmp
mov
mov
mov
ret
xor
lcall
dec
bound
or
fldl
mov
je
popa
out
xchg
inc
inc
mov
outsl
jmp
mov
mov
cld
std
add
cmc
dec
mov
inc
ds
xchg
push
jle
or
mov
dec
mov
dec
insb
in
sbb
js
jbe
pop
int3
mov
out
and
jb
cmp
mov
xchg
repnz
or
out
cmp
cld
xor
mov
xchg
scas
pop
sbb
test
movsl
dec
aas
jae
mov
cmp
mov
dec
jne
pushf
ja
mov
outsl
dec
xor
lock
test
mov
xor
push
sbb
sub
jge
jne
mov
ret
int
movsl
lds
and
cmpsb
jae
and
test
lock
mov
flds
dec
and
xchg
jae
cmp
fisttps
and
mov
inc
dec
mov
testl
popa
jb
stc
sub
mov
jle
mov
testl
cmp
shrl
xorb
xlat
test
std
xor
pop
loopne
mov
sbb
cltd
enter
dec
imul
or
xchg
inc
xchg
inc
jno
fs
mov
cmpsl
les
loop
xchg
and
cmpb
inc
lcall
dec
imul
stos
push
ja
add
mov
adc
iret
sbb
aas
dec
pop
push
imull
shl
dec
inc
out
mov
lds
sub
mov
add
sbb
cmp
xor
xor
lods
sti
mov
or
cmc
mov
push
iret
in
insl
comiss
jl
sahf
sub
jecxz
in
sahf
pop
cmc
sub
sbb
sub
daa
movsb
shll
imul
mov
cmp
and
pop
int
loopne
or
mov
push
sbb
cmp
sbb
ds
xchg
fdivl
fnsave
fisttpll
jb
pop
mov
clc
repnz
inc
ljmp
sub
xchg
or
push
rolb
jmp
cmp
out
aad
mov
mov
pop
in
out
and
lret
xor
rcll
push
jle
xchg
and
js
push
outsb
push
ljmp
cmp
mov
dec
ja
xchg
leave
out
jno
lods
jge,pn
mov
sbb
push
cmp
hlt
push
mov
loop
lds
mov
sub
adc
xchg
adc
subb
jae
xor
pop
arpl
add
jo
shl
std
or
and
inc
jge
pop
repnz
ss
push
jbe
sbb
mov
call
pop
xlat
les
mov
scas
push
ror
mov
ja
mov
outsl
jne
call
fidivs
adc
add
push
jp
dec
mov
stos
or
fmulp
add
scas
push
mov
jo
ret
mov
xchg
mov
cltd
lahf
xorl
call
into
ja
cli
mov
in
push
add
sub
push
int3
into
in
inc
iret
push
ss
clc
orb
sbb
cs
mov
aas
pop
data16
jno
and
adc
add
ret
pop
xchg
jne
stos
push
ja
shrb
mov
ficomps
repnz
out
repnz
xor
imul
imul
test
mov
idiv
add
sub
fs
fcomp
arpl
arpl
and
cmc
sti
rcr
cs
sub
loopne
mov
cltd
pop
in
ljmp
and
test
push
add
push
xlat
bound
jle
outsb
test
test
fs
cmpsl
fsubrl
dec
popa
fldl
or
mov
cmp
pop
fildll
mov
fisubl
add
sbb
sub
jae
pop
mov
mov
adc
jo
test
sti
ljmp
loope
mov
sbb
xchg
cmp
push
add
fs
test
pop
out
push
fwait
fs
fiaddl
ja
jg
rorl
out
dec
add
shrb
adc
fadds
jl
cmp
jns
out
adc
cs
imul
in
and
test
xor
gs
cs
add
add
fildll
push
or
or
in
adc
or
inc
push
int3
lock
jb
push
jns
mov
jmp
push
inc
test
sub
aad
int3
xchg
add
test
scas
and
leave
adc
int3
mov
filds
pushf
cmp
jbe
stos
mov
push
cmp
out
add
icebp
repz
pop
xor
jne
sub
pop
aad
sbb
adc
aaa
aad
movsl
test
fistl
outsl
rcl
add
push
adc
pop
mov
imul
cltd
stos
stos
jp
mov
xchg
inc
mov
ss
pop
sti
shl
dec
pop
sbbl
inc
test
inc
int3
out
mov
pop
mov
fnstenv
lods
or
mov
scas
adc
and
push
mov
or
je
jbe
mov
mov
jne
or
loope
cwtl
repz
icebp
sarl
in
inc
cmp
pop
or
push
int
pop
push
pop
mov
push
out
imul
and
xchg
outsl
clc
add
xlat
push
pop
out
lock
shr
sub
add
jnp
loop
mov
into
xor
flds
jb
xor
fcompl
or
cmpsl
aas
jg
cltd
add
lcall
pop
pop
mov
fdivl
sahf
lock
fiaddl
aad
pop
mov
and
adc
insb
push
mov
icebp
daa
mov
xchg
jmp
insl
cmc
push
sub
js
lret
cwtl
and
movsl
add
or
out
fdivr
dec
int3
jg
mov
push
and
ret
mov
mov
sbb
jg
unpckhps
jno
imul
adc
clc
lds
bound
loopne
cltd
lret
testl
pop
clc
test
or
loope
sub
mov
inc
iret
aad
repz
xchg
or
add
call
adc
movb
mov
clc
pop
enter
xchg
mov
aaa
sbb
incl
mov
push
mov
cltd
rorl
pop
add
dec
shr
fistl
in
sub
clc
add
mov
and
inc
in
dec
lahf
call
xchg
fwait
sub
mov
mov
clc
mov
lock
js
cld
dec
push
xchg
cmp
int
movsl
cwtl
add
dec
in
xchg
jne
xchg
ss
sub
test
bound
jge
sahf
mov
outsb
adc
jmp
fnstcw
movsb
mov
cmp
mov
inc
xor
outsb
fldenv
sbb
or
jmp
adc
dec
xchg
ss
xchg
or
in
jecxz
ss
mov
mov
sbb
cmp
mov
mov
inc
cltd
stc
add
jl
add
add
dec
pop
push
xor
stos
dec
sbb
outsb
in
lds
mov
mov
pop
sti
adc
xor
dec
xor
inc
mov
enter
les
mov
repz
js,pn
push
in
dec
sbb
pop
and
cmp
in
inc
jbe
inc
dec
cmpsl
ret
ja
test
sbb
rorb
das
adc
jecxz
xchg
jae
enter
fisubrs
jae
ss
out
rorb
cmp
pop
push
cmp
movb
push
sbb
out
adc
cs
ja
in
frstor
dec
popa
std
mov
and
sub
addr16
loopne
rolb
pop
out
in
sbb
dec
scas
test
lahf
jno
pop
or
and
popf
xor
xchg
outsl
sub
fsubl
xlat
pop
ret
mov
adcl
cmp
movsb
ja
mov
adc
fsubrs
fimull
inc
mov
icebp
push
xor
scas
outsb
insl
fstpt
ss
repz
sahf
mov
sbb
dec
popf
xchg
mov
and
ljmp
cld
arpl
xor
repz
in
jo
inc
sub
mov
enter
lock
sbb
and
pop
je
xchg
xchg
fwait
nop
sub
js
add
xchg
pop
push
icebp
sarb
dec
cmp
push
leave
push
add
jge
and
mov
fdivl
inc
inc
mov
push
lret
ss
mov
push
scas
mov
js
jnp
adc
loop
push
push
and
add
cmp
and
scas
imul
negl
in
dec
mov
mov
shrb
fsubrl
push
test
movsb
ret
xchg
pop
cli
daa
push
jns
aad
testb
das
xchg
insb
in
scas
push
loope
mov
or
daa
and
inc
sub
xchg
sahf
push
adc
xchg
outsb
pushf
fsubs
add
sbb
mov
add
inc
xchg
dec
and
dec
jl
dec
xor
shrl
adc
out
inc
add
xorb
popa
mov
xchg
sarl
fstps
stc
mov
add
sub
mov
decb
imul
or
mov
pop
shrl
adc
xchg
std
mov
imul
sub
mov
or
mov
pop
jg
mov
icebp
pop
sbb
out
jo
fstpt
adc
stos
popa
jo
xorl
mov
dec
call
pushf
ss
mov
vcmpsd
mov
mov
in
pop
int
push
popa
mov
and
sbb
add
les
adc
fldcw
jb
fcmovnu
sub
inc
and
rclb
test
push
or
fbstp
es
mov
jge
jbe
idivl
cmp
lahf
out
pop
insb
fwait
andl
std
cli
and
mov
xor
cmpsl
cmp
push
mov
cmpsl
push
gs
mov
mov
shlb
std
std
or
stos
fwait
mov
cmp
push
push
or
xor
in
mov
xor
js
mov
jbe
xlat
cltd
pushf
fisttpl
mov
rclb
nop
bound
or
cmpsb
cld
xchg
or
gs
sub
lods
addb
roll
jp
jnp
xchg
movsl
xchg
fadds
inc
test
std
mov
inc
repnz
mov
and
pop
and
loope
daa
mov
fsubr
xchg
cmp
daa
sbb
push
iret
std
push
mov
outsl
popf
adc
pop
xchg
in
ds
pop
push
sbb
ljmp
pushf
cmp
aam
mov
fsubrl
push
dec
fsubrs
adc
mov
hlt
das
repz
rorb
sub
xor
push
cmpsb
mov
clc
in
cmp
loope
xchg
push
mov
mov
hlt
xchg
test
jge
les
push
inc
jb
push
xor
loope
jo
fcompl
scas
jae
mov
repnz
cmp
cmp
leave
lea
xor
fs
lahf
mov
cmpsl
mull
pop
stos
sti
inc
pop
jmp
movsl
add
push
aam
and
or
push
xor
inc
cmp
push
jne
notb
sbb
push
jae
mov
adc
jno
cli
stos
mov
or
ret
inc
and
dec
mov
inc
mov
mov
decl
mov
ret
movsb
mov
bnd
lds
pop
out
out
sbb
out
jne
dec
cmc
aam
or
pop
inc
ret
mov
and
mov
jl
sbb
xchg
xchg
jae
adc
insl
loope
imulb
jbe
dec
int3
movsb
loop
loope
into
mov
aad
mov
fdivrl
push
lret
xchg
pop
pop
aas
fs
lea
and
scas
push
push
cmpsb
scas
or
cmc
outsl
adc
sbb
lea
imul
xchg
arpl
test
sub
outsl
add
dec
mov
push
adc
mov
mov
cmp
push
and
xchg
lahf
dec
cwtl
dec
test
idivl
mov
daa
arpl
cmp
sti
push
repnz
push
and
pop
mov
fsubrl
addr16
popf
loopne
mov
and
sbb
sbb
ss
pop
into
arpl
push
nop
or
fistps
mov
pop
push
xor
int3
or
cmpsl
add
addr16
movsl
scas
jno
test
test
adc
xor
ljmp
dec
jp
loopne
or
icebp
mov
mov
and
inc
data16
leave
mov
leave
lret
adc
cmp
stos
movsb
mov
test
stos
repz
cmp
and
or
and
mov
icebp
aaa
sbb
mov
mov
loopne
loopne
ror
xor
pop
jge
stos
lock
sub
add
or
out
dec
lods
popa
pusha
mov
ds
mov
ds
xor
inc
or
das
sbb
in
dec
or
cmpsb
push
aam
adc
xchg
cltd
cs
negl
jno
pop
std
push
ss
icebp
adc
dec
scas
add
sub
sbb
adc
and
not
and
not
cmp
add
push
in
std
push
je
cmp
jecxz
add
adc
dec
adc
inc
insb
pusha
dec
add
pop
out
stos
js
sbb
xchg
scas
and
jae
sub
rol
pop
sbb
xor
sub
xor
mov
pop
push
mov
jno
xor
js
outsl
jmp
pop
and
or
into
jp
stc
inc
hlt
aam
or
jbe
sbb
jno
iret
inc
or
mov
decl
add
adc
push
call
stos
xor
lea
ja
inc
test
into
jl
cmpsl
xchg
ss
push
or
lret
xor
cwtl
movsl
movsl
and
bound
lea
or
jbe
adc
inc
mov
stc
xchg
stc
imul
mov
in
sbb
mov
fmuls
add
test
sti
lcall
mov
repz
daa
xchg
bswap
push
movsl
lods
or
xor
xor
mov
cmpsl
pop
sbb
outsl
or
stos
out
push
dec
add
pop
ret
sub
ret
out
xor
icebp
cmp
push
add
sub
sbb
cld
shl
dec
jge
fsubs
movsb
test
in
dec
testb
pop
imull
or
aam
mov
and
or
xchg
aam
mov
sub
shlb
fidivrs
rcl
fcomps
push
subl
xlat
dec
wrmsr
and
push
test
adc
mov
inc
push
movsb
pushf
jo
adc
ja
cmc
shl
adc
stos
push
fiadds
aam
mov
inc
pop
inc
fmul
lahf
hlt
icebp
mov
adc
sbb
inc
pop
sub
or
push
testb
std
aas
mov
je
adc
in
jbe
push
imul
orb
sbb
pop
cmovl
outsb
mov
cmp
out
mov
fidivl
scas
add
mov
inc
or
test
mov
adc
inc
lods
popa
jecxz
or
lods
and
lahf
mov
fistl
sub
dec
popa
jle
sbb
xor
xchg
push
push
int
fistpl
push
fimuls
inc
push
cmp
mov
mov
inc
into
jge
ja
cld
popf
loopne
in
sbb
pop
mov
adc
jae
add
mov
movsb
jne
pusha
movsl
aad
inc
mov
mov
aaa
sbb
sbb
adc
mov
inc
xchg
shlb
in
inc
lcall
call
push
mov
mov
int
sub
addr16
fldenv
sub
mov
stos
adc
mov
ficompl
push
jg
ss
ljmp
pop
dec
loope
mov
xchg
pushf
jp
leave
in
mov
push
cli
cmp
adc
or
xor
imul
and
stc
sub
pop
test
mov
push
pusha
push
insl
addr16
js
loope
add
aam
inc
iret
mov
movsb
nop
xchg
in
clc
xchg
ljmp
fwait
sub
cmovns
cli
sti
fwait
stos
push
xchg
divl
cltd
idiv
shlb
and
dec
stc
pop
mov
push
int3
arpl
lds
lcall
push
pop
lock
pusha
mov
fists
inc
xchg
mov
aam
mov
xchg
pop
cmc
push
add
movsb
push
je
cwtl
adc
or
mov
dec
cwtl
xchg
test
out
adc
inc
loopne
andl
pop
xor
mov
sub
sarb
mov
mov
test
sub
xor
lds
bound
call
jbe
inc
mov
add
xchg
mov
mov
stos
fidivl
dec
sub
dec
pusha
pop
mov
push
pusha
adc
inc
dec
and
xor
int3
cmpsb
cmp
adc
imul
add
jno
adc
imul
pop
lods
adcb
mov
sbb
in
cmpsb
pop
sarb
movsb
jp
mov
jae
jp
bound
fidivl
enter
xchg
lret
es
sbb
fcompl
fwait
test
xchg
pop
add
subl
dec
movsl
sbbl
sbb
sub
adc
pop
pop
ja
or
pushf
data16
lea
lret
ret
xchg
scas
dec
sbb
shrb
insb
cmpsl
out
mov
sbb
jl
sbb
sarb
aaa
mov
mov
lret
xchg
ds
add
mov
fldenv
test
xchg
jae
pusha
and
int
daa
jae
cmpsb
rol
jg
into
rol
shrl
pop
and
addr16
ret
movsb
push
add
out
fmulp
adc
pop
or
xchg
dec
negl
push
cmp
in
mov
or
cmp
popa
push
das
xchg
das
addb
icebp
adcl
add
or
pop
pop
and
repnz
hlt
adc
and
or
jne
lcall
mov
cli
add
lock
xor
test
in
imul
xlat
test
jns
pop
sti
subl
adc
xchg
mov
xor
mov
xor
xchg
leave
pop
test
popa
xchg
jge
rcll
xchg
sbb
pop
pop
sub
popf
dec
pop
stos
out
inc
imul
popf
insl
nop
stc
fucomip
inc
repz
dec
push
or
ds
sbb
or
out
pushf
lods
xor
lock
filds
mov
scas
sub
jmp
aam
mov
mov
out
add
fdivrl
pop
cmpsl
rcl
jg
lds
stos
insb
pop
xchg
je
cwtl
cltd
dec
xor
test
and
out
movsl
pusha
cmp
popf
insb
mov
pop
add
out
sbb
xor
int
loop
es
or
push
addr16
mov
cmp
cli
mov
sbb
sti
mov
sub
sbb
outsl
dec
movnti
movsb
inc
loopne
push
dec
mov
mov
outsl
imul
jbe
push
iret
in
outsb
and
sbb
imul
inc
push
jge
data16
outsb
fucomip
mov
je
sbb
sub
xorb
push
xchg
ds
or
jno
mov
fstps
enter
cli
sbb
jle
out
jle
popf
roll
jmp
js
mov
cld
dec
jle
sub
inc
sub
add
cmp
jg
adc
pop
flds
and
pop
xor
lock
adc
divb
cmc
or
lods
ds
inc
pop
insb
loop
leave
aaa
or
sbb
and
mov
dec
clc
jg
scas
sub
push
xchg
clc
cs
jecxz
je
bound
xchg
insl
test
addr16
leave
or
call
fs
mov
bswap
imul
test
add
jge
push
dec
inc
cmp
ficompl
mov
mov
push
enter
lahf
aaa
and
in
jmp
xchg
fistpl
xchg
imul
clc
xchg
outsl
outsl
mov
add
pop
mov
mov
sub
cwtl
shrl
movsl
outsl
inc
into
lret
sub
adc
mov
into
xchg
dec
pop
sbb
pop
into
jg
pop
call
push
dec
sbb
jne
push
xchg
pop
ss
xchg
push
fstpl
mov
push
pop
arpl
sub
add
or
or
sub
jb
and
ja
jl
mov
es
inc
cs
in
je
push
cmovae
mov
jmp
dec
cmpl
lock
fildll
mov
adc
cmpsb
stc
sbb
jne
xchg
xchg
icebp
pop
mov
mov
xchg
enter
data16
cmp
cmp
in
xor
ss
mov
fmul
sub
and
lret
pop
fsubl
inc
cs
jne
pop
xchg
or
adc
shrl
jo
cmp
loopne
fbstp
dec
insl
in
cmp
mov
sbb
xchg
mov
dec
ss
and
jbe
mov
or
jo
lret
dec
xor
frstor
cmp
ja
add
add
xlat
mov
fidivl
lea
xor
out
aam
adc
xor
pop
and
push
shll
mov
or
xor
into
clc
or
mov
dec
jge
popf
cmp
cmp
fs
in
inc
mov
adc
insb
rep
jmp
dec
jbe
mov
and
push
lock
idivb
rcll
in
je
ljmp
lea
xchg
das
adc
jle
sahf
or
test
into
xchg
loope
mov
in
fidivl
cmpl
stos
lahf
popf
mov
jle
xchg
or
sahf
adc
xchg
jne
addr16
lcall
cli
sub
dec
test
sub
dec
jo
push
test
push
xchg
push
pop
sub
adc
xchg
rcr
rclb
rcr
sahf
jo
xchg
in
mov
jg
fiaddl
imul
or
cs
jbe
pop
sub
daa
jg
adc
add
nop
xchg
std
xchg
xor
subl
pop
pop
fldt
cmp
jne
aad
daa
pop
ja
xlat
pushf
sub
push
test
sbb
addr16
test
xor
mov
inc
xor
call
hlt
mov
adc
je
adc
push
dec
or
je
add
ja
inc
test
lods
shrb
leave
outsb
or
sar
sti
xchg
cltd
xchg
into
cmpsl
hlt
dec
repz
jecxz
xor
call
scas
push
fwait
push
in
xbegin
inc
cmp
jl
cmpsb
gs
lahf
mov
cmpsb
xor
jle
mov
mov
cwtl
notb
jge
cld
xlat
mov
leave
out
jno
sub
push
scas
inc
cmp
test
scas
mov
mov
lret
mov
in
imul
inc
aaa
or
add
fisttpl
rolb
and
sub
push
mov
je
cmp
bound
pop
or
ret
fs
ds
test
arpl
aaa
jmp
jb
jns
lods
divl
push
sbb
cld
dec
in
loop
enter
add
sub
notb
jno
and
push
cmp
fldcw
xchg
jne
cli
sub
xchg
outsb
ljmp
ljmp
fcoms
mov
stos
and
xchg
pop
add
leave
xor
shll
lcall
jb
cltd
dec
adc
mov
inc
and
fnstcw
jmp
jns
ret
fldcw
mov
adc
mov
aam
inc
lock
inc
loope
sub
jno
xor
stos
push
add
pop
adc
jl
in
cmpsb
sarb
les
shrb
pop
scas
or
xchg
jg
dec
xchg
xchg
test
cld
mull
cmp
and
pop
pop
scas
inc
mov
mov
mov
in
jmp
adc
cmp
mov
jb
cmpl
jecxz
lea
das
mov
ret
sahf
in
jmp
je
lods
stc
shll
aam
mov
push
adc
jnp
xchg
lcall
and
ss
adc
fists
push
inc
int3
jne
lock
mov
or
push
rcl
xchg
decb
inc
jle
fs
adc
pop
movsb
jmp
test
lods
mov
pop
cs
dec
lea
xlat
insb
cli
icebp
mov
sub
pusha
gs
in
jne
fwait
xchg
pop
ds
outsb
pop
fstl
icebp
fadds
inc
cwtl
lahf
sub
stos
mov
sbb
je
pop
or
out
mov
popf
cmpsl
push
push
insl
mov
imul
mov
sbb
inc
mov
dec
sbb
push
xor
xchg
out
dec
pop
ja
xchg
repz
gs
outsl
sbb
add
shrb
daa
mov
cmp
jne
ficoml
lea
loopne
jns
push
xchg
add
cmp
in
push
pop
mov
add
bnd
repnz
fstps
jo
xorl
sbb
jmp
cmovno
aad
ss
jg
insl
or
push
inc
pop
xlat
int3
mull
sbb
orl
mov
stos
scas
jle
lret
mov
ja
xor
mov
xchg
nop
shlb
ljmp
mov
out
cmc
sar
adc
icebp
xchg
in
pop
outsl
shll
cltd
stos
addr16
xchg
jae
lcall
out
ss
adc
aaa
fwait
and
mov
dec
and
dec
pop
lea
jl
xchg
gs
jnp
das
call
scas
sar
jge
or
jno
insb
call
faddp
xchg
pop
fiaddl
sbb
jbe
push
test
out
clc
out
aaa
cmpsb
pop
sbb
pop
das
pusha
int
jge
ja
add
imul
cmp
cltd
push
popa
out
lods
push
and
nop
sbb
add
add
pop
add
or
inc
push
jmp
jbe
pop
sub
ss
dec
dec
mov
bound
scas
and
pop
loop
jle
dec
cmp
or
push
data16
sub
fnstenv
push
stos
lret
mov
and
addb
ss
pop
push
test
data16
add
adc
enter
inc
stc
push
in
mov
inc
jbe
sbb
in
fdivrs
xchg
sub
or
sbb
hlt
or
xorl
dec
dec
adcb
dec
test
adc
dec
jo
imul
xor
add
add
jne
imul
aad
and
pop
jmp
out
std
ret
dec
mov
pop
enter
push
mov
mov
les
movsl
cmp
and
or
pop
xlat
mov
pusha
inc
dec
les
mov
push
xchg
sub
jne
or
aad
pop
lret
arpl
lahf
jne
and
adc
loop
ret
movsb
pop
cmpsb
add
idivb
adc
movb
sbb
jno
sub
mov
iret
sti
gs
out
push
aas
sub
ja
lods
push
clc
and
in
xchg
cmp
xchg
ja
int3
or
pop
dec
stos
insb
mov
add
mov
cli
inc
xor
stos
jne
jmp
sbb
lcall
push
mov
mov
mov
adc
stos
mov
and
sbb
sub
orb
sbb
or
and
mov
xlat
fs
inc
mov
adc
jo
adc
je
cmp
and
rorl
jg
mov
gs
es
je
nop
jl
divl
xchg
ljmp
jp
mov
jl
sbb
push
cs
inc
lods
mov
int
xchg
cmpsl
movsl
jl
dec
cmp
adc
mov
movsl
jae
gs
iret
inc
scas
ja
insl
out
outsl
pop
push
adc
es
outsl
pusha
ss
sub
insb
mov
cmp
lds
imul
xchg
ficomps
lea
pop
aam
mov
cmp
pop
insb
jg
rorl
or
subb
out
data16
out
sbb
cmpsl
fldl
pusha
imul
sbb
xlat
xor
shrb
push
mov
mov
pushf
ljmp
idivl
dec
and
je
jo
xor
mov
das
outsl
nop
test
mov
mov
add
and
les
cmp
mov
mov
sbb
sbbb
dec
adc
addr16
outsb
push
lods
xlat
cmp
sub
adc
dec
mov
jl
rclb
mov
mov
cmc
addr16
lret
mov
out
mov
mov
pop
and
push
lea
scas
mov
clc
push
testb
jge
cli
jae
imul
data16
pop
push
rorl
pop
cld
sub
xor
shlb
addb
xchg
jg
insl
ret
xor
sub
repz
sub
stc
xchg
sti
loope
mov
ja
out
call
push
loope
mov
call
jbe
dec
aad
jle
dec
loop
push
lods
rorl
ds
mov
xchg
adc
clc
xor
jecxz
orb
je
scas
cs
ds
jl
and
es
das
mov
aad
mov
popa
mov
jp
and
out
sbb
insl
sub
and
outsb
xchg
mov
mov
scas
imul
gs
xchg
inc
outsl
ret
jecxz
pop
cmc
repnz
arpl
push
data16
cmp
dec
in
popa
pop
sbb
test
les
xor
movsb
and
inc
pop
dec
andb
jno
xor
jecxz
or
into
mov
xor
push
popa
pop
fucomip
sub
mov
bswap
pop
repnz
sub
insb
aas
and
nop
xlat
mov
shlb
dec
cmpsb
pop
xor
pop
fdivrl
les
repnz
sbb
jae
stc
mov
in
jle
enter
pop
push
mov
jl
out
push
jmp
hlt
mov
sbb
fcmovb
repz
fcomip
sti
pop
xchg
insb
ljmp
cmc
aad
sub
inc
cmpsl
sti
cld
repz
dec
or
mov
or
js
jbe
push
xor
repnz
test
lret
sbbb
sub
outsb
push
pop
rcll
rclb
mov
cmp
cmp
iret
cli
add
pusha
jns
sub
pop
pushf
add
repz
fidivs
inc
push
cmp
pusha
nop
jb
mov
jl
movsb
dec
std
in
dec
fs
sahf
and
sub
xor
ja
pusha
or
pop
fists
inc
clc
jg
stos
mov
ljmp
adcl
lea
or
mov
xchg
scas
int
fistpl
or
mov
js
mov
pusha
jg
xor
incb
cltd
cmp
fmul
roll
pusha
aaa
jle
push
jnp
out
in
xor
test
sahf
dec
jo
shl
xlat
mov
paddd
jmp
dec
adc
dec
push
lahf
xor
cmp
sbb
mov
nop
std
mov
in
jmp
repz
inc
add
jne
dec
es
mov
dec
xchg
pushf
cld
mov
mov
or
jle
imul
ja
loop
lret
loope
xor
xlat
test
push
mov
popf
push
fistpll
fimuls
mov
enter
mov
pop
dec
and
add
aad
xchg
xlat
mov
cmp
inc
sbb
sahf
jb
int
rcrb
jo
sahf
add
mov
shl
and
cld
into
cmpsb
jae
xchg
dec
and
xlat
push
pop
mov
inc
xchg
dec
ljmp
rorl
and
pushf
insl
pushf
pop
xor
stos
ret
mov
adc
bound
gs
sub
pusha
or
or
stos
and
or
loope
inc
gs
fmulp
adc
pushf
aaa
mov
mov
adc
popa
aad
push
xor
dec
xchg
addr16
fadd
pusha
mov
mov
loop
ss
out
add
insl
outsb
popf
sub
call
or
push
jne
divb
mov
mov
shrb
in
mov
inc
mov
les
inc
loope
jbe
jp
dec
daa
push
and
mov
adc
mov
lds
cmpsl
and
push
and
fbstp
mov
mov
jbe
aam
inc
dec
sbb
test
les
mov
mov
add
neg
mov
xor
mov
stos
cmp
into
xor
nop
in
out
stos
xchg
mov
xchg
imul
cwtl
mov
mov
jne
fisttpll
and
lret
adc
pusha
cmpsb
dec
xor
shll
sub
and
adc
outsl
scas
fdivr
cwtl
adc
mov
rorl
jmp
jge
js
into
push
lock
xor
out
xchg
shrb
movsb
pop
cmp
adc
mov
test
iret
mov
shl
xchg
inc
and
shlb
lret
pop
imul
or
clc
add
test
pop
cmc
aam
adc
dec
fbld
lcall
xchg
inc
pop
ss
sub
movntps
push
mov
bound
and
cli
xchg
xchg
xchg
inc
add
push
call
cmp
mov
out
hlt
mov
fwait
sub
mov
mov
sub
jecxz
pop
push
cli
sbb
cmp
pop
pop
sub
xchg
xlat
xor
or
cmp
jbe
aad
cmp
inc
cmp
daa
cltd
push
xchg
idivl
mov
mov
or
sub
mov
lcall
jp
das
jno
dec
fs
arpl
inc
imulb
xchg
push
nop
dec
push
sub
jl
jl
xor
add
jb
test
insl
mov
pop
popa
js
les
jg
mov
mov
and
xchg
popf
icebp
or
add
xor
sbb
inc
lahf
push
test
dec
adc
in
mov
inc
clc
pushf
mov
adc
imul
xor
insb
sti
sbb
lods
or
pop
mov
adc
and
ljmp
mov
ret
call
mov
mov
out
or
daa
movsl
in
xchg
adc
popf
pop
jg
xchg
mov
call
mov
aas
cmpsb
jle
pop
mov
hlt
stc
mov
sub
jno
pop
sbb
cmp
push
mov
dec
add
fs
lahf
cld
das
call
add
cmpsl
mov
mov
or
jp
imul
scas
rcrb
hlt
push
mov
cmpsb
andl
inc
pop
stc
xchg
jge
insb
sub
adc
insb
fsubs
mov
push
aam
push
int3
pop
in
push
jg
push
not
xchg
in
cmpsl
je
xchg
cmp
cmp
xchg
lds
daa
push
pop
cmp
dec
in
in
andl
push
mov
adcl
out
push
jle
mov
mov
cmp
pop
aam
arpl
mov
fidivs
ror
add
xor
imul
daa
mov
ja
stos
xor
push
insb
push
or
ja
jo
pop
out
fdivrl
fisubs
lock
lods
lret
gs
lds
test
movsb
dec
jae
fs
adc
fucomip
ss
xchg
adc
repz
lcall
aad
cmp
lods
xor
movsb
das
jns
mov
shll
sti
adc
shr
pop
shll
xchg
into
mov
lcall
ret
adc
xor
jbe
add
mov
cltd
cmpb
dec
outsb
xor
fucom
hlt
scas
xor
sub
cltd
fbstp
mov
test
bound
jl
test
jg
add
adcl
and
xor
mov
jge
sub
sar
push
push
lods
in
data16
test
sbb
out
sbb
insb
push
mov
pop
cltd
push
fisttpll
imulb
and
dec
push
fsubl
faddl
jns
fucomi
add
inc
js
sbb
in
add
push
outsb
jmp
mov
inc
into
daa
lcall
xor
inc
or
cs
into
in
inc
aad
mov
int3
adc
jne
or
cmp
aaa
hlt
and
cmp
xchg
jle
fwait
push
jns
fdivrs
dec
sti
add
cmpsb
outsl
popa
or
inc
sahf
jmp
ret
xor
push
subl
lret
dec
loop
out
ljmp
jno
add
push
gs
cli
test
negb
call
jmp
inc
add
dec
xor
in
lcall
pop
gs
or
mov
cli
clc
lock
fstp
add
and
mov
dec
or
push
inc
jae
movsl
mov
int3
arpl
std
or
arpl
mov
lock
adcb
stc
icebp
popa
or
fidivrs
pop
es
scas
sub
iret
cmc
xor
pop
fbld
fdivr
mov
jne
call
mov
xor
jp
vphaddwd
movsl
xor
cmp
adc
push
bound
into
out
ret
aad
lods
mov
mov
pusha
pusha
sub
add
xchg
out
jg
cmc
push
bound
mov
rcrl
mov
cli
les
mov
inc
xchg
push
arpl
shrl
enter
movb
mov
push
cltd
fdivs
ja
adc
call
shrl
pop
or
loop
in
fidivrl
inc
mov
xorl
lds
and
mov
rol
jp
fdiv
mov
test
jo
ret
jo
sub
and
sbb
xchg
dec
inc
xor
push
insb
lods
aam
dec
popa
adc
xlat
inc
out
xchg
mov
dec
xor
test
jns
shrb
push
inc
inc
gs
jg
push
addr16
sbb
or
out
inc
fsubrl
dec
cmp
leave
lret
xchg
xchg
or
mov
or
dec
push
movsb
cmpsl
push
xchg
mov
inc
bound
shr
aad
cmpsl
push
imul
mov
xchg
adc
dec
sbb
inc
ret
in
aam
enter
dec
cld
fimuls
pushf
xlat
sub
push
stos
test
dec
or
dec
out
fsubrl
xchg
ret
jnp
mov
mov
fsubrl
xor
or
mov
xchg
test
pop
addb
inc
dec
mov
cltd
fcmovu
cmc
stc
push
xchg
rcll
int
jmp
inc
out
mov
outsb
mov
mov
xor
das
cmp
loopne
mov
leave
xchg
pop
push
and
jns
sub
popf
lcall
aad
xchg
mov
inc
rolb
scas
loopne
push
jo
cmp
mov
jno
or
jae
insb
cmp
xor
dec
add
rorb
addr16
out
cli
lods
or
and
mov
push
mov
xor
sbb
sbb
or
dec
loop
and
pop
das
mov
in
push
fbstp
or
push
imul
in
fs
xchg
cmpsl
mov
daa
cmp
aad
pop
int3
push
jno
aas
aam
pop
mov
pop
mov
push
ja
out
jmp
push
push
xor
jnp
outsl
xorb
or
push
cmovl
adc
dec
jle
cld
or
lret
sbb
aam
leave
mov
hlt
outsl
jg
mov
jnp
jmp
std
mov
iret
cmp
mov
ds
lret
stc
das
or
fisubrl
pop
add
shlb
jle
adc
and
mov
lea
or
sbb
mov
dec
imul
sub
movsb
xchg
dec
or
sub
rcrb
jge
add
out
jne
xor
push
loope,pt
mov
or
dec
pushf
dec
dec
shrl
inc
xor
and
xor
dec
xor
adc
add
dec
call
lods
insb
jns
insl
movsb
add
inc
pop
xchg
loope
xlat
xchg
outsb
rolw
xchg
pop
jl
and
cmp
enter
aas
sarb
push
mov
or
inc
xor
test
push
add
jnp
cmpsl
ja
push
cmp
insl
ljmp
add
outsb
and
stc
ret
push
and
adc
mov
xor
and
scas
or
loope
adc
xlat
dec
pop
cmp
or
sub
out
dec
pop
scas
or
adc
outsl
xor
insl
jb
and
pop
push
lret
push
xorl
in
sbb
mov
imul
push
jp
pop
dec
inc
cmp
sub
mov
jmp
adc
in
sarb
sub
scas
lods
rorb
cltd
xor
sub
sarb
mov
add
push
mov
cmp
das
ds
nop
mov
cmpsl
pop
mov
jp
mov
fistps
sbb
in
out
add
xorb
xor
popf
std
xchg
adc
pop
stos
jecxz
insl
xchg
jbe
fildll
mov
fsubr
or
imul
inc
aaa
add
pushf
outsl
pop
dec
insb
mov
movsl
in
ret
add
ret
add
lahf
fucomp
mov
jg
sbb
sub
jle
pop
scas
fldl
push
mov
cwtl
mov
xchg
jno,pt
push
cmpsl
out
push
or
or
xchg
inc
rcll
and
fstps
jp
sbb
adc
adc
pop
clc
xor
inc
imul
adc
js
test
sub
lret
xlat
lea
xor
arpl
sbb
adc
mov
and
pop
inc
jb
sub
loop
lcall
xchg
or
sub
dec
push
ljmp
pop
filds
bound
push
fwait
rorb
into
cmovle
out
int3
xor
sbb
aam
inc
shr
mov
and
mov
sti
push
inc
sbbb
enter
inc
clc
aam
jge
mov
cs
xor
sub
popa
ret
ret
inc
popa
orl
cmp
ja
push
jp
mov
mov
pop
jecxz
sub
push
push
mov
stos
out
xchg
inc
mov
xchg
pop
xchg
leave
cmp
xor
sbb
daa
int
lss
push
jne
js
ljmp
insl
mov
scas
lds
push
pop
imul
call
mov
jae
stc
xchg
mov
out
mov
mov
popa
cltd
mov
imul
dec
and
sub
test
orb
test
mov
cmc
xchg
aam
das
lods
icebp
out
pop
repz
dec
xchg
sbb
outsb
frstpm(287
fbstp
int
adc
pop
adcb
jle
pop
imul
loope
shrl
test
sbb
push
add
push
in
lods
mov
ficomps
inc
filds
test
loope
incb
dec
cmp
std
lds
adc
mov
clc
pop
mov
out
xchg
js
popa
mov
ss
jb
pop
loope
xchg
mov
cmp
sub
cmp
jp
frstor
or
xchg
inc
adc
lods
jae
in
jae,pt
ror
jbe
je
jecxz
mov
and
fidivl
xchg
stos
add
stos
dec
in
mov
add
sub
xor
lret
dec
out
sbb
pop
outsb
push
inc
fiadds
xchg
mov
add
sub
mov
cmp
mov
int3
in
xorb
pop
jl
mov
test
lock
add
pop
add
and
sbb
js
lods
sti
std
rorl
test
xchg
lods
cwtl
ficompl
movsb
push
cmp
mov
stos
or
movsl
stos
cmpsl
pop
jno
push
add
popa
inc
mov
gs
int
push
sbb
xrelease
shrb
lods
fmuls
sbb
lcall
outsl
stos
push
dec
inc
loope
jb
dec
cmp
xor
mov
test
add
insl
mov
mov
out
movsl
jge
mov
testl
nop
test
adc
pop
jno
xor
cld
mov
cmp
das
mov
daa
and
clc
mov
jno
add
pop
popa
orl
add
lcall
add
add
mov
in
or
out
xorl
in
inc
inc
test
mov
and
sub
mov
cmp
inc
iret
adc
lods
pusha
cli
mov
cmpsb
push
into
das
push
dec
jmp
jp
push
jae
inc
pop
mov
pop
ss
or
mov
aad
ja
sbb
orb
scas
jge
jmp
jno
sbb
sbb
and
and
enter
jmp
pop
pop
stc
push
xchg
jne
push
shrb
test
lds
mov
push
fdivs
mov
cli
add
bound
fs
push
mov
mov
hlt
rcll
out
bnd
dec
xchg
xchg
jno
push
push
into
aad
pop
mov
or
jmp
inc
dec
adc
idivl
cli
xchg
xbegin
imul
aam
push
jp
call
mov
aas
cs
mov
movb
push
mov
add
aas
ljmp
movw
push
dec
jae
jl
nop
add
stos
pop
in
jle
mov
lock
or
lods
clc
mov
add
dec
adc
jae
jp
leave
scas
pop
enter
jp
cld
pop
cltd
repnz
imul
push
xchg
adc
adc
cwtl
xchg
incb
inc
ficomps
xchg
movb
jl
div
test
xlat
mov
outsb
dec
inc
inc
push
gs
leave
adc
int
lods
xlat
das
sbb
scas
clc
pop
jecxz
aaa
je
daa
xchg
outsb
xchg
and
xchg
fadd
fyl2x
jl
add
or
and
jne
mov
cmovp
jo
sub
out
sbb
mov
mov
loopne
das
mov
add
jmp
aad
movsl
dec
jne
js
xor
mov
inc
lahf
or
popa
cmpsl
push
sub
add
gs
std
xchg
test
push
jp
ljmp
ds
dec
xchg
clc
sahf
push
add
mov
inc
out
mov
pop
neg
int3
orb
fwait
loopne
push
push
xchg
adc
pop
in
insl
es
add
add
and
sub
mov
mov
pop
sbb
jmp
cmp
jb
mov
mov
roll
xlat
inc
adc
jb
cwtl
or
fisubrl
aas
cmp
adc
test
pop
jo
xchg
fs
jl
lahf
push
inc
lds
pop
adc
rcl
mov
push
inc
cmp
mov
xor
mov
lods
ljmp
cmp
js
sub
cmp
fs
sub
dec
pop
dec
sbb
shlb
shll
in
hlt
gs
lea
inc
mov
add
cltd
dec
popa
ljmp
cmp
cmp
dec
lea
movsb
frstor
jne
int3
popf
mov
jae
test
or
or
shrl
icebp
stc
adc
adc
mov
jb
pop
adcb
or
popf
push
cmc
xor
push
jmp
sbb
ja
or
lcall
jnp
mov
mov
inc
cmp
negb
dec
repz
sti
mov
mov
outsl
ja
inc
mov
pop
push
mov
or
pop
dec
sbb
sbb
pop
sbb
mov
jmp
pop
lcall
mov
imul
sub
mov
cmpsl
xchg
mov
lahf
fwait
mov
dec
push
inc
xor
aaa
test
ljmp
in
sub
loope
fs
push
xchg
or
inc
push
and
and
pop
or
mov
lods
rolb
lahf
jae
cmp
les
and
dec
shl
xor
sbb
loopew
cmp
pusha
and
mov
leave
lcall
xchg
mov
imul
jnp
push
jg
nop
lcall
push
cmc
jmp
imul
xchg
leave
rolb
inc
inc
cmp
pop
cmpsl
jmp
sahf
sub
mov
push
jb
cmp
jl
dec
sub
insb
clc
mov
fnclex
mov
inc
aaa
ret
pop
push
out
fstp
ds
mov
ja
and
adc
push
clc
jecxz
xor
fnstcw
mov
mov
ja
mov
mov
fisttpl
push
lahf
lcall
out
push
sub
mov
adc
mov
xor
pusha
push
xchg
shll
daa
out
clc
sbb
or
mov
inc
sbb
and
aam
inc
dec
scas
pusha
push
aaa
dec
dec
mov
into
lods
lock
sub
and
mov
push
insl
mov
lods
dec
loope
stos
sbb
pop
lods
rcr
mov
cltd
cmp
push
mov
icebp
dec
int3
int3
aaa
fnstenv
xchg
decl
aaa
cmp
in
jge
js
cmp
pop
aad
jae
sbb
cltd
xor
es
mov
xchg
nop
lcall
xchg
in
add
in
adc
test
sahf
sub
pop
pop
dec
lock
aas
and
neg
xor
jl
lcall
clc
mov
aad
inc
rorl
or
pop
jae
das
push
js
or
inc
xchg
popa
mov
pop
xlat
jne
pop
mov
std
dec
dec
cmp
mov
xchg
lods
adc
lea
mov
iret
inc
and
les
sbb
push
sti
inc
pop
dec
xor
hlt
bound
sub
aam
sub
fs
cmpsl
fists
mov
and
xor
sbb
insl
scas
fisubrl
aad
xor
mov
loope
inc
inc
cltd
cmpb
and
cmp
into
lea
jnp
cld
add
movsb
ret
and
mov
loope
jae
movl
sub
aam
pop
repnz
movsb
clc
popa
dec
push
rcr
cmc
add
mov
xchg
xor
jo
adc
pop
or
lret
cltd
add
out
push
adc
sub
pop
shl
rolb
repnz
dec
add
arpl
lcall
iret
dec
inc
ja
add
int
rorl
add
sbb
rolb
sub
daa
stos
cltd
scas
push
cmpb
jbe
inc
and
iret
dec
xchg
push
fwait
jnp
mov
dec
jge
mov
inc
mov
sbb
fistps
repz
add
sub
or
rorb
sub
bound
add
push
jge
dec
and
or
push
cmp
lods
fnstcw
fwait
adc
adc
std
push
iret
std
ret
movsl
iret
xor
jg
pushf
out
jo
pop
push
sbb
jle
out
inc
pop
dec
push
lahf
push
jle
fisubrl
push
add
or
mov
mov
pop
mov
sbb
or
pusha
aaa
push
mov
test
mov
mulb
push
arpl
daa
test
addl
pusha
fisubs
mov
xor
inc
lcall
icebp
jecxz
sbb
jecxz
imul
or
daa
mov
adc
outsb
and
movsl
add
sbb
jo
pop
pop
inc
mov
xchg
cltd
dec
pop
cltd
jb
push
mov
cmp
dec
jbe
xchg
jb
shrb
fwait
push
lret
out
sbb
and
lcall
pop
negl
cmp
add
and
xor
gs
arpl
fstpt
fdivl
icebp
fdivp
sbb
add
jg
lahf
sub
sbbb
adc
cmp
push
int
xchg
popf
loop
movsb
pusha
jne
scas
or
mov
jp
inc
hlt
xor
adc
out
add
movsl
in
mov
lahf
push
popa
dec
push
push
mov
push
cmp
mov
std
movl
mov
addr16
ss
out
or
shrl
jmp
or
filds
adc
mov
xchg
lock
sbb
pop
mov
xchg
test
or
lock
xchg
jl
movsb
hlt
jp
or
sbb
pop
or
pop
es
push
mov
jnp
jb
ds
inc
jb
add
out
pop
pop
lea
sbb
std
and
push
xor
dec
subl
scas
xlat
adc
cltd
xchg
sbbb
pop
xlat
jmp
pusha
test
xor
rorb
sbb
call
rol
and
sbb
pushf
mov
jl
or
mov
add
loop
mov
lahf
pop
arpl
loopne
inc
add
push
jnp
int
or
ret
std
push
add
lret
pop
rorb
cmpsl
jno
adcl
dec
adc
mov
jo
sarl
cmp
jle
fcmovbe
or
mov
inc
and
mov
xlat
mov
xor
aaa
jbe
jae
mov
movsb
sbb
aaa
subb
push
ljmp
aam
sbb
push
and
xlat
xchg
mov
jmp
loope
adc
fsts
test
sbb
fldcw
fstpt
fs
push
or
pop
push
mov
xor
mov
mov
inc
mov
shrl
out
ss
outsl
sbb
or
rorb
ljmp
ds
or
pop
in
lock
insl
fdiv
je
cmp
imul
or
jae
arpl
in
out
ja
orb
nop
adc
nop
lods
les
mov
adc
into
daa
xchg
xlat
lods
inc
push
out
pusha
xchg
push
outsb
aaa
or
dec
in
xchg
pop
addr16
cmpsb
shl
push
sub
sub
sarl
lock
test
imul
in
mov
cmp
daa
add
les
jecxz
enter
and
pop
call
dec
repnz
jbe
cmp
cmpsl
push
in
lret
mov
or
dec
cmp
rcrl
lahf
mov
jecxz
shr
mov
sbb
popa
mov
mov
xor
push
aam
test
cmp
outsb
xor
sub
int
mov
push
scas
jle
scas
in
incl
xchg
lret
fldenv
add
xchg
xlat
stc
repnz
adc
or
mov
mov
loopne
outsb
out
fwait
sahf
sbb
push
lods
cmp
mov
and
mov
mov
cmp
sub
sbb
mov
sbb
fucom
xchg
cmp
mov
or
mov
jne
push
jne
jmp
dec
xor
ss
lret
adc
iret
idivb
sbb
jl
adc
movsl
add
or
sbb
lock
imul
mov
sub
and
loope
push
inc
sub
add
mov
orb
pop
jp
sub
xor
fcmovnb
loop
sbb
push
test
emms
sahf
adc
cmc
popa
mov
mov
cmpsl
sbb
mov
and
jb
rol
loopne
sbb
sub
cmpsb
push
push
and
sub
sahf
stos
xor
rcrl
pop
aam
pop
ud2
movl
mov
shrb
jno
inc
xchg
out
adc
pop
cs
xchg
fbstp
repnz
lcall
push
adc
jno
out
cmp
shlb
inc
sub
mov
fwait
mov
movsb
and
fwait
nop
in
mov
pushf
pop
xlat
in
xor
mov
mov
jl
jns
sbb
aad
push
cmp
jbe
in
xor
out
into
xchg
inc
mov
hlt
dec
sti
xchg
push
ret
jb
sbb
mov
dec
xchg
xchg
push
push
and
inc
cmpl
insb
mov
mulb
sbb
in
mov
das
dec
out
out
andl
cmpsb
add
pop
sub
push
mov
sbb
jecxz
je
sbb
stos
xchg
xchg
jmp
cmp
out
sbb
imul
popf
iret
shlb
sub
adc
jns
movsb
iret
mov
pushf
lds
pop
scas
inc
fldt
adc
pop
divb
sub
orl
lds
mov
push
mov
in
pushf
jno
inc
adc
xlat
mov
in
xchg
jmp
shl
mov
mov
sti
jns
sub
test
jge
pop
adc
add
insb
xchg
dec
xor
test
inc
xchg
adc
in
jle
test
out
jne
mov
adc
xchg
mov
push
and
pusha
xchg
or
das
pop
push
popf
mov
dec
jb
sbb
sub
call
fwait
dec
mov
stc
push
enter
sub
arpl
sub
pop
cmc
or
adc
mov
mov
int3
jno
cld
jg
pop
mov
movsb
cmpl
sbb
push
xchg
xchg
or
loope
jle
out
inc
jne
push
adc
xor
jns
or
test
fadd
mov
push
out
mov
add
clc
sbb
aam
xorl
dec
jg
pop
xor
jns
nop
in
dec
jae
or
xchg
jecxz
lcall
add
repnz
pop
add
inc
testl
ja
sbb
lods
outsl
and
sbb
clc
leave
sbb
xchg
aad
xor
jmp
pushf
int
stos
xchg
icebp
lods
mov
rcll
xchg
loopne
loopne
out
push
push
add
sub
repnz
and
and
cltd
and
test
int3
pop
leave
loope
mov
mov
or
repnz
adc
int3
rdtsc
sub
nop
mov
mov
sbb
jb
mov
jle
in
jne
or
jno
jg
cmp
fwait
outsb
inc
insb
test
sub
sub
lret
pop
and
or
ficoms
cmc
cli
pop
sbb
cmpsb
jae
aaa
psubb
xchg
addr16
sti
test
mov
lret
mov
xchg
xchg
pop
push
scas
fimuls
sbb
pop
clc
xlat
jmp
gs
aam
sub
cmc
xor
pop
test
call
outsb
imul
shlb
push
mov
pop
xlat
sub
mov
pop
adc
push
jnp
testl
ret
push
or
add
roll
add
pop
mov
sbb
dec
or
stc
jge
outsb
cmpb
stos
adc
cwtl
cld
pop
ret
leave
fs
shrl
shrl
jp
xlat
shr
mov
jmp
add
jb
push
pop
sbb
call
sbb
and
mov
hlt
xor
adc
loopne
popf
pop
insb
cmpsb
jo
jge
xchg
jmp
in
in
xchg
hlt
adc
and
xor
call
cmp
jbe
xor
popa
and
in
push
adc
cwtl
jecxz
push
inc
arpl
mov
pop
xchg
mov
adcl
jnp
loope
inc
pop
je
bound
cmp
add
sar
fistpl
and
mov
dec
cltd
pop
test
add
mov
cli
lods
popf
daa
jo
aad
jbe
scas
mov
sbb
cltd
ret
dec
xchg
xchg
add
and
xor
dec
repnz
xor
cmp
and
or
hlt
pop
mov
dec
xchg
into
popf
xchg
mov
xor
ror
fcmovnbe
or
pop
adc
test
push
rclb
fstl
xchg
mov
jnp
mov
fucomi
and
fisttpl
sub
jno
push
cmp
icebp
clc
push
xchg
push
and
ljmp
icebp
lcall
shll
cmpsl
iret
mov
lcall
ss
rcl
adc
mov
inc
sar
adc
mov
pop
xchg
sahf
and
cmpsl
dec
mov
mov
out
mov
add
ret
push
daa
lock
out
mov
xchg
leave
ljmp
mov
js
mov
data16
push
or
lods
gs
loop
daa
mov
adc
js
cmpsb
pop
and
mov
icebp
mov
fnstcw
mov
nop
lret
mov
cmp
insb
adc
cmc
xor
xor
sub
jg
fidivrl
cmp
pusha
clc
out
adc
orb
jae
jmp
mov
xor
and
dec
cmp
cmp
xor
mov
mov
mov
mov
aaa
inc
fidivs
jmp
sahf
addb
cmpb
andb
mov
pop
fcmovb
dec
xchg
jp
add
icebp
sub
shll
xor
jp
jbe
adc
dec
jae
out
lods
add
inc
push
inc
mov
xchg
mov
dec
jge
mov
xorl
lock
mov
xlat
dec
shrb
sub
ja
mov
loopne
add
cmp
fldt
cmp
rcrl
daa
push
jb
inc
into
mov
mov
fdivl
fnstsw
loop
jae
xor
aas
sub
add
test
mov
cmpsl
out
pusha
pop
loopne
mov
jle
outsl
push
and
mov
jmp
mov
movsb
mov
mov
mov
push
add
mov
inc
leave
adc
dec
cmpsb
jp
ss
lods
adc
ret
pop
sub
cmp
das
call
xor
adc
fisubs
mov
jle
push
jmp
sbb
into
pop
ficoms
dec
in
jle
ljmp
leave
and
push
fs
addr16
xor
sub
push
push
sbb
add
out
movsb
out
jle
xor
jmp
push
int
xor
push
cli
push
aas
in
xor
insb
shll
out
clc
adc
jns
xchg
jb
xor
add
mov
pop
subb
adc
push
jno
insl
sti
jl
rsm
jb
mov
fstps
jns
fstl
test
out
push
rcrb
jne
aad
gs
icebp
pop
mov
or
sbb
adc
test
lods
mov
aad
je
sbb
sbb
test
lea
sub
inc
push
popa
jmp
aaa
adc
cmp
sbb
clc
pop
mov
inc
loopne
gs
in
jg
push
addl
or
push
xchg
cld
rcl
push
sub
leave
sbb
adc
cmp
stc
in
stos
dec
dec
outsb
sub
cld
fimull
sub
lea
stc
les
push
icebp
mov
andb
push
test
hlt
insb
sbb
xchg
push
pop
add
add
lahf
rcrl
or
xchg
enter
insl
fnstcw
fisttps
shll
filds
sbb
mov
inc
mov
rcll
bound
clc
cmp
cli
out
cmp
xchg
movsl
mov
inc
scas
mov
xchg
leave
sbb
or
addr16
mov
xchg
push
inc
jbe
adc
sub
sub
pop
lock
cli
pop
push
in
mov
adc
nop
daa
test
sarb
jbe
fs
inc
xchg
and
or
pop
cmc
add
sahf
jecxz
xchg
and
shll
sti
cmp
adc
aaa
es
setle
aas
fwait
or
fistl
mov
mov
mov
jbe
inc
out
sbb
mov
iret
fnsave
fsubr
or
or
cmp
and
out
pusha
les
push
jg
insl
insl
aad
push
fucomip
sbb
and
mov
out
popa
xchg
or
pop
mov
sbbb
jb
jbe
inc
mov
lds
out
xchg
dec
filds
mov
adc
in
jmp
out
xchg
les
dec
sub
mov
shll
add
fldt
cli
lahf
or
shrd
imul
je
int
leave
sbb
fmull
lahf
dec
xor
loopne
push
repnz
jne
je
shrl
cmp
mov
aas
mov
out
mov
aad
pop
pop
fwait
test
mov
pushf
enter
mov
sbb
movsl
stos
mov
add
cs
or
sub
pusha
call
push
mov
out
jb
dec
adc
mov
pop
mov
cld
jbe
or
jecxz
jns
aam
add
inc
fldt
cmp
fimuls
adc
sub
inc
lods
mov
in
dec
jp
adc
cld
mov
inc
mov
xor
cmpsb
outsl
int
call
or
fs
arpl
aam
cltd
or
repnz
pop
cmpsl
fs
push
in
mov
inc
sbb
push
gs
and
sbb
into
mov
mov
shl
mov
push
cld
xchg
inc
es
mov
sbb
mov
adc
mov
mov
pop
outsl
add
inc
jl
iret
dec
sub
push
insl
mov
sub
xor
insb
je
jb
xchg
repz
cmp
sbb
mov
adc
mov
stos
sub
cmp
subl
ljmp
test
push
repz
sub
cmp
ds
mov
xor
lods
in
jmp
cmpsl
push
mov
fdivrp
ljmp
repz
scas
aad
cmp
and
das
ret
mov
jmp
mov
clc
sbb
xchg
push
pop
xchg
xor
xor
pushf
sar
mov
pop
and
imulb
push
leave
test
out
pop
sbb
lcall
push
push
mov
addr16
test
xor
mov
jne
js
jmp
xor
nop
inc
movsb
or
cld
loope
mul
xchg
xchg
idivb
and
push
loop
int3
fwait
out
mov
mov
loop
pop
pop
push
ffree
adcb
cmp
lods
shll
bound
add
push
add
xchg
mov
push
jg
aam
pop
sbb
jb
scas
fnstenv
add
sar
sti
hlt
push
scas
pop
gs
push
cmp
out
icebp
shll
sbb
sbb
dec
lret
push
mov
inc
ficoml
push
jae
pop
adc
xchg
add
add
xor
jp
jne
push
jne
jp
ljmp
imul
pop
das
xchg
daa
hlt
jno
repz
mov
test
pop
dec
in
pop
xchg
sbb
and
and
pusha
push
add
lock
mov
jns
lahf
jne
adcl
dec
push
cmpsl
cwtl
outsb
xor
ljmp
imul
mov
imul
jbe
and
out
add
or
lcall
dec
mov
nop
cld
mov
and
nop
xor
jo
cmp
adc
push
stos
inc
jne
sub
movhps
fdivrs
sub
sub
pop
mov
sub
mov
jae
call
sub
inc
and
sar
mov
mov
insb
xchg
outsl
mov
call
shrb
insl
or
and
jne
mov
sarl
stos
out
out
mov
scas
inc
ret
aad
aad
mov
lock
xor
loope
add
xor
push
aaa
cld
cmp
cld
or
lods
enter
imul
shlb
hlt
lds
push
cmpsl
movsl
fcomps
fdiv
add
mov
xor
sbb
xor
cmp
repz
xchg
jo
cmpsl
mov
je
cmp
bsf
repnz
cmp
fdivp
dec
jecxz
psubsb
cltd
sahf
loop
imul
add
push
cmpsl
daa
ljmp
subl
or
inc
push
lahf
repnz
cmp
pop
xor
jmp
test
cmpsl
fmuls
cmc
xchg
imul
jb
xor
inc
jle
jmp
mov
mov
leave
sub
outsl
mov
sbb
mov
sub
adc
out
jne
aas
adc
mov
mov
xchg
adc
mov
ds
jmp
adc
jmp
icebp
test
pop
cmpsb
pushf
out
xor
cmp
cli
leave
mov
dec
mov
inc
cmpl
add
push
mov
aaa
aas
jmp
mov
add
mov
pusha
hlt
and
fists
sbb
fldl
add
xor
mov
aaa
sub
iret
scas
dec
gs
jmp
and
add
mov
push
push
jb
gs
lock
mov
or
xlat
fcoml
xor
lods
lock
aaa
jne
inc
pop
out
scas
dec
cmc
push
xlat
cld
loope
stos
mov
nop
pushf
xor
add
les
pop
sub
add
aas
sti
cli
xchg
and
sahf
stos
dec
xchg
or
lods
inc
push
jmp
fs
testl
push
stos
hlt
inc
stc
mov
scas
mov
and
out
mov
xchg
es
mov
inc
addr16
scas
jl
cmpsl
push
sub
cld
stos
jecxz
adc
repnz
add
and
scas
inc
jbe
int3
sbb
mov
mov
mov
stc
in
adc
jbe
mov
sbb
lock
pop
sub
stc
xchg
sbb
mov
outsl
hlt
pop
mov
or
movsb
pop
mov
sub
fisubl
add
int3
repnz
and
mov
dec
mov
ret
pusha
std
xchg
dec
sub
inc
dec
imul
lods
pop
pop
pop
call
or
aad
sbb
push
aas
scas
push
mov
fcoms
and
or
pop
adc
les
xor
pop
ret
fisttpll
add
or
sub
scas
jle
push
mov
mov
inc
arpl
sub
xor
data16
mov
sub
xor
xor
cmp
fs
sbb
add
icebp
out
pop
popf
mov
push
jne
pop
loope
jo
xor
fdiv
cmp
lds
add
mov
jbe
and
fdivrp
aaa
hlt
xor
xor
fdivs
add
loopne
and
hlt
aam
or
shrb
and
lods
pop
mul
push
mov
pop
test
jno
adc
call
pop
sbb
xchg
fistpll
cmp
cmp
mov
in
arpl
andl
xchg
or
or
sub
xchg
xor
ret
sbb
xchg
xlat
sub
repz
cli
pop
cli
mov
subl
or
pop
daa
push
setg
xchg
test
out
rolb
cli
adc
push
fcmovb
clc
inc
mov
pushf
sub
mov
test
shlb
cmp
jp
cmp
in
xor
jae
nop
rorb
js
sbb
jne
imul
xchg
fs
xchg
iret
add
in
xchg
arpl
jl
scas
arpl
fisttps
popa
test
push
mov
adc
jnp
fucom
sub
mov
in
jae
ror
xor
xchg
movb
lds
sub
xchg
es
jl
gs
xor
movb
mov
pop
test
pop
lods
push
mov
mov
repz
push
imul
push
mov
es
mov
sbb
ja
popf
mov
jbe
sbb
sbb
lret
mov
adc
rol
mov
jb
cmp
repz
inc
or
push
call
mov
sti
cmovb
fucomip
ficoms
sbb
std
insl
xchg
lea
fxsave
sub
sub
lock
push
fstps
test
imul
in
cmpsl
fidivrl
movl
xlat
xchg
mov
add
lea
jle
xchg
fdivs
lea
xor
jmp
ja
inc
xchg
cmp
roll
add
cmp
push
push
mov
pop
leave
sahf
loope
add
in
mov
adc
push
and
sbb
inc
push
cmpsl
xchg
dec
lret
dec
adc
push
lcall
or
pop
and
mov
xor
dec
inc
mov
leave
fs
add
pop
imul
test
jns
aad
cmp
cmpsb
cwtl
pushf
clts
ja
inc
pop
jmp
pop
sub
or
jno
lret
dec
out
lea
sbb
xchg
jg
orb
sbb
and
pop
mov
or
mov
int
pop
pusha
mov
testl
jge
lods
in
ret
inc
dec
and
aas
adc
and
mov
mov
xchg
mov
iret
cld
pop
loop
and
inc
neg
outsl
popa
rolb
pushf
arpl
rcl
inc
cmc
xchg
icebp
or
mov
jbe
call
daa
sbb
leave
mov
ficoml
dec
push
xacquire
mov
mov
jge
imul
loopne
scas
dec
xor
mov
and
ret
add
mov
mov
xchg
lock
adc
and
in
not
jne
push
enter
jnp
cmpsb
xchg
xchg
repz
jl
xchg
ror
int
add
sbb
aam
sub
fcompl
mov
and
lahf
aas
jno
mov
and
test
push
adc
sahf
sbb
jne
adc
aaa
and
mov
aas
cs
sbb
jno
mov
adc
in
pop
sbb
call
pop
dec
mov
mov
xor
cs
add
mov
sub
lea
loop
sbb
das
and
push
enter
dec
jge
sub
cmp
and
sbb
lcall
pop
lret
push
dec
test
lods
lahf
aad
mov
int3
es
lret
mov
cli
imul
icebp
mov
jmp
loopne
mov
stos
mov
xor
pushf
mov
nop
mov
cld
bswap
out
imul
rorl
das
push
std
pop
push
and
xchg
mov
push
mov
in
pop
xor
jg
sbb
stos
sbb
xchg
pop
xor
jmp
pop
sub
xchg
push
test
lret
dec
gs
dec
rolb
or
scas
pop
scas
inc
pop
scas
out
ss
or
test
adc
rcrl
lret
mov
xchg
repz
data16
movsb
test
jno
push
dec
mov
pop
cmpsl
mov
pop
sbb
xchg
cltd
ret
mov
out
ret
ret
adc
cmp
mov
push
insl
cld
lret
bound
loope
ja
add
adc
sub
out
push
mov
and
pushf
lcall
cmp
cwtl
sbb
data16
xchg
push
inc
sahf
addr16
loopne
mov
fwait
xchg
arpl
and
iret
int3
mov
cmp
mov
insl
sub
mov
out
mov
in
jge
scas
fildl
adc
loopne
cmp
push
dec
lea
pushf
pop
add
aaa
cld
pop
cwtl
add
and
out
aas
pop
popa
or
sarb
inc
and
pop
mov
out
jge
dec
fidivrl
ret
lock
adc
sub
cmc
cmp
pop
sbb
pushf
sub
pop
push
ja
popa
adc
rcrl
icebp
jmp
cmc
incl
stc
repz
sbb
fcompl
and
hlt
mov
or
movl
out
dec
loope
or
mov
mov
inc
pop
pop
movsl
rcr
test
push
xorl
cmp
cmp
in
inc
ret
icebp
lret
add
mov
adc
adc
sbb
add
or
or
daa
pusha
or
push
pop
cmp
add
aad
aaa
aas
cli
call
jge
push
push
cmp
inc
das
xchg
stos
sbb
iret
push
leave
arpl
mov
adc
sbb
insl
jo
popf
sbb
aaa
fcmovne
hlt
cld
scas
std
jo
es
lea
sbb
cmp
les
pop
aad
and
cmc
add
out
ljmp
and
cld
scas
sub
loop
subl
or
sub
sub
xor
sub
out
jl
and
xchg
into
pushf
push
add
add
xchg
fstp
sub
loope
divb
adcb
mov
cmc
adc
or
xchg
dec
std
pop
inc
in
lret
add
mov
jl
jecxz
mov
shrb
shll
out
andl
mov
les
lods
cmp
xchg
hlt
inc
sub
xchg
mov
popf
cmpsl
sbb
shll
aas
mov
lods
iret
sarl
lods
das
mov
and
mov
mov
adc
or
mov
enter
inc
xor
sbb
jl
popf
es
mov
push
dec
rcrl
dec
xor
arpl
xchg
xor
xchg
popf
sub
rcrb
or
cmp
add
lret
ret
sti
push
leave
mov
int3
sub
stc
sbb
clc
cs
xor
sbb
scas
in
cwtl
stos
nop
pop
inc
xchg
add
hlt
inc
stos
jecxz
in
lahf
xor
cmpsb
mov
sub
push
lods
push
mov
mov
shrb
xlat
pop
loopne
test
movsl
dec
jg
or
scas
stc
adc
sub
arpl
mov
dec
xchg
or
movsb
cmp
mov
jmp
push
sbb
out
ret
xor
dec
dec
and
jl
xor
dec
mov
mov
and
push
mov
insl
aad
aam
cli
pushf
dec
lods
ljmp
inc
jbe
xchg
pop
xor
in
adc
pushf
xor
pop
xor
or
ja
int
das
lea
pop
mov
mov
aad
getsec
push
out
inc
cmp
sub
dec
cmovo
or
push
loope
int3
les
loopne
cmc
lds
mov
adc
or
stos
mov
or
neg
inc
sahf
incb
imull
roll
xchg
xchg
pop
fst
or
mov
jg
mov
sar
inc
loopne
push
xchg
dec
mov
ficomps
xchg
stos
add
add
rorl
mov
lcall
cmc
push
dec
mov
sbb
movl
mov
sub
xchg
mov
nop
ret
sub
mov
popa
mov
add
pop
imul
and
or
fadd
mov
dec
sub
dec
mov
mov
ret
scas
lock
dec
dec
sub
data16
dec
test
dec
in
jno
outsl
aas
lcall
add
mov
iret
mov
sub
pop
iret
icebp
roll
sub
push
insl
subb
cmpsl
mov
jnp
repnz
push
and
or
sar
aas
sub
pop
push
les
or
lcall
cli
jae
decb
mov
fstpl
cmpsb
cmpl
loope
and
xchg
xchg
sbb
lods
and
jl
sbb
mov
sbb
fwait
jnp
push
jmp
shlb
jl
mov
call
cltd
xor
cli
mov
iret
sub
adc
bound
lds
pop
xchg
xor
insb
shrl
ud0
pop
into
push
scas
out
sbb
test
test
xchg
pop
xor
push
adc
and
mov
pop
in
repz
out
stos
inc
lods
shlb
out
bound
jo
in
inc
daa
mov
mov
das
mov
aad
sub
fistl
out
jl
test
in
cmovno
cmpxchg
lods
pop
cld
mov
inc
jns
fiaddl
jno
addb
xor
jbe
loope
int
outsb
mov
fbld
je
arpl
mov
xchg
shlb
cmp
mov
into
scas
bnd
add
fwait
in
pop
pop
and
add
mov
stc
in
loop
and
sub
dec
pop
xor
cmpb
cmp
fcompl
mov
push
inc
push
call
lret
and
pop
lret
sub
dec
mov
in
mov
les
jl
sbb
mov
fwait
and
sub
cmc
call
adcl
mov
int
mov
and
xlat
push
pop
mov
fisttpll
cmp
popa
arpl
pop
test
in
leave
lcall
push
faddl
cmp
adc
lahf
pop
lcall
leave
sahf
mov
xchg
sub
pop
leave
add
sub
jne
sahf
mov
jo
mov
mov
fs
mov
mov
pop
push
jmp
ds
inc
jl
popa
pop
cltd
outsb
in
fldenv
mov
or
stc
fldenv
clc
mov
add
jg
stc
js
ss
in
das
mov
adc
fdivs
scas
stos
and
jns
and
add
xchg
in
push
push
ljmp
mov
shl
fimull
dec
clc
cmc
mov
jbe
imul
cmp
js
sbb
sbb
movsl
and
repnz
mov
dec
jae
adc
subl
sbb
adc
cmpsl
test
mov
push
out
aad
flds
cmc
dec
mov
push
jno
and
xchg
mov
out
fsub
push
arpl
rcr
cld
xchg
xchg
arpl
in
add
fstl
rcr
sbb
sahf
ss
jp
cli
push
into
or
fsubs
sub
in
scas
iret
inc
xchg
ffree
push
dec
jle
xchg
add
in
rorl
inc
sti
imul
sbb
div
aaa
dec
inc
in
mov
add
pop
push
loop
enter
cli
jmp
mov
cmp
dec
xor
repnz
jne
pop
push
fistps
xchg
jnp
aam
adc
jno
lret
imull
ss
loopne
push
push
ret
mov
xchg
xchg
rcll
std
mul
mov
cltd
pop
lds
sbb
adc
leave
hlt
in
or
jnp
push
pop
test
leave
sub
adc
or
jp
mov
add
inc
pop
xchg
add
fwait
testl
mov
mov
rcr
sub
mov
xchg
sub
add
rol
mov
or
clc
mov
ret
rcrl
and
imul
inc
xchg
push
sbbl
jmp
setae
mov
inc
add
inc
sbb
pushf
xor
xor
cmp
and
stc
xchg
cmc
push
je
lock
out
jo
cld
xchg
mov
stos
icebp
jbe
mov
and
xchg
inc
in
clc
push
mov
xor
lret
mov
pop
mov
pop
cmc
jp
or
inc
in
mov
mov
shll
leave
xchg
arpl
and
xor
push
imul
and
bound
push
fwait
and
fildll
dec
pop
pop
rorl
mov
addl
inc
and
dec
mov
cmp
inc
and
fistpll
lcall
adc
in
lea
aad
and
inc
xor
push
adc
dec
rorl
mov
icebp
call
lea
cmpl
jb
sbb
roll
push
popa
cmp
inc
pop
leave
jge
shll
or
mov
sbb
or
add
es
lock
xchg
pop
subl
outsb
pop
dec
cmp
jo
rorl
rolb
and
cltd
dec
in
ljmp
push
dec
ret
mov
stos
lcall
sub
mov
xchg
mov
inc
sbb
int3
pop
jbe
gs
jmp
rolb
movsl
sbb
rep
js
mov
int
xchg
aaa
fbld
mov
in
pop
mov
sti
sub
cltd
outsl
movsb
push
lea
inc
insb
xor
mov
pop
fs
xor
add
xor
das
inc
out
mov
inc
adc
lds
lock
inc
fucomp
xor
sbbb
sbb
mov
push
pusha
ja
or
xchg
adc
rep
movsl
cmpl
push
fisubrl
shrb
rorb
jae
xor
cwtl
ljmp
mov
push
inc
inc
lcall
jbe
adc
cmc
fistps
jmp
icebp
dec
andl
xchg
sbbl
pop
add
and
insl
push
sbb
lds
adc
cld
cli
scas
jno
ret
xchg
sub
cmp
mov
data16
pop
movsb
push
test
mov
jnp
sub
lods
in
push
repnz
add
jnp
mov
dec
iret
sbb
cwtl
scas
clc
mov
ds
cmp
mov
out
or
sub
addb
xchg
jl
cmc
xchg
stos
pop
lret
or
popa
lods
insl
pop
shlb
xor
adc
xor
xor
test
pop
mov
mov
xchg
inc
ja
sbb
sub
shrb
jbe
xor
mov
mov
repnz
and
xchg
xor
jb
hlt
mov
lods
pop
fildl
sub
sub
mov
sub
fimuls
leave
dec
xchg
aas
int
fstl
mov
lahf
jno
dec
mov
sub
loop
fwait
push
jg
sub
mov
into
jmp
sbb
push
imul
aad
mov
mov
pop
mov
scas
imul
movzbl
cmpb
fstps
cli
loopne
mov
sbb
mov
and
scas
and
loop
mov
add
mov
pop
lcall
out
repnz
jne
pop
sub
shlb
sbb
push
push
test
lcall
inc
orb
mov
popa
sbb
into
imul
dec
xchg
fmuls
adc
shll
pop
ss
push
enterw
inc
test
sbb
clc
sbb
cmpsb
push
jns
sub
xchg
push
push
stc
xchg
xor
mov
aas
push
int3
pusha
inc
ret
dec
dec
jmp
leave
sti
leave
add
xchg
lret
dec
dec
loope
lds
xor
movsb
push
loope
popf
and
sbb
sahf
bound
dec
test
push
and
sub
xchg
das
dec
lods
mov
dec
cs
and
mov
cli
jge
dec
and
mov
sub
mov
and
pop
sbb
cmp
mov
ja
lods
xchg
jae
aad
xchg
sbb
out
fwait
dec
shll
popf
fsts
sbb
cld
inc
leave
or
or
push
mov
pop
in
adc
ret
arpl
push
dec
sub
stos
push
add
push
sbb
ss
aas
ljmp
and
push
cmpsl
movsl
mov
jo
nop
mov
pop
call
into
ss
subb
adc
ljmp
xchg
fbld
adc
sub
mov
xor
icebp
jno
mov
in
popa
sub
pop
lcall
jae
popf
cmp
and
ret
ds
fildl
out
out
and
fisttps
imul
daa
insl
gs
push
mov
push
pop
movsl
test
mov
fiadds
lret
repnz
dec
stos
lods
adc
xchg
mov
xor
popf
call
fcoms
mov
outsb
sub
mov
mov
jnp
fmull
cmpsb
pop
pop
bound
pop
and
movsb
xchg
inc
add
push
xorb
jnp
in
mov
mov
repz
jns
mov
add
ror
out
ret
stos
dec
sub
fldl
and
test
sub
or
insb
inc
out
and
pop
xor
leave
pusha
fwait
aaa
dec
in
in
push
push
fsub
push
stc
xor
clc
fists
fistl
adc
jno
cs
pop
mov
in
jns
sub
cltd
sub
in
mov
or
ret
lret
dec
fildll
sbb
sti
jmp
das
sub
push
test
pop
jb
insb
aam
dec
dec
data16
mov
cmc
ss
sub
stc
std
inc
jmp
call
popf
shrb
cmpsb
out
cld
insb
sub
xor
xchg
dec
and
inc
fsubrp
stc
in
push
sbbl
mov
cmpsl
jecxz
xor
add
mov
add
sub
mov
mov
dec
push
mov
aaa
xor
je
pop
aaa
adc
loop
mov
fisttpll
sbb
rcr
mov
popa
in
adc
pop
cmp
push
inc
sbb
jmp
scas
cld
ret
loopne
jp
out
je
fists
or
cmp
ljmp
sarl
push
pop
aas
pop
cli
jle
adc
pop
xchg
sti
sub
test
adc
out
ja
lcall
mov
jecxz
fistps
in
xchg
adc
inc
add
ret
push
cs
stc
shrb
fistpll
fisttps
xor
lret
test
daa
dec
or
and
push
mov
test
push
jecxz
jle
xor
mov
jge
icebp
pop
pushf
xor
jecxz
lret
cmpsb
push
popf
popa
mov
stos
xlat
add
loopne
push
or
xor
gs
sbb
imul
lret
mov
cmpsb
and
or
fucomi
pop
xchg
mov
inc
jle
push
mov
adc
sub
leave
xchg
inc
and
inc
adc
addr16
fsubs
punpckhdq
test
mov
call
jb
jne
sub
xor
mov
xor
mov
sbbb
xor
push
xor
mov
imul
xchg
mov
lock
stos
mov
in
punpckhwd
inc
into
and
pop
inc
aam
ja
or
gs
or
cltd
sub
out
bound
stos
shll
lret
mov
in
test
je
addb
dec
sub
and
xorl
pop
ds
jnp
and
sub
icebp
or
cs
add
cwtl
dec
push
xchg
fstpl
sub
sub
hlt
sbb
cmp
jge
out
fwait
xchg
mov
and
mov
fistl
inc
test
cli
sbb
repz
stos
mov
mov
outsl
add
iret
test
pop
cmpsb
and
and
ss
outsl
adc
xlat
xor
das
addb
xchg
mov
cli
leave
bound
jg
add
sahf
popa
jge
icebp
lret
out
rorl
fs
jno
mov
sti
sti
pop
cmp
popa
dec
leave
fists
shrb
mov
xchg
cli
outsb
outsb
fistps
aaa
insb
testl
xor
leave
jbe
mov
daa
outsl
and
pop
popf
fisubs
aam
fcompl
sbb
mov
cmp
bound
add
test
out
sub
inc
lea
aam
jl
adc
push
out
mov
push
add
sbb
push
out
mov
vmwrite
ficoml
sub
inc
fwait
xchg
loope
add
shll
xchg
mov
and
or
xchg
stos
mov
jns
fsubs
lea
mov
lret
xlat
fs
iret
adc
daa
int3
pop
mov
dec
xchg
scas
lods
into
repz
roll
test
inc
mov
out
negb
lods
ss
jge
cmp
jne
mov
fadds
loope
lahf
fwait
mov
pusha
sub
xchg
or
hlt
enter
pop
cmp
fnstcw
out
push
cmpsb
repnz
add
mov
mov
mov
cli
stc
add
mov
lea
or
test
lods
xor
cmpsl
push
push
stos
cmp
and
add
insb
into
and
mov
imul
and
mov
mov
dec
test
mov
and
test
roll
push
push
lock
in
fnstenv
into
cmpsl
mov
push
xchg
push
xchg
iret
shlb
mov
imul
xchg
mov
daa
inc
cwtl
pop
adc
mov
mov
movsl
les
pop
mov
fsubp
loopne
and
arpl
cmc
pop
add
fsubrl
inc
mov
dec
cltd
outsl
sbb
leave
push
and
scas
clc
push
popa
pushf
outsb
inc
pusha
pop
or
xchg
js
mov
clc
out
sbb
cwtl
in
add
das
hlt
ds
lods
cmp
into
lods
and
xchg
cs
xor
popa
xchg
cwtl
movsb
dec
pop
push
xchg
cmp
mov
in
hlt
lahf
push
mov
in
or
clc
scas
xchg
fadd
jle
loopne
push
adc
in
addr16
add
mov
ljmp
xchg
ret
dec
mov
aam
test
daa
pop
and
jecxz
das
fbstp
jle
ljmp
xchg
mov
fadds
xchg
mov
xchg
inc
scas
push
pushf
add
adc
orl
push
jp
sbb
repz
arpl
les
jle
xlat
stos
fisttps
fmull
jnp
sarb
gs
inc
push
pop
movsl
cmp
movsb
push
paddusb
cmpsb
fs
mov
sti
mov
cmp
adc
xor
fldenv
push
rcll
pop
scas
adc
stos
pop
ficompl
ss
lret
loope
pop
mov
mov
ficomps
fdivrs
aad
movsb
xlat
push
push
xchg
pop
jae
movsb
xchg
outsl
adc
sbb
insb
sbb
push
push
xchg
dec
push
fisttpll
mov
inc
pop
stos
cmp
insl
jnp
repz
xlat
mov
lea
movsl
jecxz
lcall
lea
cmp
aad
cmp
fisttpl
lret
push
enter
sahf
inc
lods
imul
sar
cmp
jg
sarl
outsl
das
push
fistpl
enter
inc
stos
in
push
sti
lahf
jo
insb
dec
xor
roll
push
inc
mov
adc
imul
aaa
push
push
ret
sub
mov
xor
lea
mov
mov
imul
pop
pushf
xchg
in
mov
rcrb
aad
xchg
sub
rcrl
cmp
push
inc
xchg
adc
int3
pop
or
mov
sti
loope
imul
mov
inc
dec
scas
mov
xor
pop
divb
jnp
out
pop
lcall
and
xor
mov
je
mov
pusha
dec
jb
dec
cs
xchg
and
jno
mov
pop
add
push
jae
lock
sbbb
loopne
sbb
push
or
dec
jo
fcmove
in
push
and
push
xchg
xchg
imul
xor
arpl
fwait
mov
cmp
adc
ficompl
dec
pop
mov
dec
or
stc
adc
repnz
pop
iret
pushf
test
lds
inc
stos
push
cmp
sti
xchg
hlt
jg
sarl
mull
pusha
fcoml
mov
sbb
subb
mov
cmp
ja
push
mov
jge
jmp
xchg
sbb
dec
or
xchg
gs
mov
dec
pop
or
add
mov
add
cmp
mov
cmp
mov
pop
out
jge
mov
dec
mov
pop
into
inc
xor
or
mov
cmp
mov
shll
and
out
sub
or
jge
jmp
cmc
setbe
adc
push
mov
subl
jecxz
in
mov
ss
mov
jbe
jae
fcompl
orb
xor
loope
dec
push
scas
adc
lahf
add
movsb
inc
xchg
cmp
addr16
loopne
mov
hlt
hlt
add
ja
or
fadds
xlat
popf
jp
mov
inc
mov
pop
mov
gs
xor
mov
sub
cltd
xor
into
inc
adc
mov
test
push
scas
jle
pop
xchg
rclb
imul
add
clc
cmp
dec
xor
xchg
adc
push
inc
xchg
pusha
cmp
adc
rclb
cmpb
sub
jle
mov
out
testb
adc
pusha
adc
shlb
fimull
aas
inc
std
xchg
mov
inc
loop
adc
enter
fsubl
mov
jae
sub
imul
xchg
cmp
fmuls
push
adc
lds
push
daa
lret
in
xchg
sbb
fwait
jnp
mov
xor
lods
add
pop
xchg
movd
push
sahf
pop
gs
inc
fidivs
mov
es
push
les
cmp
xchg
add
sbb
xchg
imul
fldt
divb
fcmovne
and
dec
dec
leave
jae
pop
lret
push
ss
push
inc
jl
in
xor
jbe
outsb
lock
movsl
dec
mov
imul
pop
cmc
mov
aad
outsb
pop
mov
dec
sub
cs
inc
xchg
loope
movsl
dec
std
aas
fsubrs
push
sub
push
clc
orb
cmp
or
add
ljmp
push
mov
cmp
jp
fcmovbe
mov
cmp
out
jmp
dec
leave
fcomps
mov
jg
adcb
hlt
ret
cltd
jae
mov
fxrstor
scas
out
inc
or
jno
or
mov
loopne
mov
ret
mov
notl
scas
xchg
clc
inc
inc
push
aas
push
in
scas
cld
sub
lcall
mov
sti
jge
pop
adcl
clc
test
pop
daa
lcall
aas
aam
in
dec
adc
push
lds
mov
xchg
mov
scas
lcall
fmull
cmp
cmpsl
dec
in
cmp
xchg
js
pop
cmpb
push
jnp
xchg
xor
xor
or
mul
lret
imul
jae
cmpsl
push
test
roll
dec
pop
mov
faddl
inc
pop
push
mov
xor
push
sahf
pop
mov
in
lahf
cmp
mov
cmp
mov
xchg
xchg
push
push
jno
cltd
xchg
enter
sub
add
push
ds
test
popa
stc
push
mov
jne
lods
lods
dec
imul
sti
mov
flds
in
insl
mov
or
fcoml
lret
jg
and
or
jp
bound
add
mov
add
push
push
icebp
push
adc
push
lret
cmc
or
fwait
jle
fwait
adc
xor
fistl
adc
pop
mov
mov
shll
shl
popa
fsts
mov
mov
nopl
push
and
in
ficoms
shlb
stos
xchg
pop
mov
sbb
or
inc
xlat
lods
push
mov
mov
scas
adc
xchg
or
repz
mov
ret
das
jmp
and
insl
dec
ror
scas
sub
xor
xchg
aad
add
shll
mov
mov
push
cmpsb
fsubl
popl
xchg
lods
neg
jg
icebp
ja
adc
scas
mov
aas
scas
imul
cmpsl
pop
pop
mov
mov
or
sub
shll
imul
inc
xchg
pop
adc
xlat
jge
sbb
cmpsb
fldln2
movsb
xchg
inc
add
ds
or
or
stos
add
and
mov
xor
fsubrl
aaa
sub
mov
sub
and
lret
cld
cmp
insl
add
leave
xor
mov
hlt
jl
push
adc
lods
cmp
add
pushf
sbb
test
cmp
mov
inc
mov
popa
adc
xor
pop
jb
mov
xor
inc
icebp
std
gs
jno
cwtl
sbbb
outsl
xchg
orl
inc
mov
add
jae
cmp
jmp
adc
inc
push
lret
ret
sbb
sub
out
adc
dec
loop
pop
testl
leave
mov
pop
scas
decb
sub
cmpsl
stos
mov
mov
sbb
scas
push
daa
insl
out
dec
inc
mov
jno
aaa
lahf
xchg
aas
jno
pop
sub
jns
cmpsl
mov
arpl
shrb
ret
cmp
cwtl
out
push
push
xchg
ret
and
rclb
xor
push
adc
mov
sbb
adc
xchg
out
pop
popa
scas
inc
or
mov
in
or
orl
jns
xchg
dec
push
outsb
or
fisttps
ss
ljmp
cmp
adc
push
shlb
rcr
cmp
xchg
mov
xchg
or
add
jmp
and
jns
fwait
add
xchg
jne
pop
mov
inc
dec
dec
xchg
mov
cltd
lahf
sub
aas
push
mov
lods
inc
out
paddusb
insl
push
ja
negl
into
cmp
daa
and
cmp
das
or
add
jmp
xor
cmp
xchg
js
push
mov
or
jecxz
adc
push
loop
fistpll
inc
fs
ret
push
pop
xchg
adc
gs
cld
sub
cld
outsb
and
loope
in
imul
js
ja
int3
mov
ss
arpl
dec
imul
bound
mov
sbb
xchg
mov
mov
add
scas
filds
loop
cmp
int3
lret
rolb
stos
movsb
dec
in
or
push
jno
mov
jae
and
adc
lock
cmp
jle
repz
fldt
cld
sub
insl
lret
ljmp
ds
std
mov
lods
gs
lock
pop
mov
js
shlb
sub
mov
cmp
mov
scas
pop
popf
enter
xchg
rolb
and
jnp
dec
cmpsl
lcall
cwtl
push
ret
mov
movsl
lods
and
dec
fstp
or
xchg
or
adc
lcall
dec
aam
mov
push
jae
or
in
movsl
aaa
pop
mov
xor
idivl
popa
rol
and
lds
pop
xchg
fnstenv
cmp
cmpsb
cmp
mov
fs
dec
mull
jo
lock
xchg
aaa
lea
stos
lds
addr16
rolb
pop
repnz
imul
add
scas
adc
sarl
repnz
cmc
ljmp
dec
add
and
andb
jmp
ja
orl
shll
inc
push
mov
mov
xor
xchg
xchg
adc
xor
mov
cwtl
jne
enter
ja
sub
push
fstpl
or
push
mov
popa
adcb
jae
inc
cmp
xchg
scas
cltd
int3
add
in
cmp
fsub
cmp
ret
jns
daa
icebp
repnz
movsl
adc
pop
inc
jg
pop
or
add
daa
mov
in
in
sbb
loopne
jo
inc
and
inc
mov
dec
mov
dec
fimuls
sarl
and
aaa
aad
mov
rcrl
mov
pop
xchg
jae
rclb
xor
mov
scas
pop
repz
adc
lock
lret
pop
in
inc
aas
push
faddl
cld
mov
cmp
repnz
scas
stc
negl
or
scas
pop
cmp
in
cmp
add
fimull
into
std
sub
push
mov
ljmp
mov
adc
cmp
pop
mov
and
cmp
mov
mov
into
popf
gs
mov
rep
push
mov
outsl
in
pop
jp
push
inc
pop
cmp
jae
and
inc
iret
mov
sub
insl
stc
jns
cwtl
or
dec
or
xor
fcomp
das
in
adc
ljmp
or
or
inc
and
mov
addb
and
push
pop
and
pop
hlt
jmp
cld
inc
pop
outsl
pusha
loopne
or
sub
cld
outsb
sub
and
jb
lea
sbb
or
push
outsb
pop
clc
ret
mov
pop
sbb
pop
out
adc
cs
jmp
cmp
xor
sub
push
imul
jo
mov
adc
sbb
lcall
push
pop
mov
jp
xchg
mov
les
dec
das
out
jae
add
pop
pop
adc
inc
lret
test
xchg
mov
aam
jne
mov
push
inc
push
sub
dec
pop
fwait
xor
leave
movsl
mov
adc
icebp
adc
mov
clc
leave
sbb
mov
push
mov
push
xor
ja
inc
xorb
in
jae
sbb
xor
mov
data16
cli
jns
mov
nop
repnz
into
outsb
inc
in
jecxz
add
pop
or
mov
push
inc
add
push
and
mov
mov
iret
iret
mov
mov
cmp
xor
push
loopne
ds
lea
out
call
div
add
mov
scas
adc
adc
scas
mov
iret
sti
add
lods
les
sbb
and
cmp
out
out
ret
jb
loope
enter
bound
mov
lods
dec
pop
and
and
popf
sbb
mul
ljmp
in
lods
mov
sahf
aam
incl
inc
ss
ret
mov
add
test
fimuls
add
push
xor
out
fidivrl
das
mov
pop
in
fwait
mov
addb
dec
out
jbe
jns
adc
cwtl
ljmp
push
mov
std
pop
outsb
subb
into
lahf
shl
adc
int3
and
jg
jns
dec
lcall
cmc
dec
add
sub
push
mov
cmc
ja
mov
inc
les
jl
lcall
sub
stc
and
loopne
adc
lock
xchg
outsb
jp
jnp
add
jp
xchg
in
inc
insb
neg
dec
out
jle
sub
sub
call
mov
sub
cltd
mov
fcomip
adc
dec
subb
adc
add
lret
pop
mov
int3
std
ss
es
dec
pop
sub
and
in
fldcw
fdivs
dec
and
hlt
sbb
js
push
xlat
adc
cli
and
or
inc
mov
cmp
and
jmp
paddb
das
sub
and
hlt
jge
jg
jp
inc
hlt
aaa
adc
sbb
std
sbb
arpl
ljmp
rolb
in
and
jp
sbb
lahf
jb
push
mov
pop
adc
call
test
add
call
in
lock
dec
jl
mov
test
mov
push
xlat
sub
out
cmpl
sbb
adc
mov
in
pop
fadds
es
ja
pop
loope
adcb
insb
ret
scas
outsl
sti
jecxz
movsl
mov
add
or
sub
push
addr16
ficoml
test
ficoml
mov
adc
mov
dec
repnz
in
push
push
fildl
pushf
call
daa
call
sub
mov
sbb
cmc
hlt
mov
cmp
mov
jns
xchg
subps
push
xchg
jo
imul
adc
push
mov
sbb
loope
cmp
xor
out
push
cmp
push
push
mov
xor
jp
int3
imul
enter
mov
push
repz
xor
sbb
popf
mov
test
pop
aaa
aaa
fs
mov
xor
lods
sub
test
imulb
shll
mov
push
sbb
cmp
dec
cmp
push
inc
and
in
mov
pop
call
sbb
xchg
mov
and
pop
sub
and
mov
test
sbb
dec
call
imul
outsb
dec
push
cmp
cli
jp
notb
shll
inc
mov
jge
mov
data16
andl
mov
movsb
mov
pop
je
pop
sbb
push
mov
push
adc
ss
dec
int
cmp
push
mov
jge
xorl
mov
cmc
push
pushf
or
xchg
aam
shlb
and
add
ret
push
push
fsubs
inc
push
int3
pop
xchg
adc
dec
ficoms
jne
popf
pop
mov
outsl
xorb
fldt
inc
iret
fldl
cwtl
andb
dec
mov
ret
sub
cltd
lahf
es
mov
movsl
jmp
and
cmp
dec
xchg
push
pop
cld
xchg
mov
sbb
xor
jg
jle
cwtl
pop
push
aaa
mov
out
xchg
push
push
adc
mov
xchg
or
inc
push
pop
xlat
outsw
pop
jb
stc
int
or
shll
mov
jae
or
add
and
cltd
jmp
mov
dec
mov
and
dec
subl
cmp
movsl
fsubr
and
loop
cmp
pushf
notl
jno
mov
push
rcl
lret
sbb
mulb
pop
fists
in
fcmovnb
aam
arpl
or
lods
in
into
and
shrl
jg
loope
out
xor
sarl
shlb
jmp
movsb
add
sub
movsb
jns
pushf
out
inc
lea
movsl
mov
call
cld
lds
pop
xchg
mov
imul
mov
mov
xor
xor
in
call
test
and
xchg
lcall
int
mov
mov
lret
fcomps
cli
pop
pop
push
std
xchg
lods
sbb
cmp
call
sbb
popa
or
push
jo
push
cwtl
add
cmpsl
outsl
push
pop
insl
daa
jno
out
test
repz
lret
sbb
filds
clc
jmp
dec
or
rcl
push
pop
rclb
sub
dec
out
dec
or
orl
pop
jmp
rcr
sbb
fsub
popa
les
mov
ljmp
cli
repnz
jmp
lds
stos
cmpsl
push
push
push
mov
movsl
sahf
adc
aam
sar
lea
nop
sbb
fsubp
pop
testl
add
adc
xchg
xchg
dec
sub
iret
repnz
lahf
loope
sbb
repz
movsb
jle
mov
jp
add
mov
cmc
setnp
pop
xchg
push
lods
lcall
xchg
sti
mov
lret
ds
and
mov
rcll
xchg
add
in
mov
jmp
mov
dec
cli
sub
xlat
in
inc
adc
pop
aam
jnp
add
cmp
jnp
andb
sub
imul
pop
cmp
aaa
sub
dec
leave
pop
mov
mov
add
or
aas
stc
xchg
or
xchg
ja
insl
ret
int3
int3
xchg
lret
dec
mov
mov
clc
inc
inc
pop
mov
inc
pop
cli
stos
push
xor
pop
pop
pop
sub
iret
inc
pop
adc
shrb
jmp
fwait
je
adc
into
push
pop
xchg
frstor
dec
test
icebp
ret
push
mov
fdivrs
jl
cmpsb
push
jge
lods
inc
addb
les
push
jb
ds
dec
mov
mov
xlat
push
mov
popf
pop
fwait
pop
ret
jp
jl
jns
add
lret
clc
mov
mov
add
mov
pop
lds
aaa
and
mov
and
or
jecxz
cltd
push
in
mov
cmc
insb
and
mov
mov
sub
mov
test
inc
inc
testl
cltd
adc
out
mov
out
in
push
addl
push
sbb
adc
fs
imul
push
ret
xchg
subb
sub
cmp
lcall
xor
movsl
addr16
nop
sbb
cmc
dec
adc
cli
sahf
jo
inc
push
xchg
adc
fcomps
call
inc
cs
sbb
mov
dec
sti
dec
enter
fildl
rorl
in
lret
xchg
dec
jnp
int3
daa
push
cmp
xchg
sbb
xor
nop
out
dec
out
cmpsb
xor
pusha
stc
rorb
dec
push
pop
addl
int
into
adc
push
adc
insl
es
adc
pop
repnz
test
push
mov
dec
or
cli
sbb
clc
xchg
test
add
mov
inc
add
jae
inc
xor
jg
mov
push
in
xor
inc
lret
test
sub
sub
sbb
movsl
jne
les
jmp
adc
lahf
xchg
add
pushf
and
xor
cs
or
loopne
int
lods
xor
loope
sahf
adcb
push
sub
mov
add
es
inc
ss
es
cmp
lods
fstl
xchg
pop
jecxz
mov
sub
rolb
pop
jge
andl
jne
mov
dec
jbe
mov
sub
testb
jecxz
sbb
mov
jbe
lahf
pop
xchg
xchg
cmp
mov
insb
lea
mov
adcl
mov
sbb
leave
lds
sti
xchg
inc
popa
pop
arpl
in
jae
cmp
popf
rcl
sbb
cmp
mov
loop
jns
outsb
addr16
cmp
imul
pop
and
sub
icebp
push
sahf
scas
or
into
xchg
cli
sub
mov
xor
ror
adc
add
rcrl
hlt
hlt
test
adcl
out
mov
sub
cmp
cmpsb
arpl
leave
push
cwtl
xchg
repnz
cld
mov
sub
push
int3
jl
sti
jge
push
mov
adc
stos
mov
jmp
sahf
push
push
ret
movsl
cmp
ror
jb
jl
inc
xor
dec
call
dec
pop
es
inc
or
std
loopne
int
icebp
lcall
push
pop
inc
xlat
sub
enter
cmp
xchg
popa
lock
jmp
mov
and
and
pusha
sbb
sub
data16
or
or
inc
rcll
scas
sub
insb
or
dec
in
shll
vpsrlw
jge
sub
push
aad
daa
mov
test
mov
pop
xor
daa
or
push
mov
cmp
subb
dec
mov
inc
mov
add
jne
mov
sahf
sub
insb
lahf
push
lods
or
sbb
push
ja
loop
in
or
cwtl
icebp
push
aaa
xchg
insl
xchg
stos
pop
pop
mov
dec
adc
lods
xchg
and
test
pop
push
and
jo
int
les
xchg
test
rolb
orl
sub
daa
xorl
mov
lcall
int
inc
ret
dec
mov
dec
inc
mov
test
inc
gs
sbb
popa
cmc
shll
ja
pop
sub
iret
ret
test
and
push
pop
lock
leave
fldenv
hlt
lods
and
or
arpl
push
cmpsw
jmp
lea
bound
add
mov
mov
cwtl
cmpsb
pop
mov
mov
loope
sub
mov
and
jl
rorb
movsl
and
sarl
xchg
mov
daa
fsubrl
test
jo
nop
mov
push
dec
or
jne
and
adc
insb
dec
ret
outsl
imul
fdivl
fiadds
cltd
mov
enter
adc
push
mov
jmp
ss
rcrb
fdiv
mov
dec
div
adc
xchg
mov
mov
daa
outsb
mov
mov
pop
jbe
or
repnz
leave
dec
pop
dec
jle
mov
cmp
push
sub
pop
sub
sbb
add
cmp
xchg
cmp
mov
push
test
pop
lret
push
std
mov
fsubl
leave
into
cmpb
imull
out
cs
lret
jecxz
ror
test
out
add
push
or
adc
mov
or
bound
enter
adc
clc
out
test
pop
jmp
cltd
pop
jp
push
inc
sahf
inc
aaa
pop
fistpl
cmpl
xorl
iret
sbbb
out
or
add
fcompl
cmc
mov
cli
and
iret
mov
mov
cmp
xlat
mov
or
jmp
dec
dec
sbb
inc
loopne
bound
add
cmovae
or
lods
push
cmpsl
stos
sar
pop
loope
dec
sar
rcrb
adc
movsb
orb
mov
xchg
xchg
orl
pop
pop
faddl
mulw
pop
jecxz
ja
js
add
add
sub
jl
dec
xchg
sub
inc
pop
rorb
jg
dec
adc
sbb
fistps
jno
mov
rdtsc
add
cmp
push
mov
add
rcr
dec
push
cmp
ljmp
inc
addl
push
dec
popa
fstps
add
and
sti
lret
div
mov
jl
jno
pop
sbbb
dec
pop
andb
iret
or
sub
lods
iret
and
scas
lods
fs
ja
addr16
hlt
insl
jl
mov
stos
sub
adc
lds
popa
mov
xorb
orl
and
pushf
aad
loopne
pop
out
pop
cmpsb
xchg
xchg
mov
popf
dec
mov
rol
adc
insl
jl
cmpsb
cwtl
or
and
loope
dec
inc
cmpl
fwait
jnp
sub
nop
sub
and
cmp
leave
div
lock
xchg
add
xchg
mov
cmc
popa
mov
rorb
ficoms
cmp
xchg
cmp
stos
push
fldenv
adc
push
in
jb
pop
jp
lcall
int3
add
or
faddl
jbe
push
or
inc
pusha
fdiv
inc
add
fdivs
fldl
mov
aam
orb
mov
ljmp
test
aad
cltd
jae
adc
imul
fdivrl
cli
or
mov
sbb
imul
add
cmc
outsb
or
and
jns
inc
push
insl
cmpl
pop
outsl
push
xchg
cld
movsl
arpl
pop
loop
cld
enter
and
repz
or
popf
int3
cwtl
loop
loopne,pt
mov
xor
pop
dec
jo
push
outsb
mov
push
scas
pop
mov
pop
bound
aad
sbbb
push
addb
fmuls
out
xchg
mov
adc
gs
cmpsb
clc
dec
dec
in
mov
add
fs
push
push
out
mov
es
mov
shll
into
sbb
daa
pop
dec
lock
push
xor
dec
or
pop
pop
sbb
call
fwait
ss
dec
ror
pop
jo
stos
or
sarb
mov
lcall
fnsave
sbb
lret
jg
addr16
push
fimuls
pop
dec
jo
cmp
nop
dec
lods
ret
cmp
mov
in
cmp
popf
add
sbb
popf
lods
xchg
jl
jns
mov
sbb
cwtl
mov
or
and
rcll
int
sub
mov
push
sub
inc
cmp
and
push
mov
add
push
leave
ja
push
inc
push
xor
data16
and
test
cltd
out
ds
ljmp
jge
insb
cmp
lock
hlt
fsubr
imul
sbb
addr16
add
data16
insl
mov
or
dec
cmpsl
jmp
inc
cmp
xor
fisubrs
xchg
sub
pushf
fdivr
mov
xor
jp
lahf
dec
mov
shlb
push
nop
or
shl
movsl
push
adc
or
loop
push
or
hlt
dec
sbb
inc
in
or
sbb
xor
repz
mov
cmp
and
pop
or
js
cmc
rorb
cli
jns
sarb
mov
pop
jae
sbb
dec
pop
nop
xor
or
lcall
ja
cmp
push
jmp
pop
dec
ljmp
pop
jne
push
xlat
roll
test
lods
cmp
dec
ficoml
dec
cltd
sbb
xor
inc
in
fidivl
sbb
add
cs
es
in
mov
in
insb
popf
in
cmc
xor
stc
pop
das
lcall
mov
out
push
or
pop
mov
mov
lock
nop
add
pop
and
dec
test
pop
push
add
mov
call
orps
fld
lock
pop
adc
or
mov
rclb
icebp
inc
loop
add
sbb
fnstsw
loope
or
push
test
ret
jecxz
xchg
mov
or
xchg
xchg
adcl
pushf
jp
jae
mov
loop
sbb
cwtl
or
scas
fists
or
popa
or
and
sbb
adc
arpl
xchg
cli
push
mov
jae
dec
aas
aam
std
nop
je
dec
fs
inc
inc
lds
or
or
mov
sub
mov
gs
mov
fcomi
mov
mov
data16
cmp
xor
out
xchg
jns
or
push
push
es
int3
mov
fildl
pop
loopne
adc
mov
ret
data16
mov
add
je
jge
push
std
test
popa
push
roll
mov
add
mov
cld
outsl
cwtl
cld
testl
ljmp
outsl
rorb
or
lret
jl
add
jecxz
jmp
mov
std
jo
in
mov
lds
leave
inc
roll
fimuls
push
mov
bound
pop
sarb
and
mov
xchg
clc
stc
jl
sahf
std
nop
testb
push
fistl
out
iret
dec
xlat
loopne
xor
mov
sub
nop
xchg
mov
nop
in
mov
in
mov
out
out
ja
flds
lods
mov
movsl
idivb
sahf
push
mov
mov
inc
sahf
loopne
stc
sbb
scas
mov
test
out
adc
pop
pop
addr16
hlt
lds
and
sub
ss
pop
test
sbb
mov
xor
cmp
ret
sbb
add
hlt
sti
add
pusha
add
jo
sub
push
cmp
aam
push
jno
pop
xchg
pop
dec
ret
leave
dec
pusha
scas
or
repz
sbb
push
pop
call
std
inc
sbb
jg
lea
scas
and
jae
add
insl
in
sbb
loopne
movsl
lcall
test
cltd
mov
add
adc
mov
jno
cmp
imul
hlt
jle
pop
mov
mov
and
cmp
loopne
xchg
pop
and
sahf
or
adc
xchg
jo
adc
sahf
mov
int
mov
push
pop
lcall
pop
cmpb
ret
scas
outsb
fldt
push
jmp
movsl
jae
bound
popa
xor
xchg
dec
push
aam
mov
inc
cmpsb
mov
lcall
jb
dec
daa
out
jb
insb
jle
xchg
and
add
cmpsb
mov
push
add
shlb
push
ficoml
sbb
je
or
xchg
ret
arpl
int
in
int
lcall
push
inc
popf
ja
fcmovnbe
test
xchg
and
sarl
pusha
mov
insb
jg
xchg
dec
dec
xor
mov
xor
cmpsl
shl
je
inc
lods
xchg
cmp
movsl
dec
test
lcall
out
inc
stos
repz
lds
stc
push
mov
sahf
mov
and
mov
adc
popw
dec
std
inc
clc
fidivs
les
js
loop
fs
pop
mov
mov
sbb
aam
out
mov
adc
addr16
add
ss
jge
xor
xchg
notl
sub
cmp
ret
out
dec
dec
icebp
push
xchg
xor
mov
les
jae
jbe
aam
pop
rcrl
loop
dec
adc
addl
popa
dec
cmc
mov
adc
inc
mov
ret
cmp
loopne
movsb
add
outsl
pop
mov
ret
loope
loop
xchg
stos
jne
xchg
repnz
sbb
mov
xor
add
mov
add
test
rcll
out
jb
ss
ret
shlb
xor
mov
mov
fbstp
push
push
fcmovbe
fwait
jg
pop
sahf
ret
dec
rorb
test
repz
add
fildll
lods
dec
cli
jge
insb
out
in
sub
mov
mov
jbe
mov
adc
xorl
xorb
fnstenv
inc
scas
ret
mov
pop
inc
add
addl
cld
add
or
imul
outsb
call
jl
ret
out
cmp
out
fisttpl
mov
mov
mov
mov
shll
jge
in
outsb
pop
ret
adc
sub
pop
pop
adc
pusha
or
mov
imul
inc
xchg
cmp
xchg
jno
scas
rcr
ds
hlt
jg
inc
fnsave
adc
stc
jo
jns
ds
incl
in
mov
add
jb
stos
adc
loope
push
cld
test
xchg
xchg
or
data16
lahf
push
orb
movsl
bound
cli
push
test
or
int
adc
orb
stos
in
cmp
pop
in
dec
int3
repz
xchg
mov
fcomps
dec
jns
xchg
sbbb
ret
xchg
mov
popa
xor
inc
mov
sti
repnz
nop
loopne
jb
adc
sar
or
pop
jae
pop
mov
aaa
cmc
mov
mov
add
push
enter
mov
mov
mov
sub
lds
out
jge
pop
stc
jno
leave
mov
sub
ret
lods
inc
stc
lret
rorl
aas
pop
test
sbb
adc
jge
adc
mov
mov
rcrl
hlt
test
call
or
data16
and
mov
lea
test
mov
cmc
jge
dec
fld
mov
es
cld
scas
pop
mov
adc
mov
js
loopne
push
shll
popa
cmc
add
xchg
jmp
lock
pop
push
sub
arpl
cmp
xor
inc
mov
adc
mov
movsl
adc
pop
jecxz
dec
cmc
pusha
sub
sbb
iret
lret
fnstenv
mov
xchg
mov
pop
mov
popa
adc
add
push
inc
cli
mov
cmp
mov
or
jge
sti
call
mov
pop
and
dec
dec
dec
bound
call
sub
pushf
je
sbb
aas
xlat
sub
in
xlat
lretw
loop
lahf
and
js
lahf
jae
ja
repz
sahf
testl
or
gs
lret
gs
xchg
add
hlt
cltd
fmulp
js
push
js
aas
out
shll
cmpsl
movsb
sub
rcrb
test
outsb
mov
stc
fistps
pop
sbb
iret
mov
sti
pop
mov
mov
aam
push
js
mov
mov
jecxz
subl
aad
call
nop
in
push
pop
lea
call
dec
pusha
dec
data16
mov
lcall
sarl
jnp
fsubs
and
fistps
out
and
fbstp
cmp
cmp
jae
enter
jbe
mov
in
sbb
test
int
inc
leave
gs
test
dec
lds
mov
or
jno
mov
and
and
loopne
test
stc
incb
pusha
pop
jp
push
jmp
dec
orl
fwait
cmpsl
cmp
inc
insb
xchg
sub
push
jae
aad
popf
mov
and
cmp
push
cmpsb
mov
inc
push
xchg
outsl
add
sbb
repz
xor
and
add
mov
pop
push
push
mov
mov
sub
outsl
mov
cmc
xlat
xchg
jne
mov
mov
dec
pusha
hlt
repnz
adc
out
xchg
sub
int3
add
lock
call
imul
leave
stc
scas
add
jnp
fsubs
xchg
sbb
push
in
test
movsl
iret
inc
and
lcall
stc
cmpsl
cmp
mov
mov
inc
and
cmc
int
shl
pop
in
cmpsb
inc
lds
push
add
out
xrelease
mov
pop
mov
jl
or
mov
rcll
dec
mov
aas
das
or
xchg
sub
cmp
out
bound
aaa
jecxz
test
imul
push
cmp
and
data16
mov
jo
into
clc
cltd
in
jmp
in
inc
mov
cmp
insl
fsubrs
vmovss
adc
stc
test
cltd
mov
mov
cmp
popa
popl
loope
lods
fsubrs
ss
call
sarl
xor
out
out
lods
leave
out
push
sub
pop
je
inc
in
pop
ret
ja
cmp
mov
sbb
and
adc
xor
inc
or
pop
cmp
jno
push
push
inc
push
or
shr
mov
xchg
jae
int
in
pop
das
aam
test
mov
xor
fs
mov
xchg
test
dec
stos
movsb
fdivs
adcb
dec
xorl
lcall
push
rcr
lds
cmp
lret
mov
add
xor
adc
push
sahf
mov
push
lods
and
lcall
mov
xchg
xlat
stos
rolb
movsl
sbb
adc
sub
loopne
and
xor
int
ds
decl
push
xchg
xchg
xchg
jp
inc
cmpsb
jbe
mov
enter
leave
push
int
xchg
fs
in
inc
out
mov
shlb
repz
xor
les
not
push
push
add
into
jb
mov
enter
push
xchg
cmp
sbb
mov
out
cmp
dec
aaa
adc
and
adc
in
xchg
lods
mov
xchg
out
in
mov
inc
int3
dec
pop
aas
adc
mov
mov
shlb
sub
cld
cmp
or
loop
inc
or
dec
sub
jae
or
lods
in
sbb
and
push
adc
mov
lock
mov
or
and
incb
and
dec
data16
jge
jo
push
xchg
push
push
sub
push
es
insb
repz
jne
adc
dec
mov
in
mov
testb
out
stos
cmp
sbb
cmpsl
loope
ret
cmp
xchg
jl
outsb
and
push
addr16
dec
mov
shrb
xchg
movb
xchg
lea
insl
nop
test
jge
pop
int3
cmp
or
jp
clc
fsubrs
into
xor
sub
add
push
push
jle
pop
xlat
jle
insl
jns
mov
lea
ja
adc
shll
jne
sahf
and
push
sbb
add
dec
insl
xorl
je
icebp
cmp
fnstcw
fidivl
dec
mov
inc
imul
lock
jne
ja
inc
add
xchg
test
stc
outsb
lds
mov
xor
sbb
je
sahf
lods
xchg
dec
cld
ret
or
addr16
inc
push
lcall
mov
pop
movsb
dec
enter
outsl
cmp
dec
mov
ficoml
pop
ds
adc
stos
mov
les
xchg
stos
or
faddl
push
insb
imul
push
jno
jg
test
movl
rol
out
mov
cmc
sahf
xchg
pop
rcrb
push
arpl
js
xor
dec
fwait
mov
dec
xchg
fcmove
aas
jcxz
imul
scas
xor
adc
xchg
or
aas
jns
out
mov
add
adc
out
ja
pop
rolb
mov
and
daa
data16
jnp
lcall
sub
inc
adc
dec
jmp
adc
cmc
push
pop
imul
push
sub
je
and
mov
push
loope
fdivrs
jle
out
jp
adc
xor
push
fisttpll
mov
aaa
popa
and
pushf
dec
add
push
in
push
pop
fwait
lret
ljmp
stc
mov
repz
enter
and
aas
into
test
push
adc
notl
mov
das
jo
inc
mov
jnp
mov
lods
push
cli
sahf
pop
and
cmp
fsts
add
jg
mov
xor
mov
test
out
insb
or
rcrb
cmp
xor
xchg
imul
scas
testb
mov
leave
out
aaa
xor
inc
lods
add
pop
jne
pushf
out
push
lcall
sub
or
cli
add
popa
push
roll
lret
pop
mov
inc
les
pop
popf
push
aam
idiv
pop
clc
fistpl
pop
cmp
into
stos
cld
push
stos
xchg
ds
jecxz
outsb
or
pop
adc
push
or
movsl
inc
mov
insl
sbb
xlat
pop
push
pop
stos
fsubl
cwtl
pop
out
jp
cmp
test
and
addr16
inc
push
dec
dec
or
push
dec
stc
ret
dec
push
daa
mov
lock
data16
test
cltd
dec
lcall
call
and
addb
in
push
inc
mov
sbb
loopne
mov
frstor
cmp
test
xchg
shl
xchg
sbbb
repnz
jg
imul
sbb
outsb
cmp
pop
jle
mov
orl
add
aaa
adc
cmp
imul
inc
pop
sahf
mov
cmc
xor
lock
lods
inc
and
mov
pop
adc
mov
shrl
xchg
add
xchg
pop
ret
std
inc
mov
pushf
pop
pushf
insb
sbb
jl
mov
dec
filds
mov
jo
cmp
out
out
clc
sahf
loopne
jo
cwtl
stos
mov
add
stos
sbb
das
fistps
mov
mov
fdivr
cld
sahf
clc
xor
imul
imull
insb
fidivrs
cld
push
out
xchg
mov
rcrb
sbb
inc
push
ficoms
cwtl
pop
mov
sub
decb
add
mov
adc
mov
sbb
add
mov
dec
xor
add
push
lds
sub
cltd
aas
dec
push
mov
inc
xorb
stos
loopne
jp
xchg
xchg
mov
push
pop
popa
push
jl
scas
push
jno
mov
push
lcall
pop
in
sbb
aam
aam
adc
push
pop
stos
lds
fidivs
mov
fsts
insl
loop
xorb
pusha
loope
dec
aad
cmp
add
rcrb
jp
orl
xlat
dec
das
sub
out
inc
push
mov
cmp
mov
adc
pop
in
lret
mov
sbb
inc
xchg
add
shlb
jae
xchg
in
negb
sbb
out
in
jne
push
adc
loope
add
mov
sub
sbb
jg
and
test
inc
jl
adc
shr
inc
cmove
in
subl
jle
jns
andb
test
loop
xchg
or
pop
pop
iret
sbb
push
or
or
insl
insl
add
popf
leave
lds
push
jnp
push
je
mov
push
aas
adc
xchg
fwait
pop
out
push
adc
mov
jmp
mov
jg
movsb
fmulp
cli
iret
int3
div
adc
jno
in
or
mov
cli
ljmp
aaa
je
pop
dec
cmpsb
flds
inc
push
int3
mov
fmul
cs
popa
add
ror
fwait
adc
sub
stos
jbe
mov
xor
add
sbb
pop
sub
es
sbbb
ds
mov
aam
mov
icebp
pop
xor
jl
sbb
aaa
jle
cmp
pushf
ds
ss
push
xchg
movsb
leave
into
sbb
outsb
sbb
insl
add
imulb
jle
testb
sub
xchg
popf
push
add
jae
testb
xchg
mov
aam
xchg
mov
scas
popf
shrb
pop
cwtl
hlt
dec
call
mov
fistl
jle
rolb
lret
add
lock
adcl
imul
fdivrp
pop
outsl
add
xchg
cli
adc
addr16
enter
xchg
test
cs
in
addr16
iret
rorl
fiaddl
rol
or
jg
lret
push
or
imul
shrl
ss
or
jmp
xor
loopne
mov
inc
jge
js
push
cld
push
inc
sbb
xor
scas
rclb
mov
mov
push
lods
fdivrl
mov
mov
push
dec
clc
test
lret
inc
test
andb
dec
add
insl
fidivs
outsl
jno,pt
iret
cmp
ret
adc
ret
mov
cmp
push
sbb
sub
lock
je
cmpsb
orl
fsubrl
fwait
inc
sbb
and
sbb
outsl
add
pop
stos
cwtl
lea
cwtl
xor
xchg
mov
cmp
subl
dec
adc
sbb
cmp
jge
push
cmpsl
into
mov
les
ret
mov
sub
dec
mull
lahf
jo
jl
xor
sub
mov
rorl
lahf
mov
ror
bound
sub
sbb
dec
enter
xchg
dec
fcomip
out
adc
push
cmp
or
in
push
xchg
pop
mull
sub
pop
ss
fimull
clc
dec
add
lahf
sbb
mov
mov
stos
test
pop
xor
dec
leave
sahf
sti
in
jp
test
jmp
dec
push
pusha
sub
mov
mov
daa
mov
push
ja
int
adc
mov
hlt
incb
adc
aam
jl
cmpsb
pop
in
rcl
arpl
jmp
xchg
test
sub
in
push
bound
cmp
in
cmp
sub
push
in
xchg
dec
inc
js
cltd
inc
or
data16
popf
shlb
dec
mov
push
es
test
mov
inc
out
mov
jmp
out
push
mov
dec
dec
pop
test
sub
imul
and
sub
decl
sub
call
popf
cmp
add
lret
subl
popa
and
add
mov
pop
or
mov
pushf
fisttps
inc
arpl
mov
add
mov
pop
mov
or
sub
mov
jnp
mov
or
sbbl
in
int
mull
stc
out
sub
pop
addr16
jle
fstps
mov
sub
out
jecxz
add
orl
fdivs
add
mov
shr
aas
push
xchg
fs
inc
lea
dec
sarb
add
mov
and
sbb
ds
xchg
in
sbbb
rcrl
popa
jge
inc
sbb
inc
pop
andl
dec
shll
pusha
or
stos
lock
mov
mov
int
shrb
jns
push
sub
sarl
pop
sub
aad
mov
sbb
mov
pushf
inc
ficomps
pop
in
jg
iret
in
sahf
mov
nop
lcallw
cld
xchg
add
cmc
cld
mov
lcall
ljmp
lret
jl
pop
mov
shlb
loope
outsb
aad
push
rclb
inc
cmpsl
and
mov
pop
arpl
inc
mov
lret
mov
repz
mov
and
pushf
inc
add
outsl
pop
cmp
in
lret
ret
adc
inc
cmp
stos
cli
std
lret
data16
sbb
lret
and
mov
inc
in
jmp
pop
sbb
notb
in
aas
dec
or
fidivl
sbb
push
adc
mov
xlat
clc
loope
mov
jno
lds
scas
or
popl
cli
sub
out
iret
mov
mov
mov
cld
ret
aad
shll
xorb
jmp
sbb
les
add
fdiv
lds
jmp
jne
ret
ljmp
loop
mov
cs
pop
pop
test
test
lcall
mov
outsl
in
idivb
mov
movsb
xchg
rorb
mov
lds
xor
ret
pusha
fcmovb
arpl
mov
dec
jno
inc
adc
add
dec
or
jge
lds
loop
add
es
mov
outsb
hlt
or
xchg
lret
out
insb
pop
jae
sbb
sbb
movsl
aam
cmp
dec
arpl
inc
xor
cli
mov
into
sahf
inc
dec
je
mov
adcl
cmpsl
in
imul
and
ja
notl
xor
sbb
icebp
cmp
cmc
dec
in
adc
xchg
jl
mov
fmull
adc
scas
dec
jo
mov
fiadds
jae
mov
push
in
cmpsb
rcrb
pop
mov
push
xchg
loope
mov
sbb
sahf
xchg
mov
xchg
jp
sub
hlt
or
add
push
ret
bswap
pop
inc
or
dec
jl
xchg
or
pop
les
add
mov
push
je
repnz
lods
dec
or
cmpsl
in
push
jmp
mov
aas
icebp
cmp
js
pop
mov
jecxz
jbe
fidivl
dec
pusha
lds
or
mov
mov
lods
dec
data16
and
movsl
push
clc
adc
stc
lock
lds
dec
aam
mov
out
jmp
jecxz,pn
outsb
mov
lods
jns
fwait
ljmp
cmp
dec
bound
pop
ljmp
adc
repnz
push
push
in
mov
pop
mov
mov
leave
push
arpl
fsubrs
adc
push
movsl
stos
or
xor
add
xchg
loope
cmp
nop
adcb
mov
stc
lods
lcall
movsl
mov
lret
push
jns
cmpsl
lock
jle
or
sti
mov
sub
sub
ret
jge
int
sarb
and
repz
outsl
push
loope
or
popa
dec
aam
rol
cmp
cwtl
into
mov
std
dec
mov
cltd
lcall
inc
es
lea
cmp
and
pop
test
inc
insb
out
jnp
xchg
stc
adcb
stos
rcl
loopne
movsb
pop
in
aad
adc
or
stos
pusha
xlat
mov
jp
pushf
or
jbe
xor
mov
cmpsl
add
pop
leave
add
add
mov
clc
mov
insl
nop
jecxz
ret
lea
xchg
scas
push
outsb
jb
push
mov
mov
fs
dec
stc
jo
cmp
jl
add
stos
xchg
popf
je
insb
cmp
xor
mov
cmp
idivb
mov
or
adc
add
clc
pop
call
hlt
mov
xchg
and
mov
sub
jmp
push
loopne
repnz
repnz
shlb
aaa
cmp
loop
xor
int3
mov
icebp
mov
cmp
sti
mov
lcall
and
insl
int
in
inc
push
add
andl
stos
std
cltd
adc
push
inc
stos
test
lret
mov
xor
test
jb
jg
ficoms
aaa
aad
cltd
ss
mov
pop
inc
cmpsl
loop
pop
push
addr16
loop
mov
push
mov
pop
sub
out
adc
loop
xchg
and
jp
jns
xor
mov
cmp
mov
loop
lret
jne
xor
aad
push
aam
push
daa
movsb
pop
jle
sbb
inc
xor
xor
das
jo
test
adc
lods
scas
mov
xor
shll
jne
test
mov
ljmp
hlt
push
inc
lret
mov
clc
mov
or
adc
inc
test
jbe
adc
repz
iret
push
pop
push
cmp
iret
add
mov
sbb
jne
mov
call
or
and
int
outsb
push
mov
push
fistps
xchg
lret
ror
or
repz
mov
add
fnstenv
arpl
jecxz
or
stos
mov
cmp
int
jne
in
fiaddl
and
iret
mov
movsb
aam
jne
jmp
pop
mov
cmpsb
ds
out
lea
test
enter
sbb
fnsetpm(287
lcall
push
xchg
push
xchg
jne
lea
std
fidivrs
push
or
loope
in
push
negb
sub
xchg
cmp
dec
ret
jp
stos
push
jbe
mov
sarl
mov
test
xchg
es
or
push
in
and
xchg
fists
nop
popf
imul
flds
sub
sbb
ss
aas
movsb
mov
jge
cmp
ret
and
out
std
pop
sarb
clc
movsl
sbb
sub
xchg
icebp
dec
cmp
daa
mov
in
in
popa
xor
andl
rorb
push
jle
scas
xchg
and
mov
mov
adc
xchg
push
xor
hlt
test
lret
mov
sahf
mov
fstpl
mov
pop
xchg
mov
ljmp
mov
loopne
cmp
nop
movsb
test
jge
pop
jbe
xchg
mov
mov
xchg
orl
mov
mov
es
loope
cmp
loopne
lds
xchg
pushf
scas
stos
ficoml
fs
push
pop
cmpsb
sbb
popa
cmp
pusha
insl
aam
ss
cmpordps
adc
fwait
dec
in
mov
and
jb
xchg
data16
add
cli
mov
aas
out
cmp
repz
popf
xor
icebp
mov
add
sti
das
jns
mov
rolb
in
js
mov
dec
imul
cmpl
fidivs
data16
jge
test
scas
pushf
mov
sub
push
dec
dec
jo
ja
inc
lods
jg
fwait
sbb
sub
pop
pop
jmp
sbb
adc
out
pushl
sbbb
jno
push
sbb
xchg
and
loopne
jp
repnz
pusha
gs
lcall
das
dec
sub
inc
add
loop
dec
jp
jne
bound
add
mov
inc
dec
shrb
bound
mov
dec
pop
scas
xlat
js
or
outsb
xchg
push
inc
or
or
dec
xor
mov
sbb
xchg
and
jbe
xchg
mov
bound
inc
add
lcall
bound
neg
fidivrl
cltd
pop
inc
popf
stos
xchg
xor
out
jne
dec
shrb
push
jecxz
daa
cmp
sub
insb
push
mov
scas
popf
mov
pop
jge
loopne
or
scas
add
scas
mov
adc
iret
fnstsw
xchg
jecxz
fwait
pop
xchg
dec
mul
jbe
cmp
bswap
mov
int
or
sahf
push
jns
addl
ds
mov
lcall
add
mov
push
jae
mov
mov
outsb
scas
cmp
aaa
push
pop
jl
iret
lret
std
xlat
roll
ja
stc
sbb
fdivs
je
arpl
inc
ret
jno
cli
pop
stos
dec
ljmp
xor
call
mov
fiaddl
mov
cwtl
mov
jle
insl
adc
fstl
jmp
into
dec
sbb
shll
inc
mov
cwtl
pop
sbb
sbb
sub
mov
mov
push
or
in
jmp
inc
repz
aas
loope
test
mov
stos
sbb
dec
arpl
and
int
mov
and
in
inc
pop
shl
movsl
lret
xor
xchg
cwtl
outsl
pop
or
movsl
imul
cmp
aas
test
scas
push
or
loope
mov
jg
pop
push
jmp
ret
fisttpl
pop
xchg
sbb
call
stos
mov
add
jbe
aam
in
fiadds
push
ja
ja
push
jp
in
mov
xchg
push
mov
arpl
add
insl
push
scas
aad
negb
imul
aas
das
sub
xor
pop
xchg
adc
fiadds
fidivl
lea
out
jl
lcall
xor
sahf
inc
out
pop
pop
sbb
pop
mov
jmp
mov
push
and
movb
stc
push
cmpsb
testb
xor
jmp
mov
jge
divb
in
add
xchg
out
rorl
dec
repz
roll
inc
inc
lcall
popf
or
iret
incl
loope
call
popf
sub
push
rcrb
or
pop
outsl
inc
jo
test
stc
lock
mov
mov
fdivrs
jnp
xchg
sbb
fsubrl
jns
pop
lds
repnz
push
xor
mov
addl
jae
pop
lds
xchg
enter
fidivrs
aam
xchg
and
lock
jnp
jge
outsb
cmc
jecxz
adc
stos
mov
push
mov
dec
hlt
dec
sbb
fs
dec
adc
ror
inc
or
dec
fwait
push
dec
cmp
sub
push
data16
jle
jmp
cmpsb
insl
roll
lds
pushf
je
mov
mov
sbb
les
insb
das
sub
mov
in
arpl
inc
filds
xchg
and
int3
cs
add
gs
xor
aaa
or
divl
lret
add
call
mov
je
mov
testl
dec
mov
jg
xor
cwtl
inc
dec
insl
sbb
out
jo
sahf
movsl
sbb
inc
adc
add
adcl
std
lock
jge
pushf
ret
mov
aaa
imull
add
test
fsubr
into
andl
jp
insl
push
inc
sar
movsb
mov
and
xor
fucompp
pusha
push
mov
lods
scas
cmc
add
xor
add
sub
cmpsb
add
adc
mov
add
or
inc
xchg
xchg
mov
push
call
rolb
inc
dec
test
es
nop
mov
es
add
dec
push
test
xchg
popa
jbe
arpl
jb
in
mov
push
fcmove
gs
jno
xchg
rol
and
dec
push
xor
pop
in
cmp
xchg
jp
daa
repnz
pop
cltd
sbb
popf
dec
mov
dec
adc
ret
imul
pop
mov
xchg
or
mov
rcll
pushf
clc
dec
hlt
mov
jb
xchg
jle
pop
push
sub
mov
scas
mov
and
xor
xor
sbb
xorb
test
testl
jbe
and
jg
xchg
clc
out
scas
pop
add
jno
lahf
xchg
cmpsb
roll
scas
cwtl
addr16
mov
dec
pop
jns
add
sbb
fisubl
sbb
mov
inc
loop
pusha
sub
pop
int3
inc
mov
dec
dec
or
and
ret
xlat
incb
jne
sub
xor
cmp
sub
in
in
or
jae
dec
pop
mov
les
xchg
cmpsl
dec
cmp
inc
in
inc
nop
hlt
mov
pop
mov
fs
shll
lods
test
test
and
push
imul
xor
xchg
add
add
mov
jle
jns
add
jo
es
lcall
pop
pop
xor
std
orb
inc
ljmp
loop
xor
xlat
add
roll
das
addr16
iret
cmp
out
fwait
pusha
xor
pop
cmp
xor
fsqrt
aam
pop
cmp
dec
xchg
popa
fcomps
mov
jb
adc
and
inc
roll
mov
dec
jmp
add
mov
test
jbe
jl
xor
repz
loop
aaa
andl
js
push
push
lods
insb
cmpsb
jecxz
sub
xlat
popa
jns
or
popf
mov
hlt
fcompl
out
mov
adc
inc
sbb
imul
mov
push
leave
mov
lods
cmp
dec
xchg
inc
mov
shl
jb
movsb
out
movsl
insl
add
incb
call
out
jbe
std
rol
jb
xchg
sti
xchg
mov
fs
xor
sbb
stc
rcrb
xor
pop
push
out
fwait
bnd
rcll
iret
mov
cwtl
mov
push
mov
adc
jae
add
sbb
push
pop
pop
test
popf
je
in
int
mov
scas
popa
call
jp
mov
movsb
dec
outsb
add
sbb
mov
loop
xor
inc
data16
sub
int
pusha
mov
dec
aad
cltd
lods
insb
pop
int3
pop
out
sbb
xchg
int3
addr16
adc
mov
mov
std
add
roll
push
std
xchg
dec
jmp
cmp
adc
xor
mov
push
pop
cld
push
inc
sub
push
and
xorb
std
push
inc
insb
or
loop
ss
adcb
add
xor
lret
xchg
enter
cli
adc
mov
jnp
pop
or
fwait
loopne
dec
push
mov
mov
cmc
rolb
mov
xor
push
xor
xor
addb
sbb
mov
cmp
ss
push
jbe
fisttpl
in
stos
push
jnp,pn
pop
push
xchg
mov
jnp
call
movsl
or
sarb
xor
imul
shrb
and
mov
jle
lds
mov
cmp
repz
loope
lds
rol
mov
ror
and
mov
imul
enter
loope
xor
subb
and
ror
pop
hlt
es
shrb
aaa
shlb
sbb
sahf
arpl
cli
jge
xor
add
inc
divl
xchg
into
push
mov
mov
es
or
mov
xchg
push
je
decb
insl
add
xchg
jl
mov
ror
jb
jg
add
pop
cld
add
sbb
push
jmp
negl
xor
je
jecxz
add
ja
lods
cltd
rorl
cld
popa
scas
cmpsl
mov
xor
imul
or
xchg
mov
mov
inc
cmp
into
test
out
out
pop
cmp
jmp
cli
fmull
push
xlat
lods
cmpsb
dec
lock
insb
jl
mov
sub
test
dec
scas
sbb
xor
mov
cmpb
and
das
loope
dec
cmpsl
lret
cmc
mov
xacquire
inc
and
sub
jbe
xorb
ljmp
adc
dec
sarb
sti
sbb
adc
jge
or
jae
jne
mov
mov
pop
adc
je
arpl
fs
gs
xlat
sti
adc
or
or
movsl
mov
test
mulb
rcrb
sub
mov
jge
adc
inc
inc
aas
pop
fstpt
jge
ficoml
cmp
cmp
or
lahf
mov
jg
dec
xor
and
push
push
add
pop
jle
mov
cwtl
sbbl
push
out
aad
jge
mov
into
shl
cmp
push
addb
in
sahf
cmp
insl
outsb
inc
lods
adc
out
incb
inc
jecxz
push
scas
xchg
jns
dec
inc
xor
or
lret
lds
pop
pop
sarl
pop
cmp
testb
sti
shll
into
insb
jo
xor
lret
pop
dec
in
stos
shrl
push
mov
cmp
inc
push
mov
pop
jae
xchg
ficomps
cmp
jno
lcall
out
stos
mov
std
shlb
jmp
lret
xor
pop
xchg
std
mov
pop
and
popa
mov
les
push
lahf
mov
mov
je
repnz
cld
sub
mov
and
xchg
mov
cmpsl
pop
stc
fidivrs
arpl
es
dec
imul
sub
inc
jb
scas
das
push
fs
daa
sahf
outsb
dec
dec
mov
or
repnz
jb
adc
loop
fimuls
lds
gs
push
stc
cmpsb
lcall
xchg
pop
in
inc
lea
call
repz
sti
mov
jo
mov
inc
mov
xchg
stos
mov
imul
lret
jb
push
jo
iret
daa
mov
sbb
or
ss
in
jecxz
pop
push
push
cmp
jnp
mov
shrb
push
push
push
scas
cmp
and
arpl
pop
push
sbb
push
xor
mov
pop
aam
xor
mov
mov
mov
adc
dec
and
jae
ficoml
fiadds
lea
push
mov
jmp
jns
stos
je
adc
lods
mov
mov
sbb
movsb
out
mov
add
mov
or
cmp
loop
iret
xchg
cmpsb
imul
enter
cmpsb
hlt
mov
es
adc
and
fbld
add
stos
test
icebp
jnp
xchg
test
dec
pop
push
jnp
in
jns
cmp
out
mov
sbb
filds
mov
subl
push
aad
pop
cmc
stos
fisttpl
stc
imul
pop
outsb
pop
in
stc
in
sub
cwtl
std
push
cmpsl
xchg
in
cmp
xlat
jno
out
sub
xchg
jge
mov
lret
int3
out
inc
scas
fldenv
loope
lcall
loopne
sub
inc
mov
jns
pop
xor
dec
std
mov
outsb
jecxz
fs
mov
xchg
fiadds
popa
stos
mov
jge
loopne
fabs
xchg
pop
jmp
adcl
es
add
jo
cmp
rorb
or
jmp
jbe
jnp
out
int3
push
push
and
call
mov
push
lret
xchg
scas
cld
mov
xchg
lock
add
jecxz
add
lahf
loopne
xor
rcll
lods
leave
mov
imul
mov
pop
pop
fiaddl
stos
cmp
ja
cmp
jmp
out
sbb
jle
iret
aaa
imul
xchg
add
repz
aam
shr
sar
test
mov
mov
mov
adc
inc
lahf
cltd
sub
fcmovu
mov
push
cmc
jno
nop
inc
add
pop
imul
popa
test
cmp
sbb
les
gs
dec
inc
mov
daa
sti
sub
jle
das
dec
jl
sbbl
mov
mov
cmp
inc
lcall
pop
xlat
mov
fs
mov
adc
in
scas
fimull
pusha
nop
adc
or
inc
mov
lods
int3
jge
ljmp
test
jb
imul
movsb
fistpll
xor
adc
jmp
out
dec
mov
xchg
lret
dec
cmp
jb
fisubrl
idivl
test
iret
pusha
cltd
xchg
mov
sbb
pushf
fmuls
leave
mov
mov
push
mov
rorl
mov
stos
rcrb
sub
bound
pop
test
sub
orl
sbb
xchg
push
push
iret
cmpsb
xor
add
iret
outsl
push
push
jnp
xchg
dec
adc
inc
enter
adc
loope
mov
mov
push
movsb
push
cmpsl
out
mov
les
and
adc
push
mov
jno
dec
lret
xchg
sbb
jmp
imul
xor
push
lods
sbb
add
stos
push
subl
sbb
add
and
and
repz
push
out
sbb
aaa
nop
ljmp
fisttpl
lea
out
retw
add
fwait
mov
idivl
pop
jg
out
fnstenv
dec
cli
cli
pop
lcall
dec
inc
xor
test
flds
call
mov
rolb
jge
cmpsl
mov
mov
insl
add
mov
lods
or
lret
pushl
stos
jnp
fdivr
mov
stos
gs
sbb
stc
sub
or
cmp
lret
cmp
std
sarl
mov
fwait
cmc
jbe
cli
mov
leave
sarl
int3
test
mov
icebp
inc
test
clc
into
inc
pop
stos
loop
and
in
pop
adc
scas
lods
mov
fsubr
jmp
insl
jle
addr16
ljmp
sub
sub
jo
mov
or
push
jno
inc
into
cmp
in
sbb
or
jle
cltd
push
scas
jnp
jb
and
xchg
inc
push
jle
push
fnstcw
ss
in
divl
test
adc
pop
dec
imul
or
mov
not
mov
or
out
mov
and
push
or
jle
xor
jbe
sbb
movb
lea
or
pushf
inc
adc
bound
stos
pop
imul
jo
cltd
xor
insb
mov
xchg
idivl
pusha
mov
mov
daa
jg
cmc
cmpsl
pop
sub
sbb
clc
mov
add
jae
sbb
adcl
in
scas
movsl
jne
or
stc
aad
mov
mov
jl
in
cmpsb
lret
sbb
into
ja
inc
adc
mov
xchg
movsl
push
loope
jae
mov
icebp
popa
cmpsb
int3
jl
adc
sub
add
pop
xlat
dec
popa
inc
repnz
xor
xor
outsb
xchg
leave
push
je
hlt
rclb
xor
mov
adc
jo
or
dec
arpl
mov
sub
int
and
or
lea
out
dec
cmp
fstps
outsl
shlb
int3
insb
mov
add
aas
or
pop
mov
inc
sarb
push
mov
cmp
dec
adc
hlt
notl
pop
push
mov
movsb
in
xor
mov
dec
mov
clc
mov
cwtl
test
pop
pop
iret
je
lahf
enter
out
hlt
push
mov
repz
xchg
lcall
push
sbb
sub
and
jecxz
scas
imul
jle
shlb
cli
cwtl
adc
push
enter
inc
jnp
adc
data16
inc
cmpsl
jbe
jl
jne
jae
mov
mov
or
jnp
or
dec
mov
pop
cmp
pusha
cmp
in
lahf
aam
dec
in
iret
je
mov
test
or
mov
mov
dec
clc
movl
adc
push
jae
fcmovnbe
dec
les
jnp
test
dec
orl
imul
int3
mov
mov
jae
rorb
and
cld
je
cmpsb
mov
inc
shr
fnstenv
or
xchg
insl
mov
mov
dec
mov
xchg
sbb
aam
adc
jbe
stc
dec
test
jb
mov
iret
ret
hlt
add
sbb
test
dec
jne
in
imul
in
rclb
clc
jecxz
jno
mov
ret
sbb
or
andl
xor
enter
sbb
in
pop
aad
jl
roll
push
dec
sub
pop
xchg
adc
ds
push
push
and
xor
out
push
and
mov
aaa
dec
jb
repnz
add
jne
or
push
repz
xchg
sub
adc
mov
xchg
fs
dec
push
xchg
inc
pop
out
test
or
xchg
outsl
xchg
enter
mov
mov
jne
push
or
insb
int3
mov
cld
jle
mov
sub
pushf
loopne
orl
ds
push
inc
adcb
je
stos
test
and
nop
mov
outsl
out
mov
or
sbb
inc
or
pop
mov
pop
inc
mov
cmp
scas
mov
push
movsb
int
inc
movsl
jp
sbb
mov
sbb
andb
xchg
add
hlt
sbb
lahf
push
adc
inc
push
mov
pop
lcall
push
sub
aas
mov
arpl
in
push
or
gs
aas
cmp
fistpll
test
popa
inc
pop
fstl
add
cmp
inc
outsl
das
or
xor
fiaddl
popa
test
pop
push
jne
cmpsb
cmp
out
icebp
push
imul
jns
push
cwtl
push
popf
rcrl
jmp
sti
in
in
mov
mov
dec
and
outsl
popa
and
push
jge
pushf
roll
aaa
mov
sti
fimuls
jmp
cmpsb
mov
mov
arpl
cld
xchg
idivl
out
jmp
les
loop
mov
push
pop
insl
push
aam
pop
push
xor
push
mov
data16
adc
pop
mov
sbb
adc
loope
and
out
std
inc
enter
mov
push
mov
or
fstpt
sbb
std
jecxz
mov
add
or
or
inc
in
jno
jecxz
xor
into
pushf
add
jge
nop
xor
pop
js
adc
jb
mov
bound
and
mov
outsl
mov
push
into
shlb
fistl
fildl
pop
cmc
inc
cmp
into
out
xchg
shrb
inc
loope
add
push
xor
mov
sub
inc
jmp
faddp
pop
dec
cmp
das
xchg
cmpsl
enter
add
fstl
outsl
lea
add
and
arpl
hlt
cwtl
xchg
push
test
push
add
out
push
xor
or
mov
xchg
lds
push
or
int3
jo
cmpsl
fs
jne
add
pop
push
insb
mov
sbb
xor
inc
movsb
xor
mov
sbb
pop
nop
mov
bound
jl
in
out
sti
scas
inc
inc
pop
push
adc
jo
notl
mov
fs
mov
hlt
cmp
jae
es
int
stos
rorb
pop
sub
jp
std
mov
push
popa
icebp
dec
sarl
jmp
pop
popa
bound
bound
push
cwtl
pop
jp
out
or
push
test
movb
lods
arpl
mov
std
out
scas
sbb
cmp
adc
in
jmp
and
loope
daa
dec
push
les
or
inc
adc
push
enter
cmp
in
lods
push
out
fsubl
add
mov
jne
sub
stos
popf
dec
dec
lods
sti
stc
fsubrs
pop
push
adc
pop
adcl
mov
dec
iret
jno
jbe
lret
cmp
mov
les
leave
cmp
mov
jge
dec
xor
mov
pop
inc
les
jo
shlb
jnp
jne
push
push
xchg
mov
push
cmp
bound
out
add
addr16
fidivrl
fdivrl
out
les
mov
jnp
out
aas
sub
pushl
jae
rcl
cmpl
xor
out
arpl
sbb
inc
lods
es
in
pop
push
cmp
push
leave
push
flds
inc
nop
dec
inc
fildl
mov
int
cmpsl
jp
shr
lahf
pushf
adc
jg
cmc
je
test
dec
cmp
sti
or
jbe
pop
aam
cmpsb
add
inc
and
push
out
sub
pop
into
add
in
jo
xlat
push
sarb
dec
out
std
arpl
cmc
pop
cmpsl
fistps
lock
leave
inc
ja
or
clc
daa
push
aas
inc
mov
aam
jb
push
lods
xor
xchg
enter
lahf
cmp
int
inc
bnd
adc
cmp
mov
and
lods
jo
mov
adc
popa
cmp
mov
mov
lods
jno
xchg
mov
dec
lds
pop
and
aad
jne
arpl
ficomps
fistpl
dec
add
dec
icebp
sbb
xor
aaa
and
in
push
insb
sub
pop
xor
das
sbb
mov
out
roll
sbb
divb
je
xchg
mov
push
inc
dec
pusha
xchg
loopne
repz
sub
ja
loop
repnz
stos
or
pop
xchg
sbb
jb
arpl
std
repz
mov
or
xchg
pop
pop
imul
leave
or
and
push
cmc
in
call
js
lods
lret
test
xor
adc
lods
in
stos
lods
lock
pusha
jge
lret
push
and
add
out
pop
lret
jb
scas
rorb
rcll
in
pop
dec
push
fistl
sub
pop
loop
jae
and
clc
xchg
pop
cmp
daa
lods
xor
stos
stc
cmp
je
sbb
dec
testl
sub
pop
rcrl
data16
mov
stos
std
divl
outsl
or
shrl
and
inc
mov
jb
std
lret
sbb
inc
push
loop
cmpsl
xchg
jle
push
mov
sub
mov
ret
movsb
rcrb
mov
mov
cmp
lods
test
cs
js
pop
dec
dec
int
mov
add
cmp
mov
aad
in
in
mov
es
aas
push
mov
cmpsl
pop
test
mov
jmp
retw
lock
out
imul
enter
mov
in
and
adc
outsb
out
jae
dec
mov
dec
cmp
pop
cwtl
out
fwait
sbb
test
pop
adc
sbb
sarl
scas
scas
adc
push
leave
js
ret
adc
aaa
out
push
pop
ljmp
repnz
mov
xchg
jmp
nop
dec
sub
add
and
push
xchg
sub
bound
leave
addr16
or
pop
dec
je
add
and
sar
dec
out
aam
lahf
inc
or
inc
test
mov
ret
pop
sub
fimull
and
cli
push
adc
sub
add
mov
js
xchg
mov
in
and
mov
movsb
inc
xchg
inc
cmp
jns
sub
jl
jecxz
outsl
sbbl
sti
je
shlb
push
rolb
push
or
scas
repz
aas
mov
or
lods
cli
mov
inc
out
mov
inc
push
out
sbb
shll
ds
scas
in
test
shl
mov
mov
xlat
leave
mov
stc
jbe
test
imul
sahf
subl
movsl
scas
jge
loopne
mov
mov
lahf
sbb
mov
and
loope
add
dec
pop
arpl
dec
push
mov
into
pop
pop
inc
sbb
dec
mov
test
and
movsb
pop
jbe
stos
or
addr16
out
mov
xor
lods
int
xor
aam
pop
adc
fs
jg
rcll
xorb
mov
jecxz
mov
cmp
test
inc
adc
iret
or
push
xchg
jecxz
lods
or
or
mov
xor
pusha
aas
stos
out
aam
sahf
jb
or
fdivr
out
sub
and
mov
hlt
lds
test
out
fmuls
adc
imul
xchg
mov
iret
jge
inc
in
jbe
iret
inc
xchg
arpl
and
scas
fmull
bound
push
push
inc
inc
negl
mov
sbb
lcall
clc
insb
xchg
cmpb
ffree
xor
jp
inc
xor
shl
outsl
push
dec
test
pop
dec
mov
mov
push
inc
aad
dec
pusha
pop
mov
fadds
mov
fwait
jns
inc
rclb
ret
push
mov
jle
movsl
lock
aam
pop
pop
inc
jg
lret
int3
push
xlat
xor
cmp
or
or
int3
insl
add
cmp
pop
jmp
sub
stos
add
mov
pushf
cmp
test
jne
push
and
leave
js
cltd
das
dec
sub
jmp
shrb
scas
pop
int3
js
cmpsl
scas
xchg
xor
lods
popa
sbb
xor
loop
inc
insl
inc
inc
pop
xchg
jge
clc
in
mov
icebp
jb
mov
jo
mov
mov
leave
shrb
dec
hlt
push
es
mov
loop
das
lret
xchg
cwtl
or
icebp
fidivrs
adc
adc
mov
xor
pop
pop
push
push
mov
adc
sbb
out
jmp
mov
add
cld
adc
lods
pop
or
jmp
adc
lea
push
cld
dec
and
jmp
ss
dec
sbb
out
or
mov
xlat
out
add
imul
ljmp
icebp
mov
pop
sbb
jae
mov
popf
lock
scas
pop
roll
push
inc
lea
insl
adc
int
bound
xchg
mov
add
sbb
xchg
adc
dec
mov
inc
aam
jns
xchg
mov
sub
pusha
pushf
in
jne
or
scas
lea
xchg
rorl
dec
test
sub
cmp
loope
pop
xchg
and
xor
sbb
stos
push
out
sub
lret
bound
jge
rep
scas
outsb
push
mov
cmp
mov
daa
inc
pop
mov
push
jns
sub
lea
fld
dec
out
add
mov
add
jb
outsb
scas
sbb
pop
daa
ja
aaa
aam
out
jns
aaa
gs
sub
daa
jle
cld
dec
jo
shr
dec
xor
inc
pushf
push
push
sbb
add
xchg
lea
sahf
add
add
mov
cltd
int
pop
lcallw
rolb
or
clc
xor
push
cmp
adc
movsb
pop
std
mov
in
stos
sub
shll
xchg
movl
ja
jl
xor
xor
xchg
cmp
mov
jge
cmp
fs
fwait
inc
js
mov
scas
das
pop
int
lcall
adc
push
or
cmp
inc
aad
loop
cmpsb
xchg
pop
mov
lret
mov
adc
in
sbb
ret
sbb
mov
or
enter
test
jmp
cli
mov
adc
add
mov
pop
call
bnd
cmpsb
fmul
subl
lods
daa
or
xchg
xor
jno
xchg
mov
ss
jle
fildl
pushf
xchg
test
insb
cs
or
or
push
mov
cmp
push
mov
jne
imul
push
test
dec
pshufw
in
insb
and
out
lods
aaa
imul
popf
xlat
xchg
enter
lcall
pop
or
dec
fsubrs
jne
cmp
clc
nop
pop
ds
sub
addb
aad
lods
dec
ret
and
cmp
aad
pop
jnp
icebp
sbb
test
mov
push
mov
shrl
mov
mov
push
shl
xchg
mov
std
testb
push
inc
lret
mov
dec
rcrl
fistpl
push
fmul
jg
mov
inc
aam
dec
push
testl
dec
hlt
xor
outsb
std
mov
xchg
fs
mov
dec
jbe
mov
jg
dec
jg
lahf
lret
xchg
sub
push
lcall
and
divl
mov
lahf
mov
lods
pop
shrl
fstpt
push
mov
scas
pusha
xor
cmp
dec
cmc
mov
and
mov
arpl
inc
fsubr
fstps
stos
testl
imul
push
cmp
pop
pop
outsb
jbe
pop
jle
fwait
imul
cmp
cmp
pop
shrb
pop
negb
mov
sbbb
push
mov
sarb
and
dec
shld
mov
cli
fisttps
pop
xor
inc
jae
add
dec
add
movl
js
add
mov
lahf
mov
arpl
cmc
jmp
sbb
inc
arpl
xlat
iret
jg
push
or
test
adc
xchg
insl
and
xor
adc
repnz
div
add
jo
mov
loop
pop
sub
test
mov
or
neg
je
push
add
mov
call
lret
stc
adc
pop
adc
mov
push
mov
jne
loopne
mov
lods
xchg
jns
arpl
pop
dec
adc
arpl
in
mov
adc
ret
add
and
mov
imul
sub
fs
jnp
mov
sub
sbb
push
add
test
pusha
mov
and
dec
push
loop
inc
jno
ljmp
push
inc
leave
testl
jno
mov
sbb
dec
xchg
and
adc
jp
jg
movsb
pop
sbb
testl
ja
or
mov
inc
jne
or
mov
xchg
lret
cs
bound
mov
test
ljmp
data16
mov
add
cmp
jo
and
subb
add
iret
sub
push
cmp
stc
hlt
adc
lcall
xchg
popf
mov
sahf
dec
xlat
test
mov
imul
stos
inc
sbb
popa
push
repnz
add
lods
dec
in
repz
les
xchg
ss
cmpsb
adcl
jmp
mov
cmp
sub
and
jnp
mov
bound
mov
sahf
add
mov
mov
mov
outsb
xor
xchg
aam
aad
lahf
arpl
and
xchg
pop
aam
sbb
sub
mov
lret
outsl
jp
or
movsb
jno
push
stc
push
gs
ficoml
push
mov
inc
xor
inc
repnz
mov
out
cmc
mov
cmc
sbb
inc
inc
lret
xor
lret
xor
lcall
aas
cmp
jnp
jmp
sub
adc
cmovl
xchg
movsl
sub
or
pop
fs
jge
jecxz
test
inc
add
or
pop
mov
xor
fcoms
ljmp
pushf
dec
inc
adc
shll
cmp
fsubr
jl
mov
ss
cltd
nop
xor
neg
mov
aas
and
cld
rclb
and
mov
insb
sti
adc
sbb
fdivrs
dec
mov
dec
mov
in
mov
jae
jg
mov
add
lods
dec
or
scas
pop
cltd
cmpsb
sub
fwait
lcall
pop
inc
notl
inc
aas
lret
std
insb
pop
pop
adcb
inc
lods
out
push
pop
sub
loope
xlat
ja
inc
xor
pop
out
scas
lock
add
or
ret
lods
out
lods
bndldx
mov
mov
mov
mov
ja
jmp
jo
fisttps
imul
aam
mov
or
push
stos
push
les
movsb
mov
aas
jp
popa
andb
outsl
les
cmp
xor
sarb
enter
mov
test
inc
int3
test
mov
std
test
movsl
dec
inc
push
popf
pop
int3
jp
inc
in
mov
shr
jo
jmp
pop
cwtl
cmpsl
test
xor
mov
mov
idiv
shr
inc
pop
cwtl
cmp
lds
movsb
jno
jne
pminub
subl
lcall
int3
add
int3
into
xor
xchg
icebp
ret
or
nop
mov
repnz
jbe
sub
xor
pop
in
aad
ficomps
xor
mov
lods
lock
jmp
and
inc
test
sub
pusha
je
stos
je
cmc
shll
sub
mov
sbb
add
lcall
and
out
loopne
shl
insb
in
rclb
dec
push
jge
imul
clc
dec
adc
inc
scas
movsb
jmp
pop
sbb
or
shl
std
addr16
fucom
inc
inc
lods
or
sarl
dec
movsl
inc
into
les
mov
add
adc
jg
xchg
mov
cmp
jle
mov
push
movsl
cs
inc
ss
rcl
mov
addr16
pop
sub
and
ret
jmp
inc
addr16
sub
jno
xchg
lods
jo
xor
sbb
adc
data16
in
pop
pop
push
mov
mov
mov
movsl
adc
icebp
xor
inc
and
ds
and
pop
xor
cmp
mov
mov
mov
stos
inc
or
xchg
adc
out
ds
add
push
lods
add
cmp
movsb
push
fisubs
adc
incl
popf
sbb
scas
xchg
imul
cmpsl
fnsave
cmpb
imul
and
xchg
jns
and
inc
jl
xor
inc
std
pop
inc
pop
cmp
subb
repnz
shll
fimuls
push
cmp
or
aaa
sbb
comiss
lahf
or
bound
xchg
inc
das
dec
jmp
push
push
inc
dec
push
push
cmp
pop
xchg
jl
andl
sahf
mov
into
ret
mov
scas
int
pop
sub
subb
mov
fsubs
or
mov
inc
pop
mov
sbb
pop
out
mov
rol
cwtl
mov
cmpb
add
jnp
gs
mov
push
jecxz
shrb
xor
dec
lcall
std
aaa
das
jecxz
xor
fnstcw
fmull
inc
xchg
push
or
aas
jnp
add
add
out
pop
jne
test
dec
fs
lret
daa
lret
movb
scas
mov
das
roll
repz
jle
dec
fiaddl
lahf
sbb
xchg
jbe
adc
jle
stos
cmp
mov
in
xchg
loope
scas
ret
mov
cmp
je
mov
loop
and
popf
dec
mov
faddp
pusha
mov
pusha
daa
repz
lods
leave
mov
popf
mov
cmc
sub
enter
in
stos
inc
cmp
ja
push
data16
nop
into
push
mov
or
or
mov
pop
adc
imul
fwait
rorb
pop
call
dec
sub
gs
sub
dec
add
mov
rol
cmp
je
cmp
xchg
pop
in
cmp
pop
lret
pop
mov
shll
or
loopne
push
push
dec
dec
test
ret
mov
popf
neg
xchg
jp
mov
cli
sub
xor
jl
inc
stos
dec
inc
lock
mov
xor
cmpsl
cmp
bound
xor
enter
adc
data16
xchg
int
imul
push
push
movsl
daa
loopne
out
dec
cmp
pusha
adc
jmp
das
pop
test
popf
dec
push
rolb
cmp
sbb
jp
mov
test
test
push
fs
cld
push
pop
adc
out
and
inc
jecxz
call
rol
xlat
pop
es
inc
leave
xchg
jnp
sbb
jb
ret
sub
push
push
insl
mov
mov
in
cmpsb
jbe
enter
add
ret
xchg
cwtl
or
mov
or
mov
cmp
popf
mov
xchg
std
xchg
mov
mov
notb
push
mov
and
dec
push
and
or
and
jb
sbb
pop
in
jle
push
push
pop
inc
pushf
xchg
mov
xor
stc
mov
mov
xchg
mov
ljmp
shlb
mov
sbb
aas
stc
out
pop
sbb
ret
or
adc
mov
inc
dec
loop
cltd
add
fwait
pop
ja
fsubs
cmpl
enter
outsl
icebp
and
dec
dec
fcmove
dec
sbb
into
mov
mov
dec
adc
mov
out
inc
mov
fnsave
adc
and
or
dec
leave
add
jl
cmp
xchg
flds
mov
shl
loope
movsb
shlb
inc
xor
movsl
rorb
mov
adc
add
mov
lds
dec
out
loop
ret
std
mov
mov
and
testl
ds
pop
ret
stos
dec
inc
lahf
add
movsb
out
jb
inc
add
outsb
xchg
cmp
rcrb
xor
pop
sbb
mov
sbb
vfrczss
out
fwait
push
cltd
lds
scas
arpl
jp
mov
jge
pop
and
cld
or
cmp
cmp
stos
pop
sub
idivl
inc
cmpl
fidivrs
xor
popa
mov
ss
xchg
mov
jno
push
add
or
popf
cmc
or
pandn
mov
aas
mov
insb
lea
xor
mov
jg
sarb
inc
test
push
lret
sbb
add
in
mov
vmwrite
mov
inc
loopne
rcll
mov
or
fwait
andl
iret
adc
or
and
repz
nop
cmp
or
jbe
cmp
add
stc
inc
ja
lds
inc
repz
scas
data16
leave
pop
mov
lods
push
mov
fsubr
rclb
mov
mov
or
stc
jl
xchg
mov
lret
cmpsb
mov
jmp
pop
rclb
cmp
loope
add
push
pushf
inc
xchg
mov
cmp
pop
mov
pop
inc
leave
lea
fs
sub
xchg
cld
ja
je
bound
int
ss
pop
sub
push
mov
pop
dec
jno
stos
or
imul
add
clc
push
pop
bound
sub
cmpsl
and
xchg
in
das
add
cs
xchg
sbb
mov
push
cld
pop
movsl
mov
add
xchg
inc
sub
mov
shrb
pop
xlat
stc
push
and
cli
pop
xlat
or
and
xor
lds
mov
frstor
mov
stos
addr16
out
dec
push
scas
or
fs
clc
or
dec
fcoml
sbb
ljmp
or
aas
or
clc
and
data16
cmp
inc
loop
pop
lcall
and
dec
dec
test
jb
mov
mov
fs
bound
mov
inc
je
mov
jb
or
adc
pop
jp
fadds
in
adc
push
mov
out
or
popf
divl
shl
gs
inc
pushf
lret
mov
or
mov
test
lods
int
sub
lds
pusha
insl
push
jbe
dec
xor
lret
iret
xchg
pmuludq
push
mov
mov
arpl
xchg
and
pop
or
shr
jecxz
loope
mov
cwtl
test
xchg
adc
out
inc
ds
cmp
dec
push
cmp
lea
aam
sbb
mov
inc
movsl
push
movsb
lods
pop
mov
fnsave
push
cmp
xchg
aaa
xchg
add
ficompl
fistpll
pop
fisttps
das
fiadds
jge
pop
xchg
sbb
sbb
xchg
mov
mov
pop
mov
cli
es
jge
aaa
das
sub
or
int3
or
mov
les
sbb
add
xor
ja
sub
dec
pop
fmull
stos
in
cmp
inc
subps
and
sbb
xor
jbe
sbb
je
mov
jb
adc
mov
test
notl
sbb
push
cmp
jne
xlat
jns
push
pop
testb
std
and
pop
sub
movd
ret
xor
loopne
mov
jge
shll
mov
adc
jae
pop
cwtl
in
roll
jbe
lretw
mov
aad
dec
in
cli
aam
mov
loopne
lahf
xorl
or
test
imul
xchg
jl
fucom
in
pop
fidivrl
cld
jo
sub
rcrb
adc
sbb
mov
in
xchg
jmp
cs
fisttpll
inc
xchg
out
dec
leave
pop
inc
enter
mov
sbb
jmp
xorl
fs
arpl
cmp
mov
cwtl
aad
adc
xor
clc
or
add
sub
inc
insb
sbb
jbe
xchg
popl
sarb
jae
jge
mov
push
imul
sbb
pop
in
inc
push
cmovl
les
mov
out
jmp
push
mov
xor
mov
pop
ss
js
stos
outsb
aas
or
cwtl
adcl
jp
jge
aas
stos
xor
std
jns
add
sub
rorl
mov
mov
loopne
and
es
fsubp
xchg
add
xchg
cmpsl
loope
in
ljmpw
jo
dec
lods
jl
fistl
adc
adc
call
pop
stos
dec
or
push
or
push
in
push
pop
sbb
mov
xorb
test
jne
pop
xorb
pop
and
mov
and
jo
mov
fs
and
lock
mov
mov
negb
nop
push
test
js
mov
cmp
sti
pop
push
mov
pusha
test
js
mov
aas
adc
in
insb
cwtl
mov
sahf
pop
test
in
add
push
enter
pop
sbb
jo
addr16
and
call
inc
xchg
loopne
aaa
add
inc
testb
sbb
xchg
cmc
and
lds
shrl
sbb
out
push
pop
lahf
mov
cld
inc
rorl
out
mov
mov
adc
inc
stos
mov
sti
hlt
stc
or
icebp
xchg
xchg
jnp
jnp
fwait
push
push
push
mov
adc
dec
jp
imul
inc
inc
imul
pusha
dec
lods
lahf
ficoml
mov
jle
add
jb
iret
aam
loope
int
subl
add
inc
ror
add
mov
add
ja
push
xor
cmp
mov
fiadds
sub
cmp
mov
sti
xchg
sub
das
pop
xor
jmp
fsubl
adc
push
adc
xchg
jae
clc
sbb
aas
sti
xor
adc
in
and
arpl
lcall
fdivrs
jno
jmp
imull
nop
inc
ret
hlt
int3
cmp
dec
adcb
fstpt
cmp
call
in
xor
adc
add
imul
or
fwait
lds
mov
cmp
movb
movntps
mov
xchg
shrb
daa
xchg
mov
xchg
sbb
mov
push
xchg
jo
es
push
ds
lock
std
inc
cmp
jnp
pop
dec
ret
dec
pop
fdivr
xor
mov
inc
hlt
and
clc
inc
std
sbb
rcl
cmp
or
jnp
loope
cmpsb
popf
inc
adcl
cmp
jno
add
push
mov
pop
mulb
adc
movb
repnz
dec
jne
int
testb
mulb
aas
stos
notl
lods
adc
jg
add
add
jae
pop
xchg
lds
jecxz
out
out
addr16
test
jns
add
sub
or
aas
ret
mov
mov
stos
addr16
jl
ljmp
dec
and
and
jg
dec
iret
add
loopne
cmp
sub
lahf
xor
stos
xorl
ficoms
fisubrl
xchg
into
popf
add
inc
lret
ret
mov
test
push
inc
add
mov
mov
in
iret
xorb
xchg
pop
sahf
and
ljmp
jb
call
in
sbb
inc
pushf
xorb
hlt
inc
push
mov
ds
push
pop
leave
aad
or
cwtl
xor
sub
test
add
es
pusha
fcmovnu
frstor
in
movsb
mov
jl
dec
hlt
shll
stos
mov
mov
inc
jge
mov
add
test
repnz
add
dec
enter
bnd
mov
ficoml
cmpsb
testl
adc
sbb
cmpb
jne
inc
pop
fwait
daa
ja
rcl
loope
mov
rclb
jmp
mov
xchg
cmp
ljmp
and
push
adc
sti
mov
push
mov
inc
popf
lock
lahf
and
repz
lds
in
mov
cmc
lods
add
sbb
and
cmp
and
cs
mov
sbb
shl
sub
or
ret
pushf
mov
lahf
mov
test
and
xchg
roll
sbb
sbb
push
test
pop
orb
lcall
inc
iret
push
pop
cmp
test
sbb
mov
xor
outsl
lcall
iret
xor
push
cltd
sahf
lods
mull
movsl
pop
pop
mov
out
sub
dec
pop
add
repnz
sbb
mov
js
dec
idiv
xor
fs
jae
and
ss
pop
enter
sbb
das
movsb
xchg
dec
push
fs
xlat
fmull
aaa
sbb
mov
shll
mov
dec
hlt
sub
mov
mov
je
xorb
mov
add
push
xchg
sub
jne
mov
lods
pushf
inc
test
pmaxub
jmp
scas
cmpsl
pop
int
cmpsl
and
xlat
into
and
lea
leave
cmp
test
xlat
mov
in
pushf
std
mov
pop
in
inc
imul
inc
dec
adc
sbb
push
scas
cmp
repnz
or
push
mov
fidivl
sub
ror
jb
or
adc
nop
fucomi
mov
je
je
mov
inc
jle
or
xchg
in
mov
xchg
fistpl
xor
inc
ljmp
mov
in
cmpsb
sub
adc
xor
cs
pop
mov
xchg
popf
insl
mul
leave
dec
sub
data16
outsb
ljmp
dec
fnstenv
xor
rcrl
ss
bnd
sbb
mov
dec
fnstsw
adc
and
push
dec
mov
loopne
mov
ss
mov
mov
js
adc
jl
mov
pop
loope
pop
lea
mov
dec
ret
outsl
push
ds
lcall
test
sbb
clc
leave
and
sbb
mov
mov
test
push
push
dec
mov
adc
stos
mulb
lcall
add
and
repz
pop
loop
sub
cli
jp
mov
dec
into
cmpsb
jb
shlb
cli
cwtl
cmp
dec
fcoml
pop
and
fs
inc
mov
punpckhbw
in
push
dec
les
cltd
test
pop
dec
mov
rcrl
rol
lods
sahf
adcb
xchg
rcl
jb
cli
das
pop
shll
pop
fsts
imul
fwait
mov
push
shll
scas
cmp
xchg
rorl
es
or
cmc
mov
in
adc
mov
jno
ret
shrb
leave
sarb
adc
push
into
jp
cmpl
ljmp
sub
xlat
cmpb
mov
lret
gs
aaa
sbb
jb
push
or
imull
idiv
lods
lret
pop
pushf
popa
lods
lret
push
or
adc
add
pushf
insb
repz
jnp
aam
jp
pop
add
movsb
push
xchg
enter
lcall
fwait
call
out
xor
loopne
sti
push
and
inc
xor
es
lea
jno
scas
jl
call
cld
push
into
jecxz
push
adc
fucomip
test
je
jge
xchg
xor
std
adc
sbb
enter
mov
push
and
lock
adc
xchg
out
dec
mov
dec
mov
sarl
lods
sub
std
sub
mov
cmpxchg
mov
js
dec
in
xchg
lods
cmpsl
inc
push
push
test
inc
mov
jae
and
pop
mov
mov
ret
jecxz
insl
aas
sub
cmc
lock
jge
add
lods
mov
cmpsl
int3
inc
add
and
push
icebp
mov
mov
jmp
rorl
cltd
leave
cmp
clc
cmp
ficoml
pop
mov
and
mov
mov
test
inc
dec
leave
outsb
dec
pop
loope
mov
push
cld
stos
negb
xor
xor
jl
dec
dec
fsubrl
imul
pop
push
mov
pop
xchg
int3
dec
add
loope
pop
xchg
xchg
inc
loope
fstpt
cmp
sub
fistpl
notl
int
xor
movsl
cli
inc
jg
mov
fbld
popa
dec
or
repnz
std
or
and
lret
push
into
je
dec
xchg
in
das
sbb
call
dec
push
mov
pushf
inc
shll
dec
notl
and
mov
fisubrs
or
stc
fprem
ljmp
jo
xor
xchg
decl
pusha
lret
pop
fstpt
dec
into
data16
jge
mov
and
jae
in
imul
mov
nop
xchg
mov
fmull
adc
movsb
or
sbb
sbb
cmpl
imul
and
scas
notl
rorl
pop
adc
add
xor
xchg
mov
lahf
sti
fistpl
call
loop
outsb
shrl
lret
push
das
xor
push
aaa
ja
dec
outsb
test
sbb
fnstsw
cmpsl
dec
psadbw
addr16
push
clc
shll
fcoms
fdivr
inc
and
sahf
and
push
jbe
repz
mov
xchg
pop
fimull
inc
mov
hlt
jge
clc
sarl
test
push
fsubrl
loope
xor
mov
sbb
push
loope
inc
cwtl
roll
sub
push
jnp
cwtl
dec
hlt
fisubrs
jne
mov
pop
jg
pusha
fstpl
test
sub
ficoml
stos
imul
dec
enter
push
sahf
nop
sub
outsl
add
push
cs
mov
shr
add
jnp
xchg
sbb
mov
pop
sbb
jp
stc
stos
and
adc
enter
hlt
daa
and
dec
mov
ret
fs
lcall
add
inc
mov
adc
fsub
push
cmp
loop
xchg
mov
or
jnp
push
ret
sbb
fnstsw
inc
mov
push
mov
mov
adc
sbb
xorb
and
adc
ds
in
in
cmp
mov
and
cltd
pop
xchg
mov
loope
mov
std
fwait
sub
inc
movsl
sahf
lock
xor
lret
jnp
test
inc
cs
pop
icebp
repz
fwait
out
lds
popf
int
cld
add
dec
mov
je
pop
sub
daa
je
test
pop
jo
lcall
imul
add
insl
js
fdivl
and
mov
mov
mov
fisubrs
dec
mov
inc
inc
loop
mov
sub
arpl
popf
jle
jmp
and
pop
aaa
bound
aas
xor
push
pop
lret
inc
lahf
xchg
mov
pop
shlb
fidivs
push
in
hlt
cmpsl
mulb
mov
lea
les
xchg
push
jnp
xchg
dec
adc
mov
pop
addb
cmp
push
incb
jb
fidivrs
xor
fmul
adc
add
mov
mov
mov
loop
and
nop
push
int
xor
subl
jg
popf
out
add
lret
and
fdivs
pop
repnz
fs
leave
lret
jb
pop
mov
or
jnp
movsb
call
fldcw
and
xchg
pusha
fwait
in
cmc
lods
addr16
rcr
push
jbe
mov
push
leave
rcr
add
cmpsl
mov
ret
ds
pop
das
mov
mov
add
xchg
jnp
test
pusha
mov
pop
add
out
fisttpll
mov
add
xor
fdivl
inc
mov
imul
out
cld
dec
das
test
stc
out
imul
xlat
lahf
cmp
xor
int
push
mov
cmpsl
dec
test
inc
push
shl
insb
imul
pop
subl
loopnew
xchg
jg
arpl
mov
pop
xor
outsl
jo
dec
mov
dec
addl
aaa
mov
push
rolb
xchg
cs
and
mov
mov
mov
adc
cmp
and
jmp
gs
inc
cmp
flds
push
test
push
push
mov
mov
or
pop
enter
hlt
mov
fistps
pop
imul
insb
mov
jmp
fbstp
jecxz
cmp
dec
incb
stc
test
in
enter
adc
inc
mov
mov
xchg
mov
adc
dec
push
inc
das
jo
and
rol
loop
xor
fidivrs
test
arpl
dec
sti
jecxz,pt
sub
xchg
inc
dec
mov
xor
not
ja
pusha
pushf
push
outsb
mov
add
xchg
and
lods
fistpll
test
sbb
push
dec
test
std
fsubrs
mov
add
and
lock
adc
ficompl
imul
add
and
cmp
lret
stc
jns
lock
inc
jmp
lods
out
dec
xchg
mov
jmp
jno
jmp
mov
push
sarb
sub
repz
and
or
clc
mov
orl
adc
cmp
ficomps
sahf
jg
ret
xchg
addr16
fs
loop
in
test
or
repz
jnp
aas
rcrl
shr
add
add
scas
ljmp
mov
repz
shl
push
outsb
test
add
xchg
cmpl
fistpl
push
stos
inc
aad
mov
xchg
insl
push
jne
mov
fisttps
test
in
insl
lahf
mov
xchg
pop
mov
ss
imul
xor
push
cmp
loop
cwtl
xor
dec
sub
rcl
js
sbb
adc
mov
push
mov
dec
inc
cmp
mov
insb
cmp
jle
mov
fsubrs
add
push
shrl
mov
and
pop
dec
test
scas
mov
ja
sub
lds
ss
add
inc
add
sbb
add
mov
fld
shl
stos
cs
adc
push
repz
adc
mov
lock
stos
cmc
push
imul
cli
cmp
pop
imul
js
rcrb
mov
es
ficompl
fldenv
into
mov
dec
mov
lods
pop
sbb
loop
es
int3
gs
pop
test
sub
cld
cmpsl
mov
and
stos
inc
out
scas
std
fldcw
lret
scas
aad
fbld
stc
mov
inc
xor
icebp
and
adc
leave
int
or
shl
mov
into
push
dec
adc
mov
jp
jmp
shlb
loop
inc
fisttpl
mov
rclb
out
scas
les
fdivrs
push
js
and
fistpll
dec
push
das
inc
mov
push
arpl
insb
and
flds
push
xchg
loope
xchg
jb
inc
add
jne
hlt
mov
mov
enter
cmovb
pop
or
imul
stos
push
cwtl
scas
cmp
jmp
cli
jno
xor
jge
xor
inc
je
daa
shr
push
xchg
and
nop
sub
iret
stc
ret
add
mov
mov
add
into
mov
iret
xor
sbb
inc
push
scas
adc
push
mov
xor
movsl
xor
mov
lahf
pushl
decl
adc
mov
mov
cmpsb
enter
cltd
mov
push
cwtl
gs
in
outsb
fisttps
lcall
incl
in
push
std
or
lret
dec
mov
sbb
lods
mov
out
mov
dec
sub
mov
into
sbb
and
mov
jge
addb
xchg
sub
ds
stc
pop
lahf
jnp
popa
mov
adc
push
out
cli
mov
xchg
sbb
push
fistps
or
mov
lock
mov
push
and
mov
pusha
lds
xchg
ds
ret
cmp
mov
cmp
mov
jb
push
xchg
je
mov
loopne
push
das
ds
shll
std
push
xchg
sahf
mov
mov
or
dec
and
push
in
stos
mov
inc
adcl
pop
push
rcl
iret
imull
out
popf
fisttpll
xchg
subl
in
leave
push
xor
cwtl
notb
pop
lods
enter
leave
xor
notb
fmul
cmp
scas
adc
inc
je
cmpsl
pop
jle
aam
gs
sbbb
andl
push
push
mov
mov
push
stc
cli
add
inc
xchg
xlat
and
add
xchg
xlat
icebp
ljmp
lret
sbb
out
lock
leave
add
jns
loope
inc
lods
adc
adc
cmp
std
jne
adcb
inc
push
shl
ret
cmc
sti
adc
mov
loopne
out
lret
cmp
pusha
mov
adc
jns
adc
pop
pop
jae
mov
call
ljmp
ja
bound
cmp
jno
or
ret
mov
loopne
mov
rol
icebp
mov
inc
xchg
lret
mov
mov
sti
xchg
lods
cwtl
outsl
mov
pop
fdiv
dec
mov
sarb
dec
pusha
pusha
cmp
mov
xor
loope
clc
adc
stos
js
xor
out
adc
lahf
imulb
ficomps
aad
stc
js
sub
aas
dec
ja
xor
fs
adc
aas
test
repnz
mov
dec
sahf
mov
push
pusha
jmp
out
pushf
inc
js
and
int3
rolb
pop
test
push
out
dec
repz
es
hlt
xchg
sub
pop
sub
stc
mov
xchg
add
mov
sbb
dec
pusha
mov
push
mov
pop
movq
ja
xchg
sbbw
fwait
arpl
in
jmp
cmp
inc
jno
add
test
jno
test
adc
arpl
inc
repnz
loopne
pusha
dec
and
pop
arpl
mov
xor
mov
out
inc
jp
dec
hlt
jne
mov
int
jnp
or
pop
mov
xor
int3
into
testb
stos
cli
test
inc
cli
mov
int3
pop
shrb
jae
add
pop
inc
and
lret
mov
cmp
shlb
out
notl
cmc
sub
idiv
lcall
icebp
shll
xchg
and
and
pop
gs
icebp
xchg
mov
and
mov
fsubrs
loop
fs
in
adc
push
sub
mov
mul
jo
sti
mov
inc
aaa
ds
lret
sub
in
mov
mov
jmp
mov
ljmp
adcl
jle
addr16
cmp
test
fsubp
cmpsb
mov
add
aaa
adc
dec
dec
fsubr
in
imul
stos
mov
test
sar
fcomps
ret
push
scas
insb
jp
mov
fcomp
jp
int
lods
fnstenv
ljmp
jne
xchg
xor
addr16
xor
hlt
dec
and
mov
pop
and
push
rcll
xorl
pop
push
push
pusha
sub
iret
mov
or
call
cmp
mov
int
inc
lods
cmovbe
lret
cmp
add
aas
push
dec
stos
add
jbe
cs
pop
sub
fwait
xor
mov
ret
jbe
fs
adc
add
lcall
cmp
call
pop
mov
cmp
and
jno
loop
sarb
incl
push
mov
push
insb
adc
and
cmp
add
bound
ljmp
fcmove
cltd
dec
sbb
mov
xchg
lea
dec
in
les
sub
inc
jo
ret
je
cmp
push
ss
xchg
hlt
repz
and
push
jecxz
adc
ljmp
cltd
movsb
lea
jmp
mov
dec
jge
mov
shrl
pop
jnp
imul
push
adc
fld
sbb
xchg
enter
push
push
cltd
lock
cmpb
add
jecxz
sub
adc
ljmp
xor
into
mov
mov
jp
cmp
in
and
loope
jns
cmp
xchg
jnp
test
mov
jae
lock
lahf
in
dec
push
and
jl
arpl
sahf
sub
push
orl
scas
jbe
loopne
shl
jge
jmp
push
std
mov
push
mov
shlb
rorb
xchg
add
add
cmp
call
scas
push
pop
orb
xchg
push
lahf
mov
addr16
in
in
mov
or
pop
orl
mov
xchg
mov
cmp
push
lock
fstp
mov
into
test
aad
push
dec
sbb
aam
push
in
push
fidivrl
add
push
xor
aaa
repnz
notl
fwait
mov
push
fidivl
pop
inc
repnz
out
inc
clc
in
jle
insb
add
loope
mov
push
inc
lods
mov
call
mov
out
les
std
movsl
stos
mov
jne
add
pop
mov
ja
or
sbb
fldenv
arpl
push
xor
idivl
pusha
call
mov
loop
dec
xlat
cmpsb
ret
jbe
jle
mov
jb
iret
and
sbb
dec
and
mov
inc
lods
push
xor
jl
jmp
clc
add
and
leave
fldenv
addb
mov
pop
push
in
test
dec
xor
mov
ret
inc
cmp
stos
or
and
aaa
clc
subb
fcompl
xchg
xor
push
lds
lcall
mov
jb
xchg
mov
std
cmpl
js
fimull
mov
fadds
cmp
jmp
rorb
scas
gs
mov
dec
jb
icebp
imul
out
mov
int
je
mov
inc
push
dec
ret
mov
jge
sub
mov
pop
das
or
dec
jbe
int3
add
mov
and
jg
test
je
lods
or
jo
testl
mov
mov
inc
or
iret
xchg
data16
mov
xor
leave
pop
js
or
jp
jecxz
add
sub
mov
dec
stc
mov
pop
and
dec
lods
les
jnp
dec
push
es
stc
and
jp
fstl
or
repnz
js
adc
das
adc
cltd
test
and
fstps
pop
push
or
and
mov
push
test
sti
faddl
cmp
mov
add
fsubl
xchg
aas
xor
mov
out
ja
adc
jns
dec
mov
rcll
sub
enter
jnp
out
xlat
dec
push
adc
jmp
ret
les
es
enter
fiaddl
cmp
cmp
sub
sub
into
ret
outsl
imul
inc
push
enter
push
mov
es
or
or
jle
pusha
add
xchg
xor
and
popa
popf
inc
xchg
out
or
xchg
jo
sub
push
pop
std
jne
jnp
movsb
test
dec
js
daa
sahf
fwait
pop
mov
cmpsl
sti
in
mov
pop
xchg
xchg
xor
pop
or
dec
mov
jns
mov
sbbl
sub
pop
roll
sti
jne
mov
push
sbb
aas
mov
cmp
idivl
cli
mov
adc
aas
xchg
jl
imul
xchg
xchg
adc
lds
rorb
adc
es
aaa
mov
push
mov
test
jo
insb
push
test
mov
dec
cmp
incb
adc
add
aaa
jge
fisttpl
les
call
daa
jle
add
pop
insb
add
fcmovu
ss
sub
incl
fwait
push
xchg
or
test
jnp
sub
ja
out
sbb
cli
or
xor
pop
jns
jb
insl
adc
jne
sbb
jno
jp
xchg
mov
ret
mov
add
gs
out
das
hlt
pop
xor
mov
pop
xchg
jmp
aad
sub
jecxz
out
loope
in
pop
push
lock
xor
jne
stos
cs
in
mov
xor
mov
xchg
add
in
test
aad
xchg
pop
mov
adc
jl
xchg
sbb
and
mov
lea
hlt
jno
and
adc
idiv
scas
sub
sbb
cltd
sub
icebp
mov
fdivr
xor
stos
xor
pop
xor
cli
in
dec
ja
mov
fisttpl
jg
ja
lods
xor
call
xlat
arpl
push
fld
cmp
sbb
push
push
and
int3
test
push
insl
inc
and
pusha
sahf
sbb
dec
in
cltd
xor
lret
test
inc
sub
jbe
fcmovne
inc
mov
push
shll
adcl
xor
test
push
pop
ret
dec
xchg
sbb
jbe
push
aas
cmp
xchg
xchg
aaa
or
outsb
push
ja
or
sbb
push
outsl
es
adc
into
adc
repz
dec
outsb
push
ja
mov
jg
test
ret
rcrl
cmpsb
or
xchg
push
lret
pop
dec
shll
pushf
mov
loope
pop
cmpsb
pop
sbb
pop
sub
mov
cmp
loopne
push
xchg
ror
fwait
xor
mull
das
dec
jnp
dec
or
sub
add
shll
jno
sbb
pusha
pop
loop
scas
out
jecxz
outsl
mov
pop
inc
sahf
mov
in
inc
lcall
out
sub
xor
sub
insl
sub
in
dec
scas
cmp
jmp
dec
cmp
sti
sbb
out
int
pop
push
xor
adc
ret
sbb
inc
cmc
sub
clc
out
mov
dec
dec
push
jns
xor
mov
jmp
sbb
out
pop
es
push
dec
pushf
jno
bound
pop
out
jo
lahf
clc
mov
jne
xchg
insl
addr16
jbe
mov
imul
push
jo
add
xchg
or
xor
cmpsb
shlb
mov
sub
dec
mov
scas
and
scas
cmp
pop
in
xchg
mov
xor
dec
call
mov
dec
int3
movsl
mov
pop
sbb
pop
xor
add
jae
adc
pop
mov
dec
sahf
or
adc
jp
xor
ss
sub
pop
xor
jo
sub
loopne
xchg
and
icebp
inc
push
xchg
mov
mov
test
clc
sbb
arpl
loopew
inc
mov
lret
ljmp
mov
std
clc
push
mov
mov
int3
and
ret
push
dec
mov
mov
iret
xor
data16
imul
int3
xchg
les
pop
lods
outsb
test
nop
xchg
fnstcw
sbb
aaa
popf
lret
xchg
imul
mov
jns
rcrl
rcl
push
fcoms
mov
xorb
jae
pop
lea
and
shlb
shl
cmp
shlb
adc
in
push
setne
jno
push
and
push
les
mov
iret
mov
shlb
outsl
inc
add
adc
xlat
fstps
xchg
adc
in
sub
bound
stc
xchg
pop
fld
mov
xlat
fcompl
adc
or
pusha
or
rolb
push
xor
jb
sub
add
arpl
aaa
sahf
mov
je
push
fiaddl
pushf
mov
mov
inc
jnp
test
lods
xor
leave
pop
shr
mov
adc
dec
mov
inc
pop
jge
scas
addr16
add
and
push
cmpb
lahf
inc
inc
jb
sub
sub
add
cltd
jge
test
mov
mov
outsl
inc
adc
jo
xor
xor
mov
push
sub
arpl
iret
cmp
dec
mov
repz
lahf
or
add
inc
sub
xchg
add
jns
testl
adc
mov
out
aas
adc
fs
add
xor
mov
fldl
xor
mov
or
mov
adc
sub
push
dec
dec
mov
mov
and
push
imul
mov
mov
fs
xchg
ja
ret
push
pop
je
adc
or
jnp
push
adc
inc
fsubl
enter
push
lret
cmc
sub
je
loop
std
scas
insl
sub
push
in
neg
js
sub
mov
pop
fiaddl
pop
fs
lret
jns
jl
or
cmpsl
jno
nop
pushf
aas
test
add
push
addr16
and
or
mov
add
push
push
ss
fmul
rorb
mov
lea
in
fnstenv
arpl
xor
lods
jge
adc
loope
out
xchg
subw
fsubrl
in
inc
xor
mov
push
sbb
sbb
bound
jle
inc
es
and
repnz
nop
sbb
pop
jbe
lret
add
mov
or
or
shll
loope
and
dec
fsubs
sti
cmp
mov
push
sub
rcl
pop
mov
ljmp
push
hlt
jmp
adc
sar
xchg
fcoms
xor
into
mov
xor
mov
stos
call
push
jmp
dec
mov
jno
xor
pop
xor
inc
jne
imul
inc
adc
ffree
and
scas
fwait
lret
mov
insl
es
in
pop
jns
fdivrl
jp
paddw
jmp
enter
mov
lret
cmp
sbb
cmpsl
hlt
out
push
popf
mov
jb
jmp
and
or
mov
lahf
jecxz
inc
dec
mov
jecxz
mov
es
jl
pop
movsb
fmuls
and
jge
repz
sbb
jno
cmpl
ja
jg
inc
mov
ret
test
jl
jp
lock
es
cmpsb
mov
insl
imul
jnp
test
sub
and
cmp
jns
mov
outsl
ss
jne
fistps
push
or
mov
cmp
add
mov
dec
inc
jbe
jne
pop
jne
ljmp
sbb
mov
or
jne
jne
xor
jp,pn
fnstenv
mov
mov
addr16
insb
insb
nop
shl
mov
push
cmp
hlt
inc
cwtl
insb
push
outsl
call
mov
or
adc
mov
pushf
movsl
inc
push
xchg
jne
push
sbb
loopne
ljmp
cltd
dec
or
push
daa
pushl
fcmovnbe
jp
cltd
push
dec
sub
outsl
repnz
mov
and
mov
cmp
cmp
sub
fcmovne
cmp
cld
daa
outsb
inc
push
stc
cmc
ret
pop
mov
mov
pushf
out
cmp
arpl
inc
shlb
outsb
in
movsl
repz
daa
add
das
and
add
adc
cmp
notl
rolb
addr16
cltd
cmp
rclb
aam
add
fistl
nop
mov
push
inc
int
push
ficompl
roll
call
lret
cmp
adc
and
imul
push
sahf
cld
mov
cmp
addr16
orb
out
add
sbb
rclb
mov
mov
push
fsubrl
movsb
rcr
sbb
push
adc
cwtl
dec
pop
nop
mov
cmp
jnp
cmp
xor
jo
lods
hlt
jecxz
mov
lock
add
test
cs
out
cmc
gs
je
inc
mov
cmpsl
xorl
push
push
and
and
in
outsl
in
or
stos
ljmp
jnp
or
pop
add
dec
and
leave
pop
and
xor
cs
xchg
adc
xchg
sbb
pop
loope
sub
mov
scas
dec
xchg
pop
inc
push
xchg
adc
in
imull
xlat
gs
int3
lret
das
xchg
xchg
fs
xor
arpl
mov
out
call
lock
mov
cltd
pop
inc
cmp
aam
jp
mov
jne
cld
lock
xorl
sti
call
out
sbb
dec
push
fdivrl
jl
leave
out
adc
sub
ret
std
fs
fstpt
jne
jecxz
add
sbb
inc
pusha
subb
repz
js
arpl
mov
int3
cltd
sub
or
push
xlat
lea
sub
bound
sbbl
jl
add
cmpsl
rcrl
imul
xor
cmp
mov
add
or
adc
arpl
cmp
adc
add
popf
idivb
js
rcr
imul
orl
mov
inc
iret
or
jno
mov
xchg
into
mov
cmpsl
mov
test
mov
movl
rol
sbbl
add
inc
int
mov
pop
adc
jns
lret
out
mov
mov
pop
lcall
sub
out
aad
std
aad
lret
test
inc
adc
push
fs
cmpsb
mov
mov
adc
insb
jnp
cmc
cmp
jno
and
loopne
mov
adc
sbb
adc
das
cmp
filds
dec
pop
jne
shll
ficompl
cmovg
and
test
sahf
sti
andb
mov
mov
dec
jo
mov
mov
sti
mov
js
or
jge
adc
sub
cwtl
cmc
jb
stos
pop
aaa
xchg
arpl
movb
pop
repnz
pop
xchg
xchg
pop
xchg
adc
cs
movsl
cmpsb
mov
adc
and
push
stos
mov
push
loop
dec
test
out
mov
push
inc
mov
andb
clc
mov
push
test
addr16
shll
lods
lret
loopne
call
int
push
mov
jp
orb
mov
mov
jge
pop
insl
xor
mov
mov
les
inc
aaa
cmpsb
and
stos
fisubrs
push
leave
xchg
lcall
pop
dec
and
pop
outsb
and
add
test
xlat
pop
int3
inc
lods
bound
push
inc
stos
movsl
inc
mov
lret
icebp
inc
shrb
cmp
push
adc
push
out
sub
add
dec
cmpsb
lock
mov
test
sbb
push
popl
mov
movsb
xlat
mov
cli
sbb
inc
test
pop
cmpl
repnz
stos
ret
cmp
push
or
inc
cmp
sbb
add
aaa
fdivl
push
int3
mov
iret
mov
mov
and
dec
test
mov
out
inc
and
imul
push
sub
aaa
jle
test
iret
dec
ror
sbb
adc
enter
insb
cmp
insb
cvtpi2ps
jl
loope
dec
cmp
mov
or
loop
cmp
jl
bound
pop
insb
jmp
or
ds
shll
inc
inc
sub
mov
addl
add
ret
sbb
dec
xchg
int
mov
test
inc
push
in
scas
or
dec
push
sbb
dec
add
into
cmp
jne
mov
pop
insb
es
adc
jne
ret
pop
cld
jo
pop
jp
sbb
push
push
fs
cs
rol
outsl
sti
inc
ss
sbb
push
xor
inc
cmp
adc
xchg
xor
jg
sbb
cmc
push
jg
ds
stc
xchg
aaa
add
push
mov
push
repnz
addb
aad
pop
xchg
mov
cwtl
icebp
sub
das
push
and
rcrl
popa
xchg
fcmovne
xor
push
push
in
or
sbb
and
mov
fnsetpm(287
cmp
mov
aam
sti
pop
mov
out
popa
push
and
cmp
pop
push
lret
lret
test
push
iret
or
movsl
lret
xchg
xor
scas
mov
mov
lock
into
imul
sbb
or
ds
pop
enter
out
daa
sbb
loop
rcrb
jno
flds
lret
ljmp
add
pop
ror
dec
and
and
xchg
repz
dec
js
add
cs
test
jne
cmp
popf
addr16
cmp
ja
cmp
repnz
jg
stos
jp
mov
mov
add
stos
sbb
adc
shl
cwtl
fisubrl
pusha
push
mov
out
fisubrl
test
bound
cltd
and
dec
mov
bound
jge
or
adc
fildl
dec
imul
jae
jb
and
sub
out
push
jmp
in
pop
mov
sub
inc
add
insl
xlat
push
mov
ds
inc
push
jb
adc
push
pop
les
jp
push
push
or
inc
bound
lds
pop
pop
lds
jg
dec
cmp
test
cmc
int
adc
push
xchg
sbb
icebp
imul
loope
insb
hlt
pushf
mov
inc
adc
jmp
lock
insl
stc
mov
mov
sti
jl
fadds
mov
rorb
sar
nop
dec
inc
fisttps
dec
leave
or
test
jae
xlat
xchg
iret
fcompl
sbb
mov
cmp
or
loop
mov
imul
pushf
xor
clc
mov
or
xchg
xchg
sarb
mov
and
inc
pop
or
aam
adc
mov
add
shr
popa
add
push
dec
outsb
pusha
dec
xor
pop
mov
ret
rcll
push
aam
lret
shrl
mov
sti
mov
fs
jno
scas
mov
adc
sahf
scas
xchg
pop
pop
mov
rolb
in
mov
adc
pop
mov
in
gs
out
fsubp
mov
aaa
and
inc
sub
cmp
jb
or
lock
data16
fnstcw
add
xlat
clc
inc
jne
bnd
mov
jmp
mov
mov
int3
std
rclb
movsb
addr16
btc
jmp
pop
orl
stc
jle
test
ds
loopne
or
mov
mov
jo
stos
dec
xchg
out
add
dec
sahf
or
xor
loope
mov
std
or
mov
mov
notb
jg
dec
fabs
loop
sbb
outsl
jmp
out
fcmovu
sub
xor
dec
sub
cwtl
sub
sub
aaa
sti
addl
jae
cmp
out
and
dec
xor
sub
add
and
test
pop
addr16
ficomps
pop
sub
sbb
add
stos
mov
or
and
scas
push
inc
push
sub
ja
mov
and
dec
mov
decb
pop
and
add
sbb
test
add
or
jo
sub
jns
sbbl
sub
adc
adc
enter
sar
or
in
mov
inc
push
xchg
notl
imul
rcr
cltd
scas
add
lahf
add
inc
and
or
nop
sub
adc
jne
nop
cmpsl
fimuls
mov
loopne
dec
adc
add
lcall
add
sub
leave
lcall
mov
mov
subl
xchg
enter
dec
ja
test
xchg
add
jo
xor
shrb
jmp
inc
sbb
push
fcompl
pop
imulb
inc
pop
shll
jmp
xor
cltd
xchg
repz
mov
jae
out
scas
pop
inc
push
jle
cmp
arpl
push
mov
in
and
imul
outsl
in
fdivrs
add
loopne
in
pop
test
sbb
sbb
add
xor
xchg
outsb
adc
xor
sarl
outsb
fstl
nop
bound
imul
pop
adc
push
icebp
fidivl
clc
dec
and
xor
xchg
adc
or
sub
fnsave
addr16
mov
stos
mov
cmp
mov
jge
or
aas
pop
pop
xor
js
mov
fdivl
pop
mov
and
js
es
cmc
je
adcl
adc
mov
mov
jae
out
jle
insl
out
sbb
mov
mov
or
fsubl
adc
xchg
xlat
pop
ret
jl
es
mov
loope
mov
js
jp
jmp
test
inc
loop
insl
movsl
jmp
fistpl
push
jge
jp
frstor
aas
jne
adc
sbb
xchg
push
mov
cmp
xlat
or
cmp
cmp
adc
and
adc
mov
imul
add
inc
pop
cltd
lahf
push
sub
mov
add
mov
dec
mov
jno
repnz
aaa
int
mov
lds
xor
cmpsl
pop
push
fsub
dec
xchg
stos
insb
cwtl
test
dec
nop
mov
cmpsb
adcb
jae
popa
in
enter
jge
lds
dec
andb
scas
ds
shll
cmp
jl
out
mov
xchg
addr16
add
mov
push
int3
ficomps
pop
mov
cs
imul
ja
aad
insb
daa
lds
packuswb
mov
sbb
mov
push
lret
xorl
xlat
dec
movsb
hlt
stos
ss
or
movsb
push
mov
mov
adc
sub
int
xchg
int
pop
fs
shll
ret
sahf
enter
cwtl
stos
outsl
movsl
inc
sbbl
cli
iret
in
and
cmp
push
lea
punpckhbw
xorl
jle
in
pop
push
push
jge
push
ret
mov
mov
sbb
xor
ja,pt
xor
mov
repnz
adc
jno
aaa
xchg
iret
add
dec
mov
nop
cmc
sbb
jbe
jle
nop
add
std
push
sub
xchg
dec
pop
mov
mov
test
xchg
in
sub
adc
xor
orb
pop
inc
jnp
sbbl
add
cwtl
cld
test
jle
aas
lea
bound
mulb
push
adc
and
outsl
add
mov
xchg
inc
inc
jge
pop
mov
ja
pop
ja
js
fsts
stos
aaa
pop
pop
rorl
inc
dec
pop
and
mov
cmp
cmp
adc
lock
je
cmp
sub
mov
add
mov
test
or
out
dec
mov
andb
es
pop
daa
mov
nop
sarb
cld
mov
and
or
jg
jae
jl
add
popa
cwtl
fwait
adc
loope
push
mov
jle
cmp
out
out
adc
sbb
aam
mov
mov
add
pop
out
mov
insl
ret
daa
fsubrs
and
mov
xchg
fisttpll
dec
adc
mov
adc
lods
jb
sub
jb
dec
cli
jne
fcomip
fisubrl
int
cmp
pop
lods
xorl
pop
pop
dec
fs
push
jl
insb
pusha
adc
leave
cs
aas
mov
mov
xor
mov
test
scas
mov
jb
sbb
dec
pop
in
enter
xchg
fnstenv
mov
scas
das
stos
jmp
addl
push
stos
pop
jns
or
or
ja
repz
cmpsb
lahf
mov
cmp
cmc
adc
fs
jmp
lcall
mov
push
lock
jl
xchg
sub
out
test
cmp
sti
pop
dec
pop
cmc
sti
getsec
movsl
cmp
dec
pop
imul
ds
sbb
fisubrs
fdivp
mov
je
mov
fmuls
pop
ror
aam
lcall
sbb
dec
fnstsw
mov
xchg
cmpsl
jno
push
push
mov
mov
sub
mov
or
fwait
dec
mov
inc
cmp
icebp
add
fstp
xchg
iret
xor
xor
xor
sbb
insl
mov
mov
adc
sti
cmpsb
int
scas
int3
popa
push
pop
clc
sbb
and
out
mov
outsl
mov
sub
mov
outsb
js
lret
test
mov
clc
push
pop
lods
adc
mulb
and
push
xchg
push
sbb
pop
xlat
and
sbb
pusha
rcrb
cmp
push
popa
ret
or
sub
add
pop
adc
test
jbe
int
jecxz
test
sub
inc
decl
fcompl
inc
and
jbe
add
add
test
dec
pop
inc
gs
adc
ficoml
enter
imul
mov
mov
xor
fsubrs
lock
sbb
sub
or
faddl
sub
inc
cmpsl
scas
xchg
hlt
dec
pop
dec
out
loop
mov
or
pop
xlat
jle
add
xchg
sti
sbbl
inc
inc
mov
xchg
or
shrl
cmp
sbb
dec
cmp
shrl
in
das
add
xchg
jae
sarb
sti
loopne
adc
and
push
xor
lret
ret
xchg
mov
lahf
stos
testb
push
cmpsl
mov
push
pop
add
and
inc
ja
jne
adcl
cmp
daa
mov
call
test
pop
outsb
or
ret
sub
fistps
xor
out
insl
pop
cwtl
fnstcw
lahf
cmp
je
mov
sbb
inc
mov
fbld
enter
add
and
push
outsb
ret
xor
inc
xchg
push
mov
sbb
aaa
ljmp
repz
bound
mov
orl
xor
dec
jmp
lret
pop
std
mov
dec
ret
sbb
push
xchg
adc
out
jp
push
mov
add
das
es
mov
bound
fnstenv
or
dec
jno
cld
cs
lcall
fisubrl
xchg
roll
sbb
cld
das
push
int
or
shrl
int
imul
mov
aas
aam
pop
pop
pop
xor
mov
in
dec
mov
xlat
loop
push
inc
lahf
mov
jne
push
xor
data16
mov
fdivrs
add
loope
addr16
js
mov
call
out
sub
mov
xchg
inc
sbb
repz
in
xchg
add
bound
mov
dec
pop
xor
adc
fistpll
pop
cwtl
daa
xchg
andb
test
ds
adcl
xor
pop
mov
shrl
xchg
and
int3
dec
outsb
shlb
fldcw
pop
lahf
adc
add
dec
mov
frstor
test
pop
ja
inc
xor
and
hlt
xor
jecxz
decb
out
adc
test
imul
mov
mov
sahf
aad
cmp
inc
add
lods
out
lock
adc
inc
xchg
mov
nopl
lcall
lret
adc
sti
stos
xchg
add
dec
fidivl
nop
into
add
scas
or
addr16
mov
cmp
bound
cwtl
or
out
xor
jno
test
mov
jo
jno
ficomps
mov
mov
loopne
push
pop
movsb
push
bnd
xchg
or
ret
or
enterw
cmp
and
ret
pop
add
pushf
xor
fisubl
and
lea
fs
ljmp
inc
mov
mov
lret
int3
into
xchg
mov
lods
and
sbb
js
mov
mov
fisttps
les
xchg
or
inc
fs
mov
push
jno
rcll
out
jmp
fwait
or
fisttpl
and
call
hlt
add
les
mov
cli
outsl
test
cs
decb
mov
cmpsb
cmpsb
stos
xor
mov
cltd
testb
ret
inc
adc
jmp
inc
mov
insl
ds
or
jb
das
dec
scas
mov
js
ja
add
xor
jle
mov
sbb
xchg
loop
sub
push
bound
cli
out
in
movb
lods
xor
inc
clc
sbb
sub
dec
push
inc
add
cmp
testb
sti
in
push
and
stc
lret
movb
aad
das
loopne
xorl
xlat
and
int
pusha
mov
pop
inc
subb
bound
fwait
adcl
or
jbe
adc
mov
lods
mov
pusha
cwtl
sbb
insb
orl
jle
pop
aas
in
int
popa
into
jb
pop
shll
adc
lcall
cmc
dec
pop
leave
std
inc
enter
movb
mov
and
into
cmp
add
mov
or
sti
mov
outsl
inc
adc
mov
jne
in
aad
mov
xor
dec
mov
cmc
push
out
or
pop
sub
andb
add
xchg
sbb
nop
mov
iret
test
stc
addr16
loop
sub
jns
cmp
sbb
jecxz
adc
std
dec
adc
xor
out
pop
rcr
sub
add
push
dec
fnstcw
cmp
xchg
jbe
mov
loopne
push
mov
cmp
testb
xor
or
cmpsb
push
repnz
or
inc
adc
shl
sub
subb
cmpl
inc
mov
jmp
enter
out
add
push
jecxz
push
lret
stc
enter
or
test
fnstenv
and
iret
repz
rolb
push
pop
xchg
in
adc
addr16
fidivs
idiv
getsec
mov
dec
cmpsb
cs
test
repz
xor
mov
addr16
adc
pop
lret
push
mov
jnp
jecxz
and
fistpl
mov
in
pop
shrl
jbe
cmpb
fdivrs
inc
std
imul
cmp
xchg
jb
xchg
xchg
popa
lods
test
cmp
cmp
pushf
aaa
or
int3
and
addb
add
ljmp
mov
sub
fwait
sub
push
add
std
jp
push
addr16
aam
les
push
push
dec
ss
pop
cmpsl
sahf
adc
shr
jle
js
icebp
jmp
sarl
add
mov
adc
or
add
lea
or
xchg
mov
mov
in
pop
jbe
push
arpl
jo
push
js
or
xchg
xchg
inc
xor
add
nop
imul
filds
jno
sti
insl
incl
add
ss
sti
popa
xor
movb
fstps
clc
inc
jle
pop
add
jbe
daa
xchg
clc
ja
repnz
pop
or
icebp
ficoml
ret
lret
stc
adc
ret
mov
pushf
popf
test
push
xchg
xchg
xchg
push
pop
cltd
mov
fildll
fmul
cltd
add
out
or
sbb
cmpl
mov
fxch
or
jo
adc
cmpsb
icebp
xor
arpl
out
lcall
add
jno
shl
sub
sub
addr16
scas
and
arpl
dec
xorl
add
pop
mov
imul
xchg
leave
push
das
out
push
shr
jae
out
xchg
outsb
mov
sub
inc
add
mov
mov
mov
pop
cli
movsb
and
mov
xchg
xor
mov
mov
lahf
rcrl
ljmp
mov
mov
push
mov
sbb
xor
lret
or
mov
or
scas
in
in
in
hlt
orb
movsl
popa
mov
repz
movsb
adc
jbe
sti
add
push
dec
mov
daa
ret
icebp
xchg
pandn
mov
push
sbb
repz
dec
loope
xchg
xchg
mov
inc
dec
push
mov
xor
cwtl
inc
or
cmp
xchg
xor
inc
add
mov
in
or
adcb
mov
in
inc
xor
out
push
bnd
sbb
inc
cmc
vpmaxsw
lds
and
sarl
or
fstl
out
inc
enter
mov
das
mov
mov
andl
lret
xchg
mov
mov
cmpsb
jp
add
stos
jno
mov
es
aas
out
loopne
jg
inc
es
cwtl
es
imul
ja
outsb
shlb
xor
clc
fcomip
js
cmpsb
dec
mov
fst
mov
mov
jge
mov
sarl
in
sti
pop
inc
repz
mov
enter
in
jo
dec
or
mov
jb
jo
iret
xchg
loop
pusha
pushf
test
movsl
es
add
pop
xchg
iret
cmp
jns
dec
fcomps
xor
int3
mov
sbb
in
leave
sub
lret
add
cld
cmpsb
jle
popf
dec
pushf
push
inc
ss
jge
xor
push
mov
mov
or
mov
xchg
mov
inc
ljmp
sbb
dec
xchg
adc
dec
in
sub
test
mov
jmp
stos
dec
mov
inc
adc
adc
sub
mov
ljmp
out
xchg
mov
int3
dec
in
enter
jmp
arpl
sub
test
jp
push
lret
andb
dec
inc
push
xchg
int
dec
add
jge
dec
mov
cli
clc
mov
nop
mov
into
es
sub
xchg
sbb
sub
iret
loope
cmp
fbstp
dec
pop
sbb
jns
hlt
test
pop
adc
sub
sarb
push
nop
mov
xorb
out
or
lea
cmp
push
push
and
mov
pop
in
testl
lcall
xchg
dec
testb
fistpll
es
out
fdivr
out
data16
inc
cmp
inc
or
push
cmc
fsubs
cs
movsb
mov
mov
adc
inc
sahf
pusha
sbb
std
push
mov
xor
or
rclb
das
fildll
repz
and
maxps
notl
cmp
xor
pop
outsb
shl
cmp
test
adc
cli
stos
sbb
aaa
test
push
pop
sub
into
iret
outsl
pop
sbb
xlat
in
ljmp
lods
push
xor
sahf
shrb
push
lea
jb
cmpsb
popf
movsb
xchg
out
jne
mov
push
xchg
cmpsb
jmp
jge
xor
cmp
pop
leave
stos
cwtl
dec
lock
filds
repz
in
arpl
jb
mov
xor
jne
idivl
scas
scas
sbb
pushf
std
mov
and
jle
mov
xchg
or
mov
gs
in
les
ds
sub
xor
or
iret
pop
mov
or
inc
jb
lret
inc
jl
push
loope
mov
pop
adc
subl
fs
jns
push
push
imul
fnstenv
pusha
xchg
dec
xchg
jb
mov
cmp
leave
jbe
ret
clc
imulb
je
push
in
cmp
add
or
scas
inc
mov
in
cs
mov
dec
scas
lods
sti
fwait
push
mov
xchg
jae
stc
xchg
xor
loope
or
and
mov
or
pop
dec
stos
stos
pop
outsb
ror
add
push
pop
add
mov
lods
jge
xchg
cli
leave
or
add
scas
pop
inc
sbb
popa
in
mov
cmp
leave
mov
mov
aas
lretw
outsl
jle
sti
cmc
pop
movsb
fists
outsl
daa
xchg
loop
sbb
clc
lods
push
insb
jmp
call
mov
pop
push
cmp
fwait
push
lods
jp
add
inc
add
mov
xor
or
and
push
or
shl
and
jge
mov
lea
mov
xchg
icebp
inc
inc
jecxz
jnp
pop
sbb
nop
dec
mov
outsb
out
xor
adc
insl
lea
add
jmp
loopne
pop
xor
daa
ds
mov
xchg
mov
sub
outsb
mov
rol
dec
mov
mov
xchg
pushf
js
sub
test
cmpsb
add
mov
bound
mov
mov
icebp
fists
out
jg
int3
pop
push
les
dec
cli
or
xchg
test
outsb
jb
cmpsl
push
push
cmc
or
lods
push
xor
mov
aad
test
out
pushf
add
pop
or
orb
inc
inc
mov
xchg
push
sbb
push
lret
callw
add
repz
movsb
jne
js
xor
scas
push
aaa
test
arpl
hlt
cmp
imul
icebp
fwait
push
nop
xlat
fidivl
xchg
mov
dec
decl
xor
call
and
shll
add
or
pop
out
dec
fisttpl
test
push
jne
sub
cmp
dec
pop
and
xor
mov
adcb
out
inc
ss
dec
sub
out
or
aaa
xchg
jb
inc
andl
mov
repnz
jmp
pop
in
mov
add
inc
repz
in
or
ds
jbe
out
cmp
cmp
pop
idivb
out
pusha
shrl
out
sub
adc
ret
repnz
scas
stos
xor
imul
mov
and
jecxz
cmpl
loop
pop
mov
push
dec
sahf
lock
push
push
jecxz
in
andl
mov
aaa
xchg
push
cmpsb
das
nop
mov
je,pn
fcomp
sub
xchg
cmp
pusha
repz
int
out
mov
rorl
add
ret
inc
test
push
jmp
mulb
jns
dec
and
mov
and
adc
sbb
jb
pop
sarb
popa
adc
xchg
sub
pop
in
mov
pop
mov
sub
hlt
mov
xchg
sub
mov
enter
xor
mov
and
jo
xchg
jae
bound
cli
jmp
xchg
outsb
xor
sub
pop
fdivl
xchg
push
test
xchg
fdivrp
sbb
ret
lret
cli
lods
xchg
popf
jns
iret
test
ljmp
mov
jnp
je
push
xchg
out
pop
aam
dec
out
push
jb
lret
fisubrs
je
jg
mov
jae
mov
pop
iret
sub
call
jo
cli
hlt
fwait
call
pop
pusha
jl
insb
movsb
mov
popf
push
xchg
add
cmpsl
and
popf
push
out
jnp
pop
jge
push
or
and
jg
les
push
sbb
lahf
scas
and
sahf
lcall
lods
ret
cmp
cli
out
xchg
stos
ja
lods
movsb
stc
jnp
scas
cld
rcr
popf
rcll
pop
lock
imul
dec
dec
adc
xchg
xor
cld
inc
push
and
call
mov
pop
pop
xchg
std
imul
fimull
jg
test
dec
aaa
popa
jg
sub
jmp
push
lods
test
lea
push
mov
mov
sub
xor
mov
xor
in
mov
push
test
jmp
mov
leave
jecxz
out
pop
xor
in
scas
pop
cmp
aam
add
shl
das
insl
dec
and
aam
jb
dec
cwtl
bound
lahf
push
sub
and
sbb
xor
movsl
mov
mov
cmp
scas
and
ret
mov
xchg
cmp
pop
or
test
loope
hlt
xchg
jo
lahf
jg
movsb
sub
jmp
loopne
mov
xor
sub
adcl
jnp
dec
jo
mov
loopne
testl
sub
xchg
aam
mov
mov
xor
lahf
repz
data16
or
cld
fiaddl
jbe
xor
in
jb
mov
in
mov
inc
loopne,pt
cmpsb
push
xor
add
test
inc
mov
lods
fcoml
jbe
int3
dec
data16
mov
fldt
cmp
sub
ljmp
or
test
mov
sbb
sub
cmp
arpl
adc
cmpsl
pusha
mov
ja
out
sub
ret
mov
and
ljmp
ret
dec
fmul
mov
pop
mov
mov
movsl
insl
test
mov
pop
or
pusha
adc
stos
andl
or
mov
push
pop
mov
pop
mov
add
outsb
cld
push
inc
and
xlat
fwait
lret
or
push
sub
push
ds
inc
pop
xorb
or
dec
insb
mov
cmpsl
mov
daa
andl
fnsave
xchg
jb
mov
xchg
imul
out
cwtl
popa
ret
sbb
push
push
inc
mov
mov
jns
cmc
cmc
sub
xchg
jno,pt
dec
xchg
push
test
push
jmp
clc
fnstcw
scas
in
xor
mov
ja
cmp
sub
add
dec
mov
incl
outsl
ror
pminsw
nop
mov
rolb
mov
inc
dec
jno
mov
cltd
std
out
stos
hlt
xchg
mov
idivb
shlb
loop
les
lea
adc
xchg
inc
pop
setb
xorl
mov
mov
mov
cmp
das
aam
jp
lss
or
inc
sahf
mov
pop
mov
das
xchg
jg
sbb
aad
jnp
adc
mov
outsl
arpl
mov
lcall
sbb
add
xchg
dec
sti
insl
scas
mov
mov
lods
enter
and
mov
scas
popa
dec
mov
adc
jle
sbb
mov
xchg
cmpsb
mov
pextrw
cwtl
call
inc
int3
adc
xor
mov
xchg
scas
mov
xchg
dec
and
ja
das
xor
scas
xchg
pop
stos
adcl
add
ret
cld
cmp
pusha
push
jb
out
pop
in
leave
daa
xor
push
inc
pop
or
dec
mov
loop
lret
or
sbb
sub
notb
adc
div
cmp
ret
lret
imul
andb
push
fimuls
shll
xchg
xchg
sarl
mov
jmp
test
fbstp
sub
sbb
adc
or
jne
mov
xor
sbb
pop
aaa
test
outsb
rcll
xor
rclb
jbe
cmpsl
rorb
clc
std
jo
push
in
jns
lods
ja
daa
fsub
fsts
add
outsb
andl
xchg
lods
out
xchg
clc
or
das
cmp
mov
movsl
imul
xlat
ret
into
jg
jl
pop
movsl
dec
or
mul
cmpsl
in
mov
or
imul
sbb
negl
and
scas
push
xlat
push
jle
mov
sbb
cwtl
cmp
in
adc
int3
iret
pusha
push
xchg
cwtl
jb
push
jmp
cli
pop
sub
mov
xchg
pop
adc
mov
punpckhbw
dec
xor
je
lea
loopne
add
test
imul
inc
inc
sub
mov
mov
test
aaa
add
or
cmpsb
mov
mov
mov
push
lcall
jecxz
sbb
mov
push
xchg
sbb
pop
out
cmp
out
dec
movsb
dec
jbe
ret
xor
jmp
push
or
xchg
and
imul
push
lahf
xchg
divl
dec
out
mov
cmc
in
aam
xchg
and
fs
fdivrs
clc
pop
push
push
andb
ret
cltd
jne
leave
inc
addr16
arpl
into
jp
insb
lods
jo
stc
xchg
jmp
cmc
aam
or
push
xor
stc
hlt
ljmp
cmc
in
aam
rcll
sahf
jns
dec
or
xor
or
inc
push
rcr
xor
dec
inc
orl
inc
pop
mov
xor
rorl
fs
jo
mov
mov
jbe
ja
outsb
inc
lods
mov
out
mov
pop
pusha
push
das
testl
push
pop
push
dec
sbb
mov
sbb
fwait
cmpsl
test
push
inc
xchg
loop
mov
add
add
pop
sub
push
adc
xchg
push
fstps
cld
xchg
mov
out
imul
sub
rorl
pop
sub
repz
jbe
adc
cmp
outsb
pop
xor
hlt
push
aaa
cwtl
inc
jmp
call
mov
testl
sti
ret
ret
add
mov
jb
push
int
xchg
mov
sub
pop
xor
movsl
mov
outsl
mov
add
pushf
inc
jl
add
gs
adc
jo
scas
pop
jnp
sub
test
add
stos
fsubl
dec
jns
in
lds
xchg
jno
test
jge
mov
fbld
int3
aaa
shr
std
xchg
faddl
cmc
push
pusha
or
add
add
dec
imul
call
push
testl
imul
testl
push
xor
pop
ds
gs
xor
movsb
xchg
lret
xchg
cwtl
mov
icebp
mov
in
lret
popl
ljmp
jo
jmp
pop
add
sbb
mov
ficomps
xchg
push
shlb
push
push
ds
mov
popf
int
pop
rorl
pushf
adcb
popf
jnp
inc
mov
mov
jns
push
sahf
in
int
loop
dec
pop
lods
scas
pop
js
es
out
xchg
xchg
mov
loop
pop
inc
push
xchg
mov
ss
adc
push
xchg
gs
ss
mov
sahf
jmp
insl
sbb
and
jne
insl
lcall
adc
xchg
and
rcrl
jbe
mov
pop
mov
jle
jae
xor
cmp
dec
mov
data16
js
adc
jmp
stc
inc
mov
sarl
jo
push
pop
add
cmp
jnp
lret
dec
loop
mov
gs
ss
in
cmpsb
shlb
sub
test
xchg
fs
xor
xor
dec
fs
xchg
mov
mov
fimull
dec
aaa
into
jecxz
cmp
cmpl
jmp
push
push
add
mov
stc
cmpsb
int3
scas
mov
xor
adc
adc
cld
inc
and
ja
mov
jg
icebp
mov
fwait
addr16
lahf
or
or
test
push
push
fnstenv
int
adc
stos
cmpsb
mov
jge
cli
mov
push
pop
mov
enter
xor
push
in
stc
sbb
sbb
inc
jnp
xchg
jne
push
xchg
dec
sub
pop
lea
mov
and
pusha
xor
cmp
or
out
push
clc
test
sub
jb
dec
ret
dec
push
and
loopne
dec
cli
push
jns
xorb
hlt
push
test
mov
sub
xchg
scas
cmc
xchg
iret
gs
xchg
xchg
sahf
mov
stos
sbb
xchg
sti
lret
sub
shrb
mov
jecxz
stc
push
and
dec
and
xchg
pop
sub
xchg
and
lock
dec
shlb
sub
mov
popf
pop
lret
mov
cmp
pop
mov
xor
jbe
push
inc
sbb
lahf
or
jb
movsb
repnz
adc
leave
lea
inc
pop
fcmovnu
iret
pop
jecxz
hlt
aas
psubusb
jne
xor
push
add
sbb
out
lcall
test
subb
xchg
and
fisttpl
or
dec
test
cmpsl
outsb
xchg
xor
cmc
and
mov
pop
testb
in
adc
repnz
adc
arpl
negl
inc
jecxz
adc
inc
das
ret
ss
in
mov
cwtl
in
and
and
call
cmp
add
xchg
mov
xor
mov
lods
xor
or
loopne
inc
mov
jg
aaa
into
cmp
loope
xor
xor
xor
cmp
mov
mov
xor
or
call
cmc
pop
jb
movsl
rcl
in
xchg
push
pop
xor
or
inc
js
mov
push
lods
data16
sbb
inc
es
sbb
pop
ficoml
lret
out
pop
push
inc
sub
mov
sti
pmaxsw
test
loope
add
lahf
bound
fldcw
adcl
xchg
pop
mov
fimuls
es
jo
call
jb
lret
sbb
push
fisubrs
cmp
ljmp
jg
daa
hlt
mov
sub
push
dec
push
lahf
test
jecxz
cs
and
shlb
insl
sbb
loope
jo
mov
add
mov
in
sti
dec
and
jo
arpl
inc
xlat
xchg
xchg
std
insl
out
and
pop
fdivrl
push
push
pusha
mov
xchg
inc
movsb
cmp
stos
adc
push
add
mov
pop
test
pop
imul
cltd
pop
rcl
jmp
sbb
mov
or
lcall
and
sarb
inc
pop
xor
jge
xchg
xor
jg
jle
inc
jl
rcll
incl
aaa
lock
ds
fcmovnb
sub
std
push
into
ficompl
mov
test
ret
add
xchg
cmp
fs
or
fs
loopne
jmp
sbb
imulb
push
cmpsl
lock
in
push
pop
jmp
in
sub
cmp
lds
add
cmc
xchg
imul
inc
jmp
es
hlt
rcll
ja
sub
or
ljmp
out
jl
fadd
xchg
sarl
inc
cmp
push
or
jb
sbbb
into
cmpb
inc
jno
das
scas
jo
out
sub
outsb
mov
mov
sub
data16
inc
adc
movsl
call
lods
sub
jne
mov
dec
outsl
mov
fs
adc
push
cs
lret
int3
pusha
icebp
int
mul
and
shll
aas
mov
xor
fisubs
mov
setbe
add
mov
mov
add
push
loopne
ds
fcomp
mov
testl
add
fsts
pop
sti
or
pop
cs
inc
icebp
aam
mov
xor
sbb
addl
add
jmp
inc
push
mull
and
add
mov
add
mov
loop
adc
inc
mov
fcmovne
dec
dec
movsb
sub
mov
push
jne
xor
mov
adc
xchg
fistl
inc
dec
pusha
lret
bound
dec
ret
aam
xor
div
jb
jmp
jg
in
or
xchg
sarl
mov
popf
xchg
xor
fucom
jae
push
pop
imul
test
mov
pop
icebp
hlt
movb
or
fdivl
out
pop
cmc
fisttps
inc
popa
fs
jecxz
popa
fdivs
pop
push
mov
sub
push
mov
pop
popl
lahf
into
ljmp
pop
repz
adc
jge
bound
push
lods
addr16
adc
aad
cmc
sbb
jecxz
lds
test
sbb
sub
push
dec
ret
xor
adc
mov
adc
xchg
ds
mov
dec
xor
aas
sbb
pushf
out
movsl
inc
cmp
jmp
or
push
mov
push
inc
fcom
data16
dec
sti
dec
out
push
imulb
pusha
cmpsl
aaa
lock
jo
cltd
decb
mov
mov
cmp
add
pushf
dec
cmc
addr16
mov
push
push
inc
xchg
mov
sub
fsub
or
lea
sahf
inc
mov
xor
mov
pushf
mov
addr16
push
test
jmp
in
mov
push
add
mov
popf
inc
xor
roll
xor
gs
and
lods
loopne
stc
fs
adc
inc
push
sti
inc
pop
adc
sub
cmp
fwait
adc
mov
mov
sbb
push
stc
cmp
xchg
or
add
dec
cmc
out
rolb
test
les
push
xor
xchg
push
push
pushf
out
ficoms
jmp
jge
xchg
mov
test
int3
iret
fildl
enter
ja
jno
lds
inc
mov
notl
insl
pushf
out
repz
mov
mull
push
fimull
addr16
enter
and
popf
out
call
roll
int
pop
rcll
std
int
cmp
mov
pop
fisubl
sbb
mov
push
fmulp
mov
jbe
aam
cmc
negb
mov
and
into
stos
xor
out
stc
sbb
out
jns
test
jecxz
push
ds
jne
fucomp
mov
test
fwait
lods
mov
push
fldt
lahf
scas
ret
push
inc
inc
in
xchg
mov
call
pop
cmpsb
mov
gs
jmp
cmp
mov
stc
mov
sbb
inc
add
add
add
shrl
cli
rcll
sub
gs
nop
cwtl
xlat
xor
into
pop
inc
xor
lahf
dec
mov
popf
into
movl
xor
sub
pop
call
push
mov
fisttpll
aaa
inc
adc
jnp
ret
iret
leave
lret
pop
inc
andl
out
repz
xchg
leave
or
sahf
fidivrl
mov
pop
jge
push
adcb
in
pop
lahf
add
adcb
and
or
add
sbb
or
push
jae
inc
mov
cmp
xchg
iret
std
mov
sti
sub
pop
push
daa
xchg
ret
out
and
jo
sub
adc
jo
ficoms
inc
loopne
test
pop
imul
adc
jle
loopne
push
addr16
push
gs
dec
cmp
fildll
je
sub
in
cmp
inc
fstpt
mov
repz
jnp
mov
inc
cmp
mov
loopne
pop
adc
stc
outsl
test
xchg
pminub
push
mov
add
add
mov
xor
jnp
ret
arpl
out
in
addr16
cmp
int3
push
fsubrs
pop
dec
or
repnz
xor
movsl
inc
out
cmp
test
mov
insb
lds
mov
aaa
dec
dec
outsb
out
inc
sbb
sbb
mov
jae
pop
outsb
enter
sub
adc
imul
js
push
out
sti
insl
pop
imul
or
cmpsb
movsl
popa
push
dec
inc
bound
mov
xor
jo
andb
inc
dec
sti
into
es
xchg
loope
push
add
movsl
mov
push
jmp
sub
test
ret
sub
ret
outsb
fistl
mov
cmovp
dec
pop
and
mov
adc
test
jae
lret
inc
movsb
test
ljmp
xor
or
push
jge
cmpsl
sbb
xor
aaa
mov
mov
xchg
into
repnz
in
lea
cmpsb
pop
xchg
lret
insb
dec
adc
aam
mov
movb
fadds
push
or
inc
popf
or
mov
xlat
pop
pushf
or
nop
add
cwtl
lret
adc
lods
cs
mov
mov
leave
pop
and
jb
dec
jb
sbb
lods
std
pop
mov
adc
cmp
and
stc
outsb
test
mov
push
xor
push
add
push
hlt
movsb
scas
add
jmp
mov
xchg
mov
or
adc
sahf
jo
mov
clc
mov
inc
pop
rcrb
sub
mov
ret
xor
inc
add
ret
sub
popf
pop
fnsave
leave
scas
test
in
test
jns
adc
mov
out
xchg
in
mov
pop
imul
leave
lea
xchg
aas
push
inc
lret
lods
add
insb
xor
cmc
adc
adc
mov
fiadds
mov
and
jmp
popf
pop
add
push
and
pop
mov
cmp
or
xor
test
lea
jl
fs
fs
mov
adc
and
sarl
cmc
mov
or
pop
aaa
dec
sbb
jnp
fsubrp
or
lret
subb
sub
dec
aas
les
in
pop
and
jae
or
cmc
mov
sti
icebp
and
pop
adc
mov
push
mov
cmp
iret
movl
sarb
xchg
rorb
xchg
xchg
lahf
add
stos
in
imul
sub
imul
inc
addr16
jmp
js
arpl
lds
ljmp
out
add
push
mov
imul
nop
imul
cmp
jb
mov
mov
mov
sub
mov
daa
movsb
mov
sub
enter
jge
dec
xchg
ret
cmpsb
dec
cmp
xchg
stos
outsb
fdivl
negl
mov
cwtl
das
cmp
ljmp
gs
jmp
lcall
jp
aas
jmp
inc
mov
or
dec
clc
ficompl
push
iret
jg
mov
jp
cmp
pop
and
sub
push
call
repz
sub
fistpl
xor
jae
movsb
jne
inc
push
pop
jecxz
dec
es
and
mov
rcrl
cmp
mov
pop
sub
fistpl
mov
and
subb
push
pop
into
cmp
add
je
cmp
dec
pop
and
jecxz
lods
mov
jg
cs
pop
bound
sbb
mov
cli
hlt
scas
fimuls
sbb
mov
ja
out
sub
out
es
mov
xchg
stos
adc
xchg
bound
stc
xor
cltd
negl
clts
sbb
lods
cmp
pop
xchg
stos
sti
out
mov
xchg
in
cmp
pop
dec
jle
cmpsl
and
daa
jecxz
ljmp
add
mov
std
mov
push
sub
push
stc
cmp
loopne
js
mov
mov
xchg
adc
add
leave
es
cwtl
test
push
add
cltd
inc
movsl
push
jbe
je
sub
dec
js
ds
and
xor
jo,pt
fs
loope
sbb
mov
add
inc
fwait
sti
or
stc
xor
dec
ficoml
xor
pop
sub
xchg
ss
addr16
mov
sbb
or
xchg
inc
out
faddl
pop
sarb
rcll
test
add
rorl
add
repnz
inc
aaa
hlt
ljmp
and
xor
xor
or
in
data16
cld
mov
stc
mov
cs
mov
jmp
outsl
cmp
and
clc
cmp
xchg
jns
cmp
mov
notl
cld
lods
dec
cli
scas
xchg
push
xchg
js
das
imul
movsb
jmp
xorl
lods
out
pop
sahf
xchg
cmp
mov
sbbl
lds
add
add
mov
fstpl
add
fmull
mov
pop
andl
pop
repz
xor
aaa
out
in
outsb
pop
gs
popa
push
mov
je
push
pop
push
xor
mov
in
mov
in
push
shlb
or
lcall
fnstenv
fcmovbe
fdivrl
int3
in
ss
ror
mov
out
jno
sbb
and
aas
cld
jmp
notl
ficoms
test
ffreep
xor
imul
sbb
in
sbb
or
fsubl
cmpsb
arpl
addr16
mov
leave
in
aas
jle
adc
imul
enter
mov
mov
into
xlat
jle
mov
sarl
sub
ljmp
or
pushf
xchg
int
fucomp
pop
lods
mov
in
test
es
mov
shll
push
mov
dec
insl
cli
icebp
hlt
mov
xor
dec
xlat
movsb
and
movsl
outsb
in
ja
or
pushf
orb
stos
jecxz
loop
test
jecxz
xchg
repnz
pop
adc
push
cmp
pop
int3
out
and
cltd
loopne
push
cmp
pop
movsb
xor
mov
popf
aaa
adc
stos
in
mov
jo
rolb
in
fwait
mov
scas
mov
add
cs
popf
dec
inc
push
aaa
lock
imul
aam
out
popf
sahf
add
pusha
mov
test
or
jns
stos
outsb
lahf
lea
push
test
aam
shlb
mov
mov
dec
outsb
in
jg
sub
scas
add
jnp
insb
mov
enter
outsb
inc
outsl
rorb
movswl
dec
or
jg
cmp
popf
sbbl
xor
add
mov
inc
es
pushf
sbb
fs
xor
pusha
ret
adc
pop
cmpsb
lods
stc
data16
mov
rclb
xlat
test
sub
jbe
bswap
fldt
dec
adc
sti
push
adc
add
cmpsl
push
and
xchg
lock
int3
sbb
xchg
pop
dec
cmp
mov
ret
push
cmp
mov
xor
adc
repnz
add
int3
cmp
roll
sub
mov
call
lahf
test
or
xor
adc
aad
fwait
jo
jns
int
neg
into
jne
add
pop
rorl
lds
sahf
dec
push
pusha
dec
adc
enter
bound
loopne
call
aaa
int3
sbbb
push
mov
inc
pusha
ss
fmuls
aad
movsb
xor
popa
adc
push
addb
das
jno
pop
push
xchg
jno
int3
inc
dec
fs
fldt
mov
mov
and
cmp
add
stos
and
cwtl
scas
inc
mov
movsb
gs
jb
pop
packuswb
add
inc
cmp
fadds
pusha
xchg
cmp
jns
das
call
ss
shrb
hlt
cmc
inc
sbb
adc
inc
outsb
loopne
shr
fwait
loope
stc
mov
xchg
aas
insb
inc
inc
outsb
sahf
mov
pop
adc
adc
pushf
ss
xor
sbb
mov
out
mov
mov
faddl
jge
movl
push
call
jge
shr
cmp
xchg
sarb
insl
fsubl
jae
xchg
movsl
cli
adc
jnp
stos
jmp
cwtl
adc
push
cld
pop
imul
cld
mov
xchg
mov
xor
xor
mov
pop
cmp
nop
notl
aaa
xor
pop
cli
loopne
dec
add
adc
mov
sar
ret
int
sub
jnp
lods
or
xchg
xchg
ss
pop
and
ljmp
push
outsl
mov
clc
call
les
dec
inc
je
shlb
daa
out
loope
sbb
clc
pop
mov
jmp
leave
out
or
jae
bound
mov
push
repz
shr
inc
mov
push
repnz
cmc
outsl
fdivrs
movsb
cmc
inc
imul
inc
cmc
shll
jge
cmpsb
push
mov
int3
inc
or
mov
mov
loopne
ss
dec
xor
mov
xchg
inc
sahf
xchg
adc
or
sbb
sub
mov
ret
sub
daa
pop
nop
aam
fidivs
mov
lds
insb
sarb
ss
insb
mov
loope
pop
adcb
push
sbb
sub
dec
dec
in
aad
pushf
imul
sbbb
hlt
inc
push
push
mov
jmp
and
fbstp
sbb
push
jge
sbb
mov
cmpsb
shrl
pop
dec
decb
pusha
sub
push
popa
mov
adc
mov
jns
vandnps
sahf
sub
jmp
movsb
mov
lods
ficoms
cld
adc
fdivrs
pushf
or
test
sarb
das
sar
cmpsb
loope
sbb
and
adc
and
sub
add
xchg
jns
sbb
add
mov
sub
icebp
fmul
rolb
inc
je
xchg
sub
mov
push
pop
std
call
lahf
pushf
add
pop
adc
and
xchg
adc
clc
inc
cmp
pop
xor
out
ja
dec
or
cwtl
stos
mov
fisubrs
add
test
lret
mov
fists
pop
dec
pop
push
les
pop
cmp
clc
rol
adcb
push
loop
mov
popa
add
popf
mov
push
sub
push
add
sbb
xor
cmp
loop
dec
sub
nop
lret
mov
jbe
sub
rorl
clc
ds
jbe
in
adc
js
push
mov
out
cmpsb
xchg
pop
shll
mov
aad
sbb
stc
ja
sbb
inc
pushf
push
or
add
sub
add
add
add
mov
push
lcall
gs
push
scas
das
mov
scas
xor
in
jl
push
xchg
dec
and
push
lea
lods
push
sbb
jmp
or
adc
out
xor
ror
lods
mov
push
inc
sub
call
dec
addr16
les
push
push
es
cld
dec
mov
jp
mov
pop
inc
sbb
dec
pop
sbb
cmp
xchg
push
and
jge
or
cltd
mov
inc
into
cwtl
enter
out
jns
add
mov
jecxz
lret
sarl
fnsave
xorb
mov
scas
pcmpeqb
shr
testb
add
push
ret
push
jecxz
mov
sub
push
clc
mov
sub
paddw
push
and
add
adc
les
or
jae
leave
loope
outsl
lods
dec
jge
pop
lret
lods
mov
movsb
mov
sbb
inc
lods
stos
scas
nop
adc
loopne
sti
dec
mov
insb
cmp
jae
sub
shl
ja
loope
lcall
sbb
mov
aas
lcall
jmp
testb
int3
ds
shlb
test
mov
or
cmpsb
adc
cmp
in
mov
pop
sbb
ret
adc
and
ret
outsl
lret
pop
cmpb
adc
enter
xchg
sti
hlt
mov
sbb
clc
mov
and
lods
or
jge
lods
rol
adc
jae
or
loope
xchg
sbb
lcall
lock
xor
mov
test
push
mov
adc
idivl
mov
inc
dec
xchg
xlat
aam
xchg
jbe
aaa
mov
push
outsl
mov
cmp
test
cs
cmpsl
dec
jecxz
ja
mov
mov
pop
mov
pop
and
inc
scas
das
mov
and
hlt
xchg
mov
cmpsb
movsb
jns
sbb
repnz
push
sbb
ljmp
push
jnp
and
roll
push
rcll
and
xor
mov
jl
popa
sti
sub
sbb
pop
unpckhps
fwait
jb
xchg
and
movsb
push
movb
insb
push
insb
ds
lret
mov
mov
sub
in
sbb
ret
and
jo
int3
inc
mov
jle
mov
jo
in
push
and
mov
xchg
je
stos
mov
imul
loopne
xor
outsb
dec
fnstcw
pop
div
sahf
mov
add
cmp
sbb
push
icebp
and
pop
jmp
jbe
inc
ss
push
mov
or
popl
fsubp
pusha
jge
hlt
adc
shll
jne
cmp
jp
pop
xchg
jb
je
dec
mov
xchg
test
lret
adc
aad
repz
test
enter
mov
and
adc
fsub
push
jmp
mov
or
loope
bound
fistps
loope
xor
outsb
lret
ret
fnstenv
sar
push
int
stc
leave
push
sbb
cs
lock
or
sub
xor
enter
and
fsubl
add
out
aas
test
dec
push
nop
mov
jnp
out
mov
popa
sub
sbb
lods
outsb
mov
mov
imul
mov
sbb
int
ljmp
adc
jp
mov
daa
mov
sahf
xchg
in
adc
sub
push
nop
adc
jbe
push
sub
sahf
xchg
rorb
push
push
fst
jns
inc
xchg
hlt
fwait
sub
js
mov
mov
cmp
aam
mov
fnstsw
pushf
dec
pop
pop
jg
fiadds
jmp
imulb
mov
lock
mov
dec
xor
fmull
mov
mov
cmp
xor
mov
cmpsl
orb
test
fsubr
jg
xlat
pop
push
and
or
dec
nop
and
movsl
jecxz
sub
call
xchg
std
and
aad
push
mov
popa
jle
bswap
dec
decl
cmp
push
push
add
pop
push
out
mov
cmp
cmpsl
push
punpckldq
jns
xchg
popf
or
fnstenv
or
push
bound
enter
sbb
sbb
insb
gs
adc
sbb
jno
test
mov
fisubrl
pushf
mov
add
dec
int
push
scas
inc
gs
or
mov
js
mov
jbe
add
xor
push
jl
jo
mov
push
mov
push
push
mov
repz
arpl
insb
cld
lock
ljmp
mov
cmp
lret
add
mov
jmp
out
xchg
jbe
stos
add
xor
mov
jp
subl
iret
jno
mov
dec
pop
lds
sub
dec
adc
push
cmpsb
sbbb
adc
sub
pusha
fwait
mov
les
out
into
call
data16
scas
cld
inc
dec
scas
pop
inc
loopne
mov
mov
int
daa
pop
js
dec
xchg
mov
into
popf
notl
push
mov
insb
sbb
or
push
mov
sub
in
xchg
out
in
xchg
fadds
sbb
shll
sub
mov
jbe
test
jns
dec
or
adc
rclb
js
incl
jecxz
xor
lahf
testl
fwait
xor
cs
inc
sbb
sti
pop
or
shlb
and
pop
in
sbb
push
icebp
add
gs
mov
int
pusha
jge
ret
push
jmp
sbb
xorb
push
loop
mov
sar
or
arpl
cmp
aaa
or
xchg
lahf
daa
cmp
jae
mov
sahf
push
jbe
lods
jae
aam
pop
leave
pmaddwd
shlb
adc
lcall
inc
repz
pop
int3
shlb
cmp
scas
dec
xor
cs
sub
and
cmp
ret
rol
lret
cmpsl
out
stos
mov
adc
push
popa
test
inc
stc
xchg
das
xchg
push
push
or
sbb
in
adc
or
push
add
cmpsl
push
push
xorb
mov
adc
out
add
or
mov
clc
cs
pop
sub
or
das
repnz
outsl
and
adc
pop
insb
push
hlt
ret
pop
shl
cmpsb
test
fistps
adc
pop
mov
pop
sbb
mov
std
xor
fstps
and
push
popf
out
xchg
pop
push
adc
movaps
daa
stc
jg
mov
out
add
jo
adc
sub
cmp
outsb
jno
test
add
or
addb
sub
das
loope
adc
das
mov
or
into
popf
dec
fabs
les
inc
jp
push
das
inc
inc
dec
gs
inc
jae
xor
loope
push
mov
into
fsubl
pop
sbb
jle
cmp
andb
sub
adc
pop
ja
adc
cmp
mov
xor
in
jbe
dec
leave
lcall
push
mov
mov
enter
push
add
fmuls
lds
cmp
fists
call
sub
push
je
xor
cli
adc
fdivr
pusha
sub
stc
icebp
mov
mov
push
add
jp
cwtl
mov
dec
dec
outsl
pop
sbb
mov
imul
and
enter
jnp
popa
push
and
int
jbe
mov
ret
xchg
scas
adc
fmulp
push
mov
in
lods
dec
pop
mov
stos
loop
sub
shll
negb
mov
inc
cmp
add
add
sbb
cmpl
or
movsb
and
into
cmp
push
fwait
sti
push
pop
or
mov
stos
in
jo
mov
sahf
aam
dec
push
mov
xor
jle
inc
cwtl
xor
adc
xchg
icebp
dec
or
lods
das
lea
xchg
scas
mov
in
sbb
test
test
mov
stos
inc
fimull
xchg
scas
aad
add
mov
fmull
adc
xor
cmp
mov
xor
into
mov
sahf
xor
sub
mov
xor
push
lret
jmp
mov
or
xchg
pop
mov
xchg
cltd
jnp
imul
fiaddl
mov
out
add
arpl
sbb
push
mov
or
jb
loopne
mov
mov
cmpsl
aam
and
xchg
fmull
or
ss
sbb
xchg
fstpt
rol
dec
cld
popf
add
inc
insb
push
push
fdivrl
enter
fwait
jp
jae
xchg
daa
arpl
push
loope
dec
dec
addr16
lock
gs
push
daa
out
clc
incb
pop
movsb
pop
lahf
dec
mov
add
popf
test
push
mov
aad
xlat
xchg
sahf
xchg
test
mov
adc
xchg
test
mov
cmc
aaa
js
mov
shlb
ror
icebp
push
loope
inc
lret
fbld
jns
jo
es
daa
rcl
inc
sahf
and
add
sbb
xchg
pop
xchg
stos
cmc
imul
lahf
ljmp
sbb
incl
fisttpl
scas
mov
mov
xchg
jecxz
fnsave
inc
or
mov
cmp
ss
sarl
out
repz
mov
lods
pop
ss
in
clc
pop
xchg
push
pop
inc
out
nop
enter
jnp
shlb
pop
pop
loopne
add
shll
cmp
aas
push
pop
push
fadds
or
mov
inc
ja
adc
pop
pop
xchg
lea
popf
and
data16
inc
jbe
popf
ja
les
adc
bound
jecxz
mulb
jmp
outsb
dec
mov
lea
pop
fs
add
jl
mov
sub
dec
pop
aam
jns
mov
faddl
pop
fmull
imul
jnp
loopne
jmp
les
jmp
mov
mov
pop
adc
push
mov
mov
fdivrp
in
stc
jl
imul
aaa
rcr
mov
sub
frstor
notb
movntq
packuswb
adc
sub
test
movsb
xchg
cmc
xchg
dec
mov
popa
das
loope
out
out
mov
jl
out
xor
cmp
in
jb
and
popa
test
mov
lcall
sub
ret
pusha
mov
lret
cs
ss
jbe
vpackuswb
hlt
sub
dec
divb
mov
xchg
cld
xor
adc
icebp
sbb
mov
test
gs
or
fadds
in
rorb
jecxz
jge
push
call
cmp
es
xchg
pop
dec
test
and
mov
aam
insb
int
adcb
lcall
mov
ds
inc
loopne
int
push
jo
push
test
and
cmc
ficoml
add
in
sbb
cld
iret
mov
ror
mov
fcomps
int3
pop
outsb
add
jl
pop
imul
cmp
sub
jecxz
push
fwait
cmp
out
clc
jnp
dec
ja
mov
jp
lahf
and
sahf
mov
shlb
xor
mov
inc
and
jo
lods
xor
inc
in
add
mov
faddl
ret
mov
sub
arpl
test
stc
lcall
push
out
or
rolb
mov
xor
fisttpl
jmp
hlt
scas
ss
pop
loope
scas
into
xchg
bswap
jp
fdivr
negl
fmull
pop
inc
inc
fucomi
jb
xor
mov
test
mov
mov
pop
cmpsl
fwait
and
repz
add
addr16
mov
pop
shl
xchg
sbb
push
nop
es
push
arpl
mov
movsb
repnz
sub
pop
push
mov
in
adc
out
int
popf
fldt
inc
xchg
test
loopne
daa
mov
xchg
and
leave
push
cmpsl
das
mov
jg
imul
aad
push
mov
mov
cld
pop
dec
aam
mov
pusha
pop
test
into
pop
inc
call
xchg
fs
arpl
sbb
xor
or
loopne
decl
fs
lods
adc
shrb
push
pop
adc
shl
mov
cmc
inc
fldcw
sahf
and
xchg
mov
sbb
loopne
jne
aas
lret
pop
mov
ret
hlt
xor
xor
testl
cs
in
mov
xor
test
shrl
xchg
inc
call
and
fidivrs
sbbb
sahf
xor
popa
sbbb
xchg
adc
jg
pop
xchg
lods
sahf
loope
sbb
jmp
mov
ljmp
inc
hlt
xchg
sbb
movsl
xchg
leave
sbb
jb
movsb
fdivp
push
and
pop
sbb
or
mov
dec
mov
and
jge
mov
flds
les
fists
push
pop
lcall
dec
push
in
into
push
jecxz
sbb
int3
lret
imul
push
or
mov
sbbb
xorb
fidivs
adcb
repnz
sub
xchg
stc
sbb
or
ds
xlat
cltd
sub
ds
mov
cmp
or
sub
mov
sub
xchg
bound
sub
cmp
pop
mov
and
je
adc
imul
xchg
lods
in
stos
adc
jo
mov
inc
sub
stc
lcall
mov
mov
roll
adc
pop
bound
int3
inc
push
jle
cmp
pop
push
inc
cmp
mov
int
sub
mov
mov
jmp
push
cmp
push
and
andb
inc
mov
or
test
sub
mov
xor
mov
movsl
inc
cmp
pop
cli
adc
sar
bound
inc
daa
jnp
jmp
push
adc
ficompl
lock
xchg
shr
pop
test
popa
sbb
into
mov
sub
sub
push
pop
js,pt
sub
and
movsb
and
in
insb
adc
out
xchg
mov
jo
gs
and
pop
push
daa
les
push
das
stos
pop
mov
mov
loopne
jns
adc
rorb
xor
jbe
lea
je
push
mov
mov
adc
inc
inc
inc
mov
pop
hlt
adc
sbb
cli
pop
xchg
ss
jle
test
xor
fdivrl
jo
jne
cmp
mov
dec
jnp
xor
xchg
mov
movsl
out
xor
dec
add
dec
lret
in
imul
ss
mov
in
push
es
jae
lret
in
inc
bound
jns
jg
dec
xor
repnz
push
lock
cmpsl
les
xor
andb
or
push
mov
lods
push
ret
push
ljmp
mov
daa
stc
stos
mov
stc
lock
dec
adc
dec
pop
fs
es
scas
add
loop
dec
jae
push
mov
inc
data16
push
call
movlps
jle
mov
cmpsl
xchg
add
mov
sbb
adc
sbb
adcl
or
push
cmp
xor
adc
je
pop
sbb
or
repnz
jo
jg
xchg
lods
in
dec
es
push
jg
sbb
xchg
mov
out
js
aam
xchg
aam
or
xchg
pop
xchg
ljmp
or
daa
push
mov
pushl
add
dec
cmpsl
push
dec
ss
cli
pop
ja
int3
in
addb
in
cmpsl
enter
je
inc
sub
cli
fs
push
mov
sbb
popf
cwtl
lods
mov
scas
outsb
fnstcw
mov
sahf
scas
inc
call
insb
dec
out
cmp
insb
xor
daa
insl
hlt
clc
test
hlt
inc
mov
fsts
xchg
or
xor
movsb
outsb
pop
dec
or
incl
sbb
test
sbb
imul
dec
add
pop
pop
popa
inc
and
mov
or
xor
not
aas
sbb
sub
cwtl
jl
and
inc
mov
dec
xchg
sbb
aas
movsb
jbe
xchg
or
push
out
push
push
pop
icebp
inc
pop
sbb
addr16
lock
ja
int
jo
setne
xorl
pop
mov
add
jnp
or
and
in
mov
lods
mov
mov
insl
pop
dec
cmp
jne
push
jecxz,pn
lds
sub
add
stos
adc
fnstcw
push
or
rcrb
aas
scas
fadd
mov
mov
hlt
cltd
repz
stos
mov
xchg
dec
bound
cmpsb
add
jg
add
jne
pop
insb
jnp
int3
inc
in
test
popa
dec
mov
pop
arpl
mov
popa
mov
ds
out
testl
inc
call
sbb
in
push
pushf
and
cmp
int
jl
mov
popa
add
shl
repnz
push
mov
xor
and
and
int3
nop
xor
and
pushf
aaa
jns
push
sbb
and
inc
jno
popf
mov
dec
cmp
xchg
dec
or
push
mov
jb
imul
movsl
push
out
addb
ss
inc
aam
xrelease
push
shll
adc
ficoms
hlt
stos
jno
cltd
rol
repnz
jl
cli
mov
clc
addr16
lods
ljmp
mov
or
jbe
mov
xchg
inc
clc
pop
movsb
xchg
push
cmp
or
in
mov
mov
cli
in
shrb
dec
das
sbb
enter
scas
xchg
negl
mov
iret
cmpsb
jp
rclb
cmp
adc
in
push
sub
insl
sbb
cmpsl
out
leave
sub
into
sub
jg
sti
sub
sbb
sbb
mov
call
fstl
cmp
push
inc
outsb
outsb
add
push
lods
aad
mov
movsl
sbb
pop
sub
pusha
and
push
or
dec
sub
cmp
loopne
pop
sbb
nop
sbb
add
outsb
add
xor
mov
sub
gs
adc
dec
cmp
arpl
xchg
fstl
sahf
add
jl
das
leave
js
call
lods
sbb
sub
aam
jge
sub
lcall
jl
add
xor
inc
inc
lret
xor
aaa
adc
mov
sbb
sbbl
rcrl
add
push
ffree
xchg
cmp
or
sbb
shl
movsl
in
in
push
add
je
sub
dec
mov
pusha
or
push
loopne
sub
aas
popf
scas
push
adc
repz
inc
pop
sti
inc
roll
pop
or
lds
sbb
not
push
and
pop
mov
jb
sti
fs
div
push
lea
fcomip
fcompl
cmp
mov
into
jne
lods
xor
mov
lods
les
xor
testl
or
icebp
or
or
insl
mov
push
inc
nop
out
mov
repz
stos
jno
setno
rolb
loopne
fs
test
scas
or
dec
dec
mov
pop
negl
rorl
xchg
repnz
into
jl
pop
bound
rolb
test
xchg
ficomps
outsb
movsb
sbb
gs
stos
pop
out
lea
pop
push
scas
inc
es
hlt
sub
and
adc
data16
sub
or
lds
jmp
sub
sbb
inc
outsb
aaa
in
test
lret
add
gs
inc
mul
ljmp
test
sbb
cmp
int3
mov
shl
aad
push
repnz
std
fsubrl
rcrl
movsl
mov
mov
adc
popa
adc
das
arpl
inc
or
outsb
out
pusha
imul
in
fdivrs
dec
mov
inc
lock
mov
mov
or
clc
xlat
and
cmp
iret
fwait
or
jnp
xchg
cmp
out
outsb
pop
inc
jne
gs
xchg
jle
shll
addr16
and
loopne
pop
cmp
js
sub
scas
mov
stc
ror
add
mov
lods
adc
inc
dec
imul
jno
jnp
push
lods
fcoml
fsub
xor
data16
test
inc
add
in
test
sub
jmp
mov
sub
and
adc
mov
and
arpl
jge
cwtl
jp
mov
mov
or
cwtl
sarb
enter
mov
out
imul
mov
mov
mov
nop
sbb
jl
push
sub
push
rorb
jg
loop
push
mov
jbe
popf
test
xlat
or
out
test
xchg
lcall
cld
add
in
push
push
inc
popf
mov
and
and
pop
mov
stos
jno
cmp
add
jae
mov
add
jo
fdivrs
dec
jo
pop
adc
sub
sub
push
add
adc
jecxz
es
fisubs
cmp
stos
push
dec
dec
cmp
or
pushf
inc
adc
push
out
ffreep
sbb
mov
arpl
add
pop
cmp
sub
stos
andl
mov
mov
popf
cmpsl
ds
and
lods
mov
mov
mov
push
fiaddl
aaa
adc
adc
not
dec
mov
in
sub
sahf
dec
loope
dec
cwtl
les
jecxz
out
mov
pop
dec
pusha
daa
lods
lret
lods
mov
lds
das
ficomps
pop
into
in
mov
hlt
xchg
inc
inc
je,pn
es
cmp
lret
in
adc
cld
adc
jmp
rcr
fnstenv
mov
or
mov
dec
pop
inc
jnp
enter
pop
adc
ret
inc
mov
ss
cmp
sbb
push
filds
xchg
das
lock
ret
sbb
jmp
sub
pop
sbb
lock
xor
xchg
jns
test
add
aam
and
stos
das
movsb
add
addr16
jecxz
jbe
or
daa
jns
int
fiaddl
aas
fldl
arpl
mov
jno
loop
xchg
xor
push
int
jl
ds
lods
xor
lret
sbb
mov
cwtl
adc
sarb
insl
test
cmp
into
fimull
xchg
enter
inc
icebp
adc
imul
mov
cltd
xchg
jle
add
rcll
fcmovnu
jg
xchg
jae
out
addr16
icebp
pop
adc
mov
dec
xchg
adcb
imul
repnz
loope
loop
sahf
imul
mov
or
pop
xchg
mull
and
adcb
sbb
subb
push
cwtl
ret
xor
rcrl
pop
push
in
push
idivb
add
fs
and
scas
add
mov
cmp
movsb
or
stos
and
jl
les
xchg
sub
rcll
adc
lret
cltd
fwait
in
dec
not
les
aaa
ret
cld
testl
orb
add
jo
aam
jle
push
push
mov
xor
xchg
mov
outsb
cmp
pusha
aaa
pusha
xchg
lods
jl
mov
jbe
push
std
arpl
cmpl
enter
mov
and
pop
and
lods
subl
or
jmp
push
pop
jb
add
imul
adc
sbb
ret
jmp
out
lea
xchg
fdivrs
fwait
xchg
lods
std
jbe
jo
lea
mov
jmp
or
jbe
lods
in
inc
iret
loop
add
pop
inc
nop
lds
push
cs
je
sub
add
iret
dec
sbbb
ret
xor
cs
test
add
pop
jle
jg
sarl
pop
add
ret
fimull
icebp
xor
xlat
push
sbb
pushf
ja
xor
and
xor
sbb
mov
sbb
sbb
ret
mov
sub
std
divb
mov
push
les
adc
push
pop
filds
add
push
mov
test
jo
inc
mov
sub
in
fst
gs
loope
cltd
xchg
in
push
jmp
ljmp
mov
inc
xchg
int
sbb
mov
adc
repz
imul
mov
scas
adc
sub
dec
aad
imul
testl
repz
repz
xchg
lret
pop
cmc
mov
xchg
sbb
inc
cmp
sar
jbe
mov
pop
mov
push
or
fcoml
loopne
xorb
mov
add
addr16
cmp
nop
pop
pop
push
nop
fidivs
shrb
mov
les
add
out
icebp
inc
push
jns
sub
mov
jns
fcomi
pop
lret
popf
cmc
popa
icebp
inc
testl
adcl
jl
inc
stc
nop
loopne
cwtl
lret
adc
sahf
xor
jle
sub
mov
cmpb
add
icebp
cmp
adc
jecxz
inc
sub
data16
ss
ds
repz
mov
mov
sub
roll
sahf
ret
mov
push
and
outsb
cltd
and
scas
les
inc
addr16
adc
test
test
lock
leave
shlb
aam
lret
inc
subl
xchg
xorl
ja
xchg
inc
jbe
cmp
sti
xchg
ret
sbb
dec
arpl
andb
mov
pop
mov
xchg
jmp
ret
jge
cmp
stos
lods
fwait
push
inc
enter
mov
ja
jle
test
xchg
clc
roll
outsb
clc
cmp
mov
or
add
mov
cmp
lret
jbe
pop
jns
jle
pop
into
xor
jmp
or
insl
lods
xchg
jo
repz
sub
add
xlat
stos
jns
jl
mov
jno
iret
aam
and
cli
fbld
movsl
push
cmp
ljmp
sbb
movsb
mov
iret
cmpsb
mov
ja
jae
scas
mov
mov
push
ja
pop
pop
bound
pop
or
lods
and
sbb
adc
push
shll
fldl
xchg
adc
jecxz
cmpsb
fst
jae
cmp
out
insb
imul
inc
xchg
dec
mov
xchg
pop
inc
sub
out
cmc
movsb
jmp
lahf
cmc
out
sub
lds
and
pop
sbb
mov
pop
dec
test
inc
push
jmp
hlt
sub
loope
dec
cmp
mov
gs
shr
add
in
pusha
mov
stos
mov
push
test
and
push
dec
bnd
and
inc
sahf
and
insl
inc
mov
aaa
jb
xorb
in
rorl
aas
stos
and
je
jp
test
iret
rorb
dec
push
push
xor
mov
dec
mov
aad
adc
out
mov
or
and
data16
idivl
andl
dec
scas
dec
hlt
lods
js
movsb
push
push
popf
pusha
mov
xor
fcmovbe
xchg
or
mov
sbb
adcl
adc
cmp
lea
xor
or
call
jbe
outsb
out
push
es
add
xchg
sbb
std
int
cmc
arpl
xchg
dec
pusha
push
push
scas
scas
mov
scas
movsl
in
jg
data16
mov
add
push
enter
jl
mov
addr16
mov
push
cmp
ljmp
imull
arpl
repz
divb
push
mov
loopne
xchg
inc
loopne
loop
push
mov
in
jp
adc
or
jnp
xchg
lcall
cmp
lret
nop
mov
outsl
insb
cli
inc
jnp
jbe
pop
js,pt
out
test
xorl
mov
mov
push
movsl
mov
push
inc
mov
movsl
push
mov
jb
out
popf
jbe
faddl
leave
push
repz
inc
sbb
loop
jge
adc
je
cmp
loop
scas
adc
int3
dec
rcrb
xchg
test
ja
lods
jno
inc
out
pop
popa
lods
jns
xor
cltd
push
add
ret
or
sub
cmc
stos
push
dec
sbb
into
mov
iret
sbb
cld
out
nop
rorb
inc
outsl
lea
pushf
adc
mov
sti
push
adcl
adc
jo
xchg
in
mov
mov
loop
jne
adc
xor
or
cld
or
loop
daa
and
popf
jnp
add
mov
and
or
adc
lcall
pop
cs
push
in
adc
pop
jg
jmp
sahf
pop
roll
aas
dec
inc
int3
jmp
mov
leavew
and
and
les
mov
push
add
shll
jle
push
dec
mov
inc
xchg
lahf
imulb
xlat
movsb
push
sbb
insb
pop
lcall
xchg
push
sti
mov
pop
aam
jnp
mov
into
inc
lods
jns
push
pop
sbb
stos
cmp
cmpsl
sahf
lock
fldenv
fwait
push
out
mov
in
ret
sub
sbb
and
in
insl
jae
cmp
adc
pcmpeqb
subb
xchg
inc
je
clc
scas
xchg
push
out
mov
cli
mov
popl
pusha
xchg
sbb
cmp
dec
fildll
repnz
jo
aad
cli
lock
xlat
or
stos
in
push
push
gs
lock
aas
xchg
pop
mov
mov
aad
inc
sub
mov
cmp
pop
mov
xchg
lcall
cmpsb
lcall
xchg
fisubrs
pop
push
popf
aad
mov
in
cli
in
cmp
js
cwtl
add
xor
sub
inc
cmpsw
lea
stos
repnz
icebp
sahf
lea
mov
scas
movsb
frstor
jecxz
jecxz
sub
dec
mov
mov
sarl
and
pop
xor
test
sahf
or
xor
icebp
xor
sbb
fildll
bound
mov
lret
sbb
add
pop
les
test
inc
mov
push
stc
add
push
adc
call
in
or
xchg
lds
addr16
sbb
mov
imul
sbb
push
cld
mov
jno
jg
je
jne
and
lahf
inc
pop
mov
pop
pop
dec
jae
imul
outsb
fldenv
inc
adc
add
sub
xchg
repz
pop
jmp
mov
push
sbb
subl
add
aaa
clc
out
into
je
mov
or
jbe
in
adc
repz
pop
xchg
push
les
gs
cmc
out
pusha
pop
sub
pop
cwtl
jg
mov
shl
jmp
fwait
mov
ja
add
inc
out
dec
dec
out
add
fistpl
pop
or
jmp
out
lcall
rcl
mov
sbb
xchg
adc
cmpsb
dec
dec
jnp
dec
popa
mov
pop
push
xor
mov
push
popf
cli
sub
mov
xchg
jmp
sahf
movsb
push
sahf
ds
xlat
out
cs
movsl
xor
test
xchg
daa
insl
and
adc
cmp
shlb
mov
mov
pop
add
inc
inc
dec
lds
lcall
mov
pop
inc
adc
jg
addl
sbb
adc
arpl
sbb
je
mov
rcrb
fucomi
push
loopne
sub
pushf
inc
push
fwait
pusha
int
mov
in
movb
cwtl
das
or
sub
sub
xchg
mov
divb
inc
mov
inc
jb
shlb
lcall
inc
inc
test
pmuludq
std
jmp
xor
push
rcrb
in
dec
fstl
insb
and
jl
push
adcb
rcrb
inc
pop
int3
insb
movsb
js
dec
push
or
cmp
and
ja
loop
xor
mov
mov
loopne
lcall
push
fwait
adc
js
sub
call
inc
fstpl
cmp
adc
inc
cmp
jae
mov
inc
push
xor
popl
or
pop
and
xlat
test
out
comiss
stc
nop
inc
cmp
aas
mov
clc
inc
sub
mov
dec
push
call
aaa
repz
xor
xchg
mov
pop
push
aam
dec
xchg
adc
mov
pop
scas
js
jb
int
pop
je
add
sub
adc
pop
loope
sub
insb
jmp
fsub
fwait
imul
or
popa
lock
push
ret
and
das
pop
xchg
cli
cli
add
in
popf
loop
movsb
xor
sub
xorb
sub
jnp
dec
ret
and
mov
lahf
push
jcxz
int3
dec
lahf
test
ffree
cmpsl
fsubs
nop
fldt
mov
stc
mov
adc
cmpsl
daa
leave
inc
imul
ljmp
repnz
add
fstps
jl
push
pop
popl
pop
cmp
cmp
fs
jno
push
loope
mov
aad
xchg
test
repnz
in
fimuls
pusha
imul
xlat
or
mov
or
shll
dec
cmp
je
mov
sbb
aam
push
test
lahf
mov
dec
jp
arpl
add
adc
add
rol
addr16
stos
fstl
sbb
cltd
ret
pop
mov
cld
icebp
ficoms
dec
es
bound
int3
in
xor
xchg
lea
xor
stos
fcmovnu
test
sub
rsm
or
daa
leave
int3
dec
dec
mov
xor
jb
cmp
scas
pop
and
aaa
mov
dec
shlb
jbe
sarl
sub
or
outsl
addr16
and
movsl
push
std
out
aaa
fstps
xor
rol
fwait
pop
push
sahf
imul
pop
pop
repnz
loopne
mov
jle
mov
je
icebp
sub
cmpsb
test
add
inc
lock
push
leave
and
push
je
jg
fstps
dec
jbe
jp
add
in
push
jecxz
xchg
stc
or
aaa
mov
sub
loope
fwait
xchg
sbb
mov
mov
pop
hlt
subl
jp
xor
cmp
push
push
lcall
das
or
sub
mov
in
rcrl
xchg
out
idivl
loope
add
rcl
inc
cmp
fistps
jnp
sub
mov
add
mov
mov
cltd
adc
addr16
hlt
stos
lcall
adc
out
es
inc
stc
sub
fiadds
lret
dec
rcr
int3
xchg
jno
pop
push
bnd
adc
outsl
xchg
lcall
sbbl
mov
or
lds
test
xor
es
push
sub
stc
xchg
mov
add
cmpsl
stc
xchg
push
lret
xchg
pop
hlt
sbb
jae
mov
mov
enter
adc
iret
in
dec
aad
and
outsl
sub
cld
ljmp
sbb
movb
sbb
sbb
arpl
jge
sbb
cmp
rcl
out
mov
pop
ja
dec
lret
pop
inc
and
xor
data16
dec
fcoml
test
push
or
inc
jo
sbb
dec
xor
cmpsb
jmp
scas
das
sbb
hlt
sub
and
mov
popf
icebp
or
leave
sbb
ret
in
pop
mov
xchg
add
xchg
fcompl
leave
enterw
inc
loop
xchg
in
lret
push
cmpsb
rcrb
mov
gs
imul
in
pop
test
jne
sub
pop
mov
mov
push
mov
decl
sbb
ljmp
pop
xchg
cmp
mov
hlt
or
pop
cli
scas
inc
call
sbb
add
clc
fdivrl
incl
dec
loope
fs
cs
rol
xlat
das
push
xor
sbb
adc
or
mov
in
lcall
inc
mov
or
xor
push
xchg
and
dec
fisttpl
cmp
gs
jae
ja
fwait
pop
push
mov
push
adc
mov
jle
jb
clc
stc
cmpsl
iret
and
mov
adc
or
mov
aad
dec
fs
adc
movsl
insb
sbb
cmp
aad
pop
or
add
aas
stos
push
mov
mul
dec
sub
mov
mov
push
mov
cmp
fwait
les
fsubr
imul
mov
dec
cmc
push
cmp
loopne
shr
adc
scas
xor
hlt
stos
xchg
xor
in
push
ljmp
pop
push
lahf
gs
movsb
out
ja
testb
test
cld
xor
jmp
outsl
or
mov
pusha
in
neg
and
inc
inc
cmp
cwtl
mov
lcall
push
dec
ss
pop
aaa
inc
add
ds
or
sub
add
rorb
es
clc
cmp
daa
jg
cmp
mov
and
mov
in
mov
or
fs
popf
push
adc
sub
fwait
jmp
sub
movsb
ljmp
clc
outsb
mov
jns
out
insl
sahf
or
out
pop
xor
fnstsw
jl
call
and
jmp
and
sub
dec
push
imul
ja
mov
jle
mov
pushf
popf
shrb
pop
loope
add
xor
dec
jl
mov
repnz
push
leave
fsts
ds
inc
xor
jle
out
cmpl
shlb
rcl
lcall
pop
pop
add
test
jl
icebp
cmp
or
pop
cmp
aad
jge
xor
mov
scas
sub
pop
mov
loop
loop
cwtl
pop
add
mov
cld
inc
icebp
mov
mov
popf
popf
inc
clc
xor
mov
fidivrs
sub
ljmp
mov
jno
pop
lods
lret
fxch
testl
lods
xchg
into
sub
sbbb
jo
mov
and
and
clc
nop
popl
pop
mov
or
adc
bound
pop
sub
repnz
cmp
flds
shll
idivl
add
adc
pop
shlb
xchg
sub
push
mov
add
add
loope
mov
and
roll
inc
mov
clc
push
cld
cmpsb
and
scas
daa
in
add
xor
or
out
aaa
test
jae
shlb
add
out
packssdw
xchg
rcll
add
fstpt
xchg
sub
and
sbb
push
out
adc
sub
out
mov
xchg
aad
or
cmp
sub
inc
jle
mov
sahf
jno
rol
push
mov
xor
pop
sub
cmc
ds
in
pop
mov
shl
out
fsts
sbb
add
adc
out
aad
lock
mov
pop
xchg
mov
push
lods
aad
push
xor
dec
ja
or
in
movsb
jle
scas
mov
mov
dec
pushf
movsb
cmc
jo
popa
fisubl
scas
pop
and
stos
mov
adc
xchg
cmp
mov
inc
fs
scas
add
fs
xchg
jg
scas
lret
jge
or
mov
mov
mov
clc
sub
or
cld
xor
add
hlt
into
add
adc
adc
fnsave
addb
xchg
outsl
movsb
cmp
aaa
xor
xor
inc
addr16
push
pop
enter
sbb
fwait
inc
mov
sbb
stc
push
add
or
jae
cmpl
push
xor
into
cs
dec
jp
xor
rcrb
and
icebp
sub
push
hlt
adc
jbe
in
pop
sbb
jle
pop
sbb
xor
movsl
mov
push
insb
mov
loopne
push
mov
xor
jl
mov
xlat
ret
movsl
jb
push
mov
cmp
inc
orb
xlat
frstor
mov
inc
inc
imul
bound
lods
push
lahf
inc
mov
add
ss
jns
dec
mov
xchg
clc
lea
das
xchg
insb
aam
filds
lds
gs
and
push
addb
mov
sub
int
cmp
cltd
pop
adc
test
fcomps
mov
je
inc
scas
push
mov
notb
lods
add
mov
call
cwtl
out
rolb
cmp
and
xchg
push
fmul
push
outsb
in
and
stos
repz
jg
mov
dec
sbb
add
je
jp
jge
lret
add
lret
bt
stos
adc
outsl
aas
or
adc
lret
mull
mov
cmp
cmp
arpl
cmp
daa
imulb
lcall
ret
aaa
loop
mov
or
ret
stos
leave
in
orl
adc
ret
cmp
push
mov
sbb
mov
and
xor
add
mov
add
inc
aad
sub
xchg
push
jle
pusha
xor
mov
int
nop
cltd
mov
dec
sbb
sbb
lea
leave
repz
shrb
arpl
mov
pop
data16
and
lea
inc
mov
pop
out
les
stos
leave
loop
inc
mov
ss
mov
cmpsb
lahf
ja
sbb
xor
inc
inc
sti
pop
outsl
pop
pushf
faddl
adc
sbb
bnd
xor
push
nop
or
imulb
or
cld
ret
lock
xchg
bound
sbb
push
fdivs
mov
movsb
mov
ljmp
jne
outsb
add
fiadds
or
aad
aam
mov
into
sbb
es
inc
cwtl
cltd
push
jp
mov
or
clc
or
push
pop
les
inc
jbe
sbb
dec
jmp
scas
enter
movsl
sub
adc
dec
jo
xor
pusha
xor
or
inc
loope
push
pop
subb
data16
xchg
lcall
ret
jle
dec
adc
lods
xor
rolb
jbe
or
dec
mov
icebp
mov
lahf
mov
stos
lea
ljmp
xchg
add
subb
enter
cmp
out
fadd
lret
mov
fwait
test
les
sbb
or
outsl
jmp
and
or
add
adc
test
sbb
ja
dec
scas
js
xor
mov
jb
insb
cmc
inc
mov
int3
out
mov
push
fdivrs
pop
inc
cmp
out
nop
clc
sbb
or
cltd
lcall
mov
in
fldt
cmp
and
push
imul
mov
test
and
mov
sbb
pop
mov
leave
pop
xchg
les
xor
pop
mov
mov
and
leave
mov
mov
ret
or
popw
jg
repz
push
xchg
ss
cmp
jle
dec
daa
push
mov
lds
and
inc
lods
outsb
push
mov
sub
decl
nop
mov
fcmovnu
test
cmp
xchg
mov
sbb
sub
lea
push
in
hlt
jle
movsl
xor
outsb
rclb
pop
aaa
sub
cmp
dec
mov
aad
fnstcw
sub
cmp
ljmp
or
mov
pop
xor
xchg
sub
cmp
aas
test
mov
mov
das
pop
jp
mov
test
arpl
or
sub
in
mov
arpl
dec
loop
es
lcall
inc
xor
imul
sbb
hlt
xor
aam
rorb
insb
xlat
cmp
insb
xor
rolb
cltd
sarl
xlat
cmpsb
dec
jge
xchg
xor
add
mov
add
popf
negl
jl
mov
xchg
in
mov
nop
in
pushf
popf
stc
push
mov
cld
inc
test
sub
orl
sbb
or
fcmovu
push
mov
sahf
fldenv
es
scas
shlb
adc
out
adc
or
ret
jmp
jp
gs
testl
mov
xlat
popf
test
popf
cmpsl
lcall
and
or
xchg
cmp
inc
adc
xchg
xchg
ss
add
daa
les
jl
jnp
icebp
pusha
push
jl
jg
nop
inc
xor
out
gs
cmc
prefetch
xchg
iret
jnp
jne
daa
or
mov
mov
out
xor
pop
pop
scas
fildl
dec
or
fdecstp
cmp
sub
dec
and
aam
scas
xchg
dec
jnp
jb
das
stos
dec
xor
sti
cmp
cli
loopne
mov
xor
pusha
mov
mov
add
icebp
std
je
mov
gs
pop
xchg
insl
add
ret
mov
icebp
pop
add
inc
int3
cwtl
lods
test
push
adc
nop
inc
push
push
int
repnz
repz
mov
cltd
and
inc
fidivl
add
mov
int3
rorb
leave
dec
pop
ss
pop
shl
or
es
xor
sbb
dec
mov
cs
jmp
pop
dec
sbb
xor
es
push
cs
imulb
int3
test
xchg
lcall
push
inc
stc
icebp
loopne
xchg
jp
pop
mov
cli
cwtl
sbb
sbb
jnp
xor
push
subb
push
cltd
shrl
pop
arpl
mov
cwtl
mov
mov
test
ss
cmpb
jecxz
push
push
mov
js
and
mov
inc
sbb
lcall
lock
movsb
xchg
fwait
pusha
stos
arpl
sub
xor
inc
xchg
jbe
cmp
sbb
addr16
les
lock
jecxz
xchg
mov
lock
aam
cmp
lret
push
shll
fimull
out
or
pop
fucomp
sub
daa
add
loop
repz
and
iret
xchg
cmp
jno
xor
insl
std
icebp
inc
addr16
in
andl
lods
adc
fidivl
pop
adc
cmc
repnz
or
lods
xlat
mov
push
mov
or
popf
sbb
fcoms
and
mov
mov
imul
dec
movsl
iret
jmp
add
jno
jo
push
stc
fcomp
es
adc
into
jns
jae
xlat
xchg
push
sub
out
push
cmp
cmp
xchg
or
jl
sbb
mov
cmp
dec
adc
daa
or
les
into
mov
add
aaa
push
icebp
mov
vpsubusb
or
jo
lock
pop
sarb
pushf
iret
jno
xchg
jb
clc
adcl
push
out
push
mull
adc
jnp
mov
adc
fsubl
and
in
cmp
pop
popf
in
clc
or
arpl
jne
jb
sbb
cmp
adc
xchg
push
shrl
insl
xchg
sar
in
mov
stos
mov
or
shl
cmp
xchg
add
iret
dec
dec
sbb
cmp
ret
sub
pop
ss
fcomps
inc
rorb
imul
mov
pop
pop
pusha
sbb
in
mov
pop
jo
cmp
nop
into
mull
data16
or
andl
push
rclb
mov
push
ss
je
push
popa
cwtl
out
cmp
daa
pop
mov
addb
shld
pop
jns
and
or
test
out
dec
aaa
cwtl
mov
les
pop
pop
mov
mov
xchg
xchg
dec
pop
cli
popf
movsl
push
inc
dec
rcll
in
mov
shll
movsb
daa
cmc
mov
rcll
adc
push
inc
addr16
dec
xchg
mov
pop
js
andb
xchg
cmp
inc
outsl
sub
frstpm(287
lock
adc
jmp
imul
mov
adc
jmp
es
cmp
mov
in
jge
repz
push
ds
dec
and
ret
jmp
pushf
frstor
fnsave
xor
adc
dec
test
fsub
ss
xor
shlb
xchg
mov
das
mov
in
into
mov
insb
sub
pop
and
rorl
gs
popa
fdivp
fld1
enter
jmp
bts
sbb
and
lea
pop
or
insb
cmpsl
xchg
movsb
inc
push
orb
sbb
add
push
jnp
adc
cmp
shll
pop
push
xlat
dec
mov
cmp
mov
test
loopne
xchg
jns
cwtl
ret
mov
fdivrs
jecxz
repz
cmp
pop
test
pop
pusha
lods
lock
inc
shll
push
arpl
pop
sub
test
leave
push
je
push
ds
scas
push
sbb
pop
mov
or
pop
inc
mov
cmp
dec
xor
sbb
shr
imul
dec
sub
in
sbb
jo
lret
fidivrl
fistps
adc
paddb
aam
pop
sti
ficomps
lock
mov
rol
mov
rolb
sub
add
push
lods
sti
dec
imul
sub
aad
fcomip
inc
into
leave
sub
jae
pop
cmpsb
loopne
filds
lds
push
pop
lods
mov
jle
adc
pushf
push
call
dec
fwait
dec
or
xor
push
adc
inc
imul
lds
mov
xlat
das
jnp
lds
inc
arpl
std
and
pop
leave
fcoms
adc
loop
fstpl
mov
xchg
xchg
jne
push
xchg
stos
mov
pop
adc
or
scas
sti
adc
insb
outsb
es
sbb
push
push
pop
jecxz
rorl
xlat
shlb
fisubrl
xchg
jmp
jle
fcoml
lea
cmp
ret
adcb
ret
dec
cmp
push
mov
jnp
jae
std
adc
pop
in
aaa
xchg
add
fisttpl
cmpsb
pop
cmpsb
cmp
daa
sti
pop
fadd
mov
jmp
pop
ret
fs
mov
rcrl
or
xlat
pop
jbe
cmpsl
icebp
inc
add
adc
cmpsb
leave
test
mov
aaa
and
lock
loope
jns
jb
cli
ja
clc
lahf
jne
scas
movsb
jb
xlat
pop
frstor
in
cmp
sub
xchg
and
cmpsb
add
lock
sbb
cmpsl
call
call
sub
dec
xor
pop
aad
popf
cld
cmp
add
shrb
inc
mov
and
repz
pop
dec
inc
out
loope
ror
add
js
es
push
adc
pop
aas
testl
clc
fs
xchg
movsl
pushf
adc
lds
or
imul
sbb
sbb
int3
js
inc
inc
add
and
sbb
add
mov
cmpsb
jne
lcall
push
xor
xchg
jge
adc
hlt
inc
push
out
leave
xchg
cmpsb
cmpl
and
mov
push
cwtl
dec
dec
push
push
pop
adc
mov
xchg
mov
lods
jb
inc
push
jno
cltd
sub
push
sub
inc
mov
mov
mov
das
sub
lock
inc
aas
push
mov
ret
mov
cwtl
call
test
lret
add
or
loope
mov
pop
adc
mov
lea
mov
out
imul
pop
sub
rcrb
test
cmp
xor
pop
push
mov
pusha
and
int
gs
xlat
mov
mov
xchg
in
into
pop
into
cmovg
inc
lret
inc
xor
mov
mov
cmp
aam
imul
repnz
mov
adc
push
mov
jl
mov
cltd
dec
and
fmull
cld
stos
div
dec
xchg
dec
push
mov
sahf
testl
decb
xchg
xchg
loop
push
inc
divb
and
imul
aad
mov
sbbb
adc
inc
pop
add
dec
addr16
sbb
push
mov
cmpl
inc
sub
inc
lock
cli
pushf
xor
in
std
push
sar
xchg
fwait
mov
out
mov
daa
xchg
xlat
mov
sub
loop
call
pop
jb
xor
and
push
and
dec
test
cmp
jnp
scas
enter
call
sbb
lods
in
addr16
fnstsw
add
lret
jne
sbb
mov
aad
mov
rorl
dec
bound
loope
leave
push
cli
shl
sub
inc
sti
imul
das
jo
aad
int
xchg
bnd
cmp
bnd
mov
mov
gs
xor
jbe
in
test
pop
mov
sub
das
add
fildll
or
mov
jg
mov
mov
cs
mov
mov
lea
mov
fstpt
or
jns
enter
notl
das
vmread
dec
xchg
repz
push
xchg
stc
cld
and
js
imull
add
lds
add
rcrl
mov
add
gs
push
push
mov
fdiv
stc
sub
adc
ljmp
mov
scas
push
and
add
lahf
fwait
es
bound
adcb
mov
pop
pop
lds
adc
xor
mov
hlt
in
in
push
cmpsl
pop
aas
ficoms
repnz
cmp
and
and
adc
mov
loop
imul
icebp
das
shlb
jno
xchg
jnp
outsl
sti
push
loope
mov
mov
fisubrs
aaa
orl
jbe
jns
mov
mov
in
bound
faddl
mov
sti
shrb
pop
into
jmp
bound
call
pop
push
jge
mov
xor
cmp
mov
pop
mov
mov
rclb
les
mov
sbb
mov
movsl
xchg
js
ret
repz
popa
test
dec
mov
jl
and
pop
mov
and
mov
mov
sub
pop
clc
dec
push
das
out
push
outsb
jbe
in
popa
cmp
fnsave
cld
mov
add
cmp
ret
fdivr
enter
and
xchg
push
lea
icebp
pop
mov
scas
xchg
and
push
cwtl
out
bnd
mov
cmc
mov
lcall
rcrl
das
ficoml
mov
jl
dec
pop
cmc
pop
jl
sub
inc
xchg
popa
dec
pop
nop
pop
test
push
mov
pop
rol
dec
pop
jb
pop
addr16
mov
mov
dec
test
ret
fcompl
xor
jo
divl
sti
cld
sbb
jle
mov
xchg
cmpsb
cmpsl
push
or
push
pop
mov
cmp
rcr
aas
dec
jbe
in
cmp
xchg
xchg
inc
and
inc
mov
fsubrs
mov
stc
push
inc
jnp
movsb
insl
enter
or
iret
test
pop
mov
cmp
mov
mov
pop
adc
pop
lods
lock
xchg
cltd
lds
sti
mov
mov
inc
mov
das
mov
addr16
jecxz
jle
add
adc
outsl
add
lock
dec
in
sub
or
mov
jnp
div
neg
jnp
inc
stc
pop
loope
imull
stos
mov
fwait
std
cmpsl
decl
lock
divl
jecxz
ja
imul
std
out
mov
stos
mov
fidivrs
xorb
xchg
push
sti
mov
je
shll
inc
fidivl
clc
jns
and
fcomps
cmpsl
leave
pop
cwtl
clc
bound
loope
inc
inc
sbb
push
xorb
lcall
mov
movsl
sbb
js
cld
dec
mov
mov
mov
dec
xchg
dec
dec
adc
or
push
fsubrs
loop
popl
testb
popa
jmp
mov
sub
add
xchg
out
pop
pop
push
imul
loope
add
and
pop
fldt
or
and
mov
enter
arpl
lea
push
rolb
inc
imul
or
jle
scas
sbb
aas
mov
cld
lret
push
fistpll
dec
bound
out
lods
aam
push
fstps
pop
roll
pop
add
repz
arpl
jecxz
std
inc
xchg
push
xchg
fcompl
mov
pop
popa
adc
mov
pop
jl
out
cmpb
lods
negb
sub
xor
sbb
dec
add
js
and
pop
ljmp
pop
push
sub
insl
sub
sbb
mov
js
cmp
aam
xbegin
mov
jns
in
pop
pop
xor
and
pop
dec
add
lret
xchg
pop
push
sub
mov
sub
cltd
arpl
inc
mov
fstpt
shrb
lret
mov
add
mov
add
add
aas
lret
call
xchg
push
xchg
aam
mov
jne
cmpsl
add
lock
sbb
xchg
mov
fmull
mov
jle
std
or
daa
cmp
data16
inc
loopne
and
pop
lcall
test
jns
sub
inc
mov
adc
push
adc
xor
repnz
aaa
cmp
xor
testl
push
aas
std
push
inc
loope
and
sub
loop
jbe
xor
jae
decb
cmp
loopne
es
mov
fistpl
push
mov
shll
xchg
testb
add
sub
xchg
adc
push
std
xor
icebp
lea
xor
gs
adc
in
mov
xor
jne
stos
mov
pop
mov
mov
mov
jbe
push
cmp
mov
sbb
or
mov
add
mov
pop
pop
adc
xor
cmpsb
ja
ret
shrl
sub
iret
movsb
add
hlt
sub
inc
mov
popa
mov
addl
aam
fsub
mov
push
sub
cmp
jnp
xor
adc
xchg
xchg
pop
push
movsl
repnz
imul
addr16
fisttpll
jae
push
ror
lods
jo
xchg
mov
call
fs
mov
popa
scas
cmp
insl
add
cmp
jmp
xchg
adc
inc
sub
jle
enter
adc
nop
leave
sub
xor
mov
lea
cmpsl
jmp
jb
jmp
ds
xchg
dec
pop
and
in
stos
jnp
cmp
adc
lods
and
xor
adc
xchg
ret
xor
or
and
into
nop
jno
js
hlt
push
or
js
pushf
out
lea
mov
dec
mov
fldenv
and
jns
mov
out
adc
xchg
shll
jmp
mov
rolb
in
dec
cld
lds
add
inc
outsl
pusha
jg
pop
faddl
cmp
push
fldt
adc
xor
enter
pusha
imul
jne
test
dec
les
insb
or
in
sub
cmp
in
and
dec
rcrl
sti
xrelease
hlt
jge
shlb
int
lret
imul
jne
lahf
and
lcall
movsb
nop
imul
sub
dec
addr16
das
mov
mov
adc
data16
dec
fisubrs
pop
push
rclb
pop
add
mov
inc
out
jmp
add
mov
lock
mov
jb
popa
in
pop
xor
mov
cmp
popa
addl
test
dec
nop
ficomps
fstps
mov
xor
add
lods
arpl
aam
fwait
mov
lds
mov
and
cmp
mov
adc
adc
pop
jle
rorb
mov
flds
into
jns
or
pop
loop
mov
fistl
test
or
not
sbb
inc
sbbb
pop
jo
inc
xor
fiaddl
mov
sti
filds
pop
mov
ficoml
or
dec
cli
sub
jae
rolb
aad
mov
jae
stc
push
loopne
add
arpl
mov
cltd
jmp
fstpl
xchg
mov
add
sub
mov
sahf
jne
lds
insl
mov
cmp
cmpl
repnz
test
inc
ret
and
jne
sbb
pop
rol
cwtl
aam
or
dec
mov
pop
xor
mov
mov
andl
andb
mov
sahf
lret
inc
push
hlt
fidivs
cmpsl
lret
ret
adc
fistpll
loop
pop
mov
sub
jno
and
or
aam
sarb
and
xchg
rorl
scas
jecxz
xor
xchg
add
sub
sbb
add
fldl
mov
mov
inc
cltd
cli
dec
addr16
pop
loope
test
mov
push
in
movsl
mov
xchg
lds
scas
popf
pusha
xlat
lahf
mov
shll
adc
cmp
sbb
push
fists
ret
mov
inc
mov
gs
push
mov
dec
jmp
je
adcl
cmp
mov
fcompl
and
jl
fisttpl
dec
mov
test
rcll
stos
xor
xor
shlb
jle
std
push
pop
jnp
ljmp
repnz
xchg
mov
inc
fs
mov
xchg
insl
decb
in
xor
mov
movsbl
sbb
pop
mov
inc
lcall
orb
jbe
lret
xchg
clc
mov
testb
adc
lcall
xchg
dec
gs
ja
mov
and
andl
rcrl
fwait
aam
cmp
repz
jecxz
mov
push
int
iret
inc
cmp
pusha
xchg
shl
add
aas
ss
nop
dec
je
filds
adcl
out
mov
push
cmpsl
out
dec
sub
mov
push
lcall
nopl
mov
and
dec
mov
mov
movsb
mov
insl
lcall
mov
push
mov
push
or
inc
or
add
xor
cs
sbb
scas
sbb
pop
mov
pop
std
lds
rol
das
aad
enter
out
mov
lea
sbb
mov
pop
xlat
mov
int3
push
enter
push
xchg
in
movsl
dec
inc
nop
pop
dec
xor
cltd
push
or
or
xor
incl
mov
daa
dec
lret
sarl
push
adc
jae
into
sbb
cmp
xor
fwait
leave
fiadds
jbe
inc
lods
test
dec
cmp
push
clc
mov
sbb
cmc
mov
push
cli
mov
aas
enter
inc
inc
xor
lock
mov
add
in
or
jle
test
pop
mov
repz
sbb
inc
add
inc
je
decb
mov
pop
pop
call
pop
jbe
sbb
stos
mul
sbb
and
outsb
hlt
out
incb
xor
cmp
jno
outsb
divb
lret
sbb
inc
mov
sbb
lret
out
mov
hlt
sbb
mov
and
sti
daa
pop
arpl
loop
xchg
lret
aaa
fmuls
lcall
mov
cs
mov
jo
call
in
jle
pop
pop
mov
xor
xchg
mulb
dec
repnz
fistl
cmp
jno
iret
jb
mov
out
loop
rcl
pop
daa
dec
mov
push
lret
mov
data16
out
push
add
jge
inc
dec
mull
adc
or
call
cmp
jb
and
mov
lcall
sub
push
xchg
cmp
jne
push
adcb
inc
mov
dec
and
pop
adc
fldcw
jae
repnz
iret
test
jns
lea
hlt
push
add
xchg
inc
dec
pop
aam
xor
shrb
or
data16
mov
push
mov
inc
pop
fs
xorb
daa
cltd
mov
rcr
cmp
int
mov
mull
sti
inc
test
data16
mov
mov
jge
add
enter
pop
cmp
mov
into
inc
inc
jecxz
dec
jnp
lret
ret
lods
and
mov
sub
out
dec
mov
push
sub
test
test
in
and
add
stos
pop
outsb
mov
hlt
and
pop
cmp
js
pop
pop
or
push
xlat
push
aaa
fldenv
pop
or
or
ja
ds
jbe
cltd
mov
sub
aas
and
les
pop
cs
cmp
push
out
jae
sbb
cld
push
pushw
insb
cs
cs
xchg
inc
sbb
mov
clc
lahf
cmpsb
dec
add
dec
jg
aaa
lahf
cmp
mov
shrl
movsb
push
adc
mov
call
fisttpl
cmpsb
cmp
pop
aaa
pop
mov
and
xor
push
adc
insl
addr16
mov
into
cmp
sub
pop
mov
test
fildl
not
pushf
scas
jns
pop
cmp
mov
jbe
orb
ss
dec
test
rorl
mov
pop
push
pop
mov
pop
daa
in
cmp
adc
lds
sti
cmp
cmp
cmp
pop
cmp
orl
xchg
mov
xorb
adc
sub
and
lea
icebp
sbb
shrl
or
and
add
mov
jno
scas
insl
mov
add
and
xchg
loop
cmp
pop
scas
cmpsl
cmp
ret
faddp
xor
inc
pushf
ss
mov
pop
xlat
push
add
call
sbb
mov
pop
aam
cmp
lret
aaa
cmp
cld
sbb
dec
mov
ror
pusha
into
sbb
mov
ret
mov
or
push
in
lret
dec
jg
imul
xor
addr16
fldcw
inc
pop
and
ja
ja
sub
gs
or
jle
xchg
cmp
mov
push
das
push
pop
popa
xor
push
pop
fcoms
inc
nop
cld
pop
mov
or
aaa
lret
jmp
int
add
jae
adc
and
push
cmp
outsb
pusha
sub
inc
mov
shr
cmp
dec
lods
pop
fidivl
and
cli
sbb
das
lret
push
sbb
mov
push
aaa
xchg
push
pop
jecxz
or
lret
inc
cmp
fstl
pop
jne
xchg
out
push
xchg
pop
ss
data16
mov
mov
cmp
imul
movsl
in
adc
pop
mull
frstor
mov
cmpsb
ret
or
push
lds
pusha
cmp
call
fists
mov
push
push
pop
clc
icebp
and
and
je
mov
sub
add
add
shl
and
sub
mov
xchg
sub
add
pop
adc
out
push
cmpsb
iret
inc
sbb
cmpsb
xor
and
cmc
adc
ret
std
mov
inc
mov
aad
faddl
lret
and
aad
mov
push
and
dec
sub
add
imul
adc
mov
rcr
push
mov
adc
cmp
sarb
and
mov
ss
les
sbb
das
test
imul
lds
mov
ljmp
sti
jmp
xor
cmpsl
sbb
test
out
xchg
xor
dec
getsec
xchg
adcl
ja
in
jbe
mov
pop
lret
arpl
sbb
push
in
mov
mov
stos
bound
pop
jp
mov
cli
movsl
dec
sub
cmp
lahf
call
ja
data16
xchg
outsl
adc
xor
add
mov
mov
mov
mov
ds
add
mov
sub
pop
adc
nop
aas
push
jg
pusha
mov
or
push
int3
call
mov
jle
andl
cs
iret
out
mov
lret
pushf
stos
stc
inc
dec
in
or
pop
adc
mov
inc
and
mov
jp
rcl
mov
jp
stos
loop
movsb
fsubp
imul
inc
subl
scas
xor
std
aas
jge
add
mov
pop
rcl
pop
stos
sbb
int
popa
jge
popf
std
nop
push
push
sbb
cmpsb
mov
imul
jge
mov
mov
xor
dec
jg
push
xchg
dec
mov
imul
scas
mov
or
sar
xchg
xchg
xor
je
enter
arpl
ficompl
psubusb
dec
ficoml
add
jbe
dec
push
testb
mov
shll
inc
lahf
popf
mov
stos
cmp
out
aas
xchg
mov
xor
push
push
shlb
test
cmp
sub
push
loop
jo
pop
outsb
jmp
pop
movsl
and
jo
or
mov
rsqrtps
mov
loope
je
push
mov
lcall
jp
or
stc
in
cmp
mov
inc
fcomps
adc
and
fadd
add
mov
push
push
out
push
inc
adc
fcmovb
rcrl
xchg
mov
push
dec
cmp
les
push
xchg
data16
add
pop
xchg
lcall
rep
adc
or
push
jno
ret
nop
fidivl
pop
sbbl
or
cmp
and
outsl
jo
rcrl
xcrypt-cbc
cmpsl
xlat
icebp
mov
mov
cmp
cmp
inc
lock
shl
scas
shrb
mov
xor
enter
cld
shll
ss
ja
test
lods
jle
call
ss
stc
daa
insb
jge
in
ret
stos
lcall
fcomps
inc
addl
loope
out
call
push
daa
fstpt
jp
inc
or
negl
mov
and
test
lods
or
xchg
and
cmp
lret
push
jmp
or
rcrl
out
mov
cmp
es
xchg
xchg
pop
xor
pop
inc
pop
mov
xchg
jne
dec
sbb
pop
enter
mov
sub
imul
push
ja
and
and
out
imul
mov
rcrb
in
imul
mov
jmp
subl
cmp
sti
stos
pop
push
out
cmpsl
xor
push
lods
pop
into
xor
push
sub
test
or
daa
in
and
ror
inc
push
fistps
mov
xchg
rorl
xchg
push
cmp
fwait
outsb
test
ds
in
in
je
sub
stos
rcrb
scas
add
leave
inc
mov
pop
xor
inc
clc
mov
hlt
xchg
or
pop
push
mov
daa
mov
or
fcoml
pop
cld
add
mov
lret
cmp
out
mov
jnp
int
ret
clc
rolb
xchg
mov
jb
cwtl
cmp
insb
dec
push
dec
sbb
pop
popf
sbb
aaa
ficompl
xchg
jb
jnp
outsl
les
cli
add
testl
jae
popf
lds
lods
or
fistpll
test
data16
ds
adc
xor
and
and
adc
jns
jmp
inc
adc
xchg
repz
inc
sub
mov
lcall
add
shl
jo
push
aas
mov
mov
inc
cwtl
outsl
push
and
cmp
xchg
inc
lret
lcall
hlt
cmp
mov
mov
sub
movl
test
loop
xor
cmp
repnz
adcb
mov
pop
cwtl
ret
add
inc
or
xchg
pushf
add
push
imul
fs
add
pop
or
mov
adc
loop
std
cmp
mov
mov
adc
push
ret
mov
adc
addr16
mov
mov
mov
push
cmp
dec
push
pop
imul
jno
mov
dec
lods
dec
dec
neg
js
push
mov
sub
imul
push
lcall
jnp
stc
movsb
adc
jno
push
aas
mov
lcall
enter
cltd
mov
pop
xor
dec
dec
xchg
arpl
cld
adc
mov
cmpsb
xor
jae
lret
sub
aaa
bound
aas
cmp
mov
or
cmp
movsl
mov
sub
subl
inc
jle
xor
push
mov
outsb
testb
xor
push
jmp
leave
sub
lcall
xchg
and
ret
xor
xchg
cmp
jecxz
inc
lea
sub
je
call
inc
fisubl
mov
and
xor
adc
test
push
sarl
pop
push
sbb
xorb
mov
test
or
daa
jo
add
xlat
or
std
pop
aaa
xor
and
dec
jecxz
stos
sub
jg
jns
pop
movsl
into
cltd
adc
fs
sbb
repz
lahf
orb
push
mov
xchg
xchg
jno
popf
outsl
test
icebp
daa
pushf
jmp
mov
test
outsb
dec
adc
les
stos
imul
jb
mov
lods
fsubl
xchg
push
push
rcrl
sub
push
scas
mov
rorl
xchg
les
xchg
push
lods
jb
loop
ret
lret
scas
pusha
xor
movsb
lcall
fldl
bound
mov
add
xchg
mov
adc
in
popa
loopne
pop
cmp
rorb
push
fisubs
xchg
rcr
push
pop
mov
push
loopne
and
lds
lods
adc
and
lea
outsl
ret
add
movsb
inc
mov
xor
add
js
push
popf
aad
xchg
or
out
xchg
or
and
das
lahf
lret
lods
mov
push
repz
inc
cmp
movsb
mov
nop
stos
insb
mov
ror
xchg
sub
shlb
mov
flds
xlat
dec
xor
mov
sub
sub
ss
cmpsl
imul
repz
lods
cmc
popa
adc
or
or
cmp
xchg
ljmp
dec
jge
rcrl
sbb
xlat
mov
jge
or
sub
push
add
aas
out
sub
jp
cmp
mov
stos
or
xchg
xor
xchg
jmp
outsb
push
iret
push
jae
clc
dec
add
xchg
into
movsl
adc
push
jp
xchg
push
dec
enter
dec
ds
shrl
addr16
pop
fidivrl
mov
cmpsl
add
jg
sub
aam
pushf
ds
push
ss
int
stos
jecxz
outsl
lret
out
icebp
outsl
mov
loope
clc
int3
popf
mov
cmc
gs
jae
out
dec
into
les
pop
lods
jmp
lods
and
jb
clc
das
adc
mov
jl
mov
sub
ss
mov
shl
and
lea
push
pop
cmp
inc
adc
sti
and
out
mov
lret
and
mov
jo
sbb
cli
stos
popf
loope
cli
xor
stos
lret
out
mov
outsb
testl
push
sub
jmp
and
adc
insb
adc
test
inc
pop
in
xchg
imull
fbld
xchg
aas
subb
imul
push
adc
pop
mov
loopne
push
imul
fisubrl
ds
ret
lock
sub
jle
sub
out
ds
shr
ret
cmc
and
loopne
inc
shlb
pop
aaa
aam
faddl
repz
xor
push
aas
cmpsl
jno
inc
mov
dec
xchg
daa
xlat
inc
inc
fistps
jle
cmp
push
add
pop
or
xchg
cld
insl
ficomps
lock
and
xor
je
mov
add
ss
pop
mov
sti
mov
fwait
popf
jle
dec
repnz
es
mov
jle
xchg
out
lahf
test
mov
lret
xchg
shlb
scas
sub
xor
mov
or
sti
or
inc
pop
sbb
popf
icebp
cld
xor
fldl
imul
inc
ss
jl
es
fldcw
jne
cmp
subl
xor
rcrl
dec
or
dec
cmc
sbb
cmpb
adcl
rol
adc
lahf
mov
into
inc
cmpsl
popa
cmp
push
lret
loopne
lds
lock
dec
popa
lds
cwtl
cwtl
cmc
add
or
out
popa
popf
cmp
pop
adc
nop
or
repz
pop
mov
mov
shrb
sahf
inc
dec
mov
cmp
daa
cs
mov
cmp
mov
add
inc
cmpsl
pop
outsl
inc
repz
in
mov
mov
rorb
or
les
fcmovnb
jnp
cmpsb
jbe
arpl
jle
daa
scas
inc
mov
mov
pop
enter
sti
pop
movsl
mov
ret
push
push
mov
cmp
fcoms
ljmp
dec
sbb
jp
pop
pushl
outsb
out
ret
imul
call
arpl
outsl
mov
fiaddl
das
and
fwait
inc
std
data16
fldcw
ret
xchg
xchg
mov
xor
sbb
add
sub
sub
and
mov
lods
out
in
xor
lods
andb
fsts
pop
push
nop
xor
inc
sub
or
mov
lea
jbe
sbb
cli
xchg
push
ja
rol
arpl
lods
inc
jbe
dec
xchg
rolb
hlt
xor
push
pop
jg
dec
xchg
or
sub
jne
adc
lods
ret
dec
jo
sub
cwtl
jb
aad
pushf
pop
icebp
dec
dec
icebp
cmp
scas
xchg
ret
push
cmpsl
andl
hlt
mov
mov
push
mov
mov
add
mov
or
push
inc
sub
in
push
sub
cmpsl
sub
pop
stos
inc
sbb
push
jns
pushl
aas
add
xor
cmp
repnz
inc
push
xchg
dec
push
sub
xor
pop
push
pop
cmp
xor
jno
jp
mov
fcoms
pmulhw
mov
repz
fldt
aas
add
ss
or
lret
out
in
aas
xchg
pusha
mov
pushf
dec
in
push
jl
xchg
loope
or
cmp
data16
and
cld
xchg
ss
mov
fwait
leave
clc
aam
jle
div
xor
sub
add
addr16
sub
mov
es
jl
cmp
xor
data16
cmpsb
adc
push
ja
lret
inc
push
xchg
xor
sbb
dec
lds
fmul
cmp
repz
xor
in
xor
data16
jge
mov
fdivrp
sahf
ret
je
ljmp
cmp
stos
push
fwait
aas
inc
pop
mov
cs
movsb
sub
lcall
fcoms
les
jo
hlt
mov
int3
mov
xlat
jo
out
cltd
fstpl
test
int3
das
pop
mov
insl
gs
jg
pop
cmp
inc
fdivrl
arpl
scas
fbstp
sbb
and
jle
fstpt
int
xor
cmp
aam
pop
mov
clc
push
aad
dec
std
cmc
test
inc
dec
iret
dec
mov
mov
mov
sbb
fsts
adcb
fdivl
or
gs
insb
outsl
xchg
popf
fwait
int3
jge
mov
cmpsb
adc
mov
nop
xchg
push
fidivrl
bswap
pop
pop
fcmove
fisttps
xchg
fistps
les
aas
insl
mov
sahf
pushf
sbb
lods
xor
or
in
test
lret
dec
mov
testl
and
imul
repnz
int3
or
test
test
jmp
add
add
int
dec
sub
push
loop
imulb
xor
adc
loop
insb
pop
fs
push
inc
sbb
push
test
dec
js
sbb
mov
xchg
push
xchg
jmp
fisttps
cmp
shrl
dec
mov
or
push
push
aam
sub
pop
fiaddl
mov
fwait
jne
loop
xor
pop
fwait
mov
xchg
and
scas
xchg
stos
sbb
xor
xchg
loop
pushf
or
je
test
jg
je
and
inc
cmc
jecxz
popa
push
lea
clc
popf
lods
mov
push
mov
push
xchg
mov
mov
jge
add
xchg
cmp
push
dec
push
push
lahf
sbb
insl
xor
ljmp
ficomps
xor
pop
mov
aam
lock
pop
divl
mov
pushf
es
inc
xor
pop
xchg
testb
jo
push
mov
cmp
inc
mov
pop
dec
fistpl
push
pop
inc
hlt
mov
int3
xor
add
xor
mov
cmp
fldt
jge
push
les
shl
sbb
jno
and
and
dec
lahf
cmp
shr
pusha
or
dec
fisttpll
das
jb
fsubrs
jmp
in
int
stos
rcrl
xchg
jle
push
xchg
pop
rcll
mov
sub
test
ss
imul
test
dec
mov
movsl
sti
test
ss
pop
ret
mov
mov
pop
dec
xchg
gs
shlb
or
xchg
lods
ds
inc
pop
je
fisubrl
mov
pop
dec
add
fmull
andl
repz
add
sbb
fisubs
inc
pop
imul
mov
outsl
cmp
jg
bound
shrl
xchg
data16
pop
mov
or
dec
mov
rcl
js
aam
cmp
ss
rcrl
insl
fwait
cmp
cli
dec
push
das
aam
aaa
mov
pop
cld
je
mov
push
les
push
je
loope
push
call
mov
push
cld
mov
repz
xchg
imul
inc
mov
pusha
xchg
and
push
in
push
fisubl
pop
xor
jnp
inc
push
test
idivb
push
rcll
rcrb
cwtl
sub
push
pusha
inc
shrl
into
and
pop
lcall
xchg
bound
dec
sbb
daa
xor
push
outsl
sbb
out
js
pop
xor
movsl
jnp
in
lea
lahf
inc
repz
insb
les
xor
popa
lcall
mov
xchg
repz
jnp
sbb
js
cld
rolb
pop
jge
mov
jmp
xlat
das
xchg
inc
outsl
pop
icebp
test
xchg
int
mov
mov
fcmovu
mov
jo
sub
adc
sahf
in
mov
sbb
in
popf
pop
rol
inc
pop
fs
outsl
xor
or
test
popa
push
mov
out
push
out
adcb
inc
hlt
push
clc
dec
lret
roll
loop
and
ret
cmp
into
loop
inc
add
std
add
leave
icebp
jb
adc
icebp
stc
adc
call
arpl
jno
adc
repz
lret
lock
sbb
adc
sub
movsb
mov
nopl
orl
test
jg
xchg
dec
mov
adc
js
sbb
xchg
testb
cmp
and
push
enter
ficompl
cmpsb
outsl
orb
scas
or
or
add
xor
test
les
add
mov
test
xchg
mov
dec
pop
mulb
jmp
lea
xor
sti
hlt
lds
je
mov
fwait
cmp
rcrb
sub
adc
sub
in
jle
fucomp
arpl
xor
sub
jnp
aaa
xor
std
imul
sub
jge
cmc
jnp
push
lods
outsl
xor
fsubrl
iret
iret
nop
adc
cli
push
repnz
lret
mov
add
sub
nop
pop
stos
xlat
inc
sub
pop
jecxz
stos
das
xor
pushf
mov
xchg
mov
push
push
mov
ret
mov
popa
shrb
jne
test
loop
fcom
lahf
imul
sub
and
xchg
and
popa
jne
ret
dec
rol
mov
sbb
std
clc
push
mov
dec
rcrb
mov
pop
push
xor
adc
mov
dec
fsubrl
jecxz
push
sub
inc
mov
push
mov
jge
repz
popa
cltd
xor
dec
pop
movl
faddl
inc
dec
les
sub
sub
add
pop
sbb
add
cld
mov
pushf
ret
xor
cwtl
jb
arpl
stos
xchg
pop
mov
pop
adc
pop
push
fnstcw
fxch
mov
sbb
or
cld
sub
es
sbb
jbe
mov
sub
inc
push
cwtl
jge
pop
mov
push
scas
mov
adc
inc
jg
mov
push
xchg
cmp
add
fdivrl
jbe
push
insl
ret
loop
pop
xor
xchg
aaa
xor
mov
mov
mov
xchg
pop
or
scas
pop
loopne
idiv
nop
mov
fldt
insl
push
lea
dec
push
mov
xchg
repz
movsb
cmp
adc
sbb
sbb
int3
test
sbb
pop
add
sahf
inc
jo
jns
sbb
loop
mov
push
cltd
and
inc
popf
leave
inc
out
fistpl
fldenv
jno
ds
and
imul
and
sti
fnstenv
gs
sarb
sub
std
inc
out
pusha
and
rorl
in
insl
jmp
sbb
out
movsl
dec
xor
push
mov
or
outsb
cmp
add
mov
push
pmaxsw
sbb
jl
icebp
pop
xor
gs
add
popa
xor
jo
dec
inc
add
outsl
addr16
fbld
test
push
hlt
loope
dec
xchg
and
xchg
pop
fdivp
xlat
cmp
xor
inc
sbb
fisubrl
cld
push
and
dec
fildll
pop
nop
fwait
adc
lahf
rcl
cmp
xor
and
push
xchg
jg
lds
add
aaa
lcall
sub
adc
mov
sahf
mov
imul
adcb
xchg
fnsave
and
and
and
xchg
mov
and
or
ret
jne
sbb
dec
xor
xchg
popf
or
jno
and
cmpsb
into
mov
test
push
sub
es
into
ljmp
movsb
dec
and
jecxz
fcmovnu
push
shr
cltd
jo
sar
xlat
add
dec
cmp
cmpsl
loop
shl
test
data16
scas
adc
push
xchg
inc
out
loope
mov
popa
dec
lea
std
shr
aaa
inc
and
pop
je
repz
popf
in
fwait
sbb
mov
and
inc
inc
aaa
xor
out
jl
fsubr
push
push
push
out
cli
out
mov
dec
ret
movsl
in
bnd
mov
push
sbb
xor
mov
or
xor
es
lret
dec
or
jnp
pop
xor
shrb
mov
jle
nop
jnp
mov
mov
stc
leave
add
nop
dec
data16
mov
std
mov
xlat
sbb
in
ljmp
call
xchg
scas
cmp
pop
fcompl
pop
daa
push
dec
call
lret
vpmacsswd
adc
xchg
adc
mov
imull
dec
mov
incb
jnp
inc
or
inc
add
test
mov
fidivs
enter
jbe
into
jne
addl
sub
adc
mov
push
lea
pop
call
cltd
rclb
into
movsb
jecxz
movsl
add
leave
and
inc
aas
mov
scas
lcall
xchg
dec
push
add
push
js
push
adc
cld
dec
faddp
mov
aam
push
dec
aad
leave
jb
cmp
xor
sbb
lds
mov
cs
test
push
mov
ret
jns
cmp
mov
es
inc
cwtl
mov
fcmovnu
aad
stos
pop
cmpsb
cmpsl
inc
cld
into
leave
lds
pushf
ss
pop
inc
xchg
cld
aam
jae
mov
es
mov
dec
xor
inc
and
sub
je
or
loope
lcall
pop
sub
cmp
pop
repnz
aam
jge
dec
xchg
jle
pop
sahf
cmpb
xchg
pminsw
cld
jae
fsubrp
push
mov
xchg
ljmp
push
call
cli
dec
repz
add
adc
jae
dec
test
faddl
lods
push
xchg
lret
sub
outsb
mov
push
mov
xor
sub
out
adc
xchg
add
xor
cld
fiadds
lret
add
scas
fldcw
adc
stos
xchg
or
cld
fstp
mov
jb
jne
pushf
cmp
cmp
or
arpl
xchg
js
clc
sbb
add
lea
popf
movsl
inc
or
pop
movsl
fildll
pop
mov
or
neg
cld
decb
insb
lahf
fcmovb
rcrb
imul
pop
aas
xor
pop
push
sub
subl
push
aam
push
orb
stc
mov
in
repnz
scas
mov
pushf
lods
jae
mul
ds
pop
jg
movsb
movsl
pop
jne
mov
bound
mov
test
into
sub
dec
test
sub
in
inc
sti
ss
dec
mov
push
fstps
pop
push
rcr
jo
jns
jl
inc
icebp
mov
out
xchg
mov
sti
sbb
inc
push
push
fcomp
stc
popa
jmp
push
inc
mov
dec
xchg
cmp
ret
dec
inc
repnz
cmp
pop
dec
sub
je
cltd
add
push
mov
pop
inc
fwait
lds
movq
shlb
pop
and
sbb
lret
or
popf
cmpb
loope
sbb
mov
push
xchg
lods
fwait
popf
adc
int
in
adc
cmp
test
jle
inc
push
push
mov
adc
sarl
xchg
xlat
cmp
xor
push
out
push
push
sbb
and
pop
adc
push
adc
lods
push
adc
cwtl
add
or
test
mov
cmp
mov
add
repnz
pusha
cmp
pop
call
in
inc
sarl
cmp
clc
mov
cmc
inc
in
xorl
je
aam
pop
arpl
inc
cmpsb
cwtl
incl
insb
test
pop
loopne
jae
test
adc
push
int3
sub
inc
cmp
loop
inc
xor
mov
inc
cs
dec
in
mov
jae
stc
jmp
push
sbb
push
popa
mov
and
xor
push
mov
shl
mov
lds
push
fcmovb
adc
mov
or
je
adc
xor
mov
push
sbb
fbld
cmp
movsb
or
pop
cmp
or
arpl
mov
add
xchg
aas
dec
push
insl
jle
add
push
xchg
in
je
icebp
jne
dec
jl
shrl
hlt
mov
in
aam
xor
xor
push
add
add
xchg
sti
leave
fstps
cmc
pop
xchg
pop
or
xchg
jae
aaa
pop
push
lahf
test
jne
add
shlb
orb
cltd
cltd
pop
scas
shrb
insl
ljmp
sbb
dec
lahf
dec
sub
imul
sar
xchg
dec
add
dec
sub
rorl
leave
xchg
inc
jno
push
push
scas
or
enter
jecxz
push
and
jecxz
push
stos
fnstsw
lock
mov
or
add
lods
push
test
cmp
ds
or
pop
sahf
mov
sahf
dec
jl
js
fsts
lret
lock
test
repnz
or
lret
mov
in
sub
sahf
mov
imul
xor
addr16
jae
sbb
jbe
int
rclb
imul
jnp
incl
cmpsl
call
lock
sbb
lret
xor
loope
adc
into
js
mov
mov
pop
scas
mov
idivb
xchg
cmp
and
mov
pop
ja
push
mov
cmpsb
filds
sahf
outsl
mov
inc
cmp
push
mov
inc
fldl
sarl
adc
jns
cwtl
out
xchg
sub
inc
xor
lods
cwtl
inc
pushf
nop
ja
dec
xchg
fisubrs
nop
out
dec
add
mov
push
adc
lods
dec
fbld
mov
mov
xor
pop
xchg
test
das
mov
or
sub
mov
dec
fnstcw
ljmp
aad
add
testl
aam
jge
enter
push
loop
add
sbb
adc
daa
pop
cld
cs
js
inc
mov
fidivrl
adc
test
mov
int3
nop
fimuls
popl
cmp
lret
ret
dec
es
pop
cmpsb
int3
mul
pop
inc
mov
les
xchg
sbb
adc
push
lock
pushf
cmpsb
pop
xor
orb
cld
faddp
jnp
dec
subb
pop
je
jb
scas
movsb
add
or
lods
pusha
je
xor
add
add
in
aam
sahf
mov
dec
inc
gs
or
clc
xchg
cmp
sbb
movb
push
lahf
aad
ss
sbb
daa
pusha
dec
out
cmpsb
fidivl
sub
cmp
je
inc
movsl
pushf
jge
leave
je
and
lods
push
out
dec
loopne
push
popf
push
lea
bnd
in
inc
fbstp
int
dec
mov
and
sub
movsl
mov
jp
rcl
out
lret
iret
out
sarb
or
cwtl
mov
pop
daa
int3
adc
shl
aaa
ret
sub
pop
push
outsl
cmp
or
out
jge
scas
outsb
scas
lock
mov
sub
add
sub
jae
mov
inc
int3
or
and
pushf
sub
mov
jno
mov
cmp
adc
ja
orb
jo
es
sub
sub
cltd
adc
xlat
xchg
popa
mov
ds
add
sahf
or
add
pushf
orb
leave
jno
std
pop
xchg
push
push
mov
mov
scas
dec
test
imul
inc
xchg
push
sub
or
mov
sar
and
stos
inc
ss
jne
fwait
sahf
bound
push
cmpsl
fwait
cli
fxch
xor
pop
into
inc
cmp
dec
nop
inc
mov
divb
mov
mov
or
inc
dec
or
icebp
sbb
mov
sub
jmp
ss
dec
shll
and
or
jnp
idivb
xor
lock
jne
sub
add
nop
test
cmp
vmulss
paddsw
test
repnz
mov
jmp
icebp
dec
out
cltd
popf
jecxz
xchg
cmc
lock
jnp
scas
daa
imul
incl
lea
dec
negb
dec
jl
loop
xchg
popf
pop
sarl
xchg
dec
sub
cmpsb
cwtl
ss
mov
movsb
cmc
mov
jmp
mov
mov
sarb
lods
repnz
xor
scas
imul
lea
test
movsl
jg
pop
repz
inc
hlt
cld
pop
inc
insl
iret
int3
lret
aad
inc
pop
loop
fistpl
dec
mov
call
out
addb
xor
dec
ret
cmp
insl
xor
por
test
add
fwait
inc
jecxz
add
data16
fwait
xchg
sub
jne
data16
leave
testb
mov
jo
cmpsl
xchg
xchg
add
push
mov
test
push
pop
xchg
mov
cmpsb
pop
inc
lahf
push
pop
imul
and
xor
cmc
mov
leave
scas
das
loope
fbld
loopne
lea
dec
ss
cmpl
lcall
push
inc
xchg
cmc
mov
cmpsl
loop
mov
mov
mov
xor
and
test
xchg
enter
and
nop
fsubrs
div
ljmp
sbb
and
xor
sahf
jb
sbb
or
push
jno
mov
sub
push
sub
mov
aam
push
test
push
mov
in
fs
sbb
pop
hlt
adc
jo
ret
js,pn
out
and
pushf
push
add
iret
pop
push
mov
ljmp
and
jb
mov
mov
pop
push
jge
int
jp
pop
fnstcw
mov
dec
mov
and
das
call
inc
inc
adc
cmp
mov
cmc
std
sbb
jmp
loope
jo
xor
sub
dec
addl
cmp
cmp
mov
std
imul
mov
aas
xchg
outsb
xor
mov
out
ss
in
call
lahf
jge
inc
push
call
lea
push
sbb
leave
cmpb
pop
pop
adc
inc
outsb
fsubrs
cmp
push
sub
xor
sbb
out
mov
in
repnz
shll
push
clc
pop
insb
mov
dec
lods
test
repnz
fidivl
push
pop
sbbb
loopne
int3
call
mov
jg,pn
push
sbb
cld
push
flds
and
aad
fidivrl
and
and
std
and
dec
addr16
bound
cli
imul
mov
and
shll
and
cltd
mov
and
mov
scas
scas
stos
or
push
or
daa
in
xlat
cli
fsubs
sub
xchg
or
adc
sub
stos
in
cmc
movsb
sbb
icebp
jb
pop
pop
sub
pop
and
add
sub
push
adc
mov
or
lods
stos
xchg
fsubrl
mov
cmpsb
rcr
loope
dec
push
mov
jl
loope
xlat
xchg
idiv
fwait
xchg
xor
adc
sbb
pop
scas
jnp
jbe
popf
cmp
int
xchg
ret
inc
in
inc
cmp
xchg
fsubs
inc
jae
cld
push
cmpsl
hlt
stc
fwait
ds
or
lock
sub
xor
rcll
aad
cmpb
cld
inc
add
xor
push
push
mov
gs
mov
xor
push
imul
cmp
ss
sub
test
xor
xor
arpl
mov
jecxz
add
test
loop
iret
orb
inc
jno
call
in
cmovno
popf
pop
fstps
fdivrs
and
bound
gs
mov
jg
lds
aaa
mov
dec
jle
out
adc
vpunpcklqdq
call
insl
ret
push
mov
lcall
pushf
or
movsl
and
loopne
mov
jns
bnd
dec
mov
scas
push
imul
movups
stc
mov
ljmp
lock
inc
pop
cwtl
mov
lahf
cmpsb
ret
leave
hlt
cpuid
mov
nop
dec
sub
add
inc
pop
shll
jg
test
sub
sbb
and
dec
mov
test
lret
push
push
or
fsubr
subl
mov
sub
mov
into
dec
pop
pop
mov
pop
xchg
call
addr16
push
xor
test
sub
mov
mov
lods
mov
sbb
jge
scas
mov
cld
sarb
xor
mov
push
lock
inc
mov
push
vmread
insl
push
jmp
jecxz
dec
andl
insb
ljmp
push
mov
push
inc
mov
leave
movsl
push
fimull
jge
int
out
jne
scas
push
jge
xlat
cmpsl
jae
add
and
sub
aam
push
inc
mov
lods
and
sub
adc
in
xchg
pop
lods
cmp
pop
mov
mov
xor
pop
scas
adc
popf
fcmovne
and
in
sbb
bound
dec
shll
iret
cmp
push
jmp
sub
sbb
pop
mov
inc
mov
shrl
pop
mov
loopne
cld
ret
xor
std
add
cmp
cmc
mov
out
xchg
sub
into
pop
adc
repnz
jbe
adc
dec
jno
sbb
mov
push
and
add
and
in
mov
in
pop
loopne
jp
or
push
sbb
adc
aad
mul
dec
add
sub
adc
jl
sbb
sub
dec
sarl
scas
mov
inc
mov
xor
mov
jae
ficoms
int
insl
inc
mov
sub
stos
ret
xor
in
cld
sbb
gs
sub
sbb
imul
lods
dec
je
daa
lods
rclb
test
lock
pop
jg
cmpsb
push
add
into
fisubrl
imul
shll
loopne
fldenv
mov
sbb
cmp
cwtl
pop
fmuls
das
sub
dec
fistl
mov
pop
mov
jo
xchg
dec
pop
mov
sbb
std
cmp
sub
outsb
into
dec
sub
lock
adc
mov
cmp
xor
add
push
pushw
into
loope
add
aam
cmp
fwait
or
stos
push
leave
movsl
pop
sbb
add
adc
inc
rorl
fildll
cs
xchg
pop
add
cmp
push
dec
leave
subb
cmp
xor
sbb
inc
lock
push
decl
xchg
cld
xor
lods
sahf
push
pop
out
cmovno
jnp
jp
mov
pop
xchg
lret
leave
lock
sti
sub
test
nop
icebp
gs
lds
int
test
arpl
ljmp
sub
push
cmc
add
jnp
push
or
cmpsl
inc
mov
ret
ljmp
mov
imul
dec
xchg
mov
and
lret
into
sub
inc
pop
inc
sub
pop
jb
xchg
dec
mov
xchg
dec
jge
cld
jne
dec
movsl
xchg
arpl
shll
xchg
adc
lret
or
jno
inc
rclb
in
std
dec
lods
cwtl
xchg
pop
je
lea
mov
mov
xor
pop
rclb
loop
pop
cs
mov
sub
lock
pushf
cmc
push
adc
mov
movsb
popa
fst
xlat
arpl
call
or
inc
jmp
jo
pusha
push
inc
mov
adc
rorl
stos
pop
adc
je
mov
or
mov
pop
jmp
sbb
push
mov
pop
mov
filds
pop
jp
add
xchg
aas
sbb
adc
mov
mov
push
cmp
mov
push
outsl
xor
rcrb
jno
xchg
cmp
lea
jbe
push
mov
jbe
mov
push
jge
push
mov
cmp
cmp
xor
cwtl
adc
mov
insl
decl
rclb
cmc
sarb
mov
push
lods
rolb
andl
movsl
ret
data16
fwait
sub
inc
or
add
mov
hlt
xor
adc
popf
mov
inc
clc
test
int3
ds
fdivr
mov
int3
xlat
insl
xor
sahf
sub
dec
das
mov
lods
sbbb
fiadds
mov
add
or
das
imul
int3
pop
sbb
outsl
xor
repz
xchg
xor
popf
or
xchg
push
sub
and
sahf
and
adc
into
cmp
sti
mov
les
and
cmpsb
test
dec
into
xchg
lret
movsl
cwtl
xor
sbb
add
repz
mov
shlb
loopne
add
rorb
aaa
mov
daa
adcl
adc
fwait
sar
lcall
and
xchg
sbb
loop
mov
mov
test
aas
mov
adc
call
mov
dec
test
mov
scas
cmp
cmp
push
sbb
mov
ljmp
mov
es
scas
lock
push
std
inc
outsl
mov
into
aas
cmp
insb
inc
into
call
cli
hlt
mov
mov
ret
pop
mov
popa
push
xlat
pop
sahf
stos
ret
pusha
ret
dec
inc
or
push
lret
call
mov
lods
dec
add
repz
popf
lahf
dec
loop
or
pop
leave
xchg
push
stos
cmp
cmp
mov
hlt
mov
adcl
stc
inc
pop
mov
test
inc
xor
inc
inc
mov
into
andl
xchg
pop
inc
mov
push
xlat
add
dec
idivb
push
or
popa
out
cld
js
ror
sbb
sub
push
sar
pop
bound
mov
in
shrb
cmpsb
inc
mov
lods
shlb
cmp
cmp
lods
add
or
push
push
mov
lret
aam
test
movsl
in
jmp
sti
cmp
incb
mov
pop
or
call
ja
mov
adc
lcall
loop
fwait
outsb
fnstcw
aaa
int3
add
fs
jle
rolb
leave
mov
out
clc
ss
mov
or
shll
fwait
test
and
mov
xchg
sub
mov
or
fsubl
pop
sbb
sarl
outsb
imull
imul
movsl
mov
xor
sbb
mov
mov
cmp
push
repnz
loop
ret
repz
dec
in
mov
pop
jp
lret
cmp
enter
mov
mov
pop
and
cmp
pop
aaa
repz
gs
and
pushf
clc
mov
scas
fidivrl
mov
insb
mov
lods
adc
sub
sbb
je
xor
push
mov
add
xor
add
fistpll
sbb
xchg
inc
jmp
xchg
mov
js
xchg
push
ficoms
or
aam
jns
adc
lret
pop
into
and
ficomps
xchg
cmp
and
fcomi
divl
data16
sbb
in
repnz
fmulp
rcr
add
mov
pop
xor
pop
std
mov
ja
lret
mov
jb
pop
sub
fldcw
or
and
push
xchg
cmp
sbb
loopne
sbb
cmc
bound
dec
mov
inc
mov
adc
cmpsl
xor
mov
shl
rcrb
mov
cmc
jne
or
in
bnd
xor
mov
cmp
dec
dec
les
aaa
or
inc
adc
adc
mov
mov
fstpt
jg
mov
xchg
sbb
mov
imul
outsb
imul
inc
mov
adc
sub
movsl
mov
popf
or
pop
push
int3
int3
jnp
add
pop
mov
aas
adc
leave
push
jmp
mov
out
push
mov
fimuls
push
insl
mov
rclb
add
add
xchg
mov
mov
cld
jg
mov
pop
mov
pop
dec
std
adc
cmp
nop
adc
cwtl
lcall
mov
sbb
mov
hlt
in
bswap
stc
call
sub
adc
inc
inc
sbbl
sbb
shll
rcll
mov
mov
jbe
mov
adc
ds
rolb
xchg
jp
decl
xor
ret
rcrl
aad
xchg
in
mov
ja
dec
xor
mov
idiv
pop
out
cli
xchg
addr16
push
or
jnp
jne
mov
sbb
in
scas
dec
inc
in
inc
test
cltd
jl
push
xchg
repnz
push
mov
icebp
sub
outsl
xchg
push
gs
mov
pop
adc
in
rorl
repz
or
mov
and
pop
stc
push
mov
xor
out
push
cmp
int3
int
stc
xchg
cwtl
cmp
sbbl
xor
adc
je
fdivrl
add
imul
inc
push
and
cli
fwait
and
mov
int3
xor
push
repz
sti
repz
addr16
cmp
cmpsl
jns
clc
scas
and
in
mov
shll
pushf
pop
and
loop
xchg
rcll
in
decb
inc
fildll
sahf
arpl
and
sahf
pop
and
xlat
in
popa
in
cmpsl
les
sbb
call
lea
lret
dec
ret
push
imul
aas
sub
imul
or
lods
xchg
dec
jb
add
push
pop
repnz
aam
lock
sar
sub
add
rcrb
daa
or
movsl
inc
pusha
pusha
mov
cmp
and
jmp
jg
dec
out
lock
hlt
push
imul
xchg
pusha
push
cmp
insb
pop
mov
xchg
loopne
sbb
repz
jmp
sbb
hlt
lds
pop
ja
or
mov
imul
jo
mov
dec
fdecstp
movsb
out
mov
in
and
pushf
loope
ret
cli
lods
enter
jl
addb
in
imul
lret
mov
push
pop
jl
out
into
ja,pn
popa
div
or
add
jl
inc
cmpl
repnz
shr
test
push
xchg
ret
xor
add
pusha
mov
arpl
dec
ja
mov
ss
jns
sbb
xchg
or
mov
push
negl
gs
hlt
cmp
dec
push
jmp
test
xchg
jno
cli
jbe
mov
pusha
into
rcl
cmp
fwait
jno
or
into
or
mov
insl
fimuls
scas
adc
sub
mov
cmpsb
cmp
idivb
sbb
sub
out
mull
pop
test
push
pop
or
inc
stc
in
add
sbb
jne
sbb
cmpsb
mov
inc
int3
jae
mov
xor
les
adc
adc
pop
push
xchg
jp
test
adc
xlat
ja
setbe
sub
cmp
push
pop
out
ret
scas
scas
aad
push
loop
dec
int3
jae
pushw
sub
loopne
cmp
sbb
scas
push
rcrb
icebp
imul
xchg
xor
addl
in
shlb
int
setbe
cmp
loope
xor
mov
push
repz
jle
das
add
xchg
add
out
pop
lret
shl
mov
pop
aas
jp,pt
aaa
adc
icebp
and
mov
adc
insb
mov
loopne
test
mov
dec
dec
add
sbb
or
aas
push
sbb
ror
fdivr
jo
std
add
cmpb
cmc
lods
xorb
rorl
scas
inc
mov
cmp
imul
push
fdivl
stos
fcomi
fists
dec
xor
dec
xor
lock
xor
sbb
iret
test
adc
sub
xchg
imul
hlt
cmp
pushf
out
add
dec
jno
inc
mov
mov
inc
cli
or
cmp
in
in
clc
data16
aas
enter
sbb
xor
sarl
cmpsl
div
in
lret
ds
xchg
pop
jmp
push
addr16
push
fisubs
aaa
aaa
cli
jp
js
repz
imul
sub
pop
hlt
xchg
cmp
addr16
adc
pop
loope
and
int3
mov
cld
sub
add
fstp
fs
fdivl
lahf
mov
gs
dec
and
dec
xchg
aas
mov
mov
mov
hlt
adc
ss
mov
xor
mov
adc
ljmp
ret
in
data16
rorl
mov
inc
iret
jns
lock
andb
sub
dec
mov
out
xchg
stc
inc
stos
cmc
jecxz
xchg
and
pop
xchg
or
insb
leave
push
out
repnz
inc
jp
mov
std
push
inc
xchg
cmpsb
pop
je
cli
sti
out
shrl
mov
test
iret
ja
lods
pop
stos
stos
rep
pushf
push
mov
popa
ja
dec
pop
gs
xor
aas
and
sbb
cmpsl
and
xor
pop
or
loop
lods
push
mov
jmp
movsb
dec
or
out
scas
pop
dec
pop
les
push
popf
jl
arpl
cmp
aaa
jns
xchg
lds
adc
mov
sbb
dec
and
call
test
mov
jnp
sbb
cmp
lods
stc
pushf
mov
add
inc
sti
cmp
loop
or
fsubrl
push
inc
ret
push
data16
filds
nop
adc
xchg
fcoms
andps
xchg
mov
add
inc
xchg
gs
xchg
xchg
push
lods
enter
sti
sbb
daa
jmp
rol
fnsave
int
jb
mov
push
mov
push
int
mov
cmpsl
add
scas
sbb
add
clc
les
aad
stos
jl
lcall
xor
ja
sbb
cmp
imul
pusha
nop
shr
push
jle
in
inc
popa
sub
pushf
pop
cli
mov
pop
ror
pop
mov
inc
pop
out
mov
and
mov
shlb
mov
inc
mov
dec
ret
xor
test
inc
jo
fnstsw
in
clc
jecxz
popf
xor
and
shll
inc
shrl
pop
loope
xchg
addr16
int
or
lahf
mov
lock
mov
pop
stc
mov
lods
pop
clc
mov
sahf
add
sub
test
ret
mov
ja
adc
cmpsl
int3
dec
xchg
js
cwtl
sbb
and
fisttpll
inc
repz
dec
xchg
cltd
mov
cmp
cmp
sub
daa
mov
add
xor
sbb
lods
and
jnp
sub
fstpt
repz
mov
aaa
or
pop
fisttps
ret
inc
mov
clc
pop
nop
xchg
inc
loopne
or
pop
xor
mov
fs
into
cmp
ret
insl
mov
stos
pop
mov
hlt
test
add
lret
aad
xchg
outsl
inc
out
sti
scas
adc
cmp
in
pop
or
pop
jg
mov
int
in
mov
jae
pop
and
jl
ja
call
arpl
fnstsw
or
insl
jno
test
jmp
sub
es
pop
mov
dec
adc
jb
add
fisubl
std
xlat
out
cli
cmp
popa
scas
leave
mov
push
lahf
xchg
clc
xlat
out
mov
int3
lock
sub
adc
loope
sbb
cmp
andl
inc
stos
shll
pop
aas
leave
mov
stos
leave
push
lods
cmpsl
xchg
in
adc
sub
clc
pop
test
pop
adc
shrl
mov
jle
fbstp
bound
mov
xor
fiadds
out
scas
adc
inc
test
bound
lods
jnp
movsb
sbb
out
cmp
xor
jae
pop
pop
xchg
sbb
test
mov
cmp
stos
ljmp
mov
cmp
in
jmp
testb
xchg
xchg
pop
js
fprem1
dec
jg
in
jbe
cltd
inc
mov
mov
lcall
test
push
jp
addb
cmpsl
cmc
ja
lret
call
adc
lds
enter
sqrtps
leave
mov
lods
clc
lea
lods
xchg
inc
cwtl
lret
jmp
imul
ret
outsl
dec
jecxz
inc
out
mov
pushf
js
inc
aam
jge
cmpsb
in
xor
and
mov
dec
mov
pop
xor
sbb
pop
sbb
out
call
shll
mov
add
cmp
loopne
aam
in
push
mov
pop
inc
ljmp
add
insb
dec
test
adc
mov
nop
lahf
out
hlt
in
jg
out
inc
cmp
sub
sub
or
ret
sbb
inc
adc
xchg
mov
fldt
lods
xchg
push
popa
sub
into
dec
push
jmp
sub
push
add
mov
cmpsl
popf
and
cmp
push
bound
int3
inc
movsl
dec
and
push
pop
aaa
in
add
cs
pusha
insb
sub
adc
mov
xchg
xor
popf
fdivl
pop
mov
inc
sub
adc
xchg
mov
or
inc
aaa
dec
mov
rcl
mov
clc
inc
das
mov
adc
scas
inc
mov
push
fcoms
nop
mov
lods
pop
jmp
sbb
es
inc
sbb
adc
xchg
jle
mov
je
jne
push
adc
and
mov
dec
lahf
adc
sbb
fwait
dec
pop
rorl
push
xchg
outsl
inc
inc
cltd
mov
icebp
xor
cmp
arpl
jp
loopne
mov
subl
aam
dec
push
or
pop
jo
subb
dec
push
add
rcr
mov
icebp
sbb
aad
fscale
sbb
shll
dec
push
sbb
repnz
mov
sub
aas
xor
sbb
mov
dec
decl
mov
jns
sbb
mov
into
sbb
mov
inc
jge
call
loop
sbb
dec
xor
xchg
jno
stos
push
sbb
push
daa
testb
notl
daa
arpl
xchg
pop
fsubr
sti
sbb
adc
xchg
jne
in
pop
into
push
lcall
jb
and
loopne
inc
jns
mov
jg
add
cmpsl
mov
ret
test
in
adc
xchg
stc
mov
or
xor
lea
mov
pushf
gs
mov
test
loop
cwtl
lcall
mov
pop
es
adc
jno
in
test
sub
out
or
repz
lret
and
addr16
jnp
dec
sub
dec
aaa
mov
cmp
lret
mov
push
lahf
xchg
inc
ret
gs
sbb
sub
adc
vmread
push
aam
mov
cld
jb
pop
iret
xor
das
addr16
ret
mov
out
push
ret
push
push
mov
movsb
bswap
roll
xor
pop
dec
sub
pop
sbb
movsb
cmp
mov
inc
add
or
pop
or
xor
push
and
rclb
or
sub
nop
jp
pop
lock
mov
push
and
add
fsts
fsts
and
dec
pop
enter
stos
add
pop
sub
xor
inc
inc
notl
roll
mov
ljmp
jb
mov
pop
sti
adc
dec
xor
idiv
adc
pop
ja
fs
sub
mov
xchg
mov
and
fidivrl
xor
mov
add
push
adc
xor
mov
in
int
mov
stc
xchg
popf
pushf
push
sbbl
dec
push
push
divb
sub
cmpxchg
cltd
push
nop
sub
in
or
cmpsl
nop
rol
es
jno
sbb
mov
pop
imul
jmp
in
daa
cmpsl
mov
xchg
addl
mov
xchg
dec
mov
push
loope
dec
jp
lods
xchg
je
aam
cs
lcall
xchg
test
cmpsl
fs
ret
icebp
mov
and
mov
pop
mov
mov
pop
mov
mov
add
cmp
sbb
ret
xchg
xchg
mov
test
mov
inc
adc
sbb
nop
jp
cmp
push
or
mov
push
add
jg
mov
sub
outsl
ret
push
mov
pop
scas
loopne
sub
and
push
lock
mov
fs
pop
inc
subl
stc
adc
das
pop
xchg
stos
ds
fisttpll
movsl
adc
int3
out
cmp
inc
push
sar
xor
mov
mov
enter
sub
mov
cs
lahf
in
push
xor
test
and
xchg
test
dec
repz
scas
jmp
call
xor
das
push
mov
cmpsb
sub
mov
pop
xor
xchg
out
xlat
inc
mov
cmp
cli
pushf
xor
movsb
aam
xchg
adc
inc
incl
push
sbb
mov
mov
xor
stc
xchg
xchg
pop
loopne
in
mov
addr16
jo
xor
fwait
xchg
lret
pusha
push
mov
lcall
dec
pop
imul
pop
outsb
xchg
mov
lret
cli
push
shrb
inc
and
hlt
dec
cmovle
push
aas
or
pop
mov
mov
das
jmp
xchg
and
mov
les
inc
mov
cmpsl
ss
xchg
fbld
imul
test
xchg
shll
cmpsl
mov
gs
or
stc
mov
clc
enter
daa
subb
scas
cmp
idivl
mov
addl
or
cmpb
cmp
inc
push
inc
mov
mov
repz
insl
xchg
push
push
out
fisubl
mov
aad
loopne
ss
adc
add
mov
jno
out
shll
repz
add
add
leave
cmp
aad
jg
jg
aad
cmp
stos
divl
in
cmp
xor
fcmovnb
push
push
jns
mov
jno
jne
mov
sub
test
cmpsl
xchg
fwait
lea
daa
mov
test
stc
cmc
adc
add
pop
push
or
or
les
inc
aaa
lds
mov
inc
sub
pusha
mov
test
adc
dec
fdiv
mov
pop
inc
nop
or
adc
mov
dec
mov
gs
fwait
stc
mov
push
push
mov
mov
aaa
mov
aam
xor
xchg
cwtl
test
pushf
ret
xor
mov
mov
ret
or
jb
cmp
clc
sub
or
aas
test
sub
stos
sub
mov
enter
clc
mov
stc
incl
ljmp
and
mov
push
fistpll
xchg
and
push
mov
fnclex
imull
cltd
jmp
dec
rorb
mov
jl
jge
cmp
insb
jne
dec
gs
jle
push
xchg
jle
inc
lcall
fbstp
jl
mov
into
add
add
dec
shl
pop
shll
cmp
loopne
xchg
jecxz
out
lcall
dec
dec
int3
pushf
mov
nop
adc
push
add
xchg
push
lret
or
loopne
aas
js
mov
sbb
inc
and
adc
nop
mov
xchg
pop
js
in
jge
divl
inc
dec
ret
push
pop
es
insb
subl
push
or
mov
les
adc
jb
stos
test
rorb
jmp
xchg
fs
jp
inc
cmp
inc
jae
mov
fnstsw
jge
fs
push
add
sub
sub
mov
in
and
mov
jbe
cmpb
push
push
push
mov
adc
or
adc
nop
hlt
loop
and
bound
jb
sar
add
loope
mov
leave
in
movsb
loope
lret
and
xchg
fldenv
jecxz
je
xor
push
inc
xor
or
scas
adc
fcoms
cmpsl
push
fiadds
mov
and
addr16
decl
jl
jno
jns
add
mov
jg
and
mov
or
adc
das
inc
or
ja
pop
out
popf
lcall
popa
dec
daa
mov
cmp
loope
cmp
pop
lret
jo
mov
leave
movsb
clc
or
pop
and
and
mov
sahf
insb
lods
cmpsl
mov
movsb
aad
movsl
iret
clc
lret
sub
sub
xor
sub
and
pop
xchg
pop
sarl
xchg
mov
call
jle
fincstp
gs
push
daa
jecxz
pop
xor
imul
pushf
jns
mov
mov
aam
outsl
mov
mov
cmp
in
outsb
and
or
adc
test
adcl
cmpsl
rcl
out
mov
cmc
push
lods
cmp
ficoml
cltd
pop
dec
int
pop
or
fists
mov
jnp
xor
pop
add
out
rolb
outsb
lods
testl
scas
imul
xchg
das
mov
int
pushf
dec
in
subl
aam
xchg
cmp
sub
or
ja
jecxz
mov
cmp
scas
mov
cld
xchg
pop
cltd
lea
mull
inc
test
sub
mov
sti
inc
lahf
adc
xchg
xchg
lcall
lret
xor
in
add
movsb
lods
shrl
mov
addr16
jge
mov
or
ds
sbb
xchg
dec
sbb
femms
xchg
dec
je
inc
sub
inc
sti
imul
fstpt
aas
fldenv
js
in
mov
or
sbb
mov
addr16
dec
mov
jbe
or
mov
repz
mulps
sub
pop
mov
leave
sbb
push
js
sahf
sub
push
pop
cmc
or
xor
adcl
pop
div
push
stos
xchg
pop
cmp
lret
xchg
push
jmp
inc
jl
cmc
or
mov
or
into
subb
push
mov
inc
das
mov
cmp
fwait
sub
int
ja
out
dec
test
xlat
insb
and
loopne
popf
push
xorb
or
imul
cmp
add
jno
pop
sbb
mov
push
jmp
pusha
add
outsb
sbb
outsl
loop
notl
push
lods
jb
mov
inc
int
mov
xor
sarl
mov
inc
sub
lahf
add
xchg
push
stos
fiaddl
mov
inc
and
stos
movsl
lods
push
mov
cmpsb
je
testb
mov
jae
in
push
and
aad
xchg
xchg
inc
pop
mov
dec
cs
fdivrs
rolb
rclb
mov
push
ja
dec
push
hlt
orl
fmull
rcrb
or
pop
ss
xchg
lcall
jp
push
sti
push
in
push
and
jae
dec
and
jle
sub
mov
adc
fldenv
mov
sahf
lods
test
mov
js
sbb
jo
call
outsl
cmpsl
push
cmp
leave
cmp
mov
imul
test
into
and
xchg
mov
xor
xchg
xchg
adc
pop
adc
sbb
test
out
sbb
inc
cs
cli
je
cmp
jnp
cs
outsl
lcall
push
add
cltd
lcall
adc
mov
adcb
sbb
pushf
stos
mov
xchg
or
jmp
cmp
sbb
dec
and
iret
cmpsb
mov
stc
shll
inc
stos
mov
lea
xor
mov
jno
push
mov
pop
dec
add
or
jp
sub
andl
jnp
loopne
dec
call
adc
std
inc
mov
leave
mov
mov
mov
lods
aas
xor
jle
cli
dec
sti
pop
outsb
mov
fwait
dec
mov
loope
out
iret
shlb
out
xchg
rorb
and
loopne
and
add
mull
xchg
add
dec
sub
hlt
inc
nop
fstl
adc
mov
retw
hlt
adcl
aaa
negb
popf
fdivs
movswl
sub
loope
xchg
sahf
add
inc
test
inc
and
ja
dec
jp
jno
xor
stos
inc
pop
jmp
cltd
xor
aaa
out
cltd
or
mov
out
sub
xor
jg
lret
push
incl
jecxz
adc
or
repz
std
mov
testb
push
notl
jno
jge
or
mov
jne
push
inc
jg
mov
sbb
ljmp
fnsave
movsb
mov
jmp
loopne
pop
adc
cmp
xchg
aas
adc
sbb
jmp
jp
push
xor
std
pusha
cld
xlat
mov
int3
out
mov
lods
adc
out
pop
test
hlt
mov
stos
sbb
repz
sub
adcb
and
in
push
jecxz
add
filds
iret
sub
push
in
cld
add
outsl
push
orl
sub
scas
pop
insl
mov
ds
jb
fwait
lods
ret
jmp
int
pop
jg
cwtl
add
andl
cli
add
data16
lea
sbbb
cmc
mov
adcb
dec
outsl
je
cmc
inc
adc
lcall
fildl
inc
ds
scas
roll
das
cmp
test
aad
dec
add
repnz
imul
dec
cmp
imul
out
nopl
sarl
jmp
sbb
mov
lahf
sbb
icebp
fiadds
xor
test
mov
mov
push
mov
jo
ror
int
lahf
hlt
negb
xor
pop
xchg
shrb
push
xchg
sub
ljmp
rolb
or
mov
mov
jecxz
fdivr
lods
fisubs
mov
loop
xchg
jmp
divb
push
es
dec
shlb
mov
movsl
or
daa
enter
mov
pop
arpl
pop
mov
cmc
jne
sub
fsts
rcrb
xlat
daa
jle
int
cmp
jl
outsl
dec
push
inc
dec
addl
outsl
stos
fcompl
sub
sbb
stos
sbb
pop
xor
xchg
scas
popf
mov
add
mov
ljmp
ret
push
lods
xorb
xchg
cmpsb
jae
mov
mov
mov
push
lret
int3
lret
lock
call
pushf
into
fstps
pushw
cmp
sbb
mov
xchg
fldl
pop
ss
push
gs
mov
add
fildll
loope
orl
inc
xchg
dec
mov
jbe
lcall
fs
mov
dec
out
sar
imul
mov
or
jmp
sub
sbb
sub
xchg
cltd
jmp
mov
xlat
movsb
mov
subb
ljmp
mov
insl
push
vprotb
mov
push
inc
fs
lcall
inc
xchg
push
push
bound
xlat
jg
leave
mov
popa
std
lahf
dec
pop
inc
in
pop
pushl
jecxz
outsl
pop
andl
mov
inc
xor
bound
mov
push
shrl
fbstp
pop
jecxz
push
dec
and
pusha
pop
mov
imul
int
data16
jg
pop
pop
or
mov
add
mov
mov
insb
call
xchg
pop
push
mov
xchg
decl
fildll
call
fstps
mov
hlt
rolb
scas
fsubrs
andl
shll
sahf
pusha
mov
pop
jl
sbb
xchg
lds
add
mov
push
and
imul
add
divl
inc
xchg
pop
jge
outsb
and
hlt
sub
mov
sahf
xchg
fistpll
or
outsb
xchg
adc
out
mov
push
dec
repnz
std
inc
cmpsl
in
sti
add
hlt
xchg
sub
jae
inc
push
subb
popa
dec
fs
and
rcrb
jo
negl
sbb
jb
push
pop
mov
xchg
add
adc
pop
jle
hlt
lret
mov
dec
add
jecxz
int
sbb
cmpl
loopne
cmc
ret
dec
inc
push
mov
sub
lea
and
cwtl
testl
or
rcrl
sbb
pop
sub
repnz
pop
imul
jae
out
xchg
cwtl
dec
xchg
arpl
jg
lock
andb
pop
xlat
cmp
or
sbb
jo
xchg
js
aas
hlt
roll
out
jecxz
jle
push
aas
or
ss
in
sahf
xchg
int3
push
add
test
cmp
mov
mov
xor
stc
inc
push
xchg
aaa
hlt
dec
in
pop
clc
jle
movsl
push
xlat
push
std
daa
les
sub
and
lods
push
js
rorb
gs
inc
stc
mov
ss
ret
cmpsl
roll
gs
int
test
loope
shl
inc
adc
add
and
cmp
adc
arpl
pop
jno
push
jle
out
scas
bound
mov
and
sbb
test
push
sub
pop
fwait
adc
mov
pop
push
jns
out
arpl
fstps
or
xor
enter
pop
loop
push
repnz
adc
mov
cmp
or
mov
jg
xor
dec
jle
sub
mov
cld
jno
xor
sub
in
ja
push
lret
ret
push
dec
push
adc
fsubrl
out
insl
lcall
xor
rclb
fidivs
scas
dec
mov
xor
pusha
es
std
mov
pop
mov
mov
fwait
push
movsl
mov
jno
cli
aam
and
push
arpl
shrl
aam
sbb
sarl
xor
bound
decb
mov
lcall
aad
test
sub
push
jmp
fs
dec
push
add
cltd
gs
dec
jns
push
adc
repnz
or
xlat
adc
cmp
cmp
lcall
repz
xchg
iret
add
push
idiv
xor
push
cmc
ja
add
fiaddl
sub
xchg
and
push
stos
jb
shlb
test
in
cmp
test
dec
cli
inc
inc
inc
test
xchg
sti
mov
adc
inc
push
jnp
in
out
jae
enter
inc
stos
das
in
xchg
push
adc
in
shr
jg
and
push
scas
lock
sub
ret
jbe
lods
xchg
cmp
jmp
outsb
ret
addr16
inc
clc
mov
movsb
jns
cli
dec
ljmp
mov
sub
imul
push
xor
or
in
xchg
cli
xchg
add
bswap
ljmp
inc
repz
push
xor
adc
stc
imul
xor
aas
xchg
xchg
ficompl
divl
jbe
clc
loope
cmpl
pushf
and
test
out
sbb
dec
dec
jg
jae
arpl
sbb
lahf
push
mov
lahf
sbb
push
pop
scas
xor
push
jl
xchg
and
idivb
pop
subb
and
mov
mov
xchg
fdivp
mov
movsl
xchg
in
and
imul
mov
adc
sub
int3
hlt
loope
bound
or
ss
int3
push
pop
fstpt
scas
sub
sbbb
in
mov
lods
mov
inc
loop
sub
ljmp
out
push
sbb
cs
addr16
inc
pushf
into
add
xchg
mov
std
pop
test
mov
in
mov
cld
pop
repnz
jbe
stc
mov
insb
cmp
ss
pop
inc
and
dec
xchg
enter
or
aad
cwtl
add
jae
xor
imul
sar
sub
add
jmp
outsb
fcoml
daa
mov
mov
int3
pop
mov
das
addr16
dec
int
push
push
les
xorb
insl
out
sbb
adc
pop
mov
js
jmp
cmp
cmp
cmc
incb
pop
xor
lods
xor
mov
push
sbbb
dec
lock
push
xor
imul
leave
and
adc
jb
das
cltd
inc
jge
lcall
jno
xor
ds
push
sbb
mov
cld
xor
cmp
insb
inc
stos
outsl
bnd
adc
pop
push
and
lods
push
pop
push
bound
test
xlat
loop
push
scas
lcall
hlt
mov
lret
imul
ds
add
mov
repz
out
and
bound
jmp
jbe
nop
bswap
mov
movsb
lcall
lret
pop
negb
mov
xchg
xlat
mov
inc
stos
pop
repz
fistl
test
add
je
mov
jl
dec
cmc
cmc
mov
in
sti
mov
and
pop
cmp
insb
ret
out
add
iret
das
or
outsl
pop
cmp
adc
aad
mov
stos
pop
mov
mov
aad
div
stc
adcl
mov
mov
and
xchg
test
cmp
fwait
loop
pop
inc
das
in
add
filds
dec
cmc
jo
in
xchg
adc
push
out
push
orb
fdivrl
stos
insl
mov
push
sub
push
mov
xor
pop
pop
stc
pop
cli
mov
stos
xchg
rcll
xor
sbb
sub
dec
ret
ja
adc
std
and
sarb
mov
add
into
lcall
mov
jae
mov
icebp
mov
xchg
jge
daa
mov
pop
cmp
lods
and
mov
and
and
insb
xor
jbe
mov
xor
and
jno
prefetchw
or
imul
ja
and
pop
push
mov
js
jne
or
fildl
mov
pop
ljmp
mov
jmp
sarb
push
std
sub
dec
outsb
adc
fwait
mov
pop
scas
push
mov
mov
and
iret
fdiv
mov
out
push
ret
lods
popa
pusha
roll
pop
rcrl
lret
cmp
cli
lret
or
addr16
adc
bound
pcmpgtw
pop
scas
inc
xor
mov
out
lea
jp
adc
push
xor
sub
out
aad
rcl
in
jecxz
scas
shl
or
daa
and
fstpl
out
ljmp
lea
outsb
ljmp
clc
push
std
jo
popf
push
dec
sub
jle
stos
mov
cmp
addr16
add
inc
shlb
adc
bound
call
aam
and
or
ret
js
push
push
scas
and
repnz
movsb
jmp
sarb
adc
jle
add
or
jns
stos
addr16
mov
xchg
ss
sub
test
test
sub
imul
addr16
ja
add
jp
out
mov
jb
cmp
mov
mov
in
cmpsl
mov
shll
imul
out
aad
xor
mov
or
lods
cmp
cmpsl
lret
call
adcl
add
xchg
cs
xchg
movsb
mov
add
and
fcoml
addr16
inc
push
lods
mov
cld
adc
sbb
jns
or
test
pushf
test
jl
aam
jle
and
xor
dec
test
mov
adc
cmpsl
adcb
aaa
fsubr
fs
pop
inc
jae
inc
jl
or
mov
sub
out
mov
daa
mov
mov
mov
push
cmp
shr
xor
adc
jg
dec
add
xchg
pop
test
lock
sbb
aad
ds
push
je
pop
mov
out
dec
les
xlat
adc
bound
je
inc
mov
subl
jl,pt
imulb
and
xor
dec
mov
inc
cmc
xor
or
outsb
stos
pop
outsb
in
popf
jp
movsl
sbb
cli
sub
mov
data16
addr16
push
cmp
or
pop
vprotw
push
call
pop
add
adc
mov
adc
out
and
lret
add
sbb
cmpl
pop
stc
or
cltd
lods
or
faddp
xchg
jnp
scas
pop
cmp
xchg
insl
xchg
inc
xchg
sbb
pop
xchg
dec
push
xchg
add
ss
notl
sub
or
inc
xchg
jmp
roll
pushf
xor
xchg
test
mov
nop
sub
and
cwtl
dec
fldcw
fwait
addr16
xor
shrb
mov
out
xor
pop
mov
outsb
int
lret
shl
mov
inc
bnd
or
push
cmp
dec
movsl
js
push
cld
iret
lods
pop
sub
push
jb
push
jbe
xor
inc
xor
mov
repz
cmpsb
stos
inc
fs
cmp
and
mov
fs
or
int
push
out
mov
pop
add
jo
shll
sub
insl
inc
mov
dec
mov
mov
aam
imul
cld
mov
scas
mov
xor
sbb
mov
pop
cmp
rcrb
sub
sub
add
mov
lret
clc
fwait
repnz
out
sar
in
js
mov
xchg
xor
sub
dec
and
push
push
enter
pop
insl
jmp
xchg
in
and
pop
pop
sahf
xchg
ficoms
movsb
rcrl
into
gs
ja
cmp
xor
dec
inc
mov
cwtl
add
fldenv
mov
outsl
outsb
mov
loop
sub
scas
stc
pop
inc
cmpsl
aad
arpl
dec
sub
jg
stos
xchg
sarb
jne
mov
daa
scas
sbb
cmp
call
and
push
add
std
cmp
cmp
push
scas
inc
inc
cmp
gs
enter
iret
fcomi
dec
fisubs
mov
jns
pop
pushf
hlt
xor
out
mov
repnz
test
cmp
pop
inc
cmpsl
imul
xchg
popl
stos
clc
push
push
mov
stos
xor
mov
cmc
shlb
mov
jae
jne
insb
outsl
dec
jae
mov
pop
sbb
mov
jae
lahf
js
add
push
adc
mov
leave
test
cld
xchg
pop
cmp
ret
loope
shlb
xchg
stc
inc
mov
jno
int
fs
mov
stc
data16
xchg
pushf
sbb
les
loop
and
push
push
js
js
lds
imul
ljmp
xchg
dec
inc
mov
ds
xor
gs
insb
jb
jp
add
mov
bound
inc
mov
sbb
or
mov
fcmovnb
pop
mov
outsl
add
push
leave
lods
pop
punpcklqdq
test
dec
mov
cmpb
ret
pop
jns
loopne
pop
out
aad
fwait
loopne
cmp
or
mov
mov
cmpsb
cmpsl
outsl
push
jl
push
mov
and
repz
ret
pop
ret
out
push
push
insl
std
imul
fucomip
jp
popf
add
out
ffree
out
cmove
mov
sub
jns
cmpsb
mov
or
loope
cs
or
and
fldt
mov
pop
pop
and
addb
out
aad
xchg
lock
mov
outsb
and
flds
add
sbb
mov
into
sub
rcrl
test
pushf
in
pop
or
fldenv
jle
fldl
xchg
add
pushf
pusha
fdivrp
stos
inc
push
mov
icebp
push
cs
mov
xchg
lea
in
daa
fmul
stos
sbb
shrb
sbbl
inc
test
faddl
bound
or
inc
lret
mov
fcmovnu
daa
test
and
std
xchg
andb
fidivrs
movsl
in
loopne
dec
shl
movsl
aaa
mov
scas
add
call
rclb
rcl
data16
mov
sbb
xlat
gs
xor
ja
clc
int
mov
xorl
adc
sbb
neg
aas
push
jo
addl
mov
aas
scas
jnp
mov
jecxz
mov
shlb
scas
aaa
adc
dec
mov
ds
dec
mov
out
cltd
inc
pop
dec
jle
add
cld
pushf
shlb
nop
push
aam
test
inc
sub
jg
in
dec
mov
lods
push
test
pushf
iret
add
and
scas
sbb
hlt
cld
mov
test
dec
xchg
imul
test
dec
dec
mov
jae
cmp
xchg
pusha
cmp
pop
pusha
xchg
lret
pop
into
xor
and
or
pop
pop
inc
mov
cmpsl
mov
ljmp
mov
dec
dec
push
mov
test
cli
loope
sub
out
or
cld
mov
push
icebp
lahf
data16
xchg
xchg
adc
out
push
push
mov
hlt
int
and
ss
or
std
insb
outsb
cwtl
stc
dec
inc
sbbb
sbb
jns
fstps
daa
outsb
in
mov
out
and
lea
in
shrb
xchg
ret
call
mov
inc
mov
push
push
sbb
jns
sub
in
push
je
inc
outsb
pop
int3
and
popf
popa
lahf
lock
test
aam
mov
mov
inc
inc
xor
sahf
negl
std
push
sti
xchg
cwtl
add
sub
leave
in
rol
js
dec
add
fldt
sub
jg
cld
loope
push
in
mov
xchg
shll
push
cmc
xchg
test
faddl
js
arpl
mov
iret
mov
insl
adc
mov
jl
sbb
inc
mov
mov
fmull
aam
dec
or
lret
push
mov
sbbl
xchg
jb
jno
pop
sahf
ds
sub
outsb
repz
push
add
xor
mov
pushf
in
cmp
xchg
jg
mov
push
cli
movsl
xchg
cmc
filds
ss
xor
stc
mov
fs
ds
add
cmc
xor
xchg
adc
push
clc
xchg
dec
stos
xchg
in
cmp
mov
push
inc
sahf
inc
inc
cmp
mov
movb
ja
ljmp
cmp
push
outsb
pop
xor
cmp
out
jmp
aaa
push
sub
sbb
adc
sub
cmc
dec
repz
pop
aas
mov
jb
into
push
xor
jnp
jmp
sahf
inc
jbe
es
stos
cmpsb
stc
cmp
outsb
xlat
jns
leave
lcall
jae
popf
fs
cmp
dec
mov
call
and
xchg
jne
xchg
adc
xchg
pusha
inc
daa
push
hlt
out
push
mov
fcomps
clc
xor
push
or
lods
cmp
sbb
mov
xchg
mov
cld
mov
cltd
jecxz
insl
add
repnz
mov
adc
jnp
orb
xchg
ja
mov
popf
mov
and
lcall
push
push
cmp
lods
pop
sub
adc
sub
stos
movsl
pop
cld
cmp
jo
inc
ret
mov
imul
repnz
jne
jge
addr16
in
ficoms
stos
xchg
imul
nop
cmpb
arpl
pop
jns
mov
repz
jnp
stc
cmpsl
jno
mov
fs
adc
inc
stos
pop
pop
ss
sar
mov
add
mov
add
mov
insl
and
rcl
arpl
js
lds
or
dec
jo
iret
out
push
and
and
aaa
inc
xchg
das
mov
lret
data16
fisttpl
roll
mov
jecxz
cli
call
pop
jge
daa
aaa
jne
sub
scas
pop
mov
sub
aas
in
mov
enter
xchg
pop
dec
or
and
cmpsl
add
jmp
jl
dec
outsb
or
js
rcll
shlb
sbb
and
lods
mov
sbb
or
add
xabort
dec
cwtl
nop
sti
push
sub
inc
arpl
sub
inc
or
inc
mov
jmp
jne
fidivs
xchg
jmp
sub
js
sbb
jmp
cmpsb
inc
lods
in
or
rcr
sbb
sbb
out
pusha
rol
jg
mov
xchg
ds
inc
pop
jp
cmpsl
dec
mov
addr16
mov
test
mov
addl
fistpl
inc
into
ljmp
jnp
cmp
iret
sti
nop
les
ja
inc
push
div
jno
testl
imulb
stos
add
and
lret
mov
sub
mov
fisttps
push
in
pop
push
jl
int
sub
sbb
pop
push
push
push
test
movsl
aad
psubsw
addr16
jl
sub
cmpsl
sbb
imulb
pop
mov
or
cwtl
idivl
lea
lock
xchg
mov
lahf
in
lods
popa
sub
mov
xor
das
xorl
popa
ret
lret
inc
bound
and
rclb
jnp
push
sub
xchg
and
jae
inc
xor
in
jnp
adc
xor
hlt
test
loope
fildl
xor
out
les
fbld
jbe
dec
mov
out
js
lods
and
ja
addr16
xor
jecxz
pop
sub
cmpsb
out
xor
pop
jecxz
andl
cltd
pop
outsb
push
cli
int
or
and
push
xor
add
pushf
sub
cmc
sub
push
mov
icebp
mov
sub
shrl
aas
xchg
mov
xchg
sub
out
in
sti
cwtl
cmp
rcll
fstpt
adc
iret
jne
inc
bound
push
in
cmp
jae
xor
sbb
adc
inc
nopl
inc
mov
notl
xchg
les
cltd
cltd
jbe
jno
mov
cmp
inc
loopne
call
sub
loopne
jl
ja
mov
push
js
lods
stc
out
pop
fabs
cltd
jne
cs
scas
cwtl
sti
loopne
push
dec
pushf
les
pop
dec
inc
mov
dec
add
mov
cmp
ja
push
mov
lcall
mov
adc
lods
pop
cs
adc
adc
andl
inc
ss
clc
cltd
adc
push
aas
dec
addr16
jno
ret
pop
push
add
xchg
insl
mov
cmp
xchg
push
test
jecxz
int3
ds
adc
mov
push
and
packuswb
jmp
jg
jb
dec
inc
cmpsl
in
out
imul
xor
and
xor
inc
dec
xchg
mov
mov
adc
aad
mov
and
adc
and
mov
in
stos
dec
ret
ds
rorl
push
lock
sub
divl
push
dec
sub
inc
jno
and
mov
mov
pop
shlb
dec
inc
ret
dec
mov
mov
cmp
xchg
and
das
sti
loop
add
jp
pushl
mov
sub
mov
cmp
mov
fs
jb
dec
inc
xchg
adc
daa
in
into
lret
inc
repz
jb
jb
ds
arpl
iret
mov
mov
add
mov
add
adc
js
js
jo
cmpsb
mov
lcall
inc
lods
iret
pop
das
xchg
insl
mov
in
testl
and
setle
inc
pop
rorb
mov
mov
stos
lock
ljmp
movsb
mov
shrb
pop
adc
aad
sbb
pop
and
insl
hlt
mov
into
and
jns
dec
add
leave
rclb
adc
fisttpl
lods
sarl
sub
clc
into
icebp
ja
cld
int
add
pop
idiv
bound
push
fadds
mov
inc
sub
lea
jbe
fsubrs
jne
xor
es
xchg
or
out
cld
mov
cmp
sub
aaa
add
xchg
xchg
push
bound
cmp
push
adc
and
or
mov
adc
inc
mov
sub
ret
aad
fldt
push
imul
ds
stos
or
dec
subl
test
adc
and
push
cmpsb
mov
ja
inc
outsl
fnstcw
mov
xchg
movsl
and
cld
mov
xor
jno
ret
fsubs
lds
or
gs
sub
mov
jno
movsb
mov
test
arpl
mov
popa
incl
and
cld
pusha
lea
out
jle
push
dec
pop
das
jo
and
testl
mov
push
cmp
jl
repnz
xchg
mov
sub
sub
pop
jne
mov
not
ljmp
push
inc
test
lods
mov
lods
fs
xchg
pop
arpl
sub
adc
xchg
mov
andl
mov
and
push
jbe
scas
imul
jbe
lret
stos
jb
ret
cmc
cmp
sub
psrlw
dec
inc
sub
push
jns
popa
mov
inc
cmpsb
pop
jb
mov
das
inc
add
outsl
out
dec
shll
pop
mov
ja
out
sub
add
mov
sub
jg
pop
imul
sti
js
cmpl
movsb
gs
push
adc
and
lahf
xchg
adc
add
out
adc
insl
leave
inc
pop
mov
sbb
lds
mov
dec
fcoml
mov
pop
aaa
add
or
mov
jo
or
xchg
mov
rcrb
in
add
jae
push
mov
cltd
stos
sbb
jl
adc
icebp
int
add
ds
and
lock
add
andl
test
ljmp
jo
insb
mov
out
sbb
aad
insl
ljmp
xchg
lds
aaa
mov
push
fimull
ret
ljmp
mov
je
adc
aaa
xor
icebp
mov
je
mov
cs
push
out
loopne
into
scas
incb
sub
into
imul
or
fnstcw
pushf
jns
sahf
jnp
cmp
adc
scas
sti
fcmovne
fidivl
cmc
pop
add
xor
jmp
addr16
pop
out
mov
out
dec
jnp
in
das
xor
fwait
test
mov
es
cmp
mov
ja
inc
push
or
add
lret
lea
sti
popl
ret
nop/reserved
negl
sub
gs
cltd
pop
xchg
arpl
and
pop
push
imul
aaa
push
rorb
push
sub
stos
push
add
dec
pop
sub
call
enter
pop
repz
lcall
fcmovnb
bound
fndisi(8087
xlat
xor
ret
xchg
das
repnz
xchg
cltd
add
cmpsl
jbe
fmulp
jnp
data16
cwtl
mov
xchg
xor
push
iret
fists
jno
push
mov
fs
imul
shrb
jmp
sub
mov
loopne
jbe
icebp
adc
shlb
mov
in
mov
cmp
mov
sub
pop
push
lods
inc
adc
fistpll
lret
loop
xorb
mov
repz
movsl
shlb
and
out
pop
and
shr
aam
add
adc
jg
mov
push
sub
xchg
in
adc
lock
push
push
or
mov
or
pop
pop
xchg
mov
dec
outsb
aam
aad
pop
into
sbb
xchg
cmpb
pop
cltd
mov
movsl
jp
dec
sbb
push
pushf
jle
xchg
pop
dec
dec
jge
push
scas
or
repz
daa
cmp
stos
inc
xchg
xor
jp
cmp
mov
stc
inc
jns
cmp
dec
leave
pushf
in
stos
xor
pop
push
add
enter
xlat
imul
push
stc
inc
repz
add
scas
push
jp
out
lret
imul
fs
pop
push
out
pop
jnp
loopne
sahf
aaa
pop
dec
pop
jnp
mov
cmp
movsl
jbe
lods
push
jae
pop
repz
cmpsl
ret
inc
popa
sti
icebp
jbe
and
pop
dec
adc
lock
push
movsl
mov
sti
cwtl
fidivs
sub
or
ljmp
push
lcall
movsb
mov
cltd
jg
sarb
movsl
sti
xlat
cld
sub
lods
push
pop
fstpl
lcall
pop
in
jb
push
push
cmp
xor
lods
jecxz
xchg
xchg
rcll
mov
lret
jnp
popf
or
lods
adc
jl
ja
xor
or
sbbb
xchg
cltd
inc
push
or
into
popa
jmp
shl
and
loop
pusha
jae
testb
jl
dec
sub
mov
jae
mov
outsl
insl
orb
jae
cld
sbb
fcoms
addb
rorl
aam
insb
fs
dec
xchg
mov
inc
jp
mov
test
out
popf
xor
jl
fcompl
push
dec
and
mov
jl
vmread
shlb
fwait
add
int
pushf
icebp
jecxz
loop
arpl
data16
sub
adc
cmp
pop
aaa
insl
out
xchg
imulb
arpl
and
mov
sbb
dec
xchg
dec
mov
pushf
mov
cld
or
pop
add
dec
movsl
jbe
daa
pop
mov
xchg
or
mov
mov
test
mov
cltd
arpl
in
jo
mov
int
mov
lock
mov
pop
in
int
sub
inc
jge
arpl
mov
test
xchg
or
sar
mov
xor
pop
mov
out
xchg
jnp
dec
fldcw
cwtl
jl
dec
mov
adc
fsts
data16
xor
std
push
std
mov
mov
mov
cld
sub
sub
daa
and
lods
push
push
popfw
leave
cmp
mov
or
sbb
xor
mov
pop
or
push
adc
push
pop
sub
negb
add
cmpsl
aas
imul
push
pop
movsl
add
lret
push
imul
rcrb
movsb
sbb
std
push
jge
or
hlt
out
lock
jo
jp
mov
iret
xchg
ret
mov
das
daa
repnz
daa
ret
cmp
loopne
fucomp
xchg
lret
outsl
lret
push
or
inc
pusha
addb
xchg
sub
ljmp
jbe
ret
xchg
arpl
inc
dec
shl
adc
pop
out
cmpsb
int
je
mov
sbb
repz
sbb
fs
into
pop
ret
mov
divb
negl
fmuls
mov
lods
lds
mov
xor
lds
inc
push
mov
stos
add
lret
rcrl
cmp
adc
in
mov
shlb
mov
loop
test
xor
pop
rorl
mov
jns
clc
in
sbb
xor
aaa
jge
aam
ret
cmp
and
lds
add
imul
std
cltd
mov
xchg
cmp
lret
movsb
dec
sbb
xchg
pop
add
mov
jb
sub
cmp
into
xor
mov
sub
shlb
icebp
repnz
dec
arpl
cmc
nop
je
mov
mov
fwait
jle
jle
fs
xchg
xor
cmc
or
hlt
int3
inc
fiadds
dec
mov
dec
fwait
xchg
push
rorl
jne
fiaddl
push
jns
push
cmp
fisubs
push
ret
out
cmp
je
imul
test
lahf
push
sub
mov
jbe
sub
xor
insb
notb
mov
pop
push
jg
loope
test
inc
inc
or
xchg
pop
xor
jle
add
adc
dec
sub
xchg
dec
mov
lahf
lds
jbe
in
pop
add
cmp
push
mov
mov
mul
iret
lea
jae
dec
leave
in
andl
sbb
daa
and
pop
fldenv
cmp
push
iret
loop
mov
and
xor
lahf
flds
cmpsb
dec
lods
lock
enter
movsl
add
push
or
xchg
lret
std
pop
subl
adc
cmpsl
cli
sub
mov
mov
test
fidivs
mov
mov
scas
clc
sbb
xchg
push
cli
xor
xchg
add
dec
inc
sub
pop
or
ja
jmp
gs
mov
push
call
int3
mov
mov
ret
loopne
ror
push
cltd
scas
enter
dec
add
out
es
std
push
mov
pop
cmp
out
xchg
int
jns
jb
int
mov
int3
xchg
pop
adc
cmpb
cmp
outsb
and
jecxz
fcmovnb
sub
std
repz
mov
cmp
jg
dec
add
xor
add
cmpsl
lea
cmp
out
push
ja
pop
imul
cmpsl
out
rorb
enter
sbbb
bound
mov
call
cwtl
jb
aad
mov
fs
sub
or
mov
subb
mov
inc
rol
jge
out
add
hlt
pop
fcmovne
adc
mov
pop
push
in
mov
cmpb
repnz
xchg
mov
cmpsb
dec
sahf
int
fucomi
daa
jmp
push
adc
sub
xchg
out
aas
test
js
test
jg
movb
mov
outsl
pushf
push
adc
jg
or
clc
ds
iret
testb
mov
inc
and
imul
loopne
add
rcl
mov
lds
pop
or
cmpsl
xor
enter
pop
xor
mov
std
jmp
mov
mov
sub
loopne
dec
or
pop
adc
inc
push
adc
fldenv
jae
add
pop
lds
cmp
test
ja
lea
xchg
cmp
push
inc
shlb
imull
lret
jmp
dec
ds
ds
and
inc
repnz
outsl
xchg
inc
mov
adc
sbb
das
test
leave
mov
inc
xchg
test
mov
lahf
or
and
das
mov
rol
xor
and
inc
js
fld
shll
adc
outsb
lea
dec
or
loope
int
push
sti
stos
in
pop
std
mov
ljmp
imul
loope
mov
pop
sbb
pusha
cmp
outsl
fisttpll
loope
cmp
jmp
inc
xchg
mov
cmpsb
push
xor
inc
jge
mov
dec
leave
cltd
mov
xlat
xor
jno
dec
mov
out
imul
dec
into
xor
sub
cmp
or
jns
bound
stc
cmp
mov
or
pop
cmp
imul
mov
adc
stos
push
rorl
js
add
sub
jbe
in
dec
jb
mov
test
adc
adc
movsb
jecxz
pop
mov
mov
xor
xchg
xchg
xchg
xchg
cmc
push
mov
cltd
nop
and
dec
and
mov
dec
test
sub
mov
jb
pop
hlt
mov
mov
push
arpl
mov
jns
ret
or
jne
pop
pop
mov
sbb
pop
xor
mov
push
cmp
mov
inc
lret
rcrl
mov
inc
test
test
sbb
subb
pop
pop
fistl
jns
ror
xor
xchg
cwtl
fistl
dec
lds
sbb
outsl
jmp
dec
enter
dec
xchg
push
cs
pushf
ret
mov
jge
jecxz
and
fwait
add
pextrw
jns
pop
cmp
sbb
dec
cli
mov
and
fdivrp
dec
sbb
cmpsl
dec
or
sbb
dec
outsb
cmp
cwtl
pop
ficoms
js
negl
dec
sbb
scas
sbb
or
inc
fld
adc
or
mov
pusha
add
loopne
dec
push
pop
testb
cmpsl
dec
inc
fiaddl
test
mov
sbb
push
divb
test
or
push
xor
jle
inc
pop
fsubl
mov
test
dec
xlat
mov
mov
add
movsl
xlat
imul
dec
fistps
cmp
cmpl
pop
jecxz
sbb
xor
mov
cli
xchg
lds
rol
pop
out
push
shlb
ljmp
dec
ja
cmpl
add
push
rcrb
lret
cmp
sbbl
imul
cmpsl
pop
push
cmp
addr16
cmpsl
mov
or
add
arpl
adc
negl
ficoml
jl
aam
shr
push
stos
inc
sub
dec
adc
mov
dec
jno
popa
outsb
fcmovne
sub
les
imul
imul
xor
dec
rcrl
mov
int3
fisttps
aaa
movsb
mov
dec
outsl
imul
push
push
nop
and
fidivs
out
subb
pushf
add
pop
shl
jge
aam
jecxz
add
xchg
mov
incb
adc
jno
mov
cmp
jb
xchg
xchg
loopne
cmp
fildl
mov
mov
add
pusha
mov
pop
pop
scas
sbb
mov
adc
repnz
aam
sub
out
ljmp
and
nop
dec
cmpl
popa
rcr
std
lcall
pusha
inc
imul
mov
cmp
lret
into
jne
mov
or
jae
ret
push
out
push
fucompp
sarb
outsb
add
lar
aam
dec
fstpt
inc
and
pop
loopne
jmp
xlat
fadds
add
fdiv
xchg
out
xchg
cmp
pop
das
popl
ret
pop
dec
push
and
mov
or
xchg
inc
xlat
into
jge
and
xor
test
or
push
mov
lock
js
lods
mov
int
out
out
int3
mov
xchg
and
jnp
or
and
or
mov
mov
adc
pop
out
cmp
jnp
daa
test
sub
cmpsl
jns
push
ret
fistl
lcall
icebp
sub
mov
sub
pop
dec
sub
mov
add
bound
jmp
into
fistpll
mov
jo
outsl
cmp
out
nop
inc
repnz
mov
push
xlat
mov
jge
lock
rcrb
pop
stos
jmp
insb
mov
fimull
lea
xor
aaa
mov
lock
scas
iret
subb
scas
leave
ret
in
adc
mov
inc
mov
mov
mov
lods
inc
add
mov
ljmp
xor
lret
jecxz
aad
push
fs
xchg
and
adc
enter
repnz
insb
test
fisubl
or
mov
pop
pop
das
add
andb
adc
dec
mov
mov
std
andl
jge
stos
outsl
xor
fsubrp
lret
and
dec
lea
mov
sub
out
pushf
and
xchg
cltd
loopne
fnstsw
cmpsl
aaa
pop
out
ljmp
or
ss
aaa
mov
cmp
sub
popf
push
lods
adc
push
movsb
cs
je
xor
pushf
aaa
jg
shlb
sbb
adc
push
mov
arpl
dec
sub
out
cld
inc
sub
imul
cmp
or
ret
test
dec
jmp
fildl
in
inc
xor
das
xchg
call
mov
mov
pushf
shlb
cmp
test
adc
jbe
add
lea
enter
test
sahf
les
jge
imull
insl
adc
or
pop
pop
popf
jle
test
ss
or
movsl
xchg
imul
subl
popa
out
das
fwait
aad
xchg
das
push
lret
xchg
fwait
add
jmp
xchg
xor
cltd
les
bound
mov
lea
je
fcomi
mov
cmpb
pop
adc
ja
js
adc
adc
lret
dec
ret
mov
cmp
inc
mov
rcll
mov
jno
cmp
insb
jl
addr16
fiadds
jge
push
xor
add
rcl
pop
lods
jbe
mov
cwtl
fldl
sub
add
bound
cmp
aas
jnp
xchg
push
imul
and
mov
and
and
leave
and
loopne
jg
mov
mov
arpl
inc
jp
rorl
pop
lahf
cltd
xchg
inc
mov
jp
pop
shll
iret
popa
js
sbb
inc
aam
loopne
xor
cmp
lock
jl
imul
xchg
int3
and
push
mov
orb
mov
xor
lea
mov
xor
loope
fiaddl
test
adc
mov
push
jge
mov
or
sub
data16
add
fsubrp
push
adc
cmp
scas
hlt
sbb
adc
mov
jb
cmp
icebp
lds
push
mov
je
fcoml
adcb
and
fstps
cmp
pop
popa
mov
pop
lock
and
pop
lret
sti
xchg
lods
push
scas
adc
cmpsl
and
dec
mov
dec
imul
dec
cmpsb
inc
loop
dec
jle
cmp
lahf
popl
or
shl
lods
cld
fwait
sbb
les
mov
push
dec
mov
outsb
gs
gs
mov
loopne
xchg
dec
push
sti
xchg
sbb
sub
push
pop
stos
jb
popa
adc
jl
mov
adcb
sbbb
jae
outsl
cmpsl
push
cmp
int
xchg
push
inc
mov
div
int
in
mov
jno
pop
in
ljmp
inc
sbb
rclb
rorl
les
push
xchg
pushf
xor
xchg
jp
pop
ret
stos
fdivs
mov
les
ja
sub
and
sbb
xchg
dec
sbb
mov
or
into
fsubrs
aas
adc
jmp
lods
into
xchg
jnp
mov
cmp
scas
sub
jo
mov
repnz
mov
movsl
ficomps
adc
outsb
fs
sbb
mov
jl
push
es
fucomip
daa
leave
nop
ret
sbb
and
std
jp
push
pop
mov
xchg
stc
xchg
sbb
push
outsl
sbb
add
fs
cmpsb
inc
repz
mov
cltd
dec
fiaddl
and
cmp
ljmp
xor
add
stc
xchg
mov
sub
sub
push
xchg
rolb
mov
inc
fiaddl
std
xor
daa
add
sahf
gs
inc
movsb
sub
int3
ss
scas
adc
mov
es
arpl
jmp
ljmp
inc
xchg
fs
adc
jp
orb
imul
popf
and
mov
mov
xchg
scas
iret
aad
divb
mov
ss
push
ja
or
mov
xlat
fbld
in
or
sub
adc
jne
adc
cld
jns
in
sbb
push
or
imul
cmc
aad
sbb
inc
sub
jo
std
dec
or
daa
sub
ffreep
jmp
lods
cmp
leave
sbb
in
lret
dec
xchg
repz
xor
adc
lret
jmp
sub
shrb
cwtl
inc
inc
xor
sbb
hlt
lret
divb
jge
push
cmc
aas
jecxz
enter
inc
push
mov
push
pop
cmc
inc
inc
push
mov
imul
and
and
inc
lods
lahf
aaa
dec
cs
pop
xchg
mov
sbb
stos
push
jl
push
rclb
out
push
cmpsb
insl
xchg
stc
adc
xchg
sbb
lahf
inc
xor
int3
jmp
je
fdivl
pusha
adc
mov
lea
inc
push
push
fs
inc
gs
in
xchg
rolb
stos
arpl
cltd
cmpl
xor
outsl
cld
fistps
fwait
mov
pop
test
testb
scas
test
movsl
ss
repz
add
fildll
popf
js
mov
cmp
pop
leave
cmp
std
push
pop
adc
lcall
cmpsl
pusha
scas
cld
mov
inc
out
sti
cwtl
pextrw
xchg
and
push
fstpl
inc
arpl
in
mov
mov
out
mov
decb
push
loope
cmpsb
insl
mov
adc
sti
je
out
leave
scas
mov
add
dec
in
in
in
push
icebp
sbb
js
push
mov
mov
adc
lods
jmp
jge
gs
cs
rorl
dec
jnp
add
or
adc
mov
ret
cmpsl
outsl
cmpsb
stos
mov
xchg
std
mov
pop
fldcw
pushf
andb
mov
outsb
xor
push
inc
pop
cmpsl
mov
add
lcall
das
imul
push
mov
xchg
cmp
lds
iret
cwtl
and
pop
inc
outsl
lcall
stos
mov
popf
jbe
or
jecxz
outsl
add
adc
sti
pop
test
sbb
push
mov
lret
mov
sbb
mov
inc
or
out
inc
repz
jmp
int
pop
mov
dec
xlat
fcomp
repz
cmpsb
xor
mov
mov
lret
stos
das
jg
icebp
ret
adcl
cltd
shr
push
int
lods
lea
cmp
psubb
test
lcall
jp
xchg
gs
rcr
fldenv
xor
push
stos
or
xchg
out
fneni(8087
or
mov
call
mov
ja
xchg
jge
mov
lret
cmp
lds
mov
ret
arpl
icebp
sub
mov
bound
adc
cmp
notl
dec
movsl
lods
les
mov
out
sbb
mov
push
into
lcall
adc
loop
stos
adc
dec
fs
sbb
sbb
jg
pop
test
fsubs
jge
cwtl
clc
mov
mov
xchg
dec
or
xor
mov
jne
inc
mov
test
pop
mov
jmp
mov
shll
pop
int3
xchg
je
iret
add
adc
pop
insl
pop
sbb
fnop
mov
pusha
cmp
push
popa
movlps
cmp
insb
out
int3
and
mov
out
repz
push
cmp
cmpsl
xorl
jecxz
cmpsl
insl
adc
jge
push
inc
xchg
jecxz
dec
mov
dec
test
mov
push
adc
cltd
push
mov
test
movsb
cld
call
sub
mov
add
out
jl
leave
pop
or
stos
ljmp
stc
jecxz
clc
mov
sub
iret
or
lods
dec
and
mov
sub
sbb
mov
out
mov
mov
dec
xor
and
aad
or
adc
xadd
bound
rorl
stos
arpl
sbb
imul
and
mov
inc
adc
mov
imul
cmp
sub
lods
jge
int
sub
out
loope
int3
iret
les
xchg
fstpl
loope,pn
push
pop
divb
inc
sti
mov
lea
xchg
sub
jb
mov
js
cmpsl
outsb
mov
xor
cld
cmp
aaa
rcll
and
sti
push
and
cld
cmp
pop
roll
enter
cmp
push
push
popa
pushf
in
inc
mov
rclb
mov
add
push
and
add
dec
rcll
lret
jle
push
cmp
lret
pop
int3
popf
sbb
call
push
imull
inc
lcall
leave
jbe
call
repz
cmp
sahf
mov
inc
inc
pop
add
cmc
add
adcb
sub
jae
in
rcrl
sahf
out
pop
aaa
pusha
xor
les
negb
adc
ja
scas
test
push
fs
xchg
sub
lahf
adc
scas
mov
sub
les
outsb
jl
in
int
adc
push
ret
sub
jl
loope
stc
call
mov
lock
add
xchg
jg
xor
pusha
std
inc
test
filds
jbe
hlt
lcall
pop
ret
pushf
flds
cmpsl
xchg
lea
movsl
mov
addr16
orl
sub
adc
fistps
leave
and
out
testb
lods
mov
aaa
jl
cmp
cmpsl
icebp
mov
movsl
pop
subb
cmp
sbb
rcll
push
sub
fisttps
sub
or
fldl
push
mov
cli
shll
dec
mov
cmpsl
lret
pop
adc
push
cmp
push
fildl
xor
mov
or
cmpsb
clc
inc
mov
inc
daa
subb
call
mov
dec
out
dec
add
xor
cmp
jecxz
pushf
mov
mov
or
push
negl
in
dec
fdivp
test
out
das
arpl
cwtl
mov
lahf
push
ret
inc
in
stc
sbb
loope
lahf
or
xor
cmp
dec
pop
sti
aam
jnp
push
test
lods
or
cli
inc
jb
rolb
xchg
stos
int
cmpl
loopne
sahf
mov
aam
add
das
arpl
inc
dec
andl
arpl
mov
sbb
shrl
cmp
js
xchg
daa
inc
xor
push
adc
and
cmp
sbb
nop
push
mov
add
xchg
leave
inc
mov
mov
inc
ret
jne
lcall
lret
sbb
cmp
std
imul
and
movsb
pop
mov
sub
cs
aas
enter
and
dec
repz
mov
movsb
mov
xor
pusha
pop
pusha
sub
hlt
sub
sub
adc
loopne
pop
lret
cmp
pop
sub
xor
adc
fisubrl
jmp
out
sub
sub
inc
xchg
mov
add
fisubrs
imul
cld
sub
call
pop
and
pop
push
mov
inc
mov
adc
sbb
in
stos
daa
push
jp
mov
inc
stos
int3
call
sub
gs
jg
xor
add
fwait
mov
int3
xor
lret
movsb
pop
mov
lds
or
push
adc
aas
xchg
pop
enter
insl
mov
cltd
jae
mov
xorl
cltd
stos
lahf
push
jp
sub
insb
sahf
imul
cli
mov
ret
xor
xor
pop
jns
sbb
pop
jb
push
push
movnti
adc
out
cltd
xchg
jne
cwtl
mov
sbb
popa
dec
scas
mov
cli
sub
mov
add
cli
dec
test
push
notb
mov
out
out
hlt
sbb
out
push
xor
hlt
jge
rorl
mov
jbe
dec
out
or
dec
xor
jecxz
pop
xor
xor
lds
and
xorl
add
and
int3
sub
sub
or
sub
movsb
mov
fmull
pushf
cli
push
ret
lcall
and
and
bound
mov
icebp
ljmp
inc
cmp
mov
fincstp
push
xor
xlat
jno
fcmovbe
push
lahf
adc
aam
test
xor
xor
push
les
adc
lods
cmc
ljmp
mov
jle
xor
fstl
inc
arpl
or
movsl
sub
add
push
popf
ds
adc
adc
lret
sub
aas
sbb
arpl
arpl
dec
aam
orl
leave
aas
fidivrs
ja
aam
cmp
movsb
xchg
packssdw
rclb
je
sbb
pop
lret
dec
outsb
jb
fs
rcrl
jno
xor
rcl
es
cmp
push
cmp
mov
cmp
and
notl
dec
sar
scas
add
fcoms
and
or
add
inc
mov
add
xlat
inc
mov
xchg
jp
and
jno
jle
movsl
mov
pop
jmp
cmp
lcall
xchg
and
xor
fldt
mov
pop
xor
push
bound
or
xchg
out
test
cwtl
mov
mov
xor
xor
leave
push
or
xchg
sub
arpl
sbb
lock
cmpsl
jbe
fisubl
insb
mov
push
mov
imul
enter
pop
mov
cltd
ret
sbb
movsb
xor
ja
test
pop
adc
jb
xor
shlb
xor
mov
pop
or
scas
test
sub
shrl
fcomps
jmp
mov
push
add
dec
cmp
sbb
int3
sbb
in
inc
and
aad
push
sub
orl
pop
mov
aam
aad
sbb
cltd
imul
lods
in
dec
mov
imul
cmp
test
mov
imul
xchg
aaa
mov
sbb
cmpsb
pop
xchg
add
fptan
adc
pop
orps
insb
out
loopne
add
sahf
nop
iret
and
ret
das
imul
cmp
shr
aas
fcmovne
addb
cld
sti
shll
pop
xor
sbb
push
in
pop
xor
mov
out
mov
add
outsl
decl
pusha
sbb
xor
adc
ret
dec
loope
sub
fsubp
jg
dec
stc
std
mov
pop
outsb
out
imul
out
mov
xchg
or
test
test
or
cmp
pop
sbb
pusha
pusha
aad
jo
jb
mov
test
call
fcomi
push
stc
fiadds
into
movsl
xchg
add
pop
cmc
popa
push
xor
adc
call
out
out
insl
divl
pop
leave
and
xchg
xchg
push
sbb
mov
inc
sub
cli
fmull
xor
inc
or
mov
push
jb
xchg
mov
stos
ret
int3
repz
inc
add
icebp
jno
jae
jbe
cmpsl
ss
jns
dec
mov
push
or
sbb
mov
fisttpll
insb
and
js
outsb
out
in
cli
sti
push
jmp
clc
fbstp
xorl
sub
pop
popf
push
jnp
mov
adc
mov
push
xchg
push
out
clc
xlat
iret
lret
popa
sub
lret
sub
cld
and
push
inc
jbe
loopne
push
sbb
mov
mov
sbb
lea
inc
sbb
leave
jb
imul
movb
jecxz
xor
rcrl
lret
stc
mov
test
sbb
cmp
lods
xchg
add
mov
cmc
mov
int3
loop
sbb
stos
pushf
repnz
mov
sbb
rclb
popl
xchg
inc
cmpsb
data16
mov
pusha
rolb
aaa
ror
inc
dec
dec
in
dec
ss
mov
lock
pop
adc
sbb
or
ficomps
mov
inc
cmpl
sub
in
jo
rorb
sbb
add
or
lcall
cltd
cmp
mov
cmp
repz
inc
ja
xchg
pop
lret
icebp
pop
adcb
sbb
imul
int3
cmp
jp
js
mov
push
dec
push
repnz
xchg
add
in
and
mov
sbb
addl
lahf
scas
push
jo
add
pop
ja
pop
adc
fwait
xchg
add
icebp
insw
add
inc
or
lds
adc
pop
jne
stos
cwtl
xor
dec
or
jl
adc
enter
jmp
mov
call
mov
test
mov
and
dec
push
mov
pop
sbb
loopne
mov
mov
or
into
pop
inc
clc
div
push
dec
andl
pop
shrl
lret
dec
cld
movsb
hlt
gs
cmpsb
loope
and
mov
sub
mov
xchg
test
mov
mov
and
hlt
push
mov
jns
mov
cmp
in
lret
lret
add
inc
test
adc
lods
add
mov
jnp
or
lock
loop
fiadds
enter
addr16
dec
jge
jb
shll
test
dec
rclb
iret
adc
and
fisubs
mov
loop
mov
adc
rcll
aam
sbb
jne
jno
loope
pop
jne
sbb
cmpsb
adc
xor
filds
cs
lods
fsub
fstpt
mov
ja
movsb
push
movsb
add
adc
dec
arpl
shrb
inc
out
out
fidivs
cmp
add
les
jnp
pop
cs
mov
pop
inc
or
mov
sahf
pop
cld
stos
add
cmp
xor
xor
pop
cmp
lods
mov
adc
imul
stos
ja
rcr
into
dec
fwait
es
dec
xor
adc
out
mov
cwtl
mov
xor
mov
adc
call
jo
iret
lret
pusha
xchg
imul
rcrb
cwtl
clc
mov
mov
test
pushl
repnz
stos
xor
adc
or
dec
adc
add
and
popa
lahf
mov
pop
out
outsb
stos
jno
adc
adc
fwait
popa
add
out
ficompl
mov
push
jbe
leave
mov
clts
gs
shl
xchg
test
inc
cmp
sahf
out
es
dec
lods
add
sti
xchg
rcr
pop
movsl
sbb
mov
aad
and
cmpsb
imul
das
gs
sub
cmp
mov
movsb
repnz
lahf
add
imul
enter
arpl
std
lahf
xchg
aas
sbb
test
rorb
or
mov
mov
inc
mov
andl
mov
test
mov
shl
cmp
popa
lcall
sub
or
fidivrs
lcall
es
mov
push
cmp
dec
add
imul
mov
push
dec
icebp
pop
loopne
inc
push
outsb
mov
sarb
adc
lahf
adc
cmc
push
inc
xchg
clc
sub
add
lret
xchg
cmp
sti
test
cld
or
dec
mov
mov
adc
ja
mov
push
std
mov
into
xor
stos
cmp
stc
xor
add
sub
push
arpl
ja
scas
sub
roll
xchg
dec
movsb
add
nop
daa
mov
ds
out
in
add
mov
sti
loopne
sbb
push
push
lret
jb
jnp
int3
dec
int
push
loope
scas
mov
clc
clc
mov
bound
ja
mov
push
mov
jns
dec
sub
adc
inc
jns
inc
imul
pop
adc
sbb
xor
scas
jbe
imul
ret
sub
ret
jns
daa
mov
cmp
repz
fstl
pop
xchg
icebp
loope
pushf
jmp
mov
mov
leave
je
push
pavgb
js
pop
sub
cwtl
int3
stc
popf
pop
cltd
mov
xor
pushf
stc
sbb
loop
xlat
lock
or
push
mov
sub
sbbl
divb
int3
pop
stos
or
inc
xor
mov
divb
pop
in
sahf
xchg
push
cltd
mov
cmp
enter
dec
pop
sub
and
xor
jg
jns
int3
jns
int
test
inc
dec
in
fisubs
sub
movsb
jae
add
and
cmc
pop
aam
lret
lea
jae
cs
popf
mov
sbb
and
scas
ds
xchg
push
xchg
inc
pop
ret
div
shll
out
mov
movb
imul
jecxz
ds
or
adc
pop
shll
cmp
push
nop
stos
cmp
imul
inc
mov
push
lea
sub
out
push
int3
mov
xchg
cld
cmp
push
sub
dec
push
xchg
fcomi
push
mov
and
les
out
bound
int
decl
jbe
jmp
call
xor
and
aas
loope,pn
in
cmp
add
in
pop
lret
in
bound
cmc
bound
or
lret
sahf
nop
sub
jae
pop
add
int3
test
mov
andl
shr
int
and
lock
mov
mov
sahf
xchg
xchg
popf
lret
pop
mov
jl
mov
mov
and
add
arpl
sbb
jb
out
scas
das
lds
insb
xor
lock
adc
popl
aad
add
pop
imul
mov
pop
mov
in
dec
sbb
pusha
sbb
shll
xchg
fidivrl
jbe
sbb
pop
adc
or
or
cmp
test
xor
fdivrl
lret
inc
out
mov
outsb
out
xor
push
mov
out
adc
lock
shr
cmpsl
stos
or
aam
fwait
movsb
movsl
pop
in
mov
sbb
aas
mov
sbb
out
and
enter
inc
add
and
mov
lods
cmp
int3
push
fsubrl
or
cmp
pop
scas
jge
cld
mov
out
aam
jb
xchg
sarb
add
sbb
fs
testl
outsb
lock
mov
mov
dec
icebp
sti
rcll
push
insl
pop
jecxz
add
ja
fmuls
jb
xlat
push
lea
mov
add
or
bound
test
popa
popa
sbb
jmp
gs
imulb
loop
push
hlt
test
jp
pop
repz
call
mov
idivl
out
jno
and
popf
bound
mov
lock
insl
cli
inc
dec
inc
insl
jo
ret
mov
test
js
fbstp
add
out
add
xchg
cmp
or
jne
pop
dec
cmp
mov
and
fs
or
xchg
je
mov
add
jnp
adc
fcoml
jae
call
lret
xchg
je
ret
popa
leave
inc
xor
push
cmp
shlb
call
das
std
pop
pop
add
adc
inc
in
jne
xchg
and
xchg
das
or
jo
jae
mov
or
leave
adc
sbb
mov
orb
lods
adc
negl
adc
imul
js
mov
jmp
pop
sub
xchg
xchg
add
xor
push
cmp
push
dec
pop
push
adc
push
test
pop
hlt
mov
and
cmp
aad
mov
push
mov
and
mull
dec
aam
es
pop
movsb
or
je
mov
lahf
jp
mov
push
bound
fcomps
popa
out
sbb
movsl
xchg
pop
shll
xchg
test
push
loop
hlt
cmp
or
stc
test
shr
sbb
pusha
sahf
data16
pop
outsb
testl
repz
xlat
arpl
push
pushf
negl
jae
sub
mov
fistpl
push
popa
loop
inc
das
and
nop
xchg
dec
push
add
pop
cwtl
add
and
adc
fdivr
fsubrp
cwtl
jle
and
cmpsb
xchg
push
cmpsb
pop
xchg
lcall
xchg
fdivs
mov
mov
push
das
pop
imul
leave
pop
push
bsr
adc
jmp
push
popa
inc
scas
mov
decl
push
fstl
ret
pop
inc
inc
pop
addb
pop
lods
cltd
nop
mov
mov
jmp
popa
cmp
jle
hlt
sub
clc
lret
icebp
cmp
cmp
jbe
push
test
jmp
fadd
in
aaa
dec
fbld
mov
and
mov
sbb
cmc
mov
xchg
stos
push
scas
cmpl
das
adc
mov
sahf
cwtl
stos
pop
xor
push
movb
push
add
pop
jmp
mov
cmp
mov
jae
lret
cmp
daa
xor
inc
inc
sbb
xchg
xchg
out
scas
dec
jnp
lret
xchg
andl
mov
push
mov
xchg
mov
gs
or
sub
test
imul
mov
cmp
sub
mov
shlb
fisttpll
jae
jle
pop
out
xchg
test
pop
arpl
xorl
aas
ror
jge
cwtl
repnz
ffreep
int3
sahf
add
jge
adc
jns
jle
cs
and
xchg
iret
jmp
and
jno
xchg
jmp
mov
dec
add
adc
movsl
movsb
and
mov
inc
call
repnz
mov
adc
xor
jecxz
mov
out
jne
stos
popf
test
into
fs
rcrb
enter
imulb
outsb
cltd
or
jns
dec
xchg
loope
cmp
cwtl
popa
stc
adc
fsubrp
xor
adcb
dec
jp
nop
testb
out
test
mov
mov
sub
mov
inc
sbb
pop
and
popa
pusha
bound
loop
notb
or
lds
fdivs
in
cmpb
and
sbb
cmpxchg
adc
lods
jecxz
mov
mov
push
in
data16
jnp
test
andl
dec
rorb
adc
arpl
cmpsl
adc
pop
sub
insl
xchg
inc
out
int
and
or
hlt
pop
ja
and
cld
inc
adc
lcall
fadds
loopne
pop
add
daa
les
fimull
cmpsb
pop
test
loopne
std
jbe
stos
mov
insl
jb
mov
push
sbb
pop
lods
andl
pop
jne
bound
in
iret
pop
adc
pop
lods
int3
jae
pminub
sub
cmp
fadds
fdivr
ficomps
mov
aas
es
mov
dec
ss
pusha
fadd
pusha
lret
jnp
push
bound
adc
mov
xor
xchg
out
incb
clc
push
fsub
pop
fdivs
test
mov
int
repnz
dec
push
mov
mov
jmp
push
stos
ljmp
push
into
push
nop
shlb
adc
aaa
xchg
mov
jb
aam
add
sbb
out
ds
mov
push
mov
addb
std
cmp
cmp
shlb
jmp
push
enter
xchg
inc
out
and
sbb
or
jne
xchg
stc
or
adc
scas
mov
mov
mov
ja
mov
lret
cmp
rcl
je
mov
sahf
leave
pop
ljmp
xchg
push
lds
jnp
push
stos
sbb
in
dec
push
jbe
popf
mov
lods
sbb
subl
int
mull
dec
pushw
jae
mov
inc
ror
lret
hlt
cwtl
rorb
les
cmp
cmp
and
addb
cmpb
xchg
mov
insb
insl
mov
pop
xor
scas
fidivs
popw
cmp
es
push
cmp
in
lret
sub
mov
cwtl
inc
pusha
jb
xchg
add
mov
ss
cld
mov
imul
add
sbb
fcoml
ja
scas
pushf
inc
adc
das
adc
dec
adc
ljmp
adc
mov
out
adc
out
add
test
in
xchg
das
nop
dec
pusha
sub
lods
daa
mov
cmp
push
loop
sub
and
notl
jb
lret
ds
jmp
dec
jp
push
push
aad
jae
cld
clc
in
sti
lea
pop
mov
cmp
inc
cmp
mov
pop
fistps
add
int
mov
iret
jg
and
out
pop
nop
scas
aad
cmp
lret
mov
pop
add
cmp
icebp
mov
or
sub
cli
mov
xchg
inc
mov
lds
add
and
mov
mov
popl
jno
lods
push
inc
stc
andl
lahf
or
pusha
push
je
int
and
in
test
xchg
prefetcht2
and
testl
cmc
or
xor
jg
push
mov
scas
rolb
int3
sbb
cmp
rolb
or
add
dec
dec
test
andl
js
addr16
dec
pop
push
cmp
test
adc
lods
loop
ljmp
loopne
mov
add
shrl
enter
push
or
stos
ret
ljmp
jnp
out
gs
scas
iret
int3
popa
and
in
pop
push
xchg
xchg
jb
cmp
pop
add
or
lea
or
inc
repz
fistps
pusha
push
repnz
mov
pop
ss
mov
push
xor
mov
loope
iret
adc
bound
and
int
xchg
in
inc
mov
jle
inc
and
out
push
aad
xchg
sub
subl
and
jno
adc
and
and
jle
and
adc
sahf
sarl
jp
xchg
push
jno
push
inc
scas
subl
in
movsb
xchg
adc
je
sbbb
sub
fisttps
scas
into
sub
decl
mov
scas
inc
sti
pop
lea
lret
inc
int
movsl
movsl
lcall
aaa
sub
or
sub
and
int3
jbe
int
or
pop
fmull
lret
pop
add
mov
je
push
ss
addb
pusha
mov
inc
jmp
pop
push
out
aaa
repnz
jmp
push
mov
pop
dec
cmp
fisttps
imul
mov
xchg
movsb
lods
push
imul
int
test
sahf
les
lcall
pop
xchg
bound
push
loopne
pop
cmp
sti
arpl
mov
push
ficompl
xchg
lods
xchg
xor
mov
adc
imul
notl
dec
aad
inc
mov
dec
in
fbld
push
ljmp
sub
sub
inc
mov
sbb
ret
sti
pop
sbb
xchg
pop
xchg
addl
leave
andl
mov
loopne
test
pusha
xchg
lret
adc
sahf
ds
popf
gs
cmc
ja
dec
or
popa
scas
lods
xchg
pop
and
jne
xchg
push
jo
adc
xchg
shlb
aam
cmc
pop
js
bound
les
hlt
sti
adc
stos
push
into
push
adc
sub
pusha
aaa
xor
pop
int
dec
mov
add
andb
push
orl
push
or
lcall
jg
cmp
arpl
sbb
pop
test
es
pop
or
repz
cld
jns
das
dec
jno
int
push
jg
fsubrs
cmpsl
sub
sbb
jg
movsb
dec
cmc
xor
mov
cmp
loope
fcomps
std
xchg
lods
fs
push
mov
mov
sarb
cmpsb
insb
lea
dec
mov
loop
test
sbb
mov
jle
push
ja
inc
mov
pop
inc
adc
inc
jle
adc
cmpb
mov
iret
dec
lea
xlat
or
sub
dec
movb
pop
add
mov
and
into
nop
sub
stos
out
sbb
pmulhw
xor
jecxz
mov
cmp
lods
push
cli
cltd
pop
lea
mov
and
out
sbb
int
add
incb
sub
cwtl
cmp
or
imul
data16
and
dec
outsl
dec
lret
xchg
imul
testl
stos
sub
add
push
int3
mov
and
jne
stos
pop
shll
data16
add
dec
mov
icebp
and
mov
addr16
enter
cmp
and
adc
imul
pop
cmp
mov
js
push
insb
sti
test
and
pop
lods
jl
clc
addr16
cmpsb
xor
sub
lock
loope
cmp
loop
repz
call
pop
and
and
mov
jmp
loope
sub
sbb
jbe
jbe
inc
sbb
fildll
add
dec
jge
cmc
dec
cmp
mov
loope
popf
push
mov
rcrb
xchg
out
fwait
jmp
xchg
leave
xor
out
mov
out
or
adc
sarl
in
jb
scas
repnz
stos
sti
rolb
xchg
fstps
pop
cli
sub
in
or
and
out
ret
mov
add
jge
add
push
sahf
dec
popa
shlb
fwait
insb
jle
mov
mov
leave
outsb
das
loopne
stos
push
pop
iret
les
cmp
pop
cltd
lock
xchg
cli
push
iret
shlb
test
inc
stos
jne
test
cli
or
movsb
and
cmp
cmp
rorl
fsubp
dec
xchg
test
add
aaa
mov
test
xchg
mov
jbe
test
push
and
jae
aam
push
and
xlat
xbegin
mov
imul
or
insl
fbstp
lcall
or
dec
fs
fiaddl
cmpsb
pop
lods
ret
push
pop
fnstsw
out
push
std
or
scas
mov
fnstenv
enter
mov
paddsw
xorl
push
inc
or
and
adc
mov
fisttps
loope
jnp
or
jbe
or
fistpll
fidivrl
les
sti
push
sbb
sub
xor
lcall
in
cmc
or
pop
ja
in
inc
cwtl
inc
push
jno
mov
mov
data16
dec
xchg
xchg
add
lods
add
and
popf
fisubs
mov
cmpsb
cmp
rorb
or
mov
cmpsb
ss
in
jne
adc
adc
lds
pop
mov
xlat
popf
imul
cmp
sti
sahf
jno
push
jle
push
or
pop
add
bnd
mov
lret
pushf
or
inc
dec
aam
sub
xchg
xchg
push
into
fs
xor
out
push
lods
push
aam
and
xchg
loope
es
fadd
cmpsl
shlb
push
cmp
outsb
addr16
jl
adc
xor
adc
xchg
pop
mov
mov
arpl
jne,pt
dec
fidivl
mov
cltd
dec
cmc
cli
lods
cmpsl
and
ja
pop
pop
push
and
mov
adc
lods
push
outsl
cmp
lds
movsl
stc
inc
mov
add
mov
sbb
roll
pop
mov
in
movsb
add
fdivrp
repz
test
cmp
inc
cmpsl
in
roll
adc
jns
fucom
mov
stos
stos
cmc
jl
aad
rcl
xor
mov
loop
addr16
sbb
push
and
lret
add
aas
fdivrs
les
sbb
jmp
or
add
enter
xchg
lods
icebp
rep
cmc
aaa
lods
mov
es
inc
mov
inc
sbb
call
or
mov
lods
lret
pop
frstor
out
mov
mov
jne
pop
js
lods
lods
jl
arpl
xlat
push
nop
sbb
jmp
pop
nop
cwtl
or
daa
cmp
notb
or
dec
das
ret
sbb
push
iret
lahf
mov
loope
out
adc
jecxz
inc
or
push
test
xchg
pop
adc
mov
fsubrs
dec
lahf
jne
sti
ljmp
test
mov
mov
loope
xchg
cwtl
sti
inc
mov
addr16
jle
lods
outsl
and
lahf
xor
or
inc
loop
cmp
jecxz
aas
stc
mov
jp
adc
inc
sbb
test
iret
cld
test
aad
test
push
pop
pop
aad
inc
dec
lcall
cmp
adc
pop
cmp
and
add
or
cld
lods
pop
mov
adc
lahf
cmpb
lret
stos
xor
icebp
sbb
mov
mov
divb
mov
rcrb
xchg
dec
pop
cmp
pop
jbe
aad
push
lods
les
icebp
and
jo
push
pop
inc
mov
cmp
dec
es
in
jno
inc
xchg
cmp
mov
mov
sbb
rorb
push
jge
stos
dec
xchg
in
push
xacquire
hlt
lds
testl
add
inc
outsl
fs
or
mov
inc
data16
shlb
and
sti
xchg
sub
sub
adc
fimull
inc
sbb
stos
loope
imul
push
push
insl
sub
add
aam
mov
push
cmc
clc
mov
fwait
sub
mov
rclb
cmpsl
push
adc
insl
je
mov
cmp
mov
jmp
mov
mov
test
or
or
cwtl
and
mov
dec
mov
mov
addb
push
call
movl
pop
lds
xorl
stc
arpl
out
cli
xchg
mov
pop
dec
in
pop
ds
and
pop
cmp
out
jbe
or
inc
sbb
stc
adc
lods
sarl
cmc
jno
mov
ljmp
inc
and
in
loopne
mov
mov
inc
outsb
or
jg
cmp
les
in
or
sub
jle
sub
cmp
push
in
push
test
std
addl
xlat
dec
add
lcall
andl
inc
jg
pop
pop
int3
cmp
mov
or
adc
dec
data16
mov
loopne
lock
popa
and
jmp
imul
xchg
or
jl
dec
xchg
inc
rolb
xchg
loopne
add
stos
inc
inc
stos
mov
push
sbb
and
and
setns
aam
aaa
xchg
jne
aad
cmp
les
rolb
sbb
cs
mov
rcrb
mov
add
mov
aaa
xor
adc
outsb
shlb
dec
aaa
shlb
jbe
ret
movsb
lret
sbb
popa
cwtl
adc
xchg
inc
fwait
iret
jne
pop
js
ljmp
rcl
in
shlb
std
jmp
adc
push
fwait
adc
adc
mov
sbb
dec
clc
testl
icebp
loope
test
test
jae
sub
je
shll
push
stc
push
repnz
add
fbld
js
pushf
jmp
push
sbb
out
push
call
sbbb
pop
divb
cmp
mov
mov
push
lahf
pop
fs
mov
in
xor
xchg
push
sbb
mov
lock
pop
sbb
pop
xor
xor
testb
push
mov
lcall
push
ret
divl
popa
add
push
pop
outsb
out
movsb
cmp
rolb
repnz
in
enter
subl
std
das
cmpsl
cmc
mov
rclb
mov
jbe
jnp
gs
mov
jge
inc
rcrl
lahf
sub
data16
into
jge
sub
pop
unpcklps
loopne
lods
jmp
inc
es
les
push
cmp
aam
mov
movsl
daa
out
add
adc
cmp
jl
and
nop
sub
daa
lea
icebp
dec
push
and
sti
ret
pop
insl
loop
inc
cmp
jnp
jae
dec
icebp
mov
push
pop
popf
sbb
hlt
and
or
movsl
subl
in
es
fs
adc
jae
leave
femms
loopne
and
lret
sub
loopne
push
cld
jle
xor
pop
jnp
adc
imul
sub
test
ss
callw
push
jns
xor
dec
movsl
lret
mov
rcrl
jno
sahf
fidivrs
and
push
mov
aas
push
cs
outsb
or
incb
lods
push
shll
test
insl
add
dec
pop
push
cld
adc
in
dec
rcl
cmpsb
ss
cwtl
inc
in
pop
push
icebp
mov
cwtl
rcrb
and
dec
xchg
pushf
cmp
push
jp
inc
inc
stos
das
or
out
push
cmp
mov
fldl
and
mov
dec
stc
jg
add
pop
push
and
mov
add
lods
in
out
shr
xchg
xchg
aad
mov
pop
or
sub
sti
std
mov
ret
inc
fnsave
pushw
mov
enter
add
jle
sahf
fcomps
lds
adc
mov
test
jg
in
cld
adc
inc
pop
mov
neg
adc
pop
pop
push
fsubrl
xchg
scas
cmp
aad
dec
cmp
pop
dec
out
xchg
push
sbb
pop
inc
jp
iret
sbb
or
and
cmp
cmpsl
orb
lcall
test
subb
sub
int
loope
rcrl
sbb
aas
pop
push
inc
js
and
sti
xchg
andl
jae
movq
jmp
aad
lods
sbb
adc
mov
sbb
arpl
sbb
xor
fdivrl
and
call
mov
aas
jns
adc
fbstp
push
sahf
scas
adc
loopne
pusha
pusha
insb
notb
pop
rorl
jo
ds
mov
repnz
or
push
scas
cmpsb
shll
adc
add
lea
scas
pop
fdivrp
insb
inc
insb
add
and
gs
rcrb
xchg
ljmp
and
add
nop
shr
push
icebp
std
push
xor
cld
popf
add
sarb
loop
xor
shlb
insl
mov
shrb
imull
stc
xchg
repz
outsb
add
sbb
mov
adc
inc
mov
adc
xchg
jno
or
ss
test
jmp
jno
lods
sbb
pop
push
xchg
mov
subb
fdiv
xchg
mov
jns
mov
mov
sbb
insb
in
sub
cltd
les
cld
jbe
popf
push
cmc
xor
jg
dec
lds
or
repz
push
dec
in
int3
jmp
stc
notl
leave
fmuls
outsl
push
popa
xchg
repz
xchg
adc
dec
cmp
mov
push
jo
sbb
int
sbb
jbe
sbb
push
jae
pop
push
popf
lret
dec
add
adc
lahf
xchg
inc
sbb
incb
pop
push
js
aaa
lcall
nop
mov
popa
adc
scas
pop
out
aaa
xor
or
inc
mov
push
test
sub
outsb
adc
and
mov
ss
mov
data16
inc
notb
xchg
pop
adc
push
out
or
mov
movsb
mov
out
adc
adc
ss
mov
movsl
jo
sbb
xchg
xlat
aam
sbb
mov
arpl
or
add
push
ret
popf
push
ret
sub
add
mov
or
fwait
add
dec
loop
mov
mov
rorl
push
mov
stos
or
in
scas
aaa
icebp
pop
add
int3
sbb
subb
add
jge
or
nop
inc
and
fmull
mov
out
pushl
ljmp
inc
lahf
daa
jne
xbegin
loopne
push
addb
cmp
mov
mov
dec
test
mov
push
mov
add
in
lds
jle
or
pop
push
adc
lret
andl
out
nop
jl
mov
shll
sub
loop
push
pop
xchg
push
pop
adc
adc
out
mov
popf
pop
pop
inc
pop
cmp
inc
push
daa
lods
pop
sarb
or
jmp
repnz
inc
mov
add
pop
dec
lock
mov
leave
movsl
loop
pop
call
into
pusha
stc
xchg
and
inc
cmp
lcall
xchg
inc
xchg
loope
push
jecxz
jne
mov
xor
jne
cli
add
mov
mov
pop
cmp
sbb
unpckhps
cmp
pusha
cld
or
pop
aaa
or
push
ffree
mov
out
stc
add
mov
cs
into
inc
pop
push
ja
mov
dec
ja
and
pushf
adc
test
and
inc
adc
shlb
stc
mov
divl
mov
jg
dec
ds
iret
mov
adc
lods
cmc
in
jle
pop
cld
movsb
dec
jge
fisubrs
enter
and
mov
ljmp
cmp
pop
mov
jb
mov
repz
sbb
xlat
ficoms
add
femms
inc
xchg
and
mov
stc
insl
mov
sub
es
jp
push
dec
dec
mov
cmpsl
insl
out
inc
and
adcl
push
pusha
loopne
insb
sbb
xchg
js
jle
jns
icebp
jno
into
mov
fldcw
dec
mov
sbb
pop
in
pop
xchg
pushl
jne
ret
ss
mov
push
shll
mov
adc
jb
lock
sub
pop
cmpsl
testb
xor
call
jne
icebp
loopne
shl
jne
aam
movsb
ficoms
push
pop
fisttps
pop
in
inc
out
movsl
sub
fldl2t
fiaddl
adc
add
cwtl
adc
cli
popa
pop
pushf
push
mov
in
add
lds
insl
or
pop
inc
icebp
xor
lds
pop
shrl
shrb
rol
int3
in
sbb
sbb
rcrl
out
mov
and
jecxz
inc
iret
dec
repz
jl
jnp
into
xor
sbb
lds
testb
sub
loopne
ss
push
and
push
hlt
xchg
mov
ss
adc
out
arpl
iret
int
or
lds
jbe
repnz
push
test
mov
mov
jno
lcall
test
push
inc
xchg
inc
dec
cwtl
xchg
cs
imul
and
loop
sbb
dec
sbb
xchg
rcll
inc
and
sbb
inc
pop
or
loopne
out
arpl
jp
cmpl
lret
lods
cltd
sub
nop
daa
and
lahf
mov
fdivr
lds
inc
mov
push
mov
into
aam
cmpsl
std
xor
or
pop
rclb
rcr
movsb
sbb
xor
out
push
xchg
pop
xor
xchg
fld
xchg
in
das
jmp
lcall
ret
inc
mov
mov
lret
sub
dec
sbb
mov
jae
pop
mov
divl
lods
dec
or
push
pusha
or
jb
aaa
add
das
pop
flds
inc
lret
sbb
addr16
rcrb
clc
pop
jb
leave
jl
sbb
inc
mov
mov
divl
jns
sub
inc
and
loope
cmp
or
loop
testl
ljmp
pop
shll
in
jl
bound
inc
sbb
in
loopne
and
je
dec
movsl
mov
divb
xchg
pop
jl
loop
imul
and
test
out
lcall
into
or
leave
pop
jecxz
cmpsl
mov
push
xlat
jp
pop
pop
jo
sbb
imul
mov
add
xlat
add
std
stos
mov
sub
push
gs
cltd
insb
inc
add
sub
daa
insl
sbb
and
jmp
xchg
test
out
dec
inc
and
adc
xlat
inc
xchg
cmp
mov
ja
pop
rolb
inc
aaa
jns
cli
aad
mov
not
push
mov
add
pop
dec
fwait
inc
lods
push
pop
addr16
adc
pop
stos
andb
push
clc
sub
adc
int3
rcrb
inc
daa
in
mov
mov
mov
fbld
imul
push
or
movsl
sbb
and
mov
rclb
jg
rolb
roll
daa
inc
push
aad
jmp
inc
out
mov
push
adc
cmc
sub
push
cld
jo
cltd
aad
xor
mov
in
lret
cmp
lret
sub
fmul
out
pushf
mov
pusha
mov
sbb
std
cmc
inc
push
clc
sbb
sub
stos
addr16
or
punpckldq
mov
shrb
or
fcmovnu
lods
adc
mov
add
jle
mov
leave
ljmp
add
sub
cmpsb
adc
in
pop
jl
sbbl
mov
xor
push
xor
lcall
xchg
imul
cwtl
push
pop
stos
stc
je
imul
sub
out
imul
mov
shll
in
aam
push
fisubs
sbb
incl
leave
outsb
cmpl
adc
imul
sbb
lcall
xchg
das
add
mov
mov
or
out
test
sti
pop
sbb
sarl
dec
movsb
adc
sbb
inc
cmp
fcomps
rclb
icebp
sbb
stos
xchg
push
dec
mov
pop
cmp
outsb
mov
orb
out
cmp
clc
push
push
fnstcw
loopne
push
xchg
mov
push
daa
icebp
or
aaa
push
pop
aam
out
jp
mov
mov
cli
clc
es
movsl
ds
jge
mov
and
sahf
xorb
add
or
lret
or
int
fs
test
in
ficoms
push
mov
inc
sub
jne
jp
jecxz
sub
jp
dec
jb
mov
into
mov
and
bound
in
call
sbbl
push
pop
shlb
repz
xchg
push
fisttpl
pop
xor
loopw
addr16
je
xchg
fs
fildll
js
sbb
inc
xor
movsb
shll
ss
ret
mov
mov
adcw
addb
jg
lods
test
jg
popf
inc
fistpll
andl
scas
or
aas
in
sbb
mov
adc
ljmp
faddl
push
push
mov
cli
es
adc
inc
pop
movsl
pop
cwtl
lahf
mov
int3
cmp
sbb
mov
sub
js
in
clc
push
jns
mov
sbb
cmpsl
push
mov
push
adc
sub
push
xlat
mov
mov
push
cltd
jmp
stos
aad
filds
sub
test
fsts
mov
inc
xlat
inc
ret
or
jmp
push
daa
pop
push
test
fsts
inc
sub
xor
andl
hlt
lea
imul
mov
jg
or
dec
stc
testb
adc
shl
orl
push
mov
mov
fcmovnbe
in
mov
xor
push
dec
fs
lock
and
ret
dec
cmp
mov
or
lret
cmpsl
inc
rorb
imul
push
rcr
scas
in
sbb
je
xchg
jl
rolb
in
scas
sub
mov
mov
pop
pop
fsts
mov
lods
stos
cmpsb
js
jmp
pop
cwtl
adc
arpl
out
adc
test
andl
das
fdivrl
or
adc
std
jecxz
pop
xchg
xlat
ljmp
push
leave
loop
inc
xchg
push
sbb
repnz
hlt
mov
ss
xor
mov
js
fwait
mov
mov
dec
xor
mov
fdivrl
lea
inc
xchg
xor
mov
sahf
cwtl
mov
hlt
sahf
push
jnp
push
jle
pusha
andb
xor
arpl
in
test
pop
cmc
xor
xor
pop
ds
xor
call
ds
and
push
pushf
add
sub
subl
jge
in
shl
negl
pop
lods
ficompl
xchg
mov
or
push
repnz
outsl
and
lret
jns
fistps
sbb
repz
jmp
andb
mov
pop
ds
ficoms
inc
fs
adc
mov
dec
call
sub
push
push
out
jns
push
adc
je
cmp
mov
fscale
pushf
push
pop
test
and
movsb
inc
jns
emms
fisttpll
pop
jbe
jae
jne
sbb
xchg
gs
lea
ds
jl
adc
sub
popf
ja
ret
cmp
and
cmp
lcall
inc
pusha
mov
push
aad
xchg
cmp
sub
cs
movsl
popf
hlt
jmp
xor
jno
imulb
push
stos
and
fisubl
pop
arpl
int
fs
xchg
xor
loope
mov
aas
pop
bound
ret
mov
jp
aas
sbb
mov
fwait
cwtl
aas
leave
sbb
cmp
addr16
mov
mov
push
adc
nop
push
fwait
or
lods
ljmp
stos
es
inc
les
popf
and
lret
test
pop
sarl
sub
pop
int
xlat
push
cli
je
and
scas
push
insl
pop
lock
and
mov
xchg
incl
push
push
jmp
push
xchg
int3
sub
mov
mov
aad
push
aas
cld
xchg
mov
push
lret
inc
movsb
cmp
call
jp
sbb
mov
loop
sub
sbb
mov
or
pop
dec
jmp
into
xlat
mov
sbb
pop
shll
xor
cwtl
pop
aaa
int
jg
cmpsb
push
inc
xchg
mov
fistpl
mov
sbb
xchg
inc
or
subb
sub
pusha
loopne
outsb
push
push
je
cmpsb
out
pop
dec
push
push
jne
lret
stos
sub
js
cmpsl
sbb
in
rcrl
aaa
pushf
mov
sub
inc
or
into
cli
add
mov
subb
and
mov
data16
ds
mov
pop
mov
call
repz
dec
sbb
pop
js
sub
mov
sub
sub
fxam
inc
xor
mov
subb
xorb
aam
pop
add
jbe
inc
insb
mov
test
sub
call
adc
inc
sarl
sub
sarb
dec
jl
out
in
outsb
mov
je
outsl
test
sub
dec
push
loop
push
sub
push
fwait
scas
mov
mov
outsl
pop
mov
repz
popf
jnp
adc
das
sbb
loop
enter
xlat
dec
ljmp
push
hlt
push
mov
fst
sbb
or
jo
sti
leavew
cwtl
adc
out
or
mov
xorl
lea
imul
dec
sub
lcall
filds
adc
mov
insb
shrb
sarl
dec
inc
mov
jne
pop
je
push
sbb
shrl
lret
add
fdiv
adc
push
adcl
mov
fs
rclb
or
aam
gs
pusha
jl
cmpsb
adc
inc
call
repz
mov
popf
int
aaa
mov
mov
dec
imul
inc
out
add
cmc
out
mov
cmpsb
mov
xchg
out
repnz
xchg
int3
mov
clc
stc
dec
mov
lcall
push
ljmp
rorb
cmc
lahf
pop
clc
pushf
adc
out
cld
jmp
mov
jne
push
jns
orl
mov
popf
repnz
loop
cltd
mov
xor
jo
in
jnp
repz
movsb
ret
fcmovnu
pop
fs
or
xor
add
sbb
pusha
adc
push
fistps
inc
jge
or
jne
jbe
dec
dec
arpl
xor
es
xchg
movsl
mov
adc
imul
jo
push
cmpsb
mov
fsin
mov
iret
ja
sbb
pusha
or
mov
jo
mov
pop
xchg
hlt
add
imul
mov
enter
aas
add
cmpsb
cli
dec
in
pop
outsl
pop
movsl
das
test
inc
gs
into
adc
aaa
sbb
mov
mov
scas
sti
fwait
sahf
imul
push
cmp
cmp
jle
int
mov
ljmp
loope
mov
lcall
dec
faddl
sub
jnp
std
loope
and
mov
insl
mov
lret
cmpsb
adc
aam
das
cmpsl
xchg
inc
mov
jb
cmpsb
jno
sub
and
pop
rclb
mov
fsubrs
dec
sbb
push
sahf
cmp
mov
mov
mov
dec
mov
add
ja
mov
jo
fucomi
add
adc
and
cmpsb
shl
mov
rcl
adc
cmp
aam
push
add
stc
dec
xor
lret
jmp
cltd
cmp
cmpl
call
mov
ss
jbe
fs
add
shrb
add
pop
xor
pop
repz
push
pop
je
hlt
xchg
aaa
movsb
hlt
push
inc
js
pop
cmpsb
mov
sub
mov
pop
insb
int3
aad
mov
cli
daa
mov
push
sysret
loopne
xor
das
ja
mov
pop
adc
aaa
adc
fstps
cwtl
push
dec
mov
sbb
xchg
jmp
outsl
sbb
insl
or
and
lret
iret
jb
add
or
lock
fwait
mov
enter
mov
dec
push
out
mov
scas
out
aas
fnop
aas
fmul
and
push
fldt
pushf
jge
xor
nop
in
push
popf
jo
lcall
roll
mov
fiaddl
hlt
or
cmp
or
repz
jne
sbbl
dec
hlt
sbb
jb
pop
call
adc
subl
mov
jp
int
aad
xor
xchg
into
sub
repz
shlb
cmpsl
or
inc
imul
dec
push
dec
fdivl
dec
das
and
sbb
cwtl
mov
fsubrl
dec
test
imul
fists
and
fcmove
ss
adc
aam
xchg
stc
out
out
fwait
jg
dec
add
sbb
rorb
mov
pop
movsb
jecxz
imul
jecxz
aas
or
add
push
jae
imul
arpl
inc
adc
mov
lods
rcrl
repz
shrb
xlat
cmp
popf
sarb
out
bound
hlt
push
mov
jno
push
fdiv
arpl
roll
movsb
jecxz
and
popf
or
sub
pushf
xchg
int
mov
push
jbe
aas
in
add
insb
mov
inc
push
fldenv
dec
jg
xor
sti
mov
mov
mov
ljmp
sarl
dec
sbbl
jp
out
out
into
or
mov
sub
fnstenv
outsb
pushl
or
loop
fisubs
jno
rcrl
and
jns
imul
loope
into
adc
aam
ss
xchg
popl
or
pushl
insl
scas
push
scas
lods
lret
fldl
dec
clc
mov
bound
les
or
je
inc
fbld
pop
jl
mov
andnps
mov
jns
mov
sbb
sbb
out
in
or
fs
push
stos
mov
cwtl
jae
pop
enter
js
and
and
mov
int3
adcb
scas
test
test
aas
mov
jecxz
adc
cli
lock
mov
stc
xchg
sub
mov
int
push
xchg
and
sub
mov
jnp
pop
clc
and
in
mov
inc
and
and
inc
mov
rclb
jae
loop
xor
in
stos
push
add
pop
jbe
outsb
dec
mov
lcall
adc
adc
xlat
in
sbb
cmp
imul
fisubs
mov
push
dec
sbb
movsl
repz
sbb
ja
out
add
mov
aad
push
imulb
popf
mov
lods
fcoms
sbb
jecxz
xor
test
push
push
dec
sbb
inc
sub
scas
jbe
testb
insl
in
out
lods
movsl
push
stc
add
sbb
cmp
ficoml
shlb
idivb
cmp
sbb
repnz
lret
call
imul
pop
xchg
daa
add
pop
outsb
jg
pmaxub
xchg
xor
sub
test
fisubrs
stc
dec
mov
sbb
leave
sbb
mov
sbb
std
jbe
push
sarb
lret
loopne
mov
ss
sbb
jl
jnp
cmp
sbb
mov
stos
popa
xchg
fcmovu
and
xchg
pusha
xlat
mov
xor
adcb
mov
add
scas
xor
ret
int3
jae
loop
mov
add
out
sbbl
pop
adc
sub
or
ficoms
pop
je
aaa
aam
movsl
inc
jg
and
mov
fimuls
push
mul
sbb
cli
add
or
clc
mov
or
test
cmp
jae
or
lods
jbe
add
inc
jl
mov
sarl
lods
mov
cmp
mov
nop
add
mov
out
jnp
ds
ja
test
movsb
dec
or
call
enter
and
jb
aam
ja
mov
pop
add
pop
jge
jl
mov
cmp
add
dec
enter
dec
pop
repz
jno
test
cli
pusha
enter
sub
pushf
mov
rclb
push
mov
ljmp
adcl
je
arpl
xor
cmp
arpl
sub
dec
shlb
call
xor
mov
cmpsb
jae
hlt
push
in
lods
fsubr
or
push
ja
mov
inc
xlat
push
leave
dec
xor
xchg
mov
lea
fst
inc
lods
add
mov
sahf
cwtl
cmc
in
dec
mov
mov
push
dec
scas
jl
push
pusha
andb
jl
jns
dec
movsl
fdivrs
std
cmp
pop
pushf
js
faddl
dec
andl
push
in
imul
in
cmpsl
sub
outsb
pop
lock
and
sbb
das
and
mov
cmc
cmp
add
xchg
or
pop
adc
cli
jge
jns
sbb
adc
jns
aad
mov
pop
stc
jne
push
xchg
xchg
roll
xor
mov
insl
push
test
push
xor
push
popf
add
mov
in
ss
outsb
fwait
sti
lret
hlt
jle
xor
popa
sbb
sbb
jg
stos
sub
and
cs
push
lahf
sti
js
fdivrl
push
fisubrs
fcoms
cmpsl
mov
cmp
cmp
push
imul
clc
sti
sub
mov
cwtl
std
mov
or
sbbb
xor
cmpsl
sbb
sbb
push
bnd
fidivl
inc
mov
xchg
or
xchg
mov
add
stc
xor
imul
out
pushf
leave
movsb
adc
push
pushf
xor
fimuls
mov
out
adcb
and
sarl
hlt
pop
ret
shlb
and
gs
push
mov
and
inc
mov
jo
insl
mov
sub
fpatan
mov
pop
loopne
push
push
xchg
ret
or
into
ret
cmp
mov
mov
neg
pop
sbb
negb
enter
pop
out
and
fnstcw
mov
and
outsl
push
and
sbb
addr16
pop
xchg
enter
into
nop
cltd
xchg
shrl
xchg
and
je
mov
fdivrs
js
xchg
shll
dec
sahf
leave
sbb
pop
sbb
hlt
pop
xor
adc
test
arpl
mov
jle
movsb
mov
adc
jb
xchg
movsl
and
shr
in
jns
mov
divl
clc
data16
cmp
out
ret
and
test
xor
roll
movl
scas
movsb
ss
fimull
add
std
adc
enter
test
ret
jns
bound
adc
pop
fstl
cmpsl
imul
adc
fsubrl
decl
bound
out
push
jp
lods
add
das
je
mov
mov
repnz
mov
mov
cmp
add
in
es
dec
sti
mov
scas
sub
xchg
stos
sbb
subl
rcr
fstpl
popa
je
jnp
movsl
xchg
imul
mov
xchg
push
out
dec
xchg
push
xor
inc
jg
adc
aad
cld
loope
xchg
je
bound
stc
mov
sub
adc
push
pop
iret
cli
les
arpl
stc
pop
leave
xor
or
xchg
rol
clc
push
push
dec
out
aaa
adc
mov
mov
jno
imul
sbb
adc
and
cmc
mov
stos
pusha
or
adc
xchg
sbb
scas
xor
mov
xor
daa
iret
cwtl
lahf
aad
pop
mov
sbb
lret
mov
out
sub
mov
xchg
jge
dec
bound
out
in
test
push
push
loopne
xlat
fwait
outsl
data16
arpl
icebp
jae
rcrl
loop
xor
enter
pusha
into
jecxz
popf
ljmp
in
notb
push
push
xor
int
mov
cli
bound
scas
leave
sbb
mov
inc
ja
mov
icebp
dec
or
into
leave
mov
test
into
sbb
fisubrl
push
int3
das
cmp
or
mov
sub
mov
fcmovne
add
cmpsl
push
jmp
in
or
jmp
and
mov
pop
and
push
mov
jae
daa
push
adc
inc
fdivr
jo
jo
push
mov
imul
push
pusha
repnz
shll
cmpsl
xor
sub
bound
adc
pop
add
stos
add
add
lds
pop
or
sub
and
xchg
orl
test
pop
insl
fwait
ja
pop
enter
jns
movsl
add
addr16
mov
loope
pop
sahf
adc
cmp
cld
push
cs
adc
data16
push
pop
in
imul
leave
fsubrs
add
mov
pushl
dec
and
mov
xchg
mov
dec
dec
lods
jns
jp
mov
sbb
xchg
repnz
bound
stos
popl
mov
imul
inc
cmp
lret
out
push
and
cmp
rol
pop
xor
xor
dec
jns
cmc
sub
js
or
mov
loope
lcall
adc
and
cmpsl
in
push
pushf
rclb
das
fdivs
pusha
jle
lahf
push
jo
or
dec
adc
or
bound
mov
lds
into
jl
mov
out
in
std
push
mov
jl
cmp
jp
mov
outsb
enter
jg
je
fs
push
push
enter
shrl
mov
add
mov
sbb
adc
inc
add
mov
aad
add
push
stc
inc
xor
jl
cmp
pop
push
push
xchg
xorb
xchg
leave
xor
outsb
adc
push
mov
insb
sahf
js
test
stos
sub
shrl
dec
mov
pop
std
int
mov
lea
bound
outsb
push
jecxz
ja
xlat
in
lret
fidivs
daa
leave
inc
nop
jae
jp
call
xorb
out
ret
xchg
inc
test
notb
pop
int
cmp
cli
fistps
dec
in
and
push
dec
sbb
in
adc
scas
imul
lret
jns
jb
jo
push
jns
je
movl
out
add
or
sub
icebp
scas
stos
push
adc
rorb
jmp
arpl
fdivr
enter
cmpsb
int3
int
fs
sbb
inc
stos
cmpsl
clc
xchg
jb
fcompl
das
fistps
es
dec
jmp
dec
stos
jle
scas
std
fimuls
mov
adc
fsub
inc
ret
inc
mov
mov
cwtl
xor
mov
push
inc
ja
push
mov
mov
test
jecxz
and
push
mov
inc
lea
cmp
pop
mov
push
shlb
aas
adc
out
testb
add
jnp
js
bound
and
scas
leave
daa
pop
lret
insl
rclw
test
mov
inc
push
xchg
lds
sub
in
ret
mov
lret
jo
cli
daa
pushf
jnp
sbb
inc
sbb
gs
negb
push
push
jns
je
in
call
imul
mov
mov
xor
fsubr
pop
add
ret
cltd
xorb
out
mov
push
pop
dec
mov
adc
shlb
icebp
loopne
adc
lods
adc
pop
bound
or
icebp
dec
mov
lahf
inc
imul
adc
loope
mov
xchg
mov
mov
arpl
adc
cmp
movsb
hlt
push
pusha
mov
les
xor
add
out
roll
aaa
fstl
stc
xchg
adc
jle
dec
dec
adc
and
fs
cmp
and
jp
xchg
sbb
xor
sbb
push
jle
popa
push
add
adc
cmp
jp
mov
iret
cmc
lock
or
dec
jge
add
outsb
mov
stos
mov
inc
lea
cmpsl
inc
jbe
mov
jmp
ret
mov
shlb
push
sbb
test
xor
movsl
pop
mov
jae
add
mov
push
hlt
hlt
xchg
mov
ret
aaa
cltd
stos
out
rorl
fisubrs
push
rclb
loopne
insl
cs
mov
iret
cmpsl
daa
mov
aas
data16
lods
mov
stc
mov
dec
sub
das
xor
lret
rcll
lret
aad
out
push
pop
inc
int
in
fstps
stos
xor
mulb
push
mov
jne
lock
inc
insb
cmp
mov
repnz
adc
push
sarb
inc
es
gs
je
push
fcompl
sbb
push
leave
outsb
xchg
pop
cmp
inc
mov
adc
dec
xchg
pop
jmp
je
jmp
sbb
cli
cli
stos
inc
int
xor
mov
inc
ss
das
and
pop
inc
fldl
mov
and
dec
sbb
sbbl
ds
xor
into
cmp
clc
int3
rol
jne
sbb
rcrl
fmul
cs
lret
jnp
inc
shrb
mov
and
fbstp
add
loope
int
inc
sahf
out
and
stc
add
mov
adc
push
push
mov
fiaddl
mov
aam
aaa
aas
icebp
roll
push
stos
mov
imul
js
mov
inc
xor
icebp
repz
adc
fs
mov
jecxz
pushf
cmpsl
adc
mov
jge
xchg
sbb
jns
ds
push
test
mov
xor
cmp
ret
inc
xchg
sbb
cmpsb
movsb
sbb
and
cmpsl
or
loope
cmc
pusha
fdivrl
shlb
lds
dec
push
lds
adc
push
mov
ss
je
pusha
and
and
add
push
or
int
cmpb
mov
subl
push
shll
cwtl
cmp
aas
add
shr
mov
iret
dec
jg
push
push
xchg
push
lcall
in
lock
sbbl
subb
jb
lahf
aas
lret
andl
andl
call
pop
mov
mov
xchg
dec
mov
lahf
fdivrs
xchg
inc
fwait
mov
inc
xchg
mov
jae
lods
shll
dec
and
popa
nop
pop
ja
xor
sub
or
xor
inc
push
rcll
pop
repz
aas
out
in
nop
daa
sub
lcall
fwait
sub
inc
andl
sbb
cltd
cmp
fbld
ret
or
repz
adc
das
mov
enter
dec
jle
add
out
sbb
shrb
into
adc
in
mov
pop
pop
and
push
repnz
fs
mov
lret
scas
sahf
xor
add
daa
or
out
outsl
jl
sbb
adc
cmp
and
outsb
mov
frstor
jb
mov
inc
fistl
dec
sub
out
aas
mov
movsl
fs
inc
pop
cmp
push
mov
je,pn
push
pop
mov
lods
inc
imul
push
sbb
mov
leave
cmpsl
jo
dec
ret
movsb
push
daa
mov
ucomiss
testl
es
mov
xchg
dec
dec
jne
das
cli
mov
dec
outsl
jge
daa
sti
negl
fadds
jbe
stc
sbb
sbb
cltd
mov
bnd
cmp
sar
rcrb
pop
sub
add
je
push
mov
jae
ss
pop
aad
push
push
or
ja,pt
out
push
sub
pop
mov
jle
pop
pusha
pop
enter
imul
or
js
push
lret
fcmove
add
jecxz
daa
ja
cmp
into
pop
ret
mov
call
stc
lods
sub
es
mov
int3
cwtl
fidivs
sbb
fs
in
xor
int
and
add
mov
or
arpl
cmpsb
lock
xchg
dec
ljmp
out
lods
xor
pop
lock
in
fcmove
stc
rcr
shrb
cmp
inc
ret
push
inc
pop
pushf
inc
ja
adc
insl
in
or
outsb
fdivrs
jne
in
out
or
add
or
jns
inc
hlt
data16
cmp
inc
pop
scas
lcall
mov
cmp
aad
sarl
std
push
movsl
hlt
sbb
pop
jno
pop
lds
imul
adc
ss
clc
push
clc
gs
mov
add
mov
sti
jbe
inc
adc
or
repnz
bound
retw
mov
aas
and
add
pushl
adc
adc
sarb
push
dec
sbb
pop
or
jp
add
add
push
push
sbb
lret
insl
mov
and
jg
cmp
sbb
ficompl
adc
test
data16
fstpt
shr
ss
das
cmpsl
pop
in
notb
mov
mov
push
cli
cltd
jno
sarb
and
and
add
pushf
push
xor
and
fsub
or
ljmp
mov
sbb
ficoms
jno
mov
xchg
mov
test
push
dec
cmp
lods
pop
les
scas
movsb
and
imul
sub
fwait
popf
mov
inc
adc
mov
int3
jnp
lds
mov
imul
enter
sbbl
fildl
movsl
cmp
mov
push
scas
mov
aas
push
mov
pushf
pop
leave
mov
inc
mov
mov
mov
outsb
or
or
pop
es
mov
ja
inc
xor
cmp
and
imul
mov
inc
lcall
stc
mov
jnp
js
add
repz
lods
mov
or
sub
ljmp
and
test
mov
adc
xlat
and
es
push
into
xchg
js
xchg
or
ss
xor
mov
mov
lods
push
sbb
jbe
mov
inc
inc
jge
ss
pandn
adc
jbe
jl
mov
push
into
fs
sbb
nop
outsl
loopne
lods
jge
rorb
mov
out
dec
aad
jo
dec
mov
icebp
adc
ja
mov
push
xchg
es
out
scas
loope
scas
sub
push
cmp
dec
or
cmpb
and
cmp
aaa
push
push
je
stc
sbbl
cs
je
ficoms
push
adc
js
popa
or
mulb
psllq
out
pop
ret
mov
scas
adc
adc
mov
mov
cmp
xor
addr16
mov
add
in
lock
std
popa
clc
lds
xchg
aas
pop
xchg
mov
test
xchg
aaa
mov
test
daa
mov
out
mov
gs
mov
push
shll
cmp
test
xor
jne
in
adc
or
clc
cmpsl
adc
inc
push
stos
jl
loopne
loopne
lret
jp
mov
cmp
movsb
scas
out
lret
lret
movsb
jns
sub
or
adc
xor
sub
jne
out
push
mov
or
adc
adc
sbb
jg
iret
and
cltd
pop
cmp
in
pop
dec
xchg
mov
adc
jnp
sub
mov
lock
push
out
sbb
add
or
insb
mov
dec
idivb
mov
pop
mov
push
inc
add
je
xchg
cltd
push
out
dec
test
dec
enter
orb
xor
add
test
pushf
sub
adc
insl
loopne
test
pusha
movsb
sub
xchg
jecxz
dec
add
xor
in
enter
mov
pop
clc
adcl
mov
and
mov
pop
and
pop
add
xchg
mov
imul
outsb
fdivs
lret
sbb
mov
pop
pop
inc
xor
xchg
jo
scas
iret
and
adcb
mov
xorl
rcrl
push
xor
jne
cmpsl
mov
inc
lret
shr
call
jbe
pop
je
in
imul
and
jb
mov
aam
inc
inc
mov
push
jge
lret
repnz
das
mov
pushl
mov
adc
fpatan
mov
mov
lahf
repnz
pop
dec
or
js
jl
fmulp
lahf
mov
sti
shll
test
jmp
dec
dec
in
push
mov
lds
cltd
sbb
xor
cmp
mov
cmc
push
mov
orl
bound
fadds
clc
rcrb
add
pusha
pop
leave
iret
inc
je
inc
sbb
adc
jmp
dec
and
hlt
and
cmp
pushl
add
jecxz
xchg
push
sbb
ss
cmp
lods
pop
sbb
repz
adc
aam
mov
in
pop
flds
incb
cs
filds
dec
push
lods
jbe
mov
jmp
xlat
shrl
fdivrp
sbb
jae
in
inc
mov
mov
mov
ja
sbb
xchg
incl
push
fisubrs
fwait
das
cmc
add
test
stos
sub
sub
push
pop
fnstenv
add
pop
shrb
stos
mov
and
pop
mov
lock
leave
imul
cs
fmull
dec
sub
jo
repz
jno
stos
pop
fnstenv
push
lds
or
push
cs
cld
std
and
sbb
lods
fidivrs
movsb
inc
insl
lds
add
adc
pop
xor
or
push
push
jne
dec
mov
mov
popa
movsb
iret
dec
sub
lahf
mov
mov
xchg
xlat
loope
sbb
clc
jecxz
int
andb
push
aaa
out
sbb
sarb
xchg
sub
push
into
ljmp
jae
loopne
pop
idivb
jg
rclb
jle
jne
lret
xor
stc
enter
jg
inc
cmpsl
repnz
clc
pop
cmpsl
mov
sbb
stc
insb
jge
push
sub
addr16
jnp
subl
aaa
ret
inc
es
add
sbb
imul
jb
and
inc
cld
cld
stos
mov
pop
dec
push
int
dec
call
mov
sbbb
inc
inc
fwait
out
xchg
xchg
mov
mov
xchg
and
imul
pushf
stos
jbe
enter
clc
das
fcmovnb
mov
fucomip
pop
sar
pop
rcl
mov
incl
fwait
cmp
enter
shll
cmp
push
dec
jnp
lahf
sahf
fstpl
fstpt
xor
outsb
sub
addr16
fwait
sub
gs
cmpl
jg
xchg
mov
out
pop
enter
in
cmovs
decl
js
inc
mov
mov
and
inc
mov
in
mov
mov
shll
xor
popf
fs
mov
cmp
jnp
sub
sbb
mov
push
xor
mov
pop
add
ds
popa
push
pop
cld
insb
mov
lcall
dec
ljmp
xor
fdivl
mov
ret
insl
xchg
jmp
jge
xor
call
stos
jns
adc
repnz
rclb
dec
or
call
sbb
xchg
jnp
aas
add
cwtl
lret
std
jmp
push
mov
ror
dec
sbb
mov
inc
sub
jne
push
imul
lahf
pop
shrl
add
sub
mov
sahf
data16
stos
mov
mul
mov
pop
mov
xchg
mov
pop
xchg
cmpsb
gs
imul
fistl
or
rolb
and
xor
mov
test
cmp
stos
mov
mov
push
stos
cmpsb
mov
sar
push
enter
pop
fisttps
rolb
out
popa
pop
pop
addb
fxch
hlt
or
iret
mov
adc
les
mov
xchg
repz
in
lea
aam
bswap
and
sti
ja
sbb
adc
and
or
scas
adcb
xchg
sahf
stos
test
bsr
ljmp
mov
mov
popl
out
or
mov
mov
pop
jmp
or
push
mov
inc
pushf
bound
inc
jo
pop
fsub
leave
push
dec
lock
das
push
xchg
lahf
xor
jecxz
cmp
pop
pop
mov
push
dec
outsl
movsb
fcmovu
lahf
int
gs
pop
jecxz
jnp
pop
mov
outsl
and
sub
rorb
rolb
mov
adc
xchg
imul
aam
jnp
testl
xor
fnstenv
shlb
dec
pusha
xchg
test
push
movsl
mov
sub
lds
mov
bound
data16
cmp
inc
pop
cmp
pop
pop
loop
mov
mov
or
or
and
mov
shlb
fsubr
leave
mov
jmp
adc
outsb
and
mov
in
loope
pop
fdivrl
outsb
and
sahf
mov
dec
test
mov
aaa
rclb
mov
add
aad
pop
aaa
push
pop
pop
inc
xchg
pop
popa
nop
inc
and
int3
fistps
add
push
aad
in
fsubrl
mov
mov
xor
mov
xor
mov
inc
inc
mov
in
sbb
das
sti
je
pop
lahf
loope
inc
xchg
lret
xchg
and
pusha
cmpsl
jg
inc
repnz
ret
add
popf
push
in
iret
sub
in
jp
or
adc
adc
pusha
xor
xor
sbb
bound
pop
pop
roll
es
ds
sub
lds
sti
aas
clc
xor
in
xchg
jo
adc
add
mov
hlt
data16
mov
popa
mov
jno
es
mov
shrb
addr16
mov
daa
mov
outsb
add
test
leave
repnz
and
insl
pop
sbb
popa
xlat
mov
sbb
pop
xchg
jl
push
mov
cmpsl
push
push
int
jmp
xor
xchg
push
cmp
lret
mov
js
xchg
test
mov
mov
stc
add
lret
lcall
xor
pop
pusha
xadd
outsb
mov
jmp
lret
arpl
mov
scas
lret
negl
cmp
lcall
adc
sub
jmp
sbb
dec
jle
loop
mov
loope
pop
push
xchg
fisubs
mov
pop
jnp
gs
cmp
loopne
das
sub
sub
lret
leave
ss
or
nop
mulb
loope
clc
xchg
ret
xlat
mov
fisubs
clc
sub
repz
and
and
je
aas
fldt
add
sub
sbb
cmc
sbbl
fists
test
test
or
pop
stos
adc
jne
inc
rorl
dec
iret
pmovmskb
fnstsw
xchg
in
push
sub
pop
xor
lea
lret
aas
popf
push
add
push
mov
cli
inc
xchg
jmp
rclb
scas
add
mov
and
push
xor
mov
inc
add
xlat
pop
in
jne
sahf
adc
hlt
mov
mov
xchg
push
jle
out
push
adc
shrb
rcl
mov
jno
or
push
xlat
lods
and
rol
or
pop
xchg
push
mov
mov
dec
int3
hlt
jnp
xchg
jb
fidivrl
notl
inc
mov
js
adc
mov
imulb
adc
jge
dec
xor
movsb
ljmp
jne
data16
roll
icebp
or
jle
fs
pusha
sub
repz
fmul
mov
clc
sub
xchg
pop
nop
push
imul
imul
movb
aaa
add
lret
jle
hlt
in
cld
arpl
sbb
dec
divb
push
xchg
and
inc
adc
add
inc
lret
jne
pop
adc
jmp
aad
ja
aaa
jbe
xchg
movsb
xor
adc
shlb
push
ret
loopne
dec
cmc
pop
mov
outsb
inc
inc
sahf
popf
mov
cmpsb
cmp
mov
out
xchg
bswap
test
mov
orl
sub
cmpsb
jo
movsl
jb
dec
and
cmp
cmp
jmp
stos
fucomi
rcr
fucom
rcrl
pop
sub
sbb
fldl
sub
lods
sbbb
dec
inc
fstps
daa
loope
inc
xchg
xchg
xor
lock
mov
pop
and
shl
lods
out
jl
pop
inc
adc
fildl
lock
and
into
filds
push
daa
daa
sbb
pop
scas
fldenv
xor
inc
mov
call
xorb
push
stos
cbtw
mov
xchg
pop
fmull
jne
in
pop
cs
adc
aas
xor
mov
cltd
mov
gs
cltd
pop
jg
lods
ror
sarl
test
and
repz
popf
nop
mov
xchg
ljmp
divl
mov
or
mov
aas
pusha
mov
iret
cli
pop
ja
scas
sar
mov
mov
cld
clc
out
adc
ret
and
jno
fistl
out
dec
jns
cmc
mov
movl
fisubrs
xor
mov
inc
cmp
jecxz
xchg
sub
shll
cmp
mov
and
dec
sahf
sbb
sub
ds
fxch
add
dec
iret
iret
push
and
imulb
or
int
pop
sbb
xor
aas
sub
mov
cmp
or
mov
lcall
or
jne
jmp
rol
jb
xchg
mov
xlat
lret
icebp
hlt
aad
xchg
cmp
push
adc
orb
adc
stc
loope
adc
stos
lds
in
push
dec
jecxz
lahf
inc
rorb
xor
es
sbb
cmp
andl
pop
outsb
xchg
xchg
jmp
stc
lods
xor
pop
pop
rorb
out
ja
lods
dec
je
cmp
adc
es
mov
xor
push
jge
dec
dec
mov
repz
jmp
int3
dec
daa
sbb
cmp
cmp
sub
inc
fcmovb
movsl
out
push
xlat
outsb
inc
lea
aaa
test
leave
pusha
mov
test
data16
jo
xor
inc
repz
lret
xchg
mov
int
cmp
inc
stos
in
jnp
inc
mov
mov
push
or
pusha
lret
mov
add
jne
inc
orl
fadd
arpl
fiadds
inc
addr16
cmpsl
jo
jge
dec
mov
inc
lcall
mov
jl
or
pop
imul
dec
fwait
pop
enter
rorl
or
mov
ss
test
xchg
mov
ss
xor
sbb
test
aam
dec
xor
xor
andb
or
imul
adc
stos
mov
mov
sahf
imul
mov
into
mov
xchg
ffree
ja
rcr
mov
ret
push
or
loope
mov
push
loopne
inc
testb
dec
test
mov
stos
aam
cmpb
enter
shl
shll
jae
cltd
or
inc
ss
xchg
pop
or
sarb
aad
int
out
lds
push
mov
imulb
imul
fdivrs
fwait
mov
jmp
sbb
outsl
xor
popa
inc
dec
jmp
inc
fisubl
pop
icebp
pop
pop
cmp
clc
cmp
or
pop
popf
fbld
movsl
fistl
cld
push
cli
fninit
jecxz
jne
mov
mov
scas
mov
sub
clc
cmc
dec
mov
movsb
xchg
in
cmpsl
scas
and
dec
push
mov
ss
jg
xor
cmp
sahf
pop
xlat
test
push
adc
mov
fisubl
sub
mov
sub
int
pop
sbb
xor
and
or
fs
ret
jge
mov
stc
push
cmp
fildl
mov
ljmp
push
out
sbb
mov
ret
cwtl
adc
faddl
inc
or
negb
into
push
lahf
out
pop
fnstenv
das
cmp
and
xlat
and
pop
in
pop
xchg
shrl
repz
cmp
es
pop
les
push
shrb
mov
adc
cli
add
jb
jb
sub
lds
das
add
in
lods
xor
gs
out
inc
mov
sub
push
clc
loop
aas
xor
xchg
or
ficomps
pop
sbb
inc
movsl
xchg
incl
fnstcw
pop
mov
pop
jle
mov
cltd
xor
pop
xchg
fisubs
aas
int
scas
dec
mov
jb
mov
dec
andl
jp
inc
dec
jl
push
lret
cld
daa
jecxz
mov
loope
pop
xor
xorl
dec
sbb
lods
dec
out
fwait
icebp
aaa
sub
in
mov
sbb
mov
mulb
push
sbb
cmp
or
fisttpl
inc
jge
cli
xchg
pop
or
dec
dec
or
cmp
movsb
das
mov
movsl
jo
dec
addl
mov
lock
in
lods
pusha
sbb
push
jbe
pop
iret
dec
adc
lcall
or
pop
dec
mov
mov
outsl
sti
jle
inc
mov
xchg
shrb
outsb
inc
mov
jmp
dec
xor
pop
or
pop
or
dec
lea
inc
scas
dec
les
dec
inc
cli
pop
ret
dec
mov
pop
jecxz
pop
push
int3
mov
sahf
jbe
add
ss
mov
dec
cld
push
add
shlb
in
mov
adc
mov
fldpi
into
inc
rcrl
or
adc
push
pop
jns
add
cltd
ljmp
fcoms
stos
rcr
pop
dec
xor
shll
push
push
pop
pop
jne
sub
pop
inc
psrld
mov
incl
pshufw
mov
paddusw
mov
mov
lods
cmpsb
pop
pop
imul
cli
add
out
mov
popa
in
xor
inc
test
fs
fldenv
sbb
test
xor
jno
js
jno
dec
sub
test
bound
xchg
cmc
push
xor
xor
in
mov
aam
add
push
fwait
adc
ffreep
lret
aaa
mov
mov
mov
inc
lret
fisubrl
cmp
and
lds
out
cmpsl
adc
ret
sub
xchg
sahf
fnstsw
repz
shrl
or
fstpt
xor
lcall
aad
xor
jbe
and
fcomps
sub
xchg
dec
insb
cmp
mov
or
push
xlat
mov
pop
pop
push
add
pushf
imul
cwtl
push
mov
add
cmp
lods
dec
fnsave
inc
xor
or
clc
mov
test
mov
xchg
stc
inc
shlb
sub
dec
sbb
push
mov
clc
ljmp
push
push
ficoms
or
cmp
sarb
pop
ljmp
jae
movsb
sub
movsl
jl
std
aad
push
dec
mov
jnp
or
push
and
mov
sub
or
xor
bound
xchg
cmp
sbb
jb
insl
orb
in
sbb
call
jl
cmp
and
dec
and
movsl
repz
xor
dec
sbb
ficoms
xor
decl
mov
cmpsl
dec
xchg
push
push
xor
dec
push
fucomip
jae
xchg
xchg
pop
arpl
movsl
pushw
pop
mov
inc
mov
cwtl
mov
dec
lahf
cmp
inc
xor
sti
imul
sub
xor
imul
xor
mov
fdivrl
and
mov
jne
test
xor
jecxz
mov
push
jbe
sbb
ljmp
lock
dec
mov
sti
mov
fisttps
adc
rcrl
push
int
add
dec
aas
xchg
dec
rcr
je
dec
iret
dec
pop
out
es
lret
jae
dec
ja
push
lock
cmp
adc
push
or
xchg
std
xchg
mov
or
jb
into
xor
dec
clc
fwait
test
lods
and
pushf
notb
jb
pop
push
push
push
and
xchg
lahf
push
adc
pusha
loope
sub
rsm
in
stc
fisttps
je
std
test
arpl
out
and
xor
mov
popf
xor
ror
repnz
or
dec
sbb
push
cltd
cmpsb
mov
or
jns
subl
inc
adc
adcl
repz
inc
cmp
xor
fiaddl
fwait
xlat
call
and
mov
fcompl
in
popa
fs
and
pop
push
ja
jno
cmp
xor
in
outsb
jno
loop
data16
xchg
xchg
int3
xchg
in
xor
lea
push
pop
mov
mov
in
push
cwtl
mov
push
fs
pop
cmc
ret
mov
dec
sahf
sarl
pop
jl
fidivl
sub
push
sahf
dec
push
push
jp
push
int3
mov
stos
push
int3
sbb
xchg
mov
mov
add
sub
or
adc
mov
decb
mov
mov
lcall
cmp
sub
adc
enter
xor
push
pop
lea
mov
mov
pop
pop
sbb
and
push
pop
push
outsl
idivl
test
push
mov
jl
push
scas
adc
lahf
ret
fistpl
sbb
jmp
sbbl
mov
imul
test
jb
fcoms
inc
mov
sub
sahf
sub
arpl
fcoml
sub
pop
stos
fistpl
jle
jnp,pt
cli
adc
cs
adc
es
loope
sub
gs
dec
fstpt
and
pop
lea
jnp
add
jecxz
test
ret
sbb
outsb
xchg
test
xchg
or
rclb
adc
orb
sub
lahf
scas
repz
jl
cmp
movsb
sbbl
enter
cmp
cmpsl
shlb
decl
mov
int3
mov
xor
fisubrs
xor
mov
mov
jae
fisubs
sub
pop
enter
out
mov
cltd
pop
xchg
int
adc
mov
mov
or
push
push
ffreep
sub
imul
mov
jmp
cmpsb
sbb
add
mov
pop
mov
pop
ljmp
lret
mov
aas
insl
in
arpl
jg
leave
xchg
mov
imul
inc
pop
js
mov
sahf
xchg
sub
aad
cmp
fiadds
fisubrl
add
xchg
inc
mov
push
sub
inc
add
push
aaa
popf
jge
test
push
pop
cmp
lods
fdivl
pop
lret
test
mov
adc
shl
push
sbb
lds
cmpsl
ret
inc
sbb
ret
sub
xor
push
and
mov
nop
decl
adc
cwtl
mov
mov
dec
test
fildl
test
xor
mov
imul
sbb
xor
or
xchg
xor
cmpsb
test
xor
ficompl
mov
jmp
pop
and
xor
out
loope
js
mov
imul
and
mov
ret
xor
mov
scas
aad
sub
in
inc
fisubs
es
jbe
push
and
fucomp
outsb
jle
lahf
pop
inc
add
mov
xchg
pop
clc
jg
leave
mov
or
data16
push
data16
das
mov
pop
lods
orb
jg
lea
sbb
lahf
popf
cmc
jne
fsubl
rorb
sbb
out
xor
inc
ds
push
ljmp
hlt
add
ljmp
arpl
scas
sbb
add
sbb
mov
add
fs
out
cli
in
mov
addr16
icebp
and
imul
lea
fsubrs
mov
mov
out
or
call
mov
orl
mov
cwtl
notb
insl
pop
jge
into
sarl
fmul
lret
push
fcomp
incb
sbb
mov
shl
mov
jb
dec
out
mov
dec
or
cmp
mov
jmp
push
mov
sub
int3
add
outsl
popf
mov
bound
sbb
jp
test
mov
lock
mov
push
sub
mov
sub
cmp
mov
inc
ja
into
insb
mov
fwait
xlat
push
in
jl
je
pop
lahf
pop
cli
or
lahf
sbb
gs
and
pop
in
decl
pop
in
adc
jecxz
mov
cmp
fnstsw
xor
scas
xor
dec
push
insl
outsb
mov
xchg
dec
cmp
mov
inc
xor
mov
push
jl
sub
pop
lahf
add
push
std
popa
mov
inc
lds
in
inc
out
fcmovu
mov
mov
and
out
dec
pop
nop
mov
sub
xor
test
mov
mov
pushf
cltd
lds
mov
push
and
pop
aas
call
testb
std
inc
or
jp
mov
lds
lods
lcall
lcall
das
and
js
inc
pop
addr16
and
and
mov
push
or
mov
jp
and
pop
dec
inc
out
aam
iret
cmp
jp
cwtl
les
fs
stos
add
cs
xchg
mov
and
shlb
cmp
loop
inc
cmp
xchg
loopne
dec
inc
fiaddl
inc
or
mov
out
jmp
std
mov
je
sti
sbb
push
mov
push
mov
fsubr
popf
sub
arpl
jl
and
bound
jp
mov
lahf
sbb
inc
jne
push
pop
xor
dec
inc
jae
sbb
jmp
xor
xor
pushf
daa
bound
lea
push
ucomiss
sahf
lret
test
jp
in
loop
pop
enter
cmp
fisubrs
adc
xchg
in
scas
pushf
jp
arpl
dec
mov
cmp
adc
mov
test
and
shll
loope
pop
xlat
lcall
enter
push
testb
test
push
fwait
cmc
out
lret
inc
pop
xchg
cltd
xchg
inc
cltd
jo
ficoms
pop
add
dec
fs
or
leave
pop
jnp
xchg
in
sub
std
test
xchg
in
or
out
imul
jae
and
ds
push
or
sbb
or
cmp
test
cmpsb
push
out
mov
imul
adc
imul
jne
hlt
nop
jmp
sbb
in
pop
jle
jno
scas
test
movsl
add
push
dec
test
cltd
mov
mov
mov
dec
inc
cmpsb
in
shr
ret
sbbl
jnp
mov
pop
fadds
loop
xor
sub
sub
cld
cld
xor
stos
cmpsb
insl
pop
xlat
xlat
mov
test
cmc
push
std
lret
jnp
adc
or
ret
adc
mov
or
divb
fdivl
adc
arpl
and
addr16
jp
cwtl
pop
outsl
sahf
adc
adc
xchg
dec
xchg
push
jnp
rcl
xor
dec
xor
mov
cli
pop
rcrl
push
jmp
jge
lods
push
jnp
mov
ret
leave
fsubrs
sbb
int3
push
push
aas
test
cs
xor
incl
call
mov
push
sar
pop
add
fdivs
pop
cld
movsl
pop
inc
dec
arpl
fbstp
lea
out
fists
ss
cmp
pop
xchg
pop
fcoms
adc
sbbl
nop
cld
fsubs
add
out
dec
cwtl
or
aam
sub
ret
iret
sti
popf
daa
fdivrp
jb
adc
dec
xor
mov
inc
ret
pop
hlt
lods
mov
mov
movsb
mov
add
pop
sbb
xor
xchg
lock
xchg
dec
mov
adc
sub
scas
scas
or
or
mov
icebp
repnz
lcall
rclb
dec
mov
mov
fldcw
daa
inc
cmp
data16
jl
fwait
xor
inc
jnp
pop
pop
jbe
icebp
scas
or
test
mov
push
dec
mov
bswap
or
stc
fs
and
mov
out
pusha
mov
cs
mov
sbb
cmp
hlt
shll
lock
jbe
lret
adc
mov
inc
add
jb
dec
int3
stc
fsubrs
xlat
jg
addr16
or
sub
xor
xor
shrl
jp
xchg
adc
jb
out
insb
ss
rolb
xchg
in
arpl
adc
mov
mov
adc
pop
pop
dec
test
sbb
nop
ss
mov
adc
push
inc
or
jp,pt
jl
jb
mov
out
add
insl
lcall
push
gs
inc
mov
or
or
test
cmp
mov
daa
or
inc
or
pop
icebp
jge
and
insl
jle
mov
aas
add
data16
and
jmp
test
adc
je
lock
inc
not
lcall
fwait
imul
rcrb
adc
daa
xor
adc
js
sub
sbbb
and
inc
mov
mov
bound
scas
xchg
out
xor
push
das
imul
dec
insl
imul
aam
and
dec
pop
inc
mov
ret
clc
rcrb
dec
push
scas
cld
imul
xor
jno
add
xchg
ss
repnz
cmc
fisubl
adc
div
cltd
add
mov
sets
mov
xchg
cmc
push
test
imul
pop
sub
mov
es
in
data16
jbe
sbb
in
inc
mov
cmp
arpl
cs
lret
aad
lea
fmul
inc
mov
add
sub
cmc
aad
xchg
pop
xchg
movsb
pop
imul
mov
jmp
rorb
or
jge
ljmp
mov
jbe
lods
push
and
sub
out
out
xor
sub
dec
cmpsl
incl
jp
mov
in
ljmp
mov
inc
cltd
movsb
cmc
incb
push
xchg
imul
sub
and
lock
int3
inc
repnz
or
test
into
lahf
jmp
add
arpl
push
xchg
lcall
lcall
add
sbb
adc
inc
push
pop
pop
cli
orl
or
mov
or
insb
and
sub
ljmp
xor
lea
push
mov
xchg
dec
mov
cmpsb
jmp
lods
and
notb
xor
inc
mov
dec
lods
idivl
jecxz
cmp
lret
jecxz
jns
fwait
arpl
mov
push
imul
cli
jle
mov
lods
jbe
test
fwait
mov
sarb
and
dec
dec
and
inc
ficomps
inc
and
xchg
into
mov
addb
adc
cmp
imul
cmc
jae
scas
enter
inc
mov
ret
sub
sub
cmp
imulb
mov
int3
xor
mov
inc
push
mov
or
mov
and
stc
jns
push
jg
mov
movsl
sub
cmp
jle
pop
aad
dec
lret
and
imul
dec
xorl
push
xor
dec
mov
xor
pop
js
inc
xor
stos
mov
cmp
insl
xor
dec
data16
scas
jnp
fisttpll
inc
lret
xor
movsl
shrb
adc
dec
lcall
xchg
cmp
jp
imul
mov
mov
dec
lods
fstpl
lea
xchg
rcrb
push
out
jae
in
and
ficoml
inc
push
lret
rcrb
psadbw
push
sti
push
add
lcall
sarl
lock
mov
arpl
adc
bound
repnz
push
pusha
xor
mov
cltd
movsb
jnp
jle
scas
dec
fistl
test
jl
sbb
inc
mov
mov
jecxz
pop
push
mov
fldl
dec
or
sub
mov
movsb
mov
sbb
sbb
sub
xchg
pop
arpl
testl
in
fistpl
leave
or
adc
ret
pop
mov
inc
fsubrl
inc
movsl
enter
icebp
cmp
sub
loop
repz
ftst
cmp
outsb
jbe
out
cmp
mov
lret
pop
fcoml
xor
lea
jb
in
xor
jno
movsl
jb
dec
xchg
ret
jbe
fadd
push
mov
and
xchg
sub
pop
mov
mov
loope
sub
and
xor
and
xchg
sbb
sbb
cli
sbb
sahf
cli
fistps
cs
and
lahf
and
mov
sub
xchg
xor
enter
and
pop
aam
push
xor
pop
sbb
std
xchg
inc
lea
leave
jns
cmc
pop
fistl
inc
aaa
dec
pop
fwait
xchg
push
and
sbb
mov
xchg
add
mov
push
dec
adc
sub
enter
movsb
outsl
nop
jle
lods
pop
shlb
mov
lea
fsubp
lcall
fnstsw
cmp
or
push
xchg
out
mov
push
mov
ror
and
popa
mov
test
aad
inc
push
ja
daa
xor
loopne
pusha
dec
sub
adc
adc
test
and
pusha
sahf
sti
ss
sub
shll
ljmp
jge
jae
shrb
mov
cmpl
arpl
cmp
dec
xor
xor
mov
out
call
in
adc
jle
push
pop
pop
ljmp
jne
negb
in
mov
leave
xchg
jns
sbb
repz
cmp
aaa
fucom
jae
cltd
sbb
xchg
lds
or
insl
hlt
lcall
xchg
mov
pushf
pop
sbb
xchg
jnp
lahf
fiaddl
pop
pop
movsb
sahf
jno
imul
pop
or
fnstsw
stos
mov
and
scas
aad
xchg
loopne
ret
daa
sbb
inc
dec
mov
insb
jl
xlat
jg
es
data16
shl
adc
pushl
add
or
mov
pop
ficompl
fs
pop
pop
ds
xor
imul
jmp
ret
or
stos
pusha
bound
mov
jge
mov
inc
push
fildl
scas
add
lret
mov
add
mov
cmpsb
pop
fdivl
cmp
pop
and
push
sub
jp
rclb
sti
add
or
test
mov
ret
sti
je
mov
call
psllq
push
in
iret
jb
mov
arpl
dec
das
cmp
leave
mov
push
add
aad
xor
outsl
movups
adc
lret
popf
jl
into
sbb
jae
imul
inc
mov
scas
cmp
into
xchg
fistps
xchg
or
push
pop
test
lret
lea
mov
out
repz
adc
repz
or
nop
jp
fldl
popa
lea
aas
adc
mov
sub
sbb
std
sbb
add
out
mov
seta
or
fdivrl
cmp
outsb
mov
cs
sub
xor
inc
imul
fs
ds
iret
dec
fcmovnb
xchg
ja
pop
aam
movsl
mov
dec
int3
dec
call
xlat
ret
mov
lds
and
or
insb
push
pop
push
cmc
cmp
jae
call
and
push
jge
push
pop
movsb
mov
pop
shr
loop
xor
xchg
ss
sub
inc
inc
inc
arpl
add
fistpll
xchg
lods
xchg
mov
push
pop
push
jecxz
divb
push
adc
xorl
mov
mov
mov
dec
gs
xchg
sbb
mov
shlb
divl
cwtl
xchg
sub
jne
fwait
push
subl
lahf
fwait
imul
xlat
push
and
addr16
das
pop
xchg
fdivrl
lds
xor
add
in
lods
inc
cmc
cmp
pop
sbbb
test
ss
sub
fstpl
int
test
pushf
lret
lret
mov
jne
pop
arpl
popf
jmp
push
ret
cmpsl
aad
xor
out
add
inc
inc
and
repz
xchg
outsl
sahf
sub
sub
fbstp
cmp
imul
sbb
push
loope
cwtl
outsb
push
in
pop
nop
lods
or
pushf
pop
out
mov
inc
adc
mov
xchg
inc
stos
sbb
mov
inc
sbb
and
xor
xchg
cltd
mov
mov
mov
repnz
cli
mov
add
jnp
push
test
loop
insl
lea
cmpsb
loope
lahf
mov
xchg
imul
sahf
or
js
and
idivb
xchg
mov
add
dec
scas
movsl
lds
fwait
pusha
pop
xor
negb
and
test
and
notb
outsb
mov
frstor
sbb
jns
mov
jle
xchg
pop
and
jns
xlat
in
testb
call
mov
xchg
mov
xorb
jae
fdiv
pusha
lret
sbbl
mov
add
inc
xlat
pop
pop
dec
push
sub
mov
aad
push
mov
out
stos
jno
lahf
arpl
pusha
mov
jmp
jge
gs
xor
and
cltd
inc
bound
or
mov
xor
add
xchg
and
lcall
sbb
mov
lcall
xchg
and
daa
stos
adc
lds
rcrl
sar
inc
dec
fcomps
insl
lods
lret
cmp
repnz
mov
test
ja
test
push
push
mov
sub
jnp
hlt
push
xchg
aam
icebp
dec
mov
cld
jp
add
or
mov
test
cmpsb
pop
mov
and
aas
ret
mov
das
enter
dec
call
aad
xor
lcall
mov
outsb
mov
bound
rcrl
scas
sbb
fcomi
add
dec
out
dec
testb
dec
xchg
lds
loopne
iret
xlat
repz
mov
cs
and
jecxz
lock
bound
xor
loope
movsl
mov
sub
stc
ret
fdivrl
test
fbld
push
and
jnp
addr16
movsb
les
int
shl
stc
hlt
cwtl
inc
sti
adc
xchg
test
jne
or
jae
in
loope
xchg
je
mov
sbb
jp
push
data16
movsl
jle
adc
es
mov
sub
addr16
inc
icebp
std
pop
popf
jb
adc
es
xor
sbb
add
mov
mov
mov
mov
inc
pop
ror
sbbb
lods
ficompl
dec
and
repz
clc
mov
addr16
or
mov
outsl
push
shll
loope
add
mov
jbe
pop
ficoms
add
mov
out
adc
pop
mov
mov
dec
mov
ss
jle
ret
jg
stc
fcoms
jle
cmc
jg
add
out
push
sti
decb
es
adc
cmpsb
nop
and
mov
stos
mov
sub
sbb
rolb
lcall
mov
push
mov
and
icebp
popf
incl
xchg
inc
cmp
cmp
jmp
xchg
iret
loope
sbb
in
js
sbb
dec
jns
jmp
pop
push
xchg
xchg
sahf
cmp
mov
pop
ret
lods
pop
dec
add
xor
les
repz
pusha
daa
lock
inc
leave
dec
add
loope
pusha
fcomip
rcll
sarl
jl
and
sub
jb
dec
sbb
dec
int3
int
ret
aam
imul
in
movsb
pushf
imul
insl
mov
add
int
into
cwtl
int3
xchg
imul
sbb
push
jno
ds
mov
inc
sub
leave
inc
jae
push
icebp
rcl
mov
jo
mov
adc
ret
push
sub
test
jl
or
push
aaa
mov
ja
push
pop
dec
arpl
push
sub
jb
adc
sti
adc
jecxz
adc
jmp
jge
cmpsl
cmp
or
push
mov
push
push
std
mulb
lcall
sbb
subb
imul
dec
test
sub
and
icebp
std
outsl
cmp
jo
xchg
mov
enter
pop
xor
cmp
jo
out
cmp
or
sbb
pop
popf
xor
mov
test
cmp
testl
and
jbe
cmp
out
and
ja
cltd
mov
mov
pop
iret
neg
lret
or
push
dec
pushf
icebp
push
mov
gs
mov
cld
lcall
add
dec
jg
push
gs
andl
push
cmp
inc
jmp
aam
cmp
xchg
jnp
inc
push
inc
inc
and
mov
gs
das
mov
ja
out
jle
adc
inc
xlat
lret
lret
or
mov
adc
push
fcomip
jg
cwtl
fisttpl
aaa
push
test
add
inc
pusha
jae
xchg
ds
xor
iret
out
inc
pop
sbb
shrb
xor
push
push
push
sub
in
aad
add
pop
or
mov
mov
sbb
gs
fldenv
mov
imul
mov
aam
repz
sti
and
fisubrs
adc
popl
mov
lahf
adc
lret
sbb
inc
arpl
fnstcw
and
loope
mov
xchg
gs
iret
push
jbe
imul
add
popf
in
icebp
ljmp
cmp
jb
pop
adcb
push
mov
xchg
mov
add
imul
mov
adcb
mov
dec
pop
mov
cli
loopne
js
sahf
out
div
cmpsb
cmpsl
sub
push
cld
nop
xchg
scas
mov
out
nop
jbe
mov
daa
adc
mul
daa
outsl
sbb
fs
repz
ja
jecxz
stos
shll
push
sub
xor
pop
and
cld
and
out
dec
f2xm1
xchg
inc
stos
add
sti
mov
imulb
pop
lods
inc
js
in
pop
shl
loopne
shrl
in
test
clc
sbb
jp
lahf
or
pop
push
inc
sarb
cld
push
inc
push
mov
inc
out
lods
cmp
data16
sbb
push
add
lea
cmp
push
scas
jp
arpl
cld
popa
sub
xor
call
loop
enter
insb
sti
xchg
jnp
rorb
push
add
sar
dec
jmp
sub
push
pop
push
into
jns
inc
test
push
int3
push
imul
and
cwtl
pop
and
loope
outsl
mov
fsubl
cltd
mov
test
and
popf
insb
or
ret
adc
adc
add
or
into
sub
gs
or
sarb
jle
adc
mov
aad
sbb
cmpsb
repnz
adc
in
test
xchg
jmp
stos
dec
or
imul
push
in
xchg
into
movsb
cmp
iret
mov
add
mov
lods
bound
jnp
stos
mov
jae
pushf
ret
ljmp
int
mov
xchg
pusha
test
push
sahf
jnp
push
cwtl
jns
cmc
jmp
pop
nop
hlt
ds
fildl
mov
xchg
daa
ret
in
cmpsb
and
lea
cmp
jbe
lods
cmp
fwait
cmc
imul
xchg
ret
push
fwait
inc
cmp
sub
mov
cmp
sub
mov
add
scas
and
dec
out
and
leave
lcall
int
pop
pop
subl
push
call
add
jnp
and
sti
repz
push
or
adc
inc
inc
loopne
stos
sub
jae
mull
lds
sbb
popf
rol
idivl
inc
sar
mov
stc
stc
fisttpll
mov
cwtl
es
xchg
ss
cmp
cmp
mov
mov
clc
jo
outsb
push
stc
cmp
jmp
mov
jg
push
cwtl
jbe
addr16
lcall
cltd
shl
pushf
repnz
pop
ficompl
test
loopne
or
inc
jp
and
mov
and
xor
fisubrs
dec
movsb
nop
or
adc
jmp
sub
pop
pop
or
mov
or
icebp
sub
cmp
cs
in
jle
sbb
sub
sar
in
aas
sahf
out
inc
pop
incb
dec
iret
std
aam
lret
mov
xor
cs
ds
mov
mov
call
fnsave
addr16
adc
inc
sbb
neg
add
lahf
roll
lods
scas
stos
test
inc
int
cmc
sbb
xor
lcall
inc
dec
aaa
mov
in
push
cmpb
loope
and
arpl
push
lret
sub
mov
fprem1
sbb
cmp
cmp
cli
aaa
push
adc
cld
push
cmp
test
push
xlat
adc
adc
and
xor
imul
cwtl
adc
enter
popa
dec
in
or
sub
add
xorl
xchg
push
push
in
int3
add
cwtl
sub
pop
xchg
in
sub
cld
pop
loop
sub
gs
gs
sbb
aam
mov
fstpl
pop
add
add
ds
imull
not
sub
sti
or
addb
mov
test
xchg
mov
mov
adc
jge
cmpb
push
stos
fimull
mov
fs
jge
hlt
xlat
mov
push
into
sbb
mov
xor
lods
mov
in
or
ds
jo
push
xchg
jnp
sbb
jmp
cmpl
cmovbe
or
test
repnz
add
mov
das
and
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
cltd
scas
rolb
sub
push
ds
add
icebp
pop
lods
sub
adc
dec
mov
dec
mov
rclb
add
mov
int
adc
and
cmp
out
sub
jno
test
xchg
mov
inc
mov
mov
fldcw
test
shl
roll
xor
xchg
scas
push
imulb
sub
cmp
mov
stos
inc
xchg
test
data16
lahf
mov
insl
jp
pop
mov
adc
sbb
mov
subl
ja
or
loopne
xchg
xchg
xchg
mov
enter
in
dec
lret
ficoml
fnsaves
xchg
dec
or
das
rorl
inc
dec
roll
and
ja
jae
inc
xchg
insb
adc
mov
push
pop
outsl
push
inc
pop
in
mov
sub
mov
movsl
inc
dec
adc
push
jl
sbb
adc
inc
adc
daa
fdiv
jmp
and
mov
lret
cld
inc
shr
and
in
jle
fbld
mov
call
test
xor
xchg
xchg
lret
cs
inc
inc
mov
in
cli
dec
push
jns
imul
lds
pushf
xchg
clc
xlat
ret
and
aad
cmpsl
add
pop
fincstp
mov
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
fisubl
add
sub
