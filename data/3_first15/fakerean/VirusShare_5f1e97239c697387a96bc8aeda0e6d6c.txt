add
add
jne
cmpl
jne
mov
lea
mov
call
mov
andl
mov
mov
mov
push
call
test
pop
je
push
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
push
mov
call
push
call
incl
pop
pop
pop
leave
ret
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
call
push
call
pop
xor
jmp
mov
test
je
push
call
pop
mov
test
je
mov
push
call
andl
mov
test
je
mov
push
call
andl
mov
test
je
cmpl
jge
call
add
jmp
push
lea
sub
mov
xor
mov
mov
test
push
mov
je
mov
mov
push
push
lea
push
xor
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
je
push
lea
push
mov
call
mov
imul
testb
je
mov
add
push
call
test
pop
je
pop
pop
mov
mov
xor
pop
call
add
leave
ret
push
mov
and
sub
push
push
push
mov
testb
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
xor
inc
lea
call
lea
push
lea
push
push
mov
call
mov
pushl
neg
call
mov
pushl
mov
add
neg
call
mov
add
cmpl
jne
pushl
mov
mov
push
call
test
jne
xor
push
push
mov
mov
push
call
jmp
push
mov
and
sub
push
push
lea
mov
call
mov
cmp
jl
mov
add
cmp
mov
jg
mov
mov
cmp
jl
mov
lea
cmp
jg
mov
xor
cmp
mov
mov
jne
mov
cmp
jne
mov
push
push
mov
mov
mov
mov
mov
call
pop
pop
mov
pop
ret
push
mov
push
mov
andl
push
mov
lea
call
mov
mov
push
call
push
lea
call
pop
leave
ret
push
mov
sub
add
enter
mov
mov
push
push
push
mov
mov
mov
call
test
je
mov
xor
push
mov
lea
mov
call
mov
mov
push
call
mov
mov
push
mov
call
cmp
je
mov
cmp
lea
mov
mov
movl
movl
mov
mov
jne
mov
mov
push
lea
push
push
call
cmp
jne
cmp
jne
cmp
je
mov
call
test
jne
pushl
mov
pushl
mov
pushl
call
testb
mov
jne
testb
jne
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
add
push
call
test
pop
jne
push
call
pop
jmp
mov
mov
mov
mov
push
lea
mov
call
lea
push
mov
call
test
pop
js
pushl
mov
pushl
call
mov
lea
mov
call
cmp
jne
jmp
xor
jmp
cmp
jne
mov
lea
mov
mov
call
pushl
mov
mov
xor
cmp
sete
push
push
call
and
add
decl
decl
test
mov
and
lahf
cmp
jne
mov
push
push
push
mov
call
pushl
pushl
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
mov
mov
test
mov
je
jmp
lea
mov
cmp
je
test
push
jne
mov
mov
call
test
je
mov
push
push
call
mov
mov
test
je
test
mov
je
cmp
je
cmp
je
test
jne
mov
cmpl
mov
lea
mov
je
lea
push
mov
mov
push
push
push
lea
push
add
push
call
add
mov
xor
mov
mov
mov
mov
mov
lea
push
push
push
push
lea
push
lea
push
lea
movl
call
add
test
jne
add
cmpl
je
mov
mov
lea
push
push
push
push
lea
call
add
test
jne
mov
cmp
je
cmp
je
xor
mov
mov
mov
jmp
addl
mov
mov
mov
mov
add
movzbl
add
movzbl
lea
push
lea
call
add
add
mov
movzbl
lea
push
lea
call
mov
mov
xor
mov
mov
mov
mov
lea
push
mov
push
push
push
push
lea
push
lea
push
lea
push
mov
call
add
test
jne
mov
add
cmp
jl
mov
mov
cmp
je
cmp
je
cmp
je
mov
mov
mov
push
call
cmpl
je
mov
cmpl
je
cmp
mov
mov
jne
mov
pop
pop
pop
pop
add
ret
mov
lea
mov
test
jne
or
mov
mov
cmp
jne
pop
mov
pop
pop
pop
add
ret
push
mov
sub
andl
push
mov
push
lea
push
lea
push
mov
push
call
mov
cmp
je
cmp
je
cmp
je
cmp
je
pop
pop
leave
ret
mov
cmpl
mov
jge
push
mov
call
mov
lea
push
lea
push
lea
push
lea
push
add
push
lea
movl
call
add
jmp
lea
push
pushl
lea
call
test
pop
pop
je
mov
cmpb
jne
mov
mov
mov
mov
jmp
push
mov
mov
call
pop
jmp
mov
cmpl
jge
testb
je
pushl
pushl
call
ret
push
pushl
mov
call
mov
orl
cmpb
pop
jne
jmp
mov
test
je
mov
mov
mov
xor
ret
mov
mov
mov
add
test
mov
je
test
je
xor
ret
test
je
mov
push
push
call
jmp
push
mov
mov
call
mov
mov
add
cmp
ja
jmp
flds
fstps
mov
pop
ret
mov
mov
jmp
nop
iret
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmp
xchg
mov
cmp
lods
mov
cmp
mov
mov
in
sub
andl
push
mov
push
lea
add
push
movl
movl
call
mov
push
call
test
je
andl
lea
push
push
call
testb
pop
pop
je
mov
add
push
call
test
pop
je
pop
xor
pop
leave
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
add
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
add
adc
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
add
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
mov
call
mov
mov
test
je
add
mov
cmpl
jne
push
mov
mov
mov
mov
mov
pop
mov
mov
mov
xor
inc
pop
ret
int3
mov
lea
mov
lock
inc
ret
mov
ret
mov
orl
mov
ret
push
mov
push
test
push
jne
mov
mov
push
push
push
call
test
mov
mov
mov
js
mov
test
je
mov
mov
mov
pop
leave
ret
mov
test
je
mov
mov
cmp
je
addl
mov
mov
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
sub
add
mov
mov
test
je
mov
mov
mov
mov
andl
xor
jmp
push
mov
push
push
push
mov
test
je
mov
test
je
mov
mov
mov
cmpl
je
push
mov
mov
lea
push
lea
push
push
movl
movl
call
add
mov
pop
xor
inc
pop
leave
ret
push
mov
push
xor
cmp
mov
jne
push
push
call
cmp
pop
je
movl
movl
movl
movl
movl
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
push
call
mov
push
pushl
push
call
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
test
je
mov
push
call
mov
test
mov
jne
cmpl
jbe
xor
mov
mov
push
call
inc
cmp
jb
cmpl
ja
pop
ret
xor
mov
mov
incl
call
inc
cmp
jae
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
xor
test
push
je
mov
mov
mov
mov
mov
test
jne
add
lea
xor
test
je
mov
test
jle
mov
test
jle
mov
add
mov
imul
cltd
idiv
mov
sub
mov
mov
mov
test
jg
test
je
orb
add
add
push
mov
mov
call
mov
test
jne
pop
pop
mov
pop
pop
pop
ret
mov
test
je
mov
push
push
call
mov
jmp
push
mov
mov
cmp
push
push
je
mov
cmp
je
mov
pushl
pushl
pushl
pushl
pushl
pushl
call
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
call
add
mov
pop
pop
pop
ret
push
mov
sub
push
mov
cmpb
jne
push
push
call
xor
inc
test
pop
jne
mov
test
je
mov
lea
push
push
push
call
test
js
cmpb
je
xor
pop
pop
leave
ret
mov
call
test
je
pushl
mov
push
call
jmp
push
mov
push
lea
push
call
andl
push
lea
call
lea
push
push
call
mov
test
je
andl
test
movl
mov
je
mov
mov
mov
mov
mov
pushl
mov
push
push
call
testb
jne
testb
jne
lea
call
pop
jmp
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
cmpl
je
xor
inc
leave
ret
mov
mov
push
lea
push
push
push
mov
call
and
neg
sbb
not
and
pop
leave
ret
xor
leave
ret
push
mov
movl
movl
cmpl
je
lea
push
call
pop
testb
je
push
call
pop
mov
pop
ret
push
push
mov
movzbl
flds
movzwl
fldl
fmul
fxch
shr
push
movzbl
and
lea
mov
shr
lea
shl
call
sub
fmull
call
sub
mov
and
add
pop
sar
pop
xor
pop
ret
push
mov
mov
call
add
pop
ret
push
mov
sub
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
mov
cmp
je
mov
push
push
pushl
lea
push
call
mov
cmp
mov
je
mov
cmp
je
lea
add
mov
push
pushl
push
push
pushl
pushl
pushl
push
push
call
test
jne
test
je
add
add
mov
push
push
call
xor
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
mov
jmp
xor
jmp
push
mov
push
test
je
mov
andl
lea
push
push
push
call
mov
test
je
mov
mov
mov
test
jle
push
push
push
push
pop
mov
mov
mov
mov
test
je
incl
mov
test
jne
andl
decl
je
dec
mov
jne
pop
pop
pop
mov
push
call
leave
ret
add
jmp
push
call
push
call
pop
pop
jmp
push
cmpl
je
test
je
mov
test
lea
jne
mov
test
jns
push
mov
call
cmpl
jne
xor
test
jne
mov
mov
call
call
lea
push
push
call
call
lea
sahf
sub
xorps
inc
inc
add
add
pop
ret
mov
jmp
push
mov
push
push
xor
cmp
je
cmp
jle
push
push
push
mov
lea
push
push
push
call
mov
mov
mov
add
and
jne
test
jne
pushl
lea
call
test
jne
mov
test
mov
je
mov
mov
lea
push
call
mov
lea
push
pushl
push
call
test
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
mov
lea
call
mov
mov
xor
lea
call
pop
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
cmpb
je
push
push
mov
movsbl
cmp
jle
mov
cmp
lea
jne
mov
test
jne
test
je
mov
cmp
jbe
mov
and
mov
movb
mov
mov
mov
add
cmpb
jne
cmp
call
ja
movzbl
jmp
mov
push
push
push
or
mov
call
jmp
mov
sub
cmpl
jg
mov
sub
jmp
push
push
push
push
call
test
jne
popa
cs
add
add
or
mov
call
jmp
mov
sahf
into
cmp
mov
cmp
mov
mov
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
push
push
mov
pushl
lea
mov
mov
call
cmpl
je
mov
lea
ja
inc
add
testb
je
push
call
test
pop
mov
je
mov
cmp
je
cmp
je
movb
mov
mov
cmp
je
cmp
je
movl
mov
mov
push
add
push
lea
push
call
mov
test
mov
je
mov
add
call
test
je
mov
add
in
inc
add
or
push
mov
add
call
mov
test
pop
je
mov
test
jne
mov
call
mov
test
mov
jne
mov
test
jne
mov
call
test
jne
mov
test
jne
lea
call
mov
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movb
mov
movl
mov
mov
mov
movl
mov
movl
movl
mov
mov
xor
inc
cmp
je
cmp
je
mov
mov
movl
movl
mov
lea
push
mov
mov
call
cmpl
jne
mov
mov
cmp
mov
jne
mov
mov
mov
orw
cmpb
jne
mov
lea
call
mov
pop
pop
pop
ret
cmpb
je
mov
jmp
mov
push
call
mov
test
je
cmpb
jne
mov
mov
mov
mov
jmp
mov
orl
mov
mov
mov
mov
mov
jmp
mov
movl
movl
mov
movl
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
add
push
or
adc
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
add
jne
xor
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
mov
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
push
push
push
call
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
push
mov
push
mov
push
pushl
pushl
call
add
test
push
push
pushl
jl
call
add
test
jg
push
push
pushl
call
add
test
mov
jge
pop
pop
ret
call
add
test
jl
push
push
pushl
call
add
test
jl
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
mov
jne
test
jne
xor
cmp
setne
cmp
mov
jb
mov
shr
imul
add
cmp
movl
jbe
lea
imul
add
cmp
mov
ja
mov
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
add
test
je
cmp
jg
add
shr
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
add
imul
add
lea
mov
mov
mov
cmp
ja
mov
cmpl
jne
mov
test
mov
jne
test
jne
test
jg
jne
cmpl
mov
movl
jne
mov
mov
mov
mov
mov
add
mov
add
cmp
jbe
jmp
imul
lea
add
cmp
jae
mov
sub
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
push
push
push
call
mov
add
jmp
cmp
ja
mov
lea
cmpl
jne
mov
test
mov
jne
test
jne
test
jl
jne
test
movl
jne
mov
mov
mov
mov
sub
mov
sub
cmp
ja
mov
jmp
mov
push
push
push
call
mov
add
jmp
test
je
push
push
call
mov
add
jmp
cmp
ja
test
je
cmp
mov
mov
jg
mov
shr
jmp
lea
mov
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
add
movl
sub
jmp
test
je
push
push
call
mov
add
jmp
mov
mov
imul
add
cmpl
je
mov
mov
mov
sub
sub
cmp
mov
jge
test
jle
mov
sub
cmpl
jg
shr
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
sub
test
jg
mov
mov
sub
sub
sub
cmp
jl
test
jg
cmp
jle
mov
mov
push
push
mov
xor
div
push
push
push
call
add
cmp
jle
mov
sub
mov
mov
xor
div
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
movl
sub
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
lea
cmp
jae
mov
mov
sub
mov
mov
lea
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
mov
mov
mov
jmp
mov
shr
imul
lea
mov
add
mov
push
add
push
mov
push
call
mov
mov
lea
push
push
sub
push
call
mov
mov
mov
sub
push
sub
push
push
call
add
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
push
sub
push
call
mov
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
mov
mov
jne
test
jne
ret
test
je
push
push
call
add
ret
mov
ret
or
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
mov
xor
push
call
test
je
mov
push
lea
mov
call
push
lea
push
mov
call
mov
mov
cmp
je
lea
lea
push
mov
mov
movl
movl
mov
adc
inc
add
push
call
mov
test
js
lea
push
push
call
pop
pop
testb
je
mov
add
push
call
test
pop
je
mov
cmp
je
mov
push
call
mov
pop
mov
pop
xor
pop
call
leave
ret
testb
je
jmp
push
mov
push
push
mov
mov
call
test
js
mov
xor
cmp
je
cmp
je
mov
cmp
mov
lea
xor
add
ret
mov
cmp
mov
lea
ja
lea
jmp
push
mov
sub
push
mov
test
je
mov
mov
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
push
pushl
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
xor
push
lea
mov
call
lea
push
push
call
test
pop
pop
js
push
push
lea
lea
mov
movl
movl
mov
mov
mov
call
mov
cmp
mov
je
mov
lea
push
push
push
call
test
pop
jne
pushl
lea
call
mov
pushl
mov
push
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
lea
call
lea
call
add
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
mov
push
mov
lea
xor
push
lea
mov
mov
movl
movl
mov
outsb
dec
inc
add
add
test
js
mov
cmpl
push
mov
jge
push
lea
mov
mov
call
push
lea
call
lea
push
lea
push
call
test
pop
pop
jne
pushl
mov
pushl
call
pop
pop
mov
mov
mov
push
call
test
jne
mov
push
mov
call
lea
push
lea
push
pushl
call
add
test
jne
pushl
mov
pushl
pushl
call
pushl
mov
call
pop
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
pop
xor
pop
call
leave
ret
mov
add
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
mov
mov
and
dec
je
dec
dec
je
movzbl
and
cmp
je
mov
call
test
je
push
push
call
test
pop
je
movl
mov
test
je
mov
call
mov
movl
xor
inc
pop
pop
ret
xor
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
movl
movl
xor
mov
mov
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ljmp
pusha
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
ret
push
mov
lea
mov
push
call
test
je
cmpl
je
pushl
lea
mov
push
call
testb
jne
push
lea
push
mov
call
pop
pop
ret
mov
test
je
mov
mov
mov
mov
push
call
xor
ret
push
mov
and
push
mov
push
xor
movl
mov
call
pushl
mov
pushl
mov
pushl
mov
pushl
xor
push
pushl
cmp
pushl
sete
mov
mov
mov
mov
mov
push
push
call
pop
mov
pop
mov
pop
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
mov
test
movl
movl
movl
movl
movl
jne
lea
call
lea
call
lea
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
mov
cmpl
je
andl
xor
ret
push
mov
push
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
mov
je
add
push
call
xor
mov
mov
mov
pop
pop
ret
push
push
push
mov
call
test
pop
je
mov
movl
andl
andl
add
test
je
mov
mov
test
je
pushl
mov
push
push
call
mov
test
js
mov
pop
pop
ret
xor
jmp
push
mov
push
push
push
xor
cmp
mov
mov
jne
push
mov
push
lea
call
pushl
lea
push
push
call
add
cmp
pop
je
pushl
pushl
call
cmp
pop
pop
jne
mov
mov
mov
lea
mov
lea
call
lea
call
pop
leave
ret
push
call
pop
push
lea
call
jmp
push
lea
sub
mov
xor
mov
push
push
mov
mov
xor
mov
cmp
push
jne
mov
add
je
cmp
movl
jne
mov
mov
lea
push
pushl
lea
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
mov
je
mov
lea
push
call
mov
lea
call
mov
cmp
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
lea
call
mov
mov
pop
pop
xor
pop
call
add
leave
ret
mov
call
mov
mov
mov
mov
mov
mov
add
call
push
pushl
call
pushl
mov
push
pushl
mov
call
mov
mov
mov
push
push
call
mov
test
jne
xor
cmp
jne
mov
testb
je
mov
mov
mov
mov
cmp
jne
add
mov
push
push
call
test
jne
testb
movl
je
mov
add
push
call
test
pop
jne
jmp
call
cmp
je
mov
pushl
mov
push
call
test
pop
pop
js
mov
lea
mov
call
jmp
add
or
test
jmp
push
mov
push
push
push
xor
push
lea
mov
call
lea
push
push
push
call
add
test
js
pushl
mov
lea
push
push
call
mov
mov
add
lea
push
push
call
mov
cmp
jne
push
pushl
mov
call
pop
pop
mov
lea
call
add
pop
leave
ret
push
mov
mov
sub
push
push
push
mov
xor
mov
cmp
je
cmp
je
mov
orb
lea
mov
mov
call
push
mov
call
mov
andl
pop
lea
push
mov
lea
call
andl
push
lea
call
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
pushl
call
andl
test
pop
pop
je
push
lea
mov
call
mov
lea
push
pushl
pushl
push
call
test
js
push
call
test
pop
je
pushl
mov
pushl
mov
mov
push
push
call
test
mov
je
mov
push
call
cmpl
je
mov
mov
lea
push
push
call
pushl
pushl
pushl
call
add
test
je
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
pushl
call
pop
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
cmpl
jne
push
push
mov
push
lea
lea
mov
push
push
call
test
je
cmp
jae
push
lea
lea
call
pop
pop
mov
xor
pop
call
leave
ret
push
add
push
call
jmp
push
mov
mov
call
add
push
pushl
call
xor
pop
ret
push
mov
push
push
push
mov
push
mov
mov
push
mov
imul
lea
push
add
pushl
push
call
mov
lea
push
pushl
push
call
cmpl
jl
cmpl
jg
mov
lea
push
pushl
push
call
test
mov
jne
mov
flds
mov
fstps
mov
mov
test
pop
pop
mov
pop
je
cmp
je
fldz
fcomps
fnstsw
test
jp
xor
inc
leave
ret
mov
jmp
xor
leave
ret
push
mov
push
push
mov
push
push
xor
cmp
mov
je
inc
add
push
push
push
add
push
call
and
jne
inc
add
test
cld
lea
call
mov
cmp
je
inc
add
push
push
call
mov
mov
push
call
mov
pop
pop
leave
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
mov
orl
mov
movl
mov
pop
ret
sub
push
push
push
push
mov
mov
mov
mov
mov
sub
lea
mov
mov
mov
mov
sub
sub
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
movl
mov
shl
sub
mov
mov
sub
mov
nop
cmp
jae
movzbl
add
mov
shl
add
add
mov
add
movzbl
shl
mov
add
add
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
lea
test
je
shr
and
mov
jne
cmp
jb
mov
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
shr
and
cmp
mov
jb
mov
mov
mov
shl
sub
sub
and
mov
mov
add
mov
mov
sub
shr
cmp
ja
mov
sub
movzbl
add
add
mov
mov
add
add
mov
movzbl
add
add
sub
cmp
mov
ja
test
je
mov
add
add
cmp
mov
ja
mov
jmp
test
jne
mov
mov
mov
mov
shl
shr
sub
and
add
mov
mov
mov
shr
movzbl
movzbl
shr
sub
test
jne
add
shr
mov
cmp
jae
cmp
jae
mov
jmp
mov
movzbl
add
add
mov
mov
movzbl
shl
add
mov
shl
add
add
add
jmp
cmp
jb
mov
mov
shl
sub
and
add
shr
sub
jmp
mov
mov
add
jmp
mov
sub
cmp
mov
ja
mov
add
mov
mov
mov
test
jne
mov
sub
mov
add
mov
cmp
jb
cmp
jbe
lea
mov
mul
shr
add
jmp
lea
movzbl
add
add
mov
movzbl
add
add
mov
movzbl
add
add
sub
sub
mov
jne
test
je
mov
add
add
cmp
mov
jbe
mov
mov
add
mov
jmp
mov
lea
test
jne
mov
movzwl
mov
shl
mov
sub
and
add
mov
mov
shr
movzbl
movzbl
shr
sub
test
mov
jne
jmp
mov
movzbl
add
mov
mov
shl
add
add
cmp
jae
jmp
cmp
jb
sub
mov
add
mov
cmp
jae
sub
mov
add
add
subl
mov
jne
mov
sub
jmp
test
je
mov
movl
mov
mov
shr
sub
add
add
add
sub
mov
mov
shl
lea
sub
sub
and
mov
mov
lea
mov
mov
sub
add
add
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
sub
add
mov
sub
add
cmp
jb
mov
jmp
mov
add
mov
movzbl
mov
shl
add
add
jmp
sub
jmp
lea
mov
add
add
subl
mov
jne
mov
sub
jmp
push
mov
sub
andl
push
mov
push
mov
push
push
lea
push
lea
push
pushl
call
add
test
je
mov
andl
lea
push
movl
movl
mov
push
call
test
js
mov
mov
lea
call
testb
mov
jne
testb
jne
mov
test
jne
mov
pop
pop
leave
ret
push
mov
push
push
mov
lea
lea
mov
push
call
test
je
mov
test
je
push
pushl
call
xor
pop
pop
pop
ret
cmpb
je
pushl
mov
pushl
mov
push
call
test
jne
jmp
push
mov
push
push
mov
mov
test
je
cmpb
push
mov
je
mov
push
mov
call
test
je
andl
push
lea
call
mov
lea
push
push
call
pushl
andl
mov
lea
call
push
pushl
pushl
call
lea
call
lea
call
xor
pop
pop
leave
ret
push
mov
mov
cmpl
push
push
push
mov
jge
testb
mov
jne
test
jne
testb
jne
mov
xor
cmp
je
testb
jne
mov
cmp
mov
jne
mov
andl
test
je
mov
push
call
mov
andl
test
je
mov
push
call
cmpl
jne
testb
jne
testb
jne
test
jne
andl
cmpl
mov
mov
je
testb
je
testw
je
lea
call
lea
cmpl
je
mov
cmpl
jge
lea
test
je
lea
pushl
mov
mov
lea
add
push
push
call
xor
mov
call
push
mov
call
cmpl
je
push
lea
call
cmpl
jne
mov
test
je
lea
test
je
lea
pushl
mov
push
push
push
call
lea
xor
call
lea
xor
call
xor
pop
pop
pop
pop
ret
mov
mov
jmp
xor
jmp
push
mov
push
push
mov
push
mov
test
je
mov
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
decl
jne
mov
movl
call
pushl
call
pop
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
push
call
pop
pop
pop
mov
add
call
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
movzwl
cmp
push
mov
jle
sub
je
dec
je
dec
je
dec
jne
pushl
push
call
xor
mov
pop
xor
pop
call
leave
ret
pushl
mov
call
jmp
mov
test
jle
mov
test
jle
mov
mov
ret
andl
andl
ret
mov
cmp
je
cmp
je
cmp
je
xor
ret
xor
inc
ret
push
mov
push
push
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
push
mov
cmp
je
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
mov
pop
pop
leave
ret
push
push
mov
mov
test
je
mov
push
call
mov
andl
test
je
mov
push
call
push
push
call
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
push
call
xor
add
cmp
mov
je
mov
mov
movl
movl
mov
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
incl
xor
ret
mov
sub
je
dec
jne
mov
ret
xor
jmp
mov
jmp
mov
mov
mov
mov
ret
push
mov
push
mov
push
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
mov
je
pushl
lea
mov
call
pushl
lea
mov
sub
or
mov
push
call
pop
mov
call
inc
add
call
pop
mov
pop
pop
pop
pop
ret
push
mov
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
push
mov
mov
push
lea
lea
jmp
mov
mov
call
test
jne
add
cmp
jne
or
pop
pop
pop
ret
mov
sub
sub
sar
jmp
pushl
mov
call
add
pushl
xor
jmp
push
pushl
xor
inc
call
xor
inc
ret
push
lea
sub
mov
xor
mov
mov
test
je
push
mov
call
test
mov
je
mov
push
call
mov
test
je
andl
test
jne
push
xor
xor
inc
cmp
jne
cmp
jne
mov
mov
call
mov
mov
cmp
mov
je
test
je
andl
cmp
je
call
mov
lea
call
mov
test
jne
lea
call
inc
add
add
jne
mov
pushl
call
pop
pop
mov
mov
mov
lea
call
inc
add
pop
mov
xor
call
add
leave
ret
cmp
jne
and
je
andl
inc
inc
add
mov
mov
mov
mov
test
mov
mov
je
mov
lea
push
push
call
test
js
mov
call
cmp
jne
testb
jne
testb
jne
testb
jne
testb
je
jmp
mov
push
call
jmp
push
mov
push
mov
test
je
push
mov
test
je
andl
push
lea
call
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
xor
leave
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
push
mov
xor
cmp
je
cmp
je
mov
mov
push
lea
push
push
call
mov
mov
lea
push
call
mov
lea
cmp
je
call
mov
push
call
lea
mov
mov
dec
jns
mov
mov
push
push
push
push
call
lea
mov
lea
push
lea
push
push
movl
call
add
lea
xor
call
lea
xor
call
lea
xor
call
andl
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
xor
lea
movzbl
push
lea
call
cmpl
jne
add
add
cmp
jle
xor
mov
lea
lea
movzbl
lea
push
lea
call
mov
call
cmp
je
cmp
jne
mov
call
test
mov
jg
lea
mov
mov
add
add
cmp
jle
movb
pop
pop
pop
pop
add
ret
lea
jmp
xor
jmp
push
mov
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
mov
mov
cmpl
jne
cmp
je
cmp
je
mov
mov
andl
push
call
test
je
test
je
push
push
call
mov
test
je
test
je
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
push
mov
push
pushl
pushl
lea
push
push
mov
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
das
sub
sub
test
outsb
cmp
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
movzbl
push
push
push
lea
push
lea
push
lea
call
mov
add
lea
push
push
pushl
lea
pushl
lea
push
lea
push
call
mov
add
test
jne
lea
push
mov
pushl
lea
pushl
lea
push
push
lea
push
call
movzbl
push
push
push
lea
push
lea
push
lea
add
mov
dec
add
push
push
push
lea
push
lea
push
lea
call
add
flds
push
push
push
lea
fstps
flds
lea
fstps
push
lea
call
fld1
mov
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
lea
add
cmpl
je
lea
push
mov
pushl
lea
pushl
push
push
lea
push
call
add
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
add
cmp
jne
mov
mov
mov
pop
pop
pop
leave
ret
push
push
pushl
call
jmp
test
je
call
jmp
mov
mov
jmp
push
mov
push
mov
sub
jne
leave
ret
dec
dec
je
dec
je
dec
je
add
push
jne
call
fstps
testb
flds
fstps
fldz
jne
testb
jne
fstp
leave
ret
mov
cmp
jg
je
sub
jne
ret
sub
je
dec
je
sub
jne
mov
mov
ret
dec
je
dec
jne
mov
andl
mov
jmp
push
mov
sub
mov
xor
mov
push
push
push
mov
push
mov
call
test
je
xor
cmp
je
orb
lea
mov
mov
movl
movl
mov
mov
lea
push
mov
call
test
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
push
push
push
lea
call
test
je
mov
movw
jmp
orb
cmpl
je
lea
push
push
pop
mov
call
testb
jne
testb
jne
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
mov
cmp
je
push
mov
call
add
add
add
clc
ss
cmp
jne
jmp
cmp
jne
movl
jmp
mov
add
call
jmp
push
mov
and
mov
sub
push
push
mov
xor
push
mov
mov
mov
xor
mov
mov
inc
test
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
mov
je
or
mov
mov
push
mov
call
test
pop
je
movb
movb
movb
movb
andl
movl
mov
mov
test
mov
je
push
mov
mov
call
test
jne
and
and
test
je
andb
cmpl
je
cmpl
jne
mov
call
push
call
pop
push
lea
call
cmpl
mov
jne
mov
cmp
je
cmp
je
mov
add
call
lea
call
mov
test
jne
push
lea
push
call
test
je
andb
cmpl
mov
je
mov
cmp
jne
mov
cmp
jne
or
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
test
jne
push
push
pop
mov
call
test
je
pushl
push
call
test
jne
jmp
cmpw
mov
je
jmp
push
lea
push
call
test
jne
jmp
cmp
jne
cmpw
je
jmp
cmp
mov
mov
jne
mov
jmp
push
mov
push
andl
push
push
mov
push
mov
lea
call
mov
pushl
add
call
mov
test
js
mov
mov
mov
push
call
lea
call
pop
mov
pop
leave
ret
cmpl
je
mov
push
mov
call
test
jne
pushl
mov
mov
call
cmp
je
mov
push
push
push
mov
call
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
jne
testb
je
jmp
int3
int3
int3
int3
int3
push
push
mov
test
mov
je
push
mov
push
xor
lea
cmpl
jne
cmp
je
mov
mov
test
jne
pop
pop
pop
mov
pop
ret
mov
mov
push
push
call
add
test
jne
cmp
jne
test
mov
je
mov
mov
push
call
push
call
add
mov
xor
jmp
mov
jmp
mov
test
je
mov
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
push
pushl
mov
pushl
push
call
mov
and
neg
sbb
and
pop
ret
push
mov
test
je
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
movb
xor
pop
ret
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
mov
test
push
push
je
lea
clc
cmp
add
pushl
call
mov
cmp
jne
mov
pop
pop
ret
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
xor
jmp
xor
jmp
mov
mov
push
inc
push
push
call
test
je
mov
mov
incl
lea
ret
xor
ret
push
mov
push
mov
push
mov
test
jbe
push
add
andl
lea
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
push
pushl
xor
push
inc
call
pop
pop
pop
leave
ret
incl
add
cmp
jb
jmp
push
mov
push
push
push
push
mov
push
mov
xor
cmp
je
cmp
je
inc
add
mov
call
mov
lea
push
push
call
push
lea
mov
call
mov
lea
add
mov
push
push
call
pushl
mov
lea
mov
call
mov
cmp
mov
je
inc
add
call
lea
call
lea
call
cmp
jne
inc
add
pop
leave
ret
push
mov
push
push
push
mov
xor
push
lea
mov
mov
call
lea
push
mov
mov
call
mov
mov
and
pop
jne
mov
mov
mov
push
pushl
pushl
call
cmp
jne
mov
mov
push
push
push
call
mov
lea
call
pop
mov
pop
pop
pop
ret
push
mov
sub
push
push
mov
mov
sub
je
andl
andl
lea
push
lea
lea
movl
movl
mov
call
testl
jne
mov
mov
push
push
lea
push
push
call
mov
mov
mov
push
pushl
pushl
push
pushl
push
call
add
mov
movl
mov
mov
pop
lea
call
mov
pop
pop
leave
ret
push
mov
test
je
push
push
mov
test
jl
mov
cmpb
jne
andl
mov
pop
mov
movb
xor
pop
pop
ret
lea
movl
call
lea
call
lea
call
lea
call
lea
call
lea
jmp
mov
xor
test
je
mov
test
je
add
movzbl
rol
xor
mov
test
jne
ret
mov
push
push
mov
movl
adc
nop
or
add
or
add
or
add
lea
xor
add
test
inc
js
shlb
adc
pop
mov
mov
push
call
lea
add
movl
cmp
str
add
and
mov
str
add
sbb
mov
add
call
lea
call
lea
call
lea
call
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
push
mov
sub
push
mov
mov
mov
push
mov
mov
mov
shr
push
mov
and
mov
mov
mov
jne
mov
mov
cmpl
je
mov
push
push
call
test
je
mov
call
movl
lea
movl
movl
movb
movb
call
mov
orb
mov
mov
mov
mov
mov
mov
cmpl
jne
movl
movl
cmpl
je
mov
andl
push
mov
lea
call
mov
test
je
mov
call
test
jne
lea
call
xor
cmp
jne
mov
push
mov
push
xor
lea
call
cmpl
mov
mov
mov
mov
je
mov
cmp
mov
jne
pushl
andl
pushl
mov
lea
push
call
lea
push
call
mov
andl
lea
push
push
pushl
lea
pushl
pushl
push
lea
push
push
call
lea
push
call
mov
lea
mov
mov
call
add
mov
cmp
je
test
je
mov
call
mov
test
mov
je
mov
cmp
je
inc
mov
mov
push
pushl
pushl
push
call
cmpl
je
mov
mov
lea
push
push
push
mov
mov
call
cmpl
jne
mov
mov
mov
mov
lea
xor
push
and
push
or
mov
push
je
call
lea
push
call
lea
call
pop
pop
xor
pop
leave
ret
push
call
pop
mov
jmp
andl
push
call
test
je
andl
jmp
pushl
lea
pushl
push
call
lea
push
call
mov
jmp
push
mov
sub
call
test
je
push
push
push
xor
push
lea
mov
mov
call
lea
mov
call
pushl
lea
call
mov
cmp
mov
je
mov
lea
push
push
push
lea
push
push
call
lea
call
cmp
jne
mov
cmp
je
cmp
je
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
lea
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
pushl
call
call
lea
call
add
call
pop
pop
pop
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
and
push
xor
or
cmp
lea
mov
mov
mov
jne
mov
mov
lea
lea
lea
cmp
jne
test
jne
mov
mov
imul
lea
lea
cmp
jne
test
jne
cmp
je
testl
je
lea
cmp
jne
pop
pop
pop
mov
pop
ret
test
push
je
mov
lea
movsbw
cmp
jne
sub
add
add
test
jne
xor
pop
ret
movsbw
movzwl
movzwl
sub
pop
ret
push
mov
push
push
mov
push
mov
cmp
je
push
pop
cmp
je
andl
test
je
push
call
pop
push
lea
call
cmpl
je
mov
pushl
mov
pushl
mov
push
call
test
jne
mov
test
je
and
mov
test
jne
mov
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
pop
pushl
mov
call
test
pop
jne
jmp
xor
jmp
mov
cmp
jne
ret
push
mov
cmpl
push
mov
jne
test
je
incl
mov
test
mov
pop
pop
je
jmp
push
mov
sub
push
mov
push
xor
cmp
mov
je
push
pushl
lea
call
mov
cmp
pop
mov
je
mov
lea
push
push
push
call
test
js
cmp
mov
je
mov
test
mov
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
mov
lea
push
push
pushl
push
call
cmpl
jne
mov
test
mov
jne
mov
test
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
cmpl
je
mov
mov
push
push
pushl
call
test
je
andl
lea
call
inc
add
pop
mov
lea
call
mov
pop
pop
pop
leave
ret
push
mov
and
sub
push
mov
mov
cmp
push
push
je
cmp
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
inc
ret
push
mov
cmpl
jne
xor
inc
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
call
add
test
jne
push
push
push
push
push
call
add
cmpl
mov
mov
mov
jne
push
mov
call
add
cmp
jne
pop
pop
pop
ret
push
push
call
add
pop
pop
pop
ret
pop
pop
movl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
fldl
push
fstl
push
fldl
push
fstl
lea
fldl
mov
faddl
fldl
faddl
lea
fxch
push
mov
fstpl
fxch
push
fstl
push
fstpl
fxch
fstl
fstpl
fstpl
call
fldl
add
fstpl
xor
fldl
fstpl
jmp
fstp
fstp
fstp
fstp
mov
mov
lea
push
lea
push
push
call
fldl
fldl
add
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
fldl
fldl
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
add
cmp
jl
mov
fxch
fstl
pop
fxch
pop
fstl
pop
fxch
fsubp
fstpl
fsubrp
fstpl
mov
pop
ret
fstp
fldl
fstl
jmp
fstp
fldl
fstl
jmp
cmpl
jne
mov
test
je
incl
mov
test
mov
jne
ret
pushl
mov
movb
call
ret
push
mov
push
mov
test
jne
leave
ret
push
mov
mov
push
xor
cmp
movl
jne
mov
cmp
jne
push
push
add
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
pop
pop
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
je
mov
call
testb
je
push
call
jmp
mov
call
mov
call
ret
pushl
call
mov
ret
push
mov
and
sub
mov
xor
mov
push
push
push
call
test
jne
mov
xor
mov
push
lea
mov
call
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
js
mov
mov
push
push
push
call
test
js
mov
mov
mov
add
call
push
push
push
push
call
push
push
push
pushl
call
test
js
mov
mov
lea
push
push
call
test
lea
js
mov
call
mov
mov
push
lea
mov
mov
call
mov
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
jne
lea
call
lea
call
mov
mov
lea
push
push
call
test
jne
cmp
je
mov
mov
lea
push
push
push
mov
mov
call
add
cmp
jl
jg
mov
cmp
jbe
mov
mov
mov
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
mov
call
add
je
sub
inc
and
pushl
pushl
pushl
pushl
pushl
push
lea
push
push
call
test
je
jmp
lea
call
lea
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
push
xor
cmp
push
je
pushl
pushl
call
pushl
mov
pushl
call
mov
add
push
mov
call
pop
xor
pop
pop
pop
ret
mov
push
call
test
je
mov
push
call
test
je
mov
orl
jmp
push
mov
mov
test
je
mov
push
push
call
mov
test
je
andl
pushl
mov
call
pop
ret
push
lea
sub
mov
xor
mov
cmpl
mov
jge
test
push
push
je
andl
push
pop
mov
notb
inc
add
lea
push
mov
mov
mov
push
movl
mov
movb
call
test
js
mov
andl
test
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
andl
lea
push
lea
lea
push
mov
movl
mov
mov
movb
mov
push
call
test
je
testb
jne
testb
jne
lea
call
testb
jne
testb
jne
xor
pop
pop
mov
xor
call
add
leave
ret
pushl
lea
call
pushl
mov
mov
or
add
call
pop
pop
lea
call
pushl
pushl
call
pop
xor
pop
inc
jmp
mov
add
call
ret
mov
test
je
mov
dec
push
mov
lea
mov
add
rorb
add
push
mov
mov
push
push
mov
call
test
pop
pop
jne
mov
andl
and
xor
or
jne
mov
pop
pop
ret
push
push
mov
test
je
cmp
jne
mov
and
or
jne
cmpl
jne
cmpl
je
pushl
mov
pushl
push
call
test
je
mov
pop
pop
ret
xor
jmp
mov
and
or
jne
mov
call
mov
jmp
mov
add
mov
call
mov
jmp
xor
jmp
push
mov
push
mov
push
push
push
lea
call
test
jne
mov
test
jne
mov
test
jne
mov
mov
mov
mov
lea
call
test
jne
test
jne
mov
mov
push
pushl
push
call
test
je
pop
pop
pop
pop
pop
ret
xor
jmp
pushl
mov
mov
call
mov
jmp
incl
jmp
pushl
mov
mov
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
xor
cmp
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
mov
mov
cmp
mov
jne
mov
test
je
test
js
test
jne
add
cmpl
jne
test
mov
mov
mov
mov
jne
mov
mov
mov
pop
pop
xor
pop
ret
mov
test
lea
je
test
js
xor
jmp
mov
test
je
test
js
xor
jmp
mov
jmp
mov
jmp
push
mov
call
cmp
jne
mov
xor
jmp
mov
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
call
mov
mov
jmp
mov
test
je
mov
jmp
push
mov
mov
call
cmpl
je
mov
jmp
mov
mov
lea
push
push
call
mov
pop
movl
mov
pop
xor
pop
ret
mov
mov
lea
push
push
call
cmpl
jne
jmp
mov
cmp
jne
mov
cmp
je
xor
ret
xor
inc
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
push
mov
push
xor
push
mov
push
lea
push
lea
push
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
add
cmp
mov
mov
mov
jne
cmp
jne
mov
mov
test
je
test
jne
mov
and
add
jne
mov
call
mov
mov
mov
cmp
movb
mov
mov
mov
jne
mov
and
inc
add
sbb
incl
sarb
mov
lds
cmp
jne
lea
push
lea
push
sub
cmp
mov
mov
mov
jne
mov
mov
mov
push
call
cmp
je
mov
mov
mov
mov
call
mov
mov
cmpb
jne
mov
mov
mov
mov
push
xor
add
ret
lea
call
mov
cmp
jne
mov
mov
push
adc
push
lea
push
push
call
cmp
mov
mov
jne
jmp
mov
mov
mov
mov
and
or
movl
jne
mov
call
mov
mov
push
mov
mov
mov
call
mov
push
push
call
mov
mov
add
push
lea
mov
mov
call
mov
add
cmp
mov
jne
mov
call
mov
and
inc
add
mov
jmp
mov
push
mov
mov
call
mov
sub
inc
add
mov
mov
jmp
mov
mov
mov
push
call
jmp
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
mov
lea
call
mov
pop
leave
ret
int3
push
mov
mov
test
je
call
testb
movl
je
push
call
add
mov
pop
ret
int3
int3
int3
int3
push
push
mov
mov
test
mov
jne
test
jne
movl
mov
test
jne
testb
je
push
call
add
mov
pop
pop
ret
lea
push
call
add
test
jne
push
call
add
jmp
push
mov
push
push
push
mov
mov
cmpl
jge
mov
andl
mov
push
call
mov
test
pop
jne
test
mov
jne
testb
jne
lea
mov
lea
call
xor
mov
call
andl
push
call
mov
test
pop
pop
pop
je
mov
push
push
call
lea
call
leave
ret
push
mov
push
mov
push
lea
push
lea
push
xor
push
pushl
mov
call
cmp
je
cmp
push
jne
xor
testb
je
mov
mov
mov
cmp
je
mov
mov
cmp
pop
sbb
cmp
jne
cmp
jne
cmp
jne
mov
pop
pop
leave
ret
lea
mov
jne
mov
test
jns
push
mov
call
cmp
je
mov
jmp
mov
mov
mov
call
cmp
jbe
pushl
mov
pushl
mov
pushl
call
xor
jmp
xor
jmp
xor
inc
jmp
mov
cmpb
jne
push
call
test
je
pushl
mov
pushl
push
call
ret
mov
cmpb
jne
mov
push
lea
call
test
je
mov
lea
call
xor
ret
push
mov
lea
call
mov
test
mov
je
add
push
call
test
pop
jne
push
call
pop
pop
ret
push
mov
sub
pushl
andl
mov
lea
movl
call
mov
test
jne
push
push
mov
lea
cmpl
push
je
xor
call
lea
mov
test
je
mov
lea
pushl
push
call
xor
mov
call
xor
mov
call
mov
test
mov
je
mov
push
call
test
jne
mov
mov
call
mov
test
jne
lea
mov
test
je
mov
mov
orl
mov
mov
and
jne
orl
cmpl
je
test
jne
call
add
mov
andl
mov
mov
lea
mov
mov
mov
mov
cmp
jae
incl
mov
mov
mov
cmpb
jne
mov
test
mov
jne
and
neg
sbb
and
push
call
call
mov
jmp
mov
mov
lea
call
pop
pop
xor
pop
leave
ret
push
mov
push
mov
push
pushl
call
mov
pop
pop
ret
push
mov
push
push
andl
push
mov
push
mov
test
mov
je
push
call
pop
movl
mov
call
test
je
xor
cmp
jne
cmp
je
mov
cmp
je
cmp
je
push
call
pop
xor
pop
pop
leave
ret
test
je
movzwl
mov
mov
mov
incw
movzwl
cmp
je
test
je
cmpl
je
push
call
pop
xor
inc
jmp
push
mov
and
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
push
call
mov
mov
inc
add
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
jne
call
pushl
mov
call
cmpl
pop
jne
cmpl
mov
jne
cmp
je
inc
mov
mov
movl
cmpl
jne
mov
sub
add
push
pushl
call
pop
pop
xor
cmp
je
cmp
je
pushl
call
pop
mov
cmp
push
push
call
mov
in
arpl
mov
add
add
push
popf
jge
cmc
mov
mov
jae
add
add
jecxz
add
add
test
jmp
add
test
add
stos
movsl
jae
decb
mov
add
add
add
mov
add
insb
fldenv
add
mov
mov
add
push
push
push
lea
push
push
lea
push
push
push
push
push
push
call
sahf
add
int
fwait
loopne
push
mov
faddl
add
addb
pop
js
pop
out
imul
lds
mov
xlat
add
push
add
pop
popl
push
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
jne
mov
pop
add
mov
add
mov
stos
jns
cld
test
add
mov
add
scas
pop
imul
add
addb
loope
pop
cld
test
push
out
movsl
clc
gs
mov
xchg
jp
movsl
add
add
cmpsb
xchg
add
rorb
push
push
push
lea
push
call
sti
outsl
mov
in
pop
mov
add
add
jmp
ja
jnp
lock
mov
mov
add
xchg
js
cltd
loop
popl
call
movsl
xlat
add
add
mov
add
jae
add
mov
lea
pop
push
push
push
push
push
push
push
push
push
call
in
add
add
push
add
outsl
add
add
xchg
add
xchg
mov
mov
add
add
add
add
add
add
pusha
add
loope
mov
int3
push
add
lret
add
jl
add
push
in
push
mov
addb
rorl
add
fidivrl
je
add
scas
mov
add
mov
lea
pop
call
push
push
push
lea
push
push
push
call
xorl
add
cmc
add
mov
add
add
add
popa
fs
stc
jl
cwtd
add
add
add
add
add
shll
xchg
mov
lea
pop
call
push
push
push
push
push
push
lea
push
push
call
pop
add
test
add
cltd
push
nop
add
ja
add
test
add
add
add
add
push
add
fildl
fnstcw
test
jl
add
scas
insb
stos
repnz
fiaddl
push
add
add
int3
mov
loop
incb
add
hlt
je
add
out
add
add
sbb
call
push
push
lea
push
push
push
lea
push
push
call
addr16
xchg
jmp
add
ret
rcr
cwtl
mov
pop
mov
add
cmpsb
in
lds
loop
ret
sbbl
add
fldl
add
faddl
out
add
push
jbe
cmpsb
add
loop
add
add
cwtl
out
cmpsl
stos
jb
arpl
aad
add
testl
add
push
lea
push
push
lea
push
push
push
push
call
add
cmpl
add
arpl
xlat
lcall
shlb
jno
add
mov
add
xchg
add
add
add
ret
mov
jge
add
mov
int3
popf
imul
ror
jae
add
mov
add
mov
mov
mov
push
bound
ret
mov
push
push
push
lea
push
push
push
push
call
add
imul
cltd
add
add
add
mov
jp
stc
mov
popf
aad
leave
incb
push
ret
jle
add
pop
out
scas
add
add
add
mov
push
mov
lea
pop
mov
push
push
push
push
push
push
call
cltd
mov
int
pushf
out
xlat
fidivrl
add
add
xchg
lea
ja
lret
cmpsb
mov
add
add
mov
jmp
jns
imul
stos
lcall
into
add
jmp
fldl
add
icebp
jae
mov
addr16
out
add
orb
add
push
push
call
stos
incb
add
mov
cltd
mov
push
rcrl
add
ret
mov
pop
add
outsl
cmpsb
add
into
mov
addb
mov
add
lahf
shrl
add
mov
lea
pop
add
add
push
push
push
push
push
call
push
add
mov
add
add
jle
out
adcl
jo
push
add
jmp
add
xchg
add
add
rolb
push
add
add
fwait
test
add
jl
add
add
pop
mov
xor
push
push
shl
inc
not
push
xor
add
xor
sub
pop
sub
shr
sub
dec
pop
push
push
push
push
push
push
push
call
iret
jne
add
test
add
js
jns
enter
mov
xchg
mov
bound
add
mov
popa
test
sarl
loopne
add
lahf
fsubr
iret
add
testl
add
loope
mov
jl
add
xchg
cmpsb
mov
add
cld
add
add
je
mov
lea
pop
pushl
call
push
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
pop
mov
add
add
mov
add
add
push
cld
add
mov
icebp
stc
mov
add
add
jmp
scas
jle
add
cld
add
jle
pusha
mov
mov
lea
pop
mov
movl
push
push
push
push
lea
push
push
push
push
call
cmpl
cmc
add
add
filds
cltd
jb
jne
repnz
add
add
add
imul
rolb
mov
add
add
ljmp
add
loope
jns
loop
add
add
add
add
out
add
add
add
add
add
sahf
testb
add
and
inc
loopne
push
call
icebp
add
mov
add
mov
mov
int3
addr16
out
add
add
movsl
xchg
mov
jb
add
add
clc
add
pop
mov
xchg
add
add
add
xchg
testl
add
add
xchg
mov
mov
fiadds
fsubp
addr16
add
shlb
add
add
ret
mov
lea
pop
push
push
lea
push
push
push
push
push
push
push
call
mov
or
bound
cmpsb
add
leave
mov
rolb
add
add
arpl
add
add
add
push
movsb
add
pop
jnp
add
mov
add
add
add
mov
mov
lret
add
fisubs
add
lea
pop
pushl
push
lea
push
push
push
push
call
imul
add
add
bound
mov
movb
add
popa
jne
imul
mov
testb
add
add
cltd
xchg
mov
les
orb
add
out
imul
add
jnp
fldenv
mov
add
lods
lret
mov
lea
pop
pushl
push
push
push
push
push
call
jmp
ljmp
in
out
fiaddl
fiadds
xchg
add
pop
add
add
mov
add
add
addr16
add
sti
push
add
ret
enter
jae
jmp
jne
jno
ret
add
push
adc
call
push
push
push
push
push
lea
push
push
push
push
call
xchg
xchg
add
popf
jno
push
les
cltd
add
std
mov
movl
xchg
pop
jp
push
add
add
arpl
les
jne
push
push
lea
push
push
lea
push
push
push
push
push
push
call
movsb
mov
add
add
push
xchg
add
ror
in
sti
add
xchg
lea
push
add
ja
bound
loop
mov
add
xchg
ror
test
add
mov
sub
jne
push
lea
push
call
call
lcall
fdiv
bound
xchg
pop
mov
repnz
cwtl
add
out
into
pop
add
imul
add
pusha
pop
add
pusha
add
add
mov
jnp
mov
mov
add
jnp
test
add
test
bound
pop
call
push
push
sub
dec
push
xor
add
rol
sub
sub
sub
shl
sub
pop
sub
sub
add
pop
push
push
push
push
push
push
push
push
push
push
call
loopne
pushf
add
imul
mov
add
add
add
cmc
add
add
out
xchg
add
enter
cmpsl
jb
cwtl
add
js
cli
add
fiadds
mov
je
pop
jge
mov
fmull
jne
push
push
call
add
js
lret
mov
notl
fsubrl
push
add
les
add
je
cltd
clc
xchg
add
xchg
mulb
jl
mov
lds
add
mov
lea
pop
call
push
push
push
sub
push
or
not
add
sub
add
sub
inc
dec
rol
pop
sub
xor
pop
push
push
call
cwtl
rolb
xchg
add
jmp
add
push
add
jae
lock
mov
jp
mov
pushf
imul
push
add
cli
add
cmpsl
add
fsubr
add
mov
add
out
jb
add
add
addr16
add
add
add
out
pusha
add
pop
mov
xorb
add
lea
pop
push
push
push
lea
push
push
push
lea
push
call
stc
cmpsb
xchg
add
add
jae
add
add
add
mov
lds
insb
int
mov
jmp
add
mov
add
fs
mov
out
mov
mov
add
pop
push
push
lea
push
call
addr16
leave
iret
add
rcll
mov
in
les
xchg
fsqrt
add
add
add
add
add
add
pop
push
fwait
add
loope
divb
sahf
add
add
sahf
shl
add
jecxz
xchg
mov
out
shl
lods
shrl
shl
scas
add
jp
cld
lea
pop
call
mov
push
push
lea
push
call
fwait
addl
add
shll
nop
lahf
xchg
fadds
mov
movl
pop
jl
aad
mov
jnp
jb
add
add
fbld
std
mov
add
push
lea
pop
push
push
push
push
lea
push
push
call
jno
data16
fbld
mov
lret
cld
shr
stc
add
jecxz
aam
ljmp
add
add
add
lahf
movsl
loopne
cwtl
mov
add
fwait
mov
fcmove
jbe
add
out
loope
adcl
add
add
stos
add
fcmovu
out
adcl
mov
lea
pop
push
mov
push
push
push
push
lea
push
push
push
push
call
fiadds
jne
pop
jle
insb
add
add
add
add
add
scas
test
sahf
add
add
add
add
aam
mov
mov
sarl
mov
scas
add
jno
add
mov
add
ja
add
in
push
fadds
mov
add
cmc
enter
add
and
pop
in
lea
push
lea
push
push
push
call
add
imul
mov
mov
add
jb
test
add
add
cld
add
aad
add
cld
ja
mov
push
add
lods
add
add
add
jns
pop
mov
mov
add
add
in
add
mov
test
jecxz
add
add
rorb
mov
add
mov
lcall
out
lods
into
add
lea
pop
add
add
push
push
push
call
cld
mov
roll
arpl
cmc
mov
cltd
push
xchg
test
add
add
movsb
add
outsl
pop
mov
test
je
mov
add
fistpll
add
xchg
add
jge
data16
addl
fwait
add
out
mov
jne
mov
lea
pop
mov
xor
push
lea
push
call
sti
add
add
jnp
xchg
xchg
pop
repnz
fdivrp
aam
pop
fstl
add
aam
add
add
arpl
ljmp
addl
bound
add
add
add
fimull
pop
add
push
push
push
push
call
repnz
ret
je
xlat
add
test
shrl
add
jmp
fiadds
add
add
enter
add
fdivrl
out
sarl
cli
addb
add
mov
add
add
add
mov
aam
addb
add
add
jp
add
rcl
hlt
add
add
ja
add
add
clc
rorl
pop
mov
push
push
lea
push
lea
push
push
call
jne
xchg
add
sahf
xlat
push
mov
add
mov
mov
add
add
xchg
add
add
shll
mov
add
add
fcomps
jle
call
add
add
add
add
call
lea
pop
xor
push
push
push
push
push
push
lea
push
push
push
push
call
add
add
jb
push
movsl
xchg
push
mov
add
push
add
jbe
fistpl
add
add
cltd
lods
cltd
add
enter
pop
fiadds
mov
fidivrs
adc
js
ffreep
mov
add
mov
pop
add
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
lods
cmpsl
iret
xchg
fwait
enter
add
test
repnz
loop
lods
mov
push
lods
jecxz
add
in
add
rolb
add
stc
jno
push
add
fldl
js
mov
cli
popa
add
loope
clc
add
add
insb
nop
add
jbe
jl
arpl
and
add
push
lea
push
push
push
call
cwtl
lret
push
test
out
add
movsb
jge
add
add
fcmovu
sbb
add
pop
add
add
add
icebp
data16
lret
add
test
add
pop
pop
mov
push
push
lea
push
call
movl
lock
sahf
test
cli
sbb
ljmp
add
xlat
add
test
mov
add
mov
add
add
add
fsubrl
add
add
add
add
jle
push
push
out
movsb
add
add
in
jbe
mov
lea
pop
xor
push
lea
push
push
push
push
lea
push
call
add
add
sub
ret
aam
add
add
pushf
fwait
add
jb
test
fcomip
hlt
add
gs
movsb
add
push
nop
incb
add
push
mov
lea
pop
add
push
push
push
push
lea
push
push
push
lea
push
push
call
mov
push
rcrb
add
xchg
add
add
mov
xchg
mov
mov
mov
add
imul
add
add
mov
icebp
add
add
movsl
add
add
add
pop
add
mov
xchg
add
ja
xchg
add
add
push
ljmp
jmp
gs
xchg
stos
add
rorb
push
push
push
push
lea
push
push
push
push
lea
push
call
push
out
cmpsb
push
add
iret
jmp
out
lock
add
add
add
faddl
call
imul
add
adcb
std
jb
stos
fs
shll
mov
lea
pop
mov
push
push
push
push
push
push
push
push
push
lea
push
call
add
add
lahf
pop
xchg
cli
cld
add
loop
lods
pushf
add
mov
add
add
mov
cwtl
popa
ljmp
add
mov
xchg
add
call
xlat
xchg
add
mov
gs
loop
add
mov
xchg
pop
testl
push
add
add
add
int3
lea
pop
xor
push
push
push
push
push
call
mov
add
add
icebp
add
add
pop
add
add
ret
fwait
add
jge
add
mov
push
add
add
add
lahf
jl
add
mov
add
movsl
jge
icebp
bnd
add
jecxz
push
xchg
add
negb
add
shr
add
lret
call
incb
jno
add
mov
jmp
imull
add
add
arpl
fidivs
lea
pop
add
push
push
push
push
push
push
push
push
push
lea
push
call
add
push
add
jne
test
popf
add
add
add
add
mov
mov
add
xlat
add
mov
add
test
jae
add
popa
push
add
add
add
cli
mov
out
add
add
add
jge
add
mov
add
loopne
repnz
mov
lcall
testl
lea
pop
sub
push
push
push
push
push
push
call
out
testb
add
add
pop
cmpsl
mov
add
xchg
add
pop
add
lods
add
add
fld
xchg
add
lret
test
fiadds
mov
lock
jecxz
lds
add
add
andl
sar
out
add
add
rolb
cld
jb
mov
lea
pop
pop
push
push
lea
push
lea
push
push
push
lea
push
lea
push
call
imul
add
mov
add
aad
push
popa
add
push
add
movl
add
add
add
add
add
mov
jmp
add
jnp
add
add
mov
add
add
add
mov
xlat
push
add
mov
pop
stc
mov
scas
add
mov
lea
pop
rep
push
push
push
push
lea
push
push
call
add
add
lret
add
mov
fwait
add
jns
dec
add
mov
jmp
fdivs
popa
fidivl
fadds
add
jle
add
pusha
push
arpl
add
xchg
sarl
add
addb
enter
lcall
add
jne
add
add
mov
aad
push
mov
push
add
lea
pop
pop
push
push
push
lea
push
lea
push
push
call
in
add
out
test
add
nop
add
add
lock
std
add
in
add
test
mov
add
add
pop
mov
je
imul
add
fistps
jle
add
add
add
rorb
mov
push
push
lea
push
lea
push
lea
push
lea
push
push
call
mov
pushf
add
add
stc
mov
arpl
push
add
add
add
pop
add
repnz
add
je
rcrl
lea
popf
add
add
add
pop
loop
filds
add
add
jb
add
add
pop
add
add
push
push
push
push
lea
push
push
push
call
data16
aad
add
pusha
add
add
add
cli
add
insb
arpl
push
jne
flds
ficoms
add
mov
leave
pushf
popa
mov
fistpll
add
insb
add
mov
je
push
fldl
out
shlb
cld
lea
pop
add
push
push
call
add
cli
movl
add
push
adcb
add
ficompl
lock
add
ret
add
lock
add
add
add
in
push
pop
add
add
jp
cltd
call
add
add
mov
mov
pop
add
add
int3
lea
pop
mov
xor
push
push
call
sbbl
add
add
mov
add
imul
mov
add
add
add
mov
add
add
mov
push
adcl
loop
add
xchg
in
add
test
aam
cmpsl
mov
add
hlt
lea
pop
mov
xor
push
add
add
add
pop
mov
xor
push
shl
add
pop
add
push
dec
shr
shl
pop
add
push
push
push
push
lea
push
push
push
push
call
add
add
sahf
push
jo
add
add
arpl
pop
in
lahf
popa
jbe
shrb
insb
testl
add
loope
add
add
mov
loopne
push
push
push
add
xchg
scas
je
sbb
out
jbe
xchg
xchg
in
add
sti
fildll
jo
lret
fs
lea
pop
mov
push
push
rol
xor
push
or
not
add
add
ror
dec
sub
ror
sub
sub
pop
lea
pop
push
shr
pop
pushl
push
shr
shr
add
pop
call
push
push
lea
push
call
out
lock
add
loop
jne
lret
cmc
add
jbe
push
add
repnz
add
cmpsw
add
jmp
add
fistl
or
push
push
push
sub
push
xor
add
lea
sub
dec
sub
shl
pop
dec
not
pop
push
lea
pop
push
push
push
dec
sub
add
pop
call
push
xor
shl
rol
pop
mov
push
push
push
push
push
push
push
push
push
push
call
push
lock
xchg
popf
loope
testb
xchg
enter
add
add
les
add
imul
add
push
xchg
mov
add
movsb
lret
jge
add
jae
add
lods
add
popf
lahf
jge
add
cwtl
add
jae
add
add
lods
add
add
add
add
add
pop
leave
insb
add
mov
lea
pop
push
push
push
call
aam
push
jne
cmp
add
addr16
add
add
pop
mov
movsl
mov
xchg
push
mov
mov
xchg
add
addl
popa
add
add
push
pop
add
add
add
mov
in
mov
add
std
add
sahf
jbe
lret
add
les
pop
in
push
push
push
call
add
shlb
loopne
add
fimuls
mov
fiadds
add
sahf
lods
push
iret
add
popa
add
add
mov
add
filds
push
lcall
xchg
add
add
fiadds
add
jmp
cmpsb
out
mov
cwtl
add
loope
cltd
add
cld
sti
flds
add
stc
add
mov
lea
pop
add
push
lea
push
lea
push
call
call
test
add
add
add
mov
stos
add
cmpsl
add
lods
add
mov
enter
jno
pop
in
cld
jb
add
stos
add
lret
add
add
jae
add
xlat
mov
mov
lea
pop
add
push
push
push
push
push
call
leave
xchg
mov
add
rolb
idivl
add
in
mov
add
jle
add
mov
roll
add
add
in
add
mov
add
push
add
jmp
fnstsw
mov
lea
pop
add
mov
xor
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
add
fcomps
jae
add
mov
fiadds
cmpsb
test
shll
lock
data16
imul
fnstenv
mov
add
mov
add
and
add
push
push
call
add
add
data16
fxch
xchg
add
js
xchg
jmp
add
push
mov
add
pop
mov
add
icebp
in
add
add
fstps
push
flds
add
add
int
stc
add
pop
imul
iret
insb
mov
mov
lea
pop
push
mov
push
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
push
add
add
mov
add
add
aad
add
shll
add
cmpsb
jns
roll
mov
in
insb
call
out
xchg
iret
add
rcr
mov
add
add
add
jo
add
imul
add
pop
xor
push
push
push
push
push
call
rclb
out
imul
subl
pop
add
add
add
add
out
mov
add
add
add
lds
jns
add
add
data16
pushf
add
imul
out
adcb
jno
aam
add
add
movsl
insb
add
pop
add
push
push
push
push
push
push
push
push
call
add
add
push
add
push
mov
add
push
add
lock
arpl
fwait
add
clc
add
push
test
fisubl
aam
addl
add
add
mov
fsubrl
fcoml
push
jne
add
imul
aam
bound
pop
add
push
push
push
push
push
push
push
push
call
mov
testl
aam
flds
imul
add
add
add
jae
in
xchg
lds
add
add
add
subb
add
add
fnstcw
fs
add
scas
cld
add
aad
add
mov
lea
pop
pop
mov
xor
push
inc
not
pop
rep
mov
xor
push
lea
pop
or
je
push
push
call
add
add
loopne
stos
repnz
sahf
test
xchg
add
xchg
add
add
pop
push
out
add
add
mov
out
loope
add
jbe
mov
mov
add
or
xor
pop
jae
push
push
push
push
lea
push
lea
push
push
push
push
push
call
add
add
lods
add
add
cmpsl
pop
mov
pop
mov
mov
add
push
push
cli
add
aad
mov
add
out
jae
fwait
add
xchg
jne
add
add
jno
out
add
out
jb
scas
stos
lock
std
xchg
add
push
jns
pushf
add
pop
xor
push
push
push
push
lea
push
lea
push
push
call
repnz
push
add
jno
add
add
loope
fadd
mov
add
add
add
mov
add
cmpl
xchg
add
fildll
pushf
in
mov
test
fmull
les
add
push
push
push
push
lea
push
push
push
call
push
add
add
add
fwait
add
pop
lea
add
insb
scas
mov
lods
rclb
jbe
jle
add
cld
push
test
add
add
mov
into
add
in
out
add
pop
mov
push
push
push
push
push
push
push
push
push
lea
push
call
aam
add
xchg
add
roll
add
scas
fwait
add
stos
mov
shrb
pop
icebp
jns
push
movsl
fs
add
cmpb
pop
xor
push
push
push
call
add
ja
add
add
lods
rclb
jae
cltd
lea
jecxz
in
rolb
cld
loopne
add
push
add
add
add
test
mov
fsubrl
jecxz
add
mov
lea
pop
add
push
push
push
lea
push
push
call
into
testl
je
insb
add
jecxz
mov
mov
pop
add
add
flds
clc
add
in
push
addr16
xlat
add
fcmove
cmc
pop
add
clc
mov
fcoms
add
add
cli
mov
lea
pop
add
add
push
sub
lea
lea
dec
pop
push
mov
push
push
push
push
push
push
call
mov
add
mov
push
idivb
stos
in
rcr
add
add
add
addb
mov
push
jle
sarb
jmp
mov
rcrb
data16
adcl
add
add
enter
jge
add
fwait
add
movsb
mov
lea
pop
xor
push
lea
push
push
call
mov
add
add
not
addl
add
scas
roll
pusha
out
imul
clc
add
stos
roll
in
scas
add
add
add
fcomps
arpl
pop
mov
hlt
lea
pop
add
push
dec
pop
add
push
add
sub
pop
pop
push
lea
pop
rep
push
xor
pop
mov
push
push
push
push
lea
push
push
push
push
push
push
lea
push
call
cmc
push
out
add
add
scas
mov
cwtl
add
jns
add
repnz
hlt
mov
add
push
add
pop
scas
add
pop
fadds
add
je
cmpsb
add
add
loopne
jl
sahf
ljmp
jmp
js
jge
pop
add
mov
lea
pop
xor
push
push
push
lea
push
lea
push
lea
push
call
fs
jae
jp
nop
faddl
ficompl
add
add
add
add
pushf
add
mov
int
mov
push
cmc
adcl
test
mov
jns
lea
jle
cmpsb
xchg
add
out
add
lea
pop
add
push
push
push
lea
push
push
lea
push
push
push
call
pusha
pop
mov
add
pop
push
jl
mov
lods
nop
xchg
add
outsl
ficompl
clc
popf
add
add
pop
add
add
add
add
pop
lcall
mov
and
leave
je
push
push
push
push
push
push
lea
push
push
push
push
call
lret
add
add
roll
add
cmpb
add
add
add
add
mov
lret
jecxz
into
iret
lods
jbe
add
add
xchg
mov
mov
add
lcall
add
add
add
test
in
add
add
leave
pop
fs
add
pop
mov
push
inc
sub
add
xor
pop
add
push
lea
push
push
push
push
push
call
add
pop
add
add
int
add
add
add
roll
add
add
mov
lea
add
arpl
loope
jo
addl
int
popl
xchg
mov
add
leave
mov
sbbb
add
pusha
push
add
pop
add
rep
push
pop
pop
push
push
add
push
sub
add
add
sub
lea
sub
pop
inc
lea
pop
push
push
push
lea
push
push
call
xchg
add
add
add
add
xchg
add
mov
inc
add
nop
add
add
mov
add
add
aam
add
mov
test
scas
out
add
shl
add
scas
add
add
test
mov
out
jle
mov
imul
pop
push
sub
dec
inc
pop
mov
push
push
call
addb
add
js
add
neg
loopne
add
movsb
fcomip
test
jne
add
lcall
out
and
mov
add
add
add
popf
add
mov
in
jne
movsl
add
add
ficompl
cmpsl
popa
popa
mov
rcl
sarl
push
add
pop
mov
push
push
push
push
push
push
push
push
call
add
lock
add
add
add
lea
fnstsw
stos
mov
into
push
add
add
les
popa
pop
xorb
add
add
add
add
xchg
pop
jnp
pop
add
cmpsl
int3
sbbb
aam
pop
mov
jge
jo
add
mov
lea
pop
mov
push
lea
push
lea
push
push
push
push
push
call
fld
addb
add
fwait
push
stos
add
jp
add
lahf
scas
rclb
lret
sbbl
mov
xchg
add
add
mov
xchg
scas
orl
jmp
push
sub
rol
pop
push
mov
push
push
push
push
push
lea
push
push
push
call
add
stc
scas
add
push
add
add
ficomps
add
ret
mov
add
stos
loop
add
popa
add
add
pop
roll
add
ret
rcrb
add
testl
add
add
in
icebp
add
testl
add
out
mov
je
in
add
add
add
pop
add
push
push
lea
push
call
test
sar
mov
add
pop
push
push
jae
lods
mov
aam
add
mov
add
testl
add
mov
out
sahf
add
movsl
add
lret
mov
addl
mov
add
addl
add
call
lahf
add
pusha
jno
add
mov
aam
bound
push
push
lea
push
lea
push
lea
push
push
call
hlt
add
add
pop
add
add
pop
add
add
jae
add
test
add
add
cli
lcall
add
fwait
add
stc
popf
test
add
in
loopne
pop
fcmovnbe
add
rcrl
add
add
add
pop
push
push
push
push
push
lea
push
call
mov
add
fldl
push
add
push
add
add
mov
add
pop
pop
aam
add
add
mov
add
mov
xchg
mov
loopne
push
test
addr16
mov
rcrl
add
stos
in
loopne
out
rorw
add
add
into
rolb
mov
lea
pop
push
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
add
push
addl
add
pop
rclb
jno
pop
add
ljmp
popa
jp
lds
stc
xchg
add
jbe
add
fadd
push
add
add
add
fistpll
mov
fsubl
fstpt
add
stos
out
je
pusha
xchg
add
mov
lea
pop
mov
push
shl
inc
dec
not
pop
pop
push
xor
add
pop
pop
push
inc
sub
ror
inc
pop
pop
pop
push
sub
inc
pop
leave
push
push
push
push
lea
push
push
push
lea
push
push
call
fwait
mov
add
add
enter
add
add
add
cltd
add
add
add
xchg
faddl
clc
hlt
mov
xchg
popl
jns
leave
mov
test
add
lock
mov
add
add
jae
loope
mov
mov
pushf
add
xchg
add
push
mov
lea
pop
ret
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
pushf
loopne
add
add
repnz
add
add
xchg
div
rcl
in
add
mov
sbb
addl
push
mov
pop
lahf
mov
gs
add
imul
xchg
push
jl
outsl
mov
add
jle
add
test
mov
add
jge
add
push
cltd
pop
call
mov
lea
pop
push
push
push
push
push
lea
push
call
add
cwtl
imul
jge
mov
add
test
jo
add
mov
test
add
out
add
jge
add
add
fcom
xchg
jns
add
add
sti
testb
add
mov
cld
lea
pop
mov
add
push
lea
push
push
call
movsb
push
add
aam
xchg
fildl
jae
shl
lret
jmp
jl
fcmovbe
add
mov
add
xchg
cwtl
add
push
mov
lahf
mov
iret
movl
add
repnz
hlt
imul
push
push
push
push
push
call
push
iret
add
add
add
add
pop
add
jbe
add
repnz
add
shr
lods
flds
out
push
add
in
js
lods
add
add
add
jo
push
cltd
lret
repnz
add
test
add
push
icebp
add
lods
pop
fimull
pop
push
push
sub
add
dec
pop
push
push
push
push
push
push
lea
push
lea
push
push
call
mov
add
shlb
add
lea
mov
roll
jne
mov
push
incb
fldl
add
add
loop
loop
add
jecxz
add
mov
filds
outsl
fidivrs
movsl
jecxz
pusha
add
scas
add
xchg
test
fiadds
mov
pop
add
lods
push
push
add
mov
lea
pop
movl
push
push
push
push
push
push
lea
push
push
push
lea
push
call
mov
mov
mov
xchg
roll
add
jo
cmpsb
push
int3
add
pusha
mov
sar
xchg
ror
add
pop
add
enter
rcr
add
add
add
add
add
jecxz
pop
jns
add
xchg
push
jae
mov
lea
pop
addl
test
je
push
dec
not
add
pop
mov
push
lea
push
lea
push
push
push
call
add
cmpsb
push
add
loop
out
mov
add
lds
mov
add
xorb
jnp
jge
into
jmp
add
add
xchg
add
orl
pop
pop
push
push
push
push
lea
push
call
lods
xchg
test
add
add
fwait
mov
add
jmp
mov
je
addb
rol
add
add
add
push
call
mov
add
cmpsb
mov
add
add
mov
pop
add
push
out
fiaddl
add
xorb
mov
adc
pop
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
mov
pushf
mov
add
add
rcll
add
add
add
arpl
add
push
add
aad
test
cmpsb
pop
jbe
mov
add
add
add
jbe
jns
xchg
add
insb
movsl
add
lea
pop
pop
leave
push
push
lea
push
push
lea
push
call
add
push
loope
je
add
cmpsb
clc
add
add
jnp
xlat
add
popf
in
xchg
mov
add
add
test
cld
push
jl
fldenv
add
add
stos
jl
add
add
add
cli
out
std
out
int3
lea
pop
ret
push
push
push
push
lea
push
push
call
push
cld
lods
ror
data16
add
rolb
data16
add
add
jmp
movsb
fldl
int
ljmp
add
jno
andl
push
fcmove
add
int3
in
add
jl
xchg
add
faddl
lret
in
mov
ljmp
xchg
mov
faddl
add
jbe
lret
fmull
push
push
push
push
push
lea
push
push
push
lea
push
call
leave
lret
jle
outsl
add
xchg
mov
mov
enter
rorl
add
ja
cli
fiadds
add
add
add
add
pushf
mov
xchg
add
shrb
add
add
movl
jbe
jae
jne
push
add
add
leave
mov
lea
pop
mov
push
lea
push
call
pop
add
mov
in
insb
mov
shlb
fdivs
sahf
add
mov
add
lret
add
mov
cwtl
xchg
xchg
add
add
test
add
lods
arpl
test
lret
add
add
movsl
add
add
mov
out
lcall
pop
add
push
push
push
push
push
call
push
andl
lea
xchg
add
add
in
add
add
shr
addr16
sti
jmp
add
add
cmpb
push
std
lret
push
mov
add
add
lea
pop
push
push
lea
pop
push
push
push
lea
push
push
push
lea
push
push
lea
push
push
push
push
call
add
popf
push
add
add
out
lock
mov
add
pop
movsb
lret
add
add
add
add
fadds
jmp
add
shr
pop
add
arpl
push
addl
jo
xchg
mov
pop
add
push
sub
inc
cld
add
add
push
not
not
pop
addl
push
push
push
lea
push
lea
push
push
push
push
push
call
test
push
cltd
cld
fwait
ja
mov
add
loopne
arpl
arpl
add
fs
icebp
add
fcoms
je
add
mov
loope
add
add
push
lock
fwait
add
in
add
add
add
mov
jo
add
mov
out
xchg
add
add
lds
out
pop
fs
mov
jo
add
pop
push
call
push
inc
inc
add
pop
mov
push
xor
pop
pushl
push
push
not
sub
add
pop
push
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
hlt
mov
jne
add
ljmp
lods
add
stos
add
add
jle
add
ja
in
add
notb
jl
add
mov
add
jae
push
add
lea
js
add
cld
lea
pop
call
cmpl
jne
push
lea
pop
pop
push
add
pop
pop
pop
push
add
shr
not
pop
pop
push
not
not
not
not
pop
leave
push
lea
push
push
push
push
push
lea
push
call
add
in
add
push
data16
loop
mov
add
insb
arpl
add
add
add
in
mov
push
add
pop
pusha
in
add
mov
add
mov
int3
nop
hlt
loop
add
data16
in
pop
lcall
in
movsl
add
xchg
add
scas
add
push
fwait
add
add
lock
lock
pop
ret
push
shl
pop
push
mov
push
pop
add
push
push
push
push
push
push
push
push
push
call
add
add
imul
add
lahf
cmpsl
push
add
add
add
lret
add
add
push
jle
mov
ficoml
push
add
add
jae
add
mov
mov
popf
add
jp
stc
cli
fst
add
ret
push
mov
add
popa
mov
mov
enter
cmpsl
loopne
cmpsl
add
jecxz
int3
lea
pop
push
push
rol
shr
ror
pop
push
push
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
add
pushf
fwait
add
add
je
add
cwtl
add
add
jns
add
add
enter
rolb
add
pushf
push
add
mov
movsb
sarb
xchg
add
add
add
rolb
mov
add
push
push
pop
add
jb
add
fsubp
pusha
add
test
pop
movl
push
pop
push
push
ror
pop
call
push
push
push
push
call
cmpsb
mov
mov
add
add
add
cltd
data16
les
add
add
add
push
movb
pop
xchg
movsl
add
loopne
pop
je
cld
add
popa
aad
add
add
lahf
fadds
add
rolb
add
add
mov
add
jo
jbe
jo
fmull
or
xchg
sbb
gs
push
push
call
add
add
in
std
call
loope
add
je
add
add
loope
testl
add
jne
add
cmpsl
out
add
mov
mov
insb
mov
lea
pop
call
push
lea
push
push
push
push
push
push
lea
push
push
push
call
add
lret
xlat
imul
add
add
add
stos
inc
in
mov
add
rolb
add
xchg
cwtl
ljmp
test
stc
icebp
jae
add
mov
lea
pop
subl
push
dec
inc
add
pop
cmpl
jne
push
inc
pop
pop
push
push
push
push
push
call
add
xchg
add
fdivr
add
sarb
lret
test
push
lds
je
jp
loopne
add
cwtl
out
add
jae
add
mov
add
mov
mov
xchg
jl
jo
cld
in
mov
arpl
pop
push
shr
lea
add
pop
pop
pop
push
sub
shr
pop
leave
push
lea
push
push
push
push
lea
push
push
push
call
add
add
cmpsb
mov
testb
aam
jecxz
add
add
add
add
testb
jae
fst
lret
add
fstl
add
add
test
cld
add
mov
into
mov
movsb
add
movsb
std
add
pop
std
loopne
test
add
push
fiadds
add
jno
les
push
push
push
push
push
call
add
sti
fstpt
nop
add
test
xchg
pushf
jmp
not
lahf
movsl
add
scas
mov
div
cld
mov
sarb
jecxz
fcoms
enter
add
int
pushf
in
sahf
add
push
mov
test
add
add
repnz
pop
add
xchg
in
scas
fldl
mov
lea
pop
push
push
shl
inc
rol
pop
mov
push
push
push
push
call
add
jle
fdivs
jp
lds
lcall
add
add
xchg
add
add
xlat
std
jne
add
add
jp
add
add
add
add
jno
cmc
add
add
loope
push
lahf
add
int3
lea
pop
add
push
push
lea
push
push
push
lea
push
push
push
call
push
mov
pop
imul
pop
ljmp
sti
add
add
add
hlt
les
xchg
add
mov
lods
pop
cltd
add
rcrl
in
pop
mov
mov
lea
pop
push
push
add
pop
push
push
inc
xor
not
ror
pop
push
push
push
call
jbe
add
stc
add
xchg
arpl
mov
fwait
sti
add
arpl
xchg
pop
lret
pop
add
addr16
add
add
into
mov
cld
lahf
mov
add
icebp
mov
lea
pop
push
push
sub
xor
shl
rol
pop
mov
lea
push
push
lea
push
push
call
add
add
add
jnp
mov
add
roll
ftst
add
cltd
mov
add
je
mov
add
lahf
xchg
je
xlat
out
into
add
add
add
js
add
add
movsb
lret
add
add
add
mov
add
mov
lea
pop
sub
mov
push
xor
ror
sub
sub
pop
shr
add
push
inc
xor
pop
mov
push
add
ror
pop
mov
push
shl
shr
shl
pop
add
add
push
inc
pop
mov
mov
push
lea
push
push
lea
push
push
push
push
push
call
in
roll
roll
push
mov
add
jno
add
xchg
jp
je
insb
add
outsl
imul
ret
js
in
add
lods
in
sti
add
addb
enter
jb
ljmp
imul
and
pop
outsl
jne
cmp
jne
push
inc
add
pop
mov
movl
push
lea
dec
pop
jmp
push
pop
mov
push
lea
push
push
lea
push
push
lea
push
push
push
call
pop
mov
add
add
jo
mov
add
lods
xchg
out
mov
rorb
add
cli
add
add
mov
pop
jo
addr16
lea
pop
mov
push
lea
push
call
add
push
testl
int
xchg
cmpsl
cmpsl
add
test
add
pop
add
fucomi
add
add
fdivs
lods
add
rolb
mov
add
pop
add
add
add
add
mov
hlt
mov
aam
int
jbe
add
popa
or
ljmp
out
add
add
push
lea
push
lea
push
push
call
add
out
add
nop
xchg
add
lods
add
mov
xlat
add
out
add
fcom
add
add
imul
add
add
cld
lea
pop
mov
push
push
lea
push
push
push
push
push
push
push
call
les
imul
add
push
add
imul
add
loop
mov
call
call
cmc
add
add
add
add
lods
mov
jmp
add
add
mov
scas
fwait
pop
mov
add
xchg
mov
lea
pop
movl
jmp
push
dec
sub
shr
pop
mov
push
lea
push
push
push
push
push
call
enter
testl
add
fimull
cmpl
flds
lds
add
adcl
lds
xchg
data16
lods
add
filds
add
mov
fldl
add
loope
jle
add
add
test
shll
nop
pop
add
loope
add
jae
pop
fwait
mov
in
icebp
mov
lea
pop
mov
cmp
jne
push
push
lea
push
push
push
push
lea
push
call
sbbl
add
add
add
add
add
mov
lcall
push
add
add
add
add
loopne
pop
add
lahf
pop
xchg
add
add
pusha
mov
add
lea
xchg
add
add
add
rcrl
clc
addb
add
add
aam
add
add
pop
mov
push
push
call
mov
lods
push
hlt
pop
call
add
test
int
add
mov
add
add
pop
mov
rcr
out
movsl
add
jbe
add
lea
pop
movl
jmp
push
push
push
push
push
push
call
jmp
rolb
int3
add
add
add
mov
add
roll
int
pop
js
add
add
add
out
faddl
addr16
rcl
add
roll
add
add
add
popa
add
push
mov
add
mov
out
sahf
add
fcomp
jb
add
add
nop
pop
arpl
out
add
xchg
repnz
pop
bound
sbb
inc
cld
push
dec
ror
pop
cmpw
jne
push
push
push
push
push
push
push
call
fwait
add
lock
popf
stos
nop
add
add
add
jb
negb
arpl
add
add
push
add
jno
iret
fisubs
xchg
xchg
movl
cld
add
std
roll
add
in
add
add
add
cwtl
mov
lea
pop
mov
push
lea
push
push
lea
push
lea
push
push
push
lea
push
push
call
push
add
push
xlat
pop
jb
mov
stos
sahf
fdivl
bound
add
jno
imul
push
out
mov
in
arpl
mov
bound
movsb
mov
movsl
mov
not
xchg
test
jns
flds
roll
mov
add
cld
lea
pop
movl
push
push
push
lea
push
push
push
push
call
add
mov
rclb
add
add
add
add
add
pop
rcr
add
add
mov
add
movsl
loopne
mov
add
add
popl
pusha
add
push
add
mov
test
in
sti
add
in
add
add
push
addl
int3
lea
pop
jmp
push
lea
push
lea
push
push
push
call
add
data16
jb
in
push
mov
add
jae
fadds
lods
popl
add
mov
cmpsl
add
mov
int3
lods
add
add
data16
lods
jns
add
jl
mov
add
sahf
add
add
pop
mov
add
mov
lea
pop
pushl
push
shr
add
xor
pop
pop
push
lea
push
lea
push
push
push
push
push
lea
push
lea
push
lea
push
call
loope
hlt
ljmp
js
xchg
add
add
scas
jmp
ret
out
fadds
add
xlat
add
add
add
add
add
jge
add
add
add
add
roll
add
bound
pop
mov
mov
push
pop
mov
push
push
rol
not
shl
shr
push
or
not
add
inc
sub
sub
inc
shr
not
pop
sub
shl
dec
pop
push
rol
pop
push
push
lea
rol
pop
call
push
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
add
jp
sti
lret
xchg
ret
add
add
scas
jne
add
in
mov
add
add
mov
add
mov
add
add
icebp
push
out
lods
add
mov
add
jle
add
add
mov
pop
mov
lea
pop
cmpl
je
push
push
sub
push
sub
add
ror
lea
sub
lea
rol
sub
inc
pop
ror
lea
rol
pop
push
shr
dec
pop
push
call
push
push
push
push
push
push
push
push
push
lea
push
call
push
cmpsl
addr16
add
jbe
sbbb
adcb
add
add
add
cltd
lret
add
repnz
test
imul
mov
xchg
add
jb
add
scas
fildl
add
jle
add
add
add
std
add
mov
mov
cld
add
push
repnz
add
mov
sub
js
int3
fldz
ret
fisttps
add
push
push
add
push
push
pop
add
sub
sub
inc
pop
ror
add
sub
pop
push
shr
sub
pop
push
push
not
ror
inc
dec
pop
call
push
push
push
push
call
add
mov
ret
add
xchg
pop
pop
add
stos
add
add
jecxz
mov
mov
add
test
add
add
pop
pop
add
bound
pop
cmpl
je
push
push
add
shl
push
xor
add
shl
xor
shr
sub
xor
pop
xor
pop
push
not
add
rol
pop
push
push
push
lea
push
push
push
push
push
push
push
push
call
mov
cmpl
jns
add
icebp
scas
into
add
out
addb
add
jmp
je
arpl
nop
fiadds
pusha
add
add
mov
add
mov
lea
pop
call
push
rol
pop
cmpl
je
push
push
dec
add
not
push
xor
add
xor
lea
sub
shl
shl
pop
add
pop
push
push
push
call
addb
icebp
add
add
mov
add
mov
in
call
xlat
add
int3
clc
mov
add
js
push
push
push
int
add
fldl2t
iret
in
lcall
pop
add
fistps
add
jl
mov
stos
pusha
add
add
pop
push
push
rol
add
rol
pop
call
push
push
push
lea
push
call
stos
add
jp
movsl
add
add
pop
lea
xchg
lock
add
addb
add
pushf
add
add
add
popa
add
add
mov
loop
fucomi
fsubp
pop
add
andl
add
mov
mov
popa
stos
movsl
lahf
push
iret
add
push
testl
shll
data16
cmp
rol
je
push
push
ror
shr
push
or
inc
add
xor
shl
sub
ror
xor
dec
pop
dec
inc
pop
push
xor
dec
inc
add
pop
push
push
shr
xor
dec
pop
call
push
push
push
push
lea
push
lea
push
push
push
call
xchg
jp
fiaddl
out
lret
fbld
add
add
xchg
ret
add
xchg
pop
popf
add
add
add
stos
aam
pushf
js
add
add
mov
out
stos
roll
mov
loope
pop
add
nop
mov
lea
pop
cmpl
je
push
push
lea
dec
sub
push
or
inc
add
lea
sub
shl
lea
pop
sub
sub
lea
pop
push
push
push
push
push
push
push
lea
push
call
frstor
mov
popf
pop
add
mov
hlt
sti
add
in
ja
add
je
push
add
cmpsl
testb
add
add
jmp
pop
add
add
lahf
add
pop
push
add
in
mov
lea
pop
push
call
push
push
lea
push
push
push
push
lea
push
push
push
push
call
add
movsb
pop
mov
add
add
test
mov
jge
add
pop
mov
loopnew
in
in
mov
add
add
cld
nop
pop
pop
add
pop
cmpl
je
push
push
dec
push
xor
add
inc
sub
inc
shr
pop
shr
sub
ror
pop
push
lea
push
push
push
lea
push
push
push
push
call
outsl
push
cmpsb
test
add
faddl
push
push
add
add
add
gs
pop
fwait
mov
push
add
imul
add
aad
add
xchg
add
fwait
add
add
les
test
add
lock
movsb
add
insb
add
pop
push
push
ror
add
add
shr
pop
call
push
push
push
push
lea
push
push
push
lea
push
push
push
call
fiaddl
add
add
lret
into
lods
add
pop
add
rcr
add
mov
mov
add
nop
add
out
out
pop
rolb
add
add
fimull
cli
loop
rorl
pop
cmpl
je
push
push
sub
rol
lea
inc
push
and
add
sub
add
lea
lea
sub
ror
pop
add
add
rol
shr
pop
push
shl
xor
add
pop
push
push
push
push
push
lea
push
push
push
push
call
add
add
add
add
jb
add
push
mov
inc
mov
jecxz
scas
test
mov
hlt
add
add
add
pop
call
cmpl
je
push
push
sub
push
or
not
add
sub
add
sub
add
pop
pop
push
push
call
add
subb
test
jle
shl
push
jo
push
out
jae
addb
jp
add
out
loope
mov
mov
add
add
mov
lock
mov
add
mov
add
mov
jge
add
lods
add
add
pop
push
push
not
pop
call
push
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
add
add
cmpsl
filds
add
jb
jl
mov
add
ret
push
cwtl
stos
push
add
mov
push
push
fistpll
add
mov
add
orl
add
cli
mov
idiv
lahf
andl
lods
cmpsb
pop
mov
pop
mov
add
pop
cmpl
je
push
push
rol
rol
dec
push
or
not
add
ror
ror
sub
sub
sub
pop
dec
rol
pop
push
rol
pop
push
push
dec
add
pop
call
cmpl
je
push
push
rol
sub
dec
push
push
pop
add
add
lea
sub
sub
ror
shl
pop
rol
pop
push
push
lea
push
push
lea
push
push
push
push
push
call
add
mov
add
pop
add
pop
shl
addb
fneni(8087
add
test
add
add
cmc
jmp
jae
xchg
hlt
add
add
test
add
add
nop
push
mov
xlat
mov
fs
xchg
add
mov
mov
lea
pop
push
push
lea
push
push
push
push
lea
push
push
call
shl
sti
push
jae
add
stos
xchg
faddl
outsl
mov
add
add
aad
in
push
test
add
mov
mov
add
add
pusha
add
gs
lock
ljmp
addb
add
pusha
add
mov
mov
jae
in
mov
add
fwait
jae
add
cld
lea
pop
call
push
sub
pop
cmpl
je
push
push
add
shr
not
inc
push
or
not
add
shr
sub
xor
pop
not
sub
pop
push
lea
lea
pop
push
call
push
lea
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
jne
add
mov
add
mov
cmc
adcb
cli
lds
push
add
add
out
add
into
add
pop
pop
cld
add
add
add
in
add
cltd
push
sub
js
xor
pop
ret
sbb
add
mov
push
sub
pop
movl
push
shr
shl
add
pop
jmp
xor
push
push
push
push
push
push
lea
push
lea
push
push
call
add
add
mov
lods
add
add
pop
mov
jo
flds
jmp
add
cmpsl
orb
cmpsb
rolb
add
mov
sbbl
cld
lea
pop
pop
pop
push
lea
push
lea
push
push
push
push
push
push
call
add
cli
scas
cltd
mov
divl
add
add
push
xchg
insb
jge
xchg
add
cmc
jmp
add
ret
add
std
in
into
cld
test
clc
mov
add
movsb
add
add
call
add
add
nop
filds
add
add
add
xchg
mov
lea
pop
pop
pop
push
xor
sub
pop
leave
ret
push
push
push
push
push
lea
push
push
push
push
call
jo
loope
stc
add
add
add
add
add
add
clc
push
call
add
mov
in
add
in
xchg
mov
add
aam
rolb
addr16
add
outsl
ja
bound
push
push
addb
lods
cmc
js
mov
add
xchg
add
mov
lea
pop
push
mov
push
push
push
push
push
push
push
call
mov
out
mov
add
add
add
add
notb
add
ja
add
add
add
mov
pop
js
movsb
add
stc
iret
jno
scas
mov
lea
pop
add
cmpl
jne
push
push
inc
add
push
push
pop
add
shl
xor
sub
sub
shl
pop
rol
dec
dec
pop
push
sub
shl
pop
pushl
push
push
call
add
mov
add
add
cmpsl
add
mov
xchg
push
add
add
fdivl
add
add
or
add
fwait
add
add
add
mov
fildl
jns
add
add
shr
pop
data16
add
adcl
add
add
mov
lea
pop
call
push
not
pop
push
push
ror
xor
lea
pop
call
push
push
push
push
push
push
push
call
add
enter
add
flds
mov
add
add
push
add
ret
add
add
add
mov
add
lret
add
add
mov
push
flds
int
xchg
xchg
outsl
loopne
cld
lea
pop
jmp
push
push
push
call
addb
mov
scas
shlb
xchg
pop
lds
add
add
add
xchg
arpl
jge
arpl
loope
push
nop
add
add
add
jp
add
add
mov
std
add
int
incb
flds
in
mov
icebp
mov
add
pop
cmpl
je
push
push
push
push
push
lea
push
push
lea
push
call
xchg
imul
add
add
sahf
call
pop
add
add
add
add
mov
popl
lcall
aad
enter
stc
arpl
add
int3
lea
pop
cmpl
jne
push
not
rol
add
shl
pop
leave
push
push
push
lea
push
push
push
push
call
add
xchg
xchg
fidivs
bound
add
aam
leave
xchg
add
add
gs
mov
in
mov
loop
int3
add
lods
lods
leave
xchg
stos
popa
iret
push
xchg
leave
cli
test
add
fs
ja
xchg
add
add
xlat
add
pop
mov
stos
xchg
testl
les
pop
push
push
lea
push
push
lea
push
push
push
push
call
add
fsubp
aad
add
shll
mov
jnp
add
cld
into
add
incb
out
add
testb
lods
xchg
add
ret
add
add
mov
add
loopne
add
cmpsl
ljmp
lea
pop
pop
pop
push
inc
ror
pop
pop
push
push
call
clc
add
xchg
add
mov
nop
test
mov
mov
test
add
in
clc
add
mov
add
lock
add
int3
push
lock
addr16
cltd
idivb
add
incb
jle
jl
out
pusha
add
add
mov
xlat
jle
rolb
add
add
push
popa
or
add
push
push
push
lea
push
lea
push
push
call
push
sahf
cli
jne
add
int
popf
jne
push
testb
lds
imul
icebp
add
xchg
fnsave
add
jmp
add
add
repnz
add
cli
addr16
lea
pop
ret
push
ror
pop
jmp
cmpl
jne
push
push
xor
push
xor
add
lea
add
sub
shl
not
lea
pop
rol
pop
push
sub
shl
pop
pushl
push
lea
push
push
push
call
mov
mov
add
add
mov
jmp
pop
test
pop
fiadds
add
add
add
add
je
add
in
in
int
popf
add
iret
rolb
jnp
add
pop
call
push
lea
push
push
lea
push
push
push
push
push
call
add
add
add
pusha
mov
cmpsb
add
mov
add
pop
pop
leave
cld
add
scas
mov
cwtl
add
push
pop
add
add
stos
loope
push
add
lahf
lods
add
add
xchg
jl
add
mov
add
rcr
add
pop
push
push
push
lea
push
push
call
add
add
fiadds
add
xchg
out
mov
add
add
pop
stos
jno
call
rclb
add
out
add
cli
mov
mov
add
add
add
in
add
add
mov
lea
pop
call
jmp
push
push
push
call
add
pusha
pop
jae
jb
pop
rolb
test
add
cmpsb
add
add
add
faddl
lods
add
jne
pop
lods
xchg
mov
popf
sti
out
jb
push
sbb
mov
lea
pop
cmpl
jne
push
dec
ror
xor
pop
mov
push
sub
lea
sub
pop
mov
push
xor
pop
push
push
push
rol
push
or
inc
add
sub
not
xor
shl
shl
pop
lea
sub
pop
push
shl
shl
pop
pushl
call
push
push
push
xor
add
add
sub
not
shl
pop
pop
push
sub
ror
dec
not
pop
pushl
call
push
lea
xor
add
pop
call
push
push
sub
sub
ror
push
push
pop
add
rol
dec
sub
shl
pop
ror
pop
push
lea
push
push
call
add
mov
addb
mov
out
stos
add
leave
lret
outsl
add
mov
jns
mov
add
add
pop
bound
outsl
add
add
jge
jae
aam
bound
pushl
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
stos
add
mov
cltd
loop
data16
shrb
add
aad
mov
movsl
add
add
add
ret
movsl
xchg
lahf
in
movsl
xlat
mov
xchg
insb
push
add
leave
mov
push
data16
cmpsb
mov
bound
call
call
push
push
add
shl
add
dec
push
xor
add
dec
sub
add
sub
sub
pop
add
pop
push
shr
pop
pushl
push
xor
ror
pop
call
push
not
sub
pop
call
push
push
rol
sub
not
push
sub
add
xor
sub
sub
dec
lea
shl
pop
rol
sub
pop
push
sub
pop
pushl
push
inc
ror
pop
call
push
not
xor
not
sub
pop
call
push
push
push
or
not
add
sub
not
rol
sub
inc
xor
sub
pop
rol
add
not
pop
push
sub
inc
xor
pop
pushl
call
push
shr
sub
not
sub
pop
call
push
push
dec
inc
shl
push
or
inc
add
shl
sub
pop
lea
add
not
pop
push
ror
add
dec
lea
pop
pushl
call
push
ror
not
pop
call
push
sub
ror
shr
pop
call
push
push
push
push
push
lea
push
call
jp
cltd
add
add
sti
add
xchg
add
out
scas
adc
popa
add
mov
add
pusha
add
jae
fistpl
jmp
pop
xchg
mov
add
lods
add
mov
pop
lea
push
push
sub
push
push
pop
add
not
shl
inc
sub
add
sub
pop
sub
ror
inc
pop
push
push
push
push
push
lea
push
push
push
push
push
call
in
addl
mov
into
cld
add
bnd
cmpl
push
test
xchg
add
add
mov
push
scas
push
add
fists
add
pop
addb
add
add
add
jge
add
add
add
jge
jb
add
jo
mov
lea
pop
pushl
push
not
inc
pop
call
push
inc
add
not
rol
pop
push
push
push
lea
push
push
push
push
push
lea
push
lea
push
lea
push
call
add
hlt
lahf
bound
add
add
jl
mov
add
xchg
cli
call
movb
add
mov
mov
in
pop
add
add
add
mov
sahf
xchg
addr16
shll
fisubl
jo
add
mov
loop
mov
cld
lea
pop
call
push
push
ror
inc
shl
sub
push
push
pop
add
sub
ror
sub
dec
pop
ror
xor
add
pop
push
shl
rol
add
ror
pop
pushl
call
push
push
call
pusha
add
push
jle
bnd
add
mov
sub
in
add
add
jecxz
pop
movsl
jbe
add
add
add
bound
add
xchg
mov
add
ficoml
add
or
rclb
lcall
inc
cld
push
push
add
push
push
pop
add
sub
sub
lea
xor
pop
add
sub
add
xor
pop
push
push
lea
push
push
call
aam
push
xchg
push
popl
movl
cwtl
insb
fildll
mov
add
mov
add
mov
cltd
lods
shll
xchg
addr16
add
mov
add
add
lods
loope
add
add
loop
mov
test
popa
adc
jne
push
add
add
pop
call
push
push
push
push
push
lea
push
push
push
push
push
push
call
add
mov
pop
stos
sarb
add
add
add
call
arpl
jo
push
outsl
test
pop
pop
cli
add
test
loopne
cwtl
sahf
imul
lcall
add
in
leave
mov
xchg
mov
add
add
xchg
add
faddp
mov
lea
pop
pushl
call
push
push
not
push
or
inc
add
dec
sub
not
pop
xor
pop
push
dec
ror
inc
pop
pushl
push
push
push
push
push
push
lea
push
push
call
jb
add
add
sar
push
std
ret
fisubl
push
stc
popa
jnp
out
add
lods
test
popl
push
add
imul
mov
jno
add
mov
ljmp
loop
mov
jae
data16
pop
add
pop
call
push
push
sub
dec
push
push
pop
add
shl
add
sub
xor
sub
xor
pop
shl
ror
pop
push
push
dec
sub
sub
push
or
not
add
shr
not
sub
shr
not
pop
shl
pop
push
push
lea
push
push
call
cld
fidivrl
add
imul
fs
fsub
out
pop
rorl
notl
mov
mov
cmpsb
lea
lea
cwtl
lcall
add
stos
rcl
gs
lods
ja
add
add
pop
call
push
push
sub
add
xor
xor
push
xor
add
add
xor
add
sub
sub
pop
sub
pop
push
push
push
push
lea
push
push
push
call
add
movsl
in
lret
add
data16
add
add
movl
add
mov
mov
push
insb
lods
int
mov
lea
pop
pushl
call
push
lea
push
lea
push
lea
push
call
add
push
stc
add
pop
add
ffreep
push
add
add
cwtl
pop
mov
leave
add
push
add
add
mov
aam
mov
add
loopne
add
add
push
add
add
add
add
add
loop
xlat
mov
jae
mov
mov
std
fcoml
pop
add
jb
aam
bound
pop
mov
push
push
push
push
call
out
lods
in
add
pop
jbe
pop
ljmp
mov
lahf
add
fdivp
add
movl
add
add
pop
mov
add
ja
add
fs
add
add
fmull
pushf
and
call
jg
mov
call
subb
int
cwtl
jmp
add
neg
cmpsl
mov
cmpl
arpl
test
add
xchg
js
add
add
add
lcall
pop
lods
cli
fildl
into
add
leave
insb
pushf
std
mov
lea
pop
lea
push
push
push
push
lea
push
push
push
push
push
lea
push
push
call
add
jp
vpaddsb
jge
add
add
push
xlat
imulb
add
add
ja
xchg
addb
roll
roll
pop
jecxz
roll
mov
add
addb
ror
xchg
add
pushf
loope
test
testb
popa
sub
push
push
push
push
push
lea
push
push
call
mov
add
roll
xchg
add
add
add
add
mov
imul
xchg
add
add
les
lds
rcl
mov
mov
xchg
add
stos
loopne
ror
add
add
mov
add
add
movsb
add
arpl
add
add
mov
lea
pop
push
push
sub
add
lea
pop
push
push
push
lea
lea
sub
pop
push
push
lea
dec
add
pop
push
push
push
push
push
lea
push
lea
push
lea
push
call
add
push
xchg
nop
jl
add
mov
mov
add
add
xchg
mov
repnz
test
xchg
add
add
mov
add
arpl
lods
sahf
mov
int3
lock
iret
add
add
add
outsl
popl
roll
jns
mov
add
add
add
popf
mov
lea
pop
push
pushl
push
xor
not
sub
pop
push
push
push
push
call
mov
rol
push
lds
lret
les
add
repnz
test
push
enter
add
out
sti
add
xchg
add
add
mov
xchg
add
popa
lret
xchg
cld
lea
pop
call
push
push
lea
push
or
not
add
sub
add
sub
inc
xor
add
sub
pop
sub
lea
lea
pop
push
sub
shr
rol
pop
pushl
call
push
dec
pop
call
push
add
lea
pop
mov
push
push
lea
push
push
push
push
push
push
push
lea
push
call
lock
add
nop
mov
mov
in
add
int3
jb
xlat
jp
add
add
leave
lcall
push
scas
add
add
add
mov
lea
pop
pop
dec
jne
push
inc
add
pop
jmp
push
lea
push
push
push
push
push
push
push
lea
push
push
call
add
out
push
pop
fisubrs
fcomps
rcr
add
add
aam
add
cld
shl
jmp
add
pushf
movsl
add
hlt
sahf
fdivr
add
add
mov
popf
mov
movsl
test
mov
test
movsl
cld
add
pop
add
push
mov
lea
pop
call
push
push
sub
push
or
not
add
not
sub
sub
lea
pop
shl
pop
push
pop
pushl
push
pop
call
push
lea
push
push
push
push
push
push
push
push
push
call
add
mov
add
stos
add
add
jo
mov
jne
add
add
out
lret
cmpsl
jo
outsl
add
les
rcrl
add
je
in
add
mov
lea
pop
push
push
lea
push
push
lea
push
push
push
push
push
push
call
mov
insb
lds
jbe
add
imul
shlb
gs
add
add
jns
xchg
mov
mov
mov
add
imul
pop
add
jno
add
add
pushf
mov
lea
pop
call
mov
push
push
push
push
push
call
pop
js
shr
add
add
jl
push
push
orb
out
add
mov
in
add
add
mov
mov
sahf
shlb
add
popf
add
cltd
test
mov
add
xchg
popa
push
add
jno
jmp
mov
lea
pop
lea
push
push
lea
push
xor
add
sub
sub
ror
sub
pop
shr
add
shr
pop
push
push
push
call
add
mov
cmpsl
xchg
mov
movl
mov
add
stos
mov
fdivr
cmc
add
add
mov
add
mov
in
add
jmp
add
jp
mov
pop
add
pop
mov
add
add
xchg
bound
in
clc
frstor
cmpsl
add
mov
mov
add
rorl
pop
pushl
push
sub
inc
pop
call
push
push
push
call
mov
jb
add
add
fwait
add
add
std
push
add
jno
add
add
add
push
push
cli
in
add
push
mov
add
add
pop
call
push
push
rol
inc
dec
push
sub
add
shr
lea
not
sub
add
pop
add
pop
push
push
lea
push
call
jl
cwtl
hlt
clc
js
add
push
mov
add
lods
pop
push
ja
push
mov
fs
out
into
add
loop
push
ja
add
loop
add
xchg
fisttps
rol
jmp
adcl
data16
hlt
movl
add
push
jbe
mov
popa
or
pushl
push
ror
pop
call
call
push
sub
add
dec
pop
mov
lea
push
push
add
shl
rol
push
sub
add
xor
add
sub
add
ror
pop
not
pop
push
sub
xor
inc
pop
pushl
push
add
inc
xor
pop
call
lea
push
push
push
push
push
call
imul
push
add
add
jae
pop
cld
nop
pop
in
cli
add
sti
cwtl
pop
pop
add
cwtl
icebp
jmp
aam
imul
cmpsb
clc
in
add
decb
xchg
add
add
gs
add
fimuls
pop
push
push
sub
pop
push
push
push
push
push
push
push
push
push
push
call
pop
xchg
add
cltd
arpl
hlt
add
ja
mov
add
add
push
add
pop
add
roll
add
push
int3
aad
add
mov
xor
add
add
add
add
loopne
add
mov
lds
mov
add
mov
pop
mov
add
mov
mov
xchg
add
pop
push
pushl
push
push
push
or
inc
add
ror
add
sub
lea
inc
pop
add
lea
rol
sub
pop
push
push
push
push
push
push
push
call
stc
pop
jae
add
popl
xchg
mov
iret
fs
pop
add
jmp
add
rcr
add
in
add
add
int3
stos
add
fidivrl
add
mov
add
add
roll
add
addr16
push
call
push
push
xor
add
add
push
push
pop
add
sub
ror
pop
lea
shr
pop
push
push
lea
push
lea
push
push
push
push
call
pop
je
mov
adc
add
add
add
into
cmpsl
add
sti
mov
add
push
in
jb
add
add
mov
loope
jns
les
mov
negb
aam
bound
pushl
call
push
xor
xor
add
shl
pop
push
call
push
push
rol
shr
xor
push
xor
add
shr
sub
dec
sub
ror
ror
ror
shl
pop
ror
dec
xor
xor
pop
push
xor
pop
pushl
push
rol
ror
lea
xor
pop
call
call
push
add
xor
pop
jmp
push
lea
xor
pop
pushl
push
not
pop
mov
push
add
pop
jmp
push
push
sub
push
push
pop
add
lea
rol
sub
add
pop
add
pop
push
shl
dec
rol
pop
pushl
push
lea
push
push
push
lea
push
push
push
push
call
mov
add
pusha
add
lcall
lret
add
add
int3
cmc
add
add
add
add
add
add
add
mov
push
mov
sti
add
pop
call
push
lea
pop
push
push
lea
push
push
push
call
add
mov
add
add
mov
add
test
popfw
aam
xchg
add
add
jns
add
mov
add
outsl
xchg
add
fstl
add
add
test
mov
arpl
pop
call
push
push
not
push
push
pop
add
inc
sub
shr
shr
shr
pop
ror
pop
push
lea
push
push
call
add
mov
imul
add
jle
add
testb
stc
jae
mov
mov
add
xlat
add
cwtl
arpl
fcmovne
loopne
test
pop
stos
repnz
add
add
out
fadds
add
aam
push
xchg
test
lea
pop
pushl
push
push
call
sahf
test
jle
mov
add
in
hlt
testb
add
add
add
hlt
stos
aam
in
add
add
xlat
mov
add
add
cltd
cmpsl
add
add
lds
cli
cltd
mov
mov
lea
pop
call
push
add
add
pop
push
call
push
add
shr
ror
inc
pop
leave
add
push
shl
shl
sub
pop
pop
push
lea
pop
pop
push
inc
ror
inc
pop
pop
push
shl
ror
pop
pop
push
pop
leave
push
push
push
push
push
call
jo
addl
pop
std
mov
add
rolb
int
add
loop
fiadds
add
leave
testl
mov
add
jnp
mov
mov
add
subl
add
sahf
add
push
int3
mov
mov
lea
pop
add
push
lea
push
push
lea
push
push
lea
push
push
push
call
add
lahf
mov
add
lods
xchg
jp
mov
pop
je
insb
mov
add
ja
jecxz
xchg
mov
add
add
xchg
movsl
add
add
add
add
scas
insb
push
mov
jl
test
add
add
mov
lea
pop
ret
push
add
add
sub
not
pop
leave
ret
push
push
push
lea
push
call
add
mov
ja
add
movsb
add
ret
add
xorb
add
repnz
rolb
sub
xchg
push
loopne
mov
lret
sbbl
loop
loop
std
xchg
add
pop
cmc
add
mov
leave
jp
addb
cwtl
out
xchg
add
pop
mov
lea
pop
push
push
ror
dec
pop
mov
push
pop
cmpl
jne
mov
push
ror
pop
jmp
mov
push
push
push
push
push
push
push
push
push
push
call
add
add
pusha
add
add
test
add
into
jmp
add
add
call
push
int3
mov
mov
ret
insb
jno
add
jo
popf
add
pop
and
xor
push
push
push
push
push
push
push
call
fiadds
add
add
test
ror
mulb
cwtl
jns
sti
add
add
in
add
add
add
add
pop
add
in
testl
add
mov
jne
sarl
mov
hlt
lea
pop
xor
add
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
add
add
fidivrs
mov
add
xchg
add
loopne
rcrb
jl
xchg
push
add
pop
movsb
mov
add
stos
lock
xchg
add
add
add
add
add
add
int
jp
add
sar
je
add
add
jl
int3
lea
pop
xor
dec
push
add
pop
sub
push
push
push
push
push
push
lea
push
call
push
add
in
fwait
add
add
jnp
je
pop
add
gs
mov
add
lret
add
add
jno
pop
add
add
add
int3
sahf
popf
mov
lea
pop
jmp
push
lea
push
push
push
push
push
push
call
popf
add
scas
jge
in
add
jbe
incb
push
add
add
mov
add
xchg
lods
lret
xchg
mov
rolb
add
mov
add
add
roll
add
test
scas
push
std
mov
lea
pop
sub
pushl
push
not
pop
pop
sub
push
push
push
push
lea
push
push
lea
push
call
jecxz
add
mov
cmc
add
add
hlt
push
add
stos
stos
pop
add
add
add
mov
add
pushf
je
je
mov
rol
xchg
out
imul
add
mov
add
add
iret
fidivl
fmull
cmp
cmp
fsubr
dec
add
add
add
push
rolb
movsl
in
add
testl
add
add
mov
mov
add
test
ja
mov
mov
cltd
pop
jl
add
add
xchg
out
loope
je
add
mov
add
add
add
aam
bound
pop
mov
push
push
push
push
push
push
call
fs
div
pop
cltd
xchg
add
out
addr16
add
push
enter
mov
mov
xchg
stc
out
mov
ror
push
dec
push
add
imul
lea
pop
lea
sub
push
push
call
add
add
mov
push
imul
add
add
add
fisubrl
add
mov
bound
add
lock
add
add
add
or
or
data16
add
stos
scas
add
add
mov
push
mov
fiadds
add
nop
add
add
pop
cltd
add
add
shlb
test
push
not
mov
lea
pop
shr
push
shl
lea
pop
add
sub
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
push
xchg
push
mov
lahf
loopne
add
add
add
out
mov
rolb
stos
rclb
clc
sahf
into
sahf
sar
add
add
rolb
in
push
add
add
scas
xchg
add
push
popa
mov
lea
pop
pushl
pop
push
lea
push
push
push
push
push
push
push
push
call
in
pop
push
push
xchg
stos
pop
add
imul
addr16
lcall
ret
push
cltd
cld
add
push
lock
mov
add
cmc
push
imul
add
cltd
add
add
pop
shr
push
push
lea
push
push
lea
push
call
aam
add
imul
push
leave
loopne
cmpsb
add
js
pop
addr16
test
movsb
add
lcall
add
popl
pop
mov
add
add
nop
mov
add
mov
jle
out
add
movl
loopne
mov
mov
push
add
add
add
add
add
ja
loope
mov
lea
pop
and
push
lea
push
lea
push
call
std
outsl
in
mov
jo
add
add
add
add
add
jle
add
add
imul
add
cld
in
int3
mov
lea
pop
sub
push
lea
push
lea
push
push
push
push
call
lock
ja
add
pop
stos
add
fisttpl
add
add
add
bound
mov
popa
mov
push
add
int
movsl
shll
fimull
roll
mov
lea
pop
cmp
jne
push
push
lea
push
push
push
push
lea
push
push
push
call
fstl
add
add
add
mov
mov
lods
add
add
add
testl
xlat
jle
add
add
lret
pop
flds
add
loope
add
jo
add
add
cwtl
push
ret
jno
add
shrb
add
add
mov
push
jmp
bound
xchg
call
je
loopne
int3
lea
pop
leave
push
shr
pop
ret
push
push
lea
pop
mov
push
push
push
push
lea
push
push
push
push
push
call
add
out
fs
add
add
nop
jnp
lret
pop
cltd
loope
add
xchg
mov
pop
in
jae
push
aad
add
add
add
jb
add
add
push
add
fildl
int
cli
ja
add
cmpsb
add
cwtl
add
add
add
push
loop
mov
lea
pop
add
push
push
push
push
push
call
movsl
arpl
clc
add
mov
add
jecxz
test
jo
in
leave
mov
out
roll
add
frstor
add
test
add
add
mov
add
leave
outsl
add
add
lea
adc
push
push
push
call
test
sub
add
add
add
add
add
stos
add
add
add
add
mov
xchg
add
mov
lahf
jno
fsubrl
add
add
mov
fwait
rorb
cltd
add
mov
xchg
pop
add
jmp
cld
lea
pop
push
push
lea
not
pop
push
push
push
push
push
call
add
pop
mov
jecxz
mov
add
add
add
add
add
add
add
add
imul
in
mov
jp
add
pop
mov
jae
xchg
add
cwtl
add
add
add
mov
add
fldl
mov
add
push
add
mov
lea
pop
push
push
rol
shr
xor
pop
push
push
sub
xor
xor
pop
mov
push
inc
not
not
pop
lea
sub
push
sub
pop
mov
shr
push
lea
ror
shl
pop
add
mov
push
lea
push
push
push
call
push
clc
insb
add
jl
jmp
lock
jmp
jb
cli
mov
push
add
pop
lahf
add
add
lret
fcmovnbe
add
call
add
movl
cwtl
scas
test
loop
roll
add
add
add
outsl
mov
push
scas
add
pop
lret
lret
add
sbb
fcoms
popf
pop
add
mov
lea
pop
add
mov
push
xor
rol
ror
dec
pop
add
push
pop
xor
mov
push
pop
and
push
push
call
addr16
jp
lock
jno
movl
jb
cmc
hlt
stos
lcall
add
sti
out
sahf
add
add
faddl
loopne
jo
add
repnz
push
rcrb
lcall
in
push
mov
andl
add
in
bound
orb
add
lahf
add
int
aad
mov
add
pop
rol
rol
push
lea
pop
xor
inc
push
not
lea
sub
pop
cmpb
jne
push
push
lea
push
call
xchg
nop
add
add
add
jbe
add
add
icebp
lret
add
fiadds
add
add
jl
pop
add
xchg
mov
jne
data16
push
add
iret
add
xchg
fadds
lds
mov
xchg
sbbl
out
mov
lea
pop
add
push
inc
pop
cmp
je
push
sub
not
pop
add
cmpl
jne
push
push
lea
push
push
lea
push
call
test
add
repnz
pop
imul
add
add
fwait
push
lret
jnp
jne
jnp
je
mov
incb
add
xchg
fadds
add
xchg
lock
add
jns
add
add
popf
add
icebp
add
add
add
mov
lea
pop
xor
pop
push
shr
pop
pop
pop
push
lea
push
lea
push
push
push
push
push
push
call
add
mov
jae
add
push
add
je
jne
xchg
add
jbe
xorl
add
movsl
add
mov
add
stos
gs
push
add
lods
imul
add
push
pop
add
add
decb
imul
push
add
loope
xchg
mov
jne
testl
mov
lea
pop
pop
push
shl
pop
pop
push
lea
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
lret
cld
add
push
add
out
ljmp
mov
add
add
add
xchg
mov
push
jo
xchg
add
add
jne
pop
movsb
mov
insb
add
add
add
lcall
add
pop
int3
rcll
mov
lea
pop
leave
ret
push
inc
pop
mov
push
add
shl
pop
add
push
push
push
push
push
push
push
push
push
push
call
jo
mov
add
xchg
add
mov
std
jns
mov
arpl
add
mov
outsl
mov
add
push
add
mov
add
jne
add
xchg
cmc
ror
add
add
add
cld
jle
scas
in
add
addb
add
fmull
push
ror
sub
rol
pop
push
push
push
push
push
push
push
call
add
pop
add
out
mov
test
loop
jle
scas
cmpsl
test
add
add
fadds
mov
enter
xchg
stos
add
add
cmpb
xorb
mov
add
add
pop
add
push
ror
pop
mov
push
push
call
xchg
icebp
push
mov
arpl
cmpsb
mov
mov
cld
mov
mov
add
add
xchg
add
add
add
out
mov
add
add
add
lods
mov
mov
nop
lea
clc
add
mov
lea
pop
cmpw
pop
push
lea
push
push
push
push
call
mov
add
int
out
mov
test
add
xchg
jne
add
add
jge
mov
int
std
add
cld
je
xchg
add
fildl
add
add
out
mov
add
push
mov
lea
pop
pop
mov
push
sub
sub
pop
push
push
add
ror
pop
call
push
lea
push
lea
push
push
push
push
call
jl
loope
add
add
add
out
out
add
add
mov
std
stc
add
add
add
add
rcr
xlat
mov
fs
sahf
mov
add
pop
xor
push
push
push
push
lea
push
call
add
add
add
mov
cli
popa
mov
add
repnz
sahf
pop
flds
jecxz
jmp
add
rcrl
fsubrl
stc
jns
pop
add
add
pushf
rclb
add
xchg
lcall
scas
add
add
repnz
nop
std
mov
lea
pop
pop
push
push
push
lea
push
lea
push
push
call
pop
push
ret
add
jae
mov
add
movl
add
test
pop
add
stc
out
in
add
insb
add
mov
add
int3
add
push
enter
out
add
sti
add
fisubs
popa
sbb
pop
push
rol
rol
pop
pop
push
push
push
push
push
push
push
call
pop
add
jne
test
push
mov
add
fisubrs
fistpl
jmp
cmpsb
cmpl
add
repnz
scas
add
mov
movsb
shrb
add
int
mov
loopne
rol
mov
add
add
add
add
hlt
shlb
add
add
xchg
stos
add
cmpsb
add
add
std
add
pop
add
ror
add
add
pop
pop
push
xor
pop
leave
ret
push
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
filds
ret
imul
mov
xlat
test
loope
stos
add
shrl
lahf
mov
xchg
push
jo
clc
add
add
xlat
mov
lea
scas
add
iret
add
scas
in
add
add
jge
add
ja
lret
les
hlt
lea
pop
push
mov
push
push
push
push
lea
push
push
call
add
add
pop
mov
out
jp
xchg
popf
mov
insb
jb
add
add
pop
add
add
imul
add
mov
mov
mov
out
testl
add
fadds
addr16
add
xchg
add
mov
icebp
add
bound
mov
xlat
add
std
mov
lea
pop
add
push
push
push
lea
push
push
push
push
call
mov
lds
add
push
pop
add
jbe
test
pushf
add
push
mov
ljmp
add
fsubr
sahf
add
call
lcall
add
cwtl
pop
call
test
add
add
stos
mov
pusha
lock
bound
loop
add
add
xchg
add
shr
push
add
xchg
mov
lea
pop
push
push
push
lea
push
lea
push
call
mov
add
add
add
sti
jns
add
sti
add
add
int
stc
add
mov
pop
add
mov
add
clc
add
add
add
mulb
mov
lea
pop
push
push
push
lea
push
push
lea
push
push
call
pop
stc
add
js
pop
out
mov
lret
cmc
add
add
lret
add
mov
add
mov
push
mov
cmpsl
pushf
cltd
jle
sti
cmpsb
idivl
lods
nop
add
mov
lcall
addb
data16
push
sub
inc
lea
add
pop
push
push
add
pop
mov
push
lea
push
push
push
push
call
add
add
push
ljmp
jo
push
out
mov
push
jns
out
mov
mov
add
ljmp
aad
xchg
outsl
mov
fs
popf
stos
add
pop
push
push
push
push
push
push
push
push
call
mov
add
add
add
je
add
add
loopne
mov
cli
add
les
add
jp
pop
add
add
add
add
pop
test
add
int3
xchg
lods
movsl
aad
lahf
add
xchg
lods
ja
pop
mov
lea
pop
pop
push
push
push
push
lea
push
lea
push
push
push
call
cltd
mov
add
in
add
add
add
push
mov
testb
lret
leave
enter
add
mov
stc
add
ficoms
gs
fistpll
mov
pop
add
add
add
lea
pop
lea
push
push
push
push
lea
push
push
push
lea
push
call
add
add
pop
int3
add
ja
xchg
add
lods
add
mov
push
in
cld
js
add
mov
push
add
add
mov
add
push
add
add
mov
add
mov
xchg
mov
mov
ja
jmp
shrb
add
mov
lea
pop
sub
push
shl
ror
lea
pop
mov
shr
push
push
push
push
push
push
lea
push
call
pop
add
push
add
fnstcw
roll
add
fwait
add
gs
add
jecxz
add
add
idiv
mov
add
xchg
add
lds
add
mov
out
mov
lea
pop
add
mov
push
push
lea
push
push
push
call
out
add
mov
mov
in
hlt
pop
add
fwait
movsl
test
add
add
add
add
cwtl
add
mov
jno
cmpsl
add
test
add
mov
insb
add
add
mov
loope
clc
mov
add
mov
lea
pop
add
push
push
lea
push
push
lea
push
push
push
call
into
add
int3
add
cltd
ja
add
lret
mov
icebp
lahf
push
test
cmc
sahf
add
int3
pop
call
mov
add
add
in
add
jb
jb
roll
pop
mov
add
pop
pushl
popl
push
shr
add
rol
pop
mov
push
push
call
stc
add
add
add
add
cli
add
add
mov
add
out
rcll
mov
scas
jge
add
fldl
mov
fwait
les
call
add
aad
mov
lea
pop
add
push
sub
add
rol
pop
xor
lea
push
lea
push
lea
push
push
call
jo
add
add
mov
cli
stc
add
cld
jns
addl
add
xchg
jo
add
mov
add
icebp
add
aad
add
ficoml
rolb
add
mov
xchg
addr16
mov
jae
loopne
add
pop
mov
push
push
push
push
call
clc
push
add
imul
mov
popf
popa
add
add
out
add
arpl
jecxz
add
mov
push
filds
add
cli
shlb
add
frstor
lret
add
jle
xchg
bound
pushf
mov
subl
mov
lea
pop
add
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
add
jnp
jb
testl
push
add
add
push
add
jbe
add
fidivs
test
add
hlt
rcrl
leave
js
mov
mov
sti
lods
mov
pop
jb
out
pop
add
in
jb
loopne
add
push
add
lea
pop
xor
rol
push
xor
pop
nop
push
lea
not
inc
shr
pop
nop
xor
push
add
pop
nop
push
push
push
push
lea
push
call
out
stos
add
ret
pop
imull
mov
add
add
mov
popf
fcmovb
mov
add
add
mov
add
jb
add
add
add
cmpsl
ja
pushf
lret
add
push
aad
mov
stos
jb
add
popa
add
fmull
push
lea
push
push
push
call
add
addl
aad
add
in
pushf
add
lds
add
add
repnz
mov
sbbl
pop
repnz
repnz
hlt
push
jge
add
pop
mov
add
xchg
jmp
stos
lret
into
fcomip
add
testb
jne
rolb
add
add
add
fldl
add
cmpsb
xchg
mov
lea
pop
inc
push
push
call
add
shlb
popl
mov
in
add
in
pop
add
mov
xchg
js
push
xchg
scas
sti
add
add
add
add
stc
add
jmp
js
jecxz
int3
jne
movsb
jp
add
add
loopne
fistl
mov
lea
pop
nop
nop
push
push
call
int
pop
mov
pop
movsl
scas
cmpsl
lahf
mov
add
ja
test
movsl
mov
shl
add
push
fsubr
add
imul
movsl
add
roll
add
add
ljmp
add
pop
add
add
add
add
out
add
add
call
int3
lea
pop
cmpb
jne
add
push
shl
pop
nop
push
push
lea
push
push
lea
push
push
push
push
call
mov
add
mov
pop
test
ret
add
pop
addr16
mov
push
cmc
ret
rolb
add
loope
mov
add
pop
add
add
loop
lds
addb
pop
lcall
and
push
lea
push
push
lea
push
push
push
push
call
pop
mov
add
add
std
cmpsl
add
mov
lea
add
add
popa
lahf
xchg
add
mov
push
cwtl
mov
fcomps
cli
push
divb
bound
add
lds
add
cld
fs
add
xchg
mov
enter
mov
jo
popa
add
add
clc
jl
jmp
test
out
pop
mov
les
inc
or
test
add
add
shr
add
lea
pop
nop
push
sub
not
pop
nop
inc
push
rol
dec
sub
shr
pop
nop
nop
push
pop
cmp
jb
push
lea
push
push
lea
push
push
push
push
push
push
call
enter
mov
add
jecxz
cmpsb
scas
jne
add
gs
fidivl
test
push
pop
add
xchg
add
push
add
add
pop
int
add
mov
lahf
mov
mov
add
cwtl
add
add
xchg
add
jns
mov
bound
xor
push
add
rol
pop
jmp
push
lea
push
push
push
call
add
xchg
jp
lret
lcall
add
cmpsl
lret
xlat
add
rolb
pop
mov
add
xchg
push
rcrb
add
xchg
gs
push
add
add
jl
add
xchg
mov
je
aam
bound
pop
mov
push
push
lea
push
push
lea
push
push
call
in
xchg
cwtl
push
out
add
add
cmp
addb
mov
push
stc
fs
mov
add
add
mov
bound
add
test
add
pusha
add
add
mov
cmpsl
add
xlat
add
jecxz
mov
add
mov
lea
pop
add
movzwl
push
ror
shl
shl
shl
pop
mov
push
sub
dec
pop
add
push
not
lea
dec
pop
mov
push
push
push
push
call
pop
addb
loope
jno
cmpsb
loopne
add
add
add
gs
addb
add
cli
insb
add
pusha
mov
pop
mov
mov
cwtl
add
add
loop
mov
cmpsl
add
std
arpl
js
mov
testb
sti
pop
lea
in
rolb
enter
add
add
pop
xor
push
add
pop
xor
shl
push
lea
push
push
push
push
push
push
push
push
push
call
xchg
call
pop
mov
std
add
add
arpl
lods
xorb
loopne
add
add
std
xchg
mov
jae
roll
add
pop
xchg
add
scas
mov
out
add
add
xchg
icebp
fldz
ffreep
mov
lea
pop
xor
shl
push
inc
sub
sub
pop
xor
push
push
call
add
xchg
add
mov
outsl
mov
rcr
pop
add
add
add
mov
push
into
rcrl
ja
add
add
add
in
add
pop
add
add
add
add
mov
jge
mov
ret
add
xchg
mov
data16
loope
push
push
push
lea
push
push
push
push
call
mov
mov
mov
lret
test
jmp
add
mov
add
cli
andl
add
jmp
jmp
add
add
add
scas
mov
and
addr16
mov
lock
insb
test
test
shl
mov
add
les
push
push
add
lea
pop
xor
mov
push
push
push
call
push
in
loope
addl
repnz
scas
mov
hlt
add
push
bound
in
add
jl
add
out
testb
add
push
mov
add
ja
add
add
add
add
add
mov
add
add
add
mov
xorb
lea
pop
add
push
inc
add
sub
pop
pop
push
dec
xor
pop
pop
push
dec
pop
pop
push
shr
ror
shl
dec
pop
pop
push
sub
pop
leave
push
dec
shl
pop
ret
push
add
ror
sub
pop
push
push
push
call
add
add
lods
xchg
pushf
mov
jmp
jnp
pop
mov
add
add
add
add
add
lahf
mov
push
loop
add
add
jns
fstpl
add
add
scas
ffreep
add
addl
lea
pop
mov
push
pop
push
push
push
shr
lea
not
inc
pop
push
push
lea
push
push
lea
push
push
call
fsubrl
push
rcr
xchg
add
test
add
add
mov
ljmp
scas
addr16
mov
push
nop
stc
add
add
addr16
mov
fmull
mov
push
push
lea
push
push
push
push
call
andb
add
jno
mov
add
mov
add
add
mov
push
lcall
add
add
mov
in
mov
mov
mov
add
add
xlat
push
add
jmp
addl
add
ja
mov
lea
pop
mov
mov
push
ror
pop
test
je
push
add
not
xor
pop
mov
push
push
lea
push
call
ret
add
add
fwait
add
loopne
add
mov
jno
add
add
lret
lods
pop
fistl
mov
mov
add
add
jne
cmc
lds
add
add
ljmp
add
rcrl
lods
pop
ljmp
add
mov
clc
int3
fwait
add
jne
jns
les
testb
add
add
push
shr
add
pop
mov
push
pop
mov
push
sub
add
add
shr
pop
mov
inc
push
lea
push
push
push
push
lea
push
lea
push
call
add
outsl
mov
pusha
add
clc
shlb
fsubrs
std
jnp
out
addb
add
add
lea
clc
add
xchg
add
xchg
add
push
movsl
add
mov
add
popf
mov
mov
lea
pop
cmp
je
push
push
push
push
call
loop
add
add
add
fnsave
in
add
lods
add
xchg
add
clc
push
in
scas
mov
icebp
add
add
push
add
into
mov
jns
mov
mov
lea
pop
test
je
mov
push
push
push
call
in
movsb
std
fldcw
pusha
shr
push
add
in
jae
addb
add
ffreep
mov
scas
lock
add
add
loop
mov
add
ret
shrb
mov
add
add
add
xlat
arpl
roll
jno
add
add
adc
insb
add
xchg
add
mov
lea
pop
inc
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
movl
out
mov
fwait
roll
add
lds
add
add
xchg
push
pop
add
icebp
js
imul
outsl
scas
fwait
std
add
add
add
add
add
push
add
pop
movsl
add
add
add
jmp
bound
add
mov
lea
pop
cmp
je
test
jne
push
push
push
call
mov
push
out
add
pop
add
add
sahf
bnd
fdivrs
imul
jbe
add
push
test
xchg
mov
add
add
add
sahf
pop
lret
add
scas
add
leave
mov
add
cld
mov
imul
add
add
push
mov
jecxz
add
add
add
add
mov
lea
pop
xor
pop
push
lea
push
push
push
push
call
out
clc
bound
bound
add
add
add
std
jmp
add
xchg
cld
ja
add
out
fcmovu
shll
add
aam
mov
add
mov
ja
add
mov
add
mov
movsb
add
add
add
mov
lea
pop
pop
pop
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
push
rol
lock
add
jbe
addb
add
int
pop
icebp
pusha
add
nop
add
std
push
test
push
lock
movsl
roll
jbe
add
pop
out
lea
test
incb
pop
mov
lea
pop
pop
leave
push
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
add
add
jmp
jp
add
add
add
stc
add
push
add
sbbl
mov
pop
mov
lods
jecxz
add
add
rol
add
mov
xchg
jne
movl
mov
hlt
scas
add
sbbl
addl
test
mov
sub
or
mov
push
push
push
push
push
push
lea
push
push
call
je
nop
fwait
add
pop
incb
push
scas
js
add
cltd
add
add
fwait
add
fs
js
add
mov
scas
add
add
add
in
insb
lcall
add
and
cmp
jne
push
push
lea
push
push
push
call
outsl
mov
jne
mov
push
add
pop
xchg
mov
mov
add
add
add
add
mov
loope
mov
pusha
stc
rcl
pushf
popf
cld
jmp
push
bound
fadds
add
xchg
add
shrl
add
jno
out
icebp
fwait
repnz
mov
in
shlb
fmull
jle
push
lea
push
push
push
lea
push
push
push
push
push
call
lret
pop
add
mov
jbe
add
xchg
fsubs
add
scas
icebp
mov
ljmp
notb
pushf
in
sti
loop
in
add
push
add
pop
out
jae
jge
mov
popa
movsb
add
lea
pop
mov
test
je
push
push
push
push
push
push
call
mov
add
mov
add
addr16
cmpsb
movb
add
add
aad
in
add
stc
les
add
add
mov
lea
pop
mov
push
push
push
call
add
push
add
scas
fwait
cmpsl
add
xlat
add
add
mov
sahf
ja
pop
stc
ja
mov
xchg
push
add
pop
leave
call
lock
push
scas
bound
push
push
add
ja
je
xchg
shll
jne
mov
jl
jmp
mov
jge
push
add
add
add
push
add
test
add
mov
lea
pop
add
push
ror
pop
cmp
jne
push
not
lea
lea
pop
mov
push
push
push
push
call
add
xchg
add
add
mov
test
mov
movsl
pusha
in
jne
add
aam
add
jbe
add
add
lock
add
rorl
test
je
push
push
push
push
lea
push
push
push
call
pop
test
movsl
arpl
add
xchg
fucompp
add
aad
jecxz
add
mov
jb
add
ret
add
mov
into
rolb
add
mov
mov
in
outsl
add
mov
lea
pop
mov
push
push
push
push
call
add
loopne
clc
lret
ret
add
mov
add
gs
fildll
mov
push
sti
mov
mov
xchg
add
test
movsb
fldl
mov
add
pop
fwait
add
xchg
test
add
add
add
xchg
lahf
jmp
in
jae
add
xchg
mov
add
mov
adc
roll
push
lea
push
push
call
add
shl
add
pop
add
in
repnz
imul
fimull
xchg
mov
movb
lods
repnz
xchg
sarb
jbe
add
in
ja
add
les
loopne
test
jmp
push
sub
add
pop
xor
pop
push
lea
not
dec
pop
pop
push
xor
pop
pop
push
push
lea
push
lea
push
call
add
ret
jge
popf
lods
rcrl
push
add
shlb
clc
add
add
xchg
add
mov
in
add
pop
pop
push
inc
pop
leave
ret
push
dec
lea
add
pop
lea
pop
push
sub
dec
inc
pop
pop
push
push
push
push
push
push
lea
push
push
call
cmpsb
add
add
add
add
imul
add
mov
add
add
add
jno
ret
add
push
pop
add
lods
iret
lods
add
xchg
lds
pop
xchg
add
xchg
xlat
imul
add
jb
or
scas
add
fadd
push
out
leave
add
push
call
add
add
add
and
pop
push
sub
pop
leave
push
shr
shl
pop
ret
push
push
push
push
push
push
push
push
push
push
call
in
pop
add
mov
push
add
push
add
jl
add
xchg
cltd
add
add
div
mov
lret
add
xor
add
add
push
mov
out
jge
sarb
les
add
popf
addb
fdivr
add
add
popf
push
mov
mov
lea
pop
mov
push
push
push
push
push
push
push
lea
push
push
push
call
mov
jl
add
add
subl
mov
lock
in
leave
add
cmc
xchg
add
add
in
int
add
add
add
bound
add
lret
lahf
std
xchg
add
pop
loopne
add
cmpsb
pusha
addr16
fldl
add
out
add
add
outsl
xlat
add
add
fildl
stc
mov
lea
pop
pop
pop
push
inc
shl
add
pop
pop
pop
push
push
push
push
lea
push
push
lea
push
push
push
call
add
xchg
cwtl
mov
gs
into
addr16
push
jle
mov
jbe
jnp
push
mov
jl
xchg
add
add
add
cltd
ja
aam
add
add
add
je
testl
add
stc
add
add
add
add
add
add
add
pop
leave
ret
test
push
test
jae
test
jb
rcrl
jae
sub
jae
pop
ret
jae
test
jae
fs
add
dec
add
pop
out
jl
add
imul
push
xchg
outsl
mov
dec
scas
mov
clc
outsb
aaa
pop
and
sbb
fisttpl
push
pusha
jl
loope
scas
jnp
or
cmp
lods
xchg
inc
mov
dec
fidivs
jns
mov
push
std
sub
lret
sbb
adc
insb
je
mov
into
xor
ret
repnz
imul
sub
push
add
loope
stos
jnp,pt
fdivl
xor
ss
sub
das
notb
in
lret
sbb
mov
dec
ljmp
popa
sahf
xchg
push
xor
cmp
sub
pop
pop
sbb
daa
rcll
jo
mov
clc
cmp
std
push
push
mov
or
jl
jmp
xchg
loop
xchg
lahf
and
imul
scas
les
inc
fbld
aaa
insl
lods
frstor
jns
fldt
push
clc
aas
sbb
and
out
lret
dec
jb
jns
mov
xchg
mov
pusha
iret
mov
rorb
pop
insb
or
movsb
push
add
or
or
mov
xchg
add
xchg
stos
mov
es
orl
fbstp
xor
std
add
or
fistpl
push
cmp
sti
sub
xchg
inc
sar
ja
pop
pop
and
xchg
jbe
in
dec
in
adc
or
enter
jne
ljmp
sti
and
push
fmul
ljmp
cmc
andl
jmp
pop
xchg
xor
jno
or
fldt
lea
mov
stos
cmp
es
scas
push
cmp
mov
jmp
pop
adc
fwait
sarl
sahf
mov
das
push
mull
push
mov
mov
gs
fildl
and
scas
mov
mov
and
mov
cmpsb
subb
adc
mov
les
jb
in
cwtl
dec
mov
mov
ficompl
cmp
loop
mov
ja
imul
sbb
shlb
mov
push
and
sub
fs
leave
pop
repz
mov
fsubs
dec
nop
test
das
das
mov
pop
push
xchg
jmp
dec
js
int3
push
xor
adc
ror
aaa
test
mov
cmpsb
fs
mov
rcrl
out
mov
pop
add
test
mov
out
adc
dec
out
rol
mov
or
out
sbb
loopne
lret
inc
sbb
mov
fisubs
rcrb
cs
inc
hlt
jb
sub
xacquire
lahf
and
call
js
cmp
mov
sub
lds
sbb
xor
dec
lods
lret
xor
adc
cmp
or
outsl
out
xchg
into
mov
movb
sbb
fs
sbb
cli
mov
popa
cmc
das
xchg
inc
fldl
ljmp
pop
dec
xchg
cmp
testb
or
movsb
mov
push
add
into
stos
rcll
movsbl
ds
inc
mov
mov
xlat
mov
push
mov
je
mov
fcmovbe
xchg
in
in
lods
jo
add
fldt
pop
mov
pop
jno
aad
das
adc
xchg
movsb
sub
pop
sub
push
aas
movsl
out
mov
xchg
dec
int
jno
pop
popl
push
push
das
and
scas
jle
nop
mov
subl
int3
push
int3
int3
out
lock
mov
cwtl
icebp
ljmp
jl
inc
adc
jg
push
mov
fbld
inc
add
inc
adc
sbb
das
mov
fistpll
sub
xor
sahf
inc
loope
cmpsl
jge
ja
and
xbegin
xor
pop
or
mul
dec
scas
rcrb
or
std
push
or
imul
and
inc
int3
lds
test
sub
and
dec
fcomip
loopne
and
repnz
sub
sqrtps
shrb
adc
test
sub
or
sub
mov
mov
add
pushf
loop
pop
or
or
insb
push
sbb
in
rcl
adc
xchg
aas
mov
imul
icebp
imul
fwait
mov
pop
lret
mov
fsubr
pop
and
add
fptan
push
outsb
dec
lods
mov
imul
fcmovnb
mov
push
sub
shll
lret
and
sub
add
ss
test
es
push
cmp
das
sbb
jp
adc
xchg
cmp
add
popf
mov
repnz
inc
test
add
dec
mov
jmp
sbb
mov
sbb
and
dec
add
out
insb
dec
dec
dec
or
divl
sub
jo
inc
aad
dec
shrl
in
cmpsl
aam
in
adcl
outsb
add
pop
movsb
or
xor
outsl
jmp
scas
fwait
cmpsl
outsl
jns
xor
mov
and
jae
sub
lcall
push
pop
or
mov
cli
mov
cmp
ret
xchg
scas
aaa
int
jno
ss
lds
call
jmp
lret
or
cld
sub
rol
mov
mov
xchg
fsub
ret
jne
pop
push
lods
inc
or
pusha
incb
arpl
fadd
imul
mov
jnp
popl
and
pop
test
fwait
inc
clc
lea
dec
pushf
dec
or
jecxz
push
or
and
cmp
ds
pop
inc
imul
or
imul
shrl
ret
mov
mov
in
in
mov
cmp
lea
icebp
into
cmpsb
xor
add
add
arpl
sbb
or
loop
lock
lods
adc
add
mov
mov
push
out
push
or
cmpsl
jmp
inc
mov
ret
enter
stc
ret
test
and
push
es
dec
adc
pusha
std
fistps
out
in
std
lds
shrl
and
cwtl
fsub
pop
jns
sbb
xor
lcall
fdivl
push
fwait
mov
popa
mov
cmp
mov
push
divl
out
shlb
adc
popf
xchg
mov
adc
sbb
pop
adc
sub
imul
or
add
addr16
into
stos
test
in
add
jb
in
xchg
and
aas
subb
inc
dec
test
sahf
push
mov
add
or
cmp
pop
cld
pushf
call
movsb
mov
shlb
aas
adc
and
pop
flds
in
btc
bnd
jl
cli
mov
xor
and
inc
push
xor
jecxz
xbegin
aas
mov
je
add
jp
jns
pop
push
lahf
mov
negl
sbb
pop
add
lret
lods
adc
xlat
sub
shll
or
sbb
les
sbb
mov
and
cmp
xor
popf
icebp
iret
sub
mov
push
mov
inc
inc
cmp
xorl
dec
mov
push
inc
lret
outsl
imul
hlt
xchg
cmp
inc
inc
dec
mov
stc
adcl
mov
nop
add
iret
test
push
or
stc
es
pop
or
jg
out
add
and
sub
sahf
stc
test
nop
or
daa
add
dec
and
leave
sbb
mov
sub
sbb
mov
xchg
xorl
enter
and
insb
testb
imul
or
xchg
outsb
push
fs
andl
aam
and
test
dec
int3
mov
fs
push
inc
sbb
xchg
sti
inc
rorb
cmp
outsb
mov
test
fcompl
pop
bnd
cmp
cld
sarl
rcl
dec
cmp
cmpsl
mov
mov
xchg
notb
inc
out
xchg
arpl
mulb
adc
dec
int3
ljmp
jge
mov
adc
inc
add
cld
iret
cmc
popa
shrb
and
cmpb
test
xchg
aam
mov
loop
hlt
out
roll
xor
jbe
mov
subb
lcall
cmp
jp
cld
add
add
xchg
nop
into
in
mov
xor
mov
dec
outsl
daa
inc
xlat
and
decl
loopne
pop
cmp
adc
fwait
pop
cmp
cmp
mov
dec
jmp
cmp
jo
jp
outsb
push
outsl
arpl
adc
xor
addr16
mulb
popf
add
pop
push
cmp
and
ret
pusha
std
jl
adc
aam
or
pop
stos
inc
lods
or
stc
lcall
xor
stc
jle
sub
xor
cmpsb
je
lock
pop
repnz
aad
pop
mov
sub
mov
inc
fimull
or
sbb
gs
fistpl
dec
pusha
xchg
stos
sarl
leave
xor
adc
fmuls
sbbl
icebp
sbb
gs
or
push
jns
repz
mov
add
inc
jp
adc
lods
xor
in
mov
rorb
add
hlt
test
in
push
mov
pop
and
jbe
xchg
arpl
ret
add
lods
int3
std
mov
fnclex
xchg
mov
cwtl
dec
inc
test
test
jmp
sbb
imull
jb
add
mov
aas
xlat
sbb
mov
test
sete
jne
negb
jp
roll
stos
cld
mov
lea
mov
dec
test
mov
lret
repz
add
int3
scas
and
mov
jns
call
mull
mov
jae
mov
mov
push
cmpsl
inc
test
cmpsl
fsubs
push
push
mov
push
add
add
loop
push
mov
insb
sub
aad
add
sub
or
aam
sbb
mov
lods
shlb
xor
cs
cwtl
xchg
imul
dec
aas
jo
push
stos
push
push
es
mov
mov
neg
js
movsl
inc
movsb
jle
pop
add
iret
ljmp
hlt
ss
rorl
mov
out
mov
ror
dec
mov
sub
or
inc
jl
or
gs
clc
and
and
testl
fcompl
pop
aad
sbb
in
imul
and
lods
jmp
stos
xor
js
jmp
andb
cmp
cmpsb
lea
adc
mov
add
adc
mov
and
imul
seto
loopne
test
adc
cmp
ret
mov
clc
xchg
dec
gs
adc
clc
sbbl
sbb
lea
loopne
dec
pop
fisttpl
push
cmp
mov
mov
scas
aad
add
or
push
adc
inc
sbb
cmp
push
out
vpsllw
lret
inc
cld
movsl
es
loop
mov
ja
and
jecxz
fisttpl
mov
sbb
xlat
iret
pop
jb
cmpl
clc
push
mov
test
insl
sbb
or
pop
clc
sbb
xchg
push
inc
pop
mov
lods
fadds
mov
cli
push
mull
aas
xchg
cld
mov
dec
sub
cli
mov
push
push
cld
and
and
push
out
rclb
pop
sahf
rclb
cmpsl
std
dec
mov
xchg
loopne
filds
mov
fcmovnu
xchg
add
xor
cmc
test
pop
dec
push
jge
sbb
or
xchg
jae
jno
cmpsb
xor
xorb
fmull
in
popa
aad
adc
pop
push
add
shrb
jnp
xor
in
cli
stos
xchg
sahf
mov
cmp
pop
cmc
xor
mov
xor
arpl
adc
inc
pop
add
jns
scas
pop
fisubrl
movsb
out
in
jae
mov
add
ffreep
mov
movsl
sarl
cmp
cmc
in
leave
xchg
jnp
xor
popa
inc
add
daa
mov
aam
cmp
xchg
roll
push
pusha
nop
into
jns
stos
cmp
jl
and
shll
js
and
cmp
lods
int
loopne
xchg
in
insb
dec
jge
dec
insl
hlt
mov
add
lds
out
sbb
dec
adc
loop
push
push
in
mov
lock
cwtl
mov
lods
jbe
shll
mov
test
call
ds
lock
xchg
adc
mov
jno
jmp
scas
fs
jp
data16
xor
ret
pop
inc
push
xchg
pop
mov
cwtl
xor
cld
add
out
das
or
dec
push
pop
mov
mov
and
popa
outsb
rcrb
pop
inc
int3
mull
adc
fstps
inc
enter
push
xchg
mov
enter
ljmp
paddb
mov
jmp
sarb
push
sub
pushf
jle
mov
dec
mov
xor
sub
mov
iret
or
jmp
stc
jecxz
inc
imul
ret
push
sbb
aam
lds
daa
mov
xchg
mov
cltd
loopne
gs
pop
mov
mov
sbb
mov
xchg
and
mov
lret
push
ds
jbe
jo
out
sbb
imul
loope
lahf
adc
add
pop
out
lahf
sahf
inc
imull
mov
xchg
xchg
sbb
xor
leave
mov
pop
lock
ss
scas
xchg
es
dec
std
sbb
shrl
add
or
or
stc
xchg
push
cli
imul
sti
dec
out
jbe
jno
daa
out
xchg
mov
dec
je
aad
mov
mov
scas
insb
sub
or
pop
add
mov
mov
sahf
pop
dec
xor
mov
sti
sub
mov
ror
and
mov
imul
pushf
arpl
sbb
stc
jb
aad
je
pop
adc
mov
movsb
pushf
mov
or
pop
sub
inc
scas
sbb
shlb
fs
lock
outsb
push
sbb
cltd
fcomip
movsb
lcall
adc
mov
and
inc
mov
push
pop
mov
sub
testl
add
inc
mulb
loop
mov
jae
stos
sub
cmp
push
sub
stos
mull
jae
xchg
aas
dec
push
sbb
cmp
pop
les
aas
add
outsl
and
es
jl
dec
dec
in
sub
push
arpl
aam
into
mov
ljmp
and
push
inc
loopne
push
mov
in
inc
out
enter
sub
xor
cmp
adc
or
ret
rcl
es
call
add
push
pop
imul
pop
xchg
push
sub
add
xor
sub
add
pop
xchg
xchg
pusha
inc
pop
push
push
sbb
xor
mov
cmc
pop
push
mov
out
cmp
shrb
scas
cmp
enter
test
jecxz
cmc
into
stc
fucomp
xor
std
lcall
repz
push
pop
js
dec
jle
loop
xor
mov
push
inc
lods
dec
xor
outsb
addr16
dec
cwtl
stos
int
xchg
dec
lods
outsb
pop
or
movsl
daa
push
ret
jl
aam
mov
loopne
test
outsb
rorb
rorl
stos
in
aam
cmp
fsub
mov
fdivl
push
jnp
sub
aaa
test
and
or
sub
daa
seto
inc
in
loope
addr16
das
or
lcall
xchg
cmp
mov
jne
xor
lock
movsl
sbb
mov
adc
imul
push
or
and
xor
lret
data16
dec
dec
inc
push
mov
xchg
negb
xorb
inc
orb
xchg
pop
cmpsb
dec
push
icebp
xor
mov
outsl
jb
sub
imul
sbb
adc
sbb
xor
xor
fildll
sbb
fildll
push
xor
ret
cld
or
sub
cmp
test
mov
sbbl
pop
test
mov
push
dec
outsb
inc
jo
mov
add
and
cmpsb
mov
push
movl
shlb
jo
movsl
mov
es
fsubl
jo
push
cmp
aad
pop
xchg
mov
bound
fadd
xlat
mov
dec
dec
cmp
fistps
idivb
in
test
dec
jp
adc
jle
enter
sarl
push
sub
jge
gs
and
loopne
and
ret
movl
and
xlat
int3
mov
add
lds
mov
fcoms
nop
xchg
cwtd
and
xchg
je
je
adc
or
mov
fcomps
pop
sbb
daa
popf
lret
movsb
dec
mov
imul
mov
adc
popf
daa
call
ret
jge
inc
stos
out
push
out
aam
shrb
mov
movsl
mov
xchg
fisttps
stos
mov
mov
loop
es
sub
jge
fs
push
dec
lock
pop
ret
jb
mov
sbb
or
cmp
pop
cmc
dec
pop
xchg
mov
js
popf
xor
xor
push
leave
insb
sub
mov
push
movb
xor
aas
movsb
ret
hlt
ss
clc
leave
movsb
addl
stc
pop
adc
or
fnstsw
mov
jmp
sbb
or
mov
cmp
inc
in
scas
pop
out
jne
xchg
pop
or
aad
xor
xor
push
jae
xor
in
xchg
loopne
into
and
pop
xchg
sub
pop
fcoms
mov
fldcw
sarl
cmp
ss
scas
mov
cld
push
or
roll
in
add
sarl
sbb
aaa
aad
fbstp
mov
pop
inc
push
into
fcmovnb
jnp
leave
and
mov
jl
movzwl
xor
jnp
fmuls
out
pop
aam
dec
stc
lret
fimull
mov
cmpl
loope
loop
cmp
mov
cs
jne
js
aaa
hlt
mov
pusha
add
stos
rclb
push
inc
mov
fcom
lods
rcrl
dec
sub
shr
bnd
xrelease
mov
cwtl
sbb
add
or
in
fdivs
xchg
cltd
mov
les
inc
mov
fwait
cltd
aas
xchg
add
js
test
adc
dec
mov
jbe
clc
loope
mov
sbb
sbbl
sub
leave
sbb
ficompl
and
sbb
push
dec
jmp
push
insl
test
or
inc
out
mov
jbe
add
je
mov
mov
dec
add
cmp
cmp
inc
clc
inc
add
lea
pop
add
leave
xchg
xchg
and
cli
shlb
sarl
push
inc
mov
aas
sub
insl
mov
pop
in
xor
dec
stc
inc
cmp
test
aad
fnsave
push
hlt
push
out
cmc
les
pop
mov
sarl
jb
outsb
jmp
pushf
enter
xchg
dec
xor
addb
xchg
and
mov
jl
stos
mov
cli
in
ret
mov
jns
inc
cld
movsl
and
push
inc
fstpl
je
sub
sbb
shrb
fidivl
fists
jl
sub
loope
iret
test
lods
repz
in
mov
out
insb
dec
sub
xor
push
mov
push
adc
std
inc
add
fcmovnb
ret
or
subb
cmp
pop
sub
test
lret
push
leave
inc
and
inc
adc
pop
imul
sbb
fs
and
out
stos
aas
inc
movsl
data16
or
movsb
imulb
aas
add
in
lret
dec
jl
aaa
jbe
testb
push
inc
add
mov
cmc
add
adc
cmpl
fwait
cld
add
mov
add
add
pop
clc
jno
movsl
or
sub
subl
push
inc
push
xchg
pop
dec
xor
insb
and
dec
sbb
insb
test
ss
push
out
lods
test
repz
ret
mov
mov
mov
loopne
inc
pop
sub
pop
aas
push
das
sahf
and
or
cmpsb
push
lret
push
clc
imull
clc
pop
int3
push
sarb
or
inc
jmp
pop
mov
dec
xchg
lret
mov
push
cmpsl
or
icebp
jo
mov
ljmp
fdivrs
aad
test
pop
sub
sub
sarl
add
cltd
lret
pop
movsb
in
jo
loope
jmp
ret
inc
repnz
add
xor
xchg
negl
jmp
ja
jg
stos
fists
mov
dec
into
inc
xor
rcrb
and
pop
loopne,pn
les
xchg
mov
and
sahf
sub
int3
mov
jne
cmp
jmp
test
add
lods
lods
push
push
xor
and
stos
lods
ds
addr16
cmp
add
push
push
dec
cmp
cltd
inc
xchg
inc
pop
loope
mov
enter
lock
out
xor
sti
add
adc
lahf
imul
test
and
and
sbb
xor
fildll
mov
stos
pop
stc
pop
mov
aam
je
sub
lret
loop
aad
pop
adc
pop
and
sbb
push
xor
fists
outsl
dec
mov
or
gs
subb
dec
mov
popf
inc
ja
fistpl
adc
bnd
and
mov
xor
mov
in
and
ja
push
mov
push
or
clc
mov
mov
mov
push
testb
push
fsin
test
es
sahf
or
ss
dec
fld
push
pop
sahf
sub
movsb
hlt
push
or
xlat
enter
xchg
lds
into
mov
js
inc
fdivrs
aaa
xlat
jns
cmpsl
sbb
cmp
fstpl
fisttps
out
xchg
arpl
dec
pop
xchg
bound
jne
loopne
xchg
add
movsb
imul
sahf
jnp
mov
mov
jle
push
in
mov
or
addb
push
cmp
xchg
xor
rclb
cmp
dec
in
imul
pusha
and
aad
insb
pop
add
shlb
sbb
scas
add
cltd
stc
adc
dec
in
lret
dec
mov
dec
mov
aas
jge
cli
les
cmp
aaa
clc
das
xor
mov
lds
cs
lret
xchg
ljmp
clc
sub
fiaddl
popa
mov
mov
mov
dec
mov
cltd
push
mov
xor
iret
sub
sub
mov
and
fdivs
inc
xchg
fisubrs
xorl
out
lds
fwait
icebp
dec
cwtl
adc
imul
sbb
js
pop
ss
jl
in
sbb
rclb
add
cltd
pusha
push
fsubrs
test
xlat
adcl
pop
add
movsl
cmp
push
mov
test
mov
xor
cmp
sub
push
gs
cmpsl
stos
das
fwait
push
push
mov
mov
in
mov
test
inc
mov
xor
mov
mov
lret
shrl
fcoms
hlt
inc
push
lods
xor
dec
in
incb
shlb
lock
fstpt
sbb
fwait
ret
sbb
cli
int
mov
cld
rolb
outsl
mov
dec
imul
add
inc
addl
mov
js
movsl
cmp
or
dec
movsb
mov
xchg
cli
cmpsl
cmpsl
sub
mov
rclb
int
loop
test
gs
cmp
mov
xchg
repz
pop
in
incl
push
fcoms
or
js
inc
fcmovnu
push
loop
jns
jp
dec
and
cmc
jge
jnp
insl
enter
cmp
dec
clc
test
fnstenv
and
mov
lds
or
aad
push
fsubl
cmp
mov
xchg
test
out
pop
xchg
pop
push
mov
mov
add
dec
testl
cmpsb
pop
lahf
es
jae
xlat
rclb
dec
in
lock
xlat
popf
call
pop
dec
sbb
stos
sbb
fbld
fldt
insl
frstor
lret
popf
fs
div
push
cmp
into
sub
jnp
push
stos
pop
or
mov
scas
xor
arpl
dec
mov
inc
mov
repnz
aas
fcomps
pop
ret
pop
pop
in
lahf
jb
add
jnp
xor
test
or
fwait
aam
add
xor
rep
pop
out
mov
mov
stc
xchg
xor
xor
pop
mov
xchg
scas
mov
mov
imul
jo
dec
or
sbb
pop
mov
inc
sub
push
sbb
dec
jge
mov
or
mov
xor
cmp
mov
test
cmp
daa
dec
call
repnz
sahf
cmp
inc
out
mov
xor
xchg
jmp
xacquire
push
mov
jnp
dec
jp
push
int
cmp
daa
add
cmp
sub
jp
outsb
push
aas
cmc
push
lock
std
shrb
shl
push
lret
int3
dec
xorb
imul
mov
nop
or
mov
jno
fs
movsl
xlat
adc
shll
loop
out
mov
mov
rcrb
jnp
frstor
pop
lods
push
lahf
sub
lods
jmp
sub
lcall
dec
rorl
dec
sbb
nopl
ja
sbb
faddp
dec
inc
popf
mov
mov
adc
icebp
push
cs
call
cli
cmpl
add
in
mov
imul
mov
push
js
int
mov
push
sbb
fnstenv
popa
adc
sbb
or
xlat
sub
int3
or
popa
xor
dec
inc
push
xchg
add
dec
and
mov
lods
adc
pop
lds
xchg
or
push
jp
cmp
cltd
inc
dec
xchg
add
js
gs
enter
or
ja
sbb
subl
lcall
pop
ss
add
cli
arpl
sbb
out
pop
sbb
js
or
scas
mov
dec
adc
push
mov
fsubrl
add
dec
push
pop
push
sub
xchg
mov
stc
jmp
mov
inc
mov
sub
cs
notl
mov
mov
xor
das
in
shl
push
repnz
pop
or
pop
dec
faddl
inc
cmp
cmp
aad
mov
sub
mov
xchg
mov
ja
xor
iret
int
rcrl
inc
inc
loopne
adc
push
rclb
inc
aam
mov
dec
repnz
push
loop
test
and
mov
or
inc
je
out
cwtl
nopl
in
fistps
sbb
addr16
fnsave
push
dec
shrl
test
xor
push
in
push
fisubl
insb
out
into
int3
mov
add
test
fsub
shrl
stos
cmp
ljmp
mov
mov
mov
clc
sbb
dec
shlb
add
pop
xchg
ss
adc
inc
cmpsb
imul
mov
dec
lahf
sahf
jb
pop
cmp
and
sbb
mov
scas
jmp
movsl
mov
add
cmc
jbe
dec
push
insl
scas
hlt
aaa
scas
out
mov
xor
lea
mov
cmpsl
xor
out
repz
ret
outsb
faddl
pop
pop
int3
add
sbb
jecxz
gs
rcrl
or
mov
or
rcrb
mov
int3
adc
xor
and
mov
xchg
adc
pop
les
push
sub
test
ja
inc
mov
adc
test
adc
mov
push
ljmp
test
cld
dec
je
popl
add
cmp
add
test
decb
jb
pop
mov
cmp
push
lret
mov
xchg
add
outsl
adc
lret
scas
cmp
mov
adc
sbb
into
gs
cmp
pushf
sbb
aad
xor
mov
jge
xchg
push
cmp
mov
sub
push
push
mov
push
or
adc
jecxz
ja
mov
mov
scas
xchg
ret
xchg
inc
adc
pop
xchg
jle
cmpsl
dec
in
dec
test
add
cmpsw
fidivl
orb
scas
lahf
pop
mov
frstor
mov
adc
shll
sahf
xor
push
push
xchg
ficoml
and
push
rclb
or
mov
sbb
xchg
imul
pop
xchg
cmp
data16
dec
mov
stc
scas
dec
pop
jmp
mov
xchg
xor
js
xchg
aam
xchg
push
pop
fiadds
mov
insl
cmpb
mov
outsb
sbb
sti
sahf
pushf
mov
rcrl
scas
rcrl
sub
cmc
jge
fs
imul
lcall
mov
dec
push
inc
mov
xchg
insl
hlt
shl
rcrl
cltd
ret
test
stos
addl
out
inc
mov
xor
mov
test
inc
addr16
fnclex
sbb
cltd
test
jp
ds
jo
pop
or
ljmp
les
enter
ficompl
pop
xorl
mov
mov
jo
ss
int3
push
mov
mov
sub
push
push
push
lods
cltd
lods
movsl
movsl
and
xchg
push
push
sti
fisttpll
stc
repz
test
daa
test
jnp
push
or
sub
hlt
arpl
sub
dec
adc
push
dec
inc
enter
sub
sbb
fsubs
aad
loope
es
icebp
xor
or
out
mov
push
mov
inc
and
mov
scas
xchg
repz
imul
mov
dec
mov
adc
imull
push
xchg
push
fs
std
dec
imul
stc
xchg
jne
push
lahf
sub
dec
test
js
ret
mov
jle
xlat
mov
mov
push
stos
xchg
mov
mov
imul
sti
pop
or
or
xchg
push
aad
rorb
mov
movsb
cmp
sbb
mov
pop
cs
and
cmpsl
mov
push
pop
cmpsl
es
and
repnz
loop
cmp
scas
jle
cltd
push
retw
ret
jb
loopne
mov
xchg
aad
ss
pop
shll
out
mov
mov
arpl
cmp
mov
shr
mov
inc
adc
add
popl
ret
ret
xchg
cmp
add
lds
dec
insl
mov
mov
push
shrb
mov
ss
adc
ds
mov
xchg
ss
pushf
cmpsl
push
subb
cmpsl
sarl
mov
and
add
pop
pop
test
movsl
sub
push
pop
fcompl
ds
inc
pop
dec
xchg
jae
shl
scas
mov
inc
sahf
adc
mov
sahf
out
sbb
in
fiaddl
outsl
fildl
pop
js
loopne
pop
pop
add
jecxz
data16
scas
lods
je
mov
pop
inc
pop
jb
dec
loope
aaa
add
push
jno
lock
push
pop
lock
in
inc
or
and
add
push
fdivrl
test
ss
test
mov
push
mov
jl
and
sub
mov
es
jne
lea
dec
or
aad
jp
pop
push
mov
push
add
aas
into
xor
push
mov
std
mov
test
shr
jne
adc
add
in
sub
xor
movsl
adc
inc
lods
lods
lret
cmp
sub
push
movsb
jle
prefetcht2
mov
dec
mov
shl
sahf
popf
in
lret
mov
xchg
rcrl
jno
fs
mov
cmp
pusha
int3
jge
out
icebp
fdivs
mov
iret
push
jb
jb
daa
xchg
pop
test
cmp
imul
lock
sub
jecxz
add
cltd
cli
shll
imul
jge
iret
jbe
pop
and
mov
jne
cmp
sahf
loope
or
cld
push
inc
in
jmp
mov
push
in
adc
jb
dec
scas
fildll
jbe
mov
sarl
and
mov
mov
arpl
call
jg
mov
sbb
and
and
jmp
lock
enter
push
push
fimuls
enter
mov
push
out
mov
pop
je
xchg
movsl
or
mov
add
push
mov
sahf
mov
mov
lcall
leave
lods
cmp
nop
pop
xchg
popf
js
lds
dec
jb
lret
mov
sarb
push
jae
and
xchg
fdivrs
aaa
jl
pop
iret
push
jl
fdivr
shrb
out
int
xchg
popa
cmp
enter
add
lahf
rolb
test
rorl
jmp
cwtl
ret
cli
sub
push
jecxz
adc
xchg
push
jge
ficomps
arpl
mov
in
push
or
ja
icebp
aam
in
pop
testl
lods
lds
cmp
xchg
xchg
sub
mov
aam
mov
mov
and
enter
test
sbb
sbb
stc
push
mov
dec
ss
js
test
and
jl
pusha
jns
fwait
scas
cli
hlt
adc
in
xor
scas
add
out
mov
leave
negl
pop
jge
aaa
test
dec
sbb
or
stos
xor
jmp
scas
mull
notb
jno
lods
lock
aaa
jbe
addr16
pop
call
aad
inc
jl
je
dec
sti
leave
and
xchg
cmp
dec
xchg
pop
je
cmp
add
dec
mov
int
jbe
test
jmp
negb
pop
lcall
dec
xchg
call
mov
xlat
xor
or
mov
ljmp
es
lock
notl
pushf
dec
adc
adc
into
nop
and
dec
jb
and
lods
xchg
push
pop
mov
sarb
inc
xchg
js
pop
imul
inc
adc
mov
and
dec
mov
scas
or
hlt
inc
xchg
add
mov
clc
gs
rcl
xchg
mov
mov
xor
out
jae
fucom
and
sub
inc
das
mov
mov
fs
dec
or
pop
loop
xlat
dec
pusha
inc
jno
inc
xchg
sub
cld
push
pop
xorb
lods
add
lock
ss
ret
add
es
adc
cmp
test
push
jbe
add
scas
in
loopne
cwtl
je
mov
and
in
lds
cmp
cmp
lds
pop
rol
stos
sbb
test
test
in
cmpsb
push
in
add
and
inc
pop
xor
sbb
fsub
add
dec
test
int
incl
and
shrb
cmc
stos
out
pushf
push
xchg
inc
in
mov
and
aas
cmc
sbb
icebp
pop
inc
loope
popf
mov
fcompl
es
and
lea
jge
ret
pop
dec
xchg
xchg
stc
mov
xor
pusha
and
and
fadds
aaa
lds
ret
cli
test
imul
mov
push
pop
cld
sub
insb
std
mov
lcall
iret
out
repz
stos
and
shl
jp
pop
push
mov
ja
push
movsl
or
inc
push
xchg
mov
pop
js
addb
pusha
jecxz
inc
pop
pop
adc
cld
xchg
pop
shlb
rcrb
push
mov
sub
xchg
sbb
push
or
xor
popa
sub
loope
cwtl
or
les
lcall
xor
int3
insl
movsb
hlt
cmp
push
mov
sub
mov
mov
shrb
mov
fwait
sub
adc
mov
shr
insl
pop
push
shrb
fbstp
repz
test
xrelease
mov
inc
and
jge
sbb
pop
xor
nop
add
sbb
push
pop
lea
shll
pop
imul
inc
xchg
pop
xor
xchg
lahf
jno
adc
fs
pop
cltd
filds
xchg
clc
cmp
dec
inc
popa
nop
lods
std
lock
xlat
pop
push
or
cmp
pop
pop
fnstcw
fisttpll
adc
rcrl
push
cmc
or
bsr
imul
cld
xor
into
inc
into
bnd
sub
jb
test
arpl
test
sti
sahf
mov
test
pop
inc
iret
iret
sar
dec
clc
insl
test
out
inc
aam
icebp
rol
mov
std
call
shrb
aas
lods
xor
sarl
dec
xchg
inc
lret
lods
hlt
sub
xor
daa
sbb
fisttpll
or
enter
hlt
dec
add
rorl
sbb
dec
lahf
mov
mov
adc
mov
ds
andb
push
test
and
or
call
mov
add
xchg
lea
fmul
xor
dec
adc
into
shll
cwtl
jno
push
stc
sar
inc
ja
dec
rol
and
push
xchg
xorb
dec
fstpt
sbb
xchg
loop
mov
call
imul
mov
int
movsb
popa
call
adc
push
sbb
pop
xor
sbbl
xor
bound
stos
and
inc
cli
mov
pushf
cltd
mov
test
sub
gs
mov
dec
test
mov
jl
dec
or
scas
scas
push
outsl
cmp
aaa
shll
mov
mov
push
jg
jecxz
jecxz
xor
out
lcall
int
jno
push
ficompl
adc
jge
mov
xor
lret
adc
fldl
cmpsb
addr16
push
test
lahf
test
mov
lcall
stos
xor
dec
outsl
add
xor
clc
jo
adc
cmpsl
int
aam
mov
or
xorl
sbb
icebp
lock
in
imul
bound
repz
popa
in
ss
test
cltd
inc
jge
outsl
pop
xor
fisubrl
lods
movsb
dec
out
loope
mov
aas
negl
mov
sbb
ja
pushf
int
lods
hlt
pushf
cmpsl
adc
stos
insb
shlb
push
or
mov
pop
dec
out
mov
mov
out
shrl
mov
imul
adc
jl
sub
rolb
sbb
push
adc
push
leave
mov
call
fs
push
pop
or
std
mov
dec
cmp
or
mov
into
nop
ret
dec
xor
adc
push
mov
sti
ss
fwait
popf
sbb
cmp
add
mov
xchg
sbb
js
repz
out
aad
insl
dec
aad
pop
lea
push
lods
add
nop
adc
lahf
push
adc
push
dec
stc
mov
ret
bound
aam
sub
push
sbb
dec
inc
lretw
cmp
cmpsl
js
push
cld
stos
adcl
pop
lock
sbb
pusha
add
ret
iret
inc
sbb
and
xchg
subl
inc
xchg
test
jo
test
test
outsb
inc
loop
imul
inc
mov
movsl
fstpt
push
shll
dec
xchg
pop
mov
or
xor
popf
jnp
incb
pop
fidivs
ss
sbb
out
fadds
sar
fstpl
mov
mov
repnz
sbb
fimuls
xchg
sarl
shr
lea
repz
mov
mov
jg
int3
inc
imul
jno
xchg
cmp
pop
jo
sbb
xchg
cld
lret
xor
das
push
mov
mov
dec
movsb
adc
pop
pop
fcmovu
rorl
or
pop
or
out
inc
xchg
xchg
mov
mov
test
les
int3
in
and
mov
jbe
movsl
pop
into
adc
hlt
add
es
lods
pop
pop
test
lods
dec
push
loopne
jo
xchg
inc
daa
dec
bound
or
js
xchg
mov
mov
and
add
jmp
lock
jbe
cmp
push
mov
xchg
and
fucomip
adc
and
inc
jmp
adc
int
fmuls
or
cmpsl
dec
jnp
sbb
jg
inc
or
sbb
incb
ret
dec
outsb
imul
dec
push
clc
xchg
imul
xchg
adc
pop
dec
popf
in
pop
stos
enter
sub
loopne
dec
pop
arpl
mov
mov
pop
icebp
fisubrl
rcll
push
pop
pop
push
mov
mov
out
out
lahf
jmp
add
ret
dec
pop
stos
and
in
idivb
jnp
sti
lods
dec
out
popa
pop
inc
cli
and
testb
subl
paddusb
hlt
rorl
pushf
fisttps
add
scas
sbb
gs
in
es
sbb
jbe
cmpsb
adc
cmp
movsb
pop
subl
mov
sbb
shll
jno
add
scas
add
ljmp
nop
cmp
add
mov
bound
cmc
daa
push
lcall
imul
or
cmc
nop
jbe
inc
cmpb
mov
xchg
bnd
pop
lea
int
or
aad
insl
xor
shlb
rcr
push
shll
test
mov
jmp
xor
mov
inc
xlat
mov
rclb
scas
es
les
jl
cltd
dec
movsb
lret
sub
mov
dec
scas
mov
cmp
push
icebp
les
popf
negb
mov
or
mov
aas
xchg
fdivp
movl
sbb
lods
imul
pop
pop
cmp
cld
imul
inc
or
sbb
ret
mov
inc
mov
rorl
test
mov
jmp
mov
repnz
sbb
js
xor
andb
imul
cmp
imul
mov
bound
vmovhlps
out
fldenv
insb
clc
jo
mov
fdivs
jae
divl
aaa
out
sbb
and
ss
mov
xchg
and
nop
ja
and
push
and
repnz
lahf
insl
pop
push
dec
xor
pop
rcrl
mov
xchg
xlat
jmp
and
addr16
push
mov
enter
mov
sbb
jb
sti
out
out
xor
ud2
jae
adc
or
fdivr
or
pop
inc
mov
pop
popa
sbb
loopne
fidivrl
daa
sbb
pop
lea
adc
cs
fmuls
test
pop
sub
inc
les
data16
ljmp
loopne
arpl
jne
test
jb
lods
into
sub
jno
push
xor
mov
cwtl
pop
insb
shlb
jmp
sarl
ret
scas
lock
dec
push
out
pusha
inc
mov
mov
sub
jg
adcb
ret
or
xor
sub
jns
sbb
mov
jmp
pusha
ret
nop
loope
pop
arpl
xchg
push
popf
inc
sub
xlat
sbb
daa
inc
inc
idiv
std
and
xchg
je
jae
fnstenv
cmpsl
dec
addr16
and
mov
jae
popf
popa
pushf
cmc
shlb
jle
mov
testb
daa
bound
testl
sub
fiadds
cmp
repz
add
scas
out
repz
fidivs
jp
mov
push
cmp
cmp
ljmp
jbe
pop
pop
into
jne
cmc
insl
push
jnp
out
scas
or
add
push
not
or
xlat
push
lods
sbb
dec
xchg
shlb
mov
pushl
inc
mov
dec
or
or
mov
mov
aad
inc
pusha
and
dec
outsb
aam
cmp
add
cmp
in
jne
pop
xor
dec
scas
adc
scas
pop
lods
ja
daa
fs
ds
xchg
scas
and
iret
fstl
jo
push
mov
or
mov
mov
jl
push
call
lret
dec
xchg
lret
movb
or
cmp
adc
inc
aas
clc
xchg
int3
xor
cmp
mov
or
sbb
lret
ret
mov
cs
cmp
loop
lret
cmp
fbld
xchg
lret
inc
add
out
sbb
pop
clc
mov
clc
cmc
and
aas
and
xchg
cmc
lods
push
cltd
and
insl
pusha
scas
lcall
xor
mov
scas
cltd
cld
out
sbb
adc
ffreep
aad
int3
mov
lcall
mov
ljmp
out
add
jmp
outsb
movsb
fisttps
ret
lods
cmp
insl
lods
mov
aas
xchg
inc
jbe
iret
ret
pop
push
and
and
pop
fcoms
and
loop
imul
sub
sbb
inc
mov
gs
jno
out
rcll
gs
test
pop
xor
lods
jne
mov
ljmp
cmpsb
out
std
in
stos
jb
imul
adc
repnz
cld
enter
push
and
lret
mov
ret
mov
mov
rorl
mov
inc
xor
xchg
js,pt
ds
and
inc
arpl
sti
push
cmp
mov
aaa
nop
push
inc
pusha
cmp
bound
lods
in
std
and
cmpsb
mov
enter
ret
mov
cltd
mul
push
sbb
pop
ljmp
jns
sub
push
les
lret
or
mov
ret
dec
clc
sub
jg
enter
dec
jne
mov
cmc
test
outsl
out
cmp
push
mov
mov
fstpt
std
pop
dec
adc
movsb
dec
sbb
daa
movsl
rorb
pusha
ss
enter
push
lcall
adc
inc
adc
arpl
sub
cltd
arpl
out
leave
or
repnz
adc
jb
xor
sahf
xchg
sarl
in
jmp
nop
mov
push
cwtl
in
mov
dec
pop
pop
add
rcr
fldt
dec
imul
xor
adc
dec
inc
test
sbb
dec
call
mov
mov
pusha
std
sarb
push
mov
add
sbb
in
fstl
fstpt
loop
and
int3
add
xchg
sbb
jbe
mov
mov
mov
in
inc
daa
subb
push
outsl
pop
into
xor
mov
lcall
dec
in
dec
idivb
stos
setg
mov
sbb
lcall
push
cmpsb
xchg
or
pusha
push
into
std
pop
cmpsb
clc
lods
sub
stos
push
out
adc
fs
push
scas
sub
ds
xor
shlb
out
cmc
dec
mov
hlt
adc
push
xchg
push
dec
into
xor
fwait
lea
cmp
jnp
mov
cmp
inc
adcb
xchg
cwtl
lock
call
daa
sub
cmpsb
mov
enter
jo
loop
mov
xchg
inc
adc
stc
jl
mov
jmp
arpl
fcoml
test
stc
and
nop
mov
mov
loope
movsb
cmc
pop
inc
lds
inc
testl
sbb
or
mov
nop
ljmp
insb
xchg
pop
pop
or
push
in
testl
mov
pop
mov
mov
push
jo
mov
xchg
cmpsb
push
arpl
mov
xchg
cwtl
stc
roll
stos
xchg
pop
mov
mov
je
aam
jg
adc
mov
test
mov
or
xchg
mov
fcomps
jmp
pop
cmp
dec
mov
test
mov
xchg
sub
inc
sub
dec
gs
adc
pop
mov
add
orl
pushw
sbb
inc
mov
call
xor
mov
lahf
sub
testl
cs
sbb
das
iret
push
mov
mov
cltd
jg
mov
pop
pop
nop
or
aad
fstps
fincstp
push
add
mov
pop
lds
ret
mov
pop
xor
xchg
dec
xchg
mov
cmp
lret
icebp
xchg
lea
sahf
rclb
cld
xor
test
sub
lahf
fcmovbe
xor
ret
xor
mov
pop
sub
cwtl
xchg
inc
and
push
mov
iret
lahf
lret
pop
cmp
loope
cmp
sub
add
ss
popf
jle
dec
push
out
jl
xor
cmp
mov
mov
inc
faddl
jns
mov
das
pop
pop
out
lcall
lcall
push
add
pop
andb
xor
lcall
mov
rorl
jmp
cmp
les
fisubrl
adc
in
jo
pop
mov
jae
bound
fidivrs
adc
jb
mov
lods
dec
mov
test
stc
dec
mov
leave
adc
and
clc
cmp
push
pushf
inc
outsl
sbb
repz
cltd
mov
ret
testl
add
sub
pop
pop
fsts
xor
addr16
push
or
or
xchg
insb
push
testl
aaa
pushf
cmp
push
bnd
imul
pop
enter
ja
repz
push
push
and
cs
fbstp
into
and
int3
sbb
jae
adc
in
inc
xor
sub
ljmp
cmp
insb
mov
lret
dec
lahf
sbb
and
cmpsb
mov
test
sbb
leave
adc
fisttps
fildl
repz
repnz
cmp
lret
add
push
xor
adc
inc
sbb
adc
xor
in
sub
scas
movsb
and
inc
push
cmpsb
aas
jnp
scas
sbb
ds
icebp
fwait
pop
lods
mov
bound
add
lea
jle
data16
cmp
mov
outsl
scas
cmp
addr16
pop
rorb
jo
dec
or
fwait
test
and
inc
mov
outsl
nop
popf
mov
dec
or
xchg
add
add
pop
inc
mov
cmpsb
add
inc
push
jns
cmpsl
scas
fyl2xp1
cli
push
mov
repz
dec
cmp
inc
dec
mov
push
push
cltd
pop
xchg
lret
icebp
sbb
dec
ds
out
repz
repnz
shl
xor
popf
arpl
jge
xor
loopw
sbb
stos
mov
push
xchg
push
push
mov
out
sub
or
adc
jb
stos
mov
mov
andb
xor
mov
shll
sub
std
cmp
ret
adc
pushf
sbb
cmp
mov
dec
cwtl
xor
aad
push
pop
ja
jp
scas
punpcklwd
xor
xchg
incb
dec
cs
pop
lret
scas
jns
sub
fcoml
dec
jns
mov
jmp
das
push
jnp
add
mov
mov
test
mov
dec
sahf
dec
add
in
fstp
outsl
ljmp
mov
xor
cmp
sbb
mov
jnp
push
out
push
mov
stos
and
std
mov
aaa
sahf
jns
mov
mov
mov
addl
xor
repz
mov
inc
adc
dec
jo
jo
icebp
add
xor
test
mov
dec
dec
popf
mov
mov
xor
pop
incl
aad
das
mov
xchg
mov
out
dec
stc
inc
outsb
xor
push
mov
test
sarb
fistpl
mov
fimull
clc
out
ja
negl
inc
jnp
adc
lea
cmp
adcb
mov
dec
adc
pop
dec
jl
loop
xchg
jbe
mov
ret
ljmp
std
add
iret
and
int3
pusha
mov
call
xor
insl
adc
cld
lods
loop
lods
in
out
cmp
inc
fsubl
icebp
subl
ss
lahf
negl
jnp
jp
hlt
cmp
lret
mov
out
pushw
inc
shlb
mov
imul
mov
mov
test
inc
shlb
jle
dec
sbb
cmp
mov
in
pop
out
cmc
pop
dec
push
xchg
sbb
adc
jg
daa
aaa
aad
test
jle
enter
mov
push
lcall
jle
insb
outsb
push
test
int3
fisubl
push
push
out
shlb
ja
test
jne
imul
mov
int3
pushf
shl
mov
addr16
in
cmpsl
pop
jp
cs
ds
roll
sbb
cmp
sbbb
rorl
mov
jge
fsub
inc
push
dec
stc
and
pusha
push
xchg
add
pop
cs
out
pushf
stos
sub
inc
filds
or
pusha
mov
push
jno
push
cmpsb
insl
adc
xor
xlat
bound
arpl
movsb
ljmp
pushl
fadd
filds
movsb
cmp
aad
sub
xor
inc
dec
dec
jae
aaa
lcall
addl
jno
mov
lds
stos
stc
and
xor
ds
xor
jo
or
jnp
cwtl
dec
dec
mov
dec
sbb
stc
rorl
dec
lods
mov
je
popa
cmp
jge
mov
push
dec
mov
aam
mov
and
mov
adc
sub
pushf
stos
mov
mov
addb
hlt
cwtl
or
cmpsl
add
mov
cmp
or
insl
cmpsb
sub
mov
cmp
cltd
test
mov
mov
push
insb
movsb
cwtl
stos
inc
cmpsl
and
or
loop
cmp
xorb
inc
xchg
stos
push
jl
push
sarb
inc
mov
idivb
sbb
add
mov
or
push
add
add
push
xchg
push
add
push
inc
mov
dec
cmp
lret
popa
aam
sbb
call
mov
xchg
push
inc
adc
lods
xor
mov
xchg
lods
or
es
hlt
xor
cmpsb
nop
stos
jnp
std
fnstenv
fisubrs
rcrb
pop
xor
mov
cli
gs
sub
repz
cmpsl
sbbl
aas
cli
adc
adc
pop
pop
pushf
jnp
mov
and
push
cmp
lret
test
subb
xlat
outsb
imul
adc
mov
stos
or
cmp
ffreep
out
lea
mov
cli
mov
xchg
mov
addr16
mov
mov
cwtl
mov
inc
pop
int
push
shlb
ret
call
xchg
xor
cmp
int
mov
cmpsb
lea
scas
fidivrs
jle
in
push
and
test
dec
cwtl
pop
repnz
ds
xchg
pop
loop
sub
lods
jle
lahf
push
or
popl
pusha
fidivrs
addb
mov
fldl
rclb
push
pop
loopne
call
mov
adc
sub
icebp
or
das
test
stos
daa
xorb
imul
mov
je
imulb
dec
push
xor
push
aas
rcrl
xchg
ss
test
cmp
seta
push
push
mulb
sub
in
ret
add
test
dec
xor
cmp
xchg
cmp
ret
and
jo
sub
repz
repz
push
xchg
dec
ret
adc
leave
ret
scas
scas
ds
xchg
push
inc
jg
mov
pop
rorb
imul
mov
push
xlat
in
mov
mov
push
mov
cmc
mov
repz
mov
outsl
pop
pop
mov
pop
xchg
mov
movsb
and
xorl
mov
xlat
mov
jae
aaa
stos
push
inc
and
xchg
test
push
push
stos
pop
push
shr
sub
or
dec
lods
ss
leave
sub
les
cs
push
shll
into
ljmp
shl
add
push
popa
lods
xor
adc
mov
in
sti
xlat
clc
je
adc
dec
mov
pop
rorb
inc
inc
push
icebp
push
daa
insl
rcrb
jne
addr16
popf
xor
add
notl
xlat
jo
xchg
push
inc
dec
add
sub
xorl
les
sti
adc
and
incb
fisttpll
shll
into
mov
sub
adcb
xchg
sahf
in
xlat
out
in
out
sbb
mov
inc
dec
lods
imul
cmpsb
sub
add
cli
and
pop
mov
jecxz
mov
ja
xchg
dec
shll
push
call
push
add
aad
rep
jne
rcrl
pop
mov
std
add
jmp
adc
das
add
dec
push
push
jae
data16
fcmovbe
pop
fwait
lods
dec
js
in
cld
dec
adc
loop
test
sbb
out
es
divb
jae
push
mov
lods
lods
sbb
push
cmp
inc
push
adc
cwtl
fmull
iret
mov
mov
ret
ret
dec
cmpsl
jne
scas
sub
mov
mov
pop
icebp
outsl
adc
insb
mov
sbbl
xchg
aam
xor
loope
sahf
into
and
insl
das
mov
fsts
adc
outsl
icebp
cmpsl
jno
and
xchg
sarl
or
push
jno
push
nop
sbb
jb
call
mov
incb
mov
sub
out
dec
aad
je
outsb
lock
jge
xor
mov
jae
push
testb
out
jns
jge
leave
and
jmp
lea
mov
je
negb
rclb
jge
je
lds
popa
dec
addr16
jbe
ret
insb
stos
call
fcoms
push
jmp
fstp
call
inc
sbb
cmp
hlt
adc
aas
or
or
cmp
mov
push
push
pop
pop
and
push
mov
inc
push
or
adc
mov
pop
pushfw
dec
or
jae
mov
adc
dec
cs
and
jb
lea
jg
sub
int3
xor
mov
inc
mov
pop
xchg
cmp
mov
pushf
pop
jb
and
pop
xchg
dec
pop
jbe
push
aaa
dec
push
jecxz
sbb
lahf
rorb
sbb
bound
pop
or
push
adc
inc
je
out
pusha
aaa
out
rorl
xchg
push
fistps
hlt
sub
adc
aam
int3
lock
mov
lea
mov
adc
imul
jg
bound
jmp
jno
jnp
jae
mov
inc
mov
es
ss
sub
pop
mov
jle
xlat
clc
sub
jno
pop
mov
push
out
rclb
lods
push
scas
jmp
lods
mov
mov
mov
xor
aas
ja
insb
scas
and
les
xor
jnp
aaa
lods
fiadds
dec
push
mov
scas
leave
cmp
dec
mov
cmc
lret
inc
add
fs
cmp
hlt
mov
pop
test
insb
iret
shr
xor
shl
hlt
xchg
cmp
das
mov
mov
aad
sahf
pop
lahf
cmp
andl
rcrl
xchg
adc
mov
pop
add
or
fimuls
push
mov
mov
or
mov
mov
add
in
add
lea
not
test
adc
cs
and
jle
je
cmpsb
push
enter
cltd
add
les
xchg
adc
mov
pop
sub
sbb
or
pop
fdivr
xchg
movsl
pop
push
daa
sbb
mov
cmp
xor
andb
shr
notl
test
adc
xchg
aas
add
inc
lret
and
icebp
cmp
lods
adc
pop
fcomps
in
sbb
cmp
mov
inc
fs
xchg
and
cwtl
bound
arpl
xchg
inc
push
jno
lret
ljmp
das
add
mov
andb
mov
addr16
add
testl
jl
dec
dec
sub
das
xor
orb
pop
call
xor
cmpsb
popf
ja
fs
cmp
clc
loope
incb
adc
ficoms
mov
fcmovnu
sbb
add
rcrl
lret
push
das
cs
push
or
xchg
pop
jnp
negl
fcmovnu
lcall
xlat
rep
fimuls
out
mov
jg
jb
lahf
popf
leave
xchg
and
fcmovnb
add
ss
cmc
ret
adc
movsb
stc
loopne
push
xchg
inc
jne
sbb
adc
sub
orb
jecxz
pop
push
dec
vmovups
mov
lods
xchg
pop
push
pop
es
push
stos
bound
mov
pop
or
cmp
rolb
pop
inc
push
pusha
idiv
adc
and
es
movsb
in
cwtl
adc
push
pop
in
xchg
lea
adc
and
mov
int
jbe
push
push
rcr
pushf
out
inc
dec
add
lods
xchg
movsl
jge
add
repz
cmpsb
xchg
jb
in
std
stos
in
into
fs
jb
cmp
push
popf
out
pop
cmp
in
inc
mov
fbld
jbe
negb
insl
divl
cmpsl
xchg
inc
inc
movsb
mov
in
scas
inc
cmpsl
push
jecxz
cmc
xchg
jp
clc
inc
loop
js
fsub
insl
sub
sbb
inc
and
xor
mov
dec
ret
sub
push
jno
sbb
out
mov
and
dec
test
inc
out
or
inc
add
mov
xchg
mov
or
jae
hlt
or
mov
fidivrl
mov
inc
sbb
icebp
mov
or
arpl
pop
fwait
push
mov
lds
pop
cwtl
adc
sbb
lret
mov
shl
mov
cmp
xor
out
adc
movsb
inc
lods
negb
into
sub
xlat
and
insl
mov
mulb
xchg
and
push
or
in
jae
or
jae
push
xor
xchg
adc
cwtl
ss
fcmovnb
sbb
xor
jne
insl
bound
xor
adc
dec
loopne
mov
and
add
cmp
pop
add
hlt
lcall
xorl
mov
lahf
in
sub
dec
leave
test
sub
and
add
sub
pushf
fstpt
mov
mov
inc
icebp
xchg
xor
mov
adc
inc
push
fcoms
inc
adc
pusha
adc
inc
and
mov
test
je
or
scas
or
cmp
jnp
jmp
les
lock
imul
rcrb
rol
jmp
popa
outsb
les
adc
pop
pop
jbe
dec
inc
lock
sbb
mov
mov
add
or
scas
hlt
xor
out
or
push
dec
add
push
cwtl
and
push
mulb
pop
jnp
in
enter
ljmp
inc
pop
shlb
xor
jbe
jg
push
leave
and
mov
inc
sbb
dec
int
jmp
jle
mov
les
loop
add
pop
call
or
in
int
rcl
adc
in
lret
inc
jecxz
or
test
loope
loopne
sbb
cmp
sub
mull
lods
outsb
push
cwtl
pusha
pop
js
sub
lods
and
sub
mov
mov
insl
add
popa
mov
test
mov
movsl
cmc
aaa
sarb
pop
jo
mov
jns,pt
outsb
addr16
mov
sub
lret
xchg
call
ret
scas
inc
movsb
or
mov
sub
lret
xchg
rcrl
iret
inc
sbb
xchg
and
out
cmp
mov
imul
loope
push
movsl
sbb
pushf
cwtl
mov
dec
dec
mov
mov
popf
lcall
push
lock
jo
sbb
test
dec
sarb
add
lret
addr16
sbb
ss
mov
pop
outsb
pop
adc
jp
leave
lret
sub
push
inc
loopne
dec
push
outsb
ret
fisttps
or
push
sub
or
adc
out
and
mov
xchg
add
add
xchg
cwtl
js
inc
jp
imulb
push
xchg
scas
pop
idivb
jbe
lret
mov
sub
pop
pushf
push
fs
dec
mov
add
les
sbb
aam
add
dec
fdiv
add
lea
lods
cmp
aam
pop
sub
cwtl
fs
in
adc
sub
andl
dec
adc
jo
int
push
enter
mov
dec
aaa
mov
and
out
dec
or
icebp
js
movsl
adcb
push
shrb
and
mov
jae
sub
fbstp
ficomps
lds
mov
push
xor
mov
out
pop
xorb
jmp
scas
xchg
mov
sbb
mov
adc
into
je
cmp
jl
sbb
jmp
or
or
push
xchg
jl
cmp
ljmp
inc
cltd
dec
ret
orb
cmp
aas
cmpsl
pop
xchg
sahf
outsl
push
rcrl
stos
add
adc
sbb
jbe
stos
pop
adc
jle
in
sti
ret
repz
lcall
push
jle
or
pop
rorb
in
pop
ja
cltd
imul
or
push
xor
imul
inc
push
pushfw
or
mov
jecxz
xor
dec
push
stos
test
out
pop
jecxz
ljmp
shlb
pop
test
ret
lret
scas
jb
xor
xor
inc
rcr
or
ss
cli
sub
cld
int3
and
lea
adcl
mov
sar
add
pushf
inc
mov
insb
cltd
addr16
cltd
push
push
pop
jp
clc
leave
pop
or
push
js
repnz
and
es
push
test
aas
mov
les
sub
mov
jle
int
cmp
fstpt
or
lahf
cmpsb
pop
inc
fists
hlt
push
fld
loop
std
and
cmpsb
dec
jecxz
int
mov
andb
mov
mov
addl
ss
adc
jae
xlat
movsb
repnz
jecxz
inc
push
mov
stc
jno
jl
and
or
mov
aaa
push
shrl
mov
in
jno
aaa
jnp
pop
ds
add
push
test
pop
in
fldt
repnz
cmp
add
push
in
mov
mov
inc
push
mov
jo
mov
gs
loope
cld
fidivrl
shll
add
sahf
shll
fidivrs
push
xchg
pop
cmp
push
sbbb
loop
repnz
xchg
imul
aam
pop
dec
std
ds
scas
pop
fadds
gs
xcrypt-ofb
cmpsl
cs
out
push
push
scas
xchg
dec
dec
test
xchg
cmp
add
dec
popa
testl
adc
pop
leave
sbb
sbb
inc
mov
sub
mov
lock
ss
aam
and
hlt
std
xchg
sub
pop
pop
sahf
push
repz
adc
cmp
lea
and
cmp
lods
lock
and
adc
cld
mov
daa
push
mov
push
popf
jb
sbb
stos
push
clc
fldcw
pop
pushf
sub
enter
push
cli
ret
out
stos
pop
xchg
pop
subl
and
in
and
repnz
jecxz
mov
es
mov
pusha
mov
call
dec
popa
pop
cmp
insl
and
dec
sbb
test
pop
mov
cltd
popf
das
fs
in
and
xor
les
mov
aaa
cmpsl
mov
aam
dec
push
addb
jecxz
loope
into
cld
sbb
nop
mov
fisubrl
comiss
jae
xor
in
test
outsb
sti
movsl
jo
out
cmp
or
out
mov
jp
clc
dec
push
inc
xor
jne
pop
imul
pop
in
xchg
mov
or
mov
mov
imul
inc
pop
lret
jmp
xchg
dec
sbb
mov
dec
sbbl
popf
mov
push
rcrl
ja
pop
push
pop
or
outsb
bound
loop
or
fcoml
fwait
add
mov
addr16
mov
outsb
je
insl
clc
pushf
lock
insb
dec
mov
dec
inc
adcb
xor
test
cltd
or
jnp
rcl
mov
sbb
inc
dec
inc
jns
ds
lods
add
out
ficoml
add
mov
adcb
pop
jmp
outsb
subb
lods
cltd
cld
pop
out
lods
stc
loope
inc
cmc
fdivrl
inc
cmp
out
sbb
loope
pop
movsb
cmp
fisubrl
push
lock
and
outsb
mov
jno
xchg
pop
daa
adc
sarb
cs
fxch
mov
pop
bound
jecxz
or
add
push
movsl
xchg
push
adc
add
lret
ss
cmpb
mov
mov
mov
inc
cmp
mov
jle
xchg
ljmp
int
jo
or
test
movsb
cmpsb
xchg
outsb
and
dec
outsb
gs
movsb
dec
loopne
dec
inc
mov
mov
fucomip
in
imul
cs
fcoml
movsb
in
decl
and
fildl
dec
bound
jecxz,pn
adc
adc
lods
xor
jbe
test
popa
arpl
ss
gs
jmp
ret
sub
divl
andb
jp
sbb
in
sub
inc
inc
cmc
sahf
mov
test
sbb
lock
std
mov
push
xchg
mov
and
frstor
push
dec
inc
cs
push
outsb
push
call
mov
add
dec
lret
cwtl
jmp
sub
push
dec
shl
sbb
mov
cmc
lcall
xor
imul
mov
cmp
sub
testl
xlat
push
pop
idiv
into
ficoms
xchg
adc
gs
imul
leave
rcrl
leave
fidivl
dec
xor
bound
in
push
mov
push
sub
push
frstor
arpl
push
out
mov
xchg
mov
vfrczsd
lea
push
mov
mov
ljmp
ljmp
xchg
mov
mov
xor
lcall
push
or
cmpsl
loope
jno
jle
dec
mov
xchg
xor
cmpsb
inc
scas
ss
push
int
fs
adc
jecxz
mov
lock
or
jne
pop
in
sarb
inc
jp
aas
sbb
adc
addl
sub
mov
fadd
xchg
hlt
outsl
cmp
dec
lea
pop
ror
mov
mov
lods
dec
leave
xchg
mov
mov
pop
jno
xor
push
in
mov
inc
cmpsl
mov
sbb
out
mov
push
mov
fildl
add
mov
gs
cmpsl
dec
jecxz
movsl
enter
lods
xor
push
ja
mov
and
inc
sbb
pop
and
cmp
jae
movsb
fsubr
add
jae
push
mov
loop
das
fisubrl
jmp
imul
and
push
cmp
jle
mul
shr
mov
inc
push
mov
mov
cmc
mov
sub
adc
inc
push
mov
add
inc
adc
pusha
or
adc
fsubr
push
fstps
loope
cmp
jb
mov
adc
sarb
adc
popa
pop
jge
jnp
pop
cmpsl
lahf
cmpsl
mov
int3
add
daa
lods
push
sbb
sub
push
jno
test
ljmp
mov
push
mov
mov
test
xchg
push
popa
xor
push
or
mov
cltd
jle,pn
add
push
sub
pop
lock
jne
bound
rcrb
gs
out
decb
andl
test
push
fsubrl
dec
mov
cmp
dec
sti
adc
adc
dec
inc
jbe
jge
fidivrs
inc
cmpsb
outsb
dec
sbb
xchg
inc
xchg
movsb
cltd
aad
loop
adc
inc
gs
mov
mov
out
inc
roll
mov
movsl
fistl
test
sub
or
dec
cmp
in
push
add
movsb
shlb
aaa
es
mov
mov
push
fxch
dec
xchg
insl
xchg
ja
cmp
cmp
add
pusha
dec
aad
call
mov
fwait
pusha
inc
xor
pop
sbb
fidivrs
mov
test
idivb
stos
lods
pusha
xor
cmp
fcmovne
shlb
push
ss
mov
xchg
cmpsl
jge
add
lret
or
iret
jns
hlt
inc
adc
push
fistl
enter
pop
cmp
inc
push
push
into
ljmp
incl
stc
icebp
ret
movsb
push
sub
mov
mov
push
lret
lret
out
aad
mov
adc
in
fimuls
add
dec
test
and
xchg
inc
andl
in
lcall
fnstenv
les
add
and
stos
dec
test
std
pop
aaa
adc
xor
popf
subb
sub
movsb
fstpt
xor
jne
sar
jg
clc
shl
xor
mov
xor
adc
add
pop
lock
add
push
popa
sub
aad
jge
cmp
jnp
in
shll
movsl
fdivl
pop
xor
das
mov
testb
scas
int
pop
aad
test
incl
add
addl
pop
mov
jp
fiadds
add
mov
push
xchg
popa
jns
xor
or
fwait
aas
and
jbe
cmp
rclb
and
in
sti
dec
ss
pop
cld
mov
mov
pop
int
pop
ljmp
aaa
cmp
or
addl
scas
enter
push
cltd
cmp
xchg
in
sbb
fidivrl
repnz
inc
repz
fimull
cmpsl
loopne
push
xchg
cmp
jbe
xor
cmp
mov
inc
mov
es
into
scas
mov
ret
add
out
push
js
scas
jp
mov
dec
xor
add
jg
clc
adc
pop
jge
and
int
pop
dec
lea
out
xchg
or
sbb
sub
out
cmp
mov
add
imul
adc
out
fdivp
in
cmp
subl
mov
inc
or
inc
add
loopne
adc
push
dec
stos
lods
pop
sub
add
adc
mov
in
out
cmp
pop
lds
cmpsb
push
or
in
mov
dec
jo
push
faddp
xor
ss
cmpsb
cltd
pusha
inc
jmp
xor
add
push
dec
inc
fwait
aam
lock
cmp
push
pusha
pop
jg
jmp
subb
test
stos
sbb
lods
sub
adc
fsubl
mov
test
pop
mov
add
mov
sbb
add
and
and
scas
push
adc
insl
xor
pop
je
inc
push
mov
sub
outsb
xchg
pop
inc
aas
fdiv
or
cmpb
stc
and
cld
jne
test
ss
cli
mov
jecxz
or
inc
adc
mov
lahf
fs
mov
push
cmp
je
cs
sbb
jg
outsl
sbb
andl
dec
repnz
sub
lahf
popf
sbb
xchg
xor
out
hlt
imul
push
loop
subl
push
and
jge
xor
pop
fs
push
pop
call
jbe
lock
enter
or
das
rcrb
push
push
je
pushf
loopne
sbb
xor
jae
jnp
testb
ds
mov
loop
xchg
jmp
and
fs
lock
fcomp
mov
add
loopne
pop
mov
mov
dec
cmp
enter
mov
fldl
dec
cmpsw
pop
push
fstl
push
fisubl
daa
das
inc
xor
dec
popa
mov
xor
and
sbb
add
mov
and
pop
pop
in
shlb
sub
add
or
cld
jecxz
xchg
out
stos
inc
mov
sbb
sub
je
rol
xchg
dec
sbb
lods
mov
sbb
call
stc
and
lret
sub
and
inc
sbb
mov
pop
xor
clc
test
aam
or
inc
dec
pop
dec
dec
cmpsl
lds
or
mov
fs
mov
xchg
arpl
icebp
xor
sub
cmpsl
push
int
dec
sub
rol
inc
xchg
arpl
loop
mov
and
sbb
jecxz
and
jo
xchg
push
xor
repnz
roll
xor
push
sbb
sbb
fcoms
movntq
out
je
pop
jno
sub
rorb
push
push
cli
mov
les
into
loopne
sub
mov
push
pop
xchg
imul
daa
mov
gs
shll
xchg
xor
adc
rcr
ret
idivb
xchg
outsl
out
lea
jp
cmp
mov
push
push
imul
lods
call
xchg
and
neg
repnz
mov
lret
stos
test
sarb
fisttpl
mov
les
xchg
lds
lahf
jmp
loope
shlb
cmp
ljmp
sbb
ss
lock
sub
popw
test
pop
push
jno
pop
adc
jbe
popf
cmp
neg
out
loop
xor
clc
jae
xor
xchg
add
in
sub
loopne
and
into
or
in
in
clc
test
int
inc
or
aaa
movnti
dec
aas
adc
and
sbb
jg
movsb
mov
xchg
push
test
cld
xor
sub
cld
jp
mov
in
and
pop
mov
shrb
sbbb
movsb
and
xchg
and
mov
stos
adc
ds
psllq
jbe
cmp
ss
jne
cmp
rcr
sbb
mov
loop
jb
stos
dec
add
xor
sub
leave
enter
ljmp
inc
clc
int
fisubl
mov
int3
mov
je
hlt
stos
outsl
aam
xor
pop
mov
loop
out
sub
pop
ja
jg
or
mov
mov
imul
dec
popf
bound
sub
add
pop
xor
xor
arpl
inc
fistpll
insb
loope
sub
cmp
aas
sub
adc
xorb
out
xchg
push
pop
es
lods
outsl
mov
shrb
and
ljmp
clc
jmp
mov
outsb
out
inc
add
ja
mov
pop
outsb
mov
mov
inc
lea
dec
push
push
out
lahf
imul
sbb
mov
fld
mov
sbb
inc
adc
xchg
cmpsl
es
lock
fs
jmp
sub
push
pop
xchg
cwtl
mov
sub
fstl
pop
push
les
out
mov
iret
dec
mov
mov
repz
cld
xor
repnz
xchg
mov
pushf
lea
aam
call
cmc
mov
xchg
sbb
out
call
mov
jecxz
xor
cwtl
jg
mov
xor
cmp
sahf
pop
jecxz
icebp
sti
nop
fisubs
incb
jo
pop
lcall
call
js
stos
repz
push
into
xlat
push
dec
hlt
inc
and
push
in
in
fdivrl
pop
shll
test
mov
dec
cmp
pop
pop
repz
stc
cmp
addr16
pusha
out
arpl
adc
pop
loope
push
inc
inc
sarb
mov
fcmove
test
imul
repz
outsl
scas
bound
ja
and
and
sarl
test
stos
pop
xchg
xor
pop
rolb
sti
ss
movl
push
sub
cmpsl
sub
pop
ja
jnp
addr16
test
ljmp
pushf
cmp
or
xor
or
outsl
sbb
pop
inc
cmc
xchg
jle
adc
jmp
fimuls
xchg
jbe
sub
mov
sbb
cmp
sbb
mov
xor
popa
or
cs
pushf
mov
stc
imul
add
inc
test
lods
fwait
out
and
jns
insl
cs
lea
xor
adc
mov
movsl
aad
fistpll
ret
cmpsb
sub
push
cmpsb
ds
mov
rorb
push
dec
xor
pusha
mov
mov
push
jmp
xchg
xchg
push
mov
aad
les
mov
add
out
pop
and
xchg
scas
add
cmc
pop
jle
movsl
jge
lds
mov
out
push
push
pop
orb
xor
mov
adc
std
pop
push
ds
jle
mov
outsb
test
add
xor
loopne
and
ja
add
lods
pop
mov
fstps
cmp
lahf
push
ja
in
shll
roll
xchg
pop
enter
scas
or
xor
int3
ficoms
mov
pop
scas
sub
pop
xchg
pop
sti
mov
pop
shlb
mov
test
mov
xchg
icebp
lods
les
cmc
in
test
or
lea
or
lahf
subb
cmp
add
out
inc
dec
es
xchg
xchg
fisttpl
jo
ret
out
lret
sahf
xchg
test
pop
jne
and
js
sbb
sarb
mov
loope
mov
inc
cwtl
iret
cltd
pushf
add
xor
push
xor
je
test
int3
push
adc
lea
inc
adc
cmc
xor
jmp
les
or
sbb
orb
andb
mov
add
push
shrl
sbb
repz
rclb
js
rolb
push
sub
xlat
xchg
sbb
ds
pop
adc
mov
lods
push
cmp
jl
aas
add
mov
scas
inc
aam
pop
loopne
push
fldenv
scas
fistpl
sbbb
pop
jns
lds
fs
bound
or
ss
mov
cmc
test
insb
nop
ror
mov
sub
pop
mov
int
fidivrl
jne
cmpl
add
pandn
fidivl
outsl
in
fsubl
shrb
xor
cld
jno
scas
imul
push
aam
es
scas
cmpsb
cmp
push
adc
insb
ds
fs
mov
sbb
push
sbb
movsb
bound
dec
dec
inc
leave
imull
and
hlt
push
jmp
mov
call
js
mov
xchg
add
or
push
and
pop
xor
jb
repz
loop
pop
mov
arpl
lods
pop
jne
cmc
dec
cmpsl
adc
popf
add
sbb
or
xor
mov
xor
xor
jecxz
sbb
sub
pop
cmp
lret
pop
dec
mov
and
repnz
fisttps
aam
out
adcl
std
gs
mov
repz
popf
es
popaw
dec
enter
shll
cmp
pop
dec
sub
test
lahf
add
pop
int
es
add
cmp
jle
outsb
shr
jp
aad
sbb
add
mov
repz
addl
jmp
movsb
jl
ss
in
and
push
add
xchg
dec
out
add
xchg
dec
in
fs
fisubl
add
mov
mov
inc
lret
xor
inc
dec
mov
daa
imul
popf
cld
ds
xchg
insl
ret
movsb
cltd
into
outsl
pop
xchg
xchg
negl
movsl
jno
icebp
dec
imul
mov
jecxz
scas
mov
xor
loope
nop
xor
in
mov
movsl
das
fwait
mov
andb
or
in
mov
pop
mov
rolb
test
pop
js
cmpsb
xlat
add
fs
std
cmpsl
sbb
mov
pop
xchg
stc
iret
cmp
pop
and
mov
jmp
adc
inc
scas
addr16
fs
jle
adc
add
aad
ss
push
pop
mov
lahf
sub
pop
jmp
jecxz
pop
mov
push
test
bound
cmp
jo
outsl
cmpsl
adc
rcl
cmp
cmp
cmpsb
push
xor
jle
incb
mov
movsl
mov
pop
mov
jecxz
icebp
cli
mov
mov
jbe
rcl
push
test
mov
dec
mov
xchg
insl
pop
xchg
cmpsl
and
push
cltd
lea
push
sub
jle
mov
and
add
jg
loopne
mov
xchg
clc
test
aaa
lret
adc
add
jmp
dec
push
sub
cmp
mov
int
or
xor
cmp
lret
ret
gs
push
hlt
mov
lods
add
adc
push
push
add
aas
sahf
adc
icebp
pop
adc
insb
xchg
cltd
push
test
and
stos
dec
mov
mov
cmpsb
and
cmp
jle
invd
repnz
fwait
lcall
push
or
adc
mov
cltd
mov
es
xchg
sti
push
movsb
dec
aam
call
add
mov
stc
sub
push
stos
outsb
pop
or
loope
mov
xor
js
daa
push
dec
xor
pushf
cmp
pop
pop
sub
dec
ret
in
shll
add
lahf
ljmp
sti
outsb
loopne
lods
int3
mov
mov
aaa
add
adc
into
adc
fisttpll
testb
add
test
loope
sub
loope
xlat
and
loope
call
rcl
fs
add
daa
jo
sub
jge
lods
lods
rcr
xor
jle
push
popf
decl
jnp
aas
push
mov
pop
pop
dec
xchg
sub
mov
mov
and
sub
pop
rcrl
test
nop
adc
xchg
popa
sub
andb
pop
mov
cmpsb
and
jno
andw
inc
popa
push
adc
fs
fcmovne
stos
fdivs
cmp
or
aas
adc
mov
or
mov
add
adcb
fsts
pusha
lret
repnz
xor
loope
cmp
les
sahf
cmp
dec
xchg
pop
jbe
sub
mov
inc
out
fdivs
mov
in
jns
mov
dec
mov
mov
out
imul
push
cmp
and
fidivs
scas
pop
aam
rcl
dec
inc
ficoml
adc
mov
push
lods
divb
inc
dec
loopne
mov
sbb
xor
sub
test
pop
push
repnz
adc
jg
jns
pusha
xchg
or
inc
outsl
jb
adc
cli
pop
xor
into
adc
std
push
push
outsl
xor
add
mov
cmp
jp
xchg
dec
sub
push
mov
pop
scas
or
mov
daa
jecxz
dec
mov
xor
xlat
jp
pop
sub
add
or
inc
mov
leave
pop
jno
imul
mov
ss
adc
rcrl
incl
sbb
jecxz
repnz
mov
cwtl
lret
xchg
and
and
xchg
stos
call
push
cmp
cmpb
xor
addr16
gs
dec
setle
aam
je
dec
insb
xor
or
decl
inc
and
cmp
push
mov
cmc
aad
popf
fisttpl
sbbl
rcrb
xchg
cmp
dec
jne
push
sub
sbb
fs
push
das
fnsave
arpl
pop
fcompl
jl
sahf
icebp
fdivrs
clc
cmp
xchg
out
std
out
ja
jmp
test
std
add
dec
mov
ret
pop
cmp
add
or
shl
sbb
ds
nop
or
cmpsl
jbe
out
adc
in
xlat
xor
jne
outsb
or
mov
test
xor
fnstcw
sub
bound
andl
ljmp
or
push
mov
push
dec
fwait
push
xchg
in
jno
sbb
and
mov
or
or
xchg
pop
mov
pop
je
jb
imul
js
insl
hlt
ret
movsb
sub
push
inc
xchg
jmp
mov
and
pop
clc
subl
or
xor
in
sub
cwtl
popa
inc
mov
inc
xchg
xor
nop
daa
xchg
es
clc
test
inc
imul
idivb
dec
sub
insl
pop
stos
in
jo
xchg
push
dec
inc
int3
iret
sub
aad
andb
mov
inc
dec
xor
sbb
jno
xchg
lods
jmp
xchg
mov
outsb
rcll
clc
xchg
pushf
test
and
bound
push
movsb
pop
sbb
int3
xchg
ja
lods
xchg
xchg
jl
or
not
je
imul
std
jno
icebp
adc
mov
lds
pop
or
andl
scas
mov
pop
gs
add
and
pop
jns
dec
xlat
lods
pop
inc
test
sub
mov
fmuls
jae
adc
movsl
jle
cmp
addr16
lcall
cld
arpl
push
jnp
mov
loopne
jne
fldcw
sbb
cwtl
mov
push
and
scas
fimull
lcall
jmp
push
leave
add
xor
pop
jecxz
notl
or
imul
sbb
push
add
mov
aam
cld
push
xchg
xor
in
pop
cli
push
mov
and
adc
inc
in
push
scas
jp
push
pop
or
push
xor
inc
roll
dec
mov
mov
je
and
jnp
mov
lea
push
jp
repnz
xchg
sub
xorl
and
aas
icebp
inc
mov
adc
pop
data16
sub
mov
pop
sarb
insl
pop
lods
push
in
pusha
add
add
and
adc
xor
add
xor
movsl
mov
and
js
adc
iret
stos
les
outsb
push
jle
jg
xor
sub
test
in
stos
xor
dec
arpl
add
xor
cli
mov
aaa
xor
test
jns
push
outsl
or
mov
mov
insb
xchg
push
mull
imul
outsb
repnz
mov
fbstp
adc
ss
gs
sub
xor
cmp
add
jle
mov
jbe
adc
add
negl
out
imul
mov
jge
push
in
or
xor
prefetcht2
adc
add
int3
out
push
shlb
jp
sub
jns
mov
and
loop
ljmp
lcall
ja
pop
jmp
or
mov
sbb
sti
testb
sub
xchg
ffree
and
icebp
lahf
and
mov
shll
xchg
mov
mov
xor
ficoms
jmp
cmp
push
inc
aaa
xor
in
push
das
jg
inc
pop
orl
or
js
mov
adc
dec
les
iret
out
mov
cmpsl
fnstenv
push
pop
ret
push
cmp
cmc
push
push
pop
cmp
sub
add
mov
jp
icebp
mov
pop
xchg
xchg
push
dec
jo
cmc
dec
mov
fnstenv
std
clc
jge
jne
mov
mov
lods
pop
fcmovnbe
out
call
xchg
or
and
ret
loopne
sbb
dec
pop
stos
jnp
in
jg
movsb
cwtl
sbb
sub
and
add
xchg
pop
lret
jae
in
add
rcrl
mov
out
pop
cltd
jg
cmp
dec
adc
adcl
sbb
mov
inc
pop
mov
mov
ficoms
mov
das
push
mov
mov
rcrb
or
inc
xchg
xchg
fldl
jecxz
jb
cmp
mov
ffree
test
cmpsb
adc
pop
inc
leave
sbb
and
pop
jae
xor
aad
repz
push
lock
cmpsb
fstl
mov
dec
pop
sub
mov
push
xchg
mov
repz
push
cmp
and
sar
fcmove
test
mov
xchg
push
aad
mov
roll
lock
lcall
imul
fdivl
cmpsl
mov
inc
mov
mov
jnp
dec
xor
xorb
or
pop
fisttpll
xchg
and
in
xchg
xor
jle
adc
and
xchg
cs
test
xor
sbb
and
int
sti
xlat
sub
jle
jne
into
xchg
push
cmp
rorl
dec
mov
inc
loop
stos
pop
fwait
cmp
rcll
and
mov
push
movsb
or
pop
xor
fisubs
and
fwait
loope
stos
loop
sarb
adc
mov
icebp
pop
mov
in
arpl
fdivl
clc
loop
adc
std
test
lods
lods
mov
sub
subb
jnp
shrb
mov
sbb
andb
dec
stos
sbb
pop
push
fs
insl
shl
inc
stc
lock
out
iret
mov
shrl
jne
fsubr
test
cmp
out
push
insl
bound
nop
int3
xor
mov
fsubp
xor
lods
sti
mov
cld
pushf
and
ja
xor
inc
daa
mov
mov
push
sbb
popl
cmp
cwtl
jbe
mov
xchg
cmp
rcl
pusha
inc
and
push
out
sub
insb
xchg
push
xchg
mov
mov
jle
add
xchg
dec
mov
jo
out
mov
pop
addr16
out
push
or
pop
loope
sti
mov
jecxz
inc
cmp
adc
cmp
mov
je
es
les
mov
roll
inc
cmpsb
cli
mov
popa
fmuls
lret
mov
sub
stc
mov
ss
test
sti
cmpsb
pop
leave
adc
mov
test
xchg
push
jl
jae
mov
push
push
idivb
mov
insl
pop
push
jae
and
inc
arpl
or
int
test
and
bound
dec
shll
sbb
out
lcall
stos
das
fldl
pop
inc
ficomps
pop
inc
enter
push
popa
mov
mov
hlt
xchg
inc
pop
imul
inc
pop
dec
sbb
push
mov
pop
push
cmp
jbe
jmp
sbb
nop
stc
lahf
lods
sub
repz
int
or
aas
outsb
sbb
sar
xlat
clc
sub
scas
mov
js
cmpsl
mov
dec
out
stos
push
clc
repnz
ret
jmp
push
inc
mov
rclb
cmp
sbbl
insb
iret
xchg
adc
mov
sub
mov
and
mov
sbb
jp
sub
mov
inc
fsubr
push
divb
andl
cmp
ss
pop
adc
add
jmp
mov
lcall
lret
les
mov
dec
cmp
and
ljmp
mov
cmp
jnp
test
fwait
mov
iret
mov
in
cmp
jbe
xchg
push
test
xor
push
cmp
scas
lret
sbb
aam
call
mov
inc
cwtl
pushf
and
pop
adc
lea
or
push
inc
or
or
cwtl
stos
and
mov
and
xchg
dec
imull
cmpsb
pop
ret
pop
mov
fnstsw
loope
push
jecxz
sub
test
in
negl
nop
cmpl
dec
inc
ret
pop
mov
mov
es
jb
fadds
mov
cmp
lret
aam
popf
nop
pop
and
loope
int3
mov
add
xchg
mov
jb
hlt
and
cmp
movsb
daa
cltd
or
xor
lcall
push
push
sub
mov
bound
je
xor
mov
sbb
sub
sbb
push
jne
test
addr16
push
hlt
jl
sbb
int
add
js
mov
aaa
cmp
sbb
jo
sub
ds
cld
popf
fildl
xor
mov
sub
orb
es
push
adc
cmpsl
outsl
fidivl
mov
in
mov
xchg
mov
mov
inc
inc
into
pusha
js
and
add
jmp
lods
hlt
cld
fs
les
test
push
jae
cmp
add
out
mov
dec
mov
addr16
adc
shrb
push
loope
mov
mov
fdivs
shll
jbe
mov
sbb
scas
push
out
test
popa
in
add
aad
or
inc
push
and
orb
test
add
addr16
adc
std
into
lods
sar
push
mov
movsb
movsl
add
mov
add
pop
xor
adc
add
cwtl
cmp
push
sarb
roll
stc
add
inc
ret
insl
xor
sub
in
xlat
mov
jecxz
imul
out
ja
mov
imul
in
push
addr16
mov
scas
stos
mov
cltd
les
xchg
pop
adc
pusha
inc
or
imul
movsl
repnz
xchg
mov
sub
cmc
daa
pop
lds
out
imul
icebp
cmp
add
fimull
stos
push
adcb
das
ret
sub
xchg
mov
adc
sbb
enter
mov
outsl
xchg
mov
ss
pushf
lds
inc
aaa
lcall
xor
fildl
testb
mov
xlat
push
addb
push
ss
cmp
fdivrs
sbb
lods
add
mov
lock
adc
loop
xor
fnstcw
jbe
insb
dec
xchg
test
cmp
repz
ret
scas
lahf
stos
aas
cli
push
mov
jno
pop
jle
jns
jno
cmpsb
xchg
or
mov
divb
inc
loope
xorl
dec
insb
add
bound
repnz
xor
xor
xor
les
cmp
mov
mov
xor
sbb
aas
movsl
int3
pop
sti
movsl
in
icebp
fidivl
int3
push
rolb
sub
pop
push
or
test
aam
mov
mov
push
jne
cmp
pop
mov
mov
push
mov
push
int3
add
mov
out
in
xor
inc
loopne
aas
add
inc
xchg
and
add
rorl
mov
daa
imul
mov
pop
pusha
mov
pop
clc
mov
ret
dec
adc
dec
sti
cmp
out
pop
adc
popf
push
xchg
clc
fs
pop
test
mov
sahf
jns
mov
popf
in
dec
stc
mov
aam
test
lods
sbb
outsl
sbb
nop
lods
sub
mov
cmpsb
cmp
or
dec
mov
divl
mov
mov
xor
pop
dec
sbb
repz
pop
push
pop
stos
mov
push
and
cli
push
mov
xlat
adc
or
aad
or
fdivl
ret
sbb
mov
ficomps
jle
test
enter
enter
and
rolb
jbe
imul
cs
add
sbb
aas
sbb
addr16
bound
dec
pop
and
daa
test
and
jbe
dec
dec
outsl
xchg
bound
sub
mov
test
add
andl
mov
jnp
pop
jecxz
scas
xlat
loope
sbb
mov
dec
or
out
andl
shl
aas
pop
cmp
and
fs
sub
test
jp
dec
mov
test
jnp
jp
je
shrl
in
xchg
sub
lock
push
cmp
cwtl
lods
push
dec
sbb
mov
shlb
repz
adc
inc
clc
icebp
cmpsl
divl
mov
xchg
icebp
ja
jle
xor
jnp
in
scas
or
out
loop
sbb
and
jnp
pop
loope
arpl
fistps
dec
rolb
cld
jl
or
lret
int3
cld
push
nop
je
mov
stos
das
cmp
repnz
add
push
jne
jp
mov
dec
mov
das
cs
cs
dec
aam
mov
inc
add
jp
dec
fdivrp
stos
xchg
dec
cmpsb
cmc
je
and
pop
jle
fstps
stos
outsl
mov
xor
js
pop
data16
scas
call
hlt
cmp
fnstenv
pop
sti
xorl
scas
and
enter
pusha
fldl2e
pop
or
dec
mov
imul
xchg
pop
jbe
jmp
pop
inc
aad
adc
add
push
push
rcrl
jecxz
jg
pop
push
adc
pushf
jmp
insl
cmc
lahf
jp
jmp
insl
sar
test
sbb
mov
cmp
out
neg
mov
shr
notb
loope
cmpsb
inc
stc
push
aaa
adc
cmpl
addr16
in
xor
cs
fucomip
sbb
in
addr16
adc
scas
shll
cltd
dec
das
xor
pushf
sahf
hlt
in
scas
mov
push
adc
adc
cmp
aaa
jl
sub
inc
xchg
int3
cmp
or
add
inc
adc
dec
fsts
push
pop
push
xchg
arpl
mov
sbbb
push
and
lahf
test
insl
rcrl
dec
and
sahf
std
adc
imul
jns
fbstp
and
xchg
clc
les
xchg
cmpsl
or
inc
sbb
idivl
or
dec
outsl
mov
iret
test
mov
xchg
mov
push
call
xchg
adc
mov
into
xchg
das
ss
aam
sub
aaa
ret
pop
pop
add
xor
xchg
pop
dec
mov
add
jne
cli
mov
dec
icebp
inc
mov
mov
ja
push
outsl
sub
mov
negb
mov
xchg
xor
push
daa
in
std
jmp
ret
lret
inc
mov
loope
jnp
push
add
push
sbb
rcrb
dec
dec
hlt
repz
cmp
movsb
ljmp
stos
add
fisubs
xchg
loopne,pn
mov
test
test
adc
jg
mov
xadd
je
sbb
popa
xor
jb
jnp
inc
mov
out
lcall
or
mov
cmp
js
cmp
jecxz
or
pusha
mov
add
mov
pop
lcall
pop
push
out
cmp
aam
jl
mov
cmpl
pop
sbb
and
mov
sbb
or
adc
bound
sub
push
out
cmp
mov
add
mov
aam
or
mov
mov
cld
dec
push
repz
mov
or
pop
lea
add
es
leave
and
lds
mov
fsubrs
mov
mov
dec
lock
ret
in
dec
test
jns
test
jl
fisttps
ss
mov
arpl
cmpsb
fwait
xchg
test
cmp
lea
dec
mov
in
push
stc
mov
adc
xchg
mov
and
cli
je
inc
inc
xor
mov
mov
push
ljmp
js
xchg
inc
cmp
test
pop
test
rcrb
jmp
movsb
fsub
popa
sahf
jns
mov
lcall
orl
daa
add
sub
cmp
inc
dec
movsb
jmp
aad
in
pop
push
rcll
aas
aaa
das
sub
pusha
mov
fcmovnbe
mov
lcall
fdiv
cmpsl
mov
or
ss
pop
outsl
push
fstpl
sbb
xchg
mov
je
pop
and
inc
lcall
xor
mov
xchg
sub
cmp
sbb
jl
inc
mov
xchg
loop
pop
mov
cmp
and
cmp
inc
push
sub
jge
fiaddl
gs
dec
push
ljmp
insl
pop
stc
jmp
ljmp
sahf
xchg
sub
cmp
adc
lods
pop
jo
ret
mov
and
sub
mov
cwtl
xchg
shll
into
inc
popa
addr16
adc
and
pop
insl
fbstp
outsl
mov
xlat
mov
sub
add
push
fnstsw
inc
mov
outsb
jns
ja
add
popf
fs
jne
jp
cwtl
mov
ljmp
mov
mov
pop
cmc
sub
adc
std
dec
loope
or
les
mov
nop
mov
int3
xor
pop
adc
pop
movsb
imul
addb
scas
pop
cmp
lods
adc
bound
push
and
test
xchg
out
push
scas
add
in
jg
repz
add
pop
mov
push
xchg
lcall
cmp
mov
push
sbb
mov
test
mov
inc
test
push
mov
lcall
pop
lahf
push
ret
lret
cwtl
mov
push
mulb
jnp
add
or
dec
push
inc
out
movb
pop
push
push
dec
mov
add
cli
xchg
push
ds
scas
insb
jns
xchg
jle
aad
push
ja
cmp
popa
and
inc
dec
xor
clc
fbld
pop
jmp
and
jno
sbb
pop
jl
fwait
pop
scas
adc
mov
mov
xor
fdivl
mov
jae
adc
mov
push
xchg
jmp
inc
lds
push
scas
and
cmp
stos
xchg
das
roll
mov
jmp
xor
or
in
iret
jns
aaa
jns
dec
cmpl
fisttpll
imul
sti
add
jge
sbb
mov
xor
and
push
push
rclb
xchg
cs
inc
sub
mov
divl
ret
lcall
sub
aaa
push
fsubrp
inc
leave
insb
das
aas
sbb
lret
pop
cmp
das
daa
lods
pop
inc
loop
cmp
pop
popf
inc
dec
popf
jno
imul
adc
add
push
mov
negb
mov
cwtl
pop
das
add
inc
jno
stos
fldenv
in
cmpl
mov
xor
xor
mov
rorl
loop
lcall
lds
jmp
fadds
ret
lds
sub
orb
mov
add
add
sbb
cmpsl
jecxz
aaa
ret
std
test
cmp
out
fs
jo
cs
sar
xchg
and
inc
jge
lretw
popf
mov
test
mov
jle
inc
mov
jb
pop
fdivrs
int3
mov
dec
inc
cmp
xor
jecxz
daa
fsubr
mov
orl
or
xchg
insl
flds
loop
shrl
dec
fdivs
xchg
pop
pop
add
fsubrl
pop
dec
adc
ja
xor
nop
shr
ret
mull
push
and
sbbl
xchg
pop
imul
push
mov
sub
jecxz
clc
cmp
lret
rol
sbb
dec
aad
cmpsb
cli
mov
dec
mov
sub
inc
add
mov
mov
mov
movsl
add
mov
lret
jecxz
adc
outsl
aaa
cmpsl
cwtl
sub
jbe
les
push
dec
pop
mov
mov
and
aaa
mov
jns
cmp
fs
mov
jge
paddd
cmp
pop
shrb
xchg
and
add
nop
outsl
mov
loop
aad
scas
and
lock
lock
push
loopne
mov
fs
push
mov
push
and
fmuls
jg
inc
mov
dec
pop
cmp
pusha
addr16
imul
pushf
loope
mov
cmp
fwait
pop
push
cmpsl
or
pop
roll
inc
mov
popf
popa
and
test
ss
xor
mov
icebp
fs
adc
mov
pushf
dec
jnp
repz
pop
mov
mull
fldenv
fnsave
rorb
sub
add
mov
inc
ficoml
call
dec
js
stos
inc
jg
jnp
mov
xor
in
mov
daa
mov
mov
jbe
add
mov
sahf
dec
lods
xchg
lcall
aad
inc
stos
pusha
scas
cltd
add
or
imul
imul
xchg
addr16
filds
mov
call
dec
fdivrp
mov
and
pop
bound
and
adc
mov
out
cmp
aad
cs
cmp
mov
sub
sub
fs
das
das
push
add
or
mov
mov
sti
dec
add
imul
in
jb
mov
sbb
clc
rcrb
sti
lea
and
mov
mov
inc
sub
in
insl
sub
sub
insl
leave
pop
mov
sbb
xchg
and
outsb
sti
cmp
cmpsl
out
arpl
hlt
sub
mov
mov
sbb
addb
out
iret
orb
adc
imul
add
xchg
dec
push
sub
fwait
divb
lods
gs
lds
dec
xor
decb
push
sbb
icebp
push
mov
cwtl
push
fs
jb
pop
xchg
or
mulb
out
in
xor
orl
pushf
or
add
rclb
mov
int
mov
push
mov
jae
getsec
inc
jl
sbb
call
cmp
jg
push
cmpsb
pop
mov
fs
fiaddl
shl
sub
pop
imul
lock
jecxz
add
in
push
ss
out
mov
in
jne
hlt
push
xchg
fwait
aas
and
pop
push
out
cmpsl
mov
xor
call
cmpsl
rorb
fnstenv
and
jb
add
push
outsl
ret
mov
push
sti
fiaddl
lret
pop
push
push
sub
mov
mov
xor
pop
dec
loopne
data16
xchg
out
sub
mov
hlt
xchg
lea
stos
arpl
mov
stc
or
sarl
jge
push
sarl
leave
lret
test
pop
stos
cmp
or
jae
cltd
sub
test
cltd
jne
loop
xchg
hlt
inc
negb
pop
adc
fcomip
cwtl
mov
arpl
mov
xchg
mov
xor
mov
xchg
out
and
mull
clc
shll
add
cmovg
scas
daa
popa
inc
xchg
and
into
sub
xor
pop
xchg
stc
aam
int3
and
lods
nop
fists
push
ja
jmp
clc
cmp
xor
adc
stos
pushf
sbb
rcl
mov
idivl
repz
jle
mov
or
lock
mov
push
inc
push
hlt
push
cmc
dec
mov
cltd
pop
dec
sti
mov
mov
inc
cli
daa
mov
loope
xchg
subl
mov
xchg
mov
adc
das
sbb
movsb
mov
aad
repnz
jns
inc
in
and
shl
loop
nop
out
mov
rclb
mov
popf
xor
mov
rorl
fsts
push
push
into
orb
mov
and
pop
xchg
push
ficomps
mov
imul
push
mov
jmp
lock
test
mov
and
dec
rclb
jbe
aad
repz
imul
xchg
fadds
fbstp
adcl
imul
orl
clc
lret
fsubrs
sahf
lret
outsl
sahf
lret
mov
jecxz
sub
fwait
cmc
cltd
sahf
movsb
dec
das
xchg
and
add
adc
stc
add
push
and
or
mov
or
inc
scas
xor
jns
or
mov
out
inc
fdivs
sbb
shrb
pop
push
sub
sub
add
push
mov
jbe
das
mov
cmpl
cmpsb
inc
fidivrl
mov
es
adc
out
mov
add
sbb
scas
cs
test
scas
inc
push
ljmp
and
dec
call
inc
or
je
add
sti
popf
aam
mov
inc
test
bound
aaa
push
pushf
shl
mov
adc
push
inc
mov
push
sub
cli
ds
adc
test
sti
sbb
in
aam
sbb
jb
in
sbb
es
iret
fldl
repnz
movsl
gs
mov
lret
xchg
movb
sahf
aas
icebp
mov
arpl
xor
int3
aaa
js
fstl
pop
lods
movsb
insl
mov
and
ret
pop
xchg
mov
sub
js
dec
xor
aad
hlt
inc
fcompl
jle
mov
daa
ficompl
shrl
ljmp
push
mov
mov
cmp
jno
sbb
or
repz
pusha
sub
or
call
xor
xorb
and
mov
and
inc
std
movsl
shl
mov
enter
movsl
stc
xor
mov
xchg
pop
jmp
mov
xor
mov
ds
cs
jbe
test
aad
test
rclb
push
xchg
and
imulb
cli
and
push
sbb
ficoml
sbb
cmp
inc
sbb
les
inc
loop
iret
into
add
scas
xchg
fwait
adc
dec
fimuls
sbb
loopne
insl
sti
inc
scas
cmp
not
lods
add
mov
sub
scas
mov
divb
jge
inc
lods
sbb
xchg
out
adcb
xchg
imul
add
mov
jle
xor
and
cmpb
sub
or
mov
mov
mov
jnp
aaa
cmp
pop
stos
or
adc
push
mov
push
push
stos
inc
mov
xchg
mov
lds
mov
lds
push
stos
mov
repnz
dec
rclb
push
aam
dec
push
mov
pop
in
lret
mov
xlat
jg
leave
xchg
mov
push
add
stc
inc
rorb
dec
xchg
jnp
addb
int
sub
out
mov
out
sub
pop
popf
and
mov
out
cmp
scas
pushf
mov
dec
addr16
sti
push
enter
iret
cmp
shll
xchg
inc
mov
arpl
fldenv
shlb
shll
fnstcw
ret
and
jl
jnp
js
sbb
lods
or
mov
mov
add
and
es
pushf
lock
stos
enter
mul
mov
lods
or
mov
add
jne
test
adc
sbb
ficompl
aaa
add
call
loopne
int
jnp
push
and
sbb
sub
xchg
inc
xor
mov
stc
fwait
lret
cmp
scas
adc
inc
ja
xchg
je
popf
outsb
testl
add
xor
dec
push
cmp
negl
mov
fwait
adc
dec
cs
push
sub
aam
inc
fidivrs
push
xor
shll
int3
dec
imul
mov
sub
or
mov
cwtl
mov
or
addl
push
xchg
notb
pop
insb
inc
add
push
cmc
push
jge
inc
ljmp
sub
xor
xlat
push
jno
ds
xor
add
imul
mov
pop
test
je
xchg
es
jae
xor
sub
cmp
cwtl
sub
call
in
cli
inc
adc
into
jl
aam
sbb
subb
xchg
add
mov
and
int
pop
sarl
mov
fld
inc
cmp
aas
enter
cld
into
add
adc
gs
fistl
push
fcoml
imul
pminsw
add
push
xor
jo
sub
pop
mov
in
jge
cmpsl
or
les
jae
xchg
inc
xchg
jg
jmp
sbb
mov
add
xchg
sbb
loopne
xchg
jo
iret
leave
mov
je
add
scas
pop
jmp
negl
cltd
pop
mov
jle
test
imul
xor
jns
dec
xchg
push
mov
push
push
xor
jp
pop
jbe
inc
pop
add
push
jp
stos
adc
lea
lahf
sbb
cmp
mov
mov
orl
ror
mov
xor
cmp
shrb
in
mov
and
adc
test
jl
adc
xchg
loope
ret
sbb
mov
xchg
xor
cmc
pop
pushf
aaa
xchg
push
pop
xchg
dec
inc
sub
mov
jl
sub
subb
inc
cld
mov
shll
push
jle
push
daa
inc
and
out
aaa
xchg
jns
movsb
xor
mov
pop
icebp
cwtl
cmc
push
repz
ds
jecxz
jno
ret
adcl
push
pop
in
push
fisubl
fwait
push
notl
iret
gs
mov
cli
or
cld
iret
add
push
add
add
xor
popf
fadd
or
adcb
rol
pop
push
std
pusha
push
xchg
pop
rorb
sti
pop
je
jl
push
sbb
jp
out
shlb
push
negb
outsl
pusha
inc
jmp
pusha
sub
je
cld
cmp
inc
faddl
clc
clc
pop
jecxz
xchg
mov
jp
jnp
test
push
out
dec
sbbb
in
mov
adc
mov
mov
jo
leave
sarl
or
sub
addr16
and
popa
repnz
int3
xchg
mov
inc
xor
int3
jle
cmc
popa
es
pushf
cwtl
fldenv
inc
and
test
add
inc
sub
xor
sti
push
fdivs
and
xor
sbb
adc
dec
outsb
movsb
fldenv
icebp
inc
inc
out
out
lret
add
outsb
icebp
or
popf
inc
cmc
and
xchg
stos
push
mov
call
fistpl
stos
mov
clc
sbbb
push
rol
cmpl
mov
sub
ret
leave
in
outsb
jmp
dec
nop
jne
cli
sbb
xchg
mov
adc
dec
mov
fcmovbe
or
pop
out
jmp
lods
push
sub
out
add
cmpsb
mov
jb
sub
cmp
sti
in
sub
push
pop
add
cmp
call
stos
adc
loope
mov
jl
int
add
je
sub
cmpsl
rorl
sub
mov
stos
xchg
jg
aaa
pop
shlb
clc
mov
xor
jnp
shll
push
lods
daa
mov
sub
sub
pop
ret
xchg
stos
pop
pop
int3
and
xchg
mov
jl
sbb
mov
sub
push
aaa
push
popa
mov
pop
lcall
lcall
shll
add
pushf
mov
inc
gs
push
repnz
fists
mov
mov
jmp
pop
xchg
jo
sti
test
dec
lret
jp
sbb
repz
sbb
je
je
lds
insb
jb
inc
loop
cmp
mov
dec
stos
fdivrl
push
add
pop
inc
push
pop
xor
push
int3
adc
fmuls
sarb
jbe
cmp
jl
dec
mov
in
fiadds
xchg
xchg
test
test
test
adc
sti
mov
imul
pop
mov
bnd
nop
cld
inc
or
cmp
loop
xchg
testb
les
test
scas
pop
jnp
sub
dec
add
inc
fadds
push
sahf
ja
shll
roll
lods
dec
sub
xlat
xchg
add
aad
sub
sub
sub
cmp
les
loop
mov
xchg
arpl
std
xchg
mov
sbb
daa
or
push
outsl
push
cmpsl
lret
pop
pop
xor
mov
repnz
roll
iret
or
inc
mov
dec
scas
inc
mov
xchg
sub
ret
cmp
bound
es
shrb
rclb
jg
adc
mov
fisttpll
js
arpl
fmull
push
push
lahf
ror
add
mov
lock
fdivl
sbb
lea
push
add
roll
jns
jae
xor
clc
stos
jmp
enter
dec
aas
popa
and
cltd
push
xchg
and
cmp
ss
lea
nop
stc
pop
shr
jp
out
lret
mov
mov
pop
enter
popa
js
arpl
or
cli
jo
cmp
fdivrp
or
mov
push
cs
jno
pop
gs
sbb
sub
movsl
add
fs
add
pop
mov
imull
dec
and
scas
push
out
stos
lcall
mov
lahf
add
or
push
jae
sbb
inc
lea
xchg
jnp
mov
mov
into
push
mov
push
sub
lahf
inc
add
mov
aam
test
lods
dec
or
out
and
sbb
fwait
call
stc
mov
xor
movsl
pop
inc
mov
popa
aas
mov
test
fmuls
aad
xorl
push
scas
push
rclb
je
jno
rcrb
push
mov
lcall
roll
push
xor
fisttps
pop
je
insl
ja
mov
and
cmp
mov
in
push
pop
jp
inc
cmpsb
adc
out
push
aad
jnp
sahf
test
lahf
fucomp
pusha
xchg
mov
lock
stos
mov
sbb
xor
xchg
or
add
xor
sbb
push
popf
pop
mov
cmp
add
mov
jnp
push
xor
dec
inc
pop
bound
repnz
iret
inc
adc
pop
jmp
sarl
mov
cmp
jge
add
stc
xchg
roll
ss
flds
xorps
jbe
mov
mov
xchg
sub
leave
push
mov
in
fmul
out
or
loop
cmpsb
inc
or
sbb
add
imulb
and
lret
dec
jmp
fisubs
push
addb
movsb
jmp
xor
jo
rcrl
sahf
int3
jne
mov
stos
decl
and
stos
aad
inc
pop
das
int3
stc
dec
add
inc
rcr
xlat
out
rclb
in
out
in
cmc
dec
sub
xor
jae
push
dec
not
inc
gs
xor
push
add
mov
pop
lds
dec
mov
and
or
scas
lret
pop
and
popa
lds
ret
test
cwtl
dec
mov
fs
outsb
aad
rol
out
pop
lahf
imul
in
and
repnz
mov
mov
cmp
sub
test
lock
insl
mov
stos
ss
adc
xchg
fsubl
movsl
fisubs
xchg
sti
ss
mov
sarb
add
cmp
ret
loope
jb
sbb
push
pop
jae
inc
dec
xor
inc
cmp
mov
adc
or
aad
frstor
shlb
inc
mov
clc
or
leave
push
pop
into
daa
jb
mov
dec
loopne
pop
xchg
cmp
mov
nop
icebp
or
push
decl
dec
out
std
daa
sbb
cld
lcall
mov
test
jne
or
inc
ret
scas
outsl
ret
fistpl
in
addr16
mov
out
outsl
scas
out
xor
mov
in
sahf
cmp
addr16
pop
xchg
push
mov
sub
xor
or
roll
bound
aaa
sub
sub
lcall
jmp
mov
inc
mov
shll
or
mov
xchg
int3
xor
sbb
scas
outsl
out
add
lods
xorb
sbb
add
mov
jno
push
repnz
jmp
clc
cmpsb
nop
and
xor
mov
xor
insb
lret
cmp
int
out
mov
ss
je
xor
mov
in
sarb
loop
fdivl
push
popa
outsb
inc
lahf
scas
xchg
sbb
hlt
xchg
or
sbb
add
inc
fwait
mov
movsb
mov
inc
jl
fs
out
xchg
pop
lds
inc
test
cltd
pop
cltd
icebp
aam
ljmp
es
cli
xchg
push
jnp
popa
push
xchg
mov
lods
rcll
sub
push
out
adc
mov
stc
popf
loopne
add
mov
out
mull
adc
jno
xor
add
movsb
jno
es
fwait
lcall
ret
mov
sbb
xor
mov
push
imul
adc
nop
mov
mov
rol
imul
ljmp
clc
stc
ss
aaa
lret
lahf
hlt
cmc
or
add
xchg
les
in
cli
inc
jne
push
call
xor
or
ja
push
xchg
dec
lods
pop
in
out
fimuls
cmp
xor
cmc
pop
ret
loop
jmp
mov
stos
aas
pop
push
jl
pop
stos
add
jbe
rorl
cwtl
inc
sub
xchg
out
js
inc
xchg
or
jae
cltd
pop
test
popf
sbb
imul
or
test
mov
imul
aaa
mulb
idiv
popa
imul
iret
testl
dec
test
cli
lods
or
sbb
jg
lds
mov
fs
xor
jno
xor
sbb
push
mov
ret
cbtw
and
sahf
rol
setae
push
pop
lods
repnz
jnp
mov
test
mov
inc
adc
scas
enter
jb
leave
shlb
sbb
cmp
push
aam
pop
imul
pop
aas
dec
add
clc
fnsave
mov
xor
std
ja
mov
xor
in
adc
push
jno
aas
aaa
xor
lahf
xchg
jno
addl
icebp
mov
out
stc
adc
jle
scas
sbb
ret
out
adcl
int
pop
decb
sti
lds
cmc
pop
push
lcall
lds
outsl
in
push
cwtl
aad
arpl
repnz
dec
dec
lcall
xchg
test
adc
out
bound
add
mov
add
fildl
push
rcr
xor
xor
push
clc
or
adc
popf
imul
xchg
lret
xchg
filds
mov
negl
cld
cmpsl
iret
lea
andb
movsb
das
ja
mov
sbb
pop
mov
mov
inc
cli
in
push
jg
stc
or
arpl
or
xchg
or
add
in
out
dec
iret
ret
pop
icebp
into
mov
test
lods
cmc
repnz
hlt
lods
rorb
jg
dec
adc
mov
enter
pop
xor
rcrb
pop
mov
dec
fwait
dec
dec
dec
cltd
push
add
aam
jne
mov
sahf
out
push
cmp
lret
or
ljmp
pop
xor
adc
jl
xchg
popa
push
loopne
add
aaa
test
mov
mov
bound
js
addr16
jb
xor
jge
aaa
xchg
adc
jb
movsl
cmp
pop
test
lods
and
mov
cs
iret
fistps
mov
jae
add
repnz
xor
fidivrs
mov
test
sbb
pop
mov
mov
add
sub
push
movsl
xchg
push
dec
pushf
cltd
add
and
pusha
movsb
xchg
add
jg
lahf
mov
mov
sub
fwait
cmp
add
adc
dec
mov
ss
sbb
mov
jno
fdivs
sub
stos
push
or
mov
adc
jp
push
jmp
bound
pop
daa
pavgb
sahf
pop
popa
out
mov
les
jae
push
test
and
dec
mov
popa
clc
inc
out
jo
popf
jmp
add
adcb
popa
lret
mov
add
adc
lret
or
xchg
or
clc
jmp
or
lret
popa
addr16
aad
add
jae
jmp
add
lret
aaa
mov
outsb
shll
or
test
inc
jnp
imul
cmp
das
jl
xchg
mov
push
pushf
ret
sbb
sbb
mov
mov
mov
jmp
lds
push
jbe
and
sahf
push
xor
das
mov
fwait
mov
ja
mov
xor
xchg
icebp
xchg
test
fisubl
imul
aam
nop
aam
test
push
popf
popa
stc
sbb
dec
xchg
insb
test
mov
repnz
mov
jb
rep
mov
das
and
lods
test
daa
ret
add
xorl
repz
push
inc
imul
xchg
xchg
or
insb
pusha
enter
dec
lds
or
mov
movb
ss
rorb
xchg
loop
pop
pop
push
lock
ja
sbb
push
push
adc
pop
test
mov
mov
daa
aam
hlt
mov
fstp
adc
sbb
sbb
and
cmpsb
sbb
mov
pop
xchg
cmc
push
ret
xlat
je
and
adc
aas
js
jbe
cmp
fnstcw
jle
and
push
test
scas
push
sub
jne
ret
ljmp
push
add
fmul
leave
sbb
jno
out
in
add
call
mov
in
cmp
movsl
and
mov
repnz
test
sub
xor
or
cld
jg
push
pusha
and
mov
and
mov
test
adc
dec
insb
aam
xor
std
inc
iret
push
test
adc
adc
pop
xor
and
adc
inc
shlb
dec
insl
loopne
ds
fstpt
sbb
xor
mov
push
add
sub
mov
cmp
inc
dec
icebp
push
xor
jnp
jb
dec
shrb
pop
xchg
test
adc
icebp
xchg
lods
fs
shrb
lods
ja
rcll
mov
rcrl
pop
rclb
mov
gs
mov
dec
pop
pop
xchg
movl
dec
cmp
cmp
cmp
cwtl
ja
in
in
mov
lret
jmp
xchg
out
push
int3
lods
inc
dec
dec
mov
push
inc
ss
xchg
xor
sub
fadd
sub
das
out
in
movb
fmuls
imul
pop
cltd
dec
pop
in
mov
adc
mov
xchg
loope
or
lea
icebp
sahf
and
or
dec
pushf
push
sub
add
sbb
xchg
aam
iret
int
iret
jp
push
repnz
mov
add
mov
stos
push
xor
cmp
call
push
dec
pop
xor
sbb
or
jbe
push
adc
sub
mov
cmp
mov
mov
mov
jnp
push
adc
inc
pop
dec
iret
pushf
and
sub
pushf
imul
lds
cs
movsl
mov
fcmove
sahf
aaa
jmp
add
ret
and
push
insb
dec
xor
rorb
cwtl
xchg
and
push
xor
lock
nop
cmp
cs
jno
leave
cld
mov
cmpsl
jg
mov
fst
lret
pop
arpl
in
fsubrs
mov
and
mov
stos
and
cmp
negb
lods
mov
mov
lock
dec
int
xchg
mov
pop
insl
arpl
xchg
popa
sbb
sub
xchg
movsb
mov
cs
insb
mov
push
fcmovnu
or
pushf
inc
xor
das
inc
xchg
or
push
adc
mov
loop
mov
pop
add
adc
jmp
bound
mov
cld
rcrb
xchg
int
cmp
push
call
pop
ja
out
std
mov
outsb
inc
movsl
jg
test
adc
hlt
lret
or
jb
xor
jle
int3
xchg
mov
fidivrl
lods
mov
aam
jl
int
pop
lahf
jne
int
or
xor
test
pushf
mov
cmp
aas
pop
leave
test
push
or
fadds
out
enter
or
xchg
int3
rolb
cmp
cmp
into
fbstp
adc
dec
pop
jnp
aaa
lea
insl
aam
testl
sub
and
xchg
mov
rcrb
hlt
inc
xchg
les
mov
lahf
push
sub
iret
fnsetpm(287
ljmp
aaa
jmp
stc
imul
push
lea
stos
gs
xchg
mov
push
divb
mov
sub
cmpl
arpl
call
in
inc
push
dec
stc
xchg
cld
jmp
inc
pop
and
pop
jns
sub
jecxz
out
out
push
inc
jno
mov
pop
mov
dec
xchg
into
push
pop
lock
xor
mov
cmc
js
insb
add
sbb
push
pop
test
loopne
pop
cmp
xlat
std
push
mov
jecxz
aam
cwtl
jl
and
push
cmc
inc
inc
shrl
dec
loopne
pushf
mov
stc
inc
fcomps
mov
iret
xor
pushf
jp
add
divl
lea
mov
mov
arpl
insb
psrad
inc
xchg
sbb
std
xlat
sub
xchg
dec
cmpsb
pop
subl
push
fisubs
shrl
xor
mov
inc
jb
jnp
mov
fwait
popl
std
add
lret
mov
cmp
xchg
loop
fcmovnb
lret
div
repz
hlt
jp
iret
dec
adc
xchg
rcl
add
or
ror
in
insl
dec
cmp
adc
xorl
leave
lods
in
mov
push
popl
mov
pusha
hlt
shll
xor
notl
pop
pop
and
or
out
xor
xchg
push
inc
mov
pushf
pop
int3
cmp
stc
mov
orb
cmp
popa
gs
fisubs
mov
popa
xor
popf
movsl
cmp
mov
mov
inc
in
outsb
inc
fmuls
mov
jmp
call
mov
clc
stos
imul
xlat
les
adc
movsl
mov
lds
and
mov
sarb
or
dec
out
add
jb
and
pop
mov
adc
pop
sub
mov
mov
and
movsb
insb
pop
pop
or
shll
ret
and
push
xchg
out
jle
call
jmp
or
adc
rolb
and
xor
inc
cwtl
jmp
sarl
arpl
nop
fwait
inc
ja
jno
mov
dec
cmp
das
and
sub
jbe
pop
mov
and
jl
ret
dec
cmp
jle
popf
hlt
inc
loope
into
fnstenv
push
pop
push
and
or
add
in
faddl
sub
jbe
fmull
hlt
jmp
sarl
aam
push
inc
jecxz
enter
and
outsb
adc
sub
or
or
and
xor
loope
aam
mov
sarl
icebp
lods
cmp
popf
add
jbe
inc
add
cmpsl
ss
adc
adc
rcrl
cli
pop
push
ret
andb
es
adc
sub
pop
int
mov
lcall
les
aad
jp
fsubl
inc
adc
add
dec
xchg
mov
fwait
or
sub
push
inc
pop
outsb
fldcw
fwait
inc
adc
mov
inc
lock
loope
rcrb
mov
addr16
loop
mov
loope
mov
dec
cwtl
pop
or
cmp
xchg
out
xor
ss
mov
lock
insl
int
test
mov
or
add
out
negl
aam
nop
sub
jo
cmpsb
xchg
outsb
in
inc
or
cmp
dec
test
inc
fnstsw
dec
stc
clc
xchg
adc
mov
mov
icebp
jno
pop
imul
nop
insb
or
mov
es
mov
idivl
push
xor
push
or
jne
add
add
dec
rcrl
push
es
fisttpl
inc
enter
xchg
mov
lock
stos
and
xchg
sbb
fs
repz
pop
cltd
sbb
shl
popf
in
xchg
jge
push
or
jle
insl
ror
push
das
push
ror
xchg
shrl
mov
pop
jb
mov
inc
jge
rcll
pop
xchg
rcll
dec
and
popf
mov
mov
ja
xchg
popf
inc
in
popf
push
push
loop
pop
cld
jle
rolb
fnstenv
mov
mov
inc
or
mov
lds
out
xchg
pusha
jo
js
add
movsl
lret
pop
xchg
inc
lret
mov
or
pop
hlt
mov
inc
jne
int
aam
sub
mov
sbb
xchg
mov
das
sti
ss
mov
dec
sbb
push
sti
int
inc
in
orb
jmp
xchg
or
in
add
jg
jge
test
ret
sub
out
cmpsl
aam
or
jbe
push
call
xchg
add
ss
pop
int3
test
int
dec
xchg
xor
and
lock
and
popa
pop
xor
fmul
js
mov
iret
into
scas
dec
mov
add
lods
xor
or
testb
mov
cmc
pop
cwtl
push
dec
jne
out
mov
in
mov
lods
std
scas
pop
jecxz
jl
nop
sub
andb
imul
sbb
popa
in
cmp
loopne
sahf
or
jle
pop
lret
push
dec
adc
jno
ljmp
sbb
push
pushf
push
xor
sub
repnz
hlt
adc
cld
cmp
int
scas
add
dec
xor
jbe
push
fbld
add
movsb
pop
push
xchg
push
jae
daa
fnstcw
mov
mov
pop
xchg
xchg
mov
ret
xchg
and
cli
pushf
aam
fadds
stos
push
dec
mov
pop
pop
ljmp
mov
addr16
mov
mov
imul
pop
sub
pop
push
ds
ret
dec
call
in
inc
or
xor
arpl
out
inc
mov
pop
data16
out
pop
loope
or
ljmp
jp
xor
out
cwtl
js
outsl
xchg
das
stos
and
in
les
daa
xchg
jmp
mov
popa
das
jmp
sub
pop
cmpsb
cwtl
or
stos
and
adc
sbb
cmpsb
test
xchg
cmp
xor
and
divb
sub
lcall
sbbb
out
imul
aam
mov
ret
dec
xchg
add
data16
push
mov
pushf
iret
daa
push
sbb
mov
and
inc
adc
xchg
flds
sub
insl
cmp
cmp
push
lcall
jge
push
cmp
icebp
cmp
add
xchg
mov
pop
outsb
push
and
cmp
mov
test
pop
shrl
ret
push
cmp
inc
ds
sahf
lods
repnz
jae
jae
pop
adc
and
cmp
popa
sarb
adc
lds
lods
inc
jp
setno
dec
into
dec
aad
jg
movsb
decb
or
mov
xlat
arpl
rol
ret
test
out
add
pop
popf
and
push
int3
push
cmp
inc
arpl
add
insl
lods
lea
test
repnz
xchg
loop
cltd
imul
mov
test
hlt
xlat
mov
in
lock
scas
popf
dec
fcmovb
insl
cld
xor
sbb
adc
leave
xorl
adc
fwait
repnz
insb
fdivrs
add
push
loopne
sbb
je
and
pop
pop
and
dec
cmpsl
jge
push
mov
lea
fsubrl
add
mov
xchg
pop
testl
mov
insb
out
cltd
mov
inc
leave
cmp
outsl
lods
loop
es
je
sbb
push
leave
jl
shl
adc
dec
mov
int
mov
bound
jmp
adc
or
lock
add
insl
repz
hlt
push
out
les
mov
push
cmp
invd
outsl
inc
cmpsl
fdivl
pop
add
jl
out
jge
pop
ret
jns
out
out
pop
int
add
mov
popf
xor
out
sahf
repz
jnp
and
push
mov
jmp
jl
mov
add
lahf
jl
cld
in
mov
cmp
push
jmp
pop
aaa
jle
push
sub
jae
scas
pop
push
scas
sbb
cmp
ret
pop
sub
cwtl
fcompl
xchg
sbb
or
rolb
rcll
adcb
push
daa
fmul
movb
and
cld
mov
test
pop
popa
jne
mov
shrl
inc
cmpsb
and
mov
test
lods
daa
cmp
xor
stos
loope
adcb
xchg
cmc
addr16
cmp
xchg
dec
pop
push
xchg
pop
inc
push
pop
rcll
mov
pop
add
cmp
jmp
dec
xor
test
mov
lret
inc
stos
add
movb
mov
in
hlt
out
or
fwait
or
mov
jge
xchg
daa
pusha
lret
movsb
das
lret
pop
pop
nop
mov
outsb
lock
inc
in
sti
pop
push
xchg
dec
loope
add
insl
fwait
cmc
loop
and
jp
inc
dec
lret
std
js
pop
or
push
and
andb
ss
dec
mov
jmp
cltd
sub
ret
cltd
outsb
andps
sub
sub
lret
movsl
pusha
scas
push
hlt
subl
mov
loopne
dec
jne
add
mov
in
test
dec
dec
hlt
or
lods
jnp
dec
ret
xlat
dec
mov
test
jb
fdivrl
mov
je
fcomps
imul
stc
hlt
and
insl
fwait
bound
pusha
and
or
cltd
ret
cmp
adc
mov
loop
cmpl
ret
jb
ret
lcall
cmp
addr16
jp
icebp
sbb
dec
sarl
call
and
mov
pop
stos
mov
sbb
jmp
mov
pop
mov
adc
outsl
dec
popf
pop
push
sarl
rorl
jg
mov
and
jg
out
mov
adc
mov
icebp
sub
inc
jne
insb
mov
push
lret
lret
add
mov
test
mov
or
dec
outsl
cmp
xchg
sbb
xchg
cmp
adc
ds
nop
adc
xor
popf
movsb
sti
insl
int3
sub
cmp
add
imul
and
daa
dec
decb
mov
insb
cmp
mov
shll
fidivrs
xchg
or
nop
dec
or
inc
int
xor
rcrb
xor
rcrl
idiv
jnp
mov
pop
adcl
lcall
jnp
stos
mov
scas
and
das
push
das
push
int
mov
sbb
cltd
or
pop
movsl
push
inc
cltd
inc
add
faddp
in
sahf
fcomps
lea
aas
fidivrs
je
dec
stos
sbb
dec
push
pop
fwait
push
test
insb
jp
xchg
sub
xchg
cmpsb
mov
jo
sub
pop
mov
arpl
pushf
repnz
cs
inc
or
or
mov
fcmovb
popf
fsubl
jp
dec
dec
dec
adc
xchg
ljmp
iret
cmpb
xor
jbe
rclb
int3
outsb
push
aas
mov
jecxz
call
mov
xchg
pop
js
paddusw
and
sar
imul
pop
jae
sub
jae,pt
or
stos
sbbb
dec
test
mov
rclb
hlt
add
loopne
cld
pop
aad
dec
movsb
daa
mov
out
push
roll
repz
frstor
adc
xor
lcall
movsl
into
mov
dec
mov
mov
jmp
sahf
xchg
push
hlt
icebp
jmp
out
insb
loopne
add
js
cld
mov
xor
mov
sar
adc
mov
in
cld
repz
sbb
rcrb
xchg
mov
cmp
adc
dec
iret
adc
rclb
test
jge
in
rol
sub
ljmp
dec
xchg
jle
test
outsb
fs
aas
xchg
xchg
sbb
cmp
pop
push
into
sbbl
insb
adc
leave
dec
dec
lds
test
lcall
jmp
dec
sbb
subl
push
call
fsub
xor
inc
inc
add
ss
outsb
jo
lcall
fidivs
push
add
test
repz
pusha
gs
push
push
mov
push
cmp
push
push
loopne
mov
dec
iret
inc
or
or
fsave
jno
inc
lret
push
rclb
bound
mov
add
arpl
xchg
and
adc
jle
adc
sbb
mov
mov
popf
jge
jle
lds
fcomip
jb
fsubrs
jge
sub
decb
stos
push
hlt
adc
jo
push
push
cmp
mov
sbb
and
push
cmp
scas
lods
test
fwait
sbb
sbb
mov
jecxz
add
lds
icebp
mov
dec
push
imul
js
mov
mov
fcmovbe
jp
and
sbb
insb
arpl
loop
jg
ja
inc
fmuls
fs
mov
jg
sbb
repnz
repz
xchg
push
femms
add
cltd
scas
int3
xchg
fstpt
cmpsl
jo
test
jl
call
mov
sub
cwtl
cmpsb
adc
or
movsb
outsl
sti
or
cwtl
adc
js
call
jbe
xchg
pop
push
addr16
mov
mull
call
test
dec
jne
loop
inc
jnp
std
ljmp
pushl
dec
or
sbb
pop
movsl
xchg
add
imul
mov
mov
pop
bound
mov
or
add
filds
insl
mov
dec
sub
or
scas
push
clc
fists
leave
movsl
jecxz
inc
rolb
cs
scas
push
xchg
pusha
fucompp
loope
dec
jo
xchg
adc
xlat
mov
stos
xor
inc
and
mov
je
dec
mov
and
sbbb
sahf
stc
mov
add
shll
sub
fisubl
test
sarl
cmc
popa
xchg
in
add
xchg
inc
loop
int
inc
adc
sub
push
jle
call
sub
add
push
sub
cld
gs
push
add
ds
scas
lret
push
leave
mov
dec
mov
mov
loopne
call
sbb
mov
into
sub
lcall
adc
fidivs
mov
xor
popa
in
jae
data16
jnp
bound
fsubr
inc
dec
xchg
pop
mov
leave
test
popf
and
mov
adc
mul
je
adc
ljmp
jno
ret
aas
popa
add
cld
fcmovnu
jp
sbb
add
jmp
mov
cmpsl
addr16
push
ret
test
xchg
sub
add
dec
push
shlb
inc
dec
lods
loopne
dec
mulb
jnp
inc
mov
inc
xchg
iret
stos
jno
sbb
cmp
scas
js
in
fwait
out
jle
loopne
add
in
pop
pop
sahf
lea
fsubrl
jbe
es
add
push
test
popa
arpl
nop
cmp
mov
sar
push
xchg
je
sub
insl
idiv
xchg
cmpsl
not
mov
test
mov
pop
inc
sbb
sub
js
aaa
push
push
sub
or
std
lods
xchg
lods
mov
push
cmp
loopne
xchg
sub
leave
outsl
data16
inc
mov
push
sti
cmp
icebp
ljmp
les
scas
ret
in
mov
mov
pop
add
call
add
jp
jl
mov
and
int
ljmp
xchg
dec
fwait
jmp
andb
outsb
push
test
aam
les
fcmovnbe
sbb
pushl
mov
or
imul
test
test
loop
mov
dec
hlt
jns
pusha
addr16
adc
jns
mov
cltd
push
bound
psllw
inc
xchg
jmp
inc
jne
divb
leave
inc
xorl
es
icebp
loopne
mov
jno
aaa
jbe
aam
insl
xchg
jmp
xor
jge
push
sub
mov
xchg
mov
push
xchg
js
pop
dec
push
jo
jle
xchg
add
cld
xor
nop
pop
and
and
frstor
fsubp
mov
jmp
jle
cmovbe
int3
mov
sub
clc
sbb
lret
ja
cld
ss
aam
mov
mov
add
iret
lret
mov
lods
xor
sbb
inc
mov
push
insl
repnz
sub
nop
outsl
int3
imul
adc
mov
dec
fnstenv
or
roll
nop
lahf
pop
and
popf
xor
cmp
and
fisttpll
leave
mov
test
iret
mov
repz
dec
mov
pop
xchg
fiaddl
mov
and
aad
std
xor
or
or
mov
jmp
pop
gs
ljmp
xlat
movsb
and
jbe
sub
mov
pop
ficompl
outsl
sub
fbstp
mov
jnp
sbb
xor
sub
aam
jns
dec
sub
cmp
add
lea
dec
mov
shll
and
mov
pushf
xor
jno
repz
jbe
lfs
das
js
mov
outsl
mov
xor
inc
pop
in
mov
mov
adc
sbb
das
xchg
mov
fcoms
out
int
lahf
adc
or
pop
dec
xor
iret
inc
inc
jno
mov
loopne
push
jmp
mov
add
dec
js
pop
push
dec
cmp
and
cld
adc
cli
push
leave
xchg
push
sub
into
les
add
jmp
leave
nop
dec
dec
arpl
xchg
jb
test
or
fiadds
js
xchg
mov
clc
cwtl
fnstenv
lds
gs
sbb
sub
fstpt
mov
insb
mov
test
js
fimuls
test
add
es
jb
dec
out
out
pop
jb
xchg
cmp
subl
and
lret
std
fdiv
rclb
clc
call
jns
xchg
mov
push
adc
ss
outsl
in
bound
xchg
repz
in
xacquire
jg
or
mov
rcrl
dec
cmp
in
leave
icebp
mov
jbe
sub
es
cmc
xor
jmp
adc
cli
cwtl
ss
cmp
xchg
adcl
sarl
loop
pop
sub
lcall
movsb
fmuls
sub
dec
loopne
pop
jb
jnp
inc
and
mov
mov
mov
in
dec
dec
ljmp
xchg
fisttpll
fldt
adc
movd
ja
lret
aas
cmp
xor
arpl
dec
dec
repz
clc
mov
dec
add
in
insl
inc
xor
pop
sbb
mov
loopne
or
xchg
jns
gs
xorb
fdivr
pop
jne
aad
loopw
stc
sti
or
and
add
push
cmp
jae
xor
push
cli
dec
adc
mov
pop
and
test
inc
xchg
pop
dec
jle
mov
jecxz
mov
xchg
lds
sar
clc
push
out
push
jae
inc
mov
adc
call
push
add
inc
sar
sub
sbb
lock
leave
inc
inc
aaa
std
out
fistpl
xlat
ret
ret
mov
xchg
push
nop
leave
mov
push
push
cmp
sti
lods
and
sbb
cmp
mov
popf
push
test
or
lds
rcrb
xchg
cwtl
repnz
enter
mov
mov
xchg
pop
enter
dec
inc
add
std
xor
push
sahf
ds
pop
mulb
cmp
fs
inc
inc
clc
cltd
xor
adc
imul
or
jg
js
loopne
gs
pop
je
out
call
or
sahf
mov
popf
cmpsl
pop
das
and
incl
mov
and
dec
lret
jl
mov
js
into
fidivl
cltd
enter
es
pop
imul
cmp
test
icebp
push
out
mov
push
inc
dec
mov
dec
scas
xchg
push
shl
cmp
in
fisubrl
add
cmpsb
out
xchg
jle
sub
mov
cmp
sub
push
leave
xchg
xchg
fidivrs
movsb
stc
or
scas
pop
push
shl
sbb
inc
adc
mov
fsts
shl
lds
adc
mov
out
call
aas
sbb
mov
add
cmpsb
sbb
scas
jecxz
cmp
sub
cmc
pop
sub
xchg
push
mov
add
xor
insl
inc
jae
push
cli
pusha
add
mov
sub
lea
inc
dec
jbe
cs
inc
test
inc
pop
sbb
and
cs
or
push
cmpsb
clc
cmpsb
mov
ss
rolb
mov
nop
addr16
lods
gs
dec
in
inc
aas
inc
sti
out
or
aas
mov
add
jmp
mov
pop
test
mov
push
jge
xchg
mov
cmp
push
jne
xlat
das
insb
xor
aam
shl
mov
dec
lods
pop
fidivrl
xchg
aam
sub
mov
xor
dec
in
mov
imul
inc
mov
ljmp
addl
ja
inc
jl
sti
fcoml
mov
sbb
jmp
pop
lahf
stc
inc
or
xor
mov
mov
call
pop
test
negb
mov
div
cmp
cltd
aas
jecxz
gs
inc
and
movsl
inc
mov
out
ret
scas
jb
das
xchg
arpl
ss
inc
adc
mov
push
pop
popf
cmc
jg
insl
xor
or
push
lcall
pop
sub
mov
jne
pop
fisttps
dec
sbb
lods
cs
mov
mov
clc
stos
repz
mov
jl
in
jg
xor
out
in
lret
jge
fdivr
xor
bound
push
mov
push
ficompl
dec
das
repnz
loopne
cmc
sub
jnp
adc
in
pop
cmp
adc
pusha
clc
sub
enter
sbb
adcb
push
lret
push
out
push
push
push
xchg
mov
cmpsl
leave
int3
and
out
adc
jp
pop
lret
sub
stc
outsl
imull
movsb
jne
icebp
sbb
lock
adc
adc
jecxz
movd
xchg
into
pop
push
or
les
push
jecxz
sbb
push
inc
xchg
mov
cmc
xchg
jecxz
outsl
dec
xor
int
adc
out
sti
push
popf
scas
xchg
mov
pusha
ja
int
cmp
or
leave
in
insl
shlb
xor
mov
das
xor
sub
jge
push
xchg
orb
into
or
out
mov
movb
js
cmp
jle
cld
dec
jl
cmp
and
add
lds
sub
push
adc
mov
or
dec
int3
out
push
mov
xchg
mov
sahf
push
test
fwait
xor
pop
push
test
subl
sub
pushf
arpl
dec
aam
fisttpll
stos
lea
rcll
sti
adcb
mov
out
testl
inc
dec
xchg
fsubs
cmp
mov
xchg
xchg
adc
mov
cs
push
pop
lret
cli
adc
mov
add
das
daa
aam
sbb
pop
xor
mov
fadds
cld
sbb
xor
inc
aas
dec
scas
in
lea
mov
mov
jmp
outsb
popf
jnp
shlb
add
lds
sbb
xor
adc
std
mov
push
mov
outsb
mov
and
xor
into
outsb
push
xchg
mov
jbe
movsb
arpl
inc
pusha
jae
sahf
and
mov
int
xchg
jle
mov
or
dec
loopne
jnp
nop
fdivrl
lret
gs
imul
add
add
stos
push
cld
mov
jne
jo
fsubs
lahf
or
dec
jae
mov
mov
push
push
js
mov
mov
sbb
js
mov
push
aad
mov
pop
pop
enter
outsl
inc
pop
sub
test
cld
push
mov
pop
push
xor
lahf
xchg
push
test
ret
xchg
sub
inc
fisubl
xchg
push
sbb
enter
iret
adc
cmp
aam
mov
pop
mov
mov
test
negl
les
movsb
inc
ficompl
mov
dec
mov
fmull
les
sbbb
cmp
rorb
jbe
popa
mov
jo
adc
jo,pt
push
in
mov
add
mov
pop
and
fmuls
iret
repz
push
xchg
mov
call
inc
mov
pop
pusha
xlat
jo
pop
xchg
add
shlb
mov
mov
mov
xor
cmp
scas
aas
cmp
mov
sahf
or
mov
and
enter
or
jb
orl
xchg
cmp
sbb
mov
jae
adc
sub
pop
mov
inc
out
xchg
into
int
enter
cmp
jne
fcoml
arpl
aaa
push
fistpl
repnz
cmove
jle
popa
dec
loop
push
xchg
sub
or
push
test
cmp
imul
in
ljmp
push
loope
imul
in
scas
push
cmp
cwtl
push
cmc
adc
icebp
sbb
mov
xchg
push
jecxz
ret
sbb
push
mov
fs
adc
xchg
lret
shrl
mov
das
sub
imul
and
and
scas
and
ds
and
add
add
push
mov
mov
mov
or
inc
in
cmpsb
dec
lcall
sbb
fs
sub
xlat
jno
mov
ds
je
sbb
dec
push
pop
jno
cs
scas
and
outsb
imul
mov
add
sahf
fstpl
jmp
cmpsb
lock
sbb
imul
loop
jmp
mov
lock
scas
mov
sbb
je
push
pop
hlt
mov
cmp
xchg
sub
bound
xor
push
loopne
sbb
scas
cltd
inc
mov
cvtps2pd
jnp
cmpsb
jns
in
pop
adc
jecxz
push
ret
mov
stos
jge
dec
mov
into
popl
pushf
xor
xchg
lds
jmp
ja
push
or
xor
aas
xchg
mov
inc
inc
dec
js
xor
mov
inc
xchg
adc
pop
inc
je
adc
adc
mov
cli
cwtl
in
push
mov
cmc
jecxz
test
xor
sub
les
mov
mov
mov
lods
dec
dec
fidivrs
adcl
push
out
mov
es
xchg
jp
sub
sti
lods
xor
or
in
cmp
mov
in
in
into
js
pop
sarl
xor
push
outsb
outsb
addl
xchg
push
test
imul
mov
movsl
jo
out
aas
mov
or
cmp
mov
clc
inc
push
jge
mov
outsl
xchg
mov
cmp
test
mov
pop
cs
loop
adc
adc
mov
jle
pop
or
inc
rclb
insb
push
test
jnp
pop
xlat
lods
call
mov
dec
shl
aad
mov
adc
cltd
in
adc
dec
pop
fcmovnb
insl
out
lea
lods
stc
fisubrl
ret
push
ljmp
dec
mov
aam
fcmovnb
mov
mov
aaa
call
xchg
sbb
test
decl
xchg
cli
in
test
pop
dec
stos
pop
cmp
xchg
scas
xchg
inc
movsb
test
popf
rcll
loope
pop
jecxz
push
xchg
xchg
divb
cmpsb
lods
add
sti
pop
or
jne
loope
or
insb
loope
movsl
ret
cmpsl
test
out
test
jo
adc
lods
je
aad
dec
adc
pop
mov
xor
inc
scas
sti
cmpb
xchg
rorl
push
lahf
mov
mov
aam
shll
test
rorb
loopne
das
or
mov
inc
or
stc
nop
sub
push
gs
movsl
loop
data16
pop
orb
call
mov
mov
sarb
mov
out
and
push
outsb
sub
sbb
mov
mov
ja
cwtl
movsl
lret
xorl
jmp
pushf
les
lods
cld
insb
leave
mov
nop
jne
aam
or
push
fs
cmpsb
mov
out
cmp
sbb
and
cmp
jae
aaa
sbb
xor
cmp
cmp
dec
inc
clc
mov
jae
call
mov
xor
mov
fwait
jmp
mov
and
xchg
into
popa
ret
xchg
cmp
lock
imul
jl
fwait
lahf
sbb
push
inc
xchg
scas
add
enter
out
mov
or
pop
les
mov
popf
cmp
mov
call
test
bound
addl
cmp
pop
fsts
cmpsl
inc
jns
or
dec
sbb
inc
or
jge
or
push
xchg
push
adc
pop
sbb
mov
xchg
mov
aad
mov
test
dec
iret
movsb
test
or
std
int
es
stos
decl
dec
jmp
pop
stos
xor
xlat
adcl
add
or
mov
addb
mov
pop
sahf
xor
push
sub
jne
pop
call
adc
je
or
push
jo
inc
leave
xchg
xchg
imul
mov
xchg
and
insb
add
jb
inc
js
xchg
outsl
adc
sbb
pop
mov
add
jbe
xor
and
dec
notb
sbb
test
inc
push
in
dec
aam
fidivrl
lods
pop
mov
stos
fists
adc
jmp
pop
push
push
es
jns
push
les
and
in
pop
xor
or
push
fnstenv
pop
mov
lret
lds
push
push
mov
pop
cmpsl
inc
outsb
add
add
pop
out
in
js
cwtl
loopne
mov
jp
inc
shrb
test
imul
cmpsb
fcmove
push
fdivrs
sbb
mov
xor
dec
pop
repnz
daa
jl
pop
adc
stos
in
popa
in
and
ss
clc
int
fdivrs
call
push
movsb
push
ret
add
adc
mov
aam
loopne
rcrl
xorl
out
lahf
mov
into
stc
fstpl
fwait
xor
xor
xor
mov
cli
cmpsb
stos
scas
sahf
jl
repnz
cmp
or
mov
insl
mov
push
aam
or
das
scas
push
push
mov
inc
cmc
push
sbbb
and
pop
mov
cmpl
lds
imul
jb
xchg
mov
lea
xor
cwtl
outsl
mov
out
inc
cmp
mov
pop
mov
push
xlat
or
jmp
test
out
pop
pop
imul
push
popa
repnz
dec
and
jecxz
loope
sti
lods
mov
dec
jecxz
jmp
nop
xor
pop
xlat
fidivrs
xchg
ror
insb
dec
sub
sbb
nop
pop
push
andl
lods
and
push
popf
push
and
xchg
cmp
push
adc
leave
addb
dec
and
jp
leave
test
jne
jb
or
test
sbb
test
out
cmp
sub
push
adc
push
sub
pop
xor
cmc
int3
mov
mov
push
jne
stos
xchg
dec
les
test
mov
rclb
popf
sbb
loopne
or
imul
in
das
repz
adc
pop
jl
movsb
jmp
shll
sbb
sbb
xchg
mov
push
adc
in
mov
or
xor
movl
lds
fsubl
inc
xor
ficoms
mov
or
adc
xchg
popa
shrl
mov
mov
jb
sbb
mov
adcl
adcl
rcll
gs
ror
sbb
in
xchg
mov
mov
out
in
cmc
into
movsl
push
or
into
lea
movsl
inc
inc
xor
outsb
sbb
and
mov
mov
int
push
sbb
xor
sbb
xchg
xor
push
mov
mov
cmp
loopne
daa
out
push
cli
inc
arpl
shll
std
mov
sarb
jmp
popa
or
out
int
pop
dec
sub
cli
std
sbb
push
sub
sub
sbb
pop
and
adc
sbb
scas
mov
mov
add
ja
mov
and
mov
in
insb
push
icebp
push
mov
aad
arpl
adc
mov
mov
add
sub
push
in
sub
xor
jae
pop
cmpsl
ja
push
adc
iret
xchg
push
vandps
filds
cmp
mov
xchg
jnp
inc
sahf
cs
nop
push
test
add
or
cltd
aam
call
jne
ljmp
jns
faddp
xor
fdivl
movsb
call
sbb
insl
pop
push
push
dec
lods
push
and
js
sti
cmp
lahf
inc
sub
push
mov
xor
dec
popa
imul
push
loope
aas
out
mov
imul
negb
push
pop
jp
xchg
and
fldcw
mull
inc
aaa
cmpsb
aaa
das
repz
cwtl
adc
push
lods
mov
jb
push
rcl
sbb
in
or
and
push
repz
lea
shr
push
sub
push
mov
adc
adc
popf
push
adc
jp
cmpsb
lcall
rcr
lods
dec
ss
stc
stc
jge
add
lods
leave
daa
jmp
xor
cwtl
in
test
lods
sub
fsubr
pushf
repz
dec
mov
insb
enter
dec
mov
xchg
cmpsb
push
out
mov
xchg
fisubl
cmpsb
addb
gs
and
jl
test
adc
repnz
scas
mov
dec
and
not
xchg
mov
dec
jl
lahf
pop
xor
in
pop
sub
or
fldcw
xor
shlb
pop
repz
add
xor
mov
fstps
lock
push
and
push
dec
out
fstps
xor
push
insl
and
lods
in
pop
std
fwait
pop
mov
xor
mov
add
stos
imul
dec
std
test
sbb
sbb
cmp
push
andb
mov
push
icebp
mov
and
cmc
rclb
jmp
daa
add
enter
cmp
jg
jns
sarb
cmp
adc
js
cmp
out
xchg
mov
subb
xor
push
jecxz
sbb
rcll
mov
out
add
in
add
add
mov
xchg
cmp
xlat
clc
push
ja
loope
hlt
xchg
push
inc
cmp
notw
xor
imul
dec
lret
inc
sub
jb
in
jp
mov
adc
or
xchg
mov
loop
mov
add
js
rcrb
cld
je
push
sbb
cltd
push
pop
outsl
adc
cmp
stos
imul
imul
push
pushf
lea
rcl
xchg
das
cmp
inc
push
cltd
push
ret
pop
lcall
hlt
sbb
stos
movsl
fldcw
in
addl
jp
xchg
scas
cmc
ja
outsb
adc
cmpsb
ds
in
bound
mov
mov
mov
push
repnz
inc
jge
dec
aas
sub
adc
scas
adc
dec
pop
es
fists
dec
movsb
jg
xchg
and
jae
mov
cmp
jbe
out
or
adc
add
sbb
jmp
push
stos
jmp
add
mov
pop
repnz
sub
inc
das
dec
mov
mov
sbb
icebp
fdivs
jb
cmp
xchg
test
inc
push
xor
push
fs
enter
aas
and
fsubl
pop
push
cltd
mov
or
ret
test
shll
outsl
arpl
or
clc
xchg
std
xor
aas
insb
setp
aam
mov
arpl
in
ret
pop
aam
out
int
jne
pop
mov
jbe
pop
mov
lcall
inc
cli
sub
dec
adc
mov
bound
dec
sbb
xchg
mov
mov
adc
pop
mov
lds
pop
add
popa
sub
xor
out
jns
es
adc
cmp
mov
jmp
lahf
insl
jb
push
std
hlt
xchg
push
stc
mov
fmuls
std
xor
jns
mov
ret
les
jbe
or
fiadds
jl
iret
jne
movsl
mov
call
testb
pop
mov
imul
adc
cmp
call
mov
mov
out
and
stos
push
mov
and
shlb
xchg
testb
cmc
xchg
xor
stos
nop
or
rorb
mov
and
movsb
xor
dec
xchg
clc
test
and
std
shll
pop
imul
movsb
inc
pop
in
add
fdiv
mov
pop
rcrl
mov
out
cli
mov
mov
dec
popf
arpl
mov
jns
cld
xor
push
sbb
test
in
add
icebp
outsl
inc
xchg
gs
inc
lea
arpl
mov
jno
faddp
pop
in
outsb
ds
mov
push
notb
ret
cwtl
pop
mov
ljmp
xor
adc
mov
loope
arpl
clc
adc
jg
lcall
dec
or
lods
cmp
or
icebp
insb
fsubl
push
push
call
push
loop
aaa
xchg
mov
sarb
imulb
pop
mov
in
pushf
mov
shrl
lods
fdivs
out
cmp
lods
bound
mov
sbb
popa
lea
in
out
outsb
mov
jmp
call
ss
sub
sub
push
cmp
rcrb
xorb
aam
inc
mov
mov
out
cmp
add
xchg
xchg
mov
mov
mov
lahf
pop
jo
jae
xchg
leave
out
xor
imul
repz
dec
xor
jnp
push
in
stos
cwtl
xchg
loop
mov
mov
icebp
iret
clc
ret
out
and
mov
repnz
cs
push
pop
js
jmp
inc
sub
push
sub
mul
mov
or
or
xchg
adc
push
pop
iret
push
cs
call
movsb
push
flds
repz
xchg
aad
sub
rolb
push
int3
sbb
insl
fwait
xchg
xchg
jbe
lea
arpl
aas
jmp
jnp
jbe
mov
push
add
ja
fcomip
add
push
adc
lret
test
cmp
insb
in
dec
sub
sub
jno
pop
inc
in
repz
in
xlat
xchg
je
mov
inc
cwtl
lock
sbbl
test
mov
xorl
pop
roll
mov
fstps
xor
inc
sub
in
or
arpl
sub
insb
xchg
pop
lea
rol
mulb
imul
mov
lret
dec
mov
popf
cmp
sbb
fld
pop
aas
imul
xchg
add
xor
sub
mov
arpl
pop
into
stos
sbbb
je
inc
orl
test
xchg
inc
mov
mov
sbb
sbb
add
scas
pop
std
out
into
inc
jmp
pushf
ret
dec
stos
add
xchg
inc
sub
imul
push
lcall
popf
sbb
shl
dec
daa
outsl
jle
test
fisubrl
adc
xor
adc
pop
lahf
push
fs
in
xchg
outsb
outsb
cmp
mov
out
out
push
je
add
fs
frstor
inc
jecxz
std
sti
xor
push
sbb
dec
push
lret
movsl
jle
jae
and
cltd
pop
xor
inc
xchg
aaa
cwtl
testb
aad
pop
or
mov
nop
scas
xchg
or
in
movsb
fwait
inc
sahf
or
xchg
xor
xlat
popf
pusha
test
subb
cmp
gs
and
nop
popf
flds
inc
loopne
dec
and
or
and
push
loopne
fwait
cmc
in
or
inc
andl
mov
sti
xor
lods
lahf
imul
orl
mov
adc
in
popa
pop
jle
ret
mov
pop
cmp
or
popa
fsub
mov
mov
or
subl
aam
sbb
ljmp
dec
clc
inc
mov
push
out
stc
jae
rcrb
jb
imul
cmpsl
outsl
hlt
pop
call
insb
mov
pushf
mov
clc
jb,pn
or
mov
cmp
out
sti
movb
mov
out
pop
pop
mov
imul
dec
or
push
iret
push
cmp
mov
or
idivl
fsubrl
mov
fisttpl
ja
add
adc
mov
mov
mov
or
push
sbb
sbb
loope
loope
enter
sti
outsb
mov
roll
jmp
xlat
cli
xchg
fmul
cmp
sub
in
jmp
xor
sbb
loope
xchg
imul
mov
dec
fstl
add
fidivrl
or
adcb
enter
mov
cmp
mov
ss
push
or
add
out
fdivl
std
cmpsb
pop
in
imul
xchg
nop
addr16
xchg
into
test
jmp
mov
fldt
sbb
ret
jle
stc
xchg
adc
push
jle
ds
movsl
sub
hlt
ds
popf
mov
dec
mov
scas
push
popa
or
ss
arpl
fwait
loop
les
int3
adc
cli
and
inc
in
wrmsr
mov
insl
fadds
cmp
mov
mov
adcl
inc
lahf
mov
je
mov
xchg
int3
cmpsb
or
jmp
sbb
and
or
sub
xchg
adc
sbb
mov
push
and
xor
fnstenv
push
mov
jns
testl
dec
mov
icebp
sbb
clc
jmp
mov
sbb
push
fsubrl
push
popa
loop
mov
mov
gs
mov
fwait
mov
shrb
andb
push
dec
aam
fdivs
pop
sub
int3
cmpsb
gs
movb
mov
in
jmp
ficomps
cmp
or
nopl
xor
in
add
dec
pop
xchg
add
cwtl
sarl
mov
das
dec
out
xor
or
lahf
jnp
adc
mov
aaa
ljmp
ljmp
xchg
add
mov
jg
cltd
cmp
aas
cmp
inc
fwait
pop
push
jg
pop
dec
into
lock
rcl
sub
push
xchg
jl
jmp
mov
maxps
orl
pushf
popa
mov
int
rolb
les
xor
jns
cmp
ljmp
movsl
arpl
jg
dec
call
push
in
inc
hlt
add
iret
jp
pushf
pop
ds
test
out
sub
mov
ljmp
fsubr
mov
mov
cmp
hlt
cmpb
pop
push
jl
jmp
and
xchg
jno
into
jo
inc
sub
adc
ret
sbb
aaa
adc
push
notb
xchg
sub
lods
iret
stos
adc
inc
rcrl
pop
inc
ljmp
inc
ja
pop
lcall
push
mov
jns
lds
mov
dec
add
dec
mov
pop
inc
aas
adc
rorb
cmp
cli
bound
movsb
insb
mov
xor
js
mov
and
popl
push
sbb
lahf
enter
or
leave
loop
sahf
pminsw
adc
sahf
xchg
add
pop
adc
stos
and
push
daa
fldl
mov
mov
adc
in
sbb
icebp
sarl
fsubr
in
adc
jg
adc
and
jge
out
push
inc
mov
fidivrl
mov
fs
call
jb
fsincos
or
jno
mov
int
mov
push
pop
mov
xor
mov
arpl
add
imull
pop
out
jne
xor
and
lahf
ja
imul
out
pop
xchg
add
sbb
dec
mov
sti
cmp
push
clc
add
std
dec
dec
and
scas
push
dec
ret
ficomps
mull
xchg
std
sub
stos
test
xchg
sahf
movsb
repnz
lods
ds
gs
mov
lret
push
stos
imull
mov
cltd
xor
pop
arpl
jo
lret
inc
std
and
sbb
inc
es
jae
ja
mov
push
mov
xchg
cld
cli
adc
mov
jge
push
clc
in
jp
idiv
and
fistps
pop
in
dec
mov
cmp
jne
in
xchg
inc
push
sahf
pop
push
inc
sub
pop
xor
in
mov
repz
nop
dec
pop
mov
mov
out
movsb
xor
or
sub
push
pop
pop
jne
inc
es
les
push
sarl
adc
and
push
inc
mov
and
xchg
xchg
sub
sahf
lahf
inc
inc
dec
jl
mov
into
mov
jo
jne
adc
mov
push
add
push
sarl
mov
fimuls
lret
cmp
into
out
movl
jge
dec
dec
ljmp
push
push
mov
fimuls
push
into
popf
orb
gs
andl
jnp
movsb
adc
and
sbb
insl
fistl
iret
and
push
in
popa
mov
push
aad
fstps
int
adc
or
ret
jge
jl
sub
scas
sub
push
adc
out
inc
ljmp
daa
data16
xor
repnz
cld
add
push
jae
ret
aaa
and
xchg
mov
pop
cmc
orl
incl
les
test
mov
ja
xchg
or
or
enter
sub
sub
popa
and
xor
enter
jmp
rcrl
or
mov
lds
sbb
imul
popa
inc
push
xchg
mul
enter
pop
and
imul
push
lods
in
mov
sub
fs
nop
lahf
cmp
mov
lods
addr16
push
push
rclb
shl
shll
inc
lods
mov
cmpsb
lea
xchg
jecxz
mov
xchg
ss
sbb
popf
sub
scas
xchg
mov
adcl
lcall
cmp
leave
fs
out
je
adc
fwait
pop
inc
sbb
or
lcall
mov
mov
mov
in
xor
xchg
int3
add
and
sti
stos
data16
push
mov
sbb
enter
push
and
in
inc
xlat
arpl
cmpsl
lcall
mov
cmp
les
subl
cmp
jle
pop
fsubs
dec
xchg
lahf
je
dec
daa
je
inc
jp
xchg
sub
lcall
sub
cmpsb
add
and
addr16
inc
int
test
sbb
leave
pop
loop
or
jl
scas
in
xchg
in
bound
rorl
pop
cmc
and
out
lea
adc
push
lahf
scas
mov
inc
outsl
cmp
or
mov
divl
dec
and
mov
lret
inc
add
lds
es
jae
imul
xchg
sub
cmpsb
sarl
outsb
jbe
shrb
inc
pushf
mov
jge
inc
imul
in
rcrl
les
shlb
int3
stos
lock
inc
and
and
popf
popa
repz
lret
adc
mov
mov
push
xchg
sbb
clc
frstor
das
jl
push
jg
jnp
mov
and
mov
mov
cmc
cmp
jle
fldt
mov
ljmp
push
dec
gs
fldl
and
shlb
xor
xor
fiaddl
fstps
movl
fisttps
cmpb
mov
scas
add
dec
jns
mov
mov
test
dec
xor
push
enter
mov
dec
cmpsb
dec
mov
mov
mov
in
push
push
into
xlat
adc
pop
xchg
mov
aad
mov
and
jns
inc
push
mov
decb
adc
bswap
cmp
mov
loop
out
jl
insb
push
dec
xchg
mov
sub
push
jg
jns
push
sub
fidivrl
inc
mov
out
jle
push
repz
pop
cld
cmc
push
mov
int
inc
push
je
loopne
popa
or
rcrb
adc
into
or
dec
mov
in
push
fcompl
jle
stos
mov
xor
xchg
pop
and
fldenv
outsl
sbb
test
and
xchg
lret
or
pop
dec
dec
sbb
jns
mov
mov
lcall
nop
jbe
out
jno
cmpsl
push
push
dec
push
cmp
movsl
xchg
cmp
pop
mov
jbe
cld
ret
imul
jno
xchg
cmp
jb
iret
idivl
in
lock
dec
push
cld
notl
mov
pop
les
push
addr16
xor
and
dec
repz
pop
aaa
subb
cli
out
cmp
dec
popf
sti
push
push
mov
test
adc
mov
nop
lret
dec
jo
cld
aam
mov
lods
dec
test
inc
or
fwait
sub
and
sub
and
add
out
movsb
daa
fmull
inc
xchg
push
push
and
gs
das
loopne
jbe
jg
cs
cmp
mov
or
stos
push
push
add
inc
insb
push
bound
add
outsb
lds
pop
repnz
pop
data16
push
lcall
sbb
cmc
mov
shrl
xor
push
inc
lret
pop
fs
pop
div
xchg
xchg
xchg
inc
cmp
inc
gs
adc
pop
push
adc
es
cmp
and
mov
push
repnz
insb
and
cmp
jl
jb
mov
nop
xchg
xchg
pop
cmp
jnp
inc
add
negb
mov
cwtl
mov
loope
jp
sub
cld
inc
into
xchg
inc
pop
mov
lods
mov
inc
jmp
pop
cli
jmp
nop
push
ret
sarb
test
and
mov
pop
std
ss
hlt
xlat
or
mov
sbb
sub
mov
rclb
adc
sbb
inc
lret
ret
cmp
mov
in
loopne
ret
lret
xor
test
inc
and
push
xchg
push
xor
and
xor
jmp
stc
inc
xchg
repnz
jg
repz
call
add
je
ljmp
sti
or
leave
lret
or
push
ljmp
dec
sti
mov
dec
cmc
hlt
pop
in
mov
dec
mov
dec
js
js
inc
cwtl
iret
mov
out
jnp
imul
out
mov
stc
imul
sbb
fsubs
cmp
popf
cltd
and
dec
sub
fimull
inc
mov
xorb
jecxz
scas
in
inc
sub
cwtl
ss
mov
sub
aad
sbb
xchg
fisubs
push
mov
or
scas
in
and
cld
jecxz
or
jae
push
ret
push
enter
cmp
mov
jmp
clc
mov
sub
shlb
repnz
push
add
cltd
and
mov
sub
in
xlat
pop
mov
add
mov
data16
mov
or
aaa
cmp
shld
sub
std
sbb
adc
cld
hlt
adc
arpl
xor
lret
stc
lods
add
adc
xor
add
mov
dec
cmp
inc
sub
push
xchg
lret
pop
push
mov
jo
fwait
aaa
add
sbb
or
aam
sub
push
cmp
adc
xor
sahf
ret
mov
sbb
cmpsb
inc
mov
ds
jno
jmp
xor
adc
incl
out
decb
mov
xor
ret
dec
notb
sbb
and
stc
or
ret
mov
add
mov
je
xchg
aam
push
rclb
pminub
scas
pusha
mov
adc
dec
je
or
xchg
inc
ljmp
lret
fwait
cmc
add
orl
rcrb
das
sub
shr
inc
adc
xor
xchg
sti
hlt
leave
xorl
sbb
leave
mov
ja
or
lock
sub
adc
pop
adc
mov
adc
jge
in
jb
adc
fwait
ss
inc
xor
pop
mov
xor
mov
xchg
inc
outsl
dec
push
push
scas
sbb
loope
leave
dec
js,pn
pusha
cmp
or
pop
sahf
mov
push
mov
lret
movsb
adc
out
repnz
push
add
mov
sti
push
pop
lods
insl
cmpsb
mov
cmp
cld
dec
jmp
xchg
add
mov
xchg
lock
test
mov
popl
add
push
sbb
cld
cmp
ret
fs
xor
jo
sbb
jg
cmp
ret
mov
addr16
int3
adc
imul
aas
push
mov
lahf
mov
xorb
dec
add
sahf
aas
dec
push
js
pusha
sub
loop
or
dec
mov
xchg
movsb
xchg
out
icebp
stos
mov
push
xchg
xor
decl
fistpl
popf
pop
push
jg
ret
jnp
sub
adcl
sti
in
mov
sbb
mov
adc
lods
mov
add
fcomps
xchg
sub
out
push
mov
lahf
or
or
scas
lock
add
rolb
adc
push
cmp
pushf
push
xlat
cld
fcom
or
push
shll
mov
fldl
ja
push
sti
and
lock
rclb
inc
test
mov
add
aad
addr16
stos
xor
adc
push
mov
inc
enter
sarb
sub
cld
or
mov
push
xor
mov
adc
aaa
sbb
adc
adc
je
mov
pop
jbe
ss
sub
push
fistl
mov
out
subb
cmp
adc
cltd
in
adc
mov
fsubs
sbb
adc
dec
aaa
xchg
in
xor
pop
cmp
pop
jns
inc
gs
test
fwait
and
jb
nop
adc
sbb
mov
cmp
sbb
in
repnz
popf
mov
xchg
sub
fldcw
popf
xor
sub
push
sbb
inc
das
les
mov
jbe
pop
es
das
lods
xor
repnz
inc
orb
lret
cmp
jno
add
es
mov
sub
aaa
hlt
jne
mov
out
rcr
jne
nop
push
test
mov
cltd
cmpl
inc
movsb
cmp
adc
mov
cmc
aas
adc
cmp
psubusb
inc
stos
cmpsl
push
addr16
cmc
jno
push
xlat
mov
jmp
sbb
in
vpacksswb
lahf
cmp
dec
jg
mov
psubq
daa
xor
mov
fisttpl
in
and
sub
aam
xor
pushf
xchg
cli
xchg
fsubrl
dec
inc
and
and
inc
cs
lcall
mov
rcl
sub
xor
push
inc
adc
xchg
sbbl
add
mov
mov
or
jbe
fwait
cmp
js
movsb
cmc
cli
fdivrp
xor
lea
adc
lcall
jecxz
sub
dec
mov
in
idivb
loop
lcall
rcr
jl
inc
cmp
cmpsb
andb
cmp
push
out
out
jae
lcall
shr
xchg
xchg
jo
and
mov
js
adc
icebp
cmp
fsub
idivb
push
push
in
add
ljmp
push
xchg
adc
xor
mov
outsb
sub
ja
sbb
icebp
cli
js
stc
lret
sbb
inc
cmpb
nop
add
add
fisubrl
lret
popf
jo
fs
js
lods
push
data16
hlt
xchg
imul
out
dec
xchg
lds
or
jnp
hlt
stc
push
lods
push
lock
ret
imul
loop
icebp
fnsave
stc
cmp
jle
movsl
push
loop
rcll
sbb
sbb
scas
and
mov
icebp
imul
cmp
int
cmp
mov
and
loope
cmp
dec
dec
mov
cmpl
es
jns
mov
hlt
pusha
int
xor
hlt
dec
jae
xchg
dec
jge
dec
call
insl
cmpsb
push
dec
or
mov
xor
bound
lods
cmpsl
dec
cmp
mov
cmp
mov
aad
cmp
inc
fidivl
xor
adc
and
dec
and
shlb
sub
in
add
mov
sbb
dec
and
or
vpsubq
out
cli
out
test
push
fsubrl
or
lds
ljmp
fidivs
mov
lock
sub
jl
lcall
push
inc
jns
clc
pop
je
sub
out
sti
xor
cltd
mov
out
dec
cmc
in
pushl
ljmp
sbb
cmp
sbb
rorl
repz
or
mov
aad
dec
dec
inc
ljmp
in
imul
sbb
push
add
add
cmp
daa
mul
dec
push
incb
jecxz
movsl
sti
in
repnz
fwait
cs
xchg
mov
stos
and
fs
inc
and
arpl
add
mov
mov
js
bound
pop
into
repnz
lea
mov
mov
mov
and
jne
pusha
and
nop
xchg
mov
test
ss
ljmp
inc
lret
cli
mov
jmp
jge
push
sbb
cmp
push
mov
cmp
repnz
mov
push
sbb
inc
cmpl
movb
dec
cmp
stos
addr16
in
sub
adc
and
popa
cwtl
add
loop
in
push
cs
mov
das
leave
popa
insl
movl
hlt
push
fistl
xchg
icebp
fstps
std
lods
pushf
fucom
adc
in
cmp
orl
cmp
or
sbb
js
xor
cmpsl
add
fwait
dec
cmp
push
int
rcll
lret
pop
dec
and
push
mov
sti
movsb
aad
out
enter
mov
orl
jmp
loope
lcall
pop
pop
cmp
push
cltd
dec
out
fidivrs
xchg
or
mov
js
xchg
std
adcl
in
push
lcall
cltd
mov
jae
movsl
inc
int3
ret
mov
ss
addl
push
dec
push
je
fldlg2
cmp
adc
insl
mov
icebp
nop
stos
ror
rcrl
call
das
lahf
ja
sub
mov
pusha
cmp
stos
lret
push
adc
xchg
jp
jne
pop
inc
mov
mov
mov
adc
jo
lcall
out
push
movsl
sbb
movsl
repnz
jo
and
ljmp
or
and
lcall
xor
ret
and
push
jl
and
jg
jle
or
movsl
push
enter
jno
cld
add
es
dec
aad
pop
fcos
jo
adc
pop
mov
xchg
out
out
movsl
jne
in
dec
in
xchg
mov
cmp
fiaddl
cwtl
inc
and
hlt
sub
jecxz
sbb
xchg
mov
pop
and
adc
imul
jp
aas
aad
mov
cmp
inc
mov
cmp
xchg
pop
arpl
mov
dec
rcl
mov
pop
data16
add
mov
adc
cwtl
call
push
xchg
cmp
cmp
cmp
leave
cmp
jb
enter
das
jns
cwtl
inc
ficoms
cwtl
xchg
mov
mov
roll
jnp
repz
xchg
cli
mov
stos
fistps
or
out
fimull
into
xor
mov
fldenv
fnsetpm(287
xchg
int3
xor
mov
cmp
nop
aaa
sub
sub
fs
dec
or
js
mov
xor
jne
inc
roll
popa
mov
daa
mov
mov
lods
ficoml
dec
lcall
inc
test
push
sub
imul
dec
add
push
out
xor
aad
push
fwait
or
fstpl
test
test
sbb
popa
xchg
lock
or
subl
xchg
outsl
jns
lcall
test
pop
and
pop
mov
leave
lret
sub
cs
imull
lret
jne
test
mov
sbb
cltd
in
xor
adc
mov
popa
sub
fdiv
lret
mov
push
pusha
mov
xchg
imulb
cmc
xlat
cmp
xchg
in
push
jg
adc
int
mov
outsb
lcall
push
sub
add
inc
pop
add
xor
fnstsw
rcrb
pushf
clc
gs
dec
xchg
in
pop
scas
cmp
jp
mov
vmovups
adc
sahf
push
adc
fbld
outsl
sbb
dec
mov
or
xchg
jne
adc
xor
or
jno
pop
push
mov
xchg
enter
pop
outsl
dec
jno
aas
cmp
ret
sub
dec
xchg
decb
cwtl
mov
jl
scas
loopne
stos
sub
scas
xor
rcl
add
push
push
daa
test
shl
jle
adc
iret
lret
and
mov
push
mov
xchg
dec
inc
xlat
cmpsl
ficoml
inc
movsl
mov
adc
loop
in
std
push
fsts
hlt
jne
and
subb
fidivl
mov
movsl
lahf
push
ja
pusha
lahf
and
sbb
pop
add
lds
adc
data16
xchg
add
arpl
pop
aad
lock
sbb
in
mov
cwtl
dec
pop
xchg
scas
fs
out
adc
pop
fcmovnu
test
xchg
sahf
fisubrl
mov
fwait
xor
add
mov
push
inc
push
dec
sub
mov
test
lods
cmp
jge
inc
int
in
push
hlt
testl
sub
loopne
inc
aas
push
cltd
stos
cli
negl
jge
fldcw
je
lcall
or
mov
push
mov
lahf
es
fcoml
dec
pop
cmp
push
add
mov
and
add
inc
and
cs
rcrb
xchg
sub
pop
xor
je
shlb
xor
push
mov
mov
sub
fsts
and
sbb
add
js
xchg
cli
scas
notl
and
add
cmp
jl
cwtl
xchg
push
mov
out
xlat
push
xor
mov
mov
pop
mov
loop
sarb
mov
mov
dec
shlb
fsubp
inc
cmpsl
popf
out
ds
or
pop
sbb
out
pop
dec
and
jb
pushf
repz
scas
jns
xlat
popf
fs
xor
sub
cmp
xor
sti
dec
xchg
sub
imul
add
xchg
int3
ret
push
movsb
out
mov
mov
dec
cmp
mov
mov
lret
mov
cmpsb
mov
inc
mov
mov
loop
sbb
cltd
imul
inc
or
in
jb
xorb
sub
lcall
ja
movd
les
ljmp
and
stos
mov
sti
xor
mov
ficompl
subl
sub
loopne
mov
push
lcall
lock
aas
mov
pusha
xor
lock
test
into
mov
mov
jnp
add
mov
int
out
push
popa
mov
mov
cs
cmp
aaa
fwait
sub
mov
out
mov
into
dec
repz
xor
mov
out
fwait
ss
or
lahf
neg
out
popa
push
inc
dec
and
or
pop
std
inc
lret
adc
xchg
mov
mov
rolb
jae
dec
subb
repnz
push
pop
cltd
xchg
mov
pop
div
ret
pop
pop
cwtl
add
cmpsl
ds
add
addb
jae
pop
std
mov
mov
cli
jp
imul
out
xor
ficoms
or
and
push
aam
aad
inc
gs
adc
std
mov
js
and
sbb
cmp
push
xor
ss
test
mov
jp
adc
inc
call
and
xchg
xor
mov
imul
push
adc
mov
adc
mov
add
pushf
cmp
add
mov
inc
inc
jae
cmp
loopne,pn
int
xchg
into
aad
cld
ret
pop
sbb
iret
pop
sub
int3
dec
mov
movsl
je
dec
pushf
sbb
test
ficoml
js
mov
hlt
dec
negl
stos
sbb
bound
cmp
add
out
dec
in
jle
stos
imul
xor
mov
xor
xor
cwtl
jb
int3
dec
mov
pusha
fcoms
popa
cltd
pop
sub
dec
sub
out
sub
adc
aad
mov
rol
sub
pop
inc
insb
cld
cld
pop
repz
in
in
add
sub
push
shlb
movsl
adc
stos
ds
mov
sub
jle
stc
sub
push
jb
sub
into
adc
popa
sub
ret
popa
pop
dec
push
jno
and
dec
call
and
in
or
mov
fwait
cwtl
pop
push
mov
xchg
rcr
insb
sbb
push
int
ss
int3
test
mov
pusha
push
inc
fnstsw
enter
loop
adc
pop
icebp
lds
xchg
stos
sbbl
push
cmpsl
pop
shlw
fisubl
jo
stos
sarl
cmp
or
adc
mov
push
mov
xor
js
jmp
jmp
dec
jno
out
push
aas
sub
insl
aam
movsb
test
shll
mov
xor
xchg
jbe
mov
push
orl
fcomps
mov
addb
pop
dec
and
mov
out
jbe
inc
jp
xchg
xchg
sbb
cmpsb
int
push
faddp
inc
push
sbb
jo
cmpsl
mov
btr
das
int3
stc
lcall
int3
cmc
mov
push
mov
pop
cwtl
add
movsb
dec
repnz
js
test
repnz
dec
cmpsl
pop
fmuls
mov
repnz
data16
les
mov
push
ror
push
incl
mov
mov
daa
les
lock
inc
fsubrl
or
push
ds
cli
cmp
dec
jnp
and
rorl
data16
mov
sub
cmp
pop
mulb
pop
ret
fsubrs
bound
aas
cmp
leave
scas
jge
push
adc
in
xchg
push
xor
mov
mov
sbb
pop
enter
mov
divb
dec
xchg
cmp
cmc
shll
les
stos
sbb
sub
add
in
sbb
push
mov
test
xchg
mov
test
fiaddl
mov
or
sbb
mov
and
fsub
lods
cmpsb
xchg
std
pop
scas
les
rolb
data16
loope
shl
mov
add
pop
cmpsb
ds
js
and
nop
out
jg
mov
dec
push
into
xchg
pop
cwtl
mov
mov
push
lods
add
adc
out
dec
ds
outsl
cmp
pop
sub
leave
mov
es
xchg
dec
pusha
xchg
in
or
add
pop
mov
jno
adc
mov
xor
pusha
push
adc
stc
hlt
sahf
test
repnz
aad
add
inc
sbb
xlat
leave
test
pop
int
divl
mov
cli
je
dec
out
cmpsb
test
scas
mov
imul
test
lea
push
xchg
cmp
inc
out
push
xor
in
push
movsl
icebp
cmp
pop
add
cmp
mov
cmp
les
sbb
sti
arpl
inc
pop
sub
lcall
push
mov
jmp
push
mov
inc
out
fcom
inc
test
mov
mulb
inc
js
xor
out
pop
sub
sbb
jmp
pop
adcb
and
lret
mov
dec
pop
out
and
popa
in
jno
je
rolb
fsts
fbld
inc
orl
rcrb
addb
pop
mov
xor
pop
sub
in
cmc
test
inc
cs
lret
cmp
in
and
xor
pop
xchg
negl
adc
jmp
adc
jno
jbe
and
mov
ss
testb
mov
divb
xor
aam
lea
xor
into
adc
lock
flds
mov
sub
leave
addr16
pop
sbb
sbb
cmpsb
cmpsb
adc
movsl
ljmp
push
jge
pop
lds
mov
xor
leave
add
mov
lock
repz
ror
push
sub
mov
je
fs
sbb
minps
mov
inc
xchg
cmpsl
and
mov
test
jmp
mov
sarb
aam
or
lock
stos
pushf
arpl
repnz
das
mov
xchg
push
push
jae
sbb
sub
fisubl
test
fisttpll
in
pop
fs
or
enter
aad
idivl
sub
sti
lret
dec
test
sub
test
push
lret
pop
push
pop
jo
lea
xchg
inc
push
xchg
pop
adc
cmp
or
fadds
push
xor
aam
mov
dec
mov
stos
mov
mov
fcoml
mov
push
sbb
xchg
pusha
icebp
lea
inc
inc
mov
movsb
icebp
aad
mov
fwait
adc
sub
xor
fcomps
daa
sub
cmp
pusha
mov
stos
aas
movsb
mov
and
sub
xchg
sbb
int
int
mov
cld
sub
cli
clc
out
and
or
mov
pop
mov
cli
sbb
lret
sbb
push
push
dec
add
rcll
or
cmpsl
fucomp
and
nop
sbb
cmpsl
ret
loop
push
outsb
mov
mov
xor
sub
jmp
or
cmp
enter
push
addb
ds
into
mov
inc
cmp
je
and
cmp
sbb
mov
push
sub
stc
mov
jo
frstor
jnp,pn
fildl
mov
rcrl
and
out
adc
loope
push
ss
lods
clc
xlat
lods
xchg
cmp
pop
gs
cmpsl
sbb
test
mov
lret
lods
les
xchg
aas
je
jne
adc
test
repz
mov
xor
dec
or
jecxz
movsl
js
adc
out
enter
push
jg
test
sbb
ljmp
cmpsb
and
inc
xchg
add
push
test
xor
pusha
mov
pop
roll
mov
push
out
fs
push
repnz
pop
or
test
cwtl
jp
ljmp
add
fstpl
idivb
addl
test
jno
inc
xchg
aad
mov
or
cmp
or
mov
rorl
or
lcall
cmp
popa
add
pop
int
je
dec
dec
mov
ret
add
arpl
cmp
push
bound
mov
mov
jle,pn
sbb
dec
sbb
shrl
push
inc
cmp
xorb
dec
cmc
jno
unpcklps
scas
push
je
mov
xchg
stc
ljmp
mov
mov
pop
sub
fdiv
iret
add
and
mov
repz
jae
pop
ss
lds
push
fistpl
jl
cmp
adc
ret
push
movsl
and
add
aad
pusha
int3
out
out
les
or
jb
adc
aam
int
sahf
pop
ret
add
xchg
cwtl
and
sub
and
imul
andl
push
mov
sar
nop
js
pop
les
xchg
fwait
lcall
add
fsubl
lea
jae
mov
test
dec
push
cmpsb
mov
pushf
push
sub
and
mov
jae,pt
fwait
pushf
rorl
repnz
or
mov
repz
push
pop
xchg
cmp
sbb
cmp
in
scas
mov
pop
pop
outsb
mov
sbb
xor
adc
paddusw
mov
xor
jae
idiv
bound
stos
dec
mov
jle
pop
loop
pop
daa
and
push
out
inc
push
xor
adc
sub
dec
sbb
mov
idivl
add
fsubl
xchg
dec
or
jle
jae
adc
in
mov
sub
xor
jmp
push
inc
test
mulb
add
jp
xchg
in
sbb
jo
scas
les
mov
xor
mov
push
mov
push
ds
rcl
lock
xchg
aas
mov
dec
jp
out
das
pop
fisubrl
adc
and
xchg
and
movsb
dec
push
fldcw
fisubs
sbb
and
scas
or
pop
gs
xchg
scas
out
xchg
cli
cmpsb
gs
negl
xchg
and
icebp
xchg
outsb
dec
push
outsb
sub
push
std
mov
stos
add
jo
iret
ljmp
mov
cmp
mov
repz
mov
pop
mov
and
fcoms
jle
xchg
shrl
fdivs
loopne
insb
outsl
push
repz
sbb
pop
adc
movsb
nop
cwtl
sti
icebp
pop
mov
je,pt
movsb
fisttpll
cli
cmpsl
iret
fs
xchg
js
mov
xchg
outsl
shll
popf
lahf
in
jno
jns
pop
dec
iret
mov
sarb
mov
das
xchg
inc
xor
mov
push
rcl
repnz
ljmp
push
dec
outsl
jp
mov
xchg
pop
out
or
push
inc
clc
add
data16
xlat
or
cmp
cmp
mov
adc
std
mov
mov
adc
sbb
bound
outsb
pop
cltd
fcmovnb
xor
movsb
in
aam
push
lcall
mov
and
les
add
in
sub
jecxz
or
shlb
mov
or
or
test
mov
cmp
xor
add
jg
aam
lret
bts
call
jne
fimuls
leave
jmp
add
mov
das
mov
icebp
pop
cmp
add
scas
cli
ljmp
or
sbb
lds
xor
aaa
push
enter
ss
cmp
push
test
stos
inc
in
stos
rclb
sbb
int3
jne
div
sbb
arpl
push
or
jle
jecxz
movsb
xchg
mov
ljmp
xchg
mov
nop
in
test
dec
popf
mov
roll
jp
xchg
sub
or
jge
pop
out
ja
mov
repz
adc
xlat
dec
jbe
cs
mov
xchg
jecxz
popf
dec
dec
cli
mov
lea
dec
jecxz
cs
lds
pop
test
sbbb
adc
popf
or
jno
adc
xlat
popf
jns
sbb
cmp
xchg
add
rclb
lret
loopne
push
nop
and
mov
js
jo
imul
jno
mov
mov
outsb
push
loop
xchg
and
add
cmpsb
sub
inc
ja
cmp
es
push
cmp
jbe
xlat
fs
les
dec
push
int
jns
adc
insb
sub
jmp
add
ss
imul
addr16
mov
or
add
add
add
or
in
es
int3
pop
aas
mov
pop
ret
mov
jp
out
test
cmp
xorl
cmp
mov
or
into
adc
add
imul
add
xchg
mov
cli
mov
lods
adc
sub
jb
adc
les
jne
push
mov
loope
mov
or
addb
test
test
mov
test
out
push
stos
pop
fsubrl
mov
push
pop
inc
jb
push
in
dec
mov
push
mov
push
xchg
inc
inc
stos
inc
pop
cmp
inc
cs
cltd
adc
int
scas
ret
cltd
pop
or
xchg
and
popa
outsl
xchg
xchg
xchg
xor
repnz
sub
sbb
pop
sahf
cmp
dec
pop
dec
adc
sti
jecxz
or
sar
jns
sub
cmp
dec
pop
mov
pop
mov
loop
ljmp
test
in
cmpsl
int3
sub
test
in
ljmp
and
aas
jge
enter
movsl
call
add
pop
imul
cmc
imul
dec
les
add
popf
shlb
and
int
mov
movw
sahf
jg
scas
push
mov
and
rcll
js
stos
aaa
and
or
mov
nop
and
leave
xor
jle
push
rorl
push
repnz
mov
divl
mov
test
out
inc
add
mov
mov
jg
loop
add
mov
rol
mov
ret
nop
lea
cltd
dec
fbld
cld
mov
cs
rolb
ljmp
cli
pop
divb
xchg
jae
in
xor
in
outsl
xor
dec
mov
mov
jl
sub
loope
jo
ret
xor
jge
mov
fstp
das
lock
and
or
js
test
xchg
cmp
dec
push
in
mov
cmpsb
xor
push
or
jp
mov
sti
mov
inc
outsb
sub
cwtl
add
mov
jno
mov
mov
jno
rolb
adc
sub
iret
in
sahf
rorb
daa
adc
stc
add
jno
cmp
mov
add
imul
mov
push
movsb
push
stos
push
pop
add
mov
testb
pop
or
push
push
mov
and
xchg
and
dec
insb
lret
cmp
push
dec
mov
xor
or
inc
dec
dec
sbb
push
jo
test
lret
dec
jmp
jns
mov
adc
pusha
push
inc
cmp
sbb
in
or
scas
jmp
flds
push
or
sar
repz
idivb
sbb
cli
les
xchg
push
scas
dec
cmp
fisttps
sahf
mov
es
insl
loopne
outsl
adc
lahf
jmp
testl
mov
or
aam
xor
xor
mov
leave
jno
shlb
andl
add
inc
repnz
add
inc
jmp
lds
xchg
and
mov
aas
push
mov
push
sbb
mov
pop
xchg
mov
sub
mov
lcall
mov
mov
ds
sub
mov
scas
mov
push
dec
addr16
lret
int3
jno
call
xorb
movsl
pop
ret
mov
fldenv
and
pop
aas
sub
in
adc
jne
loopne
push
popf
sbb
mov
xor
dec
outsl
jmp
jne
cltd
inc
iret
adc
lods
cmp
subl
in
add
enter
je
mov
fimull
sti
pusha
mov
repnz
test
icebp
lds
nop
rorb
dec
dec
out
adc
push
mov
es
adc
inc
mov
mov
scas
jnp
fdivs
shr
add
adc
xchg
inc
mov
or
pop
mov
add
xor
fnstcw
jle
sbb
pop
rorl
xchg
push
push
repnz
movsl
rclb
pop
outsl
add
cld
fcmovnu
lock
and
aas
shlb
pop
adc
sub
call
test
cltd
in
sub
add
lock
xchg
jmp
mov
pop
inc
stc
in
xchg
bound
adc
jno
hlt
int
jle
iret
sub
mov
test
std
inc
push
xlat
mov
or
push
mov
dec
xchg
pusha
and
add
sbb
dec
cmpsl
test
inc
jbe
push
sbb
xchg
loope,pt
shrl
jecxz
pop
mov
mov
out
adc
enter
sti
inc
and
notl
mov
sahf
arpl
inc
cld
pop
or
ljmp
cmp
popf
dec
lret
or
rolb
jae
fsubrs
pusha
iret
push
in
dec
lahf
ret
and
aad
push
push
mov
mov
shll
dec
outsb
push
mulb
cltd
cltd
xlat
addr16
sbb
mov
test
loope
cwtl
and
hlt
add
pop
out
pop
mov
pop
mov
pop
mov
fcomps
shr
and
sbb
ret
mov
andl
mov
xorl
aam
test
adcl
sub
cmp
mov
les
loope
shr
pop
sub
lahf
cmpsb
loopne
daa
loope
outsb
mov
cmpsb
jae
int3
hlt
add
add
int
push
cmp
inc
mov
int
inc
mov
xor
subl
jne
outsl
push
mov
jmp
fdiv
leave
inc
ja
mov
pop
mov
sub
shlb
lods
loope
push
daa
sub
negb
mov
ret
outsl
and
or
xchg
fs
lret
or
lods
mov
sub
jle
pop
test
popf
add
and
jno
pop
or
lcall
add
mov
ret
cmp
stos
insb
lcall
in
xchg
push
into
negb
loopne
add
xchg
xor
mov
cmp
fdivrs
mov
cmp
mov
popf
outsl
lods
inc
in
jecxz
inc
or
inc
mov
pushf
mov
add
jb
pusha
xchg
adc
mov
data16
sub
ja
aam
lods
cmc
lret
lods
stos
jb
cmp
andl
jae
sti
jne
sbb
hlt
pop
shrb
out
cltd
mov
js
xchg
xor
stc
popf
imul
sub
xchg
add
pop
cli
pop
fcoms
pop
and
and
fstpl
scas
lret
nop
push
into
sbb
ror
sub
or
pop
and
xchg
mov
popa
pop
test
pop
mov
xchg
shl
sahf
jmp
pop
pop
ret
mov
add
sbb
xor
jno
pop
sbbb
xor
and
push
lods
xlat
mov
popa
imul
dec
and
and
sbb
cmp
into
pop
outsl
adcb
push
or
cmp
leave
xor
pushf
pop
xchg
pop
cmpsb
push
ds
mov
sbb
insb
mulb
sbb
jns
adc
push
loopne
inc
mov
ficompl
lret
int
push
clc
lods
repnz
movsl
cmpsb
repnz
imul
fdivr
adc
xor
or
mov
call
loope
lock
mulb
popa
and
les
jae
adc
addr16
das
popa
imul
lahf
pushf
sbb
cltd
scas
rsm
popf
repnz
push
fs
repz
cmpsb
mov
inc
outsl
popa
clc
fists
jb,pt
cmp
lds
xlat
inc
loopne
pop
int3
xchg
in
xchg
imul
ret
dec
or
pop
xchg
and
jbe
mov
inc
into
in
mov
mov
push
nop
test
jnp
jo
sbb
add
rep
pop
mov
mov
sarb
inc
movsl
cld
xchg
adc
dec
mov
mov
loope
mov
repz
cmp
out
js
ret
clc
push
and
inc
cmpl
push
sub
shl
sbb
fdivr
lods
pop
dec
pop
jae
mov
sti
sbb
jp
in
mov
out
add
dec
mov
fldcw
pop
mov
mov
dec
ret
rcll
xchg
out
iret
or
hlt
stos
mov
imul
idivb
add
stc
andb
das
mov
jmp
pop
jl
rcrb
xchg
mov
and
add
mov
xchg
xor
out
scas
sbb
int3
adc
sti
cli
outsl
dec
jp
or
fs
push
fnstcw
iret
nop
aaa
xchg
repz
clc
cmp
sti
ss
cs
pop
pushf
xchg
out
push
addr16
mov
dec
shll
leave
cmp
sarl
mov
shrl
pop
sub
pop
jno
in
mov
js
fwait
out
jl
scas
or
lea
cltd
adcb
cmp
inc
out
mov
push
mov
cmp
insb
fisubrs
loopne
cmpsl
popf
dec
fwait
mov
pop
lcall
js
push
repz
adc
mov
mov
or
dec
mov
pop
loope
jecxz
mov
enter
pop
movsw
popl
pop
mov
dec
dec
lea
rcr
mov
clc
repnz
icebp
js
dec
push
or
ss
sahf
sti
insb
dec
inc
xor
popf
data16
pop
xlat
add
sbb
jne
sub
fimuls
ljmp
mov
inc
cmp
mov
in
cmpsb
ret
pop
ljmp
fcom
lea
cmp
sbb
mov
and
push
xor
push
shrl
lds
es
push
pop
sbbb
cmp
sahf
ficompl
in
mov
aam
out
lahf
cld
insb
cmp
mov
and
xor
test
ja
jecxz
add
xorl
cmp
or
lds
pushf
sbb
leave
lcall
jmp
sbb
cmp
pop
or
mov
addr16
iret
xchg
sbb
movsb
lods
dec
out
or
mov
cld
iret
pop
sbb
add
enter
push
inc
jo
add
mov
pop
dec
fsts
adc
mov
xchg
push
js
ljmp
mov
rcl
jle
push
rolb
fdivs
dec
push
cmpl
pop
jp
repnz
dec
or
popf
ret
mov
movsl
mov
mov
push
xchg
mov
ljmp
cmp
in
mov
mov
mov
pusha
mov
mov
dec
std
mov
sahf
rclb
lods
lock
test
testl
loope
sbbl
push
mov
stos
sbb
ds
enter
movsl
inc
ret
cmp
pop
es
pop
sub
sub
ret
mov
shrl
hlt
loop
inc
cmp
xor
jnp
and
cmp
mov
pushf
sarb
dec
jl
lret
lods
popf
pushf
out
pushf
dec
add
xchg
adc
jns
dec
mov
int
mov
add
cld
cltd
mov
call
lock
add
xor
xor
ret
setl
inc
push
call
pop
setg
in
sbb
lea
push
or
inc
dec
fs
or
sahf
sbb
and
push
and
inc
jb
mov
mov
inc
outsb
js
sbb
ret
mov
ficoms
mov
push
dec
cs
popa
out
cmp
mov
fsts
orl
ss
shrb
lret
mov
js
mov
or
adc
dec
adc
lret
stos
popa
cwtl
sti
sti
mov
mov
mov
push
sub
shl
add
pop
out
xor
call
xchg
sahf
pushl
adc
std
adcb
in
sbb
sub
add
inc
loope
push
sub
adc
cmpsl
xor
lods
fnsave
lret
jmp
xchg
fidivl
jb
xor
mov
dec
inc
sbbl
cmp
push
push
or
lea
xchg
jle
out
or
mov
jg
jecxz
movsb
cmp
rolb
mul
icebp
mov
mov
cmp
fs
loopne
sub
mov
dec
cmpsl
mov
ret
mov
icebp
lret
xchg
jecxz
pop
mov
pushf
inc
jne
cli
mov
dec
ja
les
mov
out
std
scas
or
in
adc
jge
loope
pop
popl
pop
mov
mov
in
sbb
push
push
iret
dec
cmp
test
popa
jge
xchg
cmp
xor
arpl
xor
pusha
push
sub
jb
mov
mov
sahf
aad
inc
dec
popf
iret
sbb
xchg
cwtl
push
cmp
sub
nop
aas
pop
jns
and
xchg
imul
stos
mov
insb
pop
adc
jno
sbb
cmp
jmp
jns
aad
fcmovbe
jnp
adc
or
popf
lds
cmp
repz
gs
sbbb
or
add
mov
sub
lret
mov
inc
push
pop
fbstp
ret
and
cs
xchg
and
fistpll
xor
or
lods
mov
push
cmp
sti
mov
arpl
clc
in
test
push
aad
and
filds
sahf
dec
es
mov
dec
gs
outsl
xor
mov
sub
addr16
movsl
push
push
sbb
mov
ret
or
or
sub
adc
inc
adc
bswap
push
or
mov
pop
test
cld
adc
aam
scas
ss
cmc
mov
icebp
dec
cmp
cwtl
push
pop
lcall
dec
push
xchg
iret
push
xchg
adc
mov
add
bound
bound
pop
out
enter
cmp
cwtl
in
add
xor
mov
add
dec
xor
sub
and
or
pop
jnp
sbb
dec
pop
stos
insl
and
jle
in
scas
mov
rorl
psrad
dec
out
mov
push
mov
jno
out
ss
out
aad
mov
xchg
add
sub
mov
mov
cmpsl
xchg
adc
add
call
int3
adc
dec
in
les
mov
pop
or
add
adc
lahf
data16
xor
pop
sbb
mov
pusha
and
lret
scas
sbb
div
ret
ja
cwtl
or
es
cmp
mov
and
outsl
scas
notl
subl
adc
cmc
out
inc
xchg
inc
add
das
pop
xor
and
test
inc
adc
mov
xor
mov
mov
popa
cltd
stos
jecxz
mov
lahf
ret
aam
jbe
xchg
jnp
sbb
popf
or
lcall
cmp
jp
adc
cwtl
cld
in
xchg
pop
sbb
push
outsl
lods
push
mov
jno
pop
pop
sbbl
cmp
imul
xlat
mov
lock
fildll
iret
cmp
test
cwtl
inc
sub
daa
dec
mov
lds
jnp
and
leave
dec
pop
xor
mull
push
pushf
lea
xor
sbb
mov
xor
cli
mov
aam
or
sub
lods
out
mov
outsb
mov
push
and
stos
adc
outsb
xchg
repnz
nop
fidivrl
mov
repz
push
out
insl
ja
pop
add
mov
mov
shll
xlat
xchg
sbb
mov
pop
sbb
repnz
leave
inc
fisttpl
mov
bound
clc
sti
mov
into
jle
icebp
xchg
pop
xchg
inc
ljmp
je
shrb
aad
pop
adc
pop
mov
add
add
xor
mov
or
fsts
jbe
stos
jmp
xor
les
addr16
inc
pop
jno
push
pop
mov
ds
and
js
movsb
lcall
repz
inc
imul
cmp
data16
imul
stos
jae
int
js
das
push
jne
pop
shl
or
or
xchg
xchg
xor
dec
sub
and
addl
stos
mov
addb
mov
movsl
stc
aas
mov
movsb
pusha
push
mov
inc
arpl
pop
and
inc
xor
add
imul
cwtl
aas
mov
orl
push
sub
adcb
addr16
ljmp
repnz
test
fs
pop
incb
scas
divb
xchg
inc
lret
mov
push
sub
push
mov
out
movsb
mov
ror
jmp
pop
inc
in
ret
in
fcmovnbe
test
cld
call
std
xlat
xor
cli
cld
leave
pop
pushf
cmovs
in
add
add
sahf
ja
subb
bound
pop
push
xchg
ds
mov
js
mov
jg
sbb
cld
nop
sti
mov
cmp
sahf
insb
in
xchg
lods
sbb
fsubrs
ss
sub
xor
loop
cmp
lods
fmull
lcall
mov
xchg
mov
xor
mov
dec
push
fists
push
mov
and
std
sbb
mov
mov
lcall
lods
pop
clc
jae
int
int3
int
imul
add
mov
movsl
sti
leave
mov
adc
repnz
dec
aam
dec
mov
test
add
inc
add
fildl
xchg
enter
adc
jmp
jbe
aas
fcomi
add
jb
inc
cmp
push
in
and
dec
push
mov
dec
dec
filds
jle
xchg
or
repz
aad
mov
pop
shl
adc
aaa
add
sub
movsb
mov
and
sbb
es
pop
mov
rcll
inc
inc
mov
jo
or
jecxz
xchg
cwtl
pop
shrl
in
sbb
sub
cmpsb
aaa
in
jmp
mov
outsl
sbb
sbb
xchg
and
lcall
movsl
mov
mov
cli
imul
imul
mov
xchg
sti
lds
hlt
jp
ds
or
pop
sub
pusha
popa
subl
mov
ja
rcl
pop
aad
ljmp
inc
es
jae
push
rorb
and
mov
push
mov
cltd
push
cmc
and
pop
mov
aad
xchg
jne
cmpsb
rcrb
hlt
in
scas
in
in
mov
cmc
push
scas
hlt
cmp
lea
push
std
pop
sahf
int3
add
xor
push
out
add
loopne
mov
pop
sti
cltd
push
xchg
dec
inc
shrb
or
inc
gs
adc
sbb
out
push
push
pop
popa
xor
pop
xchg
lods
inc
and
call
mov
pop
clc
pop
loopne
inc
pop
ror
xchg
outsl
popf
das
push
sub
dec
pop
test
push
loop
repnz
pop
add
inc
ja
pop
push
ret
jg
lcall
cmp
fisttpl
jecxz
cmpsb
movb
bound
mov
roll
and
pop
shlb
fwait
lea
adc
fildll
inc
lds
test
nop
push
test
fst
scas
aad
cltd
mov
adc
xchg
mov
jo
xchg
and
dec
outsb
ja
adc
stos
ret
sti
pop
dec
inc
xchg
sbb
sbb
scas
fstps
xlat
lds
pop
fimuls
cmpsb
jp
xor
loope
mov
push
xchg
push
inc
fisubrl
sar
jbe
pop
mov
lret
test
outsb
cwtl
leave
xor
dec
xor
aam
mov
sti
pop
mov
ljmp
or
mov
das
mov
orl
or
xchg
xchg
add
test
jmp
popf
jl
add
in
push
cltd
movsb
cmpsb
sbb
push
icebp
pop
shll
pop
clc
aas
fld
leave
and
dec
inc
sbb
xor
stos
jae
jae
loopne
cmc
sub
in
fwait
adc
sbb
and
mov
xchg
ljmp
jnp
mov
sub
hlt
int
test
outsl
push
ret
test
push
jo
pop
jge
loopne
movsl
movsl
add
add
add
sahf
push
dec
add
inc
adc
in
push
jmp
xchg
sub
and
pop
xor
ja
dec
push
fmuls
jb
sbb
lods
push
arpl
sbb
icebp
shlb
in
sti
or
stc
lcall
shll
jmp
pop
movsb
inc
movsl
stos
inc
jne
mov
int3
add
mov
js
inc
bound
in
test
push
jnp
insl
inc
pop
mov
mov
loope
inc
pop
rorb
jno
push
sahf
dec
movsl
cmp
mov
adc
inc
lds
das
nop
inc
lods
mov
jnp
mov
cmp
dec
in
mov
inc
and
dec
cmp
xor
pop
push
gs
scas
push
xor
sbb
mov
and
loop
adc
lahf
cmp
add
je
fdivs
in
enter
inc
fxch
mov
data16
sahf
and
cmp
add
das
iret
and
arpl
mov
cmp
lea
fldlg2
dec
push
test
out
cs
aad
jae
sti
mov
push
fisubrs
cld
add
jns
mov
xchg
fsubl
leave
enter
or
push
clc
add
mov
and
mov
mov
adc
adc
outsb
movsl
jmp
sbb
fstps
mov
outsb
pop
or
sarb
lds
inc
neg
fldl
aam
or
push
xor
and
dec
in
jmp
mov
pushf
lret
add
icebp
negl
fidivrs
ja
lds
fadds
xchg
ret
xchg
mov
rorl
xchg
enter
lret
mov
fisubrs
xchg
fwait
push
mov
stos
lret
sbb
rcrb
fisttps
and
imull
push
push
inc
in
fists
dec
loopne
das
mov
inc
sarb
out
stc
test
scas
dec
ret
inc
popf
mov
test
shlb
jb
orl
imul
jns
outsb
push
insl
leave
lret
jne
mov
orb
stc
pusha
xchg
pusha
jo
pop
xchg
scas
push
mov
xchg
cltd
sub
bound
push
push
push
das
in
and
jo
mov
push
push
mov
enter
shrb
adc
mov
xchg
fisubl
add
bound
add
add
mov
in
pop
sbb
lret
cmp
lods
stos
xor
sbb
mov
imul
jge
adc
enter
jae
jbe
mov
test
fldl
dec
mov
sub
popl
scas
cs
sahf
lods
rolb
xchg
lea
sub
fistps
jno
push
cmpsl
and
aam
int3
cmc
lret
push
gs
enter
mov
push
in
adc
daa
fdivs
jle
pop
mov
inc
daa
sub
iret
mov
ret
clc
and
and
or
xor
lahf
push
jg
mov
mull
inc
leave
inc
pop
out
xchg
or
sti
ss
rolb
push
movsl
xchg
rorb
mov
out
std
push
ret
jne
in
scas
mov
lock
adc
cmp
sahf
bound
pop
sub
ret
iret
call
sarb
aaa
and
in
sbbl
hlt
inc
call
repnz
movsb
insb
mov
xchg
sbb
sbb
xchg
mov
cmp
add
movsl
inc
js
out
imul
fstp
in
jge
insl
inc
testl
mov
xchg
call
daa
sub
adc
gs
cmp
sbb
fcompl
mov
adc
cmp
sub
push
mov
dec
cmc
adc
mov
in
mov
or
mov
scas
pop
dec
ret
sbb
inc
jnp
imul
mov
scas
int
scas
jbe
iret
jne
xchg
lret
or
jle
stos
xchg
lods
insb
negl
jno
xlat
ljmp
add
fcmovu
mov
pop
xchg
das
xchg
imul
sti
fnsave
sbbb
adcb
ret
out
popf
sub
jns
mov
inc
sbb
inc
in
jns
xchg
mov
call
cmp
lahf
mov
cmc
mov
data16
pop
dec
into
sbb
xchg
sbb
jns
cmp
in
sahf
lcall
enter
push
sub
add
aas
lods
cmp
jo
pop
scas
jae
lods
or
aad
rclb
stos
pop
es
jg
jge
les
lock
mov
jl
pop
popa
and
jae
stos
js
shrb
mov
or
test
sahf
dec
and
stos
cmc
addl
sbb
xor
xcrypt-ofb
cmpsl
out
imul
mov
or
jge
push
xchg
sti
fstpt
aaa
sub
mov
push
mov
cs
mov
push
dec
jge
adc
inc
adc
inc
xchg
dec
cvtps2pi
push
inc
std
inc
mov
and
loop
add
mov
mov
and
scas
jae
jb
cwtl
inc
out
and
mov
daa
insl
shll
jnp
stos
dec
mov
sahf
xchg
pop
add
mov
loop
ror
mov
cmp
cmp
xchg
jne
loop
xchg
mov
rcrb
xchg
aad
mov
or
mov
in
fsts
rcr
xchg
push
cmpsb
int
loopne
out
add
and
cmp
xchg
jecxz
pop
inc
imul
pop
xchg
push
push
rolb
pop
mov
adc
sbb
inc
mov
sbb
loop
fdivs
jne
test
test
jle
mov
pop
in
js
jecxz
out
xor
insl
mov
stos
push
push
jnp
mov
aam
cwtl
test
shlb
mov
dec
mov
inc
mov
or
dec
aam
rcr
push
test
test
xchg
dec
sahf
shlb
xchg
pop
sub
xchg
aas
pop
in
adc
fs
stc
enter
push
in
mov
pop
push
xor
push
nop
fwait
clc
dec
cwtl
stos
in
hlt
or
shlb
push
mov
sti
mov
or
scas
notb
loopne
jmp
dec
movsb
movsl
add
dec
cmpsb
loop
outsl
push
xor
sbb
mov
fnstsw
lret
test
movsl
sub
rolb
sub
xchg
int3
scas
pop
lds
aad
cmpsb
mov
xor
in
jnp
xor
cmp
test
movsl
add
mov
sahf
mov
sarl
stc
or
test
pusha
pop
aad
hlt
xchg
mov
jmp
mov
pop
push
sbb
stos
ljmp
aad
or
daa
sbb
std
fistps
pop
jne
xchg
xor
xor
xchg
cwtl
pop
inc
or
sti
mov
push
lcall
hlt
pop
add
inc
pop
add
outsl
jbe
test
push
in
pop
dec
sub
cmp
jl
jl
mov
push
sub
es
pop
hlt
stc
or
pop
jmp
dec
out
xchg
fsubrp
mov
aam
insl
xor
push
out
xor
inc
cmp
jno
dec
mov
rorb
jg
mov
stos
int
sub
aad
mov
pop
mov
mov
push
xor
fists
fsub
popa
sarb
out
and
rorl
out
repnz
repnz
mov
js
mov
ja
mov
add
jne
and
push
js
jnp
jmp
pop
loope
in
adc
das
or
cld
jb
push
or
sarl
insl
pop
xchg
dec
out
xchg
jnp
xchg
pop
mov
cli
xor
mov
ljmp
test
jle
cli
mov
jl
jg
lahf
cwtl
adc
es
add
ror
dec
add
xchg
dec
lret
cmpsl
pop
iret
xor
out
mov
mov
in
jmp
mov
sub
sahf
into
flds
xlat
pop
ljmp
and
cmc
or
mov
or
sub
dec
push
sbbb
movsl
pop
mov
loopne
bound
add
lahf
clc
xchg
jae
leave
sub
dec
push
mov
xchg
push
jmp
sub
fisttpl
xor
lcall
nop
sub
sbb
hlt
loopne
xchg
xor
loope
jnp
fsubs
or
movsl
and
push
cmp
cld
rorl
mov
xor
mov
mov
jge
pop
cmp
mov
test
xor
sbb
movsb
sub
dec
add
xchg
clc
ret
add
and
test
scas
mov
les
mov
in
dec
cmp
jns
inc
adc
roll
fwait
outsl
pop
push
jmp
xchg
enter
mov
dec
jo
fwait
and
loop
dec
clc
pop
inc
adcb
js
push
aas
push
out
push
add
adc
daa
scas
and
aas
pop
adc
adc
imul
cmp
cmpsl
inc
mov
and
fisubl
cld
push
xor
iret
ss
jle
testl
loope
sbb
jmp
or
jb
inc
add
clc
push
mov
pusha
lea
and
mov
xchg
ret
nop
cltd
pop
sub
push
cwtl
dec
dec
jb
xchg
mov
stos
punpckhdq
loop
jns
mov
clc
repz
outsl
hlt
xchg
xchg
or
jno
lods
and
outsb
loopne
dec
pop
sbb
mov
fdivrs
dec
mov
notl
gs
inc
shlb
repz
cmp
jne
repz
xor
test
loop
or
dec
xchg
mov
pop
adc
xchg
mov
jae
inc
roll
jnp
mov
sbb
int3
std
jmp
test
adc
das
xchg
cmp
jecxz
xchg
jle
or
scas
dec
stos
mov
cs
pop
mov
js
out
or
pop
sub
or
mov
adc
lret
jno
add
xor
jg
pop
add
cmp
mov
mov
iret
push
popa
scas
in
and
stos
ret
mov
and
adc
mov
mov
decb
jecxz
mov
jge
mov
cmp
test
jle
inc
lcall
xor
sbb
or
jne
dec
popf
lcall
ja
orb
popf
das
testb
orl
xchg
pop
in
mov
pop
pushf
sub
push
mov
adc
ficomps
and
sub
mov
cmp
and
pop
sub
push
fldt
icebp
jle
hlt
cld
mov
mov
cld
fsub
inc
stc
mov
pop
push
push
mov
cli
sar
popa
cld
or
sbb
popa
and
loop
dec
aad
shrl
mov
mov
imul
xor
pop
add
sbb
jmp
sar
scas
stc
and
fimuls
insl
adc
orb
dec
mov
mov
iret
cld
andb
stos
dec
inc
xchg
aad
js
lods
loop
negl
inc
mov
mov
xor
pusha
in
cli
rol
cli
cli
and
adc
in
out
lahf
jmp
push
ret
inc
es
test
fisttpll
int
enter
das
sbb
popf
mov
add
arpl
stos
pushl
pop
dec
xchg
jne
gs
icebp
into
cmp
aam
xchg
icebp
mov
sub
mov
in
push
pop
into
iret
pop
mov
mov
insb
sbb
xor
mov
insl
mov
fwait
sub
xor
sbb
cmp
mov
jnp
pop
cli
aam
adc
movsl
repnz
call
dec
pop
xchg
loopne
mov
jae
dec
dec
mov
sub
mov
ss
in
loop
dec
push
push
sti
ffreep
imul
xchg
aaa
mov
mov
jae
addr16
insb
cli
add
sub
nop
lcall
cmp
js
cmp
pop
xchg
scas
cmc
cmpsl
fsubs
dec
icebp
xchg
imul
and
jne
and
sub
mov
shr
js
push
or
out
cwtl
mov
push
popf
inc
dec
jle
adc
fwait
mov
lcall
sarl
inc
xchg
insb
imul
jle
xor
sub
mov
mov
adc
cmp
fisttps
in
stc
and
pop
pop
pop
loopne
add
and
push
mov
hlt
ss
inc
in
ss
or
xchg
jo
mov
add
out
aam
jp
cli
orl
dec
loope
imul
mov
das
jb
jle
frstor
js
adc
ds
pop
movsl
dec
push
dec
mov
shrb
and
jo
pop
movsl
fadds
mov
fadds
jge
lock
vpaddsw
and
and
pop
sbb
mov
or
pop
sub
js
test
shlb
std
pop
jmp
adc
mov
xchg
push
or
and
inc
cltd
cmp
mov
lea
push
add
das
dec
data16
arpl
and
fsubr
mov
pop
out
int
daa
orl
cld
fisubl
lds
in
push
jl
mov
jmp
jo
push
or
mov
mov
adc
arpl
push
out
dec
push
pop
sub
shll
pop
es
out
dec
out
xchg
insl
dec
rcll
xchg
xorb
mov
rcrl
cmpb
lods
push
fnstcw
push
fildll
icebp
arpl
rcrb
lret
mov
lret
mov
aad
int3
imul
mov
daa
lods
mov
mov
enter
cs
sub
movsb
bound
imul
sahf
xchg
mov
xor
hlt
movsb
loopne
aas
in
push
fiadds
jp
sbb
fstps
rclb
mov
insl
mov
push
push
inc
out
lcall
fwait
je
insb
imull
nop
scas
and
mov
dec
mov
daa
pop
xchg
xor
and
xchg
adc
dec
lods
leave
mov
push
outsl
pop
roll
xchg
test
add
push
cmp
push
leave
test
push
sbb
mov
loopne
push
xchg
dec
mov
push
sbbb
sbb
cwtl
aas
lret
sbb
dec
adc
adc
aaa
mov
push
pusha
shlb
add
xor
jecxz
cmpsb
data16
mov
jns
lods
cmp
in
xor
ffree
or
mov
xor
pusha
fwait
scas
es
adc
ss
xchg
jnp
cmpl
mov
or
cmp
movsb
inc
or
inc
mov
xchg
scas
mov
add
cmp
bound
dec
pushf
xor
push
jbe
out
test
mov
adc
add
scas
inc
add
orl
push
leave
dec
outsb
fxch
sub
inc
sbb
bound
fs
cmp
jge
std
jg
orl
or
push
xor
jmp
pop
cmp
mov
in
push
sti
pop
std
andb
addr16
sbbb
jmp
sbb
xlat
inc
rcll
cmp
or
out
mov
leave
dec
inc
or
in
in
pop
test
dec
in
fdivl
insb
ret
andb
adc
or
pop
aas
iret
cmp
jae,pn
int
and
loope
out
sti
and
jecxz
inc
adc
pop
mov
lcall
leave
xor
das
lret
aad
mov
sub
xor
adc
int
adc
jno
xchg
push
icebp
push
movsl
rclb
loope
jge
xchg
or
repnz
insb
ss
cmp
pusha
lret
pushf
pop
mov
insb
test
pop
nop
cmp
fiaddl
jae
clc
clc
push
mov
fldln2
shrb
cs
mov
push
daa
int3
jne
cmp
sbb
push
mov
mov
pop
push
mov
gs
sahf
pop
adc
imul
ret
out
push
hlt
dec
daa
rcl
lret
pushf
inc
mov
pop
fdivrs
aaa
imul
in
push
je
dec
cmp
push
jb
pop
push
mov
icebp
add
add
dec
mov
loop
mov
rcl
pop
dec
jl
sahf
and
xor
xchg
inc
cwtl
xchg
sbb
sti
xchg
xor
xor
cmp
loop
adc
int
and
out
add
xchg
or
mov
mov
stos
pop
fs
or
dec
orl
push
addb
cwtl
mov
mov
push
jae
bnd
sbb
push
push
push
popa
sbb
sub
jge
popf
add
sub
in
cmp
out
pop
aam
lea
scas
xor
es
inc
outsl
push
imull
or
es
jl
test
popa
jg
lahf
pop
push
fldt
sub
xchg
imul
int
jns
xchg
push
sub
xchg
push
xchg
vmovq
ret
push
push
lcall
inc
repnz
ret
ja
in
sub
shl
jnp
cmpsl
into
mov
mov
jecxz
push
jbe
out
inc
pop
fincstp
rcr
xchg
call
aas
mov
out
das
test
fimuls
xchg
scas
push
ds
in
ljmp
push
mov
into
hlt
push
jmp
sarb
iret
dec
push
popa
inc
outsb
imul
insb
cld
call
in
cmp
inc
jle
and
push
xchg
scas
inc
bound
scas
pop
mov
jb
cmpsl
add
cmp
adc
pop
lds
push
jae
mov
adc
outsl
mov
xor
lds
dec
adc
int3
movsl
sti
xchg
cwtl
outsb
test
lds
xchg
pusha
push
or
mov
out
pop
fwait
adc
xchg
and
mov
xor
mov
add
push
stc
out
fs
stos
mov
aad
pop
inc
fisttpl
iret
pop
fildl
in
pop
sub
sti
xchg
negl
inc
nop
sub
mov
mov
rdtsc
mov
ss
mov
lock
nop
and
mov
sub
stos
iret
inc
shl
add
test
fptan
pop
test
or
testb
mov
xchg
mov
dec
push
lret
pusha
je
lcall
outsb
aam
pop
or
in
mov
xchg
or
push
inc
ds
loope
sub
lret
jecxz
pop
sti
ret
xor
sbb
adc
push
sub
dec
adc
push
into
addl
pop
pop
fildl
dec
fcmovu
inc
out
insb
dec
dec
inc
loop,pt
fwait
cltd
jecxz
pop
push
jl
sub
push
jno
cmpsl
xorl
fnstenv
lods
xchg
incb
pop
cmpsb
mov
cmpsl
int
stos
and
jge
sub
adc
stos
aad
adc
sub
orl
lret
lods
jno
loop
xor
call
cmp
dec
dec
mov
and
aad
sub
test
push
out
nop
sbb
lret
scas
mov
cmc
mov
or
pop
jg
clc
ljmp
sbb
adcb
int
and
out
das
dec
popa
xchg
mov
push
push
mov
insb
jnp
mov
or
pop
jmp
into
movl
jb
xchg
or
gs
cld
push
xchg
xor
xor
bound
jbe
inc
in
or
jae
and
shrb
jne
test
test
push
ljmp
push
std
or
jp
xchg
lcall
and
push
xor
out
shrl
push
mov
int
pop
ror
sahf
stc
jle
pop
loope
pusha
sbb
stos
mov
ret
loop
nop
mov
in
mov
fadd
lea
jo
mov
test
sbb
push
lds
std
lret
jb
js
jg
mov
movsb
hlt
sbb
daa
xchg
ss
icebp
pop
test
data16
out
ljmp
in
inc
stc
pop
int3
imul
outsl
inc
mov
inc
cmc
mov
int3
ljmp
pop
mov
sbb
add
or
mov
test
mov
test
lods
jmp
sahf
inc
fwait
testb
sub
test
fstpt
add
ljmp
dec
lock
pop
aaa
fmuls
mov
icebp
enter
adc
push
xor
sbb
mov
cli
mov
jmp
jmp
xchg
mov
stos
push
jp
cmc
test
leave
int3
and
push
fcmovne
cmp
rcll
xor
xchg
pop
mov
cmp
je
adc
lret
inc
stos
icebp
add
adc
les
and
jne
mov
mov
pushf
mov
pop
cmp
or
js
mov
xchg
xchg
lds
inc
test
shlb
roll
cld
xor
adc
xor
lea
jns
jp
ret
rolb
mov
jp
int
mov
out
popa
rolb
es
mov
cmp
jns
ss
loopne
jnp
imul
or
roll
iret
pop
push
pop
mov
push
xchg
and
cwtl
ret
mov
insb
in
insl
andb
ror
dec
and
daa
and
mov
jns
sbb
adc
arpl
in
icebp
lods
push
test
fcompl
call
pusha
lahf
add
cltd
es
addr16
mov
or
mov
pop
adc
imul
add
rol
cltd
or
push
pop
stos
xor
xorl
add
push
sbb
mov
mov
adc
xor
cmpsl
lss
mov
inc
jne
xchg
data16
adc
jbe
or
dec
int3
mov
andb
xor
pop
std
movsb
jl
and
add
jne
shll
pop
sbb
mov
pop
xchg
xchg
pop
adc
adcl
sub
movsb
imul
pushf
xchg
jae
xorl
insl
add
sbb
mov
xchg
stc
cmpl
arpl
pushf
mov
and
pop
mov
sbb
test
imul
das
sub
bound
stc
jne
sub
fdiv
dec
mov
das
pop
inc
xor
inc
lods
jne
cld
stos
mov
mov
adc
int3
jbe
pop
test
fcoml
mov
leave
dec
and
xchg
push
adc
lcall
shll
sub
xchg
adc
fmuls
cmp
cmp
jle
lahf
enter
xchg
negb
je
scas
mov
pusha
mov
popf
dec
icebp
outsl
push
mov
add
cmp
das
adc
xlat
xor
fldl
jmp
dec
mov
sbb
mov
jmp
mov
pop
pop
push
leave
scas
fsubrl
cld
jne,pt
mov
mov
es
outsl
push
addr16
fs
jae
jp
aam
sub
pop
mov
adc
sub
add
sub
leave
loop
cmp
fdiv
mov
mov
cmc
and
sti
xchg
subl
in
out
movsb
call
xor
mov
mov
jl
sub
pop
addr16
pop
sbb
gs
and
sbb
pop
lret
mov
lods
nop
add
mov
dec
xorl
mov
ret
call
scas
jo
adc
aas
mov
movsb
xor
jg
jmp
in
sbb
out
lea
pop
ss
pop
push
or
mov
push
xchg
sub
xlat
add
mov
adc
push
sar
mov
fisttpll
jecxz
movsb
cmpsb
mov
xchg
sub
inc
push
es
fldenv
xchg
xor
add
insl
inc
scas
ljmp
jmp
mov
push
cmp
adc
bnd
shlb
stos
xchg
fstp
in
lret
mov
daa
mov
mov
lcall
sub
sub
sub
pop
fimuls
bnd
out
pop
jne
cmp
inc
mov
loope
testb
add
popf
rorb
lea
add
xor
sub
jmp
rdtsc
adc
insb
fmul
inc
push
cmp
or
xchg
scas
and
sti
insb
js
pop
das
xor
xor
das
sub
fucom
cmpsl
mov
jl
add
ss
in
mov
mov
or
mov
inc
call
pusha
mov
xor
repz
test
mov
in
pop
stos
addr16
cli
insl
or
sub
xor
lds
pop
jb
ret
and
int
jg
jae
mulb
ret
push
mov
rorb
lds
pop
pushf
push
lahf
xchg
adc
loope
pop
jmp
sti
outsl
les
adc
sbb
adc
adc
js
xlat
xor
leave
out
mov
pop
xchg
sub
push
add
fucomip
mov
call
mov
and
aad
inc
dec
mov
psubw
xlat
aaa
rcpps
push
icebp
sbb
push
pusha
aaa
sub
mov
shlb
jno
incl
sbb
ss
cmp
fists
cltd
rorl
and
test
cmpsl
adc
mov
sbb
mov
into
cmpsb
les
sahf
pop
movsl
inc
xor
test
and
or
sub
push
or
lret
or
gs
fucompp
push
rcrb
and
sahf
in
fs
pop
cld
add
aad
insl
out
dec
fbld
outsl
test
sbb
xchg
out
or
mov
rcrb
jle
int
and
push
push
int3
mov
rorb
inc
in
mov
dec
insl
sbb
outsl
sbb
ret
xchg
mov
dec
shlb
pop
in
pop
dec
sbb
lcall
jnp
jbe
mov
in
or
cmp
xchg
mov
cmp
loope
and
fcoml
jle
jne
xchg
std
out
pop
inc
or
add
shll
jmp
jp
or
inc
inc
sbb
jae
push
push
pop
arpl
sahf
pop
mov
pop
xchg
push
push
push
pop
dec
outsl
shl
push
ss
mov
popa
adc
in
jle
jbe
or
imul
xchg
and
adc
inc
orl
addl
pop
daa
pop
dec
jo
int3
mov
and
mov
frstor
mov
lret
rcrb
ss
sarb
lds
popf
arpl
roll
mov
fmull
inc
mov
inc
mov
dec
dec
mov
divl
inc
stos
icebp
fnsave
jl
cmp
mov
ljmp
jg
fs
call
int3
xor
dec
push
lcall
ljmp
sbb
out
ret
jae
roll
sub
mov
mov
xchg
mov
or
imul
xchg
sub
dec
mov
mov
mov
in
shlb
cmp
pop
into
into
ret
pop
jns
push
xchg
sbb
mov
in
pop
jo
fldenv
int
push
xor
lea
push
loop
out
call
arpl
lods
loop
scas
push
not
mov
dec
dec
lods
inc
inc
pop
testl
adc
fstps
sti
js
loop
jl
sub
mov
jmp
in
popf
sahf
loop
cmp
nop
repnz
rol
lock
or
nop
xor
mov
pop
lret
mov
icebp
mov
adc
push
es
sbb
ficoml
mov
and
arpl
jnp
leave
fwait
mov
test
divl
pop
jb
mov
jmp
sbbb
cmc
cmp
push
pop
fstps
jmp
sbb
test
leave
xchg
fistpl
pop
movsl
int3
dec
std
pop
cmpsb
mov
cs
repnz
adc
stos
inc
mov
mov
sub
inc
int
nop
lea
adc
mov
out
or
cmp
cmp
dec
jge
stc
xchg
mov
je
out
or
stos
stos
inc
das
mov
xchg
lds
test
mov
shlb
out
ja
gs
push
cmp
or
sbb
cli
add
and
sbb
push
mov
pop
push
sub
sahf
inc
cwtl
sti
iret
pop
rclb
lea
test
adcl
cmp
pop
daa
loopne
and
add
push
push
add
js
mov
xor
repnz
test
popf
pop
jo
xor
xchg
or
fdivrs
jecxz
fdivp
mov
jecxz
jne
push
ja
fld
jae
xchg
fnstsw
mov
or
push
jno
jge
xchg
aam
enter
repz
xor
pop
mov
dec
pop
push
lods
pop
scas
or
dec
mov
cmpb
fldcw
fwait
mov
imul
add
leave
add
test
mov
fwait
enter
and
mov
mov
lahf
pop
jae
xorl
pop
dec
jnp
sub
sbbb
cmpsl
rolb
xchg
out
xchg
jle
cmp
or
dec
loop
add
sub
lcall
mull
sub
push
xchg
jge
adc
sbb
ret
xor
lret
jl
push
and
mov
fcmovnb
push
push
jne
and
mov
sbb
jno
outsl
jg
je
cld
nop
xchg
adc
arpl
sbb
jle
xor
mov
into
jo
shrl
in
fnstsw
add
jp
xchg
cwtl
dec
cmp
sbbl
int
sbb
mov
imul
adc
int
imul
xor
fstpt
sub
mov
inc
or
jb
sbb
jmp
fs
and
jns
lods
imul
mov
leave
iret
mov
mov
xchg
cmpsb
xchg
dec
pusha
fwait
adc
push
into
push
call
test
lods
dec
xlat
xor
mov
fnstsw
lods
orl
rcr
mov
pop
in
into
xchg
ret
jle
out
mov
mov
push
mov
jns
push
outsl
lds
pop
pop
gs
out
cmp
cmc
mov
mov
mov
adc
cmp
test
movsb
jbe
jns
xchg
pop
or
insb
fcmovbe
es
add
dec
pop
push
sub
or
lcall
repz
mov
xchg
mov
cld
pop
and
call
dec
sbb
flds
lret
sub
push
mull
xchg
scas
into
repnz
mov
xor
sbb
gs
push
test
out
daa
popa
xchg
cmpb
sahf
jmp
fdiv
sarl
loope
add
cmpsl
outsl
add
nop
sbb
jnp
adc
jl
jecxz
sub
inc
cmc
adc
je
loopne
xor
push
lods
inc
std
mov
shlb
rcll
inc
inc
sbb
shrb
fidivs
xor
cmp
xor
sbb
mov
inc
scas
ret
sbb
rcll
inc
mov
imul
sub
inc
adcl
lea
mov
add
imul
push
mov
push
ret
pop
das
and
jg
lea
mov
sub
inc
clc
cmp
jae
stc
or
push
movsl
dec
out
and
xchg
jecxz
and
push
lcall
out
sub
movsb
enter
hlt
in
push
xchg
mov
pusha
mov
scas
cmpsb
sbb
sub
jno
xor
ror
aas
call
and
into
pop
fsubrl
fidivs
mov
pop
cld
movsb
push
xchg
incl
push
pop
add
leave
adc
pop
cmp
sbb
lock
hlt
add
mov
cmp
dec
lcall
dec
push
dec
mov
lret
mov
popa
jmp
nop
ret
test
ss
cmp
dec
jp
test
repz
shrl
les
in
inc
lock
pop
adc
lea
nop
leave
push
test
rorb
mov
adc
insb
dec
pop
je
or
test
add
adc
clc
out
pop
or
orb
jecxz
mov
arpl
scas
loopne
fisttpll
mov
sbb
lahf
sahf
lock
and
dec
inc
dec
and
out
xchg
sub
add
sbb
int3
xchg
or
mov
nop
int3
je
xchg
and
sub
imul
lcall
and
xor
not
cli
std
jecxz
icebp
push
aaa
add
cltd
pop
loop
xor
lcall
dec
cwtl
and
pop
jbe
sub
ds
out
dec
mov
enter
pushf
dec
das
or
cmp
push
pusha
inc
in
mov
addr16
sbb
push
sub
outsb
sub
out
fnstsw
pop
jno
ficoml
subb
and
cmp
call
inc
psubsw
aad
into
test
pop
push
cmp
xchg
add
or
xor
mov
jle
push
push
and
xor
sbb
fistl
repnz
sub
mov
sbbl
iret
push
xor
pop
xchg
arpl
push
mov
xchg
call
sub
mov
dec
or
dec
test
in
jmp
ret
loopne
sub
mov
cmp
adc
mov
stos
lea
sbb
add
or
leave
mov
ret
jg
js
dec
mov
incb
shr
xchg
repnz
adc
adc
cli
outsb
inc
ret
mov
xchg
push
nop
out
sub
push
sbb
fwait
pop
dec
sub
mov
push
sub
out
pop
xchg
int
aad
iret
enter
movups
lock
and
pop
arpl
or
add
imul
sbb
repz
adc
fsubrs
jp
mov
and
inc
mov
mov
inc
sub
cmpsl
xchg
bnd
sbb
mov
call
push
jecxz
inc
insl
dec
jne
sub
adc
mov
pop
outsl
and
xor
push
stc
xor
dec
jp
xchg
push
mov
dec
out
out
mov
jno
xor
ja
out
push
push
bound
out
inc
jno
sub
dec
or
inc
js
mov
shlb
stos
jecxz
sbb
pop
decb
ret
jmp
lock
in
popf
movsb
enter
clc
push
ljmp
mov
jne
shrb
cmp
mov
add
and
ss
fwait
lock
popf
fsubs
in
imull
inc
add
mov
sahf
repnz
mov
sub
ret
lods
stos
or
xor
add
cmp
cmc
push
dec
cmpsl
jno
pop
jnp
in
inc
scas
inc
mov
gs
adc
pop
ret
orb
imul
insb
sar
add
cmpsl
cmc
dec
fidivs
add
test
data16
pusha
push
push
int3
add
mov
inc
jge
fists
pop
lret
imul
cmp
mov
push
sub
pop
lahf
mov
iret
sbb
out
aaa
cmpsl
dec
xor
xor
xchg
lret
jae
mov
cwtl
shr
nop
jecxz
popf
lods
pop
sbb
cmp
add
cli
xchg
push
jae
jnp
insb
cltd
mov
inc
xor
or
iret
jno
stos
imul
jne
jmp
shlb
xchg
pop
sahf
icebp
movsb
mov
adc
clts
adc
xor
cmc
adc
repz
mov
cmp
push
inc
iret
ret
bound
repnz
popf
adc
mov
sub
clc
adc
mov
xor
push
daa
mov
and
mov
les
push
mov
xor
mov
add
sbb
das
sbb
das
and
and
and
and
mov
mov
mov
pop
inc
inc
sar
push
movsl
inc
push
adc
data16
or
jp
outsl
sub
mulb
cli
cld
pop
mov
nop
repz
ficoml
fs
aaa
mov
or
cmpsb
arpl
mov
push
xor
adc
adc
mov
mov
andb
cs
jo
mov
es
mov
les
xor
sbb
jbe
cmp
fcmovb
cmp
fidivrl
loope
xor
iret
jae
sub
or
shll
add
out
xor
mov
icebp
xchg
mov
fs
inc
xchg
dec
sbb
xor
lret
cld
pop
int
pop
enter
xor
insl
add
mov
and
in
xchg
mov
lea
mov
repz
push
xchg
jns
sub
into
lret
sbb
adc
sbb
es
inc
std
cltd
ja
sbbl
decb
scas
sbb
nop
xchg
cwtl
lret
jle
push
mov
mov
mov
xor
xchg
push
jne
repz
movsl
fdiv
jns
stos
xor
cmpsb
xlat
pop
scas
push
cmp
repnz
mov
sub
and
and
pop
dec
test
movsl
les
fstpt
and
lock
icebp
or
dec
out
xor
stos
popa
xchg
pop
or
or
push
sub
xchg
clc
fistl
add
in
push
insb
fwait
jmp
or
fwait
add
mov
cli
mov
jle
pusha
popa
ss
add
aam
jne
cmp
rorl
cmpsb
hlt
dec
push
inc
arpl
lods
shrl
dec
daa
popa
mov
jne
movsb
sahf
sar
cmp
imul
xor
cmp
stc
or
out
and
rorb
stc
pop
iret
push
cmp
int3
and
xchg
pop
pop
in
sub
aaa
rorb
pop
fistpl
pop
add
sahf
push
xchg
cli
lea
mov
mov
fmull
pop
out
cmp
adc
or
test
jns
xor
fisttpll
or
ljmp
cld
frstor
jl
ljmp
into
pop
fdivrl
pop
call
pop
lea
cmp
roll
dec
sbbb
add
push
shlb
push
xchg
cli
pop
cmc
mov
repnz
hlt
hlt
lds
adc
adc
insb
push
shlb
mov
ljmp
les
je
insl
mov
sbb
cmpl
mov
inc
sbb
push
xor
cmp
cmp
sbb
mov
mov
sahf
in
clc
jbe
cmp
dec
lret
pusha
test
adc
mov
jge
xor
cmp
jmp
xor
sbb
xlat
rclb
fs
testb
lds
adc
shrb
out
shrb
std
sbb
adc
xor
mov
fimull
pop
mov
push
pop
pop
es
ret
inc
sti
aaa
or
icebp
sti
and
insb
inc
ret
lcall
add
fists
pop
clc
lods
dec
jb
pop
es
maskmovq
idivl
imul
hlt
mov
fistps
dec
jge
mov
push
xor
fsts
cmp
cmp
cs
mov
fidivrs
jg
push
jmp
jae
mov
pop
outsl
inc
std
aas
dec
or
add
cmpsl
icebp
js
mov
lahf
cmp
mov
sbb
xchg
mov
push
or
pop
pop
imul
mov
js
scas
sub
mov
aam
addl
cmp
fninit
cmp
pusha
cmp
jg
push
clc
je
mov
push
add
sbb
mov
sar
test
mov
test
inc
push
imul
lods
inc
cmc
xchg
adc
dec
sahf
adc
shr
and
cmp
cltd
jecxz
xchg
or
mov
xchg
pushf
testb
out
push
cmp
ljmp
fimull
cmp
inc
loope
push
jmp
sbb
arpl
push
sarb
inc
inc
inc
mov
mov
imul
pop
sbb
push
les
jmp
fsts
inc
jbe
adc
jno
outsb
repz
jbe
inc
arpl
int
sbb
inc
pop
mov
clc
call
arpl
iret
sti
and
sub
dec
cmp
dec
dec
popa
das
push
out
inc
pop
or
xlat
adc
mov
push
and
mov
xchg
fdivrp
push
cmc
dec
cmp
sbb
inc
arpl
ret
test
in
push
fists
adc
sbb
mov
sbb
scas
sub
lea
fldt
and
adc
pop
lods
sbb
sub
and
popa
sub
mov
dec
test
push
rolb
out
mov
jl
lcall
cmp
in
rorb
and
mov
inc
jb
cmp
frstor
push
fbld
pop
and
shrl
mov
adc
loop
jecxz
movsb
outsb
push
push
mov
xor
sbb
dec
test
cmp
inc
sub
outsl
sti
ds
lret
shrb
push
popf
enter
pop
inc
dec
aam
xchg
fiaddl
decb
call
mov
adc
mov
pop
pop
fadd
popf
and
movsl
mov
in
mov
mov
jnp
sub
mov
sub
test
outsl
loopne
sub
dec
jg
cmp
sbb
cltd
pop
push
lods
sbb
int3
or
jg
add
je
test
push
lcall
adc
jae
dec
std
push
add
adc
popf
shll
push
pop
pop
lock
dec
test
dec
les
stos
xor
outsb
addr16
lods
nop
mov
push
cmp
arpl
fldenv
adc
xchg
mov
outsb
sahf
sti
mov
sbb
cmp
adc
sub
shll
enter
ss
mov
arpl
mov
sbb
jbe
out
shrb
xor
call
jae
inc
ljmp
and
cmp
outsb
popf
dec
into
loop
pop
dec
in
in
pop
jo
mov
and
xor
lret
mov
sbb
outsl
sbb
or
add
fldenv
js
mov
push
out
gs
fsubs
fdivrs
in
or
aam
div
ja
pop
mov
out
jge
stos
sbb
js
jle
sbb
sbb
sub
adc
in
cwtl
sbb
mov
pop
stos
aam
ljmp
jmp
xchg
push
mov
in
das
xchg
fdivs
test
inc
jne
or
add
inc
cltd
in
jbe
movsb
add
movsl
popa
mov
or
push
rcl
jmp
sub
cltd
mov
das
and
jae,pt
mov
insl
xor
jp
jo
dec
push
sub
out
leave
leave
xor
pushf
shl
pushf
sbb
xchg
xor
xor
xchg
cmpsl
mov
lea
cmp
dec
jno
insb
jmp
pop
inc
mov
cmp
cwtl
fidivs
nop
jnp
lock
xchg
movsb
cmpsl
lret
rcr
pusha
hlt
gs
jno
dec
dec
cmp
jo
push
xor
out
mov
sbbb
shll
lret
push
or
jmp
mov
ret
fisubl
lret
mov
shlb
jge
pop
pop
movsb
jnp
xor
das
subl
outsl
adc
push
cwtl
fdivrs
imul
and
xchg
shlb
or
jns
sbb
mov
jae
add
int
inc
push
stos
jae
xchg
or
je
or
jo
dec
or
add
enter
daa
jae
lods
xchg
mov
pop
sub
repnz
loope
jns
add
jle
das
fisttpll
aaa
test
mov
and
in
scas
mov
inc
and
push
lods
test
lea
mov
cmp
xor
ss
xor
iret
out
pop
outsb
pop
arpl
adc
xor
lds
push
cmp
lea
sbb
aad
outsb
push
bound
push
outsl
lods
inc
lock
xlat
mov
imul
sahf
dec
aaa
mov
push
adc
sti
lods
jg
push
push
mov
loopne
cmp
lods
xchg
adc
sbb
sbb
das
sbb
lret
leave
fcomip
lret
add
out
pop
loopne
mov
sub
push
addr16
int3
aad
sbb
and
jbe
mov
testb
jp
fstpt
pop
sbb
nop
popa
pusha
pop
or
je
fistps
pop
push
pushf
jle
push
js
push
outsl
int3
addr16
sub
sub
imull
das
lea
imul
dec
fmuls
mov
pusha
pusha
pop
add
lret
jge
js
fidivrl
into
je
loopne
repz
std
cmp
loope
loope
es
popl
test
repnz
enter
decl
fadd
mov
inc
adcl
xor
out
test
loop
mov
and
adc
pop
jg
sub
mov
test
mov
or
lods
bound
inc
jl
ljmp
xchg
mov
jge
or
xchg
pop
lret
mov
jmp
outsb
inc
lock
scas
test
adcl
fxch
mov
mov
and
mov
fisttpl
sub
das
jle
and
test
push
mov
data16
negb
xchg
pushf
pop
ficomps
sub
xor
mov
fucomp
inc
xchg
hlt
dec
pop
adc
out
imul
rcrl
mov
jg
xchg
jmp
dec
mov
fadds
out
data16
jge
arpl
shlb
pop
test
jb
xor
adc
or
rcrb
out
lods
jmp
adc
data16
cld
ret
movsb
bound
add
inc
sub
aaa
adc
cwtl
cmp
pop
inc
shrl
into
mov
mov
negl
mov
test
cmp
imul
mov
jbe
rcl
sub
int3
push
and
aaa
push
jg
fs
aas
call
pop
jnp
cs
sbb
arpl
ljmp
insl
pop
and
xorb
nop
das
jnp
dec
inc
sub
fcomps
push
mov
mov
or
inc
daa
xchg
lret
repz
cwtl
cs
ja
cld
inc
inc
mov
jno
sar
or
mov
xchg
aas
mov
xor
mov
int3
popa
mov
sub
sbb
stc
sahf
jg
fs
std
punpckldq
mov
test
jge
fs
jl
movsb
lret
shll
in
mov
and
sbb
mov
and
or
jge
mov
cld
or
lea
sub
aaa
aam
cs
aam
movsl
sub
xlat
loop
insl
jbe
jnp
in
leave
daa
jb
jp
xchg
push
int3
fisubrl
stos
je
inc
test
loopne
xchg
sub
jmp
cs
mov
and
inc
or
dec
shrb
movsb
mov
push
out
jnp
mov
cmpsl
or
lds
mov
daa
fs
scas
sarl
stos
repnz
loope
inc
cmp
test
inc
arpl
shrb
adc
mulb
outsl
outsl
adc
push
in
gs
lea
cmp
jne
inc
jp
push
ss
nop
sbb
popa
add
and
gs
add
test
pusha
lock
push
test
lds
add
inc
sub
repz
aam
cmp
add
pop
add
aam
push
ficoms
push
dec
icebp
and
push
sbb
imul
push
inc
mov
push
mov
xchg
ficoml
inc
cwtl
fadds
loopne
pushf
mov
add
daa
std
add
aad
sub
movsl
jecxz
or
repz
lea
inc
push
jo
icebp
lods
rcr
cld
mov
lret
mov
push
test
and
incl
mov
cmp
movsl
add
in
mov
adc
das
jge
mov
int3
fstl
or
pop
enter
mov
xchg
jmp
pop
fisubl
addl
xchg
clc
xor
jb
mov
add
outsl
inc
mov
pushf
outsl
mov
push
or
hlt
inc
mov
jecxz
rorb
mov
xchg
clc
in
fdivp
jb
jne
cmc
pusha
adc
xor
in
and
jae
and
leave
test
adc
pop
mov
or
arpl
add
mov
ret
cmp
aad
inc
cmpb
cmp
jle
int
push
mov
ljmp
or
cld
push
cmp
bound
push
jl
inc
das
test
das
mov
or
in
mov
adc
mov
push
addr16
out
incl
add
fwait
sbb
ja
sub
out
mov
test
aam
aad
in
mov
sbb
addr16
aas
push
test
outsl
insl
fisubrs
inc
cli
dec
cwtl
mov
pop
ss
dec
sbb
pop
sbb
and
insl
fists
ret
push
jno
adc
pop
xchg
loop
and
call
dec
push
or
inc
outsb
pop
jmp
stc
clc
dec
sub
sbb
filds
jbe
sbb
pop
sbb
cmp
push
fcoms
push
sub
jmp
cwtl
dec
xchg
lods
add
xor
mov
adcl
fs
jp
mov
dec
shrl
cli
jl
mov
push
in
lcall
movsl
jnp
jo
and
xchg
repz
sub
arpl
pop
aad
rdpmc
iret
rcr
cmp
dec
negb
add
cmpsl
jnp
xchg
dec
mov
adc
xchg
pushf
lds
dec
dec
jecxz
daa
lods
sar
push
jnp
cmc
ja
lret
push
pop
mov
push
aas
mov
aam
aaa
xchg
cmp
loop
hlt
mov
xlat
dec
icebp
orb
iret
push
add
in
out
fildl
xchg
adc
enter
sub
addb
mov
movsl
sti
and
push
jbe
push
rorb
or
pushf
jle
sbb
cld
loop
dec
mov
fsubrs
cmpsl
sbb
enter
cmp
hlt
insl
adc
cmp
or
mov
repz
and
lcall
call
scas
cwtl
sub
or
jo
cmp
pop
inc
inc
inc
pop
pushf
jae
gs
cmpsb
xchg
jae
add
in
sub
packssdw
mov
rol
mov
pop
loop
adc
repz
int3
leave
mov
mov
pop
lds
adc
cmc
shl
jle
dec
adc
fnstsw
cmpsl
or
push
push
cmp
pop
int3
cmpsb
cmp
ret
cmp
fsubr
sub
pushf
cmp
cmp
inc
and
adc
add
fisubrs
mov
xorl
loope
enter
in
fldt
das
icebp
jmp
sub
sub
test
xchg
pop
inc
mov
insb
push
and
addr16
push
mov
xchg
mov
and
inc
pop
inc
insb
pushf
jmp
cmp
lcall
psubb
lds
jne
inc
push
adc
scas
scas
in
push
dec
lahf
hlt
push
dec
jmp
push
add
push
xchg
adc
out
add
mov
fs
loope
lea
add
dec
jo
in
std
xor
aas
adc
pop
add
push
in
inc
loopne
fsubr
inc
jg
call
cs
push
pop
es
add
and
adc
mov
or
add
repnz
outsl
dec
mov
adc
push
ljmp
or
jle
cli
pop
mov
cmpsl
imul
and
insl
movsb
sub
test
and
push
sub
test
dec
je
adc
hlt
dec
and
adc
mov
mov
lds
out
lods
xlat
xor
jmp
cltd
dec
insl
sub
sub
inc
insl
pusha
mov
rolb
aaa
aad
pop
loopne
lahf
jnp
shlb
lods
jo
loop
insl
icebp
xchg
test
aad
mov
and
sti
pop
and
cmp
jb
movsl
jp
in
xlat
inc
shrb
jg
aas
pop
aam
cwtl
movsl
addr16
dec
xchg
hlt
test
mov
fisttps
cs
push
fisubs
outsl
jecxz
cltd
dec
lds
clc
or
outsb
shlb
int3
in
push
ret
cmp
pop
pop
repnz
loopne
outsb
aad
xor
cmp
and
push
mov
inc
lcall
js
hlt
gs
insb
lds
push
loop
dec
mov
push
nop
insl
test
xor
or
pop
inc
pop
scas
cs
insl
mov
mov
mov
inc
sub
dec
daa
lock
sub
lahf
loop
inc
lea
aaa
daa
cmp
inc
mov
cs
test
sub
mov
outsl
and
inc
xchg
mov
out
xor
or
sbb
das
stos
imul
daa
and
movsb
subl
inc
dec
inc
dec
fs
int
clc
data16
xor
sub
or
test
adc
push
mov
loope
inc
cmp
aad
imul
inc
cmp
out
jmp
sub
inc
sbb
es
stos
mov
cmpsb
movsb
cmpsb
mov
call
adc
push
add
cvtps2pd
addr16
mov
shlb
push
push
shlb
mov
push
jle
daa
ret
shll
clc
cmp
aad
out
lods
adc
or
mov
fistl
add
jb
pop
ret
pop
push
push
pop
mul
or
jae
push
shll
repz
call
jbe
mov
scas
test
xor
xchg
dec
ds
popf
mov
daa
daa
fsubrl
popa
aaa
sub
jecxz
popa
push
push
xor
jp
inc
fmuls
xor
movsb
or
push
xor
xchg
mov
mov
mov
out
inc
or
or
pop
mov
push
repnz
gs
pushf
xchg
dec
cmc
roll
cwtl
inc
loop
je
sub
push
sarl
in
inc
int3
inc
ret
enter
das
lret
andb
pusha
insl
xchg
inc
sbb
dec
inc
push
dec
push
xlat
cli
mov
insb
add
out
add
adc
and
into
iret
push
jmp
das
out
rorb
cmp
cmp
fstpt
addr16
push
rorb
jge
push
clc
lahf
js
pop
insb
sbb
shrb
and
test
out
mov
mov
pop
mov
repz
outsb
sahf
cmp
push
cld
sbb
scas
cmp
into
test
sti
shlb
sahf
mov
jecxz
dec
insb
adcb
in
inc
mov
push
inc
sub
xchg
xor
xor
sbb
mov
sub
cmc
adc
lods
out
bound
es
outsl
pop
ret
lods
fs
enter
mov
sbb
sarb
sarl
inc
and
push
push
aad
xor
mov
mov
cmp
andl
sub
nop
mov
inc
mov
xchg
call
rcll
mov
lret
and
cmp
popa
dec
sbb
or
sbb
cmp
and
mov
aas
cmp
outsb
imul
lock
es
push
push
push
into
ss
aad
sub
pop
iret
pop
mov
pop
or
es
xor
lods
test
xchg
xlat
cmp
pop
out
in
cmp
pop
add
lret
flds
les
stos
fs
inc
jecxz
xchg
into
lahf
test
cwtl
ror
mov
aad
mov
lods
mov
icebp
mov
lret
fisubrs
pop
mov
cmp
icebp
pop
iret
jge
lock
xor
xor
jns
mov
push
or
int
bound
out
lods
rcrl
imull
sub
xchg
mov
jp
test
sahf
es
add
imul
aam
jge
pop
imul
add
dec
xor
cwtl
arpl
and
inc
cmpsb
jae
faddl
xor
adc
leave
xor
jne
mov
cmp
add
dec
inc
gs
sub
jae
xor
cmp
adc
lahf
push
mov
cld
or
repnz
lock
dec
mov
jle
xchg
je
out
mov
fisubs
lcall
cmp
inc
mov
loopne
cmp
cmp
ror
jp
lods
pop
mov
inc
movl
mov
cmp
and
sbb
shr
pop
aad
lock
push
sahf
insb
sahf
sbb
mov
bound
loop
mov
xchg
xor
jne
adc
pop
and
mov
inc
ss
or
pop
and
iret
add
pop
mov
cld
loope
xchg
xchg
push
sub
pop
into
out
jg
cmp
mov
push
mov
mov
cmp
jno
push
lods
js
rcr
es
mov
push
mov
movsl
adc
jg
movsb
subb
and
push
hlt
lock
std
inc
hlt
in
xchg
xchg
lds
xchg
adc
pop
pop
add
push
xchg
icebp
cmp
je
or
jmp
shr
xor
idivb
arpl
mov
pop
fsincos
mov
sti
xor
gs
push
xor
or
fdivs
call
int
mulb
jno
pop
and
js
inc
mov
dec
pop
mov
mov
insb
xchg
sub
xlat
mov
test
or
pop
movsl
xor
push
cli
xor
idivb
lahf
shll
jns
lea
sub
fwait
mov
or
stc
test
jo
daa
sbb
cmp
or
stc
xchg
cmpsb
arpl
cwtl
push
jl
cwtl
bswap
push
mov
or
mov
sub
adc
mov
xchg
pop
iret
aaa
mov
pushl
sub
jmp
sub
dec
push
pop
out
xchg
lds
pop
inc
test
std
ret
dec
or
pop
fstpl
xor
pusha
xlat
cwtl
adc
xor
mov
aas
stc
xlat
divb
lea
mov
scas
xor
nop
inc
dec
out
sbb
dec
test
push
test
xchg
lcall
or
add
jl
stos
shlb
insl
xchg
or
mov
xchg
xchg
cmpsl
jne
popf
and
outsb
adc
ja
add
add
mov
icebp
nop
inc
xchg
lods
loopne
jo
shll
xor
and
orl
or
xchg
imul
out
dec
scas
xor
dec
jb
loope
mov
sub
push
cld
xchg
adc
xchg
sbb
adc
xchg
jmp
jge
les
inc
cs
cli
inc
adc
push
and
pop
jae
mov
movsl
test
xor
rolb
insl
out
dec
pop
outsb
cmp
or
mul
and
xor
shlb
sbb
mov
aas
rolb
testl
adc
adc
pop
fcmovne
inc
sahf
push
xchg
in
fstpt
inc
cmp
cmpsb
pop
xchg
push
pop
pusha
les
popa
dec
pop
cmp
mov
stc
fmull
outsb
xchg
icebp
xchg
and
insl
insl
arpl
ror
ficompl
mov
fcoml
arpl
jo
ljmp
xchg
jmp
lcall
push
mov
sarb
fwait
decb
loop
enter
and
divb
or
xchg
fimull
jno
shll
dec
sub
roll
les
mov
out
jae
andl
je
aam
js
fld1
jmp
sahf
imul
enter
and
imul
inc
enter
xchg
dec
mov
mov
push
je
sbb
hlt
icebp
scas
inc
aad
rorb
xor
dec
adc
icebp
cwtl
std
imul
xchg
and
addl
jnp
daa
and
pushf
pop
int
inc
mov
adc
xor
push
movsb
and
xchg
push
cmp
pop
mov
stos
in
mov
js
lods
add
jae
bound
mov
addr16
xor
xchg
jnp
add
repnz
jbe
adc
nop
enter
in
jmp
cmpsb
in
ffreep
mov
cs
jbe
das
fsub
and
imul
mov
fisttpll
xlat
sub
inc
jmp
pop
dec
leave
and
insl
clc
ret
jle
outsl
notb
fidivrl
or
pop
arpl
out
sub
incb
jnp
ds
push
fwait
lret
into
add
cmp
es
add
push
js
test
sbb
mov
or
jle
inc
pushf
add
mov
stos
and
sbb
mov
in
pop
inc
into
int3
arpl
data16
adc
push
sub
mov
cmp
ret
inc
and
shlb
sub
xchg
fisubrs
jg
cmp
mov
and
mov
arpl
inc
mov
pusha
out
mov
adc
pop
or
pop
insl
mov
call
sub
inc
pop
add
push
dec
stos
fsubs
pop
bound
fwait
into
mov
fsubrs
sbb
test
jne
sbb
push
scas
lcall
or
inc
negl
pusha
out
xchg
push
jle
shr
mov
sub
test
pushf
dec
les
stc
pushl
sbb
xor
xor
inc
movsb
add
sub
mov
push
popa
stc
outsl
outsb
repz
out
jns
push
enter
mov
push
inc
cmpsl
fs
xor
lret
in
mov
inc
pop
cmp
dec
adc
nop
jae
aam
xchg
out
push
icebp
arpl
lret
std
out
stc
jae
mov
xchg
jb
or
test
clc
ja
call
mov
bound
cmpsl
sahf
ljmp
lcall
insl
movsb
popw
scas
adcb
mov
stos
outsl
roll
lea
sbb
sub
aas
loopne
xor
fs
les
push
jecxz
addb
movsl
mov
fidivl
add
sub
or
clc
mov
mov
iret
inc
loope
fwait
xchg
pop
dec
add
shll
jne
lahf
or
jns
add
inc
push
sub
ror
fnsave
popf
push
jns
into
fsub
dec
jb
insb
rolb
sti
leave
mov
mov
call
push
out
test
pusha
in
inc
adc
mov
or
sub
xor
neg
in
leave
jns
push
pop
popa
xchg
outsl
shll
loopne
cmp
jae
in
mov
xor
loop
add
into
in
cltd
mov
cmp
das
dec
pop
iret
dec
add
cmp
je
pop
push
adc
sbb
xchg
xchg
out
and
xchg
mov
mov
mov
insl
xchg
sbbb
push
lock
movsb
in
cs
pop
push
outsb
jbe
loopne
pop
xchg
mov
in
and
rcl
mov
cmp
push
dec
mov
push
cmp
push
pop
imul
es
pop
ss
jnp
sbbb
inc
mov
jg
mov
out
jns
jge
cltd
fsts
repnz
lods
xor
sub
cmp
ljmp
or
imul
mov
fnstenv
add
ret
dec
jl
jbe
xorb
xchg
mov
mov
or
adc
andb
push
sub
xor
jle
xchg
and
cmp
bound
in
outsl
cwtl
daa
loopne
shlb
jle
call
mov
pop
popa
xchg
leave
loopne
mov
pop
repnz
lahf
aaa
clc
fnsave
enter
or
inc
aas
push
mov
push
out
es
pusha
dec
lds
adc
fiaddl
test
sub
shrb
mov
call
clc
imul
lock
dec
scas
popa
ret
sub
cmp
pushl
xor
sbb
fdivs
dec
push
mov
cmp
daa
pop
iret
bswap
sbb
ss
sahf
add
dec
cmp
and
jae
cmp
imul
xor
out
cmc
or
xchg
pop
inc
mov
or
xor
sub
pop
stc
adc
shll
push
inc
repnz
mov
sti
clc
ret
mov
cwtl
mov
icebp
sub
mov
lods
rcrb
jp
pusha
je
or
sarl
adc
jno
in
mov
sbb
repnz
cmc
pop
pop
stos
lds
mov
stos
ljmp
sbbl
push
sub
popa
aas
fidivrl
mov
insb
sub
rcrb
lock
mov
fsubrl
mov
sub
sub
les
push
dec
and
int3
das
fsubr
cli
shr
adc
fwait
and
es
std
sub
jge
sub
adc
mov
hlt
sarb
cmp
jbe
aam
and
cmp
sub
or
mov
xchg
sbb
or
cmp
pusha
pushf
fldenv
cmp
insb
outsb
and
xor
xor
mov
test
jge
adc
clc
shrb
lahf
sbb
jo
adc
fwait
and
fsubrl
mov
fwait
pop
inc
xchg
hlt
xchg
pop
std
pop
inc
movsl
nop
test
jns
dec
test
jmp
rclb
flds
ljmp
jbe
push
outsb
jo
clc
fcoml
cmp
sbb
jle
test
fwait
cltd
push
mov
rcrl
outsl
addr16
lcall
loope
xor
in
roll
loopne
das
pop
fwait
mov
and
mov
jge
dec
inc
pop
mov
jns
inc
cwtl
js
dec
popf
stos
leave
les
cmp
das
inc
pop
movsb
xchg
adc
insl
rcrb
mov
aad
sbb
mov
aad
dec
cltd
sbb
pop
mov
sub
loope
ss
add
outsb
fwait
mov
sub
adc
test
repnz
pop
or
movq
xor
pop
adc
pop
mov
aaa
lods
pop
push
xchg
jecxz
add
mov
fimull
mov
data16
jecxz
lock
imul
dec
loop
rcrb
or
loope
out
movsl
xchg
add
inc
and
push
fcomp
xor
cld
repnz
clc
sbb
dec
stc
or
pop
std
sub
push
sbb
pop
scas
stos
pop
out
dec
mov
movsl
scas
fcoms
or
push
ja
mov
leave
push
sbb
or
lea
sub
aaa
cmp
les
jl
adc
push
or
not
mov
test
dec
cmpsl
pop
jge
push
in
fst
cmpsl
or
or
scas
loope
mov
pop
sti
bound
stc
jbe
outsl
dec
xchg
xor
and
adc
popa
push
and
mov
sbb
aam
insb
sbb
cmp
mov
test
insb
popa
jbe
ss
xor
movsl
and
mov
sbbl
sbb
repz
jns
insb
fisubrs
ljmp
add
push
adc
jno
mov
cmp
pop
add
adc
pop
aam
lea
or
inc
pop
dec
sbb
repnz
xor
xchg
cmpsb
xor
jmp
mov
enter
in
mov
cmp
movsl
daa
jns
jne
push
fidivl
sub
lds
mov
sbb
cmc
mov
jl
out
and
and
ds
movsl
clc
loopne
mov
lcall
mov
ret
cmp
jmp
test
aam
and
loopne
enter
mov
popf
cs
jge
stos
mov
cmp
mov
mov
dec
xchg
mov
mov
jo
mov
comiss
loop
stc
addr16
repz
lret
adc
xor
in
test
push
in
popa
stc
xor
ljmp
nop
mov
xor
jmp
rcrl
daa
and
add
xor
pop
out
addr16
cmp
aad
sub
outsl
pusha
push
sub
push
icebp
fildll
xor
test
ds
js
fst
iret
aad
jmp
add
and
mov
sbb
sub
lock
cltd
cli
jne
fsubrl
pop
xor
add
jp
in
stc
cmp
out
or
pop
jmp
pop
xchg
rcll
xor
sub
mov
mov
add
jmp
mov
pop
hlt
roll
sub
mov
inc
ret
sub
orl
jno
stos
mov
sbb
mov
mov
into
cmp
filds
and
pop
jl
and
push
mov
fisubrs
xchg
push
sbb
out
xchg
mov
sub
in
add
out
mov
or
xchg
add
push
cmpl
sub
mov
data16
and
xor
leave
test
push
lock
mov
lcall
add
aam
jae
pop
push
loopne
icebp
mov
push
sub
loop
hlt
sti
sbb
arpl
popf
add
lds
cmp
stc
xchg
add
les
and
jmp
test
jnp
xchg
int
xor
xor
cmp
xor
xchg
pop
lret
out
ja
fcmovnbe
daa
jbe
popf
imul
adc
pop
pop
adc
addr16
ss
inc
add
je
sbb
push
enter
add
jmp
mov
dec
call
add
sbb
aaa
cmc
mov
andl
push
fsubs
add
roll
mov
xlat
arpl
bound
push
pop
mov
mov
imul
das
data16
out
repz
fwait
loopne
test
je
cli
or
andl
xor
test
push
out
sbbb
sahf
or
lahf
hlt
hlt
sti
out
xlat
das
imul
dec
dec
mov
hlt
sub
xchg
inc
inc
push
dec
mov
pop
insl
call
out
or
out
hlt
inc
test
vmovups
mov
mov
mov
out
jo
lret
insl
cwtl
adc
sbb
clc
push
mov
ffree
addl
out
enter
mov
mov
jb
ja
jge
push
hlt
mov
test
fcompl
jge
fld1
ret
mov
inc
shl
and
fs
push
out
popf
mov
dec
cs
jl
pushf
mov
rorb
insb
hlt
test
cmpsb
imul
call
add
adcb
sbb
mov
sub
pop
dec
xchg
cmpsl
ljmp
xchg
inc
cld
sbb
pop
pop
xchg
push
jge
cs
leave
add
or
cmp
sub
mov
out
lds
adc
imul
mov
rcrb
addr16
rorb
adc
test
in
mov
pop
cmpsl
xchg
clc
or
inc
xor
pop
jg
fiadds
scas
addr16
movsl
lret
inc
faddp
dec
popf
inc
mov
andb
mov
jne
mov
adc
sub
das
in
aad
mov
stos
inc
and
push
xor
pop
inc
arpl
xchg
sub
add
test
test
ret
jmp
pop
cmp
cmpsb
add
out
hlt
hlt
lret
cmpsl
filds
sbb
mov
push
dec
loop
addl
je
and
mov
lock
stos
leave
cli
and
dec
scas
add
mov
lods
mov
jp
rolb
dec
loope
fadd
sbb
jbe
mov
sbb
ret
lods
sbb
mov
jnp
stos
pop
push
paddsw
mov
leave
or
call
adcb
add
repz
xchg
lea
mov
bound
or
repnz
sbb
mov
scas
or
pop
mov
pop
divb
cmpsb
sbb
iret
or
movsb
addr16
pop
pop
aad
pop
frstor
pop
repnz
inc
jle
mov
pop
inc
pop
out
aad
stos
or
push
int
outsb
pop
loopne
jae
xchg
mov
test
test
xor
movsb
dec
sbb
in
jno
push
mov
xor
adc
divl
fsubl
mov
std
mov
in
addr16
xchg
scas
fwait
adc
jo
scas
and
lds
inc
jecxz
dec
and
mov
and
sbb
inc
adc
repnz
frstor
lret
mov
mov
mov
sub
xor
lahf
add
outsl
or
jmp
xchg
jp
jbe
imul
inc
add
loope
stos
mov
popl
adc
cmpsb
and
repnz
push
into
int3
pop
pop
xchg
int
sub
adc
mov
add
test
cmp
or
outsb
popa
cs
adc
sub
sub
mov
mov
mov
dec
xorl
inc
push
mov
xor
addb
jbe
aad
mov
call
jbe
cmpsb
scas
arpl
sbb
pop
mov
stc
mov
pop
iret
imulb
movsb
jge
test
cmp
jge
fadds
pop
fdiv
add
repz
xchg
and
mov
lss
dec
mov
test
mov
gs
rcll
nop
fwait
cmp
jl
sub
in
mov
mov
push
scas
outsb
cld
and
xchg
pushf
sbb
movsl
xchg
ljmp
dec
addr16
orb
arpl
xchg
adc
inc
rolb
icebp
lds
repnz
mov
adc
add
adc
int
mov
call
adc
ret
cmc
ss
push
jmp
sbbb
insl
mov
imul
push
push
movsl
adc
push
ds
fldcw
mov
call
js
xchg
mov
mov
insb
sbb
inc
pop
das
aaa
stc
mov
add
lock
add
pop
sbb
dec
xchg
inc
int3
movsl
push
mov
inc
xor
jg
mov
and
push
xchg
add
stos
outsl
xchg
adc
push
repz
sub
scas
mov
jle
imul
mov
cmpsb
pop
jle
xlat
xchg
inc
pop
adc
jmp
lds
ret
or
stos
or
clc
lahf
pop
in
sbb
ret
aas
and
jns
jne
testl
jns
or
mov
mov
sub
in
adc
fs
pop
mov
inc
es
movsb
cmp
mov
push
js
ds
push
fwait
push
test
aas
mov
popf
add
ja
adc
test
data16
outsl
inc
push
loopne
nop
dec
cmp
shl
or
pop
xor
push
shl
mov
push
mov
add
fcoms
sbb
xchg
dec
adc
sbb
adc
addr16
aam
sub
sbb
pusha
aad
sub
pop
xchg
outsl
test
pop
push
call
fdivr
xchg
hlt
loope
adc
xchg
xlat
loopne
in
adc
xchg
jge
inc
cmc
lcall
aaa
int3
jmp
mov
rolb
xchg
hlt
loop
add
mov
add
xor
add
ja
cmpsl
cs
pop
dec
das
shlb
mov
jecxz
sub
xchg
and
leave
xchg
rcrl
dec
cltd
xlat
xor
es
xor
aas
sub
push
aad
stos
pop
sahf
and
loope
xchg
jne
inc
std
loope
adc
xor
dec
iret
test
ret
cmp
push
inc
inc
lcall
insl
push
inc
cmp
fsubrl
ret
dec
pop
adc
pusha
mov
xchg
icebp
iret
jb
sbb
shll
cltd
aaa
mov
fbstp
loop
cwtl
adcl
cli
mov
pop
cld
or
pop
ret
popa
push
push
mov
sub
mov
mov
push
mov
push
fldcw
cmp
popa
inc
jmp
fs
push
out
popl
xchg
popa
fstpt
leave
aas
stos
movsl
das
div
ja
mov
jnp
mov
inc
jmp
popf
push
fs
xchg
mov
rol
jno
fxch
xchg
jno
jne
pop
sbb
int3
insl
scas
sub
iret
xor
pushf
jg
dec
jge
les
xchg
adc
fdivs
popa
adcb
xchg
sbb
shrb
int3
nop
test
jo
mov
ret
dec
jge
push
neg
shr
movsl
add
icebp
pushf
mov
fcmovb
mov
xor
mov
xchg
loopne
cwtl
mov
pushf
ret
xchg
push
stc
jle
xchg
lea
fimuls
add
sub
mov
push
jecxz
scas
pop
dec
loop
test
cwtl
push
mov
pop
psubusw
and
insb
test
sub
jp
aaa
iret
sbb
ret
fadd
popa
xchg
ja
shrb
jnp
aam
divb
iret
push
push
adc
xor
or
test
mov
lock
lock
js
or
fs
aaa
inc
jb
int3
inc
add
inc
push
cmpsl
mov
mov
dec
stos
xchg
subb
mov
xchg
jmp
add
xor
testb
push
out
testl
mov
incb
and
xchg
loop
stos
mov
clc
pop
fwait
push
push
or
jl
mov
fdivrl
cs
push
or
jp
dec
cmp
aad
sub
mov
pop
push
ljmp
cli
jp
mov
and
cmpb
pop
xchg
inc
jge
dec
das
mov
sbb
std
inc
inc
stos
mov
xchg
rcrl
jmp
xor
fsubrl
push
xchg
xchg
dec
sbb
test
in
xor
in
stos
mov
pop
divb
stc
sbb
imul
pop
pop
jno
pop
mov
mov
js
jns
pop
push
sbb
pop
add
pusha
sbb
clc
sbb
lahf
xor
push
sub
ljmp
or
jg
mov
iret
push
stos
in
inc
dec
sahf
dec
outsl
push
fistps
icebp
dec
movsl
push
addr16
jp
sbb
daa
ret
movsl
pop
dec
sahf
cmpsb
dec
mov
ljmp
std
inc
sbb
jmp
sub
inc
and
jnp
subl
sub
jns
js
adc
inc
mov
popf
add
mov
mov
jge
clc
je
mov
jb
sti
inc
pop
sbb
outsl
out
repz
add
stos
ficoms
pop
push
pop
popa
push
adc
mov
dec
outsb
ret
jnp
and
mov
ror
test
aad
scas
mov
out
xorb
js
mov
cmp
mov
notb
and
xchg
fiadds
test
test
test
movsl
enter
out
fcom
data16
int
loopne
inc
mov
jl
dec
or
loope
mov
jge
lds
or
call
out
lea
xor
enter
jg
xchg
mov
cmp
push
push
mov
aaa
mov
fidivs
xchg
or
lahf
add
shll
daa
loopne
xchg
pop
popf
xor
mov
lds
adc
sbb
shll
into
xchg
sub
xchg
andl
mov
iret
cli
aas
icebp
imul
jno
or
cltd
rcll
sub
xor
and
adc
ljmp
xor
pop
jbe
inc
jp
adc
push
cmp
loope
lods
jno
xor
mov
or
xor
cld
and
in
pop
jmp
dec
push
mov
add
pop
iret
pop
xor
push
push
mov
cmpsl
mov
inc
insl
jns
mov
cmp
adc
mov
fildl
pop
nop
cmp
imul
jmp
call
and
inc
scas
jp
xchg
add
sub
notb
or
sbb
inc
nop
jmp
leave
loope
add
cli
sub
mov
ds
and
jle
lods
mov
dec
out
xchg
pop
inc
or
pop
xor
inc
aaa
imul
mov
add
cmc
lock
stos
add
pushf
xchg
jg
mov
sub
xchg
inc
push
push
xor
add
fwait
push
mov
rcl
cs
shll
xchg
mov
subl
or
pop
jo
mov
bound
pop
je
dec
or
pusha
and
lods
pop
push
sbb
sbb
mov
lret
sahf
pop
out
insl
inc
int
subl
add
repnz
lods
cmpsb
movsb
cmpsl
test
push
nop
icebp
mov
or
mov
jbe
push
aad
int
loop
and
sbb
inc
push
data16
cs
pop
mov
jp,pt
scas
cld
mov
pop
pop
cmpsl
arpl
ja
lahf
and
jnp
and
in
mov
lock
xor
jge
and
cmc
xor
sbb
cmp
lea
xchg
mov
or
mov
mov
clc
js
jne
mov
push
stc
sbb
mov
push
pushl
jae
cmp
popf
xchg
jno
or
jle
dec
inc
in
lret
lock
sbb
roll
pop
cmp
and
push
mov
sahf
mov
and
cmpsb
dec
pop
shl
adc
xor
dec
ja
out
jno
inc
jecxz
push
or
push
andl
and
push
xor
add
mov
jae
imul
mov
inc
push
mov
push
lods
mov
push
movsl
icebp
cmp
sbb
pop
ret
aad
js
dec
ret
lds
adc
push
iret
stos
push
push
dec
inc
push
xchg
jbe
push
in
stos
xchg
dec
inc
test
xchg
or
pop
jno
push
mov
cmc
lret
adc
mov
jno
arpl
pop
push
aad
ret
inc
jo
aam
scas
jp
dec
mov
and
repz
sbb
push
sahf
ljmp
or
repz
jmp
daa
daa
shlb
cmp
mov
movsb
or
inc
push
xor
mulb
lods
dec
inc
roll
insl
adc
sub
and
movsl
pop
sub
out
psrad
fs
dec
push
lahf
sub
pushf
fisttpll
mov
push
mov
decl
mov
call
lods
push
push
mov
out
lret
lret
mov
add
fcoml
dec
call
subb
pop
xlat
cmp
mov
jb
fld
xor
mov
cmpsl
xchg
fsubl
dec
stos
or
push
jmp
xchg
jmp
mov
mov
imul
repnz
test
loop
jno
push
lcall
leave
push
rclb
xchg
call
xor
hlt
roll
aad
mov
lcall
inc
out
xchg
std
mov
or
loopne
xor
in
push
pop
mov
cmp
add
adc
add
sbb
loopne
mov
je
adc
cwtl
ss
insb
add
pop
mov
inc
mulb
xchg
shrb
xor
mov
jo
lods
inc
add
adc
mov
cwtl
adc
cmp
jae
scas
movsl
xchg
xor
jae
outsl
pop
pop
or
movsl
xorps
imul
or
add
push
sub
fdivrl
outsb
pusha
outsl
fadds
loope
push
mov
and
adc
movzwl
test
push
or
je
scas
dec
xlat
int
movntq
stos
xor
or
insl
and
jl
and
cmp
push
push
or
out
movsb
push
clc
inc
arpl
adc
cmpsl
or
lea
les
cmpsb
adc
jg
lahf
sbb
mov
pop
jns,pt
xchg
out
xchg
aas
scas
add
call
xchg
or
popf
aad
inc
push
ljmp
xchg
ds
dec
fcomp
push
inc
xor
mov
les
push
aad
addr16
pop
sbb
loopne
pop
adcb
rclb
xor
mov
or
mov
xlat
or
repz
mov
lret
loope
decl
inc
pushl
cmpsb
mov
movsb
cwtl
cmpsb
sbb
or
xchg
cld
sar
out
cld
add
mov
and
in
push
xchg
mov
outsb
cmp
pop
dec
mov
lea
xchg
sbb
shl
mov
stos
das
adc
mov
je
les
xlat
lret
into
jae
out
fdivl
jecxz
out
lret
cmpb
bound
test
rcrl
jno
mov
mov
and
xchg
frstor
pop
jp
cmp
sbb
jnp
test
aas
sbb
sub
pop
scas
sbb
xchg
sbb
repz
xor
xchg
gs
in
lret
dec
imul
sub
push
sub
out
cmpsb
shlb
or
mov
jge
push
dec
std
loopne
lds
les
cmp
push
pusha
inc
xchg
mov
aad
mov
insl
mov
adc
and
insb
int3
jle
fisubrl
in
jnp
lds
rcll
fisttpll
data16
lock
fisttpll
xchg
push
js
push
rcl
dec
movups
in
aas
lods
and
dec
pop
iret
jbe
clc
pop
cmpsb
push
adc
test
int
lods
iret
or
jl
insb
mov
push
fmulp
in
fxch
jns
cwtl
mov
inc
jno
je
mov
lods
mov
dec
xor
xchg
test
jp
iret
pop
add
mov
loopne
push
jae
addr16
pop
jne
fdivs
inc
ss
aad
sub
cmp
movsl
xchg
push
push
sub
pop
jae
jmp
mov
push
and
idivl
arpl
sub
add
jae
add
fildll
jecxz
bound
repnz
sbb
adc
insb
mov
pop
fidivrl
mov
pop
les
adcl
pop
iret
repz
mov
or
enter
inc
test
xchg
mov
popa
mov
aam
and
sbbb
or
or
adc
adc
and
add
pushf
jns
dec
out
mov
cwtl
adc
mov
mov
xchg
popf
mov
mov
xor
mov
pop
xchg
scas
jb
cmp
outsl
notb
push
lods
mov
stc
cmpsl
cmc
out
jne
inc
adc
cwtl
adc
imul
gs
loop
iret
xor
jge
loopne
dec
scas
lahf
mov
lret
xor
mov
mov
mov
and
mov
add
sub
sub
mov
roll
sbb
dec
or
shll
mov
dec
or
pop
jp
sbb
loopne
movsl
xchg
and
xchg
mov
arpl
test
test
sbb
xorl
les
test
into
pop
inc
inc
sar
int
int
mov
push
in
enter
loop
jns
mov
mov
mov
clc
sbb
push
js
rclb
xchg
es
pop
dec
popa
ss
add
bound
jle
xor
aad
andb
mov
daa
jg
jo
sub
sub
div
fmull
rolb
aad
jbe
aam
xor
sahf
bnd
js
xchg
rolb
fiadds
mov
jl
imul
data16
jne
repz
and
pop
clc
int3
mov
sti
cmpsb
mov
outsl
fbld
jb
mov
insb
push
je
mov
or
sbb
mov
mov
jp
andl
xor
xchg
mul
icebp
shrb
inc
int3
and
sbb
pop
add
inc
rcl
mov
iret
inc
mov
stos
mov
cmpsl
stos
mov
jg
xchg
mov
mov
sbb
pop
xor
test
cmpb
push
mov
xchg
adc
dec
mov
mov
sbb
mov
mov
cmp
fimull
sbb
and
js
popa
scas
xchg
jo
lods
mov
and
hlt
in
mov
in
push
pop
data16
jb
adc
inc
imul
fwait
loope
pop
or
js
add
push
lea
stc
jecxz
scas
cmpsl
push
les
push
ficoms
fistpll
test
imul
sub
sbb
aaa
popa
jnp
push
sahf
out
ljmp
cmpsb
int3
icebp
les
mov
ljmp
leave
cmpsb
ror
inc
jmp
mov
int
lcall
mov
mov
add
ror
adc
daa
jae
jae
stos
movsl
pop
xchg
clc
pop
push
rcrl
jp
in
cmp
inc
dec
and
jns
leave
lcall
xchg
push
sti
cmp
or
lcall
scas
adc
and
inc
test
jp
or
inc
jecxz
aam
addr16
and
inc
enter
lock
mov
rol
and
test
movl
cs
xchg
or
ds
ds
dec
sub
pop
jno
adc
mov
lods
test
jmp
and
in
pop
mov
mov
dec
ficompl
roll
in
enter
push
mov
cmp
movsb
and
push
out
pop
mov
shll
sarl
stc
add
jno
mov
add
sbb
enter
adc
or
adc
dec
sbb
pop
sbb
jg
out
pop
ljmp
inc
mov
sub
arpl
aaa
sbb
adc
les
dec
or
mov
cltd
dec
fwait
mov
mov
movsb
xor
pusha
loopne
repnz
hlt
xchg
mov
or
mov
push
fcomip
mov
stos
xchg
xchg
jbe
inc
inc
int
shrl
insb
xchg
xchg
add
xchg
push
mov
or
xor
push
fmuls
and
sbb
out
stc
mov
std
mov
push
inc
shll
pop
jg
sub
aas
daa
out
adc
mov
mov
mov
add
push
jmp
arpl
rolb
inc
cmpsl
jno
adc
out
cmpsb
and
and
test
loopne
shrl
mov
cltd
sbb
pop
or
adc
popf
sub
rol
pushf
fchs
mov
push
inc
inc
adc
mov
out
mov
sbb
jbe
addr16
shlb
mov
pusha
or
fcom
jnp
scas
movsl
jno
mov
mov
icebp
dec
loopne
insb
mov
div
cmp
push
leave
push
jp
mov
imul
movsl
dec
mov
iret
lcall
outsl
mov
cmp
loope
jno
imul
xchg
pop
aaa
aas
cmp
leave
jg
ror
imul
cmp
push
sub
cwtl
adc
fldcw
jmp
mov
push
insl
xchg
outsl
inc
cmp
lods
js
sahf
mov
clc
inc
mov
cmp
jl
sub
inc
add
lods
cmp
les
mov
paddq
xor
jae
out
adc
jecxz
shll
push
mov
mov
cltd
mov
xlat
aad
js
or
pop
dec
sbb
scas
cmp
inc
sbb
sbbl
xor
mov
sbb
stc
mov
and
jb
ds
rcl
inc
or
out
ss
add
mov
stc
dec
les
sub
dec
cmp
add
mov
mov
sub
xchg
sub
mov
cmpsb
int
arpl
call
stos
iret
nop
dec
in
inc
out
mov
inc
mov
in
pop
mov
fidivs
aam
fimull
loopne
jp
shrl
clc
xchg
stos
push
cmp
jae
mov
mov
cmpsb
mov
dec
das
lcall
insl
push
push
mov
mov
mov
loope
add
push
xor
outsl
push
adc
or
mov
inc
std
mov
jo
fs
lods
dec
nop
jl
sub
test
jl
add
xor
lcall
inc
xchg
pushf
jl
iret
push
ss
cmp
mov
das
push
je
pop
sbb
sub
sbb
sub
mov
sbb
out
loopne
call
inc
xchg
into
dec
lret
js
mov
fs
mov
jbe
cld
js
lds
into
sub
jno
mov
inc
cmp
aaa
lcall
jno
fmuls
sub
stos
jg
adc
adc
lea
push
cwtl
inc
cld
mov
cmpsb
cmc
xor
mov
jmp
pop
ret
lock
lcall
test
and
movsl
outsl
nop
aad
adc
mov
arpl
mov
xchg
pop
cmp
aaa
or
rcll
sub
in
je
add
sbb
jg
inc
fcomp
cli
shl
leave
add
pop
pop
insb
push
mulb
mov
shr
inc
jecxz
rorb
cmpsb
xor
mov
xchg
mov
addb
xor
xchg
mov
std
mov
push
and
adc
inc
push
mov
mov
rorb
jmp
sbbb
sti
push
or
std
cs
jb
pusha
sub
popl
push
sub
pop
jo
scas
insl
push
ja
pop
inc
cmpl
xor
sub
test
dec
dec
call
adc
movlhps
cwtl
insb
inc
jb
jmp
sub
xchg
hlt
jecxz
loopne
and
jmp
xor
movsl
mov
cmpsb
fbstp
mov
mov
or
mov
sub
sti
dec
fisubl
sbb
cmpsb
dec
adc
inc
mov
pop
mov
daa
out
popf
add
pusha
mov
push
stc
push
cmp
fwait
bound
daa
or
fs
or
nop
popa
or
cmp
ret
cltd
pusha
rcll
es
cmc
das
xor
loop
orb
inc
inc
out
cs
pop
ja
dec
testb
imul
pusha
xchg
sbb
mov
lds
es
sbb
js
mov
orl
add
xor
movsb
cmp
adc
je
inc
les
fnstcw
sbb
xor
mov
iret
pop
add
mov
sub
xchg
add
mov
mov
mov
es
lcall
imul
notb
xchg
inc
sub
xchg
je
cmc
loop
cld
in
sbb
popa
pop
inc
aaa
jp
cwtl
ds
mov
es
out
es
dec
lods
mov
mov
into
add
and
pop
sub
inc
sti
loopne
add
add
add
lret
xchg
in
loope
jb
pop
mov
sub
mov
and
jge
xchg
push
fwait
cmp
fwait
xchg
or
mov
iret
push
out
cld
cmpsb
rolb
sbb
xor
push
fs
stc
cmp
pop
push
ds
push
repz
dec
fwait
mov
mov
mov
jge
mov
adc
pop
rolb
frstor
or
sar
cmp
xchg
call
lods
sub
mov
push
mov
adc
sbb
pop
out
push
dec
jecxz
jo
addr16
in
call
or
cld
add
inc
jns,pn
or
push
nop
movsl
fbld
dec
shlb
fbstp
pop
loope
cwtl
adc
jns
ja
arpl
mov
les
adc
out
movsl
pop
inc
cmp
cmp
out
fwait
jns
fmull
bound
les
pop
out
in
mov
adc
stc
mov
icebp
and
rcrb
cmp
pop
adc
sub
fisttpl
mov
aam
push
pushf
addb
adc
sahf
adc
imul
xchg
into
cmp
test
mov
mov
imul
andb
cmp
sbb
rclb
and
out
cmc
loopne
jmp
adc
sarl
bound
mov
jp
std
adc
dec
cmc
xchg
in
gs
scas
imul
or
jge
faddl
xchg
sbb
or
lret
hlt
mov
push
sarb
or
sub
stc
cmp
jns
mov
dec
mov
nop
lea
add
mov
pop
stos
out
pop
push
add
sub
aad
pop
iret
cld
int3
aaa
cwtl
cwtl
mov
lret
loopne
adc
nop
dec
je
jg
mov
adc
adc
push
mull
stos
cmpl
sub
and
bound
insl
out
mov
fdivrs
xor
sbb
or
pushf
push
pop
test
add
mov
and
xor
in
daa
add
pop
sti
mov
inc
mov
clc
lcall
add
adc
sub
pop
dec
push
inc
mov
popf
inc
cltd
popf
das
cld
int3
jmp
repnz
mov
adc
clc
ja
clc
xchg
pop
sahf
mov
fstps
sbb
enter
cmp
out
mov
clc
sub
stos
aad
out
xor
mov
or
lds
push
inc
outsl
sti
mov
adc
daa
adc
xchg
and
inc
loop
sub
inc
pusha
cwtl
push
insl
add
pop
xchg
cmp
dec
pop
out
scas
jne
adc
ror
popa
insl
jbe
jl
adc
xchg
call
push
or
cmpsb
xchg
cmpsl
out
mov
ja
mov
aaa
ss
sahf
xor
test
fadds
loopne
sar
and
and
or
cmp
and
shlb
pop
aam
fcomi
inc
data16
cli
push
sarb
loope
and
notb
or
ljmp
xor
mov
call
js
mov
imulb
mov
ja
jns
sbb
dec
cli
jecxz
lcall
cltd
mov
inc
or
fsts
xor
pop
daa
and
shlb
xchg
mov
inc
xor
lret
sub
imul
mov
leave
jo
test
test
hlt
or
mov
in
jp
fld
sbb
lods
mov
jge
cmp
mov
or
mov
sub
in
cmpsb
mov
sub
push
sbb
cwtl
fst
aam
into
mov
cmp
aaa
outsl
stos
out
aad
lods
add
push
dec
fcmovnu
adc
xchg
mov
cmpsb
pop
adc
pop
mov
test
aaa
leave
lods
ror
mov
add
aas
insb
mov
add
sbb
ret
push
add
test
clc
jl
mov
in
sbb
push
mov
mov
movb
ret
adc
jns
cs
ds
lods
jne
push
jno
jecxz
sbb
popa
lea
cmp
sbb
mov
int3
out
jmp
adcb
out
sti
inc
lret
inc
aad
dec
lods
movsl
stc
cltd
iret
jae
jp
jl
test
fbstp
lds
jb
mov
in
loop
xchg
mov
add
test
test
xorb
js
arpl
orl
mov
sub
xor
ljmp
cmp
divl
mov
dec
cmp
mov
push
into
dec
rorb
call
scas
mov
fsubrs
cmc
and
cld
dec
fwait
push
mov
push
movl
outsb
clc
dec
outsl
sbb
mov
mov
add
imul
jbe
jecxz
ja
ret
xor
sbb
repnz
scas
jle
xor
sub
push
jae
jns
mov
imul
sbb
xor
out
ss
stos
imul
inc
dec
ja
fwait
daa
dec
mov
ss
cwtl
jne
jbe
or
pop
xor
inc
jge
leave
dec
arpl
inc
imul
sbb
in
dec
fwait
rolb
push
addl
out
int3
fsts
mov
insb
adcl
sbb
xchg
xchg
imul
addr16
ret
xchg
mov
xor
push
inc
ret
cmp
xchg
es
clc
scas
mov
andl
pop
bound
push
or
nop
push
es
lret
push
fs
xor
cli
or
jmp
mov
mov
xchg
inc
add
xchg
in
adc
add
sbb
xchg
int
dec
imul
lea
ss
or
jbe
adc
mov
push
fisttpll
fs
and
daa
jbe
lret
test
ds
out
dec
sti
jns
or
imul
je
mov
dec
inc
clc
das
mov
push
lea
test
outsb
xor
jmp
push
test
js
into
pop
xor
push
movl
lods
data16
mov
mov
mov
bound
leave
sub
and
sbb
push
out
xor
xlat
sbb
mov
pop
jge
mov
adc
adc
xchg
lret
lock
fsubs
xchg
cli
sub
ja
push
push
push
adc
popf
mov
insb
sub
pop
dec
add
push
outsb
jge
inc
jmp
out
rclb
pop
xchg
cmp
mov
scas
scas
xor
mov
jecxz
xchg
lcall
idivl
add
and
pop
sti
mov
add
jb
ss
sbb
ret
movsb
jecxz
push
rcll
aam
or
xor
mov
xor
dec
out
jbe
loopne
jp
adc
fldt
cmc
cs
outsb
lock
notb
lret
push
imul
lahf
mov
in
sahf
imul
loop
std
xchg
mov
dec
cmp
push
gs
jbe
nop
loop
sbb
cmc
and
shll
cltd
inc
fimuls
scas
sbb
jp
in
mov
add
stos
mov
test
in
add
js
and
addr16
test
cmpl
mov
pushf
add
pop
fdivrs
gs
jbe
inc
cli
jmp
xchg
mov
jmp
pop
fadd
out
int3
or
inc
inc
out
and
mov
ss
loop
or
jbe
cmc
sub
ljmp
mov
rcll
push
xchg
loop
push
inc
dec
push
mov
test
xchg
and
mov
push
hlt
testl
fnstcw
lods
jmp
divps
imul
mov
inc
into
loop
pop
sbb
xchg
and
and
jo
push
mov
fcmovnb
divb
loope
sbb
mov
push
imul
xchg
repz
das
ds
rcrb
or
loope
adc
push
xchg
insl
fnstcw
jmp
inc
jo
mov
jle
mov
xlat
hlt
clc
out
dec
bound
sti
in
adc
cs
ret
pop
add
ljmp
pusha
fadds
subb
cwtl
fdivl
lock
xchg
adc
mov
xchg
jle
adc
xor
adc
adc
sub
sbb
les
adc
stos
ret
jns
dec
scas
and
pop
fdivr
inc
sub
jno
cwtl
sub
xor
in
fwait
sbb
and
mov
or
jl
jle
jl
adc
push
cld
or
mov
lods
or
filds
add
scas
rclb
jmp
adc
pop
notl
and
pusha
adc
mov
popf
addr16
mov
pop
lahf
xor
fdivrs
cmp
std
xchg
decl
out
and
jecxz
test
ljmp
jae
push
into
ret
scas
pop
pop
cwtl
sarb
lret
repz
fadds
push
xor
cmp
in
jge
movsb
call
mov
sahf
add
lods
pop
dec
xchg
dec
sub
aad
icebp
sub
or
std
int
outsb
jecxz
ljmp
push
inc
jge
out
mov
mov
les
jne
cmpsl
add
testb
fisubs
and
pop
fcoml
call
mov
sub
cmc
inc
fcoms
lret
push
test
jge
lea
sti
icebp
sbb
dec
rcll
enter
push
rorl
mov
cmp
fisttpll
insb
dec
or
les
out
or
call
daa
cmp
and
mov
daa
incb
int3
mov
jl
out
leave
dec
sub
aam
ljmp
dec
ffreep
addb
stos
mul
cmc
out
dec
lods
mov
insb
push
in
and
icebp
movsb
dec
std
jne
mulb
fcmovnu
or
sar
out
fsubrs
repnz
inc
rcrl
in
jl
sub
cmc
fisttpl
or
shrl
lahf
mov
lahf
or
cmp
outsb
push
jns
inc
test
or
jmp
ficoms
inc
pop
mov
push
fldcw
sub
sub
xor
popl
inc
or
dec
jle
xchg
call
mov
test
leave
mov
lock
jnp
aam
fcoml
mov
xor
scas
test
push
negb
push
and
and
jb
outsb
cmp
mov
ds
dec
repz
adc
ret
repz
pop
pop
mov
xor
sbb
mov
add
and
and
movsb
stos
jbe
push
or
mov
cmp
push
js
cmp
rorl
div
jg
mov
aas
xor
mov
pop
int3
jge
mov
stos
sti
arpl
and
jne
out
jge
nop
sbb
inc
mov
rclb
sbb
rcll
push
rdtsc
jne
lea
enter
dec
insl
inc
test
imul
push
mov
inc
pushf
dec
int
push
mov
test
add
pop
or
popl
jp
aam
jl
jnp
mov
sahf
xor
sbb
sarl
iret
xchg
cwtl
jno
imul
dec
sti
xorb
aaa
jno
test
ret
cmpsb
and
divb
adc
sub
cmp
pop
jno
dec
shrl
es
inc
movb
jmp
test
aam
sahf
push
mov
popa
cmp
ret
outsl
ret
out
sub
cmp
negb
dec
ret
into
push
fdivrs
sub
ja
push
rolb
pop
jl
ret
stos
scas
xor
fildl
xor
lods
pop
bound
pusha
loope
and
aaa
pop
nop
fisubl
std
cs
mov
out
pop
push
hlt
mov
rcll
pop
mov
sub
leave
dec
jbe
mov
setb
add
stos
bound
push
inc
rclb
neg
jne
mov
pavgw
testl
loop
jo
jnp
pop
lock
das
out
sahf
fmul
js
cmpsb
sub
lea
add
in
jae
out
push
add
inc
out
movsl
inc
mov
test
dec
mov
inc
xchg
out
mov
jp
inc
and
cmp
dec
in
iret
test
movsl
mov
test
orl
or
or
out
mov
jp
imul
jb
dec
test
ljmp
roll
dec
das
ds
dec
pop
sar
adc
adc
xchg
cmp
shr
push
dec
and
xor
mov
jmp
mov
xor
hlt
ret
cld
int
adc
in
fildl
pavgb
add
push
push
dec
xor
insb
push
mov
and
lock
aam
push
mov
sub
and
mov
xorb
push
mov
sar
out
call
enter
xchg
jns
imul
push
pop
sbbl
sub
pop
ss
cmpsl
pop
mov
adc
lret
les
loopne
and
fldt
dec
aaa
out
sbb
xchg
adc
fcomp
add
mov
rclb
call
roll
ret
mov
repnz
xchg
jno
ss
pop
fldl
inc
xchg
inc
lahf
stc
mov
lods
into
xchg
add
aam
xchg
enter
jle
push
pop
push
in
nop
add
fcmovb
enter
sub
testb
pop
dec
xor
inc
in
pushl
imul
lcall
mov
mov
out
shlb
push
gs
cmpsb
call
stos
das
lahf
add
xor
sub
repnz
icebp
cmc
insb
iret
dec
mov
loopne
jmp
pop
cli
inc
pop
test
jp
int3
in
xor
adc
ja
xchg
outsb
in
jecxz
push
mov
ja
jge
mov
mov
pop
adcb
jmp
mov
loop
mov
and
jl
sbb
sub
jg
push
shlb
push
lods
or
xor
xchg
stc
mov
mov
arpl
or
scas
sub
ds
sub
out
in
cld
lods
icebp
xchg
jno
push
adc
out
mov
js
adc
inc
mov
cmp
jne
push
xlat
mov
sub
pop
scas
lret
std
cli
stc
xorl
sbb
xchg
fucomp
pop
mov
clc
stc
fimuls
mov
jge
dec
add
xor
shrl
loop
xor
test
cs
push
mov
inc
inc
or
sbb
imul
out
mov
sub
movsl
jmp
cmp
jnp
and
test
icebp
inc
fstps
outsl
mov
imul
loopne
mov
push
mov
test
das
lock
dec
ljmp
cmp
in
imul
push
mov
jb
test
xor
add
xchg
jne
pop
test
mov
mov
pop
pop
dec
sbb
test
mov
dec
lds
push
nop
pop
test
mov
cmpsl
push
mov
xchg
inc
mov
add
pop
aaa
repz
sub
aad
aad
sar
loop
mov
push
fisubl
jns
pop
dec
pop
adc
aas
scas
inc
ret
add
int3
cld
icebp
cltd
push
xor
inc
jno
in
push
push
cld
out
pushf
xchg
fdivrp
insb
push
mov
in
and
nop
cwtl
sti
mov
pop
mov
jo
pop
push
xor
sbb
jbe
test
adc
xchg
inc
mov
ds
rcrl
das
add
cwtl
xchg
fwait
sub
dec
sub
pop
jnp
cltd
mov
mov
mov
cli
and
dec
dec
mov
js
repz
test
in
mov
cltd
add
les
pusha
imul
sub
inc
push
push
inc
mov
mov
fwait
xchg
cmpsb
mov
insl
and
fldt
xchg
add
test
aad
cmp
and
popa
mov
xchg
sbb
mov
popf
mov
into
push
xchg
fdivrs
cmp
xchg
cwtl
decl
xorl
adc
xchg
xchg
in
test
stos
xor
stos
pushf
mov
pop
pusha
into
into
push
sbb
stos
push
xor
xchg
cld
pop
cmp
jnp
and
pop
cmpsl
fnsave
int
jecxz
data16
js
rcll
fwait
dec
inc
pop
lods
sahf
inc
lahf
movsl
ret
es
and
fisttpl
and
sub
mov
sbb
pop
movhps
dec
aaa
mov
mov
inc
imul
loop
shll
imul
mov
jb
shrl
add
xchg
dec
adc
subb
add
hlt
mov
in
inc
inc
sub
sbb
rcl
sarl
adcb
cmpl
or
outsb
push
fmull
adc
negb
sub
in
adc
cmp
dec
dec
and
jecxz
sbb
or
pop
xor
add
push
fdivl
push
sub
mov
movsl
call
jl
pop
std
or
adc
mov
sub
adc
or
mov
jo
mov
dec
lods
nop
xchg
bound
xchg
cmpsb
test
cmp
dec
dec
xchg
or
cmc
xchg
push
fbstp
xchg
xchg
mov
add
pusha
rorl
sahf
mov
push
jns
adc
sahf
adc
or
mov
sub
push
mov
pop
in
xchg
mov
mov
popf
pop
mov
mov
mov
cmp
pop
mov
lods
rcr
cmpsb
lock
ljmp
gs
inc
adc
mov
gs
enter
xchg
scas
sub
imull
and
lret
jmp
jns
pop
nop
or
hlt
movsb
scas
push
mov
repnz
pmulhw
and
jnp
mov
mov
push
adc
dec
and
and
cli
push
sub
in
daa
mulb
cld
sbb
cli
jle
xor
icebp
int3
adcl
jne
mov
dec
cmp
dec
jmp
and
dec
aaa
push
and
and
inc
loope
xchg
or
loopne
mov
push
decb
and
jmp
icebp
lds
imul
or
and
inc
cmovle
insl
bound
aad
shr
insb
xchg
xchg
jb
adc
lock
cwtl
jns
arpl
das
cmc
inc
jbe
xlat
adc
aaa
fnsave
jg
xchg
sbb
loopne
mov
inc
dec
imul
shl
pop
sbb
jle
mov
arpl
adc
cmpb
xchg
jecxz
mov
cmp
lods
inc
leave
jae
mov
or
nop
pop
je
gs
lcall
sbb
mov
push
inc
lcall
sbb
and
outsl
mov
movsb
lods
adc
xor
pop
sbb
xor
int
or
dec
sub
fbld
xor
push
cli
pop
jmp
mov
pop
push
xchg
dec
in
jns
or
pop
inc
mov
sahf
ja
dec
aam
movsl
add
sub
iret
push
xor
fs
sub
icebp
push
push
jo
imul
dec
jg
xchg
lret
mov
sbb
cwtl
and
hlt
jp
movsl
aaa
fidivl
inc
mov
pop
js
inc
outsb
dec
push
bound
adc
js
push
test
add
sti
mov
das
pop
mov
xor
jg
loopne
gs
orb
cwtl
fdivs
aas
inc
fmull
adc
sbb
les
adc
xorl
and
dec
or
mov
fnstenv
pop
jp
outsb
aad
mov
pop
add
sbb
add
int
sbb
cmc
mov
cmp
mov
flds
aas
cwtl
push
jne
repz
leave
call
dec
fsubr
cltd
jl
into
cmpsl
sbb
movsb
shrl
in
and
xchg
das
test
pop
imul
pop
add
pop
xchg
bound
xchg
lret
addb
stc
jae
jns
outsb
push
push
stc
pop
cmp
inc
push
sti
add
lods
xchg
clc
sub
fs
scas
inc
push
pop
stc
ljmp
jp
dec
pop
loop
shr
lods
shll
jmp
sbb
dec
pop
std
scas
push
inc
arpl
mov
inc
cmp
inc
out
es
mov
lods
or
mov
out
xchg
dec
fcmovnb
pop
shrl
jp
test
test
repnz
test
jb
imul
xor
insb
and
adc
sahf
mov
jnp
inc
mov
or
jmp
xlat
nop
pusha
jne
pop
cmpb
mov
mov
out
std
ja
shr
push
ja
inc
xchg
push
push
mov
lds
xchg
jmp
or
pop
mul
ja
sbb
fcompp
jmp
arpl
leave
stos
and
sbbl
push
nop
push
icebp
test
xorl
xchg
mov
mov
xor
hlt
cld
mov
loope
jnp
xchg
insb
fs
add
add
cmpsl
arpl
cmpsl
dec
dec
ljmp
je
dec
lods
std
aaa
dec
lss
lret
add
xchg
movsb
enter
mov
pop
ret
int
into
xor
repnz
and
lds
adc
mov
adc
or
sub
jno
pop
jecxz
lds
fcmovbe
sbb
mov
mov
mov
cmp
js
and
or
sbb
add
lods
in
xchg
or
and
loop
mov
fidivrl
clc
inc
inc
xor
pop
loopne
lods
int
sbb
iret
outsl
addr16
inc
and
adc
xor
lods
sbb
fucomip
js
and
mov
mov
and
imul
and
mov
call
jmp
std
daa
and
mov
fstl
cmp
lret
lods
es
jl
mov
int
sbb
jecxz
sbb
adc
in
stos
sti
movsb
pslld
negb
ljmp
pop
pop
stos
jl
adc
adc
mov
and
lret
xor
jg
bound
popf
fildl
loope
cmp
adc
ror
pop
icebp
pop
mov
test
fstps
scas
lods
xor
mov
sbb
mov
insl
xchg
sahf
ret
mov
mov
icebp
popf
mov
jae
mov
ja
test
dec
sbb
mov
xor
pop
dec
jo
xchg
or
inc
pop
add
mov
loopne
mov
das
in
mov
rcll
cmpsl
loopne
push
and
push
jmp
jb
repnz
fimuls
dec
adc
lret
shufps
insl
aaa
faddl
xchg
mov
mov
js
cmp
pop
push
cs
push
stc
cltd
subl
sub
gs
dec
mov
in
add
inc
sbb
test
sbb
call
call
cmpsl
cmpsl
or
jl
lret
ja
pop
jbe
push
pop
mov
push
cmp
push
inc
cld
lock
movb
lods
sti
mov
call
cmp
fnstcw
shll
push
inc
mov
jp
xchg
insl
mov
cmc
lret
lock
mov
fsts
push
pusha
xchg
test
cmp
push
hlt
addr16
push
fisubs
adc
and
cli
cmpsl
pop
push
pop
dec
mov
jle
pop
xor
out
cmpsl
push
cmp
fidivrl
dec
jo
dec
push
pcmpgtw
into
and
push
and
in
push
insl
adcl
dec
pop
js
adc
dec
fsubrl
push
les
adc
xchg
pop
data16
stos
dec
leave
adc
cmp
shll
outsb
scas
pushf
mov
aam
sub
adc
loop
cmpb
nop
and
mov
lods
int
ss
add
ja
ds
mulb
push
xorl
pop
fs
jnp
add
ljmp
pushf
std
jl
adc
sub
fwait
insl
jecxz
xor
mov
aad
xchg
xor
stos
xchg
aas
xchg
sbb
insb
add
xchg
and
pop
je
es
aas
push
sub
xchg
inc
push
lock
test
cmp
repnz
std
xchg
imul
jle
push
out
leave
xchg
loopne
nop
mull
int3
addr16
loop
addl
pop
or
cli
int3
dec
addr16
mov
gs
add
lea
loopne
and
inc
push
cmpsb
mov
and
pop
pop
fstps
icebp
adc
pop
sub
ds
and
iret
jle
flds
cmp
out
loop
jp
stc
sub
test
mov
mov
inc
mov
push
jnp
mov
adc
adc
les
dec
sbbl
pop
stos
jl
sub
sub
xor
je,pn
sbb
pop
in
and
imul
jns
xor
sarl
fs
jb
push
inc
or
xchg
in
stos
jnp
mov
outsl
pop
mov
sahf
dec
arpl
jp
sub
mov
xchg
sub
rcll
iret
and
and
ret
pop
iret
stos
mov
fadds
xor
test
mov
mov
pop
inc
cmp
ljmp
dec
ljmp
nop
inc
clc
imul
mov
push
mov
js
mov
hlt
cmp
popf
inc
sti
nop
push
xor
mov
in
mov
mov
std
or
xor
or
imul
mov
rcrl
divl
lea
jle
ret
add
in
pop
fucomi
ret
imul
mov
stc
out
pop
sub
pop
adc
fucomip
mov
xor
imul
jo
and
cmp
rcr
pop
pop
mov
pop
mov
call
dec
lods
pop
pop
add
xor
cwtl
or
stos
mov
mov
jns
out
cmp
push
xchg
dec
add
mov
inc
mov
cmpsb
test
dec
int
and
xor
xchg
mov
push
ret
xchg
cmp
addb
cmc
les
out
mov
insb
sub
sub
inc
or
pop
inc
test
sub
sbb
or
popf
mov
jecxz
jnp
pop
scas
lods
pop
mov
pusha
jnp
push
jge
sub
ljmp
mov
adc
jno
mov
mov
movsb
cmp
in
xor
fsubl
and
jo
xchg
or
rorl
jbe
fisttps
jno
sub
mov
dec
ljmp
sbb
inc
int
gs
dec
xchg
mov
notl
xor
fwait
fwait
stc
xor
fnsave
push
xchg
cld
std
cld
jp
je
outsb
lret
add
loope
lea
sbb
jne
xor
addb
pop
add
dec
ror
lahf
aas
ret
fucomp
push
leave
add
pop
jbe
aad
test
insb
jnp
push
jbe
in
mov
mov
jnp
and
fwait
cmc
mov
leave
cmp
les
iretw
cmp
mov
cmp
add
mull
dec
pop
push
cmp
xor
cmp
add
sbb
fwait
sbb
add
test
xlat
inc
lahf
adc
scas
sti
arpl
xor
jae
call
dec
addr16
test
cli
jmp
push
lcall
jo
push
jecxz
sahf
mov
dec
imul
adc
sahf
mov
mov
mull
ss
cmp
lcall
scas
pop
xor
ja
xlat
leave
loop
jg
lret
xchg
push
or
sahf
sub
js
das
and
das
push
and
add
addr16
and
push
mov
aas
cmp
in
jmp
push
xchg
loopne
fstpl
cmp
pusha
dec
adc
ret
xor
fisubs
xchg
imull
shl
stc
imul
jae
pusha
fsubs
push
mov
or
pop
xchg
push
fisubrl
xor
lock
push
mov
bound
jne
adc
xchg
jae
or
pop
iret
add
cs
xchg
push
icebp
pop
mov
test
iret
or
xchg
mov
leave
outsb
insl
mov
nop
push
mov
fwait
std
mov
std
xchg
jmp
cmpsb
adcb
push
xchg
push
lods
dec
fwait
and
outsb
mov
mov
outsb
xor
jnp
pop
cmp
lahf
rolb
inc
test
lds
icebp
inc
jno
js
add
and
sbb
mov
shrl
scas
gs
mov
sbb
shl
add
push
mull
lret
out
fs
jmp
mov
clc
jae
js
loopne
sbb
push
movsl
pushf
in
xor
stos
sub
adcl
mov
add
out
pusha
movsb
xchg
sahf
push
stos
adc
cmp
jmp
xchg
push
pop
pop
dec
andps
dec
das
jg
inc
add
jmp
jge
out
jae
clc
bnd
out
xor
push
js
fs
out
or
mov
shl
fstpt
sti
fdivp
cmp
fisubs
leave
dec
popa
mov
ss
push
and
clc
enter
mull
jns
sub
push
xor
mov
add
inc
mov
jae
mov
clc
mov
xor
imul
push
mov
loopne
inc
sub
mov
or
loop
lcall
xchg
mov
jnp
push
lret
inc
inc
lret
xchg
ficoml
jo
push
sbb
arpl
js
sub
hlt
inc
ja
xchg
mov
ja
cmpsb
lahf
jecxz
bound
addr16
push
mov
mov
add
inc
push
loope
icebp
jae
dec
gs
mov
lds
test
sub
sbb
pop
lea
pop
adc
and
out
rcl
pushf
scas
imul
jb
fildll
fistl
fisttpll
jne
les
rorl
cmp
rcr
adc
push
sbb
inc
jp
jo
mov
iret
sar
aaa
cmpsl
test
sub
jae
or
lahf
push
mov
aad
pop
mov
jecxz
jb
pop
and
sub
lock
and
sbb
mov
mov
push
aas
outsl
push
nop
sub
mov
jle
clc
mov
cld
jae
lret
and
or
aam
fisttps
sbb
daa
dec
add
fcoms
test
jp
fisttpl
adc
and
xchg
push
and
adc
cmpb
adc
jecxz
jge
sarl
std
push
jmp
or
imul
ret
adc
xlat
mov
imulb
test
add
push
push
xor
pop
pop
mov
leave
add
dec
or
pushf
xlat
lods
cltd
cmp
fwait
pop
adc
jmp
insl
rorb
jl
in
jge
xor
push
sbb
shrl
mov
inc
jne
and
adc
pop
movntq
arpl
adc
xor
mov
lock
and
cmc
mov
dec
mov
sar
mov
in
gs
sbb
into
fstpt
sar
out
sub
adc
stos
cmp
outsl
cmp
repnz
mov
nop
cltd
aas
lcall
xchg
mov
out
outsl
add
mov
push
mov
adc
jle
add
loopne
add
adc
jnp
jp
test
or
jl
dec
mov
in
in
xchg
in
mov
add
adcb
pushf
fwait
mov
mov
jle
loope
mov
repnz
mov
push
sub
add
pop
sbb
lds
jae
mov
mov
insl
push
inc
leave
mov
popa
movlhps
loope
stos
scas
pusha
sbb
or
aam
push
shrl
xchg
sbb
xchg
xchg
ret
add
xchg
shl
and
dec
jo
pop
adc
pop
enter
cltd
push
add
aam
push
dec
or
mov
cltd
adc
scas
xor
fldl
dec
daa
mov
cmp
pop
inc
data16
xchg
in
and
xor
ljmp
jnp
jmp
shrl
mov
pusha
xchg
mov
lods
xor
icebp
lret
ja
das
jnp
xchg
in
std
jmp
mov
fists
bound
imul
mov
mov
in
aad
mov
arpl
mov
scas
clc
ret
mov
fcmovne
dec
inc
xor
retw
mulb
inc
inc
xlat
out
es
or
lahf
mov
mov
into
addr16
fdivrl
cmc
lret
or
mov
sub
cmp
add
push
hlt
cmpsl
loopne
add
pop
in
gs
ljmp
loop
nop
gs
mov
aas
insb
jle
xchg
and
inc
mov
ss
sub
enter
jbe
mov
mov
roll
adc
icebp
xchg
loopne
mov
xchg
xchg
push
lcall
mov
mov
mov
adc
leave
test
inc
dec
icebp
dec
sub
scas
pushf
popl
je
sbb
jecxz
mov
and
daa
add
cmp
mov
cmp
call
mov
mov
lds
sub
fisubrs
add
cs
movsl
xor
lret
fcoms
lcall
sbb
mov
les
enter
iret
dec
hlt
mov
xchg
jae
push
fstl
push
push
cli
ret
fwait
not
stc
inc
cld
add
jno
fiaddl
lret
jmp
out
cltd
inc
int
out
push
or
mov
out
je
pop
fsubl
add
faddl
inc
xchg
hlt
mov
xchg
xor
add
ja
rcrl
rclb
dec
xchg
lds
popf
pop
sub
mov
rcll
js
adc
rclb
xchg
mov
push
xchg
sub
out
fmuls
jb
sub
cmp
ljmp
faddl
shll
lcall
pop
xlat
dec
dec
arpl
jp
aas
addl
push
rclb
in
movsb
adc
push
cld
mov
aas
and
push
int3
add
mov
rcll
xor
fs
int3
xor
adc
mov
imul
imull
lret
sub
leave
mov
jg
or
movsbl
ja
inc
nop
mov
pop
loope
sub
and
push
push
mov
mov
cmp
scas
arpl
xchg
push
push
mov
add
in
add
inc
dec
xchg
test
push
jae
cmpb
sub
inc
lds
mov
pop
mov
int
shll
lods
cmp
adc
cmpsl
insw
xor
inc
mov
mov
mov
aam
xchg
xor
fisubl
gs
aaa
xchg
imul
out
pusha
xor
icebp
push
push
imul
fdivrs
and
les
lret
addl
cmc
in
aam
outsb
fs
jne
sbb
stos
loop
movsl
jns
mov
push
out
mov
mov
push
dec
jmp
sti
or
xor
test
sarb
cmp
scas
test
int3
sbb
gs
in
aam
ror
sub
in
cli
cmpsb
jle
adc
sarb
lret
jb
and
sbb
add
inc
cli
jb
wrmsr
add
shll
test
pop
or
mov
cli
pop
pop
mov
jmp
mov
mov
cli
xor
stc
cltd
outsb
add
test
and
mov
cmp
jmp
loope
jl
inc
adc
rcrl
inc
lds
lret
push
pushf
push
xchg
or
mov
jo
js
add
cmpsl
push
mov
rcrl
nop
or
mov
rcl
mov
dec
mov
pop
pop
jbe
xchg
adc
mov
std
push
cmp
enter
arpl
xor
pop
lock
sbb
jge
icebp
sti
sbb
int3
push
std
jle
inc
subl
mov
push
loope
in
cmp
jbe
add
xlat
lret
in
push
xorb
sub
inc
lret
aam
add
add
cmp
pop
jl
ss
xchg
movnti
scas
dec
repnz
dec
push
xchg
test
mov
jbe
lock
out
lea
fisubl
xor
add
movsb
decl
dec
aam
mov
xchg
xor
pop
in
mov
cmc
add
cmp
dec
mov
fidivrs
mov
xor
int
or
xor
pop
mov
mov
push
sbb
pop
add
mov
push
pop
xor
movsb
popf
js
ret
cpuid
add
shlb
jecxz
arpl
jmp
mov
movhps
mov
jnp
iret
sub
xor
lahf
icebp
adcb
add
xchg
add
repnz
pop
lahf
xchg
mov
push
mov
cli
imul
shl
sub
idivb
xchg
jecxz
daa
inc
filds
jnp
mov
sbb
ljmp
xor
inc
and
mov
or
push
dec
push
fsubs
popf
xchg
jnp
call
faddp
cmp
and
shlb
cmp
pop
xchg
push
dec
pop
mov
cli
clc
and
jg
cltd
dec
and
push
push
addr16
repnz
adc
sbb
out
adc
lock
pop
je
jne
dec
mov
adcb
sbb
push
out
addl
lea
sahf
int
jbe
jge
pop
mov
rcrb
nop
cmp
mov
sbb
or
icebp
in
dec
std
jp
sbb
xor
arpl
or
popa
imul
inc
pop
cmp
inc
outsb
sub
and
adc
dec
dec
sbb
jp
push
jnp
ja
pop
fistpll
out
js
sarl
cli
repz
aaa
xchg
and
rcll
inc
nop
test
push
shl
fdivs
adc
fmuls
or
mov
jbe
ficoms
leave
sub
sbb
in
mov
inc
stos
into
cwtl
push
inc
ljmp
adc
imul
inc
xchg
out
js
jae
pushf
out
add
je
mov
dec
outsl
inc
mov
mov
sbb
or
or
add
mov
out
mov
or
sbb
mov
xchg
push
lcall
das
xchg
inc
out
in
xchg
push
push
mov
mov
in
and
nop
mov
adc
mov
sbb
adc
mov
pop
cmp
fisttpl
loop
mov
push
pop
dec
push
xchg
das
xor
cltd
lahf
pop
push
test
mov
out
out
jmp
out
repz
push
sbb
sbb
imul
scas
xor
mov
push
jbe
mov
sub
in
pop
and
into
xchg
xchg
mov
mov
xchg
sub
xor
int3
sbb
leave
shlb
popf
outsb
xchg
push
imul
mov
dec
cmp
mov
js
lcall
aas
loope
push
dec
call
rcr
mov
pop
mov
cwtl
mov
mov
cld
mov
mov
movsl
pop
push
out
hlt
push
xchg
rclb
fwait
loopne
mov
jg
in
sub
add
stos
inc
aad
mov
cmp
or
lahf
es
mov
adc
add
test
jp
mov
scas
xchg
bound
imul
jnp
push
cmc
pop
xor
adc
sbb
dec
xchg
or
or
scas
in
cmp
je
push
scas
insb
les
mov
sbb
loopne
sbb
fisttpl
rorb
sub
jbe
js
jl
xor
fcomps
pop
aas
add
jg
push
in
data16
imul
adc
xchg
cmpsb
test
push
outsb
dec
pop
xor
cs
incb
ja
mov
fucom
or
cmpb
out
popf
sub
dec
push
mov
jns
cltd
adc
fcoms
imul
mov
stos
das
xchg
xchg
dec
or
dec
dec
cmp
inc
clc
ljmp
dec
or
loop
mov
ss
xor
inc
xor
ljmp
pop
inc
inc
cmpl
andb
popl
adc
jg
sbb
popf
and
fmull
pop
pop
pop
das
mov
pop
adc
lret
pop
sbb
ltr
jnp
xchg
sbb
je
pop
shlb
push
dec
daa
das
lds
mov
cmc
push
and
jp
sub
insl
jns
jg
push
das
lds
cmp
shrb
sub
pushf
inc
jmp
fisttpll
rcrb
push
and
push
das
push
cmp
pop
xchg
adc
roll
and
mov
nop
xor
out
cmpsl
jb
aad
pop
insb
xchg
jae
jo
mov
lahf
mov
iret
les
jnp
cmc
sub
mov
inc
dec
aad
or
mov
or
dec
js
rorl
xor
rolb
mov
popf
add
out
sahf
sahf
add
pop
jno
ss
cwtl
rorb
ret
and
call
pop
ret
mov
xchg
ret
sbb
and
lock
sub
xlat
cwtl
jmp
dec
mov
leave
scas
andl
xchg
aas
cmp
in
push
or
adc
cmp
mov
pop
pop
out
inc
cli
jbe
jmp
push
sbb
fnstcw
xor
or
xchg
cmp
nop
sbb
mov
fmull
enter
cwtl
cld
sub
xchg
insb
sarb
adc
lret
or
jo
jnp
cmc
addr16
and
ret
inc
sbb
aas
rcl
fnstenv
jg
or
shll
test
rcr
lret
and
rcrb
mov
mov
or
out
or
push
shr
imul
lock
mov
insw
repnz
hlt
ds
in
int3
sbb
cmp
jbe
jl
or
fnstsw
lahf
lret
sbb
jbe
loopne
jle
mov
pop
sti
mov
shr
sahf
and
sbb
jg
loop
adc
adc
jp
int
jmp
xor
leave
push
lea
push
adc
in
inc
mov
mov
imul
inc
jg
into
mov
iret
pop
jae
enter
pop
sbb
ficoml
jae
adc
add
jl
insl
pop
aaa
or
repz
lea
loop
push
inc
fistpl
push
ss
adc
or
mov
nop
xor
jo
imul
pusha
sbb
test
fstl
aad
cmp
or
sahf
pop
mov
xlat
arpl
jns
cmp
dec
pop
fwait
cmpsb
push
or
dec
cmpsb
add
fmull
jge
xchg
or
icebp
bound
rcll
mov
xchg
mov
push
xor
sbb
lfs
add
lods
sub
ret
cmp
mov
imul
mov
scas
push
movsb
inc
push
push
jne
adc
push
decl
repnz
mov
sbb
ss
pushf
push
jmp
test
addb
and
pop
cmc
sets
push
xchg
dec
and
nop
les
sub
lock
clc
scas
add
xor
ret
ds
je
inc
int3
out
js
or
enter
add
inc
lret
mov
mov
dec
cmc
mov
test
and
ss
cmp
xor
psubw
int3
mov
loope
sub
cli
inc
adc
aaa
xlat
mov
test
dec
jns
inc
imul
mov
or
xchg
push
lret
xor
lahf
repnz
sbb
mov
int3
sbb
mov
jecxz
aas
jge
icebp
push
mov
bound
xlat
sub
add
out
push
icebp
jp
lret
cmpsl
enter
inc
cld
nop
xor
mov
mov
cmp
sbb
std
lods
mov
mov
pop
test
ja
pop
add
dec
pop
es
dec
shlb
lds
xchg
pusha
ja
pop
adc
xchg
loope
jne
insl
dec
into
xchg
xor
loopne
or
test
or
les
pop
push
rorl
pop
sbb
loop
jne
pusha
mov
popf
sub
or
xchg
pop
xchg
je
push
push
mov
out
and
pop
cltd
mov
xor
xor
pop
ja
fs
and
mov
cmc
cmpsl
xchg
fistl
addl
lret
push
and
mov
iret
div
xor
dec
stc
sub
xchg
call
push
outsb
fisttpl
xor
inc
dec
test
cmc
fwait
arpl
pop
int3
aaa
movl
std
lods
and
pop
addr16
repnz
popa
mov
dec
mov
cmpsl
adc
mov
in
int
mov
hlt
rclb
imul
xor
cmc
pop
dec
pusha
cmp
jns
insl
icebp
xchg
or
and
mov
fimull
testb
out
adc
or
lahf
push
dec
sbb
sbb
imul
ja
mov
xchg
xor
mov
repnz
lock
cli
lods
mov
sub
dec
int3
fimull
lret
pop
stc
mov
test
hlt
push
sub
int
or
aas
push
dec
sub
inc
dec
js
movl
js
fstpl
mov
fcmovnbe
inc
mov
repnz
fidivrs
or
xor
call
pop
loope
out
out
in
jb
cli
mov
push
mov
movsb
lcall
pop
xor
add
cmpsl
lret
add
js
cmp
rorl
sbb
jnp
xchg
cwtl
and
xor
nop
ret
pop
sbb
inc
jl
lods
push
ja
es
arpl
ret
rorl
pop
in
mov
sbb
lock
push
fistl
add
or
mov
xchg
cmp
add
nop
clc
xorb
jp
xor
xor
lds
sbb
imul
das
pop
jb
push
leave
xchg
sub
bound
pop
xlat
mov
in
lret
add
pushf
mov
imul
sub
fistpl
data16
mov
inc
inc
mov
cli
jle
scas
mov
cmp
insb
xchg
outsl
mov
insb
dec
mov
cmp
mov
stos
jecxz
out
push
sbb
test
and
pop
adc
stc
push
xlat
test
popf
mov
out
sub
lods
movsb
js
sbb
lock
rcl
xor
xlat
int3
test
and
lds
mov
add
jae
mov
xchg
xchg
dec
bound
mov
fadd
iret
pop
inc
outsb
mov
cs
stc
hlt
lret
jecxz
pushf
addb
add
dec
push
mov
lods
fsts
leave
les
xchg
das
dec
cmc
ret
xchg
pop
xor
xchg
rolb
lea
jbe
mov
ds
xlat
ficomps
mov
and
push
into
sbb
les
rcrb
sbb
adc
and
test
shr
imul
xchg
or
adc
arpl
stc
aam
sub
sbb
mov
pop
cld
adc
int
fisttps
insb
test
add
jp
xchg
aaa
lods
in
jne
fwait
mov
arpl
mov
xor
cli
jge
je
cmp
mov
sahf
rcll
cwtl
push
add
xchg
push
pop
push
cmpsb
jae
mov
imul
dec
dec
sti
shlb
xchg
dec
dec
sub
rcl
pop
adc
xor
xor
enter
arpl
outsb
pushf
jp
mov
jo
loope
fbld
dec
jae
push
push
cmp
int
inc
mov
push
jns
scas
outsb
fldenv
inc
fwait
cmpsl
popf
mov
jmp
xor
jb
insl
xchg
cmp
shll
add
repz
aaa
jecxz
ds
push
fsubrs
inc
je
cli
mov
loop
inc
cmp
adc
les
enter
adc
jnp
pop
push
stos
sbb
dec
mov
sbb
xchg
adc
mov
push
sbb
ffreep
jo
push
aaa
pop
pop
in
sub
int
xchg
add
push
add
dec
imul
mov
cmp
push
repz
dec
mov
sti
jbe,pt
jp
dec
hlt
dec
mov
sbb
dec
das
mov
xchg
xorl
outsl
pop
and
pop
or
adc
jge
push
jp
loope
insl
pop
inc
dec
sub
sbb
xlat
std
sbb
push
add
fs
adcb
jecxz
leave
test
fadd
mov
sub
enter
int
popf
dec
push
daa
cmpsl
inc
out
mov
and
mov
pop
mov
mov
inc
icebp
mov
pop
rclb
lock
and
clc
mov
test
push
or
xor
sbb
sbb
in
aaa
sahf
mov
sbb
ljmp
rorl
xlat
pop
icebp
loop
and
bound
leave
insl
xorb
pop
xchg
pop
jno
cmp
push
imul
aam
cmpsb
rol
dec
stos
sbb
or
nop
dec
rorb
dec
push
push
mov
sbb
sub
push
mov
fidivrs
dec
hlt
adc
and
lret
jmp
xchg
std
fwait
mov
subb
xchg
mov
cmp
xchg
pop
cmp
nop
call
std
movsl
lahf
xor
rcrl
inc
dec
push
mov
inc
int
cmc
daa
push
stos
xor
lcall
rolb
into
xchg
pop
dec
neg
sbb
in
add
jo
arpl
rorl
out
and
repz
movsb
shrb
or
xlat
daa
pop
jmp
fildl
xchg
push
xor
dec
add
dec
insl
addl
push
lea
inc
les
push
dec
sbb
adcb
adc
stc
out
dec
fs
adc
mov
sub
inc
xor
cltd
inc
mov
and
popa
jl
pop
jbe
cli
ljmp
inc
lahf
rcrl
jne
lods
aaa
jns
arpl
pop
aad
pop
in
lcall
push
bound
or
hlt
adc
cld
push
aaa
fnstcw
mov
mov
inc
xor
gs
popf
sub
xor
pusha
test
addr16
sahf
clc
sub
rcll
mov
cmp
or
std
fcoml
push
adc
or
and
cli
mov
lcall
adc
sub
out
jae
addr16
mov
sbb
mov
sbb
iret
sub
enter
push
dec
jns
movsl
push
jge
fdivl
lods
xor
or
jmp
inc
sti
dec
xchg
insl
xchg
and
dec
lret
cmp
and
or
lods
push
call
sbb
popw
cmp
jnp
loop
nop
fucomip
sbb
out
adc
cltd
mov
movsl
jo
jmp
insl
icebp
nop
mov
jae
insb
xchg
je
mov
push
repnz
add
sbb
arpl
sbb
aad
mov
insb
das
out
call
jge
mov
icebp
push
out
leave
cmpsb
mov
iret
fisubrl
mov
addr16
or
mov
inc
mov
cltd
xchg
and
aaa
jl
inc
decb
push
scas
sti
jbe
hlt
addr16
xor
enter
adc
mov
outsl
je
add
insb
cmp
or
mov
scas
xchg
and
mov
cmp
xor
mov
lods
loope
popf
and
cmp
push
bound
sub
subl
jecxz
loop
insb
es
lret
arpl
push
push
das
fbstp
subb
fbstp
xor
xchg
es
pusha
mov
sbb
jl
je
xchg
add
repz
data16
push
cmp
test
add
mulb
ffree
mov
fs
out
out
sub
stos
nop
jbe
jnp
cmp
cmp
xor
jb
repz
push
pop
or
push
scas
sub
dec
icebp
push
or
rorb
cmpsl
cmp
mov
cmpsl
jbe
mov
or
pusha
inc
pusha
and
aas
xchg
xor
adc
dec
cli
out
fstp
stc
dec
push
dec
arpl
arpl
into
push
xor
loope
cld
fisubl
inc
cmp
pop
loope
fisubl
fistps
subb
add
inc
mov
mov
fstl
jae
jnp
leave
adc
adc
fsubrs
movsl
sub
aad
lock
add
mov
nop
jns
inc
dec
mov
push
popa
mov
push
dec
lock
mov
rcrl
cmp
pop
dec
mov
mov
dec
clc
ficompl
gs
mov
subl
rorl
sar
clc
mov
lret
dec
or
cmp
das
dec
lret
xlat
cmp
dec
mov
xchg
mov
inc
sub
int3
js
xchg
aam
mov
push
push
xor
cmp
and
mov
jl
sub
loopne
int3
lret
sbb
dec
push
push
mov
push
jo
hlt
and
cmpsl
rcll
and
aad
xchg
and
sub
sub
pop
lods
xor
pushf
leave
jns
and
stos
arpl
ret
jae
int
pop
sbb
repnz
pop
pop
pusha
cmpsb
xchg
mov
leave
out
or
add
adc
insb
in
xlat
mov
xchg
call
fiaddl
pop
xor
fnsave
dec
mov
stos
jl
out
jg
add
adc
adc
sbbb
xor
sbb
popa
ss
scas
sub
cmpsb
mov
pushf
popa
sbbl
lods
mov
pusha
push
mov
inc
bound
lock
jbe
xor
daa
lds
dec
lret
push
xrelease
inc
xor
jns
sti
lods
push
pop
int3
xchg
push
mov
lods
ucomiss
or
mov
jnp
push
push
jb
push
ds
out
push
xchg
cltd
adc
sbb
fs
pop
xor
add
xor
repz
shr
cmp
push
int3
xor
int3
and
fsubs
scas
fstps
sbb
xchg
in
push
and
jae
std
movsl
mov
lret
sub
sub
cli
sahf
scas
popf
cmp
dec
stos
cmp
shlb
push
sbb
into
sbb
inc
xor
inc
in
xchg
fidivrl
jbe
xor
in
addl
fwait
lret
test
and
xchg
ljmp
sti
jge
add
loopne
out
test
leave
or
jnp
and
subb
sbb
gs
pop
fsts
mov
ds
aas
subb
push
aas
mov
mov
fadds
test
and
iret
popa
mov
or
incl
add
push
shrd
add
adc
pop
push
out
into
xchg
xor
cmpsb
sahf
lahf
pop
pop
imul
mov
rcrb
or
add
sbb
cmp
cld
leave
pop
push
ja
imul
mov
idivb
jmp
cli
icebp
mov
movsb
test
xchg
dec
cmpsl
xchg
mov
enter
ds
push
xor
cmp
cld
sub
pusha
movsb
inc
jmp
test
in
ljmp
leave
or
push
addr16
add
xor
inc
fnstenv
call
lds
sub
push
es
ljmp
cmp
movsl
cltd
repnz
rcrb
adc
or
push
testb
xchg
mov
mov
hlt
pop
inc
cmp
adc
cld
cmp
mov
and
pop
jo
stos
aam
ljmp
ljmp
lret
mov
jns
cld
adc
mov
iret
nop
xchg
std
out
imul
xor
scas
fwait
jle
mov
sub
mov
xor
iret
jge
or
lret
adc
dec
fnsave
mov
es
and
push
out
lods
pop
ficomps
int
xor
dec
out
iret
mov
push
mov
icebp
sbb
sub
adc
gs
mov
jae
lods
mov
jae
inc
sbb
sbb
call
jecxz
imul
jb
sub
fildll
imul
pusha
scas
sub
inc
and
adc
loop
jnp
sub
ljmp
sbb
pusha
or
mov
xor
roll
jmp
cmp
ret
outsb
sub
or
cmpsl
pop
sub
sbb
mov
lcall
sbb
mov
cmp
mov
xchg
or
sarl
xchg
popf
or
repnz
ret
faddl
sahf
mov
push
test
adc
sbb
sbb
stos
imul
rcl
and
dec
pop
daa
rcr
adc
lcall
pusha
out
jecxz
pop
dec
gs
xchg
adc
jle
mov
push
pop
or
push
fwait
push
pop
and
push
or
cmc
xlat
sbb
rorb
scas
and
movsb
jg
test
lahf
jle
in
add
add
ss
bnd
mov
push
xor
loopne
sub
lds
sbb
mov
mov
dec
jne
out
push
cmpsl
mov
mov
stos
imul
sbb
cmc
pop
ret
xchg
jmp
push
and
jb,pn
and
jl
sti
pop
and
mov
stos
movsb
inc
stc
sarl
les
popf
daa
fildll
pop
inc
rorl
mov
lahf
outsb
dec
popa
daa
std
add
inc
sbb
dec
dec
cmp
cmp
push
inc
or
out
mov
mov
std
and
sarb
cmp
and
jmp
or
mov
lret
popa
push
mov
sahf
push
es
ja
in
push
icebp
movsb
jns
mov
incb
mov
sbb
sub
in
or
jp
sahf
incl
xor
movsb
iret
testl
leave
sub
cmp
leave
mov
xor
out
mul
std
adc
push
lcall
mov
pushl
arpl
repz
ret
push
sbb
cmc
push
push
mov
sub
inc
mulb
fstpt
cmp
xor
icebp
jmp
out
or
adc
inc
xchg
fildll
pop
negb
inc
cmp
mov
or
lds
lret
int
mov
pusha
adc
movsb
jo
mov
aas
xchg
jne
cmp
mov
nop
int
xor
adcb
out
pop
stos
jle
clc
leave
pop
mov
pop
jge
mov
mov
outsb
xor
stos
push
mov
out
jno
sbb
iret
mov
xor
or
stos
inc
pop
xlat
cmp
xchg
add
test
fwait
nop
xchg
cltd
lods
cmp
sbb
sbb
test
fsts
adc
cmp
mov
adc
scas
pop
inc
shrb
jmp
add
je
shll
loop
test
xor
push
lcall
insb
je
cmc
pop
inc
pop
test
ret
in
and
mov
aam
das
loope
push
pop
in
cmp
adc
fsubl
sub
jg
jnp
pop
cmp
movsb
sbb
fimuls
enter
pop
xorl
jne
repz
push
pusha
fsubs
fsubl
aam
push
jmp
lret
or
xchg
negb
xorb
xchg
sbb
mov
and
adc
enter
lock
jbe
ss
mov
sub
mov
pop
push
notb
test
icebp
or
jns
mov
aaa
in
call
call
pop
iret
rclb
xchg
cli
je
xlat
inc
orb
aaa
sub
xor
xchg
mov
lock
or
dec
jnp
dec
inc
push
pop
jmp
stc
fcomps
jle
sub
sbb
adc
aam
mov
or
es
outsb
xchg
cli
fstl
push
adc
jg
sbb
lods
xchg
xchg
jns
mulb
jae
test
fcmove
loope
ds
xor
push
sahf
cmp
and
or
addl
dec
pushf
je
push
sub
loopne
pop
fwait
pusha
or
cmc
popf
pusha
mov
cmpsb
mov
dec
notb
nop
iret
push
pop
loop
mov
cmp
or
sub
mov
cmp
sbb
movd
cltd
adcb
push
xchg
cmp
mov
pushf
gs
outsb
sti
ds
mov
rorl
dec
ljmp
jp
ret
cld
and
cmp
ja
adc
shll
mov
jp
or
sbb
jo
mov
fnsave
inc
imul
xchg
scas
ret
leave
mov
inc
xchg
push
mov
dec
jbe
mov
repnz
ljmp
push
sub
stc
imul
orl
jg
inc
jne
xchg
cmc
rorb
pusha
gs
mov
enter
inc
les
cld
repnz
jmp
cmp
xor
push
cmp
test
jne
fiadds
jle
xchg
dec
lods
mov
push
pop
inc
clc
decb
cmp
je
jb
mov
sbb
add
fwait
lods
movsb
cltd
fisttpl
lret
jp
fisubrs
ja
xchg
push
sahf
xchg
cli
aad
sub
call
add
ljmp
push
icebp
push
push
in
rclb
js
jns
pop
xlat
loop
arpl
mov
xor
stos
rclb
xchg
push
test
fcmovnb
loopne
xchg
sbb
jge
lea
outsb
mov
xchg
cmpsb
in
xchg
sti
xchg
hlt
rorb
ja,pn
lods
and
cwtl
push
push
jno
mov
mov
aad
xorl
data16
movsl
xlat
jmp
ret
pop
ljmp
std
loop
shlb
mov
ss
aad
adc
loope
les
dec
jbe
mov
or
hlt
ret
mov
imul
incl
xor
push
dec
cmp
xorl
addl
cmp
xchg
iret
stos
sti
lds
stos
out
lahf
nop
mov
rcrb
frstor
out
dec
push
fs
inc
push
test
pop
pop
aas
das
mov
fs
xor
jbe
mov
repnz
loope
fcompl
ljmp
testb
adc
negl
into
jne
cmp
mov
daa
sub
adc
aad
inc
jae
dec
and
and
sub
in
mov
or
add
ret
lods
loopne
adc
pop
mov
inc
add
jb
cld
addr16
add
cmp
rclb
pop
inc
cmpsl
push
repnz
and
pop
push
sarl
pmuludq
lcall
cmp
jo
shrl
adc
gs
in
pcmpeqw
insb
ret
sahf
pop
jl
jae
imul
and
sbb
movsl
hlt
cwtl
mov
lods
add
adc
out
hlt
jmp
xchg
cmp
cmp
sahf
dec
mov
notb
push
leave
inc
fisttps
ret
lea
mov
jmp
popa
stos
dec
cmpsb
ja,pt
popf
push
and
nop
inc
loope
and
push
enter
mov
xchg
sahf
ds
sbb
jmp
mov
push
push
mov
sub
push
lret
ror
xchg
cmp
mov
stc
push
cltd
pop
and
es
aam
cmpsl
mov
iret
rclb
sbb
cs
jl
ss
and
cmc
icebp
ljmp
mov
sbb
sbb
aad
cmp
sub
sbb
je
pop
cld
sub
in
sbbl
inc
and
add
mov
es
and
dec
repz
out
mov
push
loop
xlat
insl
mov
sub
xchg
fidivs
cli
xor
aam
jbe
sbbl
shlb
repnz
lea
push
jg
out
jmp
addr16
test
lods
jecxz
and
test
pop
mov
rorb
shr
add
jl
mov
movsl
ds
xchg
adc
dec
xchg
pushl
shl
in
out
jmp
andb
sbb
or
mov
push
add
dec
insb
je
or
aam
mov
rcrl
sti
lods
pusha
mov
mov
call
in
ret
adc
stos
inc
xchg
fimull
cld
xchg
popa
xchg
das
sahf
ds
testb
pusha
push
aaa
dec
fnstsw
out
dec
loope
pop
pop
sub
adc
ja
sub
and
imul
cmp
jg
out
daa
mov
aad
out
aam
fnstenv
push
cmp
jl
add
add
int3
pop
pop
in
jl
mov
data16
inc
push
cli
add
push
fnstenv
je
cmp
push
repnz
push
lret
mov
or
or
and
cli
pusha
loop
popa
repnz
loopne
and
xchg
into
dec
arpl
shlb
or
lock
shll
pop
insl
insl
ficoml
inc
jns
outsb
inc
or
and
fwait
popa
ds
dec
test
test
jo
push
call
pop
xor
sahf
mov
add
and
add
outsl
int3
cmpl
int
ds
shrb
sbb
fmulp
repz
sub
mov
int3
sbb
flds
dec
ljmp
mov
mov
adc
push
xlat
xor
sbb
mov
shr
test
inc
jo
adc
push
or
cltd
repz
repnz
movsb
jb
out
cmp
mov
in
mov
or
pop
push
mov
cmp
inc
and
sub
jp
adcl
jae
jp
mov
mov
aas
push
jecxz
cmpsl
mov
cld
mov
mov
adc
stc
jbe
cmp
mov
dec
pop
dec
stc
sarb
imul
jnp,pn
std
ja
push
sti
cmp
cs
fwait
outsb
sub
mov
dec
sub
jge
cltd
dec
add
mov
and
dec
mov
rcr
jnp
enter
cmp
lea
jp
pop
lods
cltd
repnz
pop
clc
adc
and
imul
pop
ss
fistpl
test
push
fwait
dec
push
cltd
je
mov
lods
or
int3
and
out
push
jo
psubusw
mov
test
add
test
aas
push
xor
call
nop
das
cld
das
push
cmp
pusha
dec
lret
push
and
das
aad
rcrb
arpl
pop
sbb
scas
dec
mov
mov
popa
jb
mov
cmc
push
mov
xchg
fwait
sahf
ja
cmp
js
vpacksswb
inc
mov
and
test
adc
mov
sbb
fcomps
push
repnz
mov
mov
jp
mov
inc
sbb
jno
or
or
jno
mov
js
test
inc
int3
or
roll
mov
cmpsb
mov
dec
or
inc
lock
outsb
xor
loop
in
push
lret
subb
and
or
sub
mov
mov
scas
adc
dec
lea
cmp
sar
imul
pusha
dec
pusha
mov
cmp
add
shr
dec
or
adc
into
add
jecxz
sbb
pop
sub
xor
les
mov
lret
arpl
ret
jbe
pop
xchg
fstps
sub
mov
jl
clc
andl
jbe
mov
rcrl
dec
data16
pop
popf
rolb
xlat
insb
insb
and
pushf
push
mov
pop
xchg
cmpsl
jle
aaa
rolb
and
jg
mov
push
push
inc
pusha
loope
jae
lret
lret
popf
stc
sbb
mov
roll
or
pop
mov
mov
cwtl
sbb
lcall
popf
xchg
outsb
or
add
adc
xchg
sub
xchg
sbb
call
loop
pop
orl
les
repz
push
das
int3
adcb
mov
test
inc
or
jae
std
mov
push
mov
sub
test
js
sbb
ja
in
pusha
add
test
sbb
outsb
adc
xchg
lea
fcomp
out
pop
pop
out
xchg
andl
movsl
or
stos
sbb
pop
aam
mov
mov
push
dec
add
cmpsl
test
push
xor
xor
sub
dec
add
loopne
adc
in
movsl
lret
fnstenv
mov
push
dec
stos
out
jno
jns
lret
jp
cmp
ja
imul
rcl
jns
cmp
jo
xchg
xor
push
xchg
addr16
xchg
mov
adc
push
ljmp
adc
hlt
inc
jae
mov
and
sbb
jge
sbb
scas
rorb
into
xchg
sub
in
roll
ret
sub
icebp
push
adc
or
cmp
aaa
ljmp
in
xchg
push
cmp
inc
out
and
into
push
inc
add
cmp
loope
push
jmp
inc
stos
fisubs
jbe
xlat
shl
cli
lcall
ljmp
add
int3
sar
movsl
cmc
dec
push
and
cmp
pop
rolb
fstpl
mov
inc
es
rol
cmp
out
popf
fyl2x
int3
data16
add
les
mov
ret
add
out
jecxz
insb
sub
add
bound
or
aas
arpl
push
dec
sahf
cwtl
shlb
fiadds
mov
pop
dec
mov
xchg
lret
cmp
jb
out
int3
repnz
adc
mov
mov
push
stos
lret
movsl
or
mov
cmp
pop
lret
jb
adc
adc
ss
and
sub
inc
inc
repz
ret
push
or
ret
add
adc
mov
je
inc
and
pop
inc
jmp
inc
jb
lea
inc
out
imul
fcomp
jno
ret
xchg
mov
pop
rsqrtps
ret
repnz
jno
leave
dec
movsl
fwait
out
test
push
push
icebp
cltd
enter
cld
movsl
mov
scas
mov
mov
dec
jmp
aas
repnz
fs
imul
fisttpl
nop
out
sub
jnp
mov
cmc
loop
icebp
dec
push
rcrl
punpcklbw
fcmovb
jmp
jno
sbb
sub
dec
jl
std
shlb
es
test
adc
adc
dec
adc
outsl
pop
test
mov
outsb
add
loop
das
shlb
clc
enter
mov
clc
cmc
xchg
push
mov
out
repz
add
and
mov
in
push
adc
inc
sub
xlat
mov
movsl
out
xor
daa
push
push
lods
cmpsb
fstpt
pop
enter
pop
push
lock
leave
sub
fs
jno
bound
or
ficomps
pop
lds
sub
call
adc
push
sub
daa
idivl
iret
loope
and
push
stos
sub
ja
jmp
inc
mov
push
push
clc
data16
add
test
arpl
shl
dec
jl
jbe
push
sub
ss
pop
xor
or
jbe
mov
arpl
movsl
fildll
icebp
ja
cs
aaa
fiadds
fmul
jo
js
cmpsl
fnsave
xor
loopne
or
inc
mov
out
xchg
addb
adc
test
sti
std
in
xchg
push
xchg
or
addl
jb
mov
in
jnp
in
mov
lcall
cmp
xor
rclb
mov
jecxz
dec
cmp
test
jp
adc
roll
and
xchg
xor
in
jl
xchg
jl
inc
dec
fbstp
int3
int
jmp
and
negl
adc
cwtl
das
insl
mov
push
mov
arpl
mov
lods
fwait
fwait
push
inc
mov
adc
lret
cmp
in
xchg
sahf
cwtl
mov
dec
xchg
ja
push
fsubl
sub
sbb
sbb
or
imul
dec
push
pop
idivl
dec
push
mov
in
xor
in
adc
jo
call
iret
push
cld
mov
aaa
ja
loop
inc
mov
out
shl
rcl
mov
fwait
sub
xor
mov
fsubr
cmpsl
fildll
ljmp
adc
out
inc
jbe
std
xor
incl
inc
cmc
popf
out
in
faddp
out
rolb
popf
jmp
test
mov
aas
into
adc
pop
xchg
xor
lahf
clc
dec
mov
push
push
je
movsl
cltd
and
jp
sbb
in
xor
fadd
add
lahf
sbb
outsl
jo
dec
xorl
out
daa
mov
adc
mov
lock
ljmp
cmpsb
clc
cs
cmp
jb
pop
lock
int3
pop
scas
adc
subl
call
out
aaa
lock
shrb
lea
xchg
cwtl
nop
mov
aad
mov
adc
pop
sti
subl
inc
imul
sahf
and
sub
dec
adc
cli
insl
pop
dec
xchg
sti
push
decl
fs
pop
ljmp
or
fs
das
pop
mov
lods
mov
mov
ficomps
inc
cld
bts
pusha
lds
jo
imul
or
lcall
jecxz
test
insb
not
pop
pop
cmpsl
jae
loop
aaa
jae
and
fcmovnb
cmpsb
insl
orb
aaa
inc
mov
call
adc
mov
aam
fldenv
int3
jecxz
gs
push
lea
adc
iret
fisubrs
add
lcall
mov
leave
mov
dec
movsl
repnz
add
lock
fistpll
mov
jmp
je
inc
xor
xchg
push
sbb
adc
sub
push
test
mov
and
test
test
xchg
fisttpll
cld
jmp
sbb
push
cld
push
jmp
jbe
pop
sbb
cmp
push
dec
dec
sbb
sub
imul
jecxz
call
aas
andl
mov
mov
cli
cmp
sub
push
aas
inc
cmpsl
pop
rcll
lea
cmp
subl
aad
pop
jo
into
push
daa
add
sbb
shrb
mov
daa
push
mov
scas
fucom
jb
jnp
mov
enter
mov
lret
leave
mov
sub
daa
cmp
xor
mov
sub
push
mov
add
ja
pop
cmp
add
js
mov
cmp
mov
push
and
sbb
xchg
rcl
xor
mov
xchg
pop
fidivrl
pop
dec
jns
movsl
divw
sbb
rcrl
rcll
repnz
pop
lods
cmc
call
cmp
jns
repnz
push
jne
mov
pop
mov
or
bound
push
xchg
ret
jmp
push
cmpl
jp
outsl
sub
mov
mov
add
mov
fstpl
filds
cld
xchg
sub
lahf
mov
decl
jge
jmp
xchg
js
in
dec
fcmovnb
mov
cmp
push
xchg
pop
and
cmp
lea
fdivs
jmp
pop
popa
cmp
aam
dec
xchg
adc
pop
popa
addr16
inc
jnp
lds
mov
inc
inc
xchg
or
dec
outsl
rcll
ja
out
mov
mov
sbb
sbb
mov
cli
xchg
pop
jne
jp
cld
xchg
enter
and
mov
add
jl
cwtl
adc
loope
inc
cs
aad
pop
mov
pushf
push
in
mov
dec
push
scas
inc
jle
cmc
sbb
inc
in
scas
add
mov
or
and
imulb
mov
int3
xor
daa
int3
jnp
mov
mov
ret
test
cmpsb
or
mov
and
in
xlat
outsl
enter
mov
dec
inc
xchg
cli
jbe
jle
jne
cmp
andl
xchg
data16
cmp
or
mov
roll
inc
mov
stc
push
cmp
jecxz
out
shlb
test
and
movsb
mov
xchg
call
lcall
clc
mov
mov
xor
loope
cmpsl
cltd
je
lcall
sub
call
jo
popa
pop
xor
enter
dec
jg
js
mov
xchg
cld
add
inc
rcr
aam
xchg
mov
lods
test
lock
lret
ret
jge
js
jmp
aas
lock
out
and
dec
sub
cs
sbb
jmp
inc
mov
xor
and
cli
inc
lret
xor
add
inc
jnp
sarl
mov
jp
nop
sub
cmp
sbb
jo
mov
movsb
shl
lret
stos
inc
mov
sbb
mov
icebp
mov
cld
insb
andl
add
pop
xchg
fistpl
fs
test
xor
lds
sbb
addr16
das
dec
mov
stc
outsl
stos
dec
sti
cltd
lods
inc
xchg
jnp
mov
pop
les
mov
xchg
xchg
lret
pop
cs
bound
xchg
push
pop
push
stos
leave
pop
retw
dec
jne
jecxz
or
add
mov
pop
xor
jns
jmp
xchg
cld
out
and
jecxz
shl
adc
mov
pop
lods
bound
or
add
hlt
cmp
mov
jne
xchg
js
das
out
jno
loopne
xchg
add
out
mov
testb
iret
out
mov
jmp
xchg
fsts
mov
stos
jle
hlt
and
fisttps
sbb
lret
jmp
lods
add
mov
push
mov
subl
cmp
cwtl
out
push
jge
jns
imul
pop
dec
fnstsw
and
cltd
add
imul
jbe
mov
xor
cmp
xor
jge
repnz
call
inc
push
cwtl
inc
jmp
dec
outsl
mov
cmp
mov
test
cmp
jl
fst
sbb
mov
push
cli
push
inc
negl
pop
mov
add
or
loopne
pop
movsb
repz
fsubs
popa
mov
xlat
loopne
pop
dec
test
push
cmp
insb
cltd
jle
xchg
adc
sub
cmp
inc
mov
mov
add
jle
cltd
sbb
mov
and
clc
bnd
mov
repz
imulb
in
sbb
repnz
push
int
push
addr16
cltd
pushf
push
pop
adcl
cwtl
cmpsb
rcrl
xadd
js
add
ret
or
dec
in
jp
jb
in
scas
xchg
mov
or
js
aaa
cmp
cs
sbb
push
xchg
xchg
ret
xor
je
mov
in
xchg
test
dec
sti
jns
mov
cli
sub
ljmp
dec
sub
sub
mov
jo
jp
xchg
mov
mov
test
test
inc
ret
fyl2x
add
jg
jb
sub
les
fcmovb
out
mov
cltd
adc
imul
in
movsl
sbb
lea
pop
nop
cmpsl
inc
push
sub
add
jns
sbb
mov
out
sti
or
jns
jg
fdivp
jp
xchg
mov
inc
out
in
mov
jne
mov
push
lods
bound
xor
sub
jle
sbb
adc
sbb
inc
pop
ja
adcl
inc
test
jo
shr
aas
addr16
jb
sti
mov
js
test
mov
incb
ret
xchg
xorb
push
add
les
iret
loopne
xchg
add
jo
push
test
cmp
sbb
adc
outsl
in
push
lods
and
jne
mov
call
in
pushf
lcall
jns
push
sbb
int3
cmpsb
or
pushf
pop
mov
out
add
or
fwait
scas
add
jmp
out
jl
cld
loopne
addr16
xor
rcl
add
insb
or
cmpsl
fs
xor
fildll
sub
shll
and
fsub
push
aas
cmp
rcl
addb
fadds
in
icebp
aad
push
frstor
xchg
mov
js
xchg
mov
out
xor
push
inc
sub
shlb
mov
xchg
cli
out
popa
nop
int
stos
stos
sub
sub
push
bound
push
jne
push
or
sar
push
sbb
cmpsl
jle
jmp
mov
sbb
mov
loop
mov
ret
jp
push
xor
pushf
mov
stos
sbb
movsl
inc
push
fldt
mov
cmp
das
leave
repnz
call
cli
sahf
aad
imul
mov
pop
or
mov
sub
push
ficompl
mov
mov
ljmp
adc
lds
sbb
les
ror
nop
inc
cmpsl
nop
rcll
xor
les
and
jecxz
clc
jecxz
loope
leave
les
ret
xchg
clc
iret
dec
ss
pushf
mov
lods
pop
fdivr
xlat
add
aaa
aam
rolb
inc
pop
call
xor
jmp
incb
push
mulb
imul
aas
or
pop
xchg
pop
dec
mov
out
push
out
popa
sbb
arpl
out
adc
mov
fisttps
neg
imul
fldl
inc
fbstp
test
mov
lds
xchg
mov
sbb
imul
cli
xchg
xchg
xor
inc
stos
xlat
cli
inc
lcall
xor
mov
js
xchg
inc
mov
xor
jb
jnp
cwtl
sbb
call
push
inc
pop
aam
stc
je
fwait
movsb
fldl2e
loop
aam
frstor
outsl
inc
mov
mov
and
lock
pop
pop
movsb
pop
mov
pop
fdivrl
das
cmpsb
test
mov
cwtl
or
daa
imul
out
push
aad
filds
lahf
enter
mov
cmp
inc
sbb
push
in
add
sub
push
mov
fdivl
jmp
repnz
mov
pop
lahf
jge
or
shll
or
sarb
xor
xchg
rolb
aaa
sbb
sbb
push
mov
or
repnz
jle
cli
xlat
mov
jmp
std
fldcw
inc
push
jb
sub
xchg
push
jmp
mov
cld
aas
sub
iret
lods
fsubrl
andl
and
int
imul
dec
sub
cmp
cmpsl
xor
lret
pop
pop
lret
cmc
out
aaa
and
mov
xchg
into
daa
dec
mov
mov
fdivl
repnz
xchg
jo
fisttpl
or
inc
arpl
fnstsw
push
js
add
sbb
push
stos
stc
fcompl
jge
xchg
aam
cli
and
out
out
mov
leave
mov
in
jbe
outsl
mov
xlat
lods
push
test
dec
xor
push
adc
mov
lret
and
loope
sbb
repnz
xor
scas
inc
fs
insb
out
sub
out
push
xchg
or
mov
dec
data16
in
add
pop
sbb
sub
sbb
sahf
mov
jne
pop
or
mov
and
mov
int
pop
and
adc
pop
pop
jmp
cmpsl
inc
dec
adc
jecxz
cmpsl
out
icebp
gs
lds
gs
movsb
movsl
or
push
shlb
sbb
mov
int3
lds
cmp
mov
cld
pushw
and
movsl
pop
aam
pushf
out
cld
xor
mov
outsl
sbb
mov
mov
cs
daa
loope
outsl
sub
shr
xor
or
mov
and
mov
cmp
hlt
out
xor
mov
xchg
aas
call
and
mov
ljmp
iret
xchg
lret
and
out
dec
in
test
and
mov
adc
xchg
push
push
test
sbb
lret
movsl
fildl
ja
pop
arpl
into
in
adc
mov
std
stos
pop
stc
sub
nop
popa
xchg
xor
daa
test
push
mov
pop
sub
aam
sarb
stos
xchg
adc
push
xor
and
fidivl
sarb
dec
lods
pop
jo
notb
pop
imul
nop
mov
push
pop
mov
stc
add
ret
add
or
add
push
sar
out
jae
inc
and
insl
xor
push
lcall
lahf
push
inc
sbb
dec
inc
adc
mov
jge
out
dec
roll
add
cmpsb
js
in
mov
mov
in
jmp
mov
fistl
cmp
test
inc
inc
rorl
adc
mov
rolb
aas
xor
js
cmp
xor
pushf
jnp
test
mov
arpl
mov
out
fwait
shll
gs
cmp
rcr
loopne
mov
add
cmp
jecxz,pn
cs
sti
adc
sarl
cli
imul
xchg
adc
mov
test
lds
imul
jp
jo
pop
nop
xchg
mov
ficomps
data16
out
in
sbb
mov
xor
xor
pop
cwtl
pop
pop
cli
cli
in
pshufw
fcom
les
or
sbb
add
dec
repz
addr16
push
mov
jecxz
dec
push
imull
rorl
mov
mov
std
mov
vpxor
fbstp
call
xchg
stos
sub
loopne
lock
insb
in
dec
push
mov
jmp
push
jg
or
sbb
cli
lahf
xchg
roll
ss
pop
cmc
adc
out
sbb
cmpsb
mov
cmp
xorl
cs
jbe
mov
add
sbb
movsb
jb
push
lcall
inc
cwtl
aam
repz
cmp
fstps
fldenv
push
rcll
cmc
xlat
outsb
ss
xchg
int
jp
xor
sub
mov
mov
dec
rcrl
data16
lcall
movsl
in
jno
ret
ljmp
lcall
rcrb
imul
adc
gs
imul
mov
jns
jae
pop
add
jge
push
jl
mov
shrb
cmc
loope
adc
ljmp
cltd
sahf
and
mov
mov
adc
rolb
and
adc
mov
fwait
xor
and
mov
rcl
sahf
jae
xchg
inc
and
daa
or
push
ja
stos
sbb
and
js
cwtl
sub
sub
cmp
mov
xchg
in
mov
jae
xor
jle
hlt
push
aaa
and
daa
bound
jo
ret
add
into
push
nop
xchg
clc
mov
sbb
jnp
inc
js
pop
xchg
ljmp
ja
and
xor
out
movsb
mov
test
sbb
jg
mov
cmp
inc
dec
mov
movsl
dec
xchg
iret
mov
dec
scas
lahf
jecxz
sub
mov
pusha
adc
mov
xor
cs
pop
xor
inc
and
in
sahf
in
clc
pop
sub
jp
popa
sbb
in
xlat
pop
hlt
push
icebp
pop
fisttps
js
add
dec
mov
adcb
lcall
outsb
inc
dec
aam
stos
das
lods
inc
push
in
cs
into
lret
or
lret
mov
addl
aas
inc
mov
popa
shlb
inc
add
scas
rcr
inc
push
push
nop
sbb
stos
dec
jl
movsb
xchg
lea
xor
pop
es
add
xchg
and
lret
xor
mov
test
sbb
lcall
out
leave
cmp
push
cmp
cwtl
movsl
lods
fldcw
or
jp
jns
cmp
jo
cmpsl
addr16
lret
shl
adc
fdivs
mov
jp
push
es
repz
stos
mov
popf
fiadds
fisttpll
test
push
ds
push
aad
movsl
mov
cli
inc
loope
in
mov
xchg
xor
fwait
int
icebp
mov
out
dec
loope
push
ss
sbb
outsb
sub
adc
cld
lods
dec
inc
pop
popa
enter
and
pop
call
out
orb
addl
jo
push
dec
aas
nop
fisttpll
insl
insl
les
mov
jmp
pop
pop
cld
call
mov
mov
cmp
mov
imul
jno
jbe
repnz
movsb
sahf
add
mov
inc
fnstsw
leave
mov
test
inc
gs
sub
pop
dec
nop
sbb
lds
sbb
or
pop
jmp
inc
sbb
lods
jne
and
cmp
or
dec
push
push
cmp
shlb
push
mov
cmp
push
pop
fdivp
popf
dec
mov
adc
cmp
in
dec
pop
cltd
dec
sbb
popa
adc
mov
movsl
fwait
lods
xlat
and
ds
fwait
cli
pop
push
xor
je
outsb
addr16
add
in
mov
addr16
pushf
add
lock
hlt
lahf
insb
lahf
cs
mov
sbb
insb
insb
imul
push
fwait
movsb
clc
inc
push
jbe
jb
scas
push
sahf
enter
sub
idivl
mov
sub
sbb
xchg
jg
clc
stos
aam
dec
ds
fisubrl
scas
jne
repz
adc
inc
les
aas
clc
sub
xchg
xchg
fistpll
test
mov
pop
xor
push
push
movsl
ja
ja
inc
out
xchg
jae
inc
add
addr16
bound
lret
push
fstps
addl
out
iret
or
ret
aaa
int3
mov
mov
cmpsb
cs
ss
stc
push
bound
push
add
clc
inc
dec
aaa
cli
mov
cltd
test
jl
je
jge
mov
out
repnz
push
mov
sbb
dec
and
mov
imul
lret
pop
aad
jge
sarb
icebp
fstl
lea
stc
add
inc
xchg
ss
test
add
das
dec
jns
dec
xor
cltd
out
ds
into
add
lret
sbb
sub
push
sub
mov
or
daa
jae
pop
imul
scas
outsl
or
and
gs
pop
and
cmp
notl
movsb
fnstcw
add
rorl
call
cli
add
rclb
push
ret
pushf
xor
mov
pop
out
mov
out
add
dec
push
xchg
leave
mov
aam
adc
rcr
out
iret
cmp
inc
adc
dec
int
lcall
ret
cltd
mov
sub
data16
sbb
mov
adc
add
mov
and
hlt
cmp
push
xchg
pop
outsb
push
scas
pushf
cltd
add
in
pop
data16
mov
sbb
xor
mov
in
push
xchg
outsb
cmp
pop
dec
dec
xor
mov
mov
lret
js
sub
adc
cli
imul
imul
aam
inc
jge
inc
inc
mov
es
mov
in
pop
cmp
std
aas
aas
adc
pop
hlt
js
pop
adc
xor
cmp
stos
mov
mov
xorl
sub
sub
cmp
pop
out
pop
stos
sub
gs
movsb
jo
int
mov
pop
sbb
xchg
mov
fists
mov
or
mov
fildl
movsb
and
xchg
outsb
sbb
popa
xchg
xchg
cmp
stos
sbb
dec
rcrb
xchg
mov
icebp
adc
pop
mov
or
in
scas
cmc
out
repz
pop
mov
cmp
std
sub
lea
nop
test
pop
mov
sbb
mov
pop
lret
inc
push
jb
stc
scas
pop
pop
fwait
and
cmp
jp
into
mov
pop
add
mov
jmp
rclb
testl
adc
jae
out
aaa
lret
inc
leave
rcll
mov
mov
cmp
add
xchg
push
lcall
cmp
loope
sbb
sub
outsl
call
jmp
jmp
and
push
mov
push
ret
xor
adc
adc
cld
movsb
cltd
xchg
mov
loop
push
jnp
cwtl
in
call
lock
lret
lods
xor
test
dec
leave
jae
mov
ljmp
cmp
push
jae
jbe
add
pop
cmp
popa
mov
fcomps
xlat
stos
xchg
mov
sbb
cmp
push
push
dec
mov
aam
sbb
les
rclb
or
push
imul
add
sbb
and
clc
call
adc
subb
scas
loope
lea
int3
xor
push
mov
mov
fstpl
xor
rorl
sarb
daa
pop
sbb
cmp
mov
mov
push
push
aam
mov
stos
shl
add
loop
mov
inc
lea
cmpsb
mov
cmpsb
inc
push
cmp
shr
push
and
in
or
test
adc
aam
int3
mov
xchg
decl
adc
cld
dec
pop
pop
shlb
pusha
add
mov
aam
xchg
rolb
xchg
mov
negb
int
dec
std
xor
lock
mov
das
iret
std
call
dec
jg
fwait
cmp
ficomps
loop,pt
push
loopne
insb
out
and
pop
sahf
in
push
out
jle
fisttpl
mov
sub
fistpll
in
cmp
jb
addb
pop
loope
and
mov
xor
sub
mov
into
pop
cmc
std
dec
call
push
bound
loop
lret
in
push
lcall
ficomps
iret
loope
mov
fwait
xchg
hlt
xchg
mov
out
call
fidivrl
lahf
es
fsubs
aaa
sbb
orl
mov
leave
pop
pop
in
mov
lcall
xchg
add
cs
notl
mov
out
add
and
stos
outsl
jp
les
lret
push
in
fstpl
insb
fidivrl
pushfw
or
fdivp
in
mov
mov
leave
pop
aam
dec
inc
cmp
lods
fists
add
inc
mov
rol
or
inc
inc
fdivrs
pop
fcoms
outsb
jle
xlat
xor
imul
cmpsl
mov
cwtl
or
mov
push
daa
insb
adc
pop
sbb
cltd
sub
mov
dec
clc
insb
inc
lods
inc
mov
sbb
lds
push
lahf
xchg
or
mov
in
out
push
addl
add
lret
scas
jmp
cli
push
ror
es
rclb
pop
lods
cmpsb
or
or
insb
push
inc
mov
cmp
cmp
mov
jb
or
shrb
push
lods
mov
fsubs
stos
in
pop
mov
xchg
sbb
or
sahf
cmp
or
sarl
jne
adc
and
sub
mov
cs
cld
xchg
push
fidivrl
bound
pop
das
sbb
mov
xchg
or
daa
push
cwtl
in
pushf
sahf
mov
shlb
xor
mov
fisubrs
neg
inc
lods
call
or
xchg
cmp
mov
push
inc
mov
insb
xchg
out
lret
cld
and
rclb
inc
jecxz
add
jmp
hlt
adc
pop
daa
dec
jmp
mov
lods
jae
fwait
xchg
icebp
pop
mov
dec
adc
lcall
xor
adc
lods
aad
clc
invd
adc
or
popf
cmp
jbe
test
call
mov
xchg
xor
bound
xlat
imul
inc
cmpsb
std
push
add
pop
fldl
subb
mov
mov
mov
jmp
mov
lea
push
aaa
cmp
sbb
sub
hlt
sbb
daa
dec
mov
xchg
rol
inc
aam
or
ss
cmpsl
sub
stc
insl
inc
dec
fmuls
fmuls
xchg
aam
jnp
rorb
mov
xchg
in
sarl
xchg
xchg
xor
in
fidivrs
ja
bts
sbb
clc
mov
xchg
je
pop
imul
insb
into
xchg
orl
adc
addb
inc
inc
fisttpl
pop
jmp
xchg
push
lret
jnp
mov
mov
jns
aaa
xchg
add
jno
dec
in
sbb
fldt
fnstenv
pop
pusha
cwtl
jl
pop
stos
jb
mov
jb
pop
daa
xchg
test
hlt
in
popf
lcall
imul
jns
movsl
js
dec
push
mov
dec
gs
jp
cwtl
cmpsl
jg
imul
pop
ficomps
mov
push
neg
mov
pop
into
inc
xchg
ficompl
xchg
mov
dec
call
jmp
lret
mov
movsb
push
sub
xchg
inc
cwtl
cmp
xchg
mov
push
jae
mov
inc
clc
enter
decl
sbb
adc
dec
fstpt
jno
or
mov
push
pop
dec
fadds
sti
add
stos
inc
fdiv
mov
lret
inc
jne
cltd
adc
mov
lret
adc
mov
imul
lea
inc
xor
lods
mov
inc
in
sub
dec
add
loopne
inc
jmp
mov
orb
mov
jbe
ret
adc
push
notb
and
ljmp
mov
and
pop
mov
rclb
cs
add
xorl
push
or
aas
icebp
mov
enter
int3
cmp
dec
jbe,pt
xor
sbb
in
rcr
sub
dec
out
stos
pop
iret
or
loope
fstp
push
in
xorl
test
add
lahf
ja
jb
pop
fiaddl
mov
stos
lds
leave
jge
fimuls
cmp
and
mov
lea
mov
data16
into
mull
or
std
jg
mul
jge
sub
xchg
imul
and
jb
dec
insl
sub
add
into
rcrl
cmp
inc
mov
mov
pop
sub
imul
data16
pop
stos
pop
punpckldq
jbe
jae
repz
jb
push
divl
add
gs
les
testl
sbb
pop
mov
pop
daa
shr
add
in
xchg
inc
mov
sbb
pop
push
mov
cltd
das
xor
mov
daa
push
repz
adc
lods
push
push
lea
dec
pop
mov
push
mov
pop
jo
jnp
fldt
call
loopne
pop
loopne
pop
mov
xchg
push
jl
in
fisubrl
sbb
pop
rorb
jno
fwait
mov
shll
sbb
xor
call
xor
ret
mov
sbbl
mull
lods
out
inc
jbe
inc
sbb
repz
xchg
sbb
dec
or
adc
xor
sub
mov
mov
push
xchg
divb
dec
mov
pop
ljmp
sbb
xchg
in
cmp
fcom
pop
xor
cmovbe
cmp
mov
daa
mov
and
flds
sbb
sbb
cltd
nop
sub
aam
dec
pop
or
dec
out
mov
add
sbb
dec
iret
mov
test
pop
mov
ja
bound
sbb
mov
cmp
lock
xchg
jno
fs
mov
jmp
je
inc
mov
push
nop
fldt
mov
push
cwtl
lcall
addr16
cmp
pop
adc
hlt
mov
fstpt
mov
mov
cmp
mov
add
cmc
xchg
sahf
xchg
jb
sub
xchg
lods
dec
inc
and
bound
push
push
imul
adc
sbb
mov
aaa
js
loop
movsb
lea
pop
lret
pop
xor
fs
dec
cmpsb
lods
xchg
xor
arpl
mov
mov
jmp
add
ret
dec
jmp
ficomps
add
cs
rcll
add
xlat
aas
xchg
xchg
xor
sub
cmp
mov
test
xchg
xor
jnp
xor
jmp
fistpl
ds
jmp
push
sahf
in
negb
lea
adc
sub
inc
jns
mov
cld
adc
inc
sti
adc
or
test
aad
in
jno
mov
xor
int3
imul
pusha
ret
cmp
adc
jno
aad
fcomps
push
das
xchg
mov
repnz
dec
sub
test
or
ja
or
add
call
inc
nop
mov
cmpl
push
pop
or
sbb
jle
add
